
4e5aac1267b4dd6d72ba7903928e3101fe0088af21611cfe6ebae5919ada75ce.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x28
   140001004:	mov    eax,DWORD PTR [rip+0x38316]        # 0x140039320
   14000100a:	test   eax,eax
   14000100c:	jns    0x140001055
   14000100e:	mov    eax,DWORD PTR [rip+0x3823c]        # 0x140039250
   140001014:	test   eax,eax
   140001016:	jns    0x140001027
   140001018:	mov    rcx,QWORD PTR [rip+0x38239]        # 0x140039258
   14000101f:	call   QWORD PTR [rip+0x1a1db]        # 0x14001b200
   140001025:	jmp    0x140001031
   140001027:	mov    DWORD PTR [rip+0x3821f],0xffffffff        # 0x140039250
   140001031:	cmp    eax,0xd
   140001034:	jne    0x14000105f
   140001036:	mov    rcx,QWORD PTR [rip+0x3821b]        # 0x140039258
   14000103d:	call   QWORD PTR [rip+0x1a1bd]        # 0x14001b200
   140001043:	cmp    eax,0xa
   140001046:	je     0x140001064
   140001048:	mov    DWORD PTR [rip+0x38202],eax        # 0x140039250
   14000104e:	mov    eax,0xa
   140001053:	jmp    0x14000105f
   140001055:	mov    DWORD PTR [rip+0x382c1],0xffffffff        # 0x140039320
   14000105f:	cmp    eax,0xa
   140001062:	jne    0x14000106a
   140001064:	inc    DWORD PTR [rip+0x381f6]        # 0x140039260
   14000106a:	add    rsp,0x28
   14000106e:	ret    
   14000106f:	int3   
   140001070:	sub    rsp,0x28
   140001074:	call   0x140001000
   140001079:	mov    DWORD PTR [rip+0x382a1],eax        # 0x140039320
   14000107f:	add    rsp,0x28
   140001083:	ret    
   140001084:	int3   
   140001085:	int3   
   140001086:	int3   
   140001087:	int3   
   140001088:	int3   
   140001089:	int3   
   14000108a:	int3   
   14000108b:	int3   
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	mov    QWORD PTR [rsp+0x8],rcx
   140001095:	push   rdi
   140001096:	sub    rsp,0x30
   14000109a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400010a3:	mov    QWORD PTR [rsp+0x48],rbx
   1400010a8:	mov    QWORD PTR [rsp+0x50],rsi
   1400010ad:	mov    rbx,r8
   1400010b0:	mov    rdi,rdx
   1400010b3:	mov    rsi,rcx
   1400010b6:	call   QWORD PTR [rip+0x1a6dc]        # 0x14001b798
   1400010bc:	nop
   1400010bd:	lea    rax,[rip+0x1ae34]        # 0x14001bef8
   1400010c4:	mov    QWORD PTR [rsi],rax
   1400010c7:	lea    rax,[rip+0x1adf2]        # 0x14001bec0
   1400010ce:	mov    QWORD PTR [rsi+0x8],rax
   1400010d2:	lea    rax,[rip+0x1adbf]        # 0x14001be98
   1400010d9:	mov    QWORD PTR [rsi+0x10],rax
   1400010dd:	lea    rax,[rip+0x1ad94]        # 0x14001be78
   1400010e4:	mov    QWORD PTR [rsi+0x18],rax
   1400010e8:	lea    rax,[rip+0x1ad39]        # 0x14001be28
   1400010ef:	mov    QWORD PTR [rsi+0x20],rax
   1400010f3:	lea    rax,[rip+0x1acfe]        # 0x14001bdf8
   1400010fa:	mov    QWORD PTR [rsi+0x28],rax
   1400010fe:	mov    QWORD PTR [rsi+0x40],rdi
   140001102:	lea    rcx,[rsi+0x48]
   140001106:	or     r8d,0xffffffff
   14000110a:	mov    rdx,rbx
   14000110d:	call   QWORD PTR [rip+0x1a4f5]        # 0x14001b608
   140001113:	nop
   140001114:	lea    rcx,[rsi+0x50]
   140001118:	call   QWORD PTR [rip+0x1a4f2]        # 0x14001b610
   14000111e:	nop
   14000111f:	lea    rcx,[rsi+0x58]
   140001123:	call   QWORD PTR [rip+0x1a4e7]        # 0x14001b610
   140001129:	nop
   14000112a:	xor    eax,eax
   14000112c:	or     rcx,0xffffffffffffffff
   140001130:	lea    rdi,[rip+0x1acb1]        # 0x14001bde8
   140001137:	repnz scas al,BYTE PTR es:[rdi]
   140001139:	not    rcx
   14000113c:	lea    rdx,[rcx-0x1]
   140001140:	lea    rcx,[rip+0x1aca1]        # 0x14001bde8
   140001147:	call   QWORD PTR [rip+0x1a4cb]        # 0x14001b618
   14000114d:	mov    QWORD PTR [rsi+0x60],rax
   140001151:	lea    rcx,[rsi+0x68]
   140001155:	call   QWORD PTR [rip+0x1a4b5]        # 0x14001b610
   14000115b:	nop
   14000115c:	mov    rax,rsi
   14000115f:	mov    rbx,QWORD PTR [rsp+0x48]
   140001164:	mov    rsi,QWORD PTR [rsp+0x50]
   140001169:	add    rsp,0x30
   14000116d:	pop    rdi
   14000116e:	ret    
   14000116f:	int3   
   140001170:	mov    QWORD PTR [rcx+0x38],rdx
   140001174:	ret    
   140001175:	int3   
   140001176:	int3   
   140001177:	int3   
   140001178:	int3   
   140001179:	int3   
   14000117a:	int3   
   14000117b:	int3   
   14000117c:	int3   
   14000117d:	int3   
   14000117e:	int3   
   14000117f:	int3   
   140001180:	sub    rsp,0x28
   140001184:	add    rcx,0x68
   140001188:	call   QWORD PTR [rip+0x1a472]        # 0x14001b600
   14000118e:	mov    al,0x1
   140001190:	add    rsp,0x28
   140001194:	ret    
   140001195:	int3   
   140001196:	int3   
   140001197:	int3   
   140001198:	int3   
   140001199:	int3   
   14000119a:	int3   
   14000119b:	int3   
   14000119c:	int3   
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	rex push rdi
   1400011a2:	sub    rsp,0x40
   1400011a6:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1400011af:	mov    QWORD PTR [rsp+0x50],rbx
   1400011b4:	mov    QWORD PTR [rsp+0x58],rsi
   1400011b9:	mov    rsi,rdx
   1400011bc:	lea    rcx,[rsp+0x60]
   1400011c1:	call   QWORD PTR [rip+0x1a449]        # 0x14001b610
   1400011c7:	nop
   1400011c8:	lea    rdx,[rsp+0x30]
   1400011cd:	mov    rcx,rsi
   1400011d0:	call   QWORD PTR [rip+0x1a4f2]        # 0x14001b6c8
   1400011d6:	nop
   1400011d7:	lea    rdx,[rsp+0x68]
   1400011dc:	mov    rcx,rax
   1400011df:	call   QWORD PTR [rip+0x1a403]        # 0x14001b5e8
   1400011e5:	nop
   1400011e6:	mov    rcx,rax
   1400011e9:	call   QWORD PTR [rip+0x1a401]        # 0x14001b5f0
   1400011ef:	mov    rdi,rax
   1400011f2:	mov    rcx,rsi
   1400011f5:	call   QWORD PTR [rip+0x1a4d5]        # 0x14001b6d0
   1400011fb:	mov    ebx,eax
   1400011fd:	mov    rcx,rsi
   140001200:	call   QWORD PTR [rip+0x1a4d2]        # 0x14001b6d8
   140001206:	mov    r8d,eax
   140001209:	mov    QWORD PTR [rsp+0x20],rdi
   14000120e:	mov    r9d,ebx
   140001211:	lea    rdx,[rip+0x1ad80]        # 0x14001bf98
   140001218:	lea    rcx,[rsp+0x60]
   14000121d:	call   QWORD PTR [rip+0x1a3d5]        # 0x14001b5f8
   140001223:	nop
   140001224:	lea    rcx,[rsp+0x68]
   140001229:	call   QWORD PTR [rip+0x1a3f1]        # 0x14001b620
   14000122f:	nop
   140001230:	lea    rcx,[rsp+0x30]
   140001235:	call   QWORD PTR [rip+0x1a3ed]        # 0x14001b628
   14000123b:	lea    rdx,[rsp+0x68]
   140001240:	lea    rcx,[rsp+0x60]
   140001245:	call   QWORD PTR [rip+0x1a39d]        # 0x14001b5e8
   14000124b:	nop
   14000124c:	mov    rcx,rax
   14000124f:	call   QWORD PTR [rip+0x1a39b]        # 0x14001b5f0
   140001255:	mov    rbx,rax
   140001258:	call   QWORD PTR [rip+0x19f8a]        # 0x14001b1e8
   14000125e:	mov    r8,rbx
   140001261:	lea    rdx,[rip+0x1ad20]        # 0x14001bf88
   140001268:	lea    rcx,[rax+0x60]
   14000126c:	call   QWORD PTR [rip+0x19f7e]        # 0x14001b1f0
   140001272:	nop
   140001273:	lea    rcx,[rsp+0x68]
   140001278:	call   QWORD PTR [rip+0x1a3a2]        # 0x14001b620
   14000127e:	nop
   14000127f:	lea    rcx,[rsp+0x60]
   140001284:	call   QWORD PTR [rip+0x1a39e]        # 0x14001b628
   14000128a:	xor    al,al
   14000128c:	mov    rbx,QWORD PTR [rsp+0x50]
   140001291:	mov    rsi,QWORD PTR [rsp+0x58]
   140001296:	add    rsp,0x40
   14000129a:	pop    rdi
   14000129b:	ret    
   14000129c:	int3   
   14000129d:	int3   
   14000129e:	int3   
   14000129f:	int3   
   1400012a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400012a5:	push   rdi
   1400012a6:	sub    rsp,0x40
   1400012aa:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1400012b3:	mov    QWORD PTR [rsp+0x58],rbx
   1400012b8:	mov    QWORD PTR [rsp+0x60],rsi
   1400012bd:	mov    rsi,r8
   1400012c0:	mov    rdi,rdx
   1400012c3:	movzx  eax,BYTE PTR [rsp+0x70]
   1400012c8:	mov    BYTE PTR [rsp+0x20],al
   1400012cc:	mov    edx,0x28
   1400012d1:	lea    r8d,[rdx-0x20]
   1400012d5:	call   QWORD PTR [rip+0x1a2cd]        # 0x14001b5a8
   1400012db:	mov    rbx,rax
   1400012de:	mov    QWORD PTR [rsp+0x30],rax
   1400012e3:	lea    rcx,[rax+0x18]
   1400012e7:	test   rcx,rcx
   1400012ea:	je     0x1400012f6
   1400012ec:	mov    rdx,rdi
   1400012ef:	call   QWORD PTR [rip+0x1a2bb]        # 0x14001b5b0
   1400012f5:	nop
   1400012f6:	lea    rcx,[rbx+0x20]
   1400012fa:	test   rcx,rcx
   1400012fd:	je     0x140001309
   1400012ff:	mov    rdx,rsi
   140001302:	call   QWORD PTR [rip+0x1a2a8]        # 0x14001b5b0
   140001308:	nop
   140001309:	mov    rax,rbx
   14000130c:	mov    rbx,QWORD PTR [rsp+0x58]
   140001311:	mov    rsi,QWORD PTR [rsp+0x60]
   140001316:	add    rsp,0x40
   14000131a:	pop    rdi
   14000131b:	ret    
   14000131c:	int3   
   14000131d:	int3   
   14000131e:	int3   
   14000131f:	int3   
   140001320:	cmp    rdx,r8
   140001323:	je     0x14000135c
   140001325:	mov    QWORD PTR [rsp+0x8],rbx
   14000132a:	push   rdi
   14000132b:	sub    rsp,0x20
   14000132f:	mov    rbx,r8
   140001332:	mov    rdi,rdx
   140001335:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140001340:	sub    rbx,0x8
   140001344:	mov    rcx,rbx
   140001347:	call   QWORD PTR [rip+0x1a2db]        # 0x14001b628
   14000134d:	cmp    rbx,rdi
   140001350:	jne    0x140001340
   140001352:	mov    rbx,QWORD PTR [rsp+0x30]
   140001357:	add    rsp,0x20
   14000135b:	pop    rdi
   14000135c:	repz ret 
   14000135e:	int3   
   14000135f:	int3   
   140001360:	mov    QWORD PTR [rsp+0x8],rbx
   140001365:	mov    QWORD PTR [rsp+0x10],rsi
   14000136a:	push   rdi
   14000136b:	sub    rsp,0x30
   14000136f:	mov    rsi,rdx
   140001372:	lea    r8,[rcx+0x20]
   140001376:	lea    rdx,[rcx+0x18]
   14000137a:	mov    rdi,rcx
   14000137d:	xor    r9d,r9d
   140001380:	mov    rcx,rsi
   140001383:	mov    BYTE PTR [rsp+0x20],0x0
   140001388:	call   0x1400012a0
   14000138d:	test   BYTE PTR [rdi],0x1
   140001390:	mov    rbx,rax
   140001393:	je     0x14000139b
   140001395:	or     QWORD PTR [rax],0x1
   140001399:	jmp    0x14000139f
   14000139b:	and    QWORD PTR [rax],0xfffffffffffffffe
   14000139f:	mov    rcx,QWORD PTR [rdi+0x8]
   1400013a3:	test   rcx,rcx
   1400013a6:	je     0x1400013bd
   1400013a8:	mov    rdx,rsi
   1400013ab:	call   0x140001360
   1400013b0:	mov    QWORD PTR [rbx+0x8],rax
   1400013b4:	and    QWORD PTR [rax],0x3
   1400013b8:	or     QWORD PTR [rax],rbx
   1400013bb:	jmp    0x1400013c5
   1400013bd:	mov    QWORD PTR [rax+0x8],0x0
   1400013c5:	mov    rcx,QWORD PTR [rdi+0x10]
   1400013c9:	test   rcx,rcx
   1400013cc:	je     0x1400013f4
   1400013ce:	mov    rdx,rsi
   1400013d1:	call   0x140001360
   1400013d6:	mov    QWORD PTR [rbx+0x10],rax
   1400013da:	and    QWORD PTR [rax],0x3
   1400013de:	or     QWORD PTR [rax],rbx
   1400013e1:	mov    rax,rbx
   1400013e4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400013e9:	mov    rsi,QWORD PTR [rsp+0x48]
   1400013ee:	add    rsp,0x30
   1400013f2:	pop    rdi
   1400013f3:	ret    
   1400013f4:	mov    rsi,QWORD PTR [rsp+0x48]
   1400013f9:	mov    QWORD PTR [rbx+0x10],0x0
   140001401:	mov    rax,rbx
   140001404:	mov    rbx,QWORD PTR [rsp+0x40]
   140001409:	add    rsp,0x30
   14000140d:	pop    rdi
   14000140e:	ret    
   14000140f:	int3   
   140001410:	sub    rcx,0x10
   140001414:	jmp    QWORD PTR [rip+0x1a33e]        # 0x14001b758
   14000141a:	int3   
   14000141b:	int3   
   14000141c:	int3   
   14000141d:	int3   
   14000141e:	int3   
   14000141f:	int3   
   140001420:	sub    rcx,0x20
   140001424:	jmp    0x140002380
   140001429:	int3   
   14000142a:	int3   
   14000142b:	int3   
   14000142c:	int3   
   14000142d:	int3   
   14000142e:	int3   
   14000142f:	int3   
   140001430:	sub    rcx,0x18
   140001434:	jmp    QWORD PTR [rip+0x1a31e]        # 0x14001b758
   14000143a:	int3   
   14000143b:	int3   
   14000143c:	int3   
   14000143d:	int3   
   14000143e:	int3   
   14000143f:	int3   
   140001440:	sub    rcx,0x8
   140001444:	jmp    0x140002380
   140001449:	int3   
   14000144a:	int3   
   14000144b:	int3   
   14000144c:	int3   
   14000144d:	int3   
   14000144e:	int3   
   14000144f:	int3   
   140001450:	sub    rcx,0x28
   140001454:	jmp    0x140002380
   140001459:	int3   
   14000145a:	int3   
   14000145b:	int3   
   14000145c:	int3   
   14000145d:	int3   
   14000145e:	int3   
   14000145f:	int3   
   140001460:	sub    rcx,0x20
   140001464:	jmp    QWORD PTR [rip+0x1a2ee]        # 0x14001b758
   14000146a:	int3   
   14000146b:	int3   
   14000146c:	int3   
   14000146d:	int3   
   14000146e:	int3   
   14000146f:	int3   
   140001470:	sub    rcx,0x10
   140001474:	jmp    0x140002380
   140001479:	int3   
   14000147a:	int3   
   14000147b:	int3   
   14000147c:	int3   
   14000147d:	int3   
   14000147e:	int3   
   14000147f:	int3   
   140001480:	sub    rcx,0x8
   140001484:	jmp    QWORD PTR [rip+0x1a2ce]        # 0x14001b758
   14000148a:	int3   
   14000148b:	int3   
   14000148c:	int3   
   14000148d:	int3   
   14000148e:	int3   
   14000148f:	int3   
   140001490:	sub    rcx,0x28
   140001494:	jmp    QWORD PTR [rip+0x1a2be]        # 0x14001b758
   14000149a:	int3   
   14000149b:	int3   
   14000149c:	int3   
   14000149d:	int3   
   14000149e:	int3   
   14000149f:	int3   
   1400014a0:	sub    rcx,0x18
   1400014a4:	jmp    0x140002380
   1400014a9:	int3   
   1400014aa:	int3   
   1400014ab:	int3   
   1400014ac:	int3   
   1400014ad:	int3   
   1400014ae:	int3   
   1400014af:	int3   
   1400014b0:	mov    r11,rsp
   1400014b3:	push   rdi
   1400014b4:	push   r12
   1400014b6:	push   r13
   1400014b8:	push   r14
   1400014ba:	push   r15
   1400014bc:	sub    rsp,0x160
   1400014c3:	mov    QWORD PTR [rsp+0x98],0xfffffffffffffffe
   1400014cf:	mov    QWORD PTR [r11+0x8],rbx
   1400014d3:	mov    QWORD PTR [r11+0x10],rbp
   1400014d7:	mov    QWORD PTR [r11+0x18],rsi
   1400014db:	mov    rax,QWORD PTR [rip+0x27d3e]        # 0x140029220
   1400014e2:	xor    rax,rsp
   1400014e5:	mov    QWORD PTR [rsp+0x150],rax
   1400014ed:	movabs rax,0x7674726e666261
   1400014f7:	mov    QWORD PTR [r11-0x48],rax
   1400014fb:	movabs rax,0xb090d0a0c0807
   140001505:	mov    QWORD PTR [r11-0x40],rax
   140001509:	xor    eax,eax
   14000150b:	mov    QWORD PTR [rip+0x37d56],rax        # 0x140039268
   140001512:	mov    QWORD PTR [rip+0x37d57],rax        # 0x140039270
   140001519:	mov    QWORD PTR [rip+0x27d28],rax        # 0x140029248
   140001520:	mov    ecx,DWORD PTR [rip+0x37d56]        # 0x14003927c
   140001526:	cmp    ecx,0xffffffff
   140001529:	je     0x14000216d
   14000152f:	lea    rbx,[rip+0x37d5a]        # 0x140039290
   140001536:	lea    r15,[rip+0xffffffffffffeac3]        # 0x140000000
   14000153d:	nop    DWORD PTR [rax]
   140001540:	mov    eax,DWORD PTR [rip+0x37d1a]        # 0x140039260
   140001546:	mov    DWORD PTR [rip+0x27cf4],eax        # 0x140029240
   14000154c:	call   QWORD PTR [rip+0x19c4e]        # 0x14001b1a0
   140001552:	mov    ebp,DWORD PTR [rip+0x37d24]        # 0x14003927c
   140001558:	test   eax,eax
   14000155a:	jne    0x140001570
   14000155c:	cmp    ebp,0x5f
   14000155f:	jne    0x1400016a1
   140001565:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140001570:	mov    rax,QWORD PTR [rip+0x37cf1]        # 0x140039268
   140001577:	cmp    rax,0x7f
   14000157b:	jae    0x14000158b
   14000157d:	mov    BYTE PTR [rax+rbx*1],bpl
   140001581:	inc    rax
   140001584:	mov    QWORD PTR [rip+0x37cdd],rax        # 0x140039268
   14000158b:	call   QWORD PTR [rip+0x37cf7]        # 0x140039288
   140001591:	mov    DWORD PTR [rip+0x37ce5],eax        # 0x14003927c
   140001597:	mov    ecx,eax
   140001599:	call   QWORD PTR [rip+0x19c09]        # 0x14001b1a8
   14000159f:	test   eax,eax
   1400015a1:	je     0x1400015ab
   1400015a3:	mov    ebp,DWORD PTR [rip+0x37cd3]        # 0x14003927c
   1400015a9:	jmp    0x140001570
   1400015ab:	mov    ebp,DWORD PTR [rip+0x37ccb]        # 0x14003927c
   1400015b1:	cmp    ebp,0x5f
   1400015b4:	je     0x140001570
   1400015b6:	mov    rax,QWORD PTR [rip+0x37cab]        # 0x140039268
   1400015bd:	mov    BYTE PTR [rax+rbx*1],0x0
   1400015c1:	mov    rdi,QWORD PTR [rip+0x37cb8]        # 0x140039280
   1400015c8:	test   rdi,rdi
   1400015cb:	je     0x1400015ed
   1400015cd:	mov    rax,rbx
   1400015d0:	sub    rdi,rbx
   1400015d3:	movzx  edx,BYTE PTR [rax]
   1400015d6:	movzx  ecx,BYTE PTR [rax+rdi*1]
   1400015da:	sub    edx,ecx
   1400015dc:	jne    0x1400015e5
   1400015de:	inc    rax
   1400015e1:	test   ecx,ecx
   1400015e3:	jne    0x1400015d3
   1400015e5:	test   edx,edx
   1400015e7:	je     0x1400017c4
   1400015ed:	mov    rdi,QWORD PTR [rip+0x37d1c]        # 0x140039310
   1400015f4:	test   rdi,rdi
   1400015f7:	je     0x14000161a
   1400015f9:	mov    rax,rbx
   1400015fc:	sub    rdi,rbx
   1400015ff:	nop
   140001600:	movzx  edx,BYTE PTR [rax]
   140001603:	movzx  ecx,BYTE PTR [rax+rdi*1]
   140001607:	sub    edx,ecx
   140001609:	jne    0x140001612
   14000160b:	inc    rax
   14000160e:	test   ecx,ecx
   140001610:	jne    0x140001600
   140001612:	test   edx,edx
   140001614:	je     0x1400017ce
   14000161a:	movsx  eax,BYTE PTR [rip+0x37c6f]        # 0x140039290
   140001621:	add    eax,0xffffffbe
   140001624:	cmp    eax,0x33
   140001627:	ja     0x140002166
   14000162d:	cdqe   
   14000162f:	movzx  eax,BYTE PTR [r15+rax*1+0x21c8]
   140001638:	mov    ecx,DWORD PTR [r15+rax*4+0x21a0]
   140001640:	add    rcx,r15
   140001643:	jmp    rcx
   140001645:	lea    rsi,[rip+0x37c45]        # 0x140039291
   14000164c:	lea    rdi,[rip+0x1ab21]        # 0x14001c174
   140001653:	mov    ecx,0x6
   140001658:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000165a:	je     0x1400017d8
   140001660:	cmp    BYTE PTR [rip+0x37c2a],0x0        # 0x140039291
   140001667:	jne    0x140002166
   14000166d:	jmp    0x140001693
   14000166f:	movzx  eax,BYTE PTR [rip+0x37c1b]        # 0x140039291
   140001676:	test   al,al
   140001678:	je     0x140001693
   14000167a:	cmp    al,0x72
   14000167c:	je     0x140001686
   14000167e:	cmp    al,0x52
   140001680:	jne    0x140002166
   140001686:	cmp    BYTE PTR [rip+0x37c05],0x0        # 0x140039292
   14000168d:	jne    0x140002166
   140001693:	cmp    ebp,0x22
   140001696:	je     0x1400016a1
   140001698:	cmp    ebp,0x27
   14000169b:	jne    0x1400017e2
   1400016a1:	lea    eax,[rbp-0x22]
   1400016a4:	cmp    eax,0x17
   1400016a7:	ja     0x1400017a8
   1400016ad:	cdqe   
   1400016af:	movzx  eax,BYTE PTR [r15+rax*1+0x221c]
   1400016b8:	mov    ecx,DWORD PTR [r15+rax*4+0x21fc]
   1400016c0:	add    rcx,r15
   1400016c3:	jmp    rcx
   1400016c5:	call   QWORD PTR [rip+0x37bbd]        # 0x140039288
   1400016cb:	mov    ecx,eax
   1400016cd:	mov    DWORD PTR [rip+0x37ba9],eax        # 0x14003927c
   1400016d3:	cmp    eax,0xffffffff
   1400016d6:	je     0x14000216d
   1400016dc:	cmp    eax,0xa
   1400016df:	jne    0x1400016c5
   1400016e1:	jmp    0x140001540
   1400016e6:	lea    rcx,[rsp+0x38]
   1400016eb:	call   QWORD PTR [rip+0x19b67]        # 0x14001b258
   1400016f1:	nop
   1400016f2:	movzx  edx,BYTE PTR [rip+0x37b83]        # 0x14003927c
   1400016f9:	lea    rcx,[rsp+0x38]
   1400016fe:	call   QWORD PTR [rip+0x19b4c]        # 0x14001b250
   140001704:	call   QWORD PTR [rip+0x37b7e]        # 0x140039288
   14000170a:	mov    DWORD PTR [rip+0x37b6c],eax        # 0x14003927c
   140001710:	cmp    eax,0x78
   140001713:	sete   dil
   140001717:	test   dil,dil
   14000171a:	je     0x140001736
   14000171c:	movzx  edx,al
   14000171f:	lea    rcx,[rsp+0x38]
   140001724:	call   QWORD PTR [rip+0x19b26]        # 0x14001b250
   14000172a:	call   QWORD PTR [rip+0x37b58]        # 0x140039288
   140001730:	mov    DWORD PTR [rip+0x37b46],eax        # 0x14003927c
   140001736:	test   dil,dil
   140001739:	je     0x140001745
   14000173b:	mov    ecx,eax
   14000173d:	call   QWORD PTR [rip+0x19a6d]        # 0x14001b1b0
   140001743:	jmp    0x14000174d
   140001745:	mov    ecx,eax
   140001747:	call   QWORD PTR [rip+0x19a6b]        # 0x14001b1b8
   14000174d:	test   eax,eax
   14000174f:	je     0x140001771
   140001751:	movzx  edx,BYTE PTR [rip+0x37b24]        # 0x14003927c
   140001758:	lea    rcx,[rsp+0x38]
   14000175d:	call   QWORD PTR [rip+0x19aed]        # 0x14001b250
   140001763:	call   QWORD PTR [rip+0x37b1f]        # 0x140039288
   140001769:	mov    DWORD PTR [rip+0x37b0d],eax        # 0x14003927c
   14000176f:	jmp    0x140001736
   140001771:	mov    r8d,0xa
   140001777:	lea    rdx,[rsp+0x30]
   14000177c:	lea    rcx,[rsp+0x38]
   140001781:	call   QWORD PTR [rip+0x19ac1]        # 0x14001b248
   140001787:	mov    QWORD PTR [rip+0x37b8a],rax        # 0x140039318
   14000178e:	cmp    BYTE PTR [rsp+0x30],0x0
   140001793:	jne    0x1400017ec
   140001795:	lea    rcx,[rsp+0x38]
   14000179a:	call   QWORD PTR [rip+0x19e80]        # 0x14001b620
   1400017a0:	mov    ecx,DWORD PTR [rip+0x37ad6]        # 0x14003927c
   1400017a6:	jmp    0x1400017b6
   1400017a8:	call   QWORD PTR [rip+0x37ada]        # 0x140039288
   1400017ae:	mov    ecx,eax
   1400017b0:	mov    DWORD PTR [rip+0x37ac6],eax        # 0x14003927c
   1400017b6:	cmp    ecx,0xffffffff
   1400017b9:	je     0x14000216d
   1400017bf:	jmp    0x140001540
   1400017c4:	mov    eax,0x3
   1400017c9:	jmp    0x14000216f
   1400017ce:	mov    eax,0x5
   1400017d3:	jmp    0x14000216f
   1400017d8:	mov    eax,0x2
   1400017dd:	jmp    0x14000216f
   1400017e2:	mov    eax,0x6
   1400017e7:	jmp    0x14000216f
   1400017ec:	lea    rcx,[rsp+0x38]
   1400017f1:	call   QWORD PTR [rip+0x19e29]        # 0x14001b620
   1400017f7:	mov    eax,0xe
   1400017fc:	jmp    0x14000216f
   140001801:	xor    r12d,r12d
   140001804:	lea    r14d,[r12+0x1]
   140001809:	xor    r13d,r13d
   14000180c:	call   QWORD PTR [rip+0x37a76]        # 0x140039288
   140001812:	mov    edx,eax
   140001814:	mov    DWORD PTR [rip+0x37a62],eax        # 0x14003927c
   14000181a:	xor    bl,bl
   14000181c:	cmp    eax,0xffffffff
   14000181f:	je     0x140001e27
   140001825:	test   r14d,r14d
   140001828:	je     0x140001845
   14000182a:	cmp    edx,0xa
   14000182d:	je     0x140001e27
   140001833:	test   r13d,r13d
   140001836:	je     0x140001845
   140001838:	cmp    edx,ebp
   14000183a:	je     0x140001e27
   140001840:	jmp    0x1400018e1
   140001845:	cmp    edx,ebp
   140001847:	jne    0x1400018e1
   14000184d:	call   QWORD PTR [rip+0x37ad5]        # 0x140039328
   140001853:	cmp    eax,ebp
   140001855:	jne    0x14000189c
   140001857:	call   QWORD PTR [rip+0x37a2b]        # 0x140039288
   14000185d:	mov    DWORD PTR [rip+0x37a19],eax        # 0x14003927c
   140001863:	test   r12d,r12d
   140001866:	jne    0x140001884
   140001868:	mov    r12d,0x1
   14000186e:	xor    r14d,r14d
   140001871:	mov    r13d,r12d
   140001874:	call   QWORD PTR [rip+0x37a0e]        # 0x140039288
   14000187a:	mov    edx,eax
   14000187c:	mov    DWORD PTR [rip+0x379fa],eax        # 0x14003927c
   140001882:	jmp    0x1400018e7
   140001884:	call   QWORD PTR [rip+0x379fe]        # 0x140039288
   14000188a:	mov    edx,eax
   14000188c:	mov    DWORD PTR [rip+0x379ea],eax        # 0x14003927c
   140001892:	cmp    eax,ebp
   140001894:	je     0x140001e1c
   14000189a:	jmp    0x1400018e7
   14000189c:	test   r12d,r12d
   14000189f:	je     0x140001e21
   1400018a5:	mov    rcx,QWORD PTR [rip+0x2799c]        # 0x140029248
   1400018ac:	cmp    rcx,0xffff
   1400018b3:	jae    0x1400018ce
   1400018b5:	movzx  eax,BYTE PTR [rip+0x379c0]        # 0x14003927c
   1400018bc:	mov    BYTE PTR [rcx+r15*1+0x39330],al
   1400018c4:	inc    rcx
   1400018c7:	mov    QWORD PTR [rip+0x2797a],rcx        # 0x140029248
   1400018ce:	call   QWORD PTR [rip+0x379b4]        # 0x140039288
   1400018d4:	mov    edx,eax
   1400018d6:	mov    DWORD PTR [rip+0x379a0],eax        # 0x14003927c
   1400018dc:	jmp    0x140001e12
   1400018e1:	mov    r13d,0x1
   1400018e7:	cmp    edx,0x5c
   1400018ea:	jne    0x140001b07
   1400018f0:	call   QWORD PTR [rip+0x37992]        # 0x140039288
   1400018f6:	mov    edx,eax
   1400018f8:	mov    DWORD PTR [rip+0x3797e],eax        # 0x14003927c
   1400018fe:	cmp    eax,0x78
   140001901:	jne    0x1400019c7
   140001907:	or     r8d,0xffffffff
   14000190b:	lea    rdx,[rip+0x1a85e]        # 0x14001c170
   140001912:	lea    rcx,[rsp+0x60]
   140001917:	call   QWORD PTR [rip+0x19ceb]        # 0x14001b608
   14000191d:	nop
   14000191e:	call   QWORD PTR [rip+0x37964]        # 0x140039288
   140001924:	mov    DWORD PTR [rip+0x37952],eax        # 0x14003927c
   14000192a:	mov    ecx,eax
   14000192c:	call   QWORD PTR [rip+0x1987e]        # 0x14001b1b0
   140001932:	test   eax,eax
   140001934:	je     0x14000196a
   140001936:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001940:	movzx  edx,BYTE PTR [rip+0x37935]        # 0x14003927c
   140001947:	lea    rcx,[rsp+0x60]
   14000194c:	call   QWORD PTR [rip+0x198fe]        # 0x14001b250
   140001952:	call   QWORD PTR [rip+0x37930]        # 0x140039288
   140001958:	mov    DWORD PTR [rip+0x3791e],eax        # 0x14003927c
   14000195e:	mov    ecx,eax
   140001960:	call   QWORD PTR [rip+0x1984a]        # 0x14001b1b0
   140001966:	test   eax,eax
   140001968:	jne    0x140001940
   14000196a:	lea    rcx,[rsp+0x60]
   14000196f:	call   QWORD PTR [rip+0x198cb]        # 0x14001b240
   140001975:	mov    rcx,rax
   140001978:	lea    r8,[rsp+0x50]
   14000197d:	lea    rdx,[rip+0x1a7e8]        # 0x14001c16c
   140001984:	call   QWORD PTR [rip+0x19836]        # 0x14001b1c0
   14000198a:	mov    rdx,QWORD PTR [rip+0x278b7]        # 0x140029248
   140001991:	cmp    rdx,0xffff
   140001998:	jae    0x1400019b1
   14000199a:	movzx  eax,BYTE PTR [rsp+0x50]
   14000199f:	mov    BYTE PTR [rdx+r15*1+0x39330],al
   1400019a7:	inc    rdx
   1400019aa:	mov    QWORD PTR [rip+0x27897],rdx        # 0x140029248
   1400019b1:	lea    rcx,[rsp+0x60]
   1400019b6:	call   QWORD PTR [rip+0x19c64]        # 0x14001b620
   1400019bc:	mov    edx,DWORD PTR [rip+0x378ba]        # 0x14003927c
   1400019c2:	jmp    0x140001e12
   1400019c7:	add    eax,0xffffffd0
   1400019ca:	cmp    eax,0x7
   1400019cd:	ja     0x140001a8c
   1400019d3:	or     r8d,0xffffffff
   1400019d7:	lea    rdx,[rip+0x1a40a]        # 0x14001bde8
   1400019de:	lea    rcx,[rsp+0x48]
   1400019e3:	call   QWORD PTR [rip+0x19c1f]        # 0x14001b608
   1400019e9:	nop
   1400019ea:	mov    DWORD PTR [rsp+0x38],0x0
   1400019f2:	mov    ecx,DWORD PTR [rip+0x37884]        # 0x14003927c
   1400019f8:	nop    DWORD PTR [rax+rax*1+0x0]
   140001a00:	movzx  edx,cl
   140001a03:	lea    rcx,[rsp+0x48]
   140001a08:	call   QWORD PTR [rip+0x19842]        # 0x14001b250
   140001a0e:	inc    DWORD PTR [rsp+0x38]
   140001a12:	call   QWORD PTR [rip+0x37870]        # 0x140039288
   140001a18:	mov    ecx,eax
   140001a1a:	mov    DWORD PTR [rip+0x3785c],eax        # 0x14003927c
   140001a20:	add    eax,0xffffffd0
   140001a23:	cmp    eax,0x7
   140001a26:	ja     0x140001a2f
   140001a28:	cmp    DWORD PTR [rsp+0x38],0x3
   140001a2d:	jl     0x140001a00
   140001a2f:	lea    rcx,[rsp+0x48]
   140001a34:	call   QWORD PTR [rip+0x19806]        # 0x14001b240
   140001a3a:	mov    rcx,rax
   140001a3d:	lea    r8,[rsp+0x38]
   140001a42:	lea    rdx,[rip+0x1a71f]        # 0x14001c168
   140001a49:	call   QWORD PTR [rip+0x19771]        # 0x14001b1c0
   140001a4f:	mov    rdx,QWORD PTR [rip+0x277f2]        # 0x140029248
   140001a56:	cmp    rdx,0xffff
   140001a5d:	jae    0x140001a76
   140001a5f:	movzx  eax,BYTE PTR [rsp+0x38]
   140001a64:	mov    BYTE PTR [rdx+r15*1+0x39330],al
   140001a6c:	inc    rdx
   140001a6f:	mov    QWORD PTR [rip+0x277d2],rdx        # 0x140029248
   140001a76:	lea    rcx,[rsp+0x48]
   140001a7b:	call   QWORD PTR [rip+0x19b9f]        # 0x14001b620
   140001a81:	mov    edx,DWORD PTR [rip+0x377f5]        # 0x14003927c
   140001a87:	jmp    0x140001e12
   140001a8c:	cmp    edx,0xa
   140001a8f:	jne    0x140001aa4
   140001a91:	call   QWORD PTR [rip+0x377f1]        # 0x140039288
   140001a97:	mov    edx,eax
   140001a99:	mov    DWORD PTR [rip+0x377dd],eax        # 0x14003927c
   140001a9f:	jmp    0x140001e12
   140001aa4:	lea    rcx,[rsp+0x140]
   140001aac:	call   QWORD PTR [rip+0x19716]        # 0x14001b1c8
   140001ab2:	mov    rcx,QWORD PTR [rip+0x2778f]        # 0x140029248
   140001ab9:	cmp    rcx,0xffff
   140001ac0:	jae    0x140001af4
   140001ac2:	test   rax,rax
   140001ac5:	jne    0x140001ad0
   140001ac7:	movzx  eax,BYTE PTR [rip+0x377ae]        # 0x14003927c
   140001ace:	jmp    0x140001ae2
   140001ad0:	lea    rdx,[rsp+0x140]
   140001ad8:	sub    rax,rdx
   140001adb:	mov    al,BYTE PTR [rsp+rax*1+0x148]
   140001ae2:	mov    BYTE PTR [rcx+r15*1+0x39330],al
   140001aea:	inc    rcx
   140001aed:	mov    QWORD PTR [rip+0x27754],rcx        # 0x140029248
   140001af4:	call   QWORD PTR [rip+0x3778e]        # 0x140039288
   140001afa:	mov    edx,eax
   140001afc:	mov    DWORD PTR [rip+0x3777a],eax        # 0x14003927c
   140001b02:	jmp    0x140001e12
   140001b07:	cmp    QWORD PTR [rip+0x47829],0x0        # 0x140049338
   140001b0f:	jne    0x140001ba6
   140001b15:	cmp    BYTE PTR [rip+0x37748],0x0        # 0x140039264
   140001b1c:	je     0x140001b72
   140001b1e:	cmp    edx,0x80
   140001b24:	jl     0x140001b72
   140001b26:	test   bl,bl
   140001b28:	jne    0x140001b72
   140001b2a:	lea    rcx,[rip+0x4780f]        # 0x140049340
   140001b31:	call   QWORD PTR [rip+0x19709]        # 0x14001b240
   140001b37:	mov    rdi,rax
   140001b3a:	xor    r9d,r9d
   140001b3d:	xor    r8d,r8d
   140001b40:	xor    edx,edx
   140001b42:	lea    rcx,[rsp+0xc0]
   140001b4a:	call   QWORD PTR [rip+0x196e8]        # 0x14001b238
   140001b50:	mov    rcx,rax
   140001b53:	mov    r9d,DWORD PTR [rip+0x276e6]        # 0x140029240
   140001b5a:	mov    r8,rdi
   140001b5d:	lea    rdx,[rip+0x1a5cc]        # 0x14001c130
   140001b64:	call   QWORD PTR [rip+0x196c6]        # 0x14001b230
   140001b6a:	mov    bl,0x1
   140001b6c:	mov    edx,DWORD PTR [rip+0x3770a]        # 0x14003927c
   140001b72:	mov    rax,QWORD PTR [rip+0x276cf]        # 0x140029248
   140001b79:	cmp    rax,0xffff
   140001b7f:	jae    0x140001b93
   140001b81:	mov    BYTE PTR [rax+r15*1+0x39330],dl
   140001b89:	inc    rax
   140001b8c:	mov    QWORD PTR [rip+0x276b5],rax        # 0x140029248
   140001b93:	call   QWORD PTR [rip+0x376ef]        # 0x140039288
   140001b99:	mov    edx,eax
   140001b9b:	mov    DWORD PTR [rip+0x376db],eax        # 0x14003927c
   140001ba1:	jmp    0x140001e12
   140001ba6:	lea    rcx,[rsp+0x68]
   140001bab:	call   QWORD PTR [rip+0x196a7]        # 0x14001b258
   140001bb1:	nop
   140001bb2:	mov    eax,DWORD PTR [rip+0x376c4]        # 0x14003927c
   140001bb8:	cmp    eax,0xffffffff
   140001bbb:	je     0x140001c5b
   140001bc1:	test   r12d,r12d
   140001bc4:	jne    0x140001bcf
   140001bc6:	cmp    eax,0xa
   140001bc9:	je     0x140001c5b
   140001bcf:	cmp    eax,ebp
   140001bd1:	je     0x140001c5b
   140001bd7:	cmp    eax,0x5c
   140001bda:	je     0x140001c5b
   140001bdc:	cmp    BYTE PTR [rip+0x37681],0x0        # 0x140039264
   140001be3:	je     0x140001c38
   140001be5:	cmp    eax,0x80
   140001bea:	jl     0x140001c38
   140001bec:	test   bl,bl
   140001bee:	jne    0x140001c38
   140001bf0:	lea    rcx,[rip+0x47749]        # 0x140049340
   140001bf7:	call   QWORD PTR [rip+0x19643]        # 0x14001b240
   140001bfd:	mov    rdi,rax
   140001c00:	xor    r9d,r9d
   140001c03:	xor    r8d,r8d
   140001c06:	xor    edx,edx
   140001c08:	lea    rcx,[rsp+0xa0]
   140001c10:	call   QWORD PTR [rip+0x19622]        # 0x14001b238
   140001c16:	mov    rcx,rax
   140001c19:	mov    r9d,DWORD PTR [rip+0x27620]        # 0x140029240
   140001c20:	mov    r8,rdi
   140001c23:	lea    rdx,[rip+0x1a506]        # 0x14001c130
   140001c2a:	call   QWORD PTR [rip+0x19600]        # 0x14001b230
   140001c30:	mov    bl,0x1
   140001c32:	mov    eax,DWORD PTR [rip+0x37644]        # 0x14003927c
   140001c38:	movzx  edx,al
   140001c3b:	lea    rcx,[rsp+0x68]
   140001c40:	call   QWORD PTR [rip+0x1960a]        # 0x14001b250
   140001c46:	call   QWORD PTR [rip+0x3763c]        # 0x140039288
   140001c4c:	mov    DWORD PTR [rip+0x3762a],eax        # 0x14003927c
   140001c52:	cmp    eax,0xffffffff
   140001c55:	jne    0x140001bc1
   140001c5b:	lea    r8,[rsp+0x68]
   140001c60:	lea    rdx,[rsp+0x58]
   140001c65:	mov    rcx,QWORD PTR [rip+0x476cc]        # 0x140049338
   140001c6c:	call   QWORD PTR [rip+0x195b6]        # 0x14001b228
   140001c72:	nop
   140001c73:	lea    rcx,[rsp+0x40]
   140001c78:	call   QWORD PTR [rip+0x195da]        # 0x14001b258
   140001c7e:	nop
   140001c7f:	lea    rdx,[rsp+0x58]
   140001c84:	mov    rcx,QWORD PTR [rip+0x476a5]        # 0x140049330
   140001c8b:	call   QWORD PTR [rip+0x1958f]        # 0x14001b220
   140001c91:	test   al,al
   140001c93:	jne    0x140001d4b
   140001c99:	test   bl,bl
   140001c9b:	jne    0x140001d4b
   140001ca1:	mov    rcx,QWORD PTR [rip+0x47688]        # 0x140049330
   140001ca8:	mov    rax,QWORD PTR [rcx]
   140001cab:	lea    rdx,[rsp+0x80]
   140001cb3:	call   QWORD PTR [rax]
   140001cb5:	mov    rsi,rax
   140001cb8:	mov    rcx,QWORD PTR [rip+0x47679]        # 0x140049338
   140001cbf:	mov    rax,QWORD PTR [rcx]
   140001cc2:	lea    rdx,[rsp+0x70]
   140001cc7:	call   QWORD PTR [rax]
   140001cc9:	mov    rdi,rax
   140001ccc:	mov    rcx,rsi
   140001ccf:	call   QWORD PTR [rip+0x19543]        # 0x14001b218
   140001cd5:	mov    rbx,rax
   140001cd8:	mov    rcx,rdi
   140001cdb:	call   QWORD PTR [rip+0x19537]        # 0x14001b218
   140001ce1:	mov    rsi,rax
   140001ce4:	lea    rcx,[rip+0x47655]        # 0x140049340
   140001ceb:	call   QWORD PTR [rip+0x1954f]        # 0x14001b240
   140001cf1:	mov    rdi,rax
   140001cf4:	xor    r9d,r9d
   140001cf7:	xor    r8d,r8d
   140001cfa:	xor    edx,edx
   140001cfc:	lea    rcx,[rsp+0x120]
   140001d04:	call   QWORD PTR [rip+0x1952e]        # 0x14001b238
   140001d0a:	mov    rcx,rax
   140001d0d:	mov    QWORD PTR [rsp+0x28],rbx
   140001d12:	mov    QWORD PTR [rsp+0x20],rsi
   140001d17:	mov    r9d,DWORD PTR [rip+0x27522]        # 0x140029240
   140001d1e:	mov    r8,rdi
   140001d21:	lea    rdx,[rip+0x1a3d0]        # 0x14001c0f8
   140001d28:	call   QWORD PTR [rip+0x19502]        # 0x14001b230
   140001d2e:	nop
   140001d2f:	lea    rcx,[rsp+0x70]
   140001d34:	call   QWORD PTR [rip+0x198e6]        # 0x14001b620
   140001d3a:	nop
   140001d3b:	lea    rcx,[rsp+0x80]
   140001d43:	call   QWORD PTR [rip+0x198d7]        # 0x14001b620
   140001d49:	mov    bl,0x1
   140001d4b:	lea    r8,[rsp+0x58]
   140001d50:	lea    rdx,[rsp+0x90]
   140001d58:	mov    rcx,QWORD PTR [rip+0x475d1]        # 0x140049330
   140001d5f:	call   QWORD PTR [rip+0x1967b]        # 0x14001b3e0
   140001d65:	mov    rdx,rax
   140001d68:	lea    rcx,[rsp+0x40]
   140001d6d:	call   QWORD PTR [rip+0x1981d]        # 0x14001b590
   140001d73:	lea    rcx,[rsp+0x90]
   140001d7b:	call   QWORD PTR [rip+0x1989f]        # 0x14001b620
   140001d81:	mov    edx,0xffff
   140001d86:	sub    rdx,QWORD PTR [rip+0x274bb]        # 0x140029248
   140001d8d:	mov    QWORD PTR [rsp+0x78],rdx
   140001d92:	mov    rax,QWORD PTR [rsp+0x40]
   140001d97:	movsxd rcx,DWORD PTR [rax+0x4]
   140001d9b:	mov    QWORD PTR [rsp+0x88],rcx
   140001da3:	lea    rax,[rsp+0x88]
   140001dab:	lea    rdi,[rsp+0x78]
   140001db0:	cmp    rcx,rdx
   140001db3:	cmovae rax,rdi
   140001db7:	mov    rsi,QWORD PTR [rax]
   140001dba:	lea    rcx,[rsp+0x40]
   140001dbf:	call   QWORD PTR [rip+0x19453]        # 0x14001b218
   140001dc5:	mov    rdx,rax
   140001dc8:	mov    rdi,QWORD PTR [rip+0x27479]        # 0x140029248
   140001dcf:	lea    rcx,[rdi+r15*1+0x39330]
   140001dd7:	mov    r8,rsi
   140001dda:	call   0x140013f44
   140001ddf:	add    rdi,rsi
   140001de2:	mov    QWORD PTR [rip+0x2745f],rdi        # 0x140029248
   140001de9:	lea    rcx,[rsp+0x40]
   140001dee:	call   QWORD PTR [rip+0x1982c]        # 0x14001b620
   140001df4:	nop
   140001df5:	lea    rcx,[rsp+0x58]
   140001dfa:	call   QWORD PTR [rip+0x19828]        # 0x14001b628
   140001e00:	nop
   140001e01:	lea    rcx,[rsp+0x68]
   140001e06:	call   QWORD PTR [rip+0x19814]        # 0x14001b620
   140001e0c:	mov    edx,DWORD PTR [rip+0x3746a]        # 0x14003927c
   140001e12:	cmp    edx,0xffffffff
   140001e15:	je     0x140001e27
   140001e17:	jmp    0x140001825
   140001e1c:	xor    r12d,r12d
   140001e1f:	jmp    0x140001e27
   140001e21:	mov    edx,DWORD PTR [rip+0x37455]        # 0x14003927c
   140001e27:	mov    rax,QWORD PTR [rip+0x2741a]        # 0x140029248
   140001e2e:	mov    BYTE PTR [rax+r15*1+0x39330],0x0
   140001e37:	cmp    edx,ebp
   140001e39:	je     0x140001ed2
   140001e3f:	test   r12d,r12d
   140001e42:	je     0x140001e8c
   140001e44:	lea    rcx,[rip+0x474f5]        # 0x140049340
   140001e4b:	call   QWORD PTR [rip+0x193ef]        # 0x14001b240
   140001e51:	mov    rdi,rax
   140001e54:	xor    r9d,r9d
   140001e57:	xor    r8d,r8d
   140001e5a:	xor    edx,edx
   140001e5c:	lea    rcx,[rsp+0x100]
   140001e64:	call   QWORD PTR [rip+0x193ce]        # 0x14001b238
   140001e6a:	mov    rcx,rax
   140001e6d:	mov    r9d,DWORD PTR [rip+0x273cc]        # 0x140029240
   140001e74:	mov    r8,rdi
   140001e77:	lea    rdx,[rip+0x1a242]        # 0x14001c0c0
   140001e7e:	call   QWORD PTR [rip+0x193ac]        # 0x14001b230
   140001e84:	mov    edx,DWORD PTR [rip+0x373f2]        # 0x14003927c
   140001e8a:	jmp    0x140001ed2
   140001e8c:	lea    rcx,[rip+0x474ad]        # 0x140049340
   140001e93:	call   QWORD PTR [rip+0x193a7]        # 0x14001b240
   140001e99:	mov    rdi,rax
   140001e9c:	xor    r9d,r9d
   140001e9f:	xor    r8d,r8d
   140001ea2:	xor    edx,edx
   140001ea4:	lea    rcx,[rsp+0xe0]
   140001eac:	call   QWORD PTR [rip+0x19386]        # 0x14001b238
   140001eb2:	mov    rcx,rax
   140001eb5:	mov    r9d,DWORD PTR [rip+0x27384]        # 0x140029240
   140001ebc:	mov    r8,rdi
   140001ebf:	lea    rdx,[rip+0x1a1da]        # 0x14001c0a0
   140001ec6:	call   QWORD PTR [rip+0x19364]        # 0x14001b230
   140001ecc:	mov    edx,DWORD PTR [rip+0x373aa]        # 0x14003927c
   140001ed2:	cmp    edx,0xffffffff
   140001ed5:	jne    0x140001ede
   140001ed7:	xor    eax,eax
   140001ed9:	jmp    0x14000216f
   140001ede:	call   QWORD PTR [rip+0x373a4]        # 0x140039288
   140001ee4:	mov    DWORD PTR [rip+0x37392],eax        # 0x14003927c
   140001eea:	mov    eax,0x9
   140001eef:	jmp    0x14000216f
   140001ef4:	mov    ecx,DWORD PTR [rip+0x2734a]        # 0x140029244
   140001efa:	mov    edx,DWORD PTR [rip+0x37378]        # 0x140039278
   140001f00:	test   edx,edx
   140001f02:	cmove  ecx,DWORD PTR [rip+0x37357]        # 0x140039260
   140001f09:	mov    DWORD PTR [rip+0x27335],ecx        # 0x140029244
   140001f0f:	inc    edx
   140001f11:	mov    DWORD PTR [rip+0x37361],edx        # 0x140039278
   140001f17:	call   QWORD PTR [rip+0x3736b]        # 0x140039288
   140001f1d:	mov    DWORD PTR [rip+0x37359],eax        # 0x14003927c
   140001f23:	mov    eax,0xa
   140001f28:	jmp    0x14000216f
   140001f2d:	mov    eax,DWORD PTR [rip+0x27311]        # 0x140029244
   140001f33:	mov    ecx,DWORD PTR [rip+0x3733f]        # 0x140039278
   140001f39:	test   ecx,ecx
   140001f3b:	cmove  eax,DWORD PTR [rip+0x3731e]        # 0x140039260
   140001f42:	mov    DWORD PTR [rip+0x272fc],eax        # 0x140029244
   140001f48:	dec    ecx
   140001f4a:	mov    DWORD PTR [rip+0x37328],ecx        # 0x140039278
   140001f50:	call   QWORD PTR [rip+0x37332]        # 0x140039288
   140001f56:	mov    DWORD PTR [rip+0x37320],eax        # 0x14003927c
   140001f5c:	mov    eax,0xb
   140001f61:	jmp    0x14000216f
   140001f66:	call   QWORD PTR [rip+0x3731c]        # 0x140039288
   140001f6c:	mov    DWORD PTR [rip+0x3730a],eax        # 0x14003927c
   140001f72:	mov    eax,0xc
   140001f77:	jmp    0x14000216f
   140001f7c:	call   QWORD PTR [rip+0x37306]        # 0x140039288
   140001f82:	mov    DWORD PTR [rip+0x372f4],eax        # 0x14003927c
   140001f88:	mov    eax,0x8
   140001f8d:	jmp    0x14000216f
   140001f92:	lea    rsi,[rip+0x372f8]        # 0x140039291
   140001f99:	lea    rdi,[rip+0x1a0fc]        # 0x14001c09c
   140001fa0:	mov    ecx,0x4
   140001fa5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140001fa7:	jne    0x140002166
   140001fad:	mov    eax,0xd
   140001fb2:	jmp    0x14000216f
   140001fb7:	lea    rsi,[rip+0x372d3]        # 0x140039291
   140001fbe:	lea    rdi,[rip+0x1a0cb]        # 0x14001c090
   140001fc5:	mov    ecx,0xa
   140001fca:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140001fcc:	je     0x140002022
   140001fce:	lea    rsi,[rip+0x372bc]        # 0x140039291
   140001fd5:	lea    rdi,[rip+0x1a0a4]        # 0x14001c080
   140001fdc:	mov    ecx,0xf
   140001fe1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140001fe3:	je     0x140002011
   140001fe5:	lea    rsi,[rip+0x372a5]        # 0x140039291
   140001fec:	lea    rdi,[rip+0x1a075]        # 0x14001c068
   140001ff3:	mov    ecx,0x11
   140001ff8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140001ffa:	jne    0x140002166
   140002000:	mov    BYTE PTR [rip+0x3725d],0x0        # 0x140039264
   140002007:	mov    eax,0x5
   14000200c:	jmp    0x14000216f
   140002011:	mov    BYTE PTR [rip+0x3724c],0x1        # 0x140039264
   140002018:	mov    eax,0x4
   14000201d:	jmp    0x14000216f
   140002022:	mov    BYTE PTR [rip+0x3723b],0x0        # 0x140039264
   140002029:	mov    eax,0x3
   14000202e:	jmp    0x14000216f
   140002033:	lea    rsi,[rip+0x37257]        # 0x140039291
   14000203a:	lea    rdi,[rip+0x1a01b]        # 0x14001c05c
   140002041:	mov    ecx,0x5
   140002046:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140002048:	jne    0x140002166
   14000204e:	mov    eax,0x1
   140002053:	jmp    0x14000216f
   140002058:	lea    rsi,[rip+0x37232]        # 0x140039291
   14000205f:	lea    rdi,[rip+0x19fea]        # 0x14001c050
   140002066:	mov    ecx,0xb
   14000206b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000206d:	jne    0x140002166
   140002073:	mov    eax,0x5
   140002078:	jmp    0x14000216f
   14000207d:	lea    rsi,[rip+0x3720d]        # 0x140039291
   140002084:	lea    rdi,[rip+0x19fc1]        # 0x14001c04c
   14000208b:	mov    ecx,0x2
   140002090:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140002092:	je     0x1400020e9
   140002094:	lea    rdx,[rip+0x19fa9]        # 0x14001c044
   14000209b:	lea    rcx,[rip+0x371ef]        # 0x140039291
   1400020a2:	call   QWORD PTR [rip+0x194f0]        # 0x14001b598
   1400020a8:	test   eax,eax
   1400020aa:	je     0x1400020d8
   1400020ac:	lea    rdx,[rip+0x19f85]        # 0x14001c038
   1400020b3:	lea    rcx,[rip+0x371d7]        # 0x140039291
   1400020ba:	call   QWORD PTR [rip+0x194d8]        # 0x14001b598
   1400020c0:	test   eax,eax
   1400020c2:	jne    0x140002166
   1400020c8:	mov    BYTE PTR [rip+0x37196],al        # 0x140039264
   1400020ce:	mov    eax,0x5
   1400020d3:	jmp    0x14000216f
   1400020d8:	mov    BYTE PTR [rip+0x37185],0x1        # 0x140039264
   1400020df:	mov    eax,0x4
   1400020e4:	jmp    0x14000216f
   1400020e9:	mov    BYTE PTR [rip+0x37174],0x0        # 0x140039264
   1400020f0:	mov    eax,0x3
   1400020f5:	jmp    0x14000216f
   1400020f7:	lea    rsi,[rip+0x37193]        # 0x140039291
   1400020fe:	lea    rdi,[rip+0x19f2b]        # 0x14001c030
   140002105:	mov    ecx,0x4
   14000210a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000210c:	je     0x140002158
   14000210e:	lea    rsi,[rip+0x3717c]        # 0x140039291
   140002115:	lea    rdi,[rip+0x19f0c]        # 0x14001c028
   14000211c:	mov    ecx,0x8
   140002121:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140002123:	je     0x14000214a
   140002125:	lea    rdx,[rip+0x19eec]        # 0x14001c018
   14000212c:	lea    rcx,[rip+0x3715e]        # 0x140039291
   140002133:	call   QWORD PTR [rip+0x1945f]        # 0x14001b598
   140002139:	test   eax,eax
   14000213b:	jne    0x140002166
   14000213d:	mov    BYTE PTR [rip+0x37121],al        # 0x140039264
   140002143:	mov    eax,0x5
   140002148:	jmp    0x14000216f
   14000214a:	mov    BYTE PTR [rip+0x37113],0x1        # 0x140039264
   140002151:	mov    eax,0x4
   140002156:	jmp    0x14000216f
   140002158:	mov    BYTE PTR [rip+0x37105],0x0        # 0x140039264
   14000215f:	mov    eax,0x3
   140002164:	jmp    0x14000216f
   140002166:	mov    eax,0x6
   14000216b:	jmp    0x14000216f
   14000216d:	xor    eax,eax
   14000216f:	mov    rcx,QWORD PTR [rsp+0x150]
   140002177:	xor    rcx,rsp
   14000217a:	call   0x140013ff0
   14000217f:	lea    r11,[rsp+0x160]
   140002187:	mov    rbx,QWORD PTR [r11+0x30]
   14000218b:	mov    rbp,QWORD PTR [r11+0x38]
   14000218f:	mov    rsi,QWORD PTR [r11+0x40]
   140002193:	mov    rsp,r11
   140002196:	pop    r15
   140002198:	pop    r14
   14000219a:	pop    r13
   14000219c:	pop    r12
   14000219e:	pop    rdi
   14000219f:	ret    
   1400021a0:	outs   dx,DWORD PTR ds:[rsi]
   1400021a1:	(bad)  
   1400021a2:	add    BYTE PTR [rax],al
   1400021a4:	xchg   edx,eax
   1400021a5:	(bad)  
   1400021a6:	add    BYTE PTR [rax],al
   1400021a8:	mov    bh,0x1f
   1400021aa:	add    BYTE PTR [rax],al
   1400021ac:	(bad)  
   1400021ad:	(bad)  
   1400021ae:	add    BYTE PTR [rax],al
   1400021b0:	mul    DWORD PTR [rax]
   1400021b2:	add    BYTE PTR [rax],al
   1400021b4:	xor    esp,DWORD PTR [rax]
   1400021b6:	add    BYTE PTR [rax],al
   1400021b8:	pop    rax
   1400021b9:	and    BYTE PTR [rax],al
   1400021bb:	add    BYTE PTR [rbp+0x16],al
   1400021be:	add    BYTE PTR [rax],al
   1400021c0:	jge    0x1400021e2
   1400021c2:	add    BYTE PTR [rax],al
   1400021c4:	and    WORD PTR [rax],ax
   1400021c7:	add    BYTE PTR [rax],al
   1400021c9:	or     DWORD PTR [rcx],ecx
   1400021cb:	or     DWORD PTR [rcx],ecx
   1400021cd:	or     DWORD PTR [rcx],ecx
   1400021cf:	or     DWORD PTR [rcx],ecx
   1400021d1:	or     DWORD PTR [rcx],ecx
   1400021d3:	or     DWORD PTR [rcx],eax
   1400021d5:	or     DWORD PTR [rcx],ecx
   1400021d7:	add    al,BYTE PTR [rbx]
   1400021d9:	or     DWORD PTR [rcx],ecx
   1400021db:	add    BYTE PTR [rcx],cl
   1400021dd:	or     DWORD PTR [rcx],ecx
   1400021df:	or     DWORD PTR [rcx],ecx
   1400021e1:	or     DWORD PTR [rcx],ecx
   1400021e3:	or     DWORD PTR [rcx],ecx
   1400021e5:	add    al,0x9
   1400021e7:	or     DWORD PTR [rax],eax
   1400021e9:	add    eax,0x9060909
   1400021ee:	or     DWORD PTR [rcx],ecx
   1400021f0:	or     DWORD PTR [rcx],ecx
   1400021f2:	or     DWORD PTR [rcx],ecx
   1400021f4:	or     DWORD PTR [rcx],ecx
   1400021f6:	or     DWORD PTR [rcx],ecx
   1400021f8:	(bad)  
   1400021f9:	or     DWORD PTR [rax],ecx
   1400021fb:	add    BYTE PTR [rcx],al
   1400021fd:	sbb    BYTE PTR [rax],al
   1400021ff:	add    ch,al
   140002201:	(bad)  
   140002202:	add    BYTE PTR [rax],al
   140002204:	hlt    
   140002205:	(bad)  
   140002206:	add    BYTE PTR [rax],al
   140002208:	sub    eax,0x6600001f
   14000220d:	(bad)  
   14000220e:	add    BYTE PTR [rax],al
   140002210:	jl     0x140002231
   140002212:	add    BYTE PTR [rax],al
   140002214:	out    0x16,al
   140002216:	add    BYTE PTR [rax],al
   140002218:	test   al,0x17
   14000221a:	add    BYTE PTR [rax],al
   14000221c:	add    BYTE PTR [rcx],al
   14000221e:	(bad)  
   14000221f:	(bad)  
   140002220:	(bad)  
   140002221:	add    BYTE PTR [rdx],al
   140002223:	add    eax,DWORD PTR [rdi]
   140002225:	(bad)  
   140002226:	add    al,0x7
   140002228:	add    eax,0x6060607
   14000222d:	(bad)  
   14000222e:	(bad)  
   14000222f:	(bad)  
   140002230:	(bad)  
   140002231:	(bad)  
   140002232:	(bad)  
   140002233:	(bad)  
   140002234:	int3   
   140002235:	int3   
   140002236:	int3   
   140002237:	int3   
   140002238:	int3   
   140002239:	int3   
   14000223a:	int3   
   14000223b:	int3   
   14000223c:	int3   
   14000223d:	int3   
   14000223e:	int3   
   14000223f:	int3   
   140002240:	mov    QWORD PTR [rsp+0x8],rbx
   140002245:	push   rdi
   140002246:	sub    rsp,0x20
   14000224a:	cmp    DWORD PTR [rip+0x370d3],0x9        # 0x140039324
   140002251:	lea    rdx,[rip+0x19b90]        # 0x14001bde8
   140002258:	mov    rdi,rcx
   14000225b:	sete   bl
   14000225e:	call   QWORD PTR [rip+0x19004]        # 0x14001b268
   140002264:	mov    eax,DWORD PTR [rip+0x370ba]        # 0x140039324
   14000226a:	cmp    eax,0x9
   14000226d:	jne    0x140002290
   14000226f:	nop
   140002270:	lea    rdx,[rip+0x370b9]        # 0x140039330
   140002277:	mov    rcx,rdi
   14000227a:	call   QWORD PTR [rip+0x18fe0]        # 0x14001b260
   140002280:	call   0x1400014b0
   140002285:	mov    DWORD PTR [rip+0x37099],eax        # 0x140039324
   14000228b:	cmp    eax,0x9
   14000228e:	je     0x140002270
   140002290:	test   bl,bl
   140002292:	jne    0x1400022a9
   140002294:	cmp    eax,0xd
   140002297:	sete   bl
   14000229a:	test   bl,bl
   14000229c:	je     0x1400022a9
   14000229e:	call   0x1400014b0
   1400022a3:	mov    DWORD PTR [rip+0x3707b],eax        # 0x140039324
   1400022a9:	mov    al,bl
   1400022ab:	mov    rbx,QWORD PTR [rsp+0x30]
   1400022b0:	add    rsp,0x20
   1400022b4:	pop    rdi
   1400022b5:	ret    
   1400022b6:	int3   
   1400022b7:	int3   
   1400022b8:	int3   
   1400022b9:	int3   
   1400022ba:	int3   
   1400022bb:	int3   
   1400022bc:	int3   
   1400022bd:	int3   
   1400022be:	int3   
   1400022bf:	int3   
   1400022c0:	sub    rsp,0x28
   1400022c4:	mov    ecx,DWORD PTR [rip+0x3705a]        # 0x140039324
   1400022ca:	cmp    ecx,0xe
   1400022cd:	sete   al
   1400022d0:	test   al,al
   1400022d2:	je     0x1400022e6
   1400022d4:	call   0x1400014b0
   1400022d9:	mov    DWORD PTR [rip+0x37045],eax        # 0x140039324
   1400022df:	mov    al,0x1
   1400022e1:	add    rsp,0x28
   1400022e5:	ret    
   1400022e6:	mov    QWORD PTR [rsp+0x20],rbx
   1400022eb:	xor    ebx,ebx
   1400022ed:	nop    DWORD PTR [rax]
   1400022f0:	cmp    ecx,0x6
   1400022f3:	sete   al
   1400022f6:	test   al,al
   1400022f8:	je     0x140002309
   1400022fa:	call   0x1400014b0
   1400022ff:	mov    ecx,eax
   140002301:	mov    DWORD PTR [rip+0x3701d],eax        # 0x140039324
   140002307:	jmp    0x14000230d
   140002309:	test   ebx,ebx
   14000230b:	jle    0x140002366
   14000230d:	cmp    ecx,0xb
   140002310:	jne    0x140002327
   140002312:	test   ebx,ebx
   140002314:	je     0x140002366
   140002316:	dec    ebx
   140002318:	call   0x1400014b0
   14000231d:	mov    ecx,eax
   14000231f:	mov    DWORD PTR [rip+0x36fff],eax        # 0x140039324
   140002325:	jmp    0x1400022f0
   140002327:	cmp    ecx,0xa
   14000232a:	jne    0x140002351
   14000232c:	call   0x1400014b0
   140002331:	mov    ecx,eax
   140002333:	mov    DWORD PTR [rip+0x36feb],eax        # 0x140039324
   140002339:	cmp    eax,0xb
   14000233c:	jne    0x14000234d
   14000233e:	call   0x1400014b0
   140002343:	mov    ecx,eax
   140002345:	mov    DWORD PTR [rip+0x36fd9],eax        # 0x140039324
   14000234b:	jmp    0x1400022f0
   14000234d:	inc    ebx
   14000234f:	jmp    0x1400022f0
   140002351:	cmp    ecx,0x6
   140002354:	je     0x1400022f0
   140002356:	test   ebx,ebx
   140002358:	jne    0x1400022f0
   14000235a:	xor    al,al
   14000235c:	mov    rbx,QWORD PTR [rsp+0x20]
   140002361:	add    rsp,0x28
   140002365:	ret    
   140002366:	mov    al,0x1
   140002368:	mov    rbx,QWORD PTR [rsp+0x20]
   14000236d:	add    rsp,0x28
   140002371:	ret    
   140002372:	int3   
   140002373:	int3   
   140002374:	int3   
   140002375:	int3   
   140002376:	int3   
   140002377:	int3   
   140002378:	int3   
   140002379:	int3   
   14000237a:	int3   
   14000237b:	int3   
   14000237c:	int3   
   14000237d:	int3   
   14000237e:	int3   
   14000237f:	int3   
   140002380:	mov    QWORD PTR [rsp+0x8],rcx
   140002385:	push   rdi
   140002386:	sub    rsp,0x30
   14000238a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002393:	mov    QWORD PTR [rsp+0x48],rbx
   140002398:	mov    ebx,edx
   14000239a:	mov    rdi,rcx
   14000239d:	add    rcx,0x68
   1400023a1:	call   QWORD PTR [rip+0x19281]        # 0x14001b628
   1400023a7:	nop
   1400023a8:	lea    rcx,[rdi+0x60]
   1400023ac:	call   QWORD PTR [rip+0x19276]        # 0x14001b628
   1400023b2:	nop
   1400023b3:	lea    rcx,[rdi+0x58]
   1400023b7:	call   QWORD PTR [rip+0x1926b]        # 0x14001b628
   1400023bd:	nop
   1400023be:	lea    rcx,[rdi+0x50]
   1400023c2:	call   QWORD PTR [rip+0x19260]        # 0x14001b628
   1400023c8:	nop
   1400023c9:	lea    rcx,[rdi+0x48]
   1400023cd:	call   QWORD PTR [rip+0x1924d]        # 0x14001b620
   1400023d3:	nop
   1400023d4:	mov    rcx,rdi
   1400023d7:	call   QWORD PTR [rip+0x193c3]        # 0x14001b7a0
   1400023dd:	test   bl,0x1
   1400023e0:	je     0x1400023ef
   1400023e2:	mov    rcx,rdi
   1400023e5:	call   0x140013f3e
   1400023ea:	mov    rax,rdi
   1400023ed:	jmp    0x1400023f2
   1400023ef:	mov    rax,rdi
   1400023f2:	mov    rbx,QWORD PTR [rsp+0x48]
   1400023f7:	add    rsp,0x30
   1400023fb:	pop    rdi
   1400023fc:	ret    
   1400023fd:	int3   
   1400023fe:	int3   
   1400023ff:	int3   
   140002400:	rex push rbp
   140002402:	push   rsi
   140002403:	push   rdi
   140002404:	sub    rsp,0xf0
   14000240b:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140002414:	mov    QWORD PTR [rsp+0x120],rbx
   14000241c:	mov    rax,QWORD PTR [rip+0x26dfd]        # 0x140029220
   140002423:	xor    rax,rsp
   140002426:	mov    QWORD PTR [rsp+0xe0],rax
   14000242e:	movzx  esi,r9b
   140002432:	mov    rbp,rdx
   140002435:	mov    rbx,rcx
   140002438:	test   rcx,rcx
   14000243b:	je     0x140002450
   14000243d:	xor    eax,eax
   14000243f:	or     rcx,0xffffffffffffffff
   140002443:	mov    rdi,rbx
   140002446:	repnz scas al,BYTE PTR es:[rdi]
   140002448:	not    rcx
   14000244b:	dec    rcx
   14000244e:	jmp    0x140002453
   140002450:	or     ecx,0xffffffff
   140002453:	mov    edx,ecx
   140002455:	mov    rcx,rbx
   140002458:	call   QWORD PTR [rip+0x191ba]        # 0x14001b618
   14000245e:	mov    QWORD PTR [rsp+0x48],rax
   140002463:	lea    rdx,[rsp+0x48]
   140002468:	lea    rcx,[rsp+0x38]
   14000246d:	call   QWORD PTR [rip+0x18e15]        # 0x14001b288
   140002473:	nop
   140002474:	lea    rcx,[rsp+0x48]
   140002479:	call   QWORD PTR [rip+0x191a9]        # 0x14001b628
   14000247f:	mov    edx,0x1
   140002484:	lea    rcx,[rsp+0x38]
   140002489:	call   QWORD PTR [rip+0x18df1]        # 0x14001b280
   14000248f:	test   al,al
   140002491:	jne    0x1400024e1
   140002493:	test   sil,sil
   140002496:	je     0x1400024d1
   140002498:	call   QWORD PTR [rip+0x18cea]        # 0x14001b188
   14000249e:	mov    r8d,DWORD PTR [rax]
   1400024a1:	mov    edx,0x64
   1400024a6:	lea    rcx,[rsp+0x70]
   1400024ab:	call   QWORD PTR [rip+0x18cdf]        # 0x14001b190
   1400024b1:	call   QWORD PTR [rip+0x18d31]        # 0x14001b1e8
   1400024b7:	lea    r9,[rsp+0x70]
   1400024bc:	mov    r8,rbx
   1400024bf:	lea    rdx,[rip+0x19dda]        # 0x14001c2a0
   1400024c6:	lea    rcx,[rax+0x60]
   1400024ca:	call   QWORD PTR [rip+0x18d20]        # 0x14001b1f0
   1400024d0:	nop
   1400024d1:	lea    rcx,[rsp+0x38]
   1400024d6:	call   QWORD PTR [rip+0x18d9c]        # 0x14001b278
   1400024dc:	jmp    0x1400026ad
   1400024e1:	lea    rdx,[rsp+0x38]
   1400024e6:	lea    rcx,[rsp+0x50]
   1400024eb:	call   QWORD PTR [rip+0x19197]        # 0x14001b688
   1400024f1:	nop
   1400024f2:	lea    rcx,[rsp+0x28]
   1400024f7:	call   QWORD PTR [rip+0x19193]        # 0x14001b690
   1400024fd:	nop
   1400024fe:	xor    eax,eax
   140002500:	or     rcx,0xffffffffffffffff
   140002504:	lea    rdi,[rip+0x19d6d]        # 0x14001c278
   14000250b:	repnz scas al,BYTE PTR es:[rdi]
   14000250d:	not    rcx
   140002510:	lea    rdx,[rcx-0x1]
   140002514:	lea    rcx,[rip+0x19d5d]        # 0x14001c278
   14000251b:	call   QWORD PTR [rip+0x190f7]        # 0x14001b618
   140002521:	mov    QWORD PTR [rsp+0x20],rax
   140002526:	xor    r8d,r8d
   140002529:	lea    rdx,[rsp+0x20]
   14000252e:	lea    rcx,[rsp+0x28]
   140002533:	call   QWORD PTR [rip+0x1915f]        # 0x14001b698
   140002539:	nop
   14000253a:	lea    rcx,[rsp+0x20]
   14000253f:	call   QWORD PTR [rip+0x190e3]        # 0x14001b628
   140002545:	xor    eax,eax
   140002547:	or     rcx,0xffffffffffffffff
   14000254b:	lea    rdi,[rip+0x19cf6]        # 0x14001c248
   140002552:	repnz scas al,BYTE PTR es:[rdi]
   140002554:	not    rcx
   140002557:	lea    rdx,[rcx-0x1]
   14000255b:	lea    rcx,[rip+0x19ce6]        # 0x14001c248
   140002562:	call   QWORD PTR [rip+0x190b0]        # 0x14001b618
   140002568:	mov    QWORD PTR [rsp+0x20],rax
   14000256d:	mov    r8b,0x1
   140002570:	lea    rdx,[rsp+0x20]
   140002575:	lea    rcx,[rsp+0x28]
   14000257a:	call   QWORD PTR [rip+0x19118]        # 0x14001b698
   140002580:	nop
   140002581:	lea    rcx,[rsp+0x20]
   140002586:	call   QWORD PTR [rip+0x1909c]        # 0x14001b628
   14000258c:	xor    eax,eax
   14000258e:	or     rcx,0xffffffffffffffff
   140002592:	lea    rdi,[rip+0x19c67]        # 0x14001c200
   140002599:	repnz scas al,BYTE PTR es:[rdi]
   14000259b:	not    rcx
   14000259e:	lea    rdx,[rcx-0x1]
   1400025a2:	lea    rcx,[rip+0x19c57]        # 0x14001c200
   1400025a9:	call   QWORD PTR [rip+0x19069]        # 0x14001b618
   1400025af:	mov    QWORD PTR [rsp+0x20],rax
   1400025b4:	xor    r8d,r8d
   1400025b7:	lea    rdx,[rsp+0x20]
   1400025bc:	lea    rcx,[rsp+0x28]
   1400025c1:	call   QWORD PTR [rip+0x190d1]        # 0x14001b698
   1400025c7:	nop
   1400025c8:	lea    rcx,[rsp+0x20]
   1400025cd:	call   QWORD PTR [rip+0x19055]        # 0x14001b628
   1400025d3:	mov    ecx,0x78
   1400025d8:	call   0x140014010
   1400025dd:	mov    QWORD PTR [rsp+0x20],rax
   1400025e2:	xor    esi,esi
   1400025e4:	test   rax,rax
   1400025e7:	je     0x1400025fc
   1400025e9:	mov    r8,rbx
   1400025ec:	mov    rdx,rbp
   1400025ef:	mov    rcx,rax
   1400025f2:	call   0x140001090
   1400025f7:	mov    rdi,rax
   1400025fa:	jmp    0x1400025ff
   1400025fc:	mov    rdi,rsi
   1400025ff:	mov    rdx,rdi
   140002602:	lea    rcx,[rsp+0x28]
   140002607:	call   QWORD PTR [rip+0x19093]        # 0x14001b6a0
   14000260d:	test   rdi,rdi
   140002610:	je     0x140002616
   140002612:	lea    rsi,[rdi+0x8]
   140002616:	mov    rdx,rsi
   140002619:	lea    rcx,[rsp+0x28]
   14000261e:	call   QWORD PTR [rip+0x19084]        # 0x14001b6a8
   140002624:	lea    rdx,[rsp+0x50]
   140002629:	lea    rcx,[rsp+0x28]
   14000262e:	call   QWORD PTR [rip+0x1907c]        # 0x14001b6b0
   140002634:	test   al,al
   140002636:	jne    0x140002652
   140002638:	call   QWORD PTR [rip+0x18baa]        # 0x14001b1e8
   14000263e:	mov    r8,rbx
   140002641:	lea    rdx,[rip+0x19b90]        # 0x14001c1d8
   140002648:	lea    rcx,[rax+0x60]
   14000264c:	call   QWORD PTR [rip+0x18b9e]        # 0x14001b1f0
   140002652:	xor    edx,edx
   140002654:	lea    rcx,[rsp+0x28]
   140002659:	call   QWORD PTR [rip+0x19041]        # 0x14001b6a0
   14000265f:	xor    edx,edx
   140002661:	lea    rcx,[rsp+0x28]
   140002666:	call   QWORD PTR [rip+0x1903c]        # 0x14001b6a8
   14000266c:	test   rdi,rdi
   14000266f:	je     0x14000267e
   140002671:	mov    rax,QWORD PTR [rdi]
   140002674:	mov    edx,0x1
   140002679:	mov    rcx,rdi
   14000267c:	call   QWORD PTR [rax]
   14000267e:	lea    rcx,[rsp+0x38]
   140002683:	call   QWORD PTR [rip+0x18be7]        # 0x14001b270
   140002689:	nop
   14000268a:	lea    rcx,[rsp+0x28]
   14000268f:	call   QWORD PTR [rip+0x19023]        # 0x14001b6b8
   140002695:	nop
   140002696:	lea    rcx,[rsp+0x50]
   14000269b:	call   QWORD PTR [rip+0x1901f]        # 0x14001b6c0
   1400026a1:	nop
   1400026a2:	lea    rcx,[rsp+0x38]
   1400026a7:	call   QWORD PTR [rip+0x18bcb]        # 0x14001b278
   1400026ad:	mov    rcx,QWORD PTR [rsp+0xe0]
   1400026b5:	xor    rcx,rsp
   1400026b8:	call   0x140013ff0
   1400026bd:	mov    rbx,QWORD PTR [rsp+0x120]
   1400026c5:	add    rsp,0xf0
   1400026cc:	pop    rdi
   1400026cd:	pop    rsi
   1400026ce:	pop    rbp
   1400026cf:	ret    
   1400026d0:	rex push rbx
   1400026d2:	sub    rsp,0x20
   1400026d6:	mov    rbx,rcx
   1400026d9:	nop    DWORD PTR [rax+0x0]
   1400026e0:	lea    rcx,[rbx+0x18]
   1400026e4:	call   QWORD PTR [rip+0x18f36]        # 0x14001b620
   1400026ea:	mov    rcx,QWORD PTR [rbx+0x8]
   1400026ee:	test   rcx,rcx
   1400026f1:	je     0x1400026f8
   1400026f3:	call   0x1400026d0
   1400026f8:	mov    rbx,QWORD PTR [rbx+0x10]
   1400026fc:	test   rbx,rbx
   1400026ff:	jne    0x1400026e0
   140002701:	add    rsp,0x20
   140002705:	pop    rbx
   140002706:	ret    
   140002707:	int3   
   140002708:	int3   
   140002709:	int3   
   14000270a:	int3   
   14000270b:	int3   
   14000270c:	int3   
   14000270d:	int3   
   14000270e:	int3   
   14000270f:	int3   
   140002710:	rex push rbx
   140002712:	sub    rsp,0x20
   140002716:	mov    rbx,rcx
   140002719:	nop    DWORD PTR [rax+0x0]
   140002720:	lea    rcx,[rbx+0x18]
   140002724:	call   QWORD PTR [rip+0x18ef6]        # 0x14001b620
   14000272a:	lea    rcx,[rbx+0x20]
   14000272e:	call   QWORD PTR [rip+0x18eec]        # 0x14001b620
   140002734:	mov    rcx,QWORD PTR [rbx+0x8]
   140002738:	test   rcx,rcx
   14000273b:	je     0x140002742
   14000273d:	call   0x140002710
   140002742:	mov    rbx,QWORD PTR [rbx+0x10]
   140002746:	test   rbx,rbx
   140002749:	jne    0x140002720
   14000274b:	add    rsp,0x20
   14000274f:	pop    rbx
   140002750:	ret    
   140002751:	int3   
   140002752:	int3   
   140002753:	int3   
   140002754:	int3   
   140002755:	int3   
   140002756:	int3   
   140002757:	int3   
   140002758:	int3   
   140002759:	int3   
   14000275a:	int3   
   14000275b:	int3   
   14000275c:	int3   
   14000275d:	int3   
   14000275e:	int3   
   14000275f:	int3   
   140002760:	sub    rsp,0x28
   140002764:	mov    rdx,QWORD PTR [rcx]
   140002767:	mov    eax,DWORD PTR [rdx]
   140002769:	test   eax,eax
   14000276b:	je     0x14000277d
   14000276d:	cmp    eax,0xffffffff
   140002770:	je     0x14000278f
   140002772:	lock add DWORD PTR [rdx],0xffffffff
   140002776:	setne  al
   140002779:	test   al,al
   14000277b:	jne    0x14000278f
   14000277d:	mov    rcx,QWORD PTR [rcx]
   140002780:	mov    edx,0x4
   140002785:	lea    r8d,[rdx+0x4]
   140002789:	call   QWORD PTR [rip+0x18e31]        # 0x14001b5c0
   14000278f:	add    rsp,0x28
   140002793:	ret    
   140002794:	int3   
   140002795:	int3   
   140002796:	int3   
   140002797:	int3   
   140002798:	int3   
   140002799:	int3   
   14000279a:	int3   
   14000279b:	int3   
   14000279c:	int3   
   14000279d:	int3   
   14000279e:	int3   
   14000279f:	int3   
   1400027a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400027a5:	push   rdi
   1400027a6:	sub    rsp,0x20
   1400027aa:	mov    rdi,QWORD PTR [rcx+0x10]
   1400027ae:	mov    rbx,rcx
   1400027b1:	test   rdi,rdi
   1400027b4:	je     0x1400027ef
   1400027b6:	lea    rcx,[rdi+0x18]
   1400027ba:	call   QWORD PTR [rip+0x18e60]        # 0x14001b620
   1400027c0:	mov    rcx,QWORD PTR [rdi+0x8]
   1400027c4:	test   rcx,rcx
   1400027c7:	je     0x1400027ce
   1400027c9:	call   0x1400026d0
   1400027ce:	mov    rcx,QWORD PTR [rdi+0x10]
   1400027d2:	test   rcx,rcx
   1400027d5:	je     0x1400027dc
   1400027d7:	call   0x1400026d0
   1400027dc:	mov    rdx,QWORD PTR [rbx+0x10]
   1400027e0:	mov    r8d,0x8
   1400027e6:	mov    rcx,rbx
   1400027e9:	call   QWORD PTR [rip+0x18ab1]        # 0x14001b2a0
   1400027ef:	mov    rcx,rbx
   1400027f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400027f7:	add    rsp,0x20
   1400027fb:	pop    rdi
   1400027fc:	rex.W jmp QWORD PTR [rip+0x18a95]        # 0x14001b298
   140002803:	int3   
   140002804:	int3   
   140002805:	int3   
   140002806:	int3   
   140002807:	int3   
   140002808:	int3   
   140002809:	int3   
   14000280a:	int3   
   14000280b:	int3   
   14000280c:	int3   
   14000280d:	int3   
   14000280e:	int3   
   14000280f:	int3   
   140002810:	mov    QWORD PTR [rsp+0x8],rbx
   140002815:	push   rdi
   140002816:	sub    rsp,0x20
   14000281a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000281e:	mov    rbx,rcx
   140002821:	test   rdi,rdi
   140002824:	je     0x140002869
   140002826:	lea    rcx,[rdi+0x18]
   14000282a:	call   QWORD PTR [rip+0x18df0]        # 0x14001b620
   140002830:	lea    rcx,[rdi+0x20]
   140002834:	call   QWORD PTR [rip+0x18de6]        # 0x14001b620
   14000283a:	mov    rcx,QWORD PTR [rdi+0x8]
   14000283e:	test   rcx,rcx
   140002841:	je     0x140002848
   140002843:	call   0x140002710
   140002848:	mov    rcx,QWORD PTR [rdi+0x10]
   14000284c:	test   rcx,rcx
   14000284f:	je     0x140002856
   140002851:	call   0x140002710
   140002856:	mov    rdx,QWORD PTR [rbx+0x10]
   14000285a:	mov    r8d,0x8
   140002860:	mov    rcx,rbx
   140002863:	call   QWORD PTR [rip+0x18a37]        # 0x14001b2a0
   140002869:	mov    rcx,rbx
   14000286c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002871:	add    rsp,0x20
   140002875:	pop    rdi
   140002876:	rex.W jmp QWORD PTR [rip+0x18a1b]        # 0x14001b298
   14000287d:	int3   
   14000287e:	int3   
   14000287f:	int3   
   140002880:	sub    rsp,0x28
   140002884:	mov    rdx,QWORD PTR [rcx]
   140002887:	mov    eax,DWORD PTR [rdx]
   140002889:	test   eax,eax
   14000288b:	je     0x14000289d
   14000288d:	cmp    eax,0xffffffff
   140002890:	je     0x1400028fa
   140002892:	lock add DWORD PTR [rdx],0xffffffff
   140002896:	setne  al
   140002899:	test   al,al
   14000289b:	jne    0x1400028fa
   14000289d:	mov    QWORD PTR [rsp+0x30],rbx
   1400028a2:	mov    QWORD PTR [rsp+0x38],rsi
   1400028a7:	mov    rsi,QWORD PTR [rcx]
   1400028aa:	movsxd rax,DWORD PTR [rsi+0xc]
   1400028ae:	mov    QWORD PTR [rsp+0x20],rdi
   1400028b3:	lea    rbx,[rsi+rax*8+0x10]
   1400028b8:	movsxd rax,DWORD PTR [rsi+0x8]
   1400028bc:	lea    rdi,[rsi+rax*8+0x10]
   1400028c1:	cmp    rdi,rbx
   1400028c4:	je     0x1400028e2
   1400028c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400028d0:	sub    rbx,0x8
   1400028d4:	mov    rcx,rbx
   1400028d7:	call   QWORD PTR [rip+0x18d4b]        # 0x14001b628
   1400028dd:	cmp    rbx,rdi
   1400028e0:	jne    0x1400028d0
   1400028e2:	mov    rcx,rsi
   1400028e5:	call   QWORD PTR [rip+0x189a5]        # 0x14001b290
   1400028eb:	mov    rdi,QWORD PTR [rsp+0x20]
   1400028f0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400028f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400028fa:	add    rsp,0x28
   1400028fe:	ret    
   1400028ff:	int3   
   140002900:	mov    QWORD PTR [rsp+0x8],rbx
   140002905:	push   rdi
   140002906:	sub    rsp,0x20
   14000290a:	mov    rax,QWORD PTR [rdx]
   14000290d:	mov    rbx,rcx
   140002910:	mov    rdi,rdx
   140002913:	mov    ecx,DWORD PTR [rax]
   140002915:	test   ecx,ecx
   140002917:	je     0x140002936
   140002919:	cmp    ecx,0xffffffff
   14000291c:	je     0x140002922
   14000291e:	lock add DWORD PTR [rax],0x1
   140002922:	mov    rax,QWORD PTR [rdx]
   140002925:	mov    QWORD PTR [rbx],rax
   140002928:	mov    rax,rbx
   14000292b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002930:	add    rsp,0x20
   140002934:	pop    rdi
   140002935:	ret    
   140002936:	mov    r8d,DWORD PTR [rax+0x8]
   14000293a:	xor    r9d,r9d
   14000293d:	bt     r8d,0x1f
   140002942:	lea    edx,[r9+0x8]
   140002946:	lea    ecx,[rdx-0x4]
   140002949:	jae    0x140002972
   14000294b:	and    r8d,0x7fffffff
   140002952:	call   QWORD PTR [rip+0x18c70]        # 0x14001b5c8
   140002958:	mov    QWORD PTR [rbx],rax
   14000295b:	test   rax,rax
   14000295e:	jne    0x140002966
   140002960:	call   QWORD PTR [rip+0x18942]        # 0x14001b2a8
   140002966:	mov    rax,QWORD PTR [rbx]
   140002969:	or     DWORD PTR [rax+0x8],0x80000000
   140002970:	jmp    0x14000298a
   140002972:	movsxd r8,DWORD PTR [rax+0x4]
   140002976:	call   QWORD PTR [rip+0x18c4c]        # 0x14001b5c8
   14000297c:	mov    QWORD PTR [rbx],rax
   14000297f:	test   rax,rax
   140002982:	jne    0x14000298a
   140002984:	call   QWORD PTR [rip+0x1891e]        # 0x14001b2a8
   14000298a:	mov    r10,QWORD PTR [rbx]
   14000298d:	mov    eax,DWORD PTR [r10+0x8]
   140002991:	btr    eax,0x1f
   140002995:	test   eax,eax
   140002997:	je     0x1400029d0
   140002999:	mov    r9,QWORD PTR [rdi]
   14000299c:	mov    rax,QWORD PTR [r9+0x10]
   1400029a0:	movsxd rcx,DWORD PTR [r9+0x4]
   1400029a4:	lea    r8,[rax+rcx*4]
   1400029a8:	lea    rdx,[r9+rax*1]
   1400029ac:	mov    rax,QWORD PTR [r10+0x10]
   1400029b0:	sub    r8,rdx
   1400029b3:	lea    rcx,[r10+rax*1]
   1400029b7:	add    r8,r9
   1400029ba:	and    r8,0xfffffffffffffffc
   1400029be:	call   0x140013f44
   1400029c3:	mov    r11,QWORD PTR [rdi]
   1400029c6:	mov    rcx,QWORD PTR [rbx]
   1400029c9:	mov    eax,DWORD PTR [r11+0x4]
   1400029cd:	mov    DWORD PTR [rcx+0x4],eax
   1400029d0:	mov    rax,rbx
   1400029d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400029d8:	add    rsp,0x20
   1400029dc:	pop    rdi
   1400029dd:	ret    
   1400029de:	int3   
   1400029df:	int3   
   1400029e0:	jmp    0x140002880
   1400029e5:	int3   
   1400029e6:	int3   
   1400029e7:	int3   
   1400029e8:	int3   
   1400029e9:	int3   
   1400029ea:	int3   
   1400029eb:	int3   
   1400029ec:	int3   
   1400029ed:	int3   
   1400029ee:	int3   
   1400029ef:	int3   
   1400029f0:	rex push rdi
   1400029f2:	sub    rsp,0x30
   1400029f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400029ff:	mov    QWORD PTR [rsp+0x40],rbx
   140002a04:	mov    QWORD PTR [rsp+0x58],rsi
   140002a09:	mov    rsi,r9
   140002a0c:	mov    DWORD PTR [rip+0x3683e],0x0        # 0x140039254
   140002a16:	or     edi,0xffffffff
   140002a19:	mov    DWORD PTR [rip+0x36831],edi        # 0x140039250
   140002a1f:	mov    DWORD PTR [rip+0x368fb],edi        # 0x140039320
   140002a25:	mov    QWORD PTR [rip+0x3685c],rdx        # 0x140039288
   140002a2c:	mov    QWORD PTR [rip+0x368f5],r8        # 0x140039328
   140002a33:	mov    rdx,rcx
   140002a36:	lea    rcx,[rip+0x46903]        # 0x140049340
   140002a3d:	call   QWORD PTR [rip+0x18825]        # 0x14001b268
   140002a43:	call   QWORD PTR [rip+0x3683f]        # 0x140039288
   140002a49:	mov    DWORD PTR [rip+0x3682d],eax        # 0x14003927c
   140002a4f:	mov    rbx,QWORD PTR [rip+0x18b7a]        # 0x14001b5d0
   140002a56:	mov    QWORD PTR [rsp+0x48],rbx
   140002a5b:	cmp    rbx,QWORD PTR [rip+0x468f6]        # 0x140049358
   140002a62:	je     0x140002ac2
   140002a64:	lea    rdx,[rsp+0x48]
   140002a69:	lea    rcx,[rsp+0x50]
   140002a6e:	call   0x140002900
   140002a73:	mov    r11,QWORD PTR [rsp+0x50]
   140002a78:	mov    rcx,QWORD PTR [rip+0x468d9]        # 0x140049358
   140002a7f:	mov    QWORD PTR [rsp+0x50],rcx
   140002a84:	mov    QWORD PTR [rip+0x468cd],r11        # 0x140049358
   140002a8b:	mov    eax,DWORD PTR [rcx]
   140002a8d:	test   eax,eax
   140002a8f:	je     0x140002ab2
   140002a91:	cmp    eax,edi
   140002a93:	je     0x140002ac2
   140002a95:	lock add DWORD PTR [rcx],edi
   140002a98:	setne  al
   140002a9b:	test   al,al
   140002a9d:	jne    0x140002aab
   140002a9f:	mov    rbx,QWORD PTR [rsp+0x48]
   140002aa4:	mov    rcx,QWORD PTR [rsp+0x50]
   140002aa9:	jmp    0x140002ab2
   140002aab:	mov    rbx,QWORD PTR [rsp+0x48]
   140002ab0:	jmp    0x140002ac2
   140002ab2:	mov    edx,0x4
   140002ab7:	lea    r8d,[rdx+0x4]
   140002abb:	call   QWORD PTR [rip+0x18aff]        # 0x14001b5c0
   140002ac1:	nop
   140002ac2:	mov    eax,DWORD PTR [rbx]
   140002ac4:	test   eax,eax
   140002ac6:	je     0x140002add
   140002ac8:	cmp    eax,0xffffffff
   140002acb:	je     0x140002aef
   140002acd:	lock add DWORD PTR [rbx],0xffffffff
   140002ad1:	setne  al
   140002ad4:	test   al,al
   140002ad6:	jne    0x140002aef
   140002ad8:	mov    rbx,QWORD PTR [rsp+0x48]
   140002add:	mov    edx,0x4
   140002ae2:	lea    r8d,[rdx+0x4]
   140002ae6:	mov    rcx,rbx
   140002ae9:	call   QWORD PTR [rip+0x18ad1]        # 0x14001b5c0
   140002aef:	mov    DWORD PTR [rip+0x3677f],0x0        # 0x140039278
   140002af9:	mov    DWORD PTR [rip+0x3675d],0x1        # 0x140039260
   140002b03:	mov    DWORD PTR [rip+0x26737],0x1        # 0x140029244
   140002b0d:	mov    QWORD PTR [rip+0x4681c],rsi        # 0x140049330
   140002b14:	test   rsi,rsi
   140002b17:	jne    0x140002b42
   140002b19:	lea    rcx,[rip+0x197d8]        # 0x14001c2f8
   140002b20:	call   QWORD PTR [rip+0x18792]        # 0x14001b2b8
   140002b26:	mov    QWORD PTR [rip+0x46803],rax        # 0x140049330
   140002b2d:	mov    rax,QWORD PTR [rsp+0x60]
   140002b32:	mov    QWORD PTR [rip+0x467ff],rax        # 0x140049338
   140002b39:	mov    BYTE PTR [rip+0x36724],sil        # 0x140039264
   140002b40:	jmp    0x140002b55
   140002b42:	mov    rax,QWORD PTR [rsp+0x60]
   140002b47:	mov    QWORD PTR [rip+0x467ea],rax        # 0x140049338
   140002b4e:	mov    BYTE PTR [rip+0x3670f],0x0        # 0x140039264
   140002b55:	mov    rbx,QWORD PTR [rsp+0x40]
   140002b5a:	mov    rsi,QWORD PTR [rsp+0x58]
   140002b5f:	add    rsp,0x30
   140002b63:	pop    rdi
   140002b64:	ret    
   140002b65:	int3   
   140002b66:	int3   
   140002b67:	int3   
   140002b68:	int3   
   140002b69:	int3   
   140002b6a:	int3   
   140002b6b:	int3   
   140002b6c:	int3   
   140002b6d:	int3   
   140002b6e:	int3   
   140002b6f:	int3   
   140002b70:	mov    QWORD PTR [rsp+0x8],rcx
   140002b75:	push   rbx
   140002b76:	sub    rsp,0x30
   140002b7a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002b83:	mov    rbx,rcx
   140002b86:	add    rcx,0x28
   140002b8a:	call   QWORD PTR [rip+0x18a98]        # 0x14001b628
   140002b90:	nop
   140002b91:	lea    rcx,[rbx+0x20]
   140002b95:	call   0x140002880
   140002b9a:	nop
   140002b9b:	lea    rcx,[rbx+0x18]
   140002b9f:	call   QWORD PTR [rip+0x18a7b]        # 0x14001b620
   140002ba5:	nop
   140002ba6:	lea    rcx,[rbx+0x10]
   140002baa:	call   QWORD PTR [rip+0x18a70]        # 0x14001b620
   140002bb0:	nop
   140002bb1:	lea    rcx,[rbx+0x8]
   140002bb5:	add    rsp,0x30
   140002bb9:	pop    rbx
   140002bba:	rex.W jmp QWORD PTR [rip+0x18a5f]        # 0x14001b620
   140002bc1:	int3   
   140002bc2:	int3   
   140002bc3:	int3   
   140002bc4:	int3   
   140002bc5:	int3   
   140002bc6:	int3   
   140002bc7:	int3   
   140002bc8:	int3   
   140002bc9:	int3   
   140002bca:	int3   
   140002bcb:	int3   
   140002bcc:	int3   
   140002bcd:	int3   
   140002bce:	int3   
   140002bcf:	int3   
   140002bd0:	rex push rbx
   140002bd2:	push   rbp
   140002bd3:	push   rsi
   140002bd4:	push   rdi
   140002bd5:	push   r12
   140002bd7:	push   r13
   140002bd9:	sub    rsp,0xb8
   140002be0:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140002be9:	mov    r12,rcx
   140002bec:	mov    rax,QWORD PTR [rcx+0x50]
   140002bf0:	cmp    DWORD PTR [rax+0x4],0x0
   140002bf4:	je     0x140002dad
   140002bfa:	mov    rax,QWORD PTR [rcx+0x58]
   140002bfe:	cmp    DWORD PTR [rax+0x4],0x0
   140002c02:	je     0x140002dad
   140002c08:	mov    rax,QWORD PTR [rip+0x189d1]        # 0x14001b5e0
   140002c0f:	mov    QWORD PTR [rsp+0xf0],rax
   140002c17:	lea    rdx,[rcx+0x48]
   140002c1b:	lea    rcx,[rsp+0x50]
   140002c20:	call   QWORD PTR [rip+0x186aa]        # 0x14001b2d0
   140002c26:	mov    rbp,rax
   140002c29:	lea    rcx,[r12+0x60]
   140002c2e:	lea    rdx,[rsp+0x108]
   140002c36:	call   QWORD PTR [rip+0x1868c]        # 0x14001b2c8
   140002c3c:	mov    rsi,rax
   140002c3f:	lea    rdx,[rsp+0x100]
   140002c47:	lea    rcx,[r12+0x58]
   140002c4c:	call   QWORD PTR [rip+0x18676]        # 0x14001b2c8
   140002c52:	mov    rdi,rax
   140002c55:	lea    rdx,[rsp+0xf8]
   140002c5d:	lea    rcx,[r12+0x50]
   140002c62:	call   QWORD PTR [rip+0x18660]        # 0x14001b2c8
   140002c68:	mov    rbx,rax
   140002c6b:	mov    rcx,rsi
   140002c6e:	call   QWORD PTR [rip+0x185cc]        # 0x14001b240
   140002c74:	mov    rsi,rax
   140002c77:	mov    rcx,rdi
   140002c7a:	call   QWORD PTR [rip+0x185c0]        # 0x14001b240
   140002c80:	mov    rdi,rax
   140002c83:	mov    rcx,rbx
   140002c86:	call   QWORD PTR [rip+0x185b4]        # 0x14001b240
   140002c8c:	mov    rdx,rax
   140002c8f:	mov    BYTE PTR [rsp+0x48],0x0
   140002c94:	mov    DWORD PTR [rsp+0x40],0x0
   140002c9c:	mov    BYTE PTR [rsp+0x38],0x1
   140002ca1:	lea    rax,[rsp+0xf0]
   140002ca9:	mov    QWORD PTR [rsp+0x30],rax
   140002cae:	mov    ecx,DWORD PTR [r12+0x70]
   140002cb3:	mov    DWORD PTR [rsp+0x28],ecx
   140002cb7:	mov    QWORD PTR [rsp+0x20],rbp
   140002cbc:	mov    r9,rsi
   140002cbf:	mov    r8,rdi
   140002cc2:	lea    rcx,[rsp+0x60]
   140002cc7:	call   0x140009630
   140002ccc:	nop
   140002ccd:	mov    rdx,rax
   140002cd0:	mov    rcx,QWORD PTR [r12+0x40]
   140002cd5:	call   0x14000a9f0
   140002cda:	nop
   140002cdb:	lea    rcx,[rsp+0x88]
   140002ce3:	call   QWORD PTR [rip+0x1893f]        # 0x14001b628
   140002ce9:	nop
   140002cea:	lea    rcx,[rsp+0x80]
   140002cf2:	call   0x140002880
   140002cf7:	nop
   140002cf8:	lea    rcx,[rsp+0x78]
   140002cfd:	call   QWORD PTR [rip+0x1891d]        # 0x14001b620
   140002d03:	nop
   140002d04:	lea    rcx,[rsp+0x70]
   140002d09:	call   QWORD PTR [rip+0x18911]        # 0x14001b620
   140002d0f:	nop
   140002d10:	lea    rcx,[rsp+0x68]
   140002d15:	call   QWORD PTR [rip+0x18905]        # 0x14001b620
   140002d1b:	nop
   140002d1c:	lea    rcx,[rsp+0xf8]
   140002d24:	call   QWORD PTR [rip+0x188f6]        # 0x14001b620
   140002d2a:	nop
   140002d2b:	lea    rcx,[rsp+0x100]
   140002d33:	call   QWORD PTR [rip+0x188e7]        # 0x14001b620
   140002d39:	nop
   140002d3a:	lea    rcx,[rsp+0x108]
   140002d42:	call   QWORD PTR [rip+0x188d8]        # 0x14001b620
   140002d48:	nop
   140002d49:	lea    rcx,[rsp+0x50]
   140002d4e:	call   QWORD PTR [rip+0x188d4]        # 0x14001b628
   140002d54:	nop
   140002d55:	mov    rdi,QWORD PTR [rsp+0xf0]
   140002d5d:	mov    eax,DWORD PTR [rdi]
   140002d5f:	test   eax,eax
   140002d61:	je     0x140002d7b
   140002d63:	cmp    eax,0xffffffff
   140002d66:	je     0x140002dad
   140002d68:	lock add DWORD PTR [rdi],0xffffffff
   140002d6c:	setne  al
   140002d6f:	test   al,al
   140002d71:	jne    0x140002dad
   140002d73:	mov    rdi,QWORD PTR [rsp+0xf0]
   140002d7b:	movsxd rax,DWORD PTR [rdi+0xc]
   140002d7f:	lea    rbx,[rdi+rax*8+0x10]
   140002d84:	movsxd rax,DWORD PTR [rdi+0x8]
   140002d88:	lea    rsi,[rdi+rax*8+0x10]
   140002d8d:	cmp    rsi,rbx
   140002d90:	je     0x140002da4
   140002d92:	sub    rbx,0x8
   140002d96:	mov    rcx,rbx
   140002d99:	call   QWORD PTR [rip+0x18889]        # 0x14001b628
   140002d9f:	cmp    rbx,rsi
   140002da2:	jne    0x140002d92
   140002da4:	mov    rcx,rdi
   140002da7:	call   QWORD PTR [rip+0x184e3]        # 0x14001b290
   140002dad:	lea    rcx,[r12+0x58]
   140002db2:	xor    edx,edx
   140002db4:	call   QWORD PTR [rip+0x18506]        # 0x14001b2c0
   140002dba:	lea    rcx,[r12+0x60]
   140002dbf:	xor    edx,edx
   140002dc1:	add    rsp,0xb8
   140002dc8:	pop    r13
   140002dca:	pop    r12
   140002dcc:	pop    rdi
   140002dcd:	pop    rsi
   140002dce:	pop    rbp
   140002dcf:	pop    rbx
   140002dd0:	rex.W jmp QWORD PTR [rip+0x184e9]        # 0x14001b2c0
   140002dd7:	int3   
   140002dd8:	int3   
   140002dd9:	int3   
   140002dda:	int3   
   140002ddb:	int3   
   140002ddc:	int3   
   140002ddd:	int3   
   140002dde:	int3   
   140002ddf:	int3   
   140002de0:	sub    rsp,0x28
   140002de4:	mov    rdx,QWORD PTR [rcx]
   140002de7:	mov    eax,DWORD PTR [rdx]
   140002de9:	test   eax,eax
   140002deb:	je     0x140002dfd
   140002ded:	cmp    eax,0xffffffff
   140002df0:	je     0x140002e05
   140002df2:	lock add DWORD PTR [rdx],0xffffffff
   140002df6:	setne  al
   140002df9:	test   al,al
   140002dfb:	jne    0x140002e05
   140002dfd:	mov    rcx,QWORD PTR [rcx]
   140002e00:	call   0x140002810
   140002e05:	add    rsp,0x28
   140002e09:	ret    
   140002e0a:	int3   
   140002e0b:	int3   
   140002e0c:	int3   
   140002e0d:	int3   
   140002e0e:	int3   
   140002e0f:	int3   
   140002e10:	rex push rdi
   140002e12:	sub    rsp,0x50
   140002e16:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140002e1f:	mov    QWORD PTR [rsp+0x68],rbx
   140002e24:	mov    QWORD PTR [rsp+0x70],rsi
   140002e29:	mov    rsi,r9
   140002e2c:	mov    rbx,rcx
   140002e2f:	mov    DWORD PTR [rsp+0x60],0x0
   140002e37:	xor    eax,eax
   140002e39:	or     rcx,0xffffffffffffffff
   140002e3d:	lea    rdi,[rip+0x1957c]        # 0x14001c3c0
   140002e44:	repnz scas al,BYTE PTR es:[rdi]
   140002e46:	not    rcx
   140002e49:	lea    rdx,[rcx-0x1]
   140002e4d:	lea    rcx,[rip+0x1956c]        # 0x14001c3c0
   140002e54:	call   QWORD PTR [rip+0x187be]        # 0x14001b618
   140002e5a:	mov    QWORD PTR [rsp+0x60],rax
   140002e5f:	lea    rdx,[rsp+0x60]
   140002e64:	mov    rcx,rsi
   140002e67:	call   QWORD PTR [rip+0x187c3]        # 0x14001b630
   140002e6d:	movzx  edi,al
   140002e70:	lea    rcx,[rsp+0x60]
   140002e75:	call   QWORD PTR [rip+0x187ad]        # 0x14001b628
   140002e7b:	test   dil,dil
   140002e7e:	je     0x140002f5e
   140002e84:	mov    rcx,rbx
   140002e87:	call   0x140002bd0
   140002e8c:	xor    eax,eax
   140002e8e:	or     rcx,0xffffffffffffffff
   140002e92:	lea    rdi,[rip+0x1951f]        # 0x14001c3b8
   140002e99:	repnz scas al,BYTE PTR es:[rdi]
   140002e9b:	not    rcx
   140002e9e:	lea    rdx,[rcx-0x1]
   140002ea2:	lea    rcx,[rip+0x1950f]        # 0x14001c3b8
   140002ea9:	call   QWORD PTR [rip+0x18769]        # 0x14001b618
   140002eaf:	mov    QWORD PTR [rsp+0x60],rax
   140002eb4:	lea    r8,[rsp+0x60]
   140002eb9:	lea    rdx,[rsp+0x30]
   140002ebe:	mov    rsi,QWORD PTR [rsp+0x80]
   140002ec6:	mov    rcx,rsi
   140002ec9:	call   QWORD PTR [rip+0x187b1]        # 0x14001b680
   140002ecf:	mov    rdx,QWORD PTR [rax]
   140002ed2:	cmp    DWORD PTR [rdx+0x4],0x0
   140002ed6:	setne  dil
   140002eda:	lea    rcx,[rsp+0x30]
   140002edf:	call   QWORD PTR [rip+0x18743]        # 0x14001b628
   140002ee5:	nop
   140002ee6:	lea    rcx,[rsp+0x60]
   140002eeb:	call   QWORD PTR [rip+0x18737]        # 0x14001b628
   140002ef1:	test   dil,dil
   140002ef4:	je     0x140003196
   140002efa:	xor    eax,eax
   140002efc:	or     rcx,0xffffffffffffffff
   140002f00:	lea    rdi,[rip+0x194b1]        # 0x14001c3b8
   140002f07:	repnz scas al,BYTE PTR es:[rdi]
   140002f09:	not    rcx
   140002f0c:	lea    rdx,[rcx-0x1]
   140002f10:	lea    rcx,[rip+0x194a1]        # 0x14001c3b8
   140002f17:	call   QWORD PTR [rip+0x186fb]        # 0x14001b618
   140002f1d:	mov    QWORD PTR [rsp+0x60],rax
   140002f22:	lea    r8,[rsp+0x60]
   140002f27:	lea    rdx,[rsp+0x30]
   140002f2c:	mov    rcx,rsi
   140002f2f:	call   QWORD PTR [rip+0x1874b]        # 0x14001b680
   140002f35:	lea    rcx,[rbx+0x58]
   140002f39:	mov    rdx,rax
   140002f3c:	call   QWORD PTR [rip+0x18396]        # 0x14001b2d8
   140002f42:	lea    rcx,[rsp+0x30]
   140002f47:	call   QWORD PTR [rip+0x186db]        # 0x14001b628
   140002f4d:	nop
   140002f4e:	lea    rcx,[rsp+0x60]
   140002f53:	call   QWORD PTR [rip+0x186cf]        # 0x14001b628
   140002f59:	jmp    0x140003196
   140002f5e:	xor    eax,eax
   140002f60:	or     rcx,0xffffffffffffffff
   140002f64:	lea    rdi,[rip+0x19445]        # 0x14001c3b0
   140002f6b:	repnz scas al,BYTE PTR es:[rdi]
   140002f6d:	not    rcx
   140002f70:	lea    rdx,[rcx-0x1]
   140002f74:	lea    rcx,[rip+0x19435]        # 0x14001c3b0
   140002f7b:	call   QWORD PTR [rip+0x18697]        # 0x14001b618
   140002f81:	mov    QWORD PTR [rsp+0x60],rax
   140002f86:	lea    rdx,[rsp+0x60]
   140002f8b:	mov    rcx,rsi
   140002f8e:	call   QWORD PTR [rip+0x1869c]        # 0x14001b630
   140002f94:	movzx  edi,al
   140002f97:	lea    rcx,[rsp+0x60]
   140002f9c:	call   QWORD PTR [rip+0x18686]        # 0x14001b628
   140002fa2:	test   dil,dil
   140002fa5:	je     0x140003196
   140002fab:	mov    rcx,rbx
   140002fae:	call   0x140002bd0
   140002fb3:	xor    eax,eax
   140002fb5:	or     rcx,0xffffffffffffffff
   140002fb9:	lea    rdi,[rip+0x193e8]        # 0x14001c3a8
   140002fc0:	repnz scas al,BYTE PTR es:[rdi]
   140002fc2:	not    rcx
   140002fc5:	lea    rdx,[rcx-0x1]
   140002fc9:	lea    rcx,[rip+0x193d8]        # 0x14001c3a8
   140002fd0:	call   QWORD PTR [rip+0x18642]        # 0x14001b618
   140002fd6:	mov    QWORD PTR [rsp+0x30],rax
   140002fdb:	mov    DWORD PTR [rsp+0x60],0x1
   140002fe3:	lea    r8,[rsp+0x30]
   140002fe8:	lea    rdx,[rsp+0x40]
   140002fed:	mov    rcx,QWORD PTR [rsp+0x80]
   140002ff5:	call   QWORD PTR [rip+0x18685]        # 0x14001b680
   140002ffb:	nop
   140002ffc:	mov    edi,0x3
   140003001:	mov    DWORD PTR [rsp+0x60],edi
   140003005:	mov    rax,QWORD PTR [rax]
   140003008:	cmp    DWORD PTR [rax+0x4],0x0
   14000300c:	je     0x1400030ab
   140003012:	xor    eax,eax
   140003014:	or     rcx,0xffffffffffffffff
   140003018:	lea    rdi,[rip+0x19381]        # 0x14001c3a0
   14000301f:	repnz scas al,BYTE PTR es:[rdi]
   140003021:	not    rcx
   140003024:	lea    rdx,[rcx-0x1]
   140003028:	lea    rcx,[rip+0x19371]        # 0x14001c3a0
   14000302f:	call   QWORD PTR [rip+0x185e3]        # 0x14001b618
   140003035:	mov    QWORD PTR [rsp+0x28],rax
   14000303a:	mov    DWORD PTR [rsp+0x60],0x7
   140003042:	xor    eax,eax
   140003044:	or     rcx,0xffffffffffffffff
   140003048:	lea    rdi,[rip+0x19359]        # 0x14001c3a8
   14000304f:	repnz scas al,BYTE PTR es:[rdi]
   140003051:	not    rcx
   140003054:	lea    rdx,[rcx-0x1]
   140003058:	lea    rcx,[rip+0x19349]        # 0x14001c3a8
   14000305f:	call   QWORD PTR [rip+0x185b3]        # 0x14001b618
   140003065:	mov    QWORD PTR [rsp+0x20],rax
   14000306a:	mov    DWORD PTR [rsp+0x60],0xf
   140003072:	lea    r8,[rsp+0x20]
   140003077:	lea    rdx,[rsp+0x38]
   14000307c:	mov    rcx,QWORD PTR [rsp+0x80]
   140003084:	call   QWORD PTR [rip+0x185f6]        # 0x14001b680
   14000308a:	nop
   14000308b:	mov    edi,0x1f
   140003090:	mov    DWORD PTR [rsp+0x60],edi
   140003094:	lea    rdx,[rsp+0x28]
   140003099:	mov    rcx,rax
   14000309c:	call   QWORD PTR [rip+0x1858e]        # 0x14001b630
   1400030a2:	test   al,al
   1400030a4:	je     0x1400030ab
   1400030a6:	xor    sil,sil
   1400030a9:	jmp    0x1400030ae
   1400030ab:	mov    sil,0x1
   1400030ae:	test   dil,0x10
   1400030b2:	je     0x1400030c7
   1400030b4:	and    edi,0xffffffef
   1400030b7:	mov    DWORD PTR [rsp+0x60],edi
   1400030bb:	lea    rcx,[rsp+0x38]
   1400030c0:	call   QWORD PTR [rip+0x18562]        # 0x14001b628
   1400030c6:	nop
   1400030c7:	test   dil,0x8
   1400030cb:	je     0x1400030e0
   1400030cd:	and    edi,0xfffffff7
   1400030d0:	mov    DWORD PTR [rsp+0x60],edi
   1400030d4:	lea    rcx,[rsp+0x20]
   1400030d9:	call   QWORD PTR [rip+0x18549]        # 0x14001b628
   1400030df:	nop
   1400030e0:	test   dil,0x4
   1400030e4:	je     0x1400030f9
   1400030e6:	and    edi,0xfffffffb
   1400030e9:	mov    DWORD PTR [rsp+0x60],edi
   1400030ed:	lea    rcx,[rsp+0x28]
   1400030f2:	call   QWORD PTR [rip+0x18530]        # 0x14001b628
   1400030f8:	nop
   1400030f9:	test   dil,0x2
   1400030fd:	je     0x140003112
   1400030ff:	and    edi,0xfffffffd
   140003102:	mov    DWORD PTR [rsp+0x60],edi
   140003106:	lea    rcx,[rsp+0x40]
   14000310b:	call   QWORD PTR [rip+0x18517]        # 0x14001b628
   140003111:	nop
   140003112:	test   dil,0x1
   140003116:	je     0x140003123
   140003118:	lea    rcx,[rsp+0x30]
   14000311d:	call   QWORD PTR [rip+0x18505]        # 0x14001b628
   140003123:	test   sil,sil
   140003126:	je     0x140003192
   140003128:	mov    BYTE PTR [rbx+0x74],0x1
   14000312c:	xor    eax,eax
   14000312e:	or     rcx,0xffffffffffffffff
   140003132:	lea    rdi,[rip+0x1925f]        # 0x14001c398
   140003139:	repnz scas al,BYTE PTR es:[rdi]
   14000313b:	not    rcx
   14000313e:	lea    rdx,[rcx-0x1]
   140003142:	lea    rcx,[rip+0x1924f]        # 0x14001c398
   140003149:	call   QWORD PTR [rip+0x184c9]        # 0x14001b618
   14000314f:	mov    QWORD PTR [rsp+0x60],rax
   140003154:	lea    r8,[rsp+0x60]
   140003159:	lea    rdx,[rsp+0x40]
   14000315e:	mov    rcx,QWORD PTR [rsp+0x80]
   140003166:	call   QWORD PTR [rip+0x18514]        # 0x14001b680
   14000316c:	lea    rcx,[rbx+0x60]
   140003170:	mov    rdx,rax
   140003173:	call   QWORD PTR [rip+0x1815f]        # 0x14001b2d8
   140003179:	lea    rcx,[rsp+0x40]
   14000317e:	call   QWORD PTR [rip+0x184a4]        # 0x14001b628
   140003184:	nop
   140003185:	lea    rcx,[rsp+0x60]
   14000318a:	call   QWORD PTR [rip+0x18498]        # 0x14001b628
   140003190:	jmp    0x140003196
   140003192:	mov    BYTE PTR [rbx+0x74],0x0
   140003196:	cmp    BYTE PTR [rbx+0x74],0x0
   14000319a:	je     0x1400031a9
   14000319c:	mov    rcx,QWORD PTR [rbx+0x38]
   1400031a0:	mov    rax,QWORD PTR [rcx]
   1400031a3:	call   QWORD PTR [rax+0x10]
   1400031a6:	mov    DWORD PTR [rbx+0x70],eax
   1400031a9:	lea    rcx,[rbx+0x68]
   1400031ad:	xor    edx,edx
   1400031af:	call   QWORD PTR [rip+0x1810b]        # 0x14001b2c0
   1400031b5:	mov    al,0x1
   1400031b7:	mov    rbx,QWORD PTR [rsp+0x68]
   1400031bc:	mov    rsi,QWORD PTR [rsp+0x70]
   1400031c1:	add    rsp,0x50
   1400031c5:	pop    rdi
   1400031c6:	ret    
   1400031c7:	int3   
   1400031c8:	int3   
   1400031c9:	int3   
   1400031ca:	int3   
   1400031cb:	int3   
   1400031cc:	int3   
   1400031cd:	int3   
   1400031ce:	int3   
   1400031cf:	int3   
   1400031d0:	rex push rdi
   1400031d2:	sub    rsp,0x40
   1400031d6:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400031df:	mov    QWORD PTR [rsp+0x58],rbx
   1400031e4:	mov    QWORD PTR [rsp+0x60],rbp
   1400031e9:	mov    QWORD PTR [rsp+0x68],rsi
   1400031ee:	mov    rbp,r9
   1400031f1:	mov    rbx,rcx
   1400031f4:	mov    DWORD PTR [rsp+0x50],0x0
   1400031fc:	xor    eax,eax
   1400031fe:	or     rcx,0xffffffffffffffff
   140003202:	lea    rdi,[rip+0x191fb]        # 0x14001c404
   140003209:	repnz scas al,BYTE PTR es:[rdi]
   14000320b:	not    rcx
   14000320e:	lea    rdx,[rcx-0x1]
   140003212:	lea    rcx,[rip+0x191eb]        # 0x14001c404
   140003219:	call   QWORD PTR [rip+0x183f9]        # 0x14001b618
   14000321f:	mov    QWORD PTR [rsp+0x20],rax
   140003224:	xor    eax,eax
   140003226:	or     rcx,0xffffffffffffffff
   14000322a:	lea    rdi,[rip+0x191cf]        # 0x14001c400
   140003231:	repnz scas al,BYTE PTR es:[rdi]
   140003233:	not    rcx
   140003236:	lea    rdx,[rcx-0x1]
   14000323a:	lea    rcx,[rip+0x191bf]        # 0x14001c400
   140003241:	call   QWORD PTR [rip+0x183d1]        # 0x14001b618
   140003247:	mov    QWORD PTR [rsp+0x50],rax
   14000324c:	xor    r9d,r9d
   14000324f:	lea    r8d,[r9+0x1]
   140003253:	lea    rdx,[rsp+0x50]
   140003258:	lea    rcx,[rsp+0x28]
   14000325d:	call   QWORD PTR [rip+0x1808d]        # 0x14001b2f0
   140003263:	nop
   140003264:	lea    r8,[rsp+0x20]
   140003269:	mov    rdx,rax
   14000326c:	lea    rcx,[rbx+0x68]
   140003270:	call   QWORD PTR [rip+0x18072]        # 0x14001b2e8
   140003276:	nop
   140003277:	lea    rcx,[rsp+0x28]
   14000327c:	call   QWORD PTR [rip+0x1805e]        # 0x14001b2e0
   140003282:	nop
   140003283:	lea    rcx,[rsp+0x50]
   140003288:	call   QWORD PTR [rip+0x1839a]        # 0x14001b628
   14000328e:	nop
   14000328f:	lea    rcx,[rsp+0x20]
   140003294:	call   QWORD PTR [rip+0x1838e]        # 0x14001b628
   14000329a:	xor    eax,eax
   14000329c:	or     rcx,0xffffffffffffffff
   1400032a0:	lea    rdi,[rip+0x19151]        # 0x14001c3f8
   1400032a7:	repnz scas al,BYTE PTR es:[rdi]
   1400032a9:	not    rcx
   1400032ac:	lea    rdx,[rcx-0x1]
   1400032b0:	lea    rcx,[rip+0x19141]        # 0x14001c3f8
   1400032b7:	call   QWORD PTR [rip+0x1835b]        # 0x14001b618
   1400032bd:	mov    QWORD PTR [rsp+0x50],rax
   1400032c2:	lea    rdx,[rsp+0x50]
   1400032c7:	mov    rcx,rbp
   1400032ca:	call   QWORD PTR [rip+0x18360]        # 0x14001b630
   1400032d0:	movzx  edi,al
   1400032d3:	lea    rcx,[rsp+0x50]
   1400032d8:	call   QWORD PTR [rip+0x1834a]        # 0x14001b628
   1400032de:	test   dil,dil
   1400032e1:	je     0x140003308
   1400032e3:	lea    rcx,[rbx+0x50]
   1400032e7:	mov    rax,QWORD PTR [rcx]
   1400032ea:	cmp    DWORD PTR [rax+0x4],0x0
   1400032ee:	jne    0x140003301
   1400032f0:	lea    rdx,[rbx+0x68]
   1400032f4:	call   QWORD PTR [rip+0x17fde]        # 0x14001b2d8
   1400032fa:	mov    al,0x1
   1400032fc:	jmp    0x1400033e7
   140003301:	mov    al,0x1
   140003303:	jmp    0x1400033e7
   140003308:	xor    eax,eax
   14000330a:	or     rcx,0xffffffffffffffff
   14000330e:	lea    rdi,[rip+0x1909b]        # 0x14001c3b0
   140003315:	repnz scas al,BYTE PTR es:[rdi]
   140003317:	not    rcx
   14000331a:	lea    rdx,[rcx-0x1]
   14000331e:	lea    rcx,[rip+0x1908b]        # 0x14001c3b0
   140003325:	call   QWORD PTR [rip+0x182ed]        # 0x14001b618
   14000332b:	mov    QWORD PTR [rsp+0x20],rax
   140003330:	mov    DWORD PTR [rsp+0x50],0x1
   140003338:	lea    rdx,[rsp+0x20]
   14000333d:	mov    rcx,rbp
   140003340:	call   QWORD PTR [rip+0x182ea]        # 0x14001b630
   140003346:	test   al,al
   140003348:	je     0x140003355
   14000334a:	cmp    BYTE PTR [rbx+0x74],0x0
   14000334e:	je     0x140003355
   140003350:	mov    dil,0x1
   140003353:	jmp    0x140003358
   140003355:	xor    dil,dil
   140003358:	lea    rcx,[rsp+0x20]
   14000335d:	call   QWORD PTR [rip+0x182c5]        # 0x14001b628
   140003363:	test   dil,dil
   140003366:	je     0x14000337a
   140003368:	lea    rcx,[rbx+0x58]
   14000336c:	lea    rdx,[rbx+0x68]
   140003370:	call   QWORD PTR [rip+0x17f62]        # 0x14001b2d8
   140003376:	mov    al,0x1
   140003378:	jmp    0x1400033e7
   14000337a:	xor    eax,eax
   14000337c:	or     rcx,0xffffffffffffffff
   140003380:	lea    rdi,[rip+0x19011]        # 0x14001c398
   140003387:	repnz scas al,BYTE PTR es:[rdi]
   140003389:	not    rcx
   14000338c:	lea    rdx,[rcx-0x1]
   140003390:	lea    rcx,[rip+0x19001]        # 0x14001c398
   140003397:	call   QWORD PTR [rip+0x1827b]        # 0x14001b618
   14000339d:	mov    QWORD PTR [rsp+0x50],rax
   1400033a2:	lea    rdx,[rsp+0x50]
   1400033a7:	mov    rcx,rbp
   1400033aa:	call   QWORD PTR [rip+0x18280]        # 0x14001b630
   1400033b0:	movzx  edi,al
   1400033b3:	lea    rcx,[rsp+0x50]
   1400033b8:	call   QWORD PTR [rip+0x1826a]        # 0x14001b628
   1400033be:	test   dil,dil
   1400033c1:	je     0x1400033dd
   1400033c3:	lea    rcx,[rbx+0x60]
   1400033c7:	lea    rdx,[rbx+0x68]
   1400033cb:	call   QWORD PTR [rip+0x17f07]        # 0x14001b2d8
   1400033d1:	mov    rcx,rbx
   1400033d4:	call   0x140002bd0
   1400033d9:	mov    al,0x1
   1400033db:	jmp    0x1400033e7
   1400033dd:	mov    rcx,rbx
   1400033e0:	call   0x140002bd0
   1400033e5:	mov    al,0x1
   1400033e7:	mov    rbx,QWORD PTR [rsp+0x58]
   1400033ec:	mov    rbp,QWORD PTR [rsp+0x60]
   1400033f1:	mov    rsi,QWORD PTR [rsp+0x68]
   1400033f6:	add    rsp,0x40
   1400033fa:	pop    rdi
   1400033fb:	ret    
   1400033fc:	int3   
   1400033fd:	int3   
   1400033fe:	int3   
   1400033ff:	int3   
   140003400:	mov    rax,rsp
   140003403:	mov    QWORD PTR [rax+0x18],r8
   140003407:	mov    QWORD PTR [rax+0x8],rcx
   14000340b:	push   rbp
   14000340c:	push   rsi
   14000340d:	push   rdi
   14000340e:	push   r12
   140003410:	push   r13
   140003412:	push   r14
   140003414:	push   r15
   140003416:	sub    rsp,0x1e0
   14000341d:	mov    QWORD PTR [rsp+0xe0],0xfffffffffffffffe
   140003429:	mov    QWORD PTR [rax+0x10],rbx
   14000342d:	mov    rsi,r8
   140003430:	mov    rdi,rdx
   140003433:	mov    r13,rcx
   140003436:	mov    DWORD PTR [rax+0x20],0x0
   14000343d:	mov    rbx,QWORD PTR [rip+0x18194]        # 0x14001b5d8
   140003444:	mov    QWORD PTR [rsp+0x60],rbx
   140003449:	lea    rcx,[rsp+0x50]
   14000344e:	call   QWORD PTR [rip+0x17e04]        # 0x14001b258
   140003454:	nop
   140003455:	lea    rcx,[rsp+0x68]
   14000345a:	call   QWORD PTR [rip+0x17df8]        # 0x14001b258
   140003460:	nop
   140003461:	lea    rcx,[rsp+0x58]
   140003466:	call   QWORD PTR [rip+0x17dec]        # 0x14001b258
   14000346c:	nop
   14000346d:	or     r12d,0xffffffff
   140003471:	mov    r8d,r12d
   140003474:	mov    rdx,rdi
   140003477:	lea    rcx,[rsp+0x90]
   14000347f:	call   QWORD PTR [rip+0x18183]        # 0x14001b608
   140003485:	nop
   140003486:	lea    rcx,[rsp+0x70]
   14000348b:	call   QWORD PTR [rip+0x17dc7]        # 0x14001b258
   140003491:	nop
   140003492:	call   0x1400014b0
   140003497:	mov    edx,eax
   140003499:	mov    DWORD PTR [rip+0x35e85],eax        # 0x140039324
   14000349f:	test   eax,eax
   1400034a1:	je     0x1400040fe
   1400034a7:	lea    rdi,[rip+0xffffffffffffcb52]        # 0x140000000
   1400034ae:	xchg   ax,ax
   1400034b0:	lea    eax,[rdx-0x1]
   1400034b3:	cmp    eax,0x6
   1400034b6:	ja     0x1400040da
   1400034bc:	cdqe   
   1400034be:	mov    ecx,DWORD PTR [rdi+rax*4+0x41c4]
   1400034c5:	add    rcx,rdi
   1400034c8:	jmp    rcx
   1400034ca:	call   0x1400014b0
   1400034cf:	mov    DWORD PTR [rip+0x35e4f],eax        # 0x140039324
   1400034d5:	lea    rdx,[rip+0x35db4]        # 0x140039290
   1400034dc:	lea    rcx,[rsp+0x90]
   1400034e4:	call   QWORD PTR [rip+0x17d7e]        # 0x14001b268
   1400034ea:	call   0x1400014b0
   1400034ef:	mov    edx,eax
   1400034f1:	mov    DWORD PTR [rip+0x35e2d],eax        # 0x140039324
   1400034f7:	jmp    0x1400040e7
   1400034fc:	cmp    edx,0x4
   1400034ff:	je     0x140003554
   140003501:	mov    rcx,QWORD PTR [rip+0x45e28]        # 0x140049330
   140003508:	test   rcx,rcx
   14000350b:	je     0x140003547
   14000350d:	mov    rax,QWORD PTR [rcx]
   140003510:	lea    rdx,[rsp+0xc8]
   140003518:	call   QWORD PTR [rax]
   14000351a:	nop
   14000351b:	or     DWORD PTR [rsp+0x238],0x1
   140003523:	mov    rcx,rax
   140003526:	call   QWORD PTR [rip+0x17d14]        # 0x14001b240
   14000352c:	mov    rsi,rax
   14000352f:	lea    rdi,[rip+0x18f3a]        # 0x14001c470
   140003536:	mov    ecx,0x6
   14000353b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000353d:	je     0x14000354c
   14000353f:	mov    rsi,QWORD PTR [rsp+0x230]
   140003547:	xor    r15b,r15b
   14000354a:	jmp    0x140003557
   14000354c:	mov    rsi,QWORD PTR [rsp+0x230]
   140003554:	mov    r15b,0x1
   140003557:	test   BYTE PTR [rsp+0x238],0x1
   14000355f:	je     0x140003577
   140003561:	and    DWORD PTR [rsp+0x238],0xfffffffe
   140003569:	lea    rcx,[rsp+0xc8]
   140003571:	call   QWORD PTR [rip+0x180a9]        # 0x14001b620
   140003577:	call   0x1400014b0
   14000357c:	mov    edx,eax
   14000357e:	mov    DWORD PTR [rip+0x35da0],eax        # 0x140039324
   140003584:	cmp    eax,0xa
   140003587:	sete   al
   14000358a:	test   al,al
   14000358c:	je     0x1400040e7
   140003592:	call   0x1400014b0
   140003597:	mov    DWORD PTR [rip+0x35d87],eax        # 0x140039324
   14000359d:	cmp    eax,0x9
   1400035a0:	sete   dil
   1400035a4:	lea    rdx,[rip+0x1883d]        # 0x14001bde8
   1400035ab:	lea    rcx,[rsp+0x68]
   1400035b0:	call   QWORD PTR [rip+0x17cb2]        # 0x14001b268
   1400035b6:	mov    edx,DWORD PTR [rip+0x35d68]        # 0x140039324
   1400035bc:	cmp    edx,0x9
   1400035bf:	jne    0x1400035e5
   1400035c1:	lea    rdx,[rip+0x35d68]        # 0x140039330
   1400035c8:	lea    rcx,[rsp+0x68]
   1400035cd:	call   QWORD PTR [rip+0x17c8d]        # 0x14001b260
   1400035d3:	call   0x1400014b0
   1400035d8:	mov    edx,eax
   1400035da:	mov    DWORD PTR [rip+0x35d44],eax        # 0x140039324
   1400035e0:	cmp    eax,0x9
   1400035e3:	je     0x1400035c1
   1400035e5:	test   dil,dil
   1400035e8:	je     0x1400040e7
   1400035ee:	lea    rdx,[rip+0x187f3]        # 0x14001bde8
   1400035f5:	lea    rcx,[rsp+0x58]
   1400035fa:	call   QWORD PTR [rip+0x17c68]        # 0x14001b268
   140003600:	xor    r14b,r14b
   140003603:	mov    ecx,DWORD PTR [rip+0x35d1b]        # 0x140039324
   140003609:	cmp    ecx,0xb
   14000360c:	sete   al
   14000360f:	test   al,al
   140003611:	je     0x140003620
   140003613:	call   0x1400014b0
   140003618:	mov    DWORD PTR [rip+0x35d06],eax        # 0x140039324
   14000361e:	jmp    0x140003678
   140003620:	cmp    ecx,0xc
   140003623:	sete   al
   140003626:	test   al,al
   140003628:	je     0x140003678
   14000362a:	call   0x1400014b0
   14000362f:	mov    DWORD PTR [rip+0x35cef],eax        # 0x140039324
   140003635:	lea    rcx,[rsp+0x58]
   14000363a:	call   0x140002240
   14000363f:	test   al,al
   140003641:	je     0x140003678
   140003643:	mov    ecx,DWORD PTR [rip+0x35cdb]        # 0x140039324
   140003649:	cmp    ecx,0xb
   14000364c:	sete   al
   14000364f:	test   al,al
   140003651:	je     0x140003660
   140003653:	call   0x1400014b0
   140003658:	mov    DWORD PTR [rip+0x35cc6],eax        # 0x140039324
   14000365e:	jmp    0x140003678
   140003660:	cmp    ecx,0xc
   140003663:	sete   al
   140003666:	test   al,al
   140003668:	je     0x140003678
   14000366a:	call   0x1400014b0
   14000366f:	mov    DWORD PTR [rip+0x35caf],eax        # 0x140039324
   140003675:	mov    r14b,0x1
   140003678:	lea    rcx,[rsp+0x70]
   14000367d:	call   QWORD PTR [rip+0x17c95]        # 0x14001b318
   140003683:	test   al,al
   140003685:	je     0x140003697
   140003687:	mov    rdx,rsi
   14000368a:	lea    rcx,[rsp+0x50]
   14000368f:	call   QWORD PTR [rip+0x17bd3]        # 0x14001b268
   140003695:	jmp    0x1400036d2
   140003697:	lea    rdx,[rip+0x18dca]        # 0x14001c468
   14000369e:	lea    rcx,[rsp+0x70]
   1400036a3:	call   QWORD PTR [rip+0x17f97]        # 0x14001b640
   1400036a9:	test   eax,eax
   1400036ab:	jne    0x1400036c2
   1400036ad:	lea    rdx,[rsp+0x90]
   1400036b5:	lea    rcx,[rsp+0x50]
   1400036ba:	call   QWORD PTR [rip+0x17ed0]        # 0x14001b590
   1400036c0:	jmp    0x1400036d2
   1400036c2:	lea    rdx,[rsp+0x70]
   1400036c7:	lea    rcx,[rsp+0x50]
   1400036cc:	call   QWORD PTR [rip+0x17ebe]        # 0x14001b590
   1400036d2:	xor    edx,edx
   1400036d4:	lea    rcx,[rsp+0x70]
   1400036d9:	call   QWORD PTR [rip+0x17b89]        # 0x14001b268
   1400036df:	mov    rdi,QWORD PTR [rbx+0x10]
   1400036e3:	test   rdi,rdi
   1400036e6:	je     0x14000393c
   1400036ec:	xor    esi,esi
   1400036ee:	xchg   ax,ax
   1400036f0:	lea    rcx,[rdi+0x18]
   1400036f4:	lea    rdx,[rsp+0x50]
   1400036f9:	call   QWORD PTR [rip+0x17f39]        # 0x14001b638
   1400036ff:	test   eax,eax
   140003701:	js     0x14000370c
   140003703:	mov    rsi,rdi
   140003706:	mov    rdi,QWORD PTR [rdi+0x8]
   14000370a:	jmp    0x140003710
   14000370c:	mov    rdi,QWORD PTR [rdi+0x10]
   140003710:	test   rdi,rdi
   140003713:	jne    0x1400036f0
   140003715:	test   rsi,rsi
   140003718:	je     0x14000393c
   14000371e:	lea    rdx,[rsi+0x18]
   140003722:	lea    rcx,[rsp+0x50]
   140003727:	call   QWORD PTR [rip+0x17f0b]        # 0x14001b638
   14000372d:	test   eax,eax
   14000372f:	js     0x14000393c
   140003735:	mov    eax,DWORD PTR [rbx]
   140003737:	cmp    eax,0x1
   14000373a:	je     0x1400037a3
   14000373c:	test   eax,eax
   14000373e:	je     0x1400037a3
   140003740:	call   QWORD PTR [rip+0x17e5a]        # 0x14001b5a0
   140003746:	mov    rdi,rax
   140003749:	mov    rcx,QWORD PTR [rbx+0x10]
   14000374d:	test   rcx,rcx
   140003750:	je     0x140003769
   140003752:	mov    rdx,rax
   140003755:	call   0x140001360
   14000375a:	mov    QWORD PTR [rdi+0x10],rax
   14000375e:	and    QWORD PTR [rax],0x3
   140003762:	lea    rcx,[rdi+0x8]
   140003766:	or     QWORD PTR [rax],rcx
   140003769:	mov    eax,DWORD PTR [rbx]
   14000376b:	test   eax,eax
   14000376d:	je     0x14000378a
   14000376f:	cmp    eax,0xffffffff
   140003772:	je     0x140003792
   140003774:	mov    eax,r12d
   140003777:	lock xadd DWORD PTR [rbx],eax
   14000377b:	add    eax,0xffffffff
   14000377e:	setne  al
   140003781:	test   al,al
   140003783:	jne    0x140003792
   140003785:	mov    rbx,QWORD PTR [rsp+0x60]
   14000378a:	mov    rcx,rbx
   14000378d:	call   0x140002810
   140003792:	mov    rbx,rdi
   140003795:	mov    QWORD PTR [rsp+0x60],rbx
   14000379a:	mov    rcx,rdi
   14000379d:	call   QWORD PTR [rip+0x17b0d]        # 0x14001b2b0
   1400037a3:	mov    rdi,QWORD PTR [rbx+0x10]
   1400037a7:	test   rdi,rdi
   1400037aa:	je     0x1400037f6
   1400037ac:	xor    esi,esi
   1400037ae:	xchg   ax,ax
   1400037b0:	lea    rcx,[rdi+0x18]
   1400037b4:	lea    rdx,[rsp+0x50]
   1400037b9:	call   QWORD PTR [rip+0x17e79]        # 0x14001b638
   1400037bf:	test   eax,eax
   1400037c1:	js     0x1400037cc
   1400037c3:	mov    rsi,rdi
   1400037c6:	mov    rdi,QWORD PTR [rdi+0x8]
   1400037ca:	jmp    0x1400037d0
   1400037cc:	mov    rdi,QWORD PTR [rdi+0x10]
   1400037d0:	test   rdi,rdi
   1400037d3:	jne    0x1400037b0
   1400037d5:	test   rsi,rsi
   1400037d8:	je     0x1400037f6
   1400037da:	lea    rdx,[rsi+0x18]
   1400037de:	lea    rcx,[rsp+0x50]
   1400037e3:	call   QWORD PTR [rip+0x17e4f]        # 0x14001b638
   1400037e9:	test   eax,eax
   1400037eb:	js     0x1400037f6
   1400037ed:	add    rsi,0x20
   1400037f1:	jmp    0x14000392e
   1400037f6:	lea    rcx,[rsp+0xd0]
   1400037fe:	call   QWORD PTR [rip+0x17a54]        # 0x14001b258
   140003804:	mov    r13,rax
   140003807:	mov    ecx,DWORD PTR [rbx]
   140003809:	cmp    ecx,0x1
   14000380c:	je     0x140003875
   14000380e:	test   ecx,ecx
   140003810:	je     0x140003875
   140003812:	call   QWORD PTR [rip+0x17d88]        # 0x14001b5a0
   140003818:	mov    rdi,rax
   14000381b:	mov    rcx,QWORD PTR [rbx+0x10]
   14000381f:	test   rcx,rcx
   140003822:	je     0x14000383b
   140003824:	mov    rdx,rax
   140003827:	call   0x140001360
   14000382c:	mov    QWORD PTR [rdi+0x10],rax
   140003830:	and    QWORD PTR [rax],0x3
   140003834:	lea    rcx,[rdi+0x8]
   140003838:	or     QWORD PTR [rax],rcx
   14000383b:	mov    eax,DWORD PTR [rbx]
   14000383d:	test   eax,eax
   14000383f:	je     0x14000385c
   140003841:	cmp    eax,0xffffffff
   140003844:	je     0x140003864
   140003846:	mov    eax,r12d
   140003849:	lock xadd DWORD PTR [rbx],eax
   14000384d:	add    eax,0xffffffff
   140003850:	setne  al
   140003853:	test   al,al
   140003855:	jne    0x140003864
   140003857:	mov    rbx,QWORD PTR [rsp+0x60]
   14000385c:	mov    rcx,rbx
   14000385f:	call   0x140002810
   140003864:	mov    rbx,rdi
   140003867:	mov    QWORD PTR [rsp+0x60],rbx
   14000386c:	mov    rcx,rdi
   14000386f:	call   QWORD PTR [rip+0x17a3b]        # 0x14001b2b0
   140003875:	mov    rsi,QWORD PTR [rbx+0x10]
   140003879:	lea    r12,[rbx+0x8]
   14000387d:	xor    edi,edi
   14000387f:	mov    bpl,0x1
   140003882:	test   rsi,rsi
   140003885:	je     0x1400038ed
   140003887:	nop    WORD PTR [rax+rax*1+0x0]
   140003890:	mov    r12,rsi
   140003893:	lea    rcx,[rsi+0x18]
   140003897:	lea    rdx,[rsp+0x50]
   14000389c:	call   QWORD PTR [rip+0x17d96]        # 0x14001b638
   1400038a2:	test   eax,eax
   1400038a4:	js     0x1400038b2
   1400038a6:	mov    rdi,rsi
   1400038a9:	mov    bpl,0x1
   1400038ac:	mov    rsi,QWORD PTR [rsi+0x8]
   1400038b0:	jmp    0x1400038b9
   1400038b2:	xor    bpl,bpl
   1400038b5:	mov    rsi,QWORD PTR [rsi+0x10]
   1400038b9:	test   rsi,rsi
   1400038bc:	jne    0x140003890
   1400038be:	test   rdi,rdi
   1400038c1:	je     0x1400038ed
   1400038c3:	lea    rdx,[rdi+0x18]
   1400038c7:	lea    rcx,[rsp+0x50]
   1400038cc:	call   QWORD PTR [rip+0x17d66]        # 0x14001b638
   1400038d2:	test   eax,eax
   1400038d4:	js     0x1400038ed
   1400038d6:	lea    rcx,[rdi+0x20]
   1400038da:	mov    rdx,r13
   1400038dd:	call   QWORD PTR [rip+0x17cad]        # 0x14001b590
   1400038e3:	mov    QWORD PTR [rsp+0xd8],rdi
   1400038eb:	jmp    0x140003910
   1400038ed:	mov    BYTE PTR [rsp+0x20],bpl
   1400038f2:	mov    r9,r12
   1400038f5:	mov    r8,r13
   1400038f8:	lea    rdx,[rsp+0x50]
   1400038fd:	mov    rcx,rbx
   140003900:	call   0x1400012a0
   140003905:	mov    rdi,rax
   140003908:	mov    QWORD PTR [rsp+0xd8],rax
   140003910:	lea    rsi,[rdi+0x20]
   140003914:	lea    rcx,[rsp+0xd0]
   14000391c:	call   QWORD PTR [rip+0x17cfe]        # 0x14001b620
   140003922:	or     r12d,0xffffffff
   140003926:	mov    r13,QWORD PTR [rsp+0x220]
   14000392e:	mov    rdx,rsi
   140003931:	lea    rcx,[rsp+0x50]
   140003936:	call   QWORD PTR [rip+0x17c54]        # 0x14001b590
   14000393c:	mov    rax,QWORD PTR [rsp+0x68]
   140003941:	cmp    DWORD PTR [rax+0x4],0x0
   140003945:	je     0x140003df5
   14000394b:	lea    rdx,[rip+0x459ee]        # 0x140049340
   140003952:	lea    rcx,[rsp+0xa8]
   14000395a:	call   QWORD PTR [rip+0x17970]        # 0x14001b2d0
   140003960:	nop
   140003961:	mov    rax,QWORD PTR [rip+0x17c78]        # 0x14001b5e0
   140003968:	mov    QWORD PTR [rsp+0x88],rax
   140003970:	lea    rcx,[rsp+0x58]
   140003975:	call   QWORD PTR [rip+0x178c5]        # 0x14001b240
   14000397b:	mov    rsi,rax
   14000397e:	lea    rcx,[rsp+0x68]
   140003983:	call   QWORD PTR [rip+0x178b7]        # 0x14001b240
   140003989:	mov    rdi,rax
   14000398c:	lea    rcx,[rsp+0x50]
   140003991:	call   QWORD PTR [rip+0x178a9]        # 0x14001b240
   140003997:	mov    rdx,rax
   14000399a:	mov    BYTE PTR [rsp+0x48],r14b
   14000399f:	mov    DWORD PTR [rsp+0x40],0x0
   1400039a7:	mov    BYTE PTR [rsp+0x38],r15b
   1400039ac:	lea    rax,[rsp+0x88]
   1400039b4:	mov    QWORD PTR [rsp+0x30],rax
   1400039b9:	mov    ecx,DWORD PTR [rip+0x25885]        # 0x140029244
   1400039bf:	mov    DWORD PTR [rsp+0x28],ecx
   1400039c3:	lea    rax,[rsp+0xa8]
   1400039cb:	mov    QWORD PTR [rsp+0x20],rax
   1400039d0:	mov    r9,rsi
   1400039d3:	mov    r8,rdi
   1400039d6:	lea    rcx,[rsp+0xe8]
   1400039de:	call   0x140009630
   1400039e3:	nop
   1400039e4:	mov    rdx,rax
   1400039e7:	mov    rcx,r13
   1400039ea:	call   0x14000a9f0
   1400039ef:	nop
   1400039f0:	lea    rcx,[rsp+0x110]
   1400039f8:	call   QWORD PTR [rip+0x17c2a]        # 0x14001b628
   1400039fe:	nop
   1400039ff:	lea    rcx,[rsp+0x108]
   140003a07:	call   0x140002880
   140003a0c:	nop
   140003a0d:	lea    rcx,[rsp+0x100]
   140003a15:	call   QWORD PTR [rip+0x17c05]        # 0x14001b620
   140003a1b:	nop
   140003a1c:	lea    rcx,[rsp+0xf8]
   140003a24:	call   QWORD PTR [rip+0x17bf6]        # 0x14001b620
   140003a2a:	nop
   140003a2b:	lea    rcx,[rsp+0xf0]
   140003a33:	call   QWORD PTR [rip+0x17be7]        # 0x14001b620
   140003a39:	nop
   140003a3a:	mov    rbp,QWORD PTR [rsp+0x88]
   140003a42:	mov    eax,DWORD PTR [rbp+0x0]
   140003a45:	test   eax,eax
   140003a47:	je     0x140003a76
   140003a49:	cmp    eax,0xffffffff
   140003a4c:	je     0x140003aac
   140003a4e:	mov    eax,r12d
   140003a51:	lock xadd DWORD PTR [rbp+0x0],eax
   140003a56:	add    eax,0xffffffff
   140003a59:	setne  al
   140003a5c:	test   al,al
   140003a5e:	jne    0x140003a6f
   140003a60:	mov    rbx,QWORD PTR [rsp+0x60]
   140003a65:	mov    rbp,QWORD PTR [rsp+0x88]
   140003a6d:	jmp    0x140003a76
   140003a6f:	mov    rbx,QWORD PTR [rsp+0x60]
   140003a74:	jmp    0x140003aac
   140003a76:	movsxd rax,DWORD PTR [rbp+0xc]
   140003a7a:	lea    rdi,[rbp+rax*8+0x10]
   140003a7f:	movsxd rax,DWORD PTR [rbp+0x8]
   140003a83:	lea    rsi,[rbp+rax*8+0x10]
   140003a88:	cmp    rsi,rdi
   140003a8b:	je     0x140003aa2
   140003a8d:	nop    DWORD PTR [rax]
   140003a90:	sub    rdi,0x8
   140003a94:	mov    rcx,rdi
   140003a97:	call   QWORD PTR [rip+0x17b8b]        # 0x14001b628
   140003a9d:	cmp    rdi,rsi
   140003aa0:	jne    0x140003a90
   140003aa2:	mov    rcx,rbp
   140003aa5:	call   QWORD PTR [rip+0x177e5]        # 0x14001b290
   140003aab:	nop
   140003aac:	lea    rcx,[rsp+0xa8]
   140003ab4:	call   QWORD PTR [rip+0x17b6e]        # 0x14001b628
   140003aba:	mov    edx,DWORD PTR [rip+0x35864]        # 0x140039324
   140003ac0:	jmp    0x1400040e7
   140003ac5:	call   0x1400014b0
   140003aca:	mov    edx,eax
   140003acc:	mov    DWORD PTR [rip+0x35852],eax        # 0x140039324
   140003ad2:	cmp    eax,0xa
   140003ad5:	sete   al
   140003ad8:	test   al,al
   140003ada:	je     0x1400040e7
   140003ae0:	call   0x1400014b0
   140003ae5:	mov    DWORD PTR [rip+0x35839],eax        # 0x140039324
   140003aeb:	cmp    eax,0x9
   140003aee:	sete   dil
   140003af2:	lea    rdx,[rip+0x182ef]        # 0x14001bde8
   140003af9:	lea    rcx,[rsp+0x50]
   140003afe:	call   QWORD PTR [rip+0x17764]        # 0x14001b268
   140003b04:	mov    edx,DWORD PTR [rip+0x3581a]        # 0x140039324
   140003b0a:	cmp    edx,0x9
   140003b0d:	jne    0x140003b34
   140003b0f:	nop
   140003b10:	lea    rdx,[rip+0x35819]        # 0x140039330
   140003b17:	lea    rcx,[rsp+0x50]
   140003b1c:	call   QWORD PTR [rip+0x1773e]        # 0x14001b260
   140003b22:	call   0x1400014b0
   140003b27:	mov    edx,eax
   140003b29:	mov    DWORD PTR [rip+0x357f5],eax        # 0x140039324
   140003b2f:	cmp    eax,0x9
   140003b32:	je     0x140003b10
   140003b34:	test   dil,dil
   140003b37:	je     0x1400040e7
   140003b3d:	cmp    edx,0xc
   140003b40:	sete   al
   140003b43:	test   al,al
   140003b45:	je     0x1400040e7
   140003b4b:	call   0x1400014b0
   140003b50:	mov    DWORD PTR [rip+0x357ce],eax        # 0x140039324
   140003b56:	cmp    eax,0x9
   140003b59:	sete   dil
   140003b5d:	lea    rdx,[rip+0x18284]        # 0x14001bde8
   140003b64:	lea    rcx,[rsp+0x68]
   140003b69:	call   QWORD PTR [rip+0x176f9]        # 0x14001b268
   140003b6f:	mov    edx,DWORD PTR [rip+0x357af]        # 0x140039324
   140003b75:	cmp    edx,0x9
   140003b78:	jne    0x140003ba4
   140003b7a:	nop    WORD PTR [rax+rax*1+0x0]
   140003b80:	lea    rdx,[rip+0x357a9]        # 0x140039330
   140003b87:	lea    rcx,[rsp+0x68]
   140003b8c:	call   QWORD PTR [rip+0x176ce]        # 0x14001b260
   140003b92:	call   0x1400014b0
   140003b97:	mov    edx,eax
   140003b99:	mov    DWORD PTR [rip+0x35785],eax        # 0x140039324
   140003b9f:	cmp    eax,0x9
   140003ba2:	je     0x140003b80
   140003ba4:	test   dil,dil
   140003ba7:	je     0x1400040e7
   140003bad:	lea    rdx,[rip+0x18234]        # 0x14001bde8
   140003bb4:	lea    rcx,[rsp+0x58]
   140003bb9:	call   QWORD PTR [rip+0x176a9]        # 0x14001b268
   140003bbf:	xor    bpl,bpl
   140003bc2:	mov    edx,DWORD PTR [rip+0x3575c]        # 0x140039324
   140003bc8:	cmp    edx,0xb
   140003bcb:	sete   al
   140003bce:	test   al,al
   140003bd0:	je     0x140003be4
   140003bd2:	call   0x1400014b0
   140003bd7:	mov    edx,eax
   140003bd9:	mov    DWORD PTR [rip+0x35745],eax        # 0x140039324
   140003bdf:	jmp    0x140003c78
   140003be4:	cmp    edx,0xc
   140003be7:	sete   al
   140003bea:	test   al,al
   140003bec:	je     0x1400040e7
   140003bf2:	call   0x1400014b0
   140003bf7:	mov    DWORD PTR [rip+0x35727],eax        # 0x140039324
   140003bfd:	lea    rcx,[rsp+0x58]
   140003c02:	call   0x140002240
   140003c07:	test   al,al
   140003c09:	je     0x140003df5
   140003c0f:	mov    edx,DWORD PTR [rip+0x3570f]        # 0x140039324
   140003c15:	cmp    edx,0xb
   140003c18:	sete   al
   140003c1b:	test   al,al
   140003c1d:	je     0x140003c2e
   140003c1f:	call   0x1400014b0
   140003c24:	mov    edx,eax
   140003c26:	mov    DWORD PTR [rip+0x356f8],eax        # 0x140039324
   140003c2c:	jmp    0x140003c78
   140003c2e:	cmp    edx,0xc
   140003c31:	sete   al
   140003c34:	test   al,al
   140003c36:	je     0x1400040e7
   140003c3c:	call   0x1400014b0
   140003c41:	mov    DWORD PTR [rip+0x356dd],eax        # 0x140039324
   140003c47:	call   0x1400022c0
   140003c4c:	test   al,al
   140003c4e:	je     0x140003df5
   140003c54:	mov    edx,DWORD PTR [rip+0x356ca]        # 0x140039324
   140003c5a:	cmp    edx,0xb
   140003c5d:	sete   al
   140003c60:	test   al,al
   140003c62:	je     0x1400040e7
   140003c68:	call   0x1400014b0
   140003c6d:	mov    edx,eax
   140003c6f:	mov    DWORD PTR [rip+0x356af],eax        # 0x140039324
   140003c75:	mov    bpl,0x1
   140003c78:	mov    rax,QWORD PTR [rsp+0x68]
   140003c7d:	cmp    DWORD PTR [rax+0x4],0x0
   140003c81:	je     0x1400040e7
   140003c87:	lea    rdx,[rip+0x456b2]        # 0x140049340
   140003c8e:	lea    rcx,[rsp+0xa0]
   140003c96:	call   QWORD PTR [rip+0x17634]        # 0x14001b2d0
   140003c9c:	nop
   140003c9d:	mov    rax,QWORD PTR [rip+0x1793c]        # 0x14001b5e0
   140003ca4:	mov    QWORD PTR [rsp+0x78],rax
   140003ca9:	lea    rcx,[rsp+0x58]
   140003cae:	call   QWORD PTR [rip+0x1758c]        # 0x14001b240
   140003cb4:	mov    rsi,rax
   140003cb7:	lea    rcx,[rsp+0x68]
   140003cbc:	call   QWORD PTR [rip+0x1757e]        # 0x14001b240
   140003cc2:	mov    rdi,rax
   140003cc5:	lea    rcx,[rsp+0x50]
   140003cca:	call   QWORD PTR [rip+0x17570]        # 0x14001b240
   140003cd0:	mov    rdx,rax
   140003cd3:	mov    BYTE PTR [rsp+0x48],bpl
   140003cd8:	mov    DWORD PTR [rsp+0x40],0x0
   140003ce0:	mov    BYTE PTR [rsp+0x38],0x1
   140003ce5:	lea    rax,[rsp+0x78]
   140003cea:	mov    QWORD PTR [rsp+0x30],rax
   140003cef:	mov    ecx,DWORD PTR [rip+0x2554f]        # 0x140029244
   140003cf5:	mov    DWORD PTR [rsp+0x28],ecx
   140003cf9:	lea    rax,[rsp+0xa0]
   140003d01:	mov    QWORD PTR [rsp+0x20],rax
   140003d06:	mov    r9,rsi
   140003d09:	mov    r8,rdi
   140003d0c:	lea    rcx,[rsp+0x130]
   140003d14:	call   0x140009630
   140003d19:	nop
   140003d1a:	mov    rdx,rax
   140003d1d:	mov    rcx,r13
   140003d20:	call   0x14000a9f0
   140003d25:	nop
   140003d26:	lea    rcx,[rsp+0x158]
   140003d2e:	call   QWORD PTR [rip+0x178f4]        # 0x14001b628
   140003d34:	nop
   140003d35:	lea    rcx,[rsp+0x150]
   140003d3d:	call   0x140002880
   140003d42:	nop
   140003d43:	lea    rcx,[rsp+0x148]
   140003d4b:	call   QWORD PTR [rip+0x178cf]        # 0x14001b620
   140003d51:	nop
   140003d52:	lea    rcx,[rsp+0x140]
   140003d5a:	call   QWORD PTR [rip+0x178c0]        # 0x14001b620
   140003d60:	nop
   140003d61:	lea    rcx,[rsp+0x138]
   140003d69:	call   QWORD PTR [rip+0x178b1]        # 0x14001b620
   140003d6f:	nop
   140003d70:	mov    rbp,QWORD PTR [rsp+0x78]
   140003d75:	mov    eax,DWORD PTR [rbp+0x0]
   140003d78:	test   eax,eax
   140003d7a:	je     0x140003da6
   140003d7c:	cmp    eax,0xffffffff
   140003d7f:	je     0x140003ddc
   140003d81:	mov    eax,r12d
   140003d84:	lock xadd DWORD PTR [rbp+0x0],eax
   140003d89:	add    eax,0xffffffff
   140003d8c:	setne  al
   140003d8f:	test   al,al
   140003d91:	jne    0x140003d9f
   140003d93:	mov    rbx,QWORD PTR [rsp+0x60]
   140003d98:	mov    rbp,QWORD PTR [rsp+0x78]
   140003d9d:	jmp    0x140003da6
   140003d9f:	mov    rbx,QWORD PTR [rsp+0x60]
   140003da4:	jmp    0x140003ddc
   140003da6:	movsxd rax,DWORD PTR [rbp+0xc]
   140003daa:	lea    rdi,[rbp+rax*8+0x10]
   140003daf:	movsxd rax,DWORD PTR [rbp+0x8]
   140003db3:	lea    rsi,[rbp+rax*8+0x10]
   140003db8:	cmp    rsi,rdi
   140003dbb:	je     0x140003dd2
   140003dbd:	nop    DWORD PTR [rax]
   140003dc0:	sub    rdi,0x8
   140003dc4:	mov    rcx,rdi
   140003dc7:	call   QWORD PTR [rip+0x1785b]        # 0x14001b628
   140003dcd:	cmp    rdi,rsi
   140003dd0:	jne    0x140003dc0
   140003dd2:	mov    rcx,rbp
   140003dd5:	call   QWORD PTR [rip+0x174b5]        # 0x14001b290
   140003ddb:	nop
   140003ddc:	lea    rcx,[rsp+0xa0]
   140003de4:	call   QWORD PTR [rip+0x1783e]        # 0x14001b628
   140003dea:	mov    edx,DWORD PTR [rip+0x35534]        # 0x140039324
   140003df0:	jmp    0x1400040e7
   140003df5:	mov    edx,DWORD PTR [rip+0x35529]        # 0x140039324
   140003dfb:	jmp    0x1400040e7
   140003e00:	lea    rcx,[rsp+0x70]
   140003e05:	call   QWORD PTR [rip+0x1750d]        # 0x14001b318
   140003e0b:	test   al,al
   140003e0d:	jne    0x140003e21
   140003e0f:	lea    rdx,[rip+0x1864e]        # 0x14001c464
   140003e16:	lea    rcx,[rsp+0x70]
   140003e1b:	call   QWORD PTR [rip+0x1743f]        # 0x14001b260
   140003e21:	lea    rdx,[rip+0x35468]        # 0x140039290
   140003e28:	lea    rcx,[rsp+0x70]
   140003e2d:	call   QWORD PTR [rip+0x1742d]        # 0x14001b260
   140003e33:	call   0x1400014b0
   140003e38:	mov    edx,eax
   140003e3a:	mov    DWORD PTR [rip+0x354e4],eax        # 0x140039324
   140003e40:	cmp    eax,0x8
   140003e43:	je     0x1400040e7
   140003e49:	xor    edx,edx
   140003e4b:	lea    rcx,[rsp+0x70]
   140003e50:	call   QWORD PTR [rip+0x17412]        # 0x14001b268
   140003e56:	mov    edx,DWORD PTR [rip+0x354c8]        # 0x140039324
   140003e5c:	jmp    0x1400040e7
   140003e61:	lea    rdx,[rip+0x253e8]        # 0x140029250
   140003e68:	lea    rcx,[rsp+0x58]
   140003e6d:	call   QWORD PTR [rip+0x173f5]        # 0x14001b268
   140003e73:	lea    rdx,[rsp+0xc0]
   140003e7b:	lea    rcx,[rsp+0x58]
   140003e80:	call   QWORD PTR [rip+0x1748a]        # 0x14001b310
   140003e86:	mov    rdx,rax
   140003e89:	lea    rcx,[rsp+0x58]
   140003e8e:	call   QWORD PTR [rip+0x176fc]        # 0x14001b590
   140003e94:	lea    rcx,[rsp+0xc0]
   140003e9c:	call   QWORD PTR [rip+0x1777e]        # 0x14001b620
   140003ea2:	mov    r8d,0xb
   140003ea8:	lea    rdx,[rsp+0xb0]
   140003eb0:	lea    rcx,[rsp+0x58]
   140003eb5:	call   QWORD PTR [rip+0x1744d]        # 0x14001b308
   140003ebb:	nop
   140003ebc:	lea    rdx,[rip+0x17eed]        # 0x14001bdb0
   140003ec3:	mov    rcx,rax
   140003ec6:	call   QWORD PTR [rip+0x17774]        # 0x14001b640
   140003ecc:	test   eax,eax
   140003ece:	sete   dil
   140003ed2:	lea    rcx,[rsp+0xb0]
   140003eda:	call   QWORD PTR [rip+0x17740]        # 0x14001b620
   140003ee0:	test   dil,dil
   140003ee3:	je     0x1400040cb
   140003ee9:	xor    edx,edx
   140003eeb:	lea    r8d,[rdx+0xb]
   140003eef:	lea    rcx,[rsp+0x58]
   140003ef4:	call   QWORD PTR [rip+0x17406]        # 0x14001b300
   140003efa:	xor    r8d,r8d
   140003efd:	mov    dl,0x20
   140003eff:	lea    rcx,[rsp+0x58]
   140003f04:	call   QWORD PTR [rip+0x173ee]        # 0x14001b2f8
   140003f0a:	mov    edi,eax
   140003f0c:	cmp    eax,0xffffffff
   140003f0f:	jne    0x140003f26
   140003f11:	lea    rdx,[rsp+0x58]
   140003f16:	lea    rcx,[rsp+0x50]
   140003f1b:	call   QWORD PTR [rip+0x1766f]        # 0x14001b590
   140003f21:	jmp    0x1400040cb
   140003f26:	mov    r8d,eax
   140003f29:	lea    rdx,[rsp+0xb8]
   140003f31:	lea    rcx,[rsp+0x58]
   140003f36:	call   QWORD PTR [rip+0x173cc]        # 0x14001b308
   140003f3c:	mov    rdx,rax
   140003f3f:	lea    rcx,[rsp+0x50]
   140003f44:	call   QWORD PTR [rip+0x17646]        # 0x14001b590
   140003f4a:	lea    rcx,[rsp+0xb8]
   140003f52:	call   QWORD PTR [rip+0x176c8]        # 0x14001b620
   140003f58:	lea    r8d,[rdi+0x1]
   140003f5c:	xor    edx,edx
   140003f5e:	lea    rcx,[rsp+0x58]
   140003f63:	call   QWORD PTR [rip+0x17397]        # 0x14001b300
   140003f69:	lea    rdx,[rip+0x453d0]        # 0x140049340
   140003f70:	lea    rcx,[rsp+0x98]
   140003f78:	call   QWORD PTR [rip+0x17352]        # 0x14001b2d0
   140003f7e:	nop
   140003f7f:	mov    rax,QWORD PTR [rip+0x1765a]        # 0x14001b5e0
   140003f86:	mov    QWORD PTR [rsp+0x80],rax
   140003f8e:	lea    rcx,[rsp+0x58]
   140003f93:	call   QWORD PTR [rip+0x172a7]        # 0x14001b240
   140003f99:	mov    rdi,rax
   140003f9c:	lea    rcx,[rsp+0x50]
   140003fa1:	call   QWORD PTR [rip+0x17299]        # 0x14001b240
   140003fa7:	mov    rdx,rax
   140003faa:	mov    BYTE PTR [rsp+0x48],0x0
   140003faf:	mov    DWORD PTR [rsp+0x40],0x0
   140003fb7:	mov    BYTE PTR [rsp+0x38],0x0
   140003fbc:	lea    rax,[rsp+0x80]
   140003fc4:	mov    QWORD PTR [rsp+0x30],rax
   140003fc9:	mov    ecx,DWORD PTR [rip+0x25275]        # 0x140029244
   140003fcf:	mov    DWORD PTR [rsp+0x28],ecx
   140003fd3:	lea    rax,[rsp+0x98]
   140003fdb:	mov    QWORD PTR [rsp+0x20],rax
   140003fe0:	mov    r9,rdi
   140003fe3:	lea    r8,[rip+0x17dfe]        # 0x14001bde8
   140003fea:	lea    rcx,[rsp+0x178]
   140003ff2:	call   0x140009630
   140003ff7:	nop
   140003ff8:	mov    rdx,rax
   140003ffb:	mov    rcx,r13
   140003ffe:	call   0x14000a9f0
   140004003:	nop
   140004004:	lea    rcx,[rsp+0x1a0]
   14000400c:	call   QWORD PTR [rip+0x17616]        # 0x14001b628
   140004012:	nop
   140004013:	lea    rcx,[rsp+0x198]
   14000401b:	call   0x140002880
   140004020:	nop
   140004021:	lea    rcx,[rsp+0x190]
   140004029:	call   QWORD PTR [rip+0x175f1]        # 0x14001b620
   14000402f:	nop
   140004030:	lea    rcx,[rsp+0x188]
   140004038:	call   QWORD PTR [rip+0x175e2]        # 0x14001b620
   14000403e:	nop
   14000403f:	lea    rcx,[rsp+0x180]
   140004047:	call   QWORD PTR [rip+0x175d3]        # 0x14001b620
   14000404d:	nop
   14000404e:	mov    rbp,QWORD PTR [rsp+0x80]
   140004056:	mov    eax,DWORD PTR [rbp+0x0]
   140004059:	test   eax,eax
   14000405b:	je     0x14000408a
   14000405d:	cmp    eax,0xffffffff
   140004060:	je     0x1400040bd
   140004062:	mov    eax,r12d
   140004065:	lock xadd DWORD PTR [rbp+0x0],eax
   14000406a:	add    eax,0xffffffff
   14000406d:	setne  al
   140004070:	test   al,al
   140004072:	jne    0x140004083
   140004074:	mov    rbx,QWORD PTR [rsp+0x60]
   140004079:	mov    rbp,QWORD PTR [rsp+0x80]
   140004081:	jmp    0x14000408a
   140004083:	mov    rbx,QWORD PTR [rsp+0x60]
   140004088:	jmp    0x1400040bd
   14000408a:	movsxd rax,DWORD PTR [rbp+0xc]
   14000408e:	lea    rdi,[rbp+rax*8+0x10]
   140004093:	movsxd rax,DWORD PTR [rbp+0x8]
   140004097:	lea    rsi,[rbp+rax*8+0x10]
   14000409c:	cmp    rsi,rdi
   14000409f:	je     0x1400040b3
   1400040a1:	sub    rdi,0x8
   1400040a5:	mov    rcx,rdi
   1400040a8:	call   QWORD PTR [rip+0x1757a]        # 0x14001b628
   1400040ae:	cmp    rdi,rsi
   1400040b1:	jne    0x1400040a1
   1400040b3:	mov    rcx,rbp
   1400040b6:	call   QWORD PTR [rip+0x171d4]        # 0x14001b290
   1400040bc:	nop
   1400040bd:	lea    rcx,[rsp+0x98]
   1400040c5:	call   QWORD PTR [rip+0x1755d]        # 0x14001b628
   1400040cb:	call   0x1400014b0
   1400040d0:	mov    edx,eax
   1400040d2:	mov    DWORD PTR [rip+0x3524c],eax        # 0x140039324
   1400040d8:	jmp    0x1400040e7
   1400040da:	call   0x1400014b0
   1400040df:	mov    edx,eax
   1400040e1:	mov    DWORD PTR [rip+0x3523d],eax        # 0x140039324
   1400040e7:	test   edx,edx
   1400040e9:	mov    rsi,QWORD PTR [rsp+0x230]
   1400040f1:	lea    rdi,[rip+0xffffffffffffbf08]        # 0x140000000
   1400040f8:	jne    0x1400034b0
   1400040fe:	cmp    DWORD PTR [rip+0x35173],0x0        # 0x140039278
   140004105:	je     0x140004141
   140004107:	lea    rcx,[rip+0x45232]        # 0x140049340
   14000410e:	call   QWORD PTR [rip+0x1712c]        # 0x14001b240
   140004114:	mov    rdi,rax
   140004117:	xor    r9d,r9d
   14000411a:	xor    r8d,r8d
   14000411d:	xor    edx,edx
   14000411f:	lea    rcx,[rsp+0x1c0]
   140004127:	call   QWORD PTR [rip+0x1710b]        # 0x14001b238
   14000412d:	mov    rcx,rax
   140004130:	mov    r8,rdi
   140004133:	lea    rdx,[rip+0x182fe]        # 0x14001c438
   14000413a:	call   QWORD PTR [rip+0x170f0]        # 0x14001b230
   140004140:	nop
   140004141:	lea    rcx,[rsp+0x70]
   140004146:	call   QWORD PTR [rip+0x174d4]        # 0x14001b620
   14000414c:	nop
   14000414d:	lea    rcx,[rsp+0x90]
   140004155:	call   QWORD PTR [rip+0x174c5]        # 0x14001b620
   14000415b:	nop
   14000415c:	lea    rcx,[rsp+0x58]
   140004161:	call   QWORD PTR [rip+0x174b9]        # 0x14001b620
   140004167:	nop
   140004168:	lea    rcx,[rsp+0x68]
   14000416d:	call   QWORD PTR [rip+0x174ad]        # 0x14001b620
   140004173:	nop
   140004174:	lea    rcx,[rsp+0x50]
   140004179:	call   QWORD PTR [rip+0x174a1]        # 0x14001b620
   14000417f:	nop
   140004180:	mov    eax,DWORD PTR [rbx]
   140004182:	test   eax,eax
   140004184:	je     0x1400041a0
   140004186:	cmp    eax,0xffffffff
   140004189:	je     0x1400041a8
   14000418b:	lock xadd DWORD PTR [rbx],r12d
   140004190:	add    r12d,0xffffffff
   140004194:	setne  al
   140004197:	test   al,al
   140004199:	jne    0x1400041a8
   14000419b:	mov    rbx,QWORD PTR [rsp+0x60]
   1400041a0:	mov    rcx,rbx
   1400041a3:	call   0x140002810
   1400041a8:	mov    rbx,QWORD PTR [rsp+0x228]
   1400041b0:	add    rsp,0x1e0
   1400041b7:	pop    r15
   1400041b9:	pop    r14
   1400041bb:	pop    r13
   1400041bd:	pop    r12
   1400041bf:	pop    rdi
   1400041c0:	pop    rsi
   1400041c1:	pop    rbp
   1400041c2:	ret    
   1400041c3:	nop
   1400041c4:	retf   0x34
   1400041c7:	add    dl,bl
   1400041c9:	add    BYTE PTR [rax],al
   1400041cc:	cld    
   1400041cd:	xor    al,0x0
   1400041cf:	add    ah,bh
   1400041d1:	xor    al,0x0
   1400041d3:	add    ch,al
   1400041d5:	cmp    al,BYTE PTR [rax]
   1400041d7:	add    BYTE PTR [rax],al
   1400041d9:	add    BYTE PTR ds:[rax],al
   1400041dc:	(bad)  
   1400041dd:	add    BYTE PTR ds:[rax],al
   1400041e0:	rex push rbx
   1400041e2:	push   rbp
   1400041e3:	push   rsi
   1400041e4:	push   rdi
   1400041e5:	push   r12
   1400041e7:	sub    rsp,0xb0
   1400041ee:	mov    rax,QWORD PTR [rip+0x2502b]        # 0x140029220
   1400041f5:	xor    rax,rsp
   1400041f8:	mov    QWORD PTR [rsp+0xa0],rax
   140004200:	mov    rax,QWORD PTR [rsp+0x108]
   140004208:	mov    r12,QWORD PTR [rsp+0x100]
   140004210:	mov    rsi,rdx
   140004213:	mov    QWORD PTR [rip+0x35066],rax        # 0x140039280
   14000421a:	mov    rax,QWORD PTR [rsp+0x110]
   140004222:	mov    rbp,r8
   140004225:	mov    rdi,rcx
   140004228:	mov    rdx,rcx
   14000422b:	lea    r8,[rip+0x17e1a]        # 0x14001c04c
   140004232:	lea    rcx,[rip+0x3501f]        # 0x140039258
   140004239:	mov    QWORD PTR [rip+0x350d0],rax        # 0x140039310
   140004240:	movzx  ebx,r9b
   140004244:	call   QWORD PTR [rip+0x16f2e]        # 0x14001b178
   14000424a:	test   eax,eax
   14000424c:	je     0x14000428c
   14000424e:	test   bl,bl
   140004250:	je     0x1400042d1
   140004252:	call   QWORD PTR [rip+0x16f30]        # 0x14001b188
   140004258:	lea    rcx,[rsp+0x30]
   14000425d:	mov    edx,0x64
   140004262:	mov    r8d,DWORD PTR [rax]
   140004265:	call   QWORD PTR [rip+0x16f25]        # 0x14001b190
   14000426b:	call   QWORD PTR [rip+0x16f77]        # 0x14001b1e8
   140004271:	lea    r9,[rsp+0x30]
   140004276:	lea    rdx,[rip+0x181fb]        # 0x14001c478
   14000427d:	lea    rcx,[rax+0x60]
   140004281:	mov    r8,rdi
   140004284:	call   QWORD PTR [rip+0x16f66]        # 0x14001b1f0
   14000428a:	jmp    0x1400042d1
   14000428c:	mov    rbx,QWORD PTR [rsi+0x10]
   140004290:	mov    rcx,r12
   140004293:	call   QWORD PTR [rip+0x17087]        # 0x14001b320
   140004299:	lea    r8,[rip+0xffffffffffffcdd0]        # 0x140001070
   1400042a0:	lea    rdx,[rip+0xffffffffffffcd59]        # 0x140001000
   1400042a7:	mov    r9,rbx
   1400042aa:	mov    rcx,rdi
   1400042ad:	mov    QWORD PTR [rsp+0x20],rax
   1400042b2:	call   0x1400029f0
   1400042b7:	mov    r8,rbp
   1400042ba:	xor    edx,edx
   1400042bc:	mov    rcx,rsi
   1400042bf:	call   0x140003400
   1400042c4:	mov    rcx,QWORD PTR [rip+0x34f8d]        # 0x140039258
   1400042cb:	call   QWORD PTR [rip+0x16eaf]        # 0x14001b180
   1400042d1:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400042d9:	xor    rcx,rsp
   1400042dc:	call   0x140013ff0
   1400042e1:	add    rsp,0xb0
   1400042e8:	pop    r12
   1400042ea:	pop    rdi
   1400042eb:	pop    rsi
   1400042ec:	pop    rbp
   1400042ed:	pop    rbx
   1400042ee:	ret    
   1400042ef:	int3   
   1400042f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400042f5:	push   rdi
   1400042f6:	sub    rsp,0x30
   1400042fa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004303:	mov    QWORD PTR [rsp+0x40],rbx
   140004308:	mov    QWORD PTR [rsp+0x58],rsi
   14000430d:	mov    rdi,r9
   140004310:	mov    rsi,r8
   140004313:	mov    rbx,rdx
   140004316:	mov    QWORD PTR [rsp+0x50],rdx
   14000431b:	nop    DWORD PTR [rax+rax*1+0x0]
   140004320:	cmp    rbx,rsi
   140004323:	je     0x140004345
   140004325:	test   rbx,rbx
   140004328:	je     0x140004336
   14000432a:	mov    rdx,rdi
   14000432d:	mov    rcx,rbx
   140004330:	call   QWORD PTR [rip+0x16ffa]        # 0x14001b330
   140004336:	add    rbx,0x8
   14000433a:	mov    QWORD PTR [rsp+0x50],rbx
   14000433f:	add    rdi,0x8
   140004343:	jmp    0x140004320
   140004345:	mov    rbx,QWORD PTR [rsp+0x40]
   14000434a:	mov    rsi,QWORD PTR [rsp+0x58]
   14000434f:	add    rsp,0x30
   140004353:	pop    rdi
   140004354:	ret    
   140004355:	int3   
   140004356:	int3   
   140004357:	int3   
   140004358:	int3   
   140004359:	int3   
   14000435a:	int3   
   14000435b:	int3   
   14000435c:	int3   
   14000435d:	int3   
   14000435e:	int3   
   14000435f:	int3   
   140004360:	mov    QWORD PTR [rsp+0x8],rcx
   140004365:	push   rdi
   140004366:	sub    rsp,0x40
   14000436a:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140004373:	mov    QWORD PTR [rsp+0x58],rbx
   140004378:	mov    QWORD PTR [rsp+0x60],rsi
   14000437d:	mov    rsi,r8
   140004380:	mov    rdi,rdx
   140004383:	movzx  eax,BYTE PTR [rsp+0x70]
   140004388:	mov    BYTE PTR [rsp+0x20],al
   14000438c:	mov    edx,0x28
   140004391:	lea    r8d,[rdx-0x20]
   140004395:	call   QWORD PTR [rip+0x1720d]        # 0x14001b5a8
   14000439b:	mov    rbx,rax
   14000439e:	mov    QWORD PTR [rsp+0x30],rax
   1400043a3:	lea    rcx,[rax+0x18]
   1400043a7:	test   rcx,rcx
   1400043aa:	je     0x1400043b6
   1400043ac:	mov    rdx,rdi
   1400043af:	call   QWORD PTR [rip+0x16f7b]        # 0x14001b330
   1400043b5:	nop
   1400043b6:	lea    rcx,[rbx+0x20]
   1400043ba:	test   rcx,rcx
   1400043bd:	je     0x1400043c9
   1400043bf:	mov    rdx,rsi
   1400043c2:	call   QWORD PTR [rip+0x16f68]        # 0x14001b330
   1400043c8:	nop
   1400043c9:	mov    rax,rbx
   1400043cc:	mov    rbx,QWORD PTR [rsp+0x58]
   1400043d1:	mov    rsi,QWORD PTR [rsp+0x60]
   1400043d6:	add    rsp,0x40
   1400043da:	pop    rdi
   1400043db:	ret    
   1400043dc:	int3   
   1400043dd:	int3   
   1400043de:	int3   
   1400043df:	int3   
   1400043e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400043e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400043ea:	push   rdi
   1400043eb:	sub    rsp,0x30
   1400043ef:	mov    rsi,rdx
   1400043f2:	lea    r8,[rcx+0x20]
   1400043f6:	lea    rdx,[rcx+0x18]
   1400043fa:	mov    rdi,rcx
   1400043fd:	xor    r9d,r9d
   140004400:	mov    rcx,rsi
   140004403:	mov    BYTE PTR [rsp+0x20],0x0
   140004408:	call   0x140004360
   14000440d:	test   BYTE PTR [rdi],0x1
   140004410:	mov    rbx,rax
   140004413:	je     0x14000441b
   140004415:	or     QWORD PTR [rax],0x1
   140004419:	jmp    0x14000441f
   14000441b:	and    QWORD PTR [rax],0xfffffffffffffffe
   14000441f:	mov    rcx,QWORD PTR [rdi+0x8]
   140004423:	test   rcx,rcx
   140004426:	je     0x14000443d
   140004428:	mov    rdx,rsi
   14000442b:	call   0x1400043e0
   140004430:	mov    QWORD PTR [rbx+0x8],rax
   140004434:	and    QWORD PTR [rax],0x3
   140004438:	or     QWORD PTR [rax],rbx
   14000443b:	jmp    0x140004445
   14000443d:	mov    QWORD PTR [rax+0x8],0x0
   140004445:	mov    rcx,QWORD PTR [rdi+0x10]
   140004449:	test   rcx,rcx
   14000444c:	je     0x140004474
   14000444e:	mov    rdx,rsi
   140004451:	call   0x1400043e0
   140004456:	mov    QWORD PTR [rbx+0x10],rax
   14000445a:	and    QWORD PTR [rax],0x3
   14000445e:	or     QWORD PTR [rax],rbx
   140004461:	mov    rax,rbx
   140004464:	mov    rbx,QWORD PTR [rsp+0x40]
   140004469:	mov    rsi,QWORD PTR [rsp+0x48]
   14000446e:	add    rsp,0x30
   140004472:	pop    rdi
   140004473:	ret    
   140004474:	mov    rsi,QWORD PTR [rsp+0x48]
   140004479:	mov    QWORD PTR [rbx+0x10],0x0
   140004481:	mov    rax,rbx
   140004484:	mov    rbx,QWORD PTR [rsp+0x40]
   140004489:	add    rsp,0x30
   14000448d:	pop    rdi
   14000448e:	ret    
   14000448f:	int3   
   140004490:	rex push rbx
   140004492:	sub    rsp,0x20
   140004496:	mov    rbx,rcx
   140004499:	nop    DWORD PTR [rax+0x0]
   1400044a0:	lea    rcx,[rbx+0x18]
   1400044a4:	call   QWORD PTR [rip+0x1717e]        # 0x14001b628
   1400044aa:	lea    rcx,[rbx+0x20]
   1400044ae:	call   QWORD PTR [rip+0x17174]        # 0x14001b628
   1400044b4:	mov    rcx,QWORD PTR [rbx+0x8]
   1400044b8:	test   rcx,rcx
   1400044bb:	je     0x1400044c2
   1400044bd:	call   0x140004490
   1400044c2:	mov    rbx,QWORD PTR [rbx+0x10]
   1400044c6:	test   rbx,rbx
   1400044c9:	jne    0x1400044a0
   1400044cb:	add    rsp,0x20
   1400044cf:	pop    rbx
   1400044d0:	ret    
   1400044d1:	int3   
   1400044d2:	int3   
   1400044d3:	int3   
   1400044d4:	int3   
   1400044d5:	int3   
   1400044d6:	int3   
   1400044d7:	int3   
   1400044d8:	int3   
   1400044d9:	int3   
   1400044da:	int3   
   1400044db:	int3   
   1400044dc:	int3   
   1400044dd:	int3   
   1400044de:	int3   
   1400044df:	int3   
   1400044e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400044e5:	push   rdi
   1400044e6:	sub    rsp,0x20
   1400044ea:	mov    rdi,QWORD PTR [rcx+0x10]
   1400044ee:	mov    rbx,rcx
   1400044f1:	test   rdi,rdi
   1400044f4:	je     0x140004539
   1400044f6:	lea    rcx,[rdi+0x18]
   1400044fa:	call   QWORD PTR [rip+0x17128]        # 0x14001b628
   140004500:	lea    rcx,[rdi+0x20]
   140004504:	call   QWORD PTR [rip+0x1711e]        # 0x14001b628
   14000450a:	mov    rcx,QWORD PTR [rdi+0x8]
   14000450e:	test   rcx,rcx
   140004511:	je     0x140004518
   140004513:	call   0x140004490
   140004518:	mov    rcx,QWORD PTR [rdi+0x10]
   14000451c:	test   rcx,rcx
   14000451f:	je     0x140004526
   140004521:	call   0x140004490
   140004526:	mov    rdx,QWORD PTR [rbx+0x10]
   14000452a:	mov    r8d,0x8
   140004530:	mov    rcx,rbx
   140004533:	call   QWORD PTR [rip+0x16d67]        # 0x14001b2a0
   140004539:	mov    rcx,rbx
   14000453c:	mov    rbx,QWORD PTR [rsp+0x30]
   140004541:	add    rsp,0x20
   140004545:	pop    rdi
   140004546:	rex.W jmp QWORD PTR [rip+0x16d4b]        # 0x14001b298
   14000454d:	int3   
   14000454e:	int3   
   14000454f:	int3   
   140004550:	mov    QWORD PTR [rsp+0x8],rcx
   140004555:	push   rdi
   140004556:	sub    rsp,0x30
   14000455a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004563:	mov    QWORD PTR [rsp+0x48],rbx
   140004568:	mov    rdi,rdx
   14000456b:	mov    rbx,rcx
   14000456e:	mov    rax,QWORD PTR [rdx]
   140004571:	mov    QWORD PTR [rcx],rax
   140004574:	mov    ecx,DWORD PTR [rax]
   140004576:	test   ecx,ecx
   140004578:	je     0x140004585
   14000457a:	cmp    ecx,0xffffffff
   14000457d:	je     0x1400045bc
   14000457f:	lock add DWORD PTR [rax],0x1
   140004583:	jmp    0x1400045bc
   140004585:	mov    edx,DWORD PTR [rax+0x4]
   140004588:	mov    rcx,rbx
   14000458b:	call   QWORD PTR [rip+0x16da7]        # 0x14001b338
   140004591:	nop
   140004592:	mov    rcx,QWORD PTR [rdi]
   140004595:	movsxd rax,DWORD PTR [rcx+0x8]
   140004599:	lea    r9,[rcx+rax*8+0x10]
   14000459e:	mov    rcx,QWORD PTR [rbx]
   1400045a1:	movsxd rax,DWORD PTR [rcx+0xc]
   1400045a5:	lea    r8,[rcx+rax*8+0x10]
   1400045aa:	movsxd rax,DWORD PTR [rcx+0x8]
   1400045ae:	lea    rdx,[rcx+rax*8+0x10]
   1400045b3:	mov    rcx,rbx
   1400045b6:	call   0x1400042f0
   1400045bb:	nop
   1400045bc:	mov    rax,rbx
   1400045bf:	mov    rbx,QWORD PTR [rsp+0x48]
   1400045c4:	add    rsp,0x30
   1400045c8:	pop    rdi
   1400045c9:	ret    
   1400045ca:	int3   
   1400045cb:	int3   
   1400045cc:	int3   
   1400045cd:	int3   
   1400045ce:	int3   
   1400045cf:	int3   
   1400045d0:	rex push rsi
   1400045d2:	sub    rsp,0x20
   1400045d6:	mov    rax,QWORD PTR [rdx]
   1400045d9:	mov    rsi,rcx
   1400045dc:	cmp    QWORD PTR [rcx],rax
   1400045df:	je     0x140004692
   1400045e5:	lea    rcx,[rsp+0x30]
   1400045ea:	mov    QWORD PTR [rsp+0x48],rdi
   1400045ef:	call   0x140004550
   1400045f4:	lea    r11,[rsp+0x30]
   1400045f9:	cmp    r11,rsi
   1400045fc:	je     0x140004610
   1400045fe:	mov    rax,QWORD PTR [rsp+0x30]
   140004603:	mov    rdi,QWORD PTR [rsi]
   140004606:	mov    QWORD PTR [rsp+0x30],rdi
   14000460b:	mov    QWORD PTR [rsi],rax
   14000460e:	jmp    0x140004615
   140004610:	mov    rdi,QWORD PTR [rsp+0x30]
   140004615:	mov    eax,DWORD PTR [rdi]
   140004617:	test   eax,eax
   140004619:	je     0x140004630
   14000461b:	cmp    eax,0xffffffff
   14000461e:	je     0x140004684
   140004620:	lock add DWORD PTR [rdi],0xffffffff
   140004624:	setne  al
   140004627:	test   al,al
   140004629:	jne    0x140004684
   14000462b:	mov    rdi,QWORD PTR [rsp+0x30]
   140004630:	movsxd rax,DWORD PTR [rdi+0xc]
   140004634:	mov    QWORD PTR [rsp+0x38],rbx
   140004639:	mov    QWORD PTR [rsp+0x40],rbp
   14000463e:	lea    rbx,[rdi+rax*8+0x10]
   140004643:	movsxd rax,DWORD PTR [rdi+0x8]
   140004647:	lea    rbp,[rdi+rax*8+0x10]
   14000464c:	cmp    rbp,rbx
   14000464f:	je     0x140004663
   140004651:	sub    rbx,0x8
   140004655:	mov    rcx,rbx
   140004658:	call   QWORD PTR [rip+0x16fca]        # 0x14001b628
   14000465e:	cmp    rbx,rbp
   140004661:	jne    0x140004651
   140004663:	mov    rcx,rdi
   140004666:	call   QWORD PTR [rip+0x16c24]        # 0x14001b290
   14000466c:	mov    rbp,QWORD PTR [rsp+0x40]
   140004671:	mov    rbx,QWORD PTR [rsp+0x38]
   140004676:	mov    rdi,QWORD PTR [rsp+0x48]
   14000467b:	mov    rax,rsi
   14000467e:	add    rsp,0x20
   140004682:	pop    rsi
   140004683:	ret    
   140004684:	mov    rax,rsi
   140004687:	mov    rdi,QWORD PTR [rsp+0x48]
   14000468c:	add    rsp,0x20
   140004690:	pop    rsi
   140004691:	ret    
   140004692:	mov    rax,rcx
   140004695:	add    rsp,0x20
   140004699:	pop    rsi
   14000469a:	ret    
   14000469b:	int3   
   14000469c:	int3   
   14000469d:	int3   
   14000469e:	int3   
   14000469f:	int3   
   1400046a0:	rex push rdi
   1400046a2:	sub    rsp,0x30
   1400046a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400046af:	mov    QWORD PTR [rsp+0x40],rbx
   1400046b4:	mov    QWORD PTR [rsp+0x50],rsi
   1400046b9:	mov    rbx,QWORD PTR [rip+0x16f20]        # 0x14001b5e0
   1400046c0:	mov    QWORD PTR [rsp+0x48],rbx
   1400046c5:	lea    rdx,[rsp+0x48]
   1400046ca:	call   0x1400045d0
   1400046cf:	nop
   1400046d0:	mov    eax,DWORD PTR [rbx]
   1400046d2:	test   eax,eax
   1400046d4:	je     0x1400046eb
   1400046d6:	cmp    eax,0xffffffff
   1400046d9:	je     0x14000471d
   1400046db:	lock add DWORD PTR [rbx],0xffffffff
   1400046df:	setne  al
   1400046e2:	test   al,al
   1400046e4:	jne    0x14000471d
   1400046e6:	mov    rbx,QWORD PTR [rsp+0x48]
   1400046eb:	movsxd rax,DWORD PTR [rbx+0xc]
   1400046ef:	lea    rdi,[rbx+rax*8+0x10]
   1400046f4:	movsxd rax,DWORD PTR [rbx+0x8]
   1400046f8:	lea    rsi,[rbx+rax*8+0x10]
   1400046fd:	cmp    rsi,rdi
   140004700:	je     0x140004714
   140004702:	sub    rdi,0x8
   140004706:	mov    rcx,rdi
   140004709:	call   QWORD PTR [rip+0x16f19]        # 0x14001b628
   14000470f:	cmp    rdi,rsi
   140004712:	jne    0x140004702
   140004714:	mov    rcx,rbx
   140004717:	call   QWORD PTR [rip+0x16b73]        # 0x14001b290
   14000471d:	mov    rbx,QWORD PTR [rsp+0x40]
   140004722:	mov    rsi,QWORD PTR [rsp+0x50]
   140004727:	add    rsp,0x30
   14000472b:	pop    rdi
   14000472c:	ret    
   14000472d:	int3   
   14000472e:	int3   
   14000472f:	int3   
   140004730:	mov    QWORD PTR [rsp+0x8],rbx
   140004735:	push   rdi
   140004736:	sub    rsp,0x20
   14000473a:	mov    rbx,rcx
   14000473d:	call   QWORD PTR [rip+0x16e5d]        # 0x14001b5a0
   140004743:	mov    rdx,QWORD PTR [rbx]
   140004746:	mov    rcx,QWORD PTR [rdx+0x10]
   14000474a:	mov    rdi,rax
   14000474d:	test   rcx,rcx
   140004750:	je     0x140004769
   140004752:	mov    rdx,rax
   140004755:	call   0x1400043e0
   14000475a:	lea    rcx,[rdi+0x8]
   14000475e:	mov    QWORD PTR [rdi+0x10],rax
   140004762:	and    QWORD PTR [rax],0x3
   140004766:	or     QWORD PTR [rax],rcx
   140004769:	mov    rcx,QWORD PTR [rbx]
   14000476c:	mov    eax,DWORD PTR [rcx]
   14000476e:	test   eax,eax
   140004770:	je     0x140004782
   140004772:	cmp    eax,0xffffffff
   140004775:	je     0x14000478a
   140004777:	lock add DWORD PTR [rcx],0xffffffff
   14000477b:	setne  al
   14000477e:	test   al,al
   140004780:	jne    0x14000478a
   140004782:	mov    rcx,QWORD PTR [rbx]
   140004785:	call   0x1400044e0
   14000478a:	mov    rcx,rdi
   14000478d:	mov    QWORD PTR [rbx],rdi
   140004790:	mov    rbx,QWORD PTR [rsp+0x30]
   140004795:	add    rsp,0x20
   140004799:	pop    rdi
   14000479a:	rex.W jmp QWORD PTR [rip+0x16b0f]        # 0x14001b2b0
   1400047a1:	int3   
   1400047a2:	int3   
   1400047a3:	int3   
   1400047a4:	int3   
   1400047a5:	int3   
   1400047a6:	int3   
   1400047a7:	int3   
   1400047a8:	int3   
   1400047a9:	int3   
   1400047aa:	int3   
   1400047ab:	int3   
   1400047ac:	int3   
   1400047ad:	int3   
   1400047ae:	int3   
   1400047af:	int3   
   1400047b0:	mov    DWORD PTR [rsp+0x10],edx
   1400047b4:	mov    QWORD PTR [rsp+0x8],rcx
   1400047b9:	push   rsi
   1400047ba:	push   rdi
   1400047bb:	push   r12
   1400047bd:	sub    rsp,0x30
   1400047c1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400047ca:	mov    QWORD PTR [rsp+0x60],rbx
   1400047cf:	movsxd rsi,r8d
   1400047d2:	mov    r12,rcx
   1400047d5:	mov    rdx,QWORD PTR [rcx]
   1400047d8:	movsxd rax,DWORD PTR [rdx+0x8]
   1400047dc:	lea    rbx,[rdx+rax*8+0x10]
   1400047e1:	mov    r8d,esi
   1400047e4:	lea    rdx,[rsp+0x58]
   1400047e9:	call   QWORD PTR [rip+0x16b51]        # 0x14001b340
   1400047ef:	mov    rdi,rax
   1400047f2:	mov    QWORD PTR [rsp+0x68],rax
   1400047f7:	mov    rdx,QWORD PTR [r12]
   1400047fb:	movsxd rcx,DWORD PTR [rdx+0x8]
   1400047ff:	lea    rdx,[rdx+rcx*8+0x10]
   140004804:	movsxd rcx,DWORD PTR [rsp+0x58]
   140004809:	lea    r8,[rdx+rcx*8]
   14000480d:	mov    r9,rbx
   140004810:	mov    rcx,r12
   140004813:	call   0x1400042f0
   140004818:	nop
   140004819:	mov    r10,QWORD PTR [r12]
   14000481d:	movsxd rax,DWORD PTR [r10+0xc]
   140004821:	lea    r8,[r10+rax*8+0x10]
   140004826:	movsxd rdx,DWORD PTR [rsp+0x58]
   14000482b:	lea    r9,[rbx+rdx*8]
   14000482f:	movsxd rcx,DWORD PTR [r10+0x8]
   140004833:	add    rcx,rdx
   140004836:	add    rcx,rsi
   140004839:	lea    rdx,[r10+rcx*8+0x10]
   14000483e:	mov    rcx,r12
   140004841:	call   0x1400042f0
   140004846:	nop
   140004847:	mov    eax,DWORD PTR [rdi]
   140004849:	test   eax,eax
   14000484b:	je     0x14000485d
   14000484d:	cmp    eax,0xffffffff
   140004850:	je     0x14000489b
   140004852:	lock add DWORD PTR [rdi],0xffffffff
   140004856:	setne  al
   140004859:	test   al,al
   14000485b:	jne    0x14000489b
   14000485d:	movsxd rax,DWORD PTR [rdi+0xc]
   140004861:	lea    rbx,[rdi+rax*8+0x10]
   140004866:	movsxd rax,DWORD PTR [rdi+0x8]
   14000486a:	lea    rsi,[rdi+rax*8+0x10]
   14000486f:	cmp    rsi,rbx
   140004872:	je     0x140004892
   140004874:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140004880:	sub    rbx,0x8
   140004884:	mov    rcx,rbx
   140004887:	call   QWORD PTR [rip+0x16d9b]        # 0x14001b628
   14000488d:	cmp    rsi,rbx
   140004890:	jne    0x140004880
   140004892:	mov    rcx,rdi
   140004895:	call   QWORD PTR [rip+0x169f5]        # 0x14001b290
   14000489b:	mov    rdx,QWORD PTR [r12]
   14000489f:	movsxd rcx,DWORD PTR [rdx+0x8]
   1400048a3:	movsxd rax,DWORD PTR [rsp+0x58]
   1400048a8:	add    rcx,rax
   1400048ab:	lea    rax,[rdx+rcx*8+0x10]
   1400048b0:	mov    rbx,QWORD PTR [rsp+0x60]
   1400048b5:	add    rsp,0x30
   1400048b9:	pop    r12
   1400048bb:	pop    rdi
   1400048bc:	pop    rsi
   1400048bd:	ret    
   1400048be:	int3   
   1400048bf:	int3   
   1400048c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400048c5:	push   rdi
   1400048c6:	sub    rsp,0x30
   1400048ca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400048d3:	mov    QWORD PTR [rsp+0x48],rbx
   1400048d8:	mov    QWORD PTR [rsp+0x58],rsi
   1400048dd:	mov    rbx,rcx
   1400048e0:	mov    r8,QWORD PTR [rcx]
   1400048e3:	movsxd rax,DWORD PTR [r8+0x8]
   1400048e7:	lea    rsi,[r8+rax*8+0x10]
   1400048ec:	call   QWORD PTR [rip+0x16a46]        # 0x14001b338
   1400048f2:	mov    rdi,rax
   1400048f5:	mov    QWORD PTR [rsp+0x50],rax
   1400048fa:	mov    rdx,QWORD PTR [rbx]
   1400048fd:	movsxd rcx,DWORD PTR [rdx+0xc]
   140004901:	lea    r8,[rdx+rcx*8+0x10]
   140004906:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000490a:	lea    rdx,[rdx+rcx*8+0x10]
   14000490f:	mov    r9,rsi
   140004912:	mov    rcx,rbx
   140004915:	call   0x1400042f0
   14000491a:	nop
   14000491b:	mov    eax,DWORD PTR [rdi]
   14000491d:	test   eax,eax
   14000491f:	je     0x140004931
   140004921:	cmp    eax,0xffffffff
   140004924:	je     0x14000496b
   140004926:	lock add DWORD PTR [rdi],0xffffffff
   14000492a:	setne  al
   14000492d:	test   al,al
   14000492f:	jne    0x14000496b
   140004931:	movsxd rax,DWORD PTR [rdi+0xc]
   140004935:	lea    rbx,[rdi+rax*8+0x10]
   14000493a:	movsxd rax,DWORD PTR [rdi+0x8]
   14000493e:	lea    rsi,[rdi+rax*8+0x10]
   140004943:	cmp    rsi,rbx
   140004946:	je     0x140004962
   140004948:	nop    DWORD PTR [rax+rax*1+0x0]
   140004950:	sub    rbx,0x8
   140004954:	mov    rcx,rbx
   140004957:	call   QWORD PTR [rip+0x16ccb]        # 0x14001b628
   14000495d:	cmp    rsi,rbx
   140004960:	jne    0x140004950
   140004962:	mov    rcx,rdi
   140004965:	call   QWORD PTR [rip+0x16925]        # 0x14001b290
   14000496b:	mov    rbx,QWORD PTR [rsp+0x48]
   140004970:	mov    rsi,QWORD PTR [rsp+0x58]
   140004975:	add    rsp,0x30
   140004979:	pop    rdi
   14000497a:	ret    
   14000497b:	int3   
   14000497c:	int3   
   14000497d:	int3   
   14000497e:	int3   
   14000497f:	int3   
   140004980:	sub    rsp,0x28
   140004984:	mov    rdx,QWORD PTR [rcx]
   140004987:	mov    eax,DWORD PTR [rdx]
   140004989:	test   eax,eax
   14000498b:	je     0x14000499d
   14000498d:	cmp    eax,0xffffffff
   140004990:	je     0x1400049a5
   140004992:	lock add DWORD PTR [rdx],0xffffffff
   140004996:	setne  al
   140004999:	test   al,al
   14000499b:	jne    0x1400049a5
   14000499d:	mov    rcx,QWORD PTR [rcx]
   1400049a0:	call   0x1400044e0
   1400049a5:	add    rsp,0x28
   1400049a9:	ret    
   1400049aa:	int3   
   1400049ab:	int3   
   1400049ac:	int3   
   1400049ad:	int3   
   1400049ae:	int3   
   1400049af:	int3   
   1400049b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400049b5:	push   rdi
   1400049b6:	sub    rsp,0x30
   1400049ba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400049c3:	mov    QWORD PTR [rsp+0x48],rbx
   1400049c8:	mov    rdi,rdx
   1400049cb:	mov    rbx,rcx
   1400049ce:	mov    rax,QWORD PTR [rcx]
   1400049d1:	mov    ecx,DWORD PTR [rax]
   1400049d3:	cmp    ecx,0x1
   1400049d6:	je     0x140004a04
   1400049d8:	test   ecx,ecx
   1400049da:	je     0x140004a04
   1400049dc:	mov    edx,0x7fffffff
   1400049e1:	mov    r8d,0x1
   1400049e7:	mov    rcx,rbx
   1400049ea:	call   0x1400047b0
   1400049ef:	nop
   1400049f0:	test   rax,rax
   1400049f3:	je     0x140004a02
   1400049f5:	mov    rdx,rdi
   1400049f8:	mov    rcx,rax
   1400049fb:	call   QWORD PTR [rip+0x1692f]        # 0x14001b330
   140004a01:	nop
   140004a02:	jmp    0x140004a22
   140004a04:	lea    rcx,[rsp+0x40]
   140004a09:	call   QWORD PTR [rip+0x16921]        # 0x14001b330
   140004a0f:	nop
   140004a10:	mov    rcx,rbx
   140004a13:	call   QWORD PTR [rip+0x1692f]        # 0x14001b348
   140004a19:	nop
   140004a1a:	mov    rcx,QWORD PTR [rsp+0x40]
   140004a1f:	mov    QWORD PTR [rax],rcx
   140004a22:	mov    rbx,QWORD PTR [rsp+0x48]
   140004a27:	add    rsp,0x30
   140004a2b:	pop    rdi
   140004a2c:	ret    
   140004a2d:	int3   
   140004a2e:	int3   
   140004a2f:	int3   
   140004a30:	mov    QWORD PTR [rsp+0x8],rcx
   140004a35:	push   rdi
   140004a36:	sub    rsp,0x30
   140004a3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004a43:	mov    QWORD PTR [rsp+0x48],rbx
   140004a48:	mov    ebx,edx
   140004a4a:	mov    rdi,rcx
   140004a4d:	add    rcx,0x28
   140004a51:	call   QWORD PTR [rip+0x16bd1]        # 0x14001b628
   140004a57:	nop
   140004a58:	lea    rcx,[rdi+0x20]
   140004a5c:	call   0x140002880
   140004a61:	nop
   140004a62:	lea    rcx,[rdi+0x18]
   140004a66:	call   QWORD PTR [rip+0x16bb4]        # 0x14001b620
   140004a6c:	nop
   140004a6d:	lea    rcx,[rdi+0x10]
   140004a71:	call   QWORD PTR [rip+0x16ba9]        # 0x14001b620
   140004a77:	nop
   140004a78:	lea    rcx,[rdi+0x8]
   140004a7c:	call   QWORD PTR [rip+0x16b9e]        # 0x14001b620
   140004a82:	test   bl,0x1
   140004a85:	je     0x140004a94
   140004a87:	mov    rcx,rdi
   140004a8a:	call   0x140013f3e
   140004a8f:	mov    rax,rdi
   140004a92:	jmp    0x140004a97
   140004a94:	mov    rax,rdi
   140004a97:	mov    rbx,QWORD PTR [rsp+0x48]
   140004a9c:	add    rsp,0x30
   140004aa0:	pop    rdi
   140004aa1:	ret    
   140004aa2:	int3   
   140004aa3:	int3   
   140004aa4:	int3   
   140004aa5:	int3   
   140004aa6:	int3   
   140004aa7:	int3   
   140004aa8:	int3   
   140004aa9:	int3   
   140004aaa:	int3   
   140004aab:	int3   
   140004aac:	int3   
   140004aad:	int3   
   140004aae:	int3   
   140004aaf:	int3   
   140004ab0:	rex push rbx
   140004ab2:	sub    rsp,0x20
   140004ab6:	mov    rbx,rcx
   140004ab9:	nop    DWORD PTR [rax+0x0]
   140004ac0:	lea    rcx,[rbx+0x40]
   140004ac4:	call   QWORD PTR [rip+0x16b5e]        # 0x14001b628
   140004aca:	lea    rcx,[rbx+0x38]
   140004ace:	call   0x140002880
   140004ad3:	lea    rcx,[rbx+0x30]
   140004ad7:	call   QWORD PTR [rip+0x16b43]        # 0x14001b620
   140004add:	lea    rcx,[rbx+0x28]
   140004ae1:	call   QWORD PTR [rip+0x16b39]        # 0x14001b620
   140004ae7:	lea    rcx,[rbx+0x20]
   140004aeb:	call   QWORD PTR [rip+0x16b2f]        # 0x14001b620
   140004af1:	mov    rcx,QWORD PTR [rbx+0x8]
   140004af5:	test   rcx,rcx
   140004af8:	je     0x140004aff
   140004afa:	call   0x140004ab0
   140004aff:	mov    rbx,QWORD PTR [rbx+0x10]
   140004b03:	test   rbx,rbx
   140004b06:	jne    0x140004ac0
   140004b08:	add    rsp,0x20
   140004b0c:	pop    rbx
   140004b0d:	ret    
   140004b0e:	int3   
   140004b0f:	int3   
   140004b10:	sub    rsp,0x28
   140004b14:	mov    rdx,QWORD PTR [rcx]
   140004b17:	mov    eax,DWORD PTR [rdx]
   140004b19:	test   eax,eax
   140004b1b:	je     0x140004b2d
   140004b1d:	cmp    eax,0xffffffff
   140004b20:	je     0x140004b64
   140004b22:	lock add DWORD PTR [rdx],0xffffffff
   140004b26:	setne  al
   140004b29:	test   al,al
   140004b2b:	jne    0x140004b64
   140004b2d:	mov    QWORD PTR [rsp+0x20],rbx
   140004b32:	mov    rbx,QWORD PTR [rcx]
   140004b35:	mov    rcx,QWORD PTR [rbx+0x10]
   140004b39:	test   rcx,rcx
   140004b3c:	je     0x140004b56
   140004b3e:	call   0x140004ab0
   140004b43:	mov    rdx,QWORD PTR [rbx+0x10]
   140004b47:	mov    r8d,0x8
   140004b4d:	mov    rcx,rbx
   140004b50:	call   QWORD PTR [rip+0x1674a]        # 0x14001b2a0
   140004b56:	mov    rcx,rbx
   140004b59:	call   QWORD PTR [rip+0x16739]        # 0x14001b298
   140004b5f:	mov    rbx,QWORD PTR [rsp+0x20]
   140004b64:	add    rsp,0x28
   140004b68:	ret    
   140004b69:	int3   
   140004b6a:	int3   
   140004b6b:	int3   
   140004b6c:	int3   
   140004b6d:	int3   
   140004b6e:	int3   
   140004b6f:	int3   
   140004b70:	mov    QWORD PTR [rsp+0x8],rcx
   140004b75:	push   rbx
   140004b76:	sub    rsp,0x30
   140004b7a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004b83:	mov    rbx,rcx
   140004b86:	add    rcx,0x20
   140004b8a:	call   QWORD PTR [rip+0x16a98]        # 0x14001b628
   140004b90:	nop
   140004b91:	lea    rcx,[rbx+0x18]
   140004b95:	call   QWORD PTR [rip+0x16a8d]        # 0x14001b628
   140004b9b:	nop
   140004b9c:	lea    rcx,[rbx+0x8]
   140004ba0:	call   QWORD PTR [rip+0x16a7a]        # 0x14001b620
   140004ba6:	nop
   140004ba7:	mov    rcx,QWORD PTR [rbx]
   140004baa:	mov    eax,DWORD PTR [rcx]
   140004bac:	test   eax,eax
   140004bae:	je     0x140004bc0
   140004bb0:	cmp    eax,0xffffffff
   140004bb3:	je     0x140004bed
   140004bb5:	lock add DWORD PTR [rcx],0xffffffff
   140004bb9:	setne  al
   140004bbc:	test   al,al
   140004bbe:	jne    0x140004bed
   140004bc0:	mov    rbx,QWORD PTR [rbx]
   140004bc3:	mov    rcx,QWORD PTR [rbx+0x10]
   140004bc7:	test   rcx,rcx
   140004bca:	je     0x140004be4
   140004bcc:	call   0x140004ab0
   140004bd1:	mov    r8d,0x8
   140004bd7:	mov    rdx,QWORD PTR [rbx+0x10]
   140004bdb:	mov    rcx,rbx
   140004bde:	call   QWORD PTR [rip+0x166bc]        # 0x14001b2a0
   140004be4:	mov    rcx,rbx
   140004be7:	call   QWORD PTR [rip+0x166ab]        # 0x14001b298
   140004bed:	add    rsp,0x30
   140004bf1:	pop    rbx
   140004bf2:	ret    
   140004bf3:	int3   
   140004bf4:	int3   
   140004bf5:	int3   
   140004bf6:	int3   
   140004bf7:	int3   
   140004bf8:	int3   
   140004bf9:	int3   
   140004bfa:	int3   
   140004bfb:	int3   
   140004bfc:	int3   
   140004bfd:	int3   
   140004bfe:	int3   
   140004bff:	int3   
   140004c00:	rex push rbx
   140004c02:	push   rbp
   140004c03:	push   rsi
   140004c04:	push   rdi
   140004c05:	push   r12
   140004c07:	push   r13
   140004c09:	push   r14
   140004c0b:	push   r15
   140004c0d:	sub    rsp,0x158
   140004c14:	mov    QWORD PTR [rsp+0xc0],0xfffffffffffffffe
   140004c20:	mov    rax,QWORD PTR [rip+0x245f9]        # 0x140029220
   140004c27:	xor    rax,rsp
   140004c2a:	mov    QWORD PTR [rsp+0x140],rax
   140004c32:	movzx  r13d,r9b
   140004c36:	mov    r14,r8
   140004c39:	mov    r15,rdx
   140004c3c:	mov    rsi,rcx
   140004c3f:	mov    QWORD PTR [rsp+0x48],rcx
   140004c44:	mov    r10,QWORD PTR [rdx]
   140004c47:	movsxd rax,DWORD PTR [r10+0x8]
   140004c4b:	lea    rbx,[r10+rax*8+0x10]
   140004c50:	lea    rcx,[rsp+0x88]
   140004c58:	call   QWORD PTR [rip+0x169b2]        # 0x14001b610
   140004c5e:	nop
   140004c5f:	mov    rdx,rax
   140004c62:	lea    rcx,[rsp+0x38]
   140004c67:	call   QWORD PTR [rip+0x166f3]        # 0x14001b360
   140004c6d:	nop
   140004c6e:	lea    rcx,[rsp+0x88]
   140004c76:	call   QWORD PTR [rip+0x169ac]        # 0x14001b628
   140004c7c:	mov    r11,QWORD PTR [r15]
   140004c7f:	movsxd rax,DWORD PTR [r11+0xc]
   140004c83:	lea    rax,[r11+rax*8+0x10]
   140004c88:	cmp    rbx,rax
   140004c8b:	je     0x140004fee
   140004c91:	movzx  r12d,BYTE PTR [rsp+0x1c0]
   140004c9a:	nop    WORD PTR [rax+rax*1+0x0]
   140004ca0:	mov    r8,rbx
   140004ca3:	lea    rdx,[rsp+0x30]
   140004ca8:	lea    rcx,[rsp+0x38]
   140004cad:	call   QWORD PTR [rip+0x166a5]        # 0x14001b358
   140004cb3:	nop
   140004cb4:	lea    rcx,[rsp+0x98]
   140004cbc:	call   0x14000b550
   140004cc1:	nop
   140004cc2:	lea    rcx,[rsp+0x58]
   140004cc7:	call   0x14000b550
   140004ccc:	nop
   140004ccd:	mov    rdx,rbx
   140004cd0:	lea    rcx,[rsp+0x98]
   140004cd8:	call   0x14000d460
   140004cdd:	mov    r11,QWORD PTR [r14]
   140004ce0:	cmp    DWORD PTR [r11+0x4],0x0
   140004ce5:	je     0x140004d21
   140004ce7:	lea    rdx,[rsp+0x80]
   140004cef:	mov    rcx,r14
   140004cf2:	call   QWORD PTR [rip+0x168f0]        # 0x14001b5e8
   140004cf8:	nop
   140004cf9:	mov    rcx,rax
   140004cfc:	call   QWORD PTR [rip+0x1653e]        # 0x14001b240
   140004d02:	mov    rdx,rax
   140004d05:	lea    rcx,[rsp+0x98]
   140004d0d:	call   0x140008b80
   140004d12:	nop
   140004d13:	lea    rcx,[rsp+0x80]
   140004d1b:	call   QWORD PTR [rip+0x168ff]        # 0x14001b620
   140004d21:	test   r12b,r12b
   140004d24:	je     0x140004d69
   140004d26:	lea    rdx,[rsp+0x50]
   140004d2b:	lea    rcx,[rsp+0x30]
   140004d30:	call   QWORD PTR [rip+0x168b2]        # 0x14001b5e8
   140004d36:	nop
   140004d37:	mov    rcx,rax
   140004d3a:	call   QWORD PTR [rip+0x164d8]        # 0x14001b218
   140004d40:	mov    rdi,rax
   140004d43:	call   QWORD PTR [rip+0x1649f]        # 0x14001b1e8
   140004d49:	mov    r8,rdi
   140004d4c:	lea    rdx,[rip+0x17ffd]        # 0x14001cd50
   140004d53:	lea    rcx,[rax+0x60]
   140004d57:	call   QWORD PTR [rip+0x16493]        # 0x14001b1f0
   140004d5d:	nop
   140004d5e:	lea    rcx,[rsp+0x50]
   140004d63:	call   QWORD PTR [rip+0x168b7]        # 0x14001b620
   140004d69:	mov    BYTE PTR [rsp+0x20],r13b
   140004d6e:	movzx  r9d,r12b
   140004d72:	lea    r8,[rsp+0x58]
   140004d77:	mov    rdx,rsi
   140004d7a:	lea    rcx,[rsp+0x98]
   140004d82:	call   0x140007050
   140004d87:	test   r13b,r13b
   140004d8a:	je     0x140004d96
   140004d8c:	lea    rcx,[rsp+0x58]
   140004d91:	call   0x14000c9a0
   140004d96:	lea    rcx,[rsp+0x58]
   140004d9b:	call   0x14000cbe0
   140004da0:	mov    rdx,rbx
   140004da3:	lea    rcx,[rsp+0x58]
   140004da8:	call   0x14000b5d0
   140004dad:	test   al,al
   140004daf:	jne    0x140004e18
   140004db1:	call   QWORD PTR [rip+0x163d1]        # 0x14001b188
   140004db7:	mov    r8d,DWORD PTR [rax]
   140004dba:	mov    edx,0x64
   140004dbf:	lea    rcx,[rsp+0xd0]
   140004dc7:	call   QWORD PTR [rip+0x163c3]        # 0x14001b190
   140004dcd:	lea    rdx,[rsp+0x40]
   140004dd2:	lea    rcx,[rsp+0x30]
   140004dd7:	call   QWORD PTR [rip+0x1680b]        # 0x14001b5e8
   140004ddd:	nop
   140004dde:	mov    rcx,rax
   140004de1:	call   QWORD PTR [rip+0x16431]        # 0x14001b218
   140004de7:	mov    rdi,rax
   140004dea:	call   QWORD PTR [rip+0x163f8]        # 0x14001b1e8
   140004df0:	lea    r9,[rsp+0xd0]
   140004df8:	mov    r8,rdi
   140004dfb:	lea    rdx,[rip+0x17f26]        # 0x14001cd28
   140004e02:	lea    rcx,[rax+0x60]
   140004e06:	call   QWORD PTR [rip+0x163e4]        # 0x14001b1f0
   140004e0c:	nop
   140004e0d:	lea    rcx,[rsp+0x40]
   140004e12:	call   QWORD PTR [rip+0x16808]        # 0x14001b620
   140004e18:	add    rbx,0x8
   140004e1c:	lea    rcx,[rsp+0x78]
   140004e21:	call   QWORD PTR [rip+0x16801]        # 0x14001b628
   140004e27:	nop
   140004e28:	lea    rcx,[rsp+0x70]
   140004e2d:	call   QWORD PTR [rip+0x167f5]        # 0x14001b628
   140004e33:	nop
   140004e34:	lea    rcx,[rsp+0x60]
   140004e39:	call   QWORD PTR [rip+0x167e1]        # 0x14001b620
   140004e3f:	nop
   140004e40:	mov    rsi,QWORD PTR [rsp+0x58]
   140004e45:	mov    eax,DWORD PTR [rsi]
   140004e47:	test   eax,eax
   140004e49:	je     0x140004e68
   140004e4b:	cmp    eax,0xffffffff
   140004e4e:	je     0x140004eeb
   140004e54:	lock add DWORD PTR [rsi],0xffffffff
   140004e58:	setne  al
   140004e5b:	test   al,al
   140004e5d:	jne    0x140004eeb
   140004e63:	mov    rsi,QWORD PTR [rsp+0x58]
   140004e68:	mov    rbp,QWORD PTR [rsi+0x10]
   140004e6c:	test   rbp,rbp
   140004e6f:	je     0x140004ee1
   140004e71:	lea    rdi,[rbp+0x18]
   140004e75:	mov    QWORD PTR [rsp+0x90],rdi
   140004e7d:	lea    rcx,[rdi+0x28]
   140004e81:	call   QWORD PTR [rip+0x167a1]        # 0x14001b628
   140004e87:	nop
   140004e88:	lea    rcx,[rdi+0x20]
   140004e8c:	call   0x140002880
   140004e91:	nop
   140004e92:	lea    rcx,[rdi+0x18]
   140004e96:	call   QWORD PTR [rip+0x16784]        # 0x14001b620
   140004e9c:	nop
   140004e9d:	lea    rcx,[rdi+0x10]
   140004ea1:	call   QWORD PTR [rip+0x16779]        # 0x14001b620
   140004ea7:	nop
   140004ea8:	lea    rcx,[rdi+0x8]
   140004eac:	call   QWORD PTR [rip+0x1676e]        # 0x14001b620
   140004eb2:	mov    rcx,QWORD PTR [rbp+0x8]
   140004eb6:	test   rcx,rcx
   140004eb9:	je     0x140004ec0
   140004ebb:	call   0x140004ab0
   140004ec0:	mov    rcx,QWORD PTR [rbp+0x10]
   140004ec4:	test   rcx,rcx
   140004ec7:	je     0x140004ece
   140004ec9:	call   0x140004ab0
   140004ece:	mov    r8d,0x8
   140004ed4:	mov    rdx,QWORD PTR [rsi+0x10]
   140004ed8:	mov    rcx,rsi
   140004edb:	call   QWORD PTR [rip+0x163bf]        # 0x14001b2a0
   140004ee1:	mov    rcx,rsi
   140004ee4:	call   QWORD PTR [rip+0x163ae]        # 0x14001b298
   140004eea:	nop
   140004eeb:	lea    rcx,[rsp+0xb8]
   140004ef3:	call   QWORD PTR [rip+0x1672f]        # 0x14001b628
   140004ef9:	nop
   140004efa:	lea    rcx,[rsp+0xb0]
   140004f02:	call   QWORD PTR [rip+0x16720]        # 0x14001b628
   140004f08:	nop
   140004f09:	lea    rcx,[rsp+0xa0]
   140004f11:	call   QWORD PTR [rip+0x16709]        # 0x14001b620
   140004f17:	nop
   140004f18:	mov    rsi,QWORD PTR [rsp+0x98]
   140004f20:	mov    eax,DWORD PTR [rsi]
   140004f22:	test   eax,eax
   140004f24:	je     0x140004f46
   140004f26:	cmp    eax,0xffffffff
   140004f29:	je     0x140004fc9
   140004f2f:	lock add DWORD PTR [rsi],0xffffffff
   140004f33:	setne  al
   140004f36:	test   al,al
   140004f38:	jne    0x140004fc9
   140004f3e:	mov    rsi,QWORD PTR [rsp+0x98]
   140004f46:	mov    rbp,QWORD PTR [rsi+0x10]
   140004f4a:	test   rbp,rbp
   140004f4d:	je     0x140004fbf
   140004f4f:	lea    rdi,[rbp+0x18]
   140004f53:	mov    QWORD PTR [rsp+0x90],rdi
   140004f5b:	lea    rcx,[rdi+0x28]
   140004f5f:	call   QWORD PTR [rip+0x166c3]        # 0x14001b628
   140004f65:	nop
   140004f66:	lea    rcx,[rdi+0x20]
   140004f6a:	call   0x140002880
   140004f6f:	nop
   140004f70:	lea    rcx,[rdi+0x18]
   140004f74:	call   QWORD PTR [rip+0x166a6]        # 0x14001b620
   140004f7a:	nop
   140004f7b:	lea    rcx,[rdi+0x10]
   140004f7f:	call   QWORD PTR [rip+0x1669b]        # 0x14001b620
   140004f85:	nop
   140004f86:	lea    rcx,[rdi+0x8]
   140004f8a:	call   QWORD PTR [rip+0x16690]        # 0x14001b620
   140004f90:	mov    rcx,QWORD PTR [rbp+0x8]
   140004f94:	test   rcx,rcx
   140004f97:	je     0x140004f9e
   140004f99:	call   0x140004ab0
   140004f9e:	mov    rcx,QWORD PTR [rbp+0x10]
   140004fa2:	test   rcx,rcx
   140004fa5:	je     0x140004fac
   140004fa7:	call   0x140004ab0
   140004fac:	mov    r8d,0x8
   140004fb2:	mov    rdx,QWORD PTR [rsi+0x10]
   140004fb6:	mov    rcx,rsi
   140004fb9:	call   QWORD PTR [rip+0x162e1]        # 0x14001b2a0
   140004fbf:	mov    rcx,rsi
   140004fc2:	call   QWORD PTR [rip+0x162d0]        # 0x14001b298
   140004fc8:	nop
   140004fc9:	lea    rcx,[rsp+0x30]
   140004fce:	call   QWORD PTR [rip+0x16654]        # 0x14001b628
   140004fd4:	mov    r11,QWORD PTR [r15]
   140004fd7:	movsxd rax,DWORD PTR [r11+0xc]
   140004fdb:	lea    rax,[r11+rax*8+0x10]
   140004fe0:	cmp    rbx,rax
   140004fe3:	mov    rsi,QWORD PTR [rsp+0x48]
   140004fe8:	jne    0x140004ca0
   140004fee:	lea    rcx,[rsp+0x38]
   140004ff3:	call   QWORD PTR [rip+0x16357]        # 0x14001b350
   140004ff9:	mov    rcx,QWORD PTR [rsp+0x140]
   140005001:	xor    rcx,rsp
   140005004:	call   0x140013ff0
   140005009:	add    rsp,0x158
   140005010:	pop    r15
   140005012:	pop    r14
   140005014:	pop    r13
   140005016:	pop    r12
   140005018:	pop    rdi
   140005019:	pop    rsi
   14000501a:	pop    rbp
   14000501b:	pop    rbx
   14000501c:	ret    
   14000501d:	int3   
   14000501e:	int3   
   14000501f:	int3   
   140005020:	mov    rax,rsp
   140005023:	push   rdi
   140005024:	push   r12
   140005026:	push   r13
   140005028:	push   r14
   14000502a:	push   r15
   14000502c:	sub    rsp,0x300
   140005033:	mov    QWORD PTR [rsp+0x248],0xfffffffffffffffe
   14000503f:	mov    QWORD PTR [rax+0x8],rbx
   140005043:	mov    QWORD PTR [rax+0x18],rbp
   140005047:	mov    QWORD PTR [rax+0x20],rsi
   14000504b:	mov    rax,QWORD PTR [rip+0x241ce]        # 0x140029220
   140005052:	xor    rax,rsp
   140005055:	mov    QWORD PTR [rsp+0x2f0],rax
   14000505d:	mov    r15,rdx
   140005060:	mov    QWORD PTR [rsp+0x1d8],rdx
   140005068:	movsxd r12,ecx
   14000506b:	xor    esi,esi
   14000506d:	mov    DWORD PTR [rsp+0x68],esi
   140005071:	xor    eax,eax
   140005073:	or     r14,0xffffffffffffffff
   140005077:	mov    rcx,r14
   14000507a:	lea    rdi,[rip+0x17f9f]        # 0x14001d020
   140005081:	repnz scas al,BYTE PTR es:[rdi]
   140005083:	not    rcx
   140005086:	lea    rdx,[rcx-0x1]
   14000508a:	lea    rcx,[rip+0x17f8f]        # 0x14001d020
   140005091:	call   QWORD PTR [rip+0x16581]        # 0x14001b618
   140005097:	mov    QWORD PTR [rsp+0x78],rax
   14000509c:	lea    rcx,[rsp+0xa0]
   1400050a4:	call   0x14000b550
   1400050a9:	nop
   1400050aa:	lea    rcx,[rsp+0x70]
   1400050af:	call   QWORD PTR [rip+0x161a3]        # 0x14001b258
   1400050b5:	nop
   1400050b6:	lea    rcx,[rsp+0x80]
   1400050be:	call   QWORD PTR [rip+0x16194]        # 0x14001b258
   1400050c4:	nop
   1400050c5:	mov    rbx,QWORD PTR [rip+0x16514]        # 0x14001b5e0
   1400050cc:	mov    QWORD PTR [rsp+0x48],rbx
   1400050d1:	mov    rdi,rbx
   1400050d4:	mov    QWORD PTR [rsp+0x58],rbx
   1400050d9:	mov    BYTE PTR [rsp+0x42],sil
   1400050de:	mov    BYTE PTR [rsp+0x40],sil
   1400050e3:	mov    BYTE PTR [rsp+0x41],sil
   1400050e8:	mov    DWORD PTR [rsp+0x88],esi
   1400050ef:	mov    r13b,0x1
   1400050f2:	mov    DWORD PTR [rsp+0x8c],r13d
   1400050fa:	mov    BYTE PTR [rsp+0x50],sil
   1400050ff:	mov    QWORD PTR [rsp+0xf0],rsi
   140005107:	mov    QWORD PTR [rsp+0xe0],rsi
   14000510f:	mov    ebp,0x1
   140005114:	mov    QWORD PTR [rsp+0xf8],r12
   14000511c:	cmp    r12d,ebp
   14000511f:	jle    0x140005155
   140005121:	lea    rdx,[rip+0x17ef4]        # 0x14001d01c
   140005128:	mov    rcx,QWORD PTR [r15+rbp*8]
   14000512c:	call   QWORD PTR [rip+0x16466]        # 0x14001b598
   140005132:	movzx  r13d,r13b
   140005136:	test   eax,eax
   140005138:	cmove  r13d,esi
   14000513c:	inc    rbp
   14000513f:	cmp    rbp,r12
   140005142:	jl     0x140005121
   140005144:	mov    DWORD PTR [rsp+0x8c],r13d
   14000514c:	mov    rbx,QWORD PTR [rsp+0x48]
   140005151:	or     r14,0xffffffffffffffff
   140005155:	mov    ebp,0x1
   14000515a:	mov    DWORD PTR [rsp+0x98],ebp
   140005161:	mov    r13,rbp
   140005164:	mov    QWORD PTR [rsp+0x130],rbp
   14000516c:	cmp    r12d,ebp
   14000516f:	jle    0x140006777
   140005175:	mov    r12,QWORD PTR [rsp+0xf0]
   14000517d:	nop    DWORD PTR [rax]
   140005180:	lea    rdx,[rip+0x17e8d]        # 0x14001d014
   140005187:	mov    rcx,QWORD PTR [r15+r13*8]
   14000518b:	call   QWORD PTR [rip+0x16407]        # 0x14001b598
   140005191:	test   eax,eax
   140005193:	je     0x14000653c
   140005199:	lea    rdx,[rip+0x17e68]        # 0x14001d008
   1400051a0:	mov    rcx,QWORD PTR [r15+r13*8]
   1400051a4:	call   QWORD PTR [rip+0x163ee]        # 0x14001b598
   1400051aa:	test   eax,eax
   1400051ac:	jne    0x1400051b8
   1400051ae:	mov    BYTE PTR [rsp+0x40],0x1
   1400051b3:	jmp    0x140005f6e
   1400051b8:	lea    rdx,[rip+0x17e39]        # 0x14001cff8
   1400051bf:	mov    rcx,QWORD PTR [r15+r13*8]
   1400051c3:	call   QWORD PTR [rip+0x163cf]        # 0x14001b598
   1400051c9:	test   eax,eax
   1400051cb:	jne    0x1400051d7
   1400051cd:	mov    BYTE PTR [rsp+0x42],0x1
   1400051d2:	jmp    0x140005f6e
   1400051d7:	lea    rdx,[rip+0x17e0a]        # 0x14001cfe8
   1400051de:	mov    rcx,QWORD PTR [r15+r13*8]
   1400051e2:	call   QWORD PTR [rip+0x163b0]        # 0x14001b598
   1400051e8:	test   eax,eax
   1400051ea:	je     0x1400063a9
   1400051f0:	lea    rdx,[rip+0x17e25]        # 0x14001d01c
   1400051f7:	mov    rcx,QWORD PTR [r15+r13*8]
   1400051fb:	call   QWORD PTR [rip+0x16397]        # 0x14001b598
   140005201:	test   eax,eax
   140005203:	jne    0x140005210
   140005205:	mov    bl,0x1
   140005207:	mov    BYTE PTR [rsp+0x50],bl
   14000520b:	jmp    0x140005f6e
   140005210:	lea    rdx,[rip+0x17dc1]        # 0x14001cfd8
   140005217:	mov    rcx,QWORD PTR [r15+r13*8]
   14000521b:	call   QWORD PTR [rip+0x16377]        # 0x14001b598
   140005221:	test   eax,eax
   140005223:	jne    0x14000523f
   140005225:	inc    ebp
   140005227:	inc    r13
   14000522a:	mov    rax,QWORD PTR [r15+r13*8]
   14000522e:	test   rax,rax
   140005231:	je     0x140005f95
   140005237:	mov    r12,rax
   14000523a:	jmp    0x140005f6e
   14000523f:	lea    rdx,[rip+0x17d7a]        # 0x14001cfc0
   140005246:	mov    rcx,QWORD PTR [r15+r13*8]
   14000524a:	call   QWORD PTR [rip+0x16348]        # 0x14001b598
   140005250:	test   eax,eax
   140005252:	jne    0x140005273
   140005254:	inc    ebp
   140005256:	inc    r13
   140005259:	mov    rax,QWORD PTR [r15+r13*8]
   14000525d:	mov    QWORD PTR [rsp+0xe0],rax
   140005265:	test   rax,rax
   140005268:	je     0x14000611f
   14000526e:	jmp    0x140005f6e
   140005273:	inc    DWORD PTR [rsp+0x88]
   14000527a:	lea    rcx,[rsp+0xd0]
   140005282:	call   QWORD PTR [rip+0x16388]        # 0x14001b610
   140005288:	nop
   140005289:	movzx  ebx,BYTE PTR [rsp+0x50]
   14000528e:	test   bl,bl
   140005290:	jne    0x14000538a
   140005296:	mov    r8,QWORD PTR [r15+r13*8]
   14000529a:	test   r8,r8
   14000529d:	je     0x1400052b1
   14000529f:	xor    eax,eax
   1400052a1:	mov    rcx,r14
   1400052a4:	mov    rdi,r8
   1400052a7:	repnz scas al,BYTE PTR es:[rdi]
   1400052a9:	not    rcx
   1400052ac:	dec    rcx
   1400052af:	jmp    0x1400052b4
   1400052b1:	mov    ecx,r14d
   1400052b4:	mov    edx,ecx
   1400052b6:	mov    rcx,r8
   1400052b9:	call   QWORD PTR [rip+0x16359]        # 0x14001b618
   1400052bf:	mov    QWORD PTR [rsp+0x160],rax
   1400052c7:	lea    rdx,[rsp+0x160]
   1400052cf:	lea    rcx,[rsp+0x170]
   1400052d7:	call   QWORD PTR [rip+0x15fab]        # 0x14001b288
   1400052dd:	nop
   1400052de:	lea    rcx,[rsp+0x160]
   1400052e6:	call   QWORD PTR [rip+0x1633c]        # 0x14001b628
   1400052ec:	mov    DWORD PTR [rsp+0x1b8],0x1
   1400052f7:	mov    edx,0x1
   1400052fc:	lea    rcx,[rsp+0x170]
   140005304:	call   QWORD PTR [rip+0x15f76]        # 0x14001b280
   14000530a:	test   al,al
   14000530c:	je     0x14000623a
   140005312:	lea    rdx,[rsp+0x170]
   14000531a:	lea    rcx,[rsp+0x238]
   140005322:	call   QWORD PTR [rip+0x160d0]        # 0x14001b3f8
   140005328:	nop
   140005329:	lea    rdx,[rsp+0x1f0]
   140005331:	lea    rcx,[rsp+0x238]
   140005339:	call   QWORD PTR [rip+0x160b1]        # 0x14001b3f0
   14000533f:	mov    rdx,rax
   140005342:	lea    rcx,[rsp+0xd0]
   14000534a:	call   QWORD PTR [rip+0x15f88]        # 0x14001b2d8
   140005350:	lea    rcx,[rsp+0x1f0]
   140005358:	call   QWORD PTR [rip+0x162ca]        # 0x14001b628
   14000535e:	lea    rcx,[rsp+0x170]
   140005366:	call   QWORD PTR [rip+0x15f04]        # 0x14001b270
   14000536c:	nop
   14000536d:	lea    rcx,[rsp+0x238]
   140005375:	call   QWORD PTR [rip+0x1606d]        # 0x14001b3e8
   14000537b:	nop
   14000537c:	lea    rcx,[rsp+0x170]
   140005384:	call   QWORD PTR [rip+0x15eee]        # 0x14001b278
   14000538a:	lea    rcx,[rsp+0x120]
   140005392:	call   QWORD PTR [rip+0x162b0]        # 0x14001b648
   140005398:	nop
   140005399:	mov    r8,QWORD PTR [r15+r13*8]
   14000539d:	test   r8,r8
   1400053a0:	je     0x1400053b4
   1400053a2:	xor    eax,eax
   1400053a4:	mov    rcx,r14
   1400053a7:	mov    rdi,r8
   1400053aa:	repnz scas al,BYTE PTR es:[rdi]
   1400053ac:	not    rcx
   1400053af:	dec    rcx
   1400053b2:	jmp    0x1400053b7
   1400053b4:	mov    ecx,r14d
   1400053b7:	mov    edx,ecx
   1400053b9:	mov    rcx,r8
   1400053bc:	call   QWORD PTR [rip+0x16256]        # 0x14001b618
   1400053c2:	mov    QWORD PTR [rsp+0x158],rax
   1400053ca:	lea    rdx,[rsp+0x158]
   1400053d2:	lea    rcx,[rsp+0x220]
   1400053da:	call   QWORD PTR [rip+0x15ff8]        # 0x14001b3d8
   1400053e0:	nop
   1400053e1:	lea    rdx,[rsp+0x228]
   1400053e9:	mov    rcx,rax
   1400053ec:	call   QWORD PTR [rip+0x15fde]        # 0x14001b3d0
   1400053f2:	nop
   1400053f3:	mov    rcx,rax
   1400053f6:	call   QWORD PTR [rip+0x15fcc]        # 0x14001b3c8
   1400053fc:	nop
   1400053fd:	lea    rcx,[rsp+0x228]
   140005405:	call   QWORD PTR [rip+0x1621d]        # 0x14001b628
   14000540b:	nop
   14000540c:	lea    rcx,[rsp+0x220]
   140005414:	call   QWORD PTR [rip+0x15fa6]        # 0x14001b3c0
   14000541a:	nop
   14000541b:	lea    rcx,[rsp+0x158]
   140005423:	call   QWORD PTR [rip+0x161ff]        # 0x14001b628
   140005429:	cmp    BYTE PTR [rsp+0x8c],0x0
   140005431:	je     0x140005af5
   140005437:	lea    rcx,[rsp+0x250]
   14000543f:	call   0x14000b550
   140005444:	nop
   140005445:	mov    rdx,rax
   140005448:	lea    rcx,[rsp+0xa0]
   140005450:	call   0x14000a9b0
   140005455:	nop
   140005456:	lea    rcx,[rsp+0x250]
   14000545e:	call   0x140004b70
   140005463:	lea    rcx,[rsp+0x70]
   140005468:	call   QWORD PTR [rip+0x15f4a]        # 0x14001b3b8
   14000546e:	lea    rcx,[rsp+0x80]
   140005476:	call   QWORD PTR [rip+0x15f3c]        # 0x14001b3b8
   14000547c:	lea    rcx,[rsp+0x48]
   140005481:	call   0x1400046a0
   140005486:	lea    rcx,[rsp+0x58]
   14000548b:	call   0x1400046a0
   140005490:	lea    rdx,[rsp+0xd0]
   140005498:	lea    rcx,[rsp+0x60]
   14000549d:	call   0x1400102e0
   1400054a2:	nop
   1400054a3:	mov    rax,QWORD PTR [rsp+0x60]
   1400054a8:	mov    ecx,DWORD PTR [rax]
   1400054aa:	cmp    ecx,0x1
   1400054ad:	je     0x140005525
   1400054af:	test   ecx,ecx
   1400054b1:	je     0x140005525
   1400054b3:	call   QWORD PTR [rip+0x160e7]        # 0x14001b5a0
   1400054b9:	mov    rdi,rax
   1400054bc:	mov    rcx,QWORD PTR [rsp+0x60]
   1400054c1:	mov    rax,QWORD PTR [rcx+0x10]
   1400054c5:	test   rax,rax
   1400054c8:	je     0x1400054ec
   1400054ca:	mov    rdx,rdi
   1400054cd:	mov    rcx,rax
   1400054d0:	call   0x1400043e0
   1400054d5:	mov    rdx,rax
   1400054d8:	mov    QWORD PTR [rdi+0x10],rax
   1400054dc:	and    QWORD PTR [rax],0x3
   1400054e0:	lea    rax,[rdi+0x8]
   1400054e4:	or     QWORD PTR [rdx],rax
   1400054e7:	mov    rcx,QWORD PTR [rsp+0x60]
   1400054ec:	mov    eax,DWORD PTR [rcx]
   1400054ee:	test   eax,eax
   1400054f0:	je     0x14000550d
   1400054f2:	cmp    eax,0xffffffff
   1400054f5:	je     0x140005512
   1400054f7:	mov    eax,r14d
   1400054fa:	lock xadd DWORD PTR [rcx],eax
   1400054fe:	add    eax,0xffffffff
   140005501:	setne  al
   140005504:	test   al,al
   140005506:	jne    0x140005512
   140005508:	mov    rcx,QWORD PTR [rsp+0x60]
   14000550d:	call   0x1400044e0
   140005512:	mov    QWORD PTR [rsp+0x60],rdi
   140005517:	mov    rcx,rdi
   14000551a:	call   QWORD PTR [rip+0x15d90]        # 0x14001b2b0
   140005520:	mov    rax,QWORD PTR [rsp+0x60]
   140005525:	cmp    QWORD PTR [rax+0x10],0x0
   14000552a:	je     0x140005532
   14000552c:	mov    rbx,QWORD PTR [rax+0x20]
   140005530:	jmp    0x140005536
   140005532:	lea    rbx,[rax+0x8]
   140005536:	movzx  r15d,BYTE PTR [rsp+0x41]
   14000553c:	mov    r13d,0x20
   140005542:	mov    ecx,DWORD PTR [rax]
   140005544:	cmp    ecx,0x1
   140005547:	je     0x1400055bf
   140005549:	test   ecx,ecx
   14000554b:	je     0x1400055bf
   14000554d:	call   QWORD PTR [rip+0x1604d]        # 0x14001b5a0
   140005553:	mov    rdi,rax
   140005556:	mov    rcx,QWORD PTR [rsp+0x60]
   14000555b:	mov    rax,QWORD PTR [rcx+0x10]
   14000555f:	test   rax,rax
   140005562:	je     0x140005586
   140005564:	mov    rdx,rdi
   140005567:	mov    rcx,rax
   14000556a:	call   0x1400043e0
   14000556f:	mov    rdx,rax
   140005572:	mov    QWORD PTR [rdi+0x10],rax
   140005576:	and    QWORD PTR [rax],0x3
   14000557a:	lea    rax,[rdi+0x8]
   14000557e:	or     QWORD PTR [rdx],rax
   140005581:	mov    rcx,QWORD PTR [rsp+0x60]
   140005586:	mov    eax,DWORD PTR [rcx]
   140005588:	test   eax,eax
   14000558a:	je     0x1400055a7
   14000558c:	cmp    eax,0xffffffff
   14000558f:	je     0x1400055ac
   140005591:	mov    eax,r14d
   140005594:	lock xadd DWORD PTR [rcx],eax
   140005598:	add    eax,0xffffffff
   14000559b:	setne  al
   14000559e:	test   al,al
   1400055a0:	jne    0x1400055ac
   1400055a2:	mov    rcx,QWORD PTR [rsp+0x60]
   1400055a7:	call   0x1400044e0
   1400055ac:	mov    QWORD PTR [rsp+0x60],rdi
   1400055b1:	mov    rcx,rdi
   1400055b4:	call   QWORD PTR [rip+0x15cf6]        # 0x14001b2b0
   1400055ba:	mov    rax,QWORD PTR [rsp+0x60]
   1400055bf:	add    rax,0x8
   1400055c3:	cmp    rbx,rax
   1400055c6:	je     0x140005a01
   1400055cc:	mov    WORD PTR [rsp+0xe8],r13w
   1400055d5:	lea    rcx,[rbx+0x20]
   1400055d9:	mov    DWORD PTR [rsp+0x20],0x1
   1400055e1:	xor    r9d,r9d
   1400055e4:	movzx  r8d,r13w
   1400055e8:	lea    rdx,[rsp+0x90]
   1400055f0:	call   QWORD PTR [rip+0x15dba]        # 0x14001b3b0
   1400055f6:	nop
   1400055f7:	mov    rsi,QWORD PTR [rsp+0x90]
   1400055ff:	mov    eax,DWORD PTR [rsi]
   140005601:	cmp    eax,0x1
   140005604:	je     0x140005622
   140005606:	test   eax,eax
   140005608:	je     0x140005622
   14000560a:	mov    edx,DWORD PTR [rsi+0x4]
   14000560d:	lea    rcx,[rsp+0x90]
   140005615:	call   0x1400048c0
   14000561a:	mov    rsi,QWORD PTR [rsp+0x90]
   140005622:	movsxd rax,DWORD PTR [rsi+0x8]
   140005626:	lea    rdi,[rsi+rax*8+0x10]
   14000562b:	mov    r14,QWORD PTR [rsp+0xe0]
   140005633:	mov    eax,DWORD PTR [rsi]
   140005635:	cmp    eax,0x1
   140005638:	je     0x140005656
   14000563a:	test   eax,eax
   14000563c:	je     0x140005656
   14000563e:	mov    edx,DWORD PTR [rsi+0x4]
   140005641:	lea    rcx,[rsp+0x90]
   140005649:	call   0x1400048c0
   14000564e:	mov    rsi,QWORD PTR [rsp+0x90]
   140005656:	movsxd rax,DWORD PTR [rsi+0xc]
   14000565a:	lea    rax,[rsi+rax*8+0x10]
   14000565f:	cmp    rdi,rax
   140005662:	je     0x140005989
   140005668:	lea    rdx,[rip+0x17949]        # 0x14001cfb8
   14000566f:	lea    rcx,[rbx+0x18]
   140005673:	call   QWORD PTR [rip+0x15d2f]        # 0x14001b3a8
   140005679:	test   al,al
   14000567b:	je     0x140005758
   140005681:	lea    rcx,[rsp+0x200]
   140005689:	call   QWORD PTR [rip+0x15d11]        # 0x14001b3a0
   14000568f:	nop
   140005690:	mov    r8,rdi
   140005693:	lea    rdx,[rsp+0x150]
   14000569b:	mov    rcx,rax
   14000569e:	call   QWORD PTR [rip+0x15cf4]        # 0x14001b398
   1400056a4:	nop
   1400056a5:	lea    rcx,[rsp+0x200]
   1400056ad:	call   QWORD PTR [rip+0x15c9d]        # 0x14001b350
   1400056b3:	lea    rdx,[rsp+0x1f8]
   1400056bb:	lea    rcx,[rsp+0x78]
   1400056c0:	call   QWORD PTR [rip+0x15f22]        # 0x14001b5e8
   1400056c6:	mov    rbp,rax
   1400056c9:	lea    rdx,[rsp+0x198]
   1400056d1:	lea    rcx,[rsp+0x150]
   1400056d9:	call   QWORD PTR [rip+0x15f09]        # 0x14001b5e8
   1400056df:	mov    rsi,rax
   1400056e2:	mov    rcx,rbp
   1400056e5:	call   QWORD PTR [rip+0x15b55]        # 0x14001b240
   1400056eb:	mov    rbp,rax
   1400056ee:	mov    rcx,rsi
   1400056f1:	call   QWORD PTR [rip+0x15b49]        # 0x14001b240
   1400056f7:	mov    rcx,rax
   1400056fa:	mov    QWORD PTR [rsp+0x30],r14
   1400056ff:	mov    QWORD PTR [rsp+0x28],r12
   140005704:	lea    rax,[rsp+0x80]
   14000570c:	mov    QWORD PTR [rsp+0x20],rax
   140005711:	mov    r9b,0x1
   140005714:	mov    r8,rbp
   140005717:	lea    rdx,[rsp+0xa0]
   14000571f:	call   0x1400041e0
   140005724:	nop
   140005725:	lea    rcx,[rsp+0x198]
   14000572d:	call   QWORD PTR [rip+0x15eed]        # 0x14001b620
   140005733:	nop
   140005734:	lea    rcx,[rsp+0x1f8]
   14000573c:	call   QWORD PTR [rip+0x15ede]        # 0x14001b620
   140005742:	mov    r15b,0x1
   140005745:	lea    rcx,[rsp+0x150]
   14000574d:	call   QWORD PTR [rip+0x15ed5]        # 0x14001b628
   140005753:	jmp    0x140005978
   140005758:	lea    rdx,[rip+0x17849]        # 0x14001cfa8
   14000575f:	lea    rcx,[rbx+0x18]
   140005763:	call   QWORD PTR [rip+0x15c3f]        # 0x14001b3a8
   140005769:	test   al,al
   14000576b:	je     0x1400057c7
   14000576d:	lea    rcx,[rsp+0x1a8]
   140005775:	call   QWORD PTR [rip+0x15c25]        # 0x14001b3a0
   14000577b:	nop
   14000577c:	mov    r8,rdi
   14000577f:	lea    rdx,[rsp+0x118]
   140005787:	mov    rcx,rax
   14000578a:	call   QWORD PTR [rip+0x15c08]        # 0x14001b398
   140005790:	nop
   140005791:	lea    rcx,[rsp+0x1a8]
   140005799:	call   QWORD PTR [rip+0x15bb1]        # 0x14001b350
   14000579f:	lea    rdx,[rsp+0x118]
   1400057a7:	lea    rcx,[rsp+0x48]
   1400057ac:	call   0x1400049b0
   1400057b1:	mov    r15b,0x1
   1400057b4:	lea    rcx,[rsp+0x118]
   1400057bc:	call   QWORD PTR [rip+0x15e66]        # 0x14001b628
   1400057c2:	jmp    0x140005978
   1400057c7:	lea    rdx,[rip+0x177d2]        # 0x14001cfa0
   1400057ce:	lea    rcx,[rbx+0x18]
   1400057d2:	call   QWORD PTR [rip+0x15bd0]        # 0x14001b3a8
   1400057d8:	test   al,al
   1400057da:	jne    0x140005930
   1400057e0:	lea    rdx,[rip+0x177a9]        # 0x14001cf90
   1400057e7:	lea    rcx,[rbx+0x18]
   1400057eb:	call   QWORD PTR [rip+0x15bb7]        # 0x14001b3a8
   1400057f1:	test   al,al
   1400057f3:	jne    0x140005930
   1400057f9:	lea    rdx,[rip+0x17780]        # 0x14001cf80
   140005800:	lea    rcx,[rbx+0x18]
   140005804:	call   QWORD PTR [rip+0x15b9e]        # 0x14001b3a8
   14000580a:	test   al,al
   14000580c:	jne    0x140005930
   140005812:	lea    rdx,[rip+0x17757]        # 0x14001cf70
   140005819:	lea    rcx,[rbx+0x18]
   14000581d:	call   QWORD PTR [rip+0x15b85]        # 0x14001b3a8
   140005823:	test   al,al
   140005825:	je     0x14000585c
   140005827:	lea    rdx,[rsp+0x208]
   14000582f:	mov    rcx,rdi
   140005832:	call   QWORD PTR [rip+0x15db0]        # 0x14001b5e8
   140005838:	mov    rdx,rax
   14000583b:	lea    rcx,[rsp+0x80]
   140005843:	call   QWORD PTR [rip+0x15d47]        # 0x14001b590
   140005849:	lea    rcx,[rsp+0x208]
   140005851:	call   QWORD PTR [rip+0x15dc9]        # 0x14001b620
   140005857:	jmp    0x140005978
   14000585c:	lea    rdx,[rip+0x17701]        # 0x14001cf64
   140005863:	lea    rcx,[rbx+0x18]
   140005867:	call   QWORD PTR [rip+0x15b3b]        # 0x14001b3a8
   14000586d:	test   al,al
   14000586f:	je     0x140005978
   140005875:	lea    rcx,[rsp+0x180]
   14000587d:	call   QWORD PTR [rip+0x15b1d]        # 0x14001b3a0
   140005883:	nop
   140005884:	mov    r8,rdi
   140005887:	lea    rdx,[rsp+0x148]
   14000588f:	mov    rcx,rax
   140005892:	call   QWORD PTR [rip+0x15b00]        # 0x14001b398
   140005898:	nop
   140005899:	lea    rcx,[rsp+0x180]
   1400058a1:	call   QWORD PTR [rip+0x15aa9]        # 0x14001b350
   1400058a7:	lea    rdx,[rsp+0x1c8]
   1400058af:	lea    rcx,[rsp+0x78]
   1400058b4:	call   QWORD PTR [rip+0x15d2e]        # 0x14001b5e8
   1400058ba:	mov    rsi,rax
   1400058bd:	lea    rdx,[rsp+0x218]
   1400058c5:	lea    rcx,[rsp+0x148]
   1400058cd:	call   QWORD PTR [rip+0x15d15]        # 0x14001b5e8
   1400058d3:	mov    rbp,rax
   1400058d6:	mov    rcx,rsi
   1400058d9:	call   QWORD PTR [rip+0x15961]        # 0x14001b240
   1400058df:	mov    rsi,rax
   1400058e2:	mov    rcx,rbp
   1400058e5:	call   QWORD PTR [rip+0x15955]        # 0x14001b240
   1400058eb:	mov    rcx,rax
   1400058ee:	mov    r9b,0x1
   1400058f1:	mov    r8,rsi
   1400058f4:	lea    rdx,[rsp+0xa0]
   1400058fc:	call   0x140002400
   140005901:	nop
   140005902:	lea    rcx,[rsp+0x218]
   14000590a:	call   QWORD PTR [rip+0x15d10]        # 0x14001b620
   140005910:	nop
   140005911:	lea    rcx,[rsp+0x1c8]
   140005919:	call   QWORD PTR [rip+0x15d01]        # 0x14001b620
   14000591f:	nop
   140005920:	lea    rcx,[rsp+0x148]
   140005928:	call   QWORD PTR [rip+0x15cfa]        # 0x14001b628
   14000592e:	jmp    0x140005978
   140005930:	lea    rdx,[rsp+0x210]
   140005938:	mov    rcx,rdi
   14000593b:	call   QWORD PTR [rip+0x15ca7]        # 0x14001b5e8
   140005941:	mov    rdx,rax
   140005944:	lea    rcx,[rsp+0x70]
   140005949:	call   QWORD PTR [rip+0x15c41]        # 0x14001b590
   14000594f:	lea    rcx,[rsp+0x210]
   140005957:	call   QWORD PTR [rip+0x15cc3]        # 0x14001b620
   14000595d:	lea    rcx,[rsp+0x70]
   140005962:	call   QWORD PTR [rip+0x158d8]        # 0x14001b240
   140005968:	mov    rdx,rax
   14000596b:	lea    rcx,[rsp+0xa0]
   140005973:	call   0x140008b80
   140005978:	add    rdi,0x8
   14000597c:	mov    rsi,QWORD PTR [rsp+0x90]
   140005984:	jmp    0x140005633
   140005989:	mov    BYTE PTR [rsp+0x41],r15b
   14000598e:	mov    eax,DWORD PTR [rsi]
   140005990:	test   eax,eax
   140005992:	mov    r14,0xffffffffffffffff
   140005999:	je     0x1400059b9
   14000599b:	cmp    eax,r14d
   14000599e:	je     0x1400059eb
   1400059a0:	mov    eax,r14d
   1400059a3:	lock xadd DWORD PTR [rsi],eax
   1400059a7:	add    eax,r14d
   1400059aa:	setne  al
   1400059ad:	test   al,al
   1400059af:	jne    0x1400059eb
   1400059b1:	mov    rsi,QWORD PTR [rsp+0x90]
   1400059b9:	movsxd rax,DWORD PTR [rsi+0xc]
   1400059bd:	lea    rdi,[rsi+rax*8+0x10]
   1400059c2:	movsxd rax,DWORD PTR [rsi+0x8]
   1400059c6:	lea    rbp,[rsi+rax*8+0x10]
   1400059cb:	cmp    rbp,rdi
   1400059ce:	je     0x1400059e2
   1400059d0:	sub    rdi,0x8
   1400059d4:	mov    rcx,rdi
   1400059d7:	call   QWORD PTR [rip+0x15c4b]        # 0x14001b628
   1400059dd:	cmp    rdi,rbp
   1400059e0:	jne    0x1400059d0
   1400059e2:	mov    rcx,rsi
   1400059e5:	call   QWORD PTR [rip+0x158a5]        # 0x14001b290
   1400059eb:	mov    rcx,rbx
   1400059ee:	call   QWORD PTR [rip+0x15934]        # 0x14001b328
   1400059f4:	mov    rbx,rax
   1400059f7:	mov    rax,QWORD PTR [rsp+0x60]
   1400059fc:	jmp    0x140005542
   140005a01:	lea    rdx,[rsp+0x70]
   140005a06:	lea    rcx,[rsp+0x128]
   140005a0e:	call   QWORD PTR [rip+0x158bc]        # 0x14001b2d0
   140005a14:	nop
   140005a15:	movzx  eax,BYTE PTR [rsp+0x42]
   140005a1a:	mov    BYTE PTR [rsp+0x20],al
   140005a1e:	movzx  r9d,BYTE PTR [rsp+0x40]
   140005a24:	lea    r8,[rsp+0x128]
   140005a2c:	lea    rdx,[rsp+0x48]
   140005a31:	lea    rcx,[rsp+0xa0]
   140005a39:	call   0x140004c00
   140005a3e:	nop
   140005a3f:	lea    rcx,[rsp+0x128]
   140005a47:	call   QWORD PTR [rip+0x15bdb]        # 0x14001b628
   140005a4d:	test   r15b,r15b
   140005a50:	mov    r13,QWORD PTR [rsp+0x130]
   140005a58:	mov    r15,QWORD PTR [rsp+0x1d8]
   140005a60:	jne    0x140005a7f
   140005a62:	call   QWORD PTR [rip+0x15780]        # 0x14001b1e8
   140005a68:	mov    r8,QWORD PTR [r15+r13*8]
   140005a6c:	lea    rdx,[rip+0x174ad]        # 0x14001cf20
   140005a73:	lea    rcx,[rax+0x60]
   140005a77:	call   QWORD PTR [rip+0x15773]        # 0x14001b1f0
   140005a7d:	jmp    0x140005aa8
   140005a7f:	mov    rax,QWORD PTR [rsp+0x48]
   140005a84:	mov    ecx,DWORD PTR [rax+0x8]
   140005a87:	cmp    DWORD PTR [rax+0xc],ecx
   140005a8a:	jne    0x140005aa8
   140005a8c:	call   QWORD PTR [rip+0x15756]        # 0x14001b1e8
   140005a92:	mov    r8,QWORD PTR [r15+r13*8]
   140005a96:	lea    rdx,[rip+0x17433]        # 0x14001ced0
   140005a9d:	lea    rcx,[rax+0x60]
   140005aa1:	call   QWORD PTR [rip+0x15749]        # 0x14001b1f0
   140005aa7:	nop
   140005aa8:	mov    rcx,QWORD PTR [rsp+0x60]
   140005aad:	mov    eax,DWORD PTR [rcx]
   140005aaf:	test   eax,eax
   140005ab1:	je     0x140005ae0
   140005ab3:	cmp    eax,0xffffffff
   140005ab6:	je     0x140005ad0
   140005ab8:	mov    eax,r14d
   140005abb:	lock xadd DWORD PTR [rcx],eax
   140005abf:	add    eax,0xffffffff
   140005ac2:	setne  al
   140005ac5:	test   al,al
   140005ac7:	jne    0x140005ad0
   140005ac9:	mov    rcx,QWORD PTR [rsp+0x60]
   140005ace:	jmp    0x140005ae0
   140005ad0:	mov    esi,DWORD PTR [rsp+0x68]
   140005ad4:	mov    ebp,DWORD PTR [rsp+0x98]
   140005adb:	jmp    0x140005f42
   140005ae0:	call   0x1400044e0
   140005ae5:	mov    esi,DWORD PTR [rsp+0x68]
   140005ae9:	mov    ebp,DWORD PTR [rsp+0x98]
   140005af0:	jmp    0x140005f42
   140005af5:	test   bl,bl
   140005af7:	je     0x140005cdb
   140005afd:	xor    eax,eax
   140005aff:	mov    rcx,r14
   140005b02:	lea    rdi,[rip+0x173c3]        # 0x14001cecc
   140005b09:	repnz scas al,BYTE PTR es:[rdi]
   140005b0b:	not    rcx
   140005b0e:	lea    rdx,[rcx-0x1]
   140005b12:	lea    rcx,[rip+0x173b3]        # 0x14001cecc
   140005b19:	call   QWORD PTR [rip+0x15af9]        # 0x14001b618
   140005b1f:	mov    QWORD PTR [rsp+0x138],rax
   140005b27:	mov    r8,QWORD PTR [r15+r13*8]
   140005b2b:	test   r8,r8
   140005b2e:	je     0x140005b42
   140005b30:	xor    eax,eax
   140005b32:	mov    rcx,r14
   140005b35:	mov    rdi,r8
   140005b38:	repnz scas al,BYTE PTR es:[rdi]
   140005b3a:	not    rcx
   140005b3d:	dec    rcx
   140005b40:	jmp    0x140005b45
   140005b42:	mov    ecx,r14d
   140005b45:	mov    edx,ecx
   140005b47:	mov    rcx,r8
   140005b4a:	call   QWORD PTR [rip+0x15ac8]        # 0x14001b618
   140005b50:	mov    QWORD PTR [rsp+0x168],rax
   140005b58:	lea    rdx,[rsp+0x230]
   140005b60:	lea    rcx,[rsp+0x168]
   140005b68:	call   QWORD PTR [rip+0x15822]        # 0x14001b390
   140005b6e:	nop
   140005b6f:	mov    r8d,0x1
   140005b75:	lea    rdx,[rsp+0x138]
   140005b7d:	mov    rcx,rax
   140005b80:	call   QWORD PTR [rip+0x15802]        # 0x14001b388
   140005b86:	movzx  edi,al
   140005b89:	lea    rcx,[rsp+0x230]
   140005b91:	call   QWORD PTR [rip+0x15a91]        # 0x14001b628
   140005b97:	nop
   140005b98:	lea    rcx,[rsp+0x168]
   140005ba0:	call   QWORD PTR [rip+0x15a82]        # 0x14001b628
   140005ba6:	nop
   140005ba7:	lea    rcx,[rsp+0x138]
   140005baf:	call   QWORD PTR [rip+0x15a73]        # 0x14001b628
   140005bb5:	test   dil,dil
   140005bb8:	je     0x140005cbb
   140005bbe:	mov    r8,QWORD PTR [r15+r13*8]
   140005bc2:	test   r8,r8
   140005bc5:	je     0x140005bd9
   140005bc7:	xor    eax,eax
   140005bc9:	mov    rcx,r14
   140005bcc:	mov    rdi,r8
   140005bcf:	repnz scas al,BYTE PTR es:[rdi]
   140005bd1:	not    rcx
   140005bd4:	dec    rcx
   140005bd7:	jmp    0x140005bdc
   140005bd9:	mov    ecx,r14d
   140005bdc:	mov    edx,ecx
   140005bde:	mov    rcx,r8
   140005be1:	call   QWORD PTR [rip+0x15a31]        # 0x14001b618
   140005be7:	mov    QWORD PTR [rsp+0x108],rax
   140005bef:	lea    rdx,[rsp+0x108]
   140005bf7:	lea    rcx,[rsp+0xd8]
   140005bff:	call   QWORD PTR [rip+0x157d3]        # 0x14001b3d8
   140005c05:	nop
   140005c06:	lea    rcx,[rsp+0x108]
   140005c0e:	call   QWORD PTR [rip+0x15a14]        # 0x14001b628
   140005c14:	lea    rcx,[rsp+0xd8]
   140005c1c:	call   QWORD PTR [rip+0x1575e]        # 0x14001b380
   140005c22:	test   al,al
   140005c24:	je     0x140005c55
   140005c26:	lea    rcx,[rsp+0xd8]
   140005c2e:	call   QWORD PTR [rip+0x15744]        # 0x14001b378
   140005c34:	test   al,al
   140005c36:	jne    0x140005c55
   140005c38:	call   QWORD PTR [rip+0x155aa]        # 0x14001b1e8
   140005c3e:	mov    r8,QWORD PTR [r15+r13*8]
   140005c42:	lea    rdx,[rip+0x17247]        # 0x14001ce90
   140005c49:	lea    rcx,[rax+0x60]
   140005c4d:	call   QWORD PTR [rip+0x1559d]        # 0x14001b1f0
   140005c53:	jmp    0x140005ca8
   140005c55:	mov    r8,QWORD PTR [r15+r13*8]
   140005c59:	test   r8,r8
   140005c5c:	je     0x140005c70
   140005c5e:	xor    eax,eax
   140005c60:	mov    rcx,r14
   140005c63:	mov    rdi,r8
   140005c66:	repnz scas al,BYTE PTR es:[rdi]
   140005c68:	not    rcx
   140005c6b:	dec    rcx
   140005c6e:	jmp    0x140005c73
   140005c70:	mov    ecx,r14d
   140005c73:	mov    edx,ecx
   140005c75:	mov    rcx,r8
   140005c78:	call   QWORD PTR [rip+0x1599a]        # 0x14001b618
   140005c7e:	mov    QWORD PTR [rsp+0x110],rax
   140005c86:	lea    rdx,[rsp+0x110]
   140005c8e:	lea    rcx,[rsp+0x48]
   140005c93:	call   0x1400049b0
   140005c98:	nop
   140005c99:	lea    rcx,[rsp+0x110]
   140005ca1:	call   QWORD PTR [rip+0x15981]        # 0x14001b628
   140005ca7:	nop
   140005ca8:	lea    rcx,[rsp+0xd8]
   140005cb0:	call   QWORD PTR [rip+0x1570a]        # 0x14001b3c0
   140005cb6:	jmp    0x140005f42
   140005cbb:	call   QWORD PTR [rip+0x15527]        # 0x14001b1e8
   140005cc1:	mov    r8,QWORD PTR [r15+r13*8]
   140005cc5:	lea    rdx,[rip+0x1718c]        # 0x14001ce58
   140005ccc:	lea    rcx,[rax+0x60]
   140005cd0:	call   QWORD PTR [rip+0x1551a]        # 0x14001b1f0
   140005cd6:	jmp    0x140005f42
   140005cdb:	mov    r8,QWORD PTR [r15+r13*8]
   140005cdf:	test   r8,r8
   140005ce2:	je     0x140005cf6
   140005ce4:	xor    eax,eax
   140005ce6:	mov    rcx,r14
   140005ce9:	mov    rdi,r8
   140005cec:	repnz scas al,BYTE PTR es:[rdi]
   140005cee:	not    rcx
   140005cf1:	dec    rcx
   140005cf4:	jmp    0x140005cf9
   140005cf6:	mov    ecx,r14d
   140005cf9:	mov    edx,ecx
   140005cfb:	mov    rcx,r8
   140005cfe:	call   QWORD PTR [rip+0x15914]        # 0x14001b618
   140005d04:	mov    QWORD PTR [rsp+0x100],rax
   140005d0c:	lea    rdx,[rsp+0x100]
   140005d14:	lea    rcx,[rsp+0xc8]
   140005d1c:	call   QWORD PTR [rip+0x156b6]        # 0x14001b3d8
   140005d22:	nop
   140005d23:	lea    rcx,[rsp+0x100]
   140005d2b:	call   QWORD PTR [rip+0x158f7]        # 0x14001b628
   140005d31:	lea    rdx,[rsp+0x188]
   140005d39:	lea    rcx,[rsp+0xc8]
   140005d41:	call   QWORD PTR [rip+0x15629]        # 0x14001b370
   140005d47:	nop
   140005d48:	or     esi,0x1
   140005d4b:	mov    DWORD PTR [rsp+0x68],esi
   140005d4f:	lea    rdx,[rip+0x170fe]        # 0x14001ce54
   140005d56:	mov    rcx,rax
   140005d59:	call   QWORD PTR [rip+0x15649]        # 0x14001b3a8
   140005d5f:	test   al,al
   140005d61:	jne    0x140005d9a
   140005d63:	lea    rdx,[rsp+0x1e8]
   140005d6b:	lea    rcx,[rsp+0xc8]
   140005d73:	call   QWORD PTR [rip+0x155f7]        # 0x14001b370
   140005d79:	nop
   140005d7a:	or     esi,0x2
   140005d7d:	mov    DWORD PTR [rsp+0x68],esi
   140005d81:	lea    rdx,[rip+0x170c8]        # 0x14001ce50
   140005d88:	mov    rcx,rax
   140005d8b:	call   QWORD PTR [rip+0x15617]        # 0x14001b3a8
   140005d91:	test   al,al
   140005d93:	jne    0x140005d9a
   140005d95:	xor    dil,dil
   140005d98:	jmp    0x140005d9d
   140005d9a:	mov    dil,0x1
   140005d9d:	test   sil,0x2
   140005da1:	je     0x140005db9
   140005da3:	and    esi,0xfffffffd
   140005da6:	mov    DWORD PTR [rsp+0x68],esi
   140005daa:	lea    rcx,[rsp+0x1e8]
   140005db2:	call   QWORD PTR [rip+0x15870]        # 0x14001b628
   140005db8:	nop
   140005db9:	test   sil,0x1
   140005dbd:	je     0x140005dd4
   140005dbf:	and    esi,0xfffffffe
   140005dc2:	mov    DWORD PTR [rsp+0x68],esi
   140005dc6:	lea    rcx,[rsp+0x188]
   140005dce:	call   QWORD PTR [rip+0x15854]        # 0x14001b628
   140005dd4:	test   dil,dil
   140005dd7:	je     0x140005e9a
   140005ddd:	lea    rdx,[rsp+0x1b0]
   140005de5:	lea    rcx,[rsp+0x78]
   140005dea:	call   QWORD PTR [rip+0x157f8]        # 0x14001b5e8
   140005df0:	mov    rbx,rax
   140005df3:	lea    rdx,[rsp+0x1a0]
   140005dfb:	lea    rcx,[rsp+0xc8]
   140005e03:	call   QWORD PTR [rip+0x1555f]        # 0x14001b368
   140005e09:	nop
   140005e0a:	lea    rdx,[rsp+0x190]
   140005e12:	mov    rcx,rax
   140005e15:	call   QWORD PTR [rip+0x157cd]        # 0x14001b5e8
   140005e1b:	mov    rdi,rax
   140005e1e:	mov    rcx,rbx
   140005e21:	call   QWORD PTR [rip+0x15419]        # 0x14001b240
   140005e27:	mov    rbx,rax
   140005e2a:	mov    rcx,rdi
   140005e2d:	call   QWORD PTR [rip+0x1540d]        # 0x14001b240
   140005e33:	mov    rcx,rax
   140005e36:	mov    rax,QWORD PTR [rsp+0xe0]
   140005e3e:	mov    QWORD PTR [rsp+0x30],rax
   140005e43:	mov    QWORD PTR [rsp+0x28],r12
   140005e48:	lea    rax,[rsp+0x80]
   140005e50:	mov    QWORD PTR [rsp+0x20],rax
   140005e55:	mov    r9b,0x1
   140005e58:	mov    r8,rbx
   140005e5b:	lea    rdx,[rsp+0xa0]
   140005e63:	call   0x1400041e0
   140005e68:	nop
   140005e69:	lea    rcx,[rsp+0x190]
   140005e71:	call   QWORD PTR [rip+0x157a9]        # 0x14001b620
   140005e77:	nop
   140005e78:	lea    rcx,[rsp+0x1a0]
   140005e80:	call   QWORD PTR [rip+0x157a2]        # 0x14001b628
   140005e86:	nop
   140005e87:	lea    rcx,[rsp+0x1b0]
   140005e8f:	call   QWORD PTR [rip+0x1578b]        # 0x14001b620
   140005e95:	jmp    0x140005f34
   140005e9a:	lea    rdx,[rsp+0x1e0]
   140005ea2:	lea    rcx,[rsp+0x78]
   140005ea7:	call   QWORD PTR [rip+0x1573b]        # 0x14001b5e8
   140005ead:	mov    rdi,rax
   140005eb0:	lea    rdx,[rsp+0x1d0]
   140005eb8:	lea    rcx,[rsp+0xc8]
   140005ec0:	call   QWORD PTR [rip+0x154a2]        # 0x14001b368
   140005ec6:	nop
   140005ec7:	lea    rdx,[rsp+0x1c0]
   140005ecf:	mov    rcx,rax
   140005ed2:	call   QWORD PTR [rip+0x15710]        # 0x14001b5e8
   140005ed8:	mov    rbx,rax
   140005edb:	mov    rcx,rdi
   140005ede:	call   QWORD PTR [rip+0x1535c]        # 0x14001b240
   140005ee4:	mov    rdi,rax
   140005ee7:	mov    rcx,rbx
   140005eea:	call   QWORD PTR [rip+0x15350]        # 0x14001b240
   140005ef0:	mov    rcx,rax
   140005ef3:	mov    r9b,0x1
   140005ef6:	mov    r8,rdi
   140005ef9:	lea    rdx,[rsp+0xa0]
   140005f01:	call   0x140002400
   140005f06:	nop
   140005f07:	lea    rcx,[rsp+0x1c0]
   140005f0f:	call   QWORD PTR [rip+0x1570b]        # 0x14001b620
   140005f15:	nop
   140005f16:	lea    rcx,[rsp+0x1d0]
   140005f1e:	call   QWORD PTR [rip+0x15704]        # 0x14001b628
   140005f24:	nop
   140005f25:	lea    rcx,[rsp+0x1e0]
   140005f2d:	call   QWORD PTR [rip+0x156ed]        # 0x14001b620
   140005f33:	nop
   140005f34:	lea    rcx,[rsp+0xc8]
   140005f3c:	call   QWORD PTR [rip+0x1547e]        # 0x14001b3c0
   140005f42:	lea    rcx,[rsp+0x120]
   140005f4a:	call   QWORD PTR [rip+0x15478]        # 0x14001b3c8
   140005f50:	nop
   140005f51:	lea    rcx,[rsp+0x120]
   140005f59:	call   QWORD PTR [rip+0x156c9]        # 0x14001b628
   140005f5f:	nop
   140005f60:	lea    rcx,[rsp+0xd0]
   140005f68:	call   QWORD PTR [rip+0x156ba]        # 0x14001b628
   140005f6e:	inc    ebp
   140005f70:	mov    DWORD PTR [rsp+0x98],ebp
   140005f77:	inc    r13
   140005f7a:	mov    QWORD PTR [rsp+0x130],r13
   140005f82:	cmp    r13,QWORD PTR [rsp+0xf8]
   140005f8a:	jge    0x14000639a
   140005f90:	jmp    0x140005180
   140005f95:	call   QWORD PTR [rip+0x1524d]        # 0x14001b1e8
   140005f9b:	lea    rdx,[rip+0x16e7e]        # 0x14001ce20
   140005fa2:	lea    rcx,[rax+0x60]
   140005fa6:	call   QWORD PTR [rip+0x15244]        # 0x14001b1f0
   140005fac:	nop
   140005fad:	mov    rdi,QWORD PTR [rsp+0x58]
   140005fb2:	mov    eax,DWORD PTR [rdi]
   140005fb4:	test   eax,eax
   140005fb6:	je     0x140005fd3
   140005fb8:	cmp    eax,0xffffffff
   140005fbb:	je     0x14000600c
   140005fbd:	mov    eax,r14d
   140005fc0:	lock xadd DWORD PTR [rdi],eax
   140005fc4:	add    eax,0xffffffff
   140005fc7:	setne  al
   140005fca:	test   al,al
   140005fcc:	jne    0x14000600c
   140005fce:	mov    rdi,QWORD PTR [rsp+0x58]
   140005fd3:	movsxd rax,DWORD PTR [rdi+0xc]
   140005fd7:	lea    rbx,[rdi+rax*8+0x10]
   140005fdc:	movsxd rax,DWORD PTR [rdi+0x8]
   140005fe0:	lea    rsi,[rdi+rax*8+0x10]
   140005fe5:	cmp    rsi,rbx
   140005fe8:	je     0x140006002
   140005fea:	nop    WORD PTR [rax+rax*1+0x0]
   140005ff0:	sub    rbx,0x8
   140005ff4:	mov    rcx,rbx
   140005ff7:	call   QWORD PTR [rip+0x1562b]        # 0x14001b628
   140005ffd:	cmp    rbx,rsi
   140006000:	jne    0x140005ff0
   140006002:	mov    rcx,rdi
   140006005:	call   QWORD PTR [rip+0x15285]        # 0x14001b290
   14000600b:	nop
   14000600c:	mov    rbx,QWORD PTR [rsp+0x48]
   140006011:	mov    eax,DWORD PTR [rbx]
   140006013:	test   eax,eax
   140006015:	je     0x140006032
   140006017:	cmp    eax,0xffffffff
   14000601a:	je     0x14000606c
   14000601c:	mov    eax,r14d
   14000601f:	lock xadd DWORD PTR [rbx],eax
   140006023:	add    eax,0xffffffff
   140006026:	setne  al
   140006029:	test   al,al
   14000602b:	jne    0x14000606c
   14000602d:	mov    rbx,QWORD PTR [rsp+0x48]
   140006032:	movsxd rax,DWORD PTR [rbx+0xc]
   140006036:	lea    rdi,[rbx+rax*8+0x10]
   14000603b:	movsxd rax,DWORD PTR [rbx+0x8]
   14000603f:	lea    rsi,[rbx+rax*8+0x10]
   140006044:	cmp    rsi,rdi
   140006047:	je     0x140006062
   140006049:	nop    DWORD PTR [rax+0x0]
   140006050:	sub    rdi,0x8
   140006054:	mov    rcx,rdi
   140006057:	call   QWORD PTR [rip+0x155cb]        # 0x14001b628
   14000605d:	cmp    rdi,rsi
   140006060:	jne    0x140006050
   140006062:	mov    rcx,rbx
   140006065:	call   QWORD PTR [rip+0x15225]        # 0x14001b290
   14000606b:	nop
   14000606c:	lea    rcx,[rsp+0x80]
   140006074:	call   QWORD PTR [rip+0x155a6]        # 0x14001b620
   14000607a:	nop
   14000607b:	lea    rcx,[rsp+0x70]
   140006080:	call   QWORD PTR [rip+0x1559a]        # 0x14001b620
   140006086:	nop
   140006087:	lea    rcx,[rsp+0xc0]
   14000608f:	call   QWORD PTR [rip+0x15593]        # 0x14001b628
   140006095:	nop
   140006096:	lea    rcx,[rsp+0xb8]
   14000609e:	call   QWORD PTR [rip+0x15584]        # 0x14001b628
   1400060a4:	nop
   1400060a5:	lea    rcx,[rsp+0xa8]
   1400060ad:	call   QWORD PTR [rip+0x1556d]        # 0x14001b620
   1400060b3:	nop
   1400060b4:	mov    rdi,QWORD PTR [rsp+0xa0]
   1400060bc:	mov    eax,DWORD PTR [rdi]
   1400060be:	test   eax,eax
   1400060c0:	je     0x1400060df
   1400060c2:	cmp    eax,0xffffffff
   1400060c5:	je     0x14000610a
   1400060c7:	lock xadd DWORD PTR [rdi],r14d
   1400060cc:	add    r14d,0xffffffff
   1400060d0:	setne  al
   1400060d3:	test   al,al
   1400060d5:	jne    0x14000610a
   1400060d7:	mov    rdi,QWORD PTR [rsp+0xa0]
   1400060df:	mov    rcx,QWORD PTR [rdi+0x10]
   1400060e3:	test   rcx,rcx
   1400060e6:	je     0x140006100
   1400060e8:	call   0x140004ab0
   1400060ed:	mov    r8d,0x8
   1400060f3:	mov    rdx,QWORD PTR [rdi+0x10]
   1400060f7:	mov    rcx,rdi
   1400060fa:	call   QWORD PTR [rip+0x151a0]        # 0x14001b2a0
   140006100:	mov    rcx,rdi
   140006103:	call   QWORD PTR [rip+0x1518f]        # 0x14001b298
   140006109:	nop
   14000610a:	lea    rcx,[rsp+0x78]
   14000610f:	call   QWORD PTR [rip+0x15513]        # 0x14001b628
   140006115:	mov    eax,0x2
   14000611a:	jmp    0x140006b87
   14000611f:	call   QWORD PTR [rip+0x150c3]        # 0x14001b1e8
   140006125:	lea    rdx,[rip+0x16cbc]        # 0x14001cde8
   14000612c:	lea    rcx,[rax+0x60]
   140006130:	call   QWORD PTR [rip+0x150ba]        # 0x14001b1f0
   140006136:	nop
   140006137:	mov    rdi,QWORD PTR [rsp+0x58]
   14000613c:	mov    eax,DWORD PTR [rdi]
   14000613e:	test   eax,eax
   140006140:	je     0x14000615d
   140006142:	cmp    eax,0xffffffff
   140006145:	je     0x14000619c
   140006147:	mov    eax,r14d
   14000614a:	lock xadd DWORD PTR [rdi],eax
   14000614e:	add    eax,0xffffffff
   140006151:	setne  al
   140006154:	test   al,al
   140006156:	jne    0x14000619c
   140006158:	mov    rdi,QWORD PTR [rsp+0x58]
   14000615d:	movsxd rax,DWORD PTR [rdi+0xc]
   140006161:	lea    rbx,[rdi+rax*8+0x10]
   140006166:	movsxd rax,DWORD PTR [rdi+0x8]
   14000616a:	lea    rsi,[rdi+rax*8+0x10]
   14000616f:	cmp    rsi,rbx
   140006172:	je     0x140006192
   140006174:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006180:	sub    rbx,0x8
   140006184:	mov    rcx,rbx
   140006187:	call   QWORD PTR [rip+0x1549b]        # 0x14001b628
   14000618d:	cmp    rbx,rsi
   140006190:	jne    0x140006180
   140006192:	mov    rcx,rdi
   140006195:	call   QWORD PTR [rip+0x150f5]        # 0x14001b290
   14000619b:	nop
   14000619c:	mov    rbx,QWORD PTR [rsp+0x48]
   1400061a1:	mov    eax,DWORD PTR [rbx]
   1400061a3:	test   eax,eax
   1400061a5:	je     0x1400061c1
   1400061a7:	cmp    eax,0xffffffff
   1400061aa:	je     0x1400061fc
   1400061ac:	lock xadd DWORD PTR [rbx],r14d
   1400061b1:	add    r14d,0xffffffff
   1400061b5:	setne  al
   1400061b8:	test   al,al
   1400061ba:	jne    0x1400061fc
   1400061bc:	mov    rbx,QWORD PTR [rsp+0x48]
   1400061c1:	movsxd rax,DWORD PTR [rbx+0xc]
   1400061c5:	lea    rdi,[rbx+rax*8+0x10]
   1400061ca:	movsxd rax,DWORD PTR [rbx+0x8]
   1400061ce:	lea    rsi,[rbx+rax*8+0x10]
   1400061d3:	cmp    rsi,rdi
   1400061d6:	je     0x1400061f2
   1400061d8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400061e0:	sub    rdi,0x8
   1400061e4:	mov    rcx,rdi
   1400061e7:	call   QWORD PTR [rip+0x1543b]        # 0x14001b628
   1400061ed:	cmp    rdi,rsi
   1400061f0:	jne    0x1400061e0
   1400061f2:	mov    rcx,rbx
   1400061f5:	call   QWORD PTR [rip+0x15095]        # 0x14001b290
   1400061fb:	nop
   1400061fc:	lea    rcx,[rsp+0x80]
   140006204:	call   QWORD PTR [rip+0x15416]        # 0x14001b620
   14000620a:	nop
   14000620b:	lea    rcx,[rsp+0x70]
   140006210:	call   QWORD PTR [rip+0x1540a]        # 0x14001b620
   140006216:	nop
   140006217:	lea    rcx,[rsp+0xa0]
   14000621f:	call   0x140004b70
   140006224:	nop
   140006225:	lea    rcx,[rsp+0x78]
   14000622a:	call   QWORD PTR [rip+0x153f8]        # 0x14001b628
   140006230:	mov    eax,0x2
   140006235:	jmp    0x140006b87
   14000623a:	call   QWORD PTR [rip+0x14f48]        # 0x14001b188
   140006240:	mov    r8d,DWORD PTR [rax]
   140006243:	mov    edx,0x64
   140006248:	lea    rcx,[rsp+0x280]
   140006250:	call   QWORD PTR [rip+0x14f3a]        # 0x14001b190
   140006256:	movsxd rdi,ebp
   140006259:	call   QWORD PTR [rip+0x14f89]        # 0x14001b1e8
   14000625f:	lea    r9,[rsp+0x280]
   140006267:	mov    r8,QWORD PTR [r15+rdi*8]
   14000626b:	lea    rdx,[rip+0x16b46]        # 0x14001cdb8
   140006272:	lea    rcx,[rax+0x60]
   140006276:	call   QWORD PTR [rip+0x14f74]        # 0x14001b1f0
   14000627c:	nop
   14000627d:	lea    rcx,[rsp+0x170]
   140006285:	call   QWORD PTR [rip+0x14fed]        # 0x14001b278
   14000628b:	nop
   14000628c:	lea    rcx,[rsp+0xd0]
   140006294:	call   QWORD PTR [rip+0x1538e]        # 0x14001b628
   14000629a:	nop
   14000629b:	mov    rdi,QWORD PTR [rsp+0x58]
   1400062a0:	mov    eax,DWORD PTR [rdi]
   1400062a2:	test   eax,eax
   1400062a4:	je     0x1400062c1
   1400062a6:	cmp    eax,0xffffffff
   1400062a9:	je     0x1400062fc
   1400062ab:	mov    eax,r14d
   1400062ae:	lock xadd DWORD PTR [rdi],eax
   1400062b2:	add    eax,0xffffffff
   1400062b5:	setne  al
   1400062b8:	test   al,al
   1400062ba:	jne    0x1400062fc
   1400062bc:	mov    rdi,QWORD PTR [rsp+0x58]
   1400062c1:	movsxd rax,DWORD PTR [rdi+0xc]
   1400062c5:	lea    rbx,[rdi+rax*8+0x10]
   1400062ca:	movsxd rax,DWORD PTR [rdi+0x8]
   1400062ce:	lea    rsi,[rdi+rax*8+0x10]
   1400062d3:	cmp    rsi,rbx
   1400062d6:	je     0x1400062f2
   1400062d8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400062e0:	sub    rbx,0x8
   1400062e4:	mov    rcx,rbx
   1400062e7:	call   QWORD PTR [rip+0x1533b]        # 0x14001b628
   1400062ed:	cmp    rbx,rsi
   1400062f0:	jne    0x1400062e0
   1400062f2:	mov    rcx,rdi
   1400062f5:	call   QWORD PTR [rip+0x14f95]        # 0x14001b290
   1400062fb:	nop
   1400062fc:	mov    rbx,QWORD PTR [rsp+0x48]
   140006301:	mov    eax,DWORD PTR [rbx]
   140006303:	test   eax,eax
   140006305:	je     0x140006321
   140006307:	cmp    eax,0xffffffff
   14000630a:	je     0x14000635c
   14000630c:	lock xadd DWORD PTR [rbx],r14d
   140006311:	add    r14d,0xffffffff
   140006315:	setne  al
   140006318:	test   al,al
   14000631a:	jne    0x14000635c
   14000631c:	mov    rbx,QWORD PTR [rsp+0x48]
   140006321:	movsxd rax,DWORD PTR [rbx+0xc]
   140006325:	lea    rdi,[rbx+rax*8+0x10]
   14000632a:	movsxd rax,DWORD PTR [rbx+0x8]
   14000632e:	lea    rsi,[rbx+rax*8+0x10]
   140006333:	cmp    rsi,rdi
   140006336:	je     0x140006352
   140006338:	nop    DWORD PTR [rax+rax*1+0x0]
   140006340:	sub    rdi,0x8
   140006344:	mov    rcx,rdi
   140006347:	call   QWORD PTR [rip+0x152db]        # 0x14001b628
   14000634d:	cmp    rdi,rsi
   140006350:	jne    0x140006340
   140006352:	mov    rcx,rbx
   140006355:	call   QWORD PTR [rip+0x14f35]        # 0x14001b290
   14000635b:	nop
   14000635c:	lea    rcx,[rsp+0x80]
   140006364:	call   QWORD PTR [rip+0x152b6]        # 0x14001b620
   14000636a:	nop
   14000636b:	lea    rcx,[rsp+0x70]
   140006370:	call   QWORD PTR [rip+0x152aa]        # 0x14001b620
   140006376:	nop
   140006377:	lea    rcx,[rsp+0xa0]
   14000637f:	call   0x140004b70
   140006384:	nop
   140006385:	lea    rcx,[rsp+0x78]
   14000638a:	call   QWORD PTR [rip+0x15298]        # 0x14001b628
   140006390:	mov    eax,0x1
   140006395:	jmp    0x140006b87
   14000639a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000639f:	mov    rdi,QWORD PTR [rsp+0x58]
   1400063a4:	jmp    0x140006777
   1400063a9:	call   QWORD PTR [rip+0x14e39]        # 0x14001b1e8
   1400063af:	lea    r8,[rip+0x169fa]        # 0x14001cdb0
   1400063b6:	lea    rdx,[rip+0x169db]        # 0x14001cd98
   1400063bd:	lea    rcx,[rax+0x60]
   1400063c1:	call   QWORD PTR [rip+0x14e29]        # 0x14001b1f0
   1400063c7:	nop
   1400063c8:	mov    rdi,QWORD PTR [rsp+0x58]
   1400063cd:	mov    eax,DWORD PTR [rdi]
   1400063cf:	test   eax,eax
   1400063d1:	je     0x1400063ee
   1400063d3:	cmp    eax,0xffffffff
   1400063d6:	je     0x14000642c
   1400063d8:	mov    eax,r14d
   1400063db:	lock xadd DWORD PTR [rdi],eax
   1400063df:	add    eax,0xffffffff
   1400063e2:	setne  al
   1400063e5:	test   al,al
   1400063e7:	jne    0x14000642c
   1400063e9:	mov    rdi,QWORD PTR [rsp+0x58]
   1400063ee:	movsxd rax,DWORD PTR [rdi+0xc]
   1400063f2:	lea    rbx,[rdi+rax*8+0x10]
   1400063f7:	movsxd rax,DWORD PTR [rdi+0x8]
   1400063fb:	lea    rsi,[rdi+rax*8+0x10]
   140006400:	cmp    rsi,rbx
   140006403:	je     0x140006422
   140006405:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006410:	sub    rbx,0x8
   140006414:	mov    rcx,rbx
   140006417:	call   QWORD PTR [rip+0x1520b]        # 0x14001b628
   14000641d:	cmp    rbx,rsi
   140006420:	jne    0x140006410
   140006422:	mov    rcx,rdi
   140006425:	call   QWORD PTR [rip+0x14e65]        # 0x14001b290
   14000642b:	nop
   14000642c:	mov    rbx,QWORD PTR [rsp+0x48]
   140006431:	mov    eax,DWORD PTR [rbx]
   140006433:	test   eax,eax
   140006435:	je     0x140006452
   140006437:	cmp    eax,0xffffffff
   14000643a:	je     0x14000648c
   14000643c:	mov    eax,r14d
   14000643f:	lock xadd DWORD PTR [rbx],eax
   140006443:	add    eax,0xffffffff
   140006446:	setne  al
   140006449:	test   al,al
   14000644b:	jne    0x14000648c
   14000644d:	mov    rbx,QWORD PTR [rsp+0x48]
   140006452:	movsxd rax,DWORD PTR [rbx+0xc]
   140006456:	lea    rdi,[rbx+rax*8+0x10]
   14000645b:	movsxd rax,DWORD PTR [rbx+0x8]
   14000645f:	lea    rsi,[rbx+rax*8+0x10]
   140006464:	cmp    rsi,rdi
   140006467:	je     0x140006482
   140006469:	nop    DWORD PTR [rax+0x0]
   140006470:	sub    rdi,0x8
   140006474:	mov    rcx,rdi
   140006477:	call   QWORD PTR [rip+0x151ab]        # 0x14001b628
   14000647d:	cmp    rdi,rsi
   140006480:	jne    0x140006470
   140006482:	mov    rcx,rbx
   140006485:	call   QWORD PTR [rip+0x14e05]        # 0x14001b290
   14000648b:	nop
   14000648c:	lea    rcx,[rsp+0x80]
   140006494:	call   QWORD PTR [rip+0x15186]        # 0x14001b620
   14000649a:	nop
   14000649b:	lea    rcx,[rsp+0x70]
   1400064a0:	call   QWORD PTR [rip+0x1517a]        # 0x14001b620
   1400064a6:	nop
   1400064a7:	lea    rcx,[rsp+0xc0]
   1400064af:	call   QWORD PTR [rip+0x15173]        # 0x14001b628
   1400064b5:	nop
   1400064b6:	lea    rcx,[rsp+0xb8]
   1400064be:	call   QWORD PTR [rip+0x15164]        # 0x14001b628
   1400064c4:	nop
   1400064c5:	lea    rcx,[rsp+0xa8]
   1400064cd:	call   QWORD PTR [rip+0x1514d]        # 0x14001b620
   1400064d3:	nop
   1400064d4:	mov    rdi,QWORD PTR [rsp+0xa0]
   1400064dc:	mov    eax,DWORD PTR [rdi]
   1400064de:	test   eax,eax
   1400064e0:	je     0x1400064ff
   1400064e2:	cmp    eax,0xffffffff
   1400064e5:	je     0x14000652a
   1400064e7:	lock xadd DWORD PTR [rdi],r14d
   1400064ec:	add    r14d,0xffffffff
   1400064f0:	setne  al
   1400064f3:	test   al,al
   1400064f5:	jne    0x14000652a
   1400064f7:	mov    rdi,QWORD PTR [rsp+0xa0]
   1400064ff:	mov    rcx,QWORD PTR [rdi+0x10]
   140006503:	test   rcx,rcx
   140006506:	je     0x140006520
   140006508:	call   0x140004ab0
   14000650d:	mov    r8d,0x8
   140006513:	mov    rdx,QWORD PTR [rdi+0x10]
   140006517:	mov    rcx,rdi
   14000651a:	call   QWORD PTR [rip+0x14d80]        # 0x14001b2a0
   140006520:	mov    rcx,rdi
   140006523:	call   QWORD PTR [rip+0x14d6f]        # 0x14001b298
   140006529:	nop
   14000652a:	lea    rcx,[rsp+0x78]
   14000652f:	call   QWORD PTR [rip+0x150f3]        # 0x14001b628
   140006535:	xor    eax,eax
   140006537:	jmp    0x140006b87
   14000653c:	call   QWORD PTR [rip+0x14ca6]        # 0x14001b1e8
   140006542:	lea    rdx,[rip+0x16427]        # 0x14001c970
   140006549:	lea    rcx,[rax+0x60]
   14000654d:	call   QWORD PTR [rip+0x14c9d]        # 0x14001b1f0
   140006553:	nop
   140006554:	mov    rdi,QWORD PTR [rsp+0x58]
   140006559:	mov    eax,DWORD PTR [rdi]
   14000655b:	test   eax,eax
   14000655d:	je     0x14000657a
   14000655f:	cmp    eax,0xffffffff
   140006562:	je     0x1400065ad
   140006564:	mov    eax,r14d
   140006567:	lock xadd DWORD PTR [rdi],eax
   14000656b:	add    eax,0xffffffff
   14000656e:	setne  al
   140006571:	test   al,al
   140006573:	jne    0x1400065ad
   140006575:	mov    rdi,QWORD PTR [rsp+0x58]
   14000657a:	movsxd rax,DWORD PTR [rdi+0xc]
   14000657e:	lea    rbx,[rdi+rax*8+0x10]
   140006583:	movsxd rax,DWORD PTR [rdi+0x8]
   140006587:	lea    rsi,[rdi+rax*8+0x10]
   14000658c:	cmp    rsi,rbx
   14000658f:	je     0x1400065a3
   140006591:	sub    rbx,0x8
   140006595:	mov    rcx,rbx
   140006598:	call   QWORD PTR [rip+0x1508a]        # 0x14001b628
   14000659e:	cmp    rbx,rsi
   1400065a1:	jne    0x140006591
   1400065a3:	mov    rcx,rdi
   1400065a6:	call   QWORD PTR [rip+0x14ce4]        # 0x14001b290
   1400065ac:	nop
   1400065ad:	mov    rbx,QWORD PTR [rsp+0x48]
   1400065b2:	mov    eax,DWORD PTR [rbx]
   1400065b4:	test   eax,eax
   1400065b6:	je     0x1400065d3
   1400065b8:	cmp    eax,0xffffffff
   1400065bb:	je     0x14000660c
   1400065bd:	mov    eax,r14d
   1400065c0:	lock xadd DWORD PTR [rbx],eax
   1400065c4:	add    eax,0xffffffff
   1400065c7:	setne  al
   1400065ca:	test   al,al
   1400065cc:	jne    0x14000660c
   1400065ce:	mov    rbx,QWORD PTR [rsp+0x48]
   1400065d3:	movsxd rax,DWORD PTR [rbx+0xc]
   1400065d7:	lea    rdi,[rbx+rax*8+0x10]
   1400065dc:	movsxd rax,DWORD PTR [rbx+0x8]
   1400065e0:	lea    rsi,[rbx+rax*8+0x10]
   1400065e5:	cmp    rsi,rdi
   1400065e8:	je     0x140006602
   1400065ea:	nop    WORD PTR [rax+rax*1+0x0]
   1400065f0:	sub    rdi,0x8
   1400065f4:	mov    rcx,rdi
   1400065f7:	call   QWORD PTR [rip+0x1502b]        # 0x14001b628
   1400065fd:	cmp    rdi,rsi
   140006600:	jne    0x1400065f0
   140006602:	mov    rcx,rbx
   140006605:	call   QWORD PTR [rip+0x14c85]        # 0x14001b290
   14000660b:	nop
   14000660c:	lea    rcx,[rsp+0x80]
   140006614:	call   QWORD PTR [rip+0x15006]        # 0x14001b620
   14000661a:	nop
   14000661b:	lea    rcx,[rsp+0x70]
   140006620:	call   QWORD PTR [rip+0x14ffa]        # 0x14001b620
   140006626:	nop
   140006627:	lea    rcx,[rsp+0xc0]
   14000662f:	call   QWORD PTR [rip+0x14ff3]        # 0x14001b628
   140006635:	nop
   140006636:	lea    rcx,[rsp+0xb8]
   14000663e:	call   QWORD PTR [rip+0x14fe4]        # 0x14001b628
   140006644:	nop
   140006645:	lea    rcx,[rsp+0xa8]
   14000664d:	call   QWORD PTR [rip+0x14fcd]        # 0x14001b620
   140006653:	nop
   140006654:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000665c:	mov    eax,DWORD PTR [rbx]
   14000665e:	test   eax,eax
   140006660:	je     0x140006688
   140006662:	cmp    eax,0xffffffff
   140006665:	je     0x140006765
   14000666b:	mov    eax,r14d
   14000666e:	lock xadd DWORD PTR [rbx],eax
   140006672:	add    eax,0xffffffff
   140006675:	setne  al
   140006678:	test   al,al
   14000667a:	jne    0x140006765
   140006680:	mov    rbx,QWORD PTR [rsp+0xa0]
   140006688:	mov    r13,QWORD PTR [rbx+0x10]
   14000668c:	test   r13,r13
   14000668f:	je     0x14000675b
   140006695:	lea    rsi,[r13+0x18]
   140006699:	mov    QWORD PTR [rsp+0xf8],rsi
   1400066a1:	lea    rcx,[rsi+0x28]
   1400066a5:	call   QWORD PTR [rip+0x14f7d]        # 0x14001b628
   1400066ab:	nop
   1400066ac:	mov    rax,QWORD PTR [rsi+0x20]
   1400066b0:	mov    ecx,DWORD PTR [rax]
   1400066b2:	test   ecx,ecx
   1400066b4:	je     0x1400066cb
   1400066b6:	cmp    ecx,0xffffffff
   1400066b9:	je     0x14000670c
   1400066bb:	lock xadd DWORD PTR [rax],r14d
   1400066c0:	add    r14d,0xffffffff
   1400066c4:	setne  al
   1400066c7:	test   al,al
   1400066c9:	jne    0x14000670c
   1400066cb:	mov    r12,QWORD PTR [rsi+0x20]
   1400066cf:	movsxd rax,DWORD PTR [r12+0xc]
   1400066d4:	lea    rdi,[r12+rax*8+0x10]
   1400066d9:	movsxd rax,DWORD PTR [r12+0x8]
   1400066de:	lea    rbp,[r12+rax*8+0x10]
   1400066e3:	cmp    rbp,rdi
   1400066e6:	je     0x140006702
   1400066e8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400066f0:	sub    rdi,0x8
   1400066f4:	mov    rcx,rdi
   1400066f7:	call   QWORD PTR [rip+0x14f2b]        # 0x14001b628
   1400066fd:	cmp    rdi,rbp
   140006700:	jne    0x1400066f0
   140006702:	mov    rcx,r12
   140006705:	call   QWORD PTR [rip+0x14b85]        # 0x14001b290
   14000670b:	nop
   14000670c:	lea    rcx,[rsi+0x18]
   140006710:	call   QWORD PTR [rip+0x14f0a]        # 0x14001b620
   140006716:	nop
   140006717:	lea    rcx,[rsi+0x10]
   14000671b:	call   QWORD PTR [rip+0x14eff]        # 0x14001b620
   140006721:	nop
   140006722:	lea    rcx,[rsi+0x8]
   140006726:	call   QWORD PTR [rip+0x14ef4]        # 0x14001b620
   14000672c:	mov    rcx,QWORD PTR [r13+0x8]
   140006730:	test   rcx,rcx
   140006733:	je     0x14000673a
   140006735:	call   0x140004ab0
   14000673a:	mov    rcx,QWORD PTR [r13+0x10]
   14000673e:	test   rcx,rcx
   140006741:	je     0x140006748
   140006743:	call   0x140004ab0
   140006748:	mov    r8d,0x8
   14000674e:	mov    rdx,QWORD PTR [rbx+0x10]
   140006752:	mov    rcx,rbx
   140006755:	call   QWORD PTR [rip+0x14b45]        # 0x14001b2a0
   14000675b:	mov    rcx,rbx
   14000675e:	call   QWORD PTR [rip+0x14b34]        # 0x14001b298
   140006764:	nop
   140006765:	lea    rcx,[rsp+0x78]
   14000676a:	call   QWORD PTR [rip+0x14eb8]        # 0x14001b628
   140006770:	xor    eax,eax
   140006772:	jmp    0x140006b87
   140006777:	cmp    BYTE PTR [rsp+0x8c],0x0
   14000677f:	jne    0x1400067d1
   140006781:	lea    rdx,[rsp+0x70]
   140006786:	lea    rcx,[rsp+0x140]
   14000678e:	call   QWORD PTR [rip+0x14b3c]        # 0x14001b2d0
   140006794:	nop
   140006795:	mov    al,BYTE PTR [rsp+0x42]
   140006799:	mov    BYTE PTR [rsp+0x20],al
   14000679d:	movzx  r9d,BYTE PTR [rsp+0x40]
   1400067a3:	lea    r8,[rsp+0x140]
   1400067ab:	lea    rdx,[rsp+0x48]
   1400067b0:	lea    rcx,[rsp+0xa0]
   1400067b8:	call   0x140004c00
   1400067bd:	nop
   1400067be:	lea    rcx,[rsp+0x140]
   1400067c6:	call   QWORD PTR [rip+0x14e5c]        # 0x14001b628
   1400067cc:	mov    rbx,QWORD PTR [rsp+0x48]
   1400067d1:	cmp    DWORD PTR [rsp+0x88],0x0
   1400067d9:	jne    0x140006a1a
   1400067df:	call   QWORD PTR [rip+0x14a03]        # 0x14001b1e8
   1400067e5:	lea    rdx,[rip+0x16184]        # 0x14001c970
   1400067ec:	lea    rcx,[rax+0x60]
   1400067f0:	call   QWORD PTR [rip+0x149fa]        # 0x14001b1f0
   1400067f6:	nop
   1400067f7:	mov    eax,DWORD PTR [rdi]
   1400067f9:	test   eax,eax
   1400067fb:	je     0x140006818
   1400067fd:	cmp    eax,0xffffffff
   140006800:	je     0x14000684c
   140006802:	mov    eax,r14d
   140006805:	lock xadd DWORD PTR [rdi],eax
   140006809:	add    eax,0xffffffff
   14000680c:	setne  al
   14000680f:	test   al,al
   140006811:	jne    0x14000684c
   140006813:	mov    rdi,QWORD PTR [rsp+0x58]
   140006818:	movsxd rax,DWORD PTR [rdi+0xc]
   14000681c:	lea    rbx,[rdi+rax*8+0x10]
   140006821:	movsxd rax,DWORD PTR [rdi+0x8]
   140006825:	lea    rsi,[rdi+rax*8+0x10]
   14000682a:	cmp    rsi,rbx
   14000682d:	je     0x140006842
   14000682f:	nop
   140006830:	sub    rbx,0x8
   140006834:	mov    rcx,rbx
   140006837:	call   QWORD PTR [rip+0x14deb]        # 0x14001b628
   14000683d:	cmp    rbx,rsi
   140006840:	jne    0x140006830
   140006842:	mov    rcx,rdi
   140006845:	call   QWORD PTR [rip+0x14a45]        # 0x14001b290
   14000684b:	nop
   14000684c:	mov    rbx,QWORD PTR [rsp+0x48]
   140006851:	mov    eax,DWORD PTR [rbx]
   140006853:	test   eax,eax
   140006855:	je     0x140006872
   140006857:	cmp    eax,0xffffffff
   14000685a:	je     0x1400068ac
   14000685c:	mov    eax,r14d
   14000685f:	lock xadd DWORD PTR [rbx],eax
   140006863:	add    eax,0xffffffff
   140006866:	setne  al
   140006869:	test   al,al
   14000686b:	jne    0x1400068ac
   14000686d:	mov    rbx,QWORD PTR [rsp+0x48]
   140006872:	movsxd rax,DWORD PTR [rbx+0xc]
   140006876:	lea    rdi,[rbx+rax*8+0x10]
   14000687b:	movsxd rax,DWORD PTR [rbx+0x8]
   14000687f:	lea    rsi,[rbx+rax*8+0x10]
   140006884:	cmp    rsi,rdi
   140006887:	je     0x1400068a2
   140006889:	nop    DWORD PTR [rax+0x0]
   140006890:	sub    rdi,0x8
   140006894:	mov    rcx,rdi
   140006897:	call   QWORD PTR [rip+0x14d8b]        # 0x14001b628
   14000689d:	cmp    rdi,rsi
   1400068a0:	jne    0x140006890
   1400068a2:	mov    rcx,rbx
   1400068a5:	call   QWORD PTR [rip+0x149e5]        # 0x14001b290
   1400068ab:	nop
   1400068ac:	lea    rcx,[rsp+0x80]
   1400068b4:	call   QWORD PTR [rip+0x14d66]        # 0x14001b620
   1400068ba:	nop
   1400068bb:	lea    rcx,[rsp+0x70]
   1400068c0:	call   QWORD PTR [rip+0x14d5a]        # 0x14001b620
   1400068c6:	nop
   1400068c7:	lea    rcx,[rsp+0xc0]
   1400068cf:	call   QWORD PTR [rip+0x14d53]        # 0x14001b628
   1400068d5:	nop
   1400068d6:	lea    rcx,[rsp+0xb8]
   1400068de:	call   QWORD PTR [rip+0x14d44]        # 0x14001b628
   1400068e4:	nop
   1400068e5:	lea    rcx,[rsp+0xa8]
   1400068ed:	call   QWORD PTR [rip+0x14d2d]        # 0x14001b620
   1400068f3:	nop
   1400068f4:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400068fc:	mov    eax,DWORD PTR [rbx]
   1400068fe:	test   eax,eax
   140006900:	je     0x140006928
   140006902:	cmp    eax,0xffffffff
   140006905:	je     0x140006a05
   14000690b:	mov    eax,r14d
   14000690e:	lock xadd DWORD PTR [rbx],eax
   140006912:	add    eax,0xffffffff
   140006915:	setne  al
   140006918:	test   al,al
   14000691a:	jne    0x140006a05
   140006920:	mov    rbx,QWORD PTR [rsp+0xa0]
   140006928:	mov    r13,QWORD PTR [rbx+0x10]
   14000692c:	test   r13,r13
   14000692f:	je     0x1400069fb
   140006935:	lea    rsi,[r13+0x18]
   140006939:	mov    QWORD PTR [rsp+0xf8],rsi
   140006941:	lea    rcx,[rsi+0x28]
   140006945:	call   QWORD PTR [rip+0x14cdd]        # 0x14001b628
   14000694b:	nop
   14000694c:	mov    rax,QWORD PTR [rsi+0x20]
   140006950:	mov    ecx,DWORD PTR [rax]
   140006952:	test   ecx,ecx
   140006954:	je     0x14000696b
   140006956:	cmp    ecx,0xffffffff
   140006959:	je     0x1400069ac
   14000695b:	lock xadd DWORD PTR [rax],r14d
   140006960:	add    r14d,0xffffffff
   140006964:	setne  al
   140006967:	test   al,al
   140006969:	jne    0x1400069ac
   14000696b:	mov    r12,QWORD PTR [rsi+0x20]
   14000696f:	movsxd rax,DWORD PTR [r12+0xc]
   140006974:	lea    rdi,[r12+rax*8+0x10]
   140006979:	movsxd rax,DWORD PTR [r12+0x8]
   14000697e:	lea    rbp,[r12+rax*8+0x10]
   140006983:	cmp    rbp,rdi
   140006986:	je     0x1400069a2
   140006988:	nop    DWORD PTR [rax+rax*1+0x0]
   140006990:	sub    rdi,0x8
   140006994:	mov    rcx,rdi
   140006997:	call   QWORD PTR [rip+0x14c8b]        # 0x14001b628
   14000699d:	cmp    rdi,rbp
   1400069a0:	jne    0x140006990
   1400069a2:	mov    rcx,r12
   1400069a5:	call   QWORD PTR [rip+0x148e5]        # 0x14001b290
   1400069ab:	nop
   1400069ac:	lea    rcx,[rsi+0x18]
   1400069b0:	call   QWORD PTR [rip+0x14c6a]        # 0x14001b620
   1400069b6:	nop
   1400069b7:	lea    rcx,[rsi+0x10]
   1400069bb:	call   QWORD PTR [rip+0x14c5f]        # 0x14001b620
   1400069c1:	nop
   1400069c2:	lea    rcx,[rsi+0x8]
   1400069c6:	call   QWORD PTR [rip+0x14c54]        # 0x14001b620
   1400069cc:	mov    rcx,QWORD PTR [r13+0x8]
   1400069d0:	test   rcx,rcx
   1400069d3:	je     0x1400069da
   1400069d5:	call   0x140004ab0
   1400069da:	mov    rcx,QWORD PTR [r13+0x10]
   1400069de:	test   rcx,rcx
   1400069e1:	je     0x1400069e8
   1400069e3:	call   0x140004ab0
   1400069e8:	mov    r8d,0x8
   1400069ee:	mov    rdx,QWORD PTR [rbx+0x10]
   1400069f2:	mov    rcx,rbx
   1400069f5:	call   QWORD PTR [rip+0x148a5]        # 0x14001b2a0
   1400069fb:	mov    rcx,rbx
   1400069fe:	call   QWORD PTR [rip+0x14894]        # 0x14001b298
   140006a04:	nop
   140006a05:	lea    rcx,[rsp+0x78]
   140006a0a:	call   QWORD PTR [rip+0x14c18]        # 0x14001b628
   140006a10:	mov    eax,0x1
   140006a15:	jmp    0x140006b87
   140006a1a:	mov    eax,DWORD PTR [rdi]
   140006a1c:	test   eax,eax
   140006a1e:	je     0x140006a44
   140006a20:	cmp    eax,0xffffffff
   140006a23:	je     0x140006a80
   140006a25:	mov    eax,r14d
   140006a28:	lock xadd DWORD PTR [rdi],eax
   140006a2c:	add    eax,0xffffffff
   140006a2f:	setne  al
   140006a32:	test   al,al
   140006a34:	jne    0x140006a3d
   140006a36:	mov    rdi,QWORD PTR [rsp+0x58]
   140006a3b:	jmp    0x140006a44
   140006a3d:	mov    rbx,QWORD PTR [rsp+0x48]
   140006a42:	jmp    0x140006a80
   140006a44:	movsxd rax,DWORD PTR [rdi+0xc]
   140006a48:	lea    rbx,[rdi+rax*8+0x10]
   140006a4d:	movsxd rax,DWORD PTR [rdi+0x8]
   140006a51:	lea    rsi,[rdi+rax*8+0x10]
   140006a56:	cmp    rsi,rbx
   140006a59:	je     0x140006a72
   140006a5b:	nop    DWORD PTR [rax+rax*1+0x0]
   140006a60:	sub    rbx,0x8
   140006a64:	mov    rcx,rbx
   140006a67:	call   QWORD PTR [rip+0x14bbb]        # 0x14001b628
   140006a6d:	cmp    rbx,rsi
   140006a70:	jne    0x140006a60
   140006a72:	mov    rcx,rdi
   140006a75:	call   QWORD PTR [rip+0x14815]        # 0x14001b290
   140006a7b:	mov    rbx,QWORD PTR [rsp+0x48]
   140006a80:	mov    eax,DWORD PTR [rbx]
   140006a82:	test   eax,eax
   140006a84:	je     0x140006aa1
   140006a86:	cmp    eax,0xffffffff
   140006a89:	je     0x140006adc
   140006a8b:	mov    eax,r14d
   140006a8e:	lock xadd DWORD PTR [rbx],eax
   140006a92:	add    eax,0xffffffff
   140006a95:	setne  al
   140006a98:	test   al,al
   140006a9a:	jne    0x140006adc
   140006a9c:	mov    rbx,QWORD PTR [rsp+0x48]
   140006aa1:	movsxd rax,DWORD PTR [rbx+0xc]
   140006aa5:	lea    rdi,[rbx+rax*8+0x10]
   140006aaa:	movsxd rax,DWORD PTR [rbx+0x8]
   140006aae:	lea    rsi,[rbx+rax*8+0x10]
   140006ab3:	cmp    rsi,rdi
   140006ab6:	je     0x140006ad2
   140006ab8:	nop    DWORD PTR [rax+rax*1+0x0]
   140006ac0:	sub    rdi,0x8
   140006ac4:	mov    rcx,rdi
   140006ac7:	call   QWORD PTR [rip+0x14b5b]        # 0x14001b628
   140006acd:	cmp    rdi,rsi
   140006ad0:	jne    0x140006ac0
   140006ad2:	mov    rcx,rbx
   140006ad5:	call   QWORD PTR [rip+0x147b5]        # 0x14001b290
   140006adb:	nop
   140006adc:	lea    rcx,[rsp+0x80]
   140006ae4:	call   QWORD PTR [rip+0x14b36]        # 0x14001b620
   140006aea:	nop
   140006aeb:	lea    rcx,[rsp+0x70]
   140006af0:	call   QWORD PTR [rip+0x14b2a]        # 0x14001b620
   140006af6:	nop
   140006af7:	lea    rcx,[rsp+0xc0]
   140006aff:	call   QWORD PTR [rip+0x14b23]        # 0x14001b628
   140006b05:	nop
   140006b06:	lea    rcx,[rsp+0xb8]
   140006b0e:	call   QWORD PTR [rip+0x14b14]        # 0x14001b628
   140006b14:	nop
   140006b15:	lea    rcx,[rsp+0xa8]
   140006b1d:	call   QWORD PTR [rip+0x14afd]        # 0x14001b620
   140006b23:	nop
   140006b24:	mov    rdi,QWORD PTR [rsp+0xa0]
   140006b2c:	mov    eax,DWORD PTR [rdi]
   140006b2e:	test   eax,eax
   140006b30:	je     0x140006b4f
   140006b32:	cmp    eax,0xffffffff
   140006b35:	je     0x140006b7a
   140006b37:	lock xadd DWORD PTR [rdi],r14d
   140006b3c:	add    r14d,0xffffffff
   140006b40:	setne  al
   140006b43:	test   al,al
   140006b45:	jne    0x140006b7a
   140006b47:	mov    rdi,QWORD PTR [rsp+0xa0]
   140006b4f:	mov    rcx,QWORD PTR [rdi+0x10]
   140006b53:	test   rcx,rcx
   140006b56:	je     0x140006b70
   140006b58:	call   0x140004ab0
   140006b5d:	mov    r8d,0x8
   140006b63:	mov    rdx,QWORD PTR [rdi+0x10]
   140006b67:	mov    rcx,rdi
   140006b6a:	call   QWORD PTR [rip+0x14730]        # 0x14001b2a0
   140006b70:	mov    rcx,rdi
   140006b73:	call   QWORD PTR [rip+0x1471f]        # 0x14001b298
   140006b79:	nop
   140006b7a:	lea    rcx,[rsp+0x78]
   140006b7f:	call   QWORD PTR [rip+0x14aa3]        # 0x14001b628
   140006b85:	xor    eax,eax
   140006b87:	mov    rcx,QWORD PTR [rsp+0x2f0]
   140006b8f:	xor    rcx,rsp
   140006b92:	call   0x140013ff0
   140006b97:	lea    r11,[rsp+0x300]
   140006b9f:	mov    rbx,QWORD PTR [r11+0x30]
   140006ba3:	mov    rbp,QWORD PTR [r11+0x40]
   140006ba7:	mov    rsi,QWORD PTR [r11+0x48]
   140006bab:	mov    rsp,r11
   140006bae:	pop    r15
   140006bb0:	pop    r14
   140006bb2:	pop    r13
   140006bb4:	pop    r12
   140006bb6:	pop    rdi
   140006bb7:	ret    
   140006bb8:	int3   
   140006bb9:	int3   
   140006bba:	int3   
   140006bbb:	int3   
   140006bbc:	int3   
   140006bbd:	int3   
   140006bbe:	int3   
   140006bbf:	int3   
   140006bc0:	ret    0x0
   140006bc3:	int3   
   140006bc4:	int3   
   140006bc5:	int3   
   140006bc6:	int3   
   140006bc7:	int3   
   140006bc8:	int3   
   140006bc9:	int3   
   140006bca:	int3   
   140006bcb:	int3   
   140006bcc:	int3   
   140006bcd:	int3   
   140006bce:	int3   
   140006bcf:	int3   
   140006bd0:	rex push rbx
   140006bd2:	sub    rsp,0x20
   140006bd6:	mov    rbx,rdx
   140006bd9:	lea    rdx,[rcx+0x28]
   140006bdd:	mov    DWORD PTR [rsp+0x30],0x0
   140006be5:	mov    rcx,rbx
   140006be8:	call   QWORD PTR [rip+0x14742]        # 0x14001b330
   140006bee:	mov    rax,rbx
   140006bf1:	add    rsp,0x20
   140006bf5:	pop    rbx
   140006bf6:	ret    
   140006bf7:	int3   
   140006bf8:	int3   
   140006bf9:	int3   
   140006bfa:	int3   
   140006bfb:	int3   
   140006bfc:	int3   
   140006bfd:	int3   
   140006bfe:	int3   
   140006bff:	int3   
   140006c00:	rex push rbx
   140006c02:	sub    rsp,0x20
   140006c06:	mov    rbx,rdx
   140006c09:	mov    DWORD PTR [rsp+0x40],0x0
   140006c11:	test   r8d,r8d
   140006c14:	js     0x140006c44
   140006c16:	mov    rdx,QWORD PTR [rcx]
   140006c19:	movsxd rcx,DWORD PTR [rdx+0x8]
   140006c1d:	mov    eax,DWORD PTR [rdx+0xc]
   140006c20:	sub    eax,ecx
   140006c22:	cmp    r8d,eax
   140006c25:	jge    0x140006c44
   140006c27:	movsxd rax,r8d
   140006c2a:	add    rcx,rax
   140006c2d:	lea    rdx,[rdx+rcx*8+0x10]
   140006c32:	mov    rcx,rbx
   140006c35:	call   QWORD PTR [rip+0x146f5]        # 0x14001b330
   140006c3b:	mov    rax,rbx
   140006c3e:	add    rsp,0x20
   140006c42:	pop    rbx
   140006c43:	ret    
   140006c44:	mov    rcx,rbx
   140006c47:	call   QWORD PTR [rip+0x149c3]        # 0x14001b610
   140006c4d:	mov    rax,rbx
   140006c50:	add    rsp,0x20
   140006c54:	pop    rbx
   140006c55:	ret    
   140006c56:	int3   
   140006c57:	int3   
   140006c58:	int3   
   140006c59:	int3   
   140006c5a:	int3   
   140006c5b:	int3   
   140006c5c:	int3   
   140006c5d:	int3   
   140006c5e:	int3   
   140006c5f:	int3   
   140006c60:	rex push rbx
   140006c62:	sub    rsp,0x20
   140006c66:	mov    rbx,rdx
   140006c69:	lea    rdx,[rcx+0x20]
   140006c6d:	mov    DWORD PTR [rsp+0x30],0x0
   140006c75:	mov    rcx,rbx
   140006c78:	call   0x140004550
   140006c7d:	mov    rax,rbx
   140006c80:	add    rsp,0x20
   140006c84:	pop    rbx
   140006c85:	ret    
   140006c86:	int3   
   140006c87:	int3   
   140006c88:	int3   
   140006c89:	int3   
   140006c8a:	int3   
   140006c8b:	int3   
   140006c8c:	int3   
   140006c8d:	int3   
   140006c8e:	int3   
   140006c8f:	int3   
   140006c90:	cmp    rdx,r8
   140006c93:	je     0x140006d22
   140006c99:	push   rdi
   140006c9a:	sub    rsp,0x30
   140006c9e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006ca7:	mov    QWORD PTR [rsp+0x40],rbx
   140006cac:	mov    QWORD PTR [rsp+0x50],rsi
   140006cb1:	mov    rbx,r8
   140006cb4:	mov    rsi,rdx
   140006cb7:	nop    WORD PTR [rax+rax*1+0x0]
   140006cc0:	sub    rbx,0x8
   140006cc4:	mov    rdi,QWORD PTR [rbx]
   140006cc7:	mov    QWORD PTR [rsp+0x48],rdi
   140006ccc:	test   rdi,rdi
   140006ccf:	je     0x140006d0e
   140006cd1:	lea    rcx,[rdi+0x28]
   140006cd5:	call   QWORD PTR [rip+0x1494d]        # 0x14001b628
   140006cdb:	nop
   140006cdc:	lea    rcx,[rdi+0x20]
   140006ce0:	call   0x140002880
   140006ce5:	nop
   140006ce6:	lea    rcx,[rdi+0x18]
   140006cea:	call   QWORD PTR [rip+0x14930]        # 0x14001b620
   140006cf0:	nop
   140006cf1:	lea    rcx,[rdi+0x10]
   140006cf5:	call   QWORD PTR [rip+0x14925]        # 0x14001b620
   140006cfb:	nop
   140006cfc:	lea    rcx,[rdi+0x8]
   140006d00:	call   QWORD PTR [rip+0x1491a]        # 0x14001b620
   140006d06:	mov    rcx,rdi
   140006d09:	call   0x140013f3e
   140006d0e:	cmp    rbx,rsi
   140006d11:	jne    0x140006cc0
   140006d13:	mov    rbx,QWORD PTR [rsp+0x40]
   140006d18:	mov    rsi,QWORD PTR [rsp+0x50]
   140006d1d:	add    rsp,0x30
   140006d21:	pop    rdi
   140006d22:	repz ret 
   140006d24:	int3   
   140006d25:	int3   
   140006d26:	int3   
   140006d27:	int3   
   140006d28:	int3   
   140006d29:	int3   
   140006d2a:	int3   
   140006d2b:	int3   
   140006d2c:	int3   
   140006d2d:	int3   
   140006d2e:	int3   
   140006d2f:	int3   
   140006d30:	mov    QWORD PTR [rsp+0x10],rdx
   140006d35:	push   rdi
   140006d36:	sub    rsp,0x30
   140006d3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006d43:	mov    QWORD PTR [rsp+0x40],rbx
   140006d48:	mov    QWORD PTR [rsp+0x58],rsi
   140006d4d:	mov    rdi,r9
   140006d50:	mov    rsi,r8
   140006d53:	mov    rbx,rdx
   140006d56:	mov    QWORD PTR [rsp+0x50],rdx
   140006d5b:	nop    DWORD PTR [rax+rax*1+0x0]
   140006d60:	cmp    rbx,rsi
   140006d63:	je     0x140006d9a
   140006d65:	mov    ecx,0x48
   140006d6a:	call   0x140014010
   140006d6f:	mov    QWORD PTR [rsp+0x28],rax
   140006d74:	test   rax,rax
   140006d77:	je     0x140006d86
   140006d79:	mov    rdx,QWORD PTR [rdi]
   140006d7c:	mov    rcx,rax
   140006d7f:	call   0x140009700
   140006d84:	jmp    0x140006d88
   140006d86:	xor    eax,eax
   140006d88:	mov    QWORD PTR [rbx],rax
   140006d8b:	add    rbx,0x8
   140006d8f:	mov    QWORD PTR [rsp+0x50],rbx
   140006d94:	add    rdi,0x8
   140006d98:	jmp    0x140006d60
   140006d9a:	mov    rbx,QWORD PTR [rsp+0x40]
   140006d9f:	mov    rsi,QWORD PTR [rsp+0x58]
   140006da4:	add    rsp,0x30
   140006da8:	pop    rdi
   140006da9:	ret    
   140006daa:	int3   
   140006dab:	int3   
   140006dac:	int3   
   140006dad:	int3   
   140006dae:	int3   
   140006daf:	int3   
   140006db0:	mov    QWORD PTR [rsp+0x8],rcx
   140006db5:	push   rdi
   140006db6:	sub    rsp,0x30
   140006dba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006dc3:	mov    QWORD PTR [rsp+0x48],rbx
   140006dc8:	mov    rdi,rdx
   140006dcb:	mov    rbx,rcx
   140006dce:	mov    rax,QWORD PTR [rdx]
   140006dd1:	mov    QWORD PTR [rcx],rax
   140006dd4:	mov    ecx,DWORD PTR [rax]
   140006dd6:	test   ecx,ecx
   140006dd8:	je     0x140006de5
   140006dda:	cmp    ecx,0xffffffff
   140006ddd:	je     0x140006e1c
   140006ddf:	lock add DWORD PTR [rax],0x1
   140006de3:	jmp    0x140006e1c
   140006de5:	mov    edx,DWORD PTR [rax+0x4]
   140006de8:	mov    rcx,rbx
   140006deb:	call   QWORD PTR [rip+0x14547]        # 0x14001b338
   140006df1:	nop
   140006df2:	mov    rcx,QWORD PTR [rdi]
   140006df5:	movsxd rax,DWORD PTR [rcx+0x8]
   140006df9:	lea    r9,[rcx+rax*8+0x10]
   140006dfe:	mov    rcx,QWORD PTR [rbx]
   140006e01:	movsxd rax,DWORD PTR [rcx+0xc]
   140006e05:	lea    r8,[rcx+rax*8+0x10]
   140006e0a:	movsxd rax,DWORD PTR [rcx+0x8]
   140006e0e:	lea    rdx,[rcx+rax*8+0x10]
   140006e13:	mov    rcx,rbx
   140006e16:	call   0x140006d30
   140006e1b:	nop
   140006e1c:	mov    rax,rbx
   140006e1f:	mov    rbx,QWORD PTR [rsp+0x48]
   140006e24:	add    rsp,0x30
   140006e28:	pop    rdi
   140006e29:	ret    
   140006e2a:	int3   
   140006e2b:	int3   
   140006e2c:	int3   
   140006e2d:	int3   
   140006e2e:	int3   
   140006e2f:	int3   
   140006e30:	sub    rsp,0x28
   140006e34:	mov    rdx,QWORD PTR [rcx]
   140006e37:	mov    eax,DWORD PTR [rdx]
   140006e39:	test   eax,eax
   140006e3b:	je     0x140006e4d
   140006e3d:	cmp    eax,0xffffffff
   140006e40:	je     0x140006e7a
   140006e42:	lock add DWORD PTR [rdx],0xffffffff
   140006e46:	setne  al
   140006e49:	test   al,al
   140006e4b:	jne    0x140006e7a
   140006e4d:	mov    QWORD PTR [rsp+0x20],rbx
   140006e52:	mov    rbx,QWORD PTR [rcx]
   140006e55:	movsxd rax,DWORD PTR [rbx+0xc]
   140006e59:	lea    r8,[rbx+rax*8+0x10]
   140006e5e:	movsxd rax,DWORD PTR [rbx+0x8]
   140006e62:	lea    rdx,[rbx+rax*8+0x10]
   140006e67:	call   0x140006c90
   140006e6c:	mov    rcx,rbx
   140006e6f:	call   QWORD PTR [rip+0x1441b]        # 0x14001b290
   140006e75:	mov    rbx,QWORD PTR [rsp+0x20]
   140006e7a:	add    rsp,0x28
   140006e7e:	ret    
   140006e7f:	int3   
   140006e80:	rex push rsi
   140006e82:	push   rdi
   140006e83:	push   r12
   140006e85:	sub    rsp,0x30
   140006e89:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006e92:	mov    QWORD PTR [rsp+0x60],rbx
   140006e97:	mov    QWORD PTR [rsp+0x68],rbp
   140006e9c:	mov    rbp,rcx
   140006e9f:	mov    rax,QWORD PTR [rdx]
   140006ea2:	cmp    QWORD PTR [rcx],rax
   140006ea5:	je     0x140006f81
   140006eab:	lea    rcx,[rsp+0x50]
   140006eb0:	call   0x140006db0
   140006eb5:	lea    r11,[rsp+0x50]
   140006eba:	cmp    r11,rbp
   140006ebd:	je     0x140006ed3
   140006ebf:	mov    rax,QWORD PTR [rsp+0x50]
   140006ec4:	mov    rsi,QWORD PTR [rbp+0x0]
   140006ec8:	mov    QWORD PTR [rsp+0x50],rsi
   140006ecd:	mov    QWORD PTR [rbp+0x0],rax
   140006ed1:	jmp    0x140006ed8
   140006ed3:	mov    rsi,QWORD PTR [rsp+0x50]
   140006ed8:	mov    eax,DWORD PTR [rsi]
   140006eda:	test   eax,eax
   140006edc:	je     0x140006f05
   140006ede:	cmp    eax,0xffffffff
   140006ee1:	je     0x140006efd
   140006ee3:	lock add DWORD PTR [rsi],0xffffffff
   140006ee7:	setne  al
   140006eea:	test   al,al
   140006eec:	jne    0x140006ef5
   140006eee:	mov    rsi,QWORD PTR [rsp+0x50]
   140006ef3:	jmp    0x140006f05
   140006ef5:	mov    rax,rbp
   140006ef8:	jmp    0x140006f84
   140006efd:	mov    rax,rbp
   140006f00:	jmp    0x140006f84
   140006f05:	movsxd rax,DWORD PTR [rsi+0xc]
   140006f09:	lea    rbx,[rsi+rax*8+0x10]
   140006f0e:	movsxd rax,DWORD PTR [rsi+0x8]
   140006f12:	lea    r12,[rsi+rax*8+0x10]
   140006f17:	cmp    r12,rbx
   140006f1a:	je     0x140006f73
   140006f1c:	nop    DWORD PTR [rax+0x0]
   140006f20:	sub    rbx,0x8
   140006f24:	mov    rdi,QWORD PTR [rbx]
   140006f27:	mov    QWORD PTR [rsp+0x58],rdi
   140006f2c:	test   rdi,rdi
   140006f2f:	je     0x140006f6e
   140006f31:	lea    rcx,[rdi+0x28]
   140006f35:	call   QWORD PTR [rip+0x146ed]        # 0x14001b628
   140006f3b:	nop
   140006f3c:	lea    rcx,[rdi+0x20]
   140006f40:	call   0x140002880
   140006f45:	nop
   140006f46:	lea    rcx,[rdi+0x18]
   140006f4a:	call   QWORD PTR [rip+0x146d0]        # 0x14001b620
   140006f50:	nop
   140006f51:	lea    rcx,[rdi+0x10]
   140006f55:	call   QWORD PTR [rip+0x146c5]        # 0x14001b620
   140006f5b:	nop
   140006f5c:	lea    rcx,[rdi+0x8]
   140006f60:	call   QWORD PTR [rip+0x146ba]        # 0x14001b620
   140006f66:	mov    rcx,rdi
   140006f69:	call   0x140013f3e
   140006f6e:	cmp    rbx,r12
   140006f71:	jne    0x140006f20
   140006f73:	mov    rcx,rsi
   140006f76:	call   QWORD PTR [rip+0x14314]        # 0x14001b290
   140006f7c:	mov    rax,rbp
   140006f7f:	jmp    0x140006f84
   140006f81:	mov    rax,rbp
   140006f84:	mov    rbx,QWORD PTR [rsp+0x60]
   140006f89:	mov    rbp,QWORD PTR [rsp+0x68]
   140006f8e:	add    rsp,0x30
   140006f92:	pop    r12
   140006f94:	pop    rdi
   140006f95:	pop    rsi
   140006f96:	ret    
   140006f97:	int3   
   140006f98:	int3   
   140006f99:	int3   
   140006f9a:	int3   
   140006f9b:	int3   
   140006f9c:	int3   
   140006f9d:	int3   
   140006f9e:	int3   
   140006f9f:	int3   
   140006fa0:	mov    QWORD PTR [rsp+0x8],rcx
   140006fa5:	push   rdi
   140006fa6:	sub    rsp,0x30
   140006faa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006fb3:	mov    QWORD PTR [rsp+0x48],rbx
   140006fb8:	mov    QWORD PTR [rsp+0x58],rsi
   140006fbd:	mov    rdi,rcx
   140006fc0:	mov    r8,QWORD PTR [rcx]
   140006fc3:	movsxd rax,DWORD PTR [r8+0x8]
   140006fc7:	lea    rsi,[r8+rax*8+0x10]
   140006fcc:	call   QWORD PTR [rip+0x14366]        # 0x14001b338
   140006fd2:	mov    rbx,rax
   140006fd5:	mov    QWORD PTR [rsp+0x50],rax
   140006fda:	mov    rdx,QWORD PTR [rdi]
   140006fdd:	movsxd rcx,DWORD PTR [rdx+0xc]
   140006fe1:	lea    r8,[rdx+rcx*8+0x10]
   140006fe6:	movsxd rcx,DWORD PTR [rdx+0x8]
   140006fea:	lea    rdx,[rdx+rcx*8+0x10]
   140006fef:	mov    r9,rsi
   140006ff2:	mov    rcx,rdi
   140006ff5:	call   0x140006d30
   140006ffa:	nop
   140006ffb:	mov    eax,DWORD PTR [rbx]
   140006ffd:	test   eax,eax
   140006fff:	je     0x140007011
   140007001:	cmp    eax,0xffffffff
   140007004:	je     0x140007034
   140007006:	lock add DWORD PTR [rbx],0xffffffff
   14000700a:	setne  al
   14000700d:	test   al,al
   14000700f:	jne    0x140007034
   140007011:	movsxd rax,DWORD PTR [rbx+0xc]
   140007015:	lea    r8,[rbx+rax*8+0x10]
   14000701a:	movsxd rax,DWORD PTR [rbx+0x8]
   14000701e:	lea    rdx,[rbx+rax*8+0x10]
   140007023:	mov    rcx,rdi
   140007026:	call   0x140006c90
   14000702b:	mov    rcx,rbx
   14000702e:	call   QWORD PTR [rip+0x1425c]        # 0x14001b290
   140007034:	mov    rbx,QWORD PTR [rsp+0x48]
   140007039:	mov    rsi,QWORD PTR [rsp+0x58]
   14000703e:	add    rsp,0x30
   140007042:	pop    rdi
   140007043:	ret    
   140007044:	int3   
   140007045:	int3   
   140007046:	int3   
   140007047:	int3   
   140007048:	int3   
   140007049:	int3   
   14000704a:	int3   
   14000704b:	int3   
   14000704c:	int3   
   14000704d:	int3   
   14000704e:	int3   
   14000704f:	int3   
   140007050:	mov    rax,rsp
   140007053:	mov    BYTE PTR [rax+0x20],r9b
   140007057:	mov    QWORD PTR [rax+0x18],r8
   14000705b:	mov    QWORD PTR [rax+0x8],rcx
   14000705f:	push   rbp
   140007060:	push   rsi
   140007061:	push   rdi
   140007062:	push   r12
   140007064:	push   r13
   140007066:	push   r14
   140007068:	push   r15
   14000706a:	sub    rsp,0x2c0
   140007071:	mov    QWORD PTR [rsp+0x220],0xfffffffffffffffe
   14000707d:	mov    QWORD PTR [rax+0x10],rbx
   140007081:	mov    rsi,r8
   140007084:	mov    r15,rdx
   140007087:	mov    rbx,rcx
   14000708a:	xor    r14d,r14d
   14000708d:	mov    DWORD PTR [rsp+0x5c],r14d
   140007092:	xor    ebp,ebp
   140007094:	mov    DWORD PTR [rsp+0x64],ebp
   140007098:	xor    r12d,r12d
   14000709b:	mov    DWORD PTR [rsp+0x60],r12d
   1400070a0:	xor    r13d,r13d
   1400070a3:	mov    DWORD PTR [rsp+0x58],r13d
   1400070a8:	mov    DWORD PTR [rsp+0x68],ebp
   1400070ac:	xor    edi,edi
   1400070ae:	mov    DWORD PTR [rsp+0x5c],edi
   1400070b2:	lea    rdx,[rsp+0x50]
   1400070b7:	call   0x14000a490
   1400070bc:	nop
   1400070bd:	lea    rdx,[rsp+0x1b8]
   1400070c5:	mov    rcx,rbx
   1400070c8:	call   0x140008b00
   1400070cd:	nop
   1400070ce:	mov    rdx,rax
   1400070d1:	mov    rcx,rsi
   1400070d4:	call   0x140008b60
   1400070d9:	nop
   1400070da:	lea    rcx,[rsp+0x1b8]
   1400070e2:	call   QWORD PTR [rip+0x14540]        # 0x14001b628
   1400070e8:	lea    rdx,[rsp+0x198]
   1400070f0:	mov    rcx,rbx
   1400070f3:	call   0x140008b30
   1400070f8:	nop
   1400070f9:	mov    rdx,rax
   1400070fc:	mov    rcx,rsi
   1400070ff:	call   0x140008b70
   140007104:	nop
   140007105:	lea    rcx,[rsp+0x198]
   14000710d:	call   QWORD PTR [rip+0x14515]        # 0x14001b628
   140007113:	mov    rdx,QWORD PTR [rsp+0x50]
   140007118:	mov    eax,DWORD PTR [rdx]
   14000711a:	cmp    eax,0x1
   14000711d:	je     0x140007135
   14000711f:	test   eax,eax
   140007121:	je     0x140007135
   140007123:	mov    edx,DWORD PTR [rdx+0x4]
   140007126:	lea    rcx,[rsp+0x50]
   14000712b:	call   0x140006fa0
   140007130:	mov    rdx,QWORD PTR [rsp+0x50]
   140007135:	movsxd rax,DWORD PTR [rdx+0x8]
   140007139:	lea    rbx,[rdx+rax*8+0x10]
   14000713e:	xchg   ax,ax
   140007140:	mov    eax,DWORD PTR [rdx]
   140007142:	cmp    eax,0x1
   140007145:	je     0x14000715d
   140007147:	test   eax,eax
   140007149:	je     0x14000715d
   14000714b:	mov    edx,DWORD PTR [rdx+0x4]
   14000714e:	lea    rcx,[rsp+0x50]
   140007153:	call   0x140006fa0
   140007158:	mov    rdx,QWORD PTR [rsp+0x50]
   14000715d:	movsxd rax,DWORD PTR [rdx+0xc]
   140007161:	lea    rax,[rdx+rax*8+0x10]
   140007166:	cmp    rbx,rax
   140007169:	je     0x140007857
   14000716f:	mov    rdx,QWORD PTR [rbx]
   140007172:	lea    rcx,[rsp+0x70]
   140007177:	call   0x140009700
   14000717c:	nop
   14000717d:	lea    rcx,[rsp+0x80]
   140007185:	call   QWORD PTR [rip+0x1418d]        # 0x14001b318
   14000718b:	test   al,al
   14000718d:	je     0x140007193
   14000718f:	xor    eax,eax
   140007191:	jmp    0x1400071a1
   140007193:	lea    rcx,[rsp+0x80]
   14000719b:	call   QWORD PTR [rip+0x14077]        # 0x14001b218
   1400071a1:	or     r8d,0xffffffff
   1400071a5:	mov    rdx,rax
   1400071a8:	lea    rcx,[rsp+0x1a8]
   1400071b0:	call   QWORD PTR [rip+0x14452]        # 0x14001b608
   1400071b6:	mov    rcx,QWORD PTR [rax]
   1400071b9:	cmp    DWORD PTR [rcx+0x4],0x0
   1400071bd:	setne  dil
   1400071c1:	lea    rcx,[rsp+0x1a8]
   1400071c9:	call   QWORD PTR [rip+0x14451]        # 0x14001b620
   1400071cf:	test   dil,dil
   1400071d2:	je     0x1400077ac
   1400071d8:	lea    rcx,[rsp+0x88]
   1400071e0:	call   QWORD PTR [rip+0x14132]        # 0x14001b318
   1400071e6:	test   al,al
   1400071e8:	je     0x1400071ee
   1400071ea:	xor    esi,esi
   1400071ec:	jmp    0x1400071ff
   1400071ee:	lea    rcx,[rsp+0x88]
   1400071f6:	call   QWORD PTR [rip+0x1401c]        # 0x14001b218
   1400071fc:	mov    rsi,rax
   1400071ff:	lea    rcx,[rsp+0x80]
   140007207:	call   QWORD PTR [rip+0x1410b]        # 0x14001b318
   14000720d:	test   al,al
   14000720f:	je     0x140007215
   140007211:	xor    edi,edi
   140007213:	jmp    0x140007226
   140007215:	lea    rcx,[rsp+0x80]
   14000721d:	call   QWORD PTR [rip+0x13ff5]        # 0x14001b218
   140007223:	mov    rdi,rax
   140007226:	lea    rcx,[rsp+0x78]
   14000722b:	call   QWORD PTR [rip+0x140e7]        # 0x14001b318
   140007231:	test   al,al
   140007233:	je     0x140007239
   140007235:	xor    eax,eax
   140007237:	jmp    0x140007244
   140007239:	lea    rcx,[rsp+0x78]
   14000723e:	call   QWORD PTR [rip+0x13fd4]        # 0x14001b218
   140007244:	mov    QWORD PTR [rsp+0x20],rsi
   140007249:	mov    r9,rdi
   14000724c:	mov    r8,rax
   14000724f:	lea    rdx,[rsp+0x130]
   140007257:	mov    rcx,r15
   14000725a:	call   0x1400098b0
   14000725f:	nop
   140007260:	lea    rcx,[rsp+0x140]
   140007268:	call   QWORD PTR [rip+0x140aa]        # 0x14001b318
   14000726e:	test   al,al
   140007270:	je     0x140007650
   140007276:	cmp    DWORD PTR [rsp+0x160],0xffffffff
   14000727e:	jne    0x140007650
   140007284:	mov    rcx,QWORD PTR [rsp+0x150]
   14000728c:	mov    eax,DWORD PTR [rcx+0x8]
   14000728f:	cmp    DWORD PTR [rcx+0xc],eax
   140007292:	jne    0x140007650
   140007298:	lea    rdx,[rsp+0x180]
   1400072a0:	lea    rcx,[rsp+0x70]
   1400072a5:	call   0x140006bd0
   1400072aa:	mov    rsi,rax
   1400072ad:	mov    ebp,DWORD PTR [rsp+0xa0]
   1400072b4:	lea    rcx,[rsp+0x88]
   1400072bc:	call   QWORD PTR [rip+0x14056]        # 0x14001b318
   1400072c2:	test   al,al
   1400072c4:	je     0x1400072ca
   1400072c6:	xor    edi,edi
   1400072c8:	jmp    0x1400072db
   1400072ca:	lea    rcx,[rsp+0x88]
   1400072d2:	call   QWORD PTR [rip+0x13f40]        # 0x14001b218
   1400072d8:	mov    rdi,rax
   1400072db:	lea    rcx,[rsp+0x78]
   1400072e0:	call   QWORD PTR [rip+0x14032]        # 0x14001b318
   1400072e6:	test   al,al
   1400072e8:	je     0x1400072ee
   1400072ea:	xor    eax,eax
   1400072ec:	jmp    0x1400072f9
   1400072ee:	lea    rcx,[rsp+0x78]
   1400072f3:	call   QWORD PTR [rip+0x13f1f]        # 0x14001b218
   1400072f9:	mov    DWORD PTR [rsp+0x28],ebp
   1400072fd:	mov    QWORD PTR [rsp+0x20],rsi
   140007302:	mov    r9,rdi
   140007305:	mov    r8,rax
   140007308:	lea    rdx,[rsp+0x228]
   140007310:	mov    rcx,r15
   140007313:	call   0x140009b10
   140007318:	nop
   140007319:	mov    rdx,rax
   14000731c:	lea    rcx,[rsp+0x130]
   140007324:	call   0x140008990
   140007329:	nop
   14000732a:	lea    rcx,[rsp+0x250]
   140007332:	call   QWORD PTR [rip+0x142f0]        # 0x14001b628
   140007338:	nop
   140007339:	lea    rcx,[rsp+0x248]
   140007341:	call   0x140002880
   140007346:	nop
   140007347:	lea    rcx,[rsp+0x240]
   14000734f:	call   QWORD PTR [rip+0x142cb]        # 0x14001b620
   140007355:	nop
   140007356:	lea    rcx,[rsp+0x238]
   14000735e:	call   QWORD PTR [rip+0x142bc]        # 0x14001b620
   140007364:	nop
   140007365:	lea    rcx,[rsp+0x230]
   14000736d:	call   QWORD PTR [rip+0x142ad]        # 0x14001b620
   140007373:	nop
   140007374:	lea    rcx,[rsp+0x180]
   14000737c:	call   QWORD PTR [rip+0x142a6]        # 0x14001b628
   140007382:	lea    rcx,[rsp+0x140]
   14000738a:	call   QWORD PTR [rip+0x13f88]        # 0x14001b318
   140007390:	test   al,al
   140007392:	je     0x1400073cd
   140007394:	cmp    DWORD PTR [rsp+0x160],0xffffffff
   14000739c:	jne    0x1400073cd
   14000739e:	mov    rcx,QWORD PTR [rsp+0x150]
   1400073a6:	mov    eax,DWORD PTR [rcx+0x8]
   1400073a9:	cmp    DWORD PTR [rcx+0xc],eax
   1400073ac:	jne    0x1400073cd
   1400073ae:	mov    edi,0x2
   1400073b3:	cmp    DWORD PTR [rsp+0xac],edi
   1400073ba:	je     0x1400076e7
   1400073c0:	inc    r13d
   1400073c3:	mov    DWORD PTR [rsp+0x58],r13d
   1400073c8:	jmp    0x1400076e7
   1400073cd:	lea    rcx,[rsp+0x80]
   1400073d5:	call   QWORD PTR [rip+0x13f3d]        # 0x14001b318
   1400073db:	test   al,al
   1400073dd:	je     0x1400073e4
   1400073df:	xor    r8d,r8d
   1400073e2:	jmp    0x14000740d
   1400073e4:	lea    rcx,[rsp+0x80]
   1400073ec:	call   QWORD PTR [rip+0x13e26]        # 0x14001b218
   1400073f2:	mov    r8,rax
   1400073f5:	test   rax,rax
   1400073f8:	je     0x14000740d
   1400073fa:	xor    eax,eax
   1400073fc:	or     rcx,0xffffffffffffffff
   140007400:	mov    rdi,r8
   140007403:	repnz scas al,BYTE PTR es:[rdi]
   140007405:	not    rcx
   140007408:	dec    rcx
   14000740b:	jmp    0x140007410
   14000740d:	or     ecx,0xffffffff
   140007410:	mov    edx,ecx
   140007412:	mov    rcx,r8
   140007415:	call   QWORD PTR [rip+0x141fd]        # 0x14001b618
   14000741b:	mov    QWORD PTR [rsp+0xc0],rax
   140007423:	lea    rcx,[rsp+0x140]
   14000742b:	call   QWORD PTR [rip+0x13ee7]        # 0x14001b318
   140007431:	test   al,al
   140007433:	je     0x140007439
   140007435:	xor    eax,eax
   140007437:	jmp    0x140007447
   140007439:	lea    rcx,[rsp+0x140]
   140007441:	call   QWORD PTR [rip+0x13dd1]        # 0x14001b218
   140007447:	mov    rdx,rax
   14000744a:	lea    rcx,[rsp+0xc0]
   140007452:	call   0x1400136c0
   140007457:	cmp    eax,0xbe
   14000745c:	setge  dil
   140007460:	lea    rcx,[rsp+0xc0]
   140007468:	call   QWORD PTR [rip+0x141ba]        # 0x14001b628
   14000746e:	test   dil,dil
   140007471:	je     0x14000762d
   140007477:	lea    rdx,[rsp+0xd8]
   14000747f:	lea    rcx,[rsp+0x70]
   140007484:	call   0x140006c60
   140007489:	mov    rbp,rax
   14000748c:	lea    rdx,[rsp+0x190]
   140007494:	lea    rcx,[rsp+0x70]
   140007499:	call   0x140006bd0
   14000749e:	mov    r12,rax
   1400074a1:	mov    r13d,DWORD PTR [rsp+0xa0]
   1400074a9:	lea    rcx,[rsp+0x88]
   1400074b1:	call   QWORD PTR [rip+0x13e61]        # 0x14001b318
   1400074b7:	test   al,al
   1400074b9:	je     0x1400074bf
   1400074bb:	xor    esi,esi
   1400074bd:	jmp    0x1400074d0
   1400074bf:	lea    rcx,[rsp+0x88]
   1400074c7:	call   QWORD PTR [rip+0x13d4b]        # 0x14001b218
   1400074cd:	mov    rsi,rax
   1400074d0:	lea    rcx,[rsp+0x140]
   1400074d8:	call   QWORD PTR [rip+0x13e3a]        # 0x14001b318
   1400074de:	test   al,al
   1400074e0:	je     0x1400074e6
   1400074e2:	xor    edi,edi
   1400074e4:	jmp    0x1400074f7
   1400074e6:	lea    rcx,[rsp+0x140]
   1400074ee:	call   QWORD PTR [rip+0x13d24]        # 0x14001b218
   1400074f4:	mov    rdi,rax
   1400074f7:	lea    rcx,[rsp+0x78]
   1400074fc:	call   QWORD PTR [rip+0x13e16]        # 0x14001b318
   140007502:	test   al,al
   140007504:	je     0x14000750a
   140007506:	xor    eax,eax
   140007508:	jmp    0x140007515
   14000750a:	lea    rcx,[rsp+0x78]
   14000750f:	call   QWORD PTR [rip+0x13d03]        # 0x14001b218
   140007515:	mov    BYTE PTR [rsp+0x48],0x0
   14000751a:	mov    DWORD PTR [rsp+0x40],0x0
   140007522:	mov    BYTE PTR [rsp+0x38],0x0
   140007527:	mov    QWORD PTR [rsp+0x30],rbp
   14000752c:	mov    DWORD PTR [rsp+0x28],r13d
   140007531:	mov    QWORD PTR [rsp+0x20],r12
   140007536:	mov    r9,rsi
   140007539:	mov    r8,rdi
   14000753c:	mov    rdx,rax
   14000753f:	lea    rcx,[rsp+0x270]
   140007547:	call   0x140009630
   14000754c:	nop
   14000754d:	mov    rdx,rax
   140007550:	lea    rcx,[rsp+0x70]
   140007555:	call   0x140008990
   14000755a:	nop
   14000755b:	lea    rcx,[rsp+0x298]
   140007563:	call   QWORD PTR [rip+0x140bf]        # 0x14001b628
   140007569:	nop
   14000756a:	lea    rcx,[rsp+0x290]
   140007572:	call   0x140002880
   140007577:	nop
   140007578:	lea    rcx,[rsp+0x288]
   140007580:	call   QWORD PTR [rip+0x1409a]        # 0x14001b620
   140007586:	nop
   140007587:	lea    rcx,[rsp+0x280]
   14000758f:	call   QWORD PTR [rip+0x1408b]        # 0x14001b620
   140007595:	nop
   140007596:	lea    rcx,[rsp+0x278]
   14000759e:	call   QWORD PTR [rip+0x1407c]        # 0x14001b620
   1400075a4:	nop
   1400075a5:	lea    rcx,[rsp+0x190]
   1400075ad:	call   QWORD PTR [rip+0x14075]        # 0x14001b628
   1400075b3:	nop
   1400075b4:	mov    rsi,QWORD PTR [rsp+0xd8]
   1400075bc:	mov    eax,DWORD PTR [rsi]
   1400075be:	test   eax,eax
   1400075c0:	je     0x1400075da
   1400075c2:	cmp    eax,0xffffffff
   1400075c5:	je     0x14000760c
   1400075c7:	lock add DWORD PTR [rsi],0xffffffff
   1400075cb:	setne  al
   1400075ce:	test   al,al
   1400075d0:	jne    0x14000760c
   1400075d2:	mov    rsi,QWORD PTR [rsp+0xd8]
   1400075da:	movsxd rax,DWORD PTR [rsi+0xc]
   1400075de:	lea    rdi,[rsi+rax*8+0x10]
   1400075e3:	movsxd rax,DWORD PTR [rsi+0x8]
   1400075e7:	lea    rbp,[rsi+rax*8+0x10]
   1400075ec:	cmp    rbp,rdi
   1400075ef:	je     0x140007603
   1400075f1:	sub    rdi,0x8
   1400075f5:	mov    rcx,rdi
   1400075f8:	call   QWORD PTR [rip+0x1402a]        # 0x14001b628
   1400075fe:	cmp    rdi,rbp
   140007601:	jne    0x1400075f1
   140007603:	mov    rcx,rsi
   140007606:	call   QWORD PTR [rip+0x13c84]        # 0x14001b290
   14000760c:	movzx  eax,BYTE PTR [rsp+0x170]
   140007614:	mov    BYTE PTR [rsp+0xb0],al
   14000761b:	xor    edi,edi
   14000761d:	inc    DWORD PTR [rsp+0x5c]
   140007621:	mov    r12d,DWORD PTR [rsp+0x60]
   140007626:	mov    r13d,DWORD PTR [rsp+0x58]
   14000762b:	jmp    0x140007643
   14000762d:	mov    edi,0x2
   140007632:	cmp    DWORD PTR [rsp+0xac],edi
   140007639:	je     0x140007643
   14000763b:	inc    r13d
   14000763e:	mov    DWORD PTR [rsp+0x58],r13d
   140007643:	inc    r12d
   140007646:	mov    DWORD PTR [rsp+0x60],r12d
   14000764b:	jmp    0x1400076e2
   140007650:	mov    eax,DWORD PTR [rsp+0xac]
   140007657:	test   eax,eax
   140007659:	je     0x140007689
   14000765b:	cmp    eax,0x2
   14000765e:	je     0x14000767d
   140007660:	xor    edi,edi
   140007662:	movzx  eax,BYTE PTR [rsp+0x170]
   14000766a:	cmp    BYTE PTR [rsp+0xb0],al
   140007671:	sete   dil
   140007675:	inc    ebp
   140007677:	mov    DWORD PTR [rsp+0x64],ebp
   14000767b:	jmp    0x140007691
   14000767d:	xor    edi,edi
   14000767f:	inc    r12d
   140007682:	mov    DWORD PTR [rsp+0x60],r12d
   140007687:	jmp    0x140007691
   140007689:	xor    edi,edi
   14000768b:	inc    ebp
   14000768d:	mov    DWORD PTR [rsp+0x64],ebp
   140007691:	lea    rdx,[rsp+0x1c0]
   140007699:	lea    rcx,[rsp+0x130]
   1400076a1:	call   0x140006bd0
   1400076a6:	mov    rdx,rax
   1400076a9:	lea    rcx,[rsp+0x98]
   1400076b1:	call   QWORD PTR [rip+0x13c21]        # 0x14001b2d8
   1400076b7:	lea    rcx,[rsp+0x1c0]
   1400076bf:	call   QWORD PTR [rip+0x13f63]        # 0x14001b628
   1400076c5:	mov    edx,DWORD PTR [rsp+0x160]
   1400076cc:	mov    DWORD PTR [rsp+0xa0],edx
   1400076d3:	movzx  eax,BYTE PTR [rsp+0x170]
   1400076db:	mov    BYTE PTR [rsp+0xb0],al
   1400076e2:	cmp    edi,0x2
   1400076e5:	jne    0x140007748
   1400076e7:	mov    rax,QWORD PTR [rsp+0x90]
   1400076ef:	mov    ecx,DWORD PTR [rax+0xc]
   1400076f2:	sub    ecx,DWORD PTR [rax+0x8]
   1400076f5:	cmp    ecx,0x1
   1400076f8:	jg     0x140007724
   1400076fa:	xor    r8d,r8d
   1400076fd:	lea    rdx,[rsp+0x1a0]
   140007705:	lea    rcx,[rsp+0x90]
   14000770d:	call   0x140006c00
   140007712:	or     r14d,0x1
   140007716:	mov    rax,QWORD PTR [rax]
   140007719:	cmp    DWORD PTR [rax+0x4],0x0
   14000771d:	jne    0x140007724
   14000771f:	xor    sil,sil
   140007722:	jmp    0x140007727
   140007724:	mov    sil,0x1
   140007727:	test   r14b,0x1
   14000772b:	je     0x14000773f
   14000772d:	and    r14d,0xfffffffe
   140007731:	lea    rcx,[rsp+0x1a0]
   140007739:	call   QWORD PTR [rip+0x13ee9]        # 0x14001b628
   14000773f:	test   sil,sil
   140007742:	jne    0x140007748
   140007744:	inc    DWORD PTR [rsp+0x68]
   140007748:	mov    DWORD PTR [rsp+0xac],edi
   14000774f:	lea    rdx,[rsp+0x70]
   140007754:	mov    rcx,QWORD PTR [rsp+0x310]
   14000775c:	call   0x14000a9f0
   140007761:	nop
   140007762:	lea    rcx,[rsp+0x158]
   14000776a:	call   QWORD PTR [rip+0x13eb8]        # 0x14001b628
   140007770:	nop
   140007771:	lea    rcx,[rsp+0x150]
   140007779:	call   0x140002880
   14000777e:	nop
   14000777f:	lea    rcx,[rsp+0x148]
   140007787:	call   QWORD PTR [rip+0x13e93]        # 0x14001b620
   14000778d:	nop
   14000778e:	lea    rcx,[rsp+0x140]
   140007796:	call   QWORD PTR [rip+0x13e84]        # 0x14001b620
   14000779c:	nop
   14000779d:	lea    rcx,[rsp+0x138]
   1400077a5:	call   QWORD PTR [rip+0x13e75]        # 0x14001b620
   1400077ab:	nop
   1400077ac:	lea    rcx,[rsp+0x98]
   1400077b4:	call   QWORD PTR [rip+0x13e6e]        # 0x14001b628
   1400077ba:	nop
   1400077bb:	mov    rsi,QWORD PTR [rsp+0x90]
   1400077c3:	mov    eax,DWORD PTR [rsi]
   1400077c5:	test   eax,eax
   1400077c7:	je     0x1400077e1
   1400077c9:	cmp    eax,0xffffffff
   1400077cc:	je     0x14000781c
   1400077ce:	lock add DWORD PTR [rsi],0xffffffff
   1400077d2:	setne  al
   1400077d5:	test   al,al
   1400077d7:	jne    0x14000781c
   1400077d9:	mov    rsi,QWORD PTR [rsp+0x90]
   1400077e1:	movsxd rax,DWORD PTR [rsi+0xc]
   1400077e5:	lea    rdi,[rsi+rax*8+0x10]
   1400077ea:	movsxd rax,DWORD PTR [rsi+0x8]
   1400077ee:	lea    rbp,[rsi+rax*8+0x10]
   1400077f3:	cmp    rbp,rdi
   1400077f6:	je     0x140007812
   1400077f8:	nop    DWORD PTR [rax+rax*1+0x0]
   140007800:	sub    rdi,0x8
   140007804:	mov    rcx,rdi
   140007807:	call   QWORD PTR [rip+0x13e1b]        # 0x14001b628
   14000780d:	cmp    rdi,rbp
   140007810:	jne    0x140007800
   140007812:	mov    rcx,rsi
   140007815:	call   QWORD PTR [rip+0x13a75]        # 0x14001b290
   14000781b:	nop
   14000781c:	lea    rcx,[rsp+0x88]
   140007824:	call   QWORD PTR [rip+0x13df6]        # 0x14001b620
   14000782a:	nop
   14000782b:	lea    rcx,[rsp+0x80]
   140007833:	call   QWORD PTR [rip+0x13de7]        # 0x14001b620
   140007839:	nop
   14000783a:	lea    rcx,[rsp+0x78]
   14000783f:	call   QWORD PTR [rip+0x13ddb]        # 0x14001b620
   140007845:	add    rbx,0x8
   140007849:	mov    rdx,QWORD PTR [rsp+0x50]
   14000784e:	mov    ebp,DWORD PTR [rsp+0x64]
   140007852:	jmp    0x140007140
   140007857:	lea    rdx,[rsp+0xd0]
   14000785f:	mov    rcx,r15
   140007862:	call   0x14000a490
   140007867:	nop
   140007868:	mov    rdx,rax
   14000786b:	lea    rcx,[rsp+0x50]
   140007870:	call   0x140006e80
   140007875:	nop
   140007876:	mov    r13,QWORD PTR [rsp+0xd0]
   14000787e:	mov    eax,DWORD PTR [r13+0x0]
   140007882:	test   eax,eax
   140007884:	je     0x1400078a8
   140007886:	cmp    eax,0xffffffff
   140007889:	je     0x140007986
   14000788f:	lock add DWORD PTR [r13+0x0],0xffffffff
   140007895:	setne  al
   140007898:	test   al,al
   14000789a:	jne    0x140007986
   1400078a0:	mov    r13,QWORD PTR [rsp+0xd0]
   1400078a8:	movsxd rax,DWORD PTR [r13+0xc]
   1400078ac:	lea    r12,[r13+rax*8+0x10]
   1400078b1:	movsxd rax,DWORD PTR [r13+0x8]
   1400078b5:	lea    r14,[r13+rax*8+0x10]
   1400078ba:	cmp    r14,r12
   1400078bd:	je     0x14000797d
   1400078c3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400078d0:	sub    r12,0x8
   1400078d4:	mov    rbx,QWORD PTR [r12]
   1400078d8:	mov    QWORD PTR [rsp+0x188],rbx
   1400078e0:	test   rbx,rbx
   1400078e3:	je     0x140007974
   1400078e9:	lea    rcx,[rbx+0x28]
   1400078ed:	call   QWORD PTR [rip+0x13d35]        # 0x14001b628
   1400078f3:	nop
   1400078f4:	mov    rcx,QWORD PTR [rbx+0x20]
   1400078f8:	mov    eax,DWORD PTR [rcx]
   1400078fa:	test   eax,eax
   1400078fc:	je     0x14000790e
   1400078fe:	cmp    eax,0xffffffff
   140007901:	je     0x14000794c
   140007903:	lock add DWORD PTR [rcx],0xffffffff
   140007907:	setne  al
   14000790a:	test   al,al
   14000790c:	jne    0x14000794c
   14000790e:	mov    rbp,QWORD PTR [rbx+0x20]
   140007912:	movsxd rax,DWORD PTR [rbp+0xc]
   140007916:	lea    rdi,[rbp+rax*8+0x10]
   14000791b:	movsxd rax,DWORD PTR [rbp+0x8]
   14000791f:	lea    rsi,[rbp+rax*8+0x10]
   140007924:	cmp    rsi,rdi
   140007927:	je     0x140007942
   140007929:	nop    DWORD PTR [rax+0x0]
   140007930:	sub    rdi,0x8
   140007934:	mov    rcx,rdi
   140007937:	call   QWORD PTR [rip+0x13ceb]        # 0x14001b628
   14000793d:	cmp    rdi,rsi
   140007940:	jne    0x140007930
   140007942:	mov    rcx,rbp
   140007945:	call   QWORD PTR [rip+0x13945]        # 0x14001b290
   14000794b:	nop
   14000794c:	lea    rcx,[rbx+0x18]
   140007950:	call   QWORD PTR [rip+0x13cca]        # 0x14001b620
   140007956:	nop
   140007957:	lea    rcx,[rbx+0x10]
   14000795b:	call   QWORD PTR [rip+0x13cbf]        # 0x14001b620
   140007961:	nop
   140007962:	lea    rcx,[rbx+0x8]
   140007966:	call   QWORD PTR [rip+0x13cb4]        # 0x14001b620
   14000796c:	mov    rcx,rbx
   14000796f:	call   0x140013f3e
   140007974:	cmp    r12,r14
   140007977:	jne    0x1400078d0
   14000797d:	mov    rcx,r13
   140007980:	call   QWORD PTR [rip+0x1390a]        # 0x14001b290
   140007986:	mov    rax,QWORD PTR [rsp+0x50]
   14000798b:	mov    ecx,DWORD PTR [rax]
   14000798d:	cmp    ecx,0x1
   140007990:	je     0x1400079a8
   140007992:	test   ecx,ecx
   140007994:	je     0x1400079a8
   140007996:	mov    edx,DWORD PTR [rax+0x4]
   140007999:	lea    rcx,[rsp+0x50]
   14000799e:	call   0x140006fa0
   1400079a3:	mov    rax,QWORD PTR [rsp+0x50]
   1400079a8:	movsxd rcx,DWORD PTR [rax+0x8]
   1400079ac:	lea    rbx,[rax+rcx*8+0x10]
   1400079b1:	mov    r13d,DWORD PTR [rsp+0x60]
   1400079b6:	mov    r14,QWORD PTR [rsp+0x300]
   1400079be:	xchg   ax,ax
   1400079c0:	mov    ecx,DWORD PTR [rax]
   1400079c2:	cmp    ecx,0x1
   1400079c5:	je     0x1400079dd
   1400079c7:	test   ecx,ecx
   1400079c9:	je     0x1400079dd
   1400079cb:	mov    edx,DWORD PTR [rax+0x4]
   1400079ce:	lea    rcx,[rsp+0x50]
   1400079d3:	call   0x140006fa0
   1400079d8:	mov    rax,QWORD PTR [rsp+0x50]
   1400079dd:	movsxd rcx,DWORD PTR [rax+0xc]
   1400079e1:	lea    rax,[rax+rcx*8+0x10]
   1400079e6:	cmp    rbx,rax
   1400079e9:	je     0x140007db6
   1400079ef:	mov    rdx,QWORD PTR [rbx]
   1400079f2:	lea    rcx,[rsp+0xe0]
   1400079fa:	call   0x140009700
   1400079ff:	nop
   140007a00:	lea    rcx,[rsp+0xf8]
   140007a08:	call   QWORD PTR [rip+0x1390a]        # 0x14001b318
   140007a0e:	test   al,al
   140007a10:	je     0x140007a16
   140007a12:	xor    esi,esi
   140007a14:	jmp    0x140007a27
   140007a16:	lea    rcx,[rsp+0xf8]
   140007a1e:	call   QWORD PTR [rip+0x137f4]        # 0x14001b218
   140007a24:	mov    rsi,rax
   140007a27:	lea    rcx,[rsp+0xf0]
   140007a2f:	call   QWORD PTR [rip+0x138e3]        # 0x14001b318
   140007a35:	test   al,al
   140007a37:	je     0x140007a3d
   140007a39:	xor    edi,edi
   140007a3b:	jmp    0x140007a4e
   140007a3d:	lea    rcx,[rsp+0xf0]
   140007a45:	call   QWORD PTR [rip+0x137cd]        # 0x14001b218
   140007a4b:	mov    rdi,rax
   140007a4e:	lea    rcx,[rsp+0xe8]
   140007a56:	call   QWORD PTR [rip+0x138bc]        # 0x14001b318
   140007a5c:	test   al,al
   140007a5e:	je     0x140007a64
   140007a60:	xor    eax,eax
   140007a62:	jmp    0x140007a72
   140007a64:	lea    rcx,[rsp+0xe8]
   140007a6c:	call   QWORD PTR [rip+0x137a6]        # 0x14001b218
   140007a72:	mov    r9,rsi
   140007a75:	mov    r8,rdi
   140007a78:	mov    rdx,rax
   140007a7b:	mov    rcx,r14
   140007a7e:	call   0x140009740
   140007a83:	movzx  r12d,al
   140007a87:	test   al,al
   140007a89:	jne    0x140007d0c
   140007a8f:	lea    rdx,[rsp+0x1c8]
   140007a97:	lea    rcx,[rsp+0xe0]
   140007a9f:	call   0x140006bd0
   140007aa4:	mov    rsi,rax
   140007aa7:	mov    ebp,DWORD PTR [rsp+0x110]
   140007aae:	lea    rcx,[rsp+0xf8]
   140007ab6:	call   QWORD PTR [rip+0x1385c]        # 0x14001b318
   140007abc:	test   al,al
   140007abe:	je     0x140007ac4
   140007ac0:	xor    edi,edi
   140007ac2:	jmp    0x140007ad5
   140007ac4:	lea    rcx,[rsp+0xf8]
   140007acc:	call   QWORD PTR [rip+0x13746]        # 0x14001b218
   140007ad2:	mov    rdi,rax
   140007ad5:	lea    rcx,[rsp+0xe8]
   140007add:	call   QWORD PTR [rip+0x13835]        # 0x14001b318
   140007ae3:	test   al,al
   140007ae5:	je     0x140007aeb
   140007ae7:	xor    eax,eax
   140007ae9:	jmp    0x140007af9
   140007aeb:	lea    rcx,[rsp+0xe8]
   140007af3:	call   QWORD PTR [rip+0x1371f]        # 0x14001b218
   140007af9:	mov    DWORD PTR [rsp+0x28],ebp
   140007afd:	mov    QWORD PTR [rsp+0x20],rsi
   140007b02:	mov    r9,rdi
   140007b05:	mov    r8,rax
   140007b08:	lea    rdx,[rsp+0x1d0]
   140007b10:	mov    rcx,r14
   140007b13:	call   0x140009b10
   140007b18:	nop
   140007b19:	lea    rcx,[rsp+0x1c8]
   140007b21:	call   QWORD PTR [rip+0x13b01]        # 0x14001b628
   140007b27:	lea    rcx,[rsp+0x1e0]
   140007b2f:	call   QWORD PTR [rip+0x137e3]        # 0x14001b318
   140007b35:	test   al,al
   140007b37:	je     0x140007b5b
   140007b39:	cmp    DWORD PTR [rsp+0x200],0xffffffff
   140007b41:	jne    0x140007b5b
   140007b43:	mov    rcx,QWORD PTR [rsp+0x1f0]
   140007b4b:	mov    eax,DWORD PTR [rcx+0x8]
   140007b4e:	cmp    DWORD PTR [rcx+0xc],eax
   140007b51:	jne    0x140007b5b
   140007b53:	xor    r12b,r12b
   140007b56:	jmp    0x140007c04
   140007b5b:	lea    rcx,[rsp+0x1e0]
   140007b63:	call   QWORD PTR [rip+0x137af]        # 0x14001b318
   140007b69:	test   al,al
   140007b6b:	je     0x140007b72
   140007b6d:	xor    r8d,r8d
   140007b70:	jmp    0x140007b9b
   140007b72:	lea    rcx,[rsp+0x1e0]
   140007b7a:	call   QWORD PTR [rip+0x13698]        # 0x14001b218
   140007b80:	mov    r8,rax
   140007b83:	test   rax,rax
   140007b86:	je     0x140007b9b
   140007b88:	xor    eax,eax
   140007b8a:	or     rcx,0xffffffffffffffff
   140007b8e:	mov    rdi,r8
   140007b91:	repnz scas al,BYTE PTR es:[rdi]
   140007b93:	not    rcx
   140007b96:	dec    rcx
   140007b99:	jmp    0x140007b9e
   140007b9b:	or     ecx,0xffffffff
   140007b9e:	mov    edx,ecx
   140007ba0:	mov    rcx,r8
   140007ba3:	call   QWORD PTR [rip+0x13a6f]        # 0x14001b618
   140007ba9:	mov    QWORD PTR [rsp+0xc8],rax
   140007bb1:	lea    rcx,[rsp+0xf0]
   140007bb9:	call   QWORD PTR [rip+0x13759]        # 0x14001b318
   140007bbf:	test   al,al
   140007bc1:	je     0x140007bc7
   140007bc3:	xor    eax,eax
   140007bc5:	jmp    0x140007bd5
   140007bc7:	lea    rcx,[rsp+0xf0]
   140007bcf:	call   QWORD PTR [rip+0x13643]        # 0x14001b218
   140007bd5:	mov    rdx,rax
   140007bd8:	lea    rcx,[rsp+0xc8]
   140007be0:	call   0x1400136c0
   140007be5:	cmp    eax,0xbe
   140007bea:	setge  dil
   140007bee:	lea    rcx,[rsp+0xc8]
   140007bf6:	call   QWORD PTR [rip+0x13a2c]        # 0x14001b628
   140007bfc:	test   dil,dil
   140007bff:	je     0x140007c04
   140007c01:	mov    r12b,0x1
   140007c04:	lea    rcx,[rsp+0x1f8]
   140007c0c:	call   QWORD PTR [rip+0x13a16]        # 0x14001b628
   140007c12:	nop
   140007c13:	mov    rsi,QWORD PTR [rsp+0x1f0]
   140007c1b:	mov    eax,DWORD PTR [rsi]
   140007c1d:	test   eax,eax
   140007c1f:	je     0x140007c39
   140007c21:	cmp    eax,0xffffffff
   140007c24:	je     0x140007c6c
   140007c26:	lock add DWORD PTR [rsi],0xffffffff
   140007c2a:	setne  al
   140007c2d:	test   al,al
   140007c2f:	jne    0x140007c6c
   140007c31:	mov    rsi,QWORD PTR [rsp+0x1f0]
   140007c39:	movsxd rax,DWORD PTR [rsi+0xc]
   140007c3d:	lea    rdi,[rsi+rax*8+0x10]
   140007c42:	movsxd rax,DWORD PTR [rsi+0x8]
   140007c46:	lea    rbp,[rsi+rax*8+0x10]
   140007c4b:	cmp    rbp,rdi
   140007c4e:	je     0x140007c62
   140007c50:	sub    rdi,0x8
   140007c54:	mov    rcx,rdi
   140007c57:	call   QWORD PTR [rip+0x139cb]        # 0x14001b628
   140007c5d:	cmp    rdi,rbp
   140007c60:	jne    0x140007c50
   140007c62:	mov    rcx,rsi
   140007c65:	call   QWORD PTR [rip+0x13625]        # 0x14001b290
   140007c6b:	nop
   140007c6c:	lea    rcx,[rsp+0x1e8]
   140007c74:	call   QWORD PTR [rip+0x139a6]        # 0x14001b620
   140007c7a:	nop
   140007c7b:	lea    rcx,[rsp+0x1e0]
   140007c83:	call   QWORD PTR [rip+0x13997]        # 0x14001b620
   140007c89:	nop
   140007c8a:	lea    rcx,[rsp+0x1d8]
   140007c92:	call   QWORD PTR [rip+0x13988]        # 0x14001b620
   140007c98:	test   r12b,r12b
   140007c9b:	jne    0x140007d0c
   140007c9d:	lea    rdx,[rsp+0xe0]
   140007ca5:	mov    rcx,QWORD PTR [rsp+0x310]
   140007cad:	call   0x14000a9f0
   140007cb2:	lea    rcx,[rsp+0xf0]
   140007cba:	call   QWORD PTR [rip+0x13658]        # 0x14001b318
   140007cc0:	test   al,al
   140007cc2:	je     0x140007cc8
   140007cc4:	xor    eax,eax
   140007cc6:	jmp    0x140007cd6
   140007cc8:	lea    rcx,[rsp+0xf0]
   140007cd0:	call   QWORD PTR [rip+0x13542]        # 0x14001b218
   140007cd6:	or     r8d,0xffffffff
   140007cda:	mov    rdx,rax
   140007cdd:	lea    rcx,[rsp+0x1b0]
   140007ce5:	call   QWORD PTR [rip+0x1391d]        # 0x14001b608
   140007ceb:	mov    rcx,QWORD PTR [rax]
   140007cee:	cmp    DWORD PTR [rcx+0x4],0x0
   140007cf2:	setne  dil
   140007cf6:	lea    rcx,[rsp+0x1b0]
   140007cfe:	call   QWORD PTR [rip+0x1391c]        # 0x14001b620
   140007d04:	test   dil,dil
   140007d07:	je     0x140007d0c
   140007d09:	inc    r13d
   140007d0c:	lea    rcx,[rsp+0x108]
   140007d14:	call   QWORD PTR [rip+0x1390e]        # 0x14001b628
   140007d1a:	nop
   140007d1b:	mov    rsi,QWORD PTR [rsp+0x100]
   140007d23:	mov    eax,DWORD PTR [rsi]
   140007d25:	test   eax,eax
   140007d27:	je     0x140007d41
   140007d29:	cmp    eax,0xffffffff
   140007d2c:	je     0x140007d7c
   140007d2e:	lock add DWORD PTR [rsi],0xffffffff
   140007d32:	setne  al
   140007d35:	test   al,al
   140007d37:	jne    0x140007d7c
   140007d39:	mov    rsi,QWORD PTR [rsp+0x100]
   140007d41:	movsxd rax,DWORD PTR [rsi+0xc]
   140007d45:	lea    rdi,[rsi+rax*8+0x10]
   140007d4a:	movsxd rax,DWORD PTR [rsi+0x8]
   140007d4e:	lea    rbp,[rsi+rax*8+0x10]
   140007d53:	cmp    rbp,rdi
   140007d56:	je     0x140007d72
   140007d58:	nop    DWORD PTR [rax+rax*1+0x0]
   140007d60:	sub    rdi,0x8
   140007d64:	mov    rcx,rdi
   140007d67:	call   QWORD PTR [rip+0x138bb]        # 0x14001b628
   140007d6d:	cmp    rdi,rbp
   140007d70:	jne    0x140007d60
   140007d72:	mov    rcx,rsi
   140007d75:	call   QWORD PTR [rip+0x13515]        # 0x14001b290
   140007d7b:	nop
   140007d7c:	lea    rcx,[rsp+0xf8]
   140007d84:	call   QWORD PTR [rip+0x13896]        # 0x14001b620
   140007d8a:	nop
   140007d8b:	lea    rcx,[rsp+0xf0]
   140007d93:	call   QWORD PTR [rip+0x13887]        # 0x14001b620
   140007d99:	nop
   140007d9a:	lea    rcx,[rsp+0xe8]
   140007da2:	call   QWORD PTR [rip+0x13878]        # 0x14001b620
   140007da8:	add    rbx,0x8
   140007dac:	mov    rax,QWORD PTR [rsp+0x50]
   140007db1:	jmp    0x1400079c0
   140007db6:	mov    rdi,QWORD PTR [rsp+0x310]
   140007dbe:	mov    rcx,rdi
   140007dc1:	call   0x1400127d0
   140007dc6:	mov    ebp,eax
   140007dc8:	mov    rcx,rdi
   140007dcb:	call   0x14000f0e0
   140007dd0:	mov    r12d,eax
   140007dd3:	cmp    BYTE PTR [rsp+0x318],0x0
   140007ddb:	je     0x140007f5b
   140007de1:	mov    r14d,DWORD PTR [rsp+0x64]
   140007de6:	lea    ebx,[r13+r14*1+0x0]
   140007deb:	lea    r15,[rip+0x13ff6]        # 0x14001bde8
   140007df2:	lea    rsi,[rip+0x1595f]        # 0x14001d758
   140007df9:	mov    rdi,rsi
   140007dfc:	cmp    ebx,0x1
   140007dff:	cmove  rdi,r15
   140007e03:	call   QWORD PTR [rip+0x133df]        # 0x14001b1e8
   140007e09:	mov    DWORD PTR [rsp+0x28],r14d
   140007e0e:	mov    DWORD PTR [rsp+0x20],r13d
   140007e13:	mov    r9,rdi
   140007e16:	mov    r8d,ebx
   140007e19:	lea    rdx,[rip+0x158f8]        # 0x14001d718
   140007e20:	lea    rcx,[rax+0x60]
   140007e24:	call   QWORD PTR [rip+0x133c6]        # 0x14001b1f0
   140007e2a:	mov    ebx,DWORD PTR [rsp+0x58]
   140007e2e:	test   ebx,ebx
   140007e30:	je     0x140007ed6
   140007e36:	cmp    BYTE PTR [rsp+0x320],0x0
   140007e3e:	je     0x140007e74
   140007e40:	lea    rax,[rip+0x158cd]        # 0x14001d714
   140007e47:	lea    rdi,[rip+0x158c2]        # 0x14001d710
   140007e4e:	cmp    ebx,0x1
   140007e51:	cmove  rdi,rax
   140007e55:	call   QWORD PTR [rip+0x1338d]        # 0x14001b1e8
   140007e5b:	mov    r9,rdi
   140007e5e:	mov    r8d,ebx
   140007e61:	lea    rdx,[rip+0x15888]        # 0x14001d6f0
   140007e68:	lea    rcx,[rax+0x60]
   140007e6c:	call   QWORD PTR [rip+0x1337e]        # 0x14001b1f0
   140007e72:	jmp    0x140007ed6
   140007e74:	mov    r13d,DWORD PTR [rsp+0x68]
   140007e79:	sub    ebx,r13d
   140007e7c:	mov    rdi,rsi
   140007e7f:	cmp    ebx,0x1
   140007e82:	cmove  rdi,r15
   140007e86:	call   QWORD PTR [rip+0x1335c]        # 0x14001b1e8
   140007e8c:	mov    r9,rdi
   140007e8f:	mov    r8d,ebx
   140007e92:	lea    rdx,[rip+0x1582f]        # 0x14001d6c8
   140007e99:	lea    rcx,[rax+0x60]
   140007e9d:	call   QWORD PTR [rip+0x1334d]        # 0x14001b1f0
   140007ea3:	lea    rax,[rip+0x1586a]        # 0x14001d714
   140007eaa:	lea    rdi,[rip+0x1585f]        # 0x14001d710
   140007eb1:	cmp    r13d,0x1
   140007eb5:	cmove  rdi,rax
   140007eb9:	call   QWORD PTR [rip+0x13329]        # 0x14001b1e8
   140007ebf:	mov    r9,rdi
   140007ec2:	mov    r8d,r13d
   140007ec5:	lea    rdx,[rip+0x157cc]        # 0x14001d698
   140007ecc:	lea    rcx,[rax+0x60]
   140007ed0:	call   QWORD PTR [rip+0x1331a]        # 0x14001b1f0
   140007ed6:	test   r12d,r12d
   140007ed9:	je     0x140007f03
   140007edb:	mov    rdi,rsi
   140007ede:	cmp    r12d,0x1
   140007ee2:	cmove  rdi,r15
   140007ee6:	call   QWORD PTR [rip+0x132fc]        # 0x14001b1e8
   140007eec:	mov    r9,rdi
   140007eef:	mov    r8d,r12d
   140007ef2:	lea    rdx,[rip+0x1576f]        # 0x14001d668
   140007ef9:	lea    rcx,[rax+0x60]
   140007efd:	call   QWORD PTR [rip+0x132ed]        # 0x14001b1f0
   140007f03:	test   ebp,ebp
   140007f05:	je     0x140007f2e
   140007f07:	mov    rdi,rsi
   140007f0a:	cmp    ebp,0x1
   140007f0d:	cmove  rdi,r15
   140007f11:	call   QWORD PTR [rip+0x132d1]        # 0x14001b1e8
   140007f17:	mov    r9,rdi
   140007f1a:	mov    r8d,ebp
   140007f1d:	lea    rdx,[rip+0x1570c]        # 0x14001d630
   140007f24:	lea    rcx,[rax+0x60]
   140007f28:	call   QWORD PTR [rip+0x132c2]        # 0x14001b1f0
   140007f2e:	mov    edi,DWORD PTR [rsp+0x5c]
   140007f32:	test   edi,edi
   140007f34:	je     0x140007f5b
   140007f36:	cmp    edi,0x1
   140007f39:	cmove  rsi,r15
   140007f3d:	call   QWORD PTR [rip+0x132a5]        # 0x14001b1e8
   140007f43:	mov    r9,rsi
   140007f46:	mov    r8d,edi
   140007f49:	lea    rdx,[rip+0x156a8]        # 0x14001d5f8
   140007f50:	lea    rcx,[rax+0x60]
   140007f54:	call   QWORD PTR [rip+0x13296]        # 0x14001b1f0
   140007f5a:	nop
   140007f5b:	mov    r13,QWORD PTR [rsp+0x50]
   140007f60:	mov    eax,DWORD PTR [r13+0x0]
   140007f64:	test   eax,eax
   140007f66:	je     0x140007f87
   140007f68:	cmp    eax,0xffffffff
   140007f6b:	je     0x140008066
   140007f71:	lock add DWORD PTR [r13+0x0],0xffffffff
   140007f77:	setne  al
   140007f7a:	test   al,al
   140007f7c:	jne    0x140008066
   140007f82:	mov    r13,QWORD PTR [rsp+0x50]
   140007f87:	movsxd rax,DWORD PTR [r13+0xc]
   140007f8b:	lea    r12,[r13+rax*8+0x10]
   140007f90:	movsxd rax,DWORD PTR [r13+0x8]
   140007f94:	lea    r14,[r13+rax*8+0x10]
   140007f99:	cmp    r14,r12
   140007f9c:	je     0x14000805d
   140007fa2:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007fb0:	sub    r12,0x8
   140007fb4:	mov    rbx,QWORD PTR [r12]
   140007fb8:	mov    QWORD PTR [rsp+0x188],rbx
   140007fc0:	test   rbx,rbx
   140007fc3:	je     0x140008054
   140007fc9:	lea    rcx,[rbx+0x28]
   140007fcd:	call   QWORD PTR [rip+0x13655]        # 0x14001b628
   140007fd3:	nop
   140007fd4:	mov    rcx,QWORD PTR [rbx+0x20]
   140007fd8:	mov    eax,DWORD PTR [rcx]
   140007fda:	test   eax,eax
   140007fdc:	je     0x140007fee
   140007fde:	cmp    eax,0xffffffff
   140007fe1:	je     0x14000802c
   140007fe3:	lock add DWORD PTR [rcx],0xffffffff
   140007fe7:	setne  al
   140007fea:	test   al,al
   140007fec:	jne    0x14000802c
   140007fee:	mov    rbp,QWORD PTR [rbx+0x20]
   140007ff2:	movsxd rax,DWORD PTR [rbp+0xc]
   140007ff6:	lea    rdi,[rbp+rax*8+0x10]
   140007ffb:	movsxd rax,DWORD PTR [rbp+0x8]
   140007fff:	lea    rsi,[rbp+rax*8+0x10]
   140008004:	cmp    rsi,rdi
   140008007:	je     0x140008022
   140008009:	nop    DWORD PTR [rax+0x0]
   140008010:	sub    rdi,0x8
   140008014:	mov    rcx,rdi
   140008017:	call   QWORD PTR [rip+0x1360b]        # 0x14001b628
   14000801d:	cmp    rdi,rsi
   140008020:	jne    0x140008010
   140008022:	mov    rcx,rbp
   140008025:	call   QWORD PTR [rip+0x13265]        # 0x14001b290
   14000802b:	nop
   14000802c:	lea    rcx,[rbx+0x18]
   140008030:	call   QWORD PTR [rip+0x135ea]        # 0x14001b620
   140008036:	nop
   140008037:	lea    rcx,[rbx+0x10]
   14000803b:	call   QWORD PTR [rip+0x135df]        # 0x14001b620
   140008041:	nop
   140008042:	lea    rcx,[rbx+0x8]
   140008046:	call   QWORD PTR [rip+0x135d4]        # 0x14001b620
   14000804c:	mov    rcx,rbx
   14000804f:	call   0x140013f3e
   140008054:	cmp    r12,r14
   140008057:	jne    0x140007fb0
   14000805d:	mov    rcx,r13
   140008060:	call   QWORD PTR [rip+0x1322a]        # 0x14001b290
   140008066:	mov    rbx,QWORD PTR [rsp+0x308]
   14000806e:	add    rsp,0x2c0
   140008075:	pop    r15
   140008077:	pop    r14
   140008079:	pop    r13
   14000807b:	pop    r12
   14000807d:	pop    rdi
   14000807e:	pop    rsi
   14000807f:	pop    rbp
   140008080:	ret    
   140008081:	int3   
   140008082:	int3   
   140008083:	int3   
   140008084:	int3   
   140008085:	int3   
   140008086:	int3   
   140008087:	int3   
   140008088:	int3   
   140008089:	int3   
   14000808a:	int3   
   14000808b:	int3   
   14000808c:	int3   
   14000808d:	int3   
   14000808e:	int3   
   14000808f:	int3   
   140008090:	rex push rbx
   140008092:	push   rsi
   140008093:	push   rdi
   140008094:	sub    rsp,0x30
   140008098:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400080a1:	mov    rsi,rcx
   1400080a4:	xor    ebx,ebx
   1400080a6:	call   QWORD PTR [rip+0x135bc]        # 0x14001b668
   1400080ac:	test   eax,eax
   1400080ae:	jle    0x140008278
   1400080b4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400080c0:	xor    eax,eax
   1400080c2:	or     rcx,0xffffffffffffffff
   1400080c6:	lea    rdi,[rip+0x15b77]        # 0x14001dc44
   1400080cd:	repnz scas al,BYTE PTR es:[rdi]
   1400080cf:	not    rcx
   1400080d2:	lea    rdx,[rcx-0x1]
   1400080d6:	lea    rcx,[rip+0x15b67]        # 0x14001dc44
   1400080dd:	call   QWORD PTR [rip+0x13535]        # 0x14001b618
   1400080e3:	mov    QWORD PTR [rsp+0x58],rax
   1400080e8:	mov    r8d,ebx
   1400080eb:	lea    rdx,[rsp+0x68]
   1400080f0:	mov    rcx,rsi
   1400080f3:	call   QWORD PTR [rip+0x13577]        # 0x14001b670
   1400080f9:	nop
   1400080fa:	lea    rdx,[rsp+0x58]
   1400080ff:	mov    rcx,rax
   140008102:	call   QWORD PTR [rip+0x13528]        # 0x14001b630
   140008108:	movzx  edi,al
   14000810b:	lea    rcx,[rsp+0x68]
   140008110:	call   QWORD PTR [rip+0x13512]        # 0x14001b628
   140008116:	nop
   140008117:	lea    rcx,[rsp+0x58]
   14000811c:	call   QWORD PTR [rip+0x13506]        # 0x14001b628
   140008122:	test   dil,dil
   140008125:	jne    0x140008211
   14000812b:	xor    eax,eax
   14000812d:	or     rcx,0xffffffffffffffff
   140008131:	lea    rdi,[rip+0x15b00]        # 0x14001dc38
   140008138:	repnz scas al,BYTE PTR es:[rdi]
   14000813a:	not    rcx
   14000813d:	lea    rdx,[rcx-0x1]
   140008141:	lea    rcx,[rip+0x15af0]        # 0x14001dc38
   140008148:	call   QWORD PTR [rip+0x134ca]        # 0x14001b618
   14000814e:	mov    QWORD PTR [rsp+0x60],rax
   140008153:	mov    r8d,ebx
   140008156:	lea    rdx,[rsp+0x20]
   14000815b:	mov    rcx,rsi
   14000815e:	call   QWORD PTR [rip+0x1350c]        # 0x14001b670
   140008164:	nop
   140008165:	lea    rdx,[rsp+0x60]
   14000816a:	mov    rcx,rax
   14000816d:	call   QWORD PTR [rip+0x134bd]        # 0x14001b630
   140008173:	movzx  edi,al
   140008176:	lea    rcx,[rsp+0x20]
   14000817b:	call   QWORD PTR [rip+0x134a7]        # 0x14001b628
   140008181:	nop
   140008182:	lea    rcx,[rsp+0x60]
   140008187:	call   QWORD PTR [rip+0x1349b]        # 0x14001b628
   14000818d:	test   dil,dil
   140008190:	jne    0x1400081aa
   140008192:	inc    ebx
   140008194:	mov    rcx,rsi
   140008197:	call   QWORD PTR [rip+0x134cb]        # 0x14001b668
   14000819d:	cmp    ebx,eax
   14000819f:	jl     0x1400080c0
   1400081a5:	jmp    0x140008278
   1400081aa:	xor    eax,eax
   1400081ac:	or     rcx,0xffffffffffffffff
   1400081b0:	lea    rdi,[rip+0x142b9]        # 0x14001c470
   1400081b7:	repnz scas al,BYTE PTR es:[rdi]
   1400081b9:	not    rcx
   1400081bc:	lea    rdx,[rcx-0x1]
   1400081c0:	lea    rcx,[rip+0x142a9]        # 0x14001c470
   1400081c7:	call   QWORD PTR [rip+0x1344b]        # 0x14001b618
   1400081cd:	mov    QWORD PTR [rsp+0x58],rax
   1400081d2:	mov    r8d,ebx
   1400081d5:	lea    rdx,[rsp+0x60]
   1400081da:	mov    rcx,rsi
   1400081dd:	call   QWORD PTR [rip+0x13495]        # 0x14001b678
   1400081e3:	nop
   1400081e4:	lea    rdx,[rsp+0x58]
   1400081e9:	mov    rcx,rax
   1400081ec:	call   QWORD PTR [rip+0x1343e]        # 0x14001b630
   1400081f2:	movzx  edi,al
   1400081f5:	lea    rcx,[rsp+0x60]
   1400081fa:	call   QWORD PTR [rip+0x13428]        # 0x14001b628
   140008200:	nop
   140008201:	lea    rcx,[rsp+0x58]
   140008206:	call   QWORD PTR [rip+0x1341c]        # 0x14001b628
   14000820c:	mov    al,dil
   14000820f:	jmp    0x14000827a
   140008211:	xor    eax,eax
   140008213:	or     rcx,0xffffffffffffffff
   140008217:	lea    rdi,[rip+0x14182]        # 0x14001c3a0
   14000821e:	repnz scas al,BYTE PTR es:[rdi]
   140008220:	not    rcx
   140008223:	lea    rdx,[rcx-0x1]
   140008227:	lea    rcx,[rip+0x14172]        # 0x14001c3a0
   14000822e:	call   QWORD PTR [rip+0x133e4]        # 0x14001b618
   140008234:	mov    QWORD PTR [rsp+0x58],rax
   140008239:	mov    r8d,ebx
   14000823c:	lea    rdx,[rsp+0x60]
   140008241:	mov    rcx,rsi
   140008244:	call   QWORD PTR [rip+0x1342e]        # 0x14001b678
   14000824a:	nop
   14000824b:	lea    rdx,[rsp+0x58]
   140008250:	mov    rcx,rax
   140008253:	call   QWORD PTR [rip+0x133d7]        # 0x14001b630
   140008259:	movzx  edi,al
   14000825c:	lea    rcx,[rsp+0x60]
   140008261:	call   QWORD PTR [rip+0x133c1]        # 0x14001b628
   140008267:	nop
   140008268:	lea    rcx,[rsp+0x58]
   14000826d:	call   QWORD PTR [rip+0x133b5]        # 0x14001b628
   140008273:	mov    al,dil
   140008276:	jmp    0x14000827a
   140008278:	xor    al,al
   14000827a:	add    rsp,0x30
   14000827e:	pop    rdi
   14000827f:	pop    rsi
   140008280:	pop    rbx
   140008281:	ret    
   140008282:	int3   
   140008283:	int3   
   140008284:	int3   
   140008285:	int3   
   140008286:	int3   
   140008287:	int3   
   140008288:	int3   
   140008289:	int3   
   14000828a:	int3   
   14000828b:	int3   
   14000828c:	int3   
   14000828d:	int3   
   14000828e:	int3   
   14000828f:	int3   
   140008290:	rex push rbx
   140008292:	sub    rsp,0x20
   140008296:	mov    rbx,rdx
   140008299:	lea    rdx,[rcx+0x48]
   14000829d:	mov    DWORD PTR [rsp+0x30],0x0
   1400082a5:	mov    rcx,rbx
   1400082a8:	call   QWORD PTR [rip+0x13082]        # 0x14001b330
   1400082ae:	mov    rax,rbx
   1400082b1:	add    rsp,0x20
   1400082b5:	pop    rbx
   1400082b6:	ret    
   1400082b7:	int3   
   1400082b8:	int3   
   1400082b9:	int3   
   1400082ba:	int3   
   1400082bb:	int3   
   1400082bc:	int3   
   1400082bd:	int3   
   1400082be:	int3   
   1400082bf:	int3   
   1400082c0:	rex push rbx
   1400082c2:	sub    rsp,0x20
   1400082c6:	mov    rbx,rdx
   1400082c9:	lea    rdx,[rcx+0x50]
   1400082cd:	mov    DWORD PTR [rsp+0x30],0x0
   1400082d5:	mov    rcx,rbx
   1400082d8:	call   QWORD PTR [rip+0x13052]        # 0x14001b330
   1400082de:	mov    rax,rbx
   1400082e1:	add    rsp,0x20
   1400082e5:	pop    rbx
   1400082e6:	ret    
   1400082e7:	int3   
   1400082e8:	int3   
   1400082e9:	int3   
   1400082ea:	int3   
   1400082eb:	int3   
   1400082ec:	int3   
   1400082ed:	int3   
   1400082ee:	int3   
   1400082ef:	int3   
   1400082f0:	rex push rdi
   1400082f2:	sub    rsp,0x30
   1400082f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400082ff:	mov    QWORD PTR [rsp+0x48],rbx
   140008304:	mov    rbx,rcx
   140008307:	lea    rcx,[rsp+0x40]
   14000830c:	call   QWORD PTR [rip+0x1301e]        # 0x14001b330
   140008312:	nop
   140008313:	xor    eax,eax
   140008315:	or     rcx,0xffffffffffffffff
   140008319:	lea    rdi,[rip+0x13ac8]        # 0x14001bde8
   140008320:	repnz scas al,BYTE PTR es:[rdi]
   140008322:	not    rcx
   140008325:	lea    rdx,[rcx-0x1]
   140008329:	lea    rcx,[rip+0x13ab8]        # 0x14001bde8
   140008330:	call   QWORD PTR [rip+0x132e2]        # 0x14001b618
   140008336:	mov    QWORD PTR [rsp+0x58],rax
   14000833b:	xor    eax,eax
   14000833d:	or     rcx,0xffffffffffffffff
   140008341:	lea    rdi,[rip+0x15930]        # 0x14001dc78
   140008348:	repnz scas al,BYTE PTR es:[rdi]
   14000834a:	not    rcx
   14000834d:	lea    rdx,[rcx-0x1]
   140008351:	lea    rcx,[rip+0x15920]        # 0x14001dc78
   140008358:	call   QWORD PTR [rip+0x132ba]        # 0x14001b618
   14000835e:	mov    QWORD PTR [rsp+0x50],rax
   140008363:	mov    r9d,0x1
   140008369:	lea    r8,[rsp+0x58]
   14000836e:	lea    rdx,[rsp+0x50]
   140008373:	lea    rcx,[rsp+0x40]
   140008378:	call   QWORD PTR [rip+0x13082]        # 0x14001b400
   14000837e:	nop
   14000837f:	lea    rcx,[rsp+0x50]
   140008384:	call   QWORD PTR [rip+0x1329e]        # 0x14001b628
   14000838a:	nop
   14000838b:	lea    rcx,[rsp+0x58]
   140008390:	call   QWORD PTR [rip+0x13292]        # 0x14001b628
   140008396:	lea    rcx,[rbx+0x88]
   14000839d:	lea    rdx,[rsp+0x40]
   1400083a2:	call   QWORD PTR [rip+0x13258]        # 0x14001b600
   1400083a8:	nop
   1400083a9:	lea    rcx,[rsp+0x40]
   1400083ae:	call   QWORD PTR [rip+0x13274]        # 0x14001b628
   1400083b4:	mov    al,0x1
   1400083b6:	mov    rbx,QWORD PTR [rsp+0x48]
   1400083bb:	add    rsp,0x30
   1400083bf:	pop    rdi
   1400083c0:	ret    
   1400083c1:	int3   
   1400083c2:	int3   
   1400083c3:	int3   
   1400083c4:	int3   
   1400083c5:	int3   
   1400083c6:	int3   
   1400083c7:	int3   
   1400083c8:	int3   
   1400083c9:	int3   
   1400083ca:	int3   
   1400083cb:	int3   
   1400083cc:	int3   
   1400083cd:	int3   
   1400083ce:	int3   
   1400083cf:	int3   
   1400083d0:	rex push rbx
   1400083d2:	push   rsi
   1400083d3:	push   rdi
   1400083d4:	sub    rsp,0x40
   1400083d8:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400083e1:	mov    rsi,rdx
   1400083e4:	mov    r8d,DWORD PTR [rcx+0x88]
   1400083eb:	lea    eax,[r8+0x1]
   1400083ef:	mov    DWORD PTR [rcx+0x88],eax
   1400083f5:	test   r8d,r8d
   1400083f8:	jne    0x1400084d3
   1400083fe:	lea    rcx,[rsp+0x60]
   140008403:	call   QWORD PTR [rip+0x13207]        # 0x14001b610
   140008409:	nop
   14000840a:	lea    rdx,[rsp+0x78]
   14000840f:	mov    rcx,rsi
   140008412:	call   QWORD PTR [rip+0x132b0]        # 0x14001b6c8
   140008418:	nop
   140008419:	lea    rdx,[rsp+0x70]
   14000841e:	mov    rcx,rax
   140008421:	call   QWORD PTR [rip+0x131c1]        # 0x14001b5e8
   140008427:	nop
   140008428:	mov    rcx,rax
   14000842b:	call   QWORD PTR [rip+0x131bf]        # 0x14001b5f0
   140008431:	mov    rdi,rax
   140008434:	mov    rcx,rsi
   140008437:	call   QWORD PTR [rip+0x13293]        # 0x14001b6d0
   14000843d:	mov    ebx,eax
   14000843f:	mov    rcx,rsi
   140008442:	call   QWORD PTR [rip+0x13290]        # 0x14001b6d8
   140008448:	mov    r8d,eax
   14000844b:	mov    QWORD PTR [rsp+0x20],rdi
   140008450:	mov    r9d,ebx
   140008453:	lea    rdx,[rip+0x13b3e]        # 0x14001bf98
   14000845a:	lea    rcx,[rsp+0x60]
   14000845f:	call   QWORD PTR [rip+0x13193]        # 0x14001b5f8
   140008465:	nop
   140008466:	lea    rcx,[rsp+0x70]
   14000846b:	call   QWORD PTR [rip+0x131af]        # 0x14001b620
   140008471:	nop
   140008472:	lea    rcx,[rsp+0x78]
   140008477:	call   QWORD PTR [rip+0x131ab]        # 0x14001b628
   14000847d:	lea    rdx,[rsp+0x70]
   140008482:	lea    rcx,[rsp+0x60]
   140008487:	call   QWORD PTR [rip+0x1315b]        # 0x14001b5e8
   14000848d:	nop
   14000848e:	mov    rcx,rax
   140008491:	call   QWORD PTR [rip+0x13159]        # 0x14001b5f0
   140008497:	mov    rbx,rax
   14000849a:	call   QWORD PTR [rip+0x12d48]        # 0x14001b1e8
   1400084a0:	add    rax,0x60
   1400084a4:	mov    r8,rbx
   1400084a7:	lea    rdx,[rip+0x13ada]        # 0x14001bf88
   1400084ae:	mov    rcx,rax
   1400084b1:	call   QWORD PTR [rip+0x12d39]        # 0x14001b1f0
   1400084b7:	nop
   1400084b8:	lea    rcx,[rsp+0x70]
   1400084bd:	call   QWORD PTR [rip+0x1315d]        # 0x14001b620
   1400084c3:	nop
   1400084c4:	lea    rcx,[rsp+0x60]
   1400084c9:	call   QWORD PTR [rip+0x13159]        # 0x14001b628
   1400084cf:	xor    al,al
   1400084d1:	jmp    0x1400084d5
   1400084d3:	xor    al,al
   1400084d5:	add    rsp,0x40
   1400084d9:	pop    rdi
   1400084da:	pop    rsi
   1400084db:	pop    rbx
   1400084dc:	ret    
   1400084dd:	int3   
   1400084de:	int3   
   1400084df:	int3   
   1400084e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400084e5:	push   rbx
   1400084e6:	push   rsi
   1400084e7:	push   rdi
   1400084e8:	sub    rsp,0x40
   1400084ec:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400084f5:	mov    esi,edx
   1400084f7:	mov    rbx,rcx
   1400084fa:	mov    DWORD PTR [rsp+0x70],0x0
   140008502:	lea    rax,[rip+0x157d7]        # 0x14001dce0
   140008509:	lea    r8,[rip+0x157c8]        # 0x14001dcd8
   140008510:	cmp    edx,0x20
   140008513:	cmovle r8,rax
   140008517:	test   r8,r8
   14000851a:	je     0x14000852f
   14000851c:	xor    eax,eax
   14000851e:	or     rcx,0xffffffffffffffff
   140008522:	mov    rdi,r8
   140008525:	repnz scas al,BYTE PTR es:[rdi]
   140008527:	not    rcx
   14000852a:	dec    rcx
   14000852d:	jmp    0x140008532
   14000852f:	or     ecx,0xffffffff
   140008532:	mov    edx,ecx
   140008534:	mov    rcx,r8
   140008537:	call   QWORD PTR [rip+0x130db]        # 0x14001b618
   14000853d:	mov    QWORD PTR [rsp+0x78],rax
   140008542:	mov    dl,0x20
   140008544:	lea    rcx,[rsp+0x68]
   140008549:	call   QWORD PTR [rip+0x12ec1]        # 0x14001b410
   14000854f:	movzx  eax,WORD PTR [rax]
   140008552:	mov    WORD PTR [rsp+0x28],ax
   140008557:	mov    DWORD PTR [rsp+0x20],0x10
   14000855f:	xor    r9d,r9d
   140008562:	mov    r8d,esi
   140008565:	mov    rdx,rbx
   140008568:	lea    rcx,[rsp+0x78]
   14000856d:	call   QWORD PTR [rip+0x12e95]        # 0x14001b408
   140008573:	mov    DWORD PTR [rsp+0x70],0x1
   14000857b:	lea    rcx,[rsp+0x78]
   140008580:	call   QWORD PTR [rip+0x130a2]        # 0x14001b628
   140008586:	mov    rax,rbx
   140008589:	add    rsp,0x40
   14000858d:	pop    rdi
   14000858e:	pop    rsi
   14000858f:	pop    rbx
   140008590:	ret    
   140008591:	int3   
   140008592:	int3   
   140008593:	int3   
   140008594:	int3   
   140008595:	int3   
   140008596:	int3   
   140008597:	int3   
   140008598:	int3   
   140008599:	int3   
   14000859a:	int3   
   14000859b:	int3   
   14000859c:	int3   
   14000859d:	int3   
   14000859e:	int3   
   14000859f:	int3   
   1400085a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400085a5:	push   rbx
   1400085a6:	push   rbp
   1400085a7:	push   rsi
   1400085a8:	push   rdi
   1400085a9:	push   r12
   1400085ab:	sub    rsp,0x50
   1400085af:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400085b8:	mov    rbp,rdx
   1400085bb:	mov    rsi,rcx
   1400085be:	xor    ebx,ebx
   1400085c0:	mov    DWORD PTR [rsp+0x88],ebx
   1400085c7:	call   QWORD PTR [rip+0x13043]        # 0x14001b610
   1400085cd:	mov    DWORD PTR [rsp+0x88],0x1
   1400085d8:	mov    rax,QWORD PTR [rbp+0x0]
   1400085dc:	mov    r12d,DWORD PTR [rax+0x4]
   1400085e0:	test   r12d,r12d
   1400085e3:	jle    0x140008814
   1400085e9:	nop    DWORD PTR [rax+0x0]
   1400085f0:	mov    edx,ebx
   1400085f2:	mov    rcx,rbp
   1400085f5:	call   QWORD PTR [rip+0x12e25]        # 0x14001b420
   1400085fb:	movsx  ecx,al
   1400085fe:	sub    ecx,0x22
   140008601:	je     0x1400087c2
   140008607:	sub    ecx,0x4
   14000860a:	je     0x14000877e
   140008610:	sub    ecx,0x1
   140008613:	je     0x140008737
   140008619:	sub    ecx,0x15
   14000861c:	je     0x1400086e7
   140008622:	cmp    ecx,0x2
   140008625:	je     0x140008697
   140008627:	mov    edx,ebx
   140008629:	mov    rcx,rbp
   14000862c:	call   QWORD PTR [rip+0x12dee]        # 0x14001b420
   140008632:	cmp    al,0x20
   140008634:	jae    0x14000867b
   140008636:	mov    edx,ebx
   140008638:	mov    rcx,rbp
   14000863b:	call   QWORD PTR [rip+0x12ddf]        # 0x14001b420
   140008641:	cmp    al,0xa
   140008643:	je     0x14000867b
   140008645:	mov    edx,ebx
   140008647:	mov    rcx,rbp
   14000864a:	call   QWORD PTR [rip+0x12dd0]        # 0x14001b420
   140008650:	movzx  edx,al
   140008653:	lea    rcx,[rsp+0x38]
   140008658:	call   0x1400084e0
   14000865d:	nop
   14000865e:	mov    rdx,rax
   140008661:	mov    rcx,rsi
   140008664:	call   QWORD PTR [rip+0x12f96]        # 0x14001b600
   14000866a:	nop
   14000866b:	lea    rcx,[rsp+0x38]
   140008670:	call   QWORD PTR [rip+0x12fb2]        # 0x14001b628
   140008676:	jmp    0x140008804
   14000867b:	mov    edx,ebx
   14000867d:	mov    rcx,rbp
   140008680:	call   QWORD PTR [rip+0x12d9a]        # 0x14001b420
   140008686:	movzx  edx,al
   140008689:	mov    rcx,rsi
   14000868c:	call   QWORD PTR [rip+0x12d86]        # 0x14001b418
   140008692:	jmp    0x140008804
   140008697:	xor    eax,eax
   140008699:	or     rcx,0xffffffffffffffff
   14000869d:	lea    rdi,[rip+0x156a4]        # 0x14001dd48
   1400086a4:	repnz scas al,BYTE PTR es:[rdi]
   1400086a6:	not    rcx
   1400086a9:	lea    rdx,[rcx-0x1]
   1400086ad:	lea    rcx,[rip+0x15694]        # 0x14001dd48
   1400086b4:	call   QWORD PTR [rip+0x12f5e]        # 0x14001b618
   1400086ba:	mov    QWORD PTR [rsp+0x90],rax
   1400086c2:	lea    rdx,[rsp+0x90]
   1400086ca:	mov    rcx,rsi
   1400086cd:	call   QWORD PTR [rip+0x12f2d]        # 0x14001b600
   1400086d3:	nop
   1400086d4:	lea    rcx,[rsp+0x90]
   1400086dc:	call   QWORD PTR [rip+0x12f46]        # 0x14001b628
   1400086e2:	jmp    0x140008804
   1400086e7:	xor    eax,eax
   1400086e9:	or     rcx,0xffffffffffffffff
   1400086ed:	lea    rdi,[rip+0x1564c]        # 0x14001dd40
   1400086f4:	repnz scas al,BYTE PTR es:[rdi]
   1400086f6:	not    rcx
   1400086f9:	lea    rdx,[rcx-0x1]
   1400086fd:	lea    rcx,[rip+0x1563c]        # 0x14001dd40
   140008704:	call   QWORD PTR [rip+0x12f0e]        # 0x14001b618
   14000870a:	mov    QWORD PTR [rsp+0x98],rax
   140008712:	lea    rdx,[rsp+0x98]
   14000871a:	mov    rcx,rsi
   14000871d:	call   QWORD PTR [rip+0x12edd]        # 0x14001b600
   140008723:	nop
   140008724:	lea    rcx,[rsp+0x98]
   14000872c:	call   QWORD PTR [rip+0x12ef6]        # 0x14001b628
   140008732:	jmp    0x140008804
   140008737:	xor    eax,eax
   140008739:	or     rcx,0xffffffffffffffff
   14000873d:	lea    rdi,[rip+0x155f4]        # 0x14001dd38
   140008744:	repnz scas al,BYTE PTR es:[rdi]
   140008746:	not    rcx
   140008749:	lea    rdx,[rcx-0x1]
   14000874d:	lea    rcx,[rip+0x155e4]        # 0x14001dd38
   140008754:	call   QWORD PTR [rip+0x12ebe]        # 0x14001b618
   14000875a:	mov    QWORD PTR [rsp+0x20],rax
   14000875f:	lea    rdx,[rsp+0x20]
   140008764:	mov    rcx,rsi
   140008767:	call   QWORD PTR [rip+0x12e93]        # 0x14001b600
   14000876d:	nop
   14000876e:	lea    rcx,[rsp+0x20]
   140008773:	call   QWORD PTR [rip+0x12eaf]        # 0x14001b628
   140008779:	jmp    0x140008804
   14000877e:	xor    eax,eax
   140008780:	or     rcx,0xffffffffffffffff
   140008784:	lea    rdi,[rip+0x155a5]        # 0x14001dd30
   14000878b:	repnz scas al,BYTE PTR es:[rdi]
   14000878d:	not    rcx
   140008790:	lea    rdx,[rcx-0x1]
   140008794:	lea    rcx,[rip+0x15595]        # 0x14001dd30
   14000879b:	call   QWORD PTR [rip+0x12e77]        # 0x14001b618
   1400087a1:	mov    QWORD PTR [rsp+0x28],rax
   1400087a6:	lea    rdx,[rsp+0x28]
   1400087ab:	mov    rcx,rsi
   1400087ae:	call   QWORD PTR [rip+0x12e4c]        # 0x14001b600
   1400087b4:	nop
   1400087b5:	lea    rcx,[rsp+0x28]
   1400087ba:	call   QWORD PTR [rip+0x12e68]        # 0x14001b628
   1400087c0:	jmp    0x140008804
   1400087c2:	xor    eax,eax
   1400087c4:	or     rcx,0xffffffffffffffff
   1400087c8:	lea    rdi,[rip+0x15559]        # 0x14001dd28
   1400087cf:	repnz scas al,BYTE PTR es:[rdi]
   1400087d1:	not    rcx
   1400087d4:	lea    rdx,[rcx-0x1]
   1400087d8:	lea    rcx,[rip+0x15549]        # 0x14001dd28
   1400087df:	call   QWORD PTR [rip+0x12e33]        # 0x14001b618
   1400087e5:	mov    QWORD PTR [rsp+0x30],rax
   1400087ea:	lea    rdx,[rsp+0x30]
   1400087ef:	mov    rcx,rsi
   1400087f2:	call   QWORD PTR [rip+0x12e08]        # 0x14001b600
   1400087f8:	nop
   1400087f9:	lea    rcx,[rsp+0x30]
   1400087fe:	call   QWORD PTR [rip+0x12e24]        # 0x14001b628
   140008804:	inc    ebx
   140008806:	cmp    ebx,r12d
   140008809:	jl     0x1400085f0
   14000880f:	mov    rax,rsi
   140008812:	jmp    0x140008817
   140008814:	mov    rax,rsi
   140008817:	add    rsp,0x50
   14000881b:	pop    r12
   14000881d:	pop    rdi
   14000881e:	pop    rsi
   14000881f:	pop    rbp
   140008820:	pop    rbx
   140008821:	ret    
   140008822:	int3   
   140008823:	int3   
   140008824:	int3   
   140008825:	int3   
   140008826:	int3   
   140008827:	int3   
   140008828:	int3   
   140008829:	int3   
   14000882a:	int3   
   14000882b:	int3   
   14000882c:	int3   
   14000882d:	int3   
   14000882e:	int3   
   14000882f:	int3   
   140008830:	mov    QWORD PTR [rsp+0x8],rcx
   140008835:	push   rbx
   140008836:	push   rsi
   140008837:	push   rdi
   140008838:	sub    rsp,0x70
   14000883c:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140008845:	mov    rsi,rdx
   140008848:	mov    rdi,rcx
   14000884b:	xor    ebx,ebx
   14000884d:	mov    DWORD PTR [rsp+0xa0],ebx
   140008854:	test   r8b,r8b
   140008857:	je     0x140008867
   140008859:	call   0x1400085a0
   14000885e:	nop
   14000885f:	mov    rax,rdi
   140008862:	jmp    0x140008982
   140008867:	lea    rcx,[rsp+0x20]
   14000886c:	call   QWORD PTR [rip+0x12d9e]        # 0x14001b610
   140008872:	nop
   140008873:	mov    rdx,rsi
   140008876:	lea    rcx,[rsp+0x28]
   14000887b:	call   0x1400085a0
   140008880:	nop
   140008881:	lea    rdx,[rsp+0xa8]
   140008889:	mov    rcx,rax
   14000888c:	call   QWORD PTR [rip+0x12d56]        # 0x14001b5e8
   140008892:	nop
   140008893:	lea    rcx,[rsp+0x28]
   140008898:	call   QWORD PTR [rip+0x12d8a]        # 0x14001b628
   14000889e:	mov    r11,QWORD PTR [rsp+0xa8]
   1400088a6:	mov    esi,DWORD PTR [r11+0x4]
   1400088aa:	test   esi,esi
   1400088ac:	jle    0x14000894c
   1400088b2:	lea    rax,[rsp+0xa8]
   1400088ba:	mov    QWORD PTR [rsp+0x40],rax
   1400088bf:	mov    DWORD PTR [rsp+0x48],ebx
   1400088c3:	lea    rcx,[rsp+0x40]
   1400088c8:	call   QWORD PTR [rip+0x12b62]        # 0x14001b430
   1400088ce:	cmp    al,0x7f
   1400088d0:	jb     0x140008918
   1400088d2:	lea    rax,[rsp+0xa8]
   1400088da:	mov    QWORD PTR [rsp+0x50],rax
   1400088df:	mov    DWORD PTR [rsp+0x58],ebx
   1400088e3:	lea    rcx,[rsp+0x50]
   1400088e8:	call   QWORD PTR [rip+0x12b42]        # 0x14001b430
   1400088ee:	movzx  edx,al
   1400088f1:	lea    rcx,[rsp+0x30]
   1400088f6:	call   0x1400084e0
   1400088fb:	nop
   1400088fc:	mov    rdx,rax
   1400088ff:	lea    rcx,[rsp+0x20]
   140008904:	call   QWORD PTR [rip+0x12cf6]        # 0x14001b600
   14000890a:	nop
   14000890b:	lea    rcx,[rsp+0x30]
   140008910:	call   QWORD PTR [rip+0x12d12]        # 0x14001b628
   140008916:	jmp    0x140008942
   140008918:	lea    rax,[rsp+0xa8]
   140008920:	mov    QWORD PTR [rsp+0x60],rax
   140008925:	mov    DWORD PTR [rsp+0x68],ebx
   140008929:	lea    rcx,[rsp+0x60]
   14000892e:	call   QWORD PTR [rip+0x12afc]        # 0x14001b430
   140008934:	movzx  edx,al
   140008937:	lea    rcx,[rsp+0x20]
   14000893c:	call   QWORD PTR [rip+0x12ae6]        # 0x14001b428
   140008942:	inc    ebx
   140008944:	cmp    ebx,esi
   140008946:	jl     0x1400088b2
   14000894c:	lea    rdx,[rsp+0x20]
   140008951:	mov    rcx,rdi
   140008954:	call   QWORD PTR [rip+0x129d6]        # 0x14001b330
   14000895a:	mov    DWORD PTR [rsp+0xa0],0x1
   140008965:	lea    rcx,[rsp+0xa8]
   14000896d:	call   QWORD PTR [rip+0x12cad]        # 0x14001b620
   140008973:	nop
   140008974:	lea    rcx,[rsp+0x20]
   140008979:	call   QWORD PTR [rip+0x12ca9]        # 0x14001b628
   14000897f:	mov    rax,rdi
   140008982:	add    rsp,0x70
   140008986:	pop    rdi
   140008987:	pop    rsi
   140008988:	pop    rbx
   140008989:	ret    
   14000898a:	int3   
   14000898b:	int3   
   14000898c:	int3   
   14000898d:	int3   
   14000898e:	int3   
   14000898f:	int3   
   140008990:	mov    QWORD PTR [rsp+0x8],rbx
   140008995:	push   rdi
   140008996:	sub    rsp,0x20
   14000899a:	mov    rbx,rdx
   14000899d:	mov    rdi,rcx
   1400089a0:	call   0x140013c00
   1400089a5:	movzx  r11d,BYTE PTR [rbx+0x38]
   1400089aa:	mov    BYTE PTR [rdi+0x38],r11b
   1400089ae:	mov    eax,DWORD PTR [rbx+0x3c]
   1400089b1:	mov    DWORD PTR [rdi+0x3c],eax
   1400089b4:	movzx  eax,BYTE PTR [rbx+0x40]
   1400089b8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400089bd:	mov    BYTE PTR [rdi+0x40],al
   1400089c0:	mov    rax,rdi
   1400089c3:	add    rsp,0x20
   1400089c7:	pop    rdi
   1400089c8:	ret    
   1400089c9:	int3   
   1400089ca:	int3   
   1400089cb:	int3   
   1400089cc:	int3   
   1400089cd:	int3   
   1400089ce:	int3   
   1400089cf:	int3   
   1400089d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400089d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400089da:	mov    QWORD PTR [rsp+0x18],rsi
   1400089df:	mov    QWORD PTR [rsp+0x20],rdi
   1400089e4:	push   r12
   1400089e6:	sub    rsp,0x20
   1400089ea:	mov    r12,rcx
   1400089ed:	lea    rcx,[rdx+0x8]
   1400089f1:	mov    rbp,rdx
   1400089f4:	call   QWORD PTR [rip+0x1291e]        # 0x14001b318
   1400089fa:	xor    ebx,ebx
   1400089fc:	test   al,al
   1400089fe:	je     0x140008a05
   140008a00:	mov    rdi,rbx
   140008a03:	jmp    0x140008a12
   140008a05:	lea    rcx,[rbp+0x8]
   140008a09:	call   QWORD PTR [rip+0x12809]        # 0x14001b218
   140008a0f:	mov    rdi,rax
   140008a12:	lea    rcx,[r12+0x8]
   140008a17:	call   QWORD PTR [rip+0x128fb]        # 0x14001b318
   140008a1d:	test   al,al
   140008a1f:	je     0x140008a26
   140008a21:	mov    rax,rbx
   140008a24:	jmp    0x140008a31
   140008a26:	lea    rcx,[r12+0x8]
   140008a2b:	call   QWORD PTR [rip+0x127e7]        # 0x14001b218
   140008a31:	mov    rdx,rdi
   140008a34:	mov    rcx,rax
   140008a37:	call   QWORD PTR [rip+0x12b5b]        # 0x14001b598
   140008a3d:	test   eax,eax
   140008a3f:	jne    0x140008ae1
   140008a45:	lea    rcx,[rbp+0x10]
   140008a49:	call   QWORD PTR [rip+0x128c9]        # 0x14001b318
   140008a4f:	test   al,al
   140008a51:	je     0x140008a58
   140008a53:	mov    rdi,rbx
   140008a56:	jmp    0x140008a65
   140008a58:	lea    rcx,[rbp+0x10]
   140008a5c:	call   QWORD PTR [rip+0x127b6]        # 0x14001b218
   140008a62:	mov    rdi,rax
   140008a65:	lea    rcx,[r12+0x10]
   140008a6a:	call   QWORD PTR [rip+0x128a8]        # 0x14001b318
   140008a70:	test   al,al
   140008a72:	je     0x140008a79
   140008a74:	mov    rax,rbx
   140008a77:	jmp    0x140008a84
   140008a79:	lea    rcx,[r12+0x10]
   140008a7e:	call   QWORD PTR [rip+0x12794]        # 0x14001b218
   140008a84:	mov    rdx,rdi
   140008a87:	mov    rcx,rax
   140008a8a:	call   QWORD PTR [rip+0x12b08]        # 0x14001b598
   140008a90:	test   eax,eax
   140008a92:	jne    0x140008ae1
   140008a94:	lea    rcx,[rbp+0x18]
   140008a98:	call   QWORD PTR [rip+0x1287a]        # 0x14001b318
   140008a9e:	test   al,al
   140008aa0:	je     0x140008aa7
   140008aa2:	mov    rdi,rbx
   140008aa5:	jmp    0x140008ab4
   140008aa7:	lea    rcx,[rbp+0x18]
   140008aab:	call   QWORD PTR [rip+0x12767]        # 0x14001b218
   140008ab1:	mov    rdi,rax
   140008ab4:	lea    rcx,[r12+0x18]
   140008ab9:	call   QWORD PTR [rip+0x12859]        # 0x14001b318
   140008abf:	test   al,al
   140008ac1:	je     0x140008ac8
   140008ac3:	mov    rax,rbx
   140008ac6:	jmp    0x140008ad3
   140008ac8:	lea    rcx,[r12+0x18]
   140008acd:	call   QWORD PTR [rip+0x12745]        # 0x14001b218
   140008ad3:	mov    rdx,rdi
   140008ad6:	mov    rcx,rax
   140008ad9:	call   QWORD PTR [rip+0x12ab9]        # 0x14001b598
   140008adf:	test   eax,eax
   140008ae1:	mov    rbx,QWORD PTR [rsp+0x30]
   140008ae6:	mov    rbp,QWORD PTR [rsp+0x38]
   140008aeb:	mov    rsi,QWORD PTR [rsp+0x40]
   140008af0:	mov    rdi,QWORD PTR [rsp+0x48]
   140008af5:	sets   al
   140008af8:	add    rsp,0x20
   140008afc:	pop    r12
   140008afe:	ret    
   140008aff:	int3   
   140008b00:	rex push rbx
   140008b02:	sub    rsp,0x20
   140008b06:	mov    rbx,rdx
   140008b09:	lea    rdx,[rcx+0x18]
   140008b0d:	mov    DWORD PTR [rsp+0x30],0x0
   140008b15:	mov    rcx,rbx
   140008b18:	call   QWORD PTR [rip+0x12812]        # 0x14001b330
   140008b1e:	mov    rax,rbx
   140008b21:	add    rsp,0x20
   140008b25:	pop    rbx
   140008b26:	ret    
   140008b27:	int3   
   140008b28:	int3   
   140008b29:	int3   
   140008b2a:	int3   
   140008b2b:	int3   
   140008b2c:	int3   
   140008b2d:	int3   
   140008b2e:	int3   
   140008b2f:	int3   
   140008b30:	rex push rbx
   140008b32:	sub    rsp,0x20
   140008b36:	mov    rbx,rdx
   140008b39:	lea    rdx,[rcx+0x20]
   140008b3d:	mov    DWORD PTR [rsp+0x30],0x0
   140008b45:	mov    rcx,rbx
   140008b48:	call   QWORD PTR [rip+0x127e2]        # 0x14001b330
   140008b4e:	mov    rax,rbx
   140008b51:	add    rsp,0x20
   140008b55:	pop    rbx
   140008b56:	ret    
   140008b57:	int3   
   140008b58:	int3   
   140008b59:	int3   
   140008b5a:	int3   
   140008b5b:	int3   
   140008b5c:	int3   
   140008b5d:	int3   
   140008b5e:	int3   
   140008b5f:	int3   
   140008b60:	add    rcx,0x18
   140008b64:	rex.W jmp QWORD PTR [rip+0x1276d]        # 0x14001b2d8
   140008b6b:	int3   
   140008b6c:	int3   
   140008b6d:	int3   
   140008b6e:	int3   
   140008b6f:	int3   
   140008b70:	add    rcx,0x20
   140008b74:	rex.W jmp QWORD PTR [rip+0x1275d]        # 0x14001b2d8
   140008b7b:	int3   
   140008b7c:	int3   
   140008b7d:	int3   
   140008b7e:	int3   
   140008b7f:	int3   
   140008b80:	mov    QWORD PTR [rsp+0x8],rbx
   140008b85:	push   rdi
   140008b86:	sub    rsp,0x20
   140008b8a:	mov    rdi,rcx
   140008b8d:	add    rcx,0x8
   140008b91:	mov    rbx,rdx
   140008b94:	call   QWORD PTR [rip+0x126ce]        # 0x14001b268
   140008b9a:	mov    rcx,rbx
   140008b9d:	call   QWORD PTR [rip+0x12715]        # 0x14001b2b8
   140008ba3:	mov    QWORD PTR [rdi+0x10],rax
   140008ba7:	test   rax,rax
   140008baa:	je     0x140008bba
   140008bac:	mov    rdx,QWORD PTR [rax]
   140008baf:	mov    rcx,rax
   140008bb2:	call   QWORD PTR [rdx+0x10]
   140008bb5:	cmp    eax,0x4
   140008bb8:	jne    0x140008bc2
   140008bba:	mov    QWORD PTR [rdi+0x10],0x0
   140008bc2:	mov    rbx,QWORD PTR [rsp+0x30]
   140008bc7:	add    rsp,0x20
   140008bcb:	pop    rdi
   140008bcc:	ret    
   140008bcd:	int3   
   140008bce:	int3   
   140008bcf:	int3   
   140008bd0:	mov    QWORD PTR [rsp+0x8],rbx
   140008bd5:	mov    QWORD PTR [rsp+0x10],rsi
   140008bda:	push   rdi
   140008bdb:	sub    rsp,0x20
   140008bdf:	mov    rbx,QWORD PTR [rcx+0x10]
   140008be3:	mov    rsi,rdx
   140008be6:	test   rbx,rbx
   140008be9:	je     0x140008c3a
   140008beb:	xor    edi,edi
   140008bed:	nop    DWORD PTR [rax]
   140008bf0:	lea    rcx,[rbx+0x18]
   140008bf4:	mov    rdx,rsi
   140008bf7:	call   0x1400089d0
   140008bfc:	test   al,al
   140008bfe:	jne    0x140008c09
   140008c00:	mov    rdi,rbx
   140008c03:	mov    rbx,QWORD PTR [rbx+0x8]
   140008c07:	jmp    0x140008c0d
   140008c09:	mov    rbx,QWORD PTR [rbx+0x10]
   140008c0d:	test   rbx,rbx
   140008c10:	jne    0x140008bf0
   140008c12:	test   rdi,rdi
   140008c15:	je     0x140008c3a
   140008c17:	lea    rdx,[rdi+0x18]
   140008c1b:	mov    rcx,rsi
   140008c1e:	call   0x1400089d0
   140008c23:	test   al,al
   140008c25:	jne    0x140008c3a
   140008c27:	mov    rax,rdi
   140008c2a:	mov    rbx,QWORD PTR [rsp+0x30]
   140008c2f:	mov    rsi,QWORD PTR [rsp+0x38]
   140008c34:	add    rsp,0x20
   140008c38:	pop    rdi
   140008c39:	ret    
   140008c3a:	mov    rbx,QWORD PTR [rsp+0x30]
   140008c3f:	mov    rsi,QWORD PTR [rsp+0x38]
   140008c44:	xor    eax,eax
   140008c46:	add    rsp,0x20
   140008c4a:	pop    rdi
   140008c4b:	ret    
   140008c4c:	int3   
   140008c4d:	int3   
   140008c4e:	int3   
   140008c4f:	int3   
   140008c50:	rex push rbx
   140008c52:	sub    rsp,0x20
   140008c56:	add    rcx,0x20
   140008c5a:	xor    r8d,r8d
   140008c5d:	mov    rbx,rdx
   140008c60:	mov    DWORD PTR [rsp+0x30],0x0
   140008c68:	call   0x140006c00
   140008c6d:	mov    rax,rbx
   140008c70:	add    rsp,0x20
   140008c74:	pop    rbx
   140008c75:	ret    
   140008c76:	int3   
   140008c77:	int3   
   140008c78:	int3   
   140008c79:	int3   
   140008c7a:	int3   
   140008c7b:	int3   
   140008c7c:	int3   
   140008c7d:	int3   
   140008c7e:	int3   
   140008c7f:	int3   
   140008c80:	mov    QWORD PTR [rsp+0x8],rbx
   140008c85:	push   rdi
   140008c86:	sub    rsp,0x20
   140008c8a:	mov    rbx,rdx
   140008c8d:	mov    rdi,rcx
   140008c90:	call   QWORD PTR [rip+0x12b02]        # 0x14001b798
   140008c96:	lea    rax,[rip+0x1522b]        # 0x14001dec8
   140008c9d:	lea    r11,[rip+0x151b4]        # 0x14001de58
   140008ca4:	lea    rcx,[rdi+0x48]
   140008ca8:	mov    QWORD PTR [rdi+0x8],rax
   140008cac:	lea    rax,[rip+0x15175]        # 0x14001de28
   140008cb3:	mov    QWORD PTR [rdi+0x38],rbx
   140008cb7:	mov    QWORD PTR [rdi+0x10],rax
   140008cbb:	lea    rax,[rip+0x15146]        # 0x14001de08
   140008cc2:	mov    QWORD PTR [rdi],r11
   140008cc5:	mov    QWORD PTR [rdi+0x18],rax
   140008cc9:	lea    rax,[rip+0x150e8]        # 0x14001ddb8
   140008cd0:	mov    DWORD PTR [rdi+0x40],0x1
   140008cd7:	mov    QWORD PTR [rdi+0x20],rax
   140008cdb:	lea    rax,[rip+0x1509e]        # 0x14001dd80
   140008ce2:	mov    BYTE PTR [rdi+0x44],0x0
   140008ce6:	mov    QWORD PTR [rdi+0x28],rax
   140008cea:	call   QWORD PTR [rip+0x12920]        # 0x14001b610
   140008cf0:	lea    rcx,[rdi+0x50]
   140008cf4:	call   QWORD PTR [rip+0x12916]        # 0x14001b610
   140008cfa:	lea    rcx,[rdi+0x58]
   140008cfe:	call   QWORD PTR [rip+0x1290c]        # 0x14001b610
   140008d04:	lea    rcx,[rdi+0x60]
   140008d08:	call   QWORD PTR [rip+0x12902]        # 0x14001b610
   140008d0e:	lea    rcx,[rdi+0x68]
   140008d12:	call   QWORD PTR [rip+0x128f8]        # 0x14001b610
   140008d18:	mov    r11,QWORD PTR [rip+0x128c1]        # 0x14001b5e0
   140008d1f:	lea    rcx,[rdi+0x78]
   140008d23:	mov    QWORD PTR [rdi+0x70],r11
   140008d27:	call   QWORD PTR [rip+0x128e3]        # 0x14001b610
   140008d2d:	lea    rcx,[rdi+0x88]
   140008d34:	call   QWORD PTR [rip+0x128d6]        # 0x14001b610
   140008d3a:	mov    rbx,QWORD PTR [rsp+0x30]
   140008d3f:	mov    DWORD PTR [rdi+0x90],0x0
   140008d49:	mov    BYTE PTR [rdi+0x94],0x0
   140008d50:	mov    BYTE PTR [rdi+0x95],0x0
   140008d57:	mov    BYTE PTR [rdi+0x96],0x0
   140008d5e:	mov    rax,rdi
   140008d61:	add    rsp,0x20
   140008d65:	pop    rdi
   140008d66:	ret    
   140008d67:	int3   
   140008d68:	int3   
   140008d69:	int3   
   140008d6a:	int3   
   140008d6b:	int3   
   140008d6c:	int3   
   140008d6d:	int3   
   140008d6e:	int3   
   140008d6f:	int3   
   140008d70:	sub    rcx,0x18
   140008d74:	jmp    0x14000a150
   140008d79:	int3   
   140008d7a:	int3   
   140008d7b:	int3   
   140008d7c:	int3   
   140008d7d:	int3   
   140008d7e:	int3   
   140008d7f:	int3   
   140008d80:	sub    rcx,0x20
   140008d84:	jmp    0x14000a150
   140008d89:	int3   
   140008d8a:	int3   
   140008d8b:	int3   
   140008d8c:	int3   
   140008d8d:	int3   
   140008d8e:	int3   
   140008d8f:	int3   
   140008d90:	sub    rcx,0x8
   140008d94:	jmp    0x14000a150
   140008d99:	int3   
   140008d9a:	int3   
   140008d9b:	int3   
   140008d9c:	int3   
   140008d9d:	int3   
   140008d9e:	int3   
   140008d9f:	int3   
   140008da0:	sub    rcx,0x28
   140008da4:	jmp    0x14000a150
   140008da9:	int3   
   140008daa:	int3   
   140008dab:	int3   
   140008dac:	int3   
   140008dad:	int3   
   140008dae:	int3   
   140008daf:	int3   
   140008db0:	sub    rcx,0x10
   140008db4:	jmp    0x14000a150
   140008db9:	int3   
   140008dba:	int3   
   140008dbb:	int3   
   140008dbc:	int3   
   140008dbd:	int3   
   140008dbe:	int3   
   140008dbf:	int3   
   140008dc0:	mov    QWORD PTR [rsp+0x8],rcx
   140008dc5:	push   rbx
   140008dc6:	sub    rsp,0x30
   140008dca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008dd3:	mov    rbx,rcx
   140008dd6:	add    rcx,0x88
   140008ddd:	call   QWORD PTR [rip+0x12845]        # 0x14001b628
   140008de3:	nop
   140008de4:	lea    rcx,[rbx+0x78]
   140008de8:	call   QWORD PTR [rip+0x1283a]        # 0x14001b628
   140008dee:	nop
   140008def:	lea    rcx,[rbx+0x70]
   140008df3:	call   0x140002880
   140008df8:	nop
   140008df9:	lea    rcx,[rbx+0x68]
   140008dfd:	call   QWORD PTR [rip+0x12825]        # 0x14001b628
   140008e03:	nop
   140008e04:	lea    rcx,[rbx+0x60]
   140008e08:	call   QWORD PTR [rip+0x1281a]        # 0x14001b628
   140008e0e:	nop
   140008e0f:	lea    rcx,[rbx+0x58]
   140008e13:	call   QWORD PTR [rip+0x1280f]        # 0x14001b628
   140008e19:	nop
   140008e1a:	lea    rcx,[rbx+0x50]
   140008e1e:	call   QWORD PTR [rip+0x12804]        # 0x14001b628
   140008e24:	nop
   140008e25:	lea    rcx,[rbx+0x48]
   140008e29:	call   QWORD PTR [rip+0x127f9]        # 0x14001b628
   140008e2f:	nop
   140008e30:	mov    rcx,rbx
   140008e33:	add    rsp,0x30
   140008e37:	pop    rbx
   140008e38:	rex.W jmp QWORD PTR [rip+0x12961]        # 0x14001b7a0
   140008e3f:	int3   
   140008e40:	mov    rax,rsp
   140008e43:	push   rdi
   140008e44:	push   r12
   140008e46:	push   r13
   140008e48:	sub    rsp,0x80
   140008e4f:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   140008e58:	mov    QWORD PTR [rax+0x8],rbx
   140008e5c:	mov    QWORD PTR [rax+0x10],rbp
   140008e60:	mov    QWORD PTR [rax+0x18],rsi
   140008e64:	mov    rsi,r9
   140008e67:	mov    rbp,rcx
   140008e6a:	xor    ebx,ebx
   140008e6c:	mov    DWORD PTR [rax-0x60],ebx
   140008e6f:	xor    eax,eax
   140008e71:	or     r13,0xffffffffffffffff
   140008e75:	mov    rcx,r13
   140008e78:	lea    rdi,[rip+0x15175]        # 0x14001dff4
   140008e7f:	repnz scas al,BYTE PTR es:[rdi]
   140008e81:	not    rcx
   140008e84:	lea    rdx,[rcx-0x1]
   140008e88:	lea    rcx,[rip+0x15165]        # 0x14001dff4
   140008e8f:	call   QWORD PTR [rip+0x12783]        # 0x14001b618
   140008e95:	mov    QWORD PTR [rsp+0x38],rax
   140008e9a:	lea    rdx,[rsp+0x38]
   140008e9f:	mov    rcx,rsi
   140008ea2:	call   QWORD PTR [rip+0x12788]        # 0x14001b630
   140008ea8:	movzx  edi,al
   140008eab:	lea    rcx,[rsp+0x38]
   140008eb0:	call   QWORD PTR [rip+0x12772]        # 0x14001b628
   140008eb6:	test   dil,dil
   140008eb9:	je     0x140009037
   140008ebf:	mov    rsi,QWORD PTR [rsp+0xc0]
   140008ec7:	mov    rcx,rsi
   140008eca:	call   QWORD PTR [rip+0x12798]        # 0x14001b668
   140008ed0:	test   eax,eax
   140008ed2:	jle    0x140009030
   140008ed8:	nop    DWORD PTR [rax+rax*1+0x0]
   140008ee0:	xor    eax,eax
   140008ee2:	mov    rcx,r13
   140008ee5:	lea    rdi,[rip+0x15100]        # 0x14001dfec
   140008eec:	repnz scas al,BYTE PTR es:[rdi]
   140008eee:	not    rcx
   140008ef1:	lea    rdx,[rcx-0x1]
   140008ef5:	lea    rcx,[rip+0x150f0]        # 0x14001dfec
   140008efc:	call   QWORD PTR [rip+0x12716]        # 0x14001b618
   140008f02:	mov    QWORD PTR [rsp+0x50],rax
   140008f07:	mov    r8d,ebx
   140008f0a:	lea    rdx,[rsp+0x60]
   140008f0f:	mov    rcx,rsi
   140008f12:	call   QWORD PTR [rip+0x12758]        # 0x14001b670
   140008f18:	nop
   140008f19:	lea    rdx,[rsp+0x50]
   140008f1e:	mov    rcx,rax
   140008f21:	call   QWORD PTR [rip+0x12709]        # 0x14001b630
   140008f27:	movzx  edi,al
   140008f2a:	lea    rcx,[rsp+0x60]
   140008f2f:	call   QWORD PTR [rip+0x126f3]        # 0x14001b628
   140008f35:	nop
   140008f36:	lea    rcx,[rsp+0x50]
   140008f3b:	call   QWORD PTR [rip+0x126e7]        # 0x14001b628
   140008f41:	test   dil,dil
   140008f44:	je     0x140009016
   140008f4a:	mov    r8d,ebx
   140008f4d:	lea    rdx,[rsp+0x38]
   140008f52:	mov    rcx,rsi
   140008f55:	call   QWORD PTR [rip+0x1271d]        # 0x14001b678
   140008f5b:	nop
   140008f5c:	xor    eax,eax
   140008f5e:	lea    r12d,[rax+0xa]
   140008f62:	mov    rcx,r13
   140008f65:	lea    rdi,[rip+0x1507c]        # 0x14001dfe8
   140008f6c:	repnz scas al,BYTE PTR es:[rdi]
   140008f6e:	not    rcx
   140008f71:	lea    rdx,[rcx-0x1]
   140008f75:	lea    rcx,[rip+0x1506c]        # 0x14001dfe8
   140008f7c:	call   QWORD PTR [rip+0x12696]        # 0x14001b618
   140008f82:	mov    QWORD PTR [rsp+0x20],rax
   140008f87:	lea    r8d,[r12-0x9]
   140008f8c:	lea    rdx,[rsp+0x20]
   140008f91:	lea    rcx,[rsp+0x38]
   140008f96:	call   QWORD PTR [rip+0x124e4]        # 0x14001b480
   140008f9c:	movzx  edi,al
   140008f9f:	lea    rcx,[rsp+0x20]
   140008fa4:	call   QWORD PTR [rip+0x1267e]        # 0x14001b628
   140008faa:	test   dil,dil
   140008fad:	je     0x140008fe6
   140008faf:	mov    r12d,0x10
   140008fb5:	mov    r9d,r13d
   140008fb8:	lea    r8d,[r12-0xf]
   140008fbd:	lea    rdx,[rsp+0x30]
   140008fc2:	lea    rcx,[rsp+0x38]
   140008fc7:	call   QWORD PTR [rip+0x124ab]        # 0x14001b478
   140008fcd:	mov    rdx,rax
   140008fd0:	lea    rcx,[rsp+0x38]
   140008fd5:	call   QWORD PTR [rip+0x122fd]        # 0x14001b2d8
   140008fdb:	lea    rcx,[rsp+0x30]
   140008fe0:	call   QWORD PTR [rip+0x12642]        # 0x14001b628
   140008fe6:	mov    r8d,r12d
   140008fe9:	xor    edx,edx
   140008feb:	lea    rcx,[rsp+0x38]
   140008ff0:	call   QWORD PTR [rip+0x1247a]        # 0x14001b470
   140008ff6:	test   eax,eax
   140008ff8:	je     0x14000900b
   140008ffa:	lea    rcx,[rbp+0x88]
   140009001:	movzx  edx,ax
   140009004:	call   QWORD PTR [rip+0x1241e]        # 0x14001b428
   14000900a:	nop
   14000900b:	lea    rcx,[rsp+0x38]
   140009010:	call   QWORD PTR [rip+0x12612]        # 0x14001b628
   140009016:	inc    ebx
   140009018:	mov    rcx,rsi
   14000901b:	call   QWORD PTR [rip+0x12647]        # 0x14001b668
   140009021:	cmp    ebx,eax
   140009023:	jl     0x140008ee0
   140009029:	mov    al,0x1
   14000902b:	jmp    0x140009607
   140009030:	mov    al,0x1
   140009032:	jmp    0x140009607
   140009037:	xor    eax,eax
   140009039:	mov    rcx,r13
   14000903c:	lea    rdi,[rip+0x14fa1]        # 0x14001dfe4
   140009043:	repnz scas al,BYTE PTR es:[rdi]
   140009045:	not    rcx
   140009048:	lea    rdx,[rcx-0x1]
   14000904c:	lea    rcx,[rip+0x14f91]        # 0x14001dfe4
   140009053:	call   QWORD PTR [rip+0x125bf]        # 0x14001b618
   140009059:	mov    QWORD PTR [rsp+0x20],rax
   14000905e:	lea    rdx,[rsp+0x20]
   140009063:	mov    rcx,rsi
   140009066:	call   QWORD PTR [rip+0x125c4]        # 0x14001b630
   14000906c:	movzx  edi,al
   14000906f:	lea    rcx,[rsp+0x20]
   140009074:	call   QWORD PTR [rip+0x125ae]        # 0x14001b628
   14000907a:	test   dil,dil
   14000907d:	je     0x14000913c
   140009083:	xor    eax,eax
   140009085:	mov    rcx,r13
   140009088:	lea    rdx,[rip+0x14f49]        # 0x14001dfd8
   14000908f:	mov    rdi,rdx
   140009092:	repnz scas al,BYTE PTR es:[rdi]
   140009094:	not    rcx
   140009097:	dec    rcx
   14000909a:	mov    DWORD PTR [rsp+0x40],ecx
   14000909e:	mov    QWORD PTR [rsp+0x48],rdx
   1400090a3:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400090a8:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400090ae:	lea    r8,[rsp+0x40]
   1400090b3:	lea    rdx,[rsp+0x30]
   1400090b8:	mov    rbx,QWORD PTR [rsp+0xc0]
   1400090c0:	mov    rcx,rbx
   1400090c3:	call   QWORD PTR [rip+0x1258f]        # 0x14001b658
   1400090c9:	lea    rcx,[rbp+0x48]
   1400090cd:	mov    rdx,rax
   1400090d0:	call   QWORD PTR [rip+0x12202]        # 0x14001b2d8
   1400090d6:	lea    rcx,[rsp+0x30]
   1400090db:	call   QWORD PTR [rip+0x12547]        # 0x14001b628
   1400090e1:	xor    eax,eax
   1400090e3:	mov    rcx,r13
   1400090e6:	lea    rdx,[rip+0x14edb]        # 0x14001dfc8
   1400090ed:	mov    rdi,rdx
   1400090f0:	repnz scas al,BYTE PTR es:[rdi]
   1400090f2:	not    rcx
   1400090f5:	dec    rcx
   1400090f8:	mov    DWORD PTR [rsp+0x40],ecx
   1400090fc:	mov    QWORD PTR [rsp+0x48],rdx
   140009101:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140009106:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14000910c:	lea    r8,[rsp+0x40]
   140009111:	lea    rdx,[rsp+0x30]
   140009116:	mov    rcx,rbx
   140009119:	call   QWORD PTR [rip+0x12539]        # 0x14001b658
   14000911f:	lea    rcx,[rbp+0x50]
   140009123:	mov    rdx,rax
   140009126:	call   QWORD PTR [rip+0x121ac]        # 0x14001b2d8
   14000912c:	lea    rcx,[rsp+0x30]
   140009131:	call   QWORD PTR [rip+0x124f1]        # 0x14001b628
   140009137:	jmp    0x1400095f6
   14000913c:	xor    eax,eax
   14000913e:	mov    rcx,r13
   140009141:	lea    rdi,[rip+0x14e78]        # 0x14001dfc0
   140009148:	repnz scas al,BYTE PTR es:[rdi]
   14000914a:	not    rcx
   14000914d:	lea    rdx,[rcx-0x1]
   140009151:	lea    rcx,[rip+0x14e68]        # 0x14001dfc0
   140009158:	call   QWORD PTR [rip+0x124ba]        # 0x14001b618
   14000915e:	mov    QWORD PTR [rsp+0x20],rax
   140009163:	lea    rdx,[rsp+0x20]
   140009168:	mov    rcx,rsi
   14000916b:	call   QWORD PTR [rip+0x124bf]        # 0x14001b630
   140009171:	movzx  edi,al
   140009174:	lea    rcx,[rsp+0x20]
   140009179:	call   QWORD PTR [rip+0x124a9]        # 0x14001b628
   14000917f:	test   dil,dil
   140009182:	je     0x1400091c9
   140009184:	lea    rcx,[rbp+0x58]
   140009188:	xor    edx,edx
   14000918a:	call   QWORD PTR [rip+0x12130]        # 0x14001b2c0
   140009190:	lea    rcx,[rbp+0x60]
   140009194:	xor    edx,edx
   140009196:	call   QWORD PTR [rip+0x12124]        # 0x14001b2c0
   14000919c:	lea    rcx,[rbp+0x68]
   1400091a0:	xor    edx,edx
   1400091a2:	call   QWORD PTR [rip+0x12118]        # 0x14001b2c0
   1400091a8:	lea    rcx,[rbp+0x70]
   1400091ac:	call   0x1400046a0
   1400091b1:	mov    rcx,QWORD PTR [rsp+0xc0]
   1400091b9:	call   0x140008090
   1400091be:	mov    BYTE PTR [rbp+0x94],al
   1400091c4:	jmp    0x1400095f6
   1400091c9:	xor    eax,eax
   1400091cb:	mov    rcx,r13
   1400091ce:	lea    rdi,[rip+0x14de3]        # 0x14001dfb8
   1400091d5:	repnz scas al,BYTE PTR es:[rdi]
   1400091d7:	not    rcx
   1400091da:	lea    rdx,[rcx-0x1]
   1400091de:	lea    rcx,[rip+0x14dd3]        # 0x14001dfb8
   1400091e5:	call   QWORD PTR [rip+0x1242d]        # 0x14001b618
   1400091eb:	mov    QWORD PTR [rsp+0x20],rax
   1400091f0:	lea    rdx,[rsp+0x20]
   1400091f5:	mov    rcx,rsi
   1400091f8:	call   QWORD PTR [rip+0x12432]        # 0x14001b630
   1400091fe:	movzx  edi,al
   140009201:	lea    rcx,[rsp+0x20]
   140009206:	call   QWORD PTR [rip+0x1241c]        # 0x14001b628
   14000920c:	test   dil,dil
   14000920f:	je     0x1400092ee
   140009215:	mov    BYTE PTR [rbp+0x44],0x1
   140009219:	mov    DWORD PTR [rbp+0x40],0x1
   140009220:	lea    rcx,[rbp+0x60]
   140009224:	xor    edx,edx
   140009226:	call   QWORD PTR [rip+0x12094]        # 0x14001b2c0
   14000922c:	lea    rcx,[rbp+0x68]
   140009230:	xor    edx,edx
   140009232:	call   QWORD PTR [rip+0x12088]        # 0x14001b2c0
   140009238:	lea    rcx,[rbp+0x70]
   14000923c:	call   0x1400046a0
   140009241:	mov    rbx,QWORD PTR [rsp+0xc0]
   140009249:	mov    rcx,rbx
   14000924c:	call   0x140008090
   140009251:	mov    BYTE PTR [rbp+0x95],al
   140009257:	xor    eax,eax
   140009259:	mov    rcx,r13
   14000925c:	lea    rdx,[rip+0x14d4d]        # 0x14001dfb0
   140009263:	mov    rdi,rdx
   140009266:	repnz scas al,BYTE PTR es:[rdi]
   140009268:	not    rcx
   14000926b:	dec    rcx
   14000926e:	mov    DWORD PTR [rsp+0x40],ecx
   140009272:	mov    QWORD PTR [rsp+0x48],rdx
   140009277:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14000927c:	movdqa XMMWORD PTR [rsp+0x60],xmm0
   140009282:	mov    rcx,r13
   140009285:	lea    rdx,[rip+0x14d1c]        # 0x14001dfa8
   14000928c:	mov    rdi,rdx
   14000928f:	repnz scas al,BYTE PTR es:[rdi]
   140009291:	not    rcx
   140009294:	dec    rcx
   140009297:	mov    DWORD PTR [rsp+0x40],ecx
   14000929b:	mov    QWORD PTR [rsp+0x48],rdx
   1400092a0:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400092a5:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400092ab:	lea    r8,[rsp+0x40]
   1400092b0:	lea    rdx,[rsp+0x30]
   1400092b5:	mov    rcx,rbx
   1400092b8:	call   QWORD PTR [rip+0x1239a]        # 0x14001b658
   1400092be:	nop
   1400092bf:	mov    r8d,0x1
   1400092c5:	lea    rdx,[rsp+0x60]
   1400092ca:	mov    rcx,rax
   1400092cd:	call   QWORD PTR [rip+0x12195]        # 0x14001b468
   1400092d3:	test   eax,eax
   1400092d5:	sete   al
   1400092d8:	mov    BYTE PTR [rbp+0x96],al
   1400092de:	lea    rcx,[rsp+0x30]
   1400092e3:	call   QWORD PTR [rip+0x1233f]        # 0x14001b628
   1400092e9:	jmp    0x1400095f6
   1400092ee:	xor    eax,eax
   1400092f0:	mov    rcx,r13
   1400092f3:	lea    rdi,[rip+0x14c9e]        # 0x14001df98
   1400092fa:	repnz scas al,BYTE PTR es:[rdi]
   1400092fc:	not    rcx
   1400092ff:	lea    rdx,[rcx-0x1]
   140009303:	lea    rcx,[rip+0x14c8e]        # 0x14001df98
   14000930a:	call   QWORD PTR [rip+0x12308]        # 0x14001b618
   140009310:	mov    QWORD PTR [rsp+0x20],rax
   140009315:	mov    DWORD PTR [rsp+0x38],0x1
   14000931d:	lea    rdx,[rsp+0x20]
   140009322:	mov    rcx,rsi
   140009325:	call   QWORD PTR [rip+0x12305]        # 0x14001b630
   14000932b:	test   al,al
   14000932d:	je     0x14000933a
   14000932f:	cmp    BYTE PTR [rbp+0x44],0x0
   140009333:	je     0x14000933a
   140009335:	mov    dil,0x1
   140009338:	jmp    0x14000933d
   14000933a:	xor    dil,dil
   14000933d:	lea    rcx,[rsp+0x20]
   140009342:	call   QWORD PTR [rip+0x122e0]        # 0x14001b628
   140009348:	test   dil,dil
   14000934b:	je     0x140009433
   140009351:	xor    eax,eax
   140009353:	mov    rcx,r13
   140009356:	lea    rdi,[rip+0x14c2f]        # 0x14001df8c
   14000935d:	repnz scas al,BYTE PTR es:[rdi]
   14000935f:	not    rcx
   140009362:	lea    rdx,[rcx-0x1]
   140009366:	lea    rcx,[rip+0x14c1f]        # 0x14001df8c
   14000936d:	call   QWORD PTR [rip+0x122a5]        # 0x14001b618
   140009373:	mov    QWORD PTR [rsp+0x20],rax
   140009378:	lea    r8,[rsp+0x20]
   14000937d:	lea    rdx,[rsp+0x30]
   140009382:	mov    rbx,QWORD PTR [rsp+0xc0]
   14000938a:	mov    rcx,rbx
   14000938d:	call   QWORD PTR [rip+0x122ed]        # 0x14001b680
   140009393:	nop
   140009394:	mov    r8d,0xa
   14000939a:	lea    rdx,[rsp+0x28]
   14000939f:	mov    rcx,rax
   1400093a2:	call   QWORD PTR [rip+0x120b8]        # 0x14001b460
   1400093a8:	mov    esi,eax
   1400093aa:	lea    rcx,[rsp+0x30]
   1400093af:	call   QWORD PTR [rip+0x12273]        # 0x14001b628
   1400093b5:	nop
   1400093b6:	lea    rcx,[rsp+0x20]
   1400093bb:	call   QWORD PTR [rip+0x12267]        # 0x14001b628
   1400093c1:	cmp    BYTE PTR [rsp+0x28],0x0
   1400093c6:	cmove  esi,r13d
   1400093ca:	xor    eax,eax
   1400093cc:	mov    rcx,r13
   1400093cf:	lea    rdi,[rip+0x14baa]        # 0x14001df80
   1400093d6:	repnz scas al,BYTE PTR es:[rdi]
   1400093d8:	not    rcx
   1400093db:	lea    rdx,[rcx-0x1]
   1400093df:	lea    rcx,[rip+0x14b9a]        # 0x14001df80
   1400093e6:	call   QWORD PTR [rip+0x1222c]        # 0x14001b618
   1400093ec:	mov    QWORD PTR [rsp+0x20],rax
   1400093f1:	lea    r8,[rsp+0x20]
   1400093f6:	lea    rdx,[rsp+0x30]
   1400093fb:	mov    rcx,rbx
   1400093fe:	call   QWORD PTR [rip+0x1227c]        # 0x14001b680
   140009404:	lea    rcx,[rbp+0x78]
   140009408:	mov    rdx,rax
   14000940b:	call   QWORD PTR [rip+0x11ec7]        # 0x14001b2d8
   140009411:	lea    rcx,[rsp+0x30]
   140009416:	call   QWORD PTR [rip+0x1220c]        # 0x14001b628
   14000941c:	nop
   14000941d:	lea    rcx,[rsp+0x20]
   140009422:	call   QWORD PTR [rip+0x12200]        # 0x14001b628
   140009428:	mov    DWORD PTR [rbp+0x80],esi
   14000942e:	jmp    0x1400095f6
   140009433:	xor    eax,eax
   140009435:	mov    rcx,r13
   140009438:	lea    rdi,[rip+0x14b31]        # 0x14001df70
   14000943f:	repnz scas al,BYTE PTR es:[rdi]
   140009441:	not    rcx
   140009444:	lea    rdx,[rcx-0x1]
   140009448:	lea    rcx,[rip+0x14b21]        # 0x14001df70
   14000944f:	call   QWORD PTR [rip+0x121c3]        # 0x14001b618
   140009455:	mov    QWORD PTR [rsp+0x20],rax
   14000945a:	lea    rdx,[rsp+0x20]
   14000945f:	mov    rcx,rsi
   140009462:	call   QWORD PTR [rip+0x121c8]        # 0x14001b630
   140009468:	movzx  edi,al
   14000946b:	lea    rcx,[rsp+0x20]
   140009470:	call   QWORD PTR [rip+0x121b2]        # 0x14001b628
   140009476:	test   dil,dil
   140009479:	je     0x1400095f6
   14000947f:	mov    esi,ebx
   140009481:	mov    r12,QWORD PTR [rsp+0xc0]
   140009489:	mov    rcx,r12
   14000948c:	call   QWORD PTR [rip+0x121d6]        # 0x14001b668
   140009492:	test   eax,eax
   140009494:	jle    0x1400095f6
   14000949a:	nop    WORD PTR [rax+rax*1+0x0]
   1400094a0:	xor    eax,eax
   1400094a2:	mov    rcx,r13
   1400094a5:	lea    rdi,[rip+0x14ab8]        # 0x14001df64
   1400094ac:	repnz scas al,BYTE PTR es:[rdi]
   1400094ae:	not    rcx
   1400094b1:	lea    rdx,[rcx-0x1]
   1400094b5:	lea    rcx,[rip+0x14aa8]        # 0x14001df64
   1400094bc:	call   QWORD PTR [rip+0x12156]        # 0x14001b618
   1400094c2:	mov    QWORD PTR [rsp+0x20],rax
   1400094c7:	mov    r8d,esi
   1400094ca:	lea    rdx,[rsp+0x30]
   1400094cf:	mov    rcx,r12
   1400094d2:	call   QWORD PTR [rip+0x12198]        # 0x14001b670
   1400094d8:	nop
   1400094d9:	lea    rdx,[rsp+0x20]
   1400094de:	mov    rcx,rax
   1400094e1:	call   QWORD PTR [rip+0x12149]        # 0x14001b630
   1400094e7:	movzx  edi,al
   1400094ea:	lea    rcx,[rsp+0x30]
   1400094ef:	call   QWORD PTR [rip+0x12133]        # 0x14001b628
   1400094f5:	nop
   1400094f6:	lea    rcx,[rsp+0x20]
   1400094fb:	call   QWORD PTR [rip+0x12127]        # 0x14001b628
   140009501:	test   dil,dil
   140009504:	je     0x1400095e3
   14000950a:	xor    eax,eax
   14000950c:	mov    rcx,r13
   14000950f:	lea    rdi,[rip+0x14a42]        # 0x14001df58
   140009516:	repnz scas al,BYTE PTR es:[rdi]
   140009518:	not    rcx
   14000951b:	lea    rdx,[rcx-0x1]
   14000951f:	lea    rcx,[rip+0x14a32]        # 0x14001df58
   140009526:	call   QWORD PTR [rip+0x120ec]        # 0x14001b618
   14000952c:	mov    QWORD PTR [rsp+0x50],rax
   140009531:	mov    r8d,esi
   140009534:	lea    rdx,[rsp+0x60]
   140009539:	mov    rcx,r12
   14000953c:	call   QWORD PTR [rip+0x12136]        # 0x14001b678
   140009542:	nop
   140009543:	lea    rdx,[rsp+0x50]
   140009548:	mov    rcx,rax
   14000954b:	call   QWORD PTR [rip+0x120df]        # 0x14001b630
   140009551:	movzx  edi,al
   140009554:	lea    rcx,[rsp+0x60]
   140009559:	call   QWORD PTR [rip+0x120c9]        # 0x14001b628
   14000955f:	nop
   140009560:	lea    rcx,[rsp+0x50]
   140009565:	call   QWORD PTR [rip+0x120bd]        # 0x14001b628
   14000956b:	test   dil,dil
   14000956e:	je     0x140009575
   140009570:	mov    DWORD PTR [rbp+0x40],ebx
   140009573:	jmp    0x1400095e3
   140009575:	xor    eax,eax
   140009577:	mov    rcx,r13
   14000957a:	lea    rdi,[rip+0x149c7]        # 0x14001df48
   140009581:	repnz scas al,BYTE PTR es:[rdi]
   140009583:	not    rcx
   140009586:	lea    rdx,[rcx-0x1]
   14000958a:	lea    rcx,[rip+0x149b7]        # 0x14001df48
   140009591:	call   QWORD PTR [rip+0x12081]        # 0x14001b618
   140009597:	mov    QWORD PTR [rsp+0x38],rax
   14000959c:	mov    r8d,esi
   14000959f:	lea    rdx,[rsp+0x40]
   1400095a4:	mov    rcx,r12
   1400095a7:	call   QWORD PTR [rip+0x120cb]        # 0x14001b678
   1400095ad:	nop
   1400095ae:	lea    rdx,[rsp+0x38]
   1400095b3:	mov    rcx,rax
   1400095b6:	call   QWORD PTR [rip+0x12074]        # 0x14001b630
   1400095bc:	movzx  edi,al
   1400095bf:	lea    rcx,[rsp+0x40]
   1400095c4:	call   QWORD PTR [rip+0x1205e]        # 0x14001b628
   1400095ca:	nop
   1400095cb:	lea    rcx,[rsp+0x38]
   1400095d0:	call   QWORD PTR [rip+0x12052]        # 0x14001b628
   1400095d6:	mov    edx,ebx
   1400095d8:	test   dil,dil
   1400095db:	setne  dl
   1400095de:	inc    edx
   1400095e0:	mov    DWORD PTR [rbp+0x40],edx
   1400095e3:	inc    esi
   1400095e5:	mov    rcx,r12
   1400095e8:	call   QWORD PTR [rip+0x1207a]        # 0x14001b668
   1400095ee:	cmp    esi,eax
   1400095f0:	jl     0x1400094a0
   1400095f6:	lea    rcx,[rbp+0x88]
   1400095fd:	xor    edx,edx
   1400095ff:	call   QWORD PTR [rip+0x11cbb]        # 0x14001b2c0
   140009605:	mov    al,0x1
   140009607:	lea    r11,[rsp+0x80]
   14000960f:	mov    rbx,QWORD PTR [r11+0x20]
   140009613:	mov    rbp,QWORD PTR [r11+0x28]
   140009617:	mov    rsi,QWORD PTR [r11+0x30]
   14000961b:	mov    rsp,r11
   14000961e:	pop    r13
   140009620:	pop    r12
   140009622:	pop    rdi
   140009623:	ret    
   140009624:	int3   
   140009625:	int3   
   140009626:	int3   
   140009627:	int3   
   140009628:	int3   
   140009629:	int3   
   14000962a:	int3   
   14000962b:	int3   
   14000962c:	int3   
   14000962d:	int3   
   14000962e:	int3   
   14000962f:	int3   
   140009630:	mov    QWORD PTR [rsp+0x8],rbx
   140009635:	mov    QWORD PTR [rsp+0x10],rsi
   14000963a:	push   rdi
   14000963b:	sub    rsp,0x40
   14000963f:	mov    rax,QWORD PTR [rsp+0x80]
   140009647:	mov    rbx,r9
   14000964a:	mov    rdi,r8
   14000964d:	mov    QWORD PTR [rsp+0x30],rax
   140009652:	mov    eax,DWORD PTR [rsp+0x78]
   140009656:	mov    rsi,rcx
   140009659:	mov    DWORD PTR [rsp+0x28],eax
   14000965d:	mov    rax,QWORD PTR [rsp+0x70]
   140009662:	mov    QWORD PTR [rsp+0x20],rax
   140009667:	call   0x140013a20
   14000966c:	cmp    BYTE PTR [rsp+0x88],0x0
   140009674:	mov    eax,DWORD PTR [rsp+0x90]
   14000967b:	mov    BYTE PTR [rsi+0x38],0x0
   14000967f:	mov    DWORD PTR [rsi+0x3c],eax
   140009682:	movzx  eax,BYTE PTR [rsp+0x98]
   14000968a:	mov    BYTE PTR [rsi+0x40],al
   14000968d:	je     0x1400096eb
   14000968f:	test   rdi,rdi
   140009692:	je     0x1400096b4
   140009694:	movzx  eax,BYTE PTR [rdi]
   140009697:	test   al,al
   140009699:	je     0x1400096b4
   14000969b:	nop    DWORD PTR [rax+rax*1+0x0]
   1400096a0:	cmp    al,0x80
   1400096a2:	jae    0x1400096b0
   1400096a4:	mov    al,BYTE PTR [rdi+0x1]
   1400096a7:	inc    rdi
   1400096aa:	test   al,al
   1400096ac:	jne    0x1400096a0
   1400096ae:	jmp    0x1400096b4
   1400096b0:	mov    BYTE PTR [rsi+0x38],0x1
   1400096b4:	cmp    BYTE PTR [rsi+0x38],0x0
   1400096b8:	jne    0x1400096eb
   1400096ba:	test   rbx,rbx
   1400096bd:	je     0x1400096eb
   1400096bf:	movzx  eax,BYTE PTR [rbx]
   1400096c2:	test   al,al
   1400096c4:	je     0x1400096eb
   1400096c6:	cmp    al,0x80
   1400096c8:	jae    0x1400096e7
   1400096ca:	mov    al,BYTE PTR [rbx+0x1]
   1400096cd:	inc    rbx
   1400096d0:	test   al,al
   1400096d2:	jne    0x1400096c6
   1400096d4:	mov    rax,rsi
   1400096d7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400096dc:	mov    rsi,QWORD PTR [rsp+0x58]
   1400096e1:	add    rsp,0x40
   1400096e5:	pop    rdi
   1400096e6:	ret    
   1400096e7:	mov    BYTE PTR [rsi+0x38],0x1
   1400096eb:	mov    rbx,QWORD PTR [rsp+0x50]
   1400096f0:	mov    rax,rsi
   1400096f3:	mov    rsi,QWORD PTR [rsp+0x58]
   1400096f8:	add    rsp,0x40
   1400096fc:	pop    rdi
   1400096fd:	ret    
   1400096fe:	int3   
   1400096ff:	int3   
   140009700:	mov    QWORD PTR [rsp+0x8],rbx
   140009705:	push   rdi
   140009706:	sub    rsp,0x20
   14000970a:	mov    rbx,rdx
   14000970d:	mov    rdi,rcx
   140009710:	call   0x140013b80
   140009715:	movzx  r11d,BYTE PTR [rbx+0x38]
   14000971a:	mov    BYTE PTR [rdi+0x38],r11b
   14000971e:	mov    eax,DWORD PTR [rbx+0x3c]
   140009721:	mov    DWORD PTR [rdi+0x3c],eax
   140009724:	movzx  eax,BYTE PTR [rbx+0x40]
   140009728:	mov    rbx,QWORD PTR [rsp+0x30]
   14000972d:	mov    BYTE PTR [rdi+0x40],al
   140009730:	mov    rax,rdi
   140009733:	add    rsp,0x20
   140009737:	pop    rdi
   140009738:	ret    
   140009739:	int3   
   14000973a:	int3   
   14000973b:	int3   
   14000973c:	int3   
   14000973d:	int3   
   14000973e:	int3   
   14000973f:	int3   
   140009740:	mov    r11,rsp
   140009743:	push   rdi
   140009744:	sub    rsp,0xa0
   14000974b:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140009754:	mov    QWORD PTR [r11+0x8],rbx
   140009758:	mov    QWORD PTR [r11+0x10],rbp
   14000975c:	mov    QWORD PTR [r11+0x18],rsi
   140009760:	mov    rbx,r9
   140009763:	mov    rdi,r8
   140009766:	mov    rsi,rdx
   140009769:	mov    rbp,rcx
   14000976c:	mov    rax,QWORD PTR [rip+0x11e6d]        # 0x14001b5e0
   140009773:	mov    QWORD PTR [r11-0x68],rax
   140009777:	lea    rcx,[r11-0x60]
   14000977b:	call   QWORD PTR [rip+0x11e8f]        # 0x14001b610
   140009781:	nop
   140009782:	lea    rcx,[rsp+0x40]
   140009787:	mov    QWORD PTR [rsp+0x30],rcx
   14000978c:	mov    DWORD PTR [rsp+0x28],0x0
   140009794:	mov    QWORD PTR [rsp+0x20],rax
   140009799:	mov    r9,rbx
   14000979c:	mov    r8,rdi
   14000979f:	mov    rdx,rsi
   1400097a2:	lea    rcx,[rsp+0x58]
   1400097a7:	call   0x140013a20
   1400097ac:	mov    BYTE PTR [rsp+0x90],0x0
   1400097b4:	mov    DWORD PTR [rsp+0x94],0x0
   1400097bf:	mov    BYTE PTR [rsp+0x98],0x0
   1400097c7:	lea    rdx,[rsp+0x58]
   1400097cc:	mov    rcx,QWORD PTR [rbp+0x0]
   1400097d0:	call   0x140008bd0
   1400097d5:	test   rax,rax
   1400097d8:	setne  bpl
   1400097dc:	lea    rcx,[rsp+0x80]
   1400097e4:	call   QWORD PTR [rip+0x11e3e]        # 0x14001b628
   1400097ea:	nop
   1400097eb:	lea    rcx,[rsp+0x78]
   1400097f0:	call   0x140002880
   1400097f5:	nop
   1400097f6:	lea    rcx,[rsp+0x70]
   1400097fb:	call   QWORD PTR [rip+0x11e1f]        # 0x14001b620
   140009801:	nop
   140009802:	lea    rcx,[rsp+0x68]
   140009807:	call   QWORD PTR [rip+0x11e13]        # 0x14001b620
   14000980d:	nop
   14000980e:	lea    rcx,[rsp+0x60]
   140009813:	call   QWORD PTR [rip+0x11e07]        # 0x14001b620
   140009819:	nop
   14000981a:	lea    rcx,[rsp+0x48]
   14000981f:	call   QWORD PTR [rip+0x11e03]        # 0x14001b628
   140009825:	nop
   140009826:	mov    rdi,QWORD PTR [rsp+0x40]
   14000982b:	mov    eax,DWORD PTR [rdi]
   14000982d:	test   eax,eax
   14000982f:	je     0x140009858
   140009831:	cmp    eax,0xffffffff
   140009834:	je     0x140009853
   140009836:	or     eax,0xffffffff
   140009839:	lock xadd DWORD PTR [rdi],eax
   14000983d:	add    eax,0xffffffff
   140009840:	setne  al
   140009843:	test   al,al
   140009845:	jne    0x14000984e
   140009847:	mov    rdi,QWORD PTR [rsp+0x40]
   14000984c:	jmp    0x140009858
   14000984e:	mov    al,bpl
   140009851:	jmp    0x14000988e
   140009853:	mov    al,bpl
   140009856:	jmp    0x14000988e
   140009858:	movsxd rax,DWORD PTR [rdi+0xc]
   14000985c:	lea    rbx,[rdi+rax*8+0x10]
   140009861:	movsxd rax,DWORD PTR [rdi+0x8]
   140009865:	lea    rsi,[rdi+rax*8+0x10]
   14000986a:	cmp    rsi,rbx
   14000986d:	je     0x140009882
   14000986f:	nop
   140009870:	sub    rbx,0x8
   140009874:	mov    rcx,rbx
   140009877:	call   QWORD PTR [rip+0x11dab]        # 0x14001b628
   14000987d:	cmp    rbx,rsi
   140009880:	jne    0x140009870
   140009882:	mov    rcx,rdi
   140009885:	call   QWORD PTR [rip+0x11a05]        # 0x14001b290
   14000988b:	mov    al,bpl
   14000988e:	lea    r11,[rsp+0xa0]
   140009896:	mov    rbx,QWORD PTR [r11+0x10]
   14000989a:	mov    rbp,QWORD PTR [r11+0x18]
   14000989e:	mov    rsi,QWORD PTR [r11+0x20]
   1400098a2:	mov    rsp,r11
   1400098a5:	pop    rdi
   1400098a6:	ret    
   1400098a7:	int3   
   1400098a8:	int3   
   1400098a9:	int3   
   1400098aa:	int3   
   1400098ab:	int3   
   1400098ac:	int3   
   1400098ad:	int3   
   1400098ae:	int3   
   1400098af:	int3   
   1400098b0:	mov    rax,rsp
   1400098b3:	mov    QWORD PTR [rax+0x10],rdx
   1400098b7:	push   rsi
   1400098b8:	push   rdi
   1400098b9:	push   r12
   1400098bb:	push   r13
   1400098bd:	push   r14
   1400098bf:	sub    rsp,0xf0
   1400098c6:	mov    QWORD PTR [rsp+0xe0],0xfffffffffffffffe
   1400098d2:	mov    QWORD PTR [rax+0x18],rbx
   1400098d6:	mov    QWORD PTR [rax+0x20],rbp
   1400098da:	mov    rbx,r9
   1400098dd:	mov    rdi,r8
   1400098e0:	mov    rbp,rdx
   1400098e3:	mov    r14,rcx
   1400098e6:	xor    esi,esi
   1400098e8:	mov    DWORD PTR [rax+0x8],esi
   1400098eb:	mov    rax,QWORD PTR [rip+0x11cee]        # 0x14001b5e0
   1400098f2:	mov    QWORD PTR [rsp+0x40],rax
   1400098f7:	lea    rcx,[rsp+0x48]
   1400098fc:	call   QWORD PTR [rip+0x11d0e]        # 0x14001b610
   140009902:	nop
   140009903:	lea    rcx,[rsp+0x40]
   140009908:	mov    QWORD PTR [rsp+0x30],rcx
   14000990d:	mov    DWORD PTR [rsp+0x28],esi
   140009911:	mov    QWORD PTR [rsp+0x20],rax
   140009916:	mov    r9,QWORD PTR [rsp+0x140]
   14000991e:	mov    r8,rbx
   140009921:	mov    rdx,rdi
   140009924:	lea    rcx,[rsp+0x98]
   14000992c:	call   0x140013a20
   140009931:	mov    BYTE PTR [rsp+0xd0],sil
   140009939:	mov    DWORD PTR [rsp+0xd4],esi
   140009940:	mov    BYTE PTR [rsp+0xd8],sil
   140009948:	lea    rdx,[rsp+0x98]
   140009950:	mov    rcx,QWORD PTR [r14]
   140009953:	call   0x140008bd0
   140009958:	mov    r13,rax
   14000995b:	test   rax,rax
   14000995e:	jne    0x140009967
   140009960:	mov    r13,QWORD PTR [r14]
   140009963:	add    r13,0x8
   140009967:	lea    rcx,[rsp+0xc0]
   14000996f:	call   QWORD PTR [rip+0x11cb3]        # 0x14001b628
   140009975:	nop
   140009976:	lea    rcx,[rsp+0xb8]
   14000997e:	call   0x140002880
   140009983:	nop
   140009984:	lea    rcx,[rsp+0xb0]
   14000998c:	call   QWORD PTR [rip+0x11c8e]        # 0x14001b620
   140009992:	nop
   140009993:	lea    rcx,[rsp+0xa8]
   14000999b:	call   QWORD PTR [rip+0x11c7f]        # 0x14001b620
   1400099a1:	nop
   1400099a2:	lea    rcx,[rsp+0xa0]
   1400099aa:	call   QWORD PTR [rip+0x11c70]        # 0x14001b620
   1400099b0:	nop
   1400099b1:	lea    rcx,[rsp+0x48]
   1400099b6:	call   QWORD PTR [rip+0x11c6c]        # 0x14001b628
   1400099bc:	nop
   1400099bd:	mov    rdi,QWORD PTR [rsp+0x40]
   1400099c2:	mov    eax,DWORD PTR [rdi]
   1400099c4:	test   eax,eax
   1400099c6:	je     0x1400099ef
   1400099c8:	cmp    eax,0xffffffff
   1400099cb:	je     0x140009a2b
   1400099cd:	lock add DWORD PTR [rdi],0xffffffff
   1400099d1:	setne  al
   1400099d4:	test   al,al
   1400099d6:	jne    0x1400099e6
   1400099d8:	mov    rdi,QWORD PTR [rsp+0x40]
   1400099dd:	mov    esi,DWORD PTR [rsp+0x120]
   1400099e4:	jmp    0x1400099ef
   1400099e6:	mov    esi,DWORD PTR [rsp+0x120]
   1400099ed:	jmp    0x140009a2b
   1400099ef:	movsxd rax,DWORD PTR [rdi+0xc]
   1400099f3:	lea    rbx,[rdi+rax*8+0x10]
   1400099f8:	movsxd rax,DWORD PTR [rdi+0x8]
   1400099fc:	lea    r12,[rdi+rax*8+0x10]
   140009a01:	cmp    r12,rbx
   140009a04:	je     0x140009a22
   140009a06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009a10:	sub    rbx,0x8
   140009a14:	mov    rcx,rbx
   140009a17:	call   QWORD PTR [rip+0x11c0b]        # 0x14001b628
   140009a1d:	cmp    rbx,r12
   140009a20:	jne    0x140009a10
   140009a22:	mov    rcx,rdi
   140009a25:	call   QWORD PTR [rip+0x11865]        # 0x14001b290
   140009a2b:	mov    rax,QWORD PTR [r14]
   140009a2e:	add    rax,0x8
   140009a32:	cmp    r13,rax
   140009a35:	jne    0x140009a6f
   140009a37:	lea    rcx,[rsp+0x50]
   140009a3c:	call   0x1400139c0
   140009a41:	mov    BYTE PTR [rsp+0x88],0x0
   140009a49:	mov    DWORD PTR [rsp+0x8c],0x0
   140009a54:	mov    BYTE PTR [rsp+0x90],0x0
   140009a5c:	lea    rbx,[rsp+0x50]
   140009a61:	mov    esi,0x1
   140009a66:	mov    DWORD PTR [rsp+0x120],esi
   140009a6d:	jmp    0x140009a73
   140009a6f:	lea    rbx,[r13+0x18]
   140009a73:	mov    rdx,rbx
   140009a76:	mov    rcx,rbp
   140009a79:	call   0x140013b80
   140009a7e:	movzx  r11d,BYTE PTR [rbx+0x38]
   140009a83:	mov    BYTE PTR [rbp+0x38],r11b
   140009a87:	mov    eax,DWORD PTR [rbx+0x3c]
   140009a8a:	mov    DWORD PTR [rbp+0x3c],eax
   140009a8d:	movzx  eax,BYTE PTR [rbx+0x40]
   140009a91:	mov    BYTE PTR [rbp+0x40],al
   140009a94:	or     esi,0x2
   140009a97:	test   sil,0x1
   140009a9b:	je     0x140009ae6
   140009a9d:	and    esi,0xfffffffe
   140009aa0:	mov    DWORD PTR [rsp+0x120],esi
   140009aa7:	lea    rcx,[rsp+0x78]
   140009aac:	call   QWORD PTR [rip+0x11b76]        # 0x14001b628
   140009ab2:	nop
   140009ab3:	lea    rcx,[rsp+0x70]
   140009ab8:	call   0x140002880
   140009abd:	nop
   140009abe:	lea    rcx,[rsp+0x68]
   140009ac3:	call   QWORD PTR [rip+0x11b57]        # 0x14001b620
   140009ac9:	nop
   140009aca:	lea    rcx,[rsp+0x60]
   140009acf:	call   QWORD PTR [rip+0x11b4b]        # 0x14001b620
   140009ad5:	nop
   140009ad6:	lea    rcx,[rsp+0x58]
   140009adb:	call   QWORD PTR [rip+0x11b3f]        # 0x14001b620
   140009ae1:	mov    rax,rbp
   140009ae4:	jmp    0x140009ae9
   140009ae6:	mov    rax,rbp
   140009ae9:	lea    r11,[rsp+0xf0]
   140009af1:	mov    rbx,QWORD PTR [r11+0x40]
   140009af5:	mov    rbp,QWORD PTR [r11+0x48]
   140009af9:	mov    rsp,r11
   140009afc:	pop    r14
   140009afe:	pop    r13
   140009b00:	pop    r12
   140009b02:	pop    rdi
   140009b03:	pop    rsi
   140009b04:	ret    
   140009b05:	int3   
   140009b06:	int3   
   140009b07:	int3   
   140009b08:	int3   
   140009b09:	int3   
   140009b0a:	int3   
   140009b0b:	int3   
   140009b0c:	int3   
   140009b0d:	int3   
   140009b0e:	int3   
   140009b0f:	int3   
   140009b10:	mov    r11,rsp
   140009b13:	push   rdi
   140009b14:	push   r12
   140009b16:	push   r13
   140009b18:	push   r14
   140009b1a:	push   r15
   140009b1c:	sub    rsp,0x80
   140009b23:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140009b2c:	mov    QWORD PTR [r11+0x8],rbx
   140009b30:	mov    QWORD PTR [r11+0x10],rbp
   140009b34:	mov    QWORD PTR [r11+0x18],rsi
   140009b38:	mov    r13,r9
   140009b3b:	mov    r14,r8
   140009b3e:	mov    rsi,rdx
   140009b41:	mov    r12,rcx
   140009b44:	mov    DWORD PTR [rsp+0x20],0x0
   140009b4c:	mov    ebp,DWORD PTR [rsp+0xd8]
   140009b53:	test   ebp,ebp
   140009b55:	js     0x140009d2b
   140009b5b:	mov    r15,QWORD PTR [rsp+0xd0]
   140009b63:	mov    rax,QWORD PTR [r15]
   140009b66:	cmp    DWORD PTR [rax+0x4],0x0
   140009b6a:	je     0x140009d2b
   140009b70:	lea    rcx,[r11-0x78]
   140009b74:	call   0x1400139c0
   140009b79:	mov    BYTE PTR [rsp+0x68],0x0
   140009b7e:	mov    DWORD PTR [rsp+0x6c],0x0
   140009b86:	mov    BYTE PTR [rsp+0x70],0x0
   140009b8b:	mov    rax,QWORD PTR [r12]
   140009b8f:	cmp    QWORD PTR [rax+0x10],0x0
   140009b94:	je     0x140009b9c
   140009b96:	mov    rbx,QWORD PTR [rax+0x20]
   140009b9a:	jmp    0x140009ba0
   140009b9c:	lea    rbx,[rax+0x8]
   140009ba0:	add    rax,0x8
   140009ba4:	cmp    rbx,rax
   140009ba7:	je     0x140009cf1
   140009bad:	nop    DWORD PTR [rax]
   140009bb0:	lea    rdx,[rbx+0x18]
   140009bb4:	lea    rcx,[rsp+0x30]
   140009bb9:	call   0x140013c00
   140009bbe:	movzx  r11d,BYTE PTR [rbx+0x50]
   140009bc3:	mov    BYTE PTR [rsp+0x68],r11b
   140009bc8:	mov    eax,DWORD PTR [rbx+0x54]
   140009bcb:	mov    DWORD PTR [rsp+0x6c],eax
   140009bcf:	movzx  eax,BYTE PTR [rbx+0x58]
   140009bd3:	mov    BYTE PTR [rsp+0x70],al
   140009bd7:	lea    rcx,[rsp+0x38]
   140009bdc:	call   QWORD PTR [rip+0x11736]        # 0x14001b318
   140009be2:	test   al,al
   140009be4:	je     0x140009bea
   140009be6:	xor    eax,eax
   140009be8:	jmp    0x140009bf5
   140009bea:	lea    rcx,[rsp+0x38]
   140009bef:	call   QWORD PTR [rip+0x11623]        # 0x14001b218
   140009bf5:	mov    rdx,r14
   140009bf8:	mov    rcx,rax
   140009bfb:	call   QWORD PTR [rip+0x11997]        # 0x14001b598
   140009c01:	test   eax,eax
   140009c03:	jne    0x140009c6e
   140009c05:	lea    rcx,[rsp+0x48]
   140009c0a:	call   QWORD PTR [rip+0x11708]        # 0x14001b318
   140009c10:	test   al,al
   140009c12:	je     0x140009c18
   140009c14:	xor    eax,eax
   140009c16:	jmp    0x140009c23
   140009c18:	lea    rcx,[rsp+0x48]
   140009c1d:	call   QWORD PTR [rip+0x115f5]        # 0x14001b218
   140009c23:	mov    rdx,r13
   140009c26:	mov    rcx,rax
   140009c29:	call   QWORD PTR [rip+0x11969]        # 0x14001b598
   140009c2f:	test   eax,eax
   140009c31:	jne    0x140009c6e
   140009c33:	lea    rdx,[rsp+0x20]
   140009c38:	lea    rcx,[rsp+0x30]
   140009c3d:	call   0x140006bd0
   140009c42:	nop
   140009c43:	mov    r8d,0x1
   140009c49:	mov    rdx,r15
   140009c4c:	mov    rcx,rax
   140009c4f:	call   QWORD PTR [rip+0x11833]        # 0x14001b488
   140009c55:	mov    edi,eax
   140009c57:	lea    rcx,[rsp+0x20]
   140009c5c:	call   QWORD PTR [rip+0x119c6]        # 0x14001b628
   140009c62:	test   edi,edi
   140009c64:	jne    0x140009c6e
   140009c66:	mov    eax,DWORD PTR [rsp+0x60]
   140009c6a:	sub    eax,ebp
   140009c6c:	je     0x140009c8c
   140009c6e:	mov    rcx,rbx
   140009c71:	call   QWORD PTR [rip+0x116b1]        # 0x14001b328
   140009c77:	mov    rbx,rax
   140009c7a:	mov    rax,QWORD PTR [r12]
   140009c7e:	add    rax,0x8
   140009c82:	cmp    rbx,rax
   140009c85:	je     0x140009cf1
   140009c87:	jmp    0x140009bb0
   140009c8c:	lea    rdx,[rsp+0x30]
   140009c91:	mov    rcx,rsi
   140009c94:	call   0x140013b80
   140009c99:	movzx  r11d,BYTE PTR [rsp+0x68]
   140009c9f:	mov    BYTE PTR [rsi+0x38],r11b
   140009ca3:	mov    eax,DWORD PTR [rsp+0x6c]
   140009ca7:	mov    DWORD PTR [rsi+0x3c],eax
   140009caa:	movzx  eax,BYTE PTR [rsp+0x70]
   140009caf:	mov    BYTE PTR [rsi+0x40],al
   140009cb2:	lea    rcx,[rsp+0x58]
   140009cb7:	call   QWORD PTR [rip+0x1196b]        # 0x14001b628
   140009cbd:	nop
   140009cbe:	lea    rcx,[rsp+0x50]
   140009cc3:	call   0x140002880
   140009cc8:	nop
   140009cc9:	lea    rcx,[rsp+0x48]
   140009cce:	call   QWORD PTR [rip+0x1194c]        # 0x14001b620
   140009cd4:	nop
   140009cd5:	lea    rcx,[rsp+0x40]
   140009cda:	call   QWORD PTR [rip+0x11940]        # 0x14001b620
   140009ce0:	nop
   140009ce1:	lea    rcx,[rsp+0x38]
   140009ce6:	call   QWORD PTR [rip+0x11934]        # 0x14001b620
   140009cec:	mov    rax,rsi
   140009cef:	jmp    0x140009d45
   140009cf1:	lea    rcx,[rsp+0x58]
   140009cf6:	call   QWORD PTR [rip+0x1192c]        # 0x14001b628
   140009cfc:	nop
   140009cfd:	lea    rcx,[rsp+0x50]
   140009d02:	call   0x140002880
   140009d07:	nop
   140009d08:	lea    rcx,[rsp+0x48]
   140009d0d:	call   QWORD PTR [rip+0x1190d]        # 0x14001b620
   140009d13:	nop
   140009d14:	lea    rcx,[rsp+0x40]
   140009d19:	call   QWORD PTR [rip+0x11901]        # 0x14001b620
   140009d1f:	nop
   140009d20:	lea    rcx,[rsp+0x38]
   140009d25:	call   QWORD PTR [rip+0x118f5]        # 0x14001b620
   140009d2b:	mov    rcx,rsi
   140009d2e:	call   0x1400139c0
   140009d33:	mov    BYTE PTR [rsi+0x38],0x0
   140009d37:	mov    DWORD PTR [rsi+0x3c],0x0
   140009d3e:	mov    BYTE PTR [rsi+0x40],0x0
   140009d42:	mov    rax,rsi
   140009d45:	lea    r11,[rsp+0x80]
   140009d4d:	mov    rbx,QWORD PTR [r11+0x30]
   140009d51:	mov    rbp,QWORD PTR [r11+0x38]
   140009d55:	mov    rsi,QWORD PTR [r11+0x40]
   140009d59:	mov    rsp,r11
   140009d5c:	pop    r15
   140009d5e:	pop    r14
   140009d60:	pop    r13
   140009d62:	pop    r12
   140009d64:	pop    rdi
   140009d65:	ret    
   140009d66:	int3   
   140009d67:	int3   
   140009d68:	int3   
   140009d69:	int3   
   140009d6a:	int3   
   140009d6b:	int3   
   140009d6c:	int3   
   140009d6d:	int3   
   140009d6e:	int3   
   140009d6f:	int3   
   140009d70:	rex push rdi
   140009d72:	sub    rsp,0x30
   140009d76:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140009d7f:	mov    QWORD PTR [rsp+0x40],rbx
   140009d84:	mov    QWORD PTR [rsp+0x48],rbp
   140009d89:	mov    QWORD PTR [rsp+0x58],rsi
   140009d8e:	mov    rax,QWORD PTR [rip+0x1184b]        # 0x14001b5e0
   140009d95:	mov    QWORD PTR [rsp+0x50],rax
   140009d9a:	lea    r8,[rsp+0x50]
   140009d9f:	call   0x140013c70
   140009da4:	mov    rdi,QWORD PTR [rsp+0x50]
   140009da9:	mov    ebp,DWORD PTR [rdi+0xc]
   140009dac:	sub    ebp,DWORD PTR [rdi+0x8]
   140009daf:	mov    eax,DWORD PTR [rdi]
   140009db1:	test   eax,eax
   140009db3:	je     0x140009dd4
   140009db5:	cmp    eax,0xffffffff
   140009db8:	je     0x140009dd0
   140009dba:	lock add DWORD PTR [rdi],0xffffffff
   140009dbe:	setne  al
   140009dc1:	test   al,al
   140009dc3:	jne    0x140009dcc
   140009dc5:	mov    rdi,QWORD PTR [rsp+0x50]
   140009dca:	jmp    0x140009dd4
   140009dcc:	mov    eax,ebp
   140009dce:	jmp    0x140009e0d
   140009dd0:	mov    eax,ebp
   140009dd2:	jmp    0x140009e0d
   140009dd4:	movsxd rax,DWORD PTR [rdi+0xc]
   140009dd8:	lea    rbx,[rdi+rax*8+0x10]
   140009ddd:	movsxd rax,DWORD PTR [rdi+0x8]
   140009de1:	lea    rsi,[rdi+rax*8+0x10]
   140009de6:	cmp    rsi,rbx
   140009de9:	je     0x140009e02
   140009deb:	nop    DWORD PTR [rax+rax*1+0x0]
   140009df0:	sub    rbx,0x8
   140009df4:	mov    rcx,rbx
   140009df7:	call   QWORD PTR [rip+0x1182b]        # 0x14001b628
   140009dfd:	cmp    rbx,rsi
   140009e00:	jne    0x140009df0
   140009e02:	mov    rcx,rdi
   140009e05:	call   QWORD PTR [rip+0x11485]        # 0x14001b290
   140009e0b:	mov    eax,ebp
   140009e0d:	mov    rbx,QWORD PTR [rsp+0x40]
   140009e12:	mov    rbp,QWORD PTR [rsp+0x48]
   140009e17:	mov    rsi,QWORD PTR [rsp+0x58]
   140009e1c:	add    rsp,0x30
   140009e20:	pop    rdi
   140009e21:	ret    
   140009e22:	int3   
   140009e23:	int3   
   140009e24:	int3   
   140009e25:	int3   
   140009e26:	int3   
   140009e27:	int3   
   140009e28:	int3   
   140009e29:	int3   
   140009e2a:	int3   
   140009e2b:	int3   
   140009e2c:	int3   
   140009e2d:	int3   
   140009e2e:	int3   
   140009e2f:	int3   
   140009e30:	mov    QWORD PTR [rsp+0x8],rcx
   140009e35:	push   r12
   140009e37:	sub    rsp,0x50
   140009e3b:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140009e44:	mov    QWORD PTR [rsp+0x68],rbx
   140009e49:	mov    QWORD PTR [rsp+0x70],rsi
   140009e4e:	mov    QWORD PTR [rsp+0x78],rdi
   140009e53:	mov    r12,r8
   140009e56:	mov    rsi,rdx
   140009e59:	movzx  eax,BYTE PTR [rsp+0x80]
   140009e61:	mov    BYTE PTR [rsp+0x20],al
   140009e65:	mov    edx,0x68
   140009e6a:	lea    r8d,[rdx-0x60]
   140009e6e:	call   QWORD PTR [rip+0x11734]        # 0x14001b5a8
   140009e74:	mov    rdi,rax
   140009e77:	mov    QWORD PTR [rsp+0x30],rax
   140009e7c:	lea    rbx,[rax+0x18]
   140009e80:	mov    QWORD PTR [rsp+0x40],rbx
   140009e85:	test   rbx,rbx
   140009e88:	je     0x140009ea9
   140009e8a:	mov    rdx,rsi
   140009e8d:	mov    rcx,rbx
   140009e90:	call   0x140013b80
   140009e95:	movzx  eax,BYTE PTR [rsi+0x38]
   140009e99:	mov    BYTE PTR [rbx+0x38],al
   140009e9c:	mov    eax,DWORD PTR [rsi+0x3c]
   140009e9f:	mov    DWORD PTR [rbx+0x3c],eax
   140009ea2:	movzx  eax,BYTE PTR [rsi+0x40]
   140009ea6:	mov    BYTE PTR [rbx+0x40],al
   140009ea9:	lea    rcx,[rdi+0x60]
   140009ead:	test   rcx,rcx
   140009eb0:	je     0x140009eb8
   140009eb2:	mov    eax,DWORD PTR [r12]
   140009eb6:	mov    DWORD PTR [rcx],eax
   140009eb8:	mov    rax,rdi
   140009ebb:	mov    rbx,QWORD PTR [rsp+0x68]
   140009ec0:	mov    rsi,QWORD PTR [rsp+0x70]
   140009ec5:	mov    rdi,QWORD PTR [rsp+0x78]
   140009eca:	add    rsp,0x50
   140009ece:	pop    r12
   140009ed0:	ret    
   140009ed1:	int3   
   140009ed2:	int3   
   140009ed3:	int3   
   140009ed4:	int3   
   140009ed5:	int3   
   140009ed6:	int3   
   140009ed7:	int3   
   140009ed8:	int3   
   140009ed9:	int3   
   140009eda:	int3   
   140009edb:	int3   
   140009edc:	int3   
   140009edd:	int3   
   140009ede:	int3   
   140009edf:	int3   
   140009ee0:	mov    QWORD PTR [rsp+0x8],rcx
   140009ee5:	push   rdi
   140009ee6:	sub    rsp,0x50
   140009eea:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140009ef3:	mov    QWORD PTR [rsp+0x68],rbx
   140009ef8:	mov    QWORD PTR [rsp+0x70],rsi
   140009efd:	mov    rdi,r8
   140009f00:	mov    rbx,rdx
   140009f03:	movzx  eax,BYTE PTR [rsp+0x80]
   140009f0b:	mov    BYTE PTR [rsp+0x20],al
   140009f0f:	mov    edx,0x68
   140009f14:	lea    r8d,[rdx-0x60]
   140009f18:	call   QWORD PTR [rip+0x1168a]        # 0x14001b5a8
   140009f1e:	mov    rsi,rax
   140009f21:	mov    QWORD PTR [rsp+0x30],rax
   140009f26:	add    rax,0x18
   140009f2a:	je     0x140009f30
   140009f2c:	mov    ecx,DWORD PTR [rbx]
   140009f2e:	mov    DWORD PTR [rax],ecx
   140009f30:	lea    rbx,[rsi+0x20]
   140009f34:	mov    QWORD PTR [rsp+0x40],rbx
   140009f39:	test   rbx,rbx
   140009f3c:	je     0x140009f5d
   140009f3e:	mov    rdx,rdi
   140009f41:	mov    rcx,rbx
   140009f44:	call   0x140013b80
   140009f49:	movzx  eax,BYTE PTR [rdi+0x38]
   140009f4d:	mov    BYTE PTR [rbx+0x38],al
   140009f50:	mov    eax,DWORD PTR [rdi+0x3c]
   140009f53:	mov    DWORD PTR [rbx+0x3c],eax
   140009f56:	movzx  eax,BYTE PTR [rdi+0x40]
   140009f5a:	mov    BYTE PTR [rbx+0x40],al
   140009f5d:	mov    rax,rsi
   140009f60:	mov    rbx,QWORD PTR [rsp+0x68]
   140009f65:	mov    rsi,QWORD PTR [rsp+0x70]
   140009f6a:	add    rsp,0x50
   140009f6e:	pop    rdi
   140009f6f:	ret    
   140009f70:	mov    QWORD PTR [rsp+0x8],rbx
   140009f75:	mov    QWORD PTR [rsp+0x10],rsi
   140009f7a:	push   rdi
   140009f7b:	sub    rsp,0x30
   140009f7f:	mov    rsi,rdx
   140009f82:	lea    r8,[rcx+0x60]
   140009f86:	lea    rdx,[rcx+0x18]
   140009f8a:	mov    rdi,rcx
   140009f8d:	xor    r9d,r9d
   140009f90:	mov    rcx,rsi
   140009f93:	mov    BYTE PTR [rsp+0x20],0x0
   140009f98:	call   0x140009e30
   140009f9d:	test   BYTE PTR [rdi],0x1
   140009fa0:	mov    rbx,rax
   140009fa3:	je     0x140009fab
   140009fa5:	or     QWORD PTR [rax],0x1
   140009fa9:	jmp    0x140009faf
   140009fab:	and    QWORD PTR [rax],0xfffffffffffffffe
   140009faf:	mov    rcx,QWORD PTR [rdi+0x8]
   140009fb3:	test   rcx,rcx
   140009fb6:	je     0x140009fcd
   140009fb8:	mov    rdx,rsi
   140009fbb:	call   0x140009f70
   140009fc0:	mov    QWORD PTR [rbx+0x8],rax
   140009fc4:	and    QWORD PTR [rax],0x3
   140009fc8:	or     QWORD PTR [rax],rbx
   140009fcb:	jmp    0x140009fd5
   140009fcd:	mov    QWORD PTR [rax+0x8],0x0
   140009fd5:	mov    rcx,QWORD PTR [rdi+0x10]
   140009fd9:	test   rcx,rcx
   140009fdc:	je     0x14000a004
   140009fde:	mov    rdx,rsi
   140009fe1:	call   0x140009f70
   140009fe6:	mov    QWORD PTR [rbx+0x10],rax
   140009fea:	and    QWORD PTR [rax],0x3
   140009fee:	or     QWORD PTR [rax],rbx
   140009ff1:	mov    rax,rbx
   140009ff4:	mov    rbx,QWORD PTR [rsp+0x40]
   140009ff9:	mov    rsi,QWORD PTR [rsp+0x48]
   140009ffe:	add    rsp,0x30
   14000a002:	pop    rdi
   14000a003:	ret    
   14000a004:	mov    rsi,QWORD PTR [rsp+0x48]
   14000a009:	mov    QWORD PTR [rbx+0x10],0x0
   14000a011:	mov    rax,rbx
   14000a014:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a019:	add    rsp,0x30
   14000a01d:	pop    rdi
   14000a01e:	ret    
   14000a01f:	int3   
   14000a020:	mov    QWORD PTR [rsp+0x8],rbx
   14000a025:	mov    QWORD PTR [rsp+0x10],rsi
   14000a02a:	push   rdi
   14000a02b:	sub    rsp,0x30
   14000a02f:	mov    rsi,rdx
   14000a032:	lea    r8,[rcx+0x20]
   14000a036:	lea    rdx,[rcx+0x18]
   14000a03a:	mov    rdi,rcx
   14000a03d:	xor    r9d,r9d
   14000a040:	mov    rcx,rsi
   14000a043:	mov    BYTE PTR [rsp+0x20],0x0
   14000a048:	call   0x140009ee0
   14000a04d:	test   BYTE PTR [rdi],0x1
   14000a050:	mov    rbx,rax
   14000a053:	je     0x14000a05b
   14000a055:	or     QWORD PTR [rax],0x1
   14000a059:	jmp    0x14000a05f
   14000a05b:	and    QWORD PTR [rax],0xfffffffffffffffe
   14000a05f:	mov    rcx,QWORD PTR [rdi+0x8]
   14000a063:	test   rcx,rcx
   14000a066:	je     0x14000a07d
   14000a068:	mov    rdx,rsi
   14000a06b:	call   0x14000a020
   14000a070:	mov    QWORD PTR [rbx+0x8],rax
   14000a074:	and    QWORD PTR [rax],0x3
   14000a078:	or     QWORD PTR [rax],rbx
   14000a07b:	jmp    0x14000a085
   14000a07d:	mov    QWORD PTR [rax+0x8],0x0
   14000a085:	mov    rcx,QWORD PTR [rdi+0x10]
   14000a089:	test   rcx,rcx
   14000a08c:	je     0x14000a0b4
   14000a08e:	mov    rdx,rsi
   14000a091:	call   0x14000a020
   14000a096:	mov    QWORD PTR [rbx+0x10],rax
   14000a09a:	and    QWORD PTR [rax],0x3
   14000a09e:	or     QWORD PTR [rax],rbx
   14000a0a1:	mov    rax,rbx
   14000a0a4:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a0a9:	mov    rsi,QWORD PTR [rsp+0x48]
   14000a0ae:	add    rsp,0x30
   14000a0b2:	pop    rdi
   14000a0b3:	ret    
   14000a0b4:	mov    rsi,QWORD PTR [rsp+0x48]
   14000a0b9:	mov    QWORD PTR [rbx+0x10],0x0
   14000a0c1:	mov    rax,rbx
   14000a0c4:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a0c9:	add    rsp,0x30
   14000a0cd:	pop    rdi
   14000a0ce:	ret    
   14000a0cf:	int3   
   14000a0d0:	rex push rdi
   14000a0d2:	sub    rsp,0x30
   14000a0d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a0df:	mov    QWORD PTR [rsp+0x40],rbx
   14000a0e4:	mov    QWORD PTR [rsp+0x50],rsi
   14000a0e9:	mov    rsi,r8
   14000a0ec:	mov    rbx,rdx
   14000a0ef:	mov    ecx,0x48
   14000a0f4:	call   0x140014010
   14000a0f9:	mov    rdi,rax
   14000a0fc:	mov    QWORD PTR [rsp+0x48],rax
   14000a101:	test   rax,rax
   14000a104:	je     0x14000a12c
   14000a106:	mov    rdx,rsi
   14000a109:	mov    rcx,rax
   14000a10c:	call   0x140013b80
   14000a111:	movzx  r11d,BYTE PTR [rsi+0x38]
   14000a116:	mov    BYTE PTR [rdi+0x38],r11b
   14000a11a:	mov    ecx,DWORD PTR [rsi+0x3c]
   14000a11d:	mov    DWORD PTR [rdi+0x3c],ecx
   14000a120:	movzx  ecx,BYTE PTR [rsi+0x40]
   14000a124:	mov    BYTE PTR [rdi+0x40],cl
   14000a127:	mov    QWORD PTR [rbx],rdi
   14000a12a:	jmp    0x14000a133
   14000a12c:	mov    QWORD PTR [rbx],0x0
   14000a133:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a138:	mov    rsi,QWORD PTR [rsp+0x50]
   14000a13d:	add    rsp,0x30
   14000a141:	pop    rdi
   14000a142:	ret    
   14000a143:	int3   
   14000a144:	int3   
   14000a145:	int3   
   14000a146:	int3   
   14000a147:	int3   
   14000a148:	int3   
   14000a149:	int3   
   14000a14a:	int3   
   14000a14b:	int3   
   14000a14c:	int3   
   14000a14d:	int3   
   14000a14e:	int3   
   14000a14f:	int3   
   14000a150:	mov    QWORD PTR [rsp+0x8],rbx
   14000a155:	push   rdi
   14000a156:	sub    rsp,0x20
   14000a15a:	mov    ebx,edx
   14000a15c:	mov    rdi,rcx
   14000a15f:	call   0x140008dc0
   14000a164:	test   bl,0x1
   14000a167:	je     0x14000a171
   14000a169:	mov    rcx,rdi
   14000a16c:	call   0x140013f3e
   14000a171:	mov    rax,rdi
   14000a174:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a179:	add    rsp,0x20
   14000a17d:	pop    rdi
   14000a17e:	ret    
   14000a17f:	int3   
   14000a180:	rex push rbx
   14000a182:	sub    rsp,0x20
   14000a186:	mov    rbx,rcx
   14000a189:	nop    DWORD PTR [rax+0x0]
   14000a190:	lea    rcx,[rbx+0x48]
   14000a194:	call   QWORD PTR [rip+0x1148e]        # 0x14001b628
   14000a19a:	lea    rcx,[rbx+0x40]
   14000a19e:	call   0x140002880
   14000a1a3:	lea    rcx,[rbx+0x38]
   14000a1a7:	call   QWORD PTR [rip+0x11473]        # 0x14001b620
   14000a1ad:	lea    rcx,[rbx+0x30]
   14000a1b1:	call   QWORD PTR [rip+0x11469]        # 0x14001b620
   14000a1b7:	lea    rcx,[rbx+0x28]
   14000a1bb:	call   QWORD PTR [rip+0x1145f]        # 0x14001b620
   14000a1c1:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a1c5:	test   rcx,rcx
   14000a1c8:	je     0x14000a1cf
   14000a1ca:	call   0x14000a180
   14000a1cf:	mov    rbx,QWORD PTR [rbx+0x10]
   14000a1d3:	test   rbx,rbx
   14000a1d6:	jne    0x14000a190
   14000a1d8:	add    rsp,0x20
   14000a1dc:	pop    rbx
   14000a1dd:	ret    
   14000a1de:	int3   
   14000a1df:	int3   
   14000a1e0:	mov    DWORD PTR [rsp+0x10],edx
   14000a1e4:	mov    QWORD PTR [rsp+0x8],rcx
   14000a1e9:	push   rsi
   14000a1ea:	push   rdi
   14000a1eb:	push   r12
   14000a1ed:	sub    rsp,0x30
   14000a1f1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a1fa:	mov    QWORD PTR [rsp+0x60],rbx
   14000a1ff:	movsxd r12,r8d
   14000a202:	mov    rdi,rcx
   14000a205:	mov    rdx,QWORD PTR [rcx]
   14000a208:	movsxd rax,DWORD PTR [rdx+0x8]
   14000a20c:	lea    rsi,[rdx+rax*8+0x10]
   14000a211:	mov    r8d,r12d
   14000a214:	lea    rdx,[rsp+0x58]
   14000a219:	call   QWORD PTR [rip+0x11121]        # 0x14001b340
   14000a21f:	mov    rbx,rax
   14000a222:	mov    QWORD PTR [rsp+0x68],rax
   14000a227:	mov    rdx,QWORD PTR [rdi]
   14000a22a:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000a22e:	lea    rdx,[rdx+rcx*8+0x10]
   14000a233:	movsxd rcx,DWORD PTR [rsp+0x58]
   14000a238:	lea    r8,[rdx+rcx*8]
   14000a23c:	mov    r9,rsi
   14000a23f:	mov    rcx,rdi
   14000a242:	call   0x140006d30
   14000a247:	nop
   14000a248:	mov    r10,QWORD PTR [rdi]
   14000a24b:	movsxd rax,DWORD PTR [r10+0xc]
   14000a24f:	lea    r8,[r10+rax*8+0x10]
   14000a254:	movsxd rdx,DWORD PTR [rsp+0x58]
   14000a259:	lea    r9,[rsi+rdx*8]
   14000a25d:	movsxd rcx,DWORD PTR [r10+0x8]
   14000a261:	add    rcx,rdx
   14000a264:	add    rcx,r12
   14000a267:	lea    rdx,[r10+rcx*8+0x10]
   14000a26c:	mov    rcx,rdi
   14000a26f:	call   0x140006d30
   14000a274:	nop
   14000a275:	mov    eax,DWORD PTR [rbx]
   14000a277:	test   eax,eax
   14000a279:	je     0x14000a28b
   14000a27b:	cmp    eax,0xffffffff
   14000a27e:	je     0x14000a2ae
   14000a280:	lock add DWORD PTR [rbx],0xffffffff
   14000a284:	setne  al
   14000a287:	test   al,al
   14000a289:	jne    0x14000a2ae
   14000a28b:	movsxd rax,DWORD PTR [rbx+0xc]
   14000a28f:	lea    r8,[rbx+rax*8+0x10]
   14000a294:	movsxd rax,DWORD PTR [rbx+0x8]
   14000a298:	lea    rdx,[rbx+rax*8+0x10]
   14000a29d:	mov    rcx,rdi
   14000a2a0:	call   0x140006c90
   14000a2a5:	mov    rcx,rbx
   14000a2a8:	call   QWORD PTR [rip+0x10fe2]        # 0x14001b290
   14000a2ae:	mov    rdx,QWORD PTR [rdi]
   14000a2b1:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000a2b5:	movsxd rax,DWORD PTR [rsp+0x58]
   14000a2ba:	add    rcx,rax
   14000a2bd:	lea    rax,[rdx+rcx*8+0x10]
   14000a2c2:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a2c7:	add    rsp,0x30
   14000a2cb:	pop    r12
   14000a2cd:	pop    rdi
   14000a2ce:	pop    rsi
   14000a2cf:	ret    
   14000a2d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a2d5:	push   rdi
   14000a2d6:	sub    rsp,0x20
   14000a2da:	mov    rdi,rcx
   14000a2dd:	mov    rcx,QWORD PTR [rcx]
   14000a2e0:	mov    eax,DWORD PTR [rcx]
   14000a2e2:	cmp    eax,0x1
   14000a2e5:	je     0x14000a2f6
   14000a2e7:	test   eax,eax
   14000a2e9:	je     0x14000a2f6
   14000a2eb:	mov    edx,DWORD PTR [rcx+0x4]
   14000a2ee:	mov    rcx,rdi
   14000a2f1:	call   0x1400048c0
   14000a2f6:	mov    rcx,QWORD PTR [rdi]
   14000a2f9:	movsxd rax,DWORD PTR [rcx+0xc]
   14000a2fd:	mov    edx,DWORD PTR [rcx]
   14000a2ff:	lea    rbx,[rcx+rax*8+0x8]
   14000a304:	cmp    edx,0x1
   14000a307:	je     0x14000a34a
   14000a309:	test   edx,edx
   14000a30b:	je     0x14000a34a
   14000a30d:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a311:	lea    rax,[rax*8+0x10]
   14000a319:	sub    rbx,rax
   14000a31c:	sub    rbx,rcx
   14000a31f:	sar    rbx,0x3
   14000a323:	cmp    edx,0x1
   14000a326:	je     0x14000a337
   14000a328:	test   edx,edx
   14000a32a:	je     0x14000a337
   14000a32c:	mov    edx,DWORD PTR [rcx+0x4]
   14000a32f:	mov    rcx,rdi
   14000a332:	call   0x1400048c0
   14000a337:	mov    rcx,QWORD PTR [rdi]
   14000a33a:	movsxd rax,DWORD PTR [rcx+0x8]
   14000a33e:	lea    rax,[rcx+rax*8+0x10]
   14000a343:	movsxd rcx,ebx
   14000a346:	lea    rbx,[rax+rcx*8]
   14000a34a:	mov    rcx,rbx
   14000a34d:	call   QWORD PTR [rip+0x112d5]        # 0x14001b628
   14000a353:	mov    rdx,rbx
   14000a356:	mov    rcx,rdi
   14000a359:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a35e:	add    rsp,0x20
   14000a362:	pop    rdi
   14000a363:	rex.W jmp QWORD PTR [rip+0x11126]        # 0x14001b490
   14000a36a:	int3   
   14000a36b:	int3   
   14000a36c:	int3   
   14000a36d:	int3   
   14000a36e:	int3   
   14000a36f:	int3   
   14000a370:	mov    QWORD PTR [rsp+0x10],rbx
   14000a375:	push   rsi
   14000a376:	sub    rsp,0x20
   14000a37a:	mov    rbx,rcx
   14000a37d:	call   QWORD PTR [rip+0x1121d]        # 0x14001b5a0
   14000a383:	mov    rdx,QWORD PTR [rbx]
   14000a386:	mov    rcx,QWORD PTR [rdx+0x10]
   14000a38a:	mov    rsi,rax
   14000a38d:	test   rcx,rcx
   14000a390:	je     0x14000a3a9
   14000a392:	mov    rdx,rax
   14000a395:	call   0x140009f70
   14000a39a:	lea    rcx,[rsi+0x8]
   14000a39e:	mov    QWORD PTR [rsi+0x10],rax
   14000a3a2:	and    QWORD PTR [rax],0x3
   14000a3a6:	or     QWORD PTR [rax],rcx
   14000a3a9:	mov    rcx,QWORD PTR [rbx]
   14000a3ac:	mov    eax,DWORD PTR [rcx]
   14000a3ae:	test   eax,eax
   14000a3b0:	je     0x14000a3c2
   14000a3b2:	cmp    eax,0xffffffff
   14000a3b5:	je     0x14000a3f9
   14000a3b7:	lock add DWORD PTR [rcx],0xffffffff
   14000a3bb:	setne  al
   14000a3be:	test   al,al
   14000a3c0:	jne    0x14000a3f9
   14000a3c2:	mov    QWORD PTR [rsp+0x30],rdi
   14000a3c7:	mov    rdi,QWORD PTR [rbx]
   14000a3ca:	mov    rcx,QWORD PTR [rdi+0x10]
   14000a3ce:	test   rcx,rcx
   14000a3d1:	je     0x14000a3eb
   14000a3d3:	call   0x140004ab0
   14000a3d8:	mov    rdx,QWORD PTR [rdi+0x10]
   14000a3dc:	mov    r8d,0x8
   14000a3e2:	mov    rcx,rdi
   14000a3e5:	call   QWORD PTR [rip+0x10eb5]        # 0x14001b2a0
   14000a3eb:	mov    rcx,rdi
   14000a3ee:	call   QWORD PTR [rip+0x10ea4]        # 0x14001b298
   14000a3f4:	mov    rdi,QWORD PTR [rsp+0x30]
   14000a3f9:	mov    rcx,rsi
   14000a3fc:	mov    QWORD PTR [rbx],rsi
   14000a3ff:	mov    rbx,QWORD PTR [rsp+0x38]
   14000a404:	add    rsp,0x20
   14000a408:	pop    rsi
   14000a409:	rex.W jmp QWORD PTR [rip+0x10ea0]        # 0x14001b2b0
   14000a410:	mov    QWORD PTR [rsp+0x8],rcx
   14000a415:	push   rdi
   14000a416:	sub    rsp,0x30
   14000a41a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a423:	mov    QWORD PTR [rsp+0x48],rbx
   14000a428:	mov    rdi,rdx
   14000a42b:	mov    rbx,rcx
   14000a42e:	mov    rax,QWORD PTR [rcx]
   14000a431:	mov    ecx,DWORD PTR [rax]
   14000a433:	cmp    ecx,0x1
   14000a436:	je     0x14000a461
   14000a438:	test   ecx,ecx
   14000a43a:	je     0x14000a461
   14000a43c:	mov    edx,0x7fffffff
   14000a441:	mov    r8d,0x1
   14000a447:	mov    rcx,rbx
   14000a44a:	call   0x14000a1e0
   14000a44f:	nop
   14000a450:	mov    r8,rdi
   14000a453:	mov    rdx,rax
   14000a456:	mov    rcx,rbx
   14000a459:	call   0x14000a0d0
   14000a45e:	nop
   14000a45f:	jmp    0x14000a47a
   14000a461:	mov    rcx,rbx
   14000a464:	call   QWORD PTR [rip+0x10ede]        # 0x14001b348
   14000a46a:	nop
   14000a46b:	mov    r8,rdi
   14000a46e:	mov    rdx,rax
   14000a471:	mov    rcx,rbx
   14000a474:	call   0x14000a0d0
   14000a479:	nop
   14000a47a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a47f:	add    rsp,0x30
   14000a483:	pop    rdi
   14000a484:	ret    
   14000a485:	int3   
   14000a486:	int3   
   14000a487:	int3   
   14000a488:	int3   
   14000a489:	int3   
   14000a48a:	int3   
   14000a48b:	int3   
   14000a48c:	int3   
   14000a48d:	int3   
   14000a48e:	int3   
   14000a48f:	int3   
   14000a490:	mov    QWORD PTR [rsp+0x10],rdx
   14000a495:	push   rbp
   14000a496:	push   rsi
   14000a497:	push   rdi
   14000a498:	push   r12
   14000a49a:	push   r13
   14000a49c:	sub    rsp,0x30
   14000a4a0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a4a9:	mov    QWORD PTR [rsp+0x70],rbx
   14000a4ae:	mov    rbp,rdx
   14000a4b1:	mov    rsi,rcx
   14000a4b4:	xor    ebx,ebx
   14000a4b6:	mov    DWORD PTR [rsp+0x60],ebx
   14000a4ba:	mov    rax,QWORD PTR [rcx]
   14000a4bd:	movsxd r13,DWORD PTR [rax+0x4]
   14000a4c1:	lea    eax,[r13+0x1]
   14000a4c5:	movsxd r12,eax
   14000a4c8:	mov    eax,0x8
   14000a4cd:	mul    r12
   14000a4d0:	mov    rcx,0xffffffffffffffff
   14000a4d7:	cmovo  rax,rcx
   14000a4db:	mov    rcx,rax
   14000a4de:	call   0x140013ec8
   14000a4e3:	mov    rdi,rax
   14000a4e6:	test   rax,rax
   14000a4e9:	je     0x14000a508
   14000a4eb:	lea    eax,[r12-0x1]
   14000a4f0:	test   eax,eax
   14000a4f2:	js     0x14000a50b
   14000a4f4:	lea    r8d,[rax+0x1]
   14000a4f8:	shl    r8,0x3
   14000a4fc:	xor    edx,edx
   14000a4fe:	mov    rcx,rdi
   14000a501:	call   0x140014170
   14000a506:	jmp    0x14000a50b
   14000a508:	mov    rdi,rbx
   14000a50b:	mov    rax,QWORD PTR [rsi]
   14000a50e:	cmp    QWORD PTR [rax+0x10],rbx
   14000a512:	je     0x14000a51a
   14000a514:	mov    rcx,QWORD PTR [rax+0x20]
   14000a518:	jmp    0x14000a51e
   14000a51a:	lea    rcx,[rax+0x8]
   14000a51e:	add    rax,0x8
   14000a522:	cmp    rcx,rax
   14000a525:	je     0x14000a54d
   14000a527:	nop    WORD PTR [rax+rax*1+0x0]
   14000a530:	movsxd rax,DWORD PTR [rcx+0x60]
   14000a534:	mov    QWORD PTR [rdi+rax*8],rcx
   14000a538:	call   QWORD PTR [rip+0x10dea]        # 0x14001b328
   14000a53e:	mov    rcx,rax
   14000a541:	mov    rax,QWORD PTR [rsi]
   14000a544:	add    rax,0x8
   14000a548:	cmp    rcx,rax
   14000a54b:	jne    0x14000a530
   14000a54d:	mov    rax,QWORD PTR [rip+0x1108c]        # 0x14001b5e0
   14000a554:	mov    QWORD PTR [rbp+0x0],rax
   14000a558:	mov    DWORD PTR [rsp+0x60],0x1
   14000a560:	test   r13d,r13d
   14000a563:	jle    0x14000a588
   14000a565:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a570:	mov    rdx,QWORD PTR [rdi+rbx*8]
   14000a574:	add    rdx,0x18
   14000a578:	mov    rcx,rbp
   14000a57b:	call   0x14000a410
   14000a580:	inc    rbx
   14000a583:	cmp    rbx,r13
   14000a586:	jl     0x14000a570
   14000a588:	mov    rcx,rdi
   14000a58b:	call   0x14001416a
   14000a590:	mov    rax,rbp
   14000a593:	mov    rbx,QWORD PTR [rsp+0x70]
   14000a598:	add    rsp,0x30
   14000a59c:	pop    r13
   14000a59e:	pop    r12
   14000a5a0:	pop    rdi
   14000a5a1:	pop    rsi
   14000a5a2:	pop    rbp
   14000a5a3:	ret    
   14000a5a4:	int3   
   14000a5a5:	int3   
   14000a5a6:	int3   
   14000a5a7:	int3   
   14000a5a8:	int3   
   14000a5a9:	int3   
   14000a5aa:	int3   
   14000a5ab:	int3   
   14000a5ac:	int3   
   14000a5ad:	int3   
   14000a5ae:	int3   
   14000a5af:	int3   
   14000a5b0:	mov    QWORD PTR [rsp+0x8],rcx
   14000a5b5:	push   rbp
   14000a5b6:	push   rsi
   14000a5b7:	push   rdi
   14000a5b8:	sub    rsp,0x30
   14000a5bc:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000a5c5:	mov    QWORD PTR [rsp+0x60],rbx
   14000a5ca:	mov    esi,r9d
   14000a5cd:	mov    ebp,r8d
   14000a5d0:	mov    rbx,rdx
   14000a5d3:	mov    rdi,rcx
   14000a5d6:	mov    DWORD PTR [rsp+0x58],0x0
   14000a5de:	mov    rdx,rcx
   14000a5e1:	mov    rcx,rbx
   14000a5e4:	call   0x140006c60
   14000a5e9:	mov    eax,0x1
   14000a5ee:	mov    DWORD PTR [rsp+0x58],eax
   14000a5f2:	cmp    BYTE PTR [rbx+0x40],0x0
   14000a5f6:	je     0x14000a601
   14000a5f8:	mov    edx,esi
   14000a5fa:	mov    ecx,ebp
   14000a5fc:	call   0x140009d70
   14000a601:	mov    rcx,QWORD PTR [rdi]
   14000a604:	mov    edx,DWORD PTR [rcx+0xc]
   14000a607:	sub    edx,DWORD PTR [rcx+0x8]
   14000a60a:	cmp    edx,eax
   14000a60c:	jle    0x14000a625
   14000a60e:	sub    edx,eax
   14000a610:	mov    ebx,edx
   14000a612:	mov    rcx,rdi
   14000a615:	call   0x14000a2d0
   14000a61a:	sub    rbx,0x1
   14000a61e:	jne    0x14000a612
   14000a620:	mov    rax,rdi
   14000a623:	jmp    0x14000a661
   14000a625:	cmp    edx,eax
   14000a627:	jge    0x14000a65e
   14000a629:	sub    eax,edx
   14000a62b:	mov    ebx,eax
   14000a62d:	nop    DWORD PTR [rax]
   14000a630:	lea    rcx,[rsp+0x20]
   14000a635:	call   QWORD PTR [rip+0x10fd5]        # 0x14001b610
   14000a63b:	nop
   14000a63c:	mov    rdx,rax
   14000a63f:	mov    rcx,rdi
   14000a642:	call   0x1400049b0
   14000a647:	nop
   14000a648:	lea    rcx,[rsp+0x20]
   14000a64d:	call   QWORD PTR [rip+0x10fd5]        # 0x14001b628
   14000a653:	sub    rbx,0x1
   14000a657:	jne    0x14000a630
   14000a659:	mov    rax,rdi
   14000a65c:	jmp    0x14000a661
   14000a65e:	mov    rax,rdi
   14000a661:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a666:	add    rsp,0x30
   14000a66a:	pop    rdi
   14000a66b:	pop    rsi
   14000a66c:	pop    rbp
   14000a66d:	ret    
   14000a66e:	int3   
   14000a66f:	int3   
   14000a670:	sub    rsp,0x28
   14000a674:	mov    rdx,QWORD PTR [rcx]
   14000a677:	mov    eax,DWORD PTR [rdx]
   14000a679:	test   eax,eax
   14000a67b:	je     0x14000a68d
   14000a67d:	cmp    eax,0xffffffff
   14000a680:	je     0x14000a6c4
   14000a682:	lock add DWORD PTR [rdx],0xffffffff
   14000a686:	setne  al
   14000a689:	test   al,al
   14000a68b:	jne    0x14000a6c4
   14000a68d:	mov    QWORD PTR [rsp+0x20],rbx
   14000a692:	mov    rbx,QWORD PTR [rcx]
   14000a695:	mov    rcx,QWORD PTR [rbx+0x10]
   14000a699:	test   rcx,rcx
   14000a69c:	je     0x14000a6b6
   14000a69e:	call   0x14000a180
   14000a6a3:	mov    rdx,QWORD PTR [rbx+0x10]
   14000a6a7:	mov    r8d,0x8
   14000a6ad:	mov    rcx,rbx
   14000a6b0:	call   QWORD PTR [rip+0x10bea]        # 0x14001b2a0
   14000a6b6:	mov    rcx,rbx
   14000a6b9:	call   QWORD PTR [rip+0x10bd9]        # 0x14001b298
   14000a6bf:	mov    rbx,QWORD PTR [rsp+0x20]
   14000a6c4:	add    rsp,0x28
   14000a6c8:	ret    
   14000a6c9:	int3   
   14000a6ca:	int3   
   14000a6cb:	int3   
   14000a6cc:	int3   
   14000a6cd:	int3   
   14000a6ce:	int3   
   14000a6cf:	int3   
   14000a6d0:	mov    QWORD PTR [rsp+0x18],rsi
   14000a6d5:	push   rdi
   14000a6d6:	sub    rsp,0x20
   14000a6da:	mov    rax,QWORD PTR [rdx]
   14000a6dd:	mov    rsi,rdx
   14000a6e0:	mov    rdi,rcx
   14000a6e3:	cmp    QWORD PTR [rcx],rax
   14000a6e6:	je     0x14000a7b4
   14000a6ec:	mov    ecx,DWORD PTR [rax]
   14000a6ee:	mov    QWORD PTR [rsp+0x38],rbx
   14000a6f3:	test   ecx,ecx
   14000a6f5:	je     0x14000a70a
   14000a6f7:	cmp    ecx,0xffffffff
   14000a6fa:	je     0x14000a700
   14000a6fc:	lock add DWORD PTR [rax],0x1
   14000a700:	mov    rbx,QWORD PTR [rdx]
   14000a703:	mov    QWORD PTR [rsp+0x30],rbx
   14000a708:	jmp    0x14000a744
   14000a70a:	call   QWORD PTR [rip+0x10e90]        # 0x14001b5a0
   14000a710:	mov    rbx,rax
   14000a713:	mov    QWORD PTR [rsp+0x30],rax
   14000a718:	mov    rax,QWORD PTR [rsi]
   14000a71b:	mov    rcx,QWORD PTR [rax+0x10]
   14000a71f:	test   rcx,rcx
   14000a722:	je     0x14000a744
   14000a724:	mov    rdx,rbx
   14000a727:	call   0x140009f70
   14000a72c:	lea    rcx,[rbx+0x8]
   14000a730:	mov    QWORD PTR [rbx+0x10],rax
   14000a734:	and    QWORD PTR [rax],0x3
   14000a738:	or     QWORD PTR [rax],rcx
   14000a73b:	mov    rcx,rbx
   14000a73e:	call   QWORD PTR [rip+0x10b6c]        # 0x14001b2b0
   14000a744:	lea    rax,[rsp+0x30]
   14000a749:	cmp    rax,rdi
   14000a74c:	je     0x14000a75c
   14000a74e:	mov    rax,rbx
   14000a751:	mov    rbx,QWORD PTR [rdi]
   14000a754:	mov    QWORD PTR [rsp+0x30],rbx
   14000a759:	mov    QWORD PTR [rdi],rax
   14000a75c:	mov    eax,DWORD PTR [rbx]
   14000a75e:	test   eax,eax
   14000a760:	je     0x14000a777
   14000a762:	cmp    eax,0xffffffff
   14000a765:	je     0x14000a7a1
   14000a767:	lock add DWORD PTR [rbx],0xffffffff
   14000a76b:	setne  al
   14000a76e:	test   al,al
   14000a770:	jne    0x14000a7a1
   14000a772:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a777:	mov    rcx,QWORD PTR [rbx+0x10]
   14000a77b:	test   rcx,rcx
   14000a77e:	je     0x14000a798
   14000a780:	call   0x140004ab0
   14000a785:	mov    rdx,QWORD PTR [rbx+0x10]
   14000a789:	mov    r8d,0x8
   14000a78f:	mov    rcx,rbx
   14000a792:	call   QWORD PTR [rip+0x10b08]        # 0x14001b2a0
   14000a798:	mov    rcx,rbx
   14000a79b:	call   QWORD PTR [rip+0x10af7]        # 0x14001b298
   14000a7a1:	mov    rax,rdi
   14000a7a4:	mov    rbx,QWORD PTR [rsp+0x38]
   14000a7a9:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a7ae:	add    rsp,0x20
   14000a7b2:	pop    rdi
   14000a7b3:	ret    
   14000a7b4:	mov    rax,rcx
   14000a7b7:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a7bc:	add    rsp,0x20
   14000a7c0:	pop    rdi
   14000a7c1:	ret    
   14000a7c2:	int3   
   14000a7c3:	int3   
   14000a7c4:	int3   
   14000a7c5:	int3   
   14000a7c6:	int3   
   14000a7c7:	int3   
   14000a7c8:	int3   
   14000a7c9:	int3   
   14000a7ca:	int3   
   14000a7cb:	int3   
   14000a7cc:	int3   
   14000a7cd:	int3   
   14000a7ce:	int3   
   14000a7cf:	int3   
   14000a7d0:	rex push rbx
   14000a7d2:	sub    rsp,0x30
   14000a7d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a7df:	mov    rbx,QWORD PTR [rip+0x10df2]        # 0x14001b5d8
   14000a7e6:	mov    QWORD PTR [rsp+0x48],rbx
   14000a7eb:	lea    rdx,[rsp+0x48]
   14000a7f0:	call   0x14000a6d0
   14000a7f5:	nop
   14000a7f6:	mov    eax,DWORD PTR [rbx]
   14000a7f8:	test   eax,eax
   14000a7fa:	je     0x14000a811
   14000a7fc:	cmp    eax,0xffffffff
   14000a7ff:	je     0x14000a83b
   14000a801:	lock add DWORD PTR [rbx],0xffffffff
   14000a805:	setne  al
   14000a808:	test   al,al
   14000a80a:	jne    0x14000a83b
   14000a80c:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a811:	mov    rcx,QWORD PTR [rbx+0x10]
   14000a815:	test   rcx,rcx
   14000a818:	je     0x14000a832
   14000a81a:	call   0x140004ab0
   14000a81f:	mov    r8d,0x8
   14000a825:	mov    rdx,QWORD PTR [rbx+0x10]
   14000a829:	mov    rcx,rbx
   14000a82c:	call   QWORD PTR [rip+0x10a6e]        # 0x14001b2a0
   14000a832:	mov    rcx,rbx
   14000a835:	call   QWORD PTR [rip+0x10a5d]        # 0x14001b298
   14000a83b:	add    rsp,0x30
   14000a83f:	pop    rbx
   14000a840:	ret    
   14000a841:	int3   
   14000a842:	int3   
   14000a843:	int3   
   14000a844:	int3   
   14000a845:	int3   
   14000a846:	int3   
   14000a847:	int3   
   14000a848:	int3   
   14000a849:	int3   
   14000a84a:	int3   
   14000a84b:	int3   
   14000a84c:	int3   
   14000a84d:	int3   
   14000a84e:	int3   
   14000a84f:	int3   
   14000a850:	rex push rbp
   14000a852:	push   rsi
   14000a853:	push   rdi
   14000a854:	push   r12
   14000a856:	push   r13
   14000a858:	push   r14
   14000a85a:	push   r15
   14000a85c:	sub    rsp,0x30
   14000a860:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a869:	mov    QWORD PTR [rsp+0x78],rbx
   14000a86e:	mov    r14,rdx
   14000a871:	mov    r15,rcx
   14000a874:	mov    rax,QWORD PTR [rcx]
   14000a877:	mov    r8d,DWORD PTR [rax]
   14000a87a:	cmp    r8d,0x1
   14000a87e:	je     0x14000a88a
   14000a880:	test   r8d,r8d
   14000a883:	je     0x14000a88a
   14000a885:	call   0x14000a370
   14000a88a:	xor    esi,esi
   14000a88c:	mov    DWORD PTR [rsp+0x70],esi
   14000a890:	mov    rax,QWORD PTR [r15]
   14000a893:	mov    rbx,QWORD PTR [rax+0x10]
   14000a897:	test   rbx,rbx
   14000a89a:	je     0x14000a98f
   14000a8a0:	xor    edi,edi
   14000a8a2:	lea    rcx,[rbx+0x18]
   14000a8a6:	mov    rdx,r14
   14000a8a9:	call   0x1400089d0
   14000a8ae:	test   al,al
   14000a8b0:	jne    0x14000a8bb
   14000a8b2:	mov    rdi,rbx
   14000a8b5:	mov    rbx,QWORD PTR [rbx+0x8]
   14000a8b9:	jmp    0x14000a8bf
   14000a8bb:	mov    rbx,QWORD PTR [rbx+0x10]
   14000a8bf:	test   rbx,rbx
   14000a8c2:	jne    0x14000a8a2
   14000a8c4:	test   rdi,rdi
   14000a8c7:	je     0x14000a98b
   14000a8cd:	lea    rbp,[rdi+0x18]
   14000a8d1:	mov    rdx,rbp
   14000a8d4:	mov    rcx,r14
   14000a8d7:	call   0x1400089d0
   14000a8dc:	test   al,al
   14000a8de:	jne    0x14000a987
   14000a8e4:	mov    r13,QWORD PTR [r15]
   14000a8e7:	mov    QWORD PTR [rsp+0x80],rbp
   14000a8ef:	lea    rcx,[rbp+0x28]
   14000a8f3:	call   QWORD PTR [rip+0x10d2f]        # 0x14001b628
   14000a8f9:	nop
   14000a8fa:	mov    rcx,QWORD PTR [rbp+0x20]
   14000a8fe:	mov    eax,DWORD PTR [rcx]
   14000a900:	test   eax,eax
   14000a902:	je     0x14000a914
   14000a904:	cmp    eax,0xffffffff
   14000a907:	je     0x14000a950
   14000a909:	lock add DWORD PTR [rcx],0xffffffff
   14000a90d:	setne  al
   14000a910:	test   al,al
   14000a912:	jne    0x14000a950
   14000a914:	mov    r12,QWORD PTR [rbp+0x20]
   14000a918:	movsxd rax,DWORD PTR [r12+0xc]
   14000a91d:	lea    rbx,[r12+rax*8+0x10]
   14000a922:	movsxd rax,DWORD PTR [r12+0x8]
   14000a927:	lea    rsi,[r12+rax*8+0x10]
   14000a92c:	cmp    rsi,rbx
   14000a92f:	je     0x14000a943
   14000a931:	sub    rbx,0x8
   14000a935:	mov    rcx,rbx
   14000a938:	call   QWORD PTR [rip+0x10cea]        # 0x14001b628
   14000a93e:	cmp    rbx,rsi
   14000a941:	jne    0x14000a931
   14000a943:	mov    rcx,r12
   14000a946:	call   QWORD PTR [rip+0x10944]        # 0x14001b290
   14000a94c:	mov    esi,DWORD PTR [rsp+0x70]
   14000a950:	lea    rcx,[rbp+0x18]
   14000a954:	call   QWORD PTR [rip+0x10cc6]        # 0x14001b620
   14000a95a:	nop
   14000a95b:	lea    rcx,[rbp+0x10]
   14000a95f:	call   QWORD PTR [rip+0x10cbb]        # 0x14001b620
   14000a965:	nop
   14000a966:	lea    rcx,[rbp+0x8]
   14000a96a:	call   QWORD PTR [rip+0x10cb0]        # 0x14001b620
   14000a970:	mov    rdx,rdi
   14000a973:	mov    rcx,r13
   14000a976:	call   QWORD PTR [rip+0x10c3c]        # 0x14001b5b8
   14000a97c:	inc    esi
   14000a97e:	mov    DWORD PTR [rsp+0x70],esi
   14000a982:	jmp    0x14000a890
   14000a987:	mov    eax,esi
   14000a989:	jmp    0x14000a991
   14000a98b:	mov    eax,esi
   14000a98d:	jmp    0x14000a991
   14000a98f:	mov    eax,esi
   14000a991:	mov    rbx,QWORD PTR [rsp+0x78]
   14000a996:	add    rsp,0x30
   14000a99a:	pop    r15
   14000a99c:	pop    r14
   14000a99e:	pop    r13
   14000a9a0:	pop    r12
   14000a9a2:	pop    rdi
   14000a9a3:	pop    rsi
   14000a9a4:	pop    rbp
   14000a9a5:	ret    
   14000a9a6:	int3   
   14000a9a7:	int3   
   14000a9a8:	int3   
   14000a9a9:	int3   
   14000a9aa:	int3   
   14000a9ab:	int3   
   14000a9ac:	int3   
   14000a9ad:	int3   
   14000a9ae:	int3   
   14000a9af:	int3   
   14000a9b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a9b5:	push   rdi
   14000a9b6:	sub    rsp,0x20
   14000a9ba:	mov    rbx,rdx
   14000a9bd:	mov    rdi,rcx
   14000a9c0:	call   0x14000a6d0
   14000a9c5:	lea    rdx,[rbx+0x8]
   14000a9c9:	lea    rcx,[rdi+0x8]
   14000a9cd:	call   QWORD PTR [rip+0x10bbd]        # 0x14001b590
   14000a9d3:	mov    r11,QWORD PTR [rbx+0x10]
   14000a9d7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a9dc:	mov    QWORD PTR [rdi+0x10],r11
   14000a9e0:	mov    rax,rdi
   14000a9e3:	add    rsp,0x20
   14000a9e7:	pop    rdi
   14000a9e8:	ret    
   14000a9e9:	int3   
   14000a9ea:	int3   
   14000a9eb:	int3   
   14000a9ec:	int3   
   14000a9ed:	int3   
   14000a9ee:	int3   
   14000a9ef:	int3   
   14000a9f0:	mov    QWORD PTR [rsp+0x10],rbx
   14000a9f5:	mov    QWORD PTR [rsp+0x18],rbp
   14000a9fa:	push   rsi
   14000a9fb:	push   rdi
   14000a9fc:	push   r12
   14000a9fe:	push   r13
   14000aa00:	push   r14
   14000aa02:	sub    rsp,0x30
   14000aa06:	mov    r12,rcx
   14000aa09:	mov    rcx,QWORD PTR [rcx]
   14000aa0c:	mov    r13,rdx
   14000aa0f:	mov    ebp,DWORD PTR [rcx+0x4]
   14000aa12:	mov    DWORD PTR [rsp+0x60],ebp
   14000aa16:	call   0x140008bd0
   14000aa1b:	xor    esi,esi
   14000aa1d:	test   rax,rax
   14000aa20:	je     0x14000aa4d
   14000aa22:	mov    rcx,QWORD PTR [r12]
   14000aa26:	mov    rdx,r13
   14000aa29:	call   0x140008bd0
   14000aa2e:	test   rax,rax
   14000aa31:	je     0x14000aa3c
   14000aa33:	mov    ebp,DWORD PTR [rax+0x60]
   14000aa36:	mov    DWORD PTR [rsp+0x60],ebp
   14000aa3a:	jmp    0x14000aa42
   14000aa3c:	mov    ebp,esi
   14000aa3e:	mov    DWORD PTR [rsp+0x60],esi
   14000aa42:	mov    rdx,r13
   14000aa45:	mov    rcx,r12
   14000aa48:	call   0x14000a850
   14000aa4d:	mov    rax,QWORD PTR [r12]
   14000aa51:	mov    ecx,DWORD PTR [rax]
   14000aa53:	cmp    ecx,0x1
   14000aa56:	je     0x14000aa64
   14000aa58:	test   ecx,ecx
   14000aa5a:	je     0x14000aa64
   14000aa5c:	mov    rcx,r12
   14000aa5f:	call   0x14000a370
   14000aa64:	mov    rax,QWORD PTR [r12]
   14000aa68:	mov    dil,0x1
   14000aa6b:	mov    rbx,QWORD PTR [rax+0x10]
   14000aa6f:	lea    r14,[rax+0x8]
   14000aa73:	test   rbx,rbx
   14000aa76:	je     0x14000aac5
   14000aa78:	nop    DWORD PTR [rax+rax*1+0x0]
   14000aa80:	lea    rcx,[rbx+0x18]
   14000aa84:	mov    rdx,r13
   14000aa87:	mov    r14,rbx
   14000aa8a:	call   0x1400089d0
   14000aa8f:	test   al,al
   14000aa91:	jne    0x14000aa9f
   14000aa93:	mov    rsi,rbx
   14000aa96:	mov    rbx,QWORD PTR [rbx+0x8]
   14000aa9a:	mov    dil,0x1
   14000aa9d:	jmp    0x14000aaa6
   14000aa9f:	mov    rbx,QWORD PTR [rbx+0x10]
   14000aaa3:	xor    dil,dil
   14000aaa6:	test   rbx,rbx
   14000aaa9:	jne    0x14000aa80
   14000aaab:	test   rsi,rsi
   14000aaae:	je     0x14000aac5
   14000aab0:	lea    rdx,[rsi+0x18]
   14000aab4:	mov    rcx,r13
   14000aab7:	call   0x1400089d0
   14000aabc:	test   al,al
   14000aabe:	jne    0x14000aac5
   14000aac0:	mov    DWORD PTR [rsi+0x60],ebp
   14000aac3:	jmp    0x14000aade
   14000aac5:	mov    rcx,QWORD PTR [r12]
   14000aac9:	lea    r8,[rsp+0x60]
   14000aace:	mov    r9,r14
   14000aad1:	mov    rdx,r13
   14000aad4:	mov    BYTE PTR [rsp+0x20],dil
   14000aad9:	call   0x140009e30
   14000aade:	mov    rbx,QWORD PTR [rsp+0x68]
   14000aae3:	mov    rbp,QWORD PTR [rsp+0x70]
   14000aae8:	add    rsp,0x30
   14000aaec:	pop    r14
   14000aaee:	pop    r13
   14000aaf0:	pop    r12
   14000aaf2:	pop    rdi
   14000aaf3:	pop    rsi
   14000aaf4:	ret    
   14000aaf5:	int3   
   14000aaf6:	int3   
   14000aaf7:	int3   
   14000aaf8:	int3   
   14000aaf9:	int3   
   14000aafa:	int3   
   14000aafb:	int3   
   14000aafc:	int3   
   14000aafd:	int3   
   14000aafe:	int3   
   14000aaff:	int3   
   14000ab00:	mov    rax,rsp
   14000ab03:	push   r12
   14000ab05:	push   r13
   14000ab07:	push   r14
   14000ab09:	sub    rsp,0x230
   14000ab10:	mov    QWORD PTR [rsp+0x220],0xfffffffffffffffe
   14000ab1c:	mov    QWORD PTR [rax+0x8],rbx
   14000ab20:	mov    QWORD PTR [rax+0x10],rbp
   14000ab24:	mov    QWORD PTR [rax+0x18],rsi
   14000ab28:	mov    QWORD PTR [rax+0x20],rdi
   14000ab2c:	mov    rbx,r9
   14000ab2f:	mov    r14,rcx
   14000ab32:	xor    r12d,r12d
   14000ab35:	mov    DWORD PTR [rsp+0x40],r12d
   14000ab3a:	xor    eax,eax
   14000ab3c:	or     rbp,0xffffffffffffffff
   14000ab40:	mov    rcx,rbp
   14000ab43:	lea    rdi,[rip+0x137a6]        # 0x14001e2f0
   14000ab4a:	repnz scas al,BYTE PTR es:[rdi]
   14000ab4c:	not    rcx
   14000ab4f:	lea    rdx,[rcx-0x1]
   14000ab53:	lea    rcx,[rip+0x13796]        # 0x14001e2f0
   14000ab5a:	call   QWORD PTR [rip+0x10ab8]        # 0x14001b618
   14000ab60:	mov    QWORD PTR [rsp+0x68],rax
   14000ab65:	mov    edi,0x1
   14000ab6a:	mov    DWORD PTR [rsp+0x40],edi
   14000ab6e:	lea    rdx,[rsp+0x68]
   14000ab73:	mov    rcx,rbx
   14000ab76:	call   QWORD PTR [rip+0x10ab4]        # 0x14001b630
   14000ab7c:	test   al,al
   14000ab7e:	jne    0x14000abcd
   14000ab80:	xor    eax,eax
   14000ab82:	mov    rcx,rbp
   14000ab85:	lea    rdi,[rip+0x13754]        # 0x14001e2e0
   14000ab8c:	repnz scas al,BYTE PTR es:[rdi]
   14000ab8e:	not    rcx
   14000ab91:	lea    rdx,[rcx-0x1]
   14000ab95:	lea    rcx,[rip+0x13744]        # 0x14001e2e0
   14000ab9c:	call   QWORD PTR [rip+0x10a76]        # 0x14001b618
   14000aba2:	mov    QWORD PTR [rsp+0x88],rax
   14000abaa:	mov    edi,0x3
   14000abaf:	mov    DWORD PTR [rsp+0x40],edi
   14000abb3:	lea    rdx,[rsp+0x88]
   14000abbb:	mov    rcx,rbx
   14000abbe:	call   QWORD PTR [rip+0x10a6c]        # 0x14001b630
   14000abc4:	test   al,al
   14000abc6:	jne    0x14000abcd
   14000abc8:	xor    sil,sil
   14000abcb:	jmp    0x14000abd0
   14000abcd:	mov    sil,0x1
   14000abd0:	test   dil,0x2
   14000abd4:	je     0x14000abec
   14000abd6:	and    edi,0xfffffffd
   14000abd9:	mov    DWORD PTR [rsp+0x40],edi
   14000abdd:	lea    rcx,[rsp+0x88]
   14000abe5:	call   QWORD PTR [rip+0x10a3d]        # 0x14001b628
   14000abeb:	nop
   14000abec:	test   dil,0x1
   14000abf0:	je     0x14000abfd
   14000abf2:	lea    rcx,[rsp+0x68]
   14000abf7:	call   QWORD PTR [rip+0x10a2b]        # 0x14001b628
   14000abfd:	test   sil,sil
   14000ac00:	je     0x14000ac6c
   14000ac02:	lea    rcx,[r14+0x88]
   14000ac09:	lea    rdx,[rsp+0xb8]
   14000ac11:	call   QWORD PTR [rip+0x109d1]        # 0x14001b5e8
   14000ac17:	nop
   14000ac18:	mov    rcx,rax
   14000ac1b:	call   QWORD PTR [rip+0x1061f]        # 0x14001b240
   14000ac21:	mov    rdi,rax
   14000ac24:	mov    rbx,QWORD PTR [r14+0x38]
   14000ac28:	lea    rcx,[rbx+0x8]
   14000ac2c:	mov    rdx,rax
   14000ac2f:	call   QWORD PTR [rip+0x10633]        # 0x14001b268
   14000ac35:	mov    rcx,rdi
   14000ac38:	call   QWORD PTR [rip+0x1067a]        # 0x14001b2b8
   14000ac3e:	mov    QWORD PTR [rbx+0x10],rax
   14000ac42:	test   rax,rax
   14000ac45:	je     0x14000ac55
   14000ac47:	mov    rdx,QWORD PTR [rax]
   14000ac4a:	mov    rcx,rax
   14000ac4d:	call   QWORD PTR [rdx+0x10]
   14000ac50:	cmp    eax,0x4
   14000ac53:	jne    0x14000ac59
   14000ac55:	mov    QWORD PTR [rbx+0x10],r12
   14000ac59:	lea    rcx,[rsp+0xb8]
   14000ac61:	call   QWORD PTR [rip+0x109b9]        # 0x14001b620
   14000ac67:	jmp    0x14000b51f
   14000ac6c:	xor    eax,eax
   14000ac6e:	mov    rcx,rbp
   14000ac71:	lea    rdi,[rip+0x13660]        # 0x14001e2d8
   14000ac78:	repnz scas al,BYTE PTR es:[rdi]
   14000ac7a:	not    rcx
   14000ac7d:	lea    rdx,[rcx-0x1]
   14000ac81:	lea    rcx,[rip+0x13650]        # 0x14001e2d8
   14000ac88:	call   QWORD PTR [rip+0x1098a]        # 0x14001b618
   14000ac8e:	mov    QWORD PTR [rsp+0x58],rax
   14000ac93:	lea    rdx,[rsp+0x58]
   14000ac98:	mov    rcx,rbx
   14000ac9b:	call   QWORD PTR [rip+0x1098f]        # 0x14001b630
   14000aca1:	movzx  edi,al
   14000aca4:	lea    rcx,[rsp+0x58]
   14000aca9:	call   QWORD PTR [rip+0x10979]        # 0x14001b628
   14000acaf:	test   dil,dil
   14000acb2:	je     0x14000acca
   14000acb4:	lea    rdx,[r14+0x88]
   14000acbb:	lea    rcx,[r14+0x58]
   14000acbf:	call   QWORD PTR [rip+0x10613]        # 0x14001b2d8
   14000acc5:	jmp    0x14000b51f
   14000acca:	xor    eax,eax
   14000accc:	mov    rcx,rbp
   14000accf:	lea    rdi,[rip+0x135fa]        # 0x14001e2d0
   14000acd6:	repnz scas al,BYTE PTR es:[rdi]
   14000acd8:	not    rcx
   14000acdb:	lea    rdx,[rcx-0x1]
   14000acdf:	lea    rcx,[rip+0x135ea]        # 0x14001e2d0
   14000ace6:	call   QWORD PTR [rip+0x1092c]        # 0x14001b618
   14000acec:	mov    QWORD PTR [rsp+0x78],rax
   14000acf1:	lea    rdx,[rsp+0x78]
   14000acf6:	mov    rcx,rbx
   14000acf9:	call   QWORD PTR [rip+0x10931]        # 0x14001b630
   14000acff:	movzx  edi,al
   14000ad02:	lea    rcx,[rsp+0x78]
   14000ad07:	call   QWORD PTR [rip+0x1091b]        # 0x14001b628
   14000ad0d:	test   dil,dil
   14000ad10:	je     0x14000ad28
   14000ad12:	lea    rdx,[r14+0x88]
   14000ad19:	lea    rcx,[r14+0x60]
   14000ad1d:	call   QWORD PTR [rip+0x105b5]        # 0x14001b2d8
   14000ad23:	jmp    0x14000b51f
   14000ad28:	xor    eax,eax
   14000ad2a:	mov    rcx,rbp
   14000ad2d:	lea    rdi,[rip+0x11664]        # 0x14001c398
   14000ad34:	repnz scas al,BYTE PTR es:[rdi]
   14000ad36:	not    rcx
   14000ad39:	lea    rdx,[rcx-0x1]
   14000ad3d:	lea    rcx,[rip+0x11654]        # 0x14001c398
   14000ad44:	call   QWORD PTR [rip+0x108ce]        # 0x14001b618
   14000ad4a:	mov    QWORD PTR [rsp+0x60],rax
   14000ad4f:	lea    rdx,[rsp+0x60]
   14000ad54:	mov    rcx,rbx
   14000ad57:	call   QWORD PTR [rip+0x108d3]        # 0x14001b630
   14000ad5d:	movzx  edi,al
   14000ad60:	lea    rcx,[rsp+0x60]
   14000ad65:	call   QWORD PTR [rip+0x108bd]        # 0x14001b628
   14000ad6b:	test   dil,dil
   14000ad6e:	je     0x14000b110
   14000ad74:	cmp    BYTE PTR [r14+0x44],0x0
   14000ad79:	je     0x14000ad91
   14000ad7b:	lea    rdx,[r14+0x88]
   14000ad82:	lea    rcx,[r14+0x68]
   14000ad86:	call   QWORD PTR [rip+0x1054c]        # 0x14001b2d8
   14000ad8c:	jmp    0x14000b51f
   14000ad91:	cmp    BYTE PTR [r14+0x94],0x0
   14000ad99:	je     0x14000af80
   14000ad9f:	mov    rax,QWORD PTR [rip+0x1083a]        # 0x14001b5e0
   14000ada6:	mov    QWORD PTR [rsp+0x48],rax
   14000adab:	lea    rcx,[rsp+0x98]
   14000adb3:	call   QWORD PTR [rip+0x10857]        # 0x14001b610
   14000adb9:	mov    rsi,rax
   14000adbc:	lea    rcx,[r14+0x88]
   14000adc3:	lea    rdx,[rsp+0xe8]
   14000adcb:	call   QWORD PTR [rip+0x104f7]        # 0x14001b2c8
   14000add1:	mov    rbx,rax
   14000add4:	lea    rcx,[r14+0x58]
   14000add8:	lea    rdx,[rsp+0xa8]
   14000ade0:	call   QWORD PTR [rip+0x104e2]        # 0x14001b2c8
   14000ade6:	mov    rdi,rax
   14000ade9:	mov    rcx,rbx
   14000adec:	call   QWORD PTR [rip+0x1044e]        # 0x14001b240
   14000adf2:	mov    rbx,rax
   14000adf5:	mov    rcx,rdi
   14000adf8:	call   QWORD PTR [rip+0x10442]        # 0x14001b240
   14000adfe:	lea    rcx,[rsp+0x48]
   14000ae03:	mov    QWORD PTR [rsp+0x30],rcx
   14000ae08:	mov    DWORD PTR [rsp+0x28],r12d
   14000ae0d:	mov    QWORD PTR [rsp+0x20],rsi
   14000ae12:	mov    r9,rbx
   14000ae15:	lea    rdi,[rip+0x1348c]        # 0x14001e2a8
   14000ae1c:	mov    r8,rdi
   14000ae1f:	mov    rdx,rax
   14000ae22:	lea    rcx,[rsp+0x100]
   14000ae2a:	call   0x140013a20
   14000ae2f:	mov    BYTE PTR [rsp+0x138],0x0
   14000ae37:	mov    DWORD PTR [rsp+0x13c],r12d
   14000ae3f:	mov    BYTE PTR [rsp+0x140],0x0
   14000ae47:	mov    al,0x51
   14000ae49:	nop    DWORD PTR [rax+0x0]
   14000ae50:	cmp    al,0x80
   14000ae52:	jae    0x14000ae89
   14000ae54:	inc    rdi
   14000ae57:	movzx  eax,BYTE PTR [rdi]
   14000ae5a:	test   al,al
   14000ae5c:	jne    0x14000ae50
   14000ae5e:	test   rbx,rbx
   14000ae61:	je     0x14000ae91
   14000ae63:	movzx  eax,BYTE PTR [rbx]
   14000ae66:	test   al,al
   14000ae68:	je     0x14000ae91
   14000ae6a:	nop    WORD PTR [rax+rax*1+0x0]
   14000ae70:	cmp    al,0x80
   14000ae72:	jae    0x14000ae7f
   14000ae74:	inc    rbx
   14000ae77:	mov    al,BYTE PTR [rbx]
   14000ae79:	test   al,al
   14000ae7b:	jne    0x14000ae70
   14000ae7d:	jmp    0x14000ae91
   14000ae7f:	mov    BYTE PTR [rsp+0x138],0x1
   14000ae87:	jmp    0x14000ae91
   14000ae89:	mov    BYTE PTR [rsp+0x138],0x1
   14000ae91:	lea    rdx,[rsp+0x100]
   14000ae99:	mov    rcx,QWORD PTR [r14+0x38]
   14000ae9d:	call   0x14000a9f0
   14000aea2:	nop
   14000aea3:	lea    rcx,[rsp+0x128]
   14000aeab:	call   QWORD PTR [rip+0x10777]        # 0x14001b628
   14000aeb1:	nop
   14000aeb2:	lea    rcx,[rsp+0x120]
   14000aeba:	call   0x140002880
   14000aebf:	nop
   14000aec0:	lea    rcx,[rsp+0x118]
   14000aec8:	call   QWORD PTR [rip+0x10752]        # 0x14001b620
   14000aece:	nop
   14000aecf:	lea    rcx,[rsp+0x110]
   14000aed7:	call   QWORD PTR [rip+0x10743]        # 0x14001b620
   14000aedd:	nop
   14000aede:	lea    rcx,[rsp+0x108]
   14000aee6:	call   QWORD PTR [rip+0x10734]        # 0x14001b620
   14000aeec:	nop
   14000aeed:	lea    rcx,[rsp+0xa8]
   14000aef5:	call   QWORD PTR [rip+0x10725]        # 0x14001b620
   14000aefb:	nop
   14000aefc:	lea    rcx,[rsp+0xe8]
   14000af04:	call   QWORD PTR [rip+0x10716]        # 0x14001b620
   14000af0a:	nop
   14000af0b:	lea    rcx,[rsp+0x98]
   14000af13:	call   QWORD PTR [rip+0x1070f]        # 0x14001b628
   14000af19:	nop
   14000af1a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000af1f:	mov    eax,DWORD PTR [rbx]
   14000af21:	test   eax,eax
   14000af23:	je     0x14000af45
   14000af25:	cmp    eax,0xffffffff
   14000af28:	je     0x14000b51f
   14000af2e:	lock xadd DWORD PTR [rbx],ebp
   14000af32:	add    ebp,0xffffffff
   14000af35:	setne  al
   14000af38:	test   al,al
   14000af3a:	jne    0x14000b51f
   14000af40:	mov    rbx,QWORD PTR [rsp+0x48]
   14000af45:	movsxd rax,DWORD PTR [rbx+0xc]
   14000af49:	lea    rdi,[rbx+rax*8+0x10]
   14000af4e:	movsxd rax,DWORD PTR [rbx+0x8]
   14000af52:	lea    rsi,[rbx+rax*8+0x10]
   14000af57:	cmp    rsi,rdi
   14000af5a:	je     0x14000af72
   14000af5c:	nop    DWORD PTR [rax+0x0]
   14000af60:	sub    rdi,0x8
   14000af64:	mov    rcx,rdi
   14000af67:	call   QWORD PTR [rip+0x106bb]        # 0x14001b628
   14000af6d:	cmp    rdi,rsi
   14000af70:	jne    0x14000af60
   14000af72:	mov    rcx,rbx
   14000af75:	call   QWORD PTR [rip+0x10315]        # 0x14001b290
   14000af7b:	jmp    0x14000b51f
   14000af80:	mov    rax,QWORD PTR [rip+0x10659]        # 0x14001b5e0
   14000af87:	mov    QWORD PTR [rsp+0x50],rax
   14000af8c:	lea    rcx,[rsp+0xf8]
   14000af94:	call   QWORD PTR [rip+0x10676]        # 0x14001b610
   14000af9a:	mov    rsi,rax
   14000af9d:	lea    rcx,[r14+0x88]
   14000afa4:	lea    rdx,[rsp+0xc8]
   14000afac:	call   QWORD PTR [rip+0x10636]        # 0x14001b5e8
   14000afb2:	mov    rbx,rax
   14000afb5:	lea    rcx,[r14+0x58]
   14000afb9:	lea    rdx,[rsp+0xf0]
   14000afc1:	call   QWORD PTR [rip+0x10621]        # 0x14001b5e8
   14000afc7:	mov    rdi,rax
   14000afca:	mov    rcx,rbx
   14000afcd:	call   QWORD PTR [rip+0x1026d]        # 0x14001b240
   14000afd3:	mov    rbx,rax
   14000afd6:	mov    rcx,rdi
   14000afd9:	call   QWORD PTR [rip+0x10261]        # 0x14001b240
   14000afdf:	lea    rcx,[rsp+0x50]
   14000afe4:	mov    QWORD PTR [rsp+0x30],rcx
   14000afe9:	mov    DWORD PTR [rsp+0x28],r12d
   14000afee:	mov    QWORD PTR [rsp+0x20],rsi
   14000aff3:	mov    r9,rbx
   14000aff6:	lea    r8,[rip+0x132ab]        # 0x14001e2a8
   14000affd:	mov    rdx,rax
   14000b000:	lea    rcx,[rsp+0x1d8]
   14000b008:	call   0x140013a20
   14000b00d:	mov    BYTE PTR [rsp+0x210],0x0
   14000b015:	mov    DWORD PTR [rsp+0x214],r12d
   14000b01d:	mov    BYTE PTR [rsp+0x218],0x0
   14000b025:	lea    rdx,[rsp+0x1d8]
   14000b02d:	mov    rcx,QWORD PTR [r14+0x38]
   14000b031:	call   0x14000a9f0
   14000b036:	nop
   14000b037:	lea    rcx,[rsp+0x200]
   14000b03f:	call   QWORD PTR [rip+0x105e3]        # 0x14001b628
   14000b045:	nop
   14000b046:	lea    rcx,[rsp+0x1f8]
   14000b04e:	call   0x140002880
   14000b053:	nop
   14000b054:	lea    rcx,[rsp+0x1f0]
   14000b05c:	call   QWORD PTR [rip+0x105be]        # 0x14001b620
   14000b062:	nop
   14000b063:	lea    rcx,[rsp+0x1e8]
   14000b06b:	call   QWORD PTR [rip+0x105af]        # 0x14001b620
   14000b071:	nop
   14000b072:	lea    rcx,[rsp+0x1e0]
   14000b07a:	call   QWORD PTR [rip+0x105a0]        # 0x14001b620
   14000b080:	nop
   14000b081:	lea    rcx,[rsp+0xf0]
   14000b089:	call   QWORD PTR [rip+0x10591]        # 0x14001b620
   14000b08f:	nop
   14000b090:	lea    rcx,[rsp+0xc8]
   14000b098:	call   QWORD PTR [rip+0x10582]        # 0x14001b620
   14000b09e:	nop
   14000b09f:	lea    rcx,[rsp+0xf8]
   14000b0a7:	call   QWORD PTR [rip+0x1057b]        # 0x14001b628
   14000b0ad:	nop
   14000b0ae:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b0b3:	mov    eax,DWORD PTR [rbx]
   14000b0b5:	test   eax,eax
   14000b0b7:	je     0x14000b0d9
   14000b0b9:	cmp    eax,0xffffffff
   14000b0bc:	je     0x14000b51f
   14000b0c2:	lock xadd DWORD PTR [rbx],ebp
   14000b0c6:	add    ebp,0xffffffff
   14000b0c9:	setne  al
   14000b0cc:	test   al,al
   14000b0ce:	jne    0x14000b51f
   14000b0d4:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b0d9:	movsxd rax,DWORD PTR [rbx+0xc]
   14000b0dd:	lea    rdi,[rbx+rax*8+0x10]
   14000b0e2:	movsxd rax,DWORD PTR [rbx+0x8]
   14000b0e6:	lea    rsi,[rbx+rax*8+0x10]
   14000b0eb:	cmp    rsi,rdi
   14000b0ee:	je     0x14000b102
   14000b0f0:	sub    rdi,0x8
   14000b0f4:	mov    rcx,rdi
   14000b0f7:	call   QWORD PTR [rip+0x1052b]        # 0x14001b628
   14000b0fd:	cmp    rdi,rsi
   14000b100:	jne    0x14000b0f0
   14000b102:	mov    rcx,rbx
   14000b105:	call   QWORD PTR [rip+0x10185]        # 0x14001b290
   14000b10b:	jmp    0x14000b51f
   14000b110:	xor    eax,eax
   14000b112:	mov    rcx,rbp
   14000b115:	lea    rdi,[rip+0x1317c]        # 0x14001e298
   14000b11c:	repnz scas al,BYTE PTR es:[rdi]
   14000b11e:	not    rcx
   14000b121:	lea    rdx,[rcx-0x1]
   14000b125:	lea    rcx,[rip+0x1316c]        # 0x14001e298
   14000b12c:	call   QWORD PTR [rip+0x104e6]        # 0x14001b618
   14000b132:	mov    QWORD PTR [rsp+0x70],rax
   14000b137:	lea    rdx,[rsp+0x70]
   14000b13c:	mov    rcx,rbx
   14000b13f:	call   QWORD PTR [rip+0x104eb]        # 0x14001b630
   14000b145:	movzx  edi,al
   14000b148:	lea    rcx,[rsp+0x70]
   14000b14d:	call   QWORD PTR [rip+0x104d5]        # 0x14001b628
   14000b153:	test   dil,dil
   14000b156:	je     0x14000b175
   14000b158:	lea    rdx,[r14+0x88]
   14000b15f:	lea    rcx,[r14+0x70]
   14000b163:	call   0x1400049b0
   14000b168:	mov    BYTE PTR [r14+0x96],0x1
   14000b170:	jmp    0x14000b51f
   14000b175:	xor    eax,eax
   14000b177:	mov    rcx,rbp
   14000b17a:	lea    rdi,[rip+0x12def]        # 0x14001df70
   14000b181:	repnz scas al,BYTE PTR es:[rdi]
   14000b183:	not    rcx
   14000b186:	lea    rdx,[rcx-0x1]
   14000b18a:	lea    rcx,[rip+0x12ddf]        # 0x14001df70
   14000b191:	call   QWORD PTR [rip+0x10481]        # 0x14001b618
   14000b197:	mov    QWORD PTR [rsp+0x80],rax
   14000b19f:	lea    rdx,[rsp+0x80]
   14000b1a7:	mov    rcx,rbx
   14000b1aa:	call   QWORD PTR [rip+0x10480]        # 0x14001b630
   14000b1b0:	movzx  edi,al
   14000b1b3:	lea    rcx,[rsp+0x80]
   14000b1bb:	call   QWORD PTR [rip+0x10467]        # 0x14001b628
   14000b1c1:	test   dil,dil
   14000b1c4:	je     0x14000b1ea
   14000b1c6:	lea    rcx,[r14+0x70]
   14000b1ca:	mov    rdx,QWORD PTR [rcx]
   14000b1cd:	mov    eax,DWORD PTR [rdx+0x8]
   14000b1d0:	cmp    DWORD PTR [rdx+0xc],eax
   14000b1d3:	jne    0x14000b51f
   14000b1d9:	lea    rdx,[r14+0x88]
   14000b1e0:	call   0x1400049b0
   14000b1e5:	jmp    0x14000b51f
   14000b1ea:	xor    eax,eax
   14000b1ec:	mov    rcx,rbp
   14000b1ef:	lea    rdi,[rip+0x12dc2]        # 0x14001dfb8
   14000b1f6:	repnz scas al,BYTE PTR es:[rdi]
   14000b1f8:	not    rcx
   14000b1fb:	lea    rdx,[rcx-0x1]
   14000b1ff:	lea    rcx,[rip+0x12db2]        # 0x14001dfb8
   14000b206:	call   QWORD PTR [rip+0x1040c]        # 0x14001b618
   14000b20c:	mov    QWORD PTR [rsp+0x90],rax
   14000b214:	lea    rdx,[rsp+0x90]
   14000b21c:	mov    rcx,rbx
   14000b21f:	call   QWORD PTR [rip+0x1040b]        # 0x14001b630
   14000b225:	movzx  edi,al
   14000b228:	lea    rcx,[rsp+0x90]
   14000b230:	call   QWORD PTR [rip+0x103f2]        # 0x14001b628
   14000b236:	test   dil,dil
   14000b239:	je     0x14000b51f
   14000b23f:	cmp    BYTE PTR [r14+0x95],0x0
   14000b247:	je     0x14000b3db
   14000b24d:	lea    rcx,[r14+0x68]
   14000b251:	lea    rdx,[rsp+0xa0]
   14000b259:	call   QWORD PTR [rip+0x10069]        # 0x14001b2c8
   14000b25f:	mov    rbp,rax
   14000b262:	lea    rcx,[r14+0x60]
   14000b266:	lea    rdx,[rsp+0xe0]
   14000b26e:	call   QWORD PTR [rip+0x10054]        # 0x14001b2c8
   14000b274:	mov    rsi,rax
   14000b277:	lea    rcx,[r14+0x58]
   14000b27b:	lea    rdx,[rsp+0xd8]
   14000b283:	call   QWORD PTR [rip+0x1003f]        # 0x14001b2c8
   14000b289:	mov    rdi,rax
   14000b28c:	movzx  r13d,BYTE PTR [r14+0x96]
   14000b294:	mov    r12d,DWORD PTR [r14+0x40]
   14000b298:	mov    ebx,DWORD PTR [r14+0x80]
   14000b29f:	mov    rcx,rbp
   14000b2a2:	call   QWORD PTR [rip+0xff98]        # 0x14001b240
   14000b2a8:	mov    rbp,rax
   14000b2ab:	mov    rcx,rsi
   14000b2ae:	call   QWORD PTR [rip+0xff8c]        # 0x14001b240
   14000b2b4:	mov    rsi,rax
   14000b2b7:	mov    rcx,rdi
   14000b2ba:	call   QWORD PTR [rip+0xff80]        # 0x14001b240
   14000b2c0:	lea    rcx,[r14+0x70]
   14000b2c4:	lea    rdx,[r14+0x78]
   14000b2c8:	mov    QWORD PTR [rsp+0x30],rcx
   14000b2cd:	mov    DWORD PTR [rsp+0x28],ebx
   14000b2d1:	mov    QWORD PTR [rsp+0x20],rdx
   14000b2d6:	mov    r9,rbp
   14000b2d9:	mov    r8,rsi
   14000b2dc:	mov    rdx,rax
   14000b2df:	lea    rcx,[rsp+0x148]
   14000b2e7:	call   0x140013a20
   14000b2ec:	mov    BYTE PTR [rsp+0x180],0x0
   14000b2f4:	mov    DWORD PTR [rsp+0x184],r12d
   14000b2fc:	mov    BYTE PTR [rsp+0x188],r13b
   14000b304:	test   rsi,rsi
   14000b307:	je     0x14000b329
   14000b309:	movzx  eax,BYTE PTR [rsi]
   14000b30c:	test   al,al
   14000b30e:	je     0x14000b329
   14000b310:	cmp    al,0x80
   14000b312:	jae    0x14000b31f
   14000b314:	inc    rsi
   14000b317:	mov    al,BYTE PTR [rsi]
   14000b319:	test   al,al
   14000b31b:	jne    0x14000b310
   14000b31d:	jmp    0x14000b329
   14000b31f:	mov    BYTE PTR [rsp+0x180],0x1
   14000b327:	jmp    0x14000b34e
   14000b329:	test   rbp,rbp
   14000b32c:	je     0x14000b34e
   14000b32e:	movzx  eax,BYTE PTR [rbp+0x0]
   14000b332:	test   al,al
   14000b334:	je     0x14000b34e
   14000b336:	cmp    al,0x80
   14000b338:	jae    0x14000b346
   14000b33a:	inc    rbp
   14000b33d:	mov    al,BYTE PTR [rbp+0x0]
   14000b340:	test   al,al
   14000b342:	jne    0x14000b336
   14000b344:	jmp    0x14000b34e
   14000b346:	mov    BYTE PTR [rsp+0x180],0x1
   14000b34e:	lea    rdx,[rsp+0x148]
   14000b356:	mov    rcx,QWORD PTR [r14+0x38]
   14000b35a:	call   0x14000a9f0
   14000b35f:	nop
   14000b360:	lea    rcx,[rsp+0x170]
   14000b368:	call   QWORD PTR [rip+0x102ba]        # 0x14001b628
   14000b36e:	nop
   14000b36f:	lea    rcx,[rsp+0x168]
   14000b377:	call   0x140002880
   14000b37c:	nop
   14000b37d:	lea    rcx,[rsp+0x160]
   14000b385:	call   QWORD PTR [rip+0x10295]        # 0x14001b620
   14000b38b:	nop
   14000b38c:	lea    rcx,[rsp+0x158]
   14000b394:	call   QWORD PTR [rip+0x10286]        # 0x14001b620
   14000b39a:	nop
   14000b39b:	lea    rcx,[rsp+0x150]
   14000b3a3:	call   QWORD PTR [rip+0x10277]        # 0x14001b620
   14000b3a9:	nop
   14000b3aa:	lea    rcx,[rsp+0xd8]
   14000b3b2:	call   QWORD PTR [rip+0x10268]        # 0x14001b620
   14000b3b8:	nop
   14000b3b9:	lea    rcx,[rsp+0xe0]
   14000b3c1:	call   QWORD PTR [rip+0x10259]        # 0x14001b620
   14000b3c7:	nop
   14000b3c8:	lea    rcx,[rsp+0xa0]
   14000b3d0:	call   QWORD PTR [rip+0x1024a]        # 0x14001b620
   14000b3d6:	jmp    0x14000b51a
   14000b3db:	lea    rcx,[r14+0x68]
   14000b3df:	lea    rdx,[rsp+0xd0]
   14000b3e7:	call   QWORD PTR [rip+0x101fb]        # 0x14001b5e8
   14000b3ed:	mov    rsi,rax
   14000b3f0:	lea    rcx,[r14+0x60]
   14000b3f4:	lea    rdx,[rsp+0xc0]
   14000b3fc:	call   QWORD PTR [rip+0x101e6]        # 0x14001b5e8
   14000b402:	mov    rdi,rax
   14000b405:	lea    rcx,[r14+0x58]
   14000b409:	lea    rdx,[rsp+0xb0]
   14000b411:	call   QWORD PTR [rip+0x101d1]        # 0x14001b5e8
   14000b417:	mov    rbx,rax
   14000b41a:	movzx  r13d,BYTE PTR [r14+0x96]
   14000b422:	mov    r12d,DWORD PTR [r14+0x40]
   14000b426:	mov    ebp,DWORD PTR [r14+0x80]
   14000b42d:	mov    rcx,rsi
   14000b430:	call   QWORD PTR [rip+0xfe0a]        # 0x14001b240
   14000b436:	mov    rsi,rax
   14000b439:	mov    rcx,rdi
   14000b43c:	call   QWORD PTR [rip+0xfdfe]        # 0x14001b240
   14000b442:	mov    rdi,rax
   14000b445:	mov    rcx,rbx
   14000b448:	call   QWORD PTR [rip+0xfdf2]        # 0x14001b240
   14000b44e:	lea    rcx,[r14+0x70]
   14000b452:	lea    rdx,[r14+0x78]
   14000b456:	mov    QWORD PTR [rsp+0x30],rcx
   14000b45b:	mov    DWORD PTR [rsp+0x28],ebp
   14000b45f:	mov    QWORD PTR [rsp+0x20],rdx
   14000b464:	mov    r9,rsi
   14000b467:	mov    r8,rdi
   14000b46a:	mov    rdx,rax
   14000b46d:	lea    rcx,[rsp+0x190]
   14000b475:	call   0x140013a20
   14000b47a:	mov    BYTE PTR [rsp+0x1c8],0x0
   14000b482:	mov    DWORD PTR [rsp+0x1cc],r12d
   14000b48a:	mov    BYTE PTR [rsp+0x1d0],r13b
   14000b492:	lea    rdx,[rsp+0x190]
   14000b49a:	mov    rcx,QWORD PTR [r14+0x38]
   14000b49e:	call   0x14000a9f0
   14000b4a3:	nop
   14000b4a4:	lea    rcx,[rsp+0x1b8]
   14000b4ac:	call   QWORD PTR [rip+0x10176]        # 0x14001b628
   14000b4b2:	nop
   14000b4b3:	lea    rcx,[rsp+0x1b0]
   14000b4bb:	call   0x140002880
   14000b4c0:	nop
   14000b4c1:	lea    rcx,[rsp+0x1a8]
   14000b4c9:	call   QWORD PTR [rip+0x10151]        # 0x14001b620
   14000b4cf:	nop
   14000b4d0:	lea    rcx,[rsp+0x1a0]
   14000b4d8:	call   QWORD PTR [rip+0x10142]        # 0x14001b620
   14000b4de:	nop
   14000b4df:	lea    rcx,[rsp+0x198]
   14000b4e7:	call   QWORD PTR [rip+0x10133]        # 0x14001b620
   14000b4ed:	nop
   14000b4ee:	lea    rcx,[rsp+0xb0]
   14000b4f6:	call   QWORD PTR [rip+0x10124]        # 0x14001b620
   14000b4fc:	nop
   14000b4fd:	lea    rcx,[rsp+0xc0]
   14000b505:	call   QWORD PTR [rip+0x10115]        # 0x14001b620
   14000b50b:	nop
   14000b50c:	lea    rcx,[rsp+0xd0]
   14000b514:	call   QWORD PTR [rip+0x10106]        # 0x14001b620
   14000b51a:	mov    BYTE PTR [r14+0x44],0x0
   14000b51f:	mov    al,0x1
   14000b521:	lea    r11,[rsp+0x230]
   14000b529:	mov    rbx,QWORD PTR [r11+0x20]
   14000b52d:	mov    rbp,QWORD PTR [r11+0x28]
   14000b531:	mov    rsi,QWORD PTR [r11+0x30]
   14000b535:	mov    rdi,QWORD PTR [r11+0x38]
   14000b539:	mov    rsp,r11
   14000b53c:	pop    r14
   14000b53e:	pop    r13
   14000b540:	pop    r12
   14000b542:	ret    
   14000b543:	int3   
   14000b544:	int3   
   14000b545:	int3   
   14000b546:	int3   
   14000b547:	int3   
   14000b548:	int3   
   14000b549:	int3   
   14000b54a:	int3   
   14000b54b:	int3   
   14000b54c:	int3   
   14000b54d:	int3   
   14000b54e:	int3   
   14000b54f:	int3   
   14000b550:	mov    QWORD PTR [rsp+0x8],rcx
   14000b555:	push   rdi
   14000b556:	sub    rsp,0x30
   14000b55a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000b563:	mov    QWORD PTR [rsp+0x48],rbx
   14000b568:	mov    rdi,rcx
   14000b56b:	mov    rax,QWORD PTR [rip+0x10066]        # 0x14001b5d8
   14000b572:	mov    QWORD PTR [rcx],rax
   14000b575:	add    rcx,0x8
   14000b579:	call   QWORD PTR [rip+0xfcd9]        # 0x14001b258
   14000b57f:	nop
   14000b580:	lea    rcx,[rdi+0x18]
   14000b584:	call   QWORD PTR [rip+0x10086]        # 0x14001b610
   14000b58a:	nop
   14000b58b:	lea    rcx,[rdi+0x20]
   14000b58f:	call   QWORD PTR [rip+0x1007b]        # 0x14001b610
   14000b595:	nop
   14000b596:	mov    rcx,rdi
   14000b599:	call   0x14000a7d0
   14000b59e:	lea    rdx,[rip+0x10d53]        # 0x14001c2f8
   14000b5a5:	lea    rcx,[rdi+0x8]
   14000b5a9:	call   QWORD PTR [rip+0xfcb9]        # 0x14001b268
   14000b5af:	mov    QWORD PTR [rdi+0x10],0x0
   14000b5b7:	mov    rax,rdi
   14000b5ba:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b5bf:	add    rsp,0x30
   14000b5c3:	pop    rdi
   14000b5c4:	ret    
   14000b5c5:	int3   
   14000b5c6:	int3   
   14000b5c7:	int3   
   14000b5c8:	int3   
   14000b5c9:	int3   
   14000b5ca:	int3   
   14000b5cb:	int3   
   14000b5cc:	int3   
   14000b5cd:	int3   
   14000b5ce:	int3   
   14000b5cf:	int3   
   14000b5d0:	mov    QWORD PTR [rsp+0x10],rdx
   14000b5d5:	mov    QWORD PTR [rsp+0x8],rcx
   14000b5da:	push   rbx
   14000b5db:	push   rbp
   14000b5dc:	push   rsi
   14000b5dd:	push   rdi
   14000b5de:	push   r12
   14000b5e0:	push   r13
   14000b5e2:	push   r14
   14000b5e4:	push   r15
   14000b5e6:	sub    rsp,0x228
   14000b5ed:	mov    QWORD PTR [rsp+0x200],0xfffffffffffffffe
   14000b5f9:	mov    rbp,rcx
   14000b5fc:	mov    DWORD PTR [rsp+0x30],0x0
   14000b604:	lea    rcx,[rsp+0x108]
   14000b60c:	call   QWORD PTR [rip+0xfc76]        # 0x14001b288
   14000b612:	nop
   14000b613:	mov    DWORD PTR [rsp+0x198],0x2
   14000b61e:	mov    edx,0x2
   14000b623:	lea    rcx,[rsp+0x108]
   14000b62b:	call   QWORD PTR [rip+0xfc4f]        # 0x14001b280
   14000b631:	test   al,al
   14000b633:	jne    0x14000b64a
   14000b635:	lea    rcx,[rsp+0x108]
   14000b63d:	call   QWORD PTR [rip+0xfc35]        # 0x14001b278
   14000b643:	xor    al,al
   14000b645:	jmp    0x14000c989
   14000b64a:	lea    rdx,[rsp+0x108]
   14000b652:	lea    rcx,[rsp+0x40]
   14000b657:	call   QWORD PTR [rip+0xfd9b]        # 0x14001b3f8
   14000b65d:	nop
   14000b65e:	lea    rcx,[rip+0x10c93]        # 0x14001c2f8
   14000b665:	call   QWORD PTR [rip+0xfc4d]        # 0x14001b2b8
   14000b66b:	mov    rdx,rax
   14000b66e:	lea    rcx,[rsp+0x40]
   14000b673:	call   QWORD PTR [rip+0xfe57]        # 0x14001b4d0
   14000b679:	lea    rdx,[rip+0x12f30]        # 0x14001e5b0
   14000b680:	lea    rcx,[rsp+0x40]
   14000b685:	call   QWORD PTR [rip+0xfe3d]        # 0x14001b4c8
   14000b68b:	lea    rdx,[rip+0x12f06]        # 0x14001e598
   14000b692:	lea    rcx,[rsp+0x40]
   14000b697:	call   QWORD PTR [rip+0xfe2b]        # 0x14001b4c8
   14000b69d:	lea    rdx,[rip+0x12ecc]        # 0x14001e570
   14000b6a4:	lea    rcx,[rsp+0x40]
   14000b6a9:	call   QWORD PTR [rip+0xfe19]        # 0x14001b4c8
   14000b6af:	lea    rdx,[rsp+0x1f8]
   14000b6b7:	mov    rcx,rbp
   14000b6ba:	call   0x140008b00
   14000b6bf:	nop
   14000b6c0:	mov    DWORD PTR [rsp+0x30],0x1
   14000b6c8:	mov    rax,QWORD PTR [rax]
   14000b6cb:	cmp    DWORD PTR [rax+0x4],0x0
   14000b6cf:	je     0x14000b73c
   14000b6d1:	xor    eax,eax
   14000b6d3:	or     rcx,0xffffffffffffffff
   14000b6d7:	lea    rdx,[rip+0x12e8e]        # 0x14001e56c
   14000b6de:	mov    rdi,rdx
   14000b6e1:	repnz scas al,BYTE PTR es:[rdi]
   14000b6e3:	not    rcx
   14000b6e6:	dec    rcx
   14000b6e9:	mov    DWORD PTR [rsp+0x1d0],ecx
   14000b6f0:	mov    QWORD PTR [rsp+0x1d8],rdx
   14000b6f8:	lea    rdx,[rsp+0x1e8]
   14000b700:	mov    rcx,rbp
   14000b703:	call   0x140008b00
   14000b708:	nop
   14000b709:	mov    DWORD PTR [rsp+0x30],0x3
   14000b711:	movaps xmm0,XMMWORD PTR [rsp+0x1d0]
   14000b719:	movdqa XMMWORD PTR [rsp+0x210],xmm0
   14000b722:	lea    rdx,[rsp+0x210]
   14000b72a:	mov    rcx,rax
   14000b72d:	call   QWORD PTR [rip+0xfd8d]        # 0x14001b4c0
   14000b733:	test   al,al
   14000b735:	jne    0x14000b73c
   14000b737:	mov    dil,0x1
   14000b73a:	jmp    0x14000b73f
   14000b73c:	xor    dil,dil
   14000b73f:	mov    eax,DWORD PTR [rsp+0x30]
   14000b743:	test   al,0x2
   14000b745:	je     0x14000b75b
   14000b747:	and    DWORD PTR [rsp+0x30],0xfffffffd
   14000b74c:	lea    rcx,[rsp+0x1e8]
   14000b754:	call   QWORD PTR [rip+0xfece]        # 0x14001b628
   14000b75a:	nop
   14000b75b:	mov    eax,DWORD PTR [rsp+0x30]
   14000b75f:	test   al,0x1
   14000b761:	je     0x14000b776
   14000b763:	and    DWORD PTR [rsp+0x30],0xfffffffe
   14000b768:	lea    rcx,[rsp+0x1f8]
   14000b770:	call   QWORD PTR [rip+0xfeb2]        # 0x14001b628
   14000b776:	test   dil,dil
   14000b779:	je     0x14000b81d
   14000b77f:	lea    rdx,[rsp+0x190]
   14000b787:	mov    rcx,rbp
   14000b78a:	call   0x140008b30
   14000b78f:	mov    rbx,rax
   14000b792:	lea    rdx,[rsp+0x1b0]
   14000b79a:	mov    rcx,rbp
   14000b79d:	call   0x140008b00
   14000b7a2:	mov    rdi,rax
   14000b7a5:	lea    rdx,[rip+0x12db4]        # 0x14001e560
   14000b7ac:	lea    rcx,[rsp+0x40]
   14000b7b1:	call   QWORD PTR [rip+0xfd11]        # 0x14001b4c8
   14000b7b7:	mov    rcx,rax
   14000b7ba:	mov    rdx,rdi
   14000b7bd:	call   QWORD PTR [rip+0xfcf5]        # 0x14001b4b8
   14000b7c3:	mov    rcx,rax
   14000b7c6:	lea    rdx,[rip+0x12d8f]        # 0x14001e55c
   14000b7cd:	call   QWORD PTR [rip+0xfcf5]        # 0x14001b4c8
   14000b7d3:	mov    rcx,rax
   14000b7d6:	lea    rdx,[rip+0x12d6b]        # 0x14001e548
   14000b7dd:	call   QWORD PTR [rip+0xfce5]        # 0x14001b4c8
   14000b7e3:	mov    rcx,rax
   14000b7e6:	mov    rdx,rbx
   14000b7e9:	call   QWORD PTR [rip+0xfcc9]        # 0x14001b4b8
   14000b7ef:	mov    rcx,rax
   14000b7f2:	lea    rdx,[rip+0x12d63]        # 0x14001e55c
   14000b7f9:	call   QWORD PTR [rip+0xfcc9]        # 0x14001b4c8
   14000b7ff:	nop
   14000b800:	lea    rcx,[rsp+0x1b0]
   14000b808:	call   QWORD PTR [rip+0xfe1a]        # 0x14001b628
   14000b80e:	nop
   14000b80f:	lea    rcx,[rsp+0x190]
   14000b817:	call   QWORD PTR [rip+0xfe0b]        # 0x14001b628
   14000b81d:	lea    rdx,[rip+0x12d1c]        # 0x14001e540
   14000b824:	lea    rcx,[rsp+0x40]
   14000b829:	call   QWORD PTR [rip+0xfc99]        # 0x14001b4c8
   14000b82f:	lea    rdx,[rip+0x10ac2]        # 0x14001c2f8
   14000b836:	lea    rcx,[rbp+0x8]
   14000b83a:	call   QWORD PTR [rip+0xfe00]        # 0x14001b640
   14000b840:	test   eax,eax
   14000b842:	je     0x14000b873
   14000b844:	lea    rdx,[rip+0x12ce5]        # 0x14001e530
   14000b84b:	lea    rcx,[rsp+0x40]
   14000b850:	call   QWORD PTR [rip+0xfc72]        # 0x14001b4c8
   14000b856:	mov    rcx,rax
   14000b859:	lea    rdx,[rbp+0x8]
   14000b85d:	call   QWORD PTR [rip+0xfc4d]        # 0x14001b4b0
   14000b863:	mov    rcx,rax
   14000b866:	lea    rdx,[rip+0x12cab]        # 0x14001e518
   14000b86d:	call   QWORD PTR [rip+0xfc55]        # 0x14001b4c8
   14000b873:	mov    rax,QWORD PTR [rbp+0x0]
   14000b877:	cmp    QWORD PTR [rax+0x10],0x0
   14000b87c:	je     0x14000b884
   14000b87e:	mov    rsi,QWORD PTR [rax+0x20]
   14000b882:	jmp    0x14000b888
   14000b884:	lea    rsi,[rax+0x8]
   14000b888:	add    rax,0x8
   14000b88c:	cmp    rsi,rax
   14000b88f:	je     0x14000c94c
   14000b895:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000b8a0:	mov    rbx,QWORD PTR [rip+0xfd31]        # 0x14001b5d8
   14000b8a7:	mov    QWORD PTR [rsp+0x38],rbx
   14000b8ac:	movzx  eax,BYTE PTR [rsi+0x50]
   14000b8b0:	mov    BYTE PTR [rsp+0x280],al
   14000b8b7:	lea    rcx,[rsi+0x20]
   14000b8bb:	call   QWORD PTR [rip+0xfa57]        # 0x14001b318
   14000b8c1:	test   al,al
   14000b8c3:	je     0x14000b8c9
   14000b8c5:	xor    eax,eax
   14000b8c7:	jmp    0x14000b8d3
   14000b8c9:	lea    rcx,[rsi+0x20]
   14000b8cd:	call   QWORD PTR [rip+0xf945]        # 0x14001b218
   14000b8d3:	or     r8d,0xffffffff
   14000b8d7:	mov    rdx,rax
   14000b8da:	lea    rcx,[rsp+0x60]
   14000b8df:	call   QWORD PTR [rip+0xfd23]        # 0x14001b608
   14000b8e5:	nop
   14000b8e6:	or     r8d,0xffffffff
   14000b8ea:	lea    rdx,[rip+0x104f7]        # 0x14001bde8
   14000b8f1:	lea    rcx,[rsp+0x68]
   14000b8f6:	call   QWORD PTR [rip+0xfd0c]        # 0x14001b608
   14000b8fc:	nop
   14000b8fd:	nop    DWORD PTR [rax]
   14000b900:	lea    rcx,[rsi+0x28]
   14000b904:	call   QWORD PTR [rip+0xfa0e]        # 0x14001b318
   14000b90a:	test   al,al
   14000b90c:	je     0x14000b912
   14000b90e:	xor    eax,eax
   14000b910:	jmp    0x14000b91c
   14000b912:	lea    rcx,[rsi+0x28]
   14000b916:	call   QWORD PTR [rip+0xf8fc]        # 0x14001b218
   14000b91c:	or     r8d,0xffffffff
   14000b920:	mov    rdx,rax
   14000b923:	lea    rcx,[rsp+0x130]
   14000b92b:	call   QWORD PTR [rip+0xfcd7]        # 0x14001b608
   14000b931:	nop
   14000b932:	lea    rdx,[rip+0x1296f]        # 0x14001e2a8
   14000b939:	mov    rcx,rax
   14000b93c:	call   QWORD PTR [rip+0xfcfe]        # 0x14001b640
   14000b942:	test   eax,eax
   14000b944:	sete   dil
   14000b948:	lea    rcx,[rsp+0x130]
   14000b950:	call   QWORD PTR [rip+0xfcca]        # 0x14001b620
   14000b956:	test   dil,dil
   14000b959:	je     0x14000b9c3
   14000b95b:	cmp    DWORD PTR [rsi+0x54],0x2
   14000b95f:	je     0x14000bb36
   14000b965:	mov    r13b,BYTE PTR [rsi+0x50]
   14000b969:	mov    BYTE PTR [rsp+0x280],r13b
   14000b971:	lea    rcx,[rsi+0x30]
   14000b975:	call   QWORD PTR [rip+0xf99d]        # 0x14001b318
   14000b97b:	test   al,al
   14000b97d:	je     0x14000b983
   14000b97f:	xor    eax,eax
   14000b981:	jmp    0x14000b98d
   14000b983:	lea    rcx,[rsi+0x30]
   14000b987:	call   QWORD PTR [rip+0xf88b]        # 0x14001b218
   14000b98d:	or     r8d,0xffffffff
   14000b991:	mov    rdx,rax
   14000b994:	lea    rcx,[rsp+0x1f0]
   14000b99c:	call   QWORD PTR [rip+0xfc66]        # 0x14001b608
   14000b9a2:	mov    rdx,rax
   14000b9a5:	lea    rcx,[rsp+0x68]
   14000b9aa:	call   QWORD PTR [rip+0xfbe0]        # 0x14001b590
   14000b9b0:	lea    rcx,[rsp+0x1f0]
   14000b9b8:	call   QWORD PTR [rip+0xfc62]        # 0x14001b620
   14000b9be:	jmp    0x14000bb36
   14000b9c3:	mov    eax,DWORD PTR [rbx]
   14000b9c5:	cmp    eax,0x1
   14000b9c8:	je     0x14000bac3
   14000b9ce:	test   eax,eax
   14000b9d0:	je     0x14000bac3
   14000b9d6:	call   QWORD PTR [rip+0xfbc4]        # 0x14001b5a0
   14000b9dc:	mov    r12,rax
   14000b9df:	lea    r13,[rbx+0x10]
   14000b9e3:	mov    rcx,QWORD PTR [r13+0x0]
   14000b9e7:	test   rcx,rcx
   14000b9ea:	je     0x14000ba05
   14000b9ec:	mov    rdx,rax
   14000b9ef:	call   0x14000a020
   14000b9f4:	mov    QWORD PTR [r12+0x10],rax
   14000b9f9:	and    QWORD PTR [rax],0x3
   14000b9fd:	lea    rcx,[r12+0x8]
   14000ba02:	or     QWORD PTR [rax],rcx
   14000ba05:	mov    eax,DWORD PTR [rbx]
   14000ba07:	test   eax,eax
   14000ba09:	je     0x14000ba28
   14000ba0b:	cmp    eax,0xffffffff
   14000ba0e:	je     0x14000bab2
   14000ba14:	lock add DWORD PTR [rbx],0xffffffff
   14000ba18:	setne  al
   14000ba1b:	test   al,al
   14000ba1d:	jne    0x14000bab2
   14000ba23:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ba28:	mov    rbp,QWORD PTR [r13+0x0]
   14000ba2c:	test   rbp,rbp
   14000ba2f:	je     0x14000baa1
   14000ba31:	lea    rdi,[rbp+0x20]
   14000ba35:	mov    QWORD PTR [rsp+0xe8],rdi
   14000ba3d:	lea    rcx,[rdi+0x28]
   14000ba41:	call   QWORD PTR [rip+0xfbe1]        # 0x14001b628
   14000ba47:	nop
   14000ba48:	lea    rcx,[rdi+0x20]
   14000ba4c:	call   0x140002880
   14000ba51:	nop
   14000ba52:	lea    rcx,[rdi+0x18]
   14000ba56:	call   QWORD PTR [rip+0xfbc4]        # 0x14001b620
   14000ba5c:	nop
   14000ba5d:	lea    rcx,[rdi+0x10]
   14000ba61:	call   QWORD PTR [rip+0xfbb9]        # 0x14001b620
   14000ba67:	nop
   14000ba68:	lea    rcx,[rdi+0x8]
   14000ba6c:	call   QWORD PTR [rip+0xfbae]        # 0x14001b620
   14000ba72:	mov    rcx,QWORD PTR [rbp+0x8]
   14000ba76:	test   rcx,rcx
   14000ba79:	je     0x14000ba80
   14000ba7b:	call   0x14000a180
   14000ba80:	mov    rcx,QWORD PTR [rbp+0x10]
   14000ba84:	test   rcx,rcx
   14000ba87:	je     0x14000ba8e
   14000ba89:	call   0x14000a180
   14000ba8e:	mov    r8d,0x8
   14000ba94:	mov    rdx,QWORD PTR [r13+0x0]
   14000ba98:	mov    rcx,rbx
   14000ba9b:	call   QWORD PTR [rip+0xf7ff]        # 0x14001b2a0
   14000baa1:	mov    rcx,rbx
   14000baa4:	call   QWORD PTR [rip+0xf7ee]        # 0x14001b298
   14000baaa:	mov    rbp,QWORD PTR [rsp+0x270]
   14000bab2:	mov    rbx,r12
   14000bab5:	mov    QWORD PTR [rsp+0x38],rbx
   14000baba:	mov    rcx,r12
   14000babd:	call   QWORD PTR [rip+0xf7ed]        # 0x14001b2b0
   14000bac3:	mov    rax,QWORD PTR [rbx+0x10]
   14000bac7:	lea    r9,[rbx+0x8]
   14000bacb:	xor    edi,edi
   14000bacd:	mov    cl,0x1
   14000bacf:	test   rax,rax
   14000bad2:	je     0x14000bb22
   14000bad4:	mov    edx,DWORD PTR [rsi+0x60]
   14000bad7:	mov    r9,rax
   14000bada:	cmp    DWORD PTR [rax+0x18],edx
   14000badd:	jl     0x14000baea
   14000badf:	mov    rdi,rax
   14000bae2:	mov    cl,0x1
   14000bae4:	mov    rax,QWORD PTR [rax+0x8]
   14000bae8:	jmp    0x14000baf0
   14000baea:	xor    cl,cl
   14000baec:	mov    rax,QWORD PTR [rax+0x10]
   14000baf0:	test   rax,rax
   14000baf3:	jne    0x14000bad7
   14000baf5:	test   rdi,rdi
   14000baf8:	je     0x14000bb22
   14000bafa:	cmp    edx,DWORD PTR [rdi+0x18]
   14000bafd:	jl     0x14000bb22
   14000baff:	lea    rdx,[rsi+0x18]
   14000bb03:	lea    rcx,[rdi+0x20]
   14000bb07:	call   0x140013c00
   14000bb0c:	movzx  edx,BYTE PTR [rsi+0x50]
   14000bb10:	mov    BYTE PTR [rdi+0x58],dl
   14000bb13:	mov    eax,DWORD PTR [rsi+0x54]
   14000bb16:	mov    DWORD PTR [rdi+0x5c],eax
   14000bb19:	movzx  eax,BYTE PTR [rsi+0x58]
   14000bb1d:	mov    BYTE PTR [rdi+0x60],al
   14000bb20:	jmp    0x14000bb36
   14000bb22:	mov    BYTE PTR [rsp+0x20],cl
   14000bb26:	lea    r8,[rsi+0x18]
   14000bb2a:	lea    rdx,[rsi+0x60]
   14000bb2e:	mov    rcx,rbx
   14000bb31:	call   0x140009ee0
   14000bb36:	mov    rdi,QWORD PTR [rbp+0x0]
   14000bb3a:	add    rdi,0x8
   14000bb3e:	mov    rcx,rsi
   14000bb41:	call   QWORD PTR [rip+0xf7e1]        # 0x14001b328
   14000bb47:	mov    rsi,rax
   14000bb4a:	cmp    rax,rdi
   14000bb4d:	je     0x14000bbcc
   14000bb4f:	lea    rdi,[rax+0x20]
   14000bb53:	mov    rcx,rdi
   14000bb56:	call   QWORD PTR [rip+0xf7bc]        # 0x14001b318
   14000bb5c:	test   al,al
   14000bb5e:	je     0x14000bb64
   14000bb60:	xor    eax,eax
   14000bb62:	jmp    0x14000bb6d
   14000bb64:	mov    rcx,rdi
   14000bb67:	call   QWORD PTR [rip+0xf6ab]        # 0x14001b218
   14000bb6d:	or     r8d,0xffffffff
   14000bb71:	mov    rdx,rax
   14000bb74:	lea    rcx,[rsp+0x118]
   14000bb7c:	call   QWORD PTR [rip+0xfa86]        # 0x14001b608
   14000bb82:	mov    r12,rax
   14000bb85:	or     DWORD PTR [rsp+0x30],0x4
   14000bb8a:	mov    rcx,QWORD PTR [rax]
   14000bb8d:	movsxd rax,DWORD PTR [rcx+0x4]
   14000bb91:	mov    rcx,QWORD PTR [rsp+0x60]
   14000bb96:	cmp    eax,DWORD PTR [rcx+0x4]
   14000bb99:	jne    0x14000bbcc
   14000bb9b:	mov    rbp,rax
   14000bb9e:	lea    rcx,[rsp+0x60]
   14000bba3:	call   QWORD PTR [rip+0xf66f]        # 0x14001b218
   14000bba9:	mov    rdi,rax
   14000bbac:	mov    rcx,r12
   14000bbaf:	call   QWORD PTR [rip+0xf663]        # 0x14001b218
   14000bbb5:	mov    rcx,rax
   14000bbb8:	mov    r8,rbp
   14000bbbb:	mov    rdx,rdi
   14000bbbe:	call   0x140014164
   14000bbc3:	test   eax,eax
   14000bbc5:	jne    0x14000bbcc
   14000bbc7:	mov    dil,0x1
   14000bbca:	jmp    0x14000bbcf
   14000bbcc:	xor    dil,dil
   14000bbcf:	mov    eax,DWORD PTR [rsp+0x30]
   14000bbd3:	test   al,0x4
   14000bbd5:	je     0x14000bbea
   14000bbd7:	and    DWORD PTR [rsp+0x30],0xfffffffb
   14000bbdc:	lea    rcx,[rsp+0x118]
   14000bbe4:	call   QWORD PTR [rip+0xfa36]        # 0x14001b620
   14000bbea:	test   dil,dil
   14000bbed:	mov    rbp,QWORD PTR [rsp+0x270]
   14000bbf5:	jne    0x14000b900
   14000bbfb:	mov    QWORD PTR [rsp+0xe8],rsi
   14000bc03:	lea    rdx,[rip+0x128fe]        # 0x14001e508
   14000bc0a:	lea    rcx,[rsp+0x40]
   14000bc0f:	call   QWORD PTR [rip+0xf8b3]        # 0x14001b4c8
   14000bc15:	mov    r13b,BYTE PTR [rsp+0x280]
   14000bc1d:	test   r13b,r13b
   14000bc20:	je     0x14000bc34
   14000bc22:	lea    rdx,[rip+0x128c7]        # 0x14001e4f0
   14000bc29:	lea    rcx,[rsp+0x40]
   14000bc2e:	call   QWORD PTR [rip+0xf894]        # 0x14001b4c8
   14000bc34:	lea    rdx,[rip+0x12905]        # 0x14001e540
   14000bc3b:	lea    rcx,[rsp+0x40]
   14000bc40:	call   QWORD PTR [rip+0xf882]        # 0x14001b4c8
   14000bc46:	movzx  r8d,r13b
   14000bc4a:	lea    rdx,[rsp+0x60]
   14000bc4f:	lea    rcx,[rsp+0x1a0]
   14000bc57:	call   0x140008830
   14000bc5c:	mov    rdi,rax
   14000bc5f:	lea    rdx,[rip+0x1287a]        # 0x14001e4e0
   14000bc66:	lea    rcx,[rsp+0x40]
   14000bc6b:	call   QWORD PTR [rip+0xf857]        # 0x14001b4c8
   14000bc71:	mov    rcx,rax
   14000bc74:	mov    rdx,rdi
   14000bc77:	call   QWORD PTR [rip+0xf83b]        # 0x14001b4b8
   14000bc7d:	mov    rcx,rax
   14000bc80:	lea    rdx,[rip+0x12849]        # 0x14001e4d0
   14000bc87:	call   QWORD PTR [rip+0xf83b]        # 0x14001b4c8
   14000bc8d:	nop
   14000bc8e:	lea    rcx,[rsp+0x1a0]
   14000bc96:	call   QWORD PTR [rip+0xf98c]        # 0x14001b628
   14000bc9c:	mov    rdx,QWORD PTR [rsp+0x68]
   14000bca1:	cmp    DWORD PTR [rdx+0x4],0x0
   14000bca5:	je     0x14000bcfd
   14000bca7:	movzx  r8d,r13b
   14000bcab:	lea    rdx,[rsp+0x68]
   14000bcb0:	lea    rcx,[rsp+0x150]
   14000bcb8:	call   0x140008830
   14000bcbd:	mov    rdi,rax
   14000bcc0:	lea    rdx,[rip+0x127f9]        # 0x14001e4c0
   14000bcc7:	lea    rcx,[rsp+0x40]
   14000bccc:	call   QWORD PTR [rip+0xf7f6]        # 0x14001b4c8
   14000bcd2:	mov    rcx,rax
   14000bcd5:	mov    rdx,rdi
   14000bcd8:	call   QWORD PTR [rip+0xf7da]        # 0x14001b4b8
   14000bcde:	mov    rcx,rax
   14000bce1:	lea    rdx,[rip+0x127c8]        # 0x14001e4b0
   14000bce8:	call   QWORD PTR [rip+0xf7da]        # 0x14001b4c8
   14000bcee:	nop
   14000bcef:	lea    rcx,[rsp+0x150]
   14000bcf7:	call   QWORD PTR [rip+0xf92b]        # 0x14001b628
   14000bcfd:	mov    eax,DWORD PTR [rbx]
   14000bcff:	cmp    eax,0x1
   14000bd02:	je     0x14000bd93
   14000bd08:	test   eax,eax
   14000bd0a:	je     0x14000bd93
   14000bd10:	call   QWORD PTR [rip+0xf88a]        # 0x14001b5a0
   14000bd16:	mov    rdi,rax
   14000bd19:	lea    rbp,[rbx+0x10]
   14000bd1d:	mov    rcx,QWORD PTR [rbp+0x0]
   14000bd21:	test   rcx,rcx
   14000bd24:	je     0x14000bd3d
   14000bd26:	mov    rdx,rax
   14000bd29:	call   0x14000a020
   14000bd2e:	mov    QWORD PTR [rdi+0x10],rax
   14000bd32:	and    QWORD PTR [rax],0x3
   14000bd36:	lea    rcx,[rdi+0x8]
   14000bd3a:	or     QWORD PTR [rax],rcx
   14000bd3d:	mov    eax,DWORD PTR [rbx]
   14000bd3f:	test   eax,eax
   14000bd41:	je     0x14000bd58
   14000bd43:	cmp    eax,0xffffffff
   14000bd46:	je     0x14000bd82
   14000bd48:	lock add DWORD PTR [rbx],0xffffffff
   14000bd4c:	setne  al
   14000bd4f:	test   al,al
   14000bd51:	jne    0x14000bd82
   14000bd53:	mov    rbx,QWORD PTR [rsp+0x38]
   14000bd58:	mov    rcx,QWORD PTR [rbp+0x0]
   14000bd5c:	test   rcx,rcx
   14000bd5f:	je     0x14000bd79
   14000bd61:	call   0x14000a180
   14000bd66:	mov    r8d,0x8
   14000bd6c:	mov    rdx,QWORD PTR [rbp+0x0]
   14000bd70:	mov    rcx,rbx
   14000bd73:	call   QWORD PTR [rip+0xf527]        # 0x14001b2a0
   14000bd79:	mov    rcx,rbx
   14000bd7c:	call   QWORD PTR [rip+0xf516]        # 0x14001b298
   14000bd82:	mov    rbx,rdi
   14000bd85:	mov    QWORD PTR [rsp+0x38],rbx
   14000bd8a:	mov    rcx,rdi
   14000bd8d:	call   QWORD PTR [rip+0xf51d]        # 0x14001b2b0
   14000bd93:	cmp    QWORD PTR [rbx+0x10],0x0
   14000bd98:	je     0x14000bda0
   14000bd9a:	mov    rdi,QWORD PTR [rbx+0x20]
   14000bd9e:	jmp    0x14000bda4
   14000bda0:	lea    rdi,[rbx+0x8]
   14000bda4:	mov    rsi,QWORD PTR [rsp+0x270]
   14000bdac:	nop    DWORD PTR [rax+0x0]
   14000bdb0:	mov    eax,DWORD PTR [rbx]
   14000bdb2:	cmp    eax,0x1
   14000bdb5:	je     0x14000bf27
   14000bdbb:	test   eax,eax
   14000bdbd:	je     0x14000bf27
   14000bdc3:	call   QWORD PTR [rip+0xf7d7]        # 0x14001b5a0
   14000bdc9:	mov    rbp,rax
   14000bdcc:	mov    QWORD PTR [rsp+0x280],rax
   14000bdd4:	lea    r13,[rbx+0x10]
   14000bdd8:	mov    QWORD PTR [rsp+0x1a8],r13
   14000bde0:	mov    rcx,QWORD PTR [r13+0x0]
   14000bde4:	test   rcx,rcx
   14000bde7:	je     0x14000be00
   14000bde9:	mov    rdx,rax
   14000bdec:	call   0x14000a020
   14000bdf1:	mov    QWORD PTR [rbp+0x10],rax
   14000bdf5:	and    QWORD PTR [rax],0x3
   14000bdf9:	lea    rcx,[rbp+0x8]
   14000bdfd:	or     QWORD PTR [rax],rcx
   14000be00:	mov    eax,DWORD PTR [rbx]
   14000be02:	test   eax,eax
   14000be04:	je     0x14000be23
   14000be06:	cmp    eax,0xffffffff
   14000be09:	je     0x14000bf16
   14000be0f:	lock add DWORD PTR [rbx],0xffffffff
   14000be13:	setne  al
   14000be16:	test   al,al
   14000be18:	jne    0x14000bf16
   14000be1e:	mov    rbx,QWORD PTR [rsp+0x38]
   14000be23:	mov    r15,QWORD PTR [r13+0x0]
   14000be27:	test   r15,r15
   14000be2a:	je     0x14000bf0d
   14000be30:	lea    r12,[r15+0x20]
   14000be34:	mov    QWORD PTR [rsp+0x1d0],r12
   14000be3c:	lea    rcx,[r12+0x28]
   14000be41:	call   QWORD PTR [rip+0xf7e1]        # 0x14001b628
   14000be47:	nop
   14000be48:	mov    rcx,QWORD PTR [r12+0x20]
   14000be4d:	mov    eax,DWORD PTR [rcx]
   14000be4f:	test   eax,eax
   14000be51:	je     0x14000be71
   14000be53:	cmp    eax,0xffffffff
   14000be56:	je     0x14000bebb
   14000be58:	lock add DWORD PTR [rcx],0xffffffff
   14000be5c:	setne  al
   14000be5f:	test   al,al
   14000be61:	jne    0x14000be6a
   14000be63:	mov    rbx,QWORD PTR [rsp+0x38]
   14000be68:	jmp    0x14000be71
   14000be6a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000be6f:	jmp    0x14000bebb
   14000be71:	mov    r14,QWORD PTR [r12+0x20]
   14000be76:	movsxd rax,DWORD PTR [r14+0xc]
   14000be7a:	lea    rbp,[r14+rax*8+0x10]
   14000be7f:	movsxd rax,DWORD PTR [r14+0x8]
   14000be83:	lea    r13,[r14+rax*8+0x10]
   14000be88:	cmp    r13,rbp
   14000be8b:	je     0x14000bea2
   14000be8d:	nop    DWORD PTR [rax]
   14000be90:	sub    rbp,0x8
   14000be94:	mov    rcx,rbp
   14000be97:	call   QWORD PTR [rip+0xf78b]        # 0x14001b628
   14000be9d:	cmp    rbp,r13
   14000bea0:	jne    0x14000be90
   14000bea2:	mov    rcx,r14
   14000bea5:	call   QWORD PTR [rip+0xf3e5]        # 0x14001b290
   14000beab:	mov    rbp,QWORD PTR [rsp+0x280]
   14000beb3:	mov    r13,QWORD PTR [rsp+0x1a8]
   14000bebb:	lea    rcx,[r12+0x18]
   14000bec0:	call   QWORD PTR [rip+0xf75a]        # 0x14001b620
   14000bec6:	nop
   14000bec7:	lea    rcx,[r12+0x10]
   14000becc:	call   QWORD PTR [rip+0xf74e]        # 0x14001b620
   14000bed2:	nop
   14000bed3:	lea    rcx,[r12+0x8]
   14000bed8:	call   QWORD PTR [rip+0xf742]        # 0x14001b620
   14000bede:	mov    rcx,QWORD PTR [r15+0x8]
   14000bee2:	test   rcx,rcx
   14000bee5:	je     0x14000beec
   14000bee7:	call   0x14000a180
   14000beec:	mov    rcx,QWORD PTR [r15+0x10]
   14000bef0:	test   rcx,rcx
   14000bef3:	je     0x14000befa
   14000bef5:	call   0x14000a180
   14000befa:	mov    r8d,0x8
   14000bf00:	mov    rdx,QWORD PTR [r13+0x0]
   14000bf04:	mov    rcx,rbx
   14000bf07:	call   QWORD PTR [rip+0xf393]        # 0x14001b2a0
   14000bf0d:	mov    rcx,rbx
   14000bf10:	call   QWORD PTR [rip+0xf382]        # 0x14001b298
   14000bf16:	mov    rbx,rbp
   14000bf19:	mov    QWORD PTR [rsp+0x38],rbx
   14000bf1e:	mov    rcx,rbp
   14000bf21:	call   QWORD PTR [rip+0xf389]        # 0x14001b2b0
   14000bf27:	lea    rax,[rbx+0x8]
   14000bf2b:	cmp    rdi,rax
   14000bf2e:	je     0x14000c7f9
   14000bf34:	lea    rbp,[rdi+0x20]
   14000bf38:	mov    rdx,rbp
   14000bf3b:	lea    rcx,[rsp+0x90]
   14000bf43:	call   0x140013b80
   14000bf48:	movzx  r11d,BYTE PTR [rbp+0x38]
   14000bf4d:	mov    BYTE PTR [rsp+0xc8],r11b
   14000bf55:	mov    ecx,DWORD PTR [rbp+0x3c]
   14000bf58:	mov    DWORD PTR [rsp+0xcc],ecx
   14000bf5f:	movzx  eax,BYTE PTR [rbp+0x40]
   14000bf63:	mov    BYTE PTR [rsp+0xd0],al
   14000bf6a:	cmp    ecx,0x2
   14000bf6d:	jne    0x14000bf97
   14000bf6f:	lea    rdx,[rsp+0x160]
   14000bf77:	lea    rcx,[rsp+0x90]
   14000bf7f:	call   0x140008c50
   14000bf84:	or     DWORD PTR [rsp+0x30],0x8
   14000bf89:	mov    rax,QWORD PTR [rax]
   14000bf8c:	cmp    DWORD PTR [rax+0x4],0x0
   14000bf90:	jne    0x14000bf97
   14000bf92:	mov    bpl,0x1
   14000bf95:	jmp    0x14000bf9a
   14000bf97:	xor    bpl,bpl
   14000bf9a:	mov    eax,DWORD PTR [rsp+0x30]
   14000bf9e:	test   al,0x8
   14000bfa0:	je     0x14000bfb5
   14000bfa2:	and    DWORD PTR [rsp+0x30],0xfffffff7
   14000bfa7:	lea    rcx,[rsp+0x160]
   14000bfaf:	call   QWORD PTR [rip+0xf673]        # 0x14001b628
   14000bfb5:	test   bpl,bpl
   14000bfb8:	je     0x14000c06d
   14000bfbe:	lea    rcx,[rsp+0xb8]
   14000bfc6:	call   QWORD PTR [rip+0xf65c]        # 0x14001b628
   14000bfcc:	nop
   14000bfcd:	mov    r12,QWORD PTR [rsp+0xb0]
   14000bfd5:	mov    eax,DWORD PTR [r12]
   14000bfd9:	test   eax,eax
   14000bfdb:	je     0x14000c005
   14000bfdd:	cmp    eax,0xffffffff
   14000bfe0:	je     0x14000c03c
   14000bfe2:	lock add DWORD PTR [r12],0xffffffff
   14000bfe8:	setne  al
   14000bfeb:	test   al,al
   14000bfed:	jne    0x14000bffe
   14000bfef:	mov    rbx,QWORD PTR [rsp+0x38]
   14000bff4:	mov    r12,QWORD PTR [rsp+0xb0]
   14000bffc:	jmp    0x14000c005
   14000bffe:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c003:	jmp    0x14000c03c
   14000c005:	movsxd rax,DWORD PTR [r12+0xc]
   14000c00a:	lea    rbp,[r12+rax*8+0x10]
   14000c00f:	movsxd rax,DWORD PTR [r12+0x8]
   14000c014:	lea    r13,[r12+rax*8+0x10]
   14000c019:	cmp    r13,rbp
   14000c01c:	je     0x14000c032
   14000c01e:	xchg   ax,ax
   14000c020:	sub    rbp,0x8
   14000c024:	mov    rcx,rbp
   14000c027:	call   QWORD PTR [rip+0xf5fb]        # 0x14001b628
   14000c02d:	cmp    rbp,r13
   14000c030:	jne    0x14000c020
   14000c032:	mov    rcx,r12
   14000c035:	call   QWORD PTR [rip+0xf255]        # 0x14001b290
   14000c03b:	nop
   14000c03c:	lea    rcx,[rsp+0xa8]
   14000c044:	call   QWORD PTR [rip+0xf5d6]        # 0x14001b620
   14000c04a:	nop
   14000c04b:	lea    rcx,[rsp+0xa0]
   14000c053:	call   QWORD PTR [rip+0xf5c7]        # 0x14001b620
   14000c059:	nop
   14000c05a:	lea    rcx,[rsp+0x98]
   14000c062:	call   QWORD PTR [rip+0xf5b8]        # 0x14001b620
   14000c068:	jmp    0x14000c7e8
   14000c06d:	lea    rdx,[rip+0x1242c]        # 0x14001e4a0
   14000c074:	lea    rcx,[rsp+0x40]
   14000c079:	call   QWORD PTR [rip+0xf449]        # 0x14001b4c8
   14000c07f:	cmp    BYTE PTR [rsp+0xc8],0x0
   14000c087:	je     0x14000c09b
   14000c089:	lea    rdx,[rip+0x12460]        # 0x14001e4f0
   14000c090:	lea    rcx,[rsp+0x40]
   14000c095:	call   QWORD PTR [rip+0xf42d]        # 0x14001b4c8
   14000c09b:	cmp    BYTE PTR [rsp+0xd0],0x0
   14000c0a3:	je     0x14000c0b7
   14000c0a5:	lea    rdx,[rip+0x123e4]        # 0x14001e490
   14000c0ac:	lea    rcx,[rsp+0x40]
   14000c0b1:	call   QWORD PTR [rip+0xf411]        # 0x14001b4c8
   14000c0b7:	lea    rdx,[rip+0x12482]        # 0x14001e540
   14000c0be:	lea    rcx,[rsp+0x40]
   14000c0c3:	call   QWORD PTR [rip+0xf3ff]        # 0x14001b4c8
   14000c0c9:	lea    rdx,[rsp+0x1b8]
   14000c0d1:	lea    rcx,[rsp+0x90]
   14000c0d9:	call   0x140006bd0
   14000c0de:	or     DWORD PTR [rsp+0x30],0x10
   14000c0e3:	mov    rax,QWORD PTR [rax]
   14000c0e6:	cmp    DWORD PTR [rax+0x4],0x0
   14000c0ea:	je     0x14000c0fb
   14000c0ec:	cmp    DWORD PTR [rsp+0xc0],0x0
   14000c0f4:	jl     0x14000c0fb
   14000c0f6:	mov    bpl,0x1
   14000c0f9:	jmp    0x14000c0fe
   14000c0fb:	xor    bpl,bpl
   14000c0fe:	mov    eax,DWORD PTR [rsp+0x30]
   14000c102:	test   al,0x10
   14000c104:	je     0x14000c119
   14000c106:	and    DWORD PTR [rsp+0x30],0xffffffef
   14000c10b:	lea    rcx,[rsp+0x1b8]
   14000c113:	call   QWORD PTR [rip+0xf50f]        # 0x14001b628
   14000c119:	test   bpl,bpl
   14000c11c:	je     0x14000c254
   14000c122:	mov    rdx,QWORD PTR [rsp+0x278]
   14000c12a:	lea    rcx,[rsp+0x170]
   14000c132:	call   QWORD PTR [rip+0xf2a0]        # 0x14001b3d8
   14000c138:	nop
   14000c139:	lea    rdx,[rsp+0xe0]
   14000c141:	mov    rcx,rax
   14000c144:	call   QWORD PTR [rip+0xf35e]        # 0x14001b4a8
   14000c14a:	nop
   14000c14b:	lea    rcx,[rsp+0x170]
   14000c153:	call   QWORD PTR [rip+0xf267]        # 0x14001b3c0
   14000c159:	lea    rdx,[rsp+0x180]
   14000c161:	lea    rcx,[rsp+0x90]
   14000c169:	call   0x140006bd0
   14000c16e:	nop
   14000c16f:	mov    r8,rax
   14000c172:	lea    rdx,[rsp+0x1e0]
   14000c17a:	lea    rcx,[rsp+0xe0]
   14000c182:	call   QWORD PTR [rip+0xf1d0]        # 0x14001b358
   14000c188:	nop
   14000c189:	mov    ecx,0x2f
   14000c18e:	mov    WORD PTR [rsp+0x288],cx
   14000c196:	mov    edx,0x5c
   14000c19b:	mov    WORD PTR [rsp+0x80],dx
   14000c1a3:	lea    r9d,[rcx-0x2e]
   14000c1a7:	movzx  r8d,cx
   14000c1ab:	mov    rcx,rax
   14000c1ae:	call   QWORD PTR [rip+0xf2ec]        # 0x14001b4a0
   14000c1b4:	mov    rdx,rax
   14000c1b7:	lea    rcx,[rsp+0x100]
   14000c1bf:	call   QWORD PTR [rip+0xf16b]        # 0x14001b330
   14000c1c5:	nop
   14000c1c6:	lea    rcx,[rsp+0x1e0]
   14000c1ce:	call   QWORD PTR [rip+0xf454]        # 0x14001b628
   14000c1d4:	nop
   14000c1d5:	lea    rcx,[rsp+0x180]
   14000c1dd:	call   QWORD PTR [rip+0xf445]        # 0x14001b628
   14000c1e3:	lea    rdx,[rip+0x12286]        # 0x14001e470
   14000c1ea:	lea    rcx,[rsp+0x40]
   14000c1ef:	call   QWORD PTR [rip+0xf2d3]        # 0x14001b4c8
   14000c1f5:	mov    rcx,rax
   14000c1f8:	lea    rdx,[rsp+0x100]
   14000c200:	call   QWORD PTR [rip+0xf2b2]        # 0x14001b4b8
   14000c206:	mov    rcx,rax
   14000c209:	lea    rdx,[rip+0x12250]        # 0x14001e460
   14000c210:	call   QWORD PTR [rip+0xf2b2]        # 0x14001b4c8
   14000c216:	mov    rcx,rax
   14000c219:	mov    edx,DWORD PTR [rsp+0xc0]
   14000c220:	call   QWORD PTR [rip+0xf272]        # 0x14001b498
   14000c226:	mov    rcx,rax
   14000c229:	lea    rdx,[rip+0x12224]        # 0x14001e454
   14000c230:	call   QWORD PTR [rip+0xf292]        # 0x14001b4c8
   14000c236:	nop
   14000c237:	lea    rcx,[rsp+0x100]
   14000c23f:	call   QWORD PTR [rip+0xf3e3]        # 0x14001b628
   14000c245:	nop
   14000c246:	lea    rcx,[rsp+0xe0]
   14000c24e:	call   QWORD PTR [rip+0xf0fc]        # 0x14001b350
   14000c254:	lea    rcx,[rsp+0xa0]
   14000c25c:	call   QWORD PTR [rip+0xf0b6]        # 0x14001b318
   14000c262:	test   al,al
   14000c264:	je     0x14000c26a
   14000c266:	xor    eax,eax
   14000c268:	jmp    0x14000c278
   14000c26a:	lea    rcx,[rsp+0xa0]
   14000c272:	call   QWORD PTR [rip+0xefa0]        # 0x14001b218
   14000c278:	or     r8d,0xffffffff
   14000c27c:	mov    rdx,rax
   14000c27f:	lea    rcx,[rsp+0xf8]
   14000c287:	call   QWORD PTR [rip+0xf37b]        # 0x14001b608
   14000c28d:	nop
   14000c28e:	movzx  r8d,BYTE PTR [rsp+0xc8]
   14000c297:	lea    rdx,[rsp+0xf8]
   14000c29f:	lea    rcx,[rsp+0x1c0]
   14000c2a7:	call   0x140008830
   14000c2ac:	mov    rbp,rax
   14000c2af:	lea    rdx,[rip+0x1218a]        # 0x14001e440
   14000c2b6:	lea    rcx,[rsp+0x40]
   14000c2bb:	call   QWORD PTR [rip+0xf207]        # 0x14001b4c8
   14000c2c1:	mov    rcx,rax
   14000c2c4:	mov    rdx,rbp
   14000c2c7:	call   QWORD PTR [rip+0xf1eb]        # 0x14001b4b8
   14000c2cd:	mov    rcx,rax
   14000c2d0:	lea    rdx,[rip+0x12159]        # 0x14001e430
   14000c2d7:	call   QWORD PTR [rip+0xf1eb]        # 0x14001b4c8
   14000c2dd:	nop
   14000c2de:	lea    rcx,[rsp+0x1c0]
   14000c2e6:	call   QWORD PTR [rip+0xf33c]        # 0x14001b628
   14000c2ec:	nop
   14000c2ed:	lea    rcx,[rsp+0xf8]
   14000c2f5:	call   QWORD PTR [rip+0xf325]        # 0x14001b620
   14000c2fb:	lea    rcx,[rsp+0xa8]
   14000c303:	call   QWORD PTR [rip+0xf00f]        # 0x14001b318
   14000c309:	test   al,al
   14000c30b:	je     0x14000c311
   14000c30d:	xor    eax,eax
   14000c30f:	jmp    0x14000c31f
   14000c311:	lea    rcx,[rsp+0xa8]
   14000c319:	call   QWORD PTR [rip+0xeef9]        # 0x14001b218
   14000c31f:	or     r8d,0xffffffff
   14000c323:	mov    rdx,rax
   14000c326:	lea    rcx,[rsp+0x120]
   14000c32e:	call   QWORD PTR [rip+0xf2d4]        # 0x14001b608
   14000c334:	mov    rcx,QWORD PTR [rax]
   14000c337:	cmp    DWORD PTR [rcx+0x4],0x0
   14000c33b:	setne  bpl
   14000c33f:	lea    rcx,[rsp+0x120]
   14000c347:	call   QWORD PTR [rip+0xf2d3]        # 0x14001b620
   14000c34d:	test   bpl,bpl
   14000c350:	je     0x14000c3fd
   14000c356:	lea    rcx,[rsp+0xa8]
   14000c35e:	call   QWORD PTR [rip+0xefb4]        # 0x14001b318
   14000c364:	test   al,al
   14000c366:	je     0x14000c36c
   14000c368:	xor    eax,eax
   14000c36a:	jmp    0x14000c37a
   14000c36c:	lea    rcx,[rsp+0xa8]
   14000c374:	call   QWORD PTR [rip+0xee9e]        # 0x14001b218
   14000c37a:	or     r8d,0xffffffff
   14000c37e:	mov    rdx,rax
   14000c381:	lea    rcx,[rsp+0xf0]
   14000c389:	call   QWORD PTR [rip+0xf279]        # 0x14001b608
   14000c38f:	nop
   14000c390:	movzx  r8d,BYTE PTR [rsp+0xc8]
   14000c399:	lea    rdx,[rsp+0xf0]
   14000c3a1:	lea    rcx,[rsp+0x128]
   14000c3a9:	call   0x140008830
   14000c3ae:	mov    rbp,rax
   14000c3b1:	lea    rdx,[rip+0x12060]        # 0x14001e418
   14000c3b8:	lea    rcx,[rsp+0x40]
   14000c3bd:	call   QWORD PTR [rip+0xf105]        # 0x14001b4c8
   14000c3c3:	mov    rcx,rax
   14000c3c6:	mov    rdx,rbp
   14000c3c9:	call   QWORD PTR [rip+0xf0e9]        # 0x14001b4b8
   14000c3cf:	mov    rcx,rax
   14000c3d2:	lea    rdx,[rip+0x120d7]        # 0x14001e4b0
   14000c3d9:	call   QWORD PTR [rip+0xf0e9]        # 0x14001b4c8
   14000c3df:	nop
   14000c3e0:	lea    rcx,[rsp+0x128]
   14000c3e8:	call   QWORD PTR [rip+0xf23a]        # 0x14001b628
   14000c3ee:	nop
   14000c3ef:	lea    rcx,[rsp+0xf0]
   14000c3f7:	call   QWORD PTR [rip+0xf223]        # 0x14001b620
   14000c3fd:	lea    rdx,[rip+0x11ffc]        # 0x14001e400
   14000c404:	lea    rcx,[rsp+0x40]
   14000c409:	call   QWORD PTR [rip+0xf0b9]        # 0x14001b4c8
   14000c40f:	mov    r11d,DWORD PTR [rsp+0xcc]
   14000c417:	test   r11d,r11d
   14000c41a:	jne    0x14000c430
   14000c41c:	lea    rdx,[rip+0x11fc5]        # 0x14001e3e8
   14000c423:	lea    rcx,[rsp+0x40]
   14000c428:	call   QWORD PTR [rip+0xf09a]        # 0x14001b4c8
   14000c42e:	jmp    0x14000c448
   14000c430:	cmp    r11d,0x2
   14000c434:	jne    0x14000c448
   14000c436:	lea    rdx,[rip+0x11f93]        # 0x14001e3d0
   14000c43d:	lea    rcx,[rsp+0x40]
   14000c442:	call   QWORD PTR [rip+0xf080]        # 0x14001b4c8
   14000c448:	lea    rdx,[rip+0x11f7d]        # 0x14001e3cc
   14000c44f:	lea    rcx,[rsp+0x40]
   14000c454:	call   QWORD PTR [rip+0xf06e]        # 0x14001b4c8
   14000c45a:	cmp    BYTE PTR [rsp+0xd0],0x0
   14000c462:	je     0x14000c69d
   14000c468:	lea    rdx,[rip+0xff95]        # 0x14001c404
   14000c46f:	lea    rcx,[rsp+0x40]
   14000c474:	call   QWORD PTR [rip+0xf04e]        # 0x14001b4c8
   14000c47a:	lea    rdx,[rsi+0x18]
   14000c47e:	lea    rcx,[rsp+0x78]
   14000c483:	call   QWORD PTR [rip+0xefcf]        # 0x14001b458
   14000c489:	nop
   14000c48a:	lea    rcx,[rsp+0x78]
   14000c48f:	call   QWORD PTR [rip+0xefbb]        # 0x14001b450
   14000c495:	mov    r12d,eax
   14000c498:	mov    DWORD PTR [rsp+0x140],eax
   14000c49f:	mov    dl,0x5f
   14000c4a1:	lea    rcx,[rsp+0x70]
   14000c4a6:	call   QWORD PTR [rip+0xef64]        # 0x14001b410
   14000c4ac:	mov    r9d,0x1
   14000c4b2:	xor    r8d,r8d
   14000c4b5:	movzx  edx,WORD PTR [rax]
   14000c4b8:	lea    rcx,[rsi+0x18]
   14000c4bc:	call   QWORD PTR [rip+0xef86]        # 0x14001b448
   14000c4c2:	cmp    eax,0xffffffff
   14000c4c5:	je     0x14000c4dd
   14000c4c7:	lea    rcx,[rsp+0x78]
   14000c4cc:	call   QWORD PTR [rip+0xef6e]        # 0x14001b440
   14000c4d2:	mov    ebp,eax
   14000c4d4:	mov    DWORD PTR [rsp+0x84],eax
   14000c4db:	jmp    0x14000c4e6
   14000c4dd:	xor    ebp,ebp
   14000c4df:	mov    DWORD PTR [rsp+0x84],ebp
   14000c4e6:	lea    rcx,[rsp+0x78]
   14000c4eb:	call   QWORD PTR [rip+0xef47]        # 0x14001b438
   14000c4f1:	mov    r9d,ebp
   14000c4f4:	mov    r8d,r12d
   14000c4f7:	lea    rdx,[rsp+0x90]
   14000c4ff:	lea    rcx,[rsp+0x58]
   14000c504:	call   0x14000a5b0
   14000c509:	nop
   14000c50a:	xor    r12d,r12d
   14000c50d:	mov    rax,QWORD PTR [rsp+0x58]
   14000c512:	mov    ecx,DWORD PTR [rax+0xc]
   14000c515:	sub    ecx,DWORD PTR [rax+0x8]
   14000c518:	mov    DWORD PTR [rsp+0x50],ecx
   14000c51c:	mov    DWORD PTR [rsp+0x54],0x1
   14000c524:	lea    rax,[rsp+0x50]
   14000c529:	lea    rdx,[rsp+0x54]
   14000c52e:	cmp    ecx,0x1
   14000c531:	cmovle rax,rdx
   14000c535:	cmp    DWORD PTR [rax],r12d
   14000c538:	jle    0x14000c612
   14000c53e:	mov    DWORD PTR [rsp+0x54],0x1
   14000c546:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c550:	mov    r8d,r12d
   14000c553:	lea    rdx,[rsp+0x158]
   14000c55b:	lea    rcx,[rsp+0x58]
   14000c560:	call   0x140006c00
   14000c565:	nop
   14000c566:	lea    rdx,[rsp+0x148]
   14000c56e:	mov    rcx,rax
   14000c571:	call   QWORD PTR [rip+0xed51]        # 0x14001b2c8
   14000c577:	nop
   14000c578:	mov    rdx,rax
   14000c57b:	lea    rcx,[rsp+0x138]
   14000c583:	call   0x1400085a0
   14000c588:	mov    rbp,rax
   14000c58b:	lea    rdx,[rip+0x11e1e]        # 0x14001e3b0
   14000c592:	lea    rcx,[rsp+0x40]
   14000c597:	call   QWORD PTR [rip+0xef2b]        # 0x14001b4c8
   14000c59d:	mov    rcx,rax
   14000c5a0:	mov    rdx,rbp
   14000c5a3:	call   QWORD PTR [rip+0xef0f]        # 0x14001b4b8
   14000c5a9:	mov    rcx,rax
   14000c5ac:	lea    rdx,[rip+0x11ded]        # 0x14001e3a0
   14000c5b3:	call   QWORD PTR [rip+0xef0f]        # 0x14001b4c8
   14000c5b9:	nop
   14000c5ba:	lea    rcx,[rsp+0x138]
   14000c5c2:	call   QWORD PTR [rip+0xf060]        # 0x14001b628
   14000c5c8:	nop
   14000c5c9:	lea    rcx,[rsp+0x148]
   14000c5d1:	call   QWORD PTR [rip+0xf049]        # 0x14001b620
   14000c5d7:	nop
   14000c5d8:	lea    rcx,[rsp+0x158]
   14000c5e0:	call   QWORD PTR [rip+0xf042]        # 0x14001b628
   14000c5e6:	inc    r12d
   14000c5e9:	mov    rax,QWORD PTR [rsp+0x58]
   14000c5ee:	mov    ecx,DWORD PTR [rax+0xc]
   14000c5f1:	sub    ecx,DWORD PTR [rax+0x8]
   14000c5f4:	mov    DWORD PTR [rsp+0x50],ecx
   14000c5f8:	lea    rax,[rsp+0x50]
   14000c5fd:	lea    rdx,[rsp+0x54]
   14000c602:	cmp    ecx,0x1
   14000c605:	cmovle rax,rdx
   14000c609:	cmp    r12d,DWORD PTR [rax]
   14000c60c:	jl     0x14000c550
   14000c612:	lea    rdx,[rip+0x11d77]        # 0x14001e390
   14000c619:	lea    rcx,[rsp+0x40]
   14000c61e:	call   QWORD PTR [rip+0xeea4]        # 0x14001b4c8
   14000c624:	nop
   14000c625:	mov    r12,QWORD PTR [rsp+0x58]
   14000c62a:	mov    eax,DWORD PTR [r12]
   14000c62e:	test   eax,eax
   14000c630:	je     0x14000c65e
   14000c632:	cmp    eax,0xffffffff
   14000c635:	je     0x14000c711
   14000c63b:	lock add DWORD PTR [r12],0xffffffff
   14000c641:	setne  al
   14000c644:	test   al,al
   14000c646:	jne    0x14000c654
   14000c648:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c64d:	mov    r12,QWORD PTR [rsp+0x58]
   14000c652:	jmp    0x14000c65e
   14000c654:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c659:	jmp    0x14000c711
   14000c65e:	movsxd rax,DWORD PTR [r12+0xc]
   14000c663:	lea    rbp,[r12+rax*8+0x10]
   14000c668:	movsxd rax,DWORD PTR [r12+0x8]
   14000c66d:	lea    r13,[r12+rax*8+0x10]
   14000c672:	cmp    r13,rbp
   14000c675:	je     0x14000c692
   14000c677:	nop    WORD PTR [rax+rax*1+0x0]
   14000c680:	sub    rbp,0x8
   14000c684:	mov    rcx,rbp
   14000c687:	call   QWORD PTR [rip+0xef9b]        # 0x14001b628
   14000c68d:	cmp    rbp,r13
   14000c690:	jne    0x14000c680
   14000c692:	mov    rcx,r12
   14000c695:	call   QWORD PTR [rip+0xebf5]        # 0x14001b290
   14000c69b:	jmp    0x14000c711
   14000c69d:	lea    rdx,[rsp+0x188]
   14000c6a5:	lea    rcx,[rsp+0x90]
   14000c6ad:	call   0x140008c50
   14000c6b2:	nop
   14000c6b3:	lea    rdx,[rsp+0x178]
   14000c6bb:	mov    rcx,rax
   14000c6be:	call   QWORD PTR [rip+0xec04]        # 0x14001b2c8
   14000c6c4:	nop
   14000c6c5:	mov    rdx,rax
   14000c6c8:	lea    rcx,[rsp+0x168]
   14000c6d0:	call   0x1400085a0
   14000c6d5:	nop
   14000c6d6:	mov    rdx,rax
   14000c6d9:	lea    rcx,[rsp+0x40]
   14000c6de:	call   QWORD PTR [rip+0xedd4]        # 0x14001b4b8
   14000c6e4:	nop
   14000c6e5:	lea    rcx,[rsp+0x168]
   14000c6ed:	call   QWORD PTR [rip+0xef35]        # 0x14001b628
   14000c6f3:	nop
   14000c6f4:	lea    rcx,[rsp+0x178]
   14000c6fc:	call   QWORD PTR [rip+0xef1e]        # 0x14001b620
   14000c702:	nop
   14000c703:	lea    rcx,[rsp+0x188]
   14000c70b:	call   QWORD PTR [rip+0xef17]        # 0x14001b628
   14000c711:	lea    rdx,[rip+0x11c68]        # 0x14001e380
   14000c718:	lea    rcx,[rsp+0x40]
   14000c71d:	call   QWORD PTR [rip+0xeda5]        # 0x14001b4c8
   14000c723:	lea    rdx,[rip+0x11c46]        # 0x14001e370
   14000c72a:	lea    rcx,[rsp+0x40]
   14000c72f:	call   QWORD PTR [rip+0xed93]        # 0x14001b4c8
   14000c735:	nop
   14000c736:	lea    rcx,[rsp+0xb8]
   14000c73e:	call   QWORD PTR [rip+0xeee4]        # 0x14001b628
   14000c744:	nop
   14000c745:	mov    r12,QWORD PTR [rsp+0xb0]
   14000c74d:	mov    eax,DWORD PTR [r12]
   14000c751:	test   eax,eax
   14000c753:	je     0x14000c77d
   14000c755:	cmp    eax,0xffffffff
   14000c758:	je     0x14000c7bc
   14000c75a:	lock add DWORD PTR [r12],0xffffffff
   14000c760:	setne  al
   14000c763:	test   al,al
   14000c765:	jne    0x14000c776
   14000c767:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c76c:	mov    r12,QWORD PTR [rsp+0xb0]
   14000c774:	jmp    0x14000c77d
   14000c776:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c77b:	jmp    0x14000c7bc
   14000c77d:	movsxd rax,DWORD PTR [r12+0xc]
   14000c782:	lea    rbp,[r12+rax*8+0x10]
   14000c787:	movsxd rax,DWORD PTR [r12+0x8]
   14000c78c:	lea    r13,[r12+rax*8+0x10]
   14000c791:	cmp    r13,rbp
   14000c794:	je     0x14000c7b2
   14000c796:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c7a0:	sub    rbp,0x8
   14000c7a4:	mov    rcx,rbp
   14000c7a7:	call   QWORD PTR [rip+0xee7b]        # 0x14001b628
   14000c7ad:	cmp    rbp,r13
   14000c7b0:	jne    0x14000c7a0
   14000c7b2:	mov    rcx,r12
   14000c7b5:	call   QWORD PTR [rip+0xead5]        # 0x14001b290
   14000c7bb:	nop
   14000c7bc:	lea    rcx,[rsp+0xa8]
   14000c7c4:	call   QWORD PTR [rip+0xee56]        # 0x14001b620
   14000c7ca:	nop
   14000c7cb:	lea    rcx,[rsp+0xa0]
   14000c7d3:	call   QWORD PTR [rip+0xee47]        # 0x14001b620
   14000c7d9:	nop
   14000c7da:	lea    rcx,[rsp+0x98]
   14000c7e2:	call   QWORD PTR [rip+0xee38]        # 0x14001b620
   14000c7e8:	mov    rcx,rdi
   14000c7eb:	call   QWORD PTR [rip+0xeb37]        # 0x14001b328
   14000c7f1:	mov    rdi,rax
   14000c7f4:	jmp    0x14000bdb0
   14000c7f9:	lea    rdx,[rip+0x11b60]        # 0x14001e360
   14000c800:	lea    rcx,[rsp+0x40]
   14000c805:	call   QWORD PTR [rip+0xecbd]        # 0x14001b4c8
   14000c80b:	nop
   14000c80c:	lea    rcx,[rsp+0x68]
   14000c811:	call   QWORD PTR [rip+0xee09]        # 0x14001b620
   14000c817:	nop
   14000c818:	lea    rcx,[rsp+0x60]
   14000c81d:	call   QWORD PTR [rip+0xedfd]        # 0x14001b620
   14000c823:	nop
   14000c824:	mov    eax,DWORD PTR [rbx]
   14000c826:	test   eax,eax
   14000c828:	mov    rsi,QWORD PTR [rsp+0xe8]
   14000c830:	je     0x14000c84f
   14000c832:	cmp    eax,0xffffffff
   14000c835:	je     0x14000c933
   14000c83b:	lock add DWORD PTR [rbx],0xffffffff
   14000c83f:	setne  al
   14000c842:	test   al,al
   14000c844:	jne    0x14000c933
   14000c84a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c84f:	lea    r15,[rbx+0x10]
   14000c853:	mov    r14,QWORD PTR [r15]
   14000c856:	test   r14,r14
   14000c859:	je     0x14000c92a
   14000c85f:	lea    rbp,[r14+0x20]
   14000c863:	mov    QWORD PTR [rsp+0x280],rbp
   14000c86b:	lea    rcx,[rbp+0x28]
   14000c86f:	call   QWORD PTR [rip+0xedb3]        # 0x14001b628
   14000c875:	nop
   14000c876:	mov    rcx,QWORD PTR [rbp+0x20]
   14000c87a:	mov    eax,DWORD PTR [rcx]
   14000c87c:	test   eax,eax
   14000c87e:	je     0x14000c89e
   14000c880:	cmp    eax,0xffffffff
   14000c883:	je     0x14000c8dc
   14000c885:	lock add DWORD PTR [rcx],0xffffffff
   14000c889:	setne  al
   14000c88c:	test   al,al
   14000c88e:	jne    0x14000c897
   14000c890:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c895:	jmp    0x14000c89e
   14000c897:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c89c:	jmp    0x14000c8dc
   14000c89e:	mov    r13,QWORD PTR [rbp+0x20]
   14000c8a2:	movsxd rax,DWORD PTR [r13+0xc]
   14000c8a6:	lea    rdi,[r13+rax*8+0x10]
   14000c8ab:	movsxd rax,DWORD PTR [r13+0x8]
   14000c8af:	lea    r12,[r13+rax*8+0x10]
   14000c8b4:	cmp    r12,rdi
   14000c8b7:	je     0x14000c8d2
   14000c8b9:	nop    DWORD PTR [rax+0x0]
   14000c8c0:	sub    rdi,0x8
   14000c8c4:	mov    rcx,rdi
   14000c8c7:	call   QWORD PTR [rip+0xed5b]        # 0x14001b628
   14000c8cd:	cmp    rdi,r12
   14000c8d0:	jne    0x14000c8c0
   14000c8d2:	mov    rcx,r13
   14000c8d5:	call   QWORD PTR [rip+0xe9b5]        # 0x14001b290
   14000c8db:	nop
   14000c8dc:	lea    rcx,[rbp+0x18]
   14000c8e0:	call   QWORD PTR [rip+0xed3a]        # 0x14001b620
   14000c8e6:	nop
   14000c8e7:	lea    rcx,[rbp+0x10]
   14000c8eb:	call   QWORD PTR [rip+0xed2f]        # 0x14001b620
   14000c8f1:	nop
   14000c8f2:	lea    rcx,[rbp+0x8]
   14000c8f6:	call   QWORD PTR [rip+0xed24]        # 0x14001b620
   14000c8fc:	mov    rcx,QWORD PTR [r14+0x8]
   14000c900:	test   rcx,rcx
   14000c903:	je     0x14000c90a
   14000c905:	call   0x14000a180
   14000c90a:	mov    rcx,QWORD PTR [r14+0x10]
   14000c90e:	test   rcx,rcx
   14000c911:	je     0x14000c918
   14000c913:	call   0x14000a180
   14000c918:	mov    r8d,0x8
   14000c91e:	mov    rdx,QWORD PTR [r15]
   14000c921:	mov    rcx,rbx
   14000c924:	call   QWORD PTR [rip+0xe976]        # 0x14001b2a0
   14000c92a:	mov    rcx,rbx
   14000c92d:	call   QWORD PTR [rip+0xe965]        # 0x14001b298
   14000c933:	mov    rbp,QWORD PTR [rsp+0x270]
   14000c93b:	mov    rax,QWORD PTR [rbp+0x0]
   14000c93f:	add    rax,0x8
   14000c943:	cmp    rsi,rax
   14000c946:	jne    0x14000b8a0
   14000c94c:	lea    rdx,[rip+0x11a05]        # 0x14001e358
   14000c953:	lea    rcx,[rsp+0x40]
   14000c958:	call   QWORD PTR [rip+0xeb6a]        # 0x14001b4c8
   14000c95e:	lea    rcx,[rsp+0x108]
   14000c966:	call   QWORD PTR [rip+0xe904]        # 0x14001b270
   14000c96c:	nop
   14000c96d:	lea    rcx,[rsp+0x40]
   14000c972:	call   QWORD PTR [rip+0xea70]        # 0x14001b3e8
   14000c978:	nop
   14000c979:	lea    rcx,[rsp+0x108]
   14000c981:	call   QWORD PTR [rip+0xe8f1]        # 0x14001b278
   14000c987:	mov    al,0x1
   14000c989:	add    rsp,0x228
   14000c990:	pop    r15
   14000c992:	pop    r14
   14000c994:	pop    r13
   14000c996:	pop    r12
   14000c998:	pop    rdi
   14000c999:	pop    rsi
   14000c99a:	pop    rbp
   14000c99b:	pop    rbx
   14000c99c:	ret    
   14000c99d:	int3   
   14000c99e:	int3   
   14000c99f:	int3   
   14000c9a0:	mov    rax,rsp
   14000c9a3:	push   rdi
   14000c9a4:	push   r12
   14000c9a6:	push   r13
   14000c9a8:	push   r14
   14000c9aa:	push   r15
   14000c9ac:	sub    rsp,0x40
   14000c9b0:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000c9b9:	mov    QWORD PTR [rax+0x10],rbx
   14000c9bd:	mov    QWORD PTR [rax+0x18],rbp
   14000c9c1:	mov    QWORD PTR [rax+0x20],rsi
   14000c9c5:	mov    r14,rcx
   14000c9c8:	mov    rbx,QWORD PTR [rip+0xec09]        # 0x14001b5d8
   14000c9cf:	mov    QWORD PTR [rax+0x8],rbx
   14000c9d3:	mov    rax,QWORD PTR [rcx]
   14000c9d6:	mov    edx,DWORD PTR [rax]
   14000c9d8:	cmp    edx,0x1
   14000c9db:	je     0x14000c9e6
   14000c9dd:	test   edx,edx
   14000c9df:	je     0x14000c9e6
   14000c9e1:	call   0x14000a370
   14000c9e6:	mov    rdi,QWORD PTR [r14]
   14000c9e9:	cmp    QWORD PTR [rdi+0x10],0x0
   14000c9ee:	je     0x14000c9f6
   14000c9f0:	mov    rdi,QWORD PTR [rdi+0x20]
   14000c9f4:	jmp    0x14000c9fa
   14000c9f6:	add    rdi,0x8
   14000c9fa:	or     r12d,0xffffffff
   14000c9fe:	xchg   ax,ax
   14000ca00:	mov    rax,QWORD PTR [r14]
   14000ca03:	mov    ecx,DWORD PTR [rax]
   14000ca05:	cmp    ecx,0x1
   14000ca08:	je     0x14000ca16
   14000ca0a:	test   ecx,ecx
   14000ca0c:	je     0x14000ca16
   14000ca0e:	mov    rcx,r14
   14000ca11:	call   0x14000a370
   14000ca16:	mov    rax,QWORD PTR [r14]
   14000ca19:	add    rax,0x8
   14000ca1d:	cmp    rdi,rax
   14000ca20:	je     0x14000cb5e
   14000ca26:	cmp    DWORD PTR [rdi+0x54],0x2
   14000ca2a:	je     0x14000cb4d
   14000ca30:	mov    eax,DWORD PTR [rbx]
   14000ca32:	cmp    eax,0x1
   14000ca35:	je     0x14000cacc
   14000ca3b:	test   eax,eax
   14000ca3d:	je     0x14000cacc
   14000ca43:	call   QWORD PTR [rip+0xeb57]        # 0x14001b5a0
   14000ca49:	mov    rsi,rax
   14000ca4c:	lea    rbp,[rbx+0x10]
   14000ca50:	mov    rcx,QWORD PTR [rbp+0x0]
   14000ca54:	test   rcx,rcx
   14000ca57:	je     0x14000ca70
   14000ca59:	mov    rdx,rax
   14000ca5c:	call   0x140009f70
   14000ca61:	mov    QWORD PTR [rsi+0x10],rax
   14000ca65:	and    QWORD PTR [rax],0x3
   14000ca69:	lea    rcx,[rsi+0x8]
   14000ca6d:	or     QWORD PTR [rax],rcx
   14000ca70:	mov    eax,DWORD PTR [rbx]
   14000ca72:	test   eax,eax
   14000ca74:	je     0x14000ca91
   14000ca76:	cmp    eax,0xffffffff
   14000ca79:	je     0x14000cabb
   14000ca7b:	mov    eax,r12d
   14000ca7e:	lock xadd DWORD PTR [rbx],eax
   14000ca82:	add    eax,0xffffffff
   14000ca85:	setne  al
   14000ca88:	test   al,al
   14000ca8a:	jne    0x14000cabb
   14000ca8c:	mov    rbx,QWORD PTR [rsp+0x70]
   14000ca91:	mov    rcx,QWORD PTR [rbp+0x0]
   14000ca95:	test   rcx,rcx
   14000ca98:	je     0x14000cab2
   14000ca9a:	call   0x140004ab0
   14000ca9f:	mov    r8d,0x8
   14000caa5:	mov    rdx,QWORD PTR [rbp+0x0]
   14000caa9:	mov    rcx,rbx
   14000caac:	call   QWORD PTR [rip+0xe7ee]        # 0x14001b2a0
   14000cab2:	mov    rcx,rbx
   14000cab5:	call   QWORD PTR [rip+0xe7dd]        # 0x14001b298
   14000cabb:	mov    rbx,rsi
   14000cabe:	mov    QWORD PTR [rsp+0x70],rbx
   14000cac3:	mov    rcx,rsi
   14000cac6:	call   QWORD PTR [rip+0xe7e4]        # 0x14001b2b0
   14000cacc:	mov    rsi,QWORD PTR [rbx+0x10]
   14000cad0:	lea    r13,[rbx+0x8]
   14000cad4:	xor    r12d,r12d
   14000cad7:	mov    bpl,0x1
   14000cada:	test   rsi,rsi
   14000cadd:	je     0x14000cb31
   14000cadf:	nop
   14000cae0:	mov    r13,rsi
   14000cae3:	lea    rcx,[rsi+0x18]
   14000cae7:	lea    rdx,[rdi+0x18]
   14000caeb:	call   0x1400089d0
   14000caf0:	test   al,al
   14000caf2:	jne    0x14000cb00
   14000caf4:	mov    r12,rsi
   14000caf7:	mov    bpl,0x1
   14000cafa:	mov    rsi,QWORD PTR [rsi+0x8]
   14000cafe:	jmp    0x14000cb07
   14000cb00:	xor    bpl,bpl
   14000cb03:	mov    rsi,QWORD PTR [rsi+0x10]
   14000cb07:	test   rsi,rsi
   14000cb0a:	jne    0x14000cae0
   14000cb0c:	test   r12,r12
   14000cb0f:	je     0x14000cb31
   14000cb11:	lea    rdx,[r12+0x18]
   14000cb16:	lea    rcx,[rdi+0x18]
   14000cb1a:	call   0x1400089d0
   14000cb1f:	test   al,al
   14000cb21:	jne    0x14000cb31
   14000cb23:	mov    eax,DWORD PTR [rdi+0x60]
   14000cb26:	mov    DWORD PTR [r12+0x60],eax
   14000cb2b:	or     r12d,0xffffffff
   14000cb2f:	jmp    0x14000cb4d
   14000cb31:	mov    BYTE PTR [rsp+0x20],bpl
   14000cb36:	mov    r9,r13
   14000cb39:	lea    r8,[rdi+0x60]
   14000cb3d:	lea    rdx,[rdi+0x18]
   14000cb41:	mov    rcx,rbx
   14000cb44:	call   0x140009e30
   14000cb49:	or     r12d,0xffffffff
   14000cb4d:	mov    rcx,rdi
   14000cb50:	call   QWORD PTR [rip+0xe7d2]        # 0x14001b328
   14000cb56:	mov    rdi,rax
   14000cb59:	jmp    0x14000ca00
   14000cb5e:	lea    rdx,[rsp+0x70]
   14000cb63:	mov    rcx,r14
   14000cb66:	call   0x14000a6d0
   14000cb6b:	nop
   14000cb6c:	mov    eax,DWORD PTR [rbx]
   14000cb6e:	test   eax,eax
   14000cb70:	je     0x14000cb8c
   14000cb72:	cmp    eax,0xffffffff
   14000cb75:	je     0x14000cbb6
   14000cb77:	lock xadd DWORD PTR [rbx],r12d
   14000cb7c:	add    r12d,0xffffffff
   14000cb80:	setne  al
   14000cb83:	test   al,al
   14000cb85:	jne    0x14000cbb6
   14000cb87:	mov    rbx,QWORD PTR [rsp+0x70]
   14000cb8c:	mov    rcx,QWORD PTR [rbx+0x10]
   14000cb90:	test   rcx,rcx
   14000cb93:	je     0x14000cbad
   14000cb95:	call   0x140004ab0
   14000cb9a:	mov    r8d,0x8
   14000cba0:	mov    rdx,QWORD PTR [rbx+0x10]
   14000cba4:	mov    rcx,rbx
   14000cba7:	call   QWORD PTR [rip+0xe6f3]        # 0x14001b2a0
   14000cbad:	mov    rcx,rbx
   14000cbb0:	call   QWORD PTR [rip+0xe6e2]        # 0x14001b298
   14000cbb6:	lea    r11,[rsp+0x40]
   14000cbbb:	mov    rbx,QWORD PTR [r11+0x38]
   14000cbbf:	mov    rbp,QWORD PTR [r11+0x40]
   14000cbc3:	mov    rsi,QWORD PTR [r11+0x48]
   14000cbc7:	mov    rsp,r11
   14000cbca:	pop    r15
   14000cbcc:	pop    r14
   14000cbce:	pop    r13
   14000cbd0:	pop    r12
   14000cbd2:	pop    rdi
   14000cbd3:	ret    
   14000cbd4:	int3   
   14000cbd5:	int3   
   14000cbd6:	int3   
   14000cbd7:	int3   
   14000cbd8:	int3   
   14000cbd9:	int3   
   14000cbda:	int3   
   14000cbdb:	int3   
   14000cbdc:	int3   
   14000cbdd:	int3   
   14000cbde:	int3   
   14000cbdf:	int3   
   14000cbe0:	mov    rax,rsp
   14000cbe3:	mov    QWORD PTR [rax+0x8],rcx
   14000cbe7:	push   rbp
   14000cbe8:	push   rsi
   14000cbe9:	push   rdi
   14000cbea:	push   r12
   14000cbec:	push   r13
   14000cbee:	push   r14
   14000cbf0:	push   r15
   14000cbf2:	sub    rsp,0x40
   14000cbf6:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000cbff:	mov    QWORD PTR [rax+0x20],rbx
   14000cc03:	mov    rdi,rcx
   14000cc06:	mov    rbx,QWORD PTR [rip+0xe9cb]        # 0x14001b5d8
   14000cc0d:	mov    QWORD PTR [rax+0x10],rbx
   14000cc11:	mov    rax,QWORD PTR [rcx]
   14000cc14:	mov    edx,DWORD PTR [rax]
   14000cc16:	cmp    edx,0x1
   14000cc19:	je     0x14000cc24
   14000cc1b:	test   edx,edx
   14000cc1d:	je     0x14000cc24
   14000cc1f:	call   0x14000a370
   14000cc24:	mov    rsi,QWORD PTR [rdi]
   14000cc27:	cmp    QWORD PTR [rsi+0x10],0x0
   14000cc2c:	je     0x14000cc34
   14000cc2e:	mov    rsi,QWORD PTR [rsi+0x20]
   14000cc32:	jmp    0x14000cc38
   14000cc34:	add    rsi,0x8
   14000cc38:	or     r13d,0xffffffff
   14000cc3c:	nop    DWORD PTR [rax+0x0]
   14000cc40:	mov    rax,QWORD PTR [rdi]
   14000cc43:	mov    ecx,DWORD PTR [rax]
   14000cc45:	cmp    ecx,0x1
   14000cc48:	je     0x14000cc56
   14000cc4a:	test   ecx,ecx
   14000cc4c:	je     0x14000cc56
   14000cc4e:	mov    rcx,rdi
   14000cc51:	call   0x14000a370
   14000cc56:	mov    rax,QWORD PTR [rdi]
   14000cc59:	add    rax,0x8
   14000cc5d:	cmp    rsi,rax
   14000cc60:	je     0x14000cfc6
   14000cc66:	lea    rcx,[rsi+0x28]
   14000cc6a:	call   QWORD PTR [rip+0xe6a8]        # 0x14001b318
   14000cc70:	test   al,al
   14000cc72:	je     0x14000cc78
   14000cc74:	xor    eax,eax
   14000cc76:	jmp    0x14000cc82
   14000cc78:	lea    rcx,[rsi+0x28]
   14000cc7c:	call   QWORD PTR [rip+0xe596]        # 0x14001b218
   14000cc82:	mov    r8d,r13d
   14000cc85:	mov    rdx,rax
   14000cc88:	lea    rcx,[rsp+0x90]
   14000cc90:	call   QWORD PTR [rip+0xe972]        # 0x14001b608
   14000cc96:	nop
   14000cc97:	lea    rdx,[rip+0x1160a]        # 0x14001e2a8
   14000cc9e:	mov    rcx,rax
   14000cca1:	call   QWORD PTR [rip+0xe999]        # 0x14001b640
   14000cca7:	test   eax,eax
   14000cca9:	sete   dil
   14000ccad:	lea    rcx,[rsp+0x90]
   14000ccb5:	call   QWORD PTR [rip+0xe965]        # 0x14001b620
   14000ccbb:	test   dil,dil
   14000ccbe:	je     0x14000ce85
   14000ccc4:	mov    rcx,rsi
   14000ccc7:	call   QWORD PTR [rip+0xe65b]        # 0x14001b328
   14000cccd:	mov    rdi,rax
   14000ccd0:	mov    eax,DWORD PTR [rbx]
   14000ccd2:	cmp    eax,0x1
   14000ccd5:	je     0x14000cd72
   14000ccdb:	test   eax,eax
   14000ccdd:	je     0x14000cd72
   14000cce3:	call   QWORD PTR [rip+0xe8b7]        # 0x14001b5a0
   14000cce9:	mov    rbp,rax
   14000ccec:	lea    r12,[rbx+0x10]
   14000ccf0:	mov    rcx,QWORD PTR [r12]
   14000ccf4:	test   rcx,rcx
   14000ccf7:	je     0x14000cd10
   14000ccf9:	mov    rdx,rax
   14000ccfc:	call   0x140009f70
   14000cd01:	mov    QWORD PTR [rbp+0x10],rax
   14000cd05:	and    QWORD PTR [rax],0x3
   14000cd09:	lea    rcx,[rbp+0x8]
   14000cd0d:	or     QWORD PTR [rax],rcx
   14000cd10:	mov    eax,DWORD PTR [rbx]
   14000cd12:	test   eax,eax
   14000cd14:	je     0x14000cd34
   14000cd16:	cmp    eax,0xffffffff
   14000cd19:	je     0x14000cd5e
   14000cd1b:	mov    eax,r13d
   14000cd1e:	lock xadd DWORD PTR [rbx],eax
   14000cd22:	add    eax,0xffffffff
   14000cd25:	setne  al
   14000cd28:	test   al,al
   14000cd2a:	jne    0x14000cd5e
   14000cd2c:	mov    rbx,QWORD PTR [rsp+0x88]
   14000cd34:	mov    rcx,QWORD PTR [r12]
   14000cd38:	test   rcx,rcx
   14000cd3b:	je     0x14000cd55
   14000cd3d:	call   0x140004ab0
   14000cd42:	mov    r8d,0x8
   14000cd48:	mov    rdx,QWORD PTR [r12]
   14000cd4c:	mov    rcx,rbx
   14000cd4f:	call   QWORD PTR [rip+0xe54b]        # 0x14001b2a0
   14000cd55:	mov    rcx,rbx
   14000cd58:	call   QWORD PTR [rip+0xe53a]        # 0x14001b298
   14000cd5e:	mov    rbx,rbp
   14000cd61:	mov    QWORD PTR [rsp+0x88],rbx
   14000cd69:	mov    rcx,rbp
   14000cd6c:	call   QWORD PTR [rip+0xe53e]        # 0x14001b2b0
   14000cd72:	lea    rax,[rbx+0x8]
   14000cd76:	cmp    rdi,rax
   14000cd79:	je     0x14000cfad
   14000cd7f:	lea    rcx,[rdi+0x20]
   14000cd83:	call   QWORD PTR [rip+0xe58f]        # 0x14001b318
   14000cd89:	test   al,al
   14000cd8b:	je     0x14000cd91
   14000cd8d:	xor    edi,edi
   14000cd8f:	jmp    0x14000cd9e
   14000cd91:	lea    rcx,[rdi+0x20]
   14000cd95:	call   QWORD PTR [rip+0xe47d]        # 0x14001b218
   14000cd9b:	mov    rdi,rax
   14000cd9e:	lea    rbp,[rsi+0x20]
   14000cda2:	mov    rcx,rbp
   14000cda5:	call   QWORD PTR [rip+0xe56d]        # 0x14001b318
   14000cdab:	test   al,al
   14000cdad:	je     0x14000cdb3
   14000cdaf:	xor    eax,eax
   14000cdb1:	jmp    0x14000cdbc
   14000cdb3:	mov    rcx,rbp
   14000cdb6:	call   QWORD PTR [rip+0xe45c]        # 0x14001b218
   14000cdbc:	mov    rdx,rdi
   14000cdbf:	mov    rcx,rax
   14000cdc2:	call   QWORD PTR [rip+0xe7d0]        # 0x14001b598
   14000cdc8:	test   eax,eax
   14000cdca:	jne    0x14000cfad
   14000cdd0:	mov    eax,DWORD PTR [rbx]
   14000cdd2:	cmp    eax,0x1
   14000cdd5:	je     0x14000cdf0
   14000cdd7:	test   eax,eax
   14000cdd9:	je     0x14000cdf0
   14000cddb:	lea    rcx,[rsp+0x88]
   14000cde3:	call   0x14000a370
   14000cde8:	mov    rbx,QWORD PTR [rsp+0x88]
   14000cdf0:	mov    rdi,QWORD PTR [rbx+0x10]
   14000cdf4:	lea    r13,[rbx+0x8]
   14000cdf8:	xor    r12d,r12d
   14000cdfb:	mov    bpl,0x1
   14000cdfe:	test   rdi,rdi
   14000ce01:	je     0x14000ce64
   14000ce03:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000ce10:	mov    r13,rdi
   14000ce13:	lea    rcx,[rdi+0x18]
   14000ce17:	lea    rdx,[rsi+0x18]
   14000ce1b:	call   0x1400089d0
   14000ce20:	test   al,al
   14000ce22:	jne    0x14000ce30
   14000ce24:	mov    r12,rdi
   14000ce27:	mov    bpl,0x1
   14000ce2a:	mov    rdi,QWORD PTR [rdi+0x8]
   14000ce2e:	jmp    0x14000ce37
   14000ce30:	xor    bpl,bpl
   14000ce33:	mov    rdi,QWORD PTR [rdi+0x10]
   14000ce37:	test   rdi,rdi
   14000ce3a:	jne    0x14000ce10
   14000ce3c:	test   r12,r12
   14000ce3f:	je     0x14000ce64
   14000ce41:	lea    rdx,[r12+0x18]
   14000ce46:	lea    rcx,[rsi+0x18]
   14000ce4a:	call   0x1400089d0
   14000ce4f:	test   al,al
   14000ce51:	jne    0x14000ce64
   14000ce53:	mov    eax,DWORD PTR [rsi+0x60]
   14000ce56:	mov    DWORD PTR [r12+0x60],eax
   14000ce5b:	or     r13d,0xffffffff
   14000ce5f:	jmp    0x14000cfad
   14000ce64:	mov    BYTE PTR [rsp+0x20],bpl
   14000ce69:	mov    r9,r13
   14000ce6c:	lea    r8,[rsi+0x60]
   14000ce70:	lea    rdx,[rsi+0x18]
   14000ce74:	mov    rcx,rbx
   14000ce77:	call   0x140009e30
   14000ce7c:	or     r13d,0xffffffff
   14000ce80:	jmp    0x14000cfad
   14000ce85:	mov    eax,DWORD PTR [rbx]
   14000ce87:	cmp    eax,0x1
   14000ce8a:	je     0x14000cf27
   14000ce90:	test   eax,eax
   14000ce92:	je     0x14000cf27
   14000ce98:	call   QWORD PTR [rip+0xe702]        # 0x14001b5a0
   14000ce9e:	mov    rdi,rax
   14000cea1:	lea    rbp,[rbx+0x10]
   14000cea5:	mov    rcx,QWORD PTR [rbp+0x0]
   14000cea9:	test   rcx,rcx
   14000ceac:	je     0x14000cec5
   14000ceae:	mov    rdx,rax
   14000ceb1:	call   0x140009f70
   14000ceb6:	mov    QWORD PTR [rdi+0x10],rax
   14000ceba:	and    QWORD PTR [rax],0x3
   14000cebe:	lea    rcx,[rdi+0x8]
   14000cec2:	or     QWORD PTR [rax],rcx
   14000cec5:	mov    eax,DWORD PTR [rbx]
   14000cec7:	test   eax,eax
   14000cec9:	je     0x14000cee9
   14000cecb:	cmp    eax,0xffffffff
   14000cece:	je     0x14000cf13
   14000ced0:	mov    eax,r13d
   14000ced3:	lock xadd DWORD PTR [rbx],eax
   14000ced7:	add    eax,0xffffffff
   14000ceda:	setne  al
   14000cedd:	test   al,al
   14000cedf:	jne    0x14000cf13
   14000cee1:	mov    rbx,QWORD PTR [rsp+0x88]
   14000cee9:	mov    rcx,QWORD PTR [rbp+0x0]
   14000ceed:	test   rcx,rcx
   14000cef0:	je     0x14000cf0a
   14000cef2:	call   0x140004ab0
   14000cef7:	mov    r8d,0x8
   14000cefd:	mov    rdx,QWORD PTR [rbp+0x0]
   14000cf01:	mov    rcx,rbx
   14000cf04:	call   QWORD PTR [rip+0xe396]        # 0x14001b2a0
   14000cf0a:	mov    rcx,rbx
   14000cf0d:	call   QWORD PTR [rip+0xe385]        # 0x14001b298
   14000cf13:	mov    rbx,rdi
   14000cf16:	mov    QWORD PTR [rsp+0x88],rbx
   14000cf1e:	mov    rcx,rdi
   14000cf21:	call   QWORD PTR [rip+0xe389]        # 0x14001b2b0
   14000cf27:	mov    rdi,QWORD PTR [rbx+0x10]
   14000cf2b:	lea    r13,[rbx+0x8]
   14000cf2f:	xor    r12d,r12d
   14000cf32:	mov    bpl,0x1
   14000cf35:	test   rdi,rdi
   14000cf38:	je     0x14000cf91
   14000cf3a:	nop    WORD PTR [rax+rax*1+0x0]
   14000cf40:	mov    r13,rdi
   14000cf43:	lea    rcx,[rdi+0x18]
   14000cf47:	lea    rdx,[rsi+0x18]
   14000cf4b:	call   0x1400089d0
   14000cf50:	test   al,al
   14000cf52:	jne    0x14000cf60
   14000cf54:	mov    r12,rdi
   14000cf57:	mov    bpl,0x1
   14000cf5a:	mov    rdi,QWORD PTR [rdi+0x8]
   14000cf5e:	jmp    0x14000cf67
   14000cf60:	xor    bpl,bpl
   14000cf63:	mov    rdi,QWORD PTR [rdi+0x10]
   14000cf67:	test   rdi,rdi
   14000cf6a:	jne    0x14000cf40
   14000cf6c:	test   r12,r12
   14000cf6f:	je     0x14000cf91
   14000cf71:	lea    rdx,[r12+0x18]
   14000cf76:	lea    rcx,[rsi+0x18]
   14000cf7a:	call   0x1400089d0
   14000cf7f:	test   al,al
   14000cf81:	jne    0x14000cf91
   14000cf83:	mov    eax,DWORD PTR [rsi+0x60]
   14000cf86:	mov    DWORD PTR [r12+0x60],eax
   14000cf8b:	or     r13d,0xffffffff
   14000cf8f:	jmp    0x14000cfad
   14000cf91:	mov    BYTE PTR [rsp+0x20],bpl
   14000cf96:	mov    r9,r13
   14000cf99:	lea    r8,[rsi+0x60]
   14000cf9d:	lea    rdx,[rsi+0x18]
   14000cfa1:	mov    rcx,rbx
   14000cfa4:	call   0x140009e30
   14000cfa9:	or     r13d,0xffffffff
   14000cfad:	mov    rcx,rsi
   14000cfb0:	call   QWORD PTR [rip+0xe372]        # 0x14001b328
   14000cfb6:	mov    rsi,rax
   14000cfb9:	mov    rdi,QWORD PTR [rsp+0x80]
   14000cfc1:	jmp    0x14000cc40
   14000cfc6:	lea    rdx,[rsp+0x88]
   14000cfce:	mov    rcx,rdi
   14000cfd1:	call   0x14000a6d0
   14000cfd6:	nop
   14000cfd7:	mov    eax,DWORD PTR [rbx]
   14000cfd9:	test   eax,eax
   14000cfdb:	je     0x14000cffa
   14000cfdd:	cmp    eax,0xffffffff
   14000cfe0:	je     0x14000d024
   14000cfe2:	lock xadd DWORD PTR [rbx],r13d
   14000cfe7:	add    r13d,0xffffffff
   14000cfeb:	setne  al
   14000cfee:	test   al,al
   14000cff0:	jne    0x14000d024
   14000cff2:	mov    rbx,QWORD PTR [rsp+0x88]
   14000cffa:	mov    rcx,QWORD PTR [rbx+0x10]
   14000cffe:	test   rcx,rcx
   14000d001:	je     0x14000d01b
   14000d003:	call   0x140004ab0
   14000d008:	mov    r8d,0x8
   14000d00e:	mov    rdx,QWORD PTR [rbx+0x10]
   14000d012:	mov    rcx,rbx
   14000d015:	call   QWORD PTR [rip+0xe285]        # 0x14001b2a0
   14000d01b:	mov    rcx,rbx
   14000d01e:	call   QWORD PTR [rip+0xe274]        # 0x14001b298
   14000d024:	mov    rbx,QWORD PTR [rsp+0x98]
   14000d02c:	add    rsp,0x40
   14000d030:	pop    r15
   14000d032:	pop    r14
   14000d034:	pop    r13
   14000d036:	pop    r12
   14000d038:	pop    rdi
   14000d039:	pop    rsi
   14000d03a:	pop    rbp
   14000d03b:	ret    
   14000d03c:	int3   
   14000d03d:	int3   
   14000d03e:	int3   
   14000d03f:	int3   
   14000d040:	mov    QWORD PTR [rsp+0x10],rdx
   14000d045:	push   rbx
   14000d046:	push   rbp
   14000d047:	push   rsi
   14000d048:	push   rdi
   14000d049:	push   r12
   14000d04b:	push   r13
   14000d04d:	push   r14
   14000d04f:	push   r15
   14000d051:	sub    rsp,0x98
   14000d058:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000d061:	mov    rbp,rdx
   14000d064:	mov    r14,rcx
   14000d067:	mov    rbx,QWORD PTR [rip+0xe56a]        # 0x14001b5d8
   14000d06e:	mov    QWORD PTR [rsp+0xe0],rbx
   14000d076:	mov    rax,QWORD PTR [rcx]
   14000d079:	mov    r8d,DWORD PTR [rax]
   14000d07c:	cmp    r8d,0x1
   14000d080:	je     0x14000d08c
   14000d082:	test   r8d,r8d
   14000d085:	je     0x14000d08c
   14000d087:	call   0x14000a370
   14000d08c:	mov    rdi,QWORD PTR [r14]
   14000d08f:	cmp    QWORD PTR [rdi+0x10],0x0
   14000d094:	je     0x14000d09c
   14000d096:	mov    rdi,QWORD PTR [rdi+0x20]
   14000d09a:	jmp    0x14000d0a0
   14000d09c:	add    rdi,0x8
   14000d0a0:	or     r12d,0xffffffff
   14000d0a4:	mov    rax,QWORD PTR [r14]
   14000d0a7:	mov    ecx,DWORD PTR [rax]
   14000d0a9:	cmp    ecx,0x1
   14000d0ac:	je     0x14000d0ba
   14000d0ae:	test   ecx,ecx
   14000d0b0:	je     0x14000d0ba
   14000d0b2:	mov    rcx,r14
   14000d0b5:	call   0x14000a370
   14000d0ba:	mov    rax,QWORD PTR [r14]
   14000d0bd:	add    rax,0x8
   14000d0c1:	cmp    rdi,rax
   14000d0c4:	je     0x14000d381
   14000d0ca:	lea    rdx,[rdi+0x18]
   14000d0ce:	lea    rcx,[rsp+0x40]
   14000d0d3:	call   0x140013b80
   14000d0d8:	movzx  r11d,BYTE PTR [rdi+0x50]
   14000d0dd:	mov    BYTE PTR [rsp+0x78],r11b
   14000d0e2:	mov    eax,DWORD PTR [rdi+0x54]
   14000d0e5:	mov    DWORD PTR [rsp+0x7c],eax
   14000d0e9:	movzx  eax,BYTE PTR [rdi+0x58]
   14000d0ed:	mov    BYTE PTR [rsp+0x80],al
   14000d0f4:	lea    rdx,[rsp+0xf0]
   14000d0fc:	lea    rcx,[rdi+0x18]
   14000d100:	call   0x140006bd0
   14000d105:	nop
   14000d106:	lea    rdx,[rsp+0xf0]
   14000d10e:	lea    rcx,[rsp+0xf8]
   14000d116:	call   QWORD PTR [rip+0xe2bc]        # 0x14001b3d8
   14000d11c:	nop
   14000d11d:	lea    rcx,[rsp+0xf8]
   14000d125:	call   QWORD PTR [rip+0xe3ad]        # 0x14001b4d8
   14000d12b:	test   al,al
   14000d12d:	je     0x14000d161
   14000d12f:	lea    r8,[rsp+0xf0]
   14000d137:	lea    rdx,[rsp+0x30]
   14000d13c:	mov    rcx,rbp
   14000d13f:	call   QWORD PTR [rip+0xe253]        # 0x14001b398
   14000d145:	mov    rdx,rax
   14000d148:	lea    rcx,[rsp+0xf0]
   14000d150:	call   QWORD PTR [rip+0xe182]        # 0x14001b2d8
   14000d156:	lea    rcx,[rsp+0x30]
   14000d15b:	call   QWORD PTR [rip+0xe4c7]        # 0x14001b628
   14000d161:	lea    rdx,[rsp+0xf0]
   14000d169:	lea    rcx,[rsp+0x68]
   14000d16e:	call   QWORD PTR [rip+0xe164]        # 0x14001b2d8
   14000d174:	mov    eax,DWORD PTR [rbx]
   14000d176:	cmp    eax,0x1
   14000d179:	je     0x14000d216
   14000d17f:	test   eax,eax
   14000d181:	je     0x14000d216
   14000d187:	call   QWORD PTR [rip+0xe413]        # 0x14001b5a0
   14000d18d:	mov    rsi,rax
   14000d190:	lea    rbp,[rbx+0x10]
   14000d194:	mov    rcx,QWORD PTR [rbp+0x0]
   14000d198:	test   rcx,rcx
   14000d19b:	je     0x14000d1b4
   14000d19d:	mov    rdx,rax
   14000d1a0:	call   0x140009f70
   14000d1a5:	mov    QWORD PTR [rsi+0x10],rax
   14000d1a9:	and    QWORD PTR [rax],0x3
   14000d1ad:	lea    rcx,[rsi+0x8]
   14000d1b1:	or     QWORD PTR [rax],rcx
   14000d1b4:	mov    eax,DWORD PTR [rbx]
   14000d1b6:	test   eax,eax
   14000d1b8:	je     0x14000d1d8
   14000d1ba:	cmp    eax,0xffffffff
   14000d1bd:	je     0x14000d202
   14000d1bf:	mov    eax,r12d
   14000d1c2:	lock xadd DWORD PTR [rbx],eax
   14000d1c6:	add    eax,0xffffffff
   14000d1c9:	setne  al
   14000d1cc:	test   al,al
   14000d1ce:	jne    0x14000d202
   14000d1d0:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000d1d8:	mov    rcx,QWORD PTR [rbp+0x0]
   14000d1dc:	test   rcx,rcx
   14000d1df:	je     0x14000d1f9
   14000d1e1:	call   0x140004ab0
   14000d1e6:	mov    r8d,0x8
   14000d1ec:	mov    rdx,QWORD PTR [rbp+0x0]
   14000d1f0:	mov    rcx,rbx
   14000d1f3:	call   QWORD PTR [rip+0xe0a7]        # 0x14001b2a0
   14000d1f9:	mov    rcx,rbx
   14000d1fc:	call   QWORD PTR [rip+0xe096]        # 0x14001b298
   14000d202:	mov    rbx,rsi
   14000d205:	mov    QWORD PTR [rsp+0xe0],rbx
   14000d20d:	mov    rcx,rsi
   14000d210:	call   QWORD PTR [rip+0xe09a]        # 0x14001b2b0
   14000d216:	mov    rsi,QWORD PTR [rbx+0x10]
   14000d21a:	lea    r13,[rbx+0x8]
   14000d21e:	xor    r12d,r12d
   14000d221:	mov    bpl,0x1
   14000d224:	test   rsi,rsi
   14000d227:	je     0x14000d27f
   14000d229:	nop    DWORD PTR [rax+0x0]
   14000d230:	mov    r13,rsi
   14000d233:	lea    rcx,[rsi+0x18]
   14000d237:	lea    rdx,[rsp+0x40]
   14000d23c:	call   0x1400089d0
   14000d241:	test   al,al
   14000d243:	jne    0x14000d251
   14000d245:	mov    r12,rsi
   14000d248:	mov    bpl,0x1
   14000d24b:	mov    rsi,QWORD PTR [rsi+0x8]
   14000d24f:	jmp    0x14000d258
   14000d251:	xor    bpl,bpl
   14000d254:	mov    rsi,QWORD PTR [rsi+0x10]
   14000d258:	test   rsi,rsi
   14000d25b:	jne    0x14000d230
   14000d25d:	test   r12,r12
   14000d260:	je     0x14000d27f
   14000d262:	lea    rdx,[r12+0x18]
   14000d267:	lea    rcx,[rsp+0x40]
   14000d26c:	call   0x1400089d0
   14000d271:	test   al,al
   14000d273:	jne    0x14000d27f
   14000d275:	mov    eax,DWORD PTR [rdi+0x60]
   14000d278:	mov    DWORD PTR [r12+0x60],eax
   14000d27d:	jmp    0x14000d299
   14000d27f:	mov    BYTE PTR [rsp+0x20],bpl
   14000d284:	mov    r9,r13
   14000d287:	lea    r8,[rdi+0x60]
   14000d28b:	lea    rdx,[rsp+0x40]
   14000d290:	mov    rcx,rbx
   14000d293:	call   0x140009e30
   14000d298:	nop
   14000d299:	lea    rcx,[rsp+0xf8]
   14000d2a1:	call   QWORD PTR [rip+0xe119]        # 0x14001b3c0
   14000d2a7:	nop
   14000d2a8:	lea    rcx,[rsp+0xf0]
   14000d2b0:	call   QWORD PTR [rip+0xe372]        # 0x14001b628
   14000d2b6:	nop
   14000d2b7:	lea    rcx,[rsp+0x68]
   14000d2bc:	call   QWORD PTR [rip+0xe366]        # 0x14001b628
   14000d2c2:	nop
   14000d2c3:	mov    rbp,QWORD PTR [rsp+0x60]
   14000d2c8:	mov    eax,DWORD PTR [rbp+0x0]
   14000d2cb:	test   eax,eax
   14000d2cd:	je     0x14000d2fd
   14000d2cf:	cmp    eax,0xffffffff
   14000d2d2:	je     0x14000d341
   14000d2d4:	or     r12d,0xffffffff
   14000d2d8:	lock add DWORD PTR [rbp+0x0],r12d
   14000d2dd:	setne  al
   14000d2e0:	test   al,al
   14000d2e2:	jne    0x14000d2f3
   14000d2e4:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000d2ec:	mov    rbp,QWORD PTR [rsp+0x60]
   14000d2f1:	jmp    0x14000d2fd
   14000d2f3:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000d2fb:	jmp    0x14000d345
   14000d2fd:	movsxd rax,DWORD PTR [rbp+0xc]
   14000d301:	lea    rsi,[rbp+rax*8+0x10]
   14000d306:	movsxd rax,DWORD PTR [rbp+0x8]
   14000d30a:	lea    r12,[rbp+rax*8+0x10]
   14000d30f:	cmp    r12,rsi
   14000d312:	je     0x14000d332
   14000d314:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000d320:	sub    rsi,0x8
   14000d324:	mov    rcx,rsi
   14000d327:	call   QWORD PTR [rip+0xe2fb]        # 0x14001b628
   14000d32d:	cmp    rsi,r12
   14000d330:	jne    0x14000d320
   14000d332:	mov    rcx,rbp
   14000d335:	call   QWORD PTR [rip+0xdf55]        # 0x14001b290
   14000d33b:	or     r12d,0xffffffff
   14000d33f:	jmp    0x14000d345
   14000d341:	or     r12d,0xffffffff
   14000d345:	lea    rcx,[rsp+0x58]
   14000d34a:	call   QWORD PTR [rip+0xe2d0]        # 0x14001b620
   14000d350:	nop
   14000d351:	lea    rcx,[rsp+0x50]
   14000d356:	call   QWORD PTR [rip+0xe2c4]        # 0x14001b620
   14000d35c:	nop
   14000d35d:	lea    rcx,[rsp+0x48]
   14000d362:	call   QWORD PTR [rip+0xe2b8]        # 0x14001b620
   14000d368:	mov    rcx,rdi
   14000d36b:	call   QWORD PTR [rip+0xdfb7]        # 0x14001b328
   14000d371:	mov    rdi,rax
   14000d374:	mov    rbp,QWORD PTR [rsp+0xe8]
   14000d37c:	jmp    0x14000d0a4
   14000d381:	lea    rdx,[rsp+0xe0]
   14000d389:	mov    rcx,r14
   14000d38c:	call   0x14000a6d0
   14000d391:	nop
   14000d392:	mov    eax,DWORD PTR [rbx]
   14000d394:	test   eax,eax
   14000d396:	je     0x14000d3bd
   14000d398:	cmp    eax,0xffffffff
   14000d39b:	je     0x14000d43f
   14000d3a1:	lock xadd DWORD PTR [rbx],r12d
   14000d3a6:	add    r12d,0xffffffff
   14000d3aa:	setne  al
   14000d3ad:	test   al,al
   14000d3af:	jne    0x14000d43f
   14000d3b5:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000d3bd:	mov    rsi,QWORD PTR [rbx+0x10]
   14000d3c1:	test   rsi,rsi
   14000d3c4:	je     0x14000d436
   14000d3c6:	lea    rdi,[rsi+0x18]
   14000d3ca:	mov    QWORD PTR [rsp+0xe0],rdi
   14000d3d2:	lea    rcx,[rdi+0x28]
   14000d3d6:	call   QWORD PTR [rip+0xe24c]        # 0x14001b628
   14000d3dc:	nop
   14000d3dd:	lea    rcx,[rdi+0x20]
   14000d3e1:	call   0x140002880
   14000d3e6:	nop
   14000d3e7:	lea    rcx,[rdi+0x18]
   14000d3eb:	call   QWORD PTR [rip+0xe22f]        # 0x14001b620
   14000d3f1:	nop
   14000d3f2:	lea    rcx,[rdi+0x10]
   14000d3f6:	call   QWORD PTR [rip+0xe224]        # 0x14001b620
   14000d3fc:	nop
   14000d3fd:	lea    rcx,[rdi+0x8]
   14000d401:	call   QWORD PTR [rip+0xe219]        # 0x14001b620
   14000d407:	mov    rcx,QWORD PTR [rsi+0x8]
   14000d40b:	test   rcx,rcx
   14000d40e:	je     0x14000d415
   14000d410:	call   0x140004ab0
   14000d415:	mov    rcx,QWORD PTR [rsi+0x10]
   14000d419:	test   rcx,rcx
   14000d41c:	je     0x14000d423
   14000d41e:	call   0x140004ab0
   14000d423:	mov    r8d,0x8
   14000d429:	mov    rdx,QWORD PTR [rbx+0x10]
   14000d42d:	mov    rcx,rbx
   14000d430:	call   QWORD PTR [rip+0xde6a]        # 0x14001b2a0
   14000d436:	mov    rcx,rbx
   14000d439:	call   QWORD PTR [rip+0xde59]        # 0x14001b298
   14000d43f:	add    rsp,0x98
   14000d446:	pop    r15
   14000d448:	pop    r14
   14000d44a:	pop    r13
   14000d44c:	pop    r12
   14000d44e:	pop    rdi
   14000d44f:	pop    rsi
   14000d450:	pop    rbp
   14000d451:	pop    rbx
   14000d452:	ret    
   14000d453:	int3   
   14000d454:	int3   
   14000d455:	int3   
   14000d456:	int3   
   14000d457:	int3   
   14000d458:	int3   
   14000d459:	int3   
   14000d45a:	int3   
   14000d45b:	int3   
   14000d45c:	int3   
   14000d45d:	int3   
   14000d45e:	int3   
   14000d45f:	int3   
   14000d460:	rex push rbp
   14000d462:	push   rsi
   14000d463:	push   rdi
   14000d464:	sub    rsp,0x60
   14000d468:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d471:	mov    QWORD PTR [rsp+0x80],rbx
   14000d479:	mov    rbp,rdx
   14000d47c:	mov    rsi,rcx
   14000d47f:	lea    rcx,[rsp+0x38]
   14000d484:	call   QWORD PTR [rip+0xddfe]        # 0x14001b288
   14000d48a:	nop
   14000d48b:	mov    edx,0x1
   14000d490:	lea    rcx,[rsp+0x38]
   14000d495:	call   QWORD PTR [rip+0xdde5]        # 0x14001b280
   14000d49b:	test   al,al
   14000d49d:	jne    0x14000d4b1
   14000d49f:	lea    rcx,[rsp+0x38]
   14000d4a4:	call   QWORD PTR [rip+0xddce]        # 0x14001b278
   14000d4aa:	xor    al,al
   14000d4ac:	jmp    0x14000d6d2
   14000d4b1:	lea    rdx,[rsp+0x38]
   14000d4b6:	lea    rcx,[rsp+0x48]
   14000d4bb:	call   QWORD PTR [rip+0xe1c7]        # 0x14001b688
   14000d4c1:	nop
   14000d4c2:	lea    rcx,[rsp+0x28]
   14000d4c7:	call   QWORD PTR [rip+0xe1c3]        # 0x14001b690
   14000d4cd:	nop
   14000d4ce:	xor    eax,eax
   14000d4d0:	or     rcx,0xffffffffffffffff
   14000d4d4:	lea    rdi,[rip+0xed9d]        # 0x14001c278
   14000d4db:	repnz scas al,BYTE PTR es:[rdi]
   14000d4dd:	not    rcx
   14000d4e0:	lea    rdx,[rcx-0x1]
   14000d4e4:	lea    rcx,[rip+0xed8d]        # 0x14001c278
   14000d4eb:	call   QWORD PTR [rip+0xe127]        # 0x14001b618
   14000d4f1:	mov    QWORD PTR [rsp+0x90],rax
   14000d4f9:	xor    r8d,r8d
   14000d4fc:	lea    rdx,[rsp+0x90]
   14000d504:	lea    rcx,[rsp+0x28]
   14000d509:	call   QWORD PTR [rip+0xe189]        # 0x14001b698
   14000d50f:	nop
   14000d510:	lea    rcx,[rsp+0x90]
   14000d518:	call   QWORD PTR [rip+0xe10a]        # 0x14001b628
   14000d51e:	xor    eax,eax
   14000d520:	or     rcx,0xffffffffffffffff
   14000d524:	lea    rdi,[rip+0xed1d]        # 0x14001c248
   14000d52b:	repnz scas al,BYTE PTR es:[rdi]
   14000d52d:	not    rcx
   14000d530:	lea    rdx,[rcx-0x1]
   14000d534:	lea    rcx,[rip+0xed0d]        # 0x14001c248
   14000d53b:	call   QWORD PTR [rip+0xe0d7]        # 0x14001b618
   14000d541:	mov    QWORD PTR [rsp+0x90],rax
   14000d549:	mov    r8b,0x1
   14000d54c:	lea    rdx,[rsp+0x90]
   14000d554:	lea    rcx,[rsp+0x28]
   14000d559:	call   QWORD PTR [rip+0xe139]        # 0x14001b698
   14000d55f:	nop
   14000d560:	lea    rcx,[rsp+0x90]
   14000d568:	call   QWORD PTR [rip+0xe0ba]        # 0x14001b628
   14000d56e:	mov    ecx,0x98
   14000d573:	call   0x140014010
   14000d578:	mov    QWORD PTR [rsp+0x90],rax
   14000d580:	xor    ebx,ebx
   14000d582:	test   rax,rax
   14000d585:	je     0x14000d597
   14000d587:	mov    rdx,rsi
   14000d58a:	mov    rcx,rax
   14000d58d:	call   0x140008c80
   14000d592:	mov    rdi,rax
   14000d595:	jmp    0x14000d59a
   14000d597:	mov    rdi,rbx
   14000d59a:	mov    rdx,rdi
   14000d59d:	lea    rcx,[rsp+0x28]
   14000d5a2:	call   QWORD PTR [rip+0xe0f8]        # 0x14001b6a0
   14000d5a8:	test   rdi,rdi
   14000d5ab:	je     0x14000d5b1
   14000d5ad:	lea    rbx,[rdi+0x8]
   14000d5b1:	mov    rdx,rbx
   14000d5b4:	lea    rcx,[rsp+0x28]
   14000d5b9:	call   QWORD PTR [rip+0xe0e9]        # 0x14001b6a8
   14000d5bf:	lea    rdx,[rsp+0x48]
   14000d5c4:	lea    rcx,[rsp+0x28]
   14000d5c9:	call   QWORD PTR [rip+0xe0e1]        # 0x14001b6b0
   14000d5cf:	movzx  ebx,al
   14000d5d2:	xor    edx,edx
   14000d5d4:	lea    rcx,[rsp+0x28]
   14000d5d9:	call   QWORD PTR [rip+0xe0c1]        # 0x14001b6a0
   14000d5df:	xor    edx,edx
   14000d5e1:	lea    rcx,[rsp+0x28]
   14000d5e6:	call   QWORD PTR [rip+0xe0bc]        # 0x14001b6a8
   14000d5ec:	lea    rdx,[rsp+0x90]
   14000d5f4:	mov    rcx,rdi
   14000d5f7:	call   0x140008290
   14000d5fc:	lea    rcx,[rsi+0x18]
   14000d600:	mov    rdx,rax
   14000d603:	call   QWORD PTR [rip+0xdccf]        # 0x14001b2d8
   14000d609:	lea    rcx,[rsp+0x90]
   14000d611:	call   QWORD PTR [rip+0xe011]        # 0x14001b628
   14000d617:	lea    rdx,[rsp+0x90]
   14000d61f:	mov    rcx,rdi
   14000d622:	call   0x1400082c0
   14000d627:	lea    rcx,[rsi+0x20]
   14000d62b:	mov    rdx,rax
   14000d62e:	call   QWORD PTR [rip+0xdca4]        # 0x14001b2d8
   14000d634:	lea    rcx,[rsp+0x90]
   14000d63c:	call   QWORD PTR [rip+0xdfe6]        # 0x14001b628
   14000d642:	mov    rdx,rbp
   14000d645:	lea    rcx,[rsp+0x98]
   14000d64d:	call   QWORD PTR [rip+0xdd85]        # 0x14001b3d8
   14000d653:	nop
   14000d654:	lea    rdx,[rsp+0x90]
   14000d65c:	mov    rcx,rax
   14000d65f:	call   QWORD PTR [rip+0xde43]        # 0x14001b4a8
   14000d665:	nop
   14000d666:	mov    rdx,rax
   14000d669:	mov    rcx,rsi
   14000d66c:	call   0x14000d040
   14000d671:	nop
   14000d672:	lea    rcx,[rsp+0x90]
   14000d67a:	call   QWORD PTR [rip+0xdcd0]        # 0x14001b350
   14000d680:	nop
   14000d681:	lea    rcx,[rsp+0x98]
   14000d689:	call   QWORD PTR [rip+0xdd31]        # 0x14001b3c0
   14000d68f:	test   rdi,rdi
   14000d692:	je     0x14000d6a1
   14000d694:	mov    rax,QWORD PTR [rdi]
   14000d697:	mov    edx,0x1
   14000d69c:	mov    rcx,rdi
   14000d69f:	call   QWORD PTR [rax]
   14000d6a1:	lea    rcx,[rsp+0x38]
   14000d6a6:	call   QWORD PTR [rip+0xdbc4]        # 0x14001b270
   14000d6ac:	nop
   14000d6ad:	lea    rcx,[rsp+0x28]
   14000d6b2:	call   QWORD PTR [rip+0xe000]        # 0x14001b6b8
   14000d6b8:	nop
   14000d6b9:	lea    rcx,[rsp+0x48]
   14000d6be:	call   QWORD PTR [rip+0xdffc]        # 0x14001b6c0
   14000d6c4:	nop
   14000d6c5:	lea    rcx,[rsp+0x38]
   14000d6ca:	call   QWORD PTR [rip+0xdba8]        # 0x14001b278
   14000d6d0:	mov    al,bl
   14000d6d2:	mov    rbx,QWORD PTR [rsp+0x80]
   14000d6da:	add    rsp,0x60
   14000d6de:	pop    rdi
   14000d6df:	pop    rsi
   14000d6e0:	pop    rbp
   14000d6e1:	ret    
   14000d6e2:	int3   
   14000d6e3:	int3   
   14000d6e4:	int3   
   14000d6e5:	int3   
   14000d6e6:	int3   
   14000d6e7:	int3   
   14000d6e8:	int3   
   14000d6e9:	int3   
   14000d6ea:	int3   
   14000d6eb:	int3   
   14000d6ec:	int3   
   14000d6ed:	int3   
   14000d6ee:	int3   
   14000d6ef:	int3   
   14000d6f0:	mov    QWORD PTR [rsp+0x8],rcx
   14000d6f5:	push   rdi
   14000d6f6:	sub    rsp,0x30
   14000d6fa:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000d703:	mov    QWORD PTR [rsp+0x48],rbx
   14000d708:	mov    rbx,r8
   14000d70b:	mov    rdi,rcx
   14000d70e:	mov    DWORD PTR [rsp+0x58],0x0
   14000d716:	lea    rcx,[rsp+0x20]
   14000d71b:	call   QWORD PTR [rip+0xde8f]        # 0x14001b5b0
   14000d721:	nop
   14000d722:	mov    rdx,rbx
   14000d725:	mov    rcx,rax
   14000d728:	call   QWORD PTR [rip+0xdb32]        # 0x14001b260
   14000d72e:	mov    rdx,rax
   14000d731:	mov    rcx,rdi
   14000d734:	call   QWORD PTR [rip+0xde76]        # 0x14001b5b0
   14000d73a:	mov    DWORD PTR [rsp+0x58],0x1
   14000d742:	lea    rcx,[rsp+0x20]
   14000d747:	call   QWORD PTR [rip+0xded3]        # 0x14001b620
   14000d74d:	mov    rax,rdi
   14000d750:	mov    rbx,QWORD PTR [rsp+0x48]
   14000d755:	add    rsp,0x30
   14000d759:	pop    rdi
   14000d75a:	ret    
   14000d75b:	int3   
   14000d75c:	int3   
   14000d75d:	int3   
   14000d75e:	int3   
   14000d75f:	int3   
   14000d760:	mov    QWORD PTR [rsp+0x8],rcx
   14000d765:	push   rdi
   14000d766:	sub    rsp,0x30
   14000d76a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d773:	mov    QWORD PTR [rsp+0x48],rbx
   14000d778:	mov    rbx,r8
   14000d77b:	mov    rdi,rcx
   14000d77e:	mov    DWORD PTR [rsp+0x58],0x0
   14000d786:	call   QWORD PTR [rip+0xdba4]        # 0x14001b330
   14000d78c:	mov    DWORD PTR [rsp+0x58],0x1
   14000d794:	mov    rdx,rbx
   14000d797:	mov    rcx,rdi
   14000d79a:	call   QWORD PTR [rip+0xde60]        # 0x14001b600
   14000d7a0:	mov    rax,rdi
   14000d7a3:	mov    rbx,QWORD PTR [rsp+0x48]
   14000d7a8:	add    rsp,0x30
   14000d7ac:	pop    rdi
   14000d7ad:	ret    
   14000d7ae:	int3   
   14000d7af:	int3   
   14000d7b0:	mov    QWORD PTR [rsp+0x10],rbx
   14000d7b5:	mov    QWORD PTR [rsp+0x18],rsi
   14000d7ba:	push   rdi
   14000d7bb:	sub    rsp,0x20
   14000d7bf:	mov    rdi,rcx
   14000d7c2:	movzx  ecx,BYTE PTR [rcx]
   14000d7c5:	xor    esi,esi
   14000d7c7:	mov    rbx,rsi
   14000d7ca:	call   QWORD PTR [rip+0xd9e8]        # 0x14001b1b8
   14000d7d0:	test   eax,eax
   14000d7d2:	je     0x14000d856
   14000d7d8:	mov    QWORD PTR [rsp+0x30],rbp
   14000d7dd:	nop    DWORD PTR [rax]
   14000d7e0:	movzx  ecx,BYTE PTR [rbx+rdi*1+0x1]
   14000d7e5:	inc    rbx
   14000d7e8:	inc    esi
   14000d7ea:	call   QWORD PTR [rip+0xd9c8]        # 0x14001b1b8
   14000d7f0:	test   eax,eax
   14000d7f2:	jne    0x14000d7e0
   14000d7f4:	movsx  eax,BYTE PTR [rbx+rdi*1]
   14000d7f8:	movzx  ebp,al
   14000d7fb:	mov    ecx,ebp
   14000d7fd:	call   QWORD PTR [rip+0xd94d]        # 0x14001b150
   14000d803:	test   eax,eax
   14000d805:	jne    0x14000d813
   14000d807:	mov    ecx,ebp
   14000d809:	call   QWORD PTR [rip+0xd949]        # 0x14001b158
   14000d80f:	test   eax,eax
   14000d811:	je     0x14000d851
   14000d813:	movzx  ecx,BYTE PTR [rbx+rdi*1+0x1]
   14000d818:	call   QWORD PTR [rip+0xd99a]        # 0x14001b1b8
   14000d81e:	test   eax,eax
   14000d820:	jne    0x14000d7e0
   14000d822:	movsx  eax,BYTE PTR [rbx+rdi*1+0x1]
   14000d827:	movzx  ebp,al
   14000d82a:	mov    ecx,ebp
   14000d82c:	call   QWORD PTR [rip+0xd91e]        # 0x14001b150
   14000d832:	test   eax,eax
   14000d834:	jne    0x14000d842
   14000d836:	mov    ecx,ebp
   14000d838:	call   QWORD PTR [rip+0xd91a]        # 0x14001b158
   14000d83e:	test   eax,eax
   14000d840:	je     0x14000d851
   14000d842:	movzx  ecx,BYTE PTR [rbx+rdi*1+0x2]
   14000d847:	call   QWORD PTR [rip+0xd96b]        # 0x14001b1b8
   14000d84d:	test   eax,eax
   14000d84f:	jne    0x14000d7e0
   14000d851:	mov    rbp,QWORD PTR [rsp+0x30]
   14000d856:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d85b:	mov    eax,esi
   14000d85d:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d862:	add    rsp,0x20
   14000d866:	pop    rdi
   14000d867:	ret    
   14000d868:	int3   
   14000d869:	int3   
   14000d86a:	int3   
   14000d86b:	int3   
   14000d86c:	int3   
   14000d86d:	int3   
   14000d86e:	int3   
   14000d86f:	int3   
   14000d870:	mov    rax,rsp
   14000d873:	mov    QWORD PTR [rax+0x8],rcx
   14000d877:	push   rbp
   14000d878:	push   rsi
   14000d879:	push   rdi
   14000d87a:	push   r12
   14000d87c:	push   r13
   14000d87e:	push   r14
   14000d880:	push   r15
   14000d882:	sub    rsp,0x30
   14000d886:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d88f:	mov    QWORD PTR [rax+0x20],rbx
   14000d893:	mov    r12,rdx
   14000d896:	mov    r14,rcx
   14000d899:	xor    ebx,ebx
   14000d89b:	mov    DWORD PTR [rax+0x10],ebx
   14000d89e:	lea    rcx,[rax+0x18]
   14000d8a2:	call   QWORD PTR [rip+0xd9b0]        # 0x14001b258
   14000d8a8:	nop
   14000d8a9:	xor    eax,eax
   14000d8ab:	or     rcx,0xffffffffffffffff
   14000d8af:	mov    rdi,r12
   14000d8b2:	repnz scas al,BYTE PTR es:[rdi]
   14000d8b4:	not    rcx
   14000d8b7:	mov    edx,ecx
   14000d8b9:	lea    rcx,[rsp+0x80]
   14000d8c1:	call   QWORD PTR [rip+0xdc19]        # 0x14001b4e0
   14000d8c7:	lea    rcx,[rsp+0x80]
   14000d8cf:	call   QWORD PTR [rip+0xdd1b]        # 0x14001b5f0
   14000d8d5:	mov    r15,rax
   14000d8d8:	mov    esi,ebx
   14000d8da:	xor    r13b,r13b
   14000d8dd:	cmp    BYTE PTR [r12],sil
   14000d8e1:	je     0x14000d928
   14000d8e3:	mov    rdi,rax
   14000d8e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000d8f0:	movsxd rbp,ebx
   14000d8f3:	add    rbp,r12
   14000d8f6:	mov    rcx,rbp
   14000d8f9:	call   0x14000d7b0
   14000d8fe:	test   eax,eax
   14000d900:	jle    0x14000d911
   14000d902:	add    ebx,eax
   14000d904:	mov    BYTE PTR [rdi],0x30
   14000d907:	inc    esi
   14000d909:	inc    rdi
   14000d90c:	mov    r13b,0x1
   14000d90f:	jmp    0x14000d91e
   14000d911:	movzx  eax,BYTE PTR [rbp+0x0]
   14000d915:	mov    BYTE PTR [rdi],al
   14000d917:	inc    esi
   14000d919:	inc    rdi
   14000d91c:	inc    ebx
   14000d91e:	movsxd rax,ebx
   14000d921:	cmp    BYTE PTR [rax+r12*1],0x0
   14000d926:	jne    0x14000d8f0
   14000d928:	movsxd rax,esi
   14000d92b:	mov    BYTE PTR [rax+r15*1],0x0
   14000d930:	test   r13b,r13b
   14000d933:	je     0x14000d961
   14000d935:	lea    rdx,[rsp+0x80]
   14000d93d:	mov    rcx,r14
   14000d940:	call   QWORD PTR [rip+0xdc6a]        # 0x14001b5b0
   14000d946:	mov    DWORD PTR [rsp+0x78],0x1
   14000d94e:	lea    rcx,[rsp+0x80]
   14000d956:	call   QWORD PTR [rip+0xdcc4]        # 0x14001b620
   14000d95c:	mov    rax,r14
   14000d95f:	jmp    0x14000d98e
   14000d961:	or     r8d,0xffffffff
   14000d965:	lea    rdx,[rip+0xe47c]        # 0x14001bde8
   14000d96c:	mov    rcx,r14
   14000d96f:	call   QWORD PTR [rip+0xdc93]        # 0x14001b608
   14000d975:	mov    DWORD PTR [rsp+0x78],0x1
   14000d97d:	lea    rcx,[rsp+0x80]
   14000d985:	call   QWORD PTR [rip+0xdc95]        # 0x14001b620
   14000d98b:	mov    rax,r14
   14000d98e:	mov    rbx,QWORD PTR [rsp+0x88]
   14000d996:	add    rsp,0x30
   14000d99a:	pop    r15
   14000d99c:	pop    r14
   14000d99e:	pop    r13
   14000d9a0:	pop    r12
   14000d9a2:	pop    rdi
   14000d9a3:	pop    rsi
   14000d9a4:	pop    rbp
   14000d9a5:	ret    
   14000d9a6:	int3   
   14000d9a7:	int3   
   14000d9a8:	int3   
   14000d9a9:	int3   
   14000d9aa:	int3   
   14000d9ab:	int3   
   14000d9ac:	int3   
   14000d9ad:	int3   
   14000d9ae:	int3   
   14000d9af:	int3   
   14000d9b0:	mov    QWORD PTR [rsp+0x8],rcx
   14000d9b5:	push   rdi
   14000d9b6:	sub    rsp,0x50
   14000d9ba:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000d9c3:	mov    QWORD PTR [rsp+0x68],rbx
   14000d9c8:	mov    QWORD PTR [rsp+0x70],rsi
   14000d9cd:	mov    rsi,r8
   14000d9d0:	mov    rdi,rdx
   14000d9d3:	movzx  eax,BYTE PTR [rsp+0x80]
   14000d9db:	mov    BYTE PTR [rsp+0x20],al
   14000d9df:	mov    edx,0x68
   14000d9e4:	lea    r8d,[rdx-0x60]
   14000d9e8:	call   QWORD PTR [rip+0xdbba]        # 0x14001b5a8
   14000d9ee:	mov    rbx,rax
   14000d9f1:	mov    QWORD PTR [rsp+0x30],rax
   14000d9f6:	lea    rcx,[rax+0x18]
   14000d9fa:	test   rcx,rcx
   14000d9fd:	je     0x14000da09
   14000d9ff:	mov    rdx,rdi
   14000da02:	call   QWORD PTR [rip+0xdba8]        # 0x14001b5b0
   14000da08:	nop
   14000da09:	lea    rcx,[rbx+0x20]
   14000da0d:	mov    QWORD PTR [rsp+0x40],rcx
   14000da12:	test   rcx,rcx
   14000da15:	je     0x14000da20
   14000da17:	mov    rdx,rsi
   14000da1a:	call   0x140009700
   14000da1f:	nop
   14000da20:	mov    rax,rbx
   14000da23:	mov    rbx,QWORD PTR [rsp+0x68]
   14000da28:	mov    rsi,QWORD PTR [rsp+0x70]
   14000da2d:	add    rsp,0x50
   14000da31:	pop    rdi
   14000da32:	ret    
   14000da33:	int3   
   14000da34:	int3   
   14000da35:	int3   
   14000da36:	int3   
   14000da37:	int3   
   14000da38:	int3   
   14000da39:	int3   
   14000da3a:	int3   
   14000da3b:	int3   
   14000da3c:	int3   
   14000da3d:	int3   
   14000da3e:	int3   
   14000da3f:	int3   
   14000da40:	mov    QWORD PTR [rsp+0x8],rbx
   14000da45:	mov    QWORD PTR [rsp+0x10],rsi
   14000da4a:	push   rdi
   14000da4b:	sub    rsp,0x30
   14000da4f:	mov    rsi,rdx
   14000da52:	lea    r8,[rcx+0x20]
   14000da56:	lea    rdx,[rcx+0x18]
   14000da5a:	mov    rdi,rcx
   14000da5d:	xor    r9d,r9d
   14000da60:	mov    rcx,rsi
   14000da63:	mov    BYTE PTR [rsp+0x20],0x0
   14000da68:	call   0x14000d9b0
   14000da6d:	test   BYTE PTR [rdi],0x1
   14000da70:	mov    rbx,rax
   14000da73:	je     0x14000da7b
   14000da75:	or     QWORD PTR [rax],0x1
   14000da79:	jmp    0x14000da7f
   14000da7b:	and    QWORD PTR [rax],0xfffffffffffffffe
   14000da7f:	mov    rcx,QWORD PTR [rdi+0x8]
   14000da83:	test   rcx,rcx
   14000da86:	je     0x14000da9d
   14000da88:	mov    rdx,rsi
   14000da8b:	call   0x14000da40
   14000da90:	mov    QWORD PTR [rbx+0x8],rax
   14000da94:	and    QWORD PTR [rax],0x3
   14000da98:	or     QWORD PTR [rax],rbx
   14000da9b:	jmp    0x14000daa5
   14000da9d:	mov    QWORD PTR [rax+0x8],0x0
   14000daa5:	mov    rcx,QWORD PTR [rdi+0x10]
   14000daa9:	test   rcx,rcx
   14000daac:	je     0x14000dad4
   14000daae:	mov    rdx,rsi
   14000dab1:	call   0x14000da40
   14000dab6:	mov    QWORD PTR [rbx+0x10],rax
   14000daba:	and    QWORD PTR [rax],0x3
   14000dabe:	or     QWORD PTR [rax],rbx
   14000dac1:	mov    rax,rbx
   14000dac4:	mov    rbx,QWORD PTR [rsp+0x40]
   14000dac9:	mov    rsi,QWORD PTR [rsp+0x48]
   14000dace:	add    rsp,0x30
   14000dad2:	pop    rdi
   14000dad3:	ret    
   14000dad4:	mov    rsi,QWORD PTR [rsp+0x48]
   14000dad9:	mov    QWORD PTR [rbx+0x10],0x0
   14000dae1:	mov    rax,rbx
   14000dae4:	mov    rbx,QWORD PTR [rsp+0x40]
   14000dae9:	add    rsp,0x30
   14000daed:	pop    rdi
   14000daee:	ret    
   14000daef:	int3   
   14000daf0:	sub    rsp,0x28
   14000daf4:	mov    rdx,QWORD PTR [rcx]
   14000daf7:	mov    eax,DWORD PTR [rdx]
   14000daf9:	test   eax,eax
   14000dafb:	je     0x14000db0d
   14000dafd:	cmp    eax,0xffffffff
   14000db00:	je     0x14000db1f
   14000db02:	lock add DWORD PTR [rdx],0xffffffff
   14000db06:	setne  al
   14000db09:	test   al,al
   14000db0b:	jne    0x14000db1f
   14000db0d:	mov    rcx,QWORD PTR [rcx]
   14000db10:	mov    edx,0x1
   14000db15:	lea    r8d,[rdx+0x7]
   14000db19:	call   QWORD PTR [rip+0xdaa1]        # 0x14001b5c0
   14000db1f:	add    rsp,0x28
   14000db23:	ret    
   14000db24:	int3   
   14000db25:	int3   
   14000db26:	int3   
   14000db27:	int3   
   14000db28:	int3   
   14000db29:	int3   
   14000db2a:	int3   
   14000db2b:	int3   
   14000db2c:	int3   
   14000db2d:	int3   
   14000db2e:	int3   
   14000db2f:	int3   
   14000db30:	rex push rdi
   14000db32:	push   r12
   14000db34:	push   r13
   14000db36:	push   r14
   14000db38:	push   r15
   14000db3a:	sub    rsp,0x30
   14000db3e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000db47:	mov    QWORD PTR [rsp+0x68],rbx
   14000db4c:	mov    QWORD PTR [rsp+0x70],rsi
   14000db51:	movsxd r13,r8d
   14000db54:	movsxd r12,edx
   14000db57:	mov    rdi,rcx
   14000db5a:	mov    rbx,QWORD PTR [rcx]
   14000db5d:	mov    eax,DWORD PTR [rbx]
   14000db5f:	cmp    eax,0x1
   14000db62:	je     0x14000db6c
   14000db64:	test   eax,eax
   14000db66:	je     0x14000db6c
   14000db68:	mov    cl,0x1
   14000db6a:	jmp    0x14000db6e
   14000db6c:	xor    cl,cl
   14000db6e:	test   r8d,r8d
   14000db71:	je     0x14000dc59
   14000db77:	mov    eax,DWORD PTR [rbx+0x8]
   14000db7a:	btr    eax,0x1f
   14000db7e:	cmp    r13d,eax
   14000db81:	jne    0x14000dbb7
   14000db83:	test   cl,cl
   14000db85:	jne    0x14000dbb7
   14000db87:	cmp    r12d,DWORD PTR [rbx+0x4]
   14000db8b:	jle    0x14000dbae
   14000db8d:	mov    rax,QWORD PTR [rbx+0x10]
   14000db91:	movsxd rcx,DWORD PTR [rbx+0x4]
   14000db95:	add    rcx,rax
   14000db98:	add    rcx,rbx
   14000db9b:	mov    r8,r12
   14000db9e:	sub    r8,rcx
   14000dba1:	add    r8,rax
   14000dba4:	add    r8,rbx
   14000dba7:	xor    edx,edx
   14000dba9:	call   0x140014170
   14000dbae:	mov    DWORD PTR [rbx+0x4],r12d
   14000dbb2:	jmp    0x14000dc60
   14000dbb7:	mov    r8,r13
   14000dbba:	mov    edx,0x8
   14000dbbf:	lea    ecx,[rdx-0x7]
   14000dbc2:	call   QWORD PTR [rip+0xda00]        # 0x14001b5c8
   14000dbc8:	mov    rbx,rax
   14000dbcb:	mov    QWORD PTR [rsp+0x60],rax
   14000dbd0:	test   rax,rax
   14000dbd3:	jne    0x14000dbdb
   14000dbd5:	call   QWORD PTR [rip+0xd6cd]        # 0x14001b2a8
   14000dbdb:	mov    DWORD PTR [rbx+0x4],r12d
   14000dbdf:	mov    rdx,QWORD PTR [rdi]
   14000dbe2:	mov    rcx,QWORD PTR [rdx+0x10]
   14000dbe6:	lea    r15,[rdx+rcx*1]
   14000dbea:	cmp    r12d,DWORD PTR [rdx+0x4]
   14000dbee:	jle    0x14000dbfc
   14000dbf0:	movsxd rsi,DWORD PTR [rdx+0x4]
   14000dbf4:	add    rsi,rcx
   14000dbf7:	add    rsi,rdx
   14000dbfa:	jmp    0x14000dc03
   14000dbfc:	lea    rsi,[r12+rcx*1]
   14000dc00:	add    rsi,rdx
   14000dc03:	mov    rax,QWORD PTR [rbx+0x10]
   14000dc07:	lea    r14,[rbx+rax*1]
   14000dc0b:	mov    r8,rsi
   14000dc0e:	sub    r8,r15
   14000dc11:	mov    rdx,r15
   14000dc14:	mov    rcx,r14
   14000dc17:	call   0x140013f44
   14000dc1c:	sub    rsi,r15
   14000dc1f:	add    r14,rsi
   14000dc22:	mov    rax,QWORD PTR [rdi]
   14000dc25:	cmp    r12d,DWORD PTR [rax+0x4]
   14000dc29:	jle    0x14000dc44
   14000dc2b:	movsxd r8,DWORD PTR [rbx+0x4]
   14000dc2f:	add    r8,QWORD PTR [rbx+0x10]
   14000dc33:	add    r8,rbx
   14000dc36:	sub    r8,r14
   14000dc39:	xor    edx,edx
   14000dc3b:	mov    rcx,r14
   14000dc3e:	call   0x140014170
   14000dc43:	nop
   14000dc44:	mov    rax,QWORD PTR [rdi]
   14000dc47:	mov    ecx,DWORD PTR [rax+0x8]
   14000dc4a:	xor    ecx,DWORD PTR [rbx+0x8]
   14000dc4d:	btr    ecx,0x1f
   14000dc51:	xor    ecx,DWORD PTR [rax+0x8]
   14000dc54:	mov    DWORD PTR [rbx+0x8],ecx
   14000dc57:	jmp    0x14000dc60
   14000dc59:	mov    rbx,QWORD PTR [rip+0xd970]        # 0x14001b5d0
   14000dc60:	mov    rcx,QWORD PTR [rdi]
   14000dc63:	cmp    rcx,rbx
   14000dc66:	je     0x14000dcac
   14000dc68:	mov    eax,DWORD PTR [rcx]
   14000dc6a:	test   eax,eax
   14000dc6c:	je     0x14000dc7e
   14000dc6e:	cmp    eax,0xffffffff
   14000dc71:	je     0x14000dca9
   14000dc73:	lock add DWORD PTR [rcx],0xffffffff
   14000dc77:	setne  al
   14000dc7a:	test   al,al
   14000dc7c:	jne    0x14000dca9
   14000dc7e:	test   r13d,r13d
   14000dc81:	je     0x14000dc97
   14000dc83:	mov    edx,0x1
   14000dc88:	lea    r8d,[rdx+0x7]
   14000dc8c:	mov    rcx,QWORD PTR [rdi]
   14000dc8f:	call   QWORD PTR [rip+0xd92b]        # 0x14001b5c0
   14000dc95:	jmp    0x14000dca9
   14000dc97:	mov    edx,0x1
   14000dc9c:	lea    r8d,[rdx+0x7]
   14000dca0:	mov    rcx,QWORD PTR [rdi]
   14000dca3:	call   QWORD PTR [rip+0xd917]        # 0x14001b5c0
   14000dca9:	mov    QWORD PTR [rdi],rbx
   14000dcac:	mov    rbx,QWORD PTR [rsp+0x68]
   14000dcb1:	mov    rsi,QWORD PTR [rsp+0x70]
   14000dcb6:	add    rsp,0x30
   14000dcba:	pop    r15
   14000dcbc:	pop    r14
   14000dcbe:	pop    r13
   14000dcc0:	pop    r12
   14000dcc2:	pop    rdi
   14000dcc3:	ret    
   14000dcc4:	int3   
   14000dcc5:	int3   
   14000dcc6:	int3   
   14000dcc7:	int3   
   14000dcc8:	int3   
   14000dcc9:	int3   
   14000dcca:	int3   
   14000dccb:	int3   
   14000dccc:	int3   
   14000dccd:	int3   
   14000dcce:	int3   
   14000dccf:	int3   
   14000dcd0:	push   r12
   14000dcd2:	push   r13
   14000dcd4:	push   r14
   14000dcd6:	sub    rsp,0x30
   14000dcda:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000dce3:	mov    QWORD PTR [rsp+0x58],rbx
   14000dce8:	mov    QWORD PTR [rsp+0x60],rsi
   14000dced:	mov    QWORD PTR [rsp+0x68],rdi
   14000dcf2:	movsxd r13,r8d
   14000dcf5:	movsxd rsi,edx
   14000dcf8:	mov    rdi,rcx
   14000dcfb:	mov    rbx,QWORD PTR [rcx]
   14000dcfe:	mov    eax,DWORD PTR [rbx]
   14000dd00:	cmp    eax,0x1
   14000dd03:	je     0x14000dd0d
   14000dd05:	test   eax,eax
   14000dd07:	je     0x14000dd0d
   14000dd09:	mov    cl,0x1
   14000dd0b:	jmp    0x14000dd0f
   14000dd0d:	xor    cl,cl
   14000dd0f:	test   r8d,r8d
   14000dd12:	je     0x14000de0c
   14000dd18:	mov    eax,DWORD PTR [rbx+0x8]
   14000dd1b:	btr    eax,0x1f
   14000dd1f:	cmp    r13d,eax
   14000dd22:	jne    0x14000dd5f
   14000dd24:	test   cl,cl
   14000dd26:	jne    0x14000dd5f
   14000dd28:	cmp    esi,DWORD PTR [rbx+0x4]
   14000dd2b:	jle    0x14000dd57
   14000dd2d:	mov    rdx,QWORD PTR [rbx+0x10]
   14000dd31:	movsxd rax,DWORD PTR [rbx+0x4]
   14000dd35:	lea    rcx,[rdx+rax*4]
   14000dd39:	add    rcx,rbx
   14000dd3c:	mov    r8,rsi
   14000dd3f:	shl    r8,0x2
   14000dd43:	sub    r8,rcx
   14000dd46:	add    r8,rdx
   14000dd49:	add    r8,rbx
   14000dd4c:	and    r8,0xfffffffffffffffc
   14000dd50:	xor    edx,edx
   14000dd52:	call   0x140014170
   14000dd57:	mov    DWORD PTR [rbx+0x4],esi
   14000dd5a:	jmp    0x14000de13
   14000dd5f:	mov    r8,r13
   14000dd62:	mov    edx,0x8
   14000dd67:	lea    ecx,[rdx-0x4]
   14000dd6a:	call   QWORD PTR [rip+0xd858]        # 0x14001b5c8
   14000dd70:	mov    rbx,rax
   14000dd73:	mov    QWORD PTR [rsp+0x50],rax
   14000dd78:	test   rax,rax
   14000dd7b:	jne    0x14000dd83
   14000dd7d:	call   QWORD PTR [rip+0xd525]        # 0x14001b2a8
   14000dd83:	mov    DWORD PTR [rbx+0x4],esi
   14000dd86:	mov    rdx,QWORD PTR [rdi]
   14000dd89:	mov    rcx,QWORD PTR [rdx+0x10]
   14000dd8d:	lea    r9,[rdx+rcx*1]
   14000dd91:	cmp    esi,DWORD PTR [rdx+0x4]
   14000dd94:	jle    0x14000dda7
   14000dd96:	movsxd rcx,DWORD PTR [rdx+0x4]
   14000dd9a:	mov    rax,QWORD PTR [rdx+0x10]
   14000dd9e:	lea    r12,[rax+rcx*4]
   14000dda2:	add    r12,rdx
   14000dda5:	jmp    0x14000ddae
   14000dda7:	lea    r12,[rcx+rsi*4]
   14000ddab:	add    r12,rdx
   14000ddae:	mov    rax,QWORD PTR [rbx+0x10]
   14000ddb2:	lea    r14,[rbx+rax*1]
   14000ddb6:	sub    r12,r9
   14000ddb9:	and    r12,0xfffffffffffffffc
   14000ddbd:	mov    r8,r12
   14000ddc0:	mov    rdx,r9
   14000ddc3:	mov    rcx,r14
   14000ddc6:	call   0x140013f44
   14000ddcb:	add    r14,r12
   14000ddce:	mov    rax,QWORD PTR [rdi]
   14000ddd1:	cmp    esi,DWORD PTR [rax+0x4]
   14000ddd4:	jle    0x14000ddf7
   14000ddd6:	movsxd rdx,DWORD PTR [rbx+0x4]
   14000ddda:	mov    rax,QWORD PTR [rbx+0x10]
   14000ddde:	lea    r8,[rax+rdx*4]
   14000dde2:	add    r8,rbx
   14000dde5:	sub    r8,r14
   14000dde8:	and    r8,0xfffffffffffffffc
   14000ddec:	xor    edx,edx
   14000ddee:	mov    rcx,r14
   14000ddf1:	call   0x140014170
   14000ddf6:	nop
   14000ddf7:	mov    rax,QWORD PTR [rdi]
   14000ddfa:	mov    ecx,DWORD PTR [rax+0x8]
   14000ddfd:	xor    ecx,DWORD PTR [rbx+0x8]
   14000de00:	btr    ecx,0x1f
   14000de04:	xor    ecx,DWORD PTR [rax+0x8]
   14000de07:	mov    DWORD PTR [rbx+0x8],ecx
   14000de0a:	jmp    0x14000de13
   14000de0c:	mov    rbx,QWORD PTR [rip+0xd7bd]        # 0x14001b5d0
   14000de13:	mov    rcx,QWORD PTR [rdi]
   14000de16:	cmp    rcx,rbx
   14000de19:	je     0x14000de5f
   14000de1b:	mov    eax,DWORD PTR [rcx]
   14000de1d:	test   eax,eax
   14000de1f:	je     0x14000de31
   14000de21:	cmp    eax,0xffffffff
   14000de24:	je     0x14000de5c
   14000de26:	lock add DWORD PTR [rcx],0xffffffff
   14000de2a:	setne  al
   14000de2d:	test   al,al
   14000de2f:	jne    0x14000de5c
   14000de31:	test   r13d,r13d
   14000de34:	je     0x14000de4a
   14000de36:	mov    edx,0x4
   14000de3b:	lea    r8d,[rdx+0x4]
   14000de3f:	mov    rcx,QWORD PTR [rdi]
   14000de42:	call   QWORD PTR [rip+0xd778]        # 0x14001b5c0
   14000de48:	jmp    0x14000de5c
   14000de4a:	mov    edx,0x4
   14000de4f:	lea    r8d,[rdx+0x4]
   14000de53:	mov    rcx,QWORD PTR [rdi]
   14000de56:	call   QWORD PTR [rip+0xd764]        # 0x14001b5c0
   14000de5c:	mov    QWORD PTR [rdi],rbx
   14000de5f:	mov    rbx,QWORD PTR [rsp+0x58]
   14000de64:	mov    rsi,QWORD PTR [rsp+0x60]
   14000de69:	mov    rdi,QWORD PTR [rsp+0x68]
   14000de6e:	add    rsp,0x30
   14000de72:	pop    r14
   14000de74:	pop    r13
   14000de76:	pop    r12
   14000de78:	ret    
   14000de79:	int3   
   14000de7a:	int3   
   14000de7b:	int3   
   14000de7c:	int3   
   14000de7d:	int3   
   14000de7e:	int3   
   14000de7f:	int3   
   14000de80:	rex push rbx
   14000de82:	sub    rsp,0x20
   14000de86:	mov    rbx,rcx
   14000de89:	nop    DWORD PTR [rax+0x0]
   14000de90:	lea    rcx,[rbx+0x18]
   14000de94:	call   QWORD PTR [rip+0xd786]        # 0x14001b620
   14000de9a:	lea    rcx,[rbx+0x48]
   14000de9e:	call   QWORD PTR [rip+0xd784]        # 0x14001b628
   14000dea4:	lea    rcx,[rbx+0x40]
   14000dea8:	call   0x140002880
   14000dead:	lea    rcx,[rbx+0x38]
   14000deb1:	call   QWORD PTR [rip+0xd769]        # 0x14001b620
   14000deb7:	lea    rcx,[rbx+0x30]
   14000debb:	call   QWORD PTR [rip+0xd75f]        # 0x14001b620
   14000dec1:	lea    rcx,[rbx+0x28]
   14000dec5:	call   QWORD PTR [rip+0xd755]        # 0x14001b620
   14000decb:	mov    rcx,QWORD PTR [rbx+0x8]
   14000decf:	test   rcx,rcx
   14000ded2:	je     0x14000ded9
   14000ded4:	call   0x14000de80
   14000ded9:	mov    rbx,QWORD PTR [rbx+0x10]
   14000dedd:	test   rbx,rbx
   14000dee0:	jne    0x14000de90
   14000dee2:	add    rsp,0x20
   14000dee6:	pop    rbx
   14000dee7:	ret    
   14000dee8:	int3   
   14000dee9:	int3   
   14000deea:	int3   
   14000deeb:	int3   
   14000deec:	int3   
   14000deed:	int3   
   14000deee:	int3   
   14000deef:	int3   
   14000def0:	mov    QWORD PTR [rsp+0x20],r9
   14000def5:	mov    QWORD PTR [rsp+0x18],r8
   14000defa:	mov    QWORD PTR [rsp+0x10],rdx
   14000deff:	mov    QWORD PTR [rsp+0x8],rcx
   14000df04:	push   rbx
   14000df05:	push   rbp
   14000df06:	push   rsi
   14000df07:	push   rdi
   14000df08:	push   r12
   14000df0a:	push   r13
   14000df0c:	push   r14
   14000df0e:	push   r15
   14000df10:	sub    rsp,0x168
   14000df17:	mov    QWORD PTR [rsp+0x150],0xfffffffffffffffe
   14000df23:	mov    r14,r8
   14000df26:	mov    rbx,rcx
   14000df29:	mov    DWORD PTR [rsp+0x50],0x0
   14000df31:	mov    rdx,r8
   14000df34:	lea    rcx,[rsp+0xb0]
   14000df3c:	call   0x14000d870
   14000df41:	nop
   14000df42:	mov    dl,0x30
   14000df44:	mov    rcx,rax
   14000df47:	call   QWORD PTR [rip+0xd5b3]        # 0x14001b500
   14000df4d:	movsxd rbp,eax
   14000df50:	mov    DWORD PTR [rsp+0x60],ebp
   14000df54:	lea    rcx,[rsp+0xb0]
   14000df5c:	call   QWORD PTR [rip+0xd6be]        # 0x14001b620
   14000df62:	test   r14,r14
   14000df65:	je     0x14000df82
   14000df67:	xor    eax,eax
   14000df69:	or     rcx,0xffffffffffffffff
   14000df6d:	mov    rdi,r14
   14000df70:	repnz scas al,BYTE PTR es:[rdi]
   14000df72:	not    rcx
   14000df75:	dec    rcx
   14000df78:	mov    r13,rcx
   14000df7b:	mov    QWORD PTR [rsp+0x58],rcx
   14000df80:	jmp    0x14000df8a
   14000df82:	xor    r13d,r13d
   14000df85:	mov    QWORD PTR [rsp+0x58],r13
   14000df8a:	mov    rcx,rbx
   14000df8d:	call   QWORD PTR [rip+0xd67d]        # 0x14001b610
   14000df93:	mov    r15d,0x1
   14000df99:	mov    DWORD PTR [rsp+0x50],r15d
   14000df9e:	mov    rax,QWORD PTR [rip+0xd63b]        # 0x14001b5e0
   14000dfa5:	mov    QWORD PTR [rsp+0x48],rax
   14000dfaa:	mov    QWORD PTR [rsp+0x30],rax
   14000dfaf:	test   ebp,ebp
   14000dfb1:	jle    0x14000e008
   14000dfb3:	xor    r9d,r9d
   14000dfb6:	mov    r8,rbp
   14000dfb9:	lea    edx,[r15+0x7]
   14000dfbd:	mov    rcx,r15
   14000dfc0:	call   QWORD PTR [rip+0xd602]        # 0x14001b5c8
   14000dfc6:	mov    rsi,rax
   14000dfc9:	mov    QWORD PTR [rsp+0x40],rax
   14000dfce:	mov    QWORD PTR [rsp+0x38],rax
   14000dfd3:	test   rax,rax
   14000dfd6:	jne    0x14000dfde
   14000dfd8:	call   QWORD PTR [rip+0xd2ca]        # 0x14001b2a8
   14000dfde:	mov    DWORD PTR [rsi+0x4],ebp
   14000dfe1:	mov    rax,QWORD PTR [rsi+0x10]
   14000dfe5:	lea    r8,[rax+rbp*1]
   14000dfe9:	add    r8,rsi
   14000dfec:	lea    rcx,[rax+rsi*1]
   14000dff0:	sub    r8,rcx
   14000dff3:	xor    edx,edx
   14000dff5:	call   0x140014170
   14000dffa:	mov    rbx,QWORD PTR [rip+0xd5cf]        # 0x14001b5d0
   14000e001:	mov    QWORD PTR [rsp+0x28],rbx
   14000e006:	jmp    0x14000e021
   14000e008:	mov    rbx,QWORD PTR [rip+0xd5c1]        # 0x14001b5d0
   14000e00f:	mov    QWORD PTR [rsp+0x28],rbx
   14000e014:	mov    rsi,rbx
   14000e017:	mov    QWORD PTR [rsp+0x40],rbx
   14000e01c:	mov    QWORD PTR [rsp+0x38],rbx
   14000e021:	test   ebp,ebp
   14000e023:	jle    0x14000e072
   14000e025:	xor    r9d,r9d
   14000e028:	mov    r8,rbp
   14000e02b:	lea    edx,[r9+0x8]
   14000e02f:	lea    ecx,[rdx-0x4]
   14000e032:	call   QWORD PTR [rip+0xd590]        # 0x14001b5c8
   14000e038:	mov    rbx,rax
   14000e03b:	mov    QWORD PTR [rsp+0x28],rax
   14000e040:	mov    QWORD PTR [rsp+0x20],rax
   14000e045:	test   rax,rax
   14000e048:	jne    0x14000e050
   14000e04a:	call   QWORD PTR [rip+0xd258]        # 0x14001b2a8
   14000e050:	mov    DWORD PTR [rbx+0x4],ebp
   14000e053:	mov    rax,QWORD PTR [rbx+0x10]
   14000e057:	lea    r8,[rax+rbp*4]
   14000e05b:	add    r8,rbx
   14000e05e:	lea    rcx,[rax+rbx*1]
   14000e062:	sub    r8,rcx
   14000e065:	and    r8,0xfffffffffffffffc
   14000e069:	xor    edx,edx
   14000e06b:	call   0x140014170
   14000e070:	jmp    0x14000e077
   14000e072:	mov    QWORD PTR [rsp+0x20],rbx
   14000e077:	xor    edi,edi
   14000e079:	xor    r12d,r12d
   14000e07c:	xor    ebp,ebp
   14000e07e:	test   r13d,r13d
   14000e081:	jle    0x14000e270
   14000e087:	nop    WORD PTR [rax+rax*1+0x0]
   14000e090:	movsxd rax,edi
   14000e093:	add    r14,rax
   14000e096:	mov    rcx,r14
   14000e099:	call   0x14000d7b0
   14000e09e:	mov    r13d,eax
   14000e0a1:	movsxd r15,r12d
   14000e0a4:	mov    rax,QWORD PTR [rsp+0x1c8]
   14000e0ac:	add    r15,rax
   14000e0af:	mov    rcx,r15
   14000e0b2:	call   0x14000d7b0
   14000e0b7:	mov    DWORD PTR [rsp+0x68],eax
   14000e0bb:	test   r13d,r13d
   14000e0be:	jle    0x14000e24a
   14000e0c4:	lea    r8d,[r13+0x1]
   14000e0c8:	mov    rdx,r14
   14000e0cb:	lea    rcx,[rsp+0xc0]
   14000e0d3:	call   QWORD PTR [rip+0xd52f]        # 0x14001b608
   14000e0d9:	nop
   14000e0da:	mov    rdx,rax
   14000e0dd:	lea    rcx,[rsp+0x90]
   14000e0e5:	call   QWORD PTR [rip+0xd1e5]        # 0x14001b2d0
   14000e0eb:	nop
   14000e0ec:	lea    rdx,[rsp+0x90]
   14000e0f4:	lea    rcx,[rsp+0x48]
   14000e0f9:	call   0x1400049b0
   14000e0fe:	nop
   14000e0ff:	lea    rcx,[rsp+0x90]
   14000e107:	call   QWORD PTR [rip+0xd51b]        # 0x14001b628
   14000e10d:	nop
   14000e10e:	lea    rcx,[rsp+0xc0]
   14000e116:	call   QWORD PTR [rip+0xd504]        # 0x14001b620
   14000e11c:	mov    r14d,DWORD PTR [rsp+0x68]
   14000e121:	lea    r8d,[r14+0x1]
   14000e125:	mov    rdx,r15
   14000e128:	lea    rcx,[rsp+0xd0]
   14000e130:	call   QWORD PTR [rip+0xd4d2]        # 0x14001b608
   14000e136:	nop
   14000e137:	mov    rdx,rax
   14000e13a:	lea    rcx,[rsp+0x98]
   14000e142:	call   QWORD PTR [rip+0xd188]        # 0x14001b2d0
   14000e148:	nop
   14000e149:	lea    rdx,[rsp+0x98]
   14000e151:	lea    rcx,[rsp+0x30]
   14000e156:	call   0x1400049b0
   14000e15b:	nop
   14000e15c:	lea    rcx,[rsp+0x98]
   14000e164:	call   QWORD PTR [rip+0xd4be]        # 0x14001b628
   14000e16a:	nop
   14000e16b:	lea    rcx,[rsp+0xd0]
   14000e173:	call   QWORD PTR [rip+0xd4a7]        # 0x14001b620
   14000e179:	add    edi,r13d
   14000e17c:	add    r12d,r14d
   14000e17f:	mov    eax,DWORD PTR [rsi]
   14000e181:	cmp    eax,0x1
   14000e184:	je     0x14000e1d6
   14000e186:	test   eax,eax
   14000e188:	je     0x14000e1d6
   14000e18a:	mov    r8d,DWORD PTR [rsi+0x8]
   14000e18e:	btr    r8d,0x1f
   14000e193:	test   r8d,r8d
   14000e196:	jne    0x14000e1b6
   14000e198:	lea    r9d,[r8+0x2]
   14000e19c:	xor    r8d,r8d
   14000e19f:	lea    edx,[r9+0x6]
   14000e1a3:	lea    ecx,[rdx-0x7]
   14000e1a6:	call   QWORD PTR [rip+0xd41c]        # 0x14001b5c8
   14000e1ac:	mov    rsi,rax
   14000e1af:	mov    QWORD PTR [rsp+0x38],rax
   14000e1b4:	jmp    0x14000e1d6
   14000e1b6:	mov    DWORD PTR [rsp+0x128],0x0
   14000e1c1:	xor    r9d,r9d
   14000e1c4:	mov    edx,DWORD PTR [rsi+0x4]
   14000e1c7:	lea    rcx,[rsp+0x38]
   14000e1cc:	call   0x14000db30
   14000e1d1:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e1d6:	mov    rcx,QWORD PTR [rsi+0x10]
   14000e1da:	add    rcx,rbp
   14000e1dd:	mov    BYTE PTR [rcx+rsi*1],0x0
   14000e1e1:	mov    eax,DWORD PTR [rbx]
   14000e1e3:	cmp    eax,0x1
   14000e1e6:	je     0x14000e238
   14000e1e8:	test   eax,eax
   14000e1ea:	je     0x14000e238
   14000e1ec:	mov    r8d,DWORD PTR [rbx+0x8]
   14000e1f0:	btr    r8d,0x1f
   14000e1f5:	test   r8d,r8d
   14000e1f8:	jne    0x14000e218
   14000e1fa:	lea    r9d,[r8+0x2]
   14000e1fe:	xor    r8d,r8d
   14000e201:	lea    edx,[r9+0x6]
   14000e205:	lea    ecx,[rdx-0x4]
   14000e208:	call   QWORD PTR [rip+0xd3ba]        # 0x14001b5c8
   14000e20e:	mov    rbx,rax
   14000e211:	mov    QWORD PTR [rsp+0x20],rax
   14000e216:	jmp    0x14000e238
   14000e218:	mov    DWORD PTR [rsp+0x108],0x0
   14000e223:	xor    r9d,r9d
   14000e226:	mov    edx,DWORD PTR [rbx+0x4]
   14000e229:	lea    rcx,[rsp+0x20]
   14000e22e:	call   0x14000dcd0
   14000e233:	mov    rbx,QWORD PTR [rsp+0x20]
   14000e238:	mov    rax,QWORD PTR [rbx+0x10]
   14000e23c:	lea    rcx,[rax+rbp*4]
   14000e240:	mov    DWORD PTR [rcx+rbx*1],0x0
   14000e247:	inc    rbp
   14000e24a:	inc    edi
   14000e24c:	inc    r12d
   14000e24f:	cmp    edi,DWORD PTR [rsp+0x58]
   14000e253:	mov    r14,QWORD PTR [rsp+0x1c0]
   14000e25b:	jl     0x14000e090
   14000e261:	mov    QWORD PTR [rsp+0x40],rsi
   14000e266:	mov    QWORD PTR [rsp+0x28],rbx
   14000e26b:	mov    r15d,DWORD PTR [rsp+0x50]
   14000e270:	xor    edx,edx
   14000e272:	mov    DWORD PTR [rsp+0x78],edx
   14000e276:	mov    rcx,QWORD PTR [rsp+0x1b8]
   14000e27e:	mov    rax,QWORD PTR [rcx]
   14000e281:	movsxd r13,DWORD PTR [rsp+0x60]
   14000e286:	mov    r14,r13
   14000e289:	mov    QWORD PTR [rsp+0x80],r13
   14000e291:	cmp    DWORD PTR [rax+0x4],edx
   14000e294:	jle    0x14000ea40
   14000e29a:	mov    r12,QWORD PTR [rsp+0x1b0]
   14000e2a2:	mov    r8d,edx
   14000e2a5:	lea    rdx,[rsp+0x1c0]
   14000e2ad:	call   QWORD PTR [rip+0xd245]        # 0x14001b4f8
   14000e2b3:	movzx  edx,WORD PTR [rax]
   14000e2b6:	mov    rcx,r12
   14000e2b9:	call   QWORD PTR [rip+0xd169]        # 0x14001b428
   14000e2bf:	xor    r13d,r13d
   14000e2c2:	xor    ebp,ebp
   14000e2c4:	mov    ecx,DWORD PTR [rsp+0x60]
   14000e2c8:	test   ecx,ecx
   14000e2ca:	jle    0x14000e4a3
   14000e2d0:	mov    r15,QWORD PTR [rsp+0x1b8]
   14000e2d8:	mov    esi,DWORD PTR [rsp+0x78]
   14000e2dc:	nop    DWORD PTR [rax+0x0]
   14000e2e0:	mov    eax,DWORD PTR [rbx]
   14000e2e2:	cmp    eax,0x1
   14000e2e5:	je     0x14000e337
   14000e2e7:	test   eax,eax
   14000e2e9:	je     0x14000e337
   14000e2eb:	mov    r8d,DWORD PTR [rbx+0x8]
   14000e2ef:	btr    r8d,0x1f
   14000e2f4:	test   r8d,r8d
   14000e2f7:	jne    0x14000e317
   14000e2f9:	lea    r9d,[r8+0x2]
   14000e2fd:	xor    r8d,r8d
   14000e300:	lea    edx,[r9+0x6]
   14000e304:	lea    ecx,[rdx-0x4]
   14000e307:	call   QWORD PTR [rip+0xd2bb]        # 0x14001b5c8
   14000e30d:	mov    rbx,rax
   14000e310:	mov    QWORD PTR [rsp+0x20],rax
   14000e315:	jmp    0x14000e337
   14000e317:	mov    DWORD PTR [rsp+0xc8],0x0
   14000e322:	xor    r9d,r9d
   14000e325:	mov    edx,DWORD PTR [rbx+0x4]
   14000e328:	lea    rcx,[rsp+0x20]
   14000e32d:	call   0x14000dcd0
   14000e332:	mov    rbx,QWORD PTR [rsp+0x20]
   14000e337:	lea    r12,[rbp*4+0x0]
   14000e33f:	mov    rdi,QWORD PTR [rbx+0x10]
   14000e343:	add    rdi,r12
   14000e346:	add    rdi,rbx
   14000e349:	mov    rax,QWORD PTR [rsp+0x48]
   14000e34e:	mov    ecx,DWORD PTR [rax]
   14000e350:	cmp    ecx,0x1
   14000e353:	je     0x14000e36b
   14000e355:	test   ecx,ecx
   14000e357:	je     0x14000e36b
   14000e359:	mov    edx,DWORD PTR [rax+0x4]
   14000e35c:	lea    rcx,[rsp+0x48]
   14000e361:	call   0x1400048c0
   14000e366:	mov    rax,QWORD PTR [rsp+0x48]
   14000e36b:	movsxd rdx,DWORD PTR [rax+0x8]
   14000e36f:	movsxd rcx,r13d
   14000e372:	add    rdx,rcx
   14000e375:	lea    rcx,[rax+rdx*8+0x10]
   14000e37a:	mov    eax,DWORD PTR [rdi]
   14000e37c:	mov    QWORD PTR [rsp+0x140],rcx
   14000e384:	mov    DWORD PTR [rsp+0x148],eax
   14000e38b:	lea    rdx,[rsp+0x88]
   14000e393:	lea    rcx,[rsp+0x140]
   14000e39b:	call   QWORD PTR [rip+0xd14f]        # 0x14001b4f0
   14000e3a1:	movzx  edi,WORD PTR [rax]
   14000e3a4:	mov    r8d,esi
   14000e3a7:	lea    rdx,[rsp+0x8a]
   14000e3af:	mov    rcx,r15
   14000e3b2:	call   QWORD PTR [rip+0xd140]        # 0x14001b4f8
   14000e3b8:	cmp    WORD PTR [rax],di
   14000e3bb:	jne    0x14000e420
   14000e3bd:	mov    eax,DWORD PTR [rbx]
   14000e3bf:	cmp    eax,0x1
   14000e3c2:	je     0x14000e414
   14000e3c4:	test   eax,eax
   14000e3c6:	je     0x14000e414
   14000e3c8:	mov    r8d,DWORD PTR [rbx+0x8]
   14000e3cc:	btr    r8d,0x1f
   14000e3d1:	test   r8d,r8d
   14000e3d4:	jne    0x14000e3f4
   14000e3d6:	lea    r9d,[r8+0x2]
   14000e3da:	xor    r8d,r8d
   14000e3dd:	lea    edx,[r9+0x6]
   14000e3e1:	lea    ecx,[rdx-0x4]
   14000e3e4:	call   QWORD PTR [rip+0xd1de]        # 0x14001b5c8
   14000e3ea:	mov    rbx,rax
   14000e3ed:	mov    QWORD PTR [rsp+0x20],rax
   14000e3f2:	jmp    0x14000e414
   14000e3f4:	mov    DWORD PTR [rsp+0x13c],0x0
   14000e3ff:	xor    r9d,r9d
   14000e402:	mov    edx,DWORD PTR [rbx+0x4]
   14000e405:	lea    rcx,[rsp+0x20]
   14000e40a:	call   0x14000dcd0
   14000e40f:	mov    rbx,QWORD PTR [rsp+0x20]
   14000e414:	mov    rax,QWORD PTR [rbx+0x10]
   14000e418:	add    rax,r12
   14000e41b:	inc    DWORD PTR [rax+rbx*1]
   14000e41e:	jmp    0x14000e486
   14000e420:	mov    eax,DWORD PTR [rbx]
   14000e422:	cmp    eax,0x1
   14000e425:	je     0x14000e477
   14000e427:	test   eax,eax
   14000e429:	je     0x14000e477
   14000e42b:	mov    r8d,DWORD PTR [rbx+0x8]
   14000e42f:	btr    r8d,0x1f
   14000e434:	test   r8d,r8d
   14000e437:	jne    0x14000e457
   14000e439:	lea    r9d,[r8+0x2]
   14000e43d:	xor    r8d,r8d
   14000e440:	lea    edx,[r9+0x6]
   14000e444:	lea    ecx,[rdx-0x4]
   14000e447:	call   QWORD PTR [rip+0xd17b]        # 0x14001b5c8
   14000e44d:	mov    rbx,rax
   14000e450:	mov    QWORD PTR [rsp+0x20],rax
   14000e455:	jmp    0x14000e477
   14000e457:	mov    DWORD PTR [rsp+0xd8],0x0
   14000e462:	xor    r9d,r9d
   14000e465:	mov    edx,DWORD PTR [rbx+0x4]
   14000e468:	lea    rcx,[rsp+0x20]
   14000e46d:	call   0x14000dcd0
   14000e472:	mov    rbx,QWORD PTR [rsp+0x20]
   14000e477:	mov    rax,QWORD PTR [rbx+0x10]
   14000e47b:	lea    rcx,[r12+rax*1]
   14000e47f:	mov    DWORD PTR [rcx+rbx*1],0x0
   14000e486:	inc    r13d
   14000e489:	inc    rbp
   14000e48c:	cmp    rbp,r14
   14000e48f:	jl     0x14000e2e0
   14000e495:	mov    rsi,QWORD PTR [rsp+0x40]
   14000e49a:	mov    r15d,DWORD PTR [rsp+0x50]
   14000e49f:	mov    ecx,DWORD PTR [rsp+0x60]
   14000e4a3:	xor    eax,eax
   14000e4a5:	mov    DWORD PTR [rsp+0x68],eax
   14000e4a9:	nop    DWORD PTR [rax+0x0]
   14000e4b0:	mov    DWORD PTR [rsp+0x28],ecx
   14000e4b4:	mov    QWORD PTR [rsp+0x58],r14
   14000e4b9:	mov    DWORD PTR [rsp+0x70],0x0
   14000e4c1:	xor    r12d,r12d
   14000e4c4:	test   ecx,ecx
   14000e4c6:	jle    0x14000e862
   14000e4cc:	movsxd rdx,eax
   14000e4cf:	mov    QWORD PTR [rsp+0x40],rdx
   14000e4d4:	mov    eax,DWORD PTR [rsi]
   14000e4d6:	cmp    eax,0x1
   14000e4d9:	je     0x14000e535
   14000e4db:	test   eax,eax
   14000e4dd:	je     0x14000e535
   14000e4df:	mov    r8d,DWORD PTR [rsi+0x8]
   14000e4e3:	btr    r8d,0x1f
   14000e4e8:	test   r8d,r8d
   14000e4eb:	jne    0x14000e510
   14000e4ed:	lea    r9d,[r8+0x2]
   14000e4f1:	xor    r8d,r8d
   14000e4f4:	lea    edx,[r9+0x6]
   14000e4f8:	lea    ecx,[rdx-0x7]
   14000e4fb:	call   QWORD PTR [rip+0xd0c7]        # 0x14001b5c8
   14000e501:	mov    rsi,rax
   14000e504:	mov    QWORD PTR [rsp+0x38],rax
   14000e509:	mov    rdx,QWORD PTR [rsp+0x40]
   14000e50e:	jmp    0x14000e535
   14000e510:	mov    DWORD PTR [rsp+0x118],0x0
   14000e51b:	xor    r9d,r9d
   14000e51e:	mov    edx,DWORD PTR [rsi+0x4]
   14000e521:	lea    rcx,[rsp+0x38]
   14000e526:	call   0x14000db30
   14000e52b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e530:	mov    rdx,QWORD PTR [rsp+0x40]
   14000e535:	mov    rax,QWORD PTR [rsi+0x10]
   14000e539:	lea    rcx,[r12+rax*1]
   14000e53d:	cmp    BYTE PTR [rcx+rsi*1],0x0
   14000e541:	je     0x14000e54c
   14000e543:	test   rdx,rdx
   14000e546:	jle    0x14000e6fc
   14000e54c:	mov    eax,DWORD PTR [rbx]
   14000e54e:	cmp    eax,0x1
   14000e551:	je     0x14000e5a3
   14000e553:	test   eax,eax
   14000e555:	je     0x14000e5a3
   14000e557:	mov    r8d,DWORD PTR [rbx+0x8]
   14000e55b:	btr    r8d,0x1f
   14000e560:	test   r8d,r8d
   14000e563:	jne    0x14000e583
   14000e565:	lea    r9d,[r8+0x2]
   14000e569:	xor    r8d,r8d
   14000e56c:	lea    edx,[r9+0x6]
   14000e570:	lea    ecx,[rdx-0x4]
   14000e573:	call   QWORD PTR [rip+0xd04f]        # 0x14001b5c8
   14000e579:	mov    rbx,rax
   14000e57c:	mov    QWORD PTR [rsp+0x20],rax
   14000e581:	jmp    0x14000e5a3
   14000e583:	mov    DWORD PTR [rsp+0xe8],0x0
   14000e58e:	xor    r9d,r9d
   14000e591:	mov    edx,DWORD PTR [rbx+0x4]
   14000e594:	lea    rcx,[rsp+0x20]
   14000e599:	call   0x14000dcd0
   14000e59e:	mov    rbx,QWORD PTR [rsp+0x20]
   14000e5a3:	lea    r13,[r12*4+0x0]
   14000e5ab:	mov    rbp,QWORD PTR [rbx+0x10]
   14000e5af:	add    rbp,r13
   14000e5b2:	mov    rdi,QWORD PTR [rsp+0x48]
   14000e5b7:	mov    eax,DWORD PTR [rdi]
   14000e5b9:	cmp    eax,0x1
   14000e5bc:	je     0x14000e5cf
   14000e5be:	test   eax,eax
   14000e5c0:	je     0x14000e5cf
   14000e5c2:	mov    edx,DWORD PTR [rdi+0x4]
   14000e5c5:	lea    rcx,[rsp+0x48]
   14000e5ca:	call   0x1400048c0
   14000e5cf:	mov    rdi,QWORD PTR [rsp+0x48]
   14000e5d4:	movsxd rax,DWORD PTR [rdi+0x8]
   14000e5d8:	add    rax,r12
   14000e5db:	mov    rax,QWORD PTR [rdi+rax*8+0x10]
   14000e5e0:	mov    ecx,DWORD PTR [rax+0x4]
   14000e5e3:	cmp    DWORD PTR [rbp+rbx*1+0x0],ecx
   14000e5e7:	jne    0x14000e6fc
   14000e5ed:	lea    rdx,[rsp+0xe0]
   14000e5f5:	mov    rcx,QWORD PTR [rsp+0x1b8]
   14000e5fd:	call   QWORD PTR [rip+0xcfe5]        # 0x14001b5e8
   14000e603:	mov    r14,rax
   14000e606:	or     r15d,0x2
   14000e60a:	mov    DWORD PTR [rsp+0x50],r15d
   14000e60f:	mov    ecx,DWORD PTR [rbx]
   14000e611:	cmp    ecx,0x1
   14000e614:	je     0x14000e666
   14000e616:	test   ecx,ecx
   14000e618:	je     0x14000e666
   14000e61a:	mov    r8d,DWORD PTR [rbx+0x8]
   14000e61e:	btr    r8d,0x1f
   14000e623:	test   r8d,r8d
   14000e626:	jne    0x14000e646
   14000e628:	lea    r9d,[r8+0x2]
   14000e62c:	xor    r8d,r8d
   14000e62f:	lea    edx,[r9+0x6]
   14000e633:	lea    ecx,[rdx-0x4]
   14000e636:	call   QWORD PTR [rip+0xcf8c]        # 0x14001b5c8
   14000e63c:	mov    rbx,rax
   14000e63f:	mov    QWORD PTR [rsp+0x20],rax
   14000e644:	jmp    0x14000e666
   14000e646:	mov    DWORD PTR [rsp+0x138],0x0
   14000e651:	xor    r9d,r9d
   14000e654:	mov    edx,DWORD PTR [rbx+0x4]
   14000e657:	lea    rcx,[rsp+0x20]
   14000e65c:	call   0x14000dcd0
   14000e661:	mov    rbx,QWORD PTR [rsp+0x20]
   14000e666:	mov    rbp,QWORD PTR [rbx+0x10]
   14000e66a:	add    rbp,r13
   14000e66d:	add    rbp,rbx
   14000e670:	mov    eax,DWORD PTR [rbx]
   14000e672:	cmp    eax,0x1
   14000e675:	je     0x14000e6c7
   14000e677:	test   eax,eax
   14000e679:	je     0x14000e6c7
   14000e67b:	mov    r8d,DWORD PTR [rbx+0x8]
   14000e67f:	btr    r8d,0x1f
   14000e684:	test   r8d,r8d
   14000e687:	jne    0x14000e6a7
   14000e689:	lea    r9d,[r8+0x2]
   14000e68d:	xor    r8d,r8d
   14000e690:	lea    edx,[r9+0x6]
   14000e694:	lea    ecx,[rdx-0x4]
   14000e697:	call   QWORD PTR [rip+0xcf2b]        # 0x14001b5c8
   14000e69d:	mov    rbx,rax
   14000e6a0:	mov    QWORD PTR [rsp+0x20],rax
   14000e6a5:	jmp    0x14000e6c7
   14000e6a7:	mov    DWORD PTR [rsp+0xa4],0x0
   14000e6b2:	xor    r9d,r9d
   14000e6b5:	mov    edx,DWORD PTR [rbx+0x4]
   14000e6b8:	lea    rcx,[rsp+0x20]
   14000e6bd:	call   0x14000dcd0
   14000e6c2:	mov    rbx,QWORD PTR [rsp+0x20]
   14000e6c7:	mov    rdi,QWORD PTR [rbx+0x10]
   14000e6cb:	add    rdi,r13
   14000e6ce:	add    rdi,rbx
   14000e6d1:	mov    rcx,r14
   14000e6d4:	call   QWORD PTR [rip+0xcb3e]        # 0x14001b218
   14000e6da:	mov    ecx,DWORD PTR [rsp+0x78]
   14000e6de:	inc    ecx
   14000e6e0:	movsxd rdx,ecx
   14000e6e3:	movsxd rcx,DWORD PTR [rbp+0x0]
   14000e6e7:	sub    rdx,rcx
   14000e6ea:	lea    rcx,[rdx+rax*1]
   14000e6ee:	call   0x14000d7b0
   14000e6f3:	cmp    eax,DWORD PTR [rdi]
   14000e6f5:	jne    0x14000e6fc
   14000e6f7:	mov    dil,0x1
   14000e6fa:	jmp    0x14000e6ff
   14000e6fc:	xor    dil,dil
   14000e6ff:	test   r15b,0x2
   14000e703:	je     0x14000e71c
   14000e705:	and    r15d,0xfffffffd
   14000e709:	mov    DWORD PTR [rsp+0x50],r15d
   14000e70e:	lea    rcx,[rsp+0xe0]
   14000e716:	call   QWORD PTR [rip+0xcf04]        # 0x14001b620
   14000e71c:	test   dil,dil
   14000e71f:	je     0x14000e818
   14000e725:	mov    rbp,QWORD PTR [rsp+0x58]
   14000e72a:	mov    r14,QWORD PTR [rsp+0x80]
   14000e732:	cmp    rbp,r14
   14000e735:	je     0x14000e803
   14000e73b:	mov    eax,DWORD PTR [rbx]
   14000e73d:	cmp    eax,0x1
   14000e740:	je     0x14000e792
   14000e742:	test   eax,eax
   14000e744:	je     0x14000e792
   14000e746:	mov    r8d,DWORD PTR [rbx+0x8]
   14000e74a:	btr    r8d,0x1f
   14000e74f:	test   r8d,r8d
   14000e752:	jne    0x14000e772
   14000e754:	lea    r9d,[r8+0x2]
   14000e758:	xor    r8d,r8d
   14000e75b:	lea    edx,[r9+0x6]
   14000e75f:	lea    ecx,[rdx-0x4]
   14000e762:	call   QWORD PTR [rip+0xce60]        # 0x14001b5c8
   14000e768:	mov    rbx,rax
   14000e76b:	mov    QWORD PTR [rsp+0x20],rax
   14000e770:	jmp    0x14000e792
   14000e772:	mov    DWORD PTR [rsp+0xa8],0x0
   14000e77d:	xor    r9d,r9d
   14000e780:	mov    edx,DWORD PTR [rbx+0x4]
   14000e783:	lea    rcx,[rsp+0x20]
   14000e788:	call   0x14000dcd0
   14000e78d:	mov    rbx,QWORD PTR [rsp+0x20]
   14000e792:	mov    rax,QWORD PTR [rbx+0x10]
   14000e796:	lea    rdi,[rax+r12*4]
   14000e79a:	add    rdi,rbx
   14000e79d:	mov    eax,DWORD PTR [rbx]
   14000e79f:	cmp    eax,0x1
   14000e7a2:	je     0x14000e7f4
   14000e7a4:	test   eax,eax
   14000e7a6:	je     0x14000e7f4
   14000e7a8:	mov    r8d,DWORD PTR [rbx+0x8]
   14000e7ac:	btr    r8d,0x1f
   14000e7b1:	test   r8d,r8d
   14000e7b4:	jne    0x14000e7d4
   14000e7b6:	lea    r9d,[r8+0x2]
   14000e7ba:	xor    r8d,r8d
   14000e7bd:	lea    edx,[r9+0x6]
   14000e7c1:	lea    ecx,[rdx-0x4]
   14000e7c4:	call   QWORD PTR [rip+0xcdfe]        # 0x14001b5c8
   14000e7ca:	mov    rbx,rax
   14000e7cd:	mov    QWORD PTR [rsp+0x20],rax
   14000e7d2:	jmp    0x14000e7f4
   14000e7d4:	mov    DWORD PTR [rsp+0xf8],0x0
   14000e7df:	xor    r9d,r9d
   14000e7e2:	mov    edx,DWORD PTR [rbx+0x4]
   14000e7e5:	lea    rcx,[rsp+0x20]
   14000e7ea:	call   0x14000dcd0
   14000e7ef:	mov    rbx,QWORD PTR [rsp+0x20]
   14000e7f4:	mov    rax,QWORD PTR [rbx+0x10]
   14000e7f8:	lea    rcx,[rax+rbp*4]
   14000e7fc:	mov    eax,DWORD PTR [rcx+rbx*1]
   14000e7ff:	cmp    DWORD PTR [rdi],eax
   14000e801:	jle    0x14000e830
   14000e803:	mov    eax,DWORD PTR [rsp+0x70]
   14000e807:	mov    r13d,eax
   14000e80a:	mov    DWORD PTR [rsp+0x28],eax
   14000e80e:	mov    rbp,r12
   14000e811:	mov    QWORD PTR [rsp+0x58],r12
   14000e816:	jmp    0x14000e839
   14000e818:	mov    rbp,QWORD PTR [rsp+0x58]
   14000e81d:	mov    eax,DWORD PTR [rsp+0x70]
   14000e821:	mov    r14,QWORD PTR [rsp+0x80]
   14000e829:	mov    r13d,DWORD PTR [rsp+0x28]
   14000e82e:	jmp    0x14000e839
   14000e830:	mov    eax,DWORD PTR [rsp+0x70]
   14000e834:	mov    r13d,DWORD PTR [rsp+0x28]
   14000e839:	inc    eax
   14000e83b:	mov    DWORD PTR [rsp+0x70],eax
   14000e83f:	inc    r12
   14000e842:	cmp    r12,r14
   14000e845:	mov    rdx,QWORD PTR [rsp+0x40]
   14000e84a:	jl     0x14000e4d4
   14000e850:	mov    QWORD PTR [rsp+0x40],rsi
   14000e855:	cmp    rbp,r14
   14000e858:	jne    0x14000e876
   14000e85a:	mov    eax,DWORD PTR [rsp+0x68]
   14000e85e:	mov    ecx,DWORD PTR [rsp+0x60]
   14000e862:	inc    eax
   14000e864:	mov    DWORD PTR [rsp+0x68],eax
   14000e868:	cmp    eax,0x2
   14000e86b:	jge    0x14000ea10
   14000e871:	jmp    0x14000e4b0
   14000e876:	mov    r12,QWORD PTR [rsp+0x1b0]
   14000e87e:	mov    rax,QWORD PTR [r12]
   14000e882:	mov    edi,DWORD PTR [rax+0x4]
   14000e885:	mov    eax,DWORD PTR [rbx]
   14000e887:	cmp    eax,0x1
   14000e88a:	je     0x14000e8dc
   14000e88c:	test   eax,eax
   14000e88e:	je     0x14000e8dc
   14000e890:	mov    r8d,DWORD PTR [rbx+0x8]
   14000e894:	btr    r8d,0x1f
   14000e899:	test   r8d,r8d
   14000e89c:	jne    0x14000e8bc
   14000e89e:	lea    r9d,[r8+0x2]
   14000e8a2:	xor    r8d,r8d
   14000e8a5:	lea    edx,[r9+0x6]
   14000e8a9:	lea    ecx,[rdx-0x4]
   14000e8ac:	call   QWORD PTR [rip+0xcd16]        # 0x14001b5c8
   14000e8b2:	mov    rbx,rax
   14000e8b5:	mov    QWORD PTR [rsp+0x20],rax
   14000e8ba:	jmp    0x14000e8dc
   14000e8bc:	mov    DWORD PTR [rsp+0xac],0x0
   14000e8c7:	xor    r9d,r9d
   14000e8ca:	mov    edx,DWORD PTR [rbx+0x4]
   14000e8cd:	lea    rcx,[rsp+0x20]
   14000e8d2:	call   0x14000dcd0
   14000e8d7:	mov    rbx,QWORD PTR [rsp+0x20]
   14000e8dc:	mov    rax,QWORD PTR [rbx+0x10]
   14000e8e0:	lea    rcx,[rax+rbp*4]
   14000e8e4:	sub    edi,DWORD PTR [rcx+rbx*1]
   14000e8e7:	mov    edx,edi
   14000e8e9:	mov    rcx,r12
   14000e8ec:	call   QWORD PTR [rip+0xc9ce]        # 0x14001b2c0
   14000e8f2:	mov    rdx,QWORD PTR [rsp+0x30]
   14000e8f7:	mov    eax,DWORD PTR [rdx]
   14000e8f9:	cmp    eax,0x1
   14000e8fc:	je     0x14000e914
   14000e8fe:	test   eax,eax
   14000e900:	je     0x14000e914
   14000e902:	mov    edx,DWORD PTR [rdx+0x4]
   14000e905:	lea    rcx,[rsp+0x30]
   14000e90a:	call   0x1400048c0
   14000e90f:	mov    rdx,QWORD PTR [rsp+0x30]
   14000e914:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000e918:	movsxd rax,r13d
   14000e91b:	add    rcx,rax
   14000e91e:	lea    rdx,[rdx+rcx*8+0x10]
   14000e923:	mov    rcx,r12
   14000e926:	call   QWORD PTR [rip+0xccd4]        # 0x14001b600
   14000e92c:	mov    edx,DWORD PTR [rsi]
   14000e92e:	cmp    edx,0x1
   14000e931:	je     0x14000e98d
   14000e933:	test   edx,edx
   14000e935:	je     0x14000e98d
   14000e937:	mov    r8d,DWORD PTR [rsi+0x8]
   14000e93b:	btr    r8d,0x1f
   14000e940:	test   r8d,r8d
   14000e943:	jne    0x14000e968
   14000e945:	lea    r9d,[r8+0x2]
   14000e949:	xor    r8d,r8d
   14000e94c:	lea    edx,[r9+0x6]
   14000e950:	lea    ecx,[rdx-0x7]
   14000e953:	call   QWORD PTR [rip+0xcc6f]        # 0x14001b5c8
   14000e959:	mov    rsi,rax
   14000e95c:	mov    QWORD PTR [rsp+0x40],rax
   14000e961:	mov    QWORD PTR [rsp+0x38],rax
   14000e966:	jmp    0x14000e98d
   14000e968:	mov    DWORD PTR [rsp+0xa0],0x0
   14000e973:	xor    r9d,r9d
   14000e976:	mov    edx,DWORD PTR [rsi+0x4]
   14000e979:	lea    rcx,[rsp+0x38]
   14000e97e:	call   0x14000db30
   14000e983:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e988:	mov    QWORD PTR [rsp+0x40],rsi
   14000e98d:	mov    rcx,QWORD PTR [rsi+0x10]
   14000e991:	add    rcx,rbp
   14000e994:	mov    BYTE PTR [rcx+rsi*1],0x1
   14000e998:	xor    edi,edi
   14000e99a:	nop    WORD PTR [rax+rax*1+0x0]
   14000e9a0:	mov    eax,DWORD PTR [rbx]
   14000e9a2:	cmp    eax,0x1
   14000e9a5:	je     0x14000e9f7
   14000e9a7:	test   eax,eax
   14000e9a9:	je     0x14000e9f7
   14000e9ab:	mov    r8d,DWORD PTR [rbx+0x8]
   14000e9af:	btr    r8d,0x1f
   14000e9b4:	test   r8d,r8d
   14000e9b7:	jne    0x14000e9d7
   14000e9b9:	lea    r9d,[r8+0x2]
   14000e9bd:	xor    r8d,r8d
   14000e9c0:	lea    edx,[r9+0x6]
   14000e9c4:	lea    ecx,[rdx-0x4]
   14000e9c7:	call   QWORD PTR [rip+0xcbfb]        # 0x14001b5c8
   14000e9cd:	mov    rbx,rax
   14000e9d0:	mov    QWORD PTR [rsp+0x20],rax
   14000e9d5:	jmp    0x14000e9f7
   14000e9d7:	mov    DWORD PTR [rsp+0xb8],0x0
   14000e9e2:	xor    r9d,r9d
   14000e9e5:	mov    edx,DWORD PTR [rbx+0x4]
   14000e9e8:	lea    rcx,[rsp+0x20]
   14000e9ed:	call   0x14000dcd0
   14000e9f2:	mov    rbx,QWORD PTR [rsp+0x20]
   14000e9f7:	mov    rax,QWORD PTR [rbx+0x10]
   14000e9fb:	lea    rcx,[rax+rdi*4]
   14000e9ff:	mov    DWORD PTR [rcx+rbx*1],0x0
   14000ea06:	inc    rdi
   14000ea09:	cmp    rdi,r14
   14000ea0c:	jl     0x14000e9a0
   14000ea0e:	jmp    0x14000ea18
   14000ea10:	mov    r12,QWORD PTR [rsp+0x1b0]
   14000ea18:	mov    edx,DWORD PTR [rsp+0x78]
   14000ea1c:	inc    edx
   14000ea1e:	mov    DWORD PTR [rsp+0x78],edx
   14000ea22:	mov    rcx,QWORD PTR [rsp+0x1b8]
   14000ea2a:	mov    rax,QWORD PTR [rcx]
   14000ea2d:	cmp    edx,DWORD PTR [rax+0x4]
   14000ea30:	jl     0x14000e2a2
   14000ea36:	mov    QWORD PTR [rsp+0x28],rbx
   14000ea3b:	mov    r13d,DWORD PTR [rsp+0x60]
   14000ea40:	xor    r12d,r12d
   14000ea43:	xor    ebp,ebp
   14000ea45:	test   r13d,r13d
   14000ea48:	jle    0x14000ebd4
   14000ea4e:	or     rbx,0xffffffffffffffff
   14000ea52:	mov    r15,QWORD PTR [rsp+0x1b0]
   14000ea5a:	nop    WORD PTR [rax+rax*1+0x0]
   14000ea60:	mov    eax,DWORD PTR [rsi]
   14000ea62:	cmp    eax,0x1
   14000ea65:	je     0x14000eab7
   14000ea67:	test   eax,eax
   14000ea69:	je     0x14000eab7
   14000ea6b:	mov    r8d,DWORD PTR [rsi+0x8]
   14000ea6f:	btr    r8d,0x1f
   14000ea74:	test   r8d,r8d
   14000ea77:	jne    0x14000ea97
   14000ea79:	lea    r9d,[r8+0x2]
   14000ea7d:	xor    r8d,r8d
   14000ea80:	lea    edx,[r9+0x6]
   14000ea84:	lea    ecx,[rdx-0x7]
   14000ea87:	call   QWORD PTR [rip+0xcb3b]        # 0x14001b5c8
   14000ea8d:	mov    rsi,rax
   14000ea90:	mov    QWORD PTR [rsp+0x38],rax
   14000ea95:	jmp    0x14000eab7
   14000ea97:	mov    DWORD PTR [rsp+0x1b8],0x0
   14000eaa2:	xor    r9d,r9d
   14000eaa5:	mov    edx,DWORD PTR [rsi+0x4]
   14000eaa8:	lea    rcx,[rsp+0x38]
   14000eaad:	call   0x14000db30
   14000eab2:	mov    rsi,QWORD PTR [rsp+0x38]
   14000eab7:	mov    rcx,QWORD PTR [rsi+0x10]
   14000eabb:	add    rcx,rbp
   14000eabe:	cmp    BYTE PTR [rcx+rsi*1],0x0
   14000eac2:	jne    0x14000ebbb
   14000eac8:	xor    eax,eax
   14000eaca:	mov    rcx,rbx
   14000eacd:	lea    rdi,[rip+0x101c0]        # 0x14001ec94
   14000ead4:	repnz scas al,BYTE PTR es:[rdi]
   14000ead6:	not    rcx
   14000ead9:	lea    rdx,[rcx-0x1]
   14000eadd:	lea    rcx,[rip+0x101b0]        # 0x14001ec94
   14000eae4:	call   QWORD PTR [rip+0xcb2e]        # 0x14001b618
   14000eaea:	mov    QWORD PTR [rsp+0x58],rax
   14000eaef:	xor    eax,eax
   14000eaf1:	mov    rcx,rbx
   14000eaf4:	lea    rdi,[rip+0x10195]        # 0x14001ec90
   14000eafb:	repnz scas al,BYTE PTR es:[rdi]
   14000eafd:	not    rcx
   14000eb00:	lea    rdx,[rcx-0x1]
   14000eb04:	lea    rcx,[rip+0x10185]        # 0x14001ec90
   14000eb0b:	call   QWORD PTR [rip+0xcb07]        # 0x14001b618
   14000eb11:	mov    QWORD PTR [rsp+0x80],rax
   14000eb19:	mov    rax,QWORD PTR [rsp+0x30]
   14000eb1e:	mov    ecx,DWORD PTR [rax]
   14000eb20:	cmp    ecx,0x1
   14000eb23:	je     0x14000eb3b
   14000eb25:	test   ecx,ecx
   14000eb27:	je     0x14000eb3b
   14000eb29:	mov    edx,DWORD PTR [rax+0x4]
   14000eb2c:	lea    rcx,[rsp+0x30]
   14000eb31:	call   0x1400048c0
   14000eb36:	mov    rax,QWORD PTR [rsp+0x30]
   14000eb3b:	movsxd rdx,DWORD PTR [rax+0x8]
   14000eb3f:	movsxd rcx,r12d
   14000eb42:	add    rdx,rcx
   14000eb45:	lea    r8,[rax+rdx*8+0x10]
   14000eb4a:	lea    rdx,[rsp+0x80]
   14000eb52:	lea    rcx,[rsp+0x100]
   14000eb5a:	call   0x14000d760
   14000eb5f:	nop
   14000eb60:	lea    r8,[rsp+0x58]
   14000eb65:	mov    rdx,rax
   14000eb68:	lea    rcx,[rsp+0xf0]
   14000eb70:	call   0x14000d760
   14000eb75:	nop
   14000eb76:	mov    rdx,rax
   14000eb79:	mov    rcx,r15
   14000eb7c:	call   QWORD PTR [rip+0xca7e]        # 0x14001b600
   14000eb82:	nop
   14000eb83:	lea    rcx,[rsp+0xf0]
   14000eb8b:	call   QWORD PTR [rip+0xca97]        # 0x14001b628
   14000eb91:	nop
   14000eb92:	lea    rcx,[rsp+0x100]
   14000eb9a:	call   QWORD PTR [rip+0xca88]        # 0x14001b628
   14000eba0:	nop
   14000eba1:	lea    rcx,[rsp+0x80]
   14000eba9:	call   QWORD PTR [rip+0xca79]        # 0x14001b628
   14000ebaf:	nop
   14000ebb0:	lea    rcx,[rsp+0x58]
   14000ebb5:	call   QWORD PTR [rip+0xca6d]        # 0x14001b628
   14000ebbb:	inc    r12d
   14000ebbe:	inc    rbp
   14000ebc1:	cmp    rbp,r14
   14000ebc4:	jl     0x14000ea60
   14000ebca:	mov    QWORD PTR [rsp+0x40],rsi
   14000ebcf:	mov    rbx,QWORD PTR [rsp+0x28]
   14000ebd4:	xor    r15d,r15d
   14000ebd7:	test   r13d,r13d
   14000ebda:	jle    0x14000ee84
   14000ebe0:	xor    r14d,r14d
   14000ebe3:	mov    esi,DWORD PTR [rsp+0x60]
   14000ebe7:	or     rbx,0xffffffffffffffff
   14000ebeb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ebf0:	xor    r12d,r12d
   14000ebf3:	xor    ebp,ebp
   14000ebf5:	cmp    r15d,r12d
   14000ebf8:	je     0x14000ee5c
   14000ebfe:	mov    rdi,QWORD PTR [rsp+0x48]
   14000ec03:	mov    eax,DWORD PTR [rdi]
   14000ec05:	cmp    eax,0x1
   14000ec08:	je     0x14000ec1b
   14000ec0a:	test   eax,eax
   14000ec0c:	je     0x14000ec1b
   14000ec0e:	mov    edx,DWORD PTR [rdi+0x4]
   14000ec11:	lea    rcx,[rsp+0x48]
   14000ec16:	call   0x1400048c0
   14000ec1b:	mov    rdi,QWORD PTR [rsp+0x48]
   14000ec20:	movsxd rax,DWORD PTR [rdi+0x8]
   14000ec24:	add    rax,rbp
   14000ec27:	lea    r13,[rdi+rax*8+0x10]
   14000ec2c:	mov    eax,DWORD PTR [rdi]
   14000ec2e:	cmp    eax,0x1
   14000ec31:	je     0x14000ec44
   14000ec33:	test   eax,eax
   14000ec35:	je     0x14000ec44
   14000ec37:	mov    edx,DWORD PTR [rdi+0x4]
   14000ec3a:	lea    rcx,[rsp+0x48]
   14000ec3f:	call   0x1400048c0
   14000ec44:	mov    rdi,QWORD PTR [rsp+0x48]
   14000ec49:	movsxd rax,DWORD PTR [rdi+0x8]
   14000ec4d:	add    rax,r14
   14000ec50:	lea    rcx,[rdi+rax*8+0x10]
   14000ec55:	mov    rdx,r13
   14000ec58:	call   QWORD PTR [rip+0xc9d2]        # 0x14001b630
   14000ec5e:	test   al,al
   14000ec60:	je     0x14000ee5c
   14000ec66:	mov    rax,QWORD PTR [rsp+0x30]
   14000ec6b:	mov    ecx,DWORD PTR [rax]
   14000ec6d:	cmp    ecx,0x1
   14000ec70:	je     0x14000ec88
   14000ec72:	test   ecx,ecx
   14000ec74:	je     0x14000ec88
   14000ec76:	mov    edx,DWORD PTR [rax+0x4]
   14000ec79:	lea    rcx,[rsp+0x30]
   14000ec7e:	call   0x1400048c0
   14000ec83:	mov    rax,QWORD PTR [rsp+0x30]
   14000ec88:	movsxd rcx,DWORD PTR [rax+0x8]
   14000ec8c:	add    rcx,rbp
   14000ec8f:	lea    rdi,[rax+rcx*8+0x10]
   14000ec94:	mov    ecx,DWORD PTR [rax]
   14000ec96:	cmp    ecx,0x1
   14000ec99:	je     0x14000ecb1
   14000ec9b:	test   ecx,ecx
   14000ec9d:	je     0x14000ecb1
   14000ec9f:	mov    edx,DWORD PTR [rax+0x4]
   14000eca2:	lea    rcx,[rsp+0x30]
   14000eca7:	call   0x1400048c0
   14000ecac:	mov    rax,QWORD PTR [rsp+0x30]
   14000ecb1:	movsxd rcx,DWORD PTR [rax+0x8]
   14000ecb5:	add    rcx,r14
   14000ecb8:	lea    rcx,[rax+rcx*8+0x10]
   14000ecbd:	mov    rdx,rdi
   14000ecc0:	call   QWORD PTR [rip+0xc822]        # 0x14001b4e8
   14000ecc6:	test   al,al
   14000ecc8:	je     0x14000ee5c
   14000ecce:	xor    eax,eax
   14000ecd0:	mov    rcx,rbx
   14000ecd3:	lea    rdi,[rip+0xffba]        # 0x14001ec94
   14000ecda:	repnz scas al,BYTE PTR es:[rdi]
   14000ecdc:	not    rcx
   14000ecdf:	lea    rdx,[rcx-0x1]
   14000ece3:	lea    rcx,[rip+0xffaa]        # 0x14001ec94
   14000ecea:	call   QWORD PTR [rip+0xc928]        # 0x14001b618
   14000ecf0:	mov    QWORD PTR [rsp+0x70],rax
   14000ecf5:	xor    eax,eax
   14000ecf7:	mov    rcx,rbx
   14000ecfa:	lea    rdi,[rip+0xff87]        # 0x14001ec88
   14000ed01:	repnz scas al,BYTE PTR es:[rdi]
   14000ed03:	not    rcx
   14000ed06:	lea    rdx,[rcx-0x1]
   14000ed0a:	lea    rcx,[rip+0xff77]        # 0x14001ec88
   14000ed11:	call   QWORD PTR [rip+0xc901]        # 0x14001b618
   14000ed17:	mov    QWORD PTR [rsp+0x78],rax
   14000ed1c:	xor    eax,eax
   14000ed1e:	mov    rcx,rbx
   14000ed21:	lea    rdi,[rip+0xff68]        # 0x14001ec90
   14000ed28:	repnz scas al,BYTE PTR es:[rdi]
   14000ed2a:	not    rcx
   14000ed2d:	lea    rdx,[rcx-0x1]
   14000ed31:	lea    rcx,[rip+0xff58]        # 0x14001ec90
   14000ed38:	call   QWORD PTR [rip+0xc8da]        # 0x14001b618
   14000ed3e:	mov    QWORD PTR [rsp+0x68],rax
   14000ed43:	mov    rax,QWORD PTR [rsp+0x30]
   14000ed48:	mov    ecx,DWORD PTR [rax]
   14000ed4a:	cmp    ecx,0x1
   14000ed4d:	je     0x14000ed65
   14000ed4f:	test   ecx,ecx
   14000ed51:	je     0x14000ed65
   14000ed53:	mov    edx,DWORD PTR [rax+0x4]
   14000ed56:	lea    rcx,[rsp+0x30]
   14000ed5b:	call   0x1400048c0
   14000ed60:	mov    rax,QWORD PTR [rsp+0x30]
   14000ed65:	movsxd rcx,DWORD PTR [rax+0x8]
   14000ed69:	add    rcx,r14
   14000ed6c:	lea    r8,[rax+rcx*8+0x10]
   14000ed71:	lea    rdx,[rsp+0x68]
   14000ed76:	lea    rcx,[rsp+0x130]
   14000ed7e:	call   0x14000d760
   14000ed83:	nop
   14000ed84:	lea    r8,[rsp+0x78]
   14000ed89:	mov    rdx,rax
   14000ed8c:	lea    rcx,[rsp+0x120]
   14000ed94:	call   0x14000d760
   14000ed99:	mov    rdi,rax
   14000ed9c:	mov    rcx,QWORD PTR [rsp+0x30]
   14000eda1:	mov    edx,DWORD PTR [rcx]
   14000eda3:	cmp    edx,0x1
   14000eda6:	je     0x14000edbe
   14000eda8:	test   edx,edx
   14000edaa:	je     0x14000edbe
   14000edac:	mov    edx,DWORD PTR [rcx+0x4]
   14000edaf:	lea    rcx,[rsp+0x30]
   14000edb4:	call   0x1400048c0
   14000edb9:	mov    rcx,QWORD PTR [rsp+0x30]
   14000edbe:	movsxd rax,DWORD PTR [rcx+0x8]
   14000edc2:	add    rax,rbp
   14000edc5:	lea    r8,[rcx+rax*8+0x10]
   14000edca:	mov    rdx,rdi
   14000edcd:	lea    rcx,[rsp+0x110]
   14000edd5:	call   0x14000d760
   14000edda:	nop
   14000eddb:	lea    r8,[rsp+0x70]
   14000ede0:	mov    rdx,rax
   14000ede3:	lea    rcx,[rsp+0x60]
   14000ede8:	call   0x14000d760
   14000eded:	nop
   14000edee:	mov    rdx,rax
   14000edf1:	mov    rcx,QWORD PTR [rsp+0x1b0]
   14000edf9:	call   QWORD PTR [rip+0xc801]        # 0x14001b600
   14000edff:	nop
   14000ee00:	lea    rcx,[rsp+0x60]
   14000ee05:	call   QWORD PTR [rip+0xc81d]        # 0x14001b628
   14000ee0b:	nop
   14000ee0c:	lea    rcx,[rsp+0x110]
   14000ee14:	call   QWORD PTR [rip+0xc80e]        # 0x14001b628
   14000ee1a:	nop
   14000ee1b:	lea    rcx,[rsp+0x120]
   14000ee23:	call   QWORD PTR [rip+0xc7ff]        # 0x14001b628
   14000ee29:	nop
   14000ee2a:	lea    rcx,[rsp+0x130]
   14000ee32:	call   QWORD PTR [rip+0xc7f0]        # 0x14001b628
   14000ee38:	nop
   14000ee39:	lea    rcx,[rsp+0x68]
   14000ee3e:	call   QWORD PTR [rip+0xc7e4]        # 0x14001b628
   14000ee44:	nop
   14000ee45:	lea    rcx,[rsp+0x78]
   14000ee4a:	call   QWORD PTR [rip+0xc7d8]        # 0x14001b628
   14000ee50:	nop
   14000ee51:	lea    rcx,[rsp+0x70]
   14000ee56:	call   QWORD PTR [rip+0xc7cc]        # 0x14001b628
   14000ee5c:	inc    r12d
   14000ee5f:	inc    rbp
   14000ee62:	cmp    r12d,esi
   14000ee65:	jl     0x14000ebf5
   14000ee6b:	inc    r15d
   14000ee6e:	inc    r14
   14000ee71:	cmp    r15d,esi
   14000ee74:	jl     0x14000ebf0
   14000ee7a:	mov    rbx,QWORD PTR [rsp+0x28]
   14000ee7f:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ee84:	mov    eax,DWORD PTR [rbx]
   14000ee86:	test   eax,eax
   14000ee88:	je     0x14000eead
   14000ee8a:	cmp    eax,0xffffffff
   14000ee8d:	je     0x14000eec0
   14000ee8f:	lock add DWORD PTR [rbx],0xffffffff
   14000ee93:	setne  al
   14000ee96:	test   al,al
   14000ee98:	jne    0x14000eea6
   14000ee9a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ee9f:	mov    rbx,QWORD PTR [rsp+0x20]
   14000eea4:	jmp    0x14000eead
   14000eea6:	mov    rsi,QWORD PTR [rsp+0x38]
   14000eeab:	jmp    0x14000eec0
   14000eead:	mov    edx,0x4
   14000eeb2:	lea    r8d,[rdx+0x4]
   14000eeb6:	mov    rcx,rbx
   14000eeb9:	call   QWORD PTR [rip+0xc701]        # 0x14001b5c0
   14000eebf:	nop
   14000eec0:	mov    eax,DWORD PTR [rsi]
   14000eec2:	test   eax,eax
   14000eec4:	je     0x14000eedb
   14000eec6:	cmp    eax,0xffffffff
   14000eec9:	je     0x14000eeee
   14000eecb:	lock add DWORD PTR [rsi],0xffffffff
   14000eecf:	setne  al
   14000eed2:	test   al,al
   14000eed4:	jne    0x14000eeee
   14000eed6:	mov    rsi,QWORD PTR [rsp+0x38]
   14000eedb:	mov    edx,0x1
   14000eee0:	lea    r8d,[rdx+0x7]
   14000eee4:	mov    rcx,rsi
   14000eee7:	call   QWORD PTR [rip+0xc6d3]        # 0x14001b5c0
   14000eeed:	nop
   14000eeee:	mov    rbx,QWORD PTR [rsp+0x30]
   14000eef3:	mov    eax,DWORD PTR [rbx]
   14000eef5:	test   eax,eax
   14000eef7:	je     0x14000ef11
   14000eef9:	cmp    eax,0xffffffff
   14000eefc:	je     0x14000ef51
   14000eefe:	or     rcx,0xffffffffffffffff
   14000ef02:	mov    eax,ecx
   14000ef04:	lock xadd DWORD PTR [rbx],eax
   14000ef08:	add    eax,ecx
   14000ef0a:	setne  al
   14000ef0d:	test   al,al
   14000ef0f:	jne    0x14000ef55
   14000ef11:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ef16:	movsxd rax,DWORD PTR [rbx+0xc]
   14000ef1a:	lea    rdi,[rbx+rax*8+0x10]
   14000ef1f:	movsxd rax,DWORD PTR [rbx+0x8]
   14000ef23:	lea    rsi,[rbx+rax*8+0x10]
   14000ef28:	cmp    rsi,rdi
   14000ef2b:	je     0x14000ef42
   14000ef2d:	nop    DWORD PTR [rax]
   14000ef30:	sub    rdi,0x8
   14000ef34:	mov    rcx,rdi
   14000ef37:	call   QWORD PTR [rip+0xc6eb]        # 0x14001b628
   14000ef3d:	cmp    rdi,rsi
   14000ef40:	jne    0x14000ef30
   14000ef42:	mov    rcx,rbx
   14000ef45:	call   QWORD PTR [rip+0xc345]        # 0x14001b290
   14000ef4b:	or     rcx,0xffffffffffffffff
   14000ef4f:	jmp    0x14000ef55
   14000ef51:	or     rcx,0xffffffffffffffff
   14000ef55:	mov    rdi,QWORD PTR [rsp+0x48]
   14000ef5a:	mov    eax,DWORD PTR [rdi]
   14000ef5c:	test   eax,eax
   14000ef5e:	je     0x14000ef87
   14000ef60:	cmp    eax,0xffffffff
   14000ef63:	je     0x14000ef7d
   14000ef65:	lock xadd DWORD PTR [rdi],ecx
   14000ef69:	add    ecx,0xffffffff
   14000ef6c:	setne  al
   14000ef6f:	test   al,al
   14000ef71:	je     0x14000ef87
   14000ef73:	mov    rax,QWORD PTR [rsp+0x1b0]
   14000ef7b:	jmp    0x14000efc6
   14000ef7d:	mov    rax,QWORD PTR [rsp+0x1b0]
   14000ef85:	jmp    0x14000efc6
   14000ef87:	mov    rdi,QWORD PTR [rsp+0x48]
   14000ef8c:	movsxd rax,DWORD PTR [rdi+0xc]
   14000ef90:	lea    rbx,[rdi+rax*8+0x10]
   14000ef95:	movsxd rax,DWORD PTR [rdi+0x8]
   14000ef99:	lea    rsi,[rdi+rax*8+0x10]
   14000ef9e:	cmp    rsi,rbx
   14000efa1:	je     0x14000efb5
   14000efa3:	sub    rbx,0x8
   14000efa7:	mov    rcx,rbx
   14000efaa:	call   QWORD PTR [rip+0xc678]        # 0x14001b628
   14000efb0:	cmp    rbx,rsi
   14000efb3:	jne    0x14000efa3
   14000efb5:	mov    rcx,rdi
   14000efb8:	call   QWORD PTR [rip+0xc2d2]        # 0x14001b290
   14000efbe:	mov    rax,QWORD PTR [rsp+0x1b0]
   14000efc6:	add    rsp,0x168
   14000efcd:	pop    r15
   14000efcf:	pop    r14
   14000efd1:	pop    r13
   14000efd3:	pop    r12
   14000efd5:	pop    rdi
   14000efd6:	pop    rsi
   14000efd7:	pop    rbp
   14000efd8:	pop    rbx
   14000efd9:	ret    
   14000efda:	int3   
   14000efdb:	int3   
   14000efdc:	int3   
   14000efdd:	int3   
   14000efde:	int3   
   14000efdf:	int3   
   14000efe0:	mov    QWORD PTR [rsp+0x10],rbx
   14000efe5:	push   rsi
   14000efe6:	sub    rsp,0x20
   14000efea:	mov    rbx,rcx
   14000efed:	call   QWORD PTR [rip+0xc5ad]        # 0x14001b5a0
   14000eff3:	mov    rdx,QWORD PTR [rbx]
   14000eff6:	mov    rcx,QWORD PTR [rdx+0x10]
   14000effa:	mov    rsi,rax
   14000effd:	test   rcx,rcx
   14000f000:	je     0x14000f019
   14000f002:	mov    rdx,rax
   14000f005:	call   0x14000da40
   14000f00a:	lea    rcx,[rsi+0x8]
   14000f00e:	mov    QWORD PTR [rsi+0x10],rax
   14000f012:	and    QWORD PTR [rax],0x3
   14000f016:	or     QWORD PTR [rax],rcx
   14000f019:	mov    rcx,QWORD PTR [rbx]
   14000f01c:	mov    eax,DWORD PTR [rcx]
   14000f01e:	test   eax,eax
   14000f020:	je     0x14000f032
   14000f022:	cmp    eax,0xffffffff
   14000f025:	je     0x14000f069
   14000f027:	lock add DWORD PTR [rcx],0xffffffff
   14000f02b:	setne  al
   14000f02e:	test   al,al
   14000f030:	jne    0x14000f069
   14000f032:	mov    QWORD PTR [rsp+0x30],rdi
   14000f037:	mov    rdi,QWORD PTR [rbx]
   14000f03a:	mov    rcx,QWORD PTR [rdi+0x10]
   14000f03e:	test   rcx,rcx
   14000f041:	je     0x14000f05b
   14000f043:	call   0x14000de80
   14000f048:	mov    rdx,QWORD PTR [rdi+0x10]
   14000f04c:	mov    r8d,0x8
   14000f052:	mov    rcx,rdi
   14000f055:	call   QWORD PTR [rip+0xc245]        # 0x14001b2a0
   14000f05b:	mov    rcx,rdi
   14000f05e:	call   QWORD PTR [rip+0xc234]        # 0x14001b298
   14000f064:	mov    rdi,QWORD PTR [rsp+0x30]
   14000f069:	mov    rcx,rsi
   14000f06c:	mov    QWORD PTR [rbx],rsi
   14000f06f:	mov    rbx,QWORD PTR [rsp+0x38]
   14000f074:	add    rsp,0x20
   14000f078:	pop    rsi
   14000f079:	rex.W jmp QWORD PTR [rip+0xc230]        # 0x14001b2b0
   14000f080:	sub    rsp,0x28
   14000f084:	mov    rdx,QWORD PTR [rcx]
   14000f087:	mov    eax,DWORD PTR [rdx]
   14000f089:	test   eax,eax
   14000f08b:	je     0x14000f09d
   14000f08d:	cmp    eax,0xffffffff
   14000f090:	je     0x14000f0d4
   14000f092:	lock add DWORD PTR [rdx],0xffffffff
   14000f096:	setne  al
   14000f099:	test   al,al
   14000f09b:	jne    0x14000f0d4
   14000f09d:	mov    QWORD PTR [rsp+0x20],rbx
   14000f0a2:	mov    rbx,QWORD PTR [rcx]
   14000f0a5:	mov    rcx,QWORD PTR [rbx+0x10]
   14000f0a9:	test   rcx,rcx
   14000f0ac:	je     0x14000f0c6
   14000f0ae:	call   0x14000de80
   14000f0b3:	mov    rdx,QWORD PTR [rbx+0x10]
   14000f0b7:	mov    r8d,0x8
   14000f0bd:	mov    rcx,rbx
   14000f0c0:	call   QWORD PTR [rip+0xc1da]        # 0x14001b2a0
   14000f0c6:	mov    rcx,rbx
   14000f0c9:	call   QWORD PTR [rip+0xc1c9]        # 0x14001b298
   14000f0cf:	mov    rbx,QWORD PTR [rsp+0x20]
   14000f0d4:	add    rsp,0x28
   14000f0d8:	ret    
   14000f0d9:	int3   
   14000f0da:	int3   
   14000f0db:	int3   
   14000f0dc:	int3   
   14000f0dd:	int3   
   14000f0de:	int3   
   14000f0df:	int3   
   14000f0e0:	mov    QWORD PTR [rsp+0x8],rcx
   14000f0e5:	push   rbx
   14000f0e6:	push   rbp
   14000f0e7:	push   rsi
   14000f0e8:	push   rdi
   14000f0e9:	push   r12
   14000f0eb:	push   r13
   14000f0ed:	push   r14
   14000f0ef:	push   r15
   14000f0f1:	sub    rsp,0x118
   14000f0f8:	mov    QWORD PTR [rsp+0xb0],0xfffffffffffffffe
   14000f104:	xor    ebp,ebp
   14000f106:	mov    DWORD PTR [rsp+0x170],ebp
   14000f10d:	mov    rbx,QWORD PTR [rip+0xc4c4]        # 0x14001b5d8
   14000f114:	mov    QWORD PTR [rsp+0x178],rbx
   14000f11c:	mov    QWORD PTR [rsp+0x30],rbx
   14000f121:	lea    rdx,[rsp+0x40]
   14000f126:	call   0x14000a490
   14000f12b:	nop
   14000f12c:	mov    DWORD PTR [rsp+0x168],ebp
   14000f133:	mov    rax,QWORD PTR [rsp+0x40]
   14000f138:	mov    ecx,DWORD PTR [rax]
   14000f13a:	cmp    ecx,0x1
   14000f13d:	je     0x14000f150
   14000f13f:	test   ecx,ecx
   14000f141:	je     0x14000f150
   14000f143:	mov    edx,DWORD PTR [rax+0x4]
   14000f146:	lea    rcx,[rsp+0x40]
   14000f14b:	call   0x140006fa0
   14000f150:	mov    rax,QWORD PTR [rsp+0x40]
   14000f155:	movsxd rcx,DWORD PTR [rax+0x8]
   14000f159:	lea    rsi,[rax+rcx*8+0x10]
   14000f15e:	or     r14d,0xffffffff
   14000f162:	mov    r13,QWORD PTR [rsp+0x48]
   14000f167:	nop    WORD PTR [rax+rax*1+0x0]
   14000f170:	mov    rax,QWORD PTR [rsp+0x40]
   14000f175:	mov    ecx,DWORD PTR [rax]
   14000f177:	cmp    ecx,0x1
   14000f17a:	je     0x14000f18d
   14000f17c:	test   ecx,ecx
   14000f17e:	je     0x14000f18d
   14000f180:	mov    edx,DWORD PTR [rax+0x4]
   14000f183:	lea    rcx,[rsp+0x40]
   14000f188:	call   0x140006fa0
   14000f18d:	mov    rax,QWORD PTR [rsp+0x40]
   14000f192:	movsxd rcx,DWORD PTR [rax+0xc]
   14000f196:	lea    rax,[rax+rcx*8+0x10]
   14000f19b:	cmp    rsi,rax
   14000f19e:	je     0x14000f5ac
   14000f1a4:	mov    rcx,QWORD PTR [rsi]
   14000f1a7:	add    rcx,0x20
   14000f1ab:	mov    rax,QWORD PTR [rcx]
   14000f1ae:	mov    edx,DWORD PTR [rax+0xc]
   14000f1b1:	sub    edx,DWORD PTR [rax+0x8]
   14000f1b4:	cmp    edx,0x1
   14000f1b7:	jg     0x14000f1e1
   14000f1b9:	xor    r8d,r8d
   14000f1bc:	lea    rdx,[rsp+0x98]
   14000f1c4:	call   0x140006c00
   14000f1c9:	or     ebp,0x2
   14000f1cc:	mov    DWORD PTR [rsp+0x170],ebp
   14000f1d3:	mov    rax,QWORD PTR [rax]
   14000f1d6:	cmp    DWORD PTR [rax+0x4],0x0
   14000f1da:	jne    0x14000f1e1
   14000f1dc:	xor    dil,dil
   14000f1df:	jmp    0x14000f1e4
   14000f1e1:	mov    dil,0x1
   14000f1e4:	test   bpl,0x2
   14000f1e8:	je     0x14000f202
   14000f1ea:	and    ebp,0xfffffffd
   14000f1ed:	mov    DWORD PTR [rsp+0x170],ebp
   14000f1f4:	lea    rcx,[rsp+0x98]
   14000f1fc:	call   QWORD PTR [rip+0xc426]        # 0x14001b628
   14000f202:	mov    rcx,QWORD PTR [rsi]
   14000f205:	cmp    DWORD PTR [rcx+0x3c],0x0
   14000f209:	jne    0x14000f3dc
   14000f20f:	test   dil,dil
   14000f212:	jne    0x14000f59c
   14000f218:	lea    rdi,[rcx+0x8]
   14000f21c:	mov    rcx,rdi
   14000f21f:	call   QWORD PTR [rip+0xc0f3]        # 0x14001b318
   14000f225:	test   al,al
   14000f227:	je     0x14000f22d
   14000f229:	xor    eax,eax
   14000f22b:	jmp    0x14000f236
   14000f22d:	mov    rcx,rdi
   14000f230:	call   QWORD PTR [rip+0xbfe2]        # 0x14001b218
   14000f236:	mov    r8d,r14d
   14000f239:	mov    rdx,rax
   14000f23c:	lea    rcx,[rsp+0xa8]
   14000f244:	call   QWORD PTR [rip+0xc3be]        # 0x14001b608
   14000f24a:	nop
   14000f24b:	lea    r8,[rip+0xd1b2]        # 0x14001c404
   14000f252:	mov    rdx,rax
   14000f255:	lea    rcx,[rsp+0x80]
   14000f25d:	call   0x14000d6f0
   14000f262:	mov    rbp,rax
   14000f265:	mov    rdi,QWORD PTR [rsi]
   14000f268:	lea    rcx,[rdi+0x10]
   14000f26c:	call   QWORD PTR [rip+0xc0a6]        # 0x14001b318
   14000f272:	test   al,al
   14000f274:	je     0x14000f27a
   14000f276:	xor    eax,eax
   14000f278:	jmp    0x14000f284
   14000f27a:	lea    rcx,[rdi+0x10]
   14000f27e:	call   QWORD PTR [rip+0xbf94]        # 0x14001b218
   14000f284:	mov    r8,rax
   14000f287:	mov    rdx,rbp
   14000f28a:	lea    rcx,[rsp+0x58]
   14000f28f:	call   0x14000d6f0
   14000f294:	nop
   14000f295:	lea    r8,[rip+0xd168]        # 0x14001c404
   14000f29c:	mov    rdx,rax
   14000f29f:	lea    rcx,[rsp+0x70]
   14000f2a4:	call   0x14000d6f0
   14000f2a9:	mov    rbp,rax
   14000f2ac:	mov    rdi,QWORD PTR [rsi]
   14000f2af:	lea    rcx,[rdi+0x18]
   14000f2b3:	call   QWORD PTR [rip+0xc05f]        # 0x14001b318
   14000f2b9:	test   al,al
   14000f2bb:	je     0x14000f2c1
   14000f2bd:	xor    eax,eax
   14000f2bf:	jmp    0x14000f2cb
   14000f2c1:	lea    rcx,[rdi+0x18]
   14000f2c5:	call   QWORD PTR [rip+0xbf4d]        # 0x14001b218
   14000f2cb:	mov    r8,rax
   14000f2ce:	mov    rdx,rbp
   14000f2d1:	lea    rcx,[rsp+0x90]
   14000f2d9:	call   0x14000d6f0
   14000f2de:	mov    r14,rax
   14000f2e1:	mov    rax,QWORD PTR [rsi]
   14000f2e4:	mov    QWORD PTR [rsp+0x38],rax
   14000f2e9:	mov    rax,QWORD PTR [rsp+0x30]
   14000f2ee:	mov    ecx,DWORD PTR [rax]
   14000f2f0:	cmp    ecx,0x1
   14000f2f3:	je     0x14000f303
   14000f2f5:	test   ecx,ecx
   14000f2f7:	je     0x14000f303
   14000f2f9:	lea    rcx,[rsp+0x30]
   14000f2fe:	call   0x14000efe0
   14000f303:	mov    rdi,QWORD PTR [rsp+0x30]
   14000f308:	mov    rbp,QWORD PTR [rdi+0x10]
   14000f30c:	lea    r15,[rdi+0x8]
   14000f310:	xor    r12d,r12d
   14000f313:	mov    dil,0x1
   14000f316:	test   rbp,rbp
   14000f319:	je     0x14000f374
   14000f31b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f320:	mov    r15,rbp
   14000f323:	lea    rcx,[rbp+0x18]
   14000f327:	mov    rdx,r14
   14000f32a:	call   QWORD PTR [rip+0xc308]        # 0x14001b638
   14000f330:	test   eax,eax
   14000f332:	js     0x14000f340
   14000f334:	mov    r12,rbp
   14000f337:	mov    dil,0x1
   14000f33a:	mov    rbp,QWORD PTR [rbp+0x8]
   14000f33e:	jmp    0x14000f347
   14000f340:	xor    dil,dil
   14000f343:	mov    rbp,QWORD PTR [rbp+0x10]
   14000f347:	test   rbp,rbp
   14000f34a:	jne    0x14000f320
   14000f34c:	test   r12,r12
   14000f34f:	je     0x14000f374
   14000f351:	lea    rdx,[r12+0x18]
   14000f356:	mov    rcx,r14
   14000f359:	call   QWORD PTR [rip+0xc2d9]        # 0x14001b638
   14000f35f:	test   eax,eax
   14000f361:	js     0x14000f374
   14000f363:	lea    rcx,[r12+0x20]
   14000f368:	mov    rdx,QWORD PTR [rsp+0x38]
   14000f36d:	call   0x140008990
   14000f372:	jmp    0x14000f38f
   14000f374:	mov    BYTE PTR [rsp+0x20],dil
   14000f379:	mov    r9,r15
   14000f37c:	mov    r8,QWORD PTR [rsp+0x38]
   14000f381:	mov    rdx,r14
   14000f384:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f389:	call   0x14000d9b0
   14000f38e:	nop
   14000f38f:	lea    rcx,[rsp+0x90]
   14000f397:	call   QWORD PTR [rip+0xc283]        # 0x14001b620
   14000f39d:	nop
   14000f39e:	lea    rcx,[rsp+0x70]
   14000f3a3:	call   QWORD PTR [rip+0xc277]        # 0x14001b620
   14000f3a9:	nop
   14000f3aa:	lea    rcx,[rsp+0x58]
   14000f3af:	call   QWORD PTR [rip+0xc26b]        # 0x14001b620
   14000f3b5:	nop
   14000f3b6:	lea    rcx,[rsp+0x80]
   14000f3be:	call   QWORD PTR [rip+0xc25c]        # 0x14001b620
   14000f3c4:	nop
   14000f3c5:	lea    rcx,[rsp+0xa8]
   14000f3cd:	call   QWORD PTR [rip+0xc24d]        # 0x14001b620
   14000f3d3:	or     r14d,0xffffffff
   14000f3d7:	jmp    0x14000f59c
   14000f3dc:	test   dil,dil
   14000f3df:	je     0x14000f413
   14000f3e1:	lea    rdx,[rsp+0x48]
   14000f3e6:	call   0x140006c60
   14000f3eb:	or     ebp,0x1
   14000f3ee:	mov    DWORD PTR [rsp+0x170],ebp
   14000f3f5:	mov    rcx,QWORD PTR [rax]
   14000f3f8:	mov    eax,DWORD PTR [rcx+0xc]
   14000f3fb:	sub    eax,DWORD PTR [rcx+0x8]
   14000f3fe:	cmp    eax,0x1
   14000f401:	jne    0x14000f40e
   14000f403:	movzx  r12d,al
   14000f407:	mov    r13,QWORD PTR [rsp+0x48]
   14000f40c:	jmp    0x14000f416
   14000f40e:	mov    r13,QWORD PTR [rsp+0x48]
   14000f413:	xor    r12b,r12b
   14000f416:	test   bpl,0x1
   14000f41a:	je     0x14000f4a0
   14000f420:	and    ebp,0xfffffffe
   14000f423:	mov    DWORD PTR [rsp+0x170],ebp
   14000f42a:	mov    eax,DWORD PTR [r13+0x0]
   14000f42e:	test   eax,eax
   14000f430:	je     0x14000f468
   14000f432:	cmp    eax,0xffffffff
   14000f435:	je     0x14000f4a0
   14000f437:	mov    eax,r14d
   14000f43a:	lock xadd DWORD PTR [r13+0x0],eax
   14000f440:	add    eax,0xffffffff
   14000f443:	setne  al
   14000f446:	test   al,al
   14000f448:	jne    0x14000f459
   14000f44a:	mov    rbx,QWORD PTR [rsp+0x178]
   14000f452:	mov    r13,QWORD PTR [rsp+0x48]
   14000f457:	jmp    0x14000f468
   14000f459:	mov    rbx,QWORD PTR [rsp+0x178]
   14000f461:	mov    r13,QWORD PTR [rsp+0x48]
   14000f466:	jmp    0x14000f4a0
   14000f468:	movsxd rax,DWORD PTR [r13+0xc]
   14000f46c:	lea    rdi,[r13+rax*8+0x10]
   14000f471:	movsxd rax,DWORD PTR [r13+0x8]
   14000f475:	lea    rbp,[r13+rax*8+0x10]
   14000f47a:	cmp    rbp,rdi
   14000f47d:	je     0x14000f492
   14000f47f:	nop
   14000f480:	sub    rdi,0x8
   14000f484:	mov    rcx,rdi
   14000f487:	call   QWORD PTR [rip+0xc19b]        # 0x14001b628
   14000f48d:	cmp    rdi,rbp
   14000f490:	jne    0x14000f480
   14000f492:	mov    rcx,r13
   14000f495:	call   QWORD PTR [rip+0xbdf5]        # 0x14001b290
   14000f49b:	mov    r13,QWORD PTR [rsp+0x48]
   14000f4a0:	test   r12b,r12b
   14000f4a3:	je     0x14000f59c
   14000f4a9:	mov    rdi,QWORD PTR [rsi]
   14000f4ac:	lea    rcx,[rdi+0x10]
   14000f4b0:	call   QWORD PTR [rip+0xbe62]        # 0x14001b318
   14000f4b6:	test   al,al
   14000f4b8:	je     0x14000f4be
   14000f4ba:	xor    eax,eax
   14000f4bc:	jmp    0x14000f4c8
   14000f4be:	lea    rcx,[rdi+0x10]
   14000f4c2:	call   QWORD PTR [rip+0xbd50]        # 0x14001b218
   14000f4c8:	mov    rdx,rax
   14000f4cb:	lea    rcx,[rsp+0x60]
   14000f4d0:	call   0x14000d870
   14000f4d5:	mov    r14,rax
   14000f4d8:	mov    rax,QWORD PTR [rsi]
   14000f4db:	mov    QWORD PTR [rsp+0x38],rax
   14000f4e0:	mov    ecx,DWORD PTR [rbx]
   14000f4e2:	cmp    ecx,0x1
   14000f4e5:	je     0x14000f500
   14000f4e7:	test   ecx,ecx
   14000f4e9:	je     0x14000f500
   14000f4eb:	lea    rcx,[rsp+0x178]
   14000f4f3:	call   0x14000efe0
   14000f4f8:	mov    rbx,QWORD PTR [rsp+0x178]
   14000f500:	mov    rdi,QWORD PTR [rbx+0x10]
   14000f504:	lea    r15,[rbx+0x8]
   14000f508:	xor    r12d,r12d
   14000f50b:	mov    bpl,0x1
   14000f50e:	test   rdi,rdi
   14000f511:	je     0x14000f574
   14000f513:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000f520:	mov    r15,rdi
   14000f523:	lea    rcx,[rdi+0x18]
   14000f527:	mov    rdx,r14
   14000f52a:	call   QWORD PTR [rip+0xc108]        # 0x14001b638
   14000f530:	test   eax,eax
   14000f532:	js     0x14000f540
   14000f534:	mov    r12,rdi
   14000f537:	mov    bpl,0x1
   14000f53a:	mov    rdi,QWORD PTR [rdi+0x8]
   14000f53e:	jmp    0x14000f547
   14000f540:	xor    bpl,bpl
   14000f543:	mov    rdi,QWORD PTR [rdi+0x10]
   14000f547:	test   rdi,rdi
   14000f54a:	jne    0x14000f520
   14000f54c:	test   r12,r12
   14000f54f:	je     0x14000f574
   14000f551:	lea    rdx,[r12+0x18]
   14000f556:	mov    rcx,r14
   14000f559:	call   QWORD PTR [rip+0xc0d9]        # 0x14001b638
   14000f55f:	test   eax,eax
   14000f561:	js     0x14000f574
   14000f563:	lea    rcx,[r12+0x20]
   14000f568:	mov    rdx,QWORD PTR [rsp+0x38]
   14000f56d:	call   0x140008990
   14000f572:	jmp    0x14000f58d
   14000f574:	mov    BYTE PTR [rsp+0x20],bpl
   14000f579:	mov    r9,r15
   14000f57c:	mov    r8,QWORD PTR [rsp+0x38]
   14000f581:	mov    rdx,r14
   14000f584:	mov    rcx,rbx
   14000f587:	call   0x14000d9b0
   14000f58c:	nop
   14000f58d:	lea    rcx,[rsp+0x60]
   14000f592:	call   QWORD PTR [rip+0xc088]        # 0x14001b620
   14000f598:	or     r14d,0xffffffff
   14000f59c:	add    rsi,0x8
   14000f5a0:	mov    ebp,DWORD PTR [rsp+0x170]
   14000f5a7:	jmp    0x14000f170
   14000f5ac:	mov    rdi,QWORD PTR [rsp+0x30]
   14000f5b1:	mov    eax,DWORD PTR [rdi]
   14000f5b3:	cmp    eax,0x1
   14000f5b6:	je     0x14000f665
   14000f5bc:	test   eax,eax
   14000f5be:	je     0x14000f665
   14000f5c4:	call   QWORD PTR [rip+0xbfd6]        # 0x14001b5a0
   14000f5ca:	mov    rsi,rax
   14000f5cd:	lea    rbp,[rdi+0x10]
   14000f5d1:	mov    rcx,QWORD PTR [rbp+0x0]
   14000f5d5:	test   rcx,rcx
   14000f5d8:	je     0x14000f5f4
   14000f5da:	mov    rdx,rax
   14000f5dd:	call   0x14000da40
   14000f5e2:	mov    r11,rax
   14000f5e5:	mov    QWORD PTR [rsi+0x10],rax
   14000f5e9:	and    QWORD PTR [rax],0x3
   14000f5ed:	lea    rax,[rsi+0x8]
   14000f5f1:	or     QWORD PTR [r11],rax
   14000f5f4:	mov    rdi,QWORD PTR [rsp+0x30]
   14000f5f9:	mov    eax,DWORD PTR [rdi]
   14000f5fb:	test   eax,eax
   14000f5fd:	je     0x14000f629
   14000f5ff:	cmp    eax,0xffffffff
   14000f602:	je     0x14000f657
   14000f604:	mov    eax,r14d
   14000f607:	lock xadd DWORD PTR [rdi],eax
   14000f60b:	add    eax,0xffffffff
   14000f60e:	setne  al
   14000f611:	test   al,al
   14000f613:	jne    0x14000f61f
   14000f615:	mov    rbx,QWORD PTR [rsp+0x178]
   14000f61d:	jmp    0x14000f629
   14000f61f:	mov    rbx,QWORD PTR [rsp+0x178]
   14000f627:	jmp    0x14000f657
   14000f629:	mov    rcx,QWORD PTR [rbp+0x0]
   14000f62d:	test   rcx,rcx
   14000f630:	je     0x14000f64c
   14000f632:	call   0x14000de80
   14000f637:	mov    r8d,0x8
   14000f63d:	mov    rdx,QWORD PTR [rbp+0x0]
   14000f641:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f646:	call   QWORD PTR [rip+0xbc54]        # 0x14001b2a0
   14000f64c:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f651:	call   QWORD PTR [rip+0xbc41]        # 0x14001b298
   14000f657:	mov    QWORD PTR [rsp+0x30],rsi
   14000f65c:	mov    rcx,rsi
   14000f65f:	call   QWORD PTR [rip+0xbc4b]        # 0x14001b2b0
   14000f665:	mov    rdi,QWORD PTR [rsp+0x30]
   14000f66a:	cmp    QWORD PTR [rdi+0x10],0x0
   14000f66f:	je     0x14000f677
   14000f671:	mov    rsi,QWORD PTR [rdi+0x20]
   14000f675:	jmp    0x14000f680
   14000f677:	mov    rsi,QWORD PTR [rsp+0x30]
   14000f67c:	add    rsi,0x8
   14000f680:	mov    r15d,DWORD PTR [rsp+0x168]
   14000f688:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f690:	mov    rdi,QWORD PTR [rsp+0x30]
   14000f695:	mov    eax,DWORD PTR [rdi]
   14000f697:	cmp    eax,0x1
   14000f69a:	je     0x14000f83c
   14000f6a0:	test   eax,eax
   14000f6a2:	je     0x14000f83c
   14000f6a8:	call   QWORD PTR [rip+0xbef2]        # 0x14001b5a0
   14000f6ae:	mov    r15,rax
   14000f6b1:	lea    rbp,[rdi+0x10]
   14000f6b5:	mov    QWORD PTR [rsp+0x170],rbp
   14000f6bd:	mov    rcx,QWORD PTR [rbp+0x0]
   14000f6c1:	test   rcx,rcx
   14000f6c4:	je     0x14000f6e0
   14000f6c6:	mov    rdx,rax
   14000f6c9:	call   0x14000da40
   14000f6ce:	mov    r11,rax
   14000f6d1:	mov    QWORD PTR [r15+0x10],rax
   14000f6d5:	and    QWORD PTR [rax],0x3
   14000f6d9:	lea    rax,[r15+0x8]
   14000f6dd:	or     QWORD PTR [r11],rax
   14000f6e0:	mov    rdi,QWORD PTR [rsp+0x30]
   14000f6e5:	mov    eax,DWORD PTR [rdi]
   14000f6e7:	test   eax,eax
   14000f6e9:	je     0x14000f71c
   14000f6eb:	cmp    eax,0xffffffff
   14000f6ee:	je     0x14000f826
   14000f6f4:	mov    eax,r14d
   14000f6f7:	lock xadd DWORD PTR [rdi],eax
   14000f6fb:	add    eax,0xffffffff
   14000f6fe:	setne  al
   14000f701:	test   al,al
   14000f703:	jne    0x14000f70f
   14000f705:	mov    rbx,QWORD PTR [rsp+0x178]
   14000f70d:	jmp    0x14000f71c
   14000f70f:	mov    rbx,QWORD PTR [rsp+0x178]
   14000f717:	jmp    0x14000f826
   14000f71c:	mov    r13,QWORD PTR [rbp+0x0]
   14000f720:	test   r13,r13
   14000f723:	je     0x14000f81b
   14000f729:	lea    rcx,[r13+0x18]
   14000f72d:	call   QWORD PTR [rip+0xbeed]        # 0x14001b620
   14000f733:	lea    r12,[r13+0x20]
   14000f737:	mov    QWORD PTR [rsp+0x38],r12
   14000f73c:	lea    rcx,[r12+0x28]
   14000f741:	call   QWORD PTR [rip+0xbee1]        # 0x14001b628
   14000f747:	nop
   14000f748:	mov    rcx,QWORD PTR [r12+0x20]
   14000f74d:	mov    eax,DWORD PTR [rcx]
   14000f74f:	test   eax,eax
   14000f751:	je     0x14000f77d
   14000f753:	cmp    eax,0xffffffff
   14000f756:	je     0x14000f7c7
   14000f758:	mov    eax,r14d
   14000f75b:	lock xadd DWORD PTR [rcx],eax
   14000f75f:	add    eax,0xffffffff
   14000f762:	setne  al
   14000f765:	test   al,al
   14000f767:	jne    0x14000f773
   14000f769:	mov    rbx,QWORD PTR [rsp+0x178]
   14000f771:	jmp    0x14000f77d
   14000f773:	mov    rbx,QWORD PTR [rsp+0x178]
   14000f77b:	jmp    0x14000f7c7
   14000f77d:	mov    r14,QWORD PTR [r12+0x20]
   14000f782:	movsxd rax,DWORD PTR [r14+0xc]
   14000f786:	lea    rdi,[r14+rax*8+0x10]
   14000f78b:	movsxd rax,DWORD PTR [r14+0x8]
   14000f78f:	lea    rbp,[r14+rax*8+0x10]
   14000f794:	cmp    rbp,rdi
   14000f797:	je     0x14000f7b2
   14000f799:	nop    DWORD PTR [rax+0x0]
   14000f7a0:	sub    rdi,0x8
   14000f7a4:	mov    rcx,rdi
   14000f7a7:	call   QWORD PTR [rip+0xbe7b]        # 0x14001b628
   14000f7ad:	cmp    rdi,rbp
   14000f7b0:	jne    0x14000f7a0
   14000f7b2:	mov    rcx,r14
   14000f7b5:	call   QWORD PTR [rip+0xbad5]        # 0x14001b290
   14000f7bb:	mov    rbp,QWORD PTR [rsp+0x170]
   14000f7c3:	or     r14d,0xffffffff
   14000f7c7:	lea    rcx,[r12+0x18]
   14000f7cc:	call   QWORD PTR [rip+0xbe4e]        # 0x14001b620
   14000f7d2:	nop
   14000f7d3:	lea    rcx,[r12+0x10]
   14000f7d8:	call   QWORD PTR [rip+0xbe42]        # 0x14001b620
   14000f7de:	nop
   14000f7df:	lea    rcx,[r12+0x8]
   14000f7e4:	call   QWORD PTR [rip+0xbe36]        # 0x14001b620
   14000f7ea:	mov    rcx,QWORD PTR [r13+0x8]
   14000f7ee:	test   rcx,rcx
   14000f7f1:	je     0x14000f7f8
   14000f7f3:	call   0x14000de80
   14000f7f8:	mov    rcx,QWORD PTR [r13+0x10]
   14000f7fc:	test   rcx,rcx
   14000f7ff:	je     0x14000f806
   14000f801:	call   0x14000de80
   14000f806:	mov    r8d,0x8
   14000f80c:	mov    rdx,QWORD PTR [rbp+0x0]
   14000f810:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f815:	call   QWORD PTR [rip+0xba85]        # 0x14001b2a0
   14000f81b:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f820:	call   QWORD PTR [rip+0xba72]        # 0x14001b298
   14000f826:	mov    QWORD PTR [rsp+0x30],r15
   14000f82b:	mov    rcx,r15
   14000f82e:	call   QWORD PTR [rip+0xba7c]        # 0x14001b2b0
   14000f834:	mov    r15d,DWORD PTR [rsp+0x168]
   14000f83c:	mov    rax,QWORD PTR [rsp+0x30]
   14000f841:	add    rax,0x8
   14000f845:	cmp    rsi,rax
   14000f848:	je     0x14000fe8e
   14000f84e:	lea    rcx,[rsi+0x30]
   14000f852:	call   QWORD PTR [rip+0xbac0]        # 0x14001b318
   14000f858:	test   al,al
   14000f85a:	je     0x14000f860
   14000f85c:	xor    eax,eax
   14000f85e:	jmp    0x14000f86a
   14000f860:	lea    rcx,[rsi+0x30]
   14000f864:	call   QWORD PTR [rip+0xb9ae]        # 0x14001b218
   14000f86a:	mov    rdx,rax
   14000f86d:	lea    rcx,[rsp+0x68]
   14000f872:	call   0x14000d870
   14000f877:	mov    r13,rax
   14000f87a:	mov    QWORD PTR [rsp+0x38],rax
   14000f87f:	mov    ecx,DWORD PTR [rbx]
   14000f881:	cmp    ecx,0x1
   14000f884:	je     0x14000fa16
   14000f88a:	test   ecx,ecx
   14000f88c:	je     0x14000fa16
   14000f892:	call   QWORD PTR [rip+0xbd08]        # 0x14001b5a0
   14000f898:	mov    r15,rax
   14000f89b:	lea    rdi,[rbx+0x10]
   14000f89f:	mov    QWORD PTR [rsp+0x170],rdi
   14000f8a7:	mov    rcx,QWORD PTR [rdi]
   14000f8aa:	test   rcx,rcx
   14000f8ad:	je     0x14000f8c9
   14000f8af:	mov    rdx,rax
   14000f8b2:	call   0x14000da40
   14000f8b7:	mov    r11,rax
   14000f8ba:	mov    QWORD PTR [r15+0x10],rax
   14000f8be:	and    QWORD PTR [rax],0x3
   14000f8c2:	lea    rax,[r15+0x8]
   14000f8c6:	or     QWORD PTR [r11],rax
   14000f8c9:	mov    eax,DWORD PTR [rbx]
   14000f8cb:	test   eax,eax
   14000f8cd:	je     0x14000f8f5
   14000f8cf:	cmp    eax,0xffffffff
   14000f8d2:	je     0x14000fa02
   14000f8d8:	mov    eax,r14d
   14000f8db:	lock xadd DWORD PTR [rbx],eax
   14000f8df:	add    eax,0xffffffff
   14000f8e2:	setne  al
   14000f8e5:	test   al,al
   14000f8e7:	jne    0x14000fa02
   14000f8ed:	mov    rbx,QWORD PTR [rsp+0x178]
   14000f8f5:	mov    r13,QWORD PTR [rdi]
   14000f8f8:	test   r13,r13
   14000f8fb:	je     0x14000f9f4
   14000f901:	lea    rcx,[r13+0x18]
   14000f905:	call   QWORD PTR [rip+0xbd15]        # 0x14001b620
   14000f90b:	lea    r12,[r13+0x20]
   14000f90f:	mov    QWORD PTR [rsp+0xa0],r12
   14000f917:	lea    rcx,[r12+0x28]
   14000f91c:	call   QWORD PTR [rip+0xbd06]        # 0x14001b628
   14000f922:	nop
   14000f923:	mov    rcx,QWORD PTR [r12+0x20]
   14000f928:	mov    eax,DWORD PTR [rcx]
   14000f92a:	test   eax,eax
   14000f92c:	je     0x14000f958
   14000f92e:	cmp    eax,0xffffffff
   14000f931:	je     0x14000f9a3
   14000f933:	mov    eax,r14d
   14000f936:	lock xadd DWORD PTR [rcx],eax
   14000f93a:	add    eax,0xffffffff
   14000f93d:	setne  al
   14000f940:	test   al,al
   14000f942:	jne    0x14000f94e
   14000f944:	mov    rbx,QWORD PTR [rsp+0x178]
   14000f94c:	jmp    0x14000f958
   14000f94e:	mov    rbx,QWORD PTR [rsp+0x178]
   14000f956:	jmp    0x14000f9a3
   14000f958:	mov    r14,QWORD PTR [r12+0x20]
   14000f95d:	movsxd rax,DWORD PTR [r14+0xc]
   14000f961:	lea    rdi,[r14+rax*8+0x10]
   14000f966:	movsxd rax,DWORD PTR [r14+0x8]
   14000f96a:	lea    rbp,[r14+rax*8+0x10]
   14000f96f:	cmp    rbp,rdi
   14000f972:	je     0x14000f992
   14000f974:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000f980:	sub    rdi,0x8
   14000f984:	mov    rcx,rdi
   14000f987:	call   QWORD PTR [rip+0xbc9b]        # 0x14001b628
   14000f98d:	cmp    rdi,rbp
   14000f990:	jne    0x14000f980
   14000f992:	mov    rcx,r14
   14000f995:	call   QWORD PTR [rip+0xb8f5]        # 0x14001b290
   14000f99b:	mov    rdi,QWORD PTR [rsp+0x170]
   14000f9a3:	lea    rcx,[r12+0x18]
   14000f9a8:	call   QWORD PTR [rip+0xbc72]        # 0x14001b620
   14000f9ae:	nop
   14000f9af:	lea    rcx,[r12+0x10]
   14000f9b4:	call   QWORD PTR [rip+0xbc66]        # 0x14001b620
   14000f9ba:	nop
   14000f9bb:	lea    rcx,[r12+0x8]
   14000f9c0:	call   QWORD PTR [rip+0xbc5a]        # 0x14001b620
   14000f9c6:	mov    rcx,QWORD PTR [r13+0x8]
   14000f9ca:	test   rcx,rcx
   14000f9cd:	je     0x14000f9d4
   14000f9cf:	call   0x14000de80
   14000f9d4:	mov    rcx,QWORD PTR [r13+0x10]
   14000f9d8:	test   rcx,rcx
   14000f9db:	je     0x14000f9e2
   14000f9dd:	call   0x14000de80
   14000f9e2:	mov    r8d,0x8
   14000f9e8:	mov    rdx,QWORD PTR [rdi]
   14000f9eb:	mov    rcx,rbx
   14000f9ee:	call   QWORD PTR [rip+0xb8ac]        # 0x14001b2a0
   14000f9f4:	mov    rcx,rbx
   14000f9f7:	call   QWORD PTR [rip+0xb89b]        # 0x14001b298
   14000f9fd:	mov    r13,QWORD PTR [rsp+0x38]
   14000fa02:	mov    rbx,r15
   14000fa05:	mov    QWORD PTR [rsp+0x178],rbx
   14000fa0d:	mov    rcx,r15
   14000fa10:	call   QWORD PTR [rip+0xb89a]        # 0x14001b2b0
   14000fa16:	lea    r12,[rbx+0x10]
   14000fa1a:	mov    QWORD PTR [rsp+0x38],r12
   14000fa1f:	mov    rdi,QWORD PTR [r12]
   14000fa23:	test   rdi,rdi
   14000fa26:	je     0x14000fa69
   14000fa28:	xor    ebp,ebp
   14000fa2a:	nop    WORD PTR [rax+rax*1+0x0]
   14000fa30:	lea    rcx,[rdi+0x18]
   14000fa34:	mov    rdx,r13
   14000fa37:	call   QWORD PTR [rip+0xbbfb]        # 0x14001b638
   14000fa3d:	test   eax,eax
   14000fa3f:	js     0x14000fa4a
   14000fa41:	mov    rbp,rdi
   14000fa44:	mov    rdi,QWORD PTR [rdi+0x8]
   14000fa48:	jmp    0x14000fa4e
   14000fa4a:	mov    rdi,QWORD PTR [rdi+0x10]
   14000fa4e:	test   rdi,rdi
   14000fa51:	jne    0x14000fa30
   14000fa53:	test   rbp,rbp
   14000fa56:	je     0x14000fa69
   14000fa58:	lea    rdx,[rbp+0x18]
   14000fa5c:	mov    rcx,r13
   14000fa5f:	call   QWORD PTR [rip+0xbbd3]        # 0x14001b638
   14000fa65:	test   eax,eax
   14000fa67:	jns    0x14000fa6d
   14000fa69:	lea    rbp,[rbx+0x8]
   14000fa6d:	lea    rcx,[rsp+0x68]
   14000fa72:	call   QWORD PTR [rip+0xbba8]        # 0x14001b620
   14000fa78:	mov    r11d,DWORD PTR [rbx]
   14000fa7b:	cmp    r11d,0x1
   14000fa7f:	je     0x14000fbf4
   14000fa85:	test   r11d,r11d
   14000fa88:	je     0x14000fbf4
   14000fa8e:	call   QWORD PTR [rip+0xbb0c]        # 0x14001b5a0
   14000fa94:	mov    rdi,rax
   14000fa97:	mov    QWORD PTR [rsp+0x170],rax
   14000fa9f:	mov    rcx,QWORD PTR [r12]
   14000faa3:	test   rcx,rcx
   14000faa6:	je     0x14000fac2
   14000faa8:	mov    rdx,rax
   14000faab:	call   0x14000da40
   14000fab0:	mov    r11,rax
   14000fab3:	mov    QWORD PTR [rdi+0x10],rax
   14000fab7:	and    QWORD PTR [rax],0x3
   14000fabb:	lea    rax,[rdi+0x8]
   14000fabf:	or     QWORD PTR [r11],rax
   14000fac2:	mov    eax,DWORD PTR [rbx]
   14000fac4:	test   eax,eax
   14000fac6:	je     0x14000fae8
   14000fac8:	cmp    eax,0xffffffff
   14000facb:	je     0x14000fbe0
   14000fad1:	lock add DWORD PTR [rbx],0xffffffff
   14000fad5:	setne  al
   14000fad8:	test   al,al
   14000fada:	jne    0x14000fbe0
   14000fae0:	mov    rbx,QWORD PTR [rsp+0x178]
   14000fae8:	mov    r14,QWORD PTR [r12]
   14000faec:	test   r14,r14
   14000faef:	je     0x14000fbd7
   14000faf5:	lea    rcx,[r14+0x18]
   14000faf9:	call   QWORD PTR [rip+0xbb21]        # 0x14001b620
   14000faff:	lea    r13,[r14+0x20]
   14000fb03:	mov    QWORD PTR [rsp+0xa0],r13
   14000fb0b:	lea    rcx,[r13+0x28]
   14000fb0f:	call   QWORD PTR [rip+0xbb13]        # 0x14001b628
   14000fb15:	nop
   14000fb16:	mov    rcx,QWORD PTR [r13+0x20]
   14000fb1a:	mov    eax,DWORD PTR [rcx]
   14000fb1c:	test   eax,eax
   14000fb1e:	je     0x14000fb44
   14000fb20:	cmp    eax,0xffffffff
   14000fb23:	je     0x14000fb88
   14000fb25:	lock add DWORD PTR [rcx],0xffffffff
   14000fb29:	setne  al
   14000fb2c:	test   al,al
   14000fb2e:	jne    0x14000fb3a
   14000fb30:	mov    rbx,QWORD PTR [rsp+0x178]
   14000fb38:	jmp    0x14000fb44
   14000fb3a:	mov    rbx,QWORD PTR [rsp+0x178]
   14000fb42:	jmp    0x14000fb88
   14000fb44:	mov    r15,QWORD PTR [r13+0x20]
   14000fb48:	movsxd rax,DWORD PTR [r15+0xc]
   14000fb4c:	lea    rdi,[r15+rax*8+0x10]
   14000fb51:	movsxd rax,DWORD PTR [r15+0x8]
   14000fb55:	lea    r12,[r15+rax*8+0x10]
   14000fb5a:	cmp    r12,rdi
   14000fb5d:	je     0x14000fb72
   14000fb5f:	nop
   14000fb60:	sub    rdi,0x8
   14000fb64:	mov    rcx,rdi
   14000fb67:	call   QWORD PTR [rip+0xbabb]        # 0x14001b628
   14000fb6d:	cmp    rdi,r12
   14000fb70:	jne    0x14000fb60
   14000fb72:	mov    rcx,r15
   14000fb75:	call   QWORD PTR [rip+0xb715]        # 0x14001b290
   14000fb7b:	mov    rdi,QWORD PTR [rsp+0x170]
   14000fb83:	mov    r12,QWORD PTR [rsp+0x38]
   14000fb88:	lea    rcx,[r13+0x18]
   14000fb8c:	call   QWORD PTR [rip+0xba8e]        # 0x14001b620
   14000fb92:	nop
   14000fb93:	lea    rcx,[r13+0x10]
   14000fb97:	call   QWORD PTR [rip+0xba83]        # 0x14001b620
   14000fb9d:	nop
   14000fb9e:	lea    rcx,[r13+0x8]
   14000fba2:	call   QWORD PTR [rip+0xba78]        # 0x14001b620
   14000fba8:	mov    rcx,QWORD PTR [r14+0x8]
   14000fbac:	test   rcx,rcx
   14000fbaf:	je     0x14000fbb6
   14000fbb1:	call   0x14000de80
   14000fbb6:	mov    rcx,QWORD PTR [r14+0x10]
   14000fbba:	test   rcx,rcx
   14000fbbd:	je     0x14000fbc4
   14000fbbf:	call   0x14000de80
   14000fbc4:	mov    r8d,0x8
   14000fbca:	mov    rdx,QWORD PTR [r12]
   14000fbce:	mov    rcx,rbx
   14000fbd1:	call   QWORD PTR [rip+0xb6c9]        # 0x14001b2a0
   14000fbd7:	mov    rcx,rbx
   14000fbda:	call   QWORD PTR [rip+0xb6b8]        # 0x14001b298
   14000fbe0:	mov    rbx,rdi
   14000fbe3:	mov    QWORD PTR [rsp+0x178],rbx
   14000fbeb:	mov    rcx,rdi
   14000fbee:	call   QWORD PTR [rip+0xb6bc]        # 0x14001b2b0
   14000fbf4:	lea    rax,[rbx+0x8]
   14000fbf8:	cmp    rbp,rax
   14000fbfb:	je     0x14000fe71
   14000fc01:	mov    rax,QWORD PTR [rbp+0x18]
   14000fc05:	cmp    DWORD PTR [rax+0x4],0x0
   14000fc09:	je     0x14000fe67
   14000fc0f:	lea    rcx,[rsi+0x30]
   14000fc13:	call   QWORD PTR [rip+0xb6ff]        # 0x14001b318
   14000fc19:	test   al,al
   14000fc1b:	je     0x14000fc21
   14000fc1d:	xor    edi,edi
   14000fc1f:	jmp    0x14000fc2e
   14000fc21:	lea    rcx,[rsi+0x30]
   14000fc25:	call   QWORD PTR [rip+0xb5ed]        # 0x14001b218
   14000fc2b:	mov    rdi,rax
   14000fc2e:	lea    r12,[rbp+0x20]
   14000fc32:	lea    rcx,[r12+0x10]
   14000fc37:	call   QWORD PTR [rip+0xb6db]        # 0x14001b318
   14000fc3d:	test   al,al
   14000fc3f:	je     0x14000fc45
   14000fc41:	xor    eax,eax
   14000fc43:	jmp    0x14000fc50
   14000fc45:	lea    rcx,[r12+0x10]
   14000fc4a:	call   QWORD PTR [rip+0xb5c8]        # 0x14001b218
   14000fc50:	mov    rdx,rdi
   14000fc53:	mov    rcx,rax
   14000fc56:	call   QWORD PTR [rip+0xb93c]        # 0x14001b598
   14000fc5c:	test   eax,eax
   14000fc5e:	je     0x14000fe5d
   14000fc64:	lea    rdx,[rsi+0x20]
   14000fc68:	lea    rcx,[rsp+0xc0]
   14000fc70:	call   0x140009700
   14000fc75:	nop
   14000fc76:	lea    rdx,[rsp+0x88]
   14000fc7e:	mov    rcx,r12
   14000fc81:	call   0x140008c50
   14000fc86:	mov    r13,rax
   14000fc89:	lea    rcx,[rsi+0x30]
   14000fc8d:	call   QWORD PTR [rip+0xb685]        # 0x14001b318
   14000fc93:	test   al,al
   14000fc95:	je     0x14000fc9b
   14000fc97:	xor    ebp,ebp
   14000fc99:	jmp    0x14000fca8
   14000fc9b:	lea    rcx,[rsi+0x30]
   14000fc9f:	call   QWORD PTR [rip+0xb573]        # 0x14001b218
   14000fca5:	mov    rbp,rax
   14000fca8:	lea    rcx,[r12+0x10]
   14000fcad:	call   QWORD PTR [rip+0xb665]        # 0x14001b318
   14000fcb3:	test   al,al
   14000fcb5:	je     0x14000fcbb
   14000fcb7:	xor    eax,eax
   14000fcb9:	jmp    0x14000fcc6
   14000fcbb:	lea    rcx,[r12+0x10]
   14000fcc0:	call   QWORD PTR [rip+0xb552]        # 0x14001b218
   14000fcc6:	mov    r9,rbp
   14000fcc9:	mov    r8,rax
   14000fccc:	mov    rdx,r13
   14000fccf:	lea    rcx,[rsp+0x78]
   14000fcd4:	call   0x14000def0
   14000fcd9:	mov    rdx,rax
   14000fcdc:	mov    rax,QWORD PTR [rip+0xb8fd]        # 0x14001b5e0
   14000fce3:	mov    QWORD PTR [rsp+0x50],rax
   14000fce8:	lea    rcx,[rsp+0x50]
   14000fced:	call   0x1400049b0
   14000fcf2:	nop
   14000fcf3:	lea    rdx,[rsp+0x50]
   14000fcf8:	lea    rcx,[rsp+0xe0]
   14000fd00:	call   0x1400045d0
   14000fd05:	nop
   14000fd06:	mov    rbp,QWORD PTR [rsp+0x50]
   14000fd0b:	mov    eax,DWORD PTR [rbp+0x0]
   14000fd0e:	test   eax,eax
   14000fd10:	je     0x14000fd3c
   14000fd12:	cmp    eax,0xffffffff
   14000fd15:	je     0x14000fd6f
   14000fd17:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000fd1c:	setne  al
   14000fd1f:	test   al,al
   14000fd21:	jne    0x14000fd32
   14000fd23:	mov    rbx,QWORD PTR [rsp+0x178]
   14000fd2b:	mov    rbp,QWORD PTR [rsp+0x50]
   14000fd30:	jmp    0x14000fd3c
   14000fd32:	mov    rbx,QWORD PTR [rsp+0x178]
   14000fd3a:	jmp    0x14000fd6f
   14000fd3c:	movsxd rax,DWORD PTR [rbp+0xc]
   14000fd40:	lea    rdi,[rbp+rax*8+0x10]
   14000fd45:	movsxd rax,DWORD PTR [rbp+0x8]
   14000fd49:	lea    r12,[rbp+rax*8+0x10]
   14000fd4e:	cmp    r12,rdi
   14000fd51:	je     0x14000fd65
   14000fd53:	sub    rdi,0x8
   14000fd57:	mov    rcx,rdi
   14000fd5a:	call   QWORD PTR [rip+0xb8c8]        # 0x14001b628
   14000fd60:	cmp    rdi,r12
   14000fd63:	jne    0x14000fd53
   14000fd65:	mov    rcx,rbp
   14000fd68:	call   QWORD PTR [rip+0xb522]        # 0x14001b290
   14000fd6e:	nop
   14000fd6f:	lea    rcx,[rsp+0x78]
   14000fd74:	call   QWORD PTR [rip+0xb8ae]        # 0x14001b628
   14000fd7a:	nop
   14000fd7b:	lea    rcx,[rsp+0x88]
   14000fd83:	call   QWORD PTR [rip+0xb89f]        # 0x14001b628
   14000fd89:	lea    rdx,[rsp+0xc0]
   14000fd91:	mov    rcx,QWORD PTR [rsp+0x160]
   14000fd99:	call   0x14000a9f0
   14000fd9e:	mov    r15d,DWORD PTR [rsp+0x168]
   14000fda6:	inc    r15d
   14000fda9:	mov    DWORD PTR [rsp+0x168],r15d
   14000fdb1:	lea    rcx,[rsp+0xe8]
   14000fdb9:	call   QWORD PTR [rip+0xb869]        # 0x14001b628
   14000fdbf:	nop
   14000fdc0:	mov    rbp,QWORD PTR [rsp+0xe0]
   14000fdc8:	mov    eax,DWORD PTR [rbp+0x0]
   14000fdcb:	test   eax,eax
   14000fdcd:	je     0x14000fdfc
   14000fdcf:	cmp    eax,0xffffffff
   14000fdd2:	je     0x14000fe2f
   14000fdd4:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000fdd9:	setne  al
   14000fddc:	test   al,al
   14000fdde:	jne    0x14000fdf2
   14000fde0:	mov    rbx,QWORD PTR [rsp+0x178]
   14000fde8:	mov    rbp,QWORD PTR [rsp+0xe0]
   14000fdf0:	jmp    0x14000fdfc
   14000fdf2:	mov    rbx,QWORD PTR [rsp+0x178]
   14000fdfa:	jmp    0x14000fe2f
   14000fdfc:	movsxd rax,DWORD PTR [rbp+0xc]
   14000fe00:	lea    rdi,[rbp+rax*8+0x10]
   14000fe05:	movsxd rax,DWORD PTR [rbp+0x8]
   14000fe09:	lea    r12,[rbp+rax*8+0x10]
   14000fe0e:	cmp    r12,rdi
   14000fe11:	je     0x14000fe25
   14000fe13:	sub    rdi,0x8
   14000fe17:	mov    rcx,rdi
   14000fe1a:	call   QWORD PTR [rip+0xb808]        # 0x14001b628
   14000fe20:	cmp    rdi,r12
   14000fe23:	jne    0x14000fe13
   14000fe25:	mov    rcx,rbp
   14000fe28:	call   QWORD PTR [rip+0xb462]        # 0x14001b290
   14000fe2e:	nop
   14000fe2f:	lea    rcx,[rsp+0xd8]
   14000fe37:	call   QWORD PTR [rip+0xb7e3]        # 0x14001b620
   14000fe3d:	nop
   14000fe3e:	lea    rcx,[rsp+0xd0]
   14000fe46:	call   QWORD PTR [rip+0xb7d4]        # 0x14001b620
   14000fe4c:	nop
   14000fe4d:	lea    rcx,[rsp+0xc8]
   14000fe55:	call   QWORD PTR [rip+0xb7c5]        # 0x14001b620
   14000fe5b:	jmp    0x14000fe79
   14000fe5d:	mov    r15d,DWORD PTR [rsp+0x168]
   14000fe65:	jmp    0x14000fe79
   14000fe67:	mov    r15d,DWORD PTR [rsp+0x168]
   14000fe6f:	jmp    0x14000fe79
   14000fe71:	mov    r15d,DWORD PTR [rsp+0x168]
   14000fe79:	mov    rcx,rsi
   14000fe7c:	call   QWORD PTR [rip+0xb4a6]        # 0x14001b328
   14000fe82:	mov    rsi,rax
   14000fe85:	or     r14d,0xffffffff
   14000fe89:	jmp    0x14000f690
   14000fe8e:	mov    rdi,QWORD PTR [rsp+0x40]
   14000fe93:	mov    eax,DWORD PTR [rdi]
   14000fe95:	test   eax,eax
   14000fe97:	je     0x14000fec8
   14000fe99:	cmp    eax,0xffffffff
   14000fe9c:	je     0x14000feee
   14000fe9e:	mov    eax,r14d
   14000fea1:	lock xadd DWORD PTR [rdi],eax
   14000fea5:	add    eax,0xffffffff
   14000fea8:	setne  al
   14000feab:	test   al,al
   14000fead:	jne    0x14000febe
   14000feaf:	mov    rbx,QWORD PTR [rsp+0x178]
   14000feb7:	mov    rdi,QWORD PTR [rsp+0x40]
   14000febc:	jmp    0x14000fec8
   14000febe:	mov    rbx,QWORD PTR [rsp+0x178]
   14000fec6:	jmp    0x14000feee
   14000fec8:	movsxd rax,DWORD PTR [rdi+0xc]
   14000fecc:	lea    r8,[rdi+rax*8+0x10]
   14000fed1:	movsxd rax,DWORD PTR [rdi+0x8]
   14000fed5:	lea    rdx,[rdi+rax*8+0x10]
   14000feda:	lea    rcx,[rsp+0x40]
   14000fedf:	call   0x140006c90
   14000fee4:	mov    rcx,rdi
   14000fee7:	call   QWORD PTR [rip+0xb3a3]        # 0x14001b290
   14000feed:	nop
   14000feee:	mov    rdi,QWORD PTR [rsp+0x30]
   14000fef3:	mov    eax,DWORD PTR [rdi]
   14000fef5:	test   eax,eax
   14000fef7:	je     0x14000ff23
   14000fef9:	cmp    eax,0xffffffff
   14000fefc:	je     0x14000ff55
   14000fefe:	mov    eax,r14d
   14000ff01:	lock xadd DWORD PTR [rdi],eax
   14000ff05:	add    eax,0xffffffff
   14000ff08:	setne  al
   14000ff0b:	test   al,al
   14000ff0d:	jne    0x14000ff19
   14000ff0f:	mov    rbx,QWORD PTR [rsp+0x178]
   14000ff17:	jmp    0x14000ff23
   14000ff19:	mov    rbx,QWORD PTR [rsp+0x178]
   14000ff21:	jmp    0x14000ff55
   14000ff23:	mov    rdi,QWORD PTR [rsp+0x30]
   14000ff28:	mov    rcx,QWORD PTR [rdi+0x10]
   14000ff2c:	test   rcx,rcx
   14000ff2f:	je     0x14000ff49
   14000ff31:	call   0x14000de80
   14000ff36:	mov    r8d,0x8
   14000ff3c:	mov    rdx,QWORD PTR [rdi+0x10]
   14000ff40:	mov    rcx,rdi
   14000ff43:	call   QWORD PTR [rip+0xb357]        # 0x14001b2a0
   14000ff49:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ff4e:	call   QWORD PTR [rip+0xb344]        # 0x14001b298
   14000ff54:	nop
   14000ff55:	mov    eax,DWORD PTR [rbx]
   14000ff57:	test   eax,eax
   14000ff59:	je     0x14000ff84
   14000ff5b:	cmp    eax,0xffffffff
   14000ff5e:	je     0x14000ff7f
   14000ff60:	lock xadd DWORD PTR [rbx],r14d
   14000ff65:	add    r14d,0xffffffff
   14000ff69:	setne  al
   14000ff6c:	test   al,al
   14000ff6e:	jne    0x14000ff7a
   14000ff70:	mov    rbx,QWORD PTR [rsp+0x178]
   14000ff78:	jmp    0x14000ff84
   14000ff7a:	mov    eax,r15d
   14000ff7d:	jmp    0x14000ffb1
   14000ff7f:	mov    eax,r15d
   14000ff82:	jmp    0x14000ffb1
   14000ff84:	mov    rcx,QWORD PTR [rbx+0x10]
   14000ff88:	test   rcx,rcx
   14000ff8b:	je     0x14000ffa5
   14000ff8d:	call   0x14000de80
   14000ff92:	mov    r8d,0x8
   14000ff98:	mov    rdx,QWORD PTR [rbx+0x10]
   14000ff9c:	mov    rcx,rbx
   14000ff9f:	call   QWORD PTR [rip+0xb2fb]        # 0x14001b2a0
   14000ffa5:	mov    rcx,rbx
   14000ffa8:	call   QWORD PTR [rip+0xb2ea]        # 0x14001b298
   14000ffae:	mov    eax,r15d
   14000ffb1:	add    rsp,0x118
   14000ffb8:	pop    r15
   14000ffba:	pop    r14
   14000ffbc:	pop    r13
   14000ffbe:	pop    r12
   14000ffc0:	pop    rdi
   14000ffc1:	pop    rsi
   14000ffc2:	pop    rbp
   14000ffc3:	pop    rbx
   14000ffc4:	ret    
   14000ffc5:	int3   
   14000ffc6:	int3   
   14000ffc7:	int3   
   14000ffc8:	int3   
   14000ffc9:	int3   
   14000ffca:	int3   
   14000ffcb:	int3   
   14000ffcc:	int3   
   14000ffcd:	int3   
   14000ffce:	int3   
   14000ffcf:	int3   
   14000ffd0:	mov    QWORD PTR [rsp+0x8],rcx
   14000ffd5:	push   rdi
   14000ffd6:	sub    rsp,0x30
   14000ffda:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ffe3:	mov    QWORD PTR [rsp+0x48],rbx
   14000ffe8:	mov    rbx,r8
   14000ffeb:	mov    rdi,rcx
   14000ffee:	mov    DWORD PTR [rsp+0x58],0x0
   14000fff6:	call   QWORD PTR [rip+0xb50c]        # 0x14001b508
   14000fffc:	mov    DWORD PTR [rsp+0x58],0x1
   140010004:	mov    rdx,rbx
   140010007:	mov    rcx,rdi
   14001000a:	call   QWORD PTR [rip+0xb5f0]        # 0x14001b600
   140010010:	mov    rax,rdi
   140010013:	mov    rbx,QWORD PTR [rsp+0x48]
   140010018:	add    rsp,0x30
   14001001c:	pop    rdi
   14001001d:	ret    
   14001001e:	int3   
   14001001f:	int3   
   140010020:	mov    QWORD PTR [rsp+0x8],rbx
   140010025:	mov    QWORD PTR [rsp+0x18],rsi
   14001002a:	push   rdi
   14001002b:	sub    rsp,0x20
   14001002f:	mov    rax,QWORD PTR [r8]
   140010032:	mov    rdi,rcx
   140010035:	mov    rcx,r8
   140010038:	mov    ebx,DWORD PTR [rax+0x4]
   14001003b:	mov    rsi,rdx
   14001003e:	mov    DWORD PTR [rsp+0x38],0x0
   140010046:	call   QWORD PTR [rip+0xb4cc]        # 0x14001b518
   14001004c:	mov    r9d,ebx
   14001004f:	mov    rdx,rdi
   140010052:	mov    r8,rax
   140010055:	mov    rcx,rsi
   140010058:	call   QWORD PTR [rip+0xb4b2]        # 0x14001b510
   14001005e:	mov    rbx,QWORD PTR [rsp+0x30]
   140010063:	mov    rax,rsi
   140010066:	mov    rsi,QWORD PTR [rsp+0x40]
   14001006b:	add    rsp,0x20
   14001006f:	pop    rdi
   140010070:	ret    
   140010071:	int3   
   140010072:	int3   
   140010073:	int3   
   140010074:	int3   
   140010075:	int3   
   140010076:	int3   
   140010077:	int3   
   140010078:	int3   
   140010079:	int3   
   14001007a:	int3   
   14001007b:	int3   
   14001007c:	int3   
   14001007d:	int3   
   14001007e:	int3   
   14001007f:	int3   
   140010080:	mov    QWORD PTR [rsp+0x8],rcx
   140010085:	push   rbx
   140010086:	push   rsi
   140010087:	push   rdi
   140010088:	sub    rsp,0x60
   14001008c:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140010095:	mov    rsi,rcx
   140010098:	mov    DWORD PTR [rsp+0x90],0x0
   1400100a3:	lea    rcx,[rsp+0x40]
   1400100a8:	call   QWORD PTR [rip+0xb1da]        # 0x14001b288
   1400100ae:	nop
   1400100af:	mov    edx,0x1
   1400100b4:	lea    rcx,[rsp+0x40]
   1400100b9:	call   QWORD PTR [rip+0xb1c1]        # 0x14001b280
   1400100bf:	test   al,al
   1400100c1:	jne    0x14001019a
   1400100c7:	lea    rdx,[rsp+0x30]
   1400100cc:	lea    rcx,[rsp+0x40]
   1400100d1:	call   QWORD PTR [rip+0xb451]        # 0x14001b528
   1400100d7:	nop
   1400100d8:	lea    rdx,[rsp+0x28]
   1400100dd:	mov    rcx,rax
   1400100e0:	call   QWORD PTR [rip+0xb502]        # 0x14001b5e8
   1400100e6:	mov    rdi,rax
   1400100e9:	lea    rdx,[rsp+0x20]
   1400100ee:	lea    rcx,[rsp+0x40]
   1400100f3:	call   QWORD PTR [rip+0xb427]        # 0x14001b520
   1400100f9:	nop
   1400100fa:	lea    rdx,[rsp+0x98]
   140010102:	mov    rcx,rax
   140010105:	call   QWORD PTR [rip+0xb4dd]        # 0x14001b5e8
   14001010b:	mov    rbx,rax
   14001010e:	mov    rcx,rdi
   140010111:	call   QWORD PTR [rip+0xb101]        # 0x14001b218
   140010117:	mov    rdi,rax
   14001011a:	mov    rcx,rbx
   14001011d:	call   QWORD PTR [rip+0xb0f5]        # 0x14001b218
   140010123:	mov    rbx,rax
   140010126:	call   QWORD PTR [rip+0xb0bc]        # 0x14001b1e8
   14001012c:	mov    r9,rdi
   14001012f:	mov    r8,rbx
   140010132:	lea    rdx,[rip+0xebdf]        # 0x14001ed18
   140010139:	lea    rcx,[rax+0x60]
   14001013d:	call   QWORD PTR [rip+0xb0ad]        # 0x14001b1f0
   140010143:	nop
   140010144:	lea    rcx,[rsp+0x98]
   14001014c:	call   QWORD PTR [rip+0xb4ce]        # 0x14001b620
   140010152:	nop
   140010153:	lea    rcx,[rsp+0x20]
   140010158:	call   QWORD PTR [rip+0xb4ca]        # 0x14001b628
   14001015e:	nop
   14001015f:	lea    rcx,[rsp+0x28]
   140010164:	call   QWORD PTR [rip+0xb4b6]        # 0x14001b620
   14001016a:	nop
   14001016b:	lea    rcx,[rsp+0x30]
   140010170:	call   QWORD PTR [rip+0xb4b2]        # 0x14001b628
   140010176:	mov    rcx,rsi
   140010179:	call   QWORD PTR [rip+0xb491]        # 0x14001b610
   14001017f:	mov    DWORD PTR [rsp+0x90],0x1
   14001018a:	lea    rcx,[rsp+0x40]
   14001018f:	call   QWORD PTR [rip+0xb0e3]        # 0x14001b278
   140010195:	mov    rax,rsi
   140010198:	jmp    0x1400101de
   14001019a:	lea    rdx,[rsp+0x40]
   14001019f:	lea    rcx,[rsp+0x50]
   1400101a4:	call   QWORD PTR [rip+0xb24e]        # 0x14001b3f8
   1400101aa:	nop
   1400101ab:	mov    rdx,rsi
   1400101ae:	lea    rcx,[rsp+0x50]
   1400101b3:	call   QWORD PTR [rip+0xb237]        # 0x14001b3f0
   1400101b9:	mov    DWORD PTR [rsp+0x90],0x1
   1400101c4:	lea    rcx,[rsp+0x50]
   1400101c9:	call   QWORD PTR [rip+0xb219]        # 0x14001b3e8
   1400101cf:	nop
   1400101d0:	lea    rcx,[rsp+0x40]
   1400101d5:	call   QWORD PTR [rip+0xb09d]        # 0x14001b278
   1400101db:	mov    rax,rsi
   1400101de:	add    rsp,0x60
   1400101e2:	pop    rdi
   1400101e3:	pop    rsi
   1400101e4:	pop    rbx
   1400101e5:	ret    
   1400101e6:	int3   
   1400101e7:	int3   
   1400101e8:	int3   
   1400101e9:	int3   
   1400101ea:	int3   
   1400101eb:	int3   
   1400101ec:	int3   
   1400101ed:	int3   
   1400101ee:	int3   
   1400101ef:	int3   
   1400101f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400101f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400101fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400101ff:	push   rdi
   140010200:	push   r12
   140010202:	push   r13
   140010204:	push   r14
   140010206:	push   r15
   140010208:	sub    rsp,0x30
   14001020c:	mov    rax,QWORD PTR [rcx]
   14001020f:	mov    r15,r9
   140010212:	mov    r13,r8
   140010215:	mov    r10d,DWORD PTR [rax]
   140010218:	mov    r12,rdx
   14001021b:	mov    r14,rcx
   14001021e:	cmp    r10d,0x1
   140010222:	je     0x14001022e
   140010224:	test   r10d,r10d
   140010227:	je     0x14001022e
   140010229:	call   0x140004730
   14001022e:	mov    rax,QWORD PTR [r14]
   140010231:	xor    esi,esi
   140010233:	mov    dil,0x1
   140010236:	mov    rbx,QWORD PTR [rax+0x10]
   14001023a:	lea    rbp,[rax+0x8]
   14001023e:	test   rbx,rbx
   140010241:	je     0x1400102a5
   140010243:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140010250:	lea    rcx,[rbx+0x18]
   140010254:	mov    rdx,r13
   140010257:	mov    rbp,rbx
   14001025a:	call   QWORD PTR [rip+0xb288]        # 0x14001b4e8
   140010260:	test   al,al
   140010262:	jne    0x140010270
   140010264:	mov    rsi,rbx
   140010267:	mov    rbx,QWORD PTR [rbx+0x8]
   14001026b:	mov    dil,0x1
   14001026e:	jmp    0x140010277
   140010270:	mov    rbx,QWORD PTR [rbx+0x10]
   140010274:	xor    dil,dil
   140010277:	test   rbx,rbx
   14001027a:	jne    0x140010250
   14001027c:	test   rsi,rsi
   14001027f:	je     0x1400102a5
   140010281:	lea    rdx,[rsi+0x18]
   140010285:	mov    rcx,r13
   140010288:	call   QWORD PTR [rip+0xb25a]        # 0x14001b4e8
   14001028e:	test   al,al
   140010290:	jne    0x1400102a5
   140010292:	lea    rcx,[rsi+0x20]
   140010296:	mov    rdx,r15
   140010299:	call   QWORD PTR [rip+0xb039]        # 0x14001b2d8
   14001029f:	mov    QWORD PTR [r12],rsi
   1400102a3:	jmp    0x1400102bf
   1400102a5:	mov    rcx,QWORD PTR [r14]
   1400102a8:	mov    r9,rbp
   1400102ab:	mov    r8,r15
   1400102ae:	mov    rdx,r13
   1400102b1:	mov    BYTE PTR [rsp+0x20],dil
   1400102b6:	call   0x140004360
   1400102bb:	mov    QWORD PTR [r12],rax
   1400102bf:	mov    rbx,QWORD PTR [rsp+0x60]
   1400102c4:	mov    rbp,QWORD PTR [rsp+0x68]
   1400102c9:	mov    rsi,QWORD PTR [rsp+0x70]
   1400102ce:	mov    rax,r12
   1400102d1:	add    rsp,0x30
   1400102d5:	pop    r15
   1400102d7:	pop    r14
   1400102d9:	pop    r13
   1400102db:	pop    r12
   1400102dd:	pop    rdi
   1400102de:	ret    
   1400102df:	int3   
   1400102e0:	rex push rbp
   1400102e2:	push   rsi
   1400102e3:	push   rdi
   1400102e4:	push   r12
   1400102e6:	push   r13
   1400102e8:	push   r14
   1400102ea:	push   r15
   1400102ec:	sub    rsp,0x3d0
   1400102f3:	mov    QWORD PTR [rsp+0x2a0],0xfffffffffffffffe
   1400102ff:	mov    QWORD PTR [rsp+0x420],rbx
   140010307:	mov    rax,QWORD PTR [rip+0x18f12]        # 0x140029220
   14001030e:	xor    rax,rsp
   140010311:	mov    QWORD PTR [rsp+0x3c0],rax
   140010319:	mov    rbp,rcx
   14001031c:	mov    QWORD PTR [rsp+0x2b0],rcx
   140010324:	mov    DWORD PTR [rsp+0x30],0x0
   14001032c:	lea    rcx,[rsp+0x50]
   140010331:	call   QWORD PTR [rip+0xaff9]        # 0x14001b330
   140010337:	nop
   140010338:	mov    rax,QWORD PTR [rip+0xb299]        # 0x14001b5d8
   14001033f:	mov    QWORD PTR [rbp+0x0],rax
   140010343:	mov    esi,0x1
   140010348:	mov    DWORD PTR [rsp+0x30],esi
   14001034c:	mov    eax,0x3b
   140010351:	mov    WORD PTR [rsp+0x78],ax
   140010356:	lea    r13d,[rsi+0x1f]
   14001035a:	lea    r14d,[rsi+0x39]
   14001035e:	xchg   ax,ax
   140010360:	xor    eax,eax
   140010362:	or     rcx,0xffffffffffffffff
   140010366:	lea    rdi,[rip+0xeaa3]        # 0x14001ee10
   14001036d:	repnz scas al,BYTE PTR es:[rdi]
   14001036f:	not    rcx
   140010372:	lea    rdx,[rcx-0x1]
   140010376:	lea    rcx,[rip+0xea93]        # 0x14001ee10
   14001037d:	call   QWORD PTR [rip+0xb295]        # 0x14001b618
   140010383:	mov    QWORD PTR [rsp+0xc8],rax
   14001038b:	xor    eax,eax
   14001038d:	or     rcx,0xffffffffffffffff
   140010391:	lea    rdi,[rip+0xea70]        # 0x14001ee08
   140010398:	repnz scas al,BYTE PTR es:[rdi]
   14001039a:	not    rcx
   14001039d:	lea    rdx,[rcx-0x1]
   1400103a1:	lea    rcx,[rip+0xea60]        # 0x14001ee08
   1400103a8:	call   QWORD PTR [rip+0xb26a]        # 0x14001b618
   1400103ae:	mov    QWORD PTR [rsp+0x130],rax
   1400103b6:	xor    r9d,r9d
   1400103b9:	lea    r8d,[r9+0x1]
   1400103bd:	lea    rdx,[rsp+0x130]
   1400103c5:	lea    rcx,[rsp+0x1b8]
   1400103cd:	call   QWORD PTR [rip+0xaf1d]        # 0x14001b2f0
   1400103d3:	nop
   1400103d4:	lea    r8,[rsp+0xc8]
   1400103dc:	mov    rdx,rax
   1400103df:	lea    rcx,[rsp+0x50]
   1400103e4:	call   QWORD PTR [rip+0xaefe]        # 0x14001b2e8
   1400103ea:	nop
   1400103eb:	lea    rcx,[rsp+0x1b8]
   1400103f3:	call   QWORD PTR [rip+0xaee7]        # 0x14001b2e0
   1400103f9:	nop
   1400103fa:	lea    rcx,[rsp+0x130]
   140010402:	call   QWORD PTR [rip+0xb220]        # 0x14001b628
   140010408:	nop
   140010409:	lea    rcx,[rsp+0xc8]
   140010411:	call   QWORD PTR [rip+0xb211]        # 0x14001b628
   140010417:	xor    eax,eax
   140010419:	or     rcx,0xffffffffffffffff
   14001041d:	lea    rdi,[rip+0xe9c4]        # 0x14001ede8
   140010424:	repnz scas al,BYTE PTR es:[rdi]
   140010426:	not    rcx
   140010429:	lea    rdx,[rcx-0x1]
   14001042d:	lea    rcx,[rip+0xe9b4]        # 0x14001ede8
   140010434:	call   QWORD PTR [rip+0xb1de]        # 0x14001b618
   14001043a:	mov    QWORD PTR [rsp+0x178],rax
   140010442:	xor    r9d,r9d
   140010445:	lea    r8d,[r9+0x1]
   140010449:	lea    rdx,[rsp+0x178]
   140010451:	lea    rcx,[rsp+0x70]
   140010456:	call   QWORD PTR [rip+0xae94]        # 0x14001b2f0
   14001045c:	nop
   14001045d:	lea    rcx,[rsp+0x178]
   140010465:	call   QWORD PTR [rip+0xb1bd]        # 0x14001b628
   14001046b:	xor    r9d,r9d
   14001046e:	xor    r8d,r8d
   140010471:	lea    rdx,[rsp+0x50]
   140010476:	lea    rcx,[rsp+0x70]
   14001047b:	call   QWORD PTR [rip+0xb0ef]        # 0x14001b570
   140010481:	mov    r15d,eax
   140010484:	cmp    eax,0xffffffff
   140010487:	je     0x140010ab5
   14001048d:	nop    DWORD PTR [rax]
   140010490:	mov    BYTE PTR [rsp+0x40],0x0
   140010495:	mov    r8d,0x1
   14001049b:	lea    rdx,[rsp+0x108]
   1400104a3:	lea    rcx,[rsp+0x70]
   1400104a8:	call   QWORD PTR [rip+0xb0ba]        # 0x14001b568
   1400104ae:	nop
   1400104af:	xor    eax,eax
   1400104b1:	or     rcx,0xffffffffffffffff
   1400104b5:	lea    rdi,[rip+0xe920]        # 0x14001eddc
   1400104bc:	repnz scas al,BYTE PTR es:[rdi]
   1400104be:	not    rcx
   1400104c1:	lea    rdx,[rcx-0x1]
   1400104c5:	lea    rcx,[rip+0xe910]        # 0x14001eddc
   1400104cc:	call   QWORD PTR [rip+0xb146]        # 0x14001b618
   1400104d2:	mov    QWORD PTR [rsp+0xd8],rax
   1400104da:	lea    rcx,[rsp+0x240]
   1400104e2:	call   QWORD PTR [rip+0xb160]        # 0x14001b648
   1400104e8:	nop
   1400104e9:	mov    r9d,0x1
   1400104ef:	mov    r8,rax
   1400104f2:	lea    rdx,[rsp+0xd8]
   1400104fa:	lea    rcx,[rsp+0x108]
   140010502:	call   QWORD PTR [rip+0xaef8]        # 0x14001b400
   140010508:	mov    rdx,rax
   14001050b:	lea    rcx,[rsp+0x58]
   140010510:	call   QWORD PTR [rip+0xae1a]        # 0x14001b330
   140010516:	nop
   140010517:	lea    rcx,[rsp+0x240]
   14001051f:	call   QWORD PTR [rip+0xb103]        # 0x14001b628
   140010525:	nop
   140010526:	lea    rcx,[rsp+0xd8]
   14001052e:	call   QWORD PTR [rip+0xb0f4]        # 0x14001b628
   140010534:	mov    rdx,QWORD PTR [rbp+0x0]
   140010538:	cmp    DWORD PTR [rdx+0x4],0x0
   14001053c:	je     0x140010596
   14001053e:	xor    eax,eax
   140010540:	or     rcx,0xffffffffffffffff
   140010544:	lea    rdi,[rip+0xe88d]        # 0x14001edd8
   14001054b:	repnz scas al,BYTE PTR es:[rdi]
   14001054d:	not    rcx
   140010550:	lea    rdx,[rcx-0x1]
   140010554:	lea    rcx,[rip+0xe87d]        # 0x14001edd8
   14001055b:	call   QWORD PTR [rip+0xb0b7]        # 0x14001b618
   140010561:	mov    QWORD PTR [rsp+0x148],rax
   140010569:	or     esi,0x2
   14001056c:	mov    DWORD PTR [rsp+0x30],esi
   140010570:	mov    r9d,0x1
   140010576:	xor    r8d,r8d
   140010579:	lea    rdx,[rsp+0x148]
   140010581:	lea    rcx,[rsp+0x58]
   140010586:	call   QWORD PTR [rip+0xafd4]        # 0x14001b560
   14001058c:	cmp    eax,0xffffffff
   14001058f:	je     0x140010596
   140010591:	mov    dil,0x1
   140010594:	jmp    0x140010599
   140010596:	xor    dil,dil
   140010599:	test   sil,0x2
   14001059d:	je     0x1400105b4
   14001059f:	and    esi,0xfffffffd
   1400105a2:	mov    DWORD PTR [rsp+0x30],esi
   1400105a6:	lea    rcx,[rsp+0x148]
   1400105ae:	call   QWORD PTR [rip+0xb074]        # 0x14001b628
   1400105b4:	test   dil,dil
   1400105b7:	je     0x1400108d5
   1400105bd:	xor    eax,eax
   1400105bf:	or     rcx,0xffffffffffffffff
   1400105c3:	lea    rdi,[rip+0xe7ee]        # 0x14001edb8
   1400105ca:	repnz scas al,BYTE PTR es:[rdi]
   1400105cc:	not    rcx
   1400105cf:	lea    rdx,[rcx-0x1]
   1400105d3:	lea    rcx,[rip+0xe7de]        # 0x14001edb8
   1400105da:	call   QWORD PTR [rip+0xb038]        # 0x14001b618
   1400105e0:	mov    QWORD PTR [rsp+0xe8],rax
   1400105e8:	xor    r9d,r9d
   1400105eb:	lea    r8d,[r9+0x1]
   1400105ef:	lea    rdx,[rsp+0xe8]
   1400105f7:	lea    rcx,[rsp+0x80]
   1400105ff:	call   QWORD PTR [rip+0xaceb]        # 0x14001b2f0
   140010605:	nop
   140010606:	lea    rcx,[rsp+0xe8]
   14001060e:	call   QWORD PTR [rip+0xb014]        # 0x14001b628
   140010614:	xor    r8d,r8d
   140010617:	lea    rdx,[rsp+0x80]
   14001061f:	lea    rcx,[rsp+0x58]
   140010624:	call   QWORD PTR [rip+0xaf2e]        # 0x14001b558
   14001062a:	mov    r13d,eax
   14001062d:	cmp    eax,0xffffffff
   140010630:	je     0x1400108c0
   140010636:	data16 nop WORD PTR [rax+rax*1+0x0]
   140010640:	mov    r8d,0x1
   140010646:	lea    rdx,[rsp+0x1d0]
   14001064e:	lea    rcx,[rsp+0x80]
   140010656:	call   QWORD PTR [rip+0xaf0c]        # 0x14001b568
   14001065c:	mov    rsi,rax
   14001065f:	mov    rax,QWORD PTR [rbp+0x0]
   140010663:	mov    rdi,QWORD PTR [rax+0x10]
   140010667:	test   rdi,rdi
   14001066a:	je     0x1400106a9
   14001066c:	xor    ebx,ebx
   14001066e:	xchg   ax,ax
   140010670:	lea    rcx,[rdi+0x18]
   140010674:	mov    rdx,rsi
   140010677:	call   QWORD PTR [rip+0xae6b]        # 0x14001b4e8
   14001067d:	test   al,al
   14001067f:	jne    0x14001068a
   140010681:	mov    rbx,rdi
   140010684:	mov    rdi,QWORD PTR [rdi+0x8]
   140010688:	jmp    0x14001068e
   14001068a:	mov    rdi,QWORD PTR [rdi+0x10]
   14001068e:	test   rdi,rdi
   140010691:	jne    0x140010670
   140010693:	test   rbx,rbx
   140010696:	je     0x1400106a9
   140010698:	lea    rdx,[rbx+0x18]
   14001069c:	mov    rcx,rsi
   14001069f:	call   QWORD PTR [rip+0xae43]        # 0x14001b4e8
   1400106a5:	test   al,al
   1400106a7:	je     0x1400106ab
   1400106a9:	xor    ebx,ebx
   1400106ab:	test   rbx,rbx
   1400106ae:	setne  dil
   1400106b2:	lea    rcx,[rsp+0x1d0]
   1400106ba:	call   QWORD PTR [rip+0xaf68]        # 0x14001b628
   1400106c0:	test   dil,dil
   1400106c3:	je     0x1400108b7
   1400106c9:	mov    r8d,0x1
   1400106cf:	lea    rdx,[rsp+0x250]
   1400106d7:	lea    rcx,[rsp+0x80]
   1400106df:	call   QWORD PTR [rip+0xae83]        # 0x14001b568
   1400106e5:	mov    rsi,rax
   1400106e8:	xor    r8d,r8d
   1400106eb:	lea    rdx,[rsp+0x1e0]
   1400106f3:	lea    rcx,[rsp+0x80]
   1400106fb:	call   QWORD PTR [rip+0xae67]        # 0x14001b568
   140010701:	mov    r14,rax
   140010704:	mov    rax,QWORD PTR [rbp+0x0]
   140010708:	mov    ecx,DWORD PTR [rax]
   14001070a:	cmp    ecx,0x1
   14001070d:	je     0x1400107cd
   140010713:	test   ecx,ecx
   140010715:	je     0x1400107cd
   14001071b:	call   QWORD PTR [rip+0xae7f]        # 0x14001b5a0
   140010721:	mov    rbx,rax
   140010724:	mov    rax,QWORD PTR [rbp+0x0]
   140010728:	mov    rcx,QWORD PTR [rax+0x10]
   14001072c:	test   rcx,rcx
   14001072f:	je     0x14001074b
   140010731:	mov    rdx,rbx
   140010734:	call   0x1400043e0
   140010739:	mov    rdx,rax
   14001073c:	mov    QWORD PTR [rbx+0x10],rax
   140010740:	and    QWORD PTR [rax],0x3
   140010744:	lea    rax,[rbx+0x8]
   140010748:	or     QWORD PTR [rdx],rax
   14001074b:	mov    rcx,QWORD PTR [rbp+0x0]
   14001074f:	mov    eax,DWORD PTR [rcx]
   140010751:	test   eax,eax
   140010753:	je     0x140010765
   140010755:	cmp    eax,0xffffffff
   140010758:	je     0x1400107c0
   14001075a:	lock add DWORD PTR [rcx],0xffffffff
   14001075e:	setne  al
   140010761:	test   al,al
   140010763:	jne    0x1400107c0
   140010765:	mov    r12,QWORD PTR [rbp+0x0]
   140010769:	mov    rdi,QWORD PTR [r12+0x10]
   14001076e:	test   rdi,rdi
   140010771:	je     0x1400107b7
   140010773:	lea    rcx,[rdi+0x18]
   140010777:	call   QWORD PTR [rip+0xaeab]        # 0x14001b628
   14001077d:	lea    rcx,[rdi+0x20]
   140010781:	call   QWORD PTR [rip+0xaea1]        # 0x14001b628
   140010787:	mov    rcx,QWORD PTR [rdi+0x8]
   14001078b:	test   rcx,rcx
   14001078e:	je     0x140010795
   140010790:	call   0x140004490
   140010795:	mov    rcx,QWORD PTR [rdi+0x10]
   140010799:	test   rcx,rcx
   14001079c:	je     0x1400107a3
   14001079e:	call   0x140004490
   1400107a3:	mov    r8d,0x8
   1400107a9:	mov    rdx,QWORD PTR [r12+0x10]
   1400107ae:	mov    rcx,r12
   1400107b1:	call   QWORD PTR [rip+0xaae9]        # 0x14001b2a0
   1400107b7:	mov    rcx,r12
   1400107ba:	call   QWORD PTR [rip+0xaad8]        # 0x14001b298
   1400107c0:	mov    QWORD PTR [rbp+0x0],rbx
   1400107c4:	mov    rcx,rbx
   1400107c7:	call   QWORD PTR [rip+0xaae3]        # 0x14001b2b0
   1400107cd:	mov    rax,QWORD PTR [rbp+0x0]
   1400107d1:	mov    rdi,QWORD PTR [rax+0x10]
   1400107d5:	test   rdi,rdi
   1400107d8:	je     0x14001081f
   1400107da:	xor    ebx,ebx
   1400107dc:	nop    DWORD PTR [rax+0x0]
   1400107e0:	lea    rcx,[rdi+0x18]
   1400107e4:	mov    rdx,rsi
   1400107e7:	call   QWORD PTR [rip+0xacfb]        # 0x14001b4e8
   1400107ed:	test   al,al
   1400107ef:	jne    0x1400107fa
   1400107f1:	mov    rbx,rdi
   1400107f4:	mov    rdi,QWORD PTR [rdi+0x8]
   1400107f8:	jmp    0x1400107fe
   1400107fa:	mov    rdi,QWORD PTR [rdi+0x10]
   1400107fe:	test   rdi,rdi
   140010801:	jne    0x1400107e0
   140010803:	test   rbx,rbx
   140010806:	je     0x14001081f
   140010808:	lea    rdx,[rbx+0x18]
   14001080c:	mov    rcx,rsi
   14001080f:	call   QWORD PTR [rip+0xacd3]        # 0x14001b4e8
   140010815:	test   al,al
   140010817:	jne    0x14001081f
   140010819:	add    rbx,0x20
   14001081d:	jmp    0x140010859
   14001081f:	lea    rcx,[rsp+0x280]
   140010827:	call   QWORD PTR [rip+0xade3]        # 0x14001b610
   14001082d:	nop
   14001082e:	mov    r9,rax
   140010831:	mov    r8,rsi
   140010834:	lea    rdx,[rsp+0x2a8]
   14001083c:	mov    rcx,rbp
   14001083f:	call   0x1400101f0
   140010844:	mov    rbx,QWORD PTR [rax]
   140010847:	add    rbx,0x20
   14001084b:	lea    rcx,[rsp+0x280]
   140010853:	call   QWORD PTR [rip+0xadcf]        # 0x14001b628
   140010859:	mov    rax,QWORD PTR [r14]
   14001085c:	mov    r9,rbx
   14001085f:	mov    r8d,DWORD PTR [rax+0x4]
   140010863:	mov    edx,r13d
   140010866:	lea    rcx,[rsp+0x58]
   14001086b:	call   QWORD PTR [rip+0xacdf]        # 0x14001b550
   140010871:	nop
   140010872:	lea    rcx,[rsp+0x1e0]
   14001087a:	call   QWORD PTR [rip+0xada8]        # 0x14001b628
   140010880:	nop
   140010881:	lea    rcx,[rsp+0x250]
   140010889:	call   QWORD PTR [rip+0xad99]        # 0x14001b628
   14001088f:	mov    r8d,r13d
   140010892:	lea    rdx,[rsp+0x80]
   14001089a:	lea    rcx,[rsp+0x58]
   14001089f:	call   QWORD PTR [rip+0xacb3]        # 0x14001b558
   1400108a5:	mov    r13d,eax
   1400108a8:	cmp    eax,0xffffffff
   1400108ab:	jne    0x140010640
   1400108b1:	mov    esi,DWORD PTR [rsp+0x30]
   1400108b5:	jmp    0x1400108c0
   1400108b7:	mov    BYTE PTR [rsp+0x40],0x1
   1400108bc:	mov    esi,DWORD PTR [rsp+0x30]
   1400108c0:	lea    rcx,[rsp+0x80]
   1400108c8:	call   QWORD PTR [rip+0xaa12]        # 0x14001b2e0
   1400108ce:	cmp    BYTE PTR [rsp+0x40],0x0
   1400108d3:	jne    0x14001092d
   1400108d5:	xor    eax,eax
   1400108d7:	or     rcx,0xffffffffffffffff
   1400108db:	lea    rdi,[rip+0xe4f6]        # 0x14001edd8
   1400108e2:	repnz scas al,BYTE PTR es:[rdi]
   1400108e4:	not    rcx
   1400108e7:	lea    rdx,[rcx-0x1]
   1400108eb:	lea    rcx,[rip+0xe4e6]        # 0x14001edd8
   1400108f2:	call   QWORD PTR [rip+0xad20]        # 0x14001b618
   1400108f8:	mov    QWORD PTR [rsp+0x198],rax
   140010900:	or     esi,0x4
   140010903:	mov    DWORD PTR [rsp+0x30],esi
   140010907:	mov    r9d,0x1
   14001090d:	xor    r8d,r8d
   140010910:	lea    rdx,[rsp+0x198]
   140010918:	lea    rcx,[rsp+0x58]
   14001091d:	call   QWORD PTR [rip+0xac3d]        # 0x14001b560
   140010923:	cmp    eax,0xffffffff
   140010926:	je     0x14001092d
   140010928:	xor    dil,dil
   14001092b:	jmp    0x140010930
   14001092d:	mov    dil,0x1
   140010930:	test   sil,0x4
   140010934:	je     0x14001094b
   140010936:	and    esi,0xfffffffb
   140010939:	mov    DWORD PTR [rsp+0x30],esi
   14001093d:	lea    rcx,[rsp+0x198]
   140010945:	call   QWORD PTR [rip+0xacdd]        # 0x14001b628
   14001094b:	test   dil,dil
   14001094e:	je     0x140010a68
   140010954:	lea    rdx,[rsp+0x58]
   140010959:	lea    rcx,[rsp+0x1f0]
   140010961:	call   0x140010080
   140010966:	mov    rdx,rax
   140010969:	lea    rcx,[rsp+0x58]
   14001096e:	call   QWORD PTR [rip+0xa964]        # 0x14001b2d8
   140010974:	lea    rcx,[rsp+0x1f0]
   14001097c:	call   QWORD PTR [rip+0xaca6]        # 0x14001b628
   140010982:	mov    r8d,0x1
   140010988:	lea    rdx,[rsp+0x298]
   140010990:	lea    rcx,[rsp+0x70]
   140010995:	call   QWORD PTR [rip+0xabcd]        # 0x14001b568
   14001099b:	nop
   14001099c:	mov    rdx,rax
   14001099f:	lea    rcx,[rsp+0x158]
   1400109a7:	call   QWORD PTR [rip+0xaa2b]        # 0x14001b3d8
   1400109ad:	nop
   1400109ae:	lea    rcx,[rsp+0x298]
   1400109b6:	call   QWORD PTR [rip+0xac6c]        # 0x14001b628
   1400109bc:	xor    eax,eax
   1400109be:	or     rcx,0xffffffffffffffff
   1400109c2:	lea    rdi,[rip+0xe413]        # 0x14001eddc
   1400109c9:	repnz scas al,BYTE PTR es:[rdi]
   1400109cb:	not    rcx
   1400109ce:	lea    rdx,[rcx-0x1]
   1400109d2:	lea    rcx,[rip+0xe403]        # 0x14001eddc
   1400109d9:	call   QWORD PTR [rip+0xac39]        # 0x14001b618
   1400109df:	mov    QWORD PTR [rsp+0xf8],rax
   1400109e7:	lea    rdx,[rsp+0x200]
   1400109ef:	lea    rcx,[rsp+0x158]
   1400109f7:	call   QWORD PTR [rip+0xa9d3]        # 0x14001b3d0
   1400109fd:	nop
   1400109fe:	mov    r9d,0x1
   140010a04:	mov    r8,rax
   140010a07:	lea    rdx,[rsp+0xf8]
   140010a0f:	lea    rcx,[rsp+0x58]
   140010a14:	call   QWORD PTR [rip+0xa9e6]        # 0x14001b400
   140010a1a:	nop
   140010a1b:	lea    rcx,[rsp+0x200]
   140010a23:	call   QWORD PTR [rip+0xabff]        # 0x14001b628
   140010a29:	nop
   140010a2a:	lea    rcx,[rsp+0xf8]
   140010a32:	call   QWORD PTR [rip+0xabf0]        # 0x14001b628
   140010a38:	lea    rcx,[rsp+0x70]
   140010a3d:	call   QWORD PTR [rip+0xab05]        # 0x14001b548
   140010a43:	mov    r8d,eax
   140010a46:	lea    r9,[rsp+0x58]
   140010a4b:	mov    edx,r15d
   140010a4e:	lea    rcx,[rsp+0x50]
   140010a53:	call   QWORD PTR [rip+0xaaf7]        # 0x14001b550
   140010a59:	nop
   140010a5a:	lea    rcx,[rsp+0x158]
   140010a62:	call   QWORD PTR [rip+0xa958]        # 0x14001b3c0
   140010a68:	mov    rax,QWORD PTR [rsp+0x58]
   140010a6d:	add    r15d,DWORD PTR [rax+0x4]
   140010a71:	lea    rcx,[rsp+0x58]
   140010a76:	call   QWORD PTR [rip+0xabac]        # 0x14001b628
   140010a7c:	nop
   140010a7d:	lea    rcx,[rsp+0x108]
   140010a85:	call   QWORD PTR [rip+0xab9d]        # 0x14001b628
   140010a8b:	xor    r9d,r9d
   140010a8e:	mov    r8d,r15d
   140010a91:	lea    rdx,[rsp+0x50]
   140010a96:	lea    rcx,[rsp+0x70]
   140010a9b:	call   QWORD PTR [rip+0xaacf]        # 0x14001b570
   140010aa1:	mov    r15d,eax
   140010aa4:	cmp    eax,0xffffffff
   140010aa7:	jne    0x140010490
   140010aad:	lea    r13d,[rax+0x21]
   140010ab1:	lea    r14d,[rax+0x3b]
   140010ab5:	xor    eax,eax
   140010ab7:	or     rcx,0xffffffffffffffff
   140010abb:	lea    rdi,[rip+0xe34e]        # 0x14001ee10
   140010ac2:	repnz scas al,BYTE PTR es:[rdi]
   140010ac4:	not    rcx
   140010ac7:	lea    rdx,[rcx-0x1]
   140010acb:	lea    rcx,[rip+0xe33e]        # 0x14001ee10
   140010ad2:	call   QWORD PTR [rip+0xab40]        # 0x14001b618
   140010ad8:	mov    QWORD PTR [rsp+0x118],rax
   140010ae0:	xor    eax,eax
   140010ae2:	or     rcx,0xffffffffffffffff
   140010ae6:	lea    rdi,[rip+0xe31b]        # 0x14001ee08
   140010aed:	repnz scas al,BYTE PTR es:[rdi]
   140010aef:	not    rcx
   140010af2:	lea    rdx,[rcx-0x1]
   140010af6:	lea    rcx,[rip+0xe30b]        # 0x14001ee08
   140010afd:	call   QWORD PTR [rip+0xab15]        # 0x14001b618
   140010b03:	mov    QWORD PTR [rsp+0x188],rax
   140010b0b:	xor    r9d,r9d
   140010b0e:	lea    r8d,[r9+0x1]
   140010b12:	lea    rdx,[rsp+0x188]
   140010b1a:	lea    rcx,[rsp+0x260]
   140010b22:	call   QWORD PTR [rip+0xa7c8]        # 0x14001b2f0
   140010b28:	nop
   140010b29:	lea    r8,[rsp+0x118]
   140010b31:	mov    rdx,rax
   140010b34:	lea    rcx,[rsp+0x50]
   140010b39:	call   QWORD PTR [rip+0xa7a9]        # 0x14001b2e8
   140010b3f:	nop
   140010b40:	lea    rcx,[rsp+0x260]
   140010b48:	call   QWORD PTR [rip+0xa792]        # 0x14001b2e0
   140010b4e:	nop
   140010b4f:	lea    rcx,[rsp+0x188]
   140010b57:	call   QWORD PTR [rip+0xaacb]        # 0x14001b628
   140010b5d:	nop
   140010b5e:	lea    rcx,[rsp+0x118]
   140010b66:	call   QWORD PTR [rip+0xaabc]        # 0x14001b628
   140010b6c:	xor    eax,eax
   140010b6e:	or     rcx,0xffffffffffffffff
   140010b72:	lea    rdi,[rip+0xe297]        # 0x14001ee10
   140010b79:	repnz scas al,BYTE PTR es:[rdi]
   140010b7b:	not    rcx
   140010b7e:	lea    rdx,[rcx-0x1]
   140010b82:	lea    rcx,[rip+0xe287]        # 0x14001ee10
   140010b89:	call   QWORD PTR [rip+0xaa89]        # 0x14001b618
   140010b8f:	mov    QWORD PTR [rsp+0x128],rax
   140010b97:	xor    eax,eax
   140010b99:	or     rcx,0xffffffffffffffff
   140010b9d:	lea    rdi,[rip+0xe204]        # 0x14001eda8
   140010ba4:	repnz scas al,BYTE PTR es:[rdi]
   140010ba6:	not    rcx
   140010ba9:	lea    rdx,[rcx-0x1]
   140010bad:	lea    rcx,[rip+0xe1f4]        # 0x14001eda8
   140010bb4:	call   QWORD PTR [rip+0xaa5e]        # 0x14001b618
   140010bba:	mov    QWORD PTR [rsp+0x168],rax
   140010bc2:	xor    r9d,r9d
   140010bc5:	lea    r8d,[r9+0x1]
   140010bc9:	lea    rdx,[rsp+0x168]
   140010bd1:	lea    rcx,[rsp+0x210]
   140010bd9:	call   QWORD PTR [rip+0xa711]        # 0x14001b2f0
   140010bdf:	nop
   140010be0:	lea    r8,[rsp+0x128]
   140010be8:	mov    rdx,rax
   140010beb:	lea    rcx,[rsp+0x50]
   140010bf0:	call   QWORD PTR [rip+0xa6f2]        # 0x14001b2e8
   140010bf6:	nop
   140010bf7:	lea    rcx,[rsp+0x210]
   140010bff:	call   QWORD PTR [rip+0xa6db]        # 0x14001b2e0
   140010c05:	nop
   140010c06:	lea    rcx,[rsp+0x168]
   140010c0e:	call   QWORD PTR [rip+0xaa14]        # 0x14001b628
   140010c14:	nop
   140010c15:	lea    rcx,[rsp+0x128]
   140010c1d:	call   QWORD PTR [rip+0xaa05]        # 0x14001b628
   140010c23:	xor    eax,eax
   140010c25:	or     rcx,0xffffffffffffffff
   140010c29:	lea    rdi,[rip+0xe174]        # 0x14001eda4
   140010c30:	repnz scas al,BYTE PTR es:[rdi]
   140010c32:	not    rcx
   140010c35:	lea    rdx,[rcx-0x1]
   140010c39:	lea    rcx,[rip+0xe164]        # 0x14001eda4
   140010c40:	call   QWORD PTR [rip+0xa9d2]        # 0x14001b618
   140010c46:	mov    QWORD PTR [rsp+0x138],rax
   140010c4e:	xor    eax,eax
   140010c50:	or     rcx,0xffffffffffffffff
   140010c54:	lea    rdi,[rip+0xe145]        # 0x14001eda0
   140010c5b:	repnz scas al,BYTE PTR es:[rdi]
   140010c5d:	not    rcx
   140010c60:	lea    rdx,[rcx-0x1]
   140010c64:	lea    rcx,[rip+0xe135]        # 0x14001eda0
   140010c6b:	call   QWORD PTR [rip+0xa9a7]        # 0x14001b618
   140010c71:	mov    QWORD PTR [rsp+0x1a8],rax
   140010c79:	mov    r9d,0x1
   140010c7f:	lea    r8,[rsp+0x1a8]
   140010c87:	lea    rdx,[rsp+0x138]
   140010c8f:	lea    rcx,[rsp+0x50]
   140010c94:	call   QWORD PTR [rip+0xa766]        # 0x14001b400
   140010c9a:	nop
   140010c9b:	lea    rcx,[rsp+0x1a8]
   140010ca3:	call   QWORD PTR [rip+0xa97f]        # 0x14001b628
   140010ca9:	nop
   140010caa:	lea    rcx,[rsp+0x138]
   140010cb2:	call   QWORD PTR [rip+0xa970]        # 0x14001b628
   140010cb8:	xor    eax,eax
   140010cba:	or     rcx,0xffffffffffffffff
   140010cbe:	lea    rdi,[rip+0xe0d7]        # 0x14001ed9c
   140010cc5:	repnz scas al,BYTE PTR es:[rdi]
   140010cc7:	not    rcx
   140010cca:	lea    rdx,[rcx-0x1]
   140010cce:	lea    rcx,[rip+0xe0c7]        # 0x14001ed9c
   140010cd5:	call   QWORD PTR [rip+0xa93d]        # 0x14001b618
   140010cdb:	mov    QWORD PTR [rsp+0xd0],rax
   140010ce3:	xor    eax,eax
   140010ce5:	or     rcx,0xffffffffffffffff
   140010ce9:	lea    rdi,[rip+0xe0a4]        # 0x14001ed94
   140010cf0:	repnz scas al,BYTE PTR es:[rdi]
   140010cf2:	not    rcx
   140010cf5:	lea    rdx,[rcx-0x1]
   140010cf9:	lea    rcx,[rip+0xe094]        # 0x14001ed94
   140010d00:	call   QWORD PTR [rip+0xa912]        # 0x14001b618
   140010d06:	mov    QWORD PTR [rsp+0xc0],rax
   140010d0e:	mov    r9d,0x1
   140010d14:	lea    r8,[rsp+0xc0]
   140010d1c:	lea    rdx,[rsp+0xd0]
   140010d24:	lea    rcx,[rsp+0x50]
   140010d29:	call   QWORD PTR [rip+0xa6d1]        # 0x14001b400
   140010d2f:	nop
   140010d30:	lea    rcx,[rsp+0xc0]
   140010d38:	call   QWORD PTR [rip+0xa8ea]        # 0x14001b628
   140010d3e:	nop
   140010d3f:	lea    rcx,[rsp+0xd0]
   140010d47:	call   QWORD PTR [rip+0xa8db]        # 0x14001b628
   140010d4d:	xor    eax,eax
   140010d4f:	or     rcx,0xffffffffffffffff
   140010d53:	lea    rdi,[rip+0xb6aa]        # 0x14001c404
   140010d5a:	repnz scas al,BYTE PTR es:[rdi]
   140010d5c:	not    rcx
   140010d5f:	lea    rdx,[rcx-0x1]
   140010d63:	lea    rcx,[rip+0xb69a]        # 0x14001c404
   140010d6a:	call   QWORD PTR [rip+0xa8a8]        # 0x14001b618
   140010d70:	mov    QWORD PTR [rsp+0xf0],rax
   140010d78:	xor    eax,eax
   140010d7a:	or     rcx,0xffffffffffffffff
   140010d7e:	lea    rdi,[rip+0xe00b]        # 0x14001ed90
   140010d85:	repnz scas al,BYTE PTR es:[rdi]
   140010d87:	not    rcx
   140010d8a:	lea    rdx,[rcx-0x1]
   140010d8e:	lea    rcx,[rip+0xdffb]        # 0x14001ed90
   140010d95:	call   QWORD PTR [rip+0xa87d]        # 0x14001b618
   140010d9b:	mov    QWORD PTR [rsp+0xe0],rax
   140010da3:	mov    r9d,0x1
   140010da9:	lea    r8,[rsp+0xe0]
   140010db1:	lea    rdx,[rsp+0xf0]
   140010db9:	lea    rcx,[rsp+0x50]
   140010dbe:	call   QWORD PTR [rip+0xa63c]        # 0x14001b400
   140010dc4:	nop
   140010dc5:	lea    rcx,[rsp+0xe0]
   140010dcd:	call   QWORD PTR [rip+0xa855]        # 0x14001b628
   140010dd3:	nop
   140010dd4:	lea    rcx,[rsp+0xf0]
   140010ddc:	call   QWORD PTR [rip+0xa846]        # 0x14001b628
   140010de2:	xor    eax,eax
   140010de4:	or     rcx,0xffffffffffffffff
   140010de8:	lea    rdi,[rip+0xce89]        # 0x14001dc78
   140010def:	repnz scas al,BYTE PTR es:[rdi]
   140010df1:	not    rcx
   140010df4:	lea    rdx,[rcx-0x1]
   140010df8:	lea    rcx,[rip+0xce79]        # 0x14001dc78
   140010dff:	call   QWORD PTR [rip+0xa813]        # 0x14001b618
   140010e05:	mov    QWORD PTR [rsp+0x110],rax
   140010e0d:	xor    eax,eax
   140010e0f:	or     rcx,0xffffffffffffffff
   140010e13:	lea    rdi,[rip+0xafce]        # 0x14001bde8
   140010e1a:	repnz scas al,BYTE PTR es:[rdi]
   140010e1c:	not    rcx
   140010e1f:	lea    rdx,[rcx-0x1]
   140010e23:	lea    rcx,[rip+0xafbe]        # 0x14001bde8
   140010e2a:	call   QWORD PTR [rip+0xa7e8]        # 0x14001b618
   140010e30:	mov    QWORD PTR [rsp+0x100],rax
   140010e38:	mov    r9d,0x1
   140010e3e:	lea    r8,[rsp+0x100]
   140010e46:	lea    rdx,[rsp+0x110]
   140010e4e:	lea    rcx,[rsp+0x50]
   140010e53:	call   QWORD PTR [rip+0xa5a7]        # 0x14001b400
   140010e59:	nop
   140010e5a:	lea    rcx,[rsp+0x100]
   140010e62:	call   QWORD PTR [rip+0xa7c0]        # 0x14001b628
   140010e68:	nop
   140010e69:	lea    rcx,[rsp+0x110]
   140010e71:	call   QWORD PTR [rip+0xa7b1]        # 0x14001b628
   140010e77:	lea    rdx,[rsp+0x290]
   140010e7f:	lea    rcx,[rsp+0x50]
   140010e84:	call   QWORD PTR [rip+0xa6b6]        # 0x14001b540
   140010e8a:	mov    rdx,rax
   140010e8d:	lea    rcx,[rsp+0x50]
   140010e92:	call   QWORD PTR [rip+0xa440]        # 0x14001b2d8
   140010e98:	lea    rcx,[rsp+0x290]
   140010ea0:	call   QWORD PTR [rip+0xa782]        # 0x14001b628
   140010ea6:	mov    DWORD PTR [rsp+0x20],0x1
   140010eae:	mov    r9d,0x1
   140010eb4:	movzx  r8d,WORD PTR [rsp+0x78]
   140010eba:	lea    rdx,[rsp+0x68]
   140010ebf:	lea    rcx,[rsp+0x50]
   140010ec4:	call   QWORD PTR [rip+0xa4e6]        # 0x14001b3b0
   140010eca:	nop
   140010ecb:	mov    rax,QWORD PTR [rsp+0x68]
   140010ed0:	mov    ecx,DWORD PTR [rax]
   140010ed2:	cmp    ecx,0x1
   140010ed5:	je     0x140010eed
   140010ed7:	test   ecx,ecx
   140010ed9:	je     0x140010eed
   140010edb:	mov    edx,DWORD PTR [rax+0x4]
   140010ede:	lea    rcx,[rsp+0x68]
   140010ee3:	call   0x1400048c0
   140010ee8:	mov    rax,QWORD PTR [rsp+0x68]
   140010eed:	movsxd rcx,DWORD PTR [rax+0x8]
   140010ef1:	lea    rbx,[rax+rcx*8+0x10]
   140010ef6:	mov    ecx,DWORD PTR [rax]
   140010ef8:	cmp    ecx,0x1
   140010efb:	je     0x140010f13
   140010efd:	test   ecx,ecx
   140010eff:	je     0x140010f13
   140010f01:	mov    edx,DWORD PTR [rax+0x4]
   140010f04:	lea    rcx,[rsp+0x68]
   140010f09:	call   0x1400048c0
   140010f0e:	mov    rax,QWORD PTR [rsp+0x68]
   140010f13:	movsxd rcx,DWORD PTR [rax+0xc]
   140010f17:	lea    rax,[rax+rcx*8+0x10]
   140010f1c:	cmp    rbx,rax
   140010f1f:	je     0x140011b26
   140010f25:	mov    WORD PTR [rsp+0xb0],r13w
   140010f2e:	mov    DWORD PTR [rsp+0x20],0x1
   140010f36:	mov    r9d,0x1
   140010f3c:	movzx  r8d,r13w
   140010f40:	lea    rdx,[rsp+0x38]
   140010f45:	mov    rcx,rbx
   140010f48:	call   QWORD PTR [rip+0xa462]        # 0x14001b3b0
   140010f4e:	nop
   140010f4f:	mov    rdi,QWORD PTR [rsp+0x38]
   140010f54:	mov    eax,DWORD PTR [rdi+0xc]
   140010f57:	sub    eax,DWORD PTR [rdi+0x8]
   140010f5a:	cmp    eax,0x3
   140010f5d:	jl     0x1400110c5
   140010f63:	xor    eax,eax
   140010f65:	or     rcx,0xffffffffffffffff
   140010f69:	lea    rdi,[rip+0xde34]        # 0x14001eda4
   140010f70:	repnz scas al,BYTE PTR es:[rdi]
   140010f72:	not    rcx
   140010f75:	lea    rdx,[rcx-0x1]
   140010f79:	lea    rcx,[rip+0xde24]        # 0x14001eda4
   140010f80:	call   QWORD PTR [rip+0xa692]        # 0x14001b618
   140010f86:	mov    QWORD PTR [rsp+0x140],rax
   140010f8e:	or     esi,0x8
   140010f91:	mov    DWORD PTR [rsp+0x30],esi
   140010f95:	mov    rax,QWORD PTR [rsp+0x38]
   140010f9a:	mov    ecx,DWORD PTR [rax]
   140010f9c:	cmp    ecx,0x1
   140010f9f:	je     0x140010fb7
   140010fa1:	test   ecx,ecx
   140010fa3:	je     0x140010fb7
   140010fa5:	mov    edx,DWORD PTR [rax+0x4]
   140010fa8:	lea    rcx,[rsp+0x38]
   140010fad:	call   0x1400048c0
   140010fb2:	mov    rax,QWORD PTR [rsp+0x38]
   140010fb7:	movsxd rcx,DWORD PTR [rax+0x8]
   140010fbb:	lea    rcx,[rax+rcx*8+0x18]
   140010fc0:	lea    rdx,[rsp+0x140]
   140010fc8:	call   QWORD PTR [rip+0xa662]        # 0x14001b630
   140010fce:	test   al,al
   140010fd0:	jne    0x1400110bb
   140010fd6:	xor    eax,eax
   140010fd8:	or     rcx,0xffffffffffffffff
   140010fdc:	lea    rdi,[rip+0xdda9]        # 0x14001ed8c
   140010fe3:	repnz scas al,BYTE PTR es:[rdi]
   140010fe5:	not    rcx
   140010fe8:	lea    rdx,[rcx-0x1]
   140010fec:	lea    rcx,[rip+0xdd99]        # 0x14001ed8c
   140010ff3:	call   QWORD PTR [rip+0xa61f]        # 0x14001b618
   140010ff9:	mov    QWORD PTR [rsp+0xb8],rax
   140011001:	or     esi,0x10
   140011004:	mov    DWORD PTR [rsp+0x30],esi
   140011008:	mov    rax,QWORD PTR [rsp+0x38]
   14001100d:	mov    ecx,DWORD PTR [rax]
   14001100f:	cmp    ecx,0x1
   140011012:	je     0x14001102a
   140011014:	test   ecx,ecx
   140011016:	je     0x14001102a
   140011018:	mov    edx,DWORD PTR [rax+0x4]
   14001101b:	lea    rcx,[rsp+0x38]
   140011020:	call   0x1400048c0
   140011025:	mov    rax,QWORD PTR [rsp+0x38]
   14001102a:	movsxd rcx,DWORD PTR [rax+0x8]
   14001102e:	lea    rcx,[rax+rcx*8+0x18]
   140011033:	lea    rdx,[rsp+0xb8]
   14001103b:	call   QWORD PTR [rip+0xa5ef]        # 0x14001b630
   140011041:	test   al,al
   140011043:	jne    0x1400110bb
   140011045:	xor    eax,eax
   140011047:	or     rcx,0xffffffffffffffff
   14001104b:	lea    rdi,[rip+0xdd36]        # 0x14001ed88
   140011052:	repnz scas al,BYTE PTR es:[rdi]
   140011054:	not    rcx
   140011057:	lea    rdx,[rcx-0x1]
   14001105b:	lea    rcx,[rip+0xdd26]        # 0x14001ed88
   140011062:	call   QWORD PTR [rip+0xa5b0]        # 0x14001b618
   140011068:	mov    QWORD PTR [rsp+0x120],rax
   140011070:	or     esi,0x20
   140011073:	mov    DWORD PTR [rsp+0x30],esi
   140011077:	mov    rax,QWORD PTR [rsp+0x38]
   14001107c:	mov    ecx,DWORD PTR [rax]
   14001107e:	cmp    ecx,0x1
   140011081:	je     0x140011099
   140011083:	test   ecx,ecx
   140011085:	je     0x140011099
   140011087:	mov    edx,DWORD PTR [rax+0x4]
   14001108a:	lea    rcx,[rsp+0x38]
   14001108f:	call   0x1400048c0
   140011094:	mov    rax,QWORD PTR [rsp+0x38]
   140011099:	movsxd rcx,DWORD PTR [rax+0x8]
   14001109d:	lea    rcx,[rax+rcx*8+0x18]
   1400110a2:	lea    rdx,[rsp+0x120]
   1400110aa:	call   QWORD PTR [rip+0xa580]        # 0x14001b630
   1400110b0:	test   al,al
   1400110b2:	jne    0x1400110bb
   1400110b4:	mov    rdi,QWORD PTR [rsp+0x38]
   1400110b9:	jmp    0x1400110c5
   1400110bb:	mov    r12b,0x1
   1400110be:	mov    rdi,QWORD PTR [rsp+0x38]
   1400110c3:	jmp    0x1400110c8
   1400110c5:	xor    r12b,r12b
   1400110c8:	test   sil,0x20
   1400110cc:	je     0x1400110e8
   1400110ce:	and    esi,0xffffffdf
   1400110d1:	mov    DWORD PTR [rsp+0x30],esi
   1400110d5:	lea    rcx,[rsp+0x120]
   1400110dd:	call   QWORD PTR [rip+0xa545]        # 0x14001b628
   1400110e3:	mov    rdi,QWORD PTR [rsp+0x38]
   1400110e8:	test   sil,0x10
   1400110ec:	je     0x140011108
   1400110ee:	and    esi,0xffffffef
   1400110f1:	mov    DWORD PTR [rsp+0x30],esi
   1400110f5:	lea    rcx,[rsp+0xb8]
   1400110fd:	call   QWORD PTR [rip+0xa525]        # 0x14001b628
   140011103:	mov    rdi,QWORD PTR [rsp+0x38]
   140011108:	test   sil,0x8
   14001110c:	je     0x140011128
   14001110e:	and    esi,0xfffffff7
   140011111:	mov    DWORD PTR [rsp+0x30],esi
   140011115:	lea    rcx,[rsp+0x140]
   14001111d:	call   QWORD PTR [rip+0xa505]        # 0x14001b628
   140011123:	mov    rdi,QWORD PTR [rsp+0x38]
   140011128:	test   r12b,r12b
   14001112b:	je     0x140011ab5
   140011131:	mov    eax,DWORD PTR [rdi]
   140011133:	cmp    eax,0x1
   140011136:	je     0x14001114e
   140011138:	test   eax,eax
   14001113a:	je     0x14001114e
   14001113c:	mov    edx,DWORD PTR [rdi+0x4]
   14001113f:	lea    rcx,[rsp+0x38]
   140011144:	call   0x1400048c0
   140011149:	mov    rdi,QWORD PTR [rsp+0x38]
   14001114e:	movsxd rax,DWORD PTR [rdi+0x8]
   140011152:	lea    rdx,[rdi+rax*8+0x10]
   140011157:	lea    rcx,[rsp+0x48]
   14001115c:	call   QWORD PTR [rip+0xa1ce]        # 0x14001b330
   140011162:	nop
   140011163:	mov    r9d,0x1
   140011169:	or     r8d,0xffffffff
   14001116d:	movzx  edx,r14w
   140011171:	lea    rcx,[rsp+0x48]
   140011176:	call   QWORD PTR [rip+0xa3bc]        # 0x14001b538
   14001117c:	cmp    eax,0xffffffff
   14001117f:	je     0x1400111b8
   140011181:	lea    r8d,[rax+0x1]
   140011185:	or     r9d,0xffffffff
   140011189:	lea    rdx,[rsp+0x220]
   140011191:	lea    rcx,[rsp+0x48]
   140011196:	call   QWORD PTR [rip+0xa2dc]        # 0x14001b478
   14001119c:	mov    rdx,rax
   14001119f:	lea    rcx,[rsp+0x48]
   1400111a4:	call   QWORD PTR [rip+0xa12e]        # 0x14001b2d8
   1400111aa:	lea    rcx,[rsp+0x220]
   1400111b2:	call   QWORD PTR [rip+0xa470]        # 0x14001b628
   1400111b8:	mov    rax,QWORD PTR [rsp+0x38]
   1400111bd:	mov    ecx,DWORD PTR [rax]
   1400111bf:	cmp    ecx,0x1
   1400111c2:	je     0x1400111da
   1400111c4:	test   ecx,ecx
   1400111c6:	je     0x1400111da
   1400111c8:	mov    edx,DWORD PTR [rax+0x4]
   1400111cb:	lea    rcx,[rsp+0x38]
   1400111d0:	call   0x1400048c0
   1400111d5:	mov    rax,QWORD PTR [rsp+0x38]
   1400111da:	movsxd rcx,DWORD PTR [rax+0x8]
   1400111de:	lea    rdx,[rcx*8+0x10]
   1400111e6:	lea    rdi,[rdx+rax*1]
   1400111ea:	mov    QWORD PTR [rsp+0x270],rdi
   1400111f2:	mov    ecx,DWORD PTR [rax]
   1400111f4:	cmp    ecx,0x1
   1400111f7:	je     0x14001123a
   1400111f9:	test   ecx,ecx
   1400111fb:	je     0x14001123a
   1400111fd:	sub    rdi,rdx
   140011200:	sub    rdi,rax
   140011203:	sar    rdi,0x3
   140011207:	cmp    ecx,0x1
   14001120a:	je     0x140011222
   14001120c:	test   ecx,ecx
   14001120e:	je     0x140011222
   140011210:	mov    edx,DWORD PTR [rax+0x4]
   140011213:	lea    rcx,[rsp+0x38]
   140011218:	call   0x1400048c0
   14001121d:	mov    rax,QWORD PTR [rsp+0x38]
   140011222:	movsxd rcx,DWORD PTR [rax+0x8]
   140011226:	lea    rax,[rax+rcx*8+0x10]
   14001122b:	movsxd rcx,edi
   14001122e:	lea    rdi,[rax+rcx*8]
   140011232:	mov    QWORD PTR [rsp+0x270],rdi
   14001123a:	mov    rcx,rdi
   14001123d:	call   QWORD PTR [rip+0xa3e5]        # 0x14001b628
   140011243:	mov    rdx,rdi
   140011246:	lea    rcx,[rsp+0x38]
   14001124b:	call   QWORD PTR [rip+0xa23f]        # 0x14001b490
   140011251:	mov    rdx,QWORD PTR [rsp+0x38]
   140011256:	mov    eax,DWORD PTR [rdx]
   140011258:	cmp    eax,0x1
   14001125b:	je     0x140011273
   14001125d:	test   eax,eax
   14001125f:	je     0x140011273
   140011261:	mov    edx,DWORD PTR [rdx+0x4]
   140011264:	lea    rcx,[rsp+0x38]
   140011269:	call   0x1400048c0
   14001126e:	mov    rdx,QWORD PTR [rsp+0x38]
   140011273:	movsxd rax,DWORD PTR [rdx+0x8]
   140011277:	lea    rdx,[rdx+rax*8+0x10]
   14001127c:	lea    rcx,[rsp+0x190]
   140011284:	call   QWORD PTR [rip+0xa0a6]        # 0x14001b330
   14001128a:	nop
   14001128b:	mov    rax,QWORD PTR [rsp+0x38]
   140011290:	mov    ecx,DWORD PTR [rax]
   140011292:	cmp    ecx,0x1
   140011295:	je     0x1400112ad
   140011297:	test   ecx,ecx
   140011299:	je     0x1400112ad
   14001129b:	mov    edx,DWORD PTR [rax+0x4]
   14001129e:	lea    rcx,[rsp+0x38]
   1400112a3:	call   0x1400048c0
   1400112a8:	mov    rax,QWORD PTR [rsp+0x38]
   1400112ad:	movsxd rcx,DWORD PTR [rax+0x8]
   1400112b1:	lea    rdx,[rcx*8+0x10]
   1400112b9:	lea    rdi,[rdx+rax*1]
   1400112bd:	mov    QWORD PTR [rsp+0x230],rdi
   1400112c5:	mov    ecx,DWORD PTR [rax]
   1400112c7:	cmp    ecx,0x1
   1400112ca:	je     0x14001130d
   1400112cc:	test   ecx,ecx
   1400112ce:	je     0x14001130d
   1400112d0:	sub    rdi,rdx
   1400112d3:	sub    rdi,rax
   1400112d6:	sar    rdi,0x3
   1400112da:	cmp    ecx,0x1
   1400112dd:	je     0x1400112f5
   1400112df:	test   ecx,ecx
   1400112e1:	je     0x1400112f5
   1400112e3:	mov    edx,DWORD PTR [rax+0x4]
   1400112e6:	lea    rcx,[rsp+0x38]
   1400112eb:	call   0x1400048c0
   1400112f0:	mov    rax,QWORD PTR [rsp+0x38]
   1400112f5:	movsxd rcx,DWORD PTR [rax+0x8]
   1400112f9:	lea    rax,[rax+rcx*8+0x10]
   1400112fe:	movsxd rcx,edi
   140011301:	lea    rdi,[rax+rcx*8]
   140011305:	mov    QWORD PTR [rsp+0x230],rdi
   14001130d:	mov    rcx,rdi
   140011310:	call   QWORD PTR [rip+0xa312]        # 0x14001b628
   140011316:	mov    rdx,rdi
   140011319:	lea    rcx,[rsp+0x38]
   14001131e:	call   QWORD PTR [rip+0xa16c]        # 0x14001b490
   140011324:	mov    rdx,QWORD PTR [rbp+0x0]
   140011328:	mov    rdi,QWORD PTR [rdx+0x10]
   14001132c:	test   rdi,rdi
   14001132f:	je     0x1400117a9
   140011335:	xor    r12d,r12d
   140011338:	nop    DWORD PTR [rax+rax*1+0x0]
   140011340:	lea    rcx,[rdi+0x18]
   140011344:	lea    rdx,[rsp+0x48]
   140011349:	call   QWORD PTR [rip+0xa199]        # 0x14001b4e8
   14001134f:	test   al,al
   140011351:	jne    0x14001135c
   140011353:	mov    r12,rdi
   140011356:	mov    rdi,QWORD PTR [rdi+0x8]
   14001135a:	jmp    0x140011360
   14001135c:	mov    rdi,QWORD PTR [rdi+0x10]
   140011360:	test   rdi,rdi
   140011363:	jne    0x140011340
   140011365:	test   r12,r12
   140011368:	je     0x1400117a9
   14001136e:	lea    rdx,[r12+0x18]
   140011373:	lea    rcx,[rsp+0x48]
   140011378:	call   QWORD PTR [rip+0xa16a]        # 0x14001b4e8
   14001137e:	test   al,al
   140011380:	jne    0x1400117a9
   140011386:	xor    eax,eax
   140011388:	or     rcx,0xffffffffffffffff
   14001138c:	lea    rdi,[rip+0xda11]        # 0x14001eda4
   140011393:	repnz scas al,BYTE PTR es:[rdi]
   140011395:	not    rcx
   140011398:	lea    rdx,[rcx-0x1]
   14001139c:	lea    rcx,[rip+0xda01]        # 0x14001eda4
   1400113a3:	call   QWORD PTR [rip+0xa26f]        # 0x14001b618
   1400113a9:	mov    QWORD PTR [rsp+0x150],rax
   1400113b1:	lea    rdx,[rsp+0x150]
   1400113b9:	lea    rcx,[rsp+0x190]
   1400113c1:	call   QWORD PTR [rip+0xa269]        # 0x14001b630
   1400113c7:	movzx  edi,al
   1400113ca:	lea    rcx,[rsp+0x150]
   1400113d2:	call   QWORD PTR [rip+0xa250]        # 0x14001b628
   1400113d8:	test   dil,dil
   1400113db:	je     0x140011551
   1400113e1:	xor    eax,eax
   1400113e3:	or     rcx,0xffffffffffffffff
   1400113e7:	lea    rdi,[rip+0xda22]        # 0x14001ee10
   1400113ee:	repnz scas al,BYTE PTR es:[rdi]
   1400113f0:	not    rcx
   1400113f3:	lea    rdx,[rcx-0x1]
   1400113f7:	lea    rcx,[rip+0xda12]        # 0x14001ee10
   1400113fe:	call   QWORD PTR [rip+0xa214]        # 0x14001b618
   140011404:	mov    QWORD PTR [rsp+0x160],rax
   14001140c:	lea    r8,[rsp+0x160]
   140011414:	lea    rdx,[rsp+0x288]
   14001141c:	lea    rcx,[rsp+0x38]
   140011421:	call   0x140010020
   140011426:	mov    r15,rax
   140011429:	mov    rax,QWORD PTR [rbp+0x0]
   14001142d:	mov    ecx,DWORD PTR [rax]
   14001142f:	cmp    ecx,0x1
   140011432:	je     0x1400114a4
   140011434:	test   ecx,ecx
   140011436:	je     0x1400114a4
   140011438:	call   QWORD PTR [rip+0xa162]        # 0x14001b5a0
   14001143e:	mov    rdi,rax
   140011441:	mov    rax,QWORD PTR [rbp+0x0]
   140011445:	mov    rcx,QWORD PTR [rax+0x10]
   140011449:	test   rcx,rcx
   14001144c:	je     0x140011468
   14001144e:	mov    rdx,rdi
   140011451:	call   0x1400043e0
   140011456:	mov    rdx,rax
   140011459:	mov    QWORD PTR [rdi+0x10],rax
   14001145d:	and    QWORD PTR [rax],0x3
   140011461:	lea    rax,[rdi+0x8]
   140011465:	or     QWORD PTR [rdx],rax
   140011468:	mov    rcx,QWORD PTR [rbp+0x0]
   14001146c:	mov    eax,DWORD PTR [rcx]
   14001146e:	test   eax,eax
   140011470:	je     0x14001148e
   140011472:	cmp    eax,0xffffffff
   140011475:	je     0x140011497
   140011477:	lock add DWORD PTR [rcx],0xffffffff
   14001147b:	setne  al
   14001147e:	test   al,al
   140011480:	jne    0x140011488
   140011482:	mov    esi,DWORD PTR [rsp+0x30]
   140011486:	jmp    0x14001148e
   140011488:	mov    esi,DWORD PTR [rsp+0x30]
   14001148c:	jmp    0x140011497
   14001148e:	mov    rcx,QWORD PTR [rbp+0x0]
   140011492:	call   0x1400044e0
   140011497:	mov    QWORD PTR [rbp+0x0],rdi
   14001149b:	mov    rcx,rdi
   14001149e:	call   QWORD PTR [rip+0x9e0c]        # 0x14001b2b0
   1400114a4:	mov    rax,QWORD PTR [rbp+0x0]
   1400114a8:	mov    rdi,QWORD PTR [rax+0x10]
   1400114ac:	lea    r14,[rax+0x8]
   1400114b0:	xor    r13d,r13d
   1400114b3:	mov    r12b,0x1
   1400114b6:	test   rdi,rdi
   1400114b9:	je     0x140011515
   1400114bb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400114c0:	mov    r14,rdi
   1400114c3:	lea    rcx,[rdi+0x18]
   1400114c7:	lea    rdx,[rsp+0x48]
   1400114cc:	call   QWORD PTR [rip+0xa016]        # 0x14001b4e8
   1400114d2:	test   al,al
   1400114d4:	jne    0x1400114e2
   1400114d6:	mov    r13,rdi
   1400114d9:	mov    r12b,0x1
   1400114dc:	mov    rdi,QWORD PTR [rdi+0x8]
   1400114e0:	jmp    0x1400114e9
   1400114e2:	xor    r12b,r12b
   1400114e5:	mov    rdi,QWORD PTR [rdi+0x10]
   1400114e9:	test   rdi,rdi
   1400114ec:	jne    0x1400114c0
   1400114ee:	test   r13,r13
   1400114f1:	je     0x140011515
   1400114f3:	lea    rdx,[r13+0x18]
   1400114f7:	lea    rcx,[rsp+0x48]
   1400114fc:	call   QWORD PTR [rip+0x9fe6]        # 0x14001b4e8
   140011502:	test   al,al
   140011504:	jne    0x140011515
   140011506:	lea    rcx,[r13+0x20]
   14001150a:	mov    rdx,r15
   14001150d:	call   QWORD PTR [rip+0x9dc5]        # 0x14001b2d8
   140011513:	jmp    0x14001152f
   140011515:	mov    BYTE PTR [rsp+0x20],r12b
   14001151a:	mov    r9,r14
   14001151d:	mov    r8,r15
   140011520:	lea    rdx,[rsp+0x48]
   140011525:	mov    rcx,QWORD PTR [rbp+0x0]
   140011529:	call   0x140004360
   14001152e:	nop
   14001152f:	lea    rcx,[rsp+0x288]
   140011537:	call   QWORD PTR [rip+0xa0eb]        # 0x14001b628
   14001153d:	nop
   14001153e:	lea    rcx,[rsp+0x160]
   140011546:	call   QWORD PTR [rip+0xa0dc]        # 0x14001b628
   14001154c:	jmp    0x140011a96
   140011551:	xor    eax,eax
   140011553:	or     rcx,0xffffffffffffffff
   140011557:	lea    rdi,[rip+0xd8b2]        # 0x14001ee10
   14001155e:	repnz scas al,BYTE PTR es:[rdi]
   140011560:	not    rcx
   140011563:	lea    rdx,[rcx-0x1]
   140011567:	lea    rcx,[rip+0xd8a2]        # 0x14001ee10
   14001156e:	call   QWORD PTR [rip+0xa0a4]        # 0x14001b618
   140011574:	mov    QWORD PTR [rsp+0x170],rax
   14001157c:	lea    r8,[rsp+0x170]
   140011584:	lea    rdx,[rsp+0x1e8]
   14001158c:	lea    rcx,[rsp+0x38]
   140011591:	call   0x140010020
   140011596:	nop
   140011597:	mov    r8,rax
   14001159a:	movzx  edx,r13w
   14001159e:	lea    rcx,[rsp+0x1d8]
   1400115a6:	call   0x14000ffd0
   1400115ab:	mov    QWORD PTR [rsp+0x98],rax
   1400115b3:	mov    rax,QWORD PTR [rbp+0x0]
   1400115b7:	mov    ecx,DWORD PTR [rax]
   1400115b9:	cmp    ecx,0x1
   1400115bc:	je     0x14001162e
   1400115be:	test   ecx,ecx
   1400115c0:	je     0x14001162e
   1400115c2:	call   QWORD PTR [rip+0x9fd8]        # 0x14001b5a0
   1400115c8:	mov    rdi,rax
   1400115cb:	mov    rax,QWORD PTR [rbp+0x0]
   1400115cf:	mov    rcx,QWORD PTR [rax+0x10]
   1400115d3:	test   rcx,rcx
   1400115d6:	je     0x1400115f2
   1400115d8:	mov    rdx,rdi
   1400115db:	call   0x1400043e0
   1400115e0:	mov    rdx,rax
   1400115e3:	mov    QWORD PTR [rdi+0x10],rax
   1400115e7:	and    QWORD PTR [rax],0x3
   1400115eb:	lea    rax,[rdi+0x8]
   1400115ef:	or     QWORD PTR [rdx],rax
   1400115f2:	mov    rcx,QWORD PTR [rbp+0x0]
   1400115f6:	mov    eax,DWORD PTR [rcx]
   1400115f8:	test   eax,eax
   1400115fa:	je     0x140011618
   1400115fc:	cmp    eax,0xffffffff
   1400115ff:	je     0x140011621
   140011601:	lock add DWORD PTR [rcx],0xffffffff
   140011605:	setne  al
   140011608:	test   al,al
   14001160a:	jne    0x140011612
   14001160c:	mov    esi,DWORD PTR [rsp+0x30]
   140011610:	jmp    0x140011618
   140011612:	mov    esi,DWORD PTR [rsp+0x30]
   140011616:	jmp    0x140011621
   140011618:	mov    rcx,QWORD PTR [rbp+0x0]
   14001161c:	call   0x1400044e0
   140011621:	mov    QWORD PTR [rbp+0x0],rdi
   140011625:	mov    rcx,rdi
   140011628:	call   QWORD PTR [rip+0x9c82]        # 0x14001b2b0
   14001162e:	mov    rax,QWORD PTR [rbp+0x0]
   140011632:	mov    rdi,QWORD PTR [rax+0x10]
   140011636:	test   rdi,rdi
   140011639:	je     0x140011687
   14001163b:	xor    r12d,r12d
   14001163e:	xchg   ax,ax
   140011640:	lea    rcx,[rdi+0x18]
   140011644:	lea    rdx,[rsp+0x48]
   140011649:	call   QWORD PTR [rip+0x9e99]        # 0x14001b4e8
   14001164f:	test   al,al
   140011651:	jne    0x14001165c
   140011653:	mov    r12,rdi
   140011656:	mov    rdi,QWORD PTR [rdi+0x8]
   14001165a:	jmp    0x140011660
   14001165c:	mov    rdi,QWORD PTR [rdi+0x10]
   140011660:	test   rdi,rdi
   140011663:	jne    0x140011640
   140011665:	test   r12,r12
   140011668:	je     0x140011687
   14001166a:	lea    rdx,[r12+0x18]
   14001166f:	lea    rcx,[rsp+0x48]
   140011674:	call   QWORD PTR [rip+0x9e6e]        # 0x14001b4e8
   14001167a:	test   al,al
   14001167c:	jne    0x140011687
   14001167e:	add    r12,0x20
   140011682:	jmp    0x140011766
   140011687:	lea    rcx,[rsp+0x1c8]
   14001168f:	call   QWORD PTR [rip+0x9f7b]        # 0x14001b610
   140011695:	mov    r15,rax
   140011698:	mov    rax,QWORD PTR [rbp+0x0]
   14001169c:	mov    ecx,DWORD PTR [rax]
   14001169e:	cmp    ecx,0x1
   1400116a1:	je     0x1400116af
   1400116a3:	test   ecx,ecx
   1400116a5:	je     0x1400116af
   1400116a7:	mov    rcx,rbp
   1400116aa:	call   0x140004730
   1400116af:	mov    rax,QWORD PTR [rbp+0x0]
   1400116b3:	mov    r12,QWORD PTR [rax+0x10]
   1400116b7:	lea    r14,[rax+0x8]
   1400116bb:	xor    edi,edi
   1400116bd:	mov    r13b,0x1
   1400116c0:	test   r12,r12
   1400116c3:	je     0x140011730
   1400116c5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400116d0:	mov    r14,r12
   1400116d3:	lea    rcx,[r12+0x18]
   1400116d8:	lea    rdx,[rsp+0x48]
   1400116dd:	call   QWORD PTR [rip+0x9e05]        # 0x14001b4e8
   1400116e3:	test   al,al
   1400116e5:	jne    0x1400116f4
   1400116e7:	mov    rdi,r12
   1400116ea:	mov    r13b,0x1
   1400116ed:	mov    r12,QWORD PTR [r12+0x8]
   1400116f2:	jmp    0x1400116fc
   1400116f4:	xor    r13b,r13b
   1400116f7:	mov    r12,QWORD PTR [r12+0x10]
   1400116fc:	test   r12,r12
   1400116ff:	jne    0x1400116d0
   140011701:	test   rdi,rdi
   140011704:	je     0x140011730
   140011706:	lea    rdx,[rdi+0x18]
   14001170a:	lea    rcx,[rsp+0x48]
   14001170f:	call   QWORD PTR [rip+0x9dd3]        # 0x14001b4e8
   140011715:	test   al,al
   140011717:	jne    0x140011730
   140011719:	lea    rcx,[rdi+0x20]
   14001171d:	mov    rdx,r15
   140011720:	call   QWORD PTR [rip+0x9bb2]        # 0x14001b2d8
   140011726:	mov    QWORD PTR [rsp+0x1c0],rdi
   14001172e:	jmp    0x140011754
   140011730:	mov    BYTE PTR [rsp+0x20],r13b
   140011735:	mov    r9,r14
   140011738:	mov    r8,r15
   14001173b:	lea    rdx,[rsp+0x48]
   140011740:	mov    rcx,QWORD PTR [rbp+0x0]
   140011744:	call   0x140004360
   140011749:	mov    rdi,rax
   14001174c:	mov    QWORD PTR [rsp+0x1c0],rax
   140011754:	lea    r12,[rdi+0x20]
   140011758:	lea    rcx,[rsp+0x1c8]
   140011760:	call   QWORD PTR [rip+0x9ec2]        # 0x14001b628
   140011766:	mov    rdx,QWORD PTR [rsp+0x98]
   14001176e:	mov    rcx,r12
   140011771:	call   QWORD PTR [rip+0x9e89]        # 0x14001b600
   140011777:	nop
   140011778:	lea    rcx,[rsp+0x1d8]
   140011780:	call   QWORD PTR [rip+0x9ea2]        # 0x14001b628
   140011786:	nop
   140011787:	lea    rcx,[rsp+0x1e8]
   14001178f:	call   QWORD PTR [rip+0x9e93]        # 0x14001b628
   140011795:	nop
   140011796:	lea    rcx,[rsp+0x170]
   14001179e:	call   QWORD PTR [rip+0x9e84]        # 0x14001b628
   1400117a4:	jmp    0x140011a96
   1400117a9:	xor    eax,eax
   1400117ab:	or     rcx,0xffffffffffffffff
   1400117af:	lea    rdi,[rip+0xd65a]        # 0x14001ee10
   1400117b6:	repnz scas al,BYTE PTR es:[rdi]
   1400117b8:	not    rcx
   1400117bb:	lea    rdx,[rcx-0x1]
   1400117bf:	lea    rcx,[rip+0xd64a]        # 0x14001ee10
   1400117c6:	call   QWORD PTR [rip+0x9e4c]        # 0x14001b618
   1400117cc:	mov    QWORD PTR [rsp+0x180],rax
   1400117d4:	lea    r8,[rsp+0x180]
   1400117dc:	lea    rdx,[rsp+0x218]
   1400117e4:	lea    rcx,[rsp+0x38]
   1400117e9:	call   0x140010020
   1400117ee:	mov    QWORD PTR [rsp+0x98],rax
   1400117f6:	mov    rax,QWORD PTR [rbp+0x0]
   1400117fa:	mov    ecx,DWORD PTR [rax]
   1400117fc:	cmp    ecx,0x1
   1400117ff:	je     0x1400118cb
   140011805:	test   ecx,ecx
   140011807:	je     0x1400118cb
   14001180d:	call   QWORD PTR [rip+0x9d8d]        # 0x14001b5a0
   140011813:	mov    r12,rax
   140011816:	mov    rax,QWORD PTR [rbp+0x0]
   14001181a:	mov    rcx,QWORD PTR [rax+0x10]
   14001181e:	test   rcx,rcx
   140011821:	je     0x14001183f
   140011823:	mov    rdx,r12
   140011826:	call   0x1400043e0
   14001182b:	mov    rdx,rax
   14001182e:	mov    QWORD PTR [r12+0x10],rax
   140011833:	and    QWORD PTR [rax],0x3
   140011837:	lea    rax,[r12+0x8]
   14001183c:	or     QWORD PTR [rdx],rax
   14001183f:	mov    rcx,QWORD PTR [rbp+0x0]
   140011843:	mov    eax,DWORD PTR [rcx]
   140011845:	test   eax,eax
   140011847:	je     0x140011865
   140011849:	cmp    eax,0xffffffff
   14001184c:	je     0x1400118be
   14001184e:	lock add DWORD PTR [rcx],0xffffffff
   140011852:	setne  al
   140011855:	test   al,al
   140011857:	jne    0x14001185f
   140011859:	mov    esi,DWORD PTR [rsp+0x30]
   14001185d:	jmp    0x140011865
   14001185f:	mov    esi,DWORD PTR [rsp+0x30]
   140011863:	jmp    0x1400118be
   140011865:	mov    r13,QWORD PTR [rbp+0x0]
   140011869:	mov    rdi,QWORD PTR [r13+0x10]
   14001186d:	test   rdi,rdi
   140011870:	je     0x1400118b5
   140011872:	lea    rcx,[rdi+0x18]
   140011876:	call   QWORD PTR [rip+0x9dac]        # 0x14001b628
   14001187c:	lea    rcx,[rdi+0x20]
   140011880:	call   QWORD PTR [rip+0x9da2]        # 0x14001b628
   140011886:	mov    rcx,QWORD PTR [rdi+0x8]
   14001188a:	test   rcx,rcx
   14001188d:	je     0x140011894
   14001188f:	call   0x140004490
   140011894:	mov    rcx,QWORD PTR [rdi+0x10]
   140011898:	test   rcx,rcx
   14001189b:	je     0x1400118a2
   14001189d:	call   0x140004490
   1400118a2:	mov    r8d,0x8
   1400118a8:	mov    rdx,QWORD PTR [r13+0x10]
   1400118ac:	mov    rcx,r13
   1400118af:	call   QWORD PTR [rip+0x99eb]        # 0x14001b2a0
   1400118b5:	mov    rcx,r13
   1400118b8:	call   QWORD PTR [rip+0x99da]        # 0x14001b298
   1400118be:	mov    QWORD PTR [rbp+0x0],r12
   1400118c2:	mov    rcx,r12
   1400118c5:	call   QWORD PTR [rip+0x99e5]        # 0x14001b2b0
   1400118cb:	mov    rax,QWORD PTR [rbp+0x0]
   1400118cf:	mov    rdi,QWORD PTR [rax+0x10]
   1400118d3:	test   rdi,rdi
   1400118d6:	je     0x140011927
   1400118d8:	xor    r12d,r12d
   1400118db:	nop    DWORD PTR [rax+rax*1+0x0]
   1400118e0:	lea    rcx,[rdi+0x18]
   1400118e4:	lea    rdx,[rsp+0x48]
   1400118e9:	call   QWORD PTR [rip+0x9bf9]        # 0x14001b4e8
   1400118ef:	test   al,al
   1400118f1:	jne    0x1400118fc
   1400118f3:	mov    r12,rdi
   1400118f6:	mov    rdi,QWORD PTR [rdi+0x8]
   1400118fa:	jmp    0x140011900
   1400118fc:	mov    rdi,QWORD PTR [rdi+0x10]
   140011900:	test   rdi,rdi
   140011903:	jne    0x1400118e0
   140011905:	test   r12,r12
   140011908:	je     0x140011927
   14001190a:	lea    rdx,[r12+0x18]
   14001190f:	lea    rcx,[rsp+0x48]
   140011914:	call   QWORD PTR [rip+0x9bce]        # 0x14001b4e8
   14001191a:	test   al,al
   14001191c:	jne    0x140011927
   14001191e:	add    r12,0x20
   140011922:	jmp    0x140011a66
   140011927:	lea    rcx,[rsp+0x208]
   14001192f:	call   QWORD PTR [rip+0x9cdb]        # 0x14001b610
   140011935:	mov    r15,rax
   140011938:	mov    rax,QWORD PTR [rbp+0x0]
   14001193c:	mov    ecx,DWORD PTR [rax]
   14001193e:	cmp    ecx,0x1
   140011941:	je     0x1400119b3
   140011943:	test   ecx,ecx
   140011945:	je     0x1400119b3
   140011947:	call   QWORD PTR [rip+0x9c53]        # 0x14001b5a0
   14001194d:	mov    rdi,rax
   140011950:	mov    rax,QWORD PTR [rbp+0x0]
   140011954:	mov    rcx,QWORD PTR [rax+0x10]
   140011958:	test   rcx,rcx
   14001195b:	je     0x140011977
   14001195d:	mov    rdx,rdi
   140011960:	call   0x1400043e0
   140011965:	mov    rdx,rax
   140011968:	mov    QWORD PTR [rdi+0x10],rax
   14001196c:	and    QWORD PTR [rax],0x3
   140011970:	lea    rax,[rdi+0x8]
   140011974:	or     QWORD PTR [rdx],rax
   140011977:	mov    rcx,QWORD PTR [rbp+0x0]
   14001197b:	mov    eax,DWORD PTR [rcx]
   14001197d:	test   eax,eax
   14001197f:	je     0x14001199d
   140011981:	cmp    eax,0xffffffff
   140011984:	je     0x1400119a6
   140011986:	lock add DWORD PTR [rcx],0xffffffff
   14001198a:	setne  al
   14001198d:	test   al,al
   14001198f:	jne    0x140011997
   140011991:	mov    esi,DWORD PTR [rsp+0x30]
   140011995:	jmp    0x14001199d
   140011997:	mov    esi,DWORD PTR [rsp+0x30]
   14001199b:	jmp    0x1400119a6
   14001199d:	mov    rcx,QWORD PTR [rbp+0x0]
   1400119a1:	call   0x1400044e0
   1400119a6:	mov    QWORD PTR [rbp+0x0],rdi
   1400119aa:	mov    rcx,rdi
   1400119ad:	call   QWORD PTR [rip+0x98fd]        # 0x14001b2b0
   1400119b3:	mov    rax,QWORD PTR [rbp+0x0]
   1400119b7:	mov    r12,QWORD PTR [rax+0x10]
   1400119bb:	lea    r14,[rax+0x8]
   1400119bf:	xor    edi,edi
   1400119c1:	mov    r13b,0x1
   1400119c4:	test   r12,r12
   1400119c7:	je     0x140011a30
   1400119c9:	nop    DWORD PTR [rax+0x0]
   1400119d0:	mov    r14,r12
   1400119d3:	lea    rcx,[r12+0x18]
   1400119d8:	lea    rdx,[rsp+0x48]
   1400119dd:	call   QWORD PTR [rip+0x9b05]        # 0x14001b4e8
   1400119e3:	test   al,al
   1400119e5:	jne    0x1400119f4
   1400119e7:	mov    rdi,r12
   1400119ea:	mov    r13b,0x1
   1400119ed:	mov    r12,QWORD PTR [r12+0x8]
   1400119f2:	jmp    0x1400119fc
   1400119f4:	xor    r13b,r13b
   1400119f7:	mov    r12,QWORD PTR [r12+0x10]
   1400119fc:	test   r12,r12
   1400119ff:	jne    0x1400119d0
   140011a01:	test   rdi,rdi
   140011a04:	je     0x140011a30
   140011a06:	lea    rdx,[rdi+0x18]
   140011a0a:	lea    rcx,[rsp+0x48]
   140011a0f:	call   QWORD PTR [rip+0x9ad3]        # 0x14001b4e8
   140011a15:	test   al,al
   140011a17:	jne    0x140011a30
   140011a19:	lea    rcx,[rdi+0x20]
   140011a1d:	mov    rdx,r15
   140011a20:	call   QWORD PTR [rip+0x98b2]        # 0x14001b2d8
   140011a26:	mov    QWORD PTR [rsp+0x1f8],rdi
   140011a2e:	jmp    0x140011a54
   140011a30:	mov    BYTE PTR [rsp+0x20],r13b
   140011a35:	mov    r9,r14
   140011a38:	mov    r8,r15
   140011a3b:	lea    rdx,[rsp+0x48]
   140011a40:	mov    rcx,QWORD PTR [rbp+0x0]
   140011a44:	call   0x140004360
   140011a49:	mov    rdi,rax
   140011a4c:	mov    QWORD PTR [rsp+0x1f8],rax
   140011a54:	lea    r12,[rdi+0x20]
   140011a58:	lea    rcx,[rsp+0x208]
   140011a60:	call   QWORD PTR [rip+0x9bc2]        # 0x14001b628
   140011a66:	mov    rdx,QWORD PTR [rsp+0x98]
   140011a6e:	mov    rcx,r12
   140011a71:	call   QWORD PTR [rip+0x9861]        # 0x14001b2d8
   140011a77:	nop
   140011a78:	lea    rcx,[rsp+0x218]
   140011a80:	call   QWORD PTR [rip+0x9ba2]        # 0x14001b628
   140011a86:	nop
   140011a87:	lea    rcx,[rsp+0x180]
   140011a8f:	call   QWORD PTR [rip+0x9b93]        # 0x14001b628
   140011a95:	nop
   140011a96:	lea    rcx,[rsp+0x190]
   140011a9e:	call   QWORD PTR [rip+0x9b84]        # 0x14001b628
   140011aa4:	nop
   140011aa5:	lea    rcx,[rsp+0x48]
   140011aaa:	call   QWORD PTR [rip+0x9b78]        # 0x14001b628
   140011ab0:	mov    rdi,QWORD PTR [rsp+0x38]
   140011ab5:	mov    eax,DWORD PTR [rdi]
   140011ab7:	test   eax,eax
   140011ab9:	je     0x140011adc
   140011abb:	cmp    eax,0xffffffff
   140011abe:	je     0x140011b0e
   140011ac0:	lock add DWORD PTR [rdi],0xffffffff
   140011ac4:	setne  al
   140011ac7:	test   al,al
   140011ac9:	jne    0x140011ad6
   140011acb:	mov    rdi,QWORD PTR [rsp+0x38]
   140011ad0:	mov    esi,DWORD PTR [rsp+0x30]
   140011ad4:	jmp    0x140011adc
   140011ad6:	mov    esi,DWORD PTR [rsp+0x30]
   140011ada:	jmp    0x140011b0e
   140011adc:	movsxd rax,DWORD PTR [rdi+0xc]
   140011ae0:	lea    r12,[rdi+rax*8+0x10]
   140011ae5:	movsxd rax,DWORD PTR [rdi+0x8]
   140011ae9:	lea    r13,[rdi+rax*8+0x10]
   140011aee:	cmp    r13,r12
   140011af1:	je     0x140011b05
   140011af3:	sub    r12,0x8
   140011af7:	mov    rcx,r12
   140011afa:	call   QWORD PTR [rip+0x9b28]        # 0x14001b628
   140011b00:	cmp    r12,r13
   140011b03:	jne    0x140011af3
   140011b05:	mov    rcx,rdi
   140011b08:	call   QWORD PTR [rip+0x9782]        # 0x14001b290
   140011b0e:	add    rbx,0x8
   140011b12:	mov    rax,QWORD PTR [rsp+0x68]
   140011b17:	mov    r13d,0x20
   140011b1d:	lea    r14d,[r13+0x1a]
   140011b21:	jmp    0x140010ef6
   140011b26:	xor    eax,eax
   140011b28:	or     rcx,0xffffffffffffffff
   140011b2c:	lea    rdi,[rip+0xd285]        # 0x14001edb8
   140011b33:	repnz scas al,BYTE PTR es:[rdi]
   140011b35:	not    rcx
   140011b38:	lea    rdx,[rcx-0x1]
   140011b3c:	lea    rcx,[rip+0xd275]        # 0x14001edb8
   140011b43:	call   QWORD PTR [rip+0x9acf]        # 0x14001b618
   140011b49:	mov    QWORD PTR [rsp+0x1a0],rax
   140011b51:	xor    r9d,r9d
   140011b54:	lea    r8d,[r9+0x1]
   140011b58:	lea    rdx,[rsp+0x1a0]
   140011b60:	lea    rcx,[rsp+0xa0]
   140011b68:	call   QWORD PTR [rip+0x9782]        # 0x14001b2f0
   140011b6e:	nop
   140011b6f:	lea    rcx,[rsp+0x1a0]
   140011b77:	call   QWORD PTR [rip+0x9aab]        # 0x14001b628
   140011b7d:	mov    rdx,QWORD PTR [rbp+0x0]
   140011b81:	mov    eax,DWORD PTR [rdx]
   140011b83:	cmp    eax,0x1
   140011b86:	je     0x140011c44
   140011b8c:	test   eax,eax
   140011b8e:	je     0x140011c44
   140011b94:	call   QWORD PTR [rip+0x9a06]        # 0x14001b5a0
   140011b9a:	mov    rbx,rax
   140011b9d:	mov    rax,QWORD PTR [rbp+0x0]
   140011ba1:	mov    rcx,QWORD PTR [rax+0x10]
   140011ba5:	test   rcx,rcx
   140011ba8:	je     0x140011bc4
   140011baa:	mov    rdx,rbx
   140011bad:	call   0x1400043e0
   140011bb2:	mov    rdx,rax
   140011bb5:	mov    QWORD PTR [rbx+0x10],rax
   140011bb9:	and    QWORD PTR [rax],0x3
   140011bbd:	lea    rax,[rbx+0x8]
   140011bc1:	or     QWORD PTR [rdx],rax
   140011bc4:	mov    rcx,QWORD PTR [rbp+0x0]
   140011bc8:	mov    eax,DWORD PTR [rcx]
   140011bca:	test   eax,eax
   140011bcc:	je     0x140011bde
   140011bce:	cmp    eax,0xffffffff
   140011bd1:	je     0x140011c37
   140011bd3:	lock add DWORD PTR [rcx],0xffffffff
   140011bd7:	setne  al
   140011bda:	test   al,al
   140011bdc:	jne    0x140011c37
   140011bde:	mov    rsi,QWORD PTR [rbp+0x0]
   140011be2:	mov    rdi,QWORD PTR [rsi+0x10]
   140011be6:	test   rdi,rdi
   140011be9:	je     0x140011c2e
   140011beb:	lea    rcx,[rdi+0x18]
   140011bef:	call   QWORD PTR [rip+0x9a33]        # 0x14001b628
   140011bf5:	lea    rcx,[rdi+0x20]
   140011bf9:	call   QWORD PTR [rip+0x9a29]        # 0x14001b628
   140011bff:	mov    rcx,QWORD PTR [rdi+0x8]
   140011c03:	test   rcx,rcx
   140011c06:	je     0x140011c0d
   140011c08:	call   0x140004490
   140011c0d:	mov    rcx,QWORD PTR [rdi+0x10]
   140011c11:	test   rcx,rcx
   140011c14:	je     0x140011c1b
   140011c16:	call   0x140004490
   140011c1b:	mov    r8d,0x8
   140011c21:	mov    rdx,QWORD PTR [rsi+0x10]
   140011c25:	mov    rcx,rsi
   140011c28:	call   QWORD PTR [rip+0x9672]        # 0x14001b2a0
   140011c2e:	mov    rcx,rsi
   140011c31:	call   QWORD PTR [rip+0x9661]        # 0x14001b298
   140011c37:	mov    QWORD PTR [rbp+0x0],rbx
   140011c3b:	mov    rcx,rbx
   140011c3e:	call   QWORD PTR [rip+0x966c]        # 0x14001b2b0
   140011c44:	mov    rbx,QWORD PTR [rbp+0x0]
   140011c48:	cmp    QWORD PTR [rbx+0x10],0x0
   140011c4d:	je     0x140011c55
   140011c4f:	mov    rbx,QWORD PTR [rbx+0x20]
   140011c53:	jmp    0x140011c60
   140011c55:	add    rbx,0x8
   140011c59:	nop    DWORD PTR [rax+0x0]
   140011c60:	mov    rax,QWORD PTR [rbp+0x0]
   140011c64:	mov    ecx,DWORD PTR [rax]
   140011c66:	cmp    ecx,0x1
   140011c69:	je     0x140011d29
   140011c6f:	test   ecx,ecx
   140011c71:	je     0x140011d29
   140011c77:	call   QWORD PTR [rip+0x9923]        # 0x14001b5a0
   140011c7d:	mov    rsi,rax
   140011c80:	mov    rax,QWORD PTR [rbp+0x0]
   140011c84:	mov    rcx,QWORD PTR [rax+0x10]
   140011c88:	test   rcx,rcx
   140011c8b:	je     0x140011ca7
   140011c8d:	mov    rdx,rsi
   140011c90:	call   0x1400043e0
   140011c95:	mov    rdx,rax
   140011c98:	mov    QWORD PTR [rsi+0x10],rax
   140011c9c:	and    QWORD PTR [rax],0x3
   140011ca0:	lea    rax,[rsi+0x8]
   140011ca4:	or     QWORD PTR [rdx],rax
   140011ca7:	mov    rcx,QWORD PTR [rbp+0x0]
   140011cab:	mov    eax,DWORD PTR [rcx]
   140011cad:	test   eax,eax
   140011caf:	je     0x140011cc1
   140011cb1:	cmp    eax,0xffffffff
   140011cb4:	je     0x140011d1c
   140011cb6:	lock add DWORD PTR [rcx],0xffffffff
   140011cba:	setne  al
   140011cbd:	test   al,al
   140011cbf:	jne    0x140011d1c
   140011cc1:	mov    r12,QWORD PTR [rbp+0x0]
   140011cc5:	mov    rdi,QWORD PTR [r12+0x10]
   140011cca:	test   rdi,rdi
   140011ccd:	je     0x140011d13
   140011ccf:	lea    rcx,[rdi+0x18]
   140011cd3:	call   QWORD PTR [rip+0x994f]        # 0x14001b628
   140011cd9:	lea    rcx,[rdi+0x20]
   140011cdd:	call   QWORD PTR [rip+0x9945]        # 0x14001b628
   140011ce3:	mov    rcx,QWORD PTR [rdi+0x8]
   140011ce7:	test   rcx,rcx
   140011cea:	je     0x140011cf1
   140011cec:	call   0x140004490
   140011cf1:	mov    rcx,QWORD PTR [rdi+0x10]
   140011cf5:	test   rcx,rcx
   140011cf8:	je     0x140011cff
   140011cfa:	call   0x140004490
   140011cff:	mov    r8d,0x8
   140011d05:	mov    rdx,QWORD PTR [r12+0x10]
   140011d0a:	mov    rcx,r12
   140011d0d:	call   QWORD PTR [rip+0x958d]        # 0x14001b2a0
   140011d13:	mov    rcx,r12
   140011d16:	call   QWORD PTR [rip+0x957c]        # 0x14001b298
   140011d1c:	mov    QWORD PTR [rbp+0x0],rsi
   140011d20:	mov    rcx,rsi
   140011d23:	call   QWORD PTR [rip+0x9587]        # 0x14001b2b0
   140011d29:	mov    rax,QWORD PTR [rbp+0x0]
   140011d2d:	add    rax,0x8
   140011d31:	cmp    rbx,rax
   140011d34:	je     0x1400121ca
   140011d3a:	lea    r13,[rbx+0x20]
   140011d3e:	xor    r9d,r9d
   140011d41:	xor    r8d,r8d
   140011d44:	mov    rdx,r13
   140011d47:	lea    rcx,[rsp+0xa0]
   140011d4f:	call   QWORD PTR [rip+0x981b]        # 0x14001b570
   140011d55:	mov    r14d,eax
   140011d58:	cmp    eax,0xffffffff
   140011d5b:	je     0x1400121b9
   140011d61:	lea    rcx,[rsp+0xa0]
   140011d69:	call   QWORD PTR [rip+0x97d9]        # 0x14001b548
   140011d6f:	mov    r15d,eax
   140011d72:	mov    DWORD PTR [rsp+0x98],eax
   140011d79:	mov    r8d,0x1
   140011d7f:	lea    rdx,[rsp+0x60]
   140011d84:	lea    rcx,[rsp+0xa0]
   140011d8c:	call   QWORD PTR [rip+0x97d6]        # 0x14001b568
   140011d92:	nop
   140011d93:	lea    rcx,[rsp+0x88]
   140011d9b:	call   QWORD PTR [rip+0x986f]        # 0x14001b610
   140011da1:	nop
   140011da2:	lea    rdx,[rip+0xcfd7]        # 0x14001ed80
   140011da9:	lea    rcx,[rsp+0x60]
   140011dae:	call   QWORD PTR [rip+0x95f4]        # 0x14001b3a8
   140011db4:	test   al,al
   140011db6:	je     0x140011dc0
   140011db8:	inc    r14d
   140011dbb:	jmp    0x14001217c
   140011dc0:	mov    rax,QWORD PTR [rbp+0x0]
   140011dc4:	mov    rdi,QWORD PTR [rax+0x10]
   140011dc8:	test   rdi,rdi
   140011dcb:	je     0x1400120f2
   140011dd1:	xor    esi,esi
   140011dd3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140011de0:	lea    rcx,[rdi+0x18]
   140011de4:	lea    rdx,[rsp+0x60]
   140011de9:	call   QWORD PTR [rip+0x96f9]        # 0x14001b4e8
   140011def:	test   al,al
   140011df1:	jne    0x140011dfc
   140011df3:	mov    rsi,rdi
   140011df6:	mov    rdi,QWORD PTR [rdi+0x8]
   140011dfa:	jmp    0x140011e00
   140011dfc:	mov    rdi,QWORD PTR [rdi+0x10]
   140011e00:	test   rdi,rdi
   140011e03:	jne    0x140011de0
   140011e05:	test   rsi,rsi
   140011e08:	je     0x1400120f2
   140011e0e:	lea    rdx,[rsi+0x18]
   140011e12:	lea    rcx,[rsp+0x60]
   140011e17:	call   QWORD PTR [rip+0x96cb]        # 0x14001b4e8
   140011e1d:	test   al,al
   140011e1f:	jne    0x1400120f2
   140011e25:	mov    rax,QWORD PTR [rbp+0x0]
   140011e29:	mov    ecx,DWORD PTR [rax]
   140011e2b:	cmp    ecx,0x1
   140011e2e:	je     0x140011eee
   140011e34:	test   ecx,ecx
   140011e36:	je     0x140011eee
   140011e3c:	call   QWORD PTR [rip+0x975e]        # 0x14001b5a0
   140011e42:	mov    rsi,rax
   140011e45:	mov    rax,QWORD PTR [rbp+0x0]
   140011e49:	mov    rcx,QWORD PTR [rax+0x10]
   140011e4d:	test   rcx,rcx
   140011e50:	je     0x140011e6c
   140011e52:	mov    rdx,rsi
   140011e55:	call   0x1400043e0
   140011e5a:	mov    rdx,rax
   140011e5d:	mov    QWORD PTR [rsi+0x10],rax
   140011e61:	and    QWORD PTR [rax],0x3
   140011e65:	lea    rax,[rsi+0x8]
   140011e69:	or     QWORD PTR [rdx],rax
   140011e6c:	mov    rcx,QWORD PTR [rbp+0x0]
   140011e70:	mov    eax,DWORD PTR [rcx]
   140011e72:	test   eax,eax
   140011e74:	je     0x140011e86
   140011e76:	cmp    eax,0xffffffff
   140011e79:	je     0x140011ee1
   140011e7b:	lock add DWORD PTR [rcx],0xffffffff
   140011e7f:	setne  al
   140011e82:	test   al,al
   140011e84:	jne    0x140011ee1
   140011e86:	mov    r12,QWORD PTR [rbp+0x0]
   140011e8a:	mov    rdi,QWORD PTR [r12+0x10]
   140011e8f:	test   rdi,rdi
   140011e92:	je     0x140011ed8
   140011e94:	lea    rcx,[rdi+0x18]
   140011e98:	call   QWORD PTR [rip+0x978a]        # 0x14001b628
   140011e9e:	lea    rcx,[rdi+0x20]
   140011ea2:	call   QWORD PTR [rip+0x9780]        # 0x14001b628
   140011ea8:	mov    rcx,QWORD PTR [rdi+0x8]
   140011eac:	test   rcx,rcx
   140011eaf:	je     0x140011eb6
   140011eb1:	call   0x140004490
   140011eb6:	mov    rcx,QWORD PTR [rdi+0x10]
   140011eba:	test   rcx,rcx
   140011ebd:	je     0x140011ec4
   140011ebf:	call   0x140004490
   140011ec4:	mov    r8d,0x8
   140011eca:	mov    rdx,QWORD PTR [r12+0x10]
   140011ecf:	mov    rcx,r12
   140011ed2:	call   QWORD PTR [rip+0x93c8]        # 0x14001b2a0
   140011ed8:	mov    rcx,r12
   140011edb:	call   QWORD PTR [rip+0x93b7]        # 0x14001b298
   140011ee1:	mov    QWORD PTR [rbp+0x0],rsi
   140011ee5:	mov    rcx,rsi
   140011ee8:	call   QWORD PTR [rip+0x93c2]        # 0x14001b2b0
   140011eee:	mov    rax,QWORD PTR [rbp+0x0]
   140011ef2:	mov    rdi,QWORD PTR [rax+0x10]
   140011ef6:	test   rdi,rdi
   140011ef9:	je     0x140011f46
   140011efb:	xor    esi,esi
   140011efd:	nop    DWORD PTR [rax]
   140011f00:	lea    rcx,[rdi+0x18]
   140011f04:	lea    rdx,[rsp+0x60]
   140011f09:	call   QWORD PTR [rip+0x95d9]        # 0x14001b4e8
   140011f0f:	test   al,al
   140011f11:	jne    0x140011f1c
   140011f13:	mov    rsi,rdi
   140011f16:	mov    rdi,QWORD PTR [rdi+0x8]
   140011f1a:	jmp    0x140011f20
   140011f1c:	mov    rdi,QWORD PTR [rdi+0x10]
   140011f20:	test   rdi,rdi
   140011f23:	jne    0x140011f00
   140011f25:	test   rsi,rsi
   140011f28:	je     0x140011f46
   140011f2a:	lea    rdx,[rsi+0x18]
   140011f2e:	lea    rcx,[rsp+0x60]
   140011f33:	call   QWORD PTR [rip+0x95af]        # 0x14001b4e8
   140011f39:	test   al,al
   140011f3b:	jne    0x140011f46
   140011f3d:	add    rsi,0x20
   140011f41:	jmp    0x1400120df
   140011f46:	lea    rcx,[rsp+0x238]
   140011f4e:	call   QWORD PTR [rip+0x96bc]        # 0x14001b610
   140011f54:	mov    r15,rax
   140011f57:	mov    rax,QWORD PTR [rbp+0x0]
   140011f5b:	mov    ecx,DWORD PTR [rax]
   140011f5d:	cmp    ecx,0x1
   140011f60:	je     0x140012020
   140011f66:	test   ecx,ecx
   140011f68:	je     0x140012020
   140011f6e:	call   QWORD PTR [rip+0x962c]        # 0x14001b5a0
   140011f74:	mov    rsi,rax
   140011f77:	mov    rax,QWORD PTR [rbp+0x0]
   140011f7b:	mov    rcx,QWORD PTR [rax+0x10]
   140011f7f:	test   rcx,rcx
   140011f82:	je     0x140011f9e
   140011f84:	mov    rdx,rsi
   140011f87:	call   0x1400043e0
   140011f8c:	mov    rdx,rax
   140011f8f:	mov    QWORD PTR [rsi+0x10],rax
   140011f93:	and    QWORD PTR [rax],0x3
   140011f97:	lea    rax,[rsi+0x8]
   140011f9b:	or     QWORD PTR [rdx],rax
   140011f9e:	mov    rcx,QWORD PTR [rbp+0x0]
   140011fa2:	mov    eax,DWORD PTR [rcx]
   140011fa4:	test   eax,eax
   140011fa6:	je     0x140011fb8
   140011fa8:	cmp    eax,0xffffffff
   140011fab:	je     0x140012013
   140011fad:	lock add DWORD PTR [rcx],0xffffffff
   140011fb1:	setne  al
   140011fb4:	test   al,al
   140011fb6:	jne    0x140012013
   140011fb8:	mov    r12,QWORD PTR [rbp+0x0]
   140011fbc:	mov    rdi,QWORD PTR [r12+0x10]
   140011fc1:	test   rdi,rdi
   140011fc4:	je     0x14001200a
   140011fc6:	lea    rcx,[rdi+0x18]
   140011fca:	call   QWORD PTR [rip+0x9658]        # 0x14001b628
   140011fd0:	lea    rcx,[rdi+0x20]
   140011fd4:	call   QWORD PTR [rip+0x964e]        # 0x14001b628
   140011fda:	mov    rcx,QWORD PTR [rdi+0x8]
   140011fde:	test   rcx,rcx
   140011fe1:	je     0x140011fe8
   140011fe3:	call   0x140004490
   140011fe8:	mov    rcx,QWORD PTR [rdi+0x10]
   140011fec:	test   rcx,rcx
   140011fef:	je     0x140011ff6
   140011ff1:	call   0x140004490
   140011ff6:	mov    r8d,0x8
   140011ffc:	mov    rdx,QWORD PTR [r12+0x10]
   140012001:	mov    rcx,r12
   140012004:	call   QWORD PTR [rip+0x9296]        # 0x14001b2a0
   14001200a:	mov    rcx,r12
   14001200d:	call   QWORD PTR [rip+0x9285]        # 0x14001b298
   140012013:	mov    QWORD PTR [rbp+0x0],rsi
   140012017:	mov    rcx,rsi
   14001201a:	call   QWORD PTR [rip+0x9290]        # 0x14001b2b0
   140012020:	mov    rax,QWORD PTR [rbp+0x0]
   140012024:	mov    rsi,QWORD PTR [rax+0x10]
   140012028:	lea    r13,[rax+0x8]
   14001202c:	xor    edi,edi
   14001202e:	mov    r12b,0x1
   140012031:	test   rsi,rsi
   140012034:	je     0x14001209d
   140012036:	data16 nop WORD PTR [rax+rax*1+0x0]
   140012040:	mov    r13,rsi
   140012043:	lea    rcx,[rsi+0x18]
   140012047:	lea    rdx,[rsp+0x60]
   14001204c:	call   QWORD PTR [rip+0x9496]        # 0x14001b4e8
   140012052:	test   al,al
   140012054:	jne    0x140012062
   140012056:	mov    rdi,rsi
   140012059:	mov    r12b,0x1
   14001205c:	mov    rsi,QWORD PTR [rsi+0x8]
   140012060:	jmp    0x140012069
   140012062:	xor    r12b,r12b
   140012065:	mov    rsi,QWORD PTR [rsi+0x10]
   140012069:	test   rsi,rsi
   14001206c:	jne    0x140012040
   14001206e:	test   rdi,rdi
   140012071:	je     0x14001209d
   140012073:	lea    rdx,[rdi+0x18]
   140012077:	lea    rcx,[rsp+0x60]
   14001207c:	call   QWORD PTR [rip+0x9466]        # 0x14001b4e8
   140012082:	test   al,al
   140012084:	jne    0x14001209d
   140012086:	lea    rcx,[rdi+0x20]
   14001208a:	mov    rdx,r15
   14001208d:	call   QWORD PTR [rip+0x9245]        # 0x14001b2d8
   140012093:	mov    QWORD PTR [rsp+0x228],rdi
   14001209b:	jmp    0x1400120c1
   14001209d:	mov    BYTE PTR [rsp+0x20],r12b
   1400120a2:	mov    r9,r13
   1400120a5:	mov    r8,r15
   1400120a8:	lea    rdx,[rsp+0x60]
   1400120ad:	mov    rcx,QWORD PTR [rbp+0x0]
   1400120b1:	call   0x140004360
   1400120b6:	mov    rdi,rax
   1400120b9:	mov    QWORD PTR [rsp+0x228],rax
   1400120c1:	lea    rsi,[rdi+0x20]
   1400120c5:	lea    rcx,[rsp+0x238]
   1400120cd:	call   QWORD PTR [rip+0x9555]        # 0x14001b628
   1400120d3:	lea    r13,[rbx+0x20]
   1400120d7:	mov    r15d,DWORD PTR [rsp+0x98]
   1400120df:	mov    rdx,rsi
   1400120e2:	lea    rcx,[rsp+0x88]
   1400120ea:	call   QWORD PTR [rip+0x91e8]        # 0x14001b2d8
   1400120f0:	jmp    0x140012159
   1400120f2:	lea    rdx,[rsp+0x248]
   1400120fa:	lea    rcx,[rsp+0x60]
   1400120ff:	call   QWORD PTR [rip+0x928b]        # 0x14001b390
   140012105:	nop
   140012106:	lea    rdx,[rip+0xcc6f]        # 0x14001ed7c
   14001210d:	mov    rcx,rax
   140012110:	call   QWORD PTR [rip+0x9292]        # 0x14001b3a8
   140012116:	movzx  edi,al
   140012119:	lea    rcx,[rsp+0x248]
   140012121:	call   QWORD PTR [rip+0x9501]        # 0x14001b628
   140012127:	test   dil,dil
   14001212a:	je     0x140012159
   14001212c:	lea    rcx,[rsp+0x258]
   140012134:	call   QWORD PTR [rip+0x950e]        # 0x14001b648
   14001213a:	mov    rdx,rax
   14001213d:	lea    rcx,[rsp+0x88]
   140012145:	call   QWORD PTR [rip+0x918d]        # 0x14001b2d8
   14001214b:	lea    rcx,[rsp+0x258]
   140012153:	call   QWORD PTR [rip+0x94cf]        # 0x14001b628
   140012159:	lea    r9,[rsp+0x88]
   140012161:	mov    r8d,r15d
   140012164:	mov    edx,r14d
   140012167:	mov    rcx,r13
   14001216a:	call   QWORD PTR [rip+0x93e0]        # 0x14001b550
   140012170:	mov    rdx,QWORD PTR [rsp+0x88]
   140012178:	add    r14d,DWORD PTR [rdx+0x4]
   14001217c:	lea    rcx,[rsp+0x88]
   140012184:	call   QWORD PTR [rip+0x949e]        # 0x14001b628
   14001218a:	nop
   14001218b:	lea    rcx,[rsp+0x60]
   140012190:	call   QWORD PTR [rip+0x9492]        # 0x14001b628
   140012196:	xor    r9d,r9d
   140012199:	mov    r8d,r14d
   14001219c:	mov    rdx,r13
   14001219f:	lea    rcx,[rsp+0xa0]
   1400121a7:	call   QWORD PTR [rip+0x93c3]        # 0x14001b570
   1400121ad:	mov    r14d,eax
   1400121b0:	cmp    eax,0xffffffff
   1400121b3:	jne    0x140011d61
   1400121b9:	mov    rcx,rbx
   1400121bc:	call   QWORD PTR [rip+0x9166]        # 0x14001b328
   1400121c2:	mov    rbx,rax
   1400121c5:	jmp    0x140011c60
   1400121ca:	xor    eax,eax
   1400121cc:	or     rcx,0xffffffffffffffff
   1400121d0:	lea    rdi,[rip+0xcb89]        # 0x14001ed60
   1400121d7:	repnz scas al,BYTE PTR es:[rdi]
   1400121d9:	not    rcx
   1400121dc:	lea    rdx,[rcx-0x1]
   1400121e0:	lea    rcx,[rip+0xcb79]        # 0x14001ed60
   1400121e7:	call   QWORD PTR [rip+0x942b]        # 0x14001b618
   1400121ed:	mov    QWORD PTR [rsp+0x1b0],rax
   1400121f5:	xor    r9d,r9d
   1400121f8:	lea    r8d,[r9+0x1]
   1400121fc:	lea    rdx,[rsp+0x1b0]
   140012204:	lea    rcx,[rsp+0x90]
   14001220c:	call   QWORD PTR [rip+0x90de]        # 0x14001b2f0
   140012212:	nop
   140012213:	lea    rcx,[rsp+0x1b0]
   14001221b:	call   QWORD PTR [rip+0x9407]        # 0x14001b628
   140012221:	mov    rdx,QWORD PTR [rbp+0x0]
   140012225:	mov    eax,DWORD PTR [rdx]
   140012227:	cmp    eax,0x1
   14001222a:	je     0x140012238
   14001222c:	test   eax,eax
   14001222e:	je     0x140012238
   140012230:	mov    rcx,rbp
   140012233:	call   0x140004730
   140012238:	mov    rdi,QWORD PTR [rbp+0x0]
   14001223c:	cmp    QWORD PTR [rdi+0x10],0x0
   140012241:	je     0x140012249
   140012243:	mov    rdi,QWORD PTR [rdi+0x20]
   140012247:	jmp    0x140012250
   140012249:	add    rdi,0x8
   14001224d:	nop    DWORD PTR [rax]
   140012250:	mov    rax,QWORD PTR [rbp+0x0]
   140012254:	mov    ecx,DWORD PTR [rax]
   140012256:	cmp    ecx,0x1
   140012259:	je     0x140012267
   14001225b:	test   ecx,ecx
   14001225d:	je     0x140012267
   14001225f:	mov    rcx,rbp
   140012262:	call   0x140004730
   140012267:	mov    rax,QWORD PTR [rbp+0x0]
   14001226b:	add    rax,0x8
   14001226f:	cmp    rdi,rax
   140012272:	je     0x140012418
   140012278:	lea    r12,[rdi+0x20]
   14001227c:	xor    r9d,r9d
   14001227f:	xor    r8d,r8d
   140012282:	mov    rdx,r12
   140012285:	lea    rcx,[rsp+0x90]
   14001228d:	call   QWORD PTR [rip+0x92dd]        # 0x14001b570
   140012293:	mov    esi,eax
   140012295:	cmp    eax,0xffffffff
   140012298:	je     0x140012407
   14001229e:	xchg   ax,ax
   1400122a0:	lea    rcx,[rsp+0xa8]
   1400122a8:	call   QWORD PTR [rip+0x9362]        # 0x14001b610
   1400122ae:	nop
   1400122af:	mov    r8d,0x1
   1400122b5:	lea    rdx,[rsp+0x278]
   1400122bd:	lea    rcx,[rsp+0x90]
   1400122c5:	call   QWORD PTR [rip+0x929d]        # 0x14001b568
   1400122cb:	nop
   1400122cc:	lea    rdx,[rsp+0x268]
   1400122d4:	mov    rcx,rax
   1400122d7:	call   QWORD PTR [rip+0x930b]        # 0x14001b5e8
   1400122dd:	nop
   1400122de:	mov    rcx,rax
   1400122e1:	call   QWORD PTR [rip+0x8f31]        # 0x14001b218
   1400122e7:	mov    rcx,rax
   1400122ea:	lea    rdx,[rip+0x9d5b]        # 0x14001c04c
   1400122f1:	call   QWORD PTR [rip+0x8e49]        # 0x14001b140
   1400122f7:	mov    rbx,rax
   1400122fa:	lea    rcx,[rsp+0x268]
   140012302:	call   QWORD PTR [rip+0x9318]        # 0x14001b620
   140012308:	nop
   140012309:	lea    rcx,[rsp+0x278]
   140012311:	call   QWORD PTR [rip+0x9311]        # 0x14001b628
   140012317:	test   rbx,rbx
   14001231a:	je     0x1400123a7
   140012320:	mov    rcx,rbx
   140012323:	call   QWORD PTR [rip+0x8e1f]        # 0x14001b148
   140012329:	test   eax,eax
   14001232b:	jne    0x1400123a7
   14001232d:	mov    r9,rbx
   140012330:	lea    edx,[rax+0x1]
   140012333:	mov    r8d,0xff
   140012339:	lea    rcx,[rsp+0x2c0]
   140012341:	call   QWORD PTR [rip+0x8ec1]        # 0x14001b208
   140012347:	test   eax,eax
   140012349:	je     0x1400123a7
   14001234b:	xor    ecx,ecx
   14001234d:	test   eax,eax
   14001234f:	jle    0x140012382
   140012351:	movsxd r8,eax
   140012354:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140012360:	movzx  edx,BYTE PTR [rsp+rcx*1+0x2c0]
   140012368:	cmp    dl,0xa
   14001236b:	je     0x140012372
   14001236d:	cmp    dl,0x9
   140012370:	jne    0x14001237a
   140012372:	mov    BYTE PTR [rsp+rcx*1+0x2c0],0x20
   14001237a:	inc    rcx
   14001237d:	cmp    rcx,r8
   140012380:	jl     0x140012360
   140012382:	cdqe   
   140012384:	mov    BYTE PTR [rsp+rax*1+0x2c0],0x0
   14001238c:	lea    rdx,[rsp+0x2c0]
   140012394:	lea    rcx,[rsp+0xa8]
   14001239c:	call   QWORD PTR [rip+0x918e]        # 0x14001b530
   1400123a2:	jmp    0x140012320
   1400123a7:	lea    rcx,[rsp+0x90]
   1400123af:	call   QWORD PTR [rip+0x9193]        # 0x14001b548
   1400123b5:	mov    r8d,eax
   1400123b8:	lea    r9,[rsp+0xa8]
   1400123c0:	mov    edx,esi
   1400123c2:	mov    rcx,r12
   1400123c5:	call   QWORD PTR [rip+0x9185]        # 0x14001b550
   1400123cb:	mov    r11,QWORD PTR [rsp+0xa8]
   1400123d3:	add    esi,DWORD PTR [r11+0x4]
   1400123d7:	lea    rcx,[rsp+0xa8]
   1400123df:	call   QWORD PTR [rip+0x9243]        # 0x14001b628
   1400123e5:	xor    r9d,r9d
   1400123e8:	mov    r8d,esi
   1400123eb:	mov    rdx,r12
   1400123ee:	lea    rcx,[rsp+0x90]
   1400123f6:	call   QWORD PTR [rip+0x9174]        # 0x14001b570
   1400123fc:	mov    esi,eax
   1400123fe:	cmp    eax,0xffffffff
   140012401:	jne    0x1400122a0
   140012407:	mov    rcx,rdi
   14001240a:	call   QWORD PTR [rip+0x8f18]        # 0x14001b328
   140012410:	mov    rdi,rax
   140012413:	jmp    0x140012250
   140012418:	xor    r9d,r9d
   14001241b:	xor    r8d,r8d
   14001241e:	lea    rdx,[rsp+0x50]
   140012423:	lea    rcx,[rsp+0x70]
   140012428:	call   QWORD PTR [rip+0x9142]        # 0x14001b570
   14001242e:	cmp    eax,0xffffffff
   140012431:	setne  r12b
   140012435:	lea    rcx,[rsp+0x90]
   14001243d:	call   QWORD PTR [rip+0x8e9d]        # 0x14001b2e0
   140012443:	nop
   140012444:	lea    rcx,[rsp+0xa0]
   14001244c:	call   QWORD PTR [rip+0x8e8e]        # 0x14001b2e0
   140012452:	nop
   140012453:	mov    rbx,QWORD PTR [rsp+0x68]
   140012458:	mov    eax,DWORD PTR [rbx]
   14001245a:	test   eax,eax
   14001245c:	je     0x140012473
   14001245e:	cmp    eax,0xffffffff
   140012461:	je     0x1400124ac
   140012463:	lock add DWORD PTR [rbx],0xffffffff
   140012467:	setne  al
   14001246a:	test   al,al
   14001246c:	jne    0x1400124ac
   14001246e:	mov    rbx,QWORD PTR [rsp+0x68]
   140012473:	movsxd rax,DWORD PTR [rbx+0xc]
   140012477:	lea    rdi,[rbx+rax*8+0x10]
   14001247c:	movsxd rax,DWORD PTR [rbx+0x8]
   140012480:	lea    rsi,[rbx+rax*8+0x10]
   140012485:	cmp    rsi,rdi
   140012488:	je     0x1400124a2
   14001248a:	nop    WORD PTR [rax+rax*1+0x0]
   140012490:	sub    rdi,0x8
   140012494:	mov    rcx,rdi
   140012497:	call   QWORD PTR [rip+0x918b]        # 0x14001b628
   14001249d:	cmp    rdi,rsi
   1400124a0:	jne    0x140012490
   1400124a2:	mov    rcx,rbx
   1400124a5:	call   QWORD PTR [rip+0x8de5]        # 0x14001b290
   1400124ab:	nop
   1400124ac:	lea    rcx,[rsp+0x70]
   1400124b1:	call   QWORD PTR [rip+0x8e29]        # 0x14001b2e0
   1400124b7:	test   r12b,r12b
   1400124ba:	je     0x1400124cf
   1400124bc:	mov    esi,DWORD PTR [rsp+0x30]
   1400124c0:	mov    r13d,0x20
   1400124c6:	lea    r14d,[r13+0x1a]
   1400124ca:	jmp    0x140010360
   1400124cf:	lea    rcx,[rsp+0x50]
   1400124d4:	call   QWORD PTR [rip+0x914e]        # 0x14001b628
   1400124da:	mov    rax,rbp
   1400124dd:	mov    rcx,QWORD PTR [rsp+0x3c0]
   1400124e5:	xor    rcx,rsp
   1400124e8:	call   0x140013ff0
   1400124ed:	mov    rbx,QWORD PTR [rsp+0x420]
   1400124f5:	add    rsp,0x3d0
   1400124fc:	pop    r15
   1400124fe:	pop    r14
   140012500:	pop    r13
   140012502:	pop    r12
   140012504:	pop    rdi
   140012505:	pop    rsi
   140012506:	pop    rbp
   140012507:	ret    
   140012508:	int3   
   140012509:	int3   
   14001250a:	int3   
   14001250b:	int3   
   14001250c:	int3   
   14001250d:	int3   
   14001250e:	int3   
   14001250f:	int3   
   140012510:	mov    QWORD PTR [rsp+0x8],rbx
   140012515:	mov    QWORD PTR [rsp+0x10],rsi
   14001251a:	push   rdi
   14001251b:	sub    rsp,0x60
   14001251f:	mov    rax,QWORD PTR [r8]
   140012522:	mov    rbx,rcx
   140012525:	lea    rcx,[rsp+0x40]
   14001252a:	mov    QWORD PTR [rcx],rax
   14001252d:	mov    rax,QWORD PTR [r8+0x8]
   140012531:	mov    rsi,rdx
   140012534:	mov    QWORD PTR [rcx+0x8],rax
   140012538:	mov    rax,QWORD PTR [r8+0x10]
   14001253c:	mov    QWORD PTR [rcx+0x10],rax
   140012540:	mov    rax,QWORD PTR [r8]
   140012543:	lea    rcx,[rsp+0x20]
   140012548:	mov    QWORD PTR [rcx],rax
   14001254b:	mov    rax,QWORD PTR [r8+0x8]
   14001254f:	mov    QWORD PTR [rcx+0x8],rax
   140012553:	mov    rax,QWORD PTR [r8+0x10]
   140012557:	mov    QWORD PTR [rcx+0x10],rax
   14001255b:	mov    rax,rdx
   14001255e:	sub    rax,rbx
   140012561:	sar    rax,0x3
   140012565:	add    rax,QWORD PTR [rsp+0x28]
   14001256a:	cmp    rax,QWORD PTR [rsp+0x30]
   14001256f:	jbe    0x140012577
   140012571:	call   QWORD PTR [rip+0x8bc1]        # 0x14001b138
   140012577:	mov    rcx,QWORD PTR [rsp+0x48]
   14001257c:	mov    rax,QWORD PTR [rsp+0x40]
   140012581:	lea    rdi,[rax+rcx*8]
   140012585:	cmp    rbx,rsi
   140012588:	je     0x1400125aa
   14001258a:	sub    rdi,rbx
   14001258d:	nop    DWORD PTR [rax]
   140012590:	lea    rdx,[rdi+rbx*1]
   140012594:	mov    rcx,rbx
   140012597:	call   QWORD PTR [rip+0x9093]        # 0x14001b630
   14001259d:	test   al,al
   14001259f:	je     0x1400125bc
   1400125a1:	add    rbx,0x8
   1400125a5:	cmp    rbx,rsi
   1400125a8:	jne    0x140012590
   1400125aa:	mov    al,0x1
   1400125ac:	mov    rbx,QWORD PTR [rsp+0x70]
   1400125b1:	mov    rsi,QWORD PTR [rsp+0x78]
   1400125b6:	add    rsp,0x60
   1400125ba:	pop    rdi
   1400125bb:	ret    
   1400125bc:	mov    rbx,QWORD PTR [rsp+0x70]
   1400125c1:	mov    rsi,QWORD PTR [rsp+0x78]
   1400125c6:	xor    al,al
   1400125c8:	add    rsp,0x60
   1400125cc:	pop    rdi
   1400125cd:	ret    
   1400125ce:	int3   
   1400125cf:	int3   
   1400125d0:	sub    rsp,0x68
   1400125d4:	mov    r8,QWORD PTR [rcx]
   1400125d7:	mov    QWORD PTR [rsp+0x28],0x0
   1400125e0:	movsxd rax,DWORD PTR [r8+0x8]
   1400125e4:	lea    r11,[r8+rax*8+0x10]
   1400125e9:	movsxd rax,DWORD PTR [r8+0xc]
   1400125ed:	lea    r10,[r8+rax*8+0x10]
   1400125f2:	mov    r8,QWORD PTR [rdx]
   1400125f5:	lea    rdx,[rsp+0x40]
   1400125fa:	movsxd r9,DWORD PTR [r8+0x8]
   1400125fe:	mov    eax,DWORD PTR [r8+0xc]
   140012602:	sub    eax,r9d
   140012605:	lea    rcx,[r8+r9*8+0x10]
   14001260a:	lea    r8,[rsp+0x40]
   14001260f:	mov    QWORD PTR [rsp+0x20],rcx
   140012614:	cdqe   
   140012616:	lea    rcx,[rsp+0x20]
   14001261b:	mov    QWORD PTR [rsp+0x30],rax
   140012620:	mov    rax,QWORD PTR [rcx]
   140012623:	mov    QWORD PTR [rdx],rax
   140012626:	mov    rax,QWORD PTR [rcx+0x8]
   14001262a:	mov    QWORD PTR [rdx+0x8],rax
   14001262e:	mov    rax,QWORD PTR [rcx+0x10]
   140012632:	mov    rcx,r11
   140012635:	mov    QWORD PTR [rdx+0x10],rax
   140012639:	mov    rdx,r10
   14001263c:	call   0x140012510
   140012641:	add    rsp,0x68
   140012645:	ret    
   140012646:	int3   
   140012647:	int3   
   140012648:	int3   
   140012649:	int3   
   14001264a:	int3   
   14001264b:	int3   
   14001264c:	int3   
   14001264d:	int3   
   14001264e:	int3   
   14001264f:	int3   
   140012650:	mov    QWORD PTR [rsp+0x8],rcx
   140012655:	push   rbp
   140012656:	push   rsi
   140012657:	push   rdi
   140012658:	push   r12
   14001265a:	push   r13
   14001265c:	push   r14
   14001265e:	push   r15
   140012660:	sub    rsp,0x30
   140012664:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001266d:	mov    QWORD PTR [rsp+0x78],rbx
   140012672:	mov    r13,rdx
   140012675:	mov    rsi,rcx
   140012678:	mov    rax,QWORD PTR [rcx]
   14001267b:	mov    r8d,DWORD PTR [rax]
   14001267e:	cmp    r8d,0x1
   140012682:	je     0x14001268e
   140012684:	test   r8d,r8d
   140012687:	je     0x14001268e
   140012689:	call   0x14000efe0
   14001268e:	xor    r15d,r15d
   140012691:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400126a0:	mov    rax,QWORD PTR [rsi]
   1400126a3:	mov    rbx,QWORD PTR [rax+0x10]
   1400126a7:	test   rbx,rbx
   1400126aa:	je     0x1400127b1
   1400126b0:	xor    edi,edi
   1400126b2:	lea    rcx,[rbx+0x18]
   1400126b6:	mov    rdx,r13
   1400126b9:	call   QWORD PTR [rip+0x8f79]        # 0x14001b638
   1400126bf:	test   eax,eax
   1400126c1:	js     0x1400126cc
   1400126c3:	mov    rdi,rbx
   1400126c6:	mov    rbx,QWORD PTR [rbx+0x8]
   1400126ca:	jmp    0x1400126d0
   1400126cc:	mov    rbx,QWORD PTR [rbx+0x10]
   1400126d0:	test   rbx,rbx
   1400126d3:	jne    0x1400126b2
   1400126d5:	test   rdi,rdi
   1400126d8:	je     0x1400127ac
   1400126de:	lea    rdx,[rdi+0x18]
   1400126e2:	mov    rcx,r13
   1400126e5:	call   QWORD PTR [rip+0x8f4d]        # 0x14001b638
   1400126eb:	test   eax,eax
   1400126ed:	js     0x1400127a7
   1400126f3:	mov    r14,QWORD PTR [rsi]
   1400126f6:	lea    rcx,[rdi+0x18]
   1400126fa:	call   QWORD PTR [rip+0x8f20]        # 0x14001b620
   140012700:	lea    r12,[rdi+0x20]
   140012704:	mov    QWORD PTR [rsp+0x80],r12
   14001270c:	lea    rcx,[r12+0x28]
   140012711:	call   QWORD PTR [rip+0x8f11]        # 0x14001b628
   140012717:	nop
   140012718:	mov    rcx,QWORD PTR [r12+0x20]
   14001271d:	mov    eax,DWORD PTR [rcx]
   14001271f:	test   eax,eax
   140012721:	je     0x140012733
   140012723:	cmp    eax,0xffffffff
   140012726:	je     0x140012770
   140012728:	lock add DWORD PTR [rcx],0xffffffff
   14001272c:	setne  al
   14001272f:	test   al,al
   140012731:	jne    0x140012770
   140012733:	mov    rbp,QWORD PTR [r12+0x20]
   140012738:	movsxd rax,DWORD PTR [rbp+0xc]
   14001273c:	lea    rbx,[rbp+rax*8+0x10]
   140012741:	movsxd rax,DWORD PTR [rbp+0x8]
   140012745:	lea    rsi,[rbp+rax*8+0x10]
   14001274a:	cmp    rsi,rbx
   14001274d:	je     0x140012762
   14001274f:	nop
   140012750:	sub    rbx,0x8
   140012754:	mov    rcx,rbx
   140012757:	call   QWORD PTR [rip+0x8ecb]        # 0x14001b628
   14001275d:	cmp    rbx,rsi
   140012760:	jne    0x140012750
   140012762:	mov    rcx,rbp
   140012765:	call   QWORD PTR [rip+0x8b25]        # 0x14001b290
   14001276b:	mov    rsi,QWORD PTR [rsp+0x70]
   140012770:	lea    rcx,[r12+0x18]
   140012775:	call   QWORD PTR [rip+0x8ea5]        # 0x14001b620
   14001277b:	nop
   14001277c:	lea    rcx,[r12+0x10]
   140012781:	call   QWORD PTR [rip+0x8e99]        # 0x14001b620
   140012787:	nop
   140012788:	lea    rcx,[r12+0x8]
   14001278d:	call   QWORD PTR [rip+0x8e8d]        # 0x14001b620
   140012793:	mov    rdx,rdi
   140012796:	mov    rcx,r14
   140012799:	call   QWORD PTR [rip+0x8e19]        # 0x14001b5b8
   14001279f:	inc    r15d
   1400127a2:	jmp    0x1400126a0
   1400127a7:	mov    eax,r15d
   1400127aa:	jmp    0x1400127b4
   1400127ac:	mov    eax,r15d
   1400127af:	jmp    0x1400127b4
   1400127b1:	mov    eax,r15d
   1400127b4:	mov    rbx,QWORD PTR [rsp+0x78]
   1400127b9:	add    rsp,0x30
   1400127bd:	pop    r15
   1400127bf:	pop    r14
   1400127c1:	pop    r13
   1400127c3:	pop    r12
   1400127c5:	pop    rdi
   1400127c6:	pop    rsi
   1400127c7:	pop    rbp
   1400127c8:	ret    
   1400127c9:	int3   
   1400127ca:	int3   
   1400127cb:	int3   
   1400127cc:	int3   
   1400127cd:	int3   
   1400127ce:	int3   
   1400127cf:	int3   
   1400127d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400127d5:	push   rbx
   1400127d6:	push   rbp
   1400127d7:	push   rsi
   1400127d8:	push   rdi
   1400127d9:	push   r12
   1400127db:	push   r13
   1400127dd:	push   r14
   1400127df:	push   r15
   1400127e1:	sub    rsp,0xf8
   1400127e8:	mov    QWORD PTR [rsp+0x88],0xfffffffffffffffe
   1400127f4:	xor    r14d,r14d
   1400127f7:	mov    DWORD PTR [rsp+0x148],r14d
   1400127ff:	mov    rbx,QWORD PTR [rip+0x8dd2]        # 0x14001b5d8
   140012806:	mov    QWORD PTR [rsp+0x158],rbx
   14001280e:	mov    QWORD PTR [rsp+0x48],rbx
   140012813:	mov    rax,QWORD PTR [rip+0x8dc6]        # 0x14001b5e0
   14001281a:	mov    QWORD PTR [rsp+0x38],rax
   14001281f:	lea    rdx,[rsp+0x40]
   140012824:	call   0x14000a490
   140012829:	nop
   14001282a:	xor    eax,eax
   14001282c:	mov    DWORD PTR [rsp+0x150],eax
   140012833:	mov    rax,QWORD PTR [rsp+0x40]
   140012838:	mov    ecx,DWORD PTR [rax]
   14001283a:	cmp    ecx,0x1
   14001283d:	je     0x140012850
   14001283f:	test   ecx,ecx
   140012841:	je     0x140012850
   140012843:	mov    edx,DWORD PTR [rax+0x4]
   140012846:	lea    rcx,[rsp+0x40]
   14001284b:	call   0x140006fa0
   140012850:	mov    rax,QWORD PTR [rsp+0x40]
   140012855:	movsxd rcx,DWORD PTR [rax+0x8]
   140012859:	lea    rdi,[rax+rcx*8+0x10]
   14001285e:	or     r15d,0xffffffff
   140012862:	movzx  esi,BYTE PTR [rsp+0x148]
   14001286a:	nop    WORD PTR [rax+rax*1+0x0]
   140012870:	mov    rax,QWORD PTR [rsp+0x40]
   140012875:	mov    ecx,DWORD PTR [rax]
   140012877:	cmp    ecx,0x1
   14001287a:	je     0x14001288d
   14001287c:	test   ecx,ecx
   14001287e:	je     0x14001288d
   140012880:	mov    edx,DWORD PTR [rax+0x4]
   140012883:	lea    rcx,[rsp+0x40]
   140012888:	call   0x140006fa0
   14001288d:	mov    rax,QWORD PTR [rsp+0x40]
   140012892:	movsxd rcx,DWORD PTR [rax+0xc]
   140012896:	lea    rax,[rax+rcx*8+0x10]
   14001289b:	cmp    rdi,rax
   14001289e:	je     0x140012ed2
   1400128a4:	mov    rax,QWORD PTR [rdi]
   1400128a7:	cmp    DWORD PTR [rax+0x3c],0x0
   1400128ab:	jne    0x140012927
   1400128ad:	lea    rcx,[rax+0x20]
   1400128b1:	mov    rax,QWORD PTR [rcx]
   1400128b4:	mov    edx,DWORD PTR [rax+0xc]
   1400128b7:	sub    edx,DWORD PTR [rax+0x8]
   1400128ba:	cmp    edx,0x1
   1400128bd:	jg     0x1400128e9
   1400128bf:	xor    r8d,r8d
   1400128c2:	lea    rdx,[rsp+0x80]
   1400128ca:	call   0x140006c00
   1400128cf:	or     r14d,0x1
   1400128d3:	mov    DWORD PTR [rsp+0x148],r14d
   1400128db:	mov    rax,QWORD PTR [rax]
   1400128de:	cmp    DWORD PTR [rax+0x4],0x0
   1400128e2:	jne    0x1400128e9
   1400128e4:	xor    bpl,bpl
   1400128e7:	jmp    0x1400128ec
   1400128e9:	mov    bpl,0x1
   1400128ec:	test   r14b,0x1
   1400128f0:	je     0x14001290c
   1400128f2:	and    r14d,0xfffffffe
   1400128f6:	mov    DWORD PTR [rsp+0x148],r14d
   1400128fe:	lea    rcx,[rsp+0x80]
   140012906:	call   QWORD PTR [rip+0x8d1c]        # 0x14001b628
   14001290c:	test   bpl,bpl
   14001290f:	jne    0x140012ec9
   140012915:	mov    rdx,QWORD PTR [rdi]
   140012918:	lea    rcx,[rsp+0x38]
   14001291d:	call   0x14000a410
   140012922:	jmp    0x140012ec9
   140012927:	lea    rbp,[rax+0x10]
   14001292b:	mov    rcx,rbp
   14001292e:	call   QWORD PTR [rip+0x89e4]        # 0x14001b318
   140012934:	test   al,al
   140012936:	je     0x14001293c
   140012938:	xor    eax,eax
   14001293a:	jmp    0x140012945
   14001293c:	mov    rcx,rbp
   14001293f:	call   QWORD PTR [rip+0x88d3]        # 0x14001b218
   140012945:	mov    r8d,r15d
   140012948:	mov    rdx,rax
   14001294b:	lea    rcx,[rsp+0x30]
   140012950:	call   QWORD PTR [rip+0x8cb2]        # 0x14001b608
   140012956:	nop
   140012957:	mov    eax,DWORD PTR [rbx]
   140012959:	cmp    eax,0x1
   14001295c:	je     0x1400129fc
   140012962:	test   eax,eax
   140012964:	je     0x1400129fc
   14001296a:	call   QWORD PTR [rip+0x8c30]        # 0x14001b5a0
   140012970:	mov    rbp,rax
   140012973:	lea    r12,[rbx+0x10]
   140012977:	mov    rcx,QWORD PTR [r12]
   14001297b:	test   rcx,rcx
   14001297e:	je     0x14001299a
   140012980:	mov    rdx,rax
   140012983:	call   0x14000da40
   140012988:	mov    r11,rax
   14001298b:	mov    QWORD PTR [rbp+0x10],rax
   14001298f:	and    QWORD PTR [rax],0x3
   140012993:	lea    rax,[rbp+0x8]
   140012997:	or     QWORD PTR [r11],rax
   14001299a:	mov    eax,DWORD PTR [rbx]
   14001299c:	test   eax,eax
   14001299e:	je     0x1400129be
   1400129a0:	cmp    eax,0xffffffff
   1400129a3:	je     0x1400129e8
   1400129a5:	mov    eax,r15d
   1400129a8:	lock xadd DWORD PTR [rbx],eax
   1400129ac:	add    eax,0xffffffff
   1400129af:	setne  al
   1400129b2:	test   al,al
   1400129b4:	jne    0x1400129e8
   1400129b6:	mov    rbx,QWORD PTR [rsp+0x158]
   1400129be:	mov    rcx,QWORD PTR [r12]
   1400129c2:	test   rcx,rcx
   1400129c5:	je     0x1400129df
   1400129c7:	call   0x14000de80
   1400129cc:	mov    r8d,0x8
   1400129d2:	mov    rdx,QWORD PTR [r12]
   1400129d6:	mov    rcx,rbx
   1400129d9:	call   QWORD PTR [rip+0x88c1]        # 0x14001b2a0
   1400129df:	mov    rcx,rbx
   1400129e2:	call   QWORD PTR [rip+0x88b0]        # 0x14001b298
   1400129e8:	mov    rbx,rbp
   1400129eb:	mov    QWORD PTR [rsp+0x158],rbx
   1400129f3:	mov    rcx,rbp
   1400129f6:	call   QWORD PTR [rip+0x88b4]        # 0x14001b2b0
   1400129fc:	lea    r13,[rbx+0x10]
   140012a00:	mov    rbp,QWORD PTR [r13+0x0]
   140012a04:	test   rbp,rbp
   140012a07:	je     0x140012a4e
   140012a09:	xor    r12d,r12d
   140012a0c:	nop    DWORD PTR [rax+0x0]
   140012a10:	lea    rcx,[rbp+0x18]
   140012a14:	lea    rdx,[rsp+0x30]
   140012a19:	call   QWORD PTR [rip+0x8c19]        # 0x14001b638
   140012a1f:	test   eax,eax
   140012a21:	js     0x140012a2c
   140012a23:	mov    r12,rbp
   140012a26:	mov    rbp,QWORD PTR [rbp+0x8]
   140012a2a:	jmp    0x140012a30
   140012a2c:	mov    rbp,QWORD PTR [rbp+0x10]
   140012a30:	test   rbp,rbp
   140012a33:	jne    0x140012a10
   140012a35:	test   r12,r12
   140012a38:	je     0x140012a4e
   140012a3a:	lea    rdx,[r12+0x18]
   140012a3f:	lea    rcx,[rsp+0x30]
   140012a44:	call   QWORD PTR [rip+0x8bee]        # 0x14001b638
   140012a4a:	test   eax,eax
   140012a4c:	jns    0x140012a52
   140012a4e:	lea    r12,[rbx+0x8]
   140012a52:	mov    eax,DWORD PTR [rbx]
   140012a54:	cmp    eax,0x1
   140012a57:	je     0x140012af3
   140012a5d:	test   eax,eax
   140012a5f:	je     0x140012af3
   140012a65:	call   QWORD PTR [rip+0x8b35]        # 0x14001b5a0
   140012a6b:	mov    rbp,rax
   140012a6e:	mov    rcx,QWORD PTR [r13+0x0]
   140012a72:	test   rcx,rcx
   140012a75:	je     0x140012a91
   140012a77:	mov    rdx,rax
   140012a7a:	call   0x14000da40
   140012a7f:	mov    r11,rax
   140012a82:	mov    QWORD PTR [rbp+0x10],rax
   140012a86:	and    QWORD PTR [rax],0x3
   140012a8a:	lea    rax,[rbp+0x8]
   140012a8e:	or     QWORD PTR [r11],rax
   140012a91:	mov    eax,DWORD PTR [rbx]
   140012a93:	test   eax,eax
   140012a95:	je     0x140012ab5
   140012a97:	cmp    eax,0xffffffff
   140012a9a:	je     0x140012adf
   140012a9c:	mov    eax,r15d
   140012a9f:	lock xadd DWORD PTR [rbx],eax
   140012aa3:	add    eax,0xffffffff
   140012aa6:	setne  al
   140012aa9:	test   al,al
   140012aab:	jne    0x140012adf
   140012aad:	mov    rbx,QWORD PTR [rsp+0x158]
   140012ab5:	mov    rcx,QWORD PTR [r13+0x0]
   140012ab9:	test   rcx,rcx
   140012abc:	je     0x140012ad6
   140012abe:	call   0x14000de80
   140012ac3:	mov    r8d,0x8
   140012ac9:	mov    rdx,QWORD PTR [r13+0x0]
   140012acd:	mov    rcx,rbx
   140012ad0:	call   QWORD PTR [rip+0x87ca]        # 0x14001b2a0
   140012ad6:	mov    rcx,rbx
   140012ad9:	call   QWORD PTR [rip+0x87b9]        # 0x14001b298
   140012adf:	mov    rbx,rbp
   140012ae2:	mov    QWORD PTR [rsp+0x158],rbx
   140012aea:	mov    rcx,rbp
   140012aed:	call   QWORD PTR [rip+0x87bd]        # 0x14001b2b0
   140012af3:	lea    rax,[rbx+0x8]
   140012af7:	cmp    r12,rax
   140012afa:	je     0x140012d38
   140012b00:	lea    rdx,[rsp+0x58]
   140012b05:	mov    rcx,QWORD PTR [rdi]
   140012b08:	call   0x140006c60
   140012b0d:	mov    rbp,rax
   140012b10:	lea    rcx,[r12+0x20]
   140012b15:	lea    rdx,[rsp+0x70]
   140012b1a:	call   0x140006c60
   140012b1f:	mov    r11,rax
   140012b22:	mov    rdx,QWORD PTR [rax]
   140012b25:	mov    r8,QWORD PTR [rbp+0x0]
   140012b29:	cmp    rdx,r8
   140012b2c:	jne    0x140012b32
   140012b2e:	mov    al,0x1
   140012b30:	jmp    0x140012b57
   140012b32:	mov    ecx,DWORD PTR [rdx+0xc]
   140012b35:	sub    ecx,DWORD PTR [rdx+0x8]
   140012b38:	mov    eax,DWORD PTR [r8+0xc]
   140012b3c:	sub    eax,DWORD PTR [r8+0x8]
   140012b40:	cmp    ecx,eax
   140012b42:	je     0x140012b48
   140012b44:	xor    al,al
   140012b46:	jmp    0x140012b57
   140012b48:	movzx  r8d,sil
   140012b4c:	mov    rdx,rbp
   140012b4f:	mov    rcx,r11
   140012b52:	call   0x1400125d0
   140012b57:	test   al,al
   140012b59:	sete   r14b
   140012b5d:	mov    r12,QWORD PTR [rsp+0x70]
   140012b62:	mov    eax,DWORD PTR [r12]
   140012b66:	test   eax,eax
   140012b68:	je     0x140012b9b
   140012b6a:	cmp    eax,0xffffffff
   140012b6d:	je     0x140012bdc
   140012b6f:	mov    eax,r15d
   140012b72:	lock xadd DWORD PTR [r12],eax
   140012b78:	add    eax,0xffffffff
   140012b7b:	setne  al
   140012b7e:	test   al,al
   140012b80:	jne    0x140012b91
   140012b82:	mov    rbx,QWORD PTR [rsp+0x158]
   140012b8a:	mov    r12,QWORD PTR [rsp+0x70]
   140012b8f:	jmp    0x140012b9b
   140012b91:	mov    rbx,QWORD PTR [rsp+0x158]
   140012b99:	jmp    0x140012bdc
   140012b9b:	movsxd rax,DWORD PTR [r12+0xc]
   140012ba0:	lea    rbp,[r12+rax*8+0x10]
   140012ba5:	movsxd rax,DWORD PTR [r12+0x8]
   140012baa:	lea    r13,[r12+rax*8+0x10]
   140012baf:	cmp    r13,rbp
   140012bb2:	je     0x140012bd2
   140012bb4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140012bc0:	sub    rbp,0x8
   140012bc4:	mov    rcx,rbp
   140012bc7:	call   QWORD PTR [rip+0x8a5b]        # 0x14001b628
   140012bcd:	cmp    rbp,r13
   140012bd0:	jne    0x140012bc0
   140012bd2:	mov    rcx,r12
   140012bd5:	call   QWORD PTR [rip+0x86b5]        # 0x14001b290
   140012bdb:	nop
   140012bdc:	mov    r12,QWORD PTR [rsp+0x58]
   140012be1:	mov    eax,DWORD PTR [r12]
   140012be5:	test   eax,eax
   140012be7:	je     0x140012c1a
   140012be9:	cmp    eax,0xffffffff
   140012bec:	je     0x140012c4e
   140012bee:	mov    eax,r15d
   140012bf1:	lock xadd DWORD PTR [r12],eax
   140012bf7:	add    eax,0xffffffff
   140012bfa:	setne  al
   140012bfd:	test   al,al
   140012bff:	jne    0x140012c10
   140012c01:	mov    rbx,QWORD PTR [rsp+0x158]
   140012c09:	mov    r12,QWORD PTR [rsp+0x58]
   140012c0e:	jmp    0x140012c1a
   140012c10:	mov    rbx,QWORD PTR [rsp+0x158]
   140012c18:	jmp    0x140012c4e
   140012c1a:	movsxd rax,DWORD PTR [r12+0xc]
   140012c1f:	lea    rbp,[r12+rax*8+0x10]
   140012c24:	movsxd rax,DWORD PTR [r12+0x8]
   140012c29:	lea    r13,[r12+rax*8+0x10]
   140012c2e:	cmp    r13,rbp
   140012c31:	je     0x140012c45
   140012c33:	sub    rbp,0x8
   140012c37:	mov    rcx,rbp
   140012c3a:	call   QWORD PTR [rip+0x89e8]        # 0x14001b628
   140012c40:	cmp    rbp,r13
   140012c43:	jne    0x140012c33
   140012c45:	mov    rcx,r12
   140012c48:	call   QWORD PTR [rip+0x8642]        # 0x14001b290
   140012c4e:	test   r14b,r14b
   140012c51:	je     0x140012eb6
   140012c57:	lea    rdx,[rsp+0x30]
   140012c5c:	lea    rcx,[rsp+0x158]
   140012c64:	call   0x140012650
   140012c69:	mov    r14,QWORD PTR [rdi]
   140012c6c:	mov    rax,QWORD PTR [rsp+0x48]
   140012c71:	mov    ecx,DWORD PTR [rax]
   140012c73:	cmp    ecx,0x1
   140012c76:	je     0x140012c86
   140012c78:	test   ecx,ecx
   140012c7a:	je     0x140012c86
   140012c7c:	lea    rcx,[rsp+0x48]
   140012c81:	call   0x14000efe0
   140012c86:	mov    rax,QWORD PTR [rsp+0x48]
   140012c8b:	mov    rbx,QWORD PTR [rax+0x10]
   140012c8f:	lea    r13,[rax+0x8]
   140012c93:	xor    r12d,r12d
   140012c96:	mov    bpl,0x1
   140012c99:	test   rbx,rbx
   140012c9c:	je     0x140012d09
   140012c9e:	xchg   ax,ax
   140012ca0:	mov    r13,rbx
   140012ca3:	lea    rcx,[rbx+0x18]
   140012ca7:	lea    rdx,[rsp+0x30]
   140012cac:	call   QWORD PTR [rip+0x8986]        # 0x14001b638
   140012cb2:	test   eax,eax
   140012cb4:	js     0x140012cc2
   140012cb6:	mov    r12,rbx
   140012cb9:	mov    bpl,0x1
   140012cbc:	mov    rbx,QWORD PTR [rbx+0x8]
   140012cc0:	jmp    0x140012cc9
   140012cc2:	xor    bpl,bpl
   140012cc5:	mov    rbx,QWORD PTR [rbx+0x10]
   140012cc9:	test   rbx,rbx
   140012ccc:	jne    0x140012ca0
   140012cce:	test   r12,r12
   140012cd1:	je     0x140012d09
   140012cd3:	lea    rdx,[r12+0x18]
   140012cd8:	lea    rcx,[rsp+0x30]
   140012cdd:	call   QWORD PTR [rip+0x8955]        # 0x14001b638
   140012ce3:	test   eax,eax
   140012ce5:	js     0x140012d09
   140012ce7:	lea    rcx,[r12+0x20]
   140012cec:	mov    rdx,r14
   140012cef:	call   0x140008990
   140012cf4:	mov    rbx,QWORD PTR [rsp+0x158]
   140012cfc:	mov    r14d,DWORD PTR [rsp+0x148]
   140012d04:	jmp    0x140012ebe
   140012d09:	mov    BYTE PTR [rsp+0x20],bpl
   140012d0e:	mov    r9,r13
   140012d11:	mov    r8,r14
   140012d14:	lea    rdx,[rsp+0x30]
   140012d19:	mov    rcx,QWORD PTR [rsp+0x48]
   140012d1e:	call   0x14000d9b0
   140012d23:	mov    rbx,QWORD PTR [rsp+0x158]
   140012d2b:	mov    r14d,DWORD PTR [rsp+0x148]
   140012d33:	jmp    0x140012ebe
   140012d38:	mov    rax,QWORD PTR [rsp+0x48]
   140012d3d:	mov    rbp,QWORD PTR [rax+0x10]
   140012d41:	test   rbp,rbp
   140012d44:	je     0x140012d92
   140012d46:	xor    r12d,r12d
   140012d49:	nop    DWORD PTR [rax+0x0]
   140012d50:	lea    rcx,[rbp+0x18]
   140012d54:	lea    rdx,[rsp+0x30]
   140012d59:	call   QWORD PTR [rip+0x88d9]        # 0x14001b638
   140012d5f:	test   eax,eax
   140012d61:	js     0x140012d6c
   140012d63:	mov    r12,rbp
   140012d66:	mov    rbp,QWORD PTR [rbp+0x8]
   140012d6a:	jmp    0x140012d70
   140012d6c:	mov    rbp,QWORD PTR [rbp+0x10]
   140012d70:	test   rbp,rbp
   140012d73:	jne    0x140012d50
   140012d75:	test   r12,r12
   140012d78:	je     0x140012d92
   140012d7a:	lea    rdx,[r12+0x18]
   140012d7f:	lea    rcx,[rsp+0x30]
   140012d84:	call   QWORD PTR [rip+0x88ae]        # 0x14001b638
   140012d8a:	test   eax,eax
   140012d8c:	jns    0x140012ebe
   140012d92:	mov    rcx,QWORD PTR [rdi]
   140012d95:	add    rcx,0x20
   140012d99:	mov    rax,QWORD PTR [rcx]
   140012d9c:	mov    edx,DWORD PTR [rax+0xc]
   140012d9f:	sub    edx,DWORD PTR [rax+0x8]
   140012da2:	cmp    edx,0x1
   140012da5:	jg     0x140012dce
   140012da7:	xor    r8d,r8d
   140012daa:	lea    rdx,[rsp+0x78]
   140012daf:	call   0x140006c00
   140012db4:	or     r14d,0x2
   140012db8:	mov    DWORD PTR [rsp+0x148],r14d
   140012dc0:	mov    rax,QWORD PTR [rax]
   140012dc3:	cmp    DWORD PTR [rax+0x4],0x0
   140012dc7:	jne    0x140012dce
   140012dc9:	xor    bpl,bpl
   140012dcc:	jmp    0x140012dd1
   140012dce:	mov    bpl,0x1
   140012dd1:	test   r14b,0x2
   140012dd5:	je     0x140012dee
   140012dd7:	and    r14d,0xfffffffd
   140012ddb:	mov    DWORD PTR [rsp+0x148],r14d
   140012de3:	lea    rcx,[rsp+0x78]
   140012de8:	call   QWORD PTR [rip+0x883a]        # 0x14001b628
   140012dee:	test   bpl,bpl
   140012df1:	je     0x140012ebe
   140012df7:	mov    r15,QWORD PTR [rdi]
   140012dfa:	mov    eax,DWORD PTR [rbx]
   140012dfc:	cmp    eax,0x1
   140012dff:	je     0x140012e1a
   140012e01:	test   eax,eax
   140012e03:	je     0x140012e1a
   140012e05:	lea    rcx,[rsp+0x158]
   140012e0d:	call   0x14000efe0
   140012e12:	mov    rbx,QWORD PTR [rsp+0x158]
   140012e1a:	mov    rbp,QWORD PTR [rbx+0x10]
   140012e1e:	lea    r14,[rbx+0x8]
   140012e22:	xor    r13d,r13d
   140012e25:	mov    r12b,0x1
   140012e28:	test   rbp,rbp
   140012e2b:	je     0x140012e90
   140012e2d:	nop    DWORD PTR [rax]
   140012e30:	mov    r14,rbp
   140012e33:	lea    rcx,[rbp+0x18]
   140012e37:	lea    rdx,[rsp+0x30]
   140012e3c:	call   QWORD PTR [rip+0x87f6]        # 0x14001b638
   140012e42:	test   eax,eax
   140012e44:	js     0x140012e52
   140012e46:	mov    r13,rbp
   140012e49:	mov    r12b,0x1
   140012e4c:	mov    rbp,QWORD PTR [rbp+0x8]
   140012e50:	jmp    0x140012e59
   140012e52:	xor    r12b,r12b
   140012e55:	mov    rbp,QWORD PTR [rbp+0x10]
   140012e59:	test   rbp,rbp
   140012e5c:	jne    0x140012e30
   140012e5e:	test   r13,r13
   140012e61:	je     0x140012e90
   140012e63:	lea    rdx,[r13+0x18]
   140012e67:	lea    rcx,[rsp+0x30]
   140012e6c:	call   QWORD PTR [rip+0x87c6]        # 0x14001b638
   140012e72:	test   eax,eax
   140012e74:	js     0x140012e90
   140012e76:	lea    rcx,[r13+0x20]
   140012e7a:	mov    rdx,r15
   140012e7d:	call   0x140008990
   140012e82:	mov    r14d,DWORD PTR [rsp+0x148]
   140012e8a:	or     r15d,0xffffffff
   140012e8e:	jmp    0x140012ebe
   140012e90:	mov    BYTE PTR [rsp+0x20],r12b
   140012e95:	mov    r9,r14
   140012e98:	mov    r8,r15
   140012e9b:	lea    rdx,[rsp+0x30]
   140012ea0:	mov    rcx,rbx
   140012ea3:	call   0x14000d9b0
   140012ea8:	mov    r14d,DWORD PTR [rsp+0x148]
   140012eb0:	or     r15d,0xffffffff
   140012eb4:	jmp    0x140012ebe
   140012eb6:	mov    r14d,DWORD PTR [rsp+0x148]
   140012ebe:	lea    rcx,[rsp+0x30]
   140012ec3:	call   QWORD PTR [rip+0x8757]        # 0x14001b620
   140012ec9:	add    rdi,0x8
   140012ecd:	jmp    0x140012870
   140012ed2:	mov    rsi,QWORD PTR [rsp+0x38]
   140012ed7:	mov    eax,DWORD PTR [rsi]
   140012ed9:	cmp    eax,0x1
   140012edc:	je     0x140012ef4
   140012ede:	test   eax,eax
   140012ee0:	je     0x140012ef4
   140012ee2:	mov    edx,DWORD PTR [rsi+0x4]
   140012ee5:	lea    rcx,[rsp+0x38]
   140012eea:	call   0x140006fa0
   140012eef:	mov    rsi,QWORD PTR [rsp+0x38]
   140012ef4:	movsxd rax,DWORD PTR [rsi+0x8]
   140012ef8:	lea    rdi,[rsi+rax*8+0x10]
   140012efd:	nop    DWORD PTR [rax]
   140012f00:	mov    eax,DWORD PTR [rsi]
   140012f02:	cmp    eax,0x1
   140012f05:	je     0x140012f1d
   140012f07:	test   eax,eax
   140012f09:	je     0x140012f1d
   140012f0b:	mov    edx,DWORD PTR [rsi+0x4]
   140012f0e:	lea    rcx,[rsp+0x38]
   140012f13:	call   0x140006fa0
   140012f18:	mov    rsi,QWORD PTR [rsp+0x38]
   140012f1d:	movsxd rax,DWORD PTR [rsi+0xc]
   140012f21:	lea    rax,[rsi+rax*8+0x10]
   140012f26:	cmp    rdi,rax
   140012f29:	je     0x140013456
   140012f2f:	mov    rsi,QWORD PTR [rdi]
   140012f32:	lea    rcx,[rsi+0x10]
   140012f36:	call   QWORD PTR [rip+0x83dc]        # 0x14001b318
   140012f3c:	test   al,al
   140012f3e:	je     0x140012f44
   140012f40:	xor    eax,eax
   140012f42:	jmp    0x140012f4e
   140012f44:	lea    rcx,[rsi+0x10]
   140012f48:	call   QWORD PTR [rip+0x82ca]        # 0x14001b218
   140012f4e:	mov    r8d,r15d
   140012f51:	mov    rdx,rax
   140012f54:	lea    rcx,[rsp+0x50]
   140012f59:	call   QWORD PTR [rip+0x86a9]        # 0x14001b608
   140012f5f:	nop
   140012f60:	mov    eax,DWORD PTR [rbx]
   140012f62:	cmp    eax,0x1
   140012f65:	je     0x1400130e4
   140012f6b:	test   eax,eax
   140012f6d:	je     0x1400130e4
   140012f73:	call   QWORD PTR [rip+0x8627]        # 0x14001b5a0
   140012f79:	mov    r15,rax
   140012f7c:	lea    rsi,[rbx+0x10]
   140012f80:	mov    QWORD PTR [rsp+0x148],rsi
   140012f88:	mov    rcx,QWORD PTR [rsi]
   140012f8b:	test   rcx,rcx
   140012f8e:	je     0x140012faa
   140012f90:	mov    rdx,rax
   140012f93:	call   0x14000da40
   140012f98:	mov    r11,rax
   140012f9b:	mov    QWORD PTR [r15+0x10],rax
   140012f9f:	and    QWORD PTR [rax],0x3
   140012fa3:	lea    rax,[r15+0x8]
   140012fa7:	or     QWORD PTR [r11],rax
   140012faa:	mov    eax,DWORD PTR [rbx]
   140012fac:	test   eax,eax
   140012fae:	je     0x140012fd0
   140012fb0:	cmp    eax,0xffffffff
   140012fb3:	je     0x1400130cc
   140012fb9:	lock add DWORD PTR [rbx],0xffffffff
   140012fbd:	setne  al
   140012fc0:	test   al,al
   140012fc2:	jne    0x1400130cc
   140012fc8:	mov    rbx,QWORD PTR [rsp+0x158]
   140012fd0:	mov    r12,QWORD PTR [rsi]
   140012fd3:	test   r12,r12
   140012fd6:	je     0x1400130c3
   140012fdc:	lea    rcx,[r12+0x18]
   140012fe1:	call   QWORD PTR [rip+0x8639]        # 0x14001b620
   140012fe7:	lea    r13,[r12+0x20]
   140012fec:	mov    QWORD PTR [rsp+0x68],r13
   140012ff1:	lea    rcx,[r13+0x28]
   140012ff5:	call   QWORD PTR [rip+0x862d]        # 0x14001b628
   140012ffb:	nop
   140012ffc:	mov    rcx,QWORD PTR [r13+0x20]
   140013000:	mov    eax,DWORD PTR [rcx]
   140013002:	test   eax,eax
   140013004:	je     0x14001302a
   140013006:	cmp    eax,0xffffffff
   140013009:	je     0x140013073
   14001300b:	lock add DWORD PTR [rcx],0xffffffff
   14001300f:	setne  al
   140013012:	test   al,al
   140013014:	jne    0x140013020
   140013016:	mov    rbx,QWORD PTR [rsp+0x158]
   14001301e:	jmp    0x14001302a
   140013020:	mov    rbx,QWORD PTR [rsp+0x158]
   140013028:	jmp    0x140013073
   14001302a:	mov    r14,QWORD PTR [r13+0x20]
   14001302e:	movsxd rax,DWORD PTR [r14+0xc]
   140013032:	lea    rsi,[r14+rax*8+0x10]
   140013037:	movsxd rax,DWORD PTR [r14+0x8]
   14001303b:	lea    rbp,[r14+rax*8+0x10]
   140013040:	cmp    rbp,rsi
   140013043:	je     0x140013062
   140013045:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140013050:	sub    rsi,0x8
   140013054:	mov    rcx,rsi
   140013057:	call   QWORD PTR [rip+0x85cb]        # 0x14001b628
   14001305d:	cmp    rsi,rbp
   140013060:	jne    0x140013050
   140013062:	mov    rcx,r14
   140013065:	call   QWORD PTR [rip+0x8225]        # 0x14001b290
   14001306b:	mov    rsi,QWORD PTR [rsp+0x148]
   140013073:	lea    rcx,[r13+0x18]
   140013077:	call   QWORD PTR [rip+0x85a3]        # 0x14001b620
   14001307d:	nop
   14001307e:	lea    rcx,[r13+0x10]
   140013082:	call   QWORD PTR [rip+0x8598]        # 0x14001b620
   140013088:	nop
   140013089:	lea    rcx,[r13+0x8]
   14001308d:	call   QWORD PTR [rip+0x858d]        # 0x14001b620
   140013093:	mov    rcx,QWORD PTR [r12+0x8]
   140013098:	test   rcx,rcx
   14001309b:	je     0x1400130a2
   14001309d:	call   0x14000de80
   1400130a2:	mov    rcx,QWORD PTR [r12+0x10]
   1400130a7:	test   rcx,rcx
   1400130aa:	je     0x1400130b1
   1400130ac:	call   0x14000de80
   1400130b1:	mov    r8d,0x8
   1400130b7:	mov    rdx,QWORD PTR [rsi]
   1400130ba:	mov    rcx,rbx
   1400130bd:	call   QWORD PTR [rip+0x81dd]        # 0x14001b2a0
   1400130c3:	mov    rcx,rbx
   1400130c6:	call   QWORD PTR [rip+0x81cc]        # 0x14001b298
   1400130cc:	mov    rbx,r15
   1400130cf:	mov    QWORD PTR [rsp+0x158],rbx
   1400130d7:	mov    rcx,r15
   1400130da:	call   QWORD PTR [rip+0x81d0]        # 0x14001b2b0
   1400130e0:	or     r15d,0xffffffff
   1400130e4:	lea    r12,[rbx+0x10]
   1400130e8:	mov    QWORD PTR [rsp+0x68],r12
   1400130ed:	mov    rsi,QWORD PTR [r12]
   1400130f1:	test   rsi,rsi
   1400130f4:	je     0x14001313d
   1400130f6:	xor    ebp,ebp
   1400130f8:	nop    DWORD PTR [rax+rax*1+0x0]
   140013100:	lea    rcx,[rsi+0x18]
   140013104:	lea    rdx,[rsp+0x50]
   140013109:	call   QWORD PTR [rip+0x8529]        # 0x14001b638
   14001310f:	test   eax,eax
   140013111:	js     0x14001311c
   140013113:	mov    rbp,rsi
   140013116:	mov    rsi,QWORD PTR [rsi+0x8]
   14001311a:	jmp    0x140013120
   14001311c:	mov    rsi,QWORD PTR [rsi+0x10]
   140013120:	test   rsi,rsi
   140013123:	jne    0x140013100
   140013125:	test   rbp,rbp
   140013128:	je     0x14001313d
   14001312a:	lea    rdx,[rbp+0x18]
   14001312e:	lea    rcx,[rsp+0x50]
   140013133:	call   QWORD PTR [rip+0x84ff]        # 0x14001b638
   140013139:	test   eax,eax
   14001313b:	jns    0x140013141
   14001313d:	lea    rbp,[rbx+0x8]
   140013141:	mov    eax,DWORD PTR [rbx]
   140013143:	cmp    eax,0x1
   140013146:	je     0x1400132c4
   14001314c:	test   eax,eax
   14001314e:	je     0x1400132c4
   140013154:	call   QWORD PTR [rip+0x8446]        # 0x14001b5a0
   14001315a:	mov    rsi,rax
   14001315d:	mov    QWORD PTR [rsp+0x148],rax
   140013165:	mov    rcx,QWORD PTR [r12]
   140013169:	test   rcx,rcx
   14001316c:	je     0x140013188
   14001316e:	mov    rdx,rax
   140013171:	call   0x14000da40
   140013176:	mov    r11,rax
   140013179:	mov    QWORD PTR [rsi+0x10],rax
   14001317d:	and    QWORD PTR [rax],0x3
   140013181:	lea    rax,[rsi+0x8]
   140013185:	or     QWORD PTR [r11],rax
   140013188:	mov    eax,DWORD PTR [rbx]
   14001318a:	test   eax,eax
   14001318c:	je     0x1400131b4
   14001318e:	cmp    eax,0xffffffff
   140013191:	je     0x1400132b0
   140013197:	mov    eax,r15d
   14001319a:	lock xadd DWORD PTR [rbx],eax
   14001319e:	add    eax,0xffffffff
   1400131a1:	setne  al
   1400131a4:	test   al,al
   1400131a6:	jne    0x1400132b0
   1400131ac:	mov    rbx,QWORD PTR [rsp+0x158]
   1400131b4:	mov    r13,QWORD PTR [r12]
   1400131b8:	test   r13,r13
   1400131bb:	je     0x1400132a7
   1400131c1:	lea    rcx,[r13+0x18]
   1400131c5:	call   QWORD PTR [rip+0x8455]        # 0x14001b620
   1400131cb:	lea    r15,[r13+0x20]
   1400131cf:	mov    QWORD PTR [rsp+0x90],r15
   1400131d7:	lea    rcx,[r15+0x28]
   1400131db:	call   QWORD PTR [rip+0x8447]        # 0x14001b628
   1400131e1:	nop
   1400131e2:	mov    rcx,QWORD PTR [r15+0x20]
   1400131e6:	mov    eax,DWORD PTR [rcx]
   1400131e8:	test   eax,eax
   1400131ea:	je     0x140013210
   1400131ec:	cmp    eax,0xffffffff
   1400131ef:	je     0x140013258
   1400131f1:	lock add DWORD PTR [rcx],0xffffffff
   1400131f5:	setne  al
   1400131f8:	test   al,al
   1400131fa:	jne    0x140013206
   1400131fc:	mov    rbx,QWORD PTR [rsp+0x158]
   140013204:	jmp    0x140013210
   140013206:	mov    rbx,QWORD PTR [rsp+0x158]
   14001320e:	jmp    0x140013258
   140013210:	mov    r14,QWORD PTR [r15+0x20]
   140013214:	movsxd rax,DWORD PTR [r14+0xc]
   140013218:	lea    rsi,[r14+rax*8+0x10]
   14001321d:	movsxd rax,DWORD PTR [r14+0x8]
   140013221:	lea    r12,[r14+rax*8+0x10]
   140013226:	cmp    r12,rsi
   140013229:	je     0x140013242
   14001322b:	nop    DWORD PTR [rax+rax*1+0x0]
   140013230:	sub    rsi,0x8
   140013234:	mov    rcx,rsi
   140013237:	call   QWORD PTR [rip+0x83eb]        # 0x14001b628
   14001323d:	cmp    rsi,r12
   140013240:	jne    0x140013230
   140013242:	mov    rcx,r14
   140013245:	call   QWORD PTR [rip+0x8045]        # 0x14001b290
   14001324b:	mov    rsi,QWORD PTR [rsp+0x148]
   140013253:	mov    r12,QWORD PTR [rsp+0x68]
   140013258:	lea    rcx,[r15+0x18]
   14001325c:	call   QWORD PTR [rip+0x83be]        # 0x14001b620
   140013262:	nop
   140013263:	lea    rcx,[r15+0x10]
   140013267:	call   QWORD PTR [rip+0x83b3]        # 0x14001b620
   14001326d:	nop
   14001326e:	lea    rcx,[r15+0x8]
   140013272:	call   QWORD PTR [rip+0x83a8]        # 0x14001b620
   140013278:	mov    rcx,QWORD PTR [r13+0x8]
   14001327c:	test   rcx,rcx
   14001327f:	je     0x140013286
   140013281:	call   0x14000de80
   140013286:	mov    rcx,QWORD PTR [r13+0x10]
   14001328a:	test   rcx,rcx
   14001328d:	je     0x140013294
   14001328f:	call   0x14000de80
   140013294:	mov    r8d,0x8
   14001329a:	mov    rdx,QWORD PTR [r12]
   14001329e:	mov    rcx,rbx
   1400132a1:	call   QWORD PTR [rip+0x7ff9]        # 0x14001b2a0
   1400132a7:	mov    rcx,rbx
   1400132aa:	call   QWORD PTR [rip+0x7fe8]        # 0x14001b298
   1400132b0:	mov    rbx,rsi
   1400132b3:	mov    QWORD PTR [rsp+0x158],rbx
   1400132bb:	mov    rcx,rsi
   1400132be:	call   QWORD PTR [rip+0x7fec]        # 0x14001b2b0
   1400132c4:	lea    rax,[rbx+0x8]
   1400132c8:	cmp    rbp,rax
   1400132cb:	je     0x140013439
   1400132d1:	mov    rdx,QWORD PTR [rdi]
   1400132d4:	lea    rcx,[rsp+0xa0]
   1400132dc:	call   0x140009700
   1400132e1:	nop
   1400132e2:	lea    rcx,[rbp+0x20]
   1400132e6:	lea    rdx,[rsp+0x60]
   1400132eb:	call   0x140006c60
   1400132f0:	nop
   1400132f1:	mov    rdx,rax
   1400132f4:	lea    rcx,[rsp+0xc0]
   1400132fc:	call   0x1400045d0
   140013301:	nop
   140013302:	mov    rbp,QWORD PTR [rsp+0x60]
   140013307:	mov    eax,DWORD PTR [rbp+0x0]
   14001330a:	test   eax,eax
   14001330c:	je     0x140013338
   14001330e:	cmp    eax,0xffffffff
   140013311:	je     0x14001336b
   140013313:	lock add DWORD PTR [rbp+0x0],0xffffffff
   140013318:	setne  al
   14001331b:	test   al,al
   14001331d:	jne    0x14001332e
   14001331f:	mov    rbx,QWORD PTR [rsp+0x158]
   140013327:	mov    rbp,QWORD PTR [rsp+0x60]
   14001332c:	jmp    0x140013338
   14001332e:	mov    rbx,QWORD PTR [rsp+0x158]
   140013336:	jmp    0x14001336b
   140013338:	movsxd rax,DWORD PTR [rbp+0xc]
   14001333c:	lea    rsi,[rbp+rax*8+0x10]
   140013341:	movsxd rax,DWORD PTR [rbp+0x8]
   140013345:	lea    r12,[rbp+rax*8+0x10]
   14001334a:	cmp    r12,rsi
   14001334d:	je     0x140013362
   14001334f:	nop
   140013350:	sub    rsi,0x8
   140013354:	mov    rcx,rsi
   140013357:	call   QWORD PTR [rip+0x82cb]        # 0x14001b628
   14001335d:	cmp    rsi,r12
   140013360:	jne    0x140013350
   140013362:	mov    rcx,rbp
   140013365:	call   QWORD PTR [rip+0x7f25]        # 0x14001b290
   14001336b:	lea    rdx,[rsp+0xa0]
   140013373:	mov    rcx,QWORD PTR [rsp+0x140]
   14001337b:	call   0x14000a9f0
   140013380:	inc    DWORD PTR [rsp+0x150]
   140013387:	lea    rcx,[rsp+0xc8]
   14001338f:	call   QWORD PTR [rip+0x8293]        # 0x14001b628
   140013395:	nop
   140013396:	mov    rbp,QWORD PTR [rsp+0xc0]
   14001339e:	mov    eax,DWORD PTR [rbp+0x0]
   1400133a1:	test   eax,eax
   1400133a3:	je     0x1400133d2
   1400133a5:	cmp    eax,0xffffffff
   1400133a8:	je     0x14001340c
   1400133aa:	lock add DWORD PTR [rbp+0x0],0xffffffff
   1400133af:	setne  al
   1400133b2:	test   al,al
   1400133b4:	jne    0x1400133c8
   1400133b6:	mov    rbx,QWORD PTR [rsp+0x158]
   1400133be:	mov    rbp,QWORD PTR [rsp+0xc0]
   1400133c6:	jmp    0x1400133d2
   1400133c8:	mov    rbx,QWORD PTR [rsp+0x158]
   1400133d0:	jmp    0x14001340c
   1400133d2:	movsxd rax,DWORD PTR [rbp+0xc]
   1400133d6:	lea    rsi,[rbp+rax*8+0x10]
   1400133db:	movsxd rax,DWORD PTR [rbp+0x8]
   1400133df:	lea    r12,[rbp+rax*8+0x10]
   1400133e4:	cmp    r12,rsi
   1400133e7:	je     0x140013402
   1400133e9:	nop    DWORD PTR [rax+0x0]
   1400133f0:	sub    rsi,0x8
   1400133f4:	mov    rcx,rsi
   1400133f7:	call   QWORD PTR [rip+0x822b]        # 0x14001b628
   1400133fd:	cmp    rsi,r12
   140013400:	jne    0x1400133f0
   140013402:	mov    rcx,rbp
   140013405:	call   QWORD PTR [rip+0x7e85]        # 0x14001b290
   14001340b:	nop
   14001340c:	lea    rcx,[rsp+0xb8]
   140013414:	call   QWORD PTR [rip+0x8206]        # 0x14001b620
   14001341a:	nop
   14001341b:	lea    rcx,[rsp+0xb0]
   140013423:	call   QWORD PTR [rip+0x81f7]        # 0x14001b620
   140013429:	nop
   14001342a:	lea    rcx,[rsp+0xa8]
   140013432:	call   QWORD PTR [rip+0x81e8]        # 0x14001b620
   140013438:	nop
   140013439:	lea    rcx,[rsp+0x50]
   14001343e:	call   QWORD PTR [rip+0x81dc]        # 0x14001b620
   140013444:	add    rdi,0x8
   140013448:	mov    rsi,QWORD PTR [rsp+0x38]
   14001344d:	or     r15d,0xffffffff
   140013451:	jmp    0x140012f00
   140013456:	mov    r13,QWORD PTR [rsp+0x40]
   14001345b:	mov    eax,DWORD PTR [r13+0x0]
   14001345f:	test   eax,eax
   140013461:	je     0x1400134a0
   140013463:	cmp    eax,0xffffffff
   140013466:	je     0x140013584
   14001346c:	mov    eax,r15d
   14001346f:	lock xadd DWORD PTR [r13+0x0],eax
   140013475:	add    eax,0xffffffff
   140013478:	setne  al
   14001347b:	test   al,al
   14001347d:	jne    0x14001348e
   14001347f:	mov    rbx,QWORD PTR [rsp+0x158]
   140013487:	mov    r13,QWORD PTR [rsp+0x40]
   14001348c:	jmp    0x1400134a0
   14001348e:	mov    rbx,QWORD PTR [rsp+0x158]
   140013496:	mov    rsi,QWORD PTR [rsp+0x38]
   14001349b:	jmp    0x140013584
   1400134a0:	movsxd rax,DWORD PTR [r13+0xc]
   1400134a4:	lea    rbp,[r13+rax*8+0x10]
   1400134a9:	movsxd rax,DWORD PTR [r13+0x8]
   1400134ad:	lea    r14,[r13+rax*8+0x10]
   1400134b2:	cmp    r14,rbp
   1400134b5:	je     0x140013576
   1400134bb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400134c0:	sub    rbp,0x8
   1400134c4:	mov    rdi,QWORD PTR [rbp+0x0]
   1400134c8:	mov    QWORD PTR [rsp+0x148],rdi
   1400134d0:	test   rdi,rdi
   1400134d3:	je     0x140013565
   1400134d9:	lea    rcx,[rdi+0x28]
   1400134dd:	call   QWORD PTR [rip+0x8145]        # 0x14001b628
   1400134e3:	nop
   1400134e4:	mov    rcx,QWORD PTR [rdi+0x20]
   1400134e8:	mov    eax,DWORD PTR [rcx]
   1400134ea:	test   eax,eax
   1400134ec:	je     0x140013504
   1400134ee:	cmp    eax,0xffffffff
   1400134f1:	je     0x14001353d
   1400134f3:	mov    eax,r15d
   1400134f6:	lock xadd DWORD PTR [rcx],eax
   1400134fa:	add    eax,0xffffffff
   1400134fd:	setne  al
   140013500:	test   al,al
   140013502:	jne    0x14001353d
   140013504:	mov    r12,QWORD PTR [rdi+0x20]
   140013508:	movsxd rax,DWORD PTR [r12+0xc]
   14001350d:	lea    rbx,[r12+rax*8+0x10]
   140013512:	movsxd rax,DWORD PTR [r12+0x8]
   140013517:	lea    rsi,[r12+rax*8+0x10]
   14001351c:	cmp    rsi,rbx
   14001351f:	je     0x140013533
   140013521:	sub    rbx,0x8
   140013525:	mov    rcx,rbx
   140013528:	call   QWORD PTR [rip+0x80fa]        # 0x14001b628
   14001352e:	cmp    rbx,rsi
   140013531:	jne    0x140013521
   140013533:	mov    rcx,r12
   140013536:	call   QWORD PTR [rip+0x7d54]        # 0x14001b290
   14001353c:	nop
   14001353d:	lea    rcx,[rdi+0x18]
   140013541:	call   QWORD PTR [rip+0x80d9]        # 0x14001b620
   140013547:	nop
   140013548:	lea    rcx,[rdi+0x10]
   14001354c:	call   QWORD PTR [rip+0x80ce]        # 0x14001b620
   140013552:	nop
   140013553:	lea    rcx,[rdi+0x8]
   140013557:	call   QWORD PTR [rip+0x80c3]        # 0x14001b620
   14001355d:	mov    rcx,rdi
   140013560:	call   0x140013f3e
   140013565:	cmp    rbp,r14
   140013568:	jne    0x1400134c0
   14001356e:	mov    rbx,QWORD PTR [rsp+0x158]
   140013576:	mov    rcx,r13
   140013579:	call   QWORD PTR [rip+0x7d11]        # 0x14001b290
   14001357f:	mov    rsi,QWORD PTR [rsp+0x38]
   140013584:	mov    eax,DWORD PTR [rsi]
   140013586:	test   eax,eax
   140013588:	je     0x1400135b9
   14001358a:	cmp    eax,0xffffffff
   14001358d:	je     0x1400135df
   14001358f:	mov    eax,r15d
   140013592:	lock xadd DWORD PTR [rsi],eax
   140013596:	add    eax,0xffffffff
   140013599:	setne  al
   14001359c:	test   al,al
   14001359e:	jne    0x1400135af
   1400135a0:	mov    rbx,QWORD PTR [rsp+0x158]
   1400135a8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400135ad:	jmp    0x1400135b9
   1400135af:	mov    rbx,QWORD PTR [rsp+0x158]
   1400135b7:	jmp    0x1400135df
   1400135b9:	movsxd rax,DWORD PTR [rsi+0xc]
   1400135bd:	lea    r8,[rsi+rax*8+0x10]
   1400135c2:	movsxd rax,DWORD PTR [rsi+0x8]
   1400135c6:	lea    rdx,[rsi+rax*8+0x10]
   1400135cb:	lea    rcx,[rsp+0x38]
   1400135d0:	call   0x140006c90
   1400135d5:	mov    rcx,rsi
   1400135d8:	call   QWORD PTR [rip+0x7cb2]        # 0x14001b290
   1400135de:	nop
   1400135df:	mov    rdi,QWORD PTR [rsp+0x48]
   1400135e4:	mov    eax,DWORD PTR [rdi]
   1400135e6:	test   eax,eax
   1400135e8:	je     0x140013619
   1400135ea:	cmp    eax,0xffffffff
   1400135ed:	je     0x140013644
   1400135ef:	mov    eax,r15d
   1400135f2:	lock xadd DWORD PTR [rdi],eax
   1400135f6:	add    eax,0xffffffff
   1400135f9:	setne  al
   1400135fc:	test   al,al
   1400135fe:	jne    0x14001360f
   140013600:	mov    rbx,QWORD PTR [rsp+0x158]
   140013608:	mov    rdi,QWORD PTR [rsp+0x48]
   14001360d:	jmp    0x140013619
   14001360f:	mov    rbx,QWORD PTR [rsp+0x158]
   140013617:	jmp    0x140013644
   140013619:	mov    rcx,QWORD PTR [rdi+0x10]
   14001361d:	test   rcx,rcx
   140013620:	je     0x14001363a
   140013622:	call   0x14000de80
   140013627:	mov    r8d,0x8
   14001362d:	mov    rdx,QWORD PTR [rdi+0x10]
   140013631:	mov    rcx,rdi
   140013634:	call   QWORD PTR [rip+0x7c66]        # 0x14001b2a0
   14001363a:	mov    rcx,rdi
   14001363d:	call   QWORD PTR [rip+0x7c55]        # 0x14001b298
   140013643:	nop
   140013644:	mov    eax,DWORD PTR [rbx]
   140013646:	test   eax,eax
   140013648:	je     0x14001367b
   14001364a:	cmp    eax,0xffffffff
   14001364d:	je     0x140013672
   14001364f:	lock xadd DWORD PTR [rbx],r15d
   140013654:	add    r15d,0xffffffff
   140013658:	setne  al
   14001365b:	test   al,al
   14001365d:	jne    0x140013669
   14001365f:	mov    rbx,QWORD PTR [rsp+0x158]
   140013667:	jmp    0x14001367b
   140013669:	mov    eax,DWORD PTR [rsp+0x150]
   140013670:	jmp    0x1400136ac
   140013672:	mov    eax,DWORD PTR [rsp+0x150]
   140013679:	jmp    0x1400136ac
   14001367b:	mov    rcx,QWORD PTR [rbx+0x10]
   14001367f:	test   rcx,rcx
   140013682:	je     0x14001369c
   140013684:	call   0x14000de80
   140013689:	mov    r8d,0x8
   14001368f:	mov    rdx,QWORD PTR [rbx+0x10]
   140013693:	mov    rcx,rbx
   140013696:	call   QWORD PTR [rip+0x7c04]        # 0x14001b2a0
   14001369c:	mov    rcx,rbx
   14001369f:	call   QWORD PTR [rip+0x7bf3]        # 0x14001b298
   1400136a5:	mov    eax,DWORD PTR [rsp+0x150]
   1400136ac:	add    rsp,0xf8
   1400136b3:	pop    r15
   1400136b5:	pop    r14
   1400136b7:	pop    r13
   1400136b9:	pop    r12
   1400136bb:	pop    rdi
   1400136bc:	pop    rsi
   1400136bd:	pop    rbp
   1400136be:	pop    rbx
   1400136bf:	ret    
   1400136c0:	mov    r11,rsp
   1400136c3:	push   rdi
   1400136c4:	sub    rsp,0xd0
   1400136cb:	mov    QWORD PTR [rsp+0xc8],0xfffffffffffffffe
   1400136d7:	mov    QWORD PTR [r11+0x10],rbx
   1400136db:	mov    QWORD PTR [r11+0x18],rbp
   1400136df:	mov    QWORD PTR [r11+0x20],rsi
   1400136e3:	mov    r10,rdx
   1400136e6:	mov    rbx,rcx
   1400136e9:	mov    rdi,rdx
   1400136ec:	xor    r9b,r9b
   1400136ef:	xor    eax,eax
   1400136f1:	mov    QWORD PTR [r11-0x80],rax
   1400136f5:	mov    QWORD PTR [r11-0x78],rax
   1400136f9:	mov    QWORD PTR [r11-0x70],rax
   1400136fd:	mov    QWORD PTR [r11-0x68],rax
   140013701:	mov    QWORD PTR [r11-0x60],rax
   140013705:	mov    QWORD PTR [r11-0x58],rax
   140013709:	mov    DWORD PTR [r11-0x50],eax
   14001370d:	movzx  eax,BYTE PTR [rdx]
   140013710:	lea    rbp,[rip+0xfffffffffffec8e9]        # 0x140000000
   140013717:	test   al,al
   140013719:	je     0x140013780
   14001371b:	nop    DWORD PTR [rax+rax*1+0x0]
   140013720:	movzx  eax,al
   140013723:	mov    r8d,DWORD PTR [rbp+rax*4+0x1f7e0]
   14001372b:	movzx  eax,r9b
   14001372f:	lea    ecx,[r8+r8*4]
   140013733:	mov    eax,DWORD PTR [rbp+rax*4+0x1f7e0]
   14001373a:	lea    edx,[rax+rcx*4]
   14001373d:	movsxd rax,edx
   140013740:	sar    rax,0x3
   140013744:	and    dl,0x7
   140013747:	or     BYTE PTR [rsp+rax*1+0x58],dl
   14001374b:	inc    rdi
   14001374e:	movzx  r9d,BYTE PTR [rdi]
   140013752:	test   r9b,r9b
   140013755:	je     0x14001377a
   140013757:	movzx  eax,r9b
   14001375b:	mov    eax,DWORD PTR [rbp+rax*4+0x1f7e0]
   140013762:	lea    ecx,[rax+rax*4]
   140013765:	lea    edx,[r8+rcx*4]
   140013769:	movsxd rax,edx
   14001376c:	sar    rax,0x3
   140013770:	and    dl,0x7
   140013773:	or     BYTE PTR [rsp+rax*1+0x58],dl
   140013777:	inc    rdi
   14001377a:	mov    al,BYTE PTR [rdi]
   14001377c:	test   al,al
   14001377e:	jne    0x140013720
   140013780:	xor    eax,eax
   140013782:	or     rcx,0xffffffffffffffff
   140013786:	mov    rdi,r10
   140013789:	repnz scas al,BYTE PTR es:[rdi]
   14001378b:	not    rcx
   14001378e:	lea    rsi,[rcx-0x1]
   140013792:	lea    rdx,[rsp+0xe0]
   14001379a:	mov    rcx,rbx
   14001379d:	call   QWORD PTR [rip+0x7e45]        # 0x14001b5e8
   1400137a3:	nop
   1400137a4:	mov    rcx,rax
   1400137a7:	call   QWORD PTR [rip+0x7a6b]        # 0x14001b218
   1400137ad:	mov    rdi,rax
   1400137b0:	xor    r9b,r9b
   1400137b3:	xor    eax,eax
   1400137b5:	mov    QWORD PTR [rsp+0x20],rax
   1400137ba:	mov    QWORD PTR [rsp+0x28],rax
   1400137bf:	mov    QWORD PTR [rsp+0x30],rax
   1400137c4:	mov    QWORD PTR [rsp+0x38],rax
   1400137c9:	mov    QWORD PTR [rsp+0x40],rax
   1400137ce:	mov    QWORD PTR [rsp+0x48],rax
   1400137d3:	mov    DWORD PTR [rsp+0x50],eax
   1400137d7:	movzx  ecx,BYTE PTR [rdi]
   1400137da:	test   cl,cl
   1400137dc:	je     0x140013840
   1400137de:	xchg   ax,ax
   1400137e0:	movzx  eax,cl
   1400137e3:	mov    r8d,DWORD PTR [rbp+rax*4+0x1f7e0]
   1400137eb:	movzx  eax,r9b
   1400137ef:	lea    ecx,[r8+r8*4]
   1400137f3:	mov    eax,DWORD PTR [rbp+rax*4+0x1f7e0]
   1400137fa:	lea    edx,[rax+rcx*4]
   1400137fd:	movsxd rax,edx
   140013800:	sar    rax,0x3
   140013804:	and    dl,0x7
   140013807:	or     BYTE PTR [rsp+rax*1+0x20],dl
   14001380b:	inc    rdi
   14001380e:	movzx  r9d,BYTE PTR [rdi]
   140013812:	test   r9b,r9b
   140013815:	je     0x14001383a
   140013817:	movzx  eax,r9b
   14001381b:	mov    eax,DWORD PTR [rbp+rax*4+0x1f7e0]
   140013822:	lea    ecx,[rax+rax*4]
   140013825:	lea    edx,[r8+rcx*4]
   140013829:	movsxd rax,edx
   14001382c:	sar    rax,0x3
   140013830:	and    dl,0x7
   140013833:	or     BYTE PTR [rsp+rax*1+0x20],dl
   140013837:	inc    rdi
   14001383a:	mov    cl,BYTE PTR [rdi]
   14001383c:	test   cl,cl
   14001383e:	jne    0x1400137e0
   140013840:	lea    rcx,[rsp+0xe0]
   140013848:	call   QWORD PTR [rip+0x7dd2]        # 0x14001b620
   14001384e:	mov    rdx,QWORD PTR [rbx]
   140013851:	mov    ebx,DWORD PTR [rdx+0x4]
   140013854:	sub    ebx,esi
   140013856:	jns    0x14001385a
   140013858:	neg    ebx
   14001385a:	xor    edx,edx
   14001385c:	lea    r8d,[rdx+0x34]
   140013860:	lea    rcx,[rsp+0x90]
   140013868:	call   0x140014170
   14001386d:	xor    edi,edi
   14001386f:	mov    rcx,rdi
   140013872:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140013880:	mov    eax,DWORD PTR [rsp+rcx*1+0x20]
   140013884:	and    eax,DWORD PTR [rsp+rcx*1+0x58]
   140013888:	mov    DWORD PTR [rsp+rcx*1+0x90],eax
   14001388f:	add    rcx,0x4
   140013893:	cmp    rcx,0x34
   140013897:	jl     0x140013880
   140013899:	mov    esi,edi
   14001389b:	mov    rcx,rdi
   14001389e:	mov    edx,edi
   1400138a0:	movzx  eax,BYTE PTR [rsp+rcx*1+0x90]
   1400138a8:	add    esi,DWORD PTR [rbp+rax*4+0x1fbe0]
   1400138af:	movzx  eax,BYTE PTR [rsp+rcx*1+0x91]
   1400138b7:	add    edx,DWORD PTR [rbp+rax*4+0x1fbe0]
   1400138be:	add    rcx,0x2
   1400138c2:	cmp    rcx,0x32
   1400138c6:	jl     0x1400138a0
   1400138c8:	add    esi,edx
   1400138ca:	xor    edx,edx
   1400138cc:	lea    r8d,[rdx+0x34]
   1400138d0:	lea    rcx,[rsp+0x90]
   1400138d8:	call   0x140014170
   1400138dd:	mov    rdx,rdi
   1400138e0:	mov    eax,DWORD PTR [rsp+rdx*1+0x20]
   1400138e4:	or     eax,DWORD PTR [rsp+rdx*1+0x58]
   1400138e8:	mov    DWORD PTR [rsp+rdx*1+0x90],eax
   1400138ef:	add    rdx,0x4
   1400138f3:	cmp    rdx,0x34
   1400138f7:	jl     0x1400138e0
   1400138f9:	mov    rcx,rdi
   1400138fc:	mov    edx,edi
   1400138fe:	xchg   ax,ax
   140013900:	movzx  eax,BYTE PTR [rsp+rcx*1+0x90]
   140013908:	add    edi,DWORD PTR [rbp+rax*4+0x1fbe0]
   14001390f:	movzx  eax,BYTE PTR [rsp+rcx*1+0x91]
   140013917:	add    edx,DWORD PTR [rbp+rax*4+0x1fbe0]
   14001391e:	add    rcx,0x2
   140013922:	cmp    rcx,0x32
   140013926:	jl     0x140013900
   140013928:	add    edi,edx
   14001392a:	lea    ecx,[rdi+rbx*2+0x1]
   14001392e:	lea    eax,[rsi+0x1]
   140013931:	shl    eax,0xa
   140013934:	cdq    
   140013935:	idiv   ecx
   140013937:	lea    r11,[rsp+0xd0]
   14001393f:	mov    rbx,QWORD PTR [r11+0x18]
   140013943:	mov    rbp,QWORD PTR [r11+0x20]
   140013947:	mov    rsi,QWORD PTR [r11+0x28]
   14001394b:	mov    rsp,r11
   14001394e:	pop    rdi
   14001394f:	ret    
   140013950:	mov    QWORD PTR [rsp+0x8],rcx
   140013955:	push   rdi
   140013956:	sub    rsp,0x30
   14001395a:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140013963:	mov    QWORD PTR [rsp+0x48],rbx
   140013968:	mov    rbx,r8
   14001396b:	mov    rdi,rcx
   14001396e:	mov    DWORD PTR [rsp+0x58],0x0
   140013976:	lea    rcx,[rsp+0x20]
   14001397b:	call   QWORD PTR [rip+0x7c2f]        # 0x14001b5b0
   140013981:	nop
   140013982:	mov    rdx,rbx
   140013985:	mov    rcx,rax
   140013988:	call   QWORD PTR [rip+0x7bea]        # 0x14001b578
   14001398e:	mov    rdx,rax
   140013991:	mov    rcx,rdi
   140013994:	call   QWORD PTR [rip+0x7c16]        # 0x14001b5b0
   14001399a:	mov    DWORD PTR [rsp+0x58],0x1
   1400139a2:	lea    rcx,[rsp+0x20]
   1400139a7:	call   QWORD PTR [rip+0x7c73]        # 0x14001b620
   1400139ad:	mov    rax,rdi
   1400139b0:	mov    rbx,QWORD PTR [rsp+0x48]
   1400139b5:	add    rsp,0x30
   1400139b9:	pop    rdi
   1400139ba:	ret    
   1400139bb:	int3   
   1400139bc:	int3   
   1400139bd:	int3   
   1400139be:	int3   
   1400139bf:	int3   
   1400139c0:	rex push rbx
   1400139c2:	sub    rsp,0x20
   1400139c6:	mov    rbx,rcx
   1400139c9:	mov    DWORD PTR [rcx],0x0
   1400139cf:	add    rcx,0x8
   1400139d3:	call   QWORD PTR [rip+0x787f]        # 0x14001b258
   1400139d9:	lea    rcx,[rbx+0x10]
   1400139dd:	call   QWORD PTR [rip+0x7875]        # 0x14001b258
   1400139e3:	lea    rcx,[rbx+0x18]
   1400139e7:	call   QWORD PTR [rip+0x786b]        # 0x14001b258
   1400139ed:	mov    r11,QWORD PTR [rip+0x7bec]        # 0x14001b5e0
   1400139f4:	lea    rcx,[rbx+0x28]
   1400139f8:	mov    QWORD PTR [rbx+0x20],r11
   1400139fc:	call   QWORD PTR [rip+0x7c0e]        # 0x14001b610
   140013a02:	mov    DWORD PTR [rbx+0x30],0xffffffff
   140013a09:	mov    rax,rbx
   140013a0c:	add    rsp,0x20
   140013a10:	pop    rbx
   140013a11:	ret    
   140013a12:	int3   
   140013a13:	int3   
   140013a14:	int3   
   140013a15:	int3   
   140013a16:	int3   
   140013a17:	int3   
   140013a18:	int3   
   140013a19:	int3   
   140013a1a:	int3   
   140013a1b:	int3   
   140013a1c:	int3   
   140013a1d:	int3   
   140013a1e:	int3   
   140013a1f:	int3   
   140013a20:	mov    QWORD PTR [rsp+0x8],rcx
   140013a25:	push   rsi
   140013a26:	push   rdi
   140013a27:	push   r12
   140013a29:	sub    rsp,0x30
   140013a2d:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140013a36:	mov    QWORD PTR [rsp+0x58],rbx
   140013a3b:	mov    QWORD PTR [rsp+0x60],rbp
   140013a40:	mov    rdi,r9
   140013a43:	mov    rbx,r8
   140013a46:	mov    rbp,rcx
   140013a49:	or     r8d,0xffffffff
   140013a4d:	add    rcx,0x8
   140013a51:	call   QWORD PTR [rip+0x7bb1]        # 0x14001b608
   140013a57:	nop
   140013a58:	or     r8d,0xffffffff
   140013a5c:	mov    rdx,rbx
   140013a5f:	lea    rcx,[rbp+0x10]
   140013a63:	call   QWORD PTR [rip+0x7b9f]        # 0x14001b608
   140013a69:	nop
   140013a6a:	or     r8d,0xffffffff
   140013a6e:	mov    rdx,rdi
   140013a71:	lea    rcx,[rbp+0x18]
   140013a75:	call   QWORD PTR [rip+0x7b8d]        # 0x14001b608
   140013a7b:	nop
   140013a7c:	lea    rcx,[rbp+0x20]
   140013a80:	mov    rdx,QWORD PTR [rsp+0x80]
   140013a88:	call   0x140004550
   140013a8d:	nop
   140013a8e:	lea    rcx,[rbp+0x28]
   140013a92:	mov    rdx,QWORD PTR [rsp+0x70]
   140013a97:	call   QWORD PTR [rip+0x7893]        # 0x14001b330
   140013a9d:	nop
   140013a9e:	mov    eax,DWORD PTR [rsp+0x78]
   140013aa2:	mov    DWORD PTR [rbp+0x30],eax
   140013aa5:	mov    rax,QWORD PTR [rbp+0x8]
   140013aa9:	cmp    DWORD PTR [rax+0x4],0x0
   140013aad:	jne    0x140013ac0
   140013aaf:	lea    rdx,[rip+0x8332]        # 0x14001bde8
   140013ab6:	lea    rcx,[rbp+0x8]
   140013aba:	call   QWORD PTR [rip+0x77a8]        # 0x14001b268
   140013ac0:	mov    rax,QWORD PTR [rbp+0x10]
   140013ac4:	cmp    DWORD PTR [rax+0x4],0x0
   140013ac8:	jne    0x140013adb
   140013aca:	lea    rdx,[rip+0x8317]        # 0x14001bde8
   140013ad1:	lea    rcx,[rbp+0x10]
   140013ad5:	call   QWORD PTR [rip+0x778d]        # 0x14001b268
   140013adb:	mov    rax,QWORD PTR [rbp+0x18]
   140013adf:	cmp    DWORD PTR [rax+0x4],0x0
   140013ae3:	jne    0x140013af6
   140013ae5:	lea    rdx,[rip+0x82fc]        # 0x14001bde8
   140013aec:	lea    rcx,[rbp+0x18]
   140013af0:	call   QWORD PTR [rip+0x7772]        # 0x14001b268
   140013af6:	lea    r8,[rbp+0x18]
   140013afa:	lea    rdx,[rbp+0x10]
   140013afe:	lea    rcx,[rsp+0x20]
   140013b03:	call   0x140013950
   140013b08:	nop
   140013b09:	mov    rcx,rax
   140013b0c:	call   QWORD PTR [rip+0x772e]        # 0x14001b240
   140013b12:	mov    r11,rax
   140013b15:	xor    ecx,ecx
   140013b17:	test   rax,rax
   140013b1a:	je     0x140013b4b
   140013b1c:	cmp    BYTE PTR [rax],cl
   140013b1e:	je     0x140013b4b
   140013b20:	shl    ecx,0x4
   140013b23:	movzx  eax,BYTE PTR [r11]
   140013b27:	add    ecx,eax
   140013b29:	inc    r11
   140013b2c:	mov    edx,ecx
   140013b2e:	and    edx,0xf0000000
   140013b34:	je     0x140013b3d
   140013b36:	mov    eax,edx
   140013b38:	shr    eax,0x18
   140013b3b:	xor    ecx,eax
   140013b3d:	not    edx
   140013b3f:	and    ecx,edx
   140013b41:	cmp    BYTE PTR [r11],0x0
   140013b45:	jne    0x140013b20
   140013b47:	test   ecx,ecx
   140013b49:	jne    0x140013b50
   140013b4b:	mov    ecx,0x1
   140013b50:	mov    DWORD PTR [rbp+0x0],ecx
   140013b53:	lea    rcx,[rsp+0x20]
   140013b58:	call   QWORD PTR [rip+0x7ac2]        # 0x14001b620
   140013b5e:	nop
   140013b5f:	mov    rax,rbp
   140013b62:	mov    rbx,QWORD PTR [rsp+0x58]
   140013b67:	mov    rbp,QWORD PTR [rsp+0x60]
   140013b6c:	add    rsp,0x30
   140013b70:	pop    r12
   140013b72:	pop    rdi
   140013b73:	pop    rsi
   140013b74:	ret    
   140013b75:	int3   
   140013b76:	int3   
   140013b77:	int3   
   140013b78:	int3   
   140013b79:	int3   
   140013b7a:	int3   
   140013b7b:	int3   
   140013b7c:	int3   
   140013b7d:	int3   
   140013b7e:	int3   
   140013b7f:	int3   
   140013b80:	mov    QWORD PTR [rsp+0x8],rcx
   140013b85:	push   rdi
   140013b86:	sub    rsp,0x30
   140013b8a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013b93:	mov    QWORD PTR [rsp+0x48],rbx
   140013b98:	mov    rbx,rdx
   140013b9b:	mov    rdi,rcx
   140013b9e:	add    rdx,0x8
   140013ba2:	add    rcx,0x8
   140013ba6:	call   QWORD PTR [rip+0x7a04]        # 0x14001b5b0
   140013bac:	nop
   140013bad:	lea    rdx,[rbx+0x10]
   140013bb1:	lea    rcx,[rdi+0x10]
   140013bb5:	call   QWORD PTR [rip+0x79f5]        # 0x14001b5b0
   140013bbb:	nop
   140013bbc:	lea    rdx,[rbx+0x18]
   140013bc0:	lea    rcx,[rdi+0x18]
   140013bc4:	call   QWORD PTR [rip+0x79e6]        # 0x14001b5b0
   140013bca:	nop
   140013bcb:	lea    rcx,[rdi+0x20]
   140013bcf:	lea    rdx,[rbx+0x20]
   140013bd3:	call   0x140004550
   140013bd8:	lea    rdx,[rbx+0x28]
   140013bdc:	lea    rcx,[rdi+0x28]
   140013be0:	call   QWORD PTR [rip+0x774a]        # 0x14001b330
   140013be6:	mov    r11d,DWORD PTR [rbx+0x30]
   140013bea:	mov    DWORD PTR [rdi+0x30],r11d
   140013bee:	mov    eax,DWORD PTR [rbx]
   140013bf0:	mov    DWORD PTR [rdi],eax
   140013bf2:	mov    rax,rdi
   140013bf5:	mov    rbx,QWORD PTR [rsp+0x48]
   140013bfa:	add    rsp,0x30
   140013bfe:	pop    rdi
   140013bff:	ret    
   140013c00:	mov    QWORD PTR [rsp+0x8],rbx
   140013c05:	push   rdi
   140013c06:	sub    rsp,0x20
   140013c0a:	mov    eax,DWORD PTR [rdx]
   140013c0c:	mov    rbx,rdx
   140013c0f:	mov    rdi,rcx
   140013c12:	mov    DWORD PTR [rcx],eax
   140013c14:	add    rcx,0x8
   140013c18:	add    rdx,0x8
   140013c1c:	call   QWORD PTR [rip+0x796e]        # 0x14001b590
   140013c22:	lea    rdx,[rbx+0x10]
   140013c26:	lea    rcx,[rdi+0x10]
   140013c2a:	call   QWORD PTR [rip+0x7960]        # 0x14001b590
   140013c30:	lea    rdx,[rbx+0x18]
   140013c34:	lea    rcx,[rdi+0x18]
   140013c38:	call   QWORD PTR [rip+0x7952]        # 0x14001b590
   140013c3e:	lea    rdx,[rbx+0x20]
   140013c42:	lea    rcx,[rdi+0x20]
   140013c46:	call   0x1400045d0
   140013c4b:	lea    rdx,[rbx+0x28]
   140013c4f:	lea    rcx,[rdi+0x28]
   140013c53:	call   QWORD PTR [rip+0x767f]        # 0x14001b2d8
   140013c59:	mov    r11d,DWORD PTR [rbx+0x30]
   140013c5d:	mov    rbx,QWORD PTR [rsp+0x30]
   140013c62:	mov    DWORD PTR [rdi+0x30],r11d
   140013c66:	mov    rax,rdi
   140013c69:	add    rsp,0x20
   140013c6d:	pop    rdi
   140013c6e:	ret    
   140013c6f:	int3   
   140013c70:	rex push rdi
   140013c72:	push   r12
   140013c74:	push   r13
   140013c76:	sub    rsp,0x50
   140013c7a:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140013c83:	mov    QWORD PTR [rsp+0x70],rbx
   140013c88:	mov    QWORD PTR [rsp+0x78],rbp
   140013c8d:	mov    QWORD PTR [rsp+0x80],rsi
   140013c95:	mov    r12,r8
   140013c98:	mov    edi,edx
   140013c9a:	mov    r10d,ecx
   140013c9d:	lea    rbx,[rip+0xc824]        # 0x1400204c8
   140013ca4:	xor    r13d,r13d
   140013ca7:	lea    r11,[rip+0xc99a]        # 0x140020648
   140013cae:	xchg   ax,ax
   140013cb0:	mov    rbp,rbx
   140013cb3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140013cc0:	mov    rdx,r13
   140013cc3:	mov    r8,QWORD PTR [rbp+0x0]
   140013cc7:	mov    eax,DWORD PTR [r8]
   140013cca:	cmp    eax,0x1
   140013ccd:	je     0x140013d02
   140013ccf:	mov    rcx,r13
   140013cd2:	cmp    eax,r10d
   140013cd5:	jne    0x140013cee
   140013cd7:	mov    rax,QWORD PTR [rbp+0x8]
   140013cdb:	test   rax,rax
   140013cde:	jne    0x140013ce4
   140013ce0:	test   edi,edi
   140013ce2:	je     0x140013d18
   140013ce4:	test   rax,rax
   140013ce7:	je     0x140013cee
   140013ce9:	cmp    DWORD PTR [rax+rcx*1],edi
   140013cec:	je     0x140013d18
   140013cee:	inc    rdx
   140013cf1:	lea    rcx,[rdx*4+0x0]
   140013cf9:	mov    eax,DWORD PTR [r8+rcx*1]
   140013cfd:	cmp    eax,0x1
   140013d00:	jne    0x140013cd2
   140013d02:	add    rbp,0x18
   140013d06:	cmp    rbp,r11
   140013d09:	jl     0x140013cc0
   140013d0b:	test   edi,edi
   140013d0d:	je     0x140013e1a
   140013d13:	mov    edi,r13d
   140013d16:	jmp    0x140013cb0
   140013d18:	test   r12,r12
   140013d1b:	je     0x140013e16
   140013d21:	mov    rdi,QWORD PTR [rip+0x78b8]        # 0x14001b5e0
   140013d28:	mov    QWORD PTR [rsp+0x88],rdi
   140013d30:	lea    rdx,[rsp+0x88]
   140013d38:	mov    rcx,r12
   140013d3b:	call   0x1400045d0
   140013d40:	nop
   140013d41:	mov    eax,DWORD PTR [rdi]
   140013d43:	test   eax,eax
   140013d45:	je     0x140013d5f
   140013d47:	cmp    eax,0xffffffff
   140013d4a:	je     0x140013d9b
   140013d4c:	lock add DWORD PTR [rdi],0xffffffff
   140013d50:	setne  al
   140013d53:	test   al,al
   140013d55:	jne    0x140013d9b
   140013d57:	mov    rdi,QWORD PTR [rsp+0x88]
   140013d5f:	movsxd rax,DWORD PTR [rdi+0xc]
   140013d63:	lea    rbx,[rdi+rax*8+0x10]
   140013d68:	movsxd rax,DWORD PTR [rdi+0x8]
   140013d6c:	lea    rsi,[rdi+rax*8+0x10]
   140013d71:	cmp    rsi,rbx
   140013d74:	je     0x140013d92
   140013d76:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013d80:	sub    rbx,0x8
   140013d84:	mov    rcx,rbx
   140013d87:	call   QWORD PTR [rip+0x789b]        # 0x14001b628
   140013d8d:	cmp    rbx,rsi
   140013d90:	jne    0x140013d80
   140013d92:	mov    rcx,rdi
   140013d95:	call   QWORD PTR [rip+0x74f5]        # 0x14001b290
   140013d9b:	mov    rax,QWORD PTR [rbp-0x8]
   140013d9f:	mov    rbx,r13
   140013da2:	cmp    QWORD PTR [rax],rbx
   140013da5:	je     0x140013e16
   140013da7:	mov    rdx,QWORD PTR [rax]
   140013daa:	test   rdx,rdx
   140013dad:	je     0x140013dc6
   140013daf:	xor    eax,eax
   140013db1:	or     rcx,0xffffffffffffffff
   140013db5:	mov    rdi,rdx
   140013db8:	repnz scas al,BYTE PTR es:[rdi]
   140013dba:	not    rcx
   140013dbd:	dec    rcx
   140013dc0:	mov    DWORD PTR [rsp+0x30],ecx
   140013dc4:	jmp    0x140013dcb
   140013dc6:	mov    DWORD PTR [rsp+0x30],r13d
   140013dcb:	mov    QWORD PTR [rsp+0x38],rdx
   140013dd0:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140013dd5:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140013ddb:	lea    rdx,[rsp+0x40]
   140013de0:	lea    rcx,[rsp+0x20]
   140013de5:	call   QWORD PTR [rip+0x7795]        # 0x14001b580
   140013deb:	nop
   140013dec:	lea    rdx,[rsp+0x20]
   140013df1:	mov    rcx,r12
   140013df4:	call   0x1400049b0
   140013df9:	nop
   140013dfa:	lea    rcx,[rsp+0x20]
   140013dff:	call   QWORD PTR [rip+0x7823]        # 0x14001b628
   140013e05:	inc    rbx
   140013e08:	mov    rax,QWORD PTR [rbp-0x8]
   140013e0c:	lea    rax,[rax+rbx*8]
   140013e10:	cmp    QWORD PTR [rax],0x0
   140013e14:	jne    0x140013da7
   140013e16:	mov    al,0x1
   140013e18:	jmp    0x140013e1c
   140013e1a:	xor    al,al
   140013e1c:	mov    rbx,QWORD PTR [rsp+0x70]
   140013e21:	mov    rbp,QWORD PTR [rsp+0x78]
   140013e26:	mov    rsi,QWORD PTR [rsp+0x80]
   140013e2e:	add    rsp,0x50
   140013e32:	pop    r13
   140013e34:	pop    r12
   140013e36:	pop    rdi
   140013e37:	ret    
   140013e38:	jmp    QWORD PTR [rip+0x7952]        # 0x14001b790
   140013e3e:	jmp    QWORD PTR [rip+0x7944]        # 0x14001b788
   140013e44:	jmp    QWORD PTR [rip+0x7936]        # 0x14001b780
   140013e4a:	jmp    QWORD PTR [rip+0x7928]        # 0x14001b778
   140013e50:	jmp    QWORD PTR [rip+0x791a]        # 0x14001b770
   140013e56:	jmp    QWORD PTR [rip+0x790c]        # 0x14001b768
   140013e5c:	jmp    QWORD PTR [rip+0x78fe]        # 0x14001b760
   140013e62:	jmp    QWORD PTR [rip+0x78f0]        # 0x14001b758
   140013e68:	jmp    QWORD PTR [rip+0x78e2]        # 0x14001b750
   140013e6e:	jmp    QWORD PTR [rip+0x78d4]        # 0x14001b748
   140013e74:	jmp    QWORD PTR [rip+0x78c6]        # 0x14001b740
   140013e7a:	jmp    QWORD PTR [rip+0x78b8]        # 0x14001b738
   140013e80:	jmp    QWORD PTR [rip+0x78aa]        # 0x14001b730
   140013e86:	jmp    QWORD PTR [rip+0x789c]        # 0x14001b728
   140013e8c:	jmp    QWORD PTR [rip+0x788e]        # 0x14001b720
   140013e92:	jmp    QWORD PTR [rip+0x7880]        # 0x14001b718
   140013e98:	jmp    QWORD PTR [rip+0x7872]        # 0x14001b710
   140013e9e:	jmp    QWORD PTR [rip+0x7864]        # 0x14001b708
   140013ea4:	jmp    QWORD PTR [rip+0x7856]        # 0x14001b700
   140013eaa:	jmp    QWORD PTR [rip+0x7848]        # 0x14001b6f8
   140013eb0:	jmp    QWORD PTR [rip+0x783a]        # 0x14001b6f0
   140013eb6:	jmp    QWORD PTR [rip+0x782c]        # 0x14001b6e8
   140013ebc:	jmp    QWORD PTR [rip+0x781e]        # 0x14001b6e0
   140013ec2:	jmp    QWORD PTR [rip+0x7798]        # 0x14001b660
   140013ec8:	jmp    0x140014010
   140013ecd:	int3   
   140013ece:	jmp    QWORD PTR [rip+0x7324]        # 0x14001b1f8
   140013ed4:	mov    QWORD PTR [rsp+0x8],rbx
   140013ed9:	mov    QWORD PTR [rsp+0x10],rsi
   140013ede:	push   rdi
   140013edf:	sub    rsp,0x20
   140013ee3:	mov    esi,edx
   140013ee5:	mov    rbx,rcx
   140013ee8:	test   dl,0x2
   140013eeb:	je     0x140013f17
   140013eed:	mov    r8d,DWORD PTR [rcx-0x8]
   140013ef1:	lea    r9,[rip+0x9e6]        # 0x1400148de
   140013ef8:	mov    edx,0x18
   140013efd:	call   0x1400144a8
   140013f02:	test   sil,0x1
   140013f06:	je     0x140013f11
   140013f08:	lea    rcx,[rbx-0x8]
   140013f0c:	call   0x140013f3e
   140013f11:	lea    rax,[rbx-0x8]
   140013f15:	jmp    0x140013f2d
   140013f17:	call   0x1400148de
   140013f1c:	test   sil,0x1
   140013f20:	je     0x140013f2a
   140013f22:	mov    rcx,rbx
   140013f25:	call   0x140013f3e
   140013f2a:	mov    rax,rbx
   140013f2d:	mov    rbx,QWORD PTR [rsp+0x30]
   140013f32:	mov    rsi,QWORD PTR [rsp+0x38]
   140013f37:	add    rsp,0x20
   140013f3b:	pop    rdi
   140013f3c:	ret    
   140013f3d:	int3   
   140013f3e:	jmp    QWORD PTR [rip+0x729c]        # 0x14001b1e0
   140013f44:	jmp    QWORD PTR [rip+0x728e]        # 0x14001b1d8
   140013f4a:	jmp    QWORD PTR [rip+0x7280]        # 0x14001b1d0
   140013f50:	mov    rax,rsp
   140013f53:	mov    QWORD PTR [rax+0x8],rbx
   140013f57:	mov    QWORD PTR [rax+0x10],rbp
   140013f5b:	mov    QWORD PTR [rax+0x18],rsi
   140013f5f:	mov    QWORD PTR [rax+0x20],rdi
   140013f63:	push   r12
   140013f65:	sub    rsp,0x20
   140013f69:	mov    rbx,QWORD PTR [r9+0x38]
   140013f6d:	mov    rsi,rdx
   140013f70:	mov    r12,r8
   140013f73:	mov    rbp,rcx
   140013f76:	lea    r8,[rbx+0x4]
   140013f7a:	mov    rdx,r9
   140013f7d:	mov    rcx,rsi
   140013f80:	mov    rdi,r9
   140013f83:	call   0x140014018
   140013f88:	mov    r11d,DWORD PTR [rbx+0x4]
   140013f8c:	mov    r10d,DWORD PTR [rbp+0x4]
   140013f90:	mov    eax,r11d
   140013f93:	and    r11d,0x2
   140013f97:	mov    r8d,0x1
   140013f9d:	and    eax,r8d
   140013fa0:	and    r10b,0x66
   140013fa4:	cmove  r11d,eax
   140013fa8:	test   r11d,r11d
   140013fab:	je     0x140013fc1
   140013fad:	mov    r9,rdi
   140013fb0:	mov    r8,r12
   140013fb3:	mov    rdx,rsi
   140013fb6:	mov    rcx,rbp
   140013fb9:	call   0x140013ece
   140013fbe:	mov    r8d,eax
   140013fc1:	mov    rbx,QWORD PTR [rsp+0x30]
   140013fc6:	mov    rbp,QWORD PTR [rsp+0x38]
   140013fcb:	mov    rsi,QWORD PTR [rsp+0x40]
   140013fd0:	mov    rdi,QWORD PTR [rsp+0x48]
   140013fd5:	mov    eax,r8d
   140013fd8:	add    rsp,0x20
   140013fdc:	pop    r12
   140013fde:	ret    
   140013fdf:	int3   
   140013fe0:	int3   
   140013fe1:	int3   
   140013fe2:	int3   
   140013fe3:	int3   
   140013fe4:	int3   
   140013fe5:	int3   
   140013fe6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013ff0:	cmp    rcx,QWORD PTR [rip+0x15229]        # 0x140029220
   140013ff7:	jne    0x14001400a
   140013ff9:	rol    rcx,0x10
   140013ffd:	test   cx,0xffff
   140014002:	jne    0x140014006
   140014004:	repz ret 
   140014006:	ror    rcx,0x10
   14001400a:	jmp    0x140014508
   14001400f:	int3   
   140014010:	jmp    QWORD PTR [rip+0x7182]        # 0x14001b198
   140014016:	int3   
   140014017:	int3   
   140014018:	rex push rbx
   14001401a:	sub    rsp,0x20
   14001401e:	mov    r11d,DWORD PTR [r8]
   140014021:	mov    rbx,rdx
   140014024:	mov    r9,rcx
   140014027:	and    r11d,0xfffffff8
   14001402b:	test   BYTE PTR [r8],0x4
   14001402f:	mov    r10,rcx
   140014032:	je     0x140014047
   140014034:	mov    eax,DWORD PTR [r8+0x8]
   140014038:	movsxd r10,DWORD PTR [r8+0x4]
   14001403c:	neg    eax
   14001403e:	add    r10,rcx
   140014041:	movsxd rcx,eax
   140014044:	and    r10,rcx
   140014047:	movsxd rax,r11d
   14001404a:	mov    rdx,QWORD PTR [rax+r10*1]
   14001404e:	mov    rax,QWORD PTR [rbx+0x10]
   140014052:	mov    ecx,DWORD PTR [rax+0x8]
   140014055:	add    rcx,QWORD PTR [rbx+0x8]
   140014059:	test   BYTE PTR [rcx+0x3],0xf
   14001405d:	je     0x14001406b
   14001405f:	movzx  eax,BYTE PTR [rcx+0x3]
   140014063:	and    eax,0xfffffff0
   140014066:	cdqe   
   140014068:	add    r9,rax
   14001406b:	xor    r9,rdx
   14001406e:	mov    rcx,r9
   140014071:	add    rsp,0x20
   140014075:	pop    rbx
   140014076:	jmp    0x140013ff0
   14001407b:	int3   
   14001407c:	sub    rsp,0x28
   140014080:	mov    r8,QWORD PTR [r9+0x38]
   140014084:	mov    rcx,rdx
   140014087:	mov    rdx,r9
   14001408a:	call   0x140014018
   14001408f:	mov    eax,0x1
   140014094:	add    rsp,0x28
   140014098:	ret    
   140014099:	int3   
   14001409a:	int3   
   14001409b:	int3   
   14001409c:	rex push rbx
   14001409e:	sub    rsp,0x20
   1400140a2:	mov    rbx,rcx
   1400140a5:	mov    rcx,QWORD PTR [rip+0x35884]        # 0x140049930
   1400140ac:	call   QWORD PTR [rip+0x704e]        # 0x14001b100
   1400140b2:	mov    QWORD PTR [rsp+0x38],rax
   1400140b7:	cmp    rax,0xffffffffffffffff
   1400140bb:	jne    0x1400140c8
   1400140bd:	mov    rcx,rbx
   1400140c0:	call   QWORD PTR [rip+0x7042]        # 0x14001b108
   1400140c6:	jmp    0x140014146
   1400140c8:	mov    ecx,0x8
   1400140cd:	call   0x140014664
   1400140d2:	nop
   1400140d3:	mov    rcx,QWORD PTR [rip+0x35856]        # 0x140049930
   1400140da:	call   QWORD PTR [rip+0x7020]        # 0x14001b100
   1400140e0:	mov    QWORD PTR [rsp+0x38],rax
   1400140e5:	mov    rcx,QWORD PTR [rip+0x3583c]        # 0x140049928
   1400140ec:	call   QWORD PTR [rip+0x700e]        # 0x14001b100
   1400140f2:	mov    QWORD PTR [rsp+0x40],rax
   1400140f7:	mov    rcx,rbx
   1400140fa:	call   QWORD PTR [rip+0x7018]        # 0x14001b118
   140014100:	mov    rcx,rax
   140014103:	lea    r8,[rsp+0x40]
   140014108:	lea    rdx,[rsp+0x38]
   14001410d:	call   0x14001465e
   140014112:	mov    rbx,rax
   140014115:	mov    rcx,QWORD PTR [rsp+0x38]
   14001411a:	call   QWORD PTR [rip+0x6ff8]        # 0x14001b118
   140014120:	mov    QWORD PTR [rip+0x35809],rax        # 0x140049930
   140014127:	mov    rcx,QWORD PTR [rsp+0x40]
   14001412c:	call   QWORD PTR [rip+0x6fe6]        # 0x14001b118
   140014132:	mov    QWORD PTR [rip+0x357ef],rax        # 0x140049928
   140014139:	mov    ecx,0x8
   14001413e:	call   0x140014658
   140014143:	mov    rax,rbx
   140014146:	add    rsp,0x20
   14001414a:	pop    rbx
   14001414b:	ret    
   14001414c:	sub    rsp,0x28
   140014150:	call   0x14001409c
   140014155:	neg    rax
   140014158:	sbb    eax,eax
   14001415a:	neg    eax
   14001415c:	dec    eax
   14001415e:	add    rsp,0x28
   140014162:	ret    
   140014163:	int3   
   140014164:	jmp    QWORD PTR [rip+0x7006]        # 0x14001b170
   14001416a:	jmp    QWORD PTR [rip+0x6ff8]        # 0x14001b168
   140014170:	jmp    QWORD PTR [rip+0x6fea]        # 0x14001b160
   140014176:	int3   
   140014177:	int3   
   140014178:	sub    rsp,0x38
   14001417c:	lea    rcx,[rip+0x585]        # 0x140014708
   140014183:	call   0x14001414c
   140014188:	mov    r11d,DWORD PTR [rip+0x35779]        # 0x140049908
   14001418f:	mov    r9d,DWORD PTR [rip+0x3576e]        # 0x140049904
   140014196:	lea    rax,[rip+0x351e7]        # 0x140049384
   14001419d:	lea    r8,[rip+0x351cc]        # 0x140049370
   1400141a4:	lea    rdx,[rip+0x351cd]        # 0x140049378
   1400141ab:	lea    rcx,[rip+0x351b6]        # 0x140049368
   1400141b2:	mov    DWORD PTR [rip+0x351cb],r11d        # 0x140049384
   1400141b9:	mov    QWORD PTR [rsp+0x20],rax
   1400141be:	call   QWORD PTR [rip+0x6f2c]        # 0x14001b0f0
   1400141c4:	mov    DWORD PTR [rip+0x351b6],eax        # 0x140049380
   1400141ca:	test   eax,eax
   1400141cc:	jns    0x1400141d8
   1400141ce:	mov    ecx,0x8
   1400141d3:	call   0x1400146c8
   1400141d8:	add    rsp,0x38
   1400141dc:	ret    
   1400141dd:	int3   
   1400141de:	int3   
   1400141df:	int3   
   1400141e0:	mov    QWORD PTR [rsp+0x8],rsi
   1400141e5:	push   rdi
   1400141e6:	sub    rsp,0x20
   1400141ea:	mov    rax,QWORD PTR gs:0x30
   1400141f3:	mov    rdi,QWORD PTR [rax+0x8]
   1400141f7:	xor    esi,esi
   1400141f9:	xor    eax,eax
   1400141fb:	lock cmpxchg QWORD PTR [rip+0x35714],rdi        # 0x140049918
   140014204:	je     0x140014221
   140014206:	cmp    rax,rdi
   140014209:	jne    0x140014214
   14001420b:	mov    edi,0x1
   140014210:	mov    esi,edi
   140014212:	jmp    0x140014226
   140014214:	mov    ecx,0x3e8
   140014219:	call   QWORD PTR [rip+0x6e49]        # 0x14001b068
   14001421f:	jmp    0x1400141f9
   140014221:	mov    edi,0x1
   140014226:	mov    eax,DWORD PTR [rip+0x356e8]        # 0x140049914
   14001422c:	cmp    eax,edi
   14001422e:	jne    0x14001423c
   140014230:	mov    ecx,0x1f
   140014235:	call   0x1400146c8
   14001423a:	jmp    0x140014273
   14001423c:	mov    eax,DWORD PTR [rip+0x356d2]        # 0x140049914
   140014242:	test   eax,eax
   140014244:	jne    0x14001426d
   140014246:	mov    DWORD PTR [rip+0x356c8],edi        # 0x140049914
   14001424c:	lea    rdx,[rip+0x75bd]        # 0x14001b810
   140014253:	lea    rcx,[rip+0x759e]        # 0x14001b7f8
   14001425a:	call   0x140014818
   14001425f:	test   eax,eax
   140014261:	je     0x140014273
   140014263:	mov    eax,0xff
   140014268:	jmp    0x140014355
   14001426d:	mov    DWORD PTR [rip+0x35119],edi        # 0x14004938c
   140014273:	mov    eax,DWORD PTR [rip+0x3569b]        # 0x140049914
   140014279:	cmp    eax,edi
   14001427b:	jne    0x14001429a
   14001427d:	lea    rdx,[rip+0x756c]        # 0x14001b7f0
   140014284:	lea    rcx,[rip+0x7525]        # 0x14001b7b0
   14001428b:	call   0x140014812
   140014290:	mov    DWORD PTR [rip+0x3567a],0x2        # 0x140049914
   14001429a:	test   esi,esi
   14001429c:	jne    0x1400142a7
   14001429e:	xor    eax,eax
   1400142a0:	xchg   QWORD PTR [rip+0x35671],rax        # 0x140049918
   1400142a7:	cmp    QWORD PTR [rip+0x35671],0x0        # 0x140049920
   1400142af:	je     0x1400142d0
   1400142b1:	lea    rcx,[rip+0x35668]        # 0x140049920
   1400142b8:	call   0x1400147d0
   1400142bd:	test   eax,eax
   1400142bf:	je     0x1400142d0
   1400142c1:	xor    r8d,r8d
   1400142c4:	lea    edx,[r8+0x2]
   1400142c8:	xor    ecx,ecx
   1400142ca:	call   QWORD PTR [rip+0x35650]        # 0x140049920
   1400142d0:	mov    rcx,QWORD PTR [rip+0x6df1]        # 0x14001b0c8
   1400142d7:	mov    rax,QWORD PTR [rip+0x35092]        # 0x140049370
   1400142de:	mov    QWORD PTR [rcx],rax
   1400142e1:	mov    r8,QWORD PTR [rip+0x35088]        # 0x140049370
   1400142e8:	mov    rdx,QWORD PTR [rip+0x35089]        # 0x140049378
   1400142ef:	mov    ecx,DWORD PTR [rip+0x35073]        # 0x140049368
   1400142f5:	call   0x140005020
   1400142fa:	mov    DWORD PTR [rip+0x35088],eax        # 0x140049388
   140014300:	cmp    DWORD PTR [rip+0x35065],0x0        # 0x14004936c
   140014307:	jne    0x140014311
   140014309:	mov    ecx,eax
   14001430b:	call   QWORD PTR [rip+0x6dbf]        # 0x14001b0d0
   140014311:	cmp    DWORD PTR [rip+0x35074],0x0        # 0x14004938c
   140014318:	jne    0x140014326
   14001431a:	call   QWORD PTR [rip+0x6db8]        # 0x14001b0d8
   140014320:	mov    eax,DWORD PTR [rip+0x35062]        # 0x140049388
   140014326:	jmp    0x140014355
   140014328:	mov    DWORD PTR [rip+0x3505a],eax        # 0x140049388
   14001432e:	cmp    DWORD PTR [rip+0x35037],0x0        # 0x14004936c
   140014335:	jne    0x140014340
   140014337:	mov    ecx,eax
   140014339:	call   QWORD PTR [rip+0x6da1]        # 0x14001b0e0
   14001433f:	int3   
   140014340:	cmp    DWORD PTR [rip+0x35045],0x0        # 0x14004938c
   140014347:	jne    0x140014355
   140014349:	call   QWORD PTR [rip+0x6d89]        # 0x14001b0d8
   14001434f:	mov    eax,DWORD PTR [rip+0x35033]        # 0x140049388
   140014355:	mov    rsi,QWORD PTR [rsp+0x30]
   14001435a:	add    rsp,0x20
   14001435e:	pop    rdi
   14001435f:	ret    
   140014360:	sub    rsp,0x28
   140014364:	mov    eax,0x5a4d
   140014369:	cmp    WORD PTR [rip+0xfffffffffffebc90],ax        # 0x140000000
   140014370:	je     0x140014376
   140014372:	xor    eax,eax
   140014374:	jmp    0x1400143c5
   140014376:	movsxd rcx,DWORD PTR [rip+0xfffffffffffebcbf]        # 0x14000003c
   14001437d:	lea    rax,[rip+0xfffffffffffebc7c]        # 0x140000000
   140014384:	add    rcx,rax
   140014387:	cmp    DWORD PTR [rcx],0x4550
   14001438d:	jne    0x140014372
   14001438f:	movzx  eax,WORD PTR [rcx+0x18]
   140014393:	cmp    eax,0x10b
   140014398:	je     0x1400143b4
   14001439a:	cmp    eax,0x20b
   14001439f:	jne    0x140014372
   1400143a1:	xor    eax,eax
   1400143a3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400143aa:	jbe    0x1400143c5
   1400143ac:	cmp    DWORD PTR [rcx+0xf8],eax
   1400143b2:	jmp    0x1400143c2
   1400143b4:	xor    eax,eax
   1400143b6:	cmp    DWORD PTR [rcx+0x74],0xe
   1400143ba:	jbe    0x1400143c5
   1400143bc:	cmp    DWORD PTR [rcx+0xe8],eax
   1400143c2:	setne  al
   1400143c5:	mov    ecx,0x1
   1400143ca:	mov    DWORD PTR [rip+0x34f9c],eax        # 0x14004936c
   1400143d0:	call   QWORD PTR [rip+0x6cba]        # 0x14001b090
   1400143d6:	or     rcx,0xffffffffffffffff
   1400143da:	call   QWORD PTR [rip+0x6d38]        # 0x14001b118
   1400143e0:	mov    rcx,QWORD PTR [rip+0x6cb1]        # 0x14001b098
   1400143e7:	mov    QWORD PTR [rip+0x3553a],rax        # 0x140049928
   1400143ee:	mov    QWORD PTR [rip+0x3553b],rax        # 0x140049930
   1400143f5:	mov    eax,DWORD PTR [rip+0x35515]        # 0x140049910
   1400143fb:	mov    DWORD PTR [rcx],eax
   1400143fd:	mov    rdx,QWORD PTR [rip+0x6c9c]        # 0x14001b0a0
   140014404:	mov    eax,DWORD PTR [rip+0x35502]        # 0x14004990c
   14001440a:	mov    DWORD PTR [rdx],eax
   14001440c:	call   0x1400146d0
   140014411:	call   0x140014820
   140014416:	cmp    DWORD PTR [rip+0x14e1f],0x0        # 0x14002923c
   14001441d:	jne    0x14001442c
   14001441f:	lea    rcx,[rip+0x3fa]        # 0x140014820
   140014426:	call   QWORD PTR [rip+0x6c7c]        # 0x14001b0a8
   14001442c:	cmp    DWORD PTR [rip+0x14e05],0xffffffff        # 0x140029238
   140014433:	jne    0x14001443e
   140014435:	or     ecx,0xffffffff
   140014438:	call   QWORD PTR [rip+0x6c72]        # 0x14001b0b0
   14001443e:	xor    eax,eax
   140014440:	add    rsp,0x28
   140014444:	ret    
   140014445:	int3   
   140014446:	int3   
   140014447:	int3   
   140014448:	sub    rsp,0x28
   14001444c:	call   0x140014824
   140014451:	add    rsp,0x28
   140014455:	jmp    0x1400141e0
   14001445a:	int3   
   14001445b:	int3   
   14001445c:	mov    QWORD PTR [rsp+0x10],rbx
   140014461:	mov    DWORD PTR [rsp+0x18],r8d
   140014466:	mov    QWORD PTR [rsp+0x8],rcx
   14001446b:	push   rsi
   14001446c:	push   rdi
   14001446d:	push   r12
   14001446f:	sub    rsp,0x40
   140014473:	mov    rsi,r9
   140014476:	mov    edi,r8d
   140014479:	mov    r12,rdx
   14001447c:	mov    rbx,rcx
   14001447f:	sub    edi,0x1
   140014482:	mov    DWORD PTR [rsp+0x70],edi
   140014486:	js     0x140014497
   140014488:	sub    rbx,r12
   14001448b:	mov    QWORD PTR [rsp+0x60],rbx
   140014490:	mov    rcx,rbx
   140014493:	call   rsi
   140014495:	jmp    0x14001447f
   140014497:	jmp    0x140014499
   140014499:	mov    rbx,QWORD PTR [rsp+0x68]
   14001449e:	add    rsp,0x40
   1400144a2:	pop    r12
   1400144a4:	pop    rdi
   1400144a5:	pop    rsi
   1400144a6:	ret    
   1400144a7:	int3   
   1400144a8:	mov    rax,rsp
   1400144ab:	mov    QWORD PTR [rax+0x20],r9
   1400144af:	mov    DWORD PTR [rax+0x18],r8d
   1400144b3:	mov    QWORD PTR [rax+0x10],rdx
   1400144b7:	push   rbx
   1400144b8:	push   rsi
   1400144b9:	push   rdi
   1400144ba:	push   r12
   1400144bc:	sub    rsp,0x38
   1400144c0:	mov    r12,r9
   1400144c3:	movsxd rdi,r8d
   1400144c6:	mov    rsi,rdx
   1400144c9:	and    DWORD PTR [rax-0x38],0x0
   1400144cd:	mov    rbx,rdi
   1400144d0:	imul   rbx,rdx
   1400144d4:	add    rbx,rcx
   1400144d7:	mov    QWORD PTR [rax+0x8],rbx
   1400144db:	sub    edi,0x1
   1400144de:	mov    DWORD PTR [rsp+0x70],edi
   1400144e2:	js     0x1400144f4
   1400144e4:	sub    rbx,rsi
   1400144e7:	mov    QWORD PTR [rsp+0x60],rbx
   1400144ec:	mov    rcx,rbx
   1400144ef:	call   r12
   1400144f2:	jmp    0x1400144db
   1400144f4:	mov    DWORD PTR [rsp+0x20],0x1
   1400144fc:	add    rsp,0x38
   140014500:	pop    r12
   140014502:	pop    rdi
   140014503:	pop    rsi
   140014504:	pop    rbx
   140014505:	ret    
   140014506:	int3   
   140014507:	int3   
   140014508:	mov    QWORD PTR [rsp+0x8],rcx
   14001450d:	sub    rsp,0x88
   140014514:	lea    rcx,[rip+0x34f15]        # 0x140049430
   14001451b:	call   QWORD PTR [rip+0x6b07]        # 0x14001b028
   140014521:	mov    r11,QWORD PTR [rip+0x35000]        # 0x140049528
   140014528:	mov    QWORD PTR [rsp+0x58],r11
   14001452d:	xor    r8d,r8d
   140014530:	lea    rdx,[rsp+0x60]
   140014535:	mov    rcx,QWORD PTR [rsp+0x58]
   14001453a:	call   0x1400148f0
   14001453f:	mov    QWORD PTR [rsp+0x50],rax
   140014544:	cmp    QWORD PTR [rsp+0x50],0x0
   14001454a:	je     0x14001458d
   14001454c:	mov    QWORD PTR [rsp+0x38],0x0
   140014555:	lea    rax,[rsp+0x48]
   14001455a:	mov    QWORD PTR [rsp+0x30],rax
   14001455f:	lea    rax,[rsp+0x40]
   140014564:	mov    QWORD PTR [rsp+0x28],rax
   140014569:	lea    rax,[rip+0x34ec0]        # 0x140049430
   140014570:	mov    QWORD PTR [rsp+0x20],rax
   140014575:	mov    r9,QWORD PTR [rsp+0x50]
   14001457a:	mov    r8,QWORD PTR [rsp+0x58]
   14001457f:	mov    rdx,QWORD PTR [rsp+0x60]
   140014584:	xor    ecx,ecx
   140014586:	call   0x1400148ea
   14001458b:	jmp    0x1400145af
   14001458d:	mov    rax,QWORD PTR [rsp+0x88]
   140014595:	mov    QWORD PTR [rip+0x34f8c],rax        # 0x140049528
   14001459c:	lea    rax,[rsp+0x88]
   1400145a4:	add    rax,0x8
   1400145a8:	mov    QWORD PTR [rip+0x34f19],rax        # 0x1400494c8
   1400145af:	mov    rax,QWORD PTR [rip+0x34f72]        # 0x140049528
   1400145b6:	mov    QWORD PTR [rip+0x34de3],rax        # 0x1400493a0
   1400145bd:	mov    rax,QWORD PTR [rsp+0x90]
   1400145c5:	mov    QWORD PTR [rip+0x34ee4],rax        # 0x1400494b0
   1400145cc:	mov    DWORD PTR [rip+0x34dba],0xc0000409        # 0x140049390
   1400145d6:	mov    DWORD PTR [rip+0x34db4],0x1        # 0x140049394
   1400145e0:	mov    rax,QWORD PTR [rip+0x14c39]        # 0x140029220
   1400145e7:	mov    QWORD PTR [rsp+0x68],rax
   1400145ec:	mov    rax,QWORD PTR [rip+0x14c35]        # 0x140029228
   1400145f3:	mov    QWORD PTR [rsp+0x70],rax
   1400145f8:	call   QWORD PTR [rip+0x6a42]        # 0x14001b040
   1400145fe:	mov    DWORD PTR [rip+0x34e24],eax        # 0x140049428
   140014604:	mov    ecx,0x1
   140014609:	call   0x1400148e4
   14001460e:	xor    ecx,ecx
   140014610:	call   QWORD PTR [rip+0x6a32]        # 0x14001b048
   140014616:	lea    rcx,[rip+0xc61b]        # 0x140020c38
   14001461d:	call   QWORD PTR [rip+0x6a2d]        # 0x14001b050
   140014623:	cmp    DWORD PTR [rip+0x34dfe],0x0        # 0x140049428
   14001462a:	jne    0x140014636
   14001462c:	mov    ecx,0x1
   140014631:	call   0x1400148e4
   140014636:	call   QWORD PTR [rip+0x6a1c]        # 0x14001b058
   14001463c:	mov    edx,0xc0000409
   140014641:	mov    rcx,rax
   140014644:	call   QWORD PTR [rip+0x6a16]        # 0x14001b060
   14001464a:	add    rsp,0x88
   140014651:	ret    
   140014652:	jmp    QWORD PTR [rip+0x6ad8]        # 0x14001b130
   140014658:	jmp    QWORD PTR [rip+0x6aca]        # 0x14001b128
   14001465e:	jmp    QWORD PTR [rip+0x6abc]        # 0x14001b120
   140014664:	jmp    QWORD PTR [rip+0x6aa6]        # 0x14001b110
   14001466a:	int3   
   14001466b:	int3   
   14001466c:	sub    rsp,0x28
   140014670:	mov    rax,QWORD PTR [rcx]
   140014673:	cmp    DWORD PTR [rax],0xe06d7363
   140014679:	jne    0x1400146a6
   14001467b:	cmp    DWORD PTR [rax+0x18],0x4
   14001467f:	jne    0x1400146a6
   140014681:	mov    eax,DWORD PTR [rax+0x20]
   140014684:	cmp    eax,0x19930520
   140014689:	je     0x1400146a0
   14001468b:	cmp    eax,0x19930521
   140014690:	je     0x1400146a0
   140014692:	cmp    eax,0x19930522
   140014697:	je     0x1400146a0
   140014699:	cmp    eax,0x1994000
   14001469e:	jne    0x1400146a6
   1400146a0:	call   0x1400148d8
   1400146a5:	int3   
   1400146a6:	xor    eax,eax
   1400146a8:	add    rsp,0x28
   1400146ac:	ret    
   1400146ad:	int3   
   1400146ae:	int3   
   1400146af:	int3   
   1400146b0:	sub    rsp,0x28
   1400146b4:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x14001466c
   1400146bb:	call   QWORD PTR [rip+0x6987]        # 0x14001b048
   1400146c1:	xor    eax,eax
   1400146c3:	add    rsp,0x28
   1400146c7:	ret    
   1400146c8:	jmp    QWORD PTR [rip+0x6a2a]        # 0x14001b0f8
   1400146ce:	int3   
   1400146cf:	int3   
   1400146d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400146d5:	push   rdi
   1400146d6:	sub    rsp,0x20
   1400146da:	lea    rbx,[rip+0xcc07]        # 0x1400212e8
   1400146e1:	lea    rdi,[rip+0xcc00]        # 0x1400212e8
   1400146e8:	jmp    0x1400146f8
   1400146ea:	mov    rax,QWORD PTR [rbx]
   1400146ed:	test   rax,rax
   1400146f0:	je     0x1400146f4
   1400146f2:	call   rax
   1400146f4:	add    rbx,0x8
   1400146f8:	cmp    rbx,rdi
   1400146fb:	jb     0x1400146ea
   1400146fd:	mov    rbx,QWORD PTR [rsp+0x30]
   140014702:	add    rsp,0x20
   140014706:	pop    rdi
   140014707:	ret    
   140014708:	mov    QWORD PTR [rsp+0x8],rbx
   14001470d:	push   rdi
   14001470e:	sub    rsp,0x20
   140014712:	lea    rbx,[rip+0xcbdf]        # 0x1400212f8
   140014719:	lea    rdi,[rip+0xcbd8]        # 0x1400212f8
   140014720:	jmp    0x140014730
   140014722:	mov    rax,QWORD PTR [rbx]
   140014725:	test   rax,rax
   140014728:	je     0x14001472c
   14001472a:	call   rax
   14001472c:	add    rbx,0x8
   140014730:	cmp    rbx,rdi
   140014733:	jb     0x140014722
   140014735:	mov    rbx,QWORD PTR [rsp+0x30]
   14001473a:	add    rsp,0x20
   14001473e:	pop    rdi
   14001473f:	ret    
   140014740:	jmp    QWORD PTR [rip+0x69a2]        # 0x14001b0e8
   140014746:	int3   
   140014747:	int3   
   140014748:	int3   
   140014749:	int3   
   14001474a:	int3   
   14001474b:	int3   
   14001474c:	int3   
   14001474d:	int3   
   14001474e:	int3   
   14001474f:	int3   
   140014750:	mov    rax,rcx
   140014753:	mov    ecx,0x5a4d
   140014758:	cmp    WORD PTR [rax],cx
   14001475b:	je     0x140014760
   14001475d:	xor    eax,eax
   14001475f:	ret    
   140014760:	movsxd rcx,DWORD PTR [rax+0x3c]
   140014764:	add    rcx,rax
   140014767:	xor    eax,eax
   140014769:	cmp    DWORD PTR [rcx],0x4550
   14001476f:	jne    0x14001477d
   140014771:	mov    edx,0x20b
   140014776:	cmp    WORD PTR [rcx+0x18],dx
   14001477a:	sete   al
   14001477d:	repz ret 
   14001477f:	int3   
   140014780:	movsxd r8,DWORD PTR [rcx+0x3c]
   140014784:	xor    r9d,r9d
   140014787:	mov    r10,rdx
   14001478a:	add    r8,rcx
   14001478d:	movzx  eax,WORD PTR [r8+0x14]
   140014792:	movzx  r11d,WORD PTR [r8+0x6]
   140014797:	lea    rcx,[rax+r8*1+0x18]
   14001479c:	test   r11d,r11d
   14001479f:	je     0x1400147bf
   1400147a1:	mov    edx,DWORD PTR [rcx+0xc]
   1400147a4:	cmp    r10,rdx
   1400147a7:	jb     0x1400147b3
   1400147a9:	mov    eax,DWORD PTR [rcx+0x8]
   1400147ac:	add    eax,edx
   1400147ae:	cmp    r10,rax
   1400147b1:	jb     0x1400147c2
   1400147b3:	inc    r9d
   1400147b6:	add    rcx,0x28
   1400147ba:	cmp    r9d,r11d
   1400147bd:	jb     0x1400147a1
   1400147bf:	xor    eax,eax
   1400147c1:	ret    
   1400147c2:	mov    rax,rcx
   1400147c5:	ret    
   1400147c6:	int3   
   1400147c7:	int3   
   1400147c8:	int3   
   1400147c9:	int3   
   1400147ca:	int3   
   1400147cb:	int3   
   1400147cc:	int3   
   1400147cd:	int3   
   1400147ce:	int3   
   1400147cf:	int3   
   1400147d0:	sub    rsp,0x28
   1400147d4:	mov    r8,rcx
   1400147d7:	lea    r9,[rip+0xfffffffffffeb822]        # 0x140000000
   1400147de:	mov    rcx,r9
   1400147e1:	call   0x140014750
   1400147e6:	test   eax,eax
   1400147e8:	je     0x14001480c
   1400147ea:	sub    r8,r9
   1400147ed:	mov    rdx,r8
   1400147f0:	mov    rcx,r9
   1400147f3:	call   0x140014780
   1400147f8:	test   rax,rax
   1400147fb:	je     0x14001480c
   1400147fd:	mov    eax,DWORD PTR [rax+0x24]
   140014800:	shr    eax,0x1f
   140014803:	not    eax
   140014805:	and    eax,0x1
   140014808:	jmp    0x14001480c
   14001480a:	xor    eax,eax
   14001480c:	add    rsp,0x28
   140014810:	ret    
   140014811:	int3   
   140014812:	jmp    QWORD PTR [rip+0x68a8]        # 0x14001b0c0
   140014818:	jmp    QWORD PTR [rip+0x689a]        # 0x14001b0b8
   14001481e:	int3   
   14001481f:	int3   
   140014820:	xor    eax,eax
   140014822:	ret    
   140014823:	int3   
   140014824:	mov    QWORD PTR [rsp+0x18],rbx
   140014829:	push   rdi
   14001482a:	sub    rsp,0x20
   14001482e:	mov    rax,QWORD PTR [rip+0x149eb]        # 0x140029220
   140014835:	and    QWORD PTR [rsp+0x30],0x0
   14001483b:	movabs rdi,0x2b992ddfa232
   140014845:	cmp    rax,rdi
   140014848:	je     0x140014856
   14001484a:	not    rax
   14001484d:	mov    QWORD PTR [rip+0x149d4],rax        # 0x140029228
   140014854:	jmp    0x1400148cc
   140014856:	lea    rcx,[rsp+0x30]
   14001485b:	call   QWORD PTR [rip+0x679f]        # 0x14001b000
   140014861:	mov    rbx,QWORD PTR [rsp+0x30]
   140014866:	call   QWORD PTR [rip+0x679c]        # 0x14001b008
   14001486c:	mov    r11d,eax
   14001486f:	xor    rbx,r11
   140014872:	call   QWORD PTR [rip+0x6798]        # 0x14001b010
   140014878:	mov    r11d,eax
   14001487b:	xor    rbx,r11
   14001487e:	call   QWORD PTR [rip+0x6794]        # 0x14001b018
   140014884:	lea    rcx,[rsp+0x38]
   140014889:	mov    r11d,eax
   14001488c:	xor    rbx,r11
   14001488f:	call   QWORD PTR [rip+0x678b]        # 0x14001b020
   140014895:	mov    r11,QWORD PTR [rsp+0x38]
   14001489a:	xor    r11,rbx
   14001489d:	movabs rax,0xffffffffffff
   1400148a7:	and    r11,rax
   1400148aa:	movabs rax,0x2b992ddfa233
   1400148b4:	cmp    r11,rdi
   1400148b7:	cmove  r11,rax
   1400148bb:	mov    QWORD PTR [rip+0x1495e],r11        # 0x140029220
   1400148c2:	not    r11
   1400148c5:	mov    QWORD PTR [rip+0x1495c],r11        # 0x140029228
   1400148cc:	mov    rbx,QWORD PTR [rsp+0x40]
   1400148d1:	add    rsp,0x20
   1400148d5:	pop    rdi
   1400148d6:	ret    
   1400148d7:	int3   
   1400148d8:	jmp    QWORD PTR [rip+0x67aa]        # 0x14001b088
   1400148de:	jmp    QWORD PTR [rip+0x679c]        # 0x14001b080
   1400148e4:	jmp    QWORD PTR [rip+0x678e]        # 0x14001b078
   1400148ea:	jmp    QWORD PTR [rip+0x6748]        # 0x14001b038
   1400148f0:	jmp    QWORD PTR [rip+0x673a]        # 0x14001b030
   1400148f6:	int3   
   1400148f7:	int3   
   1400148f8:	int3   
   1400148f9:	int3   
   1400148fa:	int3   
   1400148fb:	int3   
   1400148fc:	int3   
   1400148fd:	int3   
   1400148fe:	int3   
   1400148ff:	int3   
   140014900:	rex push rbp
   140014902:	sub    rsp,0x20
   140014906:	mov    rbp,rdx
   140014909:	mov    rcx,QWORD PTR [rbp+0x40]
   14001490d:	call   QWORD PTR [rip+0x6e8d]        # 0x14001b7a0
   140014913:	add    rsp,0x20
   140014917:	pop    rbp
   140014918:	ret    
   140014919:	int3   
   14001491a:	int3   
   14001491b:	int3   
   14001491c:	int3   
   14001491d:	int3   
   14001491e:	int3   
   14001491f:	int3   
   140014920:	rex push rbp
   140014922:	sub    rsp,0x20
   140014926:	mov    rbp,rdx
   140014929:	mov    rcx,QWORD PTR [rbp+0x40]
   14001492d:	add    rcx,0x48
   140014931:	call   QWORD PTR [rip+0x6ce9]        # 0x14001b620
   140014937:	add    rsp,0x20
   14001493b:	pop    rbp
   14001493c:	ret    
   14001493d:	int3   
   14001493e:	int3   
   14001493f:	int3   
   140014940:	rex push rbp
   140014942:	sub    rsp,0x20
   140014946:	mov    rbp,rdx
   140014949:	mov    rcx,QWORD PTR [rbp+0x40]
   14001494d:	add    rcx,0x50
   140014951:	call   QWORD PTR [rip+0x6cd1]        # 0x14001b628
   140014957:	add    rsp,0x20
   14001495b:	pop    rbp
   14001495c:	ret    
   14001495d:	int3   
   14001495e:	int3   
   14001495f:	int3   
   140014960:	rex push rbp
   140014962:	sub    rsp,0x20
   140014966:	mov    rbp,rdx
   140014969:	mov    rcx,QWORD PTR [rbp+0x40]
   14001496d:	add    rcx,0x58
   140014971:	call   QWORD PTR [rip+0x6cb1]        # 0x14001b628
   140014977:	add    rsp,0x20
   14001497b:	pop    rbp
   14001497c:	ret    
   14001497d:	int3   
   14001497e:	int3   
   14001497f:	int3   
   140014980:	rex push rbp
   140014982:	sub    rsp,0x20
   140014986:	mov    rbp,rdx
   140014989:	lea    rcx,[rbp+0x60]
   14001498d:	call   QWORD PTR [rip+0x6c95]        # 0x14001b628
   140014993:	add    rsp,0x20
   140014997:	pop    rbp
   140014998:	ret    
   140014999:	int3   
   14001499a:	int3   
   14001499b:	int3   
   14001499c:	int3   
   14001499d:	int3   
   14001499e:	int3   
   14001499f:	int3   
   1400149a0:	rex push rbp
   1400149a2:	sub    rsp,0x20
   1400149a6:	mov    rbp,rdx
   1400149a9:	lea    rcx,[rbp+0x30]
   1400149ad:	call   QWORD PTR [rip+0x6c75]        # 0x14001b628
   1400149b3:	add    rsp,0x20
   1400149b7:	pop    rbp
   1400149b8:	ret    
   1400149b9:	int3   
   1400149ba:	int3   
   1400149bb:	int3   
   1400149bc:	int3   
   1400149bd:	int3   
   1400149be:	int3   
   1400149bf:	int3   
   1400149c0:	rex push rbp
   1400149c2:	sub    rsp,0x20
   1400149c6:	mov    rbp,rdx
   1400149c9:	lea    rcx,[rbp+0x68]
   1400149cd:	call   QWORD PTR [rip+0x6c4d]        # 0x14001b620
   1400149d3:	add    rsp,0x20
   1400149d7:	pop    rbp
   1400149d8:	ret    
   1400149d9:	int3   
   1400149da:	int3   
   1400149db:	int3   
   1400149dc:	int3   
   1400149dd:	int3   
   1400149de:	int3   
   1400149df:	int3   
   1400149e0:	rex push rbp
   1400149e2:	sub    rsp,0x20
   1400149e6:	mov    rbp,rdx
   1400149e9:	lea    rcx,[rbp+0x68]
   1400149ed:	call   QWORD PTR [rip+0x6c2d]        # 0x14001b620
   1400149f3:	add    rsp,0x20
   1400149f7:	pop    rbp
   1400149f8:	ret    
   1400149f9:	int3   
   1400149fa:	int3   
   1400149fb:	int3   
   1400149fc:	int3   
   1400149fd:	int3   
   1400149fe:	int3   
   1400149ff:	int3   
   140014a00:	mov    QWORD PTR [rsp+0x10],rdx
   140014a05:	push   rbp
   140014a06:	sub    rsp,0x30
   140014a0a:	mov    rbp,rdx
   140014a0d:	mov    rcx,QWORD PTR [rbp+0x30]
   140014a11:	add    rcx,0x18
   140014a15:	call   QWORD PTR [rip+0x6c05]        # 0x14001b620
   140014a1b:	xor    edx,edx
   140014a1d:	xor    ecx,ecx
   140014a1f:	call   0x140013f4a
   140014a24:	nop
   140014a25:	add    rsp,0x30
   140014a29:	pop    rbp
   140014a2a:	ret    
   140014a2b:	int3   
   140014a2c:	int3   
   140014a2d:	int3   
   140014a2e:	int3   
   140014a2f:	int3   
   140014a30:	mov    QWORD PTR [rsp+0x10],rdx
   140014a35:	push   rbp
   140014a36:	sub    rsp,0x30
   140014a3a:	mov    rbp,rdx
   140014a3d:	mov    rdx,QWORD PTR [rbp+0x30]
   140014a41:	mov    rcx,QWORD PTR [rbp+0x50]
   140014a45:	call   QWORD PTR [rip+0x6b6d]        # 0x14001b5b8
   140014a4b:	xor    edx,edx
   140014a4d:	xor    ecx,ecx
   140014a4f:	call   0x140013f4a
   140014a54:	nop
   140014a55:	add    rsp,0x30
   140014a59:	pop    rbp
   140014a5a:	ret    
   140014a5b:	int3   
   140014a5c:	int3   
   140014a5d:	int3   
   140014a5e:	int3   
   140014a5f:	int3   
   140014a60:	rex push rbp
   140014a62:	sub    rsp,0x20
   140014a66:	mov    rbp,rdx
   140014a69:	lea    rcx,[rbp+0x60]
   140014a6d:	call   QWORD PTR [rip+0x6bad]        # 0x14001b620
   140014a73:	add    rsp,0x20
   140014a77:	pop    rbp
   140014a78:	ret    
   140014a79:	int3   
   140014a7a:	int3   
   140014a7b:	int3   
   140014a7c:	int3   
   140014a7d:	int3   
   140014a7e:	int3   
   140014a7f:	int3   
   140014a80:	rex push rbp
   140014a82:	sub    rsp,0x20
   140014a86:	mov    rbp,rdx
   140014a89:	lea    rcx,[rbp+0x48]
   140014a8d:	call   QWORD PTR [rip+0x6b8d]        # 0x14001b620
   140014a93:	add    rsp,0x20
   140014a97:	pop    rbp
   140014a98:	ret    
   140014a99:	int3   
   140014a9a:	int3   
   140014a9b:	int3   
   140014a9c:	int3   
   140014a9d:	int3   
   140014a9e:	int3   
   140014a9f:	int3   
   140014aa0:	rex push rbp
   140014aa2:	sub    rsp,0x20
   140014aa6:	mov    rbp,rdx
   140014aa9:	lea    rcx,[rbp+0x68]
   140014aad:	call   QWORD PTR [rip+0x6b6d]        # 0x14001b620
   140014ab3:	add    rsp,0x20
   140014ab7:	pop    rbp
   140014ab8:	ret    
   140014ab9:	int3   
   140014aba:	int3   
   140014abb:	int3   
   140014abc:	int3   
   140014abd:	int3   
   140014abe:	int3   
   140014abf:	int3   
   140014ac0:	rex push rbp
   140014ac2:	sub    rsp,0x20
   140014ac6:	mov    rbp,rdx
   140014ac9:	lea    rcx,[rbp+0x58]
   140014acd:	call   QWORD PTR [rip+0x6b55]        # 0x14001b628
   140014ad3:	add    rsp,0x20
   140014ad7:	pop    rbp
   140014ad8:	ret    
   140014ad9:	int3   
   140014ada:	int3   
   140014adb:	int3   
   140014adc:	int3   
   140014add:	int3   
   140014ade:	int3   
   140014adf:	int3   
   140014ae0:	rex push rbp
   140014ae2:	sub    rsp,0x20
   140014ae6:	mov    rbp,rdx
   140014ae9:	lea    rcx,[rbp+0x40]
   140014aed:	call   QWORD PTR [rip+0x6b2d]        # 0x14001b620
   140014af3:	add    rsp,0x20
   140014af7:	pop    rbp
   140014af8:	ret    
   140014af9:	int3   
   140014afa:	int3   
   140014afb:	int3   
   140014afc:	int3   
   140014afd:	int3   
   140014afe:	int3   
   140014aff:	int3   
   140014b00:	rex push rbp
   140014b02:	sub    rsp,0x20
   140014b06:	mov    rbp,rdx
   140014b09:	lea    rcx,[rbp+0x80]
   140014b10:	call   QWORD PTR [rip+0x6b0a]        # 0x14001b620
   140014b16:	add    rsp,0x20
   140014b1a:	pop    rbp
   140014b1b:	ret    
   140014b1c:	int3   
   140014b1d:	int3   
   140014b1e:	int3   
   140014b1f:	int3   
   140014b20:	rex push rbp
   140014b22:	sub    rsp,0x20
   140014b26:	mov    rbp,rdx
   140014b29:	lea    rcx,[rbp+0x70]
   140014b2d:	call   QWORD PTR [rip+0x6aed]        # 0x14001b620
   140014b33:	add    rsp,0x20
   140014b37:	pop    rbp
   140014b38:	ret    
   140014b39:	int3   
   140014b3a:	int3   
   140014b3b:	int3   
   140014b3c:	int3   
   140014b3d:	int3   
   140014b3e:	int3   
   140014b3f:	int3   
   140014b40:	rex push rbp
   140014b42:	sub    rsp,0x20
   140014b46:	mov    rbp,rdx
   140014b49:	lea    rcx,[rbp+0x38]
   140014b4d:	call   QWORD PTR [rip+0x6acd]        # 0x14001b620
   140014b53:	add    rsp,0x20
   140014b57:	pop    rbp
   140014b58:	ret    
   140014b59:	int3   
   140014b5a:	int3   
   140014b5b:	int3   
   140014b5c:	int3   
   140014b5d:	int3   
   140014b5e:	int3   
   140014b5f:	int3   
   140014b60:	rex push rbp
   140014b62:	sub    rsp,0x20
   140014b66:	mov    rbp,rdx
   140014b69:	mov    rcx,QWORD PTR [rbp+0x40]
   140014b6d:	call   QWORD PTR [rip+0x6c2d]        # 0x14001b7a0
   140014b73:	add    rsp,0x20
   140014b77:	pop    rbp
   140014b78:	ret    
   140014b79:	int3   
   140014b7a:	int3   
   140014b7b:	int3   
   140014b7c:	int3   
   140014b7d:	int3   
   140014b7e:	int3   
   140014b7f:	int3   
   140014b80:	rex push rbp
   140014b82:	sub    rsp,0x20
   140014b86:	mov    rbp,rdx
   140014b89:	mov    rcx,QWORD PTR [rbp+0x40]
   140014b8d:	add    rcx,0x48
   140014b91:	call   QWORD PTR [rip+0x6a89]        # 0x14001b620
   140014b97:	add    rsp,0x20
   140014b9b:	pop    rbp
   140014b9c:	ret    
   140014b9d:	int3   
   140014b9e:	int3   
   140014b9f:	int3   
   140014ba0:	rex push rbp
   140014ba2:	sub    rsp,0x20
   140014ba6:	mov    rbp,rdx
   140014ba9:	mov    rcx,QWORD PTR [rbp+0x40]
   140014bad:	add    rcx,0x50
   140014bb1:	call   QWORD PTR [rip+0x6a71]        # 0x14001b628
   140014bb7:	add    rsp,0x20
   140014bbb:	pop    rbp
   140014bbc:	ret    
   140014bbd:	int3   
   140014bbe:	int3   
   140014bbf:	int3   
   140014bc0:	rex push rbp
   140014bc2:	sub    rsp,0x20
   140014bc6:	mov    rbp,rdx
   140014bc9:	mov    rcx,QWORD PTR [rbp+0x40]
   140014bcd:	add    rcx,0x58
   140014bd1:	call   QWORD PTR [rip+0x6a51]        # 0x14001b628
   140014bd7:	add    rsp,0x20
   140014bdb:	pop    rbp
   140014bdc:	ret    
   140014bdd:	int3   
   140014bde:	int3   
   140014bdf:	int3   
   140014be0:	rex push rbp
   140014be2:	sub    rsp,0x20
   140014be6:	mov    rbp,rdx
   140014be9:	mov    rcx,QWORD PTR [rbp+0x40]
   140014bed:	add    rcx,0x60
   140014bf1:	call   QWORD PTR [rip+0x6a31]        # 0x14001b628
   140014bf7:	add    rsp,0x20
   140014bfb:	pop    rbp
   140014bfc:	ret    
   140014bfd:	int3   
   140014bfe:	int3   
   140014bff:	int3   
   140014c00:	rex push rbp
   140014c02:	sub    rsp,0x20
   140014c06:	mov    rbp,rdx
   140014c09:	lea    rcx,[rbp+0x48]
   140014c0d:	call   QWORD PTR [rip+0x6a15]        # 0x14001b628
   140014c13:	add    rsp,0x20
   140014c17:	pop    rbp
   140014c18:	ret    
   140014c19:	int3   
   140014c1a:	int3   
   140014c1b:	int3   
   140014c1c:	int3   
   140014c1d:	int3   
   140014c1e:	int3   
   140014c1f:	int3   
   140014c20:	rex push rbp
   140014c22:	sub    rsp,0x20
   140014c26:	mov    rbp,rdx
   140014c29:	lea    rcx,[rbp+0x38]
   140014c2d:	call   QWORD PTR [rip+0x6645]        # 0x14001b278
   140014c33:	add    rsp,0x20
   140014c37:	pop    rbp
   140014c38:	ret    
   140014c39:	int3   
   140014c3a:	int3   
   140014c3b:	int3   
   140014c3c:	int3   
   140014c3d:	int3   
   140014c3e:	int3   
   140014c3f:	int3   
   140014c40:	rex push rbp
   140014c42:	sub    rsp,0x20
   140014c46:	mov    rbp,rdx
   140014c49:	lea    rcx,[rbp+0x50]
   140014c4d:	call   QWORD PTR [rip+0x6a6d]        # 0x14001b6c0
   140014c53:	add    rsp,0x20
   140014c57:	pop    rbp
   140014c58:	ret    
   140014c59:	int3   
   140014c5a:	int3   
   140014c5b:	int3   
   140014c5c:	int3   
   140014c5d:	int3   
   140014c5e:	int3   
   140014c5f:	int3   
   140014c60:	rex push rbp
   140014c62:	sub    rsp,0x20
   140014c66:	mov    rbp,rdx
   140014c69:	lea    rcx,[rbp+0x28]
   140014c6d:	call   QWORD PTR [rip+0x6a45]        # 0x14001b6b8
   140014c73:	add    rsp,0x20
   140014c77:	pop    rbp
   140014c78:	ret    
   140014c79:	int3   
   140014c7a:	int3   
   140014c7b:	int3   
   140014c7c:	int3   
   140014c7d:	int3   
   140014c7e:	int3   
   140014c7f:	int3   
   140014c80:	rex push rbp
   140014c82:	sub    rsp,0x20
   140014c86:	mov    rbp,rdx
   140014c89:	lea    rcx,[rbp+0x20]
   140014c8d:	call   QWORD PTR [rip+0x6995]        # 0x14001b628
   140014c93:	add    rsp,0x20
   140014c97:	pop    rbp
   140014c98:	ret    
   140014c99:	int3   
   140014c9a:	int3   
   140014c9b:	int3   
   140014c9c:	int3   
   140014c9d:	int3   
   140014c9e:	int3   
   140014c9f:	int3   
   140014ca0:	rex push rbp
   140014ca2:	sub    rsp,0x20
   140014ca6:	mov    rbp,rdx
   140014ca9:	lea    rcx,[rbp+0x20]
   140014cad:	call   QWORD PTR [rip+0x6975]        # 0x14001b628
   140014cb3:	add    rsp,0x20
   140014cb7:	pop    rbp
   140014cb8:	ret    
   140014cb9:	int3   
   140014cba:	int3   
   140014cbb:	int3   
   140014cbc:	int3   
   140014cbd:	int3   
   140014cbe:	int3   
   140014cbf:	int3   
   140014cc0:	rex push rbp
   140014cc2:	sub    rsp,0x20
   140014cc6:	mov    rbp,rdx
   140014cc9:	lea    rcx,[rbp+0x20]
   140014ccd:	call   QWORD PTR [rip+0x6955]        # 0x14001b628
   140014cd3:	add    rsp,0x20
   140014cd7:	pop    rbp
   140014cd8:	ret    
   140014cd9:	int3   
   140014cda:	int3   
   140014cdb:	int3   
   140014cdc:	int3   
   140014cdd:	int3   
   140014cde:	int3   
   140014cdf:	int3   
   140014ce0:	rex push rbp
   140014ce2:	sub    rsp,0x20
   140014ce6:	mov    rbp,rdx
   140014ce9:	mov    rcx,QWORD PTR [rbp+0x20]
   140014ced:	call   0x140013f3e
   140014cf2:	add    rsp,0x20
   140014cf6:	pop    rbp
   140014cf7:	ret    
   140014cf8:	int3   
   140014cf9:	int3   
   140014cfa:	int3   
   140014cfb:	int3   
   140014cfc:	int3   
   140014cfd:	int3   
   140014cfe:	int3   
   140014cff:	int3   
   140014d00:	rex push rbp
   140014d02:	sub    rsp,0x20
   140014d06:	mov    rbp,rdx
   140014d09:	lea    rcx,[rbp+0x48]
   140014d0d:	call   0x140002760
   140014d12:	add    rsp,0x20
   140014d16:	pop    rbp
   140014d17:	ret    
   140014d18:	int3   
   140014d19:	int3   
   140014d1a:	int3   
   140014d1b:	int3   
   140014d1c:	int3   
   140014d1d:	int3   
   140014d1e:	int3   
   140014d1f:	int3   
   140014d20:	rex push rbp
   140014d22:	sub    rsp,0x20
   140014d26:	mov    rbp,rdx
   140014d29:	mov    rcx,QWORD PTR [rbp+0x40]
   140014d2d:	add    rcx,0x8
   140014d31:	call   QWORD PTR [rip+0x68e9]        # 0x14001b620
   140014d37:	add    rsp,0x20
   140014d3b:	pop    rbp
   140014d3c:	ret    
   140014d3d:	int3   
   140014d3e:	int3   
   140014d3f:	int3   
   140014d40:	rex push rbp
   140014d42:	sub    rsp,0x20
   140014d46:	mov    rbp,rdx
   140014d49:	mov    rcx,QWORD PTR [rbp+0x40]
   140014d4d:	add    rcx,0x10
   140014d51:	call   QWORD PTR [rip+0x68c9]        # 0x14001b620
   140014d57:	add    rsp,0x20
   140014d5b:	pop    rbp
   140014d5c:	ret    
   140014d5d:	int3   
   140014d5e:	int3   
   140014d5f:	int3   
   140014d60:	rex push rbp
   140014d62:	sub    rsp,0x20
   140014d66:	mov    rbp,rdx
   140014d69:	mov    rcx,QWORD PTR [rbp+0x40]
   140014d6d:	add    rcx,0x18
   140014d71:	call   QWORD PTR [rip+0x68a9]        # 0x14001b620
   140014d77:	add    rsp,0x20
   140014d7b:	pop    rbp
   140014d7c:	ret    
   140014d7d:	int3   
   140014d7e:	int3   
   140014d7f:	int3   
   140014d80:	rex push rbp
   140014d82:	sub    rsp,0x20
   140014d86:	mov    rbp,rdx
   140014d89:	mov    rcx,QWORD PTR [rbp+0x40]
   140014d8d:	add    rcx,0x20
   140014d91:	call   0x1400029e0
   140014d96:	add    rsp,0x20
   140014d9a:	pop    rbp
   140014d9b:	ret    
   140014d9c:	int3   
   140014d9d:	int3   
   140014d9e:	int3   
   140014d9f:	int3   
   140014da0:	rex push rbp
   140014da2:	sub    rsp,0x20
   140014da6:	mov    rbp,rdx
   140014da9:	lea    rcx,[rbp+0xf0]
   140014db0:	call   0x1400029e0
   140014db5:	add    rsp,0x20
   140014db9:	pop    rbp
   140014dba:	ret    
   140014dbb:	int3   
   140014dbc:	int3   
   140014dbd:	int3   
   140014dbe:	int3   
   140014dbf:	int3   
   140014dc0:	rex push rbp
   140014dc2:	sub    rsp,0x20
   140014dc6:	mov    rbp,rdx
   140014dc9:	lea    rcx,[rbp+0x50]
   140014dcd:	call   QWORD PTR [rip+0x6855]        # 0x14001b628
   140014dd3:	add    rsp,0x20
   140014dd7:	pop    rbp
   140014dd8:	ret    
   140014dd9:	int3   
   140014dda:	int3   
   140014ddb:	int3   
   140014ddc:	int3   
   140014ddd:	int3   
   140014dde:	int3   
   140014ddf:	int3   
   140014de0:	rex push rbp
   140014de2:	sub    rsp,0x20
   140014de6:	mov    rbp,rdx
   140014de9:	lea    rcx,[rbp+0x108]
   140014df0:	call   QWORD PTR [rip+0x682a]        # 0x14001b620
   140014df6:	add    rsp,0x20
   140014dfa:	pop    rbp
   140014dfb:	ret    
   140014dfc:	int3   
   140014dfd:	int3   
   140014dfe:	int3   
   140014dff:	int3   
   140014e00:	rex push rbp
   140014e02:	sub    rsp,0x20
   140014e06:	mov    rbp,rdx
   140014e09:	lea    rcx,[rbp+0x100]
   140014e10:	call   QWORD PTR [rip+0x680a]        # 0x14001b620
   140014e16:	add    rsp,0x20
   140014e1a:	pop    rbp
   140014e1b:	ret    
   140014e1c:	int3   
   140014e1d:	int3   
   140014e1e:	int3   
   140014e1f:	int3   
   140014e20:	rex push rbp
   140014e22:	sub    rsp,0x20
   140014e26:	mov    rbp,rdx
   140014e29:	lea    rcx,[rbp+0xf8]
   140014e30:	call   QWORD PTR [rip+0x67ea]        # 0x14001b620
   140014e36:	add    rsp,0x20
   140014e3a:	pop    rbp
   140014e3b:	ret    
   140014e3c:	int3   
   140014e3d:	int3   
   140014e3e:	int3   
   140014e3f:	int3   
   140014e40:	rex push rbp
   140014e42:	sub    rsp,0x20
   140014e46:	mov    rbp,rdx
   140014e49:	lea    rcx,[rbp+0x60]
   140014e4d:	call   0x140002b70
   140014e52:	add    rsp,0x20
   140014e56:	pop    rbp
   140014e57:	ret    
   140014e58:	int3   
   140014e59:	int3   
   140014e5a:	int3   
   140014e5b:	int3   
   140014e5c:	int3   
   140014e5d:	int3   
   140014e5e:	int3   
   140014e5f:	int3   
   140014e60:	rex push rbp
   140014e62:	sub    rsp,0x20
   140014e66:	mov    rbp,rdx
   140014e69:	lea    rcx,[rbp+0x60]
   140014e6d:	add    rcx,0x8
   140014e71:	call   QWORD PTR [rip+0x67a9]        # 0x14001b620
   140014e77:	add    rsp,0x20
   140014e7b:	pop    rbp
   140014e7c:	ret    
   140014e7d:	int3   
   140014e7e:	int3   
   140014e7f:	int3   
   140014e80:	rex push rbp
   140014e82:	sub    rsp,0x20
   140014e86:	mov    rbp,rdx
   140014e89:	lea    rcx,[rbp+0x60]
   140014e8d:	add    rcx,0x10
   140014e91:	call   QWORD PTR [rip+0x6789]        # 0x14001b620
   140014e97:	add    rsp,0x20
   140014e9b:	pop    rbp
   140014e9c:	ret    
   140014e9d:	int3   
   140014e9e:	int3   
   140014e9f:	int3   
   140014ea0:	rex push rbp
   140014ea2:	sub    rsp,0x20
   140014ea6:	mov    rbp,rdx
   140014ea9:	lea    rcx,[rbp+0x60]
   140014ead:	add    rcx,0x18
   140014eb1:	call   QWORD PTR [rip+0x6769]        # 0x14001b620
   140014eb7:	add    rsp,0x20
   140014ebb:	pop    rbp
   140014ebc:	ret    
   140014ebd:	int3   
   140014ebe:	int3   
   140014ebf:	int3   
   140014ec0:	rex push rbp
   140014ec2:	sub    rsp,0x20
   140014ec6:	mov    rbp,rdx
   140014ec9:	lea    rcx,[rbp+0x60]
   140014ecd:	add    rcx,0x20
   140014ed1:	call   0x1400029e0
   140014ed6:	add    rsp,0x20
   140014eda:	pop    rbp
   140014edb:	ret    
   140014edc:	int3   
   140014edd:	int3   
   140014ede:	int3   
   140014edf:	int3   
   140014ee0:	rex push rbp
   140014ee2:	sub    rsp,0x20
   140014ee6:	mov    rbp,rdx
   140014ee9:	lea    rcx,[rbp+0x60]
   140014eed:	call   QWORD PTR [rip+0x6735]        # 0x14001b628
   140014ef3:	add    rsp,0x20
   140014ef7:	pop    rbp
   140014ef8:	ret    
   140014ef9:	int3   
   140014efa:	int3   
   140014efb:	int3   
   140014efc:	int3   
   140014efd:	int3   
   140014efe:	int3   
   140014eff:	int3   
   140014f00:	rex push rbp
   140014f02:	sub    rsp,0x20
   140014f06:	mov    rbp,rdx
   140014f09:	lea    rcx,[rbp+0x60]
   140014f0d:	call   QWORD PTR [rip+0x6715]        # 0x14001b628
   140014f13:	add    rsp,0x20
   140014f17:	pop    rbp
   140014f18:	ret    
   140014f19:	int3   
   140014f1a:	int3   
   140014f1b:	int3   
   140014f1c:	int3   
   140014f1d:	int3   
   140014f1e:	int3   
   140014f1f:	int3   
   140014f20:	rex push rbp
   140014f22:	sub    rsp,0x20
   140014f26:	mov    rbp,rdx
   140014f29:	lea    rcx,[rbp+0x60]
   140014f2d:	call   QWORD PTR [rip+0x66f5]        # 0x14001b628
   140014f33:	add    rsp,0x20
   140014f37:	pop    rbp
   140014f38:	ret    
   140014f39:	int3   
   140014f3a:	int3   
   140014f3b:	int3   
   140014f3c:	int3   
   140014f3d:	int3   
   140014f3e:	int3   
   140014f3f:	int3   
   140014f40:	rex push rbp
   140014f42:	sub    rsp,0x20
   140014f46:	mov    rbp,rdx
   140014f49:	lea    rcx,[rbp+0x60]
   140014f4d:	call   QWORD PTR [rip+0x66d5]        # 0x14001b628
   140014f53:	add    rsp,0x20
   140014f57:	pop    rbp
   140014f58:	ret    
   140014f59:	int3   
   140014f5a:	int3   
   140014f5b:	int3   
   140014f5c:	int3   
   140014f5d:	int3   
   140014f5e:	int3   
   140014f5f:	int3   
   140014f60:	rex push rbp
   140014f62:	sub    rsp,0x20
   140014f66:	mov    rbp,rdx
   140014f69:	mov    eax,DWORD PTR [rbp+0x60]
   140014f6c:	and    eax,0x1
   140014f6f:	test   eax,eax
   140014f71:	je     0x140014f81
   140014f73:	and    DWORD PTR [rbp+0x60],0xfffffffe
   140014f77:	lea    rcx,[rbp+0x30]
   140014f7b:	call   QWORD PTR [rip+0x66a7]        # 0x14001b628
   140014f81:	add    rsp,0x20
   140014f85:	pop    rbp
   140014f86:	ret    
   140014f87:	int3   
   140014f88:	int3   
   140014f89:	int3   
   140014f8a:	int3   
   140014f8b:	int3   
   140014f8c:	int3   
   140014f8d:	int3   
   140014f8e:	int3   
   140014f8f:	int3   
   140014f90:	rex push rbp
   140014f92:	sub    rsp,0x20
   140014f96:	mov    rbp,rdx
   140014f99:	mov    eax,DWORD PTR [rbp+0x60]
   140014f9c:	and    eax,0x2
   140014f9f:	test   eax,eax
   140014fa1:	je     0x140014fb1
   140014fa3:	and    DWORD PTR [rbp+0x60],0xfffffffd
   140014fa7:	lea    rcx,[rbp+0x40]
   140014fab:	call   QWORD PTR [rip+0x6677]        # 0x14001b628
   140014fb1:	add    rsp,0x20
   140014fb5:	pop    rbp
   140014fb6:	ret    
   140014fb7:	int3   
   140014fb8:	int3   
   140014fb9:	int3   
   140014fba:	int3   
   140014fbb:	int3   
   140014fbc:	int3   
   140014fbd:	int3   
   140014fbe:	int3   
   140014fbf:	int3   
   140014fc0:	rex push rbp
   140014fc2:	sub    rsp,0x20
   140014fc6:	mov    rbp,rdx
   140014fc9:	mov    eax,DWORD PTR [rbp+0x60]
   140014fcc:	and    eax,0x4
   140014fcf:	test   eax,eax
   140014fd1:	je     0x140014fe1
   140014fd3:	and    DWORD PTR [rbp+0x60],0xfffffffb
   140014fd7:	lea    rcx,[rbp+0x28]
   140014fdb:	call   QWORD PTR [rip+0x6647]        # 0x14001b628
   140014fe1:	add    rsp,0x20
   140014fe5:	pop    rbp
   140014fe6:	ret    
   140014fe7:	int3   
   140014fe8:	int3   
   140014fe9:	int3   
   140014fea:	int3   
   140014feb:	int3   
   140014fec:	int3   
   140014fed:	int3   
   140014fee:	int3   
   140014fef:	int3   
   140014ff0:	rex push rbp
   140014ff2:	sub    rsp,0x20
   140014ff6:	mov    rbp,rdx
   140014ff9:	mov    eax,DWORD PTR [rbp+0x60]
   140014ffc:	and    eax,0x8
   140014fff:	test   eax,eax
   140015001:	je     0x140015011
   140015003:	and    DWORD PTR [rbp+0x60],0xfffffff7
   140015007:	lea    rcx,[rbp+0x20]
   14001500b:	call   QWORD PTR [rip+0x6617]        # 0x14001b628
   140015011:	add    rsp,0x20
   140015015:	pop    rbp
   140015016:	ret    
   140015017:	int3   
   140015018:	int3   
   140015019:	int3   
   14001501a:	int3   
   14001501b:	int3   
   14001501c:	int3   
   14001501d:	int3   
   14001501e:	int3   
   14001501f:	int3   
   140015020:	rex push rbp
   140015022:	sub    rsp,0x20
   140015026:	mov    rbp,rdx
   140015029:	mov    eax,DWORD PTR [rbp+0x60]
   14001502c:	and    eax,0x10
   14001502f:	test   eax,eax
   140015031:	je     0x140015041
   140015033:	and    DWORD PTR [rbp+0x60],0xffffffef
   140015037:	lea    rcx,[rbp+0x38]
   14001503b:	call   QWORD PTR [rip+0x65e7]        # 0x14001b628
   140015041:	add    rsp,0x20
   140015045:	pop    rbp
   140015046:	ret    
   140015047:	int3   
   140015048:	int3   
   140015049:	int3   
   14001504a:	int3   
   14001504b:	int3   
   14001504c:	int3   
   14001504d:	int3   
   14001504e:	int3   
   14001504f:	int3   
   140015050:	rex push rbp
   140015052:	sub    rsp,0x20
   140015056:	mov    rbp,rdx
   140015059:	lea    rcx,[rbp+0x60]
   14001505d:	call   QWORD PTR [rip+0x65c5]        # 0x14001b628
   140015063:	add    rsp,0x20
   140015067:	pop    rbp
   140015068:	ret    
   140015069:	int3   
   14001506a:	int3   
   14001506b:	int3   
   14001506c:	int3   
   14001506d:	int3   
   14001506e:	int3   
   14001506f:	int3   
   140015070:	rex push rbp
   140015072:	sub    rsp,0x20
   140015076:	mov    rbp,rdx
   140015079:	lea    rcx,[rbp+0x20]
   14001507d:	call   QWORD PTR [rip+0x65a5]        # 0x14001b628
   140015083:	add    rsp,0x20
   140015087:	pop    rbp
   140015088:	ret    
   140015089:	int3   
   14001508a:	int3   
   14001508b:	int3   
   14001508c:	int3   
   14001508d:	int3   
   14001508e:	int3   
   14001508f:	int3   
   140015090:	rex push rbp
   140015092:	sub    rsp,0x20
   140015096:	mov    rbp,rdx
   140015099:	lea    rcx,[rbp+0x50]
   14001509d:	call   QWORD PTR [rip+0x6585]        # 0x14001b628
   1400150a3:	add    rsp,0x20
   1400150a7:	pop    rbp
   1400150a8:	ret    
   1400150a9:	int3   
   1400150aa:	int3   
   1400150ab:	int3   
   1400150ac:	int3   
   1400150ad:	int3   
   1400150ae:	int3   
   1400150af:	int3   
   1400150b0:	rex push rbp
   1400150b2:	sub    rsp,0x20
   1400150b6:	mov    rbp,rdx
   1400150b9:	lea    rcx,[rbp+0x28]
   1400150bd:	call   QWORD PTR [rip+0x621d]        # 0x14001b2e0
   1400150c3:	add    rsp,0x20
   1400150c7:	pop    rbp
   1400150c8:	ret    
   1400150c9:	int3   
   1400150ca:	int3   
   1400150cb:	int3   
   1400150cc:	int3   
   1400150cd:	int3   
   1400150ce:	int3   
   1400150cf:	int3   
   1400150d0:	rex push rbp
   1400150d2:	sub    rsp,0x20
   1400150d6:	mov    rbp,rdx
   1400150d9:	lea    rcx,[rbp+0x50]
   1400150dd:	call   QWORD PTR [rip+0x6545]        # 0x14001b628
   1400150e3:	add    rsp,0x20
   1400150e7:	pop    rbp
   1400150e8:	ret    
   1400150e9:	int3   
   1400150ea:	int3   
   1400150eb:	int3   
   1400150ec:	int3   
   1400150ed:	int3   
   1400150ee:	int3   
   1400150ef:	int3   
   1400150f0:	rex push rbp
   1400150f2:	sub    rsp,0x20
   1400150f6:	mov    rbp,rdx
   1400150f9:	mov    eax,DWORD PTR [rbp+0x50]
   1400150fc:	and    eax,0x1
   1400150ff:	test   eax,eax
   140015101:	je     0x140015111
   140015103:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140015107:	lea    rcx,[rbp+0x20]
   14001510b:	call   QWORD PTR [rip+0x6517]        # 0x14001b628
   140015111:	add    rsp,0x20
   140015115:	pop    rbp
   140015116:	ret    
   140015117:	int3   
   140015118:	int3   
   140015119:	int3   
   14001511a:	int3   
   14001511b:	int3   
   14001511c:	int3   
   14001511d:	int3   
   14001511e:	int3   
   14001511f:	int3   
   140015120:	rex push rbp
   140015122:	sub    rsp,0x20
   140015126:	mov    rbp,rdx
   140015129:	lea    rcx,[rbp+0x50]
   14001512d:	call   QWORD PTR [rip+0x64f5]        # 0x14001b628
   140015133:	add    rsp,0x20
   140015137:	pop    rbp
   140015138:	ret    
   140015139:	int3   
   14001513a:	int3   
   14001513b:	int3   
   14001513c:	int3   
   14001513d:	int3   
   14001513e:	int3   
   14001513f:	int3   
   140015140:	rex push rbp
   140015142:	sub    rsp,0x20
   140015146:	mov    rbp,rdx
   140015149:	lea    rcx,[rbp+0x60]
   14001514d:	call   0x140002de0
   140015152:	add    rsp,0x20
   140015156:	pop    rbp
   140015157:	ret    
   140015158:	int3   
   140015159:	int3   
   14001515a:	int3   
   14001515b:	int3   
   14001515c:	int3   
   14001515d:	int3   
   14001515e:	int3   
   14001515f:	int3   
   140015160:	rex push rbp
   140015162:	sub    rsp,0x20
   140015166:	mov    rbp,rdx
   140015169:	lea    rcx,[rbp+0x50]
   14001516d:	call   QWORD PTR [rip+0x64ad]        # 0x14001b620
   140015173:	add    rsp,0x20
   140015177:	pop    rbp
   140015178:	ret    
   140015179:	int3   
   14001517a:	int3   
   14001517b:	int3   
   14001517c:	int3   
   14001517d:	int3   
   14001517e:	int3   
   14001517f:	int3   
   140015180:	rex push rbp
   140015182:	sub    rsp,0x20
   140015186:	mov    rbp,rdx
   140015189:	lea    rcx,[rbp+0x68]
   14001518d:	call   QWORD PTR [rip+0x648d]        # 0x14001b620
   140015193:	add    rsp,0x20
   140015197:	pop    rbp
   140015198:	ret    
   140015199:	int3   
   14001519a:	int3   
   14001519b:	int3   
   14001519c:	int3   
   14001519d:	int3   
   14001519e:	int3   
   14001519f:	int3   
   1400151a0:	rex push rbp
   1400151a2:	sub    rsp,0x20
   1400151a6:	mov    rbp,rdx
   1400151a9:	lea    rcx,[rbp+0x58]
   1400151ad:	call   QWORD PTR [rip+0x646d]        # 0x14001b620
   1400151b3:	add    rsp,0x20
   1400151b7:	pop    rbp
   1400151b8:	ret    
   1400151b9:	int3   
   1400151ba:	int3   
   1400151bb:	int3   
   1400151bc:	int3   
   1400151bd:	int3   
   1400151be:	int3   
   1400151bf:	int3   
   1400151c0:	rex push rbp
   1400151c2:	sub    rsp,0x20
   1400151c6:	mov    rbp,rdx
   1400151c9:	lea    rcx,[rbp+0x90]
   1400151d0:	call   QWORD PTR [rip+0x644a]        # 0x14001b620
   1400151d6:	add    rsp,0x20
   1400151da:	pop    rbp
   1400151db:	ret    
   1400151dc:	int3   
   1400151dd:	int3   
   1400151de:	int3   
   1400151df:	int3   
   1400151e0:	rex push rbp
   1400151e2:	sub    rsp,0x20
   1400151e6:	mov    rbp,rdx
   1400151e9:	lea    rcx,[rbp+0x70]
   1400151ed:	call   QWORD PTR [rip+0x642d]        # 0x14001b620
   1400151f3:	add    rsp,0x20
   1400151f7:	pop    rbp
   1400151f8:	ret    
   1400151f9:	int3   
   1400151fa:	int3   
   1400151fb:	int3   
   1400151fc:	int3   
   1400151fd:	int3   
   1400151fe:	int3   
   1400151ff:	int3   
   140015200:	rex push rbp
   140015202:	sub    rsp,0x20
   140015206:	mov    rbp,rdx
   140015209:	mov    eax,DWORD PTR [rbp+0x238]
   14001520f:	and    eax,0x1
   140015212:	test   eax,eax
   140015214:	je     0x14001522a
   140015216:	and    DWORD PTR [rbp+0x238],0xfffffffe
   14001521d:	lea    rcx,[rbp+0xc8]
   140015224:	call   QWORD PTR [rip+0x63f6]        # 0x14001b620
   14001522a:	add    rsp,0x20
   14001522e:	pop    rbp
   14001522f:	ret    
   140015230:	rex push rbp
   140015232:	sub    rsp,0x20
   140015236:	mov    rbp,rdx
   140015239:	lea    rcx,[rbp+0xd0]
   140015240:	call   QWORD PTR [rip+0x63da]        # 0x14001b620
   140015246:	add    rsp,0x20
   14001524a:	pop    rbp
   14001524b:	ret    
   14001524c:	int3   
   14001524d:	int3   
   14001524e:	int3   
   14001524f:	int3   
   140015250:	rex push rbp
   140015252:	sub    rsp,0x20
   140015256:	mov    rbp,rdx
   140015259:	lea    rcx,[rbp+0xa8]
   140015260:	call   QWORD PTR [rip+0x63c2]        # 0x14001b628
   140015266:	add    rsp,0x20
   14001526a:	pop    rbp
   14001526b:	ret    
   14001526c:	int3   
   14001526d:	int3   
   14001526e:	int3   
   14001526f:	int3   
   140015270:	rex push rbp
   140015272:	sub    rsp,0x20
   140015276:	mov    rbp,rdx
   140015279:	lea    rcx,[rbp+0x88]
   140015280:	call   0x1400029e0
   140015285:	add    rsp,0x20
   140015289:	pop    rbp
   14001528a:	ret    
   14001528b:	int3   
   14001528c:	int3   
   14001528d:	int3   
   14001528e:	int3   
   14001528f:	int3   
   140015290:	rex push rbp
   140015292:	sub    rsp,0x20
   140015296:	mov    rbp,rdx
   140015299:	lea    rcx,[rbp+0xe8]
   1400152a0:	call   0x140002b70
   1400152a5:	add    rsp,0x20
   1400152a9:	pop    rbp
   1400152aa:	ret    
   1400152ab:	int3   
   1400152ac:	int3   
   1400152ad:	int3   
   1400152ae:	int3   
   1400152af:	int3   
   1400152b0:	rex push rbp
   1400152b2:	sub    rsp,0x20
   1400152b6:	mov    rbp,rdx
   1400152b9:	lea    rcx,[rbp+0xe8]
   1400152c0:	add    rcx,0x8
   1400152c4:	call   QWORD PTR [rip+0x6356]        # 0x14001b620
   1400152ca:	add    rsp,0x20
   1400152ce:	pop    rbp
   1400152cf:	ret    
   1400152d0:	rex push rbp
   1400152d2:	sub    rsp,0x20
   1400152d6:	mov    rbp,rdx
   1400152d9:	lea    rcx,[rbp+0xe8]
   1400152e0:	add    rcx,0x10
   1400152e4:	call   QWORD PTR [rip+0x6336]        # 0x14001b620
   1400152ea:	add    rsp,0x20
   1400152ee:	pop    rbp
   1400152ef:	ret    
   1400152f0:	rex push rbp
   1400152f2:	sub    rsp,0x20
   1400152f6:	mov    rbp,rdx
   1400152f9:	lea    rcx,[rbp+0xe8]
   140015300:	add    rcx,0x18
   140015304:	call   QWORD PTR [rip+0x6316]        # 0x14001b620
   14001530a:	add    rsp,0x20
   14001530e:	pop    rbp
   14001530f:	ret    
   140015310:	rex push rbp
   140015312:	sub    rsp,0x20
   140015316:	mov    rbp,rdx
   140015319:	lea    rcx,[rbp+0xe8]
   140015320:	add    rcx,0x20
   140015324:	call   0x1400029e0
   140015329:	add    rsp,0x20
   14001532d:	pop    rbp
   14001532e:	ret    
   14001532f:	int3   
   140015330:	rex push rbp
   140015332:	sub    rsp,0x20
   140015336:	mov    rbp,rdx
   140015339:	lea    rcx,[rbp+0xa0]
   140015340:	call   QWORD PTR [rip+0x62e2]        # 0x14001b628
   140015346:	add    rsp,0x20
   14001534a:	pop    rbp
   14001534b:	ret    
   14001534c:	int3   
   14001534d:	int3   
   14001534e:	int3   
   14001534f:	int3   
   140015350:	rex push rbp
   140015352:	sub    rsp,0x20
   140015356:	mov    rbp,rdx
   140015359:	lea    rcx,[rbp+0x78]
   14001535d:	call   0x1400029e0
   140015362:	add    rsp,0x20
   140015366:	pop    rbp
   140015367:	ret    
   140015368:	int3   
   140015369:	int3   
   14001536a:	int3   
   14001536b:	int3   
   14001536c:	int3   
   14001536d:	int3   
   14001536e:	int3   
   14001536f:	int3   
   140015370:	rex push rbp
   140015372:	sub    rsp,0x20
   140015376:	mov    rbp,rdx
   140015379:	lea    rcx,[rbp+0x130]
   140015380:	call   0x140002b70
   140015385:	add    rsp,0x20
   140015389:	pop    rbp
   14001538a:	ret    
   14001538b:	int3   
   14001538c:	int3   
   14001538d:	int3   
   14001538e:	int3   
   14001538f:	int3   
   140015390:	rex push rbp
   140015392:	sub    rsp,0x20
   140015396:	mov    rbp,rdx
   140015399:	lea    rcx,[rbp+0x130]
   1400153a0:	add    rcx,0x8
   1400153a4:	call   QWORD PTR [rip+0x6276]        # 0x14001b620
   1400153aa:	add    rsp,0x20
   1400153ae:	pop    rbp
   1400153af:	ret    
   1400153b0:	rex push rbp
   1400153b2:	sub    rsp,0x20
   1400153b6:	mov    rbp,rdx
   1400153b9:	lea    rcx,[rbp+0x130]
   1400153c0:	add    rcx,0x10
   1400153c4:	call   QWORD PTR [rip+0x6256]        # 0x14001b620
   1400153ca:	add    rsp,0x20
   1400153ce:	pop    rbp
   1400153cf:	ret    
   1400153d0:	rex push rbp
   1400153d2:	sub    rsp,0x20
   1400153d6:	mov    rbp,rdx
   1400153d9:	lea    rcx,[rbp+0x130]
   1400153e0:	add    rcx,0x18
   1400153e4:	call   QWORD PTR [rip+0x6236]        # 0x14001b620
   1400153ea:	add    rsp,0x20
   1400153ee:	pop    rbp
   1400153ef:	ret    
   1400153f0:	rex push rbp
   1400153f2:	sub    rsp,0x20
   1400153f6:	mov    rbp,rdx
   1400153f9:	lea    rcx,[rbp+0x130]
   140015400:	add    rcx,0x20
   140015404:	call   0x1400029e0
   140015409:	add    rsp,0x20
   14001540d:	pop    rbp
   14001540e:	ret    
   14001540f:	int3   
   140015410:	rex push rbp
   140015412:	sub    rsp,0x20
   140015416:	mov    rbp,rdx
   140015419:	lea    rcx,[rbp+0xb0]
   140015420:	call   QWORD PTR [rip+0x61fa]        # 0x14001b620
   140015426:	add    rsp,0x20
   14001542a:	pop    rbp
   14001542b:	ret    
   14001542c:	int3   
   14001542d:	int3   
   14001542e:	int3   
   14001542f:	int3   
   140015430:	rex push rbp
   140015432:	sub    rsp,0x20
   140015436:	mov    rbp,rdx
   140015439:	lea    rcx,[rbp+0x98]
   140015440:	call   QWORD PTR [rip+0x61e2]        # 0x14001b628
   140015446:	add    rsp,0x20
   14001544a:	pop    rbp
   14001544b:	ret    
   14001544c:	int3   
   14001544d:	int3   
   14001544e:	int3   
   14001544f:	int3   
   140015450:	rex push rbp
   140015452:	sub    rsp,0x20
   140015456:	mov    rbp,rdx
   140015459:	lea    rcx,[rbp+0x80]
   140015460:	call   0x1400029e0
   140015465:	add    rsp,0x20
   140015469:	pop    rbp
   14001546a:	ret    
   14001546b:	int3   
   14001546c:	int3   
   14001546d:	int3   
   14001546e:	int3   
   14001546f:	int3   
   140015470:	rex push rbp
   140015472:	sub    rsp,0x20
   140015476:	mov    rbp,rdx
   140015479:	lea    rcx,[rbp+0x178]
   140015480:	call   0x140002b70
   140015485:	add    rsp,0x20
   140015489:	pop    rbp
   14001548a:	ret    
   14001548b:	int3   
   14001548c:	int3   
   14001548d:	int3   
   14001548e:	int3   
   14001548f:	int3   
   140015490:	rex push rbp
   140015492:	sub    rsp,0x20
   140015496:	mov    rbp,rdx
   140015499:	lea    rcx,[rbp+0x178]
   1400154a0:	add    rcx,0x8
   1400154a4:	call   QWORD PTR [rip+0x6176]        # 0x14001b620
   1400154aa:	add    rsp,0x20
   1400154ae:	pop    rbp
   1400154af:	ret    
   1400154b0:	rex push rbp
   1400154b2:	sub    rsp,0x20
   1400154b6:	mov    rbp,rdx
   1400154b9:	lea    rcx,[rbp+0x178]
   1400154c0:	add    rcx,0x10
   1400154c4:	call   QWORD PTR [rip+0x6156]        # 0x14001b620
   1400154ca:	add    rsp,0x20
   1400154ce:	pop    rbp
   1400154cf:	ret    
   1400154d0:	rex push rbp
   1400154d2:	sub    rsp,0x20
   1400154d6:	mov    rbp,rdx
   1400154d9:	lea    rcx,[rbp+0x178]
   1400154e0:	add    rcx,0x18
   1400154e4:	call   QWORD PTR [rip+0x6136]        # 0x14001b620
   1400154ea:	add    rsp,0x20
   1400154ee:	pop    rbp
   1400154ef:	ret    
   1400154f0:	rex push rbp
   1400154f2:	sub    rsp,0x20
   1400154f6:	mov    rbp,rdx
   1400154f9:	lea    rcx,[rbp+0x178]
   140015500:	add    rcx,0x20
   140015504:	call   0x1400029e0
   140015509:	add    rsp,0x20
   14001550d:	pop    rbp
   14001550e:	ret    
   14001550f:	int3   
   140015510:	mov    QWORD PTR [rsp+0x10],rdx
   140015515:	push   rbx
   140015516:	push   rbp
   140015517:	push   rdi
   140015518:	sub    rsp,0x20
   14001551c:	mov    rbp,rdx
   14001551f:	mov    rbx,QWORD PTR [rbp+0x50]
   140015523:	mov    rdi,QWORD PTR [rbp+0x48]
   140015527:	cmp    rbx,rdi
   14001552a:	je     0x140015542
   14001552c:	nop    DWORD PTR [rax+0x0]
   140015530:	sub    rbx,0x8
   140015534:	mov    rcx,rbx
   140015537:	call   QWORD PTR [rip+0x60eb]        # 0x14001b628
   14001553d:	cmp    rbx,rdi
   140015540:	jne    0x140015530
   140015542:	xor    edx,edx
   140015544:	xor    ecx,ecx
   140015546:	call   0x140013f4a
   14001554b:	nop
   14001554c:	add    rsp,0x20
   140015550:	pop    rdi
   140015551:	pop    rbp
   140015552:	pop    rbx
   140015553:	ret    
   140015554:	int3   
   140015555:	int3   
   140015556:	int3   
   140015557:	int3   
   140015558:	int3   
   140015559:	int3   
   14001555a:	int3   
   14001555b:	int3   
   14001555c:	int3   
   14001555d:	int3   
   14001555e:	int3   
   14001555f:	int3   
   140015560:	mov    QWORD PTR [rsp+0x10],rdx
   140015565:	push   rbp
   140015566:	sub    rsp,0x30
   14001556a:	mov    rbp,rdx
   14001556d:	mov    rcx,QWORD PTR [rbp+0x30]
   140015571:	add    rcx,0x18
   140015575:	call   QWORD PTR [rip+0x60ad]        # 0x14001b628
   14001557b:	xor    edx,edx
   14001557d:	xor    ecx,ecx
   14001557f:	call   0x140013f4a
   140015584:	nop
   140015585:	add    rsp,0x30
   140015589:	pop    rbp
   14001558a:	ret    
   14001558b:	int3   
   14001558c:	int3   
   14001558d:	int3   
   14001558e:	int3   
   14001558f:	int3   
   140015590:	mov    QWORD PTR [rsp+0x10],rdx
   140015595:	push   rbp
   140015596:	sub    rsp,0x30
   14001559a:	mov    rbp,rdx
   14001559d:	mov    rdx,QWORD PTR [rbp+0x30]
   1400155a1:	mov    rcx,QWORD PTR [rbp+0x50]
   1400155a5:	call   QWORD PTR [rip+0x600d]        # 0x14001b5b8
   1400155ab:	xor    edx,edx
   1400155ad:	xor    ecx,ecx
   1400155af:	call   0x140013f4a
   1400155b4:	nop
   1400155b5:	add    rsp,0x30
   1400155b9:	pop    rbp
   1400155ba:	ret    
   1400155bb:	int3   
   1400155bc:	int3   
   1400155bd:	int3   
   1400155be:	int3   
   1400155bf:	int3   
   1400155c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400155c5:	push   rbp
   1400155c6:	sub    rsp,0x20
   1400155ca:	mov    rbp,rdx
   1400155cd:	mov    rcx,QWORD PTR [rbp+0x40]
   1400155d1:	mov    rcx,QWORD PTR [rcx]
   1400155d4:	call   QWORD PTR [rip+0x5cb6]        # 0x14001b290
   1400155da:	xor    edx,edx
   1400155dc:	xor    ecx,ecx
   1400155de:	call   0x140013f4a
   1400155e3:	nop
   1400155e4:	add    rsp,0x20
   1400155e8:	pop    rbp
   1400155e9:	ret    
   1400155ea:	int3   
   1400155eb:	int3   
   1400155ec:	int3   
   1400155ed:	int3   
   1400155ee:	int3   
   1400155ef:	int3   
   1400155f0:	rex push rbp
   1400155f2:	sub    rsp,0x20
   1400155f6:	mov    rbp,rdx
   1400155f9:	lea    rcx,[rbp+0x48]
   1400155fd:	call   0x140002880
   140015602:	add    rsp,0x20
   140015606:	pop    rbp
   140015607:	ret    
   140015608:	int3   
   140015609:	int3   
   14001560a:	int3   
   14001560b:	int3   
   14001560c:	int3   
   14001560d:	int3   
   14001560e:	int3   
   14001560f:	int3   
   140015610:	mov    QWORD PTR [rsp+0x10],rdx
   140015615:	push   rbx
   140015616:	push   rbp
   140015617:	sub    rsp,0x28
   14001561b:	mov    rbp,rdx
   14001561e:	mov    rbx,QWORD PTR [rbp+0x50]
   140015622:	mov    rcx,QWORD PTR [rbx]
   140015625:	call   QWORD PTR [rip+0x5c65]        # 0x14001b290
   14001562b:	mov    r11,QWORD PTR [rbp+0x68]
   14001562f:	mov    QWORD PTR [rbx],r11
   140015632:	xor    edx,edx
   140015634:	xor    ecx,ecx
   140015636:	call   0x140013f4a
   14001563b:	nop
   14001563c:	add    rsp,0x28
   140015640:	pop    rbp
   140015641:	pop    rbx
   140015642:	ret    
   140015643:	int3   
   140015644:	int3   
   140015645:	int3   
   140015646:	int3   
   140015647:	int3   
   140015648:	int3   
   140015649:	int3   
   14001564a:	int3   
   14001564b:	int3   
   14001564c:	int3   
   14001564d:	int3   
   14001564e:	int3   
   14001564f:	int3   
   140015650:	mov    QWORD PTR [rsp+0x10],rdx
   140015655:	push   rbx
   140015656:	push   rbp
   140015657:	sub    rsp,0x28
   14001565b:	mov    rbp,rdx
   14001565e:	mov    rbx,QWORD PTR [rbp+0x50]
   140015662:	mov    rdx,QWORD PTR [rbx]
   140015665:	movsxd rcx,DWORD PTR [rdx+0x8]
   140015669:	movsxd rax,DWORD PTR [rbp+0x58]
   14001566d:	add    rax,rcx
   140015670:	lea    r8,[rdx+rax*8+0x10]
   140015675:	lea    rdx,[rdx+rcx*8+0x10]
   14001567a:	mov    rcx,rbx
   14001567d:	call   0x140001320
   140015682:	mov    rcx,QWORD PTR [rbx]
   140015685:	call   QWORD PTR [rip+0x5c05]        # 0x14001b290
   14001568b:	mov    r11,QWORD PTR [rbp+0x68]
   14001568f:	mov    QWORD PTR [rbx],r11
   140015692:	xor    edx,edx
   140015694:	xor    ecx,ecx
   140015696:	call   0x140013f4a
   14001569b:	nop
   14001569c:	add    rsp,0x28
   1400156a0:	pop    rbp
   1400156a1:	pop    rbx
   1400156a2:	ret    
   1400156a3:	int3   
   1400156a4:	int3   
   1400156a5:	int3   
   1400156a6:	int3   
   1400156a7:	int3   
   1400156a8:	int3   
   1400156a9:	int3   
   1400156aa:	int3   
   1400156ab:	int3   
   1400156ac:	int3   
   1400156ad:	int3   
   1400156ae:	int3   
   1400156af:	int3   
   1400156b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400156b5:	push   rbx
   1400156b6:	push   rbp
   1400156b7:	sub    rsp,0x28
   1400156bb:	mov    rbp,rdx
   1400156be:	mov    rbx,QWORD PTR [rbp+0x40]
   1400156c2:	mov    rcx,QWORD PTR [rbx]
   1400156c5:	call   QWORD PTR [rip+0x5bc5]        # 0x14001b290
   1400156cb:	mov    r11,QWORD PTR [rbp+0x50]
   1400156cf:	mov    QWORD PTR [rbx],r11
   1400156d2:	xor    edx,edx
   1400156d4:	xor    ecx,ecx
   1400156d6:	call   0x140013f4a
   1400156db:	nop
   1400156dc:	add    rsp,0x28
   1400156e0:	pop    rbp
   1400156e1:	pop    rbx
   1400156e2:	ret    
   1400156e3:	int3   
   1400156e4:	int3   
   1400156e5:	int3   
   1400156e6:	int3   
   1400156e7:	int3   
   1400156e8:	int3   
   1400156e9:	int3   
   1400156ea:	int3   
   1400156eb:	int3   
   1400156ec:	int3   
   1400156ed:	int3   
   1400156ee:	int3   
   1400156ef:	int3   
   1400156f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400156f5:	push   rbp
   1400156f6:	sub    rsp,0x20
   1400156fa:	mov    rbp,rdx
   1400156fd:	mov    rax,QWORD PTR [rbp+0x40]
   140015701:	mov    rcx,QWORD PTR [rax]
   140015704:	dec    DWORD PTR [rcx+0xc]
   140015707:	xor    edx,edx
   140015709:	xor    ecx,ecx
   14001570b:	call   0x140013f4a
   140015710:	nop
   140015711:	add    rsp,0x20
   140015715:	pop    rbp
   140015716:	ret    
   140015717:	int3   
   140015718:	int3   
   140015719:	int3   
   14001571a:	int3   
   14001571b:	int3   
   14001571c:	int3   
   14001571d:	int3   
   14001571e:	int3   
   14001571f:	int3   
   140015720:	mov    QWORD PTR [rsp+0x10],rdx
   140015725:	push   rbp
   140015726:	sub    rsp,0x20
   14001572a:	mov    rbp,rdx
   14001572d:	lea    rcx,[rbp+0x40]
   140015731:	call   QWORD PTR [rip+0x5ef1]        # 0x14001b628
   140015737:	xor    edx,edx
   140015739:	xor    ecx,ecx
   14001573b:	call   0x140013f4a
   140015740:	nop
   140015741:	add    rsp,0x20
   140015745:	pop    rbp
   140015746:	ret    
   140015747:	int3   
   140015748:	int3   
   140015749:	int3   
   14001574a:	int3   
   14001574b:	int3   
   14001574c:	int3   
   14001574d:	int3   
   14001574e:	int3   
   14001574f:	int3   
   140015750:	rex push rbp
   140015752:	sub    rsp,0x20
   140015756:	mov    rbp,rdx
   140015759:	mov    rcx,QWORD PTR [rbp+0x40]
   14001575d:	call   0x140004b10
   140015762:	add    rsp,0x20
   140015766:	pop    rbp
   140015767:	ret    
   140015768:	int3   
   140015769:	int3   
   14001576a:	int3   
   14001576b:	int3   
   14001576c:	int3   
   14001576d:	int3   
   14001576e:	int3   
   14001576f:	int3   
   140015770:	rex push rbp
   140015772:	sub    rsp,0x20
   140015776:	mov    rbp,rdx
   140015779:	mov    rcx,QWORD PTR [rbp+0x40]
   14001577d:	add    rcx,0x8
   140015781:	call   QWORD PTR [rip+0x5e99]        # 0x14001b620
   140015787:	add    rsp,0x20
   14001578b:	pop    rbp
   14001578c:	ret    
   14001578d:	int3   
   14001578e:	int3   
   14001578f:	int3   
   140015790:	rex push rbp
   140015792:	sub    rsp,0x20
   140015796:	mov    rbp,rdx
   140015799:	mov    rcx,QWORD PTR [rbp+0x40]
   14001579d:	add    rcx,0x18
   1400157a1:	call   QWORD PTR [rip+0x5e81]        # 0x14001b628
   1400157a7:	add    rsp,0x20
   1400157ab:	pop    rbp
   1400157ac:	ret    
   1400157ad:	int3   
   1400157ae:	int3   
   1400157af:	int3   
   1400157b0:	rex push rbp
   1400157b2:	sub    rsp,0x20
   1400157b6:	mov    rbp,rdx
   1400157b9:	lea    rcx,[rbp+0x88]
   1400157c0:	call   QWORD PTR [rip+0x5e62]        # 0x14001b628
   1400157c6:	add    rsp,0x20
   1400157ca:	pop    rbp
   1400157cb:	ret    
   1400157cc:	int3   
   1400157cd:	int3   
   1400157ce:	int3   
   1400157cf:	int3   
   1400157d0:	rex push rbp
   1400157d2:	sub    rsp,0x20
   1400157d6:	mov    rbp,rdx
   1400157d9:	lea    rcx,[rbp+0x38]
   1400157dd:	call   QWORD PTR [rip+0x5b6d]        # 0x14001b350
   1400157e3:	add    rsp,0x20
   1400157e7:	pop    rbp
   1400157e8:	ret    
   1400157e9:	int3   
   1400157ea:	int3   
   1400157eb:	int3   
   1400157ec:	int3   
   1400157ed:	int3   
   1400157ee:	int3   
   1400157ef:	int3   
   1400157f0:	rex push rbp
   1400157f2:	sub    rsp,0x20
   1400157f6:	mov    rbp,rdx
   1400157f9:	lea    rcx,[rbp+0x30]
   1400157fd:	call   QWORD PTR [rip+0x5e25]        # 0x14001b628
   140015803:	add    rsp,0x20
   140015807:	pop    rbp
   140015808:	ret    
   140015809:	int3   
   14001580a:	int3   
   14001580b:	int3   
   14001580c:	int3   
   14001580d:	int3   
   14001580e:	int3   
   14001580f:	int3   
   140015810:	rex push rbp
   140015812:	sub    rsp,0x20
   140015816:	mov    rbp,rdx
   140015819:	lea    rcx,[rbp+0x98]
   140015820:	call   0x140004b70
   140015825:	add    rsp,0x20
   140015829:	pop    rbp
   14001582a:	ret    
   14001582b:	int3   
   14001582c:	int3   
   14001582d:	int3   
   14001582e:	int3   
   14001582f:	int3   
   140015830:	rex push rbp
   140015832:	sub    rsp,0x20
   140015836:	mov    rbp,rdx
   140015839:	lea    rcx,[rbp+0x58]
   14001583d:	call   0x140004b70
   140015842:	add    rsp,0x20
   140015846:	pop    rbp
   140015847:	ret    
   140015848:	int3   
   140015849:	int3   
   14001584a:	int3   
   14001584b:	int3   
   14001584c:	int3   
   14001584d:	int3   
   14001584e:	int3   
   14001584f:	int3   
   140015850:	rex push rbp
   140015852:	sub    rsp,0x20
   140015856:	mov    rbp,rdx
   140015859:	lea    rcx,[rbp+0x80]
   140015860:	call   QWORD PTR [rip+0x5dba]        # 0x14001b620
   140015866:	add    rsp,0x20
   14001586a:	pop    rbp
   14001586b:	ret    
   14001586c:	int3   
   14001586d:	int3   
   14001586e:	int3   
   14001586f:	int3   
   140015870:	rex push rbp
   140015872:	sub    rsp,0x20
   140015876:	mov    rbp,rdx
   140015879:	lea    rcx,[rbp+0x50]
   14001587d:	call   QWORD PTR [rip+0x5d9d]        # 0x14001b620
   140015883:	add    rsp,0x20
   140015887:	pop    rbp
   140015888:	ret    
   140015889:	int3   
   14001588a:	int3   
   14001588b:	int3   
   14001588c:	int3   
   14001588d:	int3   
   14001588e:	int3   
   14001588f:	int3   
   140015890:	rex push rbp
   140015892:	sub    rsp,0x20
   140015896:	mov    rbp,rdx
   140015899:	lea    rcx,[rbp+0x40]
   14001589d:	call   QWORD PTR [rip+0x5d7d]        # 0x14001b620
   1400158a3:	add    rsp,0x20
   1400158a7:	pop    rbp
   1400158a8:	ret    
   1400158a9:	int3   
   1400158aa:	int3   
   1400158ab:	int3   
   1400158ac:	int3   
   1400158ad:	int3   
   1400158ae:	int3   
   1400158af:	int3   
   1400158b0:	rex push rbp
   1400158b2:	sub    rsp,0x20
   1400158b6:	mov    rbp,rdx
   1400158b9:	lea    rcx,[rbp+0x58]
   1400158bd:	call   0x140004b10
   1400158c2:	add    rsp,0x20
   1400158c6:	pop    rbp
   1400158c7:	ret    
   1400158c8:	int3   
   1400158c9:	int3   
   1400158ca:	int3   
   1400158cb:	int3   
   1400158cc:	int3   
   1400158cd:	int3   
   1400158ce:	int3   
   1400158cf:	int3   
   1400158d0:	rex push rbp
   1400158d2:	sub    rsp,0x20
   1400158d6:	mov    rbp,rdx
   1400158d9:	lea    rcx,[rbp+0x58]
   1400158dd:	add    rcx,0x8
   1400158e1:	call   QWORD PTR [rip+0x5d39]        # 0x14001b620
   1400158e7:	add    rsp,0x20
   1400158eb:	pop    rbp
   1400158ec:	ret    
   1400158ed:	int3   
   1400158ee:	int3   
   1400158ef:	int3   
   1400158f0:	rex push rbp
   1400158f2:	sub    rsp,0x20
   1400158f6:	mov    rbp,rdx
   1400158f9:	lea    rcx,[rbp+0x58]
   1400158fd:	add    rcx,0x18
   140015901:	call   QWORD PTR [rip+0x5d21]        # 0x14001b628
   140015907:	add    rsp,0x20
   14001590b:	pop    rbp
   14001590c:	ret    
   14001590d:	int3   
   14001590e:	int3   
   14001590f:	int3   
   140015910:	rex push rbp
   140015912:	sub    rsp,0x20
   140015916:	mov    rbp,rdx
   140015919:	mov    rcx,QWORD PTR [rbp+0x90]
   140015920:	add    rcx,0x8
   140015924:	call   QWORD PTR [rip+0x5cf6]        # 0x14001b620
   14001592a:	add    rsp,0x20
   14001592e:	pop    rbp
   14001592f:	ret    
   140015930:	rex push rbp
   140015932:	sub    rsp,0x20
   140015936:	mov    rbp,rdx
   140015939:	mov    rcx,QWORD PTR [rbp+0x90]
   140015940:	add    rcx,0x10
   140015944:	call   QWORD PTR [rip+0x5cd6]        # 0x14001b620
   14001594a:	add    rsp,0x20
   14001594e:	pop    rbp
   14001594f:	ret    
   140015950:	rex push rbp
   140015952:	sub    rsp,0x20
   140015956:	mov    rbp,rdx
   140015959:	mov    rcx,QWORD PTR [rbp+0x90]
   140015960:	add    rcx,0x18
   140015964:	call   QWORD PTR [rip+0x5cb6]        # 0x14001b620
   14001596a:	add    rsp,0x20
   14001596e:	pop    rbp
   14001596f:	ret    
   140015970:	rex push rbp
   140015972:	sub    rsp,0x20
   140015976:	mov    rbp,rdx
   140015979:	mov    rcx,QWORD PTR [rbp+0x90]
   140015980:	add    rcx,0x20
   140015984:	call   0x1400029e0
   140015989:	add    rsp,0x20
   14001598d:	pop    rbp
   14001598e:	ret    
   14001598f:	int3   
   140015990:	rex push rbp
   140015992:	sub    rsp,0x20
   140015996:	mov    rbp,rdx
   140015999:	lea    rcx,[rbp+0x98]
   1400159a0:	call   0x140004b10
   1400159a5:	add    rsp,0x20
   1400159a9:	pop    rbp
   1400159aa:	ret    
   1400159ab:	int3   
   1400159ac:	int3   
   1400159ad:	int3   
   1400159ae:	int3   
   1400159af:	int3   
   1400159b0:	rex push rbp
   1400159b2:	sub    rsp,0x20
   1400159b6:	mov    rbp,rdx
   1400159b9:	lea    rcx,[rbp+0x98]
   1400159c0:	add    rcx,0x8
   1400159c4:	call   QWORD PTR [rip+0x5c56]        # 0x14001b620
   1400159ca:	add    rsp,0x20
   1400159ce:	pop    rbp
   1400159cf:	ret    
   1400159d0:	rex push rbp
   1400159d2:	sub    rsp,0x20
   1400159d6:	mov    rbp,rdx
   1400159d9:	lea    rcx,[rbp+0x98]
   1400159e0:	add    rcx,0x18
   1400159e4:	call   QWORD PTR [rip+0x5c3e]        # 0x14001b628
   1400159ea:	add    rsp,0x20
   1400159ee:	pop    rbp
   1400159ef:	ret    
   1400159f0:	rex push rbp
   1400159f2:	sub    rsp,0x20
   1400159f6:	mov    rbp,rdx
   1400159f9:	mov    rcx,QWORD PTR [rbp+0x90]
   140015a00:	add    rcx,0x8
   140015a04:	call   QWORD PTR [rip+0x5c16]        # 0x14001b620
   140015a0a:	add    rsp,0x20
   140015a0e:	pop    rbp
   140015a0f:	ret    
   140015a10:	rex push rbp
   140015a12:	sub    rsp,0x20
   140015a16:	mov    rbp,rdx
   140015a19:	mov    rcx,QWORD PTR [rbp+0x90]
   140015a20:	add    rcx,0x10
   140015a24:	call   QWORD PTR [rip+0x5bf6]        # 0x14001b620
   140015a2a:	add    rsp,0x20
   140015a2e:	pop    rbp
   140015a2f:	ret    
   140015a30:	rex push rbp
   140015a32:	sub    rsp,0x20
   140015a36:	mov    rbp,rdx
   140015a39:	mov    rcx,QWORD PTR [rbp+0x90]
   140015a40:	add    rcx,0x18
   140015a44:	call   QWORD PTR [rip+0x5bd6]        # 0x14001b620
   140015a4a:	add    rsp,0x20
   140015a4e:	pop    rbp
   140015a4f:	ret    
   140015a50:	rex push rbp
   140015a52:	sub    rsp,0x20
   140015a56:	mov    rbp,rdx
   140015a59:	mov    rcx,QWORD PTR [rbp+0x90]
   140015a60:	add    rcx,0x20
   140015a64:	call   0x1400029e0
   140015a69:	add    rsp,0x20
   140015a6d:	pop    rbp
   140015a6e:	ret    
   140015a6f:	int3   
   140015a70:	rex push rbp
   140015a72:	sub    rsp,0x20
   140015a76:	mov    rbp,rdx
   140015a79:	lea    rcx,[rbp+0x78]
   140015a7d:	call   QWORD PTR [rip+0x5ba5]        # 0x14001b628
   140015a83:	add    rsp,0x20
   140015a87:	pop    rbp
   140015a88:	ret    
   140015a89:	int3   
   140015a8a:	int3   
   140015a8b:	int3   
   140015a8c:	int3   
   140015a8d:	int3   
   140015a8e:	int3   
   140015a8f:	int3   
   140015a90:	rex push rbp
   140015a92:	sub    rsp,0x20
   140015a96:	mov    rbp,rdx
   140015a99:	lea    rcx,[rbp+0xa0]
   140015aa0:	call   0x140004b70
   140015aa5:	add    rsp,0x20
   140015aa9:	pop    rbp
   140015aaa:	ret    
   140015aab:	int3   
   140015aac:	int3   
   140015aad:	int3   
   140015aae:	int3   
   140015aaf:	int3   
   140015ab0:	rex push rbp
   140015ab2:	sub    rsp,0x20
   140015ab6:	mov    rbp,rdx
   140015ab9:	lea    rcx,[rbp+0x70]
   140015abd:	call   QWORD PTR [rip+0x5b5d]        # 0x14001b620
   140015ac3:	add    rsp,0x20
   140015ac7:	pop    rbp
   140015ac8:	ret    
   140015ac9:	int3   
   140015aca:	int3   
   140015acb:	int3   
   140015acc:	int3   
   140015acd:	int3   
   140015ace:	int3   
   140015acf:	int3   
   140015ad0:	rex push rbp
   140015ad2:	sub    rsp,0x20
   140015ad6:	mov    rbp,rdx
   140015ad9:	lea    rcx,[rbp+0x80]
   140015ae0:	call   QWORD PTR [rip+0x5b3a]        # 0x14001b620
   140015ae6:	add    rsp,0x20
   140015aea:	pop    rbp
   140015aeb:	ret    
   140015aec:	int3   
   140015aed:	int3   
   140015aee:	int3   
   140015aef:	int3   
   140015af0:	rex push rbp
   140015af2:	sub    rsp,0x20
   140015af6:	mov    rbp,rdx
   140015af9:	lea    rcx,[rbp+0x48]
   140015afd:	call   0x1400029e0
   140015b02:	add    rsp,0x20
   140015b06:	pop    rbp
   140015b07:	ret    
   140015b08:	int3   
   140015b09:	int3   
   140015b0a:	int3   
   140015b0b:	int3   
   140015b0c:	int3   
   140015b0d:	int3   
   140015b0e:	int3   
   140015b0f:	int3   
   140015b10:	rex push rbp
   140015b12:	sub    rsp,0x20
   140015b16:	mov    rbp,rdx
   140015b19:	lea    rcx,[rbp+0x58]
   140015b1d:	call   0x1400029e0
   140015b22:	add    rsp,0x20
   140015b26:	pop    rbp
   140015b27:	ret    
   140015b28:	int3   
   140015b29:	int3   
   140015b2a:	int3   
   140015b2b:	int3   
   140015b2c:	int3   
   140015b2d:	int3   
   140015b2e:	int3   
   140015b2f:	int3   
   140015b30:	rex push rbp
   140015b32:	sub    rsp,0x20
   140015b36:	mov    rbp,rdx
   140015b39:	lea    rcx,[rbp+0xa0]
   140015b40:	call   0x140004b10
   140015b45:	add    rsp,0x20
   140015b49:	pop    rbp
   140015b4a:	ret    
   140015b4b:	int3   
   140015b4c:	int3   
   140015b4d:	int3   
   140015b4e:	int3   
   140015b4f:	int3   
   140015b50:	rex push rbp
   140015b52:	sub    rsp,0x20
   140015b56:	mov    rbp,rdx
   140015b59:	lea    rcx,[rbp+0xa0]
   140015b60:	add    rcx,0x8
   140015b64:	call   QWORD PTR [rip+0x5ab6]        # 0x14001b620
   140015b6a:	add    rsp,0x20
   140015b6e:	pop    rbp
   140015b6f:	ret    
   140015b70:	rex push rbp
   140015b72:	sub    rsp,0x20
   140015b76:	mov    rbp,rdx
   140015b79:	lea    rcx,[rbp+0xa0]
   140015b80:	add    rcx,0x18
   140015b84:	call   QWORD PTR [rip+0x5a9e]        # 0x14001b628
   140015b8a:	add    rsp,0x20
   140015b8e:	pop    rbp
   140015b8f:	ret    
   140015b90:	rex push rbp
   140015b92:	sub    rsp,0x20
   140015b96:	mov    rbp,rdx
   140015b99:	mov    rcx,QWORD PTR [rbp+0xf8]
   140015ba0:	add    rcx,0x8
   140015ba4:	call   QWORD PTR [rip+0x5a76]        # 0x14001b620
   140015baa:	add    rsp,0x20
   140015bae:	pop    rbp
   140015baf:	ret    
   140015bb0:	rex push rbp
   140015bb2:	sub    rsp,0x20
   140015bb6:	mov    rbp,rdx
   140015bb9:	mov    rcx,QWORD PTR [rbp+0xf8]
   140015bc0:	add    rcx,0x10
   140015bc4:	call   QWORD PTR [rip+0x5a56]        # 0x14001b620
   140015bca:	add    rsp,0x20
   140015bce:	pop    rbp
   140015bcf:	ret    
   140015bd0:	rex push rbp
   140015bd2:	sub    rsp,0x20
   140015bd6:	mov    rbp,rdx
   140015bd9:	mov    rcx,QWORD PTR [rbp+0xf8]
   140015be0:	add    rcx,0x18
   140015be4:	call   QWORD PTR [rip+0x5a36]        # 0x14001b620
   140015bea:	add    rsp,0x20
   140015bee:	pop    rbp
   140015bef:	ret    
   140015bf0:	rex push rbp
   140015bf2:	sub    rsp,0x20
   140015bf6:	mov    rbp,rdx
   140015bf9:	mov    rcx,QWORD PTR [rbp+0xf8]
   140015c00:	add    rcx,0x20
   140015c04:	call   0x1400029e0
   140015c09:	add    rsp,0x20
   140015c0d:	pop    rbp
   140015c0e:	ret    
   140015c0f:	int3   
   140015c10:	rex push rbp
   140015c12:	sub    rsp,0x20
   140015c16:	mov    rbp,rdx
   140015c19:	lea    rcx,[rbp+0xa0]
   140015c20:	call   0x140004b10
   140015c25:	add    rsp,0x20
   140015c29:	pop    rbp
   140015c2a:	ret    
   140015c2b:	int3   
   140015c2c:	int3   
   140015c2d:	int3   
   140015c2e:	int3   
   140015c2f:	int3   
   140015c30:	rex push rbp
   140015c32:	sub    rsp,0x20
   140015c36:	mov    rbp,rdx
   140015c39:	lea    rcx,[rbp+0xa0]
   140015c40:	add    rcx,0x8
   140015c44:	call   QWORD PTR [rip+0x59d6]        # 0x14001b620
   140015c4a:	add    rsp,0x20
   140015c4e:	pop    rbp
   140015c4f:	ret    
   140015c50:	rex push rbp
   140015c52:	sub    rsp,0x20
   140015c56:	mov    rbp,rdx
   140015c59:	lea    rcx,[rbp+0xa0]
   140015c60:	add    rcx,0x18
   140015c64:	call   QWORD PTR [rip+0x59be]        # 0x14001b628
   140015c6a:	add    rsp,0x20
   140015c6e:	pop    rbp
   140015c6f:	ret    
   140015c70:	rex push rbp
   140015c72:	sub    rsp,0x20
   140015c76:	mov    rbp,rdx
   140015c79:	lea    rcx,[rbp+0xa0]
   140015c80:	call   0x140004b10
   140015c85:	add    rsp,0x20
   140015c89:	pop    rbp
   140015c8a:	ret    
   140015c8b:	int3   
   140015c8c:	int3   
   140015c8d:	int3   
   140015c8e:	int3   
   140015c8f:	int3   
   140015c90:	rex push rbp
   140015c92:	sub    rsp,0x20
   140015c96:	mov    rbp,rdx
   140015c99:	lea    rcx,[rbp+0xa0]
   140015ca0:	add    rcx,0x8
   140015ca4:	call   QWORD PTR [rip+0x5976]        # 0x14001b620
   140015caa:	add    rsp,0x20
   140015cae:	pop    rbp
   140015caf:	ret    
   140015cb0:	rex push rbp
   140015cb2:	sub    rsp,0x20
   140015cb6:	mov    rbp,rdx
   140015cb9:	lea    rcx,[rbp+0xa0]
   140015cc0:	add    rcx,0x18
   140015cc4:	call   QWORD PTR [rip+0x595e]        # 0x14001b628
   140015cca:	add    rsp,0x20
   140015cce:	pop    rbp
   140015ccf:	ret    
   140015cd0:	rex push rbp
   140015cd2:	sub    rsp,0x20
   140015cd6:	mov    rbp,rdx
   140015cd9:	lea    rcx,[rbp+0xd0]
   140015ce0:	call   QWORD PTR [rip+0x5942]        # 0x14001b628
   140015ce6:	add    rsp,0x20
   140015cea:	pop    rbp
   140015ceb:	ret    
   140015cec:	int3   
   140015ced:	int3   
   140015cee:	int3   
   140015cef:	int3   
   140015cf0:	rex push rbp
   140015cf2:	sub    rsp,0x20
   140015cf6:	mov    rbp,rdx
   140015cf9:	lea    rcx,[rbp+0x160]
   140015d00:	call   QWORD PTR [rip+0x5922]        # 0x14001b628
   140015d06:	add    rsp,0x20
   140015d0a:	pop    rbp
   140015d0b:	ret    
   140015d0c:	int3   
   140015d0d:	int3   
   140015d0e:	int3   
   140015d0f:	int3   
   140015d10:	rex push rbp
   140015d12:	sub    rsp,0x20
   140015d16:	mov    rbp,rdx
   140015d19:	lea    rcx,[rbp+0x170]
   140015d20:	call   QWORD PTR [rip+0x5552]        # 0x14001b278
   140015d26:	add    rsp,0x20
   140015d2a:	pop    rbp
   140015d2b:	ret    
   140015d2c:	int3   
   140015d2d:	int3   
   140015d2e:	int3   
   140015d2f:	int3   
   140015d30:	rex push rbp
   140015d32:	sub    rsp,0x20
   140015d36:	mov    rbp,rdx
   140015d39:	lea    rcx,[rbp+0x238]
   140015d40:	call   QWORD PTR [rip+0x56a2]        # 0x14001b3e8
   140015d46:	add    rsp,0x20
   140015d4a:	pop    rbp
   140015d4b:	ret    
   140015d4c:	int3   
   140015d4d:	int3   
   140015d4e:	int3   
   140015d4f:	int3   
   140015d50:	rex push rbp
   140015d52:	sub    rsp,0x20
   140015d56:	mov    rbp,rdx
   140015d59:	lea    rcx,[rbp+0x120]
   140015d60:	call   QWORD PTR [rip+0x58c2]        # 0x14001b628
   140015d66:	add    rsp,0x20
   140015d6a:	pop    rbp
   140015d6b:	ret    
   140015d6c:	int3   
   140015d6d:	int3   
   140015d6e:	int3   
   140015d6f:	int3   
   140015d70:	rex push rbp
   140015d72:	sub    rsp,0x20
   140015d76:	mov    rbp,rdx
   140015d79:	lea    rcx,[rbp+0x158]
   140015d80:	call   QWORD PTR [rip+0x58a2]        # 0x14001b628
   140015d86:	add    rsp,0x20
   140015d8a:	pop    rbp
   140015d8b:	ret    
   140015d8c:	int3   
   140015d8d:	int3   
   140015d8e:	int3   
   140015d8f:	int3   
   140015d90:	rex push rbp
   140015d92:	sub    rsp,0x20
   140015d96:	mov    rbp,rdx
   140015d99:	lea    rcx,[rbp+0x220]
   140015da0:	call   QWORD PTR [rip+0x561a]        # 0x14001b3c0
   140015da6:	add    rsp,0x20
   140015daa:	pop    rbp
   140015dab:	ret    
   140015dac:	int3   
   140015dad:	int3   
   140015dae:	int3   
   140015daf:	int3   
   140015db0:	rex push rbp
   140015db2:	sub    rsp,0x20
   140015db6:	mov    rbp,rdx
   140015db9:	lea    rcx,[rbp+0x228]
   140015dc0:	call   QWORD PTR [rip+0x5862]        # 0x14001b628
   140015dc6:	add    rsp,0x20
   140015dca:	pop    rbp
   140015dcb:	ret    
   140015dcc:	int3   
   140015dcd:	int3   
   140015dce:	int3   
   140015dcf:	int3   
   140015dd0:	rex push rbp
   140015dd2:	sub    rsp,0x20
   140015dd6:	mov    rbp,rdx
   140015dd9:	lea    rcx,[rbp+0x250]
   140015de0:	call   0x140004b70
   140015de5:	add    rsp,0x20
   140015de9:	pop    rbp
   140015dea:	ret    
   140015deb:	int3   
   140015dec:	int3   
   140015ded:	int3   
   140015dee:	int3   
   140015def:	int3   
   140015df0:	rex push rbp
   140015df2:	sub    rsp,0x20
   140015df6:	mov    rbp,rdx
   140015df9:	lea    rcx,[rbp+0x60]
   140015dfd:	call   0x140004980
   140015e02:	add    rsp,0x20
   140015e06:	pop    rbp
   140015e07:	ret    
   140015e08:	int3   
   140015e09:	int3   
   140015e0a:	int3   
   140015e0b:	int3   
   140015e0c:	int3   
   140015e0d:	int3   
   140015e0e:	int3   
   140015e0f:	int3   
   140015e10:	rex push rbp
   140015e12:	sub    rsp,0x20
   140015e16:	mov    rbp,rdx
   140015e19:	lea    rcx,[rbp+0x90]
   140015e20:	call   0x1400029e0
   140015e25:	add    rsp,0x20
   140015e29:	pop    rbp
   140015e2a:	ret    
   140015e2b:	int3   
   140015e2c:	int3   
   140015e2d:	int3   
   140015e2e:	int3   
   140015e2f:	int3   
   140015e30:	rex push rbp
   140015e32:	sub    rsp,0x20
   140015e36:	mov    rbp,rdx
   140015e39:	lea    rcx,[rbp+0x200]
   140015e40:	call   QWORD PTR [rip+0x550a]        # 0x14001b350
   140015e46:	add    rsp,0x20
   140015e4a:	pop    rbp
   140015e4b:	ret    
   140015e4c:	int3   
   140015e4d:	int3   
   140015e4e:	int3   
   140015e4f:	int3   
   140015e50:	rex push rbp
   140015e52:	sub    rsp,0x20
   140015e56:	mov    rbp,rdx
   140015e59:	lea    rcx,[rbp+0x150]
   140015e60:	call   QWORD PTR [rip+0x57c2]        # 0x14001b628
   140015e66:	add    rsp,0x20
   140015e6a:	pop    rbp
   140015e6b:	ret    
   140015e6c:	int3   
   140015e6d:	int3   
   140015e6e:	int3   
   140015e6f:	int3   
   140015e70:	rex push rbp
   140015e72:	sub    rsp,0x20
   140015e76:	mov    rbp,rdx
   140015e79:	lea    rcx,[rbp+0x1f8]
   140015e80:	call   QWORD PTR [rip+0x579a]        # 0x14001b620
   140015e86:	add    rsp,0x20
   140015e8a:	pop    rbp
   140015e8b:	ret    
   140015e8c:	int3   
   140015e8d:	int3   
   140015e8e:	int3   
   140015e8f:	int3   
   140015e90:	rex push rbp
   140015e92:	sub    rsp,0x20
   140015e96:	mov    rbp,rdx
   140015e99:	lea    rcx,[rbp+0x198]
   140015ea0:	call   QWORD PTR [rip+0x577a]        # 0x14001b620
   140015ea6:	add    rsp,0x20
   140015eaa:	pop    rbp
   140015eab:	ret    
   140015eac:	int3   
   140015ead:	int3   
   140015eae:	int3   
   140015eaf:	int3   
   140015eb0:	rex push rbp
   140015eb2:	sub    rsp,0x20
   140015eb6:	mov    rbp,rdx
   140015eb9:	lea    rcx,[rbp+0x1a8]
   140015ec0:	call   QWORD PTR [rip+0x548a]        # 0x14001b350
   140015ec6:	add    rsp,0x20
   140015eca:	pop    rbp
   140015ecb:	ret    
   140015ecc:	int3   
   140015ecd:	int3   
   140015ece:	int3   
   140015ecf:	int3   
   140015ed0:	rex push rbp
   140015ed2:	sub    rsp,0x20
   140015ed6:	mov    rbp,rdx
   140015ed9:	lea    rcx,[rbp+0x118]
   140015ee0:	call   QWORD PTR [rip+0x5742]        # 0x14001b628
   140015ee6:	add    rsp,0x20
   140015eea:	pop    rbp
   140015eeb:	ret    
   140015eec:	int3   
   140015eed:	int3   
   140015eee:	int3   
   140015eef:	int3   
   140015ef0:	rex push rbp
   140015ef2:	sub    rsp,0x20
   140015ef6:	mov    rbp,rdx
   140015ef9:	lea    rcx,[rbp+0x180]
   140015f00:	call   QWORD PTR [rip+0x544a]        # 0x14001b350
   140015f06:	add    rsp,0x20
   140015f0a:	pop    rbp
   140015f0b:	ret    
   140015f0c:	int3   
   140015f0d:	int3   
   140015f0e:	int3   
   140015f0f:	int3   
   140015f10:	rex push rbp
   140015f12:	sub    rsp,0x20
   140015f16:	mov    rbp,rdx
   140015f19:	lea    rcx,[rbp+0x148]
   140015f20:	call   QWORD PTR [rip+0x5702]        # 0x14001b628
   140015f26:	add    rsp,0x20
   140015f2a:	pop    rbp
   140015f2b:	ret    
   140015f2c:	int3   
   140015f2d:	int3   
   140015f2e:	int3   
   140015f2f:	int3   
   140015f30:	rex push rbp
   140015f32:	sub    rsp,0x20
   140015f36:	mov    rbp,rdx
   140015f39:	lea    rcx,[rbp+0x1c8]
   140015f40:	call   QWORD PTR [rip+0x56da]        # 0x14001b620
   140015f46:	add    rsp,0x20
   140015f4a:	pop    rbp
   140015f4b:	ret    
   140015f4c:	int3   
   140015f4d:	int3   
   140015f4e:	int3   
   140015f4f:	int3   
   140015f50:	rex push rbp
   140015f52:	sub    rsp,0x20
   140015f56:	mov    rbp,rdx
   140015f59:	lea    rcx,[rbp+0x218]
   140015f60:	call   QWORD PTR [rip+0x56ba]        # 0x14001b620
   140015f66:	add    rsp,0x20
   140015f6a:	pop    rbp
   140015f6b:	ret    
   140015f6c:	int3   
   140015f6d:	int3   
   140015f6e:	int3   
   140015f6f:	int3   
   140015f70:	rex push rbp
   140015f72:	sub    rsp,0x20
   140015f76:	mov    rbp,rdx
   140015f79:	lea    rcx,[rbp+0x128]
   140015f80:	call   QWORD PTR [rip+0x56a2]        # 0x14001b628
   140015f86:	add    rsp,0x20
   140015f8a:	pop    rbp
   140015f8b:	ret    
   140015f8c:	int3   
   140015f8d:	int3   
   140015f8e:	int3   
   140015f8f:	int3   
   140015f90:	rex push rbp
   140015f92:	sub    rsp,0x20
   140015f96:	mov    rbp,rdx
   140015f99:	lea    rcx,[rbp+0x138]
   140015fa0:	call   QWORD PTR [rip+0x5682]        # 0x14001b628
   140015fa6:	add    rsp,0x20
   140015faa:	pop    rbp
   140015fab:	ret    
   140015fac:	int3   
   140015fad:	int3   
   140015fae:	int3   
   140015faf:	int3   
   140015fb0:	rex push rbp
   140015fb2:	sub    rsp,0x20
   140015fb6:	mov    rbp,rdx
   140015fb9:	lea    rcx,[rbp+0x168]
   140015fc0:	call   QWORD PTR [rip+0x5662]        # 0x14001b628
   140015fc6:	add    rsp,0x20
   140015fca:	pop    rbp
   140015fcb:	ret    
   140015fcc:	int3   
   140015fcd:	int3   
   140015fce:	int3   
   140015fcf:	int3   
   140015fd0:	rex push rbp
   140015fd2:	sub    rsp,0x20
   140015fd6:	mov    rbp,rdx
   140015fd9:	lea    rcx,[rbp+0x230]
   140015fe0:	call   QWORD PTR [rip+0x5642]        # 0x14001b628
   140015fe6:	add    rsp,0x20
   140015fea:	pop    rbp
   140015feb:	ret    
   140015fec:	int3   
   140015fed:	int3   
   140015fee:	int3   
   140015fef:	int3   
   140015ff0:	rex push rbp
   140015ff2:	sub    rsp,0x20
   140015ff6:	mov    rbp,rdx
   140015ff9:	lea    rcx,[rbp+0x108]
   140016000:	call   QWORD PTR [rip+0x5622]        # 0x14001b628
   140016006:	add    rsp,0x20
   14001600a:	pop    rbp
   14001600b:	ret    
   14001600c:	int3   
   14001600d:	int3   
   14001600e:	int3   
   14001600f:	int3   
   140016010:	rex push rbp
   140016012:	sub    rsp,0x20
   140016016:	mov    rbp,rdx
   140016019:	lea    rcx,[rbp+0xd8]
   140016020:	call   QWORD PTR [rip+0x539a]        # 0x14001b3c0
   140016026:	add    rsp,0x20
   14001602a:	pop    rbp
   14001602b:	ret    
   14001602c:	int3   
   14001602d:	int3   
   14001602e:	int3   
   14001602f:	int3   
   140016030:	rex push rbp
   140016032:	sub    rsp,0x20
   140016036:	mov    rbp,rdx
   140016039:	lea    rcx,[rbp+0x110]
   140016040:	call   QWORD PTR [rip+0x55e2]        # 0x14001b628
   140016046:	add    rsp,0x20
   14001604a:	pop    rbp
   14001604b:	ret    
   14001604c:	int3   
   14001604d:	int3   
   14001604e:	int3   
   14001604f:	int3   
   140016050:	rex push rbp
   140016052:	sub    rsp,0x20
   140016056:	mov    rbp,rdx
   140016059:	lea    rcx,[rbp+0x100]
   140016060:	call   QWORD PTR [rip+0x55c2]        # 0x14001b628
   140016066:	add    rsp,0x20
   14001606a:	pop    rbp
   14001606b:	ret    
   14001606c:	int3   
   14001606d:	int3   
   14001606e:	int3   
   14001606f:	int3   
   140016070:	rex push rbp
   140016072:	sub    rsp,0x20
   140016076:	mov    rbp,rdx
   140016079:	lea    rcx,[rbp+0xc8]
   140016080:	call   QWORD PTR [rip+0x533a]        # 0x14001b3c0
   140016086:	add    rsp,0x20
   14001608a:	pop    rbp
   14001608b:	ret    
   14001608c:	int3   
   14001608d:	int3   
   14001608e:	int3   
   14001608f:	int3   
   140016090:	rex push rbp
   140016092:	sub    rsp,0x20
   140016096:	mov    rbp,rdx
   140016099:	mov    eax,DWORD PTR [rbp+0x68]
   14001609c:	and    eax,0x1
   14001609f:	test   eax,eax
   1400160a1:	je     0x1400160b4
   1400160a3:	and    DWORD PTR [rbp+0x68],0xfffffffe
   1400160a7:	lea    rcx,[rbp+0x188]
   1400160ae:	call   QWORD PTR [rip+0x5574]        # 0x14001b628
   1400160b4:	add    rsp,0x20
   1400160b8:	pop    rbp
   1400160b9:	ret    
   1400160ba:	int3   
   1400160bb:	int3   
   1400160bc:	int3   
   1400160bd:	int3   
   1400160be:	int3   
   1400160bf:	int3   
   1400160c0:	rex push rbp
   1400160c2:	sub    rsp,0x20
   1400160c6:	mov    rbp,rdx
   1400160c9:	mov    eax,DWORD PTR [rbp+0x68]
   1400160cc:	and    eax,0x2
   1400160cf:	test   eax,eax
   1400160d1:	je     0x1400160e4
   1400160d3:	and    DWORD PTR [rbp+0x68],0xfffffffd
   1400160d7:	lea    rcx,[rbp+0x1e8]
   1400160de:	call   QWORD PTR [rip+0x5544]        # 0x14001b628
   1400160e4:	add    rsp,0x20
   1400160e8:	pop    rbp
   1400160e9:	ret    
   1400160ea:	int3   
   1400160eb:	int3   
   1400160ec:	int3   
   1400160ed:	int3   
   1400160ee:	int3   
   1400160ef:	int3   
   1400160f0:	rex push rbp
   1400160f2:	sub    rsp,0x20
   1400160f6:	mov    rbp,rdx
   1400160f9:	lea    rcx,[rbp+0x1b0]
   140016100:	call   QWORD PTR [rip+0x551a]        # 0x14001b620
   140016106:	add    rsp,0x20
   14001610a:	pop    rbp
   14001610b:	ret    
   14001610c:	int3   
   14001610d:	int3   
   14001610e:	int3   
   14001610f:	int3   
   140016110:	rex push rbp
   140016112:	sub    rsp,0x20
   140016116:	mov    rbp,rdx
   140016119:	lea    rcx,[rbp+0x1a0]
   140016120:	call   QWORD PTR [rip+0x5502]        # 0x14001b628
   140016126:	add    rsp,0x20
   14001612a:	pop    rbp
   14001612b:	ret    
   14001612c:	int3   
   14001612d:	int3   
   14001612e:	int3   
   14001612f:	int3   
   140016130:	rex push rbp
   140016132:	sub    rsp,0x20
   140016136:	mov    rbp,rdx
   140016139:	lea    rcx,[rbp+0x190]
   140016140:	call   QWORD PTR [rip+0x54da]        # 0x14001b620
   140016146:	add    rsp,0x20
   14001614a:	pop    rbp
   14001614b:	ret    
   14001614c:	int3   
   14001614d:	int3   
   14001614e:	int3   
   14001614f:	int3   
   140016150:	rex push rbp
   140016152:	sub    rsp,0x20
   140016156:	mov    rbp,rdx
   140016159:	lea    rcx,[rbp+0x1e0]
   140016160:	call   QWORD PTR [rip+0x54ba]        # 0x14001b620
   140016166:	add    rsp,0x20
   14001616a:	pop    rbp
   14001616b:	ret    
   14001616c:	int3   
   14001616d:	int3   
   14001616e:	int3   
   14001616f:	int3   
   140016170:	rex push rbp
   140016172:	sub    rsp,0x20
   140016176:	mov    rbp,rdx
   140016179:	lea    rcx,[rbp+0x1d0]
   140016180:	call   QWORD PTR [rip+0x54a2]        # 0x14001b628
   140016186:	add    rsp,0x20
   14001618a:	pop    rbp
   14001618b:	ret    
   14001618c:	int3   
   14001618d:	int3   
   14001618e:	int3   
   14001618f:	int3   
   140016190:	rex push rbp
   140016192:	sub    rsp,0x20
   140016196:	mov    rbp,rdx
   140016199:	lea    rcx,[rbp+0x1c0]
   1400161a0:	call   QWORD PTR [rip+0x547a]        # 0x14001b620
   1400161a6:	add    rsp,0x20
   1400161aa:	pop    rbp
   1400161ab:	ret    
   1400161ac:	int3   
   1400161ad:	int3   
   1400161ae:	int3   
   1400161af:	int3   
   1400161b0:	rex push rbp
   1400161b2:	sub    rsp,0x20
   1400161b6:	mov    rbp,rdx
   1400161b9:	lea    rcx,[rbp+0x140]
   1400161c0:	call   QWORD PTR [rip+0x5462]        # 0x14001b628
   1400161c6:	add    rsp,0x20
   1400161ca:	pop    rbp
   1400161cb:	ret    
   1400161cc:	int3   
   1400161cd:	int3   
   1400161ce:	int3   
   1400161cf:	int3   
   1400161d0:	rex push rbp
   1400161d2:	sub    rsp,0x20
   1400161d6:	mov    rbp,rdx
   1400161d9:	lea    rcx,[rbp+0xa0]
   1400161e0:	call   0x140004b10
   1400161e5:	add    rsp,0x20
   1400161e9:	pop    rbp
   1400161ea:	ret    
   1400161eb:	int3   
   1400161ec:	int3   
   1400161ed:	int3   
   1400161ee:	int3   
   1400161ef:	int3   
   1400161f0:	rex push rbp
   1400161f2:	sub    rsp,0x20
   1400161f6:	mov    rbp,rdx
   1400161f9:	lea    rcx,[rbp+0xa0]
   140016200:	add    rcx,0x8
   140016204:	call   QWORD PTR [rip+0x5416]        # 0x14001b620
   14001620a:	add    rsp,0x20
   14001620e:	pop    rbp
   14001620f:	ret    
   140016210:	rex push rbp
   140016212:	sub    rsp,0x20
   140016216:	mov    rbp,rdx
   140016219:	lea    rcx,[rbp+0xa0]
   140016220:	add    rcx,0x18
   140016224:	call   QWORD PTR [rip+0x53fe]        # 0x14001b628
   14001622a:	add    rsp,0x20
   14001622e:	pop    rbp
   14001622f:	ret    
   140016230:	rex push rbp
   140016232:	sub    rsp,0x20
   140016236:	mov    rbp,rdx
   140016239:	mov    rcx,QWORD PTR [rbp+0xf8]
   140016240:	add    rcx,0x8
   140016244:	call   QWORD PTR [rip+0x53d6]        # 0x14001b620
   14001624a:	add    rsp,0x20
   14001624e:	pop    rbp
   14001624f:	ret    
   140016250:	rex push rbp
   140016252:	sub    rsp,0x20
   140016256:	mov    rbp,rdx
   140016259:	mov    rcx,QWORD PTR [rbp+0xf8]
   140016260:	add    rcx,0x10
   140016264:	call   QWORD PTR [rip+0x53b6]        # 0x14001b620
   14001626a:	add    rsp,0x20
   14001626e:	pop    rbp
   14001626f:	ret    
   140016270:	rex push rbp
   140016272:	sub    rsp,0x20
   140016276:	mov    rbp,rdx
   140016279:	mov    rcx,QWORD PTR [rbp+0xf8]
   140016280:	add    rcx,0x18
   140016284:	call   QWORD PTR [rip+0x5396]        # 0x14001b620
   14001628a:	add    rsp,0x20
   14001628e:	pop    rbp
   14001628f:	ret    
   140016290:	rex push rbp
   140016292:	sub    rsp,0x20
   140016296:	mov    rbp,rdx
   140016299:	mov    rcx,QWORD PTR [rbp+0xf8]
   1400162a0:	add    rcx,0x20
   1400162a4:	call   0x1400029e0
   1400162a9:	add    rsp,0x20
   1400162ad:	pop    rbp
   1400162ae:	ret    
   1400162af:	int3   
   1400162b0:	rex push rbp
   1400162b2:	sub    rsp,0x20
   1400162b6:	mov    rbp,rdx
   1400162b9:	lea    rcx,[rbp+0xa0]
   1400162c0:	call   0x140004b10
   1400162c5:	add    rsp,0x20
   1400162c9:	pop    rbp
   1400162ca:	ret    
   1400162cb:	int3   
   1400162cc:	int3   
   1400162cd:	int3   
   1400162ce:	int3   
   1400162cf:	int3   
   1400162d0:	rex push rbp
   1400162d2:	sub    rsp,0x20
   1400162d6:	mov    rbp,rdx
   1400162d9:	lea    rcx,[rbp+0xa0]
   1400162e0:	add    rcx,0x8
   1400162e4:	call   QWORD PTR [rip+0x5336]        # 0x14001b620
   1400162ea:	add    rsp,0x20
   1400162ee:	pop    rbp
   1400162ef:	ret    
   1400162f0:	rex push rbp
   1400162f2:	sub    rsp,0x20
   1400162f6:	mov    rbp,rdx
   1400162f9:	lea    rcx,[rbp+0xa0]
   140016300:	add    rcx,0x18
   140016304:	call   QWORD PTR [rip+0x531e]        # 0x14001b628
   14001630a:	add    rsp,0x20
   14001630e:	pop    rbp
   14001630f:	ret    
   140016310:	rex push rbp
   140016312:	sub    rsp,0x20
   140016316:	mov    rbp,rdx
   140016319:	mov    rcx,QWORD PTR [rbp+0x48]
   14001631d:	add    rcx,0x8
   140016321:	call   QWORD PTR [rip+0x52f9]        # 0x14001b620
   140016327:	add    rsp,0x20
   14001632b:	pop    rbp
   14001632c:	ret    
   14001632d:	int3   
   14001632e:	int3   
   14001632f:	int3   
   140016330:	rex push rbp
   140016332:	sub    rsp,0x20
   140016336:	mov    rbp,rdx
   140016339:	mov    rcx,QWORD PTR [rbp+0x48]
   14001633d:	add    rcx,0x10
   140016341:	call   QWORD PTR [rip+0x52d9]        # 0x14001b620
   140016347:	add    rsp,0x20
   14001634b:	pop    rbp
   14001634c:	ret    
   14001634d:	int3   
   14001634e:	int3   
   14001634f:	int3   
   140016350:	rex push rbp
   140016352:	sub    rsp,0x20
   140016356:	mov    rbp,rdx
   140016359:	mov    rcx,QWORD PTR [rbp+0x48]
   14001635d:	add    rcx,0x18
   140016361:	call   QWORD PTR [rip+0x52b9]        # 0x14001b620
   140016367:	add    rsp,0x20
   14001636b:	pop    rbp
   14001636c:	ret    
   14001636d:	int3   
   14001636e:	int3   
   14001636f:	int3   
   140016370:	rex push rbp
   140016372:	sub    rsp,0x20
   140016376:	mov    rbp,rdx
   140016379:	mov    rcx,QWORD PTR [rbp+0x48]
   14001637d:	add    rcx,0x20
   140016381:	call   0x1400029e0
   140016386:	add    rsp,0x20
   14001638a:	pop    rbp
   14001638b:	ret    
   14001638c:	int3   
   14001638d:	int3   
   14001638e:	int3   
   14001638f:	int3   
   140016390:	rex push rbp
   140016392:	sub    rsp,0x20
   140016396:	mov    rbp,rdx
   140016399:	mov    rcx,QWORD PTR [rbp+0x28]
   14001639d:	call   0x140013f3e
   1400163a2:	add    rsp,0x20
   1400163a6:	pop    rbp
   1400163a7:	ret    
   1400163a8:	int3   
   1400163a9:	int3   
   1400163aa:	int3   
   1400163ab:	int3   
   1400163ac:	int3   
   1400163ad:	int3   
   1400163ae:	int3   
   1400163af:	int3   
   1400163b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400163b5:	push   rbx
   1400163b6:	push   rbp
   1400163b7:	push   rdi
   1400163b8:	sub    rsp,0x20
   1400163bc:	mov    rbp,rdx
   1400163bf:	mov    rbx,QWORD PTR [rbp+0x50]
   1400163c3:	mov    rdi,QWORD PTR [rbp+0x48]
   1400163c7:	cmp    rbx,rdi
   1400163ca:	je     0x1400163eb
   1400163cc:	nop    DWORD PTR [rax+0x0]
   1400163d0:	sub    rbx,0x8
   1400163d4:	mov    rcx,QWORD PTR [rbx]
   1400163d7:	test   rcx,rcx
   1400163da:	je     0x1400163e6
   1400163dc:	mov    edx,0x1
   1400163e1:	call   0x140004a30
   1400163e6:	cmp    rbx,rdi
   1400163e9:	jne    0x1400163d0
   1400163eb:	xor    edx,edx
   1400163ed:	xor    ecx,ecx
   1400163ef:	call   0x140013f4a
   1400163f4:	nop
   1400163f5:	add    rsp,0x20
   1400163f9:	pop    rdi
   1400163fa:	pop    rbp
   1400163fb:	pop    rbx
   1400163fc:	ret    
   1400163fd:	int3   
   1400163fe:	int3   
   1400163ff:	int3   
   140016400:	mov    QWORD PTR [rsp+0x10],rdx
   140016405:	push   rbp
   140016406:	sub    rsp,0x20
   14001640a:	mov    rbp,rdx
   14001640d:	mov    rcx,QWORD PTR [rbp+0x40]
   140016411:	mov    rcx,QWORD PTR [rcx]
   140016414:	call   QWORD PTR [rip+0x4e76]        # 0x14001b290
   14001641a:	xor    edx,edx
   14001641c:	xor    ecx,ecx
   14001641e:	call   0x140013f4a
   140016423:	nop
   140016424:	add    rsp,0x20
   140016428:	pop    rbp
   140016429:	ret    
   14001642a:	int3   
   14001642b:	int3   
   14001642c:	int3   
   14001642d:	int3   
   14001642e:	int3   
   14001642f:	int3   
   140016430:	rex push rbp
   140016432:	sub    rsp,0x20
   140016436:	mov    rbp,rdx
   140016439:	mov    rcx,QWORD PTR [rbp+0x58]
   14001643d:	add    rcx,0x8
   140016441:	call   QWORD PTR [rip+0x51d9]        # 0x14001b620
   140016447:	add    rsp,0x20
   14001644b:	pop    rbp
   14001644c:	ret    
   14001644d:	int3   
   14001644e:	int3   
   14001644f:	int3   
   140016450:	rex push rbp
   140016452:	sub    rsp,0x20
   140016456:	mov    rbp,rdx
   140016459:	mov    rcx,QWORD PTR [rbp+0x58]
   14001645d:	add    rcx,0x10
   140016461:	call   QWORD PTR [rip+0x51b9]        # 0x14001b620
   140016467:	add    rsp,0x20
   14001646b:	pop    rbp
   14001646c:	ret    
   14001646d:	int3   
   14001646e:	int3   
   14001646f:	int3   
   140016470:	rex push rbp
   140016472:	sub    rsp,0x20
   140016476:	mov    rbp,rdx
   140016479:	mov    rcx,QWORD PTR [rbp+0x58]
   14001647d:	add    rcx,0x18
   140016481:	call   QWORD PTR [rip+0x5199]        # 0x14001b620
   140016487:	add    rsp,0x20
   14001648b:	pop    rbp
   14001648c:	ret    
   14001648d:	int3   
   14001648e:	int3   
   14001648f:	int3   
   140016490:	rex push rbp
   140016492:	sub    rsp,0x20
   140016496:	mov    rbp,rdx
   140016499:	mov    rcx,QWORD PTR [rbp+0x58]
   14001649d:	add    rcx,0x20
   1400164a1:	call   0x1400029e0
   1400164a6:	add    rsp,0x20
   1400164aa:	pop    rbp
   1400164ab:	ret    
   1400164ac:	int3   
   1400164ad:	int3   
   1400164ae:	int3   
   1400164af:	int3   
   1400164b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400164b5:	push   rbx
   1400164b6:	push   rbp
   1400164b7:	sub    rsp,0x28
   1400164bb:	mov    rbp,rdx
   1400164be:	mov    rbx,QWORD PTR [rbp+0x40]
   1400164c2:	mov    rcx,QWORD PTR [rbx]
   1400164c5:	call   QWORD PTR [rip+0x4dc5]        # 0x14001b290
   1400164cb:	mov    r11,QWORD PTR [rbp+0x50]
   1400164cf:	mov    QWORD PTR [rbx],r11
   1400164d2:	xor    edx,edx
   1400164d4:	xor    ecx,ecx
   1400164d6:	call   0x140013f4a
   1400164db:	nop
   1400164dc:	add    rsp,0x28
   1400164e0:	pop    rbp
   1400164e1:	pop    rbx
   1400164e2:	ret    
   1400164e3:	int3   
   1400164e4:	int3   
   1400164e5:	int3   
   1400164e6:	int3   
   1400164e7:	int3   
   1400164e8:	int3   
   1400164e9:	int3   
   1400164ea:	int3   
   1400164eb:	int3   
   1400164ec:	int3   
   1400164ed:	int3   
   1400164ee:	int3   
   1400164ef:	int3   
   1400164f0:	rex push rbp
   1400164f2:	sub    rsp,0x20
   1400164f6:	mov    rbp,rdx
   1400164f9:	lea    rcx,[rbp+0x50]
   1400164fd:	call   0x140006e30
   140016502:	add    rsp,0x20
   140016506:	pop    rbp
   140016507:	ret    
   140016508:	int3   
   140016509:	int3   
   14001650a:	int3   
   14001650b:	int3   
   14001650c:	int3   
   14001650d:	int3   
   14001650e:	int3   
   14001650f:	int3   
   140016510:	rex push rbp
   140016512:	sub    rsp,0x20
   140016516:	mov    rbp,rdx
   140016519:	lea    rcx,[rbp+0x1b8]
   140016520:	call   QWORD PTR [rip+0x5102]        # 0x14001b628
   140016526:	add    rsp,0x20
   14001652a:	pop    rbp
   14001652b:	ret    
   14001652c:	int3   
   14001652d:	int3   
   14001652e:	int3   
   14001652f:	int3   
   140016530:	rex push rbp
   140016532:	sub    rsp,0x20
   140016536:	mov    rbp,rdx
   140016539:	lea    rcx,[rbp+0x198]
   140016540:	call   QWORD PTR [rip+0x50e2]        # 0x14001b628
   140016546:	add    rsp,0x20
   14001654a:	pop    rbp
   14001654b:	ret    
   14001654c:	int3   
   14001654d:	int3   
   14001654e:	int3   
   14001654f:	int3   
   140016550:	rex push rbp
   140016552:	sub    rsp,0x20
   140016556:	mov    rbp,rdx
   140016559:	lea    rcx,[rbp+0x70]
   14001655d:	call   0x140002b70
   140016562:	add    rsp,0x20
   140016566:	pop    rbp
   140016567:	ret    
   140016568:	int3   
   140016569:	int3   
   14001656a:	int3   
   14001656b:	int3   
   14001656c:	int3   
   14001656d:	int3   
   14001656e:	int3   
   14001656f:	int3   
   140016570:	rex push rbp
   140016572:	sub    rsp,0x20
   140016576:	mov    rbp,rdx
   140016579:	lea    rcx,[rbp+0x130]
   140016580:	call   0x140002b70
   140016585:	add    rsp,0x20
   140016589:	pop    rbp
   14001658a:	ret    
   14001658b:	int3   
   14001658c:	int3   
   14001658d:	int3   
   14001658e:	int3   
   14001658f:	int3   
   140016590:	rex push rbp
   140016592:	sub    rsp,0x20
   140016596:	mov    rbp,rdx
   140016599:	lea    rcx,[rbp+0x180]
   1400165a0:	call   QWORD PTR [rip+0x5082]        # 0x14001b628
   1400165a6:	add    rsp,0x20
   1400165aa:	pop    rbp
   1400165ab:	ret    
   1400165ac:	int3   
   1400165ad:	int3   
   1400165ae:	int3   
   1400165af:	int3   
   1400165b0:	rex push rbp
   1400165b2:	sub    rsp,0x20
   1400165b6:	mov    rbp,rdx
   1400165b9:	lea    rcx,[rbp+0x228]
   1400165c0:	call   0x140002b70
   1400165c5:	add    rsp,0x20
   1400165c9:	pop    rbp
   1400165ca:	ret    
   1400165cb:	int3   
   1400165cc:	int3   
   1400165cd:	int3   
   1400165ce:	int3   
   1400165cf:	int3   
   1400165d0:	rex push rbp
   1400165d2:	sub    rsp,0x20
   1400165d6:	mov    rbp,rdx
   1400165d9:	lea    rcx,[rbp+0x228]
   1400165e0:	add    rcx,0x8
   1400165e4:	call   QWORD PTR [rip+0x5036]        # 0x14001b620
   1400165ea:	add    rsp,0x20
   1400165ee:	pop    rbp
   1400165ef:	ret    
   1400165f0:	rex push rbp
   1400165f2:	sub    rsp,0x20
   1400165f6:	mov    rbp,rdx
   1400165f9:	lea    rcx,[rbp+0x228]
   140016600:	add    rcx,0x10
   140016604:	call   QWORD PTR [rip+0x5016]        # 0x14001b620
   14001660a:	add    rsp,0x20
   14001660e:	pop    rbp
   14001660f:	ret    
   140016610:	rex push rbp
   140016612:	sub    rsp,0x20
   140016616:	mov    rbp,rdx
   140016619:	lea    rcx,[rbp+0x228]
   140016620:	add    rcx,0x18
   140016624:	call   QWORD PTR [rip+0x4ff6]        # 0x14001b620
   14001662a:	add    rsp,0x20
   14001662e:	pop    rbp
   14001662f:	ret    
   140016630:	rex push rbp
   140016632:	sub    rsp,0x20
   140016636:	mov    rbp,rdx
   140016639:	lea    rcx,[rbp+0x228]
   140016640:	add    rcx,0x20
   140016644:	call   0x1400029e0
   140016649:	add    rsp,0x20
   14001664d:	pop    rbp
   14001664e:	ret    
   14001664f:	int3   
   140016650:	rex push rbp
   140016652:	sub    rsp,0x20
   140016656:	mov    rbp,rdx
   140016659:	lea    rcx,[rbp+0xc0]
   140016660:	call   QWORD PTR [rip+0x4fc2]        # 0x14001b628
   140016666:	add    rsp,0x20
   14001666a:	pop    rbp
   14001666b:	ret    
   14001666c:	int3   
   14001666d:	int3   
   14001666e:	int3   
   14001666f:	int3   
   140016670:	rex push rbp
   140016672:	sub    rsp,0x20
   140016676:	mov    rbp,rdx
   140016679:	lea    rcx,[rbp+0xd8]
   140016680:	call   0x1400029e0
   140016685:	add    rsp,0x20
   140016689:	pop    rbp
   14001668a:	ret    
   14001668b:	int3   
   14001668c:	int3   
   14001668d:	int3   
   14001668e:	int3   
   14001668f:	int3   
   140016690:	rex push rbp
   140016692:	sub    rsp,0x20
   140016696:	mov    rbp,rdx
   140016699:	lea    rcx,[rbp+0x190]
   1400166a0:	call   QWORD PTR [rip+0x4f82]        # 0x14001b628
   1400166a6:	add    rsp,0x20
   1400166aa:	pop    rbp
   1400166ab:	ret    
   1400166ac:	int3   
   1400166ad:	int3   
   1400166ae:	int3   
   1400166af:	int3   
   1400166b0:	rex push rbp
   1400166b2:	sub    rsp,0x20
   1400166b6:	mov    rbp,rdx
   1400166b9:	lea    rcx,[rbp+0x270]
   1400166c0:	call   0x140002b70
   1400166c5:	add    rsp,0x20
   1400166c9:	pop    rbp
   1400166ca:	ret    
   1400166cb:	int3   
   1400166cc:	int3   
   1400166cd:	int3   
   1400166ce:	int3   
   1400166cf:	int3   
   1400166d0:	rex push rbp
   1400166d2:	sub    rsp,0x20
   1400166d6:	mov    rbp,rdx
   1400166d9:	lea    rcx,[rbp+0x270]
   1400166e0:	add    rcx,0x8
   1400166e4:	call   QWORD PTR [rip+0x4f36]        # 0x14001b620
   1400166ea:	add    rsp,0x20
   1400166ee:	pop    rbp
   1400166ef:	ret    
   1400166f0:	rex push rbp
   1400166f2:	sub    rsp,0x20
   1400166f6:	mov    rbp,rdx
   1400166f9:	lea    rcx,[rbp+0x270]
   140016700:	add    rcx,0x10
   140016704:	call   QWORD PTR [rip+0x4f16]        # 0x14001b620
   14001670a:	add    rsp,0x20
   14001670e:	pop    rbp
   14001670f:	ret    
   140016710:	rex push rbp
   140016712:	sub    rsp,0x20
   140016716:	mov    rbp,rdx
   140016719:	lea    rcx,[rbp+0x270]
   140016720:	add    rcx,0x18
   140016724:	call   QWORD PTR [rip+0x4ef6]        # 0x14001b620
   14001672a:	add    rsp,0x20
   14001672e:	pop    rbp
   14001672f:	ret    
   140016730:	rex push rbp
   140016732:	sub    rsp,0x20
   140016736:	mov    rbp,rdx
   140016739:	lea    rcx,[rbp+0x270]
   140016740:	add    rcx,0x20
   140016744:	call   0x1400029e0
   140016749:	add    rsp,0x20
   14001674d:	pop    rbp
   14001674e:	ret    
   14001674f:	int3   
   140016750:	rex push rbp
   140016752:	sub    rsp,0x20
   140016756:	mov    rbp,rdx
   140016759:	lea    rcx,[rbp+0x130]
   140016760:	add    rcx,0x8
   140016764:	call   QWORD PTR [rip+0x4eb6]        # 0x14001b620
   14001676a:	add    rsp,0x20
   14001676e:	pop    rbp
   14001676f:	ret    
   140016770:	rex push rbp
   140016772:	sub    rsp,0x20
   140016776:	mov    rbp,rdx
   140016779:	lea    rcx,[rbp+0x130]
   140016780:	add    rcx,0x10
   140016784:	call   QWORD PTR [rip+0x4e96]        # 0x14001b620
   14001678a:	add    rsp,0x20
   14001678e:	pop    rbp
   14001678f:	ret    
   140016790:	rex push rbp
   140016792:	sub    rsp,0x20
   140016796:	mov    rbp,rdx
   140016799:	lea    rcx,[rbp+0x130]
   1400167a0:	add    rcx,0x18
   1400167a4:	call   QWORD PTR [rip+0x4e76]        # 0x14001b620
   1400167aa:	add    rsp,0x20
   1400167ae:	pop    rbp
   1400167af:	ret    
   1400167b0:	rex push rbp
   1400167b2:	sub    rsp,0x20
   1400167b6:	mov    rbp,rdx
   1400167b9:	lea    rcx,[rbp+0x130]
   1400167c0:	add    rcx,0x20
   1400167c4:	call   0x1400029e0
   1400167c9:	add    rsp,0x20
   1400167cd:	pop    rbp
   1400167ce:	ret    
   1400167cf:	int3   
   1400167d0:	rex push rbp
   1400167d2:	sub    rsp,0x20
   1400167d6:	mov    rbp,rdx
   1400167d9:	lea    rcx,[rbp+0x70]
   1400167dd:	add    rcx,0x8
   1400167e1:	call   QWORD PTR [rip+0x4e39]        # 0x14001b620
   1400167e7:	add    rsp,0x20
   1400167eb:	pop    rbp
   1400167ec:	ret    
   1400167ed:	int3   
   1400167ee:	int3   
   1400167ef:	int3   
   1400167f0:	rex push rbp
   1400167f2:	sub    rsp,0x20
   1400167f6:	mov    rbp,rdx
   1400167f9:	lea    rcx,[rbp+0x70]
   1400167fd:	add    rcx,0x10
   140016801:	call   QWORD PTR [rip+0x4e19]        # 0x14001b620
   140016807:	add    rsp,0x20
   14001680b:	pop    rbp
   14001680c:	ret    
   14001680d:	int3   
   14001680e:	int3   
   14001680f:	int3   
   140016810:	rex push rbp
   140016812:	sub    rsp,0x20
   140016816:	mov    rbp,rdx
   140016819:	lea    rcx,[rbp+0x70]
   14001681d:	add    rcx,0x18
   140016821:	call   QWORD PTR [rip+0x4df9]        # 0x14001b620
   140016827:	add    rsp,0x20
   14001682b:	pop    rbp
   14001682c:	ret    
   14001682d:	int3   
   14001682e:	int3   
   14001682f:	int3   
   140016830:	rex push rbp
   140016832:	sub    rsp,0x20
   140016836:	mov    rbp,rdx
   140016839:	lea    rcx,[rbp+0x70]
   14001683d:	add    rcx,0x20
   140016841:	call   0x1400029e0
   140016846:	add    rsp,0x20
   14001684a:	pop    rbp
   14001684b:	ret    
   14001684c:	int3   
   14001684d:	int3   
   14001684e:	int3   
   14001684f:	int3   
   140016850:	rex push rbp
   140016852:	sub    rsp,0x20
   140016856:	mov    rbp,rdx
   140016859:	lea    rcx,[rbp+0xd0]
   140016860:	call   0x140006e30
   140016865:	add    rsp,0x20
   140016869:	pop    rbp
   14001686a:	ret    
   14001686b:	int3   
   14001686c:	int3   
   14001686d:	int3   
   14001686e:	int3   
   14001686f:	int3   
   140016870:	rex push rbp
   140016872:	sub    rsp,0x20
   140016876:	mov    rbp,rdx
   140016879:	mov    rcx,QWORD PTR [rbp+0x188]
   140016880:	add    rcx,0x8
   140016884:	call   QWORD PTR [rip+0x4d96]        # 0x14001b620
   14001688a:	add    rsp,0x20
   14001688e:	pop    rbp
   14001688f:	ret    
   140016890:	rex push rbp
   140016892:	sub    rsp,0x20
   140016896:	mov    rbp,rdx
   140016899:	mov    rcx,QWORD PTR [rbp+0x188]
   1400168a0:	add    rcx,0x10
   1400168a4:	call   QWORD PTR [rip+0x4d76]        # 0x14001b620
   1400168aa:	add    rsp,0x20
   1400168ae:	pop    rbp
   1400168af:	ret    
   1400168b0:	rex push rbp
   1400168b2:	sub    rsp,0x20
   1400168b6:	mov    rbp,rdx
   1400168b9:	mov    rcx,QWORD PTR [rbp+0x188]
   1400168c0:	add    rcx,0x18
   1400168c4:	call   QWORD PTR [rip+0x4d56]        # 0x14001b620
   1400168ca:	add    rsp,0x20
   1400168ce:	pop    rbp
   1400168cf:	ret    
   1400168d0:	rex push rbp
   1400168d2:	sub    rsp,0x20
   1400168d6:	mov    rbp,rdx
   1400168d9:	mov    rcx,QWORD PTR [rbp+0x188]
   1400168e0:	add    rcx,0x20
   1400168e4:	call   0x1400029e0
   1400168e9:	add    rsp,0x20
   1400168ed:	pop    rbp
   1400168ee:	ret    
   1400168ef:	int3   
   1400168f0:	rex push rbp
   1400168f2:	sub    rsp,0x20
   1400168f6:	mov    rbp,rdx
   1400168f9:	lea    rcx,[rbp+0xe0]
   140016900:	call   0x140002b70
   140016905:	add    rsp,0x20
   140016909:	pop    rbp
   14001690a:	ret    
   14001690b:	int3   
   14001690c:	int3   
   14001690d:	int3   
   14001690e:	int3   
   14001690f:	int3   
   140016910:	rex push rbp
   140016912:	sub    rsp,0x20
   140016916:	mov    rbp,rdx
   140016919:	lea    rcx,[rbp+0x1c8]
   140016920:	call   QWORD PTR [rip+0x4d02]        # 0x14001b628
   140016926:	add    rsp,0x20
   14001692a:	pop    rbp
   14001692b:	ret    
   14001692c:	int3   
   14001692d:	int3   
   14001692e:	int3   
   14001692f:	int3   
   140016930:	rex push rbp
   140016932:	sub    rsp,0x20
   140016936:	mov    rbp,rdx
   140016939:	lea    rcx,[rbp+0x1d0]
   140016940:	call   0x140002b70
   140016945:	add    rsp,0x20
   140016949:	pop    rbp
   14001694a:	ret    
   14001694b:	int3   
   14001694c:	int3   
   14001694d:	int3   
   14001694e:	int3   
   14001694f:	int3   
   140016950:	rex push rbp
   140016952:	sub    rsp,0x20
   140016956:	mov    rbp,rdx
   140016959:	lea    rcx,[rbp+0xc8]
   140016960:	call   QWORD PTR [rip+0x4cc2]        # 0x14001b628
   140016966:	add    rsp,0x20
   14001696a:	pop    rbp
   14001696b:	ret    
   14001696c:	int3   
   14001696d:	int3   
   14001696e:	int3   
   14001696f:	int3   
   140016970:	rex push rbp
   140016972:	sub    rsp,0x20
   140016976:	mov    rbp,rdx
   140016979:	lea    rcx,[rbp+0x1d0]
   140016980:	add    rcx,0x8
   140016984:	call   QWORD PTR [rip+0x4c96]        # 0x14001b620
   14001698a:	add    rsp,0x20
   14001698e:	pop    rbp
   14001698f:	ret    
   140016990:	rex push rbp
   140016992:	sub    rsp,0x20
   140016996:	mov    rbp,rdx
   140016999:	lea    rcx,[rbp+0x1d0]
   1400169a0:	add    rcx,0x10
   1400169a4:	call   QWORD PTR [rip+0x4c76]        # 0x14001b620
   1400169aa:	add    rsp,0x20
   1400169ae:	pop    rbp
   1400169af:	ret    
   1400169b0:	rex push rbp
   1400169b2:	sub    rsp,0x20
   1400169b6:	mov    rbp,rdx
   1400169b9:	lea    rcx,[rbp+0x1d0]
   1400169c0:	add    rcx,0x18
   1400169c4:	call   QWORD PTR [rip+0x4c56]        # 0x14001b620
   1400169ca:	add    rsp,0x20
   1400169ce:	pop    rbp
   1400169cf:	ret    
   1400169d0:	rex push rbp
   1400169d2:	sub    rsp,0x20
   1400169d6:	mov    rbp,rdx
   1400169d9:	lea    rcx,[rbp+0x1d0]
   1400169e0:	add    rcx,0x20
   1400169e4:	call   0x1400029e0
   1400169e9:	add    rsp,0x20
   1400169ed:	pop    rbp
   1400169ee:	ret    
   1400169ef:	int3   
   1400169f0:	rex push rbp
   1400169f2:	sub    rsp,0x20
   1400169f6:	mov    rbp,rdx
   1400169f9:	lea    rcx,[rbp+0xe0]
   140016a00:	add    rcx,0x8
   140016a04:	call   QWORD PTR [rip+0x4c16]        # 0x14001b620
   140016a0a:	add    rsp,0x20
   140016a0e:	pop    rbp
   140016a0f:	ret    
   140016a10:	rex push rbp
   140016a12:	sub    rsp,0x20
   140016a16:	mov    rbp,rdx
   140016a19:	lea    rcx,[rbp+0xe0]
   140016a20:	add    rcx,0x10
   140016a24:	call   QWORD PTR [rip+0x4bf6]        # 0x14001b620
   140016a2a:	add    rsp,0x20
   140016a2e:	pop    rbp
   140016a2f:	ret    
   140016a30:	rex push rbp
   140016a32:	sub    rsp,0x20
   140016a36:	mov    rbp,rdx
   140016a39:	lea    rcx,[rbp+0xe0]
   140016a40:	add    rcx,0x18
   140016a44:	call   QWORD PTR [rip+0x4bd6]        # 0x14001b620
   140016a4a:	add    rsp,0x20
   140016a4e:	pop    rbp
   140016a4f:	ret    
   140016a50:	rex push rbp
   140016a52:	sub    rsp,0x20
   140016a56:	mov    rbp,rdx
   140016a59:	lea    rcx,[rbp+0xe0]
   140016a60:	add    rcx,0x20
   140016a64:	call   0x1400029e0
   140016a69:	add    rsp,0x20
   140016a6d:	pop    rbp
   140016a6e:	ret    
   140016a6f:	int3   
   140016a70:	rex push rbp
   140016a72:	sub    rsp,0x20
   140016a76:	mov    rbp,rdx
   140016a79:	mov    rcx,QWORD PTR [rbp+0x188]
   140016a80:	add    rcx,0x8
   140016a84:	call   QWORD PTR [rip+0x4b96]        # 0x14001b620
   140016a8a:	add    rsp,0x20
   140016a8e:	pop    rbp
   140016a8f:	ret    
   140016a90:	rex push rbp
   140016a92:	sub    rsp,0x20
   140016a96:	mov    rbp,rdx
   140016a99:	mov    rcx,QWORD PTR [rbp+0x188]
   140016aa0:	add    rcx,0x10
   140016aa4:	call   QWORD PTR [rip+0x4b76]        # 0x14001b620
   140016aaa:	add    rsp,0x20
   140016aae:	pop    rbp
   140016aaf:	ret    
   140016ab0:	rex push rbp
   140016ab2:	sub    rsp,0x20
   140016ab6:	mov    rbp,rdx
   140016ab9:	mov    rcx,QWORD PTR [rbp+0x188]
   140016ac0:	add    rcx,0x18
   140016ac4:	call   QWORD PTR [rip+0x4b56]        # 0x14001b620
   140016aca:	add    rsp,0x20
   140016ace:	pop    rbp
   140016acf:	ret    
   140016ad0:	rex push rbp
   140016ad2:	sub    rsp,0x20
   140016ad6:	mov    rbp,rdx
   140016ad9:	mov    rcx,QWORD PTR [rbp+0x188]
   140016ae0:	add    rcx,0x20
   140016ae4:	call   0x1400029e0
   140016ae9:	add    rsp,0x20
   140016aed:	pop    rbp
   140016aee:	ret    
   140016aef:	int3   
   140016af0:	rex push rbp
   140016af2:	sub    rsp,0x20
   140016af6:	mov    rbp,rdx
   140016af9:	lea    rcx,[rbp+0x58]
   140016afd:	call   QWORD PTR [rip+0x4b25]        # 0x14001b628
   140016b03:	add    rsp,0x20
   140016b07:	pop    rbp
   140016b08:	ret    
   140016b09:	int3   
   140016b0a:	int3   
   140016b0b:	int3   
   140016b0c:	int3   
   140016b0d:	int3   
   140016b0e:	int3   
   140016b0f:	int3   
   140016b10:	rex push rbp
   140016b12:	sub    rsp,0x20
   140016b16:	mov    rbp,rdx
   140016b19:	lea    rcx,[rbp+0x68]
   140016b1d:	call   QWORD PTR [rip+0x4b05]        # 0x14001b628
   140016b23:	add    rsp,0x20
   140016b27:	pop    rbp
   140016b28:	ret    
   140016b29:	int3   
   140016b2a:	int3   
   140016b2b:	int3   
   140016b2c:	int3   
   140016b2d:	int3   
   140016b2e:	int3   
   140016b2f:	int3   
   140016b30:	rex push rbp
   140016b32:	sub    rsp,0x20
   140016b36:	mov    rbp,rdx
   140016b39:	lea    rcx,[rbp+0x58]
   140016b3d:	call   QWORD PTR [rip+0x4ae5]        # 0x14001b628
   140016b43:	add    rsp,0x20
   140016b47:	pop    rbp
   140016b48:	ret    
   140016b49:	int3   
   140016b4a:	int3   
   140016b4b:	int3   
   140016b4c:	int3   
   140016b4d:	int3   
   140016b4e:	int3   
   140016b4f:	int3   
   140016b50:	rex push rbp
   140016b52:	sub    rsp,0x20
   140016b56:	mov    rbp,rdx
   140016b59:	lea    rcx,[rbp+0x60]
   140016b5d:	call   QWORD PTR [rip+0x4ac5]        # 0x14001b628
   140016b63:	add    rsp,0x20
   140016b67:	pop    rbp
   140016b68:	ret    
   140016b69:	int3   
   140016b6a:	int3   
   140016b6b:	int3   
   140016b6c:	int3   
   140016b6d:	int3   
   140016b6e:	int3   
   140016b6f:	int3   
   140016b70:	rex push rbp
   140016b72:	sub    rsp,0x20
   140016b76:	mov    rbp,rdx
   140016b79:	lea    rcx,[rbp+0x60]
   140016b7d:	call   QWORD PTR [rip+0x4aa5]        # 0x14001b628
   140016b83:	add    rsp,0x20
   140016b87:	pop    rbp
   140016b88:	ret    
   140016b89:	int3   
   140016b8a:	int3   
   140016b8b:	int3   
   140016b8c:	int3   
   140016b8d:	int3   
   140016b8e:	int3   
   140016b8f:	int3   
   140016b90:	rex push rbp
   140016b92:	sub    rsp,0x20
   140016b96:	mov    rbp,rdx
   140016b99:	lea    rcx,[rbp+0x20]
   140016b9d:	call   QWORD PTR [rip+0x4a85]        # 0x14001b628
   140016ba3:	add    rsp,0x20
   140016ba7:	pop    rbp
   140016ba8:	ret    
   140016ba9:	int3   
   140016baa:	int3   
   140016bab:	int3   
   140016bac:	int3   
   140016bad:	int3   
   140016bae:	int3   
   140016baf:	int3   
   140016bb0:	rex push rbp
   140016bb2:	sub    rsp,0x20
   140016bb6:	mov    rbp,rdx
   140016bb9:	lea    rcx,[rbp+0x58]
   140016bbd:	call   QWORD PTR [rip+0x4a65]        # 0x14001b628
   140016bc3:	add    rsp,0x20
   140016bc7:	pop    rbp
   140016bc8:	ret    
   140016bc9:	int3   
   140016bca:	int3   
   140016bcb:	int3   
   140016bcc:	int3   
   140016bcd:	int3   
   140016bce:	int3   
   140016bcf:	int3   
   140016bd0:	rex push rbp
   140016bd2:	sub    rsp,0x20
   140016bd6:	mov    rbp,rdx
   140016bd9:	lea    rcx,[rbp+0x60]
   140016bdd:	call   QWORD PTR [rip+0x4a45]        # 0x14001b628
   140016be3:	add    rsp,0x20
   140016be7:	pop    rbp
   140016be8:	ret    
   140016be9:	int3   
   140016bea:	int3   
   140016beb:	int3   
   140016bec:	int3   
   140016bed:	int3   
   140016bee:	int3   
   140016bef:	int3   
   140016bf0:	rex push rbp
   140016bf2:	sub    rsp,0x20
   140016bf6:	mov    rbp,rdx
   140016bf9:	lea    rcx,[rbp+0x40]
   140016bfd:	call   QWORD PTR [rip+0x4a25]        # 0x14001b628
   140016c03:	add    rsp,0x20
   140016c07:	pop    rbp
   140016c08:	ret    
   140016c09:	int3   
   140016c0a:	int3   
   140016c0b:	int3   
   140016c0c:	int3   
   140016c0d:	int3   
   140016c0e:	int3   
   140016c0f:	int3   
   140016c10:	rex push rbp
   140016c12:	sub    rsp,0x20
   140016c16:	mov    rbp,rdx
   140016c19:	lea    rcx,[rbp+0x58]
   140016c1d:	call   QWORD PTR [rip+0x4a05]        # 0x14001b628
   140016c23:	add    rsp,0x20
   140016c27:	pop    rbp
   140016c28:	ret    
   140016c29:	int3   
   140016c2a:	int3   
   140016c2b:	int3   
   140016c2c:	int3   
   140016c2d:	int3   
   140016c2e:	int3   
   140016c2f:	int3   
   140016c30:	rex push rbp
   140016c32:	sub    rsp,0x20
   140016c36:	mov    rbp,rdx
   140016c39:	lea    rcx,[rbp+0x50]
   140016c3d:	call   QWORD PTR [rip+0x49e5]        # 0x14001b628
   140016c43:	add    rsp,0x20
   140016c47:	pop    rbp
   140016c48:	ret    
   140016c49:	int3   
   140016c4a:	int3   
   140016c4b:	int3   
   140016c4c:	int3   
   140016c4d:	int3   
   140016c4e:	int3   
   140016c4f:	int3   
   140016c50:	rex push rbp
   140016c52:	sub    rsp,0x20
   140016c56:	mov    rbp,rdx
   140016c59:	lea    rcx,[rbp+0x60]
   140016c5d:	call   QWORD PTR [rip+0x49c5]        # 0x14001b628
   140016c63:	add    rsp,0x20
   140016c67:	pop    rbp
   140016c68:	ret    
   140016c69:	int3   
   140016c6a:	int3   
   140016c6b:	int3   
   140016c6c:	int3   
   140016c6d:	int3   
   140016c6e:	int3   
   140016c6f:	int3   
   140016c70:	rex push rbp
   140016c72:	sub    rsp,0x20
   140016c76:	mov    rbp,rdx
   140016c79:	lea    rcx,[rbp+0x78]
   140016c7d:	call   QWORD PTR [rip+0x49a5]        # 0x14001b628
   140016c83:	add    rsp,0x20
   140016c87:	pop    rbp
   140016c88:	ret    
   140016c89:	int3   
   140016c8a:	int3   
   140016c8b:	int3   
   140016c8c:	int3   
   140016c8d:	int3   
   140016c8e:	int3   
   140016c8f:	int3   
   140016c90:	rex push rbp
   140016c92:	sub    rsp,0x20
   140016c96:	mov    rbp,rdx
   140016c99:	lea    rcx,[rbp+0x70]
   140016c9d:	call   QWORD PTR [rip+0x497d]        # 0x14001b620
   140016ca3:	add    rsp,0x20
   140016ca7:	pop    rbp
   140016ca8:	ret    
   140016ca9:	int3   
   140016caa:	int3   
   140016cab:	int3   
   140016cac:	int3   
   140016cad:	int3   
   140016cae:	int3   
   140016caf:	int3   
   140016cb0:	rex push rbp
   140016cb2:	sub    rsp,0x20
   140016cb6:	mov    rbp,rdx
   140016cb9:	lea    rcx,[rbp+0x70]
   140016cbd:	call   QWORD PTR [rip+0x495d]        # 0x14001b620
   140016cc3:	add    rsp,0x20
   140016cc7:	pop    rbp
   140016cc8:	ret    
   140016cc9:	int3   
   140016cca:	int3   
   140016ccb:	int3   
   140016ccc:	int3   
   140016ccd:	int3   
   140016cce:	int3   
   140016ccf:	int3   
   140016cd0:	rex push rbp
   140016cd2:	sub    rsp,0x20
   140016cd6:	mov    rbp,rdx
   140016cd9:	lea    rcx,[rbp+0x78]
   140016cdd:	call   QWORD PTR [rip+0x4945]        # 0x14001b628
   140016ce3:	add    rsp,0x20
   140016ce7:	pop    rbp
   140016ce8:	ret    
   140016ce9:	int3   
   140016cea:	int3   
   140016ceb:	int3   
   140016cec:	int3   
   140016ced:	int3   
   140016cee:	int3   
   140016cef:	int3   
   140016cf0:	rex push rbp
   140016cf2:	sub    rsp,0x20
   140016cf6:	mov    rbp,rdx
   140016cf9:	mov    eax,DWORD PTR [rbp+0x70]
   140016cfc:	and    eax,0x1
   140016cff:	test   eax,eax
   140016d01:	je     0x140016d11
   140016d03:	and    DWORD PTR [rbp+0x70],0xfffffffe
   140016d07:	mov    rcx,QWORD PTR [rbp+0x60]
   140016d0b:	call   QWORD PTR [rip+0x4917]        # 0x14001b628
   140016d11:	add    rsp,0x20
   140016d15:	pop    rbp
   140016d16:	ret    
   140016d17:	int3   
   140016d18:	int3   
   140016d19:	int3   
   140016d1a:	int3   
   140016d1b:	int3   
   140016d1c:	int3   
   140016d1d:	int3   
   140016d1e:	int3   
   140016d1f:	int3   
   140016d20:	rex push rbp
   140016d22:	sub    rsp,0x20
   140016d26:	mov    rbp,rdx
   140016d29:	mov    eax,DWORD PTR [rbp+0x88]
   140016d2f:	and    eax,0x1
   140016d32:	test   eax,eax
   140016d34:	je     0x140016d4a
   140016d36:	and    DWORD PTR [rbp+0x88],0xfffffffe
   140016d3d:	mov    rcx,QWORD PTR [rbp+0x80]
   140016d44:	call   QWORD PTR [rip+0x48de]        # 0x14001b628
   140016d4a:	add    rsp,0x20
   140016d4e:	pop    rbp
   140016d4f:	ret    
   140016d50:	rex push rbp
   140016d52:	sub    rsp,0x20
   140016d56:	mov    rbp,rdx
   140016d59:	lea    rcx,[rbp+0x30]
   140016d5d:	call   QWORD PTR [rip+0x48c5]        # 0x14001b628
   140016d63:	add    rsp,0x20
   140016d67:	pop    rbp
   140016d68:	ret    
   140016d69:	int3   
   140016d6a:	int3   
   140016d6b:	int3   
   140016d6c:	int3   
   140016d6d:	int3   
   140016d6e:	int3   
   140016d6f:	int3   
   140016d70:	rex push rbp
   140016d72:	sub    rsp,0x20
   140016d76:	mov    rbp,rdx
   140016d79:	lea    rcx,[rbp+0x28]
   140016d7d:	call   QWORD PTR [rip+0x48a5]        # 0x14001b628
   140016d83:	add    rsp,0x20
   140016d87:	pop    rbp
   140016d88:	ret    
   140016d89:	int3   
   140016d8a:	int3   
   140016d8b:	int3   
   140016d8c:	int3   
   140016d8d:	int3   
   140016d8e:	int3   
   140016d8f:	int3   
   140016d90:	rex push rbp
   140016d92:	sub    rsp,0x20
   140016d96:	mov    rbp,rdx
   140016d99:	lea    rcx,[rbp+0x90]
   140016da0:	call   QWORD PTR [rip+0x4882]        # 0x14001b628
   140016da6:	add    rsp,0x20
   140016daa:	pop    rbp
   140016dab:	ret    
   140016dac:	int3   
   140016dad:	int3   
   140016dae:	int3   
   140016daf:	int3   
   140016db0:	rex push rbp
   140016db2:	sub    rsp,0x20
   140016db6:	mov    rbp,rdx
   140016db9:	lea    rcx,[rbp+0x98]
   140016dc0:	call   QWORD PTR [rip+0x4862]        # 0x14001b628
   140016dc6:	add    rsp,0x20
   140016dca:	pop    rbp
   140016dcb:	ret    
   140016dcc:	int3   
   140016dcd:	int3   
   140016dce:	int3   
   140016dcf:	int3   
   140016dd0:	rex push rbp
   140016dd2:	sub    rsp,0x20
   140016dd6:	mov    rbp,rdx
   140016dd9:	lea    rcx,[rbp+0x20]
   140016ddd:	call   QWORD PTR [rip+0x4845]        # 0x14001b628
   140016de3:	add    rsp,0x20
   140016de7:	pop    rbp
   140016de8:	ret    
   140016de9:	int3   
   140016dea:	int3   
   140016deb:	int3   
   140016dec:	int3   
   140016ded:	int3   
   140016dee:	int3   
   140016def:	int3   
   140016df0:	rex push rbp
   140016df2:	sub    rsp,0x20
   140016df6:	mov    rbp,rdx
   140016df9:	lea    rcx,[rbp+0x38]
   140016dfd:	call   QWORD PTR [rip+0x4825]        # 0x14001b628
   140016e03:	add    rsp,0x20
   140016e07:	pop    rbp
   140016e08:	ret    
   140016e09:	int3   
   140016e0a:	int3   
   140016e0b:	int3   
   140016e0c:	int3   
   140016e0d:	int3   
   140016e0e:	int3   
   140016e0f:	int3   
   140016e10:	rex push rbp
   140016e12:	sub    rsp,0x20
   140016e16:	mov    rbp,rdx
   140016e19:	mov    eax,DWORD PTR [rbp+0xa0]
   140016e1f:	and    eax,0x1
   140016e22:	test   eax,eax
   140016e24:	je     0x140016e3a
   140016e26:	and    DWORD PTR [rbp+0xa0],0xfffffffe
   140016e2d:	mov    rcx,QWORD PTR [rbp+0x90]
   140016e34:	call   QWORD PTR [rip+0x47ee]        # 0x14001b628
   140016e3a:	add    rsp,0x20
   140016e3e:	pop    rbp
   140016e3f:	ret    
   140016e40:	rex push rbp
   140016e42:	sub    rsp,0x20
   140016e46:	mov    rbp,rdx
   140016e49:	lea    rcx,[rbp+0x20]
   140016e4d:	call   QWORD PTR [rip+0x47d5]        # 0x14001b628
   140016e53:	add    rsp,0x20
   140016e57:	pop    rbp
   140016e58:	ret    
   140016e59:	int3   
   140016e5a:	int3   
   140016e5b:	int3   
   140016e5c:	int3   
   140016e5d:	int3   
   140016e5e:	int3   
   140016e5f:	int3   
   140016e60:	rex push rbp
   140016e62:	sub    rsp,0x20
   140016e66:	mov    rbp,rdx
   140016e69:	lea    rcx,[rbp+0x28]
   140016e6d:	call   QWORD PTR [rip+0x47b5]        # 0x14001b628
   140016e73:	add    rsp,0x20
   140016e77:	pop    rbp
   140016e78:	ret    
   140016e79:	int3   
   140016e7a:	int3   
   140016e7b:	int3   
   140016e7c:	int3   
   140016e7d:	int3   
   140016e7e:	int3   
   140016e7f:	int3   
   140016e80:	rex push rbp
   140016e82:	sub    rsp,0x20
   140016e86:	mov    rbp,rdx
   140016e89:	lea    rcx,[rbp+0xa8]
   140016e90:	call   QWORD PTR [rip+0x478a]        # 0x14001b620
   140016e96:	add    rsp,0x20
   140016e9a:	pop    rbp
   140016e9b:	ret    
   140016e9c:	int3   
   140016e9d:	int3   
   140016e9e:	int3   
   140016e9f:	int3   
   140016ea0:	rex push rbp
   140016ea2:	sub    rsp,0x20
   140016ea6:	mov    rbp,rdx
   140016ea9:	lea    rcx,[rbp+0x30]
   140016ead:	call   QWORD PTR [rip+0x4775]        # 0x14001b628
   140016eb3:	add    rsp,0x20
   140016eb7:	pop    rbp
   140016eb8:	ret    
   140016eb9:	int3   
   140016eba:	int3   
   140016ebb:	int3   
   140016ebc:	int3   
   140016ebd:	int3   
   140016ebe:	int3   
   140016ebf:	int3   
   140016ec0:	rex push rbp
   140016ec2:	sub    rsp,0x20
   140016ec6:	mov    rbp,rdx
   140016ec9:	mov    rcx,QWORD PTR [rbp+0x40]
   140016ecd:	call   QWORD PTR [rip+0x48cd]        # 0x14001b7a0
   140016ed3:	add    rsp,0x20
   140016ed7:	pop    rbp
   140016ed8:	ret    
   140016ed9:	int3   
   140016eda:	int3   
   140016edb:	int3   
   140016edc:	int3   
   140016edd:	int3   
   140016ede:	int3   
   140016edf:	int3   
   140016ee0:	rex push rbp
   140016ee2:	sub    rsp,0x20
   140016ee6:	mov    rbp,rdx
   140016ee9:	mov    rcx,QWORD PTR [rbp+0x40]
   140016eed:	add    rcx,0x48
   140016ef1:	call   QWORD PTR [rip+0x4731]        # 0x14001b628
   140016ef7:	add    rsp,0x20
   140016efb:	pop    rbp
   140016efc:	ret    
   140016efd:	int3   
   140016efe:	int3   
   140016eff:	int3   
   140016f00:	rex push rbp
   140016f02:	sub    rsp,0x20
   140016f06:	mov    rbp,rdx
   140016f09:	mov    rcx,QWORD PTR [rbp+0x40]
   140016f0d:	add    rcx,0x50
   140016f11:	call   QWORD PTR [rip+0x4711]        # 0x14001b628
   140016f17:	add    rsp,0x20
   140016f1b:	pop    rbp
   140016f1c:	ret    
   140016f1d:	int3   
   140016f1e:	int3   
   140016f1f:	int3   
   140016f20:	rex push rbp
   140016f22:	sub    rsp,0x20
   140016f26:	mov    rbp,rdx
   140016f29:	mov    rcx,QWORD PTR [rbp+0x40]
   140016f2d:	add    rcx,0x58
   140016f31:	call   QWORD PTR [rip+0x46f1]        # 0x14001b628
   140016f37:	add    rsp,0x20
   140016f3b:	pop    rbp
   140016f3c:	ret    
   140016f3d:	int3   
   140016f3e:	int3   
   140016f3f:	int3   
   140016f40:	rex push rbp
   140016f42:	sub    rsp,0x20
   140016f46:	mov    rbp,rdx
   140016f49:	mov    rcx,QWORD PTR [rbp+0x40]
   140016f4d:	add    rcx,0x60
   140016f51:	call   QWORD PTR [rip+0x46d1]        # 0x14001b628
   140016f57:	add    rsp,0x20
   140016f5b:	pop    rbp
   140016f5c:	ret    
   140016f5d:	int3   
   140016f5e:	int3   
   140016f5f:	int3   
   140016f60:	rex push rbp
   140016f62:	sub    rsp,0x20
   140016f66:	mov    rbp,rdx
   140016f69:	mov    rcx,QWORD PTR [rbp+0x40]
   140016f6d:	add    rcx,0x68
   140016f71:	call   QWORD PTR [rip+0x46b1]        # 0x14001b628
   140016f77:	add    rsp,0x20
   140016f7b:	pop    rbp
   140016f7c:	ret    
   140016f7d:	int3   
   140016f7e:	int3   
   140016f7f:	int3   
   140016f80:	rex push rbp
   140016f82:	sub    rsp,0x20
   140016f86:	mov    rbp,rdx
   140016f89:	mov    rcx,QWORD PTR [rbp+0x40]
   140016f8d:	add    rcx,0x70
   140016f91:	call   0x1400029e0
   140016f96:	add    rsp,0x20
   140016f9a:	pop    rbp
   140016f9b:	ret    
   140016f9c:	int3   
   140016f9d:	int3   
   140016f9e:	int3   
   140016f9f:	int3   
   140016fa0:	rex push rbp
   140016fa2:	sub    rsp,0x20
   140016fa6:	mov    rbp,rdx
   140016fa9:	mov    rcx,QWORD PTR [rbp+0x40]
   140016fad:	add    rcx,0x78
   140016fb1:	call   QWORD PTR [rip+0x4671]        # 0x14001b628
   140016fb7:	add    rsp,0x20
   140016fbb:	pop    rbp
   140016fbc:	ret    
   140016fbd:	int3   
   140016fbe:	int3   
   140016fbf:	int3   
   140016fc0:	rex push rbp
   140016fc2:	sub    rsp,0x20
   140016fc6:	mov    rbp,rdx
   140016fc9:	lea    rcx,[rbp+0x38]
   140016fcd:	call   QWORD PTR [rip+0x4655]        # 0x14001b628
   140016fd3:	add    rsp,0x20
   140016fd7:	pop    rbp
   140016fd8:	ret    
   140016fd9:	int3   
   140016fda:	int3   
   140016fdb:	int3   
   140016fdc:	int3   
   140016fdd:	int3   
   140016fde:	int3   
   140016fdf:	int3   
   140016fe0:	rex push rbp
   140016fe2:	sub    rsp,0x20
   140016fe6:	mov    rbp,rdx
   140016fe9:	lea    rcx,[rbp+0x50]
   140016fed:	call   QWORD PTR [rip+0x4635]        # 0x14001b628
   140016ff3:	add    rsp,0x20
   140016ff7:	pop    rbp
   140016ff8:	ret    
   140016ff9:	int3   
   140016ffa:	int3   
   140016ffb:	int3   
   140016ffc:	int3   
   140016ffd:	int3   
   140016ffe:	int3   
   140016fff:	int3   
   140017000:	rex push rbp
   140017002:	sub    rsp,0x20
   140017006:	mov    rbp,rdx
   140017009:	lea    rcx,[rbp+0x60]
   14001700d:	call   QWORD PTR [rip+0x4615]        # 0x14001b628
   140017013:	add    rsp,0x20
   140017017:	pop    rbp
   140017018:	ret    
   140017019:	int3   
   14001701a:	int3   
   14001701b:	int3   
   14001701c:	int3   
   14001701d:	int3   
   14001701e:	int3   
   14001701f:	int3   
   140017020:	rex push rbp
   140017022:	sub    rsp,0x20
   140017026:	mov    rbp,rdx
   140017029:	lea    rcx,[rbp+0x38]
   14001702d:	call   QWORD PTR [rip+0x45f5]        # 0x14001b628
   140017033:	add    rsp,0x20
   140017037:	pop    rbp
   140017038:	ret    
   140017039:	int3   
   14001703a:	int3   
   14001703b:	int3   
   14001703c:	int3   
   14001703d:	int3   
   14001703e:	int3   
   14001703f:	int3   
   140017040:	rex push rbp
   140017042:	sub    rsp,0x20
   140017046:	mov    rbp,rdx
   140017049:	lea    rcx,[rbp+0x20]
   14001704d:	call   QWORD PTR [rip+0x45d5]        # 0x14001b628
   140017053:	add    rsp,0x20
   140017057:	pop    rbp
   140017058:	ret    
   140017059:	int3   
   14001705a:	int3   
   14001705b:	int3   
   14001705c:	int3   
   14001705d:	int3   
   14001705e:	int3   
   14001705f:	int3   
   140017060:	rex push rbp
   140017062:	sub    rsp,0x20
   140017066:	mov    rbp,rdx
   140017069:	lea    rcx,[rbp+0x20]
   14001706d:	call   QWORD PTR [rip+0x45b5]        # 0x14001b628
   140017073:	add    rsp,0x20
   140017077:	pop    rbp
   140017078:	ret    
   140017079:	int3   
   14001707a:	int3   
   14001707b:	int3   
   14001707c:	int3   
   14001707d:	int3   
   14001707e:	int3   
   14001707f:	int3   
   140017080:	rex push rbp
   140017082:	sub    rsp,0x20
   140017086:	mov    rbp,rdx
   140017089:	lea    rcx,[rbp+0x20]
   14001708d:	call   QWORD PTR [rip+0x4595]        # 0x14001b628
   140017093:	add    rsp,0x20
   140017097:	pop    rbp
   140017098:	ret    
   140017099:	int3   
   14001709a:	int3   
   14001709b:	int3   
   14001709c:	int3   
   14001709d:	int3   
   14001709e:	int3   
   14001709f:	int3   
   1400170a0:	rex push rbp
   1400170a2:	sub    rsp,0x20
   1400170a6:	mov    rbp,rdx
   1400170a9:	lea    rcx,[rbp+0x20]
   1400170ad:	call   QWORD PTR [rip+0x4575]        # 0x14001b628
   1400170b3:	add    rsp,0x20
   1400170b7:	pop    rbp
   1400170b8:	ret    
   1400170b9:	int3   
   1400170ba:	int3   
   1400170bb:	int3   
   1400170bc:	int3   
   1400170bd:	int3   
   1400170be:	int3   
   1400170bf:	int3   
   1400170c0:	rex push rbp
   1400170c2:	sub    rsp,0x20
   1400170c6:	mov    rbp,rdx
   1400170c9:	lea    rcx,[rbp+0x30]
   1400170cd:	call   QWORD PTR [rip+0x4555]        # 0x14001b628
   1400170d3:	add    rsp,0x20
   1400170d7:	pop    rbp
   1400170d8:	ret    
   1400170d9:	int3   
   1400170da:	int3   
   1400170db:	int3   
   1400170dc:	int3   
   1400170dd:	int3   
   1400170de:	int3   
   1400170df:	int3   
   1400170e0:	rex push rbp
   1400170e2:	sub    rsp,0x20
   1400170e6:	mov    rbp,rdx
   1400170e9:	mov    eax,DWORD PTR [rbp+0x38]
   1400170ec:	and    eax,0x1
   1400170ef:	test   eax,eax
   1400170f1:	je     0x140017101
   1400170f3:	and    DWORD PTR [rbp+0x38],0xfffffffe
   1400170f7:	lea    rcx,[rbp+0x20]
   1400170fb:	call   QWORD PTR [rip+0x4527]        # 0x14001b628
   140017101:	add    rsp,0x20
   140017105:	pop    rbp
   140017106:	ret    
   140017107:	int3   
   140017108:	int3   
   140017109:	int3   
   14001710a:	int3   
   14001710b:	int3   
   14001710c:	int3   
   14001710d:	int3   
   14001710e:	int3   
   14001710f:	int3   
   140017110:	rex push rbp
   140017112:	sub    rsp,0x20
   140017116:	mov    rbp,rdx
   140017119:	lea    rcx,[rbp+0x20]
   14001711d:	call   QWORD PTR [rip+0x4505]        # 0x14001b628
   140017123:	add    rsp,0x20
   140017127:	pop    rbp
   140017128:	ret    
   140017129:	int3   
   14001712a:	int3   
   14001712b:	int3   
   14001712c:	int3   
   14001712d:	int3   
   14001712e:	int3   
   14001712f:	int3   
   140017130:	rex push rbp
   140017132:	sub    rsp,0x20
   140017136:	mov    rbp,rdx
   140017139:	lea    rcx,[rbp+0x30]
   14001713d:	call   QWORD PTR [rip+0x44e5]        # 0x14001b628
   140017143:	add    rsp,0x20
   140017147:	pop    rbp
   140017148:	ret    
   140017149:	int3   
   14001714a:	int3   
   14001714b:	int3   
   14001714c:	int3   
   14001714d:	int3   
   14001714e:	int3   
   14001714f:	int3   
   140017150:	rex push rbp
   140017152:	sub    rsp,0x20
   140017156:	mov    rbp,rdx
   140017159:	lea    rcx,[rbp+0x20]
   14001715d:	call   QWORD PTR [rip+0x44c5]        # 0x14001b628
   140017163:	add    rsp,0x20
   140017167:	pop    rbp
   140017168:	ret    
   140017169:	int3   
   14001716a:	int3   
   14001716b:	int3   
   14001716c:	int3   
   14001716d:	int3   
   14001716e:	int3   
   14001716f:	int3   
   140017170:	rex push rbp
   140017172:	sub    rsp,0x20
   140017176:	mov    rbp,rdx
   140017179:	lea    rcx,[rbp+0x20]
   14001717d:	call   QWORD PTR [rip+0x44a5]        # 0x14001b628
   140017183:	add    rsp,0x20
   140017187:	pop    rbp
   140017188:	ret    
   140017189:	int3   
   14001718a:	int3   
   14001718b:	int3   
   14001718c:	int3   
   14001718d:	int3   
   14001718e:	int3   
   14001718f:	int3   
   140017190:	rex push rbp
   140017192:	sub    rsp,0x20
   140017196:	mov    rbp,rdx
   140017199:	lea    rcx,[rbp+0x20]
   14001719d:	call   QWORD PTR [rip+0x4485]        # 0x14001b628
   1400171a3:	add    rsp,0x20
   1400171a7:	pop    rbp
   1400171a8:	ret    
   1400171a9:	int3   
   1400171aa:	int3   
   1400171ab:	int3   
   1400171ac:	int3   
   1400171ad:	int3   
   1400171ae:	int3   
   1400171af:	int3   
   1400171b0:	rex push rbp
   1400171b2:	sub    rsp,0x20
   1400171b6:	mov    rbp,rdx
   1400171b9:	lea    rcx,[rbp+0x30]
   1400171bd:	call   QWORD PTR [rip+0x4465]        # 0x14001b628
   1400171c3:	add    rsp,0x20
   1400171c7:	pop    rbp
   1400171c8:	ret    
   1400171c9:	int3   
   1400171ca:	int3   
   1400171cb:	int3   
   1400171cc:	int3   
   1400171cd:	int3   
   1400171ce:	int3   
   1400171cf:	int3   
   1400171d0:	rex push rbp
   1400171d2:	sub    rsp,0x20
   1400171d6:	mov    rbp,rdx
   1400171d9:	lea    rcx,[rbp+0x50]
   1400171dd:	call   QWORD PTR [rip+0x4445]        # 0x14001b628
   1400171e3:	add    rsp,0x20
   1400171e7:	pop    rbp
   1400171e8:	ret    
   1400171e9:	int3   
   1400171ea:	int3   
   1400171eb:	int3   
   1400171ec:	int3   
   1400171ed:	int3   
   1400171ee:	int3   
   1400171ef:	int3   
   1400171f0:	rex push rbp
   1400171f2:	sub    rsp,0x20
   1400171f6:	mov    rbp,rdx
   1400171f9:	lea    rcx,[rbp+0x60]
   1400171fd:	call   QWORD PTR [rip+0x4425]        # 0x14001b628
   140017203:	add    rsp,0x20
   140017207:	pop    rbp
   140017208:	ret    
   140017209:	int3   
   14001720a:	int3   
   14001720b:	int3   
   14001720c:	int3   
   14001720d:	int3   
   14001720e:	int3   
   14001720f:	int3   
   140017210:	rex push rbp
   140017212:	sub    rsp,0x20
   140017216:	mov    rbp,rdx
   140017219:	lea    rcx,[rbp+0x38]
   14001721d:	call   QWORD PTR [rip+0x4405]        # 0x14001b628
   140017223:	add    rsp,0x20
   140017227:	pop    rbp
   140017228:	ret    
   140017229:	int3   
   14001722a:	int3   
   14001722b:	int3   
   14001722c:	int3   
   14001722d:	int3   
   14001722e:	int3   
   14001722f:	int3   
   140017230:	rex push rbp
   140017232:	sub    rsp,0x20
   140017236:	mov    rbp,rdx
   140017239:	lea    rcx,[rbp+0x40]
   14001723d:	call   QWORD PTR [rip+0x43e5]        # 0x14001b628
   140017243:	add    rsp,0x20
   140017247:	pop    rbp
   140017248:	ret    
   140017249:	int3   
   14001724a:	int3   
   14001724b:	int3   
   14001724c:	int3   
   14001724d:	int3   
   14001724e:	int3   
   14001724f:	int3   
   140017250:	rex push rbp
   140017252:	sub    rsp,0x20
   140017256:	mov    rbp,rdx
   140017259:	lea    rcx,[rbp+0x40]
   14001725d:	call   0x1400029e0
   140017262:	add    rsp,0x20
   140017266:	pop    rbp
   140017267:	ret    
   140017268:	int3   
   140017269:	int3   
   14001726a:	int3   
   14001726b:	int3   
   14001726c:	int3   
   14001726d:	int3   
   14001726e:	int3   
   14001726f:	int3   
   140017270:	rex push rbp
   140017272:	sub    rsp,0x20
   140017276:	mov    rbp,rdx
   140017279:	lea    rcx,[rbp+0x48]
   14001727d:	call   QWORD PTR [rip+0x43a5]        # 0x14001b628
   140017283:	add    rsp,0x20
   140017287:	pop    rbp
   140017288:	ret    
   140017289:	int3   
   14001728a:	int3   
   14001728b:	int3   
   14001728c:	int3   
   14001728d:	int3   
   14001728e:	int3   
   14001728f:	int3   
   140017290:	rex push rbp
   140017292:	sub    rsp,0x20
   140017296:	mov    rbp,rdx
   140017299:	lea    rcx,[rbp+0x58]
   14001729d:	call   0x140002b70
   1400172a2:	add    rsp,0x20
   1400172a6:	pop    rbp
   1400172a7:	ret    
   1400172a8:	int3   
   1400172a9:	int3   
   1400172aa:	int3   
   1400172ab:	int3   
   1400172ac:	int3   
   1400172ad:	int3   
   1400172ae:	int3   
   1400172af:	int3   
   1400172b0:	rex push rbp
   1400172b2:	sub    rsp,0x20
   1400172b6:	mov    rbp,rdx
   1400172b9:	lea    rcx,[rbp+0x58]
   1400172bd:	add    rcx,0x8
   1400172c1:	call   QWORD PTR [rip+0x4359]        # 0x14001b620
   1400172c7:	add    rsp,0x20
   1400172cb:	pop    rbp
   1400172cc:	ret    
   1400172cd:	int3   
   1400172ce:	int3   
   1400172cf:	int3   
   1400172d0:	rex push rbp
   1400172d2:	sub    rsp,0x20
   1400172d6:	mov    rbp,rdx
   1400172d9:	lea    rcx,[rbp+0x58]
   1400172dd:	add    rcx,0x10
   1400172e1:	call   QWORD PTR [rip+0x4339]        # 0x14001b620
   1400172e7:	add    rsp,0x20
   1400172eb:	pop    rbp
   1400172ec:	ret    
   1400172ed:	int3   
   1400172ee:	int3   
   1400172ef:	int3   
   1400172f0:	rex push rbp
   1400172f2:	sub    rsp,0x20
   1400172f6:	mov    rbp,rdx
   1400172f9:	lea    rcx,[rbp+0x58]
   1400172fd:	add    rcx,0x18
   140017301:	call   QWORD PTR [rip+0x4319]        # 0x14001b620
   140017307:	add    rsp,0x20
   14001730b:	pop    rbp
   14001730c:	ret    
   14001730d:	int3   
   14001730e:	int3   
   14001730f:	int3   
   140017310:	rex push rbp
   140017312:	sub    rsp,0x20
   140017316:	mov    rbp,rdx
   140017319:	lea    rcx,[rbp+0x58]
   14001731d:	add    rcx,0x20
   140017321:	call   0x1400029e0
   140017326:	add    rsp,0x20
   14001732a:	pop    rbp
   14001732b:	ret    
   14001732c:	int3   
   14001732d:	int3   
   14001732e:	int3   
   14001732f:	int3   
   140017330:	rex push rbp
   140017332:	sub    rsp,0x20
   140017336:	mov    rbp,rdx
   140017339:	lea    rcx,[rbp+0x40]
   14001733d:	call   0x1400029e0
   140017342:	add    rsp,0x20
   140017346:	pop    rbp
   140017347:	ret    
   140017348:	int3   
   140017349:	int3   
   14001734a:	int3   
   14001734b:	int3   
   14001734c:	int3   
   14001734d:	int3   
   14001734e:	int3   
   14001734f:	int3   
   140017350:	rex push rbp
   140017352:	sub    rsp,0x20
   140017356:	mov    rbp,rdx
   140017359:	lea    rcx,[rbp+0x48]
   14001735d:	call   QWORD PTR [rip+0x42c5]        # 0x14001b628
   140017363:	add    rsp,0x20
   140017367:	pop    rbp
   140017368:	ret    
   140017369:	int3   
   14001736a:	int3   
   14001736b:	int3   
   14001736c:	int3   
   14001736d:	int3   
   14001736e:	int3   
   14001736f:	int3   
   140017370:	rex push rbp
   140017372:	sub    rsp,0x20
   140017376:	mov    rbp,rdx
   140017379:	lea    rcx,[rbp+0x98]
   140017380:	call   0x140002b70
   140017385:	add    rsp,0x20
   140017389:	pop    rbp
   14001738a:	ret    
   14001738b:	int3   
   14001738c:	int3   
   14001738d:	int3   
   14001738e:	int3   
   14001738f:	int3   
   140017390:	rex push rbp
   140017392:	sub    rsp,0x20
   140017396:	mov    rbp,rdx
   140017399:	lea    rcx,[rbp+0x98]
   1400173a0:	add    rcx,0x8
   1400173a4:	call   QWORD PTR [rip+0x4276]        # 0x14001b620
   1400173aa:	add    rsp,0x20
   1400173ae:	pop    rbp
   1400173af:	ret    
   1400173b0:	rex push rbp
   1400173b2:	sub    rsp,0x20
   1400173b6:	mov    rbp,rdx
   1400173b9:	lea    rcx,[rbp+0x98]
   1400173c0:	add    rcx,0x10
   1400173c4:	call   QWORD PTR [rip+0x4256]        # 0x14001b620
   1400173ca:	add    rsp,0x20
   1400173ce:	pop    rbp
   1400173cf:	ret    
   1400173d0:	rex push rbp
   1400173d2:	sub    rsp,0x20
   1400173d6:	mov    rbp,rdx
   1400173d9:	lea    rcx,[rbp+0x98]
   1400173e0:	add    rcx,0x18
   1400173e4:	call   QWORD PTR [rip+0x4236]        # 0x14001b620
   1400173ea:	add    rsp,0x20
   1400173ee:	pop    rbp
   1400173ef:	ret    
   1400173f0:	rex push rbp
   1400173f2:	sub    rsp,0x20
   1400173f6:	mov    rbp,rdx
   1400173f9:	lea    rcx,[rbp+0x98]
   140017400:	add    rcx,0x20
   140017404:	call   0x1400029e0
   140017409:	add    rsp,0x20
   14001740d:	pop    rbp
   14001740e:	ret    
   14001740f:	int3   
   140017410:	rex push rbp
   140017412:	sub    rsp,0x20
   140017416:	mov    rbp,rdx
   140017419:	mov    eax,DWORD PTR [rbp+0x120]
   14001741f:	and    eax,0x1
   140017422:	test   eax,eax
   140017424:	je     0x140017436
   140017426:	and    DWORD PTR [rbp+0x120],0xfffffffe
   14001742d:	lea    rcx,[rbp+0x50]
   140017431:	call   0x140002b70
   140017436:	add    rsp,0x20
   14001743a:	pop    rbp
   14001743b:	ret    
   14001743c:	int3   
   14001743d:	int3   
   14001743e:	int3   
   14001743f:	int3   
   140017440:	rex push rbp
   140017442:	sub    rsp,0x20
   140017446:	mov    rbp,rdx
   140017449:	mov    eax,DWORD PTR [rbp+0x120]
   14001744f:	and    eax,0x2
   140017452:	test   eax,eax
   140017454:	je     0x140017469
   140017456:	and    DWORD PTR [rbp+0x120],0xfffffffd
   14001745d:	mov    rcx,QWORD PTR [rbp+0x128]
   140017464:	call   0x140002b70
   140017469:	add    rsp,0x20
   14001746d:	pop    rbp
   14001746e:	ret    
   14001746f:	int3   
   140017470:	rex push rbp
   140017472:	sub    rsp,0x20
   140017476:	mov    rbp,rdx
   140017479:	lea    rcx,[rbp+0x50]
   14001747d:	add    rcx,0x8
   140017481:	call   QWORD PTR [rip+0x4199]        # 0x14001b620
   140017487:	add    rsp,0x20
   14001748b:	pop    rbp
   14001748c:	ret    
   14001748d:	int3   
   14001748e:	int3   
   14001748f:	int3   
   140017490:	rex push rbp
   140017492:	sub    rsp,0x20
   140017496:	mov    rbp,rdx
   140017499:	lea    rcx,[rbp+0x50]
   14001749d:	add    rcx,0x10
   1400174a1:	call   QWORD PTR [rip+0x4179]        # 0x14001b620
   1400174a7:	add    rsp,0x20
   1400174ab:	pop    rbp
   1400174ac:	ret    
   1400174ad:	int3   
   1400174ae:	int3   
   1400174af:	int3   
   1400174b0:	rex push rbp
   1400174b2:	sub    rsp,0x20
   1400174b6:	mov    rbp,rdx
   1400174b9:	lea    rcx,[rbp+0x50]
   1400174bd:	add    rcx,0x18
   1400174c1:	call   QWORD PTR [rip+0x4159]        # 0x14001b620
   1400174c7:	add    rsp,0x20
   1400174cb:	pop    rbp
   1400174cc:	ret    
   1400174cd:	int3   
   1400174ce:	int3   
   1400174cf:	int3   
   1400174d0:	rex push rbp
   1400174d2:	sub    rsp,0x20
   1400174d6:	mov    rbp,rdx
   1400174d9:	lea    rcx,[rbp+0x50]
   1400174dd:	add    rcx,0x20
   1400174e1:	call   0x1400029e0
   1400174e6:	add    rsp,0x20
   1400174ea:	pop    rbp
   1400174eb:	ret    
   1400174ec:	int3   
   1400174ed:	int3   
   1400174ee:	int3   
   1400174ef:	int3   
   1400174f0:	rex push rbp
   1400174f2:	sub    rsp,0x20
   1400174f6:	mov    rbp,rdx
   1400174f9:	lea    rcx,[rbp+0x30]
   1400174fd:	call   0x140002b70
   140017502:	add    rsp,0x20
   140017506:	pop    rbp
   140017507:	ret    
   140017508:	int3   
   140017509:	int3   
   14001750a:	int3   
   14001750b:	int3   
   14001750c:	int3   
   14001750d:	int3   
   14001750e:	int3   
   14001750f:	int3   
   140017510:	rex push rbp
   140017512:	sub    rsp,0x20
   140017516:	mov    rbp,rdx
   140017519:	lea    rcx,[rbp+0x20]
   14001751d:	call   QWORD PTR [rip+0x4105]        # 0x14001b628
   140017523:	add    rsp,0x20
   140017527:	pop    rbp
   140017528:	ret    
   140017529:	int3   
   14001752a:	int3   
   14001752b:	int3   
   14001752c:	int3   
   14001752d:	int3   
   14001752e:	int3   
   14001752f:	int3   
   140017530:	rex push rbp
   140017532:	sub    rsp,0x20
   140017536:	mov    rbp,rdx
   140017539:	lea    rcx,[rbp+0x30]
   14001753d:	add    rcx,0x8
   140017541:	call   QWORD PTR [rip+0x40d9]        # 0x14001b620
   140017547:	add    rsp,0x20
   14001754b:	pop    rbp
   14001754c:	ret    
   14001754d:	int3   
   14001754e:	int3   
   14001754f:	int3   
   140017550:	rex push rbp
   140017552:	sub    rsp,0x20
   140017556:	mov    rbp,rdx
   140017559:	lea    rcx,[rbp+0x30]
   14001755d:	add    rcx,0x10
   140017561:	call   QWORD PTR [rip+0x40b9]        # 0x14001b620
   140017567:	add    rsp,0x20
   14001756b:	pop    rbp
   14001756c:	ret    
   14001756d:	int3   
   14001756e:	int3   
   14001756f:	int3   
   140017570:	rex push rbp
   140017572:	sub    rsp,0x20
   140017576:	mov    rbp,rdx
   140017579:	lea    rcx,[rbp+0x30]
   14001757d:	add    rcx,0x18
   140017581:	call   QWORD PTR [rip+0x4099]        # 0x14001b620
   140017587:	add    rsp,0x20
   14001758b:	pop    rbp
   14001758c:	ret    
   14001758d:	int3   
   14001758e:	int3   
   14001758f:	int3   
   140017590:	rex push rbp
   140017592:	sub    rsp,0x20
   140017596:	mov    rbp,rdx
   140017599:	lea    rcx,[rbp+0x30]
   14001759d:	add    rcx,0x20
   1400175a1:	call   0x1400029e0
   1400175a6:	add    rsp,0x20
   1400175aa:	pop    rbp
   1400175ab:	ret    
   1400175ac:	int3   
   1400175ad:	int3   
   1400175ae:	int3   
   1400175af:	int3   
   1400175b0:	rex push rbp
   1400175b2:	sub    rsp,0x20
   1400175b6:	mov    rbp,rdx
   1400175b9:	lea    rcx,[rbp+0x30]
   1400175bd:	add    rcx,0x8
   1400175c1:	call   QWORD PTR [rip+0x4059]        # 0x14001b620
   1400175c7:	add    rsp,0x20
   1400175cb:	pop    rbp
   1400175cc:	ret    
   1400175cd:	int3   
   1400175ce:	int3   
   1400175cf:	int3   
   1400175d0:	rex push rbp
   1400175d2:	sub    rsp,0x20
   1400175d6:	mov    rbp,rdx
   1400175d9:	lea    rcx,[rbp+0x30]
   1400175dd:	add    rcx,0x10
   1400175e1:	call   QWORD PTR [rip+0x4039]        # 0x14001b620
   1400175e7:	add    rsp,0x20
   1400175eb:	pop    rbp
   1400175ec:	ret    
   1400175ed:	int3   
   1400175ee:	int3   
   1400175ef:	int3   
   1400175f0:	rex push rbp
   1400175f2:	sub    rsp,0x20
   1400175f6:	mov    rbp,rdx
   1400175f9:	lea    rcx,[rbp+0x30]
   1400175fd:	add    rcx,0x18
   140017601:	call   QWORD PTR [rip+0x4019]        # 0x14001b620
   140017607:	add    rsp,0x20
   14001760b:	pop    rbp
   14001760c:	ret    
   14001760d:	int3   
   14001760e:	int3   
   14001760f:	int3   
   140017610:	rex push rbp
   140017612:	sub    rsp,0x20
   140017616:	mov    rbp,rdx
   140017619:	lea    rcx,[rbp+0x30]
   14001761d:	add    rcx,0x20
   140017621:	call   0x1400029e0
   140017626:	add    rsp,0x20
   14001762a:	pop    rbp
   14001762b:	ret    
   14001762c:	int3   
   14001762d:	int3   
   14001762e:	int3   
   14001762f:	int3   
   140017630:	rex push rbp
   140017632:	sub    rsp,0x20
   140017636:	mov    rbp,rdx
   140017639:	lea    rcx,[rbp+0x50]
   14001763d:	call   0x1400029e0
   140017642:	add    rsp,0x20
   140017646:	pop    rbp
   140017647:	ret    
   140017648:	int3   
   140017649:	int3   
   14001764a:	int3   
   14001764b:	int3   
   14001764c:	int3   
   14001764d:	int3   
   14001764e:	int3   
   14001764f:	int3   
   140017650:	rex push rbp
   140017652:	sub    rsp,0x20
   140017656:	mov    rbp,rdx
   140017659:	mov    rdx,QWORD PTR [rbp+0x30]
   14001765d:	add    rdx,0x18
   140017661:	mov    rcx,QWORD PTR [rbp+0x40]
   140017665:	call   0x140006bc0
   14001766a:	add    rsp,0x20
   14001766e:	pop    rbp
   14001766f:	ret    
   140017670:	mov    QWORD PTR [rsp+0x10],rdx
   140017675:	push   rbp
   140017676:	sub    rsp,0x30
   14001767a:	mov    rbp,rdx
   14001767d:	mov    rcx,QWORD PTR [rbp+0x30]
   140017681:	add    rcx,0x18
   140017685:	xor    edx,edx
   140017687:	call   0x140004a30
   14001768c:	xor    edx,edx
   14001768e:	xor    ecx,ecx
   140017690:	call   0x140013f4a
   140017695:	nop
   140017696:	add    rsp,0x30
   14001769a:	pop    rbp
   14001769b:	ret    
   14001769c:	int3   
   14001769d:	int3   
   14001769e:	int3   
   14001769f:	int3   
   1400176a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400176a5:	push   rbp
   1400176a6:	sub    rsp,0x30
   1400176aa:	mov    rbp,rdx
   1400176ad:	mov    rdx,QWORD PTR [rbp+0x30]
   1400176b1:	mov    rcx,QWORD PTR [rbp+0x60]
   1400176b5:	call   QWORD PTR [rip+0x3efd]        # 0x14001b5b8
   1400176bb:	xor    edx,edx
   1400176bd:	xor    ecx,ecx
   1400176bf:	call   0x140013f4a
   1400176c4:	nop
   1400176c5:	add    rsp,0x30
   1400176c9:	pop    rbp
   1400176ca:	ret    
   1400176cb:	int3   
   1400176cc:	int3   
   1400176cd:	int3   
   1400176ce:	int3   
   1400176cf:	int3   
   1400176d0:	rex push rbp
   1400176d2:	sub    rsp,0x20
   1400176d6:	mov    rbp,rdx
   1400176d9:	mov    rdx,QWORD PTR [rbp+0x30]
   1400176dd:	add    rdx,0x20
   1400176e1:	mov    rcx,QWORD PTR [rbp+0x40]
   1400176e5:	call   0x140006bc0
   1400176ea:	add    rsp,0x20
   1400176ee:	pop    rbp
   1400176ef:	ret    
   1400176f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400176f5:	push   rbp
   1400176f6:	sub    rsp,0x30
   1400176fa:	mov    rbp,rdx
   1400176fd:	xor    edx,edx
   1400176ff:	xor    ecx,ecx
   140017701:	call   0x140013f4a
   140017706:	nop
   140017707:	add    rsp,0x30
   14001770b:	pop    rbp
   14001770c:	ret    
   14001770d:	int3   
   14001770e:	int3   
   14001770f:	int3   
   140017710:	mov    QWORD PTR [rsp+0x10],rdx
   140017715:	push   rbp
   140017716:	sub    rsp,0x30
   14001771a:	mov    rbp,rdx
   14001771d:	mov    rdx,QWORD PTR [rbp+0x30]
   140017721:	mov    rcx,QWORD PTR [rbp+0x60]
   140017725:	call   QWORD PTR [rip+0x3e8d]        # 0x14001b5b8
   14001772b:	xor    edx,edx
   14001772d:	xor    ecx,ecx
   14001772f:	call   0x140013f4a
   140017734:	nop
   140017735:	add    rsp,0x30
   140017739:	pop    rbp
   14001773a:	ret    
   14001773b:	int3   
   14001773c:	int3   
   14001773d:	int3   
   14001773e:	int3   
   14001773f:	int3   
   140017740:	rex push rbp
   140017742:	sub    rsp,0x20
   140017746:	mov    rbp,rdx
   140017749:	mov    rcx,QWORD PTR [rbp+0x48]
   14001774d:	call   0x140013f3e
   140017752:	add    rsp,0x20
   140017756:	pop    rbp
   140017757:	ret    
   140017758:	int3   
   140017759:	int3   
   14001775a:	int3   
   14001775b:	int3   
   14001775c:	int3   
   14001775d:	int3   
   14001775e:	int3   
   14001775f:	int3   
   140017760:	mov    QWORD PTR [rsp+0x10],rdx
   140017765:	push   rbx
   140017766:	push   rbp
   140017767:	sub    rsp,0x28
   14001776b:	mov    rbp,rdx
   14001776e:	mov    rbx,QWORD PTR [rbp+0x50]
   140017772:	mov    rcx,QWORD PTR [rbx]
   140017775:	call   QWORD PTR [rip+0x3b15]        # 0x14001b290
   14001777b:	mov    r11,QWORD PTR [rbp+0x68]
   14001777f:	mov    QWORD PTR [rbx],r11
   140017782:	xor    edx,edx
   140017784:	xor    ecx,ecx
   140017786:	call   0x140013f4a
   14001778b:	nop
   14001778c:	add    rsp,0x28
   140017790:	pop    rbp
   140017791:	pop    rbx
   140017792:	ret    
   140017793:	int3   
   140017794:	int3   
   140017795:	int3   
   140017796:	int3   
   140017797:	int3   
   140017798:	int3   
   140017799:	int3   
   14001779a:	int3   
   14001779b:	int3   
   14001779c:	int3   
   14001779d:	int3   
   14001779e:	int3   
   14001779f:	int3   
   1400177a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400177a5:	push   rbx
   1400177a6:	push   rbp
   1400177a7:	sub    rsp,0x28
   1400177ab:	mov    rbp,rdx
   1400177ae:	mov    rbx,QWORD PTR [rbp+0x50]
   1400177b2:	mov    rdx,QWORD PTR [rbx]
   1400177b5:	movsxd rcx,DWORD PTR [rdx+0x8]
   1400177b9:	movsxd rax,DWORD PTR [rbp+0x58]
   1400177bd:	add    rax,rcx
   1400177c0:	lea    r8,[rdx+rax*8+0x10]
   1400177c5:	lea    rdx,[rdx+rcx*8+0x10]
   1400177ca:	mov    rcx,rbx
   1400177cd:	call   0x140006c90
   1400177d2:	mov    rcx,QWORD PTR [rbx]
   1400177d5:	call   QWORD PTR [rip+0x3ab5]        # 0x14001b290
   1400177db:	mov    r11,QWORD PTR [rbp+0x68]
   1400177df:	mov    QWORD PTR [rbx],r11
   1400177e2:	xor    edx,edx
   1400177e4:	xor    ecx,ecx
   1400177e6:	call   0x140013f4a
   1400177eb:	nop
   1400177ec:	add    rsp,0x28
   1400177f0:	pop    rbp
   1400177f1:	pop    rbx
   1400177f2:	ret    
   1400177f3:	int3   
   1400177f4:	int3   
   1400177f5:	int3   
   1400177f6:	int3   
   1400177f7:	int3   
   1400177f8:	int3   
   1400177f9:	int3   
   1400177fa:	int3   
   1400177fb:	int3   
   1400177fc:	int3   
   1400177fd:	int3   
   1400177fe:	int3   
   1400177ff:	int3   
   140017800:	mov    QWORD PTR [rsp+0x10],rdx
   140017805:	push   rbp
   140017806:	sub    rsp,0x20
   14001780a:	mov    rbp,rdx
   14001780d:	mov    rax,QWORD PTR [rbp+0x40]
   140017811:	mov    rcx,QWORD PTR [rax]
   140017814:	dec    DWORD PTR [rcx+0xc]
   140017817:	xor    edx,edx
   140017819:	xor    ecx,ecx
   14001781b:	call   0x140013f4a
   140017820:	nop
   140017821:	add    rsp,0x20
   140017825:	pop    rbp
   140017826:	ret    
   140017827:	int3   
   140017828:	int3   
   140017829:	int3   
   14001782a:	int3   
   14001782b:	int3   
   14001782c:	int3   
   14001782d:	int3   
   14001782e:	int3   
   14001782f:	int3   
   140017830:	mov    QWORD PTR [rsp+0x10],rdx
   140017835:	push   rbp
   140017836:	sub    rsp,0x20
   14001783a:	mov    rbp,rdx
   14001783d:	mov    rax,QWORD PTR [rbp+0x40]
   140017841:	mov    rcx,QWORD PTR [rax]
   140017844:	dec    DWORD PTR [rcx+0xc]
   140017847:	xor    edx,edx
   140017849:	xor    ecx,ecx
   14001784b:	call   0x140013f4a
   140017850:	nop
   140017851:	add    rsp,0x20
   140017855:	pop    rbp
   140017856:	ret    
   140017857:	int3   
   140017858:	int3   
   140017859:	int3   
   14001785a:	int3   
   14001785b:	int3   
   14001785c:	int3   
   14001785d:	int3   
   14001785e:	int3   
   14001785f:	int3   
   140017860:	rex push rbp
   140017862:	sub    rsp,0x20
   140017866:	mov    rbp,rdx
   140017869:	mov    eax,DWORD PTR [rbp+0x60]
   14001786c:	and    eax,0x1
   14001786f:	test   eax,eax
   140017871:	je     0x140017880
   140017873:	and    DWORD PTR [rbp+0x60],0xfffffffe
   140017877:	mov    rcx,QWORD PTR [rbp+0x68]
   14001787b:	call   0x140006e30
   140017880:	add    rsp,0x20
   140017884:	pop    rbp
   140017885:	ret    
   140017886:	int3   
   140017887:	int3   
   140017888:	int3   
   140017889:	int3   
   14001788a:	int3   
   14001788b:	int3   
   14001788c:	int3   
   14001788d:	int3   
   14001788e:	int3   
   14001788f:	int3   
   140017890:	rex push rbp
   140017892:	sub    rsp,0x20
   140017896:	mov    rbp,rdx
   140017899:	mov    eax,DWORD PTR [rbp+0x58]
   14001789c:	and    eax,0x1
   14001789f:	test   eax,eax
   1400178a1:	je     0x1400178b0
   1400178a3:	and    DWORD PTR [rbp+0x58],0xfffffffe
   1400178a7:	mov    rcx,QWORD PTR [rbp+0x50]
   1400178ab:	call   0x1400029e0
   1400178b0:	add    rsp,0x20
   1400178b4:	pop    rbp
   1400178b5:	ret    
   1400178b6:	int3   
   1400178b7:	int3   
   1400178b8:	int3   
   1400178b9:	int3   
   1400178ba:	int3   
   1400178bb:	int3   
   1400178bc:	int3   
   1400178bd:	int3   
   1400178be:	int3   
   1400178bf:	int3   
   1400178c0:	rex push rbp
   1400178c2:	sub    rsp,0x20
   1400178c6:	mov    rbp,rdx
   1400178c9:	lea    rcx,[rbp+0x20]
   1400178cd:	call   QWORD PTR [rip+0x3d55]        # 0x14001b628
   1400178d3:	add    rsp,0x20
   1400178d7:	pop    rbp
   1400178d8:	ret    
   1400178d9:	int3   
   1400178da:	int3   
   1400178db:	int3   
   1400178dc:	int3   
   1400178dd:	int3   
   1400178de:	int3   
   1400178df:	int3   
   1400178e0:	rex push rbp
   1400178e2:	sub    rsp,0x20
   1400178e6:	mov    rbp,rdx
   1400178e9:	lea    rcx,[rbp+0x48]
   1400178ed:	call   0x140004b10
   1400178f2:	add    rsp,0x20
   1400178f6:	pop    rbp
   1400178f7:	ret    
   1400178f8:	int3   
   1400178f9:	int3   
   1400178fa:	int3   
   1400178fb:	int3   
   1400178fc:	int3   
   1400178fd:	int3   
   1400178fe:	int3   
   1400178ff:	int3   
   140017900:	rex push rbp
   140017902:	sub    rsp,0x20
   140017906:	mov    rbp,rdx
   140017909:	mov    eax,DWORD PTR [rbp+0x40]
   14001790c:	and    eax,0x1
   14001790f:	test   eax,eax
   140017911:	je     0x140017921
   140017913:	and    DWORD PTR [rbp+0x40],0xfffffffe
   140017917:	lea    rcx,[rbp+0x68]
   14001791b:	call   QWORD PTR [rip+0x3d07]        # 0x14001b628
   140017921:	add    rsp,0x20
   140017925:	pop    rbp
   140017926:	ret    
   140017927:	int3   
   140017928:	int3   
   140017929:	int3   
   14001792a:	int3   
   14001792b:	int3   
   14001792c:	int3   
   14001792d:	int3   
   14001792e:	int3   
   14001792f:	int3   
   140017930:	rex push rbp
   140017932:	sub    rsp,0x20
   140017936:	mov    rbp,rdx
   140017939:	mov    eax,DWORD PTR [rbp+0x40]
   14001793c:	and    eax,0x2
   14001793f:	test   eax,eax
   140017941:	je     0x140017954
   140017943:	and    DWORD PTR [rbp+0x40],0xfffffffd
   140017947:	lea    rcx,[rbp+0x88]
   14001794e:	call   QWORD PTR [rip+0x3cd4]        # 0x14001b628
   140017954:	add    rsp,0x20
   140017958:	pop    rbp
   140017959:	ret    
   14001795a:	int3   
   14001795b:	int3   
   14001795c:	int3   
   14001795d:	int3   
   14001795e:	int3   
   14001795f:	int3   
   140017960:	rex push rbp
   140017962:	sub    rsp,0x20
   140017966:	mov    rbp,rdx
   140017969:	lea    rcx,[rbp+0xb8]
   140017970:	call   QWORD PTR [rip+0x3caa]        # 0x14001b620
   140017976:	add    rsp,0x20
   14001797a:	pop    rbp
   14001797b:	ret    
   14001797c:	int3   
   14001797d:	int3   
   14001797e:	int3   
   14001797f:	int3   
   140017980:	rex push rbp
   140017982:	sub    rsp,0x20
   140017986:	mov    rbp,rdx
   140017989:	lea    rcx,[rbp+0x58]
   14001798d:	call   QWORD PTR [rip+0x3c95]        # 0x14001b628
   140017993:	add    rsp,0x20
   140017997:	pop    rbp
   140017998:	ret    
   140017999:	int3   
   14001799a:	int3   
   14001799b:	int3   
   14001799c:	int3   
   14001799d:	int3   
   14001799e:	int3   
   14001799f:	int3   
   1400179a0:	rex push rbp
   1400179a2:	sub    rsp,0x20
   1400179a6:	mov    rbp,rdx
   1400179a9:	lea    rcx,[rbp+0x78]
   1400179ad:	call   QWORD PTR [rip+0x3c75]        # 0x14001b628
   1400179b3:	add    rsp,0x20
   1400179b7:	pop    rbp
   1400179b8:	ret    
   1400179b9:	int3   
   1400179ba:	int3   
   1400179bb:	int3   
   1400179bc:	int3   
   1400179bd:	int3   
   1400179be:	int3   
   1400179bf:	int3   
   1400179c0:	rex push rbp
   1400179c2:	sub    rsp,0x20
   1400179c6:	mov    rbp,rdx
   1400179c9:	lea    rcx,[rbp+0x60]
   1400179cd:	call   QWORD PTR [rip+0x3c55]        # 0x14001b628
   1400179d3:	add    rsp,0x20
   1400179d7:	pop    rbp
   1400179d8:	ret    
   1400179d9:	int3   
   1400179da:	int3   
   1400179db:	int3   
   1400179dc:	int3   
   1400179dd:	int3   
   1400179de:	int3   
   1400179df:	int3   
   1400179e0:	rex push rbp
   1400179e2:	sub    rsp,0x20
   1400179e6:	mov    rbp,rdx
   1400179e9:	lea    rcx,[rbp+0x48]
   1400179ed:	call   0x1400029e0
   1400179f2:	add    rsp,0x20
   1400179f6:	pop    rbp
   1400179f7:	ret    
   1400179f8:	int3   
   1400179f9:	int3   
   1400179fa:	int3   
   1400179fb:	int3   
   1400179fc:	int3   
   1400179fd:	int3   
   1400179fe:	int3   
   1400179ff:	int3   
   140017a00:	rex push rbp
   140017a02:	sub    rsp,0x20
   140017a06:	mov    rbp,rdx
   140017a09:	lea    rcx,[rbp+0x98]
   140017a10:	call   QWORD PTR [rip+0x3c12]        # 0x14001b628
   140017a16:	add    rsp,0x20
   140017a1a:	pop    rbp
   140017a1b:	ret    
   140017a1c:	int3   
   140017a1d:	int3   
   140017a1e:	int3   
   140017a1f:	int3   
   140017a20:	rex push rbp
   140017a22:	sub    rsp,0x20
   140017a26:	mov    rbp,rdx
   140017a29:	lea    rcx,[rbp+0xe8]
   140017a30:	call   QWORD PTR [rip+0x3bea]        # 0x14001b620
   140017a36:	add    rsp,0x20
   140017a3a:	pop    rbp
   140017a3b:	ret    
   140017a3c:	int3   
   140017a3d:	int3   
   140017a3e:	int3   
   140017a3f:	int3   
   140017a40:	rex push rbp
   140017a42:	sub    rsp,0x20
   140017a46:	mov    rbp,rdx
   140017a49:	lea    rcx,[rbp+0xa8]
   140017a50:	call   QWORD PTR [rip+0x3bca]        # 0x14001b620
   140017a56:	add    rsp,0x20
   140017a5a:	pop    rbp
   140017a5b:	ret    
   140017a5c:	int3   
   140017a5d:	int3   
   140017a5e:	int3   
   140017a5f:	int3   
   140017a60:	rex push rbp
   140017a62:	sub    rsp,0x20
   140017a66:	mov    rbp,rdx
   140017a69:	lea    rcx,[rbp+0x100]
   140017a70:	call   0x140002b70
   140017a75:	add    rsp,0x20
   140017a79:	pop    rbp
   140017a7a:	ret    
   140017a7b:	int3   
   140017a7c:	int3   
   140017a7d:	int3   
   140017a7e:	int3   
   140017a7f:	int3   
   140017a80:	rex push rbp
   140017a82:	sub    rsp,0x20
   140017a86:	mov    rbp,rdx
   140017a89:	lea    rcx,[rbp+0x100]
   140017a90:	add    rcx,0x8
   140017a94:	call   QWORD PTR [rip+0x3b86]        # 0x14001b620
   140017a9a:	add    rsp,0x20
   140017a9e:	pop    rbp
   140017a9f:	ret    
   140017aa0:	rex push rbp
   140017aa2:	sub    rsp,0x20
   140017aa6:	mov    rbp,rdx
   140017aa9:	lea    rcx,[rbp+0x100]
   140017ab0:	add    rcx,0x10
   140017ab4:	call   QWORD PTR [rip+0x3b66]        # 0x14001b620
   140017aba:	add    rsp,0x20
   140017abe:	pop    rbp
   140017abf:	ret    
   140017ac0:	rex push rbp
   140017ac2:	sub    rsp,0x20
   140017ac6:	mov    rbp,rdx
   140017ac9:	lea    rcx,[rbp+0x100]
   140017ad0:	add    rcx,0x18
   140017ad4:	call   QWORD PTR [rip+0x3b46]        # 0x14001b620
   140017ada:	add    rsp,0x20
   140017ade:	pop    rbp
   140017adf:	ret    
   140017ae0:	rex push rbp
   140017ae2:	sub    rsp,0x20
   140017ae6:	mov    rbp,rdx
   140017ae9:	lea    rcx,[rbp+0x100]
   140017af0:	add    rcx,0x20
   140017af4:	call   0x1400029e0
   140017af9:	add    rsp,0x20
   140017afd:	pop    rbp
   140017afe:	ret    
   140017aff:	int3   
   140017b00:	rex push rbp
   140017b02:	sub    rsp,0x20
   140017b06:	mov    rbp,rdx
   140017b09:	lea    rcx,[rbp+0x50]
   140017b0d:	call   0x1400029e0
   140017b12:	add    rsp,0x20
   140017b16:	pop    rbp
   140017b17:	ret    
   140017b18:	int3   
   140017b19:	int3   
   140017b1a:	int3   
   140017b1b:	int3   
   140017b1c:	int3   
   140017b1d:	int3   
   140017b1e:	int3   
   140017b1f:	int3   
   140017b20:	rex push rbp
   140017b22:	sub    rsp,0x20
   140017b26:	mov    rbp,rdx
   140017b29:	lea    rcx,[rbp+0xf8]
   140017b30:	call   QWORD PTR [rip+0x3af2]        # 0x14001b628
   140017b36:	add    rsp,0x20
   140017b3a:	pop    rbp
   140017b3b:	ret    
   140017b3c:	int3   
   140017b3d:	int3   
   140017b3e:	int3   
   140017b3f:	int3   
   140017b40:	rex push rbp
   140017b42:	sub    rsp,0x20
   140017b46:	mov    rbp,rdx
   140017b49:	lea    rcx,[rbp+0xc8]
   140017b50:	call   QWORD PTR [rip+0x3aca]        # 0x14001b620
   140017b56:	add    rsp,0x20
   140017b5a:	pop    rbp
   140017b5b:	ret    
   140017b5c:	int3   
   140017b5d:	int3   
   140017b5e:	int3   
   140017b5f:	int3   
   140017b60:	rex push rbp
   140017b62:	sub    rsp,0x20
   140017b66:	mov    rbp,rdx
   140017b69:	lea    rcx,[rbp+0xf0]
   140017b70:	call   QWORD PTR [rip+0x3aaa]        # 0x14001b620
   140017b76:	add    rsp,0x20
   140017b7a:	pop    rbp
   140017b7b:	ret    
   140017b7c:	int3   
   140017b7d:	int3   
   140017b7e:	int3   
   140017b7f:	int3   
   140017b80:	rex push rbp
   140017b82:	sub    rsp,0x20
   140017b86:	mov    rbp,rdx
   140017b89:	lea    rcx,[rbp+0x1d8]
   140017b90:	call   0x140002b70
   140017b95:	add    rsp,0x20
   140017b99:	pop    rbp
   140017b9a:	ret    
   140017b9b:	int3   
   140017b9c:	int3   
   140017b9d:	int3   
   140017b9e:	int3   
   140017b9f:	int3   
   140017ba0:	rex push rbp
   140017ba2:	sub    rsp,0x20
   140017ba6:	mov    rbp,rdx
   140017ba9:	lea    rcx,[rbp+0x1d8]
   140017bb0:	add    rcx,0x8
   140017bb4:	call   QWORD PTR [rip+0x3a66]        # 0x14001b620
   140017bba:	add    rsp,0x20
   140017bbe:	pop    rbp
   140017bbf:	ret    
   140017bc0:	rex push rbp
   140017bc2:	sub    rsp,0x20
   140017bc6:	mov    rbp,rdx
   140017bc9:	lea    rcx,[rbp+0x1d8]
   140017bd0:	add    rcx,0x10
   140017bd4:	call   QWORD PTR [rip+0x3a46]        # 0x14001b620
   140017bda:	add    rsp,0x20
   140017bde:	pop    rbp
   140017bdf:	ret    
   140017be0:	rex push rbp
   140017be2:	sub    rsp,0x20
   140017be6:	mov    rbp,rdx
   140017be9:	lea    rcx,[rbp+0x1d8]
   140017bf0:	add    rcx,0x18
   140017bf4:	call   QWORD PTR [rip+0x3a26]        # 0x14001b620
   140017bfa:	add    rsp,0x20
   140017bfe:	pop    rbp
   140017bff:	ret    
   140017c00:	rex push rbp
   140017c02:	sub    rsp,0x20
   140017c06:	mov    rbp,rdx
   140017c09:	lea    rcx,[rbp+0x1d8]
   140017c10:	add    rcx,0x20
   140017c14:	call   0x1400029e0
   140017c19:	add    rsp,0x20
   140017c1d:	pop    rbp
   140017c1e:	ret    
   140017c1f:	int3   
   140017c20:	rex push rbp
   140017c22:	sub    rsp,0x20
   140017c26:	mov    rbp,rdx
   140017c29:	lea    rcx,[rbp+0x70]
   140017c2d:	call   QWORD PTR [rip+0x39f5]        # 0x14001b628
   140017c33:	add    rsp,0x20
   140017c37:	pop    rbp
   140017c38:	ret    
   140017c39:	int3   
   140017c3a:	int3   
   140017c3b:	int3   
   140017c3c:	int3   
   140017c3d:	int3   
   140017c3e:	int3   
   140017c3f:	int3   
   140017c40:	rex push rbp
   140017c42:	sub    rsp,0x20
   140017c46:	mov    rbp,rdx
   140017c49:	lea    rcx,[rbp+0x80]
   140017c50:	call   QWORD PTR [rip+0x39d2]        # 0x14001b628
   140017c56:	add    rsp,0x20
   140017c5a:	pop    rbp
   140017c5b:	ret    
   140017c5c:	int3   
   140017c5d:	int3   
   140017c5e:	int3   
   140017c5f:	int3   
   140017c60:	rex push rbp
   140017c62:	sub    rsp,0x20
   140017c66:	mov    rbp,rdx
   140017c69:	lea    rcx,[rbp+0x90]
   140017c70:	call   QWORD PTR [rip+0x39b2]        # 0x14001b628
   140017c76:	add    rsp,0x20
   140017c7a:	pop    rbp
   140017c7b:	ret    
   140017c7c:	int3   
   140017c7d:	int3   
   140017c7e:	int3   
   140017c7f:	int3   
   140017c80:	rex push rbp
   140017c82:	sub    rsp,0x20
   140017c86:	mov    rbp,rdx
   140017c89:	lea    rcx,[rbp+0xa0]
   140017c90:	call   QWORD PTR [rip+0x398a]        # 0x14001b620
   140017c96:	add    rsp,0x20
   140017c9a:	pop    rbp
   140017c9b:	ret    
   140017c9c:	int3   
   140017c9d:	int3   
   140017c9e:	int3   
   140017c9f:	int3   
   140017ca0:	rex push rbp
   140017ca2:	sub    rsp,0x20
   140017ca6:	mov    rbp,rdx
   140017ca9:	lea    rcx,[rbp+0xe0]
   140017cb0:	call   QWORD PTR [rip+0x396a]        # 0x14001b620
   140017cb6:	add    rsp,0x20
   140017cba:	pop    rbp
   140017cbb:	ret    
   140017cbc:	int3   
   140017cbd:	int3   
   140017cbe:	int3   
   140017cbf:	int3   
   140017cc0:	rex push rbp
   140017cc2:	sub    rsp,0x20
   140017cc6:	mov    rbp,rdx
   140017cc9:	lea    rcx,[rbp+0xd8]
   140017cd0:	call   QWORD PTR [rip+0x394a]        # 0x14001b620
   140017cd6:	add    rsp,0x20
   140017cda:	pop    rbp
   140017cdb:	ret    
   140017cdc:	int3   
   140017cdd:	int3   
   140017cde:	int3   
   140017cdf:	int3   
   140017ce0:	rex push rbp
   140017ce2:	sub    rsp,0x20
   140017ce6:	mov    rbp,rdx
   140017ce9:	lea    rcx,[rbp+0x148]
   140017cf0:	call   0x140002b70
   140017cf5:	add    rsp,0x20
   140017cf9:	pop    rbp
   140017cfa:	ret    
   140017cfb:	int3   
   140017cfc:	int3   
   140017cfd:	int3   
   140017cfe:	int3   
   140017cff:	int3   
   140017d00:	rex push rbp
   140017d02:	sub    rsp,0x20
   140017d06:	mov    rbp,rdx
   140017d09:	lea    rcx,[rbp+0x148]
   140017d10:	add    rcx,0x8
   140017d14:	call   QWORD PTR [rip+0x3906]        # 0x14001b620
   140017d1a:	add    rsp,0x20
   140017d1e:	pop    rbp
   140017d1f:	ret    
   140017d20:	rex push rbp
   140017d22:	sub    rsp,0x20
   140017d26:	mov    rbp,rdx
   140017d29:	lea    rcx,[rbp+0x148]
   140017d30:	add    rcx,0x10
   140017d34:	call   QWORD PTR [rip+0x38e6]        # 0x14001b620
   140017d3a:	add    rsp,0x20
   140017d3e:	pop    rbp
   140017d3f:	ret    
   140017d40:	rex push rbp
   140017d42:	sub    rsp,0x20
   140017d46:	mov    rbp,rdx
   140017d49:	lea    rcx,[rbp+0x148]
   140017d50:	add    rcx,0x18
   140017d54:	call   QWORD PTR [rip+0x38c6]        # 0x14001b620
   140017d5a:	add    rsp,0x20
   140017d5e:	pop    rbp
   140017d5f:	ret    
   140017d60:	rex push rbp
   140017d62:	sub    rsp,0x20
   140017d66:	mov    rbp,rdx
   140017d69:	lea    rcx,[rbp+0x148]
   140017d70:	add    rcx,0x20
   140017d74:	call   0x1400029e0
   140017d79:	add    rsp,0x20
   140017d7d:	pop    rbp
   140017d7e:	ret    
   140017d7f:	int3   
   140017d80:	rex push rbp
   140017d82:	sub    rsp,0x20
   140017d86:	mov    rbp,rdx
   140017d89:	lea    rcx,[rbp+0xd0]
   140017d90:	call   QWORD PTR [rip+0x388a]        # 0x14001b620
   140017d96:	add    rsp,0x20
   140017d9a:	pop    rbp
   140017d9b:	ret    
   140017d9c:	int3   
   140017d9d:	int3   
   140017d9e:	int3   
   140017d9f:	int3   
   140017da0:	rex push rbp
   140017da2:	sub    rsp,0x20
   140017da6:	mov    rbp,rdx
   140017da9:	lea    rcx,[rbp+0xc0]
   140017db0:	call   QWORD PTR [rip+0x386a]        # 0x14001b620
   140017db6:	add    rsp,0x20
   140017dba:	pop    rbp
   140017dbb:	ret    
   140017dbc:	int3   
   140017dbd:	int3   
   140017dbe:	int3   
   140017dbf:	int3   
   140017dc0:	rex push rbp
   140017dc2:	sub    rsp,0x20
   140017dc6:	mov    rbp,rdx
   140017dc9:	lea    rcx,[rbp+0xb0]
   140017dd0:	call   QWORD PTR [rip+0x384a]        # 0x14001b620
   140017dd6:	add    rsp,0x20
   140017dda:	pop    rbp
   140017ddb:	ret    
   140017ddc:	int3   
   140017ddd:	int3   
   140017dde:	int3   
   140017ddf:	int3   
   140017de0:	rex push rbp
   140017de2:	sub    rsp,0x20
   140017de6:	mov    rbp,rdx
   140017de9:	lea    rcx,[rbp+0x190]
   140017df0:	call   0x140002b70
   140017df5:	add    rsp,0x20
   140017df9:	pop    rbp
   140017dfa:	ret    
   140017dfb:	int3   
   140017dfc:	int3   
   140017dfd:	int3   
   140017dfe:	int3   
   140017dff:	int3   
   140017e00:	rex push rbp
   140017e02:	sub    rsp,0x20
   140017e06:	mov    rbp,rdx
   140017e09:	lea    rcx,[rbp+0x190]
   140017e10:	add    rcx,0x8
   140017e14:	call   QWORD PTR [rip+0x3806]        # 0x14001b620
   140017e1a:	add    rsp,0x20
   140017e1e:	pop    rbp
   140017e1f:	ret    
   140017e20:	rex push rbp
   140017e22:	sub    rsp,0x20
   140017e26:	mov    rbp,rdx
   140017e29:	lea    rcx,[rbp+0x190]
   140017e30:	add    rcx,0x10
   140017e34:	call   QWORD PTR [rip+0x37e6]        # 0x14001b620
   140017e3a:	add    rsp,0x20
   140017e3e:	pop    rbp
   140017e3f:	ret    
   140017e40:	rex push rbp
   140017e42:	sub    rsp,0x20
   140017e46:	mov    rbp,rdx
   140017e49:	lea    rcx,[rbp+0x190]
   140017e50:	add    rcx,0x18
   140017e54:	call   QWORD PTR [rip+0x37c6]        # 0x14001b620
   140017e5a:	add    rsp,0x20
   140017e5e:	pop    rbp
   140017e5f:	ret    
   140017e60:	rex push rbp
   140017e62:	sub    rsp,0x20
   140017e66:	mov    rbp,rdx
   140017e69:	lea    rcx,[rbp+0x190]
   140017e70:	add    rcx,0x20
   140017e74:	call   0x1400029e0
   140017e79:	add    rsp,0x20
   140017e7d:	pop    rbp
   140017e7e:	ret    
   140017e7f:	int3   
   140017e80:	rex push rbp
   140017e82:	sub    rsp,0x20
   140017e86:	mov    rbp,rdx
   140017e89:	mov    rcx,QWORD PTR [rbp+0x40]
   140017e8d:	call   0x140004b10
   140017e92:	add    rsp,0x20
   140017e96:	pop    rbp
   140017e97:	ret    
   140017e98:	int3   
   140017e99:	int3   
   140017e9a:	int3   
   140017e9b:	int3   
   140017e9c:	int3   
   140017e9d:	int3   
   140017e9e:	int3   
   140017e9f:	int3   
   140017ea0:	rex push rbp
   140017ea2:	sub    rsp,0x20
   140017ea6:	mov    rbp,rdx
   140017ea9:	mov    rcx,QWORD PTR [rbp+0x40]
   140017ead:	add    rcx,0x8
   140017eb1:	call   QWORD PTR [rip+0x3769]        # 0x14001b620
   140017eb7:	add    rsp,0x20
   140017ebb:	pop    rbp
   140017ebc:	ret    
   140017ebd:	int3   
   140017ebe:	int3   
   140017ebf:	int3   
   140017ec0:	rex push rbp
   140017ec2:	sub    rsp,0x20
   140017ec6:	mov    rbp,rdx
   140017ec9:	mov    rcx,QWORD PTR [rbp+0x40]
   140017ecd:	add    rcx,0x18
   140017ed1:	call   QWORD PTR [rip+0x3751]        # 0x14001b628
   140017ed7:	add    rsp,0x20
   140017edb:	pop    rbp
   140017edc:	ret    
   140017edd:	int3   
   140017ede:	int3   
   140017edf:	int3   
   140017ee0:	rex push rbp
   140017ee2:	sub    rsp,0x20
   140017ee6:	mov    rbp,rdx
   140017ee9:	mov    rcx,QWORD PTR [rbp+0x40]
   140017eed:	add    rcx,0x20
   140017ef1:	call   QWORD PTR [rip+0x3731]        # 0x14001b628
   140017ef7:	add    rsp,0x20
   140017efb:	pop    rbp
   140017efc:	ret    
   140017efd:	int3   
   140017efe:	int3   
   140017eff:	int3   
   140017f00:	rex push rbp
   140017f02:	sub    rsp,0x20
   140017f06:	mov    rbp,rdx
   140017f09:	lea    rcx,[rbp+0x108]
   140017f10:	call   QWORD PTR [rip+0x3362]        # 0x14001b278
   140017f16:	add    rsp,0x20
   140017f1a:	pop    rbp
   140017f1b:	ret    
   140017f1c:	int3   
   140017f1d:	int3   
   140017f1e:	int3   
   140017f1f:	int3   
   140017f20:	rex push rbp
   140017f22:	sub    rsp,0x20
   140017f26:	mov    rbp,rdx
   140017f29:	lea    rcx,[rbp+0x40]
   140017f2d:	call   QWORD PTR [rip+0x34b5]        # 0x14001b3e8
   140017f33:	add    rsp,0x20
   140017f37:	pop    rbp
   140017f38:	ret    
   140017f39:	int3   
   140017f3a:	int3   
   140017f3b:	int3   
   140017f3c:	int3   
   140017f3d:	int3   
   140017f3e:	int3   
   140017f3f:	int3   
   140017f40:	rex push rbp
   140017f42:	sub    rsp,0x20
   140017f46:	mov    rbp,rdx
   140017f49:	mov    eax,DWORD PTR [rbp+0x30]
   140017f4c:	and    eax,0x1
   140017f4f:	test   eax,eax
   140017f51:	je     0x140017f64
   140017f53:	and    DWORD PTR [rbp+0x30],0xfffffffe
   140017f57:	lea    rcx,[rbp+0x1f8]
   140017f5e:	call   QWORD PTR [rip+0x36c4]        # 0x14001b628
   140017f64:	add    rsp,0x20
   140017f68:	pop    rbp
   140017f69:	ret    
   140017f6a:	int3   
   140017f6b:	int3   
   140017f6c:	int3   
   140017f6d:	int3   
   140017f6e:	int3   
   140017f6f:	int3   
   140017f70:	rex push rbp
   140017f72:	sub    rsp,0x20
   140017f76:	mov    rbp,rdx
   140017f79:	mov    eax,DWORD PTR [rbp+0x30]
   140017f7c:	and    eax,0x2
   140017f7f:	test   eax,eax
   140017f81:	je     0x140017f94
   140017f83:	and    DWORD PTR [rbp+0x30],0xfffffffd
   140017f87:	lea    rcx,[rbp+0x1e8]
   140017f8e:	call   QWORD PTR [rip+0x3694]        # 0x14001b628
   140017f94:	add    rsp,0x20
   140017f98:	pop    rbp
   140017f99:	ret    
   140017f9a:	int3   
   140017f9b:	int3   
   140017f9c:	int3   
   140017f9d:	int3   
   140017f9e:	int3   
   140017f9f:	int3   
   140017fa0:	rex push rbp
   140017fa2:	sub    rsp,0x20
   140017fa6:	mov    rbp,rdx
   140017fa9:	lea    rcx,[rbp+0x190]
   140017fb0:	call   QWORD PTR [rip+0x3672]        # 0x14001b628
   140017fb6:	add    rsp,0x20
   140017fba:	pop    rbp
   140017fbb:	ret    
   140017fbc:	int3   
   140017fbd:	int3   
   140017fbe:	int3   
   140017fbf:	int3   
   140017fc0:	rex push rbp
   140017fc2:	sub    rsp,0x20
   140017fc6:	mov    rbp,rdx
   140017fc9:	lea    rcx,[rbp+0x1b0]
   140017fd0:	call   QWORD PTR [rip+0x3652]        # 0x14001b628
   140017fd6:	add    rsp,0x20
   140017fda:	pop    rbp
   140017fdb:	ret    
   140017fdc:	int3   
   140017fdd:	int3   
   140017fde:	int3   
   140017fdf:	int3   
   140017fe0:	rex push rbp
   140017fe2:	sub    rsp,0x20
   140017fe6:	mov    rbp,rdx
   140017fe9:	lea    rcx,[rbp+0x38]
   140017fed:	call   0x14000a670
   140017ff2:	add    rsp,0x20
   140017ff6:	pop    rbp
   140017ff7:	ret    
   140017ff8:	int3   
   140017ff9:	int3   
   140017ffa:	int3   
   140017ffb:	int3   
   140017ffc:	int3   
   140017ffd:	int3   
   140017ffe:	int3   
   140017fff:	int3   
   140018000:	rex push rbp
   140018002:	sub    rsp,0x20
   140018006:	mov    rbp,rdx
   140018009:	lea    rcx,[rbp+0x60]
   14001800d:	call   QWORD PTR [rip+0x360d]        # 0x14001b620
   140018013:	add    rsp,0x20
   140018017:	pop    rbp
   140018018:	ret    
   140018019:	int3   
   14001801a:	int3   
   14001801b:	int3   
   14001801c:	int3   
   14001801d:	int3   
   14001801e:	int3   
   14001801f:	int3   
   140018020:	rex push rbp
   140018022:	sub    rsp,0x20
   140018026:	mov    rbp,rdx
   140018029:	lea    rcx,[rbp+0x68]
   14001802d:	call   QWORD PTR [rip+0x35ed]        # 0x14001b620
   140018033:	add    rsp,0x20
   140018037:	pop    rbp
   140018038:	ret    
   140018039:	int3   
   14001803a:	int3   
   14001803b:	int3   
   14001803c:	int3   
   14001803d:	int3   
   14001803e:	int3   
   14001803f:	int3   
   140018040:	rex push rbp
   140018042:	sub    rsp,0x20
   140018046:	mov    rbp,rdx
   140018049:	lea    rcx,[rbp+0x130]
   140018050:	call   QWORD PTR [rip+0x35ca]        # 0x14001b620
   140018056:	add    rsp,0x20
   14001805a:	pop    rbp
   14001805b:	ret    
   14001805c:	int3   
   14001805d:	int3   
   14001805e:	int3   
   14001805f:	int3   
   140018060:	rex push rbp
   140018062:	sub    rsp,0x20
   140018066:	mov    rbp,rdx
   140018069:	mov    rcx,QWORD PTR [rbp+0xe8]
   140018070:	add    rcx,0x8
   140018074:	call   QWORD PTR [rip+0x35a6]        # 0x14001b620
   14001807a:	add    rsp,0x20
   14001807e:	pop    rbp
   14001807f:	ret    
   140018080:	rex push rbp
   140018082:	sub    rsp,0x20
   140018086:	mov    rbp,rdx
   140018089:	mov    rcx,QWORD PTR [rbp+0xe8]
   140018090:	add    rcx,0x10
   140018094:	call   QWORD PTR [rip+0x3586]        # 0x14001b620
   14001809a:	add    rsp,0x20
   14001809e:	pop    rbp
   14001809f:	ret    
   1400180a0:	rex push rbp
   1400180a2:	sub    rsp,0x20
   1400180a6:	mov    rbp,rdx
   1400180a9:	mov    rcx,QWORD PTR [rbp+0xe8]
   1400180b0:	add    rcx,0x18
   1400180b4:	call   QWORD PTR [rip+0x3566]        # 0x14001b620
   1400180ba:	add    rsp,0x20
   1400180be:	pop    rbp
   1400180bf:	ret    
   1400180c0:	rex push rbp
   1400180c2:	sub    rsp,0x20
   1400180c6:	mov    rbp,rdx
   1400180c9:	mov    rcx,QWORD PTR [rbp+0xe8]
   1400180d0:	add    rcx,0x20
   1400180d4:	call   0x1400029e0
   1400180d9:	add    rsp,0x20
   1400180dd:	pop    rbp
   1400180de:	ret    
   1400180df:	int3   
   1400180e0:	rex push rbp
   1400180e2:	sub    rsp,0x20
   1400180e6:	mov    rbp,rdx
   1400180e9:	mov    eax,DWORD PTR [rbp+0x30]
   1400180ec:	and    eax,0x4
   1400180ef:	test   eax,eax
   1400180f1:	je     0x140018104
   1400180f3:	and    DWORD PTR [rbp+0x30],0xfffffffb
   1400180f7:	lea    rcx,[rbp+0x118]
   1400180fe:	call   QWORD PTR [rip+0x351c]        # 0x14001b620
   140018104:	add    rsp,0x20
   140018108:	pop    rbp
   140018109:	ret    
   14001810a:	int3   
   14001810b:	int3   
   14001810c:	int3   
   14001810d:	int3   
   14001810e:	int3   
   14001810f:	int3   
   140018110:	rex push rbp
   140018112:	sub    rsp,0x20
   140018116:	mov    rbp,rdx
   140018119:	lea    rcx,[rbp+0x1a0]
   140018120:	call   QWORD PTR [rip+0x3502]        # 0x14001b628
   140018126:	add    rsp,0x20
   14001812a:	pop    rbp
   14001812b:	ret    
   14001812c:	int3   
   14001812d:	int3   
   14001812e:	int3   
   14001812f:	int3   
   140018130:	rex push rbp
   140018132:	sub    rsp,0x20
   140018136:	mov    rbp,rdx
   140018139:	lea    rcx,[rbp+0x150]
   140018140:	call   QWORD PTR [rip+0x34e2]        # 0x14001b628
   140018146:	add    rsp,0x20
   14001814a:	pop    rbp
   14001814b:	ret    
   14001814c:	int3   
   14001814d:	int3   
   14001814e:	int3   
   14001814f:	int3   
   140018150:	rex push rbp
   140018152:	sub    rsp,0x20
   140018156:	mov    rbp,rdx
   140018159:	mov    rcx,QWORD PTR [rbp+0x1d0]
   140018160:	add    rcx,0x8
   140018164:	call   QWORD PTR [rip+0x34b6]        # 0x14001b620
   14001816a:	add    rsp,0x20
   14001816e:	pop    rbp
   14001816f:	ret    
   140018170:	rex push rbp
   140018172:	sub    rsp,0x20
   140018176:	mov    rbp,rdx
   140018179:	mov    rcx,QWORD PTR [rbp+0x1d0]
   140018180:	add    rcx,0x10
   140018184:	call   QWORD PTR [rip+0x3496]        # 0x14001b620
   14001818a:	add    rsp,0x20
   14001818e:	pop    rbp
   14001818f:	ret    
   140018190:	rex push rbp
   140018192:	sub    rsp,0x20
   140018196:	mov    rbp,rdx
   140018199:	mov    rcx,QWORD PTR [rbp+0x1d0]
   1400181a0:	add    rcx,0x18
   1400181a4:	call   QWORD PTR [rip+0x3476]        # 0x14001b620
   1400181aa:	add    rsp,0x20
   1400181ae:	pop    rbp
   1400181af:	ret    
   1400181b0:	rex push rbp
   1400181b2:	sub    rsp,0x20
   1400181b6:	mov    rbp,rdx
   1400181b9:	mov    rcx,QWORD PTR [rbp+0x1d0]
   1400181c0:	add    rcx,0x20
   1400181c4:	call   0x1400029e0
   1400181c9:	add    rsp,0x20
   1400181cd:	pop    rbp
   1400181ce:	ret    
   1400181cf:	int3   
   1400181d0:	rex push rbp
   1400181d2:	sub    rsp,0x20
   1400181d6:	mov    rbp,rdx
   1400181d9:	lea    rcx,[rbp+0x90]
   1400181e0:	call   0x140002b70
   1400181e5:	add    rsp,0x20
   1400181e9:	pop    rbp
   1400181ea:	ret    
   1400181eb:	int3   
   1400181ec:	int3   
   1400181ed:	int3   
   1400181ee:	int3   
   1400181ef:	int3   
   1400181f0:	rex push rbp
   1400181f2:	sub    rsp,0x20
   1400181f6:	mov    rbp,rdx
   1400181f9:	lea    rcx,[rbp+0x90]
   140018200:	add    rcx,0x8
   140018204:	call   QWORD PTR [rip+0x3416]        # 0x14001b620
   14001820a:	add    rsp,0x20
   14001820e:	pop    rbp
   14001820f:	ret    
   140018210:	rex push rbp
   140018212:	sub    rsp,0x20
   140018216:	mov    rbp,rdx
   140018219:	lea    rcx,[rbp+0x90]
   140018220:	add    rcx,0x10
   140018224:	call   QWORD PTR [rip+0x33f6]        # 0x14001b620
   14001822a:	add    rsp,0x20
   14001822e:	pop    rbp
   14001822f:	ret    
   140018230:	rex push rbp
   140018232:	sub    rsp,0x20
   140018236:	mov    rbp,rdx
   140018239:	lea    rcx,[rbp+0x90]
   140018240:	add    rcx,0x18
   140018244:	call   QWORD PTR [rip+0x33d6]        # 0x14001b620
   14001824a:	add    rsp,0x20
   14001824e:	pop    rbp
   14001824f:	ret    
   140018250:	rex push rbp
   140018252:	sub    rsp,0x20
   140018256:	mov    rbp,rdx
   140018259:	lea    rcx,[rbp+0x90]
   140018260:	add    rcx,0x20
   140018264:	call   0x1400029e0
   140018269:	add    rsp,0x20
   14001826d:	pop    rbp
   14001826e:	ret    
   14001826f:	int3   
   140018270:	rex push rbp
   140018272:	sub    rsp,0x20
   140018276:	mov    rbp,rdx
   140018279:	lea    rcx,[rbp+0x170]
   140018280:	call   QWORD PTR [rip+0x313a]        # 0x14001b3c0
   140018286:	add    rsp,0x20
   14001828a:	pop    rbp
   14001828b:	ret    
   14001828c:	int3   
   14001828d:	int3   
   14001828e:	int3   
   14001828f:	int3   
   140018290:	rex push rbp
   140018292:	sub    rsp,0x20
   140018296:	mov    rbp,rdx
   140018299:	lea    rcx,[rbp+0xe0]
   1400182a0:	call   QWORD PTR [rip+0x30aa]        # 0x14001b350
   1400182a6:	add    rsp,0x20
   1400182aa:	pop    rbp
   1400182ab:	ret    
   1400182ac:	int3   
   1400182ad:	int3   
   1400182ae:	int3   
   1400182af:	int3   
   1400182b0:	rex push rbp
   1400182b2:	sub    rsp,0x20
   1400182b6:	mov    rbp,rdx
   1400182b9:	lea    rcx,[rbp+0x180]
   1400182c0:	call   QWORD PTR [rip+0x3362]        # 0x14001b628
   1400182c6:	add    rsp,0x20
   1400182ca:	pop    rbp
   1400182cb:	ret    
   1400182cc:	int3   
   1400182cd:	int3   
   1400182ce:	int3   
   1400182cf:	int3   
   1400182d0:	rex push rbp
   1400182d2:	sub    rsp,0x20
   1400182d6:	mov    rbp,rdx
   1400182d9:	lea    rcx,[rbp+0x1e0]
   1400182e0:	call   QWORD PTR [rip+0x3342]        # 0x14001b628
   1400182e6:	add    rsp,0x20
   1400182ea:	pop    rbp
   1400182eb:	ret    
   1400182ec:	int3   
   1400182ed:	int3   
   1400182ee:	int3   
   1400182ef:	int3   
   1400182f0:	rex push rbp
   1400182f2:	sub    rsp,0x20
   1400182f6:	mov    rbp,rdx
   1400182f9:	lea    rcx,[rbp+0x100]
   140018300:	call   QWORD PTR [rip+0x3322]        # 0x14001b628
   140018306:	add    rsp,0x20
   14001830a:	pop    rbp
   14001830b:	ret    
   14001830c:	int3   
   14001830d:	int3   
   14001830e:	int3   
   14001830f:	int3   
   140018310:	rex push rbp
   140018312:	sub    rsp,0x20
   140018316:	mov    rbp,rdx
   140018319:	lea    rcx,[rbp+0xf8]
   140018320:	call   QWORD PTR [rip+0x32fa]        # 0x14001b620
   140018326:	add    rsp,0x20
   14001832a:	pop    rbp
   14001832b:	ret    
   14001832c:	int3   
   14001832d:	int3   
   14001832e:	int3   
   14001832f:	int3   
   140018330:	rex push rbp
   140018332:	sub    rsp,0x20
   140018336:	mov    rbp,rdx
   140018339:	lea    rcx,[rbp+0x1c0]
   140018340:	call   QWORD PTR [rip+0x32e2]        # 0x14001b628
   140018346:	add    rsp,0x20
   14001834a:	pop    rbp
   14001834b:	ret    
   14001834c:	int3   
   14001834d:	int3   
   14001834e:	int3   
   14001834f:	int3   
   140018350:	rex push rbp
   140018352:	sub    rsp,0x20
   140018356:	mov    rbp,rdx
   140018359:	lea    rcx,[rbp+0xf0]
   140018360:	call   QWORD PTR [rip+0x32ba]        # 0x14001b620
   140018366:	add    rsp,0x20
   14001836a:	pop    rbp
   14001836b:	ret    
   14001836c:	int3   
   14001836d:	int3   
   14001836e:	int3   
   14001836f:	int3   
   140018370:	rex push rbp
   140018372:	sub    rsp,0x20
   140018376:	mov    rbp,rdx
   140018379:	lea    rcx,[rbp+0x128]
   140018380:	call   QWORD PTR [rip+0x32a2]        # 0x14001b628
   140018386:	add    rsp,0x20
   14001838a:	pop    rbp
   14001838b:	ret    
   14001838c:	int3   
   14001838d:	int3   
   14001838e:	int3   
   14001838f:	int3   
   140018390:	rex push rbp
   140018392:	sub    rsp,0x20
   140018396:	mov    rbp,rdx
   140018399:	lea    rcx,[rbp+0x78]
   14001839d:	call   QWORD PTR [rip+0x3095]        # 0x14001b438
   1400183a3:	add    rsp,0x20
   1400183a7:	pop    rbp
   1400183a8:	ret    
   1400183a9:	int3   
   1400183aa:	int3   
   1400183ab:	int3   
   1400183ac:	int3   
   1400183ad:	int3   
   1400183ae:	int3   
   1400183af:	int3   
   1400183b0:	rex push rbp
   1400183b2:	sub    rsp,0x20
   1400183b6:	mov    rbp,rdx
   1400183b9:	lea    rcx,[rbp+0x58]
   1400183bd:	call   0x1400029e0
   1400183c2:	add    rsp,0x20
   1400183c6:	pop    rbp
   1400183c7:	ret    
   1400183c8:	int3   
   1400183c9:	int3   
   1400183ca:	int3   
   1400183cb:	int3   
   1400183cc:	int3   
   1400183cd:	int3   
   1400183ce:	int3   
   1400183cf:	int3   
   1400183d0:	rex push rbp
   1400183d2:	sub    rsp,0x20
   1400183d6:	mov    rbp,rdx
   1400183d9:	lea    rcx,[rbp+0x158]
   1400183e0:	call   QWORD PTR [rip+0x3242]        # 0x14001b628
   1400183e6:	add    rsp,0x20
   1400183ea:	pop    rbp
   1400183eb:	ret    
   1400183ec:	int3   
   1400183ed:	int3   
   1400183ee:	int3   
   1400183ef:	int3   
   1400183f0:	rex push rbp
   1400183f2:	sub    rsp,0x20
   1400183f6:	mov    rbp,rdx
   1400183f9:	lea    rcx,[rbp+0x148]
   140018400:	call   QWORD PTR [rip+0x321a]        # 0x14001b620
   140018406:	add    rsp,0x20
   14001840a:	pop    rbp
   14001840b:	ret    
   14001840c:	int3   
   14001840d:	int3   
   14001840e:	int3   
   14001840f:	int3   
   140018410:	rex push rbp
   140018412:	sub    rsp,0x20
   140018416:	mov    rbp,rdx
   140018419:	lea    rcx,[rbp+0x138]
   140018420:	call   QWORD PTR [rip+0x3202]        # 0x14001b628
   140018426:	add    rsp,0x20
   14001842a:	pop    rbp
   14001842b:	ret    
   14001842c:	int3   
   14001842d:	int3   
   14001842e:	int3   
   14001842f:	int3   
   140018430:	rex push rbp
   140018432:	sub    rsp,0x20
   140018436:	mov    rbp,rdx
   140018439:	lea    rcx,[rbp+0x188]
   140018440:	call   QWORD PTR [rip+0x31e2]        # 0x14001b628
   140018446:	add    rsp,0x20
   14001844a:	pop    rbp
   14001844b:	ret    
   14001844c:	int3   
   14001844d:	int3   
   14001844e:	int3   
   14001844f:	int3   
   140018450:	rex push rbp
   140018452:	sub    rsp,0x20
   140018456:	mov    rbp,rdx
   140018459:	lea    rcx,[rbp+0x178]
   140018460:	call   QWORD PTR [rip+0x31ba]        # 0x14001b620
   140018466:	add    rsp,0x20
   14001846a:	pop    rbp
   14001846b:	ret    
   14001846c:	int3   
   14001846d:	int3   
   14001846e:	int3   
   14001846f:	int3   
   140018470:	rex push rbp
   140018472:	sub    rsp,0x20
   140018476:	mov    rbp,rdx
   140018479:	lea    rcx,[rbp+0x168]
   140018480:	call   QWORD PTR [rip+0x31a2]        # 0x14001b628
   140018486:	add    rsp,0x20
   14001848a:	pop    rbp
   14001848b:	ret    
   14001848c:	int3   
   14001848d:	int3   
   14001848e:	int3   
   14001848f:	int3   
   140018490:	rex push rbp
   140018492:	sub    rsp,0x20
   140018496:	mov    rbp,rdx
   140018499:	lea    rcx,[rbp+0x90]
   1400184a0:	add    rcx,0x8
   1400184a4:	call   QWORD PTR [rip+0x3176]        # 0x14001b620
   1400184aa:	add    rsp,0x20
   1400184ae:	pop    rbp
   1400184af:	ret    
   1400184b0:	rex push rbp
   1400184b2:	sub    rsp,0x20
   1400184b6:	mov    rbp,rdx
   1400184b9:	lea    rcx,[rbp+0x90]
   1400184c0:	add    rcx,0x10
   1400184c4:	call   QWORD PTR [rip+0x3156]        # 0x14001b620
   1400184ca:	add    rsp,0x20
   1400184ce:	pop    rbp
   1400184cf:	ret    
   1400184d0:	rex push rbp
   1400184d2:	sub    rsp,0x20
   1400184d6:	mov    rbp,rdx
   1400184d9:	lea    rcx,[rbp+0x90]
   1400184e0:	add    rcx,0x18
   1400184e4:	call   QWORD PTR [rip+0x3136]        # 0x14001b620
   1400184ea:	add    rsp,0x20
   1400184ee:	pop    rbp
   1400184ef:	ret    
   1400184f0:	rex push rbp
   1400184f2:	sub    rsp,0x20
   1400184f6:	mov    rbp,rdx
   1400184f9:	lea    rcx,[rbp+0x90]
   140018500:	add    rcx,0x20
   140018504:	call   0x1400029e0
   140018509:	add    rsp,0x20
   14001850d:	pop    rbp
   14001850e:	ret    
   14001850f:	int3   
   140018510:	rex push rbp
   140018512:	sub    rsp,0x20
   140018516:	mov    rbp,rdx
   140018519:	mov    rcx,QWORD PTR [rbp+0x280]
   140018520:	add    rcx,0x8
   140018524:	call   QWORD PTR [rip+0x30f6]        # 0x14001b620
   14001852a:	add    rsp,0x20
   14001852e:	pop    rbp
   14001852f:	ret    
   140018530:	rex push rbp
   140018532:	sub    rsp,0x20
   140018536:	mov    rbp,rdx
   140018539:	mov    rcx,QWORD PTR [rbp+0x280]
   140018540:	add    rcx,0x10
   140018544:	call   QWORD PTR [rip+0x30d6]        # 0x14001b620
   14001854a:	add    rsp,0x20
   14001854e:	pop    rbp
   14001854f:	ret    
   140018550:	rex push rbp
   140018552:	sub    rsp,0x20
   140018556:	mov    rbp,rdx
   140018559:	mov    rcx,QWORD PTR [rbp+0x280]
   140018560:	add    rcx,0x18
   140018564:	call   QWORD PTR [rip+0x30b6]        # 0x14001b620
   14001856a:	add    rsp,0x20
   14001856e:	pop    rbp
   14001856f:	ret    
   140018570:	rex push rbp
   140018572:	sub    rsp,0x20
   140018576:	mov    rbp,rdx
   140018579:	mov    rcx,QWORD PTR [rbp+0x280]
   140018580:	add    rcx,0x20
   140018584:	call   0x1400029e0
   140018589:	add    rsp,0x20
   14001858d:	pop    rbp
   14001858e:	ret    
   14001858f:	int3   
   140018590:	rex push rbp
   140018592:	sub    rsp,0x20
   140018596:	mov    rbp,rdx
   140018599:	lea    rcx,[rbp+0x70]
   14001859d:	call   0x140004b10
   1400185a2:	add    rsp,0x20
   1400185a6:	pop    rbp
   1400185a7:	ret    
   1400185a8:	int3   
   1400185a9:	int3   
   1400185aa:	int3   
   1400185ab:	int3   
   1400185ac:	int3   
   1400185ad:	int3   
   1400185ae:	int3   
   1400185af:	int3   
   1400185b0:	rex push rbp
   1400185b2:	sub    rsp,0x20
   1400185b6:	mov    rbp,rdx
   1400185b9:	lea    rcx,[rbp+0x88]
   1400185c0:	call   0x140004b10
   1400185c5:	add    rsp,0x20
   1400185c9:	pop    rbp
   1400185ca:	ret    
   1400185cb:	int3   
   1400185cc:	int3   
   1400185cd:	int3   
   1400185ce:	int3   
   1400185cf:	int3   
   1400185d0:	rex push rbp
   1400185d2:	sub    rsp,0x20
   1400185d6:	mov    rbp,rdx
   1400185d9:	lea    rcx,[rbp+0x90]
   1400185e0:	call   QWORD PTR [rip+0x303a]        # 0x14001b620
   1400185e6:	add    rsp,0x20
   1400185ea:	pop    rbp
   1400185eb:	ret    
   1400185ec:	int3   
   1400185ed:	int3   
   1400185ee:	int3   
   1400185ef:	int3   
   1400185f0:	rex push rbp
   1400185f2:	sub    rsp,0x20
   1400185f6:	mov    rbp,rdx
   1400185f9:	lea    rcx,[rbp+0xe0]
   140018600:	call   0x140004b10
   140018605:	add    rsp,0x20
   140018609:	pop    rbp
   14001860a:	ret    
   14001860b:	int3   
   14001860c:	int3   
   14001860d:	int3   
   14001860e:	int3   
   14001860f:	int3   
   140018610:	rex push rbp
   140018612:	sub    rsp,0x20
   140018616:	mov    rbp,rdx
   140018619:	lea    rcx,[rbp+0x40]
   14001861d:	call   0x140002b70
   140018622:	add    rsp,0x20
   140018626:	pop    rbp
   140018627:	ret    
   140018628:	int3   
   140018629:	int3   
   14001862a:	int3   
   14001862b:	int3   
   14001862c:	int3   
   14001862d:	int3   
   14001862e:	int3   
   14001862f:	int3   
   140018630:	rex push rbp
   140018632:	sub    rsp,0x20
   140018636:	mov    rbp,rdx
   140018639:	lea    rcx,[rbp+0xf0]
   140018640:	call   QWORD PTR [rip+0x2fe2]        # 0x14001b628
   140018646:	add    rsp,0x20
   14001864a:	pop    rbp
   14001864b:	ret    
   14001864c:	int3   
   14001864d:	int3   
   14001864e:	int3   
   14001864f:	int3   
   140018650:	rex push rbp
   140018652:	sub    rsp,0x20
   140018656:	mov    rbp,rdx
   140018659:	lea    rcx,[rbp+0xf8]
   140018660:	call   QWORD PTR [rip+0x2d5a]        # 0x14001b3c0
   140018666:	add    rsp,0x20
   14001866a:	pop    rbp
   14001866b:	ret    
   14001866c:	int3   
   14001866d:	int3   
   14001866e:	int3   
   14001866f:	int3   
   140018670:	rex push rbp
   140018672:	sub    rsp,0x20
   140018676:	mov    rbp,rdx
   140018679:	lea    rcx,[rbp+0x40]
   14001867d:	add    rcx,0x8
   140018681:	call   QWORD PTR [rip+0x2f99]        # 0x14001b620
   140018687:	add    rsp,0x20
   14001868b:	pop    rbp
   14001868c:	ret    
   14001868d:	int3   
   14001868e:	int3   
   14001868f:	int3   
   140018690:	rex push rbp
   140018692:	sub    rsp,0x20
   140018696:	mov    rbp,rdx
   140018699:	lea    rcx,[rbp+0x40]
   14001869d:	add    rcx,0x10
   1400186a1:	call   QWORD PTR [rip+0x2f79]        # 0x14001b620
   1400186a7:	add    rsp,0x20
   1400186ab:	pop    rbp
   1400186ac:	ret    
   1400186ad:	int3   
   1400186ae:	int3   
   1400186af:	int3   
   1400186b0:	rex push rbp
   1400186b2:	sub    rsp,0x20
   1400186b6:	mov    rbp,rdx
   1400186b9:	lea    rcx,[rbp+0x40]
   1400186bd:	add    rcx,0x18
   1400186c1:	call   QWORD PTR [rip+0x2f59]        # 0x14001b620
   1400186c7:	add    rsp,0x20
   1400186cb:	pop    rbp
   1400186cc:	ret    
   1400186cd:	int3   
   1400186ce:	int3   
   1400186cf:	int3   
   1400186d0:	rex push rbp
   1400186d2:	sub    rsp,0x20
   1400186d6:	mov    rbp,rdx
   1400186d9:	lea    rcx,[rbp+0x40]
   1400186dd:	add    rcx,0x20
   1400186e1:	call   0x1400029e0
   1400186e6:	add    rsp,0x20
   1400186ea:	pop    rbp
   1400186eb:	ret    
   1400186ec:	int3   
   1400186ed:	int3   
   1400186ee:	int3   
   1400186ef:	int3   
   1400186f0:	rex push rbp
   1400186f2:	sub    rsp,0x20
   1400186f6:	mov    rbp,rdx
   1400186f9:	mov    rcx,QWORD PTR [rbp+0xe0]
   140018700:	add    rcx,0x8
   140018704:	call   QWORD PTR [rip+0x2f16]        # 0x14001b620
   14001870a:	add    rsp,0x20
   14001870e:	pop    rbp
   14001870f:	ret    
   140018710:	rex push rbp
   140018712:	sub    rsp,0x20
   140018716:	mov    rbp,rdx
   140018719:	mov    rcx,QWORD PTR [rbp+0xe0]
   140018720:	add    rcx,0x10
   140018724:	call   QWORD PTR [rip+0x2ef6]        # 0x14001b620
   14001872a:	add    rsp,0x20
   14001872e:	pop    rbp
   14001872f:	ret    
   140018730:	rex push rbp
   140018732:	sub    rsp,0x20
   140018736:	mov    rbp,rdx
   140018739:	mov    rcx,QWORD PTR [rbp+0xe0]
   140018740:	add    rcx,0x18
   140018744:	call   QWORD PTR [rip+0x2ed6]        # 0x14001b620
   14001874a:	add    rsp,0x20
   14001874e:	pop    rbp
   14001874f:	ret    
   140018750:	rex push rbp
   140018752:	sub    rsp,0x20
   140018756:	mov    rbp,rdx
   140018759:	mov    rcx,QWORD PTR [rbp+0xe0]
   140018760:	add    rcx,0x20
   140018764:	call   0x1400029e0
   140018769:	add    rsp,0x20
   14001876d:	pop    rbp
   14001876e:	ret    
   14001876f:	int3   
   140018770:	rex push rbp
   140018772:	sub    rsp,0x20
   140018776:	mov    rbp,rdx
   140018779:	lea    rcx,[rbp+0x38]
   14001877d:	call   QWORD PTR [rip+0x2af5]        # 0x14001b278
   140018783:	add    rsp,0x20
   140018787:	pop    rbp
   140018788:	ret    
   140018789:	int3   
   14001878a:	int3   
   14001878b:	int3   
   14001878c:	int3   
   14001878d:	int3   
   14001878e:	int3   
   14001878f:	int3   
   140018790:	rex push rbp
   140018792:	sub    rsp,0x20
   140018796:	mov    rbp,rdx
   140018799:	lea    rcx,[rbp+0x48]
   14001879d:	call   QWORD PTR [rip+0x2f1d]        # 0x14001b6c0
   1400187a3:	add    rsp,0x20
   1400187a7:	pop    rbp
   1400187a8:	ret    
   1400187a9:	int3   
   1400187aa:	int3   
   1400187ab:	int3   
   1400187ac:	int3   
   1400187ad:	int3   
   1400187ae:	int3   
   1400187af:	int3   
   1400187b0:	rex push rbp
   1400187b2:	sub    rsp,0x20
   1400187b6:	mov    rbp,rdx
   1400187b9:	lea    rcx,[rbp+0x28]
   1400187bd:	call   QWORD PTR [rip+0x2ef5]        # 0x14001b6b8
   1400187c3:	add    rsp,0x20
   1400187c7:	pop    rbp
   1400187c8:	ret    
   1400187c9:	int3   
   1400187ca:	int3   
   1400187cb:	int3   
   1400187cc:	int3   
   1400187cd:	int3   
   1400187ce:	int3   
   1400187cf:	int3   
   1400187d0:	rex push rbp
   1400187d2:	sub    rsp,0x20
   1400187d6:	mov    rbp,rdx
   1400187d9:	lea    rcx,[rbp+0x90]
   1400187e0:	call   QWORD PTR [rip+0x2e42]        # 0x14001b628
   1400187e6:	add    rsp,0x20
   1400187ea:	pop    rbp
   1400187eb:	ret    
   1400187ec:	int3   
   1400187ed:	int3   
   1400187ee:	int3   
   1400187ef:	int3   
   1400187f0:	rex push rbp
   1400187f2:	sub    rsp,0x20
   1400187f6:	mov    rbp,rdx
   1400187f9:	lea    rcx,[rbp+0x90]
   140018800:	call   QWORD PTR [rip+0x2e22]        # 0x14001b628
   140018806:	add    rsp,0x20
   14001880a:	pop    rbp
   14001880b:	ret    
   14001880c:	int3   
   14001880d:	int3   
   14001880e:	int3   
   14001880f:	int3   
   140018810:	rex push rbp
   140018812:	sub    rsp,0x20
   140018816:	mov    rbp,rdx
   140018819:	mov    rcx,QWORD PTR [rbp+0x90]
   140018820:	call   0x140013f3e
   140018825:	add    rsp,0x20
   140018829:	pop    rbp
   14001882a:	ret    
   14001882b:	int3   
   14001882c:	int3   
   14001882d:	int3   
   14001882e:	int3   
   14001882f:	int3   
   140018830:	rex push rbp
   140018832:	sub    rsp,0x20
   140018836:	mov    rbp,rdx
   140018839:	lea    rcx,[rbp+0x98]
   140018840:	call   QWORD PTR [rip+0x2b7a]        # 0x14001b3c0
   140018846:	add    rsp,0x20
   14001884a:	pop    rbp
   14001884b:	ret    
   14001884c:	int3   
   14001884d:	int3   
   14001884e:	int3   
   14001884f:	int3   
   140018850:	rex push rbp
   140018852:	sub    rsp,0x20
   140018856:	mov    rbp,rdx
   140018859:	lea    rcx,[rbp+0x90]
   140018860:	call   QWORD PTR [rip+0x2aea]        # 0x14001b350
   140018866:	add    rsp,0x20
   14001886a:	pop    rbp
   14001886b:	ret    
   14001886c:	int3   
   14001886d:	int3   
   14001886e:	int3   
   14001886f:	int3   
   140018870:	rex push rbp
   140018872:	sub    rsp,0x20
   140018876:	mov    rbp,rdx
   140018879:	lea    rcx,[rbp+0x20]
   14001887d:	call   QWORD PTR [rip+0x2d9d]        # 0x14001b620
   140018883:	add    rsp,0x20
   140018887:	pop    rbp
   140018888:	ret    
   140018889:	int3   
   14001888a:	int3   
   14001888b:	int3   
   14001888c:	int3   
   14001888d:	int3   
   14001888e:	int3   
   14001888f:	int3   
   140018890:	rex push rbp
   140018892:	sub    rsp,0x20
   140018896:	mov    rbp,rdx
   140018899:	mov    eax,DWORD PTR [rbp+0x58]
   14001889c:	and    eax,0x1
   14001889f:	test   eax,eax
   1400188a1:	je     0x1400188b1
   1400188a3:	and    DWORD PTR [rbp+0x58],0xfffffffe
   1400188a7:	mov    rcx,QWORD PTR [rbp+0x40]
   1400188ab:	call   QWORD PTR [rip+0x2d6f]        # 0x14001b620
   1400188b1:	add    rsp,0x20
   1400188b5:	pop    rbp
   1400188b6:	ret    
   1400188b7:	int3   
   1400188b8:	int3   
   1400188b9:	int3   
   1400188ba:	int3   
   1400188bb:	int3   
   1400188bc:	int3   
   1400188bd:	int3   
   1400188be:	int3   
   1400188bf:	int3   
   1400188c0:	rex push rbp
   1400188c2:	sub    rsp,0x20
   1400188c6:	mov    rbp,rdx
   1400188c9:	lea    rcx,[rbp+0x80]
   1400188d0:	call   QWORD PTR [rip+0x2d4a]        # 0x14001b620
   1400188d6:	add    rsp,0x20
   1400188da:	pop    rbp
   1400188db:	ret    
   1400188dc:	int3   
   1400188dd:	int3   
   1400188de:	int3   
   1400188df:	int3   
   1400188e0:	rex push rbp
   1400188e2:	sub    rsp,0x20
   1400188e6:	mov    rbp,rdx
   1400188e9:	mov    eax,DWORD PTR [rbp+0x78]
   1400188ec:	and    eax,0x1
   1400188ef:	test   eax,eax
   1400188f1:	je     0x140018901
   1400188f3:	and    DWORD PTR [rbp+0x78],0xfffffffe
   1400188f7:	mov    rcx,QWORD PTR [rbp+0x70]
   1400188fb:	call   QWORD PTR [rip+0x2d1f]        # 0x14001b620
   140018901:	add    rsp,0x20
   140018905:	pop    rbp
   140018906:	ret    
   140018907:	int3   
   140018908:	int3   
   140018909:	int3   
   14001890a:	int3   
   14001890b:	int3   
   14001890c:	int3   
   14001890d:	int3   
   14001890e:	int3   
   14001890f:	int3   
   140018910:	rex push rbp
   140018912:	sub    rsp,0x20
   140018916:	mov    rbp,rdx
   140018919:	mov    rdx,QWORD PTR [rbp+0x30]
   14001891d:	add    rdx,0x20
   140018921:	mov    rcx,QWORD PTR [rbp+0x40]
   140018925:	call   0x140006bc0
   14001892a:	add    rsp,0x20
   14001892e:	pop    rbp
   14001892f:	ret    
   140018930:	mov    QWORD PTR [rsp+0x10],rdx
   140018935:	push   rbp
   140018936:	sub    rsp,0x30
   14001893a:	mov    rbp,rdx
   14001893d:	mov    rcx,QWORD PTR [rbp+0x30]
   140018941:	add    rcx,0x18
   140018945:	call   QWORD PTR [rip+0x2cd5]        # 0x14001b620
   14001894b:	xor    edx,edx
   14001894d:	xor    ecx,ecx
   14001894f:	call   0x140013f4a
   140018954:	nop
   140018955:	add    rsp,0x30
   140018959:	pop    rbp
   14001895a:	ret    
   14001895b:	int3   
   14001895c:	int3   
   14001895d:	int3   
   14001895e:	int3   
   14001895f:	int3   
   140018960:	mov    QWORD PTR [rsp+0x10],rdx
   140018965:	push   rbp
   140018966:	sub    rsp,0x30
   14001896a:	mov    rbp,rdx
   14001896d:	mov    rdx,QWORD PTR [rbp+0x30]
   140018971:	mov    rcx,QWORD PTR [rbp+0x60]
   140018975:	call   QWORD PTR [rip+0x2c3d]        # 0x14001b5b8
   14001897b:	xor    edx,edx
   14001897d:	xor    ecx,ecx
   14001897f:	call   0x140013f4a
   140018984:	nop
   140018985:	add    rsp,0x30
   140018989:	pop    rbp
   14001898a:	ret    
   14001898b:	int3   
   14001898c:	int3   
   14001898d:	int3   
   14001898e:	int3   
   14001898f:	int3   
   140018990:	mov    QWORD PTR [rsp+0x10],rdx
   140018995:	push   rbp
   140018996:	sub    rsp,0x20
   14001899a:	mov    rbp,rdx
   14001899d:	xor    edx,edx
   14001899f:	xor    ecx,ecx
   1400189a1:	call   0x140013f4a
   1400189a6:	nop
   1400189a7:	add    rsp,0x20
   1400189ab:	pop    rbp
   1400189ac:	ret    
   1400189ad:	int3   
   1400189ae:	int3   
   1400189af:	int3   
   1400189b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400189b5:	push   rbp
   1400189b6:	sub    rsp,0x20
   1400189ba:	mov    rbp,rdx
   1400189bd:	mov    edx,0x1
   1400189c2:	lea    r8d,[rdx+0x7]
   1400189c6:	mov    rcx,QWORD PTR [rbp+0x60]
   1400189ca:	call   QWORD PTR [rip+0x2bf0]        # 0x14001b5c0
   1400189d0:	xor    edx,edx
   1400189d2:	xor    ecx,ecx
   1400189d4:	call   0x140013f4a
   1400189d9:	nop
   1400189da:	add    rsp,0x20
   1400189de:	pop    rbp
   1400189df:	ret    
   1400189e0:	int3   
   1400189e1:	int3   
   1400189e2:	int3   
   1400189e3:	int3   
   1400189e4:	int3   
   1400189e5:	int3   
   1400189e6:	int3   
   1400189e7:	int3   
   1400189e8:	int3   
   1400189e9:	int3   
   1400189ea:	int3   
   1400189eb:	int3   
   1400189ec:	int3   
   1400189ed:	int3   
   1400189ee:	int3   
   1400189ef:	int3   
   1400189f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400189f5:	push   rbp
   1400189f6:	sub    rsp,0x20
   1400189fa:	mov    rbp,rdx
   1400189fd:	xor    edx,edx
   1400189ff:	xor    ecx,ecx
   140018a01:	call   0x140013f4a
   140018a06:	nop
   140018a07:	add    rsp,0x20
   140018a0b:	pop    rbp
   140018a0c:	ret    
   140018a0d:	int3   
   140018a0e:	int3   
   140018a0f:	int3   
   140018a10:	mov    QWORD PTR [rsp+0x10],rdx
   140018a15:	push   rbp
   140018a16:	sub    rsp,0x20
   140018a1a:	mov    rbp,rdx
   140018a1d:	mov    edx,0x4
   140018a22:	lea    r8d,[rdx+0x4]
   140018a26:	mov    rcx,QWORD PTR [rbp+0x50]
   140018a2a:	call   QWORD PTR [rip+0x2b90]        # 0x14001b5c0
   140018a30:	xor    edx,edx
   140018a32:	xor    ecx,ecx
   140018a34:	call   0x140013f4a
   140018a39:	nop
   140018a3a:	add    rsp,0x20
   140018a3e:	pop    rbp
   140018a3f:	ret    
   140018a40:	int3   
   140018a41:	int3   
   140018a42:	int3   
   140018a43:	int3   
   140018a44:	int3   
   140018a45:	int3   
   140018a46:	int3   
   140018a47:	int3   
   140018a48:	int3   
   140018a49:	int3   
   140018a4a:	int3   
   140018a4b:	int3   
   140018a4c:	int3   
   140018a4d:	int3   
   140018a4e:	int3   
   140018a4f:	int3   
   140018a50:	rex push rbp
   140018a52:	sub    rsp,0x20
   140018a56:	mov    rbp,rdx
   140018a59:	lea    rcx,[rbp+0xb0]
   140018a60:	call   QWORD PTR [rip+0x2bba]        # 0x14001b620
   140018a66:	add    rsp,0x20
   140018a6a:	pop    rbp
   140018a6b:	ret    
   140018a6c:	int3   
   140018a6d:	int3   
   140018a6e:	int3   
   140018a6f:	int3   
   140018a70:	rex push rbp
   140018a72:	sub    rsp,0x20
   140018a76:	mov    rbp,rdx
   140018a79:	mov    eax,DWORD PTR [rbp+0x50]
   140018a7c:	and    eax,0x1
   140018a7f:	test   eax,eax
   140018a81:	je     0x140018a94
   140018a83:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140018a87:	mov    rcx,QWORD PTR [rbp+0x1b0]
   140018a8e:	call   QWORD PTR [rip+0x2b94]        # 0x14001b628
   140018a94:	add    rsp,0x20
   140018a98:	pop    rbp
   140018a99:	ret    
   140018a9a:	int3   
   140018a9b:	int3   
   140018a9c:	int3   
   140018a9d:	int3   
   140018a9e:	int3   
   140018a9f:	int3   
   140018aa0:	rex push rbp
   140018aa2:	sub    rsp,0x20
   140018aa6:	mov    rbp,rdx
   140018aa9:	lea    rcx,[rbp+0x48]
   140018aad:	call   0x1400029e0
   140018ab2:	add    rsp,0x20
   140018ab6:	pop    rbp
   140018ab7:	ret    
   140018ab8:	int3   
   140018ab9:	int3   
   140018aba:	int3   
   140018abb:	int3   
   140018abc:	int3   
   140018abd:	int3   
   140018abe:	int3   
   140018abf:	int3   
   140018ac0:	rex push rbp
   140018ac2:	sub    rsp,0x20
   140018ac6:	mov    rbp,rdx
   140018ac9:	lea    rcx,[rbp+0x30]
   140018acd:	call   0x1400029e0
   140018ad2:	add    rsp,0x20
   140018ad6:	pop    rbp
   140018ad7:	ret    
   140018ad8:	int3   
   140018ad9:	int3   
   140018ada:	int3   
   140018adb:	int3   
   140018adc:	int3   
   140018add:	int3   
   140018ade:	int3   
   140018adf:	int3   
   140018ae0:	rex push rbp
   140018ae2:	sub    rsp,0x20
   140018ae6:	mov    rbp,rdx
   140018ae9:	lea    rcx,[rbp+0x38]
   140018aed:	call   0x14000daf0
   140018af2:	add    rsp,0x20
   140018af6:	pop    rbp
   140018af7:	ret    
   140018af8:	int3   
   140018af9:	int3   
   140018afa:	int3   
   140018afb:	int3   
   140018afc:	int3   
   140018afd:	int3   
   140018afe:	int3   
   140018aff:	int3   
   140018b00:	rex push rbp
   140018b02:	sub    rsp,0x20
   140018b06:	mov    rbp,rdx
   140018b09:	lea    rcx,[rbp+0x20]
   140018b0d:	call   0x140002760
   140018b12:	add    rsp,0x20
   140018b16:	pop    rbp
   140018b17:	ret    
   140018b18:	int3   
   140018b19:	int3   
   140018b1a:	int3   
   140018b1b:	int3   
   140018b1c:	int3   
   140018b1d:	int3   
   140018b1e:	int3   
   140018b1f:	int3   
   140018b20:	rex push rbp
   140018b22:	sub    rsp,0x20
   140018b26:	mov    rbp,rdx
   140018b29:	lea    rcx,[rbp+0xc0]
   140018b30:	call   QWORD PTR [rip+0x2aea]        # 0x14001b620
   140018b36:	add    rsp,0x20
   140018b3a:	pop    rbp
   140018b3b:	ret    
   140018b3c:	int3   
   140018b3d:	int3   
   140018b3e:	int3   
   140018b3f:	int3   
   140018b40:	rex push rbp
   140018b42:	sub    rsp,0x20
   140018b46:	mov    rbp,rdx
   140018b49:	lea    rcx,[rbp+0x90]
   140018b50:	call   QWORD PTR [rip+0x2ad2]        # 0x14001b628
   140018b56:	add    rsp,0x20
   140018b5a:	pop    rbp
   140018b5b:	ret    
   140018b5c:	int3   
   140018b5d:	int3   
   140018b5e:	int3   
   140018b5f:	int3   
   140018b60:	rex push rbp
   140018b62:	sub    rsp,0x20
   140018b66:	mov    rbp,rdx
   140018b69:	lea    rcx,[rbp+0xd0]
   140018b70:	call   QWORD PTR [rip+0x2aaa]        # 0x14001b620
   140018b76:	add    rsp,0x20
   140018b7a:	pop    rbp
   140018b7b:	ret    
   140018b7c:	int3   
   140018b7d:	int3   
   140018b7e:	int3   
   140018b7f:	int3   
   140018b80:	rex push rbp
   140018b82:	sub    rsp,0x20
   140018b86:	mov    rbp,rdx
   140018b89:	lea    rcx,[rbp+0x98]
   140018b90:	call   QWORD PTR [rip+0x2a92]        # 0x14001b628
   140018b96:	add    rsp,0x20
   140018b9a:	pop    rbp
   140018b9b:	ret    
   140018b9c:	int3   
   140018b9d:	int3   
   140018b9e:	int3   
   140018b9f:	int3   
   140018ba0:	rex push rbp
   140018ba2:	sub    rsp,0x20
   140018ba6:	mov    rbp,rdx
   140018ba9:	mov    eax,DWORD PTR [rbp+0x50]
   140018bac:	and    eax,0x2
   140018baf:	test   eax,eax
   140018bb1:	je     0x140018bc4
   140018bb3:	and    DWORD PTR [rbp+0x50],0xfffffffd
   140018bb7:	lea    rcx,[rbp+0xe0]
   140018bbe:	call   QWORD PTR [rip+0x2a5c]        # 0x14001b620
   140018bc4:	add    rsp,0x20
   140018bc8:	pop    rbp
   140018bc9:	ret    
   140018bca:	int3   
   140018bcb:	int3   
   140018bcc:	int3   
   140018bcd:	int3   
   140018bce:	int3   
   140018bcf:	int3   
   140018bd0:	rex push rbp
   140018bd2:	sub    rsp,0x20
   140018bd6:	mov    rbp,rdx
   140018bd9:	lea    rcx,[rbp+0x58]
   140018bdd:	call   QWORD PTR [rip+0x2a45]        # 0x14001b628
   140018be3:	add    rsp,0x20
   140018be7:	pop    rbp
   140018be8:	ret    
   140018be9:	int3   
   140018bea:	int3   
   140018beb:	int3   
   140018bec:	int3   
   140018bed:	int3   
   140018bee:	int3   
   140018bef:	int3   
   140018bf0:	rex push rbp
   140018bf2:	sub    rsp,0x20
   140018bf6:	mov    rbp,rdx
   140018bf9:	lea    rcx,[rbp+0x80]
   140018c00:	call   QWORD PTR [rip+0x2a22]        # 0x14001b628
   140018c06:	add    rsp,0x20
   140018c0a:	pop    rbp
   140018c0b:	ret    
   140018c0c:	int3   
   140018c0d:	int3   
   140018c0e:	int3   
   140018c0f:	int3   
   140018c10:	rex push rbp
   140018c12:	sub    rsp,0x20
   140018c16:	mov    rbp,rdx
   140018c19:	lea    rcx,[rbp+0x100]
   140018c20:	call   QWORD PTR [rip+0x2a02]        # 0x14001b628
   140018c26:	add    rsp,0x20
   140018c2a:	pop    rbp
   140018c2b:	ret    
   140018c2c:	int3   
   140018c2d:	int3   
   140018c2e:	int3   
   140018c2f:	int3   
   140018c30:	rex push rbp
   140018c32:	sub    rsp,0x20
   140018c36:	mov    rbp,rdx
   140018c39:	lea    rcx,[rbp+0xf0]
   140018c40:	call   QWORD PTR [rip+0x29e2]        # 0x14001b628
   140018c46:	add    rsp,0x20
   140018c4a:	pop    rbp
   140018c4b:	ret    
   140018c4c:	int3   
   140018c4d:	int3   
   140018c4e:	int3   
   140018c4f:	int3   
   140018c50:	rex push rbp
   140018c52:	sub    rsp,0x20
   140018c56:	mov    rbp,rdx
   140018c59:	lea    rcx,[rbp+0x70]
   140018c5d:	call   QWORD PTR [rip+0x29c5]        # 0x14001b628
   140018c63:	add    rsp,0x20
   140018c67:	pop    rbp
   140018c68:	ret    
   140018c69:	int3   
   140018c6a:	int3   
   140018c6b:	int3   
   140018c6c:	int3   
   140018c6d:	int3   
   140018c6e:	int3   
   140018c6f:	int3   
   140018c70:	rex push rbp
   140018c72:	sub    rsp,0x20
   140018c76:	mov    rbp,rdx
   140018c79:	lea    rcx,[rbp+0x78]
   140018c7d:	call   QWORD PTR [rip+0x29a5]        # 0x14001b628
   140018c83:	add    rsp,0x20
   140018c87:	pop    rbp
   140018c88:	ret    
   140018c89:	int3   
   140018c8a:	int3   
   140018c8b:	int3   
   140018c8c:	int3   
   140018c8d:	int3   
   140018c8e:	int3   
   140018c8f:	int3   
   140018c90:	rex push rbp
   140018c92:	sub    rsp,0x20
   140018c96:	mov    rbp,rdx
   140018c99:	lea    rcx,[rbp+0x68]
   140018c9d:	call   QWORD PTR [rip+0x2985]        # 0x14001b628
   140018ca3:	add    rsp,0x20
   140018ca7:	pop    rbp
   140018ca8:	ret    
   140018ca9:	int3   
   140018caa:	int3   
   140018cab:	int3   
   140018cac:	int3   
   140018cad:	int3   
   140018cae:	int3   
   140018caf:	int3   
   140018cb0:	rex push rbp
   140018cb2:	sub    rsp,0x20
   140018cb6:	mov    rbp,rdx
   140018cb9:	lea    rcx,[rbp+0x130]
   140018cc0:	call   QWORD PTR [rip+0x2962]        # 0x14001b628
   140018cc6:	add    rsp,0x20
   140018cca:	pop    rbp
   140018ccb:	ret    
   140018ccc:	int3   
   140018ccd:	int3   
   140018cce:	int3   
   140018ccf:	int3   
   140018cd0:	rex push rbp
   140018cd2:	sub    rsp,0x20
   140018cd6:	mov    rbp,rdx
   140018cd9:	lea    rcx,[rbp+0x120]
   140018ce0:	call   QWORD PTR [rip+0x2942]        # 0x14001b628
   140018ce6:	add    rsp,0x20
   140018cea:	pop    rbp
   140018ceb:	ret    
   140018cec:	int3   
   140018ced:	int3   
   140018cee:	int3   
   140018cef:	int3   
   140018cf0:	rex push rbp
   140018cf2:	sub    rsp,0x20
   140018cf6:	mov    rbp,rdx
   140018cf9:	lea    rcx,[rbp+0x110]
   140018d00:	call   QWORD PTR [rip+0x2922]        # 0x14001b628
   140018d06:	add    rsp,0x20
   140018d0a:	pop    rbp
   140018d0b:	ret    
   140018d0c:	int3   
   140018d0d:	int3   
   140018d0e:	int3   
   140018d0f:	int3   
   140018d10:	rex push rbp
   140018d12:	sub    rsp,0x20
   140018d16:	mov    rbp,rdx
   140018d19:	lea    rcx,[rbp+0x60]
   140018d1d:	call   QWORD PTR [rip+0x2905]        # 0x14001b628
   140018d23:	add    rsp,0x20
   140018d27:	pop    rbp
   140018d28:	ret    
   140018d29:	int3   
   140018d2a:	int3   
   140018d2b:	int3   
   140018d2c:	int3   
   140018d2d:	int3   
   140018d2e:	int3   
   140018d2f:	int3   
   140018d30:	rex push rbp
   140018d32:	sub    rsp,0x20
   140018d36:	mov    rbp,rdx
   140018d39:	lea    rcx,[rbp+0x178]
   140018d40:	call   0x14000f080
   140018d45:	add    rsp,0x20
   140018d49:	pop    rbp
   140018d4a:	ret    
   140018d4b:	int3   
   140018d4c:	int3   
   140018d4d:	int3   
   140018d4e:	int3   
   140018d4f:	int3   
   140018d50:	rex push rbp
   140018d52:	sub    rsp,0x20
   140018d56:	mov    rbp,rdx
   140018d59:	lea    rcx,[rbp+0x30]
   140018d5d:	call   0x14000f080
   140018d62:	add    rsp,0x20
   140018d66:	pop    rbp
   140018d67:	ret    
   140018d68:	int3   
   140018d69:	int3   
   140018d6a:	int3   
   140018d6b:	int3   
   140018d6c:	int3   
   140018d6d:	int3   
   140018d6e:	int3   
   140018d6f:	int3   
   140018d70:	rex push rbp
   140018d72:	sub    rsp,0x20
   140018d76:	mov    rbp,rdx
   140018d79:	lea    rcx,[rbp+0x40]
   140018d7d:	call   0x140006e30
   140018d82:	add    rsp,0x20
   140018d86:	pop    rbp
   140018d87:	ret    
   140018d88:	int3   
   140018d89:	int3   
   140018d8a:	int3   
   140018d8b:	int3   
   140018d8c:	int3   
   140018d8d:	int3   
   140018d8e:	int3   
   140018d8f:	int3   
   140018d90:	rex push rbp
   140018d92:	sub    rsp,0x20
   140018d96:	mov    rbp,rdx
   140018d99:	lea    rcx,[rbp+0xa8]
   140018da0:	call   QWORD PTR [rip+0x287a]        # 0x14001b620
   140018da6:	add    rsp,0x20
   140018daa:	pop    rbp
   140018dab:	ret    
   140018dac:	int3   
   140018dad:	int3   
   140018dae:	int3   
   140018daf:	int3   
   140018db0:	rex push rbp
   140018db2:	sub    rsp,0x20
   140018db6:	mov    rbp,rdx
   140018db9:	lea    rcx,[rbp+0x80]
   140018dc0:	call   QWORD PTR [rip+0x285a]        # 0x14001b620
   140018dc6:	add    rsp,0x20
   140018dca:	pop    rbp
   140018dcb:	ret    
   140018dcc:	int3   
   140018dcd:	int3   
   140018dce:	int3   
   140018dcf:	int3   
   140018dd0:	rex push rbp
   140018dd2:	sub    rsp,0x20
   140018dd6:	mov    rbp,rdx
   140018dd9:	lea    rcx,[rbp+0x58]
   140018ddd:	call   QWORD PTR [rip+0x283d]        # 0x14001b620
   140018de3:	add    rsp,0x20
   140018de7:	pop    rbp
   140018de8:	ret    
   140018de9:	int3   
   140018dea:	int3   
   140018deb:	int3   
   140018dec:	int3   
   140018ded:	int3   
   140018dee:	int3   
   140018def:	int3   
   140018df0:	rex push rbp
   140018df2:	sub    rsp,0x20
   140018df6:	mov    rbp,rdx
   140018df9:	lea    rcx,[rbp+0x70]
   140018dfd:	call   QWORD PTR [rip+0x281d]        # 0x14001b620
   140018e03:	add    rsp,0x20
   140018e07:	pop    rbp
   140018e08:	ret    
   140018e09:	int3   
   140018e0a:	int3   
   140018e0b:	int3   
   140018e0c:	int3   
   140018e0d:	int3   
   140018e0e:	int3   
   140018e0f:	int3   
   140018e10:	rex push rbp
   140018e12:	sub    rsp,0x20
   140018e16:	mov    rbp,rdx
   140018e19:	lea    rcx,[rbp+0x90]
   140018e20:	call   QWORD PTR [rip+0x27fa]        # 0x14001b620
   140018e26:	add    rsp,0x20
   140018e2a:	pop    rbp
   140018e2b:	ret    
   140018e2c:	int3   
   140018e2d:	int3   
   140018e2e:	int3   
   140018e2f:	int3   
   140018e30:	rex push rbp
   140018e32:	sub    rsp,0x20
   140018e36:	mov    rbp,rdx
   140018e39:	lea    rcx,[rbp+0x60]
   140018e3d:	call   QWORD PTR [rip+0x27dd]        # 0x14001b620
   140018e43:	add    rsp,0x20
   140018e47:	pop    rbp
   140018e48:	ret    
   140018e49:	int3   
   140018e4a:	int3   
   140018e4b:	int3   
   140018e4c:	int3   
   140018e4d:	int3   
   140018e4e:	int3   
   140018e4f:	int3   
   140018e50:	rex push rbp
   140018e52:	sub    rsp,0x20
   140018e56:	mov    rbp,rdx
   140018e59:	mov    rcx,QWORD PTR [rbp+0x38]
   140018e5d:	add    rcx,0x8
   140018e61:	call   QWORD PTR [rip+0x27b9]        # 0x14001b620
   140018e67:	add    rsp,0x20
   140018e6b:	pop    rbp
   140018e6c:	ret    
   140018e6d:	int3   
   140018e6e:	int3   
   140018e6f:	int3   
   140018e70:	rex push rbp
   140018e72:	sub    rsp,0x20
   140018e76:	mov    rbp,rdx
   140018e79:	mov    rcx,QWORD PTR [rbp+0x38]
   140018e7d:	add    rcx,0x10
   140018e81:	call   QWORD PTR [rip+0x2799]        # 0x14001b620
   140018e87:	add    rsp,0x20
   140018e8b:	pop    rbp
   140018e8c:	ret    
   140018e8d:	int3   
   140018e8e:	int3   
   140018e8f:	int3   
   140018e90:	rex push rbp
   140018e92:	sub    rsp,0x20
   140018e96:	mov    rbp,rdx
   140018e99:	mov    rcx,QWORD PTR [rbp+0x38]
   140018e9d:	add    rcx,0x18
   140018ea1:	call   QWORD PTR [rip+0x2779]        # 0x14001b620
   140018ea7:	add    rsp,0x20
   140018eab:	pop    rbp
   140018eac:	ret    
   140018ead:	int3   
   140018eae:	int3   
   140018eaf:	int3   
   140018eb0:	rex push rbp
   140018eb2:	sub    rsp,0x20
   140018eb6:	mov    rbp,rdx
   140018eb9:	mov    rcx,QWORD PTR [rbp+0x38]
   140018ebd:	add    rcx,0x20
   140018ec1:	call   0x1400029e0
   140018ec6:	add    rsp,0x20
   140018eca:	pop    rbp
   140018ecb:	ret    
   140018ecc:	int3   
   140018ecd:	int3   
   140018ece:	int3   
   140018ecf:	int3   
   140018ed0:	rex push rbp
   140018ed2:	sub    rsp,0x20
   140018ed6:	mov    rbp,rdx
   140018ed9:	lea    rcx,[rbp+0x68]
   140018edd:	call   QWORD PTR [rip+0x273d]        # 0x14001b620
   140018ee3:	add    rsp,0x20
   140018ee7:	pop    rbp
   140018ee8:	ret    
   140018ee9:	int3   
   140018eea:	int3   
   140018eeb:	int3   
   140018eec:	int3   
   140018eed:	int3   
   140018eee:	int3   
   140018eef:	int3   
   140018ef0:	rex push rbp
   140018ef2:	sub    rsp,0x20
   140018ef6:	mov    rbp,rdx
   140018ef9:	mov    rcx,QWORD PTR [rbp+0xa0]
   140018f00:	add    rcx,0x8
   140018f04:	call   QWORD PTR [rip+0x2716]        # 0x14001b620
   140018f0a:	add    rsp,0x20
   140018f0e:	pop    rbp
   140018f0f:	ret    
   140018f10:	rex push rbp
   140018f12:	sub    rsp,0x20
   140018f16:	mov    rbp,rdx
   140018f19:	mov    rcx,QWORD PTR [rbp+0xa0]
   140018f20:	add    rcx,0x10
   140018f24:	call   QWORD PTR [rip+0x26f6]        # 0x14001b620
   140018f2a:	add    rsp,0x20
   140018f2e:	pop    rbp
   140018f2f:	ret    
   140018f30:	rex push rbp
   140018f32:	sub    rsp,0x20
   140018f36:	mov    rbp,rdx
   140018f39:	mov    rcx,QWORD PTR [rbp+0xa0]
   140018f40:	add    rcx,0x18
   140018f44:	call   QWORD PTR [rip+0x26d6]        # 0x14001b620
   140018f4a:	add    rsp,0x20
   140018f4e:	pop    rbp
   140018f4f:	ret    
   140018f50:	rex push rbp
   140018f52:	sub    rsp,0x20
   140018f56:	mov    rbp,rdx
   140018f59:	mov    rcx,QWORD PTR [rbp+0xa0]
   140018f60:	add    rcx,0x20
   140018f64:	call   0x1400029e0
   140018f69:	add    rsp,0x20
   140018f6d:	pop    rbp
   140018f6e:	ret    
   140018f6f:	int3   
   140018f70:	rex push rbp
   140018f72:	sub    rsp,0x20
   140018f76:	mov    rbp,rdx
   140018f79:	mov    rcx,QWORD PTR [rbp+0xa0]
   140018f80:	add    rcx,0x8
   140018f84:	call   QWORD PTR [rip+0x2696]        # 0x14001b620
   140018f8a:	add    rsp,0x20
   140018f8e:	pop    rbp
   140018f8f:	ret    
   140018f90:	rex push rbp
   140018f92:	sub    rsp,0x20
   140018f96:	mov    rbp,rdx
   140018f99:	mov    rcx,QWORD PTR [rbp+0xa0]
   140018fa0:	add    rcx,0x10
   140018fa4:	call   QWORD PTR [rip+0x2676]        # 0x14001b620
   140018faa:	add    rsp,0x20
   140018fae:	pop    rbp
   140018faf:	ret    
   140018fb0:	rex push rbp
   140018fb2:	sub    rsp,0x20
   140018fb6:	mov    rbp,rdx
   140018fb9:	mov    rcx,QWORD PTR [rbp+0xa0]
   140018fc0:	add    rcx,0x18
   140018fc4:	call   QWORD PTR [rip+0x2656]        # 0x14001b620
   140018fca:	add    rsp,0x20
   140018fce:	pop    rbp
   140018fcf:	ret    
   140018fd0:	rex push rbp
   140018fd2:	sub    rsp,0x20
   140018fd6:	mov    rbp,rdx
   140018fd9:	mov    rcx,QWORD PTR [rbp+0xa0]
   140018fe0:	add    rcx,0x20
   140018fe4:	call   0x1400029e0
   140018fe9:	add    rsp,0x20
   140018fed:	pop    rbp
   140018fee:	ret    
   140018fef:	int3   
   140018ff0:	rex push rbp
   140018ff2:	sub    rsp,0x20
   140018ff6:	mov    rbp,rdx
   140018ff9:	lea    rcx,[rbp+0xc0]
   140019000:	call   0x140002b70
   140019005:	add    rsp,0x20
   140019009:	pop    rbp
   14001900a:	ret    
   14001900b:	int3   
   14001900c:	int3   
   14001900d:	int3   
   14001900e:	int3   
   14001900f:	int3   
   140019010:	rex push rbp
   140019012:	sub    rsp,0x20
   140019016:	mov    rbp,rdx
   140019019:	lea    rcx,[rbp+0x88]
   140019020:	call   QWORD PTR [rip+0x2602]        # 0x14001b628
   140019026:	add    rsp,0x20
   14001902a:	pop    rbp
   14001902b:	ret    
   14001902c:	int3   
   14001902d:	int3   
   14001902e:	int3   
   14001902f:	int3   
   140019030:	rex push rbp
   140019032:	sub    rsp,0x20
   140019036:	mov    rbp,rdx
   140019039:	lea    rcx,[rbp+0x78]
   14001903d:	call   QWORD PTR [rip+0x25e5]        # 0x14001b628
   140019043:	add    rsp,0x20
   140019047:	pop    rbp
   140019048:	ret    
   140019049:	int3   
   14001904a:	int3   
   14001904b:	int3   
   14001904c:	int3   
   14001904d:	int3   
   14001904e:	int3   
   14001904f:	int3   
   140019050:	rex push rbp
   140019052:	sub    rsp,0x20
   140019056:	mov    rbp,rdx
   140019059:	lea    rcx,[rbp+0x50]
   14001905d:	call   0x140002880
   140019062:	add    rsp,0x20
   140019066:	pop    rbp
   140019067:	ret    
   140019068:	int3   
   140019069:	int3   
   14001906a:	int3   
   14001906b:	int3   
   14001906c:	int3   
   14001906d:	int3   
   14001906e:	int3   
   14001906f:	int3   
   140019070:	rex push rbp
   140019072:	sub    rsp,0x20
   140019076:	mov    rbp,rdx
   140019079:	lea    rcx,[rbp+0x50]
   14001907d:	call   0x1400029e0
   140019082:	add    rsp,0x20
   140019086:	pop    rbp
   140019087:	ret    
   140019088:	int3   
   140019089:	int3   
   14001908a:	int3   
   14001908b:	int3   
   14001908c:	int3   
   14001908d:	int3   
   14001908e:	int3   
   14001908f:	int3   
   140019090:	rex push rbp
   140019092:	sub    rsp,0x20
   140019096:	mov    rbp,rdx
   140019099:	lea    rcx,[rbp+0xc0]
   1400190a0:	add    rcx,0x8
   1400190a4:	call   QWORD PTR [rip+0x2576]        # 0x14001b620
   1400190aa:	add    rsp,0x20
   1400190ae:	pop    rbp
   1400190af:	ret    
   1400190b0:	rex push rbp
   1400190b2:	sub    rsp,0x20
   1400190b6:	mov    rbp,rdx
   1400190b9:	lea    rcx,[rbp+0xc0]
   1400190c0:	add    rcx,0x10
   1400190c4:	call   QWORD PTR [rip+0x2556]        # 0x14001b620
   1400190ca:	add    rsp,0x20
   1400190ce:	pop    rbp
   1400190cf:	ret    
   1400190d0:	rex push rbp
   1400190d2:	sub    rsp,0x20
   1400190d6:	mov    rbp,rdx
   1400190d9:	lea    rcx,[rbp+0xc0]
   1400190e0:	add    rcx,0x18
   1400190e4:	call   QWORD PTR [rip+0x2536]        # 0x14001b620
   1400190ea:	add    rsp,0x20
   1400190ee:	pop    rbp
   1400190ef:	ret    
   1400190f0:	rex push rbp
   1400190f2:	sub    rsp,0x20
   1400190f6:	mov    rbp,rdx
   1400190f9:	lea    rcx,[rbp+0xc0]
   140019100:	add    rcx,0x20
   140019104:	call   0x1400029e0
   140019109:	add    rsp,0x20
   14001910d:	pop    rbp
   14001910e:	ret    
   14001910f:	int3   
   140019110:	rex push rbp
   140019112:	sub    rsp,0x20
   140019116:	mov    rbp,rdx
   140019119:	mov    eax,DWORD PTR [rbp+0x58]
   14001911c:	and    eax,0x1
   14001911f:	test   eax,eax
   140019121:	je     0x140019131
   140019123:	and    DWORD PTR [rbp+0x58],0xfffffffe
   140019127:	mov    rcx,QWORD PTR [rbp+0x40]
   14001912b:	call   QWORD PTR [rip+0x24f7]        # 0x14001b628
   140019131:	add    rsp,0x20
   140019135:	pop    rbp
   140019136:	ret    
   140019137:	int3   
   140019138:	int3   
   140019139:	int3   
   14001913a:	int3   
   14001913b:	int3   
   14001913c:	int3   
   14001913d:	int3   
   14001913e:	int3   
   14001913f:	int3   
   140019140:	rex push rbp
   140019142:	sub    rsp,0x20
   140019146:	mov    rbp,rdx
   140019149:	lea    rcx,[rbp+0x40]
   14001914d:	call   QWORD PTR [rip+0x2125]        # 0x14001b278
   140019153:	add    rsp,0x20
   140019157:	pop    rbp
   140019158:	ret    
   140019159:	int3   
   14001915a:	int3   
   14001915b:	int3   
   14001915c:	int3   
   14001915d:	int3   
   14001915e:	int3   
   14001915f:	int3   
   140019160:	rex push rbp
   140019162:	sub    rsp,0x20
   140019166:	mov    rbp,rdx
   140019169:	lea    rcx,[rbp+0x30]
   14001916d:	call   QWORD PTR [rip+0x24b5]        # 0x14001b628
   140019173:	add    rsp,0x20
   140019177:	pop    rbp
   140019178:	ret    
   140019179:	int3   
   14001917a:	int3   
   14001917b:	int3   
   14001917c:	int3   
   14001917d:	int3   
   14001917e:	int3   
   14001917f:	int3   
   140019180:	rex push rbp
   140019182:	sub    rsp,0x20
   140019186:	mov    rbp,rdx
   140019189:	lea    rcx,[rbp+0x28]
   14001918d:	call   QWORD PTR [rip+0x248d]        # 0x14001b620
   140019193:	add    rsp,0x20
   140019197:	pop    rbp
   140019198:	ret    
   140019199:	int3   
   14001919a:	int3   
   14001919b:	int3   
   14001919c:	int3   
   14001919d:	int3   
   14001919e:	int3   
   14001919f:	int3   
   1400191a0:	rex push rbp
   1400191a2:	sub    rsp,0x20
   1400191a6:	mov    rbp,rdx
   1400191a9:	lea    rcx,[rbp+0x20]
   1400191ad:	call   QWORD PTR [rip+0x2475]        # 0x14001b628
   1400191b3:	add    rsp,0x20
   1400191b7:	pop    rbp
   1400191b8:	ret    
   1400191b9:	int3   
   1400191ba:	int3   
   1400191bb:	int3   
   1400191bc:	int3   
   1400191bd:	int3   
   1400191be:	int3   
   1400191bf:	int3   
   1400191c0:	rex push rbp
   1400191c2:	sub    rsp,0x20
   1400191c6:	mov    rbp,rdx
   1400191c9:	lea    rcx,[rbp+0x98]
   1400191d0:	call   QWORD PTR [rip+0x244a]        # 0x14001b620
   1400191d6:	add    rsp,0x20
   1400191da:	pop    rbp
   1400191db:	ret    
   1400191dc:	int3   
   1400191dd:	int3   
   1400191de:	int3   
   1400191df:	int3   
   1400191e0:	rex push rbp
   1400191e2:	sub    rsp,0x20
   1400191e6:	mov    rbp,rdx
   1400191e9:	mov    eax,DWORD PTR [rbp+0x90]
   1400191ef:	and    eax,0x1
   1400191f2:	test   eax,eax
   1400191f4:	je     0x14001920a
   1400191f6:	and    DWORD PTR [rbp+0x90],0xfffffffe
   1400191fd:	mov    rcx,QWORD PTR [rbp+0x80]
   140019204:	call   QWORD PTR [rip+0x241e]        # 0x14001b628
   14001920a:	add    rsp,0x20
   14001920e:	pop    rbp
   14001920f:	ret    
   140019210:	rex push rbp
   140019212:	sub    rsp,0x20
   140019216:	mov    rbp,rdx
   140019219:	lea    rcx,[rbp+0x50]
   14001921d:	call   QWORD PTR [rip+0x21c5]        # 0x14001b3e8
   140019223:	add    rsp,0x20
   140019227:	pop    rbp
   140019228:	ret    
   140019229:	int3   
   14001922a:	int3   
   14001922b:	int3   
   14001922c:	int3   
   14001922d:	int3   
   14001922e:	int3   
   14001922f:	int3   
   140019230:	rex push rbp
   140019232:	sub    rsp,0x20
   140019236:	mov    rbp,rdx
   140019239:	lea    rcx,[rbp+0x50]
   14001923d:	call   QWORD PTR [rip+0x23e5]        # 0x14001b628
   140019243:	add    rsp,0x20
   140019247:	pop    rbp
   140019248:	ret    
   140019249:	int3   
   14001924a:	int3   
   14001924b:	int3   
   14001924c:	int3   
   14001924d:	int3   
   14001924e:	int3   
   14001924f:	int3   
   140019250:	rex push rbp
   140019252:	sub    rsp,0x20
   140019256:	mov    rbp,rdx
   140019259:	mov    eax,DWORD PTR [rbp+0x30]
   14001925c:	and    eax,0x1
   14001925f:	test   eax,eax
   140019261:	je     0x140019273
   140019263:	and    DWORD PTR [rbp+0x30],0xfffffffe
   140019267:	mov    rcx,QWORD PTR [rbp+0x2b0]
   14001926e:	call   0x140004980
   140019273:	add    rsp,0x20
   140019277:	pop    rbp
   140019278:	ret    
   140019279:	int3   
   14001927a:	int3   
   14001927b:	int3   
   14001927c:	int3   
   14001927d:	int3   
   14001927e:	int3   
   14001927f:	int3   
   140019280:	rex push rbp
   140019282:	sub    rsp,0x20
   140019286:	mov    rbp,rdx
   140019289:	lea    rcx,[rbp+0xc8]
   140019290:	call   QWORD PTR [rip+0x2392]        # 0x14001b628
   140019296:	add    rsp,0x20
   14001929a:	pop    rbp
   14001929b:	ret    
   14001929c:	int3   
   14001929d:	int3   
   14001929e:	int3   
   14001929f:	int3   
   1400192a0:	rex push rbp
   1400192a2:	sub    rsp,0x20
   1400192a6:	mov    rbp,rdx
   1400192a9:	lea    rcx,[rbp+0x130]
   1400192b0:	call   QWORD PTR [rip+0x2372]        # 0x14001b628
   1400192b6:	add    rsp,0x20
   1400192ba:	pop    rbp
   1400192bb:	ret    
   1400192bc:	int3   
   1400192bd:	int3   
   1400192be:	int3   
   1400192bf:	int3   
   1400192c0:	rex push rbp
   1400192c2:	sub    rsp,0x20
   1400192c6:	mov    rbp,rdx
   1400192c9:	lea    rcx,[rbp+0x1b8]
   1400192d0:	call   QWORD PTR [rip+0x200a]        # 0x14001b2e0
   1400192d6:	add    rsp,0x20
   1400192da:	pop    rbp
   1400192db:	ret    
   1400192dc:	int3   
   1400192dd:	int3   
   1400192de:	int3   
   1400192df:	int3   
   1400192e0:	rex push rbp
   1400192e2:	sub    rsp,0x20
   1400192e6:	mov    rbp,rdx
   1400192e9:	lea    rcx,[rbp+0x178]
   1400192f0:	call   QWORD PTR [rip+0x2332]        # 0x14001b628
   1400192f6:	add    rsp,0x20
   1400192fa:	pop    rbp
   1400192fb:	ret    
   1400192fc:	int3   
   1400192fd:	int3   
   1400192fe:	int3   
   1400192ff:	int3   
   140019300:	rex push rbp
   140019302:	sub    rsp,0x20
   140019306:	mov    rbp,rdx
   140019309:	lea    rcx,[rbp+0x70]
   14001930d:	call   QWORD PTR [rip+0x1fcd]        # 0x14001b2e0
   140019313:	add    rsp,0x20
   140019317:	pop    rbp
   140019318:	ret    
   140019319:	int3   
   14001931a:	int3   
   14001931b:	int3   
   14001931c:	int3   
   14001931d:	int3   
   14001931e:	int3   
   14001931f:	int3   
   140019320:	rex push rbp
   140019322:	sub    rsp,0x20
   140019326:	mov    rbp,rdx
   140019329:	lea    rcx,[rbp+0x108]
   140019330:	call   QWORD PTR [rip+0x22f2]        # 0x14001b628
   140019336:	add    rsp,0x20
   14001933a:	pop    rbp
   14001933b:	ret    
   14001933c:	int3   
   14001933d:	int3   
   14001933e:	int3   
   14001933f:	int3   
   140019340:	rex push rbp
   140019342:	sub    rsp,0x20
   140019346:	mov    rbp,rdx
   140019349:	lea    rcx,[rbp+0xd8]
   140019350:	call   QWORD PTR [rip+0x22d2]        # 0x14001b628
   140019356:	add    rsp,0x20
   14001935a:	pop    rbp
   14001935b:	ret    
   14001935c:	int3   
   14001935d:	int3   
   14001935e:	int3   
   14001935f:	int3   
   140019360:	rex push rbp
   140019362:	sub    rsp,0x20
   140019366:	mov    rbp,rdx
   140019369:	lea    rcx,[rbp+0x240]
   140019370:	call   QWORD PTR [rip+0x22b2]        # 0x14001b628
   140019376:	add    rsp,0x20
   14001937a:	pop    rbp
   14001937b:	ret    
   14001937c:	int3   
   14001937d:	int3   
   14001937e:	int3   
   14001937f:	int3   
   140019380:	rex push rbp
   140019382:	sub    rsp,0x20
   140019386:	mov    rbp,rdx
   140019389:	lea    rcx,[rbp+0x58]
   14001938d:	call   QWORD PTR [rip+0x2295]        # 0x14001b628
   140019393:	add    rsp,0x20
   140019397:	pop    rbp
   140019398:	ret    
   140019399:	int3   
   14001939a:	int3   
   14001939b:	int3   
   14001939c:	int3   
   14001939d:	int3   
   14001939e:	int3   
   14001939f:	int3   
   1400193a0:	rex push rbp
   1400193a2:	sub    rsp,0x20
   1400193a6:	mov    rbp,rdx
   1400193a9:	mov    eax,DWORD PTR [rbp+0x30]
   1400193ac:	and    eax,0x2
   1400193af:	test   eax,eax
   1400193b1:	je     0x1400193c4
   1400193b3:	and    DWORD PTR [rbp+0x30],0xfffffffd
   1400193b7:	lea    rcx,[rbp+0x148]
   1400193be:	call   QWORD PTR [rip+0x2264]        # 0x14001b628
   1400193c4:	add    rsp,0x20
   1400193c8:	pop    rbp
   1400193c9:	ret    
   1400193ca:	int3   
   1400193cb:	int3   
   1400193cc:	int3   
   1400193cd:	int3   
   1400193ce:	int3   
   1400193cf:	int3   
   1400193d0:	rex push rbp
   1400193d2:	sub    rsp,0x20
   1400193d6:	mov    rbp,rdx
   1400193d9:	lea    rcx,[rbp+0xe8]
   1400193e0:	call   QWORD PTR [rip+0x2242]        # 0x14001b628
   1400193e6:	add    rsp,0x20
   1400193ea:	pop    rbp
   1400193eb:	ret    
   1400193ec:	int3   
   1400193ed:	int3   
   1400193ee:	int3   
   1400193ef:	int3   
   1400193f0:	rex push rbp
   1400193f2:	sub    rsp,0x20
   1400193f6:	mov    rbp,rdx
   1400193f9:	lea    rcx,[rbp+0x80]
   140019400:	call   QWORD PTR [rip+0x1eda]        # 0x14001b2e0
   140019406:	add    rsp,0x20
   14001940a:	pop    rbp
   14001940b:	ret    
   14001940c:	int3   
   14001940d:	int3   
   14001940e:	int3   
   14001940f:	int3   
   140019410:	rex push rbp
   140019412:	sub    rsp,0x20
   140019416:	mov    rbp,rdx
   140019419:	lea    rcx,[rbp+0x1d0]
   140019420:	call   QWORD PTR [rip+0x2202]        # 0x14001b628
   140019426:	add    rsp,0x20
   14001942a:	pop    rbp
   14001942b:	ret    
   14001942c:	int3   
   14001942d:	int3   
   14001942e:	int3   
   14001942f:	int3   
   140019430:	rex push rbp
   140019432:	sub    rsp,0x20
   140019436:	mov    rbp,rdx
   140019439:	lea    rcx,[rbp+0x250]
   140019440:	call   QWORD PTR [rip+0x21e2]        # 0x14001b628
   140019446:	add    rsp,0x20
   14001944a:	pop    rbp
   14001944b:	ret    
   14001944c:	int3   
   14001944d:	int3   
   14001944e:	int3   
   14001944f:	int3   
   140019450:	rex push rbp
   140019452:	sub    rsp,0x20
   140019456:	mov    rbp,rdx
   140019459:	lea    rcx,[rbp+0x1e0]
   140019460:	call   QWORD PTR [rip+0x21c2]        # 0x14001b628
   140019466:	add    rsp,0x20
   14001946a:	pop    rbp
   14001946b:	ret    
   14001946c:	int3   
   14001946d:	int3   
   14001946e:	int3   
   14001946f:	int3   
   140019470:	rex push rbp
   140019472:	sub    rsp,0x20
   140019476:	mov    rbp,rdx
   140019479:	lea    rcx,[rbp+0x280]
   140019480:	call   QWORD PTR [rip+0x21a2]        # 0x14001b628
   140019486:	add    rsp,0x20
   14001948a:	pop    rbp
   14001948b:	ret    
   14001948c:	int3   
   14001948d:	int3   
   14001948e:	int3   
   14001948f:	int3   
   140019490:	rex push rbp
   140019492:	sub    rsp,0x20
   140019496:	mov    rbp,rdx
   140019499:	mov    eax,DWORD PTR [rbp+0x30]
   14001949c:	and    eax,0x4
   14001949f:	test   eax,eax
   1400194a1:	je     0x1400194b4
   1400194a3:	and    DWORD PTR [rbp+0x30],0xfffffffb
   1400194a7:	lea    rcx,[rbp+0x198]
   1400194ae:	call   QWORD PTR [rip+0x2174]        # 0x14001b628
   1400194b4:	add    rsp,0x20
   1400194b8:	pop    rbp
   1400194b9:	ret    
   1400194ba:	int3   
   1400194bb:	int3   
   1400194bc:	int3   
   1400194bd:	int3   
   1400194be:	int3   
   1400194bf:	int3   
   1400194c0:	rex push rbp
   1400194c2:	sub    rsp,0x20
   1400194c6:	mov    rbp,rdx
   1400194c9:	lea    rcx,[rbp+0x298]
   1400194d0:	call   QWORD PTR [rip+0x2152]        # 0x14001b628
   1400194d6:	add    rsp,0x20
   1400194da:	pop    rbp
   1400194db:	ret    
   1400194dc:	int3   
   1400194dd:	int3   
   1400194de:	int3   
   1400194df:	int3   
   1400194e0:	rex push rbp
   1400194e2:	sub    rsp,0x20
   1400194e6:	mov    rbp,rdx
   1400194e9:	lea    rcx,[rbp+0x158]
   1400194f0:	call   QWORD PTR [rip+0x1eca]        # 0x14001b3c0
   1400194f6:	add    rsp,0x20
   1400194fa:	pop    rbp
   1400194fb:	ret    
   1400194fc:	int3   
   1400194fd:	int3   
   1400194fe:	int3   
   1400194ff:	int3   
   140019500:	rex push rbp
   140019502:	sub    rsp,0x20
   140019506:	mov    rbp,rdx
   140019509:	lea    rcx,[rbp+0xf8]
   140019510:	call   QWORD PTR [rip+0x2112]        # 0x14001b628
   140019516:	add    rsp,0x20
   14001951a:	pop    rbp
   14001951b:	ret    
   14001951c:	int3   
   14001951d:	int3   
   14001951e:	int3   
   14001951f:	int3   
   140019520:	rex push rbp
   140019522:	sub    rsp,0x20
   140019526:	mov    rbp,rdx
   140019529:	lea    rcx,[rbp+0x200]
   140019530:	call   QWORD PTR [rip+0x20f2]        # 0x14001b628
   140019536:	add    rsp,0x20
   14001953a:	pop    rbp
   14001953b:	ret    
   14001953c:	int3   
   14001953d:	int3   
   14001953e:	int3   
   14001953f:	int3   
   140019540:	rex push rbp
   140019542:	sub    rsp,0x20
   140019546:	mov    rbp,rdx
   140019549:	lea    rcx,[rbp+0x118]
   140019550:	call   QWORD PTR [rip+0x20d2]        # 0x14001b628
   140019556:	add    rsp,0x20
   14001955a:	pop    rbp
   14001955b:	ret    
   14001955c:	int3   
   14001955d:	int3   
   14001955e:	int3   
   14001955f:	int3   
   140019560:	rex push rbp
   140019562:	sub    rsp,0x20
   140019566:	mov    rbp,rdx
   140019569:	lea    rcx,[rbp+0x188]
   140019570:	call   QWORD PTR [rip+0x20b2]        # 0x14001b628
   140019576:	add    rsp,0x20
   14001957a:	pop    rbp
   14001957b:	ret    
   14001957c:	int3   
   14001957d:	int3   
   14001957e:	int3   
   14001957f:	int3   
   140019580:	rex push rbp
   140019582:	sub    rsp,0x20
   140019586:	mov    rbp,rdx
   140019589:	lea    rcx,[rbp+0x260]
   140019590:	call   QWORD PTR [rip+0x1d4a]        # 0x14001b2e0
   140019596:	add    rsp,0x20
   14001959a:	pop    rbp
   14001959b:	ret    
   14001959c:	int3   
   14001959d:	int3   
   14001959e:	int3   
   14001959f:	int3   
   1400195a0:	rex push rbp
   1400195a2:	sub    rsp,0x20
   1400195a6:	mov    rbp,rdx
   1400195a9:	lea    rcx,[rbp+0x128]
   1400195b0:	call   QWORD PTR [rip+0x2072]        # 0x14001b628
   1400195b6:	add    rsp,0x20
   1400195ba:	pop    rbp
   1400195bb:	ret    
   1400195bc:	int3   
   1400195bd:	int3   
   1400195be:	int3   
   1400195bf:	int3   
   1400195c0:	rex push rbp
   1400195c2:	sub    rsp,0x20
   1400195c6:	mov    rbp,rdx
   1400195c9:	lea    rcx,[rbp+0x168]
   1400195d0:	call   QWORD PTR [rip+0x2052]        # 0x14001b628
   1400195d6:	add    rsp,0x20
   1400195da:	pop    rbp
   1400195db:	ret    
   1400195dc:	int3   
   1400195dd:	int3   
   1400195de:	int3   
   1400195df:	int3   
   1400195e0:	rex push rbp
   1400195e2:	sub    rsp,0x20
   1400195e6:	mov    rbp,rdx
   1400195e9:	lea    rcx,[rbp+0x210]
   1400195f0:	call   QWORD PTR [rip+0x1cea]        # 0x14001b2e0
   1400195f6:	add    rsp,0x20
   1400195fa:	pop    rbp
   1400195fb:	ret    
   1400195fc:	int3   
   1400195fd:	int3   
   1400195fe:	int3   
   1400195ff:	int3   
   140019600:	rex push rbp
   140019602:	sub    rsp,0x20
   140019606:	mov    rbp,rdx
   140019609:	lea    rcx,[rbp+0x138]
   140019610:	call   QWORD PTR [rip+0x2012]        # 0x14001b628
   140019616:	add    rsp,0x20
   14001961a:	pop    rbp
   14001961b:	ret    
   14001961c:	int3   
   14001961d:	int3   
   14001961e:	int3   
   14001961f:	int3   
   140019620:	rex push rbp
   140019622:	sub    rsp,0x20
   140019626:	mov    rbp,rdx
   140019629:	lea    rcx,[rbp+0x1a8]
   140019630:	call   QWORD PTR [rip+0x1ff2]        # 0x14001b628
   140019636:	add    rsp,0x20
   14001963a:	pop    rbp
   14001963b:	ret    
   14001963c:	int3   
   14001963d:	int3   
   14001963e:	int3   
   14001963f:	int3   
   140019640:	rex push rbp
   140019642:	sub    rsp,0x20
   140019646:	mov    rbp,rdx
   140019649:	lea    rcx,[rbp+0xd0]
   140019650:	call   QWORD PTR [rip+0x1fd2]        # 0x14001b628
   140019656:	add    rsp,0x20
   14001965a:	pop    rbp
   14001965b:	ret    
   14001965c:	int3   
   14001965d:	int3   
   14001965e:	int3   
   14001965f:	int3   
   140019660:	rex push rbp
   140019662:	sub    rsp,0x20
   140019666:	mov    rbp,rdx
   140019669:	lea    rcx,[rbp+0xc0]
   140019670:	call   QWORD PTR [rip+0x1fb2]        # 0x14001b628
   140019676:	add    rsp,0x20
   14001967a:	pop    rbp
   14001967b:	ret    
   14001967c:	int3   
   14001967d:	int3   
   14001967e:	int3   
   14001967f:	int3   
   140019680:	rex push rbp
   140019682:	sub    rsp,0x20
   140019686:	mov    rbp,rdx
   140019689:	lea    rcx,[rbp+0xf0]
   140019690:	call   QWORD PTR [rip+0x1f92]        # 0x14001b628
   140019696:	add    rsp,0x20
   14001969a:	pop    rbp
   14001969b:	ret    
   14001969c:	int3   
   14001969d:	int3   
   14001969e:	int3   
   14001969f:	int3   
   1400196a0:	rex push rbp
   1400196a2:	sub    rsp,0x20
   1400196a6:	mov    rbp,rdx
   1400196a9:	lea    rcx,[rbp+0xe0]
   1400196b0:	call   QWORD PTR [rip+0x1f72]        # 0x14001b628
   1400196b6:	add    rsp,0x20
   1400196ba:	pop    rbp
   1400196bb:	ret    
   1400196bc:	int3   
   1400196bd:	int3   
   1400196be:	int3   
   1400196bf:	int3   
   1400196c0:	rex push rbp
   1400196c2:	sub    rsp,0x20
   1400196c6:	mov    rbp,rdx
   1400196c9:	lea    rcx,[rbp+0x110]
   1400196d0:	call   QWORD PTR [rip+0x1f52]        # 0x14001b628
   1400196d6:	add    rsp,0x20
   1400196da:	pop    rbp
   1400196db:	ret    
   1400196dc:	int3   
   1400196dd:	int3   
   1400196de:	int3   
   1400196df:	int3   
   1400196e0:	rex push rbp
   1400196e2:	sub    rsp,0x20
   1400196e6:	mov    rbp,rdx
   1400196e9:	lea    rcx,[rbp+0x100]
   1400196f0:	call   QWORD PTR [rip+0x1f32]        # 0x14001b628
   1400196f6:	add    rsp,0x20
   1400196fa:	pop    rbp
   1400196fb:	ret    
   1400196fc:	int3   
   1400196fd:	int3   
   1400196fe:	int3   
   1400196ff:	int3   
   140019700:	rex push rbp
   140019702:	sub    rsp,0x20
   140019706:	mov    rbp,rdx
   140019709:	lea    rcx,[rbp+0x68]
   14001970d:	call   0x1400029e0
   140019712:	add    rsp,0x20
   140019716:	pop    rbp
   140019717:	ret    
   140019718:	int3   
   140019719:	int3   
   14001971a:	int3   
   14001971b:	int3   
   14001971c:	int3   
   14001971d:	int3   
   14001971e:	int3   
   14001971f:	int3   
   140019720:	rex push rbp
   140019722:	sub    rsp,0x20
   140019726:	mov    rbp,rdx
   140019729:	lea    rcx,[rbp+0x38]
   14001972d:	call   0x1400029e0
   140019732:	add    rsp,0x20
   140019736:	pop    rbp
   140019737:	ret    
   140019738:	int3   
   140019739:	int3   
   14001973a:	int3   
   14001973b:	int3   
   14001973c:	int3   
   14001973d:	int3   
   14001973e:	int3   
   14001973f:	int3   
   140019740:	rex push rbp
   140019742:	sub    rsp,0x20
   140019746:	mov    rbp,rdx
   140019749:	mov    eax,DWORD PTR [rbp+0x30]
   14001974c:	and    eax,0x8
   14001974f:	test   eax,eax
   140019751:	je     0x140019764
   140019753:	and    DWORD PTR [rbp+0x30],0xfffffff7
   140019757:	lea    rcx,[rbp+0x140]
   14001975e:	call   QWORD PTR [rip+0x1ec4]        # 0x14001b628
   140019764:	add    rsp,0x20
   140019768:	pop    rbp
   140019769:	ret    
   14001976a:	int3   
   14001976b:	int3   
   14001976c:	int3   
   14001976d:	int3   
   14001976e:	int3   
   14001976f:	int3   
   140019770:	rex push rbp
   140019772:	sub    rsp,0x20
   140019776:	mov    rbp,rdx
   140019779:	mov    eax,DWORD PTR [rbp+0x30]
   14001977c:	and    eax,0x10
   14001977f:	test   eax,eax
   140019781:	je     0x140019794
   140019783:	and    DWORD PTR [rbp+0x30],0xffffffef
   140019787:	lea    rcx,[rbp+0xb8]
   14001978e:	call   QWORD PTR [rip+0x1e94]        # 0x14001b628
   140019794:	add    rsp,0x20
   140019798:	pop    rbp
   140019799:	ret    
   14001979a:	int3   
   14001979b:	int3   
   14001979c:	int3   
   14001979d:	int3   
   14001979e:	int3   
   14001979f:	int3   
   1400197a0:	rex push rbp
   1400197a2:	sub    rsp,0x20
   1400197a6:	mov    rbp,rdx
   1400197a9:	mov    eax,DWORD PTR [rbp+0x30]
   1400197ac:	and    eax,0x20
   1400197af:	test   eax,eax
   1400197b1:	je     0x1400197c4
   1400197b3:	and    DWORD PTR [rbp+0x30],0xffffffdf
   1400197b7:	lea    rcx,[rbp+0x120]
   1400197be:	call   QWORD PTR [rip+0x1e64]        # 0x14001b628
   1400197c4:	add    rsp,0x20
   1400197c8:	pop    rbp
   1400197c9:	ret    
   1400197ca:	int3   
   1400197cb:	int3   
   1400197cc:	int3   
   1400197cd:	int3   
   1400197ce:	int3   
   1400197cf:	int3   
   1400197d0:	rex push rbp
   1400197d2:	sub    rsp,0x20
   1400197d6:	mov    rbp,rdx
   1400197d9:	lea    rcx,[rbp+0x48]
   1400197dd:	call   QWORD PTR [rip+0x1e45]        # 0x14001b628
   1400197e3:	add    rsp,0x20
   1400197e7:	pop    rbp
   1400197e8:	ret    
   1400197e9:	int3   
   1400197ea:	int3   
   1400197eb:	int3   
   1400197ec:	int3   
   1400197ed:	int3   
   1400197ee:	int3   
   1400197ef:	int3   
   1400197f0:	rex push rbp
   1400197f2:	sub    rsp,0x20
   1400197f6:	mov    rbp,rdx
   1400197f9:	lea    rcx,[rbp+0x190]
   140019800:	call   QWORD PTR [rip+0x1e22]        # 0x14001b628
   140019806:	add    rsp,0x20
   14001980a:	pop    rbp
   14001980b:	ret    
   14001980c:	int3   
   14001980d:	int3   
   14001980e:	int3   
   14001980f:	int3   
   140019810:	rex push rbp
   140019812:	sub    rsp,0x20
   140019816:	mov    rbp,rdx
   140019819:	lea    rcx,[rbp+0x150]
   140019820:	call   QWORD PTR [rip+0x1e02]        # 0x14001b628
   140019826:	add    rsp,0x20
   14001982a:	pop    rbp
   14001982b:	ret    
   14001982c:	int3   
   14001982d:	int3   
   14001982e:	int3   
   14001982f:	int3   
   140019830:	rex push rbp
   140019832:	sub    rsp,0x20
   140019836:	mov    rbp,rdx
   140019839:	lea    rcx,[rbp+0x160]
   140019840:	call   QWORD PTR [rip+0x1de2]        # 0x14001b628
   140019846:	add    rsp,0x20
   14001984a:	pop    rbp
   14001984b:	ret    
   14001984c:	int3   
   14001984d:	int3   
   14001984e:	int3   
   14001984f:	int3   
   140019850:	rex push rbp
   140019852:	sub    rsp,0x20
   140019856:	mov    rbp,rdx
   140019859:	lea    rcx,[rbp+0x288]
   140019860:	call   QWORD PTR [rip+0x1dc2]        # 0x14001b628
   140019866:	add    rsp,0x20
   14001986a:	pop    rbp
   14001986b:	ret    
   14001986c:	int3   
   14001986d:	int3   
   14001986e:	int3   
   14001986f:	int3   
   140019870:	rex push rbp
   140019872:	sub    rsp,0x20
   140019876:	mov    rbp,rdx
   140019879:	lea    rcx,[rbp+0x170]
   140019880:	call   QWORD PTR [rip+0x1da2]        # 0x14001b628
   140019886:	add    rsp,0x20
   14001988a:	pop    rbp
   14001988b:	ret    
   14001988c:	int3   
   14001988d:	int3   
   14001988e:	int3   
   14001988f:	int3   
   140019890:	rex push rbp
   140019892:	sub    rsp,0x20
   140019896:	mov    rbp,rdx
   140019899:	lea    rcx,[rbp+0x1e8]
   1400198a0:	call   QWORD PTR [rip+0x1d82]        # 0x14001b628
   1400198a6:	add    rsp,0x20
   1400198aa:	pop    rbp
   1400198ab:	ret    
   1400198ac:	int3   
   1400198ad:	int3   
   1400198ae:	int3   
   1400198af:	int3   
   1400198b0:	rex push rbp
   1400198b2:	sub    rsp,0x20
   1400198b6:	mov    rbp,rdx
   1400198b9:	lea    rcx,[rbp+0x1d8]
   1400198c0:	call   QWORD PTR [rip+0x1d62]        # 0x14001b628
   1400198c6:	add    rsp,0x20
   1400198ca:	pop    rbp
   1400198cb:	ret    
   1400198cc:	int3   
   1400198cd:	int3   
   1400198ce:	int3   
   1400198cf:	int3   
   1400198d0:	rex push rbp
   1400198d2:	sub    rsp,0x20
   1400198d6:	mov    rbp,rdx
   1400198d9:	lea    rcx,[rbp+0x1c8]
   1400198e0:	call   QWORD PTR [rip+0x1d42]        # 0x14001b628
   1400198e6:	add    rsp,0x20
   1400198ea:	pop    rbp
   1400198eb:	ret    
   1400198ec:	int3   
   1400198ed:	int3   
   1400198ee:	int3   
   1400198ef:	int3   
   1400198f0:	rex push rbp
   1400198f2:	sub    rsp,0x20
   1400198f6:	mov    rbp,rdx
   1400198f9:	lea    rcx,[rbp+0x180]
   140019900:	call   QWORD PTR [rip+0x1d22]        # 0x14001b628
   140019906:	add    rsp,0x20
   14001990a:	pop    rbp
   14001990b:	ret    
   14001990c:	int3   
   14001990d:	int3   
   14001990e:	int3   
   14001990f:	int3   
   140019910:	rex push rbp
   140019912:	sub    rsp,0x20
   140019916:	mov    rbp,rdx
   140019919:	lea    rcx,[rbp+0x218]
   140019920:	call   QWORD PTR [rip+0x1d02]        # 0x14001b628
   140019926:	add    rsp,0x20
   14001992a:	pop    rbp
   14001992b:	ret    
   14001992c:	int3   
   14001992d:	int3   
   14001992e:	int3   
   14001992f:	int3   
   140019930:	rex push rbp
   140019932:	sub    rsp,0x20
   140019936:	mov    rbp,rdx
   140019939:	lea    rcx,[rbp+0x208]
   140019940:	call   QWORD PTR [rip+0x1ce2]        # 0x14001b628
   140019946:	add    rsp,0x20
   14001994a:	pop    rbp
   14001994b:	ret    
   14001994c:	int3   
   14001994d:	int3   
   14001994e:	int3   
   14001994f:	int3   
   140019950:	rex push rbp
   140019952:	sub    rsp,0x20
   140019956:	mov    rbp,rdx
   140019959:	lea    rcx,[rbp+0x1a0]
   140019960:	call   QWORD PTR [rip+0x1cc2]        # 0x14001b628
   140019966:	add    rsp,0x20
   14001996a:	pop    rbp
   14001996b:	ret    
   14001996c:	int3   
   14001996d:	int3   
   14001996e:	int3   
   14001996f:	int3   
   140019970:	rex push rbp
   140019972:	sub    rsp,0x20
   140019976:	mov    rbp,rdx
   140019979:	lea    rcx,[rbp+0xa0]
   140019980:	call   QWORD PTR [rip+0x195a]        # 0x14001b2e0
   140019986:	add    rsp,0x20
   14001998a:	pop    rbp
   14001998b:	ret    
   14001998c:	int3   
   14001998d:	int3   
   14001998e:	int3   
   14001998f:	int3   
   140019990:	rex push rbp
   140019992:	sub    rsp,0x20
   140019996:	mov    rbp,rdx
   140019999:	lea    rcx,[rbp+0x60]
   14001999d:	call   QWORD PTR [rip+0x1c85]        # 0x14001b628
   1400199a3:	add    rsp,0x20
   1400199a7:	pop    rbp
   1400199a8:	ret    
   1400199a9:	int3   
   1400199aa:	int3   
   1400199ab:	int3   
   1400199ac:	int3   
   1400199ad:	int3   
   1400199ae:	int3   
   1400199af:	int3   
   1400199b0:	rex push rbp
   1400199b2:	sub    rsp,0x20
   1400199b6:	mov    rbp,rdx
   1400199b9:	lea    rcx,[rbp+0x88]
   1400199c0:	call   QWORD PTR [rip+0x1c62]        # 0x14001b628
   1400199c6:	add    rsp,0x20
   1400199ca:	pop    rbp
   1400199cb:	ret    
   1400199cc:	int3   
   1400199cd:	int3   
   1400199ce:	int3   
   1400199cf:	int3   
   1400199d0:	rex push rbp
   1400199d2:	sub    rsp,0x20
   1400199d6:	mov    rbp,rdx
   1400199d9:	lea    rcx,[rbp+0x238]
   1400199e0:	call   QWORD PTR [rip+0x1c42]        # 0x14001b628
   1400199e6:	add    rsp,0x20
   1400199ea:	pop    rbp
   1400199eb:	ret    
   1400199ec:	int3   
   1400199ed:	int3   
   1400199ee:	int3   
   1400199ef:	int3   
   1400199f0:	rex push rbp
   1400199f2:	sub    rsp,0x20
   1400199f6:	mov    rbp,rdx
   1400199f9:	lea    rcx,[rbp+0x248]
   140019a00:	call   QWORD PTR [rip+0x1c22]        # 0x14001b628
   140019a06:	add    rsp,0x20
   140019a0a:	pop    rbp
   140019a0b:	ret    
   140019a0c:	int3   
   140019a0d:	int3   
   140019a0e:	int3   
   140019a0f:	int3   
   140019a10:	rex push rbp
   140019a12:	sub    rsp,0x20
   140019a16:	mov    rbp,rdx
   140019a19:	lea    rcx,[rbp+0x1b0]
   140019a20:	call   QWORD PTR [rip+0x1c02]        # 0x14001b628
   140019a26:	add    rsp,0x20
   140019a2a:	pop    rbp
   140019a2b:	ret    
   140019a2c:	int3   
   140019a2d:	int3   
   140019a2e:	int3   
   140019a2f:	int3   
   140019a30:	rex push rbp
   140019a32:	sub    rsp,0x20
   140019a36:	mov    rbp,rdx
   140019a39:	lea    rcx,[rbp+0x90]
   140019a40:	call   QWORD PTR [rip+0x189a]        # 0x14001b2e0
   140019a46:	add    rsp,0x20
   140019a4a:	pop    rbp
   140019a4b:	ret    
   140019a4c:	int3   
   140019a4d:	int3   
   140019a4e:	int3   
   140019a4f:	int3   
   140019a50:	rex push rbp
   140019a52:	sub    rsp,0x20
   140019a56:	mov    rbp,rdx
   140019a59:	lea    rcx,[rbp+0xa8]
   140019a60:	call   QWORD PTR [rip+0x1bc2]        # 0x14001b628
   140019a66:	add    rsp,0x20
   140019a6a:	pop    rbp
   140019a6b:	ret    
   140019a6c:	int3   
   140019a6d:	int3   
   140019a6e:	int3   
   140019a6f:	int3   
   140019a70:	rex push rbp
   140019a72:	sub    rsp,0x20
   140019a76:	mov    rbp,rdx
   140019a79:	lea    rcx,[rbp+0x278]
   140019a80:	call   QWORD PTR [rip+0x1ba2]        # 0x14001b628
   140019a86:	add    rsp,0x20
   140019a8a:	pop    rbp
   140019a8b:	ret    
   140019a8c:	int3   
   140019a8d:	int3   
   140019a8e:	int3   
   140019a8f:	int3   
   140019a90:	rex push rbp
   140019a92:	sub    rsp,0x20
   140019a96:	mov    rbp,rdx
   140019a99:	lea    rcx,[rbp+0x268]
   140019aa0:	call   QWORD PTR [rip+0x1b7a]        # 0x14001b620
   140019aa6:	add    rsp,0x20
   140019aaa:	pop    rbp
   140019aab:	ret    
   140019aac:	int3   
   140019aad:	int3   
   140019aae:	int3   
   140019aaf:	int3   
   140019ab0:	rex push rbp
   140019ab2:	sub    rsp,0x20
   140019ab6:	mov    rbp,rdx
   140019ab9:	mov    rcx,QWORD PTR [rbp+0x80]
   140019ac0:	add    rcx,0x8
   140019ac4:	call   QWORD PTR [rip+0x1b56]        # 0x14001b620
   140019aca:	add    rsp,0x20
   140019ace:	pop    rbp
   140019acf:	ret    
   140019ad0:	rex push rbp
   140019ad2:	sub    rsp,0x20
   140019ad6:	mov    rbp,rdx
   140019ad9:	mov    rcx,QWORD PTR [rbp+0x80]
   140019ae0:	add    rcx,0x10
   140019ae4:	call   QWORD PTR [rip+0x1b36]        # 0x14001b620
   140019aea:	add    rsp,0x20
   140019aee:	pop    rbp
   140019aef:	ret    
   140019af0:	rex push rbp
   140019af2:	sub    rsp,0x20
   140019af6:	mov    rbp,rdx
   140019af9:	mov    rcx,QWORD PTR [rbp+0x80]
   140019b00:	add    rcx,0x18
   140019b04:	call   QWORD PTR [rip+0x1b16]        # 0x14001b620
   140019b0a:	add    rsp,0x20
   140019b0e:	pop    rbp
   140019b0f:	ret    
   140019b10:	rex push rbp
   140019b12:	sub    rsp,0x20
   140019b16:	mov    rbp,rdx
   140019b19:	mov    rcx,QWORD PTR [rbp+0x80]
   140019b20:	add    rcx,0x20
   140019b24:	call   0x1400029e0
   140019b29:	add    rsp,0x20
   140019b2d:	pop    rbp
   140019b2e:	ret    
   140019b2f:	int3   
   140019b30:	rex push rbp
   140019b32:	sub    rsp,0x20
   140019b36:	mov    rbp,rdx
   140019b39:	lea    rcx,[rbp+0x158]
   140019b40:	call   0x14000f080
   140019b45:	add    rsp,0x20
   140019b49:	pop    rbp
   140019b4a:	ret    
   140019b4b:	int3   
   140019b4c:	int3   
   140019b4d:	int3   
   140019b4e:	int3   
   140019b4f:	int3   
   140019b50:	rex push rbp
   140019b52:	sub    rsp,0x20
   140019b56:	mov    rbp,rdx
   140019b59:	lea    rcx,[rbp+0x48]
   140019b5d:	call   0x14000f080
   140019b62:	add    rsp,0x20
   140019b66:	pop    rbp
   140019b67:	ret    
   140019b68:	int3   
   140019b69:	int3   
   140019b6a:	int3   
   140019b6b:	int3   
   140019b6c:	int3   
   140019b6d:	int3   
   140019b6e:	int3   
   140019b6f:	int3   
   140019b70:	rex push rbp
   140019b72:	sub    rsp,0x20
   140019b76:	mov    rbp,rdx
   140019b79:	lea    rcx,[rbp+0x38]
   140019b7d:	call   0x140006e30
   140019b82:	add    rsp,0x20
   140019b86:	pop    rbp
   140019b87:	ret    
   140019b88:	int3   
   140019b89:	int3   
   140019b8a:	int3   
   140019b8b:	int3   
   140019b8c:	int3   
   140019b8d:	int3   
   140019b8e:	int3   
   140019b8f:	int3   
   140019b90:	rex push rbp
   140019b92:	sub    rsp,0x20
   140019b96:	mov    rbp,rdx
   140019b99:	lea    rcx,[rbp+0x40]
   140019b9d:	call   0x140006e30
   140019ba2:	add    rsp,0x20
   140019ba6:	pop    rbp
   140019ba7:	ret    
   140019ba8:	int3   
   140019ba9:	int3   
   140019baa:	int3   
   140019bab:	int3   
   140019bac:	int3   
   140019bad:	int3   
   140019bae:	int3   
   140019baf:	int3   
   140019bb0:	rex push rbp
   140019bb2:	sub    rsp,0x20
   140019bb6:	mov    rbp,rdx
   140019bb9:	lea    rcx,[rbp+0x30]
   140019bbd:	call   QWORD PTR [rip+0x1a5d]        # 0x14001b620
   140019bc3:	add    rsp,0x20
   140019bc7:	pop    rbp
   140019bc8:	ret    
   140019bc9:	int3   
   140019bca:	int3   
   140019bcb:	int3   
   140019bcc:	int3   
   140019bcd:	int3   
   140019bce:	int3   
   140019bcf:	int3   
   140019bd0:	rex push rbp
   140019bd2:	sub    rsp,0x20
   140019bd6:	mov    rbp,rdx
   140019bd9:	lea    rcx,[rbp+0x58]
   140019bdd:	call   0x1400029e0
   140019be2:	add    rsp,0x20
   140019be6:	pop    rbp
   140019be7:	ret    
   140019be8:	int3   
   140019be9:	int3   
   140019bea:	int3   
   140019beb:	int3   
   140019bec:	int3   
   140019bed:	int3   
   140019bee:	int3   
   140019bef:	int3   
   140019bf0:	rex push rbp
   140019bf2:	sub    rsp,0x20
   140019bf6:	mov    rbp,rdx
   140019bf9:	lea    rcx,[rbp+0x70]
   140019bfd:	call   0x1400029e0
   140019c02:	add    rsp,0x20
   140019c06:	pop    rbp
   140019c07:	ret    
   140019c08:	int3   
   140019c09:	int3   
   140019c0a:	int3   
   140019c0b:	int3   
   140019c0c:	int3   
   140019c0d:	int3   
   140019c0e:	int3   
   140019c0f:	int3   
   140019c10:	rex push rbp
   140019c12:	sub    rsp,0x20
   140019c16:	mov    rbp,rdx
   140019c19:	lea    rcx,[rbp+0x50]
   140019c1d:	call   QWORD PTR [rip+0x19fd]        # 0x14001b620
   140019c23:	add    rsp,0x20
   140019c27:	pop    rbp
   140019c28:	ret    
   140019c29:	int3   
   140019c2a:	int3   
   140019c2b:	int3   
   140019c2c:	int3   
   140019c2d:	int3   
   140019c2e:	int3   
   140019c2f:	int3   
   140019c30:	rex push rbp
   140019c32:	sub    rsp,0x20
   140019c36:	mov    rbp,rdx
   140019c39:	mov    rcx,QWORD PTR [rbp+0x68]
   140019c3d:	add    rcx,0x8
   140019c41:	call   QWORD PTR [rip+0x19d9]        # 0x14001b620
   140019c47:	add    rsp,0x20
   140019c4b:	pop    rbp
   140019c4c:	ret    
   140019c4d:	int3   
   140019c4e:	int3   
   140019c4f:	int3   
   140019c50:	rex push rbp
   140019c52:	sub    rsp,0x20
   140019c56:	mov    rbp,rdx
   140019c59:	mov    rcx,QWORD PTR [rbp+0x68]
   140019c5d:	add    rcx,0x10
   140019c61:	call   QWORD PTR [rip+0x19b9]        # 0x14001b620
   140019c67:	add    rsp,0x20
   140019c6b:	pop    rbp
   140019c6c:	ret    
   140019c6d:	int3   
   140019c6e:	int3   
   140019c6f:	int3   
   140019c70:	rex push rbp
   140019c72:	sub    rsp,0x20
   140019c76:	mov    rbp,rdx
   140019c79:	mov    rcx,QWORD PTR [rbp+0x68]
   140019c7d:	add    rcx,0x18
   140019c81:	call   QWORD PTR [rip+0x1999]        # 0x14001b620
   140019c87:	add    rsp,0x20
   140019c8b:	pop    rbp
   140019c8c:	ret    
   140019c8d:	int3   
   140019c8e:	int3   
   140019c8f:	int3   
   140019c90:	rex push rbp
   140019c92:	sub    rsp,0x20
   140019c96:	mov    rbp,rdx
   140019c99:	mov    rcx,QWORD PTR [rbp+0x68]
   140019c9d:	add    rcx,0x20
   140019ca1:	call   0x1400029e0
   140019ca6:	add    rsp,0x20
   140019caa:	pop    rbp
   140019cab:	ret    
   140019cac:	int3   
   140019cad:	int3   
   140019cae:	int3   
   140019caf:	int3   
   140019cb0:	rex push rbp
   140019cb2:	sub    rsp,0x20
   140019cb6:	mov    rbp,rdx
   140019cb9:	mov    rcx,QWORD PTR [rbp+0x90]
   140019cc0:	add    rcx,0x8
   140019cc4:	call   QWORD PTR [rip+0x1956]        # 0x14001b620
   140019cca:	add    rsp,0x20
   140019cce:	pop    rbp
   140019ccf:	ret    
   140019cd0:	rex push rbp
   140019cd2:	sub    rsp,0x20
   140019cd6:	mov    rbp,rdx
   140019cd9:	mov    rcx,QWORD PTR [rbp+0x90]
   140019ce0:	add    rcx,0x10
   140019ce4:	call   QWORD PTR [rip+0x1936]        # 0x14001b620
   140019cea:	add    rsp,0x20
   140019cee:	pop    rbp
   140019cef:	ret    
   140019cf0:	rex push rbp
   140019cf2:	sub    rsp,0x20
   140019cf6:	mov    rbp,rdx
   140019cf9:	mov    rcx,QWORD PTR [rbp+0x90]
   140019d00:	add    rcx,0x18
   140019d04:	call   QWORD PTR [rip+0x1916]        # 0x14001b620
   140019d0a:	add    rsp,0x20
   140019d0e:	pop    rbp
   140019d0f:	ret    
   140019d10:	rex push rbp
   140019d12:	sub    rsp,0x20
   140019d16:	mov    rbp,rdx
   140019d19:	mov    rcx,QWORD PTR [rbp+0x90]
   140019d20:	add    rcx,0x20
   140019d24:	call   0x1400029e0
   140019d29:	add    rsp,0x20
   140019d2d:	pop    rbp
   140019d2e:	ret    
   140019d2f:	int3   
   140019d30:	rex push rbp
   140019d32:	sub    rsp,0x20
   140019d36:	mov    rbp,rdx
   140019d39:	lea    rcx,[rbp+0xa0]
   140019d40:	call   0x140002b70
   140019d45:	add    rsp,0x20
   140019d49:	pop    rbp
   140019d4a:	ret    
   140019d4b:	int3   
   140019d4c:	int3   
   140019d4d:	int3   
   140019d4e:	int3   
   140019d4f:	int3   
   140019d50:	rex push rbp
   140019d52:	sub    rsp,0x20
   140019d56:	mov    rbp,rdx
   140019d59:	lea    rcx,[rbp+0x60]
   140019d5d:	call   0x1400029e0
   140019d62:	add    rsp,0x20
   140019d66:	pop    rbp
   140019d67:	ret    
   140019d68:	int3   
   140019d69:	int3   
   140019d6a:	int3   
   140019d6b:	int3   
   140019d6c:	int3   
   140019d6d:	int3   
   140019d6e:	int3   
   140019d6f:	int3   
   140019d70:	rex push rbp
   140019d72:	sub    rsp,0x20
   140019d76:	mov    rbp,rdx
   140019d79:	lea    rcx,[rbp+0xa0]
   140019d80:	add    rcx,0x8
   140019d84:	call   QWORD PTR [rip+0x1896]        # 0x14001b620
   140019d8a:	add    rsp,0x20
   140019d8e:	pop    rbp
   140019d8f:	ret    
   140019d90:	rex push rbp
   140019d92:	sub    rsp,0x20
   140019d96:	mov    rbp,rdx
   140019d99:	lea    rcx,[rbp+0xa0]
   140019da0:	add    rcx,0x10
   140019da4:	call   QWORD PTR [rip+0x1876]        # 0x14001b620
   140019daa:	add    rsp,0x20
   140019dae:	pop    rbp
   140019daf:	ret    
   140019db0:	rex push rbp
   140019db2:	sub    rsp,0x20
   140019db6:	mov    rbp,rdx
   140019db9:	lea    rcx,[rbp+0xa0]
   140019dc0:	add    rcx,0x18
   140019dc4:	call   QWORD PTR [rip+0x1856]        # 0x14001b620
   140019dca:	add    rsp,0x20
   140019dce:	pop    rbp
   140019dcf:	ret    
   140019dd0:	rex push rbp
   140019dd2:	sub    rsp,0x20
   140019dd6:	mov    rbp,rdx
   140019dd9:	lea    rcx,[rbp+0xa0]
   140019de0:	add    rcx,0x20
   140019de4:	call   0x1400029e0
   140019de9:	add    rsp,0x20
   140019ded:	pop    rbp
   140019dee:	ret    
   140019def:	int3   
   140019df0:	rex push rbp
   140019df2:	sub    rsp,0x20
   140019df6:	mov    rbp,rdx
   140019df9:	mov    rcx,QWORD PTR [rbp+0x148]
   140019e00:	add    rcx,0x8
   140019e04:	call   QWORD PTR [rip+0x1816]        # 0x14001b620
   140019e0a:	add    rsp,0x20
   140019e0e:	pop    rbp
   140019e0f:	ret    
   140019e10:	rex push rbp
   140019e12:	sub    rsp,0x20
   140019e16:	mov    rbp,rdx
   140019e19:	mov    rcx,QWORD PTR [rbp+0x148]
   140019e20:	add    rcx,0x10
   140019e24:	call   QWORD PTR [rip+0x17f6]        # 0x14001b620
   140019e2a:	add    rsp,0x20
   140019e2e:	pop    rbp
   140019e2f:	ret    
   140019e30:	rex push rbp
   140019e32:	sub    rsp,0x20
   140019e36:	mov    rbp,rdx
   140019e39:	mov    rcx,QWORD PTR [rbp+0x148]
   140019e40:	add    rcx,0x18
   140019e44:	call   QWORD PTR [rip+0x17d6]        # 0x14001b620
   140019e4a:	add    rsp,0x20
   140019e4e:	pop    rbp
   140019e4f:	ret    
   140019e50:	rex push rbp
   140019e52:	sub    rsp,0x20
   140019e56:	mov    rbp,rdx
   140019e59:	mov    rcx,QWORD PTR [rbp+0x148]
   140019e60:	add    rcx,0x20
   140019e64:	call   0x1400029e0
   140019e69:	add    rsp,0x20
   140019e6d:	pop    rbp
   140019e6e:	ret    
   140019e6f:	int3   
   140019e70:	rex push rbp
   140019e72:	sub    rsp,0x20
   140019e76:	mov    rbp,rdx
   140019e79:	lea    rcx,[rbp+0xe0]
   140019e80:	call   QWORD PTR [rip+0x179a]        # 0x14001b620
   140019e86:	add    rsp,0x20
   140019e8a:	pop    rbp
   140019e8b:	ret    
   140019e8c:	int3   
   140019e8d:	int3   
   140019e8e:	int3   
   140019e8f:	int3   
   140019e90:	rex push rbp
   140019e92:	sub    rsp,0x20
   140019e96:	mov    rbp,rdx
   140019e99:	mov    rcx,QWORD PTR [rbp+0x50]
   140019e9d:	add    rcx,0x8
   140019ea1:	call   QWORD PTR [rip+0x1779]        # 0x14001b620
   140019ea7:	add    rsp,0x20
   140019eab:	pop    rbp
   140019eac:	ret    
   140019ead:	int3   
   140019eae:	int3   
   140019eaf:	int3   
   140019eb0:	rex push rbp
   140019eb2:	sub    rsp,0x20
   140019eb6:	mov    rbp,rdx
   140019eb9:	mov    rcx,QWORD PTR [rbp+0x50]
   140019ebd:	add    rcx,0x10
   140019ec1:	call   QWORD PTR [rip+0x1759]        # 0x14001b620
   140019ec7:	add    rsp,0x20
   140019ecb:	pop    rbp
   140019ecc:	ret    
   140019ecd:	int3   
   140019ece:	int3   
   140019ecf:	int3   
   140019ed0:	rex push rbp
   140019ed2:	sub    rsp,0x20
   140019ed6:	mov    rbp,rdx
   140019ed9:	mov    rcx,QWORD PTR [rbp+0x50]
   140019edd:	add    rcx,0x18
   140019ee1:	call   QWORD PTR [rip+0x1739]        # 0x14001b620
   140019ee7:	add    rsp,0x20
   140019eeb:	pop    rbp
   140019eec:	ret    
   140019eed:	int3   
   140019eee:	int3   
   140019eef:	int3   
   140019ef0:	rex push rbp
   140019ef2:	sub    rsp,0x20
   140019ef6:	mov    rbp,rdx
   140019ef9:	mov    rcx,QWORD PTR [rbp+0x50]
   140019efd:	add    rcx,0x20
   140019f01:	call   0x1400029e0
   140019f06:	add    rsp,0x20
   140019f0a:	pop    rbp
   140019f0b:	ret    
   140019f0c:	int3   
   140019f0d:	int3   
   140019f0e:	int3   
   140019f0f:	int3   
   140019f10:	rex push rbp
   140019f12:	sub    rsp,0x20
   140019f16:	mov    rbp,rdx
   140019f19:	mov    rcx,QWORD PTR [rbp+0x50]
   140019f1d:	add    rcx,0x28
   140019f21:	call   QWORD PTR [rip+0x1701]        # 0x14001b628
   140019f27:	add    rsp,0x20
   140019f2b:	pop    rbp
   140019f2c:	ret    
   140019f2d:	int3   
   140019f2e:	int3   
   140019f2f:	int3   
   140019f30:	rex push rbp
   140019f32:	sub    rsp,0x20
   140019f36:	mov    rbp,rdx
   140019f39:	lea    rcx,[rbp+0x20]
   140019f3d:	call   QWORD PTR [rip+0x16dd]        # 0x14001b620
   140019f43:	add    rsp,0x20
   140019f47:	pop    rbp
   140019f48:	ret    
   140019f49:	int3   
   140019f4a:	int3   
   140019f4b:	int3   
   140019f4c:	int3   
   140019f4d:	int3   
   140019f4e:	int3   
   140019f4f:	int3   
   140019f50:	rex push rbp
   140019f52:	sub    rsp,0x20
   140019f56:	mov    rbp,rdx
   140019f59:	mov    rcx,QWORD PTR [rbp+0x40]
   140019f5d:	add    rcx,0x8
   140019f61:	call   QWORD PTR [rip+0x16b9]        # 0x14001b620
   140019f67:	add    rsp,0x20
   140019f6b:	pop    rbp
   140019f6c:	ret    
   140019f6d:	int3   
   140019f6e:	int3   
   140019f6f:	int3   
   140019f70:	rex push rbp
   140019f72:	sub    rsp,0x20
   140019f76:	mov    rbp,rdx
   140019f79:	mov    rcx,QWORD PTR [rbp+0x40]
   140019f7d:	add    rcx,0x10
   140019f81:	call   QWORD PTR [rip+0x1699]        # 0x14001b620
   140019f87:	add    rsp,0x20
   140019f8b:	pop    rbp
   140019f8c:	ret    
   140019f8d:	int3   
   140019f8e:	int3   
   140019f8f:	int3   
   140019f90:	rex push rbp
   140019f92:	sub    rsp,0x20
   140019f96:	mov    rbp,rdx
   140019f99:	mov    rcx,QWORD PTR [rbp+0x40]
   140019f9d:	add    rcx,0x18
   140019fa1:	call   QWORD PTR [rip+0x1679]        # 0x14001b620
   140019fa7:	add    rsp,0x20
   140019fab:	pop    rbp
   140019fac:	ret    
   140019fad:	int3   
   140019fae:	int3   
   140019faf:	int3   
   140019fb0:	rex push rbp
   140019fb2:	sub    rsp,0x20
   140019fb6:	mov    rbp,rdx
   140019fb9:	lea    rcx,[rbp+0x88]
   140019fc0:	call   0x140002880
   140019fc5:	add    rsp,0x20
   140019fc9:	pop    rbp
   140019fca:	ret    
   140019fcb:	int3   
   140019fcc:	int3   
   140019fcd:	int3   
   140019fce:	int3   
   140019fcf:	int3   
   140019fd0:	rex push rbp
   140019fd2:	sub    rsp,0x20
   140019fd6:	mov    rbp,rdx
   140019fd9:	lea    rcx,[rbp+0x20]
   140019fdd:	call   QWORD PTR [rip+0x1645]        # 0x14001b628
   140019fe3:	add    rsp,0x20
   140019fe7:	pop    rbp
   140019fe8:	ret    
   140019fe9:	rex push rbp
   140019feb:	sub    rsp,0x20
   140019fef:	mov    rbp,rdx
   140019ff2:	mov    ecx,0x8
   140019ff7:	call   0x140014658
   140019ffc:	add    rsp,0x20
   14001a000:	pop    rbp
   14001a001:	ret    
   14001a002:	rex push rbp
   14001a004:	sub    rsp,0x20
   14001a008:	mov    rbp,rdx
   14001a00b:	mov    rax,QWORD PTR [rcx]
   14001a00e:	mov    rdx,rcx
   14001a011:	mov    ecx,DWORD PTR [rax]
   14001a013:	call   0x140014740
   14001a018:	add    rsp,0x20
   14001a01c:	pop    rbp
   14001a01d:	ret    
   14001a01e:	rex push rbp
   14001a020:	sub    rsp,0x20
   14001a024:	mov    rbp,rdx
   14001a027:	mov    QWORD PTR [rbp+0x38],rcx
   14001a02b:	mov    QWORD PTR [rbp+0x28],rcx
   14001a02f:	mov    rax,QWORD PTR [rbp+0x28]
   14001a033:	mov    rcx,QWORD PTR [rax]
   14001a036:	mov    QWORD PTR [rbp+0x30],rcx
   14001a03a:	mov    rax,QWORD PTR [rbp+0x30]
   14001a03e:	cmp    DWORD PTR [rax],0xe06d7363
   14001a044:	je     0x14001a052
   14001a046:	mov    DWORD PTR [rbp+0x20],0x0
   14001a04d:	mov    eax,DWORD PTR [rbp+0x20]
   14001a050:	jmp    0x14001a057
   14001a052:	call   0x1400148d8
   14001a057:	add    rsp,0x20
   14001a05b:	pop    rbp
   14001a05c:	ret    
   14001a05d:	rex push rbp
   14001a05f:	sub    rsp,0x20
   14001a063:	mov    rbp,rdx
   14001a066:	cmp    DWORD PTR [rbp+0x20],0x0
   14001a06a:	jne    0x14001a081
   14001a06c:	mov    r9,QWORD PTR [rbp+0x78]
   14001a070:	mov    r8d,DWORD PTR [rbp+0x70]
   14001a074:	mov    rdx,QWORD PTR [rbp+0x68]
   14001a078:	mov    rcx,QWORD PTR [rbp+0x60]
   14001a07c:	call   0x14001445c
   14001a081:	add    rsp,0x20
   14001a085:	pop    rbp
   14001a086:	ret    
   14001a087:	int3   
   14001a088:	int3   
   14001a089:	int3   
   14001a08a:	int3   
   14001a08b:	int3   
   14001a08c:	int3   
   14001a08d:	int3   
   14001a08e:	int3   
   14001a08f:	int3   
   14001a090:	rex push rbp
   14001a092:	sub    rsp,0x20
   14001a096:	mov    rbp,rdx
   14001a099:	mov    rax,QWORD PTR [rcx]
   14001a09c:	xor    ecx,ecx
   14001a09e:	cmp    DWORD PTR [rax],0xc0000005
   14001a0a4:	sete   cl
   14001a0a7:	mov    eax,ecx
   14001a0a9:	mov    eax,ecx
   14001a0ab:	add    rsp,0x20
   14001a0af:	pop    rbp
   14001a0b0:	ret    
   14001a0b1:	int3   
   14001a0b2:	int3   
   14001a0b3:	int3   
   14001a0b4:	int3   
   14001a0b5:	int3   
   14001a0b6:	int3   
   14001a0b7:	int3   
   14001a0b8:	int3   
   14001a0b9:	int3   
   14001a0ba:	int3   
   14001a0bb:	int3   
   14001a0bc:	int3   
   14001a0bd:	int3   
   14001a0be:	int3   
   14001a0bf:	int3   
   14001a0c0:	mov    rax,QWORD PTR [rip+0x1511]        # 0x14001b5d8
   14001a0c7:	lea    rcx,[rip+0xe2]        # 0x14001a1b0
   14001a0ce:	mov    QWORD PTR [rip+0x2f28b],rax        # 0x140049360
   14001a0d5:	jmp    0x14001414c
   14001a0da:	int3   
   14001a0db:	int3   
   14001a0dc:	int3   
   14001a0dd:	int3   
   14001a0de:	int3   
   14001a0df:	int3   
   14001a0e0:	mov    rax,QWORD PTR [rip+0x14f1]        # 0x14001b5d8
   14001a0e7:	lea    rcx,[rip+0x102]        # 0x14001a1f0
   14001a0ee:	mov    QWORD PTR [rip+0x2f253],rax        # 0x140049348
   14001a0f5:	jmp    0x14001414c
   14001a0fa:	int3   
   14001a0fb:	int3   
   14001a0fc:	int3   
   14001a0fd:	int3   
   14001a0fe:	int3   
   14001a0ff:	int3   
   14001a100:	sub    rsp,0x28
   14001a104:	lea    rcx,[rip+0x2f235]        # 0x140049340
   14001a10b:	call   QWORD PTR [rip+0x1147]        # 0x14001b258
   14001a111:	lea    rcx,[rip+0x78]        # 0x14001a190
   14001a118:	add    rsp,0x28
   14001a11c:	jmp    0x14001414c
   14001a121:	int3   
   14001a122:	int3   
   14001a123:	int3   
   14001a124:	int3   
   14001a125:	int3   
   14001a126:	int3   
   14001a127:	int3   
   14001a128:	int3   
   14001a129:	int3   
   14001a12a:	int3   
   14001a12b:	int3   
   14001a12c:	int3   
   14001a12d:	int3   
   14001a12e:	int3   
   14001a12f:	int3   
   14001a130:	mov    rax,QWORD PTR [rip+0x1499]        # 0x14001b5d0
   14001a137:	lea    rcx,[rip+0xf2]        # 0x14001a230
   14001a13e:	mov    QWORD PTR [rip+0x2f213],rax        # 0x140049358
   14001a145:	jmp    0x14001414c
   14001a14a:	int3   
   14001a14b:	int3   
   14001a14c:	int3   
   14001a14d:	int3   
   14001a14e:	int3   
   14001a14f:	int3   
   14001a150:	sub    rsp,0x28
   14001a154:	lea    rcx,[rip+0x2f1f5]        # 0x140049350
   14001a15b:	call   QWORD PTR [rip+0x14af]        # 0x14001b610
   14001a161:	lea    rcx,[rip+0x38]        # 0x14001a1a0
   14001a168:	add    rsp,0x28
   14001a16c:	jmp    0x14001414c
   14001a171:	int3   
   14001a172:	int3   
   14001a173:	int3   
   14001a174:	int3   
   14001a175:	int3   
   14001a176:	int3   
   14001a177:	int3   
   14001a178:	int3   
   14001a179:	int3   
   14001a17a:	int3   
   14001a17b:	int3   
   14001a17c:	int3   
   14001a17d:	int3   
   14001a17e:	int3   
   14001a17f:	int3   
   14001a180:	mov    rax,QWORD PTR [rip+0x1401]        # 0x14001b588
   14001a187:	mov    QWORD PTR [rip+0xf03a],rax        # 0x1400291c8
   14001a18e:	ret    
   14001a18f:	int3   
   14001a190:	lea    rcx,[rip+0x2f1a9]        # 0x140049340
   14001a197:	rex.W jmp QWORD PTR [rip+0x1482]        # 0x14001b620
   14001a19e:	int3   
   14001a19f:	int3   
   14001a1a0:	lea    rcx,[rip+0x2f1a9]        # 0x140049350
   14001a1a7:	rex.W jmp QWORD PTR [rip+0x147a]        # 0x14001b628
   14001a1ae:	int3   
   14001a1af:	int3   
   14001a1b0:	sub    rsp,0x28
   14001a1b4:	mov    rcx,QWORD PTR [rip+0x2f1a5]        # 0x140049360
   14001a1bb:	mov    eax,DWORD PTR [rcx]
   14001a1bd:	test   eax,eax
   14001a1bf:	je     0x14001a1d8
   14001a1c1:	cmp    eax,0xffffffff
   14001a1c4:	je     0x14001a1dd
   14001a1c6:	lock add DWORD PTR [rcx],0xffffffff
   14001a1ca:	setne  al
   14001a1cd:	test   al,al
   14001a1cf:	jne    0x14001a1dd
   14001a1d1:	mov    rcx,QWORD PTR [rip+0x2f188]        # 0x140049360
   14001a1d8:	call   0x1400027a0
   14001a1dd:	add    rsp,0x28
   14001a1e1:	ret    
   14001a1e2:	int3   
   14001a1e3:	int3   
   14001a1e4:	int3   
   14001a1e5:	int3   
   14001a1e6:	int3   
   14001a1e7:	int3   
   14001a1e8:	int3   
   14001a1e9:	int3   
   14001a1ea:	int3   
   14001a1eb:	int3   
   14001a1ec:	int3   
   14001a1ed:	int3   
   14001a1ee:	int3   
   14001a1ef:	int3   
   14001a1f0:	sub    rsp,0x28
   14001a1f4:	mov    rcx,QWORD PTR [rip+0x2f14d]        # 0x140049348
   14001a1fb:	mov    eax,DWORD PTR [rcx]
   14001a1fd:	test   eax,eax
   14001a1ff:	je     0x14001a218
   14001a201:	cmp    eax,0xffffffff
   14001a204:	je     0x14001a21d
   14001a206:	lock add DWORD PTR [rcx],0xffffffff
   14001a20a:	setne  al
   14001a20d:	test   al,al
   14001a20f:	jne    0x14001a21d
   14001a211:	mov    rcx,QWORD PTR [rip+0x2f130]        # 0x140049348
   14001a218:	call   0x1400027a0
   14001a21d:	add    rsp,0x28
   14001a221:	ret    
   14001a222:	int3   
   14001a223:	int3   
   14001a224:	int3   
   14001a225:	int3   
   14001a226:	int3   
   14001a227:	int3   
   14001a228:	int3   
   14001a229:	int3   
   14001a22a:	int3   
   14001a22b:	int3   
   14001a22c:	int3   
   14001a22d:	int3   
   14001a22e:	int3   
   14001a22f:	int3   
   14001a230:	sub    rsp,0x28
   14001a234:	mov    rcx,QWORD PTR [rip+0x2f11d]        # 0x140049358
   14001a23b:	mov    eax,DWORD PTR [rcx]
   14001a23d:	test   eax,eax
   14001a23f:	je     0x14001a258
   14001a241:	cmp    eax,0xffffffff
   14001a244:	je     0x14001a267
   14001a246:	lock add DWORD PTR [rcx],0xffffffff
   14001a24a:	setne  al
   14001a24d:	test   al,al
   14001a24f:	jne    0x14001a267
   14001a251:	mov    rcx,QWORD PTR [rip+0x2f100]        # 0x140049358
   14001a258:	mov    edx,0x4
   14001a25d:	lea    r8d,[rdx+0x4]
   14001a261:	call   QWORD PTR [rip+0x1359]        # 0x14001b5c0
   14001a267:	add    rsp,0x28
   14001a26b:	ret    

Disassembly of section .rdata:

000000014001b000 <.rdata>:
   14001b000:	rex.WRX lea r8,[rdx]
   14001b003:	add    BYTE PTR [rax],al
   14001b005:	add    BYTE PTR [rax],al
   14001b007:	add    BYTE PTR [rax],bh
   14001b009:	lea    eax,[rdx]
   14001b00b:	add    BYTE PTR [rax],al
   14001b00d:	add    BYTE PTR [rax],al
   14001b00f:	add    BYTE PTR [rdx],ah
   14001b011:	lea    eax,[rdx]
   14001b013:	add    BYTE PTR [rax],al
   14001b015:	add    BYTE PTR [rax],al
   14001b017:	add    BYTE PTR [rdx],dl
   14001b019:	lea    eax,[rdx]
   14001b01b:	add    BYTE PTR [rax],al
   14001b01d:	add    BYTE PTR [rax],al
   14001b01f:	add    al,bh
   14001b021:	mov    WORD PTR [rdx],es
   14001b023:	add    BYTE PTR [rax],al
   14001b025:	add    BYTE PTR [rax],al
   14001b027:	add    ah,ah
   14001b029:	mov    WORD PTR [rdx],es
   14001b02b:	add    BYTE PTR [rax],al
   14001b02d:	add    BYTE PTR [rax],al
   14001b02f:	add    dl,cl
   14001b031:	mov    WORD PTR [rdx],es
   14001b033:	add    BYTE PTR [rax],al
   14001b035:	add    BYTE PTR [rax],al
   14001b037:	add    BYTE PTR [rsi+0x28c],dh
   14001b03d:	add    BYTE PTR [rax],al
   14001b03f:	add    BYTE PTR [rdx+0x28c],ah
   14001b045:	add    BYTE PTR [rax],al
   14001b047:	add    BYTE PTR [rsp+rcx*4+0x2],al
   14001b04e:	add    BYTE PTR [rax],al
   14001b050:	push   0x28c
   14001b055:	add    BYTE PTR [rax],al
   14001b057:	add    BYTE PTR [rsp+rcx*4+0x2],dl
   14001b05b:	add    BYTE PTR [rax],al
   14001b05d:	add    BYTE PTR [rax],al
   14001b05f:	add    BYTE PTR [rax-0x74],al
   14001b062:	add    al,BYTE PTR [rax]
   14001b064:	add    BYTE PTR [rax],al
   14001b066:	add    BYTE PTR [rax],al
   14001b068:	cmp    BYTE PTR [rdx+rax*1+0x0],cl
	...
   14001b077:	add    BYTE PTR [rdx],ah
   14001b079:	mov    WORD PTR [rdx],es
   14001b07b:	add    BYTE PTR [rax],al
   14001b07d:	add    BYTE PTR [rax],al
   14001b07f:	add    ah,ch
   14001b081:	mov    eax,DWORD PTR [rdx]
   14001b083:	add    BYTE PTR [rax],al
   14001b085:	add    BYTE PTR [rax],al
   14001b087:	add    al,bl
   14001b089:	mov    eax,DWORD PTR [rdx]
   14001b08b:	add    BYTE PTR [rax],al
   14001b08d:	add    BYTE PTR [rax],al
   14001b08f:	add    dh,al
   14001b091:	mov    eax,DWORD PTR [rdx]
   14001b093:	add    BYTE PTR [rax],al
   14001b095:	add    BYTE PTR [rax],al
   14001b097:	add    BYTE PTR [rbx+rcx*4+0x2],bh
   14001b09e:	add    BYTE PTR [rax],al
   14001b0a0:	mov    al,0x8b
   14001b0a2:	add    al,BYTE PTR [rax]
   14001b0a4:	add    BYTE PTR [rax],al
   14001b0a6:	add    BYTE PTR [rax],al
   14001b0a8:	pushf  
   14001b0a9:	mov    eax,DWORD PTR [rdx]
   14001b0ab:	add    BYTE PTR [rax],al
   14001b0ad:	add    BYTE PTR [rax],al
   14001b0af:	add    BYTE PTR [rsi+0x28b],al
   14001b0b5:	add    BYTE PTR [rax],al
   14001b0b7:	add    BYTE PTR [rax-0x75],bh
   14001b0ba:	add    al,BYTE PTR [rax]
   14001b0bc:	add    BYTE PTR [rax],al
   14001b0be:	add    BYTE PTR [rax],al
   14001b0c0:	ins    BYTE PTR es:[rdi],dx
   14001b0c1:	mov    eax,DWORD PTR [rdx]
   14001b0c3:	add    BYTE PTR [rax],al
   14001b0c5:	add    BYTE PTR [rax],al
   14001b0c7:	add    BYTE PTR [rax-0x75],ah
   14001b0ca:	add    al,BYTE PTR [rax]
   14001b0cc:	add    BYTE PTR [rax],al
   14001b0ce:	add    BYTE PTR [rax],al
   14001b0d0:	pop    rax
   14001b0d1:	mov    eax,DWORD PTR [rdx]
   14001b0d3:	add    BYTE PTR [rax],al
   14001b0d5:	add    BYTE PTR [rax],al
   14001b0d7:	add    BYTE PTR [rsi-0x75],cl
   14001b0da:	add    al,BYTE PTR [rax]
   14001b0dc:	add    BYTE PTR [rax],al
   14001b0de:	add    BYTE PTR [rax],al
   14001b0e0:	rex.RX mov r8d,DWORD PTR [rdx]
   14001b0e3:	add    BYTE PTR [rax],al
   14001b0e5:	add    BYTE PTR [rax],al
   14001b0e7:	add    BYTE PTR [rax],bh
   14001b0e9:	mov    eax,DWORD PTR [rdx]
   14001b0eb:	add    BYTE PTR [rax],al
   14001b0ed:	add    BYTE PTR [rax],al
   14001b0ef:	add    BYTE PTR [rax],ch
   14001b0f1:	mov    eax,DWORD PTR [rdx]
   14001b0f3:	add    BYTE PTR [rax],al
   14001b0f5:	add    BYTE PTR [rax],al
   14001b0f7:	add    BYTE PTR [rdx],bl
   14001b0f9:	mov    eax,DWORD PTR [rdx]
   14001b0fb:	add    BYTE PTR [rax],al
   14001b0fd:	add    BYTE PTR [rax],al
   14001b0ff:	add    BYTE PTR [rax],cl
   14001b101:	mov    eax,DWORD PTR [rdx]
   14001b103:	add    BYTE PTR [rax],al
   14001b105:	add    BYTE PTR [rax],al
   14001b107:	add    dh,bh
   14001b109:	mov    al,BYTE PTR [rdx]
   14001b10b:	add    BYTE PTR [rax],al
   14001b10d:	add    BYTE PTR [rax],al
   14001b10f:	add    dh,dh
   14001b111:	mov    al,BYTE PTR [rdx]
   14001b113:	add    BYTE PTR [rax],al
   14001b115:	add    BYTE PTR [rax],al
   14001b117:	add    ah,ah
   14001b119:	mov    al,BYTE PTR [rdx]
   14001b11b:	add    BYTE PTR [rax],al
   14001b11d:	add    BYTE PTR [rax],al
   14001b11f:	add    dh,dl
   14001b121:	mov    al,BYTE PTR [rdx]
   14001b123:	add    BYTE PTR [rax],al
   14001b125:	add    BYTE PTR [rax],al
   14001b127:	add    ah,cl
   14001b129:	mov    al,BYTE PTR [rdx]
   14001b12b:	add    BYTE PTR [rax],al
   14001b12d:	add    BYTE PTR [rax],al
   14001b12f:	add    BYTE PTR [rdx+rcx*4+0x2],dh
   14001b136:	add    BYTE PTR [rax],al
   14001b138:	mov    WORD PTR [rdx+0x2],cs
   14001b13e:	add    BYTE PTR [rax],al
   14001b140:	(bad)  
   14001b141:	mov    al,BYTE PTR [rdx]
   14001b143:	add    BYTE PTR [rax],al
   14001b145:	add    BYTE PTR [rax],al
   14001b147:	add    BYTE PTR [rdx-0x76],bh
   14001b14a:	add    al,BYTE PTR [rax]
   14001b14c:	add    BYTE PTR [rax],al
   14001b14e:	add    BYTE PTR [rax],al
   14001b150:	push   0x28a
   14001b155:	add    BYTE PTR [rax],al
   14001b157:	add    BYTE PTR [rsi-0x76],bl
   14001b15a:	add    al,BYTE PTR [rax]
   14001b15c:	add    BYTE PTR [rax],al
   14001b15e:	add    BYTE PTR [rax],al
   14001b160:	push   rsp
   14001b161:	mov    al,BYTE PTR [rdx]
   14001b163:	add    BYTE PTR [rax],al
   14001b165:	add    BYTE PTR [rax],al
   14001b167:	add    BYTE PTR [rdx-0x76],al
   14001b16a:	add    al,BYTE PTR [rax]
   14001b16c:	add    BYTE PTR [rax],al
   14001b16e:	add    BYTE PTR [rax],al
   14001b170:	cmp    BYTE PTR [rdx+0x2],cl
   14001b176:	add    BYTE PTR [rax],al
   14001b178:	mov    al,BYTE PTR cs:[rdx]
   14001b17b:	add    BYTE PTR [rax],al
   14001b17d:	add    BYTE PTR [rax],al
   14001b17f:	add    BYTE PTR [rdx+rcx*4],ah
   14001b182:	add    al,BYTE PTR [rax]
   14001b184:	add    BYTE PTR [rax],al
   14001b186:	add    BYTE PTR [rax],al
   14001b188:	sbb    cl,BYTE PTR [rdx+0x2]
   14001b18e:	add    BYTE PTR [rax],al
   14001b190:	or     al,0x8a
   14001b192:	add    al,BYTE PTR [rax]
   14001b194:	add    BYTE PTR [rax],al
   14001b196:	add    BYTE PTR [rax],al
   14001b198:	cli    
   14001b199:	mov    DWORD PTR [rdx],eax
   14001b19b:	add    BYTE PTR [rax],al
   14001b19d:	add    BYTE PTR [rax],al
   14001b19f:	add    al,dh
   14001b1a1:	mov    DWORD PTR [rdx],eax
   14001b1a3:	add    BYTE PTR [rax],al
   14001b1a5:	add    BYTE PTR [rax],al
   14001b1a7:	add    dh,ah
   14001b1a9:	mov    DWORD PTR [rdx],eax
   14001b1ab:	add    BYTE PTR [rax],al
   14001b1ad:	add    BYTE PTR [rax],al
   14001b1af:	add    dl,bl
   14001b1b1:	mov    DWORD PTR [rdx],eax
   14001b1b3:	add    BYTE PTR [rax],al
   14001b1b5:	add    BYTE PTR [rax],al
   14001b1b7:	add    al,dl
   14001b1b9:	mov    DWORD PTR [rdx],eax
   14001b1bb:	add    BYTE PTR [rax],al
   14001b1bd:	add    BYTE PTR [rax],al
   14001b1bf:	add    ah,al
   14001b1c1:	mov    DWORD PTR [rdx],eax
   14001b1c3:	add    BYTE PTR [rax],al
   14001b1c5:	add    BYTE PTR [rax],al
   14001b1c7:	add    BYTE PTR [rdx+0x289],bh
   14001b1cd:	add    BYTE PTR [rax],al
   14001b1cf:	add    BYTE PTR [rcx+rcx*4+0x2],ah
   14001b1d6:	add    BYTE PTR [rax],al
   14001b1d8:	(bad)  
   14001b1d9:	mov    DWORD PTR [rdx],eax
   14001b1db:	add    BYTE PTR [rax],al
   14001b1dd:	add    BYTE PTR [rax],al
   14001b1df:	add    BYTE PTR [rdx+0x289],cl
   14001b1e5:	add    BYTE PTR [rax],al
   14001b1e7:	add    BYTE PTR [rcx+rcx*4+0x2],bh
   14001b1eb:	add    BYTE PTR [rax],al
   14001b1ed:	add    BYTE PTR [rax],al
   14001b1ef:	add    BYTE PTR [rdx-0x77],dh
   14001b1f2:	add    al,BYTE PTR [rax]
   14001b1f4:	add    BYTE PTR [rax],al
   14001b1f6:	add    BYTE PTR [rax],al
   14001b1f8:	pop    rsp
   14001b1f9:	mov    DWORD PTR [rdx],eax
   14001b1fb:	add    BYTE PTR [rax],al
   14001b1fd:	add    BYTE PTR [rax],al
   14001b1ff:	add    BYTE PTR [rcx+rcx*4+0x2],dl
   14001b203:	add    BYTE PTR [rax],al
   14001b205:	add    BYTE PTR [rax],al
   14001b207:	add    BYTE PTR [rdx-0x76],dh
   14001b20a:	add    al,BYTE PTR [rax]
	...
   14001b218:	(bad)  
   14001b219:	ja     0x14001b21d
   14001b21b:	add    BYTE PTR [rax],al
   14001b21d:	add    BYTE PTR [rax],al
   14001b21f:	add    dl,ch
   14001b221:	ja     0x14001b225
   14001b223:	add    BYTE PTR [rax],al
   14001b225:	add    BYTE PTR [rax],al
   14001b227:	add    BYTE PTR [rdx],bl
   14001b229:	js     0x14001b22d
   14001b22b:	add    BYTE PTR [rax],al
   14001b22d:	add    BYTE PTR [rax],al
   14001b22f:	add    BYTE PTR [rsi+0x78],dl
   14001b232:	add    al,BYTE PTR [rax]
   14001b234:	add    BYTE PTR [rax],al
   14001b236:	add    BYTE PTR [rax],al
   14001b238:	jle    0x14001b2b2
   14001b23a:	add    al,BYTE PTR [rax]
   14001b23c:	add    BYTE PTR [rax],al
   14001b23e:	add    BYTE PTR [rax],al
   14001b240:	movabs ds:0xbe00000000000278,al
   14001b249:	js     0x14001b24d
   14001b24b:	add    BYTE PTR [rax],al
   14001b24d:	add    BYTE PTR [rax],al
   14001b24f:	add    al,ch
   14001b251:	js     0x14001b255
   14001b253:	add    BYTE PTR [rax],al
   14001b255:	add    BYTE PTR [rax],al
   14001b257:	add    BYTE PTR [rcx+rdi*2],cl
   14001b25a:	add    al,BYTE PTR [rax]
   14001b25c:	add    BYTE PTR [rax],al
   14001b25e:	add    BYTE PTR [rax],al
   14001b260:	es jns 0x14001b265
   14001b263:	add    BYTE PTR [rax],al
   14001b265:	add    BYTE PTR [rax],al
   14001b267:	add    BYTE PTR [rsi+0x79],cl
   14001b26a:	add    al,BYTE PTR [rax]
   14001b26c:	add    BYTE PTR [rax],al
   14001b26e:	add    BYTE PTR [rax],al
   14001b270:	jo     0x14001b2eb
   14001b272:	add    al,BYTE PTR [rax]
   14001b274:	add    BYTE PTR [rax],al
   14001b276:	add    BYTE PTR [rax],al
   14001b278:	mov    ?,WORD PTR [rcx+0x2]
   14001b27b:	add    BYTE PTR [rax],al
   14001b27d:	add    BYTE PTR [rax],al
   14001b27f:	add    BYTE PTR [rdx+0x279],ah
   14001b285:	add    BYTE PTR [rax],al
   14001b287:	add    al,ah
   14001b289:	jns    0x14001b28d
   14001b28b:	add    BYTE PTR [rax],al
   14001b28d:	add    BYTE PTR [rax],al
   14001b28f:	add    BYTE PTR [rdx],al
   14001b291:	jp     0x14001b295
   14001b293:	add    BYTE PTR [rax],al
   14001b295:	add    BYTE PTR [rax],al
   14001b297:	add    BYTE PTR [rdx],ch
   14001b299:	jp     0x14001b29d
   14001b29b:	add    BYTE PTR [rax],al
   14001b29d:	add    BYTE PTR [rax],al
   14001b29f:	add    BYTE PTR [rax+0x7a],dl
   14001b2a2:	add    al,BYTE PTR [rax]
   14001b2a4:	add    BYTE PTR [rax],al
   14001b2a6:	add    BYTE PTR [rax],al
   14001b2a8:	xchg   BYTE PTR [rdx+0x2],bh
   14001b2ab:	add    BYTE PTR [rax],al
   14001b2ad:	add    BYTE PTR [rax],al
   14001b2af:	add    BYTE PTR [rdx+0x27a],bl
   14001b2b5:	add    BYTE PTR [rax],al
   14001b2b7:	add    dh,al
   14001b2b9:	jp     0x14001b2bd
   14001b2bb:	add    BYTE PTR [rax],al
   14001b2bd:	add    BYTE PTR [rax],al
   14001b2bf:	add    dl,dh
   14001b2c1:	jp     0x14001b2c5
   14001b2c3:	add    BYTE PTR [rax],al
   14001b2c5:	add    BYTE PTR [rax],al
   14001b2c7:	add    BYTE PTR [rax],dl
   14001b2c9:	jnp    0x14001b2cd
   14001b2cb:	add    BYTE PTR [rax],al
   14001b2cd:	add    BYTE PTR [rax],al
   14001b2cf:	add    BYTE PTR [rdx],bh
   14001b2d1:	jnp    0x14001b2d5
   14001b2d3:	add    BYTE PTR [rax],al
   14001b2d5:	add    BYTE PTR [rax],al
   14001b2d7:	add    BYTE PTR [rax+0x7b],ah
   14001b2da:	add    al,BYTE PTR [rax]
   14001b2dc:	add    BYTE PTR [rax],al
   14001b2de:	add    BYTE PTR [rax],al
   14001b2e0:	(bad)  
   14001b2e1:	jnp    0x14001b2e5
   14001b2e3:	add    BYTE PTR [rax],al
   14001b2e5:	add    BYTE PTR [rax],al
   14001b2e7:	add    BYTE PTR [rax+0x27b],bl
   14001b2ed:	add    BYTE PTR [rax],al
   14001b2ef:	add    ah,cl
   14001b2f1:	jnp    0x14001b2f5
   14001b2f3:	add    BYTE PTR [rax],al
   14001b2f5:	add    BYTE PTR [rax],al
   14001b2f7:	add    BYTE PTR [rax],bl
   14001b2f9:	jl     0x14001b2fd
   14001b2fb:	add    BYTE PTR [rax],al
   14001b2fd:	add    BYTE PTR [rax],al
   14001b2ff:	add    BYTE PTR [rdx],bh
   14001b301:	jl     0x14001b305
   14001b303:	add    BYTE PTR [rax],al
   14001b305:	add    BYTE PTR [rax],al
   14001b307:	add    BYTE PTR [rax+0x7c],ah
   14001b30a:	add    al,BYTE PTR [rax]
   14001b30c:	add    BYTE PTR [rax],al
   14001b30e:	add    BYTE PTR [rax],al
   14001b310:	(bad)  
   14001b311:	jl     0x14001b315
   14001b313:	add    BYTE PTR [rax],al
   14001b315:	add    BYTE PTR [rax],al
   14001b317:	add    BYTE PTR [rax+0x27c],ch
   14001b31d:	add    BYTE PTR [rax],al
   14001b31f:	add    al,cl
   14001b321:	jl     0x14001b325
   14001b323:	add    BYTE PTR [rax],al
   14001b325:	add    BYTE PTR [rax],al
   14001b327:	add    BYTE PTR [rax],al
   14001b329:	jge    0x14001b32d
   14001b32b:	add    BYTE PTR [rax],al
   14001b32d:	add    BYTE PTR [rax],al
   14001b32f:	add    BYTE PTR [rax],ch
   14001b331:	jge    0x14001b335
   14001b333:	add    BYTE PTR [rax],al
   14001b335:	add    BYTE PTR [rax],al
   14001b337:	add    BYTE PTR [rbp+rdi*2+0x2],al
   14001b33b:	add    BYTE PTR [rax],al
   14001b33d:	add    BYTE PTR [rax],al
   14001b33f:	add    BYTE PTR [rbp+rdi*2+0x2],ch
   14001b343:	add    BYTE PTR [rax],al
   14001b345:	add    BYTE PTR [rax],al
   14001b347:	add    BYTE PTR [rsi+0x27d],bl
   14001b34d:	add    BYTE PTR [rax],al
   14001b34f:	add    dl,al
   14001b351:	jge    0x14001b355
   14001b353:	add    BYTE PTR [rax],al
   14001b355:	add    BYTE PTR [rax],al
   14001b357:	add    dh,dl
   14001b359:	jge    0x14001b35d
   14001b35b:	add    BYTE PTR [rax],al
   14001b35d:	add    BYTE PTR [rax],al
   14001b35f:	add    BYTE PTR [rdx],cl
   14001b361:	jle    0x14001b365
   14001b363:	add    BYTE PTR [rax],al
   14001b365:	add    BYTE PTR [rax],al
   14001b367:	add    BYTE PTR [rdx],ch
   14001b369:	jle    0x14001b36d
   14001b36b:	add    BYTE PTR [rax],al
   14001b36d:	add    BYTE PTR [rax],al
   14001b36f:	add    BYTE PTR [rsi+rdi*2+0x2],dl
   14001b373:	add    BYTE PTR [rax],al
   14001b375:	add    BYTE PTR [rax],al
   14001b377:	add    BYTE PTR [rsi+rdi*2+0x2],bh
   14001b37b:	add    BYTE PTR [rax],al
   14001b37d:	add    BYTE PTR [rax],al
   14001b37f:	add    BYTE PTR [rsi+0x27e],bl
   14001b385:	add    BYTE PTR [rax],al
   14001b387:	add    BYTE PTR [rsi+rdi*2+0x2],bh
   14001b38e:	add    BYTE PTR [rax],al
   14001b390:	idiv   BYTE PTR [rsi+0x2]
   14001b393:	add    BYTE PTR [rax],al
   14001b395:	add    BYTE PTR [rax],al
   14001b397:	add    BYTE PTR [rsi],dl
   14001b399:	jg     0x14001b39d
   14001b39b:	add    BYTE PTR [rax],al
   14001b39d:	add    BYTE PTR [rax],al
   14001b39f:	add    BYTE PTR [rdx+0x7f],cl
   14001b3a2:	add    al,BYTE PTR [rax]
   14001b3a4:	add    BYTE PTR [rax],al
   14001b3a6:	add    BYTE PTR [rax],al
   14001b3a8:	data16 jg 0x14001b3ad
   14001b3ab:	add    BYTE PTR [rax],al
   14001b3ad:	add    BYTE PTR [rax],al
   14001b3af:	add    BYTE PTR [rdx+0x27f],al
   14001b3b5:	add    BYTE PTR [rax],al
   14001b3b7:	add    ah,bl
   14001b3b9:	jg     0x14001b3bd
   14001b3bb:	add    BYTE PTR [rax],al
   14001b3bd:	add    BYTE PTR [rax],al
   14001b3bf:	add    dl,bh
   14001b3c1:	jg     0x14001b3c5
   14001b3c3:	add    BYTE PTR [rax],al
   14001b3c5:	add    BYTE PTR [rax],al
   14001b3c7:	add    BYTE PTR [rdx],dl
   14001b3c9:	add    BYTE PTR [rdx],0x0
   14001b3cc:	add    BYTE PTR [rax],al
   14001b3ce:	add    BYTE PTR [rax],al
   14001b3d0:	cmp    al,BYTE PTR [rax+0x2]
   14001b3d6:	add    BYTE PTR [rax],al
   14001b3d8:	(bad)  
   14001b3d9:	add    BYTE PTR [rdx],0x0
   14001b3dc:	add    BYTE PTR [rax],al
   14001b3de:	add    BYTE PTR [rax],al
   14001b3e0:	mov    BYTE PTR [rdi+0x2],dh
   14001b3e3:	add    BYTE PTR [rax],al
   14001b3e5:	add    BYTE PTR [rax],al
   14001b3e7:	add    BYTE PTR [rax+rax*4+0x2],ch
   14001b3ee:	add    BYTE PTR [rax],al
   14001b3f0:	mov    BYTE PTR [rax+0x2],0x0
   14001b3f7:	add    dl,dh
   14001b3f9:	add    BYTE PTR [rdx],0x0
   14001b3fc:	add    BYTE PTR [rax],al
   14001b3fe:	add    BYTE PTR [rax],al
   14001b400:	sbb    al,0x81
   14001b402:	add    al,BYTE PTR [rax]
   14001b404:	add    BYTE PTR [rax],al
   14001b406:	add    BYTE PTR [rax],al
   14001b408:	pop    rdx
   14001b409:	add    DWORD PTR [rdx],0x0
   14001b40f:	add    BYTE PTR [rdx+0x281],al
   14001b415:	add    BYTE PTR [rax],al
   14001b417:	add    BYTE PTR [rcx+rax*4+0x2],ah
   14001b41e:	add    BYTE PTR [rax],al
   14001b420:	int3   
   14001b421:	add    DWORD PTR [rdx],0x0
   14001b427:	add    dh,ah
   14001b429:	add    DWORD PTR [rdx],0x0
   14001b42f:	add    BYTE PTR [rdx],cl
   14001b431:	(bad)  
   14001b432:	add    al,BYTE PTR [rax]
   14001b434:	add    BYTE PTR [rax],al
   14001b436:	add    BYTE PTR [rax],al
   14001b438:	and    al,BYTE PTR [rdx+0x2]
   14001b43e:	add    BYTE PTR [rax],al
   14001b440:	cmp    BYTE PTR [rdx+0x2],al
   14001b446:	add    BYTE PTR [rax],al
   14001b448:	(bad)  
   14001b44a:	add    al,BYTE PTR [rax]
   14001b44c:	add    BYTE PTR [rax],al
   14001b44e:	add    BYTE PTR [rax],al
   14001b450:	sahf   
   14001b451:	(bad)  
   14001b452:	add    al,BYTE PTR [rax]
   14001b454:	add    BYTE PTR [rax],al
   14001b456:	add    BYTE PTR [rax],al
   14001b458:	retf   0x282
   14001b45b:	add    BYTE PTR [rax],al
   14001b45d:	add    BYTE PTR [rax],al
   14001b45f:	add    dh,ch
   14001b461:	(bad)  
   14001b462:	add    al,BYTE PTR [rax]
   14001b464:	add    BYTE PTR [rax],al
   14001b466:	add    BYTE PTR [rax],al
   14001b468:	(bad)  
   14001b469:	add    DWORD PTR [rdx],0x0
   14001b46c:	add    BYTE PTR [rax],al
   14001b46e:	add    BYTE PTR [rax],al
   14001b470:	push   rax
   14001b471:	add    DWORD PTR [rdx],0x0
   14001b474:	add    BYTE PTR [rax],al
   14001b476:	add    BYTE PTR [rax],al
   14001b478:	jb     0x14001b3fd
   14001b47a:	add    al,BYTE PTR [rax]
   14001b47c:	add    BYTE PTR [rax],al
   14001b47e:	add    BYTE PTR [rax],al
   14001b480:	nop
   14001b481:	add    DWORD PTR [rdx],0x0
   14001b484:	add    BYTE PTR [rax],al
   14001b486:	add    BYTE PTR [rax],al
   14001b488:	int3   
   14001b489:	add    DWORD PTR [rdx],0x0
   14001b48c:	add    BYTE PTR [rax],al
   14001b48e:	add    BYTE PTR [rax],al
   14001b490:	add    al,0x84
   14001b492:	add    al,BYTE PTR [rax]
   14001b494:	add    BYTE PTR [rax],al
   14001b496:	add    BYTE PTR [rax],al
   14001b498:	test   BYTE PTR cs:[rdx],al
   14001b49b:	add    BYTE PTR [rax],al
   14001b49d:	add    BYTE PTR [rax],al
   14001b49f:	add    BYTE PTR [rsi-0x7c],cl
   14001b4a2:	add    al,BYTE PTR [rax]
   14001b4a4:	add    BYTE PTR [rax],al
   14001b4a6:	add    BYTE PTR [rax],al
   14001b4a8:	mov    es,WORD PTR [rdx+rax*1+0x0]
   14001b4af:	add    BYTE PTR [rax+0x284],bh
   14001b4b5:	add    BYTE PTR [rax],al
   14001b4b7:	add    al,ch
   14001b4b9:	test   BYTE PTR [rdx],al
   14001b4bb:	add    BYTE PTR [rax],al
   14001b4bd:	add    BYTE PTR [rax],al
   14001b4bf:	add    BYTE PTR [rax*4+0x2],dl
   14001b4c6:	add    BYTE PTR [rax],al
   14001b4c8:	cmp    al,0x85
   14001b4ca:	add    al,BYTE PTR [rax]
   14001b4cc:	add    BYTE PTR [rax],al
   14001b4ce:	add    BYTE PTR [rax],al
   14001b4d0:	(bad)  
   14001b4d1:	test   DWORD PTR [rdx],eax
   14001b4d3:	add    BYTE PTR [rax],al
   14001b4d5:	add    BYTE PTR [rax],al
   14001b4d7:	add    BYTE PTR [rdx+0x285],dl
   14001b4dd:	add    BYTE PTR [rax],al
   14001b4df:	add    BYTE PTR [rbp+rax*4+0x2],dh
   14001b4e6:	add    BYTE PTR [rax],al
   14001b4e8:	(bad)  
   14001b4e9:	test   DWORD PTR [rdx],eax
   14001b4eb:	add    BYTE PTR [rax],al
   14001b4ed:	add    BYTE PTR [rax],al
   14001b4ef:	add    al,dh
   14001b4f1:	test   DWORD PTR [rdx],eax
   14001b4f3:	add    BYTE PTR [rax],al
   14001b4f5:	add    BYTE PTR [rax],al
   14001b4f7:	add    BYTE PTR [rax],dl
   14001b4f9:	xchg   BYTE PTR [rdx],al
   14001b4fb:	add    BYTE PTR [rax],al
   14001b4fd:	add    BYTE PTR [rax],al
   14001b4ff:	add    BYTE PTR [rax],dh
   14001b501:	xchg   BYTE PTR [rdx],al
   14001b503:	add    BYTE PTR [rax],al
   14001b505:	add    BYTE PTR [rax],al
   14001b507:	add    BYTE PTR [rsi-0x7a],cl
   14001b50a:	add    al,BYTE PTR [rax]
   14001b50c:	add    BYTE PTR [rax],al
   14001b50e:	add    BYTE PTR [rax],al
   14001b510:	ins    BYTE PTR es:[rdi],dx
   14001b511:	xchg   BYTE PTR [rdx],al
   14001b513:	add    BYTE PTR [rax],al
   14001b515:	add    BYTE PTR [rax],al
   14001b517:	add    BYTE PTR [rdx+0x286],bh
   14001b51d:	add    BYTE PTR [rax],al
   14001b51f:	add    dl,ah
   14001b521:	xchg   BYTE PTR [rdx],al
   14001b523:	add    BYTE PTR [rax],al
   14001b525:	add    BYTE PTR [rax],al
   14001b527:	add    BYTE PTR [rax],cl
   14001b529:	xchg   DWORD PTR [rdx],eax
   14001b52b:	add    BYTE PTR [rax],al
   14001b52d:	add    BYTE PTR [rax],al
   14001b52f:	add    BYTE PTR [rsi],dh
   14001b531:	xchg   DWORD PTR [rdx],eax
   14001b533:	add    BYTE PTR [rax],al
   14001b535:	add    BYTE PTR [rax],al
   14001b537:	add    BYTE PTR [rsi-0x79],dl
   14001b53a:	add    al,BYTE PTR [rax]
   14001b53c:	add    BYTE PTR [rax],al
   14001b53e:	add    BYTE PTR [rax],al
   14001b540:	xchg   esi,eax
   14001b541:	xchg   DWORD PTR [rdx],eax
   14001b543:	add    BYTE PTR [rax],al
   14001b545:	add    BYTE PTR [rax],al
   14001b547:	add    BYTE PTR [rdx+0x287],bh
   14001b54d:	add    BYTE PTR [rax],al
   14001b54f:	add    ah,bl
   14001b551:	xchg   DWORD PTR [rdx],eax
   14001b553:	add    BYTE PTR [rax],al
   14001b555:	add    BYTE PTR [rax],al
   14001b557:	add    BYTE PTR [rsi],al
   14001b559:	mov    BYTE PTR [rdx],al
   14001b55b:	add    BYTE PTR [rax],al
   14001b55d:	add    BYTE PTR [rax],al
   14001b55f:	add    BYTE PTR [rax],dh
   14001b561:	mov    BYTE PTR [rdx],al
   14001b563:	add    BYTE PTR [rax],al
   14001b565:	add    BYTE PTR [rax],al
   14001b567:	add    BYTE PTR [rdx-0x78],ch
   14001b56a:	add    al,BYTE PTR [rax]
   14001b56c:	add    BYTE PTR [rax],al
   14001b56e:	add    BYTE PTR [rax],al
   14001b570:	mov    cs,WORD PTR [rax+0x2]
   14001b576:	add    BYTE PTR [rax],al
   14001b578:	(bad)  
   14001b579:	mov    BYTE PTR [rdx],al
   14001b57b:	add    BYTE PTR [rax],al
   14001b57d:	add    BYTE PTR [rax],al
   14001b57f:	add    al,dh
   14001b581:	mov    BYTE PTR [rdx],al
   14001b583:	add    BYTE PTR [rax],al
   14001b585:	add    BYTE PTR [rax],al
   14001b587:	add    BYTE PTR [rsi],dl
   14001b589:	mov    DWORD PTR [rdx],eax
   14001b58b:	add    BYTE PTR [rax],al
   14001b58d:	add    BYTE PTR [rax],al
   14001b58f:	add    BYTE PTR [rdi+rsi*2+0x2],ah
   14001b593:	add    BYTE PTR [rax],al
   14001b595:	add    BYTE PTR [rax],al
   14001b597:	add    BYTE PTR [rdi+rsi*2+0x2],cl
   14001b59b:	add    BYTE PTR [rax],al
   14001b59d:	add    BYTE PTR [rax],al
   14001b59f:	add    BYTE PTR [rdi+rsi*2],ah
   14001b5a2:	add    al,BYTE PTR [rax]
   14001b5a4:	add    BYTE PTR [rax],al
   14001b5a6:	add    BYTE PTR [rax],al
   14001b5a8:	in     al,0x76
   14001b5aa:	add    al,BYTE PTR [rax]
   14001b5ac:	add    BYTE PTR [rax],al
   14001b5ae:	add    BYTE PTR [rax],al
   14001b5b0:	(bad)  
   14001b5b1:	jbe    0x14001b5b5
   14001b5b3:	add    BYTE PTR [rax],al
   14001b5b5:	add    BYTE PTR [rax],al
   14001b5b7:	add    BYTE PTR [rsi+rsi*2+0x2],al
   14001b5be:	add    BYTE PTR [rax],al
   14001b5c0:	pop    rdx
   14001b5c1:	jbe    0x14001b5c5
   14001b5c3:	add    BYTE PTR [rax],al
   14001b5c5:	add    BYTE PTR [rax],al
   14001b5c7:	add    BYTE PTR [rax],cl
   14001b5c9:	jbe    0x14001b5cd
   14001b5cb:	add    BYTE PTR [rax],al
   14001b5cd:	add    BYTE PTR [rax],al
   14001b5cf:	add    ah,ah
   14001b5d1:	jne    0x14001b5d5
   14001b5d3:	add    BYTE PTR [rax],al
   14001b5d5:	add    BYTE PTR [rax],al
   14001b5d7:	add    al,al
   14001b5d9:	jne    0x14001b5dd
   14001b5db:	add    BYTE PTR [rax],al
   14001b5dd:	add    BYTE PTR [rax],al
   14001b5df:	add    BYTE PTR [rdx+0x275],bl
   14001b5e5:	add    BYTE PTR [rax],al
   14001b5e7:	add    BYTE PTR [rsi+0x75],ch
   14001b5ea:	add    al,BYTE PTR [rax]
   14001b5ec:	add    BYTE PTR [rax],al
   14001b5ee:	add    BYTE PTR [rax],al
   14001b5f0:	rex.WRX jne 0x14001b5f5
   14001b5f3:	add    BYTE PTR [rax],al
   14001b5f5:	add    BYTE PTR [rax],al
   14001b5f7:	add    BYTE PTR [rax],ch
   14001b5f9:	jne    0x14001b5fd
   14001b5fb:	add    BYTE PTR [rax],al
   14001b5fd:	add    BYTE PTR [rax],al
   14001b5ff:	add    BYTE PTR [rdx],al
   14001b601:	jne    0x14001b605
   14001b603:	add    BYTE PTR [rax],al
   14001b605:	add    BYTE PTR [rax],al
   14001b607:	add    ah,ah
   14001b609:	je     0x14001b60d
   14001b60b:	add    BYTE PTR [rax],al
   14001b60d:	add    BYTE PTR [rax],al
   14001b60f:	add    dh,cl
   14001b611:	je     0x14001b615
   14001b613:	add    BYTE PTR [rax],al
   14001b615:	add    BYTE PTR [rax],al
   14001b617:	add    BYTE PTR [rsi+0x274],cl
   14001b61d:	add    BYTE PTR [rax],al
   14001b61f:	add    BYTE PTR [rsp+rsi*2+0x2],dh
   14001b623:	add    BYTE PTR [rax],al
   14001b625:	add    BYTE PTR [rax],al
   14001b627:	add    BYTE PTR [rsi+0x74],bl
   14001b62a:	add    al,BYTE PTR [rax]
   14001b62c:	add    BYTE PTR [rax],al
   14001b62e:	add    BYTE PTR [rax],al
   14001b630:	rex.X je 0x14001b635
   14001b633:	add    BYTE PTR [rax],al
   14001b635:	add    BYTE PTR [rax],al
   14001b637:	add    BYTE PTR [rsi],bl
   14001b639:	je     0x14001b63d
   14001b63b:	add    BYTE PTR [rax],al
   14001b63d:	add    BYTE PTR [rax],al
   14001b63f:	add    al,bh
   14001b641:	jae    0x14001b645
   14001b643:	add    BYTE PTR [rax],al
   14001b645:	add    BYTE PTR [rax],al
   14001b647:	add    BYTE PTR [rsi+0x280],al
	...
   14001b655:	add    BYTE PTR [rax],al
   14001b657:	add    BYTE PTR [rax+0x273],dh
   14001b65d:	add    BYTE PTR [rax],al
   14001b65f:	add    BYTE PTR [rbx+rsi*2+0x2],ch
   14001b663:	add    BYTE PTR [rax],al
   14001b665:	add    BYTE PTR [rax],al
   14001b667:	add    BYTE PTR [rdx+0x73],cl
   14001b66a:	add    al,BYTE PTR [rax]
   14001b66c:	add    BYTE PTR [rax],al
   14001b66e:	add    BYTE PTR [rax],al
   14001b670:	sbb    al,0x73
   14001b672:	add    al,BYTE PTR [rax]
   14001b674:	add    BYTE PTR [rax],al
   14001b676:	add    BYTE PTR [rax],al
   14001b678:	out    dx,al
   14001b679:	jb     0x14001b67d
   14001b67b:	add    BYTE PTR [rax],al
   14001b67d:	add    BYTE PTR [rax],al
   14001b67f:	add    BYTE PTR [rdx+rsi*2+0x2],bh
   14001b686:	add    BYTE PTR [rax],al
   14001b688:	mov    ?,WORD PTR [rdx+0x2]
   14001b68b:	add    BYTE PTR [rax],al
   14001b68d:	add    BYTE PTR [rax],al
   14001b68f:	add    BYTE PTR [rsi+0x72],ch
   14001b692:	add    al,BYTE PTR [rax]
   14001b694:	add    BYTE PTR [rax],al
   14001b696:	add    BYTE PTR [rax],al
   14001b698:	ss jb  0x14001b69d
   14001b69b:	add    BYTE PTR [rax],al
   14001b69d:	add    BYTE PTR [rax],al
   14001b69f:	add    dh,ch
   14001b6a1:	jno    0x14001b6a5
   14001b6a3:	add    BYTE PTR [rax],al
   14001b6a5:	add    BYTE PTR [rax],al
   14001b6a7:	add    BYTE PTR [rdx+0x271],ch
   14001b6ad:	add    BYTE PTR [rax],al
   14001b6af:	add    BYTE PTR [rax+0x71],dh
   14001b6b2:	add    al,BYTE PTR [rax]
   14001b6b4:	add    BYTE PTR [rax],al
   14001b6b6:	add    BYTE PTR [rax],al
   14001b6b8:	push   rax
   14001b6b9:	jno    0x14001b6bd
   14001b6bb:	add    BYTE PTR [rax],al
   14001b6bd:	add    BYTE PTR [rax],al
   14001b6bf:	add    BYTE PTR [rdx],dh
   14001b6c1:	jno    0x14001b6c5
   14001b6c3:	add    BYTE PTR [rax],al
   14001b6c5:	add    BYTE PTR [rax],al
   14001b6c7:	add    BYTE PTR [rax],al
   14001b6c9:	jno    0x14001b6cd
   14001b6cb:	add    BYTE PTR [rax],al
   14001b6cd:	add    BYTE PTR [rax],al
   14001b6cf:	add    ah,dl
   14001b6d1:	jo     0x14001b6d5
   14001b6d3:	add    BYTE PTR [rax],al
   14001b6d5:	add    BYTE PTR [rax],al
   14001b6d7:	add    BYTE PTR [rdx+0x270],ch
   14001b6dd:	add    BYTE PTR [rax],al
   14001b6df:	add    BYTE PTR [rax+0x70],ch
   14001b6e2:	add    al,BYTE PTR [rax]
   14001b6e4:	add    BYTE PTR [rax],al
   14001b6e6:	add    BYTE PTR [rax],al
   14001b6e8:	es jo  0x14001b6ed
   14001b6eb:	add    BYTE PTR [rax],al
   14001b6ed:	add    BYTE PTR [rax],al
   14001b6ef:	add    dh,ah
   14001b6f1:	outs   dx,DWORD PTR ds:[rsi]
   14001b6f2:	add    al,BYTE PTR [rax]
   14001b6f4:	add    BYTE PTR [rax],al
   14001b6f6:	add    BYTE PTR [rax],al
   14001b6f8:	mov    al,0x6f
   14001b6fa:	add    al,BYTE PTR [rax]
   14001b6fc:	add    BYTE PTR [rax],al
   14001b6fe:	add    BYTE PTR [rax],al
   14001b700:	xchg   BYTE PTR [rdi+0x2],ch
   14001b703:	add    BYTE PTR [rax],al
   14001b705:	add    BYTE PTR [rax],al
   14001b707:	add    BYTE PTR [rdx+0x6f],bl
   14001b70a:	add    al,BYTE PTR [rax]
   14001b70c:	add    BYTE PTR [rax],al
   14001b70e:	add    BYTE PTR [rax],al
   14001b710:	and    ch,BYTE PTR [rdi+0x2]
   14001b713:	add    BYTE PTR [rax],al
   14001b715:	add    BYTE PTR [rax],al
   14001b717:	add    al,ch
   14001b719:	outs   dx,BYTE PTR ds:[rsi]
   14001b71a:	add    al,BYTE PTR [rax]
   14001b71c:	add    BYTE PTR [rax],al
   14001b71e:	add    BYTE PTR [rax],al
   14001b720:	shr    BYTE PTR [rsi+0x2],0x0
   14001b724:	add    BYTE PTR [rax],al
   14001b726:	add    BYTE PTR [rax],al
   14001b728:	mov    BYTE PTR [rsi+0x2],ch
   14001b72b:	add    BYTE PTR [rax],al
   14001b72d:	add    BYTE PTR [rax],al
   14001b72f:	add    BYTE PTR [rsi+rbp*2],dh
   14001b732:	add    al,BYTE PTR [rax]
   14001b734:	add    BYTE PTR [rax],al
   14001b736:	add    BYTE PTR [rax],al
   14001b738:	lock ins DWORD PTR es:[rdi],dx
   14001b73a:	add    al,BYTE PTR [rax]
   14001b73c:	add    BYTE PTR [rax],al
   14001b73e:	add    BYTE PTR [rax],al
   14001b740:	mov    ah,0x6d
   14001b742:	add    al,BYTE PTR [rax]
   14001b744:	add    BYTE PTR [rax],al
   14001b746:	add    BYTE PTR [rax],al
   14001b748:	jbe    0x14001b7b7
   14001b74a:	add    al,BYTE PTR [rax]
   14001b74c:	add    BYTE PTR [rax],al
   14001b74e:	add    BYTE PTR [rax],al
   14001b750:	ss ins DWORD PTR es:[rdi],dx
   14001b752:	add    al,BYTE PTR [rax]
   14001b754:	add    BYTE PTR [rax],al
   14001b756:	add    BYTE PTR [rax],al
   14001b758:	add    BYTE PTR [rbp+0x2],ch
   14001b75b:	add    BYTE PTR [rax],al
   14001b75d:	add    BYTE PTR [rax],al
   14001b75f:	add    ah,al
   14001b761:	ins    BYTE PTR es:[rdi],dx
   14001b762:	add    al,BYTE PTR [rax]
   14001b764:	add    BYTE PTR [rax],al
   14001b766:	add    BYTE PTR [rax],al
   14001b768:	sub    BYTE PTR [rdx+rax*1+0x0],0x0
   14001b76d:	add    BYTE PTR [rax],al
   14001b76f:	add    BYTE PTR [rsi],bh
   14001b771:	ins    BYTE PTR es:[rdi],dx
   14001b772:	add    al,BYTE PTR [rax]
   14001b774:	add    BYTE PTR [rax],al
   14001b776:	add    BYTE PTR [rax],al
   14001b778:	add    BYTE PTR [rdx+rax*1+0x0],ch
   14001b77c:	add    BYTE PTR [rax],al
   14001b77e:	add    BYTE PTR [rax],al
   14001b780:	mov    esi,0x26b
   14001b785:	add    BYTE PTR [rax],al
   14001b787:	add    BYTE PTR [rdx+0x26b],dl
   14001b78d:	add    BYTE PTR [rax],al
   14001b78f:	add    BYTE PTR [rbx+rbp*2+0x2],ah
   14001b793:	add    BYTE PTR [rax],al
   14001b795:	add    BYTE PTR [rax],al
   14001b797:	add    BYTE PTR [rdx+0x6b],al
   14001b79a:	add    al,BYTE PTR [rax]
   14001b79c:	add    BYTE PTR [rax],al
   14001b79e:	add    BYTE PTR [rax],al
   14001b7a0:	and    BYTE PTR [rbx+0x2],ch
	...
   14001b7b7:	add    BYTE PTR [rax+0x41],bh
   14001b7ba:	add    DWORD PTR [rax+0x1],eax
   14001b7bd:	add    BYTE PTR [rax],al
   14001b7bf:	add    al,al
   14001b7c1:	movabs al,ds:0xa0e0000000014001
   14001b7ca:	add    DWORD PTR [rax+0x1],eax
   14001b7cd:	add    BYTE PTR [rax],al
   14001b7cf:	add    BYTE PTR [rax],al
   14001b7d1:	movabs eax,ds:0xa130000000014001
   14001b7da:	add    DWORD PTR [rax+0x1],eax
   14001b7dd:	add    BYTE PTR [rax],al
   14001b7df:	add    BYTE PTR [rax-0x5f],dl
   14001b7e2:	add    DWORD PTR [rax+0x1],eax
   14001b7e5:	add    BYTE PTR [rax],al
   14001b7e7:	add    BYTE PTR [rax+0x14001a1],al
	...
   14001b7fd:	add    BYTE PTR [rax],al
   14001b7ff:	add    BYTE PTR [rax+0x43],ah
   14001b802:	add    DWORD PTR [rax+0x1],eax
   14001b805:	add    BYTE PTR [rax],al
   14001b807:	add    BYTE PTR [rax+0x1400146],dh
	...
   14001b81d:	add    BYTE PTR [rax],al
   14001b81f:	add    BYTE PTR [rax+0x6c],dl
   14001b822:	jne    0x14001b896
   14001b824:	(bad)  
   14001b825:	ins    BYTE PTR es:[rdi],dx
   14001b826:	and    BYTE PTR [rsi+0x6f],al
   14001b829:	jb     0x14001b898
   14001b82b:	and    BYTE PTR [rsi+0x6f],ah
   14001b82e:	jb     0x14001b850
   14001b830:	xor    DWORD PTR [rax],esi
   14001b832:	xor    BYTE PTR [rax+riz*1],ch
   14001b835:	xor    dh,BYTE PTR [rax]
   14001b837:	xor    BYTE PTR [rax+riz*1],ch
   14001b83a:	cs cs add BYTE PTR cs:[rax],al
   14001b83f:	add    BYTE PTR [rbp+0x69],cl
   14001b842:	outs   dx,BYTE PTR ds:[rsi]
   14001b843:	outs   dx,DWORD PTR ds:[rsi]
   14001b844:	jb     0x14001b8af
   14001b846:	je     0x14001b8c1
   14001b848:	and    BYTE PTR [rax+0x6c],dl
   14001b84b:	jne    0x14001b8bf
   14001b84d:	(bad)  
   14001b84e:	ins    BYTE PTR es:[rdi],dx
   14001b84f:	add    BYTE PTR [rbx+0x65],dl
   14001b852:	js     0x14001b8b5
   14001b854:	ins    BYTE PTR es:[rdi],dx
   14001b855:	add    BYTE PTR [rax],al
   14001b857:	add    BYTE PTR [rax+0x6c],dl
   14001b85a:	jne    0x14001b8ce
   14001b85c:	(bad)  
   14001b85d:	ins    BYTE PTR es:[rdi],dx
   14001b85e:	and    BYTE PTR [rsi+0x6f],al
   14001b861:	jb     0x14001b8d0
   14001b863:	and    BYTE PTR [rsi+0x6f],ah
   14001b866:	jb     0x14001b888
   14001b868:	xor    DWORD PTR [rcx],esi
   14001b86a:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14001b86e:	xor    DWORD PTR [rcx],edi
	...
   14001b878:	push   rax
   14001b879:	ins    BYTE PTR es:[rdi],dx
   14001b87a:	jne    0x14001b8ee
   14001b87c:	(bad)  
   14001b87d:	ins    BYTE PTR es:[rdi],dx
   14001b87e:	and    BYTE PTR [rsi+0x6f],al
   14001b881:	jb     0x14001b8f0
   14001b883:	and    BYTE PTR [rsi+0x6f],ah
   14001b886:	jb     0x14001b8a8
   14001b888:	xor    ah,BYTE PTR [rax]
   14001b88a:	je     0x14001b8fb
   14001b88c:	and    BYTE PTR [rcx],dh
   14001b88e:	xor    BYTE PTR [rax],al
   14001b890:	push   rsp
   14001b891:	jb     0x14001b8fc
   14001b893:	(bad)  
   14001b894:	ins    BYTE PTR es:[rdi],dx
   14001b895:	add    BYTE PTR [rax],al
   14001b897:	add    BYTE PTR [rax+0x6c],dl
   14001b89a:	jne    0x14001b90e
   14001b89c:	(bad)  
   14001b89d:	ins    BYTE PTR es:[rdi],dx
   14001b89e:	and    BYTE PTR [rsi+0x6f],al
   14001b8a1:	jb     0x14001b910
   14001b8a3:	and    BYTE PTR [rsi+0x6f],ah
   14001b8a6:	jb     0x14001b8c8
   14001b8a8:	xor    ah,BYTE PTR [rax]
   14001b8aa:	je     0x14001b91b
   14001b8ac:	and    BYTE PTR [rcx],dh
   14001b8ae:	cmp    DWORD PTR [rax],eax
   14001b8b0:	push   rax
   14001b8b1:	(bad)  
   14001b8b2:	jne    0x14001b917
   14001b8b4:	(bad)  
   14001b8b5:	ins    BYTE PTR es:[rdi],dx
   14001b8b6:	add    BYTE PTR [rax],al
   14001b8b8:	rex.R jne 0x14001b91c
   14001b8bb:	ins    BYTE PTR es:[rdi],dx
   14001b8bc:	add    BYTE PTR [rax],al
   14001b8be:	add    BYTE PTR [rax],al
   14001b8c0:	rex.WRX jne 0x14001b92f
   14001b8c3:	ins    BYTE PTR es:[rdi],dx
   14001b8c4:	(bad)  
   14001b8c5:	jb     0x14001b8c7
   14001b8c7:	add    BYTE PTR [rax+0x6c],dl
   14001b8ca:	jne    0x14001b93e
   14001b8cc:	(bad)  
   14001b8cd:	ins    BYTE PTR es:[rdi],dx
   14001b8ce:	add    BYTE PTR [rax],al
   14001b8d0:	push   rbx
   14001b8d1:	imul   ebp,DWORD PTR [rsi+0x67],0x72616c75
	...
   14001b8e0:	push   rbp
   14001b8e1:	outs   dx,BYTE PTR ds:[rsi]
   14001b8e2:	imul   esi,DWORD PTR [rcx+0x75],0x6f462065
   14001b8e9:	jb     0x14001b958
   14001b8eb:	add    BYTE PTR [rax],al
   14001b8ed:	add    BYTE PTR [rax],al
   14001b8ef:	add    BYTE PTR [rdx+0x61],ah
   14001b8f2:	and    BYTE PTR fs:[rcx+0x6c],ah
   14001b8f6:	ins    BYTE PTR es:[rdi],dx
   14001b8f7:	outs   dx,DWORD PTR ds:[rsi]
   14001b8f8:	movsxd esp,DWORD PTR [rcx+0x74]
   14001b8fb:	imul   ebp,DWORD PTR [rdi+0x6e],0xb8e00000
   14001b902:	add    DWORD PTR [rax+0x1],eax
	...
   14001b90d:	add    BYTE PTR [rax],al
   14001b90f:	add    al,dl
   14001b911:	mov    eax,0x14001
   14001b916:	add    BYTE PTR [rax],al
   14001b918:	enter  0x1b8,0x40
   14001b91c:	add    DWORD PTR [rax],eax
	...
   14001b926:	add    BYTE PTR [rax],al
   14001b928:	sar    BYTE PTR [rax+0x14001],1
   14001b92e:	add    BYTE PTR [rax],al
   14001b930:	enter  0x1b8,0x40
   14001b934:	add    DWORD PTR [rax],eax
	...
   14001b93e:	add    BYTE PTR [rax],al
   14001b940:	sar    BYTE PTR [rax+0x14001],1
   14001b946:	add    BYTE PTR [rax],al
   14001b948:	enter  0x1b8,0x40
   14001b94c:	add    DWORD PTR [rax],eax
   14001b94e:	add    BYTE PTR [rax],al
   14001b950:	sar    BYTE PTR [rax+0x14001],0x0
	...
   14001b95f:	add    al,dl
   14001b961:	mov    eax,0x14001
   14001b966:	add    BYTE PTR [rax],al
   14001b968:	mov    eax,0x14001b8
   14001b96d:	add    BYTE PTR [rax],al
   14001b96f:	add    al,cl
   14001b971:	mov    eax,0x14001
	...
   14001b97e:	add    BYTE PTR [rax],al
   14001b980:	sar    BYTE PTR [rax+0x14001],1
   14001b986:	add    BYTE PTR [rax],al
   14001b988:	mov    eax,0x14001b8
   14001b98d:	add    BYTE PTR [rax],al
   14001b98f:	add    al,cl
   14001b991:	mov    eax,0x14001
	...
   14001b99e:	add    BYTE PTR [rax],al
   14001b9a0:	sar    BYTE PTR [rax+0x14001],1
   14001b9a6:	add    BYTE PTR [rax],al
   14001b9a8:	mov    eax,0x14001b8
   14001b9ad:	add    BYTE PTR [rax],al
   14001b9af:	add    al,cl
   14001b9b1:	mov    eax,0x14001
	...
   14001b9be:	add    BYTE PTR [rax],al
   14001b9c0:	sar    BYTE PTR [rax+0x14001],1
   14001b9c6:	add    BYTE PTR [rax],al
   14001b9c8:	mov    eax,0x14001b8
   14001b9cd:	add    BYTE PTR [rax],al
   14001b9cf:	add    al,cl
   14001b9d1:	mov    eax,0x14001
	...
   14001b9de:	add    BYTE PTR [rax],al
   14001b9e0:	sar    BYTE PTR [rax+0x14001],1
   14001b9e6:	add    BYTE PTR [rax],al
   14001b9e8:	mov    eax,0x14001b8
   14001b9ed:	add    BYTE PTR [rax],al
   14001b9ef:	add    al,cl
   14001b9f1:	mov    eax,0x14001
	...
   14001b9fe:	add    BYTE PTR [rax],al
   14001ba00:	sar    BYTE PTR [rax+0x14001],1
   14001ba06:	add    BYTE PTR [rax],al
   14001ba08:	mov    eax,0x14001b8
   14001ba0d:	add    BYTE PTR [rax],al
   14001ba0f:	add    al,cl
   14001ba11:	mov    eax,0x14001
	...
   14001ba1e:	add    BYTE PTR [rax],al
   14001ba20:	sar    BYTE PTR [rax+0x14001],1
   14001ba26:	add    BYTE PTR [rax],al
   14001ba28:	mov    al,0xb8
   14001ba2a:	add    DWORD PTR [rax+0x1],eax
   14001ba2d:	add    BYTE PTR [rax],al
   14001ba2f:	add    al,cl
   14001ba31:	mov    eax,0x14001
	...
   14001ba3e:	add    BYTE PTR [rax],al
   14001ba40:	sar    BYTE PTR [rax+0x14001],1
   14001ba46:	add    BYTE PTR [rax],al
   14001ba48:	cwde   
   14001ba49:	mov    eax,0x14001
   14001ba4e:	add    BYTE PTR [rax],al
   14001ba50:	enter  0x1b8,0x40
   14001ba54:	add    DWORD PTR [rax],eax
	...
   14001ba5e:	add    BYTE PTR [rax],al
   14001ba60:	sar    BYTE PTR [rax+0x14001],1
   14001ba66:	add    BYTE PTR [rax],al
   14001ba68:	mov    eax,0x14001b8
   14001ba6d:	add    BYTE PTR [rax],al
   14001ba6f:	add    BYTE PTR [rax+0x14001b8],dl
   14001ba75:	add    BYTE PTR [rax],al
   14001ba77:	add    al,cl
   14001ba79:	mov    eax,0x14001
	...
   14001ba86:	add    BYTE PTR [rax],al
   14001ba88:	sar    BYTE PTR [rax+0x14001],1
   14001ba8e:	add    BYTE PTR [rax],al
   14001ba90:	js     0x14001ba4a
   14001ba92:	add    DWORD PTR [rax+0x1],eax
   14001ba95:	add    BYTE PTR [rax],al
   14001ba97:	add    BYTE PTR [rax-0x48],bl
   14001ba9a:	add    DWORD PTR [rax+0x1],eax
   14001ba9d:	add    BYTE PTR [rax],al
   14001ba9f:	add    al,cl
   14001baa1:	mov    eax,0x14001
	...
   14001baae:	add    BYTE PTR [rax],al
   14001bab0:	sar    BYTE PTR [rax+0x14001],0x0
   14001bab7:	add    al,dl
   14001bab9:	mov    eax,0x14001
   14001babe:	add    BYTE PTR [rax],al
   14001bac0:	mov    eax,0x14001b8
   14001bac5:	add    BYTE PTR [rax],al
   14001bac7:	add    BYTE PTR [rax-0x48],dl
   14001baca:	add    DWORD PTR [rax+0x1],eax
   14001bacd:	add    BYTE PTR [rax],al
   14001bacf:	add    al,cl
   14001bad1:	mov    eax,0x14001
	...
   14001bade:	add    BYTE PTR [rax],al
   14001bae0:	sar    BYTE PTR [rax+0x14001],0x0
   14001bae7:	add    al,dl
   14001bae9:	mov    eax,0x14001
   14001baee:	add    BYTE PTR [rax],al
   14001baf0:	mov    eax,0x14001b8
   14001baf5:	add    BYTE PTR [rax],al
   14001baf7:	add    BYTE PTR [rax-0x48],al
   14001bafa:	add    DWORD PTR [rax+0x1],eax
   14001bafd:	add    BYTE PTR [rax],al
   14001baff:	add    al,cl
   14001bb01:	mov    eax,0x14001
   14001bb06:	add    BYTE PTR [rax],al
   14001bb08:	and    BYTE PTR [rax+0x14001],bh
	...
   14001bb16:	add    BYTE PTR [rax],al
   14001bb18:	adc    eax,DWORD PTR [rax]
   14001bb1a:	add    BYTE PTR [rax],al
   14001bb1c:	and    eax,0x5b000000
   14001bb21:	add    BYTE PTR [rax],al
   14001bb23:	add    BYTE PTR [rdx+0x0],bh
   14001bb26:	add    BYTE PTR [rax],al
   14001bb28:	add    DWORD PTR [rax],eax
   14001bb2a:	add    BYTE PTR [rax],al
   14001bb2c:	add    BYTE PTR [rax],al
   14001bb2e:	add    BYTE PTR [rax],al
   14001bb30:	add    eax,DWORD PTR [rax]
   14001bb32:	add    BYTE PTR [rax],al
   14001bb34:	or     DWORD PTR [rax],eax
   14001bb36:	add    BYTE PTR [rax],al
   14001bb38:	adc    BYTE PTR [rax],al
   14001bb3a:	add    BYTE PTR [rax],al
   14001bb3c:	adc    al,BYTE PTR [rax]
   14001bb3e:	add    BYTE PTR [rax],al
   14001bb40:	adc    eax,0x19000000
   14001bb45:	add    BYTE PTR [rax],al
   14001bb47:	add    BYTE PTR [rbx],ah
   14001bb49:	add    BYTE PTR [rax],al
   14001bb4b:	add    BYTE PTR [rip+0x32000000],ch        # 0x17201bb51
   14001bb51:	add    BYTE PTR [rax],al
   14001bb53:	add    BYTE PTR [rax+rax*1],dh
   14001bb56:	add    BYTE PTR [rax],al
   14001bb58:	cmp    eax,DWORD PTR [rax]
   14001bb5a:	add    BYTE PTR [rax],al
   14001bb5c:	cmp    al,0x0
   14001bb5e:	add    BYTE PTR [rax],al
   14001bb60:	rex.X add BYTE PTR [rax],al
   14001bb63:	add    BYTE PTR [rax+rax*1+0x0],cl
   14001bb67:	add    BYTE PTR [rbx+0x0],dl
   14001bb6a:	add    BYTE PTR [rax],al
   14001bb6c:	pop    rcx
   14001bb6d:	add    BYTE PTR [rax],al
   14001bb6f:	add    BYTE PTR [rax+0x0],dh
   14001bb72:	add    BYTE PTR [rax],al
   14001bb74:	js     0x14001bb76
   14001bb76:	add    BYTE PTR [rax],al
   14001bb78:	jns    0x14001bb7a
   14001bb7a:	add    BYTE PTR [rax],al
   14001bb7c:	test   BYTE PTR [rax],al
   14001bb7e:	add    BYTE PTR [rax],al
   14001bb80:	mov    al,BYTE PTR [rax]
   14001bb82:	add    BYTE PTR [rax],al
   14001bb84:	mov    eax,DWORD PTR [rax]
   14001bb86:	add    BYTE PTR [rax],al
   14001bb88:	add    DWORD PTR [rax],eax
   14001bb8a:	add    BYTE PTR [rax],al
   14001bb8c:	add    BYTE PTR [rax],al
   14001bb8e:	add    BYTE PTR [rax],al
   14001bb90:	add    al,BYTE PTR [rax]
   14001bb92:	add    BYTE PTR [rax],al
   14001bb94:	add    al,0x0
   14001bb96:	add    BYTE PTR [rax],al
   14001bb98:	add    eax,0x6000000
   14001bb9d:	add    BYTE PTR [rax],al
   14001bb9f:	add    BYTE PTR [rdi],al
   14001bba1:	add    BYTE PTR [rax],al
   14001bba3:	add    BYTE PTR [rdx],cl
   14001bba5:	add    BYTE PTR [rax],al
   14001bba7:	add    BYTE PTR [rbx],cl
   14001bba9:	add    BYTE PTR [rax],al
   14001bbab:	add    BYTE PTR [rax+rax*1],cl
   14001bbae:	add    BYTE PTR [rax],al
   14001bbb0:	or     eax,0xe000000
   14001bbb5:	add    BYTE PTR [rax],al
   14001bbb7:	add    BYTE PTR [rdi],cl
   14001bbb9:	add    BYTE PTR [rax],al
   14001bbbb:	add    BYTE PTR [rcx],dl
   14001bbbd:	add    BYTE PTR [rax],al
   14001bbbf:	add    BYTE PTR [rax+rax*1],dl
   14001bbc2:	add    BYTE PTR [rax],al
   14001bbc4:	(bad)  
   14001bbc5:	add    BYTE PTR [rax],al
   14001bbc7:	add    BYTE PTR [rax],bl
   14001bbc9:	add    BYTE PTR [rax],al
   14001bbcb:	add    BYTE PTR [rcx+0x1a000000],dl
   14001bbd1:	add    BYTE PTR [rax],al
   14001bbd3:	add    BYTE PTR [rip+0x1e000000],bl        # 0x15e01bbd9
   14001bbd9:	add    BYTE PTR [rax],al
   14001bbdb:	add    BYTE PTR [rdi],bl
   14001bbdd:	add    BYTE PTR [rax],al
   14001bbdf:	add    BYTE PTR [rax],ah
   14001bbe1:	add    BYTE PTR [rax],al
   14001bbe3:	add    BYTE PTR [rcx],ah
   14001bbe5:	add    BYTE PTR [rax],al
   14001bbe7:	add    BYTE PTR [rdx],ah
   14001bbe9:	add    BYTE PTR [rax],al
   14001bbeb:	add    BYTE PTR [rax+rax*1],ah
   14001bbee:	add    BYTE PTR [rax],al
   14001bbf0:	add    BYTE PTR es:[rax],al
   14001bbf3:	add    BYTE PTR [rax],ch
   14001bbf5:	add    BYTE PTR [rax],al
   14001bbf7:	add    BYTE PTR [rcx],ch
   14001bbf9:	add    BYTE PTR [rax],al
   14001bbfb:	add    BYTE PTR [rdx],ch
   14001bbfd:	add    BYTE PTR [rax],al
   14001bbff:	add    BYTE PTR [rbx],ch
   14001bc01:	add    BYTE PTR [rax],al
   14001bc03:	add    BYTE PTR [rax+rax*1],ch
   14001bc06:	add    BYTE PTR [rax],al
   14001bc08:	add    BYTE PTR cs:[rax],al
   14001bc0b:	add    BYTE PTR [rdi],ch
   14001bc0d:	add    BYTE PTR [rax],al
   14001bc0f:	add    BYTE PTR [rax],dh
   14001bc11:	add    BYTE PTR [rax],al
   14001bc13:	add    BYTE PTR [rcx],dh
   14001bc15:	add    BYTE PTR [rax],al
   14001bc17:	add    BYTE PTR [rbx],dh
   14001bc19:	add    BYTE PTR [rax],al
   14001bc1b:	add    BYTE PTR [rip+0x36000000],dh        # 0x17601bc21
   14001bc21:	add    BYTE PTR [rax],al
   14001bc23:	add    BYTE PTR [rdx],bh
   14001bc25:	add    BYTE PTR [rax],al
   14001bc27:	add    BYTE PTR [rip+0x3e000000],bh        # 0x17e01bc2d
   14001bc2d:	add    BYTE PTR [rax],al
   14001bc2f:	add    BYTE PTR [rdi],bh
   14001bc31:	add    BYTE PTR [rax],al
   14001bc33:	add    BYTE PTR [rax+0x0],al
   14001bc36:	add    BYTE PTR [rax],al
   14001bc38:	add    BYTE PTR [r8],al
   14001bc3b:	add    BYTE PTR [rbx+0x0],al
   14001bc3e:	add    BYTE PTR [rax],al
   14001bc40:	add    BYTE PTR [rax],r8b
   14001bc43:	add    BYTE PTR [rbp+0x0],al
   14001bc46:	add    BYTE PTR [rax],al
   14001bc48:	rex.RX add BYTE PTR [rax],r8b
   14001bc4b:	add    BYTE PTR [rax+0x0],cl
   14001bc4e:	add    BYTE PTR [rax],al
   14001bc50:	rex.WXB add BYTE PTR [r8],al
   14001bc53:	add    BYTE PTR [rbp+0x0],cl
   14001bc56:	add    BYTE PTR [rax],al
   14001bc58:	push   rax
   14001bc59:	add    BYTE PTR [rax],al
   14001bc5b:	add    BYTE PTR [rdx+0x0],dl
   14001bc5e:	add    BYTE PTR [rax],al
   14001bc60:	push   rsp
   14001bc61:	add    BYTE PTR [rax],al
   14001bc63:	add    BYTE PTR [rbp+0x0],dl
   14001bc66:	add    BYTE PTR [rax],al
   14001bc68:	lea    eax,[rax]
   14001bc6a:	add    BYTE PTR [rax],al
   14001bc6c:	push   rsi
   14001bc6d:	add    BYTE PTR [rax],al
   14001bc6f:	add    BYTE PTR [rdi+0x0],dl
   14001bc72:	add    BYTE PTR [rax],al
   14001bc74:	pop    rax
   14001bc75:	add    BYTE PTR [rax],al
   14001bc77:	add    BYTE PTR [rbx+0x0],bl
   14001bc7a:	add    BYTE PTR [rax],al
   14001bc7c:	pop    rsp
   14001bc7d:	add    BYTE PTR [rax],al
   14001bc7f:	add    BYTE PTR [rbp+0x0],bl
   14001bc82:	add    BYTE PTR [rax],al
   14001bc84:	pop    rsi
   14001bc85:	add    BYTE PTR [rax],al
   14001bc87:	add    BYTE PTR [rsi+0x0],ah
   14001bc8a:	add    BYTE PTR [rax],al
   14001bc8c:	add    BYTE PTR [eax],al
   14001bc8f:	add    BYTE PTR [rax+0x0],ch
   14001bc92:	add    BYTE PTR [rax],al
   14001bc94:	imul   eax,DWORD PTR [rax],0x6a0000
   14001bc9a:	add    BYTE PTR [rax],al
   14001bc9c:	imul   eax,DWORD PTR [rax],0x0
   14001bc9f:	add    BYTE PTR [rsi+0x0],ch
   14001bca2:	add    BYTE PTR [rax],al
   14001bca4:	outs   dx,DWORD PTR ds:[rsi]
   14001bca5:	add    BYTE PTR [rax],al
   14001bca7:	add    BYTE PTR [rcx+0x0],dh
   14001bcaa:	add    BYTE PTR [rax],al
   14001bcac:	jb     0x14001bcae
   14001bcae:	add    BYTE PTR [rax],al
   14001bcb0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bcb1:	add    BYTE PTR [rax],al
   14001bcb3:	add    BYTE PTR [rax+rax*1+0x0],dh
   14001bcb7:	add    BYTE PTR [rbp+0x0],dh
   14001bcba:	add    BYTE PTR [rax],al
   14001bcbc:	jbe    0x14001bcbe
   14001bcbe:	add    BYTE PTR [rax],al
   14001bcc0:	ja     0x14001bcc2
   14001bcc2:	add    BYTE PTR [rax],al
   14001bcc4:	jnp    0x14001bcc6
   14001bcc6:	add    BYTE PTR [rax],al
   14001bcc8:	jl     0x14001bcca
   14001bcca:	add    BYTE PTR [rax],al
   14001bccc:	jge    0x14001bcce
   14001bcce:	add    BYTE PTR [rax],al
   14001bcd0:	jle    0x14001bcd2
   14001bcd2:	add    BYTE PTR [rax],al
   14001bcd4:	xchg   edx,eax
   14001bcd5:	add    BYTE PTR [rax],al
   14001bcd7:	add    BYTE PTR [rax-0x7d000000],al
   14001bcdd:	add    BYTE PTR [rax],al
   14001bcdf:	add    BYTE PTR [rbp-0x79000000],al
   14001bce5:	add    BYTE PTR [rax],al
   14001bce7:	add    BYTE PTR [rax-0x77000000],cl
   14001bced:	add    BYTE PTR [rax],al
   14001bcef:	add    BYTE PTR [rax+rax*1+0x10000],cl
   14001bcf6:	add    BYTE PTR [rax],al
   14001bcf8:	rex.RXB add BYTE PTR [r8],r8b
   14001bcfb:	add    BYTE PTR [rcx],al
   14001bcfd:	add    BYTE PTR [rax],al
   14001bcff:	add    BYTE PTR [rdi+0x27000000],cl
   14001bd05:	add    BYTE PTR [rax],al
   14001bd07:	add    BYTE PTR [rdi],dh
   14001bd09:	add    BYTE PTR [rax],al
   14001bd0b:	add    BYTE PTR [rax],bh
   14001bd0d:	add    BYTE PTR [rax],al
   14001bd0f:	add    BYTE PTR [rcx],bh
   14001bd11:	add    BYTE PTR [rax],al
   14001bd13:	add    BYTE PTR [rax+0x4f000000],dl
   14001bd19:	add    BYTE PTR [rax],al
   14001bd1b:	add    BYTE PTR [rcx+0x0],ah
   14001bd1e:	add    BYTE PTR [rax],al
   14001bd20:	movsxd eax,DWORD PTR [rax]
   14001bd22:	add    BYTE PTR [rax],al
   14001bd24:	add    DWORD PTR [rax],eax
   14001bd26:	add    BYTE PTR [rax],al
   14001bd28:	sbb    al,0x0
   14001bd2a:	add    BYTE PTR [rax],al
   14001bd2c:	add    DWORD PTR [rax],eax
   14001bd2e:	add    BYTE PTR [rax],al
   14001bd30:	ins    BYTE PTR es:[rdi],dx
   14001bd31:	add    BYTE PTR [rax],al
   14001bd33:	add    BYTE PTR [rcx],al
   14001bd35:	add    BYTE PTR [rax],al
   14001bd37:	add    BYTE PTR [rdx+0x0],cl
   14001bd3a:	add    BYTE PTR [rax],al
   14001bd3c:	add    DWORD PTR [rax],eax
   14001bd3e:	add    BYTE PTR [rax],al
   14001bd40:	rex.WB add BYTE PTR [r8],al
   14001bd43:	add    BYTE PTR [rcx],al
   14001bd45:	add    BYTE PTR [rax],al
   14001bd47:	add    BYTE PTR [rsi+0x16000000],cl
   14001bd4d:	add    BYTE PTR [rax],al
   14001bd4f:	add    BYTE PTR [rbx],bl
   14001bd51:	add    BYTE PTR [rax],al
   14001bd53:	add    BYTE PTR [rax+0x0],ah
   14001bd56:	add    BYTE PTR [rax],al
   14001bd58:	add    BYTE PTR fs:[rax],al
   14001bd5b:	add    BYTE PTR [rax+rax*1+0x0],ah
   14001bd5f:	add    BYTE PTR [rcx+0x1000000],al
   14001bd65:	add    BYTE PTR [rax],al
   14001bd67:	add    BYTE PTR [rdx+0x0],bl
   14001bd6a:	add    BYTE PTR [rax],al
   14001bd6c:	add    DWORD PTR [rax],eax
   14001bd6e:	add    BYTE PTR [rax],al
   14001bd70:	pop    rdi
   14001bd71:	add    BYTE PTR [rax],al
   14001bd73:	add    BYTE PTR [rdi+0x0],bl
   14001bd76:	add    BYTE PTR [rax],al
   14001bd78:	add    DWORD PTR [rax],eax
   14001bd7a:	add    BYTE PTR [rax],al
   14001bd7c:	add    BYTE PTR [rax],al
   14001bd7e:	add    BYTE PTR [rax],al
   14001bd80:	ins    DWORD PTR es:[rdi],dx
   14001bd81:	add    BYTE PTR [rax],al
   14001bd83:	add    BYTE PTR [rcx],al
   14001bd85:	add    BYTE PTR [rax],al
   14001bd87:	add    BYTE PTR [rsi+0x0],cl
   14001bd8a:	add    BYTE PTR [rax],al
   14001bd8c:	add    DWORD PTR [rax],eax
   14001bd8e:	add    BYTE PTR [rax],al
   14001bd90:	xchg   BYTE PTR [rax],al
   14001bd92:	add    BYTE PTR [rax],al
   14001bd94:	add    DWORD PTR [rax],eax
   14001bd96:	add    BYTE PTR [rax],al
   14001bd98:	or     BYTE PTR [rax],al
   14001bd9a:	add    BYTE PTR [rax],al
   14001bd9c:	add    DWORD PTR [rax],eax
	...
   14001bda6:	add    BYTE PTR [rax],al
   14001bda8:	(bad)  
   14001bda9:	add    BYTE PTR [rax],al
   14001bdab:	add    BYTE PTR [rax],al
   14001bdad:	add    BYTE PTR [rax],al
   14001bdaf:	add    BYTE PTR [rdx+rdx*2+0x41],dl
   14001bdb3:	rex.WRX push rbx
   14001bdb5:	rex.WR
   14001bdb6:	push   r12
   14001bdb8:	rex.WRXB push r10
   14001bdba:	and    BYTE PTR [rax],al
   14001bdbc:	add    BYTE PTR [rax],al
   14001bdbe:	add    BYTE PTR [rax],al
   14001bdc0:	and    al,BYTE PTR [rip+0x41993]        # 0x14005d759
   14001bdc6:	add    BYTE PTR [rax],al
   14001bdc8:	sbb    BYTE PTR [rbx],dl
   14001bdca:	add    al,BYTE PTR [rax]
	...
   14001bdd4:	(bad)  
   14001bdd5:	add    BYTE PTR [rax],al
   14001bdd7:	add    BYTE PTR [rax],bh
   14001bdd9:	adc    eax,DWORD PTR [rdx]
   14001bddb:	add    BYTE PTR [rax],ah
   14001bddd:	add    BYTE PTR [rax],al
   14001bddf:	add    BYTE PTR [rax],al
   14001bde1:	add    BYTE PTR [rax],al
   14001bde3:	add    BYTE PTR [rcx],al
	...
   14001bded:	add    BYTE PTR [rax],al
   14001bdef:	add    al,cl
   14001bdf1:	adc    BYTE PTR [rdx],al
   14001bdf3:	rex add DWORD PTR [rax],eax
   14001bdf6:	add    BYTE PTR [rax],al
   14001bdf8:	push   rax
   14001bdf9:	adc    al,0x0
   14001bdfb:	rex add DWORD PTR [rax],eax
   14001bdfe:	add    BYTE PTR [rax],al
   14001be00:	mov    al,0x3e
   14001be02:	add    DWORD PTR [rax+0x1],eax
   14001be05:	add    BYTE PTR [rax],al
   14001be07:	add    BYTE PTR [rsi+0x140013e],dh
   14001be0d:	add    BYTE PTR [rax],al
   14001be0f:	add    BYTE PTR [rsi+rdi*1+0x14001],bh
   14001be16:	add    BYTE PTR [rax],al
   14001be18:	nop
   14001be19:	adc    al,0x0
   14001be1b:	rex add DWORD PTR [rax],eax
   14001be1e:	add    BYTE PTR [rax],al
   14001be20:	movabs al,ds:0x2000000001400210
   14001be29:	adc    al,0x0
   14001be2b:	rex add DWORD PTR [rax],eax
   14001be2e:	add    BYTE PTR [rax],al
   14001be30:	xchg   BYTE PTR [rsi],bh
   14001be32:	add    DWORD PTR [rax+0x1],eax
   14001be35:	add    BYTE PTR [rax],al
   14001be37:	add    BYTE PTR [rsi+rdi*1+0x14001],cl
   14001be3e:	add    BYTE PTR [rax],al
   14001be40:	xchg   edx,eax
   14001be41:	add    DWORD PTR ds:[rax+0x1],eax
   14001be45:	add    BYTE PTR [rax],al
   14001be47:	add    BYTE PTR [rax+0x140013e],bl
   14001be4d:	add    BYTE PTR [rax],al
   14001be4f:	add    BYTE PTR [rsi+0x140013e],bl
   14001be55:	add    BYTE PTR [rax],al
   14001be57:	add    BYTE PTR [rsi+rdi*1+0x14001],ah
   14001be5e:	add    BYTE PTR [rax],al
   14001be60:	stos   BYTE PTR es:[rdi],al
   14001be61:	add    DWORD PTR ds:[rax+0x1],eax
   14001be65:	add    BYTE PTR [rax],al
   14001be67:	add    BYTE PTR [rax+0x14],ah
   14001be6a:	add    BYTE PTR [rax+0x1],al
   14001be6d:	add    BYTE PTR [rax],al
   14001be6f:	add    BYTE PTR [rax+0x10],bh
   14001be72:	add    al,BYTE PTR [rax+0x1]
   14001be75:	add    BYTE PTR [rax],al
   14001be77:	add    BYTE PTR [rax+0x1400014],ah
   14001be7d:	add    BYTE PTR [rax],al
   14001be7f:	add    BYTE PTR [rax+0x140013e],al
   14001be85:	add    BYTE PTR [rax],al
   14001be87:	add    BYTE PTR [rax],dh
   14001be89:	adc    al,0x0
   14001be8b:	rex add DWORD PTR [rax],eax
   14001be8e:	add    BYTE PTR [rax],al
   14001be90:	push   rax
   14001be91:	adc    BYTE PTR [rdx],al
   14001be93:	rex add DWORD PTR [rax],eax
   14001be96:	add    BYTE PTR [rax],al
   14001be98:	jo     0x14001beae
   14001be9a:	add    BYTE PTR [rax+0x1],al
   14001be9d:	add    BYTE PTR [rax],al
   14001be9f:	add    BYTE PTR [rsi+rdi*1+0x1],dh
   14001bea3:	rex add DWORD PTR [rax],eax
   14001bea6:	add    BYTE PTR [rax],al
   14001bea8:	jp     0x14001bee8
   14001beaa:	add    DWORD PTR [rax+0x1],eax
   14001bead:	add    BYTE PTR [rax],al
   14001beaf:	add    BYTE PTR [rax],dl
   14001beb1:	adc    al,0x0
   14001beb3:	rex add DWORD PTR [rax],eax
   14001beb6:	add    BYTE PTR [rax],al
   14001beb8:	sub    BYTE PTR [rax],dl
   14001beba:	add    al,BYTE PTR [rax+0x1]
   14001bebd:	add    BYTE PTR [rax],al
   14001bebf:	add    BYTE PTR [rax+0x14],al
   14001bec2:	add    BYTE PTR [rax+0x1],al
   14001bec5:	add    BYTE PTR [rax],al
   14001bec7:	add    BYTE PTR [rax+0x3e],ch
   14001beca:	add    DWORD PTR [rax+0x1],eax
   14001becd:	add    BYTE PTR [rax],al
   14001becf:	add    BYTE PTR [rsi+0x3e],ch
   14001bed2:	add    DWORD PTR [rax+0x1],eax
   14001bed5:	add    BYTE PTR [rax],al
   14001bed7:	add    BYTE PTR [rax+0x1400011],ah
   14001bedd:	add    BYTE PTR [rax],al
   14001bedf:	add    BYTE PTR [rax+0x1400014],al
	...
   14001beed:	add    BYTE PTR [rax],al
   14001beef:	add    BYTE PTR [rax+0xc],dl
   14001bef2:	add    al,BYTE PTR [rax+0x1]
   14001bef5:	add    BYTE PTR [rax],al
   14001bef7:	add    BYTE PTR [rax+0x1400023],al
   14001befd:	add    BYTE PTR [rax],al
   14001beff:	add    BYTE PTR [rax+0x11],dh
   14001bf02:	add    BYTE PTR [rax+0x1],al
   14001bf05:	add    BYTE PTR [rax],al
   14001bf07:	add    BYTE PTR [rax],bh
   14001bf09:	add    DWORD PTR ds:[rax+0x1],eax
   14001bf0d:	add    BYTE PTR [rax],al
   14001bf0f:	add    BYTE PTR [rsi],bh
   14001bf11:	add    DWORD PTR ds:[rax+0x1],eax
   14001bf15:	add    BYTE PTR [rax],al
   14001bf17:	add    BYTE PTR [rsi+rdi*1+0x1],al
   14001bf1b:	rex add DWORD PTR [rax],eax
   14001bf1e:	add    BYTE PTR [rax],al
   14001bf20:	rex.WX
   14001bf21:	add    DWORD PTR ds:[rax+0x1],eax
   14001bf25:	add    BYTE PTR [rax],al
   14001bf27:	add    BYTE PTR [rax],dl
   14001bf29:	add    BYTE PTR cs:[rax+0x1],al
   14001bf2d:	add    BYTE PTR [rax],al
   14001bf2f:	add    al,dl
   14001bf31:	xor    DWORD PTR [rax],eax
   14001bf33:	rex add DWORD PTR [rax],eax
   14001bf36:	add    BYTE PTR [rax],al
   14001bf38:	adc    BYTE PTR [rcx],0x0
   14001bf3b:	rex add DWORD PTR [rax],eax
   14001bf3e:	add    BYTE PTR [rax],al
   14001bf40:	push   rax
   14001bf41:	add    DWORD PTR ds:[rax+0x1],eax
   14001bf45:	add    BYTE PTR [rax],al
   14001bf47:	add    BYTE PTR [rsi+0x3e],dl
   14001bf4a:	add    DWORD PTR [rax+0x1],eax
   14001bf4d:	add    BYTE PTR [rax],al
   14001bf4f:	add    BYTE PTR [rsi+rdi*1+0x1],bl
   14001bf53:	rex add DWORD PTR [rax],eax
   14001bf56:	add    BYTE PTR [rax],al
   14001bf58:	(bad)  
   14001bf59:	add    DWORD PTR ds:[rax+0x1],eax
   14001bf5d:	add    BYTE PTR [rax],al
   14001bf5f:	add    BYTE PTR [rdx],ah
   14001bf61:	add    eax,0x41993
   14001bf66:	add    BYTE PTR [rax],al
   14001bf68:	adc    BYTE PTR [rbx],0x2
	...
   14001bf73:	add    BYTE PTR [rcx],cl
   14001bf75:	add    BYTE PTR [rax],al
   14001bf77:	add    BYTE PTR [rax+0x38000213],ah
   14001bf7d:	add    BYTE PTR [rax],al
   14001bf7f:	add    BYTE PTR [rax],al
   14001bf81:	add    BYTE PTR [rax],al
   14001bf83:	add    BYTE PTR [rcx],al
   14001bf85:	add    BYTE PTR [rax],al
   14001bf87:	add    BYTE PTR [rax+0x4d],bl
   14001bf8a:	rex.WR and BYTE PTR [rbp+0x72],r12b
   14001bf8e:	jb     0x14001bfff
   14001bf90:	jb     0x14001bfcc
   14001bf92:	and    BYTE PTR [rip+0xa73],ah        # 0x14001ca0b
   14001bf98:	push   rax
   14001bf99:	(bad)  
   14001bf9a:	jb     0x14001c00f
   14001bf9c:	and    BYTE PTR gs:[rbp+0x72],ah
   14001bfa0:	jb     0x14001c011
   14001bfa2:	jb     0x14001bfc4
   14001bfa4:	(bad)  
   14001bfa5:	je     0x14001bfc7
   14001bfa7:	ins    BYTE PTR es:[rdi],dx
   14001bfa8:	imul   ebp,DWORD PTR [rsi+0x65],0x2c642520
   14001bfaf:	and    BYTE PTR [rbx+0x6f],ah
   14001bfb2:	ins    BYTE PTR es:[rdi],dx
   14001bfb3:	jne    0x14001c022
   14001bfb5:	outs   dx,BYTE PTR ds:[rsi]
   14001bfb6:	and    BYTE PTR [rip+0x25282064],ah        # 0x16529e020
   14001bfbc:	jae    0x14001bfe7
   14001bfbe:	add    BYTE PTR cs:[rdx],ah
   14001bfc1:	add    eax,0x41993
   14001bfc6:	add    BYTE PTR [rax],al
   14001bfc8:	cwde   
   14001bfc9:	push   rax
   14001bfca:	add    al,BYTE PTR [rax]
   14001bfcc:	add    al,BYTE PTR [rax]
   14001bfce:	add    BYTE PTR [rax],al
   14001bfd0:	adc    BYTE PTR [rdx+rax*1],dl
   14001bfd3:	add    BYTE PTR [rcx],cl
   14001bfd5:	add    BYTE PTR [rax],al
   14001bfd7:	add    BYTE PTR [rax+0x14],ah
   14001bfda:	add    al,BYTE PTR [rax]
   14001bfdc:	cmp    BYTE PTR [rax],al
   14001bfde:	add    BYTE PTR [rax],al
   14001bfe0:	add    BYTE PTR [rax],al
   14001bfe2:	add    BYTE PTR [rax],al
   14001bfe4:	add    DWORD PTR [rax],eax
	...
   14001bfee:	add    BYTE PTR [rax],al
   14001bff0:	and    al,BYTE PTR [rip+0x81993]        # 0x14009d989
   14001bff6:	add    BYTE PTR [rax],al
   14001bff8:	loopne 0x14001c00e
   14001bffa:	add    al,BYTE PTR [rax]
	...
   14001c004:	(bad)  
   14001c005:	add    BYTE PTR [rax],al
   14001c007:	add    BYTE PTR [rax],ah
   14001c009:	adc    eax,0x980002
   14001c00e:	add    BYTE PTR [rax],al
   14001c010:	add    BYTE PTR [rax],al
   14001c012:	add    BYTE PTR [rax],al
   14001c014:	add    DWORD PTR [rax],eax
   14001c016:	add    BYTE PTR [rax],al
   14001c018:	je     0x14001c08c
   14001c01a:	(bad)  
   14001c01b:	outs   dx,BYTE PTR ds:[rsi]
   14001c01c:	jae    0x14001c08a
   14001c01e:	(bad)  
   14001c01f:	je     0x14001c086
   14001c021:	add    BYTE PTR [rax],al
   14001c023:	add    BYTE PTR [rax],al
   14001c025:	add    BYTE PTR [rax],al
   14001c027:	add    BYTE PTR [rdi+0x74],bl
   14001c02a:	jb     0x14001c081
   14001c02c:	je     0x14001c094
   14001c02e:	cmp    BYTE PTR [rax],al
   14001c030:	pop    rdi
   14001c031:	je     0x14001c0a5
   14001c033:	add    BYTE PTR [rax],al
   14001c035:	add    BYTE PTR [rax],al
   14001c037:	add    BYTE PTR [rdx+0x61],dh
   14001c03a:	outs   dx,BYTE PTR ds:[rsi]
   14001c03b:	jae    0x14001c0a9
   14001c03d:	(bad)  
   14001c03e:	je     0x14001c0a5
   14001c040:	add    BYTE PTR [rax],al
   14001c042:	add    BYTE PTR [rax],al
   14001c044:	jb     0x14001c09b
   14001c046:	je     0x14001c0ae
   14001c048:	cmp    BYTE PTR [rax],al
   14001c04a:	add    BYTE PTR [rax],al
   14001c04c:	jb     0x14001c04e
   14001c04e:	add    BYTE PTR [rax],al
   14001c050:	imul   ebp,DWORD PTR [rsi+0x64],0x7373654d
   14001c057:	(bad)  
   14001c058:	add    BYTE PTR gs:[eax],al
   14001c05c:	ins    BYTE PTR es:[rdi],dx
   14001c05d:	(bad)  
   14001c05e:	jae    0x14001c0d3
	...
   14001c068:	push   rsp
   14001c069:	pop    rdi
   14001c06a:	push   rsp
   14001c06b:	push   rdx
   14001c06c:	rex.B
   14001c06d:	rex.WRX push rbx
   14001c06f:	rex.WR
   14001c070:	push   r12
   14001c072:	rex.RB pop r15
   14001c074:	rex.WRX
   14001c075:	rex.WRXB
   14001c076:	rex.WRXB push r8
	...
   14001c080:	push   rsp
   14001c081:	pop    rdi
   14001c082:	push   rsp
   14001c083:	push   rdx
   14001c084:	pop    rdi
   14001c085:	rex.WRX
   14001c086:	rex.WRXB
   14001c087:	rex.WRXB push r8
   14001c089:	pop    rdi
   14001c08a:	push   rbp
   14001c08b:	push   rsp
   14001c08c:	rex.RX cmp BYTE PTR [rax],r8b
   14001c08f:	add    BYTE PTR [rdi+rbx*2+0x54],dl
   14001c093:	push   rdx
   14001c094:	pop    rdi
   14001c095:	rex.WRX
   14001c096:	rex.WRXB
   14001c097:	rex.WRXB push r8
   14001c099:	add    BYTE PTR [rax],al
   14001c09b:	add    BYTE PTR [rdi+0x6e],ch
   14001c09e:	add    BYTE PTR gs:[rip+0x64253a73],ah        # 0x1a426fb18
   14001c0a5:	cmp    ah,BYTE PTR [rax]
   14001c0a7:	push   rbp
   14001c0a8:	outs   dx,BYTE PTR ds:[rsi]
   14001c0a9:	je     0x14001c110
   14001c0ab:	jb     0x14001c11a
   14001c0ad:	imul   ebp,DWORD PTR [rsi+0x61],0x20646574
   14001c0b4:	jae    0x14001c12a
   14001c0b6:	jb     0x14001c121
   14001c0b8:	outs   dx,BYTE PTR ds:[rsi]
   14001c0b9:	add    BYTE PTR [eax],al
   14001c0bc:	add    BYTE PTR [rax],al
   14001c0be:	add    BYTE PTR [rax],al
   14001c0c0:	and    eax,0x64253a73
   14001c0c5:	cmp    ah,BYTE PTR [rax]
   14001c0c7:	rex.RB ins DWORD PTR es:[rdi],dx
   14001c0c9:	jo     0x14001c13f
   14001c0cb:	jns    0x14001c0ed
   14001c0cd:	outs   dx,DWORD PTR ds:[rsi]
   14001c0ce:	jb     0x14001c0f0
   14001c0d0:	jne    0x14001c140
   14001c0d2:	je     0x14001c139
   14001c0d4:	jb     0x14001c143
   14001c0d6:	imul   ebp,DWORD PTR [rsi+0x61],0x20646574
   14001c0dd:	je     0x14001c151
   14001c0df:	imul   esi,DWORD PTR [rax+0x6c],0x75712065
   14001c0e6:	outs   dx,DWORD PTR ds:[rsi]
   14001c0e7:	je     0x14001c14e
   14001c0e9:	and    BYTE PTR fs:[rbx+0x74],dh
   14001c0ed:	jb     0x14001c158
   14001c0ef:	outs   dx,BYTE PTR ds:[rsi]
   14001c0f0:	add    BYTE PTR [eax],al
   14001c0f3:	add    BYTE PTR [rax],al
   14001c0f5:	add    BYTE PTR [rax],al
   14001c0f7:	add    BYTE PTR [rip+0x64253a73],ah        # 0x1a426fb70
   14001c0fd:	cmp    ah,BYTE PTR [rax]
   14001c0ff:	rex.XB (bad) 
   14001c101:	outs   dx,BYTE PTR ds:[rsi]
   14001c102:	outs   dx,BYTE PTR ds:[rsi]
   14001c103:	outs   dx,DWORD PTR ds:[rsi]
   14001c104:	je     0x14001c126
   14001c106:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001c109:	jbe    0x14001c170
   14001c10b:	jb     0x14001c181
   14001c10d:	and    BYTE PTR [rax+0x79],dl
   14001c110:	je     0x14001c17a
   14001c112:	outs   dx,DWORD PTR ds:[rsi]
   14001c113:	outs   dx,BYTE PTR ds:[rsi]
   14001c114:	and    BYTE PTR [rbx+0x74],dh
   14001c117:	jb     0x14001c182
   14001c119:	outs   dx,BYTE PTR ds:[rsi]
   14001c11a:	and    BYTE PTR [esi+0x72],ah
   14001c11e:	outs   dx,DWORD PTR ds:[rsi]
   14001c11f:	ins    DWORD PTR es:[rdi],dx
   14001c120:	and    BYTE PTR [rip+0x6f742073],ah        # 0x1af75e199
   14001c126:	and    BYTE PTR [rip+0x73],ah        # 0x14001c19f
   14001c12c:	add    BYTE PTR [rax],al
   14001c12e:	add    BYTE PTR [rax],al
   14001c130:	and    eax,0x64253a73
   14001c135:	cmp    ah,BYTE PTR [rax]
   14001c137:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001c139:	outs   dx,BYTE PTR ds:[rsi]
   14001c13a:	sub    eax,0x49435341
   14001c13f:	rex.WB and BYTE PTR [r11+0x68],spl
   14001c143:	(bad)  
   14001c144:	jb     0x14001c1a7
   14001c146:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
   14001c14a:	and    BYTE PTR [rbp+riz*2+0x74],ah
   14001c14e:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14001c153:	and    BYTE PTR [rcx+0x6e],ch
   14001c156:	and    BYTE PTR [rdx+rsi*2+0x55],dh
   14001c15a:	je     0x14001c1c2
   14001c15c:	cmp    BYTE PTR [rax],ah
   14001c15e:	jae    0x14001c1d4
   14001c160:	jb     0x14001c1cb
   14001c162:	outs   dx,BYTE PTR ds:[rsi]
   14001c163:	add    BYTE PTR [eax],al
   14001c166:	add    BYTE PTR [rax],al
   14001c168:	and    eax,0x2500006f
   14001c16d:	js     0x14001c16f
   14001c16f:	add    BYTE PTR [rax],dh
   14001c171:	add    BYTE PTR [rax],al
   14001c173:	add    BYTE PTR [rbp+0x74],ah
   14001c176:	jne    0x14001c1ea
   14001c178:	outs   dx,BYTE PTR ds:[rsi]
   14001c179:	add    BYTE PTR [rax],al
   14001c17b:	add    BYTE PTR [rax],al
   14001c17d:	add    BYTE PTR [rax],al
   14001c17f:	add    BYTE PTR [rdx],ah
   14001c181:	add    eax,0x51993
   14001c186:	add    BYTE PTR [rax],al
   14001c188:	or     al,0x16
   14001c18a:	add    al,BYTE PTR [rax]
	...
   14001c194:	(bad)  
   14001c195:	add    BYTE PTR [rax],al
   14001c197:	add    BYTE PTR [rsi+rdx*1],dh
   14001c19a:	add    al,BYTE PTR [rax]
   14001c19c:	and    BYTE PTR [rax],al
   14001c19e:	add    BYTE PTR [rax],al
   14001c1a0:	add    BYTE PTR [rax],al
   14001c1a2:	add    BYTE PTR [rax],al
   14001c1a4:	add    DWORD PTR [rax],eax
	...
   14001c1ae:	add    BYTE PTR [rax],al
   14001c1b0:	and    al,BYTE PTR [rip+0x91993]        # 0x1400adb49
   14001c1b6:	add    BYTE PTR [rax],al
   14001c1b8:	mov    WORD PTR [rsi],ss
   14001c1ba:	add    al,BYTE PTR [rax]
	...
   14001c1c4:	adc    al,BYTE PTR [rax]
   14001c1c6:	add    BYTE PTR [rax],al
   14001c1c8:	(bad)  
   14001c1c9:	(bad)  
   14001c1ca:	add    al,BYTE PTR [rax]
   14001c1cc:	(bad)  
   14001c1cd:	add    BYTE PTR [rax],al
   14001c1cf:	add    BYTE PTR [rax],al
   14001c1d1:	add    BYTE PTR [rax],al
   14001c1d3:	add    BYTE PTR [rcx],al
   14001c1d5:	add    BYTE PTR [rax],al
   14001c1d7:	add    BYTE PTR [rip+0x50203a73],ah        # 0x19021fc50
   14001c1dd:	(bad)  
   14001c1de:	jb     0x14001c253
   14001c1e0:	and    BYTE PTR gs:[rbp+0x72],ah
   14001c1e4:	jb     0x14001c255
   14001c1e6:	jb     0x14001c208
   14001c1e8:	imul   ebp,DWORD PTR [rsi+0x20],0x66204955
   14001c1ef:	imul   ebp,DWORD PTR [rbp+riz*2+0xa],0x0
	...
   14001c1ff:	add    BYTE PTR [rax+0x74],ch
   14001c202:	je     0x14001c274
   14001c204:	cmp    ch,BYTE PTR [rdi]
   14001c206:	(bad)  
   14001c207:	je     0x14001c27b
   14001c209:	outs   dx,DWORD PTR ds:[rsi]
   14001c20a:	ins    BYTE PTR es:[rdi],dx
   14001c20b:	ins    BYTE PTR es:[rdi],dx
   14001c20c:	je     0x14001c273
   14001c20e:	movsxd ebp,DWORD PTR [rax+0x2e]
   14001c211:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001c214:	(bad)  
   14001c215:	js     0x14001c284
   14001c217:	ins    BYTE PTR es:[rdi],dx
   14001c218:	(bad)  
   14001c219:	data16 gs (bad) 
   14001c21c:	je     0x14001c293
   14001c21e:	jb     0x14001c285
   14001c220:	jae    0x14001c251
   14001c222:	jb     0x14001c289
   14001c224:	jo     0x14001c295
   14001c226:	jb     0x14001c29c
   14001c228:	sub    eax,0x74696877
   14001c22d:	gs jae 0x14001c2a0
   14001c230:	(bad)  
   14001c231:	movsxd esp,DWORD PTR [rbp+0x2d]
   14001c234:	outs   dx,DWORD PTR ds:[rsi]
   14001c235:	outs   dx,BYTE PTR ds:[rsi]
   14001c236:	ins    BYTE PTR es:[rdi],dx
   14001c237:	jns    0x14001c266
   14001c239:	rex.XB push 0x61447261
   14001c23f:	je     0x14001c2a2
   14001c241:	add    BYTE PTR [rax],al
   14001c243:	add    BYTE PTR [rax],al
   14001c245:	add    BYTE PTR [rax],al
   14001c247:	add    BYTE PTR [rax+0x74],ch
   14001c24a:	je     0x14001c2bc
   14001c24c:	cmp    ch,BYTE PTR [rdi]
   14001c24e:	(bad)  
   14001c24f:	js     0x14001c2be
   14001c251:	ins    BYTE PTR es:[rdi],dx
   14001c252:	outs   dx,DWORD PTR cs:[rsi]
   14001c254:	jb     0x14001c2bd
   14001c256:	(bad)  
   14001c257:	jae    0x14001c2ba
   14001c259:	js     0x14001c28a
   14001c25b:	data16 gs (bad) 
   14001c25e:	je     0x14001c2d5
   14001c260:	jb     0x14001c2c7
   14001c262:	jae    0x14001c293
   14001c264:	outs   dx,BYTE PTR ds:[rsi]
   14001c265:	(bad)  
   14001c266:	ins    DWORD PTR es:[rdi],dx
   14001c267:	gs jae 0x14001c2da
   14001c26a:	(bad)  
   14001c26b:	movsxd esp,DWORD PTR [rbp+0x2d]
   14001c26e:	jo     0x14001c2e2
   14001c270:	imul   di,WORD PTR gs:[rax+0x65],0x73
   14001c277:	add    BYTE PTR [rax+0x74],ch
   14001c27a:	je     0x14001c2ec
   14001c27c:	cmp    ch,BYTE PTR [rdi]
   14001c27e:	(bad)  
   14001c27f:	js     0x14001c2ee
   14001c281:	ins    BYTE PTR es:[rdi],dx
   14001c282:	outs   dx,DWORD PTR cs:[rsi]
   14001c284:	jb     0x14001c2ed
   14001c286:	(bad)  
   14001c287:	jae    0x14001c2ea
   14001c289:	js     0x14001c2ba
   14001c28b:	data16 gs (bad) 
   14001c28e:	je     0x14001c305
   14001c290:	jb     0x14001c2f7
   14001c292:	jae    0x14001c2c3
   14001c294:	outs   dx,BYTE PTR ds:[rsi]
   14001c295:	(bad)  
   14001c296:	ins    DWORD PTR es:[rdi],dx
   14001c297:	gs jae 0x14001c30a
   14001c29a:	(bad)  
   14001c29b:	movsxd esp,DWORD PTR [rbp+0x73]
   14001c29e:	add    BYTE PTR [rax],al
   14001c2a0:	jo     0x14001c31b
   14001c2a2:	ins    BYTE PTR es:[rdi],dx
   14001c2a3:	jne    0x14001c315
   14001c2a5:	fs (bad) 
   14001c2a7:	je     0x14001c30e
   14001c2a9:	xor    eax,0x72726520
   14001c2ae:	outs   dx,DWORD PTR ds:[rsi]
   14001c2af:	jb     0x14001c2eb
   14001c2b1:	and    BYTE PTR [rbx+0x61],ah
   14001c2b4:	outs   dx,BYTE PTR ds:[rsi]
   14001c2b5:	outs   dx,BYTE PTR ds:[rsi]
   14001c2b6:	outs   dx,DWORD PTR ds:[rsi]
   14001c2b7:	je     0x14001c2d9
   14001c2b9:	outs   dx,DWORD PTR ds:[rsi]
   14001c2ba:	jo     0x14001c321
   14001c2bc:	outs   dx,BYTE PTR ds:[rsi]
   14001c2bd:	and    BYTE PTR [rbp+0x49],dl
   14001c2c0:	and    BYTE PTR [rsi+0x69],ah
   14001c2c3:	ins    BYTE PTR es:[rdi],dx
   14001c2c4:	and    BYTE PTR gs:[rdi],ah
   14001c2c7:	and    eax,0x203a2773
   14001c2cc:	and    eax,0x22000a73
   14001c2d1:	add    eax,0x11993
   14001c2d6:	add    BYTE PTR [rax],al
   14001c2d8:	test   al,0x17
   14001c2da:	add    al,BYTE PTR [rax]
	...
   14001c2e4:	add    eax,DWORD PTR [rax]
   14001c2e6:	add    BYTE PTR [rax],al
   14001c2e8:	mov    al,0x17
   14001c2ea:	add    al,BYTE PTR [rax]
   14001c2ec:	and    BYTE PTR [rax],al
   14001c2ee:	add    BYTE PTR [rax],al
   14001c2f0:	add    BYTE PTR [rax],al
   14001c2f2:	add    BYTE PTR [rax],al
   14001c2f4:	add    DWORD PTR [rax],eax
   14001c2f6:	add    BYTE PTR [rax],al
   14001c2f8:	rex.WB push r11
   14001c2fa:	rex.WRXB sub rax,0x39353838
   14001c300:	sub    eax,0x31
	...
   14001c30d:	add    BYTE PTR [rax],al
   14001c30f:	add    BYTE PTR [rdx],ah
   14001c311:	add    eax,0x41993
   14001c316:	add    BYTE PTR [rax],al
   14001c318:	push   rax
   14001c319:	and    al,BYTE PTR [rdx]
	...
   14001c323:	add    BYTE PTR [rsi],al
   14001c325:	add    BYTE PTR [rax],al
   14001c327:	add    al,bl
   14001c329:	(bad)  
   14001c32a:	add    al,BYTE PTR [rax]
   14001c32c:	and    BYTE PTR [rax],al
   14001c32e:	add    BYTE PTR [rax],al
   14001c330:	add    BYTE PTR [rax],al
   14001c332:	add    BYTE PTR [rax],al
   14001c334:	add    DWORD PTR [rax],eax
	...
   14001c33e:	add    BYTE PTR [rax],al
   14001c340:	and    al,BYTE PTR [rip+0xa1993]        # 0x1400bdcd9
   14001c346:	add    BYTE PTR [rax],al
   14001c348:	and    al,0x18
   14001c34a:	add    al,BYTE PTR [rax]
	...
   14001c354:	adc    DWORD PTR [rax],eax
   14001c356:	add    BYTE PTR [rax],al
   14001c358:	je     0x14001c372
   14001c35a:	add    al,BYTE PTR [rax]
   14001c35c:	pop    rax
   14001c35d:	add    BYTE PTR [rax],al
   14001c35f:	add    BYTE PTR [rax],al
   14001c361:	add    BYTE PTR [rax],al
   14001c363:	add    BYTE PTR [rcx],al
	...
   14001c36d:	add    BYTE PTR [rax],al
   14001c36f:	add    BYTE PTR [rdx],ah
   14001c371:	add    eax,0xa1993
   14001c376:	add    BYTE PTR [rax],al
   14001c378:	adc    al,0x19
   14001c37a:	add    al,BYTE PTR [rax]
	...
   14001c384:	adc    eax,0x64000000
   14001c389:	sbb    DWORD PTR [rdx],eax
   14001c38b:	add    BYTE PTR [rax+0x0],cl
   14001c38e:	add    BYTE PTR [rax],al
   14001c390:	add    BYTE PTR [rax],al
   14001c392:	add    BYTE PTR [rax],al
   14001c394:	add    DWORD PTR [rax],eax
   14001c396:	add    BYTE PTR [rax],al
   14001c398:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001c39b:	ins    DWORD PTR es:[rdi],dx
   14001c39c:	outs   dx,BYTE PTR gs:[rsi]
   14001c39e:	je     0x14001c3a0
   14001c3a0:	je     0x14001c414
   14001c3a2:	jne    0x14001c409
   14001c3a4:	add    BYTE PTR [rax],al
   14001c3a6:	add    BYTE PTR [rax],al
   14001c3a8:	outs   dx,BYTE PTR ds:[rsi]
   14001c3a9:	outs   dx,DWORD PTR ds:[rsi]
   14001c3aa:	je     0x14001c41e
   14001c3ac:	add    BYTE PTR [rax],al
   14001c3ae:	add    BYTE PTR [rax],al
   14001c3b0:	jae    0x14001c426
   14001c3b2:	jb     0x14001c41d
   14001c3b4:	outs   dx,BYTE PTR ds:[rsi]
   14001c3b5:	add    BYTE PTR [eax],al
   14001c3b8:	je     0x14001c41f
   14001c3ba:	js     0x14001c430
   14001c3bc:	add    BYTE PTR [rax],al
   14001c3be:	add    BYTE PTR [rax],al
   14001c3c0:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x0
	...
   14001c3d0:	and    al,BYTE PTR [rip+0x61993]        # 0x14007dd69
   14001c3d6:	add    BYTE PTR [rax],al
   14001c3d8:	sub    BYTE PTR [rdx],bl
   14001c3da:	add    al,BYTE PTR [rax]
	...
   14001c3e4:	or     eax,0x58000000
   14001c3e9:	sbb    al,BYTE PTR [rdx]
   14001c3eb:	add    BYTE PTR [rax],dh
   14001c3ed:	add    BYTE PTR [rax],al
   14001c3ef:	add    BYTE PTR [rax],al
   14001c3f1:	add    BYTE PTR [rax],al
   14001c3f3:	add    BYTE PTR [rcx],al
   14001c3f5:	add    BYTE PTR [rax],al
   14001c3f7:	add    BYTE PTR [rbx+0x6c],ah
   14001c3fa:	(bad)  
   14001c3fb:	jae    0x14001c470
   14001c3fd:	add    BYTE PTR [rax],al
   14001c3ff:	add    BYTE PTR [rip+0xa00000a],cl        # 0x14a01c40f
	...
   14001c40d:	add    BYTE PTR [rax],al
   14001c40f:	add    BYTE PTR [rdx],ah
   14001c411:	add    eax,0x1e1993
   14001c416:	add    BYTE PTR [rax],al
   14001c418:	in     al,0x1a
   14001c41a:	add    al,BYTE PTR [rax]
	...
   14001c424:	xor    al,0x0
   14001c426:	add    BYTE PTR [rax],al
   14001c428:	(bad)  
   14001c429:	sbb    eax,DWORD PTR [rdx]
   14001c42b:	add    al,ah
   14001c42d:	add    BYTE PTR [rax],al
   14001c42f:	add    BYTE PTR [rax],al
   14001c431:	add    BYTE PTR [rax],al
   14001c433:	add    BYTE PTR [rcx],al
   14001c435:	add    BYTE PTR [rax],al
   14001c437:	add    BYTE PTR [rip+0x55203a73],ah        # 0x19521feb0
   14001c43d:	outs   dx,BYTE PTR ds:[rsi]
   14001c43e:	(bad)
   14001c443:	movsxd esp,DWORD PTR [rbp+0x64]
   14001c446:	and    BYTE PTR [rax+0x61],dh
   14001c449:	jb     0x14001c4b0
   14001c44b:	outs   dx,BYTE PTR ds:[rsi]
   14001c44c:	je     0x14001c4b6
   14001c44e:	gs jae 0x14001c4b6
   14001c451:	jae    0x14001c473
   14001c453:	imul   ebp,DWORD PTR [rsi+0x20],0x68747950
   14001c45a:	outs   dx,DWORD PTR ds:[rsi]
   14001c45b:	outs   dx,BYTE PTR ds:[rsi]
   14001c45c:	and    BYTE PTR [rbx+0x6f],ah
   14001c45f:	fs add BYTE PTR gs:[rax],al
   14001c463:	add    BYTE PTR [rsi],ch
   14001c465:	add    BYTE PTR [rax],al
   14001c467:	add    BYTE PTR [rbx+0x65],dh
   14001c46a:	ins    BYTE PTR es:[rdi],dx
   14001c46b:	data16 add BYTE PTR [rax],al
   14001c46e:	add    BYTE PTR [rax],al
   14001c470:	push   rbp
   14001c471:	push   rsp
   14001c472:	rex.RX sub eax,0x38
   14001c478:	jo     0x14001c4f3
   14001c47a:	ins    BYTE PTR es:[rdi],dx
   14001c47b:	jne    0x14001c4ed
   14001c47d:	fs (bad) 
   14001c47f:	je     0x14001c4e6
   14001c481:	xor    eax,0x72726520
   14001c486:	outs   dx,DWORD PTR ds:[rsi]
   14001c487:	jb     0x14001c4c3
   14001c489:	and    BYTE PTR [rbx+0x61],al
   14001c48c:	outs   dx,BYTE PTR ds:[rsi]
   14001c48d:	outs   dx,BYTE PTR ds:[rsi]
   14001c48e:	outs   dx,DWORD PTR ds:[rsi]
   14001c48f:	je     0x14001c4b1
   14001c491:	outs   dx,DWORD PTR ds:[rsi]
   14001c492:	jo     0x14001c4f9
   14001c494:	outs   dx,BYTE PTR ds:[rsi]
   14001c495:	and    BYTE PTR [rax+0x79],dl
   14001c498:	je     0x14001c502
   14001c49a:	outs   dx,DWORD PTR ds:[rsi]
   14001c49b:	outs   dx,BYTE PTR ds:[rsi]
   14001c49c:	and    BYTE PTR [rbx+0x6f],dh
   14001c49f:	jne    0x14001c513
   14001c4a1:	movsxd esp,DWORD PTR [rbp+0x20]
   14001c4a4:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2527
   14001c4ab:	jae    0x14001c4d4
   14001c4ad:	cmp    ah,BYTE PTR [rax]
   14001c4af:	and    eax,0xa73
	...
   14001c4c0:	loopne 0x14001c47a
   14001c4c2:	add    DWORD PTR [rax+0x1],eax
	...
   14001c4cd:	add    BYTE PTR [rax],al
   14001c4cf:	add    al,dl
   14001c4d1:	mov    eax,0x14001
   14001c4d6:	add    BYTE PTR [rax],al
   14001c4d8:	enter  0x1b8,0x40
   14001c4dc:	add    DWORD PTR [rax],eax
	...
   14001c4e6:	add    BYTE PTR [rax],al
   14001c4e8:	sar    BYTE PTR [rax+0x14001],1
   14001c4ee:	add    BYTE PTR [rax],al
   14001c4f0:	enter  0x1b8,0x40
   14001c4f4:	add    DWORD PTR [rax],eax
	...
   14001c4fe:	add    BYTE PTR [rax],al
   14001c500:	sar    BYTE PTR [rax+0x14001],1
   14001c506:	add    BYTE PTR [rax],al
   14001c508:	enter  0x1b8,0x40
   14001c50c:	add    DWORD PTR [rax],eax
   14001c50e:	add    BYTE PTR [rax],al
   14001c510:	sar    BYTE PTR [rax+0x14001],0x0
	...
   14001c51f:	add    al,dl
   14001c521:	mov    eax,0x14001
   14001c526:	add    BYTE PTR [rax],al
   14001c528:	mov    eax,0x14001b8
   14001c52d:	add    BYTE PTR [rax],al
   14001c52f:	add    al,cl
   14001c531:	mov    eax,0x14001
	...
   14001c53e:	add    BYTE PTR [rax],al
   14001c540:	sar    BYTE PTR [rax+0x14001],1
   14001c546:	add    BYTE PTR [rax],al
   14001c548:	mov    eax,0x14001b8
   14001c54d:	add    BYTE PTR [rax],al
   14001c54f:	add    al,cl
   14001c551:	mov    eax,0x14001
	...
   14001c55e:	add    BYTE PTR [rax],al
   14001c560:	sar    BYTE PTR [rax+0x14001],1
   14001c566:	add    BYTE PTR [rax],al
   14001c568:	mov    eax,0x14001b8
   14001c56d:	add    BYTE PTR [rax],al
   14001c56f:	add    al,cl
   14001c571:	mov    eax,0x14001
	...
   14001c57e:	add    BYTE PTR [rax],al
   14001c580:	sar    BYTE PTR [rax+0x14001],1
   14001c586:	add    BYTE PTR [rax],al
   14001c588:	mov    eax,0x14001b8
   14001c58d:	add    BYTE PTR [rax],al
   14001c58f:	add    al,cl
   14001c591:	mov    eax,0x14001
	...
   14001c59e:	add    BYTE PTR [rax],al
   14001c5a0:	sar    BYTE PTR [rax+0x14001],1
   14001c5a6:	add    BYTE PTR [rax],al
   14001c5a8:	mov    eax,0x14001b8
   14001c5ad:	add    BYTE PTR [rax],al
   14001c5af:	add    al,cl
   14001c5b1:	mov    eax,0x14001
	...
   14001c5be:	add    BYTE PTR [rax],al
   14001c5c0:	sar    BYTE PTR [rax+0x14001],1
   14001c5c6:	add    BYTE PTR [rax],al
   14001c5c8:	mov    eax,0x14001b8
   14001c5cd:	add    BYTE PTR [rax],al
   14001c5cf:	add    al,cl
   14001c5d1:	mov    eax,0x14001
	...
   14001c5de:	add    BYTE PTR [rax],al
   14001c5e0:	sar    BYTE PTR [rax+0x14001],1
   14001c5e6:	add    BYTE PTR [rax],al
   14001c5e8:	mov    al,0xb8
   14001c5ea:	add    DWORD PTR [rax+0x1],eax
   14001c5ed:	add    BYTE PTR [rax],al
   14001c5ef:	add    al,cl
   14001c5f1:	mov    eax,0x14001
	...
   14001c5fe:	add    BYTE PTR [rax],al
   14001c600:	sar    BYTE PTR [rax+0x14001],1
   14001c606:	add    BYTE PTR [rax],al
   14001c608:	cwde   
   14001c609:	mov    eax,0x14001
   14001c60e:	add    BYTE PTR [rax],al
   14001c610:	enter  0x1b8,0x40
   14001c614:	add    DWORD PTR [rax],eax
	...
   14001c61e:	add    BYTE PTR [rax],al
   14001c620:	sar    BYTE PTR [rax+0x14001],1
   14001c626:	add    BYTE PTR [rax],al
   14001c628:	mov    eax,0x14001b8
   14001c62d:	add    BYTE PTR [rax],al
   14001c62f:	add    BYTE PTR [rax+0x14001b8],dl
   14001c635:	add    BYTE PTR [rax],al
   14001c637:	add    al,cl
   14001c639:	mov    eax,0x14001
	...
   14001c646:	add    BYTE PTR [rax],al
   14001c648:	sar    BYTE PTR [rax+0x14001],1
   14001c64e:	add    BYTE PTR [rax],al
   14001c650:	js     0x14001c60a
   14001c652:	add    DWORD PTR [rax+0x1],eax
   14001c655:	add    BYTE PTR [rax],al
   14001c657:	add    BYTE PTR [rax-0x48],bl
   14001c65a:	add    DWORD PTR [rax+0x1],eax
   14001c65d:	add    BYTE PTR [rax],al
   14001c65f:	add    al,cl
   14001c661:	mov    eax,0x14001
	...
   14001c66e:	add    BYTE PTR [rax],al
   14001c670:	sar    BYTE PTR [rax+0x14001],0x0
   14001c677:	add    al,dl
   14001c679:	mov    eax,0x14001
   14001c67e:	add    BYTE PTR [rax],al
   14001c680:	mov    eax,0x14001b8
   14001c685:	add    BYTE PTR [rax],al
   14001c687:	add    BYTE PTR [rax-0x48],dl
   14001c68a:	add    DWORD PTR [rax+0x1],eax
   14001c68d:	add    BYTE PTR [rax],al
   14001c68f:	add    al,cl
   14001c691:	mov    eax,0x14001
	...
   14001c69e:	add    BYTE PTR [rax],al
   14001c6a0:	sar    BYTE PTR [rax+0x14001],0x0
   14001c6a7:	add    al,dl
   14001c6a9:	mov    eax,0x14001
   14001c6ae:	add    BYTE PTR [rax],al
   14001c6b0:	mov    eax,0x14001b8
   14001c6b5:	add    BYTE PTR [rax],al
   14001c6b7:	add    BYTE PTR [rax-0x48],al
   14001c6ba:	add    DWORD PTR [rax+0x1],eax
   14001c6bd:	add    BYTE PTR [rax],al
   14001c6bf:	add    al,cl
   14001c6c1:	mov    eax,0x14001
   14001c6c6:	add    BYTE PTR [rax],al
   14001c6c8:	and    BYTE PTR [rax+0x14001],bh
	...
   14001c6d6:	add    BYTE PTR [rax],al
   14001c6d8:	adc    eax,DWORD PTR [rax]
   14001c6da:	add    BYTE PTR [rax],al
   14001c6dc:	and    eax,0x5b000000
   14001c6e1:	add    BYTE PTR [rax],al
   14001c6e3:	add    BYTE PTR [rdx+0x0],bh
   14001c6e6:	add    BYTE PTR [rax],al
   14001c6e8:	add    DWORD PTR [rax],eax
   14001c6ea:	add    BYTE PTR [rax],al
   14001c6ec:	add    BYTE PTR [rax],al
   14001c6ee:	add    BYTE PTR [rax],al
   14001c6f0:	add    eax,DWORD PTR [rax]
   14001c6f2:	add    BYTE PTR [rax],al
   14001c6f4:	or     DWORD PTR [rax],eax
   14001c6f6:	add    BYTE PTR [rax],al
   14001c6f8:	adc    BYTE PTR [rax],al
   14001c6fa:	add    BYTE PTR [rax],al
   14001c6fc:	adc    al,BYTE PTR [rax]
   14001c6fe:	add    BYTE PTR [rax],al
   14001c700:	adc    eax,0x19000000
   14001c705:	add    BYTE PTR [rax],al
   14001c707:	add    BYTE PTR [rbx],ah
   14001c709:	add    BYTE PTR [rax],al
   14001c70b:	add    BYTE PTR [rip+0x32000000],ch        # 0x17201c711
   14001c711:	add    BYTE PTR [rax],al
   14001c713:	add    BYTE PTR [rax+rax*1],dh
   14001c716:	add    BYTE PTR [rax],al
   14001c718:	cmp    eax,DWORD PTR [rax]
   14001c71a:	add    BYTE PTR [rax],al
   14001c71c:	cmp    al,0x0
   14001c71e:	add    BYTE PTR [rax],al
   14001c720:	rex.X add BYTE PTR [rax],al
   14001c723:	add    BYTE PTR [rax+rax*1+0x0],cl
   14001c727:	add    BYTE PTR [rbx+0x0],dl
   14001c72a:	add    BYTE PTR [rax],al
   14001c72c:	pop    rcx
   14001c72d:	add    BYTE PTR [rax],al
   14001c72f:	add    BYTE PTR [rax+0x0],dh
   14001c732:	add    BYTE PTR [rax],al
   14001c734:	js     0x14001c736
   14001c736:	add    BYTE PTR [rax],al
   14001c738:	jns    0x14001c73a
   14001c73a:	add    BYTE PTR [rax],al
   14001c73c:	test   BYTE PTR [rax],al
   14001c73e:	add    BYTE PTR [rax],al
   14001c740:	mov    al,BYTE PTR [rax]
   14001c742:	add    BYTE PTR [rax],al
   14001c744:	mov    eax,DWORD PTR [rax]
   14001c746:	add    BYTE PTR [rax],al
   14001c748:	add    DWORD PTR [rax],eax
   14001c74a:	add    BYTE PTR [rax],al
   14001c74c:	add    BYTE PTR [rax],al
   14001c74e:	add    BYTE PTR [rax],al
   14001c750:	add    al,BYTE PTR [rax]
   14001c752:	add    BYTE PTR [rax],al
   14001c754:	add    al,0x0
   14001c756:	add    BYTE PTR [rax],al
   14001c758:	add    eax,0x6000000
   14001c75d:	add    BYTE PTR [rax],al
   14001c75f:	add    BYTE PTR [rdi],al
   14001c761:	add    BYTE PTR [rax],al
   14001c763:	add    BYTE PTR [rdx],cl
   14001c765:	add    BYTE PTR [rax],al
   14001c767:	add    BYTE PTR [rbx],cl
   14001c769:	add    BYTE PTR [rax],al
   14001c76b:	add    BYTE PTR [rax+rax*1],cl
   14001c76e:	add    BYTE PTR [rax],al
   14001c770:	or     eax,0xe000000
   14001c775:	add    BYTE PTR [rax],al
   14001c777:	add    BYTE PTR [rdi],cl
   14001c779:	add    BYTE PTR [rax],al
   14001c77b:	add    BYTE PTR [rcx],dl
   14001c77d:	add    BYTE PTR [rax],al
   14001c77f:	add    BYTE PTR [rax+rax*1],dl
   14001c782:	add    BYTE PTR [rax],al
   14001c784:	(bad)  
   14001c785:	add    BYTE PTR [rax],al
   14001c787:	add    BYTE PTR [rax],bl
   14001c789:	add    BYTE PTR [rax],al
   14001c78b:	add    BYTE PTR [rcx+0x1a000000],dl
   14001c791:	add    BYTE PTR [rax],al
   14001c793:	add    BYTE PTR [rip+0x1e000000],bl        # 0x15e01c799
   14001c799:	add    BYTE PTR [rax],al
   14001c79b:	add    BYTE PTR [rdi],bl
   14001c79d:	add    BYTE PTR [rax],al
   14001c79f:	add    BYTE PTR [rax],ah
   14001c7a1:	add    BYTE PTR [rax],al
   14001c7a3:	add    BYTE PTR [rcx],ah
   14001c7a5:	add    BYTE PTR [rax],al
   14001c7a7:	add    BYTE PTR [rdx],ah
   14001c7a9:	add    BYTE PTR [rax],al
   14001c7ab:	add    BYTE PTR [rax+rax*1],ah
   14001c7ae:	add    BYTE PTR [rax],al
   14001c7b0:	add    BYTE PTR es:[rax],al
   14001c7b3:	add    BYTE PTR [rax],ch
   14001c7b5:	add    BYTE PTR [rax],al
   14001c7b7:	add    BYTE PTR [rcx],ch
   14001c7b9:	add    BYTE PTR [rax],al
   14001c7bb:	add    BYTE PTR [rdx],ch
   14001c7bd:	add    BYTE PTR [rax],al
   14001c7bf:	add    BYTE PTR [rbx],ch
   14001c7c1:	add    BYTE PTR [rax],al
   14001c7c3:	add    BYTE PTR [rax+rax*1],ch
   14001c7c6:	add    BYTE PTR [rax],al
   14001c7c8:	add    BYTE PTR cs:[rax],al
   14001c7cb:	add    BYTE PTR [rdi],ch
   14001c7cd:	add    BYTE PTR [rax],al
   14001c7cf:	add    BYTE PTR [rax],dh
   14001c7d1:	add    BYTE PTR [rax],al
   14001c7d3:	add    BYTE PTR [rcx],dh
   14001c7d5:	add    BYTE PTR [rax],al
   14001c7d7:	add    BYTE PTR [rbx],dh
   14001c7d9:	add    BYTE PTR [rax],al
   14001c7db:	add    BYTE PTR [rip+0x36000000],dh        # 0x17601c7e1
   14001c7e1:	add    BYTE PTR [rax],al
   14001c7e3:	add    BYTE PTR [rdx],bh
   14001c7e5:	add    BYTE PTR [rax],al
   14001c7e7:	add    BYTE PTR [rip+0x3e000000],bh        # 0x17e01c7ed
   14001c7ed:	add    BYTE PTR [rax],al
   14001c7ef:	add    BYTE PTR [rdi],bh
   14001c7f1:	add    BYTE PTR [rax],al
   14001c7f3:	add    BYTE PTR [rax+0x0],al
   14001c7f6:	add    BYTE PTR [rax],al
   14001c7f8:	add    BYTE PTR [r8],al
   14001c7fb:	add    BYTE PTR [rbx+0x0],al
   14001c7fe:	add    BYTE PTR [rax],al
   14001c800:	add    BYTE PTR [rax],r8b
   14001c803:	add    BYTE PTR [rbp+0x0],al
   14001c806:	add    BYTE PTR [rax],al
   14001c808:	rex.RX add BYTE PTR [rax],r8b
   14001c80b:	add    BYTE PTR [rax+0x0],cl
   14001c80e:	add    BYTE PTR [rax],al
   14001c810:	rex.WXB add BYTE PTR [r8],al
   14001c813:	add    BYTE PTR [rbp+0x0],cl
   14001c816:	add    BYTE PTR [rax],al
   14001c818:	push   rax
   14001c819:	add    BYTE PTR [rax],al
   14001c81b:	add    BYTE PTR [rdx+0x0],dl
   14001c81e:	add    BYTE PTR [rax],al
   14001c820:	push   rsp
   14001c821:	add    BYTE PTR [rax],al
   14001c823:	add    BYTE PTR [rbp+0x0],dl
   14001c826:	add    BYTE PTR [rax],al
   14001c828:	lea    eax,[rax]
   14001c82a:	add    BYTE PTR [rax],al
   14001c82c:	push   rsi
   14001c82d:	add    BYTE PTR [rax],al
   14001c82f:	add    BYTE PTR [rdi+0x0],dl
   14001c832:	add    BYTE PTR [rax],al
   14001c834:	pop    rax
   14001c835:	add    BYTE PTR [rax],al
   14001c837:	add    BYTE PTR [rbx+0x0],bl
   14001c83a:	add    BYTE PTR [rax],al
   14001c83c:	pop    rsp
   14001c83d:	add    BYTE PTR [rax],al
   14001c83f:	add    BYTE PTR [rbp+0x0],bl
   14001c842:	add    BYTE PTR [rax],al
   14001c844:	pop    rsi
   14001c845:	add    BYTE PTR [rax],al
   14001c847:	add    BYTE PTR [rsi+0x0],ah
   14001c84a:	add    BYTE PTR [rax],al
   14001c84c:	add    BYTE PTR [eax],al
   14001c84f:	add    BYTE PTR [rax+0x0],ch
   14001c852:	add    BYTE PTR [rax],al
   14001c854:	imul   eax,DWORD PTR [rax],0x6a0000
   14001c85a:	add    BYTE PTR [rax],al
   14001c85c:	imul   eax,DWORD PTR [rax],0x0
   14001c85f:	add    BYTE PTR [rsi+0x0],ch
   14001c862:	add    BYTE PTR [rax],al
   14001c864:	outs   dx,DWORD PTR ds:[rsi]
   14001c865:	add    BYTE PTR [rax],al
   14001c867:	add    BYTE PTR [rcx+0x0],dh
   14001c86a:	add    BYTE PTR [rax],al
   14001c86c:	jb     0x14001c86e
   14001c86e:	add    BYTE PTR [rax],al
   14001c870:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001c871:	add    BYTE PTR [rax],al
   14001c873:	add    BYTE PTR [rax+rax*1+0x0],dh
   14001c877:	add    BYTE PTR [rbp+0x0],dh
   14001c87a:	add    BYTE PTR [rax],al
   14001c87c:	jbe    0x14001c87e
   14001c87e:	add    BYTE PTR [rax],al
   14001c880:	ja     0x14001c882
   14001c882:	add    BYTE PTR [rax],al
   14001c884:	jnp    0x14001c886
   14001c886:	add    BYTE PTR [rax],al
   14001c888:	jl     0x14001c88a
   14001c88a:	add    BYTE PTR [rax],al
   14001c88c:	jge    0x14001c88e
   14001c88e:	add    BYTE PTR [rax],al
   14001c890:	jle    0x14001c892
   14001c892:	add    BYTE PTR [rax],al
   14001c894:	xchg   edx,eax
   14001c895:	add    BYTE PTR [rax],al
   14001c897:	add    BYTE PTR [rax-0x7d000000],al
   14001c89d:	add    BYTE PTR [rax],al
   14001c89f:	add    BYTE PTR [rbp-0x79000000],al
   14001c8a5:	add    BYTE PTR [rax],al
   14001c8a7:	add    BYTE PTR [rax-0x77000000],cl
   14001c8ad:	add    BYTE PTR [rax],al
   14001c8af:	add    BYTE PTR [rax+rax*1+0x10000],cl
   14001c8b6:	add    BYTE PTR [rax],al
   14001c8b8:	rex.RXB add BYTE PTR [r8],r8b
   14001c8bb:	add    BYTE PTR [rcx],al
   14001c8bd:	add    BYTE PTR [rax],al
   14001c8bf:	add    BYTE PTR [rdi+0x27000000],cl
   14001c8c5:	add    BYTE PTR [rax],al
   14001c8c7:	add    BYTE PTR [rdi],dh
   14001c8c9:	add    BYTE PTR [rax],al
   14001c8cb:	add    BYTE PTR [rax],bh
   14001c8cd:	add    BYTE PTR [rax],al
   14001c8cf:	add    BYTE PTR [rcx],bh
   14001c8d1:	add    BYTE PTR [rax],al
   14001c8d3:	add    BYTE PTR [rax+0x4f000000],dl
   14001c8d9:	add    BYTE PTR [rax],al
   14001c8db:	add    BYTE PTR [rcx+0x0],ah
   14001c8de:	add    BYTE PTR [rax],al
   14001c8e0:	movsxd eax,DWORD PTR [rax]
   14001c8e2:	add    BYTE PTR [rax],al
   14001c8e4:	add    DWORD PTR [rax],eax
   14001c8e6:	add    BYTE PTR [rax],al
   14001c8e8:	sbb    al,0x0
   14001c8ea:	add    BYTE PTR [rax],al
   14001c8ec:	add    DWORD PTR [rax],eax
   14001c8ee:	add    BYTE PTR [rax],al
   14001c8f0:	ins    BYTE PTR es:[rdi],dx
   14001c8f1:	add    BYTE PTR [rax],al
   14001c8f3:	add    BYTE PTR [rcx],al
   14001c8f5:	add    BYTE PTR [rax],al
   14001c8f7:	add    BYTE PTR [rdx+0x0],cl
   14001c8fa:	add    BYTE PTR [rax],al
   14001c8fc:	add    DWORD PTR [rax],eax
   14001c8fe:	add    BYTE PTR [rax],al
   14001c900:	rex.WB add BYTE PTR [r8],al
   14001c903:	add    BYTE PTR [rcx],al
   14001c905:	add    BYTE PTR [rax],al
   14001c907:	add    BYTE PTR [rsi+0x16000000],cl
   14001c90d:	add    BYTE PTR [rax],al
   14001c90f:	add    BYTE PTR [rbx],bl
   14001c911:	add    BYTE PTR [rax],al
   14001c913:	add    BYTE PTR [rax+0x0],ah
   14001c916:	add    BYTE PTR [rax],al
   14001c918:	add    BYTE PTR fs:[rax],al
   14001c91b:	add    BYTE PTR [rax+rax*1+0x0],ah
   14001c91f:	add    BYTE PTR [rcx+0x1000000],al
   14001c925:	add    BYTE PTR [rax],al
   14001c927:	add    BYTE PTR [rdx+0x0],bl
   14001c92a:	add    BYTE PTR [rax],al
   14001c92c:	add    DWORD PTR [rax],eax
   14001c92e:	add    BYTE PTR [rax],al
   14001c930:	pop    rdi
   14001c931:	add    BYTE PTR [rax],al
   14001c933:	add    BYTE PTR [rdi+0x0],bl
   14001c936:	add    BYTE PTR [rax],al
   14001c938:	add    DWORD PTR [rax],eax
   14001c93a:	add    BYTE PTR [rax],al
   14001c93c:	add    BYTE PTR [rax],al
   14001c93e:	add    BYTE PTR [rax],al
   14001c940:	ins    DWORD PTR es:[rdi],dx
   14001c941:	add    BYTE PTR [rax],al
   14001c943:	add    BYTE PTR [rcx],al
   14001c945:	add    BYTE PTR [rax],al
   14001c947:	add    BYTE PTR [rsi+0x0],cl
   14001c94a:	add    BYTE PTR [rax],al
   14001c94c:	add    DWORD PTR [rax],eax
   14001c94e:	add    BYTE PTR [rax],al
   14001c950:	xchg   BYTE PTR [rax],al
   14001c952:	add    BYTE PTR [rax],al
   14001c954:	add    DWORD PTR [rax],eax
   14001c956:	add    BYTE PTR [rax],al
   14001c958:	or     BYTE PTR [rax],al
   14001c95a:	add    BYTE PTR [rax],al
   14001c95c:	add    DWORD PTR [rax],eax
	...
   14001c966:	add    BYTE PTR [rax],al
   14001c968:	(bad)  
   14001c969:	add    BYTE PTR [rax],al
   14001c96b:	add    BYTE PTR [rax],al
   14001c96d:	add    BYTE PTR [rax],al
   14001c96f:	add    BYTE PTR [rbp+0x73],dl
   14001c972:	(bad)  
   14001c973:	cmp    cl,BYTE PTR gs:[edx]
   14001c977:	and    BYTE PTR [rax],ah
   14001c979:	and    BYTE PTR [rax],ah
   14001c97b:	jo     0x14001c9f6
   14001c97d:	ins    BYTE PTR es:[rdi],dx
   14001c97e:	jne    0x14001c9f0
   14001c980:	fs (bad) 
   14001c982:	je     0x14001c9e9
   14001c984:	xor    eax,0x706f5b20
   14001c989:	je     0x14001c9f4
   14001c98b:	outs   dx,DWORD PTR ds:[rsi]
   14001c98c:	outs   dx,BYTE PTR ds:[rsi]
   14001c98d:	jae    0x14001c9ec
   14001c98f:	and    BYTE PTR [rax+0x72],dh
   14001c992:	outs   dx,DWORD PTR ds:[rsi]
   14001c993:	push   0x65
   14001c995:	movsxd esi,DWORD PTR [rbp+rbp*1+0x66]
   14001c999:	imul   ebp,DWORD PTR [rbp+riz*2+0xa],0x20202020
   14001c9a1:	jo     0x14001ca1c
   14001c9a3:	ins    BYTE PTR es:[rdi],dx
   14001c9a4:	jne    0x14001ca16
   14001c9a6:	fs (bad) 
   14001c9a8:	je     0x14001ca0f
   14001c9aa:	xor    eax,0x706f5b20
   14001c9af:	je     0x14001ca1a
   14001c9b1:	outs   dx,DWORD PTR ds:[rsi]
   14001c9b2:	outs   dx,BYTE PTR ds:[rsi]
   14001c9b3:	jae    0x14001ca12
   14001c9b5:	and    BYTE PTR [rbx+0x6f],dh
   14001c9b8:	jne    0x14001ca2c
   14001c9ba:	movsxd esp,DWORD PTR [rbp+0x2d]
   14001c9bd:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x2d20
   14001c9c4:	je     0x14001ca39
   14001c9c6:	and    BYTE PTR [rbx+rsi*2+0x2d],dh
   14001c9ca:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x4f0a
   14001c9d1:	jo     0x14001ca47
   14001c9d3:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a3a73
   14001c9da:	and    BYTE PTR [rax],ah
   14001c9dc:	and    BYTE PTR [rip+0x706c6568],ch        # 0x1b06e2f4a
   14001c9e2:	and    BYTE PTR [rax],ah
   14001c9e4:	imul   r14d,DWORD PTR [rbx+0x70],0x2079616c
   14001c9ec:	je     0x14001ca56
   14001c9ee:	imul   esi,DWORD PTR [rbx+0x20],0x6f666e69
   14001c9f5:	jb     0x14001ca64
   14001c9f7:	(bad)  
   14001c9f8:	je     0x14001ca63
   14001c9fa:	outs   dx,DWORD PTR ds:[rsi]
   14001c9fb:	outs   dx,BYTE PTR ds:[rsi]
   14001c9fc:	and    BYTE PTR [rcx+0x6e],ah
   14001c9ff:	and    BYTE PTR fs:[rbp+0x78],ah
   14001ca03:	imul   esi,DWORD PTR [rdx+rcx*1+0x20],0x2d202020
   14001ca0b:	jbe    0x14001ca72
   14001ca0d:	jb     0x14001ca82
   14001ca0f:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020200a
   14001ca16:	and    BYTE PTR [rax],ah
   14001ca18:	and    BYTE PTR [rax],ah
   14001ca1a:	and    BYTE PTR [rax],ah
   14001ca1c:	and    BYTE PTR [rax],ah
   14001ca1e:	imul   r14d,DWORD PTR [rbx+0x70],0x2079616c
   14001ca26:	je     0x14001ca90
   14001ca28:	and    BYTE PTR gs:[rsi+0x65],dh
   14001ca2c:	jb     0x14001caa1
   14001ca2e:	imul   ebp,DWORD PTR [rdi+0x6e],0x20666f20
   14001ca35:	jo     0x14001cab0
   14001ca37:	ins    BYTE PTR es:[rdi],dx
   14001ca38:	jne    0x14001caaa
   14001ca3a:	fs (bad) 
   14001ca3c:	je     0x14001caa3
   14001ca3e:	xor    eax,0x646e6120
   14001ca43:	and    BYTE PTR [rbp+0x78],ah
   14001ca46:	imul   esi,DWORD PTR [rdx+rcx*1+0x20],0x2d202020
   14001ca4e:	jbe    0x14001cab5
   14001ca50:	jb     0x14001cab4
   14001ca52:	outs   dx,DWORD PTR ds:[rsi]
   14001ca53:	jae    0x14001caba
   14001ca55:	or     ah,BYTE PTR [rax]
   14001ca57:	and    BYTE PTR [rax],ah
   14001ca59:	and    BYTE PTR [rax],ah
   14001ca5b:	and    BYTE PTR [rax],ah
   14001ca5d:	and    BYTE PTR [rax],ah
   14001ca5f:	and    BYTE PTR [rax],ah
   14001ca61:	rex.RB js 0x14001cad4
   14001ca64:	ins    BYTE PTR es:[rdi],dx
   14001ca65:	(bad)  
   14001ca66:	imul   ebp,DWORD PTR [rsi+0x20],0x74616877
   14001ca6d:	and    BYTE PTR [rcx+0x73],ch
   14001ca70:	and    BYTE PTR [rdx+0x65],ah
   14001ca73:	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6420
   14001ca7a:	or     ah,BYTE PTR gs:[rax]
   14001ca7d:	and    BYTE PTR [rax],ah
   14001ca7f:	and    BYTE PTR [rip+0x626f6f6e],ch        # 0x1a27139f3
   14001ca85:	jae    0x14001caf6
   14001ca87:	ins    BYTE PTR es:[rdi],dx
   14001ca88:	gs je  0x14001caf0
   14001ca8b:	or     ah,BYTE PTR [rax]
   14001ca8d:	and    BYTE PTR [rax],ah
   14001ca8f:	and    BYTE PTR [rax],ah
   14001ca91:	and    BYTE PTR [rax],ah
   14001ca93:	and    BYTE PTR [rax],ah
   14001ca95:	and    BYTE PTR [rax],ah
   14001ca97:	rex.R jb 0x14001cb09
   14001ca9a:	jo     0x14001cabc
   14001ca9c:	(bad)  
   14001ca9d:	ins    BYTE PTR es:[rdi],dx
   14001ca9e:	ins    BYTE PTR es:[rdi],dx
   14001ca9f:	and    BYTE PTR [rdi+0x62],ch
   14001caa2:	jae    0x14001cb13
   14001caa4:	ins    BYTE PTR es:[rdi],dx
   14001caa5:	gs je  0x14001cb0d
   14001caa8:	and    BYTE PTR [rbx+0x74],dh
   14001caab:	jb     0x14001cb16
   14001caad:	outs   dx,BYTE PTR ds:[rsi]
   14001caae:	addr32 jae 0x14001cabb
   14001cab1:	and    BYTE PTR [rax],ah
   14001cab3:	and    BYTE PTR [rax],ah
   14001cab5:	sub    eax,0x662d7274
   14001caba:	jne    0x14001cb2a
   14001cabc:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001cac0:	outs   dx,BYTE PTR ds:[rsi]
   14001cac1:	and    BYTE PTR [rsi+0x61],ch
   14001cac4:	ins    DWORD PTR es:[rdi],dx
   14001cac5:	or     ah,BYTE PTR gs:[rax]
   14001cac8:	and    BYTE PTR [rax],ah
   14001caca:	and    BYTE PTR [rax],ah
   14001cacc:	and    BYTE PTR [rax],ah
   14001cace:	and    BYTE PTR [rax],ah
   14001cad0:	and    BYTE PTR [rax],ah
   14001cad2:	outs   dx,BYTE PTR ds:[rsi]
   14001cad3:	(bad)  
   14001cad4:	ins    DWORD PTR es:[rdi],dx
   14001cad5:	sub    BYTE PTR gs:[rcx],ch
   14001cad8:	and    BYTE PTR [rbp+0x61],ch
   14001cadb:	jns    0x14001cafd
   14001cadd:	(bad)  
   14001cade:	and    BYTE PTR gs:[rbp+0x73],dh
   14001cae2:	gs and BYTE PTR fs:[rcx+0x6e],ch
   14001cae7:	jae    0x14001cb5d
   14001cae9:	gs (bad) 
   14001caeb:	and    BYTE PTR fs:[rdi+0x66],ch
   14001caef:	and    BYTE PTR [rdx+rsi*2+0x28],dh
   14001caf3:	sub    DWORD PTR [rdx],ecx
   14001caf5:	and    BYTE PTR [rax],ah
   14001caf7:	and    BYTE PTR [rax],ah
   14001caf9:	sub    eax,0x6e617274
   14001cafe:	jae    0x14001cb6c
   14001cb00:	(bad)  
   14001cb01:	je     0x14001cb68
   14001cb03:	sub    eax,0x636e7566
   14001cb08:	je     0x14001cb73
   14001cb0a:	outs   dx,DWORD PTR ds:[rsi]
   14001cb0b:	outs   dx,BYTE PTR ds:[rsi]
   14001cb0c:	and    BYTE PTR [rsi+0x61],ch
   14001cb0f:	ins    DWORD PTR es:[rdi],dx
   14001cb10:	or     ah,BYTE PTR gs:[rax]
   14001cb13:	and    BYTE PTR [rax],ah
   14001cb15:	and    BYTE PTR [rax],ah
   14001cb17:	and    BYTE PTR [rax],ah
   14001cb19:	and    BYTE PTR [rax],ah
   14001cb1b:	and    BYTE PTR [rax],ah
   14001cb1d:	outs   dx,BYTE PTR ds:[rsi]
   14001cb1e:	(bad)  
   14001cb1f:	ins    DWORD PTR es:[rdi],dx
   14001cb20:	sub    BYTE PTR gs:[rcx],ch
   14001cb23:	and    BYTE PTR [rbp+0x61],ch
   14001cb26:	jns    0x14001cb48
   14001cb28:	(bad)  
   14001cb29:	and    BYTE PTR gs:[rbp+0x73],dh
   14001cb2d:	gs and BYTE PTR fs:[rcx+0x6e],ch
   14001cb32:	jae    0x14001cba8
   14001cb34:	gs (bad) 
   14001cb36:	and    BYTE PTR fs:[rdi+0x66],ch
   14001cb3a:	and    BYTE PTR [rdx+rsi*2+0x61],dh
   14001cb3e:	outs   dx,BYTE PTR ds:[rsi]
   14001cb3f:	jae    0x14001cbad
   14001cb41:	(bad)  
   14001cb42:	je     0x14001cba9
   14001cb44:	sub    BYTE PTR [rcx],ch
   14001cb46:	or     al,BYTE PTR [rax]
	...
   14001cb50:	and    al,BYTE PTR [rip+0x41993]        # 0x14005e4e9
   14001cb56:	add    BYTE PTR [rax],al
   14001cb58:	in     al,0x1d
   14001cb5a:	add    al,BYTE PTR [rax]
   14001cb5c:	add    DWORD PTR [rax],eax
   14001cb5e:	add    BYTE PTR [rax],al
   14001cb60:	mov    esp,0x600021d
   14001cb65:	add    BYTE PTR [rax],al
   14001cb67:	add    BYTE PTR [rsi+rbx*1],al
   14001cb6a:	add    al,BYTE PTR [rax]
   14001cb6c:	and    BYTE PTR [rax],al
   14001cb6e:	add    BYTE PTR [rax],al
   14001cb70:	add    BYTE PTR [rax],al
   14001cb72:	add    BYTE PTR [rax],al
   14001cb74:	add    DWORD PTR [rax],eax
	...
   14001cb7e:	add    BYTE PTR [rax],al
   14001cb80:	and    al,BYTE PTR [rip+0x41993]        # 0x14005e519
   14001cb86:	add    BYTE PTR [rax],al
   14001cb88:	cwde   
   14001cb89:	push   rax
   14001cb8a:	add    al,BYTE PTR [rax]
   14001cb8c:	add    al,BYTE PTR [rax]
   14001cb8e:	add    BYTE PTR [rax],al
   14001cb90:	pop    rsp
   14001cb91:	(bad)  
   14001cb92:	add    al,BYTE PTR [rax]
   14001cb94:	or     DWORD PTR [rax],eax
   14001cb96:	add    BYTE PTR [rax],al
   14001cb98:	lods   al,BYTE PTR ds:[rsi]
   14001cb99:	(bad)  
   14001cb9a:	add    al,BYTE PTR [rax]
   14001cb9c:	cmp    BYTE PTR [rax],al
   14001cb9e:	add    BYTE PTR [rax],al
   14001cba0:	add    BYTE PTR [rax],al
   14001cba2:	add    BYTE PTR [rax],al
   14001cba4:	add    DWORD PTR [rax],eax
	...
   14001cbae:	add    BYTE PTR [rax],al
   14001cbb0:	and    al,BYTE PTR [rip+0x21993]        # 0x14003e549
   14001cbb6:	add    BYTE PTR [rax],al
   14001cbb8:	or     BYTE PTR [rcx],ah
   14001cbba:	add    al,BYTE PTR [rax]
   14001cbbc:	add    DWORD PTR [rax],eax
   14001cbbe:	add    BYTE PTR [rax],al
   14001cbc0:	sbb    BYTE PTR [rdi],bl
   14001cbc2:	add    al,BYTE PTR [rax]
   14001cbc4:	(bad)  
   14001cbc5:	add    BYTE PTR [rax],al
   14001cbc7:	add    BYTE PTR [rax+0x1f],al
   14001cbca:	add    al,BYTE PTR [rax]
   14001cbcc:	and    BYTE PTR [rax],al
   14001cbce:	add    BYTE PTR [rax],al
   14001cbd0:	add    BYTE PTR [rax],al
   14001cbd2:	add    BYTE PTR [rax],al
   14001cbd4:	add    DWORD PTR [rax],eax
	...
   14001cbde:	add    BYTE PTR [rax],al
   14001cbe0:	and    al,BYTE PTR [rip+0x11993]        # 0x14002e579
   14001cbe6:	add    BYTE PTR [rax],al
   14001cbe8:	rcr    BYTE PTR [rdi],1
   14001cbea:	add    al,BYTE PTR [rax]
	...
   14001cbf4:	add    eax,DWORD PTR [rax]
   14001cbf6:	add    BYTE PTR [rax],al
   14001cbf8:	fcomp  DWORD PTR [rdi]
   14001cbfa:	add    al,BYTE PTR [rax]
   14001cbfc:	and    BYTE PTR [rax],al
   14001cbfe:	add    BYTE PTR [rax],al
   14001cc00:	add    BYTE PTR [rax],al
   14001cc02:	add    BYTE PTR [rax],al
   14001cc04:	add    DWORD PTR [rax],eax
	...
   14001cc0e:	add    BYTE PTR [rax],al
   14001cc10:	and    al,BYTE PTR [rip+0x41993]        # 0x14005e5a9
   14001cc16:	add    BYTE PTR [rax],al
   14001cc18:	in     al,0x1d
   14001cc1a:	add    al,BYTE PTR [rax]
   14001cc1c:	add    al,BYTE PTR [rax]
   14001cc1e:	add    BYTE PTR [rax],al
   14001cc20:	sbb    al,0x20
   14001cc22:	add    al,BYTE PTR [rax]
   14001cc24:	or     DWORD PTR [rax],eax
   14001cc26:	add    BYTE PTR [rax],al
   14001cc28:	ins    BYTE PTR es:[rdi],dx
   14001cc29:	and    BYTE PTR [rdx],al
   14001cc2b:	add    BYTE PTR [rax],ah
   14001cc2d:	add    BYTE PTR [rax],al
   14001cc2f:	add    BYTE PTR [rax],al
   14001cc31:	add    BYTE PTR [rax],al
   14001cc33:	add    BYTE PTR [rcx],al
	...
   14001cc3d:	add    BYTE PTR [rax],al
   14001cc3f:	add    BYTE PTR [rdx],ah
   14001cc41:	add    eax,0x21993
   14001cc46:	add    BYTE PTR [rax],al
   14001cc48:	or     BYTE PTR [rcx],ah
   14001cc4a:	add    al,BYTE PTR [rax]
   14001cc4c:	add    DWORD PTR [rax],eax
   14001cc4e:	add    BYTE PTR [rax],al
   14001cc50:	loopne 0x14001cc72
   14001cc52:	add    al,BYTE PTR [rax]
   14001cc54:	(bad)  
   14001cc55:	add    BYTE PTR [rax],al
   14001cc57:	add    BYTE PTR [rax],bl
   14001cc59:	and    DWORD PTR [rdx],eax
   14001cc5b:	add    BYTE PTR [rax],ah
   14001cc5d:	add    BYTE PTR [rax],al
   14001cc5f:	add    BYTE PTR [rax],al
   14001cc61:	add    BYTE PTR [rax],al
   14001cc63:	add    BYTE PTR [rcx],al
	...
   14001cc6d:	add    BYTE PTR [rax],al
   14001cc6f:	add    BYTE PTR [rdx],ah
   14001cc71:	add    eax,0x61993
   14001cc76:	add    BYTE PTR [rax],al
   14001cc78:	mov    esp,0x2000221
   14001cc7d:	add    BYTE PTR [rax],al
   14001cc7f:	add    BYTE PTR [rcx+riz*1+0x2],ch
   14001cc83:	add    BYTE PTR [rdx],cl
   14001cc85:	add    BYTE PTR [rax],al
   14001cc87:	add    ah,ch
   14001cc89:	and    DWORD PTR [rdx],eax
   14001cc8b:	add    BYTE PTR [rax],ah
   14001cc8d:	add    BYTE PTR [rax],al
   14001cc8f:	add    BYTE PTR [rax],al
   14001cc91:	add    BYTE PTR [rax],al
   14001cc93:	add    BYTE PTR [rcx],al
	...
   14001cc9d:	add    BYTE PTR [rax],al
   14001cc9f:	add    BYTE PTR [rdx],ah
   14001cca1:	add    eax,0x41993
   14001cca6:	add    BYTE PTR [rax],al
   14001cca8:	push   rax
   14001cca9:	and    al,BYTE PTR [rdx]
	...
   14001ccb3:	add    BYTE PTR [rsi],al
   14001ccb5:	add    BYTE PTR [rax],al
   14001ccb7:	add    BYTE PTR [rax+0x22],dh
   14001ccba:	add    al,BYTE PTR [rax]
   14001ccbc:	and    BYTE PTR [rax],al
   14001ccbe:	add    BYTE PTR [rax],al
   14001ccc0:	add    BYTE PTR [rax],al
   14001ccc2:	add    BYTE PTR [rax],al
   14001ccc4:	add    DWORD PTR [rax],eax
	...
   14001ccce:	add    BYTE PTR [rax],al
   14001ccd0:	and    al,BYTE PTR [rip+0x31993]        # 0x14004e669
   14001ccd6:	add    BYTE PTR [rax],al
   14001ccd8:	(bad)  
   14001ccd9:	and    al,BYTE PTR [rdx]
	...
   14001cce3:	add    BYTE PTR [rip+0xffffffffec000000],al        # 0x12c01cce9
   14001cce9:	and    al,BYTE PTR [rdx]
   14001cceb:	add    BYTE PTR [rax],ah
   14001cced:	add    BYTE PTR [rax],al
   14001ccef:	add    BYTE PTR [rax],al
   14001ccf1:	add    BYTE PTR [rax],al
   14001ccf3:	add    BYTE PTR [rcx],al
	...
   14001ccfd:	add    BYTE PTR [rax],al
   14001ccff:	add    BYTE PTR [rdx],ah
   14001cd01:	add    eax,0x171993
   14001cd06:	add    BYTE PTR [rax],al
   14001cd08:	cmp    BYTE PTR [rbx],ah
   14001cd0a:	add    al,BYTE PTR [rax]
	...
   14001cd14:	and    BYTE PTR [rax],al
   14001cd16:	add    BYTE PTR [rax],al
   14001cd18:	lock and eax,DWORD PTR [rdx]
   14001cd1b:	add    al,al
   14001cd1d:	add    BYTE PTR [rax],al
   14001cd1f:	add    BYTE PTR [rax],al
   14001cd21:	add    BYTE PTR [rax],al
   14001cd23:	add    BYTE PTR [rcx],al
   14001cd25:	add    BYTE PTR [rax],al
   14001cd27:	add    BYTE PTR [rax+0x79],dh
   14001cd2a:	ins    BYTE PTR es:[rdi],dx
   14001cd2b:	jne    0x14001cd9d
   14001cd2d:	fs (bad) 
   14001cd2f:	je     0x14001cd96
   14001cd31:	xor    eax,0x72726520
   14001cd36:	outs   dx,DWORD PTR ds:[rsi]
   14001cd37:	jb     0x14001cd73
   14001cd39:	and    BYTE PTR [rbx+0x61],al
   14001cd3c:	outs   dx,BYTE PTR ds:[rsi]
   14001cd3d:	outs   dx,BYTE PTR ds:[rsi]
   14001cd3e:	outs   dx,DWORD PTR ds:[rsi]
   14001cd3f:	je     0x14001cd61
   14001cd41:	jae    0x14001cda4
   14001cd43:	jbe    0x14001cdaa
   14001cd45:	and    BYTE PTR [rdi],ah
   14001cd47:	and    eax,0x203a2773
   14001cd4c:	and    eax,0x55000a73
   14001cd51:	jo     0x14001cdb7
   14001cd53:	(bad)  
   14001cd54:	je     0x14001cdbf
   14001cd56:	outs   dx,BYTE PTR ds:[rsi]
   14001cd57:	and    BYTE PTR [edi],ah
   14001cd5a:	and    eax,0x2e2e2773
   14001cd5f:	or     al,BYTE PTR cs:[rax]
	...
   14001cd6e:	add    BYTE PTR [rax],al
   14001cd70:	and    al,BYTE PTR [rip+0x4a1993]        # 0x1404be709
   14001cd76:	add    BYTE PTR [rax],al
   14001cd78:	sbb    al,0x25
   14001cd7a:	add    al,BYTE PTR [rax]
	...
   14001cd84:	cdq    
   14001cd85:	add    BYTE PTR [rax],al
   14001cd87:	add    BYTE PTR [rdi+riz*1+0x2],ch
   14001cd8b:	add    BYTE PTR [rax+0x2],cl
   14001cd8e:	add    BYTE PTR [rax],al
   14001cd90:	add    BYTE PTR [rax],al
   14001cd92:	add    BYTE PTR [rax],al
   14001cd94:	add    DWORD PTR [rax],eax
   14001cd96:	add    BYTE PTR [rax],al
   14001cd98:	jo     0x14001ce13
   14001cd9a:	ins    BYTE PTR es:[rdi],dx
   14001cd9b:	jne    0x14001ce0d
   14001cd9d:	fs (bad) 
   14001cd9f:	je     0x14001ce06
   14001cda1:	xor    eax,0x72657620
   14001cda6:	jae    0x14001ce11
   14001cda8:	outs   dx,DWORD PTR ds:[rsi]
   14001cda9:	outs   dx,BYTE PTR ds:[rsi]
   14001cdaa:	and    BYTE PTR [rip+0xa73],ah        # 0x14001d823
   14001cdb0:	xor    eax,0x322e362e
   14001cdb5:	add    BYTE PTR [rax],al
   14001cdb7:	add    BYTE PTR [rax+0x79],dh
   14001cdba:	ins    BYTE PTR es:[rdi],dx
   14001cdbb:	jne    0x14001ce2d
   14001cdbd:	fs (bad) 
   14001cdbf:	je     0x14001ce26
   14001cdc1:	xor    eax,0x72726520
   14001cdc6:	outs   dx,DWORD PTR ds:[rsi]
   14001cdc7:	jb     0x14001ce03
   14001cdc9:	and    BYTE PTR [rbx+0x61],al
   14001cdcc:	outs   dx,BYTE PTR ds:[rsi]
   14001cdcd:	outs   dx,BYTE PTR ds:[rsi]
   14001cdce:	outs   dx,DWORD PTR ds:[rsi]
   14001cdcf:	je     0x14001cdf1
   14001cdd1:	outs   dx,DWORD PTR ds:[rsi]
   14001cdd2:	jo     0x14001ce39
   14001cdd4:	outs   dx,BYTE PTR ds:[rsi]
   14001cdd5:	and    BYTE PTR [rsi+0x69],ah
   14001cdd8:	ins    BYTE PTR es:[rdi],dx
   14001cdd9:	and    BYTE PTR gs:[rdi],ah
   14001cddc:	and    eax,0x203a2773
   14001cde1:	and    eax,0xa73
   14001cde6:	add    BYTE PTR [rax],al
   14001cde8:	jo     0x14001ce63
   14001cdea:	ins    BYTE PTR es:[rdi],dx
   14001cdeb:	jne    0x14001ce5d
   14001cded:	fs (bad) 
   14001cdef:	je     0x14001ce56
   14001cdf1:	xor    eax,0x72726520
   14001cdf6:	outs   dx,DWORD PTR ds:[rsi]
   14001cdf7:	jb     0x14001ce33
   14001cdf9:	and    BYTE PTR [rbp+0x69],ch
   14001cdfc:	jae    0x14001ce71
   14001cdfe:	imul   ebp,DWORD PTR [rsi+0x67],0x72742d20
   14001ce05:	(bad)  
   14001ce06:	outs   dx,BYTE PTR ds:[rsi]
   14001ce07:	jae    0x14001ce75
   14001ce09:	(bad)  
   14001ce0a:	je     0x14001ce71
   14001ce0c:	sub    eax,0x636e7566
   14001ce11:	je     0x14001ce7c
   14001ce13:	outs   dx,DWORD PTR ds:[rsi]
   14001ce14:	outs   dx,BYTE PTR ds:[rsi]
   14001ce15:	and    BYTE PTR [rsi+0x61],ch
   14001ce18:	ins    DWORD PTR es:[rdi],dx
   14001ce19:	or     al,BYTE PTR gs:[rax]
   14001ce1c:	add    BYTE PTR [rax],al
   14001ce1e:	add    BYTE PTR [rax],al
   14001ce20:	jo     0x14001ce9b
   14001ce22:	ins    BYTE PTR es:[rdi],dx
   14001ce23:	jne    0x14001ce95
   14001ce25:	fs (bad) 
   14001ce27:	je     0x14001ce8e
   14001ce29:	xor    eax,0x72726520
   14001ce2e:	outs   dx,DWORD PTR ds:[rsi]
   14001ce2f:	jb     0x14001ce6b
   14001ce31:	and    BYTE PTR [rbp+0x69],ch
   14001ce34:	jae    0x14001cea9
   14001ce36:	imul   ebp,DWORD PTR [rsi+0x67],0x72742d20
   14001ce3d:	sub    eax,0x636e7566
   14001ce42:	je     0x14001cead
   14001ce44:	outs   dx,DWORD PTR ds:[rsi]
   14001ce45:	outs   dx,BYTE PTR ds:[rsi]
   14001ce46:	and    BYTE PTR [rsi+0x61],ch
   14001ce49:	ins    DWORD PTR es:[rdi],dx
   14001ce4a:	or     al,BYTE PTR gs:[rax]
   14001ce4d:	add    BYTE PTR [rax],al
   14001ce4f:	add    BYTE PTR [rax+0x79],dh
   14001ce52:	ja     0x14001ce54
   14001ce54:	jo     0x14001cecf
   14001ce56:	add    BYTE PTR [rax],al
   14001ce58:	jo     0x14001ced3
   14001ce5a:	ins    BYTE PTR es:[rdi],dx
   14001ce5b:	jne    0x14001cecd
   14001ce5d:	fs (bad) 
   14001ce5f:	je     0x14001cec6
   14001ce61:	xor    eax,0x72726520
   14001ce66:	outs   dx,DWORD PTR ds:[rsi]
   14001ce67:	jb     0x14001cea3
   14001ce69:	and    BYTE PTR [rsi+0x69],al
   14001ce6c:	ins    BYTE PTR es:[rdi],dx
   14001ce6d:	and    BYTE PTR gs:[rdi],ah
   14001ce70:	and    eax,0x6c202773
   14001ce75:	(bad)  
   14001ce76:	movsxd ebp,DWORD PTR [rbx+0x73]
   14001ce79:	and    BYTE PTR [rsi],ch
   14001ce7b:	je     0x14001cef0
   14001ce7d:	and    BYTE PTR [rbp+0x78],ah
   14001ce80:	je     0x14001cee7
   14001ce82:	outs   dx,BYTE PTR ds:[rsi]
   14001ce83:	jae    0x14001ceee
   14001ce85:	outs   dx,DWORD PTR ds:[rsi]
   14001ce86:	outs   dx,BYTE PTR ds:[rsi]
   14001ce87:	or     al,BYTE PTR [rax]
   14001ce89:	add    BYTE PTR [rax],al
   14001ce8b:	add    BYTE PTR [rax],al
   14001ce8d:	add    BYTE PTR [rax],al
   14001ce8f:	add    BYTE PTR [rax+0x79],dh
   14001ce92:	ins    BYTE PTR es:[rdi],dx
   14001ce93:	jne    0x14001cf05
   14001ce95:	fs (bad) 
   14001ce97:	je     0x14001cefe
   14001ce99:	xor    eax,0x72617720
   14001ce9e:	outs   dx,BYTE PTR ds:[rsi]
   14001ce9f:	imul   ebp,DWORD PTR [rsi+0x67],0x6f46203a
   14001cea6:	jb     0x14001cec8
   14001cea8:	jae    0x14001cf19
   14001ceaa:	ins    DWORD PTR es:[rdi],dx
   14001ceab:	and    BYTE PTR gs:[rdx+0x65],dh
   14001ceaf:	(bad)  
   14001ceb0:	jae    0x14001cf21
   14001ceb2:	outs   dx,BYTE PTR ds:[rsi]
   14001ceb3:	sub    al,0x20
   14001ceb5:	rex.WB and BYTE PTR [r11+0x61],spl
   14001ceb9:	outs   dx,BYTE PTR ds:[rsi]
   14001ceba:	outs   dx,BYTE PTR ds:[rsi]
   14001cebb:	outs   dx,DWORD PTR ds:[rsi]
   14001cebc:	je     0x14001cede
   14001cebe:	jae    0x14001cf21
   14001cec0:	jbe    0x14001cf27
   14001cec2:	and    BYTE PTR [rdi],ah
   14001cec4:	and    eax,0xa2773
   14001cec9:	add    BYTE PTR [rax],al
   14001cecb:	add    BYTE PTR [rsi],ch
   14001cecd:	je     0x14001cf42
   14001cecf:	add    BYTE PTR [rax+0x79],dh
   14001ced2:	ins    BYTE PTR es:[rdi],dx
   14001ced3:	jne    0x14001cf45
   14001ced5:	fs (bad) 
   14001ced7:	je     0x14001cf3e
   14001ced9:	xor    eax,0x72617720
   14001cede:	outs   dx,BYTE PTR ds:[rsi]
   14001cedf:	imul   ebp,DWORD PTR [rsi+0x67],0x654d203a
   14001cee6:	je     0x14001cf08
   14001cee8:	outs   dx,BYTE PTR ds:[rsi]
   14001cee9:	outs   dx,DWORD PTR ds:[rsi]
   14001ceea:	and    BYTE PTR [rdi],ah
   14001ceec:	push   rsp
   14001ceed:	push   rdx
   14001ceee:	rex.B
   14001ceef:	rex.WRX push rbx
   14001cef1:	rex.WR
   14001cef2:	push   r12
   14001cef4:	rex.WB
   14001cef5:	rex.WRXB
   14001cef6:	rex.WRX push rbx
   14001cef8:	(bad)  
   14001cef9:	and    BYTE PTR [rbp+0x6e],ah
   14001cefc:	je     0x14001cf70
   14001cefe:	jns    0x14001cf20
   14001cf00:	imul   ebp,DWORD PTR [rsi+0x20],0x6a6f7270
   14001cf07:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x66]
   14001cf0c:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x27732527
   14001cf14:	or     al,BYTE PTR [rax]
	...
   14001cf1e:	add    BYTE PTR [rax],al
   14001cf20:	jo     0x14001cf9b
   14001cf22:	ins    BYTE PTR es:[rdi],dx
   14001cf23:	jne    0x14001cf95
   14001cf25:	fs (bad) 
   14001cf27:	je     0x14001cf8e
   14001cf29:	xor    eax,0x72617720
   14001cf2e:	outs   dx,BYTE PTR ds:[rsi]
   14001cf2f:	imul   ebp,DWORD PTR [rsi+0x67],0x6946203a
   14001cf36:	ins    BYTE PTR es:[rdi],dx
   14001cf37:	and    BYTE PTR gs:[rdi],ah
   14001cf3a:	and    eax,0x64202773
   14001cf3f:	outs   dx,DWORD PTR ds:[rsi]
   14001cf40:	gs jae 0x14001cf63
   14001cf43:	outs   dx,BYTE PTR ds:[rsi]
   14001cf44:	outs   dx,DWORD PTR ds:[rsi]
   14001cf45:	je     0x14001cf67
   14001cf47:	ins    BYTE PTR es:[rdi],dx
   14001cf48:	outs   dx,DWORD PTR ds:[rsi]
   14001cf49:	outs   dx,DWORD PTR ds:[rsi]
   14001cf4a:	imul   esp,DWORD PTR [rax],0x6c
   14001cf4d:	imul   ebp,DWORD PTR [rbx+0x65],0x70206120
   14001cf54:	jb     0x14001cfc5
   14001cf56:	push   0x65
   14001cf58:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
   14001cf5c:	imul   ebp,DWORD PTR [rbp+riz*2+0xa],0x0
   14001cf64:	rex.RX
   14001cf65:	rex.WRXB push r10
   14001cf67:	rex.WRB push r11
   14001cf69:	add    BYTE PTR [rax],al
   14001cf6b:	add    BYTE PTR [rax],al
   14001cf6d:	add    BYTE PTR [rax],al
   14001cf6f:	add    BYTE PTR [rbx+0x4f],al
   14001cf72:	rex.R
   14001cf73:	rex.RB
   14001cf74:	rex.XB
   14001cf75:	rex.RX
   14001cf76:	rex.WRXB push r10
   14001cf78:	push   rbx
   14001cf79:	push   rdx
   14001cf7a:	rex.XB add BYTE PTR [r8],al
   14001cf7d:	add    BYTE PTR [rax],al
   14001cf7f:	add    BYTE PTR [rbx+0x4f],al
   14001cf82:	rex.R
   14001cf83:	rex.RB
   14001cf84:	rex.XB
   14001cf85:	rex.RX
   14001cf86:	rex.WRXB push r10
   14001cf88:	push   rsp
   14001cf89:	push   rdx
   14001cf8a:	add    BYTE PTR [rax],al
   14001cf8c:	add    BYTE PTR [rax],al
   14001cf8e:	add    BYTE PTR [rax],al
   14001cf90:	rex.R
   14001cf91:	rex.RB
   14001cf92:	rex.RX
   14001cf93:	push   r13
   14001cf95:	rex.WR push rsp
   14001cf97:	rex.XB
   14001cf98:	rex.WRXB
   14001cf99:	rex.R
   14001cf9a:	rex.RB
   14001cf9b:	rex.XB add BYTE PTR [r8],al
   14001cf9e:	add    BYTE PTR [rax],al
   14001cfa0:	rex.XB
   14001cfa1:	rex.WRXB
   14001cfa2:	rex.R
   14001cfa3:	rex.RB
   14001cfa4:	rex.XB add BYTE PTR [r8],al
   14001cfa7:	add    BYTE PTR [rdx+rdx*2+0x41],dl
   14001cfab:	rex.WRX push rbx
   14001cfad:	rex.WR
   14001cfae:	push   r12
   14001cfb0:	rex.WB
   14001cfb1:	rex.WRXB
   14001cfb2:	rex.WRX push rbx
   14001cfb4:	add    BYTE PTR [rax],al
   14001cfb6:	add    BYTE PTR [rax],al
   14001cfb8:	push   rbx
   14001cfb9:	rex.WRXB push r13
   14001cfbb:	push   rdx
   14001cfbc:	rex.XB
   14001cfbd:	rex.RB push r11
   14001cfbf:	add    BYTE PTR [rip+0x6e617274],ch        # 0x1ae634239
   14001cfc5:	jae    0x14001d033
   14001cfc7:	(bad)  
   14001cfc8:	je     0x14001d02f
   14001cfca:	sub    eax,0x636e7566
   14001cfcf:	je     0x14001d03a
   14001cfd1:	outs   dx,DWORD PTR ds:[rsi]
   14001cfd2:	outs   dx,BYTE PTR ds:[rsi]
   14001cfd3:	add    BYTE PTR [rax],al
   14001cfd5:	add    BYTE PTR [rax],al
   14001cfd7:	add    BYTE PTR [rip+0x662d7274],ch        # 0x1a62f4251
   14001cfdd:	jne    0x14001d04d
   14001cfdf:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001cfe3:	outs   dx,BYTE PTR ds:[rsi]
   14001cfe4:	add    BYTE PTR [rax],al
   14001cfe6:	add    BYTE PTR [rax],al
   14001cfe8:	sub    eax,0x73726576
   14001cfed:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14001cff4:	add    BYTE PTR [rax],al
   14001cff6:	add    BYTE PTR [rax],al
   14001cff8:	sub    eax,0x62726576
   14001cffd:	outs   dx,DWORD PTR ds:[rsi]
   14001cffe:	jae    0x14001d065
	...
   14001d008:	sub    eax,0x626f6f6e
   14001d00d:	jae    0x14001d07e
   14001d00f:	ins    BYTE PTR es:[rdi],dx
   14001d010:	gs je  0x14001d078
   14001d013:	add    BYTE PTR [rip+0x706c6568],ch        # 0x1b06e3581
   14001d019:	add    BYTE PTR [rax],al
   14001d01b:	add    BYTE PTR [rip+0x40007374],ch        # 0x180024395
   14001d021:	fs gs data16 (bad) 
   14001d025:	jne    0x14001d093
   14001d027:	je     0x14001d029
   14001d029:	add    BYTE PTR [rax],al
   14001d02b:	add    BYTE PTR [rax],al
   14001d02d:	add    BYTE PTR [rax],al
   14001d02f:	add    al,ah
   14001d031:	mov    eax,0x14001
	...
   14001d03e:	add    BYTE PTR [rax],al
   14001d040:	sar    BYTE PTR [rax+0x14001],1
   14001d046:	add    BYTE PTR [rax],al
   14001d048:	enter  0x1b8,0x40
   14001d04c:	add    DWORD PTR [rax],eax
	...
   14001d056:	add    BYTE PTR [rax],al
   14001d058:	sar    BYTE PTR [rax+0x14001],1
   14001d05e:	add    BYTE PTR [rax],al
   14001d060:	enter  0x1b8,0x40
   14001d064:	add    DWORD PTR [rax],eax
	...
   14001d06e:	add    BYTE PTR [rax],al
   14001d070:	sar    BYTE PTR [rax+0x14001],1
   14001d076:	add    BYTE PTR [rax],al
   14001d078:	enter  0x1b8,0x40
   14001d07c:	add    DWORD PTR [rax],eax
   14001d07e:	add    BYTE PTR [rax],al
   14001d080:	sar    BYTE PTR [rax+0x14001],0x0
	...
   14001d08f:	add    al,dl
   14001d091:	mov    eax,0x14001
   14001d096:	add    BYTE PTR [rax],al
   14001d098:	mov    eax,0x14001b8
   14001d09d:	add    BYTE PTR [rax],al
   14001d09f:	add    al,cl
   14001d0a1:	mov    eax,0x14001
	...
   14001d0ae:	add    BYTE PTR [rax],al
   14001d0b0:	sar    BYTE PTR [rax+0x14001],1
   14001d0b6:	add    BYTE PTR [rax],al
   14001d0b8:	mov    eax,0x14001b8
   14001d0bd:	add    BYTE PTR [rax],al
   14001d0bf:	add    al,cl
   14001d0c1:	mov    eax,0x14001
	...
   14001d0ce:	add    BYTE PTR [rax],al
   14001d0d0:	sar    BYTE PTR [rax+0x14001],1
   14001d0d6:	add    BYTE PTR [rax],al
   14001d0d8:	mov    eax,0x14001b8
   14001d0dd:	add    BYTE PTR [rax],al
   14001d0df:	add    al,cl
   14001d0e1:	mov    eax,0x14001
	...
   14001d0ee:	add    BYTE PTR [rax],al
   14001d0f0:	sar    BYTE PTR [rax+0x14001],1
   14001d0f6:	add    BYTE PTR [rax],al
   14001d0f8:	mov    eax,0x14001b8
   14001d0fd:	add    BYTE PTR [rax],al
   14001d0ff:	add    al,cl
   14001d101:	mov    eax,0x14001
	...
   14001d10e:	add    BYTE PTR [rax],al
   14001d110:	sar    BYTE PTR [rax+0x14001],1
   14001d116:	add    BYTE PTR [rax],al
   14001d118:	mov    eax,0x14001b8
   14001d11d:	add    BYTE PTR [rax],al
   14001d11f:	add    al,cl
   14001d121:	mov    eax,0x14001
	...
   14001d12e:	add    BYTE PTR [rax],al
   14001d130:	sar    BYTE PTR [rax+0x14001],1
   14001d136:	add    BYTE PTR [rax],al
   14001d138:	mov    eax,0x14001b8
   14001d13d:	add    BYTE PTR [rax],al
   14001d13f:	add    al,cl
   14001d141:	mov    eax,0x14001
	...
   14001d14e:	add    BYTE PTR [rax],al
   14001d150:	sar    BYTE PTR [rax+0x14001],1
   14001d156:	add    BYTE PTR [rax],al
   14001d158:	mov    al,0xb8
   14001d15a:	add    DWORD PTR [rax+0x1],eax
   14001d15d:	add    BYTE PTR [rax],al
   14001d15f:	add    al,cl
   14001d161:	mov    eax,0x14001
	...
   14001d16e:	add    BYTE PTR [rax],al
   14001d170:	sar    BYTE PTR [rax+0x14001],1
   14001d176:	add    BYTE PTR [rax],al
   14001d178:	cwde   
   14001d179:	mov    eax,0x14001
   14001d17e:	add    BYTE PTR [rax],al
   14001d180:	enter  0x1b8,0x40
   14001d184:	add    DWORD PTR [rax],eax
	...
   14001d18e:	add    BYTE PTR [rax],al
   14001d190:	sar    BYTE PTR [rax+0x14001],1
   14001d196:	add    BYTE PTR [rax],al
   14001d198:	mov    eax,0x14001b8
   14001d19d:	add    BYTE PTR [rax],al
   14001d19f:	add    BYTE PTR [rax+0x14001b8],dl
   14001d1a5:	add    BYTE PTR [rax],al
   14001d1a7:	add    al,cl
   14001d1a9:	mov    eax,0x14001
	...
   14001d1b6:	add    BYTE PTR [rax],al
   14001d1b8:	sar    BYTE PTR [rax+0x14001],1
   14001d1be:	add    BYTE PTR [rax],al
   14001d1c0:	js     0x14001d17a
   14001d1c2:	add    DWORD PTR [rax+0x1],eax
   14001d1c5:	add    BYTE PTR [rax],al
   14001d1c7:	add    BYTE PTR [rax-0x48],bl
   14001d1ca:	add    DWORD PTR [rax+0x1],eax
   14001d1cd:	add    BYTE PTR [rax],al
   14001d1cf:	add    al,cl
   14001d1d1:	mov    eax,0x14001
	...
   14001d1de:	add    BYTE PTR [rax],al
   14001d1e0:	sar    BYTE PTR [rax+0x14001],0x0
   14001d1e7:	add    al,dl
   14001d1e9:	mov    eax,0x14001
   14001d1ee:	add    BYTE PTR [rax],al
   14001d1f0:	mov    eax,0x14001b8
   14001d1f5:	add    BYTE PTR [rax],al
   14001d1f7:	add    BYTE PTR [rax-0x48],dl
   14001d1fa:	add    DWORD PTR [rax+0x1],eax
   14001d1fd:	add    BYTE PTR [rax],al
   14001d1ff:	add    al,cl
   14001d201:	mov    eax,0x14001
	...
   14001d20e:	add    BYTE PTR [rax],al
   14001d210:	sar    BYTE PTR [rax+0x14001],0x0
   14001d217:	add    al,dl
   14001d219:	mov    eax,0x14001
   14001d21e:	add    BYTE PTR [rax],al
   14001d220:	mov    eax,0x14001b8
   14001d225:	add    BYTE PTR [rax],al
   14001d227:	add    BYTE PTR [rax-0x48],al
   14001d22a:	add    DWORD PTR [rax+0x1],eax
   14001d22d:	add    BYTE PTR [rax],al
   14001d22f:	add    al,cl
   14001d231:	mov    eax,0x14001
   14001d236:	add    BYTE PTR [rax],al
   14001d238:	and    BYTE PTR [rax+0x14001],bh
	...
   14001d246:	add    BYTE PTR [rax],al
   14001d248:	adc    eax,DWORD PTR [rax]
   14001d24a:	add    BYTE PTR [rax],al
   14001d24c:	and    eax,0x5b000000
   14001d251:	add    BYTE PTR [rax],al
   14001d253:	add    BYTE PTR [rdx+0x0],bh
   14001d256:	add    BYTE PTR [rax],al
   14001d258:	add    DWORD PTR [rax],eax
   14001d25a:	add    BYTE PTR [rax],al
   14001d25c:	add    BYTE PTR [rax],al
   14001d25e:	add    BYTE PTR [rax],al
   14001d260:	add    eax,DWORD PTR [rax]
   14001d262:	add    BYTE PTR [rax],al
   14001d264:	or     DWORD PTR [rax],eax
   14001d266:	add    BYTE PTR [rax],al
   14001d268:	adc    BYTE PTR [rax],al
   14001d26a:	add    BYTE PTR [rax],al
   14001d26c:	adc    al,BYTE PTR [rax]
   14001d26e:	add    BYTE PTR [rax],al
   14001d270:	adc    eax,0x19000000
   14001d275:	add    BYTE PTR [rax],al
   14001d277:	add    BYTE PTR [rbx],ah
   14001d279:	add    BYTE PTR [rax],al
   14001d27b:	add    BYTE PTR [rip+0x32000000],ch        # 0x17201d281
   14001d281:	add    BYTE PTR [rax],al
   14001d283:	add    BYTE PTR [rax+rax*1],dh
   14001d286:	add    BYTE PTR [rax],al
   14001d288:	cmp    eax,DWORD PTR [rax]
   14001d28a:	add    BYTE PTR [rax],al
   14001d28c:	cmp    al,0x0
   14001d28e:	add    BYTE PTR [rax],al
   14001d290:	rex.X add BYTE PTR [rax],al
   14001d293:	add    BYTE PTR [rax+rax*1+0x0],cl
   14001d297:	add    BYTE PTR [rbx+0x0],dl
   14001d29a:	add    BYTE PTR [rax],al
   14001d29c:	pop    rcx
   14001d29d:	add    BYTE PTR [rax],al
   14001d29f:	add    BYTE PTR [rax+0x0],dh
   14001d2a2:	add    BYTE PTR [rax],al
   14001d2a4:	js     0x14001d2a6
   14001d2a6:	add    BYTE PTR [rax],al
   14001d2a8:	jns    0x14001d2aa
   14001d2aa:	add    BYTE PTR [rax],al
   14001d2ac:	test   BYTE PTR [rax],al
   14001d2ae:	add    BYTE PTR [rax],al
   14001d2b0:	mov    al,BYTE PTR [rax]
   14001d2b2:	add    BYTE PTR [rax],al
   14001d2b4:	mov    eax,DWORD PTR [rax]
   14001d2b6:	add    BYTE PTR [rax],al
   14001d2b8:	add    DWORD PTR [rax],eax
   14001d2ba:	add    BYTE PTR [rax],al
   14001d2bc:	add    BYTE PTR [rax],al
   14001d2be:	add    BYTE PTR [rax],al
   14001d2c0:	add    al,BYTE PTR [rax]
   14001d2c2:	add    BYTE PTR [rax],al
   14001d2c4:	add    al,0x0
   14001d2c6:	add    BYTE PTR [rax],al
   14001d2c8:	add    eax,0x6000000
   14001d2cd:	add    BYTE PTR [rax],al
   14001d2cf:	add    BYTE PTR [rdi],al
   14001d2d1:	add    BYTE PTR [rax],al
   14001d2d3:	add    BYTE PTR [rdx],cl
   14001d2d5:	add    BYTE PTR [rax],al
   14001d2d7:	add    BYTE PTR [rbx],cl
   14001d2d9:	add    BYTE PTR [rax],al
   14001d2db:	add    BYTE PTR [rax+rax*1],cl
   14001d2de:	add    BYTE PTR [rax],al
   14001d2e0:	or     eax,0xe000000
   14001d2e5:	add    BYTE PTR [rax],al
   14001d2e7:	add    BYTE PTR [rdi],cl
   14001d2e9:	add    BYTE PTR [rax],al
   14001d2eb:	add    BYTE PTR [rcx],dl
   14001d2ed:	add    BYTE PTR [rax],al
   14001d2ef:	add    BYTE PTR [rax+rax*1],dl
   14001d2f2:	add    BYTE PTR [rax],al
   14001d2f4:	(bad)  
   14001d2f5:	add    BYTE PTR [rax],al
   14001d2f7:	add    BYTE PTR [rax],bl
   14001d2f9:	add    BYTE PTR [rax],al
   14001d2fb:	add    BYTE PTR [rcx+0x1a000000],dl
   14001d301:	add    BYTE PTR [rax],al
   14001d303:	add    BYTE PTR [rip+0x1e000000],bl        # 0x15e01d309
   14001d309:	add    BYTE PTR [rax],al
   14001d30b:	add    BYTE PTR [rdi],bl
   14001d30d:	add    BYTE PTR [rax],al
   14001d30f:	add    BYTE PTR [rax],ah
   14001d311:	add    BYTE PTR [rax],al
   14001d313:	add    BYTE PTR [rcx],ah
   14001d315:	add    BYTE PTR [rax],al
   14001d317:	add    BYTE PTR [rdx],ah
   14001d319:	add    BYTE PTR [rax],al
   14001d31b:	add    BYTE PTR [rax+rax*1],ah
   14001d31e:	add    BYTE PTR [rax],al
   14001d320:	add    BYTE PTR es:[rax],al
   14001d323:	add    BYTE PTR [rax],ch
   14001d325:	add    BYTE PTR [rax],al
   14001d327:	add    BYTE PTR [rcx],ch
   14001d329:	add    BYTE PTR [rax],al
   14001d32b:	add    BYTE PTR [rdx],ch
   14001d32d:	add    BYTE PTR [rax],al
   14001d32f:	add    BYTE PTR [rbx],ch
   14001d331:	add    BYTE PTR [rax],al
   14001d333:	add    BYTE PTR [rax+rax*1],ch
   14001d336:	add    BYTE PTR [rax],al
   14001d338:	add    BYTE PTR cs:[rax],al
   14001d33b:	add    BYTE PTR [rdi],ch
   14001d33d:	add    BYTE PTR [rax],al
   14001d33f:	add    BYTE PTR [rax],dh
   14001d341:	add    BYTE PTR [rax],al
   14001d343:	add    BYTE PTR [rcx],dh
   14001d345:	add    BYTE PTR [rax],al
   14001d347:	add    BYTE PTR [rbx],dh
   14001d349:	add    BYTE PTR [rax],al
   14001d34b:	add    BYTE PTR [rip+0x36000000],dh        # 0x17601d351
   14001d351:	add    BYTE PTR [rax],al
   14001d353:	add    BYTE PTR [rdx],bh
   14001d355:	add    BYTE PTR [rax],al
   14001d357:	add    BYTE PTR [rip+0x3e000000],bh        # 0x17e01d35d
   14001d35d:	add    BYTE PTR [rax],al
   14001d35f:	add    BYTE PTR [rdi],bh
   14001d361:	add    BYTE PTR [rax],al
   14001d363:	add    BYTE PTR [rax+0x0],al
   14001d366:	add    BYTE PTR [rax],al
   14001d368:	add    BYTE PTR [r8],al
   14001d36b:	add    BYTE PTR [rbx+0x0],al
   14001d36e:	add    BYTE PTR [rax],al
   14001d370:	add    BYTE PTR [rax],r8b
   14001d373:	add    BYTE PTR [rbp+0x0],al
   14001d376:	add    BYTE PTR [rax],al
   14001d378:	rex.RX add BYTE PTR [rax],r8b
   14001d37b:	add    BYTE PTR [rax+0x0],cl
   14001d37e:	add    BYTE PTR [rax],al
   14001d380:	rex.WXB add BYTE PTR [r8],al
   14001d383:	add    BYTE PTR [rbp+0x0],cl
   14001d386:	add    BYTE PTR [rax],al
   14001d388:	push   rax
   14001d389:	add    BYTE PTR [rax],al
   14001d38b:	add    BYTE PTR [rdx+0x0],dl
   14001d38e:	add    BYTE PTR [rax],al
   14001d390:	push   rsp
   14001d391:	add    BYTE PTR [rax],al
   14001d393:	add    BYTE PTR [rbp+0x0],dl
   14001d396:	add    BYTE PTR [rax],al
   14001d398:	lea    eax,[rax]
   14001d39a:	add    BYTE PTR [rax],al
   14001d39c:	push   rsi
   14001d39d:	add    BYTE PTR [rax],al
   14001d39f:	add    BYTE PTR [rdi+0x0],dl
   14001d3a2:	add    BYTE PTR [rax],al
   14001d3a4:	pop    rax
   14001d3a5:	add    BYTE PTR [rax],al
   14001d3a7:	add    BYTE PTR [rbx+0x0],bl
   14001d3aa:	add    BYTE PTR [rax],al
   14001d3ac:	pop    rsp
   14001d3ad:	add    BYTE PTR [rax],al
   14001d3af:	add    BYTE PTR [rbp+0x0],bl
   14001d3b2:	add    BYTE PTR [rax],al
   14001d3b4:	pop    rsi
   14001d3b5:	add    BYTE PTR [rax],al
   14001d3b7:	add    BYTE PTR [rsi+0x0],ah
   14001d3ba:	add    BYTE PTR [rax],al
   14001d3bc:	add    BYTE PTR [eax],al
   14001d3bf:	add    BYTE PTR [rax+0x0],ch
   14001d3c2:	add    BYTE PTR [rax],al
   14001d3c4:	imul   eax,DWORD PTR [rax],0x6a0000
   14001d3ca:	add    BYTE PTR [rax],al
   14001d3cc:	imul   eax,DWORD PTR [rax],0x0
   14001d3cf:	add    BYTE PTR [rsi+0x0],ch
   14001d3d2:	add    BYTE PTR [rax],al
   14001d3d4:	outs   dx,DWORD PTR ds:[rsi]
   14001d3d5:	add    BYTE PTR [rax],al
   14001d3d7:	add    BYTE PTR [rcx+0x0],dh
   14001d3da:	add    BYTE PTR [rax],al
   14001d3dc:	jb     0x14001d3de
   14001d3de:	add    BYTE PTR [rax],al
   14001d3e0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d3e1:	add    BYTE PTR [rax],al
   14001d3e3:	add    BYTE PTR [rax+rax*1+0x0],dh
   14001d3e7:	add    BYTE PTR [rbp+0x0],dh
   14001d3ea:	add    BYTE PTR [rax],al
   14001d3ec:	jbe    0x14001d3ee
   14001d3ee:	add    BYTE PTR [rax],al
   14001d3f0:	ja     0x14001d3f2
   14001d3f2:	add    BYTE PTR [rax],al
   14001d3f4:	jnp    0x14001d3f6
   14001d3f6:	add    BYTE PTR [rax],al
   14001d3f8:	jl     0x14001d3fa
   14001d3fa:	add    BYTE PTR [rax],al
   14001d3fc:	jge    0x14001d3fe
   14001d3fe:	add    BYTE PTR [rax],al
   14001d400:	jle    0x14001d402
   14001d402:	add    BYTE PTR [rax],al
   14001d404:	xchg   edx,eax
   14001d405:	add    BYTE PTR [rax],al
   14001d407:	add    BYTE PTR [rax-0x7d000000],al
   14001d40d:	add    BYTE PTR [rax],al
   14001d40f:	add    BYTE PTR [rbp-0x79000000],al
   14001d415:	add    BYTE PTR [rax],al
   14001d417:	add    BYTE PTR [rax-0x77000000],cl
   14001d41d:	add    BYTE PTR [rax],al
   14001d41f:	add    BYTE PTR [rax+rax*1+0x10000],cl
   14001d426:	add    BYTE PTR [rax],al
   14001d428:	rex.RXB add BYTE PTR [r8],r8b
   14001d42b:	add    BYTE PTR [rcx],al
   14001d42d:	add    BYTE PTR [rax],al
   14001d42f:	add    BYTE PTR [rdi+0x27000000],cl
   14001d435:	add    BYTE PTR [rax],al
   14001d437:	add    BYTE PTR [rdi],dh
   14001d439:	add    BYTE PTR [rax],al
   14001d43b:	add    BYTE PTR [rax],bh
   14001d43d:	add    BYTE PTR [rax],al
   14001d43f:	add    BYTE PTR [rcx],bh
   14001d441:	add    BYTE PTR [rax],al
   14001d443:	add    BYTE PTR [rax+0x4f000000],dl
   14001d449:	add    BYTE PTR [rax],al
   14001d44b:	add    BYTE PTR [rcx+0x0],ah
   14001d44e:	add    BYTE PTR [rax],al
   14001d450:	movsxd eax,DWORD PTR [rax]
   14001d452:	add    BYTE PTR [rax],al
   14001d454:	add    DWORD PTR [rax],eax
   14001d456:	add    BYTE PTR [rax],al
   14001d458:	sbb    al,0x0
   14001d45a:	add    BYTE PTR [rax],al
   14001d45c:	add    DWORD PTR [rax],eax
   14001d45e:	add    BYTE PTR [rax],al
   14001d460:	ins    BYTE PTR es:[rdi],dx
   14001d461:	add    BYTE PTR [rax],al
   14001d463:	add    BYTE PTR [rcx],al
   14001d465:	add    BYTE PTR [rax],al
   14001d467:	add    BYTE PTR [rdx+0x0],cl
   14001d46a:	add    BYTE PTR [rax],al
   14001d46c:	add    DWORD PTR [rax],eax
   14001d46e:	add    BYTE PTR [rax],al
   14001d470:	rex.WB add BYTE PTR [r8],al
   14001d473:	add    BYTE PTR [rcx],al
   14001d475:	add    BYTE PTR [rax],al
   14001d477:	add    BYTE PTR [rsi+0x16000000],cl
   14001d47d:	add    BYTE PTR [rax],al
   14001d47f:	add    BYTE PTR [rbx],bl
   14001d481:	add    BYTE PTR [rax],al
   14001d483:	add    BYTE PTR [rax+0x0],ah
   14001d486:	add    BYTE PTR [rax],al
   14001d488:	add    BYTE PTR fs:[rax],al
   14001d48b:	add    BYTE PTR [rax+rax*1+0x0],ah
   14001d48f:	add    BYTE PTR [rcx+0x1000000],al
   14001d495:	add    BYTE PTR [rax],al
   14001d497:	add    BYTE PTR [rdx+0x0],bl
   14001d49a:	add    BYTE PTR [rax],al
   14001d49c:	add    DWORD PTR [rax],eax
   14001d49e:	add    BYTE PTR [rax],al
   14001d4a0:	pop    rdi
   14001d4a1:	add    BYTE PTR [rax],al
   14001d4a3:	add    BYTE PTR [rdi+0x0],bl
   14001d4a6:	add    BYTE PTR [rax],al
   14001d4a8:	add    DWORD PTR [rax],eax
   14001d4aa:	add    BYTE PTR [rax],al
   14001d4ac:	add    BYTE PTR [rax],al
   14001d4ae:	add    BYTE PTR [rax],al
   14001d4b0:	ins    DWORD PTR es:[rdi],dx
   14001d4b1:	add    BYTE PTR [rax],al
   14001d4b3:	add    BYTE PTR [rcx],al
   14001d4b5:	add    BYTE PTR [rax],al
   14001d4b7:	add    BYTE PTR [rsi+0x0],cl
   14001d4ba:	add    BYTE PTR [rax],al
   14001d4bc:	add    DWORD PTR [rax],eax
   14001d4be:	add    BYTE PTR [rax],al
   14001d4c0:	xchg   BYTE PTR [rax],al
   14001d4c2:	add    BYTE PTR [rax],al
   14001d4c4:	add    DWORD PTR [rax],eax
   14001d4c6:	add    BYTE PTR [rax],al
   14001d4c8:	or     BYTE PTR [rax],al
   14001d4ca:	add    BYTE PTR [rax],al
   14001d4cc:	add    DWORD PTR [rax],eax
	...
   14001d4d6:	add    BYTE PTR [rax],al
   14001d4d8:	(bad)  
   14001d4d9:	add    BYTE PTR [rax],al
   14001d4db:	add    BYTE PTR [rax],al
   14001d4dd:	add    BYTE PTR [rax],al
   14001d4df:	add    BYTE PTR [rdx],ah
   14001d4e1:	add    eax,0x81993
   14001d4e6:	add    BYTE PTR [rax],al
   14001d4e8:	rex.WR sub al,0x2
	...
   14001d4f3:	add    BYTE PTR [rsi],al
   14001d4f5:	add    BYTE PTR [rax],al
   14001d4f7:	add    BYTE PTR [rsp+rbp*1+0x200002],cl
   14001d4fe:	add    BYTE PTR [rax],al
   14001d500:	add    BYTE PTR [rax],al
   14001d502:	add    BYTE PTR [rax],al
   14001d504:	add    DWORD PTR [rax],eax
	...
   14001d50e:	add    BYTE PTR [rax],al
   14001d510:	and    al,BYTE PTR [rip+0x61993]        # 0x14007eea9
   14001d516:	add    BYTE PTR [rax],al
   14001d518:	adc    BYTE PTR [rip+0x10002],ch        # 0x14002d520
   14001d51e:	add    BYTE PTR [rax],al
   14001d520:	call   0x14801d751
   14001d525:	add    BYTE PTR [rax],al
   14001d527:	add    BYTE PTR [rax+0x2d],al
   14001d52a:	add    al,BYTE PTR [rax]
   14001d52c:	and    BYTE PTR [rax],al
   14001d52e:	add    BYTE PTR [rax],al
   14001d530:	add    BYTE PTR [rax],al
   14001d532:	add    BYTE PTR [rax],al
   14001d534:	add    DWORD PTR [rax],eax
	...
   14001d53e:	add    BYTE PTR [rax],al
   14001d540:	and    al,BYTE PTR [rip+0x21993]        # 0x14003eed9
   14001d546:	add    BYTE PTR [rax],al
   14001d548:	or     BYTE PTR [rcx],ah
   14001d54a:	add    al,BYTE PTR [rax]
   14001d54c:	add    DWORD PTR [rax],eax
   14001d54e:	add    BYTE PTR [rax],al
   14001d550:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d551:	sub    eax,0x60002
   14001d556:	add    BYTE PTR [rax],al
   14001d558:	int3   
   14001d559:	sub    eax,0x200002
   14001d55e:	add    BYTE PTR [rax],al
   14001d560:	add    BYTE PTR [rax],al
   14001d562:	add    BYTE PTR [rax],al
   14001d564:	add    DWORD PTR [rax],eax
	...
   14001d56e:	add    BYTE PTR [rax],al
   14001d570:	and    al,BYTE PTR [rip+0x81993]        # 0x14009ef09
   14001d576:	add    BYTE PTR [rax],al
   14001d578:	rex.R
   14001d579:	add    al,BYTE PTR cs:[rax]
	...
   14001d584:	(bad)  
   14001d585:	add    BYTE PTR [rax],al
   14001d587:	add    BYTE PTR [rsi+rbp*1+0x200002],al
   14001d58e:	add    BYTE PTR [rax],al
   14001d590:	add    BYTE PTR [rax],al
   14001d592:	add    BYTE PTR [rax],al
   14001d594:	add    DWORD PTR [rax],eax
	...
   14001d59e:	add    BYTE PTR [rax],al
   14001d5a0:	and    al,BYTE PTR [rip+0x21993]        # 0x14003ef39
   14001d5a6:	add    BYTE PTR [rax],al
   14001d5a8:	or     BYTE PTR [rcx],ah
   14001d5aa:	add    al,BYTE PTR [rax]
   14001d5ac:	add    DWORD PTR [rax],eax
   14001d5ae:	add    BYTE PTR [rax],al
   14001d5b0:	loopne 0x14001d5e0
   14001d5b2:	add    al,BYTE PTR [rax]
   14001d5b4:	(bad)  
   14001d5b5:	add    BYTE PTR [rax],al
   14001d5b7:	add    BYTE PTR [rax],cl
   14001d5b9:	(bad)  
   14001d5ba:	add    al,BYTE PTR [rax]
   14001d5bc:	and    BYTE PTR [rax],al
   14001d5be:	add    BYTE PTR [rax],al
   14001d5c0:	add    BYTE PTR [rax],al
   14001d5c2:	add    BYTE PTR [rax],al
   14001d5c4:	add    DWORD PTR [rax],eax
	...
   14001d5ce:	add    BYTE PTR [rax],al
   14001d5d0:	and    al,BYTE PTR [rip+0x391993]        # 0x1403aef69
   14001d5d6:	add    BYTE PTR [rax],al
   14001d5d8:	pop    rsp
   14001d5d9:	(bad)  
   14001d5da:	add    al,BYTE PTR [rax]
	...
   14001d5e4:	rex.X add BYTE PTR [rax],al
   14001d5e7:	add    BYTE PTR [rcx+rsi*1],ah
   14001d5ea:	add    al,BYTE PTR [rax]
   14001d5ec:	and    BYTE PTR [rdx],al
   14001d5ee:	add    BYTE PTR [rax],al
   14001d5f0:	add    BYTE PTR [rax],al
   14001d5f2:	add    BYTE PTR [rax],al
   14001d5f4:	add    DWORD PTR [rax],eax
   14001d5f6:	add    BYTE PTR [rax],al
   14001d5f8:	and    BYTE PTR [rax],ah
   14001d5fa:	and    BYTE PTR [rax],ah
   14001d5fc:	push   rbx
   14001d5fd:	imul   ebp,DWORD PTR [rbp+0x69],0x2d72616c
   14001d604:	je     0x14001d66b
   14001d606:	js     0x14001d67c
   14001d608:	and    BYTE PTR [rax+0x65],ch
   14001d60b:	jne    0x14001d67f
   14001d60d:	imul   esi,DWORD PTR [rbx+0x74],0x70206369
   14001d614:	jb     0x14001d685
   14001d616:	jbe    0x14001d681
   14001d618:	fs gs and BYTE PTR fs:[rip+0x72742064],ah        # 0x1b275f685
   14001d621:	(bad)  
   14001d622:	outs   dx,BYTE PTR ds:[rsi]
   14001d623:	jae    0x14001d691
   14001d625:	(bad)  
   14001d626:	je     0x14001d691
   14001d628:	outs   dx,DWORD PTR ds:[rsi]
   14001d629:	outs   dx,BYTE PTR ds:[rsi]
   14001d62a:	and    eax,0xa73
   14001d62f:	add    BYTE PTR [rax],ah
   14001d631:	and    BYTE PTR [rax],ah
   14001d633:	and    BYTE PTR [rbx+0x61],dl
   14001d636:	ins    DWORD PTR es:[rdi],dx
   14001d637:	gs sub eax,0x74786574
   14001d63d:	and    BYTE PTR [rax+0x65],ch
   14001d640:	jne    0x14001d6b4
   14001d642:	imul   esi,DWORD PTR [rbx+0x74],0x70206369
   14001d649:	jb     0x14001d6ba
   14001d64b:	jbe    0x14001d6b6
   14001d64d:	fs gs and BYTE PTR fs:[rip+0x72742064],ah        # 0x1b275f6ba
   14001d656:	(bad)  
   14001d657:	outs   dx,BYTE PTR ds:[rsi]
   14001d658:	jae    0x14001d6c6
   14001d65a:	(bad)  
   14001d65b:	je     0x14001d6c6
   14001d65d:	outs   dx,DWORD PTR ds:[rsi]
   14001d65e:	outs   dx,BYTE PTR ds:[rsi]
   14001d65f:	and    eax,0xa73
   14001d664:	add    BYTE PTR [rax],al
   14001d666:	add    BYTE PTR [rax],al
   14001d668:	and    BYTE PTR [rax],ah
   14001d66a:	and    BYTE PTR [rax],ah
   14001d66c:	rex.WRX jne 0x14001d6dc
   14001d66f:	(bad)  
   14001d670:	gs jb  0x14001d693
   14001d673:	push   0x69727565
   14001d678:	jae    0x14001d6ee
   14001d67a:	imul   esp,DWORD PTR [rbx+0x20],0x766f7270
   14001d681:	imul   esp,DWORD PTR [rbp+riz*2+0x64],0x20642520
   14001d689:	je     0x14001d6fd
   14001d68b:	(bad)  
   14001d68c:	outs   dx,BYTE PTR ds:[rsi]
   14001d68d:	jae    0x14001d6fb
   14001d68f:	(bad)  
   14001d690:	je     0x14001d6fb
   14001d692:	outs   dx,DWORD PTR ds:[rsi]
   14001d693:	outs   dx,BYTE PTR ds:[rsi]
   14001d694:	and    eax,0x20000a73
   14001d699:	and    BYTE PTR [rax],ah
   14001d69b:	and    BYTE PTR [rdx+0x65],dl
   14001d69e:	ins    DWORD PTR es:[rdi],dx
   14001d69f:	outs   dx,DWORD PTR ds:[rsi]
   14001d6a0:	jbe    0x14001d707
   14001d6a2:	and    BYTE PTR fs:[rip+0x626f2064],ah        # 0x1a270f70d
   14001d6a9:	jae    0x14001d71a
   14001d6ab:	ins    BYTE PTR es:[rdi],dx
   14001d6ac:	gs je  0x14001d714
   14001d6af:	and    BYTE PTR [rbp+0x6e],dh
   14001d6b2:	je     0x14001d726
   14001d6b4:	(bad)  
   14001d6b5:	outs   dx,BYTE PTR ds:[rsi]
   14001d6b6:	jae    0x14001d724
   14001d6b8:	(bad)  
   14001d6b9:	je     0x14001d720
   14001d6bb:	and    BYTE PTR fs:[rbp+0x6e],ah
   14001d6bf:	je     0x14001d733
   14001d6c1:	and    eax,0xa73
   14001d6c6:	add    BYTE PTR [rax],al
   14001d6c8:	and    BYTE PTR [rax],ah
   14001d6ca:	and    BYTE PTR [rax],ah
   14001d6cc:	rex.WXB
   14001d6cd:	gs jo  0x14001d744
   14001d6d0:	and    BYTE PTR [rip+0x626f2064],ah        # 0x1a270f73a
   14001d6d6:	jae    0x14001d747
   14001d6d8:	ins    BYTE PTR es:[rdi],dx
   14001d6d9:	gs je  0x14001d741
   14001d6dc:	and    BYTE PTR [rdx+rsi*2+0x61],dh
   14001d6e0:	outs   dx,BYTE PTR ds:[rsi]
   14001d6e1:	jae    0x14001d74f
   14001d6e3:	(bad)  
   14001d6e4:	je     0x14001d74f
   14001d6e6:	outs   dx,DWORD PTR ds:[rsi]
   14001d6e7:	outs   dx,BYTE PTR ds:[rsi]
   14001d6e8:	and    eax,0xa73
   14001d6ed:	add    BYTE PTR [rax],al
   14001d6ef:	add    BYTE PTR [rax],ah
   14001d6f1:	and    BYTE PTR [rax],ah
   14001d6f3:	and    BYTE PTR [rdx+0x65],dl
   14001d6f6:	ins    DWORD PTR es:[rdi],dx
   14001d6f7:	outs   dx,DWORD PTR ds:[rsi]
   14001d6f8:	jbe    0x14001d75f
   14001d6fa:	and    BYTE PTR fs:[rip+0x626f2064],ah        # 0x1a270f765
   14001d701:	jae    0x14001d772
   14001d703:	ins    BYTE PTR es:[rdi],dx
   14001d704:	gs je  0x14001d76c
   14001d707:	and    BYTE PTR [rbp+0x6e],ah
   14001d70a:	je     0x14001d77e
   14001d70c:	and    eax,0x69000a73
   14001d711:	gs jae 0x14001d714
   14001d714:	jns    0x14001d716
   14001d716:	add    BYTE PTR [rax],al
   14001d718:	and    BYTE PTR [rax],ah
   14001d71a:	and    BYTE PTR [rax],ah
   14001d71c:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14001d71e:	jne    0x14001d78e
   14001d720:	and    BYTE PTR fs:[rip+0x6f732064],ah        # 0x1af74f78b
   14001d727:	jne    0x14001d79b
   14001d729:	movsxd esp,DWORD PTR [rbp+0x20]
   14001d72c:	je     0x14001d793
   14001d72e:	js     0x14001d7a4
   14001d730:	and    eax,0x25282073
   14001d735:	and    BYTE PTR fs:[rsi+0x65],ch
   14001d739:	ja     0x14001d75b
   14001d73b:	(bad)  
   14001d73c:	outs   dx,BYTE PTR ds:[rsi]
   14001d73d:	and    BYTE PTR fs:[rip+0x6c612064],ah        # 0x1ac62f7a8
   14001d744:	jb     0x14001d7ab
   14001d746:	(bad)  
   14001d747:	fs jns 0x14001d76a
   14001d74a:	gs js  0x14001d7b6
   14001d74d:	jae    0x14001d7c3
   14001d74f:	imul   ebp,DWORD PTR [rsi+0x67],0xa29
   14001d756:	add    BYTE PTR [rax],al
   14001d758:	jae    0x14001d75a
   14001d75a:	add    BYTE PTR [rax],al
   14001d75c:	add    BYTE PTR [rax],al
   14001d75e:	add    BYTE PTR [rax],al
   14001d760:	loopne 0x14001d71a
   14001d762:	add    DWORD PTR [rax+0x1],eax
	...
   14001d76d:	add    BYTE PTR [rax],al
   14001d76f:	add    al,dl
   14001d771:	mov    eax,0x14001
   14001d776:	add    BYTE PTR [rax],al
   14001d778:	enter  0x1b8,0x40
   14001d77c:	add    DWORD PTR [rax],eax
	...
   14001d786:	add    BYTE PTR [rax],al
   14001d788:	sar    BYTE PTR [rax+0x14001],1
   14001d78e:	add    BYTE PTR [rax],al
   14001d790:	enter  0x1b8,0x40
   14001d794:	add    DWORD PTR [rax],eax
	...
   14001d79e:	add    BYTE PTR [rax],al
   14001d7a0:	sar    BYTE PTR [rax+0x14001],1
   14001d7a6:	add    BYTE PTR [rax],al
   14001d7a8:	enter  0x1b8,0x40
   14001d7ac:	add    DWORD PTR [rax],eax
   14001d7ae:	add    BYTE PTR [rax],al
   14001d7b0:	sar    BYTE PTR [rax+0x14001],0x0
	...
   14001d7bf:	add    al,dl
   14001d7c1:	mov    eax,0x14001
   14001d7c6:	add    BYTE PTR [rax],al
   14001d7c8:	mov    eax,0x14001b8
   14001d7cd:	add    BYTE PTR [rax],al
   14001d7cf:	add    al,cl
   14001d7d1:	mov    eax,0x14001
	...
   14001d7de:	add    BYTE PTR [rax],al
   14001d7e0:	sar    BYTE PTR [rax+0x14001],1
   14001d7e6:	add    BYTE PTR [rax],al
   14001d7e8:	mov    eax,0x14001b8
   14001d7ed:	add    BYTE PTR [rax],al
   14001d7ef:	add    al,cl
   14001d7f1:	mov    eax,0x14001
	...
   14001d7fe:	add    BYTE PTR [rax],al
   14001d800:	sar    BYTE PTR [rax+0x14001],1
   14001d806:	add    BYTE PTR [rax],al
   14001d808:	mov    eax,0x14001b8
   14001d80d:	add    BYTE PTR [rax],al
   14001d80f:	add    al,cl
   14001d811:	mov    eax,0x14001
	...
   14001d81e:	add    BYTE PTR [rax],al
   14001d820:	sar    BYTE PTR [rax+0x14001],1
   14001d826:	add    BYTE PTR [rax],al
   14001d828:	mov    eax,0x14001b8
   14001d82d:	add    BYTE PTR [rax],al
   14001d82f:	add    al,cl
   14001d831:	mov    eax,0x14001
	...
   14001d83e:	add    BYTE PTR [rax],al
   14001d840:	sar    BYTE PTR [rax+0x14001],1
   14001d846:	add    BYTE PTR [rax],al
   14001d848:	mov    eax,0x14001b8
   14001d84d:	add    BYTE PTR [rax],al
   14001d84f:	add    al,cl
   14001d851:	mov    eax,0x14001
	...
   14001d85e:	add    BYTE PTR [rax],al
   14001d860:	sar    BYTE PTR [rax+0x14001],1
   14001d866:	add    BYTE PTR [rax],al
   14001d868:	mov    eax,0x14001b8
   14001d86d:	add    BYTE PTR [rax],al
   14001d86f:	add    al,cl
   14001d871:	mov    eax,0x14001
	...
   14001d87e:	add    BYTE PTR [rax],al
   14001d880:	sar    BYTE PTR [rax+0x14001],1
   14001d886:	add    BYTE PTR [rax],al
   14001d888:	mov    al,0xb8
   14001d88a:	add    DWORD PTR [rax+0x1],eax
   14001d88d:	add    BYTE PTR [rax],al
   14001d88f:	add    al,cl
   14001d891:	mov    eax,0x14001
	...
   14001d89e:	add    BYTE PTR [rax],al
   14001d8a0:	sar    BYTE PTR [rax+0x14001],1
   14001d8a6:	add    BYTE PTR [rax],al
   14001d8a8:	cwde   
   14001d8a9:	mov    eax,0x14001
   14001d8ae:	add    BYTE PTR [rax],al
   14001d8b0:	enter  0x1b8,0x40
   14001d8b4:	add    DWORD PTR [rax],eax
	...
   14001d8be:	add    BYTE PTR [rax],al
   14001d8c0:	sar    BYTE PTR [rax+0x14001],1
   14001d8c6:	add    BYTE PTR [rax],al
   14001d8c8:	mov    eax,0x14001b8
   14001d8cd:	add    BYTE PTR [rax],al
   14001d8cf:	add    BYTE PTR [rax+0x14001b8],dl
   14001d8d5:	add    BYTE PTR [rax],al
   14001d8d7:	add    al,cl
   14001d8d9:	mov    eax,0x14001
	...
   14001d8e6:	add    BYTE PTR [rax],al
   14001d8e8:	sar    BYTE PTR [rax+0x14001],1
   14001d8ee:	add    BYTE PTR [rax],al
   14001d8f0:	js     0x14001d8aa
   14001d8f2:	add    DWORD PTR [rax+0x1],eax
   14001d8f5:	add    BYTE PTR [rax],al
   14001d8f7:	add    BYTE PTR [rax-0x48],bl
   14001d8fa:	add    DWORD PTR [rax+0x1],eax
   14001d8fd:	add    BYTE PTR [rax],al
   14001d8ff:	add    al,cl
   14001d901:	mov    eax,0x14001
	...
   14001d90e:	add    BYTE PTR [rax],al
   14001d910:	sar    BYTE PTR [rax+0x14001],0x0
   14001d917:	add    al,dl
   14001d919:	mov    eax,0x14001
   14001d91e:	add    BYTE PTR [rax],al
   14001d920:	mov    eax,0x14001b8
   14001d925:	add    BYTE PTR [rax],al
   14001d927:	add    BYTE PTR [rax-0x48],dl
   14001d92a:	add    DWORD PTR [rax+0x1],eax
   14001d92d:	add    BYTE PTR [rax],al
   14001d92f:	add    al,cl
   14001d931:	mov    eax,0x14001
	...
   14001d93e:	add    BYTE PTR [rax],al
   14001d940:	sar    BYTE PTR [rax+0x14001],0x0
   14001d947:	add    al,dl
   14001d949:	mov    eax,0x14001
   14001d94e:	add    BYTE PTR [rax],al
   14001d950:	mov    eax,0x14001b8
   14001d955:	add    BYTE PTR [rax],al
   14001d957:	add    BYTE PTR [rax-0x48],al
   14001d95a:	add    DWORD PTR [rax+0x1],eax
   14001d95d:	add    BYTE PTR [rax],al
   14001d95f:	add    al,cl
   14001d961:	mov    eax,0x14001
   14001d966:	add    BYTE PTR [rax],al
   14001d968:	and    BYTE PTR [rax+0x14001],bh
	...
   14001d976:	add    BYTE PTR [rax],al
   14001d978:	adc    eax,DWORD PTR [rax]
   14001d97a:	add    BYTE PTR [rax],al
   14001d97c:	and    eax,0x5b000000
   14001d981:	add    BYTE PTR [rax],al
   14001d983:	add    BYTE PTR [rdx+0x0],bh
   14001d986:	add    BYTE PTR [rax],al
   14001d988:	add    DWORD PTR [rax],eax
   14001d98a:	add    BYTE PTR [rax],al
   14001d98c:	add    BYTE PTR [rax],al
   14001d98e:	add    BYTE PTR [rax],al
   14001d990:	add    eax,DWORD PTR [rax]
   14001d992:	add    BYTE PTR [rax],al
   14001d994:	or     DWORD PTR [rax],eax
   14001d996:	add    BYTE PTR [rax],al
   14001d998:	adc    BYTE PTR [rax],al
   14001d99a:	add    BYTE PTR [rax],al
   14001d99c:	adc    al,BYTE PTR [rax]
   14001d99e:	add    BYTE PTR [rax],al
   14001d9a0:	adc    eax,0x19000000
   14001d9a5:	add    BYTE PTR [rax],al
   14001d9a7:	add    BYTE PTR [rbx],ah
   14001d9a9:	add    BYTE PTR [rax],al
   14001d9ab:	add    BYTE PTR [rip+0x32000000],ch        # 0x17201d9b1
   14001d9b1:	add    BYTE PTR [rax],al
   14001d9b3:	add    BYTE PTR [rax+rax*1],dh
   14001d9b6:	add    BYTE PTR [rax],al
   14001d9b8:	cmp    eax,DWORD PTR [rax]
   14001d9ba:	add    BYTE PTR [rax],al
   14001d9bc:	cmp    al,0x0
   14001d9be:	add    BYTE PTR [rax],al
   14001d9c0:	rex.X add BYTE PTR [rax],al
   14001d9c3:	add    BYTE PTR [rax+rax*1+0x0],cl
   14001d9c7:	add    BYTE PTR [rbx+0x0],dl
   14001d9ca:	add    BYTE PTR [rax],al
   14001d9cc:	pop    rcx
   14001d9cd:	add    BYTE PTR [rax],al
   14001d9cf:	add    BYTE PTR [rax+0x0],dh
   14001d9d2:	add    BYTE PTR [rax],al
   14001d9d4:	js     0x14001d9d6
   14001d9d6:	add    BYTE PTR [rax],al
   14001d9d8:	jns    0x14001d9da
   14001d9da:	add    BYTE PTR [rax],al
   14001d9dc:	test   BYTE PTR [rax],al
   14001d9de:	add    BYTE PTR [rax],al
   14001d9e0:	mov    al,BYTE PTR [rax]
   14001d9e2:	add    BYTE PTR [rax],al
   14001d9e4:	mov    eax,DWORD PTR [rax]
   14001d9e6:	add    BYTE PTR [rax],al
   14001d9e8:	add    DWORD PTR [rax],eax
   14001d9ea:	add    BYTE PTR [rax],al
   14001d9ec:	add    BYTE PTR [rax],al
   14001d9ee:	add    BYTE PTR [rax],al
   14001d9f0:	add    al,BYTE PTR [rax]
   14001d9f2:	add    BYTE PTR [rax],al
   14001d9f4:	add    al,0x0
   14001d9f6:	add    BYTE PTR [rax],al
   14001d9f8:	add    eax,0x6000000
   14001d9fd:	add    BYTE PTR [rax],al
   14001d9ff:	add    BYTE PTR [rdi],al
   14001da01:	add    BYTE PTR [rax],al
   14001da03:	add    BYTE PTR [rdx],cl
   14001da05:	add    BYTE PTR [rax],al
   14001da07:	add    BYTE PTR [rbx],cl
   14001da09:	add    BYTE PTR [rax],al
   14001da0b:	add    BYTE PTR [rax+rax*1],cl
   14001da0e:	add    BYTE PTR [rax],al
   14001da10:	or     eax,0xe000000
   14001da15:	add    BYTE PTR [rax],al
   14001da17:	add    BYTE PTR [rdi],cl
   14001da19:	add    BYTE PTR [rax],al
   14001da1b:	add    BYTE PTR [rcx],dl
   14001da1d:	add    BYTE PTR [rax],al
   14001da1f:	add    BYTE PTR [rax+rax*1],dl
   14001da22:	add    BYTE PTR [rax],al
   14001da24:	(bad)  
   14001da25:	add    BYTE PTR [rax],al
   14001da27:	add    BYTE PTR [rax],bl
   14001da29:	add    BYTE PTR [rax],al
   14001da2b:	add    BYTE PTR [rcx+0x1a000000],dl
   14001da31:	add    BYTE PTR [rax],al
   14001da33:	add    BYTE PTR [rip+0x1e000000],bl        # 0x15e01da39
   14001da39:	add    BYTE PTR [rax],al
   14001da3b:	add    BYTE PTR [rdi],bl
   14001da3d:	add    BYTE PTR [rax],al
   14001da3f:	add    BYTE PTR [rax],ah
   14001da41:	add    BYTE PTR [rax],al
   14001da43:	add    BYTE PTR [rcx],ah
   14001da45:	add    BYTE PTR [rax],al
   14001da47:	add    BYTE PTR [rdx],ah
   14001da49:	add    BYTE PTR [rax],al
   14001da4b:	add    BYTE PTR [rax+rax*1],ah
   14001da4e:	add    BYTE PTR [rax],al
   14001da50:	add    BYTE PTR es:[rax],al
   14001da53:	add    BYTE PTR [rax],ch
   14001da55:	add    BYTE PTR [rax],al
   14001da57:	add    BYTE PTR [rcx],ch
   14001da59:	add    BYTE PTR [rax],al
   14001da5b:	add    BYTE PTR [rdx],ch
   14001da5d:	add    BYTE PTR [rax],al
   14001da5f:	add    BYTE PTR [rbx],ch
   14001da61:	add    BYTE PTR [rax],al
   14001da63:	add    BYTE PTR [rax+rax*1],ch
   14001da66:	add    BYTE PTR [rax],al
   14001da68:	add    BYTE PTR cs:[rax],al
   14001da6b:	add    BYTE PTR [rdi],ch
   14001da6d:	add    BYTE PTR [rax],al
   14001da6f:	add    BYTE PTR [rax],dh
   14001da71:	add    BYTE PTR [rax],al
   14001da73:	add    BYTE PTR [rcx],dh
   14001da75:	add    BYTE PTR [rax],al
   14001da77:	add    BYTE PTR [rbx],dh
   14001da79:	add    BYTE PTR [rax],al
   14001da7b:	add    BYTE PTR [rip+0x36000000],dh        # 0x17601da81
   14001da81:	add    BYTE PTR [rax],al
   14001da83:	add    BYTE PTR [rdx],bh
   14001da85:	add    BYTE PTR [rax],al
   14001da87:	add    BYTE PTR [rip+0x3e000000],bh        # 0x17e01da8d
   14001da8d:	add    BYTE PTR [rax],al
   14001da8f:	add    BYTE PTR [rdi],bh
   14001da91:	add    BYTE PTR [rax],al
   14001da93:	add    BYTE PTR [rax+0x0],al
   14001da96:	add    BYTE PTR [rax],al
   14001da98:	add    BYTE PTR [r8],al
   14001da9b:	add    BYTE PTR [rbx+0x0],al
   14001da9e:	add    BYTE PTR [rax],al
   14001daa0:	add    BYTE PTR [rax],r8b
   14001daa3:	add    BYTE PTR [rbp+0x0],al
   14001daa6:	add    BYTE PTR [rax],al
   14001daa8:	rex.RX add BYTE PTR [rax],r8b
   14001daab:	add    BYTE PTR [rax+0x0],cl
   14001daae:	add    BYTE PTR [rax],al
   14001dab0:	rex.WXB add BYTE PTR [r8],al
   14001dab3:	add    BYTE PTR [rbp+0x0],cl
   14001dab6:	add    BYTE PTR [rax],al
   14001dab8:	push   rax
   14001dab9:	add    BYTE PTR [rax],al
   14001dabb:	add    BYTE PTR [rdx+0x0],dl
   14001dabe:	add    BYTE PTR [rax],al
   14001dac0:	push   rsp
   14001dac1:	add    BYTE PTR [rax],al
   14001dac3:	add    BYTE PTR [rbp+0x0],dl
   14001dac6:	add    BYTE PTR [rax],al
   14001dac8:	lea    eax,[rax]
   14001daca:	add    BYTE PTR [rax],al
   14001dacc:	push   rsi
   14001dacd:	add    BYTE PTR [rax],al
   14001dacf:	add    BYTE PTR [rdi+0x0],dl
   14001dad2:	add    BYTE PTR [rax],al
   14001dad4:	pop    rax
   14001dad5:	add    BYTE PTR [rax],al
   14001dad7:	add    BYTE PTR [rbx+0x0],bl
   14001dada:	add    BYTE PTR [rax],al
   14001dadc:	pop    rsp
   14001dadd:	add    BYTE PTR [rax],al
   14001dadf:	add    BYTE PTR [rbp+0x0],bl
   14001dae2:	add    BYTE PTR [rax],al
   14001dae4:	pop    rsi
   14001dae5:	add    BYTE PTR [rax],al
   14001dae7:	add    BYTE PTR [rsi+0x0],ah
   14001daea:	add    BYTE PTR [rax],al
   14001daec:	add    BYTE PTR [eax],al
   14001daef:	add    BYTE PTR [rax+0x0],ch
   14001daf2:	add    BYTE PTR [rax],al
   14001daf4:	imul   eax,DWORD PTR [rax],0x6a0000
   14001dafa:	add    BYTE PTR [rax],al
   14001dafc:	imul   eax,DWORD PTR [rax],0x0
   14001daff:	add    BYTE PTR [rsi+0x0],ch
   14001db02:	add    BYTE PTR [rax],al
   14001db04:	outs   dx,DWORD PTR ds:[rsi]
   14001db05:	add    BYTE PTR [rax],al
   14001db07:	add    BYTE PTR [rcx+0x0],dh
   14001db0a:	add    BYTE PTR [rax],al
   14001db0c:	jb     0x14001db0e
   14001db0e:	add    BYTE PTR [rax],al
   14001db10:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001db11:	add    BYTE PTR [rax],al
   14001db13:	add    BYTE PTR [rax+rax*1+0x0],dh
   14001db17:	add    BYTE PTR [rbp+0x0],dh
   14001db1a:	add    BYTE PTR [rax],al
   14001db1c:	jbe    0x14001db1e
   14001db1e:	add    BYTE PTR [rax],al
   14001db20:	ja     0x14001db22
   14001db22:	add    BYTE PTR [rax],al
   14001db24:	jnp    0x14001db26
   14001db26:	add    BYTE PTR [rax],al
   14001db28:	jl     0x14001db2a
   14001db2a:	add    BYTE PTR [rax],al
   14001db2c:	jge    0x14001db2e
   14001db2e:	add    BYTE PTR [rax],al
   14001db30:	jle    0x14001db32
   14001db32:	add    BYTE PTR [rax],al
   14001db34:	xchg   edx,eax
   14001db35:	add    BYTE PTR [rax],al
   14001db37:	add    BYTE PTR [rax-0x7d000000],al
   14001db3d:	add    BYTE PTR [rax],al
   14001db3f:	add    BYTE PTR [rbp-0x79000000],al
   14001db45:	add    BYTE PTR [rax],al
   14001db47:	add    BYTE PTR [rax-0x77000000],cl
   14001db4d:	add    BYTE PTR [rax],al
   14001db4f:	add    BYTE PTR [rax+rax*1+0x10000],cl
   14001db56:	add    BYTE PTR [rax],al
   14001db58:	rex.RXB add BYTE PTR [r8],r8b
   14001db5b:	add    BYTE PTR [rcx],al
   14001db5d:	add    BYTE PTR [rax],al
   14001db5f:	add    BYTE PTR [rdi+0x27000000],cl
   14001db65:	add    BYTE PTR [rax],al
   14001db67:	add    BYTE PTR [rdi],dh
   14001db69:	add    BYTE PTR [rax],al
   14001db6b:	add    BYTE PTR [rax],bh
   14001db6d:	add    BYTE PTR [rax],al
   14001db6f:	add    BYTE PTR [rcx],bh
   14001db71:	add    BYTE PTR [rax],al
   14001db73:	add    BYTE PTR [rax+0x4f000000],dl
   14001db79:	add    BYTE PTR [rax],al
   14001db7b:	add    BYTE PTR [rcx+0x0],ah
   14001db7e:	add    BYTE PTR [rax],al
   14001db80:	movsxd eax,DWORD PTR [rax]
   14001db82:	add    BYTE PTR [rax],al
   14001db84:	add    DWORD PTR [rax],eax
   14001db86:	add    BYTE PTR [rax],al
   14001db88:	sbb    al,0x0
   14001db8a:	add    BYTE PTR [rax],al
   14001db8c:	add    DWORD PTR [rax],eax
   14001db8e:	add    BYTE PTR [rax],al
   14001db90:	ins    BYTE PTR es:[rdi],dx
   14001db91:	add    BYTE PTR [rax],al
   14001db93:	add    BYTE PTR [rcx],al
   14001db95:	add    BYTE PTR [rax],al
   14001db97:	add    BYTE PTR [rdx+0x0],cl
   14001db9a:	add    BYTE PTR [rax],al
   14001db9c:	add    DWORD PTR [rax],eax
   14001db9e:	add    BYTE PTR [rax],al
   14001dba0:	rex.WB add BYTE PTR [r8],al
   14001dba3:	add    BYTE PTR [rcx],al
   14001dba5:	add    BYTE PTR [rax],al
   14001dba7:	add    BYTE PTR [rsi+0x16000000],cl
   14001dbad:	add    BYTE PTR [rax],al
   14001dbaf:	add    BYTE PTR [rbx],bl
   14001dbb1:	add    BYTE PTR [rax],al
   14001dbb3:	add    BYTE PTR [rax+0x0],ah
   14001dbb6:	add    BYTE PTR [rax],al
   14001dbb8:	add    BYTE PTR fs:[rax],al
   14001dbbb:	add    BYTE PTR [rax+rax*1+0x0],ah
   14001dbbf:	add    BYTE PTR [rcx+0x1000000],al
   14001dbc5:	add    BYTE PTR [rax],al
   14001dbc7:	add    BYTE PTR [rdx+0x0],bl
   14001dbca:	add    BYTE PTR [rax],al
   14001dbcc:	add    DWORD PTR [rax],eax
   14001dbce:	add    BYTE PTR [rax],al
   14001dbd0:	pop    rdi
   14001dbd1:	add    BYTE PTR [rax],al
   14001dbd3:	add    BYTE PTR [rdi+0x0],bl
   14001dbd6:	add    BYTE PTR [rax],al
   14001dbd8:	add    DWORD PTR [rax],eax
   14001dbda:	add    BYTE PTR [rax],al
   14001dbdc:	add    BYTE PTR [rax],al
   14001dbde:	add    BYTE PTR [rax],al
   14001dbe0:	ins    DWORD PTR es:[rdi],dx
   14001dbe1:	add    BYTE PTR [rax],al
   14001dbe3:	add    BYTE PTR [rcx],al
   14001dbe5:	add    BYTE PTR [rax],al
   14001dbe7:	add    BYTE PTR [rsi+0x0],cl
   14001dbea:	add    BYTE PTR [rax],al
   14001dbec:	add    DWORD PTR [rax],eax
   14001dbee:	add    BYTE PTR [rax],al
   14001dbf0:	xchg   BYTE PTR [rax],al
   14001dbf2:	add    BYTE PTR [rax],al
   14001dbf4:	add    DWORD PTR [rax],eax
   14001dbf6:	add    BYTE PTR [rax],al
   14001dbf8:	or     BYTE PTR [rax],al
   14001dbfa:	add    BYTE PTR [rax],al
   14001dbfc:	add    DWORD PTR [rax],eax
	...
   14001dc06:	add    BYTE PTR [rax],al
   14001dc08:	(bad)  
   14001dc09:	add    BYTE PTR [rax],al
   14001dc0b:	add    BYTE PTR [rax],al
   14001dc0d:	add    BYTE PTR [rax],al
   14001dc0f:	add    BYTE PTR [rdx],ah
   14001dc11:	add    eax,0x81993
   14001dc16:	add    BYTE PTR [rax],al
   14001dc18:	xor    rax,QWORD PTR [rdx]
	...
   14001dc23:	add    BYTE PTR [rcx],dl
   14001dc25:	add    BYTE PTR [rax],al
   14001dc27:	add    BYTE PTR [rax+0x28000233],cl
   14001dc2d:	add    BYTE PTR [rax],al
   14001dc2f:	add    BYTE PTR [rax],al
   14001dc31:	add    BYTE PTR [rax],al
   14001dc33:	add    BYTE PTR [rcx],al
   14001dc35:	add    BYTE PTR [rax],al
   14001dc37:	add    BYTE PTR [rbp+0x6e],ah
   14001dc3a:	movsxd ebp,DWORD PTR [rdi+0x64]
   14001dc3d:	imul   ebp,DWORD PTR [rsi+0x67],0x0
   14001dc44:	jne    0x14001dcba
   14001dc46:	data16 cmp BYTE PTR [rax],al
   14001dc49:	add    BYTE PTR [rax],al
   14001dc4b:	add    BYTE PTR [rax],al
   14001dc4d:	add    BYTE PTR [rax],al
   14001dc4f:	add    BYTE PTR [rdx],ah
   14001dc51:	add    eax,0x31993
   14001dc56:	add    BYTE PTR [rax],al
   14001dc58:	and    al,0x34
   14001dc5a:	add    al,BYTE PTR [rax]
	...
   14001dc64:	(bad)  
   14001dc65:	add    BYTE PTR [rax],al
   14001dc67:	add    BYTE PTR [rsp+rsi*1],bh
   14001dc6a:	add    al,BYTE PTR [rax]
   14001dc6c:	and    BYTE PTR [rax],al
   14001dc6e:	add    BYTE PTR [rax],al
   14001dc70:	add    BYTE PTR [rax],al
   14001dc72:	add    BYTE PTR [rax],al
   14001dc74:	add    DWORD PTR [rax],eax
   14001dc76:	add    BYTE PTR [rax],al
   14001dc78:	or     eax,0x0
   14001dc7d:	add    BYTE PTR [rax],al
   14001dc7f:	add    BYTE PTR [rdx],ah
   14001dc81:	add    eax,0x41993
   14001dc86:	add    BYTE PTR [rax],al
   14001dc88:	mov    BYTE PTR [rdx+rax*1],dh
	...
   14001dc93:	add    BYTE PTR [rcx],cl
   14001dc95:	add    BYTE PTR [rax],al
   14001dc97:	add    BYTE PTR [rax+0x30000234],ch
   14001dc9d:	add    BYTE PTR [rax],al
   14001dc9f:	add    BYTE PTR [rax],al
   14001dca1:	add    BYTE PTR [rax],al
   14001dca3:	add    BYTE PTR [rcx],al
	...
   14001dcad:	add    BYTE PTR [rax],al
   14001dcaf:	add    BYTE PTR [rdx],ah
   14001dcb1:	add    eax,0x21993
   14001dcb6:	add    BYTE PTR [rax],al
   14001dcb8:	add    al,0x35
   14001dcba:	add    al,BYTE PTR [rax]
	...
   14001dcc4:	add    eax,DWORD PTR [rax]
   14001dcc6:	add    BYTE PTR [rax],al
   14001dcc8:	adc    al,0x35
   14001dcca:	add    al,BYTE PTR [rax]
   14001dccc:	xor    BYTE PTR [rax],al
   14001dcce:	add    BYTE PTR [rax],al
   14001dcd0:	add    BYTE PTR [rax],al
   14001dcd2:	add    BYTE PTR [rax],al
   14001dcd4:	add    DWORD PTR [rax],eax
   14001dcd6:	add    BYTE PTR [rax],al
   14001dcd8:	and    edi,DWORD PTR es:[rax+0x25]
   14001dcdc:	xor    DWORD PTR [rbx],edi
   14001dcde:	add    BYTE PTR [rax],al
   14001dce0:	cmp    al,0x62
   14001dce2:	jns    0x14001dd58
   14001dce4:	and    BYTE PTR gs:[rsi+0x61],dh
   14001dce8:	ins    BYTE PTR es:[rdi],dx
   14001dce9:	jne    0x14001dd50
   14001dceb:	cmp    eax,0x31257822
   14001dcf0:	and    ch,BYTE PTR [rdi]
   14001dcf2:	add    BYTE PTR ds:[rax],al
	...
   14001dcfd:	add    BYTE PTR [rax],al
   14001dcff:	add    BYTE PTR [rdx],ah
   14001dd01:	add    eax,0x71993
   14001dd06:	add    BYTE PTR [rax],al
   14001dd08:	rex.R xor eax,0x2
   14001dd0e:	add    BYTE PTR [rax],al
   14001dd10:	add    BYTE PTR [rax],al
   14001dd12:	add    BYTE PTR [rax],al
   14001dd14:	(bad)  
   14001dd15:	add    BYTE PTR [rax],al
   14001dd17:	add    BYTE PTR [rbp+rsi*1+0x2],bh
   14001dd1b:	add    BYTE PTR [rax+0x0],al
   14001dd1e:	add    BYTE PTR [rax],al
   14001dd20:	add    BYTE PTR [rax],al
   14001dd22:	add    BYTE PTR [rax],al
   14001dd24:	add    DWORD PTR [rax],eax
   14001dd26:	add    BYTE PTR [rax],al
   14001dd28:	es jno 0x14001dda0
   14001dd2b:	outs   dx,DWORD PTR ds:[rsi]
   14001dd2c:	je     0x14001dd69
   14001dd2e:	add    BYTE PTR [rax],al
   14001dd30:	es (bad) 
   14001dd32:	ins    DWORD PTR es:[rdi],dx
   14001dd33:	jo     0x14001dd70
   14001dd35:	add    BYTE PTR [rax],al
   14001dd37:	add    BYTE PTR [rsi],ah
   14001dd39:	(bad)  
   14001dd3a:	jo     0x14001ddab
   14001dd3c:	jae    0x14001dd79
   14001dd3e:	add    BYTE PTR [rax],al
   14001dd40:	es ins BYTE PTR es:[rdi],dx
   14001dd42:	je     0x14001dd7f
   14001dd44:	add    BYTE PTR [rax],al
   14001dd46:	add    BYTE PTR [rax],al
   14001dd48:	es addr32 je 0x14001dd87
   14001dd4c:	add    BYTE PTR [rax],al
   14001dd4e:	add    BYTE PTR [rax],al
   14001dd50:	and    al,BYTE PTR [rip+0x61993]        # 0x14007f6e9
   14001dd56:	add    BYTE PTR [rax],al
   14001dd58:	add    BYTE PTR [rsi],dh
   14001dd5a:	add    al,BYTE PTR [rax]
	...
   14001dd64:	or     al,BYTE PTR [rax]
   14001dd66:	add    BYTE PTR [rax],al
   14001dd68:	xor    BYTE PTR [rsi],dh
   14001dd6a:	add    al,BYTE PTR [rax]
   14001dd6c:	cmp    BYTE PTR [rax],al
   14001dd6e:	add    BYTE PTR [rax],al
   14001dd70:	add    BYTE PTR [rax],al
   14001dd72:	add    BYTE PTR [rax],al
   14001dd74:	add    DWORD PTR [rax],eax
   14001dd76:	add    BYTE PTR [rax],al
   14001dd78:	adc    al,BYTE PTR [rdx]
   14001dd7b:	rex add DWORD PTR [rax],eax
   14001dd7e:	add    BYTE PTR [rax],al
   14001dd80:	movabs al,ds:0xb00000000140008d
   14001dd89:	add    DWORD PTR ds:[rax+0x1],eax
   14001dd8d:	add    BYTE PTR [rax],al
   14001dd8f:	add    BYTE PTR [rsi+0x140013e],dh
   14001dd95:	add    BYTE PTR [rax],al
   14001dd97:	add    BYTE PTR [rsi+rdi*1+0x14001],bh
   14001dd9e:	add    BYTE PTR [rax],al
   14001dda0:	nop
   14001dda1:	adc    al,0x0
   14001dda3:	rex add DWORD PTR [rax],eax
	...
   14001ddae:	add    BYTE PTR [rax],al
   14001ddb0:	sbb    BYTE PTR [rdx],dl
   14001ddb2:	add    al,BYTE PTR [rax+0x1]
   14001ddb5:	add    BYTE PTR [rax],al
   14001ddb7:	add    BYTE PTR [rax+0x140008d],al
   14001ddbd:	add    BYTE PTR [rax],al
   14001ddbf:	add    BYTE PTR [rsi+0x140013e],al
   14001ddc5:	add    BYTE PTR [rax],al
   14001ddc7:	add    BYTE PTR [rsi+rdi*1+0x14001],cl
   14001ddce:	add    BYTE PTR [rax],al
   14001ddd0:	xchg   edx,eax
   14001ddd1:	add    DWORD PTR ds:[rax+0x1],eax
   14001ddd5:	add    BYTE PTR [rax],al
   14001ddd7:	add    BYTE PTR [rax+0x140013e],bl
   14001dddd:	add    BYTE PTR [rax],al
   14001dddf:	add    BYTE PTR [rsi+0x140013e],bl
   14001dde5:	add    BYTE PTR [rax],al
   14001dde7:	add    BYTE PTR [rsi+rdi*1+0x14001],ah
   14001ddee:	add    BYTE PTR [rax],al
   14001ddf0:	stos   BYTE PTR es:[rdi],al
   14001ddf1:	add    DWORD PTR ds:[rax+0x1],eax
   14001ddf5:	add    BYTE PTR [rax],al
   14001ddf7:	add    BYTE PTR [rax+0x14],ah
   14001ddfa:	add    BYTE PTR [rax+0x1],al
   14001ddfd:	add    BYTE PTR [rax],al
   14001ddff:	add    al,dh
   14001de01:	adc    DWORD PTR [rdx],eax
   14001de03:	rex add DWORD PTR [rax],eax
   14001de06:	add    BYTE PTR [rax],al
   14001de08:	jo     0x14001dd97
   14001de0a:	add    BYTE PTR [rax+0x1],al
   14001de0d:	add    BYTE PTR [rax],al
   14001de0f:	add    BYTE PTR [rax+0x140013e],al
   14001de15:	add    BYTE PTR [rax],al
   14001de17:	add    BYTE PTR [rax],dh
   14001de19:	adc    al,0x0
   14001de1b:	rex add DWORD PTR [rax],eax
   14001de1e:	add    BYTE PTR [rax],al
   14001de20:	enter  0x211,0x40
   14001de24:	add    DWORD PTR [rax],eax
   14001de26:	add    BYTE PTR [rax],al
   14001de28:	mov    al,0x8d
   14001de2a:	add    BYTE PTR [rax+0x1],al
   14001de2d:	add    BYTE PTR [rax],al
   14001de2f:	add    BYTE PTR [rsi+rdi*1+0x1],dh
   14001de33:	rex add DWORD PTR [rax],eax
   14001de36:	add    BYTE PTR [rax],al
   14001de38:	jp     0x14001de78
   14001de3a:	add    DWORD PTR [rax+0x1],eax
   14001de3d:	add    BYTE PTR [rax],al
   14001de3f:	add    BYTE PTR [rax],dl
   14001de41:	adc    al,0x0
   14001de43:	rex add DWORD PTR [rax],eax
	...
   14001de4e:	add    BYTE PTR [rax],al
   14001de50:	movabs al,ds:0x5000000001400211
   14001de59:	movabs eax,ds:0x3ec2000000014000
   14001de62:	add    DWORD PTR [rax+0x1],eax
   14001de65:	add    BYTE PTR [rax],al
   14001de67:	add    BYTE PTR [rax],bh
   14001de69:	add    DWORD PTR ds:[rax+0x1],eax
   14001de6d:	add    BYTE PTR [rax],al
   14001de6f:	add    BYTE PTR [rsi],bh
   14001de71:	add    DWORD PTR ds:[rax+0x1],eax
   14001de75:	add    BYTE PTR [rax],al
   14001de77:	add    BYTE PTR [rsi+rdi*1+0x1],al
   14001de7b:	rex add DWORD PTR [rax],eax
   14001de7e:	add    BYTE PTR [rax],al
   14001de80:	rex.WX
   14001de81:	add    DWORD PTR ds:[rax+0x1],eax
   14001de85:	add    BYTE PTR [rax],al
   14001de87:	add    BYTE PTR [rax-0x72],al
   14001de8a:	add    BYTE PTR [rax+0x1],al
   14001de8d:	add    BYTE PTR [rax],al
   14001de8f:	add    BYTE PTR [rax],al
   14001de91:	stos   DWORD PTR es:[rdi],eax
   14001de92:	add    BYTE PTR [rax+0x1],al
   14001de95:	add    BYTE PTR [rax],al
   14001de97:	add    al,dh
   14001de99:	(bad)  
   14001de9a:	add    BYTE PTR [rax+0x1],al
   14001de9d:	add    BYTE PTR [rax],al
   14001de9f:	add    BYTE PTR [rax+0x3e],dl
   14001dea2:	add    DWORD PTR [rax+0x1],eax
   14001dea5:	add    BYTE PTR [rax],al
   14001dea7:	add    BYTE PTR [rsi+0x3e],dl
   14001deaa:	add    DWORD PTR [rax+0x1],eax
   14001dead:	add    BYTE PTR [rax],al
   14001deaf:	add    BYTE PTR [rsi+rdi*1+0x1],bl
   14001deb3:	rex add DWORD PTR [rax],eax
   14001deb6:	add    BYTE PTR [rax],al
   14001deb8:	(bad)  
   14001deb9:	add    DWORD PTR ds:[rax+0x1],eax
   14001debd:	add    BYTE PTR [rax],al
   14001debf:	add    al,dh
   14001dec1:	adc    BYTE PTR [rdx],al
   14001dec3:	rex add DWORD PTR [rax],eax
   14001dec6:	add    BYTE PTR [rax],al
   14001dec8:	nop
   14001dec9:	lea    eax,[rax]
   14001decb:	rex add DWORD PTR [rax],eax
   14001dece:	add    BYTE PTR [rax],al
   14001ded0:	push   0x140013e
   14001ded5:	add    BYTE PTR [rax],al
   14001ded7:	add    BYTE PTR [rsi+0x3e],ch
   14001deda:	add    DWORD PTR [rax+0x1],eax
   14001dedd:	add    BYTE PTR [rax],al
   14001dedf:	add    al,dl
   14001dee1:	add    DWORD PTR [rax],0x40
   14001dee4:	add    DWORD PTR [rax],eax
   14001dee6:	add    BYTE PTR [rax],al
   14001dee8:	adc    BYTE PTR [rax+rax*1],0x40
   14001deec:	add    DWORD PTR [rax],eax
   14001deee:	add    BYTE PTR [rax],al
   14001def0:	and    al,BYTE PTR [rip+0x81993]        # 0x14009f889
   14001def6:	add    BYTE PTR [rax],al
   14001def8:	test   al,0x36
   14001defa:	add    al,BYTE PTR [rax]
	...
   14001df04:	or     al,BYTE PTR [rax]
   14001df06:	add    BYTE PTR [rax],al
   14001df08:	call   0x16001e143
   14001df0d:	add    BYTE PTR [rax],al
   14001df0f:	add    BYTE PTR [rax],al
   14001df11:	add    BYTE PTR [rax],al
   14001df13:	add    BYTE PTR [rcx],al
	...
   14001df1d:	add    BYTE PTR [rax],al
   14001df1f:	add    BYTE PTR [rdx],ah
   14001df21:	add    eax,0x141993
   14001df26:	add    BYTE PTR [rax],al
   14001df28:	pop    rax
   14001df29:	(bad)  
   14001df2a:	add    al,BYTE PTR [rax]
	...
   14001df34:	sub    DWORD PTR [rax],eax
   14001df36:	add    BYTE PTR [rax],al
   14001df38:	clc    
   14001df39:	(bad)  
   14001df3a:	add    al,BYTE PTR [rax]
   14001df3c:	jo     0x14001df3e
   14001df3e:	add    BYTE PTR [rax],al
   14001df40:	add    BYTE PTR [rax],al
   14001df42:	add    BYTE PTR [rax],al
   14001df44:	add    DWORD PTR [rax],eax
   14001df46:	add    BYTE PTR [rax],al
   14001df48:	outs   dx,DWORD PTR ds:[rsi]
   14001df49:	(bad)
   14001df4e:	je     0x14001dfb5
	...
   14001df58:	jne    0x14001dfc8
   14001df5a:	imul   bp,WORD PTR [rsi+0x69],0x6873
   14001df60:	gs add BYTE PTR fs:[rax],al
   14001df64:	je     0x14001dfdf
   14001df66:	jo     0x14001dfcd
	...
   14001df70:	je     0x14001dfe4
   14001df72:	(bad)  
   14001df73:	outs   dx,BYTE PTR ds:[rsi]
   14001df74:	jae    0x14001dfe2
   14001df76:	(bad)  
   14001df77:	je     0x14001dfe2
   14001df79:	outs   dx,DWORD PTR ds:[rsi]
   14001df7a:	outs   dx,BYTE PTR ds:[rsi]
   14001df7b:	add    BYTE PTR [rax],al
   14001df7d:	add    BYTE PTR [rax],al
   14001df7f:	add    BYTE PTR [rsi+0x69],ah
   14001df82:	ins    BYTE PTR es:[rdi],dx
   14001df83:	outs   dx,BYTE PTR gs:[rsi]
   14001df85:	(bad)  
   14001df86:	ins    DWORD PTR es:[rdi],dx
   14001df87:	add    BYTE PTR gs:[rax],al
   14001df8a:	add    BYTE PTR [rax],al
   14001df8c:	ins    BYTE PTR es:[rdi],dx
   14001df8d:	imul   ebp,DWORD PTR [rsi+0x65],0x0
   14001df94:	add    BYTE PTR [rax],al
   14001df96:	add    BYTE PTR [rax],al
   14001df98:	ins    BYTE PTR es:[rdi],dx
   14001df99:	outs   dx,DWORD PTR ds:[rsi]
   14001df9a:	movsxd esp,DWORD PTR [rcx+0x74]
   14001df9d:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14001dfa4:	add    BYTE PTR [rax],al
   14001dfa6:	add    BYTE PTR [rax],al
   14001dfa8:	outs   dx,BYTE PTR ds:[rsi]
   14001dfa9:	jne    0x14001e018
   14001dfab:	gs jb  0x14001e023
   14001dfae:	jae    0x14001dfb0
   14001dfb0:	jns    0x14001e017
   14001dfb2:	jae    0x14001dfb4
   14001dfb4:	add    BYTE PTR [rax],al
   14001dfb6:	add    BYTE PTR [rax],al
   14001dfb8:	ins    DWORD PTR es:[rdi],dx
   14001dfb9:	gs jae 0x14001e02f
   14001dfbc:	(bad)  
   14001dfbd:	add    BYTE PTR gs:[ebx+0x6f],ah
   14001dfc2:	outs   dx,BYTE PTR ds:[rsi]
   14001dfc3:	je     0x14001e02a
   14001dfc5:	js     0x14001e03b
   14001dfc7:	add    BYTE PTR [rbx+0x6f],dh
   14001dfca:	jne    0x14001e03e
   14001dfcc:	movsxd esp,DWORD PTR [rbp+0x6c]
   14001dfcf:	(bad)  
   14001dfd0:	outs   dx,BYTE PTR ds:[rsi]
   14001dfd1:	addr32 jne 0x14001e035
   14001dfd4:	add    BYTE PTR gs:[eax],al
   14001dfd8:	ins    BYTE PTR es:[rdi],dx
   14001dfd9:	(bad)  
   14001dfda:	outs   dx,BYTE PTR ds:[rsi]
   14001dfdb:	addr32 jne 0x14001e03f
   14001dfde:	add    BYTE PTR gs:[eax],al
   14001dfe2:	add    BYTE PTR [rax],al
   14001dfe4:	push   rsp
   14001dfe5:	push   rbx
   14001dfe6:	add    BYTE PTR [rax],al
   14001dfe8:	js     0x14001dfea
   14001dfea:	add    BYTE PTR [rax],al
   14001dfec:	jbe    0x14001e04f
   14001dfee:	ins    BYTE PTR es:[rdi],dx
   14001dfef:	jne    0x14001e056
   14001dff1:	add    BYTE PTR [rax],al
   14001dff3:	add    BYTE PTR [rdx+0x79],ah
   14001dff6:	je     0x14001e05d
	...
   14001e000:	and    al,BYTE PTR [rip+0x71993]        # 0x14008f999
   14001e006:	add    BYTE PTR [rax],al
   14001e008:	jo     0x14001e043
   14001e00a:	add    al,BYTE PTR [rax]
	...
   14001e014:	or     eax,DWORD PTR [rax]
   14001e016:	add    BYTE PTR [rax],al
   14001e018:	test   al,0x39
   14001e01a:	add    al,BYTE PTR [rax]
   14001e01c:	push   rax
   14001e01d:	add    BYTE PTR [rax],al
   14001e01f:	add    BYTE PTR [rax],al
   14001e021:	add    BYTE PTR [rax],al
   14001e023:	add    BYTE PTR [rcx],al
	...
   14001e02d:	add    BYTE PTR [rax],al
   14001e02f:	add    BYTE PTR [rdx],ah
   14001e031:	add    eax,0xd1993
   14001e036:	add    BYTE PTR [rax],al
   14001e038:	and    al,0x3a
   14001e03a:	add    al,BYTE PTR [rax]
	...
   14001e044:	adc    al,0x0
   14001e046:	add    BYTE PTR [rax],al
   14001e048:	mov    WORD PTR [rdx],?
   14001e04a:	add    al,BYTE PTR [rax]
   14001e04c:	loopne 0x14001e04e
   14001e04e:	add    BYTE PTR [rax],al
   14001e050:	add    BYTE PTR [rax],al
   14001e052:	add    BYTE PTR [rax],al
   14001e054:	add    DWORD PTR [rax],eax
	...
   14001e05e:	add    BYTE PTR [rax],al
   14001e060:	and    al,BYTE PTR [rip+0xa1993]        # 0x1400bf9f9
   14001e066:	add    BYTE PTR [rax],al
   14001e068:	push   rax
   14001e069:	cmp    eax,DWORD PTR [rdx]
	...
   14001e073:	add    BYTE PTR [rsi],cl
   14001e075:	add    BYTE PTR [rax],al
   14001e077:	add    BYTE PTR [rax+0x2800023b],ah
   14001e07d:	add    BYTE PTR [rax],al
   14001e07f:	add    BYTE PTR [rax],al
   14001e081:	add    BYTE PTR [rax],al
   14001e083:	add    BYTE PTR [rcx],al
	...
   14001e08d:	add    BYTE PTR [rax],al
   14001e08f:	add    BYTE PTR [rdx],ah
   14001e091:	add    eax,0x11993
   14001e096:	add    BYTE PTR [rax],al
   14001e098:	sub    al,0x3c
   14001e09a:	add    al,BYTE PTR [rax]
	...
   14001e0a4:	add    eax,DWORD PTR [rax]
   14001e0a6:	add    BYTE PTR [rax],al
   14001e0a8:	xor    al,0x3c
   14001e0aa:	add    al,BYTE PTR [rax]
   14001e0ac:	and    BYTE PTR [rax],al
   14001e0ae:	add    BYTE PTR [rax],al
   14001e0b0:	add    BYTE PTR [rax],al
   14001e0b2:	add    BYTE PTR [rax],al
   14001e0b4:	add    DWORD PTR [rax],eax
	...
   14001e0be:	add    BYTE PTR [rax],al
   14001e0c0:	and    al,BYTE PTR [rip+0x51993]        # 0x14006fa59
   14001e0c6:	add    BYTE PTR [rax],al
   14001e0c8:	enter  0x23c,0x0
   14001e0cc:	add    al,BYTE PTR [rax]
   14001e0ce:	add    BYTE PTR [rax],al
   14001e0d0:	js     0x14001e10e
   14001e0d2:	add    al,BYTE PTR [rax]
   14001e0d4:	or     al,BYTE PTR [rax]
   14001e0d6:	add    BYTE PTR [rax],al
   14001e0d8:	lock cmp al,0x2
   14001e0db:	add    BYTE PTR [rax],bh
   14001e0dd:	add    BYTE PTR [rax],al
   14001e0df:	add    BYTE PTR [rax],al
   14001e0e1:	add    BYTE PTR [rax],al
   14001e0e3:	add    BYTE PTR [rcx],al
	...
   14001e0ed:	add    BYTE PTR [rax],al
   14001e0ef:	add    BYTE PTR [rdx],ah
   14001e0f1:	add    eax,0x51993
   14001e0f6:	add    BYTE PTR [rax],al
   14001e0f8:	mov    eax,0x200023d
   14001e0fd:	add    BYTE PTR [rax],al
   14001e0ff:	add    BYTE PTR [rax+0x3d],ch
   14001e102:	add    al,BYTE PTR [rax]
   14001e104:	or     al,BYTE PTR [rax]
   14001e106:	add    BYTE PTR [rax],al
   14001e108:	loopne 0x14001e147
   14001e10a:	add    al,BYTE PTR [rax]
   14001e10c:	cmp    BYTE PTR [rax],al
   14001e10e:	add    BYTE PTR [rax],al
   14001e110:	add    BYTE PTR [rax],al
   14001e112:	add    BYTE PTR [rax],al
   14001e114:	add    DWORD PTR [rax],eax
	...
   14001e11e:	add    BYTE PTR [rax],al
   14001e120:	and    al,BYTE PTR [rip+0x21993]        # 0x14003fab9
   14001e126:	add    BYTE PTR [rax],al
   14001e128:	pop    rax
   14001e129:	add    al,BYTE PTR ds:[rax]
	...
   14001e134:	add    eax,DWORD PTR [rax]
   14001e136:	add    BYTE PTR [rax],al
   14001e138:	push   0x2000023e
   14001e13d:	add    BYTE PTR [rax],al
   14001e13f:	add    BYTE PTR [rax],al
   14001e141:	add    BYTE PTR [rax],al
   14001e143:	add    BYTE PTR [rcx],al
	...
   14001e14d:	add    BYTE PTR [rax],al
   14001e14f:	add    BYTE PTR [rdx],ah
   14001e151:	add    eax,0x41993
   14001e156:	add    BYTE PTR [rax],al
   14001e158:	in     al,0x1d
   14001e15a:	add    al,BYTE PTR [rax]
   14001e15c:	add    al,BYTE PTR [rax]
   14001e15e:	add    BYTE PTR [rax],al
   14001e160:	lods   al,BYTE PTR ds:[rsi]
   14001e161:	add    al,BYTE PTR ds:[rax]
   14001e164:	or     DWORD PTR [rax],eax
   14001e166:	add    BYTE PTR [rax],al
   14001e168:	cld    
   14001e169:	add    al,BYTE PTR ds:[rax]
   14001e16c:	and    BYTE PTR [rax],al
   14001e16e:	add    BYTE PTR [rax],al
   14001e170:	add    BYTE PTR [rax],al
   14001e172:	add    BYTE PTR [rax],al
   14001e174:	add    DWORD PTR [rax],eax
	...
   14001e17e:	add    BYTE PTR [rax],al
   14001e180:	and    al,BYTE PTR [rip+0x101993]        # 0x14011fb19
   14001e186:	add    BYTE PTR [rax],al
   14001e188:	fdivr  QWORD PTR [rdi]
   14001e18a:	add    al,BYTE PTR [rax]
   14001e18c:	add    al,BYTE PTR [rax]
   14001e18e:	add    BYTE PTR [rax],al
   14001e190:	mov    WORD PTR [rdi],?
   14001e192:	add    al,BYTE PTR [rax]
   14001e194:	or     al,BYTE PTR [rax]
   14001e196:	add    BYTE PTR [rax],al
   14001e198:	pop    rsp
   14001e199:	add    al,BYTE PTR [rax]
   14001e19c:	and    BYTE PTR [rax],al
   14001e19e:	add    BYTE PTR [rax],al
   14001e1a0:	add    BYTE PTR [rax],al
   14001e1a2:	add    BYTE PTR [rax],al
   14001e1a4:	add    DWORD PTR [rax],eax
	...
   14001e1ae:	add    BYTE PTR [rax],al
   14001e1b0:	and    al,BYTE PTR [rip+0x11993]        # 0x14002fb49
   14001e1b6:	add    BYTE PTR [rax],al
   14001e1b8:	enter  0x240,0x0
	...
   14001e1c4:	add    al,BYTE PTR [rax]
   14001e1c6:	add    BYTE PTR [rax],al
   14001e1c8:	rol    BYTE PTR [rax+0x2],1
   14001e1cb:	add    BYTE PTR [rax],ah
   14001e1cd:	add    BYTE PTR [rax],al
   14001e1cf:	add    BYTE PTR [rax],al
   14001e1d1:	add    BYTE PTR [rax],al
   14001e1d3:	add    BYTE PTR [rcx],al
	...
   14001e1dd:	add    BYTE PTR [rax],al
   14001e1df:	add    BYTE PTR [rdx],ah
   14001e1e1:	add    eax,0x21993
   14001e1e6:	add    BYTE PTR [rax],al
   14001e1e8:	clc    
   14001e1e9:	add    al,BYTE PTR [rax]
	...
   14001e1f4:	add    al,0x0
   14001e1f6:	add    BYTE PTR [rax],al
   14001e1f8:	or     BYTE PTR [rcx+0x2],al
   14001e1fb:	add    BYTE PTR [rax],ch
   14001e1fd:	add    BYTE PTR [rax],al
   14001e1ff:	add    BYTE PTR [rax],al
   14001e201:	add    BYTE PTR [rax],al
   14001e203:	add    BYTE PTR [rcx],al
	...
   14001e20d:	add    BYTE PTR [rax],al
   14001e20f:	add    BYTE PTR [rdx],ah
   14001e211:	add    eax,0x11993
   14001e216:	add    BYTE PTR [rax],al
   14001e218:	mov    WORD PTR [rcx+0x2],es
	...
   14001e223:	add    BYTE PTR [rbx],al
   14001e225:	add    BYTE PTR [rax],al
   14001e227:	add    BYTE PTR [rcx+rax*2+0x200002],dl
   14001e22e:	add    BYTE PTR [rax],al
   14001e230:	add    BYTE PTR [rax],al
   14001e232:	add    BYTE PTR [rax],al
   14001e234:	add    DWORD PTR [rax],eax
	...
   14001e23e:	add    BYTE PTR [rax],al
   14001e240:	and    al,BYTE PTR [rip+0x41993]        # 0x14005fbd9
   14001e246:	add    BYTE PTR [rax],al
   14001e248:	int3   
   14001e249:	add    al,BYTE PTR [r8]
	...
   14001e254:	(bad)  
   14001e255:	add    BYTE PTR [rax],al
   14001e257:	add    ah,ch
   14001e259:	add    al,BYTE PTR [r8]
   14001e25c:	and    BYTE PTR [rax],al
   14001e25e:	add    BYTE PTR [rax],al
   14001e260:	add    BYTE PTR [rax],al
   14001e262:	add    BYTE PTR [rax],al
   14001e264:	add    DWORD PTR [rax],eax
	...
   14001e26e:	add    BYTE PTR [rax],al
   14001e270:	and    al,BYTE PTR [rip+0x2b1993]        # 0x1402cfc09
   14001e276:	add    BYTE PTR [rax],al
   14001e278:	pop    rsp
   14001e279:	rex.X add al,BYTE PTR [rax]
	...
   14001e284:	rex.RXB add BYTE PTR [r8],r8b
   14001e287:	add    BYTE PTR [rbx+rax*2+0x2200002],dh
   14001e28e:	add    BYTE PTR [rax],al
   14001e290:	add    BYTE PTR [rax],al
   14001e292:	add    BYTE PTR [rax],al
   14001e294:	add    DWORD PTR [rax],eax
   14001e296:	add    BYTE PTR [rax],al
   14001e298:	outs   dx,BYTE PTR ds:[rsi]
   14001e299:	jne    0x14001e308
   14001e29b:	gs jb  0x14001e313
   14001e29e:	jae    0x14001e306
   14001e2a0:	outs   dx,DWORD PTR ds:[rsi]
   14001e2a1:	jb     0x14001e310
   14001e2a3:	add    BYTE PTR [rax],al
   14001e2a5:	add    BYTE PTR [rax],al
   14001e2a7:	add    BYTE PTR [rcx+0x54],dl
   14001e2aa:	pop    rdi
   14001e2ab:	rex.WR
   14001e2ac:	rex.WB
   14001e2ad:	rex.WRX
   14001e2ae:	rex.RXB push r13
   14001e2b0:	rex.WB push r11
   14001e2b2:	push   rsp
   14001e2b3:	pop    rdi
   14001e2b4:	rex.WB
   14001e2b5:	rex.WRX push rsp
   14001e2b7:	rex.RB push r10
   14001e2b9:	rex.WRX
   14001e2ba:	rex.B
   14001e2bb:	rex.WR pop rdi
   14001e2bd:	rex.XB
   14001e2be:	rex.WRXB
   14001e2bf:	rex.WRX push rsp
   14001e2c1:	rex.RB pop r8
   14001e2c3:	push   rsp
   14001e2c4:	pop    rdi
   14001e2c5:	rex.XB
   14001e2c6:	rex.WRXB
   14001e2c7:	rex.WRB
   14001e2c8:	rex.WRB
   14001e2c9:	rex.RB
   14001e2ca:	rex.WRX push rsp
   14001e2cc:	add    BYTE PTR [rax],al
   14001e2ce:	add    BYTE PTR [rax],al
   14001e2d0:	jae    0x14001e341
   14001e2d2:	jne    0x14001e346
   14001e2d4:	movsxd esp,DWORD PTR [rbp+0x0]
   14001e2d7:	add    BYTE PTR [rsi+0x61],ch
   14001e2da:	ins    DWORD PTR es:[rdi],dx
   14001e2db:	add    BYTE PTR gs:[rax],al
   14001e2de:	add    BYTE PTR [rax],al
   14001e2e0:	fs gs data16 (bad) 
   14001e2e4:	jne    0x14001e352
   14001e2e6:	je     0x14001e34b
   14001e2e8:	outs   dx,DWORD PTR ds:[rsi]
   14001e2e9:	fs movsxd eax,DWORD PTR gs:[rax]
   14001e2ed:	add    BYTE PTR [rax],al
   14001e2ef:	add    BYTE PTR [rbx+0x6f],ah
   14001e2f2:	fs movsxd eax,DWORD PTR gs:[rax]
	...
   14001e2fe:	add    BYTE PTR [rax],al
   14001e300:	and    al,BYTE PTR [rip+0x41993]        # 0x14005fc99
   14001e306:	add    BYTE PTR [rax],al
   14001e308:	add    BYTE PTR [rsi+0x2],al
	...
   14001e313:	add    BYTE PTR [rsi],al
   14001e315:	add    BYTE PTR [rax],al
   14001e317:	add    BYTE PTR [rax],ah
   14001e319:	rex.RX add r8b,BYTE PTR [rax]
   14001e31c:	and    BYTE PTR [rax],al
   14001e31e:	add    BYTE PTR [rax],al
   14001e320:	add    BYTE PTR [rax],al
   14001e322:	add    BYTE PTR [rax],al
   14001e324:	add    DWORD PTR [rax],eax
	...
   14001e32e:	add    BYTE PTR [rax],al
   14001e330:	and    al,BYTE PTR [rip+0x361993]        # 0x14037fcc9
   14001e336:	add    BYTE PTR [rax],al
   14001e338:	jo     0x14001e380
   14001e33a:	add    al,BYTE PTR [rax]
	...
   14001e344:	pop    rax
   14001e345:	add    BYTE PTR [rax],al
   14001e347:	add    BYTE PTR [rax],ah
   14001e349:	rex.W add al,BYTE PTR [rax]
   14001e34c:	add    BYTE PTR [rdx],al
   14001e34e:	add    BYTE PTR [rax],al
   14001e350:	add    BYTE PTR [rax],al
   14001e352:	add    BYTE PTR [rax],al
   14001e354:	add    DWORD PTR [rax],eax
   14001e356:	add    BYTE PTR [rax],al
   14001e358:	cmp    al,0x2f
   14001e35a:	push   rsp
   14001e35b:	push   rbx
   14001e35c:	or     al,BYTE PTR ds:[rax]
   14001e35f:	add    BYTE PTR [rdi+rbp*1],bh
   14001e362:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001e365:	je     0x14001e3cc
   14001e367:	js     0x14001e3dd
   14001e369:	or     al,BYTE PTR ds:[rax]
   14001e36c:	add    BYTE PTR [rax],al
   14001e36e:	add    BYTE PTR [rax],al
   14001e370:	and    BYTE PTR [rax],ah
   14001e372:	and    BYTE PTR [rax],ah
   14001e374:	cmp    al,0x2f
   14001e376:	ins    DWORD PTR es:[rdi],dx
   14001e377:	gs jae 0x14001e3ed
   14001e37a:	(bad)  
   14001e37b:	gs or  al,BYTE PTR ds:[eax]
   14001e380:	cmp    al,0x2f
   14001e382:	je     0x14001e3f6
   14001e384:	(bad)  
   14001e385:	outs   dx,BYTE PTR ds:[rsi]
   14001e386:	jae    0x14001e3f4
   14001e388:	(bad)  
   14001e389:	je     0x14001e3f4
   14001e38b:	outs   dx,DWORD PTR ds:[rsi]
   14001e38c:	outs   dx,BYTE PTR ds:[rsi]
   14001e38d:	or     al,BYTE PTR ds:[rax]
   14001e390:	and    BYTE PTR [rax],ah
   14001e392:	and    BYTE PTR [rax],ah
   14001e394:	and    BYTE PTR [rax],ah
   14001e396:	and    BYTE PTR [rax],ah
	...
   14001e3a0:	cmp    al,0x2f
   14001e3a2:	outs   dx,BYTE PTR ds:[rsi]
   14001e3a3:	jne    0x14001e412
   14001e3a5:	gs jb  0x14001e41d
   14001e3a8:	jae    0x14001e410
   14001e3aa:	outs   dx,DWORD PTR ds:[rsi]
   14001e3ab:	jb     0x14001e41a
   14001e3ad:	or     al,BYTE PTR ds:[rax]
   14001e3b0:	and    BYTE PTR [rax],ah
   14001e3b2:	and    BYTE PTR [rax],ah
   14001e3b4:	and    BYTE PTR [rax],ah
   14001e3b6:	and    BYTE PTR [rax],ah
   14001e3b8:	and    BYTE PTR [rax],ah
   14001e3ba:	and    BYTE PTR [rax],ah
   14001e3bc:	cmp    al,0x6e
   14001e3be:	jne    0x14001e42d
   14001e3c0:	gs jb  0x14001e438
   14001e3c3:	jae    0x14001e42b
   14001e3c5:	outs   dx,DWORD PTR ds:[rsi]
   14001e3c6:	jb     0x14001e435
   14001e3c8:	add    BYTE PTR ds:[rax],al
   14001e3cb:	add    BYTE PTR [rsi],bh
   14001e3cd:	add    BYTE PTR [rax],al
   14001e3cf:	add    BYTE PTR [rax],ah
   14001e3d1:	je     0x14001e44c
   14001e3d3:	jo     0x14001e43a
   14001e3d5:	cmp    eax,0x73626f22
   14001e3da:	outs   dx,DWORD PTR ds:[rsi]
   14001e3db:	ins    BYTE PTR es:[rdi],dx
   14001e3dc:	gs je  0x14001e444
   14001e3df:	and    al,BYTE PTR [rax]
   14001e3e1:	add    BYTE PTR [rax],al
   14001e3e3:	add    BYTE PTR [rax],al
   14001e3e5:	add    BYTE PTR [rax],al
   14001e3e7:	add    BYTE PTR [rax],ah
   14001e3e9:	je     0x14001e464
   14001e3eb:	jo     0x14001e452
   14001e3ed:	cmp    eax,0x666e7522
   14001e3f2:	imul   ebp,DWORD PTR [rsi+0x69],0x64656873
   14001e3f9:	and    al,BYTE PTR [rax]
   14001e3fb:	add    BYTE PTR [rax],al
   14001e3fd:	add    BYTE PTR [rax],al
   14001e3ff:	add    BYTE PTR [rax],ah
   14001e401:	and    BYTE PTR [rax],ah
   14001e403:	and    BYTE PTR [rax],ah
   14001e405:	and    BYTE PTR [rax],ah
   14001e407:	and    BYTE PTR [rsp+rsi*2],bh
   14001e40a:	jb     0x14001e46d
   14001e40c:	outs   dx,BYTE PTR ds:[rsi]
   14001e40d:	jae    0x14001e47b
   14001e40f:	(bad)  
   14001e410:	je     0x14001e47b
   14001e412:	outs   dx,DWORD PTR ds:[rsi]
   14001e413:	outs   dx,BYTE PTR ds:[rsi]
   14001e414:	add    BYTE PTR [rax],al
   14001e416:	add    BYTE PTR [rax],al
   14001e418:	and    BYTE PTR [rax],ah
   14001e41a:	and    BYTE PTR [rax],ah
   14001e41c:	and    BYTE PTR [rax],ah
   14001e41e:	and    BYTE PTR [rax],ah
   14001e420:	cmp    al,0x63
   14001e422:	outs   dx,DWORD PTR ds:[rsi]
   14001e423:	ins    DWORD PTR es:[rdi],dx
   14001e424:	ins    DWORD PTR es:[rdi],dx
   14001e425:	outs   dx,BYTE PTR gs:[rsi]
   14001e427:	je     0x14001e467
   14001e429:	add    BYTE PTR [rax],al
   14001e42b:	add    BYTE PTR [rax],al
   14001e42d:	add    BYTE PTR [rax],al
   14001e42f:	add    BYTE PTR [rdi+rbp*1],bh
   14001e432:	jae    0x14001e4a3
   14001e434:	jne    0x14001e4a8
   14001e436:	movsxd esp,DWORD PTR [rbp+0x3e]
   14001e439:	or     al,BYTE PTR [rax]
   14001e43b:	add    BYTE PTR [rax],al
   14001e43d:	add    BYTE PTR [rax],al
   14001e43f:	add    BYTE PTR [rax],ah
   14001e441:	and    BYTE PTR [rax],ah
   14001e443:	and    BYTE PTR [rax],ah
   14001e445:	and    BYTE PTR [rax],ah
   14001e447:	and    BYTE PTR [rbx+rsi*2],bh
   14001e44a:	outs   dx,DWORD PTR ds:[rsi]
   14001e44b:	jne    0x14001e4bf
   14001e44d:	movsxd esp,DWORD PTR [rbp+0x3e]
   14001e450:	add    BYTE PTR [rax],al
   14001e452:	add    BYTE PTR [rax],al
   14001e454:	and    ch,BYTE PTR [rdi]
   14001e456:	or     al,BYTE PTR ds:[rax]
   14001e459:	add    BYTE PTR [rax],al
   14001e45b:	add    BYTE PTR [rax],al
   14001e45d:	add    BYTE PTR [rax],al
   14001e45f:	add    BYTE PTR [rdx],ah
   14001e461:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14001e465:	gs cmp eax,0x22
   14001e46b:	add    BYTE PTR [rax],al
   14001e46d:	add    BYTE PTR [rax],al
   14001e46f:	add    BYTE PTR [rax],ah
   14001e471:	and    BYTE PTR [rax],ah
   14001e473:	and    BYTE PTR [rax],ah
   14001e475:	and    BYTE PTR [rax],ah
   14001e477:	and    BYTE PTR [rsp+rbp*2],bh
   14001e47a:	outs   dx,DWORD PTR ds:[rsi]
   14001e47b:	movsxd esp,DWORD PTR [rcx+0x74]
   14001e47e:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c696620
   14001e485:	outs   dx,BYTE PTR gs:[rsi]
   14001e487:	(bad)  
   14001e488:	ins    DWORD PTR es:[rdi],dx
   14001e489:	gs cmp eax,0x22
   14001e48f:	add    BYTE PTR [rax],ah
   14001e491:	outs   dx,BYTE PTR ds:[rsi]
   14001e492:	jne    0x14001e501
   14001e494:	gs jb  0x14001e50c
   14001e497:	jae    0x14001e4d6
   14001e499:	and    bh,BYTE PTR [rcx+0x65]
   14001e49c:	jae    0x14001e4c0
   14001e49e:	add    BYTE PTR [rax],al
   14001e4a0:	and    BYTE PTR [rax],ah
   14001e4a2:	and    BYTE PTR [rax],ah
   14001e4a4:	cmp    al,0x6d
   14001e4a6:	gs jae 0x14001e51c
   14001e4a9:	(bad)  
   14001e4aa:	add    BYTE PTR gs:[eax],al
   14001e4ae:	add    BYTE PTR [rax],al
   14001e4b0:	cmp    al,0x2f
   14001e4b2:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001e4b5:	ins    DWORD PTR es:[rdi],dx
   14001e4b6:	outs   dx,BYTE PTR gs:[rsi]
   14001e4b8:	je     0x14001e4f8
   14001e4ba:	or     al,BYTE PTR [rax]
   14001e4bc:	add    BYTE PTR [rax],al
   14001e4be:	add    BYTE PTR [rax],al
   14001e4c0:	and    BYTE PTR [rax],ah
   14001e4c2:	and    BYTE PTR [rax],ah
   14001e4c4:	cmp    al,0x63
   14001e4c6:	outs   dx,DWORD PTR ds:[rsi]
   14001e4c7:	ins    DWORD PTR es:[rdi],dx
   14001e4c8:	ins    DWORD PTR es:[rdi],dx
   14001e4c9:	outs   dx,BYTE PTR gs:[rsi]
   14001e4cb:	je     0x14001e50b
   14001e4cd:	add    BYTE PTR [rax],al
   14001e4cf:	add    BYTE PTR [rdi+rbp*1],bh
   14001e4d2:	outs   dx,BYTE PTR ds:[rsi]
   14001e4d3:	(bad)  
   14001e4d4:	ins    DWORD PTR es:[rdi],dx
   14001e4d5:	gs or  al,BYTE PTR ds:[rax]
   14001e4d9:	add    BYTE PTR [rax],al
   14001e4db:	add    BYTE PTR [rax],al
   14001e4dd:	add    BYTE PTR [rax],al
   14001e4df:	add    BYTE PTR [rax],ah
   14001e4e1:	and    BYTE PTR [rax],ah
   14001e4e3:	and    BYTE PTR [rsi+rbp*2],bh
   14001e4e6:	(bad)  
   14001e4e7:	ins    DWORD PTR es:[rdi],dx
   14001e4e8:	gs add BYTE PTR ds:[rax],al
   14001e4ec:	add    BYTE PTR [rax],al
   14001e4ee:	add    BYTE PTR [rax],al
   14001e4f0:	and    BYTE PTR [rbp+0x6e],ah
   14001e4f3:	movsxd ebp,DWORD PTR [rdi+0x64]
   14001e4f6:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14001e4fd:	rex.RX sub eax,0x2238
   14001e503:	add    BYTE PTR [rax],al
   14001e505:	add    BYTE PTR [rax],al
   14001e507:	add    BYTE PTR [rbx+riz*2],bh
   14001e50a:	outs   dx,DWORD PTR ds:[rsi]
   14001e50b:	outs   dx,BYTE PTR ds:[rsi]
   14001e50c:	je     0x14001e573
   14001e50e:	js     0x14001e584
	...
   14001e518:	cmp    al,0x2f
   14001e51a:	fs gs data16 (bad) 
   14001e51e:	jne    0x14001e58c
   14001e520:	je     0x14001e585
   14001e522:	outs   dx,DWORD PTR ds:[rsi]
   14001e523:	fs movsxd edi,DWORD PTR gs:[rsi]
   14001e527:	or     al,BYTE PTR [rax]
   14001e529:	add    BYTE PTR [rax],al
   14001e52b:	add    BYTE PTR [rax],al
   14001e52d:	add    BYTE PTR [rax],al
   14001e52f:	add    BYTE PTR [rsp+riz*2],bh
   14001e532:	gs data16 (bad) 
   14001e535:	jne    0x14001e5a3
   14001e537:	je     0x14001e59c
   14001e539:	outs   dx,DWORD PTR ds:[rsi]
   14001e53a:	fs movsxd edi,DWORD PTR gs:[rsi]
   14001e53e:	add    BYTE PTR [rax],al
   14001e540:	or     al,BYTE PTR ds:[rax]
   14001e543:	add    BYTE PTR [rax],al
   14001e545:	add    BYTE PTR [rax],al
   14001e547:	add    BYTE PTR [rax],ah
   14001e549:	jae    0x14001e5ba
   14001e54b:	jne    0x14001e5bf
   14001e54d:	movsxd esp,DWORD PTR [rbp+0x6c]
   14001e550:	(bad)  
   14001e551:	outs   dx,BYTE PTR ds:[rsi]
   14001e552:	addr32 jne 0x14001e5b6
   14001e555:	addr32 gs cmp eax,0x22
   14001e55c:	and    al,BYTE PTR [rax]
   14001e55e:	add    BYTE PTR [rax],al
   14001e560:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14001e564:	addr32 jne 0x14001e5c8
   14001e567:	addr32 gs cmp eax,0x430022
   14001e56e:	add    BYTE PTR [rax],al
   14001e570:	(bad)  
   14001e571:	or     bh,BYTE PTR ds:[rcx+riz*1]
   14001e575:	rex.R
   14001e576:	rex.WRXB
   14001e577:	rex.XB push r12
   14001e579:	pop    rcx
   14001e57a:	push   rax
   14001e57b:	and    BYTE PTR [r11+rdx*2+0x3e],r10b
   14001e580:	cmp    al,0x54
   14001e582:	push   rbx
   14001e583:	and    BYTE PTR [rsi+0x65],dh
   14001e586:	jb     0x14001e5fb
   14001e588:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e32223d
   14001e58f:	xor    BYTE PTR [rdx],ah
   14001e591:	add    BYTE PTR [rax],al
   14001e593:	add    BYTE PTR [rax],al
   14001e595:	add    BYTE PTR [rax],al
   14001e597:	add    BYTE PTR [rax],ah
   14001e599:	outs   dx,BYTE PTR gs:[rsi]
   14001e59b:	movsxd ebp,DWORD PTR [rdi+0x64]
   14001e59e:	imul   ebp,DWORD PTR [rsi+0x67],0x7475223d
   14001e5a5:	sub    ax,0x2238
   14001e5a9:	add    BYTE PTR [rax],al
   14001e5ab:	add    BYTE PTR [rax],al
   14001e5ad:	add    BYTE PTR [rax],al
   14001e5af:	add    BYTE PTR [rdi+rdi*1],bh
   14001e5b2:	js     0x14001e621
   14001e5b4:	ins    BYTE PTR es:[rdi],dx
   14001e5b5:	and    BYTE PTR [rsi+0x65],dh
   14001e5b8:	jb     0x14001e62d
   14001e5ba:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001e5c1:	xor    BYTE PTR [rdx],ah
	...
   14001e5cf:	add    BYTE PTR [rdx],ah
   14001e5d1:	add    eax,0x11993
   14001e5d6:	add    BYTE PTR [rax],al
   14001e5d8:	add    al,0x4b
   14001e5da:	add    al,BYTE PTR [rax]
	...
   14001e5e4:	add    eax,DWORD PTR [rax]
   14001e5e6:	add    BYTE PTR [rax],al
   14001e5e8:	or     al,0x4b
   14001e5ea:	add    al,BYTE PTR [rax]
   14001e5ec:	xor    BYTE PTR [rax],al
   14001e5ee:	add    BYTE PTR [rax],al
   14001e5f0:	add    BYTE PTR [rax],al
   14001e5f2:	add    BYTE PTR [rax],al
   14001e5f4:	add    DWORD PTR [rax],eax
	...
   14001e5fe:	add    BYTE PTR [rax],al
   14001e600:	and    al,BYTE PTR [rip+0x21993]        # 0x14003ff99
   14001e606:	add    BYTE PTR [rax],al
   14001e608:	rex.R
   14001e609:	rex.WXB add al,BYTE PTR [r8]
	...
   14001e614:	add    eax,0x54000000
   14001e619:	rex.WXB add al,BYTE PTR [r8]
   14001e61c:	xor    BYTE PTR [rax],al
   14001e61e:	add    BYTE PTR [rax],al
   14001e620:	add    BYTE PTR [rax],al
   14001e622:	add    BYTE PTR [rax],al
   14001e624:	add    DWORD PTR [rax],eax
	...
   14001e62e:	add    BYTE PTR [rax],al
   14001e630:	and    al,BYTE PTR [rip+0xc1993]        # 0x1400dffc9
   14001e636:	add    BYTE PTR [rax],al
   14001e638:	pushf  
   14001e639:	rex.WXB add al,BYTE PTR [r8]
	...
   14001e644:	adc    al,BYTE PTR [rax]
   14001e646:	add    BYTE PTR [rax],al
   14001e648:	cld    
   14001e649:	rex.WXB add al,BYTE PTR [r8]
   14001e64c:	cmp    BYTE PTR [rax],al
   14001e64e:	add    BYTE PTR [rax],al
   14001e650:	add    BYTE PTR [rax],al
   14001e652:	add    BYTE PTR [rax],al
   14001e654:	add    DWORD PTR [rax],eax
	...
   14001e65e:	add    BYTE PTR [rax],al
   14001e660:	and    al,BYTE PTR [rip+0x81993]        # 0x14009fff9
   14001e666:	add    BYTE PTR [rax],al
   14001e668:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e669:	rex.WR add r8b,BYTE PTR [rax]
	...
   14001e674:	adc    eax,DWORD PTR [rax]
   14001e676:	add    BYTE PTR [rax],al
   14001e678:	in     al,0x4c
   14001e67a:	add    al,BYTE PTR [rax]
   14001e67c:	and    BYTE PTR [rax],al
   14001e67e:	add    BYTE PTR [rax],al
   14001e680:	add    BYTE PTR [rax],al
   14001e682:	add    BYTE PTR [rax],al
   14001e684:	add    DWORD PTR [rax],eax
	...
   14001e68e:	add    BYTE PTR [rax],al
   14001e690:	loopne 0x14001e64a
   14001e692:	add    DWORD PTR [rax+0x1],eax
	...
   14001e69d:	add    BYTE PTR [rax],al
   14001e69f:	add    al,dl
   14001e6a1:	mov    eax,0x14001
   14001e6a6:	add    BYTE PTR [rax],al
   14001e6a8:	enter  0x1b8,0x40
   14001e6ac:	add    DWORD PTR [rax],eax
	...
   14001e6b6:	add    BYTE PTR [rax],al
   14001e6b8:	sar    BYTE PTR [rax+0x14001],1
   14001e6be:	add    BYTE PTR [rax],al
   14001e6c0:	enter  0x1b8,0x40
   14001e6c4:	add    DWORD PTR [rax],eax
	...
   14001e6ce:	add    BYTE PTR [rax],al
   14001e6d0:	sar    BYTE PTR [rax+0x14001],1
   14001e6d6:	add    BYTE PTR [rax],al
   14001e6d8:	enter  0x1b8,0x40
   14001e6dc:	add    DWORD PTR [rax],eax
   14001e6de:	add    BYTE PTR [rax],al
   14001e6e0:	sar    BYTE PTR [rax+0x14001],0x0
	...
   14001e6ef:	add    al,dl
   14001e6f1:	mov    eax,0x14001
   14001e6f6:	add    BYTE PTR [rax],al
   14001e6f8:	mov    eax,0x14001b8
   14001e6fd:	add    BYTE PTR [rax],al
   14001e6ff:	add    al,cl
   14001e701:	mov    eax,0x14001
	...
   14001e70e:	add    BYTE PTR [rax],al
   14001e710:	sar    BYTE PTR [rax+0x14001],1
   14001e716:	add    BYTE PTR [rax],al
   14001e718:	mov    eax,0x14001b8
   14001e71d:	add    BYTE PTR [rax],al
   14001e71f:	add    al,cl
   14001e721:	mov    eax,0x14001
	...
   14001e72e:	add    BYTE PTR [rax],al
   14001e730:	sar    BYTE PTR [rax+0x14001],1
   14001e736:	add    BYTE PTR [rax],al
   14001e738:	mov    eax,0x14001b8
   14001e73d:	add    BYTE PTR [rax],al
   14001e73f:	add    al,cl
   14001e741:	mov    eax,0x14001
	...
   14001e74e:	add    BYTE PTR [rax],al
   14001e750:	sar    BYTE PTR [rax+0x14001],1
   14001e756:	add    BYTE PTR [rax],al
   14001e758:	mov    eax,0x14001b8
   14001e75d:	add    BYTE PTR [rax],al
   14001e75f:	add    al,cl
   14001e761:	mov    eax,0x14001
	...
   14001e76e:	add    BYTE PTR [rax],al
   14001e770:	sar    BYTE PTR [rax+0x14001],1
   14001e776:	add    BYTE PTR [rax],al
   14001e778:	mov    eax,0x14001b8
   14001e77d:	add    BYTE PTR [rax],al
   14001e77f:	add    al,cl
   14001e781:	mov    eax,0x14001
	...
   14001e78e:	add    BYTE PTR [rax],al
   14001e790:	sar    BYTE PTR [rax+0x14001],1
   14001e796:	add    BYTE PTR [rax],al
   14001e798:	mov    eax,0x14001b8
   14001e79d:	add    BYTE PTR [rax],al
   14001e79f:	add    al,cl
   14001e7a1:	mov    eax,0x14001
	...
   14001e7ae:	add    BYTE PTR [rax],al
   14001e7b0:	sar    BYTE PTR [rax+0x14001],1
   14001e7b6:	add    BYTE PTR [rax],al
   14001e7b8:	mov    al,0xb8
   14001e7ba:	add    DWORD PTR [rax+0x1],eax
   14001e7bd:	add    BYTE PTR [rax],al
   14001e7bf:	add    al,cl
   14001e7c1:	mov    eax,0x14001
	...
   14001e7ce:	add    BYTE PTR [rax],al
   14001e7d0:	sar    BYTE PTR [rax+0x14001],1
   14001e7d6:	add    BYTE PTR [rax],al
   14001e7d8:	cwde   
   14001e7d9:	mov    eax,0x14001
   14001e7de:	add    BYTE PTR [rax],al
   14001e7e0:	enter  0x1b8,0x40
   14001e7e4:	add    DWORD PTR [rax],eax
	...
   14001e7ee:	add    BYTE PTR [rax],al
   14001e7f0:	sar    BYTE PTR [rax+0x14001],1
   14001e7f6:	add    BYTE PTR [rax],al
   14001e7f8:	mov    eax,0x14001b8
   14001e7fd:	add    BYTE PTR [rax],al
   14001e7ff:	add    BYTE PTR [rax+0x14001b8],dl
   14001e805:	add    BYTE PTR [rax],al
   14001e807:	add    al,cl
   14001e809:	mov    eax,0x14001
	...
   14001e816:	add    BYTE PTR [rax],al
   14001e818:	sar    BYTE PTR [rax+0x14001],1
   14001e81e:	add    BYTE PTR [rax],al
   14001e820:	js     0x14001e7da
   14001e822:	add    DWORD PTR [rax+0x1],eax
   14001e825:	add    BYTE PTR [rax],al
   14001e827:	add    BYTE PTR [rax-0x48],bl
   14001e82a:	add    DWORD PTR [rax+0x1],eax
   14001e82d:	add    BYTE PTR [rax],al
   14001e82f:	add    al,cl
   14001e831:	mov    eax,0x14001
	...
   14001e83e:	add    BYTE PTR [rax],al
   14001e840:	sar    BYTE PTR [rax+0x14001],0x0
   14001e847:	add    al,dl
   14001e849:	mov    eax,0x14001
   14001e84e:	add    BYTE PTR [rax],al
   14001e850:	mov    eax,0x14001b8
   14001e855:	add    BYTE PTR [rax],al
   14001e857:	add    BYTE PTR [rax-0x48],dl
   14001e85a:	add    DWORD PTR [rax+0x1],eax
   14001e85d:	add    BYTE PTR [rax],al
   14001e85f:	add    al,cl
   14001e861:	mov    eax,0x14001
	...
   14001e86e:	add    BYTE PTR [rax],al
   14001e870:	sar    BYTE PTR [rax+0x14001],0x0
   14001e877:	add    al,dl
   14001e879:	mov    eax,0x14001
   14001e87e:	add    BYTE PTR [rax],al
   14001e880:	mov    eax,0x14001b8
   14001e885:	add    BYTE PTR [rax],al
   14001e887:	add    BYTE PTR [rax-0x48],al
   14001e88a:	add    DWORD PTR [rax+0x1],eax
   14001e88d:	add    BYTE PTR [rax],al
   14001e88f:	add    al,cl
   14001e891:	mov    eax,0x14001
   14001e896:	add    BYTE PTR [rax],al
   14001e898:	and    BYTE PTR [rax+0x14001],bh
	...
   14001e8a6:	add    BYTE PTR [rax],al
   14001e8a8:	adc    eax,DWORD PTR [rax]
   14001e8aa:	add    BYTE PTR [rax],al
   14001e8ac:	and    eax,0x5b000000
   14001e8b1:	add    BYTE PTR [rax],al
   14001e8b3:	add    BYTE PTR [rdx+0x0],bh
   14001e8b6:	add    BYTE PTR [rax],al
   14001e8b8:	add    DWORD PTR [rax],eax
   14001e8ba:	add    BYTE PTR [rax],al
   14001e8bc:	add    BYTE PTR [rax],al
   14001e8be:	add    BYTE PTR [rax],al
   14001e8c0:	add    eax,DWORD PTR [rax]
   14001e8c2:	add    BYTE PTR [rax],al
   14001e8c4:	or     DWORD PTR [rax],eax
   14001e8c6:	add    BYTE PTR [rax],al
   14001e8c8:	adc    BYTE PTR [rax],al
   14001e8ca:	add    BYTE PTR [rax],al
   14001e8cc:	adc    al,BYTE PTR [rax]
   14001e8ce:	add    BYTE PTR [rax],al
   14001e8d0:	adc    eax,0x19000000
   14001e8d5:	add    BYTE PTR [rax],al
   14001e8d7:	add    BYTE PTR [rbx],ah
   14001e8d9:	add    BYTE PTR [rax],al
   14001e8db:	add    BYTE PTR [rip+0x32000000],ch        # 0x17201e8e1
   14001e8e1:	add    BYTE PTR [rax],al
   14001e8e3:	add    BYTE PTR [rax+rax*1],dh
   14001e8e6:	add    BYTE PTR [rax],al
   14001e8e8:	cmp    eax,DWORD PTR [rax]
   14001e8ea:	add    BYTE PTR [rax],al
   14001e8ec:	cmp    al,0x0
   14001e8ee:	add    BYTE PTR [rax],al
   14001e8f0:	rex.X add BYTE PTR [rax],al
   14001e8f3:	add    BYTE PTR [rax+rax*1+0x0],cl
   14001e8f7:	add    BYTE PTR [rbx+0x0],dl
   14001e8fa:	add    BYTE PTR [rax],al
   14001e8fc:	pop    rcx
   14001e8fd:	add    BYTE PTR [rax],al
   14001e8ff:	add    BYTE PTR [rax+0x0],dh
   14001e902:	add    BYTE PTR [rax],al
   14001e904:	js     0x14001e906
   14001e906:	add    BYTE PTR [rax],al
   14001e908:	jns    0x14001e90a
   14001e90a:	add    BYTE PTR [rax],al
   14001e90c:	test   BYTE PTR [rax],al
   14001e90e:	add    BYTE PTR [rax],al
   14001e910:	mov    al,BYTE PTR [rax]
   14001e912:	add    BYTE PTR [rax],al
   14001e914:	mov    eax,DWORD PTR [rax]
   14001e916:	add    BYTE PTR [rax],al
   14001e918:	add    DWORD PTR [rax],eax
   14001e91a:	add    BYTE PTR [rax],al
   14001e91c:	add    BYTE PTR [rax],al
   14001e91e:	add    BYTE PTR [rax],al
   14001e920:	add    al,BYTE PTR [rax]
   14001e922:	add    BYTE PTR [rax],al
   14001e924:	add    al,0x0
   14001e926:	add    BYTE PTR [rax],al
   14001e928:	add    eax,0x6000000
   14001e92d:	add    BYTE PTR [rax],al
   14001e92f:	add    BYTE PTR [rdi],al
   14001e931:	add    BYTE PTR [rax],al
   14001e933:	add    BYTE PTR [rdx],cl
   14001e935:	add    BYTE PTR [rax],al
   14001e937:	add    BYTE PTR [rbx],cl
   14001e939:	add    BYTE PTR [rax],al
   14001e93b:	add    BYTE PTR [rax+rax*1],cl
   14001e93e:	add    BYTE PTR [rax],al
   14001e940:	or     eax,0xe000000
   14001e945:	add    BYTE PTR [rax],al
   14001e947:	add    BYTE PTR [rdi],cl
   14001e949:	add    BYTE PTR [rax],al
   14001e94b:	add    BYTE PTR [rcx],dl
   14001e94d:	add    BYTE PTR [rax],al
   14001e94f:	add    BYTE PTR [rax+rax*1],dl
   14001e952:	add    BYTE PTR [rax],al
   14001e954:	(bad)  
   14001e955:	add    BYTE PTR [rax],al
   14001e957:	add    BYTE PTR [rax],bl
   14001e959:	add    BYTE PTR [rax],al
   14001e95b:	add    BYTE PTR [rcx+0x1a000000],dl
   14001e961:	add    BYTE PTR [rax],al
   14001e963:	add    BYTE PTR [rip+0x1e000000],bl        # 0x15e01e969
   14001e969:	add    BYTE PTR [rax],al
   14001e96b:	add    BYTE PTR [rdi],bl
   14001e96d:	add    BYTE PTR [rax],al
   14001e96f:	add    BYTE PTR [rax],ah
   14001e971:	add    BYTE PTR [rax],al
   14001e973:	add    BYTE PTR [rcx],ah
   14001e975:	add    BYTE PTR [rax],al
   14001e977:	add    BYTE PTR [rdx],ah
   14001e979:	add    BYTE PTR [rax],al
   14001e97b:	add    BYTE PTR [rax+rax*1],ah
   14001e97e:	add    BYTE PTR [rax],al
   14001e980:	add    BYTE PTR es:[rax],al
   14001e983:	add    BYTE PTR [rax],ch
   14001e985:	add    BYTE PTR [rax],al
   14001e987:	add    BYTE PTR [rcx],ch
   14001e989:	add    BYTE PTR [rax],al
   14001e98b:	add    BYTE PTR [rdx],ch
   14001e98d:	add    BYTE PTR [rax],al
   14001e98f:	add    BYTE PTR [rbx],ch
   14001e991:	add    BYTE PTR [rax],al
   14001e993:	add    BYTE PTR [rax+rax*1],ch
   14001e996:	add    BYTE PTR [rax],al
   14001e998:	add    BYTE PTR cs:[rax],al
   14001e99b:	add    BYTE PTR [rdi],ch
   14001e99d:	add    BYTE PTR [rax],al
   14001e99f:	add    BYTE PTR [rax],dh
   14001e9a1:	add    BYTE PTR [rax],al
   14001e9a3:	add    BYTE PTR [rcx],dh
   14001e9a5:	add    BYTE PTR [rax],al
   14001e9a7:	add    BYTE PTR [rbx],dh
   14001e9a9:	add    BYTE PTR [rax],al
   14001e9ab:	add    BYTE PTR [rip+0x36000000],dh        # 0x17601e9b1
   14001e9b1:	add    BYTE PTR [rax],al
   14001e9b3:	add    BYTE PTR [rdx],bh
   14001e9b5:	add    BYTE PTR [rax],al
   14001e9b7:	add    BYTE PTR [rip+0x3e000000],bh        # 0x17e01e9bd
   14001e9bd:	add    BYTE PTR [rax],al
   14001e9bf:	add    BYTE PTR [rdi],bh
   14001e9c1:	add    BYTE PTR [rax],al
   14001e9c3:	add    BYTE PTR [rax+0x0],al
   14001e9c6:	add    BYTE PTR [rax],al
   14001e9c8:	add    BYTE PTR [r8],al
   14001e9cb:	add    BYTE PTR [rbx+0x0],al
   14001e9ce:	add    BYTE PTR [rax],al
   14001e9d0:	add    BYTE PTR [rax],r8b
   14001e9d3:	add    BYTE PTR [rbp+0x0],al
   14001e9d6:	add    BYTE PTR [rax],al
   14001e9d8:	rex.RX add BYTE PTR [rax],r8b
   14001e9db:	add    BYTE PTR [rax+0x0],cl
   14001e9de:	add    BYTE PTR [rax],al
   14001e9e0:	rex.WXB add BYTE PTR [r8],al
   14001e9e3:	add    BYTE PTR [rbp+0x0],cl
   14001e9e6:	add    BYTE PTR [rax],al
   14001e9e8:	push   rax
   14001e9e9:	add    BYTE PTR [rax],al
   14001e9eb:	add    BYTE PTR [rdx+0x0],dl
   14001e9ee:	add    BYTE PTR [rax],al
   14001e9f0:	push   rsp
   14001e9f1:	add    BYTE PTR [rax],al
   14001e9f3:	add    BYTE PTR [rbp+0x0],dl
   14001e9f6:	add    BYTE PTR [rax],al
   14001e9f8:	lea    eax,[rax]
   14001e9fa:	add    BYTE PTR [rax],al
   14001e9fc:	push   rsi
   14001e9fd:	add    BYTE PTR [rax],al
   14001e9ff:	add    BYTE PTR [rdi+0x0],dl
   14001ea02:	add    BYTE PTR [rax],al
   14001ea04:	pop    rax
   14001ea05:	add    BYTE PTR [rax],al
   14001ea07:	add    BYTE PTR [rbx+0x0],bl
   14001ea0a:	add    BYTE PTR [rax],al
   14001ea0c:	pop    rsp
   14001ea0d:	add    BYTE PTR [rax],al
   14001ea0f:	add    BYTE PTR [rbp+0x0],bl
   14001ea12:	add    BYTE PTR [rax],al
   14001ea14:	pop    rsi
   14001ea15:	add    BYTE PTR [rax],al
   14001ea17:	add    BYTE PTR [rsi+0x0],ah
   14001ea1a:	add    BYTE PTR [rax],al
   14001ea1c:	add    BYTE PTR [eax],al
   14001ea1f:	add    BYTE PTR [rax+0x0],ch
   14001ea22:	add    BYTE PTR [rax],al
   14001ea24:	imul   eax,DWORD PTR [rax],0x6a0000
   14001ea2a:	add    BYTE PTR [rax],al
   14001ea2c:	imul   eax,DWORD PTR [rax],0x0
   14001ea2f:	add    BYTE PTR [rsi+0x0],ch
   14001ea32:	add    BYTE PTR [rax],al
   14001ea34:	outs   dx,DWORD PTR ds:[rsi]
   14001ea35:	add    BYTE PTR [rax],al
   14001ea37:	add    BYTE PTR [rcx+0x0],dh
   14001ea3a:	add    BYTE PTR [rax],al
   14001ea3c:	jb     0x14001ea3e
   14001ea3e:	add    BYTE PTR [rax],al
   14001ea40:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001ea41:	add    BYTE PTR [rax],al
   14001ea43:	add    BYTE PTR [rax+rax*1+0x0],dh
   14001ea47:	add    BYTE PTR [rbp+0x0],dh
   14001ea4a:	add    BYTE PTR [rax],al
   14001ea4c:	jbe    0x14001ea4e
   14001ea4e:	add    BYTE PTR [rax],al
   14001ea50:	ja     0x14001ea52
   14001ea52:	add    BYTE PTR [rax],al
   14001ea54:	jnp    0x14001ea56
   14001ea56:	add    BYTE PTR [rax],al
   14001ea58:	jl     0x14001ea5a
   14001ea5a:	add    BYTE PTR [rax],al
   14001ea5c:	jge    0x14001ea5e
   14001ea5e:	add    BYTE PTR [rax],al
   14001ea60:	jle    0x14001ea62
   14001ea62:	add    BYTE PTR [rax],al
   14001ea64:	xchg   edx,eax
   14001ea65:	add    BYTE PTR [rax],al
   14001ea67:	add    BYTE PTR [rax-0x7d000000],al
   14001ea6d:	add    BYTE PTR [rax],al
   14001ea6f:	add    BYTE PTR [rbp-0x79000000],al
   14001ea75:	add    BYTE PTR [rax],al
   14001ea77:	add    BYTE PTR [rax-0x77000000],cl
   14001ea7d:	add    BYTE PTR [rax],al
   14001ea7f:	add    BYTE PTR [rax+rax*1+0x10000],cl
   14001ea86:	add    BYTE PTR [rax],al
   14001ea88:	rex.RXB add BYTE PTR [r8],r8b
   14001ea8b:	add    BYTE PTR [rcx],al
   14001ea8d:	add    BYTE PTR [rax],al
   14001ea8f:	add    BYTE PTR [rdi+0x27000000],cl
   14001ea95:	add    BYTE PTR [rax],al
   14001ea97:	add    BYTE PTR [rdi],dh
   14001ea99:	add    BYTE PTR [rax],al
   14001ea9b:	add    BYTE PTR [rax],bh
   14001ea9d:	add    BYTE PTR [rax],al
   14001ea9f:	add    BYTE PTR [rcx],bh
   14001eaa1:	add    BYTE PTR [rax],al
   14001eaa3:	add    BYTE PTR [rax+0x4f000000],dl
   14001eaa9:	add    BYTE PTR [rax],al
   14001eaab:	add    BYTE PTR [rcx+0x0],ah
   14001eaae:	add    BYTE PTR [rax],al
   14001eab0:	movsxd eax,DWORD PTR [rax]
   14001eab2:	add    BYTE PTR [rax],al
   14001eab4:	add    DWORD PTR [rax],eax
   14001eab6:	add    BYTE PTR [rax],al
   14001eab8:	sbb    al,0x0
   14001eaba:	add    BYTE PTR [rax],al
   14001eabc:	add    DWORD PTR [rax],eax
   14001eabe:	add    BYTE PTR [rax],al
   14001eac0:	ins    BYTE PTR es:[rdi],dx
   14001eac1:	add    BYTE PTR [rax],al
   14001eac3:	add    BYTE PTR [rcx],al
   14001eac5:	add    BYTE PTR [rax],al
   14001eac7:	add    BYTE PTR [rdx+0x0],cl
   14001eaca:	add    BYTE PTR [rax],al
   14001eacc:	add    DWORD PTR [rax],eax
   14001eace:	add    BYTE PTR [rax],al
   14001ead0:	rex.WB add BYTE PTR [r8],al
   14001ead3:	add    BYTE PTR [rcx],al
   14001ead5:	add    BYTE PTR [rax],al
   14001ead7:	add    BYTE PTR [rsi+0x16000000],cl
   14001eadd:	add    BYTE PTR [rax],al
   14001eadf:	add    BYTE PTR [rbx],bl
   14001eae1:	add    BYTE PTR [rax],al
   14001eae3:	add    BYTE PTR [rax+0x0],ah
   14001eae6:	add    BYTE PTR [rax],al
   14001eae8:	add    BYTE PTR fs:[rax],al
   14001eaeb:	add    BYTE PTR [rax+rax*1+0x0],ah
   14001eaef:	add    BYTE PTR [rcx+0x1000000],al
   14001eaf5:	add    BYTE PTR [rax],al
   14001eaf7:	add    BYTE PTR [rdx+0x0],bl
   14001eafa:	add    BYTE PTR [rax],al
   14001eafc:	add    DWORD PTR [rax],eax
   14001eafe:	add    BYTE PTR [rax],al
   14001eb00:	pop    rdi
   14001eb01:	add    BYTE PTR [rax],al
   14001eb03:	add    BYTE PTR [rdi+0x0],bl
   14001eb06:	add    BYTE PTR [rax],al
   14001eb08:	add    DWORD PTR [rax],eax
   14001eb0a:	add    BYTE PTR [rax],al
   14001eb0c:	add    BYTE PTR [rax],al
   14001eb0e:	add    BYTE PTR [rax],al
   14001eb10:	ins    DWORD PTR es:[rdi],dx
   14001eb11:	add    BYTE PTR [rax],al
   14001eb13:	add    BYTE PTR [rcx],al
   14001eb15:	add    BYTE PTR [rax],al
   14001eb17:	add    BYTE PTR [rsi+0x0],cl
   14001eb1a:	add    BYTE PTR [rax],al
   14001eb1c:	add    DWORD PTR [rax],eax
   14001eb1e:	add    BYTE PTR [rax],al
   14001eb20:	xchg   BYTE PTR [rax],al
   14001eb22:	add    BYTE PTR [rax],al
   14001eb24:	add    DWORD PTR [rax],eax
   14001eb26:	add    BYTE PTR [rax],al
   14001eb28:	or     BYTE PTR [rax],al
   14001eb2a:	add    BYTE PTR [rax],al
   14001eb2c:	add    DWORD PTR [rax],eax
	...
   14001eb36:	add    BYTE PTR [rax],al
   14001eb38:	(bad)  
   14001eb39:	add    BYTE PTR [rax],al
   14001eb3b:	add    BYTE PTR [rax],al
   14001eb3d:	add    BYTE PTR [rax],al
   14001eb3f:	add    BYTE PTR [rdx],ah
   14001eb41:	add    eax,0x21993
   14001eb46:	add    BYTE PTR [rax],al
   14001eb48:	mov    WORD PTR [rax+0x2],fs
	...
   14001eb53:	add    BYTE PTR [rbx],al
   14001eb55:	add    BYTE PTR [rax],al
   14001eb57:	add    BYTE PTR [rax+0x2800024d],dl
   14001eb5d:	add    BYTE PTR [rax],al
   14001eb5f:	add    BYTE PTR [rax],al
   14001eb61:	add    BYTE PTR [rax],al
   14001eb63:	add    BYTE PTR [rcx],al
	...
   14001eb6d:	add    BYTE PTR [rax],al
   14001eb6f:	add    BYTE PTR [rdx],ah
   14001eb71:	add    eax,0x11993
   14001eb76:	add    BYTE PTR [rax],al
   14001eb78:	mov    esp,0x24d
   14001eb7d:	add    BYTE PTR [rax],al
   14001eb7f:	add    BYTE PTR [rax],al
   14001eb81:	add    BYTE PTR [rax],al
   14001eb83:	add    BYTE PTR [rdx],al
   14001eb85:	add    BYTE PTR [rax],al
   14001eb87:	add    ah,al
   14001eb89:	rex.WRB add r8b,BYTE PTR [r8]
   14001eb8c:	and    BYTE PTR [rax],al
   14001eb8e:	add    BYTE PTR [rax],al
   14001eb90:	add    BYTE PTR [rax],al
   14001eb92:	add    BYTE PTR [rax],al
   14001eb94:	add    DWORD PTR [rax],eax
	...
   14001eb9e:	add    BYTE PTR [rax],al
   14001eba0:	and    al,BYTE PTR [rip+0x21993]        # 0x140040539
   14001eba6:	add    BYTE PTR [rax],al
   14001eba8:	sub    BYTE PTR [rsi+0x2],cl
	...
   14001ebb3:	add    BYTE PTR [rip+0x38000000],al        # 0x17801ebb9
   14001ebb9:	rex.WRX add r8b,BYTE PTR [rax]
   14001ebbc:	and    BYTE PTR [rax],al
   14001ebbe:	add    BYTE PTR [rax],al
   14001ebc0:	add    BYTE PTR [rax],al
   14001ebc2:	add    BYTE PTR [rax],al
   14001ebc4:	add    DWORD PTR [rax],eax
	...
   14001ebce:	add    BYTE PTR [rax],al
   14001ebd0:	and    al,BYTE PTR [rip+0x51993]        # 0x140070569
   14001ebd6:	add    BYTE PTR [rax],al
   14001ebd8:	fmul   DWORD PTR [rsi+0x2]
   14001ebdb:	add    BYTE PTR [rdx],al
   14001ebdd:	add    BYTE PTR [rax],al
   14001ebdf:	add    BYTE PTR [rax+0xa00024e],cl
   14001ebe5:	add    BYTE PTR [rax],al
   14001ebe7:	add    BYTE PTR [rax],al
   14001ebe9:	rex.WRXB add r8b,BYTE PTR [r8]
   14001ebec:	cmp    BYTE PTR [rax],al
   14001ebee:	add    BYTE PTR [rax],al
   14001ebf0:	add    BYTE PTR [rax],al
   14001ebf2:	add    BYTE PTR [rax],al
   14001ebf4:	add    DWORD PTR [rax],eax
	...
   14001ebfe:	add    BYTE PTR [rax],al
   14001ec00:	and    al,BYTE PTR [rip+0x41993]        # 0x140060599
   14001ec06:	add    BYTE PTR [rax],al
   14001ec08:	cwde   
   14001ec09:	push   rax
   14001ec0a:	add    al,BYTE PTR [rax]
   14001ec0c:	add    al,BYTE PTR [rax]
   14001ec0e:	add    BYTE PTR [rax],al
   14001ec10:	or     BYTE PTR [rdi+0x2],0x0
   14001ec14:	or     DWORD PTR [rax],eax
   14001ec16:	add    BYTE PTR [rax],al
   14001ec18:	ror    BYTE PTR [rdi+0x2],1
   14001ec1b:	add    BYTE PTR [rax],ah
   14001ec1d:	add    BYTE PTR [rax],al
   14001ec1f:	add    BYTE PTR [rax],al
   14001ec21:	add    BYTE PTR [rax],al
   14001ec23:	add    BYTE PTR [rcx],al
	...
   14001ec2d:	add    BYTE PTR [rax],al
   14001ec2f:	add    BYTE PTR [rdx],ah
   14001ec31:	add    eax,0x41993
   14001ec36:	add    BYTE PTR [rax],al
   14001ec38:	cwde   
   14001ec39:	push   rax
   14001ec3a:	add    al,BYTE PTR [rax]
   14001ec3c:	add    al,BYTE PTR [rax]
   14001ec3e:	add    BYTE PTR [rax],al
   14001ec40:	rex.W push rax
   14001ec42:	add    al,BYTE PTR [rax]
   14001ec44:	or     DWORD PTR [rax],eax
   14001ec46:	add    BYTE PTR [rax],al
   14001ec48:	mov    eax,0x20000250
   14001ec4d:	add    BYTE PTR [rax],al
   14001ec4f:	add    BYTE PTR [rax],al
   14001ec51:	add    BYTE PTR [rax],al
   14001ec53:	add    BYTE PTR [rcx],al
	...
   14001ec5d:	add    BYTE PTR [rax],al
   14001ec5f:	add    BYTE PTR [rdx],ah
   14001ec61:	add    eax,0x161993
   14001ec66:	add    BYTE PTR [rax],al
   14001ec68:	and    BYTE PTR [rcx+0x2],dl
	...
   14001ec73:	add    BYTE PTR [rax+rax*1],ch
   14001ec76:	add    BYTE PTR [rax],al
   14001ec78:	rcl    BYTE PTR [rcx+0x2],1
   14001ec7b:	add    BYTE PTR [rax+0x1],dl
   14001ec7e:	add    BYTE PTR [rax],al
   14001ec80:	add    BYTE PTR [rax],al
   14001ec82:	add    BYTE PTR [rax],al
   14001ec84:	add    DWORD PTR [rax],eax
   14001ec86:	add    BYTE PTR [rax],al
   14001ec88:	and    BYTE PTR [rdi+0x72],ch
   14001ec8b:	and    BYTE PTR [rax],al
   14001ec8d:	add    BYTE PTR [rax],al
   14001ec8f:	add    BYTE PTR [rax],ah
   14001ec91:	jnp    0x14001ec93
   14001ec93:	add    BYTE PTR [rdi],bh
   14001ec95:	jge    0x14001ec97
	...
   14001ec9f:	add    BYTE PTR [rdx],ah
   14001eca1:	add    eax,0x1f1993
   14001eca6:	add    BYTE PTR [rax],al
   14001eca8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001eca9:	push   rbx
   14001ecaa:	add    al,BYTE PTR [rax]
	...
   14001ecb4:	xor    DWORD PTR [rax],eax
   14001ecb6:	add    BYTE PTR [rax],al
   14001ecb8:	pushf  
   14001ecb9:	push   rsp
   14001ecba:	add    al,BYTE PTR [rax]
   14001ecbc:	mov    al,0x0
   14001ecbe:	add    BYTE PTR [rax],al
   14001ecc0:	add    BYTE PTR [rax],al
   14001ecc2:	add    BYTE PTR [rax],al
   14001ecc4:	add    DWORD PTR [rax],eax
   14001ecc6:	add    BYTE PTR [rax],al
   14001ecc8:	and    al,BYTE PTR [rip+0x11993]        # 0x140030661
   14001ecce:	add    BYTE PTR [rax],al
   14001ecd0:	mov    esp,0x24d
   14001ecd5:	add    BYTE PTR [rax],al
   14001ecd7:	add    BYTE PTR [rax],al
   14001ecd9:	add    BYTE PTR [rax],al
   14001ecdb:	add    BYTE PTR [rdx],al
   14001ecdd:	add    BYTE PTR [rax],al
   14001ecdf:	add    BYTE PTR [rax],bh
   14001ece1:	push   rsi
   14001ece2:	add    al,BYTE PTR [rax]
   14001ece4:	and    BYTE PTR [rax],al
   14001ece6:	add    BYTE PTR [rax],al
   14001ece8:	add    BYTE PTR [rax],al
   14001ecea:	add    BYTE PTR [rax],al
   14001ecec:	add    DWORD PTR [rax],eax
   14001ecee:	add    BYTE PTR [rax],al
   14001ecf0:	and    al,BYTE PTR [rip+0x71993]        # 0x140090689
   14001ecf6:	add    BYTE PTR [rax],al
   14001ecf8:	ins    BYTE PTR es:[rdi],dx
   14001ecf9:	push   rsi
   14001ecfa:	add    al,BYTE PTR [rax]
	...
   14001ed04:	sldt   WORD PTR [rax]
   14001ed07:	add    BYTE PTR [rsi+rdx*2+0x380002],ah
   14001ed0e:	add    BYTE PTR [rax],al
   14001ed10:	add    BYTE PTR [rax],al
   14001ed12:	add    BYTE PTR [rax],al
   14001ed14:	add    DWORD PTR [rax],eax
   14001ed16:	add    BYTE PTR [rax],al
   14001ed18:	gs jb  0x14001ed8d
   14001ed1b:	outs   dx,DWORD PTR ds:[rsi]
   14001ed1c:	jb     0x14001ed58
   14001ed1e:	and    BYTE PTR [rbx+0x61],al
   14001ed21:	outs   dx,BYTE PTR ds:[rsi]
   14001ed22:	outs   dx,BYTE PTR ds:[rsi]
   14001ed23:	outs   dx,DWORD PTR ds:[rsi]
   14001ed24:	je     0x14001ed46
   14001ed26:	ins    BYTE PTR es:[rdi],dx
   14001ed27:	outs   dx,DWORD PTR ds:[rsi]
   14001ed28:	(bad)  
   14001ed29:	and    BYTE PTR fs:[rdi],ah
   14001ed2c:	and    eax,0x203a2773
   14001ed31:	and    eax,0xa73
   14001ed36:	add    BYTE PTR [rax],al
   14001ed38:	and    al,BYTE PTR [rip+0x481993]        # 0x1404a06d1
   14001ed3e:	add    BYTE PTR [rax],al
   14001ed40:	(bad)  
   14001ed41:	push   rdi
   14001ed42:	add    al,BYTE PTR [rax]
	...
   14001ed4c:	jl     0x14001ed4e
   14001ed4e:	add    BYTE PTR [rax],al
   14001ed50:	movabs al,ds:0x2a0000259
   14001ed59:	add    BYTE PTR [rax],al
   14001ed5b:	add    BYTE PTR [rcx],al
   14001ed5d:	add    BYTE PTR [rax],al
   14001ed5f:	add    BYTE PTR [rsp+0x5c],bl
   14001ed63:	and    al,0x73
   14001ed65:	jns    0x14001edda
   14001ed67:	je     0x14001edce
   14001ed69:	ins    DWORD PTR es:[rdi],dx
   14001ed6a:	pop    rsp
   14001ed6b:	jae    0x14001ed97
   14001ed6d:	pop    rsp
   14001ed6e:	sub    BYTE PTR [rax],ch
   14001ed70:	pop    rbx
   14001ed71:	pop    rsi
   14001ed72:	sub    BYTE PTR [rcx],ch
   14001ed74:	pop    rbp
   14001ed75:	sub    ch,BYTE PTR [rcx]
   14001ed77:	pop    rsp
   14001ed78:	sub    DWORD PTR [rax],eax
   14001ed7a:	add    BYTE PTR [rax],al
   14001ed7c:	jo     0x14001edf5
   14001ed7e:	add    BYTE PTR fs:[rbx+0x79],dh
   14001ed82:	jae    0x14001edf8
   14001ed84:	gs ins DWORD PTR es:[rdi],dx
   14001ed86:	add    BYTE PTR [rax],al
   14001ed88:	sub    bh,BYTE PTR [rip+0x3d2b0000]        # 0x17d2ced8e
   14001ed8e:	add    BYTE PTR [rax],al
   14001ed90:	cmp    eax,DWORD PTR [rax]
   14001ed92:	add    BYTE PTR [rax],al
   14001ed94:	and    BYTE PTR [rbx],ch
   14001ed96:	cmp    eax,0x20
   14001ed9b:	add    BYTE PTR [rbx],ch
   14001ed9d:	and    BYTE PTR [rip+0x203d2000],bh        # 0x1603f0da3
   14001eda3:	add    BYTE PTR [rip+0x5c000000],bh        # 0x19c01eda9
   14001eda9:	pop    rsp
   14001edaa:	pop    rbx
   14001edab:	pop    rsi
   14001edac:	or     bl,BYTE PTR [rbx+rdx*2+0x5d]
   14001edb0:	sub    cl,BYTE PTR [rdx]
   14001edb2:	add    BYTE PTR [rax],al
   14001edb4:	add    BYTE PTR [rax],al
   14001edb6:	add    BYTE PTR [rax],al
   14001edb8:	pop    rsp
   14001edb9:	and    al,0x5c
   14001edbb:	and    al,0x5b
   14001edbd:	sub    BYTE PTR [rbx+0x5d],bh
   14001edc0:	(bad)  
   14001edc1:	sub    BYTE PTR [rbx+0x61],bl
   14001edc4:	sub    eax,0x5a2d417a
   14001edc9:	xor    BYTE PTR [rip+0x2b5d5f39],ch        # 0x16b5f4d08
   14001edcf:	sub    DWORD PTR [rbx+0x29],ebx
   14001edd2:	jge    0x14001ee31
   14001edd4:	(bad)  
   14001edd5:	add    BYTE PTR [rax],al
   14001edd7:	add    BYTE PTR [rsp],ah
   14001edda:	add    BYTE PTR [rax],al
   14001eddc:	and    al,0x24
   14001edde:	push   rax
   14001eddf:	push   rdi
   14001ede0:	add    BYTE PTR [rax],r8b
   14001ede3:	add    BYTE PTR [rax],al
   14001ede5:	add    BYTE PTR [rax],al
   14001ede7:	add    BYTE PTR [rcx+0x6e],ch
   14001edea:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
   14001edee:	gs pop rsp
   14001edf0:	jae    0x14001ee1c
   14001edf2:	pop    rsp
   14001edf3:	sub    BYTE PTR [rbx+rsi*2+0x2a],bl
   14001edf7:	sub    BYTE PTR [rbx+0x5e],bl
   14001edfa:	sub    BYTE PTR [rcx],ch
   14001edfc:	pop    rsp
   14001edfd:	jae    0x14001ee5c
   14001edff:	sub    ebp,DWORD PTR [rcx]
   14001ee01:	pop    rsp
   14001ee02:	jae    0x14001ee2e
   14001ee04:	pop    rsp
   14001ee05:	sub    DWORD PTR [rax],eax
   14001ee07:	add    BYTE PTR [rbx],ah
   14001ee09:	pop    rbx
   14001ee0a:	pop    rsi
   14001ee0b:	or     bl,BYTE PTR [rbp+0x2a]
   14001ee0e:	or     al,BYTE PTR [rax]
   14001ee10:	and    BYTE PTR [rax],al
	...
   14001ee1e:	add    BYTE PTR [rax],al
   14001ee20:	loopne 0x14001edda
   14001ee22:	add    DWORD PTR [rax+0x1],eax
	...
   14001ee2d:	add    BYTE PTR [rax],al
   14001ee2f:	add    al,dl
   14001ee31:	mov    eax,0x14001
   14001ee36:	add    BYTE PTR [rax],al
   14001ee38:	enter  0x1b8,0x40
   14001ee3c:	add    DWORD PTR [rax],eax
	...
   14001ee46:	add    BYTE PTR [rax],al
   14001ee48:	sar    BYTE PTR [rax+0x14001],1
   14001ee4e:	add    BYTE PTR [rax],al
   14001ee50:	enter  0x1b8,0x40
   14001ee54:	add    DWORD PTR [rax],eax
	...
   14001ee5e:	add    BYTE PTR [rax],al
   14001ee60:	sar    BYTE PTR [rax+0x14001],1
   14001ee66:	add    BYTE PTR [rax],al
   14001ee68:	enter  0x1b8,0x40
   14001ee6c:	add    DWORD PTR [rax],eax
   14001ee6e:	add    BYTE PTR [rax],al
   14001ee70:	sar    BYTE PTR [rax+0x14001],0x0
	...
   14001ee7f:	add    al,dl
   14001ee81:	mov    eax,0x14001
   14001ee86:	add    BYTE PTR [rax],al
   14001ee88:	mov    eax,0x14001b8
   14001ee8d:	add    BYTE PTR [rax],al
   14001ee8f:	add    al,cl
   14001ee91:	mov    eax,0x14001
	...
   14001ee9e:	add    BYTE PTR [rax],al
   14001eea0:	sar    BYTE PTR [rax+0x14001],1
   14001eea6:	add    BYTE PTR [rax],al
   14001eea8:	mov    eax,0x14001b8
   14001eead:	add    BYTE PTR [rax],al
   14001eeaf:	add    al,cl
   14001eeb1:	mov    eax,0x14001
	...
   14001eebe:	add    BYTE PTR [rax],al
   14001eec0:	sar    BYTE PTR [rax+0x14001],1
   14001eec6:	add    BYTE PTR [rax],al
   14001eec8:	mov    eax,0x14001b8
   14001eecd:	add    BYTE PTR [rax],al
   14001eecf:	add    al,cl
   14001eed1:	mov    eax,0x14001
	...
   14001eede:	add    BYTE PTR [rax],al
   14001eee0:	sar    BYTE PTR [rax+0x14001],1
   14001eee6:	add    BYTE PTR [rax],al
   14001eee8:	mov    eax,0x14001b8
   14001eeed:	add    BYTE PTR [rax],al
   14001eeef:	add    al,cl
   14001eef1:	mov    eax,0x14001
	...
   14001eefe:	add    BYTE PTR [rax],al
   14001ef00:	sar    BYTE PTR [rax+0x14001],1
   14001ef06:	add    BYTE PTR [rax],al
   14001ef08:	mov    eax,0x14001b8
   14001ef0d:	add    BYTE PTR [rax],al
   14001ef0f:	add    al,cl
   14001ef11:	mov    eax,0x14001
	...
   14001ef1e:	add    BYTE PTR [rax],al
   14001ef20:	sar    BYTE PTR [rax+0x14001],1
   14001ef26:	add    BYTE PTR [rax],al
   14001ef28:	mov    eax,0x14001b8
   14001ef2d:	add    BYTE PTR [rax],al
   14001ef2f:	add    al,cl
   14001ef31:	mov    eax,0x14001
	...
   14001ef3e:	add    BYTE PTR [rax],al
   14001ef40:	sar    BYTE PTR [rax+0x14001],1
   14001ef46:	add    BYTE PTR [rax],al
   14001ef48:	mov    al,0xb8
   14001ef4a:	add    DWORD PTR [rax+0x1],eax
   14001ef4d:	add    BYTE PTR [rax],al
   14001ef4f:	add    al,cl
   14001ef51:	mov    eax,0x14001
	...
   14001ef5e:	add    BYTE PTR [rax],al
   14001ef60:	sar    BYTE PTR [rax+0x14001],1
   14001ef66:	add    BYTE PTR [rax],al
   14001ef68:	cwde   
   14001ef69:	mov    eax,0x14001
   14001ef6e:	add    BYTE PTR [rax],al
   14001ef70:	enter  0x1b8,0x40
   14001ef74:	add    DWORD PTR [rax],eax
	...
   14001ef7e:	add    BYTE PTR [rax],al
   14001ef80:	sar    BYTE PTR [rax+0x14001],1
   14001ef86:	add    BYTE PTR [rax],al
   14001ef88:	mov    eax,0x14001b8
   14001ef8d:	add    BYTE PTR [rax],al
   14001ef8f:	add    BYTE PTR [rax+0x14001b8],dl
   14001ef95:	add    BYTE PTR [rax],al
   14001ef97:	add    al,cl
   14001ef99:	mov    eax,0x14001
	...
   14001efa6:	add    BYTE PTR [rax],al
   14001efa8:	sar    BYTE PTR [rax+0x14001],1
   14001efae:	add    BYTE PTR [rax],al
   14001efb0:	js     0x14001ef6a
   14001efb2:	add    DWORD PTR [rax+0x1],eax
   14001efb5:	add    BYTE PTR [rax],al
   14001efb7:	add    BYTE PTR [rax-0x48],bl
   14001efba:	add    DWORD PTR [rax+0x1],eax
   14001efbd:	add    BYTE PTR [rax],al
   14001efbf:	add    al,cl
   14001efc1:	mov    eax,0x14001
	...
   14001efce:	add    BYTE PTR [rax],al
   14001efd0:	sar    BYTE PTR [rax+0x14001],0x0
   14001efd7:	add    al,dl
   14001efd9:	mov    eax,0x14001
   14001efde:	add    BYTE PTR [rax],al
   14001efe0:	mov    eax,0x14001b8
   14001efe5:	add    BYTE PTR [rax],al
   14001efe7:	add    BYTE PTR [rax-0x48],dl
   14001efea:	add    DWORD PTR [rax+0x1],eax
   14001efed:	add    BYTE PTR [rax],al
   14001efef:	add    al,cl
   14001eff1:	mov    eax,0x14001
	...
   14001effe:	add    BYTE PTR [rax],al
   14001f000:	sar    BYTE PTR [rax+0x14001],0x0
   14001f007:	add    al,dl
   14001f009:	mov    eax,0x14001
   14001f00e:	add    BYTE PTR [rax],al
   14001f010:	mov    eax,0x14001b8
   14001f015:	add    BYTE PTR [rax],al
   14001f017:	add    BYTE PTR [rax-0x48],al
   14001f01a:	add    DWORD PTR [rax+0x1],eax
   14001f01d:	add    BYTE PTR [rax],al
   14001f01f:	add    al,cl
   14001f021:	mov    eax,0x14001
   14001f026:	add    BYTE PTR [rax],al
   14001f028:	and    BYTE PTR [rax+0x14001],bh
	...
   14001f036:	add    BYTE PTR [rax],al
   14001f038:	adc    eax,DWORD PTR [rax]
   14001f03a:	add    BYTE PTR [rax],al
   14001f03c:	and    eax,0x5b000000
   14001f041:	add    BYTE PTR [rax],al
   14001f043:	add    BYTE PTR [rdx+0x0],bh
   14001f046:	add    BYTE PTR [rax],al
   14001f048:	add    DWORD PTR [rax],eax
   14001f04a:	add    BYTE PTR [rax],al
   14001f04c:	add    BYTE PTR [rax],al
   14001f04e:	add    BYTE PTR [rax],al
   14001f050:	add    eax,DWORD PTR [rax]
   14001f052:	add    BYTE PTR [rax],al
   14001f054:	or     DWORD PTR [rax],eax
   14001f056:	add    BYTE PTR [rax],al
   14001f058:	adc    BYTE PTR [rax],al
   14001f05a:	add    BYTE PTR [rax],al
   14001f05c:	adc    al,BYTE PTR [rax]
   14001f05e:	add    BYTE PTR [rax],al
   14001f060:	adc    eax,0x19000000
   14001f065:	add    BYTE PTR [rax],al
   14001f067:	add    BYTE PTR [rbx],ah
   14001f069:	add    BYTE PTR [rax],al
   14001f06b:	add    BYTE PTR [rip+0x32000000],ch        # 0x17201f071
   14001f071:	add    BYTE PTR [rax],al
   14001f073:	add    BYTE PTR [rax+rax*1],dh
   14001f076:	add    BYTE PTR [rax],al
   14001f078:	cmp    eax,DWORD PTR [rax]
   14001f07a:	add    BYTE PTR [rax],al
   14001f07c:	cmp    al,0x0
   14001f07e:	add    BYTE PTR [rax],al
   14001f080:	rex.X add BYTE PTR [rax],al
   14001f083:	add    BYTE PTR [rax+rax*1+0x0],cl
   14001f087:	add    BYTE PTR [rbx+0x0],dl
   14001f08a:	add    BYTE PTR [rax],al
   14001f08c:	pop    rcx
   14001f08d:	add    BYTE PTR [rax],al
   14001f08f:	add    BYTE PTR [rax+0x0],dh
   14001f092:	add    BYTE PTR [rax],al
   14001f094:	js     0x14001f096
   14001f096:	add    BYTE PTR [rax],al
   14001f098:	jns    0x14001f09a
   14001f09a:	add    BYTE PTR [rax],al
   14001f09c:	test   BYTE PTR [rax],al
   14001f09e:	add    BYTE PTR [rax],al
   14001f0a0:	mov    al,BYTE PTR [rax]
   14001f0a2:	add    BYTE PTR [rax],al
   14001f0a4:	mov    eax,DWORD PTR [rax]
   14001f0a6:	add    BYTE PTR [rax],al
   14001f0a8:	add    DWORD PTR [rax],eax
   14001f0aa:	add    BYTE PTR [rax],al
   14001f0ac:	add    BYTE PTR [rax],al
   14001f0ae:	add    BYTE PTR [rax],al
   14001f0b0:	add    al,BYTE PTR [rax]
   14001f0b2:	add    BYTE PTR [rax],al
   14001f0b4:	add    al,0x0
   14001f0b6:	add    BYTE PTR [rax],al
   14001f0b8:	add    eax,0x6000000
   14001f0bd:	add    BYTE PTR [rax],al
   14001f0bf:	add    BYTE PTR [rdi],al
   14001f0c1:	add    BYTE PTR [rax],al
   14001f0c3:	add    BYTE PTR [rdx],cl
   14001f0c5:	add    BYTE PTR [rax],al
   14001f0c7:	add    BYTE PTR [rbx],cl
   14001f0c9:	add    BYTE PTR [rax],al
   14001f0cb:	add    BYTE PTR [rax+rax*1],cl
   14001f0ce:	add    BYTE PTR [rax],al
   14001f0d0:	or     eax,0xe000000
   14001f0d5:	add    BYTE PTR [rax],al
   14001f0d7:	add    BYTE PTR [rdi],cl
   14001f0d9:	add    BYTE PTR [rax],al
   14001f0db:	add    BYTE PTR [rcx],dl
   14001f0dd:	add    BYTE PTR [rax],al
   14001f0df:	add    BYTE PTR [rax+rax*1],dl
   14001f0e2:	add    BYTE PTR [rax],al
   14001f0e4:	(bad)  
   14001f0e5:	add    BYTE PTR [rax],al
   14001f0e7:	add    BYTE PTR [rax],bl
   14001f0e9:	add    BYTE PTR [rax],al
   14001f0eb:	add    BYTE PTR [rcx+0x1a000000],dl
   14001f0f1:	add    BYTE PTR [rax],al
   14001f0f3:	add    BYTE PTR [rip+0x1e000000],bl        # 0x15e01f0f9
   14001f0f9:	add    BYTE PTR [rax],al
   14001f0fb:	add    BYTE PTR [rdi],bl
   14001f0fd:	add    BYTE PTR [rax],al
   14001f0ff:	add    BYTE PTR [rax],ah
   14001f101:	add    BYTE PTR [rax],al
   14001f103:	add    BYTE PTR [rcx],ah
   14001f105:	add    BYTE PTR [rax],al
   14001f107:	add    BYTE PTR [rdx],ah
   14001f109:	add    BYTE PTR [rax],al
   14001f10b:	add    BYTE PTR [rax+rax*1],ah
   14001f10e:	add    BYTE PTR [rax],al
   14001f110:	add    BYTE PTR es:[rax],al
   14001f113:	add    BYTE PTR [rax],ch
   14001f115:	add    BYTE PTR [rax],al
   14001f117:	add    BYTE PTR [rcx],ch
   14001f119:	add    BYTE PTR [rax],al
   14001f11b:	add    BYTE PTR [rdx],ch
   14001f11d:	add    BYTE PTR [rax],al
   14001f11f:	add    BYTE PTR [rbx],ch
   14001f121:	add    BYTE PTR [rax],al
   14001f123:	add    BYTE PTR [rax+rax*1],ch
   14001f126:	add    BYTE PTR [rax],al
   14001f128:	add    BYTE PTR cs:[rax],al
   14001f12b:	add    BYTE PTR [rdi],ch
   14001f12d:	add    BYTE PTR [rax],al
   14001f12f:	add    BYTE PTR [rax],dh
   14001f131:	add    BYTE PTR [rax],al
   14001f133:	add    BYTE PTR [rcx],dh
   14001f135:	add    BYTE PTR [rax],al
   14001f137:	add    BYTE PTR [rbx],dh
   14001f139:	add    BYTE PTR [rax],al
   14001f13b:	add    BYTE PTR [rip+0x36000000],dh        # 0x17601f141
   14001f141:	add    BYTE PTR [rax],al
   14001f143:	add    BYTE PTR [rdx],bh
   14001f145:	add    BYTE PTR [rax],al
   14001f147:	add    BYTE PTR [rip+0x3e000000],bh        # 0x17e01f14d
   14001f14d:	add    BYTE PTR [rax],al
   14001f14f:	add    BYTE PTR [rdi],bh
   14001f151:	add    BYTE PTR [rax],al
   14001f153:	add    BYTE PTR [rax+0x0],al
   14001f156:	add    BYTE PTR [rax],al
   14001f158:	add    BYTE PTR [r8],al
   14001f15b:	add    BYTE PTR [rbx+0x0],al
   14001f15e:	add    BYTE PTR [rax],al
   14001f160:	add    BYTE PTR [rax],r8b
   14001f163:	add    BYTE PTR [rbp+0x0],al
   14001f166:	add    BYTE PTR [rax],al
   14001f168:	rex.RX add BYTE PTR [rax],r8b
   14001f16b:	add    BYTE PTR [rax+0x0],cl
   14001f16e:	add    BYTE PTR [rax],al
   14001f170:	rex.WXB add BYTE PTR [r8],al
   14001f173:	add    BYTE PTR [rbp+0x0],cl
   14001f176:	add    BYTE PTR [rax],al
   14001f178:	push   rax
   14001f179:	add    BYTE PTR [rax],al
   14001f17b:	add    BYTE PTR [rdx+0x0],dl
   14001f17e:	add    BYTE PTR [rax],al
   14001f180:	push   rsp
   14001f181:	add    BYTE PTR [rax],al
   14001f183:	add    BYTE PTR [rbp+0x0],dl
   14001f186:	add    BYTE PTR [rax],al
   14001f188:	lea    eax,[rax]
   14001f18a:	add    BYTE PTR [rax],al
   14001f18c:	push   rsi
   14001f18d:	add    BYTE PTR [rax],al
   14001f18f:	add    BYTE PTR [rdi+0x0],dl
   14001f192:	add    BYTE PTR [rax],al
   14001f194:	pop    rax
   14001f195:	add    BYTE PTR [rax],al
   14001f197:	add    BYTE PTR [rbx+0x0],bl
   14001f19a:	add    BYTE PTR [rax],al
   14001f19c:	pop    rsp
   14001f19d:	add    BYTE PTR [rax],al
   14001f19f:	add    BYTE PTR [rbp+0x0],bl
   14001f1a2:	add    BYTE PTR [rax],al
   14001f1a4:	pop    rsi
   14001f1a5:	add    BYTE PTR [rax],al
   14001f1a7:	add    BYTE PTR [rsi+0x0],ah
   14001f1aa:	add    BYTE PTR [rax],al
   14001f1ac:	add    BYTE PTR [eax],al
   14001f1af:	add    BYTE PTR [rax+0x0],ch
   14001f1b2:	add    BYTE PTR [rax],al
   14001f1b4:	imul   eax,DWORD PTR [rax],0x6a0000
   14001f1ba:	add    BYTE PTR [rax],al
   14001f1bc:	imul   eax,DWORD PTR [rax],0x0
   14001f1bf:	add    BYTE PTR [rsi+0x0],ch
   14001f1c2:	add    BYTE PTR [rax],al
   14001f1c4:	outs   dx,DWORD PTR ds:[rsi]
   14001f1c5:	add    BYTE PTR [rax],al
   14001f1c7:	add    BYTE PTR [rcx+0x0],dh
   14001f1ca:	add    BYTE PTR [rax],al
   14001f1cc:	jb     0x14001f1ce
   14001f1ce:	add    BYTE PTR [rax],al
   14001f1d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001f1d1:	add    BYTE PTR [rax],al
   14001f1d3:	add    BYTE PTR [rax+rax*1+0x0],dh
   14001f1d7:	add    BYTE PTR [rbp+0x0],dh
   14001f1da:	add    BYTE PTR [rax],al
   14001f1dc:	jbe    0x14001f1de
   14001f1de:	add    BYTE PTR [rax],al
   14001f1e0:	ja     0x14001f1e2
   14001f1e2:	add    BYTE PTR [rax],al
   14001f1e4:	jnp    0x14001f1e6
   14001f1e6:	add    BYTE PTR [rax],al
   14001f1e8:	jl     0x14001f1ea
   14001f1ea:	add    BYTE PTR [rax],al
   14001f1ec:	jge    0x14001f1ee
   14001f1ee:	add    BYTE PTR [rax],al
   14001f1f0:	jle    0x14001f1f2
   14001f1f2:	add    BYTE PTR [rax],al
   14001f1f4:	xchg   edx,eax
   14001f1f5:	add    BYTE PTR [rax],al
   14001f1f7:	add    BYTE PTR [rax-0x7d000000],al
   14001f1fd:	add    BYTE PTR [rax],al
   14001f1ff:	add    BYTE PTR [rbp-0x79000000],al
   14001f205:	add    BYTE PTR [rax],al
   14001f207:	add    BYTE PTR [rax-0x77000000],cl
   14001f20d:	add    BYTE PTR [rax],al
   14001f20f:	add    BYTE PTR [rax+rax*1+0x10000],cl
   14001f216:	add    BYTE PTR [rax],al
   14001f218:	rex.RXB add BYTE PTR [r8],r8b
   14001f21b:	add    BYTE PTR [rcx],al
   14001f21d:	add    BYTE PTR [rax],al
   14001f21f:	add    BYTE PTR [rdi+0x27000000],cl
   14001f225:	add    BYTE PTR [rax],al
   14001f227:	add    BYTE PTR [rdi],dh
   14001f229:	add    BYTE PTR [rax],al
   14001f22b:	add    BYTE PTR [rax],bh
   14001f22d:	add    BYTE PTR [rax],al
   14001f22f:	add    BYTE PTR [rcx],bh
   14001f231:	add    BYTE PTR [rax],al
   14001f233:	add    BYTE PTR [rax+0x4f000000],dl
   14001f239:	add    BYTE PTR [rax],al
   14001f23b:	add    BYTE PTR [rcx+0x0],ah
   14001f23e:	add    BYTE PTR [rax],al
   14001f240:	movsxd eax,DWORD PTR [rax]
   14001f242:	add    BYTE PTR [rax],al
   14001f244:	add    DWORD PTR [rax],eax
   14001f246:	add    BYTE PTR [rax],al
   14001f248:	sbb    al,0x0
   14001f24a:	add    BYTE PTR [rax],al
   14001f24c:	add    DWORD PTR [rax],eax
   14001f24e:	add    BYTE PTR [rax],al
   14001f250:	ins    BYTE PTR es:[rdi],dx
   14001f251:	add    BYTE PTR [rax],al
   14001f253:	add    BYTE PTR [rcx],al
   14001f255:	add    BYTE PTR [rax],al
   14001f257:	add    BYTE PTR [rdx+0x0],cl
   14001f25a:	add    BYTE PTR [rax],al
   14001f25c:	add    DWORD PTR [rax],eax
   14001f25e:	add    BYTE PTR [rax],al
   14001f260:	rex.WB add BYTE PTR [r8],al
   14001f263:	add    BYTE PTR [rcx],al
   14001f265:	add    BYTE PTR [rax],al
   14001f267:	add    BYTE PTR [rsi+0x16000000],cl
   14001f26d:	add    BYTE PTR [rax],al
   14001f26f:	add    BYTE PTR [rbx],bl
   14001f271:	add    BYTE PTR [rax],al
   14001f273:	add    BYTE PTR [rax+0x0],ah
   14001f276:	add    BYTE PTR [rax],al
   14001f278:	add    BYTE PTR fs:[rax],al
   14001f27b:	add    BYTE PTR [rax+rax*1+0x0],ah
   14001f27f:	add    BYTE PTR [rcx+0x1000000],al
   14001f285:	add    BYTE PTR [rax],al
   14001f287:	add    BYTE PTR [rdx+0x0],bl
   14001f28a:	add    BYTE PTR [rax],al
   14001f28c:	add    DWORD PTR [rax],eax
   14001f28e:	add    BYTE PTR [rax],al
   14001f290:	pop    rdi
   14001f291:	add    BYTE PTR [rax],al
   14001f293:	add    BYTE PTR [rdi+0x0],bl
   14001f296:	add    BYTE PTR [rax],al
   14001f298:	add    DWORD PTR [rax],eax
   14001f29a:	add    BYTE PTR [rax],al
   14001f29c:	add    BYTE PTR [rax],al
   14001f29e:	add    BYTE PTR [rax],al
   14001f2a0:	ins    DWORD PTR es:[rdi],dx
   14001f2a1:	add    BYTE PTR [rax],al
   14001f2a3:	add    BYTE PTR [rcx],al
   14001f2a5:	add    BYTE PTR [rax],al
   14001f2a7:	add    BYTE PTR [rsi+0x0],cl
   14001f2aa:	add    BYTE PTR [rax],al
   14001f2ac:	add    DWORD PTR [rax],eax
   14001f2ae:	add    BYTE PTR [rax],al
   14001f2b0:	xchg   BYTE PTR [rax],al
   14001f2b2:	add    BYTE PTR [rax],al
   14001f2b4:	add    DWORD PTR [rax],eax
   14001f2b6:	add    BYTE PTR [rax],al
   14001f2b8:	or     BYTE PTR [rax],al
   14001f2ba:	add    BYTE PTR [rax],al
   14001f2bc:	add    DWORD PTR [rax],eax
	...
   14001f2c6:	add    BYTE PTR [rax],al
   14001f2c8:	(bad)  
   14001f2c9:	add    BYTE PTR [rax],al
   14001f2cb:	add    BYTE PTR [rax],al
   14001f2cd:	add    BYTE PTR [rax],al
   14001f2cf:	add    BYTE PTR [rdx],ah
   14001f2d1:	add    eax,0x41993
   14001f2d6:	add    BYTE PTR [rax],al
   14001f2d8:	int3   
   14001f2d9:	add    al,BYTE PTR [r8]
	...
   14001f2e4:	(bad)  
   14001f2e5:	add    BYTE PTR [rax],al
   14001f2e7:	add    BYTE PTR [rax+0x2000025d],bh
   14001f2ed:	add    BYTE PTR [rax],al
   14001f2ef:	add    BYTE PTR [rax],al
   14001f2f1:	add    BYTE PTR [rax],al
   14001f2f3:	add    BYTE PTR [rcx],al
	...
   14001f2fd:	add    BYTE PTR [rax],al
   14001f2ff:	add    BYTE PTR [rdx],ah
   14001f301:	add    eax,0x1e1993
   14001f306:	add    BYTE PTR [rax],al
   14001f308:	or     BYTE PTR [rsi+0x2],bl
	...
   14001f313:	add    BYTE PTR [rax],ch
   14001f315:	add    BYTE PTR [rax],al
   14001f317:	add    al,bh
   14001f319:	pop    rsi
   14001f31a:	add    al,BYTE PTR [rax]
   14001f31c:	mov    BYTE PTR [rax],al
   14001f31e:	add    BYTE PTR [rax],al
   14001f320:	add    BYTE PTR [rax],al
   14001f322:	add    BYTE PTR [rax],al
   14001f324:	add    DWORD PTR [rax],eax
	...
   14001f32e:	add    BYTE PTR [rax],al
   14001f330:	loopne 0x14001f2ea
   14001f332:	add    DWORD PTR [rax+0x1],eax
	...
   14001f33d:	add    BYTE PTR [rax],al
   14001f33f:	add    al,dl
   14001f341:	mov    eax,0x14001
   14001f346:	add    BYTE PTR [rax],al
   14001f348:	enter  0x1b8,0x40
   14001f34c:	add    DWORD PTR [rax],eax
	...
   14001f356:	add    BYTE PTR [rax],al
   14001f358:	sar    BYTE PTR [rax+0x14001],1
   14001f35e:	add    BYTE PTR [rax],al
   14001f360:	enter  0x1b8,0x40
   14001f364:	add    DWORD PTR [rax],eax
	...
   14001f36e:	add    BYTE PTR [rax],al
   14001f370:	sar    BYTE PTR [rax+0x14001],1
   14001f376:	add    BYTE PTR [rax],al
   14001f378:	enter  0x1b8,0x40
   14001f37c:	add    DWORD PTR [rax],eax
   14001f37e:	add    BYTE PTR [rax],al
   14001f380:	sar    BYTE PTR [rax+0x14001],0x0
	...
   14001f38f:	add    al,dl
   14001f391:	mov    eax,0x14001
   14001f396:	add    BYTE PTR [rax],al
   14001f398:	mov    eax,0x14001b8
   14001f39d:	add    BYTE PTR [rax],al
   14001f39f:	add    al,cl
   14001f3a1:	mov    eax,0x14001
	...
   14001f3ae:	add    BYTE PTR [rax],al
   14001f3b0:	sar    BYTE PTR [rax+0x14001],1
   14001f3b6:	add    BYTE PTR [rax],al
   14001f3b8:	mov    eax,0x14001b8
   14001f3bd:	add    BYTE PTR [rax],al
   14001f3bf:	add    al,cl
   14001f3c1:	mov    eax,0x14001
	...
   14001f3ce:	add    BYTE PTR [rax],al
   14001f3d0:	sar    BYTE PTR [rax+0x14001],1
   14001f3d6:	add    BYTE PTR [rax],al
   14001f3d8:	mov    eax,0x14001b8
   14001f3dd:	add    BYTE PTR [rax],al
   14001f3df:	add    al,cl
   14001f3e1:	mov    eax,0x14001
	...
   14001f3ee:	add    BYTE PTR [rax],al
   14001f3f0:	sar    BYTE PTR [rax+0x14001],1
   14001f3f6:	add    BYTE PTR [rax],al
   14001f3f8:	mov    eax,0x14001b8
   14001f3fd:	add    BYTE PTR [rax],al
   14001f3ff:	add    al,cl
   14001f401:	mov    eax,0x14001
	...
   14001f40e:	add    BYTE PTR [rax],al
   14001f410:	sar    BYTE PTR [rax+0x14001],1
   14001f416:	add    BYTE PTR [rax],al
   14001f418:	mov    eax,0x14001b8
   14001f41d:	add    BYTE PTR [rax],al
   14001f41f:	add    al,cl
   14001f421:	mov    eax,0x14001
	...
   14001f42e:	add    BYTE PTR [rax],al
   14001f430:	sar    BYTE PTR [rax+0x14001],1
   14001f436:	add    BYTE PTR [rax],al
   14001f438:	mov    eax,0x14001b8
   14001f43d:	add    BYTE PTR [rax],al
   14001f43f:	add    al,cl
   14001f441:	mov    eax,0x14001
	...
   14001f44e:	add    BYTE PTR [rax],al
   14001f450:	sar    BYTE PTR [rax+0x14001],1
   14001f456:	add    BYTE PTR [rax],al
   14001f458:	mov    al,0xb8
   14001f45a:	add    DWORD PTR [rax+0x1],eax
   14001f45d:	add    BYTE PTR [rax],al
   14001f45f:	add    al,cl
   14001f461:	mov    eax,0x14001
	...
   14001f46e:	add    BYTE PTR [rax],al
   14001f470:	sar    BYTE PTR [rax+0x14001],1
   14001f476:	add    BYTE PTR [rax],al
   14001f478:	cwde   
   14001f479:	mov    eax,0x14001
   14001f47e:	add    BYTE PTR [rax],al
   14001f480:	enter  0x1b8,0x40
   14001f484:	add    DWORD PTR [rax],eax
	...
   14001f48e:	add    BYTE PTR [rax],al
   14001f490:	sar    BYTE PTR [rax+0x14001],1
   14001f496:	add    BYTE PTR [rax],al
   14001f498:	mov    eax,0x14001b8
   14001f49d:	add    BYTE PTR [rax],al
   14001f49f:	add    BYTE PTR [rax+0x14001b8],dl
   14001f4a5:	add    BYTE PTR [rax],al
   14001f4a7:	add    al,cl
   14001f4a9:	mov    eax,0x14001
	...
   14001f4b6:	add    BYTE PTR [rax],al
   14001f4b8:	sar    BYTE PTR [rax+0x14001],1
   14001f4be:	add    BYTE PTR [rax],al
   14001f4c0:	js     0x14001f47a
   14001f4c2:	add    DWORD PTR [rax+0x1],eax
   14001f4c5:	add    BYTE PTR [rax],al
   14001f4c7:	add    BYTE PTR [rax-0x48],bl
   14001f4ca:	add    DWORD PTR [rax+0x1],eax
   14001f4cd:	add    BYTE PTR [rax],al
   14001f4cf:	add    al,cl
   14001f4d1:	mov    eax,0x14001
	...
   14001f4de:	add    BYTE PTR [rax],al
   14001f4e0:	sar    BYTE PTR [rax+0x14001],0x0
   14001f4e7:	add    al,dl
   14001f4e9:	mov    eax,0x14001
   14001f4ee:	add    BYTE PTR [rax],al
   14001f4f0:	mov    eax,0x14001b8
   14001f4f5:	add    BYTE PTR [rax],al
   14001f4f7:	add    BYTE PTR [rax-0x48],dl
   14001f4fa:	add    DWORD PTR [rax+0x1],eax
   14001f4fd:	add    BYTE PTR [rax],al
   14001f4ff:	add    al,cl
   14001f501:	mov    eax,0x14001
	...
   14001f50e:	add    BYTE PTR [rax],al
   14001f510:	sar    BYTE PTR [rax+0x14001],0x0
   14001f517:	add    al,dl
   14001f519:	mov    eax,0x14001
   14001f51e:	add    BYTE PTR [rax],al
   14001f520:	mov    eax,0x14001b8
   14001f525:	add    BYTE PTR [rax],al
   14001f527:	add    BYTE PTR [rax-0x48],al
   14001f52a:	add    DWORD PTR [rax+0x1],eax
   14001f52d:	add    BYTE PTR [rax],al
   14001f52f:	add    al,cl
   14001f531:	mov    eax,0x14001
   14001f536:	add    BYTE PTR [rax],al
   14001f538:	and    BYTE PTR [rax+0x14001],bh
	...
   14001f546:	add    BYTE PTR [rax],al
   14001f548:	adc    eax,DWORD PTR [rax]
   14001f54a:	add    BYTE PTR [rax],al
   14001f54c:	and    eax,0x5b000000
   14001f551:	add    BYTE PTR [rax],al
   14001f553:	add    BYTE PTR [rdx+0x0],bh
   14001f556:	add    BYTE PTR [rax],al
   14001f558:	add    DWORD PTR [rax],eax
   14001f55a:	add    BYTE PTR [rax],al
   14001f55c:	add    BYTE PTR [rax],al
   14001f55e:	add    BYTE PTR [rax],al
   14001f560:	add    eax,DWORD PTR [rax]
   14001f562:	add    BYTE PTR [rax],al
   14001f564:	or     DWORD PTR [rax],eax
   14001f566:	add    BYTE PTR [rax],al
   14001f568:	adc    BYTE PTR [rax],al
   14001f56a:	add    BYTE PTR [rax],al
   14001f56c:	adc    al,BYTE PTR [rax]
   14001f56e:	add    BYTE PTR [rax],al
   14001f570:	adc    eax,0x19000000
   14001f575:	add    BYTE PTR [rax],al
   14001f577:	add    BYTE PTR [rbx],ah
   14001f579:	add    BYTE PTR [rax],al
   14001f57b:	add    BYTE PTR [rip+0x32000000],ch        # 0x17201f581
   14001f581:	add    BYTE PTR [rax],al
   14001f583:	add    BYTE PTR [rax+rax*1],dh
   14001f586:	add    BYTE PTR [rax],al
   14001f588:	cmp    eax,DWORD PTR [rax]
   14001f58a:	add    BYTE PTR [rax],al
   14001f58c:	cmp    al,0x0
   14001f58e:	add    BYTE PTR [rax],al
   14001f590:	rex.X add BYTE PTR [rax],al
   14001f593:	add    BYTE PTR [rax+rax*1+0x0],cl
   14001f597:	add    BYTE PTR [rbx+0x0],dl
   14001f59a:	add    BYTE PTR [rax],al
   14001f59c:	pop    rcx
   14001f59d:	add    BYTE PTR [rax],al
   14001f59f:	add    BYTE PTR [rax+0x0],dh
   14001f5a2:	add    BYTE PTR [rax],al
   14001f5a4:	js     0x14001f5a6
   14001f5a6:	add    BYTE PTR [rax],al
   14001f5a8:	jns    0x14001f5aa
   14001f5aa:	add    BYTE PTR [rax],al
   14001f5ac:	test   BYTE PTR [rax],al
   14001f5ae:	add    BYTE PTR [rax],al
   14001f5b0:	mov    al,BYTE PTR [rax]
   14001f5b2:	add    BYTE PTR [rax],al
   14001f5b4:	mov    eax,DWORD PTR [rax]
   14001f5b6:	add    BYTE PTR [rax],al
   14001f5b8:	add    DWORD PTR [rax],eax
   14001f5ba:	add    BYTE PTR [rax],al
   14001f5bc:	add    BYTE PTR [rax],al
   14001f5be:	add    BYTE PTR [rax],al
   14001f5c0:	add    al,BYTE PTR [rax]
   14001f5c2:	add    BYTE PTR [rax],al
   14001f5c4:	add    al,0x0
   14001f5c6:	add    BYTE PTR [rax],al
   14001f5c8:	add    eax,0x6000000
   14001f5cd:	add    BYTE PTR [rax],al
   14001f5cf:	add    BYTE PTR [rdi],al
   14001f5d1:	add    BYTE PTR [rax],al
   14001f5d3:	add    BYTE PTR [rdx],cl
   14001f5d5:	add    BYTE PTR [rax],al
   14001f5d7:	add    BYTE PTR [rbx],cl
   14001f5d9:	add    BYTE PTR [rax],al
   14001f5db:	add    BYTE PTR [rax+rax*1],cl
   14001f5de:	add    BYTE PTR [rax],al
   14001f5e0:	or     eax,0xe000000
   14001f5e5:	add    BYTE PTR [rax],al
   14001f5e7:	add    BYTE PTR [rdi],cl
   14001f5e9:	add    BYTE PTR [rax],al
   14001f5eb:	add    BYTE PTR [rcx],dl
   14001f5ed:	add    BYTE PTR [rax],al
   14001f5ef:	add    BYTE PTR [rax+rax*1],dl
   14001f5f2:	add    BYTE PTR [rax],al
   14001f5f4:	(bad)  
   14001f5f5:	add    BYTE PTR [rax],al
   14001f5f7:	add    BYTE PTR [rax],bl
   14001f5f9:	add    BYTE PTR [rax],al
   14001f5fb:	add    BYTE PTR [rcx+0x1a000000],dl
   14001f601:	add    BYTE PTR [rax],al
   14001f603:	add    BYTE PTR [rip+0x1e000000],bl        # 0x15e01f609
   14001f609:	add    BYTE PTR [rax],al
   14001f60b:	add    BYTE PTR [rdi],bl
   14001f60d:	add    BYTE PTR [rax],al
   14001f60f:	add    BYTE PTR [rax],ah
   14001f611:	add    BYTE PTR [rax],al
   14001f613:	add    BYTE PTR [rcx],ah
   14001f615:	add    BYTE PTR [rax],al
   14001f617:	add    BYTE PTR [rdx],ah
   14001f619:	add    BYTE PTR [rax],al
   14001f61b:	add    BYTE PTR [rax+rax*1],ah
   14001f61e:	add    BYTE PTR [rax],al
   14001f620:	add    BYTE PTR es:[rax],al
   14001f623:	add    BYTE PTR [rax],ch
   14001f625:	add    BYTE PTR [rax],al
   14001f627:	add    BYTE PTR [rcx],ch
   14001f629:	add    BYTE PTR [rax],al
   14001f62b:	add    BYTE PTR [rdx],ch
   14001f62d:	add    BYTE PTR [rax],al
   14001f62f:	add    BYTE PTR [rbx],ch
   14001f631:	add    BYTE PTR [rax],al
   14001f633:	add    BYTE PTR [rax+rax*1],ch
   14001f636:	add    BYTE PTR [rax],al
   14001f638:	add    BYTE PTR cs:[rax],al
   14001f63b:	add    BYTE PTR [rdi],ch
   14001f63d:	add    BYTE PTR [rax],al
   14001f63f:	add    BYTE PTR [rax],dh
   14001f641:	add    BYTE PTR [rax],al
   14001f643:	add    BYTE PTR [rcx],dh
   14001f645:	add    BYTE PTR [rax],al
   14001f647:	add    BYTE PTR [rbx],dh
   14001f649:	add    BYTE PTR [rax],al
   14001f64b:	add    BYTE PTR [rip+0x36000000],dh        # 0x17601f651
   14001f651:	add    BYTE PTR [rax],al
   14001f653:	add    BYTE PTR [rdx],bh
   14001f655:	add    BYTE PTR [rax],al
   14001f657:	add    BYTE PTR [rip+0x3e000000],bh        # 0x17e01f65d
   14001f65d:	add    BYTE PTR [rax],al
   14001f65f:	add    BYTE PTR [rdi],bh
   14001f661:	add    BYTE PTR [rax],al
   14001f663:	add    BYTE PTR [rax+0x0],al
   14001f666:	add    BYTE PTR [rax],al
   14001f668:	add    BYTE PTR [r8],al
   14001f66b:	add    BYTE PTR [rbx+0x0],al
   14001f66e:	add    BYTE PTR [rax],al
   14001f670:	add    BYTE PTR [rax],r8b
   14001f673:	add    BYTE PTR [rbp+0x0],al
   14001f676:	add    BYTE PTR [rax],al
   14001f678:	rex.RX add BYTE PTR [rax],r8b
   14001f67b:	add    BYTE PTR [rax+0x0],cl
   14001f67e:	add    BYTE PTR [rax],al
   14001f680:	rex.WXB add BYTE PTR [r8],al
   14001f683:	add    BYTE PTR [rbp+0x0],cl
   14001f686:	add    BYTE PTR [rax],al
   14001f688:	push   rax
   14001f689:	add    BYTE PTR [rax],al
   14001f68b:	add    BYTE PTR [rdx+0x0],dl
   14001f68e:	add    BYTE PTR [rax],al
   14001f690:	push   rsp
   14001f691:	add    BYTE PTR [rax],al
   14001f693:	add    BYTE PTR [rbp+0x0],dl
   14001f696:	add    BYTE PTR [rax],al
   14001f698:	lea    eax,[rax]
   14001f69a:	add    BYTE PTR [rax],al
   14001f69c:	push   rsi
   14001f69d:	add    BYTE PTR [rax],al
   14001f69f:	add    BYTE PTR [rdi+0x0],dl
   14001f6a2:	add    BYTE PTR [rax],al
   14001f6a4:	pop    rax
   14001f6a5:	add    BYTE PTR [rax],al
   14001f6a7:	add    BYTE PTR [rbx+0x0],bl
   14001f6aa:	add    BYTE PTR [rax],al
   14001f6ac:	pop    rsp
   14001f6ad:	add    BYTE PTR [rax],al
   14001f6af:	add    BYTE PTR [rbp+0x0],bl
   14001f6b2:	add    BYTE PTR [rax],al
   14001f6b4:	pop    rsi
   14001f6b5:	add    BYTE PTR [rax],al
   14001f6b7:	add    BYTE PTR [rsi+0x0],ah
   14001f6ba:	add    BYTE PTR [rax],al
   14001f6bc:	add    BYTE PTR [eax],al
   14001f6bf:	add    BYTE PTR [rax+0x0],ch
   14001f6c2:	add    BYTE PTR [rax],al
   14001f6c4:	imul   eax,DWORD PTR [rax],0x6a0000
   14001f6ca:	add    BYTE PTR [rax],al
   14001f6cc:	imul   eax,DWORD PTR [rax],0x0
   14001f6cf:	add    BYTE PTR [rsi+0x0],ch
   14001f6d2:	add    BYTE PTR [rax],al
   14001f6d4:	outs   dx,DWORD PTR ds:[rsi]
   14001f6d5:	add    BYTE PTR [rax],al
   14001f6d7:	add    BYTE PTR [rcx+0x0],dh
   14001f6da:	add    BYTE PTR [rax],al
   14001f6dc:	jb     0x14001f6de
   14001f6de:	add    BYTE PTR [rax],al
   14001f6e0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001f6e1:	add    BYTE PTR [rax],al
   14001f6e3:	add    BYTE PTR [rax+rax*1+0x0],dh
   14001f6e7:	add    BYTE PTR [rbp+0x0],dh
   14001f6ea:	add    BYTE PTR [rax],al
   14001f6ec:	jbe    0x14001f6ee
   14001f6ee:	add    BYTE PTR [rax],al
   14001f6f0:	ja     0x14001f6f2
   14001f6f2:	add    BYTE PTR [rax],al
   14001f6f4:	jnp    0x14001f6f6
   14001f6f6:	add    BYTE PTR [rax],al
   14001f6f8:	jl     0x14001f6fa
   14001f6fa:	add    BYTE PTR [rax],al
   14001f6fc:	jge    0x14001f6fe
   14001f6fe:	add    BYTE PTR [rax],al
   14001f700:	jle    0x14001f702
   14001f702:	add    BYTE PTR [rax],al
   14001f704:	xchg   edx,eax
   14001f705:	add    BYTE PTR [rax],al
   14001f707:	add    BYTE PTR [rax-0x7d000000],al
   14001f70d:	add    BYTE PTR [rax],al
   14001f70f:	add    BYTE PTR [rbp-0x79000000],al
   14001f715:	add    BYTE PTR [rax],al
   14001f717:	add    BYTE PTR [rax-0x77000000],cl
   14001f71d:	add    BYTE PTR [rax],al
   14001f71f:	add    BYTE PTR [rax+rax*1+0x10000],cl
   14001f726:	add    BYTE PTR [rax],al
   14001f728:	rex.RXB add BYTE PTR [r8],r8b
   14001f72b:	add    BYTE PTR [rcx],al
   14001f72d:	add    BYTE PTR [rax],al
   14001f72f:	add    BYTE PTR [rdi+0x27000000],cl
   14001f735:	add    BYTE PTR [rax],al
   14001f737:	add    BYTE PTR [rdi],dh
   14001f739:	add    BYTE PTR [rax],al
   14001f73b:	add    BYTE PTR [rax],bh
   14001f73d:	add    BYTE PTR [rax],al
   14001f73f:	add    BYTE PTR [rcx],bh
   14001f741:	add    BYTE PTR [rax],al
   14001f743:	add    BYTE PTR [rax+0x4f000000],dl
   14001f749:	add    BYTE PTR [rax],al
   14001f74b:	add    BYTE PTR [rcx+0x0],ah
   14001f74e:	add    BYTE PTR [rax],al
   14001f750:	movsxd eax,DWORD PTR [rax]
   14001f752:	add    BYTE PTR [rax],al
   14001f754:	add    DWORD PTR [rax],eax
   14001f756:	add    BYTE PTR [rax],al
   14001f758:	sbb    al,0x0
   14001f75a:	add    BYTE PTR [rax],al
   14001f75c:	add    DWORD PTR [rax],eax
   14001f75e:	add    BYTE PTR [rax],al
   14001f760:	ins    BYTE PTR es:[rdi],dx
   14001f761:	add    BYTE PTR [rax],al
   14001f763:	add    BYTE PTR [rcx],al
   14001f765:	add    BYTE PTR [rax],al
   14001f767:	add    BYTE PTR [rdx+0x0],cl
   14001f76a:	add    BYTE PTR [rax],al
   14001f76c:	add    DWORD PTR [rax],eax
   14001f76e:	add    BYTE PTR [rax],al
   14001f770:	rex.WB add BYTE PTR [r8],al
   14001f773:	add    BYTE PTR [rcx],al
   14001f775:	add    BYTE PTR [rax],al
   14001f777:	add    BYTE PTR [rsi+0x16000000],cl
   14001f77d:	add    BYTE PTR [rax],al
   14001f77f:	add    BYTE PTR [rbx],bl
   14001f781:	add    BYTE PTR [rax],al
   14001f783:	add    BYTE PTR [rax+0x0],ah
   14001f786:	add    BYTE PTR [rax],al
   14001f788:	add    BYTE PTR fs:[rax],al
   14001f78b:	add    BYTE PTR [rax+rax*1+0x0],ah
   14001f78f:	add    BYTE PTR [rcx+0x1000000],al
   14001f795:	add    BYTE PTR [rax],al
   14001f797:	add    BYTE PTR [rdx+0x0],bl
   14001f79a:	add    BYTE PTR [rax],al
   14001f79c:	add    DWORD PTR [rax],eax
   14001f79e:	add    BYTE PTR [rax],al
   14001f7a0:	pop    rdi
   14001f7a1:	add    BYTE PTR [rax],al
   14001f7a3:	add    BYTE PTR [rdi+0x0],bl
   14001f7a6:	add    BYTE PTR [rax],al
   14001f7a8:	add    DWORD PTR [rax],eax
   14001f7aa:	add    BYTE PTR [rax],al
   14001f7ac:	add    BYTE PTR [rax],al
   14001f7ae:	add    BYTE PTR [rax],al
   14001f7b0:	ins    DWORD PTR es:[rdi],dx
   14001f7b1:	add    BYTE PTR [rax],al
   14001f7b3:	add    BYTE PTR [rcx],al
   14001f7b5:	add    BYTE PTR [rax],al
   14001f7b7:	add    BYTE PTR [rsi+0x0],cl
   14001f7ba:	add    BYTE PTR [rax],al
   14001f7bc:	add    DWORD PTR [rax],eax
   14001f7be:	add    BYTE PTR [rax],al
   14001f7c0:	xchg   BYTE PTR [rax],al
   14001f7c2:	add    BYTE PTR [rax],al
   14001f7c4:	add    DWORD PTR [rax],eax
   14001f7c6:	add    BYTE PTR [rax],al
   14001f7c8:	or     BYTE PTR [rax],al
   14001f7ca:	add    BYTE PTR [rax],al
   14001f7cc:	add    DWORD PTR [rax],eax
	...
   14001f7d6:	add    BYTE PTR [rax],al
   14001f7d8:	(bad)  
	...
   14001f861:	add    BYTE PTR [rax],al
   14001f863:	add    BYTE PTR [rdx],al
   14001f865:	add    BYTE PTR [rax],al
   14001f867:	add    BYTE PTR [rsi],al
   14001f869:	add    BYTE PTR [rax],al
   14001f86b:	add    BYTE PTR [rdi],al
   14001f86d:	add    BYTE PTR [rax],al
   14001f86f:	add    BYTE PTR [rdx],cl
   14001f871:	add    BYTE PTR [rax],al
   14001f873:	add    BYTE PTR [rax+rax*1],cl
   14001f876:	add    BYTE PTR [rax],al
   14001f878:	sldt   WORD PTR [rax]
   14001f87b:	add    BYTE PTR [rbx],dl
   14001f87d:	add    BYTE PTR [rax],al
   14001f87f:	add    BYTE PTR [rdx],al
   14001f881:	add    BYTE PTR [rax],al
   14001f883:	add    BYTE PTR [rsi],al
   14001f885:	add    BYTE PTR [rax],al
   14001f887:	add    BYTE PTR [rdi],al
   14001f889:	add    BYTE PTR [rax],al
   14001f88b:	add    BYTE PTR [rdx],cl
   14001f88d:	add    BYTE PTR [rax],al
   14001f88f:	add    BYTE PTR [rax+rax*1],cl
   14001f892:	add    BYTE PTR [rax],al
   14001f894:	sldt   WORD PTR [rax]
   14001f897:	add    BYTE PTR [rbx],dl
   14001f899:	add    BYTE PTR [rax],al
   14001f89b:	add    BYTE PTR [rax],al
   14001f89d:	add    BYTE PTR [rax],al
   14001f89f:	add    BYTE PTR [rcx],al
   14001f8a1:	add    BYTE PTR [rax],al
   14001f8a3:	add    BYTE PTR [rbx],al
   14001f8a5:	add    BYTE PTR [rax],al
   14001f8a7:	add    BYTE PTR [rax+rax*1],al
   14001f8aa:	add    BYTE PTR [rax],al
   14001f8ac:	add    eax,0x8000000
   14001f8b1:	add    BYTE PTR [rax],al
   14001f8b3:	add    BYTE PTR [rcx],cl
   14001f8b5:	add    BYTE PTR [rax],al
   14001f8b7:	add    BYTE PTR [rbx],cl
   14001f8b9:	add    BYTE PTR [rax],al
   14001f8bb:	add    BYTE PTR [rip+0xe000000],cl        # 0x14e01f8c1
   14001f8c1:	add    BYTE PTR [rax],al
   14001f8c3:	add    BYTE PTR [rax],dl
   14001f8c5:	add    BYTE PTR [rax],al
   14001f8c7:	add    BYTE PTR [rdx],al
   14001f8c9:	add    BYTE PTR [rax],al
   14001f8cb:	add    BYTE PTR [rsi],al
   14001f8cd:	add    BYTE PTR [rax],al
   14001f8cf:	add    BYTE PTR [rdi],al
   14001f8d1:	add    BYTE PTR [rax],al
   14001f8d3:	add    BYTE PTR [rdx],cl
   14001f8d5:	add    BYTE PTR [rax],al
   14001f8d7:	add    BYTE PTR [rax+rax*1],cl
   14001f8da:	add    BYTE PTR [rax],al
   14001f8dc:	sldt   WORD PTR [rax]
   14001f8df:	add    BYTE PTR [rax],al
   14001f8e1:	add    BYTE PTR [rax],al
   14001f8e3:	add    BYTE PTR [rcx],al
   14001f8e5:	add    BYTE PTR [rax],al
   14001f8e7:	add    BYTE PTR [rdx],al
   14001f8e9:	add    BYTE PTR [rax],al
   14001f8eb:	add    BYTE PTR [rbx],al
   14001f8ed:	add    BYTE PTR [rax],al
   14001f8ef:	add    BYTE PTR [rax+rax*1],al
   14001f8f2:	add    BYTE PTR [rax],al
   14001f8f4:	add    eax,0x6000000
   14001f8f9:	add    BYTE PTR [rax],al
   14001f8fb:	add    BYTE PTR [rdi],al
   14001f8fd:	add    BYTE PTR [rax],al
   14001f8ff:	add    BYTE PTR [rax],cl
   14001f901:	add    BYTE PTR [rax],al
   14001f903:	add    BYTE PTR [rcx],cl
   14001f905:	add    BYTE PTR [rax],al
   14001f907:	add    BYTE PTR [rsi],al
   14001f909:	add    BYTE PTR [rax],al
   14001f90b:	add    BYTE PTR [rdx],cl
   14001f90d:	add    BYTE PTR [rax],al
   14001f90f:	add    BYTE PTR [rbx],cl
   14001f911:	add    BYTE PTR [rax],al
   14001f913:	add    BYTE PTR [rax+rax*1],cl
   14001f916:	add    BYTE PTR [rax],al
   14001f918:	or     eax,0xe000000
   14001f91d:	add    BYTE PTR [rax],al
   14001f91f:	add    BYTE PTR [rdi],cl
   14001f921:	add    BYTE PTR [rax],al
   14001f923:	add    BYTE PTR [rax+rax*1],cl
   14001f926:	add    BYTE PTR [rax],al
   14001f928:	adc    BYTE PTR [rax],al
   14001f92a:	add    BYTE PTR [rax],al
   14001f92c:	adc    DWORD PTR [rax],eax
   14001f92e:	add    BYTE PTR [rax],al
   14001f930:	adc    al,BYTE PTR [rax]
   14001f932:	add    BYTE PTR [rax],al
   14001f934:	adc    eax,DWORD PTR [rax]
   14001f936:	add    BYTE PTR [rax],al
   14001f938:	add    al,BYTE PTR [rax]
   14001f93a:	add    BYTE PTR [rax],al
   14001f93c:	or     al,BYTE PTR [rax]
   14001f93e:	add    BYTE PTR [rax],al
   14001f940:	sldt   WORD PTR [rax]
   14001f943:	add    BYTE PTR [rdi],al
   14001f945:	add    BYTE PTR [rax],al
   14001f947:	add    BYTE PTR [rbx],dl
   14001f949:	add    BYTE PTR [rax],al
   14001f94b:	add    BYTE PTR [rdx],al
   14001f94d:	add    BYTE PTR [rax],al
   14001f94f:	add    BYTE PTR [rsi],al
   14001f951:	add    BYTE PTR [rax],al
   14001f953:	add    BYTE PTR [rdi],al
   14001f955:	add    BYTE PTR [rax],al
   14001f957:	add    BYTE PTR [rdx],cl
	...
   14001f961:	add    BYTE PTR [rax],al
   14001f963:	add    BYTE PTR [rcx],al
   14001f965:	add    BYTE PTR [rax],al
   14001f967:	add    BYTE PTR [rdx],al
   14001f969:	add    BYTE PTR [rax],al
   14001f96b:	add    BYTE PTR [rbx],al
   14001f96d:	add    BYTE PTR [rax],al
   14001f96f:	add    BYTE PTR [rax+rax*1],al
   14001f972:	add    BYTE PTR [rax],al
   14001f974:	add    eax,0x6000000
   14001f979:	add    BYTE PTR [rax],al
   14001f97b:	add    BYTE PTR [rdi],al
   14001f97d:	add    BYTE PTR [rax],al
   14001f97f:	add    BYTE PTR [rax],cl
   14001f981:	add    BYTE PTR [rax],al
   14001f983:	add    BYTE PTR [rcx],cl
   14001f985:	add    BYTE PTR [rax],al
   14001f987:	add    BYTE PTR [rsi],al
   14001f989:	add    BYTE PTR [rax],al
   14001f98b:	add    BYTE PTR [rdx],cl
   14001f98d:	add    BYTE PTR [rax],al
   14001f98f:	add    BYTE PTR [rbx],cl
   14001f991:	add    BYTE PTR [rax],al
   14001f993:	add    BYTE PTR [rax+rax*1],cl
   14001f996:	add    BYTE PTR [rax],al
   14001f998:	or     eax,0xe000000
   14001f99d:	add    BYTE PTR [rax],al
   14001f99f:	add    BYTE PTR [rdi],cl
   14001f9a1:	add    BYTE PTR [rax],al
   14001f9a3:	add    BYTE PTR [rax+rax*1],cl
   14001f9a6:	add    BYTE PTR [rax],al
   14001f9a8:	adc    BYTE PTR [rax],al
   14001f9aa:	add    BYTE PTR [rax],al
   14001f9ac:	adc    DWORD PTR [rax],eax
   14001f9ae:	add    BYTE PTR [rax],al
   14001f9b0:	adc    al,BYTE PTR [rax]
   14001f9b2:	add    BYTE PTR [rax],al
   14001f9b4:	adc    eax,DWORD PTR [rax]
   14001f9b6:	add    BYTE PTR [rax],al
   14001f9b8:	add    al,BYTE PTR [rax]
   14001f9ba:	add    BYTE PTR [rax],al
   14001f9bc:	or     al,BYTE PTR [rax]
   14001f9be:	add    BYTE PTR [rax],al
   14001f9c0:	sldt   WORD PTR [rax]
   14001f9c3:	add    BYTE PTR [rdi],al
   14001f9c5:	add    BYTE PTR [rax],al
   14001f9c7:	add    BYTE PTR [rbx],dl
   14001f9c9:	add    BYTE PTR [rax],al
   14001f9cb:	add    BYTE PTR [rdx],al
   14001f9cd:	add    BYTE PTR [rax],al
   14001f9cf:	add    BYTE PTR [rsi],al
   14001f9d1:	add    BYTE PTR [rax],al
   14001f9d3:	add    BYTE PTR [rdi],al
   14001f9d5:	add    BYTE PTR [rax],al
   14001f9d7:	add    BYTE PTR [rdx],cl
	...
   14001fa61:	add    BYTE PTR [rax],al
   14001fa63:	add    BYTE PTR [rdx],al
   14001fa65:	add    BYTE PTR [rax],al
   14001fa67:	add    BYTE PTR [rsi],al
   14001fa69:	add    BYTE PTR [rax],al
   14001fa6b:	add    BYTE PTR [rdi],al
   14001fa6d:	add    BYTE PTR [rax],al
   14001fa6f:	add    BYTE PTR [rdx],cl
   14001fa71:	add    BYTE PTR [rax],al
   14001fa73:	add    BYTE PTR [rax+rax*1],cl
   14001fa76:	add    BYTE PTR [rax],al
   14001fa78:	sldt   WORD PTR [rax]
   14001fa7b:	add    BYTE PTR [rbx],dl
   14001fa7d:	add    BYTE PTR [rax],al
   14001fa7f:	add    BYTE PTR [rdx],al
   14001fa81:	add    BYTE PTR [rax],al
   14001fa83:	add    BYTE PTR [rsi],al
   14001fa85:	add    BYTE PTR [rax],al
   14001fa87:	add    BYTE PTR [rdi],al
   14001fa89:	add    BYTE PTR [rax],al
   14001fa8b:	add    BYTE PTR [rdx],cl
   14001fa8d:	add    BYTE PTR [rax],al
   14001fa8f:	add    BYTE PTR [rax+rax*1],cl
   14001fa92:	add    BYTE PTR [rax],al
   14001fa94:	sldt   WORD PTR [rax]
   14001fa97:	add    BYTE PTR [rbx],dl
   14001fa99:	add    BYTE PTR [rax],al
   14001fa9b:	add    BYTE PTR [rax],al
   14001fa9d:	add    BYTE PTR [rax],al
   14001fa9f:	add    BYTE PTR [rcx],al
   14001faa1:	add    BYTE PTR [rax],al
   14001faa3:	add    BYTE PTR [rbx],al
   14001faa5:	add    BYTE PTR [rax],al
   14001faa7:	add    BYTE PTR [rax+rax*1],al
   14001faaa:	add    BYTE PTR [rax],al
   14001faac:	add    eax,0x8000000
   14001fab1:	add    BYTE PTR [rax],al
   14001fab3:	add    BYTE PTR [rcx],cl
   14001fab5:	add    BYTE PTR [rax],al
   14001fab7:	add    BYTE PTR [rbx],cl
   14001fab9:	add    BYTE PTR [rax],al
   14001fabb:	add    BYTE PTR [rip+0xe000000],cl        # 0x14e01fac1
   14001fac1:	add    BYTE PTR [rax],al
   14001fac3:	add    BYTE PTR [rax],dl
   14001fac5:	add    BYTE PTR [rax],al
   14001fac7:	add    BYTE PTR [rdx],al
   14001fac9:	add    BYTE PTR [rax],al
   14001facb:	add    BYTE PTR [rsi],al
   14001facd:	add    BYTE PTR [rax],al
   14001facf:	add    BYTE PTR [rdi],al
   14001fad1:	add    BYTE PTR [rax],al
   14001fad3:	add    BYTE PTR [rdx],cl
   14001fad5:	add    BYTE PTR [rax],al
   14001fad7:	add    BYTE PTR [rax+rax*1],cl
   14001fada:	add    BYTE PTR [rax],al
   14001fadc:	sldt   WORD PTR [rax]
   14001fadf:	add    BYTE PTR [rax],al
   14001fae1:	add    BYTE PTR [rax],al
   14001fae3:	add    BYTE PTR [rcx],al
   14001fae5:	add    BYTE PTR [rax],al
   14001fae7:	add    BYTE PTR [rdx],al
   14001fae9:	add    BYTE PTR [rax],al
   14001faeb:	add    BYTE PTR [rbx],al
   14001faed:	add    BYTE PTR [rax],al
   14001faef:	add    BYTE PTR [rax+rax*1],al
   14001faf2:	add    BYTE PTR [rax],al
   14001faf4:	add    eax,0x6000000
   14001faf9:	add    BYTE PTR [rax],al
   14001fafb:	add    BYTE PTR [rdi],al
   14001fafd:	add    BYTE PTR [rax],al
   14001faff:	add    BYTE PTR [rax],cl
   14001fb01:	add    BYTE PTR [rax],al
   14001fb03:	add    BYTE PTR [rcx],cl
   14001fb05:	add    BYTE PTR [rax],al
   14001fb07:	add    BYTE PTR [rsi],al
   14001fb09:	add    BYTE PTR [rax],al
   14001fb0b:	add    BYTE PTR [rdx],cl
   14001fb0d:	add    BYTE PTR [rax],al
   14001fb0f:	add    BYTE PTR [rbx],cl
   14001fb11:	add    BYTE PTR [rax],al
   14001fb13:	add    BYTE PTR [rax+rax*1],cl
   14001fb16:	add    BYTE PTR [rax],al
   14001fb18:	or     eax,0xe000000
   14001fb1d:	add    BYTE PTR [rax],al
   14001fb1f:	add    BYTE PTR [rdi],cl
   14001fb21:	add    BYTE PTR [rax],al
   14001fb23:	add    BYTE PTR [rax+rax*1],cl
   14001fb26:	add    BYTE PTR [rax],al
   14001fb28:	adc    BYTE PTR [rax],al
   14001fb2a:	add    BYTE PTR [rax],al
   14001fb2c:	adc    DWORD PTR [rax],eax
   14001fb2e:	add    BYTE PTR [rax],al
   14001fb30:	adc    al,BYTE PTR [rax]
   14001fb32:	add    BYTE PTR [rax],al
   14001fb34:	adc    eax,DWORD PTR [rax]
   14001fb36:	add    BYTE PTR [rax],al
   14001fb38:	add    al,BYTE PTR [rax]
   14001fb3a:	add    BYTE PTR [rax],al
   14001fb3c:	or     al,BYTE PTR [rax]
   14001fb3e:	add    BYTE PTR [rax],al
   14001fb40:	sldt   WORD PTR [rax]
   14001fb43:	add    BYTE PTR [rdi],al
   14001fb45:	add    BYTE PTR [rax],al
   14001fb47:	add    BYTE PTR [rbx],dl
   14001fb49:	add    BYTE PTR [rax],al
   14001fb4b:	add    BYTE PTR [rdx],al
   14001fb4d:	add    BYTE PTR [rax],al
   14001fb4f:	add    BYTE PTR [rsi],al
   14001fb51:	add    BYTE PTR [rax],al
   14001fb53:	add    BYTE PTR [rdi],al
   14001fb55:	add    BYTE PTR [rax],al
   14001fb57:	add    BYTE PTR [rdx],cl
	...
   14001fb61:	add    BYTE PTR [rax],al
   14001fb63:	add    BYTE PTR [rcx],al
   14001fb65:	add    BYTE PTR [rax],al
   14001fb67:	add    BYTE PTR [rdx],al
   14001fb69:	add    BYTE PTR [rax],al
   14001fb6b:	add    BYTE PTR [rbx],al
   14001fb6d:	add    BYTE PTR [rax],al
   14001fb6f:	add    BYTE PTR [rax+rax*1],al
   14001fb72:	add    BYTE PTR [rax],al
   14001fb74:	add    eax,0x6000000
   14001fb79:	add    BYTE PTR [rax],al
   14001fb7b:	add    BYTE PTR [rdi],al
   14001fb7d:	add    BYTE PTR [rax],al
   14001fb7f:	add    BYTE PTR [rax],cl
   14001fb81:	add    BYTE PTR [rax],al
   14001fb83:	add    BYTE PTR [rcx],cl
   14001fb85:	add    BYTE PTR [rax],al
   14001fb87:	add    BYTE PTR [rsi],al
   14001fb89:	add    BYTE PTR [rax],al
   14001fb8b:	add    BYTE PTR [rdx],cl
   14001fb8d:	add    BYTE PTR [rax],al
   14001fb8f:	add    BYTE PTR [rbx],cl
   14001fb91:	add    BYTE PTR [rax],al
   14001fb93:	add    BYTE PTR [rax+rax*1],cl
   14001fb96:	add    BYTE PTR [rax],al
   14001fb98:	or     eax,0xe000000
   14001fb9d:	add    BYTE PTR [rax],al
   14001fb9f:	add    BYTE PTR [rdi],cl
   14001fba1:	add    BYTE PTR [rax],al
   14001fba3:	add    BYTE PTR [rax+rax*1],cl
   14001fba6:	add    BYTE PTR [rax],al
   14001fba8:	adc    BYTE PTR [rax],al
   14001fbaa:	add    BYTE PTR [rax],al
   14001fbac:	adc    DWORD PTR [rax],eax
   14001fbae:	add    BYTE PTR [rax],al
   14001fbb0:	adc    al,BYTE PTR [rax]
   14001fbb2:	add    BYTE PTR [rax],al
   14001fbb4:	adc    eax,DWORD PTR [rax]
   14001fbb6:	add    BYTE PTR [rax],al
   14001fbb8:	add    al,BYTE PTR [rax]
   14001fbba:	add    BYTE PTR [rax],al
   14001fbbc:	or     al,BYTE PTR [rax]
   14001fbbe:	add    BYTE PTR [rax],al
   14001fbc0:	sldt   WORD PTR [rax]
   14001fbc3:	add    BYTE PTR [rdi],al
   14001fbc5:	add    BYTE PTR [rax],al
   14001fbc7:	add    BYTE PTR [rbx],dl
   14001fbc9:	add    BYTE PTR [rax],al
   14001fbcb:	add    BYTE PTR [rdx],al
   14001fbcd:	add    BYTE PTR [rax],al
   14001fbcf:	add    BYTE PTR [rsi],al
   14001fbd1:	add    BYTE PTR [rax],al
   14001fbd3:	add    BYTE PTR [rdi],al
   14001fbd5:	add    BYTE PTR [rax],al
   14001fbd7:	add    BYTE PTR [rdx],cl
	...
   14001fbe1:	add    BYTE PTR [rax],al
   14001fbe3:	add    BYTE PTR [rcx],al
   14001fbe5:	add    BYTE PTR [rax],al
   14001fbe7:	add    BYTE PTR [rcx],al
   14001fbe9:	add    BYTE PTR [rax],al
   14001fbeb:	add    BYTE PTR [rdx],al
   14001fbed:	add    BYTE PTR [rax],al
   14001fbef:	add    BYTE PTR [rcx],al
   14001fbf1:	add    BYTE PTR [rax],al
   14001fbf3:	add    BYTE PTR [rdx],al
   14001fbf5:	add    BYTE PTR [rax],al
   14001fbf7:	add    BYTE PTR [rdx],al
   14001fbf9:	add    BYTE PTR [rax],al
   14001fbfb:	add    BYTE PTR [rbx],al
   14001fbfd:	add    BYTE PTR [rax],al
   14001fbff:	add    BYTE PTR [rcx],al
   14001fc01:	add    BYTE PTR [rax],al
   14001fc03:	add    BYTE PTR [rdx],al
   14001fc05:	add    BYTE PTR [rax],al
   14001fc07:	add    BYTE PTR [rdx],al
   14001fc09:	add    BYTE PTR [rax],al
   14001fc0b:	add    BYTE PTR [rbx],al
   14001fc0d:	add    BYTE PTR [rax],al
   14001fc0f:	add    BYTE PTR [rdx],al
   14001fc11:	add    BYTE PTR [rax],al
   14001fc13:	add    BYTE PTR [rbx],al
   14001fc15:	add    BYTE PTR [rax],al
   14001fc17:	add    BYTE PTR [rbx],al
   14001fc19:	add    BYTE PTR [rax],al
   14001fc1b:	add    BYTE PTR [rax+rax*1],al
   14001fc1e:	add    BYTE PTR [rax],al
   14001fc20:	add    DWORD PTR [rax],eax
   14001fc22:	add    BYTE PTR [rax],al
   14001fc24:	add    al,BYTE PTR [rax]
   14001fc26:	add    BYTE PTR [rax],al
   14001fc28:	add    al,BYTE PTR [rax]
   14001fc2a:	add    BYTE PTR [rax],al
   14001fc2c:	add    eax,DWORD PTR [rax]
   14001fc2e:	add    BYTE PTR [rax],al
   14001fc30:	add    al,BYTE PTR [rax]
   14001fc32:	add    BYTE PTR [rax],al
   14001fc34:	add    eax,DWORD PTR [rax]
   14001fc36:	add    BYTE PTR [rax],al
   14001fc38:	add    eax,DWORD PTR [rax]
   14001fc3a:	add    BYTE PTR [rax],al
   14001fc3c:	add    al,0x0
   14001fc3e:	add    BYTE PTR [rax],al
   14001fc40:	add    al,BYTE PTR [rax]
   14001fc42:	add    BYTE PTR [rax],al
   14001fc44:	add    eax,DWORD PTR [rax]
   14001fc46:	add    BYTE PTR [rax],al
   14001fc48:	add    eax,DWORD PTR [rax]
   14001fc4a:	add    BYTE PTR [rax],al
   14001fc4c:	add    al,0x0
   14001fc4e:	add    BYTE PTR [rax],al
   14001fc50:	add    eax,DWORD PTR [rax]
   14001fc52:	add    BYTE PTR [rax],al
   14001fc54:	add    al,0x0
   14001fc56:	add    BYTE PTR [rax],al
   14001fc58:	add    al,0x0
   14001fc5a:	add    BYTE PTR [rax],al
   14001fc5c:	add    eax,0x1000000
   14001fc61:	add    BYTE PTR [rax],al
   14001fc63:	add    BYTE PTR [rdx],al
   14001fc65:	add    BYTE PTR [rax],al
   14001fc67:	add    BYTE PTR [rdx],al
   14001fc69:	add    BYTE PTR [rax],al
   14001fc6b:	add    BYTE PTR [rbx],al
   14001fc6d:	add    BYTE PTR [rax],al
   14001fc6f:	add    BYTE PTR [rdx],al
   14001fc71:	add    BYTE PTR [rax],al
   14001fc73:	add    BYTE PTR [rbx],al
   14001fc75:	add    BYTE PTR [rax],al
   14001fc77:	add    BYTE PTR [rbx],al
   14001fc79:	add    BYTE PTR [rax],al
   14001fc7b:	add    BYTE PTR [rax+rax*1],al
   14001fc7e:	add    BYTE PTR [rax],al
   14001fc80:	add    al,BYTE PTR [rax]
   14001fc82:	add    BYTE PTR [rax],al
   14001fc84:	add    eax,DWORD PTR [rax]
   14001fc86:	add    BYTE PTR [rax],al
   14001fc88:	add    eax,DWORD PTR [rax]
   14001fc8a:	add    BYTE PTR [rax],al
   14001fc8c:	add    al,0x0
   14001fc8e:	add    BYTE PTR [rax],al
   14001fc90:	add    eax,DWORD PTR [rax]
   14001fc92:	add    BYTE PTR [rax],al
   14001fc94:	add    al,0x0
   14001fc96:	add    BYTE PTR [rax],al
   14001fc98:	add    al,0x0
   14001fc9a:	add    BYTE PTR [rax],al
   14001fc9c:	add    eax,0x2000000
   14001fca1:	add    BYTE PTR [rax],al
   14001fca3:	add    BYTE PTR [rbx],al
   14001fca5:	add    BYTE PTR [rax],al
   14001fca7:	add    BYTE PTR [rbx],al
   14001fca9:	add    BYTE PTR [rax],al
   14001fcab:	add    BYTE PTR [rax+rax*1],al
   14001fcae:	add    BYTE PTR [rax],al
   14001fcb0:	add    eax,DWORD PTR [rax]
   14001fcb2:	add    BYTE PTR [rax],al
   14001fcb4:	add    al,0x0
   14001fcb6:	add    BYTE PTR [rax],al
   14001fcb8:	add    al,0x0
   14001fcba:	add    BYTE PTR [rax],al
   14001fcbc:	add    eax,0x3000000
   14001fcc1:	add    BYTE PTR [rax],al
   14001fcc3:	add    BYTE PTR [rax+rax*1],al
   14001fcc6:	add    BYTE PTR [rax],al
   14001fcc8:	add    al,0x0
   14001fcca:	add    BYTE PTR [rax],al
   14001fccc:	add    eax,0x4000000
   14001fcd1:	add    BYTE PTR [rax],al
   14001fcd3:	add    BYTE PTR [rip+0x5000000],al        # 0x14501fcd9
   14001fcd9:	add    BYTE PTR [rax],al
   14001fcdb:	add    BYTE PTR [rsi],al
   14001fcdd:	add    BYTE PTR [rax],al
   14001fcdf:	add    BYTE PTR [rcx],al
   14001fce1:	add    BYTE PTR [rax],al
   14001fce3:	add    BYTE PTR [rdx],al
   14001fce5:	add    BYTE PTR [rax],al
   14001fce7:	add    BYTE PTR [rdx],al
   14001fce9:	add    BYTE PTR [rax],al
   14001fceb:	add    BYTE PTR [rbx],al
   14001fced:	add    BYTE PTR [rax],al
   14001fcef:	add    BYTE PTR [rdx],al
   14001fcf1:	add    BYTE PTR [rax],al
   14001fcf3:	add    BYTE PTR [rbx],al
   14001fcf5:	add    BYTE PTR [rax],al
   14001fcf7:	add    BYTE PTR [rbx],al
   14001fcf9:	add    BYTE PTR [rax],al
   14001fcfb:	add    BYTE PTR [rax+rax*1],al
   14001fcfe:	add    BYTE PTR [rax],al
   14001fd00:	add    al,BYTE PTR [rax]
   14001fd02:	add    BYTE PTR [rax],al
   14001fd04:	add    eax,DWORD PTR [rax]
   14001fd06:	add    BYTE PTR [rax],al
   14001fd08:	add    eax,DWORD PTR [rax]
   14001fd0a:	add    BYTE PTR [rax],al
   14001fd0c:	add    al,0x0
   14001fd0e:	add    BYTE PTR [rax],al
   14001fd10:	add    eax,DWORD PTR [rax]
   14001fd12:	add    BYTE PTR [rax],al
   14001fd14:	add    al,0x0
   14001fd16:	add    BYTE PTR [rax],al
   14001fd18:	add    al,0x0
   14001fd1a:	add    BYTE PTR [rax],al
   14001fd1c:	add    eax,0x2000000
   14001fd21:	add    BYTE PTR [rax],al
   14001fd23:	add    BYTE PTR [rbx],al
   14001fd25:	add    BYTE PTR [rax],al
   14001fd27:	add    BYTE PTR [rbx],al
   14001fd29:	add    BYTE PTR [rax],al
   14001fd2b:	add    BYTE PTR [rax+rax*1],al
   14001fd2e:	add    BYTE PTR [rax],al
   14001fd30:	add    eax,DWORD PTR [rax]
   14001fd32:	add    BYTE PTR [rax],al
   14001fd34:	add    al,0x0
   14001fd36:	add    BYTE PTR [rax],al
   14001fd38:	add    al,0x0
   14001fd3a:	add    BYTE PTR [rax],al
   14001fd3c:	add    eax,0x3000000
   14001fd41:	add    BYTE PTR [rax],al
   14001fd43:	add    BYTE PTR [rax+rax*1],al
   14001fd46:	add    BYTE PTR [rax],al
   14001fd48:	add    al,0x0
   14001fd4a:	add    BYTE PTR [rax],al
   14001fd4c:	add    eax,0x4000000
   14001fd51:	add    BYTE PTR [rax],al
   14001fd53:	add    BYTE PTR [rip+0x5000000],al        # 0x14501fd59
   14001fd59:	add    BYTE PTR [rax],al
   14001fd5b:	add    BYTE PTR [rsi],al
   14001fd5d:	add    BYTE PTR [rax],al
   14001fd5f:	add    BYTE PTR [rdx],al
   14001fd61:	add    BYTE PTR [rax],al
   14001fd63:	add    BYTE PTR [rbx],al
   14001fd65:	add    BYTE PTR [rax],al
   14001fd67:	add    BYTE PTR [rbx],al
   14001fd69:	add    BYTE PTR [rax],al
   14001fd6b:	add    BYTE PTR [rax+rax*1],al
   14001fd6e:	add    BYTE PTR [rax],al
   14001fd70:	add    eax,DWORD PTR [rax]
   14001fd72:	add    BYTE PTR [rax],al
   14001fd74:	add    al,0x0
   14001fd76:	add    BYTE PTR [rax],al
   14001fd78:	add    al,0x0
   14001fd7a:	add    BYTE PTR [rax],al
   14001fd7c:	add    eax,0x3000000
   14001fd81:	add    BYTE PTR [rax],al
   14001fd83:	add    BYTE PTR [rax+rax*1],al
   14001fd86:	add    BYTE PTR [rax],al
   14001fd88:	add    al,0x0
   14001fd8a:	add    BYTE PTR [rax],al
   14001fd8c:	add    eax,0x4000000
   14001fd91:	add    BYTE PTR [rax],al
   14001fd93:	add    BYTE PTR [rip+0x5000000],al        # 0x14501fd99
   14001fd99:	add    BYTE PTR [rax],al
   14001fd9b:	add    BYTE PTR [rsi],al
   14001fd9d:	add    BYTE PTR [rax],al
   14001fd9f:	add    BYTE PTR [rbx],al
   14001fda1:	add    BYTE PTR [rax],al
   14001fda3:	add    BYTE PTR [rax+rax*1],al
   14001fda6:	add    BYTE PTR [rax],al
   14001fda8:	add    al,0x0
   14001fdaa:	add    BYTE PTR [rax],al
   14001fdac:	add    eax,0x4000000
   14001fdb1:	add    BYTE PTR [rax],al
   14001fdb3:	add    BYTE PTR [rip+0x5000000],al        # 0x14501fdb9
   14001fdb9:	add    BYTE PTR [rax],al
   14001fdbb:	add    BYTE PTR [rsi],al
   14001fdbd:	add    BYTE PTR [rax],al
   14001fdbf:	add    BYTE PTR [rax+rax*1],al
   14001fdc2:	add    BYTE PTR [rax],al
   14001fdc4:	add    eax,0x5000000
   14001fdc9:	add    BYTE PTR [rax],al
   14001fdcb:	add    BYTE PTR [rsi],al
   14001fdcd:	add    BYTE PTR [rax],al
   14001fdcf:	add    BYTE PTR [rip+0x6000000],al        # 0x14601fdd5
   14001fdd5:	add    BYTE PTR [rax],al
   14001fdd7:	add    BYTE PTR [rsi],al
   14001fdd9:	add    BYTE PTR [rax],al
   14001fddb:	add    BYTE PTR [rdi],al
   14001fddd:	add    BYTE PTR [rax],al
   14001fddf:	add    BYTE PTR [rcx],al
   14001fde1:	add    BYTE PTR [rax],al
   14001fde3:	add    BYTE PTR [rdx],al
   14001fde5:	add    BYTE PTR [rax],al
   14001fde7:	add    BYTE PTR [rdx],al
   14001fde9:	add    BYTE PTR [rax],al
   14001fdeb:	add    BYTE PTR [rbx],al
   14001fded:	add    BYTE PTR [rax],al
   14001fdef:	add    BYTE PTR [rdx],al
   14001fdf1:	add    BYTE PTR [rax],al
   14001fdf3:	add    BYTE PTR [rbx],al
   14001fdf5:	add    BYTE PTR [rax],al
   14001fdf7:	add    BYTE PTR [rbx],al
   14001fdf9:	add    BYTE PTR [rax],al
   14001fdfb:	add    BYTE PTR [rax+rax*1],al
   14001fdfe:	add    BYTE PTR [rax],al
   14001fe00:	add    al,BYTE PTR [rax]
   14001fe02:	add    BYTE PTR [rax],al
   14001fe04:	add    eax,DWORD PTR [rax]
   14001fe06:	add    BYTE PTR [rax],al
   14001fe08:	add    eax,DWORD PTR [rax]
   14001fe0a:	add    BYTE PTR [rax],al
   14001fe0c:	add    al,0x0
   14001fe0e:	add    BYTE PTR [rax],al
   14001fe10:	add    eax,DWORD PTR [rax]
   14001fe12:	add    BYTE PTR [rax],al
   14001fe14:	add    al,0x0
   14001fe16:	add    BYTE PTR [rax],al
   14001fe18:	add    al,0x0
   14001fe1a:	add    BYTE PTR [rax],al
   14001fe1c:	add    eax,0x2000000
   14001fe21:	add    BYTE PTR [rax],al
   14001fe23:	add    BYTE PTR [rbx],al
   14001fe25:	add    BYTE PTR [rax],al
   14001fe27:	add    BYTE PTR [rbx],al
   14001fe29:	add    BYTE PTR [rax],al
   14001fe2b:	add    BYTE PTR [rax+rax*1],al
   14001fe2e:	add    BYTE PTR [rax],al
   14001fe30:	add    eax,DWORD PTR [rax]
   14001fe32:	add    BYTE PTR [rax],al
   14001fe34:	add    al,0x0
   14001fe36:	add    BYTE PTR [rax],al
   14001fe38:	add    al,0x0
   14001fe3a:	add    BYTE PTR [rax],al
   14001fe3c:	add    eax,0x3000000
   14001fe41:	add    BYTE PTR [rax],al
   14001fe43:	add    BYTE PTR [rax+rax*1],al
   14001fe46:	add    BYTE PTR [rax],al
   14001fe48:	add    al,0x0
   14001fe4a:	add    BYTE PTR [rax],al
   14001fe4c:	add    eax,0x4000000
   14001fe51:	add    BYTE PTR [rax],al
   14001fe53:	add    BYTE PTR [rip+0x5000000],al        # 0x14501fe59
   14001fe59:	add    BYTE PTR [rax],al
   14001fe5b:	add    BYTE PTR [rsi],al
   14001fe5d:	add    BYTE PTR [rax],al
   14001fe5f:	add    BYTE PTR [rdx],al
   14001fe61:	add    BYTE PTR [rax],al
   14001fe63:	add    BYTE PTR [rbx],al
   14001fe65:	add    BYTE PTR [rax],al
   14001fe67:	add    BYTE PTR [rbx],al
   14001fe69:	add    BYTE PTR [rax],al
   14001fe6b:	add    BYTE PTR [rax+rax*1],al
   14001fe6e:	add    BYTE PTR [rax],al
   14001fe70:	add    eax,DWORD PTR [rax]
   14001fe72:	add    BYTE PTR [rax],al
   14001fe74:	add    al,0x0
   14001fe76:	add    BYTE PTR [rax],al
   14001fe78:	add    al,0x0
   14001fe7a:	add    BYTE PTR [rax],al
   14001fe7c:	add    eax,0x3000000
   14001fe81:	add    BYTE PTR [rax],al
   14001fe83:	add    BYTE PTR [rax+rax*1],al
   14001fe86:	add    BYTE PTR [rax],al
   14001fe88:	add    al,0x0
   14001fe8a:	add    BYTE PTR [rax],al
   14001fe8c:	add    eax,0x4000000
   14001fe91:	add    BYTE PTR [rax],al
   14001fe93:	add    BYTE PTR [rip+0x5000000],al        # 0x14501fe99
   14001fe99:	add    BYTE PTR [rax],al
   14001fe9b:	add    BYTE PTR [rsi],al
   14001fe9d:	add    BYTE PTR [rax],al
   14001fe9f:	add    BYTE PTR [rbx],al
   14001fea1:	add    BYTE PTR [rax],al
   14001fea3:	add    BYTE PTR [rax+rax*1],al
   14001fea6:	add    BYTE PTR [rax],al
   14001fea8:	add    al,0x0
   14001feaa:	add    BYTE PTR [rax],al
   14001feac:	add    eax,0x4000000
   14001feb1:	add    BYTE PTR [rax],al
   14001feb3:	add    BYTE PTR [rip+0x5000000],al        # 0x14501feb9
   14001feb9:	add    BYTE PTR [rax],al
   14001febb:	add    BYTE PTR [rsi],al
   14001febd:	add    BYTE PTR [rax],al
   14001febf:	add    BYTE PTR [rax+rax*1],al
   14001fec2:	add    BYTE PTR [rax],al
   14001fec4:	add    eax,0x5000000
   14001fec9:	add    BYTE PTR [rax],al
   14001fecb:	add    BYTE PTR [rsi],al
   14001fecd:	add    BYTE PTR [rax],al
   14001fecf:	add    BYTE PTR [rip+0x6000000],al        # 0x14601fed5
   14001fed5:	add    BYTE PTR [rax],al
   14001fed7:	add    BYTE PTR [rsi],al
   14001fed9:	add    BYTE PTR [rax],al
   14001fedb:	add    BYTE PTR [rdi],al
   14001fedd:	add    BYTE PTR [rax],al
   14001fedf:	add    BYTE PTR [rdx],al
   14001fee1:	add    BYTE PTR [rax],al
   14001fee3:	add    BYTE PTR [rbx],al
   14001fee5:	add    BYTE PTR [rax],al
   14001fee7:	add    BYTE PTR [rbx],al
   14001fee9:	add    BYTE PTR [rax],al
   14001feeb:	add    BYTE PTR [rax+rax*1],al
   14001feee:	add    BYTE PTR [rax],al
   14001fef0:	add    eax,DWORD PTR [rax]
   14001fef2:	add    BYTE PTR [rax],al
   14001fef4:	add    al,0x0
   14001fef6:	add    BYTE PTR [rax],al
   14001fef8:	add    al,0x0
   14001fefa:	add    BYTE PTR [rax],al
   14001fefc:	add    eax,0x3000000
   14001ff01:	add    BYTE PTR [rax],al
   14001ff03:	add    BYTE PTR [rax+rax*1],al
   14001ff06:	add    BYTE PTR [rax],al
   14001ff08:	add    al,0x0
   14001ff0a:	add    BYTE PTR [rax],al
   14001ff0c:	add    eax,0x4000000
   14001ff11:	add    BYTE PTR [rax],al
   14001ff13:	add    BYTE PTR [rip+0x5000000],al        # 0x14501ff19
   14001ff19:	add    BYTE PTR [rax],al
   14001ff1b:	add    BYTE PTR [rsi],al
   14001ff1d:	add    BYTE PTR [rax],al
   14001ff1f:	add    BYTE PTR [rbx],al
   14001ff21:	add    BYTE PTR [rax],al
   14001ff23:	add    BYTE PTR [rax+rax*1],al
   14001ff26:	add    BYTE PTR [rax],al
   14001ff28:	add    al,0x0
   14001ff2a:	add    BYTE PTR [rax],al
   14001ff2c:	add    eax,0x4000000
   14001ff31:	add    BYTE PTR [rax],al
   14001ff33:	add    BYTE PTR [rip+0x5000000],al        # 0x14501ff39
   14001ff39:	add    BYTE PTR [rax],al
   14001ff3b:	add    BYTE PTR [rsi],al
   14001ff3d:	add    BYTE PTR [rax],al
   14001ff3f:	add    BYTE PTR [rax+rax*1],al
   14001ff42:	add    BYTE PTR [rax],al
   14001ff44:	add    eax,0x5000000
   14001ff49:	add    BYTE PTR [rax],al
   14001ff4b:	add    BYTE PTR [rsi],al
   14001ff4d:	add    BYTE PTR [rax],al
   14001ff4f:	add    BYTE PTR [rip+0x6000000],al        # 0x14601ff55
   14001ff55:	add    BYTE PTR [rax],al
   14001ff57:	add    BYTE PTR [rsi],al
   14001ff59:	add    BYTE PTR [rax],al
   14001ff5b:	add    BYTE PTR [rdi],al
   14001ff5d:	add    BYTE PTR [rax],al
   14001ff5f:	add    BYTE PTR [rbx],al
   14001ff61:	add    BYTE PTR [rax],al
   14001ff63:	add    BYTE PTR [rax+rax*1],al
   14001ff66:	add    BYTE PTR [rax],al
   14001ff68:	add    al,0x0
   14001ff6a:	add    BYTE PTR [rax],al
   14001ff6c:	add    eax,0x4000000
   14001ff71:	add    BYTE PTR [rax],al
   14001ff73:	add    BYTE PTR [rip+0x5000000],al        # 0x14501ff79
   14001ff79:	add    BYTE PTR [rax],al
   14001ff7b:	add    BYTE PTR [rsi],al
   14001ff7d:	add    BYTE PTR [rax],al
   14001ff7f:	add    BYTE PTR [rax+rax*1],al
   14001ff82:	add    BYTE PTR [rax],al
   14001ff84:	add    eax,0x5000000
   14001ff89:	add    BYTE PTR [rax],al
   14001ff8b:	add    BYTE PTR [rsi],al
   14001ff8d:	add    BYTE PTR [rax],al
   14001ff8f:	add    BYTE PTR [rip+0x6000000],al        # 0x14601ff95
   14001ff95:	add    BYTE PTR [rax],al
   14001ff97:	add    BYTE PTR [rsi],al
   14001ff99:	add    BYTE PTR [rax],al
   14001ff9b:	add    BYTE PTR [rdi],al
   14001ff9d:	add    BYTE PTR [rax],al
   14001ff9f:	add    BYTE PTR [rax+rax*1],al
   14001ffa2:	add    BYTE PTR [rax],al
   14001ffa4:	add    eax,0x5000000
   14001ffa9:	add    BYTE PTR [rax],al
   14001ffab:	add    BYTE PTR [rsi],al
   14001ffad:	add    BYTE PTR [rax],al
   14001ffaf:	add    BYTE PTR [rip+0x6000000],al        # 0x14601ffb5
   14001ffb5:	add    BYTE PTR [rax],al
   14001ffb7:	add    BYTE PTR [rsi],al
   14001ffb9:	add    BYTE PTR [rax],al
   14001ffbb:	add    BYTE PTR [rdi],al
   14001ffbd:	add    BYTE PTR [rax],al
   14001ffbf:	add    BYTE PTR [rip+0x6000000],al        # 0x14601ffc5
   14001ffc5:	add    BYTE PTR [rax],al
   14001ffc7:	add    BYTE PTR [rsi],al
   14001ffc9:	add    BYTE PTR [rax],al
   14001ffcb:	add    BYTE PTR [rdi],al
   14001ffcd:	add    BYTE PTR [rax],al
   14001ffcf:	add    BYTE PTR [rsi],al
   14001ffd1:	add    BYTE PTR [rax],al
   14001ffd3:	add    BYTE PTR [rdi],al
   14001ffd5:	add    BYTE PTR [rax],al
   14001ffd7:	add    BYTE PTR [rdi],al
   14001ffd9:	add    BYTE PTR [rax],al
   14001ffdb:	add    BYTE PTR [rax],cl
   14001ffdd:	add    BYTE PTR [rax],al
   14001ffdf:	add    BYTE PTR [rdx],ah
   14001ffe1:	add    eax,0x11993
   14001ffe6:	add    BYTE PTR [rax],al
   14001ffe8:	pop    rax
   14001ffe9:	(bad)  
   14001ffea:	add    al,BYTE PTR [rax]
	...
   14001fff4:	add    eax,DWORD PTR [rax]
   14001fff6:	add    BYTE PTR [rax],al
   14001fff8:	(bad)  
   14001fff9:	(bad)  
   14001fffa:	add    al,BYTE PTR [rax]
   14001fffc:	enter  0x0,0x0
   140020000:	add    BYTE PTR [rax],al
   140020002:	add    BYTE PTR [rax],al
   140020004:	add    DWORD PTR [rax],eax
	...
   14002000e:	add    BYTE PTR [rax],al
   140020010:	loopne 0x14001ffca
   140020012:	add    DWORD PTR [rax+0x1],eax
	...
   14002001d:	add    BYTE PTR [rax],al
   14002001f:	add    al,dl
   140020021:	mov    eax,0x14001
   140020026:	add    BYTE PTR [rax],al
   140020028:	enter  0x1b8,0x40
   14002002c:	add    DWORD PTR [rax],eax
	...
   140020036:	add    BYTE PTR [rax],al
   140020038:	sar    BYTE PTR [rax+0x14001],1
   14002003e:	add    BYTE PTR [rax],al
   140020040:	enter  0x1b8,0x40
   140020044:	add    DWORD PTR [rax],eax
	...
   14002004e:	add    BYTE PTR [rax],al
   140020050:	sar    BYTE PTR [rax+0x14001],1
   140020056:	add    BYTE PTR [rax],al
   140020058:	enter  0x1b8,0x40
   14002005c:	add    DWORD PTR [rax],eax
   14002005e:	add    BYTE PTR [rax],al
   140020060:	sar    BYTE PTR [rax+0x14001],0x0
	...
   14002006f:	add    al,dl
   140020071:	mov    eax,0x14001
   140020076:	add    BYTE PTR [rax],al
   140020078:	mov    eax,0x14001b8
   14002007d:	add    BYTE PTR [rax],al
   14002007f:	add    al,cl
   140020081:	mov    eax,0x14001
	...
   14002008e:	add    BYTE PTR [rax],al
   140020090:	sar    BYTE PTR [rax+0x14001],1
   140020096:	add    BYTE PTR [rax],al
   140020098:	mov    eax,0x14001b8
   14002009d:	add    BYTE PTR [rax],al
   14002009f:	add    al,cl
   1400200a1:	mov    eax,0x14001
	...
   1400200ae:	add    BYTE PTR [rax],al
   1400200b0:	sar    BYTE PTR [rax+0x14001],1
   1400200b6:	add    BYTE PTR [rax],al
   1400200b8:	mov    eax,0x14001b8
   1400200bd:	add    BYTE PTR [rax],al
   1400200bf:	add    al,cl
   1400200c1:	mov    eax,0x14001
	...
   1400200ce:	add    BYTE PTR [rax],al
   1400200d0:	sar    BYTE PTR [rax+0x14001],1
   1400200d6:	add    BYTE PTR [rax],al
   1400200d8:	mov    eax,0x14001b8
   1400200dd:	add    BYTE PTR [rax],al
   1400200df:	add    al,cl
   1400200e1:	mov    eax,0x14001
	...
   1400200ee:	add    BYTE PTR [rax],al
   1400200f0:	sar    BYTE PTR [rax+0x14001],1
   1400200f6:	add    BYTE PTR [rax],al
   1400200f8:	mov    eax,0x14001b8
   1400200fd:	add    BYTE PTR [rax],al
   1400200ff:	add    al,cl
   140020101:	mov    eax,0x14001
	...
   14002010e:	add    BYTE PTR [rax],al
   140020110:	sar    BYTE PTR [rax+0x14001],1
   140020116:	add    BYTE PTR [rax],al
   140020118:	mov    eax,0x14001b8
   14002011d:	add    BYTE PTR [rax],al
   14002011f:	add    al,cl
   140020121:	mov    eax,0x14001
	...
   14002012e:	add    BYTE PTR [rax],al
   140020130:	sar    BYTE PTR [rax+0x14001],1
   140020136:	add    BYTE PTR [rax],al
   140020138:	mov    al,0xb8
   14002013a:	add    DWORD PTR [rax+0x1],eax
   14002013d:	add    BYTE PTR [rax],al
   14002013f:	add    al,cl
   140020141:	mov    eax,0x14001
	...
   14002014e:	add    BYTE PTR [rax],al
   140020150:	sar    BYTE PTR [rax+0x14001],1
   140020156:	add    BYTE PTR [rax],al
   140020158:	cwde   
   140020159:	mov    eax,0x14001
   14002015e:	add    BYTE PTR [rax],al
   140020160:	enter  0x1b8,0x40
   140020164:	add    DWORD PTR [rax],eax
	...
   14002016e:	add    BYTE PTR [rax],al
   140020170:	sar    BYTE PTR [rax+0x14001],1
   140020176:	add    BYTE PTR [rax],al
   140020178:	mov    eax,0x14001b8
   14002017d:	add    BYTE PTR [rax],al
   14002017f:	add    BYTE PTR [rax+0x14001b8],dl
   140020185:	add    BYTE PTR [rax],al
   140020187:	add    al,cl
   140020189:	mov    eax,0x14001
	...
   140020196:	add    BYTE PTR [rax],al
   140020198:	sar    BYTE PTR [rax+0x14001],1
   14002019e:	add    BYTE PTR [rax],al
   1400201a0:	js     0x14002015a
   1400201a2:	add    DWORD PTR [rax+0x1],eax
   1400201a5:	add    BYTE PTR [rax],al
   1400201a7:	add    BYTE PTR [rax-0x48],bl
   1400201aa:	add    DWORD PTR [rax+0x1],eax
   1400201ad:	add    BYTE PTR [rax],al
   1400201af:	add    al,cl
   1400201b1:	mov    eax,0x14001
	...
   1400201be:	add    BYTE PTR [rax],al
   1400201c0:	sar    BYTE PTR [rax+0x14001],0x0
   1400201c7:	add    al,dl
   1400201c9:	mov    eax,0x14001
   1400201ce:	add    BYTE PTR [rax],al
   1400201d0:	mov    eax,0x14001b8
   1400201d5:	add    BYTE PTR [rax],al
   1400201d7:	add    BYTE PTR [rax-0x48],dl
   1400201da:	add    DWORD PTR [rax+0x1],eax
   1400201dd:	add    BYTE PTR [rax],al
   1400201df:	add    al,cl
   1400201e1:	mov    eax,0x14001
	...
   1400201ee:	add    BYTE PTR [rax],al
   1400201f0:	sar    BYTE PTR [rax+0x14001],0x0
   1400201f7:	add    al,dl
   1400201f9:	mov    eax,0x14001
   1400201fe:	add    BYTE PTR [rax],al
   140020200:	mov    eax,0x14001b8
   140020205:	add    BYTE PTR [rax],al
   140020207:	add    BYTE PTR [rax-0x48],al
   14002020a:	add    DWORD PTR [rax+0x1],eax
   14002020d:	add    BYTE PTR [rax],al
   14002020f:	add    al,cl
   140020211:	mov    eax,0x14001
   140020216:	add    BYTE PTR [rax],al
   140020218:	and    BYTE PTR [rax+0x14001],bh
	...
   140020226:	add    BYTE PTR [rax],al
   140020228:	adc    eax,DWORD PTR [rax]
   14002022a:	add    BYTE PTR [rax],al
   14002022c:	and    eax,0x5b000000
   140020231:	add    BYTE PTR [rax],al
   140020233:	add    BYTE PTR [rdx+0x0],bh
   140020236:	add    BYTE PTR [rax],al
   140020238:	add    DWORD PTR [rax],eax
   14002023a:	add    BYTE PTR [rax],al
   14002023c:	add    BYTE PTR [rax],al
   14002023e:	add    BYTE PTR [rax],al
   140020240:	add    eax,DWORD PTR [rax]
   140020242:	add    BYTE PTR [rax],al
   140020244:	or     DWORD PTR [rax],eax
   140020246:	add    BYTE PTR [rax],al
   140020248:	adc    BYTE PTR [rax],al
   14002024a:	add    BYTE PTR [rax],al
   14002024c:	adc    al,BYTE PTR [rax]
   14002024e:	add    BYTE PTR [rax],al
   140020250:	adc    eax,0x19000000
   140020255:	add    BYTE PTR [rax],al
   140020257:	add    BYTE PTR [rbx],ah
   140020259:	add    BYTE PTR [rax],al
   14002025b:	add    BYTE PTR [rip+0x32000000],ch        # 0x172020261
   140020261:	add    BYTE PTR [rax],al
   140020263:	add    BYTE PTR [rax+rax*1],dh
   140020266:	add    BYTE PTR [rax],al
   140020268:	cmp    eax,DWORD PTR [rax]
   14002026a:	add    BYTE PTR [rax],al
   14002026c:	cmp    al,0x0
   14002026e:	add    BYTE PTR [rax],al
   140020270:	rex.X add BYTE PTR [rax],al
   140020273:	add    BYTE PTR [rax+rax*1+0x0],cl
   140020277:	add    BYTE PTR [rbx+0x0],dl
   14002027a:	add    BYTE PTR [rax],al
   14002027c:	pop    rcx
   14002027d:	add    BYTE PTR [rax],al
   14002027f:	add    BYTE PTR [rax+0x0],dh
   140020282:	add    BYTE PTR [rax],al
   140020284:	js     0x140020286
   140020286:	add    BYTE PTR [rax],al
   140020288:	jns    0x14002028a
   14002028a:	add    BYTE PTR [rax],al
   14002028c:	test   BYTE PTR [rax],al
   14002028e:	add    BYTE PTR [rax],al
   140020290:	mov    al,BYTE PTR [rax]
   140020292:	add    BYTE PTR [rax],al
   140020294:	mov    eax,DWORD PTR [rax]
   140020296:	add    BYTE PTR [rax],al
   140020298:	add    DWORD PTR [rax],eax
   14002029a:	add    BYTE PTR [rax],al
   14002029c:	add    BYTE PTR [rax],al
   14002029e:	add    BYTE PTR [rax],al
   1400202a0:	add    al,BYTE PTR [rax]
   1400202a2:	add    BYTE PTR [rax],al
   1400202a4:	add    al,0x0
   1400202a6:	add    BYTE PTR [rax],al
   1400202a8:	add    eax,0x6000000
   1400202ad:	add    BYTE PTR [rax],al
   1400202af:	add    BYTE PTR [rdi],al
   1400202b1:	add    BYTE PTR [rax],al
   1400202b3:	add    BYTE PTR [rdx],cl
   1400202b5:	add    BYTE PTR [rax],al
   1400202b7:	add    BYTE PTR [rbx],cl
   1400202b9:	add    BYTE PTR [rax],al
   1400202bb:	add    BYTE PTR [rax+rax*1],cl
   1400202be:	add    BYTE PTR [rax],al
   1400202c0:	or     eax,0xe000000
   1400202c5:	add    BYTE PTR [rax],al
   1400202c7:	add    BYTE PTR [rdi],cl
   1400202c9:	add    BYTE PTR [rax],al
   1400202cb:	add    BYTE PTR [rcx],dl
   1400202cd:	add    BYTE PTR [rax],al
   1400202cf:	add    BYTE PTR [rax+rax*1],dl
   1400202d2:	add    BYTE PTR [rax],al
   1400202d4:	(bad)  
   1400202d5:	add    BYTE PTR [rax],al
   1400202d7:	add    BYTE PTR [rax],bl
   1400202d9:	add    BYTE PTR [rax],al
   1400202db:	add    BYTE PTR [rcx+0x1a000000],dl
   1400202e1:	add    BYTE PTR [rax],al
   1400202e3:	add    BYTE PTR [rip+0x1e000000],bl        # 0x15e0202e9
   1400202e9:	add    BYTE PTR [rax],al
   1400202eb:	add    BYTE PTR [rdi],bl
   1400202ed:	add    BYTE PTR [rax],al
   1400202ef:	add    BYTE PTR [rax],ah
   1400202f1:	add    BYTE PTR [rax],al
   1400202f3:	add    BYTE PTR [rcx],ah
   1400202f5:	add    BYTE PTR [rax],al
   1400202f7:	add    BYTE PTR [rdx],ah
   1400202f9:	add    BYTE PTR [rax],al
   1400202fb:	add    BYTE PTR [rax+rax*1],ah
   1400202fe:	add    BYTE PTR [rax],al
   140020300:	add    BYTE PTR es:[rax],al
   140020303:	add    BYTE PTR [rax],ch
   140020305:	add    BYTE PTR [rax],al
   140020307:	add    BYTE PTR [rcx],ch
   140020309:	add    BYTE PTR [rax],al
   14002030b:	add    BYTE PTR [rdx],ch
   14002030d:	add    BYTE PTR [rax],al
   14002030f:	add    BYTE PTR [rbx],ch
   140020311:	add    BYTE PTR [rax],al
   140020313:	add    BYTE PTR [rax+rax*1],ch
   140020316:	add    BYTE PTR [rax],al
   140020318:	add    BYTE PTR cs:[rax],al
   14002031b:	add    BYTE PTR [rdi],ch
   14002031d:	add    BYTE PTR [rax],al
   14002031f:	add    BYTE PTR [rax],dh
   140020321:	add    BYTE PTR [rax],al
   140020323:	add    BYTE PTR [rcx],dh
   140020325:	add    BYTE PTR [rax],al
   140020327:	add    BYTE PTR [rbx],dh
   140020329:	add    BYTE PTR [rax],al
   14002032b:	add    BYTE PTR [rip+0x36000000],dh        # 0x176020331
   140020331:	add    BYTE PTR [rax],al
   140020333:	add    BYTE PTR [rdx],bh
   140020335:	add    BYTE PTR [rax],al
   140020337:	add    BYTE PTR [rip+0x3e000000],bh        # 0x17e02033d
   14002033d:	add    BYTE PTR [rax],al
   14002033f:	add    BYTE PTR [rdi],bh
   140020341:	add    BYTE PTR [rax],al
   140020343:	add    BYTE PTR [rax+0x0],al
   140020346:	add    BYTE PTR [rax],al
   140020348:	add    BYTE PTR [r8],al
   14002034b:	add    BYTE PTR [rbx+0x0],al
   14002034e:	add    BYTE PTR [rax],al
   140020350:	add    BYTE PTR [rax],r8b
   140020353:	add    BYTE PTR [rbp+0x0],al
   140020356:	add    BYTE PTR [rax],al
   140020358:	rex.RX add BYTE PTR [rax],r8b
   14002035b:	add    BYTE PTR [rax+0x0],cl
   14002035e:	add    BYTE PTR [rax],al
   140020360:	rex.WXB add BYTE PTR [r8],al
   140020363:	add    BYTE PTR [rbp+0x0],cl
   140020366:	add    BYTE PTR [rax],al
   140020368:	push   rax
   140020369:	add    BYTE PTR [rax],al
   14002036b:	add    BYTE PTR [rdx+0x0],dl
   14002036e:	add    BYTE PTR [rax],al
   140020370:	push   rsp
   140020371:	add    BYTE PTR [rax],al
   140020373:	add    BYTE PTR [rbp+0x0],dl
   140020376:	add    BYTE PTR [rax],al
   140020378:	lea    eax,[rax]
   14002037a:	add    BYTE PTR [rax],al
   14002037c:	push   rsi
   14002037d:	add    BYTE PTR [rax],al
   14002037f:	add    BYTE PTR [rdi+0x0],dl
   140020382:	add    BYTE PTR [rax],al
   140020384:	pop    rax
   140020385:	add    BYTE PTR [rax],al
   140020387:	add    BYTE PTR [rbx+0x0],bl
   14002038a:	add    BYTE PTR [rax],al
   14002038c:	pop    rsp
   14002038d:	add    BYTE PTR [rax],al
   14002038f:	add    BYTE PTR [rbp+0x0],bl
   140020392:	add    BYTE PTR [rax],al
   140020394:	pop    rsi
   140020395:	add    BYTE PTR [rax],al
   140020397:	add    BYTE PTR [rsi+0x0],ah
   14002039a:	add    BYTE PTR [rax],al
   14002039c:	add    BYTE PTR [eax],al
   14002039f:	add    BYTE PTR [rax+0x0],ch
   1400203a2:	add    BYTE PTR [rax],al
   1400203a4:	imul   eax,DWORD PTR [rax],0x6a0000
   1400203aa:	add    BYTE PTR [rax],al
   1400203ac:	imul   eax,DWORD PTR [rax],0x0
   1400203af:	add    BYTE PTR [rsi+0x0],ch
   1400203b2:	add    BYTE PTR [rax],al
   1400203b4:	outs   dx,DWORD PTR ds:[rsi]
   1400203b5:	add    BYTE PTR [rax],al
   1400203b7:	add    BYTE PTR [rcx+0x0],dh
   1400203ba:	add    BYTE PTR [rax],al
   1400203bc:	jb     0x1400203be
   1400203be:	add    BYTE PTR [rax],al
   1400203c0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400203c1:	add    BYTE PTR [rax],al
   1400203c3:	add    BYTE PTR [rax+rax*1+0x0],dh
   1400203c7:	add    BYTE PTR [rbp+0x0],dh
   1400203ca:	add    BYTE PTR [rax],al
   1400203cc:	jbe    0x1400203ce
   1400203ce:	add    BYTE PTR [rax],al
   1400203d0:	ja     0x1400203d2
   1400203d2:	add    BYTE PTR [rax],al
   1400203d4:	jnp    0x1400203d6
   1400203d6:	add    BYTE PTR [rax],al
   1400203d8:	jl     0x1400203da
   1400203da:	add    BYTE PTR [rax],al
   1400203dc:	jge    0x1400203de
   1400203de:	add    BYTE PTR [rax],al
   1400203e0:	jle    0x1400203e2
   1400203e2:	add    BYTE PTR [rax],al
   1400203e4:	xchg   edx,eax
   1400203e5:	add    BYTE PTR [rax],al
   1400203e7:	add    BYTE PTR [rax-0x7d000000],al
   1400203ed:	add    BYTE PTR [rax],al
   1400203ef:	add    BYTE PTR [rbp-0x79000000],al
   1400203f5:	add    BYTE PTR [rax],al
   1400203f7:	add    BYTE PTR [rax-0x77000000],cl
   1400203fd:	add    BYTE PTR [rax],al
   1400203ff:	add    BYTE PTR [rax+rax*1+0x10000],cl
   140020406:	add    BYTE PTR [rax],al
   140020408:	rex.RXB add BYTE PTR [r8],r8b
   14002040b:	add    BYTE PTR [rcx],al
   14002040d:	add    BYTE PTR [rax],al
   14002040f:	add    BYTE PTR [rdi+0x27000000],cl
   140020415:	add    BYTE PTR [rax],al
   140020417:	add    BYTE PTR [rdi],dh
   140020419:	add    BYTE PTR [rax],al
   14002041b:	add    BYTE PTR [rax],bh
   14002041d:	add    BYTE PTR [rax],al
   14002041f:	add    BYTE PTR [rcx],bh
   140020421:	add    BYTE PTR [rax],al
   140020423:	add    BYTE PTR [rax+0x4f000000],dl
   140020429:	add    BYTE PTR [rax],al
   14002042b:	add    BYTE PTR [rcx+0x0],ah
   14002042e:	add    BYTE PTR [rax],al
   140020430:	movsxd eax,DWORD PTR [rax]
   140020432:	add    BYTE PTR [rax],al
   140020434:	add    DWORD PTR [rax],eax
   140020436:	add    BYTE PTR [rax],al
   140020438:	sbb    al,0x0
   14002043a:	add    BYTE PTR [rax],al
   14002043c:	add    DWORD PTR [rax],eax
   14002043e:	add    BYTE PTR [rax],al
   140020440:	ins    BYTE PTR es:[rdi],dx
   140020441:	add    BYTE PTR [rax],al
   140020443:	add    BYTE PTR [rcx],al
   140020445:	add    BYTE PTR [rax],al
   140020447:	add    BYTE PTR [rdx+0x0],cl
   14002044a:	add    BYTE PTR [rax],al
   14002044c:	add    DWORD PTR [rax],eax
   14002044e:	add    BYTE PTR [rax],al
   140020450:	rex.WB add BYTE PTR [r8],al
   140020453:	add    BYTE PTR [rcx],al
   140020455:	add    BYTE PTR [rax],al
   140020457:	add    BYTE PTR [rsi+0x16000000],cl
   14002045d:	add    BYTE PTR [rax],al
   14002045f:	add    BYTE PTR [rbx],bl
   140020461:	add    BYTE PTR [rax],al
   140020463:	add    BYTE PTR [rax+0x0],ah
   140020466:	add    BYTE PTR [rax],al
   140020468:	add    BYTE PTR fs:[rax],al
   14002046b:	add    BYTE PTR [rax+rax*1+0x0],ah
   14002046f:	add    BYTE PTR [rcx+0x1000000],al
   140020475:	add    BYTE PTR [rax],al
   140020477:	add    BYTE PTR [rdx+0x0],bl
   14002047a:	add    BYTE PTR [rax],al
   14002047c:	add    DWORD PTR [rax],eax
   14002047e:	add    BYTE PTR [rax],al
   140020480:	pop    rdi
   140020481:	add    BYTE PTR [rax],al
   140020483:	add    BYTE PTR [rdi+0x0],bl
   140020486:	add    BYTE PTR [rax],al
   140020488:	add    DWORD PTR [rax],eax
   14002048a:	add    BYTE PTR [rax],al
   14002048c:	add    BYTE PTR [rax],al
   14002048e:	add    BYTE PTR [rax],al
   140020490:	ins    DWORD PTR es:[rdi],dx
   140020491:	add    BYTE PTR [rax],al
   140020493:	add    BYTE PTR [rcx],al
   140020495:	add    BYTE PTR [rax],al
   140020497:	add    BYTE PTR [rsi+0x0],cl
   14002049a:	add    BYTE PTR [rax],al
   14002049c:	add    DWORD PTR [rax],eax
   14002049e:	add    BYTE PTR [rax],al
   1400204a0:	xchg   BYTE PTR [rax],al
   1400204a2:	add    BYTE PTR [rax],al
   1400204a4:	add    DWORD PTR [rax],eax
   1400204a6:	add    BYTE PTR [rax],al
   1400204a8:	or     BYTE PTR [rax],al
   1400204aa:	add    BYTE PTR [rax],al
   1400204ac:	add    DWORD PTR [rax],eax
	...
   1400204b6:	add    BYTE PTR [rax],al
   1400204b8:	(bad)  
   1400204b9:	add    BYTE PTR [rax],al
   1400204bb:	add    BYTE PTR [rax],al
   1400204bd:	add    BYTE PTR [rax],al
   1400204bf:	add    BYTE PTR [rax],dl
   1400204c1:	add    BYTE PTR [rdx],al
   1400204c3:	rex add DWORD PTR [rax],eax
   1400204c6:	add    BYTE PTR [rax],al
   1400204c8:	add    al,BYTE PTR [rdx]
   1400204cb:	rex add DWORD PTR [rax],eax
	...
   1400204d6:	add    BYTE PTR [rax],al
   1400204d8:	and    BYTE PTR [rax],al
   1400204da:	add    al,BYTE PTR [rax+0x1]
   1400204dd:	add    BYTE PTR [rax],al
   1400204df:	add    BYTE PTR [rax+0x1400202],ah
	...
   1400204ed:	add    BYTE PTR [rax],al
   1400204ef:	add    BYTE PTR [rax],bh
   1400204f1:	add    BYTE PTR [rdx],al
   1400204f3:	rex add DWORD PTR [rax],eax
   1400204f6:	add    BYTE PTR [rax],al
   1400204f8:	sub    BYTE PTR [rdx],al
   1400204fa:	add    al,BYTE PTR [rax+0x1]
   1400204fd:	add    BYTE PTR [rax],al
   1400204ff:	add    BYTE PTR [rax+0x1400204],dh
   140020505:	add    BYTE PTR [rax],al
   140020507:	add    BYTE PTR [rax+0x0],dl
   14002050a:	add    al,BYTE PTR [rax+0x1]
   14002050d:	add    BYTE PTR [rax],al
   14002050f:	add    BYTE PTR [rax],cl
   140020511:	add    al,0x2
   140020513:	rex add DWORD PTR [rax],eax
	...
   14002051e:	add    BYTE PTR [rax],al
   140020520:	jo     0x140020522
   140020522:	add    al,BYTE PTR [rax+0x1]
   140020525:	add    BYTE PTR [rax],al
   140020527:	add    BYTE PTR [rax],dl
   140020529:	add    al,0x2
   14002052b:	rex add DWORD PTR [rax],eax
	...
   140020536:	add    BYTE PTR [rax],al
   140020538:	nop
   140020539:	add    BYTE PTR [rdx],al
   14002053b:	rex add DWORD PTR [rax],eax
   14002053e:	add    BYTE PTR [rax],al
   140020540:	cmp    BYTE PTR [rdx+rax*1],al
   140020543:	rex add DWORD PTR [rax],eax
	...
   14002054e:	add    BYTE PTR [rax],al
   140020550:	mov    al,0x0
   140020552:	add    al,BYTE PTR [rax+0x1]
   140020555:	add    BYTE PTR [rax],al
   140020557:	add    BYTE PTR [rax+0x4],al
   14002055a:	add    al,BYTE PTR [rax+0x1]
	...
   140020565:	add    BYTE PTR [rax],al
   140020567:	add    al,dl
   140020569:	add    BYTE PTR [rdx],al
   14002056b:	rex add DWORD PTR [rax],eax
   14002056e:	add    BYTE PTR [rax],al
   140020570:	rex.W add al,0x2
   140020573:	rex add DWORD PTR [rax],eax
	...
   14002057e:	add    BYTE PTR [rax],al
   140020580:	lock add BYTE PTR [rdx],al
   140020583:	rex add DWORD PTR [rax],eax
   140020586:	add    BYTE PTR [rax],al
   140020588:	push   rax
   140020589:	add    al,0x2
   14002058b:	rex add DWORD PTR [rax],eax
	...
   140020596:	add    BYTE PTR [rax],al
   140020598:	adc    BYTE PTR [rcx],al
   14002059a:	add    al,BYTE PTR [rax+0x1]
   14002059d:	add    BYTE PTR [rax],al
   14002059f:	add    BYTE PTR [rax+0x4],bl
   1400205a2:	add    al,BYTE PTR [rax+0x1]
	...
   1400205ad:	add    BYTE PTR [rax],al
   1400205af:	add    BYTE PTR [rax],dh
   1400205b1:	add    DWORD PTR [rdx],eax
   1400205b3:	rex add DWORD PTR [rax],eax
   1400205b6:	add    BYTE PTR [rax],al
   1400205b8:	js     0x1400205be
   1400205ba:	add    al,BYTE PTR [rax+0x1]
	...
   1400205c5:	add    BYTE PTR [rax],al
   1400205c7:	add    BYTE PTR [rax+0x1],dl
   1400205ca:	add    al,BYTE PTR [rax+0x1]
   1400205cd:	add    BYTE PTR [rax],al
   1400205cf:	add    BYTE PTR [rax+0x1400204],al
	...
   1400205dd:	add    BYTE PTR [rax],al
   1400205df:	add    BYTE PTR [rax+0x1],dh
   1400205e2:	add    al,BYTE PTR [rax+0x1]
   1400205e5:	add    BYTE PTR [rax],al
   1400205e7:	add    BYTE PTR [rax+0x1400204],dl
	...
   1400205f5:	add    BYTE PTR [rax],al
   1400205f7:	add    BYTE PTR [rax+0x1400201],bl
   1400205fd:	add    BYTE PTR [rax],al
   1400205ff:	add    BYTE PTR [rax+0x1400204],bl
	...
   14002060d:	add    BYTE PTR [rax],al
   14002060f:	add    al,al
   140020611:	add    DWORD PTR [rdx],eax
   140020613:	rex add DWORD PTR [rax],eax
   140020616:	add    BYTE PTR [rax],al
   140020618:	movabs al,ds:0x1400204
   140020621:	add    BYTE PTR [rax],al
   140020623:	add    BYTE PTR [rax],al
   140020625:	add    BYTE PTR [rax],al
   140020627:	add    al,dh
   140020629:	add    DWORD PTR [rdx],eax
   14002062b:	rex add DWORD PTR [rax],eax
   14002062e:	add    BYTE PTR [rax],al
   140020630:	test   al,0x4
   140020632:	add    al,BYTE PTR [rax+0x1]
	...
   14002063d:	add    BYTE PTR [rax],al
   14002063f:	add    BYTE PTR [rax+rdi*4],bh
   140020642:	fs sbb dl,cl
   140020645:	out    dx,eax
   140020646:	pushf  
   140020647:	xchg   ebp,eax
   140020648:	int    0x21
   14002064a:	sbb    al,0xbf
   14002064c:	(bad)  
   14002064d:	movabs eax,ds:0x219930522ddbd
   140020656:	add    BYTE PTR [rax],al
   140020658:	mov    WORD PTR [rax+0x2],fs
	...
   140020663:	add    BYTE PTR [rbx],al
   140020665:	add    BYTE PTR [rax],al
   140020667:	add    BYTE PTR [rax+riz*2+0x280002],bl
   14002066e:	add    BYTE PTR [rax],al
   140020670:	add    BYTE PTR [rax],al
   140020672:	add    BYTE PTR [rax],al
   140020674:	add    DWORD PTR [rax],eax
	...
   14002067e:	add    BYTE PTR [rax],al
   140020680:	and    al,BYTE PTR [rip+0x61993]        # 0x140082019
   140020686:	add    BYTE PTR [rax],al
   140020688:	shl    BYTE PTR [rax+0x2],1
	...
   140020693:	add    BYTE PTR [rcx],cl
   140020695:	add    BYTE PTR [rax],al
   140020697:	add    BYTE PTR [rax],al
   140020699:	(bad)  
   14002069a:	add    al,BYTE PTR [rax]
   14002069c:	sub    BYTE PTR [rax],al
   14002069e:	add    BYTE PTR [rax],al
   1400206a0:	add    BYTE PTR [rax],al
   1400206a2:	add    BYTE PTR [rax],al
   1400206a4:	add    DWORD PTR [rax],eax
	...
   1400206ae:	add    BYTE PTR [rax],al
   1400206b0:	and    al,BYTE PTR [rip+0x31993]        # 0x140052049
   1400206b6:	add    BYTE PTR [rax],al
   1400206b8:	pop    rsp
   1400206b9:	(bad)  
   1400206ba:	add    al,BYTE PTR [rax]
	...
   1400206c4:	add    eax,0x74000000
   1400206c9:	(bad)  
   1400206ca:	add    al,BYTE PTR [rax]
   1400206cc:	and    BYTE PTR [rax],al
   1400206ce:	add    BYTE PTR [rax],al
   1400206d0:	add    BYTE PTR [rax],al
   1400206d2:	add    BYTE PTR [rax],al
   1400206d4:	add    DWORD PTR [rax],eax
	...
   1400206de:	add    BYTE PTR [rax],al
   1400206e0:	and    al,BYTE PTR [rip+0x21993]        # 0x140042079
   1400206e6:	add    BYTE PTR [rax],al
   1400206e8:	shl    BYTE PTR [rcx+0x2],1
	...
   1400206f3:	add    BYTE PTR [rip+0xffffffffe0000000],al        # 0x1200206f9
   1400206f9:	(bad)  
   1400206fa:	add    al,BYTE PTR [rax]
   1400206fc:	sub    BYTE PTR [rax],al
   1400206fe:	add    BYTE PTR [rax],al
   140020700:	add    BYTE PTR [rax],al
   140020702:	add    BYTE PTR [rax],al
   140020704:	add    DWORD PTR [rax],eax
	...
   14002070e:	add    BYTE PTR [rax],al
   140020710:	loopne 0x1400206ca
   140020712:	add    DWORD PTR [rax+0x1],eax
	...
   14002071d:	add    BYTE PTR [rax],al
   14002071f:	add    al,dl
   140020721:	mov    eax,0x14001
   140020726:	add    BYTE PTR [rax],al
   140020728:	enter  0x1b8,0x40
   14002072c:	add    DWORD PTR [rax],eax
	...
   140020736:	add    BYTE PTR [rax],al
   140020738:	sar    BYTE PTR [rax+0x14001],1
   14002073e:	add    BYTE PTR [rax],al
   140020740:	enter  0x1b8,0x40
   140020744:	add    DWORD PTR [rax],eax
	...
   14002074e:	add    BYTE PTR [rax],al
   140020750:	sar    BYTE PTR [rax+0x14001],1
   140020756:	add    BYTE PTR [rax],al
   140020758:	enter  0x1b8,0x40
   14002075c:	add    DWORD PTR [rax],eax
   14002075e:	add    BYTE PTR [rax],al
   140020760:	sar    BYTE PTR [rax+0x14001],0x0
	...
   14002076f:	add    al,dl
   140020771:	mov    eax,0x14001
   140020776:	add    BYTE PTR [rax],al
   140020778:	mov    eax,0x14001b8
   14002077d:	add    BYTE PTR [rax],al
   14002077f:	add    al,cl
   140020781:	mov    eax,0x14001
	...
   14002078e:	add    BYTE PTR [rax],al
   140020790:	sar    BYTE PTR [rax+0x14001],1
   140020796:	add    BYTE PTR [rax],al
   140020798:	mov    eax,0x14001b8
   14002079d:	add    BYTE PTR [rax],al
   14002079f:	add    al,cl
   1400207a1:	mov    eax,0x14001
	...
   1400207ae:	add    BYTE PTR [rax],al
   1400207b0:	sar    BYTE PTR [rax+0x14001],1
   1400207b6:	add    BYTE PTR [rax],al
   1400207b8:	mov    eax,0x14001b8
   1400207bd:	add    BYTE PTR [rax],al
   1400207bf:	add    al,cl
   1400207c1:	mov    eax,0x14001
	...
   1400207ce:	add    BYTE PTR [rax],al
   1400207d0:	sar    BYTE PTR [rax+0x14001],1
   1400207d6:	add    BYTE PTR [rax],al
   1400207d8:	mov    eax,0x14001b8
   1400207dd:	add    BYTE PTR [rax],al
   1400207df:	add    al,cl
   1400207e1:	mov    eax,0x14001
	...
   1400207ee:	add    BYTE PTR [rax],al
   1400207f0:	sar    BYTE PTR [rax+0x14001],1
   1400207f6:	add    BYTE PTR [rax],al
   1400207f8:	mov    eax,0x14001b8
   1400207fd:	add    BYTE PTR [rax],al
   1400207ff:	add    al,cl
   140020801:	mov    eax,0x14001
	...
   14002080e:	add    BYTE PTR [rax],al
   140020810:	sar    BYTE PTR [rax+0x14001],1
   140020816:	add    BYTE PTR [rax],al
   140020818:	mov    eax,0x14001b8
   14002081d:	add    BYTE PTR [rax],al
   14002081f:	add    al,cl
   140020821:	mov    eax,0x14001
	...
   14002082e:	add    BYTE PTR [rax],al
   140020830:	sar    BYTE PTR [rax+0x14001],1
   140020836:	add    BYTE PTR [rax],al
   140020838:	mov    al,0xb8
   14002083a:	add    DWORD PTR [rax+0x1],eax
   14002083d:	add    BYTE PTR [rax],al
   14002083f:	add    al,cl
   140020841:	mov    eax,0x14001
	...
   14002084e:	add    BYTE PTR [rax],al
   140020850:	sar    BYTE PTR [rax+0x14001],1
   140020856:	add    BYTE PTR [rax],al
   140020858:	cwde   
   140020859:	mov    eax,0x14001
   14002085e:	add    BYTE PTR [rax],al
   140020860:	enter  0x1b8,0x40
   140020864:	add    DWORD PTR [rax],eax
	...
   14002086e:	add    BYTE PTR [rax],al
   140020870:	sar    BYTE PTR [rax+0x14001],1
   140020876:	add    BYTE PTR [rax],al
   140020878:	mov    eax,0x14001b8
   14002087d:	add    BYTE PTR [rax],al
   14002087f:	add    BYTE PTR [rax+0x14001b8],dl
   140020885:	add    BYTE PTR [rax],al
   140020887:	add    al,cl
   140020889:	mov    eax,0x14001
	...
   140020896:	add    BYTE PTR [rax],al
   140020898:	sar    BYTE PTR [rax+0x14001],1
   14002089e:	add    BYTE PTR [rax],al
   1400208a0:	js     0x14002085a
   1400208a2:	add    DWORD PTR [rax+0x1],eax
   1400208a5:	add    BYTE PTR [rax],al
   1400208a7:	add    BYTE PTR [rax-0x48],bl
   1400208aa:	add    DWORD PTR [rax+0x1],eax
   1400208ad:	add    BYTE PTR [rax],al
   1400208af:	add    al,cl
   1400208b1:	mov    eax,0x14001
	...
   1400208be:	add    BYTE PTR [rax],al
   1400208c0:	sar    BYTE PTR [rax+0x14001],0x0
   1400208c7:	add    al,dl
   1400208c9:	mov    eax,0x14001
   1400208ce:	add    BYTE PTR [rax],al
   1400208d0:	mov    eax,0x14001b8
   1400208d5:	add    BYTE PTR [rax],al
   1400208d7:	add    BYTE PTR [rax-0x48],dl
   1400208da:	add    DWORD PTR [rax+0x1],eax
   1400208dd:	add    BYTE PTR [rax],al
   1400208df:	add    al,cl
   1400208e1:	mov    eax,0x14001
	...
   1400208ee:	add    BYTE PTR [rax],al
   1400208f0:	sar    BYTE PTR [rax+0x14001],0x0
   1400208f7:	add    al,dl
   1400208f9:	mov    eax,0x14001
   1400208fe:	add    BYTE PTR [rax],al
   140020900:	mov    eax,0x14001b8
   140020905:	add    BYTE PTR [rax],al
   140020907:	add    BYTE PTR [rax-0x48],al
   14002090a:	add    DWORD PTR [rax+0x1],eax
   14002090d:	add    BYTE PTR [rax],al
   14002090f:	add    al,cl
   140020911:	mov    eax,0x14001
   140020916:	add    BYTE PTR [rax],al
   140020918:	and    BYTE PTR [rax+0x14001],bh
	...
   140020926:	add    BYTE PTR [rax],al
   140020928:	adc    eax,DWORD PTR [rax]
   14002092a:	add    BYTE PTR [rax],al
   14002092c:	and    eax,0x5b000000
   140020931:	add    BYTE PTR [rax],al
   140020933:	add    BYTE PTR [rdx+0x0],bh
   140020936:	add    BYTE PTR [rax],al
   140020938:	add    DWORD PTR [rax],eax
   14002093a:	add    BYTE PTR [rax],al
   14002093c:	add    BYTE PTR [rax],al
   14002093e:	add    BYTE PTR [rax],al
   140020940:	add    eax,DWORD PTR [rax]
   140020942:	add    BYTE PTR [rax],al
   140020944:	or     DWORD PTR [rax],eax
   140020946:	add    BYTE PTR [rax],al
   140020948:	adc    BYTE PTR [rax],al
   14002094a:	add    BYTE PTR [rax],al
   14002094c:	adc    al,BYTE PTR [rax]
   14002094e:	add    BYTE PTR [rax],al
   140020950:	adc    eax,0x19000000
   140020955:	add    BYTE PTR [rax],al
   140020957:	add    BYTE PTR [rbx],ah
   140020959:	add    BYTE PTR [rax],al
   14002095b:	add    BYTE PTR [rip+0x32000000],ch        # 0x172020961
   140020961:	add    BYTE PTR [rax],al
   140020963:	add    BYTE PTR [rax+rax*1],dh
   140020966:	add    BYTE PTR [rax],al
   140020968:	cmp    eax,DWORD PTR [rax]
   14002096a:	add    BYTE PTR [rax],al
   14002096c:	cmp    al,0x0
   14002096e:	add    BYTE PTR [rax],al
   140020970:	rex.X add BYTE PTR [rax],al
   140020973:	add    BYTE PTR [rax+rax*1+0x0],cl
   140020977:	add    BYTE PTR [rbx+0x0],dl
   14002097a:	add    BYTE PTR [rax],al
   14002097c:	pop    rcx
   14002097d:	add    BYTE PTR [rax],al
   14002097f:	add    BYTE PTR [rax+0x0],dh
   140020982:	add    BYTE PTR [rax],al
   140020984:	js     0x140020986
   140020986:	add    BYTE PTR [rax],al
   140020988:	jns    0x14002098a
   14002098a:	add    BYTE PTR [rax],al
   14002098c:	test   BYTE PTR [rax],al
   14002098e:	add    BYTE PTR [rax],al
   140020990:	mov    al,BYTE PTR [rax]
   140020992:	add    BYTE PTR [rax],al
   140020994:	mov    eax,DWORD PTR [rax]
   140020996:	add    BYTE PTR [rax],al
   140020998:	add    DWORD PTR [rax],eax
   14002099a:	add    BYTE PTR [rax],al
   14002099c:	add    BYTE PTR [rax],al
   14002099e:	add    BYTE PTR [rax],al
   1400209a0:	add    al,BYTE PTR [rax]
   1400209a2:	add    BYTE PTR [rax],al
   1400209a4:	add    al,0x0
   1400209a6:	add    BYTE PTR [rax],al
   1400209a8:	add    eax,0x6000000
   1400209ad:	add    BYTE PTR [rax],al
   1400209af:	add    BYTE PTR [rdi],al
   1400209b1:	add    BYTE PTR [rax],al
   1400209b3:	add    BYTE PTR [rdx],cl
   1400209b5:	add    BYTE PTR [rax],al
   1400209b7:	add    BYTE PTR [rbx],cl
   1400209b9:	add    BYTE PTR [rax],al
   1400209bb:	add    BYTE PTR [rax+rax*1],cl
   1400209be:	add    BYTE PTR [rax],al
   1400209c0:	or     eax,0xe000000
   1400209c5:	add    BYTE PTR [rax],al
   1400209c7:	add    BYTE PTR [rdi],cl
   1400209c9:	add    BYTE PTR [rax],al
   1400209cb:	add    BYTE PTR [rcx],dl
   1400209cd:	add    BYTE PTR [rax],al
   1400209cf:	add    BYTE PTR [rax+rax*1],dl
   1400209d2:	add    BYTE PTR [rax],al
   1400209d4:	(bad)  
   1400209d5:	add    BYTE PTR [rax],al
   1400209d7:	add    BYTE PTR [rax],bl
   1400209d9:	add    BYTE PTR [rax],al
   1400209db:	add    BYTE PTR [rcx+0x1a000000],dl
   1400209e1:	add    BYTE PTR [rax],al
   1400209e3:	add    BYTE PTR [rip+0x1e000000],bl        # 0x15e0209e9
   1400209e9:	add    BYTE PTR [rax],al
   1400209eb:	add    BYTE PTR [rdi],bl
   1400209ed:	add    BYTE PTR [rax],al
   1400209ef:	add    BYTE PTR [rax],ah
   1400209f1:	add    BYTE PTR [rax],al
   1400209f3:	add    BYTE PTR [rcx],ah
   1400209f5:	add    BYTE PTR [rax],al
   1400209f7:	add    BYTE PTR [rdx],ah
   1400209f9:	add    BYTE PTR [rax],al
   1400209fb:	add    BYTE PTR [rax+rax*1],ah
   1400209fe:	add    BYTE PTR [rax],al
   140020a00:	add    BYTE PTR es:[rax],al
   140020a03:	add    BYTE PTR [rax],ch
   140020a05:	add    BYTE PTR [rax],al
   140020a07:	add    BYTE PTR [rcx],ch
   140020a09:	add    BYTE PTR [rax],al
   140020a0b:	add    BYTE PTR [rdx],ch
   140020a0d:	add    BYTE PTR [rax],al
   140020a0f:	add    BYTE PTR [rbx],ch
   140020a11:	add    BYTE PTR [rax],al
   140020a13:	add    BYTE PTR [rax+rax*1],ch
   140020a16:	add    BYTE PTR [rax],al
   140020a18:	add    BYTE PTR cs:[rax],al
   140020a1b:	add    BYTE PTR [rdi],ch
   140020a1d:	add    BYTE PTR [rax],al
   140020a1f:	add    BYTE PTR [rax],dh
   140020a21:	add    BYTE PTR [rax],al
   140020a23:	add    BYTE PTR [rcx],dh
   140020a25:	add    BYTE PTR [rax],al
   140020a27:	add    BYTE PTR [rbx],dh
   140020a29:	add    BYTE PTR [rax],al
   140020a2b:	add    BYTE PTR [rip+0x36000000],dh        # 0x176020a31
   140020a31:	add    BYTE PTR [rax],al
   140020a33:	add    BYTE PTR [rdx],bh
   140020a35:	add    BYTE PTR [rax],al
   140020a37:	add    BYTE PTR [rip+0x3e000000],bh        # 0x17e020a3d
   140020a3d:	add    BYTE PTR [rax],al
   140020a3f:	add    BYTE PTR [rdi],bh
   140020a41:	add    BYTE PTR [rax],al
   140020a43:	add    BYTE PTR [rax+0x0],al
   140020a46:	add    BYTE PTR [rax],al
   140020a48:	add    BYTE PTR [r8],al
   140020a4b:	add    BYTE PTR [rbx+0x0],al
   140020a4e:	add    BYTE PTR [rax],al
   140020a50:	add    BYTE PTR [rax],r8b
   140020a53:	add    BYTE PTR [rbp+0x0],al
   140020a56:	add    BYTE PTR [rax],al
   140020a58:	rex.RX add BYTE PTR [rax],r8b
   140020a5b:	add    BYTE PTR [rax+0x0],cl
   140020a5e:	add    BYTE PTR [rax],al
   140020a60:	rex.WXB add BYTE PTR [r8],al
   140020a63:	add    BYTE PTR [rbp+0x0],cl
   140020a66:	add    BYTE PTR [rax],al
   140020a68:	push   rax
   140020a69:	add    BYTE PTR [rax],al
   140020a6b:	add    BYTE PTR [rdx+0x0],dl
   140020a6e:	add    BYTE PTR [rax],al
   140020a70:	push   rsp
   140020a71:	add    BYTE PTR [rax],al
   140020a73:	add    BYTE PTR [rbp+0x0],dl
   140020a76:	add    BYTE PTR [rax],al
   140020a78:	lea    eax,[rax]
   140020a7a:	add    BYTE PTR [rax],al
   140020a7c:	push   rsi
   140020a7d:	add    BYTE PTR [rax],al
   140020a7f:	add    BYTE PTR [rdi+0x0],dl
   140020a82:	add    BYTE PTR [rax],al
   140020a84:	pop    rax
   140020a85:	add    BYTE PTR [rax],al
   140020a87:	add    BYTE PTR [rbx+0x0],bl
   140020a8a:	add    BYTE PTR [rax],al
   140020a8c:	pop    rsp
   140020a8d:	add    BYTE PTR [rax],al
   140020a8f:	add    BYTE PTR [rbp+0x0],bl
   140020a92:	add    BYTE PTR [rax],al
   140020a94:	pop    rsi
   140020a95:	add    BYTE PTR [rax],al
   140020a97:	add    BYTE PTR [rsi+0x0],ah
   140020a9a:	add    BYTE PTR [rax],al
   140020a9c:	add    BYTE PTR [eax],al
   140020a9f:	add    BYTE PTR [rax+0x0],ch
   140020aa2:	add    BYTE PTR [rax],al
   140020aa4:	imul   eax,DWORD PTR [rax],0x6a0000
   140020aaa:	add    BYTE PTR [rax],al
   140020aac:	imul   eax,DWORD PTR [rax],0x0
   140020aaf:	add    BYTE PTR [rsi+0x0],ch
   140020ab2:	add    BYTE PTR [rax],al
   140020ab4:	outs   dx,DWORD PTR ds:[rsi]
   140020ab5:	add    BYTE PTR [rax],al
   140020ab7:	add    BYTE PTR [rcx+0x0],dh
   140020aba:	add    BYTE PTR [rax],al
   140020abc:	jb     0x140020abe
   140020abe:	add    BYTE PTR [rax],al
   140020ac0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020ac1:	add    BYTE PTR [rax],al
   140020ac3:	add    BYTE PTR [rax+rax*1+0x0],dh
   140020ac7:	add    BYTE PTR [rbp+0x0],dh
   140020aca:	add    BYTE PTR [rax],al
   140020acc:	jbe    0x140020ace
   140020ace:	add    BYTE PTR [rax],al
   140020ad0:	ja     0x140020ad2
   140020ad2:	add    BYTE PTR [rax],al
   140020ad4:	jnp    0x140020ad6
   140020ad6:	add    BYTE PTR [rax],al
   140020ad8:	jl     0x140020ada
   140020ada:	add    BYTE PTR [rax],al
   140020adc:	jge    0x140020ade
   140020ade:	add    BYTE PTR [rax],al
   140020ae0:	jle    0x140020ae2
   140020ae2:	add    BYTE PTR [rax],al
   140020ae4:	xchg   edx,eax
   140020ae5:	add    BYTE PTR [rax],al
   140020ae7:	add    BYTE PTR [rax-0x7d000000],al
   140020aed:	add    BYTE PTR [rax],al
   140020aef:	add    BYTE PTR [rbp-0x79000000],al
   140020af5:	add    BYTE PTR [rax],al
   140020af7:	add    BYTE PTR [rax-0x77000000],cl
   140020afd:	add    BYTE PTR [rax],al
   140020aff:	add    BYTE PTR [rax+rax*1+0x10000],cl
   140020b06:	add    BYTE PTR [rax],al
   140020b08:	rex.RXB add BYTE PTR [r8],r8b
   140020b0b:	add    BYTE PTR [rcx],al
   140020b0d:	add    BYTE PTR [rax],al
   140020b0f:	add    BYTE PTR [rdi+0x27000000],cl
   140020b15:	add    BYTE PTR [rax],al
   140020b17:	add    BYTE PTR [rdi],dh
   140020b19:	add    BYTE PTR [rax],al
   140020b1b:	add    BYTE PTR [rax],bh
   140020b1d:	add    BYTE PTR [rax],al
   140020b1f:	add    BYTE PTR [rcx],bh
   140020b21:	add    BYTE PTR [rax],al
   140020b23:	add    BYTE PTR [rax+0x4f000000],dl
   140020b29:	add    BYTE PTR [rax],al
   140020b2b:	add    BYTE PTR [rcx+0x0],ah
   140020b2e:	add    BYTE PTR [rax],al
   140020b30:	movsxd eax,DWORD PTR [rax]
   140020b32:	add    BYTE PTR [rax],al
   140020b34:	add    DWORD PTR [rax],eax
   140020b36:	add    BYTE PTR [rax],al
   140020b38:	sbb    al,0x0
   140020b3a:	add    BYTE PTR [rax],al
   140020b3c:	add    DWORD PTR [rax],eax
   140020b3e:	add    BYTE PTR [rax],al
   140020b40:	ins    BYTE PTR es:[rdi],dx
   140020b41:	add    BYTE PTR [rax],al
   140020b43:	add    BYTE PTR [rcx],al
   140020b45:	add    BYTE PTR [rax],al
   140020b47:	add    BYTE PTR [rdx+0x0],cl
   140020b4a:	add    BYTE PTR [rax],al
   140020b4c:	add    DWORD PTR [rax],eax
   140020b4e:	add    BYTE PTR [rax],al
   140020b50:	rex.WB add BYTE PTR [r8],al
   140020b53:	add    BYTE PTR [rcx],al
   140020b55:	add    BYTE PTR [rax],al
   140020b57:	add    BYTE PTR [rsi+0x16000000],cl
   140020b5d:	add    BYTE PTR [rax],al
   140020b5f:	add    BYTE PTR [rbx],bl
   140020b61:	add    BYTE PTR [rax],al
   140020b63:	add    BYTE PTR [rax+0x0],ah
   140020b66:	add    BYTE PTR [rax],al
   140020b68:	add    BYTE PTR fs:[rax],al
   140020b6b:	add    BYTE PTR [rax+rax*1+0x0],ah
   140020b6f:	add    BYTE PTR [rcx+0x1000000],al
   140020b75:	add    BYTE PTR [rax],al
   140020b77:	add    BYTE PTR [rdx+0x0],bl
   140020b7a:	add    BYTE PTR [rax],al
   140020b7c:	add    DWORD PTR [rax],eax
   140020b7e:	add    BYTE PTR [rax],al
   140020b80:	pop    rdi
   140020b81:	add    BYTE PTR [rax],al
   140020b83:	add    BYTE PTR [rdi+0x0],bl
   140020b86:	add    BYTE PTR [rax],al
   140020b88:	add    DWORD PTR [rax],eax
   140020b8a:	add    BYTE PTR [rax],al
   140020b8c:	add    BYTE PTR [rax],al
   140020b8e:	add    BYTE PTR [rax],al
   140020b90:	ins    DWORD PTR es:[rdi],dx
   140020b91:	add    BYTE PTR [rax],al
   140020b93:	add    BYTE PTR [rcx],al
   140020b95:	add    BYTE PTR [rax],al
   140020b97:	add    BYTE PTR [rsi+0x0],cl
   140020b9a:	add    BYTE PTR [rax],al
   140020b9c:	add    DWORD PTR [rax],eax
   140020b9e:	add    BYTE PTR [rax],al
   140020ba0:	xchg   BYTE PTR [rax],al
   140020ba2:	add    BYTE PTR [rax],al
   140020ba4:	add    DWORD PTR [rax],eax
   140020ba6:	add    BYTE PTR [rax],al
   140020ba8:	or     BYTE PTR [rax],al
   140020baa:	add    BYTE PTR [rax],al
   140020bac:	add    DWORD PTR [rax],eax
	...
   140020bb6:	add    BYTE PTR [rax],al
   140020bb8:	(bad)  
   140020bb9:	add    BYTE PTR [rax],al
   140020bbb:	add    BYTE PTR [rax],al
   140020bbd:	add    BYTE PTR [rax],al
   140020bbf:	add    bh,bh
   140020bc1:	(bad)  
   140020bc2:	(bad)  
   140020bc3:	dec    DWORD PTR [rdx]
	...
   140020bcd:	add    BYTE PTR [rax],al
   140020bcf:	add    BYTE PTR [rax],bl
   140020bd1:	add    BYTE PTR [rax],al
   140020bd3:	add    BYTE PTR [rax],al
   140020bd5:	add    BYTE PTR [rax],al
   140020bd7:	add    BYTE PTR [rdx+rsi*2+0x61],dl
   140020bdb:	outs   dx,BYTE PTR ds:[rsi]
   140020bdc:	jae    0x140020c4a
   140020bde:	(bad)  
   140020bdf:	je     0x140020c50
   140020be1:	jb     0x140020be3
   140020be3:	add    BYTE PTR [rax],al
   140020be5:	add    BYTE PTR [rax],al
   140020be7:	add    BYTE PTR [rdi],al
	...
   140020c25:	add    BYTE PTR [rax],al
   140020c27:	add    BYTE PTR [rax+0x12],ch
   140020c2a:	add    al,BYTE PTR [rax+0x1]
   140020c2d:	add    BYTE PTR [rax],al
   140020c2f:	add    ah,dl
   140020c31:	add    DWORD PTR ds:[rax+0x1],eax
   140020c35:	add    BYTE PTR [rax],al
   140020c37:	add    BYTE PTR [rax+0x1400493],dl
   140020c3d:	add    BYTE PTR [rax],al
   140020c3f:	add    BYTE PTR [rax],dh
   140020c41:	xchg   esp,eax
   140020c42:	add    al,0x40
   140020c44:	add    DWORD PTR [rax],eax
	...
   140020c4e:	add    BYTE PTR [rax],al
   140020c50:	add    DWORD PTR [rax],eax
	...
   140020c5a:	add    BYTE PTR [rax],al
   140020c5c:	or     BYTE PTR [rax+0xc780002],dl
   140020c62:	add    al,BYTE PTR [rax]
   140020c64:	push   rax
   140020c65:	or     al,0x2
	...
   140020c7b:	add    BYTE PTR [rcx],al
   140020c7d:	add    BYTE PTR [rax],al
   140020c7f:	add    BYTE PTR [rax],cl
   140020c81:	add    BYTE PTR [rax],al
   140020c83:	add    BYTE PTR [rax+0x20c],dl
   140020c89:	add    BYTE PTR [rax],al
   140020c8b:	add    BYTE PTR [rax],al
   140020c8d:	add    BYTE PTR [rax],al
   140020c8f:	add    al,bl
   140020c91:	or     al,0x2
   140020c93:	add    BYTE PTR [rax],al
   140020c95:	or     eax,0xd800002
   140020c9a:	add    al,BYTE PTR [rax]
   140020c9c:	ror    BYTE PTR [rip+0xe480002],1        # 0x14e4a0ca4
   140020ca2:	add    al,BYTE PTR [rax]
   140020ca4:	ror    BYTE PTR [rsi],0x2
   140020ca7:	add    BYTE PTR [rax],bh
   140020ca9:	lar    eax,WORD PTR [rax]
   140020cac:	mov    al,0xf
   140020cae:	add    al,BYTE PTR [rax]
	...
   140020cd8:	or     BYTE PTR [rax+0x70002],dl
   140020cde:	add    BYTE PTR [rax],al
   140020ce0:	add    BYTE PTR [rax],al
   140020ce2:	add    BYTE PTR [rax],al
   140020ce4:	(bad)  
   140020ce5:	(bad)  
   140020ce6:	(bad)  
   140020ce7:	inc    DWORD PTR [rax]
   140020ce9:	add    BYTE PTR [rax],al
   140020ceb:	add    BYTE PTR [rax+0x0],al
   140020cee:	add    BYTE PTR [rax],al
   140020cf0:	js     0x140020cfe
   140020cf2:	add    al,BYTE PTR [rax]
	...
   140020d00:	sub    BYTE PTR [rax+0x60002],dl
   140020d06:	add    BYTE PTR [rax],al
   140020d08:	add    BYTE PTR [rax],al
   140020d0a:	add    BYTE PTR [rax],al
   140020d0c:	(bad)  
   140020d0d:	(bad)  
   140020d0e:	(bad)  
   140020d0f:	inc    DWORD PTR [rax]
   140020d11:	add    BYTE PTR [rax],al
   140020d13:	add    BYTE PTR [rax+0x0],al
   140020d16:	add    BYTE PTR [rax],al
   140020d18:	sub    BYTE PTR [rip+0x2],cl        # 0x140020d20
	...
   140020d2a:	add    BYTE PTR [rax],al
   140020d2c:	add    DWORD PTR [rax],eax
   140020d2e:	add    BYTE PTR [rax],al
   140020d30:	(bad)  
   140020d31:	add    BYTE PTR [rax],al
   140020d33:	add    BYTE PTR [rax+0xd],al
   140020d36:	add    al,BYTE PTR [rax]
	...
   140020d40:	add    BYTE PTR [rip+0xd800002],cl        # 0x14d820d48
   140020d46:	add    al,BYTE PTR [rax]
   140020d48:	ror    BYTE PTR [rip+0xe480002],1        # 0x14e4a0d50
   140020d4e:	add    al,BYTE PTR [rax]
   140020d50:	ror    BYTE PTR [rsi],0x2
   140020d53:	add    BYTE PTR [rax],bh
   140020d55:	lar    eax,WORD PTR [rax]
   140020d58:	mov    al,0xf
   140020d5a:	add    al,BYTE PTR [rax]
	...
   140020d80:	pop    rax
   140020d81:	nop
   140020d82:	add    al,BYTE PTR [rax]
	...
   140020d8c:	(bad)  
   140020d8d:	(bad)  
   140020d8e:	(bad)  
   140020d8f:	inc    DWORD PTR [rax]
   140020d91:	add    BYTE PTR [rax],al
   140020d93:	add    BYTE PTR [rax+0x0],al
   140020d96:	add    BYTE PTR [rax],al
   140020d98:	test   al,0xd
   140020d9a:	add    al,BYTE PTR [rax]
	...
   140020db0:	add    DWORD PTR [rax],eax
   140020db2:	add    BYTE PTR [rax],al
   140020db4:	ror    BYTE PTR [rip+0x2],0x0        # 0x140020dbd
   140020dbb:	add    BYTE PTR [rax],al
   140020dbd:	add    BYTE PTR [rax],al
   140020dbf:	add    BYTE PTR [rax+0x20d],al
	...
   140020dcd:	add    BYTE PTR [rax],al
   140020dcf:	add    BYTE PTR [rax+0x290],cl
   140020dd5:	add    BYTE PTR [rax],al
   140020dd7:	add    BYTE PTR [rax],cl
   140020dd9:	add    BYTE PTR [rax],al
   140020ddb:	add    bh,bh
   140020ddd:	(bad)  
   140020dde:	(bad)  
   140020ddf:	inc    DWORD PTR [rax]
   140020de1:	add    BYTE PTR [rax],al
   140020de3:	add    BYTE PTR [rax+0x0],al
   140020de6:	add    BYTE PTR [rax],al
   140020de8:	clc    
   140020de9:	or     eax,0x2
	...
   140020dfe:	add    BYTE PTR [rax],al
   140020e00:	add    DWORD PTR [rax],eax
   140020e02:	add    BYTE PTR [rax],al
   140020e04:	adc    BYTE PTR [rsi],cl
   140020e06:	add    al,BYTE PTR [rax]
	...
   140020e10:	and    BYTE PTR [rsi],cl
   140020e12:	add    al,BYTE PTR [rax]
	...
   140020e20:	mov    BYTE PTR [rax+0x2],dl
   140020e26:	add    BYTE PTR [rax],al
   140020e28:	add    BYTE PTR [rax],al
   140020e2a:	add    BYTE PTR [rax],al
   140020e2c:	(bad)  
   140020e2d:	(bad)  
   140020e2e:	(bad)  
   140020e2f:	inc    DWORD PTR [rax]
   140020e31:	add    BYTE PTR [rax],al
   140020e33:	add    BYTE PTR [rax+0x0],al
   140020e36:	add    BYTE PTR [rax],al
   140020e38:	clc    
   140020e39:	or     eax,0x2
	...
   140020e46:	add    BYTE PTR [rax],al
   140020e48:	mov    al,0x90
   140020e4a:	add    al,BYTE PTR [rax]
   140020e4c:	add    BYTE PTR [rax],al
   140020e4e:	add    BYTE PTR [rax],al
   140020e50:	adc    BYTE PTR [rax],al
   140020e52:	add    BYTE PTR [rax],al
   140020e54:	(bad)  
   140020e55:	(bad)  
   140020e56:	(bad)  
   140020e57:	inc    DWORD PTR [rax]
   140020e59:	add    BYTE PTR [rax],al
   140020e5b:	add    BYTE PTR [rax+0x0],al
   140020e5e:	add    BYTE PTR [rax],al
   140020e60:	jo     0x140020e70
   140020e62:	add    al,BYTE PTR [rax]
	...
   140020e78:	add    DWORD PTR [rax],eax
   140020e7a:	add    BYTE PTR [rax],al
   140020e7c:	mov    BYTE PTR [rsi],cl
   140020e7e:	add    al,BYTE PTR [rax]
	...
   140020e88:	cwde   
   140020e89:	(bad)  
   140020e8a:	add    al,BYTE PTR [rax]
	...
   140020e98:	mov    al,0x90
   140020e9a:	add    al,BYTE PTR [rax]
	...
   140020ea4:	(bad)  
   140020ea5:	(bad)  
   140020ea6:	(bad)  
   140020ea7:	inc    DWORD PTR [rax]
   140020ea9:	add    BYTE PTR [rax],al
   140020eab:	add    BYTE PTR [rax+0x0],al
   140020eae:	add    BYTE PTR [rax],al
   140020eb0:	jo     0x140020ec0
   140020eb2:	add    al,BYTE PTR [rax]
	...
   140020ec0:	fcom   DWORD PTR [rax+0x2]
   140020ec6:	add    BYTE PTR [rax],al
   140020ec8:	sbb    BYTE PTR [rax],al
   140020eca:	add    BYTE PTR [rax],al
   140020ecc:	(bad)  
   140020ecd:	(bad)  
   140020ece:	(bad)  
   140020ecf:	inc    DWORD PTR [rax]
   140020ed1:	add    BYTE PTR [rax],al
   140020ed3:	add    BYTE PTR [rax+0x0],al
   140020ed6:	add    BYTE PTR [rax],al
   140020ed8:	call   0x1400210eb
	...
   140020eed:	add    BYTE PTR [rax],al
   140020eef:	add    BYTE PTR [rcx],al
   140020ef1:	add    BYTE PTR [rax],al
   140020ef3:	add    BYTE PTR [rax],al
   140020ef5:	lar    eax,WORD PTR [rax]
	...
   140020f00:	adc    BYTE PTR [rdi],cl
   140020f02:	add    al,BYTE PTR [rax]
	...
   140020f10:	fcom   DWORD PTR [rax+0x2]
   140020f16:	add    BYTE PTR [rax],al
   140020f18:	add    BYTE PTR [rax],al
   140020f1a:	add    BYTE PTR [rax],al
   140020f1c:	(bad)  
   140020f1d:	(bad)  
   140020f1e:	(bad)  
   140020f1f:	inc    DWORD PTR [rax]
   140020f21:	add    BYTE PTR [rax],al
   140020f23:	add    BYTE PTR [rax+0x0],al
   140020f26:	add    BYTE PTR [rax],al
   140020f28:	call   0x14002113b
	...
   140020f35:	add    BYTE PTR [rax],al
   140020f37:	add    BYTE PTR [rax],cl
   140020f39:	xchg   ecx,eax
   140020f3a:	add    al,BYTE PTR [rax]
   140020f3c:	add    BYTE PTR [rax],al
   140020f3e:	add    BYTE PTR [rax],al
   140020f40:	and    BYTE PTR [rax],al
   140020f42:	add    BYTE PTR [rax],al
   140020f44:	(bad)  
   140020f45:	(bad)  
   140020f46:	(bad)  
   140020f47:	inc    DWORD PTR [rax]
   140020f49:	add    BYTE PTR [rax],al
   140020f4b:	add    BYTE PTR [rax+0x0],al
   140020f4e:	add    BYTE PTR [rax],al
   140020f50:	(bad)  
   140020f51:	lar    eax,WORD PTR [rax]
	...
   140020f68:	add    DWORD PTR [rax],eax
   140020f6a:	add    BYTE PTR [rax],al
   140020f6c:	js     0x140020f7d
   140020f6e:	add    al,BYTE PTR [rax]
	...
   140020f78:	mov    BYTE PTR [rdi],cl
   140020f7a:	add    al,BYTE PTR [rax]
	...
   140020f88:	or     BYTE PTR [rcx+0x2],dl
   140020f8e:	add    BYTE PTR [rax],al
   140020f90:	add    BYTE PTR [rax],al
   140020f92:	add    BYTE PTR [rax],al
   140020f94:	(bad)  
   140020f95:	(bad)  
   140020f96:	(bad)  
   140020f97:	inc    DWORD PTR [rax]
   140020f99:	add    BYTE PTR [rax],al
   140020f9b:	add    BYTE PTR [rax+0x0],al
   140020f9e:	add    BYTE PTR [rax],al
   140020fa0:	(bad)  
   140020fa1:	lar    eax,WORD PTR [rax]
	...
   140020fb0:	cmp    BYTE PTR [rcx+0x2],dl
   140020fb6:	add    BYTE PTR [rax],al
   140020fb8:	sub    BYTE PTR [rax],al
   140020fba:	add    BYTE PTR [rax],al
   140020fbc:	(bad)  
   140020fbd:	(bad)  
   140020fbe:	(bad)  
   140020fbf:	inc    DWORD PTR [rax]
   140020fc1:	add    BYTE PTR [rax],al
   140020fc3:	add    BYTE PTR [rax+0x0],al
   140020fc6:	add    BYTE PTR [rax],al
   140020fc8:	fmul   DWORD PTR [rdi]
   140020fca:	add    al,BYTE PTR [rax]
	...
   140020fe0:	add    DWORD PTR [rax],eax
   140020fe2:	add    BYTE PTR [rax],al
   140020fe4:	lock lar eax,WORD PTR [rax]
	...
   140020ff0:	add    BYTE PTR [rax],dl
   140020ff2:	add    al,BYTE PTR [rax]
	...
   140021000:	cmp    BYTE PTR [rcx+0x2],dl
   140021006:	add    BYTE PTR [rax],al
   140021008:	add    BYTE PTR [rax],al
   14002100a:	add    BYTE PTR [rax],al
   14002100c:	(bad)  
   14002100d:	(bad)  
   14002100e:	(bad)  
   14002100f:	inc    DWORD PTR [rax]
   140021011:	add    BYTE PTR [rax],al
   140021013:	add    BYTE PTR [rax+0x0],al
   140021016:	add    BYTE PTR [rax],al
   140021018:	fmul   DWORD PTR [rdi]
   14002101a:	add    al,BYTE PTR [rax]
	...
   140021028:	add    DWORD PTR [rax],eax
   14002102a:	add    BYTE PTR [rax],al
   14002102c:	or     BYTE PTR [rax],al
   14002102e:	add    BYTE PTR [rax],al
   140021030:	add    BYTE PTR [rax],al
   140021032:	add    BYTE PTR [rax],al
   140021034:	or     BYTE PTR [rax+0xc780002],dl
   14002103a:	add    al,BYTE PTR [rax]
   14002103c:	sub    BYTE PTR [rax],dl
   14002103e:	add    al,BYTE PTR [rax]
	...
   140021050:	add    DWORD PTR [rax],eax
   140021052:	add    BYTE PTR [rax],al
   140021054:	adc    BYTE PTR [rax],al
   140021056:	add    BYTE PTR [rax],al
   140021058:	add    BYTE PTR [rax],al
   14002105a:	add    BYTE PTR [rax],al
   14002105c:	or     BYTE PTR [rax+0xc780002],dl
   140021062:	add    al,BYTE PTR [rax]
   140021064:	push   rax
   140021065:	adc    BYTE PTR [rdx],al
	...
   140021077:	add    BYTE PTR [rcx],al
   140021079:	add    BYTE PTR [rax],al
   14002107b:	add    BYTE PTR [rax],bl
   14002107d:	add    BYTE PTR [rax],al
   14002107f:	add    BYTE PTR [rax],al
   140021081:	add    BYTE PTR [rax],al
   140021083:	add    BYTE PTR [rax],cl
   140021085:	nop
   140021086:	add    al,BYTE PTR [rax]
   140021088:	js     0x140021096
   14002108a:	add    al,BYTE PTR [rax]
   14002108c:	js     0x14002109e
   14002108e:	add    al,BYTE PTR [rax]
	...
   1400210a0:	add    DWORD PTR [rax],eax
   1400210a2:	add    BYTE PTR [rax],al
   1400210a4:	and    BYTE PTR [rax],al
   1400210a6:	add    BYTE PTR [rax],al
   1400210a8:	add    BYTE PTR [rax],al
   1400210aa:	add    BYTE PTR [rax],al
   1400210ac:	or     BYTE PTR [rax+0xc780002],dl
   1400210b2:	add    al,BYTE PTR [rax]
   1400210b4:	movabs al,ds:0x210
	...
   1400210c5:	add    BYTE PTR [rax],al
   1400210c7:	add    BYTE PTR [rcx],al
   1400210c9:	add    BYTE PTR [rax],al
   1400210cb:	add    BYTE PTR [rax],ch
   1400210cd:	add    BYTE PTR [rax],al
   1400210cf:	add    BYTE PTR [rax],al
   1400210d1:	add    BYTE PTR [rax],al
   1400210d3:	add    BYTE PTR [rax],cl
   1400210d5:	nop
   1400210d6:	add    al,BYTE PTR [rax]
   1400210d8:	js     0x1400210e6
   1400210da:	add    al,BYTE PTR [rax]
   1400210dc:	enter  0x210,0x0
	...
   1400210f0:	add    DWORD PTR [rax],eax
   1400210f2:	add    BYTE PTR [rax],al
   1400210f4:	or     BYTE PTR [rax],al
   1400210f6:	add    BYTE PTR [rax],al
   1400210f8:	add    BYTE PTR [rax],al
   1400210fa:	add    BYTE PTR [rax],al
   1400210fc:	js     0x14002108f
   1400210fe:	add    al,BYTE PTR [rax]
   140021100:	sbb    BYTE PTR [rcx],dl
   140021102:	add    al,BYTE PTR [rax]
   140021104:	lock adc BYTE PTR [rdx],al
	...
   14002111b:	add    BYTE PTR [rcx],al
   14002111d:	add    BYTE PTR [rax],al
   14002111f:	add    BYTE PTR [rax],cl
   140021121:	add    BYTE PTR [rax],al
   140021123:	add    BYTE PTR [rax],dh
   140021125:	adc    DWORD PTR [rdx],eax
	...
   14002112f:	add    BYTE PTR [rax+0x11],bh
   140021132:	add    al,BYTE PTR [rax]
   140021134:	add    BYTE PTR [rip+0xd800002],cl        # 0x14d82113c
   14002113a:	add    al,BYTE PTR [rax]
   14002113c:	ror    BYTE PTR [rip+0xe480002],1        # 0x14e4a1144
   140021142:	add    al,BYTE PTR [rax]
   140021144:	ror    BYTE PTR [rsi],0x2
   140021147:	add    BYTE PTR [rax],bh
   140021149:	lar    eax,WORD PTR [rax]
   14002114c:	mov    al,0xf
   14002114e:	add    al,BYTE PTR [rax]
	...
   140021178:	js     0x14002110b
   14002117a:	add    al,BYTE PTR [rax]
   14002117c:	(bad)  
   14002117d:	add    BYTE PTR [rax],al
   14002117f:	add    BYTE PTR [rax],al
   140021181:	add    BYTE PTR [rax],al
   140021183:	add    bh,bh
   140021185:	(bad)  
   140021186:	(bad)  
   140021187:	inc    DWORD PTR [rax]
   140021189:	add    BYTE PTR [rax],al
   14002118b:	add    BYTE PTR [rax+0x0],al
   14002118e:	add    BYTE PTR [rax],al
   140021190:	sbb    BYTE PTR [rcx],dl
   140021192:	add    al,BYTE PTR [rax]
	...
   1400211a0:	add    DWORD PTR [rax],eax
	...
   1400211aa:	add    BYTE PTR [rax],al
   1400211ac:	js     0x14002113f
   1400211ae:	add    al,BYTE PTR [rax]
   1400211b0:	sbb    BYTE PTR [rcx],dl
   1400211b2:	add    al,BYTE PTR [rax]
   1400211b4:	movabs al,ds:0x211
	...
   1400211c5:	add    BYTE PTR [rax],al
   1400211c7:	add    BYTE PTR [rcx],al
   1400211c9:	add    BYTE PTR [rax],al
   1400211cb:	add    BYTE PTR [rax],dl
   1400211cd:	add    BYTE PTR [rax],al
   1400211cf:	add    BYTE PTR [rax],al
   1400211d1:	add    BYTE PTR [rax],al
   1400211d3:	add    BYTE PTR [rax-0x6f],bh
   1400211d6:	add    al,BYTE PTR [rax]
   1400211d8:	sbb    BYTE PTR [rcx],dl
   1400211da:	add    al,BYTE PTR [rax]
   1400211dc:	enter  0x211,0x0
	...
   1400211f0:	add    DWORD PTR [rax],eax
   1400211f2:	add    BYTE PTR [rax],al
   1400211f4:	sbb    BYTE PTR [rax],al
   1400211f6:	add    BYTE PTR [rax],al
   1400211f8:	add    BYTE PTR [rax],al
   1400211fa:	add    BYTE PTR [rax],al
   1400211fc:	js     0x14002118f
   1400211fe:	add    al,BYTE PTR [rax]
   140021200:	sbb    BYTE PTR [rcx],dl
   140021202:	add    al,BYTE PTR [rax]
   140021204:	lock adc DWORD PTR [rdx],eax
	...
   140021217:	add    BYTE PTR [rcx],al
   140021219:	add    BYTE PTR [rax],al
   14002121b:	add    BYTE PTR [rax],ah
   14002121d:	add    BYTE PTR [rax],al
   14002121f:	add    BYTE PTR [rax],al
   140021221:	add    BYTE PTR [rax],al
   140021223:	add    BYTE PTR [rax-0x6f],bh
   140021226:	add    al,BYTE PTR [rax]
   140021228:	sbb    BYTE PTR [rcx],dl
   14002122a:	add    al,BYTE PTR [rax]
   14002122c:	sbb    BYTE PTR [rdx],dl
   14002122e:	add    al,BYTE PTR [rax]
	...
   140021240:	add    DWORD PTR [rax],eax
   140021242:	add    BYTE PTR [rax],al
   140021244:	sub    BYTE PTR [rax],al
   140021246:	add    BYTE PTR [rax],al
   140021248:	add    BYTE PTR [rax],al
   14002124a:	add    BYTE PTR [rax],al
   14002124c:	js     0x1400211df
   14002124e:	add    al,BYTE PTR [rax]
   140021250:	sbb    BYTE PTR [rcx],dl
   140021252:	add    al,BYTE PTR [rax]
   140021254:	adc    al,BYTE PTR [rdx]
	...
   140021267:	add    BYTE PTR [rcx],al
	...
   140021275:	xchg   edx,eax
   140021276:	add    al,BYTE PTR [rax]
   140021278:	nop
   140021279:	adc    al,BYTE PTR [rdx]
   14002127b:	add    BYTE PTR [rax+0x12],ch
   14002127e:	add    al,BYTE PTR [rax]
	...
   140021298:	add    DWORD PTR [rax],eax
   14002129a:	add    BYTE PTR [rax],al
   14002129c:	test   al,0x12
   14002129e:	add    al,BYTE PTR [rax]
	...
   1400212a8:	mov    eax,0x212
	...
   1400212b9:	xchg   edx,eax
   1400212ba:	add    al,BYTE PTR [rax]
	...
   1400212c4:	(bad)  
   1400212c5:	(bad)  
   1400212c6:	(bad)  
   1400212c7:	inc    DWORD PTR [rax]
   1400212c9:	add    BYTE PTR [rax],al
   1400212cb:	add    BYTE PTR [rax+0x0],al
   1400212ce:	add    BYTE PTR [rax],al
   1400212d0:	nop
   1400212d1:	adc    al,BYTE PTR [rdx]
	...
   1400212ff:	add    BYTE PTR [rcx],dl
   140021301:	sbb    eax,0x641d0006
   140021306:	or     al,BYTE PTR [rax]
   140021308:	sbb    BYTE PTR [rcx+rcx*1],dh
   14002130b:	add    BYTE PTR [rdx],cl
   14002130d:	push   rdx
   14002130e:	(bad)  
   14002130f:	jo     0x1400212df
   140021311:	add    DWORD PTR ds:[rax],eax
   140021314:	sar    BYTE PTR [rbp-0xffff],0xff
   14002131b:	inc    DWORD PTR [rax]
   14002131d:	add    QWORD PTR [r8],rax
   140021320:	add    BYTE PTR [rax],al
   140021322:	add    BYTE PTR [rax],al
   140021324:	and    BYTE PTR [rcx+0x1],cl
   140021327:	add    BYTE PTR [rcx],al
   140021329:	add    BYTE PTR [rax],al
   14002132b:	add    BYTE PTR [rax+0x49],al
   14002132e:	add    DWORD PTR [rax],eax
   140021330:	add    al,BYTE PTR [rax]
   140021332:	add    BYTE PTR [rax],al
   140021334:	(bad)  
   140021335:	add    QWORD PTR [r8],rax
   140021338:	nop
   140021339:	adc    BYTE PTR [rax],al
   14002133b:	add    bh,bh
   14002133d:	(bad)  
   14002133e:	(bad)  
   14002133f:	(bad)  
   140021340:	mov    ebp,0x10
   140021345:	add    BYTE PTR [rax],al
   140021347:	add    BYTE PTR [rcx+rdx*1],dl
   14002134a:	add    BYTE PTR [rax],al
   14002134c:	add    DWORD PTR [rax],eax
   14002134e:	add    BYTE PTR [rax],al
   140021350:	(bad)  
   140021351:	adc    DWORD PTR [rax],eax
   140021353:	add    BYTE PTR [rdx],al
   140021355:	add    BYTE PTR [rax],al
   140021357:	add    BYTE PTR [rdx],ch
   140021359:	adc    DWORD PTR [rax],eax
   14002135b:	add    BYTE PTR [rbx],al
   14002135d:	add    BYTE PTR [rax],al
   14002135f:	add    BYTE PTR [rcx+rdx*1+0x0],bl
   140021363:	add    bh,bh
   140021365:	(bad)  
   140021366:	(bad)  
   140021367:	call   QWORD PTR [rcx]
   140021369:	sbb    DWORD PTR [rsi],eax
   14002136b:	add    BYTE PTR [rcx],bl
   14002136d:	or     eax,DWORD PTR fs:[rax]
   140021370:	adc    al,0x34
   140021372:	or     al,BYTE PTR [rax]
   140021374:	(bad)  
   140021375:	jb     0x140021379
   140021377:	jo     0x140021347
   140021379:	add    DWORD PTR ds:[rax],eax
   14002137c:	(bad)  
   14002137d:	mov    edi,0xffff0001
   140021382:	(bad)  
   140021383:	inc    DWORD PTR [rax+0x149]
   140021389:	add    BYTE PTR [rax],al
   14002138b:	add    BYTE PTR [rax+0x1000149],ah
   140021391:	add    BYTE PTR [rax],al
   140021393:	add    al,al
   140021395:	add    QWORD PTR [r8],rax
   140021398:	add    BYTE PTR [rax],al
   14002139a:	add    BYTE PTR [rax],al
   14002139c:	loopne 0x1400213e7
   14002139e:	add    DWORD PTR [rax],eax
   1400213a0:	movabs al,ds:0xc8ffffffff000011
   1400213a9:	adc    DWORD PTR [rax],eax
   1400213ab:	add    BYTE PTR [rax],al
   1400213ad:	add    BYTE PTR [rax],al
   1400213af:	add    bh,dl
   1400213b1:	adc    DWORD PTR [rax],eax
   1400213b3:	add    BYTE PTR [rcx],al
   1400213b5:	add    BYTE PTR [rax],al
   1400213b7:	add    dh,ah
   1400213b9:	adc    DWORD PTR [rax],eax
   1400213bb:	add    BYTE PTR [rdx],al
   1400213bd:	add    BYTE PTR [rax],al
   1400213bf:	add    BYTE PTR [rdx+rdx*1],ah
   1400213c2:	add    BYTE PTR [rax],al
   1400213c4:	add    DWORD PTR [rax],eax
   1400213c6:	add    BYTE PTR [rax],al
   1400213c8:	xor    BYTE PTR [rdx],dl
   1400213ca:	add    BYTE PTR [rax],al
   1400213cc:	add    BYTE PTR [rax],al
   1400213ce:	add    BYTE PTR [rax],al
   1400213d0:	rex.WR adc r8b,BYTE PTR [rax]
   1400213d3:	add    BYTE PTR [rbx],al
   1400213d5:	add    BYTE PTR [rax],al
   1400213d7:	add    BYTE PTR [rbx+0x12],dh
   1400213da:	add    BYTE PTR [rax],al
   1400213dc:	add    BYTE PTR [rax],al
   1400213de:	add    BYTE PTR [rax],al
   1400213e0:	jg     0x1400213f4
   1400213e2:	add    BYTE PTR [rax],al
   1400213e4:	(bad)  
   1400213e5:	(bad)  
   1400213e6:	(bad)  
   1400213e7:	call   FWORD PTR [rcx]
   1400213e9:	or     al,BYTE PTR [rdx]
   1400213eb:	add    BYTE PTR [rdx],cl
   1400213ed:	push   rdx
   1400213ee:	(bad)  
   1400213ef:	push   rax
   1400213f0:	(bad)  
   1400213f1:	add    DWORD PTR ds:[rax],eax
   1400213f4:	sar    BYTE PTR [rdi+0x1d190001],0x6
   1400213fb:	add    BYTE PTR [rip+0x18000c64],bl        # 0x158022065
   140021401:	xor    al,0xb
   140021403:	add    BYTE PTR [rdx],cl
   140021405:	jb     0x14002140d
   140021407:	jo     0x1400213d7
   140021409:	add    DWORD PTR ds:[rax],eax
   14002140c:	sar    BYTE PTR [rdi+0x10001],0x0
   140021413:	add    BYTE PTR [rcx],al
   140021415:	add    BYTE PTR [rax],al
   140021417:	add    BYTE PTR [rdx],al
   140021419:	add    BYTE PTR [rax],al
   14002141b:	add    BYTE PTR [rcx],al
   14002141d:	add    BYTE PTR [rax],al
   14002141f:	add    BYTE PTR [rsp+rdx*1+0x2],cl
   140021423:	add    BYTE PTR [rax],al
   140021425:	add    BYTE PTR [rax],al
   140021427:	add    BYTE PTR [rdx],al
   140021429:	add    BYTE PTR [rax],al
   14002142b:	add    BYTE PTR [rbx],al
   14002142d:	add    BYTE PTR [rax],al
   14002142f:	add    BYTE PTR [rcx],al
   140021431:	add    BYTE PTR [rax],al
   140021433:	add    BYTE PTR [rax],bh
   140021435:	adc    al,0x2
   140021437:	add    BYTE PTR [rax+0x0],al
	...
   140021442:	add    BYTE PTR [rax],al
   140021444:	xor    BYTE PTR [rdx+0x1],cl
   140021447:	add    BYTE PTR [rax+0x0],cl
   14002144a:	add    BYTE PTR [rax],al
   14002144c:	add    BYTE PTR [rax],al
	...
   140021457:	add    BYTE PTR [rax],al
   140021459:	rex.WX add QWORD PTR [rax],rax
   14002145c:	rex.W add BYTE PTR [rax],al
   14002145f:	add    BYTE PTR [rax-0xffffee],ah
   140021465:	(bad)  
   140021466:	(bad)  
   140021467:	jmp    rbx
   140021469:	adc    al,BYTE PTR [rax]
   14002146b:	add    BYTE PTR [rax],al
   14002146d:	add    BYTE PTR [rax],al
   14002146f:	add    dh,dh
   140021471:	adc    al,BYTE PTR [rax]
   140021473:	add    BYTE PTR [rcx],al
   140021475:	add    BYTE PTR [rax],al
   140021477:	add    BYTE PTR [rcx],cl
   140021479:	adc    eax,DWORD PTR [rax]
   14002147b:	add    bh,bh
   14002147d:	(bad)  
   14002147e:	(bad)  
   14002147f:	inc    DWORD PTR [rax]
   140021481:	rex.WX add QWORD PTR [rax],rax
   140021484:	add    BYTE PTR [rax],al
   140021486:	add    BYTE PTR [rax],al
   140021488:	or     eax,0x200014a
   14002148d:	add    BYTE PTR [rax],al
   14002148f:	add    BYTE PTR [rip+0x14a],ah        # 0x1400215df
   140021495:	add    BYTE PTR [rax],al
   140021497:	add    BYTE PTR [rip+0x300014a],bh        # 0x1430215e7
   14002149d:	add    BYTE PTR [rax],al
   14002149f:	add    BYTE PTR [rbp+0x4a],dl
   1400214a2:	add    DWORD PTR [rax],eax
   1400214a4:	add    BYTE PTR [rax],al
   1400214a6:	add    BYTE PTR [rax],al
   1400214a8:	add    DWORD PTR [rdi],ecx
   1400214aa:	add    al,0x0
   1400214ac:	sysenter 
   1400214ae:	(bad)  
   1400214af:	add    BYTE PTR [rdi],cl
   1400214b1:	xor    cl,BYTE PTR [rbx]
   1400214b3:	jo     0x1400214ce
   1400214b5:	cmp    eax,0x642b000d
   1400214ba:	xor    al,0x0
   1400214bc:	(bad)  
   1400214bd:	push   rsp
   1400214be:	xor    eax,DWORD PTR [rax]
   1400214c0:	and    esi,DWORD PTR [rdx+rsi*1]
   1400214c3:	add    BYTE PTR [rbx],dl
   1400214c5:	add    DWORD PTR [rax+rax*1],ebp
   1400214c8:	or     al,0xf0
   1400214ca:	or     ah,al
   1400214cc:	or     al,dl
   1400214ce:	(bad)  
   1400214cf:	rol    BYTE PTR [rax+rsi*2],0x0
   1400214d3:	add    BYTE PTR [rax+0x3f],dl
   1400214d6:	add    DWORD PTR [rax],eax
   1400214d8:	lock mov edi,0x1520001
   1400214de:	add    BYTE PTR [rax],al
   1400214e0:	(bad)  
   1400214e1:	(bad)  
   1400214e2:	(bad)  
   1400214e3:	jmp    QWORD PTR [rax+0x4a]
   1400214e6:	add    DWORD PTR [rax],eax
   1400214e8:	(bad)  
   1400214e9:	(bad)  
   1400214ea:	(bad)  
   1400214eb:	inc    DWORD PTR [rax-0xfffeb6]
   1400214f1:	(bad)  
   1400214f2:	(bad)  
   1400214f3:	jmp    QWORD PTR [rax+0x200014a]
   1400214f9:	add    BYTE PTR [rax],al
   1400214fb:	add    al,al
   1400214fd:	rex.WX add QWORD PTR [rax],rax
   140021500:	add    eax,DWORD PTR [rax]
   140021502:	add    BYTE PTR [rax],al
   140021504:	loopne 0x140021550
   140021506:	add    DWORD PTR [rax],eax
   140021508:	add    al,0x0
   14002150a:	add    BYTE PTR [rax],al
   14002150c:	add    BYTE PTR [rbx+0x1],cl
   14002150f:	add    BYTE PTR [rip+0x20000000],al        # 0x160021515
   140021515:	rex.WXB add QWORD PTR [r8],rax
   140021518:	(bad)  
   140021519:	(bad)  
   14002151a:	(bad)  
   14002151b:	inc    DWORD PTR [rax+0x4b]
   14002151e:	add    DWORD PTR [rax],eax
   140021520:	mov    al,0x14
   140021522:	add    BYTE PTR [rax],al
   140021524:	(bad)  
   140021525:	(bad)  
   140021526:	(bad)  
   140021527:	inc    DWORD PTR [rbx+0x16]
   14002152a:	add    BYTE PTR [rax],al
   14002152c:	add    BYTE PTR [rax],al
   14002152e:	add    BYTE PTR [rax],al
   140021530:	rex.RB (bad) 
   140021532:	add    BYTE PTR [rax],al
   140021534:	(bad)  
   140021535:	(bad)  
   140021536:	(bad)  
   140021537:	inc    ebx
   140021539:	(bad)  
   14002153a:	add    BYTE PTR [rax],al
   14002153c:	add    BYTE PTR [rax],al
   14002153e:	add    BYTE PTR [rax],al
   140021540:	(bad)
   140021543:	add    bh,bh
   140021545:	(bad)  
   140021546:	(bad)  
   140021547:	push   rdx
   140021549:	(bad)  
   14002154a:	add    BYTE PTR [rax],al
   14002154c:	(bad)  
   14002154d:	add    BYTE PTR [rax],al
   14002154f:	add    BYTE PTR [rbp-0xffffe9],dl
   140021555:	(bad)  
   140021556:	(bad)  
   140021557:	call   FWORD PTR [rsi]
   140021559:	sbb    DWORD PTR [rax],eax
   14002155b:	add    BYTE PTR [rax],al
   14002155d:	add    BYTE PTR [rax],al
   14002155f:	add    BYTE PTR [rcx-0xffffe7],dh
   140021565:	(bad)  
   140021566:	(bad)  
   140021567:	(bad)  
   140021568:	(bad)  
   140021569:	sbb    DWORD PTR [rax],eax
   14002156b:	add    BYTE PTR [rcx],al
   14002156d:	add    BYTE PTR [rax],al
   14002156f:	add    BYTE PTR [rsi+0x1a],dh
   140021572:	add    BYTE PTR [rax],al
   140021574:	(bad)  
   140021575:	(bad)  
   140021576:	(bad)  
   140021577:	push   QWORD PTR [rdx+0x200001b]
   14002157d:	add    BYTE PTR [rax],al
   14002157f:	add    BYTE PTR [rbx+0x1c],dh
   140021582:	add    BYTE PTR [rax],al
   140021584:	add    eax,DWORD PTR [rax]
   140021586:	add    BYTE PTR [rax],al
   140021588:	jg     0x1400215a6
   14002158a:	add    BYTE PTR [rax],al
   14002158c:	add    al,0x0
   14002158e:	add    BYTE PTR [rax],al
   140021590:	mov    eax,0x500001c
   140021595:	add    BYTE PTR [rax],al
   140021597:	add    ah,cl
   140021599:	sbb    al,0x0
   14002159b:	add    BYTE PTR [rsi],al
   14002159d:	add    BYTE PTR [rax],al
   14002159f:	add    BYTE PTR [rdi],ch
   1400215a1:	sbb    eax,0x50000
   1400215a6:	add    BYTE PTR [rax],al
   1400215a8:	cmp    ebx,DWORD PTR [rip+0x40000]        # 0x1400615ae
   1400215ae:	add    BYTE PTR [rax],al
   1400215b0:	jmp    0x1430215d2
   1400215b5:	add    BYTE PTR [rax],al
   1400215b7:	add    ch,dh
   1400215b9:	sbb    eax,0x20000
   1400215be:	add    BYTE PTR [rax],al
   1400215c0:	add    DWORD PTR [rsi],ebx
   1400215c2:	add    BYTE PTR [rax],al
   1400215c4:	(bad)  
   1400215c5:	(bad)  
   1400215c6:	(bad)  
   1400215c7:	jmp    QWORD PTR [rax+0x21]
   1400215cd:	add    BYTE PTR [rax],al
   1400215cf:	add    BYTE PTR [rcx],ah
   1400215d1:	add    BYTE PTR [rdx],al
   1400215d3:	add    BYTE PTR [rax],al
   1400215d5:	xor    al,0x4
   1400215d7:	add    al,al
   1400215d9:	and    al,BYTE PTR [rax]
   1400215db:	add    dh,ah
   1400215dd:	and    al,BYTE PTR [rax]
   1400215df:	add    BYTE PTR [rax],ah
   1400215e1:	add    al,BYTE PTR cs:[rax]
   1400215e4:	and    DWORD PTR [rip+0x34050002],eax        # 0x1740715ec
   1400215ea:	add    al,0x0
   1400215ec:	shl    BYTE PTR [rdx],0x0
   1400215ef:	add    dh,ah
   1400215f1:	and    al,BYTE PTR [rax]
   1400215f3:	add    BYTE PTR [rax],ah
   1400215f5:	add    al,BYTE PTR cs:[rax]
   1400215f8:	adc    DWORD PTR [rax],ebx
   1400215fa:	add    al,0x0
   1400215fc:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400215ff:	add    BYTE PTR [rdx],cl
   140021601:	push   rdx
   140021602:	(bad)  
   140021603:	jo     0x1400215d3
   140021605:	add    DWORD PTR ds:[rax],eax
   140021608:	add    cl,0x1
   14002160b:	add    bh,bh
   14002160d:	(bad)  
   14002160e:	(bad)  
   14002160f:	jmp    QWORD PTR [rax+0x4b]
   140021612:	add    DWORD PTR [rax],eax
   140021614:	add    BYTE PTR [rax],al
   140021616:	add    BYTE PTR [rax],al
   140021618:	or     BYTE PTR [rbx+0x1],0x0
   14002161c:	add    DWORD PTR [rax],eax
   14002161e:	add    BYTE PTR [rax],al
   140021620:	movabs al,ds:0xc00000000200014b
   140021629:	rex.WXB add QWORD PTR [r8],rax
   14002162c:	add    eax,DWORD PTR [rax]
   14002162e:	add    BYTE PTR [rax],al
   140021630:	loopne 0x14002167d
   140021632:	add    DWORD PTR [rax],eax
   140021634:	and    BYTE PTR [rbx],0x0
   140021637:	add    bh,bh
   140021639:	(bad)  
   14002163a:	(bad)  
   14002163b:	call   FWORD PTR [rbp+0x4000023]
   140021641:	add    BYTE PTR [rax],al
   140021643:	add    BYTE PTR [rax+0x3000023],ch
   140021649:	add    BYTE PTR [rax],al
   14002164b:	add    BYTE PTR [rbx+0x2000023],dh
   140021651:	add    BYTE PTR [rax],al
   140021653:	add    BYTE PTR [rsi+0x1000023],bh
   140021659:	add    BYTE PTR [rax],al
   14002165b:	add    cl,cl
   14002165d:	and    eax,DWORD PTR [rax]
   14002165f:	add    BYTE PTR [rax],al
   140021661:	add    BYTE PTR [rax],al
   140021663:	add    ah,dl
   140021665:	and    eax,DWORD PTR [rax]
   140021667:	add    bh,bh
   140021669:	(bad)  
   14002166a:	(bad)  
   14002166b:	call   FWORD PTR [rcx]
   14002166d:	cs (bad) 
   14002166f:	add    BYTE PTR [rsp+rsi*1],bl
   140021672:	and    al,0x0
   140021674:	or     eax,DWORD PTR [rcx]
   140021676:	(bad)  
   140021677:	add    BYTE PTR [rax+rsi*2],al
   14002167a:	add    esp,DWORD PTR [rax+0x2]
   14002167d:	push   rax
   14002167e:	add    BYTE PTR [rax],al
   140021680:	push   rax
   140021681:	(bad)  
   140021682:	add    DWORD PTR [rax],eax
   140021684:	mov    al,0xc1
   140021686:	add    DWORD PTR [rax],eax
   140021688:	loop   0x14002168a
   14002168a:	add    BYTE PTR [rax],al
   14002168c:	(bad)  
   14002168d:	(bad)  
   14002168e:	(bad)  
   14002168f:	inc    DWORD PTR [rax]
   140021691:	add    QWORD PTR [rax],r8
   140021694:	add    BYTE PTR [rax],al
   140021696:	add    BYTE PTR [rax],al
   140021698:	and    BYTE PTR [rcx+rax*1+0x0],cl
   14002169c:	(bad)  
   14002169d:	(bad)  
   14002169e:	(bad)  
   14002169f:	jmp    QWORD PTR [rax]
   1400216a1:	add    QWORD PTR [rax],r8
   1400216a4:	add    al,BYTE PTR [rax]
   1400216a6:	add    BYTE PTR [rax],al
   1400216a8:	rex
   1400216a9:	add    QWORD PTR [rax],r8
   1400216ac:	add    eax,DWORD PTR [rax]
   1400216ae:	add    BYTE PTR [rax],al
   1400216b0:	(bad)  
   1400216b1:	add    QWORD PTR [rax],r8
   1400216b4:	add    al,0x0
   1400216b6:	add    BYTE PTR [rax],al
   1400216b8:	or     BYTE PTR [rcx+rax*1+0x0],0x4
   1400216bd:	add    BYTE PTR [rax],al
   1400216bf:	add    BYTE PTR [rax+0x400014c],ah
   1400216c5:	add    BYTE PTR [rax],al
   1400216c7:	add    al,al
   1400216c9:	add    QWORD PTR [rax],r8
   1400216cc:	add    al,0x0
   1400216ce:	add    BYTE PTR [rax],al
   1400216d0:	loopne 0x14002171e
   1400216d2:	add    DWORD PTR [rax],eax
   1400216d4:	add    BYTE PTR [rax+rax*1],ah
   1400216d7:	add    bh,bh
   1400216d9:	(bad)  
   1400216da:	(bad)  
   1400216db:	jmp    QWORD PTR [rbx+0x24]
   1400216de:	add    BYTE PTR [rax],al
   1400216e0:	add    BYTE PTR [rax],al
   1400216e2:	add    BYTE PTR [rax],al
   1400216e4:	je     0x14002170a
   1400216e6:	add    BYTE PTR [rax],al
   1400216e8:	add    al,BYTE PTR [rax]
   1400216ea:	add    BYTE PTR [rax],al
   1400216ec:	shl    DWORD PTR [rax+rax*1],1
   1400216ef:	add    bh,bh
   1400216f1:	(bad)  
   1400216f2:	(bad)  
   1400216f3:	jmp    rcx
   1400216f5:	and    al,0x0
   1400216f7:	add    BYTE PTR [rdx],al
   1400216f9:	add    BYTE PTR [rax],al
   1400216fb:	add    dl,dh
   1400216fd:	and    al,0x0
   1400216ff:	add    BYTE PTR [rbx],al
   140021701:	add    BYTE PTR [rax],al
   140021703:	add    dh,bh
   140021705:	and    al,0x0
   140021707:	add    BYTE PTR [rax+rax*1],al
   14002170a:	add    BYTE PTR [rax],al
   14002170c:	es and eax,0x50000
   140021712:	add    BYTE PTR [rax],al
   140021714:	cmp    ah,BYTE PTR [rip+0x40000]        # 0x14006171a
   14002171a:	add    BYTE PTR [rax],al
   14002171c:	ins    DWORD PTR es:[rdi],dx
   14002171d:	and    eax,0x60000
   140021722:	add    BYTE PTR [rax],al
   140021724:	and    DWORD PTR [rip+0x40000],0x25b40000        # 0x14006172e
   14002172e:	add    BYTE PTR [rax],al
   140021730:	(bad)  
   140021731:	add    BYTE PTR [rax],al
   140021733:	add    al,cl
   140021735:	and    eax,0x40000
   14002173a:	add    BYTE PTR [rax],al
   14002173c:	loop   0x140021763
   14002173e:	add    BYTE PTR [rax],al
   140021740:	or     BYTE PTR [rax],al
   140021742:	add    BYTE PTR [rax],al
   140021744:	jmp    QWORD PTR [rip+0x40000]        # 0x14006174a
   14002174a:	add    BYTE PTR [rax],al
   14002174c:	mov    ah,BYTE PTR [rsi]
   14002174e:	add    BYTE PTR [rax],al
   140021750:	add    eax,DWORD PTR [rax]
   140021752:	add    BYTE PTR [rax],al
   140021754:	xchg   esi,eax
   140021755:	add    BYTE PTR es:[rax],al
   140021758:	add    al,BYTE PTR [rax]
   14002175a:	add    BYTE PTR [rax],al
   14002175c:	movabs ds:0x21ffffffff000026,al
   140021765:	add    BYTE PTR [rax],al
   140021767:	add    BYTE PTR [rax-0x62ffffd8],al
   14002176d:	sub    BYTE PTR [rax],al
   14002176f:	add    BYTE PTR [rax],ah
   140021771:	add    al,BYTE PTR cs:[rax]
   140021774:	and    DWORD PTR [rsi],edx
   140021776:	(bad)  
   140021777:	add    BYTE PTR [rsi],dl
   140021779:	je     0x14002177f
   14002177b:	add    BYTE PTR [rdx],cl
   14002177d:	fs (bad) 
   14002177f:	add    BYTE PTR [rip+0xffffffff80000634],al        # 0xc0021db9
   140021785:	sub    BYTE PTR [rax],al
   140021787:	add    BYTE PTR [rbp+0x20000028],bl
   14002178d:	add    al,BYTE PTR cs:[rax]
   140021790:	adc    DWORD PTR [rcx],ebx
   140021792:	(bad)  
   140021793:	add    BYTE PTR [rcx],bl
   140021795:	or     eax,DWORD PTR fs:[rax]
   140021798:	adc    al,0x34
   14002179a:	or     BYTE PTR [rax],al
   14002179c:	(bad)  
   14002179d:	push   rdx
   14002179e:	add    dh,BYTE PTR [rax-0x32]
   1400217a1:	add    DWORD PTR ds:[rax],eax
   1400217a4:	rol    dl,1
   1400217a6:	add    DWORD PTR [rax],eax
   1400217a8:	(bad)  
   1400217a9:	(bad)  
   1400217aa:	(bad)  
   1400217ab:	inc    DWORD PTR [rax]
   1400217ad:	add    QWORD PTR [r8],r8
   1400217b0:	lock sub DWORD PTR [rax],eax
   1400217b3:	add    bh,bh
   1400217b5:	(bad)  
   1400217b6:	(bad)  
   1400217b7:	call   FWORD PTR [rbx+0x2a]
   1400217ba:	add    BYTE PTR [rax],al
   1400217bc:	add    BYTE PTR [rax],al
   1400217be:	add    BYTE PTR [rax],al
   1400217c0:	ret    0x2a
   1400217c3:	add    bh,bh
   1400217c5:	(bad)  
   1400217c6:	(bad)  
   1400217c7:	call   QWORD PTR [rcx]
   1400217c9:	adc    eax,DWORD PTR [rdx]
   1400217cb:	add    BYTE PTR [rdx],cl
   1400217cd:	push   rdx
   1400217ce:	(bad)  
   1400217cf:	xor    dh,cl
   1400217d1:	add    DWORD PTR ds:[rax],eax
   1400217d4:	adc    bl,al
   1400217d6:	add    DWORD PTR [rax],eax
   1400217d8:	jo     0x140021805
   1400217da:	add    BYTE PTR [rax],al
   1400217dc:	(bad)  
   1400217dd:	(bad)  
   1400217de:	(bad)  
   1400217df:	inc    DWORD PTR [rsi+0x300002b]
   1400217e5:	add    BYTE PTR [rax],al
   1400217e7:	add    BYTE PTR [rcx+0x200002b],dl
   1400217ed:	add    BYTE PTR [rax],al
   1400217ef:	add    BYTE PTR [rbx+0x100002b],bl
   1400217f5:	add    BYTE PTR [rax],al
   1400217f7:	add    BYTE PTR [rsi+0x2b],ah
   1400217fd:	add    BYTE PTR [rax],al
   1400217ff:	add    BYTE PTR [rcx-0xffffd5],dh
   140021805:	(bad)  
   140021806:	(bad)  
   140021807:	call   QWORD PTR [rcx]
   140021809:	sbb    DWORD PTR [rax],ecx
   14002180b:	add    BYTE PTR [rax],dl
   14002180d:	add    DWORD PTR [rdi],edx
   14002180f:	add    BYTE PTR [rcx],cl
   140021811:	rol    BYTE PTR [rdi],1
   140021813:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143621c8a
   14002181a:	add    dh,BYTE PTR [rax]
   14002181c:	(bad)  
   14002181d:	add    DWORD PTR ds:[rax],eax
   140021820:	rex ret 
   140021822:	add    DWORD PTR [rax],eax
   140021824:	(bad)  
   140021825:	(bad)  
   140021826:	(bad)  
   140021827:	jmp    QWORD PTR [rax+0x14d]
   14002182d:	add    BYTE PTR [rax],al
   14002182f:	add    al,al
   140021831:	add    QWORD PTR [r8],r8
   140021834:	add    DWORD PTR [rax],eax
   140021836:	add    BYTE PTR [rax],al
   140021838:	loopne 0x140021887
   14002183a:	add    DWORD PTR [rax],eax
   14002183c:	add    al,BYTE PTR [rax]
   14002183e:	add    BYTE PTR [rax],al
   140021840:	add    BYTE PTR [rsi+0x1],cl
   140021843:	add    BYTE PTR [rbx],al
   140021845:	add    BYTE PTR [rax],al
   140021847:	add    BYTE PTR [rax],ah
   140021849:	rex.WRX add QWORD PTR [rax],r8
   14002184c:	add    al,0x0
   14002184e:	add    BYTE PTR [rax],al
   140021850:	rex
   140021851:	rex.WRX add QWORD PTR [rax],r8
   140021854:	add    al,0x0
   140021856:	add    BYTE PTR [rax],al
   140021858:	(bad)  
   140021859:	rex.WRX add QWORD PTR [rax],r8
   14002185c:	(bad)  
   14002185d:	add    BYTE PTR [rax],al
   14002185f:	add    BYTE PTR [rax+0x700014e],al
   140021865:	add    BYTE PTR [rax],al
   140021867:	add    BYTE PTR [rax+0x800014e],ah
   14002186d:	add    BYTE PTR [rax],al
   14002186f:	add    al,al
   140021871:	rex.WRX add QWORD PTR [rax],r8
   140021874:	shr    BYTE PTR [rbx],1
   140021876:	add    BYTE PTR [rax],al
   140021878:	(bad)  
   140021879:	(bad)  
   14002187a:	(bad)  
   14002187b:	call   QWORD PTR [rdi]
   14002187d:	sub    al,0x0
   14002187f:	add    BYTE PTR [rax],al
   140021881:	add    BYTE PTR [rax],al
   140021883:	add    BYTE PTR [rcx],ch
   140021885:	sub    al,0x0
   140021887:	add    BYTE PTR [rcx],al
   140021889:	add    BYTE PTR [rax],al
   14002188b:	add    BYTE PTR [rdi],bh
   14002188d:	sub    al,0x0
   14002188f:	add    BYTE PTR [rdx],al
   140021891:	add    BYTE PTR [rax],al
   140021893:	add    BYTE PTR [rbp+0x2c],dl
   140021896:	add    BYTE PTR [rax],al
   140021898:	add    eax,DWORD PTR [rax]
   14002189a:	add    BYTE PTR [rax],al
   14002189c:	imul   ebp,DWORD PTR [rax+rax*1],0x0
   1400218a0:	add    al,0x0
   1400218a2:	add    BYTE PTR [rax],al
   1400218a4:	int    0x2c
   1400218a6:	add    BYTE PTR [rax],al
   1400218a8:	add    eax,0xdb000000
   1400218ad:	sub    al,0x0
   1400218af:	add    BYTE PTR [rcx],cl
   1400218b1:	add    BYTE PTR [rax],al
   1400218b3:	add    dl,ch
   1400218b5:	sub    al,0x0
   1400218b7:	add    BYTE PTR [rax],cl
   1400218b9:	add    BYTE PTR [rax],al
   1400218bb:	add    al,bh
   1400218bd:	sub    al,0x0
   1400218bf:	add    BYTE PTR [rdi],al
   1400218c1:	add    BYTE PTR [rax],al
   1400218c3:	add    BYTE PTR [rbp*1+0x60000],al
   1400218ca:	add    BYTE PTR [rax],al
   1400218cc:	adc    BYTE PTR [rip+0x40000],ch        # 0x1400618d2
   1400218d2:	add    BYTE PTR [rax],al
   1400218d4:	sbb    al,0x2d
   1400218d6:	add    BYTE PTR [rax],al
   1400218d8:	add    eax,DWORD PTR [rax]
   1400218da:	add    BYTE PTR [rax],al
   1400218dc:	sub    ebp,DWORD PTR [rip+0x20000]        # 0x1400418e2
   1400218e2:	add    BYTE PTR [rax],al
   1400218e4:	cmp    ch,BYTE PTR [rip+0x10000]        # 0x1400318ea
   1400218ea:	add    BYTE PTR [rax],al
   1400218ec:	rex.WB sub rax,0x0
   1400218f2:	add    BYTE PTR [rax],al
   1400218f4:	push   rbp
   1400218f5:	sub    eax,0xffff0000
   1400218fa:	(bad)  
   1400218fb:	call   QWORD PTR [rcx]
   1400218fd:	sbb    DWORD PTR [rsi],eax
   1400218ff:	add    BYTE PTR [rcx],bl
   140021901:	fs (bad) 
   140021903:	add    BYTE PTR [rsp+rsi*1],dl
   140021906:	or     eax,0x2920600
   14002190b:	jo     0x1400218db
   14002190d:	add    DWORD PTR ds:[rax],eax
   140021910:	jo     0x1400218d5
   140021912:	add    DWORD PTR [rax],eax
   140021914:	(bad)  
   140021915:	(bad)  
   140021916:	(bad)  
   140021917:	jmp    rax
   140021919:	rex.WRX add QWORD PTR [rax],r8
   14002191c:	(bad)  
   14002191d:	(bad)  
   14002191e:	(bad)  
   14002191f:	inc    DWORD PTR [rax]
   140021921:	rex.WRXB add QWORD PTR [r8],r8
   140021924:	(bad)  
   140021925:	(bad)  
   140021926:	(bad)  
   140021927:	jmp    QWORD PTR [rax]
   140021929:	rex.WRXB add QWORD PTR [r8],r8
   14002192c:	(bad)  
   14002192d:	(bad)  
   14002192e:	(bad)  
   14002192f:	inc    DWORD PTR [rax+0x4f]
   140021932:	add    DWORD PTR [rax],eax
   140021934:	(bad)  
   140021935:	(bad)  
   140021936:	(bad)  
   140021937:	jmp    QWORD PTR [rax+0x4f]
   14002193a:	add    DWORD PTR [rax],eax
   14002193c:	add    al,0x0
   14002193e:	add    BYTE PTR [rax],al
   140021940:	nop
   140021941:	rex.WRXB add QWORD PTR [r8],r8
   140021944:	add    eax,0xc0000000
   140021949:	rex.WRXB add QWORD PTR [r8],r8
   14002194c:	(bad)  
   14002194d:	add    BYTE PTR [rax],al
   14002194f:	add    al,dh
   140021951:	rex.WRXB add QWORD PTR [r8],r8
   140021954:	(bad)  
   140021955:	add    BYTE PTR [rax],al
   140021957:	add    BYTE PTR [rax],ah
   140021959:	push   rax
   14002195a:	add    DWORD PTR [rax],eax
   14002195c:	(bad)  
   14002195d:	(bad)  
   14002195e:	(bad)  
   14002195f:	call   QWORD PTR [rax+0x50]
   140021962:	add    DWORD PTR [rax],eax
   140021964:	adc    BYTE PTR [rsi],ch
   140021966:	add    BYTE PTR [rax],al
   140021968:	(bad)  
   140021969:	(bad)  
   14002196a:	(bad)  
   14002196b:	call   FWORD PTR [rdi+0x2e]
   14002196e:	add    BYTE PTR [rax],al
   140021970:	add    BYTE PTR [rax],al
   140021972:	add    BYTE PTR [rax],al
   140021974:	jo     0x1400219a4
   140021976:	add    BYTE PTR [rax],al
   140021978:	(bad)  
   140021979:	(bad)  
   14002197a:	(bad)  
   14002197b:	push   QWORD PTR [rsi+rbp*1+0x10000]
   140021982:	add    BYTE PTR [rax],al
   140021984:	out    0x2e,al
   140021986:	add    BYTE PTR [rax],al
   140021988:	(bad)  
   140021989:	(bad)  
   14002198a:	(bad)  
   14002198b:	jmp    QWORD PTR [rdx]
   14002198d:	(bad)  
   14002198e:	add    BYTE PTR [rax],al
   140021990:	add    al,BYTE PTR [rax]
   140021992:	add    BYTE PTR [rax],al
   140021994:	rex.WRX (bad) 
   140021996:	add    BYTE PTR [rax],al
   140021998:	(bad)  
   140021999:	(bad)  
   14002199a:	(bad)  
   14002199b:	inc    DWORD PTR [rsi+0x300002f]
   1400219a1:	add    BYTE PTR [rax],al
   1400219a3:	add    BYTE PTR [rdi-0xffffd1],dl
   1400219a9:	(bad)  
   1400219aa:	(bad)  
   1400219ab:	(bad)  
   1400219ac:	fld    TBYTE PTR [rdi]
   1400219ae:	add    BYTE PTR [rax],al
   1400219b0:	add    al,0x0
   1400219b2:	add    BYTE PTR [rax],al
   1400219b4:	cld    
   1400219b5:	(bad)  
   1400219b6:	add    BYTE PTR [rax],al
   1400219b8:	add    eax,0x3a000000
   1400219bd:	xor    BYTE PTR [rax],al
   1400219bf:	add    BYTE PTR [rsi],al
   1400219c1:	add    BYTE PTR [rax],al
   1400219c3:	add    BYTE PTR [rdx+0x30],ch
   1400219c6:	add    BYTE PTR [rax],al
   1400219c8:	(bad)  
   1400219c9:	add    BYTE PTR [rax],al
   1400219cb:	add    BYTE PTR [rbx+0x8000030],cl
   1400219d1:	add    BYTE PTR [rax],al
   1400219d3:	add    BYTE PTR [rsi+0x7000030],ch
   1400219d9:	add    BYTE PTR [rax],al
   1400219db:	add    bh,al
   1400219dd:	xor    BYTE PTR [rax],al
   1400219df:	add    BYTE PTR [rsi],al
   1400219e1:	add    BYTE PTR [rax],al
   1400219e3:	add    al,ah
   1400219e5:	xor    BYTE PTR [rax],al
   1400219e7:	add    BYTE PTR [rip+0xfffffffff9000000],al        # 0x1390219ed
   1400219ed:	xor    BYTE PTR [rax],al
   1400219ef:	add    BYTE PTR [rax+rax*1],al
   1400219f2:	add    BYTE PTR [rax],al
   1400219f4:	adc    dh,BYTE PTR [rcx]
   1400219f6:	add    BYTE PTR [rax],al
   1400219f8:	(bad)  
   1400219f9:	(bad)  
   1400219fa:	(bad)  
   1400219fb:	call   QWORD PTR [rcx+rsi*1+0x0]
   1400219ff:	add    BYTE PTR [rcx],cl
   140021a01:	add    BYTE PTR [rax],al
   140021a03:	add    BYTE PTR [rbp-0xffffcf],al
   140021a09:	(bad)  
   140021a0a:	(bad)  
   140021a0b:	call   QWORD PTR [rcx]
   140021a0d:	(bad)  
   140021a0e:	or     BYTE PTR [rax],al
   140021a10:	(bad)  
   140021a11:	fs or  eax,0xc541900
   140021a17:	add    BYTE PTR [rsp+rsi*1],dl
   140021a1a:	or     eax,DWORD PTR [rax]
   140021a1c:	(bad)  
   140021a1d:	jb     0x140021a21
   140021a1f:	jo     0x1400219ef
   140021a21:	add    DWORD PTR ds:[rax],eax
   140021a24:	rol    bl,1
   140021a26:	add    DWORD PTR [rax],eax
   140021a28:	(bad)  
   140021a29:	(bad)  
   140021a2a:	(bad)  
   140021a2b:	push   QWORD PTR [rax+0x50]
   140021a2e:	add    DWORD PTR [rax],eax
   140021a30:	add    BYTE PTR [rax],al
   140021a32:	add    BYTE PTR [rax],al
   140021a34:	nop
   140021a35:	push   rax
   140021a36:	add    DWORD PTR [rax],eax
   140021a38:	add    DWORD PTR [rax],eax
   140021a3a:	add    BYTE PTR [rax],al
   140021a3c:	mov    al,0x50
   140021a3e:	add    DWORD PTR [rax],eax
   140021a40:	(bad)  
   140021a41:	(bad)  
   140021a42:	(bad)  
   140021a43:	call   rax
   140021a45:	push   rax
   140021a46:	add    DWORD PTR [rax],eax
   140021a48:	(bad)  
   140021a49:	(bad)  
   140021a4a:	(bad)  
   140021a4b:	push   rax
   140021a4d:	push   rax
   140021a4e:	add    DWORD PTR [rax],eax
   140021a50:	(bad)  
   140021a51:	(bad)  
   140021a52:	(bad)  
   140021a53:	jmp    QWORD PTR [rax]
   140021a55:	push   rcx
   140021a56:	add    DWORD PTR [rax],eax
   140021a58:	shl    BYTE PTR [rcx],1
   140021a5a:	add    BYTE PTR [rax],al
   140021a5c:	(bad)  
   140021a5d:	(bad)  
   140021a5e:	(bad)  
   140021a5f:	jmp    QWORD PTR [rdx+rsi*1]
   140021a62:	add    BYTE PTR [rax],al
   140021a64:	add    BYTE PTR [rax],al
   140021a66:	add    BYTE PTR [rax],al
   140021a68:	rex.WR xor r8b,BYTE PTR [rax]
   140021a6b:	add    BYTE PTR [rcx],al
   140021a6d:	add    BYTE PTR [rax],al
   140021a6f:	add    BYTE PTR [rdx+rsi*1+0x0],ah
   140021a73:	add    BYTE PTR [rdx],al
   140021a75:	add    BYTE PTR [rax],al
   140021a77:	add    BYTE PTR [rdi+0x32],dh
   140021a7a:	add    BYTE PTR [rax],al
   140021a7c:	add    DWORD PTR [rax],eax
   140021a7e:	add    BYTE PTR [rax],al
   140021a80:	xor    DWORD PTR [rdx],0x0
   140021a83:	add    BYTE PTR [rax],al
   140021a85:	add    BYTE PTR [rax],al
   140021a87:	add    BYTE PTR [rdi-0xffffce],cl
   140021a8d:	(bad)  
   140021a8e:	(bad)  
   140021a8f:	inc    edx
   140021a91:	xor    al,BYTE PTR [rax]
   140021a93:	add    BYTE PTR [rbx],al
   140021a95:	add    BYTE PTR [rax],al
   140021a97:	add    bl,dl
   140021a99:	xor    al,BYTE PTR [rax]
   140021a9b:	add    bh,bh
   140021a9d:	(bad)  
   140021a9e:	(bad)  
   140021a9f:	push   QWORD PTR [rax]
   140021aa1:	xor    eax,DWORD PTR [rax]
   140021aa3:	add    BYTE PTR [rax+rax*1],al
   140021aa6:	add    BYTE PTR [rax],al
   140021aa8:	pop    rax
   140021aa9:	xor    eax,DWORD PTR [rax]
   140021aab:	add    bh,bh
   140021aad:	(bad)  
   140021aae:	(bad)  
   140021aaf:	jmp    QWORD PTR [rdx+0x5000033]
   140021ab5:	add    BYTE PTR [rax],al
   140021ab7:	add    BYTE PTR [rbx-0xffffcd],dh
   140021abd:	(bad)  
   140021abe:	(bad)  
   140021abf:	call   QWORD PTR [rcx]
   140021ac1:	sub    eax,0x342d000b
   140021ac6:	add    BYTE PTR [rip+0x16003c01],r11b        # 0x1560256ce
   140021acd:	lock adc al,0xe0
   140021ad0:	adc    dl,al
   140021ad2:	adc    al,al
   140021ad4:	(bad)  
   140021ad5:	jo     0x140021ae4
   140021ad7:	(bad)  
   140021ad8:	or     al,0x50
   140021ada:	add    BYTE PTR [rax],al
   140021adc:	(bad)  
   140021add:	add    DWORD PTR ds:[rax],eax
   140021ae0:	adc    ah,al
   140021ae2:	add    DWORD PTR [rax],eax
   140021ae4:	(bad)  
   140021ae5:	(bad)  
   140021ae6:	(bad)  
   140021ae7:	inc    DWORD PTR [rax+0x51]
   140021aea:	add    DWORD PTR [rax],eax
   140021aec:	add    BYTE PTR [rax],al
   140021aee:	add    BYTE PTR [rax],al
   140021af0:	(bad)  
   140021af1:	push   rcx
   140021af2:	add    DWORD PTR [rax],eax
   140021af4:	add    DWORD PTR [rax],eax
   140021af6:	add    BYTE PTR [rax],al
   140021af8:	adc    BYTE PTR [rcx+0x1],0x0
   140021afc:	add    al,BYTE PTR [rax]
   140021afe:	add    BYTE PTR [rax],al
   140021b00:	movabs al,ds:0xc000000003000151
   140021b09:	push   rcx
   140021b0a:	add    DWORD PTR [rax],eax
   140021b0c:	add    al,0x0
   140021b0e:	add    BYTE PTR [rax],al
   140021b10:	loopne 0x140021b63
   140021b12:	add    DWORD PTR [rax],eax
   140021b14:	add    eax,0x0
   140021b19:	push   rdx
   140021b1a:	add    DWORD PTR [rax],eax
   140021b1c:	add    eax,0x30000000
   140021b21:	push   rdx
   140021b22:	add    DWORD PTR [rax],eax
   140021b24:	add    eax,0x50000000
   140021b29:	push   rdx
   140021b2a:	add    DWORD PTR [rax],eax
   140021b2c:	or     BYTE PTR [rax],al
   140021b2e:	add    BYTE PTR [rax],al
   140021b30:	jo     0x140021b84
   140021b32:	add    DWORD PTR [rax],eax
   140021b34:	or     DWORD PTR [rax],eax
   140021b36:	add    BYTE PTR [rax],al
   140021b38:	nop
   140021b39:	push   rdx
   140021b3a:	add    DWORD PTR [rax],eax
   140021b3c:	or     DWORD PTR [rax],eax
   140021b3e:	add    BYTE PTR [rax],al
   140021b40:	mov    al,0x52
   140021b42:	add    DWORD PTR [rax],eax
   140021b44:	or     eax,DWORD PTR [rax]
   140021b46:	add    BYTE PTR [rax],al
   140021b48:	rcl    BYTE PTR [rdx+0x1],1
   140021b4b:	add    BYTE PTR [rax+rax*1],cl
   140021b4e:	add    BYTE PTR [rax],al
   140021b50:	lock push rdx
   140021b52:	add    DWORD PTR [rax],eax
   140021b54:	or     eax,0x10000000
   140021b59:	push   rbx
   140021b5a:	add    DWORD PTR [rax],eax
   140021b5c:	add    eax,0x30000000
   140021b61:	push   rbx
   140021b62:	add    DWORD PTR [rax],eax
   140021b64:	sldt   WORD PTR [rax]
   140021b67:	add    BYTE PTR [rax+0x53],dl
   140021b6a:	add    DWORD PTR [rax],eax
   140021b6c:	adc    BYTE PTR [rax],al
   140021b6e:	add    BYTE PTR [rax],al
   140021b70:	jo     0x140021bc5
   140021b72:	add    DWORD PTR [rax],eax
   140021b74:	adc    BYTE PTR [rax],al
   140021b76:	add    BYTE PTR [rax],al
   140021b78:	nop
   140021b79:	push   rbx
   140021b7a:	add    DWORD PTR [rax],eax
   140021b7c:	adc    al,BYTE PTR [rax]
   140021b7e:	add    BYTE PTR [rax],al
   140021b80:	mov    al,0x53
   140021b82:	add    DWORD PTR [rax],eax
   140021b84:	adc    eax,DWORD PTR [rax]
   140021b86:	add    BYTE PTR [rax],al
   140021b88:	rcl    BYTE PTR [rbx+0x1],1
   140021b8b:	add    BYTE PTR [rax+rax*1],dl
   140021b8e:	add    BYTE PTR [rax],al
   140021b90:	lock push rbx
   140021b92:	add    DWORD PTR [rax],eax
   140021b94:	add    eax,0x10000000
   140021b99:	push   rsp
   140021b9a:	add    DWORD PTR [rax],eax
   140021b9c:	add    eax,0x30000000
   140021ba1:	push   rsp
   140021ba2:	add    DWORD PTR [rax],eax
   140021ba4:	(bad)  
   140021ba5:	add    BYTE PTR [rax],al
   140021ba7:	add    BYTE PTR [rax+0x54],dl
   140021baa:	add    DWORD PTR [rax],eax
   140021bac:	sbb    BYTE PTR [rax],al
   140021bae:	add    BYTE PTR [rax],al
   140021bb0:	jo     0x140021c06
   140021bb2:	add    DWORD PTR [rax],eax
   140021bb4:	sbb    BYTE PTR [rax],al
   140021bb6:	add    BYTE PTR [rax],al
   140021bb8:	nop
   140021bb9:	push   rsp
   140021bba:	add    DWORD PTR [rax],eax
   140021bbc:	sbb    al,BYTE PTR [rax]
   140021bbe:	add    BYTE PTR [rax],al
   140021bc0:	mov    al,0x54
   140021bc2:	add    DWORD PTR [rax],eax
   140021bc4:	sbb    eax,DWORD PTR [rax]
   140021bc6:	add    BYTE PTR [rax],al
   140021bc8:	rcl    BYTE PTR [rcx+rax*1+0x0],1
   140021bcc:	sbb    al,0x0
   140021bce:	add    BYTE PTR [rax],al
   140021bd0:	lock push rsp
   140021bd2:	add    DWORD PTR [rax],eax
   140021bd4:	add    BYTE PTR [rax+rax*1],dh
   140021bd7:	add    bh,bh
   140021bd9:	(bad)  
   140021bda:	(bad)  
   140021bdb:	dec    DWORD PTR [rcx+0x34]
   140021bde:	add    BYTE PTR [rax],al
   140021be0:	add    BYTE PTR [rax],al
   140021be2:	add    BYTE PTR [rax],al
   140021be4:	push   rbp
   140021be5:	xor    al,0x0
   140021be7:	add    BYTE PTR [rcx],al
   140021be9:	add    BYTE PTR [rax],al
   140021beb:	add    BYTE PTR [rcx+0x34],ah
   140021bee:	add    BYTE PTR [rax],al
   140021bf0:	add    al,BYTE PTR [rax]
   140021bf2:	add    BYTE PTR [rax],al
   140021bf4:	ins    DWORD PTR es:[rdi],dx
   140021bf5:	xor    al,0x0
   140021bf7:	add    BYTE PTR [rbx],al
   140021bf9:	add    BYTE PTR [rax],al
   140021bfb:	add    BYTE PTR [rsi+0x4000034],al
   140021c01:	add    BYTE PTR [rax],al
   140021c03:	add    BYTE PTR [rdx+0x5000034],dl
   140021c09:	add    BYTE PTR [rax],al
   140021c0b:	add    al,cl
   140021c0d:	xor    al,0x0
   140021c0f:	add    BYTE PTR [rax],al
   140021c11:	add    BYTE PTR [rax],al
   140021c13:	add    dl,cl
   140021c15:	xor    al,0x0
   140021c17:	add    BYTE PTR [rip+0x1b000000],al        # 0x15b021c1d
   140021c1d:	xor    eax,0x60000
   140021c22:	add    BYTE PTR [rax],al
   140021c24:	push   rdi
   140021c25:	xor    eax,0x50000
   140021c2a:	add    BYTE PTR [rax],al
   140021c2c:	(bad)  
   140021c2d:	cmp    BYTE PTR [rax],al
   140021c2f:	add    BYTE PTR [rdi],al
   140021c31:	add    BYTE PTR [rax],al
   140021c33:	add    BYTE PTR [rcx+rdi*1],dl
   140021c36:	add    BYTE PTR [rax],al
   140021c38:	add    eax,0x61000000
   140021c3d:	cmp    DWORD PTR [rax],eax
   140021c3f:	add    BYTE PTR [rax],cl
   140021c41:	add    BYTE PTR [rax],al
   140021c43:	add    BYTE PTR [rax+0x39],dh
   140021c46:	add    BYTE PTR [rax],al
   140021c48:	or     DWORD PTR [rax],eax
   140021c4a:	add    BYTE PTR [rax],al
   140021c4c:	in     al,0x39
   140021c4e:	add    BYTE PTR [rax],al
   140021c50:	or     al,BYTE PTR [rax]
   140021c52:	add    BYTE PTR [rax],al
   140021c54:	lock cmp DWORD PTR [rax],eax
   140021c57:	add    BYTE PTR [rsi],cl
   140021c59:	add    BYTE PTR [rax],al
   140021c5b:	add    bh,bh
   140021c5d:	cmp    DWORD PTR [rax],eax
   140021c5f:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d021c65
   140021c65:	cmp    al,BYTE PTR [rax]
   140021c67:	add    BYTE PTR [rax+rax*1],cl
   140021c6a:	add    BYTE PTR [rax],al
   140021c6c:	sbb    al,0x3a
   140021c6e:	add    BYTE PTR [rax],al
   140021c70:	or     eax,DWORD PTR [rax]
   140021c72:	add    BYTE PTR [rax],al
   140021c74:	sub    edi,DWORD PTR [rdx]
   140021c76:	add    BYTE PTR [rax],al
   140021c78:	or     DWORD PTR [rax],eax
   140021c7a:	add    BYTE PTR [rax],al
   140021c7c:	cmp    bh,BYTE PTR [rdx]
   140021c7e:	add    BYTE PTR [rax],al
   140021c80:	or     BYTE PTR [rax],al
   140021c82:	add    BYTE PTR [rax],al
   140021c84:	lods   al,BYTE PTR ds:[rsi]
   140021c85:	cmp    al,BYTE PTR [rax]
   140021c87:	add    BYTE PTR [rip+0xffffffff9d000000],al        # 0xdd021c8d
   140021c8d:	cmp    al,0x0
   140021c8f:	add    BYTE PTR [rdi],cl
   140021c91:	add    BYTE PTR [rax],al
   140021c93:	add    BYTE PTR [rcx+0x1000003c],ch
   140021c99:	add    BYTE PTR [rax],al
   140021c9b:	add    BYTE PTR [rdx],bl
   140021c9d:	cmp    eax,0x110000
   140021ca2:	add    BYTE PTR [rax],al
   140021ca4:	es cmp eax,0x150000
   140021caa:	add    BYTE PTR [rax],al
   140021cac:	xor    eax,0x1400003d
   140021cb1:	add    BYTE PTR [rax],al
   140021cb3:	add    BYTE PTR [rbx+0x3d],al
   140021cb6:	add    BYTE PTR [rax],al
   140021cb8:	adc    eax,DWORD PTR [rax]
   140021cba:	add    BYTE PTR [rax],al
   140021cbc:	push   rdx
   140021cbd:	cmp    eax,0x120000
   140021cc2:	add    BYTE PTR [rax],al
   140021cc4:	(bad)  
   140021cc5:	cmp    eax,0x100000
   140021cca:	add    BYTE PTR [rax],al
   140021ccc:	jo     0x140021d0b
   140021cce:	add    BYTE PTR [rax],al
   140021cd0:	sldt   WORD PTR [rax]
   140021cd3:	add    ah,bl
   140021cd5:	cmp    eax,0x50000
   140021cda:	add    BYTE PTR [rax],al
   140021cdc:	mov    esp,0x1600003e
   140021ce1:	add    BYTE PTR [rax],al
   140021ce3:	add    dl,dl
   140021ce5:	add    BYTE PTR ds:[rax],al
   140021ce8:	add    eax,0x7f000000
   140021ced:	(bad)  
   140021cee:	add    BYTE PTR [rax],al
   140021cf0:	(bad)  
   140021cf1:	add    BYTE PTR [rax],al
   140021cf3:	add    BYTE PTR [rsi+0x1800003f],cl
   140021cf9:	add    BYTE PTR [rax],al
   140021cfb:	add    al,bh
   140021cfd:	(bad)  
   140021cfe:	add    BYTE PTR [rax],al
   140021d00:	sbb    DWORD PTR [rax],eax
   140021d02:	add    BYTE PTR [rax],al
   140021d04:	add    al,0x40
   140021d06:	add    BYTE PTR [rax],al
   140021d08:	sbb    eax,0x13000000
   140021d0d:	add    BYTE PTR [rax],al
   140021d10:	sbb    al,0x0
   140021d12:	add    BYTE PTR [rax],al
   140021d14:	and    DWORD PTR [rax+0x0],eax
   140021d17:	add    BYTE PTR [rbx],bl
   140021d19:	add    BYTE PTR [rax],al
   140021d1b:	add    BYTE PTR [rax],dh
   140021d1d:	add    BYTE PTR [rax],al
   140021d20:	sbb    al,BYTE PTR [rax]
   140021d22:	add    BYTE PTR [rax],al
   140021d24:	(bad)  
   140021d25:	add    BYTE PTR [rax],al
   140021d28:	sbb    BYTE PTR [rax],al
   140021d2a:	add    BYTE PTR [rax],al
   140021d2c:	rex.WRX
   140021d2d:	add    BYTE PTR [rax],al
   140021d30:	(bad)  
   140021d31:	add    BYTE PTR [rax],al
   140021d33:	add    BYTE PTR [rbp+0x5000040],bh
   140021d39:	add    BYTE PTR [rax],al
   140021d3b:	add    BYTE PTR [rcx+0x41],al
   140021d3e:	add    BYTE PTR [rax],al
   140021d40:	add    al,0x0
   140021d42:	add    BYTE PTR [rax],al
   140021d44:	rex.WRB
   140021d45:	add    BYTE PTR [r8],al
   140021d48:	add    eax,DWORD PTR [rax]
   140021d4a:	add    BYTE PTR [rax],al
   140021d4c:	pop    rsp
   140021d4d:	add    BYTE PTR [r8],al
   140021d50:	add    al,BYTE PTR [rax]
   140021d52:	add    BYTE PTR [rax],al
   140021d54:	push   0x1000041
   140021d59:	add    BYTE PTR [rax],al
   140021d5b:	add    BYTE PTR [rcx+rax*2+0x0],dh
   140021d5f:	add    BYTE PTR [rax],al
   140021d61:	add    BYTE PTR [rax],al
   140021d63:	add    BYTE PTR [rax-0xffffbf],al
   140021d69:	(bad)  
   140021d6a:	(bad)  
   140021d6b:	inc    esp
   140021d6d:	add    BYTE PTR [r8],al
   140021d70:	add    BYTE PTR [rax],al
   140021d72:	add    BYTE PTR [rax],al
   140021d74:	sbb    DWORD PTR [rax],esp
   140021d76:	(bad)  
   140021d77:	add    BYTE PTR [rsi],cl
   140021d79:	add    DWORD PTR [rsi],edx
   140021d7b:	add    BYTE PTR [rdi],al
   140021d7d:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x1436221f4
   140021d84:	add    dh,BYTE PTR [rax]
   140021d86:	add    BYTE PTR [rax],al
   140021d88:	jl     0x140021dca
   140021d8a:	add    DWORD PTR [rax],eax
   140021d8c:	movabs al,ds:0xc00040c19000000
   140021d95:	xor    cl,BYTE PTR [rax]
   140021d97:	jo     0x140021da0
   140021d99:	push   rax
   140021d9a:	(bad)  
   140021d9b:	xor    dh,cl
   140021d9d:	add    DWORD PTR ds:[rax],eax
   140021da0:	push   rax
   140021da1:	retf   
   140021da2:	add    DWORD PTR [rax],eax
   140021da4:	sbb    DWORD PTR [rip+0x641d0006],ebx        # 0x1a41f1db0
   140021daa:	or     eax,DWORD PTR [rax]
   140021dac:	sbb    BYTE PTR [rax+rcx*1],dh
   140021daf:	add    BYTE PTR [rdx],cl
   140021db1:	push   rdx
   140021db2:	(bad)  
   140021db3:	jo     0x140021d83
   140021db5:	add    DWORD PTR ds:[rax],eax
   140021db8:	push   rax
   140021db9:	retf   
   140021dba:	add    DWORD PTR [rax],eax
   140021dbc:	add    al,BYTE PTR [rax]
   140021dbe:	add    BYTE PTR [rax],al
   140021dc0:	add    al,BYTE PTR [rax]
   140021dc2:	add    BYTE PTR [rax],al
   140021dc4:	add    eax,DWORD PTR [rax]
   140021dc6:	add    BYTE PTR [rax],al
   140021dc8:	add    DWORD PTR [rax],eax
   140021dca:	add    BYTE PTR [rax],al
   140021dcc:	rcr    BYTE PTR [rip+0x400002],1        # 0x140421dd4
	...
   140021dda:	add    BYTE PTR [rax],al
   140021ddc:	adc    BYTE PTR [rbp+0x1],dl
   140021ddf:	add    BYTE PTR [rax+0x0],cl
   140021de2:	add    BYTE PTR [rax],al
   140021de4:	(bad)  
   140021de5:	(bad)  
   140021de6:	(bad)  
   140021de7:	inc    DWORD PTR [rax]
   140021de9:	add    BYTE PTR [rax],al
   140021deb:	add    bh,bh
   140021ded:	(bad)  
   140021dee:	(bad)  
   140021def:	inc    DWORD PTR [rax]
   140021df1:	add    BYTE PTR [rax],al
   140021df3:	add    bh,bh
   140021df5:	(bad)  
   140021df6:	(bad)  
   140021df7:	inc    DWORD PTR [rax]
   140021df9:	add    BYTE PTR [rax],al
   140021dfb:	add    bh,bh
   140021dfd:	(bad)  
   140021dfe:	(bad)  
   140021dff:	inc    DWORD PTR [rax]
   140021e01:	add    BYTE PTR [rax],al
   140021e03:	add    al,dh
   140021e05:	rex.X add BYTE PTR [rax],al
   140021e08:	(bad)  
   140021e09:	(bad)  
   140021e0a:	(bad)  
   140021e0b:	jmp    QWORD PTR [rax]
   140021e0d:	rex.XB add BYTE PTR [r8],al
   140021e10:	add    al,BYTE PTR [rax]
   140021e12:	add    BYTE PTR [rax],al
   140021e14:	rex.RB
   140021e15:	rex.XB add BYTE PTR [r8],al
   140021e18:	(bad)  
   140021e19:	(bad)  
   140021e1a:	(bad)  
   140021e1b:	call   QWORD PTR [rax]
   140021e1d:	push   rbp
   140021e1e:	add    DWORD PTR [rax],eax
   140021e20:	add    BYTE PTR [rax],al
   140021e22:	add    BYTE PTR [rax],al
   140021e24:	(bad)  
   140021e25:	push   rbp
   140021e26:	add    DWORD PTR [rax],eax
   140021e28:	add    eax,DWORD PTR [rax]
   140021e2a:	add    BYTE PTR [rax],al
   140021e2c:	rex.WR push rbp
   140021e2e:	add    DWORD PTR [rax],eax
   140021e30:	add    BYTE PTR [rax],al
   140021e32:	add    BYTE PTR [rax],al
   140021e34:	sbb    DWORD PTR [rdx],ecx
   140021e36:	add    al,BYTE PTR [rax]
   140021e38:	or     dl,BYTE PTR [rdx+0x6]
   140021e3b:	push   rax
   140021e3c:	(bad)  
   140021e3d:	add    DWORD PTR ds:[rax],eax
   140021e40:	or     bl,0x1
   140021e43:	add    BYTE PTR [rcx],bl
   140021e45:	sbb    eax,0x641d0006
   140021e4a:	or     al,0x0
   140021e4c:	sbb    BYTE PTR [rbx+rcx*1],dh
   140021e4f:	add    BYTE PTR [rdx],cl
   140021e51:	jb     0x140021e59
   140021e53:	jo     0x140021e23
   140021e55:	add    DWORD PTR ds:[rax],eax
   140021e58:	or     bl,0x1
   140021e5b:	add    BYTE PTR [rcx],al
   140021e5d:	add    BYTE PTR [rax],al
   140021e5f:	add    BYTE PTR [rcx],al
   140021e61:	add    BYTE PTR [rax],al
   140021e63:	add    BYTE PTR [rdx],al
   140021e65:	add    BYTE PTR [rax],al
   140021e67:	add    BYTE PTR [rcx],al
   140021e69:	add    BYTE PTR [rax],al
   140021e6b:	add    BYTE PTR [rax+0x21e],bl
   140021e71:	add    BYTE PTR [rax],al
   140021e73:	add    BYTE PTR [rdx],al
   140021e75:	add    BYTE PTR [rax],al
   140021e77:	add    BYTE PTR [rbx],al
   140021e79:	add    BYTE PTR [rax],al
   140021e7b:	add    BYTE PTR [rcx],al
   140021e7d:	add    BYTE PTR [rax],al
   140021e7f:	add    BYTE PTR [rsi+rbx*1+0x400002],al
	...
   140021e8e:	add    BYTE PTR [rax],al
   140021e90:	nop
   140021e91:	push   rbp
   140021e92:	add    DWORD PTR [rax],eax
   140021e94:	rex.W add BYTE PTR [rax],al
   140021e97:	add    BYTE PTR [rax+0x0],al
	...
   140021ea2:	add    BYTE PTR [rax],al
   140021ea4:	(bad)  
   140021ea5:	push   rbp
   140021ea6:	add    DWORD PTR [rax],eax
   140021ea8:	rex.W add BYTE PTR [rax],al
   140021eab:	add    BYTE PTR [rax+0x43],ah
   140021eae:	add    BYTE PTR [rax],al
   140021eb0:	(bad)  
   140021eb1:	(bad)  
   140021eb2:	(bad)  
   140021eb3:	jmp    QWORD PTR [rbx+0x43]
   140021eb9:	add    BYTE PTR [rax],al
   140021ebb:	add    BYTE PTR [rsi+0x1000043],dh
   140021ec1:	add    BYTE PTR [rax],al
   140021ec3:	add    cl,cl
   140021ec5:	rex.XB add BYTE PTR [r8],al
   140021ec8:	(bad)  
   140021ec9:	(bad)  
   140021eca:	(bad)  
   140021ecb:	jmp    QWORD PTR [rax+0x55]
   140021ece:	add    DWORD PTR [rax],eax
   140021ed0:	add    BYTE PTR [rax],al
   140021ed2:	add    BYTE PTR [rax],al
   140021ed4:	ins    DWORD PTR es:[rdi],dx
   140021ed5:	push   rbp
   140021ed6:	add    DWORD PTR [rax],eax
   140021ed8:	add    al,BYTE PTR [rax]
   140021eda:	add    BYTE PTR [rax],al
   140021edc:	test   DWORD PTR [rbp+0x1],edx
   140021edf:	add    BYTE PTR [rax],al
   140021ee1:	add    BYTE PTR [rax],al
   140021ee3:	add    BYTE PTR [rbp+0x3000155],bl
   140021ee9:	add    BYTE PTR [rax],al
   140021eeb:	add    BYTE PTR [rbp+0x155],dh
   140021ef1:	add    BYTE PTR [rax],al
   140021ef3:	add    BYTE PTR [rcx],bl
   140021ef5:	or     al,BYTE PTR [rdx]
   140021ef7:	add    BYTE PTR [rdx],cl
   140021ef9:	xor    al,BYTE PTR [rsi]
   140021efb:	push   rax
   140021efc:	(bad)  
   140021efd:	add    DWORD PTR ds:[rax],eax
   140021f00:	mov    al,0xcb
   140021f02:	add    DWORD PTR [rax],eax
   140021f04:	sbb    DWORD PTR [rax],ebx
   140021f06:	add    al,0x0
   140021f08:	sbb    BYTE PTR [rcx+rcx*1],dh
   140021f0b:	add    BYTE PTR [rdx],cl
   140021f0d:	push   rdx
   140021f0e:	(bad)  
   140021f0f:	jo     0x140021edf
   140021f11:	add    DWORD PTR ds:[rax],eax
   140021f14:	mov    al,0xcb
   140021f16:	add    DWORD PTR [rax],eax
	...
   140021f20:	add    DWORD PTR [rax],eax
   140021f22:	add    BYTE PTR [rax],al
   140021f24:	add    DWORD PTR [rax],eax
   140021f26:	add    BYTE PTR [rax],al
   140021f28:	sub    al,0x1f
   140021f2a:	add    al,BYTE PTR [rax]
   140021f2c:	add    BYTE PTR [rax],al
	...
   140021f37:	add    al,al
   140021f39:	push   rbp
   140021f3a:	add    DWORD PTR [rax],eax
   140021f3c:	cmp    BYTE PTR [rax],al
   140021f3e:	add    BYTE PTR [rax],al
   140021f40:	push   rax
   140021f41:	add    BYTE PTR [r8],r8b
   140021f44:	(bad)  
   140021f45:	(bad)  
   140021f46:	(bad)  
   140021f47:	call   QWORD PTR [rdx+0x45]
   140021f4d:	add    BYTE PTR [rax],al
   140021f4f:	add    BYTE PTR [rbp+rax*2-0x10000],bh
   140021f56:	(bad)  
   140021f57:	inc    eax
   140021f59:	push   rbp
   140021f5a:	add    DWORD PTR [rax],eax
   140021f5c:	add    BYTE PTR [rax],al
   140021f5e:	add    BYTE PTR [rax],al
   140021f60:	int    0x55
   140021f62:	add    DWORD PTR [rax],eax
   140021f64:	add    DWORD PTR [rax],eax
   140021f66:	add    BYTE PTR [rax],al
   140021f68:	in     al,0x55
   140021f6a:	add    DWORD PTR [rax],eax
   140021f6c:	add    BYTE PTR [rax],al
   140021f6e:	add    BYTE PTR [rax],al
   140021f70:	and    DWORD PTR [rax],eax
   140021f72:	add    BYTE PTR [rax],al
   140021f74:	rol    BYTE PTR [rbp+0x0],1
   140021f77:	add    dl,ch
   140021f79:	add    BYTE PTR [r8],r8b
   140021f7c:	mov    al,0x1f
   140021f7e:	add    al,BYTE PTR [rax]
   140021f80:	and    DWORD PTR [rax],eax
   140021f82:	add    al,BYTE PTR [rax]
   140021f84:	add    BYTE PTR [rcx+rcx*1+0x0],dh
   140021f88:	rol    BYTE PTR [rbp+0x0],1
   140021f8b:	add    dl,ch
   140021f8d:	add    BYTE PTR [r8],r8b
   140021f90:	mov    al,0x1f
   140021f92:	add    al,BYTE PTR [rax]
   140021f94:	and    DWORD PTR [rsi+rax*1+0x0],edx
   140021f98:	push   rsp
   140021f99:	push   rsp
   140021f9a:	or     BYTE PTR [rax],al
   140021f9c:	rex.WRXB xor al,0x7
   140021f9f:	add    BYTE PTR [rip+0xffffffffd0000974],al        # 0x110022919
   140021fa5:	add    BYTE PTR [r8],r8b
   140021fa8:	(bad)  
   140021fa9:	add    BYTE PTR [r8],r8b
   140021fac:	mov    al,0x1f
   140021fae:	add    al,BYTE PTR [rax]
   140021fb0:	add    DWORD PTR [rsi],eax
   140021fb2:	add    al,BYTE PTR [rax]
   140021fb4:	(bad)  
   140021fb5:	xor    al,BYTE PTR [rdx]
   140021fb7:	(bad)  
   140021fb8:	adc    DWORD PTR [rcx],ebx
   140021fba:	(bad)  
   140021fbb:	add    BYTE PTR [rcx],bl
   140021fbd:	or     al,BYTE PTR fs:[rax]
   140021fc0:	adc    al,0x34
   140021fc2:	or     BYTE PTR [rax],al
   140021fc4:	(bad)  
   140021fc5:	push   rdx
   140021fc6:	add    dh,BYTE PTR [rax-0x32]
   140021fc9:	add    DWORD PTR ds:[rax],eax
   140021fcc:	loopne 0x140021f99
   140021fce:	add    DWORD PTR [rax],eax
   140021fd0:	(bad)  
   140021fd1:	(bad)  
   140021fd2:	(bad)  
   140021fd3:	push   rax
   140021fd5:	push   rbp
   140021fd6:	add    DWORD PTR [rax],eax
   140021fd8:	movabs al,ds:0xc5ffffffff000046
   140021fe1:	rex.RX add BYTE PTR [rax],r8b
   140021fe4:	add    BYTE PTR [rax],al
   140021fe6:	add    BYTE PTR [rax],al
   140021fe8:	rol    BYTE PTR [rsi+0x0],1
   140021feb:	add    bh,bh
   140021fed:	(bad)  
   140021fee:	(bad)  
   140021fef:	call   FWORD PTR [rcx]
   140021ff1:	or     eax,DWORD PTR [rbx]
   140021ff3:	add    BYTE PTR [rbx],cl
   140021ff5:	rex.X (bad) 
   140021ff7:	push   rax
   140021ff8:	(bad)  
   140021ff9:	xor    BYTE PTR [rax],al
   140021ffb:	add    dh,cl
   140021ffd:	add    DWORD PTR ds:[rax],eax
   140022000:	adc    ah,cl
   140022002:	add    DWORD PTR [rax],eax
   140022004:	sbb    DWORD PTR [rdi],ebx
   140022006:	(bad)  
   140022007:	add    BYTE PTR [rdi],bl
   140022009:	xor    al,0xc
   14002200b:	add    BYTE PTR [rcx],dl
   14002200d:	push   rdx
   14002200e:	or     eax,0xa700bc0
   140022013:	(bad)  
   140022014:	(bad)  
   140022015:	add    DWORD PTR ds:[rax],eax
   140022018:	adc    ah,cl
   14002201a:	add    DWORD PTR [rax],eax
	...
   140022024:	add    DWORD PTR [rax],eax
   140022026:	add    BYTE PTR [rax],al
   140022028:	add    DWORD PTR [rax],eax
   14002202a:	add    BYTE PTR [rax],al
   14002202c:	pop    rax
   14002202d:	and    BYTE PTR [rdx],al
   14002202f:	add    BYTE PTR [rdx],al
   140022031:	add    BYTE PTR [rax],al
   140022033:	add    BYTE PTR [rdx],al
   140022035:	add    BYTE PTR [rax],al
   140022037:	add    BYTE PTR [rbx],al
   140022039:	add    BYTE PTR [rax],al
   14002203b:	add    BYTE PTR [rcx],al
   14002203d:	add    BYTE PTR [rax],al
   14002203f:	add    BYTE PTR [rax+riz*1+0x2],al
   140022043:	add    BYTE PTR [rax+0x0],al
	...
   14002204e:	add    BYTE PTR [rax],al
   140022050:	push   rax
   140022051:	push   rsi
   140022052:	add    DWORD PTR [rax],eax
   140022054:	rex.W add BYTE PTR [rax],al
   140022057:	add    BYTE PTR [rax+0x0],al
	...
   140022062:	add    BYTE PTR [rax],al
   140022064:	adc    BYTE PTR [rsi+0x1],dl
   140022067:	add    BYTE PTR [rax+0x0],cl
   14002206a:	add    BYTE PTR [rax],al
   14002206c:	mov    al,0x47
   14002206e:	add    BYTE PTR [rax],al
   140022070:	(bad)  
   140022071:	(bad)  
   140022072:	(bad)  
   140022073:	push   rdi
   140022075:	rex.RXB add BYTE PTR [r8],r8b
   140022078:	add    BYTE PTR [rax],al
   14002207a:	add    BYTE PTR [rax],al
   14002207c:	sbb    DWORD PTR [rax+0x0],ecx
   14002207f:	add    BYTE PTR [rdx],al
   140022081:	add    BYTE PTR [rax],al
   140022083:	add    BYTE PTR [rdi+0x48],al
   140022086:	add    BYTE PTR [rax],al
   140022088:	(bad)  
   140022089:	(bad)  
   14002208a:	(bad)  
   14002208b:	call   QWORD PTR [rax]
   14002208d:	push   rsi
   14002208e:	add    DWORD PTR [rax],eax
   140022090:	add    BYTE PTR [rax],al
   140022092:	add    BYTE PTR [rax],al
   140022094:	(bad)  
   140022095:	push   rsi
   140022096:	add    DWORD PTR [rax],eax
   140022098:	add    DWORD PTR [rax],eax
   14002209a:	add    BYTE PTR [rax],al
   14002209c:	cmp    al,0x56
   14002209e:	add    DWORD PTR [rax],eax
   1400220a0:	add    BYTE PTR [rax],al
   1400220a2:	add    BYTE PTR [rax],al
   1400220a4:	pop    rsi
   1400220a5:	push   rsi
   1400220a6:	add    DWORD PTR [rax],eax
   1400220a8:	add    eax,DWORD PTR [rax]
   1400220aa:	add    BYTE PTR [rax],al
   1400220ac:	pushf  
   1400220ad:	push   rsi
   1400220ae:	add    DWORD PTR [rax],eax
   1400220b0:	add    BYTE PTR [rax],al
   1400220b2:	add    BYTE PTR [rax],al
   1400220b4:	sbb    DWORD PTR [rbx],ecx
   1400220b6:	add    eax,DWORD PTR [rax]
   1400220b8:	or     eax,DWORD PTR [rdx+0x7]
   1400220bb:	push   rax
   1400220bc:	(bad)  
   1400220bd:	xor    BYTE PTR [rax],al
   1400220bf:	add    dh,cl
   1400220c1:	add    DWORD PTR ds:[rax],eax
   1400220c4:	rex int3 
   1400220c6:	add    DWORD PTR [rax],eax
   1400220c8:	sbb    DWORD PTR [rip+0x641d0006],ebx        # 0x1a41f20d4
   1400220ce:	or     eax,DWORD PTR [rax]
   1400220d0:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400220d3:	add    BYTE PTR [rdx],cl
   1400220d5:	push   rdx
   1400220d6:	(bad)  
   1400220d7:	jo     0x1400220a7
   1400220d9:	add    DWORD PTR ds:[rax],eax
   1400220dc:	rex int3 
   1400220de:	add    DWORD PTR [rax],eax
	...
   1400220e8:	add    DWORD PTR [rax],eax
   1400220ea:	add    BYTE PTR [rax],al
   1400220ec:	add    DWORD PTR [rax],eax
   1400220ee:	add    BYTE PTR [rax],al
   1400220f0:	hlt    
   1400220f1:	and    BYTE PTR [rdx],al
   1400220f3:	add    BYTE PTR [rax+0x0],al
	...
   1400220fe:	add    BYTE PTR [rax],al
   140022100:	mov    al,0x56
   140022102:	add    DWORD PTR [rax],eax
   140022104:	rex.W add BYTE PTR [rax],al
   140022107:	add    bh,bh
   140022109:	(bad)  
   14002210a:	(bad)  
   14002210b:	inc    DWORD PTR [rax]
   14002210d:	add    BYTE PTR [rax],al
   14002210f:	add    bh,bh
   140022111:	(bad)  
   140022112:	(bad)  
   140022113:	inc    DWORD PTR [rax]
   140022115:	add    BYTE PTR [rax],al
   140022117:	add    al,al
   140022119:	rex.W add BYTE PTR [rax],al
   14002211c:	(bad)  
   14002211d:	(bad)  
   14002211e:	(bad)  
   14002211f:	(bad)  
   140022120:	cli    
   140022121:	rex.W add BYTE PTR [rax],al
   140022124:	add    BYTE PTR [rax],al
   140022126:	add    BYTE PTR [rax],al
   140022128:	sbb    ecx,DWORD PTR [rcx+0x0]
   14002212b:	add    bh,bh
   14002212d:	(bad)  
   14002212e:	(bad)  
   14002212f:	push   QWORD PTR [rax+0x156]
   140022135:	add    BYTE PTR [rax],al
   140022137:	add    BYTE PTR [rsi+0x1000156],bh
   14002213d:	add    BYTE PTR [rax],al
   14002213f:	add    ah,bl
   140022141:	push   rsi
   140022142:	add    DWORD PTR [rax],eax
   140022144:	add    BYTE PTR [rax],al
   140022146:	add    BYTE PTR [rax],al
   140022148:	sbb    DWORD PTR [rdx],ecx
   14002214a:	add    al,BYTE PTR [rax]
   14002214c:	or     dh,BYTE PTR [rdx]
   14002214e:	(bad)  
   14002214f:	push   rax
   140022150:	(bad)  
   140022151:	add    DWORD PTR ds:[rax],eax
   140022154:	jo     0x140022122
   140022156:	add    DWORD PTR [rax],eax
   140022158:	sbb    DWORD PTR [rax],ebx
   14002215a:	add    al,0x0
   14002215c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14002215f:	add    BYTE PTR [rdx],cl
   140022161:	push   rdx
   140022162:	(bad)  
   140022163:	jo     0x140022133
   140022165:	add    DWORD PTR ds:[rax],eax
   140022168:	jo     0x140022136
   14002216a:	add    DWORD PTR [rax],eax
	...
   140022174:	add    DWORD PTR [rax],eax
   140022176:	add    BYTE PTR [rax],al
   140022178:	add    DWORD PTR [rax],eax
   14002217a:	add    BYTE PTR [rax],al
   14002217c:	test   al,0x21
   14002217e:	add    al,BYTE PTR [rax]
   140022180:	add    al,0x0
   140022182:	add    BYTE PTR [rax],al
   140022184:	add    al,0x0
   140022186:	add    BYTE PTR [rax],al
   140022188:	add    eax,0x1000000
   14002218d:	add    BYTE PTR [rax],al
   14002218f:	add    BYTE PTR [rcx+riz*1+0x400002],dl
	...
   14002219e:	add    BYTE PTR [rax],al
   1400221a0:	and    BYTE PTR [rdi+0x1],dl
   1400221a3:	add    BYTE PTR [rax],bh
   1400221a5:	add    BYTE PTR [rax],al
   1400221a7:	add    BYTE PTR [rax+0x0],al
	...
   1400221b2:	add    BYTE PTR [rax],al
   1400221b4:	lock push rsi
   1400221b6:	add    DWORD PTR [rax],eax
   1400221b8:	cmp    BYTE PTR [rax],al
   1400221ba:	add    BYTE PTR [rax],al
   1400221bc:	(bad)  
   1400221bd:	(bad)  
   1400221be:	(bad)  
   1400221bf:	inc    DWORD PTR [rax]
   1400221c1:	add    BYTE PTR [rax],al
   1400221c3:	add    bh,bh
   1400221c5:	(bad)  
   1400221c6:	(bad)  
   1400221c7:	inc    DWORD PTR [rax]
   1400221c9:	add    BYTE PTR [rax],al
   1400221cb:	add    bh,bh
   1400221cd:	(bad)  
   1400221ce:	(bad)  
   1400221cf:	inc    DWORD PTR [rax]
   1400221d1:	add    BYTE PTR [rax],al
   1400221d3:	add    bh,bh
   1400221d5:	(bad)  
   1400221d6:	(bad)  
   1400221d7:	inc    DWORD PTR [rax]
   1400221d9:	add    BYTE PTR [rax],al
   1400221db:	add    bh,bh
   1400221dd:	(bad)  
   1400221de:	(bad)  
   1400221df:	inc    DWORD PTR [rax]
   1400221e1:	add    BYTE PTR [rax],al
   1400221e3:	add    bh,bh
   1400221e5:	(bad)  
   1400221e6:	(bad)  
   1400221e7:	inc    DWORD PTR [rax]
   1400221e9:	add    BYTE PTR [rax],al
   1400221eb:	add    BYTE PTR [rax-0xffffb7],dh
   1400221f1:	(bad)  
   1400221f2:	(bad)  
   1400221f3:	push   rax
   1400221f5:	rex.WB add BYTE PTR [r8],al
   1400221f8:	add    BYTE PTR [rax],al
   1400221fa:	add    BYTE PTR [rax],al
   1400221fc:	add    cl,BYTE PTR [rdx+0x0]
   1400221ff:	add    bh,bh
   140022201:	(bad)  
   140022202:	(bad)  
   140022203:	call   QWORD PTR [rax]
   140022205:	rex.WX add BYTE PTR [rax],al
   140022208:	add    al,0x0
   14002220a:	add    BYTE PTR [rax],al
   14002220c:	sbb    cl,BYTE PTR [rdx+0x0]
   14002220f:	add    bh,bh
   140022211:	(bad)  
   140022212:	(bad)  
   140022213:	push   rax
   140022215:	push   rsi
   140022216:	add    DWORD PTR [rax],eax
   140022218:	add    BYTE PTR [rax],al
   14002221a:	add    BYTE PTR [rax],al
   14002221c:	std    
   14002221d:	push   rsi
   14002221e:	add    DWORD PTR [rax],eax
   140022220:	add    DWORD PTR [rax],eax
   140022222:	add    BYTE PTR [rax],al
   140022224:	adc    DWORD PTR [rdi+0x1],edx
   140022227:	add    BYTE PTR [rax],al
   140022229:	add    BYTE PTR [rax],al
   14002222b:	add    BYTE PTR [rip+0x5000157],ch        # 0x145022388
   140022231:	add    BYTE PTR [rax],al
   140022233:	add    BYTE PTR [rcx+0x57],al
   140022236:	add    DWORD PTR [rax],eax
   140022238:	add    BYTE PTR [rax],al
   14002223a:	add    BYTE PTR [rax],al
   14002223c:	adc    DWORD PTR [rax],ebx
   14002223e:	add    al,0x0
   140022240:	sbb    BYTE PTR [rcx+rcx*1],dh
   140022243:	add    BYTE PTR [rdx],cl
   140022245:	push   rdx
   140022246:	(bad)  
   140022247:	jo     0x140022217
   140022249:	add    DWORD PTR ds:[rax],eax
   14002224c:	movabs al,ds:0x20ffffffff0001cc
   140022255:	add    QWORD PTR [r8],r8
   140022258:	add    BYTE PTR [rax],al
   14002225a:	add    BYTE PTR [rax],al
   14002225c:	rex
   14002225d:	add    QWORD PTR [r8],r8
   140022260:	add    DWORD PTR [rax],eax
   140022262:	add    BYTE PTR [rax],al
   140022264:	(bad)  
   140022265:	add    QWORD PTR [r8],r8
   140022268:	add    al,BYTE PTR [rax]
   14002226a:	add    BYTE PTR [rax],al
   14002226c:	or     BYTE PTR [rbp+0x1],0x0
   140022270:	xor    BYTE PTR [rdx+0x0],cl
   140022273:	add    bh,bh
   140022275:	(bad)  
   140022276:	(bad)  
   140022277:	dec    DWORD PTR [rbp+0x4a]
   14002227a:	add    BYTE PTR [rax],al
   14002227c:	add    eax,DWORD PTR [rax]
   14002227e:	add    BYTE PTR [rax],al
   140022280:	pop    rax
   140022281:	rex.WX add BYTE PTR [rax],al
   140022284:	add    al,BYTE PTR [rax]
   140022286:	add    BYTE PTR [rax],al
   140022288:	(bad)  
   140022289:	rex.WX add BYTE PTR [rax],al
   14002228c:	add    DWORD PTR [rax],eax
   14002228e:	add    BYTE PTR [rax],al
   140022290:	ins    DWORD PTR es:[rdi],dx
   140022291:	rex.WX add BYTE PTR [rax],al
   140022294:	add    BYTE PTR [rax],al
   140022296:	add    BYTE PTR [rax],al
   140022298:	js     0x1400222e4
   14002229a:	add    BYTE PTR [rax],al
   14002229c:	(bad)  
   14002229d:	(bad)  
   14002229e:	(bad)  
   14002229f:	jmp    QWORD PTR [rcx]
   1400222a1:	add    BYTE PTR [rax],al
   1400222a3:	add    BYTE PTR [rax],dl
   1400222a5:	rex.WXB add BYTE PTR [r8],al
   1400222a8:	sub    eax,0x2000004b
   1400222ad:	add    al,BYTE PTR cs:[rax]
   1400222b0:	and    DWORD PTR [rip+0x34050002],eax        # 0x1740722b8
   1400222b6:	add    al,0x0
   1400222b8:	adc    BYTE PTR [rbx+0x0],cl
   1400222bb:	add    BYTE PTR [rip+0x2000004b],ch        # 0x16002230c
   1400222c1:	add    al,BYTE PTR cs:[rax]
   1400222c4:	adc    DWORD PTR [rbx],edx
   1400222c6:	add    al,BYTE PTR [rax]
   1400222c8:	or     dl,BYTE PTR [rdx+0x6]
   1400222cb:	xor    dh,cl
   1400222cd:	add    DWORD PTR ds:[rax],eax
   1400222d0:	ror    ah,1
   1400222d2:	add    DWORD PTR [rax],eax
   1400222d4:	(bad)  
   1400222d5:	(bad)  
   1400222d6:	(bad)  
   1400222d7:	call   QWORD PTR [rax+0x57]
   1400222da:	add    DWORD PTR [rax],eax
   1400222dc:	add    BYTE PTR [rax],al
   1400222de:	add    BYTE PTR [rax],al
   1400222e0:	jo     0x140022339
   1400222e2:	add    DWORD PTR [rax],eax
   1400222e4:	add    DWORD PTR [rax],eax
   1400222e6:	add    BYTE PTR [rax],al
   1400222e8:	nop
   1400222e9:	push   rdi
   1400222ea:	add    DWORD PTR [rax],eax
   1400222ec:	jo     0x140022339
   1400222ee:	add    BYTE PTR [rax],al
   1400222f0:	(bad)  
   1400222f1:	(bad)  
   1400222f2:	(bad)  
   1400222f3:	inc    DWORD PTR [rsi+0x200004b]
   1400222f9:	add    BYTE PTR [rax],al
   1400222fb:	add    BYTE PTR [rcx+0x100004b],dl
   140022301:	add    BYTE PTR [rax],al
   140022303:	add    BYTE PTR [rbx+rcx*2+0x0],bl
   14002230a:	add    BYTE PTR [rax],al
   14002230c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002230d:	rex.WXB add BYTE PTR [r8],al
   140022310:	(bad)  
   140022311:	(bad)  
   140022312:	(bad)  
   140022313:	call   FWORD PTR [rcx]
   140022315:	xor    cl,BYTE PTR [rdx]
   140022317:	add    BYTE PTR [rcx+rax*1],dl
   14002231a:	sub    eax,DWORD PTR [rax]
   14002231c:	or     eax,0x9e00bf0
   140022321:	rol    BYTE PTR [rdi],1
   140022323:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14362279a
   14002232a:	add    dh,BYTE PTR [rax]
   14002232c:	push   rax
   14002232d:	(bad)  
   14002232e:	add    DWORD PTR [rax],eax
   140022330:	add    ch,cl
   140022332:	add    DWORD PTR [rax],eax
   140022334:	rex.X add DWORD PTR [rax],eax
   140022337:	add    bh,bh
   140022339:	(bad)  
   14002233a:	(bad)  
   14002233b:	push   QWORD PTR [rax+0x157]
   140022341:	add    BYTE PTR [rax],al
   140022343:	add    al,dl
   140022345:	push   rdi
   140022346:	add    DWORD PTR [rax],eax
   140022348:	(bad)  
   140022349:	(bad)  
   14002234a:	(bad)  
   14002234b:	call   rax
   14002234d:	push   rdi
   14002234e:	add    DWORD PTR [rax],eax
   140022350:	add    al,BYTE PTR [rax]
   140022352:	add    BYTE PTR [rax],al
   140022354:	lock push rdi
   140022356:	add    DWORD PTR [rax],eax
   140022358:	add    eax,DWORD PTR [rax]
   14002235a:	add    BYTE PTR [rax],al
   14002235c:	adc    BYTE PTR [rax+0x1],bl
   14002235f:	add    BYTE PTR [rax+rax*1],al
   140022362:	add    BYTE PTR [rax],al
   140022364:	xor    BYTE PTR [rax+0x1],bl
   140022367:	add    BYTE PTR [rip+0x50000000],al        # 0x19002236d
   14002236d:	pop    rax
   14002236e:	add    DWORD PTR [rax],eax
   140022370:	add    eax,0x70000000
   140022375:	pop    rax
   140022376:	add    DWORD PTR [rax],eax
   140022378:	add    eax,0x90000000
   14002237d:	pop    rax
   14002237e:	add    DWORD PTR [rax],eax
   140022380:	add    al,0x0
   140022382:	add    BYTE PTR [rax],al
   140022384:	mov    al,0x58
   140022386:	add    DWORD PTR [rax],eax
   140022388:	or     DWORD PTR [rax],eax
   14002238a:	add    BYTE PTR [rax],al
   14002238c:	rcr    BYTE PTR [rax+0x1],1
   14002238f:	add    BYTE PTR [rdx],cl
   140022391:	add    BYTE PTR [rax],al
   140022393:	add    al,dh
   140022395:	pop    rax
   140022396:	add    DWORD PTR [rax],eax
   140022398:	add    al,0x0
   14002239a:	add    BYTE PTR [rax],al
   14002239c:	adc    BYTE PTR [rcx+0x1],bl
   14002239f:	add    BYTE PTR [rax+rax*1],cl
   1400223a2:	add    BYTE PTR [rax],al
   1400223a4:	xor    BYTE PTR [rcx+0x1],bl
   1400223a7:	add    BYTE PTR [rip+0x50000000],cl        # 0x1900223ad
   1400223ad:	pop    rcx
   1400223ae:	add    DWORD PTR [rax],eax
   1400223b0:	(bad)  
   1400223b1:	add    BYTE PTR [rax],al
   1400223b3:	add    BYTE PTR [rax+0x59],dh
   1400223b6:	add    DWORD PTR [rax],eax
   1400223b8:	add    eax,DWORD PTR [rax]
   1400223ba:	add    BYTE PTR [rax],al
   1400223bc:	nop
   1400223bd:	pop    rcx
   1400223be:	add    DWORD PTR [rax],eax
   1400223c0:	adc    BYTE PTR [rax],al
   1400223c2:	add    BYTE PTR [rax],al
   1400223c4:	mov    al,0x59
   1400223c6:	add    DWORD PTR [rax],eax
   1400223c8:	adc    DWORD PTR [rax],eax
   1400223ca:	add    BYTE PTR [rax],al
   1400223cc:	rcr    BYTE PTR [rcx+0x1],1
   1400223cf:	add    BYTE PTR [rbx],al
   1400223d1:	add    BYTE PTR [rax],al
   1400223d3:	add    al,dh
   1400223d5:	pop    rcx
   1400223d6:	add    DWORD PTR [rax],eax
   1400223d8:	adc    eax,DWORD PTR [rax]
   1400223da:	add    BYTE PTR [rax],al
   1400223dc:	adc    BYTE PTR [rdx+0x1],bl
   1400223df:	add    BYTE PTR [rax+rax*1],dl
   1400223e2:	add    BYTE PTR [rax],al
   1400223e4:	xor    BYTE PTR [rdx+0x1],bl
   1400223e7:	add    BYTE PTR [rip+0x50000000],dl        # 0x1900223ed
   1400223ed:	pop    rdx
   1400223ee:	add    DWORD PTR [rax],eax
   1400223f0:	add    BYTE PTR [rax+rax*1+0x0],cl
   1400223f4:	(bad)  
   1400223f5:	(bad)  
   1400223f6:	(bad)  
   1400223f7:	call   FWORD PTR [rdi+0x4c]
   1400223fa:	add    BYTE PTR [rax],al
   1400223fc:	add    BYTE PTR [rax],al
   1400223fe:	add    BYTE PTR [rax],al
   140022400:	outs   dx,BYTE PTR ds:[rsi]
   140022401:	rex.WR add BYTE PTR [rax],r8b
   140022404:	add    al,BYTE PTR [rax]
   140022406:	add    BYTE PTR [rax],al
   140022408:	mov    ah,0x4c
   14002240a:	add    BYTE PTR [rax],al
   14002240c:	add    eax,DWORD PTR [rax]
   14002240e:	add    BYTE PTR [rax],al
   140022410:	ret    0x4c
   140022413:	add    BYTE PTR [rax+rax*1],al
   140022416:	add    BYTE PTR [rax],al
   140022418:	int    0x4c
   14002241a:	add    BYTE PTR [rax],al
   14002241c:	add    eax,0xf9000000
   140022421:	rex.WR add BYTE PTR [rax],r8b
   140022424:	(bad)  
   140022425:	add    BYTE PTR [rax],al
   140022427:	add    BYTE PTR [rbx],dl
   140022429:	rex.WRB add BYTE PTR [r8],r8b
   14002242c:	add    eax,0x37000000
   140022431:	rex.WRB add BYTE PTR [r8],r8b
   140022434:	(bad)  
   140022435:	add    BYTE PTR [rax],al
   140022437:	add    BYTE PTR [rsi+0x4d],bl
   14002243a:	add    BYTE PTR [rax],al
   14002243c:	add    eax,0xde000000
   140022441:	rex.WRB add BYTE PTR [r8],r8b
   140022444:	or     BYTE PTR [rax],al
   140022446:	add    BYTE PTR [rax],al
   140022448:	or     eax,0x500004e
   14002244d:	add    BYTE PTR [rax],al
   14002244f:	add    BYTE PTR [rsi+rcx*2],bl
   140022452:	add    BYTE PTR [rax],al
   140022454:	or     eax,DWORD PTR [rax]
   140022456:	add    BYTE PTR [rax],al
   140022458:	sub    BYTE PTR [rsi+0x0],cl
   14002245b:	add    BYTE PTR [rdx],cl
   14002245d:	add    BYTE PTR [rax],al
   14002245f:	add    BYTE PTR [rsi+rcx*2],dh
   140022462:	add    BYTE PTR [rax],al
   140022464:	or     DWORD PTR [rax],eax
   140022466:	add    BYTE PTR [rax],al
   140022468:	rex
   140022469:	rex.WRX add BYTE PTR [rax],r8b
   14002246c:	add    al,0x0
   14002246e:	add    BYTE PTR [rax],al
   140022470:	jge    0x1400224c0
   140022472:	add    BYTE PTR [rax],al
   140022474:	sldt   WORD PTR [rax]
   140022477:	add    BYTE PTR [rax+0xe00004e],cl
   14002247d:	add    BYTE PTR [rax],al
   14002247f:	add    BYTE PTR [rdx+0xd00004e],dl
   140022485:	add    BYTE PTR [rax],al
   140022487:	add    BYTE PTR [rbp+0xc00004e],bl
   14002248d:	add    BYTE PTR [rax],al
   14002248f:	add    BYTE PTR [rax+0x400004e],ch
   140022495:	add    BYTE PTR [rax],al
   140022497:	add    bl,ch
   140022499:	rex.WRX add BYTE PTR [rax],r8b
   14002249c:	adc    al,BYTE PTR [rax]
   14002249e:	add    BYTE PTR [rax],al
   1400224a0:	cli    
   1400224a1:	rex.WRX add BYTE PTR [rax],r8b
   1400224a4:	adc    DWORD PTR [rax],eax
   1400224a6:	add    BYTE PTR [rax],al
   1400224a8:	or     DWORD PTR [rdi+0x0],ecx
   1400224ab:	add    BYTE PTR [rax],dl
   1400224ad:	add    BYTE PTR [rax],al
   1400224af:	add    BYTE PTR [rax],bl
   1400224b1:	rex.WRXB add BYTE PTR [r8],r8b
   1400224b4:	add    eax,DWORD PTR [rax]
   1400224b6:	add    BYTE PTR [rax],al
   1400224b8:	pop    rbx
   1400224b9:	rex.WRXB add BYTE PTR [r8],r8b
   1400224bc:	(bad)  
   1400224bd:	add    BYTE PTR [rax],al
   1400224bf:	add    BYTE PTR [rsi+0x4f],ah
   1400224c2:	add    BYTE PTR [rax],al
   1400224c4:	adc    eax,0x70000000
   1400224c9:	rex.WRXB add BYTE PTR [r8],r8b
   1400224cc:	adc    al,0x0
   1400224ce:	add    BYTE PTR [rax],al
   1400224d0:	jnp    0x140022521
   1400224d2:	add    BYTE PTR [rax],al
   1400224d4:	adc    eax,DWORD PTR [rax]
   1400224d6:	add    BYTE PTR [rax],al
   1400224d8:	xchg   BYTE PTR [rdi+0x0],cl
   1400224db:	add    BYTE PTR [rbx],al
   1400224dd:	add    BYTE PTR [rax],al
   1400224df:	add    cl,cl
   1400224e1:	rex.WRXB add BYTE PTR [r8],r8b
   1400224e4:	add    al,BYTE PTR [rax]
   1400224e6:	add    BYTE PTR [rax],al
   1400224e8:	out    dx,al
   1400224e9:	rex.WRXB add BYTE PTR [r8],r8b
   1400224ec:	(bad)  
   1400224ed:	(bad)  
   1400224ee:	(bad)  
   1400224ef:	call   FWORD PTR [rcx]
   1400224f1:	cmp    eax,0x642b000d
   1400224f6:	imul   eax,DWORD PTR [rax],0x685427
   1400224fc:	and    esi,DWORD PTR [rsi+riz*2]
   1400224ff:	add    BYTE PTR [rbx],dl
   140022501:	add    DWORD PTR [rax+0x0],esp
   140022504:	or     al,0xf0
   140022506:	or     ah,al
   140022508:	or     al,dl
   14002250a:	(bad)  
   14002250b:	rol    BYTE PTR [rax+rsi*2],0x0
   14002250f:	add    BYTE PTR [rax+0x3f],dl
   140022512:	add    DWORD PTR [rax],eax
   140022514:	jo     0x1400224e3
   140022516:	add    DWORD PTR [rax],eax
   140022518:	repnz add al,BYTE PTR [rax]
   14002251b:	add    bh,bh
   14002251d:	(bad)  
   14002251e:	(bad)  
   14002251f:	push   QWORD PTR [rax+0x5a]
   140022522:	add    DWORD PTR [rax],eax
   140022524:	add    BYTE PTR [rax],al
   140022526:	add    BYTE PTR [rax],al
   140022528:	nop
   140022529:	pop    rdx
   14002252a:	add    DWORD PTR [rax],eax
   14002252c:	add    DWORD PTR [rax],eax
   14002252e:	add    BYTE PTR [rax],al
   140022530:	mov    al,0x5a
   140022532:	add    DWORD PTR [rax],eax
   140022534:	add    al,BYTE PTR [rax]
   140022536:	add    BYTE PTR [rax],al
   140022538:	rcr    BYTE PTR [rdx+0x1],1
   14002253b:	add    BYTE PTR [rbx],al
   14002253d:	add    BYTE PTR [rax],al
   14002253f:	add    al,dh
   140022541:	pop    rdx
   140022542:	add    DWORD PTR [rax],eax
   140022544:	add    al,0x0
   140022546:	add    BYTE PTR [rax],al
   140022548:	adc    BYTE PTR [rbx+0x1],bl
   14002254b:	add    BYTE PTR [rax],al
   14002254d:	add    BYTE PTR [rax],al
   14002254f:	add    BYTE PTR [rax],dh
   140022551:	pop    rbx
   140022552:	add    DWORD PTR [rax],eax
   140022554:	(bad)  
   140022555:	add    BYTE PTR [rax],al
   140022557:	add    BYTE PTR [rax+0x5b],dl
   14002255a:	add    DWORD PTR [rax],eax
   14002255c:	(bad)  
   14002255d:	add    BYTE PTR [rax],al
   14002255f:	add    BYTE PTR [rax+0x5b],dh
   140022562:	add    DWORD PTR [rax],eax
   140022564:	add    BYTE PTR [rax],al
   140022566:	add    BYTE PTR [rax],al
   140022568:	nop
   140022569:	pop    rbx
   14002256a:	add    DWORD PTR [rax],eax
   14002256c:	or     DWORD PTR [rax],eax
   14002256e:	add    BYTE PTR [rax],al
   140022570:	mov    al,0x5b
   140022572:	add    DWORD PTR [rax],eax
   140022574:	or     al,BYTE PTR [rax]
   140022576:	add    BYTE PTR [rax],al
   140022578:	rcr    BYTE PTR [rbx+0x1],1
   14002257b:	add    BYTE PTR [rbx],cl
   14002257d:	add    BYTE PTR [rax],al
   14002257f:	add    al,dh
   140022581:	pop    rbx
   140022582:	add    DWORD PTR [rax],eax
   140022584:	add    BYTE PTR [rax],al
   140022586:	add    BYTE PTR [rax],al
   140022588:	adc    BYTE PTR [rcx+rax*1+0x0],bl
   14002258c:	or     eax,0x30000000
   140022591:	pop    rsp
   140022592:	add    DWORD PTR [rax],eax
   140022594:	(bad)  
   140022595:	add    BYTE PTR [rax],al
   140022597:	add    BYTE PTR [rax+0x5c],dl
   14002259a:	add    DWORD PTR [rax],eax
   14002259c:	add    BYTE PTR [rax],al
   14002259e:	add    BYTE PTR [rax],al
   1400225a0:	jo     0x1400225fe
   1400225a2:	add    DWORD PTR [rax],eax
   1400225a4:	adc    BYTE PTR [rax],al
   1400225a6:	add    BYTE PTR [rax],al
   1400225a8:	nop
   1400225a9:	pop    rsp
   1400225aa:	add    DWORD PTR [rax],eax
   1400225ac:	adc    DWORD PTR [rax],eax
   1400225ae:	add    BYTE PTR [rax],al
   1400225b0:	mov    al,0x5c
   1400225b2:	add    DWORD PTR [rax],eax
   1400225b4:	add    eax,0xd0000000
   1400225b9:	pop    rsp
   1400225ba:	add    DWORD PTR [rax],eax
   1400225bc:	adc    eax,DWORD PTR [rax]
   1400225be:	add    BYTE PTR [rax],al
   1400225c0:	lock pop rsp
   1400225c2:	add    DWORD PTR [rax],eax
   1400225c4:	adc    al,0x0
   1400225c6:	add    BYTE PTR [rax],al
   1400225c8:	adc    BYTE PTR [rbp+0x1],bl
   1400225cb:	add    BYTE PTR [rbx],dl
   1400225cd:	add    BYTE PTR [rax],al
   1400225cf:	add    BYTE PTR [rax],dl
   1400225d1:	pop    rbp
   1400225d2:	add    DWORD PTR [rax],eax
   1400225d4:	(bad)  
   1400225d5:	add    BYTE PTR [rax],al
   1400225d7:	add    BYTE PTR [rax],dh
   1400225d9:	pop    rbp
   1400225da:	add    DWORD PTR [rax],eax
   1400225dc:	adc    eax,DWORD PTR [rax]
   1400225de:	add    BYTE PTR [rax],al
   1400225e0:	push   rax
   1400225e1:	pop    rbp
   1400225e2:	add    DWORD PTR [rax],eax
   1400225e4:	sbb    BYTE PTR [rax],al
   1400225e6:	add    BYTE PTR [rax],al
   1400225e8:	jo     0x140022647
   1400225ea:	add    DWORD PTR [rax],eax
   1400225ec:	sbb    DWORD PTR [rax],eax
   1400225ee:	add    BYTE PTR [rax],al
   1400225f0:	nop
   1400225f1:	pop    rbp
   1400225f2:	add    DWORD PTR [rax],eax
   1400225f4:	sbb    al,BYTE PTR [rax]
   1400225f6:	add    BYTE PTR [rax],al
   1400225f8:	mov    al,0x5d
   1400225fa:	add    DWORD PTR [rax],eax
   1400225fc:	sbb    BYTE PTR [rax],al
   1400225fe:	add    BYTE PTR [rax],al
   140022600:	rcr    BYTE PTR [rbp+0x1],1
   140022603:	add    BYTE PTR [rax],bl
   140022605:	add    BYTE PTR [rax],al
   140022607:	add    al,dh
   140022609:	pop    rbp
   14002260a:	add    DWORD PTR [rax],eax
   14002260c:	sbb    eax,0x10000000
   140022611:	pop    rsi
   140022612:	add    DWORD PTR [rax],eax
   140022614:	(bad)  
   140022615:	add    BYTE PTR [rax],al
   140022617:	add    BYTE PTR [rax],dh
   140022619:	pop    rsi
   14002261a:	add    DWORD PTR [rax],eax
   14002261c:	(bad)  
   14002261d:	add    BYTE PTR [rax],al
   14002261f:	add    BYTE PTR [rax+0x5e],dl
   140022622:	add    DWORD PTR [rax],eax
   140022624:	(bad)  
   140022625:	add    BYTE PTR [rax],al
   140022627:	add    BYTE PTR [rax+0x5e],dl
   14002262a:	add    DWORD PTR [rax],eax
   14002262c:	and    DWORD PTR [rax],eax
   14002262e:	add    BYTE PTR [rax],al
   140022630:	jo     0x140022690
   140022632:	add    DWORD PTR [rax],eax
   140022634:	and    al,BYTE PTR [rax]
   140022636:	add    BYTE PTR [rax],al
   140022638:	nop
   140022639:	pop    rsi
   14002263a:	add    DWORD PTR [rax],eax
   14002263c:	(bad)  
   14002263d:	add    BYTE PTR [rax],al
   14002263f:	add    BYTE PTR [rax+0x2400015e],dh
   140022645:	add    BYTE PTR [rax],al
   140022647:	add    al,dl
   140022649:	pop    rsi
   14002264a:	add    DWORD PTR [rax],eax
   14002264c:	(bad)  
   14002264d:	add    BYTE PTR [rax],al
   14002264f:	add    al,dl
   140022651:	pop    rsi
   140022652:	add    DWORD PTR [rax],eax
   140022654:	(bad)  
   140022655:	add    BYTE PTR [rax],al
   140022657:	add    al,dh
   140022659:	pop    rsi
   14002265a:	add    DWORD PTR [rax],eax
   14002265c:	(bad)  
   14002265d:	add    BYTE PTR [rax],al
   14002265f:	add    BYTE PTR [rax],dl
   140022661:	pop    rdi
   140022662:	add    DWORD PTR [rax],eax
   140022664:	(bad)  
   140022665:	add    BYTE PTR [rax],al
   140022667:	add    BYTE PTR [rax],dl
   140022669:	pop    rdi
   14002266a:	add    DWORD PTR [rax],eax
   14002266c:	sub    DWORD PTR [rax],eax
   14002266e:	add    BYTE PTR [rax],al
   140022670:	xor    BYTE PTR [rdi+0x1],bl
   140022673:	add    BYTE PTR [rdx],ch
   140022675:	add    BYTE PTR [rax],al
   140022677:	add    BYTE PTR [rax+0x5f],dl
   14002267a:	add    DWORD PTR [rax],eax
   14002267c:	sbb    eax,0x70000000
   140022681:	pop    rdi
   140022682:	add    DWORD PTR [rax],eax
   140022684:	sbb    BYTE PTR [rax],al
   140022686:	add    BYTE PTR [rax],al
   140022688:	nop
   140022689:	pop    rdi
   14002268a:	add    DWORD PTR [rax],eax
   14002268c:	sub    eax,0xb0000000
   140022691:	pop    rdi
   140022692:	add    DWORD PTR [rax],eax
   140022694:	add    BYTE PTR cs:[rax],al
   140022697:	add    al,dl
   140022699:	pop    rdi
   14002269a:	add    DWORD PTR [rax],eax
   14002269c:	sbb    BYTE PTR [rax],al
   14002269e:	add    BYTE PTR [rax],al
   1400226a0:	lock pop rdi
   1400226a2:	add    DWORD PTR [rax],eax
   1400226a4:	xor    BYTE PTR [rax],al
   1400226a6:	add    BYTE PTR [rax],al
   1400226a8:	adc    BYTE PTR [rax+0x1],ah
   1400226ab:	add    BYTE PTR [rax],bl
   1400226ad:	add    BYTE PTR [rax],al
   1400226af:	add    BYTE PTR [rax],dl
   1400226b1:	(bad)  
   1400226b2:	add    DWORD PTR [rax],eax
   1400226b4:	xor    al,BYTE PTR [rax]
   1400226b6:	add    BYTE PTR [rax],al
   1400226b8:	xor    BYTE PTR [rax+0x1],ah
   1400226bb:	add    BYTE PTR [rax],bl
   1400226bd:	add    BYTE PTR [rax],al
   1400226bf:	add    BYTE PTR [rax+0x60],dl
   1400226c2:	add    DWORD PTR [rax],eax
   1400226c4:	xor    al,0x0
   1400226c6:	add    BYTE PTR [rax],al
   1400226c8:	jo     0x14002272a
   1400226ca:	add    DWORD PTR [rax],eax
   1400226cc:	sbb    BYTE PTR [rax],al
   1400226ce:	add    BYTE PTR [rax],al
   1400226d0:	jo     0x140022732
   1400226d2:	add    DWORD PTR [rax],eax
   1400226d4:	add    BYTE PTR ss:[rax],al
   1400226d7:	add    BYTE PTR [rax+0x37000160],dl
   1400226dd:	add    BYTE PTR [rax],al
   1400226df:	add    al,al
   1400226e1:	(bad)  
   1400226e2:	add    DWORD PTR [rax],eax
   1400226e4:	add    BYTE PTR ss:[rax],al
   1400226e7:	add    al,dh
   1400226e9:	(bad)  
   1400226ea:	add    DWORD PTR [rax],eax
   1400226ec:	cmp    DWORD PTR [rax],eax
   1400226ee:	add    BYTE PTR [rax],al
   1400226f0:	adc    BYTE PTR [rcx+0x1],ah
   1400226f3:	add    BYTE PTR [rdx],bh
   1400226f5:	add    BYTE PTR [rax],al
   1400226f7:	add    BYTE PTR [rax],dh
   1400226f9:	(bad)  
   1400226fa:	add    DWORD PTR [rax],eax
   1400226fc:	add    BYTE PTR ss:[rax],al
   1400226ff:	add    BYTE PTR [rax+0x61],dl
   140022702:	add    DWORD PTR [rax],eax
   140022704:	cmp    al,0x0
   140022706:	add    BYTE PTR [rax],al
   140022708:	jo     0x14002276b
   14002270a:	add    DWORD PTR [rax],eax
   14002270c:	cmp    eax,0x90000000
   140022711:	(bad)  
   140022712:	add    DWORD PTR [rax],eax
   140022714:	add    eax,0xb0000000
   140022719:	(bad)  
   14002271a:	add    DWORD PTR [rax],eax
   14002271c:	add    BYTE PTR [rax],al
   14002271e:	add    BYTE PTR [rax],al
   140022720:	shl    BYTE PTR [rcx+0x1],1
   140022723:	add    BYTE PTR [rax+0x0],al
   140022726:	add    BYTE PTR [rax],al
   140022728:	lock (bad) 
   14002272a:	add    DWORD PTR [rax],eax
   14002272c:	add    BYTE PTR [r8],al
   14002272f:	add    BYTE PTR [rax],dl
   140022731:	(bad)  
   140022733:	add    BYTE PTR [rax],al
   140022735:	add    BYTE PTR [rax],al
   140022737:	add    BYTE PTR [rax],dh
   140022739:	(bad)  
   14002273b:	add    BYTE PTR [rbx+0x0],al
   14002273e:	add    BYTE PTR [rax],al
   140022740:	push   rax
   140022741:	(bad)  
   140022743:	add    BYTE PTR [rax+rax*1+0x0],al
   140022747:	add    BYTE PTR [rax+0x62],dh
   14002274a:	add    DWORD PTR [rax],eax
   14002274c:	add    BYTE PTR [r8],r8b
   14002274f:	add    BYTE PTR [rax+0x162],dl
   140022755:	add    BYTE PTR [rax],al
   140022757:	add    BYTE PTR [rax+0x47000162],dh
   14002275d:	add    BYTE PTR [rax],al
   14002275f:	add    al,dl
   140022761:	(bad)  
   140022763:	add    BYTE PTR [rax+0x0],cl
   140022766:	add    BYTE PTR [rax],al
   140022768:	lock (bad) 
   14002276b:	add    BYTE PTR [rax],ah
   14002276d:	push   rax
   14002276e:	add    BYTE PTR [rax],al
   140022770:	(bad)  
   140022771:	(bad)  
   140022772:	(bad)  
   140022773:	call   FWORD PTR [rax+rdx*2+0x0]
   14002277a:	add    BYTE PTR [rax],al
   14002277c:	stos   BYTE PTR es:[rdi],al
   14002277d:	push   rax
   14002277e:	add    BYTE PTR [rax],al
   140022780:	add    DWORD PTR [rax],eax
   140022782:	add    BYTE PTR [rax],al
   140022784:	mov    dh,0x50
   140022786:	add    BYTE PTR [rax],al
   140022788:	add    al,BYTE PTR [rax]
   14002278a:	add    BYTE PTR [rax],al
   14002278c:	(bad)
   14002278f:	add    BYTE PTR [rbx],al
   140022791:	add    BYTE PTR [rax],al
   140022793:	add    cl,dl
   140022795:	push   rax
   140022796:	add    BYTE PTR [rax],al
   140022798:	add    al,0x0
   14002279a:	add    BYTE PTR [rax],al
   14002279c:	fst    DWORD PTR [rax+0x0]
   14002279f:	add    BYTE PTR [rip+0xffffffff89000000],al        # 0xc90227a5
   1400227a5:	push   rdx
   1400227a6:	add    BYTE PTR [rax],al
   1400227a8:	adc    eax,DWORD PTR [rax]
   1400227aa:	add    BYTE PTR [rax],al
   1400227ac:	(bad)  
   1400227ad:	push   rdx
   1400227ae:	add    BYTE PTR [rax],al
   1400227b0:	adc    al,0x0
   1400227b2:	add    BYTE PTR [rax],al
   1400227b4:	ficom  WORD PTR [rdx+0x0]
   1400227b7:	add    BYTE PTR [rsi],dl
   1400227b9:	add    BYTE PTR [rax],al
   1400227bb:	add    BYTE PTR [rcx],ch
   1400227bd:	push   rbx
   1400227be:	add    BYTE PTR [rax],al
   1400227c0:	(bad)  
   1400227c1:	add    BYTE PTR [rax],al
   1400227c3:	add    BYTE PTR [rbp+0x53],ch
   1400227c6:	add    BYTE PTR [rax],al
   1400227c8:	(bad)  
   1400227c9:	add    BYTE PTR [rax],al
   1400227cb:	add    BYTE PTR [rbx+rdx*2+0x0],bh
   1400227cf:	add    BYTE PTR [rbx],dl
   1400227d1:	add    BYTE PTR [rax],al
   1400227d3:	add    BYTE PTR [rcx+0x18000053],bl
   1400227d9:	add    BYTE PTR [rax],al
   1400227db:	add    dl,cl
   1400227dd:	push   rbx
   1400227de:	add    BYTE PTR [rax],al
   1400227e0:	sbb    DWORD PTR [rax],eax
   1400227e2:	add    BYTE PTR [rax],al
   1400227e4:	loope  0x140022839
   1400227e6:	add    BYTE PTR [rax],al
   1400227e8:	sbb    al,BYTE PTR [rax]
   1400227ea:	add    BYTE PTR [rax],al
   1400227ec:	repz push rbx
   1400227ee:	add    BYTE PTR [rax],al
   1400227f0:	sbb    eax,DWORD PTR [rax]
   1400227f2:	add    BYTE PTR [rax],al
   1400227f4:	std    
   1400227f5:	push   rbx
   1400227f6:	add    BYTE PTR [rax],al
   1400227f8:	sbb    al,BYTE PTR [rax]
   1400227fa:	add    BYTE PTR [rax],al
   1400227fc:	or     al,0x54
   1400227fe:	add    BYTE PTR [rax],al
   140022800:	sbb    DWORD PTR [rax],eax
   140022802:	add    BYTE PTR [rax],al
   140022804:	sbb    edx,DWORD PTR [rax+rax*1+0x0]
   140022808:	sbb    BYTE PTR [rax],al
   14002280a:	add    BYTE PTR [rax],al
   14002280c:	rex.RB push r12
   14002280e:	add    BYTE PTR [rax],al
   140022810:	sbb    al,0x0
   140022812:	add    BYTE PTR [rax],al
   140022814:	push   rsi
   140022815:	push   rsp
   140022816:	add    BYTE PTR [rax],al
   140022818:	sbb    BYTE PTR [rax],al
   14002281a:	add    BYTE PTR [rax],al
   14002281c:	movabs ds:0xf70000001d000054,eax
   140022825:	push   rbp
   140022826:	add    BYTE PTR [rax],al
   140022828:	(bad)  
   140022829:	add    BYTE PTR [rax],al
   14002282b:	add    BYTE PTR [rax+0x1f000056],dl
   140022831:	add    BYTE PTR [rax],al
   140022833:	add    BYTE PTR [rbp+0x21000056],ah
   140022839:	add    BYTE PTR [rax],al
   14002283b:	add    cl,cl
   14002283d:	push   rsi
   14002283e:	add    BYTE PTR [rax],al
   140022840:	and    al,BYTE PTR [rax]
   140022842:	add    BYTE PTR [rax],al
   140022844:	loop   0x14002289c
   140022846:	add    BYTE PTR [rax],al
   140022848:	and    eax,DWORD PTR [rax]
   14002284a:	add    BYTE PTR [rax],al
   14002284c:	and    eax,0x22000057
   140022851:	add    BYTE PTR [rax],al
   140022853:	add    BYTE PTR [rdi+rdx*2],dh
   140022856:	add    BYTE PTR [rax],al
   140022858:	and    DWORD PTR [rax],eax
   14002285a:	add    BYTE PTR [rax],al
   14002285c:	rex.RB push r15
   14002285e:	add    BYTE PTR [rax],al
   140022860:	(bad)  
   140022861:	add    BYTE PTR [rax],al
   140022863:	add    BYTE PTR [rdi+rdx*2+0x0],bh
   140022867:	add    BYTE PTR [rax+rax*1],ah
   14002286a:	add    BYTE PTR [rax],al
   14002286c:	xchg   ecx,eax
   14002286d:	push   rdi
   14002286e:	add    BYTE PTR [rax],al
   140022870:	add    BYTE PTR es:[rax],al
   140022873:	add    BYTE PTR [rdi+rdx*2+0x1e0000],dh
   14002287a:	add    BYTE PTR [rax],al
   14002287c:	test   BYTE PTR [rax+0x0],bl
   14002287f:	add    BYTE PTR [rdi],ah
   140022881:	add    BYTE PTR [rax],al
   140022883:	add    BYTE PTR [rcx+0x29000058],bl
   140022889:	add    BYTE PTR [rax],al
   14002288b:	add    BYTE PTR [rbp+0x2a000058],bh
   140022891:	add    BYTE PTR [rax],al
   140022893:	add    dh,dl
   140022895:	pop    rax
   140022896:	add    BYTE PTR [rax],al
   140022898:	sub    eax,DWORD PTR [rax]
   14002289a:	add    BYTE PTR [rax],al
   14002289c:	add    bl,BYTE PTR [rcx+0x0]
   14002289f:	add    BYTE PTR [rdx],ch
   1400228a1:	add    BYTE PTR [rax],al
   1400228a3:	add    BYTE PTR [rcx],dl
   1400228a5:	pop    rcx
   1400228a6:	add    BYTE PTR [rax],al
   1400228a8:	sub    DWORD PTR [rax],eax
   1400228aa:	add    BYTE PTR [rax],al
   1400228ac:	and    BYTE PTR [rcx+0x0],bl
   1400228af:	add    BYTE PTR [rsi],bl
   1400228b1:	add    BYTE PTR [rax],al
   1400228b3:	add    BYTE PTR [rsi+0x1d000059],cl
   1400228b9:	add    BYTE PTR [rax],al
   1400228bb:	add    BYTE PTR [rip+0x2c00005a],dl        # 0x16c02291b
   1400228c1:	add    BYTE PTR [rax],al
   1400228c3:	add    BYTE PTR [rdi],bh
   1400228c5:	pop    rdx
   1400228c6:	add    BYTE PTR [rax],al
   1400228c8:	sbb    eax,0xa8000000
   1400228cd:	pop    rdx
   1400228ce:	add    BYTE PTR [rax],al
   1400228d0:	sbb    BYTE PTR [rax],al
   1400228d2:	add    BYTE PTR [rax],al
   1400228d4:	(bad)  
   1400228d5:	pop    rbx
   1400228d6:	add    BYTE PTR [rax],al
   1400228d8:	sub    eax,0x58000000
   1400228dd:	pop    rbx
   1400228de:	add    BYTE PTR [rax],al
   1400228e0:	add    BYTE PTR cs:[rax],al
   1400228e3:	add    BYTE PTR [rdi+0x5b],ch
   1400228e6:	add    BYTE PTR [rax],al
   1400228e8:	(bad)  
   1400228e9:	add    BYTE PTR [rax],al
   1400228eb:	add    BYTE PTR [rcx+0x2e00005b],cl
   1400228f1:	add    BYTE PTR [rax],al
   1400228f3:	add    BYTE PTR [rax+0x2d00005b],bl
   1400228f9:	add    BYTE PTR [rax],al
   1400228fb:	add    BYTE PTR [rdi+0x1800005b],ah
   140022901:	add    BYTE PTR [rax],al
   140022903:	add    bh,ch
   140022905:	pop    rbx
   140022906:	add    BYTE PTR [rax],al
   140022908:	xor    BYTE PTR [rax],al
   14002290a:	add    BYTE PTR [rax],al
   14002290c:	(bad)  
   14002290d:	pop    rsp
   14002290e:	add    BYTE PTR [rax],al
   140022910:	xor    al,BYTE PTR [rax]
   140022912:	add    BYTE PTR [rax],al
   140022914:	xchg   BYTE PTR [rax+rax*1+0x0],bl
   140022918:	xor    eax,DWORD PTR [rax]
   14002291a:	add    BYTE PTR [rax],al
   14002291c:	cdq    
   14002291d:	pop    rsp
   14002291e:	add    BYTE PTR [rax],al
   140022920:	xor    al,BYTE PTR [rax]
   140022922:	add    BYTE PTR [rax],al
   140022924:	test   al,0x5c
   140022926:	add    BYTE PTR [rax],al
   140022928:	sbb    BYTE PTR [rax],al
   14002292a:	add    BYTE PTR [rax],al
   14002292c:	or     al,0x5d
   14002292e:	add    BYTE PTR [rax],al
   140022930:	xor    al,0x0
   140022932:	add    BYTE PTR [rax],al
   140022934:	and    ebx,DWORD PTR [rbp+0x0]
   140022937:	add    BYTE PTR [rsi],dh
   140022939:	add    BYTE PTR [rax],al
   14002293b:	add    BYTE PTR [rax+0x5d],cl
   14002293e:	add    BYTE PTR [rax],al
   140022940:	(bad)  
   140022941:	add    BYTE PTR [rax],al
   140022943:	add    BYTE PTR [rdx+0x5d],bh
   140022946:	add    BYTE PTR [rax],al
   140022948:	cmp    BYTE PTR [rax],al
   14002294a:	add    BYTE PTR [rax],al
   14002294c:	popf   
   14002294d:	pop    rbp
   14002294e:	add    BYTE PTR [rax],al
   140022950:	(bad)  
   140022951:	add    BYTE PTR [rax],al
   140022953:	add    BYTE PTR [rcx+0x3600005d],bh
   140022959:	add    BYTE PTR [rax],al
   14002295b:	add    bl,dh
   14002295d:	pop    rbp
   14002295e:	add    BYTE PTR [rax],al
   140022960:	cmp    DWORD PTR [rax],eax
   140022962:	add    BYTE PTR [rax],al
   140022964:	or     bl,BYTE PTR [rsi+0x0]
   140022967:	add    BYTE PTR [rdx],bh
   140022969:	add    BYTE PTR [rax],al
   14002296b:	add    BYTE PTR [rsi],bl
   14002296d:	pop    rsi
   14002296e:	add    BYTE PTR [rax],al
   140022970:	cmp    eax,DWORD PTR [rax]
   140022972:	add    BYTE PTR [rax],al
   140022974:	imul   ebx,DWORD PTR [rsi+0x0],0x3a00
   14002297b:	add    BYTE PTR [rax+0x5e],bh
   14002297e:	add    BYTE PTR [rax],al
   140022980:	cmp    DWORD PTR [rax],eax
   140022982:	add    BYTE PTR [rax],al
   140022984:	xchg   DWORD PTR [rsi+0x0],ebx
   140022987:	add    BYTE PTR [rsi],dh
   140022989:	add    BYTE PTR [rax],al
   14002298b:	add    BYTE PTR [rax+0x3c00005e],dh
   140022991:	add    BYTE PTR [rax],al
   140022993:	add    bh,al
   140022995:	pop    rsi
   140022996:	add    BYTE PTR [rax],al
   140022998:	cmp    eax,0xdb000000
   14002299d:	pop    rsi
   14002299e:	add    BYTE PTR [rax],al
   1400229a0:	add    BYTE PTR ds:[rax],al
   1400229a3:	add    BYTE PTR [rdi],al
   1400229a5:	pop    rdi
   1400229a6:	add    BYTE PTR [rax],al
   1400229a8:	cmp    eax,0x16000000
   1400229ad:	pop    rdi
   1400229ae:	add    BYTE PTR [rax],al
   1400229b0:	cmp    al,0x0
   1400229b2:	add    BYTE PTR [rax],al
   1400229b4:	and    eax,0x3600005f
   1400229b9:	add    BYTE PTR [rax],al
   1400229bb:	add    BYTE PTR [rdi+rbx*2],dh
   1400229be:	add    BYTE PTR [rax],al
   1400229c0:	sbb    BYTE PTR [rax],al
   1400229c2:	add    BYTE PTR [rax],al
   1400229c4:	push   rcx
   1400229c5:	pop    rdi
   1400229c6:	add    BYTE PTR [rax],al
   1400229c8:	adc    eax,DWORD PTR [rax]
   1400229ca:	add    BYTE PTR [rax],al
   1400229cc:	(bad)  
   1400229cd:	pop    rdi
   1400229ce:	add    BYTE PTR [rax],al
   1400229d0:	add    eax,0xad000000
   1400229d5:	pop    rdi
   1400229d6:	add    BYTE PTR [rax],al
   1400229d8:	add    al,0x0
   1400229da:	add    BYTE PTR [rax],al
   1400229dc:	or     al,0x60
   1400229de:	add    BYTE PTR [rax],al
   1400229e0:	add    eax,DWORD PTR [rax]
   1400229e2:	add    BYTE PTR [rax],al
   1400229e4:	ins    BYTE PTR es:[rdi],dx
   1400229e5:	(bad)  
   1400229e6:	add    BYTE PTR [rax],al
   1400229e8:	add    al,BYTE PTR [rax]
   1400229ea:	add    BYTE PTR [rax],al
   1400229ec:	jnp    0x140022a4e
   1400229ee:	add    BYTE PTR [rax],al
   1400229f0:	add    DWORD PTR [rax],eax
   1400229f2:	add    BYTE PTR [rax],al
   1400229f4:	xchg   DWORD PTR [rax+0x0],esp
   1400229f7:	add    BYTE PTR [rdx],dl
   1400229f9:	add    BYTE PTR [rax],al
   1400229fb:	add    BYTE PTR [rsi+0x11000060],dl
   140022a01:	add    BYTE PTR [rax],al
   140022a03:	add    BYTE PTR [rbp+0x10000060],ah
   140022a09:	add    BYTE PTR [rax],al
   140022a0b:	add    BYTE PTR [rax+riz*2+0x0],dh
   140022a12:	add    BYTE PTR [rax],al
   140022a14:	or     ah,BYTE PTR [rcx+0x0]
   140022a17:	add    bh,bh
   140022a19:	(bad)  
   140022a1a:	(bad)  
   140022a1b:	call   FWORD PTR [rdi]
   140022a1d:	(bad)  
   140022a1e:	add    BYTE PTR [rax],al
   140022a20:	add    eax,0x37000000
   140022a25:	(bad)  
   140022a26:	add    BYTE PTR [rax],al
   140022a28:	add    al,0x0
   140022a2a:	add    BYTE PTR [rax],al
   140022a2c:	pushf  
   140022a2d:	(bad)  
   140022a2e:	add    BYTE PTR [rax],al
   140022a30:	add    eax,DWORD PTR [rax]
   140022a32:	add    BYTE PTR [rax],al
   140022a34:	cld    
   140022a35:	(bad)  
   140022a36:	add    BYTE PTR [rax],al
   140022a38:	add    al,BYTE PTR [rax]
   140022a3a:	add    BYTE PTR [rax],al
   140022a3c:	or     esp,DWORD PTR [rdx+0x0]
   140022a3f:	add    BYTE PTR [rcx],al
   140022a41:	add    BYTE PTR [rax],al
   140022a43:	add    BYTE PTR [rdi],dl
   140022a45:	(bad)  
   140022a46:	add    BYTE PTR [rax],al
   140022a48:	add    BYTE PTR [rax],al
   140022a4a:	add    BYTE PTR [rax],al
   140022a4c:	and    eax,0xff000062
   140022a51:	(bad)  
   140022a52:	(bad)  
   140022a53:	(bad)  
   140022a54:	cmp    ah,BYTE PTR [rdx+0x0]
   140022a57:	add    BYTE PTR [rsi],dl
   140022a59:	add    BYTE PTR [rax],al
   140022a5b:	add    BYTE PTR [rbp+0x62],bh
   140022a5e:	add    BYTE PTR [rax],al
   140022a60:	adc    eax,DWORD PTR [rax]
   140022a62:	add    BYTE PTR [rax],al
   140022a64:	mov    WORD PTR [rdx+0x0],fs
   140022a67:	add    BYTE PTR [rip+0xffffffff9b000000],al        # 0xdb022a6d
   140022a6d:	(bad)  
   140022a6e:	add    BYTE PTR [rax],al
   140022a70:	add    al,0x0
   140022a72:	add    BYTE PTR [rax],al
   140022a74:	cld    
   140022a75:	(bad)  
   140022a76:	add    BYTE PTR [rax],al
   140022a78:	add    eax,DWORD PTR [rax]
   140022a7a:	add    BYTE PTR [rax],al
   140022a7c:	pop    rsp
   140022a7d:	movsxd eax,DWORD PTR [rax]
   140022a7f:	add    BYTE PTR [rdx],al
   140022a81:	add    BYTE PTR [rax],al
   140022a83:	add    BYTE PTR [rbx+0x63],ch
   140022a86:	add    BYTE PTR [rax],al
   140022a88:	add    DWORD PTR [rax],eax
   140022a8a:	add    BYTE PTR [rax],al
   140022a8c:	ja     0x140022af1
   140022a8e:	add    BYTE PTR [rax],al
   140022a90:	add    BYTE PTR [rax],al
   140022a92:	add    BYTE PTR [rax],al
   140022a94:	test   DWORD PTR [rbx+0x0],esp
   140022a97:	add    bh,bh
   140022a99:	(bad)  
   140022a9a:	(bad)  
   140022a9b:	call   FWORD PTR [rdx+0x5000063]
   140022aa1:	add    BYTE PTR [rax],al
   140022aa3:	add    al,cl
   140022aa5:	movsxd eax,DWORD PTR [rax]
   140022aa7:	add    BYTE PTR [rax+rax*1],al
   140022aaa:	add    BYTE PTR [rax],al
   140022aac:	sub    al,0x64
   140022aae:	add    BYTE PTR [rax],al
   140022ab0:	add    eax,DWORD PTR [rax]
   140022ab2:	add    BYTE PTR [rax],al
   140022ab4:	mov    WORD PTR [rax+rax*1+0x0],fs
   140022ab8:	add    al,BYTE PTR [rax]
   140022aba:	add    BYTE PTR [rax],al
   140022abc:	fwait
   140022abd:	add    BYTE PTR fs:[rax],al
   140022ac0:	add    DWORD PTR [rax],eax
   140022ac2:	add    BYTE PTR [rax],al
   140022ac4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140022ac5:	add    BYTE PTR fs:[rax],al
   140022ac8:	sldt   WORD PTR [rax]
   140022acb:	add    BYTE PTR [rsi+0xe000064],dh
   140022ad1:	add    BYTE PTR [rax],al
   140022ad3:	add    ch,al
   140022ad5:	add    BYTE PTR fs:[rax],al
   140022ad8:	or     eax,0xd4000000
   140022add:	add    BYTE PTR fs:[rax],al
   140022ae0:	add    BYTE PTR [rax],al
   140022ae2:	add    BYTE PTR [rax],al
   140022ae4:	sub    ah,BYTE PTR [rbp+0x0]
   140022ae7:	add    bh,bh
   140022ae9:	(bad)  
   140022aea:	(bad)  
   140022aeb:	(bad)  
   140022aec:	cmp    al,0x65
   140022aee:	add    BYTE PTR [rax],al
   140022af0:	add    eax,0x54000000
   140022af5:	add    BYTE PTR gs:[rax],al
   140022af8:	add    al,0x0
   140022afa:	add    BYTE PTR [rax],al
   140022afc:	lods   eax,DWORD PTR ds:[rsi]
   140022afd:	add    BYTE PTR gs:[rax],al
   140022b00:	add    eax,DWORD PTR [rax]
   140022b02:	add    BYTE PTR [rax],al
   140022b04:	or     al,0x66
   140022b06:	add    BYTE PTR [rax],al
   140022b08:	add    al,BYTE PTR [rax]
   140022b0a:	add    BYTE PTR [rax],al
   140022b0c:	sbb    esp,DWORD PTR [rsi+0x0]
   140022b0f:	add    BYTE PTR [rcx],al
   140022b11:	add    BYTE PTR [rax],al
   140022b13:	add    BYTE PTR [rdi],ah
   140022b15:	data16 add BYTE PTR [rax],al
   140022b18:	or     BYTE PTR [rax],al
   140022b1a:	add    BYTE PTR [rax],al
   140022b1c:	data16 add BYTE PTR ss:[rax],al
   140022b20:	(bad)  
   140022b21:	add    BYTE PTR [rax],al
   140022b23:	add    BYTE PTR [rbp+0x66],al
   140022b26:	add    BYTE PTR [rax],al
   140022b28:	(bad)  
   140022b29:	add    BYTE PTR [rax],al
   140022b2b:	add    BYTE PTR [rsi+riz*2+0x0],dl
   140022b2f:	add    BYTE PTR [rax],al
   140022b31:	add    BYTE PTR [rax],al
   140022b33:	add    BYTE PTR [rcx+0xc000066],ah
   140022b39:	add    BYTE PTR [rax],al
   140022b3b:	add    BYTE PTR [rsi+riz*2+0xb0000],ch
   140022b42:	add    BYTE PTR [rax],al
   140022b44:	or     al,0x67
   140022b46:	add    BYTE PTR [rax],al
   140022b48:	or     al,BYTE PTR [rax]
   140022b4a:	add    BYTE PTR [rax],al
   140022b4c:	(bad)  
   140022b4d:	add    BYTE PTR [eax],al
   140022b50:	or     DWORD PTR [rax],eax
   140022b52:	add    BYTE PTR [rax],al
   140022b54:	and    ah,BYTE PTR [rdi+0x0]
   140022b57:	add    BYTE PTR [rax],al
   140022b59:	add    BYTE PTR [rax],al
   140022b5b:	add    BYTE PTR [rbp+0x67],ah
   140022b5e:	add    BYTE PTR [rax],al
   140022b60:	(bad)  
   140022b61:	(bad)  
   140022b62:	(bad)  
   140022b63:	push   QWORD PTR [rdi+0x67]
   140022b66:	add    BYTE PTR [rax],al
   140022b68:	add    eax,0x95000000
   140022b6d:	add    BYTE PTR [eax],al
   140022b70:	(bad)  
   140022b71:	add    BYTE PTR [rax],al
   140022b73:	add    BYTE PTR [rsi+0x5000067],bh
   140022b79:	add    BYTE PTR [rax],al
   140022b7b:	add    bh,dh
   140022b7d:	add    BYTE PTR [eax],al
   140022b80:	add    al,0x0
   140022b82:	add    BYTE PTR [rax],al
   140022b84:	rex.WR push 0x30000
   140022b8a:	add    BYTE PTR [rax],al
   140022b8c:	lods   al,BYTE PTR ds:[rsi]
   140022b8d:	push   0x20000
   140022b92:	add    BYTE PTR [rax],al
   140022b94:	mov    ebx,0x1000068
   140022b99:	add    BYTE PTR [rax],al
   140022b9b:	add    bh,al
   140022b9d:	push   0x420000
   140022ba2:	add    BYTE PTR [rax],al
   140022ba4:	(bad)  
   140022ba5:	push   0x410000
   140022baa:	add    BYTE PTR [rax],al
   140022bac:	in     eax,0x68
   140022bae:	add    BYTE PTR [rax],al
   140022bb0:	add    BYTE PTR [rax],al
   140022bb3:	add    ah,dh
   140022bb5:	push   0x0
   140022bba:	add    BYTE PTR [rax],al
   140022bbc:	imul   eax,DWORD PTR [r8],0x4600
   140022bc3:	add    BYTE PTR [rcx+rbp*2+0x0],cl
   140022bc7:	add    BYTE PTR [rbp+0x0],al
   140022bca:	add    BYTE PTR [rax],al
   140022bcc:	lods   al,BYTE PTR ds:[rsi]
   140022bcd:	imul   eax,DWORD PTR [rax],0x4400
   140022bd3:	add    BYTE PTR [rdi+0x43000069],dh
   140022bd9:	add    BYTE PTR [rax],al
   140022bdb:	add    dl,al
   140022bdd:	imul   eax,DWORD PTR [rax],0x0
   140022be3:	add    BYTE PTR [rip+0xffffffffff00006a],al        # 0x13f022c53
   140022be9:	(bad)  
   140022bea:	(bad)  
   140022beb:	call   FWORD PTR [rdx]
   140022bed:	push   0x0
   140022bef:	add    BYTE PTR [rax+rax*1],al
   140022bf2:	add    BYTE PTR [rax],al
   140022bf4:	sub    BYTE PTR [rdx+0x0],0x0
   140022bf8:	add    eax,DWORD PTR [rax]
   140022bfa:	add    BYTE PTR [rax],al
   140022bfc:	fsubr  QWORD PTR [rdx+0x0]
   140022bff:	add    BYTE PTR [rdx],al
   140022c01:	add    BYTE PTR [rax],al
   140022c03:	add    bl,ch
   140022c05:	push   0x0
   140022c07:	add    BYTE PTR [rcx],al
   140022c09:	add    BYTE PTR [rax],al
   140022c0b:	add    bh,dh
   140022c0d:	push   0x0
   140022c0f:	add    BYTE PTR [rcx+0x0],cl
   140022c12:	add    BYTE PTR [rax],al
   140022c14:	(bad)  
   140022c15:	imul   eax,DWORD PTR [rax],0x0
   140022c18:	rex.W add BYTE PTR [rax],al
   140022c1b:	add    BYTE PTR [rip+0x4700006b],dl        # 0x187022c8c
   140022c21:	add    BYTE PTR [rax],al
   140022c23:	add    BYTE PTR [rbx+rbp*2],ah
   140022c26:	add    BYTE PTR [rax],al
   140022c28:	add    BYTE PTR [rax],al
   140022c2a:	add    BYTE PTR [rax],al
   140022c2c:	jp     0x140022c99
   140022c2e:	add    BYTE PTR [rax],al
   140022c30:	(bad)  
   140022c31:	(bad)  
   140022c32:	(bad)  
   140022c33:	call   QWORD PTR [rcx]
   140022c35:	and    DWORD PTR [rsi],eax
   140022c37:	add    BYTE PTR [rcx],ah
   140022c39:	or     al,BYTE PTR fs:[rax]
   140022c3c:	sbb    al,0x34
   140022c3e:	or     BYTE PTR [rax],al
   140022c40:	(bad)  
   140022c41:	push   rdx
   140022c42:	or     dh,BYTE PTR [rax-0x32]
   140022c45:	add    DWORD PTR ds:[rax],eax
   140022c48:	loopne 0x140022c1e
   140022c4a:	add    DWORD PTR [rax],eax
   140022c4c:	(bad)  
   140022c4d:	(bad)  
   140022c4e:	(bad)  
   140022c4f:	call   QWORD PTR [rax]
   140022c51:	movsxd eax,DWORD PTR [rcx]
   140022c53:	add    BYTE PTR [rax],al
   140022c55:	add    BYTE PTR [rax],al
   140022c57:	add    BYTE PTR [rax],dh
   140022c59:	movsxd eax,DWORD PTR [rcx]
   140022c5b:	add    BYTE PTR [rcx],al
   140022c5d:	add    BYTE PTR [rax],al
   140022c5f:	add    BYTE PTR [rax+0x63],dl
   140022c62:	add    DWORD PTR [rax],eax
   140022c64:	add    al,BYTE PTR [rax]
   140022c66:	add    BYTE PTR [rax],al
   140022c68:	jo     0x140022ccd
   140022c6a:	add    DWORD PTR [rax],eax
   140022c6c:	(bad)  
   140022c6d:	(bad)  
   140022c6e:	(bad)  
   140022c6f:	inc    DWORD PTR [rax]
   140022c71:	add    BYTE PTR [rax],al
   140022c73:	add    BYTE PTR [rax+rax*1],al
   140022c76:	add    BYTE PTR [rax],al
   140022c78:	add    BYTE PTR [rax],al
   140022c7a:	add    BYTE PTR [rax],al
   140022c7c:	add    eax,0x0
   140022c81:	add    BYTE PTR [rax],al
   140022c83:	add    BYTE PTR [rsi],al
   140022c85:	add    BYTE PTR [rax],al
   140022c87:	add    BYTE PTR [rax],al
   140022c89:	add    BYTE PTR [rax],al
   140022c8b:	add    BYTE PTR [rax-0xffff94],dl
   140022c91:	(bad)  
   140022c92:	(bad)  
   140022c93:	call   rcx
   140022c95:	ins    BYTE PTR es:[rdi],dx
   140022c96:	add    BYTE PTR [rax],al
   140022c98:	add    eax,DWORD PTR [rax]
   140022c9a:	add    BYTE PTR [rax],al
   140022c9c:	fsubr  QWORD PTR [rax+rax*1+0x0]
   140022ca0:	add    al,BYTE PTR [rax]
   140022ca2:	add    BYTE PTR [rax],al
   140022ca4:	out    0x6c,al
   140022ca6:	add    BYTE PTR [rax],al
   140022ca8:	add    DWORD PTR [rax],eax
   140022caa:	add    BYTE PTR [rax],al
   140022cac:	icebp  
   140022cad:	ins    BYTE PTR es:[rdi],dx
   140022cae:	add    BYTE PTR [rax],al
   140022cb0:	add    BYTE PTR [rax],al
   140022cb2:	add    BYTE PTR [rax],al
   140022cb4:	cld    
   140022cb5:	ins    BYTE PTR es:[rdi],dx
   140022cb6:	add    BYTE PTR [rax],al
   140022cb8:	(bad)  
   140022cb9:	(bad)  
   140022cba:	(bad)  
   140022cbb:	call   FWORD PTR [rcx]
   140022cbd:	or     al,0x4
   140022cbf:	add    BYTE PTR [rdx+rsi*1],cl
   140022cc2:	or     BYTE PTR [rax+0x7],dh
   140022cc5:	push   rax
   140022cc6:	(bad)  
   140022cc7:	xor    dh,cl
   140022cc9:	add    DWORD PTR ds:[rax],eax
   140022ccc:	adc    ch,dl
   140022cce:	add    DWORD PTR [rax],eax
   140022cd0:	sbb    DWORD PTR [rip+0x641d0006],ebx        # 0x1a41f2cdc
   140022cd6:	or     eax,DWORD PTR [rax]
   140022cd8:	sbb    BYTE PTR [rax+rcx*1],dh
   140022cdb:	add    BYTE PTR [rdx],cl
   140022cdd:	push   rdx
   140022cde:	(bad)  
   140022cdf:	jo     0x140022caf
   140022ce1:	add    DWORD PTR ds:[rax],eax
   140022ce4:	adc    ch,dl
   140022ce6:	add    DWORD PTR [rax],eax
   140022ce8:	add    BYTE PTR [rax],al
   140022cea:	add    BYTE PTR [rax],al
   140022cec:	add    DWORD PTR [rax],eax
   140022cee:	add    BYTE PTR [rax],al
   140022cf0:	add    al,BYTE PTR [rax]
   140022cf2:	add    BYTE PTR [rax],al
   140022cf4:	add    DWORD PTR [rax],eax
   140022cf6:	add    BYTE PTR [rax],al
   140022cf8:	cld    
   140022cf9:	sub    al,0x2
   140022cfb:	add    BYTE PTR [rax+0x0],al
	...
   140022d06:	add    BYTE PTR [rax],al
   140022d08:	mov    al,0x63
   140022d0a:	add    DWORD PTR [rax],eax
   140022d0c:	rex.W add BYTE PTR [rax],al
   140022d0f:	add    bh,bh
   140022d11:	(bad)  
   140022d12:	(bad)  
   140022d13:	inc    DWORD PTR [rax]
   140022d15:	add    BYTE PTR [rax],al
   140022d17:	add    BYTE PTR [rax],al
   140022d19:	add    BYTE PTR [rax],al
   140022d1b:	add    BYTE PTR [rax-0xfffe9d],dl
   140022d21:	(bad)  
   140022d22:	(bad)  
   140022d23:	inc    DWORD PTR [rax]
   140022d25:	add    BYTE PTR [rax],al
   140022d27:	add    bh,bh
   140022d29:	(bad)  
   140022d2a:	(bad)  
   140022d2b:	inc    DWORD PTR [rax]
   140022d2d:	add    BYTE PTR [rax],al
   140022d2f:	add    BYTE PTR [rbx],al
   140022d31:	add    BYTE PTR [rax],al
   140022d33:	add    BYTE PTR [rax],al
   140022d35:	add    BYTE PTR [rax],al
   140022d37:	add    bh,bh
   140022d39:	(bad)  
   140022d3a:	(bad)  
   140022d3b:	inc    DWORD PTR [rax]
   140022d3d:	add    BYTE PTR [rax],al
   140022d3f:	add    BYTE PTR [rax],dh
   140022d41:	ins    DWORD PTR es:[rdi],dx
   140022d42:	add    BYTE PTR [rax],al
   140022d44:	(bad)  
   140022d45:	(bad)  
   140022d46:	(bad)  
   140022d47:	jmp    QWORD PTR [rax+0x6d]
   140022d4a:	add    BYTE PTR [rax],al
   140022d4c:	add    BYTE PTR [rax],al
   140022d4e:	add    BYTE PTR [rax],al
   140022d50:	je     0x140022dbf
   140022d52:	add    BYTE PTR [rax],al
   140022d54:	add    DWORD PTR [rax],eax
   140022d56:	add    BYTE PTR [rax],al
   140022d58:	mov    BYTE PTR [rbp+0x0],ch
   140022d5b:	add    BYTE PTR [rax],al
   140022d5d:	add    BYTE PTR [rax],al
   140022d5f:	add    BYTE PTR [rdx-0xffff93],bl
   140022d65:	(bad)  
   140022d66:	(bad)  
   140022d67:	push   QWORD PTR [rax+0x163]
   140022d6d:	add    BYTE PTR [rax],al
   140022d6f:	add    BYTE PTR [rdi+0x2000163],bh
   140022d75:	add    BYTE PTR [rax],al
   140022d77:	add    ch,dh
   140022d79:	movsxd eax,DWORD PTR [rcx]
   140022d7b:	add    BYTE PTR [rax],al
   140022d7d:	add    BYTE PTR [rax],al
   140022d7f:	add    BYTE PTR [rcx],bl
   140022d81:	or     al,BYTE PTR [rdx]
   140022d83:	add    BYTE PTR [rdx],cl
   140022d85:	xor    al,BYTE PTR [rsi]
   140022d87:	push   rax
   140022d88:	(bad)  
   140022d89:	add    DWORD PTR ds:[rax],eax
   140022d8c:	rex (bad) 
   140022d8e:	add    DWORD PTR [rax],eax
   140022d90:	sbb    DWORD PTR [rax],ebx
   140022d92:	add    al,0x0
   140022d94:	sbb    BYTE PTR [rcx+rcx*1],dh
   140022d97:	add    BYTE PTR [rdx],cl
   140022d99:	push   rdx
   140022d9a:	(bad)  
   140022d9b:	jo     0x140022d6b
   140022d9d:	add    DWORD PTR ds:[rax],eax
   140022da0:	rex (bad) 
   140022da2:	add    DWORD PTR [rax],eax
	...
   140022dac:	add    DWORD PTR [rax],eax
   140022dae:	add    BYTE PTR [rax],al
   140022db0:	add    DWORD PTR [rax],eax
   140022db2:	add    BYTE PTR [rax],al
   140022db4:	mov    eax,0x4000022d
	...
   140022dc5:	add    DWORD PTR fs:[rax],eax
   140022dc8:	cmp    BYTE PTR [rax],al
   140022dca:	add    BYTE PTR [rax],al
   140022dcc:	mov    al,0x6d
   140022dce:	add    BYTE PTR [rax],al
   140022dd0:	(bad)  
   140022dd1:	(bad)  
   140022dd2:	(bad)  
   140022dd3:	push   rdx
   140022dd5:	ins    DWORD PTR es:[rdi],dx
   140022dd6:	add    BYTE PTR [rax],al
   140022dd8:	add    BYTE PTR [rax],al
   140022dda:	add    BYTE PTR [rax],al
   140022ddc:	sbb    al,0x6e
   140022dde:	add    BYTE PTR [rax],al
   140022de0:	(bad)  
   140022de1:	(bad)  
   140022de2:	(bad)  
   140022de3:	inc    DWORD PTR [rax]
   140022de5:	add    DWORD PTR fs:[rax],eax
   140022de8:	add    BYTE PTR [rax],al
   140022dea:	add    BYTE PTR [rax],al
   140022dec:	or     eax,0x1000164
   140022df1:	add    BYTE PTR [rax],al
   140022df3:	add    BYTE PTR [rsp+riz*2],ah
   140022df6:	add    DWORD PTR [rax],eax
   140022df8:	add    BYTE PTR [rax],al
   140022dfa:	add    BYTE PTR [rax],al
   140022dfc:	and    DWORD PTR [rax],eax
   140022dfe:	add    BYTE PTR [rax],al
   140022e00:	xor    BYTE PTR [rsi+0x0],ch
   140022e03:	add    BYTE PTR [rbp+0x6e],cl
   140022e06:	add    BYTE PTR [rax],al
   140022e08:	and    BYTE PTR [rsi],ch
   140022e0a:	add    al,BYTE PTR [rax]
   140022e0c:	and    DWORD PTR [rip+0x34050002],eax        # 0x174072e14
   140022e12:	add    al,0x0
   140022e14:	xor    BYTE PTR [rsi+0x0],ch
   140022e17:	add    BYTE PTR [rbp+0x6e],cl
   140022e1a:	add    BYTE PTR [rax],al
   140022e1c:	and    BYTE PTR [rsi],ch
   140022e1e:	add    al,BYTE PTR [rax]
   140022e20:	add    DWORD PTR [rcx+rax*1],eax
   140022e23:	add    BYTE PTR [rdx+rax*2],al
   140022e26:	add    BYTE PTR [rax],al
   140022e28:	adc    DWORD PTR [rax+rcx*1],ebx
   140022e2b:	add    BYTE PTR [rsp+rdx*2],bl
   140022e2e:	or     eax,0xc341700
   140022e33:	add    BYTE PTR [rcx],cl
   140022e35:	push   rdx
   140022e36:	add    eax,0x27003c0
   140022e3b:	(bad)  
   140022e3c:	(bad)  
   140022e3d:	add    DWORD PTR ds:[rax],eax
   140022e40:	jo     0x140022e17
   140022e42:	add    DWORD PTR [rax],eax
   140022e44:	(bad)  
   140022e45:	(bad)  
   140022e46:	(bad)  
   140022e47:	push   QWORD PTR [rax]
   140022e49:	add    DWORD PTR fs:[rax],eax
   140022e4c:	add    BYTE PTR [rax],al
   140022e4e:	add    BYTE PTR [rax],al
   140022e50:	push   rax
   140022e51:	add    DWORD PTR fs:[rax],eax
   140022e54:	add    DWORD PTR [rax],eax
   140022e56:	add    BYTE PTR [rax],al
   140022e58:	jo     0x140022ebe
   140022e5a:	add    DWORD PTR [rax],eax
   140022e5c:	add    al,BYTE PTR [rax]
   140022e5e:	add    BYTE PTR [rax],al
   140022e60:	nop
   140022e61:	add    DWORD PTR fs:[rax],eax
   140022e64:	(bad)  
   140022e65:	(bad)  
   140022e66:	(bad)  
   140022e67:	inc    DWORD PTR [rax]
   140022e69:	add    BYTE PTR [rax],al
   140022e6b:	add    BYTE PTR [rax+rax*1],al
   140022e6e:	add    BYTE PTR [rax],al
   140022e70:	add    BYTE PTR [rax],al
   140022e72:	add    BYTE PTR [rax],al
   140022e74:	add    eax,0x0
   140022e79:	add    BYTE PTR [rax],al
   140022e7b:	add    BYTE PTR [rsi],al
   140022e7d:	add    BYTE PTR [rax],al
   140022e7f:	add    BYTE PTR [rax],al
   140022e81:	add    BYTE PTR [rax],al
   140022e83:	add    BYTE PTR [rax-0xffff92],al
   140022e89:	(bad)  
   140022e8a:	(bad)  
   140022e8b:	push   QWORD PTR [rcx]
   140022e8d:	outs   dx,DWORD PTR ds:[rsi]
   140022e8e:	add    BYTE PTR [rax],al
   140022e90:	add    eax,DWORD PTR [rax]
   140022e92:	add    BYTE PTR [rax],al
   140022e94:	cmp    al,0x6f
   140022e96:	add    BYTE PTR [rax],al
   140022e98:	add    al,BYTE PTR [rax]
   140022e9a:	add    BYTE PTR [rax],al
   140022e9c:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140022e9e:	add    BYTE PTR [rax],al
   140022ea0:	add    DWORD PTR [rax],eax
   140022ea2:	add    BYTE PTR [rax],al
   140022ea4:	push   rcx
   140022ea5:	outs   dx,DWORD PTR ds:[rsi]
   140022ea6:	add    BYTE PTR [rax],al
   140022ea8:	add    BYTE PTR [rax],al
   140022eaa:	add    BYTE PTR [rax],al
   140022eac:	pop    rsp
   140022ead:	outs   dx,DWORD PTR ds:[rsi]
   140022eae:	add    BYTE PTR [rax],al
   140022eb0:	(bad)  
   140022eb1:	(bad)  
   140022eb2:	(bad)  
   140022eb3:	call   FWORD PTR [rcx]
   140022eb5:	or     eax,DWORD PTR [rbx]
   140022eb7:	add    BYTE PTR [rbx],cl
   140022eb9:	rex.X (bad) 
   140022ebb:	push   rax
   140022ebc:	(bad)  
   140022ebd:	xor    BYTE PTR [rax],al
   140022ebf:	add    dh,cl
   140022ec1:	add    DWORD PTR ds:[rax],eax
   140022ec4:	movabs al,ds:0x1d00061d190001d5
   140022ecd:	or     eax,DWORD PTR fs:[rax]
   140022ed0:	sbb    BYTE PTR [rcx+rcx*1],dh
   140022ed3:	add    BYTE PTR [rdx],cl
   140022ed5:	push   rdx
   140022ed6:	(bad)  
   140022ed7:	jo     0x140022ea7
   140022ed9:	add    DWORD PTR ds:[rax],eax
   140022edc:	movabs al,ds:0x1d5
   140022ee5:	add    BYTE PTR [rax],al
   140022ee7:	add    BYTE PTR [rcx],al
   140022ee9:	add    BYTE PTR [rax],al
   140022eeb:	add    BYTE PTR [rcx],al
   140022eed:	add    BYTE PTR [rax],al
   140022eef:	add    ah,dh
   140022ef1:	add    al,BYTE PTR cs:[rax]
   140022ef4:	add    BYTE PTR [rax],al
	...
   140022eff:	add    BYTE PTR [rax+0x48000164],dh
   140022f05:	add    BYTE PTR [rax],al
   140022f07:	add    BYTE PTR [rax-0xffff91],ah
   140022f0d:	(bad)  
   140022f0e:	(bad)  
   140022f0f:	(bad)  
   140022f10:	fisubr DWORD PTR [rdi+0x0]
   140022f13:	add    BYTE PTR [rax],al
   140022f15:	add    BYTE PTR [rax],al
   140022f17:	add    bl,bh
   140022f19:	outs   dx,DWORD PTR ds:[rsi]
   140022f1a:	add    BYTE PTR [rax],al
   140022f1c:	(bad)  
   140022f1d:	(bad)  
   140022f1e:	(bad)  
   140022f1f:	push   QWORD PTR [rax+0x164]
   140022f25:	add    BYTE PTR [rax],al
   140022f27:	add    BYTE PTR [rsi+0x1000164],bh
   140022f2d:	add    BYTE PTR [rax],al
   140022f2f:	add    ah,bl
   140022f31:	add    DWORD PTR fs:[rax],eax
   140022f34:	add    BYTE PTR [rax],al
   140022f36:	add    BYTE PTR [rax],al
   140022f38:	adc    DWORD PTR [rcx],esi
   140022f3a:	or     eax,DWORD PTR [rax]
   140022f3c:	xor    DWORD PTR [rcx+riz*2],esi
   140022f3f:	add    BYTE PTR [rcx],ah
   140022f41:	add    DWORD PTR [rax+0x0],ebx
   140022f44:	sbb    dh,al
   140022f46:	sbb    al,ah
   140022f48:	(bad)  
   140022f49:	rcl    BYTE PTR [rax+rax*8],1
   140022f4c:	adc    dh,BYTE PTR [rax+0x11]
   140022f4f:	(bad)  
   140022f50:	adc    BYTE PTR [rax+0x0],dl
   140022f53:	add    dh,cl
   140022f55:	add    DWORD PTR ds:[rax],eax
   140022f58:	rcl    ch,1
   140022f5a:	add    DWORD PTR [rax],eax
   140022f5c:	(bad)  
   140022f5d:	(bad)  
   140022f5e:	(bad)  
   140022f5f:	push   rax
   140022f61:	add    DWORD PTR fs:[rax],eax
   140022f64:	add    BYTE PTR [rax],al
   140022f66:	add    BYTE PTR [rax],al
   140022f68:	adc    BYTE PTR [rbp+0x1],ah
   140022f6b:	add    BYTE PTR [rax],al
   140022f6d:	add    BYTE PTR [rax],al
   140022f6f:	add    BYTE PTR [rax],dh
   140022f71:	add    DWORD PTR gs:[rax],eax
   140022f74:	add    BYTE PTR [rax],al
   140022f76:	add    BYTE PTR [rax],al
   140022f78:	push   rax
   140022f79:	add    DWORD PTR gs:[rax],eax
   140022f7c:	add    eax,DWORD PTR [rax]
   140022f7e:	add    BYTE PTR [rax],al
   140022f80:	jo     0x140022fe7
   140022f82:	add    DWORD PTR [rax],eax
   140022f84:	add    al,0x0
   140022f86:	add    BYTE PTR [rax],al
   140022f88:	nop
   140022f89:	add    DWORD PTR gs:[rax],eax
   140022f8c:	add    eax,0xb0000000
   140022f91:	add    DWORD PTR gs:[rax],eax
   140022f94:	add    eax,0xd0000000
   140022f99:	add    DWORD PTR gs:[rax],eax
   140022f9c:	(bad)  
   140022f9d:	add    BYTE PTR [rax],al
   140022f9f:	add    al,dh
   140022fa1:	add    DWORD PTR gs:[rax],eax
   140022fa4:	or     BYTE PTR [rax],al
   140022fa6:	add    BYTE PTR [rax],al
   140022fa8:	adc    BYTE PTR [rsi+0x1],ah
   140022fab:	add    BYTE PTR [rcx],cl
   140022fad:	add    BYTE PTR [rax],al
   140022faf:	add    BYTE PTR [rax],dh
   140022fb1:	add    WORD PTR [rax],ax
   140022fb4:	add    al,0x0
   140022fb6:	add    BYTE PTR [rax],al
   140022fb8:	push   rax
   140022fb9:	add    WORD PTR [rax],ax
   140022fbc:	add    al,0x0
   140022fbe:	add    BYTE PTR [rax],al
   140022fc0:	jo     0x140023028
   140022fc2:	add    DWORD PTR [rax],eax
   140022fc4:	or     al,0x0
   140022fc6:	add    BYTE PTR [rax],al
   140022fc8:	nop
   140022fc9:	add    WORD PTR [rax],ax
   140022fcc:	or     eax,0xb0000000
   140022fd1:	add    WORD PTR [rax],ax
   140022fd4:	or     eax,0xd0000000
   140022fd9:	add    WORD PTR [rax],ax
   140022fdc:	sldt   WORD PTR [rax]
   140022fdf:	add    al,dh
   140022fe1:	add    WORD PTR [rax],ax
   140022fe4:	adc    BYTE PTR [rax],al
   140022fe6:	add    BYTE PTR [rax],al
   140022fe8:	adc    BYTE PTR [rdi+0x1],ah
   140022feb:	add    BYTE PTR [rcx],dl
   140022fed:	add    BYTE PTR [rax],al
   140022fef:	add    BYTE PTR [rax],dh
   140022ff1:	add    DWORD PTR [eax],eax
   140022ff4:	add    eax,DWORD PTR [rax]
   140022ff6:	add    BYTE PTR [rax],al
   140022ff8:	push   rax
   140022ff9:	add    DWORD PTR [eax],eax
   140022ffc:	adc    eax,DWORD PTR [rax]
   140022ffe:	add    BYTE PTR [rax],al
   140023000:	jo     0x140023069
   140023002:	add    DWORD PTR [rax],eax
   140023004:	adc    al,0x0
   140023006:	add    BYTE PTR [rax],al
   140023008:	nop
   140023009:	add    DWORD PTR [eax],eax
   14002300c:	adc    eax,0xb0000000
   140023011:	add    DWORD PTR [eax],eax
   140023014:	add    BYTE PTR [rax],al
   140023016:	add    BYTE PTR [rax],al
   140023018:	shl    BYTE PTR [rdi+0x1],1
   14002301b:	add    BYTE PTR [rdi],dl
   14002301d:	add    BYTE PTR [rax],al
   14002301f:	add    al,dh
   140023021:	add    DWORD PTR [eax],eax
   140023024:	sbb    BYTE PTR [rax],al
   140023026:	add    BYTE PTR [rax],al
   140023028:	adc    BYTE PTR [rax+0x1],ch
   14002302b:	add    BYTE PTR [rcx],bl
   14002302d:	add    BYTE PTR [rax],al
   14002302f:	add    BYTE PTR [rax],dh
   140023031:	push   0x1
   140023036:	add    BYTE PTR [rax],al
   140023038:	push   rax
   140023039:	push   0x1
   14002303e:	add    BYTE PTR [rax],al
   140023040:	jo     0x1400230aa
   140023042:	add    DWORD PTR [rax],eax
   140023044:	sbb    al,0x0
   140023046:	add    BYTE PTR [rax],al
   140023048:	nop
   140023049:	push   0x1d0001
   14002304e:	add    BYTE PTR [rax],al
   140023050:	mov    al,0x68
   140023052:	add    DWORD PTR [rax],eax
   140023054:	(bad)  
   140023055:	add    BYTE PTR [rax],al
   140023057:	add    al,dl
   140023059:	push   0x1
   14002305e:	add    BYTE PTR [rax],al
   140023060:	add    BYTE PTR [rax],al
   140023062:	add    BYTE PTR [rax],al
   140023064:	and    BYTE PTR [rax],al
   140023066:	add    BYTE PTR [rax],al
   140023068:	add    BYTE PTR [rax],al
   14002306a:	add    BYTE PTR [rax],al
   14002306c:	and    DWORD PTR [rax],eax
   14002306e:	add    BYTE PTR [rax],al
   140023070:	add    BYTE PTR [rax],al
   140023072:	add    BYTE PTR [rax],al
   140023074:	and    al,BYTE PTR [rax]
	...
   14002307e:	add    BYTE PTR [rax],al
   140023080:	lock push 0x240001
   140023086:	add    BYTE PTR [rax],al
   140023088:	adc    BYTE PTR [rcx+0x1],ch
   14002308b:	add    BYTE PTR [rip+0x30000000],ah        # 0x170023091
   140023091:	imul   eax,DWORD PTR [rcx],0x2400
   140023097:	add    BYTE PTR [rax],dh
   140023099:	imul   eax,DWORD PTR [rcx],0x2700
   14002309f:	add    BYTE PTR [rax+0x69],dl
   1400230a2:	add    DWORD PTR [rax],eax
   1400230a4:	and    al,0x0
   1400230a6:	add    BYTE PTR [rax],al
   1400230a8:	jo     0x140023113
   1400230aa:	add    DWORD PTR [rax],eax
   1400230ac:	sub    DWORD PTR [rax],eax
   1400230ae:	add    BYTE PTR [rax],al
   1400230b0:	nop
   1400230b1:	imul   eax,DWORD PTR [rcx],0x2a00
   1400230b7:	add    BYTE PTR [rax+0x2b000169],dh
   1400230bd:	add    BYTE PTR [rax],al
   1400230bf:	add    al,dl
   1400230c1:	imul   eax,DWORD PTR [rcx],0x0
   1400230c7:	add    al,dh
   1400230c9:	imul   eax,DWORD PTR [rcx],0x2d00
   1400230cf:	add    BYTE PTR [rax],dl
   1400230d1:	push   0x1
   1400230d3:	add    BYTE PTR [rsi],ch
   1400230d5:	add    BYTE PTR [rax],al
   1400230d7:	add    BYTE PTR [rax],dh
   1400230d9:	push   0x1
   1400230db:	add    BYTE PTR [rdi],ch
   1400230dd:	add    BYTE PTR [rax],al
   1400230df:	add    BYTE PTR [rax+0x6a],dl
   1400230e2:	add    DWORD PTR [rax],eax
   1400230e4:	(bad)  
   1400230e5:	(bad)  
   1400230e6:	(bad)  
   1400230e7:	push   QWORD PTR [rax+0x6a]
   1400230ea:	add    DWORD PTR [rax],eax
   1400230ec:	xor    DWORD PTR [rax],eax
   1400230ee:	add    BYTE PTR [rax],al
   1400230f0:	nop
   1400230f1:	push   0x1
   1400230f3:	add    BYTE PTR [rdx],dh
   1400230f5:	add    BYTE PTR [rax],al
   1400230f7:	add    BYTE PTR [rax+0x3300016a],dh
   1400230fd:	add    BYTE PTR [rax],al
   1400230ff:	add    al,dl
   140023101:	push   0x1
   140023103:	add    bh,bh
   140023105:	(bad)  
   140023106:	(bad)  
   140023107:	inc    DWORD PTR [rax]
   140023109:	add    BYTE PTR [rax],al
   14002310b:	add    BYTE PTR [rip+0x0],dh        # 0x140023111
   140023111:	add    BYTE PTR [rax],al
   140023113:	add    BYTE PTR [rsi],dh
   140023115:	add    BYTE PTR [rax],al
   140023117:	add    BYTE PTR [rax],al
   140023119:	add    BYTE PTR [rax],al
   14002311b:	add    BYTE PTR [rdi],dh
   14002311d:	add    BYTE PTR [rax],al
   14002311f:	add    BYTE PTR [rax],al
   140023121:	add    BYTE PTR [rax],al
   140023123:	add    BYTE PTR [rax+0x70],dl
   140023126:	add    BYTE PTR [rax],al
   140023128:	(bad)  
   140023129:	(bad)  
   14002312a:	(bad)  
   14002312b:	(bad)  
   14002312c:	mov    ebp,0x70
   140023131:	add    BYTE PTR [rax],al
   140023133:	add    dh,cl
   140023135:	jo     0x140023137
   140023137:	add    BYTE PTR [rcx],al
   140023139:	add    BYTE PTR [rax],al
   14002313b:	add    dl,bl
   14002313d:	jo     0x14002313f
   14002313f:	add    BYTE PTR [rax],al
   140023141:	add    BYTE PTR [rax],al
   140023143:	add    cl,bh
   140023145:	jo     0x140023147
   140023147:	add    BYTE PTR [rdx],al
   140023149:	add    BYTE PTR [rax],al
   14002314b:	add    BYTE PTR [rip+0x71],al        # 0x1400231c2
   140023151:	add    BYTE PTR [rax],al
   140023153:	add    BYTE PTR [rbp+0x71],bh
   140023156:	add    BYTE PTR [rax],al
   140023158:	add    eax,DWORD PTR [rax]
   14002315a:	add    BYTE PTR [rax],al
   14002315c:	(bad)  
   14002315d:	jb     0x14002315f
   14002315f:	add    BYTE PTR [rax+rax*1],al
   140023162:	add    BYTE PTR [rax],al
   140023164:	lods   eax,DWORD PTR ds:[rsi]
   140023165:	jb     0x140023167
   140023167:	add    BYTE PTR [rip+0x19000000],al        # 0x15902316d
   14002316d:	jae    0x14002316f
   14002316f:	add    BYTE PTR [rsi],al
   140023171:	add    BYTE PTR [rax],al
   140023173:	add    BYTE PTR [rdx],ch
   140023175:	jae    0x140023177
   140023177:	add    BYTE PTR [rdx],cl
   140023179:	add    BYTE PTR [rax],al
   14002317b:	add    BYTE PTR [rcx],bh
   14002317d:	jae    0x14002317f
   14002317f:	add    BYTE PTR [rcx],cl
   140023181:	add    BYTE PTR [rax],al
   140023183:	add    BYTE PTR [rdi+0x73],al
   140023186:	add    BYTE PTR [rax],al
   140023188:	or     BYTE PTR [rax],al
   14002318a:	add    BYTE PTR [rax],al
   14002318c:	push   rsi
   14002318d:	jae    0x14002318f
   14002318f:	add    BYTE PTR [rdi],al
   140023191:	add    BYTE PTR [rax],al
   140023193:	add    BYTE PTR [rbp+0x73],ah
   140023196:	add    BYTE PTR [rax],al
   140023198:	add    eax,0x74000000
   14002319d:	jae    0x14002319f
   14002319f:	add    BYTE PTR [rax+rax*1],al
   1400231a2:	add    BYTE PTR [rax],al
   1400231a4:	and    esi,DWORD PTR [rax+rax*1+0x0]
   1400231a8:	or     eax,DWORD PTR [rax]
   1400231aa:	add    BYTE PTR [rax],al
   1400231ac:	(bad)  
   1400231ad:	je     0x1400231af
   1400231af:	add    BYTE PTR [rax+rax*1],al
   1400231b2:	add    BYTE PTR [rax],al
   1400231b4:	mov    WORD PTR [rax+rax*1+0x0],?
   1400231b8:	or     al,0x0
   1400231ba:	add    BYTE PTR [rax],al
   1400231bc:	movabs eax,ds:0x4d0000000d000074
   1400231c5:	jne    0x1400231c7
   1400231c7:	add    BYTE PTR [rsi],cl
   1400231c9:	add    BYTE PTR [rax],al
   1400231cb:	add    BYTE PTR [rbx+0x75],bl
   1400231ce:	add    BYTE PTR [rax],al
   1400231d0:	adc    al,BYTE PTR [rax]
   1400231d2:	add    BYTE PTR [rax],al
   1400231d4:	push   0x75
   1400231d6:	add    BYTE PTR [rax],al
   1400231d8:	adc    DWORD PTR [rax],eax
   1400231da:	add    BYTE PTR [rax],al
   1400231dc:	js     0x140023253
   1400231de:	add    BYTE PTR [rax],al
   1400231e0:	adc    BYTE PTR [rax],al
   1400231e2:	add    BYTE PTR [rax],al
   1400231e4:	xchg   DWORD PTR [rbp+0x0],esi
   1400231e7:	add    BYTE PTR [rdi],cl
   1400231e9:	add    BYTE PTR [rax],al
   1400231eb:	add    BYTE PTR [rsi+0xd000075],dl
   1400231f1:	add    BYTE PTR [rax],al
   1400231f3:	add    BYTE PTR [rbp+0xc000075],ah
   1400231f9:	add    BYTE PTR [rax],al
   1400231fb:	add    BYTE PTR [rbp+rsi*2+0x40000],dh
   140023202:	add    BYTE PTR [rax],al
   140023204:	(bad)  
   140023205:	ja     0x140023207
   140023207:	add    BYTE PTR [rsi],dl
   140023209:	add    BYTE PTR [rax],al
   14002320b:	add    BYTE PTR [rcx+0x77],dh
   14002320e:	add    BYTE PTR [rax],al
   140023210:	adc    eax,0x7f000000
   140023215:	ja     0x140023217
   140023217:	add    BYTE PTR [rax+rax*1],dl
   14002321a:	add    BYTE PTR [rax],al
   14002321c:	mov    ?,WORD PTR [rdi+0x0]
   14002321f:	add    BYTE PTR [rbx],dl
   140023221:	add    BYTE PTR [rax],al
   140023223:	add    BYTE PTR [rbp+0x3000077],bl
   140023229:	add    BYTE PTR [rax],al
   14002322b:	add    BYTE PTR [rdi+rsi*2+0x1a0000],ch
   140023232:	add    BYTE PTR [rax],al
   140023234:	mov    ebx,0x19000077
   140023239:	add    BYTE PTR [rax],al
   14002323b:	add    BYTE PTR [rax+rdi*2],bl
   14002323e:	add    BYTE PTR [rax],al
   140023240:	sbb    BYTE PTR [rax],al
   140023242:	add    BYTE PTR [rax],al
   140023244:	sub    edi,DWORD PTR [rax+0x0]
   140023247:	add    BYTE PTR [rdi],dl
   140023249:	add    BYTE PTR [rax],al
   14002324b:	add    BYTE PTR [rdx],bh
   14002324d:	js     0x14002324f
   14002324f:	add    BYTE PTR [rax],al
   140023251:	add    BYTE PTR [rax],al
   140023253:	add    BYTE PTR [rax+0x78],ch
   140023256:	add    BYTE PTR [rax],al
   140023258:	sbb    eax,DWORD PTR [rax]
   14002325a:	add    BYTE PTR [rax],al
   14002325c:	jbe    0x1400232d6
   14002325e:	add    BYTE PTR [rax],al
   140023260:	add    BYTE PTR [rax],al
   140023262:	add    BYTE PTR [rax],al
   140023264:	jmp    0x15f0232e1
   140023269:	add    BYTE PTR [rax],al
   14002326b:	add    ah,dh
   14002326d:	js     0x14002326f
   14002326f:	add    BYTE PTR [rsi],bl
   140023271:	add    BYTE PTR [rax],al
   140023273:	add    BYTE PTR [rcx+rdi*2+0x0],cl
   140023277:	add    BYTE PTR [rip+0x57000000],bl        # 0x19702327d
   14002327d:	jns    0x14002327f
   14002327f:	add    BYTE PTR [rax+rax*1],bl
   140023282:	add    BYTE PTR [rax],al
   140023284:	(bad)  
   140023285:	jns    0x140023287
   140023287:	add    BYTE PTR [rax],al
   140023289:	add    BYTE PTR [rax],al
   14002328b:	add    BYTE PTR [rax],al
   14002328d:	jp     0x14002328f
   14002328f:	add    BYTE PTR [rax+rax*1],ah
   140023292:	add    BYTE PTR [rax],al
   140023294:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140023295:	jp     0x140023297
   140023297:	add    BYTE PTR [rip+0x19000000],ah        # 0x15902329d
   14002329d:	jnp    0x14002329f
   14002329f:	add    BYTE PTR [rdi],ah
   1400232a1:	add    BYTE PTR [rax],al
   1400232a3:	add    BYTE PTR [rcx+0x2800007b],dh
   1400232a9:	add    BYTE PTR [rax],al
   1400232ab:	add    dh,ch
   1400232ad:	jnp    0x1400232af
   1400232af:	add    BYTE PTR [rdi],ah
   1400232b1:	add    BYTE PTR [rax],al
   1400232b3:	add    BYTE PTR [rsp+rdi*2],al
   1400232b6:	add    BYTE PTR [rax],al
   1400232b8:	sub    al,0x0
   1400232ba:	add    BYTE PTR [rax],al
   1400232bc:	adc    edi,DWORD PTR [rax+rax*1+0x0]
   1400232c0:	sub    eax,DWORD PTR [rax]
   1400232c2:	add    BYTE PTR [rax],al
   1400232c4:	ins    BYTE PTR es:[rdi],dx
   1400232c5:	jl     0x1400232c7
   1400232c7:	add    BYTE PTR [rdx],ch
   1400232c9:	add    BYTE PTR [rax],al
   1400232cb:	add    BYTE PTR [rbx+0x7c],bh
   1400232ce:	add    BYTE PTR [rax],al
   1400232d0:	sub    DWORD PTR [rax],eax
   1400232d2:	add    BYTE PTR [rax],al
   1400232d4:	mov    bh,BYTE PTR [rax+rax*1+0x0]
   1400232d8:	and    al,0x0
   1400232da:	add    BYTE PTR [rax],al
   1400232dc:	or     al,0x7d
   1400232de:	add    BYTE PTR [rax],al
   1400232e0:	xor    BYTE PTR [rax],al
   1400232e2:	add    BYTE PTR [rax],al
   1400232e4:	sbb    edi,DWORD PTR [rbp+0x0]
   1400232e7:	add    BYTE PTR [rdi],ch
   1400232e9:	add    BYTE PTR [rax],al
   1400232eb:	add    BYTE PTR [rbp+rdi*2+0x0],bh
   1400232ef:	add    BYTE PTR [rsi],ch
   1400232f1:	add    BYTE PTR [rax],al
   1400232f3:	add    BYTE PTR [rbx+0x2d00007d],cl
   1400232f9:	add    BYTE PTR [rax],al
   1400232fb:	add    BYTE PTR [rdx+0x7d],bl
   140023301:	add    BYTE PTR [rax],al
   140023303:	add    BYTE PTR [rbx+0x7f],bl
   140023306:	add    BYTE PTR [rax],al
   140023308:	(bad)  
   140023309:	(bad)  
   14002330a:	(bad)  
   14002330b:	dec    ecx
   14002330d:	jg     0x14002330f
   14002330f:	add    BYTE PTR [rax+rax*1],dh
   140023312:	add    BYTE PTR [rax],al
   140023314:	(bad)  
   140023315:	jg     0x140023317
   140023317:	add    BYTE PTR [rbx],dh
   140023319:	add    BYTE PTR [rax],al
   14002331b:	add    BYTE PTR [rax+rax*4],ch
   14002331e:	add    BYTE PTR [rax],al
   140023320:	xor    al,BYTE PTR [rax]
   140023322:	add    BYTE PTR [rax],al
   140023324:	(bad)  
   140023325:	add    BYTE PTR [rax],0x0
   140023328:	xor    DWORD PTR [rax],eax
   14002332a:	add    BYTE PTR [rax],al
   14002332c:	rex.X add BYTE PTR [rax],0x0
   140023330:	(bad)  
   140023331:	(bad)  
   140023332:	(bad)  
   140023333:	call   QWORD PTR [rcx]
   140023335:	adc    DWORD PTR [rax+rax*1],eax
   140023338:	or     BYTE PTR [rdx+0x4],dl
   14002333b:	jo     0x140023340
   14002333d:	(bad)  
   14002333e:	add    dh,BYTE PTR [rax]
   140023340:	(bad)  
   140023341:	add    DWORD PTR ds:[rax],eax
   140023344:	adc    ah,bl
   140023346:	add    DWORD PTR [rax],eax
   140023348:	(bad)  
   140023349:	(bad)  
   14002334a:	(bad)  
   14002334b:	push   rax
   14002334d:	push   0x1
   14002334f:	add    BYTE PTR [rax],al
   140023351:	add    BYTE PTR [rax],al
   140023353:	add    BYTE PTR [rax],dl
   140023355:	imul   eax,DWORD PTR [rcx],0x0
   140023358:	(bad)  
   140023359:	(bad)  
   14002335a:	(bad)  
   14002335b:	push   QWORD PTR [rax]
   14002335d:	imul   eax,DWORD PTR [rcx],0x0
   140023360:	add    al,BYTE PTR [rax]
   140023362:	add    BYTE PTR [rax],al
   140023364:	push   rax
   140023365:	imul   eax,DWORD PTR [rcx],0x0
   140023368:	(bad)  
   140023369:	(bad)  
   14002336a:	(bad)  
   14002336b:	push   QWORD PTR [rax+0x6b]
   14002336e:	add    DWORD PTR [rax],eax
   140023370:	add    al,0x0
   140023372:	add    BYTE PTR [rax],al
   140023374:	nop
   140023375:	imul   eax,DWORD PTR [rcx],0x0
   140023378:	(bad)  
   140023379:	(bad)  
   14002337a:	(bad)  
   14002337b:	push   QWORD PTR [rax+0x600016b]
   140023381:	add    BYTE PTR [rax],al
   140023383:	add    al,dl
   140023385:	imul   eax,DWORD PTR [rcx],0x0
   140023388:	nop
   140023389:	add    BYTE PTR [rax],0x0
   14002338c:	(bad)  
   14002338d:	(bad)  
   14002338e:	(bad)  
   14002338f:	(bad)  
   140023390:	call   0x140023415
   140023395:	add    BYTE PTR [rax],al
   140023397:	add    dl,bh
   140023399:	add    BYTE PTR [rax],0x0
   14002339c:	add    DWORD PTR [rax],eax
   14002339e:	add    BYTE PTR [rax],al
   1400233a0:	or     eax,DWORD PTR [rcx+0x0]
   1400233a6:	add    BYTE PTR [rax],al
   1400233a8:	(bad)  
   1400233a9:	add    DWORD PTR [rax],0xffffff00
   1400233af:	call   QWORD PTR [rbx-0x7f]
   1400233b2:	add    BYTE PTR [rax],al
   1400233b4:	add    al,0x0
   1400233b6:	add    BYTE PTR [rax],al
   1400233b8:	add    DWORD PTR gs:[rax],0x500
   1400233bf:	add    BYTE PTR [rsi-0x7f],dh
   1400233c2:	add    BYTE PTR [rax],al
   1400233c4:	add    al,0x0
   1400233c6:	add    BYTE PTR [rax],al
   1400233c8:	(bad)  
   1400233c9:	add    DWORD PTR [rax],0xffffff00
   1400233cf:	call   rdx
   1400233d1:	add    DWORD PTR [rax],0x600
   1400233d7:	add    ah,ah
   1400233d9:	add    DWORD PTR [rax],0x700
   1400233df:	add    ch,dh
   1400233e1:	add    DWORD PTR [rax],0x600
   1400233e7:	add    BYTE PTR [rcx],al
   1400233e9:	(bad)  
   1400233ea:	add    BYTE PTR [rax],al
   1400233ec:	(bad)  
   1400233ed:	(bad)  
   1400233ee:	(bad)  
   1400233ef:	(bad)  
   1400233f0:	cmp    DWORD PTR [rdx+0x20000],eax
   1400233f6:	add    BYTE PTR [rax],al
   1400233f8:	rex.WXB (bad) 
   1400233fa:	add    BYTE PTR [rax],al
   1400233fc:	add    eax,DWORD PTR [rax]
   1400233fe:	add    BYTE PTR [rax],al
   140023400:	pop    rsp
   140023401:	(bad)  
   140023402:	add    BYTE PTR [rax],al
   140023404:	add    al,BYTE PTR [rax]
   140023406:	add    BYTE PTR [rax],al
   140023408:	push   0xffffffffff000082
   14002340d:	(bad)  
   14002340e:	(bad)  
   14002340f:	call   QWORD PTR [rcx]
   140023411:	adc    al,0x4
   140023413:	add    BYTE PTR [rsp+rsi*1],dl
   140023416:	or     DWORD PTR [rax],eax
   140023418:	(bad)  
   140023419:	push   rdx
   14002341a:	add    dh,BYTE PTR [rax-0x32]
   14002341d:	add    DWORD PTR ds:[rax],eax
   140023420:	push   rax
   140023421:	fadd   QWORD PTR [rcx]
   140023423:	add    bh,bh
   140023425:	(bad)  
   140023426:	(bad)  
   140023427:	push   rax
   140023429:	imul   eax,DWORD PTR [rcx],0x0
   14002342c:	add    BYTE PTR [rax],al
   14002342e:	add    BYTE PTR [rax],al
   140023430:	adc    BYTE PTR [rcx+rax*1+0x0],ch
   140023434:	add    DWORD PTR [rax],eax
   140023436:	add    BYTE PTR [rax],al
   140023438:	xor    BYTE PTR [rcx+rax*1+0x0],ch
   14002343c:	lock (bad) 
   14002343e:	add    BYTE PTR [rax],al
   140023440:	(bad)  
   140023441:	(bad)  
   140023442:	(bad)  
   140023443:	call   QWORD PTR [rbx]
   140023445:	add    DWORD PTR [rax],0x0
   140023448:	add    BYTE PTR [rax],al
   14002344a:	add    BYTE PTR [rax],al
   14002344c:	cmp    eax,DWORD PTR [rbx+0x10000]
   140023452:	add    BYTE PTR [rax],al
   140023454:	movsxd eax,DWORD PTR [rbx+0x20000]
   14002345a:	add    BYTE PTR [rax],al
   14002345c:	jg     0x1400233e1
   14002345e:	add    BYTE PTR [rax],al
   140023460:	add    DWORD PTR [rax],eax
   140023462:	add    BYTE PTR [rax],al
   140023464:	mov    eax,DWORD PTR [rbx+0x0]
   14002346a:	add    BYTE PTR [rax],al
   14002346c:	test   eax,0xff000083
   140023471:	(bad)  
   140023472:	(bad)  
   140023473:	call   QWORD PTR [rcx]
   140023475:	adc    DWORD PTR [rax+rax*1],eax
   140023478:	or     BYTE PTR [rdx+0x4],dh
   14002347b:	jo     0x140023480
   14002347d:	(bad)  
   14002347e:	add    dh,BYTE PTR [rax]
   140023480:	(bad)  
   140023481:	add    DWORD PTR ds:[rax],eax
   140023484:	sbb    ah,0x1
   140023487:	add    bh,bh
   140023489:	(bad)  
   14002348a:	(bad)  
   14002348b:	call   QWORD PTR [rax+0x6c]
   14002348e:	add    DWORD PTR [rax],eax
   140023490:	add    BYTE PTR [rax],al
   140023492:	add    BYTE PTR [rax],al
   140023494:	jo     0x140023502
   140023496:	add    DWORD PTR [rax],eax
   140023498:	add    DWORD PTR [rax],eax
   14002349a:	add    BYTE PTR [rax],al
   14002349c:	nop
   14002349d:	ins    BYTE PTR es:[rdi],dx
   14002349e:	add    DWORD PTR [rax],eax
   1400234a0:	add    BYTE PTR [rax],al
   1400234a2:	add    BYTE PTR [rax],al
   1400234a4:	mov    al,0x6c
   1400234a6:	add    DWORD PTR [rax],eax
   1400234a8:	rol    BYTE PTR [rbx-0x10000],1
   1400234ae:	(bad)  
   1400234af:	dec    DWORD PTR [rdx]
   1400234b1:	test   BYTE PTR [rax],al
   1400234b3:	add    BYTE PTR [rax],al
   1400234b5:	add    BYTE PTR [rax],al
   1400234b7:	add    BYTE PTR [rcx],bl
   1400234b9:	test   BYTE PTR [rax],al
   1400234bb:	add    BYTE PTR [rcx],al
   1400234bd:	add    BYTE PTR [rax],al
   1400234bf:	add    BYTE PTR [rax],ch
   1400234c1:	test   BYTE PTR [rax],al
   1400234c3:	add    BYTE PTR [rdx],al
   1400234c5:	add    BYTE PTR [rax],al
   1400234c7:	add    BYTE PTR [rsi-0x7c],ah
   1400234ca:	add    BYTE PTR [rax],al
   1400234cc:	add    DWORD PTR [rax],eax
   1400234ce:	add    BYTE PTR [rax],al
   1400234d0:	jb     0x140023456
   1400234d2:	add    BYTE PTR [rax],al
   1400234d4:	add    BYTE PTR [rax],al
   1400234d6:	add    BYTE PTR [rax],al
   1400234d8:	mov    es,WORD PTR [rax+rax*1+0x300]
   1400234df:	add    BYTE PTR [rax+0x84],bh
   1400234e5:	add    BYTE PTR [rax],al
   1400234e7:	add    ah,al
   1400234e9:	test   BYTE PTR [rax],al
   1400234eb:	add    bh,bh
   1400234ed:	(bad)  
   1400234ee:	(bad)  
   1400234ef:	call   QWORD PTR [rcx]
   1400234f1:	adc    eax,0x720c0004
   1400234f6:	or     BYTE PTR [rax+0x7],dh
   1400234f9:	(bad)  
   1400234fa:	(bad)  
   1400234fb:	xor    dh,cl
   1400234fd:	add    DWORD PTR ds:[rax],eax
   140023500:	mov    al,0xdc
   140023502:	add    DWORD PTR [rax],eax
   140023504:	(bad)  
   140023505:	(bad)  
   140023506:	(bad)  
   140023507:	push   rax
   140023509:	ins    BYTE PTR es:[rdi],dx
   14002350a:	add    DWORD PTR [rax],eax
   14002350c:	add    BYTE PTR [rax],al
   14002350e:	add    BYTE PTR [rax],al
   140023510:	shr    BYTE PTR [rcx+rax*1+0x0],1
   140023514:	loopne 0x14002349a
   140023516:	add    BYTE PTR [rax],al
   140023518:	(bad)  
   140023519:	(bad)  
   14002351a:	(bad)  
   14002351b:	inc    DWORD PTR [rdx-0x7b]
   14002351e:	add    BYTE PTR [rax],al
   140023520:	add    DWORD PTR [rax],eax
   140023522:	add    BYTE PTR [rax],al
   140023524:	jnp    0x1400234ab
   140023526:	add    BYTE PTR [rax],al
   140023528:	add    BYTE PTR [rax],al
   14002352a:	add    BYTE PTR [rax],al
   14002352c:	adc    DWORD PTR [rax],ebx
   14002352e:	(bad)  
   14002352f:	add    BYTE PTR [rdi],cl
   140023531:	xchg   edx,eax
   140023532:	or     eax,eax
   140023534:	or     DWORD PTR [rax+0x8],esi
   140023537:	(bad)  
   140023538:	(bad)  
   140023539:	push   rax
   14002353a:	(bad)  
   14002353b:	xor    dh,cl
   14002353d:	add    DWORD PTR ds:[rax],eax
   140023540:	add    ch,bl
   140023542:	add    DWORD PTR [rax],eax
   140023544:	(bad)  
   140023545:	(bad)  
   140023546:	(bad)  
   140023547:	jmp    QWORD PTR [rax]
   140023549:	ins    DWORD PTR es:[rdi],dx
   14002354a:	add    DWORD PTR [rax],eax
   14002354c:	add    BYTE PTR [rax],al
   14002354e:	add    BYTE PTR [rax],al
   140023550:	push   rax
   140023551:	ins    DWORD PTR es:[rdi],dx
   140023552:	add    DWORD PTR [rax],eax
   140023554:	add    BYTE PTR [rax],al
   140023556:	add    BYTE PTR [rax],al
   140023558:	jo     0x1400235c7
   14002355a:	add    DWORD PTR [rax],eax
   14002355c:	add    BYTE PTR [rax],al
   14002355e:	add    BYTE PTR [rax],al
   140023560:	nop
   140023561:	ins    DWORD PTR es:[rdi],dx
   140023562:	add    DWORD PTR [rax],eax
   140023564:	add    BYTE PTR [rax],al
   140023566:	add    BYTE PTR [rax],al
   140023568:	mov    al,0x6d
   14002356a:	add    DWORD PTR [rax],eax
   14002356c:	add    BYTE PTR [rax],al
   14002356e:	add    BYTE PTR [rax],al
   140023570:	shr    BYTE PTR [rbp+0x1],1
   140023573:	add    BYTE PTR [rax],al
   140023575:	add    BYTE PTR [rax],al
   140023577:	add    al,dh
   140023579:	ins    DWORD PTR es:[rdi],dx
   14002357a:	add    DWORD PTR [rax],eax
   14002357c:	movabs al,ds:0xbeffffffff000085
   140023585:	test   DWORD PTR [rax],eax
   140023587:	add    BYTE PTR [rax],al
   140023589:	add    BYTE PTR [rax],al
   14002358b:	add    BYTE PTR [rsi-0x7a],bl
   14002358e:	add    BYTE PTR [rax],al
   140023590:	(bad)  
   140023591:	add    BYTE PTR [rax],al
   140023593:	add    BYTE PTR [rbx-0x7a],ch
   140023596:	add    BYTE PTR [rax],al
   140023598:	add    BYTE PTR [rax],al
   14002359a:	add    BYTE PTR [rax],al
   14002359c:	ret    0x86
   14002359f:	add    BYTE PTR [rbx],al
   1400235a1:	add    BYTE PTR [rax],al
   1400235a3:	add    ah,dl
   1400235a5:	xchg   BYTE PTR [rax],al
   1400235a7:	add    BYTE PTR [rax],al
   1400235a9:	add    BYTE PTR [rax],al
   1400235ab:	add    BYTE PTR [rdx],dl
   1400235ad:	xchg   DWORD PTR [rax],eax
   1400235af:	add    BYTE PTR [rax+rax*1],al
   1400235b2:	add    BYTE PTR [rax],al
   1400235b4:	and    al,0x87
   1400235b6:	add    BYTE PTR [rax],al
   1400235b8:	add    BYTE PTR [rax],al
   1400235ba:	add    BYTE PTR [rax],al
   1400235bc:	pop    rdi
   1400235bd:	xchg   DWORD PTR [rax],eax
   1400235bf:	add    BYTE PTR [rip+0x6e000000],al        # 0x1ae0235c5
   1400235c5:	xchg   DWORD PTR [rax],eax
   1400235c7:	add    BYTE PTR [rax],al
   1400235c9:	add    BYTE PTR [rax],al
   1400235cb:	add    BYTE PTR [rsi+0x2000087],ah
   1400235d1:	add    BYTE PTR [rax],al
   1400235d3:	add    BYTE PTR [rbp+0x87],dh
   1400235d9:	add    BYTE PTR [rax],al
   1400235db:	add    dl,ch
   1400235dd:	xchg   DWORD PTR [rax],eax
   1400235df:	add    BYTE PTR [rcx],al
   1400235e1:	add    BYTE PTR [rax],al
   1400235e3:	add    cl,bh
   1400235e5:	xchg   DWORD PTR [rax],eax
   1400235e7:	add    BYTE PTR [rax],al
   1400235e9:	add    BYTE PTR [rax],al
   1400235eb:	add    BYTE PTR [rcx],dl
   1400235ed:	adc    eax,0xd20c0004
   1400235f2:	or     BYTE PTR [rax+0x7],dh
   1400235f5:	(bad)  
   1400235f6:	(bad)  
   1400235f7:	xor    dh,cl
   1400235f9:	add    DWORD PTR ds:[rax],eax
   1400235fc:	push   rax
   1400235fd:	fld    QWORD PTR [rcx]
   1400235ff:	add    bh,bh
   140023601:	(bad)  
   140023602:	(bad)  
   140023603:	call   QWORD PTR [rax]
   140023605:	outs   dx,BYTE PTR ds:[rsi]
   140023606:	add    DWORD PTR [rax],eax
   140023608:	add    BYTE PTR [rax],al
   14002360a:	add    BYTE PTR [rax],al
   14002360c:	rex outs dx,BYTE PTR ds:[rsi]
   14002360e:	add    DWORD PTR [rax],eax
   140023610:	add    DWORD PTR [rax],eax
   140023612:	add    BYTE PTR [rax],al
   140023614:	(bad)  
   140023615:	outs   dx,BYTE PTR ds:[rsi]
   140023616:	add    DWORD PTR [rax],eax
   140023618:	add    al,BYTE PTR [rax]
   14002361a:	add    BYTE PTR [rax],al
   14002361c:	sub    BYTE PTR [rsi+0x1],0x0
   140023620:	add    DWORD PTR [rax],eax
   140023622:	add    BYTE PTR [rax],al
   140023624:	sub    BYTE PTR [rsi+0x1],0x0
   140023628:	add    al,0x0
   14002362a:	add    BYTE PTR [rax],al
   14002362c:	movabs al,ds:0xff0000883000016e
   140023635:	(bad)  
   140023636:	(bad)  
   140023637:	call   FWORD PTR [rdi-0x78]
   14002363a:	add    BYTE PTR [rax],al
   14002363c:	add    BYTE PTR [rax],al
   14002363e:	add    BYTE PTR [rax],al
   140023640:	mov    BYTE PTR [eax],al
   140023643:	add    bh,bh
   140023645:	(bad)  
   140023646:	(bad)  
   140023647:	push   QWORD PTR [rbx-0x78]
   14002364a:	add    BYTE PTR [rax],al
   14002364c:	add    DWORD PTR [rax],eax
   14002364e:	add    BYTE PTR [rax],al
   140023650:	or     DWORD PTR [rax+0x20000],0x88930000
   14002365a:	add    BYTE PTR [rax],al
   14002365c:	add    al,0x0
   14002365e:	add    BYTE PTR [rax],al
   140023660:	cld    
   140023661:	mov    BYTE PTR [rax],al
   140023663:	add    BYTE PTR [rip+0xb000000],al        # 0x14b023669
   140023669:	mov    DWORD PTR [rax],eax
   14002366b:	add    BYTE PTR [rax+rax*1],al
   14002366e:	add    BYTE PTR [rax],al
   140023670:	mov    DWORD PTR gs:[rax],eax
   140023673:	add    BYTE PTR [rcx],al
   140023675:	add    BYTE PTR [rax],al
   140023677:	add    BYTE PTR [rcx+rcx*4+0x0],dh
   14002367b:	add    BYTE PTR [rax],al
   14002367d:	add    BYTE PTR [rax],al
   14002367f:	add    BYTE PTR [rcx],al
   140023681:	sbb    cl,BYTE PTR [rdx]
   140023683:	add    BYTE PTR [rdx],bl
   140023685:	je     0x140023690
   140023687:	add    BYTE PTR [rdx],bl
   140023689:	or     BYTE PTR fs:[rax],al
   14002368c:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   140023690:	sbb    dh,BYTE PTR [rsi+rax*1]
   140023693:	add    BYTE PTR [rdx],bl
   140023695:	xor    dl,BYTE PTR [rsi]
   140023697:	rcl    BYTE PTR [rcx],0x13
   14002369a:	add    al,BYTE PTR [rax]
   14002369c:	or     dl,BYTE PTR [rdx+0x6]
   14002369f:	xor    dh,cl
   1400236a1:	add    DWORD PTR ds:[rax],eax
   1400236a4:	lock fiadd WORD PTR [rcx]
   1400236a7:	add    bh,bh
   1400236a9:	(bad)  
   1400236aa:	(bad)  
   1400236ab:	inc    eax
   1400236ad:	outs   dx,BYTE PTR ds:[rsi]
   1400236ae:	add    DWORD PTR [rax],eax
   1400236b0:	add    BYTE PTR [rax],al
   1400236b2:	add    BYTE PTR [rax],al
   1400236b4:	loopne 0x140023724
   1400236b6:	add    DWORD PTR [rax],eax
   1400236b8:	add    DWORD PTR [rax],eax
   1400236ba:	add    BYTE PTR [rax],al
   1400236bc:	add    BYTE PTR [rdi+0x1],ch
   1400236bf:	add    BYTE PTR [rdx],al
   1400236c1:	add    BYTE PTR [rax],al
   1400236c3:	add    BYTE PTR [rax],ah
   1400236c5:	outs   dx,DWORD PTR ds:[rsi]
   1400236c6:	add    DWORD PTR [rax],eax
   1400236c8:	add    eax,DWORD PTR [rax]
   1400236ca:	add    BYTE PTR [rax],al
   1400236cc:	rex outs dx,DWORD PTR ds:[rsi]
   1400236ce:	add    DWORD PTR [rax],eax
   1400236d0:	add    al,0x0
   1400236d2:	add    BYTE PTR [rax],al
   1400236d4:	(bad)  
   1400236d5:	outs   dx,DWORD PTR ds:[rsi]
   1400236d6:	add    DWORD PTR [rax],eax
   1400236d8:	add    eax,0x80000000
   1400236dd:	outs   dx,DWORD PTR ds:[rsi]
   1400236de:	add    DWORD PTR [rax],eax
   1400236e0:	(bad)  
   1400236e1:	add    BYTE PTR [rax],al
   1400236e3:	add    BYTE PTR [rax-0x3ffffe91],ah
   1400236e9:	lea    eax,[rax]
   1400236eb:	add    bh,bh
   1400236ed:	(bad)  
   1400236ee:	(bad)  
   1400236ef:	call   rsi
   1400236f1:	lea    eax,[rax]
   1400236f3:	add    BYTE PTR [rdi],al
   1400236f5:	add    BYTE PTR [rax],al
   1400236f7:	add    ah,ah
   1400236f9:	lea    eax,[rax]
   1400236fb:	add    BYTE PTR [rsi],al
   1400236fd:	add    BYTE PTR [rax],al
   1400236ff:	add    bh,ch
   140023701:	lea    eax,[rax]
   140023703:	add    BYTE PTR [rip+0xfffffffff9000000],al        # 0x139023709
   140023709:	lea    eax,[rax]
   14002370b:	add    BYTE PTR [rax+rax*1],al
   14002370e:	add    BYTE PTR [rax],al
   140023710:	add    al,0x8e
   140023712:	add    BYTE PTR [rax],al
   140023714:	add    eax,DWORD PTR [rax]
   140023716:	add    BYTE PTR [rax],al
   140023718:	jle    0x14004371e
   14002371e:	add    BYTE PTR [rax],al
   140023720:	sbb    cl,BYTE PTR [rsi+0x10000]
   140023726:	add    BYTE PTR [rax],al
   140023728:	and    eax,0x8e
   14002372d:	add    BYTE PTR [rax],al
   14002372f:	add    BYTE PTR [rax],dh
   140023731:	mov    es,WORD PTR [rax]
   140023733:	add    bh,bh
   140023735:	(bad)  
   140023736:	(bad)  
   140023737:	call   QWORD PTR [rcx]
   140023739:	and    al,0xa
   14002373b:	add    BYTE PTR [rsp+riz*2],ah
   14002373e:	(bad)  
   14002373f:	add    BYTE PTR [rax],ah
   140023741:	push   rsp
   140023742:	adc    eax,0x14341c00
   140023747:	add    BYTE PTR [rdi],cl
   140023749:	repnz or al,dl
   14002374c:	(bad)  
   14002374d:	rol    BYTE PTR [rax+rsi*2],0xce
   140023751:	add    DWORD PTR ds:[rax],eax
   140023754:	and    bh,bl
   140023756:	add    DWORD PTR [rax],eax
   140023758:	(bad)  
   140023759:	(bad)  
   14002375a:	(bad)  
   14002375b:	inc    eax
   14002375d:	outs   dx,DWORD PTR ds:[rsi]
   14002375e:	add    DWORD PTR [rax],eax
   140023760:	(bad)  
   140023761:	(bad)  
   140023762:	(bad)  
   140023763:	jmp    rax
   140023765:	outs   dx,DWORD PTR ds:[rsi]
   140023766:	add    DWORD PTR [rax],eax
   140023768:	add    DWORD PTR [rax],eax
   14002376a:	add    BYTE PTR [rax],al
   14002376c:	add    BYTE PTR [rax+0x1],dh
   14002376f:	add    bh,bh
   140023771:	(bad)  
   140023772:	(bad)  
   140023773:	jmp    QWORD PTR [rax]
   140023775:	jo     0x140023778
   140023777:	add    BYTE PTR [rbx],al
   140023779:	add    BYTE PTR [rax],al
   14002377b:	add    BYTE PTR [rax+0x70],al
   14002377e:	add    DWORD PTR [rax],eax
   140023780:	(bad)  
   140023781:	(bad)  
   140023782:	(bad)  
   140023783:	jmp    QWORD PTR [rax+0x70]
   140023786:	add    DWORD PTR [rax],eax
   140023788:	(bad)  
   140023789:	(bad)  
   14002378a:	(bad)  
   14002378b:	inc    DWORD PTR [rax-0xfffe90]
   140023791:	(bad)  
   140023792:	(bad)  
   140023793:	jmp    QWORD PTR [rax-0xfffe90]
   140023799:	(bad)  
   14002379a:	(bad)  
   14002379b:	inc    eax
   14002379d:	jo     0x1400237a0
   14002379f:	add    bh,bh
   1400237a1:	(bad)  
   1400237a2:	(bad)  
   1400237a3:	jmp    rax
   1400237a5:	jo     0x1400237a8
   1400237a7:	add    bh,bh
   1400237a9:	(bad)  
   1400237aa:	(bad)  
   1400237ab:	call   QWORD PTR [rax]
   1400237ad:	jno    0x1400237b0
   1400237af:	add    BYTE PTR [rdx],cl
   1400237b1:	add    BYTE PTR [rax],al
   1400237b3:	add    BYTE PTR [rax],dh
   1400237b5:	jno    0x1400237b8
   1400237b7:	add    bh,bh
   1400237b9:	(bad)  
   1400237ba:	(bad)  
   1400237bb:	call   QWORD PTR [rax+0x71]
   1400237be:	add    DWORD PTR [rax],eax
   1400237c0:	(bad)  
   1400237c1:	(bad)  
   1400237c2:	(bad)  
   1400237c3:	push   QWORD PTR [rax+0x71]
   1400237c6:	add    DWORD PTR [rax],eax
   1400237c8:	(bad)  
   1400237c9:	(bad)  
   1400237ca:	(bad)  
   1400237cb:	call   QWORD PTR [rax+0xe000171]
   1400237d1:	add    BYTE PTR [rax],al
   1400237d3:	add    BYTE PTR [rax-0xfffe8f],dh
   1400237d9:	(bad)  
   1400237da:	(bad)  
   1400237db:	call   rax
   1400237dd:	jno    0x1400237e0
   1400237df:	add    BYTE PTR [rax],dl
   1400237e1:	add    BYTE PTR [rax],al
   1400237e3:	add    al,dh
   1400237e5:	jno    0x1400237e8
   1400237e7:	add    bh,bh
   1400237e9:	(bad)  
   1400237ea:	(bad)  
   1400237eb:	call   QWORD PTR [rax]
   1400237ed:	jb     0x1400237f0
   1400237ef:	add    BYTE PTR [rdx],dl
   1400237f1:	add    BYTE PTR [rax],al
   1400237f3:	add    BYTE PTR [rax],dh
   1400237f5:	jb     0x1400237f8
   1400237f7:	add    BYTE PTR [rax-0x72],al
   1400237fa:	add    BYTE PTR [rax],al
   1400237fc:	(bad)  
   1400237fd:	(bad)  
   1400237fe:	(bad)  
   1400237ff:	call   FWORD PTR [rdx+0x8e]
   140023805:	add    BYTE PTR [rax],al
   140023807:	add    BYTE PTR [rbx-0xffff72],ch
   14002380d:	(bad)  
   14002380e:	(bad)  
   14002380f:	inc    DWORD PTR [rdi]
   140023811:	pop    QWORD PTR [rax]
   140023813:	add    BYTE PTR [rcx],al
   140023815:	add    BYTE PTR [rax],al
   140023817:	add    BYTE PTR [rcx],bl
   140023819:	pop    QWORD PTR [rax]
   14002381b:	add    BYTE PTR [rdx],al
   14002381d:	add    BYTE PTR [rax],al
   14002381f:	add    BYTE PTR [rdx],ch
   140023821:	pop    QWORD PTR [rax]
   140023823:	add    BYTE PTR [rcx],al
   140023825:	add    BYTE PTR [rax],al
   140023827:	add    BYTE PTR [rsi],dh
   140023829:	pop    QWORD PTR [rax]
   14002382b:	add    bh,bh
   14002382d:	(bad)  
   14002382e:	(bad)  
   14002382f:	call   FWORD PTR [rdi+rcx*4+0x0]
   140023833:	add    BYTE PTR [rbx],al
   140023835:	add    BYTE PTR [rax],al
   140023837:	add    BYTE PTR [rdi+0x400008f],al
   14002383d:	add    BYTE PTR [rax],al
   14002383f:	add    BYTE PTR [rdi+0x300008f],bl
   140023845:	add    BYTE PTR [rax],al
   140023847:	add    BYTE PTR [rbx],cl
   140023849:	nop
   14002384a:	add    BYTE PTR [rax],al
   14002384c:	(bad)  
   14002384d:	(bad)  
   14002384e:	(bad)  
   14002384f:	call   FWORD PTR [rsi-0x70]
   140023852:	add    BYTE PTR [rax],al
   140023854:	add    eax,0x6f000000
   140023859:	nop
   14002385a:	add    BYTE PTR [rax],al
   14002385c:	(bad)  
   14002385d:	(bad)  
   14002385e:	(bad)  
   14002385f:	jmp    QWORD PTR [rbx-0x6f]
   140023862:	add    BYTE PTR [rax],al
   140023864:	(bad)  
   140023865:	add    BYTE PTR [rax],al
   140023867:	add    BYTE PTR [rcx+rdx*4+0x0],dh
   14002386b:	add    bh,bh
   14002386d:	(bad)  
   14002386e:	(bad)  
   14002386f:	push   rax
   140023871:	xchg   ecx,eax
   140023872:	add    BYTE PTR [rax],al
   140023874:	(bad)  
   140023875:	add    BYTE PTR [rax],al
   140023877:	add    BYTE PTR [rcx],al
   140023879:	xchg   edx,eax
   14002387a:	add    BYTE PTR [rax],al
   14002387c:	(bad)  
   14002387d:	(bad)  
   14002387e:	(bad)  
   14002387f:	(bad)  
   140023880:	mov    edi,0x8000092
   140023885:	add    BYTE PTR [rax],al
   140023887:	add    dh,bl
   140023889:	xchg   edx,eax
   14002388a:	add    BYTE PTR [rax],al
   14002388c:	(bad)  
   14002388d:	(bad)  
   14002388e:	(bad)  
   14002388f:	call   QWORD PTR [rip+0x9000093]        # 0x149023928
   140023895:	add    BYTE PTR [rax],al
   140023897:	add    BYTE PTR [rip+0xffffffffff000093],bh        # 0x13f023930
   14002389d:	(bad)  
   14002389e:	(bad)  
   14002389f:	(bad)  
   1400238a0:	js     0x140023835
   1400238a2:	add    BYTE PTR [rax],al
   1400238a4:	or     al,BYTE PTR [rax]
   1400238a6:	add    BYTE PTR [rax],al
   1400238a8:	xchg   esp,eax
   1400238a9:	xchg   ebx,eax
   1400238aa:	add    BYTE PTR [rax],al
   1400238ac:	or     eax,DWORD PTR [rax]
   1400238ae:	add    BYTE PTR [rax],al
   1400238b0:	stos   BYTE PTR es:[rdi],al
   1400238b1:	xchg   ebx,eax
   1400238b2:	add    BYTE PTR [rax],al
   1400238b4:	or     al,BYTE PTR [rax]
   1400238b6:	add    BYTE PTR [rax],al
   1400238b8:	mov    dh,0x93
   1400238ba:	add    BYTE PTR [rax],al
   1400238bc:	(bad)  
   1400238bd:	(bad)  
   1400238be:	(bad)  
   1400238bf:	push   rcx
   1400238c1:	xchg   ebx,eax
   1400238c2:	add    BYTE PTR [rax],al
   1400238c4:	or     al,0x0
   1400238c6:	add    BYTE PTR [rax],al
   1400238c8:	sbb    eax,0xff000094
   1400238cd:	(bad)  
   1400238ce:	(bad)  
   1400238cf:	call   FWORD PTR [rdx-0x6c]
   1400238d2:	add    BYTE PTR [rax],al
   1400238d4:	or     eax,0x6b000000
   1400238d9:	xchg   esp,eax
   1400238da:	add    BYTE PTR [rax],al
   1400238dc:	(bad)  
   1400238dd:	(bad)  
   1400238de:	(bad)  
   1400238df:	inc    edi
   1400238e1:	xchg   esp,eax
   1400238e2:	add    BYTE PTR [rax],al
   1400238e4:	(bad)  
   1400238e5:	add    BYTE PTR [rax],al
   1400238e7:	add    cl,bl
   1400238e9:	xchg   esp,eax
   1400238ea:	add    BYTE PTR [rax],al
   1400238ec:	sldt   WORD PTR [rax]
   1400238ef:	add    dl,ch
   1400238f1:	xchg   esp,eax
   1400238f2:	add    BYTE PTR [rax],al
   1400238f4:	(bad)  
   1400238f5:	add    BYTE PTR [rax],al
   1400238f7:	add    dh,dh
   1400238f9:	xchg   esp,eax
   1400238fa:	add    BYTE PTR [rax],al
   1400238fc:	(bad)  
   1400238fd:	(bad)  
   1400238fe:	(bad)  
   1400238ff:	push   QWORD PTR [rcx]
   140023901:	xchg   ebp,eax
   140023902:	add    BYTE PTR [rax],al
   140023904:	adc    BYTE PTR [rax],al
   140023906:	add    BYTE PTR [rax],al
   140023908:	rex.XB xchg r13d,eax
   14002390a:	add    BYTE PTR [rax],al
   14002390c:	adc    DWORD PTR [rax],eax
   14002390e:	add    BYTE PTR [rax],al
   140023910:	push   rsp
   140023911:	xchg   ebp,eax
   140023912:	add    BYTE PTR [rax],al
   140023914:	adc    BYTE PTR [rax],al
   140023916:	add    BYTE PTR [rax],al
   140023918:	(bad)  
   140023919:	xchg   ebp,eax
   14002391a:	add    BYTE PTR [rax],al
   14002391c:	(bad)  
   14002391d:	(bad)  
   14002391e:	(bad)  
   14002391f:	call   FWORD PTR [rbp+rdx*4+0x120000]
   140023926:	add    BYTE PTR [rax],al
   140023928:	scas   al,BYTE PTR es:[rdi]
   140023929:	xchg   ebp,eax
   14002392a:	add    BYTE PTR [rax],al
   14002392c:	adc    eax,DWORD PTR [rax]
   14002392e:	add    BYTE PTR [rax],al
   140023930:	mov    edi,0x12000095
   140023935:	add    BYTE PTR [rax],al
   140023937:	add    bl,cl
   140023939:	xchg   ebp,eax
   14002393a:	add    BYTE PTR [rax],al
   14002393c:	(bad)  
   14002393d:	(bad)  
   14002393e:	(bad)  
   14002393f:	inc    DWORD PTR [rcx]
   140023941:	clts   
   140023943:	add    BYTE PTR [rdi],cl
   140023945:	or     eax,DWORD PTR fs:[rax]
   140023948:	sysenter 
   14002394a:	or     al,BYTE PTR [rax]
   14002394c:	(bad)  
   14002394e:	or     esi,DWORD PTR [rax+0x11]
   140023951:	and    BYTE PTR [rcx],cl
   140023953:	add    BYTE PTR [rax],ah
   140023955:	sbb    BYTE PTR fs:[rax],al
   140023958:	sbb    al,0x54
   14002395a:	(bad)  
   14002395b:	add    BYTE PTR [rax],bl
   14002395d:	xor    al,0x16
   14002395f:	add    BYTE PTR [rbx],cl
   140023961:	add    DWORD PTR [rax+rax*1],edx
   140023964:	add    al,0x70
   140023966:	add    BYTE PTR [rax],al
   140023968:	(bad)  
   140023969:	add    DWORD PTR ds:[rax],eax
   14002396c:	add    al,ah
   14002396e:	add    DWORD PTR [rax],eax
   140023970:	(bad)  
   140023971:	(bad)  
   140023972:	(bad)  
   140023973:	call   QWORD PTR [rax+0x72]
   140023976:	add    DWORD PTR [rax],eax
   140023978:	add    BYTE PTR [rax],al
   14002397a:	add    BYTE PTR [rax],al
   14002397c:	jo     0x1400239f0
   14002397e:	add    DWORD PTR [rax],eax
   140023980:	add    DWORD PTR [rax],eax
   140023982:	add    BYTE PTR [rax],al
   140023984:	nop
   140023985:	jb     0x140023988
   140023987:	add    BYTE PTR [rcx],al
   140023989:	add    BYTE PTR [rax],al
   14002398b:	add    BYTE PTR [rax+0x3000172],dh
   140023991:	add    BYTE PTR [rax],al
   140023993:	add    al,dl
   140023995:	jb     0x140023998
   140023997:	add    BYTE PTR [rax+rax*1],al
   14002399a:	add    BYTE PTR [rax],al
   14002399c:	lock jb 0x1400239a0
   14002399f:	add    BYTE PTR [rip+0x10000000],al        # 0x1500239a5
   1400239a5:	jae    0x1400239a8
   1400239a7:	add    BYTE PTR [rax-0x69],al
   1400239aa:	add    BYTE PTR [rax],al
   1400239ac:	(bad)  
   1400239ad:	(bad)  
   1400239ae:	(bad)  
   1400239af:	push   QWORD PTR [rdi-0x69]
   1400239b2:	add    BYTE PTR [rax],al
   1400239b4:	add    BYTE PTR [rax],al
   1400239b6:	add    BYTE PTR [rax],al
   1400239b8:	(bad)  
   1400239b9:	xchg   edi,eax
   1400239ba:	add    BYTE PTR [rax],al
   1400239bc:	add    DWORD PTR [rax],eax
   1400239be:	add    BYTE PTR [rax],al
   1400239c0:	(bad)  
   1400239c1:	xchg   edi,eax
   1400239c2:	add    BYTE PTR [rax],al
   1400239c4:	add    al,BYTE PTR [rax]
   1400239c6:	add    BYTE PTR [rax],al
   1400239c8:	fcom   QWORD PTR [rdi+0x60000]
   1400239ce:	add    BYTE PTR [rax],al
   1400239d0:	jmp    0x140023969
   1400239d2:	add    BYTE PTR [rax],al
   1400239d4:	add    eax,0xf6000000
   1400239d9:	xchg   edi,eax
   1400239da:	add    BYTE PTR [rax],al
   1400239dc:	add    al,0x0
   1400239de:	add    BYTE PTR [rax],al
   1400239e0:	add    bl,BYTE PTR [rax+0x30000]
   1400239e6:	add    BYTE PTR [rax],al
   1400239e8:	(bad)  
   1400239e9:	cwde   
   1400239ea:	add    BYTE PTR [rax],al
   1400239ec:	add    DWORD PTR [rax],eax
   1400239ee:	add    BYTE PTR [rax],al
   1400239f0:	sbb    bl,BYTE PTR [rax+0x0]
   1400239f6:	add    BYTE PTR [rax],al
   1400239f8:	es cwde 
   1400239fa:	add    BYTE PTR [rax],al
   1400239fc:	(bad)  
   1400239fd:	(bad)  
   1400239fe:	(bad)  
   1400239ff:	call   QWORD PTR [rcx]
   140023a01:	sub    cl,BYTE PTR [rbx]
   140023a03:	add    BYTE PTR [rdx],ch
   140023a05:	push   rsp
   140023a06:	(bad)  
   140023a07:	add    BYTE PTR [rsi],ah
   140023a09:	xor    al,0x26
   140023a0b:	add    BYTE PTR [rsi],dl
   140023a0d:	add    DWORD PTR [rsi],ebx
   140023a0f:	add    BYTE PTR [rdi],cl
   140023a11:	loopne 0x140023a20
   140023a13:	ror    BYTE PTR [rbx],1
   140023a15:	ror    BYTE PTR [rcx],0x70
   140023a18:	or     BYTE PTR [rax+0x0],ah
   140023a1b:	add    dh,cl
   140023a1d:	add    DWORD PTR ds:[rax],eax
   140023a20:	xor    al,ah
   140023a22:	add    DWORD PTR [rax],eax
   140023a24:	(bad)  
   140023a25:	(bad)  
   140023a26:	(bad)  
   140023a27:	inc    DWORD PTR [rax+0x74]
   140023a2a:	add    DWORD PTR [rax],eax
   140023a2c:	add    BYTE PTR [rax],al
   140023a2e:	add    BYTE PTR [rax],al
   140023a30:	xor    BYTE PTR [rbx+0x1],dh
   140023a33:	add    BYTE PTR [rcx],al
   140023a35:	add    BYTE PTR [rax],al
   140023a37:	add    BYTE PTR [rax+0x73],dl
   140023a3a:	add    DWORD PTR [rax],eax
   140023a3c:	add    al,BYTE PTR [rax]
   140023a3e:	add    BYTE PTR [rax],al
   140023a40:	jo     0x140023ab5
   140023a42:	add    DWORD PTR [rax],eax
   140023a44:	add    al,BYTE PTR [rax]
   140023a46:	add    BYTE PTR [rax],al
   140023a48:	nop
   140023a49:	jae    0x140023a4c
   140023a4b:	add    BYTE PTR [rax+rax*1],al
   140023a4e:	add    BYTE PTR [rax],al
   140023a50:	mov    al,0x73
   140023a52:	add    DWORD PTR [rax],eax
   140023a54:	add    eax,0xd0000000
   140023a59:	jae    0x140023a5c
   140023a5b:	add    BYTE PTR [rsi],al
   140023a5d:	add    BYTE PTR [rax],al
   140023a5f:	add    al,dh
   140023a61:	jae    0x140023a64
   140023a63:	add    BYTE PTR [rax],al
   140023a65:	add    BYTE PTR [rax],al
   140023a67:	add    BYTE PTR [rax],dl
   140023a69:	je     0x140023a6c
   140023a6b:	add    BYTE PTR [rax],al
   140023a6d:	add    BYTE PTR [rax],al
   140023a6f:	add    BYTE PTR [rax+0x74],dh
   140023a72:	add    DWORD PTR [rax],eax
   140023a74:	or     DWORD PTR [rax],eax
   140023a76:	add    BYTE PTR [rax],al
   140023a78:	nop
   140023a79:	je     0x140023a7c
   140023a7b:	add    BYTE PTR [rdx],cl
   140023a7d:	add    BYTE PTR [rax],al
   140023a7f:	add    BYTE PTR [rax+0xb000174],dh
   140023a85:	add    BYTE PTR [rax],al
   140023a87:	add    al,dl
   140023a89:	je     0x140023a8c
   140023a8b:	add    BYTE PTR [rax-0xffff68],dh
   140023a91:	(bad)  
   140023a92:	(bad)  
   140023a93:	push   rdi
   140023a95:	cwde   
   140023a96:	add    BYTE PTR [rax],al
   140023a98:	add    DWORD PTR [rax],eax
   140023a9a:	add    BYTE PTR [rax],al
   140023a9c:	add    ebx,DWORD PTR [rcx+0x20000]
   140023aa2:	add    BYTE PTR [rax],al
   140023aa4:	cqo    
   140023aa6:	add    BYTE PTR [rax],al
   140023aa8:	add    eax,DWORD PTR [rax]
   140023aaa:	add    BYTE PTR [rax],al
   140023aac:	addr32 cdq 
   140023aae:	add    BYTE PTR [rax],al
   140023ab0:	(bad)  
   140023ab1:	add    BYTE PTR [rax],al
   140023ab3:	add    BYTE PTR [rsi-0x67],dh
   140023ab6:	add    BYTE PTR [rax],al
   140023ab8:	(bad)  
   140023ab9:	add    BYTE PTR [rax],al
   140023abb:	add    BYTE PTR [rcx+rbx*4+0x50000],al
   140023ac2:	add    BYTE PTR [rax],al
   140023ac4:	xchg   ebx,eax
   140023ac5:	cdq    
   140023ac6:	add    BYTE PTR [rax],al
   140023ac8:	add    al,0x0
   140023aca:	add    BYTE PTR [rax],al
   140023acc:	movabs ds:0xb100000002000099,al
   140023ad5:	cdq    
   140023ad6:	add    BYTE PTR [rax],al
   140023ad8:	add    DWORD PTR [rax],eax
   140023ada:	add    BYTE PTR [rax],al
   140023adc:	mov    ebp,0x99
   140023ae1:	add    BYTE PTR [rax],al
   140023ae3:	add    BYTE PTR [rcx-0x66],ah
   140023ae6:	add    BYTE PTR [rax],al
   140023ae8:	or     BYTE PTR [rax],al
   140023aea:	add    BYTE PTR [rax],al
   140023aec:	outs   dx,DWORD PTR ds:[rsi]
   140023aed:	(bad)  
   140023aee:	add    BYTE PTR [rax],al
   140023af0:	add    BYTE PTR [rax],al
   140023af2:	add    BYTE PTR [rax],al
   140023af4:	jae    0x140023a90
   140023af6:	add    BYTE PTR [rax],al
   140023af8:	or     BYTE PTR [rax],al
   140023afa:	add    BYTE PTR [rax],al
   140023afc:	xchg   edi,eax
   140023afd:	(bad)  
   140023afe:	add    BYTE PTR [rax],al
   140023b00:	add    BYTE PTR [rax],al
   140023b02:	add    BYTE PTR [rax],al
   140023b04:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140023b05:	(bad)  
   140023b06:	add    BYTE PTR [rax],al
   140023b08:	or     al,0x0
   140023b0a:	add    BYTE PTR [rax],al
   140023b0c:	mov    bl,0x9a
   140023b0e:	add    BYTE PTR [rax],al
   140023b10:	or     eax,DWORD PTR [rax]
   140023b12:	add    BYTE PTR [rax],al
   140023b14:	mov    esi,0xa00009a
   140023b19:	add    BYTE PTR [rax],al
   140023b1b:	add    dl,cl
   140023b1d:	(bad)  
   140023b1e:	add    BYTE PTR [rax],al
   140023b20:	or     DWORD PTR [rax],eax
   140023b22:	add    BYTE PTR [rax],al
   140023b24:	(bad)  
   140023b25:	(bad)  
   140023b26:	add    BYTE PTR [rax],al
   140023b28:	add    BYTE PTR [rax],al
   140023b2a:	add    BYTE PTR [rax],al
   140023b2c:	adc    DWORD PTR [rax],ebp
   140023b2e:	or     al,0x0
   140023b30:	sub    BYTE PTR [rax+rbx*1+0x0],ah
   140023b34:	and    al,0x54
   140023b36:	(bad)  
   140023b37:	add    BYTE PTR [rax],ah
   140023b39:	xor    al,0x16
   140023b3b:	add    BYTE PTR [rbx],dl
   140023b3d:	repnz or al,0xf0
   140023b40:	or     ah,al
   140023b42:	or     al,dl
   140023b44:	(bad)  
   140023b45:	rol    BYTE PTR [rax+rsi*2],0xce
   140023b49:	add    DWORD PTR ds:[rax],eax
   140023b4c:	(bad)  
   140023b4d:	loopne 0x140023b50
   140023b4f:	add    bh,bh
   140023b51:	(bad)  
   140023b52:	(bad)  
   140023b53:	push   rax
   140023b55:	je     0x140023b58
   140023b57:	add    BYTE PTR [rax],al
   140023b59:	add    BYTE PTR [rax],al
   140023b5b:	add    BYTE PTR [rax],dl
   140023b5d:	jne    0x140023b60
   140023b5f:	add    bh,bh
   140023b61:	(bad)  
   140023b62:	(bad)  
   140023b63:	push   QWORD PTR [rax]
   140023b65:	jne    0x140023b68
   140023b67:	add    BYTE PTR [rdx],al
   140023b69:	add    BYTE PTR [rax],al
   140023b6b:	add    BYTE PTR [rax+0x75],dl
   140023b6e:	add    DWORD PTR [rax],eax
   140023b70:	add    eax,DWORD PTR [rax]
   140023b72:	add    BYTE PTR [rax],al
   140023b74:	jo     0x140023beb
   140023b76:	add    DWORD PTR [rax],eax
   140023b78:	add    al,0x0
   140023b7a:	add    BYTE PTR [rax],al
   140023b7c:	nop
   140023b7d:	jne    0x140023b80
   140023b7f:	add    bh,bh
   140023b81:	(bad)  
   140023b82:	(bad)  
   140023b83:	push   QWORD PTR [rax+0x6000175]
   140023b89:	add    BYTE PTR [rax],al
   140023b8b:	add    al,dl
   140023b8d:	jne    0x140023b90
   140023b8f:	add    BYTE PTR [rdi],al
   140023b91:	add    BYTE PTR [rax],al
   140023b93:	add    al,dh
   140023b95:	jne    0x140023b98
   140023b97:	add    BYTE PTR [rax],cl
   140023b99:	add    BYTE PTR [rax],al
   140023b9b:	add    BYTE PTR [rax],dl
   140023b9d:	jbe    0x140023ba0
   140023b9f:	add    BYTE PTR [rax],dl
   140023ba1:	fwait
   140023ba2:	add    BYTE PTR [rax],al
   140023ba4:	(bad)  
   140023ba5:	(bad)  
   140023ba6:	(bad)  
   140023ba7:	dec    DWORD PTR [rbx+0x9b]
   140023bad:	add    BYTE PTR [rax],al
   140023baf:	add    BYTE PTR [rbx-0x64],al
   140023bb2:	add    BYTE PTR [rax],al
   140023bb4:	add    DWORD PTR [rax],eax
   140023bb6:	add    BYTE PTR [rax],al
   140023bb8:	push   rdi
   140023bb9:	pushf  
   140023bba:	add    BYTE PTR [rax],al
   140023bbc:	add    BYTE PTR [rax],al
   140023bbe:	add    BYTE PTR [rax],al
   140023bc0:	mov    dl,0x9c
   140023bc2:	add    BYTE PTR [rax],al
   140023bc4:	add    eax,0xbe000000
   140023bc9:	pushf  
   140023bca:	add    BYTE PTR [rax],al
   140023bcc:	add    al,0x0
   140023bce:	add    BYTE PTR [rax],al
   140023bd0:	leave  
   140023bd1:	pushf  
   140023bd2:	add    BYTE PTR [rax],al
   140023bd4:	add    eax,DWORD PTR [rax]
   140023bd6:	add    BYTE PTR [rax],al
   140023bd8:	(bad)  
   140023bd9:	pushf  
   140023bda:	add    BYTE PTR [rax],al
   140023bdc:	add    al,BYTE PTR [rax]
   140023bde:	add    BYTE PTR [rax],al
   140023be0:	loope  0x140023b7e
   140023be2:	add    BYTE PTR [rax],al
   140023be4:	(bad)  
   140023be5:	(bad)  
   140023be6:	(bad)  
   140023be7:	push   rcx
   140023be9:	pushf  
   140023bea:	add    BYTE PTR [rax],al
   140023bec:	or     DWORD PTR [rax],eax
   140023bee:	add    BYTE PTR [rax],al
   140023bf0:	std    
   140023bf1:	pushf  
   140023bf2:	add    BYTE PTR [rax],al
   140023bf4:	or     BYTE PTR [rax],al
   140023bf6:	add    BYTE PTR [rax],al
   140023bf8:	or     BYTE PTR [rbp+0x70000],bl
   140023bfe:	add    BYTE PTR [rax],al
   140023c00:	adc    al,0x9d
   140023c02:	add    BYTE PTR [rax],al
   140023c04:	(bad)  
   140023c05:	add    BYTE PTR [rax],al
   140023c07:	add    BYTE PTR [rax],ah
   140023c09:	popf   
   140023c0a:	add    BYTE PTR [rax],al
   140023c0c:	(bad)  
   140023c0d:	(bad)  
   140023c0e:	(bad)  
   140023c0f:	call   QWORD PTR [rcx]
   140023c11:	(bad)  
   140023c12:	or     BYTE PTR [rax],al
   140023c14:	(bad)  
   140023c15:	or     eax,DWORD PTR fs:[rax]
   140023c18:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140023c1c:	adc    al,0x34
   140023c1e:	or     BYTE PTR [rax],al
   140023c20:	(bad)  
   140023c21:	push   rdx
   140023c22:	add    dh,BYTE PTR [rax-0x32]
   140023c25:	add    DWORD PTR ds:[rax],eax
   140023c28:	nop
   140023c29:	loopne 0x140023c2c
   140023c2b:	add    bh,bh
   140023c2d:	(bad)  
   140023c2e:	(bad)  
   140023c2f:	push   QWORD PTR [rax]
   140023c31:	jbe    0x140023c34
   140023c33:	add    BYTE PTR [rax-0x63],dh
   140023c36:	add    BYTE PTR [rax],al
   140023c38:	(bad)  
   140023c39:	(bad)  
   140023c3a:	(bad)  
   140023c3b:	call   FWORD PTR [rdx+0x9d]
   140023c41:	add    BYTE PTR [rax],al
   140023c43:	add    BYTE PTR [rdi-0xffff63],ch
   140023c49:	(bad)  
   140023c4a:	(bad)  
   140023c4b:	call   FWORD PTR [rcx]
   140023c4d:	or     al,BYTE PTR [rdx]
   140023c4f:	add    BYTE PTR [rdx],cl
   140023c51:	push   rdx
   140023c52:	(bad)  
   140023c53:	push   rax
   140023c54:	(bad)  
   140023c55:	add    DWORD PTR ds:[rax],eax
   140023c58:	shl    al,0x1
   140023c5b:	add    BYTE PTR [rcx],bl
   140023c5d:	and    ecx,DWORD PTR [rax]
   140023c5f:	add    BYTE PTR [rbx],ah
   140023c61:	je     0x140023c72
   140023c63:	add    BYTE PTR [rsi],bl
   140023c65:	fs (bad) 
   140023c67:	add    BYTE PTR [rcx],bl
   140023c69:	xor    al,0xd
   140023c6b:	add    BYTE PTR [rbx],cl
   140023c6d:	xchg   edx,eax
   140023c6e:	(bad)  
   140023c6f:	ror    dh,0x3e
   140023c72:	add    DWORD PTR [rax],eax
   140023c74:	shl    al,0x1
   140023c77:	add    BYTE PTR [rdx],al
   140023c79:	add    BYTE PTR [rax],al
   140023c7b:	add    BYTE PTR [rdx],al
   140023c7d:	add    BYTE PTR [rax],al
   140023c7f:	add    BYTE PTR [rbx],al
   140023c81:	add    BYTE PTR [rax],al
   140023c83:	add    BYTE PTR [rcx],al
   140023c85:	add    BYTE PTR [rax],al
   140023c87:	add    BYTE PTR [rsp+rdi*1+0x2],dh
   140023c8e:	add    BYTE PTR [rax],al
   140023c90:	add    eax,DWORD PTR [rax]
   140023c92:	add    BYTE PTR [rax],al
   140023c94:	add    al,0x0
   140023c96:	add    BYTE PTR [rax],al
   140023c98:	add    DWORD PTR [rax],eax
   140023c9a:	add    BYTE PTR [rax],al
   140023c9c:	movabs al,ds:0x4000023c
   140023ca5:	add    BYTE PTR [rax],al
   140023ca7:	add    BYTE PTR [rax],al
   140023ca9:	add    BYTE PTR [rax],al
   140023cab:	add    BYTE PTR [rax+0x48000176],ah
   140023cb1:	add    BYTE PTR [rax],al
   140023cb3:	add    BYTE PTR [rax+0x0],al
	...
   140023cbe:	add    BYTE PTR [rax],al
   140023cc0:	jo     0x140023d38
   140023cc2:	add    DWORD PTR [rax],eax
   140023cc4:	rex.W add BYTE PTR [rax],al
   140023cc7:	add    bh,bh
   140023cc9:	(bad)  
   140023cca:	(bad)  
   140023ccb:	inc    DWORD PTR [rax]
   140023ccd:	add    BYTE PTR [rax],al
   140023ccf:	add    BYTE PTR [rax],al
   140023cd1:	add    BYTE PTR [rax],al
   140023cd3:	add    BYTE PTR [rax+0x76],dl
   140023cd6:	add    DWORD PTR [rax],eax
	...
   140023ce8:	(bad)  
   140023ce9:	(bad)  
   140023cea:	(bad)  
   140023ceb:	inc    DWORD PTR [rax]
   140023ced:	add    BYTE PTR [rax],al
   140023cef:	add    BYTE PTR [rax],dh
   140023cf1:	sahf   
   140023cf2:	add    BYTE PTR [rax],al
   140023cf4:	(bad)  
   140023cf5:	(bad)  
   140023cf6:	(bad)  
   140023cf7:	(bad)  
   140023cf8:	jl     0x140023c98
   140023cfa:	add    BYTE PTR [rax],al
   140023cfc:	add    BYTE PTR [rax],al
   140023cfe:	add    BYTE PTR [rax],al
   140023d00:	test   DWORD PTR [rsi+0x10000],ebx
   140023d06:	add    BYTE PTR [rax],al
   140023d08:	test   eax,0x200009e
   140023d0d:	add    BYTE PTR [rax],al
   140023d0f:	add    BYTE PTR [rax-0xffff62],bh
   140023d15:	(bad)  
   140023d16:	(bad)  
   140023d17:	push   QWORD PTR [rax+0x76]
   140023d1a:	add    DWORD PTR [rax],eax
   140023d1c:	add    BYTE PTR [rax],al
   140023d1e:	add    BYTE PTR [rax],al
   140023d20:	jge    0x140023d98
   140023d22:	add    DWORD PTR [rax],eax
   140023d24:	add    eax,DWORD PTR [rax]
   140023d26:	add    BYTE PTR [rax],al
   140023d28:	xchg   esi,eax
   140023d29:	jbe    0x140023d2c
   140023d2b:	add    BYTE PTR [rax],al
   140023d2d:	add    BYTE PTR [rax],al
   140023d2f:	add    BYTE PTR [rbp+0x4000176],ch
   140023d35:	add    BYTE PTR [rax],al
   140023d37:	add    ch,al
   140023d39:	jbe    0x140023d3c
   140023d3b:	add    BYTE PTR [rax],al
   140023d3d:	add    BYTE PTR [rax],al
   140023d3f:	add    BYTE PTR [rcx],bl
   140023d41:	or     al,BYTE PTR [rdx]
   140023d43:	add    BYTE PTR [rdx],cl
   140023d45:	push   rdx
   140023d46:	(bad)  
   140023d47:	push   rax
   140023d48:	(bad)  
   140023d49:	add    DWORD PTR ds:[rax],eax
   140023d4c:	lock loopne 0x140023d50
   140023d4f:	add    BYTE PTR [rcx],bl
   140023d51:	sbb    eax,0x641d0006
   140023d56:	(bad)  
   140023d57:	add    BYTE PTR [rax],bl
   140023d59:	xor    al,0xd
   140023d5b:	add    BYTE PTR [rdx],cl
   140023d5d:	xchg   edx,eax
   140023d5e:	(bad)  
   140023d5f:	jo     0x140023d2f
   140023d61:	add    DWORD PTR ds:[rax],eax
   140023d64:	lock loopne 0x140023d68
   140023d67:	add    BYTE PTR [rcx],al
   140023d69:	add    BYTE PTR [rax],al
   140023d6b:	add    BYTE PTR [rdx],al
   140023d6d:	add    BYTE PTR [rax],al
   140023d6f:	add    BYTE PTR [rbx],al
   140023d71:	add    BYTE PTR [rax],al
   140023d73:	add    BYTE PTR [rcx],al
   140023d75:	add    BYTE PTR [rax],al
   140023d77:	add    BYTE PTR [rbp+rdi*1+0x2],ah
   140023d7e:	add    BYTE PTR [rax],al
   140023d80:	add    eax,DWORD PTR [rax]
   140023d82:	add    BYTE PTR [rax],al
   140023d84:	add    al,0x0
   140023d86:	add    BYTE PTR [rax],al
   140023d88:	add    DWORD PTR [rax],eax
   140023d8a:	add    BYTE PTR [rax],al
   140023d8c:	nop
   140023d8d:	cmp    eax,0x400002
	...
   140023d9a:	add    BYTE PTR [rax],al
   140023d9c:	adc    BYTE PTR [rdi+0x1],dh
   140023d9f:	add    BYTE PTR [rax+0x0],cl
   140023da2:	add    BYTE PTR [rax],al
   140023da4:	add    BYTE PTR [rax],al
	...
   140023daf:	add    al,dh
   140023db1:	jbe    0x140023db4
   140023db3:	add    BYTE PTR [rax+0x0],cl
   140023db6:	add    BYTE PTR [rax],al
   140023db8:	(bad)  
   140023db9:	(bad)  
   140023dba:	(bad)  
   140023dbb:	inc    DWORD PTR [rax]
	...
   140023dc5:	add    BYTE PTR [rax],al
   140023dc7:	add    BYTE PTR [rcx],al
   140023dc9:	add    BYTE PTR [rax],al
   140023dcb:	add    al,dl
   140023dcd:	jbe    0x140023dd0
	...
   140023dd7:	add    bh,bh
   140023dd9:	(bad)  
   140023dda:	(bad)  
   140023ddb:	inc    DWORD PTR [rax]
   140023ddd:	add    BYTE PTR [rax],al
   140023ddf:	add    al,ah
   140023de1:	sahf   
   140023de2:	add    BYTE PTR [rax],al
   140023de4:	(bad)  
   140023de5:	(bad)  
   140023de6:	(bad)  
   140023de7:	jmp    QWORD PTR [rsi]
   140023de9:	lahf   
   140023dea:	add    BYTE PTR [rax],al
   140023dec:	add    BYTE PTR [rax],al
   140023dee:	add    BYTE PTR [rax],al
   140023df0:	xor    BYTE PTR [rdi+0x10000],bl
   140023df6:	add    BYTE PTR [rax],al
   140023df8:	cmp    DWORD PTR [rdi+0x20000],ebx
   140023dfe:	add    BYTE PTR [rax],al
   140023e00:	pop    rbp
   140023e01:	lahf   
   140023e02:	add    BYTE PTR [rax],al
   140023e04:	(bad)  
   140023e05:	(bad)  
   140023e06:	(bad)  
   140023e07:	push   rax
   140023e09:	jbe    0x140023e0c
   140023e0b:	add    BYTE PTR [rax],al
   140023e0d:	add    BYTE PTR [rax],al
   140023e0f:	add    ch,bh
   140023e11:	jbe    0x140023e14
   140023e13:	add    BYTE PTR [rbx],al
   140023e15:	add    BYTE PTR [rax],al
   140023e17:	add    BYTE PTR [rdi],al
   140023e19:	ja     0x140023e1c
   140023e1b:	add    BYTE PTR [rax],al
   140023e1d:	add    BYTE PTR [rax],al
   140023e1f:	add    BYTE PTR [rip+0x4000177],bl        # 0x144023f9c
   140023e25:	add    BYTE PTR [rax],al
   140023e27:	add    BYTE PTR [rip+0x177],dh        # 0x140023fa4
   140023e2d:	add    BYTE PTR [rax],al
   140023e2f:	add    BYTE PTR [rcx],al
   140023e31:	clts   
   140023e33:	add    BYTE PTR [rdi],cl
   140023e35:	or     DWORD PTR fs:[rax],eax
   140023e38:	sysenter 
   140023e3a:	or     BYTE PTR [rax],al
   140023e3c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140023e3f:	jo     0x140023e52
   140023e41:	sbb    DWORD PTR [rsi],eax
   140023e43:	add    BYTE PTR [rcx],bl
   140023e45:	or     al,BYTE PTR fs:[rax]
   140023e48:	adc    al,0x34
   140023e4a:	or     BYTE PTR [rax],al
   140023e4c:	(bad)  
   140023e4d:	push   rdx
   140023e4e:	add    dh,BYTE PTR [rax-0x32]
   140023e51:	add    DWORD PTR ds:[rax],eax
   140023e54:	and    cl,ah
   140023e56:	add    DWORD PTR [rax],eax
   140023e58:	(bad)  
   140023e59:	(bad)  
   140023e5a:	(bad)  
   140023e5b:	inc    DWORD PTR [rax+0x77]
   140023e5e:	add    DWORD PTR [rax],eax
   140023e60:	(bad)  
   140023e61:	(bad)  
   140023e62:	(bad)  
   140023e63:	inc    DWORD PTR [rax]
   140023e65:	add    BYTE PTR [rax],al
   140023e67:	add    al,dl
   140023e69:	movabs al,ds:0xa101ffffffff0000
   140023e72:	add    BYTE PTR [rax],al
   140023e74:	add    BYTE PTR [rax],al
   140023e76:	add    BYTE PTR [rax],al
   140023e78:	(bad)  
   140023e79:	movabs eax,ds:0xb19ffffffff0000
   140023e82:	add    eax,DWORD PTR [rax]
   140023e84:	or     eax,DWORD PTR [rdx+0x7]
   140023e87:	push   rax
   140023e88:	(bad)  
   140023e89:	xor    BYTE PTR [rax],al
   140023e8b:	add    dh,cl
   140023e8d:	add    DWORD PTR ds:[rax],eax
   140023e90:	push   rax
   140023e91:	loope  0x140023e94
   140023e93:	add    BYTE PTR [rcx],bl
   140023e95:	(bad)  
   140023e96:	(bad)  
   140023e97:	add    BYTE PTR [rdi],bl
   140023e99:	xor    al,0xc
   140023e9b:	add    BYTE PTR [rcx],dl
   140023e9d:	push   rdx
   140023e9e:	or     eax,0xa700bc0
   140023ea3:	(bad)  
   140023ea4:	(bad)  
   140023ea5:	add    DWORD PTR ds:[rax],eax
   140023ea8:	push   rax
   140023ea9:	loope  0x140023eac
	...
   140023eb3:	add    BYTE PTR [rcx],al
   140023eb5:	add    BYTE PTR [rax],al
   140023eb7:	add    BYTE PTR [rcx],al
   140023eb9:	add    BYTE PTR [rax],al
   140023ebb:	add    al,ch
   140023ebd:	add    al,BYTE PTR ds:[rax]
   140023ec0:	add    al,BYTE PTR [rax]
   140023ec2:	add    BYTE PTR [rax],al
   140023ec4:	add    al,BYTE PTR [rax]
   140023ec6:	add    BYTE PTR [rax],al
   140023ec8:	add    eax,DWORD PTR [rax]
   140023eca:	add    BYTE PTR [rax],al
   140023ecc:	add    DWORD PTR [rax],eax
   140023ece:	add    BYTE PTR [rax],al
   140023ed0:	(bad)  
   140023ed1:	add    al,BYTE PTR ds:[rax]
   140023ed4:	add    BYTE PTR [rax],al
	...
   140023edf:	add    BYTE PTR [rax+0x48000177],ah
   140023ee5:	add    BYTE PTR [rax],al
   140023ee7:	add    BYTE PTR [rax+0x0],al
	...
   140023ef2:	add    BYTE PTR [rax],al
   140023ef4:	(bad)  
   140023ef5:	ja     0x140023ef8
   140023ef7:	add    BYTE PTR [rax+0x0],cl
   140023efa:	add    BYTE PTR [rax],al
   140023efc:	loopne 0x140023e9f
   140023efe:	add    BYTE PTR [rax],al
   140023f00:	(bad)  
   140023f01:	(bad)  
   140023f02:	(bad)  
   140023f03:	jmp    QWORD PTR [rdi]
   140023f05:	movabs ds:0xa248000000000000,al
   140023f0e:	add    BYTE PTR [rax],al
   140023f10:	add    al,BYTE PTR [rax]
   140023f12:	add    BYTE PTR [rax],al
   140023f14:	jne    0x140023eb8
   140023f16:	add    BYTE PTR [rax],al
   140023f18:	(bad)  
   140023f19:	(bad)  
   140023f1a:	(bad)  
   140023f1b:	jmp    QWORD PTR [rax+0x77]
   140023f1e:	add    DWORD PTR [rax],eax
   140023f20:	add    BYTE PTR [rax],al
   140023f22:	add    BYTE PTR [rax],al
   140023f24:	outs   dx,BYTE PTR ds:[rsi]
   140023f25:	ja     0x140023f28
   140023f27:	add    BYTE PTR [rcx],al
   140023f29:	add    BYTE PTR [rax],al
   140023f2b:	add    BYTE PTR [rdi+rsi*2+0x1],cl
   140023f32:	add    BYTE PTR [rax],al
   140023f34:	scas   al,BYTE PTR es:[rdi]
   140023f35:	ja     0x140023f38
   140023f37:	add    BYTE PTR [rbx],al
   140023f39:	add    BYTE PTR [rax],al
   140023f3b:	add    ah,ch
   140023f3d:	ja     0x140023f40
   140023f3f:	add    BYTE PTR [rax],al
   140023f41:	add    BYTE PTR [rax],al
   140023f43:	add    BYTE PTR [rcx],ah
   140023f45:	add    BYTE PTR [rax],al
   140023f47:	add    BYTE PTR [rax-0x5d],dh
   140023f4a:	add    BYTE PTR [rax],al
   140023f4c:	ret    0xa3
   140023f4f:	add    BYTE PTR [rbx+rdx*2+0x2],dl
   140023f53:	add    BYTE PTR [rcx],ah
   140023f55:	add    eax,0x74050002
   140023f5a:	(bad)  
   140023f5b:	add    BYTE PTR [rax-0x5d],dh
   140023f5e:	add    BYTE PTR [rax],al
   140023f60:	ret    0xa3
   140023f63:	add    BYTE PTR [rbx+rdx*2+0x2],dl
   140023f67:	add    BYTE PTR [rcx],bl
   140023f69:	or     al,BYTE PTR [rdx]
   140023f6b:	add    BYTE PTR [rdx],cl
   140023f6d:	xor    al,BYTE PTR [rsi]
   140023f6f:	push   rax
   140023f70:	(bad)  
   140023f71:	add    DWORD PTR ds:[rax],eax
   140023f74:	and    cl,0x1
   140023f77:	add    BYTE PTR [rcx],bl
   140023f79:	sbb    BYTE PTR [rax+rax*1],al
   140023f7c:	sbb    BYTE PTR [rcx+rcx*1],dh
   140023f7f:	add    BYTE PTR [rdx],cl
   140023f81:	push   rdx
   140023f82:	(bad)  
   140023f83:	jo     0x140023f53
   140023f85:	add    DWORD PTR ds:[rax],eax
   140023f88:	and    cl,0x1
	...
   140023f93:	add    BYTE PTR [rcx],al
   140023f95:	add    BYTE PTR [rax],al
   140023f97:	add    BYTE PTR [rcx],al
   140023f99:	add    BYTE PTR [rax],al
   140023f9b:	add    al,cl
   140023f9d:	(bad)  
   140023f9e:	add    al,BYTE PTR [rax]
   140023fa0:	add    al,BYTE PTR [rax]
   140023fa2:	add    BYTE PTR [rax],al
   140023fa4:	add    al,BYTE PTR [rax]
   140023fa6:	add    BYTE PTR [rax],al
   140023fa8:	add    eax,DWORD PTR [rax]
   140023faa:	add    BYTE PTR [rax],al
   140023fac:	add    DWORD PTR [rax],eax
   140023fae:	add    BYTE PTR [rax],al
   140023fb0:	mov    ah,0x3f
   140023fb2:	add    al,BYTE PTR [rax]
   140023fb4:	add    BYTE PTR [rax],al
	...
   140023fbf:	add    BYTE PTR [rax],dh
   140023fc1:	js     0x140023fc4
   140023fc3:	add    BYTE PTR [rax],bh
   140023fc5:	add    BYTE PTR [rax],al
   140023fc7:	add    BYTE PTR [rax+0x0],al
	...
   140023fd2:	add    BYTE PTR [rax],al
   140023fd4:	add    BYTE PTR [rax+0x1],bh
   140023fd7:	add    BYTE PTR [rax],bh
   140023fd9:	add    BYTE PTR [rax],al
   140023fdb:	add    bh,bh
   140023fdd:	(bad)  
   140023fde:	(bad)  
   140023fdf:	inc    DWORD PTR [rax]
   140023fe1:	add    BYTE PTR [rax],al
   140023fe3:	add    bh,bh
   140023fe5:	(bad)  
   140023fe6:	(bad)  
   140023fe7:	inc    DWORD PTR [rax]
   140023fe9:	add    BYTE PTR [rax],al
   140023feb:	add    bh,bh
   140023fed:	(bad)  
   140023fee:	(bad)  
   140023fef:	inc    DWORD PTR [rax]
   140023ff1:	add    BYTE PTR [rax],al
   140023ff3:	add    bh,bh
   140023ff5:	(bad)  
   140023ff6:	(bad)  
   140023ff7:	inc    DWORD PTR [rax]
   140023ff9:	add    BYTE PTR [rax],al
   140023ffb:	add    bh,bh
   140023ffd:	(bad)  
   140023ffe:	(bad)  
   140023fff:	inc    DWORD PTR [rax]
   140024001:	add    BYTE PTR [rax],al
   140024003:	add    bh,bh
   140024005:	(bad)  
   140024006:	(bad)  
   140024007:	inc    DWORD PTR [rax]
   140024009:	add    BYTE PTR [rax],al
   14002400b:	add    bh,bh
   14002400d:	(bad)  
   14002400e:	(bad)  
   14002400f:	inc    DWORD PTR [rax]
   140024011:	add    BYTE PTR [rax],al
   140024013:	add    bh,bh
   140024015:	(bad)  
   140024016:	(bad)  
   140024017:	inc    DWORD PTR [rax]
   140024019:	add    BYTE PTR [rax],al
   14002401b:	add    BYTE PTR [rdi],al
   14002401d:	add    BYTE PTR [rax],al
   14002401f:	add    BYTE PTR [rax],al
   140024021:	add    BYTE PTR [rax],al
   140024023:	add    BYTE PTR [rax],cl
   140024025:	add    BYTE PTR [rax],al
   140024027:	add    BYTE PTR [rax],al
   140024029:	add    BYTE PTR [rax],al
   14002402b:	add    BYTE PTR [rcx],cl
   14002402d:	add    BYTE PTR [rax],al
   14002402f:	add    BYTE PTR [rax],al
   140024031:	add    BYTE PTR [rax],al
   140024033:	add    BYTE PTR [rdx],cl
   140024035:	add    BYTE PTR [rax],al
   140024037:	add    BYTE PTR [rax],al
   140024039:	add    BYTE PTR [rax],al
   14002403b:	add    BYTE PTR [rdi],al
   14002403d:	add    BYTE PTR [rax],al
   14002403f:	add    BYTE PTR [rax],al
   140024041:	add    BYTE PTR [rax],al
   140024043:	add    BYTE PTR [rax+rax*1],cl
   140024046:	add    BYTE PTR [rax],al
   140024048:	add    BYTE PTR [rax],al
   14002404a:	add    BYTE PTR [rax],al
   14002404c:	or     eax,0x0
   140024051:	add    BYTE PTR [rax],al
   140024053:	add    BYTE PTR [rsi],cl
   140024055:	add    BYTE PTR [rax],al
   140024057:	add    BYTE PTR [rax],al
   140024059:	add    BYTE PTR [rax],al
   14002405b:	add    BYTE PTR [rax],dl
   14002405d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002405e:	add    BYTE PTR [rax],al
   140024060:	(bad)  
   140024061:	(bad)  
   140024062:	(bad)  
   140024063:	call   QWORD PTR [rax-0x5c]
   140024066:	add    BYTE PTR [rax],al
   140024068:	add    BYTE PTR [rax],al
   14002406a:	add    BYTE PTR [rax],al
   14002406c:	pop    rdi
   14002406d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002406e:	add    BYTE PTR [rax],al
   140024070:	(bad)  
   140024071:	(bad)  
   140024072:	(bad)  
   140024073:	jmp    FWORD PTR [rbx-0x5c]
   140024076:	add    BYTE PTR [rax],al
   140024078:	add    al,BYTE PTR [rax]
   14002407a:	add    BYTE PTR [rax],al
   14002407c:	jp     0x140024022
   14002407e:	add    BYTE PTR [rax],al
   140024080:	(bad)  
   140024081:	(bad)  
   140024082:	(bad)  
   140024083:	inc    DWORD PTR [rax]
   140024085:	js     0x140024088
   140024087:	add    BYTE PTR [rax],al
   140024089:	add    BYTE PTR [rax],al
   14002408b:	add    BYTE PTR [rip+0x1000178],cl        # 0x141024209
   140024091:	add    BYTE PTR [rax],al
   140024093:	add    BYTE PTR [rcx],ah
   140024095:	js     0x140024098
   140024097:	add    BYTE PTR [rax],al
   140024099:	add    BYTE PTR [rax],al
   14002409b:	add    BYTE PTR [rip+0x3000178],bh        # 0x143024219
   1400240a1:	add    BYTE PTR [rax],al
   1400240a3:	add    BYTE PTR [rcx+0x78],dl
   1400240a6:	add    DWORD PTR [rax],eax
   1400240a8:	add    BYTE PTR [rax],al
   1400240aa:	add    BYTE PTR [rax],al
   1400240ac:	adc    DWORD PTR [rsi],ebx
   1400240ae:	or     BYTE PTR [rax],al
   1400240b0:	(bad)  
   1400240b1:	xor    al,0xe
   1400240b3:	add    BYTE PTR [rax],dl
   1400240b5:	push   rdx
   1400240b6:	or     al,0xd0
   1400240b8:	or     al,al
   1400240ba:	or     BYTE PTR [rax+0x7],dh
   1400240bd:	(bad)  
   1400240be:	(bad)  
   1400240bf:	push   rax
   1400240c0:	(bad)  
   1400240c1:	add    DWORD PTR ds:[rax],eax
   1400240c4:	mov    al,0xe1
   1400240c6:	add    DWORD PTR [rax],eax
   1400240c8:	(bad)  
   1400240c9:	(bad)  
   1400240ca:	(bad)  
   1400240cb:	jmp    QWORD PTR [rax+0x78]
   1400240ce:	add    DWORD PTR [rax],eax
   1400240d0:	nop
   1400240d1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400240d2:	add    BYTE PTR [rax],al
   1400240d4:	(bad)  
   1400240d5:	(bad)  
   1400240d6:	(bad)  
   1400240d7:	push   QWORD PTR [rsp+riz*4+0x0]
   1400240de:	add    BYTE PTR [rax],al
   1400240e0:	adc    DWORD PTR [rdx],ebx
   1400240e2:	(bad)  
   1400240e3:	add    BYTE PTR [rdx],bl
   1400240e5:	xor    al,0xc
   1400240e7:	add    BYTE PTR [rdx+rdx*2],cl
   1400240ea:	or     BYTE PTR [rax+0x7],dh
   1400240ed:	(bad)  
   1400240ee:	(bad)  
   1400240ef:	push   rax
   1400240f0:	(bad)  
   1400240f1:	add    DWORD PTR ds:[rax],eax
   1400240f4:	loopne 0x1400240d7
   1400240f6:	add    DWORD PTR [rax],eax
   1400240f8:	(bad)  
   1400240f9:	(bad)  
   1400240fa:	(bad)  
   1400240fb:	call   QWORD PTR [rax+0x178]
   140024101:	add    BYTE PTR [rax],al
   140024103:	add    al,al
   140024105:	js     0x140024108
   140024107:	add    BYTE PTR [rax-0xffff5b],dh
   14002410d:	(bad)  
   14002410e:	(bad)  
   14002410f:	call   rsi
   140024111:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140024112:	add    BYTE PTR [rax],al
   140024114:	add    BYTE PTR [rax],al
   140024116:	add    BYTE PTR [rax],al
   140024118:	cmp    al,0xa6
   14002411a:	add    BYTE PTR [rax],al
   14002411c:	add    DWORD PTR [rax],eax
   14002411e:	add    BYTE PTR [rax],al
   140024120:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140024122:	add    BYTE PTR [rax],al
   140024124:	add    BYTE PTR [rax],al
   140024126:	add    BYTE PTR [rax],al
   140024128:	and    DWORD PTR [rax],eax
   14002412a:	add    BYTE PTR [rax],al
   14002412c:	jo     0x1400240d4
   14002412e:	add    BYTE PTR [rax],al
   140024130:	lea    esp,[rsi+0x2e200000]
   140024136:	add    al,BYTE PTR [rax]
   140024138:	and    DWORD PTR [rip+0x34050002],eax        # 0x174074140
   14002413e:	add    al,0x0
   140024140:	jo     0x1400240e8
   140024142:	add    BYTE PTR [rax],al
   140024144:	lea    esp,[rsi+0x2e200000]
   14002414a:	add    al,BYTE PTR [rax]
   14002414c:	and    DWORD PTR [rax],eax
   14002414e:	add    BYTE PTR [rax],al
   140024150:	shl    BYTE PTR [rsi-0x59120000],1
   140024156:	add    BYTE PTR [rax],al
   140024158:	jo     0x14002419b
   14002415a:	add    al,BYTE PTR [rax]
   14002415c:	and    DWORD PTR [rip+0x34050002],eax        # 0x174074164
   140024162:	(bad)  
   140024163:	add    al,dl
   140024165:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140024166:	add    BYTE PTR [rax],al
   140024168:	out    dx,al
   140024169:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002416a:	add    BYTE PTR [rax],al
   14002416c:	jo     0x1400241af
   14002416e:	add    al,BYTE PTR [rax]
   140024170:	add    DWORD PTR [rdx],ecx
   140024172:	add    al,0x0
   140024174:	or     ah,BYTE PTR [rax+rcx*1+0x0]
   140024178:	or     dh,BYTE PTR [rdx]
   14002417a:	(bad)  
   14002417b:	jo     0x14002418e
   14002417d:	lar    eax,WORD PTR [rax]
   140024180:	(bad)  
   140024181:	push   rdx
   140024182:	add    dh,BYTE PTR [rax]
   140024184:	(bad)  
   140024185:	add    DWORD PTR ds:[rax],eax
   140024188:	adc    dl,ah
   14002418a:	add    DWORD PTR [rax],eax
   14002418c:	(bad)  
   14002418d:	(bad)  
   14002418e:	(bad)  
   14002418f:	jmp    rax
   140024191:	js     0x140024194
   140024193:	add    al,dl
   140024195:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140024196:	add    BYTE PTR [rax],al
   140024198:	(bad)  
   140024199:	(bad)  
   14002419a:	(bad)  
   14002419b:	(bad)  
   14002419c:	jmp    0x140024145
   14002419e:	add    BYTE PTR [rax],al
   1400241a0:	add    BYTE PTR [rax],al
   1400241a2:	add    BYTE PTR [rax],al
   1400241a4:	mul    BYTE PTR [rdi-0x10000]
   1400241aa:	(bad)  
   1400241ab:	call   QWORD PTR [rcx]
   1400241ad:	(bad)  
   1400241ae:	or     al,BYTE PTR [rax]
   1400241b0:	(bad)  
   1400241b1:	xor    al,0xf
   1400241b3:	add    BYTE PTR [rax],dl
   1400241b5:	push   rdx
   1400241b6:	or     al,0xf0
   1400241b8:	or     ah,al
   1400241ba:	or     al,dl
   1400241bc:	(bad)  
   1400241bd:	rol    BYTE PTR [rax+rsi*2],0x3
   1400241c1:	(bad)  
   1400241c2:	add    dl,BYTE PTR [rax-0x32]
   1400241c5:	add    DWORD PTR ds:[rax],eax
   1400241c8:	rex loop 0x1400241cc
   1400241cb:	add    bh,bh
   1400241cd:	(bad)  
   1400241ce:	(bad)  
   1400241cf:	push   QWORD PTR [rax+0x19a]
   1400241d5:	add    BYTE PTR [rax],al
   1400241d7:	add    al,dl
   1400241d9:	(bad)  
   1400241da:	add    DWORD PTR [rax],eax
   1400241dc:	add    DWORD PTR [rax],eax
   1400241de:	add    BYTE PTR [rax],al
   1400241e0:	lock (bad) 
   1400241e2:	add    DWORD PTR [rax],eax
   1400241e4:	add    al,BYTE PTR [rax]
   1400241e6:	add    BYTE PTR [rax],al
   1400241e8:	adc    BYTE PTR [rbx-0x57afffff],bl
   1400241ee:	add    BYTE PTR [rax],al
   1400241f0:	(bad)  
   1400241f1:	(bad)  
   1400241f2:	(bad)  
   1400241f3:	(bad)  
   1400241f4:	out    dx,eax
   1400241f5:	test   al,0x0
   1400241f7:	add    BYTE PTR [rbx],al
   1400241f9:	add    BYTE PTR [rax],al
   1400241fb:	add    dl,bh
   1400241fd:	test   al,0x0
   1400241ff:	add    BYTE PTR [rdx],al
   140024201:	add    BYTE PTR [rax],al
   140024203:	add    BYTE PTR [rax-0x57],dl
   140024206:	add    BYTE PTR [rax],al
   140024208:	add    DWORD PTR [rax],eax
   14002420a:	add    BYTE PTR [rax],al
   14002420c:	pop    rbx
   14002420d:	test   eax,0x0
   140024212:	add    BYTE PTR [rax],al
   140024214:	test   ax,0x0
   140024218:	(bad)  
   140024219:	(bad)  
   14002421a:	(bad)  
   14002421b:	inc    DWORD PTR [rcx]
   14002421d:	(bad)  
   14002421e:	or     al,BYTE PTR [rax]
   140024220:	(bad)  
   140024221:	push   rsp
   140024222:	(bad)  
   140024223:	add    BYTE PTR [rsi],dl
   140024225:	xor    al,0xd
   140024227:	add    BYTE PTR [rsi],dl
   140024229:	push   rdx
   14002422a:	adc    ah,al
   14002422c:	adc    al,dl
   14002422e:	(bad)  
   14002422f:	ror    BYTE PTR [rax+rsi*2],0xb
   140024233:	(bad)  
   140024234:	adc    DWORD PTR [rcx*1+0x4d742c00],ebp
   14002423b:	add    BYTE PTR [rax],ch
   14002423d:	rex.WR add BYTE PTR fs:[rsp+rdx*2],r12b
   140024242:	rex.WXB add BYTE PTR [r8],spl
   140024245:	xor    al,0x4a
   140024247:	add    BYTE PTR [rax],dl
   140024249:	add    DWORD PTR [rsi+0x0],eax
   14002424c:	or     eax,esp
   14002424e:	(bad)  
   14002424f:	rol    BYTE PTR [rip+0xffffffffce0000c0],1        # 0x10e024315
   140024255:	add    DWORD PTR ds:[rax],eax
   140024258:	jo     0x14002423c
   14002425a:	add    DWORD PTR [rax],eax
   14002425c:	(bad)  
   14002425d:	(bad)  
   14002425e:	(bad)  
   14002425f:	inc    DWORD PTR [rax]
   140024261:	jns    0x140024264
   140024263:	add    BYTE PTR [rax],al
   140024265:	add    BYTE PTR [rax],al
   140024267:	add    BYTE PTR [rax],dh
   140024269:	jns    0x14002426c
   14002426b:	add    bh,bh
   14002426d:	(bad)  
   14002426e:	(bad)  
   14002426f:	jmp    QWORD PTR [rax+0x79]
   140024272:	add    DWORD PTR [rax],eax
   140024274:	(bad)  
   140024275:	(bad)  
   140024276:	(bad)  
   140024277:	inc    DWORD PTR [rax-0xfffe87]
   14002427d:	(bad)  
   14002427e:	(bad)  
   14002427f:	jmp    QWORD PTR [rax-0xfffe87]
   140024285:	(bad)  
   140024286:	(bad)  
   140024287:	inc    eax
   140024289:	jns    0x14002428c
   14002428b:	add    bh,bh
   14002428d:	(bad)  
   14002428e:	(bad)  
   14002428f:	jmp    rax
   140024291:	jns    0x140024294
   140024293:	add    BYTE PTR [rsi],al
   140024295:	add    BYTE PTR [rax],al
   140024297:	add    BYTE PTR [rax],al
   140024299:	jp     0x14002429c
   14002429b:	add    BYTE PTR [rdi],al
   14002429d:	add    BYTE PTR [rax],al
   14002429f:	add    BYTE PTR [rax],ah
   1400242a1:	jp     0x1400242a4
   1400242a3:	add    BYTE PTR [rax],cl
   1400242a5:	add    BYTE PTR [rax],al
   1400242a7:	add    BYTE PTR [rax+0x7a],al
   1400242aa:	add    DWORD PTR [rax],eax
   1400242ac:	or     DWORD PTR [rax],eax
   1400242ae:	add    BYTE PTR [rax],al
   1400242b0:	(bad)  
   1400242b1:	jp     0x1400242b4
   1400242b3:	add    BYTE PTR [rcx],cl
   1400242b5:	add    BYTE PTR [rax],al
   1400242b7:	add    BYTE PTR [rax+0xb00017a],al
   1400242bd:	add    BYTE PTR [rax],al
   1400242bf:	add    BYTE PTR [rax+0xc00017a],ah
   1400242c5:	add    BYTE PTR [rax],al
   1400242c7:	add    al,al
   1400242c9:	jp     0x1400242cc
   1400242cb:	add    BYTE PTR [rip+0xffffffffe0000000],cl        # 0x1200242d1
   1400242d1:	jp     0x1400242d4
   1400242d3:	add    bh,bh
   1400242d5:	(bad)  
   1400242d6:	(bad)  
   1400242d7:	inc    DWORD PTR [rax]
   1400242d9:	jnp    0x1400242dc
   1400242db:	add    BYTE PTR [rdi],cl
   1400242dd:	add    BYTE PTR [rax],al
   1400242df:	add    BYTE PTR [rax],ah
   1400242e1:	jnp    0x1400242e4
   1400242e3:	add    BYTE PTR [rax],dl
   1400242e5:	add    BYTE PTR [rax],al
   1400242e7:	add    BYTE PTR [rax+0x7b],al
   1400242ea:	add    DWORD PTR [rax],eax
   1400242ec:	adc    DWORD PTR [rax],eax
   1400242ee:	add    BYTE PTR [rax],al
   1400242f0:	(bad)  
   1400242f1:	jnp    0x1400242f4
   1400242f3:	add    BYTE PTR [rdx],dl
   1400242f5:	add    BYTE PTR [rax],al
   1400242f7:	add    BYTE PTR [rax+0x1200017b],al
   1400242fd:	add    BYTE PTR [rax],al
   1400242ff:	add    BYTE PTR [rax+0x1400017b],ah
   140024305:	add    BYTE PTR [rax],al
   140024307:	add    al,al
   140024309:	jnp    0x14002430c
   14002430b:	add    BYTE PTR [rip+0xffffffffe0000000],dl        # 0x120024311
   140024311:	jnp    0x140024314
   140024313:	add    BYTE PTR [rsi],dl
   140024315:	add    BYTE PTR [rax],al
   140024317:	add    BYTE PTR [rax],al
   140024319:	jl     0x14002431c
   14002431b:	add    bh,bh
   14002431d:	(bad)  
   14002431e:	(bad)  
   14002431f:	jmp    QWORD PTR [rax]
   140024321:	jl     0x140024324
   140024323:	add    bh,bh
   140024325:	(bad)  
   140024326:	(bad)  
   140024327:	inc    DWORD PTR [rax+0x7c]
   14002432a:	add    DWORD PTR [rax],eax
   14002432c:	(bad)  
   14002432d:	(bad)  
   14002432e:	(bad)  
   14002432f:	jmp    QWORD PTR [rax+0x7c]
   140024332:	add    DWORD PTR [rax],eax
   140024334:	(bad)  
   140024335:	(bad)  
   140024336:	(bad)  
   140024337:	inc    DWORD PTR [rax+0x1b00017c]
   14002433d:	add    BYTE PTR [rax],al
   14002433f:	add    BYTE PTR [rax+0x1c00017c],ah
   140024345:	add    BYTE PTR [rax],al
   140024347:	add    al,al
   140024349:	jl     0x14002434c
   14002434b:	add    BYTE PTR [rip+0xffffffffe0000000],bl        # 0x120024351
   140024351:	jl     0x140024354
   140024353:	add    BYTE PTR [rip+0x0],bl        # 0x140024359
   140024359:	jge    0x14002435c
   14002435b:	add    BYTE PTR [rdi],bl
   14002435d:	add    BYTE PTR [rax],al
   14002435f:	add    BYTE PTR [rax],ah
   140024361:	jge    0x140024364
   140024363:	add    BYTE PTR [rax],ah
   140024365:	add    BYTE PTR [rax],al
   140024367:	add    BYTE PTR [rax+0x7d],al
   14002436a:	add    DWORD PTR [rax],eax
   14002436c:	and    DWORD PTR [rax],eax
   14002436e:	add    BYTE PTR [rax],al
   140024370:	(bad)  
   140024371:	jge    0x140024374
   140024373:	add    bh,bh
   140024375:	(bad)  
   140024376:	(bad)  
   140024377:	inc    DWORD PTR [rax+0x2300017d]
   14002437d:	add    BYTE PTR [rax],al
   14002437f:	add    BYTE PTR [rax+0x2400017d],ah
   140024385:	add    BYTE PTR [rax],al
   140024387:	add    al,al
   140024389:	jge    0x14002438c
   14002438b:	add    BYTE PTR [rip+0xffffffffe0000000],ah        # 0x120024391
   140024391:	jge    0x140024394
   140024393:	add    BYTE PTR [rip+0x0],ah        # 0x140024399
   140024399:	jle    0x14002439c
   14002439b:	add    BYTE PTR [rdi],ah
   14002439d:	add    BYTE PTR [rax],al
   14002439f:	add    BYTE PTR [rax],ah
   1400243a1:	jle    0x1400243a4
   1400243a3:	add    BYTE PTR [rax],ch
   1400243a5:	add    BYTE PTR [rax],al
   1400243a7:	add    BYTE PTR [rax+0x7e],al
   1400243aa:	add    DWORD PTR [rax],eax
   1400243ac:	sub    DWORD PTR [rax],eax
   1400243ae:	add    BYTE PTR [rax],al
   1400243b0:	(bad)  
   1400243b1:	jle    0x1400243b4
   1400243b3:	add    BYTE PTR [rax],al
   1400243b5:	stos   DWORD PTR es:[rdi],eax
   1400243b6:	add    BYTE PTR [rax],al
   1400243b8:	(bad)  
   1400243b9:	(bad)  
   1400243ba:	(bad)  
   1400243bb:	jmp    QWORD PTR [rbp-0x55]
   1400243be:	add    BYTE PTR [rax],al
   1400243c0:	add    BYTE PTR [rax],al
   1400243c2:	add    BYTE PTR [rax],al
   1400243c4:	stos   BYTE PTR es:[rdi],al
   1400243c5:	stos   DWORD PTR es:[rdi],eax
   1400243c6:	add    BYTE PTR [rax],al
   1400243c8:	add    DWORD PTR [rax],eax
   1400243ca:	add    BYTE PTR [rax],al
   1400243cc:	shr    BYTE PTR [rbx+0x0],1
   1400243d2:	add    BYTE PTR [rax],al
   1400243d4:	in     al,dx
   1400243d5:	stos   DWORD PTR es:[rdi],eax
   1400243d6:	add    BYTE PTR [rax],al
   1400243d8:	(bad)  
   1400243d9:	(bad)  
   1400243da:	(bad)  
   1400243db:	call   FWORD PTR [rax]
   1400243dd:	lods   al,BYTE PTR ds:[rsi]
   1400243de:	add    BYTE PTR [rax],al
   1400243e0:	add    al,BYTE PTR [rax]
   1400243e2:	add    BYTE PTR [rax],al
   1400243e4:	pop    rcx
   1400243e5:	lods   al,BYTE PTR ds:[rsi]
   1400243e6:	add    BYTE PTR [rax],al
   1400243e8:	(bad)  
   1400243e9:	(bad)  
   1400243ea:	(bad)  
   1400243eb:	call   QWORD PTR [rbx+0x30000ac]
   1400243f1:	add    BYTE PTR [rax],al
   1400243f3:	add    BYTE PTR [rsp+rbp*4-0x10000],ah
   1400243fa:	(bad)  
   1400243fb:	push   rcx
   1400243fd:	lods   al,BYTE PTR ds:[rsi]
   1400243fe:	add    BYTE PTR [rax],al
   140024400:	add    al,0x0
   140024402:	add    BYTE PTR [rax],al
   140024404:	add    ch,BYTE PTR [rbp-0x10000]
   14002440a:	(bad)  
   14002440b:	dec    DWORD PTR [rdi-0x53]
   14002440e:	add    BYTE PTR [rax],al
   140024410:	add    eax,0x60000000
   140024415:	lods   eax,DWORD PTR ds:[rsi]
   140024416:	add    BYTE PTR [rax],al
   140024418:	(bad)  
   140024419:	(bad)  
   14002441a:	(bad)  
   14002441b:	jmp    FWORD PTR [rbx+0x60000ad]
   140024421:	add    BYTE PTR [rax],al
   140024423:	add    BYTE PTR [rbp+rbp*4+0x70000],bh
   14002442a:	add    BYTE PTR [rax],al
   14002442c:	(bad)  
   14002442d:	lods   eax,DWORD PTR ds:[rsi]
   14002442e:	add    BYTE PTR [rax],al
   140024430:	or     BYTE PTR [rax],al
   140024432:	add    BYTE PTR [rax],al
   140024434:	jmp    0x1490244e6
   140024439:	add    BYTE PTR [rax],al
   14002443b:	add    BYTE PTR [rcx+0xa0000ae],dl
   140024441:	add    BYTE PTR [rax],al
   140024443:	add    BYTE PTR [rbx+0xe0000ae],ah
   140024449:	add    BYTE PTR [rax],al
   14002444b:	add    BYTE PTR [rdx+0xd0000ae],dh
   140024451:	add    BYTE PTR [rax],al
   140024453:	add    al,al
   140024455:	scas   al,BYTE PTR es:[rdi]
   140024456:	add    BYTE PTR [rax],al
   140024458:	or     al,0x0
   14002445a:	add    BYTE PTR [rax],al
   14002445c:	iret   
   14002445d:	scas   al,BYTE PTR es:[rdi]
   14002445e:	add    BYTE PTR [rax],al
   140024460:	or     eax,DWORD PTR [rax]
   140024462:	add    BYTE PTR [rax],al
   140024464:	fisubr WORD PTR [rsi+0x90000]
   14002446a:	add    BYTE PTR [rax],al
   14002446c:	in     eax,dx
   14002446d:	scas   al,BYTE PTR es:[rdi]
   14002446e:	add    BYTE PTR [rax],al
   140024470:	or     BYTE PTR [rax],al
   140024472:	add    BYTE PTR [rax],al
   140024474:	cld    
   140024475:	scas   al,BYTE PTR es:[rdi]
   140024476:	add    BYTE PTR [rax],al
   140024478:	(bad)  
   140024479:	add    BYTE PTR [rax],al
   14002447b:	add    BYTE PTR [rbx],cl
   14002447d:	scas   eax,DWORD PTR es:[rdi]
   14002447e:	add    BYTE PTR [rax],al
   140024480:	(bad)  
   140024481:	add    BYTE PTR [rax],al
   140024483:	add    BYTE PTR [rdx],bl
   140024485:	scas   eax,DWORD PTR es:[rdi]
   140024486:	add    BYTE PTR [rax],al
   140024488:	(bad)  
   140024489:	(bad)  
   14002448a:	(bad)  
   14002448b:	dec    DWORD PTR [rdi+rbp*4+0xf0000]
   140024492:	add    BYTE PTR [rax],al
   140024494:	popf   
   140024495:	scas   eax,DWORD PTR es:[rdi]
   140024496:	add    BYTE PTR [rax],al
   140024498:	adc    BYTE PTR [rax],al
   14002449a:	add    BYTE PTR [rax],al
   14002449c:	mov    ch,0xaf
   14002449e:	add    BYTE PTR [rax],al
   1400244a0:	adc    DWORD PTR [rax],eax
   1400244a2:	add    BYTE PTR [rax],al
   1400244a4:	retf   0xaf
   1400244a7:	add    BYTE PTR [rdx],dl
   1400244a9:	add    BYTE PTR [rax],al
   1400244ab:	add    BYTE PTR [rip+0x130000b0],ah        # 0x153024561
   1400244b1:	add    BYTE PTR [rax],al
   1400244b3:	add    BYTE PTR [rdi],dh
   1400244b5:	mov    al,0x0
   1400244b7:	add    BYTE PTR [rdi],dl
   1400244b9:	add    BYTE PTR [rax],al
   1400244bb:	add    BYTE PTR [rsi-0x50],al
   1400244be:	add    BYTE PTR [rax],al
   1400244c0:	(bad)  
   1400244c1:	add    BYTE PTR [rax],al
   1400244c3:	add    BYTE PTR [rax+rsi*4+0x0],dl
   1400244c7:	add    BYTE PTR [rip+0x63000000],dl        # 0x1a30244cd
   1400244cd:	mov    al,0x0
   1400244cf:	add    BYTE PTR [rax+rax*1],dl
   1400244d2:	add    BYTE PTR [rax],al
   1400244d4:	jb     0x140024486
   1400244d6:	add    BYTE PTR [rax],al
   1400244d8:	adc    al,BYTE PTR [rax]
   1400244da:	add    BYTE PTR [rax],al
   1400244dc:	xor    DWORD PTR [rax+0x110000],0xb0900000
   1400244e6:	add    BYTE PTR [rax],al
   1400244e8:	adc    BYTE PTR [rax],al
   1400244ea:	add    BYTE PTR [rax],al
   1400244ec:	lahf   
   1400244ed:	mov    al,0x0
   1400244ef:	add    BYTE PTR [rdi],cl
   1400244f1:	add    BYTE PTR [rax],al
   1400244f3:	add    BYTE PTR [rsi-0xffff50],ch
   1400244f9:	(bad)  
   1400244fa:	(bad)  
   1400244fb:	push   QWORD PTR [rdi]
   1400244fd:	mov    cl,0x0
   1400244ff:	add    BYTE PTR [rax],bl
   140024501:	add    BYTE PTR [rax],al
   140024503:	add    BYTE PTR [rax-0x4f],cl
   140024506:	add    BYTE PTR [rax],al
   140024508:	(bad)  
   140024509:	(bad)  
   14002450a:	(bad)  
   14002450b:	call   FWORD PTR [rdi+0x190000b1]
   140024511:	add    BYTE PTR [rax],al
   140024513:	add    BYTE PTR [rbx-0xffff4f],dh
   140024519:	(bad)  
   14002451a:	(bad)  
   14002451b:	call   QWORD PTR [rdx+rsi*4]
   14002451e:	add    BYTE PTR [rax],al
   140024520:	sbb    al,BYTE PTR [rax]
   140024522:	add    BYTE PTR [rax],al
   140024524:	sub    BYTE PTR [rdx-0x10000],dh
   14002452a:	(bad)  
   14002452b:	jmp    QWORD PTR [rdx-0x4e]
   14002452e:	add    BYTE PTR [rax],al
   140024530:	sbb    eax,DWORD PTR [rax]
   140024532:	add    BYTE PTR [rax],al
   140024534:	ja     0x1400244e8
   140024536:	add    BYTE PTR [rax],al
   140024538:	sbb    al,0x0
   14002453a:	add    BYTE PTR [rax],al
   14002453c:	mov    WORD PTR [rdx+0x1d0000],?
   140024542:	add    BYTE PTR [rax],al
   140024544:	rex.WRX mov bl,0x0
   140024547:	add    BYTE PTR [rsi],bl
   140024549:	add    BYTE PTR [rax],al
   14002454b:	add    BYTE PTR [rax-0x4d],ah
   14002454e:	add    BYTE PTR [rax],al
   140024550:	and    al,BYTE PTR [rax]
   140024552:	add    BYTE PTR [rax],al
   140024554:	outs   dx,DWORD PTR ds:[rsi]
   140024555:	mov    bl,0x0
   140024557:	add    BYTE PTR [rcx],ah
   140024559:	add    BYTE PTR [rax],al
   14002455b:	add    BYTE PTR [rbp-0x4d],bh
   14002455e:	add    BYTE PTR [rax],al
   140024560:	and    BYTE PTR [rax],al
   140024562:	add    BYTE PTR [rax],al
   140024564:	mov    WORD PTR [rbx+0x1f0000],?
   14002456a:	add    BYTE PTR [rax],al
   14002456c:	fwait
   14002456d:	mov    bl,0x0
   14002456f:	add    BYTE PTR [rip+0xffffffffaa000000],bl        # 0xea024575
   140024575:	mov    bl,0x0
   140024577:	add    BYTE PTR [rax+rax*1],bl
   14002457a:	add    BYTE PTR [rax],al
   14002457c:	mov    ecx,0x1b0000b3
   140024581:	add    BYTE PTR [rax],al
   140024583:	add    al,cl
   140024585:	mov    bl,0x0
   140024587:	add    bh,bh
   140024589:	(bad)  
   14002458a:	(bad)  
   14002458b:	push   rax
   14002458d:	mov    bl,0x0
   14002458f:	add    BYTE PTR [rbx],ah
   140024591:	add    BYTE PTR [rax],al
   140024593:	add    BYTE PTR [rip+0x240000b4],al        # 0x16402464d
   140024599:	add    BYTE PTR [rax],al
   14002459b:	add    BYTE PTR [rdx],bl
   14002459d:	mov    ah,0x0
   14002459f:	add    BYTE PTR [rip+0xffffffff92000000],ah        # 0xd20245a5
   1400245a5:	mov    ah,0x0
   1400245a7:	add    BYTE PTR [rsi],ah
   1400245a9:	add    BYTE PTR [rax],al
   1400245ab:	add    BYTE PTR [rsp+rsi*4+0x2a0000],ah
   1400245b2:	add    BYTE PTR [rax],al
   1400245b4:	mov    bl,0xb4
   1400245b6:	add    BYTE PTR [rax],al
   1400245b8:	sub    DWORD PTR [rax],eax
   1400245ba:	add    BYTE PTR [rax],al
   1400245bc:	shl    DWORD PTR [rax+rax*1+0x2800],0x0
   1400245c4:	shl    BYTE PTR [rax+rax*1+0x2700],1
   1400245cb:	add    bh,bl
   1400245cd:	mov    ah,0x0
   1400245cf:	add    BYTE PTR [rip+0xffffffffee000000],ah        # 0x12e0245d5
   1400245d5:	mov    ah,0x0
   1400245d7:	add    BYTE PTR [rax+rax*1],ah
   1400245da:	add    BYTE PTR [rax],al
   1400245dc:	std    
   1400245dd:	mov    ah,0x0
   1400245df:	add    BYTE PTR [rbx],ah
   1400245e1:	add    BYTE PTR [rax],al
   1400245e3:	add    BYTE PTR [rsi*4-0x10000],cl
   1400245ea:	(bad)  
   1400245eb:	call   QWORD PTR [rcx]
   1400245ed:	sbb    BYTE PTR [rax+rax*1],al
   1400245f0:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400245f3:	add    BYTE PTR [rdx],cl
   1400245f5:	push   rdx
   1400245f6:	(bad)  
   1400245f7:	jo     0x1400245c7
   1400245f9:	add    DWORD PTR ds:[rax],eax
   1400245fc:	add    bl,ah
   1400245fe:	add    DWORD PTR [rax],eax
   140024600:	(bad)  
   140024601:	(bad)  
   140024602:	(bad)  
   140024603:	inc    DWORD PTR [rax+0x17e]
   140024609:	add    BYTE PTR [rax],al
   14002460b:	add    BYTE PTR [rax+0x100017e],ah
   140024611:	add    BYTE PTR [rax],al
   140024613:	add    al,al
   140024615:	jle    0x140024618
   140024617:	add    BYTE PTR [rdx],al
   140024619:	add    BYTE PTR [rax],al
   14002461b:	add    al,ah
   14002461d:	jle    0x140024620
   14002461f:	add    BYTE PTR [rax-0x4b],dl
   140024622:	add    BYTE PTR [rax],al
   140024624:	(bad)  
   140024625:	(bad)  
   140024626:	(bad)  
   140024627:	push   QWORD PTR [rbp-0x4b]
   14002462a:	add    BYTE PTR [rax],al
   14002462c:	add    BYTE PTR [rax],al
   14002462e:	add    BYTE PTR [rax],al
   140024630:	xor    BYTE PTR [rbp+0x10000],0x0
   140024637:	add    BYTE PTR [rbx+0x20000b5],cl
   14002463d:	add    BYTE PTR [rax],al
   14002463f:	add    BYTE PTR [rsi+0x30000b5],dl
   140024645:	add    BYTE PTR [rax],al
   140024647:	add    BYTE PTR [rdi-0xffff4b],dh
   14002464d:	(bad)  
   14002464e:	(bad)  
   14002464f:	call   QWORD PTR [rcx]
   140024651:	sub    DWORD PTR [rdx],ecx
   140024653:	add    BYTE PTR [rip+0x16004501],bl        # 0x156028b5a
   140024659:	lock adc al,0xe0
   14002465c:	adc    dl,al
   14002465e:	adc    al,al
   140024660:	(bad)  
   140024661:	jo     0x140024670
   140024663:	(bad)  
   140024664:	or     al,0x50
   140024666:	or     esi,DWORD PTR [rax]
   140024668:	(bad)  
   140024669:	add    DWORD PTR ds:[rax],eax
   14002466c:	xor    bl,ah
   14002466e:	add    DWORD PTR [rax],eax
   140024670:	(bad)  
   140024671:	(bad)  
   140024672:	(bad)  
   140024673:	inc    DWORD PTR [rax]
   140024675:	jg     0x140024678
   140024677:	add    BYTE PTR [rax],al
   140024679:	add    BYTE PTR [rax],al
   14002467b:	add    BYTE PTR [rax],ah
   14002467d:	jg     0x140024680
   14002467f:	add    BYTE PTR [rcx],al
   140024681:	add    BYTE PTR [rax],al
   140024683:	add    BYTE PTR [rax+0x7f],al
   140024686:	add    DWORD PTR [rax],eax
   140024688:	add    al,BYTE PTR [rax]
   14002468a:	add    BYTE PTR [rax],al
   14002468c:	jo     0x14002470d
   14002468e:	add    DWORD PTR [rax],eax
   140024690:	add    DWORD PTR [rax],eax
   140024692:	add    BYTE PTR [rax],al
   140024694:	movabs al,ds:0xc00000000400017f
   14002469d:	jg     0x1400246a0
   14002469f:	add    BYTE PTR [rcx],al
   1400246a1:	add    BYTE PTR [rax],al
   1400246a3:	add    al,ah
   1400246a5:	jg     0x1400246a8
   1400246a7:	add    BYTE PTR [rsi],al
   1400246a9:	add    BYTE PTR [rax],al
   1400246ab:	add    BYTE PTR [rax],al
   1400246ad:	add    BYTE PTR [rcx],0x0
   1400246b0:	(bad)  
   1400246b1:	add    BYTE PTR [rax],al
   1400246b3:	add    BYTE PTR [rax],ah
   1400246b5:	add    BYTE PTR [rcx],0x0
   1400246b8:	or     BYTE PTR [rax],al
   1400246ba:	add    BYTE PTR [rax],al
   1400246bc:	rex add BYTE PTR [rcx],0x0
   1400246c0:	or     BYTE PTR [rax],al
   1400246c2:	add    BYTE PTR [rax],al
   1400246c4:	(bad)  
   1400246c5:	add    BYTE PTR [rcx],0x0
   1400246c8:	or     al,BYTE PTR [rax]
   1400246ca:	add    BYTE PTR [rax],al
   1400246cc:	add    BYTE PTR [rax+0xb0001],0x0
   1400246d3:	add    BYTE PTR [rax+0xc000180],ah
   1400246d9:	add    BYTE PTR [rax],al
   1400246db:	add    al,al
   1400246dd:	add    BYTE PTR [rcx],0x0
   1400246e0:	or     BYTE PTR [rax],al
   1400246e2:	add    BYTE PTR [rax],al
   1400246e4:	loopne 0x140024666
   1400246e6:	add    DWORD PTR [rax],eax
   1400246e8:	or     BYTE PTR [rax],al
   1400246ea:	add    BYTE PTR [rax],al
   1400246ec:	adc    BYTE PTR [rcx+0x80001],al
   1400246f2:	add    BYTE PTR [rax],al
   1400246f4:	xor    BYTE PTR [rcx+0x80001],al
   1400246fa:	add    BYTE PTR [rax],al
   1400246fc:	push   rax
   1400246fd:	add    DWORD PTR [rcx],0x1100
   140024703:	add    BYTE PTR [rax-0x7f],dh
   140024706:	add    DWORD PTR [rax],eax
   140024708:	adc    al,BYTE PTR [rax]
   14002470a:	add    BYTE PTR [rax],al
   14002470c:	nop
   14002470d:	add    DWORD PTR [rcx],0x1300
   140024713:	add    BYTE PTR [rax+0x8000181],dh
   140024719:	add    BYTE PTR [rax],al
   14002471b:	add    al,dl
   14002471d:	add    DWORD PTR [rcx],0x800
   140024723:	add    al,dh
   140024725:	add    DWORD PTR [rcx],0x1600
   14002472b:	add    BYTE PTR [rax],dl
   14002472d:	(bad)  
   14002472e:	add    DWORD PTR [rax],eax
   140024730:	(bad)  
   140024731:	add    BYTE PTR [rax],al
   140024733:	add    BYTE PTR [rax],dh
   140024735:	(bad)  
   140024736:	add    DWORD PTR [rax],eax
   140024738:	sbb    BYTE PTR [rax],al
   14002473a:	add    BYTE PTR [rax],al
   14002473c:	push   rax
   14002473d:	(bad)  
   14002473e:	add    DWORD PTR [rax],eax
   140024740:	adc    eax,0x70000000
   140024745:	(bad)  
   140024746:	add    DWORD PTR [rax],eax
   140024748:	sbb    al,BYTE PTR [rax]
   14002474a:	add    BYTE PTR [rax],al
   14002474c:	nop
   14002474d:	(bad)  
   14002474e:	add    DWORD PTR [rax],eax
   140024750:	adc    eax,0x90000000
   140024755:	(bad)  
   140024756:	add    DWORD PTR [rax],eax
   140024758:	sbb    al,0x0
   14002475a:	add    BYTE PTR [rax],al
   14002475c:	mov    al,0x82
   14002475e:	add    DWORD PTR [rax],eax
   140024760:	sbb    eax,0xd0000000
   140024765:	(bad)  
   140024766:	add    DWORD PTR [rax],eax
   140024768:	(bad)  
   140024769:	add    BYTE PTR [rax],al
   14002476b:	add    al,dh
   14002476d:	(bad)  
   14002476e:	add    DWORD PTR [rax],eax
   140024770:	sbb    eax,0xf0000000
   140024775:	(bad)  
   140024776:	add    DWORD PTR [rax],eax
   140024778:	sbb    al,0x0
   14002477a:	add    BYTE PTR [rax],al
   14002477c:	lock (bad) 
   14002477e:	add    DWORD PTR [rax],eax
   140024780:	adc    eax,0x10000000
   140024785:	add    DWORD PTR [rcx],0x0
   140024788:	and    al,BYTE PTR [rax]
   14002478a:	add    BYTE PTR [rax],al
   14002478c:	xor    BYTE PTR [rbx+0x150001],al
   140024792:	add    BYTE PTR [rax],al
   140024794:	push   rax
   140024795:	add    DWORD PTR [rcx],0x0
   140024798:	and    al,0x0
   14002479a:	add    BYTE PTR [rax],al
   14002479c:	jo     0x140024721
   14002479e:	add    DWORD PTR [rax],eax
   1400247a0:	adc    eax,0x90000000
   1400247a5:	add    DWORD PTR [rcx],0x0
   1400247a8:	adc    eax,0xb0000000
   1400247ad:	add    DWORD PTR [rcx],0x0
   1400247b0:	(bad)  
   1400247b1:	add    BYTE PTR [rax],al
   1400247b3:	add    al,dl
   1400247b5:	add    DWORD PTR [rcx],0x0
   1400247b8:	sub    BYTE PTR [rax],al
   1400247ba:	add    BYTE PTR [rax],al
   1400247bc:	lock add DWORD PTR [rcx],0x0
   1400247c0:	sub    DWORD PTR [rax],eax
   1400247c2:	add    BYTE PTR [rax],al
   1400247c4:	adc    BYTE PTR [rcx+rax*1+0x1500],al
   1400247cb:	add    BYTE PTR [rax],dh
   1400247cd:	test   BYTE PTR [rcx],al
   1400247cf:	add    BYTE PTR [rbx],ch
   1400247d1:	add    BYTE PTR [rax],al
   1400247d3:	add    BYTE PTR [rax-0x7c],dl
   1400247d6:	add    DWORD PTR [rax],eax
   1400247d8:	sub    al,0x0
   1400247da:	add    BYTE PTR [rax],al
   1400247dc:	jo     0x140024762
   1400247de:	add    DWORD PTR [rax],eax
   1400247e0:	or     BYTE PTR [rax],al
   1400247e2:	add    BYTE PTR [rax],al
   1400247e4:	nop
   1400247e5:	test   BYTE PTR [rcx],al
   1400247e7:	add    BYTE PTR [rsi],ch
   1400247e9:	add    BYTE PTR [rax],al
   1400247eb:	add    BYTE PTR [rax+0x2f000184],dh
   1400247f1:	add    BYTE PTR [rax],al
   1400247f3:	add    al,dl
   1400247f5:	test   BYTE PTR [rcx],al
   1400247f7:	add    BYTE PTR [rax],dh
   1400247f9:	add    BYTE PTR [rax],al
   1400247fb:	add    al,dh
   1400247fd:	test   BYTE PTR [rcx],al
   1400247ff:	add    BYTE PTR [rcx],al
   140024801:	add    BYTE PTR [rax],al
   140024803:	add    BYTE PTR [rax],dl
   140024805:	test   DWORD PTR [rcx],eax
   140024807:	add    BYTE PTR [rdx],dh
   140024809:	add    BYTE PTR [rax],al
   14002480b:	add    BYTE PTR [rax],dh
   14002480d:	test   DWORD PTR [rcx],eax
   14002480f:	add    BYTE PTR [rbx],dh
   140024811:	add    BYTE PTR [rax],al
   140024813:	add    BYTE PTR [rax-0x7b],dl
   140024816:	add    DWORD PTR [rax],eax
   140024818:	xor    al,0x0
   14002481a:	add    BYTE PTR [rax],al
   14002481c:	jo     0x1400247a3
   14002481e:	add    DWORD PTR [rax],eax
   140024820:	shl    BYTE PTR [rbp-0x10000],1
   140024826:	(bad)  
   140024827:	call   QWORD PTR [rbx]
   140024829:	mov    dh,0x0
   14002482b:	add    BYTE PTR [rax],al
   14002482d:	add    BYTE PTR [rax],al
   14002482f:	add    BYTE PTR [rip+0xffffffffff0000b6],dh        # 0x13f0248eb
   140024835:	(bad)  
   140024836:	(bad)  
   140024837:	dec    DWORD PTR [rdx-0x4a]
   14002483a:	add    BYTE PTR [rax],al
   14002483c:	add    BYTE PTR [rax],al
   14002483e:	add    BYTE PTR [rax],al
   140024840:	pop    rsi
   140024841:	mov    dh,0x0
   140024843:	add    BYTE PTR [rcx],al
   140024845:	add    BYTE PTR [rax],al
   140024847:	add    al,al
   140024849:	mov    dh,0x0
   14002484b:	add    BYTE PTR [rdx],al
   14002484d:	add    BYTE PTR [rax],al
   14002484f:	add    BYTE PTR [rcx],cl
   140024851:	mov    bh,0x0
   140024853:	add    BYTE PTR [rbx],al
   140024855:	add    BYTE PTR [rax],al
   140024857:	add    BYTE PTR [rdi],bh
   140024859:	mov    bh,0x0
   14002485b:	add    BYTE PTR [rdx],al
   14002485d:	add    BYTE PTR [rax],al
   14002485f:	add    BYTE PTR [rbx-0x49],bl
   140024862:	add    BYTE PTR [rax],al
   140024864:	add    DWORD PTR [rax],eax
   140024866:	add    BYTE PTR [rax],al
   140024868:	xchg   edx,eax
   140024869:	mov    bh,0x0
   14002486b:	add    BYTE PTR [rax+rax*1],al
   14002486e:	add    BYTE PTR [rax],al
   140024870:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140024871:	mov    bh,0x0
   140024873:	add    BYTE PTR [rip+0x0],al        # 0x140024879
   140024879:	mov    eax,0x40000
   14002487e:	add    BYTE PTR [rax],al
   140024880:	(bad)  
   140024882:	add    BYTE PTR [rax],al
   140024884:	add    DWORD PTR [rax],eax
   140024886:	add    BYTE PTR [rax],al
   140024888:	lods   al,BYTE PTR ds:[rsi]
   140024889:	mov    eax,0x60000
   14002488e:	add    BYTE PTR [rax],al
   140024890:	out    0xb8,al
   140024892:	add    BYTE PTR [rax],al
   140024894:	(bad)  
   140024895:	add    BYTE PTR [rax],al
   140024897:	add    BYTE PTR [rax],al
   140024899:	mov    ecx,0x80000
   14002489e:	add    BYTE PTR [rax],al
   1400248a0:	xor    bh,BYTE PTR [rcx+0x90000]
   1400248a6:	add    BYTE PTR [rax],al
   1400248a8:	movabs rcx,0xba3d000000080000
   1400248b2:	add    BYTE PTR [rax],al
   1400248b4:	or     eax,0x48000000
   1400248b9:	mov    edx,0xc0000
   1400248be:	add    BYTE PTR [rax],al
   1400248c0:	push   rdx
   1400248c1:	mov    edx,0xb0000
   1400248c6:	add    BYTE PTR [rax],al
   1400248c8:	pop    rbp
   1400248c9:	mov    edx,0xa0000
   1400248ce:	add    BYTE PTR [rax],al
   1400248d0:	push   0x80000ba
   1400248d5:	add    BYTE PTR [rax],al
   1400248d7:	add    BYTE PTR [rbp+0xe0000bb],al
   1400248dd:	add    BYTE PTR [rax],al
   1400248df:	add    bh,cl
   1400248e1:	mov    ebx,0x80000
   1400248e6:	add    BYTE PTR [rax],al
   1400248e8:	pop    rdi
   1400248e9:	mov    esp,0xf0000
   1400248ee:	add    BYTE PTR [rax],al
   1400248f0:	mov    ?,WORD PTR [rax+rax*1+0x800]
   1400248f7:	add    al,al
   1400248f9:	mov    esp,0x100000
   1400248fe:	add    BYTE PTR [rax],al
   140024900:	out    dx,eax
   140024901:	mov    esp,0x80000
   140024906:	add    BYTE PTR [rax],al
   140024908:	cmp    al,0xbe
   14002490a:	add    BYTE PTR [rax],al
   14002490c:	adc    al,0x0
   14002490e:	add    BYTE PTR [rax],al
   140024910:	movabs rsi,0xbebb000000130000
   14002491a:	add    BYTE PTR [rax],al
   14002491c:	adc    al,BYTE PTR [rax]
   14002491e:	add    BYTE PTR [rax],al
   140024920:	(bad)  
   140024921:	mov    esi,0x110000
   140024926:	add    BYTE PTR [rax],al
   140024928:	sar    DWORD PTR [rsi+0x80000],cl
   14002492e:	add    BYTE PTR [rax],al
   140024930:	push   0xffffffffffffffbf
   140024932:	add    BYTE PTR [rax],al
   140024934:	adc    eax,0xbe000000
   140024939:	mov    edi,0x190000
   14002493e:	add    BYTE PTR [rax],al
   140024940:	int    0xbf
   140024942:	add    BYTE PTR [rax],al
   140024944:	sbb    BYTE PTR [rax],al
   140024946:	add    BYTE PTR [rax],al
   140024948:	cmp    al,0xc0
   14002494a:	add    BYTE PTR [rax],al
   14002494c:	(bad)  
   14002494d:	add    BYTE PTR [rax],al
   14002494f:	add    BYTE PTR [rbx-0x40],cl
   140024952:	add    BYTE PTR [rax],al
   140024954:	(bad)  
   140024955:	add    BYTE PTR [rax],al
   140024957:	add    BYTE PTR [rdx-0x40],bl
   14002495a:	add    BYTE PTR [rax],al
   14002495c:	or     BYTE PTR [rax],al
   14002495e:	add    BYTE PTR [rax],al
   140024960:	ins    DWORD PTR es:[rdi],dx
   140024961:	rol    BYTE PTR [rax],0x0
   140024964:	adc    eax,0x39000000
   140024969:	rol    DWORD PTR [rax],0x0
   14002496c:	sbb    al,BYTE PTR [rax]
   14002496e:	add    BYTE PTR [rax],al
   140024970:	rex.WXB rol QWORD PTR [r8],0x0
   140024974:	sbb    al,0x0
   140024976:	add    BYTE PTR [rax],al
   140024978:	outs   dx,DWORD PTR ds:[rsi]
   140024979:	rol    DWORD PTR [rax],0x0
   14002497c:	sbb    eax,0x89000000
   140024981:	rol    DWORD PTR [rax],0x0
   140024984:	(bad)  
   140024985:	add    BYTE PTR [rax],al
   140024987:	add    dh,al
   140024989:	rol    DWORD PTR [rax],0x0
   14002498c:	and    BYTE PTR [rax],al
   14002498e:	add    BYTE PTR [rax],al
   140024990:	(bad)  
   140024991:	rol    DWORD PTR [rax],0x0
   140024994:	and    DWORD PTR [rax],eax
   140024996:	add    BYTE PTR [rax],al
   140024998:	(bad)  
   140024999:	ret    0x0
   14002499c:	sbb    al,0x0
   14002499e:	add    BYTE PTR [rax],al
   1400249a0:	rex.RX ret 0x0
   1400249a4:	adc    eax,0x8e000000
   1400249a9:	ret    0x0
   1400249ac:	and    al,BYTE PTR [rax]
   1400249ae:	add    BYTE PTR [rax],al
   1400249b0:	scas   eax,DWORD PTR es:[rdi]
   1400249b1:	ret    0x0
   1400249b4:	and    eax,DWORD PTR [rax]
   1400249b6:	add    BYTE PTR [rax],al
   1400249b8:	faddp  st(2),st
   1400249ba:	add    BYTE PTR [rax],al
   1400249bc:	and    al,BYTE PTR [rax]
   1400249be:	add    BYTE PTR [rax],al
   1400249c0:	in     eax,dx
   1400249c1:	ret    0x0
   1400249c4:	adc    eax,0x90000000
   1400249c9:	ret    
   1400249ca:	add    BYTE PTR [rax],al
   1400249cc:	and    al,0x0
   1400249ce:	add    BYTE PTR [rax],al
   1400249d0:	mov    cl,0xc3
   1400249d2:	add    BYTE PTR [rax],al
   1400249d4:	and    eax,0xe0000000
   1400249d9:	ret    
   1400249da:	add    BYTE PTR [rax],al
   1400249dc:	and    al,0x0
   1400249de:	add    BYTE PTR [rax],al
   1400249e0:	out    dx,eax
   1400249e1:	ret    
   1400249e2:	add    BYTE PTR [rax],al
   1400249e4:	adc    eax,0x8a000000
   1400249e9:	(bad)  
   1400249ea:	add    BYTE PTR [rax],al
   1400249ec:	add    BYTE PTR es:[rax],al
   1400249ef:	add    dh,ah
   1400249f1:	(bad)  
   1400249f2:	add    BYTE PTR [rax],al
   1400249f4:	adc    eax,0xa000000
   1400249f9:	(bad)
   1400249fc:	(bad)  
   1400249fd:	add    BYTE PTR [rax],al
   1400249ff:	add    BYTE PTR [rsi-0x3b],ah
   140024a02:	add    BYTE PTR [rax],al
   140024a04:	sub    BYTE PTR [rax],al
   140024a06:	add    BYTE PTR [rax],al
   140024a08:	js     0x1400249cf
   140024a0a:	add    BYTE PTR [rax],al
   140024a0c:	sub    DWORD PTR [rax],eax
   140024a0e:	add    BYTE PTR [rax],al
   140024a10:	mov    eax,ebp
   140024a12:	add    BYTE PTR [rax],al
   140024a14:	sub    al,BYTE PTR [rax]
   140024a16:	add    BYTE PTR [rax],al
   140024a18:	mov    edx,0x290000c5
   140024a1d:	add    BYTE PTR [rax],al
   140024a1f:	add    cl,cl
   140024a21:	(bad)
   140024a24:	sub    BYTE PTR [rax],al
   140024a26:	add    BYTE PTR [rax],al
   140024a28:	fadd   st,st(5)
   140024a2a:	add    BYTE PTR [rax],al
   140024a2c:	(bad)  
   140024a2d:	add    BYTE PTR [rax],al
   140024a2f:	add    BYTE PTR [rip+0x150000c6],ah        # 0x155024afb
   140024a35:	add    BYTE PTR [rax],al
   140024a37:	add    BYTE PTR [rbx+0x2b0000c6],dh
   140024a3d:	add    BYTE PTR [rax],al
   140024a3f:	add    ch,al
   140024a41:	mov    BYTE PTR [rax],0x0
   140024a44:	sub    al,0x0
   140024a46:	add    BYTE PTR [rax],al
   140024a48:	(bad)  
   140024a49:	mov    BYTE PTR [rax],0x0
   140024a4c:	sub    eax,0xe5000000
   140024a51:	mov    BYTE PTR [rax],0x0
   140024a54:	sub    al,0x0
   140024a56:	add    BYTE PTR [rax],al
   140024a58:	hlt    
   140024a59:	mov    BYTE PTR [rax],0x0
   140024a5c:	sub    eax,DWORD PTR [rax]
   140024a5e:	add    BYTE PTR [rax],al
   140024a60:	add    eax,edi
   140024a62:	add    BYTE PTR [rax],al
   140024a64:	adc    eax,0x36000000
   140024a69:	mov    DWORD PTR [rax],0x3100
   140024a6f:	add    BYTE PTR [rbp-0x39],al
   140024a72:	add    BYTE PTR [rax],al
   140024a74:	xor    BYTE PTR [rax],al
   140024a76:	add    BYTE PTR [rax],al
   140024a78:	mov    esp,0x2f0000c7
   140024a7d:	add    BYTE PTR [rax],al
   140024a7f:	add    bl,cl
   140024a81:	mov    DWORD PTR [rax],0x2e00
   140024a87:	add    dl,bl
   140024a89:	mov    DWORD PTR [rax],0x800
   140024a8f:	add    BYTE PTR [rax+rcx*8],cl
   140024a92:	add    BYTE PTR [rax],al
   140024a94:	(bad)  
   140024a95:	add    BYTE PTR [rax],al
   140024a97:	add    BYTE PTR [rax],bl
   140024a99:	enter  0x0,0x6
   140024a9d:	add    BYTE PTR [rax],al
   140024a9f:	add    BYTE PTR [rax+rcx*8],ah
   140024aa2:	add    BYTE PTR [rax],al
   140024aa4:	add    DWORD PTR [rax],eax
   140024aa6:	add    BYTE PTR [rax],al
   140024aa8:	imul   ecx,eax,0x0
   140024aab:	add    BYTE PTR [rip+0x76000000],dh        # 0x1b6024ab1
   140024ab1:	enter  0x0,0x34
   140024ab5:	add    BYTE PTR [rax],al
   140024ab7:	add    ah,bl
   140024ab9:	enter  0x0,0x33
   140024abd:	add    BYTE PTR [rax],al
   140024abf:	add    bh,ah
   140024ac1:	enter  0x0,0x32
   140024ac5:	add    BYTE PTR [rax],al
   140024ac7:	add    dl,dh
   140024ac9:	enter  0x0,0x1
   140024acd:	add    BYTE PTR [rax],al
   140024acf:	add    BYTE PTR [rbp-0x37],ch
   140024ad2:	add    BYTE PTR [rax],al
   140024ad4:	add    BYTE PTR [rax],al
   140024ad6:	add    BYTE PTR [rax],al
   140024ad8:	jns    0x140024aa3
   140024ada:	add    BYTE PTR [rax],al
   140024adc:	(bad)  
   140024add:	(bad)  
   140024ade:	(bad)  
   140024adf:	call   QWORD PTR [rcx]
   140024ae1:	and    eax,0x6425000c
   140024ae6:	adc    DWORD PTR [rax],eax
   140024ae8:	and    DWORD PTR [rax+rdx*1+0x0],edx
   140024aec:	sbb    eax,0x10000f34
   140024af1:	jb     0x140024aff
   140024af3:	lock or ah,al
   140024af6:	or     al,dl
   140024af8:	(bad)  
   140024af9:	rol    BYTE PTR [rax+rsi*2],0xce
   140024afd:	add    DWORD PTR ds:[rax],eax
   140024b00:	shl    ch,1
   140024b02:	add    DWORD PTR [rax],eax
   140024b04:	(bad)  
   140024b05:	(bad)  
   140024b06:	(bad)  
   140024b07:	call   QWORD PTR [rax-0x5ffffe7b]
   140024b0d:	leave  
   140024b0e:	add    BYTE PTR [rax],al
   140024b10:	(bad)  
   140024b11:	(bad)  
   140024b12:	(bad)  
   140024b13:	call   rbx
   140024b15:	leave  
   140024b16:	add    BYTE PTR [rax],al
   140024b18:	add    BYTE PTR [rax],al
   140024b1a:	add    BYTE PTR [rax],al
   140024b1c:	ins    BYTE PTR es:[rdi],dx
   140024b1d:	retf   
   140024b1e:	add    BYTE PTR [rax],al
   140024b20:	(bad)  
   140024b21:	(bad)  
   140024b22:	(bad)  
   140024b23:	call   QWORD PTR [rcx]
   140024b25:	and    ecx,DWORD PTR [rdx]
   140024b27:	add    BYTE PTR [rbx],ah
   140024b29:	xor    al,0x13
   140024b2b:	add    BYTE PTR [rsi],dl
   140024b2d:	jb     0x140024b41
   140024b2f:	lock adc al,ah
   140024b32:	(bad)  
   140024b33:	ror    BYTE PTR [rax+rax*8],1
   140024b36:	or     dh,BYTE PTR [rax+0x9]
   140024b39:	(bad)  
   140024b3a:	or     BYTE PTR [rax-0x32],dl
   140024b3d:	add    DWORD PTR ds:[rax],eax
   140024b40:	add    dh,ah
   140024b42:	add    DWORD PTR [rax],eax
   140024b44:	(bad)  
   140024b45:	(bad)  
   140024b46:	(bad)  
   140024b47:	push   QWORD PTR [rax+0x185]
   140024b4d:	add    BYTE PTR [rax],al
   140024b4f:	add    al,dl
   140024b51:	test   DWORD PTR [rcx],eax
   140024b53:	add    al,ah
   140024b55:	retf   
   140024b56:	add    BYTE PTR [rax],al
   140024b58:	(bad)  
   140024b59:	(bad)  
   140024b5a:	(bad)  
   140024b5b:	call   QWORD PTR [rcx]
   140024b5d:	int3   
   140024b5e:	add    BYTE PTR [rax],al
   140024b60:	add    BYTE PTR [rax],al
   140024b62:	add    BYTE PTR [rax],al
   140024b64:	xchg   edi,eax
   140024b65:	int3   
   140024b66:	add    BYTE PTR [rax],al
   140024b68:	add    DWORD PTR [rax],eax
   140024b6a:	add    BYTE PTR [rax],al
   140024b6c:	lods   eax,DWORD PTR ds:[rsi]
   140024b6d:	int3   
   140024b6e:	add    BYTE PTR [rax],al
   140024b70:	add    BYTE PTR [rax],al
   140024b72:	add    BYTE PTR [rax],al
   140024b74:	xlat   BYTE PTR ds:[rbx]
   140024b75:	iret   
   140024b76:	add    BYTE PTR [rax],al
   140024b78:	(bad)  
   140024b79:	(bad)  
   140024b7a:	(bad)  
   140024b7b:	call   QWORD PTR [rcx]
   140024b7d:	and    DWORD PTR [rdx],ecx
   140024b7f:	add    BYTE PTR [rax],bl
   140024b81:	add    DWORD PTR [rbx],edx
   140024b83:	add    BYTE PTR [rcx],dl
   140024b85:	lock pavgb mm1,QWORD PTR [rip+0x9c00bd0]        # 0x149c2575d
   140024b8d:	jo     0x140024b97
   140024b8f:	(bad)  
   140024b90:	(bad)  
   140024b91:	push   rax
   140024b92:	(bad)  
   140024b93:	xor    dh,cl
   140024b95:	add    DWORD PTR ds:[rax],eax
   140024b98:	xor    dh,ah
   140024b9a:	add    DWORD PTR [rax],eax
   140024b9c:	(bad)  
   140024b9d:	(bad)  
   140024b9e:	(bad)  
   140024b9f:	push   rax
   140024ba1:	test   DWORD PTR [rcx],eax
   140024ba3:	add    BYTE PTR [rax],al
   140024ba5:	add    BYTE PTR [rax],al
   140024ba7:	add    BYTE PTR [rax],dl
   140024ba9:	xchg   BYTE PTR [rcx],al
   140024bab:	add    BYTE PTR [rcx],al
   140024bad:	add    BYTE PTR [rax],al
   140024baf:	add    BYTE PTR [rax],dh
   140024bb1:	xchg   BYTE PTR [rcx],al
   140024bb3:	add    BYTE PTR [rdx],al
   140024bb5:	add    BYTE PTR [rax],al
   140024bb7:	add    BYTE PTR [rax-0x7a],dl
   140024bba:	add    DWORD PTR [rax],eax
   140024bbc:	add    BYTE PTR [rax],al
   140024bbe:	add    BYTE PTR [rax],al
   140024bc0:	jo     0x140024b48
   140024bc2:	add    DWORD PTR [rax],eax
   140024bc4:	add    al,0x0
   140024bc6:	add    BYTE PTR [rax],al
   140024bc8:	nop
   140024bc9:	xchg   BYTE PTR [rcx],al
   140024bcb:	add    BYTE PTR [rip+0xffffffffb0000000],al        # 0xf0024bd1
   140024bd1:	xchg   BYTE PTR [rcx],al
   140024bd3:	add    BYTE PTR [rsi],al
   140024bd5:	add    BYTE PTR [rax],al
   140024bd7:	add    al,dl
   140024bd9:	xchg   BYTE PTR [rcx],al
   140024bdb:	add    bh,bh
   140024bdd:	(bad)  
   140024bde:	(bad)  
   140024bdf:	push   rax
   140024be1:	xchg   BYTE PTR [rcx],al
   140024be3:	add    BYTE PTR [rax],cl
   140024be5:	add    BYTE PTR [rax],al
   140024be7:	add    BYTE PTR [rax],dl
   140024be9:	xchg   DWORD PTR [rcx],eax
   140024beb:	add    BYTE PTR [rcx],cl
   140024bed:	add    BYTE PTR [rax],al
   140024bef:	add    BYTE PTR [rax],dh
   140024bf1:	xchg   DWORD PTR [rcx],eax
   140024bf3:	add    BYTE PTR [rdx],cl
   140024bf5:	add    BYTE PTR [rax],al
   140024bf7:	add    BYTE PTR [rax-0x79],dl
   140024bfa:	add    DWORD PTR [rax],eax
   140024bfc:	rex rol BYTE PTR [rax],1
   140024bff:	add    bh,bh
   140024c01:	(bad)  
   140024c02:	(bad)  
   140024c03:	push   QWORD PTR [rsi-0x30]
   140024c06:	add    BYTE PTR [rax],al
   140024c08:	add    BYTE PTR [rax],al
   140024c0a:	add    BYTE PTR [rax],al
   140024c0c:	hlt    
   140024c0d:	rol    BYTE PTR [rax],1
   140024c0f:	add    BYTE PTR [rcx],al
   140024c11:	add    BYTE PTR [rax],al
   140024c13:	add    BYTE PTR [rsi],al
   140024c15:	rol    DWORD PTR [rax],1
   140024c17:	add    BYTE PTR [rdx],al
   140024c19:	add    BYTE PTR [rax],al
   140024c1b:	add    BYTE PTR [rip+0x30000d1],bl        # 0x143024cf2
   140024c21:	add    BYTE PTR [rax],al
   140024c23:	add    BYTE PTR [rcx+0x20000d2],bl
   140024c29:	add    BYTE PTR [rax],al
   140024c2b:	add    BYTE PTR [rax+0x10000d2],ch
   140024c31:	add    BYTE PTR [rax],al
   140024c33:	add    BYTE PTR [rdi+0x70000d2],dh
   140024c39:	add    BYTE PTR [rax],al
   140024c3b:	add    bl,al
   140024c3d:	rol    BYTE PTR [rax],cl
   140024c3f:	add    BYTE PTR [rsi],al
   140024c41:	add    BYTE PTR [rax],al
   140024c43:	add    BYTE PTR [rbp-0x2d],al
   140024c46:	add    BYTE PTR [rax],al
   140024c48:	add    eax,0x51000000
   140024c4d:	rol    DWORD PTR [rax],cl
   140024c4f:	add    BYTE PTR [rax+rax*1],al
   140024c52:	add    BYTE PTR [rax],al
   140024c54:	pop    rbp
   140024c55:	rol    DWORD PTR [rax],cl
   140024c57:	add    BYTE PTR [rax],al
   140024c59:	add    BYTE PTR [rax],al
   140024c5b:	add    BYTE PTR [rdx-0xffff2d],dl
   140024c61:	(bad)  
   140024c62:	(bad)  
   140024c63:	call   rdx
   140024c65:	rol    DWORD PTR [rax],cl
   140024c67:	add    BYTE PTR [rbx],cl
   140024c69:	add    BYTE PTR [rax],al
   140024c6b:	add    ch,bl
   140024c6d:	rol    DWORD PTR [rax],cl
   140024c6f:	add    BYTE PTR [rdx],cl
   140024c71:	add    BYTE PTR [rax],al
   140024c73:	add    bh,ah
   140024c75:	rol    DWORD PTR [rax],cl
   140024c77:	add    BYTE PTR [rcx],cl
   140024c79:	add    BYTE PTR [rax],al
   140024c7b:	add    dl,dh
   140024c7d:	rol    DWORD PTR [rax],cl
   140024c7f:	add    BYTE PTR [rax],cl
   140024c81:	add    BYTE PTR [rax],al
   140024c83:	add    ch,bh
   140024c85:	rol    DWORD PTR [rax],cl
   140024c87:	add    bh,bh
   140024c89:	(bad)  
   140024c8a:	(bad)  
   140024c8b:	call   QWORD PTR [rcx]
   140024c8d:	sbb    DWORD PTR [rsi],eax
   140024c8f:	add    BYTE PTR [rcx],bl
   140024c91:	xor    al,0x10
   140024c93:	add    BYTE PTR [rax],cl
   140024c95:	mov    dl,0x4
   140024c97:	jo     0x140024c9c
   140024c99:	(bad)  
   140024c9a:	add    dl,BYTE PTR [rax-0x32]
   140024c9d:	add    DWORD PTR ds:[rax],eax
   140024ca0:	(bad)  
   140024ca1:	out    0x1,al
   140024ca3:	add    bh,bh
   140024ca5:	(bad)  
   140024ca6:	(bad)  
   140024ca7:	push   QWORD PTR [rax-0x79]
   140024caa:	add    DWORD PTR [rax],eax
   140024cac:	add    BYTE PTR [rax],al
   140024cae:	add    BYTE PTR [rax],al
   140024cb0:	nop
   140024cb1:	xchg   DWORD PTR [rcx],eax
   140024cb3:	add    BYTE PTR [rcx],al
   140024cb5:	add    BYTE PTR [rax],al
   140024cb7:	add    BYTE PTR [rax+0x2000187],dh
   140024cbd:	add    BYTE PTR [rax],al
   140024cbf:	add    al,dl
   140024cc1:	xchg   DWORD PTR [rcx],eax
   140024cc3:	add    BYTE PTR [rdx],al
   140024cc5:	add    BYTE PTR [rax],al
   140024cc7:	add    al,dh
   140024cc9:	xchg   DWORD PTR [rcx],eax
   140024ccb:	add    BYTE PTR [rdx],al
   140024ccd:	add    BYTE PTR [rax],al
   140024ccf:	add    BYTE PTR [rax],dl
   140024cd1:	mov    BYTE PTR [rcx],al
   140024cd3:	add    BYTE PTR [rdx],al
   140024cd5:	add    BYTE PTR [rax],al
   140024cd7:	add    BYTE PTR [rax],dh
   140024cd9:	mov    BYTE PTR [rcx],al
   140024cdb:	add    BYTE PTR [rsi],al
   140024cdd:	add    BYTE PTR [rax],al
   140024cdf:	add    BYTE PTR [rax-0x78],dl
   140024ce2:	add    DWORD PTR [rax],eax
   140024ce4:	(bad)  
   140024ce5:	(bad)  
   140024ce6:	add    BYTE PTR [rax],al
   140024ce8:	(bad)  
   140024ce9:	(bad)  
   140024cea:	(bad)  
   140024ceb:	dec    DWORD PTR [rbx+0xd4]
   140024cf1:	add    BYTE PTR [rax],al
   140024cf3:	add    BYTE PTR [rdi-0xffff2c],bl
   140024cf9:	(bad)  
   140024cfa:	(bad)  
   140024cfb:	push   QWORD PTR [rcx+0xd4]
   140024d01:	add    BYTE PTR [rax],al
   140024d03:	add    dl,al
   140024d05:	(bad)  
   140024d06:	add    BYTE PTR [rax],al
   140024d08:	add    DWORD PTR [rax],eax
   140024d0a:	add    BYTE PTR [rax],al
   140024d0c:	(bad)  
   140024d0d:	(bad)  
   140024d0e:	add    BYTE PTR [rax],al
   140024d10:	add    al,BYTE PTR [rax]
   140024d12:	add    BYTE PTR [rax],al
   140024d14:	stc    
   140024d15:	(bad)  
   140024d16:	add    BYTE PTR [rax],al
   140024d18:	add    eax,DWORD PTR [rax]
   140024d1a:	add    BYTE PTR [rax],al
   140024d1c:	adc    ch,dl
   140024d1e:	add    BYTE PTR [rax],al
   140024d20:	add    al,BYTE PTR [rax]
   140024d22:	add    BYTE PTR [rax],al
   140024d24:	rex.WB (bad) 
   140024d26:	add    BYTE PTR [rax],al
   140024d28:	add    al,0x0
   140024d2a:	add    BYTE PTR [rax],al
   140024d2c:	(bad)  
   140024d2d:	(bad)  
   140024d2e:	add    BYTE PTR [rax],al
   140024d30:	add    al,BYTE PTR [rax]
   140024d32:	add    BYTE PTR [rax],al
   140024d34:	adc    ch,0x0
   140024d37:	add    BYTE PTR [rip+0xffffffff9a000000],al        # 0xda024d3d
   140024d3d:	(bad)  
   140024d3e:	add    BYTE PTR [rax],al
   140024d40:	add    al,BYTE PTR [rax]
   140024d42:	add    BYTE PTR [rax],al
   140024d44:	push   rsp
   140024d45:	(bad)  
   140024d46:	add    BYTE PTR [rax],al
   140024d48:	(bad)  
   140024d49:	add    BYTE PTR [rax],al
   140024d4b:	add    BYTE PTR [rsi-0x2a],ah
   140024d4e:	add    BYTE PTR [rax],al
   140024d50:	(bad)  
   140024d51:	add    BYTE PTR [rax],al
   140024d53:	add    BYTE PTR [rdx-0x2a],dh
   140024d56:	add    BYTE PTR [rax],al
   140024d58:	(bad)  
   140024d59:	add    BYTE PTR [rax],al
   140024d5b:	add    BYTE PTR [rcx+0x20000d6],al
   140024d61:	add    BYTE PTR [rax],al
   140024d63:	add    BYTE PTR [rbp+0x10000d6],ch
   140024d69:	add    BYTE PTR [rax],al
   140024d6b:	add    BYTE PTR [rcx+0xd6],bh
   140024d71:	add    BYTE PTR [rax],al
   140024d73:	add    ch,al
   140024d75:	(bad)  
   140024d76:	add    BYTE PTR [rax],al
   140024d78:	(bad)  
   140024d79:	(bad)  
   140024d7a:	(bad)  
   140024d7b:	call   QWORD PTR [rcx]
   140024d7d:	sbb    BYTE PTR [rax+rax*1],al
   140024d80:	sbb    BYTE PTR [rcx+rcx*1],dh
   140024d83:	add    BYTE PTR [rdx],cl
   140024d85:	push   rdx
   140024d86:	(bad)  
   140024d87:	jo     0x140024d57
   140024d89:	add    DWORD PTR ds:[rax],eax
   140024d8c:	rex jmp 0x140024d90
   140024d8f:	add    al,dh
   140024d91:	(bad)  
   140024d92:	add    BYTE PTR [rax],al
   140024d94:	(bad)  
   140024d95:	(bad)  
   140024d96:	(bad)  
   140024d97:	jmp    QWORD PTR [rdx]
   140024d99:	xlat   BYTE PTR ds:[rbx]
   140024d9a:	add    BYTE PTR [rax],al
   140024d9c:	add    DWORD PTR [rax],eax
   140024d9e:	add    BYTE PTR [rax],al
   140024da0:	rex.X xlat BYTE PTR ds:[rbx]
   140024da2:	add    BYTE PTR [rax],al
   140024da4:	add    BYTE PTR [rax],al
   140024da6:	add    BYTE PTR [rax],al
   140024da8:	adc    DWORD PTR [rax],ebx
   140024daa:	add    al,0x0
   140024dac:	sbb    BYTE PTR [rcx+rcx*1],dh
   140024daf:	add    BYTE PTR [rdx],cl
   140024db1:	push   rdx
   140024db2:	(bad)  
   140024db3:	jo     0x140024d83
   140024db5:	add    DWORD PTR ds:[rax],eax
   140024db8:	jo     0x140024da5
   140024dba:	add    DWORD PTR [rax],eax
   140024dbc:	(bad)  
   140024dbd:	(bad)  
   140024dbe:	(bad)  
   140024dbf:	call   QWORD PTR [rax]
   140024dc1:	xchg   ecx,eax
   140024dc2:	add    DWORD PTR [rax],eax
   140024dc4:	(bad)  
   140024dc5:	xlat   BYTE PTR ds:[rbx]
   140024dc6:	add    BYTE PTR [rax],al
   140024dc8:	(bad)  
   140024dc9:	(bad)  
   140024dca:	(bad)  
   140024dcb:	(bad)  
   140024dcc:	jle    0x140024da5
   140024dce:	add    BYTE PTR [rax],al
   140024dd0:	add    BYTE PTR [rax],al
   140024dd2:	add    BYTE PTR [rax],al
   140024dd4:	and    DWORD PTR [rax],eax
   140024dd6:	add    BYTE PTR [rax],al
   140024dd8:	mov    al,0xd7
   140024dda:	add    BYTE PTR [rax],al
   140024ddc:	fcom   st(7)
   140024dde:	add    BYTE PTR [rax],al
   140024de0:	clc    
   140024de1:	rex.WRB add r8b,BYTE PTR [r8]
   140024de4:	and    DWORD PTR [rip+0x54050002],eax        # 0x194074dec
   140024dea:	(bad)  
   140024deb:	add    BYTE PTR [rax-0x27ffff29],dh
   140024df1:	xlat   BYTE PTR ds:[rbx]
   140024df2:	add    BYTE PTR [rax],al
   140024df4:	clc    
   140024df5:	rex.WRB add r8b,BYTE PTR [r8]
   140024df8:	add    DWORD PTR [rdi],ecx
   140024dfa:	(bad)  
   140024dfb:	add    BYTE PTR [rdi],cl
   140024dfd:	or     BYTE PTR fs:[rax],al
   140024e00:	sysenter 
   140024e02:	(bad)  
   140024e03:	add    BYTE PTR [rdi],cl
   140024e05:	xor    cl,BYTE PTR [rbx]
   140024e07:	jo     0x140024e1a
   140024e09:	and    ecx,DWORD PTR [rdx]
   140024e0b:	add    BYTE PTR [rbx],ah
   140024e0d:	xor    al,0x11
   140024e0f:	add    BYTE PTR [rsi],dl
   140024e11:	push   rdx
   140024e12:	adc    dh,al
   140024e14:	adc    al,ah
   140024e16:	(bad)  
   140024e17:	ror    BYTE PTR [rax+rax*8],1
   140024e1a:	or     dh,BYTE PTR [rax+0x9]
   140024e1d:	(bad)  
   140024e1e:	or     BYTE PTR [rax-0x32],dl
   140024e21:	add    DWORD PTR ds:[rax],eax
   140024e24:	movabs al,ds:0xe0ffffffff0001eb
   140024e2d:	mov    BYTE PTR [rcx],al
   140024e2f:	add    BYTE PTR [rax],al
   140024e31:	add    BYTE PTR [rax],al
   140024e33:	add    al,al
   140024e35:	mov    BYTE PTR [rcx],al
   140024e37:	add    BYTE PTR [rax-0x28],dh
   140024e3a:	add    BYTE PTR [rax],al
   140024e3c:	(bad)  
   140024e3d:	(bad)  
   140024e3e:	(bad)  
   140024e3f:	jmp    FWORD PTR [rcx+0x10000d8]
   140024e45:	add    BYTE PTR [rax],al
   140024e47:	add    BYTE PTR [rsi-0x27],cl
   140024e4a:	add    BYTE PTR [rax],al
   140024e4c:	add    BYTE PTR [rax],al
   140024e4e:	add    BYTE PTR [rax],al
   140024e50:	(bad)  
   140024e51:	fld    DWORD PTR [rax]
   140024e53:	add    BYTE PTR [rcx],al
   140024e55:	add    BYTE PTR [rax],al
   140024e57:	add    BYTE PTR [rbp-0x27],bh
   140024e5a:	add    BYTE PTR [rax],al
   140024e5c:	add    BYTE PTR [rax],al
   140024e5e:	add    BYTE PTR [rax],al
   140024e60:	sbb    DWORD PTR [rdx],ecx
   140024e62:	add    al,BYTE PTR [rax]
   140024e64:	or     dl,BYTE PTR [rdx+0x6]
   140024e67:	push   rax
   140024e68:	(bad)  
   140024e69:	add    DWORD PTR ds:[rax],eax
   140024e6c:	shr    bl,1
   140024e6e:	add    DWORD PTR [rax],eax
   140024e70:	sbb    DWORD PTR [rip+0x641d0006],ebx        # 0x1a41f4e7c
   140024e76:	(bad)  
   140024e77:	add    BYTE PTR [rax],bl
   140024e79:	xor    al,0xd
   140024e7b:	add    BYTE PTR [rdx],cl
   140024e7d:	xchg   edx,eax
   140024e7e:	(bad)  
   140024e7f:	jo     0x140024e4f
   140024e81:	add    DWORD PTR ds:[rax],eax
   140024e84:	shr    bl,1
   140024e86:	add    DWORD PTR [rax],eax
   140024e88:	add    DWORD PTR [rax],eax
   140024e8a:	add    BYTE PTR [rax],al
   140024e8c:	add    al,BYTE PTR [rax]
   140024e8e:	add    BYTE PTR [rax],al
   140024e90:	add    eax,DWORD PTR [rax]
   140024e92:	add    BYTE PTR [rax],al
   140024e94:	add    DWORD PTR [rax],eax
   140024e96:	add    BYTE PTR [rax],al
   140024e98:	(bad)  
   140024e99:	rex.WRX add r8b,BYTE PTR [rax]
   140024e9c:	add    BYTE PTR [rax],al
   140024e9e:	add    BYTE PTR [rax],al
   140024ea0:	add    eax,DWORD PTR [rax]
   140024ea2:	add    BYTE PTR [rax],al
   140024ea4:	add    al,0x0
   140024ea6:	add    BYTE PTR [rax],al
   140024ea8:	add    DWORD PTR [rax],eax
   140024eaa:	add    BYTE PTR [rax],al
   140024eac:	mov    al,0x4e
   140024eae:	add    al,BYTE PTR [rax]
   140024eb0:	add    BYTE PTR [rax],al
	...
   140024ebb:	add    BYTE PTR [rax-0x77],ah
   140024ebe:	add    DWORD PTR [rax],eax
   140024ec0:	rex.W add BYTE PTR [rax],al
   140024ec3:	add    BYTE PTR [rax+0x0],al
	...
   140024ece:	add    BYTE PTR [rax],al
   140024ed0:	xor    BYTE PTR [rcx+0x480001],cl
   140024ed6:	add    BYTE PTR [rax],al
   140024ed8:	(bad)  
   140024ed9:	(bad)  
   140024eda:	(bad)  
   140024edb:	inc    DWORD PTR [rax]
	...
   140024ee5:	add    BYTE PTR [rax],al
   140024ee7:	add    BYTE PTR [rcx],al
   140024ee9:	add    BYTE PTR [rax],al
   140024eeb:	add    BYTE PTR [rax],dl
   140024eed:	mov    DWORD PTR [rcx],eax
	...
   140024ef7:	add    bh,bh
   140024ef9:	(bad)  
   140024efa:	(bad)  
   140024efb:	inc    DWORD PTR [rax]
   140024efd:	add    BYTE PTR [rax],al
   140024eff:	add    BYTE PTR [rax-0xffff27],dh
   140024f05:	(bad)  
   140024f06:	(bad)  
   140024f07:	push   rsi
   140024f09:	fld    DWORD PTR [rax]
   140024f0b:	add    BYTE PTR [rax],al
   140024f0d:	add    BYTE PTR [rax],al
   140024f0f:	add    BYTE PTR [rcx],cl
   140024f11:	fiadd  DWORD PTR [rax]
   140024f13:	add    BYTE PTR [rcx],al
   140024f15:	add    BYTE PTR [rax],al
   140024f17:	add    BYTE PTR [rdx],dl
   140024f19:	fiadd  DWORD PTR [rax]
   140024f1b:	add    BYTE PTR [rdx],al
   140024f1d:	add    BYTE PTR [rax],al
   140024f1f:	add    BYTE PTR [rax],ah
   140024f21:	fiadd  DWORD PTR [rax]
   140024f23:	add    bh,bh
   140024f25:	(bad)  
   140024f26:	(bad)  
   140024f27:	push   QWORD PTR [rax]
   140024f29:	mov    DWORD PTR [rcx],eax
   140024f2b:	add    BYTE PTR [rax],al
   140024f2d:	add    BYTE PTR [rax],al
   140024f2f:	add    BYTE PTR [rip+0x3000189],bh        # 0x1430250be
   140024f35:	add    BYTE PTR [rax],al
   140024f37:	add    BYTE PTR [rbp-0x77],dl
   140024f3a:	add    DWORD PTR [rax],eax
   140024f3c:	add    BYTE PTR [rax],al
   140024f3e:	add    BYTE PTR [rax],al
   140024f40:	ins    DWORD PTR es:[rdi],dx
   140024f41:	mov    DWORD PTR [rcx],eax
   140024f43:	add    BYTE PTR [rax+rax*1],al
   140024f46:	add    BYTE PTR [rax],al
   140024f48:	test   DWORD PTR [rcx+0x1],ecx
   140024f4e:	add    BYTE PTR [rax],al
   140024f50:	sbb    DWORD PTR [rdx],ecx
   140024f52:	add    al,BYTE PTR [rax]
   140024f54:	or     dh,BYTE PTR [rdx]
   140024f56:	(bad)  
   140024f57:	push   rax
   140024f58:	(bad)  
   140024f59:	add    DWORD PTR ds:[rax],eax
   140024f5c:	add    ah,ch
   140024f5e:	add    DWORD PTR [rax],eax
   140024f60:	sbb    DWORD PTR [rcx],esp
   140024f62:	or     al,BYTE PTR [rax]
   140024f64:	and    DWORD PTR [rsi+rcx*1+0x0],esp
   140024f68:	sbb    al,0x34
   140024f6a:	or     eax,0xa520e00
   140024f6f:	lock or al,ah
   140024f72:	(bad)  
   140024f73:	rol    BYTE PTR [rax+rax*8],1
   140024f76:	add    dh,BYTE PTR [rax-0x32]
   140024f79:	add    DWORD PTR ds:[rax],eax
   140024f7c:	add    ah,ch
   140024f7e:	add    DWORD PTR [rax],eax
   140024f80:	add    DWORD PTR [rax],eax
   140024f82:	add    BYTE PTR [rax],al
   140024f84:	add    DWORD PTR [rax],eax
   140024f86:	add    BYTE PTR [rax],al
   140024f88:	add    al,BYTE PTR [rax]
   140024f8a:	add    BYTE PTR [rax],al
   140024f8c:	add    DWORD PTR [rax],eax
   140024f8e:	add    BYTE PTR [rax],al
   140024f90:	mov    esp,0x24f
   140024f95:	add    BYTE PTR [rax],al
   140024f97:	add    BYTE PTR [rdx],al
   140024f99:	add    BYTE PTR [rax],al
   140024f9b:	add    BYTE PTR [rbx],al
   140024f9d:	add    BYTE PTR [rax],al
   140024f9f:	add    BYTE PTR [rcx],al
   140024fa1:	add    BYTE PTR [rax],al
   140024fa3:	add    BYTE PTR [rax+0x4000024f],ch
	...
   140024fb1:	add    BYTE PTR [rax],al
   140024fb3:	add    BYTE PTR [rax+0x38000189],dh
   140024fb9:	add    BYTE PTR [rax],al
   140024fbb:	add    BYTE PTR [rax+0x0],al
	...
   140024fc6:	add    BYTE PTR [rax],al
   140024fc8:	nop
   140024fc9:	mov    DWORD PTR [rcx],eax
   140024fcb:	add    BYTE PTR [rax],bh
   140024fcd:	add    BYTE PTR [rax],al
   140024fcf:	add    BYTE PTR [rax],dh
   140024fd1:	fild   DWORD PTR [rax]
   140024fd3:	add    bh,bh
   140024fd5:	(bad)  
   140024fd6:	(bad)  
   140024fd7:	push   QWORD PTR [rdi+0xdb]
   140024fdd:	add    BYTE PTR [rax],al
   140024fdf:	add    BYTE PTR [rbx],ch
   140024fe1:	fadd   QWORD PTR [rax]
   140024fe3:	add    BYTE PTR [rcx],al
   140024fe5:	add    BYTE PTR [rax],al
   140024fe7:	add    BYTE PTR [rsp+rbx*8+0x0],al
   140024feb:	add    bh,bh
   140024fed:	(bad)  
   140024fee:	(bad)  
   140024fef:	call   QWORD PTR [rax+0x189]
   140024ff5:	add    BYTE PTR [rax],al
   140024ff7:	add    BYTE PTR [rbp+0x2000189],bl
   140024ffd:	add    BYTE PTR [rax],al
   140024fff:	add    BYTE PTR [rdi+0x189],ah
   140025005:	add    BYTE PTR [rax],al
   140025007:	add    BYTE PTR [rbp+0x3000189],bh
   14002500d:	add    BYTE PTR [rax],al
   14002500f:	add    dl,bl
   140025011:	mov    DWORD PTR [rcx],eax
   140025013:	add    BYTE PTR [rax],al
   140025015:	add    BYTE PTR [rax],al
   140025017:	add    BYTE PTR [rcx],bl
   140025019:	or     al,BYTE PTR [rdx]
   14002501b:	add    BYTE PTR [rdx],cl
   14002501d:	xor    al,BYTE PTR [rsi]
   14002501f:	push   rax
   140025020:	(bad)  
   140025021:	add    DWORD PTR ds:[rax],eax
   140025024:	xor    ah,ch
   140025026:	add    DWORD PTR [rax],eax
   140025028:	sbb    DWORD PTR [rdx],esp
   14002502a:	or     al,BYTE PTR [rax]
   14002502c:	and    dh,BYTE PTR [rbp+rcx*1+0x0]
   140025030:	sbb    eax,0x18000c64
   140025035:	xor    al,0xb
   140025037:	add    BYTE PTR [rdx],cl
   140025039:	push   rdx
   14002503a:	(bad)  
   14002503b:	loopne 0x140025041
   14002503d:	rol    BYTE PTR [rdx],1
   14002503f:	ror    dh,0x3e
   140025042:	add    DWORD PTR [rax],eax
   140025044:	xor    ah,ch
   140025046:	add    DWORD PTR [rax],eax
   140025048:	add    DWORD PTR [rax],eax
   14002504a:	add    BYTE PTR [rax],al
   14002504c:	add    DWORD PTR [rax],eax
   14002504e:	add    BYTE PTR [rax],al
   140025050:	add    al,BYTE PTR [rax]
   140025052:	add    BYTE PTR [rax],al
   140025054:	add    DWORD PTR [rax],eax
   140025056:	add    BYTE PTR [rax],al
   140025058:	test   BYTE PTR [rax+0x2],dl
   14002505b:	add    BYTE PTR [rax],al
   14002505d:	add    BYTE PTR [rax],al
   14002505f:	add    BYTE PTR [rdx],al
   140025061:	add    BYTE PTR [rax],al
   140025063:	add    BYTE PTR [rbx],al
   140025065:	add    BYTE PTR [rax],al
   140025067:	add    BYTE PTR [rcx],al
   140025069:	add    BYTE PTR [rax],al
   14002506b:	add    BYTE PTR [rax+0x50],dh
   14002506e:	add    al,BYTE PTR [rax]
   140025070:	add    BYTE PTR [rax],al
	...
   14002507b:	add    BYTE PTR [rax],dl
   14002507d:	mov    al,BYTE PTR [rcx]
   14002507f:	add    BYTE PTR [rax],bh
   140025081:	add    BYTE PTR [rax],al
   140025083:	add    BYTE PTR [rax+0x0],al
	...
   14002508e:	add    BYTE PTR [rax],al
   140025090:	lock mov DWORD PTR [rcx],eax
   140025093:	add    BYTE PTR [rax],bh
   140025095:	add    BYTE PTR [rax],al
   140025097:	add    bh,bh
   140025099:	(bad)  
   14002509a:	(bad)  
   14002509b:	inc    DWORD PTR [rax]
	...
   1400250ad:	add    BYTE PTR [rax],al
   1400250af:	add    bh,bh
   1400250b1:	(bad)  
   1400250b2:	(bad)  
   1400250b3:	inc    DWORD PTR [rax]
   1400250b5:	add    BYTE PTR [rax],al
   1400250b7:	add    al,dl
   1400250b9:	fadd   QWORD PTR [rax]
   1400250bb:	add    bh,bh
   1400250bd:	(bad)  
   1400250be:	(bad)  
   1400250bf:	call   FWORD PTR [rdi-0x23]
   1400250c2:	add    BYTE PTR [rax],al
   1400250c4:	add    BYTE PTR [rax],al
   1400250c6:	add    BYTE PTR [rax],al
   1400250c8:	(bad)  
   1400250c9:	fld    QWORD PTR [rax]
   1400250cb:	add    BYTE PTR [rcx],al
   1400250cd:	add    BYTE PTR [rax],al
   1400250cf:	add    bh,dh
   1400250d1:	fld    QWORD PTR [rax]
   1400250d3:	add    bh,bh
   1400250d5:	(bad)  
   1400250d6:	(bad)  
   1400250d7:	push   rax
   1400250d9:	mov    DWORD PTR [rcx],eax
   1400250db:	add    BYTE PTR [rax],al
   1400250dd:	add    BYTE PTR [rax],al
   1400250df:	add    ch,bh
   1400250e1:	mov    DWORD PTR [rcx],eax
   1400250e3:	add    BYTE PTR [rdx],al
   1400250e5:	add    BYTE PTR [rax],al
   1400250e7:	add    BYTE PTR [rdi],al
   1400250e9:	mov    al,BYTE PTR [rcx]
   1400250eb:	add    BYTE PTR [rax],al
   1400250ed:	add    BYTE PTR [rax],al
   1400250ef:	add    BYTE PTR [rip+0x300018a],bl        # 0x14302527f
   1400250f5:	add    BYTE PTR [rax],al
   1400250f7:	add    BYTE PTR [rdx],bh
   1400250f9:	mov    al,BYTE PTR [rcx]
   1400250fb:	add    BYTE PTR [rax],al
   1400250fd:	add    BYTE PTR [rax],al
   1400250ff:	add    BYTE PTR [rcx],dl
   140025101:	xor    ecx,DWORD PTR [rdx]
   140025103:	add    BYTE PTR [rdi],ah
   140025105:	add    DWORD PTR [rip+0x1ef02000],ebp        # 0x15ef2710b
   14002510b:	loopne 0x140025129
   14002510d:	rcr    BYTE PTR [rdx],1
   14002510f:	rcr    BYTE PTR [rax],0x70
   140025112:	(bad)  
   140025113:	(bad)  
   140025114:	(bad)  
   140025115:	push   rax
   140025116:	adc    eax,0x13ece30
   14002511b:	add    BYTE PTR [rax-0x14],ah
   14002511e:	add    DWORD PTR [rax],eax
   140025120:	(bad)  
   140025121:	(bad)  
   140025122:	(bad)  
   140025123:	push   QWORD PTR [rax-0x76]
   140025126:	add    DWORD PTR [rax],eax
   140025128:	add    BYTE PTR [rax],al
   14002512a:	add    BYTE PTR [rax],al
   14002512c:	push   rax
   14002512d:	mov    al,BYTE PTR [rcx]
   14002512f:	add    BYTE PTR [rax],al
   140025131:	add    BYTE PTR [rax],al
   140025133:	add    BYTE PTR [rax+0x200018a],ah
   140025139:	add    BYTE PTR [rax],al
   14002513b:	add    al,al
   14002513d:	mov    al,BYTE PTR [rcx]
   14002513f:	add    BYTE PTR [rbx],al
   140025141:	add    BYTE PTR [rax],al
   140025143:	add    al,ah
   140025145:	mov    al,BYTE PTR [rcx]
   140025147:	add    BYTE PTR [rax+rax*1],al
   14002514a:	add    BYTE PTR [rax],al
   14002514c:	add    BYTE PTR [rbx+0x50001],cl
   140025152:	add    BYTE PTR [rax],al
   140025154:	and    BYTE PTR [rbx+0x60001],cl
   14002515a:	add    BYTE PTR [rax],al
   14002515c:	rex mov eax,DWORD PTR [rcx]
   14002515f:	add    BYTE PTR [rip+0x60000000],al        # 0x1a0025165
   140025165:	mov    eax,DWORD PTR [rcx]
   140025167:	add    BYTE PTR [rax],cl
   140025169:	add    BYTE PTR [rax],al
   14002516b:	add    BYTE PTR [rax+0x500018b],al
   140025171:	add    BYTE PTR [rax],al
   140025173:	add    BYTE PTR [rax+0x500018b],ah
   140025179:	add    BYTE PTR [rax],al
   14002517b:	add    al,dl
   14002517d:	mov    eax,DWORD PTR [rcx]
   14002517f:	add    BYTE PTR [rbx],cl
   140025181:	add    BYTE PTR [rax],al
   140025183:	add    al,dh
   140025185:	mov    eax,DWORD PTR [rcx]
   140025187:	add    BYTE PTR [rax+rax*1],cl
   14002518a:	add    BYTE PTR [rax],al
   14002518c:	adc    BYTE PTR [rcx+rax*1+0xd00],cl
   140025193:	add    BYTE PTR [rax],dh
   140025195:	mov    WORD PTR [rcx],es
   140025197:	add    BYTE PTR [rip+0x50000000],al        # 0x19002519d
   14002519d:	mov    WORD PTR [rcx],es
   14002519f:	add    BYTE PTR [rdi],cl
   1400251a1:	add    BYTE PTR [rax],al
   1400251a3:	add    BYTE PTR [rax-0x74],dh
   1400251a6:	add    DWORD PTR [rax],eax
   1400251a8:	adc    BYTE PTR [rax],al
   1400251aa:	add    BYTE PTR [rax],al
   1400251ac:	nop
   1400251ad:	mov    WORD PTR [rcx],es
   1400251af:	add    BYTE PTR [rcx],dl
   1400251b1:	add    BYTE PTR [rax],al
   1400251b3:	add    BYTE PTR [rax+0x1200018c],dh
   1400251b9:	add    BYTE PTR [rax],al
   1400251bb:	add    al,dl
   1400251bd:	mov    WORD PTR [rcx],es
   1400251bf:	add    BYTE PTR [rbx],dl
   1400251c1:	add    BYTE PTR [rax],al
   1400251c3:	add    al,dh
   1400251c5:	mov    WORD PTR [rcx],es
   1400251c7:	add    BYTE PTR [rax+rax*1],dl
   1400251ca:	add    BYTE PTR [rax],al
   1400251cc:	adc    BYTE PTR [rbp-0x210fffff],cl
   1400251d2:	add    BYTE PTR [rax],al
   1400251d4:	(bad)  
   1400251d5:	(bad)  
   1400251d6:	(bad)  
   1400251d7:	jmp    FWORD PTR [rcx]
   1400251d9:	fild   WORD PTR [rax]
   1400251db:	add    BYTE PTR [rax],al
   1400251dd:	add    BYTE PTR [rax],al
   1400251df:	add    BYTE PTR [rdx-0x21],al
   1400251e2:	add    BYTE PTR [rax],al
   1400251e4:	add    DWORD PTR [rax],eax
   1400251e6:	add    BYTE PTR [rax],al
   1400251e8:	push   rsp
   1400251e9:	fild   WORD PTR [rax]
   1400251eb:	add    BYTE PTR [rax],al
   1400251ed:	add    BYTE PTR [rax],al
   1400251ef:	add    BYTE PTR [rdx+0x20000df],ch
   1400251f5:	add    BYTE PTR [rax],al
   1400251f7:	add    BYTE PTR [rdi+0x30000df],ch
   1400251fd:	add    BYTE PTR [rax],al
   1400251ff:	add    BYTE PTR [rcx],ah
   140025201:	loopne 0x140025203
   140025203:	add    BYTE PTR [rax+rax*1],al
   140025206:	add    BYTE PTR [rax],al
   140025208:	ja     0x1400251ea
   14002520a:	add    BYTE PTR [rax],al
   14002520c:	add    eax,0xda000000
   140025211:	loopne 0x140025213
   140025213:	add    BYTE PTR [rsi],al
   140025215:	add    BYTE PTR [rax],al
   140025217:	add    ah,ch
   140025219:	loopne 0x14002521b
   14002521b:	add    BYTE PTR [rdi],al
   14002521d:	add    BYTE PTR [rax],al
   14002521f:	add    bh,bh
   140025221:	loopne 0x140025223
   140025223:	add    BYTE PTR [rsi],al
   140025225:	add    BYTE PTR [rax],al
   140025227:	add    BYTE PTR [rsi],cl
   140025229:	loope  0x14002522b
   14002522b:	add    BYTE PTR [rip+0x37000000],al        # 0x177025231
   140025231:	loope  0x140025233
   140025233:	add    BYTE PTR [rax],cl
   140025235:	add    BYTE PTR [rax],al
   140025237:	add    BYTE PTR [rcx-0x1f],cl
   14002523a:	add    BYTE PTR [rax],al
   14002523c:	or     DWORD PTR [rax],eax
   14002523e:	add    BYTE PTR [rax],al
   140025240:	pop    rsp
   140025241:	loope  0x140025243
   140025243:	add    BYTE PTR [rax],cl
   140025245:	add    BYTE PTR [rax],al
   140025247:	add    BYTE PTR [rbx-0x1f],ch
   14002524a:	add    BYTE PTR [rax],al
   14002524c:	add    eax,0x6000000
   140025251:	out    0x0,al
   140025253:	add    BYTE PTR [rdx],cl
   140025255:	add    BYTE PTR [rax],al
   140025257:	add    bh,bh
   140025259:	out    0x0,al
   14002525b:	add    BYTE PTR [rip+0xffffffffef000000],al        # 0x12f025261
   140025261:	(bad)  
   140025262:	add    BYTE PTR [rax],al
   140025264:	or     eax,DWORD PTR [rax]
   140025266:	add    BYTE PTR [rax],al
   140025268:	sbb    ebx,ebp
   14002526a:	add    BYTE PTR [rax],al
   14002526c:	or     al,0x0
   14002526e:	add    BYTE PTR [rax],al
   140025270:	(bad)  
   140025271:	jmp    0x140025273
   140025273:	add    BYTE PTR [rip+0x76000000],cl        # 0x1b6025279
   140025279:	jmp    0x14002527b
   14002527b:	add    BYTE PTR [rsi],cl
   14002527d:	add    BYTE PTR [rax],al
   14002527f:	add    BYTE PTR [rbx+0xd0000eb],al
   140025285:	add    BYTE PTR [rax],al
   140025287:	add    BYTE PTR [rdx+0xc0000eb],dl
   14002528d:	add    BYTE PTR [rax],al
   14002528f:	add    BYTE PTR [rcx+0xb0000eb],ah
   140025295:	add    BYTE PTR [rax],al
   140025297:	add    BYTE PTR [rax+0x50000eb],dh
   14002529d:	add    BYTE PTR [rax],al
   14002529f:	add    ch,dh
   1400252a1:	in     al,dx
   1400252a2:	add    BYTE PTR [rax],al
   1400252a4:	sldt   WORD PTR [rax]
   1400252a7:	add    BYTE PTR [rbp*8+0x100000],bl
   1400252ae:	add    BYTE PTR [rax],al
   1400252b0:	rex.XB in eax,dx
   1400252b2:	add    BYTE PTR [rax],al
   1400252b4:	adc    DWORD PTR [rax],eax
   1400252b6:	add    BYTE PTR [rax],al
   1400252b8:	test   ch,ch
   1400252ba:	add    BYTE PTR [rax],al
   1400252bc:	adc    al,BYTE PTR [rax]
   1400252be:	add    BYTE PTR [rax],al
   1400252c0:	pushf  
   1400252c1:	in     eax,dx
   1400252c2:	add    BYTE PTR [rax],al
   1400252c4:	adc    eax,DWORD PTR [rax]
   1400252c6:	add    BYTE PTR [rax],al
   1400252c8:	fucomi st,st(5)
   1400252ca:	add    BYTE PTR [rax],al
   1400252cc:	adc    al,0x0
   1400252ce:	add    BYTE PTR [rax],al
   1400252d0:	out    dx,al
   1400252d1:	in     eax,dx
   1400252d2:	add    BYTE PTR [rax],al
   1400252d4:	adc    eax,0x0
   1400252d9:	out    dx,al
   1400252da:	add    BYTE PTR [rax],al
   1400252dc:	adc    al,0x0
   1400252de:	add    BYTE PTR [rax],al
   1400252e0:	or     al,0xee
   1400252e2:	add    BYTE PTR [rax],al
   1400252e4:	adc    eax,DWORD PTR [rax]
   1400252e6:	add    BYTE PTR [rax],al
   1400252e8:	sbb    ebp,esi
   1400252ea:	add    BYTE PTR [rax],al
   1400252ec:	adc    al,BYTE PTR [rax]
   1400252ee:	add    BYTE PTR [rax],al
   1400252f0:	sub    ch,dh
   1400252f2:	add    BYTE PTR [rax],al
   1400252f4:	adc    DWORD PTR [rax],eax
   1400252f6:	add    BYTE PTR [rax],al
   1400252f8:	cmp    esi,ebp
   1400252fa:	add    BYTE PTR [rax],al
   1400252fc:	adc    BYTE PTR [rax],al
   1400252fe:	add    BYTE PTR [rax],al
   140025300:	rex.RB out dx,al
   140025302:	add    BYTE PTR [rax],al
   140025304:	sldt   WORD PTR [rax]
   140025307:	add    BYTE PTR [rcx-0x12],dl
   14002530a:	add    BYTE PTR [rax],al
   14002530c:	add    eax,0x84000000
   140025311:	out    dx,al
   140025312:	add    BYTE PTR [rax],al
   140025314:	add    al,0x0
   140025316:	add    BYTE PTR [rax],al
   140025318:	shr    dh,0x0
   14002531b:	add    BYTE PTR [rbx],al
   14002531d:	add    BYTE PTR [rax],al
   14002531f:	add    dh,ch
   140025321:	out    dx,al
   140025322:	add    BYTE PTR [rax],al
   140025324:	add    al,BYTE PTR [rax]
   140025326:	add    BYTE PTR [rax],al
   140025328:	push   rbp
   140025329:	out    dx,eax
   14002532a:	add    BYTE PTR [rax],al
   14002532c:	add    BYTE PTR [rax],al
   14002532e:	add    BYTE PTR [rax],al
   140025330:	and    DWORD PTR [rax],eax
   140025332:	add    BYTE PTR [rax],al
   140025334:	loopne 0x140025325
   140025336:	add    BYTE PTR [rax],al
   140025338:	xor    dh,al
   14002533a:	add    BYTE PTR [rax],al
   14002533c:	push   rsp
   14002533d:	push   rbx
   14002533e:	add    al,BYTE PTR [rax]
   140025340:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4075348
   140025346:	(bad)  
   140025347:	add    al,ah
   140025349:	out    dx,eax
   14002534a:	add    BYTE PTR [rax],al
   14002534c:	xor    dh,al
   14002534e:	add    BYTE PTR [rax],al
   140025350:	push   rsp
   140025351:	push   rbx
   140025352:	add    al,BYTE PTR [rax]
   140025354:	add    DWORD PTR [rdx],ecx
   140025356:	add    al,0x0
   140025358:	or     dh,BYTE PTR [rdi+rax*1]
   14002535b:	add    BYTE PTR [rdx],cl
   14002535d:	xor    al,BYTE PTR [rsi]
   14002535f:	(bad)  
   140025360:	and    DWORD PTR [rax],eax
   140025362:	add    BYTE PTR [rax],al
   140025364:	xor    al,0x0
   140025367:	add    BYTE PTR [rbp+0x200000f0],bl
   14002536d:	add    al,BYTE PTR cs:[rax]
   140025370:	and    DWORD PTR [rip+0x34050002],eax        # 0x174075378
   140025376:	add    al,0x0
   140025378:	xor    al,0x0
   14002537b:	add    BYTE PTR [rbp+0x200000f0],bl
   140025381:	add    al,BYTE PTR cs:[rax]
   140025384:	adc    DWORD PTR [rdx+rcx*1],esp
   140025387:	add    BYTE PTR [rax],bl
   140025389:	add    DWORD PTR [rbx],esp
   14002538b:	add    BYTE PTR [rcx],dl
   14002538d:	lock pavgb mm1,QWORD PTR [rip+0x9c00bd0]        # 0x149c25f65
   140025395:	jo     0x14002539f
   140025397:	(bad)  
   140025398:	(bad)  
   140025399:	push   rax
   14002539a:	(bad)  
   14002539b:	xor    dh,cl
   14002539d:	add    DWORD PTR ds:[rax],eax
   1400253a0:	movabs al,ds:0x30ffffffff0001ec
   1400253a9:	lea    eax,[rcx]
   1400253ab:	add    BYTE PTR [rax],al
   1400253ad:	add    BYTE PTR [rax],al
   1400253af:	add    BYTE PTR [rax-0x73],dl
   1400253b2:	add    DWORD PTR [rax],eax
   1400253b4:	add    DWORD PTR [rax],eax
   1400253b6:	add    BYTE PTR [rax],al
   1400253b8:	jo     0x140025347
   1400253ba:	add    DWORD PTR [rax],eax
   1400253bc:	add    al,BYTE PTR [rax]
   1400253be:	add    BYTE PTR [rax],al
   1400253c0:	nop
   1400253c1:	lea    eax,[rcx]
   1400253c3:	add    BYTE PTR [rbx],al
   1400253c5:	add    BYTE PTR [rax],al
   1400253c7:	add    BYTE PTR [rax+0x400018d],dh
   1400253cd:	add    BYTE PTR [rax],al
   1400253cf:	add    al,dl
   1400253d1:	lea    eax,[rcx]
   1400253d3:	add    BYTE PTR [rip+0xfffffffff0000000],al        # 0x1300253d9
   1400253d9:	lea    eax,[rcx]
   1400253db:	add    BYTE PTR [rsi],al
   1400253dd:	add    BYTE PTR [rax],al
   1400253df:	add    BYTE PTR [rax],dl
   1400253e1:	mov    es,WORD PTR [rcx]
   1400253e3:	add    BYTE PTR [rdx],al
   1400253e5:	add    BYTE PTR [rax],al
   1400253e7:	add    BYTE PTR [rax],dh
   1400253e9:	mov    es,WORD PTR [rcx]
   1400253eb:	add    BYTE PTR [rdx],al
   1400253ed:	add    BYTE PTR [rax],al
   1400253ef:	add    BYTE PTR [rax-0x72],dl
   1400253f2:	add    DWORD PTR [rax],eax
   1400253f4:	or     DWORD PTR [rax],eax
   1400253f6:	add    BYTE PTR [rax],al
   1400253f8:	jo     0x140025388
   1400253fa:	add    DWORD PTR [rax],eax
   1400253fc:	or     al,BYTE PTR [rax]
   1400253fe:	add    BYTE PTR [rax],al
   140025400:	nop
   140025401:	mov    es,WORD PTR [rcx]
   140025403:	add    BYTE PTR [rbx],cl
   140025405:	add    BYTE PTR [rax],al
   140025407:	add    BYTE PTR [rax+0x200018e],dh
   14002540d:	add    BYTE PTR [rax],al
   14002540f:	add    al,dl
   140025411:	mov    es,WORD PTR [rcx]
   140025413:	add    BYTE PTR [rip+0xfffffffff0000000],cl        # 0x130025419
   140025419:	mov    es,WORD PTR [rcx]
   14002541b:	add    BYTE PTR [rsi],cl
   14002541d:	add    BYTE PTR [rax],al
   14002541f:	add    BYTE PTR [rax],dl
   140025421:	pop    QWORD PTR [rcx]
   140025423:	add    BYTE PTR [rdi],cl
   140025425:	add    BYTE PTR [rax],al
   140025427:	add    BYTE PTR [rax],dh
   140025429:	pop    QWORD PTR [rcx]
   14002542b:	add    BYTE PTR [rax],dl
   14002542d:	add    BYTE PTR [rax],al
   14002542f:	add    BYTE PTR [rax-0x71],dl
   140025432:	add    DWORD PTR [rax],eax
   140025434:	add    al,BYTE PTR [rax]
   140025436:	add    BYTE PTR [rax],al
   140025438:	jo     0x1400253c9
   14002543a:	add    DWORD PTR [rax],eax
   14002543c:	adc    al,BYTE PTR [rax]
   14002543e:	add    BYTE PTR [rax],al
   140025440:	nop
   140025441:	pop    QWORD PTR [rcx]
   140025443:	add    BYTE PTR [rbx],dl
   140025445:	add    BYTE PTR [rax],al
   140025447:	add    BYTE PTR [rax+0x1400018f],dh
   14002544d:	add    BYTE PTR [rax],al
   14002544f:	add    al,dl
   140025451:	pop    QWORD PTR [rcx]
   140025453:	add    BYTE PTR [rdx],al
   140025455:	add    BYTE PTR [rax],al
   140025457:	add    al,dh
   140025459:	pop    QWORD PTR [rcx]
   14002545b:	add    BYTE PTR [rsi],dl
   14002545d:	add    BYTE PTR [rax],al
   14002545f:	add    BYTE PTR [rax],dl
   140025461:	nop
   140025462:	add    DWORD PTR [rax],eax
   140025464:	(bad)  
   140025465:	add    BYTE PTR [rax],al
   140025467:	add    BYTE PTR [rax],dh
   140025469:	nop
   14002546a:	add    DWORD PTR [rax],eax
   14002546c:	sbb    BYTE PTR [rax],al
   14002546e:	add    BYTE PTR [rax],al
   140025470:	push   rax
   140025471:	nop
   140025472:	add    DWORD PTR [rax],eax
   140025474:	sbb    BYTE PTR [rax],al
   140025476:	add    BYTE PTR [rax],al
   140025478:	jo     0x14002540a
   14002547a:	add    DWORD PTR [rax],eax
   14002547c:	add    al,BYTE PTR [rax]
   14002547e:	add    BYTE PTR [rax],al
   140025480:	nop
   140025481:	nop
   140025482:	add    DWORD PTR [rax],eax
   140025484:	sbb    eax,DWORD PTR [rax]
   140025486:	add    BYTE PTR [rax],al
   140025488:	mov    al,0x90
   14002548a:	add    DWORD PTR [rax],eax
   14002548c:	sbb    al,0x0
   14002548e:	add    BYTE PTR [rax],al
   140025490:	rcl    BYTE PTR [rax+0x1d0001],1
   140025496:	add    BYTE PTR [rax],al
   140025498:	lock nop
   14002549a:	add    DWORD PTR [rax],eax
   14002549c:	loopne 0x14002548e
   14002549e:	add    BYTE PTR [rax],al
   1400254a0:	(bad)  
   1400254a1:	(bad)  
   1400254a2:	(bad)  
   1400254a3:	call   FWORD PTR [rcx+rsi*8]
   1400254a6:	add    BYTE PTR [rax],al
   1400254a8:	add    BYTE PTR [rax],al
   1400254aa:	add    BYTE PTR [rax],al
   1400254ac:	and    ecx,esi
   1400254ae:	add    BYTE PTR [rax],al
   1400254b0:	add    DWORD PTR [rax],eax
   1400254b2:	add    BYTE PTR [rax],al
   1400254b4:	sub    al,0xf1
   1400254b6:	add    BYTE PTR [rax],al
   1400254b8:	add    al,BYTE PTR [rax]
   1400254ba:	add    BYTE PTR [rax],al
   1400254bc:	rex.WXB
   1400254bd:	repnz add BYTE PTR [rax],al
   1400254c0:	add    eax,DWORD PTR [rax]
   1400254c2:	add    BYTE PTR [rax],al
   1400254c4:	repnz add BYTE PTR gs:[rax],al
   1400254c8:	add    al,0x0
   1400254ca:	add    BYTE PTR [rax],al
   1400254cc:	xchg   ebp,eax
   1400254cd:	repnz add BYTE PTR [rax],al
   1400254d0:	add    eax,0xac000000
   1400254d5:	repnz add BYTE PTR [rax],al
   1400254d8:	(bad)  
   1400254d9:	add    BYTE PTR [rax],al
   1400254db:	add    cl,ah
   1400254dd:	repnz add BYTE PTR [rax],al
   1400254e0:	(bad)  
   1400254e1:	add    BYTE PTR [rax],al
   1400254e3:	add    BYTE PTR [rdi+0x60000f3],cl
   1400254e9:	add    BYTE PTR [rax],al
   1400254eb:	add    BYTE PTR [rsi+0x50000f3],bl
   1400254f1:	add    BYTE PTR [rax],al
   1400254f3:	add    BYTE PTR [rdx+0x40000f3],ch
   1400254f9:	add    BYTE PTR [rax],al
   1400254fb:	add    BYTE PTR [rsi+0x30000f3],dh
   140025501:	add    BYTE PTR [rax],al
   140025503:	add    ch,al
   140025505:	repz add BYTE PTR [rax],al
   140025508:	add    al,BYTE PTR [rax]
   14002550a:	add    BYTE PTR [rax],al
   14002550c:	fdiv   st,st(4)
   14002550e:	add    BYTE PTR [rax],al
   140025510:	or     BYTE PTR [rax],al
   140025512:	add    BYTE PTR [rax],al
   140025514:	(bad)  
   140025515:	cmc    
   140025516:	add    BYTE PTR [rax],al
   140025518:	add    al,BYTE PTR [rax]
   14002551a:	add    BYTE PTR [rax],al
   14002551c:	cmp    al,0xf7
   14002551e:	add    BYTE PTR [rax],al
   140025520:	or     al,0x0
   140025522:	add    BYTE PTR [rax],al
   140025524:	test   QWORD PTR [rax],0xb00
   14002552b:	add    bh,al
   14002552d:	test   DWORD PTR [rax],0xa00
   140025533:	add    bl,dl
   140025535:	test   DWORD PTR [rax],0x900
   14002553b:	add    bh,bl
   14002553d:	test   DWORD PTR [rax],0x200
   140025543:	add    BYTE PTR [rdi-0x8],bh
   140025546:	add    BYTE PTR [rax],al
   140025548:	or     eax,0x17000000
   14002554d:	stc    
   14002554e:	add    BYTE PTR [rax],al
   140025550:	adc    DWORD PTR [rax],eax
   140025552:	add    BYTE PTR [rax],al
   140025554:	and    edi,ecx
   140025556:	add    BYTE PTR [rax],al
   140025558:	adc    BYTE PTR [rax],al
   14002555a:	add    BYTE PTR [rax],al
   14002555c:	movabs ds:0xaf0000000f0000f9,eax
   140025565:	stc    
   140025566:	add    BYTE PTR [rax],al
   140025568:	(bad)  
   140025569:	add    BYTE PTR [rax],al
   14002556b:	add    BYTE PTR [rbx+0xd0000f9],bh
   140025571:	add    BYTE PTR [rax],al
   140025573:	add    BYTE PTR [rbp-0x6],ch
   140025576:	add    BYTE PTR [rax],al
   140025578:	add    al,BYTE PTR [rax]
   14002557a:	add    BYTE PTR [rax],al
   14002557c:	or     edi,ebx
   14002557e:	add    BYTE PTR [rax],al
   140025580:	adc    eax,0x16000000
   140025585:	sti    
   140025586:	add    BYTE PTR [rax],al
   140025588:	adc    al,0x0
   14002558a:	add    BYTE PTR [rax],al
   14002558c:	mov    bl,bh
   14002558e:	add    BYTE PTR [rax],al
   140025590:	adc    eax,DWORD PTR [rax]
   140025592:	add    BYTE PTR [rax],al
   140025594:	xchg   ebx,eax
   140025595:	sti    
   140025596:	add    BYTE PTR [rax],al
   140025598:	adc    al,BYTE PTR [rax]
   14002559a:	add    BYTE PTR [rax],al
   14002559c:	sahf   
   14002559d:	sti    
   14002559e:	add    BYTE PTR [rax],al
   1400255a0:	add    al,BYTE PTR [rax]
   1400255a2:	add    BYTE PTR [rax],al
   1400255a4:	jbe    0x1400255a2
   1400255a6:	add    BYTE PTR [rax],al
   1400255a8:	(bad)  
   1400255a9:	add    BYTE PTR [rax],al
   1400255ab:	add    BYTE PTR [rcx+0x170000fc],cl
   1400255b1:	add    BYTE PTR [rax],al
   1400255b3:	add    ah,bl
   1400255b5:	cld    
   1400255b6:	add    BYTE PTR [rax],al
   1400255b8:	sbb    BYTE PTR [rax],al
   1400255ba:	add    BYTE PTR [rax],al
   1400255bc:	call   0x1590256bd
   1400255c1:	add    BYTE PTR [rax],al
   1400255c3:	add    bl,dh
   1400255c5:	cld    
   1400255c6:	add    BYTE PTR [rax],al
   1400255c8:	sbb    al,BYTE PTR [rax]
   1400255ca:	add    BYTE PTR [rax],al
   1400255cc:	(bad)  
   1400255cd:	std    
   1400255ce:	add    BYTE PTR [rax],al
   1400255d0:	sbb    BYTE PTR [rax],al
   1400255d2:	add    BYTE PTR [rax],al
   1400255d4:	outs   dx,DWORD PTR ds:[rsi]
   1400255d5:	std    
   1400255d6:	add    BYTE PTR [rax],al
   1400255d8:	(bad)  
   1400255d9:	add    BYTE PTR [rax],al
   1400255db:	add    BYTE PTR [rbx-0x3],bh
   1400255de:	add    BYTE PTR [rax],al
   1400255e0:	(bad)  
   1400255e1:	add    BYTE PTR [rax],al
   1400255e3:	add    BYTE PTR [rcx+0x1e0000fd],dh
   1400255e9:	add    BYTE PTR [rax],al
   1400255eb:	add    al,al
   1400255ed:	std    
   1400255ee:	add    BYTE PTR [rax],al
   1400255f0:	sbb    eax,0x2f000000
   1400255f5:	inc    BYTE PTR [rax]
   1400255f7:	add    BYTE PTR [rax+rax*1],bl
   1400255fa:	add    BYTE PTR [rax],al
   1400255fc:	inc    BYTE PTR ds:[rax]
   1400255ff:	add    BYTE PTR [rbx],bl
   140025601:	add    BYTE PTR [rax],al
   140025603:	add    BYTE PTR [rbp-0x2],cl
   140025606:	add    BYTE PTR [rax],al
   140025608:	add    al,BYTE PTR [rax]
   14002560a:	add    BYTE PTR [rax],al
   14002560c:	mov    ?,esi
   14002560e:	add    BYTE PTR [rax],al
   140025610:	add    DWORD PTR [rax],eax
   140025612:	add    BYTE PTR [rax],al
   140025614:	out    dx,al
   140025615:	inc    BYTE PTR [rax]
   140025617:	add    BYTE PTR [rax],al
   140025619:	add    BYTE PTR [rax],al
   14002561b:	add    BYTE PTR [rbp-0x1],dl
   14002561e:	add    BYTE PTR [rax],al
   140025620:	(bad)  
   140025621:	(bad)  
   140025622:	(bad)  
   140025623:	call   QWORD PTR [rcx]
   140025625:	sbb    BYTE PTR [rax+rax*1],al
   140025628:	sbb    BYTE PTR [rcx+rcx*1],dh
   14002562b:	add    BYTE PTR [rdx],cl
   14002562d:	push   rdx
   14002562e:	(bad)  
   14002562f:	jo     0x1400255ff
   140025631:	add    DWORD PTR ds:[rax],eax
   140025634:	enter  0x1ec,0x0
   140025638:	sar    bh,1
   14002563a:	add    BYTE PTR [rax],al
   14002563c:	(bad)  
   14002563d:	(bad)  
   14002563e:	(bad)  
   14002563f:	(bad)  
   140025640:	out    dx,al
   140025641:	inc    DWORD PTR [rax]
   140025643:	add    BYTE PTR [rax],al
   140025645:	add    BYTE PTR [rax],al
   140025647:	add    BYTE PTR [rcx],al
   140025649:	clts   
   14002564b:	add    BYTE PTR [rdi],cl
   14002564d:	or     BYTE PTR fs:[rax],al
   140025650:	sysenter 
   140025652:	(bad)  
   140025653:	add    BYTE PTR [rdi],cl
   140025655:	xor    cl,BYTE PTR [rbx]
   140025657:	jo     0x14002566a
   140025659:	adc    eax,0xb20c0004
   14002565e:	or     BYTE PTR [rax+0x7],dh
   140025661:	(bad)  
   140025662:	(bad)  
   140025663:	xor    dh,cl
   140025665:	add    DWORD PTR ds:[rax],eax
   140025668:	lock in al,dx
   14002566a:	add    DWORD PTR [rax],eax
   14002566c:	(bad)  
   14002566d:	(bad)  
   14002566e:	(bad)  
   14002566f:	jmp    rax
   140025671:	xchg   ecx,eax
   140025672:	add    DWORD PTR [rax],eax
   140025674:	add    BYTE PTR [rax],al
   140025676:	add    BYTE PTR [rax],al
   140025678:	rex xchg ecx,eax
   14002567a:	add    DWORD PTR [rax],eax
   14002567c:	add    DWORD PTR [rax],eax
   14002567e:	add    BYTE PTR [rax],al
   140025680:	(bad)  
   140025681:	xchg   ecx,eax
   140025682:	add    DWORD PTR [rax],eax
   140025684:	add    al,BYTE PTR [rax]
   140025686:	add    BYTE PTR [rax],al
   140025688:	adc    BYTE PTR [rcx+0x30001],0x0
   14002568f:	add    BYTE PTR [rax+0x4000191],ah
   140025695:	add    BYTE PTR [rax],al
   140025697:	add    al,al
   140025699:	xchg   ecx,eax
   14002569a:	add    DWORD PTR [rax],eax
   14002569c:	add    DWORD PTR [rax],eax
   14002569e:	add    BYTE PTR [rax],al
   1400256a0:	adc    BYTE PTR [rdx+0x800001],dl
   1400256a6:	add    DWORD PTR [rax],eax
   1400256a8:	(bad)  
   1400256a9:	(bad)  
   1400256aa:	(bad)  
   1400256ab:	jmp    FWORD PTR [rdi+0x1000100]
   1400256b1:	add    BYTE PTR [rax],al
   1400256b3:	add    al,bl
   1400256b5:	add    BYTE PTR [rcx],al
   1400256b7:	add    BYTE PTR [rdx],al
   1400256b9:	add    BYTE PTR [rax],al
   1400256bb:	add    cl,ch
   1400256bd:	add    BYTE PTR [rcx],al
   1400256bf:	add    BYTE PTR [rbx],al
   1400256c1:	add    BYTE PTR [rax],al
   1400256c3:	add    dl,bh
   1400256c5:	add    BYTE PTR [rcx],al
   1400256c7:	add    BYTE PTR [rax+rax*1],al
   1400256ca:	add    BYTE PTR [rax],al
   1400256cc:	(bad)  
   1400256cd:	add    DWORD PTR [rcx],eax
   1400256cf:	add    BYTE PTR [rip+0x44000000],al        # 0x1840256d5
   1400256d5:	add    DWORD PTR [rcx],eax
   1400256d7:	add    BYTE PTR [rax+rax*1],al
   1400256da:	add    BYTE PTR [rax],al
   1400256dc:	push   rbx
   1400256dd:	add    DWORD PTR [rcx],eax
   1400256df:	add    BYTE PTR [rbx],al
   1400256e1:	add    BYTE PTR [rax],al
   1400256e3:	add    BYTE PTR [rdi+0x1],bl
   1400256e6:	add    DWORD PTR [rax],eax
   1400256e8:	add    al,BYTE PTR [rax]
   1400256ea:	add    BYTE PTR [rax],al
   1400256ec:	imul   eax,DWORD PTR [rcx],0x1
   1400256ef:	add    BYTE PTR [rcx],al
   1400256f1:	add    BYTE PTR [rax],al
   1400256f3:	add    BYTE PTR [rdx+0x101],cl
   1400256f9:	add    BYTE PTR [rax],al
   1400256fb:	add    BYTE PTR [rdx+0x1000101],bl
   140025701:	add    BYTE PTR [rax],al
   140025703:	add    BYTE PTR [rbx+0x6000101],ch
   140025709:	add    BYTE PTR [rax],al
   14002570b:	add    ah,al
   14002570d:	add    DWORD PTR [rcx],eax
   14002570f:	add    BYTE PTR [rcx],al
   140025711:	add    BYTE PTR [rax],al
   140025713:	add    al,dl
   140025715:	add    DWORD PTR [rcx],eax
   140025717:	add    BYTE PTR [rax],al
   140025719:	add    BYTE PTR [rax],al
   14002571b:	add    BYTE PTR [rcx],al
   14002571d:	sbb    al,0xc
   14002571f:	add    BYTE PTR [rsp+riz*2],bl
   140025722:	(bad)  
   140025723:	add    BYTE PTR [rsp+rdx*2],bl
   140025726:	or     eax,0xc341c00
   14002572b:	add    BYTE PTR [rdx+rdx*2],bl
   14002572e:	sbb    al,dh
   140025730:	(bad)  
   140025731:	loopne 0x140025747
   140025733:	rcl    BYTE PTR [rdx],1
   140025735:	rcl    BYTE PTR [rax],0x70
   140025738:	sbb    DWORD PTR [rcx],edi
   14002573a:	or     eax,DWORD PTR [rax]
   14002573c:	(bad)  
   14002573d:	xor    al,0x84
   14002573f:	add    BYTE PTR [rbx],dl
   140025741:	add    DWORD PTR [rdx+0x0],edi
   140025744:	or     al,0xf0
   140025746:	or     ah,al
   140025748:	or     al,dl
   14002574a:	(bad)  
   14002574b:	rol    BYTE PTR [rax+rsi*2],0x3
   14002574f:	(bad)  
   140025750:	add    dl,BYTE PTR [rax+0x0]
   140025753:	add    BYTE PTR [rax+0x3f],dl
   140025756:	add    DWORD PTR [rax],eax
   140025758:	cmp    ch,ch
   14002575a:	add    DWORD PTR [rax],eax
   14002575c:	ret    0x3
   14002575f:	add    bh,bh
   140025761:	(bad)  
   140025762:	(bad)  
   140025763:	call   QWORD PTR [rax-0x6e]
   140025766:	add    DWORD PTR [rax],eax
   140025768:	add    BYTE PTR [rax],al
   14002576a:	add    BYTE PTR [rax],al
   14002576c:	xor    BYTE PTR [rdx+0x10001],dl
   140025772:	add    BYTE PTR [rax],al
   140025774:	adc    BYTE PTR [rdx+0x20001],0x0
   14002577b:	add    BYTE PTR [rax+0x3000192],ah
   140025781:	add    BYTE PTR [rax],al
   140025783:	add    al,al
   140025785:	xchg   edx,eax
   140025786:	add    DWORD PTR [rax],eax
   140025788:	add    DWORD PTR [rax],eax
   14002578a:	add    BYTE PTR [rax],al
   14002578c:	loopne 0x140025720
   14002578e:	add    DWORD PTR [rax],eax
   140025790:	add    eax,0x0
   140025795:	xchg   ebx,eax
   140025796:	add    DWORD PTR [rax],eax
   140025798:	add    DWORD PTR [rax],eax
   14002579a:	add    BYTE PTR [rax],al
   14002579c:	add    BYTE PTR [rbx+0x70001],dl
   1400257a2:	add    BYTE PTR [rax],al
   1400257a4:	and    BYTE PTR [rbx+0x80001],dl
   1400257aa:	add    BYTE PTR [rax],al
   1400257ac:	rex xchg ebx,eax
   1400257ae:	add    DWORD PTR [rax],eax
   1400257b0:	or     DWORD PTR [rax],eax
   1400257b2:	add    BYTE PTR [rax],al
   1400257b4:	(bad)  
   1400257b5:	xchg   ebx,eax
   1400257b6:	add    DWORD PTR [rax],eax
   1400257b8:	or     al,BYTE PTR [rax]
   1400257ba:	add    BYTE PTR [rax],al
   1400257bc:	adc    BYTE PTR [rbx+0x90001],0x0
   1400257c3:	add    BYTE PTR [rax+0x8000193],al
   1400257c9:	add    BYTE PTR [rax],al
   1400257cb:	add    BYTE PTR [rax+0xd000193],al
   1400257d1:	add    BYTE PTR [rax],al
   1400257d3:	add    BYTE PTR [rax+0xd000193],ah
   1400257d9:	add    BYTE PTR [rax],al
   1400257db:	add    al,dl
   1400257dd:	xchg   ebx,eax
   1400257de:	add    DWORD PTR [rax],eax
   1400257e0:	sldt   WORD PTR [rax]
   1400257e3:	add    al,dh
   1400257e5:	xchg   ebx,eax
   1400257e6:	add    DWORD PTR [rax],eax
   1400257e8:	or     eax,0xf0000000
   1400257ed:	xchg   ebx,eax
   1400257ee:	add    DWORD PTR [rax],eax
   1400257f0:	adc    DWORD PTR [rax],eax
   1400257f2:	add    BYTE PTR [rax],al
   1400257f4:	adc    BYTE PTR [rcx+rax*1+0x1100],dl
   1400257fb:	add    BYTE PTR [rax],dh
   1400257fd:	xchg   esp,eax
   1400257fe:	add    DWORD PTR [rax],eax
   140025800:	adc    eax,DWORD PTR [rax]
   140025802:	add    BYTE PTR [rax],al
   140025804:	push   rax
   140025805:	xchg   esp,eax
   140025806:	add    DWORD PTR [rax],eax
   140025808:	adc    al,0x0
   14002580a:	add    BYTE PTR [rax],al
   14002580c:	jo     0x1400257a2
   14002580e:	add    DWORD PTR [rax],eax
   140025810:	or     eax,0x90000000
   140025815:	xchg   esp,eax
   140025816:	add    DWORD PTR [rax],eax
   140025818:	or     eax,0xc0000000
   14002581d:	xchg   esp,eax
   14002581e:	add    DWORD PTR [rax],eax
   140025820:	(bad)  
   140025821:	add    BYTE PTR [rax],al
   140025823:	add    al,ah
   140025825:	xchg   esp,eax
   140025826:	add    DWORD PTR [rax],eax
   140025828:	or     eax,0xe0000000
   14002582d:	xchg   esp,eax
   14002582e:	add    DWORD PTR [rax],eax
   140025830:	sbb    DWORD PTR [rax],eax
   140025832:	add    BYTE PTR [rax],al
   140025834:	add    BYTE PTR [rbp+0x1a0001],dl
   14002583a:	add    BYTE PTR [rax],al
   14002583c:	and    BYTE PTR [rbp+0x70001],dl
   140025842:	add    BYTE PTR [rax],al
   140025844:	rex xchg ebp,eax
   140025846:	add    DWORD PTR [rax],eax
   140025848:	sbb    al,0x0
   14002584a:	add    BYTE PTR [rax],al
   14002584c:	(bad)  
   14002584d:	xchg   ebp,eax
   14002584e:	add    DWORD PTR [rax],eax
   140025850:	sbb    eax,0x80000000
   140025855:	xchg   ebp,eax
   140025856:	add    DWORD PTR [rax],eax
   140025858:	(bad)  
   140025859:	add    BYTE PTR [rax],al
   14002585b:	add    BYTE PTR [rax+0x1f000195],ah
   140025861:	add    BYTE PTR [rax],al
   140025863:	add    al,al
   140025865:	xchg   ebp,eax
   140025866:	add    DWORD PTR [rax],eax
   140025868:	and    BYTE PTR [rax],al
   14002586a:	add    BYTE PTR [rax],al
   14002586c:	loopne 0x140025803
   14002586e:	add    DWORD PTR [rax],eax
   140025870:	(bad)  
   140025871:	add    BYTE PTR [rax],al
   140025873:	add    BYTE PTR [rax],al
   140025875:	xchg   esi,eax
   140025876:	add    DWORD PTR [rax],eax
   140025878:	and    al,BYTE PTR [rax]
   14002587a:	add    BYTE PTR [rax],al
   14002587c:	and    BYTE PTR [rsi+0x70001],dl
   140025882:	add    BYTE PTR [rax],al
   140025884:	rex xchg esi,eax
   140025886:	add    DWORD PTR [rax],eax
   140025888:	and    al,0x0
   14002588a:	add    BYTE PTR [rax],al
   14002588c:	(bad)  
   14002588d:	xchg   esi,eax
   14002588e:	add    DWORD PTR [rax],eax
   140025890:	(bad)  
   140025891:	add    BYTE PTR [rax],al
   140025893:	add    BYTE PTR [rax+0x26000196],al
   140025899:	add    BYTE PTR [rax],al
   14002589b:	add    BYTE PTR [rax+0x7000196],ah
   1400258a1:	add    BYTE PTR [rax],al
   1400258a3:	add    al,al
   1400258a5:	xchg   esi,eax
   1400258a6:	add    DWORD PTR [rax],eax
   1400258a8:	sub    BYTE PTR [rax],al
   1400258aa:	add    BYTE PTR [rax],al
   1400258ac:	loopne 0x140025844
   1400258ae:	add    DWORD PTR [rax],eax
   1400258b0:	(bad)  
   1400258b1:	add    BYTE PTR [rax],al
   1400258b3:	add    BYTE PTR [rax],al
   1400258b5:	xchg   edi,eax
   1400258b6:	add    DWORD PTR [rax],eax
   1400258b8:	sub    al,BYTE PTR [rax]
   1400258ba:	add    BYTE PTR [rax],al
   1400258bc:	and    BYTE PTR [rdi+0x2b0001],dl
   1400258c2:	add    BYTE PTR [rax],al
   1400258c4:	rex xchg edi,eax
   1400258c6:	add    DWORD PTR [rax],eax
   1400258c8:	sub    al,0x0
   1400258ca:	add    BYTE PTR [rax],al
   1400258cc:	jo     0x140025865
   1400258ce:	add    DWORD PTR [rax],eax
   1400258d0:	sub    eax,0xa0000000
   1400258d5:	xchg   edi,eax
   1400258d6:	add    DWORD PTR [rax],eax
   1400258d8:	sub    eax,DWORD PTR [rax]
   1400258da:	add    BYTE PTR [rax],al
   1400258dc:	rcl    BYTE PTR [rdi+0x2f0001],1
   1400258e2:	add    BYTE PTR [rax],al
   1400258e4:	lock xchg edi,eax
   1400258e6:	add    DWORD PTR [rax],eax
   1400258e8:	xor    BYTE PTR [rax],al
   1400258ea:	add    BYTE PTR [rax],al
   1400258ec:	adc    BYTE PTR [rax+0x300001],bl
   1400258f2:	add    BYTE PTR [rax],al
   1400258f4:	xor    BYTE PTR [rax+0x320001],bl
   1400258fa:	add    BYTE PTR [rax],al
   1400258fc:	push   rax
   1400258fd:	cwde   
   1400258fe:	add    DWORD PTR [rax],eax
   140025900:	xor    BYTE PTR [rax],al
   140025902:	add    BYTE PTR [rax],al
   140025904:	jo     0x14002589e
   140025906:	add    DWORD PTR [rax],eax
   140025908:	xor    al,0x0
   14002590a:	add    BYTE PTR [rax],al
   14002590c:	nop
   14002590d:	cwde   
   14002590e:	add    DWORD PTR [rax],eax
   140025910:	xor    eax,0xb0000000
   140025915:	cwde   
   140025916:	add    DWORD PTR [rax],eax
   140025918:	add    BYTE PTR ss:[rax],al
   14002591b:	add    al,dl
   14002591d:	cwde   
   14002591e:	add    DWORD PTR [rax],eax
   140025920:	xor    BYTE PTR [rax],al
   140025922:	add    BYTE PTR [rax],al
   140025924:	lock cwde 
   140025926:	add    DWORD PTR [rax],eax
   140025928:	cmp    BYTE PTR [rax],al
   14002592a:	add    BYTE PTR [rax],al
   14002592c:	adc    BYTE PTR [rcx+0x390001],bl
   140025932:	add    BYTE PTR [rax],al
   140025934:	xor    BYTE PTR [rcx+0x2a0001],bl
   14002593a:	add    BYTE PTR [rax],al
   14002593c:	push   rax
   14002593d:	cdq    
   14002593e:	add    DWORD PTR [rax],eax
   140025940:	cmp    eax,DWORD PTR [rax]
   140025942:	add    BYTE PTR [rax],al
   140025944:	jo     0x1400258df
   140025946:	add    DWORD PTR [rax],eax
   140025948:	sub    al,BYTE PTR [rax]
   14002594a:	add    BYTE PTR [rax],al
   14002594c:	jo     0x1400258e7
   14002594e:	add    DWORD PTR [rax],eax
   140025950:	cmp    eax,0x90000000
   140025955:	cdq    
   140025956:	add    DWORD PTR [rax],eax
   140025958:	add    BYTE PTR ds:[rax],al
   14002595b:	add    BYTE PTR [rax+0x3f000199],dh
   140025961:	add    BYTE PTR [rax],al
   140025963:	add    al,dl
   140025965:	cdq    
   140025966:	add    DWORD PTR [rax],eax
   140025968:	(bad)  
   140025969:	add    BYTE PTR [rax],al
   14002596b:	add    al,dh
   14002596d:	cdq    
   14002596e:	add    DWORD PTR [rax],eax
   140025970:	cmp    eax,0x10000000
   140025975:	(bad)  
   140025976:	add    DWORD PTR [rax],eax
   140025978:	rex.X add BYTE PTR [rax],al
   14002597b:	add    BYTE PTR [rax],dh
   14002597d:	(bad)  
   14002597e:	add    DWORD PTR [rax],eax
   140025980:	cmp    eax,0x30000000
   140025985:	(bad)  
   140025986:	add    DWORD PTR [rax],eax
   140025988:	add    BYTE PTR [rax],r8b
   14002598b:	add    BYTE PTR [rax-0x66],dl
   14002598e:	add    DWORD PTR [rax],eax
   140025990:	add    BYTE PTR [r8],r8b
   140025993:	add    BYTE PTR [rax-0x66],dh
   140025996:	add    DWORD PTR [rax],eax
   140025998:	rex.RX add BYTE PTR [rax],r8b
   14002599b:	add    BYTE PTR [rax-0x1ffffe66],dl
   1400259a1:	add    al,BYTE PTR [rcx]
   1400259a3:	add    bh,bh
   1400259a5:	(bad)  
   1400259a6:	(bad)  
   1400259a7:	call   FWORD PTR [rbx+rax*1]
   1400259aa:	add    DWORD PTR [rax],eax
   1400259ac:	add    BYTE PTR [rax],al
   1400259ae:	add    BYTE PTR [rax],al
   1400259b0:	cmp    BYTE PTR [rbx],al
   1400259b2:	add    DWORD PTR [rax],eax
   1400259b4:	add    DWORD PTR [rax],eax
   1400259b6:	add    BYTE PTR [rax],al
   1400259b8:	mov    eax,DWORD PTR [rbx]
   1400259ba:	add    DWORD PTR [rax],eax
   1400259bc:	add    al,BYTE PTR [rax]
   1400259be:	add    BYTE PTR [rax],al
   1400259c0:	mov    dh,0x3
   1400259c2:	add    DWORD PTR [rax],eax
   1400259c4:	add    eax,DWORD PTR [rax]
   1400259c6:	add    BYTE PTR [rax],al
   1400259c8:	(bad)  
   1400259c9:	add    eax,DWORD PTR [rcx]
   1400259cb:	add    BYTE PTR [rax+rax*1],al
   1400259ce:	add    BYTE PTR [rax],al
   1400259d0:	jmp    0x1400259d5
   1400259d2:	add    DWORD PTR [rax],eax
   1400259d4:	add    eax,DWORD PTR [rax]
   1400259d6:	add    BYTE PTR [rax],al
   1400259d8:	cli    
   1400259d9:	add    eax,DWORD PTR [rcx]
   1400259db:	add    BYTE PTR [rdx],al
   1400259dd:	add    BYTE PTR [rax],al
   1400259df:	add    BYTE PTR [rcx],cl
   1400259e1:	add    al,0x1
   1400259e3:	add    BYTE PTR [rcx],al
   1400259e5:	add    BYTE PTR [rax],al
   1400259e7:	add    BYTE PTR [rdx+0x4],al
   1400259ea:	add    DWORD PTR [rax],eax
   1400259ec:	add    eax,0x5d000000
   1400259f1:	add    al,0x1
   1400259f3:	add    BYTE PTR [rdi],al
   1400259f5:	add    BYTE PTR [rax],al
   1400259f7:	add    BYTE PTR [rdi+0x8000104],ch
   1400259fd:	add    BYTE PTR [rax],al
   1400259ff:	add    dl,bl
   140025a01:	add    al,0x1
   140025a03:	add    BYTE PTR [rcx],cl
   140025a05:	add    BYTE PTR [rax],al
   140025a07:	add    cl,ch
   140025a09:	add    al,0x1
   140025a0b:	add    BYTE PTR [rdx],cl
   140025a0d:	add    BYTE PTR [rax],al
   140025a0f:	add    BYTE PTR [rdi],dl
   140025a11:	add    eax,0xc0001
   140025a16:	add    BYTE PTR [rax],al
   140025a18:	es add eax,0xd0001
   140025a1e:	add    BYTE PTR [rax],al
   140025a20:	imul   eax,DWORD PTR [rip+0xe0001],0x5990000        # 0x140105a2b
   140025a2a:	add    DWORD PTR [rax],eax
   140025a2c:	or     eax,0xe8000000
   140025a31:	add    eax,0xf0001
   140025a36:	add    BYTE PTR [rax],al
   140025a38:	(bad)  
   140025a39:	(bad)  
   140025a3a:	add    DWORD PTR [rax],eax
   140025a3c:	adc    DWORD PTR [rax],eax
   140025a3e:	add    BYTE PTR [rax],al
   140025a40:	pop    rdi
   140025a41:	(bad)  
   140025a42:	add    DWORD PTR [rax],eax
   140025a44:	adc    al,BYTE PTR [rax]
   140025a46:	add    BYTE PTR [rax],al
   140025a48:	mov    dl,0x6
   140025a4a:	add    DWORD PTR [rax],eax
   140025a4c:	adc    DWORD PTR [rax],eax
   140025a4e:	add    BYTE PTR [rax],al
   140025a50:	call   0x153025b5b
   140025a55:	add    BYTE PTR [rax],al
   140025a57:	add    BYTE PTR [rdi+rax*1],al
   140025a5a:	add    DWORD PTR [rax],eax
   140025a5c:	adc    al,0x0
   140025a5e:	add    BYTE PTR [rax],al
   140025a60:	or     BYTE PTR cs:[rcx],al
   140025a63:	add    BYTE PTR [rip+0x4b000000],dl        # 0x18b025a69
   140025a69:	or     BYTE PTR [rcx],al
   140025a6b:	add    BYTE PTR [rax+rax*1],dl
   140025a6e:	add    BYTE PTR [rax],al
   140025a70:	jb     0x140025a7a
   140025a72:	add    DWORD PTR [rax],eax
   140025a74:	adc    eax,DWORD PTR [rax]
   140025a76:	add    BYTE PTR [rax],al
   140025a78:	or     DWORD PTR [rax],0x110001
   140025a7e:	add    BYTE PTR [rax],al
   140025a80:	ror    BYTE PTR [rax],0x1
   140025a83:	add    BYTE PTR [rip+0x0],cl        # 0x140025a89
   140025a89:	or     DWORD PTR [rcx],eax
   140025a8b:	add    BYTE PTR [rsi],dl
   140025a8d:	add    BYTE PTR [rax],al
   140025a8f:	add    BYTE PTR [rax],dh
   140025a91:	or     DWORD PTR [rcx],eax
   140025a93:	add    BYTE PTR [rip+0xffffffff9c000000],cl        # 0xdc025a99
   140025a99:	or     DWORD PTR [rcx],eax
   140025a9b:	add    BYTE PTR [rdi],dl
   140025a9d:	add    BYTE PTR [rax],al
   140025a9f:	add    BYTE PTR [rsi+0x19000109],ch
   140025aa5:	add    BYTE PTR [rax],al
   140025aa7:	add    bh,ah
   140025aa9:	or     DWORD PTR [rcx],eax
   140025aab:	add    BYTE PTR [rdx],bl
   140025aad:	add    BYTE PTR [rax],al
   140025aaf:	add    dh,bh
   140025ab1:	or     DWORD PTR [rcx],eax
   140025ab3:	add    BYTE PTR [rbx],bl
   140025ab5:	add    BYTE PTR [rax],al
   140025ab7:	add    BYTE PTR [rbx],bl
   140025ab9:	or     al,BYTE PTR [rcx]
   140025abb:	add    BYTE PTR [rdx],bl
   140025abd:	add    BYTE PTR [rax],al
   140025abf:	add    BYTE PTR [rdx],ch
   140025ac1:	or     al,BYTE PTR [rcx]
   140025ac3:	add    BYTE PTR [rcx],bl
   140025ac5:	add    BYTE PTR [rax],al
   140025ac7:	add    BYTE PTR [rdx+0xa],bl
   140025aca:	add    DWORD PTR [rax],eax
   140025acc:	or     eax,0x71000000
   140025ad1:	or     al,BYTE PTR [rcx]
   140025ad3:	add    BYTE PTR [rax],cl
   140025ad5:	add    BYTE PTR [rax],al
   140025ad7:	add    BYTE PTR [rbp+0xa],bh
   140025ada:	add    DWORD PTR [rax],eax
   140025adc:	(bad)  
   140025add:	add    BYTE PTR [rax],al
   140025adf:	add    al,ah
   140025ae1:	or     al,BYTE PTR [rcx]
   140025ae3:	add    BYTE PTR [rax+rax*1],bl
   140025ae6:	add    BYTE PTR [rax],al
   140025ae8:	or     ecx,DWORD PTR [rbx]
   140025aea:	add    DWORD PTR [rax],eax
   140025aec:	sbb    eax,0x29000000
   140025af1:	or     eax,DWORD PTR [rcx]
   140025af3:	add    BYTE PTR [rsi],bl
   140025af5:	add    BYTE PTR [rax],al
   140025af7:	add    BYTE PTR [rax+0xb],al
   140025afa:	add    DWORD PTR [rax],eax
   140025afc:	sbb    eax,0x4f000000
   140025b01:	or     eax,DWORD PTR [rcx]
   140025b03:	add    BYTE PTR [rax+rax*1],bl
   140025b06:	add    BYTE PTR [rax],al
   140025b08:	pop    rsi
   140025b09:	or     eax,DWORD PTR [rcx]
   140025b0b:	add    BYTE PTR [rdi],al
   140025b0d:	add    BYTE PTR [rax],al
   140025b0f:	add    BYTE PTR [rdi+0x1f00010b],dl
   140025b15:	add    BYTE PTR [rax],al
   140025b17:	add    dl,al
   140025b19:	or     eax,DWORD PTR [rcx]
   140025b1b:	add    BYTE PTR [rax],ah
   140025b1d:	add    BYTE PTR [rax],al
   140025b1f:	add    al,ah
   140025b21:	or     eax,DWORD PTR [rcx]
   140025b23:	add    BYTE PTR [rcx],ah
   140025b25:	add    BYTE PTR [rax],al
   140025b27:	add    bh,dh
   140025b29:	or     eax,DWORD PTR [rcx]
   140025b2b:	add    BYTE PTR [rax],ah
   140025b2d:	add    BYTE PTR [rax],al
   140025b2f:	add    BYTE PTR [rsi],al
   140025b31:	or     al,0x1
   140025b33:	add    BYTE PTR [rdi],bl
   140025b35:	add    BYTE PTR [rax],al
   140025b37:	add    BYTE PTR [rip+0x700010c],dl        # 0x147025c49
   140025b3d:	add    BYTE PTR [rax],al
   140025b3f:	add    BYTE PTR [rsi+0xc],cl
   140025b42:	add    DWORD PTR [rax],eax
   140025b44:	and    al,BYTE PTR [rax]
   140025b46:	add    BYTE PTR [rax],al
   140025b48:	jns    0x140025b56
   140025b4a:	add    DWORD PTR [rax],eax
   140025b4c:	and    eax,DWORD PTR [rax]
   140025b4e:	add    BYTE PTR [rax],al
   140025b50:	fwait
   140025b51:	or     al,0x1
   140025b53:	add    BYTE PTR [rdx],ah
   140025b55:	add    BYTE PTR [rax],al
   140025b57:	add    BYTE PTR [rdx+0x700010c],ch
   140025b5d:	add    BYTE PTR [rax],al
   140025b5f:	add    bl,ah
   140025b61:	or     al,0x1
   140025b63:	add    BYTE PTR [rax+rax*1],ah
   140025b66:	add    BYTE PTR [rax],al
   140025b68:	(bad)  
   140025b69:	or     eax,0x250001
   140025b6e:	add    BYTE PTR [rax],al
   140025b70:	xor    BYTE PTR [rip+0x240001],cl        # 0x140265b77
   140025b76:	add    BYTE PTR [rax],al
   140025b78:	(bad)  
   140025b79:	or     eax,0x70001
   140025b7e:	add    BYTE PTR [rax],al
   140025b80:	js     0x140025b8f
   140025b82:	add    DWORD PTR [rax],eax
   140025b84:	add    BYTE PTR es:[rax],al
   140025b87:	add    BYTE PTR [rbx+0x2700010d],ah
   140025b8d:	add    BYTE PTR [rax],al
   140025b8f:	add    ch,al
   140025b91:	or     eax,0x260001
   140025b96:	add    BYTE PTR [rax],al
   140025b98:	(bad)  
   140025b99:	or     eax,0x70001
   140025b9e:	add    BYTE PTR [rax],al
   140025ba0:	or     eax,0x2800010e
   140025ba5:	add    BYTE PTR [rax],al
   140025ba7:	add    BYTE PTR [rax],bh
   140025ba9:	(bad)  
   140025baa:	add    DWORD PTR [rax],eax
   140025bac:	sub    DWORD PTR [rax],eax
   140025bae:	add    BYTE PTR [rax],al
   140025bb0:	pop    rdx
   140025bb1:	(bad)  
   140025bb2:	add    DWORD PTR [rax],eax
   140025bb4:	sub    BYTE PTR [rax],al
   140025bb6:	add    BYTE PTR [rax],al
   140025bb8:	imul   ecx,DWORD PTR [rsi],0x70001
   140025bbe:	add    BYTE PTR [rax],al
   140025bc0:	retf   
   140025bc1:	(bad)  
   140025bc2:	add    DWORD PTR [rax],eax
   140025bc4:	sub    al,BYTE PTR [rax]
   140025bc6:	add    BYTE PTR [rax],al
   140025bc8:	rex.WRXB sgdt [r8]
   140025bcc:	sub    eax,DWORD PTR [rax]
   140025bce:	add    BYTE PTR [rax],al
   140025bd0:	mov    cs,WORD PTR [rdi]
   140025bd2:	add    DWORD PTR [rax],eax
   140025bd4:	sub    al,0x0
   140025bd6:	add    BYTE PTR [rax],al
   140025bd8:	add    DWORD PTR [rax],edx
   140025bda:	add    DWORD PTR [rax],eax
   140025bdc:	sub    eax,0x70000000
   140025be1:	adc    BYTE PTR [rcx],al
   140025be3:	add    BYTE PTR [rsi],ch
   140025be5:	add    BYTE PTR [rax],al
   140025be7:	add    al,cl
   140025be9:	adc    BYTE PTR [rcx],al
   140025beb:	add    BYTE PTR [rip+0xffffffffe8000000],ch        # 0x128025bf1
   140025bf1:	adc    BYTE PTR [rcx],al
   140025bf3:	add    BYTE PTR [rax+rax*1],ch
   140025bf6:	add    BYTE PTR [rax],al
   140025bf8:	or     BYTE PTR [rcx],dl
   140025bfa:	add    DWORD PTR [rax],eax
   140025bfc:	sub    eax,DWORD PTR [rax]
   140025bfe:	add    BYTE PTR [rax],al
   140025c00:	movsxd edx,DWORD PTR [rcx]
   140025c02:	add    DWORD PTR [rax],eax
   140025c04:	(bad)  
   140025c05:	add    BYTE PTR [rax],al
   140025c07:	add    BYTE PTR [rbx+0x30000112],cl
   140025c0d:	add    BYTE PTR [rax],al
   140025c0f:	add    BYTE PTR [rcx+0x31000113],dh
   140025c15:	add    BYTE PTR [rax],al
   140025c17:	add    dl,cl
   140025c19:	adc    eax,DWORD PTR [rcx]
   140025c1b:	add    BYTE PTR [rax],dh
   140025c1d:	add    BYTE PTR [rax],al
   140025c1f:	add    BYTE PTR [rsp+rdx*1],cl
   140025c22:	add    DWORD PTR [rax],eax
   140025c24:	xor    al,BYTE PTR [rax]
   140025c26:	add    BYTE PTR [rax],al
   140025c28:	sub    DWORD PTR [rcx+rax*1],edx
   140025c2b:	add    BYTE PTR [rbx],dh
   140025c2d:	add    BYTE PTR [rax],al
   140025c2f:	add    BYTE PTR [rdi],ch
   140025c31:	adc    eax,0x320001
   140025c36:	add    BYTE PTR [rax],al
   140025c38:	ds adc eax,0x300001
   140025c3e:	add    BYTE PTR [rax],al
   140025c40:	jl     0x140025c57
   140025c42:	add    DWORD PTR [rax],eax
   140025c44:	xor    al,0x0
   140025c46:	add    BYTE PTR [rax],al
   140025c48:	xchg   edi,eax
   140025c49:	adc    eax,0x350001
   140025c4e:	add    BYTE PTR [rax],al
   140025c50:	mov    bl,0x15
   140025c52:	add    DWORD PTR [rax],eax
   140025c54:	add    BYTE PTR ss:[rax],al
   140025c57:	add    BYTE PTR [rax+0x37000116],bl
   140025c5d:	add    BYTE PTR [rax],al
   140025c5f:	add    BYTE PTR [rax+0x17],bl
   140025c62:	add    DWORD PTR [rax],eax
   140025c64:	add    BYTE PTR ss:[rax],al
   140025c67:	add    BYTE PTR [rax+0x17],bh
   140025c6a:	add    DWORD PTR [rax],eax
   140025c6c:	xor    eax,0x87000000
   140025c71:	(bad)  
   140025c72:	add    DWORD PTR [rax],eax
   140025c74:	xor    al,0x0
   140025c76:	add    BYTE PTR [rax],al
   140025c78:	xchg   esi,eax
   140025c79:	(bad)  
   140025c7a:	add    DWORD PTR [rax],eax
   140025c7c:	xor    BYTE PTR [rax],al
   140025c7e:	add    BYTE PTR [rax],al
   140025c80:	(bad)  
   140025c81:	(bad)  
   140025c82:	add    DWORD PTR [rax],eax
   140025c84:	cmp    BYTE PTR [rax],al
   140025c86:	add    BYTE PTR [rax],al
   140025c88:	not    BYTE PTR [rdi]
   140025c8a:	add    DWORD PTR [rax],eax
   140025c8c:	cmp    DWORD PTR [rax],eax
   140025c8e:	add    BYTE PTR [rax],al
   140025c90:	cmp    BYTE PTR [rcx],bl
   140025c92:	add    DWORD PTR [rax],eax
   140025c94:	cmp    al,BYTE PTR [rax]
   140025c96:	add    BYTE PTR [rax],al
   140025c98:	pop    rax
   140025c99:	sbb    al,BYTE PTR [rcx]
   140025c9b:	add    BYTE PTR [rcx],bh
   140025c9d:	add    BYTE PTR [rax],al
   140025c9f:	add    BYTE PTR [rax+0x1a],bh
   140025ca2:	add    DWORD PTR [rax],eax
   140025ca4:	cmp    BYTE PTR [rax],al
   140025ca6:	add    BYTE PTR [rax],al
   140025ca8:	xchg   DWORD PTR [rdx],ebx
   140025caa:	add    DWORD PTR [rax],eax
   140025cac:	xor    BYTE PTR [rax],al
   140025cae:	add    BYTE PTR [rax],al
   140025cb0:	xchg   esi,eax
   140025cb1:	sbb    al,BYTE PTR [rcx]
   140025cb3:	add    BYTE PTR [rdi],ch
   140025cb5:	add    BYTE PTR [rax],al
   140025cb7:	add    BYTE PTR [rbp+0x2b00011a],ah
   140025cbd:	add    BYTE PTR [rax],al
   140025cbf:	add    BYTE PTR [rbp+0x2a00011a],dh
   140025cc5:	add    BYTE PTR [rax],al
   140025cc7:	add    BYTE PTR [rcx+0x1b],dl
   140025cca:	add    DWORD PTR [rax],eax
   140025ccc:	cmp    eax,DWORD PTR [rax]
   140025cce:	add    BYTE PTR [rax],al
   140025cd0:	outs   dx,DWORD PTR ds:[rsi]
   140025cd1:	sbb    eax,DWORD PTR [rcx]
   140025cd3:	add    BYTE PTR [rip+0xffffffff93000000],bh        # 0xd3025cd9
   140025cd9:	sbb    eax,0x3e0001
   140025cde:	add    BYTE PTR [rax],al
   140025ce0:	movabs ds:0x570000003f00011d,al
   140025ce9:	(bad)  
   140025cea:	add    DWORD PTR [rax],eax
   140025cec:	add    BYTE PTR [rax],al
   140025cef:	add    ch,al
   140025cf1:	and    BYTE PTR [rcx],al
   140025cf3:	add    BYTE PTR [rdi],bh
   140025cf5:	add    BYTE PTR [rax],al
   140025cf7:	add    BYTE PTR [rsi],al
   140025cf9:	and    DWORD PTR [rcx],eax
   140025cfb:	add    BYTE PTR [rcx+0x0],al
   140025cfe:	add    BYTE PTR [rax],al
   140025d00:	sbb    DWORD PTR [rcx],esp
   140025d02:	add    DWORD PTR [rax],eax
   140025d04:	(bad)  
   140025d05:	add    BYTE PTR [rax],al
   140025d07:	add    BYTE PTR [rcx+riz*1+0x1],bh
   140025d0b:	add    BYTE PTR [rsi],bh
   140025d0d:	add    BYTE PTR [rax],al
   140025d0f:	add    BYTE PTR [rbx+0x3d000121],cl
   140025d15:	add    BYTE PTR [rax],al
   140025d17:	add    ch,dh
   140025d19:	and    DWORD PTR [rcx],eax
   140025d1b:	add    BYTE PTR [rdx+0x0],al
   140025d1e:	add    BYTE PTR [rax],al
   140025d20:	adc    esp,DWORD PTR [rdx]
   140025d22:	add    DWORD PTR [rax],eax
   140025d24:	add    BYTE PTR [rax],r8b
   140025d27:	add    BYTE PTR [rdi+0x45000122],ch
   140025d2d:	add    BYTE PTR [rax],al
   140025d2f:	add    ah,cl
   140025d31:	and    al,BYTE PTR [rcx]
   140025d33:	add    BYTE PTR [rsi+0x0],al
   140025d36:	add    BYTE PTR [rax],al
   140025d38:	fisub  WORD PTR [rdx]
   140025d3a:	add    DWORD PTR [rax],eax
   140025d3c:	rex.RXB add BYTE PTR [r8],r8b
   140025d3f:	add    dl,bh
   140025d41:	and    al,BYTE PTR [rcx]
   140025d43:	add    BYTE PTR [rsi+0x0],al
   140025d46:	add    BYTE PTR [rax],al
   140025d48:	or     DWORD PTR [rbx],esp
   140025d4a:	add    DWORD PTR [rax],eax
   140025d4c:	add    BYTE PTR [r8],r8b
   140025d4f:	add    bh,dl
   140025d51:	and    eax,DWORD PTR [rcx]
   140025d53:	add    BYTE PTR [rax+rax*1+0x0],al
   140025d57:	add    BYTE PTR [rip+0x3d000124],dh        # 0x17d025e81
   140025d5d:	add    BYTE PTR [rax],al
   140025d5f:	add    BYTE PTR [rsp+0x1],al
   140025d63:	add    BYTE PTR [rdx],ch
   140025d65:	add    BYTE PTR [rax],al
   140025d67:	add    BYTE PTR [rbx+0x24],dl
   140025d6a:	add    DWORD PTR [rax],eax
   140025d6c:	(bad)  
   140025d6d:	add    BYTE PTR [rax],al
   140025d6f:	add    BYTE PTR [rsp+0x10001],ch
   140025d76:	add    BYTE PTR [rax],al
   140025d78:	iret   
   140025d79:	and    al,0x1
   140025d7b:	add    BYTE PTR [rax],al
   140025d7d:	add    BYTE PTR [rax],al
   140025d7f:	add    BYTE PTR [rcx],al
   140025d81:	clts   
   140025d83:	add    BYTE PTR [rdi],cl
   140025d85:	str    WORD PTR fs:[rdi]
   140025d89:	xor    al,0xe
   140025d8b:	add    BYTE PTR [rdi],cl
   140025d8d:	mov    dl,0xb
   140025d8f:	jo     0x140025d92
   140025d91:	add    al,0x1
   140025d93:	add    BYTE PTR [rdx+rax*8],al
   140025d96:	add    BYTE PTR [rax],al
   140025d98:	adc    DWORD PTR [rdx],esp
   140025d9a:	or     al,BYTE PTR [rax]
   140025d9c:	and    dh,BYTE PTR [rdi+rcx*1]
   140025d9f:	add    BYTE PTR [rdx+rdx*2],dl
   140025da2:	adc    al,dh
   140025da4:	(bad)  
   140025da5:	loopne 0x140025db3
   140025da7:	ror    BYTE PTR [rdx],1
   140025da9:	ror    BYTE PTR [rax],0x70
   140025dac:	(bad)  
   140025dad:	(bad)  
   140025dae:	(bad)  
   140025daf:	push   rax
   140025db0:	(bad)  
   140025db1:	add    DWORD PTR ds:[rax],eax
   140025db4:	shl    dl,1
   140025db6:	add    DWORD PTR [rax],eax
   140025db8:	push   rax
   140025db9:	add    DWORD PTR es:[rax],eax
   140025dbc:	(bad)  
   140025dbd:	(bad)  
   140025dbe:	(bad)  
   140025dbf:	dec    DWORD PTR [rdi+riz*1]
   140025dc2:	add    DWORD PTR [rax],eax
   140025dc4:	add    eax,DWORD PTR [rax]
   140025dc6:	add    BYTE PTR [rax],al
   140025dc8:	sbb    BYTE PTR [rdi],ah
   140025dca:	add    DWORD PTR [rax],eax
   140025dcc:	add    al,BYTE PTR [rax]
   140025dce:	add    BYTE PTR [rax],al
   140025dd0:	jo     0x140025df9
   140025dd2:	add    DWORD PTR [rax],eax
   140025dd4:	add    DWORD PTR [rax],eax
   140025dd6:	add    BYTE PTR [rax],al
   140025dd8:	jl     0x140025e01
   140025dda:	add    DWORD PTR [rax],eax
   140025ddc:	add    BYTE PTR [rax],al
   140025dde:	add    BYTE PTR [rax],al
   140025de0:	mov    BYTE PTR [rdi],ah
   140025de2:	add    DWORD PTR [rax],eax
   140025de4:	(bad)  
   140025de5:	(bad)  
   140025de6:	(bad)  
   140025de7:	call   QWORD PTR [rcx]
   140025de9:	and    al,0xa
   140025deb:	add    BYTE PTR [rax],bl
   140025ded:	add    DWORD PTR [rdi],ebx
   140025def:	add    BYTE PTR [rcx],dl
   140025df1:	lock pavgb mm1,QWORD PTR [rip+0x9c00bd0]        # 0x149c269c9
   140025df9:	jo     0x140025e03
   140025dfb:	(bad)  
   140025dfc:	(bad)  
   140025dfd:	push   rax
   140025dfe:	(bad)  
   140025dff:	xor    dh,cl
   140025e01:	add    DWORD PTR ds:[rax],eax
   140025e04:	add    bl,dh
   140025e06:	add    DWORD PTR [rax],eax
   140025e08:	(bad)  
   140025e09:	(bad)  
   140025e0a:	(bad)  
   140025e0b:	push   QWORD PTR [rax]
   140025e0d:	fwait
   140025e0e:	add    DWORD PTR [rax],eax
   140025e10:	add    BYTE PTR [rax],al
   140025e12:	add    BYTE PTR [rax],al
   140025e14:	push   rax
   140025e15:	fwait
   140025e16:	add    DWORD PTR [rax],eax
   140025e18:	add    DWORD PTR [rax],eax
   140025e1a:	add    BYTE PTR [rax],al
   140025e1c:	jo     0x140025db9
   140025e1e:	add    DWORD PTR [rax],eax
   140025e20:	add    al,BYTE PTR [rax]
   140025e22:	add    BYTE PTR [rax],al
   140025e24:	nop
   140025e25:	fwait
   140025e26:	add    DWORD PTR [rax],eax
   140025e28:	add    eax,DWORD PTR [rax]
   140025e2a:	add    BYTE PTR [rax],al
   140025e2c:	mov    al,0x9b
   140025e2e:	add    DWORD PTR [rax],eax
   140025e30:	add    al,0x0
   140025e32:	add    BYTE PTR [rax],al
   140025e34:	rcr    BYTE PTR [rbx+0x50001],1
   140025e3a:	add    BYTE PTR [rax],al
   140025e3c:	lock fwait
   140025e3e:	add    DWORD PTR [rax],eax
   140025e40:	add    eax,DWORD PTR [rax]
   140025e42:	add    BYTE PTR [rax],al
   140025e44:	adc    BYTE PTR [rcx+rax*1+0x700],bl
   140025e4b:	add    BYTE PTR [rax],dh
   140025e4d:	pushf  
   140025e4e:	add    DWORD PTR [rax],eax
   140025e50:	or     BYTE PTR [rax],al
   140025e52:	add    BYTE PTR [rax],al
   140025e54:	push   rax
   140025e55:	pushf  
   140025e56:	add    DWORD PTR [rax],eax
   140025e58:	or     DWORD PTR [rax],eax
   140025e5a:	add    BYTE PTR [rax],al
   140025e5c:	jo     0x140025dfa
   140025e5e:	add    DWORD PTR [rax],eax
   140025e60:	or     al,BYTE PTR [rax]
   140025e62:	add    BYTE PTR [rax],al
   140025e64:	nop
   140025e65:	pushf  
   140025e66:	add    DWORD PTR [rax],eax
   140025e68:	(bad)  
   140025e69:	add    BYTE PTR [rax],al
   140025e6b:	add    BYTE PTR [rax+0xc00019c],dh
   140025e71:	add    BYTE PTR [rax],al
   140025e73:	add    al,dl
   140025e75:	pushf  
   140025e76:	add    DWORD PTR [rax],eax
   140025e78:	or     eax,0xf0000000
   140025e7d:	pushf  
   140025e7e:	add    DWORD PTR [rax],eax
   140025e80:	(bad)  
   140025e81:	add    BYTE PTR [rax],al
   140025e83:	add    BYTE PTR [rax],dl
   140025e85:	popf   
   140025e86:	add    DWORD PTR [rax],eax
   140025e88:	(bad)  
   140025e89:	add    BYTE PTR [rax],al
   140025e8b:	add    BYTE PTR [rax],dh
   140025e8d:	popf   
   140025e8e:	add    DWORD PTR [rax],eax
   140025e90:	adc    BYTE PTR [rax],al
   140025e92:	add    BYTE PTR [rax],al
   140025e94:	push   rax
   140025e95:	popf   
   140025e96:	add    DWORD PTR [rax],eax
   140025e98:	(bad)  
   140025e99:	add    BYTE PTR [rax],al
   140025e9b:	add    BYTE PTR [rax-0x63],dh
   140025e9e:	add    DWORD PTR [rax],eax
   140025ea0:	adc    al,BYTE PTR [rax]
   140025ea2:	add    BYTE PTR [rax],al
   140025ea4:	nop
   140025ea5:	popf   
   140025ea6:	add    DWORD PTR [rax],eax
   140025ea8:	adc    eax,DWORD PTR [rax]
   140025eaa:	add    BYTE PTR [rax],al
   140025eac:	mov    al,0x9d
   140025eae:	add    DWORD PTR [rax],eax
   140025eb0:	adc    al,0x0
   140025eb2:	add    BYTE PTR [rax],al
   140025eb4:	rcr    BYTE PTR [rbp+0x20001],1
   140025eba:	add    BYTE PTR [rax],al
   140025ebc:	lock popf 
   140025ebe:	add    DWORD PTR [rax],eax
   140025ec0:	(bad)  
   140025ec1:	add    BYTE PTR [rax],al
   140025ec3:	add    BYTE PTR [rax],dl
   140025ec5:	sahf   
   140025ec6:	add    DWORD PTR [rax],eax
   140025ec8:	(bad)  
   140025ec9:	add    BYTE PTR [rax],al
   140025ecb:	add    BYTE PTR [rax],dh
   140025ecd:	sahf   
   140025ece:	add    DWORD PTR [rax],eax
   140025ed0:	sbb    BYTE PTR [rax],al
   140025ed2:	add    BYTE PTR [rax],al
   140025ed4:	push   rax
   140025ed5:	sahf   
   140025ed6:	add    DWORD PTR [rax],eax
   140025ed8:	add    al,BYTE PTR [rax]
   140025eda:	add    BYTE PTR [rax],al
   140025edc:	add    BYTE PTR [rax],al
   140025ede:	add    BYTE PTR [rax],al
   140025ee0:	sbb    al,BYTE PTR [rax]
   140025ee2:	add    BYTE PTR [rax],al
   140025ee4:	add    BYTE PTR [rax],al
   140025ee6:	add    BYTE PTR [rax],al
   140025ee8:	sbb    eax,DWORD PTR [rax]
   140025eea:	add    BYTE PTR [rax],al
   140025eec:	add    BYTE PTR [rax],al
   140025eee:	add    BYTE PTR [rax],al
   140025ef0:	sbb    al,0x0
   140025ef2:	add    BYTE PTR [rax],al
   140025ef4:	add    BYTE PTR [rax],al
   140025ef6:	add    BYTE PTR [rax],al
   140025ef8:	shl    BYTE PTR [rdi],1
   140025efa:	add    DWORD PTR [rax],eax
   140025efc:	(bad)  
   140025efd:	(bad)  
   140025efe:	(bad)  
   140025eff:	dec    DWORD PTR [rsi]
   140025f01:	sub    BYTE PTR [rcx],al
   140025f03:	add    BYTE PTR [rax],al
   140025f05:	add    BYTE PTR [rax],al
   140025f07:	add    BYTE PTR [rbx],dl
   140025f09:	sub    BYTE PTR [rcx],al
   140025f0b:	add    BYTE PTR [rcx],al
   140025f0d:	add    BYTE PTR [rax],al
   140025f0f:	add    BYTE PTR [rdi],bl
   140025f11:	sub    BYTE PTR [rcx],al
   140025f13:	add    BYTE PTR [rdx],al
   140025f15:	add    BYTE PTR [rax],al
   140025f17:	add    BYTE PTR [rdx],ch
   140025f19:	sub    BYTE PTR [rcx],al
   140025f1b:	add    BYTE PTR [rbx],al
   140025f1d:	add    BYTE PTR [rax],al
   140025f1f:	add    BYTE PTR [rdi+0x29],dl
   140025f22:	add    DWORD PTR [rax],eax
   140025f24:	add    al,0x0
   140025f26:	add    BYTE PTR [rax],al
   140025f28:	adc    BYTE PTR [rbx],ch
   140025f2a:	add    DWORD PTR [rax],eax
   140025f2c:	add    eax,0x22000000
   140025f31:	sub    eax,DWORD PTR [rcx]
   140025f33:	add    BYTE PTR [rsi],al
   140025f35:	add    BYTE PTR [rax],al
   140025f37:	add    BYTE PTR [rbp+0x2b],bl
   140025f3a:	add    DWORD PTR [rax],eax
   140025f3c:	add    eax,0xdc000000
   140025f41:	sub    eax,DWORD PTR [rcx]
   140025f43:	add    BYTE PTR [rax+rax*1],al
   140025f46:	add    BYTE PTR [rax],al
   140025f48:	mov    esi,0x300012e
   140025f4d:	add    BYTE PTR [rax],al
   140025f4f:	add    BYTE PTR [rax+0x2f],ah
   140025f52:	add    DWORD PTR [rax],eax
   140025f54:	(bad)  
   140025f55:	add    BYTE PTR [rax],al
   140025f57:	add    cl,dh
   140025f59:	(bad)  
   140025f5a:	add    DWORD PTR [rax],eax
   140025f5c:	or     eax,DWORD PTR [rax]
   140025f5e:	add    BYTE PTR [rax],al
   140025f60:	cld    
   140025f61:	(bad)  
   140025f62:	add    DWORD PTR [rax],eax
   140025f64:	or     al,BYTE PTR [rax]
   140025f66:	add    BYTE PTR [rax],al
   140025f68:	jae    0x140025f9a
   140025f6a:	add    DWORD PTR [rax],eax
   140025f6c:	or     DWORD PTR [rax],eax
   140025f6e:	add    BYTE PTR [rax],al
   140025f70:	jle    0x140025fa2
   140025f72:	add    DWORD PTR [rax],eax
   140025f74:	or     BYTE PTR [rax],al
   140025f76:	add    BYTE PTR [rax],al
   140025f78:	mov    DWORD PTR [rax],esi
   140025f7a:	add    DWORD PTR [rax],eax
   140025f7c:	(bad)  
   140025f7d:	add    BYTE PTR [rax],al
   140025f7f:	add    bh,dl
   140025f81:	xor    DWORD PTR [rcx],eax
   140025f83:	add    BYTE PTR [rdi],cl
   140025f85:	add    BYTE PTR [rax],al
   140025f87:	add    dl,ah
   140025f89:	xor    DWORD PTR [rcx],eax
   140025f8b:	add    BYTE PTR [rsi],cl
   140025f8d:	add    BYTE PTR [rax],al
   140025f8f:	add    BYTE PTR [rax+0x32],bl
   140025f92:	add    DWORD PTR [rax],eax
   140025f94:	or     eax,0x63000000
   140025f99:	xor    al,BYTE PTR [rcx]
   140025f9b:	add    BYTE PTR [rax+rax*1],cl
   140025f9e:	add    BYTE PTR [rax],al
   140025fa0:	outs   dx,BYTE PTR ds:[rsi]
   140025fa1:	xor    al,BYTE PTR [rcx]
   140025fa3:	add    BYTE PTR [rdi],al
   140025fa5:	add    BYTE PTR [rax],al
   140025fa7:	add    dl,ah
   140025fa9:	xor    al,BYTE PTR [rcx]
   140025fab:	add    BYTE PTR [rax],dl
   140025fad:	add    BYTE PTR [rax],al
   140025faf:	add    cl,dh
   140025fb1:	xor    al,BYTE PTR [rcx]
   140025fb3:	add    BYTE PTR [rcx],dl
   140025fb5:	add    BYTE PTR [rax],al
   140025fb7:	add    BYTE PTR [rdx],al
   140025fb9:	xor    eax,DWORD PTR [rcx]
   140025fbb:	add    BYTE PTR [rax],dl
   140025fbd:	add    BYTE PTR [rax],al
   140025fbf:	add    BYTE PTR [rdi+0x15000133],al
   140025fc5:	add    BYTE PTR [rax],al
   140025fc7:	add    BYTE PTR [rsi+0x14000133],dl
   140025fcd:	add    BYTE PTR [rax],al
   140025fcf:	add    BYTE PTR [rsp+rsi*1],cl
   140025fd2:	add    DWORD PTR [rax],eax
   140025fd4:	adc    eax,DWORD PTR [rax]
   140025fd6:	add    BYTE PTR [rax],al
   140025fd8:	sbb    esi,DWORD PTR [rcx+rax*1]
   140025fdb:	add    BYTE PTR [rdx],dl
   140025fdd:	add    BYTE PTR [rax],al
   140025fdf:	add    BYTE PTR [rdx],ch
   140025fe1:	xor    al,0x1
   140025fe3:	add    BYTE PTR [rdi],al
   140025fe5:	add    BYTE PTR [rax],al
   140025fe7:	add    BYTE PTR [rcx],bh
   140025fe9:	xor    al,0x1
   140025feb:	add    BYTE PTR [rbx],al
   140025fed:	add    BYTE PTR [rax],al
   140025fef:	add    BYTE PTR [rsi+0x34],dl
   140025ff2:	add    DWORD PTR [rax],eax
   140025ff4:	add    al,BYTE PTR [rax]
   140025ff6:	add    BYTE PTR [rax],al
   140025ff8:	fnstenv [rcx+rax*1]
   140025ffb:	add    BYTE PTR [rcx],bl
   140025ffd:	add    BYTE PTR [rax],al
   140025fff:	add    ah,ah
   140026001:	xor    al,0x1
   140026003:	add    BYTE PTR [rax],bl
   140026005:	add    BYTE PTR [rax],al
   140026007:	add    BYTE PTR [rip+0x17000135],bh        # 0x157026142
   14002600d:	add    BYTE PTR [rax],al
   14002600f:	add    BYTE PTR [rax+0x35],cl
   140026012:	add    DWORD PTR [rax],eax
   140026014:	(bad)  
   140026015:	add    BYTE PTR [rax],al
   140026017:	add    BYTE PTR [rbx+0x35],dl
   14002601a:	add    DWORD PTR [rax],eax
   14002601c:	add    al,BYTE PTR [rax]
   14002601e:	add    BYTE PTR [rax],al
   140026020:	test   BYTE PTR [rip+0x10001],dh        # 0x140036027
   140026026:	add    BYTE PTR [rax],al
   140026028:	fbstp  TBYTE PTR [rip+0x1]        # 0x14002602f
   14002602e:	add    BYTE PTR [rax],al
   140026030:	rex.R
   140026031:	add    DWORD PTR ss:[rax],eax
   140026034:	(bad)  
   140026035:	(bad)  
   140026036:	(bad)  
   140026037:	call   QWORD PTR [rcx]
   140026039:	and    ecx,DWORD PTR [rcx]
   14002603b:	add    BYTE PTR [rbx],ah
   14002603d:	fs (bad) 
   14002603f:	add    BYTE PTR [rdi],bl
   140026041:	push   rsp
   140026042:	(bad)  
   140026043:	add    BYTE PTR [rbx],bl
   140026045:	xor    al,0x1d
   140026047:	add    BYTE PTR [rbx],cl
   140026049:	add    DWORD PTR [rdx],ebx
   14002604b:	add    BYTE PTR [rax+rsi*2],al
   14002604e:	add    BYTE PTR [rax],al
   140026050:	(bad)  
   140026051:	add    DWORD PTR ds:[rax],eax
   140026054:	loopne 0x140026055
   140026056:	add    DWORD PTR [rax],eax
   140026058:	(bad)  
   140026059:	(bad)  
   14002605a:	(bad)  
   14002605b:	push   QWORD PTR [rax-0x62]
   14002605e:	add    DWORD PTR [rax],eax
   140026060:	shl    BYTE PTR [rsi],0x1
   140026063:	add    bh,bh
   140026065:	(bad)  
   140026066:	(bad)  
   140026067:	jmp    QWORD PTR [rdi+rsi*1+0x1]
   14002606e:	add    BYTE PTR [rax],al
   140026070:	cmp    BYTE PTR [rcx],al
   140026073:	add    bh,bh
   140026075:	(bad)  
   140026076:	(bad)  
   140026077:	call   QWORD PTR [rcx]
   140026079:	sbb    BYTE PTR [rax+rax*1],al
   14002607c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14002607f:	add    BYTE PTR [rdx],cl
   140026081:	push   rdx
   140026082:	(bad)  
   140026083:	jo     0x140026053
   140026085:	add    DWORD PTR ds:[rax],eax
   140026088:	push   rax
   140026089:	(bad)  
   14002608a:	add    al,BYTE PTR [rax]
   14002608c:	(bad)  
   14002608d:	(bad)  
   14002608e:	(bad)  
   14002608f:	call   QWORD PTR [rax+0x188]
   140026095:	add    BYTE PTR [rax],al
   140026097:	add    BYTE PTR [rax-0x78],dh
   14002609a:	add    DWORD PTR [rax],eax
   14002609c:	push   rax
   14002609d:	cmp    DWORD PTR [rcx],eax
   14002609f:	add    bh,bh
   1400260a1:	(bad)  
   1400260a2:	(bad)  
   1400260a3:	inc    DWORD PTR [rdx+0x1000139]
   1400260a9:	add    BYTE PTR [rax],al
   1400260ab:	add    BYTE PTR [rdx+0x139],ah
   1400260b1:	add    BYTE PTR [rax],al
   1400260b3:	add    BYTE PTR [rcx],dl
   1400260b5:	and    BYTE PTR [rax],cl
   1400260b7:	add    BYTE PTR [rax],ah
   1400260b9:	push   rsp
   1400260ba:	or     al,0x0
   1400260bc:	sbb    esi,DWORD PTR [rbx+rcx*1]
   1400260bf:	add    BYTE PTR [rip+0x7c00952],cl        # 0x147c26a17
   1400260c5:	jo     0x1400260cd
   1400260c7:	(bad)  
   1400260c8:	(bad)  
   1400260c9:	add    DWORD PTR ds:[rax],eax
   1400260cc:	add    BYTE PTR [rsi],0x2
   1400260cf:	add    bh,bh
   1400260d1:	(bad)  
   1400260d2:	(bad)  
   1400260d3:	call   QWORD PTR [rax+0x19e]
   1400260d9:	add    BYTE PTR [rax],al
   1400260db:	add    BYTE PTR [rax+0x100019e],dh
   1400260e1:	add    BYTE PTR [rax],al
   1400260e3:	add    al,dl
   1400260e5:	sahf   
   1400260e6:	add    DWORD PTR [rax],eax
   1400260e8:	add    al,BYTE PTR [rax]
   1400260ea:	add    BYTE PTR [rax],al
   1400260ec:	lock sahf 
   1400260ee:	add    DWORD PTR [rax],eax
   1400260f0:	add    eax,DWORD PTR [rax]
   1400260f2:	add    BYTE PTR [rax],al
   1400260f4:	adc    BYTE PTR [rdi+0x40001],bl
   1400260fa:	add    BYTE PTR [rax],al
   1400260fc:	xor    BYTE PTR [rdi+0x3a200001],bl
   140026102:	add    DWORD PTR [rax],eax
   140026104:	(bad)  
   140026105:	(bad)  
   140026106:	(bad)  
   140026107:	call   FWORD PTR [rax+0x3a]
   14002610a:	add    DWORD PTR [rax],eax
   14002610c:	add    BYTE PTR [rax],al
   14002610e:	add    BYTE PTR [rax],al
   140026110:	push   0x3a
   140026112:	add    DWORD PTR [rax],eax
   140026114:	add    DWORD PTR [rax],eax
   140026116:	add    BYTE PTR [rax],al
   140026118:	jl     0x140026154
   14002611a:	add    DWORD PTR [rax],eax
   14002611c:	add    al,BYTE PTR [rax]
   14002611e:	add    BYTE PTR [rax],al
   140026120:	mov    ?,WORD PTR [rdx]
   140026122:	add    DWORD PTR [rax],eax
   140026124:	add    eax,DWORD PTR [rax]
   140026126:	add    BYTE PTR [rax],al
   140026128:	sahf   
   140026129:	cmp    al,BYTE PTR [rcx]
   14002612b:	add    BYTE PTR [rax+rax*1],al
   14002612e:	add    BYTE PTR [rax],al
   140026130:	or     DWORD PTR [rbx],edi
   140026132:	add    DWORD PTR [rax],eax
   140026134:	add    eax,0x53000000
   140026139:	cmp    eax,DWORD PTR [rcx]
   14002613b:	add    BYTE PTR [rax+rax*1],al
   14002613e:	add    BYTE PTR [rax],al
   140026140:	pop    rdi
   140026141:	cmp    eax,DWORD PTR [rcx]
   140026143:	add    bh,bh
   140026145:	(bad)  
   140026146:	(bad)  
   140026147:	call   QWORD PTR [rcx]
   140026149:	sbb    BYTE PTR [rax+rax*1],al
   14002614c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14002614f:	add    BYTE PTR [rdx],cl
   140026151:	push   rdx
   140026152:	(bad)  
   140026153:	jo     0x140026123
   140026155:	add    DWORD PTR ds:[rax],eax
   140026158:	mov    al,0x6
   14002615a:	add    al,BYTE PTR [rax]
   14002615c:	(bad)  
   14002615d:	(bad)  
   14002615e:	(bad)  
   14002615f:	call   QWORD PTR [rax-0x61]
   140026162:	add    DWORD PTR [rax],eax
   140026164:	add    BYTE PTR [rax],al
   140026166:	add    BYTE PTR [rax],al
   140026168:	jo     0x140026109
   14002616a:	add    DWORD PTR [rax],eax
   14002616c:	add    DWORD PTR [rax],eax
   14002616e:	add    BYTE PTR [rax],al
   140026170:	nop
   140026171:	lahf   
   140026172:	add    DWORD PTR [rax],eax
   140026174:	cmp    BYTE PTR [rbx],0x1
   140026177:	add    bh,bh
   140026179:	(bad)  
   14002617a:	(bad)  
   14002617b:	jmp    FWORD PTR [rbp+0x13b]
   140026181:	add    BYTE PTR [rax],al
   140026183:	add    BYTE PTR [rbx+rdi*1+0x10001],bh
   14002618a:	add    BYTE PTR [rax],al
   14002618c:	retf   
   14002618d:	cmp    eax,DWORD PTR [rcx]
   14002618f:	add    BYTE PTR [rdx],al
   140026191:	add    BYTE PTR [rax],al
   140026193:	add    dl,dh
   140026195:	cmp    eax,DWORD PTR [rcx]
   140026197:	add    bh,bh
   140026199:	(bad)  
   14002619a:	(bad)  
   14002619b:	inc    DWORD PTR [rcx]
   14002619d:	or     al,BYTE PTR [rax+rax*1]
   1400261a0:	or     dh,BYTE PTR [rsi+rax*1]
   1400261a3:	add    BYTE PTR [rdx],cl
   1400261a5:	xor    al,BYTE PTR [rsi]
   1400261a7:	jo     0x1400261aa
   1400261a9:	(bad)  
   1400261aa:	add    al,BYTE PTR [rax]
   1400261ac:	(bad)  
   1400261ad:	xor    al,BYTE PTR [rdx]
   1400261af:	push   rax
   1400261b0:	adc    DWORD PTR [rip+0x6425000a],esp        # 0x1a42761c0
   1400261b6:	adc    BYTE PTR [rax],al
   1400261b8:	sbb    eax,0x18000f54
   1400261bd:	xor    al,0xe
   1400261bf:	add    BYTE PTR [rdx],cl
   1400261c1:	xchg   edx,eax
   1400261c2:	(bad)  
   1400261c3:	rol    BYTE PTR [rax+rax*8],1
   1400261c6:	add    dh,BYTE PTR [rax-0x32]
   1400261c9:	add    DWORD PTR ds:[rax],eax
   1400261cc:	loopne 0x1400261d4
   1400261ce:	add    al,BYTE PTR [rax]
   1400261d0:	(bad)  
   1400261d1:	(bad)  
   1400261d2:	(bad)  
   1400261d3:	push   QWORD PTR [rax-0xfffe61]
   1400261d9:	(bad)  
   1400261da:	(bad)  
   1400261db:	call   rax
   1400261dd:	lahf   
   1400261de:	add    DWORD PTR [rax],eax
   1400261e0:	jo     0x14002621e
   1400261e2:	add    DWORD PTR [rax],eax
   1400261e4:	(bad)  
   1400261e5:	(bad)  
   1400261e6:	(bad)  
   1400261e7:	push   QWORD PTR [rax]
   1400261e9:	cmp    eax,0x1
   1400261ee:	add    BYTE PTR [rax],al
   1400261f0:	rex.B cmp eax,0xffff0001
   1400261f6:	(bad)  
   1400261f7:	(bad)  
   1400261f8:	in     al,dx
   1400261f9:	cmp    eax,0x10001
   1400261fe:	add    BYTE PTR [rax],al
   140026200:	cli    
   140026201:	cmp    eax,0xffff0001
   140026206:	(bad)  
   140026207:	inc    DWORD PTR [rcx]
   140026209:	clts   
   14002620b:	add    BYTE PTR [rdi],cl
   14002620d:	fs (bad) 
   14002620f:	add    BYTE PTR [rdi],cl
   140026211:	xor    al,0x6
   140026213:	add    BYTE PTR [rdi],cl
   140026215:	xor    cl,BYTE PTR [rbx]
   140026217:	jo     0x14002621a
   140026219:	sbb    DWORD PTR [rdx],ecx
   14002621b:	add    BYTE PTR [rcx],bl
   14002621d:	je     0x140026228
   14002621f:	add    BYTE PTR [rcx],bl
   140026221:	or     BYTE PTR fs:[rax],al
   140026224:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140026228:	sbb    DWORD PTR [rsi+rax*1],esi
   14002622b:	add    BYTE PTR [rcx],bl
   14002622d:	xor    dl,BYTE PTR [rip+0x20601c0]        # 0x1420863f3
   140026233:	add    BYTE PTR [rsi],al
   140026235:	xor    al,BYTE PTR [rdx]
   140026237:	xor    BYTE PTR [rcx],dl
   140026239:	(bad)  
   14002623a:	add    al,BYTE PTR [rax]
   14002623c:	(bad)  
   14002623d:	xor    al,BYTE PTR [rdx]
   14002623f:	xor    BYTE PTR [rdx+0x46],dl
   140026242:	add    DWORD PTR [rax],eax
   140026244:	add    DWORD PTR [rax],eax
   140026246:	add    BYTE PTR [rax],al
   140026248:	rol    DWORD PTR [rax+0x1],cl
   14002624b:	add    BYTE PTR [rcx],bh
   14002624d:	add    DWORD PTR [r8],eax
   140026250:	jmp    0x1400263f4
   140026255:	add    BYTE PTR [rax],al
   140026257:	add    BYTE PTR [rcx],al
   140026259:	add    al,0x1
   14002625b:	add    BYTE PTR [rdx+riz*2],al
   14002625e:	add    BYTE PTR [rax],al
   140026260:	or     DWORD PTR [rdx],ecx
   140026262:	add    al,0x0
   140026264:	or     ah,BYTE PTR [rsi+rax*1+0x0]
   140026268:	or     dh,BYTE PTR [rdx]
   14002626a:	(bad)  
   14002626b:	jo     0x1400262bf
   14002626d:	rex.RX add DWORD PTR [rax],r8d
   140026270:	add    DWORD PTR [rax],eax
   140026272:	add    BYTE PTR [rax],al
   140026274:	(bad)  
   140026275:	add    DWORD PTR [r8],eax
   140026278:	sub    BYTE PTR [rbx+0x1],al
   14002627b:	add    BYTE PTR [rdx],al
   14002627d:	movabs al,ds:0x1709000143280001
   140026286:	(bad)  
   140026287:	add    BYTE PTR [rdi],dl
   140026289:	xor    al,0xd
   14002628b:	add    BYTE PTR [rdi],dl
   14002628d:	jb     0x1400262a2
   14002628f:	rcl    BYTE PTR [rcx],0x70
   140026292:	adc    BYTE PTR [rax+0x52],ah
   140026295:	rex.RX add DWORD PTR [rax],r8d
   140026298:	add    DWORD PTR [rax],eax
   14002629a:	add    BYTE PTR [rax],al
   14002629c:	jg     0x1400262e2
   14002629e:	add    DWORD PTR [rax],eax
   1400262a0:	cdq    
   1400262a1:	add    DWORD PTR [rax],r8d
   1400262a4:	(bad)  
   1400262a5:	movabs al,ds:0x1811000144990001
   1400262ae:	add    eax,0x14621800
   1400262b3:	rcl    BYTE PTR [rdx],0x70
   1400262b6:	adc    DWORD PTR [rax+0x10],esp
   1400262b9:	xor    BYTE PTR [rax],al
   1400262bb:	add    BYTE PTR [rdx+0x46],dl
   1400262be:	add    DWORD PTR [rax],eax
   1400262c0:	add    DWORD PTR [rax],eax
   1400262c2:	add    BYTE PTR [rax],al
   1400262c4:	fild   DWORD PTR [rcx+rax*1+0x0]
   1400262c8:	cld    
   1400262c9:	add    DWORD PTR [rax],r8d
   1400262cc:	pop    rbp
   1400262cd:	movabs al,ds:0xc01000000000001
   1400262d6:	add    al,BYTE PTR [rax]
   1400262d8:	or     al,0x1
   1400262da:	adc    DWORD PTR [rax],eax
   1400262dc:	or     DWORD PTR [rcx+rax*1],eax
   1400262df:	add    BYTE PTR [rdx+rax*2],al
   1400262e2:	add    BYTE PTR [rax],al
   1400262e4:	push   rdx
   1400262e5:	rex.RX add DWORD PTR [rax],r8d
   1400262e8:	add    DWORD PTR [rax],eax
   1400262ea:	add    BYTE PTR [rax],al
   1400262ec:	xlat   BYTE PTR ds:[rbx]
   1400262ed:	rex.RXB add DWORD PTR [r8],r8d
   1400262f0:	or     cl,BYTE PTR [rax+0x1]
   1400262f3:	add    BYTE PTR [rax+0xa0001a0],dl
   1400262f9:	add    QWORD PTR [rax],rax
   1400262fc:	add    DWORD PTR [rdx],ecx
   1400262fe:	add    al,0x0
   140026300:	or     dh,BYTE PTR [rax+rcx*1]
   140026303:	add    BYTE PTR [rdx],cl
   140026305:	xor    al,BYTE PTR [rsi]
   140026307:	jo     0x1400262d1
   140026309:	imul   eax,DWORD PTR [rdx],0x0
   14002630f:	add    BYTE PTR [rax],al
   140026311:	add    BYTE PTR [rax],al
   140026313:	add    ah,ch
   140026315:	jae    0x140026319
   140026317:	add    BYTE PTR [rax-0x4a],bl
   14002631a:	add    DWORD PTR [rax],eax
   14002631c:	mov    BYTE PTR [rbp+0x2],ah
	...
   140026327:	add    BYTE PTR [rax-0x77],cl
   14002632a:	add    al,BYTE PTR [rax]
   14002632c:	sbb    BYTE PTR [rdx+0x63e80001],dh
   140026332:	add    al,BYTE PTR [rax]
	...
   14002633c:	test   al,0x8a
   14002633e:	add    al,BYTE PTR [rax]
   140026340:	js     0x1400262f2
   140026342:	add    DWORD PTR [rax],eax
   140026344:	jo     0x1400263a9
   140026346:	add    al,BYTE PTR [rax]
	...
   140026350:	push   0x28d
   140026355:	mov    al,0x1
	...
   14002636f:	add    BYTE PTR [rsi-0x73],cl
   140026372:	add    al,BYTE PTR [rax]
   140026374:	add    BYTE PTR [rax],al
   140026376:	add    BYTE PTR [rax],al
   140026378:	cmp    BYTE PTR [rbp+0x2],cl
   14002637e:	add    BYTE PTR [rax],al
   140026380:	and    cl,BYTE PTR [rbp+0x2]
   140026386:	add    BYTE PTR [rax],al
   140026388:	adc    cl,BYTE PTR [rbp+0x2]
   14002638e:	add    BYTE PTR [rax],al
   140026390:	clc    
   140026391:	mov    WORD PTR [rdx],es
   140026393:	add    BYTE PTR [rax],al
   140026395:	add    BYTE PTR [rax],al
   140026397:	add    ah,ah
   140026399:	mov    WORD PTR [rdx],es
   14002639b:	add    BYTE PTR [rax],al
   14002639d:	add    BYTE PTR [rax],al
   14002639f:	add    dl,cl
   1400263a1:	mov    WORD PTR [rdx],es
   1400263a3:	add    BYTE PTR [rax],al
   1400263a5:	add    BYTE PTR [rax],al
   1400263a7:	add    BYTE PTR [rsi+0x28c],dh
   1400263ad:	add    BYTE PTR [rax],al
   1400263af:	add    BYTE PTR [rdx+0x28c],ah
   1400263b5:	add    BYTE PTR [rax],al
   1400263b7:	add    BYTE PTR [rsp+rcx*4+0x2],al
   1400263be:	add    BYTE PTR [rax],al
   1400263c0:	push   0x28c
   1400263c5:	add    BYTE PTR [rax],al
   1400263c7:	add    BYTE PTR [rsp+rcx*4+0x2],dl
   1400263cb:	add    BYTE PTR [rax],al
   1400263cd:	add    BYTE PTR [rax],al
   1400263cf:	add    BYTE PTR [rax-0x74],al
   1400263d2:	add    al,BYTE PTR [rax]
   1400263d4:	add    BYTE PTR [rax],al
   1400263d6:	add    BYTE PTR [rax],al
   1400263d8:	cmp    BYTE PTR [rdx+rax*1+0x0],cl
	...
   1400263e7:	add    BYTE PTR [rdx],ah
   1400263e9:	mov    WORD PTR [rdx],es
   1400263eb:	add    BYTE PTR [rax],al
   1400263ed:	add    BYTE PTR [rax],al
   1400263ef:	add    ah,ch
   1400263f1:	mov    eax,DWORD PTR [rdx]
   1400263f3:	add    BYTE PTR [rax],al
   1400263f5:	add    BYTE PTR [rax],al
   1400263f7:	add    al,bl
   1400263f9:	mov    eax,DWORD PTR [rdx]
   1400263fb:	add    BYTE PTR [rax],al
   1400263fd:	add    BYTE PTR [rax],al
   1400263ff:	add    dh,al
   140026401:	mov    eax,DWORD PTR [rdx]
   140026403:	add    BYTE PTR [rax],al
   140026405:	add    BYTE PTR [rax],al
   140026407:	add    BYTE PTR [rbx+rcx*4+0x2],bh
   14002640e:	add    BYTE PTR [rax],al
   140026410:	mov    al,0x8b
   140026412:	add    al,BYTE PTR [rax]
   140026414:	add    BYTE PTR [rax],al
   140026416:	add    BYTE PTR [rax],al
   140026418:	pushf  
   140026419:	mov    eax,DWORD PTR [rdx]
   14002641b:	add    BYTE PTR [rax],al
   14002641d:	add    BYTE PTR [rax],al
   14002641f:	add    BYTE PTR [rsi+0x28b],al
   140026425:	add    BYTE PTR [rax],al
   140026427:	add    BYTE PTR [rax-0x75],bh
   14002642a:	add    al,BYTE PTR [rax]
   14002642c:	add    BYTE PTR [rax],al
   14002642e:	add    BYTE PTR [rax],al
   140026430:	ins    BYTE PTR es:[rdi],dx
   140026431:	mov    eax,DWORD PTR [rdx]
   140026433:	add    BYTE PTR [rax],al
   140026435:	add    BYTE PTR [rax],al
   140026437:	add    BYTE PTR [rax-0x75],ah
   14002643a:	add    al,BYTE PTR [rax]
   14002643c:	add    BYTE PTR [rax],al
   14002643e:	add    BYTE PTR [rax],al
   140026440:	pop    rax
   140026441:	mov    eax,DWORD PTR [rdx]
   140026443:	add    BYTE PTR [rax],al
   140026445:	add    BYTE PTR [rax],al
   140026447:	add    BYTE PTR [rsi-0x75],cl
   14002644a:	add    al,BYTE PTR [rax]
   14002644c:	add    BYTE PTR [rax],al
   14002644e:	add    BYTE PTR [rax],al
   140026450:	rex.RX mov r8d,DWORD PTR [rdx]
   140026453:	add    BYTE PTR [rax],al
   140026455:	add    BYTE PTR [rax],al
   140026457:	add    BYTE PTR [rax],bh
   140026459:	mov    eax,DWORD PTR [rdx]
   14002645b:	add    BYTE PTR [rax],al
   14002645d:	add    BYTE PTR [rax],al
   14002645f:	add    BYTE PTR [rax],ch
   140026461:	mov    eax,DWORD PTR [rdx]
   140026463:	add    BYTE PTR [rax],al
   140026465:	add    BYTE PTR [rax],al
   140026467:	add    BYTE PTR [rdx],bl
   140026469:	mov    eax,DWORD PTR [rdx]
   14002646b:	add    BYTE PTR [rax],al
   14002646d:	add    BYTE PTR [rax],al
   14002646f:	add    BYTE PTR [rax],cl
   140026471:	mov    eax,DWORD PTR [rdx]
   140026473:	add    BYTE PTR [rax],al
   140026475:	add    BYTE PTR [rax],al
   140026477:	add    dh,bh
   140026479:	mov    al,BYTE PTR [rdx]
   14002647b:	add    BYTE PTR [rax],al
   14002647d:	add    BYTE PTR [rax],al
   14002647f:	add    dh,dh
   140026481:	mov    al,BYTE PTR [rdx]
   140026483:	add    BYTE PTR [rax],al
   140026485:	add    BYTE PTR [rax],al
   140026487:	add    ah,ah
   140026489:	mov    al,BYTE PTR [rdx]
   14002648b:	add    BYTE PTR [rax],al
   14002648d:	add    BYTE PTR [rax],al
   14002648f:	add    dh,dl
   140026491:	mov    al,BYTE PTR [rdx]
   140026493:	add    BYTE PTR [rax],al
   140026495:	add    BYTE PTR [rax],al
   140026497:	add    ah,cl
   140026499:	mov    al,BYTE PTR [rdx]
   14002649b:	add    BYTE PTR [rax],al
   14002649d:	add    BYTE PTR [rax],al
   14002649f:	add    BYTE PTR [rdx+rcx*4+0x2],dh
   1400264a6:	add    BYTE PTR [rax],al
   1400264a8:	mov    WORD PTR [rdx+0x2],cs
   1400264ae:	add    BYTE PTR [rax],al
   1400264b0:	(bad)  
   1400264b1:	mov    al,BYTE PTR [rdx]
   1400264b3:	add    BYTE PTR [rax],al
   1400264b5:	add    BYTE PTR [rax],al
   1400264b7:	add    BYTE PTR [rdx-0x76],bh
   1400264ba:	add    al,BYTE PTR [rax]
   1400264bc:	add    BYTE PTR [rax],al
   1400264be:	add    BYTE PTR [rax],al
   1400264c0:	push   0x28a
   1400264c5:	add    BYTE PTR [rax],al
   1400264c7:	add    BYTE PTR [rsi-0x76],bl
   1400264ca:	add    al,BYTE PTR [rax]
   1400264cc:	add    BYTE PTR [rax],al
   1400264ce:	add    BYTE PTR [rax],al
   1400264d0:	push   rsp
   1400264d1:	mov    al,BYTE PTR [rdx]
   1400264d3:	add    BYTE PTR [rax],al
   1400264d5:	add    BYTE PTR [rax],al
   1400264d7:	add    BYTE PTR [rdx-0x76],al
   1400264da:	add    al,BYTE PTR [rax]
   1400264dc:	add    BYTE PTR [rax],al
   1400264de:	add    BYTE PTR [rax],al
   1400264e0:	cmp    BYTE PTR [rdx+0x2],cl
   1400264e6:	add    BYTE PTR [rax],al
   1400264e8:	mov    al,BYTE PTR cs:[rdx]
   1400264eb:	add    BYTE PTR [rax],al
   1400264ed:	add    BYTE PTR [rax],al
   1400264ef:	add    BYTE PTR [rdx+rcx*4],ah
   1400264f2:	add    al,BYTE PTR [rax]
   1400264f4:	add    BYTE PTR [rax],al
   1400264f6:	add    BYTE PTR [rax],al
   1400264f8:	sbb    cl,BYTE PTR [rdx+0x2]
   1400264fe:	add    BYTE PTR [rax],al
   140026500:	or     al,0x8a
   140026502:	add    al,BYTE PTR [rax]
   140026504:	add    BYTE PTR [rax],al
   140026506:	add    BYTE PTR [rax],al
   140026508:	cli    
   140026509:	mov    DWORD PTR [rdx],eax
   14002650b:	add    BYTE PTR [rax],al
   14002650d:	add    BYTE PTR [rax],al
   14002650f:	add    al,dh
   140026511:	mov    DWORD PTR [rdx],eax
   140026513:	add    BYTE PTR [rax],al
   140026515:	add    BYTE PTR [rax],al
   140026517:	add    dh,ah
   140026519:	mov    DWORD PTR [rdx],eax
   14002651b:	add    BYTE PTR [rax],al
   14002651d:	add    BYTE PTR [rax],al
   14002651f:	add    dl,bl
   140026521:	mov    DWORD PTR [rdx],eax
   140026523:	add    BYTE PTR [rax],al
   140026525:	add    BYTE PTR [rax],al
   140026527:	add    al,dl
   140026529:	mov    DWORD PTR [rdx],eax
   14002652b:	add    BYTE PTR [rax],al
   14002652d:	add    BYTE PTR [rax],al
   14002652f:	add    ah,al
   140026531:	mov    DWORD PTR [rdx],eax
   140026533:	add    BYTE PTR [rax],al
   140026535:	add    BYTE PTR [rax],al
   140026537:	add    BYTE PTR [rdx+0x289],bh
   14002653d:	add    BYTE PTR [rax],al
   14002653f:	add    BYTE PTR [rcx+rcx*4+0x2],ah
   140026546:	add    BYTE PTR [rax],al
   140026548:	(bad)  
   140026549:	mov    DWORD PTR [rdx],eax
   14002654b:	add    BYTE PTR [rax],al
   14002654d:	add    BYTE PTR [rax],al
   14002654f:	add    BYTE PTR [rdx+0x289],cl
   140026555:	add    BYTE PTR [rax],al
   140026557:	add    BYTE PTR [rcx+rcx*4+0x2],bh
   14002655b:	add    BYTE PTR [rax],al
   14002655d:	add    BYTE PTR [rax],al
   14002655f:	add    BYTE PTR [rdx-0x77],dh
   140026562:	add    al,BYTE PTR [rax]
   140026564:	add    BYTE PTR [rax],al
   140026566:	add    BYTE PTR [rax],al
   140026568:	pop    rsp
   140026569:	mov    DWORD PTR [rdx],eax
   14002656b:	add    BYTE PTR [rax],al
   14002656d:	add    BYTE PTR [rax],al
   14002656f:	add    BYTE PTR [rcx+rcx*4+0x2],dl
   140026573:	add    BYTE PTR [rax],al
   140026575:	add    BYTE PTR [rax],al
   140026577:	add    BYTE PTR [rdx-0x76],dh
   14002657a:	add    al,BYTE PTR [rax]
	...
   140026588:	(bad)  
   140026589:	ja     0x14002658d
   14002658b:	add    BYTE PTR [rax],al
   14002658d:	add    BYTE PTR [rax],al
   14002658f:	add    dl,ch
   140026591:	ja     0x140026595
   140026593:	add    BYTE PTR [rax],al
   140026595:	add    BYTE PTR [rax],al
   140026597:	add    BYTE PTR [rdx],bl
   140026599:	js     0x14002659d
   14002659b:	add    BYTE PTR [rax],al
   14002659d:	add    BYTE PTR [rax],al
   14002659f:	add    BYTE PTR [rsi+0x78],dl
   1400265a2:	add    al,BYTE PTR [rax]
   1400265a4:	add    BYTE PTR [rax],al
   1400265a6:	add    BYTE PTR [rax],al
   1400265a8:	jle    0x140026622
   1400265aa:	add    al,BYTE PTR [rax]
   1400265ac:	add    BYTE PTR [rax],al
   1400265ae:	add    BYTE PTR [rax],al
   1400265b0:	movabs ds:0xbe00000000000278,al
   1400265b9:	js     0x1400265bd
   1400265bb:	add    BYTE PTR [rax],al
   1400265bd:	add    BYTE PTR [rax],al
   1400265bf:	add    al,ch
   1400265c1:	js     0x1400265c5
   1400265c3:	add    BYTE PTR [rax],al
   1400265c5:	add    BYTE PTR [rax],al
   1400265c7:	add    BYTE PTR [rcx+rdi*2],cl
   1400265ca:	add    al,BYTE PTR [rax]
   1400265cc:	add    BYTE PTR [rax],al
   1400265ce:	add    BYTE PTR [rax],al
   1400265d0:	es jns 0x1400265d5
   1400265d3:	add    BYTE PTR [rax],al
   1400265d5:	add    BYTE PTR [rax],al
   1400265d7:	add    BYTE PTR [rsi+0x79],cl
   1400265da:	add    al,BYTE PTR [rax]
   1400265dc:	add    BYTE PTR [rax],al
   1400265de:	add    BYTE PTR [rax],al
   1400265e0:	jo     0x14002665b
   1400265e2:	add    al,BYTE PTR [rax]
   1400265e4:	add    BYTE PTR [rax],al
   1400265e6:	add    BYTE PTR [rax],al
   1400265e8:	mov    ?,WORD PTR [rcx+0x2]
   1400265eb:	add    BYTE PTR [rax],al
   1400265ed:	add    BYTE PTR [rax],al
   1400265ef:	add    BYTE PTR [rdx+0x279],ah
   1400265f5:	add    BYTE PTR [rax],al
   1400265f7:	add    al,ah
   1400265f9:	jns    0x1400265fd
   1400265fb:	add    BYTE PTR [rax],al
   1400265fd:	add    BYTE PTR [rax],al
   1400265ff:	add    BYTE PTR [rdx],al
   140026601:	jp     0x140026605
   140026603:	add    BYTE PTR [rax],al
   140026605:	add    BYTE PTR [rax],al
   140026607:	add    BYTE PTR [rdx],ch
   140026609:	jp     0x14002660d
   14002660b:	add    BYTE PTR [rax],al
   14002660d:	add    BYTE PTR [rax],al
   14002660f:	add    BYTE PTR [rax+0x7a],dl
   140026612:	add    al,BYTE PTR [rax]
   140026614:	add    BYTE PTR [rax],al
   140026616:	add    BYTE PTR [rax],al
   140026618:	xchg   BYTE PTR [rdx+0x2],bh
   14002661b:	add    BYTE PTR [rax],al
   14002661d:	add    BYTE PTR [rax],al
   14002661f:	add    BYTE PTR [rdx+0x27a],bl
   140026625:	add    BYTE PTR [rax],al
   140026627:	add    dh,al
   140026629:	jp     0x14002662d
   14002662b:	add    BYTE PTR [rax],al
   14002662d:	add    BYTE PTR [rax],al
   14002662f:	add    dl,dh
   140026631:	jp     0x140026635
   140026633:	add    BYTE PTR [rax],al
   140026635:	add    BYTE PTR [rax],al
   140026637:	add    BYTE PTR [rax],dl
   140026639:	jnp    0x14002663d
   14002663b:	add    BYTE PTR [rax],al
   14002663d:	add    BYTE PTR [rax],al
   14002663f:	add    BYTE PTR [rdx],bh
   140026641:	jnp    0x140026645
   140026643:	add    BYTE PTR [rax],al
   140026645:	add    BYTE PTR [rax],al
   140026647:	add    BYTE PTR [rax+0x7b],ah
   14002664a:	add    al,BYTE PTR [rax]
   14002664c:	add    BYTE PTR [rax],al
   14002664e:	add    BYTE PTR [rax],al
   140026650:	(bad)  
   140026651:	jnp    0x140026655
   140026653:	add    BYTE PTR [rax],al
   140026655:	add    BYTE PTR [rax],al
   140026657:	add    BYTE PTR [rax+0x27b],bl
   14002665d:	add    BYTE PTR [rax],al
   14002665f:	add    ah,cl
   140026661:	jnp    0x140026665
   140026663:	add    BYTE PTR [rax],al
   140026665:	add    BYTE PTR [rax],al
   140026667:	add    BYTE PTR [rax],bl
   140026669:	jl     0x14002666d
   14002666b:	add    BYTE PTR [rax],al
   14002666d:	add    BYTE PTR [rax],al
   14002666f:	add    BYTE PTR [rdx],bh
   140026671:	jl     0x140026675
   140026673:	add    BYTE PTR [rax],al
   140026675:	add    BYTE PTR [rax],al
   140026677:	add    BYTE PTR [rax+0x7c],ah
   14002667a:	add    al,BYTE PTR [rax]
   14002667c:	add    BYTE PTR [rax],al
   14002667e:	add    BYTE PTR [rax],al
   140026680:	(bad)  
   140026681:	jl     0x140026685
   140026683:	add    BYTE PTR [rax],al
   140026685:	add    BYTE PTR [rax],al
   140026687:	add    BYTE PTR [rax+0x27c],ch
   14002668d:	add    BYTE PTR [rax],al
   14002668f:	add    al,cl
   140026691:	jl     0x140026695
   140026693:	add    BYTE PTR [rax],al
   140026695:	add    BYTE PTR [rax],al
   140026697:	add    BYTE PTR [rax],al
   140026699:	jge    0x14002669d
   14002669b:	add    BYTE PTR [rax],al
   14002669d:	add    BYTE PTR [rax],al
   14002669f:	add    BYTE PTR [rax],ch
   1400266a1:	jge    0x1400266a5
   1400266a3:	add    BYTE PTR [rax],al
   1400266a5:	add    BYTE PTR [rax],al
   1400266a7:	add    BYTE PTR [rbp+rdi*2+0x2],al
   1400266ab:	add    BYTE PTR [rax],al
   1400266ad:	add    BYTE PTR [rax],al
   1400266af:	add    BYTE PTR [rbp+rdi*2+0x2],ch
   1400266b3:	add    BYTE PTR [rax],al
   1400266b5:	add    BYTE PTR [rax],al
   1400266b7:	add    BYTE PTR [rsi+0x27d],bl
   1400266bd:	add    BYTE PTR [rax],al
   1400266bf:	add    dl,al
   1400266c1:	jge    0x1400266c5
   1400266c3:	add    BYTE PTR [rax],al
   1400266c5:	add    BYTE PTR [rax],al
   1400266c7:	add    dh,dl
   1400266c9:	jge    0x1400266cd
   1400266cb:	add    BYTE PTR [rax],al
   1400266cd:	add    BYTE PTR [rax],al
   1400266cf:	add    BYTE PTR [rdx],cl
   1400266d1:	jle    0x1400266d5
   1400266d3:	add    BYTE PTR [rax],al
   1400266d5:	add    BYTE PTR [rax],al
   1400266d7:	add    BYTE PTR [rdx],ch
   1400266d9:	jle    0x1400266dd
   1400266db:	add    BYTE PTR [rax],al
   1400266dd:	add    BYTE PTR [rax],al
   1400266df:	add    BYTE PTR [rsi+rdi*2+0x2],dl
   1400266e3:	add    BYTE PTR [rax],al
   1400266e5:	add    BYTE PTR [rax],al
   1400266e7:	add    BYTE PTR [rsi+rdi*2+0x2],bh
   1400266eb:	add    BYTE PTR [rax],al
   1400266ed:	add    BYTE PTR [rax],al
   1400266ef:	add    BYTE PTR [rsi+0x27e],bl
   1400266f5:	add    BYTE PTR [rax],al
   1400266f7:	add    BYTE PTR [rsi+rdi*2+0x2],bh
   1400266fe:	add    BYTE PTR [rax],al
   140026700:	idiv   BYTE PTR [rsi+0x2]
   140026703:	add    BYTE PTR [rax],al
   140026705:	add    BYTE PTR [rax],al
   140026707:	add    BYTE PTR [rsi],dl
   140026709:	jg     0x14002670d
   14002670b:	add    BYTE PTR [rax],al
   14002670d:	add    BYTE PTR [rax],al
   14002670f:	add    BYTE PTR [rdx+0x7f],cl
   140026712:	add    al,BYTE PTR [rax]
   140026714:	add    BYTE PTR [rax],al
   140026716:	add    BYTE PTR [rax],al
   140026718:	data16 jg 0x14002671d
   14002671b:	add    BYTE PTR [rax],al
   14002671d:	add    BYTE PTR [rax],al
   14002671f:	add    BYTE PTR [rdx+0x27f],al
   140026725:	add    BYTE PTR [rax],al
   140026727:	add    ah,bl
   140026729:	jg     0x14002672d
   14002672b:	add    BYTE PTR [rax],al
   14002672d:	add    BYTE PTR [rax],al
   14002672f:	add    dl,bh
   140026731:	jg     0x140026735
   140026733:	add    BYTE PTR [rax],al
   140026735:	add    BYTE PTR [rax],al
   140026737:	add    BYTE PTR [rdx],dl
   140026739:	add    BYTE PTR [rdx],0x0
   14002673c:	add    BYTE PTR [rax],al
   14002673e:	add    BYTE PTR [rax],al
   140026740:	cmp    al,BYTE PTR [rax+0x2]
   140026746:	add    BYTE PTR [rax],al
   140026748:	(bad)  
   140026749:	add    BYTE PTR [rdx],0x0
   14002674c:	add    BYTE PTR [rax],al
   14002674e:	add    BYTE PTR [rax],al
   140026750:	mov    BYTE PTR [rdi+0x2],dh
   140026753:	add    BYTE PTR [rax],al
   140026755:	add    BYTE PTR [rax],al
   140026757:	add    BYTE PTR [rax+rax*4+0x2],ch
   14002675e:	add    BYTE PTR [rax],al
   140026760:	mov    BYTE PTR [rax+0x2],0x0
   140026767:	add    dl,dh
   140026769:	add    BYTE PTR [rdx],0x0
   14002676c:	add    BYTE PTR [rax],al
   14002676e:	add    BYTE PTR [rax],al
   140026770:	sbb    al,0x81
   140026772:	add    al,BYTE PTR [rax]
   140026774:	add    BYTE PTR [rax],al
   140026776:	add    BYTE PTR [rax],al
   140026778:	pop    rdx
   140026779:	add    DWORD PTR [rdx],0x0
   14002677f:	add    BYTE PTR [rdx+0x281],al
   140026785:	add    BYTE PTR [rax],al
   140026787:	add    BYTE PTR [rcx+rax*4+0x2],ah
   14002678e:	add    BYTE PTR [rax],al
   140026790:	int3   
   140026791:	add    DWORD PTR [rdx],0x0
   140026797:	add    dh,ah
   140026799:	add    DWORD PTR [rdx],0x0
   14002679f:	add    BYTE PTR [rdx],cl
   1400267a1:	(bad)  
   1400267a2:	add    al,BYTE PTR [rax]
   1400267a4:	add    BYTE PTR [rax],al
   1400267a6:	add    BYTE PTR [rax],al
   1400267a8:	and    al,BYTE PTR [rdx+0x2]
   1400267ae:	add    BYTE PTR [rax],al
   1400267b0:	cmp    BYTE PTR [rdx+0x2],al
   1400267b6:	add    BYTE PTR [rax],al
   1400267b8:	(bad)  
   1400267ba:	add    al,BYTE PTR [rax]
   1400267bc:	add    BYTE PTR [rax],al
   1400267be:	add    BYTE PTR [rax],al
   1400267c0:	sahf   
   1400267c1:	(bad)  
   1400267c2:	add    al,BYTE PTR [rax]
   1400267c4:	add    BYTE PTR [rax],al
   1400267c6:	add    BYTE PTR [rax],al
   1400267c8:	retf   0x282
   1400267cb:	add    BYTE PTR [rax],al
   1400267cd:	add    BYTE PTR [rax],al
   1400267cf:	add    dh,ch
   1400267d1:	(bad)  
   1400267d2:	add    al,BYTE PTR [rax]
   1400267d4:	add    BYTE PTR [rax],al
   1400267d6:	add    BYTE PTR [rax],al
   1400267d8:	(bad)  
   1400267d9:	add    DWORD PTR [rdx],0x0
   1400267dc:	add    BYTE PTR [rax],al
   1400267de:	add    BYTE PTR [rax],al
   1400267e0:	push   rax
   1400267e1:	add    DWORD PTR [rdx],0x0
   1400267e4:	add    BYTE PTR [rax],al
   1400267e6:	add    BYTE PTR [rax],al
   1400267e8:	jb     0x14002676d
   1400267ea:	add    al,BYTE PTR [rax]
   1400267ec:	add    BYTE PTR [rax],al
   1400267ee:	add    BYTE PTR [rax],al
   1400267f0:	nop
   1400267f1:	add    DWORD PTR [rdx],0x0
   1400267f4:	add    BYTE PTR [rax],al
   1400267f6:	add    BYTE PTR [rax],al
   1400267f8:	int3   
   1400267f9:	add    DWORD PTR [rdx],0x0
   1400267fc:	add    BYTE PTR [rax],al
   1400267fe:	add    BYTE PTR [rax],al
   140026800:	add    al,0x84
   140026802:	add    al,BYTE PTR [rax]
   140026804:	add    BYTE PTR [rax],al
   140026806:	add    BYTE PTR [rax],al
   140026808:	test   BYTE PTR cs:[rdx],al
   14002680b:	add    BYTE PTR [rax],al
   14002680d:	add    BYTE PTR [rax],al
   14002680f:	add    BYTE PTR [rsi-0x7c],cl
   140026812:	add    al,BYTE PTR [rax]
   140026814:	add    BYTE PTR [rax],al
   140026816:	add    BYTE PTR [rax],al
   140026818:	mov    es,WORD PTR [rdx+rax*1+0x0]
   14002681f:	add    BYTE PTR [rax+0x284],bh
   140026825:	add    BYTE PTR [rax],al
   140026827:	add    al,ch
   140026829:	test   BYTE PTR [rdx],al
   14002682b:	add    BYTE PTR [rax],al
   14002682d:	add    BYTE PTR [rax],al
   14002682f:	add    BYTE PTR [rax*4+0x2],dl
   140026836:	add    BYTE PTR [rax],al
   140026838:	cmp    al,0x85
   14002683a:	add    al,BYTE PTR [rax]
   14002683c:	add    BYTE PTR [rax],al
   14002683e:	add    BYTE PTR [rax],al
   140026840:	(bad)  
   140026841:	test   DWORD PTR [rdx],eax
   140026843:	add    BYTE PTR [rax],al
   140026845:	add    BYTE PTR [rax],al
   140026847:	add    BYTE PTR [rdx+0x285],dl
   14002684d:	add    BYTE PTR [rax],al
   14002684f:	add    BYTE PTR [rbp+rax*4+0x2],dh
   140026856:	add    BYTE PTR [rax],al
   140026858:	(bad)  
   140026859:	test   DWORD PTR [rdx],eax
   14002685b:	add    BYTE PTR [rax],al
   14002685d:	add    BYTE PTR [rax],al
   14002685f:	add    al,dh
   140026861:	test   DWORD PTR [rdx],eax
   140026863:	add    BYTE PTR [rax],al
   140026865:	add    BYTE PTR [rax],al
   140026867:	add    BYTE PTR [rax],dl
   140026869:	xchg   BYTE PTR [rdx],al
   14002686b:	add    BYTE PTR [rax],al
   14002686d:	add    BYTE PTR [rax],al
   14002686f:	add    BYTE PTR [rax],dh
   140026871:	xchg   BYTE PTR [rdx],al
   140026873:	add    BYTE PTR [rax],al
   140026875:	add    BYTE PTR [rax],al
   140026877:	add    BYTE PTR [rsi-0x7a],cl
   14002687a:	add    al,BYTE PTR [rax]
   14002687c:	add    BYTE PTR [rax],al
   14002687e:	add    BYTE PTR [rax],al
   140026880:	ins    BYTE PTR es:[rdi],dx
   140026881:	xchg   BYTE PTR [rdx],al
   140026883:	add    BYTE PTR [rax],al
   140026885:	add    BYTE PTR [rax],al
   140026887:	add    BYTE PTR [rdx+0x286],bh
   14002688d:	add    BYTE PTR [rax],al
   14002688f:	add    dl,ah
   140026891:	xchg   BYTE PTR [rdx],al
   140026893:	add    BYTE PTR [rax],al
   140026895:	add    BYTE PTR [rax],al
   140026897:	add    BYTE PTR [rax],cl
   140026899:	xchg   DWORD PTR [rdx],eax
   14002689b:	add    BYTE PTR [rax],al
   14002689d:	add    BYTE PTR [rax],al
   14002689f:	add    BYTE PTR [rsi],dh
   1400268a1:	xchg   DWORD PTR [rdx],eax
   1400268a3:	add    BYTE PTR [rax],al
   1400268a5:	add    BYTE PTR [rax],al
   1400268a7:	add    BYTE PTR [rsi-0x79],dl
   1400268aa:	add    al,BYTE PTR [rax]
   1400268ac:	add    BYTE PTR [rax],al
   1400268ae:	add    BYTE PTR [rax],al
   1400268b0:	xchg   esi,eax
   1400268b1:	xchg   DWORD PTR [rdx],eax
   1400268b3:	add    BYTE PTR [rax],al
   1400268b5:	add    BYTE PTR [rax],al
   1400268b7:	add    BYTE PTR [rdx+0x287],bh
   1400268bd:	add    BYTE PTR [rax],al
   1400268bf:	add    ah,bl
   1400268c1:	xchg   DWORD PTR [rdx],eax
   1400268c3:	add    BYTE PTR [rax],al
   1400268c5:	add    BYTE PTR [rax],al
   1400268c7:	add    BYTE PTR [rsi],al
   1400268c9:	mov    BYTE PTR [rdx],al
   1400268cb:	add    BYTE PTR [rax],al
   1400268cd:	add    BYTE PTR [rax],al
   1400268cf:	add    BYTE PTR [rax],dh
   1400268d1:	mov    BYTE PTR [rdx],al
   1400268d3:	add    BYTE PTR [rax],al
   1400268d5:	add    BYTE PTR [rax],al
   1400268d7:	add    BYTE PTR [rdx-0x78],ch
   1400268da:	add    al,BYTE PTR [rax]
   1400268dc:	add    BYTE PTR [rax],al
   1400268de:	add    BYTE PTR [rax],al
   1400268e0:	mov    cs,WORD PTR [rax+0x2]
   1400268e6:	add    BYTE PTR [rax],al
   1400268e8:	(bad)  
   1400268e9:	mov    BYTE PTR [rdx],al
   1400268eb:	add    BYTE PTR [rax],al
   1400268ed:	add    BYTE PTR [rax],al
   1400268ef:	add    al,dh
   1400268f1:	mov    BYTE PTR [rdx],al
   1400268f3:	add    BYTE PTR [rax],al
   1400268f5:	add    BYTE PTR [rax],al
   1400268f7:	add    BYTE PTR [rsi],dl
   1400268f9:	mov    DWORD PTR [rdx],eax
   1400268fb:	add    BYTE PTR [rax],al
   1400268fd:	add    BYTE PTR [rax],al
   1400268ff:	add    BYTE PTR [rdi+rsi*2+0x2],ah
   140026903:	add    BYTE PTR [rax],al
   140026905:	add    BYTE PTR [rax],al
   140026907:	add    BYTE PTR [rdi+rsi*2+0x2],cl
   14002690b:	add    BYTE PTR [rax],al
   14002690d:	add    BYTE PTR [rax],al
   14002690f:	add    BYTE PTR [rdi+rsi*2],ah
   140026912:	add    al,BYTE PTR [rax]
   140026914:	add    BYTE PTR [rax],al
   140026916:	add    BYTE PTR [rax],al
   140026918:	in     al,0x76
   14002691a:	add    al,BYTE PTR [rax]
   14002691c:	add    BYTE PTR [rax],al
   14002691e:	add    BYTE PTR [rax],al
   140026920:	(bad)  
   140026921:	jbe    0x140026925
   140026923:	add    BYTE PTR [rax],al
   140026925:	add    BYTE PTR [rax],al
   140026927:	add    BYTE PTR [rsi+rsi*2+0x2],al
   14002692e:	add    BYTE PTR [rax],al
   140026930:	pop    rdx
   140026931:	jbe    0x140026935
   140026933:	add    BYTE PTR [rax],al
   140026935:	add    BYTE PTR [rax],al
   140026937:	add    BYTE PTR [rax],cl
   140026939:	jbe    0x14002693d
   14002693b:	add    BYTE PTR [rax],al
   14002693d:	add    BYTE PTR [rax],al
   14002693f:	add    ah,ah
   140026941:	jne    0x140026945
   140026943:	add    BYTE PTR [rax],al
   140026945:	add    BYTE PTR [rax],al
   140026947:	add    al,al
   140026949:	jne    0x14002694d
   14002694b:	add    BYTE PTR [rax],al
   14002694d:	add    BYTE PTR [rax],al
   14002694f:	add    BYTE PTR [rdx+0x275],bl
   140026955:	add    BYTE PTR [rax],al
   140026957:	add    BYTE PTR [rsi+0x75],ch
   14002695a:	add    al,BYTE PTR [rax]
   14002695c:	add    BYTE PTR [rax],al
   14002695e:	add    BYTE PTR [rax],al
   140026960:	rex.WRX jne 0x140026965
   140026963:	add    BYTE PTR [rax],al
   140026965:	add    BYTE PTR [rax],al
   140026967:	add    BYTE PTR [rax],ch
   140026969:	jne    0x14002696d
   14002696b:	add    BYTE PTR [rax],al
   14002696d:	add    BYTE PTR [rax],al
   14002696f:	add    BYTE PTR [rdx],al
   140026971:	jne    0x140026975
   140026973:	add    BYTE PTR [rax],al
   140026975:	add    BYTE PTR [rax],al
   140026977:	add    ah,ah
   140026979:	je     0x14002697d
   14002697b:	add    BYTE PTR [rax],al
   14002697d:	add    BYTE PTR [rax],al
   14002697f:	add    dh,cl
   140026981:	je     0x140026985
   140026983:	add    BYTE PTR [rax],al
   140026985:	add    BYTE PTR [rax],al
   140026987:	add    BYTE PTR [rsi+0x274],cl
   14002698d:	add    BYTE PTR [rax],al
   14002698f:	add    BYTE PTR [rsp+rsi*2+0x2],dh
   140026993:	add    BYTE PTR [rax],al
   140026995:	add    BYTE PTR [rax],al
   140026997:	add    BYTE PTR [rsi+0x74],bl
   14002699a:	add    al,BYTE PTR [rax]
   14002699c:	add    BYTE PTR [rax],al
   14002699e:	add    BYTE PTR [rax],al
   1400269a0:	rex.X je 0x1400269a5
   1400269a3:	add    BYTE PTR [rax],al
   1400269a5:	add    BYTE PTR [rax],al
   1400269a7:	add    BYTE PTR [rsi],bl
   1400269a9:	je     0x1400269ad
   1400269ab:	add    BYTE PTR [rax],al
   1400269ad:	add    BYTE PTR [rax],al
   1400269af:	add    al,bh
   1400269b1:	jae    0x1400269b5
   1400269b3:	add    BYTE PTR [rax],al
   1400269b5:	add    BYTE PTR [rax],al
   1400269b7:	add    BYTE PTR [rsi+0x280],al
	...
   1400269c5:	add    BYTE PTR [rax],al
   1400269c7:	add    BYTE PTR [rax+0x273],dh
   1400269cd:	add    BYTE PTR [rax],al
   1400269cf:	add    BYTE PTR [rbx+rsi*2+0x2],ch
   1400269d3:	add    BYTE PTR [rax],al
   1400269d5:	add    BYTE PTR [rax],al
   1400269d7:	add    BYTE PTR [rdx+0x73],cl
   1400269da:	add    al,BYTE PTR [rax]
   1400269dc:	add    BYTE PTR [rax],al
   1400269de:	add    BYTE PTR [rax],al
   1400269e0:	sbb    al,0x73
   1400269e2:	add    al,BYTE PTR [rax]
   1400269e4:	add    BYTE PTR [rax],al
   1400269e6:	add    BYTE PTR [rax],al
   1400269e8:	out    dx,al
   1400269e9:	jb     0x1400269ed
   1400269eb:	add    BYTE PTR [rax],al
   1400269ed:	add    BYTE PTR [rax],al
   1400269ef:	add    BYTE PTR [rdx+rsi*2+0x2],bh
   1400269f6:	add    BYTE PTR [rax],al
   1400269f8:	mov    ?,WORD PTR [rdx+0x2]
   1400269fb:	add    BYTE PTR [rax],al
   1400269fd:	add    BYTE PTR [rax],al
   1400269ff:	add    BYTE PTR [rsi+0x72],ch
   140026a02:	add    al,BYTE PTR [rax]
   140026a04:	add    BYTE PTR [rax],al
   140026a06:	add    BYTE PTR [rax],al
   140026a08:	ss jb  0x140026a0d
   140026a0b:	add    BYTE PTR [rax],al
   140026a0d:	add    BYTE PTR [rax],al
   140026a0f:	add    dh,ch
   140026a11:	jno    0x140026a15
   140026a13:	add    BYTE PTR [rax],al
   140026a15:	add    BYTE PTR [rax],al
   140026a17:	add    BYTE PTR [rdx+0x271],ch
   140026a1d:	add    BYTE PTR [rax],al
   140026a1f:	add    BYTE PTR [rax+0x71],dh
   140026a22:	add    al,BYTE PTR [rax]
   140026a24:	add    BYTE PTR [rax],al
   140026a26:	add    BYTE PTR [rax],al
   140026a28:	push   rax
   140026a29:	jno    0x140026a2d
   140026a2b:	add    BYTE PTR [rax],al
   140026a2d:	add    BYTE PTR [rax],al
   140026a2f:	add    BYTE PTR [rdx],dh
   140026a31:	jno    0x140026a35
   140026a33:	add    BYTE PTR [rax],al
   140026a35:	add    BYTE PTR [rax],al
   140026a37:	add    BYTE PTR [rax],al
   140026a39:	jno    0x140026a3d
   140026a3b:	add    BYTE PTR [rax],al
   140026a3d:	add    BYTE PTR [rax],al
   140026a3f:	add    ah,dl
   140026a41:	jo     0x140026a45
   140026a43:	add    BYTE PTR [rax],al
   140026a45:	add    BYTE PTR [rax],al
   140026a47:	add    BYTE PTR [rdx+0x270],ch
   140026a4d:	add    BYTE PTR [rax],al
   140026a4f:	add    BYTE PTR [rax+0x70],ch
   140026a52:	add    al,BYTE PTR [rax]
   140026a54:	add    BYTE PTR [rax],al
   140026a56:	add    BYTE PTR [rax],al
   140026a58:	es jo  0x140026a5d
   140026a5b:	add    BYTE PTR [rax],al
   140026a5d:	add    BYTE PTR [rax],al
   140026a5f:	add    dh,ah
   140026a61:	outs   dx,DWORD PTR ds:[rsi]
   140026a62:	add    al,BYTE PTR [rax]
   140026a64:	add    BYTE PTR [rax],al
   140026a66:	add    BYTE PTR [rax],al
   140026a68:	mov    al,0x6f
   140026a6a:	add    al,BYTE PTR [rax]
   140026a6c:	add    BYTE PTR [rax],al
   140026a6e:	add    BYTE PTR [rax],al
   140026a70:	xchg   BYTE PTR [rdi+0x2],ch
   140026a73:	add    BYTE PTR [rax],al
   140026a75:	add    BYTE PTR [rax],al
   140026a77:	add    BYTE PTR [rdx+0x6f],bl
   140026a7a:	add    al,BYTE PTR [rax]
   140026a7c:	add    BYTE PTR [rax],al
   140026a7e:	add    BYTE PTR [rax],al
   140026a80:	and    ch,BYTE PTR [rdi+0x2]
   140026a83:	add    BYTE PTR [rax],al
   140026a85:	add    BYTE PTR [rax],al
   140026a87:	add    al,ch
   140026a89:	outs   dx,BYTE PTR ds:[rsi]
   140026a8a:	add    al,BYTE PTR [rax]
   140026a8c:	add    BYTE PTR [rax],al
   140026a8e:	add    BYTE PTR [rax],al
   140026a90:	shr    BYTE PTR [rsi+0x2],0x0
   140026a94:	add    BYTE PTR [rax],al
   140026a96:	add    BYTE PTR [rax],al
   140026a98:	mov    BYTE PTR [rsi+0x2],ch
   140026a9b:	add    BYTE PTR [rax],al
   140026a9d:	add    BYTE PTR [rax],al
   140026a9f:	add    BYTE PTR [rsi+rbp*2],dh
   140026aa2:	add    al,BYTE PTR [rax]
   140026aa4:	add    BYTE PTR [rax],al
   140026aa6:	add    BYTE PTR [rax],al
   140026aa8:	lock ins DWORD PTR es:[rdi],dx
   140026aaa:	add    al,BYTE PTR [rax]
   140026aac:	add    BYTE PTR [rax],al
   140026aae:	add    BYTE PTR [rax],al
   140026ab0:	mov    ah,0x6d
   140026ab2:	add    al,BYTE PTR [rax]
   140026ab4:	add    BYTE PTR [rax],al
   140026ab6:	add    BYTE PTR [rax],al
   140026ab8:	jbe    0x140026b27
   140026aba:	add    al,BYTE PTR [rax]
   140026abc:	add    BYTE PTR [rax],al
   140026abe:	add    BYTE PTR [rax],al
   140026ac0:	ss ins DWORD PTR es:[rdi],dx
   140026ac2:	add    al,BYTE PTR [rax]
   140026ac4:	add    BYTE PTR [rax],al
   140026ac6:	add    BYTE PTR [rax],al
   140026ac8:	add    BYTE PTR [rbp+0x2],ch
   140026acb:	add    BYTE PTR [rax],al
   140026acd:	add    BYTE PTR [rax],al
   140026acf:	add    ah,al
   140026ad1:	ins    BYTE PTR es:[rdi],dx
   140026ad2:	add    al,BYTE PTR [rax]
   140026ad4:	add    BYTE PTR [rax],al
   140026ad6:	add    BYTE PTR [rax],al
   140026ad8:	sub    BYTE PTR [rdx+rax*1+0x0],0x0
   140026add:	add    BYTE PTR [rax],al
   140026adf:	add    BYTE PTR [rsi],bh
   140026ae1:	ins    BYTE PTR es:[rdi],dx
   140026ae2:	add    al,BYTE PTR [rax]
   140026ae4:	add    BYTE PTR [rax],al
   140026ae6:	add    BYTE PTR [rax],al
   140026ae8:	add    BYTE PTR [rdx+rax*1+0x0],ch
   140026aec:	add    BYTE PTR [rax],al
   140026aee:	add    BYTE PTR [rax],al
   140026af0:	mov    esi,0x26b
   140026af5:	add    BYTE PTR [rax],al
   140026af7:	add    BYTE PTR [rdx+0x26b],dl
   140026afd:	add    BYTE PTR [rax],al
   140026aff:	add    BYTE PTR [rbx+rbp*2+0x2],ah
   140026b03:	add    BYTE PTR [rax],al
   140026b05:	add    BYTE PTR [rax],al
   140026b07:	add    BYTE PTR [rdx+0x6b],al
   140026b0a:	add    al,BYTE PTR [rax]
   140026b0c:	add    BYTE PTR [rax],al
   140026b0e:	add    BYTE PTR [rax],al
   140026b10:	and    BYTE PTR [rbx+0x2],ch
	...
   140026b1f:	add    BYTE PTR [rax+rax*1+0x3f],ah
   140026b23:	(bad)  
   140026b24:	xor    DWORD PTR [rcx+0x58],edx
   140026b27:	ins    DWORD PTR es:[rdi],dx
   140026b28:	ins    BYTE PTR es:[rdi],dx
   140026b29:	rex.R
   140026b2a:	gs data16 (bad) 
   140026b2d:	jne    0x140026b9b
   140026b2f:	je     0x140026b79
   140026b31:	(bad)  
   140026b32:	outs   dx,BYTE PTR ds:[rsi]
   140026b33:	fs ins BYTE PTR es:[rdi],dx
   140026b35:	gs jb  0x140026b78
   140026b38:	rex push rbp
   140026b3a:	rex.RB
   140026b3b:	rex.B
   140026b3c:	rex.B
   140026b3d:	rex pop rax
   140026b3f:	pop    rdx
   140026b40:	add    BYTE PTR [rax],al
   140026b42:	cmp    eax,0x303f3f00
   140026b47:	push   rcx
   140026b48:	pop    rax
   140026b49:	ins    DWORD PTR es:[rdi],dx
   140026b4a:	ins    BYTE PTR es:[rdi],dx
   140026b4b:	rex.R
   140026b4c:	gs data16 (bad) 
   140026b4f:	jne    0x140026bbd
   140026b51:	je     0x140026b9b
   140026b53:	(bad)  
   140026b54:	outs   dx,BYTE PTR ds:[rsi]
   140026b55:	fs ins BYTE PTR es:[rdi],dx
   140026b57:	gs jb  0x140026b9a
   140026b5a:	rex push rcx
   140026b5c:	rex.RB
   140026b5d:	rex.B
   140026b5e:	rex.B
   140026b5f:	rex pop rax
   140026b61:	pop    rdx
   140026b62:	add    BYTE PTR [rax],al
   140026b64:	xchg   ebx,eax
   140026b65:	add    DWORD PTR [rdi],edi
   140026b67:	jae    0x140026bdd
   140026b69:	(bad)  
   140026b6a:	jb     0x140026be0
   140026b6c:	rex.R outs dx,DWORD PTR ds:[rsi]
   140026b6e:	movsxd esi,DWORD PTR [rbp+0x6d]
   140026b71:	outs   dx,BYTE PTR gs:[rsi]
   140026b73:	je     0x140026bb5
   140026b75:	push   rcx
   140026b76:	pop    rax
   140026b77:	ins    DWORD PTR es:[rdi],dx
   140026b78:	ins    BYTE PTR es:[rdi],dx
   140026b79:	rex.R
   140026b7a:	gs data16 (bad) 
   140026b7d:	jne    0x140026beb
   140026b7f:	je     0x140026bc9
   140026b81:	(bad)  
   140026b82:	outs   dx,BYTE PTR ds:[rsi]
   140026b83:	fs ins BYTE PTR es:[rdi],dx
   140026b85:	gs jb  0x140026bc8
   140026b88:	rex push rbp
   140026b8a:	rex.RB
   140026b8b:	rex.B
   140026b8c:	pop    r15
   140026b8e:	rex.WRX pop rax
   140026b90:	pop    rdx
   140026b91:	add    bl,bl
   140026b93:	add    BYTE PTR [rdi],bh
   140026b95:	outs   dx,BYTE PTR gs:[rsi]
   140026b97:	rex.R outs dx,DWORD PTR fs:[rsi]
   140026b9a:	movsxd esi,DWORD PTR [rbp+0x6d]
   140026b9d:	outs   dx,BYTE PTR gs:[rsi]
   140026b9f:	je     0x140026be1
   140026ba1:	push   rcx
   140026ba2:	pop    rax
   140026ba3:	ins    DWORD PTR es:[rdi],dx
   140026ba4:	ins    BYTE PTR es:[rdi],dx
   140026ba5:	rex.R
   140026ba6:	gs data16 (bad) 
   140026ba9:	jne    0x140026c17
   140026bab:	je     0x140026bf5
   140026bad:	(bad)  
   140026bae:	outs   dx,BYTE PTR ds:[rsi]
   140026baf:	fs ins BYTE PTR es:[rdi],dx
   140026bb1:	gs jb  0x140026bf4
   140026bb4:	rex push rbp
   140026bb6:	rex.RB
   140026bb7:	rex.B
   140026bb8:	pop    r15
   140026bba:	rex.WRX pop rax
   140026bbc:	pop    rdx
   140026bbd:	add    BYTE PTR [rsi+0x74733f01],dl
   140026bc3:	(bad)  
   140026bc4:	jb     0x140026c3a
   140026bc6:	push   rax
   140026bc7:	jb     0x140026c2e
   140026bc9:	imul   di,WORD PTR [rax+0x4d],0x7061
   140026bcf:	jo     0x140026c3a
   140026bd1:	outs   dx,BYTE PTR ds:[rsi]
   140026bd2:	addr32 rex push rcx
   140026bd5:	pop    rax
   140026bd6:	ins    DWORD PTR es:[rdi],dx
   140026bd7:	ins    BYTE PTR es:[rdi],dx
   140026bd8:	rex.R
   140026bd9:	gs data16 (bad) 
   140026bdc:	jne    0x140026c4a
   140026bde:	je     0x140026c28
   140026be0:	(bad)  
   140026be1:	outs   dx,BYTE PTR ds:[rsi]
   140026be2:	fs ins BYTE PTR es:[rdi],dx
   140026be4:	gs jb  0x140026c27
   140026be7:	rex push rbp
   140026be9:	rex.RB
   140026bea:	rex.B
   140026beb:	pop    r15
   140026bed:	rex.WRX
   140026bee:	rex.B
   140026bef:	rex.RB
   140026bf0:	rex.X push rsi
   140026bf2:	push   rcx
   140026bf3:	push   rbx
   140026bf4:	je     0x140026c68
   140026bf6:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   140026bfd:	pop    rdx
   140026bfe:	add    BYTE PTR [rax],al
   140026c00:	fiadd  WORD PTR [rax]
   140026c02:	(bad)  
   140026c03:	outs   dx,BYTE PTR gs:[rsi]
   140026c05:	fs push rax
   140026c07:	jb     0x140026c6e
   140026c09:	imul   di,WORD PTR [rax+0x4d],0x7061
   140026c0f:	jo     0x140026c7a
   140026c11:	outs   dx,BYTE PTR ds:[rsi]
   140026c12:	addr32 rex push rcx
   140026c15:	pop    rax
   140026c16:	ins    DWORD PTR es:[rdi],dx
   140026c17:	ins    BYTE PTR es:[rdi],dx
   140026c18:	rex.R
   140026c19:	gs data16 (bad) 
   140026c1c:	jne    0x140026c8a
   140026c1e:	je     0x140026c68
   140026c20:	(bad)  
   140026c21:	outs   dx,BYTE PTR ds:[rsi]
   140026c22:	fs ins BYTE PTR es:[rdi],dx
   140026c24:	gs jb  0x140026c67
   140026c27:	rex push rbp
   140026c29:	rex.RB
   140026c2a:	rex.B
   140026c2b:	pop    r15
   140026c2d:	rex.WRX
   140026c2e:	rex.B
   140026c2f:	rex.RB
   140026c30:	rex.X push rsi
   140026c32:	push   rcx
   140026c33:	push   rbx
   140026c34:	je     0x140026ca8
   140026c36:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140026c3d:	add    dl,dh
   140026c3f:	add    BYTE PTR [rdi],bh
   140026c41:	imul   esp,DWORD PTR [rdi+0x6e],0x6261726f
   140026c48:	ins    BYTE PTR es:[rdi],dx
   140026c49:	gs push rdi
   140026c4b:	push   0x73657469
   140026c50:	jo     0x140026cb3
   140026c52:	movsxd esp,DWORD PTR [rbp+0x40]
   140026c55:	push   rcx
   140026c56:	pop    rax
   140026c57:	ins    DWORD PTR es:[rdi],dx
   140026c58:	ins    BYTE PTR es:[rdi],dx
   140026c59:	rex.R
   140026c5a:	gs data16 (bad) 
   140026c5d:	jne    0x140026ccb
   140026c5f:	je     0x140026ca9
   140026c61:	(bad)  
   140026c62:	outs   dx,BYTE PTR ds:[rsi]
   140026c63:	fs ins BYTE PTR es:[rdi],dx
   140026c65:	gs jb  0x140026ca8
   140026c68:	rex push rbp
   140026c6a:	rex.RB
   140026c6b:	rex.B
   140026c6c:	pop    r15
   140026c6e:	rex.WRX
   140026c6f:	rex.B
   140026c70:	rex.RB
   140026c71:	rex.X push rsi
   140026c73:	push   rcx
   140026c74:	push   rbx
   140026c75:	je     0x140026ce9
   140026c77:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140026c7e:	add    BYTE PTR [rax],al
   140026c80:	rex.WXB add QWORD PTR [r15],rdi
   140026c83:	jo     0x140026cf7
   140026c85:	outs   dx,DWORD PTR ds:[rsi]
   140026c86:	movsxd esp,DWORD PTR [rbp+0x73]
   140026c89:	jae    0x140026cf4
   140026c8b:	outs   dx,BYTE PTR ds:[rsi]
   140026c8c:	rex.WB outs dx,BYTE PTR ds:[esi]
   140026c8f:	jae    0x140026d05
   140026c91:	jb     0x140026d08
   140026c93:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140026c97:	outs   dx,BYTE PTR ds:[rsi]
   140026c98:	rex push rcx
   140026c9a:	pop    rax
   140026c9b:	ins    DWORD PTR es:[rdi],dx
   140026c9c:	ins    BYTE PTR es:[rdi],dx
   140026c9d:	rex.R
   140026c9e:	gs data16 (bad) 
   140026ca1:	jne    0x140026d0f
   140026ca3:	je     0x140026ced
   140026ca5:	(bad)  
   140026ca6:	outs   dx,BYTE PTR ds:[rsi]
   140026ca7:	fs ins BYTE PTR es:[rdi],dx
   140026ca9:	gs jb  0x140026cec
   140026cac:	rex push rbp
   140026cae:	rex.RB
   140026caf:	rex.B
   140026cb0:	pop    r15
   140026cb2:	rex.WRX
   140026cb3:	rex.B
   140026cb4:	rex.RB
   140026cb5:	rex.X push rsi
   140026cb7:	push   rcx
   140026cb8:	push   rbx
   140026cb9:	je     0x140026d2d
   140026cbb:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   140026cc2:	pop    rdx
   140026cc3:	add    BYTE PTR [rbp+0x6b733f01],cl
   140026cc9:	imul   esi,DWORD PTR [rax+0x70],0x6e456465
   140026cd0:	je     0x140026d3b
   140026cd2:	je     0x140026d4d
   140026cd4:	rex push rcx
   140026cd6:	pop    rax
   140026cd7:	ins    DWORD PTR es:[rdi],dx
   140026cd8:	ins    BYTE PTR es:[rdi],dx
   140026cd9:	rex.R
   140026cda:	gs data16 (bad) 
   140026cdd:	jne    0x140026d4b
   140026cdf:	je     0x140026d29
   140026ce1:	(bad)  
   140026ce2:	outs   dx,BYTE PTR ds:[rsi]
   140026ce3:	fs ins BYTE PTR es:[rdi],dx
   140026ce5:	gs jb  0x140026d28
   140026ce8:	rex push rbp
   140026cea:	rex.RB
   140026ceb:	rex.B
   140026cec:	pop    r15
   140026cee:	rex.WRX
   140026cef:	rex.B
   140026cf0:	rex.RB
   140026cf1:	rex.X push rsi
   140026cf3:	push   rcx
   140026cf4:	push   rbx
   140026cf5:	je     0x140026d69
   140026cf7:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140026cfe:	add    BYTE PTR [rax],al
   140026d00:	jrcxz  0x140026d02
   140026d02:	(bad)  
   140026d03:	gs jb  0x140026d78
   140026d06:	outs   dx,DWORD PTR ds:[rsi]
   140026d07:	jb     0x140026d5c
   140026d09:	je     0x140026d7d
   140026d0b:	imul   ebp,DWORD PTR [rsi+0x67],0x6d585140
   140026d12:	ins    BYTE PTR es:[rdi],dx
   140026d13:	rex.R
   140026d14:	gs data16 (bad) 
   140026d17:	jne    0x140026d85
   140026d19:	je     0x140026d63
   140026d1b:	(bad)  
   140026d1c:	outs   dx,BYTE PTR ds:[rsi]
   140026d1d:	fs ins BYTE PTR es:[rdi],dx
   140026d1f:	gs jb  0x140026d62
   140026d22:	rex push rbp
   140026d24:	rex.RB
   140026d25:	rex.X
   140026d26:	rex.B (bad) 
   140026d28:	push   r14
   140026d2a:	push   rcx
   140026d2b:	push   rbx
   140026d2c:	je     0x140026da0
   140026d2e:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140026d35:	add    BYTE PTR [rcx+0x61773f01],bh
   140026d3b:	jb     0x140026dab
   140026d3d:	imul   ebp,DWORD PTR [rsi+0x67],0x6d585140
   140026d44:	ins    BYTE PTR es:[rdi],dx
   140026d45:	rex.R
   140026d46:	gs data16 (bad) 
   140026d49:	jne    0x140026db7
   140026d4b:	je     0x140026d95
   140026d4d:	(bad)  
   140026d4e:	outs   dx,BYTE PTR ds:[rsi]
   140026d4f:	fs ins BYTE PTR es:[rdi],dx
   140026d51:	gs jb  0x140026d94
   140026d54:	rex push rbp
   140026d56:	rex.RB
   140026d57:	rex.B
   140026d58:	pop    r15
   140026d5a:	rex.WRX
   140026d5b:	rex.B
   140026d5c:	rex.RB
   140026d5d:	rex.X push rsi
   140026d5f:	push   rcx
   140026d60:	pop    rax
   140026d61:	ins    DWORD PTR es:[rdi],dx
   140026d62:	ins    BYTE PTR es:[rdi],dx
   140026d63:	push   rax
   140026d64:	(bad)  
   140026d65:	jb     0x140026dda
   140026d67:	gs rex.RB js 0x140026dce
   140026d6b:	gs jo  0x140026de2
   140026d6e:	imul   ebp,DWORD PTR [rdi+0x6e],0x5a404040
   140026d75:	add    cl,ah
   140026d77:	add    BYTE PTR [rdi],bh
   140026d79:	gs jb  0x140026dee
   140026d7c:	outs   dx,DWORD PTR ds:[rsi]
   140026d7d:	jb     0x140026dbf
   140026d7f:	push   rcx
   140026d80:	pop    rax
   140026d81:	ins    DWORD PTR es:[rdi],dx
   140026d82:	ins    BYTE PTR es:[rdi],dx
   140026d83:	rex.R
   140026d84:	gs data16 (bad) 
   140026d87:	jne    0x140026df5
   140026d89:	je     0x140026dd3
   140026d8b:	(bad)  
   140026d8c:	outs   dx,BYTE PTR ds:[rsi]
   140026d8d:	fs ins BYTE PTR es:[rdi],dx
   140026d8f:	gs jb  0x140026dd2
   140026d92:	rex push rbp
   140026d94:	rex.RB
   140026d95:	rex.B
   140026d96:	pop    r15
   140026d98:	rex.WRX
   140026d99:	rex.B
   140026d9a:	rex.RB
   140026d9b:	rex.X push rsi
   140026d9d:	push   rcx
   140026d9e:	pop    rax
   140026d9f:	ins    DWORD PTR es:[rdi],dx
   140026da0:	ins    BYTE PTR es:[rdi],dx
   140026da1:	push   rax
   140026da2:	(bad)  
   140026da3:	jb     0x140026e18
   140026da5:	gs rex.RB js 0x140026e0c
   140026da9:	gs jo  0x140026e20
   140026dac:	imul   ebp,DWORD PTR [rdi+0x6e],0x5a404040
   140026db3:	add    BYTE PTR [rcx],bh
   140026db5:	add    DWORD PTR [rdi],edi
   140026db7:	outs   dx,BYTE PTR ds:[rsi]
   140026db8:	outs   dx,DWORD PTR ds:[rsi]
   140026db9:	je     0x140026e1c
   140026dbb:	je     0x140026e26
   140026dbd:	outs   dx,DWORD PTR ds:[rsi]
   140026dbe:	outs   dx,BYTE PTR ds:[rsi]
   140026dbf:	rex.R
   140026dc0:	movsxd ebp,DWORD PTR gs:[rax+rax*2+0x51]
   140026dc5:	pop    rax
   140026dc6:	ins    DWORD PTR es:[rdi],dx
   140026dc7:	ins    BYTE PTR es:[rdi],dx
   140026dc8:	rex.R
   140026dc9:	gs data16 (bad) 
   140026dcc:	jne    0x140026e3a
   140026dce:	je     0x140026e18
   140026dd0:	(bad)  
   140026dd1:	outs   dx,BYTE PTR ds:[rsi]
   140026dd2:	fs ins BYTE PTR es:[rdi],dx
   140026dd4:	gs jb  0x140026e17
   140026dd7:	rex push rbp
   140026dd9:	rex.RB
   140026dda:	rex.B
   140026ddb:	pop    r15
   140026ddd:	rex.WRX
   140026dde:	rex.B
   140026ddf:	rex.RB
   140026de0:	rex.X push rsi
   140026de2:	push   rcx
   140026de3:	push   rbx
   140026de4:	je     0x140026e58
   140026de6:	imul   ebp,DWORD PTR [rsi+0x67],0x30304040
   140026ded:	rex pop rdx
   140026def:	add    BYTE PTR [rcx+0x6e753f01],dh
   140026df5:	jo     0x140026e58
   140026df7:	jb     0x140026e6c
   140026df9:	gs rex.RB outs dx,BYTE PTR fs:[rsi]
   140026dfd:	je     0x140026e68
   140026dff:	je     0x140026e7a
   140026e01:	rex.R
   140026e02:	movsxd ebp,DWORD PTR gs:[rax+rax*2+0x51]
   140026e07:	pop    rax
   140026e08:	ins    DWORD PTR es:[rdi],dx
   140026e09:	ins    BYTE PTR es:[rdi],dx
   140026e0a:	rex.R
   140026e0b:	gs data16 (bad) 
   140026e0e:	jne    0x140026e7c
   140026e10:	je     0x140026e5a
   140026e12:	(bad)  
   140026e13:	outs   dx,BYTE PTR ds:[rsi]
   140026e14:	fs ins BYTE PTR es:[rdi],dx
   140026e16:	gs jb  0x140026e59
   140026e19:	rex push rbp
   140026e1b:	rex.RB
   140026e1c:	rex.B
   140026e1d:	pop    r15
   140026e1f:	rex.WRX
   140026e20:	rex.B
   140026e21:	rex.RB
   140026e22:	rex.X push rsi
   140026e24:	push   rcx
   140026e25:	push   rbx
   140026e26:	je     0x140026e9a
   140026e28:	imul   ebp,DWORD PTR [rsi+0x67],0x30304040
   140026e2f:	xor    BYTE PTR [rax+0x5a],al
   140026e32:	add    BYTE PTR [rax],al
   140026e34:	pop    rbp
   140026e35:	add    DWORD PTR [rdi],edi
   140026e37:	jb     0x140026e9e
   140026e39:	jae    0x140026eaa
   140026e3b:	ins    BYTE PTR es:[rdi],dx
   140026e3c:	jbe    0x140026ea3
   140026e3e:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140026e40:	je     0x140026eab
   140026e42:	je     0x140026ebd
   140026e44:	rex push rcx
   140026e46:	pop    rax
   140026e47:	ins    DWORD PTR es:[rdi],dx
   140026e48:	ins    BYTE PTR es:[rdi],dx
   140026e49:	rex.R
   140026e4a:	gs data16 (bad) 
   140026e4d:	jne    0x140026ebb
   140026e4f:	je     0x140026e99
   140026e51:	(bad)  
   140026e52:	outs   dx,BYTE PTR ds:[rsi]
   140026e53:	fs ins BYTE PTR es:[rdi],dx
   140026e55:	gs jb  0x140026e98
   140026e58:	rex push rbp
   140026e5a:	rex.RB
   140026e5b:	rex.B
   140026e5c:	pop    r15
   140026e5e:	rex.WRX
   140026e5f:	rex.B
   140026e60:	rex.RB
   140026e61:	rex.X push rsi
   140026e63:	push   rcx
   140026e64:	push   rbx
   140026e65:	je     0x140026ed9
   140026e67:	imul   ebp,DWORD PTR [rsi+0x67],0x41304040
   140026e6e:	rex.RB
   140026e6f:	push   r8
   140026e71:	rex.RB
   140026e72:	push   r14
   140026e74:	push   rcx
   140026e75:	pop    rax
   140026e76:	ins    DWORD PTR es:[rdi],dx
   140026e77:	ins    BYTE PTR es:[rdi],dx
   140026e78:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140026e7a:	jo     0x140026ef1
   140026e7c:	je     0x140026ed1
   140026e7e:	outs   dx,DWORD PTR ds:[rsi]
   140026e7f:	jne    0x140026ef3
   140026e81:	movsxd esp,DWORD PTR [rbp+0x40]
   140026e84:	rex
   140026e85:	rex pop rdx
   140026e87:	add    BYTE PTR [rdx+0x74733f01],dl
   140026e8d:	(bad)  
   140026e8e:	jb     0x140026f04
   140026e90:	rex.R push rsp
   140026e92:	rex.R
   140026e93:	rex push rcx
   140026e95:	pop    rax
   140026e96:	ins    DWORD PTR es:[rdi],dx
   140026e97:	ins    BYTE PTR es:[rdi],dx
   140026e98:	rex.R
   140026e99:	gs data16 (bad) 
   140026e9c:	jne    0x140026f0a
   140026e9e:	je     0x140026ee8
   140026ea0:	(bad)  
   140026ea1:	outs   dx,BYTE PTR ds:[rsi]
   140026ea2:	fs ins BYTE PTR es:[rdi],dx
   140026ea4:	gs jb  0x140026ee7
   140026ea7:	rex push rbp
   140026ea9:	rex.RB
   140026eaa:	rex.B
   140026eab:	pop    r15
   140026ead:	rex.WRX
   140026eae:	rex.B
   140026eaf:	rex.RB
   140026eb0:	rex.X push rsi
   140026eb2:	push   rcx
   140026eb3:	push   rbx
   140026eb4:	je     0x140026f28
   140026eb6:	imul   ebp,DWORD PTR [rsi+0x67],0x30304040
   140026ebd:	rex pop rdx
   140026ebf:	add    dl,bl
   140026ec1:	add    BYTE PTR [rdi],bh
   140026ec3:	outs   dx,BYTE PTR gs:[rsi]
   140026ec5:	fs rex.R push rsp
   140026ec8:	rex.R
   140026ec9:	rex push rcx
   140026ecb:	pop    rax
   140026ecc:	ins    DWORD PTR es:[rdi],dx
   140026ecd:	ins    BYTE PTR es:[rdi],dx
   140026ece:	rex.R
   140026ecf:	gs data16 (bad) 
   140026ed2:	jne    0x140026f40
   140026ed4:	je     0x140026f1e
   140026ed6:	(bad)  
   140026ed7:	outs   dx,BYTE PTR ds:[rsi]
   140026ed8:	fs ins BYTE PTR es:[rdi],dx
   140026eda:	gs jb  0x140026f1d
   140026edd:	rex push rbp
   140026edf:	rex.RB
   140026ee0:	rex.B
   140026ee1:	pop    r15
   140026ee3:	rex.WRX pop rax
   140026ee5:	pop    rdx
   140026ee6:	add    BYTE PTR [rax],al
   140026ee8:	xchg   ebp,eax
   140026ee9:	add    DWORD PTR [rdi],edi
   140026eeb:	jae    0x140026f61
   140026eed:	(bad)  
   140026eee:	jb     0x140026f64
   140026ef0:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140026ef2:	je     0x140026f5d
   140026ef4:	je     0x140026f6f
   140026ef6:	rex push rcx
   140026ef8:	pop    rax
   140026ef9:	ins    DWORD PTR es:[rdi],dx
   140026efa:	ins    BYTE PTR es:[rdi],dx
   140026efb:	rex.R
   140026efc:	gs data16 (bad) 
   140026eff:	jne    0x140026f6d
   140026f01:	je     0x140026f4b
   140026f03:	(bad)  
   140026f04:	outs   dx,BYTE PTR ds:[rsi]
   140026f05:	fs ins BYTE PTR es:[rdi],dx
   140026f07:	gs jb  0x140026f4a
   140026f0a:	rex push rbp
   140026f0c:	rex.RB
   140026f0d:	rex.B
   140026f0e:	pop    r15
   140026f10:	rex.WRX
   140026f11:	rex.B
   140026f12:	rex.RB
   140026f13:	rex.X push rsi
   140026f15:	push   rcx
   140026f16:	push   rbx
   140026f17:	je     0x140026f8b
   140026f19:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140026f20:	add    BYTE PTR [rax],al
   140026f22:	fld    QWORD PTR [rax]
   140026f24:	(bad)  
   140026f25:	outs   dx,BYTE PTR gs:[rsi]
   140026f27:	rex.RB outs dx,BYTE PTR fs:[rsi]
   140026f2a:	je     0x140026f95
   140026f2c:	je     0x140026fa7
   140026f2e:	rex push rcx
   140026f30:	pop    rax
   140026f31:	ins    DWORD PTR es:[rdi],dx
   140026f32:	ins    BYTE PTR es:[rdi],dx
   140026f33:	rex.R
   140026f34:	gs data16 (bad) 
   140026f37:	jne    0x140026fa5
   140026f39:	je     0x140026f83
   140026f3b:	(bad)  
   140026f3c:	outs   dx,BYTE PTR ds:[rsi]
   140026f3d:	fs ins BYTE PTR es:[rdi],dx
   140026f3f:	gs jb  0x140026f82
   140026f42:	rex push rbp
   140026f44:	rex.RB
   140026f45:	rex.B
   140026f46:	pop    r15
   140026f48:	rex.WRX
   140026f49:	rex.B
   140026f4a:	rex.RB
   140026f4b:	rex.X push rsi
   140026f4d:	push   rcx
   140026f4e:	push   rbx
   140026f4f:	je     0x140026fc3
   140026f51:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140026f58:	add    BYTE PTR [rax],al
   140026f5a:	xchg   ecx,eax
   140026f5b:	add    DWORD PTR [rdi],edi
   140026f5d:	jae    0x140026fd3
   140026f5f:	(bad)  
   140026f60:	jb     0x140026fd6
   140026f62:	rex.XB
   140026f63:	rex.R
   140026f64:	push   r12
   140026f66:	rex.B
   140026f67:	rex push rcx
   140026f69:	pop    rax
   140026f6a:	ins    DWORD PTR es:[rdi],dx
   140026f6b:	ins    BYTE PTR es:[rdi],dx
   140026f6c:	rex.R
   140026f6d:	gs data16 (bad) 
   140026f70:	jne    0x140026fde
   140026f72:	je     0x140026fbc
   140026f74:	(bad)  
   140026f75:	outs   dx,BYTE PTR ds:[rsi]
   140026f76:	fs ins BYTE PTR es:[rdi],dx
   140026f78:	gs jb  0x140026fbb
   140026f7b:	rex push rbp
   140026f7d:	rex.RB
   140026f7e:	rex.B
   140026f7f:	pop    r15
   140026f81:	rex.WRX pop rax
   140026f83:	pop    rdx
   140026f84:	add    BYTE PTR [rax],al
   140026f86:	fld    DWORD PTR [rax]
   140026f88:	(bad)  
   140026f89:	outs   dx,BYTE PTR gs:[rsi]
   140026f8b:	fs rex.XB
   140026f8d:	rex.R
   140026f8e:	push   r12
   140026f90:	rex.B
   140026f91:	rex push rcx
   140026f93:	pop    rax
   140026f94:	ins    DWORD PTR es:[rdi],dx
   140026f95:	ins    BYTE PTR es:[rdi],dx
   140026f96:	rex.R
   140026f97:	gs data16 (bad) 
   140026f9a:	jne    0x140027008
   140026f9c:	je     0x140026fe6
   140026f9e:	(bad)  
   140026f9f:	outs   dx,BYTE PTR ds:[rsi]
   140026fa0:	fs ins BYTE PTR es:[rdi],dx
   140026fa2:	gs jb  0x140026fe5
   140026fa5:	rex push rbp
   140026fa7:	rex.RB
   140026fa8:	rex.B
   140026fa9:	pop    r15
   140026fab:	rex.WRX pop rax
   140026fad:	pop    rdx
   140026fae:	add    BYTE PTR [rax],al
   140026fb0:	mov    ecx,0x6f633f00
   140026fb5:	ins    DWORD PTR es:[rdi],dx
   140026fb6:	ins    DWORD PTR es:[rdi],dx
   140026fb7:	outs   dx,BYTE PTR gs:[rsi]
   140026fb9:	je     0x140026ffb
   140026fbb:	push   rcx
   140026fbc:	pop    rax
   140026fbd:	ins    DWORD PTR es:[rdi],dx
   140026fbe:	ins    BYTE PTR es:[rdi],dx
   140026fbf:	rex.R
   140026fc0:	gs data16 (bad) 
   140026fc3:	jne    0x140027031
   140026fc5:	je     0x14002700f
   140026fc7:	(bad)  
   140026fc8:	outs   dx,BYTE PTR ds:[rsi]
   140026fc9:	fs ins BYTE PTR es:[rdi],dx
   140026fcb:	gs jb  0x14002700e
   140026fce:	rex push rbp
   140026fd0:	rex.RB
   140026fd1:	rex.B
   140026fd2:	pop    r15
   140026fd4:	rex.WRX
   140026fd5:	rex.B
   140026fd6:	rex.RB
   140026fd7:	rex.X push rsi
   140026fd9:	push   rcx
   140026fda:	push   rbx
   140026fdb:	je     0x14002704f
   140026fdd:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140026fe4:	add    BYTE PTR [rax],al
   140026fe6:	lods   al,BYTE PTR ds:[rsi]
   140026fe7:	add    BYTE PTR [rdi],bh
   140026fe9:	(bad)  
   140026fea:	je     0x140027060
   140026fec:	jb     0x140027057
   140026fee:	(bad)  
   140026fef:	jne    0x140027065
   140026ff1:	gs rex.R
   140026ff3:	movsxd ebp,DWORD PTR gs:[rax+rax*2+0x51]
   140026ff8:	pop    rax
   140026ff9:	ins    DWORD PTR es:[rdi],dx
   140026ffa:	ins    BYTE PTR es:[rdi],dx
   140026ffb:	rex.R
   140026ffc:	gs data16 (bad) 
   140026fff:	jne    0x14002706d
   140027001:	je     0x14002704b
   140027003:	(bad)  
   140027004:	outs   dx,BYTE PTR ds:[rsi]
   140027005:	fs ins BYTE PTR es:[rdi],dx
   140027007:	gs jb  0x14002704a
   14002700a:	rex push rbp
   14002700c:	rex.RB
   14002700d:	rex.B
   14002700e:	pop    r15
   140027010:	rex.WRX
   140027011:	rex.B
   140027012:	rex.RB
   140027013:	rex.X push rsi
   140027015:	push   rcx
   140027016:	push   rbx
   140027017:	je     0x14002708b
   140027019:	imul   ebp,DWORD PTR [rsi+0x67],0x30304040
   140027020:	xor    BYTE PTR [rax],dh
   140027022:	rex pop rdx
   140027024:	add    BYTE PTR [rax],al
   140027026:	cld    
   140027027:	add    BYTE PTR [rdi],bh
   140027029:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   140027030:	ins    BYTE PTR es:[rdi],dx
   140027031:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140027033:	je     0x14002709e
   140027035:	je     0x1400270b0
   140027037:	rex.R
   140027038:	movsxd ebp,DWORD PTR gs:[rax+rax*2+0x51]
   14002703d:	pop    rax
   14002703e:	ins    DWORD PTR es:[rdi],dx
   14002703f:	ins    BYTE PTR es:[rdi],dx
   140027040:	rex.R
   140027041:	gs data16 (bad) 
   140027044:	jne    0x1400270b2
   140027046:	je     0x140027090
   140027048:	(bad)  
   140027049:	outs   dx,BYTE PTR ds:[rsi]
   14002704a:	fs ins BYTE PTR es:[rdi],dx
   14002704c:	gs jb  0x14002708f
   14002704f:	rex push rbp
   140027051:	rex.RB
   140027052:	rex.B
   140027053:	pop    r15
   140027055:	rex.WRX
   140027056:	rex.B
   140027057:	rex.RB
   140027058:	rex.X push rsi
   14002705a:	push   rcx
   14002705b:	push   rbx
   14002705c:	je     0x1400270d0
   14002705e:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   140027065:	pop    rdx
   140027066:	add    BYTE PTR [rax],al
   140027068:	in     al,0x0
   14002706a:	(bad)  
   14002706b:	gs js  0x1400270e2
   14002706e:	gs jb  0x1400270df
   140027071:	(bad)  
   140027072:	ins    BYTE PTR es:[rdi],dx
   140027073:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140027075:	je     0x1400270e0
   140027077:	je     0x1400270f2
   140027079:	rex.R
   14002707a:	movsxd ebp,DWORD PTR gs:[rax+rax*2+0x51]
   14002707f:	pop    rax
   140027080:	ins    DWORD PTR es:[rdi],dx
   140027081:	ins    BYTE PTR es:[rdi],dx
   140027082:	rex.R
   140027083:	gs data16 (bad) 
   140027086:	jne    0x1400270f4
   140027088:	je     0x1400270d2
   14002708a:	(bad)  
   14002708b:	outs   dx,BYTE PTR ds:[rsi]
   14002708c:	fs ins BYTE PTR es:[rdi],dx
   14002708e:	gs jb  0x1400270d1
   140027091:	rex push rbp
   140027093:	rex.RB
   140027094:	rex.B
   140027095:	pop    r15
   140027097:	rex.WRX
   140027098:	rex.B
   140027099:	rex.RB
   14002709a:	rex.X push rsi
   14002709c:	push   rcx
   14002709d:	push   rbx
   14002709e:	je     0x140027112
   1400270a0:	imul   ebp,DWORD PTR [rsi+0x67],0x30304040
   1400270a7:	rex pop rdx
   1400270a9:	add    BYTE PTR [rbx],bl
   1400270ab:	add    DWORD PTR [rdi],edi
   1400270ad:	ins    BYTE PTR es:[rdi],dx
   1400270ae:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   1400270b5:	gs jb  0x1400270f8
   1400270b8:	push   rcx
   1400270b9:	pop    rax
   1400270ba:	ins    DWORD PTR es:[rdi],dx
   1400270bb:	ins    BYTE PTR es:[rdi],dx
   1400270bc:	push   rax
   1400270bd:	(bad)  
   1400270be:	jb     0x140027133
   1400270c0:	gs rex.RB js 0x140027127
   1400270c4:	gs jo  0x14002713b
   1400270c7:	imul   ebp,DWORD PTR [rdi+0x6e],0x45514040
   1400270ce:	rex.X
   1400270cf:	rex.B
   1400270d0:	rex.W pop rax
   1400270d2:	pop    rdx
   1400270d3:	add    BYTE PTR [rax+0x6f633f00],bh
   1400270d9:	ins    BYTE PTR es:[rdi],dx
   1400270da:	jne    0x140027149
   1400270dc:	outs   dx,BYTE PTR ds:[rsi]
   1400270dd:	rex.WRX jne 0x14002714d
   1400270e0:	(bad)  
   1400270e1:	gs jb  0x140027124
   1400270e4:	push   rcx
   1400270e5:	pop    rax
   1400270e6:	ins    DWORD PTR es:[rdi],dx
   1400270e7:	ins    BYTE PTR es:[rdi],dx
   1400270e8:	push   rax
   1400270e9:	(bad)  
   1400270ea:	jb     0x14002715f
   1400270ec:	gs rex.RB js 0x140027153
   1400270f0:	gs jo  0x140027167
   1400270f3:	imul   ebp,DWORD PTR [rdi+0x6e],0x45514040
   1400270fa:	rex.X
   1400270fb:	rex.B
   1400270fc:	rex.W pop rax
   1400270fe:	pop    rdx
   1400270ff:	add    BYTE PTR [rsi],bl
   140027101:	add    DWORD PTR [rdi],edi
   140027103:	ins    DWORD PTR es:[rdi],dx
   140027104:	gs jae 0x14002717a
   140027107:	(bad)  
   140027108:	addr32 gs rex push rcx
   14002710c:	pop    rax
   14002710d:	ins    DWORD PTR es:[rdi],dx
   14002710e:	ins    BYTE PTR es:[rdi],dx
   14002710f:	push   rax
   140027110:	(bad)  
   140027111:	jb     0x140027186
   140027113:	gs rex.RB js 0x14002717a
   140027117:	gs jo  0x14002718e
   14002711a:	imul   ebp,DWORD PTR [rdi+0x6e],0x45514040
   140027121:	rex.X
   140027122:	rex.B (bad) 
   140027124:	push   r14
   140027126:	push   rcx
   140027127:	push   rbx
   140027128:	je     0x14002719c
   14002712a:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140027131:	add    BYTE PTR [rdi+0x0],ah
   140027134:	(bad)  
   140027135:	(bad)  
   140027136:	xor    DWORD PTR [rcx+0x58],edx
   140027139:	ins    DWORD PTR es:[rdi],dx
   14002713a:	ins    BYTE PTR es:[rdi],dx
   14002713b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14002713d:	jo     0x1400271b4
   14002713f:	je     0x140027194
   140027141:	outs   dx,DWORD PTR ds:[rsi]
   140027142:	jne    0x1400271b6
   140027144:	movsxd esp,DWORD PTR [rbp+0x40]
   140027147:	rex push rbp
   140027149:	rex.RB
   14002714a:	rex.B
   14002714b:	rex.B
   14002714c:	rex pop rax
   14002714e:	pop    rdx
   14002714f:	add    BYTE PTR [rbp+0x0],ch
   140027152:	(bad)  
   140027153:	(bad)  
   140027154:	xor    DWORD PTR [rcx+0x58],edx
   140027157:	ins    DWORD PTR es:[rdi],dx
   140027158:	ins    BYTE PTR es:[rdi],dx
   140027159:	push   rbx
   14002715a:	imul   ebp,DWORD PTR [rbp+0x70],0x6552656c
   140027161:	(bad)  
   140027162:	fs gs jb 0x1400271a6
   140027166:	rex push rbp
   140027168:	rex.RB
   140027169:	rex.B
   14002716a:	rex.B
   14002716b:	rex pop rax
   14002716d:	pop    rdx
   14002716e:	add    BYTE PTR [rax],al
   140027170:	(bad)  
   140027171:	add    DWORD PTR [rdi],edi
   140027173:	jo     0x1400271d6
   140027175:	jb     0x1400271ea
   140027177:	gs rex push rcx
   14002717a:	pop    rax
   14002717b:	ins    DWORD PTR es:[rdi],dx
   14002717c:	ins    BYTE PTR es:[rdi],dx
   14002717d:	push   rbx
   14002717e:	imul   ebp,DWORD PTR [rbp+0x70],0x6552656c
   140027185:	(bad)  
   140027186:	fs gs jb 0x1400271ca
   14002718a:	rex push rbp
   14002718c:	rex.RB
   14002718d:	rex.B
   14002718e:	pop    r15
   140027190:	rex.WRX
   140027191:	rex.B
   140027192:	rex.RB
   140027193:	rex.X push rsi
   140027195:	push   rcx
   140027196:	pop    rax
   140027197:	ins    DWORD PTR es:[rdi],dx
   140027198:	ins    BYTE PTR es:[rdi],dx
   140027199:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14002719b:	jo     0x140027212
   14002719d:	je     0x1400271f2
   14002719f:	outs   dx,DWORD PTR ds:[rsi]
   1400271a0:	jne    0x140027214
   1400271a2:	movsxd esp,DWORD PTR [rbp+0x40]
   1400271a5:	rex
   1400271a6:	rex pop rdx
   1400271a8:	add    BYTE PTR [rax],al
   1400271aa:	jg     0x1400271ad
   1400271ac:	(bad)  
   1400271ad:	jae    0x140027214
   1400271af:	je     0x1400271f6
   1400271b1:	jb     0x140027225
   1400271b3:	outs   dx,DWORD PTR ds:[rsi]
   1400271b4:	jb     0x1400271fe
   1400271b6:	(bad)  
   1400271b7:	outs   dx,BYTE PTR ds:[rsi]
   1400271b8:	fs ins BYTE PTR es:[rdi],dx
   1400271ba:	gs jb  0x1400271fd
   1400271bd:	push   rcx
   1400271be:	pop    rax
   1400271bf:	ins    DWORD PTR es:[rdi],dx
   1400271c0:	ins    BYTE PTR es:[rdi],dx
   1400271c1:	push   rbx
   1400271c2:	imul   ebp,DWORD PTR [rbp+0x70],0x6552656c
   1400271c9:	(bad)  
   1400271ca:	fs gs jb 0x14002720e
   1400271ce:	rex push rbp
   1400271d0:	rex.RB
   1400271d1:	rex.B
   1400271d2:	pop    r8
   1400271d4:	push   rax
   1400271d5:	rex.RB
   1400271d6:	push   r14
   1400271d8:	push   rcx
   1400271d9:	pop    rax
   1400271da:	ins    DWORD PTR es:[rdi],dx
   1400271db:	ins    BYTE PTR es:[rdi],dx
   1400271dc:	rex.RB jb 0x140027251
   1400271df:	outs   dx,DWORD PTR ds:[rsi]
   1400271e0:	jb     0x14002722a
   1400271e2:	(bad)  
   1400271e3:	outs   dx,BYTE PTR ds:[rsi]
   1400271e4:	fs ins BYTE PTR es:[rdi],dx
   1400271e6:	gs jb  0x140027229
   1400271e9:	rex
   1400271ea:	rex pop rdx
   1400271ec:	add    BYTE PTR [rax],al
   1400271ee:	jbe    0x1400271f1
   1400271f0:	(bad)  
   1400271f1:	jae    0x140027258
   1400271f3:	je     0x140027238
   1400271f5:	outs   dx,DWORD PTR ds:[rsi]
   1400271f6:	outs   dx,BYTE PTR ds:[rsi]
   1400271f7:	je     0x14002725e
   1400271f9:	outs   dx,BYTE PTR ds:[rsi]
   1400271fa:	je     0x140027244
   1400271fc:	(bad)  
   1400271fd:	outs   dx,BYTE PTR ds:[rsi]
   1400271fe:	fs ins BYTE PTR es:[rdi],dx
   140027200:	gs jb  0x140027243
   140027203:	push   rcx
   140027204:	pop    rax
   140027205:	ins    DWORD PTR es:[rdi],dx
   140027206:	ins    BYTE PTR es:[rdi],dx
   140027207:	push   rbx
   140027208:	imul   ebp,DWORD PTR [rbp+0x70],0x6552656c
   14002720f:	(bad)  
   140027210:	fs gs jb 0x140027254
   140027214:	rex push rbp
   140027216:	rex.RB
   140027217:	rex.B
   140027218:	pop    r8
   14002721a:	push   rax
   14002721b:	rex.RB
   14002721c:	push   r14
   14002721e:	push   rcx
   14002721f:	pop    rax
   140027220:	ins    DWORD PTR es:[rdi],dx
   140027221:	ins    BYTE PTR es:[rdi],dx
   140027222:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140027224:	outs   dx,BYTE PTR ds:[rsi]
   140027225:	je     0x14002728c
   140027227:	outs   dx,BYTE PTR ds:[rsi]
   140027228:	je     0x140027272
   14002722a:	(bad)  
   14002722b:	outs   dx,BYTE PTR ds:[rsi]
   14002722c:	fs ins BYTE PTR es:[rdi],dx
   14002722e:	gs jb  0x140027271
   140027231:	rex
   140027232:	rex pop rdx
   140027234:	add    BYTE PTR [rax],al
   140027236:	add    BYTE PTR [rcx],0x3f
   140027239:	jae    0x1400272a0
   14002723b:	je     0x140027283
   14002723d:	gs (bad) 
   14002723f:	je     0x1400272b6
   140027241:	jb     0x1400272a8
   140027243:	rex push rcx
   140027245:	pop    rax
   140027246:	ins    DWORD PTR es:[rdi],dx
   140027247:	ins    BYTE PTR es:[rdi],dx
   140027248:	push   rbx
   140027249:	imul   ebp,DWORD PTR [rbp+0x70],0x6552656c
   140027250:	(bad)  
   140027251:	fs gs jb 0x140027295
   140027255:	rex push rbp
   140027257:	rex.RB
   140027258:	rex.B
   140027259:	pop    r8
   14002725b:	rex.B
   14002725c:	rex.RB
   14002725d:	rex.X push rsi
   14002725f:	push   rcx
   140027260:	push   rbx
   140027261:	je     0x1400272d5
   140027263:	imul   ebp,DWORD PTR [rsi+0x67],0x4e5f4040
   14002726a:	rex pop rdx
   14002726c:	add    BYTE PTR [rax],al
   14002726e:	rex.WRX add BYTE PTR [rdi],r15b
   140027271:	(bad)  
   140027272:	xor    BYTE PTR [rcx+0x58],dl
   140027275:	ins    DWORD PTR es:[rdi],dx
   140027276:	ins    BYTE PTR es:[rdi],dx
   140027277:	push   rbx
   140027278:	imul   ebp,DWORD PTR [rbp+0x70],0x6552656c
   14002727f:	(bad)  
   140027280:	fs gs jb 0x1400272c4
   140027284:	rex push rcx
   140027286:	rex.RB
   140027287:	rex.B
   140027288:	rex.B
   140027289:	rex pop rax
   14002728b:	pop    rdx
   14002728c:	add    BYTE PTR [rax],al
   14002728e:	rex.XB add BYTE PTR [r15],dil
   140027291:	(bad)  
   140027292:	xor    BYTE PTR [rcx+0x58],dl
   140027295:	ins    DWORD PTR es:[rdi],dx
   140027296:	ins    BYTE PTR es:[rdi],dx
   140027297:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140027299:	jo     0x140027310
   14002729b:	je     0x1400272f0
   14002729d:	outs   dx,DWORD PTR ds:[rsi]
   14002729e:	jne    0x140027312
   1400272a0:	movsxd esp,DWORD PTR [rbp+0x40]
   1400272a3:	rex push rcx
   1400272a5:	rex.RB
   1400272a6:	rex.B
   1400272a7:	rex.B
   1400272a8:	rex push rax
   1400272aa:	rex.RB
   1400272ab:	push   r14
   1400272ad:	push   rcx
   1400272ae:	rex.WB
   1400272af:	rex.WRXB
   1400272b0:	rex.R
   1400272b1:	gs jbe 0x14002731d
   1400272b4:	movsxd esp,DWORD PTR [rbp+0x40]
   1400272b7:	rex
   1400272b8:	rex pop rdx
   1400272ba:	add    BYTE PTR [rax],al
   1400272bc:	mov    dh,0x1
   1400272be:	(bad)  
   1400272bf:	jbe    0x140027322
   1400272c1:	ins    BYTE PTR es:[rdi],dx
   1400272c2:	jne    0x140027329
   1400272c4:	rex push rcx
   1400272c6:	pop    rax
   1400272c7:	ins    DWORD PTR es:[rdi],dx
   1400272c8:	ins    BYTE PTR es:[rdi],dx
   1400272c9:	rex.B je 0x140027340
   1400272cc:	jb     0x140027337
   1400272ce:	(bad)  
   1400272cf:	jne    0x140027345
   1400272d1:	gs jae 0x140027314
   1400272d4:	rex push rcx
   1400272d6:	rex.RB
   1400272d7:	rex.X
   1400272d8:	rex.B (bad) 
   1400272da:	push   r14
   1400272dc:	push   rcx
   1400272dd:	push   rbx
   1400272de:	je     0x140027352
   1400272e0:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   1400272e7:	rex.X push rsi
   1400272e9:	xor    al,BYTE PTR [rax+0x40]
   1400272ec:	pop    rdx
   1400272ed:	add    BYTE PTR [rdi+0x61763f01],dh
   1400272f3:	ins    BYTE PTR es:[rdi],dx
   1400272f4:	jne    0x14002735b
   1400272f6:	rex push rcx
   1400272f8:	pop    rax
   1400272f9:	ins    DWORD PTR es:[rdi],dx
   1400272fa:	ins    BYTE PTR es:[rdi],dx
   1400272fb:	rex.B je 0x140027372
   1400272fe:	jb     0x140027369
   140027300:	(bad)  
   140027301:	jne    0x140027377
   140027303:	gs jae 0x140027346
   140027306:	rex push rcx
   140027308:	rex.RB
   140027309:	rex.X
   14002730a:	rex.B (bad) 
   14002730c:	push   r14
   14002730e:	push   rcx
   14002730f:	push   rbx
   140027310:	je     0x140027384
   140027312:	imul   ebp,DWORD PTR [rsi+0x67],0x40484040
   140027319:	pop    rdx
   14002731a:	add    BYTE PTR [rax],al
   14002731c:	push   rdx
   14002731d:	add    DWORD PTR [rdi],edi
   14002731f:	jno    0x14002736f
   140027321:	(bad)  
   140027322:	ins    DWORD PTR es:[rdi],dx
   140027323:	gs rex push rcx
   140027326:	pop    rax
   140027327:	ins    DWORD PTR es:[rdi],dx
   140027328:	ins    BYTE PTR es:[rdi],dx
   140027329:	rex.B je 0x1400273a0
   14002732c:	jb     0x140027397
   14002732e:	(bad)  
   14002732f:	jne    0x1400273a5
   140027331:	gs jae 0x140027374
   140027334:	rex push rcx
   140027336:	rex.RB
   140027337:	rex.X
   140027338:	rex.B (bad) 
   14002733a:	push   r14
   14002733c:	push   rcx
   14002733d:	push   rbx
   14002733e:	je     0x1400273b2
   140027340:	imul   ebp,DWORD PTR [rsi+0x67],0x40484040
   140027347:	pop    rdx
   140027348:	add    BYTE PTR [rax],al
   14002734a:	sbb    BYTE PTR [rcx],al
   14002734c:	(bad)  
   14002734d:	ins    BYTE PTR es:[rdi],dx
   14002734e:	outs   dx,BYTE PTR gs:[rsi]
   140027350:	addr32 je 0x1400273bb
   140027353:	rex push rcx
   140027355:	pop    rax
   140027356:	ins    DWORD PTR es:[rdi],dx
   140027357:	ins    BYTE PTR es:[rdi],dx
   140027358:	rex.B je 0x1400273cf
   14002735b:	jb     0x1400273c6
   14002735d:	(bad)  
   14002735e:	jne    0x1400273d4
   140027360:	gs jae 0x1400273a3
   140027363:	rex push rcx
   140027365:	rex.RB
   140027366:	rex.X
   140027367:	rex.B
   140027368:	rex.W pop rax
   14002736a:	pop    rdx
   14002736b:	add    BYTE PTR [rbp+0x1],bh
   14002736e:	(bad)  
   14002736f:	jae    0x1400273d6
   140027371:	je     0x1400273b7
   140027373:	outs   dx,DWORD PTR ds:[rsi]
   140027374:	movsxd esi,DWORD PTR [rbp+0x6d]
   140027377:	outs   dx,BYTE PTR gs:[rsi]
   140027379:	je     0x1400273c7
   14002737b:	outs   dx,DWORD PTR ds:[rsi]
   14002737c:	movsxd esp,DWORD PTR [rcx+0x74]
   14002737f:	outs   dx,DWORD PTR ds:[rsi]
   140027380:	jb     0x1400273c2
   140027382:	push   rcx
   140027383:	pop    rax
   140027384:	ins    DWORD PTR es:[rdi],dx
   140027385:	ins    BYTE PTR es:[rdi],dx
   140027386:	rex.R
   140027387:	gs data16 (bad) 
   14002738a:	jne    0x1400273f8
   14002738c:	je     0x1400273d6
   14002738e:	(bad)  
   14002738f:	outs   dx,BYTE PTR ds:[rsi]
   140027390:	fs ins BYTE PTR es:[rdi],dx
   140027392:	gs jb  0x1400273d5
   140027395:	rex push rbp
   140027397:	rex.RB
   140027398:	rex.B
   140027399:	pop    r8
   14002739b:	push   rax
   14002739c:	rex.RB
   14002739d:	push   r14
   14002739f:	push   rcx
   1400273a0:	pop    rax
   1400273a1:	ins    DWORD PTR es:[rdi],dx
   1400273a2:	ins    BYTE PTR es:[rdi],dx
   1400273a3:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400273a5:	movsxd esp,DWORD PTR [rcx+0x74]
   1400273a8:	outs   dx,DWORD PTR ds:[rsi]
   1400273a9:	jb     0x1400273eb
   1400273ab:	rex
   1400273ac:	rex pop rdx
   1400273ae:	add    BYTE PTR [rax],al
   1400273b0:	mov    eax,0x61763f01
   1400273b5:	ins    BYTE PTR es:[rdi],dx
   1400273b6:	jne    0x14002741d
   1400273b8:	rex push rcx
   1400273ba:	pop    rax
   1400273bb:	ins    DWORD PTR es:[rdi],dx
   1400273bc:	ins    BYTE PTR es:[rdi],dx
   1400273bd:	rex.B je 0x140027434
   1400273c0:	jb     0x14002742b
   1400273c2:	(bad)  
   1400273c3:	jne    0x140027439
   1400273c5:	gs jae 0x140027408
   1400273c8:	rex push rcx
   1400273ca:	rex.RB
   1400273cb:	rex.X
   1400273cc:	rex.B (bad) 
   1400273ce:	push   r14
   1400273d0:	push   rcx
   1400273d1:	push   rbx
   1400273d2:	je     0x140027446
   1400273d4:	imul   ebp,DWORD PTR [rsi+0x67],0x51564040
   1400273db:	rex.WR (bad) 
   1400273dd:	je     0x140027448
   1400273df:	outs   dx,BYTE PTR ds:[rsi]
   1400273e0:	xor    DWORD PTR [rbx+0x74],edx
   1400273e3:	jb     0x14002744e
   1400273e5:	outs   dx,BYTE PTR ds:[rsi]
   1400273e6:	addr32 rex
   1400273e8:	rex
   1400273e9:	rex pop rdx
   1400273eb:	add    BYTE PTR [rcx+0x74],dl
   1400273ee:	xor    eax,0x2e6c6d58
   1400273f3:	fs ins BYTE PTR es:[rdi],dx
   1400273f5:	ins    BYTE PTR es:[rdi],dx
   1400273f6:	add    BYTE PTR [rax],al
   1400273f8:	rex.X adc dil,BYTE PTR [rdi]
   1400273fb:	jno    0x140027470
   1400273fd:	je     0x140027471
   1400273ff:	movsxd ebp,DWORD PTR [rbp+0x70]
   140027402:	rex
   140027403:	rex pop rcx
   140027405:	rex.B
   140027406:	rex.W
   140027407:	rex.B
   140027408:	rex.RB
   140027409:	rex.X push rsi
   14002740b:	push   rcx
   14002740c:	rex.X jns 0x140027483
   14002740f:	gs rex.B jb 0x140027485
   140027413:	(bad)  
   140027414:	jns    0x140027456
   140027416:	rex push rax
   140027418:	rex.RB
   140027419:	rex.X
   14002741a:	rex.R
   14002741b:	rex pop rdx
   14002741d:	add    BYTE PTR [rcx+0x12],al
   140027420:	(bad)  
   140027421:	jno    0x140027496
   140027423:	je     0x140027497
   140027425:	movsxd ebp,DWORD PTR [rbp+0x70]
   140027428:	rex
   140027429:	rex pop rcx
   14002742b:	rex.B
   14002742c:	rex.W
   14002742d:	rex.B
   14002742e:	rex.RB
   14002742f:	rex.X push rsi
   140027431:	push   rcx
   140027432:	rex.X jns 0x1400274a9
   140027435:	gs rex.B jb 0x1400274ab
   140027439:	(bad)  
   14002743a:	jns    0x14002747c
   14002743c:	xor    BYTE PTR [rax+0x5a],al
   140027440:	add    BYTE PTR [rax],al
   140027442:	(bad)  
   140027443:	add    al,0x3f
   140027445:	(bad)  
   140027446:	cmp    BYTE PTR [rax+0x59],al
   140027449:	pop    r15
   14002744b:	rex.WRX
   14002744c:	rex.B
   14002744d:	rex.RB
   14002744e:	rex.X push rsi
   140027450:	push   rcx
   140027451:	push   rbx
   140027452:	je     0x1400274c6
   140027454:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   14002745b:	pop    rdx
   14002745c:	add    BYTE PTR [rax],al
   14002745e:	rol    BYTE PTR [rdx],1
   140027460:	(bad)  
   140027461:	(bad)  
   140027462:	xor    DWORD PTR [rcx+0x53],edx
   140027465:	je     0x1400274d9
   140027467:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002746e:	rex.B
   14002746f:	rex.B
   140027470:	rex pop rax
   140027472:	pop    rdx
   140027473:	add    BYTE PTR [rsi+0x2],ah
   140027476:	(bad)  
   140027477:	(bad)  
   140027478:	xor    DWORD PTR [rcx+0x42],edx
   14002747b:	jns    0x1400274f1
   14002747d:	gs rex.B jb 0x1400274f3
   140027481:	(bad)  
   140027482:	jns    0x1400274c4
   140027484:	rex push rcx
   140027486:	rex.RB
   140027487:	rex.B
   140027488:	rex.B
   140027489:	rex pop rax
   14002748b:	pop    rdx
   14002748c:	add    BYTE PTR [rax],al
   14002748e:	(bad)  
   14002748f:	or     al,0x3f
   140027491:	data16 jb 0x140027503
   140027494:	ins    DWORD PTR es:[rdi],dx
   140027495:	rex.B jae 0x1400274fb
   140027498:	imul   ebp,DWORD PTR [rcx+0x5f],0x706c6568
   14002749f:	gs jb  0x1400274e2
   1400274a2:	push   rcx
   1400274a3:	push   rbx
   1400274a4:	je     0x140027518
   1400274a6:	imul   ebp,DWORD PTR [rsi+0x67],0x41434040
   1400274ad:	push   rax
   1400274ae:	rex.RB
   1400274af:	push   r13
   1400274b1:	(bad)  
   1400274b2:	and    al,0x51
   1400274b4:	push   rsp
   1400274b5:	jns    0x140027527
   1400274b7:	gs fs rex.B jb 0x14002752e
   1400274bc:	(bad)  
   1400274bd:	jns    0x140027503
   1400274bf:	(bad)  
   1400274c0:	je     0x140027523
   1400274c2:	rex
   1400274c3:	rex.RXB
   1400274c4:	rex
   1400274c5:	rex push rax
   1400274c7:	rex.RB
   1400274c8:	rex.X
   1400274c9:	rex.R
   1400274ca:	rex.W
   1400274cb:	rex pop rdx
   1400274cd:	add    BYTE PTR [rdi+0x303f3f01],dl
   1400274d3:	push   rcx
   1400274d4:	push   rbx
   1400274d5:	je     0x140027549
   1400274d7:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400274de:	rex.B
   1400274df:	rex.B
   1400274e0:	rex pop rax
   1400274e2:	pop    rdx
   1400274e3:	add    BYTE PTR [rax+0x0],cl
   1400274e6:	(bad)  
   1400274e7:	(bad)  
   1400274e8:	xor    BYTE PTR [rcx+0x42],dl
   1400274eb:	jns    0x140027561
   1400274ed:	gs rex.B jb 0x140027563
   1400274f1:	(bad)  
   1400274f2:	jns    0x140027534
   1400274f4:	rex push rcx
   1400274f6:	rex.RB
   1400274f7:	rex.B
   1400274f8:	rex.B
   1400274f9:	rex push rax
   1400274fb:	rex.RB
   1400274fc:	rex.X
   1400274fd:	rex.R
   1400274fe:	rex.W
   1400274ff:	rex pop rdx
   140027501:	add    al,cl
   140027503:	(bad)  
   140027504:	(bad)  
   140027505:	(bad)  
   140027506:	jo     0x140027578
   140027508:	outs   dx,BYTE PTR gs:[rsi]
   14002750a:	fs rex push rcx
   14002750d:	push   rbx
   14002750e:	je     0x140027582
   140027510:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027517:	rex.B
   140027518:	rex.B
   140027519:	rex.B
   14002751a:	rex.RB
   14002751b:	push   r14
   14002751d:	xor    DWORD PTR [rax+0x41],eax
   140027520:	rex.RB
   140027521:	rex.X push rsi
   140027523:	xor    DWORD PTR [rax+0x40],eax
   140027526:	pop    rdx
   140027527:	add    BYTE PTR [rdi],dh
   140027529:	(bad)  
   14002752a:	(bad)  
   14002752b:	jae    0x14002759d
   14002752d:	jb     0x140027598
   14002752f:	outs   dx,BYTE PTR ds:[rsi]
   140027530:	je     0x140027598
   140027532:	rex push rcx
   140027534:	push   rbx
   140027535:	je     0x1400275a9
   140027537:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002753e:	rex.B
   14002753f:	rex.B
   140027540:	rex.B
   140027541:	rex.RB
   140027542:	push   r14
   140027544:	xor    DWORD PTR [rax+0x50],eax
   140027547:	rex.RB
   140027548:	rex.X
   140027549:	rex.R pop rdx
   14002754b:	pop    rdx
   14002754c:	add    BYTE PTR [rax],al
   14002754e:	out    0x9,eax
   140027550:	(bad)  
   140027551:	fs (bad) 
   140027553:	je     0x1400275b6
   140027555:	rex push rcx
   140027557:	rex.X jns 0x1400275ce
   14002755a:	gs rex.B jb 0x1400275d0
   14002755e:	(bad)  
   14002755f:	jns    0x1400275a1
   140027561:	rex push rcx
   140027563:	rex.RB
   140027564:	rex.B
   140027565:	push   r8
   140027567:	rex.RB
   140027568:	rex.B
   140027569:	rex.R pop rax
   14002756b:	pop    rdx
   14002756c:	add    BYTE PTR [rax],al
   14002756e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002756f:	sbb    BYTE PTR [rdi],bh
   140027571:	je     0x1400275e2
   140027573:	rex.WR (bad) 
   140027575:	je     0x1400275e0
   140027577:	outs   dx,BYTE PTR ds:[rsi]
   140027578:	xor    DWORD PTR [rax+0x51],eax
   14002757b:	push   rbx
   14002757c:	je     0x1400275f0
   14002757e:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027585:	rex.X
   140027586:	rex.B (bad) 
   140027588:	push   r14
   14002758a:	push   rcx
   14002758b:	rex.X jns 0x140027602
   14002758e:	gs rex.B jb 0x140027604
   140027592:	(bad)  
   140027593:	jns    0x1400275d5
   140027595:	rex pop rax
   140027597:	pop    rdx
   140027598:	add    BYTE PTR [rax],al
   14002759a:	rcl    DWORD PTR [rsi],1
   14002759c:	(bad)  
   14002759d:	jae    0x140027607
   14002759f:	(bad)  
   1400275a0:	jb     0x140027607
   1400275a2:	fs pop rdi
   1400275a4:	outs   dx,BYTE PTR ds:[rsi]
   1400275a5:	jne    0x140027613
   1400275a7:	ins    BYTE PTR es:[rdi],dx
   1400275a8:	rex push rcx
   1400275aa:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   1400275b2:	rex
   1400275b3:	xor    dl,BYTE PTR [rbp+0x44]
   1400275b7:	(bad)  
   1400275b8:	je     0x14002761b
   1400275ba:	rex xor DWORD PTR [rax+0x42],eax
   1400275be:	add    BYTE PTR [rax],al
   1400275c0:	rcl    BYTE PTR [rsi],cl
   1400275c2:	(bad)  
   1400275c3:	jae    0x14002762d
   1400275c5:	(bad)  
   1400275c6:	jb     0x14002762d
   1400275c8:	fs pop rdi
   1400275ca:	outs   dx,BYTE PTR ds:[rsi]
   1400275cb:	jne    0x140027639
   1400275cd:	ins    BYTE PTR es:[rdi],dx
   1400275ce:	rex push rcx
   1400275d0:	rex.WRB (bad) 
   1400275d2:	jo     0x140027618
   1400275d4:	(bad)  
   1400275d5:	je     0x140027638
   1400275d7:	rex.X (bad) 
   1400275d9:	jae    0x140027640
   1400275db:	rex
   1400275dc:	xor    dl,BYTE PTR [rbp+0x31]
   1400275e0:	rex
   1400275e1:	rex.X add BYTE PTR [rax],al
   1400275e4:	(bad)  
   1400275e5:	(bad)  
   1400275e6:	(bad)  
   1400275e7:	jae    0x140027651
   1400275e9:	(bad)  
   1400275ea:	jb     0x140027651
   1400275ec:	fs pop rdi
   1400275ee:	outs   dx,BYTE PTR ds:[rsi]
   1400275ef:	jne    0x14002765d
   1400275f1:	ins    BYTE PTR es:[rdi],dx
   1400275f2:	rex push rcx
   1400275f4:	rex.B jb 0x140027669
   1400275f7:	(bad)  
   1400275f8:	jns    0x14002763e
   1400275fa:	(bad)  
   1400275fb:	je     0x14002765e
   1400275fd:	rex
   1400275fe:	xor    dl,BYTE PTR [rcx+0x42]
   140027602:	push   rbp
   140027603:	xor    DWORD PTR [rax+0x42],eax
   140027606:	add    BYTE PTR [rax],al
   140027608:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140027609:	(bad)  
   14002760a:	(bad)  
   14002760b:	(bad)  
   14002760c:	ins    BYTE PTR es:[rdi],dx
   14002760d:	ins    BYTE PTR es:[rdi],dx
   14002760e:	outs   dx,DWORD PTR ds:[rsi]
   14002760f:	movsxd esp,DWORD PTR [rcx+0x74]
   140027612:	gs rex push rcx
   140027615:	rex.B jb 0x14002768a
   140027618:	(bad)  
   140027619:	jns    0x14002765f
   14002761b:	(bad)  
   14002761c:	je     0x14002767f
   14002761e:	rex
   14002761f:	rex push rbx
   140027621:	push   r8
   140027623:	rex.RB
   140027624:	push   r13
   140027626:	xor    DWORD PTR [rax+0x5f],eax
   140027629:	rex.WXB xor BYTE PTR [r8],sil
   14002762c:	push   rsi
   14002762d:	(bad)  
   14002762e:	and    al,0x51
   140027630:	rex.RX ins BYTE PTR es:[rdi],dx
   140027632:	(bad)  
   140027633:	addr32 jae 0x140027676
   140027636:	push   rdi
   140027637:	xor    al,0x41
   140027639:	ins    BYTE PTR es:[rdi],dx
   14002763a:	ins    BYTE PTR es:[rdi],dx
   14002763b:	outs   dx,DWORD PTR ds:[rsi]
   14002763c:	movsxd esp,DWORD PTR [rcx+0x74]
   14002763f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6974704f
   140027646:	outs   dx,DWORD PTR ds:[rsi]
   140027647:	outs   dx,BYTE PTR ds:[rsi]
   140027648:	rex push rcx
   14002764a:	rex.B jb 0x1400276bf
   14002764d:	(bad)  
   14002764e:	jns    0x140027694
   140027650:	(bad)  
   140027651:	je     0x1400276b4
   140027653:	rex
   140027654:	rex
   140027655:	rex
   140027656:	rex
   140027657:	rex pop rdx
   140027659:	add    BYTE PTR [rax],dl
   14002765b:	or     bh,BYTE PTR [rdi]
   14002765d:	fs gs (bad) 
   140027660:	ins    BYTE PTR es:[rdi],dx
   140027661:	ins    BYTE PTR es:[rdi],dx
   140027662:	outs   dx,DWORD PTR ds:[rsi]
   140027663:	movsxd esp,DWORD PTR [rcx+0x74]
   140027666:	gs rex push rcx
   140027669:	rex.B jb 0x1400276de
   14002766c:	(bad)  
   14002766d:	jns    0x1400276b3
   14002766f:	(bad)  
   140027670:	je     0x1400276d3
   140027672:	rex
   140027673:	rex push rbx
   140027675:	pop    r8
   140027677:	push   rax
   140027678:	rex.RB
   140027679:	push   r13
   14002767b:	xor    DWORD PTR [rax+0x5f],eax
   14002767e:	rex.WXB xor QWORD PTR [r8+0x5a],rax
   140027682:	add    BYTE PTR [rax],al
   140027684:	adc    BYTE PTR [rdi+rdi*1],cl
   140027687:	data16 jb 0x1400276ef
   14002768a:	rex.WRX outs dx,DWORD PTR gs:[rsi]
   14002768d:	fs rex.B outs dx,BYTE PTR gs:[rsi]
   140027691:	fs push rdx
   140027693:	(bad)
   140027699:	movsxd esp,DWORD PTR [rbp+0x40]
   14002769c:	push   rcx
   14002769d:	rex.WRB (bad) 
   14002769f:	jo     0x1400276e5
   1400276a1:	(bad)  
   1400276a2:	je     0x140027705
   1400276a4:	rex.X (bad) 
   1400276a6:	jae    0x14002770d
   1400276a8:	rex
   1400276a9:	rex push rcx
   1400276ab:	rex.RB
   1400276ac:	rex.B
   1400276ad:	pop    r8
   1400276af:	push   rax
   1400276b0:	rex.RB
   1400276b1:	push   r13
   1400276b3:	push   rcx
   1400276b4:	rex.WRB (bad) 
   1400276b6:	jo     0x140027706
   1400276b8:	outs   dx,DWORD PTR ds:[rsi]
   1400276b9:	fs gs rex.X (bad) 
   1400276bd:	jae    0x140027724
   1400276bf:	rex
   1400276c0:	rex
   1400276c1:	rex pop rdx
   1400276c3:	add    BYTE PTR [rbp+0x0],al
   1400276c6:	(bad)  
   1400276c7:	(bad)  
   1400276c8:	xor    BYTE PTR [rcx+0x42],dl
   1400276cb:	jns    0x140027741
   1400276cd:	gs rex.B jb 0x140027743
   1400276d1:	(bad)  
   1400276d2:	jns    0x140027714
   1400276d4:	rex push rcx
   1400276d6:	rex.RB
   1400276d7:	rex.B
   1400276d8:	rex.B
   1400276d9:	rex
   1400276da:	rex.B
   1400276db:	rex.RB
   1400276dc:	rex.X push rsi
   1400276de:	xor    BYTE PTR [rax+0x40],al
   1400276e1:	pop    rdx
   1400276e2:	add    BYTE PTR [rax],al
   1400276e4:	sub    ecx,DWORD PTR [rcx]
   1400276e6:	(bad)  
   1400276e7:	movsxd esi,DWORD PTR [rdx+0x65]
   1400276ea:	(bad)  
   1400276eb:	je     0x140027752
   1400276ed:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   1400276ef:	fs gs rex push rcx
   1400276f3:	rex.WRB (bad) 
   1400276f5:	jo     0x14002773b
   1400276f7:	(bad)  
   1400276f8:	je     0x14002775b
   1400276fa:	rex.X (bad) 
   1400276fc:	jae    0x140027763
   1400276fe:	rex
   1400276ff:	rex push rcx
   140027701:	rex.RB
   140027702:	rex.B
   140027703:	push   r8
   140027705:	rex.RB
   140027706:	push   r13
   140027708:	push   rcx
   140027709:	rex.WRB (bad) 
   14002770b:	jo     0x14002775b
   14002770d:	outs   dx,DWORD PTR ds:[rsi]
   14002770e:	fs gs rex.X (bad) 
   140027712:	jae    0x140027779
   140027714:	rex
   140027715:	rex
   140027716:	rex.W
   140027717:	rex.W push rax
   140027719:	rex.RB
   14002771a:	push   r13
   14002771c:	xor    al,BYTE PTR [rax+0x5f]
   14002771f:	rex.WRX
   140027720:	rex pop rdx
   140027722:	add    BYTE PTR [rax],al
   140027724:	sbb    eax,0x72633f09
   140027729:	gs (bad) 
   14002772b:	je     0x140027792
   14002772d:	rex.R (bad) 
   14002772f:	je     0x140027792
   140027731:	rex push rcx
   140027733:	rex.WRB (bad) 
   140027735:	jo     0x14002777b
   140027737:	(bad)  
   140027738:	je     0x14002779b
   14002773a:	rex.X (bad) 
   14002773c:	jae    0x1400277a3
   14002773e:	rex
   14002773f:	rex push rbx
   140027741:	push   r8
   140027743:	rex.RB
   140027744:	push   r13
   140027746:	xor    DWORD PTR [rax+0x58],eax
   140027749:	pop    rdx
   14002774a:	add    BYTE PTR [rax],al
   14002774c:	rex.XB adc dil,BYTE PTR [r15]
   14002774f:	jno    0x1400277c4
   140027751:	je     0x1400277c5
   140027753:	movsxd ebp,DWORD PTR [rbp+0x70]
   140027756:	rex
   140027757:	rex pop rcx
   140027759:	rex.B
   14002775a:	rex.W push rax
   14002775c:	rex.RB
   14002775d:	rex.X
   14002775e:	xor    BYTE PTR [rax+0x5a],r8b
   140027762:	add    BYTE PTR [rax],al
   140027764:	sbb    DWORD PTR [rbx],eax
   140027766:	(bad)  
   140027767:	(bad)  
   140027768:	xor    al,0x51
   14002776a:	rex.X jns 0x1400277e1
   14002776d:	gs rex.B jb 0x1400277e3
   140027771:	(bad)  
   140027772:	jns    0x1400277b4
   140027774:	rex push rcx
   140027776:	rex.RB
   140027777:	rex.B
   140027778:	rex.B
   140027779:	rex.B
   14002777a:	rex.RB
   14002777b:	push   r14
   14002777d:	xor    BYTE PTR [rax+0x41],al
   140027780:	rex.RB
   140027781:	rex.X push rsi
   140027783:	xor    BYTE PTR [rax+0x40],al
   140027786:	pop    rdx
   140027787:	add    BYTE PTR [rax+0xc],dl
   14002778a:	(bad)  
   14002778b:	data16 jb 0x1400277fd
   14002778e:	ins    DWORD PTR es:[rdi],dx
   14002778f:	push   rbp
   140027790:	outs   dx,BYTE PTR ds:[rsi]
   140027791:	imul   esp,DWORD PTR [rbx+0x6f],0x51406564
   140027798:	push   rsp
   140027799:	gs js  0x140027810
   14002779c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002779e:	fs movsxd eax,DWORD PTR gs:[rax+0x40]
   1400277a3:	push   rcx
   1400277a4:	rex.RB
   1400277a5:	rex.X
   1400277a6:	rex.B (bad) 
   1400277a8:	push   r14
   1400277aa:	push   rcx
   1400277ab:	rex.X jns 0x140027822
   1400277ae:	gs rex.B jb 0x140027824
   1400277b2:	(bad)  
   1400277b3:	jns    0x1400277f5
   1400277b5:	rex
   1400277b6:	rex.B
   1400277b7:	rex.RB
   1400277b8:	rex.X push rsi
   1400277ba:	push   rcx
   1400277bb:	push   rbx
   1400277bc:	je     0x140027830
   1400277be:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400277c5:	add    BYTE PTR [rsi+0x6f633f08],dl
   1400277cb:	outs   dx,BYTE PTR ds:[rsi]
   1400277cc:	jae    0x140027842
   1400277ce:	rex.R (bad) 
   1400277d0:	je     0x140027833
   1400277d2:	rex push rcx
   1400277d4:	rex.X jns 0x14002784b
   1400277d7:	gs rex.B jb 0x14002784d
   1400277db:	(bad)  
   1400277dc:	jns    0x14002781e
   1400277de:	rex push rcx
   1400277e0:	rex.RB
   1400277e1:	rex.X
   1400277e2:	push   r8
   1400277e4:	rex.RB
   1400277e5:	rex.X
   1400277e6:	rex.R pop rax
   1400277e8:	pop    rdx
   1400277e9:	add    BYTE PTR [rdx+0x61633f07],cl
   1400277ef:	outs   dx,BYTE PTR ds:[rsi]
   1400277f0:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400277f2:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400277f5:	gs rex push rcx
   1400277f8:	push   rsp
   1400277f9:	gs js  0x140027870
   1400277fc:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400277fe:	fs movsxd eax,DWORD PTR gs:[rax+0x40]
   140027803:	push   rcx
   140027804:	rex.RB
   140027805:	rex.X
   140027806:	pop    r15
   140027808:	rex.WRX
   140027809:	rex.B
   14002780a:	rex.RB
   14002780b:	rex.X push rsi
   14002780d:	push   rcx
   14002780e:	push   rbx
   14002780f:	je     0x140027883
   140027811:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140027818:	add    BYTE PTR [rax],al
   14002781a:	sbb    DWORD PTR ds:[rdi],edi
   14002781d:	je     0x14002788e
   14002781f:	push   rbp
   140027820:	outs   dx,BYTE PTR ds:[rsi]
   140027821:	imul   esp,DWORD PTR [rbx+0x6f],0x51406564
   140027828:	push   rsp
   140027829:	gs js  0x1400278a0
   14002782c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002782e:	fs movsxd eax,DWORD PTR gs:[rax+0x40]
   140027833:	push   rcx
   140027834:	rex.RB
   140027835:	rex.X
   140027836:	rex.B (bad) 
   140027838:	push   r14
   14002783a:	push   rcx
   14002783b:	push   rbx
   14002783c:	je     0x1400278b0
   14002783e:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   140027845:	rex.X push rsi
   140027847:	push   rcx
   140027848:	rex.X jns 0x1400278bf
   14002784b:	gs rex.B jb 0x1400278c1
   14002784f:	(bad)  
   140027850:	jns    0x140027892
   140027852:	rex
   140027853:	rex pop rdx
   140027855:	add    ch,dl
   140027857:	sbb    bh,BYTE PTR [rdi]
   140027859:	ja     0x1400278bc
   14002785b:	jb     0x1400278cb
   14002785d:	imul   ebp,DWORD PTR [rsi+0x67],0x654d5140
   140027864:	jae    0x1400278d9
   140027866:	(bad)  
   140027867:	rex.WR outs dx,DWORD PTR gs:[esi]
   14002786b:	addr32 addr32 gs jb 0x1400278b0
   140027870:	rex push rcx
   140027872:	rex.RB
   140027873:	rex.X
   140027874:	pop    r8
   140027876:	push   rax
   140027877:	rex.RB
   140027878:	rex.X
   140027879:	rex.R pop rdx
   14002787b:	pop    rdx
   14002787c:	add    BYTE PTR [rax],al
   14002787e:	or     al,0x1
   140027880:	(bad)  
   140027881:	(bad)  
   140027882:	xor    BYTE PTR [rcx+0x4d],dl
   140027885:	gs jae 0x1400278fb
   140027888:	(bad)  
   140027889:	rex.WR outs dx,DWORD PTR gs:[esi]
   14002788d:	addr32 addr32 gs jb 0x1400278d2
   140027892:	rex push rcx
   140027894:	rex.RB
   140027895:	rex.B
   140027896:	rex.B
   140027897:	rex push rax
   140027899:	rex.RB
   14002789a:	rex.X
   14002789b:	rex.R
   14002789c:	rex.W xor BYTE PTR [rax+0x5a],al
   1400278a0:	add    BYTE PTR [rax],al
   1400278a2:	fild   WORD PTR [rdi+rdi*1]
   1400278a5:	(bad)  
   1400278a6:	rex.X push rcx
   1400278a8:	rex.X jns 0x14002791f
   1400278ab:	gs rex.B jb 0x140027921
   1400278af:	(bad)  
   1400278b0:	jns    0x1400278f2
   1400278b2:	rex push rcx
   1400278b4:	rex.RB
   1400278b5:	rex.X
   1400278b6:	push   r8
   1400278b8:	rex.RB
   1400278b9:	rex.X
   1400278ba:	rex.R pop rax
   1400278bc:	pop    rdx
   1400278bd:	add    BYTE PTR [rax+rbx*1+0x4c6f743f],bh
   1400278c4:	outs   dx,DWORD PTR ds:[rsi]
   1400278c5:	outs   dx,BYTE PTR ds:[rsi]
   1400278c6:	rex.WR outs dx,DWORD PTR ds:[esi]
   1400278c9:	outs   dx,BYTE PTR ds:[rsi]
   1400278ca:	addr32 rex push rcx
   1400278cd:	rex.X jns 0x140027944
   1400278d0:	gs rex.B jb 0x140027946
   1400278d4:	(bad)  
   1400278d5:	jns    0x140027917
   1400278d7:	rex push rcx
   1400278d9:	rex.RB
   1400278da:	rex.X
   1400278db:	pop    r15
   1400278dd:	rex.WX push rax
   1400278df:	rex.RB
   1400278e0:	pop    r15
   1400278e2:	rex.WRX
   1400278e3:	rex.W
   1400278e4:	rex pop rdx
   1400278e6:	add    BYTE PTR [rax],al
   1400278e8:	rol    BYTE PTR [rsi],0x3f
   1400278eb:	(bad)  
   1400278ec:	jo     0x14002795e
   1400278ee:	outs   dx,BYTE PTR gs:[rsi]
   1400278f0:	fs rex push rcx
   1400278f3:	rex.X jns 0x14002796a
   1400278f6:	gs rex.B jb 0x14002796c
   1400278fa:	(bad)  
   1400278fb:	jns    0x14002793d
   1400278fd:	rex push rcx
   1400278ff:	rex.RB
   140027900:	rex.B
   140027901:	rex.B
   140027902:	rex.B
   140027903:	rex.RB
   140027904:	push   r14
   140027906:	xor    DWORD PTR [rax+0x44],eax
   140027909:	rex pop rdx
   14002790b:	add    BYTE PTR [rdx+0x0],cl
   14002790e:	(bad)  
   14002790f:	(bad)  
   140027910:	xor    BYTE PTR [rcx+0x42],dl
   140027913:	jns    0x140027989
   140027915:	gs rex.B jb 0x14002798b
   140027919:	(bad)  
   14002791a:	jns    0x14002795c
   14002791c:	rex push rcx
   14002791e:	rex.RB
   14002791f:	rex.B
   140027920:	rex.B
   140027921:	rex pop rax
   140027923:	pop    rdx
   140027924:	add    BYTE PTR [rax],al
   140027926:	rol    DWORD PTR [rsi],0x3f
   140027929:	(bad)  
   14002792a:	jo     0x14002799c
   14002792c:	outs   dx,BYTE PTR gs:[rsi]
   14002792e:	fs rex push rcx
   140027931:	rex.X jns 0x1400279a8
   140027934:	gs rex.B jb 0x1400279aa
   140027938:	(bad)  
   140027939:	jns    0x14002797b
   14002793b:	rex push rcx
   14002793d:	rex.RB
   14002793e:	rex.B
   14002793f:	rex.B
   140027940:	rex.B
   140027941:	rex.RB
   140027942:	push   r14
   140027944:	xor    DWORD PTR [rax+0x50],eax
   140027947:	rex.RB
   140027948:	rex.X
   140027949:	rex.R
   14002794a:	rex pop rdx
   14002794c:	add    BYTE PTR [rax],al
   14002794e:	sbb    al,BYTE PTR [rbx]
   140027950:	(bad)  
   140027951:	(bad)  
   140027952:	xor    al,0x51
   140027954:	rex.X jns 0x1400279cb
   140027957:	gs rex.B jb 0x1400279cd
   14002795b:	(bad)  
   14002795c:	jns    0x14002799e
   14002795e:	rex push rcx
   140027960:	rex.RB
   140027961:	rex.B
   140027962:	rex.B
   140027963:	rex.B
   140027964:	rex.RB
   140027965:	push   r14
   140027967:	xor    BYTE PTR [rax+0x50],al
   14002796a:	rex.RB
   14002796b:	rex.X
   14002796c:	rex.R
   14002796d:	rex pop rdx
   14002796f:	add    BYTE PTR [rip+0x6c633f08],ah        # 0x1ac65b87d
   140027975:	outs   dx,DWORD PTR ds:[rsi]
   140027976:	jae    0x1400279dd
   140027978:	rex push rcx
   14002797a:	imul   r13d,DWORD PTR [rbp+r12*2+0x44],0x63697665
   140027983:	gs rex
   140027985:	rex push rbp
   140027987:	rex.RB
   140027988:	rex.B
   140027989:	pop    r8
   14002798b:	pop    rax
   14002798c:	pop    rdx
   14002798d:	add    BYTE PTR [rcx+0x313f3f02],cl
   140027993:	push   rcx
   140027994:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455540
   14002799d:	rex.B
   14002799e:	rex pop rax
   1400279a0:	pop    rdx
   1400279a1:	add    dl,ch
   1400279a3:	adc    BYTE PTR [rdi],bh
   1400279a5:	outs   dx,DWORD PTR ds:[rsi]
   1400279a6:	jo     0x140027a0d
   1400279a8:	outs   dx,BYTE PTR ds:[rsi]
   1400279a9:	rex push rcx
   1400279ab:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455540
   1400279b4:	pop    r15
   1400279b6:	rex.WRX push rsi
   1400279b8:	(bad)  
   1400279b9:	and    al,0x51
   1400279bb:	rex.RX ins BYTE PTR es:[rdi],dx
   1400279bd:	(bad)  
   1400279be:	addr32 jae 0x140027a01
   1400279c1:	push   rdi
   1400279c2:	xor    al,0x4f
   1400279c4:	jo     0x140027a2b
   1400279c6:	outs   dx,BYTE PTR ds:[rsi]
   1400279c7:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400279c9:	fs gs rex.RX ins BYTE PTR es:[rdi],dx
   1400279cd:	(bad)  
   1400279ce:	addr32 rex push rcx
   1400279d1:	rex.WB
   1400279d2:	rex.WRXB
   1400279d3:	rex.R
   1400279d4:	gs jbe 0x140027a40
   1400279d7:	movsxd esp,DWORD PTR [rbp+0x40]
   1400279da:	rex
   1400279db:	rex
   1400279dc:	rex
   1400279dd:	rex pop rdx
   1400279df:	add    BYTE PTR [rbp+0x303f3f00],ch
   1400279e5:	push   rcx
   1400279e6:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455140
   1400279ef:	rex.B
   1400279f0:	rex
   1400279f1:	rex.B
   1400279f2:	rex.RB
   1400279f3:	rex.X push rsi
   1400279f5:	push   rcx
   1400279f6:	push   rbx
   1400279f7:	je     0x140027a6b
   1400279f9:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140027a00:	add    BYTE PTR [rax],al
   140027a02:	mov    DWORD PTR [rdx],ecx
   140027a04:	(bad)  
   140027a05:	imul   esi,DWORD PTR fs:[rbx+0x70],0x4065736f
   140027a0d:	push   rcx
   140027a0e:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140027a16:	rex
   140027a17:	rex push rbx
   140027a19:	pop    r8
   140027a1b:	push   rax
   140027a1c:	rex.RB
   140027a1d:	push   r13
   140027a1f:	rex.R (bad) 
   140027a21:	je     0x140027a84
   140027a23:	rex xor DWORD PTR [rax+0x40],eax
   140027a27:	pop    rdx
   140027a28:	add    BYTE PTR [rax],al
   140027a2a:	(bad)  
   140027a2b:	or     al,0x3f
   140027a2d:	data16 jb 0x140027a95
   140027a30:	gs rex.R (bad) 
   140027a33:	je     0x140027a96
   140027a35:	rex push rcx
   140027a37:	rex.WRB (bad) 
   140027a39:	jo     0x140027a7f
   140027a3b:	(bad)  
   140027a3c:	je     0x140027a9f
   140027a3e:	rex.X (bad) 
   140027a40:	jae    0x140027aa7
   140027a42:	rex
   140027a43:	rex push rbx
   140027a45:	pop    r8
   140027a47:	push   rax
   140027a48:	rex.RB
   140027a49:	push   r13
   140027a4b:	xor    DWORD PTR [rax+0x40],eax
   140027a4e:	pop    rdx
   140027a4f:	add    BYTE PTR [rcx],dl
   140027a51:	or     al,0x3f
   140027a53:	data16 jb 0x140027abb
   140027a56:	gs push rsp
   140027a58:	jb     0x140027abf
   140027a5a:	gs rex push rcx
   140027a5d:	rex.WRB (bad) 
   140027a5f:	jo     0x140027aa5
   140027a61:	(bad)  
   140027a62:	je     0x140027ac5
   140027a64:	rex.X (bad) 
   140027a66:	jae    0x140027acd
   140027a68:	rex
   140027a69:	rex push rcx
   140027a6b:	rex.RB
   140027a6c:	rex.B
   140027a6d:	pop    r8
   140027a6f:	push   rax
   140027a70:	rex.RB
   140027a71:	push   r13
   140027a73:	push   rcx
   140027a74:	rex.WRB (bad) 
   140027a76:	jo     0x140027ac6
   140027a78:	outs   dx,DWORD PTR ds:[rsi]
   140027a79:	fs gs rex.X (bad) 
   140027a7d:	jae    0x140027ae4
   140027a7f:	rex
   140027a80:	rex
   140027a81:	rex.W
   140027a82:	rex pop rdx
   140027a84:	add    BYTE PTR [rax],al
   140027a86:	int    0x11
   140027a88:	(bad)  
   140027a89:	jno    0x140027acd
   140027a8b:	(bad)  
   140027a8c:	fs rex.B ins BYTE PTR es:[rdi],dx
   140027a8f:	ins    BYTE PTR es:[rdi],dx
   140027a90:	outs   dx,DWORD PTR ds:[rsi]
   140027a91:	movsxd eax,DWORD PTR [rax+0x40]
   140027a94:	pop    rcx
   140027a95:	pop    r8
   140027a97:	pop    rax
   140027a98:	pop    rdx
   140027a99:	add    BYTE PTR [rdi+0x13],bh
   140027a9c:	(bad)  
   140027a9d:	jb     0x140027b04
   140027a9f:	movsxd esp,DWORD PTR [rcx+0x6c]
   140027aa2:	movsxd ecx,DWORD PTR [rbp+0x6f]
   140027aa5:	jae    0x140027b1b
   140027aa7:	rex.WR
   140027aa8:	gs data16 je 0x140027afa
   140027aac:	outs   dx,DWORD PTR ds:[rsi]
   140027aad:	fs gs rex push rcx
   140027ab1:	rex.WRB (bad) 
   140027ab3:	jo     0x140027af9
   140027ab5:	(bad)  
   140027ab6:	je     0x140027b19
   140027ab8:	rex.X (bad) 
   140027aba:	jae    0x140027b21
   140027abc:	rex
   140027abd:	rex push rcx
   140027abf:	rex.RB
   140027ac0:	rex.B
   140027ac1:	pop    r8
   140027ac3:	pop    rax
   140027ac4:	pop    rdx
   140027ac5:	add    BYTE PTR [rdx],bh
   140027ac7:	or     BYTE PTR [rdi],bh
   140027ac9:	movsxd ebp,DWORD PTR [rdi+0x64]
   140027acc:	movsxd eax,DWORD PTR gs:[rsi+0x6f]
   140027ad0:	jb     0x140027b20
   140027ad2:	(bad)  
   140027ad3:	ins    DWORD PTR es:[rdi],dx
   140027ad4:	gs rex push rcx
   140027ad7:	push   rsp
   140027ad8:	gs js  0x140027b4f
   140027adb:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140027add:	fs movsxd eax,DWORD PTR gs:[rax+0x40]
   140027ae2:	push   rbx
   140027ae3:	push   r8
   140027ae5:	rex.RB
   140027ae6:	push   r14
   140027ae8:	xor    DWORD PTR [rax+0x50],eax
   140027aeb:	rex.RB
   140027aec:	rex.X
   140027aed:	rex.R
   140027aee:	rex pop rdx
   140027af0:	add    BYTE PTR [rax],al
   140027af2:	adc    bl,BYTE PTR [rdx]
   140027af4:	(bad)  
   140027af5:	je     0x140027b69
   140027af7:	jne    0x140027b67
   140027af9:	movsxd esp,DWORD PTR [rcx+0x74]
   140027afc:	gs rex push rcx
   140027aff:	push   rbx
   140027b00:	je     0x140027b74
   140027b02:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027b09:	rex.B
   140027b0a:	pop    r8
   140027b0c:	rex.W
   140027b0d:	rex pop rdx
   140027b0f:	add    BYTE PTR [rdi+0x19],cl
   140027b12:	(bad)  
   140027b13:	je     0x140027b84
   140027b15:	push   rbp
   140027b16:	je     0x140027b7e
   140027b18:	cmp    BYTE PTR [rax+0x51],al
   140027b1b:	push   rbx
   140027b1c:	je     0x140027b90
   140027b1e:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027b25:	rex.X
   140027b26:	rex.B (bad) 
   140027b28:	push   r14
   140027b2a:	push   rcx
   140027b2b:	rex.X jns 0x140027ba2
   140027b2e:	gs rex.B jb 0x140027ba4
   140027b32:	(bad)  
   140027b33:	jns    0x140027b75
   140027b35:	rex pop rax
   140027b37:	pop    rdx
   140027b38:	add    BYTE PTR [rax],al
   140027b3a:	pop    QWORD PTR [rcx]
   140027b3c:	(bad)  
   140027b3d:	(bad)  
   140027b3e:	xor    BYTE PTR [rcx+0x53],dl
   140027b41:	je     0x140027bb5
   140027b43:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027b4a:	rex.B
   140027b4b:	rex.B
   140027b4c:	rex
   140027b4d:	rex.B
   140027b4e:	rex.RB
   140027b4f:	rex.X push rsi
   140027b51:	push   rcx
   140027b52:	rex.X jns 0x140027bc9
   140027b55:	gs rex.B jb 0x140027bcb
   140027b59:	(bad)  
   140027b5a:	jns    0x140027b9c
   140027b5c:	rex
   140027b5d:	rex pop rdx
   140027b5f:	add    BYTE PTR [rsi+0x3],bh
   140027b62:	(bad)  
   140027b63:	(bad)  
   140027b64:	xor    al,0x51
   140027b66:	push   rbx
   140027b67:	je     0x140027bdb
   140027b69:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027b70:	rex.B
   140027b71:	rex.B
   140027b72:	rex.B
   140027b73:	rex.RB
   140027b74:	push   r14
   140027b76:	xor    BYTE PTR [rax+0x41],al
   140027b79:	rex.RB
   140027b7a:	rex.X push rsi
   140027b7c:	xor    BYTE PTR [rax+0x40],al
   140027b7f:	pop    rdx
   140027b80:	add    BYTE PTR [rax],al
   140027b82:	mov    esp,0x313f3f02
   140027b87:	push   rcx
   140027b88:	push   rdx
   140027b89:	gs addr32 rex.RB js 0x140027bfe
   140027b8e:	rex
   140027b8f:	rex push rcx
   140027b91:	rex.RB
   140027b92:	rex.B
   140027b93:	rex.B
   140027b94:	rex pop rax
   140027b96:	pop    rdx
   140027b97:	add    BYTE PTR [rbp+0x14],al
   140027b9a:	(bad)  
   140027b9b:	jb     0x140027c02
   140027b9d:	jo     0x140027c0b
   140027b9f:	(bad)  
   140027ba0:	movsxd esp,DWORD PTR [rbp+0x40]
   140027ba3:	push   rcx
   140027ba4:	push   rbx
   140027ba5:	je     0x140027c19
   140027ba7:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027bae:	rex.B
   140027baf:	rex.B
   140027bb0:	rex.B
   140027bb1:	rex.RB
   140027bb2:	push   r14
   140027bb4:	xor    DWORD PTR [rax+0x41],eax
   140027bb7:	rex.RB
   140027bb8:	rex.X push rsi
   140027bba:	push   rcx
   140027bbb:	push   rdx
   140027bbc:	gs addr32 rex.RB js 0x140027c31
   140027bc1:	rex
   140027bc2:	rex
   140027bc3:	rex.B
   140027bc4:	rex.RB
   140027bc5:	rex.X push rsi
   140027bc7:	xor    DWORD PTR [rax+0x40],eax
   140027bca:	pop    rdx
   140027bcb:	add    BYTE PTR [rdi+0x1],dl
   140027bce:	(bad)  
   140027bcf:	(bad)  
   140027bd0:	xor    BYTE PTR [rcx+0x52],dl
   140027bd3:	gs addr32 rex.RB js 0x140027c48
   140027bd8:	rex
   140027bd9:	rex push rcx
   140027bdb:	rex.RB
   140027bdc:	rex.B
   140027bdd:	rex.B
   140027bde:	rex
   140027bdf:	rex.B
   140027be0:	rex.RB
   140027be1:	rex.X push rsi
   140027be3:	push   rcx
   140027be4:	push   rbx
   140027be5:	je     0x140027c59
   140027be7:	imul   ebp,DWORD PTR [rsi+0x67],0x34574040
   140027bee:	rex.XB (bad) 
   140027bf0:	jae    0x140027c57
   140027bf2:	push   rbx
   140027bf3:	outs   dx,BYTE PTR gs:[rsi]
   140027bf5:	jae    0x140027c60
   140027bf7:	je     0x140027c62
   140027bf9:	jbe    0x140027c64
   140027bfb:	je     0x140027c76
   140027bfd:	rex push rcx
   140027bff:	je     0x140027c41
   140027c01:	rex push rdi
   140027c03:	xor    al,0x50
   140027c05:	(bad)  
   140027c06:	je     0x140027c7c
   140027c08:	gs jb  0x140027c79
   140027c0b:	push   rbx
   140027c0c:	jns    0x140027c7c
   140027c0e:	je     0x140027c71
   140027c10:	js     0x140027c52
   140027c12:	xor    BYTE PTR [rax+0x40],al
   140027c15:	pop    rdx
   140027c16:	add    BYTE PTR [rax],al
   140027c18:	add    DWORD PTR [rip+0x646e693f],ecx        # 0x1a470e55d
   140027c1e:	gs js  0x140027c70
   140027c21:	rex push cx
   140027c24:	rex.X jns 0x140027c9b
   140027c27:	gs rex.B jb 0x140027c9d
   140027c2b:	(bad)  
   140027c2c:	jns    0x140027c6e
   140027c2e:	rex push rcx
   140027c30:	rex.RB
   140027c31:	rex.X
   140027c32:	rex.B
   140027c33:	rex.W
   140027c34:	rex.R
   140027c35:	rex.W
   140027c36:	rex pop rdx
   140027c38:	add    BYTE PTR [rax],al
   140027c3a:	ret    0x3f13
   140027c3d:	jb     0x140027ca4
   140027c3f:	ins    DWORD PTR es:[rdi],dx
   140027c40:	outs   dx,DWORD PTR ds:[rsi]
   140027c41:	jbe    0x140027ca8
   140027c43:	rex push rcx
   140027c45:	rex.X jns 0x140027cbc
   140027c48:	gs rex.B jb 0x140027cbe
   140027c4c:	(bad)  
   140027c4d:	jns    0x140027c8f
   140027c4f:	rex push rcx
   140027c51:	rex.RB
   140027c52:	rex.B
   140027c53:	rex.B
   140027c54:	rex.B
   140027c55:	rex.RB
   140027c56:	push   r14
   140027c58:	xor    DWORD PTR [rax+0x48],eax
   140027c5b:	rex.W
   140027c5c:	rex pop rdx
   140027c5e:	add    BYTE PTR [rax],al
   140027c60:	(bad)  
   140027c61:	(bad)  
   140027c63:	ins    BYTE PTR es:[rdi],dx
   140027c64:	gs data16 je 0x140027ca8
   140027c68:	push   rcx
   140027c69:	rex.X jns 0x140027ce0
   140027c6c:	gs rex.B jb 0x140027ce2
   140027c70:	(bad)  
   140027c71:	jns    0x140027cb3
   140027c73:	rex push rcx
   140027c75:	rex.RB
   140027c76:	rex.X
   140027c77:	rex.B (bad) 
   140027c79:	push   r14
   140027c7b:	xor    DWORD PTR [rax+0x48],eax
   140027c7e:	rex pop rdx
   140027c80:	add    BYTE PTR [rax],al
   140027c82:	in     eax,dx
   140027c83:	(bad)  
   140027c84:	(bad)  
   140027c85:	jae    0x140027cf0
   140027c87:	ins    DWORD PTR es:[rdi],dx
   140027c88:	jo     0x140027cf6
   140027c8a:	imul   esp,DWORD PTR [rsi+0x69],0x51406465
   140027c91:	rex.X jns 0x140027d08
   140027c94:	gs rex.B jb 0x140027d0a
   140027c98:	(bad)  
   140027c99:	jns    0x140027cdb
   140027c9b:	rex push rcx
   140027c9d:	rex.RB
   140027c9e:	rex.X
   140027c9f:	rex.B (bad) 
   140027ca1:	push   r14
   140027ca3:	xor    DWORD PTR [rax+0x58],eax
   140027ca6:	pop    rdx
   140027ca7:	add    BYTE PTR [rdi],dh
   140027ca9:	(bad)  
   140027caa:	(bad)  
   140027cab:	imul   esi,DWORD PTR [rbx+0x4e],0x406c6c75
   140027cb2:	push   rcx
   140027cb3:	rex.X jns 0x140027d2a
   140027cb6:	gs rex.B jb 0x140027d2c
   140027cba:	(bad)  
   140027cbb:	jns    0x140027cfd
   140027cbd:	rex push rcx
   140027cbf:	rex.RB
   140027cc0:	rex.X
   140027cc1:	pop    r15
   140027cc3:	rex.WRX pop rax
   140027cc5:	pop    rdx
   140027cc6:	add    BYTE PTR [rax],al
   140027cc8:	cmp    DWORD PTR [rax],ecx
   140027cca:	(bad)  
   140027ccb:	movsxd ebp,DWORD PTR [rdi+0x64]
   140027cce:	movsxd eax,DWORD PTR gs:[rsi+0x6f]
   140027cd2:	jb     0x140027d22
   140027cd4:	(bad)  
   140027cd5:	ins    DWORD PTR es:[rdi],dx
   140027cd6:	gs rex push rcx
   140027cd9:	push   rsp
   140027cda:	gs js  0x140027d51
   140027cdd:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140027cdf:	fs movsxd eax,DWORD PTR gs:[rax+0x40]
   140027ce4:	push   rbx
   140027ce5:	push   r8
   140027ce7:	rex.RB
   140027ce8:	push   r14
   140027cea:	xor    DWORD PTR [rax+0x41],eax
   140027ced:	rex.RB
   140027cee:	rex.X push rsi
   140027cf0:	push   rcx
   140027cf1:	rex.X jns 0x140027d68
   140027cf4:	gs rex.B jb 0x140027d6a
   140027cf8:	(bad)  
   140027cf9:	jns    0x140027d3b
   140027cfb:	rex
   140027cfc:	rex pop rdx
   140027cfe:	add    BYTE PTR [rax],al
   140027d00:	xchg   esp,eax
   140027d01:	adc    BYTE PTR [rdi],bh
   140027d03:	outs   dx,BYTE PTR ds:[rsi]
   140027d04:	gs js  0x140027d7b
   140027d07:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140027d09:	fs gs rex push rcx
   140027d0d:	rex.WRB (bad) 
   140027d0f:	jo     0x140027d5f
   140027d11:	outs   dx,DWORD PTR ds:[rsi]
   140027d12:	fs gs rex.X (bad) 
   140027d16:	jae    0x140027d7d
   140027d18:	rex
   140027d19:	rex push rcx
   140027d1b:	rex.RB
   140027d1c:	rex.X
   140027d1d:	push   r8
   140027d1f:	rex.RB
   140027d20:	rex.X push rbp
   140027d22:	xor    DWORD PTR [rax+0x58],eax
   140027d25:	pop    rdx
   140027d26:	add    BYTE PTR [rax],al
   140027d28:	mov    es,WORD PTR [rcx]
   140027d2a:	(bad)  
   140027d2b:	(bad)  
   140027d2c:	xor    BYTE PTR [rcx+0x53],dl
   140027d2f:	je     0x140027da3
   140027d31:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027d38:	rex.B
   140027d39:	rex.B
   140027d3a:	rex
   140027d3b:	rex.B
   140027d3c:	rex.RB
   140027d3d:	rex.X push rsi
   140027d3f:	xor    BYTE PTR [rax+0x40],al
   140027d42:	pop    rdx
   140027d43:	add    BYTE PTR [rbx+0xa],dl
   140027d46:	(bad)  
   140027d47:	fs gs je 0x140027dac
   140027d4b:	movsxd ebp,DWORD PTR [rax+0x40]
   140027d4e:	push   rcx
   140027d4f:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140027d57:	rex
   140027d58:	rex push rcx
   140027d5a:	rex.RB
   140027d5b:	rex.B
   140027d5c:	push   r8
   140027d5e:	rex.RB
   140027d5f:	push   r13
   140027d61:	rex.R (bad) 
   140027d63:	je     0x140027dc6
   140027d65:	rex xor DWORD PTR [rax+0x48],eax
   140027d69:	rex pop rdx
   140027d6b:	add    BYTE PTR [rbx+0xa],bl
   140027d6e:	(bad)  
   140027d6f:	fs gs je 0x140027dd4
   140027d73:	movsxd ebp,DWORD PTR [rax+0x5f]
   140027d76:	addr32 jb 0x140027de8
   140027d79:	ja     0x140027dbb
   140027d7b:	push   rcx
   140027d7c:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140027d84:	rex
   140027d85:	rex push rcx
   140027d87:	rex.RB
   140027d88:	rex.B
   140027d89:	push   r8
   140027d8b:	rex.RB
   140027d8c:	push   r13
   140027d8e:	rex.R (bad) 
   140027d90:	je     0x140027df3
   140027d92:	rex xor DWORD PTR [rax+0x50],eax
   140027d96:	rex.RB
   140027d97:	rex.B
   140027d98:	rex.W
   140027d99:	rex.W
   140027d9a:	rex pop rdx
   140027d9c:	add    BYTE PTR [rax],al
   140027d9e:	mov    BYTE PTR [rsi],0x3f
   140027da1:	(bad)  
   140027da2:	jo     0x140027e14
   140027da4:	outs   dx,BYTE PTR gs:[rsi]
   140027da6:	fs rex push rcx
   140027da9:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140027db1:	rex
   140027db2:	rex push rcx
   140027db4:	rex.RB
   140027db5:	rex.B
   140027db6:	push   r8
   140027db8:	rex.RB
   140027db9:	push   r8
   140027dbb:	rex.RB
   140027dbc:	pop    r8
   140027dbe:	pop    rax
   140027dbf:	pop    rdx
   140027dc0:	add    BYTE PTR [rax],al
   140027dc2:	jns    0x140027dc6
   140027dc4:	(bad)  
   140027dc5:	(bad)  
   140027dc6:	xor    DWORD PTR [rcx+0x44],edx
   140027dc9:	imul   esi,DWORD PTR [rdx+0x40],0x41455140
   140027dd0:	rex.B
   140027dd1:	rex pop rax
   140027dd3:	pop    rdx
   140027dd4:	add    BYTE PTR [rax],al
   140027dd6:	mov    cl,0x13
   140027dd8:	(bad)  
   140027dd9:	jb     0x140027e40
   140027ddb:	ins    BYTE PTR es:[rdi],dx
   140027ddc:	(bad)  
   140027ddd:	je     0x140027e48
   140027ddf:	jbe    0x140027e46
   140027de1:	imul   r13d,DWORD PTR [rbp+r12*2+0x50],0x40687461
   140027dea:	push   rcx
   140027deb:	imul   r14d,DWORD PTR [rdx+0x40],0x42455140
   140027df3:	rex.B (bad) 
   140027df5:	push   r14
   140027df7:	push   rcx
   140027df8:	push   rbx
   140027df9:	je     0x140027e6d
   140027dfb:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   140027e02:	rex.X push rsi
   140027e04:	xor    al,BYTE PTR [rax+0x40]
   140027e07:	pop    rdx
   140027e08:	add    BYTE PTR [rax],al
   140027e0a:	mov    BYTE PTR [rax],al
   140027e0c:	(bad)  
   140027e0d:	(bad)  
   140027e0e:	xor    BYTE PTR [rcx+0x44],dl
   140027e11:	imul   esi,DWORD PTR [rdx+0x40],0x41455140
   140027e18:	rex.B
   140027e19:	rex
   140027e1a:	rex.B
   140027e1b:	rex.RB
   140027e1c:	rex.X push rsi
   140027e1e:	push   rcx
   140027e1f:	push   rbx
   140027e20:	je     0x140027e94
   140027e22:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140027e29:	add    BYTE PTR [rbx+0x69663f0b],ch
   140027e2f:	ins    BYTE PTR es:[rdi],dx
   140027e30:	gs rex.WRX (bad) 
   140027e33:	ins    DWORD PTR es:[rdi],dx
   140027e34:	gs rex push rcx
   140027e37:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   140027e40:	rex push rcx
   140027e42:	rex.RB
   140027e43:	rex.X
   140027e44:	rex.B (bad) 
   140027e46:	push   r14
   140027e48:	push   rcx
   140027e49:	push   rbx
   140027e4a:	je     0x140027ebe
   140027e4c:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140027e53:	add    al,ah
   140027e55:	(bad)  
   140027e56:	(bad)  
   140027e57:	jae    0x140027ece
   140027e59:	data16 imul di,WORD PTR [rax+0x40],0x4651
   140027e60:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x406f666e
   140027e68:	rex push rcx
   140027e6a:	rex.RB
   140027e6b:	rex.X
   140027e6c:	rex.B (bad) 
   140027e6e:	push   r14
   140027e70:	push   rcx
   140027e71:	push   rbx
   140027e72:	je     0x140027ee6
   140027e74:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140027e7b:	add    bh,ah
   140027e7d:	(bad)  
   140027e7e:	(bad)  
   140027e7f:	imul   esi,DWORD PTR [rbx+0x57],0x61746972
   140027e86:	(bad)  
   140027e87:	ins    BYTE PTR es:[rdi],dx
   140027e88:	gs rex push rcx
   140027e8b:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   140027e94:	rex push rcx
   140027e96:	rex.RB
   140027e97:	rex.X
   140027e98:	pop    r15
   140027e9a:	rex.WRX pop rax
   140027e9c:	pop    rdx
   140027e9d:	add    BYTE PTR [rdi+0xb],bh
   140027ea0:	(bad)  
   140027ea1:	gs js  0x140027f0d
   140027ea4:	jae    0x140027f1a
   140027ea6:	jae    0x140027ee8
   140027ea8:	push   rcx
   140027ea9:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   140027eb2:	rex push rcx
   140027eb4:	rex.RB
   140027eb5:	rex.X
   140027eb6:	pop    r15
   140027eb8:	rex.WRX pop rax
   140027eba:	pop    rdx
   140027ebb:	add    BYTE PTR [rbx],al
   140027ebd:	or     edi,DWORD PTR [rdi]
   140027ebf:	outs   dx,BYTE PTR gs:[rsi]
   140027ec1:	fs jae 0x140027f1b
   140027ec4:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   140027ecc:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027ed3:	rex.X
   140027ed4:	pop    r15
   140027ed6:	rex.WRX
   140027ed7:	rex.B
   140027ed8:	rex.RB
   140027ed9:	rex.X push rsi
   140027edb:	xor    DWORD PTR [rax+0x57],eax
   140027ede:	xor    al,0x43
   140027ee0:	(bad)  
   140027ee1:	jae    0x140027f48
   140027ee3:	push   rbx
   140027ee4:	outs   dx,BYTE PTR gs:[rsi]
   140027ee6:	jae    0x140027f51
   140027ee8:	je     0x140027f53
   140027eea:	jbe    0x140027f55
   140027eec:	je     0x140027f67
   140027eee:	rex push rcx
   140027ef0:	je     0x140027f32
   140027ef2:	rex
   140027ef3:	rex pop rdx
   140027ef5:	add    bh,al
   140027ef7:	sbb    BYTE PTR [rdi],bh
   140027ef9:	je     0x140027f6a
   140027efb:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140027efd:	ja     0x140027f64
   140027eff:	jb     0x140027f41
   140027f01:	push   rcx
   140027f02:	push   rbx
   140027f03:	je     0x140027f77
   140027f05:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027f0c:	rex.X
   140027f0d:	rex.B (bad) 
   140027f0f:	push   r14
   140027f11:	xor    DWORD PTR [rax+0x58],eax
   140027f14:	pop    rdx
   140027f15:	add    BYTE PTR [rdx],bh
   140027f17:	(bad)  
   140027f18:	(bad)  
   140027f19:	(bad)  
   140027f1a:	(bad)
   140027f1f:	je     0x140027f86
   140027f21:	imul   r13d,DWORD PTR [rbp+r12*2+0x50],0x40687461
   140027f2a:	push   rcx
   140027f2b:	imul   r14d,DWORD PTR [rdx+0x40],0x42455140
   140027f33:	rex.B (bad) 
   140027f35:	push   r14
   140027f37:	push   rcx
   140027f38:	push   rbx
   140027f39:	je     0x140027fad
   140027f3b:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   140027f42:	rex.X push rsi
   140027f44:	xor    al,BYTE PTR [rax+0x40]
   140027f47:	pop    rdx
   140027f48:	add    BYTE PTR [rax],al
   140027f4a:	or     QWORD PTR [rdi],rdi
   140027f4d:	movsxd esi,DWORD PTR [rbp+0x72]
   140027f50:	jb     0x140027fb7
   140027f52:	outs   dx,BYTE PTR ds:[rsi]
   140027f53:	je     0x140027f95
   140027f55:	push   rcx
   140027f56:	imul   r14d,DWORD PTR [rdx+0x40],0x3f415340
   140027f5e:	push   r14
   140027f60:	xor    DWORD PTR [rax+0x58],eax
   140027f63:	pop    rdx
   140027f64:	add    BYTE PTR [rax],al
   140027f66:	add    DWORD PTR [rdi+rdi*1],0x5351383f
   140027f6d:	je     0x140027fe1
   140027f6f:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027f76:	rex.X
   140027f77:	pop    r15
   140027f79:	rex.WRX push rax
   140027f7b:	rex.RB
   140027f7c:	rex.X
   140027f7d:	rex.R
   140027f7e:	rex pop rdx
   140027f80:	add    BYTE PTR [rax],al
   140027f82:	(bad)  
   140027f83:	(bad)  
   140027f84:	(bad)  
   140027f85:	jae    0x140027ff7
   140027f87:	ins    BYTE PTR es:[rdi],dx
   140027f88:	imul   esi,DWORD PTR [rax+rax*2+0x51],0x69727453
   140027f90:	outs   dx,BYTE PTR ds:[rsi]
   140027f91:	addr32 rex
   140027f93:	rex push rcx
   140027f95:	rex.RB
   140027f96:	rex.X
   140027f97:	rex.B (bad) 
   140027f99:	push   r14
   140027f9b:	push   rcx
   140027f9c:	push   rbx
   140027f9d:	je     0x140028011
   140027f9f:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140027fa6:	rex
   140027fa7:	rex push rsi
   140027fa9:	push   rcx
   140027faa:	rex.XB push 0x40407261
   140027fb0:	push   rdi
   140027fb1:	xor    al,0x53
   140027fb3:	jo     0x140028021
   140027fb5:	imul   esi,DWORD PTR [rdx+rax*2+0x65],0x69766168
   140027fbd:	outs   dx,DWORD PTR ds:[rsi]
   140027fbe:	jb     0x140028000
   140027fc0:	xor    DWORD PTR [rax+0x57],eax
   140027fc3:	xor    al,0x43
   140027fc5:	(bad)  
   140027fc6:	jae    0x14002802d
   140027fc8:	push   rbx
   140027fc9:	outs   dx,BYTE PTR gs:[rsi]
   140027fcb:	jae    0x140028036
   140027fcd:	je     0x140028038
   140027fcf:	jbe    0x14002803a
   140027fd1:	je     0x14002804c
   140027fd3:	rex push rcx
   140027fd5:	je     0x140028017
   140027fd7:	rex
   140027fd8:	rex pop rdx
   140027fda:	add    BYTE PTR [rax],al
   140027fdc:	add    al,0x8
   140027fde:	(bad)  
   140027fdf:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
   140027fe3:	jb     0x140028025
   140027fe5:	push   rcx
   140027fe6:	rex.X jns 0x14002805d
   140027fe9:	gs rex.B jb 0x14002805f
   140027fed:	(bad)  
   140027fee:	jns    0x140028030
   140027ff0:	rex push rcx
   140027ff2:	rex.RB
   140027ff3:	rex.B
   140027ff4:	pop    r8
   140027ff6:	pop    rax
   140027ff7:	pop    rdx
   140027ff8:	add    BYTE PTR [rax],al
   140027ffa:	mov    eax,DWORD PTR [rdx]
   140027ffc:	(bad)  
   140027ffd:	(bad)  
   140027ffe:	xor    DWORD PTR [rcx+0x46],edx
   140028001:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x406f666e
   140028009:	rex push rcx
   14002800b:	rex.RB
   14002800c:	rex.B
   14002800d:	rex.B
   14002800e:	rex pop rax
   140028010:	pop    rdx
   140028011:	add    BYTE PTR [rsi+0x15],dl
   140028014:	(bad)  
   140028015:	jae    0x14002807c
   140028017:	je     0x14002805c
   140028019:	jne    0x14002808d
   14002801b:	jb     0x140028082
   14002801d:	outs   dx,BYTE PTR ds:[rsi]
   14002801e:	je     0x140028060
   140028020:	push   rcx
   140028021:	imul   r14d,DWORD PTR [rdx+0x40],0x5f415340
   140028029:	rex.WRX
   14002802a:	rex.B
   14002802b:	rex.RB
   14002802c:	rex.X push rsi
   14002802e:	push   rcx
   14002802f:	push   rbx
   140028030:	je     0x1400280a4
   140028032:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140028039:	add    BYTE PTR [rax],ah
   14002803b:	adc    DWORD PTR [rdi],edi
   14002803d:	jo     0x1400280a0
   14002803f:	je     0x1400280a9
   140028041:	rex push rcx
   140028043:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   14002804c:	rex push rcx
   14002804e:	rex.RB
   14002804f:	rex.X
   140028050:	rex.B (bad) 
   140028052:	push   r14
   140028054:	push   rcx
   140028055:	push   rbx
   140028056:	je     0x1400280ca
   140028058:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14002805f:	add    BYTE PTR [rdi+0x303f3f00],dh
   140028065:	push   rcx
   140028066:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   14002806f:	rex push rcx
   140028071:	rex.RB
   140028072:	rex.B
   140028073:	rex.B
   140028074:	rex
   140028075:	rex.B
   140028076:	rex.RB
   140028077:	rex.X push rsi
   140028079:	push   rcx
   14002807a:	push   rbx
   14002807b:	je     0x1400280ef
   14002807d:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140028084:	add    BYTE PTR [rax],al
   140028086:	pop    rcx
   140028087:	or     DWORD PTR [rdi],edi
   140028089:	movsxd esi,DWORD PTR [rbp+0x72]
   14002808c:	jb     0x1400280f3
   14002808e:	outs   dx,BYTE PTR ds:[rsi]
   14002808f:	je     0x1400280e1
   140028091:	(bad)  
   140028092:	je     0x1400280fc
   140028094:	rex push rcx
   140028096:	imul   r14d,DWORD PTR [rdx+0x40],0x3f415340
   14002809e:	push   r14
   1400280a0:	push   rcx
   1400280a1:	push   rbx
   1400280a2:	je     0x140028116
   1400280a4:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   1400280ab:	add    ah,bl
   1400280ad:	add    bh,BYTE PTR [rdi]
   1400280af:	(bad)  
   1400280b0:	xor    DWORD PTR [rcx+0x54],edx
   1400280b3:	gs js  0x14002812a
   1400280b6:	push   rbx
   1400280b7:	je     0x14002812b
   1400280b9:	gs (bad) 
   1400280bb:	ins    DWORD PTR es:[rdi],dx
   1400280bc:	rex
   1400280bd:	rex push rbp
   1400280bf:	rex.RB
   1400280c0:	rex.B
   1400280c1:	rex.B
   1400280c2:	rex pop rax
   1400280c4:	pop    rdx
   1400280c5:	add    BYTE PTR [rbp+0x13],cl
   1400280c8:	(bad)  
   1400280c9:	jb     0x140028130
   1400280cb:	(bad)  
   1400280cc:	fs rex.B ins BYTE PTR es:[rdi],dx
   1400280cf:	ins    BYTE PTR es:[rdi],dx
   1400280d0:	rex push rcx
   1400280d2:	push   rsp
   1400280d3:	gs js  0x14002814a
   1400280d6:	push   rbx
   1400280d7:	je     0x14002814b
   1400280d9:	gs (bad) 
   1400280db:	ins    DWORD PTR es:[rdi],dx
   1400280dc:	rex
   1400280dd:	rex push rcx
   1400280df:	rex.RB
   1400280e0:	rex.B
   1400280e1:	rex.B (bad) 
   1400280e3:	push   r14
   1400280e5:	push   rcx
   1400280e6:	push   rbx
   1400280e7:	je     0x14002815b
   1400280e9:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   1400280f0:	add    BYTE PTR [rax],al
   1400280f2:	mov    edx,0x303f3f01
   1400280f7:	push   rcx
   1400280f8:	push   rsp
   1400280f9:	gs js  0x140028170
   1400280fc:	push   rbx
   1400280fd:	je     0x140028171
   1400280ff:	gs (bad) 
   140028101:	ins    DWORD PTR es:[rdi],dx
   140028102:	rex
   140028103:	rex push rcx
   140028105:	rex.RB
   140028106:	rex.B
   140028107:	rex.B
   140028108:	rex push rax
   14002810a:	rex.RB
   14002810b:	push   r14
   14002810d:	push   rcx
   14002810e:	rex.WB
   14002810f:	rex.WRXB
   140028110:	rex.R
   140028111:	gs jbe 0x14002817d
   140028114:	movsxd esp,DWORD PTR [rbp+0x40]
   140028117:	rex
   140028118:	rex pop rdx
   14002811a:	add    BYTE PTR [rax],al
   14002811c:	rex.XB adc al,0x3f
   14002811f:	jb     0x140028186
   140028121:	jo     0x14002818f
   140028123:	(bad)  
   140028124:	movsxd esp,DWORD PTR [rbp+0x40]
   140028127:	push   rcx
   140028128:	push   rbx
   140028129:	je     0x14002819d
   14002812b:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140028132:	rex.B
   140028133:	rex.B
   140028134:	rex.B
   140028135:	rex.RB
   140028136:	push   r14
   140028138:	xor    DWORD PTR [rax+0x41],eax
   14002813b:	rex.RB
   14002813c:	rex.X push rsi
   14002813e:	xor    DWORD PTR [rax+0x30],eax
   140028141:	push   rdi
   140028142:	xor    al,0x43
   140028144:	(bad)  
   140028145:	jae    0x1400281ac
   140028147:	push   rbx
   140028148:	outs   dx,BYTE PTR gs:[rsi]
   14002814a:	jae    0x1400281b5
   14002814c:	je     0x1400281b7
   14002814e:	jbe    0x1400281b9
   140028150:	je     0x1400281cb
   140028152:	rex push rcx
   140028154:	je     0x140028196
   140028156:	rex
   140028157:	rex pop rdx
   140028159:	add    cl,ch
   14002815b:	(bad)  
   14002815c:	(bad)  
   14002815d:	(bad)  
   14002815e:	jb     0x1400281c7
   140028160:	rex push rcx
   140028162:	push   rbx
   140028163:	je     0x1400281d7
   140028165:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002816c:	rex.X
   14002816d:	rex.B (bad) 
   14002816f:	push   r14
   140028171:	xor    DWORD PTR [rax+0x48],eax
   140028174:	rex.W
   140028175:	rex.W push rsi
   140028177:	push   rcx
   140028178:	rex.XB push 0x40407261
   14002817e:	rex pop rdx
   140028180:	add    BYTE PTR [rax],al
   140028182:	push   rdi
   140028183:	add    BYTE PTR [rdi],bh
   140028185:	(bad)  
   140028186:	xor    BYTE PTR [rcx+0x43],dl
   140028189:	push   0x40407261
   14002818e:	push   rcx
   14002818f:	rex.RB
   140028190:	rex.B
   140028191:	rex.B
   140028192:	rex push rbp
   140028194:	push   rcx
   140028195:	rex.WR (bad) 
   140028197:	je     0x140028202
   140028199:	outs   dx,BYTE PTR ds:[rsi]
   14002819a:	xor    DWORD PTR [rbx+0x68],eax
   14002819d:	(bad)  
   14002819e:	jb     0x1400281e0
   1400281a0:	rex
   1400281a1:	rex pop rdx
   1400281a3:	add    ch,cl
   1400281a5:	(bad)  
   1400281a6:	(bad)  
   1400281a7:	(bad)  
   1400281a8:	jo     0x14002821a
   1400281aa:	outs   dx,BYTE PTR gs:[rsi]
   1400281ac:	fs rex push rcx
   1400281af:	push   rbx
   1400281b0:	je     0x140028224
   1400281b2:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400281b9:	rex.B
   1400281ba:	rex.B
   1400281bb:	rex.B
   1400281bc:	rex.RB
   1400281bd:	push   r14
   1400281bf:	xor    DWORD PTR [rax+0x56],eax
   1400281c2:	push   rcx
   1400281c3:	rex.XB push 0x40407261
   1400281c9:	rex pop rdx
   1400281cb:	add    dl,dl
   1400281cd:	add    al,0x3f
   1400281cf:	(bad)  
   1400281d0:	push   r9
   1400281d2:	rex.X jns 0x140028249
   1400281d5:	gs rex.B jb 0x14002824b
   1400281d9:	(bad)  
   1400281da:	jns    0x14002821c
   1400281dc:	rex push rcx
   1400281de:	rex.RB
   1400281df:	rex.X
   1400281e0:	rex.B
   1400281e1:	rex.R
   1400281e2:	rex.W
   1400281e3:	rex pop rdx
   1400281e5:	add    BYTE PTR [rbp+0x5],dl
   1400281e8:	(bad)  
   1400281e9:	(bad)  
   1400281ea:	pop    rcx
   1400281eb:	push   rcx
   1400281ec:	push   rbx
   1400281ed:	je     0x140028261
   1400281ef:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400281f6:	rex.B
   1400281f7:	rex.B
   1400281f8:	rex.B
   1400281f9:	rex.RB
   1400281fa:	push   r14
   1400281fc:	xor    BYTE PTR [rax+0x56],al
   1400281ff:	push   rcx
   140028200:	rex.XB push 0x40407261
   140028206:	rex pop rdx
   140028208:	add    BYTE PTR [rax],al
   14002820a:	loope  0x140028210
   14002820c:	(bad)  
   14002820d:	(bad)  
   14002820e:	rex.X push rcx
   140028210:	rex.X jns 0x140028287
   140028213:	gs push rdx
   140028215:	gs data16 rex
   140028218:	rex push rcx
   14002821a:	rex.RB
   14002821b:	rex.X
   14002821c:	rex.B
   14002821d:	rex.R pop rax
   14002821f:	pop    rdx
   140028220:	add    BYTE PTR [rax],al
   140028222:	lahf   
   140028223:	add    bh,BYTE PTR [rdi]
   140028225:	(bad)  
   140028226:	xor    DWORD PTR [rcx+0x4c],edx
   140028229:	outs   dx,DWORD PTR ds:[rsi]
   14002822a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002822d:	gs rex
   14002822f:	rex push rcx
   140028231:	rex.RB
   140028232:	rex.B
   140028233:	rex.B
   140028234:	rex pop rax
   140028236:	pop    rdx
   140028237:	add    BYTE PTR [rip+0x6f633f09],al        # 0x1af65c146
   14002823d:	jne    0x1400282ad
   14002823f:	je     0x1400282b3
   140028241:	jns    0x140028283
   140028243:	push   rcx
   140028244:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140028246:	movsxd esp,DWORD PTR [rcx+0x6c]
   140028249:	gs rex
   14002824b:	rex push rcx
   14002824d:	rex.RB
   14002824e:	rex.X
   14002824f:	rex.B (bad) 
   140028251:	push   r15
   140028253:	xor    al,0x43
   140028255:	outs   dx,DWORD PTR ds:[rsi]
   140028256:	jne    0x1400282c6
   140028258:	je     0x1400282cc
   14002825a:	jns    0x14002829c
   14002825c:	xor    DWORD PTR [rax+0x58],eax
   14002825f:	pop    rdx
   140028260:	add    BYTE PTR [rax],al
   140028262:	or     ecx,DWORD PTR [rip+0x646e693f]        # 0x1a470eba7
   140028268:	gs js  0x1400282ba
   14002826b:	rex push cx
   14002826e:	push   rbx
   14002826f:	je     0x1400282e3
   140028271:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140028278:	rex.X
   140028279:	rex.B
   14002827a:	rex.W push rsi
   14002827c:	push   rcx
   14002827d:	rex.XB push 0x40407261
   140028283:	rex.W push rdi
   140028285:	xor    al,0x43
   140028287:	(bad)  
   140028288:	jae    0x1400282ef
   14002828a:	push   rbx
   14002828b:	outs   dx,BYTE PTR gs:[rsi]
   14002828d:	jae    0x1400282f8
   14002828f:	je     0x1400282fa
   140028291:	jbe    0x1400282fc
   140028293:	je     0x14002830e
   140028295:	rex push rcx
   140028297:	je     0x1400282d9
   140028299:	rex
   14002829a:	rex pop rdx
   14002829c:	add    BYTE PTR [rax],al
   14002829e:	(bad)  
   14002829f:	(bad)  
   1400282a1:	ins    BYTE PTR es:[rdi],dx
   1400282a2:	(bad)  
   1400282a3:	outs   dx,BYTE PTR ds:[rsi]
   1400282a4:	addr32 jne 0x140028308
   1400282a7:	addr32 gs rex push rcx
   1400282ab:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400282ad:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400282b0:	gs rex
   1400282b2:	rex push rcx
   1400282b4:	rex.RB
   1400282b5:	rex.X
   1400282b6:	rex.B (bad) 
   1400282b8:	push   r15
   1400282ba:	xor    al,0x4c
   1400282bc:	(bad)  
   1400282bd:	outs   dx,BYTE PTR ds:[rsi]
   1400282be:	addr32 jne 0x140028322
   1400282c1:	rex xor DWORD PTR gs:[eax+0x58],eax
   1400282c7:	pop    rdx
   1400282c8:	add    BYTE PTR [rax],al
   1400282ca:	add    eax,DWORD PTR [rcx]
   1400282cc:	(bad)  
   1400282cd:	(bad)  
   1400282ce:	xor    BYTE PTR [rcx+0x4c],dl
   1400282d1:	outs   dx,DWORD PTR ds:[rsi]
   1400282d2:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400282d5:	gs rex
   1400282d7:	rex push rcx
   1400282d9:	rex.RB
   1400282da:	rex.B
   1400282db:	rex.B
   1400282dc:	rex
   1400282dd:	rex.B
   1400282de:	rex.RB
   1400282df:	rex.X push rsi
   1400282e1:	push   rcx
   1400282e2:	push   rbx
   1400282e3:	je     0x140028357
   1400282e5:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400282ec:	add    BYTE PTR [rax],al
   1400282ee:	cwde   
   1400282ef:	sbb    BYTE PTR [rdi],bh
   1400282f1:	je     0x140028362
   1400282f3:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400282f5:	je     0x140028337
   1400282f7:	push   rcx
   1400282f8:	push   rbx
   1400282f9:	je     0x14002836d
   1400282fb:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140028302:	rex.X
   140028303:	rex.B
   140028304:	rex.W push rax
   140028306:	rex.RB
   140028307:	pop    r15
   140028309:	rex.WRX
   14002830a:	rex.W
   14002830b:	rex pop rdx
   14002830d:	add    BYTE PTR [rdx+0x8],ah
   140028310:	(bad)  
   140028311:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140028314:	jo     0x140028377
   140028316:	jb     0x14002837d
   140028318:	rex push rcx
   14002831a:	push   rbx
   14002831b:	je     0x14002838f
   14002831d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140028324:	rex.X
   140028325:	rex.B
   140028326:	rex.W push rsi
   140028328:	push   rcx
   140028329:	rex.WR (bad) 
   14002832b:	je     0x140028396
   14002832d:	outs   dx,BYTE PTR ds:[rsi]
   14002832e:	xor    DWORD PTR [rbx+0x74],edx
   140028331:	jb     0x14002839c
   140028333:	outs   dx,BYTE PTR ds:[rsi]
   140028334:	addr32 rex
   140028336:	rex push rdi
   140028338:	xor    al,0x43
   14002833a:	(bad)  
   14002833b:	jae    0x1400283a2
   14002833d:	push   rbx
   14002833e:	outs   dx,BYTE PTR gs:[rsi]
   140028340:	jae    0x1400283ab
   140028342:	je     0x1400283ad
   140028344:	jbe    0x1400283af
   140028346:	je     0x1400283c1
   140028348:	rex push rcx
   14002834a:	je     0x14002838c
   14002834c:	rex
   14002834d:	rex pop rdx
   14002834f:	add    BYTE PTR [rcx],ch
   140028351:	sbb    DWORD PTR [rdi],edi
   140028353:	je     0x1400283c4
   140028355:	push   rbp
   140028356:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140028358:	je     0x14002839a
   14002835a:	push   rcx
   14002835b:	push   rbx
   14002835c:	je     0x1400283d0
   14002835e:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140028365:	rex.X
   140028366:	rex.B
   140028367:	rex.WB push r8
   140028369:	rex.RB
   14002836a:	pop    r15
   14002836c:	rex.WRX
   14002836d:	rex.W
   14002836e:	rex pop rdx
   140028370:	add    BYTE PTR [rax],al
   140028372:	sbb    edx,DWORD PTR [rax]
   140028374:	(bad)  
   140028375:	ins    DWORD PTR es:[rdi],dx
   140028376:	imul   esp,DWORD PTR [rax+rax*2+0x51],0x69727453
   14002837e:	outs   dx,BYTE PTR ds:[rsi]
   14002837f:	addr32 rex
   140028381:	rex push rcx
   140028383:	rex.RB
   140028384:	rex.X
   140028385:	rex.B (bad) 
   140028387:	push   r14
   140028389:	xor    DWORD PTR [rax+0x48],eax
   14002838c:	rex.W
   14002838d:	rex pop rdx
   14002838f:	add    BYTE PTR [rdi+0x17],ch
   140028392:	(bad)  
   140028393:	jae    0x140028409
   140028395:	(bad)  
   140028396:	jb     0x14002840c
   140028398:	jae    0x1400283f1
   14002839a:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   1400283a2:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400283a9:	rex.X
   1400283aa:	pop    r15
   1400283ac:	rex.WRX
   1400283ad:	rex.B
   1400283ae:	rex.RB
   1400283af:	rex.X push rsi
   1400283b1:	xor    DWORD PTR [rax+0x57],eax
   1400283b4:	xor    al,0x43
   1400283b6:	(bad)  
   1400283b7:	jae    0x14002841e
   1400283b9:	push   rbx
   1400283ba:	outs   dx,BYTE PTR gs:[rsi]
   1400283bc:	jae    0x140028427
   1400283be:	je     0x140028429
   1400283c0:	jbe    0x14002842b
   1400283c2:	je     0x14002843d
   1400283c4:	rex push rcx
   1400283c6:	je     0x140028408
   1400283c8:	rex
   1400283c9:	rex pop rdx
   1400283cb:	add    BYTE PTR [rax+0x8],ah
   1400283ce:	(bad)  
   1400283cf:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400283d2:	jo     0x140028435
   1400283d4:	jb     0x14002843b
   1400283d6:	rex push rcx
   1400283d8:	push   rbx
   1400283d9:	je     0x14002844d
   1400283db:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400283e2:	rex.X
   1400283e3:	rex.B
   1400283e4:	rex.W
   1400283e5:	rex.B
   1400283e6:	rex.RB
   1400283e7:	rex.X push rsi
   1400283e9:	xor    DWORD PTR [rax+0x57],eax
   1400283ec:	xor    al,0x43
   1400283ee:	(bad)  
   1400283ef:	jae    0x140028456
   1400283f1:	push   rbx
   1400283f2:	outs   dx,BYTE PTR gs:[rsi]
   1400283f4:	jae    0x14002845f
   1400283f6:	je     0x140028461
   1400283f8:	jbe    0x140028463
   1400283fa:	je     0x140028475
   1400283fc:	rex push rcx
   1400283fe:	je     0x140028440
   140028400:	rex
   140028401:	rex pop rdx
   140028403:	add    BYTE PTR [rsi],ch
   140028405:	or     edi,DWORD PTR [rdi]
   140028407:	gs jb  0x14002846b
   14002840a:	jae    0x140028471
   14002840c:	rex push rcx
   14002840e:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140028416:	rex
   140028417:	rex push rcx
   140028419:	rex.RB
   14002841a:	rex.B
   14002841b:	push   r8
   14002841d:	rex.RB
   14002841e:	push   r8
   140028420:	rex.RB
   140028421:	pop    r8
   140028423:	push   rax
   140028424:	rex.RB
   140028425:	push   r8
   140028427:	rex.RB
   140028428:	pop    r8
   14002842a:	rex pop rdx
   14002842c:	add    BYTE PTR [rax],al
   14002842e:	push   rax
   14002842f:	add    al,0x3f
   140028431:	(bad)  
   140028432:	ss push rcx
   140028434:	push   rsp
   140028435:	gs js  0x1400284ac
   140028438:	push   rbx
   140028439:	je     0x1400284ad
   14002843b:	gs (bad) 
   14002843d:	ins    DWORD PTR es:[rdi],dx
   14002843e:	rex
   14002843f:	rex push rcx
   140028441:	rex.RB
   140028442:	rex.B
   140028443:	rex.B
   140028444:	rex.B
   140028445:	rex.RB
   140028446:	push   r14
   140028448:	xor    BYTE PTR [rax+0x48],al
   14002844b:	rex pop rdx
   14002844d:	add    BYTE PTR [rbx+0x14],cl
   140028450:	(bad)  
   140028451:	jb     0x1400284b8
   140028453:	jo     0x1400284c1
   140028455:	(bad)  
   140028456:	movsxd esp,DWORD PTR [rbp+0x40]
   140028459:	push   rcx
   14002845a:	push   rbx
   14002845b:	je     0x1400284cf
   14002845d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140028464:	rex.B
   140028465:	rex.B
   140028466:	rex.B
   140028467:	rex.RB
   140028468:	push   r14
   14002846a:	xor    DWORD PTR [rax+0x56],eax
   14002846d:	push   rcx
   14002846e:	rex.XB push 0x40407261
   140028474:	xor    BYTE PTR [rdi+0x34],dl
   140028477:	rex.XB (bad) 
   140028479:	jae    0x1400284e0
   14002847b:	push   rbx
   14002847c:	outs   dx,BYTE PTR gs:[rsi]
   14002847e:	jae    0x1400284e9
   140028480:	je     0x1400284eb
   140028482:	jbe    0x1400284ed
   140028484:	je     0x1400284ff
   140028486:	rex push rcx
   140028488:	je     0x1400284ca
   14002848a:	rex
   14002848b:	rex pop rdx
   14002848d:	add    BYTE PTR [rcx],bh
   14002848f:	(bad)  
   140028490:	(bad)  
   140028491:	(bad)  
   140028492:	(bad)
   140028497:	je     0x1400284fe
   140028499:	imul   r14d,DWORD PTR [rdx+0x40],0x6c694651
   1400284a1:	rex.WB outs dx,BYTE PTR gs:[rsi]
   1400284a4:	outs   dx,WORD PTR ds:[rsi]
   1400284a6:	rex
   1400284a7:	rex push rcx
   1400284a9:	rex.RB
   1400284aa:	rex.X
   1400284ab:	rex.B (bad) 
   1400284ad:	push   r14
   1400284af:	push   rcx
   1400284b0:	imul   r14d,DWORD PTR [rdx+0x40],0x5a5840
   1400284b8:	rex.WX add al,0x3f
   1400284bb:	(bad)  
   1400284bc:	ss push rcx
   1400284be:	push   rsp
   1400284bf:	gs js  0x140028536
   1400284c2:	push   rbx
   1400284c3:	je     0x140028537
   1400284c5:	gs (bad) 
   1400284c7:	ins    DWORD PTR es:[rdi],dx
   1400284c8:	rex
   1400284c9:	rex push rcx
   1400284cb:	rex.RB
   1400284cc:	rex.B
   1400284cd:	rex.B
   1400284ce:	rex.B
   1400284cf:	rex.RB
   1400284d0:	push   r14
   1400284d2:	xor    BYTE PTR [rax+0x41],al
   1400284d5:	rex.RB
   1400284d6:	rex.X push rsi
   1400284d8:	push   rcx
   1400284d9:	rex.X jns 0x140028550
   1400284dc:	gs rex.B jb 0x140028552
   1400284e0:	(bad)  
   1400284e1:	jns    0x140028523
   1400284e3:	rex
   1400284e4:	rex pop rdx
   1400284e6:	add    BYTE PTR [rax],al
   1400284e8:	rex.WXB add al,0x3f
   1400284eb:	(bad)  
   1400284ec:	ss push rcx
   1400284ee:	push   rsp
   1400284ef:	gs js  0x140028566
   1400284f2:	push   rbx
   1400284f3:	je     0x140028567
   1400284f5:	gs (bad) 
   1400284f7:	ins    DWORD PTR es:[rdi],dx
   1400284f8:	rex
   1400284f9:	rex push rcx
   1400284fb:	rex.RB
   1400284fc:	rex.B
   1400284fd:	rex.B
   1400284fe:	rex.B
   1400284ff:	rex.RB
   140028500:	push   r14
   140028502:	xor    BYTE PTR [rax+0x41],al
   140028505:	rex.RB
   140028506:	rex.X push rsi
   140028508:	push   rcx
   140028509:	push   rbx
   14002850a:	je     0x14002857e
   14002850c:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140028513:	add    BYTE PTR [rdx+0x383f3f04],al
   140028519:	push   rcx
   14002851a:	push   rbx
   14002851b:	je     0x14002858f
   14002851d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140028524:	rex.X
   140028525:	pop    r15
   140028527:	rex.WRX push rsi
   140028529:	push   rcx
   14002852a:	rex.WR (bad) 
   14002852c:	je     0x140028597
   14002852e:	outs   dx,BYTE PTR ds:[rsi]
   14002852f:	xor    DWORD PTR [rbx+0x74],edx
   140028532:	jb     0x14002859d
   140028534:	outs   dx,BYTE PTR ds:[rsi]
   140028535:	addr32 rex
   140028537:	rex
   140028538:	rex pop rdx
   14002853a:	add    BYTE PTR [rax],al
   14002853c:	push   rsi
   14002853d:	add    al,0x3f
   14002853f:	(bad)  
   140028540:	ss push rcx
   140028542:	push   rsp
   140028543:	gs js  0x1400285ba
   140028546:	push   rbx
   140028547:	je     0x1400285bb
   140028549:	gs (bad) 
   14002854b:	ins    DWORD PTR es:[rdi],dx
   14002854c:	rex
   14002854d:	rex push rcx
   14002854f:	rex.RB
   140028550:	rex.B
   140028551:	rex.B
   140028552:	rex.B
   140028553:	rex.RB
   140028554:	push   r14
   140028556:	xor    BYTE PTR [rax+0x50],al
   140028559:	rex.RB
   14002855a:	rex.X
   14002855b:	rex.R
   14002855c:	rex pop rdx
   14002855e:	add    BYTE PTR [rax],al
   140028560:	rex.WXB adc rax,0x7465733f
   140028566:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140028568:	fs movsxd eax,DWORD PTR gs:[rax+0x51]
   14002856d:	push   rsp
   14002856e:	gs js  0x1400285e5
   140028571:	push   rbx
   140028572:	je     0x1400285e6
   140028574:	gs (bad) 
   140028576:	ins    DWORD PTR es:[rdi],dx
   140028577:	rex
   140028578:	rex push rcx
   14002857a:	rex.RB
   14002857b:	rex.B
   14002857c:	pop    r8
   14002857e:	push   rax
   14002857f:	rex.RB
   140028580:	push   r14
   140028582:	push   rcx
   140028583:	push   rsp
   140028584:	gs js  0x1400285fb
   140028587:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140028589:	fs movsxd eax,DWORD PTR gs:[rax+0x40]
   14002858e:	rex pop rdx
   140028590:	add    BYTE PTR [rax],al
   140028592:	jo     0x1400285a2
   140028594:	(bad)  
   140028595:	imul   esi,DWORD PTR [rbx+0x52],0x74616c65
   14002859c:	imul   esi,DWORD PTR [rsi+0x65],0x69465140
   1400285a3:	ins    BYTE PTR es:[rdi],dx
   1400285a4:	rex.WB outs dx,BYTE PTR gs:[rsi]
   1400285a7:	outs   dx,WORD PTR ds:[rsi]
   1400285a9:	rex
   1400285aa:	rex push rcx
   1400285ac:	rex.RB
   1400285ad:	rex.X
   1400285ae:	pop    r15
   1400285b0:	rex.WRX pop rax
   1400285b2:	pop    rdx
   1400285b3:	add    BYTE PTR [rbp+0x14],dh
   1400285b6:	(bad)  
   1400285b7:	jb     0x14002861e
   1400285b9:	jae    0x140028624
   1400285bb:	jp     0x140028622
   1400285bd:	rex push rcx
   1400285bf:	rex.X jns 0x140028636
   1400285c2:	gs rex.B jb 0x140028638
   1400285c6:	(bad)  
   1400285c7:	jns    0x140028609
   1400285c9:	rex push rcx
   1400285cb:	rex.RB
   1400285cc:	rex.B
   1400285cd:	pop    r8
   1400285cf:	rex.W
   1400285d0:	rex pop rdx
   1400285d2:	add    BYTE PTR [rax],al
   1400285d4:	inc    DWORD PTR [rdi+rdi*1]
   1400285d7:	(bad)  
   1400285d8:	rex.WRB
   1400285d9:	rex pop rcx
   1400285db:	pop    r15
   1400285dd:	rex.WRX
   1400285de:	rex.B
   1400285df:	rex.RB
   1400285e0:	rex.X push rsi
   1400285e2:	push   rcx
   1400285e3:	push   rbx
   1400285e4:	je     0x140028658
   1400285e6:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   1400285ed:	pop    rdx
   1400285ee:	add    BYTE PTR [rax],al
   1400285f0:	loop   0x1400285f6
   1400285f2:	(bad)  
   1400285f3:	(bad)  
   1400285f4:	rex.X push rcx
   1400285f6:	rex.XB push 0x65527261
   1400285fc:	data16 rex
   1400285fe:	rex push rcx
   140028600:	rex.RB
   140028601:	rex.X
   140028602:	rex.B (bad) 
   140028604:	push   r14
   140028606:	push   rcx
   140028607:	rex.XB push 0x40407261
   14002860d:	pop    rax
   14002860e:	pop    rdx
   14002860f:	add    bl,bl
   140028611:	add    al,0x3f
   140028613:	(bad)  
   140028614:	push   r9
   140028616:	push   rbx
   140028617:	je     0x14002868b
   140028619:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140028620:	rex.X
   140028621:	rex.B (bad) 
   140028623:	rex.X push rsi
   140028625:	push   rcx
   140028626:	rex.XB push 0x40407261
   14002862c:	rex.W
   14002862d:	rex pop rdx
   14002862f:	add    cl,dh
   140028631:	or     BYTE PTR [rdi],bh
   140028633:	movsxd ebp,DWORD PTR [rdi+0x75]
   140028636:	outs   dx,BYTE PTR ds:[rsi]
   140028637:	je     0x140028679
   140028639:	push   rcx
   14002863a:	rex.X jns 0x1400286b1
   14002863d:	gs rex.B jb 0x1400286b3
   140028641:	(bad)  
   140028642:	jns    0x140028684
   140028644:	rex push rcx
   140028646:	rex.RB
   140028647:	rex.X
   140028648:	rex.B
   140028649:	rex.W
   14002864a:	rex.R
   14002864b:	rex pop rdx
   14002864d:	add    BYTE PTR [rbp+0x303f3f01],dl
   140028653:	push   rcx
   140028654:	push   rbx
   140028655:	je     0x1400286c9
   140028657:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002865e:	rex.B
   14002865f:	rex.B
   140028660:	rex push rsi
   140028662:	push   rcx
   140028663:	rex.XB push 0x40407261
   140028669:	rex pop rdx
   14002866b:	add    BYTE PTR [rax],ah
   14002866d:	(bad)  
   14002866e:	(bad)  
   14002866f:	push   rcx
   140028670:	push   rbx
   140028671:	je     0x1400286e5
   140028673:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14002867a:	pop    rdi
   14002867b:	push   0x6f
   14002867d:	imul   ebp,DWORD PTR [rsi+0x40],0x72507451
   140028684:	imul   esi,DWORD PTR [rsi+0x61],0x40406574
   14002868b:	pop    rcx
   14002868c:	rex.B (bad) 
   14002868e:	push   r14
   140028690:	push   rcx
   140028691:	push   rbx
   140028692:	je     0x140028706
   140028694:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   14002869b:	rex.X push rsi
   14002869d:	push   rcx
   14002869e:	push   rbx
   14002869f:	je     0x140028713
   1400286a1:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   1400286a8:	rex
   1400286a9:	rex push rax
   1400286ab:	rex.RB
   1400286ac:	rex.X push rsi
   1400286ae:	push   rcx
   1400286af:	rex.XB push 0x40407261
   1400286b5:	rex.W
   1400286b6:	rex pop rdx
   1400286b8:	add    BYTE PTR [rax],al
   1400286ba:	cwde   
   1400286bb:	or     BYTE PTR [rdi],bh
   1400286bd:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400286c0:	jae    0x140028736
   1400286c2:	rex.R (bad) 
   1400286c4:	je     0x140028727
   1400286c6:	rex push rcx
   1400286c8:	push   rbx
   1400286c9:	je     0x14002873d
   1400286cb:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400286d2:	rex.X
   1400286d3:	push   r8
   1400286d5:	rex.RB
   1400286d6:	rex.X push rsi
   1400286d8:	push   rcx
   1400286d9:	rex.XB push 0x40407261
   1400286df:	pop    rax
   1400286e0:	pop    rdx
   1400286e1:	add    BYTE PTR [rcx+0x69663f0b],ch
   1400286e7:	ins    BYTE PTR es:[rdi],dx
   1400286e8:	gs rex.WRX (bad) 
   1400286eb:	ins    DWORD PTR es:[rdi],dx
   1400286ec:	gs rex push rcx
   1400286ef:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x42455540
   1400286f8:	rex.B (bad) 
   1400286fa:	push   r14
   1400286fc:	push   rcx
   1400286fd:	push   rbx
   1400286fe:	je     0x140028772
   140028700:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140028707:	add    BYTE PTR [rip+0x72653f0b],bh        # 0x1b267c618
   14002870d:	jb     0x14002877e
   14002870f:	jb     0x140028764
   140028711:	je     0x140028785
   140028713:	imul   ebp,DWORD PTR [rsi+0x67],0x4f495140
   14002871a:	rex.R
   14002871b:	gs jbe 0x140028787
   14002871e:	movsxd esp,DWORD PTR [rbp+0x40]
   140028721:	rex push rcx
   140028723:	rex.RB
   140028724:	rex.X
   140028725:	rex.B (bad) 
   140028727:	push   r14
   140028729:	push   rcx
   14002872a:	push   rbx
   14002872b:	je     0x14002879f
   14002872d:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140028734:	add    BYTE PTR [rax],al
   140028736:	push   rsp
   140028737:	add    eax,0x51593f3f
   14002873c:	push   rbx
   14002873d:	je     0x1400287b1
   14002873f:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140028746:	rex.B
   140028747:	rex.B
   140028748:	rex.B
   140028749:	rex.RB
   14002874a:	push   r14
   14002874c:	xor    BYTE PTR [rax+0x50],al
   14002874f:	rex.RB
   140028750:	rex.X
   140028751:	rex.R
   140028752:	rex pop rdx
   140028754:	add    BYTE PTR [rax],al
   140028756:	sub    al,0xf
   140028758:	(bad)  
   140028759:	ins    BYTE PTR es:[rdi],dx
   14002875a:	(bad)  
   14002875b:	jae    0x1400287d1
   14002875d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14002875f:	fs gs js 0x1400287b2
   140028763:	rex push cx
   140028766:	push   rbx
   140028767:	je     0x1400287db
   140028769:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140028770:	rex.X
   140028771:	rex.B
   140028772:	rex.W push rsi
   140028774:	push   rcx
   140028775:	rex.XB push 0x40407261
   14002877b:	rex.W push rdi
   14002877d:	xor    al,0x43
   14002877f:	(bad)  
   140028780:	jae    0x1400287e7
   140028782:	push   rbx
   140028783:	outs   dx,BYTE PTR gs:[rsi]
   140028785:	jae    0x1400287f0
   140028787:	je     0x1400287f2
   140028789:	jbe    0x1400287f4
   14002878b:	je     0x140028806
   14002878d:	rex push rcx
   14002878f:	je     0x1400287d1
   140028791:	rex
   140028792:	rex pop rdx
   140028794:	add    BYTE PTR [rax],al
   140028796:	out    dx,al
   140028797:	(bad)  
   140028798:	(bad)  
   140028799:	jae    0x140028804
   14002879b:	ins    DWORD PTR es:[rdi],dx
   14002879c:	jo     0x14002880a
   14002879e:	imul   esp,DWORD PTR [rsi+0x69],0x51406465
   1400287a5:	push   rbx
   1400287a6:	je     0x14002881a
   1400287a8:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400287af:	rex.X
   1400287b0:	rex.B (bad) 
   1400287b2:	push   r14
   1400287b4:	xor    DWORD PTR [rax+0x58],eax
   1400287b7:	pop    rdx
   1400287b8:	add    BYTE PTR [rax],al
   1400287ba:	mov    bl,0xf
   1400287bc:	(bad)  
   1400287bd:	ins    DWORD PTR es:[rdi],dx
   1400287be:	(bad)  
   1400287bf:	je     0x140028824
   1400287c1:	push   0x654c6465
   1400287c6:	outs   dx,BYTE PTR ds:[rsi]
   1400287c7:	addr32 je 0x140028832
   1400287ca:	rex push rcx
   1400287cc:	push   rdx
   1400287cd:	gs addr32 rex.RB js 0x140028842
   1400287d2:	rex
   1400287d3:	rex push rcx
   1400287d5:	rex.RB
   1400287d6:	rex.X
   1400287d7:	rex.B
   1400287d8:	rex.W pop rax
   1400287da:	pop    rdx
   1400287db:	add    BYTE PTR [rdi+0x14],al
   1400287de:	(bad)  
   1400287df:	jb     0x140028846
   1400287e1:	jo     0x14002884f
   1400287e3:	(bad)  
   1400287e4:	movsxd esp,DWORD PTR [rbp+0x40]
   1400287e7:	push   rcx
   1400287e8:	push   rbx
   1400287e9:	je     0x14002885d
   1400287eb:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400287f2:	rex.B
   1400287f3:	rex.B
   1400287f4:	rex.B
   1400287f5:	rex.RB
   1400287f6:	push   r14
   1400287f8:	xor    DWORD PTR [rax+0x48],eax
   1400287fb:	rex.W
   1400287fc:	rex.B
   1400287fd:	rex.RB
   1400287fe:	rex.X push rsi
   140028800:	xor    DWORD PTR [rax+0x40],eax
   140028803:	pop    rdx
   140028804:	add    BYTE PTR [rax],al
   140028806:	add    eax,0x6e693f0d
   14002880b:	fs gs js 0x14002885e
   14002880f:	rex push cx
   140028812:	push   rbx
   140028813:	je     0x140028887
   140028815:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002881c:	rex.X
   14002881d:	rex.B
   14002881e:	rex.W
   14002881f:	rex.B
   140028820:	rex.RB
   140028821:	push   r14
   140028823:	push   rcx
   140028824:	push   rdx
   140028825:	gs addr32 rex.RB js 0x14002889a
   14002882a:	rex
   14002882b:	rex
   14002882c:	rex.W
   14002882d:	rex pop rdx
   14002882f:	add    BYTE PTR [rsi],al
   140028831:	or     eax,0x646e693f
   140028836:	gs js  0x140028888
   140028839:	rex push cx
   14002883c:	push   rbx
   14002883d:	je     0x1400288b1
   14002883f:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140028846:	rex.X
   140028847:	rex.B
   140028848:	rex.W
   140028849:	rex.B
   14002884a:	rex.RB
   14002884b:	rex.X push rsi
   14002884d:	xor    DWORD PTR [rax+0x48],eax
   140028850:	push   rdi
   140028851:	xor    al,0x43
   140028853:	(bad)  
   140028854:	jae    0x1400288bb
   140028856:	push   rbx
   140028857:	outs   dx,BYTE PTR gs:[rsi]
   140028859:	jae    0x1400288c4
   14002885b:	je     0x1400288c6
   14002885d:	jbe    0x1400288c8
   14002885f:	je     0x1400288da
   140028861:	rex push rcx
   140028863:	je     0x1400288a5
   140028865:	rex
   140028866:	rex pop rdx
   140028868:	add    BYTE PTR [rax],al
   14002886a:	movabs eax,ds:0x5251407061633f07
   140028873:	gs addr32 rex.RB js 0x1400288e8
   140028878:	rex
   140028879:	rex push rcx
   14002887b:	rex.RB
   14002887c:	rex.B
   14002887d:	rex.B (bad) 
   14002887f:	push   r14
   140028881:	push   rcx
   140028882:	push   rbx
   140028883:	je     0x1400288f7
   140028885:	imul   ebp,DWORD PTR [rsi+0x67],0x40484040
   14002888c:	pop    rdx
   14002888d:	add    al,bh
   14002888f:	or     al,0x3f
   140028891:	imul   ebp,DWORD PTR [rsi+0x64],0x6e497865
   140028898:	rex push rcx
   14002889a:	push   rdx
   14002889b:	gs addr32 rex.RB js 0x140028910
   1400288a0:	rex
   1400288a1:	rex push rcx
   1400288a3:	rex.RB
   1400288a4:	rex.X
   1400288a5:	rex.B
   1400288a6:	rex.W
   1400288a7:	rex.B
   1400288a8:	rex.RB
   1400288a9:	rex.X push rsi
   1400288ab:	push   rcx
   1400288ac:	push   rbx
   1400288ad:	je     0x140028921
   1400288af:	imul   ebp,DWORD PTR [rsi+0x67],0x57484040
   1400288b6:	xor    al,0x43
   1400288b8:	(bad)  
   1400288b9:	jb     0x140028920
   1400288bb:	je     0x14002890a
   1400288bd:	outs   dx,DWORD PTR ds:[rsi]
   1400288be:	fs rex xor DWORD PTR gs:[rax+0x40],eax
   1400288c4:	pop    rdx
   1400288c5:	add    BYTE PTR [rsi+0x70613f06],bh
   1400288cb:	jo     0x140028932
   1400288cd:	outs   dx,BYTE PTR ds:[rsi]
   1400288ce:	fs rex push rcx
   1400288d1:	rex.X jns 0x140028948
   1400288d4:	gs rex.B jb 0x14002894a
   1400288d8:	(bad)  
   1400288d9:	jns    0x14002891b
   1400288db:	rex push rcx
   1400288dd:	rex.RB
   1400288de:	rex.B
   1400288df:	rex.B
   1400288e0:	rex.B
   1400288e1:	rex.RB
   1400288e2:	push   r14
   1400288e4:	xor    DWORD PTR [rax+0x41],eax
   1400288e7:	rex.RB
   1400288e8:	rex.X push rsi
   1400288ea:	xor    DWORD PTR [rax+0x40],eax
   1400288ed:	pop    rdx
   1400288ee:	add    BYTE PTR [rax],al
   1400288f0:	xchg   esi,eax
   1400288f1:	add    DWORD PTR [rdi],edi
   1400288f3:	(bad)  
   1400288f4:	xor    BYTE PTR [rcx+0x53],dl
   1400288f7:	je     0x14002896b
   1400288f9:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140028900:	rex.B
   140028901:	rex.B
   140028902:	rex push rsi
   140028904:	push   rcx
   140028905:	rex.WR (bad) 
   140028907:	je     0x140028972
   140028909:	outs   dx,BYTE PTR ds:[rsi]
   14002890a:	xor    DWORD PTR [rbx+0x74],edx
   14002890d:	jb     0x140028978
   14002890f:	outs   dx,BYTE PTR ds:[rsi]
   140028910:	addr32 rex
   140028912:	rex
   140028913:	rex pop rdx
   140028915:	add    BYTE PTR [rbx+0x74733f17],bh
   14002891b:	(bad)  
   14002891c:	je     0x140028987
   14002891e:	movsxd ecx,DWORD PTR [rbp+0x65]
   140028921:	je     0x140028984
   140028923:	rex.WRXB (bad) 
   140028925:	push   0x65
   140028927:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14002892b:	push   rsp
   14002892c:	jb     0x14002898f
   14002892e:	outs   dx,BYTE PTR ds:[rsi]
   14002892f:	jae    0x14002899d
   140028931:	(bad)  
   140028932:	je     0x1400289a3
   140028934:	jb     0x140028976
   140028936:	xor    dl,BYTE PTR [rbp+0x51]
   14002893a:	rex.WRB
   14002893b:	gs je  0x14002899f
   14002893e:	rex.WRXB (bad) 
   140028940:	push   0x65
   140028942:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140028946:	rex.X add BYTE PTR [rcx+0x74],dl
   14002894a:	xor    eax,0x65726f43
   14002894f:	cs fs ins BYTE PTR es:[rdi],dx
   140028952:	ins    BYTE PTR es:[rdi],dx
   140028953:	add    BYTE PTR [rdx+0x74656704],bh
   140028959:	movsxd eax,DWORD PTR [rax]
   14002895b:	add    BYTE PTR [rbx+0x0],ah
   14002895e:	pop    rdi
   14002895f:	pop    rdi
   140028960:	rex.XB js 0x1400289db
   140028963:	rex.RX jb 0x1400289c7
   140028966:	ins    DWORD PTR es:[rdi],dx
   140028967:	gs rex.W (bad) 
   14002896a:	outs   dx,BYTE PTR ds:[rsi]
   14002896b:	fs ins BYTE PTR es:[rdi],dx
   14002896d:	gs jb  0x1400289a3
   140028970:	add    BYTE PTR [rax],al
   140028972:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140028973:	add    al,0x66
   140028975:	jo     0x1400289e9
   140028977:	imul   ebp,DWORD PTR [rsi+0x74],0x920066
   14002897e:	pop    rdi
   14002897f:	pop    rdi
   140028980:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
   140028987:	movsxd eax,DWORD PTR [rax]
   140028989:	add    BYTE PTR [rbx],dl
   14002898b:	add    BYTE PTR [rdi],bh
   14002898d:	(bad)  
   14002898e:	xor    eax,DWORD PTR [rax+0x59]
   140028991:	pop    r8
   140028993:	push   rax
   140028994:	rex.RB
   140028995:	pop    r8
   140028997:	rex pop rdx
   140028999:	add    al,dh
   14002899b:	add    al,0x6d
   14002899d:	gs ins DWORD PTR es:[rdi],dx
   14002899f:	movsxd esi,DWORD PTR [rax+0x79]
   1400289a2:	add    BYTE PTR [rax],al
   1400289a4:	rex.WB add BYTE PTR [r15+0x43],bl
   1400289a8:	js     0x140028a22
   1400289aa:	push   rsp
   1400289ab:	push   0x45776f72
   1400289b0:	js     0x140028a15
   1400289b2:	gs jo  0x140028a29
   1400289b5:	imul   ebp,DWORD PTR [rdi+0x6e],0x51e0000
   1400289bc:	jae    0x140028a32
   1400289be:	jb     0x140028a23
   1400289c0:	push   0x1b000072
   1400289c5:	add    eax,0x61637373
   1400289ca:	outs   dx,BYTE PTR ds:[rsi]
   1400289cb:	pop    di
   1400289cd:	jae    0x1400289cf
   1400289cf:	add    dh,al
   1400289d1:	add    al,0x69
   1400289d3:	jae    0x140028a39
   1400289d5:	imul   esp,DWORD PTR [rdi+0x69],0x4db0074
   1400289dc:	imul   esi,DWORD PTR [rbx+0x78],0x69676964
   1400289e3:	je     0x1400289e5
   1400289e5:	add    bl,al
   1400289e7:	add    al,0x69
   1400289e9:	jae    0x140028a4c
   1400289eb:	ins    BYTE PTR es:[rdi],dx
   1400289ec:	outs   dx,BYTE PTR ds:[rsi]
   1400289ed:	jne    0x140028a5c
   1400289ef:	add    ah,al
   1400289f1:	add    al,0x69
   1400289f3:	jae    0x140028a56
   1400289f5:	ins    BYTE PTR es:[rdi],dx
   1400289f6:	jo     0x140028a60
   1400289f8:	(bad)  
   1400289f9:	add    BYTE PTR [rcx],dl
   1400289fb:	add    BYTE PTR [rdi],bh
   1400289fd:	(bad)  
   1400289fe:	xor    al,BYTE PTR [rax+0x59]
   140028a01:	push   r8
   140028a03:	rex.RB
   140028a04:	pop    r8
   140028a06:	pop    rdi
   140028a07:	rex.WXB
   140028a08:	rex pop rdx
   140028a0a:	add    BYTE PTR [rax],al
   140028a0c:	and    eax,0x72747305
   140028a11:	gs jb  0x140028a86
   140028a14:	outs   dx,DWORD PTR ds:[rsi]
   140028a15:	jb     0x140028a76
   140028a17:	jae    0x140028a19
   140028a19:	add    BYTE PTR [rip+0x72655f01],bh        # 0x1b267e920
   140028a1f:	jb     0x140028a8f
   140028a21:	outs   dx,DWORD PTR ds:[rsi]
   140028a22:	add    BYTE PTR [rax],al
   140028a24:	xchg   ebp,eax
   140028a25:	add    al,0x66
   140028a27:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   140028a2b:	add    BYTE PTR gs:[rax],al
   140028a2e:	movabs ds:0x735f6e65706f6604,eax
   140028a37:	add    bh,ch
   140028a39:	add    al,0x6d
   140028a3b:	gs ins DWORD PTR es:[rdi],dx
   140028a3d:	movsxd ebp,DWORD PTR [rbp+0x70]
   140028a40:	add    BYTE PTR [rax],al
   140028a42:	and    eax,DWORD PTR [rax]
   140028a44:	(bad)  
   140028a45:	(bad)  
   140028a46:	pop    rdi
   140028a47:	push   rsi
   140028a48:	rex pop rcx
   140028a4a:	pop    r8
   140028a4c:	push   rax
   140028a4d:	rex.RB
   140028a4e:	pop    r8
   140028a50:	rex pop rdx
   140028a52:	add    BYTE PTR [rax],al
   140028a54:	hlt    
   140028a55:	add    al,0x6d
   140028a57:	gs ins DWORD PTR es:[rdi],dx
   140028a59:	jae    0x140028ac0
   140028a5b:	je     0x140028a5d
   140028a5d:	add    ah,cl
   140028a5f:	add    al,0x69
   140028a61:	jae    0x140028ad6
   140028a63:	jo     0x140028ac6
   140028a65:	movsxd esp,DWORD PTR [rbp+0x0]
   140028a68:	retf   
   140028a69:	add    al,0x69
   140028a6b:	jae    0x140028add
   140028a6d:	jne    0x140028add
   140028a6f:	movsxd esi,DWORD PTR [rax+rax*1-0x56]
   140028a73:	add    al,0x66
   140028a75:	jb     0x140028adc
   140028a77:	(bad)  
   140028a78:	add    BYTE PTR fs:[rsi+0x6f656604],dl
   140028a7f:	data16 add BYTE PTR [rax],al
   140028a82:	jmp    0x140028a86
   140028a84:	pop    rdi
   140028a85:	jo     0x140028af6
   140028a87:	jo     0x140028aee
   140028a89:	outs   dx,BYTE PTR ds:[rsi]
   140028a8a:	add    BYTE PTR [rax],al
   140028a8c:	rol    DWORD PTR [rcx],1
   140028a8e:	pop    rdi
   140028a8f:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   140028a96:	pop    rdi
   140028a97:	jo     0x140028afa
   140028a99:	jb     0x140028afc
   140028a9b:	ins    DWORD PTR es:[rdi],dx
   140028a9c:	gs je  0x140028b04
   140028a9f:	jb     0x140028b00
   140028aa1:	outs   dx,BYTE PTR ds:[rsi]
   140028aa2:	outs   dx,DWORD PTR ds:[rsi]
   140028aa3:	imul   ebp,DWORD PTR [rsi+0x66],0x534d006f
   140028aaa:	push   rsi
   140028aab:	rex.XB push r10
   140028aad:	cmp    DWORD PTR [rax],esi
   140028aaf:	cs fs ins BYTE PTR es:[rdi],dx
   140028ab2:	ins    BYTE PTR es:[rdi],dx
   140028ab3:	add    BYTE PTR [rcx+0x0],bl
   140028ab6:	pop    rdi
   140028ab7:	pop    rdi
   140028ab8:	rex.XB pop r15
   140028aba:	jae    0x140028b2c
   140028abc:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140028ac0:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140028ac7:	ins    BYTE PTR es:[rdi],dx
   140028ac8:	gs jb  0x140028acb
   140028acb:	add    BYTE PTR [rbx+rax*1+0x6c6e755f],ah
   140028ad2:	outs   dx,DWORD PTR ds:[rsi]
   140028ad3:	movsxd ebp,DWORD PTR [rbx+0x0]
   140028ad6:	test   DWORD PTR [rax],eax
   140028ad8:	pop    rdi
   140028ad9:	pop    rdi
   140028ada:	fs ins BYTE PTR es:[rdi],dx
   140028adc:	ins    BYTE PTR es:[rdi],dx
   140028add:	outs   dx,DWORD PTR ds:[rsi]
   140028ade:	outs   dx,BYTE PTR ds:[rsi]
   140028adf:	gs js  0x140028b4b
   140028ae2:	je     0x140028ae4
   140028ae4:	(bad)  
   140028ae5:	add    DWORD PTR [rdi+0x65],ebx
   140028ae8:	outs   dx,BYTE PTR ds:[rsi]
   140028ae9:	movsxd ebp,DWORD PTR [rdi+0x64]
   140028aec:	gs pop rdi
   140028aee:	jo     0x140028b5f
   140028af0:	imul   ebp,DWORD PTR [rsi+0x74],0x3d007265
   140028af7:	add    bl,BYTE PTR [rdi+0x6c]
   140028afa:	outs   dx,DWORD PTR ds:[rsi]
   140028afb:	movsxd ebp,DWORD PTR [rbx+0x0]
   140028afe:	in     al,0x2
   140028b00:	pop    rdi
   140028b01:	outs   dx,DWORD PTR ds:[rsi]
   140028b02:	outs   dx,BYTE PTR ds:[rsi]
   140028b03:	gs js  0x140028b6f
   140028b06:	je     0x140028b08
   140028b08:	sub    eax,0x65645f01
   140028b0d:	movsxd ebp,DWORD PTR [rdi+0x64]
   140028b10:	gs pop rdi
   140028b12:	jo     0x140028b83
   140028b14:	imul   ebp,DWORD PTR [rsi+0x74],0xe2007265
   140028b1b:	add    BYTE PTR [rdi+0x61],bl
   140028b1e:	ins    DWORD PTR es:[rdi],dx
   140028b1f:	jae    0x140028b88
   140028b21:	pop    rdi
   140028b22:	gs js  0x140028b8e
   140028b25:	je     0x140028b27
   140028b27:	add    BYTE PTR [rax+0x675f5f00],dl
   140028b2d:	gs je  0x140028b9d
   140028b30:	(bad)  
   140028b31:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140028b38:	push   rbp
   140028b39:	add    BYTE PTR [rdi+0x58],bl
   140028b3c:	movsxd esi,DWORD PTR [rax+0x74]
   140028b3f:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x1460072
   140028b48:	pop    rdi
   140028b49:	gs js  0x140028bb5
   140028b4c:	je     0x140028b4e
   140028b4e:	stc    
   140028b4f:	add    BYTE PTR [rdi+0x63],bl
   140028b52:	gs js  0x140028bbe
   140028b55:	je     0x140028b57
   140028b57:	add    BYTE PTR [rcx+0x69786504],dl
   140028b5d:	je     0x140028b5f
   140028b5f:	add    BYTE PTR [rcx+0x695f5f00],dl
   140028b65:	outs   dx,BYTE PTR ds:[rsi]
   140028b66:	imul   esi,DWORD PTR [rbp+riz*2+0x6e],0x1ce0076
   140028b6e:	pop    rdi
   140028b6f:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140028b76:	ins    DWORD PTR es:[rdi],dx
   140028b77:	add    bh,cl
   140028b79:	add    DWORD PTR [rdi+0x69],ebx
   140028b7c:	outs   dx,BYTE PTR ds:[rsi]
   140028b7d:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x655f6d72
   140028b85:	add    BYTE PTR [rcx],cl
   140028b87:	add    DWORD PTR [rdi+0x63],ebx
   140028b8a:	outs   dx,DWORD PTR ds:[rsi]
   140028b8b:	outs   dx,BYTE PTR ds:[rsi]
   140028b8c:	imul   sp,WORD PTR [rdi+0x74],0x7268
   140028b92:	gs (bad) 
   140028b94:	fs ins BYTE PTR es:[rdi],dx
   140028b96:	outs   dx,DWORD PTR ds:[rsi]
   140028b97:	movsxd esp,DWORD PTR [rcx+0x6c]
   140028b9a:	add    BYTE PTR gs:[rdi+0x735f5f00],bh
   140028ba1:	gs je  0x140028c19
   140028ba4:	jae    0x140028c0b
   140028ba6:	jb     0x140028c15
   140028ba8:	(bad)  
   140028ba9:	je     0x140028c13
   140028bab:	gs jb  0x140028c20
   140028bae:	add    BYTE PTR [rax],al
   140028bb0:	or     BYTE PTR [rcx],al
   140028bb2:	pop    rdi
   140028bb3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140028bb6:	ins    DWORD PTR es:[rdi],dx
   140028bb7:	outs   dx,DWORD PTR ds:[rsi]
   140028bb8:	fs add BYTE PTR gs:[rax],al
   140028bbc:	(bad)
   140028bc1:	outs   dx,DWORD PTR ds:[rsi]
   140028bc2:	fs add BYTE PTR gs:[rax],al
   140028bc6:	mov    esp,0x735f5f00
   140028bcb:	gs je  0x140028c2d
   140028bce:	(bad)  
   140028bcf:	jo     0x140028c41
   140028bd1:	pop    rdi
   140028bd2:	je     0x140028c4d
   140028bd4:	jo     0x140028c3b
   140028bd6:	add    BYTE PTR [rax],al
   140028bd8:	rex.XB add BYTE PTR [r15],dil
   140028bdb:	je     0x140028c42
   140028bdd:	jb     0x140028c4c
   140028bdf:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140028be6:	pop    rcx
   140028be7:	pop    r8
   140028be9:	pop    rax
   140028bea:	pop    rdx
   140028beb:	add    BYTE PTR [rax],bh
   140028bed:	add    BYTE PTR [rdi],bh
   140028bef:	pop    rdi
   140028bf0:	je     0x140028c6b
   140028bf2:	jo     0x140028c59
   140028bf4:	pop    rdi
   140028bf5:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   140028bfc:	outs   dx,DWORD PTR ds:[rsi]
   140028bfd:	jb     0x140028c5e
   140028bff:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   140028c06:	ins    BYTE PTR es:[rdi],dx
   140028c07:	pop    rdi
   140028c08:	ins    DWORD PTR es:[rdi],dx
   140028c09:	gs je  0x140028c74
   140028c0c:	outs   dx,DWORD PTR ds:[rsi]
   140028c0d:	fs rex je 0x140028c8a
   140028c11:	jo     0x140028c78
   140028c13:	pop    rdi
   140028c14:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   140028c1b:	rex.RB
   140028c1c:	rex.B
   140028c1d:	pop    r8
   140028c1f:	pop    rax
   140028c20:	pop    rdx
   140028c21:	add    BYTE PTR [rbx+0x635f5f00],al
   140028c27:	jb     0x140028c9d
   140028c29:	pop    rdi
   140028c2a:	fs gs (bad) 
   140028c2d:	jne    0x140028c96
   140028c2f:	addr32 gs jb 0x140028c92
   140028c33:	push   0x6b6f6f
   140028c38:	rol    BYTE PTR [rbx+rdx*2],0x6c
   140028c3c:	gs gs jo 0x140028c40
   140028c40:	(bad)  
   140028c41:	add    al,0x54
   140028c43:	gs jb  0x140028cb3
   140028c46:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140028c4d:	outs   dx,DWORD PTR ds:[rsi]
   140028c4e:	movsxd esp,DWORD PTR [rbp+0x73]
   140028c51:	jae    0x140028c53
   140028c53:	add    dh,al
   140028c55:	add    DWORD PTR [rdi+0x65],eax
   140028c58:	je     0x140028c9d
   140028c5a:	jne    0x140028cce
   140028c5c:	jb     0x140028cc3
   140028c5e:	outs   dx,BYTE PTR ds:[rsi]
   140028c5f:	je     0x140028cb1
   140028c61:	jb     0x140028cd2
   140028c63:	movsxd esp,DWORD PTR [rbp+0x73]
   140028c66:	jae    0x140028c68
   140028c68:	loop   0x140028c6e
   140028c6a:	push   rbp
   140028c6b:	outs   dx,BYTE PTR ds:[rsi]
   140028c6c:	push   0x6c646e61
   140028c71:	gs fs rex.RB js 0x140028cd9
   140028c76:	gs jo  0x140028ced
   140028c79:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140028c80:	gs jb  0x140028c83
   140028c83:	add    BYTE PTR [rbx+0x74655304],dh
   140028c89:	push   rbp
   140028c8a:	outs   dx,BYTE PTR ds:[rsi]
   140028c8b:	push   0x6c646e61
   140028c90:	gs fs rex.RB js 0x140028cf8
   140028c95:	gs jo  0x140028d0c
   140028c98:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140028c9f:	gs jb  0x140028ca2
   140028ca2:	add    al,BYTE PTR [rbx]
   140028ca4:	rex.WB jae 0x140028ceb
   140028ca7:	gs (bad) 
   140028ca9:	jne    0x140028d12
   140028cab:	addr32 gs jb 0x140028cff
   140028caf:	jb     0x140028d16
   140028cb1:	jae    0x140028d18
   140028cb3:	outs   dx,BYTE PTR ds:[rsi]
   140028cb4:	je     0x140028cb6
   140028cb6:	es add al,0x52
   140028cb9:	je     0x140028d27
   140028cbb:	push   rsi
   140028cbc:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140028cc3:	outs   dx,BYTE PTR ds:[rsi]
   140028cc4:	ja     0x140028d2f
   140028cc6:	outs   dx,BYTE PTR ds:[rsi]
   140028cc7:	add    BYTE PTR fs:[rax],al
   140028cca:	(bad)  
   140028ccb:	add    al,0x52
   140028ccd:	je     0x140028d3b
   140028ccf:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140028cd1:	outs   dx,DWORD PTR ds:[rsi]
   140028cd2:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140028cd6:	jne    0x140028d46
   140028cd8:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140028cdc:	outs   dx,BYTE PTR ds:[rsi]
   140028cdd:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140028cdf:	je     0x140028d53
   140028ce1:	jns    0x140028ce3
   140028ce3:	add    BYTE PTR [rax],bl
   140028ce5:	add    al,0x52
   140028ce7:	je     0x140028d55
   140028ce9:	rex.XB (bad) 
   140028ceb:	jo     0x140028d61
   140028ced:	jne    0x140028d61
   140028cef:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140028cf2:	outs   dx,BYTE PTR ds:[rsi]
   140028cf3:	je     0x140028d5a
   140028cf5:	js     0x140028d6b
   140028cf7:	add    BYTE PTR [rcx+0x65755103],ch
   140028cfd:	jb     0x140028d78
   140028cff:	push   rax
   140028d00:	gs jb  0x140028d69
   140028d03:	outs   dx,DWORD PTR ds:[rsi]
   140028d04:	jb     0x140028d73
   140028d06:	(bad)  
   140028d07:	outs   dx,BYTE PTR ds:[rsi]
   140028d08:	movsxd esp,DWORD PTR [rbp+0x43]
   140028d0b:	outs   dx,DWORD PTR ds:[rsi]
   140028d0c:	jne    0x140028d7c
   140028d0e:	je     0x140028d75
   140028d10:	jb     0x140028d12
   140028d12:	(bad)  
   140028d13:	add    al,BYTE PTR [rdi+0x65]
   140028d16:	je     0x140028d6c
   140028d18:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140028d1f:	je     0x140028d21
   140028d21:	add    bl,cl
   140028d23:	add    DWORD PTR [rdi+0x65],eax
   140028d26:	je     0x140028d6b
   140028d28:	jne    0x140028d9c
   140028d2a:	jb     0x140028d91
   140028d2c:	outs   dx,BYTE PTR ds:[rsi]
   140028d2d:	je     0x140028d83
   140028d2f:	push   0x64616572
   140028d34:	rex.WB
   140028d35:	add    BYTE PTR fs:[rax],al
   140028d38:	mov    DWORD PTR [rcx],0x43746547
   140028d3e:	jne    0x140028db2
   140028d40:	jb     0x140028da7
   140028d42:	outs   dx,BYTE PTR ds:[rsi]
   140028d43:	je     0x140028d95
   140028d45:	jb     0x140028db6
   140028d47:	movsxd esp,DWORD PTR [rbp+0x73]
   140028d4a:	jae    0x140028d95
   140028d4c:	add    BYTE PTR fs:[rax+0x74654702],al
   140028d53:	push   rbx
   140028d54:	jns    0x140028dc9
   140028d56:	je     0x140028dbd
   140028d58:	ins    DWORD PTR es:[rdi],dx
   140028d59:	push   rsp
   140028d5a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140028d61:	ins    BYTE PTR es:[rdi],dx
   140028d62:	gs push rsp
   140028d64:	imul   ebp,DWORD PTR [rbp+0x65],0x52454b00
   140028d6b:	rex.WRX
   140028d6c:	rex.RB
   140028d6d:	xor    r14,QWORD PTR [rdx]
   140028d70:	cs fs ins BYTE PTR es:[rdi],dx
   140028d73:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .data:

0000000140029000 <.data>:
   140029000:	lock mov eax,0x14001
   140029006:	add    BYTE PTR [rax],al
   140029008:	xor    BYTE PTR [rdx+rax*1],cl
   14002900b:	rex add DWORD PTR [rax],eax
	...
   140029016:	add    BYTE PTR [rax],al
   140029018:	cs (bad) 
   14002901a:	push   r14
   14002901c:	push   rbp
   14002901d:	imul   ecx,DWORD PTR [rax+0x61],0x656c646e
   140029024:	jb     0x140029066
   140029026:	add    BYTE PTR [rax],sil
   140029029:	or     al,0x2
   14002902b:	rex add DWORD PTR [rax],eax
	...
   140029036:	add    BYTE PTR [rax],al
   140029038:	cs (bad) 
   14002903a:	push   r14
   14002903c:	push   rcx
   14002903d:	pop    rax
   14002903e:	ins    DWORD PTR es:[rdi],dx
   14002903f:	ins    BYTE PTR es:[rdi],dx
   140029040:	rex.R
   140029041:	gs data16 (bad) 
   140029044:	jne    0x1400290b2
   140029046:	je     0x140029090
   140029048:	(bad)  
   140029049:	outs   dx,BYTE PTR ds:[rsi]
   14002904a:	fs ins BYTE PTR es:[rdi],dx
   14002904c:	gs jb  0x14002908f
   14002904f:	add    BYTE PTR [rax],al
   140029052:	add    BYTE PTR [rax],al
   140029054:	add    BYTE PTR [rax],al
   140029056:	add    BYTE PTR [rax],al
   140029058:	xor    BYTE PTR [rdx+rax*1],cl
   14002905b:	rex add DWORD PTR [rax],eax
	...
   140029066:	add    BYTE PTR [rax],al
   140029068:	cs (bad) 
   14002906a:	push   r14
   14002906c:	push   rcx
   14002906d:	pop    rax
   14002906e:	ins    DWORD PTR es:[rdi],dx
   14002906f:	ins    BYTE PTR es:[rdi],dx
   140029070:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140029072:	outs   dx,BYTE PTR ds:[rsi]
   140029073:	je     0x1400290da
   140029075:	outs   dx,BYTE PTR ds:[rsi]
   140029076:	je     0x1400290c0
   140029078:	(bad)  
   140029079:	outs   dx,BYTE PTR ds:[rsi]
   14002907a:	fs ins BYTE PTR es:[rdi],dx
   14002907c:	gs jb  0x1400290bf
   14002907f:	add    BYTE PTR [rax],al
   140029082:	add    BYTE PTR [rax],al
   140029084:	add    BYTE PTR [rax],al
   140029086:	add    BYTE PTR [rax],al
   140029088:	xor    BYTE PTR [rdx+rax*1],cl
   14002908b:	rex add DWORD PTR [rax],eax
	...
   140029096:	add    BYTE PTR [rax],al
   140029098:	cs (bad) 
   14002909a:	push   r14
   14002909c:	push   rcx
   14002909d:	pop    rax
   14002909e:	ins    DWORD PTR es:[rdi],dx
   14002909f:	ins    BYTE PTR es:[rdi],dx
   1400290a0:	rex.RB jb 0x140029115
   1400290a3:	outs   dx,DWORD PTR ds:[rsi]
   1400290a4:	jb     0x1400290ee
   1400290a6:	(bad)  
   1400290a7:	outs   dx,BYTE PTR ds:[rsi]
   1400290a8:	fs ins BYTE PTR es:[rdi],dx
   1400290aa:	gs jb  0x1400290ed
   1400290ad:	add    BYTE PTR [rax],al
   1400290b0:	xor    BYTE PTR [rdx+rax*1],cl
   1400290b3:	rex add DWORD PTR [rax],eax
	...
   1400290be:	add    BYTE PTR [rax],al
   1400290c0:	cs (bad) 
   1400290c2:	push   r14
   1400290c4:	push   rcx
   1400290c5:	pop    rax
   1400290c6:	ins    DWORD PTR es:[rdi],dx
   1400290c7:	ins    BYTE PTR es:[rdi],dx
   1400290c8:	rex.R push rsp
   1400290ca:	rex.R
   1400290cb:	rex.W (bad) 
   1400290cd:	outs   dx,BYTE PTR ds:[rsi]
   1400290ce:	fs ins BYTE PTR es:[rdi],dx
   1400290d0:	gs jb  0x140029113
   1400290d3:	add    BYTE PTR [rax],al
   1400290d6:	add    BYTE PTR [rax],al
   1400290d8:	xor    BYTE PTR [rdx+rax*1],cl
   1400290db:	rex add DWORD PTR [rax],eax
	...
   1400290e6:	add    BYTE PTR [rax],al
   1400290e8:	cs (bad) 
   1400290ea:	push   r14
   1400290ec:	push   rcx
   1400290ed:	pop    rax
   1400290ee:	ins    DWORD PTR es:[rdi],dx
   1400290ef:	ins    BYTE PTR es:[rdi],dx
   1400290f0:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400290f2:	je     0x14002915d
   1400290f4:	je     0x14002916f
   1400290f6:	push   rdx
   1400290f7:	gs jae 0x140029169
   1400290fa:	ins    BYTE PTR es:[rdi],dx
   1400290fb:	jbe    0x140029162
   1400290fd:	jb     0x14002913f
   1400290ff:	add    BYTE PTR [rax],al
   140029102:	add    BYTE PTR [rax],al
   140029104:	add    BYTE PTR [rax],al
   140029106:	add    BYTE PTR [rax],al
   140029108:	xor    BYTE PTR [rdx+rax*1],cl
   14002910b:	rex add DWORD PTR [rax],eax
	...
   140029116:	add    BYTE PTR [rax],al
   140029118:	cs (bad) 
   14002911a:	push   r14
   14002911c:	push   rcx
   14002911d:	pop    rax
   14002911e:	ins    DWORD PTR es:[rdi],dx
   14002911f:	ins    BYTE PTR es:[rdi],dx
   140029120:	rex.WR
   140029121:	gs js  0x14002918d
   140029124:	movsxd esp,DWORD PTR [rcx+0x6c]
   140029127:	rex.W (bad) 
   140029129:	outs   dx,BYTE PTR ds:[rsi]
   14002912a:	fs ins BYTE PTR es:[rdi],dx
   14002912c:	gs jb  0x14002916f
   14002912f:	add    BYTE PTR [rax],al
   140029132:	add    BYTE PTR [rax],al
   140029134:	add    BYTE PTR [rax],al
   140029136:	add    BYTE PTR [rax],al
   140029138:	xor    BYTE PTR [rdx+rax*1],cl
   14002913b:	rex add DWORD PTR [rax],eax
	...
   140029146:	add    BYTE PTR [rax],al
   140029148:	cs (bad) 
   14002914a:	push   r14
   14002914c:	push   rcx
   14002914d:	pop    rax
   14002914e:	ins    DWORD PTR es:[rdi],dx
   14002914f:	ins    BYTE PTR es:[rdi],dx
   140029150:	rex.R
   140029151:	movsxd ebp,DWORD PTR gs:[rax+rcx*2+0x61]
   140029156:	outs   dx,BYTE PTR ds:[rsi]
   140029157:	fs ins BYTE PTR es:[rdi],dx
   140029159:	gs jb  0x14002919c
   14002915c:	add    BYTE PTR [rax],al
   14002915f:	add    al,dh
   140029161:	mov    eax,0x14001
   140029166:	add    BYTE PTR [rax],al
   140029168:	lock mov eax,0x14001
   14002916e:	add    BYTE PTR [rax],al
   140029170:	lock mov eax,0x14001
   140029176:	add    BYTE PTR [rax],al
   140029178:	xor    BYTE PTR [rdx+rax*1],cl
   14002917b:	rex add DWORD PTR [rax],eax
	...
   140029186:	add    BYTE PTR [rax],al
   140029188:	cs (bad) 
   14002918a:	push   r14
   14002918c:	push   rsp
   14002918d:	jae    0x1400291d7
   14002918f:	(bad)  
   140029190:	outs   dx,BYTE PTR ds:[rsi]
   140029191:	fs ins BYTE PTR es:[rdi],dx
   140029193:	gs jb  0x1400291d6
   140029196:	add    al,sil
   140029199:	mov    eax,0x14001
   14002919e:	add    BYTE PTR [rax],al
   1400291a0:	lock mov eax,0x14001
   1400291a6:	add    BYTE PTR [rax],al
   1400291a8:	lock mov eax,0x14001
   1400291ae:	add    BYTE PTR [rax],al
   1400291b0:	lock mov eax,0x14001
   1400291b6:	add    BYTE PTR [rax],al
   1400291b8:	lock mov eax,0x14001
   1400291be:	add    BYTE PTR [rax],al
   1400291c0:	lock mov eax,0x14001
	...
   1400291ce:	add    BYTE PTR [rax],al
   1400291d0:	ror    BYTE PTR [rbx],0x2
   1400291d3:	rex add DWORD PTR [rax],eax
   1400291d6:	add    BYTE PTR [rax],al
   1400291d8:	call   0x1414293e8
   1400291dd:	add    BYTE PTR [rax],al
   1400291df:	add    al,al
   1400291e1:	imul   eax,DWORD PTR [rax],0x40
   1400291e4:	add    DWORD PTR [rax],eax
	...
   1400291f6:	add    BYTE PTR [rax],al
   1400291f8:	lock mov eax,0x14001
   1400291fe:	add    BYTE PTR [rax],al
   140029200:	xor    BYTE PTR [rdx+rax*1],cl
   140029203:	rex add DWORD PTR [rax],eax
	...
   14002920e:	add    BYTE PTR [rax],al
   140029210:	cs (bad) 
   140029212:	push   r14
   140029214:	je     0x14002928f
   140029216:	jo     0x14002927d
   140029218:	pop    rdi
   140029219:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   140029220:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   140029226:	add    BYTE PTR [rax],al
   140029228:	int    0x5d
   14002922a:	and    dl,dl
   14002922c:	data16 (bad) 
   14002922e:	(bad)  
   14002922f:	(bad)  
   140029230:	(bad)  
   140029231:	(bad)  
   140029232:	(bad)  
   140029233:	(bad)  
   140029234:	(bad)  
   140029235:	(bad)  
   140029236:	(bad)  
   140029237:	(bad)  
   140029238:	(bad)  
   140029239:	(bad)  
   14002923a:	(bad)  
   14002923b:	inc    DWORD PTR [rcx]
	...

Disassembly of section .pdata:

000000014004a000 <.pdata>:
   14004a000:	add    BYTE PTR [rax],dl
   14004a002:	add    BYTE PTR [rax],al
   14004a004:	outs   dx,DWORD PTR ds:[rsi]
   14004a005:	adc    BYTE PTR [rax],al
   14004a007:	add    BYTE PTR [rax],ah
   14004a009:	add    al,BYTE PTR cs:[rax]
   14004a00c:	jo     0x14004a01e
   14004a00e:	add    BYTE PTR [rax],al
   14004a010:	test   BYTE PTR [rax],dl
   14004a012:	add    BYTE PTR [rax],al
   14004a014:	and    BYTE PTR [rsi],ch
   14004a016:	add    al,BYTE PTR [rax]
   14004a018:	nop
   14004a019:	adc    BYTE PTR [rax],al
   14004a01b:	add    BYTE PTR [rdi+0x11],ch
   14004a01e:	add    BYTE PTR [rax],al
   14004a020:	add    BYTE PTR [rbx],dl
   14004a022:	add    al,BYTE PTR [rax]
   14004a024:	adc    BYTE PTR [rcx],0x0
   14004a027:	add    BYTE PTR [rbp+0x20000011],dl
   14004a02d:	add    al,BYTE PTR cs:[rax]
   14004a030:	movabs al,ds:0x680000129c000011
   14004a039:	adc    eax,DWORD PTR [rdx]
   14004a03b:	add    BYTE PTR [rax+0x1c000012],ah
   14004a041:	adc    eax,DWORD PTR [rax]
   14004a043:	add    al,bh
   14004a045:	adc    eax,DWORD PTR [rdx]
   14004a047:	add    BYTE PTR [rax],ah
   14004a049:	adc    eax,DWORD PTR [rax]
   14004a04b:	add    BYTE PTR [rsi+0x13],bl
   14004a04e:	add    BYTE PTR [rax],al
   14004a050:	test   al,0x14
   14004a052:	add    al,BYTE PTR [rax]
   14004a054:	(bad)  
   14004a055:	adc    eax,DWORD PTR [rax]
   14004a057:	add    BYTE PTR [rdi],cl
   14004a059:	adc    al,0x0
   14004a05b:	add    BYTE PTR [rax],dh
   14004a05d:	add    al,BYTE PTR ds:[rax]
   14004a060:	mov    al,0x14
   14004a062:	add    BYTE PTR [rax],al
   14004a064:	xor    al,0x22
   14004a066:	add    BYTE PTR [rax],al
   14004a068:	mov    ah,0x14
   14004a06a:	add    al,BYTE PTR [rax]
   14004a06c:	and    al,BYTE PTR [rax]
   14004a06f:	add    BYTE PTR [rsi-0x63ffffde],dh
   14004a075:	(bad)  
   14004a076:	add    al,BYTE PTR [rax]
   14004a078:	shl    BYTE PTR [rdx],0x0
   14004a07b:	add    dh,ah
   14004a07d:	and    al,BYTE PTR [rax]
   14004a07f:	add    BYTE PTR [rax],ah
   14004a081:	add    al,BYTE PTR cs:[rax]
   14004a084:	out    0x22,al
   14004a086:	add    BYTE PTR [rax],al
   14004a088:	and    ax,WORD PTR [rax]
   14004a08b:	add    ah,ah
   14004a08d:	adc    eax,0x23660002
   14004a092:	add    BYTE PTR [rax],al
   14004a094:	jb     0x14004a0b9
   14004a096:	add    BYTE PTR [rax],al
   14004a098:	rcl    BYTE PTR [rip+0x23800002],1        # 0x16384a0a0
   14004a09e:	add    BYTE PTR [rax],al
   14004a0a0:	std    
   14004a0a1:	and    eax,DWORD PTR [rax]
   14004a0a3:	add    al,bh
   14004a0a5:	adc    eax,0x24000002
   14004a0aa:	add    BYTE PTR [rax],al
   14004a0ac:	shl    BYTE PTR [rsi],1
   14004a0ae:	add    BYTE PTR [rax],al
   14004a0b0:	ins    BYTE PTR es:[rdi],dx
   14004a0b1:	(bad)  
   14004a0b2:	add    al,BYTE PTR [rax]
   14004a0b4:	shl    BYTE PTR [rsi],1
   14004a0b6:	add    BYTE PTR [rax],al
   14004a0b8:	(bad)  
   14004a0b9:	(bad)  
   14004a0ba:	add    BYTE PTR [rax],al
   14004a0bc:	xor    BYTE PTR [rdx+0x2],ah
   14004a0bf:	add    BYTE PTR [rax],dl
   14004a0c1:	(bad)  
   14004a0c2:	add    BYTE PTR [rax],al
   14004a0c4:	push   rcx
   14004a0c5:	(bad)  
   14004a0c6:	add    BYTE PTR [rax],al
   14004a0c8:	xor    BYTE PTR [rdx+0x2],ah
   14004a0cb:	add    BYTE PTR [rax+0x27],ah
   14004a0ce:	add    BYTE PTR [rax],al
   14004a0d0:	xchg   esp,eax
   14004a0d1:	(bad)  
   14004a0d2:	add    BYTE PTR [rax],al
   14004a0d4:	and    BYTE PTR [rsi],ch
   14004a0d6:	add    al,BYTE PTR [rax]
   14004a0d8:	movabs al,ds:0x9c00002803000027
   14004a0e1:	(bad)  
   14004a0e2:	add    al,BYTE PTR [rax]
   14004a0e4:	adc    BYTE PTR [rax],ch
   14004a0e6:	add    BYTE PTR [rax],al
   14004a0e8:	jge    0x14004a112
   14004a0ea:	add    BYTE PTR [rax],al
   14004a0ec:	pushf  
   14004a0ed:	(bad)  
   14004a0ee:	add    al,BYTE PTR [rax]
   14004a0f0:	sub    BYTE PTR [rax],0x0
   14004a0f3:	add    BYTE PTR [rbp+0x20000028],bl
   14004a0f9:	add    al,BYTE PTR cs:[rax]
   14004a0fc:	popf   
   14004a0fd:	sub    BYTE PTR [rax],al
   14004a0ff:	add    dl,bh
   14004a101:	sub    BYTE PTR [rax],al
   14004a103:	add    BYTE PTR [rdi+rdx*1+0x2],dh
   14004a107:	add    dl,bh
   14004a109:	sub    BYTE PTR [rax],al
   14004a10b:	add    bh,bh
   14004a10d:	sub    BYTE PTR [rax],al
   14004a10f:	add    BYTE PTR [rdi+rdx*1+0x2],ah
   14004a113:	add    BYTE PTR [rax],al
   14004a115:	sub    DWORD PTR [rax],eax
   14004a117:	add    dh,bl
   14004a119:	sub    DWORD PTR [rax],eax
   14004a11b:	add    BYTE PTR [rcx+riz*2+0x29f00002],bl
   14004a122:	add    BYTE PTR [rax],al
   14004a124:	sub    eax,DWORD PTR gs:[rax]
   14004a127:	add    BYTE PTR [rax+0x70000217],dl
   14004a12d:	sub    eax,DWORD PTR [rax]
   14004a12f:	add    cl,al
   14004a131:	sub    eax,DWORD PTR [rax]
   14004a133:	add    al,cl
   14004a135:	(bad)  
   14004a136:	add    al,BYTE PTR [rax]
   14004a138:	shr    BYTE PTR [rbx],1
   14004a13a:	add    BYTE PTR [rax],al
   14004a13c:	xlat   BYTE PTR ds:[rbx]
   14004a13d:	sub    eax,0x18080000
   14004a142:	add    al,BYTE PTR [rax]
   14004a144:	loopne 0x14004a173
   14004a146:	add    BYTE PTR [rax],al
   14004a148:	or     ch,BYTE PTR [rsi]
   14004a14a:	add    BYTE PTR [rax],al
   14004a14c:	and    BYTE PTR [rsi],ch
   14004a14e:	add    al,BYTE PTR [rax]
   14004a150:	adc    BYTE PTR [rsi],ch
   14004a152:	add    BYTE PTR [rax],al
   14004a154:	(bad)  
   14004a155:	xor    DWORD PTR [rax],eax
   14004a157:	add    ah,bh
   14004a159:	sbb    BYTE PTR [rdx],al
   14004a15b:	add    al,dl
   14004a15d:	xor    DWORD PTR [rax],eax
   14004a15f:	add    ah,bh
   14004a161:	xor    eax,DWORD PTR [rax]
   14004a163:	add    BYTE PTR [rdx+rbx*1],cl
   14004a166:	add    al,BYTE PTR [rax]
   14004a168:	add    BYTE PTR [rax+rax*1],dh
   14004a16b:	add    al,ah
   14004a16d:	add    BYTE PTR [r8],al
   14004a170:	rcr    BYTE PTR [rdx],0x2
   14004a173:	add    al,ah
   14004a175:	add    BYTE PTR [r8],al
   14004a178:	out    dx,eax
   14004a179:	rex.X add BYTE PTR [rax],al
   14004a17c:	je     0x14004a19b
   14004a17e:	add    al,BYTE PTR [rax]
   14004a180:	lock rex.X add BYTE PTR [rax],al
   14004a184:	push   rbp
   14004a185:	rex.XB add BYTE PTR [r8],al
   14004a188:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a189:	sbb    eax,0x43600002
   14004a18e:	add    BYTE PTR [rax],al
   14004a190:	fadd   QWORD PTR [rbx+0x0]
   14004a193:	add    BYTE PTR [rsi+rbx*1+0x2],al
   14004a197:	add    al,ah
   14004a199:	rex.XB add BYTE PTR [r8],al
   14004a19c:	pop    QWORD PTR [rax+rax*1+0x0]
   14004a1a0:	xor    BYTE PTR [rsi],bh
   14004a1a2:	add    al,BYTE PTR [rax]
   14004a1a4:	nop
   14004a1a5:	add    BYTE PTR [rax],r8b
   14004a1a8:	rol    DWORD PTR [rax+rax*1+0x0],1
   14004a1ac:	xor    BYTE PTR [rdx+0x2],ah
   14004a1af:	add    al,ah
   14004a1b1:	add    BYTE PTR [rax],r8b
   14004a1b4:	rex.WRB
   14004a1b5:	add    BYTE PTR [r8],r8b
   14004a1b8:	pushf  
   14004a1b9:	(bad)  
   14004a1ba:	add    al,BYTE PTR [rax]
   14004a1bc:	push   rax
   14004a1bd:	add    BYTE PTR [r8],r8b
   14004a1c0:	retf   0x45
   14004a1c3:	add    BYTE PTR [rdi+rbx*1],al
   14004a1c6:	add    al,BYTE PTR [rax]
   14004a1c8:	rol    BYTE PTR [rbp+0x0],1
   14004a1cb:	add    dl,ch
   14004a1cd:	add    BYTE PTR [r8],r8b
   14004a1d0:	mov    al,0x1f
   14004a1d2:	add    al,BYTE PTR [rax]
   14004a1d4:	(bad)  
   14004a1d5:	add    BYTE PTR [r8],r8b
   14004a1d8:	test   BYTE PTR [rsi+0x0],al
   14004a1db:	add    BYTE PTR [rdi+rbx*1+0x46840002],dl
   14004a1e2:	add    BYTE PTR [rax],al
   14004a1e4:	xchg   edx,eax
   14004a1e5:	rex.RX add BYTE PTR [rax],r8b
   14004a1e8:	sbb    BYTE PTR [rdi],0x2
   14004a1eb:	add    BYTE PTR [rdx-0x64ffffba],dl
   14004a1f1:	rex.RX add BYTE PTR [rax],r8b
   14004a1f4:	jo     0x14004a215
   14004a1f6:	add    al,BYTE PTR [rax]
   14004a1f8:	movabs al,ds:0xb80000472d000046
   14004a201:	(bad)  
   14004a202:	add    al,BYTE PTR [rax]
   14004a204:	xor    BYTE PTR [rdi+0x0],al
   14004a207:	add    BYTE PTR [rcx-0x63ffffb9],ah
   14004a20d:	(bad)  
   14004a20e:	add    al,BYTE PTR [rax]
   14004a210:	mov    al,0x47
   14004a212:	add    BYTE PTR [rax],al
   14004a214:	mov    esi,0x4000048
   14004a219:	and    BYTE PTR [rdx],al
   14004a21b:	add    al,al
   14004a21d:	rex.W add BYTE PTR [rax],al
   14004a220:	jnp    0x14004a26b
   14004a222:	add    BYTE PTR [rax],al
   14004a224:	enter  0x220,0x0
   14004a228:	or     BYTE PTR [rcx+0x0],0x0
   14004a22c:	stos   BYTE PTR es:[rdi],al
   14004a22d:	rex.WB add BYTE PTR [r8],al
   14004a230:	and    BYTE PTR [rsi],ch
   14004a232:	add    al,BYTE PTR [rax]
   14004a234:	mov    al,0x49
   14004a236:	add    BYTE PTR [rax],al
   14004a238:	sub    eax,0x5800004a
   14004a23d:	and    DWORD PTR [rdx],eax
   14004a23f:	add    BYTE PTR [rax],dh
   14004a241:	rex.WX add BYTE PTR [rax],al
   14004a244:	movabs ds:0xb00002223c00004a,al
   14004a24d:	rex.WX add BYTE PTR [rax],al
   14004a250:	(bad)  
   14004a251:	rex.WXB add BYTE PTR [r8],al
   14004a254:	xor    BYTE PTR [rdx+0x2],ah
   14004a257:	add    BYTE PTR [rax],dl
   14004a259:	rex.WXB add BYTE PTR [r8],al
   14004a25c:	sub    eax,0x2000004b
   14004a261:	add    al,BYTE PTR cs:[rax]
   14004a264:	sub    eax,0x6400004b
   14004a269:	rex.WXB add BYTE PTR [r8],al
   14004a26c:	mov    al,0x22
   14004a26e:	add    al,BYTE PTR [rax]
   14004a270:	rex.WXB add BYTE PTR fs:[r8],al
   14004a274:	imul   ecx,DWORD PTR [rbx+0x0],0x222a000
   14004a27b:	add    BYTE PTR [rax+0x4b],dh
   14004a27e:	add    BYTE PTR [rax],al
   14004a280:	repz rex.WXB add BYTE PTR [r8],al
   14004a284:	(bad)
   14004a288:	add    BYTE PTR [rax+rax*1+0x0],cl
   14004a28c:	sbb    eax,0x14000050
   14004a291:	and    eax,DWORD PTR [rdx]
   14004a293:	add    BYTE PTR [rax],ah
   14004a295:	push   rax
   14004a296:	add    BYTE PTR [rax],al
   14004a298:	mov    eax,0xf000006b
   14004a29d:	and    al,0x2
   14004a29f:	add    al,dl
   14004a2a1:	imul   eax,DWORD PTR [rax],0x0
   14004a2a4:	imul   DWORD PTR [rbx+0x0]
   14004a2a7:	add    BYTE PTR [rax],dh
   14004a2a9:	(bad)  
   14004a2ab:	add    BYTE PTR [rax],al
   14004a2ad:	ins    BYTE PTR es:[rdi],dx
   14004a2ae:	add    BYTE PTR [rax],al
   14004a2b0:	push   rsi
   14004a2b1:	ins    BYTE PTR es:[rdi],dx
   14004a2b2:	add    BYTE PTR [rax],al
   14004a2b4:	xor    BYTE PTR [rdx+0x2],ah
   14004a2b7:	add    BYTE PTR [rax+0x6c],ah
   14004a2ba:	add    BYTE PTR [rax],al
   14004a2bc:	xchg   BYTE PTR [rax+rax*1+0x0],ch
   14004a2c0:	xor    BYTE PTR [rdx+0x2],ah
   14004a2c3:	add    BYTE PTR [rax+0x2400006c],dl
   14004a2c9:	ins    DWORD PTR es:[rdi],dx
   14004a2ca:	add    BYTE PTR [rax],al
   14004a2cc:	xor    al,0x2c
   14004a2ce:	add    al,BYTE PTR [rax]
   14004a2d0:	xor    BYTE PTR [rbp+0x0],ch
   14004a2d3:	add    BYTE PTR [rdx-0x2fffff93],ch
   14004a2d9:	sub    al,0x2
   14004a2db:	add    BYTE PTR [rax+0x2a00006d],dh
   14004a2e1:	outs   dx,BYTE PTR ds:[rsi]
   14004a2e2:	add    BYTE PTR [rax],al
   14004a2e4:	nop
   14004a2e5:	sub    eax,0x6e300002
   14004a2ea:	add    BYTE PTR [rax],al
   14004a2ec:	rex.WRB outs dx,BYTE PTR ds:[rsi]
   14004a2ee:	add    BYTE PTR [rax],al
   14004a2f0:	and    BYTE PTR [rsi],ch
   14004a2f2:	add    al,BYTE PTR [rax]
   14004a2f4:	rex.WRB outs dx,BYTE PTR ds:[rsi]
   14004a2f6:	add    BYTE PTR [rax],al
   14004a2f8:	jp     0x14004a368
   14004a2fa:	add    BYTE PTR [rax],al
   14004a2fc:	or     al,0x2e
   14004a2fe:	add    al,BYTE PTR [rax]
   14004a300:	jp     0x14004a370
   14004a302:	add    BYTE PTR [rax],al
   14004a304:	jg     0x14004a374
   14004a306:	add    BYTE PTR [rax],al
   14004a308:	cld    
   14004a309:	sub    eax,0x6e800002
   14004a30e:	add    BYTE PTR [rax],al
   14004a310:	xchg   edi,eax
   14004a311:	outs   dx,DWORD PTR ds:[rsi]
   14004a312:	add    BYTE PTR [rax],al
   14004a314:	sub    BYTE PTR [rsi],ch
   14004a316:	add    al,BYTE PTR [rax]
   14004a318:	movabs al,ds:0xc80000704400006f
   14004a321:	add    al,BYTE PTR cs:[rax]
   14004a324:	push   rax
   14004a325:	jo     0x14004a327
   14004a327:	add    BYTE PTR [rcx+0x38000080],al
   14004a32d:	(bad)  
   14004a32e:	add    al,BYTE PTR [rax]
   14004a330:	nop
   14004a331:	add    BYTE PTR [rax],0x0
   14004a334:	(bad)  
   14004a335:	(bad)  
   14004a336:	add    BYTE PTR [rax],al
   14004a338:	xor    al,0x33
   14004a33a:	add    al,BYTE PTR [rax]
   14004a33c:	nop
   14004a33d:	(bad)  
   14004a33e:	add    BYTE PTR [rax],al
   14004a340:	mov    bh,0x82
   14004a342:	add    BYTE PTR [rax],al
   14004a344:	xor    BYTE PTR [rdx+0x2],ah
   14004a347:	add    al,al
   14004a349:	(bad)  
   14004a34a:	add    BYTE PTR [rax],al
   14004a34c:	out    0x82,eax
   14004a34e:	add    BYTE PTR [rax],al
   14004a350:	xor    BYTE PTR [rdx+0x2],ah
   14004a353:	add    al,dh
   14004a355:	(bad)  
   14004a356:	add    BYTE PTR [rax],al
   14004a358:	rol    DWORD PTR [rbx+0x34100000],0x2
   14004a35f:	add    al,dl
   14004a361:	add    DWORD PTR [rax],0x0
   14004a364:	fld    QWORD PTR [rax+rax*1+0x2347400]
   14004a36b:	add    al,ah
   14004a36d:	test   BYTE PTR [rax],al
   14004a36f:	add    BYTE PTR [rdx-0xfffff7b],dl
   14004a375:	xor    al,0x2
   14004a377:	add    BYTE PTR [rax+0x23000085],ah
   14004a37d:	mov    BYTE PTR [rax],al
   14004a37f:	add    BYTE PTR [rsi*1-0x77cffffe],ch
   14004a386:	add    BYTE PTR [rax],al
   14004a388:	mov    ecx,DWORD PTR [rcx+0x35ec0000]
   14004a38e:	add    al,BYTE PTR [rax]
   14004a390:	nop
   14004a391:	mov    DWORD PTR [rax],eax
   14004a393:	add    cl,cl
   14004a395:	mov    DWORD PTR [rax],eax
   14004a397:	add    BYTE PTR [rcx+riz*2-0x762ffffe],bl
   14004a39e:	add    BYTE PTR [rax],al
   14004a3a0:	dec    DWORD PTR [rdx+0x36800000]
   14004a3a6:	add    al,BYTE PTR [rax]
   14004a3a8:	add    BYTE PTR [rbx-0x74d90000],cl
   14004a3ae:	add    BYTE PTR [rax],al
   14004a3b0:	xor    BYTE PTR [rdx+0x2],ah
   14004a3b3:	add    BYTE PTR [rax],dh
   14004a3b5:	mov    eax,DWORD PTR [rax]
   14004a3b7:	add    BYTE PTR [rdi-0x75],dl
   14004a3ba:	add    BYTE PTR [rax],al
   14004a3bc:	xor    BYTE PTR [rdx+0x2],ah
   14004a3bf:	add    BYTE PTR [rax-0x32ffff75],al
   14004a3c5:	mov    eax,DWORD PTR [rax]
   14004a3c7:	add    BYTE PTR [rcx+riz*2-0x742ffffe],bl
   14004a3ce:	add    BYTE PTR [rax],al
   14004a3d0:	rex.WR mov WORD PTR [rax],es
   14004a3d3:	add    BYTE PTR [rax],cl
   14004a3d5:	(bad)  
   14004a3d7:	add    BYTE PTR [rax-0x74],dl
   14004a3da:	add    BYTE PTR [rax],al
   14004a3dc:	jbe    0x14004a36a
   14004a3de:	add    BYTE PTR [rax],al
   14004a3e0:	xor    BYTE PTR [rdx+0x2],ah
   14004a3e3:	add    BYTE PTR [rax+0x6700008c],al
   14004a3e9:	lea    eax,[rax]
   14004a3eb:	add    BYTE PTR [rcx+riz*2-0x723ffffe],bl
   14004a3f2:	add    BYTE PTR [rax],al
   14004a3f4:	(bad)  
   14004a3f5:	mov    es,WORD PTR [rax]
   14004a3f7:	add    BYTE PTR [rax+0x40000236],bl
   14004a3fd:	mov    es,WORD PTR [rax]
   14004a3ff:	add    BYTE PTR [rsi+rdx*4],ah
   14004a402:	add    BYTE PTR [rax],al
   14004a404:	cmp    BYTE PTR [rdi],dh
   14004a406:	add    al,BYTE PTR [rax]
   14004a408:	xor    BYTE PTR [rsi-0x69020000],dl
   14004a40e:	add    BYTE PTR [rax],al
   14004a410:	rex cmp DWORD PTR [rdx],eax
   14004a413:	add    BYTE PTR [rax],al
   14004a415:	xchg   edi,eax
   14004a416:	add    BYTE PTR [rax],al
   14004a418:	cmp    DWORD PTR [rdi+0x619c0000],edx
   14004a41e:	add    al,BYTE PTR [rax]
   14004a420:	rex xchg edi,eax
   14004a422:	add    BYTE PTR [rax],al
   14004a424:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004a425:	cwde   
   14004a426:	add    BYTE PTR [rax],al
   14004a428:	push   rax
   14004a429:	cmp    DWORD PTR [rdx],eax
   14004a42b:	add    BYTE PTR [rax+0x6000098],dh
   14004a431:	fwait
   14004a432:	add    BYTE PTR [rax],al
   14004a434:	add    BYTE PTR [rdx],bh
   14004a436:	add    al,BYTE PTR [rax]
   14004a438:	adc    BYTE PTR [rbx-0x629a0000],bl
   14004a43e:	add    BYTE PTR [rax],al
   14004a440:	sub    al,0x3b
   14004a442:	add    al,BYTE PTR [rax]
   14004a444:	jo     0x14004a3e3
   14004a446:	add    BYTE PTR [rax],al
   14004a448:	and    bl,BYTE PTR [rsi+0x3c100000]
   14004a44e:	add    al,BYTE PTR [rax]
   14004a450:	xor    BYTE PTR [rsi-0x612f0000],bl
   14004a456:	add    BYTE PTR [rax],al
   14004a458:	pop    rsp
   14004a459:	cmp    al,0x2
   14004a45b:	add    al,ah
   14004a45d:	sahf   
   14004a45e:	add    BYTE PTR [rax],al
   14004a460:	jo     0x14004a401
   14004a462:	add    BYTE PTR [rax],al
   14004a464:	push   rax
   14004a465:	cmp    eax,0x9f700002
   14004a46a:	add    BYTE PTR [rax],al
   14004a46c:	(bad)  
   14004a46d:	movabs al,ds:0xa02000023e300000
   14004a476:	add    BYTE PTR [rax],al
   14004a478:	iret   
   14004a479:	movabs al,ds:0xa0d000023e300000
   14004a482:	add    BYTE PTR [rax],al
   14004a484:	rex.XB movabs eax,ds:0xa15000023e400000
   14004a48e:	add    BYTE PTR [rax],al
   14004a490:	jg     0x14004a433
   14004a492:	add    BYTE PTR [rax],al
   14004a494:	pushf  
   14004a495:	(bad)  
   14004a496:	add    al,BYTE PTR [rax]
   14004a498:	and    BYTE PTR [rcx-0x5e220000],0x0
   14004a49f:	add    BYTE PTR [rax],dh
   14004a4a1:	(bad)  
   14004a4a3:	add    al,ah
   14004a4a5:	movabs eax,ds:0x3e940000a2d00000
   14004a4ae:	add    al,BYTE PTR [rax]
   14004a4b0:	shl    BYTE PTR [rdx-0x5c960000],1
   14004a4b6:	add    BYTE PTR [rax],al
   14004a4b8:	pushf  
   14004a4b9:	(bad)  
   14004a4ba:	add    al,BYTE PTR [rax]
   14004a4bc:	jo     0x14004a461
   14004a4be:	add    BYTE PTR [rax],al
   14004a4c0:	ret    0xa3
   14004a4c3:	add    BYTE PTR [rbx+rdx*2+0x2],dl
   14004a4c7:	add    dl,al
   14004a4c9:	movabs ds:0x3f540000a3f90000,eax
   14004a4d2:	add    al,BYTE PTR [rax]
   14004a4d4:	stc    
   14004a4d5:	movabs ds:0x3f440000a4100000,eax
   14004a4de:	add    al,BYTE PTR [rax]
   14004a4e0:	adc    BYTE PTR [rax+rax*1+0xa48500],ah
   14004a4e7:	add    BYTE PTR [rax+0x3f],bh
   14004a4ea:	add    al,BYTE PTR [rax]
   14004a4ec:	nop
   14004a4ed:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a4ee:	add    BYTE PTR [rax],al
   14004a4f0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004a4f1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004a4f2:	add    BYTE PTR [rax],al
   14004a4f4:	lods   al,BYTE PTR ds:[rsi]
   14004a4f5:	add    al,BYTE PTR [rax]
   14004a4f8:	mov    al,0xa5
   14004a4fa:	add    BYTE PTR [rax],al
   14004a4fc:	outs   dx,DWORD PTR ds:[rsi]
   14004a4fd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a4fe:	add    BYTE PTR [rax],al
   14004a500:	loopne 0x14004a542
   14004a502:	add    al,BYTE PTR [rax]
   14004a504:	jo     0x14004a4ac
   14004a506:	add    BYTE PTR [rax],al
   14004a508:	lea    esp,[rsi+0x2e200000]
   14004a50e:	add    al,BYTE PTR [rax]
   14004a510:	lea    esp,[rsi-0x593c0000]
   14004a516:	add    BYTE PTR [rax],al
   14004a518:	cmp    BYTE PTR [rcx+0x2],al
   14004a51b:	add    ah,al
   14004a51d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a51e:	add    BYTE PTR [rax],al
   14004a520:	leave  
   14004a521:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a522:	add    BYTE PTR [rax],al
   14004a524:	sub    BYTE PTR [rcx+0x2],al
   14004a527:	add    al,dl
   14004a529:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a52a:	add    BYTE PTR [rax],al
   14004a52c:	out    dx,al
   14004a52d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a52e:	add    BYTE PTR [rax],al
   14004a530:	jo     0x14004a573
   14004a532:	add    al,BYTE PTR [rax]
   14004a534:	out    dx,al
   14004a535:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a536:	add    BYTE PTR [rax],al
   14004a538:	mov    ah,0xa7
   14004a53a:	add    BYTE PTR [rax],al
   14004a53c:	pop    rsp
   14004a53d:	add    al,BYTE PTR [r8]
   14004a540:	mov    ah,0xa7
   14004a542:	add    BYTE PTR [rax],al
   14004a544:	ret    0xa7
   14004a547:	add    BYTE PTR [rcx+rax*2+0x2],cl
   14004a54b:	add    al,dl
   14004a54d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004a54e:	add    BYTE PTR [rax],al
   14004a550:	rex.B test al,0x0
   14004a553:	add    BYTE PTR [rcx+rax*2+0x2],bh
   14004a557:	add    BYTE PTR [rax-0x58],dl
   14004a55a:	add    BYTE PTR [rax],al
   14004a55c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a55d:	test   eax,0x41ac0000
   14004a562:	add    al,BYTE PTR [rax]
   14004a564:	mov    al,0xa9
   14004a566:	add    BYTE PTR [rax],al
   14004a568:	jmp    0xdc04a616
   14004a56d:	(bad)  
   14004a56e:	add    al,BYTE PTR [rax]
   14004a570:	lock test eax,0xaaf50000
   14004a576:	add    BYTE PTR [rax],al
   14004a578:	sbb    al,0x42
   14004a57a:	add    al,BYTE PTR [rax]
   14004a57c:	add    BYTE PTR [rbx-0x4abd0000],ch
   14004a582:	add    BYTE PTR [rax],al
   14004a584:	xor    al,0x42
   14004a586:	add    al,BYTE PTR [rax]
   14004a588:	push   rax
   14004a589:	mov    ch,0x0
   14004a58b:	add    ch,al
   14004a58d:	mov    ch,0x0
   14004a58f:	add    ah,ch
   14004a591:	add    r8b,BYTE PTR [r8]
   14004a594:	shl    BYTE PTR [rbp-0x36630000],1
   14004a59a:	add    BYTE PTR [rax],al
   14004a59c:	push   rax
   14004a59d:	rex.RX add r8b,BYTE PTR [rax]
   14004a5a0:	movabs al,ds:0xe00000cbd40000c9
   14004a5a9:	rex.WX add al,BYTE PTR [rax]
   14004a5ac:	loopne 0x14004a579
   14004a5ae:	add    BYTE PTR [rax],al
   14004a5b0:	cmp    al,0xd0
   14004a5b2:	add    BYTE PTR [rax],al
   14004a5b4:	and    al,0x4b
   14004a5b6:	add    al,BYTE PTR [rax]
   14004a5b8:	rex rol BYTE PTR [rax],1
   14004a5bb:	add    BYTE PTR [rbx-0x2c],dl
   14004a5be:	add    BYTE PTR [rax],al
   14004a5c0:	jl     0x14004a60d
   14004a5c2:	add    al,BYTE PTR [rax]
   14004a5c4:	(bad)  
   14004a5c5:	(bad)  
   14004a5c6:	add    BYTE PTR [rax],al
   14004a5c8:	loop   0x14004a5a0
   14004a5ca:	add    BYTE PTR [rax],al
   14004a5cc:	mov    WORD PTR [rdx+rax*1+0x0],cs
   14004a5d0:	lock (bad) 
   14004a5d2:	add    BYTE PTR [rax],al
   14004a5d4:	pop    rsp
   14004a5d5:	xlat   BYTE PTR ds:[rbx]
   14004a5d6:	add    BYTE PTR [rax],al
   14004a5d8:	jl     0x14004a627
   14004a5da:	add    al,BYTE PTR [rax]
   14004a5dc:	(bad)  
   14004a5dd:	xlat   BYTE PTR ds:[rbx]
   14004a5de:	add    BYTE PTR [rax],al
   14004a5e0:	scas   eax,DWORD PTR es:[rdi]
   14004a5e1:	xlat   BYTE PTR ds:[rbx]
   14004a5e2:	add    BYTE PTR [rax],al
   14004a5e4:	test   al,0x4d
   14004a5e6:	add    al,BYTE PTR [rax]
   14004a5e8:	mov    al,0xd7
   14004a5ea:	add    BYTE PTR [rax],al
   14004a5ec:	fcom   st(7)
   14004a5ee:	add    BYTE PTR [rax],al
   14004a5f0:	clc    
   14004a5f1:	rex.WRB add r8b,BYTE PTR [r8]
   14004a5f4:	fcom   st(7)
   14004a5f6:	add    BYTE PTR [rax],al
   14004a5f8:	push   rsi
   14004a5f9:	fadd   DWORD PTR [rax]
   14004a5fb:	add    ah,ah
   14004a5fd:	rex.WRB add r8b,BYTE PTR [r8]
   14004a600:	push   rsi
   14004a601:	fadd   DWORD PTR [rax]
   14004a603:	add    BYTE PTR [rax-0x28],ch
   14004a606:	add    BYTE PTR [rax],al
   14004a608:	(bad)  
   14004a609:	rex.WRB add r8b,BYTE PTR [r8]
   14004a60c:	jo     0x14004a5e6
   14004a60e:	add    BYTE PTR [rax],al
   14004a610:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004a611:	fld    DWORD PTR [rax]
   14004a613:	add    BYTE PTR [rax],cl
   14004a615:	rex.WRX add r8b,BYTE PTR [rax]
   14004a618:	mov    al,0xd9
   14004a61a:	add    BYTE PTR [rax],al
   14004a61c:	xor    ebx,edx
   14004a61e:	add    BYTE PTR [rax],al
   14004a620:	jo     0x14004a670
   14004a622:	add    al,BYTE PTR [rax]
   14004a624:	rex fiadd DWORD PTR [rax]
   14004a627:	add    bh,ch
   14004a629:	fiadd  DWORD PTR [rax]
   14004a62b:	add    BYTE PTR [rax],dh
   14004a62d:	add    al,BYTE PTR ds:[rax]
   14004a630:	lock fiadd DWORD PTR [rax]
   14004a633:	add    BYTE PTR [rbx+rbx*8],ah
   14004a636:	add    BYTE PTR [rax],al
   14004a638:	and    BYTE PTR [rsi],ch
   14004a63a:	add    al,BYTE PTR [rax]
   14004a63c:	xor    bl,bl
   14004a63e:	add    BYTE PTR [rax],al
   14004a640:	(bad)  
   14004a641:	fadd   QWORD PTR [rax]
   14004a643:	add    BYTE PTR [rax+0x4f],ah
   14004a646:	add    al,BYTE PTR [rax]
   14004a648:	rcr    ah,1
   14004a64a:	add    BYTE PTR [rax],al
   14004a64c:	jns    0x14004a62c
   14004a64e:	add    BYTE PTR [rax],al
   14004a650:	sub    BYTE PTR [rax+0x2],dl
   14004a653:	add    BYTE PTR [rax-0x17ffff22],al
   14004a659:	fiadd  WORD PTR [rax]
   14004a65b:	add    BYTE PTR [rax],dh
   14004a65d:	(bad)  
   14004a65f:	add    al,dh
   14004a661:	fiadd  WORD PTR [rax]
   14004a663:	add    bl,bl
   14004a665:	out    dx,eax
   14004a666:	add    BYTE PTR [rax],al
   14004a668:	add    BYTE PTR [rcx+0x2],dl
   14004a66b:	add    al,ah
   14004a66d:	out    dx,eax
   14004a66e:	add    BYTE PTR [rax],al
   14004a670:	xor    dh,al
   14004a672:	add    BYTE PTR [rax],al
   14004a674:	push   rsp
   14004a675:	push   rbx
   14004a676:	add    al,BYTE PTR [rax]
   14004a678:	xor    dh,al
   14004a67a:	add    BYTE PTR [rax],al
   14004a67c:	imul   esi,eax,0x53400000
   14004a682:	add    al,BYTE PTR [rax]
   14004a684:	imul   esi,eax,0xf0800000
   14004a68a:	add    BYTE PTR [rax],al
   14004a68c:	xor    BYTE PTR [rbx+0x2],dl
   14004a68f:	add    BYTE PTR [rax-0x62ffff10],al
   14004a695:	lock add BYTE PTR [rax],al
   14004a698:	and    BYTE PTR [rsi],ch
   14004a69a:	add    al,BYTE PTR [rax]
   14004a69c:	popf   
   14004a69d:	lock add BYTE PTR [rax],al
   14004a6a0:	(bad)  
   14004a6a1:	lock add BYTE PTR [rax],al
   14004a6a4:	jo     0x14004a6f9
   14004a6a6:	add    al,BYTE PTR [rax]
   14004a6a8:	(bad)  
   14004a6a9:	lock add BYTE PTR [rax],al
   14004a6ac:	f2xm1  
   14004a6ae:	add    BYTE PTR [rax],al
   14004a6b0:	(bad)  
   14004a6b1:	push   rbx
   14004a6b2:	add    al,BYTE PTR [rax]
   14004a6b4:	loopne 0x14004a6a6
   14004a6b6:	add    BYTE PTR [rax],al
   14004a6b8:	(bad)  
   14004a6bb:	add    BYTE PTR [rbx+rdx*2-0x2ffffe],al
   14004a6c2:	add    BYTE PTR [rax],al
   14004a6c4:	(bad)  
   14004a6c5:	add    BYTE PTR [rcx],al
   14004a6c7:	add    BYTE PTR [rsi+rdx*2],ah
   14004a6ca:	add    al,BYTE PTR [rax]
   14004a6cc:	and    BYTE PTR [rax],al
   14004a6ce:	add    DWORD PTR [rax],eax
   14004a6d0:	jno    0x14004a6d2
   14004a6d2:	add    DWORD PTR [rax],eax
   14004a6d4:	rex.W push rsi
   14004a6d6:	add    al,BYTE PTR [rax]
   14004a6d8:	add    BYTE PTR [rax],0x1
   14004a6db:	add    bh,ah
   14004a6dd:	add    DWORD PTR [rcx],eax
   14004a6df:	add    BYTE PTR [rax+0x56],bl
   14004a6e2:	add    al,BYTE PTR [rax]
   14004a6e4:	lock add DWORD PTR [rcx],eax
   14004a6e7:	add    bh,bl
   14004a6e9:	add    al,BYTE PTR [rcx]
   14004a6eb:	add    BYTE PTR [rdi+rdx*2],bl
   14004a6ee:	add    al,BYTE PTR [rax]
   14004a6f0:	loopne 0x14004a6f4
   14004a6f2:	add    DWORD PTR [rax],eax
   14004a6f4:	or     DWORD PTR [rip+0x57380001],esp        # 0x1973ca6fb
   14004a6fa:	add    al,BYTE PTR [rax]
   14004a6fc:	adc    BYTE PTR [rip+0x25ce0001],ah        # 0x165d2a703
   14004a702:	add    DWORD PTR [rax],eax
   14004a704:	sbb    BYTE PTR [rbp+0x2],0x0
   14004a708:	shl    BYTE PTR [rip+0x26460001],1        # 0x1664aa70f
   14004a70e:	add    DWORD PTR [rax],eax
   14004a710:	nop
   14004a711:	pop    rbp
   14004a712:	add    al,BYTE PTR [rax]
   14004a714:	push   rax
   14004a715:	add    DWORD PTR es:[rax],eax
   14004a718:	leave  
   14004a719:	(bad)  
   14004a71a:	add    DWORD PTR [rax],eax
   14004a71c:	cwde   
   14004a71d:	pop    rbp
   14004a71e:	add    al,BYTE PTR [rax]
   14004a720:	shl    BYTE PTR [rdi],1
   14004a722:	add    DWORD PTR [rax],eax
   14004a724:	shl    BYTE PTR [rsi],0x1
   14004a727:	add    al,ch
   14004a729:	pop    rbp
   14004a72a:	add    al,BYTE PTR [rax]
   14004a72c:	shl    BYTE PTR [rsi],0x1
   14004a72f:	add    BYTE PTR [rax+0x39],dl
   14004a732:	add    DWORD PTR [rax],eax
   14004a734:	cmp    BYTE PTR [rax+0x2],ah
   14004a737:	add    BYTE PTR [rax+0x39],dl
   14004a73a:	add    DWORD PTR [rax],eax
   14004a73c:	mov    esp,0x78000139
   14004a741:	(bad)  
   14004a742:	add    al,BYTE PTR [rax]
   14004a744:	sar    BYTE PTR [rcx],0x1
   14004a747:	add    BYTE PTR [rdx],dl
   14004a749:	cmp    al,BYTE PTR [rcx]
   14004a74b:	add    BYTE PTR [rax],dh
   14004a74d:	(bad)  
   14004a74f:	add    BYTE PTR [rax],ah
   14004a751:	cmp    al,BYTE PTR [rcx]
   14004a753:	add    BYTE PTR [rbp+0x3b],dh
   14004a756:	add    DWORD PTR [rax],eax
   14004a758:	mov    ah,0x60
   14004a75a:	add    al,BYTE PTR [rax]
   14004a75c:	cmp    BYTE PTR [rbx],0x1
   14004a75f:	add    BYTE PTR [rax],al
   14004a761:	cmp    al,0x1
   14004a763:	add    BYTE PTR [rax+0x61],cl
   14004a766:	add    al,BYTE PTR [rax]
   14004a768:	add    BYTE PTR [rcx+rax*1],bh
   14004a76b:	add    BYTE PTR [rdi+0x3c],ch
   14004a76e:	add    DWORD PTR [rax],eax
   14004a770:	pushf  
   14004a771:	(bad)  
   14004a772:	add    al,BYTE PTR [rax]
   14004a774:	jo     0x14004a7b2
   14004a776:	add    DWORD PTR [rax],eax
   14004a778:	cmp    BYTE PTR [rsi],bh
   14004a77a:	add    DWORD PTR [rax],eax
   14004a77c:	mov    al,0x61
   14004a77e:	add    al,BYTE PTR [rax]
   14004a780:	(bad)  
   14004a781:	add    DWORD PTR ds:[rax],eax
   14004a784:	cmp    eax,0x800013f
   14004a789:	(bad)  
   14004a78b:	add    BYTE PTR [rax+0x3f],dl
   14004a78e:	add    DWORD PTR [rax],eax
   14004a790:	fistp  QWORD PTR [rdi]
   14004a792:	add    DWORD PTR [rax],eax
   14004a794:	sbb    BYTE PTR [rdx+0x2],ah
   14004a797:	add    BYTE PTR [rax],bl
   14004a799:	rex add DWORD PTR [rax],eax
   14004a79c:	jnp    0x14004a7de
   14004a79e:	add    DWORD PTR [rax],eax
   14004a7a0:	xor    BYTE PTR [rdx+0x2],ah
   14004a7a3:	add    BYTE PTR [rax+rax*2+0x1],bh
   14004a7a7:	add    BYTE PTR [rcx+0x20000140],bl
   14004a7ad:	add    al,BYTE PTR cs:[rax]
   14004a7b0:	pushf  
   14004a7b1:	rex add DWORD PTR [rax],eax
   14004a7b4:	rex.WR
   14004a7b5:	add    DWORD PTR [r8],eax
   14004a7b8:	cmp    BYTE PTR [rdx+0x2],ah
   14004a7bb:	add    BYTE PTR [rcx+rax*2+0x1],cl
   14004a7bf:	add    BYTE PTR [rbx+0x41],ah
   14004a7c2:	add    DWORD PTR [rax],eax
   14004a7c4:	and    BYTE PTR [rsi],ch
   14004a7c6:	add    al,BYTE PTR [rax]
   14004a7c8:	js     0x14004a80b
   14004a7ca:	add    DWORD PTR [rax],eax
   14004a7cc:	fld    QWORD PTR [rcx+0x1]
   14004a7cf:	add    BYTE PTR [rax+0x62],bl
   14004a7d2:	add    al,BYTE PTR [rax]
   14004a7d4:	loopne 0x14004a817
   14004a7d6:	add    DWORD PTR [rax],eax
   14004a7d8:	(bad)  
   14004a7d9:	rex.XB add DWORD PTR [r8],eax
   14004a7dc:	(bad)  
   14004a7dd:	(bad)  
   14004a7df:	add    BYTE PTR [rax+0x43],ah
   14004a7e2:	add    DWORD PTR [rax],eax
   14004a7e4:	rex.RB
   14004a7e5:	add    DWORD PTR [rax],r8d
   14004a7e8:	and    BYTE PTR [rsi],ch
   14004a7ea:	add    al,BYTE PTR [rax]
   14004a7ec:	rex.W
   14004a7ed:	add    DWORD PTR [rax],r8d
   14004a7f0:	pop    rdx
   14004a7f1:	add    DWORD PTR [rax],r8d
   14004a7f4:	and    BYTE PTR [rsi],ch
   14004a7f6:	add    al,BYTE PTR [rax]
   14004a7f8:	pop    rsp
   14004a7f9:	add    DWORD PTR [rax],r8d
   14004a7fc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004a7fd:	add    DWORD PTR [rax],r8d
   14004a800:	test   BYTE PTR [rdx+0x2],ah
   14004a803:	add    BYTE PTR [rax+0x6000144],ch
   14004a809:	add    DWORD PTR [r8],r8d
   14004a80c:	lods   al,BYTE PTR ds:[rsi]
   14004a80d:	(bad)  
   14004a80f:	add    BYTE PTR [rax],cl
   14004a811:	add    DWORD PTR [r8],r8d
   14004a814:	push   rdx
   14004a815:	rex.RX add DWORD PTR [rax],r8d
   14004a818:	(bad)  
   14004a819:	(bad)  
   14004a81b:	add    BYTE PTR [rsi+rax*2+0x1],ch
   14004a81f:	add    BYTE PTR [rbp+0x20000146],ch
   14004a825:	add    al,BYTE PTR cs:[rax]
   14004a828:	mov    al,0x46
   14004a82a:	add    DWORD PTR [rax],eax
   14004a82c:	enter  0x146,0x0
   14004a830:	and    BYTE PTR [rsi],ch
   14004a832:	add    al,BYTE PTR [rax]
   14004a834:	rol    BYTE PTR [rsi+0x1],1
   14004a837:	add    BYTE PTR [rax],cl
   14004a839:	rex.RXB add DWORD PTR [r8],r8d
   14004a83c:	pushf  
   14004a83d:	(bad)  
   14004a83e:	add    al,BYTE PTR [rax]
   14004a840:	or     BYTE PTR [rdi+0x1],al
   14004a843:	add    BYTE PTR [rax+0x47],al
   14004a846:	add    DWORD PTR [rax],eax
   14004a848:	pushf  
   14004a849:	(bad)  
   14004a84a:	add    al,BYTE PTR [rax]
   14004a84c:	rol    BYTE PTR [rdi+0x1],1
   14004a84f:	add    BYTE PTR [rcx],dl
   14004a851:	add    QWORD PTR [rax],rax
   14004a854:	fsub   QWORD PTR [rdx+0x2]
   14004a857:	add    BYTE PTR [rax+rcx*2],ah
   14004a85a:	add    DWORD PTR [rax],eax
   14004a85c:	xlat   BYTE PTR ds:[rbx]
   14004a85d:	add    QWORD PTR [rax],rax
   14004a860:	cld    
   14004a861:	(bad)  
   14004a863:	add    BYTE PTR [rax],al
   14004a865:	add    QWORD PTR [r8],rax
   14004a868:	sbb    DWORD PTR [rcx+0x1],ecx
   14004a86b:	add    BYTE PTR [rax+0x20000261],ch
   14004a871:	add    QWORD PTR [r8],rax
   14004a874:	cmp    eax,0xa8000149
   14004a879:	(bad)  
   14004a87a:	add    al,BYTE PTR [rax]
   14004a87c:	rex
   14004a87d:	add    QWORD PTR [r8],rax
   14004a880:	pop    rbp
   14004a881:	add    QWORD PTR [r8],rax
   14004a884:	test   al,0x61
   14004a886:	add    al,BYTE PTR [rax]
   14004a888:	(bad)  
   14004a889:	add    QWORD PTR [r8],rax
   14004a88c:	jge    0x14004a8d7
   14004a88e:	add    DWORD PTR [rax],eax
   14004a890:	test   al,0x61
   14004a892:	add    al,BYTE PTR [rax]
   14004a894:	or     BYTE PTR [rcx+0x1],0x0
   14004a898:	cdq    
   14004a899:	add    QWORD PTR [r8],rax
   14004a89c:	test   al,0x61
   14004a89e:	add    al,BYTE PTR [rax]
   14004a8a0:	movabs al,ds:0xa8000149b9000149
   14004a8a9:	(bad)  
   14004a8aa:	add    al,BYTE PTR [rax]
   14004a8ac:	ror    BYTE PTR [rcx+0x1],0x0
   14004a8b0:	(bad)  [rcx+0x1]
   14004a8b3:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004a8b9:	add    QWORD PTR [r8],rax
   14004a8bc:	stc    
   14004a8bd:	add    QWORD PTR [r8],rax
   14004a8c0:	test   al,0x61
   14004a8c2:	add    al,BYTE PTR [rax]
   14004a8c4:	add    BYTE PTR [rdx+0x1],cl
   14004a8c7:	add    BYTE PTR [rdx+rcx*2],ch
   14004a8ca:	add    DWORD PTR [rax],eax
   14004a8cc:	call   0x17004aae4
   14004a8d1:	rex.WX add QWORD PTR [rax],rax
   14004a8d4:	pop    rsp
   14004a8d5:	rex.WX add QWORD PTR [rax],rax
   14004a8d8:	call   0x1a004aaf0
   14004a8dd:	rex.WX add QWORD PTR [rax],rax
   14004a8e0:	jns    0x14004a92c
   14004a8e2:	add    DWORD PTR [rax],eax
   14004a8e4:	test   al,0x61
   14004a8e6:	add    al,BYTE PTR [rax]
   14004a8e8:	or     BYTE PTR [rdx+0x1],0x0
   14004a8ec:	cdq    
   14004a8ed:	rex.WX add QWORD PTR [rax],rax
   14004a8f0:	test   al,0x61
   14004a8f2:	add    al,BYTE PTR [rax]
   14004a8f4:	movabs al,ds:0xa800014ab900014a
   14004a8fd:	(bad)  
   14004a8fe:	add    al,BYTE PTR [rax]
   14004a900:	ror    BYTE PTR [rdx+0x1],0x0
   14004a904:	(bad)  [rdx+0x1]
   14004a907:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004a90d:	rex.WX add QWORD PTR [rax],rax
   14004a910:	stc    
   14004a911:	rex.WX add QWORD PTR [rax],rax
   14004a914:	test   al,0x61
   14004a916:	add    al,BYTE PTR [rax]
   14004a918:	add    BYTE PTR [rbx+0x1],cl
   14004a91b:	add    BYTE PTR [rbx+rcx*2],bl
   14004a91e:	add    DWORD PTR [rax],eax
   14004a920:	test   al,0x61
   14004a922:	add    al,BYTE PTR [rax]
   14004a924:	and    BYTE PTR [rbx+0x1],cl
   14004a927:	add    BYTE PTR [rcx],bh
   14004a929:	rex.WXB add QWORD PTR [r8],rax
   14004a92c:	test   al,0x61
   14004a92e:	add    al,BYTE PTR [rax]
   14004a930:	rex
   14004a931:	rex.WXB add QWORD PTR [r8],rax
   14004a934:	pop    rcx
   14004a935:	rex.WXB add QWORD PTR [r8],rax
   14004a938:	test   al,0x61
   14004a93a:	add    al,BYTE PTR [rax]
   14004a93c:	(bad)  
   14004a93d:	rex.WXB add QWORD PTR [r8],rax
   14004a940:	jns    0x14004a98d
   14004a942:	add    DWORD PTR [rax],eax
   14004a944:	test   al,0x61
   14004a946:	add    al,BYTE PTR [rax]
   14004a948:	or     BYTE PTR [rbx+0x1],0x0
   14004a94c:	popf   
   14004a94d:	rex.WXB add QWORD PTR [r8],rax
   14004a950:	test   al,0x61
   14004a952:	add    al,BYTE PTR [rax]
   14004a954:	movabs al,ds:0xa800014bbd00014b
   14004a95d:	(bad)  
   14004a95e:	add    al,BYTE PTR [rax]
   14004a960:	ror    BYTE PTR [rbx+0x1],0x0
   14004a964:	fisttp QWORD PTR [rbx+0x1]
   14004a967:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004a96d:	rex.WXB add QWORD PTR [r8],rax
   14004a970:	std    
   14004a971:	rex.WXB add QWORD PTR [r8],rax
   14004a974:	test   al,0x61
   14004a976:	add    al,BYTE PTR [rax]
   14004a978:	add    BYTE PTR [rcx+rax*1+0x0],cl
   14004a97c:	sbb    DWORD PTR [rcx+rax*1+0x0],ecx
   14004a980:	test   al,0x61
   14004a982:	add    al,BYTE PTR [rax]
   14004a984:	and    BYTE PTR [rcx+rax*1+0x0],cl
   14004a988:	cmp    DWORD PTR [rcx+rax*1+0x0],ecx
   14004a98c:	test   al,0x61
   14004a98e:	add    al,BYTE PTR [rax]
   14004a990:	rex
   14004a991:	add    QWORD PTR [rax],r8
   14004a994:	pop    rcx
   14004a995:	add    QWORD PTR [rax],r8
   14004a998:	test   al,0x61
   14004a99a:	add    al,BYTE PTR [rax]
   14004a99c:	(bad)  
   14004a99d:	add    QWORD PTR [rax],r8
   14004a9a0:	jns    0x14004a9ee
   14004a9a2:	add    DWORD PTR [rax],eax
   14004a9a4:	test   al,0x61
   14004a9a6:	add    al,BYTE PTR [rax]
   14004a9a8:	or     BYTE PTR [rcx+rax*1+0x0],0x99
   14004a9ad:	add    QWORD PTR [rax],r8
   14004a9b0:	test   al,0x61
   14004a9b2:	add    al,BYTE PTR [rax]
   14004a9b4:	movabs al,ds:0xa800014cb900014c
   14004a9bd:	(bad)  
   14004a9be:	add    al,BYTE PTR [rax]
   14004a9c0:	ror    BYTE PTR [rcx+rax*1+0x0],0xd9
   14004a9c5:	add    QWORD PTR [rax],r8
   14004a9c8:	test   al,0x61
   14004a9ca:	add    al,BYTE PTR [rax]
   14004a9cc:	loopne 0x14004aa1a
   14004a9ce:	add    DWORD PTR [rax],eax
   14004a9d0:	clc    
   14004a9d1:	add    QWORD PTR [rax],r8
   14004a9d4:	test   al,0x61
   14004a9d6:	add    al,BYTE PTR [rax]
   14004a9d8:	add    BYTE PTR [rbp+0x1],cl
   14004a9db:	add    BYTE PTR [rax],bl
   14004a9dd:	add    QWORD PTR [r8],r8
   14004a9e0:	test   al,0x61
   14004a9e2:	add    al,BYTE PTR [rax]
   14004a9e4:	and    BYTE PTR [rbp+0x1],cl
   14004a9e7:	add    BYTE PTR [rip+0xffffffffa800014d],bh        # 0xe804ab3a
   14004a9ed:	(bad)  
   14004a9ee:	add    al,BYTE PTR [rax]
   14004a9f0:	rex
   14004a9f1:	add    QWORD PTR [r8],r8
   14004a9f4:	pop    rbp
   14004a9f5:	add    QWORD PTR [r8],r8
   14004a9f8:	test   al,0x61
   14004a9fa:	add    al,BYTE PTR [rax]
   14004a9fc:	(bad)  
   14004a9fd:	add    QWORD PTR [r8],r8
   14004aa00:	jge    0x14004aa4f
   14004aa02:	add    DWORD PTR [rax],eax
   14004aa04:	test   al,0x61
   14004aa06:	add    al,BYTE PTR [rax]
   14004aa08:	or     BYTE PTR [rbp+0x1],0x0
   14004aa0c:	pushf  
   14004aa0d:	add    QWORD PTR [r8],r8
   14004aa10:	test   al,0x61
   14004aa12:	add    al,BYTE PTR [rax]
   14004aa14:	movabs al,ds:0xa800014dbb00014d
   14004aa1d:	(bad)  
   14004aa1e:	add    al,BYTE PTR [rax]
   14004aa20:	ror    BYTE PTR [rbp+0x1],0x0
   14004aa24:	(bad)  [rbp+0x1]
   14004aa27:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004aa2d:	add    QWORD PTR [r8],r8
   14004aa30:	cld    
   14004aa31:	add    QWORD PTR [r8],r8
   14004aa34:	test   al,0x61
   14004aa36:	add    al,BYTE PTR [rax]
   14004aa38:	add    BYTE PTR [rsi+0x1],cl
   14004aa3b:	add    BYTE PTR [rsi+rcx*2],bl
   14004aa3e:	add    DWORD PTR [rax],eax
   14004aa40:	test   al,0x61
   14004aa42:	add    al,BYTE PTR [rax]
   14004aa44:	and    BYTE PTR [rsi+0x1],cl
   14004aa47:	add    BYTE PTR [rsi+rcx*2],bh
   14004aa4a:	add    DWORD PTR [rax],eax
   14004aa4c:	test   al,0x61
   14004aa4e:	add    al,BYTE PTR [rax]
   14004aa50:	rex
   14004aa51:	rex.WRX add QWORD PTR [rax],r8
   14004aa54:	pop    rax
   14004aa55:	rex.WRX add QWORD PTR [rax],r8
   14004aa58:	test   al,0x61
   14004aa5a:	add    al,BYTE PTR [rax]
   14004aa5c:	(bad)  
   14004aa5d:	rex.WRX add QWORD PTR [rax],r8
   14004aa60:	jge    0x14004aab0
   14004aa62:	add    DWORD PTR [rax],eax
   14004aa64:	test   al,0x61
   14004aa66:	add    al,BYTE PTR [rax]
   14004aa68:	or     BYTE PTR [rsi+0x1],0x0
   14004aa6c:	popf   
   14004aa6d:	rex.WRX add QWORD PTR [rax],r8
   14004aa70:	test   al,0x61
   14004aa72:	add    al,BYTE PTR [rax]
   14004aa74:	movabs al,ds:0xa800014ebd00014e
   14004aa7d:	(bad)  
   14004aa7e:	add    al,BYTE PTR [rax]
   14004aa80:	ror    BYTE PTR [rsi+0x1],0x0
   14004aa84:	fmul   QWORD PTR [rsi+0x1]
   14004aa87:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004aa8d:	rex.WRX add QWORD PTR [rax],r8
   14004aa90:	stc    
   14004aa91:	rex.WRX add QWORD PTR [rax],r8
   14004aa94:	test   al,0x61
   14004aa96:	add    al,BYTE PTR [rax]
   14004aa98:	add    BYTE PTR [rdi+0x1],cl
   14004aa9b:	add    BYTE PTR [rcx],bl
   14004aa9d:	rex.WRXB add QWORD PTR [r8],r8
   14004aaa0:	test   al,0x61
   14004aaa2:	add    al,BYTE PTR [rax]
   14004aaa4:	and    BYTE PTR [rdi+0x1],cl
   14004aaa7:	add    BYTE PTR [rcx],bh
   14004aaa9:	rex.WRXB add QWORD PTR [r8],r8
   14004aaac:	test   al,0x61
   14004aaae:	add    al,BYTE PTR [rax]
   14004aab0:	rex
   14004aab1:	rex.WRXB add QWORD PTR [r8],r8
   14004aab4:	pop    rcx
   14004aab5:	rex.WRXB add QWORD PTR [r8],r8
   14004aab8:	test   al,0x61
   14004aaba:	add    al,BYTE PTR [rax]
   14004aabc:	(bad)  
   14004aabd:	rex.WRXB add QWORD PTR [r8],r8
   14004aac0:	xchg   DWORD PTR [rdi+0x1],ecx
   14004aac3:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004aac9:	rex.WRXB add QWORD PTR [r8],r8
   14004aacc:	mov    bh,0x4f
   14004aace:	add    DWORD PTR [rax],eax
   14004aad0:	test   al,0x61
   14004aad2:	add    al,BYTE PTR [rax]
   14004aad4:	ror    BYTE PTR [rdi+0x1],0x0
   14004aad8:	out    0x4f,eax
   14004aada:	add    DWORD PTR [rax],eax
   14004aadc:	test   al,0x61
   14004aade:	add    al,BYTE PTR [rax]
   14004aae0:	lock rex.WRXB add QWORD PTR [r8],r8
   14004aae4:	(bad)  
   14004aae5:	push   rax
   14004aae6:	add    DWORD PTR [rax],eax
   14004aae8:	test   al,0x61
   14004aaea:	add    al,BYTE PTR [rax]
   14004aaec:	and    BYTE PTR [rax+0x1],dl
   14004aaef:	add    BYTE PTR [rdi+0x50],al
   14004aaf2:	add    DWORD PTR [rax],eax
   14004aaf4:	test   al,0x61
   14004aaf6:	add    al,BYTE PTR [rax]
   14004aaf8:	push   rax
   14004aaf9:	push   rax
   14004aafa:	add    DWORD PTR [rax],eax
   14004aafc:	imul   edx,DWORD PTR [rax+0x1],0x261a800
   14004ab03:	add    BYTE PTR [rax+0x50],dh
   14004ab06:	add    DWORD PTR [rax],eax
   14004ab08:	mov    DWORD PTR [rax+0x1],edx
   14004ab0b:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004ab11:	push   rax
   14004ab12:	add    DWORD PTR [rax],eax
   14004ab14:	test   eax,0xa8000150
   14004ab19:	(bad)  
   14004ab1a:	add    al,BYTE PTR [rax]
   14004ab1c:	mov    al,0x50
   14004ab1e:	add    DWORD PTR [rax],eax
   14004ab20:	leave  
   14004ab21:	push   rax
   14004ab22:	add    DWORD PTR [rax],eax
   14004ab24:	test   al,0x61
   14004ab26:	add    al,BYTE PTR [rax]
   14004ab28:	rcl    BYTE PTR [rax+0x1],1
   14004ab2b:	add    cl,ch
   14004ab2d:	push   rax
   14004ab2e:	add    DWORD PTR [rax],eax
   14004ab30:	test   al,0x61
   14004ab32:	add    al,BYTE PTR [rax]
   14004ab34:	lock push rax
   14004ab36:	add    DWORD PTR [rax],eax
   14004ab38:	(bad)  
   14004ab39:	push   rcx
   14004ab3a:	add    DWORD PTR [rax],eax
   14004ab3c:	test   al,0x61
   14004ab3e:	add    al,BYTE PTR [rax]
   14004ab40:	and    BYTE PTR [rcx+0x1],dl
   14004ab43:	add    BYTE PTR [rcx],bh
   14004ab45:	push   rcx
   14004ab46:	add    DWORD PTR [rax],eax
   14004ab48:	test   al,0x61
   14004ab4a:	add    al,BYTE PTR [rax]
   14004ab4c:	rex push rcx
   14004ab4e:	add    DWORD PTR [rax],eax
   14004ab50:	pop    rax
   14004ab51:	push   rcx
   14004ab52:	add    DWORD PTR [rax],eax
   14004ab54:	test   al,0x61
   14004ab56:	add    al,BYTE PTR [rax]
   14004ab58:	(bad)  
   14004ab59:	push   rcx
   14004ab5a:	add    DWORD PTR [rax],eax
   14004ab5c:	jns    0x14004abaf
   14004ab5e:	add    DWORD PTR [rax],eax
   14004ab60:	test   al,0x61
   14004ab62:	add    al,BYTE PTR [rax]
   14004ab64:	adc    BYTE PTR [rcx+0x1],0x0
   14004ab68:	cdq    
   14004ab69:	push   rcx
   14004ab6a:	add    DWORD PTR [rax],eax
   14004ab6c:	test   al,0x61
   14004ab6e:	add    al,BYTE PTR [rax]
   14004ab70:	movabs al,ds:0xa8000151b9000151
   14004ab79:	(bad)  
   14004ab7a:	add    al,BYTE PTR [rax]
   14004ab7c:	rcl    BYTE PTR [rcx+0x1],0x0
   14004ab80:	fcom   QWORD PTR [rcx+0x1]
   14004ab83:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004ab89:	push   rcx
   14004ab8a:	add    DWORD PTR [rax],eax
   14004ab8c:	stc    
   14004ab8d:	push   rcx
   14004ab8e:	add    DWORD PTR [rax],eax
   14004ab90:	test   al,0x61
   14004ab92:	add    al,BYTE PTR [rax]
   14004ab94:	add    BYTE PTR [rdx+0x1],dl
   14004ab97:	add    BYTE PTR [rax],dh
   14004ab99:	push   rdx
   14004ab9a:	add    DWORD PTR [rax],eax
   14004ab9c:	test   al,0x61
   14004ab9e:	add    al,BYTE PTR [rax]
   14004aba0:	xor    BYTE PTR [rdx+0x1],dl
   14004aba3:	add    BYTE PTR [rdx+rdx*2+0x1],cl
   14004aba7:	add    BYTE PTR [rax+0x50000261],ch
   14004abad:	push   rdx
   14004abae:	add    DWORD PTR [rax],eax
   14004abb0:	ins    BYTE PTR es:[rdi],dx
   14004abb1:	push   rdx
   14004abb2:	add    DWORD PTR [rax],eax
   14004abb4:	test   al,0x61
   14004abb6:	add    al,BYTE PTR [rax]
   14004abb8:	jo     0x14004ac0c
   14004abba:	add    DWORD PTR [rax],eax
   14004abbc:	mov    edx,DWORD PTR [rdx+0x1]
   14004abbf:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004abc5:	push   rdx
   14004abc6:	add    DWORD PTR [rax],eax
   14004abc8:	stos   DWORD PTR es:[rdi],eax
   14004abc9:	push   rdx
   14004abca:	add    DWORD PTR [rax],eax
   14004abcc:	test   al,0x61
   14004abce:	add    al,BYTE PTR [rax]
   14004abd0:	mov    al,0x52
   14004abd2:	add    DWORD PTR [rax],eax
   14004abd4:	rcl    BYTE PTR [rdx+0x1],1
   14004abd7:	add    BYTE PTR [rax-0x2ffffd9f],ch
   14004abdd:	push   rdx
   14004abde:	add    DWORD PTR [rax],eax
   14004abe0:	lock push rdx
   14004abe2:	add    DWORD PTR [rax],eax
   14004abe4:	test   al,0x61
   14004abe6:	add    al,BYTE PTR [rax]
   14004abe8:	lock push rdx
   14004abea:	add    DWORD PTR [rax],eax
   14004abec:	adc    BYTE PTR [rbx+0x1],dl
   14004abef:	add    BYTE PTR [rax+0x10000261],ch
   14004abf5:	push   rbx
   14004abf6:	add    DWORD PTR [rax],eax
   14004abf8:	(bad)  
   14004abf9:	push   rbx
   14004abfa:	add    DWORD PTR [rax],eax
   14004abfc:	test   al,0x61
   14004abfe:	add    al,BYTE PTR [rax]
   14004ac00:	xor    BYTE PTR [rbx+0x1],dl
   14004ac03:	add    BYTE PTR [rbx+rdx*2+0x1],cl
   14004ac07:	add    BYTE PTR [rax+0x50000261],ch
   14004ac0d:	push   rbx
   14004ac0e:	add    DWORD PTR [rax],eax
   14004ac10:	push   0xffffffffa8000153
   14004ac15:	(bad)  
   14004ac16:	add    al,BYTE PTR [rax]
   14004ac18:	jo     0x14004ac6d
   14004ac1a:	add    DWORD PTR [rax],eax
   14004ac1c:	mov    edx,DWORD PTR [rbx+0x1]
   14004ac1f:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004ac25:	push   rbx
   14004ac26:	add    DWORD PTR [rax],eax
   14004ac28:	mov    al,0x53
   14004ac2a:	add    DWORD PTR [rax],eax
   14004ac2c:	test   al,0x61
   14004ac2e:	add    al,BYTE PTR [rax]
   14004ac30:	mov    al,0x53
   14004ac32:	add    DWORD PTR [rax],eax
   14004ac34:	rcl    BYTE PTR [rbx+0x1],1
   14004ac37:	add    BYTE PTR [rax-0x2ffffd9f],ch
   14004ac3d:	push   rbx
   14004ac3e:	add    DWORD PTR [rax],eax
   14004ac40:	lock push rbx
   14004ac42:	add    DWORD PTR [rax],eax
   14004ac44:	test   al,0x61
   14004ac46:	add    al,BYTE PTR [rax]
   14004ac48:	lock push rbx
   14004ac4a:	add    DWORD PTR [rax],eax
   14004ac4c:	andps  xmm0,XMMWORD PTR [rcx]
   14004ac4f:	add    BYTE PTR [rax+0x10000261],ch
   14004ac55:	push   rsp
   14004ac56:	add    DWORD PTR [rax],eax
   14004ac58:	sub    al,0x54
   14004ac5a:	add    DWORD PTR [rax],eax
   14004ac5c:	test   al,0x61
   14004ac5e:	add    al,BYTE PTR [rax]
   14004ac60:	xor    BYTE PTR [rcx+rax*1+0x0],dl
   14004ac64:	rex.WR push rsp
   14004ac66:	add    DWORD PTR [rax],eax
   14004ac68:	test   al,0x61
   14004ac6a:	add    al,BYTE PTR [rax]
   14004ac6c:	push   rax
   14004ac6d:	push   rsp
   14004ac6e:	add    DWORD PTR [rax],eax
   14004ac70:	imul   edx,DWORD PTR [rcx+rax*1+0x0],0xffffffa8
   14004ac75:	(bad)  
   14004ac76:	add    al,BYTE PTR [rax]
   14004ac78:	jo     0x14004acce
   14004ac7a:	add    DWORD PTR [rax],eax
   14004ac7c:	mov    edx,DWORD PTR [rcx+rax*1+0x0]
   14004ac80:	test   al,0x61
   14004ac82:	add    al,BYTE PTR [rax]
   14004ac84:	nop
   14004ac85:	push   rsp
   14004ac86:	add    DWORD PTR [rax],eax
   14004ac88:	mov    al,0x54
   14004ac8a:	add    DWORD PTR [rax],eax
   14004ac8c:	test   al,0x61
   14004ac8e:	add    al,BYTE PTR [rax]
   14004ac90:	mov    al,0x54
   14004ac92:	add    DWORD PTR [rax],eax
   14004ac94:	rcl    BYTE PTR [rcx+rax*1+0x0],1
   14004ac98:	test   al,0x61
   14004ac9a:	add    al,BYTE PTR [rax]
   14004ac9c:	rcl    BYTE PTR [rcx+rax*1+0x0],1
   14004aca0:	lock push rsp
   14004aca2:	add    DWORD PTR [rax],eax
   14004aca4:	test   al,0x61
   14004aca6:	add    al,BYTE PTR [rax]
   14004aca8:	lock push rsp
   14004acaa:	add    DWORD PTR [rax],eax
   14004acac:	andnps xmm0,XMMWORD PTR [rcx]
   14004acaf:	add    BYTE PTR [rax+0x10000261],ch
   14004acb5:	push   rbp
   14004acb6:	add    DWORD PTR [rax],eax
   14004acb8:	push   rbp
   14004acb9:	push   rbp
   14004acba:	add    DWORD PTR [rax],eax
   14004acbc:	nop
   14004acbd:	sbb    eax,0x55600002
   14004acc2:	add    DWORD PTR [rax],eax
   14004acc4:	mov    WORD PTR [rbp+0x1],ss
   14004acc7:	add    BYTE PTR [rsi+rbx*1],dh
   14004acca:	add    al,BYTE PTR [rax]
   14004accc:	nop
   14004accd:	push   rbp
   14004acce:	add    DWORD PTR [rax],eax
   14004acd0:	mov    esp,0x34000155
   14004acd5:	(bad)  
   14004acd6:	add    al,BYTE PTR [rax]
   14004acd8:	rcl    BYTE PTR [rbp+0x1],0x0
   14004acdc:	jmp    0x14004ad33
   14004acde:	add    DWORD PTR [rax],eax
   14004ace0:	hlt    
   14004ace1:	(bad)  
   14004ace2:	add    al,BYTE PTR [rax]
   14004ace4:	lock push rbp
   14004ace6:	add    DWORD PTR [rax],eax
   14004ace8:	or     BYTE PTR [rsi+0x1],dl
   14004aceb:	add    BYTE PTR [rax+0x10000261],ch
   14004acf1:	push   rsi
   14004acf2:	add    DWORD PTR [rax],eax
   14004acf4:	rex.R push rsi
   14004acf6:	add    DWORD PTR [rax],eax
   14004acf8:	lock (bad) 
   14004acfa:	add    al,BYTE PTR [rax]
   14004acfc:	push   rax
   14004acfd:	push   rsi
   14004acfe:	add    DWORD PTR [rax],eax
   14004ad00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ad01:	push   rsi
   14004ad02:	add    DWORD PTR [rax],eax
   14004ad04:	lock (bad) 
   14004ad06:	add    al,BYTE PTR [rax]
   14004ad08:	mov    al,0x56
   14004ad0a:	add    DWORD PTR [rax],eax
   14004ad0c:	in     al,0x56
   14004ad0e:	add    DWORD PTR [rax],eax
   14004ad10:	mov    ah,0x20
   14004ad12:	add    al,BYTE PTR [rax]
   14004ad14:	lock push rsi
   14004ad16:	add    DWORD PTR [rax],eax
   14004ad18:	sbb    BYTE PTR [rdi+0x1],dl
   14004ad1b:	add    BYTE PTR [rax+0x21],cl
   14004ad1e:	add    al,BYTE PTR [rax]
   14004ad20:	and    BYTE PTR [rdi+0x1],dl
   14004ad23:	add    BYTE PTR [rax+0x57],cl
   14004ad26:	add    DWORD PTR [rax],eax
   14004ad28:	and    QWORD PTR [rdx],rax
   14004ad2b:	add    BYTE PTR [rax+0x57],dl
   14004ad2e:	add    DWORD PTR [rax],eax
   14004ad30:	push   0xffffffffa8000157
   14004ad35:	(bad)  
   14004ad36:	add    al,BYTE PTR [rax]
   14004ad38:	jo     0x14004ad91
   14004ad3a:	add    DWORD PTR [rax],eax
   14004ad3c:	lea    edx,[rdi+0x1]
   14004ad3f:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004ad45:	push   rdi
   14004ad46:	add    DWORD PTR [rax],eax
   14004ad48:	lods   eax,DWORD PTR ds:[rsi]
   14004ad49:	push   rdi
   14004ad4a:	add    DWORD PTR [rax],eax
   14004ad4c:	test   al,0x61
   14004ad4e:	add    al,BYTE PTR [rax]
   14004ad50:	mov    al,0x57
   14004ad52:	add    DWORD PTR [rax],eax
   14004ad54:	int3   
   14004ad55:	push   rdi
   14004ad56:	add    DWORD PTR [rax],eax
   14004ad58:	test   al,0x61
   14004ad5a:	add    al,BYTE PTR [rax]
   14004ad5c:	rcl    BYTE PTR [rdi+0x1],1
   14004ad5f:	add    cl,ch
   14004ad61:	push   rdi
   14004ad62:	add    DWORD PTR [rax],eax
   14004ad64:	test   al,0x61
   14004ad66:	add    al,BYTE PTR [rax]
   14004ad68:	lock push rdi
   14004ad6a:	add    DWORD PTR [rax],eax
   14004ad6c:	or     DWORD PTR [rax+0x1],ebx
   14004ad6f:	add    BYTE PTR [rax+0x10000261],ch
   14004ad75:	pop    rax
   14004ad76:	add    DWORD PTR [rax],eax
   14004ad78:	sub    ebx,DWORD PTR [rax+0x1]
   14004ad7b:	add    BYTE PTR [rax+0x30000261],ch
   14004ad81:	pop    rax
   14004ad82:	add    DWORD PTR [rax],eax
   14004ad84:	rex.W pop rax
   14004ad86:	add    DWORD PTR [rax],eax
   14004ad88:	test   al,0x61
   14004ad8a:	add    al,BYTE PTR [rax]
   14004ad8c:	push   rax
   14004ad8d:	pop    rax
   14004ad8e:	add    DWORD PTR [rax],eax
   14004ad90:	ins    BYTE PTR es:[rdi],dx
   14004ad91:	pop    rax
   14004ad92:	add    DWORD PTR [rax],eax
   14004ad94:	test   al,0x61
   14004ad96:	add    al,BYTE PTR [rax]
   14004ad98:	jo     0x14004adf2
   14004ad9a:	add    DWORD PTR [rax],eax
   14004ad9c:	mov    DWORD PTR [rax+0x1],ebx
   14004ad9f:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004ada5:	pop    rax
   14004ada6:	add    DWORD PTR [rax],eax
   14004ada8:	test   eax,0xa8000158
   14004adad:	(bad)  
   14004adae:	add    al,BYTE PTR [rax]
   14004adb0:	mov    al,0x58
   14004adb2:	add    DWORD PTR [rax],eax
   14004adb4:	enter  0x158,0x0
   14004adb8:	test   al,0x61
   14004adba:	add    al,BYTE PTR [rax]
   14004adbc:	rcr    BYTE PTR [rax+0x1],1
   14004adbf:	add    ch,ch
   14004adc1:	pop    rax
   14004adc2:	add    DWORD PTR [rax],eax
   14004adc4:	test   al,0x61
   14004adc6:	add    al,BYTE PTR [rax]
   14004adc8:	lock pop rax
   14004adca:	add    DWORD PTR [rax],eax
   14004adcc:	or     eax,0xa8000159
   14004add1:	(bad)  
   14004add2:	add    al,BYTE PTR [rax]
   14004add4:	adc    BYTE PTR [rcx+0x1],bl
   14004add7:	add    BYTE PTR [rax],dh
   14004add9:	pop    rcx
   14004adda:	add    DWORD PTR [rax],eax
   14004addc:	test   al,0x61
   14004adde:	add    al,BYTE PTR [rax]
   14004ade0:	xor    BYTE PTR [rcx+0x1],bl
   14004ade3:	add    BYTE PTR [rax+0x59],dl
   14004ade6:	add    DWORD PTR [rax],eax
   14004ade8:	test   al,0x61
   14004adea:	add    al,BYTE PTR [rax]
   14004adec:	push   rax
   14004aded:	pop    rcx
   14004adee:	add    DWORD PTR [rax],eax
   14004adf0:	jo     0x14004ae4b
   14004adf2:	add    DWORD PTR [rax],eax
   14004adf4:	test   al,0x61
   14004adf6:	add    al,BYTE PTR [rax]
   14004adf8:	jo     0x14004ae53
   14004adfa:	add    DWORD PTR [rax],eax
   14004adfc:	(bad)  
   14004adfd:	pop    rcx
   14004adfe:	add    DWORD PTR [rax],eax
   14004ae00:	test   al,0x61
   14004ae02:	add    al,BYTE PTR [rax]
   14004ae04:	nop
   14004ae05:	pop    rcx
   14004ae06:	add    DWORD PTR [rax],eax
   14004ae08:	stos   DWORD PTR es:[rdi],eax
   14004ae09:	pop    rcx
   14004ae0a:	add    DWORD PTR [rax],eax
   14004ae0c:	test   al,0x61
   14004ae0e:	add    al,BYTE PTR [rax]
   14004ae10:	mov    al,0x59
   14004ae12:	add    DWORD PTR [rax],eax
   14004ae14:	rcr    BYTE PTR [rcx+0x1],1
   14004ae17:	add    BYTE PTR [rax-0x2ffffd9f],ch
   14004ae1d:	pop    rcx
   14004ae1e:	add    DWORD PTR [rax],eax
   14004ae20:	lock pop rcx
   14004ae22:	add    DWORD PTR [rax],eax
   14004ae24:	test   al,0x61
   14004ae26:	add    al,BYTE PTR [rax]
   14004ae28:	lock pop rcx
   14004ae2a:	add    DWORD PTR [rax],eax
   14004ae2c:	adc    BYTE PTR [rdx+0x1],bl
   14004ae2f:	add    BYTE PTR [rax+0x10000261],ch
   14004ae35:	pop    rdx
   14004ae36:	add    DWORD PTR [rax],eax
   14004ae38:	xor    BYTE PTR [rdx+0x1],bl
   14004ae3b:	add    BYTE PTR [rax+0x30000261],ch
   14004ae41:	pop    rdx
   14004ae42:	add    DWORD PTR [rax],eax
   14004ae44:	push   rax
   14004ae45:	pop    rdx
   14004ae46:	add    DWORD PTR [rax],eax
   14004ae48:	test   al,0x61
   14004ae4a:	add    al,BYTE PTR [rax]
   14004ae4c:	push   rax
   14004ae4d:	pop    rdx
   14004ae4e:	add    DWORD PTR [rax],eax
   14004ae50:	outs   dx,DWORD PTR ds:[rsi]
   14004ae51:	pop    rdx
   14004ae52:	add    DWORD PTR [rax],eax
   14004ae54:	test   al,0x61
   14004ae56:	add    al,BYTE PTR [rax]
   14004ae58:	jo     0x14004aeb4
   14004ae5a:	add    DWORD PTR [rax],eax
   14004ae5c:	mov    DWORD PTR [rdx+0x1],ebx
   14004ae5f:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004ae65:	pop    rdx
   14004ae66:	add    DWORD PTR [rax],eax
   14004ae68:	stos   DWORD PTR es:[rdi],eax
   14004ae69:	pop    rdx
   14004ae6a:	add    DWORD PTR [rax],eax
   14004ae6c:	test   al,0x61
   14004ae6e:	add    al,BYTE PTR [rax]
   14004ae70:	mov    al,0x5a
   14004ae72:	add    DWORD PTR [rax],eax
   14004ae74:	leave  
   14004ae75:	pop    rdx
   14004ae76:	add    DWORD PTR [rax],eax
   14004ae78:	test   al,0x61
   14004ae7a:	add    al,BYTE PTR [rax]
   14004ae7c:	rcr    BYTE PTR [rdx+0x1],1
   14004ae7f:	add    ah,ch
   14004ae81:	pop    rdx
   14004ae82:	add    DWORD PTR [rax],eax
   14004ae84:	test   al,0x61
   14004ae86:	add    al,BYTE PTR [rax]
   14004ae88:	lock pop rdx
   14004ae8a:	add    DWORD PTR [rax],eax
   14004ae8c:	or     BYTE PTR [rbx+0x1],bl
   14004ae8f:	add    BYTE PTR [rax+0x10000261],ch
   14004ae95:	pop    rbx
   14004ae96:	add    DWORD PTR [rax],eax
   14004ae98:	sub    BYTE PTR [rbx+0x1],bl
   14004ae9b:	add    BYTE PTR [rax+0x30000261],ch
   14004aea1:	pop    rbx
   14004aea2:	add    DWORD PTR [rax],eax
   14004aea4:	rex.WXB pop r11
   14004aea6:	add    DWORD PTR [rax],eax
   14004aea8:	test   al,0x61
   14004aeaa:	add    al,BYTE PTR [rax]
   14004aeac:	push   rax
   14004aead:	pop    rbx
   14004aeae:	add    DWORD PTR [rax],eax
   14004aeb0:	jo     0x14004af0d
   14004aeb2:	add    DWORD PTR [rax],eax
   14004aeb4:	test   al,0x61
   14004aeb6:	add    al,BYTE PTR [rax]
   14004aeb8:	jo     0x14004af15
   14004aeba:	add    DWORD PTR [rax],eax
   14004aebc:	nop
   14004aebd:	pop    rbx
   14004aebe:	add    DWORD PTR [rax],eax
   14004aec0:	test   al,0x61
   14004aec2:	add    al,BYTE PTR [rax]
   14004aec4:	nop
   14004aec5:	pop    rbx
   14004aec6:	add    DWORD PTR [rax],eax
   14004aec8:	mov    al,0x5b
   14004aeca:	add    DWORD PTR [rax],eax
   14004aecc:	test   al,0x61
   14004aece:	add    al,BYTE PTR [rax]
   14004aed0:	mov    al,0x5b
   14004aed2:	add    DWORD PTR [rax],eax
   14004aed4:	rcr    BYTE PTR [rbx+0x1],1
   14004aed7:	add    BYTE PTR [rax-0x2ffffd9f],ch
   14004aedd:	pop    rbx
   14004aede:	add    DWORD PTR [rax],eax
   14004aee0:	lock pop rbx
   14004aee2:	add    DWORD PTR [rax],eax
   14004aee4:	test   al,0x61
   14004aee6:	add    al,BYTE PTR [rax]
   14004aee8:	lock pop rbx
   14004aeea:	add    DWORD PTR [rax],eax
   14004aeec:	subps  xmm0,XMMWORD PTR [rcx]
   14004aeef:	add    BYTE PTR [rax+0x10000261],ch
   14004aef5:	pop    rsp
   14004aef6:	add    DWORD PTR [rax],eax
   14004aef8:	sub    ebx,DWORD PTR [rcx+rax*1+0x0]
   14004aefc:	test   al,0x61
   14004aefe:	add    al,BYTE PTR [rax]
   14004af00:	xor    BYTE PTR [rcx+rax*1+0x0],bl
   14004af04:	push   rax
   14004af05:	pop    rsp
   14004af06:	add    DWORD PTR [rax],eax
   14004af08:	test   al,0x61
   14004af0a:	add    al,BYTE PTR [rax]
   14004af0c:	push   rax
   14004af0d:	pop    rsp
   14004af0e:	add    DWORD PTR [rax],eax
   14004af10:	jo     0x14004af6e
   14004af12:	add    DWORD PTR [rax],eax
   14004af14:	test   al,0x61
   14004af16:	add    al,BYTE PTR [rax]
   14004af18:	jo     0x14004af76
   14004af1a:	add    DWORD PTR [rax],eax
   14004af1c:	mov    ebx,DWORD PTR [rcx+rax*1+0x0]
   14004af20:	test   al,0x61
   14004af22:	add    al,BYTE PTR [rax]
   14004af24:	nop
   14004af25:	pop    rsp
   14004af26:	add    DWORD PTR [rax],eax
   14004af28:	mov    al,0x5c
   14004af2a:	add    DWORD PTR [rax],eax
   14004af2c:	test   al,0x61
   14004af2e:	add    al,BYTE PTR [rax]
   14004af30:	mov    al,0x5c
   14004af32:	add    DWORD PTR [rax],eax
   14004af34:	rcr    BYTE PTR [rcx+rax*1+0x0],1
   14004af38:	test   al,0x61
   14004af3a:	add    al,BYTE PTR [rax]
   14004af3c:	rcr    BYTE PTR [rcx+rax*1+0x0],1
   14004af40:	in     al,dx
   14004af41:	pop    rsp
   14004af42:	add    DWORD PTR [rax],eax
   14004af44:	test   al,0x61
   14004af46:	add    al,BYTE PTR [rax]
   14004af48:	lock pop rsp
   14004af4a:	add    DWORD PTR [rax],eax
   14004af4c:	or     al,0x5d
   14004af4e:	add    DWORD PTR [rax],eax
   14004af50:	test   al,0x61
   14004af52:	add    al,BYTE PTR [rax]
   14004af54:	adc    BYTE PTR [rbp+0x1],bl
   14004af57:	add    BYTE PTR [rbx*2+0x61a80001],ch
   14004af5e:	add    al,BYTE PTR [rax]
   14004af60:	xor    BYTE PTR [rbp+0x1],bl
   14004af63:	add    BYTE PTR [rbp+rbx*2+0x1],cl
   14004af67:	add    BYTE PTR [rax+0x50000261],ch
   14004af6d:	pop    rbp
   14004af6e:	add    DWORD PTR [rax],eax
   14004af70:	ins    BYTE PTR es:[rdi],dx
   14004af71:	pop    rbp
   14004af72:	add    DWORD PTR [rax],eax
   14004af74:	test   al,0x61
   14004af76:	add    al,BYTE PTR [rax]
   14004af78:	jo     0x14004afd7
   14004af7a:	add    DWORD PTR [rax],eax
   14004af7c:	mov    WORD PTR [rbp+0x1],ds
   14004af7f:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004af85:	pop    rbp
   14004af86:	add    DWORD PTR [rax],eax
   14004af88:	lods   al,BYTE PTR ds:[rsi]
   14004af89:	pop    rbp
   14004af8a:	add    DWORD PTR [rax],eax
   14004af8c:	test   al,0x61
   14004af8e:	add    al,BYTE PTR [rax]
   14004af90:	mov    al,0x5d
   14004af92:	add    DWORD PTR [rax],eax
   14004af94:	int3   
   14004af95:	pop    rbp
   14004af96:	add    DWORD PTR [rax],eax
   14004af98:	test   al,0x61
   14004af9a:	add    al,BYTE PTR [rax]
   14004af9c:	rcr    BYTE PTR [rbp+0x1],1
   14004af9f:	add    bl,ch
   14004afa1:	pop    rbp
   14004afa2:	add    DWORD PTR [rax],eax
   14004afa4:	test   al,0x61
   14004afa6:	add    al,BYTE PTR [rax]
   14004afa8:	lock pop rbp
   14004afaa:	add    DWORD PTR [rax],eax
   14004afac:	or     BYTE PTR [rsi+0x1],bl
   14004afaf:	add    BYTE PTR [rax+0x10000261],ch
   14004afb5:	pop    rsi
   14004afb6:	add    DWORD PTR [rax],eax
   14004afb8:	sub    ebx,DWORD PTR [rsi+0x1]
   14004afbb:	add    BYTE PTR [rax+0x30000261],ch
   14004afc1:	pop    rsi
   14004afc2:	add    DWORD PTR [rax],eax
   14004afc4:	rex.WR pop rsi
   14004afc6:	add    DWORD PTR [rax],eax
   14004afc8:	test   al,0x61
   14004afca:	add    al,BYTE PTR [rax]
   14004afcc:	push   rax
   14004afcd:	pop    rsi
   14004afce:	add    DWORD PTR [rax],eax
   14004afd0:	ins    BYTE PTR es:[rdi],dx
   14004afd1:	pop    rsi
   14004afd2:	add    DWORD PTR [rax],eax
   14004afd4:	test   al,0x61
   14004afd6:	add    al,BYTE PTR [rax]
   14004afd8:	jo     0x14004b038
   14004afda:	add    DWORD PTR [rax],eax
   14004afdc:	mov    WORD PTR [rsi+0x1],ds
   14004afdf:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004afe5:	pop    rsi
   14004afe6:	add    DWORD PTR [rax],eax
   14004afe8:	lods   al,BYTE PTR ds:[rsi]
   14004afe9:	pop    rsi
   14004afea:	add    DWORD PTR [rax],eax
   14004afec:	test   al,0x61
   14004afee:	add    al,BYTE PTR [rax]
   14004aff0:	mov    al,0x5e
   14004aff2:	add    DWORD PTR [rax],eax
   14004aff4:	int3   
   14004aff5:	pop    rsi
   14004aff6:	add    DWORD PTR [rax],eax
   14004aff8:	test   al,0x61
   14004affa:	add    al,BYTE PTR [rax]
   14004affc:	rcr    BYTE PTR [rsi+0x1],1
   14004afff:	add    ah,ch
   14004b001:	pop    rsi
   14004b002:	add    DWORD PTR [rax],eax
   14004b004:	test   al,0x61
   14004b006:	add    al,BYTE PTR [rax]
   14004b008:	lock pop rsi
   14004b00a:	add    DWORD PTR [rax],eax
   14004b00c:	or     al,0x5f
   14004b00e:	add    DWORD PTR [rax],eax
   14004b010:	test   al,0x61
   14004b012:	add    al,BYTE PTR [rax]
   14004b014:	adc    BYTE PTR [rdi+0x1],bl
   14004b017:	add    BYTE PTR [rdi+rbx*2],ch
   14004b01a:	add    DWORD PTR [rax],eax
   14004b01c:	test   al,0x61
   14004b01e:	add    al,BYTE PTR [rax]
   14004b020:	xor    BYTE PTR [rdi+0x1],bl
   14004b023:	add    BYTE PTR [rdi+rbx*2+0x1],cl
   14004b027:	add    BYTE PTR [rax+0x50000261],ch
   14004b02d:	pop    rdi
   14004b02e:	add    DWORD PTR [rax],eax
   14004b030:	ins    BYTE PTR es:[rdi],dx
   14004b031:	pop    rdi
   14004b032:	add    DWORD PTR [rax],eax
   14004b034:	test   al,0x61
   14004b036:	add    al,BYTE PTR [rax]
   14004b038:	jo     0x14004b099
   14004b03a:	add    DWORD PTR [rax],eax
   14004b03c:	mov    WORD PTR [rdi+0x1],ds
   14004b03f:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004b045:	pop    rdi
   14004b046:	add    DWORD PTR [rax],eax
   14004b048:	lods   al,BYTE PTR ds:[rsi]
   14004b049:	pop    rdi
   14004b04a:	add    DWORD PTR [rax],eax
   14004b04c:	test   al,0x61
   14004b04e:	add    al,BYTE PTR [rax]
   14004b050:	mov    al,0x5f
   14004b052:	add    DWORD PTR [rax],eax
   14004b054:	int3   
   14004b055:	pop    rdi
   14004b056:	add    DWORD PTR [rax],eax
   14004b058:	test   al,0x61
   14004b05a:	add    al,BYTE PTR [rax]
   14004b05c:	rcr    BYTE PTR [rdi+0x1],1
   14004b05f:	add    ah,ch
   14004b061:	pop    rdi
   14004b062:	add    DWORD PTR [rax],eax
   14004b064:	test   al,0x61
   14004b066:	add    al,BYTE PTR [rax]
   14004b068:	lock pop rdi
   14004b06a:	add    DWORD PTR [rax],eax
   14004b06c:	or     al,0x60
   14004b06e:	add    DWORD PTR [rax],eax
   14004b070:	test   al,0x61
   14004b072:	add    al,BYTE PTR [rax]
   14004b074:	adc    BYTE PTR [rax+0x1],ah
   14004b077:	add    BYTE PTR [rax+riz*2],ch
   14004b07a:	add    DWORD PTR [rax],eax
   14004b07c:	test   al,0x61
   14004b07e:	add    al,BYTE PTR [rax]
   14004b080:	xor    BYTE PTR [rax+0x1],ah
   14004b083:	add    BYTE PTR [rax+riz*2+0x1],cl
   14004b087:	add    BYTE PTR [rax+0x50000261],ch
   14004b08d:	(bad)  
   14004b08e:	add    DWORD PTR [rax],eax
   14004b090:	ins    BYTE PTR es:[rdi],dx
   14004b091:	(bad)  
   14004b092:	add    DWORD PTR [rax],eax
   14004b094:	test   al,0x61
   14004b096:	add    al,BYTE PTR [rax]
   14004b098:	jo     0x14004b0fa
   14004b09a:	add    DWORD PTR [rax],eax
   14004b09c:	mov    WORD PTR [rax+0x1],fs
   14004b09f:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004b0a5:	(bad)  
   14004b0a6:	add    DWORD PTR [rax],eax
   14004b0a8:	mov    edx,0xa8000160
   14004b0ad:	(bad)  
   14004b0ae:	add    al,BYTE PTR [rax]
   14004b0b0:	shl    BYTE PTR [rax+0x1],0x0
   14004b0b4:	(bad)  
   14004b0b5:	(bad)  
   14004b0b6:	add    DWORD PTR [rax],eax
   14004b0b8:	test   al,0x61
   14004b0ba:	add    al,BYTE PTR [rax]
   14004b0bc:	lock (bad) 
   14004b0be:	add    DWORD PTR [rax],eax
   14004b0c0:	or     al,0x61
   14004b0c2:	add    DWORD PTR [rax],eax
   14004b0c4:	test   al,0x61
   14004b0c6:	add    al,BYTE PTR [rax]
   14004b0c8:	adc    BYTE PTR [rcx+0x1],ah
   14004b0cb:	add    BYTE PTR [rcx+riz*2],ch
   14004b0ce:	add    DWORD PTR [rax],eax
   14004b0d0:	test   al,0x61
   14004b0d2:	add    al,BYTE PTR [rax]
   14004b0d4:	xor    BYTE PTR [rcx+0x1],ah
   14004b0d7:	add    BYTE PTR [rcx+riz*2+0x1],cl
   14004b0db:	add    BYTE PTR [rax+0x50000261],ch
   14004b0e1:	(bad)  
   14004b0e2:	add    DWORD PTR [rax],eax
   14004b0e4:	ins    BYTE PTR es:[rdi],dx
   14004b0e5:	(bad)  
   14004b0e6:	add    DWORD PTR [rax],eax
   14004b0e8:	test   al,0x61
   14004b0ea:	add    al,BYTE PTR [rax]
   14004b0ec:	jo     0x14004b14f
   14004b0ee:	add    DWORD PTR [rax],eax
   14004b0f0:	mov    WORD PTR [rcx+0x1],fs
   14004b0f3:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004b0f9:	(bad)  
   14004b0fa:	add    DWORD PTR [rax],eax
   14004b0fc:	lods   al,BYTE PTR ds:[rsi]
   14004b0fd:	(bad)  
   14004b0fe:	add    DWORD PTR [rax],eax
   14004b100:	test   al,0x61
   14004b102:	add    al,BYTE PTR [rax]
   14004b104:	mov    al,0x61
   14004b106:	add    DWORD PTR [rax],eax
   14004b108:	int3   
   14004b109:	(bad)  
   14004b10a:	add    DWORD PTR [rax],eax
   14004b10c:	test   al,0x61
   14004b10e:	add    al,BYTE PTR [rax]
   14004b110:	shl    BYTE PTR [rcx+0x1],1
   14004b113:	add    bl,ch
   14004b115:	(bad)  
   14004b116:	add    DWORD PTR [rax],eax
   14004b118:	test   al,0x61
   14004b11a:	add    al,BYTE PTR [rax]
   14004b11c:	lock (bad) 
   14004b11e:	add    DWORD PTR [rax],eax
   14004b120:	adc    BYTE PTR [rdx+0x1],ah
   14004b123:	add    BYTE PTR [rax+0x10000261],ch
   14004b129:	(bad)  
   14004b12b:	add    BYTE PTR [rax],dh
   14004b12d:	(bad)  
   14004b12f:	add    BYTE PTR [rax+0x30000261],ch
   14004b135:	(bad)  
   14004b137:	add    BYTE PTR [rax+0x62],dl
   14004b13a:	add    DWORD PTR [rax],eax
   14004b13c:	test   al,0x61
   14004b13e:	add    al,BYTE PTR [rax]
   14004b140:	push   rax
   14004b141:	(bad)  
   14004b143:	add    BYTE PTR [rax+0x62],dh
   14004b146:	add    DWORD PTR [rax],eax
   14004b148:	test   al,0x61
   14004b14a:	add    al,BYTE PTR [rax]
   14004b14c:	jo     0x14004b1b0
   14004b14e:	add    DWORD PTR [rax],eax
   14004b150:	nop
   14004b151:	(bad)  
   14004b153:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004b159:	(bad)  
   14004b15b:	add    BYTE PTR [rdi-0x57fffe9e],ch
   14004b161:	(bad)  
   14004b162:	add    al,BYTE PTR [rax]
   14004b164:	mov    al,0x62
   14004b166:	add    DWORD PTR [rax],eax
   14004b168:	retf   
   14004b169:	(bad)  
   14004b16b:	add    BYTE PTR [rax-0x2ffffd9f],ch
   14004b171:	(bad)  
   14004b173:	add    al,dh
   14004b175:	(bad)  
   14004b177:	add    BYTE PTR [rax-0xffffd9f],ch
   14004b17d:	(bad)  
   14004b17f:	add    BYTE PTR [rax],dl
   14004b181:	movsxd eax,DWORD PTR [rcx]
   14004b183:	add    BYTE PTR [rax+0x10000261],ch
   14004b189:	movsxd eax,DWORD PTR [rcx]
   14004b18b:	add    BYTE PTR [rip+0xffffffffa8000163],ch        # 0xe804b2f4
   14004b191:	(bad)  
   14004b192:	add    al,BYTE PTR [rax]
   14004b194:	xor    BYTE PTR [rbx+0x1],ah
   14004b197:	add    BYTE PTR [rbp+0x63],cl
   14004b19a:	add    DWORD PTR [rax],eax
   14004b19c:	test   al,0x61
   14004b19e:	add    al,BYTE PTR [rax]
   14004b1a0:	push   rax
   14004b1a1:	movsxd eax,DWORD PTR [rcx]
   14004b1a3:	add    BYTE PTR [rbp+0x63],ch
   14004b1a6:	add    DWORD PTR [rax],eax
   14004b1a8:	test   al,0x61
   14004b1aa:	add    al,BYTE PTR [rax]
   14004b1ac:	jo     0x14004b211
   14004b1ae:	add    DWORD PTR [rax],eax
   14004b1b0:	mov    WORD PTR [rbx+0x1],fs
   14004b1b3:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004b1b9:	movsxd eax,DWORD PTR [rcx]
   14004b1bb:	add    BYTE PTR [rax-0x57fffe9d],ch
   14004b1c1:	(bad)  
   14004b1c2:	add    al,BYTE PTR [rax]
   14004b1c4:	mov    al,0x63
   14004b1c6:	add    DWORD PTR [rax],eax
   14004b1c8:	(bad)  
   14004b1c9:	movsxd eax,DWORD PTR [rcx]
   14004b1cb:	add    BYTE PTR [rsp+rbp*1+0x64000002],bh
   14004b1d2:	add    DWORD PTR [rax],eax
   14004b1d4:	sub    esp,DWORD PTR [rcx+rax*1+0x0]
   14004b1d8:	sub    BYTE PTR [rip+0x64300002],0x1        # 0x1a434b1e1
   14004b1df:	add    BYTE PTR [rbp+0x64],cl
   14004b1e2:	add    DWORD PTR [rax],eax
   14004b1e4:	test   al,0x61
   14004b1e6:	add    al,BYTE PTR [rax]
   14004b1e8:	push   rax
   14004b1e9:	add    DWORD PTR fs:[rax],eax
   14004b1ec:	ins    DWORD PTR es:[rdi],dx
   14004b1ed:	add    DWORD PTR fs:[rax],eax
   14004b1f0:	test   al,0x61
   14004b1f2:	add    al,BYTE PTR [rax]
   14004b1f4:	jo     0x14004b25a
   14004b1f6:	add    DWORD PTR [rax],eax
   14004b1f8:	lea    esp,[rcx+rax*1+0x0]
   14004b1fc:	test   al,0x61
   14004b1fe:	add    al,BYTE PTR [rax]
   14004b200:	nop
   14004b201:	add    DWORD PTR fs:[rax],eax
   14004b204:	lods   al,BYTE PTR ds:[rsi]
   14004b205:	add    DWORD PTR fs:[rax],eax
   14004b208:	test   al,0x61
   14004b20a:	add    al,BYTE PTR [rax]
   14004b20c:	mov    al,0x64
   14004b20e:	add    DWORD PTR [rax],eax
   14004b210:	in     al,0x64
   14004b212:	add    DWORD PTR [rax],eax
   14004b214:	mov    ah,0x2e
   14004b216:	add    al,BYTE PTR [rax]
   14004b218:	lock add DWORD PTR fs:[rax],eax
   14004b21c:	or     BYTE PTR [rbp+0x1],ah
   14004b21f:	add    BYTE PTR [rax+0x10000261],ch
   14004b225:	add    DWORD PTR gs:[rax],eax
   14004b228:	sub    al,0x65
   14004b22a:	add    DWORD PTR [rax],eax
   14004b22c:	test   al,0x61
   14004b22e:	add    al,BYTE PTR [rax]
   14004b230:	xor    BYTE PTR [rbp+0x1],ah
   14004b233:	add    BYTE PTR [rbp+riz*2+0x1],cl
   14004b237:	add    BYTE PTR [rax+0x50000261],ch
   14004b23d:	add    DWORD PTR gs:[rax],eax
   14004b240:	push   0xffffffffa8000165
   14004b245:	(bad)  
   14004b246:	add    al,BYTE PTR [rax]
   14004b248:	jo     0x14004b2af
   14004b24a:	add    DWORD PTR [rax],eax
   14004b24c:	mov    esp,DWORD PTR [rbp+0x1]
   14004b24f:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004b255:	add    DWORD PTR gs:[rax],eax
   14004b258:	lods   al,BYTE PTR ds:[rsi]
   14004b259:	add    DWORD PTR gs:[rax],eax
   14004b25c:	test   al,0x61
   14004b25e:	add    al,BYTE PTR [rax]
   14004b260:	mov    al,0x65
   14004b262:	add    DWORD PTR [rax],eax
   14004b264:	retf   
   14004b265:	add    DWORD PTR gs:[rax],eax
   14004b268:	test   al,0x61
   14004b26a:	add    al,BYTE PTR [rax]
   14004b26c:	shl    BYTE PTR [rbp+0x1],1
   14004b26f:	add    al,dh
   14004b271:	add    DWORD PTR gs:[rax],eax
   14004b274:	test   al,0x61
   14004b276:	add    al,BYTE PTR [rax]
   14004b278:	lock add DWORD PTR gs:[rax],eax
   14004b27c:	adc    BYTE PTR [rsi+0x1],ah
   14004b27f:	add    BYTE PTR [rax+0x10000261],ch
   14004b285:	add    WORD PTR [rax],ax
   14004b288:	xor    BYTE PTR [rsi+0x1],ah
   14004b28b:	add    BYTE PTR [rax+0x30000261],ch
   14004b291:	add    WORD PTR [rax],ax
   14004b294:	rex.WRXB
   14004b295:	add    WORD PTR [rax],ax
   14004b298:	test   al,0x61
   14004b29a:	add    al,BYTE PTR [rax]
   14004b29c:	push   rax
   14004b29d:	add    WORD PTR [rax],ax
   14004b2a0:	ins    BYTE PTR es:[rdi],dx
   14004b2a1:	add    WORD PTR [rax],ax
   14004b2a4:	test   al,0x61
   14004b2a6:	add    al,BYTE PTR [rax]
   14004b2a8:	jo     0x14004b310
   14004b2aa:	add    DWORD PTR [rax],eax
   14004b2ac:	mov    esp,DWORD PTR [rsi+0x1]
   14004b2af:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004b2b5:	add    WORD PTR [rax],ax
   14004b2b8:	lods   al,BYTE PTR ds:[rsi]
   14004b2b9:	add    WORD PTR [rax],ax
   14004b2bc:	test   al,0x61
   14004b2be:	add    al,BYTE PTR [rax]
   14004b2c0:	mov    al,0x66
   14004b2c2:	add    DWORD PTR [rax],eax
   14004b2c4:	retf   
   14004b2c5:	add    WORD PTR [rax],ax
   14004b2c8:	test   al,0x61
   14004b2ca:	add    al,BYTE PTR [rax]
   14004b2cc:	shl    BYTE PTR [rsi+0x1],1
   14004b2cf:	add    al,dh
   14004b2d1:	add    WORD PTR [rax],ax
   14004b2d4:	test   al,0x61
   14004b2d6:	add    al,BYTE PTR [rax]
   14004b2d8:	lock add WORD PTR [rax],ax
   14004b2dc:	adc    BYTE PTR [rdi+0x1],ah
   14004b2df:	add    BYTE PTR [rax+0x10000261],ch
   14004b2e5:	add    DWORD PTR [eax],eax
   14004b2e8:	xor    BYTE PTR [rdi+0x1],ah
   14004b2eb:	add    BYTE PTR [rax+0x30000261],ch
   14004b2f1:	add    DWORD PTR [eax],eax
   14004b2f4:	rex.WRXB
   14004b2f5:	add    DWORD PTR [eax],eax
   14004b2f8:	test   al,0x61
   14004b2fa:	add    al,BYTE PTR [rax]
   14004b2fc:	push   rax
   14004b2fd:	add    DWORD PTR [eax],eax
   14004b300:	jo     0x14004b369
   14004b302:	add    DWORD PTR [rax],eax
   14004b304:	test   al,0x61
   14004b306:	add    al,BYTE PTR [rax]
   14004b308:	jo     0x14004b371
   14004b30a:	add    DWORD PTR [rax],eax
   14004b30c:	nop
   14004b30d:	add    DWORD PTR [eax],eax
   14004b310:	test   al,0x61
   14004b312:	add    al,BYTE PTR [rax]
   14004b314:	nop
   14004b315:	add    DWORD PTR [eax],eax
   14004b318:	mov    al,0x67
   14004b31a:	add    DWORD PTR [rax],eax
   14004b31c:	test   al,0x61
   14004b31e:	add    al,BYTE PTR [rax]
   14004b320:	mov    al,0x67
   14004b322:	add    DWORD PTR [rax],eax
   14004b324:	iret   
   14004b325:	add    DWORD PTR [eax],eax
   14004b328:	test   al,0x61
   14004b32a:	add    al,BYTE PTR [rax]
   14004b32c:	shl    BYTE PTR [rdi+0x1],1
   14004b32f:	add    ch,ch
   14004b331:	add    DWORD PTR [eax],eax
   14004b334:	test   al,0x61
   14004b336:	add    al,BYTE PTR [rax]
   14004b338:	lock add DWORD PTR [eax],eax
   14004b33c:	or     eax,0xa8000168
   14004b341:	(bad)  
   14004b342:	add    al,BYTE PTR [rax]
   14004b344:	adc    BYTE PTR [rax+0x1],ch
   14004b347:	add    BYTE PTR [rip+0xffffffffa8000168],ch        # 0xe804b4b5
   14004b34d:	(bad)  
   14004b34e:	add    al,BYTE PTR [rax]
   14004b350:	xor    BYTE PTR [rax+0x1],ch
   14004b353:	add    BYTE PTR [rax+rbp*2+0x1],cl
   14004b357:	add    BYTE PTR [rax+0x50000261],ch
   14004b35d:	push   0x686b0001
   14004b362:	add    DWORD PTR [rax],eax
   14004b364:	test   al,0x61
   14004b366:	add    al,BYTE PTR [rax]
   14004b368:	jo     0x14004b3d2
   14004b36a:	add    DWORD PTR [rax],eax
   14004b36c:	nop
   14004b36d:	push   0x61a80001
   14004b372:	add    al,BYTE PTR [rax]
   14004b374:	nop
   14004b375:	push   0x68b00001
   14004b37a:	add    DWORD PTR [rax],eax
   14004b37c:	test   al,0x61
   14004b37e:	add    al,BYTE PTR [rax]
   14004b380:	mov    al,0x68
   14004b382:	add    DWORD PTR [rax],eax
   14004b384:	shr    BYTE PTR [rax+0x1],1
   14004b387:	add    BYTE PTR [rax-0x2ffffd9f],ch
   14004b38d:	push   0x68ef0001
   14004b392:	add    DWORD PTR [rax],eax
   14004b394:	test   al,0x61
   14004b396:	add    al,BYTE PTR [rax]
   14004b398:	lock push 0x690b0001
   14004b39e:	add    DWORD PTR [rax],eax
   14004b3a0:	test   al,0x61
   14004b3a2:	add    al,BYTE PTR [rax]
   14004b3a4:	adc    BYTE PTR [rcx+0x1],ch
   14004b3a7:	add    BYTE PTR [rcx+rbp*2],ch
   14004b3aa:	add    DWORD PTR [rax],eax
   14004b3ac:	test   al,0x61
   14004b3ae:	add    al,BYTE PTR [rax]
   14004b3b0:	xor    BYTE PTR [rcx+0x1],ch
   14004b3b3:	add    BYTE PTR [rbx+0x69],cl
   14004b3b6:	add    DWORD PTR [rax],eax
   14004b3b8:	test   al,0x61
   14004b3ba:	add    al,BYTE PTR [rax]
   14004b3bc:	push   rax
   14004b3bd:	imul   eax,DWORD PTR [rcx],0x1696c00
   14004b3c3:	add    BYTE PTR [rax+0x70000261],ch
   14004b3c9:	imul   eax,DWORD PTR [rcx],0x1699000
   14004b3cf:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004b3d5:	imul   eax,DWORD PTR [rcx],0x169b000
   14004b3db:	add    BYTE PTR [rax-0x4ffffd9f],ch
   14004b3e1:	imul   eax,DWORD PTR [rcx],0x169d000
   14004b3e7:	add    BYTE PTR [rax-0x2ffffd9f],ch
   14004b3ed:	imul   eax,DWORD PTR [rcx],0x169ef00
   14004b3f3:	add    BYTE PTR [rax-0xffffd9f],ch
   14004b3f9:	imul   eax,DWORD PTR [rcx],0x16a1000
   14004b3ff:	add    BYTE PTR [rax+0x10000261],ch
   14004b405:	push   0x1
   14004b407:	add    BYTE PTR [rax],dh
   14004b409:	push   0x1
   14004b40b:	add    BYTE PTR [rax+0x30000261],ch
   14004b411:	push   0x1
   14004b413:	add    BYTE PTR [rax+0x6a],dl
   14004b416:	add    DWORD PTR [rax],eax
   14004b418:	test   al,0x61
   14004b41a:	add    al,BYTE PTR [rax]
   14004b41c:	push   rax
   14004b41d:	push   0x1
   14004b41f:	add    BYTE PTR [rdi+0x6a],ch
   14004b422:	add    DWORD PTR [rax],eax
   14004b424:	test   al,0x61
   14004b426:	add    al,BYTE PTR [rax]
   14004b428:	jo     0x14004b494
   14004b42a:	add    DWORD PTR [rax],eax
   14004b42c:	nop
   14004b42d:	push   0x1
   14004b42f:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004b435:	push   0x1
   14004b437:	add    BYTE PTR [rax-0x57fffe96],dh
   14004b43d:	(bad)  
   14004b43e:	add    al,BYTE PTR [rax]
   14004b440:	mov    al,0x6a
   14004b442:	add    DWORD PTR [rax],eax
   14004b444:	shr    BYTE PTR [rdx+0x1],1
   14004b447:	add    BYTE PTR [rax-0x2ffffd9f],ch
   14004b44d:	push   0x1
   14004b44f:	add    bh,ch
   14004b451:	push   0x1
   14004b453:	add    BYTE PTR [rax-0xffffd9f],ch
   14004b459:	push   0x1
   14004b45b:	add    BYTE PTR [rcx],cl
   14004b45d:	imul   eax,DWORD PTR [rcx],0x0
   14004b460:	test   al,0x61
   14004b462:	add    al,BYTE PTR [rax]
   14004b464:	adc    BYTE PTR [rbx+0x1],ch
   14004b467:	add    BYTE PTR [rcx],ch
   14004b469:	imul   eax,DWORD PTR [rcx],0x0
   14004b46c:	test   al,0x61
   14004b46e:	add    al,BYTE PTR [rax]
   14004b470:	xor    BYTE PTR [rbx+0x1],ch
   14004b473:	add    BYTE PTR [rcx+0x6b],cl
   14004b476:	add    DWORD PTR [rax],eax
   14004b478:	test   al,0x61
   14004b47a:	add    al,BYTE PTR [rax]
   14004b47c:	push   rax
   14004b47d:	imul   eax,DWORD PTR [rcx],0x0
   14004b480:	imul   ebp,DWORD PTR [rbx+0x1],0x261a800
   14004b487:	add    BYTE PTR [rax+0x6b],dh
   14004b48a:	add    DWORD PTR [rax],eax
   14004b48c:	mov    DWORD PTR [rbx+0x1],ebp
   14004b48f:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004b495:	imul   eax,DWORD PTR [rcx],0x0
   14004b498:	test   eax,0xa800016b
   14004b49d:	(bad)  
   14004b49e:	add    al,BYTE PTR [rax]
   14004b4a0:	mov    al,0x6b
   14004b4a2:	add    DWORD PTR [rax],eax
   14004b4a4:	leave  
   14004b4a5:	imul   eax,DWORD PTR [rcx],0x0
   14004b4a8:	test   al,0x61
   14004b4aa:	add    al,BYTE PTR [rax]
   14004b4ac:	shr    BYTE PTR [rbx+0x1],1
   14004b4af:	add    cl,ch
   14004b4b1:	imul   eax,DWORD PTR [rcx],0x0
   14004b4b4:	test   al,0x61
   14004b4b6:	add    al,BYTE PTR [rax]
   14004b4b8:	lock imul eax,DWORD PTR [rcx],0x0
   14004b4bc:	or     DWORD PTR [rcx+rax*1+0x0],ebp
   14004b4c0:	test   al,0x61
   14004b4c2:	add    al,BYTE PTR [rax]
   14004b4c4:	adc    BYTE PTR [rcx+rax*1+0x0],ch
   14004b4c8:	sub    DWORD PTR [rcx+rax*1+0x0],ebp
   14004b4cc:	test   al,0x61
   14004b4ce:	add    al,BYTE PTR [rax]
   14004b4d0:	xor    BYTE PTR [rcx+rax*1+0x0],ch
   14004b4d4:	rex.WB ins BYTE PTR es:[rdi],dx
   14004b4d6:	add    DWORD PTR [rax],eax
   14004b4d8:	test   al,0x61
   14004b4da:	add    al,BYTE PTR [rax]
   14004b4dc:	push   rax
   14004b4dd:	ins    BYTE PTR es:[rdi],dx
   14004b4de:	add    DWORD PTR [rax],eax
   14004b4e0:	imul   ebp,DWORD PTR [rcx+rax*1+0x0],0x261a8
   14004b4e8:	jo     0x14004b556
   14004b4ea:	add    DWORD PTR [rax],eax
   14004b4ec:	mov    DWORD PTR [rcx+rax*1+0x0],ebp
   14004b4f0:	test   al,0x61
   14004b4f2:	add    al,BYTE PTR [rax]
   14004b4f4:	nop
   14004b4f5:	ins    BYTE PTR es:[rdi],dx
   14004b4f6:	add    DWORD PTR [rax],eax
   14004b4f8:	test   eax,0xa800016c
   14004b4fd:	(bad)  
   14004b4fe:	add    al,BYTE PTR [rax]
   14004b500:	mov    al,0x6c
   14004b502:	add    DWORD PTR [rax],eax
   14004b504:	leave  
   14004b505:	ins    BYTE PTR es:[rdi],dx
   14004b506:	add    DWORD PTR [rax],eax
   14004b508:	test   al,0x61
   14004b50a:	add    al,BYTE PTR [rax]
   14004b50c:	shr    BYTE PTR [rcx+rax*1+0x0],1
   14004b510:	jmp    0xe804b681
   14004b515:	(bad)  
   14004b516:	add    al,BYTE PTR [rax]
   14004b518:	lock ins BYTE PTR es:[rdi],dx
   14004b51a:	add    DWORD PTR [rax],eax
   14004b51c:	(bad)  
   14004b51d:	ins    DWORD PTR es:[rdi],dx
   14004b51e:	add    DWORD PTR [rax],eax
   14004b520:	test   al,0x61
   14004b522:	add    al,BYTE PTR [rax]
   14004b524:	and    BYTE PTR [rbp+0x1],ch
   14004b527:	add    BYTE PTR [rax+0x6d],dl
   14004b52a:	add    DWORD PTR [rax],eax
   14004b52c:	test   al,0x61
   14004b52e:	add    al,BYTE PTR [rax]
   14004b530:	push   rax
   14004b531:	ins    DWORD PTR es:[rdi],dx
   14004b532:	add    DWORD PTR [rax],eax
   14004b534:	imul   ebp,DWORD PTR [rbp+0x1],0x261a800
   14004b53b:	add    BYTE PTR [rax+0x6d],dh
   14004b53e:	add    DWORD PTR [rax],eax
   14004b540:	mov    DWORD PTR [rbp+0x1],ebp
   14004b543:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004b549:	ins    DWORD PTR es:[rdi],dx
   14004b54a:	add    DWORD PTR [rax],eax
   14004b54c:	lods   al,BYTE PTR ds:[rsi]
   14004b54d:	ins    DWORD PTR es:[rdi],dx
   14004b54e:	add    DWORD PTR [rax],eax
   14004b550:	test   al,0x61
   14004b552:	add    al,BYTE PTR [rax]
   14004b554:	mov    al,0x6d
   14004b556:	add    DWORD PTR [rax],eax
   14004b558:	int3   
   14004b559:	ins    DWORD PTR es:[rdi],dx
   14004b55a:	add    DWORD PTR [rax],eax
   14004b55c:	test   al,0x61
   14004b55e:	add    al,BYTE PTR [rax]
   14004b560:	shr    BYTE PTR [rbp+0x1],1
   14004b563:	add    cl,ch
   14004b565:	ins    DWORD PTR es:[rdi],dx
   14004b566:	add    DWORD PTR [rax],eax
   14004b568:	test   al,0x61
   14004b56a:	add    al,BYTE PTR [rax]
   14004b56c:	lock ins DWORD PTR es:[rdi],dx
   14004b56e:	add    DWORD PTR [rax],eax
   14004b570:	or     DWORD PTR [rsi+0x1],ebp
   14004b573:	add    BYTE PTR [rax+0x10000261],ch
   14004b579:	outs   dx,BYTE PTR ds:[rsi]
   14004b57a:	add    DWORD PTR [rax],eax
   14004b57c:	rex outs dx,BYTE PTR ds:[rsi]
   14004b57e:	add    DWORD PTR [rax],eax
   14004b580:	test   al,0x61
   14004b582:	add    al,BYTE PTR [rax]
   14004b584:	rex outs dx,BYTE PTR ds:[rsi]
   14004b586:	add    DWORD PTR [rax],eax
   14004b588:	pop    rcx
   14004b589:	outs   dx,BYTE PTR ds:[rsi]
   14004b58a:	add    DWORD PTR [rax],eax
   14004b58c:	test   al,0x61
   14004b58e:	add    al,BYTE PTR [rax]
   14004b590:	(bad)  
   14004b591:	outs   dx,BYTE PTR ds:[rsi]
   14004b592:	add    DWORD PTR [rax],eax
   14004b594:	jns    0x14004b604
   14004b596:	add    DWORD PTR [rax],eax
   14004b598:	test   al,0x61
   14004b59a:	add    al,BYTE PTR [rax]
   14004b59c:	sub    BYTE PTR [rsi+0x1],0x0
   14004b5a0:	pushf  
   14004b5a1:	outs   dx,BYTE PTR ds:[rsi]
   14004b5a2:	add    DWORD PTR [rax],eax
   14004b5a4:	test   al,0x61
   14004b5a6:	add    al,BYTE PTR [rax]
   14004b5a8:	movabs al,ds:0xa800016eb900016e
   14004b5b1:	(bad)  
   14004b5b2:	add    al,BYTE PTR [rax]
   14004b5b4:	shr    BYTE PTR [rsi+0x1],0x0
   14004b5b8:	fldcw  WORD PTR [rsi+0x1]
   14004b5bb:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004b5c1:	outs   dx,BYTE PTR ds:[rsi]
   14004b5c2:	add    DWORD PTR [rax],eax
   14004b5c4:	std    
   14004b5c5:	outs   dx,BYTE PTR ds:[rsi]
   14004b5c6:	add    DWORD PTR [rax],eax
   14004b5c8:	test   al,0x61
   14004b5ca:	add    al,BYTE PTR [rax]
   14004b5cc:	add    BYTE PTR [rdi+0x1],ch
   14004b5cf:	add    BYTE PTR [rip+0xffffffffa800016f],bl        # 0xe804b744
   14004b5d5:	(bad)  
   14004b5d6:	add    al,BYTE PTR [rax]
   14004b5d8:	and    BYTE PTR [rdi+0x1],ch
   14004b5db:	add    BYTE PTR [rip+0xffffffffa800016f],bh        # 0xe804b750
   14004b5e1:	(bad)  
   14004b5e2:	add    al,BYTE PTR [rax]
   14004b5e4:	rex outs dx,DWORD PTR ds:[rsi]
   14004b5e6:	add    DWORD PTR [rax],eax
   14004b5e8:	pop    rbp
   14004b5e9:	outs   dx,DWORD PTR ds:[rsi]
   14004b5ea:	add    DWORD PTR [rax],eax
   14004b5ec:	test   al,0x61
   14004b5ee:	add    al,BYTE PTR [rax]
   14004b5f0:	(bad)  
   14004b5f1:	outs   dx,DWORD PTR ds:[rsi]
   14004b5f2:	add    DWORD PTR [rax],eax
   14004b5f4:	jge    0x14004b665
   14004b5f6:	add    DWORD PTR [rax],eax
   14004b5f8:	test   al,0x61
   14004b5fa:	add    al,BYTE PTR [rax]
   14004b5fc:	sub    BYTE PTR [rdi+0x1],0x0
   14004b600:	pushf  
   14004b601:	outs   dx,DWORD PTR ds:[rsi]
   14004b602:	add    DWORD PTR [rax],eax
   14004b604:	test   al,0x61
   14004b606:	add    al,BYTE PTR [rax]
   14004b608:	movabs al,ds:0xa800016fbd00016f
   14004b611:	(bad)  
   14004b612:	add    al,BYTE PTR [rax]
   14004b614:	shr    BYTE PTR [rdi+0x1],0x0
   14004b618:	fldcw  WORD PTR [rdi+0x1]
   14004b61b:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004b621:	outs   dx,DWORD PTR ds:[rsi]
   14004b622:	add    DWORD PTR [rax],eax
   14004b624:	stc    
   14004b625:	outs   dx,DWORD PTR ds:[rsi]
   14004b626:	add    DWORD PTR [rax],eax
   14004b628:	test   al,0x61
   14004b62a:	add    al,BYTE PTR [rax]
   14004b62c:	add    BYTE PTR [rax+0x1],dh
   14004b62f:	add    BYTE PTR [rcx],bl
   14004b631:	jo     0x14004b634
   14004b633:	add    BYTE PTR [rax+0x20000261],ch
   14004b639:	jo     0x14004b63c
   14004b63b:	add    BYTE PTR [rcx],bh
   14004b63d:	jo     0x14004b640
   14004b63f:	add    BYTE PTR [rax+0x40000261],ch
   14004b645:	jo     0x14004b648
   14004b647:	add    BYTE PTR [rcx+0x70],bl
   14004b64a:	add    DWORD PTR [rax],eax
   14004b64c:	test   al,0x61
   14004b64e:	add    al,BYTE PTR [rax]
   14004b650:	(bad)  
   14004b651:	jo     0x14004b654
   14004b653:	add    BYTE PTR [rcx+0x70],bh
   14004b656:	add    DWORD PTR [rax],eax
   14004b658:	test   al,0x61
   14004b65a:	add    al,BYTE PTR [rax]
   14004b65c:	xor    BYTE PTR [rax+0x1],0x0
   14004b660:	cdq    
   14004b661:	jo     0x14004b664
   14004b663:	add    BYTE PTR [rax-0x5ffffd9f],ch
   14004b669:	jo     0x14004b66c
   14004b66b:	add    BYTE PTR [rcx-0x57fffe90],bh
   14004b671:	(bad)  
   14004b672:	add    al,BYTE PTR [rax]
   14004b674:	shl    BYTE PTR [rax+0x1],0x0
   14004b678:	fnstenv [rax+0x1]
   14004b67b:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004b681:	jo     0x14004b684
   14004b683:	add    BYTE PTR [rdi],al
   14004b685:	jno    0x14004b688
   14004b687:	add    BYTE PTR [rax+0x10000261],ch
   14004b68d:	jno    0x14004b690
   14004b68f:	add    BYTE PTR [rcx],ch
   14004b691:	jno    0x14004b694
   14004b693:	add    BYTE PTR [rax+0x30000261],ch
   14004b699:	jno    0x14004b69c
   14004b69b:	add    BYTE PTR [rcx+0x71],cl
   14004b69e:	add    DWORD PTR [rax],eax
   14004b6a0:	test   al,0x61
   14004b6a2:	add    al,BYTE PTR [rax]
   14004b6a4:	push   rax
   14004b6a5:	jno    0x14004b6a8
   14004b6a7:	add    BYTE PTR [rcx+0x71],ch
   14004b6aa:	add    DWORD PTR [rax],eax
   14004b6ac:	test   al,0x61
   14004b6ae:	add    al,BYTE PTR [rax]
   14004b6b0:	jo     0x14004b723
   14004b6b2:	add    DWORD PTR [rax],eax
   14004b6b4:	mov    DWORD PTR [rcx+0x1],esi
   14004b6b7:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004b6bd:	jno    0x14004b6c0
   14004b6bf:	add    BYTE PTR [rcx-0x57fffe8f],ch
   14004b6c5:	(bad)  
   14004b6c6:	add    al,BYTE PTR [rax]
   14004b6c8:	mov    al,0x71
   14004b6ca:	add    DWORD PTR [rax],eax
   14004b6cc:	leave  
   14004b6cd:	jno    0x14004b6d0
   14004b6cf:	add    BYTE PTR [rax-0x2ffffd9f],ch
   14004b6d5:	jno    0x14004b6d8
   14004b6d7:	add    cl,ch
   14004b6d9:	jno    0x14004b6dc
   14004b6db:	add    BYTE PTR [rax-0xffffd9f],ch
   14004b6e1:	jno    0x14004b6e4
   14004b6e3:	add    BYTE PTR [rcx],cl
   14004b6e5:	jb     0x14004b6e8
   14004b6e7:	add    BYTE PTR [rax+0x10000261],ch
   14004b6ed:	jb     0x14004b6f0
   14004b6ef:	add    BYTE PTR [rcx],ch
   14004b6f1:	jb     0x14004b6f4
   14004b6f3:	add    BYTE PTR [rax+0x30000261],ch
   14004b6f9:	jb     0x14004b6fc
   14004b6fb:	add    BYTE PTR [rcx+0x72],cl
   14004b6fe:	add    DWORD PTR [rax],eax
   14004b700:	test   al,0x61
   14004b702:	add    al,BYTE PTR [rax]
   14004b704:	push   rax
   14004b705:	jb     0x14004b708
   14004b707:	add    BYTE PTR [rax+0x72],ch
   14004b70a:	add    DWORD PTR [rax],eax
   14004b70c:	test   al,0x61
   14004b70e:	add    al,BYTE PTR [rax]
   14004b710:	jo     0x14004b784
   14004b712:	add    DWORD PTR [rax],eax
   14004b714:	mov    DWORD PTR [rdx+0x1],esi
   14004b717:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004b71d:	jb     0x14004b720
   14004b71f:	add    BYTE PTR [rax-0x57fffe8e],ch
   14004b725:	(bad)  
   14004b726:	add    al,BYTE PTR [rax]
   14004b728:	mov    al,0x72
   14004b72a:	add    DWORD PTR [rax],eax
   14004b72c:	int    0x72
   14004b72e:	add    DWORD PTR [rax],eax
   14004b730:	test   al,0x61
   14004b732:	add    al,BYTE PTR [rax]
   14004b734:	shl    BYTE PTR [rdx+0x1],1
   14004b737:	add    ch,ch
   14004b739:	jb     0x14004b73c
   14004b73b:	add    BYTE PTR [rax-0xffffd9f],ch
   14004b741:	jb     0x14004b744
   14004b743:	add    BYTE PTR [rip+0xffffffffa8000173],cl        # 0xe804b8bc
   14004b749:	(bad)  
   14004b74a:	add    al,BYTE PTR [rax]
   14004b74c:	adc    BYTE PTR [rbx+0x1],dh
   14004b74f:	add    BYTE PTR [rbx+rsi*2],ch
   14004b752:	add    DWORD PTR [rax],eax
   14004b754:	test   al,0x61
   14004b756:	add    al,BYTE PTR [rax]
   14004b758:	xor    BYTE PTR [rbx+0x1],dh
   14004b75b:	add    BYTE PTR [rax+0x73],cl
   14004b75e:	add    DWORD PTR [rax],eax
   14004b760:	test   al,0x61
   14004b762:	add    al,BYTE PTR [rax]
   14004b764:	push   rax
   14004b765:	jae    0x14004b768
   14004b767:	add    BYTE PTR [rcx+0x73],ch
   14004b76a:	add    DWORD PTR [rax],eax
   14004b76c:	test   al,0x61
   14004b76e:	add    al,BYTE PTR [rax]
   14004b770:	jo     0x14004b7e5
   14004b772:	add    DWORD PTR [rax],eax
   14004b774:	mov    esi,DWORD PTR [rbx+0x1]
   14004b777:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004b77d:	jae    0x14004b780
   14004b77f:	add    BYTE PTR [rax-0x57fffe8d],dh
   14004b785:	(bad)  
   14004b786:	add    al,BYTE PTR [rax]
   14004b788:	mov    al,0x73
   14004b78a:	add    DWORD PTR [rax],eax
   14004b78c:	shl    BYTE PTR [rbx+0x1],1
   14004b78f:	add    BYTE PTR [rax-0x2ffffd9f],ch
   14004b795:	jae    0x14004b798
   14004b797:	add    al,dh
   14004b799:	jae    0x14004b79c
   14004b79b:	add    BYTE PTR [rax-0xffffd9f],ch
   14004b7a1:	jae    0x14004b7a4
   14004b7a3:	add    BYTE PTR [rdi],cl
   14004b7a5:	je     0x14004b7a8
   14004b7a7:	add    BYTE PTR [rax+0x10000261],ch
   14004b7ad:	je     0x14004b7b0
   14004b7af:	add    BYTE PTR [rsp+rsi*2],bh
   14004b7b2:	add    DWORD PTR [rax],eax
   14004b7b4:	test   al,0x61
   14004b7b6:	add    al,BYTE PTR [rax]
   14004b7b8:	rex je 0x14004b7bc
   14004b7bb:	add    BYTE PTR [rdi+0x74],ch
   14004b7be:	add    DWORD PTR [rax],eax
   14004b7c0:	test   al,0x61
   14004b7c2:	add    al,BYTE PTR [rax]
   14004b7c4:	jo     0x14004b83a
   14004b7c6:	add    DWORD PTR [rax],eax
   14004b7c8:	lea    esi,[rcx+rax*1+0x0]
   14004b7cc:	test   al,0x61
   14004b7ce:	add    al,BYTE PTR [rax]
   14004b7d0:	nop
   14004b7d1:	je     0x14004b7d4
   14004b7d3:	add    BYTE PTR [rbp-0x57fffe8c],ch
   14004b7d9:	(bad)  
   14004b7da:	add    al,BYTE PTR [rax]
   14004b7dc:	mov    al,0x74
   14004b7de:	add    DWORD PTR [rax],eax
   14004b7e0:	int    0x74
   14004b7e2:	add    DWORD PTR [rax],eax
   14004b7e4:	test   al,0x61
   14004b7e6:	add    al,BYTE PTR [rax]
   14004b7e8:	shl    BYTE PTR [rcx+rax*1+0x0],1
   14004b7ec:	in     al,dx
   14004b7ed:	je     0x14004b7f0
   14004b7ef:	add    BYTE PTR [rax-0xffffd9f],ch
   14004b7f5:	je     0x14004b7f8
   14004b7f7:	add    BYTE PTR [rax],cl
   14004b7f9:	jne    0x14004b7fc
   14004b7fb:	add    BYTE PTR [rax+0x10000261],ch
   14004b801:	jne    0x14004b804
   14004b803:	add    BYTE PTR [rcx],ch
   14004b805:	jne    0x14004b808
   14004b807:	add    BYTE PTR [rax+0x30000261],ch
   14004b80d:	jne    0x14004b810
   14004b80f:	add    BYTE PTR [rbp+0x75],cl
   14004b812:	add    DWORD PTR [rax],eax
   14004b814:	test   al,0x61
   14004b816:	add    al,BYTE PTR [rax]
   14004b818:	push   rax
   14004b819:	jne    0x14004b81c
   14004b81b:	add    BYTE PTR [rbp+0x75],ch
   14004b81e:	add    DWORD PTR [rax],eax
   14004b820:	test   al,0x61
   14004b822:	add    al,BYTE PTR [rax]
   14004b824:	jo     0x14004b89b
   14004b826:	add    DWORD PTR [rax],eax
   14004b828:	lea    esi,[rbp+0x1]
   14004b82b:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004b831:	jne    0x14004b834
   14004b833:	add    BYTE PTR [rbp+rsi*2+0x61a80001],ch
   14004b83a:	add    al,BYTE PTR [rax]
   14004b83c:	mov    al,0x75
   14004b83e:	add    DWORD PTR [rax],eax
   14004b840:	int    0x75
   14004b842:	add    DWORD PTR [rax],eax
   14004b844:	test   al,0x61
   14004b846:	add    al,BYTE PTR [rax]
   14004b848:	shl    BYTE PTR [rbp+0x1],1
   14004b84b:	add    ch,ch
   14004b84d:	jne    0x14004b850
   14004b84f:	add    BYTE PTR [rax-0xffffd9f],ch
   14004b855:	jne    0x14004b858
   14004b857:	add    BYTE PTR [rip+0xffffffffa8000176],cl        # 0xe804b9d3
   14004b85d:	(bad)  
   14004b85e:	add    al,BYTE PTR [rax]
   14004b860:	adc    BYTE PTR [rsi+0x1],dh
   14004b863:	add    BYTE PTR [rsi+rsi*2],ch
   14004b866:	add    DWORD PTR [rax],eax
   14004b868:	test   al,0x61
   14004b86a:	add    al,BYTE PTR [rax]
   14004b86c:	xor    BYTE PTR [rsi+0x1],dh
   14004b86f:	add    BYTE PTR [rax+0x76],cl
   14004b872:	add    DWORD PTR [rax],eax
   14004b874:	test   al,0x61
   14004b876:	add    al,BYTE PTR [rax]
   14004b878:	push   rax
   14004b879:	jbe    0x14004b87c
   14004b87b:	add    BYTE PTR [rax+0x76],dh
   14004b87e:	add    DWORD PTR [rax],eax
   14004b880:	test   al,0x61
   14004b882:	add    al,BYTE PTR [rax]
   14004b884:	jo     0x14004b8fc
   14004b886:	add    DWORD PTR [rax],eax
   14004b888:	popf   
   14004b889:	jbe    0x14004b88c
   14004b88b:	add    BYTE PTR [rsp+rdi*1+0x2],cl
   14004b88f:	add    BYTE PTR [rax-0x33fffe8a],ah
   14004b895:	jbe    0x14004b898
   14004b897:	add    BYTE PTR [rsp+rdi*1+0x2],cl
   14004b89b:	add    al,dl
   14004b89d:	jbe    0x14004b8a0
   14004b89f:	add    al,dh
   14004b8a1:	jbe    0x14004b8a4
   14004b8a3:	add    BYTE PTR [rax-0xffffd9f],ch
   14004b8a9:	jbe    0x14004b8ac
   14004b8ab:	add    BYTE PTR [rsi],cl
   14004b8ad:	ja     0x14004b8b0
   14004b8af:	add    BYTE PTR [rax+0x3d],al
   14004b8b2:	add    al,BYTE PTR [rax]
   14004b8b4:	adc    BYTE PTR [rdi+0x1],dh
   14004b8b7:	add    BYTE PTR [rdi+rsi*2],bh
   14004b8ba:	add    DWORD PTR [rax],eax
   14004b8bc:	rex cmp eax,0x77400002
   14004b8c2:	add    DWORD PTR [rax],eax
   14004b8c4:	pop    rax
   14004b8c5:	ja     0x14004b8c8
   14004b8c7:	add    BYTE PTR [rax+0x60000261],ch
   14004b8cd:	ja     0x14004b8d0
   14004b8cf:	add    BYTE PTR [rdi+rsi*2+0x3e800001],dl
   14004b8d6:	add    al,BYTE PTR [rax]
   14004b8d8:	movabs al,ds:0x80000177f4000177
   14004b8e1:	add    al,BYTE PTR ds:[rax]
   14004b8e4:	add    BYTE PTR [rax+0x1],bh
   14004b8e7:	add    BYTE PTR [rax],ch
   14004b8e9:	js     0x14004b8ec
   14004b8eb:	add    BYTE PTR [rax+0x3f],ch
   14004b8ee:	add    al,BYTE PTR [rax]
   14004b8f0:	xor    BYTE PTR [rax+0x1],bh
   14004b8f3:	add    BYTE PTR [rax+0x78],bl
   14004b8f6:	add    DWORD PTR [rax],eax
   14004b8f8:	push   0x6000023f
   14004b8fd:	js     0x14004b900
   14004b8ff:	add    BYTE PTR [rsi-0x57fffe88],al
   14004b905:	(bad)  
   14004b906:	add    al,BYTE PTR [rax]
   14004b908:	nop
   14004b909:	js     0x14004b90c
   14004b90b:	add    BYTE PTR [rsi-0x57fffe88],dh
   14004b911:	(bad)  
   14004b912:	add    al,BYTE PTR [rax]
   14004b914:	sar    BYTE PTR [rax+0x1],0x0
   14004b918:	fnstcw WORD PTR [rax+0x1]
   14004b91b:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004b921:	js     0x14004b924
   14004b923:	add    al,bh
   14004b925:	js     0x14004b928
   14004b927:	add    BYTE PTR [rax+0x261],ch
   14004b92d:	jns    0x14004b930
   14004b92f:	add    BYTE PTR [rdi],ah
   14004b931:	jns    0x14004b934
   14004b933:	add    BYTE PTR [rax+0x30000261],ch
   14004b939:	jns    0x14004b93c
   14004b93b:	add    BYTE PTR [rdx+0x79],bl
   14004b93e:	add    DWORD PTR [rax],eax
   14004b940:	test   al,0x61
   14004b942:	add    al,BYTE PTR [rax]
   14004b944:	(bad)  
   14004b945:	jns    0x14004b948
   14004b947:	add    BYTE PTR [rcx+rdi*2+0x1],bh
   14004b94b:	add    BYTE PTR [rax-0x7ffffd9f],ch
   14004b951:	jns    0x14004b954
   14004b953:	add    BYTE PTR [rcx-0x57fffe87],bl
   14004b959:	(bad)  
   14004b95a:	add    al,BYTE PTR [rax]
   14004b95c:	movabs al,ds:0xa8000179b9000179
   14004b965:	(bad)  
   14004b966:	add    al,BYTE PTR [rax]
   14004b968:	sar    BYTE PTR [rcx+0x1],0x0
   14004b96c:	fnstcw WORD PTR [rcx+0x1]
   14004b96f:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004b975:	jns    0x14004b978
   14004b977:	add    al,bh
   14004b979:	jns    0x14004b97c
   14004b97b:	add    BYTE PTR [rax+0x261],ch
   14004b981:	jp     0x14004b984
   14004b983:	add    BYTE PTR [rdx+rdi*2],bl
   14004b986:	add    DWORD PTR [rax],eax
   14004b988:	test   al,0x61
   14004b98a:	add    al,BYTE PTR [rax]
   14004b98c:	and    BYTE PTR [rdx+0x1],bh
   14004b98f:	add    BYTE PTR [rdx+rdi*2],bh
   14004b992:	add    DWORD PTR [rax],eax
   14004b994:	test   al,0x61
   14004b996:	add    al,BYTE PTR [rax]
   14004b998:	rex jp 0x14004b99c
   14004b99b:	add    BYTE PTR [rdx+rdi*2+0x1],bl
   14004b99f:	add    BYTE PTR [rax+0x60000261],ch
   14004b9a5:	jp     0x14004b9a8
   14004b9a7:	add    BYTE PTR [rbx+0x7a],bh
   14004b9aa:	add    DWORD PTR [rax],eax
   14004b9ac:	test   al,0x61
   14004b9ae:	add    al,BYTE PTR [rax]
   14004b9b0:	cmp    BYTE PTR [rdx+0x1],0x0
   14004b9b4:	movabs al,ds:0xa0000261a800017a
   14004b9bd:	jp     0x14004b9c0
   14004b9bf:	add    al,al
   14004b9c1:	jp     0x14004b9c4
   14004b9c3:	add    BYTE PTR [rax-0x3ffffd9f],ch
   14004b9c9:	jp     0x14004b9cc
   14004b9cb:	add    al,ah
   14004b9cd:	jp     0x14004b9d0
   14004b9cf:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004b9d5:	jp     0x14004b9d8
   14004b9d7:	add    bh,bh
   14004b9d9:	jp     0x14004b9dc
   14004b9db:	add    BYTE PTR [rax+0x261],ch
   14004b9e1:	jnp    0x14004b9e4
   14004b9e3:	add    BYTE PTR [rax],bl
   14004b9e5:	jnp    0x14004b9e8
   14004b9e7:	add    BYTE PTR [rax+0x20000261],ch
   14004b9ed:	jnp    0x14004b9f0
   14004b9ef:	add    BYTE PTR [rbx+rdi*2],bh
   14004b9f2:	add    DWORD PTR [rax],eax
   14004b9f4:	test   al,0x61
   14004b9f6:	add    al,BYTE PTR [rax]
   14004b9f8:	rex jnp 0x14004b9fc
   14004b9fb:	add    BYTE PTR [rbx+rdi*2+0x1],bl
   14004b9ff:	add    BYTE PTR [rax+0x60000261],ch
   14004ba05:	jnp    0x14004ba08
   14004ba07:	add    BYTE PTR [rbx+rdi*2+0x1],bh
   14004ba0b:	add    BYTE PTR [rax-0x7ffffd9f],ch
   14004ba11:	jnp    0x14004ba14
   14004ba13:	add    BYTE PTR [rbx-0x57fffe85],bl
   14004ba19:	(bad)  
   14004ba1a:	add    al,BYTE PTR [rax]
   14004ba1c:	movabs al,ds:0xa800017bc000017b
   14004ba25:	(bad)  
   14004ba26:	add    al,BYTE PTR [rax]
   14004ba28:	sar    BYTE PTR [rbx+0x1],0x0
   14004ba2c:	loopne 0x14004baa9
   14004ba2e:	add    DWORD PTR [rax],eax
   14004ba30:	test   al,0x61
   14004ba32:	add    al,BYTE PTR [rax]
   14004ba34:	loopne 0x14004bab1
   14004ba36:	add    DWORD PTR [rax],eax
   14004ba38:	add    BYTE PTR [rcx+rax*1+0x0],bh
   14004ba3c:	test   al,0x61
   14004ba3e:	add    al,BYTE PTR [rax]
   14004ba40:	add    BYTE PTR [rcx+rax*1+0x0],bh
   14004ba44:	(bad)  
   14004ba45:	jl     0x14004ba48
   14004ba47:	add    BYTE PTR [rax+0x20000261],ch
   14004ba4d:	jl     0x14004ba50
   14004ba4f:	add    BYTE PTR [rcx],bh
   14004ba51:	jl     0x14004ba54
   14004ba53:	add    BYTE PTR [rax+0x40000261],ch
   14004ba59:	jl     0x14004ba5c
   14004ba5b:	add    BYTE PTR [rsp+rdi*2+0x1],bl
   14004ba5f:	add    BYTE PTR [rax+0x60000261],ch
   14004ba65:	jl     0x14004ba68
   14004ba67:	add    BYTE PTR [rsp+rdi*2+0x1],bh
   14004ba6b:	add    BYTE PTR [rax-0x7ffffd9f],ch
   14004ba71:	jl     0x14004ba74
   14004ba73:	add    BYTE PTR [rsp+rdi*2+0x61a80001],bl
   14004ba7a:	add    al,BYTE PTR [rax]
   14004ba7c:	movabs al,ds:0xa800017cbc00017c
   14004ba85:	(bad)  
   14004ba86:	add    al,BYTE PTR [rax]
   14004ba88:	sar    BYTE PTR [rcx+rax*1+0x0],0xdc
   14004ba8d:	jl     0x14004ba90
   14004ba8f:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004ba95:	jl     0x14004ba98
   14004ba97:	add    bl,bh
   14004ba99:	jl     0x14004ba9c
   14004ba9b:	add    BYTE PTR [rax+0x261],ch
   14004baa1:	jge    0x14004baa4
   14004baa3:	add    BYTE PTR [rax],ah
   14004baa5:	jge    0x14004baa8
   14004baa7:	add    BYTE PTR [rax+0x20000261],ch
   14004baad:	jge    0x14004bab0
   14004baaf:	add    BYTE PTR [rax+0x7d],al
   14004bab2:	add    DWORD PTR [rax],eax
   14004bab4:	test   al,0x61
   14004bab6:	add    al,BYTE PTR [rax]
   14004bab8:	rex jge 0x14004babc
   14004babb:	add    BYTE PTR [rax+0x7d],ah
   14004babe:	add    DWORD PTR [rax],eax
   14004bac0:	test   al,0x61
   14004bac2:	add    al,BYTE PTR [rax]
   14004bac4:	(bad)  
   14004bac5:	jge    0x14004bac8
   14004bac7:	add    BYTE PTR [rdi+0x7d],bh
   14004baca:	add    DWORD PTR [rax],eax
   14004bacc:	test   al,0x61
   14004bace:	add    al,BYTE PTR [rax]
   14004bad0:	cmp    BYTE PTR [rbp+0x1],0x0
   14004bad4:	pushf  
   14004bad5:	jge    0x14004bad8
   14004bad7:	add    BYTE PTR [rax-0x5ffffd9f],ch
   14004badd:	jge    0x14004bae0
   14004badf:	add    BYTE PTR [rbp+rdi*2+0x61a80001],bh
   14004bae6:	add    al,BYTE PTR [rax]
   14004bae8:	sar    BYTE PTR [rbp+0x1],0x0
   14004baec:	fdivr  QWORD PTR [rbp+0x1]
   14004baef:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004baf5:	jge    0x14004baf8
   14004baf7:	add    bl,bh
   14004baf9:	jge    0x14004bafc
   14004bafb:	add    BYTE PTR [rax+0x261],ch
   14004bb01:	jle    0x14004bb04
   14004bb03:	add    BYTE PTR [rax],ah
   14004bb05:	jle    0x14004bb08
   14004bb07:	add    BYTE PTR [rax+0x20000261],ch
   14004bb0d:	jle    0x14004bb10
   14004bb0f:	add    BYTE PTR [rax+0x7e],al
   14004bb12:	add    DWORD PTR [rax],eax
   14004bb14:	test   al,0x61
   14004bb16:	add    al,BYTE PTR [rax]
   14004bb18:	rex jle 0x14004bb1c
   14004bb1b:	add    BYTE PTR [rax+0x7e],ah
   14004bb1e:	add    DWORD PTR [rax],eax
   14004bb20:	test   al,0x61
   14004bb22:	add    al,BYTE PTR [rax]
   14004bb24:	(bad)  
   14004bb25:	jle    0x14004bb28
   14004bb27:	add    BYTE PTR [rdi+0x7e],bh
   14004bb2a:	add    DWORD PTR [rax],eax
   14004bb2c:	test   al,0x61
   14004bb2e:	add    al,BYTE PTR [rax]
   14004bb30:	cmp    BYTE PTR [rsi+0x1],0x0
   14004bb34:	cwde   
   14004bb35:	jle    0x14004bb38
   14004bb37:	add    BYTE PTR [rax-0x5ffffd9f],ch
   14004bb3d:	jle    0x14004bb40
   14004bb3f:	add    BYTE PTR [rbp-0x57fffe82],bh
   14004bb45:	(bad)  
   14004bb46:	add    al,BYTE PTR [rax]
   14004bb48:	sar    BYTE PTR [rsi+0x1],0x0
   14004bb4c:	fnstsw WORD PTR [rsi+0x1]
   14004bb4f:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004bb55:	jle    0x14004bb58
   14004bb57:	add    ch,bh
   14004bb59:	jle    0x14004bb5c
   14004bb5b:	add    BYTE PTR [rax+0x261],ch
   14004bb61:	jg     0x14004bb64
   14004bb63:	add    BYTE PTR [rdi+rdi*2],bl
   14004bb66:	add    DWORD PTR [rax],eax
   14004bb68:	test   al,0x61
   14004bb6a:	add    al,BYTE PTR [rax]
   14004bb6c:	and    BYTE PTR [rdi+0x1],bh
   14004bb6f:	add    BYTE PTR [rcx],bh
   14004bb71:	jg     0x14004bb74
   14004bb73:	add    BYTE PTR [rax+0x40000261],ch
   14004bb79:	jg     0x14004bb7c
   14004bb7b:	add    BYTE PTR [rdx+0x7f],ch
   14004bb7e:	add    DWORD PTR [rax],eax
   14004bb80:	test   al,0x61
   14004bb82:	add    al,BYTE PTR [rax]
   14004bb84:	jo     0x14004bc05
   14004bb86:	add    DWORD PTR [rax],eax
   14004bb88:	(bad)  
   14004bb89:	jg     0x14004bb8c
   14004bb8b:	add    BYTE PTR [rax-0x5ffffd9f],ch
   14004bb91:	jg     0x14004bb94
   14004bb93:	add    BYTE PTR [rdi+rdi*2+0x61a80001],bh
   14004bb9a:	add    al,BYTE PTR [rax]
   14004bb9c:	sar    BYTE PTR [rdi+0x1],0x0
   14004bba0:	fdivr  QWORD PTR [rdi+0x1]
   14004bba3:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004bba9:	jg     0x14004bbac
   14004bbab:	add    al,bh
   14004bbad:	jg     0x14004bbb0
   14004bbaf:	add    BYTE PTR [rax+0x261],ch
   14004bbb5:	add    BYTE PTR [rcx],0x0
   14004bbb8:	sbb    DWORD PTR [rax+0x61a80001],eax
   14004bbbe:	add    al,BYTE PTR [rax]
   14004bbc0:	and    BYTE PTR [rax-0x7fc6ffff],al
   14004bbc6:	add    DWORD PTR [rax],eax
   14004bbc8:	test   al,0x61
   14004bbca:	add    al,BYTE PTR [rax]
   14004bbcc:	rex add BYTE PTR [rcx],0x0
   14004bbd0:	pop    rsp
   14004bbd1:	add    BYTE PTR [rcx],0x0
   14004bbd4:	test   al,0x61
   14004bbd6:	add    al,BYTE PTR [rax]
   14004bbd8:	(bad)  
   14004bbd9:	add    BYTE PTR [rcx],0x0
   14004bbdc:	add    BYTE PTR [rax+0x61a80001],0x2
   14004bbe3:	add    BYTE PTR [rax-0x5ffffe80],al
   14004bbe9:	add    BYTE PTR [rcx],0x0
   14004bbec:	test   al,0x61
   14004bbee:	add    al,BYTE PTR [rax]
   14004bbf0:	movabs al,ds:0xa8000180c0000180
   14004bbf9:	(bad)  
   14004bbfa:	add    al,BYTE PTR [rax]
   14004bbfc:	rol    BYTE PTR [rax-0x7f20ffff],0x1
   14004bc03:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004bc09:	add    BYTE PTR [rcx],0x0
   14004bc0c:	or     al,BYTE PTR [rcx+0x61a80001]
   14004bc12:	add    al,BYTE PTR [rax]
   14004bc14:	adc    BYTE PTR [rcx-0x7ed3ffff],al
   14004bc1a:	add    DWORD PTR [rax],eax
   14004bc1c:	test   al,0x61
   14004bc1e:	add    al,BYTE PTR [rax]
   14004bc20:	xor    BYTE PTR [rcx-0x7eb3ffff],al
   14004bc26:	add    DWORD PTR [rax],eax
   14004bc28:	test   al,0x61
   14004bc2a:	add    al,BYTE PTR [rax]
   14004bc2c:	push   rax
   14004bc2d:	add    DWORD PTR [rcx],0x1817000
   14004bc33:	add    BYTE PTR [rax+0x70000261],ch
   14004bc39:	add    DWORD PTR [rcx],0x1819000
   14004bc3f:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004bc45:	add    DWORD PTR [rcx],0x181b000
   14004bc4b:	add    BYTE PTR [rax-0x4ffffd9f],ch
   14004bc51:	add    DWORD PTR [rcx],0x181cf00
   14004bc57:	add    BYTE PTR [rax-0x2ffffd9f],ch
   14004bc5d:	add    DWORD PTR [rcx],0x181eb00
   14004bc63:	add    BYTE PTR [rax-0xffffd9f],ch
   14004bc69:	add    DWORD PTR [rcx],0x1821000
   14004bc6f:	add    BYTE PTR [rax+0x10000261],ch
   14004bc75:	(bad)  
   14004bc76:	add    DWORD PTR [rax],eax
   14004bc78:	xor    BYTE PTR [rdx+0x61a80001],al
   14004bc7e:	add    al,BYTE PTR [rax]
   14004bc80:	xor    BYTE PTR [rdx-0x7dafffff],al
   14004bc86:	add    DWORD PTR [rax],eax
   14004bc88:	test   al,0x61
   14004bc8a:	add    al,BYTE PTR [rax]
   14004bc8c:	push   rax
   14004bc8d:	(bad)  
   14004bc8e:	add    DWORD PTR [rax],eax
   14004bc90:	outs   dx,DWORD PTR ds:[rsi]
   14004bc91:	(bad)  
   14004bc92:	add    DWORD PTR [rax],eax
   14004bc94:	test   al,0x61
   14004bc96:	add    al,BYTE PTR [rax]
   14004bc98:	jo     0x14004bc1c
   14004bc9a:	add    DWORD PTR [rax],eax
   14004bc9c:	mov    WORD PTR [rdx+0x61a80001],es
   14004bca2:	add    al,BYTE PTR [rax]
   14004bca4:	nop
   14004bca5:	(bad)  
   14004bca6:	add    DWORD PTR [rax],eax
   14004bca8:	lods   al,BYTE PTR ds:[rsi]
   14004bca9:	(bad)  
   14004bcaa:	add    DWORD PTR [rax],eax
   14004bcac:	test   al,0x61
   14004bcae:	add    al,BYTE PTR [rax]
   14004bcb0:	mov    al,0x82
   14004bcb2:	add    DWORD PTR [rax],eax
   14004bcb4:	int3   
   14004bcb5:	(bad)  
   14004bcb6:	add    DWORD PTR [rax],eax
   14004bcb8:	test   al,0x61
   14004bcba:	add    al,BYTE PTR [rax]
   14004bcbc:	rol    BYTE PTR [rdx-0x7d13ffff],1
   14004bcc2:	add    DWORD PTR [rax],eax
   14004bcc4:	test   al,0x61
   14004bcc6:	add    al,BYTE PTR [rax]
   14004bcc8:	lock (bad) 
   14004bcca:	add    DWORD PTR [rax],eax
   14004bccc:	or     al,0x83
   14004bcce:	add    DWORD PTR [rax],eax
   14004bcd0:	test   al,0x61
   14004bcd2:	add    al,BYTE PTR [rax]
   14004bcd4:	adc    BYTE PTR [rbx-0x7cd3ffff],al
   14004bcda:	add    DWORD PTR [rax],eax
   14004bcdc:	test   al,0x61
   14004bcde:	add    al,BYTE PTR [rax]
   14004bce0:	xor    BYTE PTR [rbx-0x7cb3ffff],al
   14004bce6:	add    DWORD PTR [rax],eax
   14004bce8:	test   al,0x61
   14004bcea:	add    al,BYTE PTR [rax]
   14004bcec:	push   rax
   14004bced:	add    DWORD PTR [rcx],0x0
   14004bcf0:	ins    BYTE PTR es:[rdi],dx
   14004bcf1:	add    DWORD PTR [rcx],0x0
   14004bcf4:	test   al,0x61
   14004bcf6:	add    al,BYTE PTR [rax]
   14004bcf8:	jo     0x14004bc7d
   14004bcfa:	add    DWORD PTR [rax],eax
   14004bcfc:	mov    WORD PTR [rbx+0x61a80001],es
   14004bd02:	add    al,BYTE PTR [rax]
   14004bd04:	nop
   14004bd05:	add    DWORD PTR [rcx],0x0
   14004bd08:	test   eax,0xa8000183
   14004bd0d:	(bad)  
   14004bd0e:	add    al,BYTE PTR [rax]
   14004bd10:	mov    al,0x83
   14004bd12:	add    DWORD PTR [rax],eax
   14004bd14:	enter  0x183,0x0
   14004bd18:	test   al,0x61
   14004bd1a:	add    al,BYTE PTR [rax]
   14004bd1c:	rol    BYTE PTR [rbx-0x7c13ffff],1
   14004bd22:	add    DWORD PTR [rax],eax
   14004bd24:	test   al,0x61
   14004bd26:	add    al,BYTE PTR [rax]
   14004bd28:	lock add DWORD PTR [rcx],0x0
   14004bd2c:	or     al,0x84
   14004bd2e:	add    DWORD PTR [rax],eax
   14004bd30:	test   al,0x61
   14004bd32:	add    al,BYTE PTR [rax]
   14004bd34:	adc    BYTE PTR [rcx+rax*1+0x1842c00],al
   14004bd3b:	add    BYTE PTR [rax+0x30000261],ch
   14004bd41:	test   BYTE PTR [rcx],al
   14004bd43:	add    BYTE PTR [rsp+rax*4+0x1],cl
   14004bd47:	add    BYTE PTR [rax+0x50000261],ch
   14004bd4d:	test   BYTE PTR [rcx],al
   14004bd4f:	add    BYTE PTR [rsp+rax*4+0x1],ch
   14004bd53:	add    BYTE PTR [rax+0x70000261],ch
   14004bd59:	test   BYTE PTR [rcx],al
   14004bd5b:	add    BYTE PTR [rsp+rax*4+0x61a80001],cl
   14004bd62:	add    al,BYTE PTR [rax]
   14004bd64:	nop
   14004bd65:	test   BYTE PTR [rcx],al
   14004bd67:	add    BYTE PTR [rax-0x57fffe7c],dh
   14004bd6d:	(bad)  
   14004bd6e:	add    al,BYTE PTR [rax]
   14004bd70:	mov    al,0x84
   14004bd72:	add    DWORD PTR [rax],eax
   14004bd74:	rol    BYTE PTR [rcx+rax*1+0x261a800],1
   14004bd7b:	add    al,dl
   14004bd7d:	test   BYTE PTR [rcx],al
   14004bd7f:	add    al,dh
   14004bd81:	test   BYTE PTR [rcx],al
   14004bd83:	add    BYTE PTR [rax-0xffffd9f],ch
   14004bd89:	test   BYTE PTR [rcx],al
   14004bd8b:	add    BYTE PTR [rdi],cl
   14004bd8d:	test   DWORD PTR [rcx],eax
   14004bd8f:	add    BYTE PTR [rax+0x10000261],ch
   14004bd95:	test   DWORD PTR [rcx],eax
   14004bd97:	add    BYTE PTR [rax],dh
   14004bd99:	test   DWORD PTR [rcx],eax
   14004bd9b:	add    BYTE PTR [rax+0x30000261],ch
   14004bda1:	test   DWORD PTR [rcx],eax
   14004bda3:	add    BYTE PTR [rax-0x7b],dl
   14004bda6:	add    DWORD PTR [rax],eax
   14004bda8:	test   al,0x61
   14004bdaa:	add    al,BYTE PTR [rax]
   14004bdac:	push   rax
   14004bdad:	test   DWORD PTR [rcx],eax
   14004bdaf:	add    BYTE PTR [rax-0x7b],dh
   14004bdb2:	add    DWORD PTR [rax],eax
   14004bdb4:	test   al,0x61
   14004bdb6:	add    al,BYTE PTR [rax]
   14004bdb8:	jo     0x14004bd3f
   14004bdba:	add    DWORD PTR [rax],eax
   14004bdbc:	pop    QWORD PTR [rbp+0x61a80001]
   14004bdc2:	add    al,BYTE PTR [rax]
   14004bdc4:	nop
   14004bdc5:	test   DWORD PTR [rcx],eax
   14004bdc7:	add    BYTE PTR [rax-0x57fffe7b],ch
   14004bdcd:	(bad)  
   14004bdce:	add    al,BYTE PTR [rax]
   14004bdd0:	mov    al,0x85
   14004bdd2:	add    DWORD PTR [rax],eax
   14004bdd4:	retf   
   14004bdd5:	test   DWORD PTR [rcx],eax
   14004bdd7:	add    BYTE PTR [rax-0x2ffffd9f],ch
   14004bddd:	test   DWORD PTR [rcx],eax
   14004bddf:	add    ah,ch
   14004bde1:	test   DWORD PTR [rcx],eax
   14004bde3:	add    BYTE PTR [rax-0xffffd9f],ch
   14004bde9:	test   DWORD PTR [rcx],eax
   14004bdeb:	add    BYTE PTR [rbx],cl
   14004bded:	xchg   BYTE PTR [rcx],al
   14004bdef:	add    BYTE PTR [rax+0x10000261],ch
   14004bdf5:	xchg   BYTE PTR [rcx],al
   14004bdf7:	add    BYTE PTR [rax],ch
   14004bdf9:	xchg   BYTE PTR [rcx],al
   14004bdfb:	add    BYTE PTR [rax+0x30000261],ch
   14004be01:	xchg   BYTE PTR [rcx],al
   14004be03:	add    BYTE PTR [rsi+rax*4+0x1],cl
   14004be07:	add    BYTE PTR [rax+0x50000261],ch
   14004be0d:	xchg   BYTE PTR [rcx],al
   14004be0f:	add    BYTE PTR [rsi+rax*4+0x1],ch
   14004be13:	add    BYTE PTR [rax+0x70000261],ch
   14004be19:	xchg   BYTE PTR [rcx],al
   14004be1b:	add    BYTE PTR [rbp-0x57fffe7a],cl
   14004be21:	(bad)  
   14004be22:	add    al,BYTE PTR [rax]
   14004be24:	nop
   14004be25:	xchg   BYTE PTR [rcx],al
   14004be27:	add    BYTE PTR [rbp-0x57fffe7a],ch
   14004be2d:	(bad)  
   14004be2e:	add    al,BYTE PTR [rax]
   14004be30:	mov    al,0x86
   14004be32:	add    DWORD PTR [rax],eax
   14004be34:	int    0x86
   14004be36:	add    DWORD PTR [rax],eax
   14004be38:	test   al,0x61
   14004be3a:	add    al,BYTE PTR [rax]
   14004be3c:	rol    BYTE PTR [rsi-0x7913ffff],1
   14004be42:	add    DWORD PTR [rax],eax
   14004be44:	test   al,0x61
   14004be46:	add    al,BYTE PTR [rax]
   14004be48:	lock xchg BYTE PTR [rcx],al
   14004be4b:	add    BYTE PTR [rax],dl
   14004be4d:	xchg   DWORD PTR [rcx],eax
   14004be4f:	add    BYTE PTR [rax+0x10000261],ch
   14004be55:	xchg   DWORD PTR [rcx],eax
   14004be57:	add    BYTE PTR [rax],dh
   14004be59:	xchg   DWORD PTR [rcx],eax
   14004be5b:	add    BYTE PTR [rax+0x30000261],ch
   14004be61:	xchg   DWORD PTR [rcx],eax
   14004be63:	add    BYTE PTR [rax-0x79],dl
   14004be66:	add    DWORD PTR [rax],eax
   14004be68:	test   al,0x61
   14004be6a:	add    al,BYTE PTR [rax]
   14004be6c:	push   rax
   14004be6d:	xchg   DWORD PTR [rcx],eax
   14004be6f:	add    BYTE PTR [rdi-0x79],ch
   14004be72:	add    DWORD PTR [rax],eax
   14004be74:	test   al,0x61
   14004be76:	add    al,BYTE PTR [rax]
   14004be78:	jo     0x14004be01
   14004be7a:	add    DWORD PTR [rax],eax
   14004be7c:	mov    DWORD PTR [rdi+0x61a80001],eax
   14004be82:	add    al,BYTE PTR [rax]
   14004be84:	nop
   14004be85:	xchg   DWORD PTR [rcx],eax
   14004be87:	add    BYTE PTR [rcx-0x57fffe79],ch
   14004be8d:	(bad)  
   14004be8e:	add    al,BYTE PTR [rax]
   14004be90:	mov    al,0x87
   14004be92:	add    DWORD PTR [rax],eax
   14004be94:	leave  
   14004be95:	xchg   DWORD PTR [rcx],eax
   14004be97:	add    BYTE PTR [rax-0x2ffffd9f],ch
   14004be9d:	xchg   DWORD PTR [rcx],eax
   14004be9f:	add    ah,ch
   14004bea1:	xchg   DWORD PTR [rcx],eax
   14004bea3:	add    BYTE PTR [rax-0xffffd9f],ch
   14004bea9:	xchg   DWORD PTR [rcx],eax
   14004beab:	add    BYTE PTR [rax+rcx*4],cl
   14004beae:	add    DWORD PTR [rax],eax
   14004beb0:	test   al,0x61
   14004beb2:	add    al,BYTE PTR [rax]
   14004beb4:	adc    BYTE PTR [rax-0x77d4ffff],cl
   14004beba:	add    DWORD PTR [rax],eax
   14004bebc:	test   al,0x61
   14004bebe:	add    al,BYTE PTR [rax]
   14004bec0:	xor    BYTE PTR [rax-0x77b3ffff],cl
   14004bec6:	add    DWORD PTR [rax],eax
   14004bec8:	test   al,0x61
   14004beca:	add    al,BYTE PTR [rax]
   14004becc:	push   rax
   14004becd:	mov    BYTE PTR [rcx],al
   14004becf:	add    BYTE PTR [rax+rcx*4+0x1],ch
   14004bed3:	add    BYTE PTR [rax+0x70000261],ch
   14004bed9:	mov    BYTE PTR [rcx],al
   14004bedb:	add    BYTE PTR [rcx-0x57fffe78],cl
   14004bee1:	(bad)  
   14004bee2:	add    al,BYTE PTR [rax]
   14004bee4:	nop
   14004bee5:	mov    BYTE PTR [rcx],al
   14004bee7:	add    BYTE PTR [rdi-0x57fffe78],dh
   14004beed:	(bad)  
   14004beee:	add    al,BYTE PTR [rax]
   14004bef0:	ror    BYTE PTR [rax-0x7723ffff],0x1
   14004bef7:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004befd:	mov    BYTE PTR [rcx],al
   14004beff:	add    BYTE PTR [rdi],al
   14004bf01:	mov    DWORD PTR [rcx],eax
   14004bf03:	add    BYTE PTR [rax+0x10000261],ch
   14004bf09:	mov    DWORD PTR [rcx],eax
   14004bf0b:	add    BYTE PTR [rax],dh
   14004bf0d:	mov    DWORD PTR [rcx],eax
   14004bf0f:	add    BYTE PTR [rax+0x30000261],ch
   14004bf15:	mov    DWORD PTR [rcx],eax
   14004bf17:	add    BYTE PTR [rcx+rcx*4+0x1],bl
   14004bf1b:	add    BYTE PTR [rax+0x4e],ah
   14004bf1e:	add    al,BYTE PTR [rax]
   14004bf20:	(bad)  
   14004bf21:	mov    DWORD PTR [rcx],eax
   14004bf23:	add    BYTE PTR [rcx+rcx*4+0x4e600001],cl
   14004bf2a:	add    al,BYTE PTR [rax]
   14004bf2c:	nop
   14004bf2d:	mov    DWORD PTR [rcx],eax
   14004bf2f:	add    BYTE PTR [rsi+0x50000189],ch
   14004bf35:	rex.WRXB add r8b,BYTE PTR [r8]
   14004bf38:	mov    al,0x89
   14004bf3a:	add    DWORD PTR [rax],eax
   14004bf3c:	loope  0x14004bec7
   14004bf3e:	add    DWORD PTR [rax],eax
   14004bf40:	push   rax
   14004bf41:	rex.WRXB add r8b,BYTE PTR [r8]
   14004bf44:	lock mov DWORD PTR [rcx],eax
   14004bf47:	add    BYTE PTR [rsi],cl
   14004bf49:	mov    al,BYTE PTR [rcx]
   14004bf4b:	add    BYTE PTR [rax],bl
   14004bf4d:	push   rax
   14004bf4e:	add    al,BYTE PTR [rax]
   14004bf50:	adc    BYTE PTR [rdx-0x75beffff],cl
   14004bf56:	add    DWORD PTR [rax],eax
   14004bf58:	sbb    BYTE PTR [rax+0x2],dl
   14004bf5b:	add    BYTE PTR [rax-0x76],dl
   14004bf5e:	add    DWORD PTR [rax],eax
   14004bf60:	ins    BYTE PTR es:[rdi],dx
   14004bf61:	mov    al,BYTE PTR [rcx]
   14004bf63:	add    BYTE PTR [rax+0x70000261],ch
   14004bf69:	mov    al,BYTE PTR [rcx]
   14004bf6b:	add    BYTE PTR [rdx-0x57fffe76],bl
   14004bf71:	(bad)  
   14004bf72:	add    al,BYTE PTR [rax]
   14004bf74:	movabs al,ds:0xa800018ab800018a
   14004bf7d:	(bad)  
   14004bf7e:	add    al,BYTE PTR [rax]
   14004bf80:	ror    BYTE PTR [rdx-0x7527ffff],0x1
   14004bf87:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004bf8d:	mov    al,BYTE PTR [rcx]
   14004bf8f:	add    al,bh
   14004bf91:	mov    al,BYTE PTR [rcx]
   14004bf93:	add    BYTE PTR [rax+0x261],ch
   14004bf99:	mov    eax,DWORD PTR [rcx]
   14004bf9b:	add    BYTE PTR [rax],bl
   14004bf9d:	mov    eax,DWORD PTR [rcx]
   14004bf9f:	add    BYTE PTR [rax+0x20000261],ch
   14004bfa5:	mov    eax,DWORD PTR [rcx]
   14004bfa7:	add    BYTE PTR [rbx+rcx*4],bh
   14004bfaa:	add    DWORD PTR [rax],eax
   14004bfac:	test   al,0x61
   14004bfae:	add    al,BYTE PTR [rax]
   14004bfb0:	rex mov eax,DWORD PTR [rcx]
   14004bfb3:	add    BYTE PTR [rbx+rcx*4+0x1],bl
   14004bfb7:	add    BYTE PTR [rax+0x60000261],ch
   14004bfbd:	mov    eax,DWORD PTR [rcx]
   14004bfbf:	add    BYTE PTR [rbx+rcx*4+0x1],bh
   14004bfc3:	add    BYTE PTR [rax-0x7ffffd9f],ch
   14004bfc9:	mov    eax,DWORD PTR [rcx]
   14004bfcb:	add    BYTE PTR [rbx+rcx*4+0x61a80001],bl
   14004bfd2:	add    al,BYTE PTR [rax]
   14004bfd4:	movabs al,ds:0xa800018bca00018b
   14004bfdd:	(bad)  
   14004bfde:	add    al,BYTE PTR [rax]
   14004bfe0:	ror    BYTE PTR [rbx-0x7416ffff],1
   14004bfe6:	add    DWORD PTR [rax],eax
   14004bfe8:	test   al,0x61
   14004bfea:	add    al,BYTE PTR [rax]
   14004bfec:	lock mov eax,DWORD PTR [rcx]
   14004bfef:	add    BYTE PTR [rsp+rcx*4],cl
   14004bff2:	add    DWORD PTR [rax],eax
   14004bff4:	test   al,0x61
   14004bff6:	add    al,BYTE PTR [rax]
   14004bff8:	adc    BYTE PTR [rcx+rax*1+0x18c2c00],cl
   14004bfff:	add    BYTE PTR [rax+0x30000261],ch
   14004c005:	mov    WORD PTR [rcx],es
   14004c007:	add    BYTE PTR [rsp+rcx*4+0x1],cl
   14004c00b:	add    BYTE PTR [rax+0x50000261],ch
   14004c011:	mov    WORD PTR [rcx],es
   14004c013:	add    BYTE PTR [rcx-0x74],ch
   14004c016:	add    DWORD PTR [rax],eax
   14004c018:	test   al,0x61
   14004c01a:	add    al,BYTE PTR [rax]
   14004c01c:	jo     0x14004bfaa
   14004c01e:	add    DWORD PTR [rax],eax
   14004c020:	mov    DWORD PTR [rcx+rax*1+0x261a800],ecx
   14004c027:	add    BYTE PTR [rax-0x56fffe74],dl
   14004c02d:	mov    WORD PTR [rcx],es
   14004c02f:	add    BYTE PTR [rax-0x4ffffd9f],ch
   14004c035:	mov    WORD PTR [rcx],es
   14004c037:	add    ah,cl
   14004c039:	mov    WORD PTR [rcx],es
   14004c03b:	add    BYTE PTR [rax-0x2ffffd9f],ch
   14004c041:	mov    WORD PTR [rcx],es
   14004c043:	add    ah,ch
   14004c045:	mov    WORD PTR [rcx],es
   14004c047:	add    BYTE PTR [rax-0xffffd9f],ch
   14004c04d:	mov    WORD PTR [rcx],es
   14004c04f:	add    BYTE PTR [rcx*4+0x61a80001],cl
   14004c056:	add    al,BYTE PTR [rax]
   14004c058:	adc    BYTE PTR [rbp-0x72d6ffff],cl
   14004c05e:	add    DWORD PTR [rax],eax
   14004c060:	test   al,0x61
   14004c062:	add    al,BYTE PTR [rax]
   14004c064:	xor    BYTE PTR [rbp-0x72b4ffff],cl
   14004c06a:	add    DWORD PTR [rax],eax
   14004c06c:	test   al,0x61
   14004c06e:	add    al,BYTE PTR [rax]
   14004c070:	push   rax
   14004c071:	lea    eax,[rcx]
   14004c073:	add    BYTE PTR [rax-0x73],ch
   14004c076:	add    DWORD PTR [rax],eax
   14004c078:	test   al,0x61
   14004c07a:	add    al,BYTE PTR [rax]
   14004c07c:	jo     0x14004c00b
   14004c07e:	add    DWORD PTR [rax],eax
   14004c080:	mov    BYTE PTR [rbp+0x61a80001],cl
   14004c086:	add    al,BYTE PTR [rax]
   14004c088:	nop
   14004c089:	lea    eax,[rcx]
   14004c08b:	add    BYTE PTR [rbp+rcx*4+0x61a80001],ch
   14004c092:	add    al,BYTE PTR [rax]
   14004c094:	mov    al,0x8d
   14004c096:	add    DWORD PTR [rax],eax
   14004c098:	int3   
   14004c099:	lea    eax,[rcx]
   14004c09b:	add    BYTE PTR [rax-0x2ffffd9f],ch
   14004c0a1:	lea    eax,[rcx]
   14004c0a3:	add    cl,ch
   14004c0a5:	lea    eax,[rcx]
   14004c0a7:	add    BYTE PTR [rax-0xffffd9f],ch
   14004c0ad:	lea    eax,[rcx]
   14004c0af:	add    BYTE PTR [rcx],cl
   14004c0b1:	mov    es,WORD PTR [rcx]
   14004c0b3:	add    BYTE PTR [rax+0x10000261],ch
   14004c0b9:	mov    es,WORD PTR [rcx]
   14004c0bb:	add    BYTE PTR [rsi+rcx*4],ch
   14004c0be:	add    DWORD PTR [rax],eax
   14004c0c0:	test   al,0x61
   14004c0c2:	add    al,BYTE PTR [rax]
   14004c0c4:	xor    BYTE PTR [rsi-0x71b6ffff],cl
   14004c0ca:	add    DWORD PTR [rax],eax
   14004c0cc:	test   al,0x61
   14004c0ce:	add    al,BYTE PTR [rax]
   14004c0d0:	push   rax
   14004c0d1:	mov    es,WORD PTR [rcx]
   14004c0d3:	add    BYTE PTR [rbp-0x72],ch
   14004c0d6:	add    DWORD PTR [rax],eax
   14004c0d8:	test   al,0x61
   14004c0da:	add    al,BYTE PTR [rax]
   14004c0dc:	jo     0x14004c06c
   14004c0de:	add    DWORD PTR [rax],eax
   14004c0e0:	lea    ecx,[rsi+0x61a80001]
   14004c0e6:	add    al,BYTE PTR [rax]
   14004c0e8:	nop
   14004c0e9:	mov    es,WORD PTR [rcx]
   14004c0eb:	add    BYTE PTR [rbp-0x57fffe72],ch
   14004c0f1:	(bad)  
   14004c0f2:	add    al,BYTE PTR [rax]
   14004c0f4:	mov    al,0x8e
   14004c0f6:	add    DWORD PTR [rax],eax
   14004c0f8:	int3   
   14004c0f9:	mov    es,WORD PTR [rcx]
   14004c0fb:	add    BYTE PTR [rax-0x2ffffd9f],ch
   14004c101:	mov    es,WORD PTR [rcx]
   14004c103:	add    cl,ch
   14004c105:	mov    es,WORD PTR [rcx]
   14004c107:	add    BYTE PTR [rax-0xffffd9f],ch
   14004c10d:	mov    es,WORD PTR [rcx]
   14004c10f:	add    BYTE PTR [rax],dl
   14004c111:	pop    QWORD PTR [rcx]
   14004c113:	add    BYTE PTR [rax+0x10000261],ch
   14004c119:	pop    QWORD PTR [rcx]
   14004c11b:	add    BYTE PTR [rax],dh
   14004c11d:	pop    QWORD PTR [rcx]
   14004c11f:	add    BYTE PTR [rax+0x30000261],ch
   14004c125:	pop    QWORD PTR [rcx]
   14004c127:	add    BYTE PTR [rax-0x71],dl
   14004c12a:	add    DWORD PTR [rax],eax
   14004c12c:	test   al,0x61
   14004c12e:	add    al,BYTE PTR [rax]
   14004c130:	push   rax
   14004c131:	pop    QWORD PTR [rcx]
   14004c133:	add    BYTE PTR [rdi-0x71],ch
   14004c136:	add    DWORD PTR [rax],eax
   14004c138:	test   al,0x61
   14004c13a:	add    al,BYTE PTR [rax]
   14004c13c:	jo     0x14004c0cd
   14004c13e:	add    DWORD PTR [rax],eax
   14004c140:	nop
   14004c141:	pop    QWORD PTR [rcx]
   14004c143:	add    BYTE PTR [rax-0x6ffffd9f],ch
   14004c149:	pop    QWORD PTR [rcx]
   14004c14b:	add    BYTE PTR [rax-0x57fffe71],dh
   14004c151:	(bad)  
   14004c152:	add    al,BYTE PTR [rax]
   14004c154:	mov    al,0x8f
   14004c156:	add    DWORD PTR [rax],eax
   14004c158:	ror    BYTE PTR [rdi+0x61a80001],1
   14004c15e:	add    al,BYTE PTR [rax]
   14004c160:	ror    BYTE PTR [rdi-0x7010ffff],1
   14004c166:	add    DWORD PTR [rax],eax
   14004c168:	test   al,0x61
   14004c16a:	add    al,BYTE PTR [rax]
   14004c16c:	lock pop QWORD PTR [rcx]
   14004c16f:	add    BYTE PTR [rbx],cl
   14004c171:	nop
   14004c172:	add    DWORD PTR [rax],eax
   14004c174:	test   al,0x61
   14004c176:	add    al,BYTE PTR [rax]
   14004c178:	adc    BYTE PTR [rax-0x6fd3ffff],dl
   14004c17e:	add    DWORD PTR [rax],eax
   14004c180:	test   al,0x61
   14004c182:	add    al,BYTE PTR [rax]
   14004c184:	xor    BYTE PTR [rax-0x6fb6ffff],dl
   14004c18a:	add    DWORD PTR [rax],eax
   14004c18c:	test   al,0x61
   14004c18e:	add    al,BYTE PTR [rax]
   14004c190:	push   rax
   14004c191:	nop
   14004c192:	add    DWORD PTR [rax],eax
   14004c194:	push   0xffffffffa8000190
   14004c199:	(bad)  
   14004c19a:	add    al,BYTE PTR [rax]
   14004c19c:	jo     0x14004c12e
   14004c19e:	add    DWORD PTR [rax],eax
   14004c1a0:	mov    BYTE PTR [rax+0x61a80001],dl
   14004c1a6:	add    al,BYTE PTR [rax]
   14004c1a8:	nop
   14004c1a9:	nop
   14004c1aa:	add    DWORD PTR [rax],eax
   14004c1ac:	mov    al,0x90
   14004c1ae:	add    DWORD PTR [rax],eax
   14004c1b0:	test   al,0x61
   14004c1b2:	add    al,BYTE PTR [rax]
   14004c1b4:	mov    al,0x90
   14004c1b6:	add    DWORD PTR [rax],eax
   14004c1b8:	rcl    BYTE PTR [rax+0x61a80001],1
   14004c1be:	add    al,BYTE PTR [rax]
   14004c1c0:	rcl    BYTE PTR [rax-0x6f0fffff],1
   14004c1c6:	add    DWORD PTR [rax],eax
   14004c1c8:	test   al,0x61
   14004c1ca:	add    al,BYTE PTR [rax]
   14004c1cc:	lock nop
   14004c1ce:	add    DWORD PTR [rax],eax
   14004c1d0:	setno  BYTE PTR [rcx]
   14004c1d3:	add    BYTE PTR [rax+0x10000261],ch
   14004c1d9:	xchg   ecx,eax
   14004c1da:	add    DWORD PTR [rax],eax
   14004c1dc:	(bad)  
   14004c1dd:	xchg   ecx,eax
   14004c1de:	add    DWORD PTR [rax],eax
   14004c1e0:	test   al,0x61
   14004c1e2:	add    al,BYTE PTR [rax]
   14004c1e4:	rex xchg ecx,eax
   14004c1e6:	add    DWORD PTR [rax],eax
   14004c1e8:	pop    rcx
   14004c1e9:	xchg   ecx,eax
   14004c1ea:	add    DWORD PTR [rax],eax
   14004c1ec:	test   al,0x61
   14004c1ee:	add    al,BYTE PTR [rax]
   14004c1f0:	(bad)  
   14004c1f1:	xchg   ecx,eax
   14004c1f2:	add    DWORD PTR [rax],eax
   14004c1f4:	jns    0x14004c187
   14004c1f6:	add    DWORD PTR [rax],eax
   14004c1f8:	test   al,0x61
   14004c1fa:	add    al,BYTE PTR [rax]
   14004c1fc:	adc    BYTE PTR [rcx-0x6e66ffff],0x1
   14004c203:	add    BYTE PTR [rax-0x5ffffd9f],ch
   14004c209:	xchg   ecx,eax
   14004c20a:	add    DWORD PTR [rax],eax
   14004c20c:	mov    ecx,0xa8000191
   14004c211:	(bad)  
   14004c212:	add    al,BYTE PTR [rax]
   14004c214:	rcl    BYTE PTR [rcx-0x6e23ffff],0x1
   14004c21b:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004c221:	xchg   ecx,eax
   14004c222:	add    DWORD PTR [rax],eax
   14004c224:	adc    BYTE PTR [rdx+0x61a80001],dl
   14004c22a:	add    al,BYTE PTR [rax]
   14004c22c:	adc    BYTE PTR [rdx-0x6dd6ffff],dl
   14004c232:	add    DWORD PTR [rax],eax
   14004c234:	test   al,0x61
   14004c236:	add    al,BYTE PTR [rax]
   14004c238:	xor    BYTE PTR [rdx-0x6db6ffff],dl
   14004c23e:	add    DWORD PTR [rax],eax
   14004c240:	test   al,0x61
   14004c242:	add    al,BYTE PTR [rax]
   14004c244:	push   rax
   14004c245:	xchg   edx,eax
   14004c246:	add    DWORD PTR [rax],eax
   14004c248:	jns    0x14004c1dc
   14004c24a:	add    DWORD PTR [rax],eax
   14004c24c:	test   al,0x61
   14004c24e:	add    al,BYTE PTR [rax]
   14004c250:	adc    BYTE PTR [rdx-0x6d63ffff],0x1
   14004c257:	add    BYTE PTR [rax-0x5ffffd9f],ch
   14004c25d:	xchg   edx,eax
   14004c25e:	add    DWORD PTR [rax],eax
   14004c260:	mov    esp,0xa8000192
   14004c265:	(bad)  
   14004c266:	add    al,BYTE PTR [rax]
   14004c268:	rcl    BYTE PTR [rdx-0x6d23ffff],0x1
   14004c26f:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004c275:	xchg   edx,eax
   14004c276:	add    DWORD PTR [rax],eax
   14004c278:	cld    
   14004c279:	xchg   edx,eax
   14004c27a:	add    DWORD PTR [rax],eax
   14004c27c:	test   al,0x61
   14004c27e:	add    al,BYTE PTR [rax]
   14004c280:	add    BYTE PTR [rbx-0x6ce6ffff],dl
   14004c286:	add    DWORD PTR [rax],eax
   14004c288:	test   al,0x61
   14004c28a:	add    al,BYTE PTR [rax]
   14004c28c:	and    BYTE PTR [rbx-0x6cc3ffff],dl
   14004c292:	add    DWORD PTR [rax],eax
   14004c294:	test   al,0x61
   14004c296:	add    al,BYTE PTR [rax]
   14004c298:	rex xchg ebx,eax
   14004c29a:	add    DWORD PTR [rax],eax
   14004c29c:	pop    rsp
   14004c29d:	xchg   ebx,eax
   14004c29e:	add    DWORD PTR [rax],eax
   14004c2a0:	test   al,0x61
   14004c2a2:	add    al,BYTE PTR [rax]
   14004c2a4:	(bad)  
   14004c2a5:	xchg   ebx,eax
   14004c2a6:	add    DWORD PTR [rax],eax
   14004c2a8:	jl     0x14004c23d
   14004c2aa:	add    DWORD PTR [rax],eax
   14004c2ac:	test   al,0x61
   14004c2ae:	add    al,BYTE PTR [rax]
   14004c2b0:	adc    BYTE PTR [rbx-0x6c66ffff],0x1
   14004c2b7:	add    BYTE PTR [rax-0x5ffffd9f],ch
   14004c2bd:	xchg   ebx,eax
   14004c2be:	add    DWORD PTR [rax],eax
   14004c2c0:	retf   0x193
   14004c2c3:	add    BYTE PTR [rax-0x2ffffd9f],ch
   14004c2c9:	xchg   ebx,eax
   14004c2ca:	add    DWORD PTR [rax],eax
   14004c2cc:	in     al,dx
   14004c2cd:	xchg   ebx,eax
   14004c2ce:	add    DWORD PTR [rax],eax
   14004c2d0:	test   al,0x61
   14004c2d2:	add    al,BYTE PTR [rax]
   14004c2d4:	lock xchg ebx,eax
   14004c2d6:	add    DWORD PTR [rax],eax
   14004c2d8:	or     al,0x94
   14004c2da:	add    DWORD PTR [rax],eax
   14004c2dc:	test   al,0x61
   14004c2de:	add    al,BYTE PTR [rax]
   14004c2e0:	adc    BYTE PTR [rcx+rax*1+0x1942c00],dl
   14004c2e7:	add    BYTE PTR [rax+0x30000261],ch
   14004c2ed:	xchg   esp,eax
   14004c2ee:	add    DWORD PTR [rax],eax
   14004c2f0:	rex.WR xchg rsp,rax
   14004c2f2:	add    DWORD PTR [rax],eax
   14004c2f4:	test   al,0x61
   14004c2f6:	add    al,BYTE PTR [rax]
   14004c2f8:	push   rax
   14004c2f9:	xchg   esp,eax
   14004c2fa:	add    DWORD PTR [rax],eax
   14004c2fc:	ins    BYTE PTR es:[rdi],dx
   14004c2fd:	xchg   esp,eax
   14004c2fe:	add    DWORD PTR [rax],eax
   14004c300:	test   al,0x61
   14004c302:	add    al,BYTE PTR [rax]
   14004c304:	jo     0x14004c29a
   14004c306:	add    DWORD PTR [rax],eax
   14004c308:	mov    WORD PTR [rcx+rax*1+0x261a800],ss
   14004c30f:	add    BYTE PTR [rax-0x45fffe6c],dl
   14004c315:	xchg   esp,eax
   14004c316:	add    DWORD PTR [rax],eax
   14004c318:	test   al,0x61
   14004c31a:	add    al,BYTE PTR [rax]
   14004c31c:	rcl    BYTE PTR [rcx+rax*1+0x194dc00],0x0
   14004c324:	test   al,0x61
   14004c326:	add    al,BYTE PTR [rax]
   14004c328:	loopne 0x14004c2be
   14004c32a:	add    DWORD PTR [rax],eax
   14004c32c:	cld    
   14004c32d:	xchg   esp,eax
   14004c32e:	add    DWORD PTR [rax],eax
   14004c330:	test   al,0x61
   14004c332:	add    al,BYTE PTR [rax]
   14004c334:	add    BYTE PTR [rbp-0x6ae3ffff],dl
   14004c33a:	add    DWORD PTR [rax],eax
   14004c33c:	test   al,0x61
   14004c33e:	add    al,BYTE PTR [rax]
   14004c340:	and    BYTE PTR [rbp-0x6ac3ffff],dl
   14004c346:	add    DWORD PTR [rax],eax
   14004c348:	test   al,0x61
   14004c34a:	add    al,BYTE PTR [rax]
   14004c34c:	rex xchg ebp,eax
   14004c34e:	add    DWORD PTR [rax],eax
   14004c350:	pop    rsp
   14004c351:	xchg   ebp,eax
   14004c352:	add    DWORD PTR [rax],eax
   14004c354:	test   al,0x61
   14004c356:	add    al,BYTE PTR [rax]
   14004c358:	(bad)  
   14004c359:	xchg   ebp,eax
   14004c35a:	add    DWORD PTR [rax],eax
   14004c35c:	jl     0x14004c2f3
   14004c35e:	add    DWORD PTR [rax],eax
   14004c360:	test   al,0x61
   14004c362:	add    al,BYTE PTR [rax]
   14004c364:	adc    BYTE PTR [rbp-0x6a63ffff],0x1
   14004c36b:	add    BYTE PTR [rax-0x5ffffd9f],ch
   14004c371:	xchg   ebp,eax
   14004c372:	add    DWORD PTR [rax],eax
   14004c374:	mov    esp,0xa8000195
   14004c379:	(bad)  
   14004c37a:	add    al,BYTE PTR [rax]
   14004c37c:	rcl    BYTE PTR [rbp-0x6a23ffff],0x1
   14004c383:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004c389:	xchg   ebp,eax
   14004c38a:	add    DWORD PTR [rax],eax
   14004c38c:	cld    
   14004c38d:	xchg   ebp,eax
   14004c38e:	add    DWORD PTR [rax],eax
   14004c390:	test   al,0x61
   14004c392:	add    al,BYTE PTR [rax]
   14004c394:	add    BYTE PTR [rsi-0x69e3ffff],dl
   14004c39a:	add    DWORD PTR [rax],eax
   14004c39c:	test   al,0x61
   14004c39e:	add    al,BYTE PTR [rax]
   14004c3a0:	and    BYTE PTR [rsi-0x69c3ffff],dl
   14004c3a6:	add    DWORD PTR [rax],eax
   14004c3a8:	test   al,0x61
   14004c3aa:	add    al,BYTE PTR [rax]
   14004c3ac:	rex xchg esi,eax
   14004c3ae:	add    DWORD PTR [rax],eax
   14004c3b0:	pop    rsp
   14004c3b1:	xchg   esi,eax
   14004c3b2:	add    DWORD PTR [rax],eax
   14004c3b4:	test   al,0x61
   14004c3b6:	add    al,BYTE PTR [rax]
   14004c3b8:	(bad)  
   14004c3b9:	xchg   esi,eax
   14004c3ba:	add    DWORD PTR [rax],eax
   14004c3bc:	jl     0x14004c354
   14004c3be:	add    DWORD PTR [rax],eax
   14004c3c0:	test   al,0x61
   14004c3c2:	add    al,BYTE PTR [rax]
   14004c3c4:	adc    BYTE PTR [rsi-0x6963ffff],0x1
   14004c3cb:	add    BYTE PTR [rax-0x5ffffd9f],ch
   14004c3d1:	xchg   esi,eax
   14004c3d2:	add    DWORD PTR [rax],eax
   14004c3d4:	mov    esp,0xa8000196
   14004c3d9:	(bad)  
   14004c3da:	add    al,BYTE PTR [rax]
   14004c3dc:	rcl    BYTE PTR [rsi-0x6923ffff],0x1
   14004c3e3:	add    BYTE PTR [rax-0x1ffffd9f],ch
   14004c3e9:	xchg   esi,eax
   14004c3ea:	add    DWORD PTR [rax],eax
   14004c3ec:	cld    
   14004c3ed:	xchg   esi,eax
   14004c3ee:	add    DWORD PTR [rax],eax
   14004c3f0:	test   al,0x61
   14004c3f2:	add    al,BYTE PTR [rax]
   14004c3f4:	add    BYTE PTR [rdi-0x68e7ffff],dl
   14004c3fa:	add    DWORD PTR [rax],eax
   14004c3fc:	test   al,0x61
   14004c3fe:	add    al,BYTE PTR [rax]
   14004c400:	and    BYTE PTR [rdi-0x68c7ffff],dl
   14004c406:	add    DWORD PTR [rax],eax
   14004c408:	test   al,0x61
   14004c40a:	add    al,BYTE PTR [rax]
   14004c40c:	rex xchg edi,eax
   14004c40e:	add    DWORD PTR [rax],eax
   14004c410:	push   0xffffffffffffff97
   14004c412:	add    DWORD PTR [rax],eax
   14004c414:	test   al,0x61
   14004c416:	add    al,BYTE PTR [rax]
   14004c418:	jo     0x14004c3b1
   14004c41a:	add    DWORD PTR [rax],eax
   14004c41c:	(bad)  
   14004c41d:	xchg   edi,eax
   14004c41e:	add    DWORD PTR [rax],eax
   14004c420:	test   al,0x61
   14004c422:	add    al,BYTE PTR [rax]
   14004c424:	movabs al,ds:0xa8000197ca000197
   14004c42d:	(bad)  
   14004c42e:	add    al,BYTE PTR [rax]
   14004c430:	rcl    BYTE PTR [rdi-0x6816ffff],1
   14004c436:	add    DWORD PTR [rax],eax
   14004c438:	test   al,0x61
   14004c43a:	add    al,BYTE PTR [rax]
   14004c43c:	lock xchg edi,eax
   14004c43e:	add    DWORD PTR [rax],eax
   14004c440:	or     al,0x98
   14004c442:	add    DWORD PTR [rax],eax
   14004c444:	test   al,0x61
   14004c446:	add    al,BYTE PTR [rax]
   14004c448:	adc    BYTE PTR [rax-0x67d3ffff],bl
   14004c44e:	add    DWORD PTR [rax],eax
   14004c450:	test   al,0x61
   14004c452:	add    al,BYTE PTR [rax]
   14004c454:	xor    BYTE PTR [rax-0x67b3ffff],bl
   14004c45a:	add    DWORD PTR [rax],eax
   14004c45c:	test   al,0x61
   14004c45e:	add    al,BYTE PTR [rax]
   14004c460:	push   rax
   14004c461:	cwde   
   14004c462:	add    DWORD PTR [rax],eax
   14004c464:	ins    BYTE PTR es:[rdi],dx
   14004c465:	cwde   
   14004c466:	add    DWORD PTR [rax],eax
   14004c468:	test   al,0x61
   14004c46a:	add    al,BYTE PTR [rax]
   14004c46c:	jo     0x14004c406
   14004c46e:	add    DWORD PTR [rax],eax
   14004c470:	mov    WORD PTR [rax+0x61a80001],ds
   14004c476:	add    al,BYTE PTR [rax]
   14004c478:	nop
   14004c479:	cwde   
   14004c47a:	add    DWORD PTR [rax],eax
   14004c47c:	lods   al,BYTE PTR ds:[rsi]
   14004c47d:	cwde   
   14004c47e:	add    DWORD PTR [rax],eax
   14004c480:	test   al,0x61
   14004c482:	add    al,BYTE PTR [rax]
   14004c484:	mov    al,0x98
   14004c486:	add    DWORD PTR [rax],eax
   14004c488:	int3   
   14004c489:	cwde   
   14004c48a:	add    DWORD PTR [rax],eax
   14004c48c:	test   al,0x61
   14004c48e:	add    al,BYTE PTR [rax]
   14004c490:	rcr    BYTE PTR [rax-0x6713ffff],1
   14004c496:	add    DWORD PTR [rax],eax
   14004c498:	test   al,0x61
   14004c49a:	add    al,BYTE PTR [rax]
   14004c49c:	lock cwde 
   14004c49e:	add    DWORD PTR [rax],eax
   14004c4a0:	or     al,0x99
   14004c4a2:	add    DWORD PTR [rax],eax
   14004c4a4:	test   al,0x61
   14004c4a6:	add    al,BYTE PTR [rax]
   14004c4a8:	adc    BYTE PTR [rcx-0x66d3ffff],bl
   14004c4ae:	add    DWORD PTR [rax],eax
   14004c4b0:	test   al,0x61
   14004c4b2:	add    al,BYTE PTR [rax]
   14004c4b4:	xor    BYTE PTR [rcx-0x66b3ffff],bl
   14004c4ba:	add    DWORD PTR [rax],eax
   14004c4bc:	test   al,0x61
   14004c4be:	add    al,BYTE PTR [rax]
   14004c4c0:	push   rax
   14004c4c1:	cdq    
   14004c4c2:	add    DWORD PTR [rax],eax
   14004c4c4:	ins    BYTE PTR es:[rdi],dx
   14004c4c5:	cdq    
   14004c4c6:	add    DWORD PTR [rax],eax
   14004c4c8:	test   al,0x61
   14004c4ca:	add    al,BYTE PTR [rax]
   14004c4cc:	jo     0x14004c467
   14004c4ce:	add    DWORD PTR [rax],eax
   14004c4d0:	mov    WORD PTR [rcx+0x61a80001],ds
   14004c4d6:	add    al,BYTE PTR [rax]
   14004c4d8:	nop
   14004c4d9:	cdq    
   14004c4da:	add    DWORD PTR [rax],eax
   14004c4dc:	test   eax,0xa8000199
   14004c4e1:	(bad)  
   14004c4e2:	add    al,BYTE PTR [rax]
   14004c4e4:	mov    al,0x99
   14004c4e6:	add    DWORD PTR [rax],eax
   14004c4e8:	int3   
   14004c4e9:	cdq    
   14004c4ea:	add    DWORD PTR [rax],eax
   14004c4ec:	test   al,0x61
   14004c4ee:	add    al,BYTE PTR [rax]
   14004c4f0:	rcr    BYTE PTR [rcx-0x6613ffff],1
   14004c4f6:	add    DWORD PTR [rax],eax
   14004c4f8:	test   al,0x61
   14004c4fa:	add    al,BYTE PTR [rax]
   14004c4fc:	lock cdq 
   14004c4fe:	add    DWORD PTR [rax],eax
   14004c500:	or     al,0x9a
   14004c502:	add    DWORD PTR [rax],eax
   14004c504:	test   al,0x61
   14004c506:	add    al,BYTE PTR [rax]
   14004c508:	adc    BYTE PTR [rdx-0x65d3ffff],bl
   14004c50e:	add    DWORD PTR [rax],eax
   14004c510:	test   al,0x61
   14004c512:	add    al,BYTE PTR [rax]
   14004c514:	xor    BYTE PTR [rdx-0x65b3ffff],bl
   14004c51a:	add    DWORD PTR [rax],eax
   14004c51c:	test   al,0x61
   14004c51e:	add    al,BYTE PTR [rax]
   14004c520:	push   rax
   14004c521:	(bad)  
   14004c522:	add    DWORD PTR [rax],eax
   14004c524:	ins    BYTE PTR es:[rdi],dx
   14004c525:	(bad)  
   14004c526:	add    DWORD PTR [rax],eax
   14004c528:	test   al,0x61
   14004c52a:	add    al,BYTE PTR [rax]
   14004c52c:	jo     0x14004c4c8
   14004c52e:	add    DWORD PTR [rax],eax
   14004c530:	mov    WORD PTR [rdx+0x61a80001],ds
   14004c536:	add    al,BYTE PTR [rax]
   14004c538:	nop
   14004c539:	(bad)  
   14004c53a:	add    DWORD PTR [rax],eax
   14004c53c:	lods   al,BYTE PTR ds:[rsi]
   14004c53d:	(bad)  
   14004c53e:	add    DWORD PTR [rax],eax
   14004c540:	test   al,0x61
   14004c542:	add    al,BYTE PTR [rax]
   14004c544:	mov    al,0x9a
   14004c546:	add    DWORD PTR [rax],eax
   14004c548:	rcr    BYTE PTR [rdx+0x61a80001],1
   14004c54e:	add    al,BYTE PTR [rax]
   14004c550:	rcr    BYTE PTR [rdx-0x650fffff],1
   14004c556:	add    DWORD PTR [rax],eax
   14004c558:	test   al,0x61
   14004c55a:	add    al,BYTE PTR [rax]
   14004c55c:	lock (bad) 
   14004c55e:	add    DWORD PTR [rax],eax
   14004c560:	adc    BYTE PTR [rbx+0x61a80001],bl
   14004c566:	add    al,BYTE PTR [rax]
   14004c568:	adc    BYTE PTR [rbx-0x64d0ffff],bl
   14004c56e:	add    DWORD PTR [rax],eax
   14004c570:	test   al,0x61
   14004c572:	add    al,BYTE PTR [rax]
   14004c574:	xor    BYTE PTR [rbx-0x64b4ffff],bl
   14004c57a:	add    DWORD PTR [rax],eax
   14004c57c:	test   al,0x61
   14004c57e:	add    al,BYTE PTR [rax]
   14004c580:	push   rax
   14004c581:	fwait
   14004c582:	add    DWORD PTR [rax],eax
   14004c584:	push   0xffffffffa800019b
   14004c589:	(bad)  
   14004c58a:	add    al,BYTE PTR [rax]
   14004c58c:	jo     0x14004c529
   14004c58e:	add    DWORD PTR [rax],eax
   14004c590:	mov    BYTE PTR [rbx+0x61a80001],bl
   14004c596:	add    al,BYTE PTR [rax]
   14004c598:	nop
   14004c599:	fwait
   14004c59a:	add    DWORD PTR [rax],eax
   14004c59c:	test   al,0x9b
   14004c59e:	add    DWORD PTR [rax],eax
   14004c5a0:	test   al,0x61
   14004c5a2:	add    al,BYTE PTR [rax]
   14004c5a4:	mov    al,0x9b
   14004c5a6:	add    DWORD PTR [rax],eax
   14004c5a8:	leave  
   14004c5a9:	fwait
   14004c5aa:	add    DWORD PTR [rax],eax
   14004c5ac:	test   al,0x61
   14004c5ae:	add    al,BYTE PTR [rax]
   14004c5b0:	rcr    BYTE PTR [rbx-0x6417ffff],1
   14004c5b6:	add    DWORD PTR [rax],eax
   14004c5b8:	test   al,0x61
   14004c5ba:	add    al,BYTE PTR [rax]
   14004c5bc:	lock fwait
   14004c5be:	add    DWORD PTR [rax],eax
   14004c5c0:	or     BYTE PTR [rcx+rax*1+0x261a800],bl
   14004c5c7:	add    BYTE PTR [rax],dl
   14004c5c9:	pushf  
   14004c5ca:	add    DWORD PTR [rax],eax
   14004c5cc:	sub    DWORD PTR [rcx+rax*1+0x261a800],ebx
   14004c5d3:	add    BYTE PTR [rax],dh
   14004c5d5:	pushf  
   14004c5d6:	add    DWORD PTR [rax],eax
   14004c5d8:	rex.WRB pushf 
   14004c5da:	add    DWORD PTR [rax],eax
   14004c5dc:	test   al,0x61
   14004c5de:	add    al,BYTE PTR [rax]
   14004c5e0:	push   rax
   14004c5e1:	pushf  
   14004c5e2:	add    DWORD PTR [rax],eax
   14004c5e4:	ins    DWORD PTR es:[rdi],dx
   14004c5e5:	pushf  
   14004c5e6:	add    DWORD PTR [rax],eax
   14004c5e8:	test   al,0x61
   14004c5ea:	add    al,BYTE PTR [rax]
   14004c5ec:	jo     0x14004c58a
   14004c5ee:	add    DWORD PTR [rax],eax
   14004c5f0:	lea    ebx,[rcx+rax*1+0x261a800]
   14004c5f7:	add    BYTE PTR [rax-0x53fffe64],dl
   14004c5fd:	pushf  
   14004c5fe:	add    DWORD PTR [rax],eax
   14004c600:	test   al,0x61
   14004c602:	add    al,BYTE PTR [rax]
   14004c604:	mov    al,0x9c
   14004c606:	add    DWORD PTR [rax],eax
   14004c608:	rcr    BYTE PTR [rcx+rax*1+0x261a800],1
   14004c60f:	add    al,dl
   14004c611:	pushf  
   14004c612:	add    DWORD PTR [rax],eax
   14004c614:	lock pushf 
   14004c616:	add    DWORD PTR [rax],eax
   14004c618:	test   al,0x61
   14004c61a:	add    al,BYTE PTR [rax]
   14004c61c:	lock pushf 
   14004c61e:	add    DWORD PTR [rax],eax
   14004c620:	adc    BYTE PTR [rbp+0x61a80001],bl
   14004c626:	add    al,BYTE PTR [rax]
   14004c628:	adc    BYTE PTR [rbp-0x62d0ffff],bl
   14004c62e:	add    DWORD PTR [rax],eax
   14004c630:	test   al,0x61
   14004c632:	add    al,BYTE PTR [rax]
   14004c634:	xor    BYTE PTR [rbp-0x62b4ffff],bl
   14004c63a:	add    DWORD PTR [rax],eax
   14004c63c:	test   al,0x61
   14004c63e:	add    al,BYTE PTR [rax]
   14004c640:	push   rax
   14004c641:	popf   
   14004c642:	add    DWORD PTR [rax],eax
   14004c644:	push   0xffffffffa800019d
   14004c649:	(bad)  
   14004c64a:	add    al,BYTE PTR [rax]
   14004c64c:	jo     0x14004c5eb
   14004c64e:	add    DWORD PTR [rax],eax
   14004c650:	nop
   14004c651:	popf   
   14004c652:	add    DWORD PTR [rax],eax
   14004c654:	test   al,0x61
   14004c656:	add    al,BYTE PTR [rax]
   14004c658:	nop
   14004c659:	popf   
   14004c65a:	add    DWORD PTR [rax],eax
   14004c65c:	mov    al,0x9d
   14004c65e:	add    DWORD PTR [rax],eax
   14004c660:	test   al,0x61
   14004c662:	add    al,BYTE PTR [rax]
   14004c664:	mov    al,0x9d
   14004c666:	add    DWORD PTR [rax],eax
   14004c668:	rcr    BYTE PTR [rbp+0x61a80001],1
   14004c66e:	add    al,BYTE PTR [rax]
   14004c670:	rcr    BYTE PTR [rbp-0x6210ffff],1
   14004c676:	add    DWORD PTR [rax],eax
   14004c678:	test   al,0x61
   14004c67a:	add    al,BYTE PTR [rax]
   14004c67c:	lock popf 
   14004c67e:	add    DWORD PTR [rax],eax
   14004c680:	adc    BYTE PTR [rsi+0x61a80001],bl
   14004c686:	add    al,BYTE PTR [rax]
   14004c688:	adc    BYTE PTR [rsi-0x61cfffff],bl
   14004c68e:	add    DWORD PTR [rax],eax
   14004c690:	test   al,0x61
   14004c692:	add    al,BYTE PTR [rax]
   14004c694:	xor    BYTE PTR [rsi-0x61afffff],bl
   14004c69a:	add    DWORD PTR [rax],eax
   14004c69c:	test   al,0x61
   14004c69e:	add    al,BYTE PTR [rax]
   14004c6a0:	push   rax
   14004c6a1:	sahf   
   14004c6a2:	add    DWORD PTR [rax],eax
   14004c6a4:	outs   dx,DWORD PTR ds:[rsi]
   14004c6a5:	sahf   
   14004c6a6:	add    DWORD PTR [rax],eax
   14004c6a8:	test   al,0x61
   14004c6aa:	add    al,BYTE PTR [rax]
   14004c6ac:	jo     0x14004c64c
   14004c6ae:	add    DWORD PTR [rax],eax
   14004c6b0:	mov    WORD PTR [rsi+0x61a80001],ds
   14004c6b6:	add    al,BYTE PTR [rax]
   14004c6b8:	nop
   14004c6b9:	sahf   
   14004c6ba:	add    DWORD PTR [rax],eax
   14004c6bc:	lods   eax,DWORD PTR ds:[rsi]
   14004c6bd:	sahf   
   14004c6be:	add    DWORD PTR [rax],eax
   14004c6c0:	test   al,0x61
   14004c6c2:	add    al,BYTE PTR [rax]
   14004c6c4:	mov    al,0x9e
   14004c6c6:	add    DWORD PTR [rax],eax
   14004c6c8:	int    0x9e
   14004c6ca:	add    DWORD PTR [rax],eax
   14004c6cc:	test   al,0x61
   14004c6ce:	add    al,BYTE PTR [rax]
   14004c6d0:	rcr    BYTE PTR [rsi-0x6112ffff],1
   14004c6d6:	add    DWORD PTR [rax],eax
   14004c6d8:	test   al,0x61
   14004c6da:	add    al,BYTE PTR [rax]
   14004c6dc:	lock sahf 
   14004c6de:	add    DWORD PTR [rax],eax
   14004c6e0:	or     al,0x9f
   14004c6e2:	add    DWORD PTR [rax],eax
   14004c6e4:	test   al,0x61
   14004c6e6:	add    al,BYTE PTR [rax]
   14004c6e8:	adc    BYTE PTR [rdi-0x60d2ffff],bl
   14004c6ee:	add    DWORD PTR [rax],eax
   14004c6f0:	test   al,0x61
   14004c6f2:	add    al,BYTE PTR [rax]
   14004c6f4:	xor    BYTE PTR [rdi-0x60b6ffff],bl
   14004c6fa:	add    DWORD PTR [rax],eax
   14004c6fc:	test   al,0x61
   14004c6fe:	add    al,BYTE PTR [rax]
   14004c700:	push   rax
   14004c701:	lahf   
   14004c702:	add    DWORD PTR [rax],eax
   14004c704:	ins    DWORD PTR es:[rdi],dx
   14004c705:	lahf   
   14004c706:	add    DWORD PTR [rax],eax
   14004c708:	test   al,0x61
   14004c70a:	add    al,BYTE PTR [rax]
   14004c70c:	jo     0x14004c6ad
   14004c70e:	add    DWORD PTR [rax],eax
   14004c710:	lea    ebx,[rdi+0x61a80001]
   14004c716:	add    al,BYTE PTR [rax]
   14004c718:	nop
   14004c719:	lahf   
   14004c71a:	add    DWORD PTR [rax],eax
   14004c71c:	lods   eax,DWORD PTR ds:[rsi]
   14004c71d:	lahf   
   14004c71e:	add    DWORD PTR [rax],eax
   14004c720:	test   al,0x61
   14004c722:	add    al,BYTE PTR [rax]
   14004c724:	mov    al,0x9f
   14004c726:	add    DWORD PTR [rax],eax
   14004c728:	retf   
   14004c729:	lahf   
   14004c72a:	add    DWORD PTR [rax],eax
   14004c72c:	test   al,0x61
   14004c72e:	add    al,BYTE PTR [rax]
   14004c730:	rcr    BYTE PTR [rdi-0x6016ffff],1
   14004c736:	add    DWORD PTR [rax],eax
   14004c738:	test   al,0x61
   14004c73a:	add    al,BYTE PTR [rax]
   14004c73c:	jmp    0x14204c8e0
   14004c741:	movabs al,ds:0xa002000261a80001
   14004c74a:	add    DWORD PTR [rax],eax
   14004c74c:	(bad)  
   14004c74d:	movabs al,ds:0xa01e000261a80001
   14004c756:	add    DWORD PTR [rax],eax
   14004c758:	pop    rbp
   14004c759:	movabs al,ds:0xa05d000261a80001
   14004c762:	add    DWORD PTR [rax],eax
   14004c764:	xchg   DWORD PTR [rax+0x61a80001],esp
   14004c76a:	add    al,BYTE PTR [rax]
   14004c76c:	nop
   14004c76d:	movabs al,ds:0x61a80001a0b10001
   14004c776:	add    al,BYTE PTR [rax]
   14004c778:	add    BYTE PTR [rcx-0x5edeffff],ah
   14004c77e:	add    DWORD PTR [rax],eax
   14004c780:	and    BYTE PTR [rsi],ch
   14004c782:	add    al,BYTE PTR [rax]
   14004c784:	push   rax
   14004c785:	movabs eax,ds:0x2e200001a1710001
   14004c78e:	add    al,BYTE PTR [rax]
   14004c790:	mov    al,0xa1
   14004c792:	add    DWORD PTR [rax],eax
   14004c794:	loop   0x14004c737
   14004c796:	add    DWORD PTR [rax],eax
   14004c798:	and    BYTE PTR [rsi],ch
   14004c79a:	add    al,BYTE PTR [rax]
   14004c79c:	lock movabs eax,ds:0x2e200001a2220001
   14004c7a6:	add    al,BYTE PTR [rax]
   14004c7a8:	xor    BYTE PTR [rdx-0x5d93ffff],ah
   14004c7ae:	add    DWORD PTR [rax],eax
   14004c7b0:	and    BYTE PTR [rsi],ch
   14004c7b2:	add    al,BYTE PTR [rax]

Disassembly of section .rsrc:

000000014004d000 <.rsrc>:
	...
   14004d008:	add    al,0x0
   14004d00a:	add    BYTE PTR [rax],al
   14004d00c:	add    BYTE PTR [rax],al
   14004d00e:	add    DWORD PTR [rax],eax
   14004d010:	sbb    BYTE PTR [rax],al
   14004d012:	add    BYTE PTR [rax],al
   14004d014:	sbb    BYTE PTR [rax],al
   14004d016:	add    BYTE PTR [rax+0x0],al
   14004d01c:	add    BYTE PTR [rax],al
   14004d01e:	add    BYTE PTR [rax],al
   14004d020:	add    al,0x0
   14004d022:	add    BYTE PTR [rax],al
   14004d024:	add    BYTE PTR [rax],al
   14004d026:	add    DWORD PTR [rax],eax
   14004d028:	add    DWORD PTR [rax],eax
   14004d02a:	add    BYTE PTR [rax],al
   14004d02c:	xor    BYTE PTR [rax],al
   14004d02e:	add    BYTE PTR [rax+0x0],al
   14004d034:	add    BYTE PTR [rax],al
   14004d036:	add    BYTE PTR [rax],al
   14004d038:	add    al,0x0
   14004d03a:	add    BYTE PTR [rax],al
   14004d03c:	add    BYTE PTR [rax],al
   14004d03e:	add    DWORD PTR [rax],eax
   14004d040:	or     DWORD PTR [rax+rax*1],eax
   14004d043:	add    BYTE PTR [rax+0x0],cl
   14004d046:	add    BYTE PTR [rax],al
   14004d048:	pop    rax
   14004d049:	rol    BYTE PTR [rax+rax*1],1
   14004d04c:	push   0x3
   14004d04e:	add    BYTE PTR [rax],al
   14004d050:	in     al,0x4
   14004d052:	add    BYTE PTR [rax],al
   14004d054:	add    BYTE PTR [rax],al
   14004d056:	add    BYTE PTR [rax],al
   14004d058:	cmp    al,0x61
   14004d05a:	jae    0x14004d0cf
   14004d05c:	gs ins DWORD PTR es:[rdi],dx
   14004d05e:	(bad)  
   14004d05f:	ins    BYTE PTR es:[rdi],dx
   14004d060:	jns    0x14004d082
   14004d062:	js     0x14004d0d1
   14004d064:	ins    BYTE PTR es:[rdi],dx
   14004d065:	outs   dx,BYTE PTR ds:[rsi]
   14004d066:	jae    0x14004d0a5
   14004d068:	and    dh,BYTE PTR [rbp+0x72]
   14004d06b:	outs   dx,BYTE PTR ds:[rsi]
   14004d06c:	cmp    dh,BYTE PTR [rbx+0x63]
   14004d06f:	push   0x73616d65
   14004d074:	sub    eax,0x7263696d
   14004d079:	outs   dx,DWORD PTR ds:[rsi]
   14004d07a:	jae    0x14004d0eb
   14004d07c:	data16 je 0x14004d0ac
   14004d07f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14004d082:	cmp    ah,BYTE PTR [rcx+0x73]
   14004d085:	ins    DWORD PTR es:[rdi],dx
   14004d086:	cs jbe 0x14004d0ba
   14004d089:	and    ah,BYTE PTR [rax]
   14004d08b:	ins    DWORD PTR es:[rdi],dx
   14004d08c:	(bad)  
   14004d08d:	outs   dx,BYTE PTR ds:[rsi]
   14004d08e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14004d095:	jb     0x14004d10a
   14004d097:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14004d09e:	xor    BYTE PTR [rdx],ah
   14004d0a0:	ds or  eax,0x3c20200a
   14004d0a6:	je     0x14004d11a
   14004d0a8:	jne    0x14004d11d
   14004d0aa:	je     0x14004d0f5
   14004d0ac:	outs   dx,BYTE PTR ds:[rsi]
   14004d0ad:	outs   dx,WORD PTR ds:[rsi]
   14004d0af:	and    BYTE PTR [rax+0x6d],bh
   14004d0b2:	ins    BYTE PTR es:[rdi],dx
   14004d0b3:	outs   dx,BYTE PTR ds:[rsi]
   14004d0b4:	jae    0x14004d0f3
   14004d0b6:	and    dh,BYTE PTR [rbp+0x72]
   14004d0b9:	outs   dx,BYTE PTR ds:[rsi]
   14004d0ba:	cmp    dh,BYTE PTR [rbx+0x63]
   14004d0bd:	push   0x73616d65
   14004d0c2:	sub    eax,0x7263696d
   14004d0c7:	outs   dx,DWORD PTR ds:[rsi]
   14004d0c8:	jae    0x14004d139
   14004d0ca:	data16 je 0x14004d0fa
   14004d0cd:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14004d0d0:	cmp    ah,BYTE PTR [rcx+0x73]
   14004d0d3:	ins    DWORD PTR es:[rdi],dx
   14004d0d4:	cs jbe 0x14004d10a
   14004d0d7:	and    bh,BYTE PTR [rsi]
   14004d0d9:	or     eax,0x2020200a
   14004d0de:	and    BYTE PTR [rbx+rsi*2],bh
   14004d0e1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14004d0e5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14004d0ed:	and    BYTE PTR [rax],ah
   14004d0ef:	and    BYTE PTR [rax],ah
   14004d0f1:	cmp    al,0x72
   14004d0f3:	gs jno 0x14004d16b
   14004d0f6:	gs jae 0x14004d16d
   14004d0f9:	gs fs push rax
   14004d0fc:	jb     0x14004d167
   14004d0fe:	jbe    0x14004d169
   14004d100:	ins    BYTE PTR es:[rdi],dx
   14004d101:	gs addr32 gs jae 0x14004d144
   14004d106:	or     eax,0x2020200a
   14004d10b:	and    BYTE PTR [rax],ah
   14004d10d:	and    BYTE PTR [rax],ah
   14004d10f:	and    BYTE PTR [rdx+rsi*2],bh
   14004d112:	gs jno 0x14004d18a
   14004d115:	gs jae 0x14004d18c
   14004d118:	gs fs rex.RB js 0x14004d182
   14004d11d:	movsxd esi,DWORD PTR [rbp+0x74]
   14004d120:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14004d127:	ins    BYTE PTR es:[rdi],dx
   14004d128:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14004d12c:	gs ins BYTE PTR es:[rdi],dx
   14004d12e:	cmp    eax,0x49736122
   14004d133:	outs   dx,BYTE PTR ds:[rsi]
   14004d134:	jbe    0x14004d1a5
   14004d136:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14004d13a:	and    BYTE PTR [rbp+0x69],dh
   14004d13d:	movsxd esp,DWORD PTR [r11+0x65]
   14004d141:	jae    0x14004d1b6
   14004d143:	cmp    eax,0x6c616622
   14004d148:	jae    0x14004d1af
   14004d14a:	and    bh,BYTE PTR [rsi]
   14004d14c:	cmp    al,0x2f
   14004d14e:	jb     0x14004d1b5
   14004d150:	jno    0x14004d1c7
   14004d152:	gs jae 0x14004d1c9
   14004d155:	gs fs rex.RB js 0x14004d1bf
   14004d15a:	movsxd esi,DWORD PTR [rbp+0x74]
   14004d15d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14004d164:	ins    BYTE PTR es:[rdi],dx
   14004d165:	ds or  eax,0x2020200a
   14004d16b:	and    BYTE PTR [rax],ah
   14004d16d:	and    BYTE PTR [rdi+rbp*1],bh
   14004d170:	jb     0x14004d1d7
   14004d172:	jno    0x14004d1e9
   14004d174:	gs jae 0x14004d1eb
   14004d177:	gs fs push rax
   14004d17a:	jb     0x14004d1e5
   14004d17c:	jbe    0x14004d1e7
   14004d17e:	ins    BYTE PTR es:[rdi],dx
   14004d17f:	gs addr32 gs jae 0x14004d1c2
   14004d184:	or     eax,0x2020200a
   14004d189:	and    BYTE PTR [rdi+rbp*1],bh
   14004d18c:	jae    0x14004d1f3
   14004d18e:	movsxd esi,DWORD PTR [rbp+0x72]
   14004d191:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14004d199:	cmp    al,0x2f
   14004d19b:	je     0x14004d20f
   14004d19d:	jne    0x14004d212
   14004d19f:	je     0x14004d1ea
   14004d1a1:	outs   dx,BYTE PTR ds:[rsi]
   14004d1a2:	outs   dx,WORD PTR ds:[rsi]
   14004d1a4:	ds or  eax,0x3c20200a
   14004d1aa:	fs gs jo 0x14004d213
   14004d1ae:	outs   dx,BYTE PTR ds:[rsi]
   14004d1af:	fs outs dx,BYTE PTR gs:[rsi]
   14004d1b2:	movsxd edi,DWORD PTR [rcx+0x3e]
   14004d1b5:	or     eax,0x2020200a
   14004d1ba:	and    BYTE PTR [rsp+riz*2],bh
   14004d1bd:	gs jo  0x14004d225
   14004d1c0:	outs   dx,BYTE PTR ds:[rsi]
   14004d1c1:	fs outs dx,BYTE PTR gs:[rsi]
   14004d1c4:	je     0x14004d207
   14004d1c6:	jae    0x14004d23b
   14004d1c8:	gs ins DWORD PTR es:[rdi],dx
   14004d1ca:	(bad)  
   14004d1cb:	ins    BYTE PTR es:[rdi],dx
   14004d1cc:	jns    0x14004d20c
   14004d1ce:	or     eax,0x2020200a
   14004d1d3:	and    BYTE PTR [rax],ah
   14004d1d5:	and    BYTE PTR [rcx+riz*2],bh
   14004d1d8:	jae    0x14004d24d
   14004d1da:	gs ins DWORD PTR es:[rdi],dx
   14004d1dc:	(bad)  
   14004d1dd:	ins    BYTE PTR es:[rdi],dx
   14004d1de:	jns    0x14004d229
   14004d1e0:	fs outs dx,BYTE PTR gs:[rsi]
   14004d1e3:	je     0x14004d24e
   14004d1e5:	je     0x14004d260
   14004d1e7:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14004d1eb:	gs cmp eax,0x6e697722
   14004d1f1:	xor    esi,DWORD PTR [rdx]
   14004d1f3:	and    ah,BYTE PTR [rax]
   14004d1f5:	outs   dx,BYTE PTR ds:[rsi]
   14004d1f6:	(bad)  
   14004d1f7:	ins    DWORD PTR es:[rdi],dx
   14004d1f8:	gs cmp eax,0x63694d22
   14004d1fe:	jb     0x14004d26f
   14004d200:	jae    0x14004d271
   14004d202:	data16 je 0x14004d233
   14004d205:	push   rdi
   14004d206:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14004d20d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004d20f:	ins    DWORD PTR es:[rdi],dx
   14004d210:	ins    DWORD PTR es:[rdi],dx
   14004d211:	outs   dx,DWORD PTR ds:[rsi]
   14004d212:	outs   dx,BYTE PTR ds:[rsi]
   14004d213:	sub    eax,0x746e6f43
   14004d218:	jb     0x14004d289
   14004d21a:	ins    BYTE PTR es:[rdi],dx
   14004d21b:	jae    0x14004d23f
   14004d21d:	and    BYTE PTR [rsi+0x65],dh
   14004d220:	jb     0x14004d295
   14004d222:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   14004d229:	xor    BYTE PTR [rsi],ch
   14004d22b:	xor    BYTE PTR [rsi],ch
   14004d22d:	xor    BYTE PTR [rdx],ah
   14004d22f:	and    BYTE PTR [rax+0x75],dh
   14004d232:	(bad)  
   14004d233:	ins    BYTE PTR es:[rdi],dx
   14004d234:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14004d23b:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14004d23f:	and    dh,BYTE PTR [rsi]
   14004d241:	xor    eax,0x36623539
   14004d246:	xor    al,0x31
   14004d248:	xor    al,0x34
   14004d24a:	movsxd esp,DWORD PTR [rbx+0x66]
   14004d24d:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14004d251:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14004d255:	addr32 jne 0x14004d2b9
   14004d258:	addr32 gs cmp eax,0x20222a22
   14004d25f:	jo     0x14004d2d3
   14004d261:	outs   dx,DWORD PTR ds:[rsi]
   14004d262:	movsxd esp,DWORD PTR [rbp+0x73]
   14004d265:	jae    0x14004d2d6
   14004d267:	jb     0x14004d2aa
   14004d269:	jb     0x14004d2ce
   14004d26b:	push   0x63657469
   14004d270:	je     0x14004d2e7
   14004d272:	jb     0x14004d2d9
   14004d274:	cmp    eax,0x3e222a22
   14004d279:	cmp    al,0x2f
   14004d27b:	(bad)  
   14004d27c:	jae    0x14004d2f1
   14004d27e:	gs ins DWORD PTR es:[rdi],dx
   14004d280:	(bad)  
   14004d281:	ins    BYTE PTR es:[rdi],dx
   14004d282:	jns    0x14004d2cd
   14004d284:	fs outs dx,BYTE PTR gs:[rsi]
   14004d287:	je     0x14004d2f2
   14004d289:	je     0x14004d304
   14004d28b:	ds or  eax,0x2020200a
   14004d291:	and    BYTE PTR [rdi+rbp*1],bh
   14004d294:	fs gs jo 0x14004d2fd
   14004d298:	outs   dx,BYTE PTR ds:[rsi]
   14004d299:	fs outs dx,BYTE PTR gs:[rsi]
   14004d29c:	je     0x14004d2df
   14004d29e:	jae    0x14004d313
   14004d2a0:	gs ins DWORD PTR es:[rdi],dx
   14004d2a2:	(bad)  
   14004d2a3:	ins    BYTE PTR es:[rdi],dx
   14004d2a4:	jns    0x14004d2e4
   14004d2a6:	or     eax,0x3c20200a
   14004d2ab:	(bad)  
   14004d2ac:	fs gs jo 0x14004d315
   14004d2b0:	outs   dx,BYTE PTR ds:[rsi]
   14004d2b1:	fs outs dx,BYTE PTR gs:[rsi]
   14004d2b4:	movsxd edi,DWORD PTR [rcx+0x3e]
   14004d2b7:	or     eax,0x3c20200a
   14004d2bc:	fs gs jo 0x14004d325
   14004d2c0:	outs   dx,BYTE PTR ds:[rsi]
   14004d2c1:	fs outs dx,BYTE PTR gs:[rsi]
   14004d2c4:	movsxd edi,DWORD PTR [rcx+0x3e]
   14004d2c7:	or     eax,0x2020200a
   14004d2cc:	and    BYTE PTR [rsp+riz*2],bh
   14004d2cf:	gs jo  0x14004d337
   14004d2d2:	outs   dx,BYTE PTR ds:[rsi]
   14004d2d3:	fs outs dx,BYTE PTR gs:[rsi]
   14004d2d6:	je     0x14004d319
   14004d2d8:	jae    0x14004d34d
   14004d2da:	gs ins DWORD PTR es:[rdi],dx
   14004d2dc:	(bad)  
   14004d2dd:	ins    BYTE PTR es:[rdi],dx
   14004d2de:	jns    0x14004d31e
   14004d2e0:	or     eax,0x2020200a
   14004d2e5:	and    BYTE PTR [rax],ah
   14004d2e7:	and    BYTE PTR [rcx+riz*2],bh
   14004d2ea:	jae    0x14004d35f
   14004d2ec:	gs ins DWORD PTR es:[rdi],dx
   14004d2ee:	(bad)  
   14004d2ef:	ins    BYTE PTR es:[rdi],dx
   14004d2f0:	jns    0x14004d33b
   14004d2f2:	fs outs dx,BYTE PTR gs:[rsi]
   14004d2f5:	je     0x14004d360
   14004d2f7:	je     0x14004d372
   14004d2f9:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14004d2fd:	gs cmp eax,0x6e697722
   14004d303:	xor    esi,DWORD PTR [rdx]
   14004d305:	and    ah,BYTE PTR [rax]
   14004d307:	outs   dx,BYTE PTR ds:[rsi]
   14004d308:	(bad)  
   14004d309:	ins    DWORD PTR es:[rdi],dx
   14004d30a:	gs cmp eax,0x63694d22
   14004d310:	jb     0x14004d381
   14004d312:	jae    0x14004d383
   14004d314:	data16 je 0x14004d345
   14004d317:	push   rsi
   14004d318:	rex.XB cmp DWORD PTR [r8],esi
   14004d31b:	cs rex.XB push r10
   14004d31e:	push   rsp
   14004d31f:	and    ah,BYTE PTR [rax]
   14004d321:	jbe    0x14004d388
   14004d323:	jb     0x14004d398
   14004d325:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e39223d
   14004d32c:	xor    BYTE PTR [rsi],ch
   14004d32e:	xor    dh,BYTE PTR [rcx]
   14004d330:	xor    BYTE PTR [rdx],dh
   14004d332:	xor    ch,BYTE PTR [rsi]
   14004d334:	cmp    BYTE PTR [rdx],ah
   14004d336:	and    BYTE PTR [rax+0x72],dh
   14004d339:	outs   dx,DWORD PTR ds:[rsi]
   14004d33a:	movsxd esp,DWORD PTR [rbp+0x73]
   14004d33d:	jae    0x14004d3ae
   14004d33f:	jb     0x14004d382
   14004d341:	jb     0x14004d3a6
   14004d343:	push   0x63657469
   14004d348:	je     0x14004d3bf
   14004d34a:	jb     0x14004d3b1
   14004d34c:	cmp    eax,0x646d6122
   14004d351:	ss xor al,0x22
   14004d354:	and    BYTE PTR [rax+0x75],dh
   14004d357:	(bad)  
   14004d358:	ins    BYTE PTR es:[rdi],dx
   14004d359:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14004d360:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14004d364:	and    dh,BYTE PTR [rcx]
   14004d366:	movsxd di,DWORD PTR [rax]
   14004d369:	(bad)  
   14004d36b:	(bad)  
   14004d36c:	cmp    DWORD PTR [rcx+0x31],esp
   14004d36f:	xor    DWORD PTR gs:[rax],edi
   14004d372:	xor    esp,DWORD PTR gs:[rdx+0x22]
   14004d376:	ds cmp al,0x2f
   14004d379:	(bad)  
   14004d37a:	jae    0x14004d3ef
   14004d37c:	gs ins DWORD PTR es:[rdi],dx
   14004d37e:	(bad)  
   14004d37f:	ins    BYTE PTR es:[rdi],dx
   14004d380:	jns    0x14004d3cb
   14004d382:	fs outs dx,BYTE PTR gs:[rsi]
   14004d385:	je     0x14004d3f0
   14004d387:	je     0x14004d402
   14004d389:	ds or  eax,0x2020200a
   14004d38f:	and    BYTE PTR [rdi+rbp*1],bh
   14004d392:	fs gs jo 0x14004d3fb
   14004d396:	outs   dx,BYTE PTR ds:[rsi]
   14004d397:	fs outs dx,BYTE PTR gs:[rsi]
   14004d39a:	je     0x14004d3dd
   14004d39c:	jae    0x14004d411
   14004d39e:	gs ins DWORD PTR es:[rdi],dx
   14004d3a0:	(bad)  
   14004d3a1:	ins    BYTE PTR es:[rdi],dx
   14004d3a2:	jns    0x14004d3e2
   14004d3a4:	or     eax,0x3c20200a
   14004d3a9:	(bad)  
   14004d3aa:	fs gs jo 0x14004d413
   14004d3ae:	outs   dx,BYTE PTR ds:[rsi]
   14004d3af:	fs outs dx,BYTE PTR gs:[rsi]
   14004d3b2:	movsxd edi,DWORD PTR [rcx+0x3e]
   14004d3b5:	or     eax,0x612f3c0a
   14004d3ba:	jae    0x14004d42f
   14004d3bc:	gs ins DWORD PTR es:[rdi],dx
   14004d3be:	(bad)  
   14004d3bf:	ins    BYTE PTR es:[rdi],dx
   14004d3c0:	jns    0x14004d400
   14004d3c2:	push   rax
   14004d3c3:	rex.B

Disassembly of section .reloc:

000000014004e000 <.reloc>:
   14004e000:	add    BYTE PTR [rax+0xdc0001],dh
   14004e006:	add    BYTE PTR [rax],al
   14004e008:	mov    eax,0xc8a7c0a7
   14004e00d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e00e:	shl    BYTE PTR [rdi-0x581f5828],1
   14004e014:	call   0x148ace0c0
   14004e019:	test   al,0x0
   14004e01b:	test   eax,0xa918a910
   14004e020:	sub    BYTE PTR [rcx-0x56bf56d0],ch
   14004e026:	test   rax,0xffffffffa960a950
   14004e02c:	push   0xffffffff80a970a9
   14004e031:	test   eax,0xa990a988
   14004e036:	movabs al,ds:0xc8a9c0a9b0a9a8a9
   14004e03f:	test   eax,0xa9e0a9d0
   14004e044:	call   0x140aed0f2
   14004e049:	stos   BYTE PTR es:[rdi],al
   14004e04a:	or     BYTE PTR [rdx-0x55df55f0],ch
   14004e050:	sub    BYTE PTR [rdx-0x55bf55d0],ch
   14004e056:	rex.W stos BYTE PTR es:[rdi],al
   14004e058:	push   rax
   14004e059:	stos   BYTE PTR es:[rdi],al
   14004e05a:	(bad)  
   14004e05b:	stos   BYTE PTR es:[rdi],al
   14004e05c:	push   0x78aa70aa
   14004e061:	stos   BYTE PTR es:[rdi],al
   14004e062:	mov    BYTE PTR [rdx-0x55675570],ch
   14004e068:	movabs al,ds:0xc8aac0aab8aab0aa
   14004e071:	stos   BYTE PTR es:[rdi],al
   14004e072:	shr    BYTE PTR [rdx-0x55175520],1
   14004e078:	lock stos BYTE PTR es:[rdi],al
   14004e07a:	clc    
   14004e07b:	stos   BYTE PTR es:[rdi],al
   14004e07c:	add    BYTE PTR [rbx-0x520f54f8],ch
   14004e082:	clc    
   14004e083:	lods   eax,DWORD PTR ds:[rsi]
   14004e084:	add    BYTE PTR [rsi-0x51ef51f8],ch
   14004e08a:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   14004e090:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   14004e096:	rex.W scas al,BYTE PTR es:[rdi]
   14004e098:	push   rax
   14004e099:	scas   al,BYTE PTR es:[rdi]
   14004e09a:	pop    rax
   14004e09b:	scas   al,BYTE PTR es:[rdi]
   14004e09c:	(bad)  
   14004e09d:	scas   al,BYTE PTR es:[rdi]
   14004e09e:	push   0x78ae70ae
   14004e0a3:	scas   al,BYTE PTR es:[rdi]
   14004e0a4:	sub    BYTE PTR [rsi-0x516f5178],0x98
   14004e0ab:	scas   al,BYTE PTR es:[rdi]
   14004e0ac:	movabs al,ds:0xc0aeb8aeb0aea8ae
   14004e0b5:	scas   al,BYTE PTR es:[rdi]
   14004e0b6:	enter  0xd0ae,0xae
   14004e0ba:	fsubr  DWORD PTR [rsi-0x510f5120]
   14004e0c0:	clc    
   14004e0c1:	scas   al,BYTE PTR es:[rdi]
   14004e0c2:	add    BYTE PTR [rdi-0x50ef50f8],ch
   14004e0c8:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   14004e0ce:	xor    BYTE PTR [rdi-0x50bf50c8],ch
   14004e0d4:	scas   rax,QWORD PTR es:[rdi]
   14004e0d6:	push   rax
   14004e0d7:	scas   eax,DWORD PTR es:[rdi]
   14004e0d8:	pop    rax
   14004e0d9:	scas   eax,DWORD PTR es:[rdi]
   14004e0da:	add    BYTE PTR [rax],al
   14004e0dc:	add    al,al
   14004e0de:	add    DWORD PTR [rax],eax
   14004e0e0:	jo     0x14004e0e2
   14004e0e2:	add    BYTE PTR [rax],al
   14004e0e4:	shl    BYTE PTR [rax+rdx*8-0x175b275c],0xa4
   14004e0ec:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e0ee:	add    BYTE PTR [rbp-0x5aef5af8],ah
   14004e0f4:	and    BYTE PTR [rbp-0x5acf5ad8],ah
   14004e0fa:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e0fc:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14004e0fe:	push   rax
   14004e0ff:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e100:	(bad)  
   14004e101:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e102:	push   0xffffffff80a570a5
   14004e107:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e108:	mov    BYTE PTR [rbp-0x5a5f5a70],ah
   14004e10e:	test   al,0xa5
   14004e110:	mov    al,0xa5
   14004e112:	shl    BYTE PTR [rbp-0x5a2f5a38],0xe0
   14004e119:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e11a:	call   0x140aad1c4
   14004e11f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004e120:	or     BYTE PTR [rsi-0x59df59f0],ah
   14004e126:	sub    BYTE PTR [rsi-0x59c759d0],ah
   14004e12c:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004e12e:	push   rax
   14004e12f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004e130:	pop    rax
   14004e131:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004e132:	(bad)  
   14004e133:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004e134:	jo     0x14004e0dc
   14004e136:	js     0x14004e0de
   14004e138:	and    BYTE PTR [rsi-0x596f5978],0xa0
   14004e13f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004e140:	test   al,0xa6
   14004e142:	mov    al,0xa6
   14004e144:	mov    eax,0xc8a6c0a6
   14004e149:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004e14a:	add    BYTE PTR [rax],al
   14004e14c:	add    al,dl
   14004e14e:	add    DWORD PTR [rax],eax
   14004e150:	xor    BYTE PTR [rcx],al
   14004e152:	add    BYTE PTR [rax],al
   14004e154:	xor    BYTE PTR [rax-0x5fb75fc0],ah
   14004e15a:	pop    rax
   14004e15b:	movabs al,ds:0xa080a078a070a060
   14004e164:	nop
   14004e165:	movabs al,ds:0xa0b8a0b0a0a0a098
   14004e16e:	shl    BYTE PTR [rax-0x5f275f30],0xe0
   14004e175:	movabs al,ds:0xa110a100a0f8a0f0
   14004e17e:	sbb    BYTE PTR [rcx-0x5ecf5ee0],ah
   14004e184:	cmp    BYTE PTR [rcx-0x5eaf5ec0],ah
   14004e18a:	pop    rax
   14004e18b:	movabs eax,ds:0xa180a178a170a160
   14004e194:	nop
   14004e195:	movabs eax,ds:0xa1b8a1a8a1a0a198
   14004e19e:	shl    BYTE PTR [rcx-0x5e2f5e38],0xe0
   14004e1a5:	movabs eax,ds:0xa200a1f8a1f0a1e8
   14004e1ae:	adc    BYTE PTR [rdx-0x5ddf5de8],ah
   14004e1b4:	sub    BYTE PTR [rdx-0x5dc75dd0],ah
   14004e1ba:	(bad)  
   14004e1bb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e1bc:	jo     0x14004e165
   14004e1be:	js     0x14004e167
   14004e1c0:	mov    BYTE PTR [rdi-0x585f5870],ah
   14004e1c6:	test   al,0xa7
   14004e1c8:	mov    al,0xa7
   14004e1ca:	shl    BYTE PTR [rdi-0x582f5838],0xe0
   14004e1d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e1d2:	call   0x140acd27e
   14004e1d7:	test   al,0x8
   14004e1d9:	test   al,0x10
   14004e1db:	test   al,0x20
   14004e1dd:	test   al,0x28
   14004e1df:	test   al,0x30
   14004e1e1:	test   al,0x40
   14004e1e3:	test   al,0x48
   14004e1e5:	test   al,0x50
   14004e1e7:	test   al,0x60
   14004e1e9:	test   al,0x68
   14004e1eb:	test   al,0x70
   14004e1ed:	test   al,0x80
   14004e1ef:	test   al,0x88
   14004e1f1:	test   al,0x90
   14004e1f3:	test   al,0xa0
   14004e1f5:	test   al,0xa8
   14004e1f7:	test   al,0xb0
   14004e1f9:	test   al,0xc0
   14004e1fb:	test   al,0xc8
   14004e1fd:	test   al,0xd0
   14004e1ff:	test   al,0xd8
   14004e201:	test   al,0xe8
   14004e203:	test   al,0xf0
   14004e205:	test   al,0xf8
   14004e207:	test   al,0x0
   14004e209:	test   eax,0xa918a910
   14004e20e:	and    BYTE PTR [rcx-0x56cf56d8],ch
   14004e214:	rex test eax,0xa950a948
   14004e21a:	pop    rax
   14004e21b:	test   eax,0xa968a960
   14004e220:	js     0x14004e1cf
   14004e222:	sub    BYTE PTR [rbp-0x526f5278],0x98
   14004e229:	lods   eax,DWORD PTR ds:[rsi]
   14004e22a:	movabs al,ds:0xc8adc0adb8adb0ad
   14004e233:	lods   eax,DWORD PTR ds:[rsi]
   14004e234:	shr    BYTE PTR [rbp-0x521f5228],1
   14004e23a:	call   0x138b2d2ec
   14004e23f:	lods   eax,DWORD PTR ds:[rsi]
   14004e240:	add    BYTE PTR [rsi-0x51ef51f8],ch
   14004e246:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   14004e24c:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   14004e252:	push   rax
   14004e253:	scas   al,BYTE PTR es:[rdi]
   14004e254:	pop    rax
   14004e255:	scas   al,BYTE PTR es:[rdi]
   14004e256:	(bad)  
   14004e257:	scas   al,BYTE PTR es:[rdi]
   14004e258:	push   0x78ae70ae
   14004e25d:	scas   al,BYTE PTR es:[rdi]
   14004e25e:	sub    BYTE PTR [rsi-0x516f5178],0x98
   14004e265:	scas   al,BYTE PTR es:[rdi]
   14004e266:	movabs al,ds:0xc0aeb8aeb0aea8ae
   14004e26f:	scas   al,BYTE PTR es:[rdi]
   14004e270:	enter  0xd0ae,0xae
   14004e274:	fsubr  DWORD PTR [rsi-0x51175120]
   14004e27a:	add    BYTE PTR [rax],al
   14004e27c:	add    al,ah
   14004e27e:	add    DWORD PTR [rax],eax
   14004e280:	enter  0x0,0x0
   14004e284:	nop
   14004e285:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004e286:	movabs al,ds:0xd0a6c0a6b8a6a8a6
   14004e28f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004e290:	fsub   DWORD PTR [rsi-0x590f5920]
   14004e296:	clc    
   14004e297:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004e298:	add    BYTE PTR [rdi-0x58e758f0],ah
   14004e29e:	and    BYTE PTR [rdi-0x58c758d0],ah
   14004e2a4:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e2a6:	push   rax
   14004e2a7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e2a8:	pop    rax
   14004e2a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e2aa:	(bad)  
   14004e2ab:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e2ac:	jo     0x14004e255
   14004e2ae:	js     0x14004e257
   14004e2b0:	and    BYTE PTR [rdi-0x58675870],0xa0
   14004e2b7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e2b8:	mov    al,0xa7
   14004e2ba:	mov    eax,0xd0a7c0a7
   14004e2bf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e2c0:	fsub   DWORD PTR [rdi-0x580f5820]
   14004e2c6:	clc    
   14004e2c7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e2c8:	add    BYTE PTR [rax-0x57e757f8],ch
   14004e2ce:	and    BYTE PTR [rax-0x57cf57d8],ch
   14004e2d4:	test   al,0x48
   14004e2d7:	test   al,0x50
   14004e2d9:	test   al,0x58
   14004e2db:	test   al,0x60
   14004e2dd:	test   al,0x70
   14004e2df:	test   al,0x78
   14004e2e1:	test   al,0x80
   14004e2e3:	test   al,0x88
   14004e2e5:	test   al,0x90
   14004e2e7:	test   al,0x98
   14004e2e9:	test   al,0x20
   14004e2eb:	scas   al,BYTE PTR es:[rdi]
   14004e2ec:	xor    BYTE PTR [rsi-0x51b751c8],ch
   14004e2f2:	push   rax
   14004e2f3:	scas   al,BYTE PTR es:[rdi]
   14004e2f4:	(bad)  
   14004e2f5:	scas   al,BYTE PTR es:[rdi]
   14004e2f6:	push   0xffffffff80ae70ae
   14004e2fb:	scas   al,BYTE PTR es:[rdi]
   14004e2fc:	mov    BYTE PTR [rsi-0x515f5170],ch
   14004e302:	test   al,0xae
   14004e304:	mov    al,0xae
   14004e306:	shr    BYTE PTR [rsi-0x512f5138],0xe0
   14004e30d:	scas   al,BYTE PTR es:[rdi]
   14004e30e:	call   0x140b3d3c1
   14004e313:	scas   eax,DWORD PTR es:[rdi]
   14004e314:	or     BYTE PTR [rdi-0x50df50f0],ch
   14004e31a:	sub    BYTE PTR [rdi-0x50bf50d0],ch
   14004e320:	scas   rax,QWORD PTR es:[rdi]
   14004e322:	push   rax
   14004e323:	scas   eax,DWORD PTR es:[rdi]
   14004e324:	(bad)  
   14004e325:	scas   eax,DWORD PTR es:[rdi]
   14004e326:	push   0xffffffff80af70af
   14004e32b:	scas   eax,DWORD PTR es:[rdi]
   14004e32c:	mov    BYTE PTR [rdi-0x50675070],ch
   14004e332:	test   al,0xaf
   14004e334:	mov    al,0xaf
   14004e336:	mov    eax,0xd0afc0af
   14004e33b:	scas   eax,DWORD PTR es:[rdi]
   14004e33c:	fsubr  DWORD PTR [rdi-0x50175020]
   14004e342:	lock scas eax,DWORD PTR es:[rdi]
   14004e344:	add    al,dh
   14004e346:	add    DWORD PTR [rax],eax
   14004e348:	jl     0x14004e34a
   14004e34a:	add    BYTE PTR [rax],al
   14004e34c:	add    BYTE PTR [rax-0x5fef5ff8],ah
   14004e352:	sbb    BYTE PTR [rax-0x5fd75fe0],ah
   14004e358:	xor    BYTE PTR [rbx-0x5cb75cc0],ah
   14004e35e:	pop    rax
   14004e35f:	movabs ds:0xa380a378a370a360,eax
   14004e368:	nop
   14004e369:	movabs ds:0xa3b8a3b0a3a0a398,eax
   14004e372:	shl    BYTE PTR [rbx-0x5c275c30],0xe0
   14004e379:	movabs ds:0xa410a400a3f8a3f0,eax
   14004e382:	sbb    BYTE PTR [rax+riz*1+0x38a430a4],ah
   14004e389:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e38a:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e38c:	push   rax
   14004e38d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e38e:	pop    rax
   14004e38f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e390:	(bad)  
   14004e391:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e392:	jo     0x14004e338
   14004e394:	js     0x14004e33a
   14004e396:	and    BYTE PTR [rax+rdx*4-0x5f5b675c],0xa4
   14004e39e:	test   al,0xa4
   14004e3a0:	mov    eax,0xc8a4c0a4
   14004e3a5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e3a6:	shl    BYTE PTR [rax+riz*8-0xf5b175c],1
   14004e3ad:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e3ae:	clc    
   14004e3af:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e3b0:	add    BYTE PTR [rbp-0x5ae75af0],ah
   14004e3b6:	and    BYTE PTR [rbp-0x5acf5ad8],ah
   14004e3bc:	cmp    BYTE PTR [rbp+0x0],ah
   14004e3c2:	add    al,BYTE PTR [rax]
   14004e3c4:	and    BYTE PTR [rcx],al
   14004e3c6:	add    BYTE PTR [rax],al
   14004e3c8:	adc    BYTE PTR [rax-0x5fd75fe0],ah
   14004e3ce:	cmp    BYTE PTR [rax-0x5faf5fc0],ah
   14004e3d4:	pop    rax
   14004e3d5:	movabs al,ds:0xa080a078a070a060
   14004e3de:	nop
   14004e3df:	movabs al,ds:0xa0b8a0b0a0a0a098
   14004e3e8:	shl    BYTE PTR [rax-0x5f275f30],0xe0
   14004e3ef:	movabs al,ds:0xa110a100a0f8a0f0
   14004e3f8:	sbb    BYTE PTR [rcx-0x5ecf5ee0],ah
   14004e3fe:	cmp    BYTE PTR [rcx-0x5eaf5ec0],ah
   14004e404:	pop    rax
   14004e405:	movabs eax,ds:0xa180a178a170a160
   14004e40e:	mov    BYTE PTR [rcx-0x5e5f5e68],ah
   14004e414:	test   al,0xa1
   14004e416:	mov    al,0xa1
   14004e418:	shl    BYTE PTR [rcx-0x5e2f5e38],0xd8
   14004e41f:	movabs eax,ds:0xa200a1f8a1f0a1e0
   14004e428:	or     BYTE PTR [rdx-0x5de75df0],ah
   14004e42e:	shl    BYTE PTR [rax+rcx*8-0x1f5b275c],0xa4
   14004e436:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e438:	clc    
   14004e439:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e43a:	add    BYTE PTR [rbp-0x5aef5af8],ah
   14004e440:	and    BYTE PTR [rbp-0x5ac75ad8],ah
   14004e446:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e448:	push   rax
   14004e449:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e44a:	pop    rax
   14004e44b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e44c:	push   0xffffffff80a570a5
   14004e451:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e452:	mov    BYTE PTR [rbp-0x5a5f5a68],ah
   14004e458:	mov    al,0xa5
   14004e45a:	mov    eax,0xd0a5c8a5
   14004e45f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e460:	loopne 0x14004e407
   14004e462:	call   0x140aadd0c
   14004e467:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004e468:	adc    BYTE PTR [rsi-0x59d759e8],ah
   14004e46e:	xor    BYTE PTR [rsi-0x58df58f0],ah
   14004e474:	sub    BYTE PTR [rdi-0x58bf58c8],ah
   14004e47a:	push   rax
   14004e47b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e47c:	pop    rax
   14004e47d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e47e:	(bad)  
   14004e47f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e480:	jo     0x14004e429
   14004e482:	js     0x14004e42b
   14004e484:	and    BYTE PTR [rdi-0x58675870],0xa0
   14004e48b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e48c:	mov    al,0xa7
   14004e48e:	mov    eax,0xd0a7c0a7
   14004e493:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e494:	fsub   DWORD PTR [rdi-0x580f5820]
   14004e49a:	clc    
   14004e49b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e49c:	add    BYTE PTR [rax-0x57e757f0],ch
   14004e4a2:	and    BYTE PTR [rax-0x57c757d0],ch
   14004e4a8:	test   al,0x50
   14004e4ab:	test   al,0x58
   14004e4ad:	test   al,0x60
   14004e4af:	test   al,0x70
   14004e4b1:	test   al,0x78
   14004e4b3:	test   al,0x80
   14004e4b5:	test   al,0x88
   14004e4b7:	test   al,0x98
   14004e4b9:	test   al,0xa0
   14004e4bb:	test   al,0xa8
   14004e4bd:	test   al,0xb0
   14004e4bf:	test   al,0xc0
   14004e4c1:	test   al,0xc8
   14004e4c3:	test   al,0xd0
   14004e4c5:	test   al,0xd8
   14004e4c7:	test   al,0xe0
   14004e4c9:	test   al,0xf0
   14004e4cb:	test   al,0xf8
   14004e4cd:	test   al,0x0
   14004e4cf:	test   eax,0xa910a908
   14004e4d4:	sbb    BYTE PTR [rcx-0x53cf53d8],ch
   14004e4da:	cmp    BYTE PTR [rax+rax*2+0xac],ch
   14004e4e1:	nop
   14004e4e2:	add    al,BYTE PTR [rax]
   14004e4e4:	cmp    BYTE PTR [rax],al
   14004e4e6:	add    BYTE PTR [rax],al
   14004e4e8:	add    BYTE PTR [rax-0x5fd75ff8],ah
   14004e4ee:	pop    rax
   14004e4ef:	movabs al,ds:0xa108a0d8a0b0a088
   14004e4f8:	cmp    BYTE PTR [rcx-0x5e975ea0],ah
   14004e4fe:	jo     0x14004e4a1
   14004e500:	js     0x14004e4a3
   14004e502:	cwde   
   14004e503:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   14004e50c:	shl    BYTE PTR [rcx-0x5e275e30],0xe0
   14004e513:	movabs eax,ds:0xa200a1f8
	...
