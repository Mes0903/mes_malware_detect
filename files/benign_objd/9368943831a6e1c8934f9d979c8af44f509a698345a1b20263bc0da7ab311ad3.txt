
9368943831a6e1c8934f9d979c8af44f509a698345a1b20263bc0da7ab311ad3.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rax,[rip+0x79]        # 0x140001080
   140001007:	mov    QWORD PTR [rip+0x465a],rax        # 0x140005668
   14000100e:	lea    rax,[rip+0x17b]        # 0x140001190
   140001015:	mov    QWORD PTR [rip+0x4644],rax        # 0x140005660
   14000101c:	lea    rax,[rip+0x1bd]        # 0x1400011e0
   140001023:	mov    QWORD PTR [rip+0x462e],rax        # 0x140005658
   14000102a:	ret    
   14000102b:	int3   
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	int3   
   140001031:	int3   
   140001032:	int3   
   140001033:	int3   
   140001034:	int3   
   140001035:	int3   
   140001036:	int3   
   140001037:	int3   
   140001038:	xor    r9d,r9d
   14000103b:	lea    rdx,[rip+0x22a6]        # 0x1400032e8
   140001042:	xor    r8d,r8d
   140001045:	xor    ecx,ecx
   140001047:	rex.W jmp QWORD PTR [rip+0x1fb2]        # 0x140003000
   14000104e:	int3   
   14000104f:	int3   
   140001050:	int3   
   140001051:	int3   
   140001052:	int3   
   140001053:	int3   
   140001054:	int3   
   140001055:	int3   
   140001056:	int3   
   140001057:	int3   
   140001058:	int3   
   140001059:	int3   
   14000105a:	int3   
   14000105b:	int3   
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	mov    DWORD PTR [rip+0x45ee],ecx        # 0x140005654
   140001066:	mov    eax,0x1
   14000106b:	ret    
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	int3   
   140001071:	int3   
   140001072:	int3   
   140001073:	int3   
   140001074:	int3   
   140001075:	int3   
   140001076:	int3   
   140001077:	int3   
   140001078:	int3   
   140001079:	int3   
   14000107a:	int3   
   14000107b:	int3   
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	mov    QWORD PTR [rsp+0x8],rbx
   140001085:	push   rsi
   140001086:	sub    rsp,0x150
   14000108d:	mov    rax,QWORD PTR [rip+0x3f74]        # 0x140005008
   140001094:	xor    rax,rsp
   140001097:	mov    QWORD PTR [rsp+0x140],rax
   14000109f:	mov    al,BYTE PTR [rip+0x45ab]        # 0x140005650
   1400010a5:	lea    rsi,[rip+0x4564]        # 0x140005610
   1400010ac:	test   al,al
   1400010ae:	jne    0x140001164
   1400010b4:	mov    ebx,0x40
   1400010b9:	xor    edx,edx
   1400010bb:	mov    r8d,ebx
   1400010be:	mov    rcx,rsi
   1400010c1:	call   0x1400022d6
   1400010c6:	and    QWORD PTR [rsp+0x20],0x0
   1400010cc:	lea    r8,[rsp+0x20]
   1400010d1:	lea    rdx,[rip+0xffffffffffffff88]        # 0x140001060
   1400010d8:	lea    ecx,[rbx-0x3a]
   1400010db:	call   QWORD PTR [rip+0x1f57]        # 0x140003038
   1400010e1:	test   eax,eax
   1400010e3:	je     0x14000115d
   1400010e5:	mov    rcx,QWORD PTR [rsp+0x20]
   1400010ea:	lea    rdx,[rsp+0x30]
   1400010ef:	mov    r8d,0x104
   1400010f5:	call   QWORD PTR [rip+0x1f2d]        # 0x140003028
   1400010fb:	test   eax,eax
   1400010fd:	je     0x14000115d
   1400010ff:	lea    rcx,[rsp+0x30]
   140001104:	or     rax,0xffffffffffffffff
   140001108:	inc    rax
   14000110b:	cmp    BYTE PTR [rcx+rax*1],0x0
   14000110f:	jne    0x140001108
   140001111:	lea    rdx,[rsp+0x30]
   140001116:	add    rdx,rax
   140001119:	jmp    0x140001124
   14000111b:	cmp    BYTE PTR [rdx-0x1],0x5c
   14000111f:	je     0x14000112e
   140001121:	dec    rdx
   140001124:	lea    rax,[rsp+0x30]
   140001129:	cmp    rdx,rax
   14000112c:	ja     0x14000111b
   14000112e:	mov    rcx,rsi
   140001131:	sub    rdx,rsi
   140001134:	lea    rax,[rbx+0x7fffffbe]
   14000113b:	test   rax,rax
   14000113e:	je     0x140001152
   140001140:	mov    al,BYTE PTR [rdx+rcx*1]
   140001143:	test   al,al
   140001145:	je     0x140001152
   140001147:	mov    BYTE PTR [rcx],al
   140001149:	inc    rcx
   14000114c:	sub    rbx,0x1
   140001150:	jne    0x140001134
   140001152:	test   rbx,rbx
   140001155:	jne    0x14000115a
   140001157:	dec    rcx
   14000115a:	mov    BYTE PTR [rcx],0x0
   14000115d:	mov    BYTE PTR [rip+0x44ec],0x1        # 0x140005650
   140001164:	mov    rax,rsi
   140001167:	mov    rcx,QWORD PTR [rsp+0x140]
   14000116f:	xor    rcx,rsp
   140001172:	call   0x140001d30
   140001177:	mov    rbx,QWORD PTR [rsp+0x160]
   14000117f:	add    rsp,0x150
   140001186:	pop    rsi
   140001187:	ret    
   140001188:	int3   
   140001189:	int3   
   14000118a:	int3   
   14000118b:	int3   
   14000118c:	int3   
   14000118d:	int3   
   14000118e:	int3   
   14000118f:	int3   
   140001190:	rex push rbx
   140001192:	sub    rsp,0x20
   140001196:	lea    rcx,[rip+0x20e3]        # 0x140003280
   14000119d:	call   QWORD PTR [rip+0x1e9d]        # 0x140003040
   1400011a3:	test   rax,rax
   1400011a6:	je     0x1400011cb
   1400011a8:	lea    rdx,[rip+0x20e9]        # 0x140003298
   1400011af:	mov    rcx,rax
   1400011b2:	call   QWORD PTR [rip+0x1e68]        # 0x140003020
   1400011b8:	mov    rbx,rax
   1400011bb:	test   rax,rax
   1400011be:	je     0x1400011cb
   1400011c0:	mov    rcx,rax
   1400011c3:	call   QWORD PTR [rip+0x201f]        # 0x1400031e8
   1400011c9:	call   rbx
   1400011cb:	add    rsp,0x20
   1400011cf:	pop    rbx
   1400011d0:	ret    
   1400011d1:	int3   
   1400011d2:	int3   
   1400011d3:	int3   
   1400011d4:	int3   
   1400011d5:	int3   
   1400011d6:	int3   
   1400011d7:	int3   
   1400011d8:	int3   
   1400011d9:	int3   
   1400011da:	int3   
   1400011db:	int3   
   1400011dc:	int3   
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400011e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400011ea:	push   rdi
   1400011eb:	sub    rsp,0x20
   1400011ef:	mov    rdi,QWORD PTR [rip+0x4402]        # 0x1400055f8
   1400011f6:	xor    ebx,ebx
   1400011f8:	mov    esi,ecx
   1400011fa:	test   rdi,rdi
   1400011fd:	jne    0x140001246
   1400011ff:	mov    rax,QWORD PTR [rip+0x43fa]        # 0x140005600
   140001206:	test   rax,rax
   140001209:	jne    0x140001227
   14000120b:	xor    edx,edx
   14000120d:	lea    rcx,[rip+0x206c]        # 0x140003280
   140001214:	mov    r8d,0x800
   14000121a:	call   QWORD PTR [rip+0x1e10]        # 0x140003030
   140001220:	mov    QWORD PTR [rip+0x43d9],rax        # 0x140005600
   140001227:	lea    rdx,[rip+0x208a]        # 0x1400032b8
   14000122e:	mov    rcx,rax
   140001231:	call   QWORD PTR [rip+0x1de9]        # 0x140003020
   140001237:	mov    QWORD PTR [rip+0x43ba],rax        # 0x1400055f8
   14000123e:	mov    rdi,rax
   140001241:	test   rax,rax
   140001244:	je     0x140001255
   140001246:	mov    rcx,rdi
   140001249:	call   QWORD PTR [rip+0x1f99]        # 0x1400031e8
   14000124f:	mov    ecx,esi
   140001251:	call   rdi
   140001253:	mov    ebx,eax
   140001255:	mov    rsi,QWORD PTR [rsp+0x38]
   14000125a:	mov    eax,ebx
   14000125c:	mov    rbx,QWORD PTR [rsp+0x30]
   140001261:	add    rsp,0x20
   140001265:	pop    rdi
   140001266:	ret    
   140001267:	int3   
   140001268:	int3   
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	mov    QWORD PTR [rsp+0x8],rbx
   140001275:	push   rdi
   140001276:	sub    rsp,0x30
   14000127a:	xor    ebx,ebx
   14000127c:	mov    r10,r9
   14000127f:	mov    rdi,rcx
   140001282:	test   edx,edx
   140001284:	je     0x1400012f7
   140001286:	cmp    edx,0x3
   140001289:	je     0x1400012d2
   14000128b:	cmp    edx,0x6
   14000128e:	jne    0x140001373
   140001294:	mov    rax,QWORD PTR [rsp+0x60]
   140001299:	mov    ecx,DWORD PTR [rax]
   14000129b:	sub    r8d,0x9102
   1400012a2:	je     0x1400012b5
   1400012a4:	cmp    r8d,0x1
   1400012a8:	je     0x1400012ae
   1400012aa:	mov    eax,ebx
   1400012ac:	jmp    0x1400012ba
   1400012ae:	mov    eax,0x1
   1400012b3:	jmp    0x1400012ba
   1400012b5:	mov    eax,0x2
   1400012ba:	cmp    eax,ecx
   1400012bc:	mov    edx,0x46f
   1400012c1:	mov    r8d,0x9100
   1400012c7:	setne  bl
   1400012ca:	mov    r9,rbx
   1400012cd:	jmp    0x14000136a
   1400012d2:	mov    eax,0x1
   1400012d7:	lea    rdx,[rip+0x1ffa]        # 0x1400032d8
   1400012de:	mov    DWORD PTR [rsp+0x28],eax
   1400012e2:	xor    r9d,r9d
   1400012e5:	mov    r8,r10
   1400012e8:	mov    QWORD PTR [rsp+0x20],rbx
   1400012ed:	xor    ecx,ecx
   1400012ef:	call   QWORD PTR [rip+0x1d5b]        # 0x140003050
   1400012f5:	jmp    0x140001373
   1400012f7:	mov    eax,0x1
   1400012fc:	test   BYTE PTR [rip+0x437e],al        # 0x140005680
   140001302:	je     0x140001309
   140001304:	call   0x140001038
   140001309:	xor    r9d,r9d
   14000130c:	mov    edx,0x46f
   140001311:	mov    r8d,0x9100
   140001317:	mov    rcx,rdi
   14000131a:	call   QWORD PTR [rip+0x1d40]        # 0x140003060
   140001320:	lea    r9,[rsp+0x48]
   140001325:	mov    DWORD PTR [rsp+0x48],ebx
   140001329:	call   0x140001824
   14000132e:	test   eax,eax
   140001330:	js     0x140001373
   140001332:	mov    ebx,0x470
   140001337:	xor    r9d,r9d
   14000133a:	mov    edx,ebx
   14000133c:	mov    r8d,0x9102
   140001342:	mov    rcx,rdi
   140001345:	call   QWORD PTR [rip+0x1d15]        # 0x140003060
   14000134b:	xor    r9d,r9d
   14000134e:	mov    r8d,0x9103
   140001354:	mov    edx,ebx
   140001356:	mov    rcx,rdi
   140001359:	call   QWORD PTR [rip+0x1d01]        # 0x140003060
   14000135f:	xor    r9d,r9d
   140001362:	mov    r8d,0x9104
   140001368:	mov    edx,ebx
   14000136a:	mov    rcx,rdi
   14000136d:	call   QWORD PTR [rip+0x1ced]        # 0x140003060
   140001373:	xor    eax,eax
   140001375:	mov    rbx,QWORD PTR [rsp+0x40]
   14000137a:	add    rsp,0x30
   14000137e:	pop    rdi
   14000137f:	ret    
   140001380:	int3   
   140001381:	int3   
   140001382:	int3   
   140001383:	int3   
   140001384:	int3   
   140001385:	int3   
   140001386:	int3   
   140001387:	int3   
   140001388:	mov    QWORD PTR [rsp+0x10],rbx
   14000138d:	mov    QWORD PTR [rsp+0x18],rsi
   140001392:	push   rbp
   140001393:	push   rdi
   140001394:	push   r14
   140001396:	lea    rbp,[rsp-0x20]
   14000139b:	sub    rsp,0x120
   1400013a2:	mov    rax,QWORD PTR [rip+0x3c5f]        # 0x140005008
   1400013a9:	xor    rax,rsp
   1400013ac:	mov    QWORD PTR [rbp+0x18],rax
   1400013b0:	mov    r14d,0x9104
   1400013b6:	mov    DWORD PTR [rsp+0x30],0x9100
   1400013be:	mov    DWORD PTR [rbp+0x8],r14d
   1400013c2:	mov    rbx,rcx
   1400013c5:	mov    QWORD PTR [rsp+0x34],0x9114
   1400013ce:	mov    DWORD PTR [rsp+0x3c],0x9101
   1400013d6:	mov    QWORD PTR [rsp+0x40],0x9115
   1400013df:	mov    DWORD PTR [rbp-0x10],0x9102
   1400013e6:	mov    QWORD PTR [rbp-0xc],0x9120
   1400013ee:	mov    DWORD PTR [rbp-0x4],0x9103
   1400013f5:	mov    QWORD PTR [rbp+0x0],0x9121
   1400013fd:	mov    QWORD PTR [rbp+0xc],0x9122
   140001405:	call   0x140001574
   14000140a:	xor    edx,edx
   14000140c:	mov    DWORD PTR [rsp+0x2c],eax
   140001410:	mov    r8d,0x9c
   140001416:	mov    DWORD PTR [rsp+0x50],0xa0
   14000141e:	lea    rcx,[rsp+0x54]
   140001423:	mov    edi,eax
   140001425:	call   0x1400022d6
   14000142a:	xor    esi,esi
   14000142c:	mov    QWORD PTR [rsp+0x5c],rbx
   140001431:	lea    rax,[rip+0xfffffffffffffe38]        # 0x140001270
   140001438:	mov    QWORD PTR [rsp+0x54],rsi
   14000143d:	mov    QWORD PTR [rbp-0x24],rax
   140001441:	lea    r9,[rsp+0x28]
   140001446:	lea    rax,[rsp+0x2c]
   14000144b:	mov    DWORD PTR [rsp+0x64],0x9
   140001453:	mov    QWORD PTR [rbp-0x1c],rax
   140001457:	lea    ebx,[rsi+0x2]
   14000145a:	lea    rax,[rsp+0x30]
   14000145f:	mov    DWORD PTR [rbp-0x74],ebx
   140001462:	mov    QWORD PTR [rbp-0x70],rax
   140001466:	lea    rax,[rbp-0x10]
   14000146a:	mov    QWORD PTR [rbp-0x60],rax
   14000146e:	lea    eax,[rdi-0x1]
   140001471:	neg    eax
   140001473:	mov    DWORD PTR [rbp-0x68],0x9100
   14000147a:	mov    DWORD PTR [rbp-0x64],0x3
   140001481:	sbb    ecx,ecx
   140001483:	mov    QWORD PTR [rsp+0x6c],0x9110
   14000148c:	add    ecx,0x9103
   140001492:	mov    DWORD PTR [rsp+0x28],esi
   140001496:	test   edi,edi
   140001498:	cmove  ecx,r14d
   14000149c:	mov    DWORD PTR [rbp-0x58],ecx
   14000149f:	call   0x140001824
   1400014a4:	test   eax,eax
   1400014a6:	mov    QWORD PTR [rbp-0x7c],0x9113
   1400014ae:	mov    ecx,esi
   1400014b0:	mov    QWORD PTR [rbp-0x2c],0x9130
   1400014b8:	setns  cl
   1400014bb:	mov    DWORD PTR [rbp-0x14],0xf0
   1400014c2:	add    rcx,0x9111
   1400014c9:	lea    r8,[rsp+0x20]
   1400014ce:	mov    QWORD PTR [rsp+0x7c],rcx
   1400014d3:	lea    rdx,[rsp+0x24]
   1400014d8:	lea    rcx,[rsp+0x50]
   1400014dd:	xor    r9d,r9d
   1400014e0:	call   QWORD PTR [rip+0x1b2a]        # 0x140003010
   1400014e6:	test   eax,eax
   1400014e8:	js     0x140001512
   1400014ea:	cmp    DWORD PTR [rsp+0x24],0x9100
   1400014f2:	jne    0x140001512
   1400014f4:	cmp    DWORD PTR [rsp+0x20],0x9103
   1400014fc:	sete   sil
   140001500:	cmp    DWORD PTR [rsp+0x20],0x9102
   140001508:	cmove  esi,ebx
   14000150b:	mov    ecx,esi
   14000150d:	call   0x140001688
   140001512:	mov    rcx,QWORD PTR [rbp+0x18]
   140001516:	xor    rcx,rsp
   140001519:	call   0x140001d30
   14000151e:	lea    r11,[rsp+0x120]
   140001526:	mov    rbx,QWORD PTR [r11+0x28]
   14000152a:	mov    rsi,QWORD PTR [r11+0x30]
   14000152e:	mov    rsp,r11
   140001531:	pop    r14
   140001533:	pop    rdi
   140001534:	pop    rbp
   140001535:	ret    
   140001536:	int3   
   140001537:	int3   
   140001538:	int3   
   140001539:	int3   
   14000153a:	int3   
   14000153b:	int3   
   14000153c:	rex push rbx
   14000153e:	sub    rsp,0x20
   140001542:	mov    rbx,rcx
   140001545:	mov    edx,0x2
   14000154a:	xor    ecx,ecx
   14000154c:	call   QWORD PTR [rip+0x1b26]        # 0x140003078
   140001552:	test   eax,eax
   140001554:	js     0x140001564
   140001556:	mov    rcx,rbx
   140001559:	call   0x140001388
   14000155e:	call   QWORD PTR [rip+0x1b0c]        # 0x140003070
   140001564:	xor    eax,eax
   140001566:	add    rsp,0x20
   14000156a:	pop    rbx
   14000156b:	ret    
   14000156c:	int3   
   14000156d:	int3   
   14000156e:	int3   
   14000156f:	int3   
   140001570:	int3   
   140001571:	int3   
   140001572:	int3   
   140001573:	int3   
   140001574:	mov    r11,rsp
   140001577:	mov    QWORD PTR [r11+0x8],rbx
   14000157b:	mov    QWORD PTR [r11+0x10],rbp
   14000157f:	mov    QWORD PTR [r11+0x18],rsi
   140001583:	push   rdi
   140001584:	sub    rsp,0x60
   140001588:	mov    rax,QWORD PTR [rip+0x3a79]        # 0x140005008
   14000158f:	xor    rax,rsp
   140001592:	mov    QWORD PTR [rsp+0x58],rax
   140001597:	lea    rcx,[r11-0x38]
   14000159b:	xor    edi,edi
   14000159d:	call   0x140001744
   1400015a2:	test   al,al
   1400015a4:	je     0x1400015b9
   1400015a6:	mov    edi,DWORD PTR [rsp+0x30]
   1400015aa:	mov    ebx,0x2
   1400015af:	cmp    edi,ebx
   1400015b1:	cmova  edi,ebx
   1400015b4:	jmp    0x14000165d
   1400015b9:	lea    rax,[rsp+0x30]
   1400015be:	mov    WORD PTR [rsp+0x38],di
   1400015c3:	mov    r9d,0x101
   1400015c9:	mov    QWORD PTR [rsp+0x20],rax
   1400015ce:	xor    r8d,r8d
   1400015d1:	lea    rdx,[rip+0x1d88]        # 0x140003360
   1400015d8:	mov    rcx,0xffffffff80000002
   1400015df:	call   QWORD PTR [rip+0x1b0b]        # 0x1400030f0
   1400015e5:	movzx  ecx,ax
   1400015e8:	or     ecx,0x80070000
   1400015ee:	test   eax,eax
   1400015f0:	cmovle ecx,eax
   1400015f3:	test   ecx,ecx
   1400015f5:	js     0x14000165d
   1400015f7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400015fc:	lea    rax,[rsp+0x38]
   140001601:	mov    QWORD PTR [rsp+0x20],rax
   140001606:	call   0x140001884
   14000160b:	mov    rcx,QWORD PTR [rsp+0x30]
   140001610:	mov    ebx,eax
   140001612:	call   QWORD PTR [rip+0x1ae0]        # 0x1400030f8
   140001618:	test   ebx,ebx
   14000161a:	js     0x14000165d
   14000161c:	mov    ebp,edi
   14000161e:	lea    rsi,[rip+0x1e2b]        # 0x140003450
   140001625:	mov    ebx,0x2
   14000162a:	mov    r8,QWORD PTR [rsi+0x8]
   14000162e:	lea    rcx,[rsp+0x38]
   140001633:	or     r9d,0xffffffff
   140001637:	mov    DWORD PTR [rsp+0x20],0x1
   14000163f:	or     edx,r9d
   140001642:	call   QWORD PTR [rip+0x1ae8]        # 0x140003130
   140001648:	cmp    eax,ebx
   14000164a:	jne    0x14000164e
   14000164c:	mov    edi,DWORD PTR [rsi]
   14000164e:	inc    ebp
   140001650:	add    rsi,0x10
   140001654:	movsxd rcx,ebp
   140001657:	cmp    rcx,0x3
   14000165b:	jb     0x14000162a
   14000165d:	mov    eax,edi
   14000165f:	mov    rcx,QWORD PTR [rsp+0x58]
   140001664:	xor    rcx,rsp
   140001667:	call   0x140001d30
   14000166c:	lea    r11,[rsp+0x60]
   140001671:	mov    rbx,QWORD PTR [r11+0x10]
   140001675:	mov    rbp,QWORD PTR [r11+0x18]
   140001679:	mov    rsi,QWORD PTR [r11+0x20]
   14000167d:	mov    rsp,r11
   140001680:	pop    rdi
   140001681:	ret    
   140001682:	int3   
   140001683:	int3   
   140001684:	int3   
   140001685:	int3   
   140001686:	int3   
   140001687:	int3   
   140001688:	mov    QWORD PTR [rsp+0x8],rbx
   14000168d:	mov    QWORD PTR [rsp+0x18],rbp
   140001692:	push   rsi
   140001693:	push   rdi
   140001694:	push   r14
   140001696:	sub    rsp,0x50
   14000169a:	mov    ebp,ecx
   14000169c:	lea    rdi,[rip+0x1db5]        # 0x140003458
   1400016a3:	mov    ebx,0x80070057
   1400016a8:	xor    esi,esi
   1400016aa:	cmp    ebp,DWORD PTR [rdi-0x8]
   1400016ad:	jne    0x140001716
   1400016af:	and    QWORD PTR [rsp+0x40],0x0
   1400016b5:	lea    rax,[rsp+0x78]
   1400016ba:	mov    r14,QWORD PTR [rdi]
   1400016bd:	lea    rdx,[rip+0x1c9c]        # 0x140003360
   1400016c4:	mov    QWORD PTR [rsp+0x38],rax
   1400016c9:	xor    r9d,r9d
   1400016cc:	and    QWORD PTR [rsp+0x30],0x0
   1400016d2:	xor    r8d,r8d
   1400016d5:	mov    DWORD PTR [rsp+0x28],0x102
   1400016dd:	mov    rcx,0xffffffff80000002
   1400016e4:	and    DWORD PTR [rsp+0x20],0x0
   1400016e9:	call   QWORD PTR [rip+0x1a11]        # 0x140003100
   1400016ef:	movzx  ebx,ax
   1400016f2:	or     ebx,0x80070000
   1400016f8:	test   eax,eax
   1400016fa:	cmovle ebx,eax
   1400016fd:	test   ebx,ebx
   1400016ff:	js     0x140001716
   140001701:	mov    r9,r14
   140001704:	call   0x1400018f0
   140001709:	mov    rcx,QWORD PTR [rsp+0x78]
   14000170e:	mov    ebx,eax
   140001710:	call   QWORD PTR [rip+0x19e2]        # 0x1400030f8
   140001716:	inc    esi
   140001718:	add    rdi,0x10
   14000171c:	movsxd rcx,esi
   14000171f:	cmp    rcx,0x3
   140001723:	jb     0x1400016aa
   140001725:	lea    r11,[rsp+0x50]
   14000172a:	mov    eax,ebx
   14000172c:	mov    rbx,QWORD PTR [r11+0x20]
   140001730:	mov    rbp,QWORD PTR [r11+0x30]
   140001734:	mov    rsp,r11
   140001737:	pop    r14
   140001739:	pop    rdi
   14000173a:	pop    rsi
   14000173b:	ret    
   14000173c:	int3   
   14000173d:	int3   
   14000173e:	int3   
   14000173f:	int3   
   140001740:	int3   
   140001741:	int3   
   140001742:	int3   
   140001743:	int3   
   140001744:	rex push rbx
   140001746:	sub    rsp,0x20
   14000174a:	mov    rbx,rcx
   14000174d:	test   rcx,rcx
   140001750:	je     0x140001755
   140001752:	and    DWORD PTR [rcx],0x0
   140001755:	and    DWORD PTR [rsp+0x30],0x0
   14000175a:	lea    r9,[rsp+0x30]
   14000175f:	call   0x140001824
   140001764:	test   eax,eax
   140001766:	setns  al
   140001769:	test   al,al
   14000176b:	je     0x140001778
   14000176d:	test   rbx,rbx
   140001770:	je     0x140001778
   140001772:	mov    ecx,DWORD PTR [rsp+0x30]
   140001776:	mov    DWORD PTR [rbx],ecx
   140001778:	add    rsp,0x20
   14000177c:	pop    rbx
   14000177d:	ret    
   14000177e:	int3   
   14000177f:	int3   
   140001780:	int3   
   140001781:	int3   
   140001782:	int3   
   140001783:	int3   
   140001784:	mov    r11,rsp
   140001787:	mov    QWORD PTR [r11+0x18],r8
   14000178b:	push   rbx
   14000178c:	sub    rsp,0x50
   140001790:	and    QWORD PTR [r11-0x18],0x0
   140001795:	lea    rax,[r11+0x18]
   140001799:	mov    QWORD PTR [r11-0x20],rax
   14000179d:	lea    rdx,[rip+0x1bbc]        # 0x140003360
   1400017a4:	and    QWORD PTR [r11-0x28],0x0
   1400017a9:	xor    r9d,r9d
   1400017ac:	mov    DWORD PTR [rsp+0x28],0x2
   1400017b4:	xor    r8d,r8d
   1400017b7:	and    DWORD PTR [rsp+0x20],0x0
   1400017bc:	mov    rcx,0xffffffff80000002
   1400017c3:	call   QWORD PTR [rip+0x1937]        # 0x140003100
   1400017c9:	mov    ebx,eax
   1400017cb:	test   eax,eax
   1400017cd:	jne    0x140001816
   1400017cf:	mov    eax,DWORD PTR [rsp+0x88]
   1400017d6:	lea    r9d,[rbx+0x1]
   1400017da:	mov    rcx,QWORD PTR [rsp+0x70]
   1400017df:	lea    rdx,[rip+0x1b4a]        # 0x140003330
   1400017e6:	mov    DWORD PTR [rsp+0x28],eax
   1400017ea:	xor    r8d,r8d
   1400017ed:	mov    rax,QWORD PTR [rsp+0x80]
   1400017f5:	mov    QWORD PTR [rsp+0x20],rax
   1400017fa:	call   QWORD PTR [rip+0x18e0]        # 0x1400030e0
   140001800:	mov    rcx,QWORD PTR [rsp+0x70]
   140001805:	mov    ebx,eax
   140001807:	cmp    rcx,0xffffffff80000002
   14000180e:	je     0x140001816
   140001810:	call   QWORD PTR [rip+0x18e2]        # 0x1400030f8
   140001816:	mov    eax,ebx
   140001818:	add    rsp,0x50
   14000181c:	pop    rbx
   14000181d:	ret    
   14000181e:	int3   
   14000181f:	int3   
   140001820:	int3   
   140001821:	int3   
   140001822:	int3   
   140001823:	int3   
   140001824:	mov    r11,rsp
   140001827:	mov    QWORD PTR [r11+0x18],r8
   14000182b:	sub    rsp,0x48
   14000182f:	lea    rax,[r11+0x18]
   140001833:	mov    DWORD PTR [rsp+0x60],0x4
   14000183b:	mov    QWORD PTR [r11-0x18],rax
   14000183f:	lea    r8,[rip+0x1b82]        # 0x1400033c8
   140001846:	mov    QWORD PTR [r11-0x20],r9
   14000184a:	lea    rdx,[rip+0x1b9f]        # 0x1400033f0
   140001851:	and    QWORD PTR [r11-0x28],0x0
   140001856:	mov    r9d,0x10
   14000185c:	mov    rcx,0xffffffff80000002
   140001863:	call   QWORD PTR [rip+0x187f]        # 0x1400030e8
   140001869:	mov    ecx,eax
   14000186b:	movzx  eax,ax
   14000186e:	or     eax,0x80070000
   140001873:	test   ecx,ecx
   140001875:	cmovle eax,ecx
   140001878:	add    rsp,0x48
   14000187c:	ret    
   14000187d:	int3   
   14000187e:	int3   
   14000187f:	int3   
   140001880:	int3   
   140001881:	int3   
   140001882:	int3   
   140001883:	int3   
   140001884:	mov    r11,rsp
   140001887:	mov    QWORD PTR [r11+0x8],rbx
   14000188b:	mov    DWORD PTR [r11+0x20],r9d
   14000188f:	push   rdi
   140001890:	sub    rsp,0x40
   140001894:	mov    rbx,QWORD PTR [rsp+0x70]
   140001899:	lea    rax,[r11+0x20]
   14000189d:	mov    QWORD PTR [r11-0x18],rax
   1400018a1:	lea    r8,[rip+0x1a88]        # 0x140003330
   1400018a8:	xor    edi,edi
   1400018aa:	mov    QWORD PTR [r11-0x20],rbx
   1400018ae:	xor    edx,edx
   1400018b0:	mov    DWORD PTR [rsp+0x68],0x1a
   1400018b8:	mov    QWORD PTR [r11-0x28],rdi
   1400018bc:	lea    r9d,[rdi+0x2]
   1400018c0:	call   QWORD PTR [rip+0x1822]        # 0x1400030e8
   1400018c6:	mov    ecx,eax
   1400018c8:	test   eax,eax
   1400018ca:	je     0x1400018cf
   1400018cc:	mov    WORD PTR [rbx],di
   1400018cf:	mov    rbx,QWORD PTR [rsp+0x50]
   1400018d4:	movzx  eax,ax
   1400018d7:	or     eax,0x80070000
   1400018dc:	test   ecx,ecx
   1400018de:	cmovle eax,ecx
   1400018e1:	add    rsp,0x40
   1400018e5:	pop    rdi
   1400018e6:	ret    
   1400018e7:	int3   
   1400018e8:	int3   
   1400018e9:	int3   
   1400018ea:	int3   
   1400018eb:	int3   
   1400018ec:	int3   
   1400018ed:	int3   
   1400018ee:	int3   
   1400018ef:	int3   
   1400018f0:	rex push rbx
   1400018f2:	sub    rsp,0x30
   1400018f6:	or     rax,0xffffffffffffffff
   1400018fa:	xor    ebx,ebx
   1400018fc:	inc    rax
   1400018ff:	cmp    WORD PTR [r9+rax*2],bx
   140001904:	jne    0x1400018fc
   140001906:	cmp    rax,0x7fffffff
   14000190c:	jae    0x140001927
   14000190e:	lea    eax,[rax*2+0x2]
   140001915:	mov    DWORD PTR [rsp+0x28],eax
   140001919:	mov    QWORD PTR [rsp+0x20],r9
   14000191e:	call   0x140001784
   140001923:	mov    ecx,eax
   140001925:	jmp    0x14000192c
   140001927:	mov    ecx,0x216
   14000192c:	movzx  eax,cx
   14000192f:	or     eax,0x80070000
   140001934:	test   ecx,ecx
   140001936:	cmovle eax,ecx
   140001939:	add    rsp,0x30
   14000193d:	pop    rbx
   14000193e:	ret    
   14000193f:	int3   
   140001940:	int3   
   140001941:	int3   
   140001942:	int3   
   140001943:	int3   
   140001944:	int3   
   140001945:	int3   
   140001946:	int3   
   140001947:	int3   
   140001948:	int3   
   140001949:	int3   
   14000194a:	int3   
   14000194b:	int3   
   14000194c:	int3   
   14000194d:	int3   
   14000194e:	int3   
   14000194f:	int3   
   140001950:	sub    rsp,0x28
   140001954:	mov    eax,0x5a4d
   140001959:	cmp    WORD PTR [rip+0xffffffffffffe6a0],ax        # 0x140000000
   140001960:	je     0x140001966
   140001962:	xor    eax,eax
   140001964:	jmp    0x1400019b5
   140001966:	movsxd rcx,DWORD PTR [rip+0xffffffffffffe6cf]        # 0x14000003c
   14000196d:	lea    rax,[rip+0xffffffffffffe68c]        # 0x140000000
   140001974:	add    rcx,rax
   140001977:	cmp    DWORD PTR [rcx],0x4550
   14000197d:	jne    0x140001962
   14000197f:	movzx  eax,WORD PTR [rcx+0x18]
   140001983:	cmp    eax,0x10b
   140001988:	je     0x1400019a4
   14000198a:	cmp    eax,0x20b
   14000198f:	jne    0x140001962
   140001991:	xor    eax,eax
   140001993:	cmp    DWORD PTR [rcx+0x84],0xe
   14000199a:	jbe    0x1400019b5
   14000199c:	cmp    DWORD PTR [rcx+0xf8],eax
   1400019a2:	jmp    0x1400019b2
   1400019a4:	xor    eax,eax
   1400019a6:	cmp    DWORD PTR [rcx+0x74],0xe
   1400019aa:	jbe    0x1400019b5
   1400019ac:	cmp    DWORD PTR [rcx+0xe8],eax
   1400019b2:	setne  al
   1400019b5:	mov    ecx,0x2
   1400019ba:	mov    DWORD PTR [rip+0x36a0],eax        # 0x140005060
   1400019c0:	call   0x140001e28
   1400019c5:	mov    ecx,eax
   1400019c7:	call   QWORD PTR [rip+0x17eb]        # 0x1400031b8
   1400019cd:	mov    rcx,QWORD PTR [rip+0x17a4]        # 0x140003178
   1400019d4:	or     rax,0xffffffffffffffff
   1400019d8:	mov    QWORD PTR [rip+0x3cc1],rax        # 0x1400056a0
   1400019df:	mov    QWORD PTR [rip+0x3cc2],rax        # 0x1400056a8
   1400019e6:	mov    eax,DWORD PTR [rip+0x3688]        # 0x140005074
   1400019ec:	mov    DWORD PTR [rcx],eax
   1400019ee:	mov    rcx,QWORD PTR [rip+0x177b]        # 0x140003170
   1400019f5:	mov    eax,DWORD PTR [rip+0x366d]        # 0x140005068
   1400019fb:	mov    DWORD PTR [rcx],eax
   1400019fd:	call   0x140001e80
   140001a02:	cmp    DWORD PTR [rip+0x35f7],0x0        # 0x140005000
   140001a09:	jne    0x140001a18
   140001a0b:	lea    rcx,[rip+0x46e]        # 0x140001e80
   140001a12:	call   QWORD PTR [rip+0x1780]        # 0x140003198
   140001a18:	xor    eax,eax
   140001a1a:	add    rsp,0x28
   140001a1e:	ret    
   140001a1f:	int3   
   140001a20:	int3   
   140001a21:	int3   
   140001a22:	int3   
   140001a23:	int3   
   140001a24:	int3   
   140001a25:	int3   
   140001a26:	int3   
   140001a27:	int3   
   140001a28:	int3   
   140001a29:	int3   
   140001a2a:	int3   
   140001a2b:	int3   
   140001a2c:	int3   
   140001a2d:	int3   
   140001a2e:	int3   
   140001a2f:	int3   
   140001a30:	sub    rsp,0x38
   140001a34:	mov    eax,DWORD PTR [rip+0x3636]        # 0x140005070
   140001a3a:	lea    r8,[rip+0x3617]        # 0x140005058
   140001a41:	mov    r9d,DWORD PTR [rip+0x3624]        # 0x14000506c
   140001a48:	lea    rdx,[rip+0x3601]        # 0x140005050
   140001a4f:	mov    DWORD PTR [rip+0x360f],eax        # 0x140005064
   140001a55:	lea    rcx,[rip+0x35ec]        # 0x140005048
   140001a5c:	lea    rax,[rip+0x3601]        # 0x140005064
   140001a63:	mov    QWORD PTR [rsp+0x20],rax
   140001a68:	call   QWORD PTR [rip+0x1752]        # 0x1400031c0
   140001a6e:	mov    DWORD PTR [rip+0x35d8],eax        # 0x14000504c
   140001a74:	add    rsp,0x38
   140001a78:	ret    
   140001a79:	int3   
   140001a7a:	int3   
   140001a7b:	int3   
   140001a7c:	int3   
   140001a7d:	int3   
   140001a7e:	int3   
   140001a7f:	int3   
   140001a80:	mov    QWORD PTR [rsp+0x8],rbx
   140001a85:	mov    QWORD PTR [rsp+0x10],rsi
   140001a8a:	mov    QWORD PTR [rsp+0x18],rdi
   140001a8f:	push   r12
   140001a91:	push   r14
   140001a93:	push   r15
   140001a95:	sub    rsp,0xb0
   140001a9c:	xor    r15d,r15d
   140001a9f:	mov    DWORD PTR [rsp+0x20],r15d
   140001aa4:	lea    rcx,[rsp+0x40]
   140001aa9:	call   QWORD PTR [rip+0x1601]        # 0x1400030b0
   140001aaf:	nop
   140001ab0:	mov    rax,QWORD PTR gs:0x30
   140001ab9:	mov    rbx,QWORD PTR [rax+0x8]
   140001abd:	mov    r14d,r15d
   140001ac0:	xor    eax,eax
   140001ac2:	lock cmpxchg QWORD PTR [rip+0x3bc5],rbx        # 0x140005690
   140001acb:	je     0x140001ae9
   140001acd:	cmp    rax,rbx
   140001ad0:	jne    0x140001adc
   140001ad2:	mov    edi,0x1
   140001ad7:	mov    r14d,edi
   140001ada:	jmp    0x140001aee
   140001adc:	mov    ecx,0x3e8
   140001ae1:	call   QWORD PTR [rip+0x1659]        # 0x140003140
   140001ae7:	jmp    0x140001ac0
   140001ae9:	mov    edi,0x1
   140001aee:	mov    eax,DWORD PTR [rip+0x3ba4]        # 0x140005698
   140001af4:	cmp    eax,edi
   140001af6:	jne    0x140001b06
   140001af8:	mov    esi,0x1f
   140001afd:	mov    ecx,esi
   140001aff:	call   0x140001e74
   140001b04:	jmp    0x140001b77
   140001b06:	mov    eax,DWORD PTR [rip+0x3b8c]        # 0x140005698
   140001b0c:	test   eax,eax
   140001b0e:	jne    0x140001b6c
   140001b10:	mov    DWORD PTR [rip+0x3b82],edi        # 0x140005698
   140001b16:	lea    r12,[rip+0x1713]        # 0x140003230
   140001b1d:	lea    rbx,[rip+0x16f4]        # 0x140003218
   140001b24:	mov    QWORD PTR [rsp+0x30],rbx
   140001b29:	mov    eax,r15d
   140001b2c:	mov    DWORD PTR [rsp+0x24],eax
   140001b30:	cmp    rbx,r12
   140001b33:	jae    0x140001b5e
   140001b35:	test   eax,eax
   140001b37:	jne    0x140001b62
   140001b39:	mov    rsi,QWORD PTR [rbx]
   140001b3c:	test   rsi,rsi
   140001b3f:	je     0x140001b53
   140001b41:	mov    rcx,rsi
   140001b44:	mov    rax,QWORD PTR [rip+0x169d]        # 0x1400031e8
   140001b4b:	call   rax
   140001b4d:	call   rsi
   140001b4f:	mov    DWORD PTR [rsp+0x24],eax
   140001b53:	add    rbx,0x8
   140001b57:	mov    QWORD PTR [rsp+0x30],rbx
   140001b5c:	jmp    0x140001b30
   140001b5e:	test   eax,eax
   140001b60:	je     0x140001b72
   140001b62:	mov    eax,0xff
   140001b67:	jmp    0x140001cd3
   140001b6c:	mov    DWORD PTR [rip+0x34d2],edi        # 0x140005044
   140001b72:	mov    esi,0x1f
   140001b77:	mov    eax,DWORD PTR [rip+0x3b1b]        # 0x140005698
   140001b7d:	cmp    eax,edi
   140001b7f:	jne    0x140001b9e
   140001b81:	lea    rdx,[rip+0x1688]        # 0x140003210
   140001b88:	lea    rcx,[rip+0x1669]        # 0x1400031f8
   140001b8f:	call   0x14000204a
   140001b94:	mov    DWORD PTR [rip+0x3afa],0x2        # 0x140005698
   140001b9e:	test   r14d,r14d
   140001ba1:	jne    0x140001bad
   140001ba3:	mov    rax,r15
   140001ba6:	xchg   QWORD PTR [rip+0x3ae3],rax        # 0x140005690
   140001bad:	cmp    QWORD PTR [rip+0x3afc],r15        # 0x1400056b0
   140001bb4:	je     0x140001be4
   140001bb6:	lea    rcx,[rip+0x3af3]        # 0x1400056b0
   140001bbd:	call   0x140001ee0
   140001bc2:	test   eax,eax
   140001bc4:	je     0x140001be4
   140001bc6:	mov    rbx,QWORD PTR [rip+0x3ae3]        # 0x1400056b0
   140001bcd:	mov    rcx,rbx
   140001bd0:	mov    rax,QWORD PTR [rip+0x1611]        # 0x1400031e8
   140001bd7:	call   rax
   140001bd9:	xor    r8d,r8d
   140001bdc:	lea    edx,[r8+0x2]
   140001be0:	xor    ecx,ecx
   140001be2:	call   rbx
   140001be4:	mov    rax,QWORD PTR [rip+0x1595]        # 0x140003180
   140001beb:	mov    rdx,QWORD PTR [rax]
   140001bee:	test   rdx,rdx
   140001bf1:	jne    0x140001bfd
   140001bf3:	mov    eax,0xff
   140001bf8:	jmp    0x140001cd3
   140001bfd:	mov    QWORD PTR [rsp+0x28],rdx
   140001c02:	mov    ecx,DWORD PTR [rsp+0x20]
   140001c06:	cmp    WORD PTR [rdx],0x20
   140001c0a:	ja     0x140001c84
   140001c0c:	cmp    WORD PTR [rdx],r15w
   140001c10:	je     0x140001c16
   140001c12:	test   ecx,ecx
   140001c14:	jne    0x140001c84
   140001c16:	movzx  eax,WORD PTR [rdx]
   140001c19:	sub    ax,di
   140001c1c:	cmp    ax,si
   140001c1f:	ja     0x140001c2c
   140001c21:	add    rdx,0x2
   140001c25:	mov    QWORD PTR [rsp+0x28],rdx
   140001c2a:	jmp    0x140001c16
   140001c2c:	mov    ecx,DWORD PTR [rsp+0x7c]
   140001c30:	movzx  eax,WORD PTR [rsp+0x80]
   140001c38:	mov    r9d,0xa
   140001c3e:	and    cl,dil
   140001c41:	cmovne r9d,eax
   140001c45:	mov    r8,rdx
   140001c48:	xor    edx,edx
   140001c4a:	lea    rcx,[rip+0xffffffffffffe3af]        # 0x140000000
   140001c51:	call   0x14000153c
   140001c56:	mov    DWORD PTR [rip+0x33e4],eax        # 0x140005040
   140001c5c:	cmp    DWORD PTR [rip+0x33fd],r15d        # 0x140005060
   140001c63:	jne    0x140001c6d
   140001c65:	mov    ecx,eax
   140001c67:	call   QWORD PTR [rip+0x1543]        # 0x1400031b0
   140001c6d:	cmp    DWORD PTR [rip+0x33d0],r15d        # 0x140005044
   140001c74:	jne    0x140001c82
   140001c76:	call   QWORD PTR [rip+0x1524]        # 0x1400031a0
   140001c7c:	mov    eax,DWORD PTR [rip+0x33be]        # 0x140005040
   140001c82:	jmp    0x140001cd3
   140001c84:	cmp    WORD PTR [rdx],0x22
   140001c88:	jne    0x140001c98
   140001c8a:	mov    eax,r15d
   140001c8d:	test   ecx,ecx
   140001c8f:	sete   al
   140001c92:	mov    ecx,eax
   140001c94:	mov    DWORD PTR [rsp+0x20],eax
   140001c98:	add    rdx,0x2
   140001c9c:	mov    QWORD PTR [rsp+0x28],rdx
   140001ca1:	jmp    0x140001c06
   140001ca6:	mov    DWORD PTR [rip+0x3394],eax        # 0x140005040
   140001cac:	cmp    DWORD PTR [rip+0x33ad],0x0        # 0x140005060
   140001cb3:	jne    0x140001cbe
   140001cb5:	mov    ecx,eax
   140001cb7:	call   QWORD PTR [rip+0x14eb]        # 0x1400031a8
   140001cbd:	int3   
   140001cbe:	cmp    DWORD PTR [rip+0x337f],0x0        # 0x140005044
   140001cc5:	jne    0x140001cd3
   140001cc7:	call   QWORD PTR [rip+0x14d3]        # 0x1400031a0
   140001ccd:	mov    eax,DWORD PTR [rip+0x336d]        # 0x140005040
   140001cd3:	lea    r11,[rsp+0xb0]
   140001cdb:	mov    rbx,QWORD PTR [r11+0x20]
   140001cdf:	mov    rsi,QWORD PTR [r11+0x28]
   140001ce3:	mov    rdi,QWORD PTR [r11+0x30]
   140001ce7:	mov    rsp,r11
   140001cea:	pop    r15
   140001cec:	pop    r14
   140001cee:	pop    r12
   140001cf0:	ret    
   140001cf1:	int3   
   140001cf2:	int3   
   140001cf3:	int3   
   140001cf4:	int3   
   140001cf5:	int3   
   140001cf6:	int3   
   140001cf7:	int3   
   140001cf8:	int3   
   140001cf9:	int3   
   140001cfa:	int3   
   140001cfb:	int3   
   140001cfc:	int3   
   140001cfd:	int3   
   140001cfe:	int3   
   140001cff:	int3   
   140001d00:	sub    rsp,0x28
   140001d04:	call   0x140001f74
   140001d09:	add    rsp,0x28
   140001d0d:	jmp    0x140001a80
   140001d12:	int3   
   140001d13:	int3   
   140001d14:	int3   
   140001d15:	int3   
   140001d16:	int3   
   140001d17:	int3   
   140001d18:	int3   
   140001d19:	int3   
   140001d1a:	int3   
   140001d1b:	int3   
   140001d1c:	int3   
   140001d1d:	int3   
   140001d1e:	int3   
   140001d1f:	int3   
   140001d20:	int3   
   140001d21:	int3   
   140001d22:	int3   
   140001d23:	int3   
   140001d24:	int3   
   140001d25:	int3   
   140001d26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001d30:	cmp    rcx,QWORD PTR [rip+0x32d1]        # 0x140005008
   140001d37:	jne    0x140001d49
   140001d39:	rol    rcx,0x10
   140001d3d:	test   cx,0xffff
   140001d42:	jne    0x140001d45
   140001d44:	ret    
   140001d45:	ror    rcx,0x10
   140001d49:	jmp    0x1400020c0
   140001d4e:	int3   
   140001d4f:	int3   
   140001d50:	int3   
   140001d51:	int3   
   140001d52:	int3   
   140001d53:	int3   
   140001d54:	int3   
   140001d55:	int3   
   140001d56:	int3   
   140001d57:	int3   
   140001d58:	int3   
   140001d59:	int3   
   140001d5a:	int3   
   140001d5b:	int3   
   140001d5c:	int3   
   140001d5d:	int3   
   140001d5e:	int3   
   140001d5f:	int3   
   140001d60:	sub    rsp,0x28
   140001d64:	mov    rax,QWORD PTR [rcx]
   140001d67:	cmp    DWORD PTR [rax],0xe06d7363
   140001d6d:	jne    0x140001d92
   140001d6f:	cmp    DWORD PTR [rax+0x18],0x4
   140001d73:	jne    0x140001d92
   140001d75:	mov    ecx,DWORD PTR [rax+0x20]
   140001d78:	lea    eax,[rcx-0x19930520]
   140001d7e:	cmp    eax,0x2
   140001d81:	jbe    0x140001d8b
   140001d83:	cmp    ecx,0x1994000
   140001d89:	jne    0x140001d92
   140001d8b:	call   QWORD PTR [rip+0x13d7]        # 0x140003168
   140001d91:	int3   
   140001d92:	xor    eax,eax
   140001d94:	add    rsp,0x28
   140001d98:	ret    
   140001d99:	int3   
   140001d9a:	int3   
   140001d9b:	int3   
   140001d9c:	int3   
   140001d9d:	int3   
   140001d9e:	int3   
   140001d9f:	int3   
   140001da0:	sub    rsp,0x28
   140001da4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140001d60
   140001dab:	call   QWORD PTR [rip+0x12d7]        # 0x140003088
   140001db1:	xor    eax,eax
   140001db3:	add    rsp,0x28
   140001db7:	ret    
   140001db8:	int3   
   140001db9:	int3   
   140001dba:	int3   
   140001dbb:	int3   
   140001dbc:	int3   
   140001dbd:	int3   
   140001dbe:	jmp    QWORD PTR [rip+0x140c]        # 0x1400031d0
   140001dc4:	int3   
   140001dc5:	int3   
   140001dc6:	int3   
   140001dc7:	int3   
   140001dc8:	int3   
   140001dc9:	int3   
   140001dca:	int3   
   140001dcb:	int3   
   140001dcc:	sub    rsp,0x18
   140001dd0:	xor    edx,edx
   140001dd2:	lea    rax,[rcx-0x1]
   140001dd6:	cmp    rax,0xfffffffffffffffd
   140001dda:	ja     0x140001e18
   140001ddc:	mov    eax,0x5a4d
   140001de1:	cmp    WORD PTR [rcx],ax
   140001de4:	jne    0x140001e10
   140001de6:	cmp    DWORD PTR [rcx+0x3c],edx
   140001de9:	jl     0x140001e10
   140001deb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140001df2:	jae    0x140001e10
   140001df4:	movsxd rax,DWORD PTR [rcx+0x3c]
   140001df8:	add    rax,rcx
   140001dfb:	mov    QWORD PTR [rsp],rax
   140001dff:	cmp    DWORD PTR [rax],0x4550
   140001e05:	cmovne rax,rdx
   140001e09:	mov    rdx,rax
   140001e0c:	mov    QWORD PTR [rsp],rax
   140001e10:	jmp    0x140001e18
   140001e12:	xor    edx,edx
   140001e14:	mov    QWORD PTR [rsp],rdx
   140001e18:	mov    rax,rdx
   140001e1b:	add    rsp,0x18
   140001e1f:	ret    
   140001e20:	int3   
   140001e21:	int3   
   140001e22:	int3   
   140001e23:	int3   
   140001e24:	int3   
   140001e25:	int3   
   140001e26:	int3   
   140001e27:	int3   
   140001e28:	rex push rbx
   140001e2a:	sub    rsp,0x20
   140001e2e:	mov    ebx,ecx
   140001e30:	xor    ecx,ecx
   140001e32:	call   QWORD PTR [rip+0x1208]        # 0x140003040
   140001e38:	test   rax,rax
   140001e3b:	je     0x140001e65
   140001e3d:	mov    rcx,rax
   140001e40:	call   0x140001dcc
   140001e45:	test   rax,rax
   140001e48:	je     0x140001e65
   140001e4a:	mov    ecx,0x2
   140001e4f:	cmp    WORD PTR [rax+0x5c],cx
   140001e53:	jne    0x140001e59
   140001e55:	mov    eax,ecx
   140001e57:	jmp    0x140001e67
   140001e59:	cmp    WORD PTR [rax+0x5c],0x3
   140001e5e:	mov    eax,0x1
   140001e63:	je     0x140001e67
   140001e65:	mov    eax,ebx
   140001e67:	add    rsp,0x20
   140001e6b:	pop    rbx
   140001e6c:	ret    
   140001e6d:	int3   
   140001e6e:	int3   
   140001e6f:	int3   
   140001e70:	int3   
   140001e71:	int3   
   140001e72:	int3   
   140001e73:	int3   
   140001e74:	jmp    QWORD PTR [rip+0x134e]        # 0x1400031c8
   140001e7a:	int3   
   140001e7b:	int3   
   140001e7c:	int3   
   140001e7d:	int3   
   140001e7e:	int3   
   140001e7f:	int3   
   140001e80:	xor    eax,eax
   140001e82:	ret    
   140001e83:	int3   
   140001e84:	int3   
   140001e85:	int3   
   140001e86:	int3   
   140001e87:	int3   
   140001e88:	int3   
   140001e89:	int3   
   140001e8a:	int3   
   140001e8b:	int3   
   140001e8c:	int3   
   140001e8d:	int3   
   140001e8e:	int3   
   140001e8f:	int3   
   140001e90:	movsxd r8,DWORD PTR [rcx+0x3c]
   140001e94:	xor    r9d,r9d
   140001e97:	add    r8,rcx
   140001e9a:	mov    r10,rdx
   140001e9d:	movzx  eax,WORD PTR [r8+0x14]
   140001ea2:	movzx  r11d,WORD PTR [r8+0x6]
   140001ea7:	add    rax,0x18
   140001eab:	add    rax,r8
   140001eae:	test   r11d,r11d
   140001eb1:	je     0x140001ed1
   140001eb3:	mov    edx,DWORD PTR [rax+0xc]
   140001eb6:	cmp    r10,rdx
   140001eb9:	jb     0x140001ec5
   140001ebb:	mov    ecx,DWORD PTR [rax+0x8]
   140001ebe:	add    ecx,edx
   140001ec0:	cmp    r10,rcx
   140001ec3:	jb     0x140001ed3
   140001ec5:	inc    r9d
   140001ec8:	add    rax,0x28
   140001ecc:	cmp    r9d,r11d
   140001ecf:	jb     0x140001eb3
   140001ed1:	xor    eax,eax
   140001ed3:	ret    
   140001ed4:	int3   
   140001ed5:	int3   
   140001ed6:	int3   
   140001ed7:	int3   
   140001ed8:	int3   
   140001ed9:	int3   
   140001eda:	int3   
   140001edb:	int3   
   140001edc:	int3   
   140001edd:	int3   
   140001ede:	int3   
   140001edf:	int3   
   140001ee0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ee5:	push   rdi
   140001ee6:	sub    rsp,0x20
   140001eea:	mov    rbx,rcx
   140001eed:	lea    rdi,[rip+0xffffffffffffe10c]        # 0x140000000
   140001ef4:	mov    rcx,rdi
   140001ef7:	call   0x140001f40
   140001efc:	test   eax,eax
   140001efe:	je     0x140001f22
   140001f00:	sub    rbx,rdi
   140001f03:	mov    rdx,rbx
   140001f06:	mov    rcx,rdi
   140001f09:	call   0x140001e90
   140001f0e:	test   rax,rax
   140001f11:	je     0x140001f22
   140001f13:	mov    eax,DWORD PTR [rax+0x24]
   140001f16:	shr    eax,0x1f
   140001f19:	not    eax
   140001f1b:	and    eax,0x1
   140001f1e:	jmp    0x140001f22
   140001f20:	xor    eax,eax
   140001f22:	mov    rbx,QWORD PTR [rsp+0x30]
   140001f27:	add    rsp,0x20
   140001f2b:	pop    rdi
   140001f2c:	ret    
   140001f2d:	int3   
   140001f2e:	int3   
   140001f2f:	int3   
   140001f30:	int3   
   140001f31:	int3   
   140001f32:	int3   
   140001f33:	int3   
   140001f34:	int3   
   140001f35:	int3   
   140001f36:	int3   
   140001f37:	int3   
   140001f38:	int3   
   140001f39:	int3   
   140001f3a:	int3   
   140001f3b:	int3   
   140001f3c:	int3   
   140001f3d:	int3   
   140001f3e:	int3   
   140001f3f:	int3   
   140001f40:	mov    rax,rcx
   140001f43:	mov    ecx,0x5a4d
   140001f48:	cmp    WORD PTR [rax],cx
   140001f4b:	je     0x140001f50
   140001f4d:	xor    eax,eax
   140001f4f:	ret    
   140001f50:	movsxd rcx,DWORD PTR [rax+0x3c]
   140001f54:	add    rcx,rax
   140001f57:	xor    eax,eax
   140001f59:	cmp    DWORD PTR [rcx],0x4550
   140001f5f:	jne    0x140001f6d
   140001f61:	mov    edx,0x20b
   140001f66:	cmp    WORD PTR [rcx+0x18],dx
   140001f6a:	sete   al
   140001f6d:	ret    
   140001f6e:	int3   
   140001f6f:	int3   
   140001f70:	int3   
   140001f71:	int3   
   140001f72:	int3   
   140001f73:	int3   
   140001f74:	mov    QWORD PTR [rsp+0x20],rbx
   140001f79:	push   rbp
   140001f7a:	mov    rbp,rsp
   140001f7d:	sub    rsp,0x20
   140001f81:	and    QWORD PTR [rbp+0x18],0x0
   140001f86:	movabs rbx,0x2b992ddfa232
   140001f90:	mov    rax,QWORD PTR [rip+0x3071]        # 0x140005008
   140001f97:	cmp    rax,rbx
   140001f9a:	jne    0x14000202f
   140001fa0:	lea    rcx,[rbp+0x18]
   140001fa4:	call   QWORD PTR [rip+0x11ae]        # 0x140003158
   140001faa:	mov    rax,QWORD PTR [rbp+0x18]
   140001fae:	mov    QWORD PTR [rbp+0x10],rax
   140001fb2:	call   QWORD PTR [rip+0x1100]        # 0x1400030b8
   140001fb8:	mov    eax,eax
   140001fba:	xor    QWORD PTR [rbp+0x10],rax
   140001fbe:	call   QWORD PTR [rip+0x10fc]        # 0x1400030c0
   140001fc4:	mov    eax,eax
   140001fc6:	xor    QWORD PTR [rbp+0x10],rax
   140001fca:	call   QWORD PTR [rip+0x1180]        # 0x140003150
   140001fd0:	mov    eax,eax
   140001fd2:	shl    rax,0x18
   140001fd6:	xor    QWORD PTR [rbp+0x10],rax
   140001fda:	call   QWORD PTR [rip+0x1170]        # 0x140003150
   140001fe0:	mov    eax,eax
   140001fe2:	lea    rcx,[rbp+0x10]
   140001fe6:	xor    rax,QWORD PTR [rbp+0x10]
   140001fea:	xor    rax,rcx
   140001fed:	lea    rcx,[rbp+0x20]
   140001ff1:	mov    QWORD PTR [rbp+0x10],rax
   140001ff5:	call   QWORD PTR [rip+0x10d5]        # 0x1400030d0
   140001ffb:	mov    eax,DWORD PTR [rbp+0x20]
   140001ffe:	movabs rcx,0xffffffffffff
   140002008:	shl    rax,0x20
   14000200c:	xor    rax,QWORD PTR [rbp+0x20]
   140002010:	xor    rax,QWORD PTR [rbp+0x10]
   140002014:	and    rax,rcx
   140002017:	movabs rcx,0x2b992ddfa233
   140002021:	cmp    rax,rbx
   140002024:	cmove  rax,rcx
   140002028:	mov    QWORD PTR [rip+0x2fd9],rax        # 0x140005008
   14000202f:	mov    rbx,QWORD PTR [rsp+0x48]
   140002034:	not    rax
   140002037:	mov    QWORD PTR [rip+0x2fd2],rax        # 0x140005010
   14000203e:	add    rsp,0x20
   140002042:	pop    rbp
   140002043:	ret    
   140002044:	int3   
   140002045:	int3   
   140002046:	int3   
   140002047:	int3   
   140002048:	int3   
   140002049:	int3   
   14000204a:	jmp    QWORD PTR [rip+0x1140]        # 0x140003190
   140002050:	int3   
   140002051:	int3   
   140002052:	int3   
   140002053:	int3   
   140002054:	int3   
   140002055:	int3   
   140002056:	jmp    QWORD PTR [rip+0x112c]        # 0x140003188
   14000205c:	int3   
   14000205d:	int3   
   14000205e:	int3   
   14000205f:	int3   
   140002060:	int3   
   140002061:	int3   
   140002062:	int3   
   140002063:	int3   
   140002064:	int3   
   140002065:	int3   
   140002066:	int3   
   140002067:	int3   
   140002068:	int3   
   140002069:	int3   
   14000206a:	int3   
   14000206b:	int3   
   14000206c:	int3   
   14000206d:	int3   
   14000206e:	int3   
   14000206f:	int3   
   140002070:	ret    0x0
   140002073:	int3   
   140002074:	int3   
   140002075:	int3   
   140002076:	int3   
   140002077:	int3   
   140002078:	int3   
   140002079:	int3   
   14000207a:	int3   
   14000207b:	int3   
   14000207c:	rex push rbx
   14000207e:	sub    rsp,0x20
   140002082:	mov    rbx,rcx
   140002085:	xor    ecx,ecx
   140002087:	call   QWORD PTR [rip+0xffb]        # 0x140003088
   14000208d:	mov    rcx,rbx
   140002090:	call   QWORD PTR [rip+0xffa]        # 0x140003090
   140002096:	call   QWORD PTR [rip+0x100c]        # 0x1400030a8
   14000209c:	mov    rcx,rax
   14000209f:	mov    edx,0xc0000409
   1400020a4:	add    rsp,0x20
   1400020a8:	pop    rbx
   1400020a9:	rex.W jmp QWORD PTR [rip+0xff0]        # 0x1400030a0
   1400020b0:	int3   
   1400020b1:	int3   
   1400020b2:	int3   
   1400020b3:	int3   
   1400020b4:	int3   
   1400020b5:	int3   
   1400020b6:	int3   
   1400020b7:	int3   
   1400020b8:	int3   
   1400020b9:	int3   
   1400020ba:	int3   
   1400020bb:	int3   
   1400020bc:	int3   
   1400020bd:	int3   
   1400020be:	int3   
   1400020bf:	int3   
   1400020c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400020c5:	sub    rsp,0x88
   1400020cc:	lea    rcx,[rip+0x304d]        # 0x140005120
   1400020d3:	call   QWORD PTR [rip+0x103f]        # 0x140003118
   1400020d9:	mov    rax,QWORD PTR [rip+0x3138]        # 0x140005218
   1400020e0:	mov    QWORD PTR [rsp+0x48],rax
   1400020e5:	xor    r8d,r8d
   1400020e8:	lea    rdx,[rsp+0x50]
   1400020ed:	mov    rcx,QWORD PTR [rsp+0x48]
   1400020f2:	call   QWORD PTR [rip+0x1018]        # 0x140003110
   1400020f8:	mov    QWORD PTR [rsp+0x40],rax
   1400020fd:	cmp    QWORD PTR [rsp+0x40],0x0
   140002103:	je     0x140002147
   140002105:	mov    QWORD PTR [rsp+0x38],0x0
   14000210e:	lea    rax,[rsp+0x58]
   140002113:	mov    QWORD PTR [rsp+0x30],rax
   140002118:	lea    rax,[rsp+0x60]
   14000211d:	mov    QWORD PTR [rsp+0x28],rax
   140002122:	lea    rax,[rip+0x2ff7]        # 0x140005120
   140002129:	mov    QWORD PTR [rsp+0x20],rax
   14000212e:	mov    r9,QWORD PTR [rsp+0x40]
   140002133:	mov    r8,QWORD PTR [rsp+0x48]
   140002138:	mov    rdx,QWORD PTR [rsp+0x50]
   14000213d:	xor    ecx,ecx
   14000213f:	call   QWORD PTR [rip+0xfdb]        # 0x140003120
   140002145:	jmp    0x14000216a
   140002147:	mov    rax,QWORD PTR [rip+0x306a]        # 0x1400051b8
   14000214e:	mov    rax,QWORD PTR [rax]
   140002151:	mov    QWORD PTR [rip+0x30c0],rax        # 0x140005218
   140002158:	mov    rax,QWORD PTR [rip+0x3059]        # 0x1400051b8
   14000215f:	add    rax,0x8
   140002163:	mov    QWORD PTR [rip+0x304e],rax        # 0x1400051b8
   14000216a:	mov    rax,QWORD PTR [rip+0x30a7]        # 0x140005218
   140002171:	mov    QWORD PTR [rip+0x2f18],rax        # 0x140005090
   140002178:	mov    rax,QWORD PTR [rsp+0x90]
   140002180:	mov    QWORD PTR [rip+0x3019],rax        # 0x1400051a0
   140002187:	mov    DWORD PTR [rip+0x2eef],0xc0000409        # 0x140005080
   140002191:	mov    DWORD PTR [rip+0x2ee9],0x1        # 0x140005084
   14000219b:	mov    DWORD PTR [rip+0x2ef3],0x3        # 0x140005098
   1400021a5:	mov    eax,0x8
   1400021aa:	imul   rax,rax,0x0
   1400021ae:	lea    rcx,[rip+0x2eeb]        # 0x1400050a0
   1400021b5:	mov    QWORD PTR [rcx+rax*1],0x2
   1400021bd:	mov    eax,0x8
   1400021c2:	imul   rax,rax,0x1
   1400021c6:	lea    rcx,[rip+0x2ed3]        # 0x1400050a0
   1400021cd:	mov    rdx,QWORD PTR [rip+0x2e34]        # 0x140005008
   1400021d4:	mov    QWORD PTR [rcx+rax*1],rdx
   1400021d8:	mov    eax,0x8
   1400021dd:	imul   rax,rax,0x2
   1400021e1:	lea    rcx,[rip+0x2eb8]        # 0x1400050a0
   1400021e8:	mov    rdx,QWORD PTR [rip+0x2e21]        # 0x140005010
   1400021ef:	mov    QWORD PTR [rcx+rax*1],rdx
   1400021f3:	mov    eax,0x8
   1400021f8:	imul   rax,rax,0x0
   1400021fc:	mov    rcx,QWORD PTR [rip+0x2e05]        # 0x140005008
   140002203:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140002208:	mov    eax,0x8
   14000220d:	imul   rax,rax,0x1
   140002211:	mov    rcx,QWORD PTR [rip+0x2df8]        # 0x140005010
   140002218:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000221d:	lea    rcx,[rip+0x104c]        # 0x140003270
   140002224:	call   0x14000207c
   140002229:	add    rsp,0x88
   140002230:	ret    
   140002231:	int3   
   140002232:	int3   
   140002233:	int3   
   140002234:	int3   
   140002235:	int3   
   140002236:	int3   
   140002237:	int3   
   140002238:	int3   
   140002239:	int3   
   14000223a:	int3   
   14000223b:	int3   
   14000223c:	int3   
   14000223d:	int3   
   14000223e:	int3   
   14000223f:	int3   
   140002240:	int3   
   140002241:	int3   
   140002242:	int3   
   140002243:	int3   
   140002244:	int3   
   140002245:	int3   
   140002246:	int3   
   140002247:	int3   
   140002248:	sub    rsp,0x28
   14000224c:	mov    r8,QWORD PTR [r9+0x38]
   140002250:	mov    rcx,rdx
   140002253:	mov    rdx,r9
   140002256:	call   0x14000226c
   14000225b:	mov    eax,0x1
   140002260:	add    rsp,0x28
   140002264:	ret    
   140002265:	int3   
   140002266:	int3   
   140002267:	int3   
   140002268:	int3   
   140002269:	int3   
   14000226a:	int3   
   14000226b:	int3   
   14000226c:	rex push rbx
   14000226e:	sub    rsp,0x20
   140002272:	mov    r11d,DWORD PTR [r8]
   140002275:	mov    rbx,rdx
   140002278:	and    r11d,0xfffffff8
   14000227c:	mov    r9,rcx
   14000227f:	test   BYTE PTR [r8],0x4
   140002283:	mov    r10,rcx
   140002286:	je     0x14000229b
   140002288:	mov    eax,DWORD PTR [r8+0x8]
   14000228c:	movsxd r10,DWORD PTR [r8+0x4]
   140002290:	neg    eax
   140002292:	add    r10,rcx
   140002295:	movsxd rcx,eax
   140002298:	and    r10,rcx
   14000229b:	movsxd rax,r11d
   14000229e:	mov    rdx,QWORD PTR [rax+r10*1]
   1400022a2:	mov    rax,QWORD PTR [rbx+0x10]
   1400022a6:	mov    ecx,DWORD PTR [rax+0x8]
   1400022a9:	add    rcx,QWORD PTR [rbx+0x8]
   1400022ad:	test   BYTE PTR [rcx+0x3],0xf
   1400022b1:	je     0x1400022bf
   1400022b3:	movzx  eax,BYTE PTR [rcx+0x3]
   1400022b7:	and    eax,0xfffffff0
   1400022ba:	cdqe   
   1400022bc:	add    r9,rax
   1400022bf:	xor    r9,rdx
   1400022c2:	mov    rcx,r9
   1400022c5:	add    rsp,0x20
   1400022c9:	pop    rbx
   1400022ca:	jmp    0x140001d30
   1400022cf:	int3   
   1400022d0:	int3   
   1400022d1:	int3   
   1400022d2:	int3   
   1400022d3:	int3   
   1400022d4:	int3   
   1400022d5:	int3   
   1400022d6:	jmp    QWORD PTR [rip+0xefc]        # 0x1400031d8
   1400022dc:	int3   
   1400022dd:	int3   
   1400022de:	int3   
   1400022df:	int3   
   1400022e0:	int3   
   1400022e1:	int3   
   1400022e2:	int3   
   1400022e3:	int3   
   1400022e4:	int3   
   1400022e5:	int3   
   1400022e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400022f0:	jmp    rax
   1400022f2:	int3   
   1400022f3:	int3   
   1400022f4:	int3   
   1400022f5:	int3   
   1400022f6:	int3   
   1400022f7:	int3   
   1400022f8:	int3   
   1400022f9:	int3   
   1400022fa:	int3   
   1400022fb:	int3   
   1400022fc:	int3   
   1400022fd:	int3   
   1400022fe:	int3   
   1400022ff:	int3   
   140002300:	int3   
   140002301:	int3   
   140002302:	int3   
   140002303:	int3   
   140002304:	int3   
   140002305:	int3   
   140002306:	rex push rbp
   140002308:	sub    rsp,0x20
   14000230c:	mov    rbp,rdx
   14000230f:	mov    rax,QWORD PTR [rcx]
   140002312:	mov    rdx,rcx
   140002315:	mov    ecx,DWORD PTR [rax]
   140002317:	call   0x140001dbe
   14000231c:	nop
   14000231d:	add    rsp,0x20
   140002321:	pop    rbp
   140002322:	ret    
   140002323:	int3   
   140002324:	int3   
   140002325:	int3   
   140002326:	int3   
   140002327:	int3   
   140002328:	int3   
   140002329:	int3   
   14000232a:	int3   
   14000232b:	int3   
   14000232c:	int3   
   14000232d:	int3   
   14000232e:	int3   
   14000232f:	int3   
   140002330:	rex push rbp
   140002332:	sub    rsp,0x20
   140002336:	mov    rbp,rdx
   140002339:	mov    rax,QWORD PTR [rcx]
   14000233c:	xor    ecx,ecx
   14000233e:	cmp    DWORD PTR [rax],0xc0000005
   140002344:	sete   cl
   140002347:	mov    eax,ecx
   140002349:	add    rsp,0x20
   14000234d:	pop    rbp
   14000234e:	ret    
   14000234f:	int3   

Disassembly of section .rdata:

0000000140003000 <.rdata>:
   140003000:	(bad)  
   140003001:	cmp    al,0x0
	...
   14000300f:	add    BYTE PTR [rcx+0x1],bl
   140003012:	add    BYTE PTR [rax],al
   140003014:	add    BYTE PTR [rax],al
   140003016:	add    BYTE PTR [rax+0x0],al
   14000301c:	add    BYTE PTR [rax],al
   14000301e:	add    BYTE PTR [rax],al
   140003020:	mov    esp,0x3c
   140003025:	add    BYTE PTR [rax],al
   140003027:	add    BYTE PTR [rdx+0x3c],dl
   14000302d:	add    BYTE PTR [rax],al
   14000302f:	add    dh,cl
   140003031:	cmp    al,0x0
   140003033:	add    BYTE PTR [rax],al
   140003035:	add    BYTE PTR [rax],al
   140003037:	add    BYTE PTR [rsp+rdi*1+0x0],bh
   14000303b:	add    BYTE PTR [rax],al
   14000303d:	add    BYTE PTR [rax],al
   14000303f:	add    BYTE PTR [rax+0x3c],ch
	...
   14000304d:	add    BYTE PTR [rax],al
   14000304f:	add    ah,bl
   140003051:	cmp    eax,0x0
	...
   14000305e:	add    BYTE PTR [rax],al
   140003060:	out    dx,al
   140003061:	cmp    al,0x0
	...
   14000306f:	add    BYTE PTR [rdx],cl
   140003071:	add    BYTE PTR ds:[rax],al
   140003074:	add    BYTE PTR [rax],al
   140003076:	add    BYTE PTR [rax],al
   140003078:	clc    
   140003079:	cmp    eax,0x0
	...
   140003086:	add    BYTE PTR [rax],al
   140003088:	ss add BYTE PTR ds:[rax],al
   14000308c:	add    BYTE PTR [rax],al
   14000308e:	add    BYTE PTR [rax],al
   140003090:	(bad)  
   140003091:	(bad)  
	...
   14000309e:	add    BYTE PTR [rax],al
   1400030a0:	ss (bad) 
   1400030a2:	add    BYTE PTR [rax],al
   1400030a4:	add    BYTE PTR [rax],al
   1400030a6:	add    BYTE PTR [rax],al
   1400030a8:	and    bh,BYTE PTR [rdi]
   1400030aa:	add    BYTE PTR [rax],al
   1400030ac:	add    BYTE PTR [rax],al
   1400030ae:	add    BYTE PTR [rax],al
   1400030b0:	and    al,0x3e
   1400030b2:	add    BYTE PTR [rax],al
   1400030b4:	add    BYTE PTR [rax],al
   1400030b6:	add    BYTE PTR [rax],al
   1400030b8:	outs   dx,BYTE PTR ds:[rsi]
   1400030b9:	add    BYTE PTR ds:[rax],al
   1400030bc:	add    BYTE PTR [rax],al
   1400030be:	add    BYTE PTR [rax],al
   1400030c0:	test   BYTE PTR [rsi],bh
	...
   1400030ce:	add    BYTE PTR [rax],al
   1400030d0:	push   rsp
   1400030d1:	add    BYTE PTR ds:[rax],al
	...
   1400030e0:	xchg   edx,eax
   1400030e1:	(bad)  
   1400030e2:	add    BYTE PTR [rax],al
   1400030e4:	add    BYTE PTR [rax],al
   1400030e6:	add    BYTE PTR [rax],al
   1400030e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400030e9:	(bad)  
   1400030ea:	add    BYTE PTR [rax],al
   1400030ec:	add    BYTE PTR [rax],al
   1400030ee:	add    BYTE PTR [rax],al
   1400030f0:	(bad)  
   1400030f1:	(bad)  
   1400030f2:	add    BYTE PTR [rax],al
   1400030f4:	add    BYTE PTR [rax],al
   1400030f6:	add    BYTE PTR [rax],al
   1400030f8:	jb     0x140003139
   1400030fa:	add    BYTE PTR [rax],al
   1400030fc:	add    BYTE PTR [rax],al
   1400030fe:	add    BYTE PTR [rax],al
   140003100:	cmp    BYTE PTR [rdi],0x0
	...
   14000310f:	add    al,bl
   140003111:	add    BYTE PTR ds:[rax],al
   140003114:	add    BYTE PTR [rax],al
   140003116:	add    BYTE PTR [rax],al
   140003118:	(bad)  
   140003119:	add    BYTE PTR ds:[rax],al
   14000311c:	add    BYTE PTR [rax],al
   14000311e:	add    BYTE PTR [rax],al
   140003120:	repnz add BYTE PTR ds:[rax],al
	...
   140003130:	rex.WX (bad) 
	...
   14000313e:	add    BYTE PTR [rax],al
   140003140:	sbb    al,0x3e
	...
   14000314e:	add    BYTE PTR [rax],al
   140003150:	mov    ah,0x3e
   140003152:	add    BYTE PTR [rax],al
   140003154:	add    BYTE PTR [rax],al
   140003156:	add    BYTE PTR [rax],al
   140003158:	(bad)  
   140003159:	add    BYTE PTR ds:[rax],al
	...
   140003168:	enter  0x3d,0x0
   14000316c:	add    BYTE PTR [rax],al
   14000316e:	add    BYTE PTR [rax],al
   140003170:	mov    al,0x3d
   140003172:	add    BYTE PTR [rax],al
   140003174:	add    BYTE PTR [rax],al
   140003176:	add    BYTE PTR [rax],al
   140003178:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140003179:	cmp    eax,0x0
   14000317e:	add    BYTE PTR [rax],al
   140003180:	pushf  
   140003181:	cmp    eax,0x0
   140003186:	add    BYTE PTR [rax],al
   140003188:	test   BYTE PTR [rip+0x0],bh        # 0x14000318e
   14000318e:	add    BYTE PTR [rax],al
   140003190:	js     0x1400031cf
   140003192:	add    BYTE PTR [rax],al
   140003194:	add    BYTE PTR [rax],al
   140003196:	add    BYTE PTR [rax],al
   140003198:	fs cmp eax,0x0
   14000319e:	add    BYTE PTR [rax],al
   1400031a0:	pop    rdx
   1400031a1:	cmp    eax,0x0
   1400031a6:	add    BYTE PTR [rax],al
   1400031a8:	push   rdx
   1400031a9:	cmp    eax,0x0
   1400031ae:	add    BYTE PTR [rax],al
   1400031b0:	rex.WX cmp rax,0x0
   1400031b6:	add    BYTE PTR [rax],al
   1400031b8:	cmp    BYTE PTR [rip+0x0],bh        # 0x1400031be
   1400031be:	add    BYTE PTR [rax],al
   1400031c0:	es cmp eax,0x0
   1400031c6:	add    BYTE PTR [rax],al
   1400031c8:	sbb    BYTE PTR [rip+0x0],bh        # 0x1400031ce
   1400031ce:	add    BYTE PTR [rax],al
   1400031d0:	or     bh,BYTE PTR [rip+0x0]        # 0x1400031d6
   1400031d6:	add    BYTE PTR [rax],al
   1400031d8:	or     al,0x41
	...
   1400031e6:	add    BYTE PTR [rax],al
   1400031e8:	jo     0x14000320a
   1400031ea:	add    BYTE PTR [rax+0x1],al
   1400031ed:	add    BYTE PTR [rax],al
   1400031ef:	add    al,dh
   1400031f1:	and    al,BYTE PTR [rax]
   1400031f3:	rex add DWORD PTR [rax],eax
	...
   1400031fe:	add    BYTE PTR [rax],al
   140003200:	xor    BYTE PTR [rdx],bl
   140003202:	add    BYTE PTR [rax+0x1],al
   140003205:	add    BYTE PTR [rax],al
   140003207:	add    BYTE PTR [rax],al
   140003209:	adc    BYTE PTR [rax],al
   14000320b:	rex add DWORD PTR [rax],eax
	...
   14000321e:	add    BYTE PTR [rax],al
   140003220:	push   rax
   140003221:	sbb    DWORD PTR [rax],eax
   140003223:	rex add DWORD PTR [rax],eax
   140003226:	add    BYTE PTR [rax],al
   140003228:	movabs al,ds:0x140001d
	...
   140003239:	adc    BYTE PTR [rax],al
   14000323b:	add    BYTE PTR [rax+0x10],ah
   14000323e:	add    BYTE PTR [rax],al
   140003240:	adc    BYTE PTR [rax],0x0
   140003243:	add    BYTE PTR [rax-0x1fffffef],dl
   140003249:	adc    DWORD PTR [rax],eax
   14000324b:	add    BYTE PTR [rax+0x12],dh
   14000324e:	add    BYTE PTR [rax],al
   140003250:	push   rax
   140003251:	sbb    DWORD PTR [rax],eax
   140003253:	add    BYTE PTR [rax],dh
   140003255:	sbb    al,BYTE PTR [rax]
   140003257:	add    BYTE PTR [rax],al
   140003259:	sbb    eax,0x1d600000
   14000325e:	add    BYTE PTR [rax],al
   140003260:	movabs al,ds:0x7000001e8000001d
   140003269:	and    BYTE PTR [rax],al
   14000326b:	add    al,al
   14000326d:	and    BYTE PTR [rax],al
   14000326f:	add    BYTE PTR [rax+0x1400050],al
   140003275:	add    BYTE PTR [rax],al
   140003277:	add    BYTE PTR [rax],ah
   140003279:	push   rcx
   14000327a:	add    BYTE PTR [rax+0x1],al
   14000327d:	add    BYTE PTR [rax],al
   14000327f:	add    BYTE PTR [rsi+0x0],ch
   140003282:	je     0x140003284
   140003284:	add    BYTE PTR fs:[rax+rax*1+0x6c],ch
   140003289:	add    BYTE PTR [rsi],ch
   14000328b:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000328f:	add    BYTE PTR [rax+rax*1+0x0],ch
   140003293:	add    BYTE PTR [rax],al
   140003295:	add    BYTE PTR [rax],al
   140003297:	add    BYTE PTR [rsp+riz*2+0x72],cl
   14000329b:	rex.RX (bad) 
   14000329d:	jae    0x140003313
   14000329f:	rex.RX (bad) 
   1400032a1:	imul   ebp,DWORD PTR [rcx+rcx*2+0x6e],0x64616f4c
   1400032a9:	gs jb  0x1400032ef
   1400032ac:	(bad)  
   1400032ad:	ins    BYTE PTR es:[rdi],dx
   1400032ae:	ins    BYTE PTR es:[rdi],dx
   1400032af:	outs   dx,DWORD PTR ds:[rsi]
   1400032b0:	jne    0x140003326
   1400032b2:	add    BYTE PTR [rax],al
   1400032b4:	add    BYTE PTR [rax],al
   1400032b6:	add    BYTE PTR [rax],al
   1400032b8:	push   rdx
   1400032b9:	je     0x140003327
   1400032bb:	rex.WRX je 0x140003311
   1400032be:	je     0x140003321
   1400032c0:	je     0x140003337
   1400032c2:	jae    0x140003318
   1400032c4:	outs   dx,DWORD PTR ds:[rsi]
   1400032c5:	rex.R outs dx,DWORD PTR ds:[rsi]
   1400032c7:	jae    0x14000330e
   1400032c9:	jb     0x14000333d
   1400032cb:	outs   dx,DWORD PTR ds:[rsi]
   1400032cc:	jb     0x14000331c
   1400032ce:	outs   dx,DWORD PTR ds:[rsi]
   1400032cf:	push   rsp
   1400032d0:	gs (bad) 
   1400032d2:	add    BYTE PTR [rax],al
   1400032d4:	add    BYTE PTR [rax],al
   1400032d6:	add    BYTE PTR [rax],al
   1400032d8:	outs   dx,DWORD PTR ds:[rsi]
   1400032d9:	add    BYTE PTR [rax+0x0],dh
   1400032dc:	add    BYTE PTR gs:[rsi+0x0],ch
	...
   1400032e8:	icebp  
   1400032e9:	in     eax,dx
   1400032ea:	add    BYTE PTR [rax],dl
   1400032ec:	add    al,0x2
   1400032ee:	add    BYTE PTR [rax],al
   1400032f0:	add    BYTE PTR [rax],al
   1400032f2:	add    DWORD PTR [rax],eax
   1400032f4:	add    BYTE PTR [rax],al
   1400032f6:	add    BYTE PTR [rax+0x66004f],al
   1400032fc:	data16 add BYTE PTR [rax],al
   1400032ff:	add    BYTE PTR [rax+0x0],dl
   140003302:	jb     0x140003304
   140003304:	outs   dx,DWORD PTR ds:[rsi]
   140003305:	add    BYTE PTR [rbp+0x0],ch
   140003308:	jo     0x14000330a
   14000330a:	je     0x14000330c
   14000330c:	add    BYTE PTR [rax],al
   14000330e:	add    BYTE PTR [rax],al
   140003310:	push   rdx
   140003311:	add    BYTE PTR [rbp+0x0],ah
   140003314:	jno    0x140003316
   140003316:	jne    0x140003318
   140003318:	imul   eax,DWORD PTR [rax],0x650072
   14000331e:	add    BYTE PTR [r8+rax*1+0x6d],spl
   140003323:	add    BYTE PTR [rcx+0x0],ch
   140003326:	outs   dx,BYTE PTR ds:[rsi]
	...
   14000332f:	add    BYTE PTR [rbx+0x0],dl
   140003332:	ins    DWORD PTR es:[rdi],dx
   140003333:	add    BYTE PTR [rcx+0x0],ah
   140003336:	jb     0x140003338
   140003338:	je     0x14000333a
   14000333a:	push   rbx
   14000333b:	add    BYTE PTR [rbx+0x0],ah
   14000333e:	jb     0x140003340
   140003340:	add    BYTE PTR gs:[rbp+0x0],ah
   140003344:	outs   dx,BYTE PTR ds:[rsi]
   140003345:	add    BYTE PTR [rbp+0x0],al
   140003348:	outs   dx,BYTE PTR ds:[rsi]
   140003349:	add    BYTE PTR [rcx+0x0],ah
   14000334c:	(bad)  
   14000334d:	add    BYTE PTR [rax+rax*1+0x65],ch
   140003351:	add    BYTE PTR [rax+rax*1+0x0],ah
	...
   14000335d:	add    BYTE PTR [rax],al
   14000335f:	add    BYTE PTR [rbx+0x0],dl
   140003362:	outs   dx,DWORD PTR ds:[rsi]
   140003363:	add    BYTE PTR [rsi+0x0],ah
   140003366:	je     0x140003368
   140003368:	ja     0x14000336a
   14000336a:	(bad)  
   14000336b:	add    BYTE PTR [rdx+0x0],dh
   14000336e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   140003373:	add    BYTE PTR [rcx+0x0],ch
   140003376:	movsxd eax,DWORD PTR [rax]
   140003378:	jb     0x14000337a
   14000337a:	outs   dx,DWORD PTR ds:[rsi]
   14000337b:	add    BYTE PTR [rbx+0x0],dh
   14000337e:	outs   dx,DWORD PTR ds:[rsi]
   14000337f:	add    BYTE PTR [rsi+0x0],ah
   140003382:	je     0x140003384
   140003384:	pop    rsp
   140003385:	add    BYTE PTR [rdi+0x0],dl
   140003388:	imul   eax,DWORD PTR [rax],0x64006e
   14000338e:	outs   dx,DWORD PTR ds:[rsi]
   14000338f:	add    BYTE PTR [rdi+0x0],dh
   140003392:	jae    0x140003394
   140003394:	pop    rsp
   140003395:	add    BYTE PTR [rbx+0x0],al
   140003398:	jne    0x14000339a
   14000339a:	jb     0x14000339c
   14000339c:	jb     0x14000339e
   14000339e:	add    BYTE PTR gs:[rsi+0x0],ch
   1400033a2:	je     0x1400033a4
   1400033a4:	push   rsi
   1400033a5:	add    BYTE PTR [rbp+0x0],ah
   1400033a8:	jb     0x1400033aa
   1400033aa:	jae    0x1400033ac
   1400033ac:	imul   eax,DWORD PTR [rax],0x6e006f
   1400033b2:	pop    rsp
   1400033b3:	add    BYTE PTR [rbp+0x0],al
   1400033b6:	js     0x1400033b8
   1400033b8:	jo     0x1400033ba
   1400033ba:	ins    BYTE PTR es:[rdi],dx
   1400033bb:	add    BYTE PTR [rdi+0x0],ch
   1400033be:	jb     0x1400033c0
   1400033c0:	add    BYTE PTR gs:[rdx+0x0],dh
   1400033c4:	add    BYTE PTR [rax],al
   1400033c6:	add    BYTE PTR [rax],al
   1400033c8:	add    BYTE PTR [r14+0x0],r13b
   1400033cc:	(bad)  
   1400033cd:	add    BYTE PTR [rdx+0x0],ah
   1400033d0:	ins    BYTE PTR es:[rdi],dx
   1400033d1:	add    BYTE PTR [rbp+0x0],ah
   1400033d4:	push   rbx
   1400033d5:	add    BYTE PTR [rbp+0x0],ch
   1400033d8:	(bad)  
   1400033d9:	add    BYTE PTR [rdx+0x0],dh
   1400033dc:	je     0x1400033de
   1400033de:	push   rbx
   1400033df:	add    BYTE PTR [rbx+0x0],ah
   1400033e2:	jb     0x1400033e4
   1400033e4:	add    BYTE PTR gs:[rbp+0x0],ah
   1400033e8:	outs   dx,BYTE PTR ds:[rsi]
   1400033e9:	add    BYTE PTR [rax],al
   1400033eb:	add    BYTE PTR [rax],al
   1400033ed:	add    BYTE PTR [rax],al
   1400033ef:	add    BYTE PTR [rbx+0x0],dl
   1400033f2:	outs   dx,DWORD PTR ds:[rsi]
   1400033f3:	add    BYTE PTR [rsi+0x0],ah
   1400033f6:	je     0x1400033f8
   1400033f8:	ja     0x1400033fa
   1400033fa:	(bad)  
   1400033fb:	add    BYTE PTR [rdx+0x0],dh
   1400033fe:	add    BYTE PTR gs:[rax+rax*1+0x50],bl
   140003403:	add    BYTE PTR [rdi+0x0],ch
   140003406:	ins    BYTE PTR es:[rdi],dx
   140003407:	add    BYTE PTR [rcx+0x0],ch
   14000340a:	movsxd eax,DWORD PTR [rax]
   14000340c:	imul   eax,DWORD PTR [rax],0x730065
   140003412:	pop    rsp
   140003413:	add    BYTE PTR [rbp+0x0],cl
   140003416:	imul   eax,DWORD PTR [rax],0x720063
   14000341c:	outs   dx,DWORD PTR ds:[rsi]
   14000341d:	add    BYTE PTR [rbx+0x0],dh
   140003420:	outs   dx,DWORD PTR ds:[rsi]
   140003421:	add    BYTE PTR [rsi+0x0],ah
   140003424:	je     0x140003426
   140003426:	pop    rsp
   140003427:	add    BYTE PTR [rdi+0x0],dl
   14000342a:	imul   eax,DWORD PTR [rax],0x64006e
   140003430:	outs   dx,DWORD PTR ds:[rsi]
   140003431:	add    BYTE PTR [rdi+0x0],dh
   140003434:	jae    0x140003436
   140003436:	pop    rsp
   140003437:	add    BYTE PTR [rbx+0x0],dl
   14000343a:	jns    0x14000343c
   14000343c:	jae    0x14000343e
   14000343e:	je     0x140003440
   140003440:	add    BYTE PTR gs:[rbp+0x0],ch
	...
   140003458:	clc    
   140003459:	xor    al,BYTE PTR [rax]
   14000345b:	rex add DWORD PTR [rax],eax
   14000345e:	add    BYTE PTR [rax],al
   140003460:	add    DWORD PTR [rax],eax
   140003462:	add    BYTE PTR [rax],al
   140003464:	add    BYTE PTR [rax],al
   140003466:	add    BYTE PTR [rax],al
   140003468:	add    BYTE PTR [rbx],dh
   14000346a:	add    BYTE PTR [rax+0x1],al
   14000346d:	add    BYTE PTR [rax],al
   14000346f:	add    BYTE PTR [rdx],al
   140003471:	add    BYTE PTR [rax],al
   140003473:	add    BYTE PTR [rax],al
   140003475:	add    BYTE PTR [rax],al
   140003477:	add    BYTE PTR [rax],dl
   140003479:	xor    eax,DWORD PTR [rax]
   14000347b:	rex add DWORD PTR [rax],eax
   14000347e:	add    BYTE PTR [rax],al
   140003480:	add    BYTE PTR [rax],al
   140003482:	add    BYTE PTR [rax],al
   140003484:	test   eax,0x559f39
   140003489:	add    BYTE PTR [rax],al
   14000348b:	add    BYTE PTR [rdx],al
   14000348d:	add    BYTE PTR [rax],al
   14000348f:	add    BYTE PTR [rax],dh
   140003491:	add    BYTE PTR [rax],al
   140003493:	add    BYTE PTR [rax-0x7fffffcb],al
   140003499:	sbb    eax,0x0
   14000349e:	add    BYTE PTR [rax],al
   1400034a0:	test   eax,0x559f39
   1400034a5:	add    BYTE PTR [rax],al
   1400034a7:	add    BYTE PTR [rip+0x8000000],cl        # 0x1480034ad
   1400034ad:	add    al,BYTE PTR [rax]
   1400034af:	add    ah,al
   1400034b1:	xor    eax,0x1dc40000
	...
   1400034de:	add    BYTE PTR [rax],al
   1400034e0:	movabs al,ds:0x0
	...
   140003535:	add    BYTE PTR [rax],al
   140003537:	add    BYTE PTR [rax],cl
   140003539:	push   rax
   14000353a:	add    BYTE PTR [rax+0x1],al
	...
   14000354d:	add    BYTE PTR [rax],al
   14000354f:	add    al,ch
   140003551:	xor    DWORD PTR [rax],eax
   140003553:	rex add DWORD PTR [rax],eax
   140003556:	add    BYTE PTR [rax],al
   140003558:	lock xor DWORD PTR [rax],eax
   14000355b:	rex add DWORD PTR [rax],eax
   14000355e:	add    BYTE PTR [rax],al
   140003560:	cmp    BYTE PTR [rdx],dh
   140003562:	add    BYTE PTR [rax+0x1],al
   140003565:	add    BYTE PTR [rax],al
   140003567:	add    BYTE PTR [rsi],cl
	...
   140003571:	xor    eax,0x0
	...
   14000357e:	add    BYTE PTR [rax],al
   140003580:	push   rdx
   140003581:	push   rbx
   140003582:	rex.R push rbx
   140003584:	push   rsp
   140003585:	je     0x1400035d1
   140003587:	pushf  
   140003588:	nop
   140003589:	jb     0x1400035c9
   14000358b:	rex.WRXB cdqe 
   14000358d:	or     DWORD PTR [rbx-0x76274f54],0x179
   140003597:	add    BYTE PTR [rbx+0x6d],dl
   14000359a:	(bad)  
   14000359b:	jb     0x140003611
   14000359d:	push   rbx
   14000359e:	movsxd esi,DWORD PTR [rdx+0x65]
   1400035a1:	outs   dx,BYTE PTR gs:[rsi]
   1400035a3:	push   rbx
   1400035a4:	gs je  0x14000361b
   1400035a7:	imul   ebp,DWORD PTR [rsi+0x67],0x64702e73
   1400035ae:	(bad)  
	...
   1400035c3:	add    BYTE PTR [rdi+0x43],al
   1400035c6:	push   rsp
   1400035c7:	rex.WR add BYTE PTR [rax],r10b
   1400035ca:	add    BYTE PTR [rax],al
   1400035cc:	sub    eax,DWORD PTR [rax]
   1400035ce:	add    BYTE PTR [rax],al
   1400035d0:	cs je  0x140003638
   1400035d3:	js     0x140003649
   1400035d5:	and    al,0x64
   1400035d7:	imul   eax,DWORD PTR [rax],0x30000000
   1400035dd:	adc    BYTE PTR [rax],al
   1400035df:	add    BYTE PTR [rdx+rdx*1+0x742e0000],ch
   1400035e6:	gs js  0x14000365d
   1400035e9:	and    al,0x6d
   1400035eb:	outs   dx,BYTE PTR ds:[rsi]
   1400035ec:	add    BYTE PTR [rax],al
   1400035ee:	add    BYTE PTR [rax],al
   1400035f0:	loopne 0x140003614
   1400035f2:	add    BYTE PTR [rax],al
   1400035f4:	adc    al,BYTE PTR [rax]
   1400035f6:	add    BYTE PTR [rax],al
   1400035f8:	cs je  0x140003660
   1400035fb:	js     0x140003671
   1400035fd:	and    al,0x6d
   1400035ff:	outs   dx,BYTE PTR ds:[rsi]
   140003600:	and    al,0x30
   140003602:	xor    BYTE PTR [rax],al
   140003604:	add    BYTE PTR [rbx],ah
   140003606:	add    BYTE PTR [rax],al
   140003608:	push   rax
   140003609:	add    BYTE PTR [rax],al
   14000360b:	add    BYTE PTR [rsi],ch
   14000360d:	je     0x140003674
   14000360f:	js     0x140003685
   140003611:	and    al,0x78
   140003613:	add    BYTE PTR [rax],al
   140003615:	xor    BYTE PTR [rax],al
   140003617:	add    al,ch
   140003619:	add    DWORD PTR [rax],eax
   14000361b:	add    BYTE PTR [rsi],ch
   14000361d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   140003625:	add    BYTE PTR [rax],al
   140003627:	add    al,ch
   140003629:	xor    DWORD PTR [rax],eax
   14000362b:	add    BYTE PTR [rax],dl
   14000362d:	add    BYTE PTR [rax],al
   14000362f:	add    BYTE PTR [rsi],ch
   140003631:	xor    BYTE PTR [rax],dh
   140003633:	movsxd esp,DWORD PTR [rsi+0x67]
   140003636:	add    BYTE PTR [rax],al
   140003638:	clc    
   140003639:	xor    DWORD PTR [rax],eax
   14000363b:	add    BYTE PTR [rax],cl
   14000363d:	add    BYTE PTR [rax],al
   14000363f:	add    BYTE PTR [rsi],ch
   140003641:	rex.XB push r10
   140003643:	push   rsp
   140003644:	and    al,0x58
   140003646:	rex.XB
   140003647:	add    BYTE PTR [r8],al
   14000364a:	add    BYTE PTR [rax],al
   14000364c:	add    BYTE PTR [rdx],dh
   14000364e:	add    BYTE PTR [rax],al
   140003650:	or     BYTE PTR [rax],al
   140003652:	add    BYTE PTR [rax],al
   140003654:	cs rex.XB push r10
   140003657:	push   rsp
   140003658:	and    al,0x58
   14000365a:	rex.XB
   14000365b:	rex.B
   14000365c:	add    BYTE PTR [r8],al
   14000365f:	add    BYTE PTR [rax],cl
   140003661:	xor    al,BYTE PTR [rax]
   140003663:	add    BYTE PTR [rax],cl
   140003665:	add    BYTE PTR [rax],al
   140003667:	add    BYTE PTR [rsi],ch
   140003669:	rex.XB push r10
   14000366b:	push   rsp
   14000366c:	and    al,0x58
   14000366e:	rex.XB push r13
   140003670:	add    BYTE PTR [rax],al
   140003672:	add    BYTE PTR [rax],al
   140003674:	adc    BYTE PTR [rdx],dh
   140003676:	add    BYTE PTR [rax],al
   140003678:	or     BYTE PTR [rax],al
   14000367a:	add    BYTE PTR [rax],al
   14000367c:	cs rex.XB push r10
   14000367f:	push   rsp
   140003680:	and    al,0x58
   140003682:	rex.XB pop r10
   140003684:	add    BYTE PTR [rax],al
   140003686:	add    BYTE PTR [rax],al
   140003688:	sbb    BYTE PTR [rdx],dh
   14000368a:	add    BYTE PTR [rax],al
   14000368c:	or     BYTE PTR [rax],al
   14000368e:	add    BYTE PTR [rax],al
   140003690:	cs rex.XB push r10
   140003693:	push   rsp
   140003694:	and    al,0x58
   140003696:	rex.WB
   140003697:	add    BYTE PTR [r8],al
   14000369a:	add    BYTE PTR [rax],al
   14000369c:	and    BYTE PTR [rdx],dh
   14000369e:	add    BYTE PTR [rax],al
   1400036a0:	or     BYTE PTR [rax],al
   1400036a2:	add    BYTE PTR [rax],al
   1400036a4:	cs rex.XB push r10
   1400036a7:	push   rsp
   1400036a8:	and    al,0x58
   1400036aa:	rex.WB
   1400036ab:	rex.B
   1400036ac:	add    BYTE PTR [r8],al
   1400036af:	add    BYTE PTR [rax],ch
   1400036b1:	xor    al,BYTE PTR [rax]
   1400036b3:	add    BYTE PTR [rax],cl
   1400036b5:	add    BYTE PTR [rax],al
   1400036b7:	add    BYTE PTR [rsi],ch
   1400036b9:	rex.XB push r10
   1400036bb:	push   rsp
   1400036bc:	and    al,0x58
   1400036be:	rex.WB pop r9
   1400036c0:	add    BYTE PTR [rax],al
   1400036c2:	add    BYTE PTR [rax],al
   1400036c4:	xor    BYTE PTR [rdx],dh
   1400036c6:	add    BYTE PTR [rax],al
   1400036c8:	or     BYTE PTR [rax],al
   1400036ca:	add    BYTE PTR [rax],al
   1400036cc:	cs rex.XB push r10
   1400036cf:	push   rsp
   1400036d0:	and    al,0x58
   1400036d2:	rex.WB pop r10
   1400036d4:	add    BYTE PTR [rax],al
   1400036d6:	add    BYTE PTR [rax],al
   1400036d8:	cmp    BYTE PTR [rdx],dh
   1400036da:	add    BYTE PTR [rax],al
   1400036dc:	cmp    BYTE PTR [rax],al
   1400036de:	add    BYTE PTR [rax],al
   1400036e0:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   1400036e9:	add    BYTE PTR [rax],al
   1400036eb:	add    BYTE PTR [rax+0x32],dh
   1400036ee:	add    BYTE PTR [rax],al
   1400036f0:	adc    BYTE PTR [rbx],al
   1400036f2:	add    BYTE PTR [rax],al
   1400036f4:	cs jb  0x14000375b
   1400036f7:	(bad)  
   1400036f8:	je     0x14000375b
   1400036fa:	add    BYTE PTR [rax],al
   1400036fc:	xor    BYTE PTR [rip+0x24c0000],0x0        # 0x1424c3703
   140003703:	add    BYTE PTR [rsi],ch
   140003705:	jb     0x14000376b
   140003707:	(bad)  
   140003708:	je     0x14000376b
   14000370a:	and    al,0x7a
   14000370c:	jp     0x140003788
   14000370e:	fs (bad) 
   140003710:	add    BYTE PTR [eax],al
   140003713:	add    al,dl
   140003715:	(bad)  
   140003716:	add    BYTE PTR [rax],al
   140003718:	add    DWORD PTR fs:[rax],eax
   14000371b:	add    BYTE PTR [rsi],ch
   14000371d:	js     0x140003783
   14000371f:	(bad)  
   140003720:	je     0x140003783
   140003722:	add    BYTE PTR [rax],al
   140003724:	cmp    BYTE PTR [rcx],bh
   140003726:	add    BYTE PTR [rax],al
   140003728:	sub    al,0x1
   14000372a:	add    BYTE PTR [rax],al
   14000372c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   140003735:	add    BYTE PTR [rax],al
   140003737:	add    BYTE PTR [rdx+rdi*1+0x0],ah
   14000373b:	add    BYTE PTR [rax+rax*1],dl
   14000373e:	add    BYTE PTR [rax],al
   140003740:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140003749:	add    BYTE PTR [rax],al
   14000374b:	add    BYTE PTR [rax+0x3a],bh
   14000374e:	add    BYTE PTR [rax],al
   140003750:	call   0x16e003756
   140003755:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000375d:	add    BYTE PTR [rax],al
   14000375f:	add    BYTE PTR [rax+0x3c],ah
   140003762:	add    BYTE PTR [rax],al
   140003764:	mov    dh,0x4
   140003766:	add    BYTE PTR [rax],al
   140003768:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   140003771:	add    BYTE PTR [rax],al
   140003773:	add    BYTE PTR [rax],al
   140003775:	push   rax
   140003776:	add    BYTE PTR [rax],al
   140003778:	sub    BYTE PTR [rax],al
   14000377a:	add    BYTE PTR [rax],al
   14000377c:	cs fs (bad) 
   14000377f:	je     0x1400037e2
   140003781:	add    BYTE PTR [rax],al
   140003783:	add    BYTE PTR [rax+0x50],al
   140003786:	add    BYTE PTR [rax],al
   140003788:	js     0x140003790
   14000378a:	add    BYTE PTR [rax],al
   14000378c:	cs (bad) 
   14000378f:	jae    0x140003791
   140003791:	add    BYTE PTR [rax],al
   140003793:	add    BYTE PTR [rax],al
   140003795:	(bad)  
   140003796:	add    BYTE PTR [rax],al
   140003798:	je     0x14000379b
   14000379a:	add    BYTE PTR [rax],al
   14000379c:	cs jo  0x140003803
   14000379f:	(bad)  
   1400037a0:	je     0x140003803
   1400037a2:	add    BYTE PTR [rax],al
   1400037a4:	add    BYTE PTR [rax+0x0],dh
   1400037a7:	add    al,dl
   1400037a9:	add    al,BYTE PTR [rax]
   1400037ab:	add    BYTE PTR [rsi],ch
   1400037ad:	jb     0x140003822
   1400037af:	jb     0x140003814
   1400037b1:	and    al,0x30
   1400037b3:	xor    DWORD PTR [rax],eax
   1400037b5:	add    BYTE PTR [rax],al
   1400037b7:	add    al,dl
   1400037b9:	jb     0x1400037bb
   1400037bb:	add    BYTE PTR [rax+0x2e0000d0],cl
   1400037c1:	jb     0x140003836
   1400037c3:	jb     0x140003828
   1400037c5:	and    al,0x30
   1400037c7:	xor    al,BYTE PTR [rax]
   1400037c9:	add    BYTE PTR [rax],al
   1400037cb:	add    BYTE PTR [rax],al
   1400037cd:	add    BYTE PTR [rax],al
   1400037cf:	add    BYTE PTR [rcx],bl
   1400037d1:	(bad)  
   1400037d2:	add    eax,0x2c340d00
   1400037d7:	add    BYTE PTR [rip+0x6002a01],cl        # 0x1460061de
   1400037dd:	(bad)  
   1400037de:	add    BYTE PTR [rax],al
   1400037e0:	rex.W and al,BYTE PTR [rax]
   1400037e3:	add    BYTE PTR [rax+0x1],al
   1400037e6:	add    BYTE PTR [rax],al
   1400037e8:	add    DWORD PTR [rsi],eax
   1400037ea:	add    al,BYTE PTR [rax]
   1400037ec:	(bad)  
   1400037ed:	xor    al,BYTE PTR [rdx]
   1400037ef:	xor    BYTE PTR [rcx],al
   1400037f1:	clts   
   1400037f3:	add    BYTE PTR [rdi],cl
   1400037f5:	fs (bad) 
   1400037f7:	add    BYTE PTR [rdi],cl
   1400037f9:	xor    al,0x6
   1400037fb:	add    BYTE PTR [rdi],cl
   1400037fd:	xor    cl,BYTE PTR [rbx]
   1400037ff:	jo     0x140003802
   140003801:	or     al,BYTE PTR [rax+rax*1]
   140003804:	or     dh,BYTE PTR [rax+rcx*1]
   140003807:	add    BYTE PTR [rdx],cl
   140003809:	push   rdx
   14000380a:	(bad)  
   14000380b:	jo     0x140003826
   14000380d:	sub    BYTE PTR [rcx],cl
   14000380f:	add    BYTE PTR [rdx],bl
   140003811:	sub    al,BYTE PTR fs:[rax]
   140003814:	sbb    dh,BYTE PTR [rcx+rbp*1]
   140003817:	add    BYTE PTR [rdx],bl
   140003819:	add    DWORD PTR [rax+rax*1],esp
   14000381c:	(bad)  
   14000381d:	loopne 0x14000382b
   14000381f:	jo     0x14000382c
   140003821:	push   rax
   140003822:	add    BYTE PTR [rax],al
   140003824:	rex.W and al,BYTE PTR [rax]
   140003827:	add    BYTE PTR [rax],bl
   140003829:	add    DWORD PTR [rax],eax
   14000382b:	add    BYTE PTR [rcx],bl
   14000382d:	and    ecx,DWORD PTR [rax]
   14000382f:	add    BYTE PTR [rsp+riz*2],dl
   140003832:	adc    BYTE PTR [rax],al
   140003834:	adc    al,0x54
   140003836:	lldt   WORD PTR [rsp+rsi*1]
   14000383a:	(bad)  
   14000383b:	add    BYTE PTR [rdx+rsi*4],dl
   14000383e:	adc    BYTE PTR [rax+0x48],dh
   140003841:	and    al,BYTE PTR [rax]
   140003843:	add    BYTE PTR [rax+0x0],bl
   140003846:	add    BYTE PTR [rax],al
   140003848:	add    DWORD PTR [rdx],edx
   14000384a:	or     BYTE PTR [rax],al
   14000384c:	adc    dl,BYTE PTR [rax+rdx*1+0x0]
   140003850:	adc    dh,BYTE PTR [rsi+rcx*1]
   140003853:	add    BYTE PTR [rdx],dl
   140003855:	xchg   edx,eax
   140003856:	(bad)  
   140003857:	loopne 0x140003865
   140003859:	jo     0x140003866
   14000385b:	(bad)  
   14000385c:	add    DWORD PTR [rdx+rax*1],ecx
   14000385f:	add    BYTE PTR [rdx+rdx*4],cl
   140003862:	or     BYTE PTR [rax],dh
   140003864:	add    DWORD PTR [rbx],ecx
   140003866:	add    DWORD PTR [rax],eax
   140003868:	or     eax,DWORD PTR [rdx+0x10010000]
   14000386e:	add    al,0x0
   140003870:	adc    BYTE PTR [rdx+rcx*1],dh
   140003873:	add    BYTE PTR [rax],dl
   140003875:	jb     0x140003883
   140003877:	jo     0x14000387a
   140003879:	(bad)  
   14000387a:	add    al,BYTE PTR [rax]
   14000387c:	(bad)  
   14000387d:	push   rdx
   14000387e:	add    dh,BYTE PTR [rax]
   140003880:	add    DWORD PTR [rcx+rax*1],eax
   140003883:	add    BYTE PTR [rdx+rax*2],al
   140003886:	add    BYTE PTR [rax],al
   140003888:	add    DWORD PTR [rcx+rax*1],eax
   14000388b:	add    BYTE PTR [rdx+riz*2],al
   14000388e:	add    BYTE PTR [rax],al
   140003890:	or     DWORD PTR [rbx+rcx*1],ebx
   140003893:	add    BYTE PTR [rsp+rsi*2],bl
   140003896:	sbb    al,0x0
   140003898:	sbb    al,0x64
   14000389a:	sbb    eax,DWORD PTR [rax]
   14000389c:	sbb    al,0x34
   14000389e:	sbb    al,BYTE PTR [rax]
   1400038a0:	sbb    al,0x1
   1400038a2:	(bad)  
   1400038a3:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e04c99
   1400038a9:	rol    BYTE PTR [rax],0x0
   1400038ac:	push   rsi
   1400038ad:	and    BYTE PTR [rax],al
   1400038af:	add    BYTE PTR [rcx],al
   1400038b1:	add    BYTE PTR [rax],al
   1400038b3:	add    BYTE PTR [rax-0x59ffffe6],dh
   1400038b9:	sbb    al,0x0
   1400038bb:	add    BYTE PTR [rsi],al
   1400038bd:	and    eax,DWORD PTR [rax]
   1400038bf:	add    BYTE PTR [rsi+0x1c],ah
   1400038c5:	add    BYTE PTR [rax],al
   1400038c7:	add    BYTE PTR [rcx],al
   1400038c9:	add    BYTE PTR [rax],al
   1400038cb:	add    BYTE PTR [rcx],cl
   1400038cd:	add    al,0x1
   1400038cf:	add    BYTE PTR [rdx+riz*1],al
   1400038d2:	add    BYTE PTR [rax],al
   1400038d4:	push   rsi
   1400038d5:	and    BYTE PTR [rax],al
   1400038d7:	add    BYTE PTR [rcx],al
   1400038d9:	add    BYTE PTR [rax],al
   1400038db:	add    ah,bl
   1400038dd:	sbb    eax,0x1e120000
   1400038e2:	add    BYTE PTR [rax],al
   1400038e4:	add    DWORD PTR [rax],eax
   1400038e6:	add    BYTE PTR [rax],al
   1400038e8:	adc    bl,BYTE PTR [rsi]
   1400038ea:	add    BYTE PTR [rax],al
   1400038ec:	or     DWORD PTR [rdx],ecx
   1400038ee:	add    al,0x0
   1400038f0:	or     dh,BYTE PTR [rsi+rax*1]
   1400038f3:	add    BYTE PTR [rdx],cl
   1400038f5:	xor    al,BYTE PTR [rsi]
   1400038f7:	jo     0x14000394f
   1400038f9:	and    BYTE PTR [rax],al
   1400038fb:	add    BYTE PTR [rcx],al
   1400038fd:	add    BYTE PTR [rax],al
   1400038ff:	add    ch,ch
   140003901:	(bad)  
   140003902:	add    BYTE PTR [rax],al
   140003904:	and    BYTE PTR [rdi],bl
   140003906:	add    BYTE PTR [rax],al
   140003908:	xor    BYTE PTR [rbx],ah
   14000390a:	add    BYTE PTR [rax],al
   14000390c:	and    BYTE PTR [rdi],bl
   14000390e:	add    BYTE PTR [rax],al
   140003910:	add    DWORD PTR [rsi],eax
   140003912:	add    al,BYTE PTR [rax]
   140003914:	(bad)  
   140003915:	xor    al,BYTE PTR [rdx]
   140003917:	push   rax
   140003918:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d3922
   14000391e:	or     DWORD PTR [rax],eax
   140003920:	or     eax,0x1500632
   140003925:	or     al,0x2
   140003927:	add    BYTE PTR [rcx+rax*1],cl
   14000392a:	adc    DWORD PTR [rax],eax
   14000392c:	add    BYTE PTR [rax],al
   14000392e:	add    BYTE PTR [rax],al
   140003930:	add    DWORD PTR [rax],eax
   140003932:	add    BYTE PTR [rax],al
   140003934:	add    BYTE PTR [rax],al
   140003936:	add    BYTE PTR [rax],al
   140003938:	js     0x140003974
	...
   140003942:	add    BYTE PTR [rax],al
   140003944:	outs   dx,BYTE PTR ds:[rsi]
   140003945:	cmp    al,0x0
   140003947:	add    BYTE PTR [rax],al
   140003949:	xor    BYTE PTR [rax],al
   14000394b:	add    BYTE PTR [rax+0x3a],bl
   140003951:	add    BYTE PTR [rax],al
   140003953:	add    BYTE PTR [rax],al
   140003955:	add    BYTE PTR [rax],al
   140003957:	add    al,ah
   140003959:	cmp    al,0x0
   14000395b:	add    BYTE PTR [rax],ah
   14000395d:	xor    BYTE PTR [rax],al
   14000395f:	add    al,bl
   140003961:	cmp    al,BYTE PTR [rax]
	...
   14000396b:	add    dh,bh
   14000396d:	cmp    al,0x0
   14000396f:	add    BYTE PTR [rax+0x30],ah
   140003972:	add    BYTE PTR [rax],al
   140003974:	loopne 0x1400039b1
	...
   14000397e:	add    BYTE PTR [rax],al
   140003980:	mov    esp,0x6800003d
   140003985:	xor    DWORD PTR [rax],eax
   140003987:	add    al,cl
   140003989:	cmp    al,BYTE PTR [rax]
	...
   140003993:	add    ah,ch
   140003995:	cmp    eax,0x30500000
   14000399a:	add    BYTE PTR [rax],al
   14000399c:	call   0x1400039db
   1400039a1:	add    BYTE PTR [rax],al
   1400039a3:	add    BYTE PTR [rax],al
   1400039a5:	add    BYTE PTR [rax],al
   1400039a7:	add    BYTE PTR [rdi+rdi*1+0x30700000],dh
   1400039ae:	add    BYTE PTR [rax],al
   1400039b0:	mov    eax,0x3b
   1400039b5:	add    BYTE PTR [rax],al
   1400039b7:	add    BYTE PTR [rax],al
   1400039b9:	add    BYTE PTR [rax],al
   1400039bb:	add    ah,dl
   1400039bd:	(bad)  
   1400039be:	add    BYTE PTR [rax],al
   1400039c0:	rex xor DWORD PTR [rax],eax
   1400039c3:	add    BYTE PTR [rax],bl
   1400039c5:	cmp    eax,DWORD PTR [rax]
	...
   1400039cf:	add    dh,dh
   1400039d1:	(bad)  
   1400039d2:	add    BYTE PTR [rax],al
   1400039d4:	movabs al,ds:0x3b00000030
   1400039dd:	add    BYTE PTR [rax],al
   1400039df:	add    BYTE PTR [rax],al
   1400039e1:	add    BYTE PTR [rax],al
   1400039e3:	add    BYTE PTR [rax],ah
   1400039e5:	add    BYTE PTR [rax],al
   1400039e8:	mov    BYTE PTR [rax],dh
   1400039ea:	add    BYTE PTR [rax],al
   1400039ec:	cmp    rax,QWORD PTR [rax]
	...
   1400039f7:	add    BYTE PTR [rdx+0x40],cl
   1400039fa:	add    BYTE PTR [rax],al
   1400039fc:	shl    BYTE PTR [rax],1
   1400039fe:	add    BYTE PTR [rax],al
   140003a00:	enter  0x3b,0x0
	...
   140003a0c:	outs   dx,BYTE PTR ds:[rsi]
   140003a0d:	add    BYTE PTR [rax],al
   140003a10:	push   rax
   140003a11:	xor    DWORD PTR [rax],eax
   140003a13:	add    BYTE PTR [rax+0x3b],cl
   140003a19:	add    BYTE PTR [rax],al
   140003a1b:	add    BYTE PTR [rax],al
   140003a1d:	add    BYTE PTR [rax],al
   140003a1f:	add    BYTE PTR [rdx+0x10000040],dl
   140003a25:	xor    DWORD PTR [rax],eax
   140003a27:	add    BYTE PTR [rax+0x3b],ch
   140003a2d:	add    BYTE PTR [rax],al
   140003a2f:	add    BYTE PTR [rax],al
   140003a31:	add    BYTE PTR [rax],al
   140003a33:	add    BYTE PTR [rax+0x30000040],bh
   140003a39:	xor    DWORD PTR [rax],eax
   140003a3b:	add    BYTE PTR [rax+0x3b],bl
	...
   140003a46:	add    BYTE PTR [rax],al
   140003a48:	fiadd  DWORD PTR [rax+0x0]
   140003a4b:	add    al,ah
   140003a4d:	xor    BYTE PTR [rax],al
   140003a4f:	add    BYTE PTR [rax+0x3a],cl
   140003a55:	add    BYTE PTR [rax],al
   140003a57:	add    BYTE PTR [rax],al
   140003a59:	add    BYTE PTR [rax],al
   140003a5b:	add    dh,bh
   140003a5d:	add    BYTE PTR [rax],al
   140003a60:	adc    BYTE PTR [rax],dh
	...
   140003a76:	add    BYTE PTR [rax],al
   140003a78:	(bad)  
   140003a79:	cmp    al,0x0
	...
   140003a87:	add    BYTE PTR [rcx+0x1],bl
   140003a8a:	add    BYTE PTR [rax],al
   140003a8c:	add    BYTE PTR [rax],al
   140003a8e:	add    BYTE PTR [rax+0x0],al
   140003a94:	add    BYTE PTR [rax],al
   140003a96:	add    BYTE PTR [rax],al
   140003a98:	mov    esp,0x3c
   140003a9d:	add    BYTE PTR [rax],al
   140003a9f:	add    BYTE PTR [rdx+0x3c],dl
   140003aa5:	add    BYTE PTR [rax],al
   140003aa7:	add    dh,cl
   140003aa9:	cmp    al,0x0
   140003aab:	add    BYTE PTR [rax],al
   140003aad:	add    BYTE PTR [rax],al
   140003aaf:	add    BYTE PTR [rsp+rdi*1+0x0],bh
   140003ab3:	add    BYTE PTR [rax],al
   140003ab5:	add    BYTE PTR [rax],al
   140003ab7:	add    BYTE PTR [rax+0x3c],ch
	...
   140003ac5:	add    BYTE PTR [rax],al
   140003ac7:	add    ah,bl
   140003ac9:	cmp    eax,0x0
	...
   140003ad6:	add    BYTE PTR [rax],al
   140003ad8:	out    dx,al
   140003ad9:	cmp    al,0x0
	...
   140003ae7:	add    BYTE PTR [rdx],cl
   140003ae9:	add    BYTE PTR ds:[rax],al
   140003aec:	add    BYTE PTR [rax],al
   140003aee:	add    BYTE PTR [rax],al
   140003af0:	clc    
   140003af1:	cmp    eax,0x0
	...
   140003afe:	add    BYTE PTR [rax],al
   140003b00:	ss add BYTE PTR ds:[rax],al
   140003b04:	add    BYTE PTR [rax],al
   140003b06:	add    BYTE PTR [rax],al
   140003b08:	(bad)  
   140003b09:	(bad)  
	...
   140003b16:	add    BYTE PTR [rax],al
   140003b18:	ss (bad) 
   140003b1a:	add    BYTE PTR [rax],al
   140003b1c:	add    BYTE PTR [rax],al
   140003b1e:	add    BYTE PTR [rax],al
   140003b20:	and    bh,BYTE PTR [rdi]
   140003b22:	add    BYTE PTR [rax],al
   140003b24:	add    BYTE PTR [rax],al
   140003b26:	add    BYTE PTR [rax],al
   140003b28:	and    al,0x3e
   140003b2a:	add    BYTE PTR [rax],al
   140003b2c:	add    BYTE PTR [rax],al
   140003b2e:	add    BYTE PTR [rax],al
   140003b30:	outs   dx,BYTE PTR ds:[rsi]
   140003b31:	add    BYTE PTR ds:[rax],al
   140003b34:	add    BYTE PTR [rax],al
   140003b36:	add    BYTE PTR [rax],al
   140003b38:	test   BYTE PTR [rsi],bh
	...
   140003b46:	add    BYTE PTR [rax],al
   140003b48:	push   rsp
   140003b49:	add    BYTE PTR ds:[rax],al
	...
   140003b58:	xchg   edx,eax
   140003b59:	(bad)  
   140003b5a:	add    BYTE PTR [rax],al
   140003b5c:	add    BYTE PTR [rax],al
   140003b5e:	add    BYTE PTR [rax],al
   140003b60:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140003b61:	(bad)  
   140003b62:	add    BYTE PTR [rax],al
   140003b64:	add    BYTE PTR [rax],al
   140003b66:	add    BYTE PTR [rax],al
   140003b68:	(bad)  
   140003b69:	(bad)  
   140003b6a:	add    BYTE PTR [rax],al
   140003b6c:	add    BYTE PTR [rax],al
   140003b6e:	add    BYTE PTR [rax],al
   140003b70:	jb     0x140003bb1
   140003b72:	add    BYTE PTR [rax],al
   140003b74:	add    BYTE PTR [rax],al
   140003b76:	add    BYTE PTR [rax],al
   140003b78:	cmp    BYTE PTR [rdi],0x0
	...
   140003b87:	add    al,bl
   140003b89:	add    BYTE PTR ds:[rax],al
   140003b8c:	add    BYTE PTR [rax],al
   140003b8e:	add    BYTE PTR [rax],al
   140003b90:	(bad)  
   140003b91:	add    BYTE PTR ds:[rax],al
   140003b94:	add    BYTE PTR [rax],al
   140003b96:	add    BYTE PTR [rax],al
   140003b98:	repnz add BYTE PTR ds:[rax],al
	...
   140003ba8:	rex.WX (bad) 
	...
   140003bb6:	add    BYTE PTR [rax],al
   140003bb8:	sbb    al,0x3e
	...
   140003bc6:	add    BYTE PTR [rax],al
   140003bc8:	mov    ah,0x3e
   140003bca:	add    BYTE PTR [rax],al
   140003bcc:	add    BYTE PTR [rax],al
   140003bce:	add    BYTE PTR [rax],al
   140003bd0:	(bad)  
   140003bd1:	add    BYTE PTR ds:[rax],al
	...
   140003be0:	enter  0x3d,0x0
   140003be4:	add    BYTE PTR [rax],al
   140003be6:	add    BYTE PTR [rax],al
   140003be8:	mov    al,0x3d
   140003bea:	add    BYTE PTR [rax],al
   140003bec:	add    BYTE PTR [rax],al
   140003bee:	add    BYTE PTR [rax],al
   140003bf0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140003bf1:	cmp    eax,0x0
   140003bf6:	add    BYTE PTR [rax],al
   140003bf8:	pushf  
   140003bf9:	cmp    eax,0x0
   140003bfe:	add    BYTE PTR [rax],al
   140003c00:	test   BYTE PTR [rip+0x0],bh        # 0x140003c06
   140003c06:	add    BYTE PTR [rax],al
   140003c08:	js     0x140003c47
   140003c0a:	add    BYTE PTR [rax],al
   140003c0c:	add    BYTE PTR [rax],al
   140003c0e:	add    BYTE PTR [rax],al
   140003c10:	fs cmp eax,0x0
   140003c16:	add    BYTE PTR [rax],al
   140003c18:	pop    rdx
   140003c19:	cmp    eax,0x0
   140003c1e:	add    BYTE PTR [rax],al
   140003c20:	push   rdx
   140003c21:	cmp    eax,0x0
   140003c26:	add    BYTE PTR [rax],al
   140003c28:	rex.WX cmp rax,0x0
   140003c2e:	add    BYTE PTR [rax],al
   140003c30:	cmp    BYTE PTR [rip+0x0],bh        # 0x140003c36
   140003c36:	add    BYTE PTR [rax],al
   140003c38:	es cmp eax,0x0
   140003c3e:	add    BYTE PTR [rax],al
   140003c40:	sbb    BYTE PTR [rip+0x0],bh        # 0x140003c46
   140003c46:	add    BYTE PTR [rax],al
   140003c48:	or     bh,BYTE PTR [rip+0x0]        # 0x140003c4e
   140003c4e:	add    BYTE PTR [rax],al
   140003c50:	or     al,0x41
	...
   140003c5e:	add    BYTE PTR [rax],al
   140003c60:	and    eax,DWORD PTR [rcx]
   140003c62:	rex.RB jbe 0x140003cca
   140003c65:	outs   dx,BYTE PTR ds:[rsi]
   140003c66:	je     0x140003cbf
   140003c68:	jb     0x140003cd3
   140003c6a:	je     0x140003cd1
   140003c6c:	add    BYTE PTR [rax],al
   140003c6e:	rex.B
   140003c6f:	rex.R push rsi
   140003c71:	push   r8
   140003c73:	xor    rsi,QWORD PTR [r10]
   140003c76:	cs fs ins BYTE PTR es:[rdi],dx
   140003c79:	ins    BYTE PTR es:[rdi],dx
   140003c7a:	add    BYTE PTR [rax],al
   140003c7c:	ins    DWORD PTR es:[rdi],dx
   140003c7d:	add    al,BYTE PTR [rdi+0x65]
   140003c80:	je     0x140003ccf
   140003c82:	outs   dx,DWORD PTR ds:[rsi]
   140003c83:	fs jne 0x140003cf2
   140003c86:	gs rex.W (bad) 
   140003c89:	outs   dx,BYTE PTR ds:[rsi]
   140003c8a:	fs ins BYTE PTR es:[rdi],dx
   140003c8c:	gs rex.RB js 0x140003ce7
   140003c90:	add    BYTE PTR [rax],al
   140003c92:	imul   eax,DWORD PTR [rdx],0x4d746547
   140003c98:	outs   dx,DWORD PTR ds:[rsi]
   140003c99:	fs jne 0x140003d08
   140003c9c:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   140003ca6:	add    BYTE PTR [rax],al
   140003ca8:	outs   dx,BYTE PTR ds:[rsi]
   140003ca9:	add    al,BYTE PTR [rdi+0x65]
   140003cac:	je     0x140003cfb
   140003cae:	outs   dx,DWORD PTR ds:[rsi]
   140003caf:	fs jne 0x140003d1e
   140003cb2:	gs rex.W (bad) 
   140003cb5:	outs   dx,BYTE PTR ds:[rsi]
   140003cb6:	fs ins BYTE PTR es:[rdi],dx
   140003cb8:	gs push rdi
   140003cba:	add    BYTE PTR [rax],al
   140003cbc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140003cbd:	add    al,BYTE PTR [rdi+0x65]
   140003cc0:	je     0x140003d12
   140003cc2:	jb     0x140003d33
   140003cc4:	movsxd eax,DWORD PTR [rcx+0x64]
   140003cc7:	fs jb  0x140003d2f
   140003cca:	jae    0x140003d3f
   140003ccc:	add    BYTE PTR [rax],al
   140003cce:	scas   al,BYTE PTR es:[rdi]
   140003ccf:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   140003cd3:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140003cdc:	js     0x140003d35
   140003cde:	add    BYTE PTR [rax],al
   140003ce0:	rex.WXB
   140003ce1:	rex.RB push r10
   140003ce3:	rex.WRX
   140003ce4:	rex.RB
   140003ce5:	xor    r14,QWORD PTR [rdx]
   140003ce8:	cs fs ins BYTE PTR es:[rdi],dx
   140003ceb:	ins    BYTE PTR es:[rdi],dx
   140003cec:	add    BYTE PTR [rax],al
   140003cee:	loop   0x140003cf2
   140003cf0:	push   rbx
   140003cf1:	outs   dx,BYTE PTR gs:[rsi]
   140003cf3:	fs rex.WRB
   140003cf5:	gs jae 0x140003d6b
   140003cf8:	(bad)  
   140003cf9:	addr32 gs push rdi
   140003cfc:	add    BYTE PTR [rax],al
   140003cfe:	push   rbp
   140003cff:	push   rbx
   140003d00:	rex.RB push r10
   140003d02:	xor    esi,DWORD PTR [rdx]
   140003d04:	cs fs ins BYTE PTR es:[rdi],dx
   140003d07:	ins    BYTE PTR es:[rdi],dx
   140003d08:	add    BYTE PTR [rax],al
   140003d0a:	push   rbp
   140003d0b:	add    BYTE PTR [rdi+0x58],bl
   140003d0e:	movsxd esi,DWORD PTR [rax+0x74]
   140003d11:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140003d1a:	pop    rdi
   140003d1b:	(bad)  
   140003d1c:	ins    DWORD PTR es:[rdi],dx
   140003d1d:	jae    0x140003d86
   140003d1f:	pop    rdi
   140003d20:	gs js  0x140003d8c
   140003d23:	je     0x140003d25
   140003d25:	add    BYTE PTR [rbp+0x775f5f00],bl
   140003d2b:	addr32 gs je 0x140003d9c
   140003d2f:	(bad)  
   140003d30:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140003d37:	add    BYTE PTR [rsi+0x735f5f00],cl
   140003d3d:	gs je  0x140003d9f
   140003d40:	(bad)  
   140003d41:	jo     0x140003db3
   140003d43:	pop    rdi
   140003d44:	je     0x140003dbf
   140003d46:	jo     0x140003dad
   140003d48:	add    BYTE PTR [rax],al
   140003d4a:	xor    al,BYTE PTR [riz*2+0x746978]
   140003d51:	add    BYTE PTR [rsi],cl
   140003d53:	add    DWORD PTR [rdi+0x65],ebx
   140003d56:	js     0x140003dc1
   140003d58:	je     0x140003d5a
   140003d5a:	rol    DWORD PTR [rax],0x5f
   140003d5d:	movsxd esp,DWORD PTR [rbp+0x78]
   140003d60:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140003d68:	jae    0x140003dcf
   140003d6a:	je     0x140003de1
   140003d6c:	jae    0x140003dd3
   140003d6e:	jb     0x140003ddd
   140003d70:	(bad)  
   140003d71:	je     0x140003ddb
   140003d73:	gs jb  0x140003de8
   140003d76:	add    BYTE PTR [rax],al
   140003d78:	jge    0x140003d7b
   140003d7a:	pop    rdi
   140003d7b:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140003d82:	ins    DWORD PTR es:[rdi],dx
   140003d83:	add    BYTE PTR [rdi+0x0],dl
   140003d86:	pop    rdi
   140003d87:	pop    rdi
   140003d88:	rex.XB pop r15
   140003d8a:	jae    0x140003dfc
   140003d8c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140003d90:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140003d97:	ins    BYTE PTR es:[rdi],dx
   140003d98:	gs jb  0x140003d9b
   140003d9b:	add    BYTE PTR [rdx+0x63775f03],al
   140003da1:	ins    DWORD PTR es:[rdi],dx
   140003da2:	fs ins BYTE PTR es:[rdi],dx
   140003da4:	outs   dx,BYTE PTR ds:[rsi]
   140003da5:	add    BYTE PTR [rdi],ah
   140003da7:	add    DWORD PTR [rdi+0x66],ebx
   140003daa:	ins    DWORD PTR es:[rdi],dx
   140003dab:	outs   dx,DWORD PTR ds:[rsi]
   140003dac:	fs add BYTE PTR gs:[rax],al
   140003db0:	rol    BYTE PTR [rax],cl
   140003db2:	pop    rdi
   140003db3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140003db6:	ins    DWORD PTR es:[rdi],dx
   140003db7:	outs   dx,DWORD PTR ds:[rsi]
   140003db8:	fs add BYTE PTR gs:[rax],al
   140003dbc:	ins    DWORD PTR es:[rdi],dx
   140003dbd:	jae    0x140003e35
   140003dbf:	movsxd esi,DWORD PTR [rdx+0x74]
   140003dc2:	cs fs ins BYTE PTR es:[rdi],dx
   140003dc5:	ins    BYTE PTR es:[rdi],dx
   140003dc6:	add    BYTE PTR [rax],al
   140003dc8:	(bad)  
   140003dc9:	add    BYTE PTR [rdi],bh
   140003dcb:	je     0x140003e32
   140003dcd:	jb     0x140003e3c
   140003dcf:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140003dd6:	pop    rcx
   140003dd7:	pop    r8
   140003dd9:	pop    rax
   140003dda:	pop    rdx
   140003ddb:	add    BYTE PTR [rsi+0x65685301],dh
   140003de1:	ins    BYTE PTR es:[rdi],dx
   140003de2:	ins    BYTE PTR es:[rdi],dx
   140003de3:	rex.RB js 0x140003e4b
   140003de6:	movsxd esi,DWORD PTR [rbp+0x74]
   140003de9:	gs push rdi
   140003deb:	add    BYTE PTR [rbx+0x48],dl
   140003dee:	rex.RB
   140003def:	rex.WR
   140003df0:	xor    r14,QWORD PTR [rdx]
   140003df3:	cs fs ins BYTE PTR es:[rdi],dx
   140003df6:	ins    BYTE PTR es:[rdi],dx
   140003df7:	add    BYTE PTR [rsi],ah
   140003df9:	add    BYTE PTR [rbx+0x6f],al
   140003dfc:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140003dfe:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140003e06:	rex.RB js 0x140003e09
   140003e09:	add    BYTE PTR [rdx+0x0],al
   140003e0c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140003e0e:	push   rbp
   140003e0f:	outs   dx,BYTE PTR ds:[rsi]
   140003e10:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140003e17:	imul   edi,DWORD PTR [rdx+0x65],0x2d0000
   140003e1e:	push   rbx
   140003e1f:	ins    BYTE PTR es:[rdi],dx
   140003e20:	gs gs jo 0x140003e24
   140003e24:	and    BYTE PTR [rax],al
   140003e26:	rex.RXB
   140003e27:	gs je  0x140003e7d
   140003e2a:	je     0x140003e8d
   140003e2c:	jb     0x140003ea2
   140003e2e:	jne    0x140003ea0
   140003e30:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140003e32:	outs   dx,WORD PTR ds:[rsi]
   140003e34:	push   rdi
   140003e35:	add    BYTE PTR [rdi],cl
   140003e37:	add    BYTE PTR [rbx+0x65],dl
   140003e3a:	je     0x140003e91
   140003e3c:	outs   dx,BYTE PTR ds:[rsi]
   140003e3d:	push   0x6c646e61
   140003e42:	gs fs rex.RB js 0x140003eaa
   140003e47:	gs jo  0x140003ebe
   140003e4a:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140003e51:	gs jb  0x140003e54
   140003e54:	add    BYTE PTR [rax],al
   140003e56:	push   rcx
   140003e57:	jne    0x140003ebe
   140003e59:	jb     0x140003ed4
   140003e5b:	push   rax
   140003e5c:	gs jb  0x140003ec5
   140003e5f:	outs   dx,DWORD PTR ds:[rsi]
   140003e60:	jb     0x140003ecf
   140003e62:	(bad)  
   140003e63:	outs   dx,BYTE PTR ds:[rsi]
   140003e64:	movsxd esp,DWORD PTR [rbp+0x43]
   140003e67:	outs   dx,DWORD PTR ds:[rsi]
   140003e68:	jne    0x140003ed8
   140003e6a:	je     0x140003ed1
   140003e6c:	jb     0x140003e6e
   140003e6e:	or     eax,0x74654700
   140003e73:	rex.XB jne 0x140003ee8
   140003e76:	jb     0x140003edd
   140003e78:	outs   dx,BYTE PTR ds:[rsi]
   140003e79:	je     0x140003ecb
   140003e7b:	jb     0x140003eec
   140003e7d:	movsxd esp,DWORD PTR [rbp+0x73]
   140003e80:	jae    0x140003ecb
   140003e82:	add    BYTE PTR fs:[rcx],dl
   140003e85:	add    BYTE PTR [rdi+0x65],al
   140003e88:	je     0x140003ecd
   140003e8a:	jne    0x140003efe
   140003e8c:	jb     0x140003ef3
   140003e8e:	outs   dx,BYTE PTR ds:[rsi]
   140003e8f:	je     0x140003ee5
   140003e91:	push   0x64616572
   140003e96:	rex.WB
   140003e97:	add    BYTE PTR fs:[rax],al
   140003e9a:	adc    al,0x0
   140003e9c:	rex.RXB
   140003e9d:	gs je  0x140003ef3
   140003ea0:	jns    0x140003f15
   140003ea2:	je     0x140003f09
   140003ea4:	ins    DWORD PTR es:[rdi],dx
   140003ea5:	push   rsp
   140003ea6:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140003ead:	ins    BYTE PTR es:[rdi],dx
   140003eae:	gs push rsp
   140003eb0:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   140003eb7:	gs je  0x140003f0e
   140003eba:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140003ec1:	je     0x140003ec3
   140003ec3:	add    BYTE PTR [rdx],al
   140003ec5:	add    BYTE PTR [rdx+0x74],dl
   140003ec8:	ins    BYTE PTR es:[rdi],dx
   140003ec9:	rex.XB (bad) 
   140003ecb:	jo     0x140003f41
   140003ecd:	jne    0x140003f41
   140003ecf:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140003ed2:	outs   dx,BYTE PTR ds:[rsi]
   140003ed3:	je     0x140003f3a
   140003ed5:	js     0x140003f4b
   140003ed7:	add    BYTE PTR [rcx],cl
   140003ed9:	add    BYTE PTR [rdx+0x74],dl
   140003edc:	ins    BYTE PTR es:[rdi],dx
   140003edd:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140003edf:	outs   dx,DWORD PTR ds:[rsi]
   140003ee0:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140003ee4:	jne    0x140003f54
   140003ee6:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140003eea:	outs   dx,BYTE PTR ds:[rsi]
   140003eeb:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140003eed:	je     0x140003f61
   140003eef:	jns    0x140003ef1
   140003ef1:	add    BYTE PTR [rdi],cl
   140003ef3:	add    BYTE PTR [rdx+0x74],dl
   140003ef6:	ins    BYTE PTR es:[rdi],dx
   140003ef7:	push   rsi
   140003ef8:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140003eff:	outs   dx,BYTE PTR ds:[rsi]
   140003f00:	ja     0x140003f6b
   140003f02:	outs   dx,BYTE PTR ds:[rsi]
   140003f03:	add    BYTE PTR fs:[rax],al
   140003f06:	adc    DWORD PTR [rax],eax
   140003f08:	push   rbp
   140003f09:	outs   dx,BYTE PTR ds:[rsi]
   140003f0a:	push   0x6c646e61
   140003f0f:	gs fs rex.RB js 0x140003f77
   140003f14:	gs jo  0x140003f8b
   140003f17:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140003f1e:	gs jb  0x140003f21
   140003f21:	add    BYTE PTR [rax+rax*1],cl
   140003f24:	rex.RXB
   140003f25:	gs je  0x140003f6b
   140003f28:	jne    0x140003f9c
   140003f2a:	jb     0x140003f91
   140003f2c:	outs   dx,BYTE PTR ds:[rsi]
   140003f2d:	je     0x140003f7f
   140003f2f:	jb     0x140003fa0
   140003f31:	movsxd esp,DWORD PTR [rbp+0x73]
   140003f34:	jae    0x140003f36
   140003f36:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   140003f3b:	ins    DWORD PTR es:[rdi],dx
   140003f3c:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140003f43:	outs   dx,DWORD PTR ds:[rsi]
   140003f44:	movsxd esp,DWORD PTR [rbp+0x73]
   140003f47:	jae    0x140003f49
   140003f49:	add    BYTE PTR [rcx],al
   140003f4b:	add    BYTE PTR [rbx+0x6f],al
   140003f4e:	ins    DWORD PTR es:[rdi],dx
   140003f4f:	jo     0x140003fb2
   140003f51:	jb     0x140003fb8
   140003f53:	push   rbx
   140003f54:	je     0x140003fc8
   140003f56:	imul   ebp,DWORD PTR [rsi+0x67],0x6964724f
   140003f5d:	outs   dx,BYTE PTR ds:[rsi]
   140003f5e:	(bad)  
   140003f5f:	ins    BYTE PTR es:[rdi],dx
   140003f60:	add    BYTE PTR [rax],al
   140003f62:	(bad)  
   140003f63:	add    BYTE PTR [rdx+0x65],dl
   140003f66:	addr32 rex.WRXB jo 0x140003fcf
   140003f6a:	outs   dx,BYTE PTR ds:[rsi]
   140003f6b:	rex.WXB
   140003f6c:	gs jns 0x140003fb4
   140003f6f:	js     0x140003fc8
   140003f71:	add    BYTE PTR [rax],al
   140003f73:	add    BYTE PTR [rdx+0x65],dl
   140003f76:	rex.XB ins BYTE PTR es:[edi],dx
   140003f79:	outs   dx,DWORD PTR ds:[rsi]
   140003f7a:	jae    0x140003fe1
   140003f7c:	rex.WXB
   140003f7d:	gs jns 0x140003f80
   140003f80:	add    eax,DWORD PTR [rax]
   140003f82:	push   rdx
   140003f83:	gs addr32 rex.XB jb 0x140003fed
   140003f88:	(bad)  
   140003f89:	je     0x140003ff0
   140003f8b:	rex.WXB
   140003f8c:	gs jns 0x140003fd4
   140003f8f:	js     0x140003fe8
   140003f91:	add    BYTE PTR [rax+rax*1],ch
   140003f94:	push   rdx
   140003f95:	gs addr32 push rbx
   140003f98:	gs je  0x140003ff1
   140003f9b:	(bad)  
   140003f9c:	ins    BYTE PTR es:[rdi],dx
   140003f9d:	jne    0x140004004
   140003f9f:	rex.RB js 0x140003ff9
   140003fa2:	add    BYTE PTR [rax],al
   140003fa4:	adc    al,0x0
   140003fa6:	push   rdx
   140003fa7:	gs addr32 rex.RXB
   140003faa:	gs je  0x140004003
   140003fad:	(bad)  
   140003fae:	ins    BYTE PTR es:[rdi],dx
   140003faf:	jne    0x140004016
   140003fb1:	push   rdi
   140003fb2:	add    BYTE PTR [rax],al
   140003fb4:	(bad)  
   140003fb5:	jo     0x140004020
   140003fb7:	sub    eax,0x772d736d
   140003fbc:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140003fc3:	sub    eax,0x2d6d6f63
   140003fc8:	ins    BYTE PTR es:[rdi],dx
   140003fc9:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e316d00
   140003fcf:	fs ins BYTE PTR es:[rdi],dx
   140003fd1:	ins    BYTE PTR es:[rdi],dx
   140003fd2:	add    BYTE PTR [rax],al
   140003fd4:	(bad)  
   140003fd5:	jo     0x140004040
   140003fd7:	sub    eax,0x772d736d
   140003fdc:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140003fe3:	sub    eax,0x636e7973
   140003fe8:	push   0x2d316c2d
   140003fed:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac646e23
   140003ff3:	ins    BYTE PTR es:[rdi],dx
   140003ff4:	add    BYTE PTR [rax],al
   140003ff6:	(bad)  
   140003ff7:	jo     0x140004062
   140003ff9:	sub    eax,0x772d736d
   140003ffe:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140004005:	sub    eax,0x636f7270
   14000400a:	gs jae 0x140004080
   14000400d:	je     0x140004077
   14000400f:	jb     0x140004076
   140004011:	(bad)  
   140004012:	fs jae 0x140004042
   140004015:	ins    BYTE PTR es:[rdi],dx
   140004016:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e326d4d
   14000401c:	fs ins BYTE PTR es:[rdi],dx
   14000401e:	ins    BYTE PTR es:[rdi],dx
   14000401f:	add    BYTE PTR [rcx+0x70],ah
   140004022:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72db399
   14000402c:	outs   dx,DWORD PTR ds:[rsi]
   14000402d:	jb     0x140004094
   14000402f:	sub    eax,0x6f727265
   140004034:	jb     0x14000409e
   140004036:	(bad)  
   140004037:	outs   dx,BYTE PTR ds:[rsi]
   140004038:	fs ins BYTE PTR es:[rdi],dx
   14000403a:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140004041:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac646e78
   140004047:	ins    BYTE PTR es:[rdi],dx
   140004048:	add    BYTE PTR [rax],al
   14000404a:	(bad)  
   14000404b:	jo     0x1400040b6
   14000404d:	sub    eax,0x772d736d
   140004052:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140004059:	sub    eax,0x666f7270
   14000405e:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   140004066:	sub    eax,0x6c642e30
   14000406b:	ins    BYTE PTR es:[rdi],dx
   14000406c:	add    BYTE PTR [rax],al
   14000406e:	(bad)  
   14000406f:	jo     0x1400040da
   140004071:	sub    eax,0x772d736d
   140004076:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000407d:	sub    eax,0x69737973
   140004082:	outs   dx,BYTE PTR ds:[rsi]
   140004083:	outs   dx,WORD PTR ds:[rsi]
   140004085:	sub    eax,0x322d316c
   14000408a:	sub    eax,0x6c642e31
   14000408f:	ins    BYTE PTR es:[rdi],dx
   140004090:	add    BYTE PTR [rax],al
   140004092:	(bad)  
   140004093:	jo     0x1400040fe
   140004095:	sub    eax,0x772d736d
   14000409a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400040a1:	sub    eax,0x736c7472
   1400040a6:	jne    0x140004118
   1400040a8:	jo     0x140004119
   1400040aa:	jb     0x140004120
   1400040ac:	sub    eax,0x322d316c
   1400040b1:	sub    eax,0x6c642e30
   1400040b6:	ins    BYTE PTR es:[rdi],dx
   1400040b7:	add    BYTE PTR [rcx+0x70],ah
   1400040ba:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72db431
   1400040c4:	outs   dx,DWORD PTR ds:[rsi]
   1400040c5:	jb     0x14000412c
   1400040c7:	sub    eax,0x69727473
   1400040cc:	outs   dx,BYTE PTR ds:[rsi]
   1400040cd:	addr32 sub eax,0x312d316c
   1400040d3:	sub    eax,0x6c642e30
   1400040d8:	ins    BYTE PTR es:[rdi],dx
   1400040d9:	add    BYTE PTR [rcx+0x70],ah
   1400040dc:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72db453
   1400040e6:	outs   dx,DWORD PTR ds:[rsi]
   1400040e7:	jb     0x14000414e
   1400040e9:	sub    eax,0x69676572
   1400040ee:	jae    0x140004164
   1400040f0:	jb     0x14000416b
   1400040f2:	sub    eax,0x312d316c
   1400040f7:	sub    eax,0x6c642e30
   1400040fc:	ins    BYTE PTR es:[rdi],dx
   1400040fd:	add    BYTE PTR [rbx+0x4f],al
   140004100:	rex.WRB
   140004101:	rex.XB push r12
   140004103:	xor    r14,QWORD PTR [rdx]
   140004106:	cs fs ins BYTE PTR es:[rdi],dx
   140004109:	ins    BYTE PTR es:[rdi],dx
   14000410a:	add    BYTE PTR [rax],al
   14000410c:	xchg   esi,eax
   14000410d:	add    al,0x6d
   14000410f:	gs ins DWORD PTR es:[rdi],dx
   140004111:	jae    0x140004178
   140004113:	je     0x140004115
	...

Disassembly of section .data:

0000000140005000 <.data>:
   140005000:	add    DWORD PTR [rax],eax
   140005002:	add    BYTE PTR [rax],al
   140005004:	add    BYTE PTR [rax],al
   140005006:	add    BYTE PTR [rax],al
   140005008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000500e:	add    BYTE PTR [rax],al
   140005010:	int    0x5d
   140005012:	and    dl,dl
   140005014:	data16 (bad) 
   140005016:	(bad)  
   140005017:	inc    DWORD PTR [rax]
   140005019:	add    BYTE PTR [rax],al
   14000501b:	add    BYTE PTR [rax],al
   14000501d:	add    BYTE PTR [rax],al
   14000501f:	add    BYTE PTR [rcx],al
	...

Disassembly of section .pdata:

0000000140006000 <.pdata>:
   140006000:	adc    BYTE PTR [rax],0x0
   140006003:	add    BYTE PTR [rax-0x2fffffef],cl
   140006009:	(bad)  
   14000600a:	add    BYTE PTR [rax],al
   14000600c:	nop
   14000600d:	adc    DWORD PTR [rax],eax
   14000600f:	add    cl,dl
   140006011:	adc    DWORD PTR [rax],eax
   140006013:	add    al,ch
   140006015:	(bad)  
   140006016:	add    BYTE PTR [rax],al
   140006018:	loopne 0x14000602b
   14000601a:	add    BYTE PTR [rax],al
   14000601c:	adc    al,BYTE PTR [eax]
   14000601f:	add    al,dh
   140006021:	(bad)  
   140006022:	add    BYTE PTR [rax],al
   140006024:	jo     0x140006038
   140006026:	add    BYTE PTR [rax],al
   140006028:	adc    BYTE PTR [rbx],0x0
   14000602b:	add    BYTE PTR [rax],al
   14000602d:	cmp    BYTE PTR [rax],al
   14000602f:	add    BYTE PTR [rax+0x36000013],cl
   140006035:	adc    eax,0x380c0000
   14000603a:	add    BYTE PTR [rax],al
   14000603c:	cmp    al,0x15
   14000603e:	add    BYTE PTR [rax],al
   140006040:	ins    BYTE PTR es:[rdi],dx
   140006041:	adc    eax,0x37e80000
   140006046:	add    BYTE PTR [rax],al
   140006048:	je     0x14000605f
   14000604a:	add    BYTE PTR [rax],al
   14000604c:	(bad)  
   14000604d:	(bad)  
   14000604e:	add    BYTE PTR [rax],al
   140006050:	sub    al,0x38
   140006052:	add    BYTE PTR [rax],al
   140006054:	mov    BYTE PTR [rsi],dl
   140006056:	add    BYTE PTR [rax],al
   140006058:	cmp    al,0x17
   14000605a:	add    BYTE PTR [rax],al
   14000605c:	rex.W cmp BYTE PTR [rax],al
   14000605f:	add    BYTE PTR [rdi+rdx*1+0x0],al
   140006063:	add    BYTE PTR [rsi+0x17],bh
   140006066:	add    BYTE PTR [rax],al
   140006068:	call   0xc40060a4
   14000606d:	(bad)  
   14000606e:	add    BYTE PTR [rax],al
   140006070:	(bad)  
   140006071:	sbb    BYTE PTR [rax],al
   140006073:	add    BYTE PTR [rax+rdi*1+0x0],bl
   140006077:	add    BYTE PTR [rax+rbx*1],ah
   14000607a:	add    BYTE PTR [rax],al
   14000607c:	jge    0x140006096
   14000607e:	add    BYTE PTR [rax],al
   140006080:	cmp    BYTE PTR fs:[rax],al
   140006083:	add    BYTE PTR [rax+rbx*1+0x18e70000],al
   14000608a:	add    BYTE PTR [rax],al
   14000608c:	ins    BYTE PTR es:[rdi],dx
   14000608d:	cmp    BYTE PTR [rax],al
   14000608f:	add    al,dh
   140006091:	sbb    BYTE PTR [rax],al
   140006093:	add    BYTE PTR [rdi],bh
   140006095:	sbb    DWORD PTR [rax],eax
   140006097:	add    BYTE PTR [rax+0x38],bh
   14000609a:	add    BYTE PTR [rax],al
   14000609c:	push   rax
   14000609d:	sbb    DWORD PTR [rax],eax
   14000609f:	add    BYTE PTR [rdi],bl
   1400060a1:	sbb    al,BYTE PTR [rax]
   1400060a3:	add    BYTE PTR [rax+0x30000038],al
   1400060a9:	sbb    al,BYTE PTR [rax]
   1400060ab:	add    BYTE PTR [rcx+0x1a],bh
   1400060ae:	add    BYTE PTR [rax],al
   1400060b0:	mov    BYTE PTR [rax],bh
   1400060b2:	add    BYTE PTR [rax],al
   1400060b4:	sbb    BYTE PTR [rdx],0x0
   1400060b7:	add    cl,dh
   1400060b9:	sbb    al,0x0
   1400060bb:	add    BYTE PTR [rax+0x38],dl
   1400060c1:	sbb    eax,0x1d120000
   1400060c6:	add    BYTE PTR [rax],al
   1400060c8:	cmp    BYTE PTR [rax],0x0
   1400060cb:	add    BYTE PTR [rax],dh
   1400060cd:	sbb    eax,0x1d4e0000
   1400060d2:	add    BYTE PTR [rax],al
   1400060d4:	enter  0x38,0x0
   1400060d8:	(bad)  
   1400060d9:	sbb    eax,0x1d990000
   1400060de:	add    BYTE PTR [rax],al
   1400060e0:	cmp    BYTE PTR [rax],0x0
   1400060e3:	add    BYTE PTR [rax-0x47ffffe3],ah
   1400060e9:	sbb    eax,0x38800000
   1400060ee:	add    BYTE PTR [rax],al
   1400060f0:	int3   
   1400060f1:	sbb    eax,0x1e200000
   1400060f6:	add    BYTE PTR [rax],al
   1400060f8:	int3   
   1400060f9:	cmp    BYTE PTR [rax],al
   1400060fb:	add    BYTE PTR [rax],ch
   1400060fd:	(bad)  
   1400060fe:	add    BYTE PTR [rax],al
   140006100:	ins    DWORD PTR es:[rdi],dx
   140006101:	(bad)  
   140006102:	add    BYTE PTR [rax],al
   140006104:	call   0x120006140
   140006109:	(bad)  
   14000610a:	add    BYTE PTR [rax],al
   14000610c:	sub    eax,0xec00001f
   140006111:	cmp    BYTE PTR [rax],al
   140006113:	add    BYTE PTR [rdi+rbx*1+0x0],dh
   140006117:	add    BYTE PTR [rax+riz*1+0x0],al
   14000611b:	add    BYTE PTR [rax],bl
   14000611d:	cmp    DWORD PTR [rax],eax
   14000611f:	add    BYTE PTR [rax+riz*1+0x0],bh
   140006123:	add    BYTE PTR [rax-0x17ffffe0],dh
   140006129:	(bad)  
   14000612a:	add    BYTE PTR [rax],al
   14000612c:	shl    BYTE PTR [rax],0x0
   14000612f:	add    BYTE PTR [rcx],dh
   140006131:	and    al,BYTE PTR [rax]
   140006133:	add    BYTE PTR [rcx+rdi*1],ah
   140006136:	add    BYTE PTR [rax],al
   140006138:	rex.W and al,BYTE PTR [rax]
   14000613b:	add    BYTE PTR [rbp+0x22],ah
   14000613e:	add    BYTE PTR [rax],al
   140006140:	cmp    BYTE PTR [rax],0x0
   140006143:	add    BYTE PTR [rdx+riz*1+0x0],ch
   140006147:	add    bh,cl
   140006149:	and    al,BYTE PTR [rax]
   14000614b:	add    al,ch
   14000614d:	(bad)  
   14000614e:	add    BYTE PTR [rax],al
   140006150:	lock and al,BYTE PTR [rax]
   140006153:	add    dl,dh
   140006155:	and    al,BYTE PTR [rax]
   140006157:	add    BYTE PTR [rax],dh
   140006159:	cmp    DWORD PTR [rax],eax
   14000615b:	add    BYTE PTR [rsi],al
   14000615d:	and    eax,DWORD PTR [rax]
   14000615f:	add    BYTE PTR [rbx+riz*1],ah
   140006162:	add    BYTE PTR [rax],al
   140006164:	adc    BYTE PTR [rcx],bh
   140006166:	add    BYTE PTR [rax],al
   140006168:	xor    BYTE PTR [rbx],ah
   14000616a:	add    BYTE PTR [rax],al
   14000616c:	push   rax
   14000616d:	and    eax,DWORD PTR [rax]
   14000616f:	add    BYTE PTR [rax],dl
   140006171:	cmp    DWORD PTR [rax],eax
	...

Disassembly of section .rsrc:

0000000140007000 <.rsrc>:
	...
   14000700c:	add    DWORD PTR [rax],eax
   14000700e:	add    al,0x0
   140007010:	enter  0x2,0x80
   140007014:	cmp    BYTE PTR [rax],al
   140007016:	add    BYTE PTR [rax+0x3],al
   14000701c:	push   rax
   14000701d:	add    BYTE PTR [rax],al
   14000701f:	or     BYTE PTR [rsi],0x0
   140007022:	add    BYTE PTR [rax],al
   140007024:	movabs al,ds:0xb800000010800000
   14000702d:	add    BYTE PTR [rax],al
   14000702f:	sbb    BYTE PTR [rax],0x0
   140007032:	add    BYTE PTR [rax],al
   140007034:	rol    BYTE PTR [rax],1
   140007036:	add    BYTE PTR [rax+0x0],al
	...
   140007044:	add    BYTE PTR [rax],al
   140007046:	add    DWORD PTR [rax],eax
   140007048:	add    DWORD PTR [rax],eax
   14000704a:	add    BYTE PTR [rax],al
   14000704c:	call   0x140807051
	...
   14000705d:	add    BYTE PTR [rax],cl
   14000705f:	add    BYTE PTR [rcx],al
   140007061:	add    BYTE PTR [rax],al
   140007063:	add    BYTE PTR [rax],al
   140007065:	add    DWORD PTR [rax],eax
   140007067:	add    BYTE PTR [rdx],0x0
   14000706a:	add    BYTE PTR [rax],al
   14000706c:	sbb    BYTE PTR [rcx],al
   14000706e:	add    BYTE PTR [rax+0x3],al
   140007074:	xor    BYTE PTR [rcx],al
   140007076:	add    BYTE PTR [rax+0x4],al
   14000707c:	add    QWORD PTR [rax],rax
   14000707f:	add    BYTE PTR [rip+0x60000000],0x1        # 0x1a0007086
   140007086:	add    BYTE PTR [rax+0x6],al
   14000708c:	js     0x14000708f
   14000708e:	add    BYTE PTR [rax+0x7],al
   140007094:	nop
   140007095:	add    DWORD PTR [rax],eax
   140007097:	or     BYTE PTR [rax],0x0
   14000709a:	add    BYTE PTR [rax],al
   14000709c:	test   al,0x1
   14000709e:	add    BYTE PTR [rax+0x0],al
	...
   1400070ac:	add    BYTE PTR [rax],al
   1400070ae:	add    DWORD PTR [rax],eax
   1400070b0:	add    BYTE PTR fs:[rax],al
   1400070b3:	add    al,al
   1400070b5:	add    DWORD PTR [rax],eax
   1400070b7:	add    BYTE PTR [rax],0x0
	...
   1400070c6:	add    DWORD PTR [rax],eax
   1400070c8:	add    DWORD PTR [rax],eax
   1400070ca:	add    BYTE PTR [rax],al
   1400070cc:	fadd   DWORD PTR [rcx]
   1400070ce:	add    BYTE PTR [rax+0x0],al
	...
   1400070dc:	add    BYTE PTR [rax],al
   1400070de:	add    DWORD PTR [rax],eax
   1400070e0:	add    DWORD PTR [rax],eax
   1400070e2:	add    BYTE PTR [rax],al
   1400070e4:	lock add DWORD PTR [rax],eax
   1400070e7:	add    BYTE PTR [rax],0x0
	...
   1400070f6:	add    DWORD PTR [rax],eax
   1400070f8:	or     DWORD PTR [rax+rax*1],eax
   1400070fb:	add    BYTE PTR [rax],cl
   1400070fd:	add    al,BYTE PTR [rax]
	...
   14000710b:	add    BYTE PTR [rax],al
   14000710d:	add    BYTE PTR [rcx],al
   14000710f:	add    BYTE PTR [rcx],cl
   140007111:	add    al,0x0
   140007113:	add    BYTE PTR [rax],bl
   140007115:	add    al,BYTE PTR [rax]
	...
   140007123:	add    BYTE PTR [rax],al
   140007125:	add    BYTE PTR [rcx],al
   140007127:	add    BYTE PTR [rcx],cl
   140007129:	add    al,0x0
   14000712b:	add    BYTE PTR [rax],ch
   14000712d:	add    al,BYTE PTR [rax]
	...
   14000713b:	add    BYTE PTR [rax],al
   14000713d:	add    BYTE PTR [rcx],al
   14000713f:	add    BYTE PTR [rcx],cl
   140007141:	add    al,0x0
   140007143:	add    BYTE PTR [rax],bh
   140007145:	add    al,BYTE PTR [rax]
	...
   140007153:	add    BYTE PTR [rax],al
   140007155:	add    BYTE PTR [rcx],al
   140007157:	add    BYTE PTR [rcx],cl
   140007159:	add    al,0x0
   14000715b:	add    BYTE PTR [rax+0x2],cl
	...
   14000716e:	add    DWORD PTR [rax],eax
   140007170:	or     DWORD PTR [rax+rax*1],eax
   140007173:	add    BYTE PTR [rax+0x2],bl
	...
   140007186:	add    DWORD PTR [rax],eax
   140007188:	or     DWORD PTR [rax+rax*1],eax
   14000718b:	add    BYTE PTR [rax+0x2],ch
	...
   14000719e:	add    DWORD PTR [rax],eax
   1400071a0:	or     DWORD PTR [rax+rax*1],eax
   1400071a3:	add    BYTE PTR [rax+0x2],bh
	...
   1400071b6:	add    DWORD PTR [rax],eax
   1400071b8:	or     DWORD PTR [rax+rax*1],eax
   1400071bb:	add    BYTE PTR [rax+0x2],cl
	...
   1400071cd:	add    BYTE PTR [rcx],al
   1400071cf:	add    BYTE PTR [rcx],cl
   1400071d1:	add    al,0x0
   1400071d3:	add    BYTE PTR [rax+0x2],bl
	...
   1400071e5:	add    BYTE PTR [rcx],al
   1400071e7:	add    BYTE PTR [rcx],cl
   1400071e9:	add    al,0x0
   1400071eb:	add    BYTE PTR [rax+0x2],ch
	...
   1400071fd:	add    BYTE PTR [rcx],al
   1400071ff:	add    BYTE PTR [rcx],cl
   140007201:	add    al,0x0
   140007203:	add    BYTE PTR [rax-0x77fffffe],bh
   140007209:	rex.X add DWORD PTR [rax],eax
   14000720c:	rol    BYTE PTR [rax],1
	...
   140007216:	add    BYTE PTR [rax],al
   140007218:	fdivr  DWORD PTR [rbx+0x0]
   14000721b:	add    BYTE PTR [rcx+0x1e],ch
   140007221:	add    BYTE PTR [rax],al
   140007223:	add    BYTE PTR [rax],al
   140007225:	add    BYTE PTR [rax],al
   140007227:	add    BYTE PTR [rax+0x2800009a],cl
   14000722d:	rex.X add BYTE PTR [rax],al
	...
   140007238:	mov    al,0xdc
   14000723a:	add    BYTE PTR [rax],al
   14000723c:	test   al,0x25
	...
   140007246:	add    BYTE PTR [rax],al
   140007248:	pop    rax
   140007249:	add    al,BYTE PTR [rcx]
   14000724b:	add    BYTE PTR [rax+0x1a],ch
	...
   140007256:	add    BYTE PTR [rax],al
   140007258:	rcr    BYTE PTR [rcx+rax*1],0x0
   14000725c:	test   al,0x10
	...
   140007266:	add    BYTE PTR [rax],al
   140007268:	push   0xffffffff8800012d
   14000726d:	or     DWORD PTR [rax],eax
	...
   140007277:	add    al,dh
   140007279:	add    DWORD PTR ss:[rax],eax
   14000727c:	mov    eax,0x6
   140007281:	add    BYTE PTR [rax],al
   140007283:	add    BYTE PTR [rax],al
   140007285:	add    BYTE PTR [rax],al
   140007287:	add    BYTE PTR [rax+0x6800013d],ch
   14000728d:	add    al,0x0
	...
   140007297:	add    BYTE PTR [rax],dl
   140007299:	rex.X add DWORD PTR [rax],eax
   14000729c:	jbe    0x14000729e
	...
   1400072a6:	add    BYTE PTR [rax],al
   1400072a8:	and    BYTE PTR [rax+0x0],bh
   1400072ab:	add    BYTE PTR [rbx+rax*1+0x0],dh
   1400072b2:	add    BYTE PTR [rax],al
   1400072b4:	add    BYTE PTR [rax],al
   1400072b6:	add    BYTE PTR [rax],al
   1400072b8:	shl    BYTE PTR [rdx+0x0],1
   1400072bb:	add    BYTE PTR [rdx+0x5],cl
	...
   1400072c6:	add    BYTE PTR [rax],al
   1400072c8:	add    eax,DWORD PTR [rax]
   1400072ca:	rex.WRB add BYTE PTR [r13+0x0],r10b
   1400072ce:	rex.WB add BYTE PTR [r15+rdi*1],dil
   1400072d2:	js     0x140007341
   1400072d4:	ins    BYTE PTR es:[rdi],dx
   1400072d5:	and    BYTE PTR [rsi+0x65],dh
   1400072d8:	jb     0x14000734d
   1400072da:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400072e1:	xor    BYTE PTR [rdx],ah
   1400072e3:	and    BYTE PTR [rbp+0x6e],ah
   1400072e6:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400072e9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   1400072f0:	rex.RX sub eax,0x73202238
   1400072f6:	je     0x140007359
   1400072f8:	outs   dx,BYTE PTR ds:[rsi]
   1400072f9:	fs (bad) 
   1400072fb:	ins    BYTE PTR es:[rdi],dx
   1400072fc:	outs   dx,DWORD PTR ds:[rsi]
   1400072fd:	outs   dx,BYTE PTR ds:[rsi]
   1400072fe:	gs cmp eax,0x73657922
   140007304:	and    bh,BYTE PTR [rdi]
   140007306:	ds or  eax,0x2d213c0a
   14000730c:	sub    eax,0x706f4320
   140007311:	jns    0x140007385
   140007313:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000731a:	sub    DWORD PTR [rax],esp
   14000731c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140007324:	je     0x140007346
   140007326:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007328:	jb     0x14000739a
   14000732a:	outs   dx,DWORD PTR ds:[rsi]
   14000732b:	jb     0x14000738e
   14000732d:	je     0x140007398
   14000732f:	outs   dx,DWORD PTR ds:[rsi]
   140007330:	outs   dx,BYTE PTR ds:[rsi]
   140007331:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0db164
   140007337:	cmp    al,0x61
   140007339:	jae    0x1400073ae
   14000733b:	gs ins DWORD PTR es:[rdi],dx
   14000733d:	(bad)  
   14000733e:	ins    BYTE PTR es:[rdi],dx
   14000733f:	jns    0x140007361
   140007341:	js     0x1400073b0
   140007343:	ins    BYTE PTR es:[rdi],dx
   140007344:	outs   dx,BYTE PTR ds:[rsi]
   140007345:	jae    0x140007384
   140007347:	and    dh,BYTE PTR [rbp+0x72]
   14000734a:	outs   dx,BYTE PTR ds:[rsi]
   14000734b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000734e:	push   0x73616d65
   140007353:	sub    eax,0x7263696d
   140007358:	outs   dx,DWORD PTR ds:[rsi]
   140007359:	jae    0x1400073ca
   14000735b:	data16 je 0x14000738b
   14000735e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140007361:	cmp    ah,BYTE PTR [rcx+0x73]
   140007364:	ins    DWORD PTR es:[rdi],dx
   140007365:	cs jbe 0x140007399
   140007368:	and    ah,BYTE PTR [rax]
   14000736a:	ins    DWORD PTR es:[rdi],dx
   14000736b:	(bad)  
   14000736c:	outs   dx,BYTE PTR ds:[rsi]
   14000736d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140007374:	jb     0x1400073e9
   140007376:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000737d:	xor    BYTE PTR [rdx],ah
   14000737f:	ds or  eax,0x3c20200a
   140007385:	(bad)  
   140007386:	jae    0x1400073fb
   140007388:	gs ins DWORD PTR es:[rdi],dx
   14000738a:	(bad)  
   14000738b:	ins    BYTE PTR es:[rdi],dx
   14000738c:	jns    0x1400073d7
   14000738e:	fs outs dx,BYTE PTR gs:[rsi]
   140007391:	je     0x1400073fc
   140007393:	je     0x14000740e
   140007395:	or     eax,0x2020200a
   14000739a:	and    BYTE PTR [rsi+0x65],dh
   14000739d:	jb     0x140007412
   14000739f:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   1400073a6:	xor    DWORD PTR [rsi],ebp
   1400073a8:	xor    BYTE PTR [rsi],ch
   1400073aa:	xor    BYTE PTR [rdx],ah
   1400073ac:	or     eax,0x2020200a
   1400073b1:	and    BYTE PTR [rax+0x72],dh
   1400073b4:	outs   dx,DWORD PTR ds:[rsi]
   1400073b5:	movsxd esp,DWORD PTR [rbp+0x73]
   1400073b8:	jae    0x140007429
   1400073ba:	jb     0x1400073fd
   1400073bc:	jb     0x140007421
   1400073be:	push   0x63657469
   1400073c3:	je     0x14000743a
   1400073c5:	jb     0x14000742c
   1400073c7:	cmp    eax,0x646d6122
   1400073cc:	ss xor al,0x22
   1400073cf:	or     eax,0x2020200a
   1400073d4:	and    BYTE PTR [rsi+0x61],ch
   1400073d7:	ins    DWORD PTR es:[rdi],dx
   1400073d8:	gs cmp eax,0x63694d22
   1400073de:	jb     0x14000744f
   1400073e0:	jae    0x140007451
   1400073e2:	data16 je 0x140007413
   1400073e5:	push   rbx
   1400073e6:	ins    DWORD PTR es:[rdi],dx
   1400073e7:	(bad)  
   1400073e8:	jb     0x14000745e
   1400073ea:	push   rbx
   1400073eb:	movsxd esi,DWORD PTR [rdx+0x65]
   1400073ee:	outs   dx,BYTE PTR gs:[rsi]
   1400073f0:	push   rbx
   1400073f1:	gs je  0x140007468
   1400073f4:	imul   ebp,DWORD PTR [rsi+0x67],0x52502e73
   1400073fb:	rex.WRXB
   1400073fc:	rex.RXB push r10
   1400073fe:	rex.B
   1400073ff:	rex.WRB and r9b,BYTE PTR [rip+0x2020200a]        # 0x160209410
   140007406:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000740a:	gs cmp eax,0x6e697722
   140007410:	xor    esi,DWORD PTR [rdx]
   140007412:	and    cl,BYTE PTR [rip+0x2f20200a]        # 0x16f209422
   140007418:	ds or  eax,0x3c20200a
   14000741e:	fs gs jae 0x140007485
   140007422:	jb     0x14000748d
   140007424:	jo     0x14000749a
   140007426:	imul   ebp,DWORD PTR [rdi+0x6e],0x616d533e
   14000742d:	jb     0x1400074a3
   14000742f:	push   rbx
   140007430:	movsxd esi,DWORD PTR [rdx+0x65]
   140007433:	outs   dx,BYTE PTR gs:[rsi]
   140007435:	and    BYTE PTR [rbx+0x65],dl
   140007438:	je     0x1400074ae
   14000743a:	imul   ebp,DWORD PTR [rsi+0x67],0x642f3c73
   140007441:	gs jae 0x1400074a7
   140007444:	jb     0x1400074af
   140007446:	jo     0x1400074bc
   140007448:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a0d3e
   14000744f:	and    BYTE PTR [rsp+riz*2],bh
   140007452:	gs jo  0x1400074ba
   140007455:	outs   dx,BYTE PTR ds:[rsi]
   140007456:	fs outs dx,BYTE PTR gs:[rsi]
   140007459:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000745c:	or     eax,0x2020200a
   140007461:	and    BYTE PTR [rsp+riz*2],bh
   140007464:	gs jo  0x1400074cc
   140007467:	outs   dx,BYTE PTR ds:[rsi]
   140007468:	fs outs dx,BYTE PTR gs:[rsi]
   14000746b:	je     0x1400074ae
   14000746d:	jae    0x1400074e2
   14000746f:	gs ins DWORD PTR es:[rdi],dx
   140007471:	(bad)  
   140007472:	ins    BYTE PTR es:[rdi],dx
   140007473:	jns    0x1400074b3
   140007475:	or     eax,0x2020200a
   14000747a:	and    BYTE PTR [rax],ah
   14000747c:	and    BYTE PTR [rax],ah
   14000747e:	and    BYTE PTR [rcx+riz*2],bh
   140007481:	jae    0x1400074f6
   140007483:	gs ins DWORD PTR es:[rdi],dx
   140007485:	(bad)  
   140007486:	ins    BYTE PTR es:[rdi],dx
   140007487:	jns    0x1400074d2
   140007489:	fs outs dx,BYTE PTR gs:[rsi]
   14000748c:	je     0x1400074f7
   14000748e:	je     0x140007509
   140007490:	or     eax,0x2020200a
   140007495:	and    BYTE PTR [rax],ah
   140007497:	and    BYTE PTR [rax],ah
   140007499:	and    BYTE PTR [rax],ah
   14000749b:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000749f:	gs cmp eax,0x6e697722
   1400074a5:	xor    esi,DWORD PTR [rdx]
   1400074a7:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x1602094b7
   1400074ad:	and    BYTE PTR [rax],ah
   1400074af:	and    BYTE PTR [rax],ah
   1400074b1:	and    BYTE PTR [rax],ah
   1400074b3:	and    BYTE PTR [rsi+0x61],ch
   1400074b6:	ins    DWORD PTR es:[rdi],dx
   1400074b7:	gs cmp eax,0x63694d22
   1400074bd:	jb     0x14000752e
   1400074bf:	jae    0x140007530
   1400074c1:	data16 je 0x1400074f2
   1400074c4:	push   rdi
   1400074c5:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   1400074cc:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400074ce:	ins    DWORD PTR es:[rdi],dx
   1400074cf:	ins    DWORD PTR es:[rdi],dx
   1400074d0:	outs   dx,DWORD PTR ds:[rsi]
   1400074d1:	outs   dx,BYTE PTR ds:[rsi]
   1400074d2:	sub    eax,0x746e6f43
   1400074d7:	jb     0x140007548
   1400074d9:	ins    BYTE PTR es:[rdi],dx
   1400074da:	jae    0x1400074fe
   1400074dc:	or     eax,0x2020200a
   1400074e1:	and    BYTE PTR [rax],ah
   1400074e3:	and    BYTE PTR [rax],ah
   1400074e5:	and    BYTE PTR [rax],ah
   1400074e7:	and    BYTE PTR [rsi+0x65],dh
   1400074ea:	jb     0x14000755f
   1400074ec:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   1400074f3:	xor    BYTE PTR [rsi],ch
   1400074f5:	xor    BYTE PTR [rsi],ch
   1400074f7:	xor    BYTE PTR [rdx],ah
   1400074f9:	or     eax,0x2020200a
   1400074fe:	and    BYTE PTR [rax],ah
   140007500:	and    BYTE PTR [rax],ah
   140007502:	and    BYTE PTR [rax],ah
   140007504:	and    BYTE PTR [rax+0x72],dh
   140007507:	outs   dx,DWORD PTR ds:[rsi]
   140007508:	movsxd esp,DWORD PTR [rbp+0x73]
   14000750b:	jae    0x14000757c
   14000750d:	jb     0x140007550
   14000750f:	jb     0x140007574
   140007511:	push   0x63657469
   140007516:	je     0x14000758d
   140007518:	jb     0x14000757f
   14000751a:	cmp    eax,0x646d6122
   14000751f:	ss xor al,0x22
   140007522:	or     eax,0x2020200a
   140007527:	and    BYTE PTR [rax],ah
   140007529:	and    BYTE PTR [rax],ah
   14000752b:	and    BYTE PTR [rax],ah
   14000752d:	and    BYTE PTR [rax+0x75],dh
   140007530:	(bad)  
   140007531:	ins    BYTE PTR es:[rdi],dx
   140007532:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   140007539:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14000753d:	and    dh,BYTE PTR [rsi]
   14000753f:	xor    eax,0x36623539
   140007544:	xor    al,0x31
   140007546:	xor    al,0x34
   140007548:	movsxd esp,DWORD PTR [rbx+0x66]
   14000754b:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14000754f:	or     eax,0x2020200a
   140007554:	and    BYTE PTR [rax],ah
   140007556:	and    BYTE PTR [rax],ah
   140007558:	and    BYTE PTR [rax],ah
   14000755a:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14000755e:	addr32 jne 0x1400075c2
   140007561:	addr32 gs cmp eax,0xd222a22
   140007568:	or     ah,BYTE PTR [rax]
   14000756a:	and    BYTE PTR [rax],ah
   14000756c:	and    BYTE PTR [rax],ah
   14000756e:	and    BYTE PTR [rax],ah
   140007570:	and    BYTE PTR [rdi],ch
   140007572:	ds or  eax,0x2020200a
   140007578:	and    BYTE PTR [rdi+rbp*1],bh
   14000757b:	fs gs jo 0x1400075e4
   14000757f:	outs   dx,BYTE PTR ds:[rsi]
   140007580:	fs outs dx,BYTE PTR gs:[rsi]
   140007583:	je     0x1400075c6
   140007585:	jae    0x1400075fa
   140007587:	gs ins DWORD PTR es:[rdi],dx
   140007589:	(bad)  
   14000758a:	ins    BYTE PTR es:[rdi],dx
   14000758b:	jns    0x1400075cb
   14000758d:	or     eax,0x3c20200a
   140007592:	(bad)  
   140007593:	fs gs jo 0x1400075fc
   140007597:	outs   dx,BYTE PTR ds:[rsi]
   140007598:	fs outs dx,BYTE PTR gs:[rsi]
   14000759b:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000759e:	or     eax,0x3c20200a
   1400075a3:	je     0x140007617
   1400075a5:	jne    0x14000761a
   1400075a7:	je     0x1400075f2
   1400075a9:	outs   dx,BYTE PTR ds:[rsi]
   1400075aa:	outs   dx,WORD PTR ds:[rsi]
   1400075ac:	and    BYTE PTR [rax+0x6d],bh
   1400075af:	ins    BYTE PTR es:[rdi],dx
   1400075b0:	outs   dx,BYTE PTR ds:[rsi]
   1400075b1:	jae    0x1400075f0
   1400075b3:	and    dh,BYTE PTR [rbp+0x72]
   1400075b6:	outs   dx,BYTE PTR ds:[rsi]
   1400075b7:	cmp    dh,BYTE PTR [rbx+0x63]
   1400075ba:	push   0x73616d65
   1400075bf:	sub    eax,0x7263696d
   1400075c4:	outs   dx,DWORD PTR ds:[rsi]
   1400075c5:	jae    0x140007636
   1400075c7:	data16 je 0x1400075f7
   1400075ca:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400075cd:	cmp    ah,BYTE PTR [rcx+0x73]
   1400075d0:	ins    DWORD PTR es:[rdi],dx
   1400075d1:	cs jbe 0x140007607
   1400075d4:	and    bh,BYTE PTR [rsi]
   1400075d6:	or     eax,0x2020200a
   1400075db:	and    BYTE PTR [rbx+rsi*2],bh
   1400075de:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400075e2:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400075ea:	and    BYTE PTR [rax],ah
   1400075ec:	and    BYTE PTR [rax],ah
   1400075ee:	and    BYTE PTR [rax],ah
   1400075f0:	cmp    al,0x72
   1400075f2:	gs jno 0x14000766a
   1400075f5:	gs jae 0x14000766c
   1400075f8:	gs fs push rax
   1400075fb:	jb     0x140007666
   1400075fd:	jbe    0x140007668
   1400075ff:	ins    BYTE PTR es:[rdi],dx
   140007600:	gs addr32 gs jae 0x140007643
   140007605:	or     eax,0x2020200a
   14000760a:	and    BYTE PTR [rax],ah
   14000760c:	and    BYTE PTR [rax],ah
   14000760e:	and    BYTE PTR [rax],ah
   140007610:	and    BYTE PTR [rax],ah
   140007612:	and    BYTE PTR [rdx+rsi*2],bh
   140007615:	gs jno 0x14000768d
   140007618:	gs jae 0x14000768f
   14000761b:	gs fs rex.RB js 0x140007685
   140007620:	movsxd esi,DWORD PTR [rbp+0x74]
   140007623:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000762a:	ins    BYTE PTR es:[rdi],dx
   14000762b:	or     eax,0x2020200a
   140007630:	and    BYTE PTR [rax],ah
   140007632:	and    BYTE PTR [rax],ah
   140007634:	and    BYTE PTR [rax],ah
   140007636:	and    BYTE PTR [rax],ah
   140007638:	and    BYTE PTR [rax],ah
   14000763a:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000763e:	gs ins BYTE PTR es:[rdi],dx
   140007640:	cmp    eax,0x71657222
   140007645:	jne    0x1400076b0
   140007647:	jb     0x1400076ae
   140007649:	rex.B
   14000764a:	fs ins DWORD PTR es:[rdi],dx
   14000764c:	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
   140007653:	je     0x1400076c4
   140007655:	jb     0x140007679
   140007657:	or     eax,0x2020200a
   14000765c:	and    BYTE PTR [rax],ah
   14000765e:	and    BYTE PTR [rax],ah
   140007660:	and    BYTE PTR [rax],ah
   140007662:	and    BYTE PTR [rax],ah
   140007664:	and    BYTE PTR [rax],ah
   140007666:	and    BYTE PTR [rbp+0x69],dh
   140007669:	movsxd esp,DWORD PTR [r11+0x65]
   14000766d:	jae    0x1400076e2
   14000766f:	cmp    eax,0x6c616622
   140007674:	jae    0x1400076db
   140007676:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160209686
   14000767c:	and    BYTE PTR [rax],ah
   14000767e:	and    BYTE PTR [rax],ah
   140007680:	and    BYTE PTR [rax],ah
   140007682:	and    BYTE PTR [rax],ah
   140007684:	and    BYTE PTR [rdi],ch
   140007686:	ds or  eax,0x2020200a
   14000768c:	and    BYTE PTR [rax],ah
   14000768e:	and    BYTE PTR [rax],ah
   140007690:	and    BYTE PTR [rdi+rbp*1],bh
   140007693:	jb     0x1400076fa
   140007695:	jno    0x14000770c
   140007697:	gs jae 0x14000770e
   14000769a:	gs fs push rax
   14000769d:	jb     0x140007708
   14000769f:	jbe    0x14000770a
   1400076a1:	ins    BYTE PTR es:[rdi],dx
   1400076a2:	gs addr32 gs jae 0x1400076e5
   1400076a7:	or     eax,0x2020200a
   1400076ac:	and    BYTE PTR [rdi+rbp*1],bh
   1400076af:	jae    0x140007716
   1400076b1:	movsxd esi,DWORD PTR [rbp+0x72]
   1400076b4:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400076bc:	cmp    al,0x2f
   1400076be:	je     0x140007732
   1400076c0:	jne    0x140007735
   1400076c2:	je     0x14000770d
   1400076c4:	outs   dx,BYTE PTR ds:[rsi]
   1400076c5:	outs   dx,WORD PTR ds:[rsi]
   1400076c7:	ds or  eax,0x3c20200a
   1400076cd:	(bad)  
   1400076ce:	jo     0x140007740
   1400076d0:	ins    BYTE PTR es:[rdi],dx
   1400076d1:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400076d8:	and    BYTE PTR [rax+0x6d],bh
   1400076db:	ins    BYTE PTR es:[rdi],dx
   1400076dc:	outs   dx,BYTE PTR ds:[rsi]
   1400076dd:	jae    0x14000771c
   1400076df:	and    dh,BYTE PTR [rbp+0x72]
   1400076e2:	outs   dx,BYTE PTR ds:[rsi]
   1400076e3:	cmp    dh,BYTE PTR [rbx+0x63]
   1400076e6:	push   0x73616d65
   1400076eb:	sub    eax,0x7263696d
   1400076f0:	outs   dx,DWORD PTR ds:[rsi]
   1400076f1:	jae    0x140007762
   1400076f3:	data16 je 0x140007723
   1400076f6:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400076f9:	cmp    ah,BYTE PTR [rcx+0x73]
   1400076fc:	ins    DWORD PTR es:[rdi],dx
   1400076fd:	cs jbe 0x140007733
   140007700:	and    bh,BYTE PTR [rsi]
   140007702:	or     eax,0x2020200a
   140007707:	and    BYTE PTR [rdi+rsi*2],bh
   14000770a:	imul   ebp,DWORD PTR [rsi+0x64],0x5373776f
   140007711:	gs je  0x140007788
   140007714:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14000771b:	and    BYTE PTR [rax],ah
   14000771d:	and    BYTE PTR [rax],ah
   14000771f:	and    BYTE PTR [rax],ah
   140007721:	and    BYTE PTR [rax],ah
   140007723:	cmp    al,0x64
   140007725:	jo     0x140007790
   140007727:	rex.B ja 0x14000778b
   14000772a:	jb     0x140007791
   14000772c:	and    BYTE PTR [rax+0x6d],bh
   14000772f:	ins    BYTE PTR es:[rdi],dx
   140007730:	outs   dx,BYTE PTR ds:[rsi]
   140007731:	jae    0x140007770
   140007733:	and    ch,BYTE PTR [rax+0x74]
   140007736:	je     0x1400077a8
   140007738:	cmp    ch,BYTE PTR [rdi]
   14000773a:	(bad)  
   14000773b:	jae    0x1400077a0
   14000773d:	push   0x73616d65
   140007742:	cs ins DWORD PTR es:[rdi],dx
   140007744:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14000774b:	je     0x14000777b
   14000774d:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140007750:	(bad)  
   140007751:	push   rbx
   140007752:	rex.WRB
   140007753:	rex.WB (bad) 
   140007755:	xor    dh,BYTE PTR [rax]
   140007757:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae69ce8c
   14000775d:	outs   dx,DWORD PTR fs:[rsi]
   14000775f:	ja     0x1400077d4
   140007761:	push   rbx
   140007762:	gs je  0x1400077d9
   140007765:	imul   ebp,DWORD PTR [rsi+0x67],0x743e2273
   14000776c:	jb     0x1400077e3
   14000776e:	gs cmp al,0x2f
   140007771:	fs jo  0x1400077dd
   140007774:	rex.B ja 0x1400077d8
   140007777:	jb     0x1400077de
   140007779:	ds or  eax,0x2020200a
   14000777f:	and    BYTE PTR [rax],ah
   140007781:	and    BYTE PTR [rax],ah
   140007783:	and    BYTE PTR [rcx+riz*2],bh
   140007786:	jne    0x1400077fc
   140007788:	outs   dx,DWORD PTR ds:[rsi]
   140007789:	rex.RB ins BYTE PTR es:[rdi],dx
   14000778b:	gs jbe 0x1400077ef
   14000778e:	je     0x1400077f5
   140007790:	and    BYTE PTR [rax+0x6d],bh
   140007793:	ins    BYTE PTR es:[rdi],dx
   140007794:	outs   dx,BYTE PTR ds:[rsi]
   140007795:	jae    0x1400077d4
   140007797:	and    ch,BYTE PTR [rax+0x74]
   14000779a:	je     0x14000780c
   14000779c:	cmp    ch,BYTE PTR [rdi]
   14000779e:	(bad)  
   14000779f:	jae    0x140007804
   1400077a1:	push   0x73616d65
   1400077a6:	cs ins DWORD PTR es:[rdi],dx
   1400077a8:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   1400077af:	je     0x1400077df
   1400077b1:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400077b4:	(bad)  
   1400077b5:	push   rbx
   1400077b6:	rex.WRB
   1400077b7:	rex.WB (bad) 
   1400077b9:	xor    dh,BYTE PTR [rax]
   1400077bb:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae69cef0
   1400077c1:	outs   dx,DWORD PTR fs:[rsi]
   1400077c3:	ja     0x140007838
   1400077c5:	push   rbx
   1400077c6:	gs je  0x14000783d
   1400077c9:	imul   ebp,DWORD PTR [rsi+0x67],0x743e2273
   1400077d0:	jb     0x140007847
   1400077d2:	gs cmp al,0x2f
   1400077d5:	(bad)  
   1400077d6:	jne    0x14000784c
   1400077d8:	outs   dx,DWORD PTR ds:[rsi]
   1400077d9:	rex.RB ins BYTE PTR es:[rdi],dx
   1400077db:	gs jbe 0x14000783f
   1400077de:	je     0x140007845
   1400077e0:	ds or  eax,0x2020200a
   1400077e6:	and    BYTE PTR [rdi+rbp*1],bh
   1400077e9:	ja     0x140007854
   1400077eb:	outs   dx,BYTE PTR ds:[rsi]
   1400077ec:	outs   dx,DWORD PTR fs:[rsi]
   1400077ee:	ja     0x140007863
   1400077f0:	push   rbx
   1400077f1:	gs je  0x140007868
   1400077f4:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   1400077fb:	and    BYTE PTR [rax],ah
   1400077fd:	cmp    al,0x2f
   1400077ff:	(bad)  
   140007800:	jo     0x140007872
   140007802:	ins    BYTE PTR es:[rdi],dx
   140007803:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000780a:	ds or  eax,0x612f3c0a
   140007810:	jae    0x140007885
   140007812:	gs ins DWORD PTR es:[rdi],dx
   140007814:	(bad)  
   140007815:	ins    BYTE PTR es:[rdi],dx
   140007816:	jns    0x140007856
   140007818:	or     eax,0xa
   14000781d:	add    BYTE PTR [rax],al
   14000781f:	add    BYTE PTR [rbx+rax*1+0x34],dh
   140007826:	push   rsi
   140007827:	add    BYTE PTR [rbx+0x0],dl
   14000782a:	pop    rdi
   14000782b:	add    BYTE PTR [rsi+0x0],dl
   14000782e:	add    BYTE PTR [r10+0x0],r10b
   140007832:	push   rbx
   140007833:	add    BYTE PTR [rcx+0x0],cl
   140007836:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000783a:	pop    rdi
   14000783b:	add    BYTE PTR [rcx+0x0],cl
   14000783e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   140007842:	rex.WRXB add BYTE PTR [r8],r8b
   140007845:	add    BYTE PTR [rax],al
   140007847:	add    BYTE PTR [rbp+0xfeef04],bh
   14000784d:	add    BYTE PTR [rcx],al
   14000784f:	add    BYTE PTR [rax],al
   140007851:	add    BYTE PTR [rdx],cl
   140007853:	add    BYTE PTR [rax],al
   140007855:	add    BYTE PTR [rax],bpl
   140007858:	add    BYTE PTR [rax],al
   14000785a:	or     al,BYTE PTR [rax]
   14000785c:	add    BYTE PTR [rax+0x0],al
   14000785f:	sub    BYTE PTR [rdi],bh
   140007861:	add    BYTE PTR [rax],al
   140007863:	add    BYTE PTR [rax],al
   140007865:	add    BYTE PTR [rax],al
   140007867:	add    BYTE PTR [rax+rax*1],al
   14000786a:	add    al,0x0
   14000786c:	add    DWORD PTR [rax],eax
	...
   14000787a:	add    BYTE PTR [rax],al
   14000787c:	adc    al,BYTE PTR [rbx]
   14000787e:	add    BYTE PTR [rax],al
   140007880:	add    DWORD PTR [rax],eax
   140007882:	push   rbx
   140007883:	add    BYTE PTR [rax+rax*1+0x72],dh
   140007887:	add    BYTE PTR [rcx+0x0],ch
   14000788a:	outs   dx,BYTE PTR ds:[rsi]
   14000788b:	add    BYTE PTR [rdi+0x0],ah
   14000788e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140007892:	ins    BYTE PTR es:[rdi],dx
   140007893:	add    BYTE PTR [rbp+0x0],ah
   140007896:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000789a:	data16 add BYTE PTR [rdi+0x0],ch
   14000789e:	add    BYTE PTR [rax],al
   1400078a0:	out    dx,al
   1400078a1:	add    al,BYTE PTR [rax]
   1400078a3:	add    BYTE PTR [rcx],al
   1400078a5:	add    BYTE PTR [rax],dh
   1400078a7:	add    BYTE PTR [rax+rax*1],dh
   1400078aa:	xor    BYTE PTR [rax],al
   1400078ac:	cmp    DWORD PTR [rax],eax
   1400078ae:	xor    BYTE PTR [rax],al
   1400078b0:	xor    al,0x0
   1400078b2:	rex.X add BYTE PTR [rax],sil
   1400078b5:	add    BYTE PTR [rax],al
   1400078b7:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400078bb:	add    BYTE PTR [rcx],al
   1400078bd:	add    BYTE PTR [rbx+0x0],al
   1400078c0:	outs   dx,DWORD PTR ds:[rsi]
   1400078c1:	add    BYTE PTR [rbp+0x0],ch
   1400078c4:	jo     0x1400078c6
   1400078c6:	(bad)  
   1400078c7:	add    BYTE PTR [rsi+0x0],ch
   1400078ca:	jns    0x1400078cc
   1400078cc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400078d0:	ins    DWORD PTR es:[rdi],dx
   1400078d1:	add    BYTE PTR [rbp+0x0],ah
   1400078d4:	add    BYTE PTR [rax],al
   1400078d6:	add    BYTE PTR [rax],al
   1400078d8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400078dc:	movsxd eax,DWORD PTR [rax]
   1400078de:	jb     0x1400078e0
   1400078e0:	outs   dx,DWORD PTR ds:[rsi]
   1400078e1:	add    BYTE PTR [rbx+0x0],dh
   1400078e4:	outs   dx,DWORD PTR ds:[rsi]
   1400078e5:	add    BYTE PTR [rsi+0x0],ah
   1400078e8:	je     0x1400078ea
   1400078ea:	and    BYTE PTR [rax],al
   1400078ec:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400078f0:	jb     0x1400078f2
   1400078f2:	jo     0x1400078f4
   1400078f4:	outs   dx,DWORD PTR ds:[rsi]
   1400078f5:	add    BYTE PTR [rdx+0x0],dh
   1400078f8:	(bad)  
   1400078f9:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400078fd:	add    BYTE PTR [rdi+0x0],ch
   140007900:	outs   dx,BYTE PTR ds:[rsi]
   140007901:	add    BYTE PTR [rax],al
   140007903:	add    BYTE PTR [rax+0x0],dl
   140007906:	adc    al,0x0
   140007908:	add    DWORD PTR [rax],eax
   14000790a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000790e:	ins    BYTE PTR es:[rdi],dx
   14000790f:	add    BYTE PTR [rbp+0x0],ah
   140007912:	add    BYTE PTR [rbp+0x0],r12b
   140007916:	jae    0x140007918
   140007918:	movsxd eax,DWORD PTR [rax]
   14000791a:	jb     0x14000791c
   14000791c:	imul   eax,DWORD PTR [rax],0x740070
   140007922:	imul   eax,DWORD PTR [rax],0x6e006f
   140007928:	add    BYTE PTR [rax],al
   14000792a:	add    BYTE PTR [rax],al
   14000792c:	push   rbx
   14000792d:	add    BYTE PTR [rbp+0x0],ch
   140007930:	(bad)  
   140007931:	add    BYTE PTR [rdx+0x0],dh
   140007934:	je     0x140007936
   140007936:	push   rbx
   140007937:	add    BYTE PTR [rbx+0x0],ah
   14000793a:	jb     0x14000793c
   14000793c:	add    BYTE PTR gs:[rbp+0x0],ah
   140007940:	outs   dx,BYTE PTR ds:[rsi]
   140007941:	add    BYTE PTR [rbx+0x0],dl
   140007944:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   140007949:	add    BYTE PTR [rcx+0x0],ch
   14000794c:	outs   dx,BYTE PTR ds:[rsi]
   14000794d:	add    BYTE PTR [rdi+0x0],ah
   140007950:	jae    0x140007952
   140007952:	add    BYTE PTR [rax],al
   140007954:	data16 add BYTE PTR [rbx],ah
   140007957:	add    BYTE PTR [rcx],al
   140007959:	add    BYTE PTR [rsi+0x0],al
   14000795c:	imul   eax,DWORD PTR [rax],0x65006c
   140007962:	push   rsi
   140007963:	add    BYTE PTR [rbp+0x0],ah
   140007966:	jb     0x140007968
   140007968:	jae    0x14000796a
   14000796a:	imul   eax,DWORD PTR [rax],0x6e006f
   140007970:	add    BYTE PTR [rax],al
   140007972:	add    BYTE PTR [rax],al
   140007974:	xor    DWORD PTR [rax],eax
   140007976:	xor    BYTE PTR [rax],al
   140007978:	add    BYTE PTR cs:[rax],dh
   14000797b:	add    BYTE PTR [rsi],ch
   14000797d:	add    BYTE PTR [rcx],dh
   14000797f:	add    BYTE PTR [rax],dh
   140007981:	add    BYTE PTR [rdx],dh
   140007983:	add    BYTE PTR [rax+rax*1],dh
   140007986:	xor    BYTE PTR [rax],al
   140007988:	add    BYTE PTR cs:[rcx],dh
   14000798b:	add    BYTE PTR [rsi],dh
   14000798d:	add    BYTE PTR [rbx],dh
   14000798f:	add    BYTE PTR [rax],bh
   140007991:	add    BYTE PTR [rax+rax*1],dh
   140007994:	and    BYTE PTR [rax],al
   140007996:	sub    BYTE PTR [rax],al
   140007998:	je     0x14000799a
   14000799a:	push   0x2e003100
   14000799f:	add    BYTE PTR [rcx],dh
   1400079a1:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700a9a7
   1400079a7:	add    BYTE PTR [rax],dh
   1400079a9:	add    BYTE PTR [rcx],bh
   1400079ab:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700aab1
   1400079b1:	add    BYTE PTR [rax],dh
   1400079b3:	add    BYTE PTR [rax],dh
   1400079b5:	add    BYTE PTR [rcx],ch
   1400079b7:	add    BYTE PTR [rax],al
   1400079b9:	add    BYTE PTR [rax],al
   1400079bb:	add    BYTE PTR [rax+0x0],cl
   1400079be:	adc    al,0x0
   1400079c0:	add    DWORD PTR [rax],eax
   1400079c2:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400079c6:	je     0x1400079c8
   1400079c8:	add    BYTE PTR gs:[rdx+0x0],dh
   1400079cc:	outs   dx,BYTE PTR ds:[rsi]
   1400079cd:	add    BYTE PTR [rcx+0x0],ah
   1400079d0:	ins    BYTE PTR es:[rdi],dx
   1400079d1:	add    BYTE PTR [rsi+0x0],cl
   1400079d4:	(bad)  
   1400079d5:	add    BYTE PTR [rbp+0x0],ch
   1400079d8:	add    BYTE PTR gs:[rax],al
   1400079db:	add    BYTE PTR [rbx+0x0],dl
   1400079de:	ins    DWORD PTR es:[rdi],dx
   1400079df:	add    BYTE PTR [rcx+0x0],ah
   1400079e2:	jb     0x1400079e4
   1400079e4:	je     0x1400079e6
   1400079e6:	push   rbx
   1400079e7:	add    BYTE PTR [rbx+0x0],ah
   1400079ea:	jb     0x1400079ec
   1400079ec:	add    BYTE PTR gs:[rbp+0x0],ah
   1400079f0:	outs   dx,BYTE PTR ds:[rsi]
   1400079f1:	add    BYTE PTR [rbx+0x0],dl
   1400079f4:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   1400079f9:	add    BYTE PTR [rcx+0x0],ch
   1400079fc:	outs   dx,BYTE PTR ds:[rsi]
   1400079fd:	add    BYTE PTR [rdi+0x0],ah
   140007a00:	jae    0x140007a02
   140007a02:	add    BYTE PTR [rax],al
   140007a04:	add    BYTE PTR [rax],0x2e
   140007a07:	add    BYTE PTR [rcx],al
   140007a09:	add    BYTE PTR [rax+rax*1+0x65],cl
   140007a0d:	add    BYTE PTR [rdi+0x0],ah
   140007a10:	(bad)  
   140007a11:	add    BYTE PTR [rax+rax*1+0x43],ch
   140007a15:	add    BYTE PTR [rdi+0x0],ch
   140007a18:	jo     0x140007a1a
   140007a1a:	jns    0x140007a1c
   140007a1c:	jb     0x140007a1e
   140007a1e:	imul   eax,DWORD PTR [rax],0x680067
   140007a24:	je     0x140007a26
   140007a26:	add    BYTE PTR [rax],al
   140007a28:	test   eax,0x4d002000
   140007a2d:	add    BYTE PTR [rcx+0x0],ch
   140007a30:	movsxd eax,DWORD PTR [rax]
   140007a32:	jb     0x140007a34
   140007a34:	outs   dx,DWORD PTR ds:[rsi]
   140007a35:	add    BYTE PTR [rbx+0x0],dh
   140007a38:	outs   dx,DWORD PTR ds:[rsi]
   140007a39:	add    BYTE PTR [rsi+0x0],ah
   140007a3c:	je     0x140007a3e
   140007a3e:	and    BYTE PTR [rax],al
   140007a40:	rex.XB add BYTE PTR [r15+0x0],bpl
   140007a44:	jb     0x140007a46
   140007a46:	jo     0x140007a48
   140007a48:	outs   dx,DWORD PTR ds:[rsi]
   140007a49:	add    BYTE PTR [rdx+0x0],dh
   140007a4c:	(bad)  
   140007a4d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140007a51:	add    BYTE PTR [rdi+0x0],ch
   140007a54:	outs   dx,BYTE PTR ds:[rsi]
   140007a55:	add    BYTE PTR [rsi],ch
   140007a57:	add    BYTE PTR [rax],ah
   140007a59:	add    BYTE PTR [rcx+0x0],al
   140007a5c:	ins    BYTE PTR es:[rdi],dx
   140007a5d:	add    BYTE PTR [rax+rax*1+0x20],ch
   140007a61:	add    BYTE PTR [rdx+0x0],dh
   140007a64:	imul   eax,DWORD PTR [rax],0x680067
   140007a6a:	je     0x140007a6c
   140007a6c:	jae    0x140007a6e
   140007a6e:	and    BYTE PTR [rax],al
   140007a70:	jb     0x140007a72
   140007a72:	add    BYTE PTR gs:[rbx+0x0],dh
   140007a76:	add    BYTE PTR gs:[rdx+0x0],dh
   140007a7a:	jbe    0x140007a7c
   140007a7c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140007a81:	add    BYTE PTR [rax],al
   140007a83:	add    BYTE PTR [rax+0x0],bl
   140007a86:	sbb    BYTE PTR [rax],al
   140007a88:	add    DWORD PTR [rax],eax
   140007a8a:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   140007a8e:	imul   eax,DWORD PTR [rax],0x690067
   140007a94:	outs   dx,BYTE PTR ds:[rsi]
   140007a95:	add    BYTE PTR [rcx+0x0],ah
   140007a98:	ins    BYTE PTR es:[rdi],dx
   140007a99:	add    BYTE PTR [rsi+0x0],al
   140007a9c:	imul   eax,DWORD PTR [rax],0x65006c
   140007aa2:	outs   dx,BYTE PTR ds:[rsi]
   140007aa3:	add    BYTE PTR [rcx+0x0],ah
   140007aa6:	ins    DWORD PTR es:[rdi],dx
   140007aa7:	add    BYTE PTR [rbp+0x0],ah
   140007aaa:	add    BYTE PTR [rax],al
   140007aac:	push   rbx
   140007aad:	add    BYTE PTR [rbp+0x0],ch
   140007ab0:	(bad)  
   140007ab1:	add    BYTE PTR [rdx+0x0],dh
   140007ab4:	je     0x140007ab6
   140007ab6:	push   rbx
   140007ab7:	add    BYTE PTR [rbx+0x0],ah
   140007aba:	jb     0x140007abc
   140007abc:	add    BYTE PTR gs:[rbp+0x0],ah
   140007ac0:	outs   dx,BYTE PTR ds:[rsi]
   140007ac1:	add    BYTE PTR [rbx+0x0],dl
   140007ac4:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   140007ac9:	add    BYTE PTR [rcx+0x0],ch
   140007acc:	outs   dx,BYTE PTR ds:[rsi]
   140007acd:	add    BYTE PTR [rdi+0x0],ah
   140007ad0:	jae    0x140007ad2
   140007ad2:	add    BYTE PTR cs:[rbp+0x0],ah
   140007ad6:	js     0x140007ad8
   140007ad8:	add    BYTE PTR gs:[rax],al
   140007adb:	add    BYTE PTR [rdx+0x0],ch
   140007ade:	and    eax,0x50000100
   140007ae3:	add    BYTE PTR [rdx+0x0],dh
   140007ae6:	outs   dx,DWORD PTR ds:[rsi]
   140007ae7:	add    BYTE PTR [rax+rax*1+0x75],ah
   140007aeb:	add    BYTE PTR [rbx+0x0],ah
   140007aee:	je     0x140007af0
   140007af0:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140007af4:	ins    DWORD PTR es:[rdi],dx
   140007af5:	add    BYTE PTR [rbp+0x0],ah
   140007af8:	add    BYTE PTR [rax],al
   140007afa:	add    BYTE PTR [rax],al
   140007afc:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140007b00:	movsxd eax,DWORD PTR [rax]
   140007b02:	jb     0x140007b04
   140007b04:	outs   dx,DWORD PTR ds:[rsi]
   140007b05:	add    BYTE PTR [rbx+0x0],dh
   140007b08:	outs   dx,DWORD PTR ds:[rsi]
   140007b09:	add    BYTE PTR [rsi+0x0],ah
   140007b0c:	je     0x140007b0e
   140007b0e:	scas   al,BYTE PTR es:[rdi]
   140007b0f:	add    BYTE PTR [rax],ah
   140007b11:	add    BYTE PTR [rdi+0x0],dl
   140007b14:	imul   eax,DWORD PTR [rax],0x64006e
   140007b1a:	outs   dx,DWORD PTR ds:[rsi]
   140007b1b:	add    BYTE PTR [rdi+0x0],dh
   140007b1e:	jae    0x140007b20
   140007b20:	scas   al,BYTE PTR es:[rdi]
   140007b21:	add    BYTE PTR [rax],ah
   140007b23:	add    BYTE PTR [rdi+0x0],cl
   140007b26:	jo     0x140007b28
   140007b28:	add    BYTE PTR gs:[rdx+0x0],dh
   140007b2c:	(bad)  
   140007b2d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140007b31:	add    BYTE PTR [rsi+0x0],ch
   140007b34:	add    BYTE PTR [eax],ah
   140007b37:	add    BYTE PTR [rbx+0x0],dl
   140007b3a:	jns    0x140007b3c
   140007b3c:	jae    0x140007b3e
   140007b3e:	je     0x140007b40
   140007b40:	add    BYTE PTR gs:[rbp+0x0],ch
   140007b44:	add    BYTE PTR [rax],al
   140007b46:	add    BYTE PTR [rax],al
   140007b48:	rex.RX add BYTE PTR [rcx],r10b
   140007b4b:	add    BYTE PTR [rcx],al
   140007b4d:	add    BYTE PTR [rax+0x0],dl
   140007b50:	jb     0x140007b52
   140007b52:	outs   dx,DWORD PTR ds:[rsi]
   140007b53:	add    BYTE PTR [rax+rax*1+0x75],ah
   140007b57:	add    BYTE PTR [rbx+0x0],ah
   140007b5a:	je     0x140007b5c
   140007b5c:	push   rsi
   140007b5d:	add    BYTE PTR [rbp+0x0],ah
   140007b60:	jb     0x140007b62
   140007b62:	jae    0x140007b64
   140007b64:	imul   eax,DWORD PTR [rax],0x6e006f
   140007b6a:	add    BYTE PTR [rax],al
   140007b6c:	xor    DWORD PTR [rax],eax
   140007b6e:	xor    BYTE PTR [rax],al
   140007b70:	add    BYTE PTR cs:[rax],dh
   140007b73:	add    BYTE PTR [rsi],ch
   140007b75:	add    BYTE PTR [rcx],dh
   140007b77:	add    BYTE PTR [rax],dh
   140007b79:	add    BYTE PTR [rdx],dh
   140007b7b:	add    BYTE PTR [rax+rax*1],dh
   140007b7e:	xor    BYTE PTR [rax],al
   140007b80:	add    BYTE PTR cs:[rcx],dh
   140007b83:	add    BYTE PTR [rsi],dh
   140007b85:	add    BYTE PTR [rbx],dh
   140007b87:	add    BYTE PTR [rax],bh
   140007b89:	add    BYTE PTR [rax+rax*1],dh
   140007b8c:	add    BYTE PTR [rax],al
   140007b8e:	add    BYTE PTR [rax],al
   140007b90:	add    BYTE PTR [rax],r8b
   140007b93:	add    BYTE PTR [rcx],al
   140007b95:	add    BYTE PTR [rsi+0x0],dl
   140007b98:	(bad)  
   140007b99:	add    BYTE PTR [rdx+0x0],dh
   140007b9c:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140007ba0:	ins    BYTE PTR es:[rdi],dx
   140007ba1:	add    BYTE PTR [rbp+0x0],ah
   140007ba4:	rex.WB add BYTE PTR [r14+0x0],bpl
   140007ba8:	data16 add BYTE PTR [rdi+0x0],ch
   140007bac:	add    BYTE PTR [rax],al
   140007bae:	add    BYTE PTR [rax],al
   140007bb0:	and    al,0x0
   140007bb2:	add    al,0x0
   140007bb4:	add    BYTE PTR [rax],al
   140007bb6:	push   rsp
   140007bb7:	add    BYTE PTR [rdx+0x0],dh
   140007bba:	(bad)  
   140007bbb:	add    BYTE PTR [rsi+0x0],ch
   140007bbe:	jae    0x140007bc0
   140007bc0:	ins    BYTE PTR es:[rdi],dx
   140007bc1:	add    BYTE PTR [rcx+0x0],ah
   140007bc4:	je     0x140007bc6
   140007bc6:	imul   eax,DWORD PTR [rax],0x6e006f
   140007bcc:	add    BYTE PTR [rax],al
   140007bce:	add    BYTE PTR [rax],al
   140007bd0:	or     DWORD PTR [rax+rsi*4],eax
   140007bd3:	add    al,0x0
   140007bd5:	add    BYTE PTR [rax],al
   140007bd7:	add    BYTE PTR [rcx+0xd474e50],cl
   140007bdd:	or     bl,BYTE PTR [rdx]
   140007bdf:	or     al,BYTE PTR [rax]
   140007be1:	add    BYTE PTR [rax],al
   140007be3:	or     eax,0x52444849
   140007be8:	add    BYTE PTR [rax],al
   140007bea:	add    DWORD PTR [rax],eax
   140007bec:	add    BYTE PTR [rax],al
   140007bee:	add    DWORD PTR [rax],eax
   140007bf0:	or     BYTE PTR [rsi],al
   140007bf2:	add    BYTE PTR [rax],al
   140007bf4:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   140007bf8:	data16 add BYTE PTR [rax],al
   140007bfb:	(bad)  
   140007bfc:	jo     0x140007c47
   140007bfe:	rex.R
   140007bff:	push   r12
   140007c01:	js     0x140007b9f
   140007c03:	in     eax,dx
   140007c04:	popf   
   140007c05:	pop    rdi
   140007c06:	ins    BYTE PTR es:[rdi],dx
   140007c07:	sbb    al,0xd7
   140007c09:	jns    0x140007bd0
   140007c0b:	iret   
   140007c0c:	xchg   edx,eax
   140007c0d:	rex.WXB push r10
   140007c0f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007c10:	rex.R pop rcx
   140007c12:	xchg   esp,eax
   140007c13:	adc    BYTE PTR [rcx],ch
   140007c15:	stos   BYTE PTR es:[rdi],al
   140007c16:	imul   ecx,DWORD PTR [rax+0x74],0x54
   140007c1a:	ror    BYTE PTR [rsi+0x15],0xc5
   140007c1e:	xor    ah,BYTE PTR [rax+0x3]
   140007c21:	adc    dl,al
   140007c23:	pop    rax
   140007c24:	(bad)  
   140007c25:	loopne 0x140007bd5
   140007c27:	xchg   ebx,eax
   140007c28:	xchg   edi,eax
   140007c29:	enter  0x5be8,0x9d
   140007c2d:	(bad)  
   140007c2e:	(bad)  
   140007c2f:	pop    rdx
   140007c30:	and    BYTE PTR [rip+0xb91d404],al        # 0x14b92503a
   140007c36:	cmp    BYTE PTR [rbp+0x6a],bh
   140007c39:	sub    al,0xa3
   140007c3b:	jge    0x140007ca6
   140007c3d:	push   rcx
   140007c3e:	fld    DWORD PTR [rsi-0x63]
   140007c41:	(bad)  
   140007c42:	and    eax,DWORD PTR [rsi]
   140007c44:	rex.WR add rax,0x41369252
   140007c4a:	mov    esp,0x1bd8e086
   140007c4f:	sbb    ebp,ecx
   140007c51:	ficom  DWORD PTR [rdx+0x44]
   140007c54:	rex.R jb 0x140007c62
   140007c57:	jp     0x140007c3e
   140007c59:	movabs ds:0x165da75524d26489,al
   140007c62:	movabs al,ds:0x87db8a447f9692b9
   140007c6b:	cdq    
   140007c6c:	and    DWORD PTR [rdi+0x67],esp
   140007c6f:	addr32 data16 addr32 out dx,al
   140007c73:	ficomp WORD PTR [rcx+0x1ce773b9]
   140007c79:	adc    BYTE PTR [rdi+0x76],sil
   140007c7d:	mov    esi,0xf9c80dfb
   140007c82:	popf   
   140007c83:	mov    ecx,0x68d727ff
   140007c88:	xor    al,0x40
   140007c8a:	push   rcx
   140007c8b:	push   rsp
   140007c8c:	ss (bad) 
   140007c8e:	xchg   ebp,eax
   140007c8f:	hlt    
   140007c90:	add    eax,0x9c951450
   140007c95:	push   0x61951400
   140007c9a:	rol    DWORD PTR [rax],1
   140007c9c:	sub    BYTE PTR [rdx],ch
   140007c9e:	ret    
   140007c9f:	movabs ds:0xa8a0034586545001,al
   140007ca8:	or     al,0x8b
   140007caa:	(bad)  
   140007cab:	rex push rcx
   140007cad:	sbb    DWORD PTR [rsi],edx
   140007caf:	or     eax,0xac32a280
   140007cb4:	jl     0x140007c5d
   140007cb6:	add    eax,0x193972e4
   140007cbb:	xlat   BYTE PTR ds:[rbx]
   140007cbc:	rex.B
   140007cbd:	rex.WB push r8
   140007cbf:	movabs eax,ds:0xe6438037600dd850
   140007cc8:	movabs eax,ds:0x64207800b7ffcc47
   140007cd1:	jno    0x140007c66
   140007cd3:	out    0x3f,al
   140007cd5:	add    BYTE PTR [rax-0x31],bh
   140007cd8:	cld    
   140007cd9:	mov    edi,0x54b2600c
   140007cde:	sub    cl,BYTE PTR [rbp-0x4a]
   140007ce1:	sahf   
   140007ce2:	rex.WRX and rax,0xfffffffff1e74ea1
   140007ce8:	in     al,0x3a
   140007cea:	add    BYTE PTR cs:[rsi],0x90
   140007cee:	mov    BYTE PTR [rax+rbx*8+0xf],cl
   140007cf2:	add    eax,edi
   140007cf4:	xor    cl,BYTE PTR [rax+rdi*4]
   140007cf7:	pextrw edi,(bad),0xc5
   140007cf9:	jl     0x140007d04
   140007cfb:	add    BYTE PTR gs:[rbx+0x0],ah
   140007cff:	ds add al,0x30
   140007d02:	push   rsi
   140007d03:	sub    dl,BYTE PTR [rbp+0x4fce62c6]
   140007d09:	add    DWORD PTR [rsi],0x80d91990
   140007d0f:	jg     0x140007d15
   140007d11:	rcl    BYTE PTR [rcx],0x18
   140007d14:	rex.WRXB jne 0x140007cac
   140007d17:	xor    al,0x7
   140007d19:	movabs al,ds:0x1e212d6650b6a308
   140007d22:	rol    DWORD PTR [rax],1
   140007d24:	xor    al,0x96
   140007d26:	or     ebp,edi
   140007d28:	adc    DWORD PTR [rax],eax
   140007d2a:	and    QWORD PTR [r13+r10*1+0x7e],r8
   140007d2f:	movabs eax,ds:0xd9e85843f2160b67
   140007d38:	(bad)  
   140007d39:	(bad)
   140007d3c:	add    al,al
   140007d3e:	ins    BYTE PTR es:[rdi],dx
   140007d3f:	(bad)  
   140007d40:	out    dx,al
   140007d41:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140007d42:	jae    0x140007dc2
   140007d44:	stc    
   140007d45:	push   rdi
   140007d46:	div    DWORD PTR [rip+0xffffffff9e546e7d]        # 0xde54ebc9
   140007d4c:	imul   edi,edx,0xe8ca657c
   140007d52:	(bad)  
   140007d53:	stos   BYTE PTR es:[rdi],al
   140007d54:	(bad)  
   140007d55:	jb     0x140007d1d
   140007d57:	mov    edi,0x6b542eb9
   140007d5c:	movabs eax,ds:0xd228014e0063d6fe
   140007d65:	or     al,0xa2
   140007d67:	adc    ecx,DWORD PTR [rip+0xa153340]        # 0x14a15b0ad
   140007d6d:	test   DWORD PTR [rip+0x67fa030],ebp        # 0x146801da3
   140007d73:	add    DWORD PTR [rax-0x39e7e261],esp
   140007d79:	int    0xbe
   140007d7b:	iret   
   140007d7c:	jrcxz  0x140007de4
   140007d7e:	fisttp WORD PTR [rsi-0x24]
   140007d81:	call   0xe2107bbb
   140007d86:	(bad)  
   140007d87:	(bad)  
   140007d88:	(bad)  
   140007d89:	(bad)  
   140007d8a:	cld    
   140007d8b:	stc    
   140007d8c:	std    
   140007d8d:	scas   eax,DWORD PTR es:[rdi]
   140007d8e:	cmp    bh,cl
   140007d90:	jo     0x140007d1f
   140007d92:	stos   DWORD PTR es:[rdi],eax
   140007d93:	rex.WR ja 0x140007d39
   140007d96:	cmp    dl,BYTE PTR [rdi+0xbb544c3]
   140007d9c:	adc    esi,DWORD PTR [rbx]
   140007d9e:	pop    rbp
   140007d9f:	test   al,0x4c
   140007da1:	jne    0x140007daa
   140007da3:	rex.WB (bad) 
   140007da5:	(bad)  
   140007da6:	loopne 0x140007e0d
   140007da8:	sbb    BYTE PTR [rsi+0x30],ah
   140007dab:	(bad)  
   140007dac:	call   0xe24126b3
   140007db1:	add    DWORD PTR [rax+0x22],ebp
   140007db4:	repz imul edi,edi,0xdea9b45d
   140007dbb:	iret   
   140007dbc:	(bad)  
   140007dbd:	or     al,0xe3
   140007dbf:	mov    bl,0xfe
   140007dc1:	(bad)  
   140007dc2:	int3   
   140007dc3:	(bad)  
   140007dc4:	in     al,dx
   140007dc5:	(bad)  
   140007dc6:	ins    BYTE PTR es:[rdi],dx
   140007dc7:	push   rax
   140007dc9:	cli    
   140007dca:	(bad)  
   140007dcb:	and    edi,edi
   140007dcd:	mov    esi,?
   140007dcf:	(bad)  
   140007dd0:	adc    BYTE PTR [rsi+0x3774cab0],ch
   140007dd6:	scas   al,BYTE PTR es:[rdi]
   140007dd7:	rex.WR jne 0x140007d7d
   140007dda:	xor    dl,ch
   140007ddc:	test   edx,ecx
   140007dde:	mov    ah,0xaf
   140007de0:	and    DWORD PTR [rax-0x33],ebx
   140007de3:	test   BYTE PTR [rbx],dl
   140007de5:	lods   al,BYTE PTR ds:[rsi]
   140007de6:	adc    eax,0x200d11c8
   140007deb:	in     eax,0x2a
   140007ded:	adc    al,0xa
   140007def:	xchg   DWORD PTR [rax-0x80],esp
   140007df2:	jg     0x140007dbc
   140007df4:	jmp    0x140007d92
   140007df6:	cdq    
   140007df7:	rex.WRB mul QWORD PTR [r11+0x66]
   140007dfb:	sar    ebp,cl
   140007dfd:	test   al,0x6e
   140007dff:	mov    edx,0x1b5d2b1f
   140007e04:	pop    rdx
   140007e05:	rex.WRXB adc r8b,r15b
   140007e08:	adc    edi,DWORD PTR [rdx+0x1b]
   140007e0b:	or     BYTE PTR [rax+0x61],0xeb
   140007e0f:	(bad)  
   140007e10:	(bad)  
   140007e11:	(bad)  
   140007e12:	jae    0x140007dcc
   140007e14:	js     0x140007dc3
   140007e16:	sbb    esp,DWORD PTR [rbx-0x42e70ca9]
   140007e1c:	(bad)  
   140007e1d:	imul   eax,DWORD PTR [rsi],0x65
   140007e20:	sbb    BYTE PTR [rsi+0x50],al
   140007e23:	(bad)  
   140007e24:	lahf   
   140007e25:	nop
   140007e26:	mov    dl,0x44
   140007e28:	add    ecx,DWORD PTR [rax-0x57]
   140007e2b:	fiadd  DWORD PTR [rcx-0x73cfc4c1]
   140007e31:	fild   QWORD PTR [rbp-0x22]
   140007e34:	out    dx,eax
   140007e35:	or     eax,0x3f9125bd
   140007e3a:	pop    rdi
   140007e3b:	add    ebp,DWORD PTR [rax-0x44]
   140007e3e:	loop   0x140007ea6
   140007e40:	add    BYTE PTR [rbp+0x6594efc1],bl
   140007e46:	(bad)  
   140007e47:	out    dx,eax
   140007e48:	push   rsi
   140007e49:	bnd jle 0x140007e81
   140007e4c:	xor    DWORD PTR [rdx],0x68
   140007e4f:	add    al,0xc2
   140007e51:	movabs ds:0x1845ff55664ca401,al
   140007e5a:	push   rbp
   140007e5b:	std    
   140007e5c:	lods   eax,DWORD PTR es:[rsi]
   140007e5e:	je     0x140007ecd
   140007e60:	rex jne 0x140007e36
   140007e63:	std    
   140007e64:	sbb    bh,bl
   140007e66:	jbe    0x140007e80
   140007e68:	or     edi,DWORD PTR [rip+0x5f93a01]        # 0x145f9b86f
   140007e6e:	loope  0x140007e77
   140007e70:	fmul   QWORD PTR [rax+riz*8]
   140007e73:	pop    QWORD PTR [rbx+rcx*8+0x2d6aa20a]
   140007e7a:	xchg   DWORD PTR [rbx],esi
   140007e7c:	out    0x7b,eax
   140007e7e:	jno    0x140007e71
   140007e80:	pop    rdx
   140007e81:	(bad)  
   140007e82:	(bad)  
   140007e83:	mov    ebp,DWORD PTR [rsi-0x3feeb309]
   140007e89:	jno    0x140007ec1
   140007e8b:	or     eax,0x900689c2
   140007e90:	adc    bl,BYTE PTR [rcx-0x79208463]
   140007e96:	icebp  
   140007e97:	(bad)  
   140007e98:	outs   dx,DWORD PTR ds:[rsi]
   140007e99:	ror    BYTE PTR [rdx-0x29],cl
   140007e9c:	(bad)  
   140007e9d:	rex.WR or rax,0xffffffffd0e4c41d
   140007ea3:	add    edi,edi
   140007ea5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140007ea6:	mov    ebp,0xfc01d5d
   140007eab:	rex.W xor BYTE PTR [rax],al
   140007eae:	movabs eax,ds:0xfc50e62fa81a6db
   140007eb7:	jp     0x140007ea9
   140007eb9:	(bad)  
   140007eba:	in     eax,0x1e
   140007ebc:	(bad)  
   140007ebd:	and    edi,DWORD PTR [rax]
   140007ebf:	add    eax,esp
   140007ec1:	and    eax,0x13061676
   140007ec6:	or     eax,0xab320520
   140007ecb:	sti    
   140007ecc:	scas   eax,DWORD PTR es:[rdi]
   140007ecd:	ret    
   140007ece:	cwde   
   140007ecf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140007ed0:	mov    bh,0x26
   140007ed2:	and    eax,esi
   140007ed4:	or     DWORD PTR [rsi+0x343a07e1],0xedf84100
   140007ede:	push   0x63
   140007ee0:	add    al,0x93
   140007ee2:	add    BYTE PTR [rsi+0x5ed059b2],cl
   140007ee8:	xor    al,0x0
   140007eea:	(bad)
   140007eed:	adc    al,0x5e
   140007eef:	test   cl,dh
   140007ef1:	in     al,0x6f
   140007ef3:	rcl    ah,cl
   140007ef5:	rol    BYTE PTR [rcx+0x7c],1
   140007ef8:	mov    esp,0xe070d1ed
   140007efd:	add    edx,DWORD PTR [rdx-0x20]
   140007f00:	(bad)  
   140007f01:	cmp    dh,BYTE PTR [rax]
   140007f03:	add    BYTE PTR [rcx],cl
   140007f05:	lock fist DWORD PTR [rbp+0x5f]
   140007f09:	int3   
   140007f0a:	loope  0x140007f00
   140007f0c:	test   DWORD PTR [rsi+0x14],ebx
   140007f0f:	(bad)  
   140007f10:	idiv   DWORD PTR [rax-0x56ad0283]
   140007f16:	push   rsp
   140007f17:	cmp    ch,BYTE PTR [rsi]
   140007f19:	xchg   edx,eax
   140007f1a:	xor    DWORD PTR [rbx],ebp
   140007f1c:	movabs ds:0x1c22ffa9f32a2801,al
   140007f25:	movsxd edi,ecx
   140007f27:	mov    bl,0x3
   140007f29:	ret    
   140007f2a:	clc    
   140007f2b:	int    0xe7
   140007f2d:	mov    esi,0x9f7d9b86
   140007f32:	maxps  xmm5,XMMWORD PTR [rax+0x4101f824]
   140007f39:	add    edx,DWORD PTR [rax+0x135dbf0c]
   140007f3f:	(bad)  
   140007f40:	cs mov esp,0x5b9f6efa
   140007f46:	addr32 loope 0x140007f61
   140007f49:	mov    WORD PTR [rsi+0x7648b281],?
   140007f4f:	fld    QWORD PTR [rbp+0x3]
   140007f52:	push   rax
   140007f53:	rex.WR
   140007f54:	pop    bx
   140007f56:	(bad)  
   140007f57:	mov    ebx,0x57f53c70
   140007f5c:	mov    edx,0x6de3e036
   140007f61:	xchg   DWORD PTR [rcx],esi
   140007f63:	xor    eax,0x7bb21074
   140007f68:	fcmovnb st,st(3)
   140007f6a:	(bad)  
   140007f6b:	xor    al,0xd0
   140007f6d:	js     0x140007f54
   140007f6f:	loope  0x140007f57
   140007f71:	and    ebp,ebp
   140007f73:	or     al,0x20
   140007f75:	rex.X clc 
   140007f77:	in     eax,dx
   140007f78:	sub    bl,BYTE PTR [rsi-0x12]
   140007f7b:	shr    ecx,0xb
   140007f7e:	mov    ebp,0x9782cd6e
   140007f83:	(bad)  
   140007f84:	mov    WORD PTR [rsi],ss
   140007f86:	mov    al,0x6f
   140007f88:	shl    BYTE PTR [rsi+0x72e5f94e],0x60
   140007f8f:	mov    DWORD PTR [rdx],ebp
   140007f91:	adc    al,0xa
   140007f93:	rex.WRXB add r15,r8
   140007f96:	add    al,0xe
   140007f98:	clc    
   140007f99:	outs   dx,DWORD PTR ds:[rsi]
   140007f9a:	imul   ch
   140007f9c:	(bad)  
   140007f9d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140007f9e:	jnp    0x140007f9e
   140007fa0:	pop    rsp
   140007fa1:	sbb    eax,edi
   140007fa3:	movsxd ecx,ecx
   140007fa5:	(bad)  
   140007fa6:	(bad)  
   140007fa7:	test   BYTE PTR [rbx],ah
   140007fa9:	cvtps2pi mm4,xmm3
   140007fac:	(bad)  
   140007fad:	(bad)  
   140007fae:	je     0x140007fb1
   140007fb0:	imul   esi
   140007fb2:	pop    rax
   140007fb3:	jne    0x140008033
   140007fb5:	cmc    
   140007fb6:	ins    DWORD PTR es:[rdi],dx
   140007fb7:	add    BYTE PTR [rdi+0x4a63bf98],bl
   140007fbd:	xchg   edx,eax
   140007fbe:	pop    rax
   140007fbf:	add    edx,DWORD PTR [rax-0xf5ebd60]
   140007fc5:	add    BYTE PTR [rdx+rbp*8+0x77e721fe],cl
   140007fcc:	jrcxz  0x140007fa9
   140007fce:	(bad)  
   140007fcf:	jrcxz  0x140007fb4
   140007fd1:	ins    DWORD PTR es:[rdi],dx
   140007fd2:	xchg   ebp,ecx
   140007fd4:	rex.WRXB (bad) 
   140007fd6:	rcr    BYTE PTR [rdi],0xb8
   140007fd9:	(bad)  
   140007fda:	adc    BYTE PTR [rbx],ah
   140007fdc:	cld    
   140007fdd:	rex.WRX popf 
   140007fdf:	mov    ecx,0xe7d38bd0
   140007fe4:	jnp    0x140007fc3
   140007fe6:	mov    esi,0x1668c32a
   140007feb:	fs jle 0x140007ff3
   140007fee:	and    bl,BYTE PTR [rbx+0x36ca0900]
   140007ff4:	jge    0x140007fed
   140007ff6:	imul   esp,edi,0xc303b377
   140007ffc:	clc    
   140007ffd:	push   0xffffffffc6d89fc7
   140008002:	repz (bad) 
   140008004:	sbb    DWORD PTR [rdi],0x9006808
   14000800a:	ret    0xa96f
   14000800d:	cmp    dl,bh
   14000800f:	test   DWORD PTR [rbx+0xdf6b96f],edx
   140008015:	add    al,al
   140008017:	or     BYTE PTR [rdx],dh
   140008019:	lods   eax,DWORD PTR ds:[rsi]
   14000801b:	cwde   
   14000801c:	(bad)  
   14000801d:	nop
   14000801e:	cmp    ah,0xc6
   140008021:	hlt    
   140008022:	(bad)  
   140008023:	jp     0x140007fab
   140008025:	lock fwait
   140008027:	iret   
   140008028:	jge    0x140008037
   14000802a:	xor    ebx,DWORD PTR [rbx+0x551db7ee]
   140008030:	or     edi,DWORD PTR [rsi+0x20]
   140008033:	add    BYTE PTR [rcx],0x28
   140008036:	add    BYTE PTR [rdi+0x6bd1b8bd],bh
   14000803c:	jns    0x140007ffa
   14000803e:	cli    
   14000803f:	outs   dx,BYTE PTR ds:[rsi]
   140008040:	lahf   
   140008041:	xlat   BYTE PTR ds:[rbx]
   140008042:	mov    al,ah
   140008044:	int3   
   140008045:	(bad)  
   140008046:	sbb    eax,0x28c401a0
   14000804b:	sbb    edi,eax
   14000804d:	iret   
   14000804e:	shl    BYTE PTR [rbp-0x3f],0xce
   140008052:	clc    
   140008053:	mov    dh,0xc3
   140008055:	cwde   
   140008056:	sbb    al,0x3a
   140008058:	call   0x14f545a75
   14000805d:	jle    0x140007fff
   14000805f:	lea    eax,[rcx]
   140008061:	sub    BYTE PTR [rsi],al
   140008063:	mov    edi,0xe52faa5
   140008068:	(bad)
   14000806b:	js     0x140008050
   14000806d:	add    edx,edi
   14000806f:	mov    ecx,0x56307303
   140008074:	sbb    al,0x66
   140008076:	retf   0x6808
   140008079:	add    BYTE PTR [rcx],dh
   14000807b:	enter  0xeaac,0x3f
   14000807f:	add    esp,DWORD PTR [rbx-0x1fd2056]
   140008085:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008086:	fwait
   140008087:	(bad)  
   140008088:	hlt    
   140008089:	cwde   
   14000808a:	mov    esi,0x80fc26ab
   14000808f:	pop    QWORD PTR [rcx]
   140008091:	sub    BYTE PTR [rdx],cl
   140008093:	mov    edi,0xad6a8bfd
   140008098:	or     esp,DWORD PTR [rdi+0x2e]
   14000809b:	hlt    
   14000809c:	loop   0x14000807a
   14000809e:	adc    eax,0x7303b9d7
   1400080a3:	xor    BYTE PTR [rdx-0x5e98d0fa],bl
   1400080a9:	imul   eax,DWORD PTR [rax+0x3],0xe7665088
   1400080b0:	sahf   
   1400080b1:	add    eax,0xdb5a8b7e
   1400080b6:	stc    
   1400080b7:	jbe    0x140008062
   1400080b9:	or     edi,DWORD PTR [rdi]
   1400080bb:	sbb    al,BYTE PTR [rax-0x1d]
   1400080be:	jnp    0x1400080ee
   1400080c0:	(bad)  
   1400080c1:	nop
   1400080c2:	add    bh,al
   1400080c4:	in     eax,dx
   1400080c5:	stos   BYTE PTR es:[rdi],al
   1400080c6:	(bad)  
   1400080c7:	mov    edx,0xdadf270
   1400080cc:	jle    0x1400080d9
   1400080ce:	lea    eax,[rsi+0x60]
   1400080d1:	sbb    BYTE PTR [rcx+0x34859db6],al
   1400080d7:	or     BYTE PTR [rax],0x64
   1400080da:	(bad)  
   1400080db:	xor    eax,0x959f053d
   1400080e0:	jp     0x1400080c5
   1400080e2:	fisttp DWORD PTR [rsi]
   1400080e4:	(bad)  
   1400080e5:	scas   eax,DWORD PTR es:[rdi]
   1400080e6:	(bad)  
   1400080e7:	outs   dx,DWORD PTR ds:[rsi]
   1400080e8:	xchg   edx,eax
   1400080e9:	(bad)  
   1400080eb:	add    ebp,DWORD PTR [rsi]
   1400080ed:	(bad)  
   1400080ee:	lock sahf 
   1400080f0:	shl    BYTE PTR [rdx-0x60],0x4
   1400080f4:	loope  0x1400080ad
   1400080f6:	stos   DWORD PTR es:[rdi],eax
   1400080f7:	xor    bl,ch
   1400080f9:	lea    esi,[rbx]
   1400080fb:	(bad)  
   1400080fc:	cmp    al,0x3b
   1400080fe:	or     al,BYTE PTR [rcx]
   140008100:	movsxd edx,esp
   140008102:	loopne 0x140008158
   140008104:	test   eax,0xbd111a54
   140008109:	xor    al,0x55
   14000810b:	add    r10d,DWORD PTR [r8+0x7cd576a4]
   140008112:	add    al,bh
   140008114:	hlt    
   140008115:	scas   al,BYTE PTR es:[rdi]
   140008116:	(bad)  
   140008117:	xor    DWORD PTR [rip+0x7b370074],esi        # 0x1bb378191
   14000811d:	std    
   14000811e:	jbe    0x1400080fd
   140008120:	push   rcx
   140008121:	(bad)  
   140008122:	jle    0x140008164
   140008124:	xchg   BYTE PTR [rcx],al
   140008126:	test   al,0x1
   140008128:	mov    edi,0x5d33135d
   14000812d:	sub    BYTE PTR [rsi-0xa],bl
   140008130:	ins    BYTE PTR es:[rdi],dx
   140008131:	sbb    al,BYTE PTR [rax]
   140008133:	sbb    dh,BYTE PTR [rsi]
   140008135:	punpckhbw mm0,QWORD PTR [rax]
   140008138:	sbb    eax,0x96fdb6c8
   14000813d:	out    0xd3,eax
   14000813f:	jle    0x1400080e6
   140008141:	imul   eax,DWORD PTR [rbx],0xffffffaa
   140008144:	sbb    DWORD PTR [rdi+0x5c],0x6f
   140008148:	jrcxz  0x140008145
   14000814a:	(bad)  
   14000814b:	mov    edx,0xd03f01d2
   140008150:	test   eax,0xbf07a801
   140008155:	pop    rbp
   140008156:	push   rsi
   140008157:	(bad)  
   140008158:	rol    ebp,0x6b
   14000815b:	jns    0x14000810c
   14000815d:	adc    eax,0x2b598087
   140008162:	rex retf 0x29b7
   140008166:	movabs ds:0x65c3affa0d948401,eax
   14000816f:	rex.WRB movabs r14,0xc01d0d4c219e85a5
   140008179:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000817a:	ja     0x1400081b9
   14000817c:	mov    eax,0x9afabde
   140008181:	cld    
   140008182:	rex (bad) 
   140008184:	(bad)  
   140008185:	movabs al,ds:0x77387297d576fc36
   14000818e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000818f:	(bad)  
   140008190:	(bad)
   140008193:	test   al,0xd6
   140008195:	jl     0x1400081be
   140008197:	mov    ebp,0x89bc0116
   14000819c:	adc    al,0x9a
   14000819e:	add    DWORD PTR [rip+0x42828020],ecx        # 0x1828301c4
   1400081a4:	(bad)  
   1400081a6:	(bad)  
   1400081a7:	cld    
   1400081a8:	fild   QWORD PTR [rbp-0x22]
   1400081ab:	(bad)  
   1400081ac:	fld    DWORD PTR [rcx]
   1400081ae:	rex.RXB sti 
   1400081b0:	pop    rsi
   1400081b1:	and    edi,eax
   1400081b3:	add    DWORD PTR [rcx+0x3],edx
   1400081b6:	rex.W paddb mm1,mm6
   1400081ba:	loop   0x1400081e6
   1400081bc:	rcr    ebp,cl
   1400081be:	js     0x1400081b7
   1400081c0:	movabs ds:0x19954a581e6bf1e,eax
   1400081c9:	or     eax,0xf6643c0
   1400081ce:	(bad)  
   1400081cf:	and    DWORD PTR [rax+rbx*8],eax
   1400081d2:	push   rdx
   1400081d3:	sti    
   1400081d4:	data16 fisttp WORD PTR [rsi+0x7c]
   1400081d8:	jp     0x1400081b1
   1400081da:	(bad)  
   1400081db:	out    0xa7,al
   1400081dd:	mov    ebp,0xfc19a5d
   1400081e2:	mov    BYTE PTR [rax],bl
   1400081e4:	rex jp 0x1400081c8
   1400081e7:	mov    bh,0xcb
   1400081e9:	stos   BYTE PTR es:[rdi],al
   1400081ea:	adc    eax,0xc792bb9c
   1400081ef:	(bad)  
   1400081f0:	rex.WR fistp DWORD PTR [rip+0xffffffffcdadad8d]        # 0x10dae2f84
   1400081f7:	retf   
   1400081f8:	stos   BYTE PTR es:[rdi],al
   1400081f9:	mov    fs,WORD PTR [rax+rdx*8]
   1400081fc:	add    BYTE PTR [rcx+rbx*8-0x80],cl
   140008200:	jg     0x1400081c6
   140008202:	cld    
   140008203:	fbstp  TBYTE PTR [rdi+0x4f]
   140008206:	lods   eax,DWORD PTR ds:[rsi]
   140008207:	test   DWORD PTR [rsi-0x459333df],ebx
   14000820d:	(bad)  
   14000820e:	push   rbx
   14000820f:	rex.XB (bad) 
   140008211:	std    
   140008212:	mov    bh,0xdf
   140008214:	rcl    BYTE PTR [rax],cl
   140008216:	jle    0x140008238
   140008218:	lods   al,BYTE PTR ds:[rsi]
   140008219:	add    eax,ebp
   14000821b:	add    DWORD PTR [rdi-0x5295740d],edi
   140008221:	or     eax,ebp
   140008223:	(bad)  
   140008225:	xor    DWORD PTR [rdx+0x2d],edi
   140008228:	fild   QWORD PTR [rsi+0x1d180089]
   14000822e:	mov    BYTE PTR [rbp-0x54],ah
   140008231:	mov    edi,0x430944f8
   140008236:	enter  0x1a4,0x98
   14000823a:	push   rbp
   14000823b:	jp     0x140008248
   14000823d:	clc    
   14000823e:	(bad)  
   14000823f:	and    eax,DWORD PTR [rax]
   140008241:	lock xor cl,0xa4
   140008245:	lahf   
   140008246:	sbb    DWORD PTR [rsi+rsi*2],esi
   140008249:	xlat   BYTE PTR ds:[rbx]
   14000824a:	or     eax,0xa6be7fb4
   14000824f:	lock add esp,DWORD PTR [rcx+0xc]
   140008253:	rex
   140008254:	rex.WRXB clc 
   140008256:	popf   
   140008257:	(bad)  
   140008258:	cwde   
   140008259:	jmp    0x17cb66b24
   14000825e:	cs pop rsi
   140008260:	or     eax,0xd6003354
   140008265:	or     eax,0xfff343e1
   14000826a:	mov    cl,0x24
   14000826c:	(bad)  
   14000826d:	or     al,0xda
   14000826f:	sbb    eax,DWORD PTR [rax-0x29687a1d]
   140008275:	jnp    0x140008267
   140008277:	jbe    0x140008280
   140008279:	mov    DWORD PTR [rbp-0x17],ebx
   14000827c:	fiadd  WORD PTR [rax-0x339e7e27]
   140008282:	ins    BYTE PTR es:[rdi],dx
   140008283:	cld    
   140008284:	and    ah,BYTE PTR [rsi+0x7]
   140008287:	xchg   BYTE PTR [rbx+0x4969b46d],al
   14000828d:	movsxd edi,eax
   14000828f:	and    DWORD PTR [rax-0x7f26ffa],0x8cd6aa9d
   140008299:	neg    DWORD PTR [rbx]
   14000829b:	mov    WORD PTR [rsi-0x15],ds
   14000829e:	rex.B
   14000829f:	gs mov edx,0xc0a5f51b
   1400082a5:	idiv   eax
   1400082a7:	and    al,0xd6
   1400082a9:	fist   WORD PTR [rdi+0x2f0c4658]
   1400082af:	push   rdx
   1400082b0:	(bad)  
   1400082b1:	ret    0x6c00
   1400082b4:	nop
   1400082b5:	pop    rbx
   1400082b6:	(bad)  
   1400082b7:	mov    esi,0x7e89e30c
   1400082bc:	sub    BYTE PTR [rcx+rbx*2-0x4d],ch
   1400082c0:	add    eax,ebx
   1400082c2:	clc    
   1400082c3:	ins    BYTE PTR es:[rdi],dx
   1400082c4:	(bad)  
   1400082c5:	sbb    BYTE PTR [rbx-0x1f46c01a],dh
   1400082cb:	mov    ch,0xfd
   1400082cd:	push   rdx
   1400082ce:	pop    rdx
   1400082cf:	xchg   rsp,rax
   1400082d1:	lock add eax,DWORD PTR [rcx+0xc]
   1400082d5:	rex sub eax,0x53cc9328
   1400082db:	cdq    
   1400082dc:	(bad)  
   1400082dd:	jrcxz  0x1400082a9
   1400082df:	cmc    
   1400082e0:	outs   dx,BYTE PTR ds:[rsi]
   1400082e1:	push   rsp
   1400082e2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400082e3:	jge    0x14000829c
   1400082e5:	(bad)  
   1400082e6:	not    DWORD PTR [rbx+0x19]
   1400082e9:	rex.RX (bad) 
   1400082eb:	loope  0x140008330
   1400082ed:	lods   al,BYTE PTR ds:[rsi]
   1400082ee:	mov    edi,0x398a5975
   1400082f3:	sub    BYTE PTR [rcx+0x0],ah
   1400082f6:	out    0xf6,al
   1400082f8:	push   rdi
   1400082f9:	pop    rsi
   1400082fa:	jb     0x1400082ba
   1400082fc:	(bad)  
   1400082fd:	fiadd  DWORD PTR [rdx-0x720f17e5]
   140008303:	mov    dh,0xd6
   140008305:	adc    edi,esi
   140008307:	data16 (bad) 
   14000830a:	jne    0x1400082ec
   14000830c:	in     eax,dx
   14000830d:	and    bh,ah
   14000830f:	fisub  WORD PTR [rdi-0x57fe505]
   140008315:	push   rax
   140008316:	es cdq 
   140008318:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008319:	xor    bl,BYTE PTR [rbp+0x6ee995c7]
   14000831f:	mov    edi,cs
   140008321:	je     0x1400082aa
   140008323:	lods   eax,DWORD PTR ds:[rsi]
   140008324:	and    DWORD PTR [rax-0x57],edi
   140008327:	ins    BYTE PTR es:[rdi],dx
   140008328:	(bad)  
   140008329:	outs   dx,DWORD PTR ds:[rsi]
   14000832a:	cdq    
   14000832b:	test   BYTE PTR [rbp-0x64670ccf],ah
   140008331:	out    0x4a,al
   140008333:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008334:	rcr    BYTE PTR [rax-0x1e],cl
   140008337:	(bad)  
   140008338:	lock clc 
   14000833a:	jrcxz  0x1400082cb
   14000833c:	rex.WXB (bad) 
   14000833e:	sub    edi,DWORD PTR [rdx+0x78c7a16b]
   140008344:	fxam   
   140008346:	addr32 add eax,ebx
   140008349:	mov    eax,0x6e2761b1
   14000834e:	imul   ch
   140008350:	in     al,dx
   140008351:	movabs al,ds:0x3f01f81f46244ef3
   14000835a:	add    ecx,DWORD PTR [rax+0x27]
   14000835d:	xchg   esp,eax
   14000835e:	rex.WB out 0xa9,al
   140008361:	(bad)  
   140008362:	mov    edi,?
   140008364:	and    al,0x4e
   140008366:	int3   
   140008367:	je     0x14000830c
   140008369:	jb     0x140008328
   14000836b:	sbb    edx,ebp
   14000836d:	pop    rdx
   14000836e:	push   rdi
   14000836f:	nop
   140008370:	rex.WRX
   140008371:	sub    DWORD PTR [r10-0x19],r15d
   140008375:	popf   
   140008376:	ja     0x1400083b2
   140008378:	jb     0x140008319
   14000837a:	mov    esp,0xa5910bac
   14000837f:	fld    DWORD PTR [rcx-0x88b539f]
   140008385:	jrcxz  0x14000836d
   140008387:	xchg   BYTE PTR [rbp-0x4891a41a],bl
   14000838d:	mov    ah,0x3e
   14000838f:	(bad)  
   140008391:	mov    eax,esi
   140008393:	retf   
   140008394:	iret   
   140008395:	and    esp,DWORD PTR [rdx+0x71d9e48c]
   14000839b:	xlat   BYTE PTR ds:[rbx]
   14000839c:	sbb    eax,0xeebb8ec
   1400083a1:	(bad)  
   1400083a2:	cld    
   1400083a3:	shl    DWORD PTR [rdx],0x9e
   1400083a6:	mov    ah,0x1d
   1400083a8:	scas   eax,DWORD PTR es:[rdi]
   1400083a9:	pop    rsp
   1400083aa:	(bad)  
   1400083ab:	rex.RX (bad) 
   1400083ad:	pushw  0x5d
   1400083b0:	sbb    BYTE PTR [rdi+0x297d42e9],bl
   1400083b6:	xchg   edx,ecx
   1400083b8:	mov    ah,0x5a
   1400083ba:	enter  0x72c5,0x35
   1400083be:	mov    bl,0x1b
   1400083c0:	xlat   BYTE PTR ds:[rbx]
   1400083c1:	fnclex 
   1400083c3:	(bad)  
   1400083c4:	fadd   QWORD PTR [rax-0x6114e507]
   1400083ca:	and    DWORD PTR [rdi+rsi*2],ebp
   1400083cd:	ins    DWORD PTR es:[rdi],dx
   1400083ce:	pop    rax
   1400083cf:	cmp    edx,esi
   1400083d1:	and    al,0x91
   1400083d3:	fimul  DWORD PTR [rcx]
   1400083d5:	loope  0x14000836e
   1400083d7:	lahf   
   1400083d8:	rex.RXB
   1400083d9:	rex.R int3 
   1400083db:	cmp    DWORD PTR [rbp-0x9],0xffffffac
   1400083df:	add    bh,dh
   1400083e1:	mov    eax,0xd331377f
   1400083e6:	lea    ebx,[rbx+0x4b]
   1400083e9:	mov    ecx,0x60008335
   1400083ee:	cwde   
   1400083ef:	test   BYTE PTR [rbp-0x16],ch
   1400083f2:	jb     0x1400083d9
   1400083f4:	jp     0x1400083ea
   1400083f6:	js     0x140008442
   1400083f8:	int    0x50
   1400083fa:	cli    
   1400083fb:	loop   0x1400083dc
   1400083fd:	mov    ebx,0xa374217f
   140008402:	es or  eax,0xa981609e
   140008408:	test   BYTE PTR [rdi-0x4e],bl
   14000840b:	adc    al,0x86
   14000840d:	push   rdx
   14000840e:	xchg   ebp,eax
   14000840f:	cmp    al,0xf7
   140008411:	outs   dx,BYTE PTR ds:[rsi]
   140008412:	mov    edi,0x3760fc63
   140008417:	mov    BYTE PTR [rax-0x70054187],al
   14000841d:	and    DWORD PTR [rsi-0x4d],eax
   140008420:	fisubr DWORD PTR [rax]
   140008422:	cli    
   140008423:	xchg   BYTE PTR [rdx],cl
   140008425:	loope  0x14000843e
   140008427:	mov    WORD PTR [rcx],fs
   140008429:	cld    
   14000842a:	int3   
   14000842b:	adc    eax,DWORD PTR [rcx+0x1e]
   14000842e:	xchg   DWORD PTR [rdx+0x2fc20035],esp
   140008434:	sbb    BYTE PTR [rbx-0x8],al
   140008437:	cdq    
   140008438:	(bad)  
   140008439:	(bad)  
   14000843a:	cmp    al,0x2e
   14000843c:	mov    cl,dh
   14000843e:	add    BYTE PTR [rax],cl
   140008440:	mov    edi,0x67e10c60
   140008445:	sahf   
   140008446:	or     dl,dh
   140008448:	js     0x140008472
   14000844a:	sbb    al,BYTE PTR [rbx]
   14000844c:	and    ah,bh
   14000844e:	(bad)  
   14000844f:	xor    DWORD PTR [rdi+rbx*4-0x1c37dd87],eax
   140008456:	and    edi,ecx
   140008458:	(bad)  
   140008459:	rex clc 
   14000845b:	add    eax,0xf33f0863
   140008460:	rex.R xchg eax,eax
   140008462:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008463:	(bad)  
   140008464:	in     al,0x1a
   140008466:	add    cl,ah
   140008468:	(bad)  
   140008469:	mov    WORD PTR [rcx],fs
   14000846b:	cld    
   14000846c:	int3   
   14000846d:	adc    eax,DWORD PTR [rcx-0x62]
   140008470:	add    BYTE PTR [rdx-0xa],cl
   140008473:	fld    QWORD PTR [rax+0x30bfdf84]
   140008479:	ret    0x3ccf
   14000847c:	adc    DWORD PTR [rbx],ebp
   14000847e:	cmp    DWORD PTR [rbx],eax
   140008480:	and    ah,bh
   140008482:	inc    BYTE PTR [rbp-0x761981ef]
   140008488:	rex.B leave 
   14000848a:	sbb    BYTE PTR [rax],al
   14000848c:	loope  0x140008485
   14000848e:	(bad)  
   14000848f:	mov    eax,?
   140008491:	xor    ecx,DWORD PTR [rdi+0x4c]
   140008494:	mov    bl,bh
   140008496:	add    BYTE PTR [rax],cl
   140008498:	mov    edi,0x9f84617f
   14000849d:	jns    0x140008501
   14000849f:	push   rsp
   1400084a0:	mov    esp,0xfdf84006
   1400084a5:	or     ecx,DWORD PTR [rbx-0x406681f3]
   1400084ab:	adc    DWORD PTR [rdx+rax*8+0x411e5ba2],0xffffffc5
   1400084b3:	add    BYTE PTR [edi+ebx*8-0x303dcf41],al
   1400084bb:	cmp    al,0x9
   1400084bd:	sub    BYTE PTR [rsi],bl
   1400084bf:	add    esp,DWORD PTR [rax]
   1400084c1:	cld    
   1400084c2:	inc    BYTE PTR [rbp+0x49e67e11]
   1400084c8:	xor    QWORD PTR [rsi+rax*1],rbp
   1400084cc:	rex.WX sbb dil,BYTE PTR [rcx+r8*8]
   1400084d0:	add    cl,BYTE PTR [rcx]
   1400084d2:	mov    edi,0x96e8b07e
   1400084d7:	rex.RXB (bad) 
   1400084d9:	and    bl,BYTE PTR [rsi+0xc]
   1400084dc:	xchg   esp,eax
   1400084dd:	xor    al,0x78
   1400084df:	(bad)  
   1400084e0:	add    eax,0x60fd7e12
   1400084e5:	shr    DWORD PTR [rip+0xffffffffb845248f],1        # 0xf845a97a
   1400084eb:	sbb    BYTE PTR [rax],ch
   1400084ed:	imul   esi,eax,0xfc240b04
   1400084f3:	cli    
   1400084f4:	shl    DWORD PTR [rdx-0x7576e1a5],0x68
   1400084fb:	xor    DWORD PTR [rax-0x2e],edx
   1400084fe:	loopne 0x140008509
   140008500:	(bad)  
   140008501:	cwde   
   140008502:	adc    eax,0xd2cafdf8
   140008507:	or     eax,0x48f2dd16
   14000850c:	push   rsi
   14000850d:	add    al,0x8b
   14000850f:	adc    DWORD PTR [rdx+0x40b04f06],0x2c1fafc2
   140008519:	mov    edx,0x924089e5
   14000851e:	(bad)  
   14000851f:	add    esp,DWORD PTR [rip+0xffffffff81609e0d]        # 0xc1612332
   140008525:	test   BYTE PTR [rdi+0x3f],bl
   140008528:	pop    rax
   140008529:	je     0x1400084f6
   14000852b:	adc    edx,DWORD PTR [rcx+0x240c5e12]
   140008531:	cmp    eax,DWORD PTR [rsi+0x2fc10bf0]
   140008537:	test   DWORD PTR [rdx],0x9e638a04
   14000853d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000853e:	xchg   esp,eax
   14000853f:	loopne 0x1400085a3
   140008541:	and    cl,bl
   140008543:	xor    DWORD PTR [rdi+rbx*4+0x27986bf0],eax
   14000854a:	(bad)  
   14000854b:	and    eax,0x764818b4
   140008550:	or     al,0xe1
   140008552:	(bad)  
   140008553:	cld    
   140008554:	sbb    ah,dh
   140008556:	mov    DWORD PTR [rcx+0x9],eax
   140008559:	sub    al,0x6
   14000855b:	xchg   edx,eax
   14000855c:	sbb    eax,0xbf09f843
   140008561:	xchg   BYTE PTR [rcx+0x3c],bh
   140008564:	ror    eax,cl
   140008566:	int    0x13
   140008568:	repz (bad) 
   14000856a:	and    cl,bl
   14000856c:	xor    DWORD PTR [rdi+rbx*4-0x38679410],eax
   140008573:	xor    ecx,DWORD PTR [rbp+0x2e313cfc]
   140008579:	(bad)  
   14000857a:	xchg   edx,eax
   14000857b:	sbb    eax,0xbf09f843
   140008580:	xchg   BYTE PTR [rcx+0x3c],bh
   140008583:	rol    DWORD PTR [rbx+rdx*4+0x27],cl
   140008587:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008588:	(bad)
   14000858b:	movsxd ecx,DWORD PTR [rax]
   14000858d:	mov    edi,0x4b25f85c
   140008592:	(bad)  
   140008593:	sub    BYTE PTR [rip+0xfffffffff6501f85],dh        # 0x13650a51e
   140008599:	int    0x40
   14000859b:	xchg   edx,eax
   14000859c:	or     esp,DWORD PTR [rsp+rdi*8]
   14000859f:	icebp  
   1400085a0:	rex.WB (bad) 
   1400085a2:	sub    BYTE PTR [rip+0xfffffffff2501f86],dh        # 0x13250a52e
   1400085a8:	int    0x40
   1400085aa:	xchg   edx,eax
   1400085ab:	or     esp,DWORD PTR [rsp+rdi*8]
   1400085ae:	icebp  
   1400085af:	rex.WB (bad) 
   1400085b1:	sub    BYTE PTR [rip+0xffffffffee501f87],dh        # 0x12e50a53e
   1400085b7:	int    0x40
   1400085b9:	xchg   edx,eax
   1400085ba:	or     esp,DWORD PTR [rsp+rdi*8]
   1400085bd:	icebp  
   1400085be:	rex.WB (bad) 
   1400085c0:	sub    BYTE PTR [rbx],dh
   1400085c2:	add    BYTE PTR [rdi],bh
   1400085c4:	movabs al,ds:0x25f8481724819bd4
   1400085cd:	out    0x17,eax
   1400085cf:	sub    DWORD PTR [rdi],ebp
   1400085d1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400085d2:	push   rax
   1400085d3:	data16 add al,0x7e
   1400085d6:	rex cdq 
   1400085d8:	(bad)  
   1400085d9:	add    ecx,DWORD PTR [rcx+0x2e]
   1400085dc:	nop
   1400085dd:	lock rex.WXB (bad) 
   1400085e0:	(bad)  
   1400085e1:	push   rdx
   1400085e2:	pop    rsi
   1400085e3:	rex.WX movabs rax,ds:0x92066f1280fc10cc
   1400085ed:	pop    rsp
   1400085ee:	and    cl,ah
   1400085f0:	xchg   edi,eax
   1400085f1:	pushf  
   1400085f2:	pop    rdi
   1400085f3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400085f4:	mov    esp,0x31994294
   1400085f9:	clc    
   1400085fa:	add    DWORD PTR [rbp+0x7e110317],esp
   140008600:	ret    0x61af
   140008603:	(bad)  
   140008604:	iret   
   140008605:	xor    al,0xc9
   140008607:	je     0x1400085ed
   140008609:	sub    BYTE PTR [rdx+0x13f08818],bh
   14000860f:	jle    0x14000861e
   140008611:	repz js 0x1400085ba
   140008614:	rex.WB scas al,BYTE PTR es:[rdi]
   140008616:	(bad)  
   140008617:	push   rdi
   140008618:	rol    ebp,0x40
   14000861b:	test   BYTE PTR [rdi-0x38679410],bl
   140008621:	xor    ecx,DWORD PTR [rbp-0x4e]
   140008624:	rex.XB cmp BYTE PTR [r10-0x3ddf9d3],cl
   14000862b:	test   BYTE PTR [rdi-0x3d],bl
   14000862e:	cmp    al,0x9e
   140008630:	imul   edx,DWORD PTR [rdx+0x6a501f85],0x27e11031
   14000863a:	cld    
   14000863b:	sbb    ah,dh
   14000863d:	icebp  
   14000863e:	rex.WR xchg rbx,rax
   140008640:	cmp    al,0xfc
   140008642:	xor    BYTE PTR [rdx],0x8b
   140008645:	or     DWORD PTR [rax],0x30d7e13f
   14000864b:	(bad)  
   14000864c:	sbb    dh,BYTE PTR [eip+0x589407e0]        # 0x198948e33
   140008653:	or     al,0x44
   140008655:	clc    
   140008656:	or     DWORD PTR [rdi-0x2cc3867a],edi
   14000865c:	test   al,0x3
   14000865e:	(bad)  
   14000865f:	nop
   140008660:	clc    
   140008661:	(bad)  
   140008662:	and    dl,al
   140008664:	rex.WRXB clc 
   140008666:	xor    eax,0x4699e3cc
   14000866b:	sub    eax,0x174481f8
   140008670:	add    edx,DWORD PTR [rcx]
   140008672:	jle    0x140008636
   140008674:	scas   eax,DWORD PTR es:[rdi]
   140008675:	(bad)  
   140008676:	(bad)  
   140008677:	iret   
   140008678:	xor    al,0xea
   14000867a:	ror    DWORD PTR [rdi],0x24
   14000867d:	mov    dh,0x18
   14000867f:	mov    al,dh
   140008681:	adc    edi,DWORD PTR [rsi+0xd]
   140008684:	repz js 0x14000862d
   140008687:	push   rcx
   140008688:	adc    edi,DWORD PTR [rsi+0x20]
   14000868b:	xchg   ecx,eax
   14000868c:	(bad)
   14000868f:	(bad)  
   140008690:	jno    0x14000868a
   140008692:	std    
   140008693:	outs   dx,BYTE PTR ds:[rsi]
   140008694:	rex.W frstor [rax-0x754103dc]
   14000869b:	jns    0x1400086ce
   14000869d:	adc    cl,ah
   14000869f:	(bad)  
   1400086a0:	cld    
   1400086a1:	sbb    ah,dh
   1400086a3:	icebp  
   1400086a4:	rex.WR movabs ds:0x3f08818bac40fc36,rax
   1400086ae:	loope  0x140008687
   1400086b0:	xor    BYTE PTR [rdi-0x1e0ae599],cl
   1400086b6:	(bad)  
   1400086b7:	(bad)  
   1400086b8:	fwait
   1400086b9:	(bad)  
   1400086ba:	rex clc 
   1400086bc:	xchg   ebp,eax
   1400086bd:	xchg   BYTE PTR [rdi+0x6a],bl
   1400086c0:	and    dl,BYTE PTR [rcx-0x3865ad1e]
   1400086c6:	xor    ecx,DWORD PTR [rbp+0x3a]
   1400086c9:	loopne 0x1400086d2
   1400086cb:	(bad)  
   1400086cd:	add    dl,al
   1400086cf:	rex.WRXB clc 
   1400086d1:	std    
   1400086d2:	mov    cl,BYTE PTR [rbx+0x69]
   1400086d5:	(bad)  
   1400086d6:	iret   
   1400086d7:	xor    al,0xe9
   1400086d9:	sbb    DWORD PTR [rdi],0x800dc88
   1400086df:	(bad)  
   1400086e0:	loope  0x1400086d9
   1400086e2:	sub    ebp,DWORD PTR [rsi]
   1400086e4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400086e5:	jns    0x140008723
   1400086e7:	shl    DWORD PTR [rbx+rcx*1+0x352207e],cl
   1400086ee:	and    ah,bh
   1400086f0:	test   bh,bl
   1400086f2:	scas   eax,DWORD PTR es:[rdi]
   1400086f3:	mov    eax,0x4cf1e694
   1400086f8:	xchg   ebx,eax
   1400086f9:	(bad)  
   1400086fa:	cmp    al,0x11
   1400086fc:	sbb    DWORD PTR [rax],eax
   1400086fe:	loope  0x140008727
   140008700:	cld    
   140008701:	jle    0x1400086c8
   140008703:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008704:	xor    al,0x8f
   140008706:	addr32 (bad) 
   140008708:	hlt    
   140008709:	out    0x89,al
   14000870b:	rol    BYTE PTR [rax],0x8
   14000870e:	(bad)  
   14000870f:	loope  0x140008708
   140008711:	sub    ebp,DWORD PTR [rsi]
   140008713:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008714:	jns    0x140008752
   140008716:	shl    DWORD PTR [rbx+rdi*1+0x2003648f],cl
   14000871d:	cld    
   14000871e:	jmp    0x148b2e6a7
   140008723:	jg     0x14000878f
   140008725:	repnz sub BYTE PTR [rdi+riz*1-0x3de727a0],bh
   14000872d:	rex.WRXB clc 
   14000872f:	and    ecx,eax
   140008731:	jrcxz  0x1400086cc
   140008733:	rex.RX (bad) 
   140008735:	cmp    al,0x52
   140008737:	or     eax,0x18babf20
   14000873c:	cld    
   14000873d:	fs ret 0x372f
   140008741:	(bad)  
   140008742:	loope  0x1400086db
   140008744:	lahf   
   140008745:	(bad)  
   140008746:	xor    ecx,DWORD PTR [rbp+0x72]
   140008749:	jns    0x140008775
   14000874b:	xlat   BYTE PTR ds:[rbx]
   14000874c:	jnp    0x1400086f2
   14000874e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000874f:	nop
   140008750:	push   0x0
   140008752:	fwait
   140008753:	xchg   edi,eax
   140008754:	(bad)  
   140008755:	(bad)  
   140008756:	fmul   DWORD PTR [rcx+0x7e6e5f84]
   14000875c:	ret    0x3f2f
   14000875f:	(bad)  
   140008760:	sbb    bh,BYTE PTR [ebp+0x27b628f2]
   140008767:	(bad)  
   140008768:	fcomp  DWORD PTR [rax]
   14000876a:	ret    0x742f
   14000876d:	movabs ds:0x40f33a7f08b7bec8,eax
   140008776:	test   eax,0xc6c3013d
   14000877b:	adc    BYTE PTR [rsi-0x3e],bh
   14000877e:	(bad)  
   14000877f:	rex.B (bad) 
   140008781:	iret   
   140008782:	xor    al,0x9a
   140008784:	in     eax,0x31
   140008786:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008787:	enter  0x809e,0x61
   14000878b:	movsxd ecx,DWORD PTR [rax]
   14000878d:	(bad)  
   14000878e:	loope  0x14000871f
   140008790:	and    BYTE PTR [rdi-0xd32e599],cl
   140008796:	fsub   DWORD PTR [rax+rax*8+0x6361809e]
   14000879d:	or     BYTE PTR [rdi],bh
   14000879f:	loope  0x140008730
   1400087a1:	and    BYTE PTR [rdi-0xd32e599],cl
   1400087a7:	cmp    BYTE PTR [rax+rsi*8+0x6361809e],dl
   1400087ae:	or     BYTE PTR [rdi],bh
   1400087b0:	loope  0x140008741
   1400087b2:	and    BYTE PTR [rdi-0xd32e599],cl
   1400087b8:	mov    eax,0xe030ee48
   1400087bd:	sbb    eax,0xe12030c7
   1400087c2:	xchg   edi,eax
   1400087c3:	fwait
   1400087c4:	lahf   
   1400087c5:	lock retf 
   1400087c7:	iret   
   1400087c8:	jrcxz  0x140008763
   1400087ca:	rex.RX int 0x3c
   1400087cd:	cmc    
   1400087ce:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400087cf:	pushf  
   1400087d0:	(bad)  
   1400087d1:	hlt    
   1400087d2:	xor    cl,BYTE PTR [rax+riz*2]
   1400087d5:	int3   
   1400087d6:	cli    
   1400087d7:	(bad)  
   1400087d8:	repz sar bh,cl
   1400087db:	scas   al,BYTE PTR es:[rdi]
   1400087dc:	(bad)  
   1400087dd:	and    eax,0x13f372fc
   1400087e2:	jle    0x1400087dd
   1400087e4:	jns    0x140008822
   1400087e6:	shr    DWORD PTR [rax-0x1d9865],cl
   1400087ec:	mov    edx,0x9dcb1fed
   1400087f1:	pop    rsi
   1400087f2:	(bad)  
   1400087f3:	or     al,0x3
   1400087f5:	cwde   
   1400087f6:	imul   edi,DWORD PTR [rcx],0x42
   1400087f9:	clc    
   1400087fa:	in     eax,0xe6
   1400087fc:	(bad)  
   1400087fd:	cld    
   1400087fe:	bnd repz js 0x1400087a8
   140008802:	shr    DWORD PTR [rdi+rcx*2],1
   140008805:	sbb    eax,ebp
   140008807:	mov    esp,0x18d86027
   14000880c:	ret    0xf84f
   14000880f:	and    ecx,eax
   140008811:	jrcxz  0x1400087ac
   140008813:	rex.RX mov bl,0x3c
   140008816:	add    DWORD PTR [rsi*4-0xcbcff7],esp
   14000881d:	rex.WB clc 
   14000881f:	push   0x4313efc2
   140008824:	clc    
   140008825:	or     DWORD PTR [rdi-0x4d],edi
   140008828:	sbb    al,0x53
   14000882a:	add    edi,0x2a0bcebc
   140008830:	sbb    DWORD PTR [rsi],eax
   140008832:	push   rax
   140008833:	adc    ecx,DWORD PTR [rsi+0x313efc24]
   140008839:	test   BYTE PTR [rdi+0x3895b7f0],bl
   14000883f:	jnp    0x1400087e7
   140008841:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008842:	test   BYTE PTR [rcx],0xf4
   140008845:	scas   eax,DWORD PTR es:[rdi]
   140008846:	jl     0x14000885e
   140008848:	cmp    al,0x8a
   14000884a:	lock sti 
   14000884c:	(bad)  
   14000884d:	adc    BYTE PTR [rsi-0x3e],bh
   140008850:	out    dx,eax
   140008851:	scas   al,BYTE PTR es:[rdi]
   140008852:	push   0xffffffffffffffad
   140008854:	or     ecx,ebx
   140008856:	(bad)  
   140008857:	(bad)  
   140008858:	mov    bh,0x90
   14000885a:	xchg   edx,eax
   14000885b:	fiadd  DWORD PTR [rax+rbp*8]
   14000885e:	pop    rdi
   14000885f:	(bad)  
   140008860:	js     0x14000889f
   140008862:	test   bh,bl
   140008864:	(bad)  
   140008865:	xchg   al,dh
   140008867:	adc    edi,DWORD PTR [rsi+0x6f]
   14000886a:	push   rbp
   14000886b:	outs   dx,DWORD PTR ds:[rsi]
   14000886c:	xor    al,0x21
   14000886e:	stos   DWORD PTR es:[rdi],eax
   14000886f:	adc    r12d,DWORD PTR [rax-0x7fb292b7]
   140008876:	lock sti 
   140008878:	(bad)  
   140008879:	adc    BYTE PTR [rsi-0x3e],bh
   14000887c:	out    dx,eax
   14000887d:	sub    eax,0xd452fc07
   140008882:	jno    0x14000880d
   140008884:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008885:	push   rdx
   140008886:	test   eax,0xdbecff6c
   14000888b:	or     al,0x20
   14000888d:	cld    
   14000888e:	xor    DWORD PTR ds:[rdi+rbx*4+0x5aabfbf0],eax
   140008896:	imul   ebx,DWORD PTR [rdx-0x613d2ffd],0xffffff88
   14000889d:	fs pop rcx
   14000889f:	retf   0x63da
   1400088a2:	jg     0x140008874
   1400088a4:	ds sbb eax,ecx
   1400088a7:	cs ret 0x13ef
   1400088ab:	rex.XB clc 
   1400088ad:	or     DWORD PTR [rdi+0x7b],edi
   1400088b0:	cmp    DWORD PTR [rsi],esp
   1400088b2:	add    DWORD PTR [rbp-0x24],esi
   1400088b5:	inc    BYTE PTR [rdi]
   1400088b7:	in     al,0x19
   1400088b9:	rcr    BYTE PTR [rdx+0x5b],0xa4
   1400088bd:	(bad)  
   1400088be:	ins    DWORD PTR es:[rdi],dx
   1400088bf:	push   rdi
   1400088c0:	and    dl,al
   1400088c2:	out    dx,eax
   1400088c3:	adc    esp,DWORD PTR [rbx+0x2571fc00]
   1400088c9:	and    bh,ah
   1400088cb:	sbb    eax,0xb80d31c9
   1400088d0:	jrcxz  0x1400088c8
   1400088d2:	(bad)  
   1400088d3:	and    bh,cl
   1400088d5:	add    BYTE PTR [rsi],ah
   1400088d7:	lods   eax,DWORD PTR ds:[rsi]
   1400088d8:	(bad)  
   1400088d9:	pop    rdx
   1400088da:	out    0x2,al
   1400088dc:	adc    BYTE PTR [rsi-0x61],bh
   1400088df:	sbb    dl,al
   1400088e1:	rex.WRXB clc 
   1400088e3:	or     ebx,0x31
   1400088e6:	(bad)  
   1400088e7:	(bad)  
   1400088e8:	push   rdx
   1400088e9:	rex.RX cdq 
   1400088eb:	mov    dl,0xc
   1400088ed:	(bad)  
   1400088ee:	retf   0xa1fa
   1400088f1:	test   eax,0xfbf0800f
   1400088f6:	(bad)  
   1400088f7:	adc    BYTE PTR [rsi-0x3e],bh
   1400088fa:	(bad)  
   1400088fb:	rex.WRX mov fs,WORD PTR [rcx]
   1400088fe:	shr    BYTE PTR [rcx],0xaf
   140008901:	repz ret 0x9648
   140008905:	add    DWORD PTR [rbp+rbp*4-0x186805e1],edx
   14000890c:	mov    ebp,cs
   14000890e:	or     DWORD PTR [r15+0x27e10c4f],edi
   140008915:	cld    
   140008916:	loope  0x14000896c
   140008918:	pop    rdi
   140008919:	retf   0x4739
   14000891c:	add    edx,ecx
   14000891e:	xor    cl,dl
   140008920:	xchg   ebp,eax
   140008921:	fiadd  WORD PTR [rdi]
   140008923:	add    BYTE PTR [rax],al
   140008925:	fwait
   140008926:	(bad)  
   140008927:	mov    ebp,0xfc250736
   14000892c:	rex.WX shr dil,0x79
   140008930:	or     eax,0x3cd55f84
   140008935:	jrcxz  0x14000896a
   140008937:	jns    0x140008920
   140008939:	and    DWORD PTR [rbp-0x6],esi
   14000893c:	add    BYTE PTR [rdx-0x5b],cl
   14000893f:	rcr    BYTE PTR [rsp+rbp*2],cl
   140008942:	mov    ebp,0x26175b92
   140008947:	pop    rbp
   140008948:	(bad)  
   140008949:	and    bh,ah
   14000894b:	test   BYTE PTR [rdi],bh
   14000894d:	(bad)  
   14000894e:	cmp    al,0x9e
   140008950:	imul   esi,esp,0xbfe573ca
   140008956:	fwait
   140008957:	or     al,0x60
   140008959:	(bad)  
   14000895a:	fs scas al,BYTE PTR es:[rdi]
   14000895c:	movsxd ecx,ecx
   14000895e:	pushf  
   14000895f:	pop    rcx
   140008960:	mov    al,0xe6
   140008962:	sub    QWORD PTR [rip+0x7e1383db],0xffffffffffffffb5        # 0x1be140d45
   14000896a:	loope  0x140008903
   14000896c:	popf   
   14000896d:	(bad)  
   14000896e:	hlt    
   14000896f:	(bad)  
   140008970:	xchg   edx,eax
   140008971:	repz imul edx,DWORD PTR [rsi-0x3073f2f9],0x34
   140008979:	or     eax,0xfa794a01
   14000897e:	add    esi,DWORD PTR [rdx+0xd]
   140008981:	loopne 0x1400089c0
   140008983:	jmp    0x14000890c
   140008985:	rcr    ebx,0x76
   140008988:	add    esp,DWORD PTR [rax]
   14000898a:	cld    
   14000898b:	test   bh,bl
   14000898d:	test   DWORD PTR [rbx],0xcb35f9c9
   140008993:	movsxd edi,esi
   140008995:	fisub  WORD PTR [rsi]
   140008997:	(bad)  
   140008998:	fwait
   140008999:	add    bh,ch
   14000899b:	mov    ecx,0x99202a9e
   1400089a0:	(bad)  
   1400089a1:	push   rax
   1400089a2:	mov    dh,0x7e
   1400089a4:	pop    rax
   1400089a5:	jmp    0x1400089af
   1400089a7:	and    al,0xfc
   1400089a9:	test   bh,bl
   1400089ab:	dec    DWORD PTR [rbx]
   1400089ad:	leave  
   1400089ae:	stc    
   1400089af:	xor    eax,0xdefe63cb
   1400089b4:	movabs ds:0xc000026a220400ea,al
   1400089bd:	(bad)  
   1400089be:	test   DWORD PTR [rdi-0x44],ecx
   1400089c1:	(bad)  
   1400089c2:	and    edi,esp
   1400089c4:	mov    dl,0xf3
   1400089c6:	enter  0x6be,0xa1
   1400089ca:	cmp    al,0xa1
   1400089cc:	mov    edi,0xb35f9c90
   1400089d1:	cmp    al,0xb6
   1400089d3:	fistp  WORD PTR [rbx-0x2b3f1435]
   1400089d9:	imul   eax,DWORD PTR [rdx],0xffffff98
   1400089dc:	popf   
   1400089dd:	adc    ch,BYTE PTR [rbx+0x17]
   1400089e0:	out    0x69,al
   1400089e2:	add    BYTE PTR [rdi+rbx*2-0x2826e192],al
   1400089e9:	and    BYTE PTR [rdi+riz*1-0xc6de80c],dl
   1400089f0:	imul   edx,DWORD PTR [rsi+0x737bf1c7],0x6e
   1400089f7:	add    ah,BYTE PTR [rdx]
   1400089f9:	stos   DWORD PTR es:[rdi],eax
   1400089fa:	add    edx,DWORD PTR [rax]
   1400089fc:	add    BYTE PTR [rdx-0x3a],bl
   1400089ff:	(bad)  
   140008a00:	cmp    dl,BYTE PTR [rcx+rbx*1-0x40]
   140008a04:	add    eax,DWORD PTR [rax]
   140008a06:	jo     0x140008a80
   140008a08:	fisttp DWORD PTR [rsi+rdi*8]
   140008a0b:	jmp    0x1400089a2
   140008a0d:	xchg   DWORD PTR [rip+0xffffffffa5454f17],esp        # 0xe545d92a
   140008a13:	fsubr  st(1),st
   140008a15:	shl    DWORD PTR [rdi+rbp*1-0x6a2f0d7f],1
   140008a1c:	loop   0x140008a4f
   140008a1e:	add    bl,ah
   140008a20:	(bad)  
   140008a21:	(bad)  
   140008a22:	mov    dl,0xcc
   140008a24:	mov    dl,0x65
   140008a26:	scas   eax,DWORD PTR es:[rdi]
   140008a27:	(bad)  
   140008a28:	cld    
   140008a29:	sar    dl,1
   140008a2b:	(bad)  
   140008a2c:	jl     0x140008aaa
   140008a2e:	sbb    al,0xf5
   140008a30:	jp     0x140008a8f
   140008a32:	jb     0x140008a25
   140008a34:	adc    al,0x95
   140008a36:	sub    eax,0x8c75ebd5
   140008a3b:	(bad)  
   140008a3c:	(bad)  
   140008a3d:	fisttp DWORD PTR [rdi]
   140008a3f:	rex.WB jmp 0x140008a42
   140008a42:	add    al,0xe4
   140008a44:	sbb    eax,DWORD PTR [rax-0x2f]
   140008a47:	(bad)  
   140008a48:	movabs eax,ds:0x25b2a29e2e48a952
   140008a51:	(bad)  
   140008a52:	xchg   dl,cl
   140008a54:	xor    cl,bl
   140008a56:	xchg   edi,eax
   140008a57:	push   0x0
   140008a59:	(bad)  
   140008a5a:	jle    0x1400089dc
   140008a5c:	mov    edx,DWORD PTR [rdi]
   140008a5e:	(bad)  
   140008a5f:	retf   0x9e2c
   140008a62:	movabs ds:0x80ffdb5243072732,al
   140008a6b:	cld    
   140008a6c:	ds add al,al
   140008a6f:	(bad)  
   140008a70:	(bad)  
   140008a72:	mov    ecx,0xde340bf4
   140008a77:	(bad)  
   140008a78:	mov    dh,0x9e
   140008a7a:	and    DWORD PTR [rbx+0x71544f53],esi
   140008a80:	jne    0x140008ade
   140008a82:	sub    DWORD PTR [rdx-0x30192639],ebx
   140008a88:	std    
   140008a89:	rex.RB sar BYTE PTR [r14],0x80
   140008a8d:	mov    eax,0x950878d6
   140008a92:	xchg   ebp,eax
   140008a93:	jo     0x140008a5c
   140008a95:	outs   dx,DWORD PTR ds:[rsi]
   140008a96:	add    al,0xc3
   140008a98:	ficomp WORD PTR [rdi-0x67]
   140008a9b:	mov    ebp,0x23f5fe8c
   140008aa0:	adc    DWORD PTR gs:[rdx+0x7c],0x1bbc515
   140008aa8:	fbstp  TBYTE PTR [rsi+rdi*2-0x678d2958]
   140008aaf:	test   al,0x3a
   140008ab1:	push   rdx
   140008ab2:	adc    dh,bh
   140008ab4:	ins    BYTE PTR es:[rdi],dx
   140008ab5:	in     eax,0x21
   140008ab7:	cld    
   140008ab8:	ret    0x30d7
   140008abb:	mov    eax,0x9dff4552
   140008ac0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008ac1:	(bad)  
   140008ac2:	(bad)  
   140008ac3:	fwait
   140008ac4:	pop    rsi
   140008ac5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008ac6:	mov    ecx,DWORD PTR [rdx-0x46]
   140008ac9:	add    DWORD PTR [rax+0x5dad14db],ebx
   140008acf:	cmc    
   140008ad0:	call   0xc325e62a
   140008ad5:	lock sub ecx,DWORD PTR [edi]
   140008ad9:	loope  0x140008aca
   140008adb:	call   0x13edd00fa
   140008ae0:	lods   eax,DWORD PTR ds:[rsi]
   140008ae1:	std    
   140008ae2:	call   0x1002e1783
   140008ae7:	pushf  
   140008ae8:	mov    ch,dl
   140008aea:	in     eax,dx
   140008aeb:	shr    BYTE PTR [rbx-0xb],0xfe
   140008aef:	mov    edx,DWORD PTR [rdi-0x33]
   140008af2:	cmp    esp,ecx
   140008af4:	test   BYTE PTR [rdi],bh
   140008af6:	pop    rbx
   140008af7:	jns    0x140008b01
   140008af9:	jg     0x140008ac2
   140008afb:	xlat   BYTE PTR ds:[rbx]
   140008afc:	mov    al,0x7d
   140008afe:	test   eax,0xda5c00c9
   140008b03:	rcr    BYTE PTR [rbp+0x58032a2b],cl
   140008b09:	sbb    ebp,DWORD PTR [rdx-0x5e895768]
   140008b0f:	cmp    ah,BYTE PTR [rdi]
   140008b11:	repnz rex.RX push rbx
   140008b14:	add    eax,0x21e6626e
   140008b19:	cld    
   140008b1a:	movabs ds:0x61a9dff435e1d41,al
   140008b23:	push   rdi
   140008b24:	stos   BYTE PTR es:[rdi],al
   140008b25:	imul   BYTE PTR [rdi-0x5b]
   140008b28:	(bad)  
   140008b29:	call   FWORD PTR [rcx-0x76]
   140008b2c:	mov    esp,0x9a380006
   140008b31:	add    DWORD PTR [rcx-0x33b23f5c],eax
   140008b37:	cmp    al,0x84
   140008b39:	pop    rdi
   140008b3a:	xor    al,0x48
   140008b3c:	ret    0x6c35
   140008b3f:	outs   dx,DWORD PTR ds:[rsi]
   140008b40:	scas   al,BYTE PTR es:[rdi]
   140008b41:	inc    BYTE PTR [rbx]
   140008b43:	imul   ebp,DWORD PTR [rdx+0x15439801],0xee7c176b
   140008b4d:	rex.WX sbb BYTE PTR [rbx],al
   140008b50:	push   rax
   140008b51:	loopne 0x140008b79
   140008b53:	data16 (bad) 
   140008b55:	ret    0x1a2f
   140008b58:	and    al,0xe9
   140008b5a:	sbb    ch,dh
   140008b5c:	pop    rsi
   140008b5d:	cld    
   140008b5e:	sar    dh,1
   140008b60:	mov    cl,0x28
   140008b62:	jnp    0x140008b5c
   140008b64:	iret   
   140008b65:	push   rdx
   140008b66:	push   rsp
   140008b67:	xor    eax,0x63d6c000
   140008b6c:	cmp    DWORD PTR [rcx-0x13],edx
   140008b6f:	rex.X mov bpl,0x16
   140008b72:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008b73:	sbb    DWORD PTR [rax+0x3ccc4dc0],esp
   140008b79:	test   BYTE PTR [rdi+0x34],bl
   140008b7c:	rex.W shl BYTE PTR [rip+0xffffffffa5ff54b8],cl        # 0xe5ffe03b
   140008b83:	idiv   esi
   140008b85:	pop    rbx
   140008b86:	mov    dl,dl
   140008b88:	add    BYTE PTR [rdx-0x343ad356],bl
   140008b8e:	sub    eax,0x521c9a2b
   140008b93:	loopne 0x140008bbb
   140008b95:	data16 (bad) 
   140008b97:	ret    0x1a2f
   140008b9a:	and    al,0xf1
   140008b9c:	sbb    dh,BYTE PTR [rsi+0x2d]
   140008b9f:	cld    
   140008ba0:	fidivr DWORD PTR [rcx+0x28]
   140008ba3:	xchg   edx,eax
   140008ba4:	(bad)  
   140008ba5:	(bad)  
   140008ba6:	adc    BYTE PTR [rcx-0x69aa67ff],ah
   140008bac:	adc    ebx,ebp
   140008bae:	mov    bl,0x7f
   140008bb0:	(bad)  
   140008bb1:	add    BYTE PTR [rdx],0x37
   140008bb4:	xor    ebx,esi
   140008bb6:	adc    BYTE PTR [rsi-0x2f],bh
   140008bb9:	and    cl,cl
   140008bbb:	xlat   BYTE PTR ds:[rbx]
   140008bbc:	mov    al,0xfd
   140008bbe:	not    BYTE PTR [rbp-0x5]
   140008bc1:	(bad)  
   140008bc2:	xchg   ecx,eax
   140008bc3:	test   al,0xaa
   140008bc5:	inc    DWORD PTR [rax-0x4c]
   140008bc8:	xor    eax,0x2931c000
   140008bcd:	test   al,0x32
   140008bcf:	fucomp st(5)
   140008bd1:	jb     0x140008b5d
   140008bd3:	add    dh,BYTE PTR [rdi]
   140008bd5:	xor    ebx,esi
   140008bd7:	adc    BYTE PTR [rsi-0x2f],bh
   140008bda:	and    cl,cl
   140008bdc:	xlat   BYTE PTR ds:[rbx]
   140008bdd:	mov    al,0x75
   140008bdf:	jns    0x140008c0b
   140008be1:	repnz leave 
   140008be3:	(bad)  
   140008be4:	jbe    0x140008c2b
   140008be6:	push   0x0
   140008be8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008be9:	push   rdx
   140008bea:	test   eax,0xc0bdb08
   140008bef:	fisubr WORD PTR [rbp+0xa016b38]
   140008bf5:	fadd   st(4),st
   140008bf7:	int3   
   140008bf8:	and    esi,DWORD PTR [rdx+0x1]
   140008bfb:	test   BYTE PTR [rdi],bh
   140008bfd:	movabs ds:0x933fc5a6c5bdf86b,al
   140008c06:	es rex.XB xchg r9d,eax
   140008c09:	sub    edx,ebp
   140008c0b:	sbb    al,BYTE PTR [rax]
   140008c0d:	loopne 0x140008c27
   140008c0f:	or     eax,0x9d5a2fa8
   140008c14:	sub    DWORD PTR [rcx],0x3cb74585
   140008c1a:	loope  0x140008c4b
   140008c1c:	xor    al,0x47
   140008c1f:	je     0x140008c2e
   140008c21:	stc    
   140008c22:	(bad)  
   140008c23:	(bad)  
   140008c24:	rex.WXB out dx,eax
   140008c26:	mov    edi,0x8a509640
   140008c2b:	ret    
   140008c2c:	add    BYTE PTR [rsi-0x4a],bl
   140008c2f:	jg     0x140008c61
   140008c31:	xchg   BYTE PTR [rbx+rdx*2],al
   140008c34:	or     cl,BYTE PTR [rbx+0x5fc2796e]
   140008c3a:	add    cl,ah
   140008c3c:	(bad)  
   140008c3d:	lock sbb ch,dh
   140008c40:	pop    rsi
   140008c41:	ins    BYTE PTR es:[rdi],dx
   140008c42:	pop    rcx
   140008c43:	cli    
   140008c44:	sti    
   140008c45:	mov    dl,0xdb
   140008c47:	jns    0x140008c7b
   140008c49:	adc    eax,0x4a9401b9
   140008c4e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008c4f:	rex.WB fcom DWORD PTR [r14+0x31]
   140008c53:	mov    ch,0x1f
   140008c55:	or     eax,0xa0dd2908
   140008c5a:	and    al,0xfc
   140008c5c:	ficomp WORD PTR [rdi+0x6a]
   140008c5f:	or     al,0x3f
   140008c61:	add    ah,ch
   140008c63:	pop    rdx
   140008c64:	mov    eax,0x3658ff64
   140008c69:	(bad)  [rcx+0xd47154]
   140008c6f:	add    BYTE PTR [rbx+0x396b5593],bl
   140008c75:	sbb    DWORD PTR [rcx+0xdd21e81],0x10f3954a
   140008c7f:	dec    BYTE PTR [rax-0x51]
   140008c82:	(bad)  
   140008c83:	sti    
   140008c84:	shr    BYTE PTR [rdi-0x63],cl
   140008c87:	popf   
   140008c88:	jg     0x140008c1b
   140008c8a:	(bad)  
   140008c8b:	std    
   140008c8c:	sbb    DWORD PTR [rax+0x19d9c00c],0xa016a528
   140008c96:	xor    ch,BYTE PTR [rdx+rdi*4]
   140008c99:	in     eax,0x21
   140008c9b:	cld    
   140008c9c:	xchg   ecx,eax
   140008c9d:	pop    rdi
   140008c9e:	and    ebx,0xffffffe9
   140008ca1:	(bad)  
   140008ca2:	jns    0x140008c8b
   140008ca4:	lahf   
   140008ca5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008ca6:	mov    eax,0x7000006a
   140008cab:	retf   0xa1fa
   140008cae:	xor    bl,ch
   140008cb0:	in     eax,dx
   140008cb1:	jl     0x140008c86
   140008cb3:	imul   edi,DWORD PTR [rax],0x2a4b0ca9
   140008cb9:	repz rex.W mov ss,WORD PTR [rcx]
   140008cbd:	sub    ch,BYTE PTR [rbx]
   140008cbf:	mov    ebx,0xa9dff7f0
   140008cc4:	(bad)  
   140008cc5:	jmp    0x140008d39
   140008cc7:	ror    ebx,cl
   140008cc9:	jle    0x140008d1a
   140008ccb:	jns    0x140008c6a
   140008ccd:	sub    ebx,DWORD PTR [rbx+0x71]
   140008cd0:	sbb    al,al
   140008cd2:	rex.WXB mov r8b,0xed
   140008cd5:	adc    esi,DWORD PTR [rax-0x1a]
   140008cd8:	jl     0x140008c89
   140008cda:	pop    rax
   140008cdb:	sub    DWORD PTR [rcx+0x1e5ba2c3],ecx
   140008ce1:	leave  
   140008ce2:	xor    DWORD PTR [rdx+0x65],eax
   140008ce5:	gs (bad) 
   140008ce7:	jle    0x140008ce9
   140008ce9:	clc    
   140008cea:	ret    0xfbfc
   140008ced:	test   BYTE PTR [rdi-0x76a7cf8d],0x45
   140008cf4:	mov    cl,0x19
   140008cf6:	sbb    bl,0x2
   140008cf9:	movabs eax,ds:0x8f2dd161c480b5d0
   140008d02:	in     al,0x18
   140008d04:	movabs eax,ds:0xd8b99dff7f0db2b2
   140008d0d:	(bad)  
   140008d0e:	(bad)  
   140008d0f:	mov    eax,0x1ace29
   140008d14:	add    BYTE PTR [rax+rsi*4+0xb55087f],bl
   140008d1b:	rex.W sbb al,0x16
   140008d1e:	(bad)  
   140008d20:	rex.W mov ss,WORD PTR [rcx]
   140008d23:	sub    ch,BYTE PTR [rbx]
   140008d25:	fcomi  st,st(0)
   140008d27:	add    ebp,DWORD PTR [rip+0xffffffffc1c07f4f]        # 0x101c10c7c
   140008d2d:	rex.W (bad) 
   140008d2f:	mov    dl,ch
   140008d31:	add    ah,cl
   140008d33:	(bad)  
   140008d34:	lea    edx,[rcx]
   140008d36:	jmp    0x140008d2b
   140008d38:	(bad)
   140008d3b:	mov    dh,0x89
   140008d3d:	rex.B
   140008d3e:	ds rex.WX sbb al,0x96
   140008d42:	or     al,0xe5
   140008d44:	and    esp,edi
   140008d46:	mov    cl,0x5d
   140008d48:	rex.XB jle 0x140008dc0
   140008d4b:	add    DWORD PTR [rbx],edi
   140008d4d:	xchg   esi,eax
   140008d4e:	pop    rdx
   140008d4f:	out    0xfd,al
   140008d51:	rex.WRXB or r12b,BYTE PTR [r15+r10*1+0x56]
   140008d56:	fdiv   QWORD PTR [rip+0x70e6c000]        # 0x1b0e74d5c
   140008d5c:	cmc    
   140008d5d:	(bad)
   140008d60:	(bad)  
   140008d61:	mov    ah,0x19
   140008d63:	adc    DWORD PTR [rax+0x19],edx
   140008d66:	(bad)  
   140008d67:	(bad)  
   140008d69:	adc    dh,bh
   140008d6b:	clc    
   140008d6c:	scas   al,BYTE PTR es:[rdi]
   140008d6d:	movabs eax,ds:0x1637c8cb85eec0d1
   140008d76:	in     eax,dx
   140008d77:	rex.RXB movsxd r15d,DWORD PTR [r13-0x6]
   140008d7b:	add    ecx,DWORD PTR [rcx]
   140008d7d:	sbb    BYTE PTR [rax-0x390fe94d],al
   140008d83:	in     eax,0x1e
   140008d85:	out    dx,eax
   140008d86:	pop    rdx
   140008d87:	or     dl,0xb0
   140008d8a:	call   0x107f11525
   140008d8f:	or     bh,BYTE PTR [rdi-0x42]
   140008d92:	mov    cl,0xe8
   140008d94:	sbb    al,0xfa
   140008d96:	mov    edi,ebp
   140008d98:	jmp    0x14353b1ac
   140008d9d:	add    BYTE PTR [rsi*4+0x5c17d380],bl
   140008da4:	cli    
   140008da5:	add    dl,BYTE PTR [rsi+rax*4-0x7b]
   140008da9:	jns    0x140008daf
   140008dab:	repnz sti 
   140008dad:	jl     0x140008d48
   140008daf:	xor    eax,edi
   140008db1:	add    DWORD PTR [rax-0x31],esp
   140008db4:	cld    
   140008db5:	stc    
   140008db6:	(bad)  
   140008db7:	lahf   
   140008db8:	inc    BYTE PTR [rax+0x42]
   140008dbb:	(bad)  
   140008dbc:	loopne 0x140008d6a
   140008dbe:	add    eax,0x34f72f14
   140008dc3:	(bad)
   140008dc7:	mov    ebp,DWORD PTR [rsi+0x79]
   140008dca:	test   dl,dl
   140008dcc:	adc    BYTE PTR [rsi+0xb],bh
   140008dcf:	(bad)  
   140008dd0:	(bad)  
   140008dd1:	(bad)  
   140008dd2:	(bad)  
   140008dd3:	adc    cl,BYTE PTR [rdi+0x7f]
   140008dd6:	and    BYTE PTR [rcx+0x35e0001a],bh
   140008ddc:	and    ah,BYTE PTR [rax-0x1a45d3e5]
   140008de2:	adc    DWORD PTR [rdx+0x43],ecx
   140008de5:	clc    
   140008de6:	in     eax,dx
   140008de7:	scas   eax,DWORD PTR es:[rdi]
   140008de8:	(bad)  
   140008de9:	rex.WRXB movabs r10,0xb59c00cc4aedfe7
   140008df3:	cmp    BYTE PTR [rdi+0x25],dh
   140008df6:	(bad)
   140008dfa:	in     eax,0xa4
   140008dfc:	adc    al,0x16
   140008dfe:	(bad)  
   140008e00:	or     BYTE PTR [rbp-0x78903df],ah
   140008e06:	sti    
   140008e07:	push   rdi
   140008e08:	imul   ecx,esi,0x55
   140008e0b:	jg     0x140008d96
   140008e0d:	cmp    eax,0x6b6481fd
   140008e12:	add    BYTE PTR [rax-0x41b1063d],al
   140008e18:	(bad)  
   140008e19:	out    0x72,eax
   140008e1b:	rex.WX
   140008e1c:	rex.WX (bad) 
   140008e1e:	shr    DWORD PTR [rip+0xffffffffc21a508f],1        # 0x1021adeb3
   140008e24:	outs   dx,DWORD PTR ds:[rsi]
   140008e25:	xchg   DWORD PTR [rdi],ebx
   140008e27:	add    dh,dh
   140008e29:	fidivr WORD PTR [rbx+rbp*8]
   140008e2c:	cmp    al,0x23
   140008e2e:	mov    cl,0xa7
   140008e30:	(bad)  
   140008e31:	nop
   140008e32:	mov    al,0x1
   140008e34:	cwde   
   140008e35:	(bad)  
   140008e36:	mov    bh,0xf6
   140008e38:	or     ebp,DWORD PTR [rax-0x49c488b4]
   140008e3e:	or     eax,0xba2c294b
   140008e43:	in     eax,0x11
   140008e45:	rex.WX
   140008e46:	rex.XB clc 
   140008e48:	popf   
   140008e49:	lock outs dx,DWORD PTR ds:[rsi]
   140008e4b:	pop    rbp
   140008e4c:	sahf   
   140008e4d:	jb     0x140008e1d
   140008e4f:	stc    
   140008e50:	(bad)  
   140008e51:	xchg   ecx,eax
   140008e52:	in     al,0xd3
   140008e54:	(bad)  
   140008e55:	movabs rsi,0x6b7c9c08d6380006
   140008e5f:	cmp    ecx,0x53
   140008e62:	rex.WX (bad) 
   140008e64:	shr    DWORD PTR [rip+0xffffffffc21a508f],1        # 0x1021adef9
   140008e6a:	out    dx,eax
   140008e6b:	test   BYTE PTR [rdi],bl
   140008e6d:	add    dh,dh
   140008e6f:	fisubr WORD PTR [rdx+0x7a]
   140008e72:	cli    
   140008e73:	(bad)  
   140008e74:	cmp    ah,bh
   140008e76:	fisttp WORD PTR [rbx-0x77]
   140008e79:	sbb    eax,DWORD PTR [rax-0x528610c7]
   140008e7f:	(bad)  
   140008e80:	push   rax
   140008e81:	lods   eax,DWORD PTR ds:[rsi]
   140008e82:	add    eax,0x56141c98
   140008e87:	mov    edx,0xc5f84941
   140008e8c:	(bad)  
   140008e8d:	adc    al,BYTE PTR [rdi+rdi*2-0xbda3d29]
   140008e94:	fild   QWORD PTR [rcx-0x7762f027]
   140008e9a:	jae    0x140008e6a
   140008e9c:	mov    edi,0x371297
   140008ea1:	add    BYTE PTR [rax],ch
   140008ea3:	xchg   ebp,eax
   140008ea4:	rex.WX (bad) 
   140008ea6:	shl    DWORD PTR [rsi+0xbe9c05f],0xbd
   140008ead:	test   al,0x2f
   140008eaf:	mov    DWORD PTR [rdi+rcx*2+0x41ba45d0],edi
   140008eb6:	rex.WB clc 
   140008eb8:	(bad)
   140008ebb:	test   BYTE PTR [rdi],bh
   140008ebd:	fistp  WORD PTR [rax-0x3c]
   140008ec0:	sahf   
   140008ec1:	stc    
   140008ec2:	repz test BYTE PTR [rbx+0x63],0xe6
   140008ec7:	cmp    eax,0x3094b89f
   140008ecc:	add    BYTE PTR [rbx+0x47],dl
   140008ecf:	lods   eax,DWORD PTR ds:[rsi]
   140008ed0:	(bad)  
   140008ed1:	(bad)  
   140008ed2:	mov    edi,DWORD PTR [rcx]
   140008ed4:	mov    esp,0x875baefa
   140008ed9:	(bad)  
   140008eda:	jmp    0x157e1b3e6
   140008ee0:	or     ecx,DWORD PTR [rdx+0x10]
   140008ee3:	jle    0x140008ee5
   140008ee5:	mov    eax,0x39ce7eaf
   140008eea:	jmp    0x1294147d6
   140008eef:	xchg   ecx,eax
   140008ef0:	sbb    QWORD PTR [rbx],rax
   140008ef3:	xor    bh,bl
   140008ef5:	jge    0x140008f65
   140008ef7:	pop    rbx
   140008ef8:	cs fsubr st(3),st
   140008efb:	icebp  
   140008efc:	(bad)  
   140008efd:	add    DWORD PTR [rax-0x3db5f22e],0x3094162f
   140008f07:	cld    
   140008f08:	pop    rbx
   140008f09:	xchg   edi,eax
   140008f0a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008f0b:	pushf  
   140008f0c:	ret    
   140008f0d:	jle    0x140008f54
   140008f0f:	repz pop rsi
   140008f11:	push   rdi
   140008f12:	rex.X retf 0x8018
   140008f16:	test   eax,0x10ed70e3
   140008f1b:	or     al,0x29
   140008f1d:	frstor [rax+0x4162fc24]
   140008f23:	or     ebx,eax
   140008f25:	(bad)  
   140008f27:	jbe    0x140008f25
   140008f29:	sub    ebx,esi
   140008f2b:	hlt    
   140008f2c:	(bad)  
   140008f2d:	adc    al,0x33
   140008f2f:	add    bh,ah
   140008f31:	mov    al,0x60
   140008f33:	mov    ch,0xd6
   140008f35:	test   DWORD PTR [rbx],esi
   140008f37:	(bad)  
   140008f38:	rex.X
   140008f39:	ss add eax,0xf0928374
   140008f3f:	mov    eax,DWORD PTR [rip+0xffffffff9eff0029]        # 0xdeff8f6e
   140008f45:	stc    
   140008f46:	rep outs dx,BYTE PTR ds:[rsi]
   140008f48:	sbb    eax,0x5902937f
   140008f4d:	and    dl,BYTE PTR [rbx-0x53fff9ae]
   140008f53:	jne    0x140008f5d
   140008f55:	mov    ds,WORD PTR [rcx-0x61]
   140008f58:	rex.WRXB pop r15
   140008f5a:	call   0x1004d5424
   140008f5f:	retf   
   140008f60:	(bad)  
   140008f61:	or     eax,0x162fc24a
   140008f66:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008f67:	add    ah,bh
   140008f69:	sub    DWORD PTR [rbx],0x55
   140008f6c:	out    0x94,eax
   140008f6e:	pop    rdi
   140008f6f:	gs cmp bh,dh
   140008f72:	in     al,dx
   140008f73:	push   rdx
   140008f74:	(bad)  
   140008f75:	add    BYTE PTR [rbp+rbx*1-0x4b],cl
   140008f79:	jg     0x140008f73
   140008f7b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008f7c:	mov    bh,0xfa
   140008f7e:	fild   DWORD PTR [rdi-0x18]
   140008f81:	(bad)  
   140008f82:	and    eax,0x520b17e1
   140008f87:	add    BYTE PTR [rsi+0x0],bh
   140008f8a:	clc    
   140008f8b:	shr    BYTE PTR [rbp+0x477f1996],cl
   140008f91:	(bad)  
   140008f93:	rex.WXB pop r10
   140008f95:	rex.WX sbb al,BYTE PTR [rax-0x57]
   140008f99:	push   rsp
   140008f9a:	sbb    al,BYTE PTR [rbx+0x513029ad]
   140008fa0:	ins    DWORD PTR es:[rdi],dx
   140008fa1:	rcl    DWORD PTR [rax+rdx*8],cl
   140008fa4:	or     eax,0x162fc24a
   140008fa9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008faa:	or     ah,bh
   140008fac:	jnp    0x140008f94
   140008fae:	iret   
   140008faf:	movsxd esi,DWORD PTR [rax-0x5b]
   140008fb2:	push   0x3f
   140008fb4:	je     0x140008f78
   140008fb6:	mov    esp,0x929395a7
   140008fbb:	(bad)  
   140008fbc:	add    BYTE PTR [rax],al
   140008fbe:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008fbf:	push   rdx
   140008fc0:	jmp    0x14a69943e
   140008fc5:	call   0x157e1b4d0
   140008fca:	or     edx,DWORD PTR [rdx+0x4]
   140008fcd:	jle    0x140008f5e
   140008fcf:	stos   BYTE PTR es:[rdi],al
   140008fd0:	push   rbx
   140008fd2:	add    bl,BYTE PTR [rcx+0x6b29162]
   140008fd8:	(bad)  
   140008fd9:	stos   BYTE PTR es:[rdi],al
   140008fda:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008fdb:	sub    eax,edx
   140008fdd:	xor    al,0x41
   140008fdf:	rex.W (bad) 
   140008fe1:	sub    BYTE PTR [rcx],cl
   140008fe3:	mov    edi,0xf0229058
   140008fe8:	out    0x1b,eax
   140008fea:	mov    ebp,DWORD PTR [rcx+0x525bfaa9]
   140008ff0:	fiadd  DWORD PTR [rax]
   140008ff2:	fcomp  QWORD PTR [rdx+0x7bb6b02]
   140008ff8:	jmp    0x157e1b503
   140008ffd:	or     edx,DWORD PTR [rdx+0x4]
   140009000:	jle    0x140009022
   140009002:	pop    rbp
   140009003:	push   rbp
   140009004:	jg     0x140009051
   140009006:	rex.WX sbb rax,QWORD PTR [rax]
   140009009:	rcr    dl,1
   14000900b:	adc    al,0x28
   14000900d:	pop    rsi
   14000900e:	out    dx,al
   14000900f:	rex.RB
   140009010:	gs retf 0x826b
   140009014:	push   rax
   140009015:	rex.WX movabs rax,ds:0xf020fe115f7e1a4c
   14000901f:	outs   dx,DWORD PTR ds:[rsi]
   140009020:	pop    rbp
   140009021:	sahf   
   140009022:	jb     0x140009012
   140009024:	repnz movabs ds:0xea6006f292dfd574,eax
   14000902e:	sub    BYTE PTR [rbx+rdx*1-0x7c],ch
   140009032:	pop    rsi
   140009033:	clc    
   140009034:	pop    rcx
   140009035:	mov    edi,0x94815acb
   14000903a:	rex.X
   14000903b:	rex.WB clc 
   14000903d:	vunpcklps xmm0,xmm15,XMMWORD PTR [rdx-0x3ba720c1]
   140009045:	(bad)  
   140009046:	sbb    edi,DWORD PTR [rdi]
   140009048:	mov    ch,0x1f
   14000904a:	(bad)  
   14000904b:	and    edx,0x55
   14000904e:	jg     0x14000909b
   140009050:	test   eax,0x53670030
   140009055:	movabs al,ds:0xd0fb33f0bc394be
   14000905e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000905f:	adc    al,0x4a
   140009061:	ret    0x162f
   140009064:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009065:	adc    ah,bh
   140009067:	add    BYTE PTR [rax+0x5b4fc6ff],dh
   14000906d:	ss clc 
   14000906f:	push   rsp
   140009070:	mov    ebp,0x15296fea
   140009075:	(bad)  
   140009076:	add    BYTE PTR [rbp+rcx*2+0x2b5b5a10],ch
   14000907d:	push   rax
   14000907e:	cdq    
   14000907f:	out    dx,al
   140009080:	(bad)  
   140009081:	cdq    
   140009082:	pop    rdi
   140009083:	cmc    
   140009084:	and    DWORD PTR [rbp-0x4e81edb0],esi
   14000908a:	and    ch,al
   14000908c:	loopne 0x14000906d
   14000908e:	xor    edi,DWORD PTR [rdi-0x22]
   140009091:	mov    ecx,0xc55147c9
   140009096:	or     DWORD PTR [rdi],edi
   140009098:	pop    rsi
   140009099:	rex.WX lea rax,[rcx]
   14000909c:	cwde   
   14000909d:	cmp    cl,BYTE PTR [rdx]
   14000909f:	(bad)  
   1400090a0:	mov    dl,0xe1
   1400090a2:	retf   0x5e74
   1400090a5:	pop    rsi
   1400090a6:	jmp    0x137e01204
   1400090ab:	out    0x26,al
   1400090ad:	cld    
   1400090ae:	rex.B loope 0x140009090
   1400090b1:	mov    edx,0xf21ce53c
   1400090b6:	rex.R
   1400090b7:	rex.R
   1400090b8:	rex.WX stos BYTE PTR es:[rdi],al
   1400090ba:	(bad)  
   1400090bb:	xchg   esi,eax
   1400090bc:	push   rdx
   1400090bd:	gs add dh,ah
   1400090c0:	(bad)  
   1400090c1:	or     cl,BYTE PTR [rdi-0x28]
   1400090c4:	(bad)  
   1400090c5:	mov    ecx,0x880807f7
   1400090ca:	lock jnp 0x14000912c
   1400090cd:	add    esp,ecx
   1400090cf:	outs   dx,DWORD PTR ds:[rsi]
   1400090d0:	xchg   ecx,eax
   1400090d1:	rex.WXB movabs r11,0x308f9361509e001f
   1400090db:	rex.WX xchg rbp,rax
   1400090dd:	add    DWORD PTR [rax],eax
   1400090df:	imul   edi,ebp,0x1
   1400090e2:	imul   ebp,DWORD PTR [rbx],0xffffffaa
   1400090e5:	(bad)  
   1400090e6:	cmp    QWORD PTR [r15+r14*8],rdi
   1400090ea:	ret    
   1400090eb:	or     esi,0xdefc250a
   1400090f1:	xlat   BYTE PTR ds:[rbx]
   1400090f2:	rex clc 
   1400090f4:	pop    rbp
   1400090f5:	cmc    
   1400090f6:	jo     0x1400090e5
   1400090f8:	je     0x1400090c5
   1400090fa:	sbb    bh,bh
   1400090fc:	mov    ah,0xb4
   1400090fe:	sti    
   1400090ff:	in     eax,dx
   140009100:	rex.WX popf 
   140009102:	add    DWORD PTR [rax],eax
   140009104:	lods   eax,DWORD PTR ds:[rsi]
   140009105:	std    
   140009106:	add    DWORD PTR [rbx],edx
   140009108:	xor    ebx,ebp
   14000910a:	cmp    cl,bh
   14000910c:	repz add bl,ch
   14000910f:	add    eax,0x7df844dc
   140009114:	(bad)  
   140009115:	rex.R
   140009116:	repnz or ah,al
   140009119:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000911a:	or     al,0xfe
   14000911c:	mov    ebp,0xc73aceb7
   140009121:	sti    
   140009122:	push   rbx
   140009123:	(bad)  
   140009124:	out    dx,al
   140009125:	mov    bh,0x2b
   140009127:	xchg   ebp,eax
   140009128:	(bad)  
   140009129:	(bad)  
   14000912a:	(bad)  
   14000912b:	sub    BYTE PTR [rbx+rsi*8+0x3],ch
   14000912f:	(bad)  
   140009130:	pop    rbp
   140009131:	jmp    0x1612c4af7
   140009136:	not    DWORD PTR [rdx]
   140009138:	and    al,0xfc
   14000913a:	xor    DWORD PTR ds:[rdx],esp
   14000913d:	jns    0x140009143
   14000913f:	(bad)
   140009144:	rex.WXB adc rax,0x631f06e7
   14000914a:	rex.W pop rcx
   14000914c:	mov    ebx,0x1ad4aedf
   140009151:	sbb    cl,0xd6
   140009154:	push   0xffffffffffffff9a
   140009156:	(bad)  
   140009157:	jo     0x14000914b
   140009159:	out    0xfd,eax
   14000915b:	cwde   
   14000915c:	cwde   
   14000915d:	or     DWORD PTR [rax-0x81eef75],edi
   140009163:	mov    DWORD PTR [rcx],edx
   140009165:	leave  
   140009166:	and    edx,DWORD PTR [rax]
   140009168:	xchg   ebx,eax
   140009169:	xor    bh,al
   14000916b:	(bad)  
   14000916c:	push   rdi
   14000916d:	stos   BYTE PTR es:[rdi],al
   14000916e:	(bad)  
   14000916f:	jge    0x14000916e
   140009171:	out    0x0,eax
   140009173:	sbb    al,0x4d
   140009175:	pop    rbx
   140009176:	mov    ebx,0x1ad4aedf
   14000917b:	add    BYTE PTR [rax-0x1b2fe02a],dh
   140009181:	mov    esi,0xa070fdcf
   140009186:	stc    
   140009187:	cmp    eax,0xfc226e83
   14000918c:	xor    DWORD PTR ds:[rdx],esp
   14000918f:	jns    0x140009195
   140009191:	(bad)
   140009196:	push   0xd
   140009198:	(bad)  
   14000919a:	rex.WRX cmp r9,QWORD PTR [rdi]
   14000919d:	(bad)  
   14000919e:	movsxd r15,DWORD PTR [r11+0x1b54aedf]
   1400091a5:	add    BYTE PTR [rax],al
   1400091a7:	xchg   esp,eax
   1400091a8:	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1400091aa:	and    bl,BYTE PTR [rsi+riz*1+0x9]
   1400091ae:	jns    0x14000913e
   1400091b0:	or     al,0x10
   1400091b2:	jle    0x140009153
   1400091b4:	sbb    BYTE PTR [rcx+0x2931023c],dl
   1400091ba:	sbb    edi,0xffffffe8
   1400091bd:	icebp  
   1400091be:	dec    DWORD PTR [rcx-0x5d609b25]
   1400091c4:	push   rdi
   1400091c5:	rex.WR pop rdx
   1400091c7:	xchg   esp,eax
   1400091c8:	jp     0x1400091cd
   1400091ca:	add    dh,dl
   1400091cc:	(bad)  
   1400091cd:	or     ecx,DWORD PTR [rax+rbx*2-0x4599d861]
   1400091d4:	fnsave [rdi]
   1400091d6:	adc    DWORD PTR [rcx],esp
   1400091d8:	cld    
   1400091d9:	xor    DWORD PTR ds:[rdx],esp
   1400091dc:	jns    0x1400091e2
   1400091de:	(bad)
   1400091e3:	jl     0x1400091ce
   1400091e5:	data16 rex.WXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400091e8:	fisttp WORD PTR [rax+0x1a]
   1400091eb:	out    0xf9,al
   1400091ed:	(bad)  
   1400091ee:	xchg   ecx,eax
   1400091ef:	(bad)  
   1400091f0:	(bad)  
   1400091f1:	(bad)  
   1400091f2:	(bad)  
   1400091f3:	cmp    BYTE PTR [rbp+rbx*4-0x7e],ch
   1400091f7:	movabs ds:0x725f840323cdf2d7,eax
   140009200:	(bad)  
   140009201:	leave  
   140009202:	mov    al,r10b
   140009205:	mov    edi,0x6c59d6f7
   14000920a:	mov    edi,0xa87ed57d
   14000920f:	imul   ebx,DWORD PTR [rax],0xc6d2ed3a
   140009215:	add    ah,cl
   140009217:	mov    ds,WORD PTR [rax+0x14eb6147]
   14000921d:	pop    rsp
   14000921e:	sbb    ebx,DWORD PTR [rcx]
   140009220:	and    ah,bh
   140009222:	xchg   edx,eax
   140009223:	repz rex.W (bad) 
   140009226:	push   rdx
   140009227:	adc    al,0x7e
   140009229:	xchg   edi,eax
   14000922a:	(bad)  
   14000922b:	(bad)  
   14000922c:	cmp    DWORD PTR [rax],eax
   14000922e:	(bad)  
   14000922f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009230:	mov    ecx,0x6d29cfd3
   140009235:	or     al,0x0
   140009237:	jo     0x140009270
   140009239:	adc    DWORD PTR [rbx-0x463810c1],0x786dc8f
   140009243:	or     DWORD PTR [rdi+0x41c91e58],edi
   140009249:	or     al,bl
   14000924b:	out    dx,eax
   14000924c:	shl    bl,cl
   14000924e:	scas   eax,DWORD PTR es:[rdi]
   14000924f:	adc    eax,0x66680fc
   140009254:	add    BYTE PTR [rbp+rcx*4+0x174d340c],ch
   14000925b:	outs   dx,BYTE PTR ds:[rsi]
   14000925c:	sbb    eax,0x62fc241e
   140009261:	jns    0x140009287
   140009263:	(bad)  
   140009264:	sub    DWORD PTR [rdx],ecx
   140009266:	mov    edi,0x601f70cb
   14000926b:	rex.WR
   14000926c:	repz rex.WRB jne 0x1400091ff
   140009270:	mov    edi,0x33b49b
   140009275:	(bad)  
   140009276:	in     eax,dx
   140009277:	sub    eax,0x83c3cd43
   14000927c:	(bad)  
   14000927d:	sbb    dh,BYTE PTR [rax]
   14000927f:	rex.WRB xor r8b,0x8b
   140009283:	in     eax,0x91
   140009285:	sbb    al,0xa4
   140009287:	xor    ah,bh
   140009289:	(bad)  
   14000928a:	ret    
   14000928b:	jge    0x1400092f2
   14000928d:	sub    esp,0x34b4bca
   140009293:	add    BYTE PTR [rax+0x234a952],al
   140009299:	out    0x9a,eax
   14000929b:	xor    DWORD PTR [rip+0xffffffffc2249013],0x38a4162f        # 0x1022522b8
   1400092a5:	cld    
   1400092a6:	cs jae 0x1400092a5
   1400092a9:	rex.RXB add al,0xb2
   1400092ac:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400092ad:	rex.X ficomp DWORD PTR [rdx]
   1400092b0:	add    BYTE PTR [rax-0x3b9f994a],dh
   1400092b6:	cli    
   1400092b7:	pop    rsp
   1400092b8:	pop    rdi
   1400092b9:	retf   0x85e1
   1400092bc:	(bad)  
   1400092bd:	(bad)  
   1400092be:	shl    BYTE PTR [rbp+0xd33d07a],cl
   1400092c4:	loope  0x1400092bd
   1400092c6:	vpshlb ymm11,[r15+0x75],xmm13
   1400092cc:	sbb    eax,0xeb491feb
   1400092d1:	sbb    al,0xff
   1400092d3:	movabs al,ds:0x1d2a54a00000dad2
   1400092dc:	test   ebp,ecx
   1400092de:	add    al,0xaa
   1400092e0:	mov    ch,0x2e
   1400092e2:	cmp    al,0xf7
   1400092e4:	movabs ds:0x520b17e100999d8d,eax
   1400092ed:	sbb    dh,bh
   1400092ef:	xchg   DWORD PTR [rdi-0x64],ebp
   1400092f2:	rex.RX jmp FWORD PTR [rdx-0x2d]
   1400092f6:	imul   edi,DWORD PTR [rsi+rax*2+0x6b477bcc],0x69
   1400092fe:	outs   dx,DWORD PTR ds:[rsi]
   1400092ff:	add    BYTE PTR [rax-0x55],al
   140009302:	or     DWORD PTR [rsp+rcx*8+0x74],ecx
   140009306:	mov    ebx,DWORD PTR [rbx+0xb17e100]
   14000930c:	push   rdx
   14000930d:	sbb    al,0x7e
   14000930f:	xchg   edi,eax
   140009310:	mov    DWORD PTR [rsi],edi
   140009312:	fcmovb st,st(3)
   140009314:	pcmpgtb mm0,mm4
   140009317:	add    BYTE PTR [rbp+rsi*1+0x4d],cl
   14000931b:	adc    al,0x12
   14000931d:	xor    al,BYTE PTR [rcx]
   14000931f:	ret    0x162f
   140009322:	xchg   esp,eax
   140009323:	cs clc 
   140009325:	mov    ch,0x9a
   140009327:	call   0x17199e1ff
   14000932c:	add    bl,bl
   14000932e:	sbb    al,0x1
   140009330:	xor    DWORD PTR [rbx],edx
   140009332:	and    ah,bh
   140009334:	(bad)  
   140009336:	jmp    0xf1bbf2be
   14000933b:	jle    0x14000937c
   14000933d:	mov    BYTE PTR gs:[rax],0x80
   140009341:	(bad)  
   140009342:	rex.WR xor al,0x8b
   140009346:	add    eax,0x95e57e11
   14000934b:	sub    DWORD PTR [rbx],eax
   14000934d:	add    BYTE PTR [rsp+rcx*2],al
   140009350:	xor    al,0x8b
   140009353:	add    eax,0x2854fe11
   140009358:	jae    0x140009360
   14000935a:	add    BYTE PTR [rax+rsi*1+0x2fc0ac81],al
   140009361:	and    al,0xc2
   140009363:	scas   eax,DWORD PTR es:[rdi]
   140009364:	xor    DWORD PTR [rdx],0x69
   140009367:	add    BYTE PTR [rax+0x1b],al
   14000936a:	adc    ebx,DWORD PTR [rax-0x34]
   14000936d:	adc    DWORD PTR [rsi+0x5f],edi
   140009370:	adc    DWORD PTR [rsi+0x5d],edi
   140009373:	xchg   esp,eax
   140009374:	pop    rcx
   140009375:	add    eax,DWORD PTR [rax]
   140009377:	jl     0x1400093c5
   140009379:	loopne 0x140009342
   14000937b:	pop    rsi
   14000937c:	jge    0x140009380
   14000937e:	test   BYTE PTR [rdi+0x4ca5ebf0],bl
   140009384:	sbb    eax,DWORD PTR [rax]
   140009386:	loopne 0x1400093f5
   140009388:	add    al,bh
   14000938a:	rex.WRX ins DWORD PTR es:[rdi],dx
   14000938c:	mov    dh,BYTE PTR [rsi+0x1]
   14000938f:	xchg   ecx,eax
   140009390:	xchg   edi,eax
   140009391:	or     BYTE PTR [rdi-0x65],bh
   140009394:	cwde   
   140009395:	lock sar DWORD PTR [rbx+0xf],cl
   140009399:	(bad)  
   14000939a:	mov    ebp,0x943df846
   14000939f:	jns    0x1400093a4
   1400093a1:	add    ah,bl
   1400093a3:	rex.WRB movabs al,ds:0xcd18de3f73c2eb5a
   1400093ad:	add    ah,BYTE PTR [rdx]
   1400093af:	(bad)  
   1400093b0:	(bad)
   1400093b3:	(bad)  
   1400093b4:	cdq    
   1400093b5:	push   rsi
   1400093b6:	test   ecx,esp
   1400093b8:	jg     0x140009372
   1400093ba:	(bad)  
   1400093bb:	xor    al,bl
   1400093bd:	(bad)  
   1400093be:	lock fild DWORD PTR [rbx+rax*1+0x30]
   1400093c3:	xor    eax,DWORD PTR gs:[rcx+0x7d58eb11]
   1400093ca:	sub    DWORD PTR [rdi+0x33],esp
   1400093cd:	or     DWORD PTR [rax-0x3b2407bb],0x33d85948
   1400093d7:	add    al,dl
   1400093d9:	fbld   TBYTE PTR [rsp+rbx*2+0x2f1bc3a3]
   1400093e0:	xchg   edi,eax
   1400093e1:	xchg   ebx,eax
   1400093e2:	mov    al,0xb0
   1400093e4:	rex.RX xor DWORD PTR [rip+0x1d7850a],r10d        # 0x141d818f5
   1400093eb:	cmp    al,0x6d
   1400093ed:	(bad)  
   1400093ee:	imul   ah
   1400093f0:	push   rdi
   1400093f1:	out    0xf1,eax
   1400093f3:	fcomp  st(6)
   1400093f5:	fcmovnbe st,st(1)
   1400093f7:	and    al,0x4c
   1400093f9:	add    dh,bh
   1400093fb:	fsub   QWORD PTR [rbx+0x4d]
   1400093fe:	out    dx,eax
   1400093ff:	mov    dl,0x47
   140009401:	out    dx,al
   140009402:	test   eax,0xf905795f
   140009407:	xchg   esp,eax
   140009408:	(bad)  
   140009409:	jb     0x140009418
   14000940b:	and    dh,BYTE PTR [rcx]
   14000940d:	loope  0x140009391
   14000940f:	pop    rsp
   140009410:	repz add BYTE PTR ss:[rbx*4-0x40d62422],dh
   140009419:	lods   al,BYTE PTR ds:[rsi]
   14000941a:	add    DWORD PTR [rax+0x76b9c8],edi
   140009420:	add    BYTE PTR [rsi-0x42],cl
   140009423:	cmp    eax,0xf51f7380
   140009428:	retf   0xc64f
   14000942b:	(bad)  
   14000942c:	jg     0x1400093c9
   14000942e:	sbb    dl,al
   140009430:	(bad)  
   140009431:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009432:	push   0x6f321e00
   140009437:	cwde   
   140009438:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009439:	cmp    ecx,esp
   14000943b:	(bad)  
   14000943c:	fistp  WORD PTR [rsi]
   14000943e:	shr    BYTE PTR [rbx+0xaf826ff],0x32
   140009445:	(bad)  
   140009446:	adc    esi,edi
   140009448:	ss xor ecx,esp
   14000944b:	(bad)  
   14000944c:	out    dx,al
   14000944d:	stos   DWORD PTR es:[rdi],eax
   14000944e:	lahf   
   14000944f:	jae    0x1400093d4
   140009451:	(bad)  
   140009452:	cmp    cl,ah
   140009454:	not    DWORD PTR [rsi]
   140009456:	or     eax,0x5ae647c0
   14000945b:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000945d:	fwait
   14000945e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000945f:	clc    
   140009460:	out    dx,eax
   140009461:	jge    0x14000949b
   140009463:	stc    
   140009464:	jbe    0x1400093ed
   140009466:	(bad)  
   140009467:	and    eax,DWORD PTR [rip+0xffffffff98db7f08]        # 0xd8dc1375
   14000946d:	jo     0x1400094b0
   14000946f:	jnp    0x1400094e0
   140009471:	popf   
   140009472:	(bad)
   140009475:	rex.WXB (bad) 
   140009477:	ret    
   140009478:	rex.RXB jne 0x1400094da
   14000947b:	iret   
   14000947c:	fild   QWORD PTR [rcx+0x646d0068]
   140009482:	out    dx,al
   140009483:	(bad)  
   140009484:	repz add al,0xec
   140009487:	mov    ebx,0x8bd47f0d
   14000948c:	movsxd esp,DWORD PTR [rdi+0x14f7c506]
   140009492:	and    ah,bh
   140009494:	ins    DWORD PTR es:[rdi],dx
   140009495:	(bad)
   14000949a:	mov    edi,DWORD PTR [rax]
   14000949c:	cmp    bh,dh
   14000949e:	(bad)  
   14000949f:	fucomi st,st(6)
   1400094a1:	mov    ebp,0x93bce84f
   1400094a6:	(bad)  
   1400094a7:	sub    al,0xd1
   1400094a9:	add    BYTE PTR [rdx],al
   1400094ab:	enter  0x37c,0x4c
   1400094af:	shr    DWORD PTR [rsi-0x3d],cl
   1400094b2:	mov    BYTE PTR [rcx+riz*1+0x815ce7],0x22
   1400094ba:	cld    
   1400094bb:	ins    DWORD PTR es:[rdi],dx
   1400094bc:	(bad)
   1400094c1:	icebp  
   1400094c2:	pop    rbx
   1400094c3:	mov    ebx,0xadfea6f7
   1400094c8:	cmp    eax,0x10068871
   1400094cd:	push   rax
   1400094ce:	out    0x8e,al
   1400094d0:	mov    al,0xfb
   1400094d2:	shl    DWORD PTR [rdx],1
   1400094d4:	imul   esi,DWORD PTR [rax+0x13],0x2a
   1400094d8:	xlat   BYTE PTR ds:[rbx]
   1400094d9:	repz ror DWORD PTR [rdx],0x21
   1400094dd:	cld    
   1400094de:	ins    DWORD PTR es:[rdi],dx
   1400094df:	(bad)
   1400094e4:	sahf   
   1400094e5:	xor    al,dh
   1400094e7:	clc    
   1400094e8:	out    dx,eax
   1400094e9:	mov    ah,0x8c
   1400094eb:	icebp  
   1400094ec:	out    dx,eax
   1400094ed:	xlat   BYTE PTR ds:[rbx]
   1400094ee:	jno    0x1400094e7
   1400094f0:	fisubr WORD PTR [rax-0x5ef7fcbc]
   1400094f6:	push   rdx
   1400094f7:	test   eax,0x26a30934
   1400094fc:	push   rax
   1400094fd:	mov    dh,0x8e
   1400094ff:	(bad)  
   140009500:	xchg   edi,eax
   140009501:	jb     0x1400094fb
   140009503:	(bad)  
   140009504:	(bad)  
   140009505:	(bad)  
   140009506:	mov    ch,0x1f
   140009508:	and    DWORD PTR [rax+0x1a],edx
   14000950b:	jle    0x1400094cc
   14000950d:	repnz loop 0x14000949a
   140009510:	or     DWORD PTR [rsi],ebx
   140009512:	je     0x14000950b
   140009514:	push   rdx
   140009515:	add    eax,0xf18eb50f
   14000951a:	xchg   edi,eax
   14000951b:	(bad)  
   14000951c:	cmp    al,0xf9
   14000951e:	(bad)  
   14000951f:	add    eax,0x9c5667b2
   140009524:	(bad)  
   140009525:	and    BYTE PTR [rax],ch
   140009527:	mov    bh,0xb9
   140009529:	add    cl,BYTE PTR [rdi+0x678dbded]
   14000952f:	mov    edi,0xb27adf3a
   140009534:	(bad)  
   140009535:	lock mov bh,0xce
   140009538:	add    edi,DWORD PTR [rax-0x3761ad20]
   14000953e:	xor    eax,0xf04c488
   140009543:	fidivr DWORD PTR [rbx-0x15]
   140009546:	lods   al,BYTE PTR ds:[rsi]
   140009547:	mov    bl,0xbd
   140009549:	pcmpgtb mm7,QWORD PTR [rax-0x68]
   14000954d:	(bad)  
   14000954e:	repz add BYTE PTR [rdx],dl
   140009551:	xchg   edx,eax
   140009552:	jns    0x140009517
   140009554:	xor    eax,0x9dae74dd
   140009559:	or     DWORD PTR [rdx],0xffffffc2
   14000955c:	(bad)  
   14000955d:	lods   al,BYTE PTR ds:[rsi]
   14000955e:	mov    esp,0x58262b8
   140009563:	jns    0x1400095d9
   140009565:	test   BYTE PTR [rcx],0x46
   140009568:	rex.WRXB jg 0x140009591
   14000956b:	loope  0x140009504
   14000956d:	and    DWORD PTR [rdx],ebx
   14000956f:	rex (bad) 
   140009571:	xor    bh,BYTE PTR [rbx-0x67]
   140009574:	pop    rbx
   140009575:	cmp    al,BYTE PTR [rdi]
   140009577:	lahf   
   140009578:	jp     0x1400095ef
   14000957a:	mov    bl,0xd1
   14000957c:	cmp    DWORD PTR [rax-0x8],ecx
   14000957f:	fcmovnb st,st(4)
   140009581:	add    al,0xb
   140009583:	sbb    bl,BYTE PTR [rcx+rbp*4-0x1e]
   140009587:	xchg   ecx,eax
   140009588:	(bad)  
   14000958a:	jns    0x140009601
   14000958c:	test   BYTE PTR [rbp+0x4ca66408],0xd1
   140009593:	add    BYTE PTR [rdx],bh
   140009595:	xchg   esp,eax
   140009596:	stc    
   140009597:	(bad)  
   140009598:	cwde   
   140009599:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000959a:	test   DWORD PTR [rbp+rsi*8-0x5b],eax
   14000959e:	sbb    al,0x8e
   1400095a0:	popf   
   1400095a1:	sbb    al,ah
   1400095a3:	mov    ecx,0xe6608cff
   1400095a8:	movabs al,ds:0x70552f77fc39a53
   1400095b1:	out    0x5e,eax
   1400095b3:	jae    0x14000956b
   1400095b5:	imul   DWORD PTR [rbp+0x40b2bece]
   1400095bb:	retfw  0x1a26
   1400095bf:	add    BYTE PTR [rcx+rbx*4],0xbd
   1400095c3:	(bad)  
   1400095c4:	pop    QWORD PTR [rdx]
   1400095c6:	push   0xfffffffff93a7a1a
   1400095cb:	test   BYTE PTR [rsi-0x64],0x7c
   1400095cf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400095d0:	ret    
   1400095d1:	ja     0x1400095e3
   1400095d3:	clc    
   1400095d4:	movsxd rdi,r8d
   1400095d7:	repz lea eax,[rbp-0x14]
   1400095db:	mov    ebp,0x666dd675
   1400095e0:	pop    rdi
   1400095e1:	adc    esp,ebp
   1400095e3:	in     al,dx
   1400095e4:	xchg   ebx,eax
   1400095e5:	es jbe 0x1400095ea
   1400095e8:	rex.WX push rsi
   1400095ea:	movabs eax,ds:0xeec7ed77c01e7850
   1400095f3:	fnstsw WORD PTR [rsi+0x7]
   1400095f6:	jg     0x140009673
   1400095f8:	in     al,0x16
   1400095fa:	jbe    0x140009668
   1400095fc:	pop    rsi
   1400095fd:	xchg   ebp,eax
   1400095fe:	xchg   edi,eax
   1400095ff:	test   al,0xd3
   140009601:	mov    edi,0xf013b39b
   140009606:	fwait
   140009607:	cs popf 
   140009609:	sub    BYTE PTR [rbp-0x51],0x41
   14000960d:	and    BYTE PTR [rcx-0x80],dh
   140009610:	jmp    0x140009600
   140009612:	pop    rdi
   140009613:	lods   eax,DWORD PTR ds:[rsi]
   140009614:	(bad)  
   140009615:	dec    DWORD PTR [rbp-0x354c761]
   14000961b:	add    BYTE PTR [rax-0x5e],dh
   14000961e:	push   rsp
   14000961f:	sub    bh,BYTE PTR [rip+0x5b55902f]        # 0x19b562654
   140009625:	mov    cl,0x13
   140009627:	push   rax
   140009628:	xor    DWORD PTR [rcx-0x40b497c9],ebx
   14000962e:	shl    BYTE PTR [rcx-0x5ce64ad],0xb1
   140009635:	fld    TBYTE PTR [rbx-0x36]
   140009638:	add    eax,0x21a6c2a4
   14000963d:	adc    ecx,eax
   14000963f:	mov    edi,0x1c55f6fd
   140009644:	cld    
   140009645:	int3   
   140009646:	jae    0x1400096ba
   140009648:	iret   
   140009649:	repz add bl,BYTE PTR [rcx+0x29]
   14000964d:	(bad)  
   14000964e:	rol    DWORD PTR [rax],1
   140009650:	and    dl,BYTE PTR [rax-0x6592c927]
   140009656:	xor    al,0x54
   140009658:	pop    rdi
   140009659:	retf   0x85e1
   14000965c:	loop   0x140009684
   14000965e:	mov    esp,0xd70ecbfa
   140009663:	adc    DWORD PTR [rax+0xc],ebp
   140009666:	(bad)  
   140009667:	jge    0x14000965e
   140009669:	jae    0x1400096d9
   14000966b:	out    dx,eax
   14000966c:	out    0x63,eax
   14000966e:	jnp    0x1400096af
   140009670:	rex.X mov cl,0x9
   140009673:	adc    BYTE PTR [rcx+0x80be6dc],dh
   140009679:	(bad)  
   14000967a:	or     DWORD PTR [rdx+rax*8],esp
   14000967d:	(bad)  
   14000967e:	fadd   QWORD PTR [rax+rcx*4]
   140009681:	add    BYTE PTR [rsi-0x61],bh
   140009684:	sub    bh,BYTE PTR [rdi+0x66]
   140009687:	(bad)  
   140009688:	test   DWORD PTR [rbx-0x3affb276],0xd02f9b65
   140009692:	pop    rcx
   140009693:	xchg   ebx,eax
   140009694:	shl    DWORD PTR [rdi],cl
   140009697:	mov    edi,0xe39f954f
   14000969c:	sti    
   14000969d:	xor    DWORD PTR [rax+0x6c831006],ecx
   1400096a3:	repz add eax,0x81049a5a
   1400096a9:	or     DWORD PTR [rsp+r8*4],r14d
   1400096ad:	fucomip st,st(2)
   1400096af:	in     eax,0xf7
   1400096b1:	test   al,0xf2
   1400096b3:	jae    0x140009731
   1400096b5:	(bad)  
   1400096b6:	rol    DWORD PTR es:[rax],1
   1400096b9:	(bad)
   1400096be:	imul   edi,DWORD PTR [rbp-0x6],0x717a8fb9
   1400096c5:	in     al,dx
   1400096c6:	(bad)  
   1400096c7:	fwait
   1400096c8:	mov    ebp,0x86a1557
   1400096cd:	mov    edi,0x65cf8ab5
   1400096d2:	push   rsi
   1400096d3:	fisttp WORD PTR [rbx+0x30]
   1400096d6:	loopne 0x1400096bf
   1400096d8:	(bad)  
   1400096d9:	sahf   
   1400096da:	cwde   
   1400096db:	(bad)  
   1400096dc:	add    BYTE PTR ds:[rsp+rdx*2],0x28
   1400096e1:	adc    al,0x8e
   1400096e3:	add    BYTE PTR [rax+0x1d],bh
   1400096e6:	rcl    BYTE PTR [rsi],0xfb
   1400096e9:	icebp  
   1400096ea:	outs   dx,DWORD PTR ds:[rsi]
   1400096eb:	sbb    al,0x5c
   1400096ed:	(bad)  
   1400096ee:	xchg   ebx,eax
   1400096ef:	(bad)  
   1400096f0:	(bad)  
   1400096f1:	(bad)  
   1400096f2:	cmove  ecx,DWORD PTR [rax]
   1400096f5:	jg     0x1400096d7
   1400096f7:	ds add cl,cl
   1400096fa:	lock out dx,eax
   1400096fc:	cdq    
   1400096fd:	(bad)  
   1400096fe:	(bad)  
   1400096ff:	(bad)  
   140009700:	int3   
   140009701:	mov    edi,0x556c3cef
   140009706:	stc    
   140009707:	mov    ecx,0xd8a43784
   14000970c:	(bad)  
   14000970d:	nop
   14000970e:	rex.X cdq 
   140009710:	(bad)  
   140009711:	cli    
   140009712:	jle    0x1400096ec
   140009714:	push   rsi
   140009715:	adc    eax,0x8be9c002
   14000971a:	sbb    esi,eax
   14000971c:	popf   
   14000971d:	jg     0x140009738
   14000971f:	rex.R mov bpl,0xd6
   140009722:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009723:	fst    QWORD PTR [rbx-0x794a8041]
   140009729:	xchg   DWORD PTR [rdx-0x59],ebp
   14000972c:	fucom  st(0)
   14000972e:	(bad)  
   14000972f:	ret    
   140009730:	call   0x149fcbf1a
   140009735:	mov    BYTE PTR [rip+0x36e58480],dh        # 0x176e61bbb
   14000973b:	jno    0x1400097a5
   14000973d:	movsxd ebx,DWORD PTR [rdi+0x3]
   140009740:	fistp  QWORD PTR [rax]
   140009742:	mov    eax,0x2e0f2380
   140009747:	mov    edx,0xdb504907
   14000974c:	sbb    al,BYTE PTR [rax+0x2d77f844]
   140009752:	pop    rsp
   140009753:	ret    0xf99e
   140009756:	repz (bad) 
   140009758:	mov    dh,0x3e
   14000975a:	ror    BYTE PTR [rcx+0x63ab1d3d],0x7e
   140009761:	imul   eax,DWORD PTR [rax],0x2850abc9
   140009767:	cmp    al,0x0
   140009769:	loopne 0x140009778
   14000976b:	add    BYTE PTR [rbx-0x13f03813],bh
   140009771:	mov    ecx,0xbc7ebf8d
   140009776:	mov    cs,WORD PTR [rbp+0x36bf27d]
   14000977c:	mov    esi,0xfe092006
   140009781:	jl     0x1400097e6
   140009783:	adc    DWORD PTR [rdi-0x46],ebx
   140009786:	jns    0x14000979e
   140009788:	fld    TBYTE PTR [rdi+0x5f]
   14000978b:	jne    0x14000980b
   14000978d:	xor    eax,0x2ecb6309
   140009792:	mov    dh,0xf5
   140009794:	cmp    edx,DWORD PTR [rbx+rbx*4]
   140009797:	add    BYTE PTR [rdx],bl
   140009799:	enter  0xdbb6,0x50
   14000979d:	push   rbx
   14000979e:	(bad)  
   14000979f:	loope  0x140009789
   1400097a1:	(bad)  
   1400097a2:	mov    ebp,0x5bfbea78
   1400097a7:	xor    dl,bh
   1400097a9:	mov    cl,0xec
   1400097ab:	rex.RB
   1400097ac:	rex.RB mov r10b,0x77
   1400097af:	jmp    FWORD PTR [rcx+0xd]
   1400097b2:	fidivr DWORD PTR [rsi-0x5]
   1400097b5:	sub    bl,BYTE PTR [rsi]
   1400097b7:	cdq    
   1400097b8:	std    
   1400097b9:	sahf   
   1400097ba:	sbb    edi,esp
   1400097bc:	(bad)  
   1400097bd:	cmp    DWORD PTR [rbx-0x29dcd70a],0x57931400
   1400097c7:	(bad)  
   1400097c8:	movabs eax,ds:0x72ec7b9f1180dabc
   1400097d1:	rcl    ecx,cl
   1400097d3:	fdiv   QWORD PTR [rdi]
   1400097d5:	(bad)  
   1400097d6:	sbb    rdi,0xffffffff8ecfa9e7
   1400097dd:	mov    esi,0x801ac408
   1400097e2:	data16 xor al,BYTE PTR [rcx]
   1400097e5:	sbb    DWORD PTR [rsi-0x635e9a9d],eax
   1400097eb:	fiadd  DWORD PTR [rax-0x4c]
   1400097ee:	rex.WRXB jle 0x140009790
   1400097f1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400097f2:	jle    0x140009805
   1400097f4:	shl    BYTE PTR [rax],0xe1
   1400097f7:	push   rdi
   1400097f8:	rex.WRXB lods al,BYTE PTR ds:[rsi]
   1400097fa:	add    DWORD PTR [rax],ebp
   1400097fc:	sub    al,0xbf
   1400097fe:	fcmovb st,st(0)
   140009800:	mov    bh,0x1e
   140009802:	popf   
   140009803:	(bad)  
   140009805:	xchg   ebp,eax
   140009806:	mov    eax,0x52dceff9
   14000980b:	add    edi,eax
   14000980d:	mov    bl,0x90
   14000980f:	stos   DWORD PTR es:[rdi],eax
   140009810:	add    DWORD PTR [rbp-0x9],ebp
   140009813:	rex.WRB jmp FWORD PTR [r10+0xd]
   140009817:	neg    ebp
   140009819:	cli    
   14000981a:	add    eax,0x8809fa9f
   14000981f:	xor    eax,0x57e58d00
   140009824:	sbb    edi,DWORD PTR [rax]
   140009826:	test   BYTE PTR [rbx-0x7003af45],0xd
   14000982d:	add    DWORD PTR [rbx-0x6e],ecx
   140009830:	mov    ebp,0x797ac06f
   140009835:	mov    ebx,0xe0e12e16
   14000983a:	scas   eax,DWORD PTR es:[edi]
   14000983c:	icebp  
   14000983d:	test   eax,0x6b1529f
   140009842:	nop
   140009843:	adc    bh,BYTE PTR [rcx-0x2b]
   140009846:	(bad)  
   140009847:	neg    ch
   140009849:	mov    bl,0x82
   14000984b:	addr32 (bad) 
   14000984d:	neg    DWORD PTR [rbx+0x58]
   140009850:	in     al,0xfe
   140009852:	not    DWORD PTR [rip+0xfffffffff79801ae]        # 0x137989a06
   140009858:	rex.WXB jmp FWORD PTR [r10+0xd]
   14000985c:	jnp    0x1400098cd
   14000985e:	sahf   
   14000985f:	(bad)
   140009862:	sub    edi,esp
   140009864:	sbb    DWORD PTR [rdx+rbp*8-0x39],edi
   140009868:	sub    dh,dl
   14000986a:	add    BYTE PTR [rdx],dh
   14000986c:	and    ch,BYTE PTR [rdi+0x7ae540da]
   140009872:	(bad)  
   140009873:	rex.WRXB jg 0x1400098f5
   140009876:	or     ecx,esi
   140009878:	mov    WORD PTR [rdx-0x65cf4c43],?
   14000987e:	(bad)  
   14000987f:	call   FWORD PTR [rsi-0x35070c07]
   140009885:	in     al,dx
   140009886:	sub    ebp,DWORD PTR [rsi-0x10]
   140009889:	pop    QWORD PTR [rax-0x76ab02b1]
   14000988f:	xor    eax,0x50aa1480
   140009894:	sub    BYTE PTR [rdx+rax*4],bl
   140009897:	push   rcx
   140009898:	sbb    ebx,eax
   14000989a:	ins    DWORD PTR es:[rdi],dx
   14000989b:	(bad)  
   14000989c:	mov    esi,0x9e2af363
   1400098a1:	jge    0x14000985f
   1400098a3:	mov    ?,WORD PTR [rbp-0x9]
   1400098a6:	sub    al,0xa3
   1400098a8:	pop    rbp
   1400098a9:	xchg   DWORD PTR [rdi-0x12],ebx
   1400098ac:	pop    QWORD PTR [rbx-0x2a]
   1400098af:	add    BYTE PTR [rdx],bl
   1400098b1:	or     eax,0xc29e5d6c
   1400098b6:	ficomp WORD PTR [rbx+0x67]
   1400098b9:	popf   
   1400098ba:	(bad)  
   1400098bb:	jrcxz  0x1400098bd
   1400098bd:	mov    WORD PTR [rcx-0x3],?
   1400098c0:	movabs ds:0xa0c80358bf1fb35c,eax
   1400098c9:	ins    BYTE PTR es:[rdi],dx
   1400098ca:	sbb    ecx,DWORD PTR [rsi-0x57e432cc]
   1400098d0:	fsubp  st(0),st
   1400098d2:	ret    0xfe77
   1400098d5:	jne    0x1400098e7
   1400098d7:	(bad)  
   1400098d8:	mov    esp,0x857bc9b9
   1400098dd:	movabs eax,ds:0x1bfec05d5f92fdc0
   1400098e6:	(bad)  
   1400098e7:	rol    DWORD PTR [rbx-0x53],0x6f
   1400098eb:	loop   0x1400098ee
   1400098ed:	(bad)  
   1400098ee:	(bad)  
   1400098ef:	cmc    
   1400098f0:	retf   
   1400098f1:	loope  0x14000993e
   1400098f3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400098f4:	xchg   edx,eax
   1400098f5:	(bad)  
   1400098f6:	imul   eax,DWORD PTR [rax],0x29
   1400098f9:	xchg   edi,eax
   1400098fa:	cmp    DWORD PTR [rbx+0xf0075f0],ecx
   140009900:	fmul   DWORD PTR [rdi-0x18762ce5]
   140009906:	fwait
   140009907:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009908:	adc    ebx,ebx
   14000990a:	(bad)  
   14000990b:	(bad)  
   14000990c:	imul   eax,DWORD PTR [r8],0xffffffbb
   140009910:	out    0x7f,al
   140009912:	in     eax,dx
   140009913:	xor    eax,0xc60c778d
   140009918:	push   rbx
   140009919:	lahf   
   14000991a:	adc    edi,DWORD PTR [rdx+0x12]
   14000991d:	adc    al,0xa7
   14000991f:	add    dl,BYTE PTR [rbx+0x0]
   140009922:	add    BYTE PTR [rdx-0x5f],0xf0
   140009926:	ins    DWORD PTR es:[rdi],dx
   140009927:	sbb    BYTE PTR [rbx+0xa],ch
   14000992a:	(bad)  
   14000992b:	cmp    cl,BYTE PTR [rcx]
   14000992d:	out    dx,eax
   14000992e:	fnstsw WORD PTR [rsi-0x65e2907e]
   140009934:	(bad)  
   140009935:	mov    esi,0x3a6e5fdf
   14000993a:	mov    edi,0x5d6c019d
   14000993f:	sahf   
   140009940:	ret    0xb77d
   140009943:	jle    0x140009926
   140009945:	mov    dh,0x4b
   140009947:	iret   
   140009948:	sbb    al,0x8c
   14000994a:	cmp    esp,edi
   14000994c:	jl     0x14000993b
   14000994e:	mov    dh,0x2
   140009950:	movabs ds:0x605b0a142a6b5001,al
   140009959:	(bad)  
   14000995a:	(bad)  
   14000995b:	mov    ?,WORD PTR [rax]
   14000995d:	mov    edi,0x970fec7b
   140009962:	lock in al,0x81
   140009965:	cmc    
   140009966:	mov    ecx,0xd0065e03
   14000996b:	jg     0x140009914
   14000996d:	xchg   BYTE PTR [rdi],ch
   14000996f:	int3   
   140009970:	mov    edi,0x3f17bb8f
   140009975:	je     0x1400099c2
   140009977:	push   rcx
   140009978:	test   cl,dh
   14000997a:	(bad)  
   14000997b:	lahf   
   14000997c:	jae    0x140009979
   14000997e:	xchg   edx,eax
   14000997f:	mov    bl,BYTE PTR [rdi+0x34]
   140009982:	add    BYTE PTR [rdx-0x7b62a1bb],ch
   140009988:	sbb    edi,ebx
   14000998a:	sbb    bh,BYTE PTR [rax-0x1e]
   14000998d:	rol    DWORD PTR [rbp+0x3c],0x79
   140009991:	(bad)  
   140009992:	(bad)  
   140009994:	add    dh,dh
   140009996:	int3   
   140009997:	mov    edi,0x97f35d8f
   14000999c:	fsubr  QWORD PTR [rdx+0x276093fb]
   1400099a2:	lahf   
   1400099a3:	xchg   edx,eax
   1400099a4:	movabs ds:0x33f1a97329e5001,al
   1400099ad:	rex.RXB mov r11b,0x60
   1400099b0:	(bad)  
   1400099b1:	out    0x55,al
   1400099b3:	cld    
   1400099b4:	in     eax,0xf1
   1400099b6:	adc    edi,DWORD PTR [rax]
   1400099b8:	jo     0x14000999a
   1400099ba:	add    BYTE PTR [rax],al
   1400099bc:	(bad)  
   1400099bd:	je     0x140009a33
   1400099bf:	adc    al,0x7f
   1400099c1:	repz ja 0x1400099f3
   1400099c4:	movabs ds:0xcbc00e7d83cb4eff,eax
   1400099cd:	pop    rsp
   1400099ce:	mov    dl,0xab
   1400099d0:	scas   al,BYTE PTR es:[rdi]
   1400099d1:	push   0xaaf9400
   1400099d6:	test   edx,eax
   1400099d8:	outs   dx,BYTE PTR ds:[rsi]
   1400099d9:	sbb    BYTE PTR [rbp+0x3],bh
   1400099dc:	rex.WRXB cmp r15,QWORD PTR [r15+0x1f6fb7db]
   1400099e3:	add    BYTE PTR [rax-0x652696ae],ah
   1400099e9:	or     esi,DWORD PTR [rax]
   1400099eb:	(bad)  
   1400099ec:	hlt    
   1400099ed:	rex.WRXB
   1400099ee:	lock or eax,0x68b6a3c
   1400099f4:	rex add eax,0x782cd992
   1400099fa:	adc    DWORD PTR [rsi-0x72e8fd2f],ecx
   140009a00:	add    DWORD PTR [rax],edi
   140009a02:	(bad)  
   140009a03:	(bad)  
   140009a04:	jle    0x140009a40
   140009a06:	add    r12d,DWORD PTR [rax+0x2850a942]
   140009a0d:	cmp    al,0xd
   140009a0f:	ret    
   140009a10:	or     BYTE PTR [rsi-0x7c6541c8],dh
   140009a16:	add    esi,edi
   140009a18:	rex.W (bad) 
   140009a1b:	mov    DWORD PTR [rbx+0x50a88113],r9d
   140009a22:	xor    al,BYTE PTR [rcx]
   140009a24:	(bad)  
   140009a25:	(bad)  
   140009a26:	jo     0x1400099ea
   140009a28:	jbe    0x140009a22
   140009a2a:	add    al,0x8c
   140009a2c:	sub    DWORD PTR [rbx+riz*1-0x6aeca3b7],edi
   140009a33:	pushf  
   140009a34:	pop    rax
   140009a35:	add    ecx,eax
   140009a37:	mov    al,0xcc
   140009a39:	inc    BYTE PTR [rcx]
   140009a3b:	mov    al,0x9d
   140009a3d:	lahf   
   140009a3e:	pop    rsi
   140009a3f:	and    eax,0x28a004de
   140009a44:	sub    bh,BYTE PTR [rbp-0x5d7fec9e]
   140009a4a:	xor    ch,BYTE PTR [rdx+rbx*1]
   140009a4d:	add    BYTE PTR [rbp+0x65],al
   140009a50:	pop    rax
   140009a51:	xor    al,0x0
   140009a53:	mov    cl,dl
   140009a55:	mov    al,0x68
   140009a57:	add    BYTE PTR [rdx*4+0x2800d161],dl
   140009a5e:	sub    al,bl
   140009a60:	movabs ds:0xa8a0034586545001,al
   140009a69:	or     al,0xeb
   140009a6b:	inc    DWORD PTR [rcx]
   140009a6d:	out    0xb6,al
   140009a6f:	sahf   
   140009a70:	cmp    al,0xc4
   140009a72:	rol    DWORD PTR es:[rsi+0x0],cl
   140009a79:	rex.WB
   140009a7a:	rex.RB
   140009a7b:	rex.WRX
   140009a7c:	rex.R scas al,BYTE PTR es:[rdi]
   140009a7e:	rex.X (bad) 
   140009a80:	(bad)  
   140009a81:	add    BYTE PTR [rax],al
   140009a83:	add    BYTE PTR [rax],al
   140009a85:	add    BYTE PTR [rax],al
   140009a87:	add    BYTE PTR [rax],ch
   140009a89:	add    BYTE PTR [rax],al
   140009a8b:	add    BYTE PTR [rax+0x0],al
   140009a8e:	add    BYTE PTR [rax],al
   140009a90:	add    BYTE PTR [rax],0x0
   140009a93:	add    BYTE PTR [rcx],al
   140009a95:	add    BYTE PTR [rax],ah
	...
   140009d27:	add    BYTE PTR [rdi+0x47],al
   140009d2a:	rex.RXB and BYTE PTR [r15+0x47],r8b
   140009d2e:	rex.RXB mov r15d,0xbf474747
   140009d34:	rex.RXB
   140009d35:	rex.RXB
   140009d36:	rex.RXB and BYTE PTR [r8],r8b
	...
   140009e1d:	add    BYTE PTR [rax],al
   140009e1f:	add    BYTE PTR [rdi+0x47],al
   140009e22:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140009e26:	rex.RXB add BYTE PTR [r15+0x47],0x47
   140009e2b:	inc    DWORD PTR [rdi+0x47]
   140009e2e:	rex.RXB inc DWORD PTR [r15+0x47]
   140009e32:	rex.RXB inc DWORD PTR [r15+0x47]
   140009e36:	rex.RXB inc DWORD PTR [r15+0x47]
   140009e3a:	rex.RXB add BYTE PTR [r15+0x47],0x47
   140009e3f:	adc    BYTE PTR [rax],al
	...
   140009f19:	add    BYTE PTR [rax],al
   140009f1b:	add    BYTE PTR [rdi+0x47],al
   140009f1e:	rex.RXB push r8
   140009f20:	rex.RXB
   140009f21:	rex.RXB
   140009f22:	rex.RXB fild WORD PTR [r15+0x47]
   140009f26:	rex.RXB inc DWORD PTR [r15+0x47]
   140009f2a:	rex.RXB call QWORD PTR [r11+0x53]
   140009f2e:	push   rbx
   140009f2f:	call   QWORD PTR [rbx+0x53]
   140009f32:	push   rbx
   140009f33:	inc    DWORD PTR [rdi+0x47]
   140009f36:	rex.RXB inc DWORD PTR [r15+0x47]
   140009f3a:	rex.RXB inc DWORD PTR [r15+0x47]
   140009f3e:	rex.RXB fild WORD PTR [r15+0x47]
   140009f42:	rex.RXB push r8
	...
   14000a014:	rex.RXB
   14000a015:	rex.RXB
   14000a016:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000a01a:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14000a01c:	rex.RXB
   14000a01d:	rex.RXB
   14000a01e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a022:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a026:	rex.RXB (bad) 
   14000a028:	(bad)  
   14000a029:	jns    0x140009fc2
   14000a02b:	push   rsp
   14000a02d:	hlt    
   14000a02e:	hlt    
   14000a02f:	push   rsp
   14000a031:	hlt    
   14000a032:	hlt    
   14000a033:	(bad)  
   14000a034:	jge    0x14000a086
   14000a036:	sub    bh,bh
   14000a038:	rex.RXB
   14000a039:	rex.RXB
   14000a03a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a03e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a042:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a046:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14000a048:	rex.RXB
   14000a049:	rex.RXB
   14000a04a:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000a10d:	add    BYTE PTR [rax],al
   14000a10f:	add    BYTE PTR [rdi+0x47],al
   14000a112:	rex.RXB push r8
   14000a114:	rex.RXB
   14000a115:	rex.RXB
   14000a116:	rex.RXB out dx,eax
   14000a118:	rex.RXB
   14000a119:	rex.RXB
   14000a11a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a11e:	rex.RXB inc DWORD PTR [r13+r11*2+0x69]
   14000a123:	(bad)  
   14000a124:	cmp    bl,BYTE PTR [rbp-0x45ca0030]
   14000a12a:	(bad)  
   14000a12b:	(bad)  
   14000a12c:	(bad)  
   14000a12d:	(bad)  
   14000a12e:	(bad)  
   14000a12f:	(bad)  
   14000a130:	(bad)  
   14000a131:	(bad)  
   14000a132:	(bad)  
   14000a133:	inc    ebx
   14000a135:	pop    rsp
   14000a136:	add    bh,bh
   14000a138:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a139:	push   rdi
   14000a13a:	adc    bh,bh
   14000a13c:	pop    rsi
   14000a13d:	rex.WXB cmp dil,r15b
   14000a140:	rex.RXB
   14000a141:	rex.RXB
   14000a142:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a146:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a14a:	rex.RXB out dx,eax
   14000a14c:	rex.RXB
   14000a14d:	rex.RXB
   14000a14e:	rex.RXB push r8
	...
   14000a208:	rex.RXB
   14000a209:	rex.RXB
   14000a20a:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000a20e:	rex.RXB pop QWORD PTR [r15+0x47]
   14000a212:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a216:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a21a:	rex.RXB (bad) 
   14000a21c:	and    DWORD PTR ds:[rbx-0x145ca01],0xfeba35ff
   14000a227:	push   QWORD PTR [rip+0xfffffffffffffeba]        # 0x14000a0e7
   14000a22d:	(bad)  
   14000a22e:	(bad)  
   14000a22f:	(bad)  
   14000a230:	(bad)  
   14000a231:	(bad)  
   14000a232:	(bad)  
   14000a233:	inc    ebx
   14000a235:	pop    rsp
   14000a236:	add    bh,bh
   14000a238:	ret    
   14000a239:	pop    rsp
   14000a23a:	add    bh,bh
   14000a23c:	ret    
   14000a23d:	pop    rsp
   14000a23e:	add    bh,bh
   14000a240:	test   DWORD PTR [rcx+0x24],edx
   14000a243:	inc    DWORD PTR [rdi+0x47]
   14000a246:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a24a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a24e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a252:	rex.RXB pop QWORD PTR [r15+0x47]
   14000a256:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000a301:	add    BYTE PTR [rax],al
   14000a303:	add    BYTE PTR [rdi+0x47],al
   14000a306:	rex.RXB and BYTE PTR [r15+0x47],r8b
   14000a30a:	rex.RXB iret 
   14000a30c:	rex.RXB
   14000a30d:	rex.RXB
   14000a30e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a312:	rex.RXB inc DWORD PTR [r13+r11*2+0x69]
   14000a317:	(bad)  
   14000a318:	cmp    DWORD PTR [rbp-0x45ca0024],esp
   14000a31e:	(bad)  
   14000a31f:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600a1df
   14000a325:	mov    edx,0xba35fffe
   14000a32a:	(bad)  
   14000a32b:	(bad)  
   14000a32c:	(bad)  
   14000a32d:	(bad)  
   14000a32e:	(bad)  
   14000a32f:	(bad)  
   14000a330:	(bad)  
   14000a331:	(bad)  
   14000a332:	(bad)  
   14000a333:	inc    ebx
   14000a335:	pop    rbp
   14000a336:	add    bh,bh
   14000a338:	ret    
   14000a339:	pop    rsp
   14000a33a:	add    bh,bh
   14000a33c:	ret    
   14000a33d:	pop    rsp
   14000a33e:	add    bh,bh
   14000a340:	ret    
   14000a341:	pop    rsp
   14000a342:	add    bh,bh
   14000a344:	stos   DWORD PTR es:[rdi],eax
   14000a345:	pop    rax
   14000a346:	or     eax,0x3a4b5eff
   14000a34b:	inc    DWORD PTR [rdi+0x47]
   14000a34e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a352:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a356:	rex.RXB iret 
   14000a358:	rex.RXB
   14000a359:	rex.RXB
   14000a35a:	rex.RXB and BYTE PTR [r8],r8b
	...
   14000a3fd:	add    BYTE PTR [rax],al
   14000a3ff:	add    BYTE PTR [rdi+0x47],al
   14000a402:	rex.RXB push r8
   14000a404:	rex.RXB
   14000a405:	rex.RXB
   14000a406:	rex.RXB out dx,eax
   14000a408:	rex.RXB
   14000a409:	rex.RXB
   14000a40a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a40e:	rex.RXB inc DWORD PTR [r8+0x7a]
   14000a412:	xchg   edi,eax
   14000a413:	push   QWORD PTR [rdi]
   14000a415:	mov    ah,0xf3
   14000a417:	push   QWORD PTR [rsi]
   14000a419:	mov    ebx,0xba35fffe
   14000a41e:	(bad)  
   14000a41f:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600a2df
   14000a425:	mov    edx,0xba35fffe
   14000a42a:	(bad)  
   14000a42b:	(bad)  
   14000a42c:	(bad)  
   14000a42d:	(bad)  
   14000a42e:	(bad)  
   14000a42f:	(bad)  
   14000a430:	(bad)  
   14000a431:	(bad)  
   14000a432:	(bad)  
   14000a433:	inc    ebx
   14000a435:	pop    rbp
   14000a436:	add    bh,bh
   14000a438:	ret    
   14000a439:	pop    rbp
   14000a43a:	add    bh,bh
   14000a43c:	ret    
   14000a43d:	pop    rsp
   14000a43e:	add    bh,bh
   14000a440:	ret    
   14000a441:	pop    rsp
   14000a442:	add    bh,bh
   14000a444:	ret    
   14000a445:	pop    rsp
   14000a446:	add    bh,bh
   14000a448:	mov    ebx,0x7dff045a
   14000a44d:	push   rax
   14000a44e:	sub    bh,bh
   14000a450:	rex.RXB
   14000a451:	rex.RXB
   14000a452:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a456:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a45a:	rex.RXB out dx,eax
   14000a45c:	rex.RXB
   14000a45d:	rex.RXB
   14000a45e:	rex.RXB push r8
	...
   14000a4fc:	rex.RXB
   14000a4fd:	rex.RXB
   14000a4fe:	rex.RXB jo 0x14000a548
   14000a501:	rex.RXB
   14000a502:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a506:	rex.RXB inc DWORD PTR [r14+0x4e]
   14000a50a:	push   rdx
   14000a50b:	(bad)  
   14000a50c:	cmp    edx,DWORD PTR [rdi-0x44c9003b]
   14000a512:	(bad)  
   14000a513:	push   QWORD PTR [rsi]
   14000a515:	mov    ebx,0xbb36fffe
   14000a51a:	(bad)  
   14000a51b:	push   QWORD PTR [rsi]
   14000a51d:	mov    ebx,0xba35fffe
   14000a522:	(bad)  
   14000a523:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600a3e3
   14000a529:	mov    edx,0xfffffffe
   14000a52e:	(bad)  
   14000a52f:	(bad)  
   14000a530:	(bad)  
   14000a531:	(bad)  
   14000a532:	(bad)  
   14000a533:	inc    ebx
   14000a535:	pop    rbp
   14000a536:	add    bh,bh
   14000a538:	ret    
   14000a539:	pop    rbp
   14000a53a:	add    bh,bh
   14000a53c:	ret    
   14000a53d:	pop    rbp
   14000a53e:	add    bh,bh
   14000a540:	ret    
   14000a541:	pop    rsp
   14000a542:	add    bh,bh
   14000a544:	ret    
   14000a545:	pop    rsp
   14000a546:	add    bh,bh
   14000a548:	ret    
   14000a549:	pop    rsp
   14000a54a:	add    bh,bh
   14000a54c:	ret    0x5b
   14000a54f:	call   FWORD PTR [rbp+rdx*2+0x484fff16]
   14000a556:	rex.XB inc DWORD PTR [r15+0x47]
   14000a55a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a55e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a562:	rex.RXB jo 0x14000a565
	...
   14000a5f5:	add    BYTE PTR [rax],al
   14000a5f7:	add    BYTE PTR [rdi+0x47],al
   14000a5fa:	rex.RXB lahf 
   14000a5fc:	rex.RXB
   14000a5fd:	rex.RXB
   14000a5fe:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a602:	rex.RXB inc DWORD PTR [r13+r11*2+0x69]
   14000a607:	(bad)  
   14000a608:	cmp    ah,BYTE PTR [rsi-0x44c90024]
   14000a60e:	(bad)  
   14000a60f:	push   QWORD PTR [rsi]
   14000a611:	mov    ebx,0xbb36fffe
   14000a616:	(bad)  
   14000a617:	push   QWORD PTR [rsi]
   14000a619:	mov    ebx,0xbb36fffe
   14000a61e:	(bad)  
   14000a61f:	push   QWORD PTR [rsi]
   14000a621:	mov    ebx,0xba35fffe
   14000a626:	(bad)  
   14000a627:	push   QWORD PTR [rip+0xfffffffffffffeba]        # 0x14000a4e7
   14000a62d:	(bad)  
   14000a62e:	(bad)  
   14000a62f:	(bad)  
   14000a630:	(bad)  
   14000a631:	(bad)  
   14000a632:	(bad)  
   14000a633:	inc    ebx
   14000a635:	pop    rsi
   14000a636:	add    bh,bh
   14000a638:	ret    
   14000a639:	pop    rbp
   14000a63a:	add    bh,bh
   14000a63c:	ret    
   14000a63d:	pop    rbp
   14000a63e:	add    bh,bh
   14000a640:	ret    
   14000a641:	pop    rbp
   14000a642:	add    bh,bh
   14000a644:	ret    
   14000a645:	pop    rsp
   14000a646:	add    bh,bh
   14000a648:	ret    
   14000a649:	pop    rsp
   14000a64a:	add    bh,bh
   14000a64c:	ret    
   14000a64d:	pop    rsp
   14000a64e:	add    bh,bh
   14000a650:	ret    0x5b
   14000a653:	jmp    FWORD PTR [rbx+0x5eff0d57]
   14000a659:	rex.WXB cmp dil,r15b
   14000a65c:	rex.RXB
   14000a65d:	rex.RXB
   14000a65e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a662:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a666:	rex.RXB lahf 
	...
   14000a6f0:	rex.RXB
   14000a6f1:	rex.RXB
   14000a6f2:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000a6f6:	rex.RXB lahf 
   14000a6f8:	rex.RXB
   14000a6f9:	rex.RXB
   14000a6fa:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a6fe:	rex.RXB inc DWORD PTR [r11+0x64]
   14000a702:	jne    0x14000a703
   14000a704:	cmp    BYTE PTR [rbp-0x43c8000d],dh
   14000a70a:	(bad)  
   14000a70b:	push   QWORD PTR [rdi]
   14000a70d:	mov    esp,0xbb36fffe
   14000a712:	(bad)  
   14000a713:	push   QWORD PTR [rsi]
   14000a715:	mov    ebx,0xbb36fffe
   14000a71a:	(bad)  
   14000a71b:	push   QWORD PTR [rsi]
   14000a71d:	mov    ebx,0xbb36fffe
   14000a722:	(bad)  
   14000a723:	push   QWORD PTR [rsi]
   14000a725:	mov    ebx,0xba35fffe
   14000a72a:	(bad)  
   14000a72b:	(bad)  
   14000a72c:	(bad)  
   14000a72d:	(bad)  
   14000a72e:	(bad)  
   14000a72f:	(bad)  
   14000a730:	(bad)  
   14000a731:	(bad)  
   14000a732:	(bad)  
   14000a733:	inc    esp
   14000a735:	pop    rsi
   14000a736:	add    bh,bh
   14000a738:	ret    
   14000a739:	pop    rsi
   14000a73a:	add    bh,bh
   14000a73c:	ret    
   14000a73d:	pop    rbp
   14000a73e:	add    bh,bh
   14000a740:	ret    
   14000a741:	pop    rbp
   14000a742:	add    bh,bh
   14000a744:	ret    
   14000a745:	pop    rbp
   14000a746:	add    bh,bh
   14000a748:	ret    
   14000a749:	pop    rsp
   14000a74a:	add    bh,bh
   14000a74c:	ret    
   14000a74d:	pop    rsp
   14000a74e:	add    bh,bh
   14000a750:	ret    
   14000a751:	pop    rsp
   14000a752:	add    bh,bh
   14000a754:	ret    0x5b
   14000a757:	(bad)  
   14000a758:	mov    edx,0x66ff045a
   14000a75d:	rex.WR xor rax,0x474747ff
   14000a763:	inc    DWORD PTR [rdi+0x47]
   14000a766:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a76a:	rex.RXB lahf 
	...
   14000a7ec:	rex.RXB
   14000a7ed:	rex.RXB
   14000a7ee:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000a7f2:	rex.RXB iret 
   14000a7f4:	rex.RXB
   14000a7f5:	rex.RXB
   14000a7f6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a7fa:	rex.RXB inc DWORD PTR [r9+0x73]
   14000a7fe:	mov    edi,?
   14000a800:	(bad)  
   14000a801:	mov    esp,0xbc37fffe
   14000a806:	(bad)  
   14000a807:	push   QWORD PTR [rdi]
   14000a809:	mov    esp,0xbc37fffe
   14000a80e:	(bad)  
   14000a80f:	push   QWORD PTR [rdi]
   14000a811:	mov    esp,0xbb36fffe
   14000a816:	(bad)  
   14000a817:	push   QWORD PTR [rsi]
   14000a819:	mov    ebx,0xbb36fffe
   14000a81e:	(bad)  
   14000a81f:	push   QWORD PTR [rsi]
   14000a821:	mov    ebx,0xbb36fffe
   14000a826:	(bad)  
   14000a827:	push   QWORD PTR [rsi]
   14000a829:	mov    ebx,0xfffffffe
   14000a82e:	(bad)  
   14000a82f:	(bad)  
   14000a830:	(bad)  
   14000a831:	(bad)  
   14000a832:	(bad)  
   14000a833:	inc    esp
   14000a835:	pop    rsi
   14000a836:	add    bh,bh
   14000a838:	(bad)  
   14000a839:	pop    rsi
   14000a83a:	add    bh,bh
   14000a83c:	ret    
   14000a83d:	pop    rsi
   14000a83e:	add    bh,bh
   14000a840:	ret    
   14000a841:	pop    rbp
   14000a842:	add    bh,bh
   14000a844:	ret    
   14000a845:	pop    rbp
   14000a846:	add    bh,bh
   14000a848:	ret    
   14000a849:	pop    rbp
   14000a84a:	add    bh,bh
   14000a84c:	ret    
   14000a84d:	pop    rsp
   14000a84e:	add    bh,bh
   14000a850:	ret    
   14000a851:	pop    rsp
   14000a852:	add    bh,bh
   14000a854:	ret    
   14000a855:	pop    rsp
   14000a856:	add    bh,bh
   14000a858:	ret    0x5b
   14000a85b:	inc    edx
   14000a85d:	pop    rbx
   14000a85e:	add    bh,bh
   14000a860:	jne    0x14000a8b1
   14000a862:	sub    al,0xff
   14000a864:	rex.RXB
   14000a865:	rex.RXB
   14000a866:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a86a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a86e:	rex.RXB iret 
   14000a870:	rex.RXB
   14000a871:	rex.RXB
   14000a872:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000a8e5:	add    BYTE PTR [rax],al
   14000a8e7:	add    BYTE PTR [rdi+0x47],al
   14000a8ea:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000a8ee:	rex.RXB iret 
   14000a8f0:	rex.RXB
   14000a8f1:	rex.RXB
   14000a8f2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a8f6:	rex.RXB inc DWORD PTR [r9+0x73]
   14000a8fa:	mov    edi,?
   14000a8fc:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000a903:	push   QWORD PTR [rdi]
   14000a905:	mov    esp,0xbc37fffe
   14000a90a:	(bad)  
   14000a90b:	push   QWORD PTR [rdi]
   14000a90d:	mov    esp,0xbc37fffe
   14000a912:	(bad)  
   14000a913:	push   QWORD PTR [rdi]
   14000a915:	mov    esp,0xbb36fffe
   14000a91a:	(bad)  
   14000a91b:	push   QWORD PTR [rsi]
   14000a91d:	mov    ebx,0xbb36fffe
   14000a922:	(bad)  
   14000a923:	push   QWORD PTR [rsi]
   14000a925:	mov    ebx,0xbb36fffe
   14000a92a:	(bad)  
   14000a92b:	(bad)  
   14000a92c:	(bad)  
   14000a92d:	(bad)  
   14000a92e:	(bad)  
   14000a92f:	(bad)  
   14000a930:	(bad)  
   14000a931:	(bad)  
   14000a932:	(bad)  
   14000a933:	inc    esp
   14000a935:	pop    rsi
   14000a936:	add    bh,bh
   14000a938:	(bad)  
   14000a939:	pop    rsi
   14000a93a:	add    bh,bh
   14000a93c:	(bad)  
   14000a93d:	pop    rsi
   14000a93e:	add    bh,bh
   14000a940:	ret    
   14000a941:	pop    rsi
   14000a942:	add    bh,bh
   14000a944:	ret    
   14000a945:	pop    rbp
   14000a946:	add    bh,bh
   14000a948:	ret    
   14000a949:	pop    rbp
   14000a94a:	add    bh,bh
   14000a94c:	ret    
   14000a94d:	pop    rbp
   14000a94e:	add    bh,bh
   14000a950:	ret    
   14000a951:	pop    rsp
   14000a952:	add    bh,bh
   14000a954:	ret    
   14000a955:	pop    rsp
   14000a956:	add    bh,bh
   14000a958:	ret    
   14000a959:	pop    rsp
   14000a95a:	add    bh,bh
   14000a95c:	ret    0x5b
   14000a95f:	inc    edx
   14000a961:	pop    rbx
   14000a962:	add    bh,bh
   14000a964:	jne    0x14000a9b5
   14000a966:	sub    al,0xff
   14000a968:	rex.RXB
   14000a969:	rex.RXB
   14000a96a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a96e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a972:	rex.RXB iret 
   14000a974:	rex.RXB
   14000a975:	rex.RXB
   14000a976:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000a9e5:	add    BYTE PTR [rax],al
   14000a9e7:	add    BYTE PTR [rdi+0x47],al
   14000a9ea:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14000a9ec:	rex.RXB
   14000a9ed:	rex.RXB
   14000a9ee:	rex.RXB inc DWORD PTR [r15+0x47]
   14000a9f2:	rex.RXB inc DWORD PTR [r9+0x73]
   14000a9f6:	mov    edi,?
   14000a9f8:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000a9fe:	(bad)  
   14000a9ff:	(bad)  
   14000aa00:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000aa07:	push   QWORD PTR [rdi]
   14000aa09:	mov    esp,0xbc37fffe
   14000aa0e:	(bad)  
   14000aa0f:	push   QWORD PTR [rdi]
   14000aa11:	mov    esp,0xbc37fffe
   14000aa16:	(bad)  
   14000aa17:	push   QWORD PTR [rdi]
   14000aa19:	mov    esp,0xbb36fffe
   14000aa1e:	(bad)  
   14000aa1f:	push   QWORD PTR [rsi]
   14000aa21:	mov    ebx,0xbb36fffe
   14000aa26:	(bad)  
   14000aa27:	push   QWORD PTR [rsi]
   14000aa29:	mov    ebx,0xfffffffe
   14000aa2e:	(bad)  
   14000aa2f:	(bad)  
   14000aa30:	(bad)  
   14000aa31:	(bad)  
   14000aa32:	(bad)  
   14000aa33:	inc    esp
   14000aa35:	pop    rsi
   14000aa36:	add    bh,bh
   14000aa38:	(bad)  
   14000aa39:	pop    rsi
   14000aa3a:	add    bh,bh
   14000aa3c:	(bad)  
   14000aa3d:	pop    rsi
   14000aa3e:	add    bh,bh
   14000aa40:	(bad)  
   14000aa41:	pop    rsi
   14000aa42:	add    bh,bh
   14000aa44:	ret    
   14000aa45:	pop    rsi
   14000aa46:	add    bh,bh
   14000aa48:	ret    
   14000aa49:	pop    rbp
   14000aa4a:	add    bh,bh
   14000aa4c:	ret    
   14000aa4d:	pop    rbp
   14000aa4e:	add    bh,bh
   14000aa50:	ret    
   14000aa51:	pop    rbp
   14000aa52:	add    bh,bh
   14000aa54:	ret    
   14000aa55:	pop    rsp
   14000aa56:	add    bh,bh
   14000aa58:	ret    
   14000aa59:	pop    rsp
   14000aa5a:	add    bh,bh
   14000aa5c:	ret    
   14000aa5d:	pop    rsp
   14000aa5e:	add    bh,bh
   14000aa60:	ret    0x5b
   14000aa63:	inc    edx
   14000aa65:	pop    rbx
   14000aa66:	add    bh,bh
   14000aa68:	jne    0x14000aab9
   14000aa6a:	sub    al,0xff
   14000aa6c:	rex.RXB
   14000aa6d:	rex.RXB
   14000aa6e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000aa72:	rex.RXB inc DWORD PTR [r15+0x47]
   14000aa76:	rex.RXB scas eax,DWORD PTR es:[rdi]
	...
   14000aae4:	rex.RXB
   14000aae5:	rex.RXB
   14000aae6:	rex.RXB lahf 
   14000aae8:	rex.RXB
   14000aae9:	rex.RXB
   14000aaea:	rex.RXB inc DWORD PTR [r15+0x47]
   14000aaee:	rex.RXB inc DWORD PTR [r9+0x73]
   14000aaf2:	mov    edi,?
   14000aaf4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000aafa:	(bad)  
   14000aafb:	(bad)  
   14000aafc:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000ab02:	(bad)  
   14000ab03:	(bad)  
   14000ab04:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000ab0b:	push   QWORD PTR [rdi]
   14000ab0d:	mov    esp,0xbc37fffe
   14000ab12:	(bad)  
   14000ab13:	push   QWORD PTR [rdi]
   14000ab15:	mov    esp,0xbc37fffe
   14000ab1a:	(bad)  
   14000ab1b:	push   QWORD PTR [rdi]
   14000ab1d:	mov    esp,0xbb36fffe
   14000ab22:	(bad)  
   14000ab23:	push   QWORD PTR [rsi]
   14000ab25:	mov    ebx,0xbb36fffe
   14000ab2a:	(bad)  
   14000ab2b:	(bad)  
   14000ab2c:	(bad)  
   14000ab2d:	(bad)  
   14000ab2e:	(bad)  
   14000ab2f:	(bad)  
   14000ab30:	(bad)  
   14000ab31:	(bad)  
   14000ab32:	(bad)  
   14000ab33:	inc    esp
   14000ab35:	pop    rdi
   14000ab36:	add    bh,bh
   14000ab38:	(bad)  
   14000ab39:	pop    rsi
   14000ab3a:	add    bh,bh
   14000ab3c:	(bad)  
   14000ab3d:	pop    rsi
   14000ab3e:	add    bh,bh
   14000ab40:	(bad)  
   14000ab41:	pop    rsi
   14000ab42:	add    bh,bh
   14000ab44:	(bad)  
   14000ab45:	pop    rsi
   14000ab46:	add    bh,bh
   14000ab48:	ret    
   14000ab49:	pop    rsi
   14000ab4a:	add    bh,bh
   14000ab4c:	ret    
   14000ab4d:	pop    rbp
   14000ab4e:	add    bh,bh
   14000ab50:	ret    
   14000ab51:	pop    rbp
   14000ab52:	add    bh,bh
   14000ab54:	ret    
   14000ab55:	pop    rbp
   14000ab56:	add    bh,bh
   14000ab58:	ret    
   14000ab59:	pop    rsp
   14000ab5a:	add    bh,bh
   14000ab5c:	ret    
   14000ab5d:	pop    rsp
   14000ab5e:	add    bh,bh
   14000ab60:	ret    
   14000ab61:	pop    rsp
   14000ab62:	add    bh,bh
   14000ab64:	ret    0x5b
   14000ab67:	inc    edx
   14000ab69:	pop    rbx
   14000ab6a:	add    bh,bh
   14000ab6c:	jne    0x14000abbd
   14000ab6e:	sub    al,0xff
   14000ab70:	rex.RXB
   14000ab71:	rex.RXB
   14000ab72:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ab76:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ab7a:	rex.RXB lahf 
	...
   14000abe0:	rex.RXB
   14000abe1:	rex.RXB
   14000abe2:	rex.RXB add BYTE PTR [r15+0x47],0x47
   14000abe7:	inc    DWORD PTR [rdi+0x47]
   14000abea:	rex.RXB inc DWORD PTR [r10+0x73]
   14000abee:	mov    edi,?
   14000abf0:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000abf6:	(bad)  
   14000abf7:	(bad)  
   14000abf8:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000abfe:	(bad)  
   14000abff:	(bad)  
   14000ac00:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000ac06:	(bad)  
   14000ac07:	(bad)  
   14000ac08:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000ac0f:	push   QWORD PTR [rdi]
   14000ac11:	mov    esp,0xbc37fffe
   14000ac16:	(bad)  
   14000ac17:	push   QWORD PTR [rdi]
   14000ac19:	mov    esp,0xbc37fffe
   14000ac1e:	(bad)  
   14000ac1f:	push   QWORD PTR [rdi]
   14000ac21:	mov    esp,0xbb36fffe
   14000ac26:	(bad)  
   14000ac27:	push   QWORD PTR [rsi]
   14000ac29:	mov    ebx,0xfffffffe
   14000ac2e:	(bad)  
   14000ac2f:	(bad)  
   14000ac30:	(bad)  
   14000ac31:	(bad)  
   14000ac32:	(bad)  
   14000ac33:	inc    esp
   14000ac35:	pop    rdi
   14000ac36:	add    bh,bh
   14000ac38:	(bad)  
   14000ac39:	pop    rdi
   14000ac3a:	add    bh,bh
   14000ac3c:	(bad)  
   14000ac3d:	pop    rsi
   14000ac3e:	add    bh,bh
   14000ac40:	(bad)  
   14000ac41:	pop    rsi
   14000ac42:	add    bh,bh
   14000ac44:	(bad)  
   14000ac45:	pop    rsi
   14000ac46:	add    bh,bh
   14000ac48:	(bad)  
   14000ac49:	pop    rsi
   14000ac4a:	add    bh,bh
   14000ac4c:	ret    
   14000ac4d:	pop    rsi
   14000ac4e:	add    bh,bh
   14000ac50:	ret    
   14000ac51:	pop    rbp
   14000ac52:	add    bh,bh
   14000ac54:	ret    
   14000ac55:	pop    rbp
   14000ac56:	add    bh,bh
   14000ac58:	ret    
   14000ac59:	pop    rbp
   14000ac5a:	add    bh,bh
   14000ac5c:	ret    
   14000ac5d:	pop    rsp
   14000ac5e:	add    bh,bh
   14000ac60:	ret    
   14000ac61:	pop    rsp
   14000ac62:	add    bh,bh
   14000ac64:	ret    
   14000ac65:	pop    rsp
   14000ac66:	add    bh,bh
   14000ac68:	ret    0x5b
   14000ac6b:	inc    edx
   14000ac6d:	pop    rbx
   14000ac6e:	add    bh,bh
   14000ac70:	jne    0x14000acc1
   14000ac72:	sub    al,0xff
   14000ac74:	rex.RXB
   14000ac75:	rex.RXB
   14000ac76:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ac7a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ac7e:	rex.RXB add BYTE PTR [r8],0x0
	...
   14000acda:	add    BYTE PTR [rax],al
   14000acdc:	rex.RXB
   14000acdd:	rex.RXB
   14000acde:	rex.RXB push r8
   14000ace0:	rex.RXB
   14000ace1:	rex.RXB
   14000ace2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ace6:	rex.RXB inc DWORD PTR [r11+0x6c]
   14000acea:	cmp    bh,0x39
   14000aced:	mov    esi,0xbd39fffe
   14000acf2:	(bad)  
   14000acf3:	(bad)  
   14000acf4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000acfa:	(bad)  
   14000acfb:	(bad)  
   14000acfc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000ad02:	(bad)  
   14000ad03:	(bad)  
   14000ad04:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000ad0a:	(bad)  
   14000ad0b:	(bad)  
   14000ad0c:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000ad13:	push   QWORD PTR [rdi]
   14000ad15:	mov    esp,0xbc37fffe
   14000ad1a:	(bad)  
   14000ad1b:	push   QWORD PTR [rdi]
   14000ad1d:	mov    esp,0xbc37fffe
   14000ad22:	(bad)  
   14000ad23:	push   QWORD PTR [rdi]
   14000ad25:	mov    esp,0xbb36fffe
   14000ad2a:	(bad)  
   14000ad2b:	(bad)  
   14000ad2c:	(bad)  
   14000ad2d:	(bad)  
   14000ad2e:	(bad)  
   14000ad2f:	(bad)  
   14000ad30:	(bad)  
   14000ad31:	(bad)  
   14000ad32:	(bad)  
   14000ad33:	inc    esp
   14000ad35:	pop    rdi
   14000ad36:	add    bh,bh
   14000ad38:	(bad)  
   14000ad39:	pop    rdi
   14000ad3a:	add    bh,bh
   14000ad3c:	(bad)  
   14000ad3d:	pop    rdi
   14000ad3e:	add    bh,bh
   14000ad40:	(bad)  
   14000ad41:	pop    rsi
   14000ad42:	add    bh,bh
   14000ad44:	(bad)  
   14000ad45:	pop    rsi
   14000ad46:	add    bh,bh
   14000ad48:	(bad)  
   14000ad49:	pop    rsi
   14000ad4a:	add    bh,bh
   14000ad4c:	(bad)  
   14000ad4d:	pop    rsi
   14000ad4e:	add    bh,bh
   14000ad50:	ret    
   14000ad51:	pop    rsi
   14000ad52:	add    bh,bh
   14000ad54:	ret    
   14000ad55:	pop    rbp
   14000ad56:	add    bh,bh
   14000ad58:	ret    
   14000ad59:	pop    rbp
   14000ad5a:	add    bh,bh
   14000ad5c:	ret    
   14000ad5d:	pop    rbp
   14000ad5e:	add    bh,bh
   14000ad60:	ret    
   14000ad61:	pop    rsp
   14000ad62:	add    bh,bh
   14000ad64:	ret    
   14000ad65:	pop    rsp
   14000ad66:	add    bh,bh
   14000ad68:	ret    
   14000ad69:	pop    rsp
   14000ad6a:	add    bh,bh
   14000ad6c:	ret    0x5b
   14000ad6f:	inc    edx
   14000ad71:	pop    rbx
   14000ad72:	add    bh,bh
   14000ad74:	ins    DWORD PTR es:[rdi],dx
   14000ad75:	xor    r15,r15
   14000ad78:	rex.RXB
   14000ad79:	rex.RXB
   14000ad7a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ad7e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ad82:	rex.RXB push r8
	...
   14000add8:	rex.RXB
   14000add9:	rex.RXB
   14000adda:	rex.RXB and BYTE PTR [r15+0x47],r8b
   14000adde:	rex.RXB out dx,eax
   14000ade0:	rex.RXB
   14000ade1:	rex.RXB
   14000ade2:	rex.RXB inc DWORD PTR [r13+r11*2+0x69]
   14000ade7:	(bad)  
   14000ade8:	cmp    dh,BYTE PTR [rdi-0x41c6000d]
   14000adee:	(bad)  
   14000adef:	(bad)  
   14000adf0:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000adf6:	(bad)  
   14000adf7:	(bad)  
   14000adf8:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000adfe:	(bad)  
   14000adff:	(bad)  
   14000ae00:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000ae06:	(bad)  
   14000ae07:	(bad)  
   14000ae08:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000ae0e:	(bad)  
   14000ae0f:	(bad)  
   14000ae10:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000ae17:	push   QWORD PTR [rdi]
   14000ae19:	mov    esp,0xbc37fffe
   14000ae1e:	(bad)  
   14000ae1f:	push   QWORD PTR [rdi]
   14000ae21:	mov    esp,0xbc37fffe
   14000ae26:	(bad)  
   14000ae27:	push   QWORD PTR [rdi]
   14000ae29:	mov    esp,0xfffffffe
   14000ae2e:	(bad)  
   14000ae2f:	(bad)  
   14000ae30:	(bad)  
   14000ae31:	(bad)  
   14000ae32:	(bad)  
   14000ae33:	inc    esp
   14000ae35:	(bad)  
   14000ae36:	add    bh,bh
   14000ae38:	(bad)  
   14000ae39:	pop    rdi
   14000ae3a:	add    bh,bh
   14000ae3c:	(bad)  
   14000ae3d:	pop    rdi
   14000ae3e:	add    bh,bh
   14000ae40:	(bad)  
   14000ae41:	pop    rdi
   14000ae42:	add    bh,bh
   14000ae44:	(bad)  
   14000ae45:	pop    rsi
   14000ae46:	add    bh,bh
   14000ae48:	(bad)  
   14000ae49:	pop    rsi
   14000ae4a:	add    bh,bh
   14000ae4c:	(bad)  
   14000ae4d:	pop    rsi
   14000ae4e:	add    bh,bh
   14000ae50:	(bad)  
   14000ae51:	pop    rsi
   14000ae52:	add    bh,bh
   14000ae54:	ret    
   14000ae55:	pop    rsi
   14000ae56:	add    bh,bh
   14000ae58:	ret    
   14000ae59:	pop    rbp
   14000ae5a:	add    bh,bh
   14000ae5c:	ret    
   14000ae5d:	pop    rbp
   14000ae5e:	add    bh,bh
   14000ae60:	ret    
   14000ae61:	pop    rbp
   14000ae62:	add    bh,bh
   14000ae64:	ret    
   14000ae65:	pop    rsp
   14000ae66:	add    bh,bh
   14000ae68:	ret    
   14000ae69:	pop    rsp
   14000ae6a:	add    bh,bh
   14000ae6c:	ret    
   14000ae6d:	pop    rsp
   14000ae6e:	add    bh,bh
   14000ae70:	ret    0x5b
   14000ae73:	(bad)  
   14000ae74:	mov    edx,0x5eff045a
   14000ae79:	rex.WXB cmp dil,r15b
   14000ae7c:	rex.RXB
   14000ae7d:	rex.RXB
   14000ae7e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ae82:	rex.RXB out dx,eax
   14000ae84:	rex.RXB
   14000ae85:	rex.RXB
   14000ae86:	rex.RXB and BYTE PTR [r8],r8b
	...
   14000aed5:	add    BYTE PTR [rax],al
   14000aed7:	add    BYTE PTR [rdi+0x47],al
   14000aeda:	rex.RXB mov r15d,0xff474747
   14000aee0:	rex.RX
   14000aee1:	rex.WRX push rdx
   14000aee3:	(bad)  
   14000aee4:	cmp    al,0xa8
   14000aee6:	fdiv   st(7),st
   14000aee8:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000aeee:	(bad)  
   14000aeef:	(bad)  
   14000aef0:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000aef6:	(bad)  
   14000aef7:	(bad)  
   14000aef8:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000aefe:	(bad)  
   14000aeff:	(bad)  
   14000af00:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000af06:	(bad)  
   14000af07:	(bad)  
   14000af08:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000af0e:	(bad)  
   14000af0f:	(bad)  
   14000af10:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000af17:	push   QWORD PTR [rdi]
   14000af19:	mov    esp,0xbc37fffe
   14000af1e:	(bad)  
   14000af1f:	push   QWORD PTR [rdi]
   14000af21:	mov    esp,0xbc37fffe
   14000af26:	(bad)  
   14000af27:	push   QWORD PTR [rdi]
   14000af29:	mov    esp,0xfffffffe
   14000af2e:	(bad)  
   14000af2f:	(bad)  
   14000af30:	(bad)  
   14000af31:	(bad)  
   14000af32:	(bad)  
   14000af33:	inc    ebp
   14000af35:	(bad)  
   14000af36:	add    bh,bh
   14000af38:	(bad)  
   14000af39:	(bad)  
   14000af3a:	add    bh,bh
   14000af3c:	(bad)  
   14000af3d:	pop    rdi
   14000af3e:	add    bh,bh
   14000af40:	(bad)  
   14000af41:	pop    rdi
   14000af42:	add    bh,bh
   14000af44:	(bad)  
   14000af45:	pop    rdi
   14000af46:	add    bh,bh
   14000af48:	(bad)  
   14000af49:	pop    rsi
   14000af4a:	add    bh,bh
   14000af4c:	(bad)  
   14000af4d:	pop    rsi
   14000af4e:	add    bh,bh
   14000af50:	(bad)  
   14000af51:	pop    rsi
   14000af52:	add    bh,bh
   14000af54:	(bad)  
   14000af55:	pop    rsi
   14000af56:	add    bh,bh
   14000af58:	ret    
   14000af59:	pop    rsi
   14000af5a:	add    bh,bh
   14000af5c:	ret    
   14000af5d:	pop    rbp
   14000af5e:	add    bh,bh
   14000af60:	ret    
   14000af61:	pop    rbp
   14000af62:	add    bh,bh
   14000af64:	ret    
   14000af65:	pop    rbp
   14000af66:	add    bh,bh
   14000af68:	ret    
   14000af69:	pop    rsp
   14000af6a:	add    bh,bh
   14000af6c:	ret    
   14000af6d:	pop    rsp
   14000af6e:	add    bh,bh
   14000af70:	ret    
   14000af71:	pop    rsp
   14000af72:	add    bh,bh
   14000af74:	ret    0x5b
   14000af77:	jmp    FWORD PTR [rbx+0x4fff0d57]
   14000af7d:	rex.W
   14000af7e:	rex.XB inc DWORD PTR [r15+0x47]
   14000af82:	rex.RXB inc DWORD PTR [r15+0x47]
   14000af86:	rex.RXB mov r15d,0x0
	...
   14000afd4:	rex.RXB
   14000afd5:	rex.RXB
   14000afd6:	rex.RXB jo 0x14000b020
   14000afd9:	rex.RXB
   14000afda:	rex.RXB inc DWORD PTR [r15+0x47]
   14000afde:	rex.RXB (bad) 
   14000afe0:	ds cdq 
   14000afe2:	(bad)  
   14000afe5:	mov    esi,0xbe39fffe
   14000afea:	(bad)  
   14000afeb:	(bad)  
   14000afec:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000aff2:	(bad)  
   14000aff3:	(bad)  
   14000aff4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000affa:	(bad)  
   14000affb:	(bad)  
   14000affc:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000b002:	(bad)  
   14000b003:	(bad)  
   14000b004:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000b00a:	(bad)  
   14000b00b:	(bad)  
   14000b00c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000b012:	(bad)  
   14000b013:	(bad)  
   14000b014:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000b01b:	push   QWORD PTR [rdi]
   14000b01d:	mov    esp,0xbc37fffe
   14000b022:	(bad)  
   14000b023:	push   QWORD PTR [rdi]
   14000b025:	mov    esp,0xbc37fffe
   14000b02a:	(bad)  
   14000b02b:	(bad)  
   14000b02c:	(bad)  
   14000b02d:	(bad)  
   14000b02e:	(bad)  
   14000b02f:	(bad)  
   14000b030:	(bad)  
   14000b031:	(bad)  
   14000b032:	(bad)  
   14000b033:	inc    ebp
   14000b035:	(bad)  
   14000b036:	add    bh,bh
   14000b038:	(bad)
   14000b03b:	inc    esp
   14000b03d:	(bad)  
   14000b03e:	add    bh,bh
   14000b040:	(bad)  
   14000b041:	pop    rdi
   14000b042:	add    bh,bh
   14000b044:	(bad)  
   14000b045:	pop    rdi
   14000b046:	add    bh,bh
   14000b048:	(bad)  
   14000b049:	pop    rdi
   14000b04a:	add    bh,bh
   14000b04c:	(bad)  
   14000b04d:	pop    rsi
   14000b04e:	add    bh,bh
   14000b050:	(bad)  
   14000b051:	pop    rsi
   14000b052:	add    bh,bh
   14000b054:	(bad)  
   14000b055:	pop    rsi
   14000b056:	add    bh,bh
   14000b058:	(bad)  
   14000b059:	pop    rsi
   14000b05a:	add    bh,bh
   14000b05c:	ret    
   14000b05d:	pop    rsi
   14000b05e:	add    bh,bh
   14000b060:	ret    
   14000b061:	pop    rbp
   14000b062:	add    bh,bh
   14000b064:	ret    
   14000b065:	pop    rbp
   14000b066:	add    bh,bh
   14000b068:	ret    
   14000b069:	pop    rbp
   14000b06a:	add    bh,bh
   14000b06c:	ret    
   14000b06d:	pop    rsp
   14000b06e:	add    bh,bh
   14000b070:	ret    
   14000b071:	pop    rsp
   14000b072:	add    bh,bh
   14000b074:	ret    
   14000b075:	pop    rsp
   14000b076:	add    bh,bh
   14000b078:	ret    0x5b
   14000b07b:	call   FWORD PTR [rbp+rdx*2+0x4747ff16]
   14000b082:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b086:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b08a:	rex.RXB jo 0x14000b08d
	...
   14000b0cd:	add    BYTE PTR [rax],al
   14000b0cf:	add    BYTE PTR [rdi+0x47],al
   14000b0d2:	rex.RXB and BYTE PTR [r15+0x47],r8b
   14000b0d6:	rex.RXB out dx,eax
   14000b0d8:	rex.RXB
   14000b0d9:	rex.RXB
   14000b0da:	rex.RXB inc DWORD PTR [r11+0x6d]
   14000b0de:	cmp    bh,0x3a
   14000b0e1:	mov    edi,0xbe3afffe
   14000b0e6:	(bad)  
   14000b0e7:	(bad)  
   14000b0e8:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000b0ee:	(bad)  
   14000b0ef:	(bad)  
   14000b0f0:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000b0f6:	(bad)  
   14000b0f7:	(bad)  
   14000b0f8:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000b0fe:	(bad)  
   14000b0ff:	(bad)  
   14000b100:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000b106:	(bad)  
   14000b107:	(bad)  
   14000b108:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000b10e:	(bad)  
   14000b10f:	(bad)  
   14000b110:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000b116:	(bad)  
   14000b117:	(bad)  
   14000b118:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000b11f:	push   QWORD PTR [rdi]
   14000b121:	mov    esp,0xbc37fffe
   14000b126:	(bad)  
   14000b127:	push   QWORD PTR [rdi]
   14000b129:	mov    esp,0xfffffffe
   14000b12e:	(bad)  
   14000b12f:	(bad)  
   14000b130:	(bad)  
   14000b131:	(bad)  
   14000b132:	(bad)  
   14000b133:	inc    ebp
   14000b135:	(bad)  
   14000b136:	add    bh,bh
   14000b138:	(bad)
   14000b13b:	inc    ebp
   14000b13d:	(bad)  
   14000b13e:	add    bh,bh
   14000b140:	(bad)  
   14000b141:	(bad)  
   14000b142:	add    bh,bh
   14000b144:	(bad)  
   14000b145:	pop    rdi
   14000b146:	add    bh,bh
   14000b148:	(bad)  
   14000b149:	pop    rdi
   14000b14a:	add    bh,bh
   14000b14c:	(bad)  
   14000b14d:	pop    rdi
   14000b14e:	add    bh,bh
   14000b150:	(bad)  
   14000b151:	pop    rsi
   14000b152:	add    bh,bh
   14000b154:	(bad)  
   14000b155:	pop    rsi
   14000b156:	add    bh,bh
   14000b158:	(bad)  
   14000b159:	pop    rsi
   14000b15a:	add    bh,bh
   14000b15c:	(bad)  
   14000b15d:	pop    rsi
   14000b15e:	add    bh,bh
   14000b160:	ret    
   14000b161:	pop    rsi
   14000b162:	add    bh,bh
   14000b164:	ret    
   14000b165:	pop    rbp
   14000b166:	add    bh,bh
   14000b168:	ret    
   14000b169:	pop    rbp
   14000b16a:	add    bh,bh
   14000b16c:	ret    
   14000b16d:	pop    rbp
   14000b16e:	add    bh,bh
   14000b170:	ret    
   14000b171:	pop    rsp
   14000b172:	add    bh,bh
   14000b174:	ret    
   14000b175:	pop    rsp
   14000b176:	add    bh,bh
   14000b178:	ret    
   14000b179:	pop    rsp
   14000b17a:	add    bh,bh
   14000b17c:	ret    0x5b
   14000b17f:	jmp    FWORD PTR [rbp+0x4d]
   14000b182:	xor    edi,edi
   14000b184:	rex.RXB
   14000b185:	rex.RXB
   14000b186:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b18a:	rex.RXB out dx,eax
   14000b18c:	rex.RXB
   14000b18d:	rex.RXB
   14000b18e:	rex.RXB and BYTE PTR [r8],r8b
	...
   14000b1cd:	add    BYTE PTR [rax],al
   14000b1cf:	add    BYTE PTR [rdi+0x47],al
   14000b1d2:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14000b1d4:	rex.RXB
   14000b1d5:	rex.RXB
   14000b1d6:	rex.RXB inc DWORD PTR [r14+0x4f]
   14000b1da:	push   rdx
   14000b1db:	(bad)  
   14000b1dc:	cmp    edi,DWORD PTR [rax-0x40c5000d]
   14000b1e2:	(bad)  
   14000b1e3:	(bad)  
   14000b1e4:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000b1ea:	(bad)  
   14000b1eb:	(bad)  
   14000b1ec:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000b1f2:	(bad)  
   14000b1f3:	(bad)  
   14000b1f4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000b1fa:	(bad)  
   14000b1fb:	(bad)  
   14000b1fc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000b202:	(bad)  
   14000b203:	(bad)  
   14000b204:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000b20a:	(bad)  
   14000b20b:	(bad)  
   14000b20c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000b212:	(bad)  
   14000b213:	(bad)  
   14000b214:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000b21a:	(bad)  
   14000b21b:	(bad)  
   14000b21c:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000b223:	push   QWORD PTR [rdi]
   14000b225:	mov    esp,0xbc37fffe
   14000b22a:	(bad)  
   14000b22b:	(bad)  
   14000b22c:	(bad)  
   14000b22d:	(bad)  
   14000b22e:	(bad)  
   14000b22f:	(bad)  
   14000b230:	(bad)  
   14000b231:	(bad)  
   14000b232:	(bad)  
   14000b233:	inc    ebp
   14000b235:	(bad)  
   14000b236:	add    bh,bh
   14000b238:	(bad)
   14000b23b:	inc    ebp
   14000b23d:	(bad)  
   14000b23e:	add    bh,bh
   14000b240:	(bad)
   14000b243:	inc    esp
   14000b245:	(bad)  
   14000b246:	add    bh,bh
   14000b248:	(bad)  
   14000b249:	pop    rdi
   14000b24a:	add    bh,bh
   14000b24c:	(bad)  
   14000b24d:	pop    rdi
   14000b24e:	add    bh,bh
   14000b250:	(bad)  
   14000b251:	pop    rdi
   14000b252:	add    bh,bh
   14000b254:	(bad)  
   14000b255:	pop    rsi
   14000b256:	add    bh,bh
   14000b258:	(bad)  
   14000b259:	pop    rsi
   14000b25a:	add    bh,bh
   14000b25c:	(bad)  
   14000b25d:	pop    rsi
   14000b25e:	add    bh,bh
   14000b260:	(bad)  
   14000b261:	pop    rsi
   14000b262:	add    bh,bh
   14000b264:	ret    
   14000b265:	pop    rsi
   14000b266:	add    bh,bh
   14000b268:	ret    
   14000b269:	pop    rbp
   14000b26a:	add    bh,bh
   14000b26c:	ret    
   14000b26d:	pop    rbp
   14000b26e:	add    bh,bh
   14000b270:	ret    
   14000b271:	pop    rbp
   14000b272:	add    bh,bh
   14000b274:	ret    
   14000b275:	pop    rsp
   14000b276:	add    bh,bh
   14000b278:	ret    
   14000b279:	pop    rsp
   14000b27a:	add    bh,bh
   14000b27c:	ret    
   14000b27d:	pop    rsp
   14000b27e:	add    bh,bh
   14000b280:	mov    ebx,0x4fff045a
   14000b285:	rex.W
   14000b286:	rex.XB inc DWORD PTR [r15+0x47]
   14000b28a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b28e:	rex.RXB scas eax,DWORD PTR es:[rdi]
	...
   14000b2cc:	rex.RXB
   14000b2cd:	rex.RXB
   14000b2ce:	rex.RXB
   14000b2cf:	rex
   14000b2d0:	rex.RXB
   14000b2d1:	rex.RXB
   14000b2d2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b2d6:	rex.RXB (bad) 
   14000b2d8:	(bad)  
   14000b2d9:	xchg   edx,eax
   14000b2da:	mov    ecx,0xfebf3aff
   14000b2df:	(bad)  
   14000b2e0:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000b2e6:	(bad)  
   14000b2e7:	(bad)  
   14000b2e8:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000b2ee:	(bad)  
   14000b2ef:	(bad)  
   14000b2f0:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000b2f6:	(bad)  
   14000b2f7:	(bad)  
   14000b2f8:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000b2fe:	(bad)  
   14000b2ff:	(bad)  
   14000b300:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000b306:	(bad)  
   14000b307:	(bad)  
   14000b308:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000b30e:	(bad)  
   14000b30f:	(bad)  
   14000b310:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000b316:	(bad)  
   14000b317:	(bad)  
   14000b318:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000b31e:	(bad)  
   14000b31f:	(bad)  
   14000b320:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000b327:	push   QWORD PTR [rdi]
   14000b329:	mov    esp,0xfffffffe
   14000b32e:	(bad)  
   14000b32f:	(bad)  
   14000b330:	(bad)  
   14000b331:	(bad)  
   14000b332:	(bad)  
   14000b333:	inc    ebp
   14000b335:	(bad)  
   14000b336:	add    bh,bh
   14000b338:	(bad)
   14000b33b:	inc    ebp
   14000b33d:	(bad)  
   14000b33e:	add    bh,bh
   14000b340:	(bad)
   14000b343:	inc    ebp
   14000b345:	(bad)  
   14000b346:	add    bh,bh
   14000b348:	(bad)  
   14000b349:	(bad)  
   14000b34a:	add    bh,bh
   14000b34c:	(bad)  
   14000b34d:	pop    rdi
   14000b34e:	add    bh,bh
   14000b350:	(bad)  
   14000b351:	pop    rdi
   14000b352:	add    bh,bh
   14000b354:	(bad)  
   14000b355:	pop    rdi
   14000b356:	add    bh,bh
   14000b358:	(bad)  
   14000b359:	pop    rsi
   14000b35a:	add    bh,bh
   14000b35c:	(bad)  
   14000b35d:	pop    rsi
   14000b35e:	add    bh,bh
   14000b360:	(bad)  
   14000b361:	pop    rsi
   14000b362:	add    bh,bh
   14000b364:	(bad)  
   14000b365:	pop    rsi
   14000b366:	add    bh,bh
   14000b368:	ret    
   14000b369:	pop    rsi
   14000b36a:	add    bh,bh
   14000b36c:	ret    
   14000b36d:	pop    rbp
   14000b36e:	add    bh,bh
   14000b370:	ret    
   14000b371:	pop    rbp
   14000b372:	add    bh,bh
   14000b374:	ret    
   14000b375:	pop    rbp
   14000b376:	add    bh,bh
   14000b378:	ret    
   14000b379:	pop    rsp
   14000b37a:	add    bh,bh
   14000b37c:	ret    
   14000b37d:	pop    rsp
   14000b37e:	add    bh,bh
   14000b380:	ret    
   14000b381:	pop    rsp
   14000b382:	add    bh,bh
   14000b384:	xchg   esp,eax
   14000b385:	push   rsp
   14000b386:	sbb    edi,edi
   14000b388:	rex.RXB
   14000b389:	rex.RXB
   14000b38a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b38e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b392:	rex.RXB
   14000b393:	add    BYTE PTR [rax],al
	...
   14000b3ca:	add    BYTE PTR [rax],al
   14000b3cc:	rex.RXB
   14000b3cd:	rex.RXB
   14000b3ce:	rex.RXB mov r15d,0xff474747
   14000b3d4:	rex.RX push rsi
   14000b3d6:	pop    rsi
   14000b3d7:	(bad)  
   14000b3d8:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000b3de:	(bad)  
   14000b3df:	(bad)  
   14000b3e0:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000b3e6:	(bad)  
   14000b3e7:	(bad)  
   14000b3e8:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000b3ee:	(bad)  
   14000b3ef:	(bad)  
   14000b3f0:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000b3f6:	(bad)  
   14000b3f7:	(bad)  
   14000b3f8:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000b3fe:	(bad)  
   14000b3ff:	(bad)  
   14000b400:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000b406:	(bad)  
   14000b407:	(bad)  
   14000b408:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000b40e:	(bad)  
   14000b40f:	(bad)  
   14000b410:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000b416:	(bad)  
   14000b417:	(bad)  
   14000b418:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000b41e:	(bad)  
   14000b41f:	(bad)  
   14000b420:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000b426:	(bad)  
   14000b427:	(bad)  
   14000b428:	cmp    BYTE PTR [rsi+rdi*8-0x1],bh
   14000b42f:	(bad)  
   14000b430:	(bad)  
   14000b431:	(bad)  
   14000b432:	(bad)  
   14000b433:	inc    ebp
   14000b435:	(bad)  
   14000b436:	add    bh,bh
   14000b438:	(bad)
   14000b43b:	inc    ebp
   14000b43d:	(bad)  
   14000b43e:	add    bh,bh
   14000b440:	(bad)
   14000b443:	inc    ebp
   14000b445:	(bad)  
   14000b446:	add    bh,bh
   14000b448:	(bad)
   14000b44b:	inc    esp
   14000b44d:	(bad)  
   14000b44e:	add    bh,bh
   14000b450:	(bad)  
   14000b451:	pop    rdi
   14000b452:	add    bh,bh
   14000b454:	(bad)  
   14000b455:	pop    rdi
   14000b456:	add    bh,bh
   14000b458:	(bad)  
   14000b459:	pop    rdi
   14000b45a:	add    bh,bh
   14000b45c:	(bad)  
   14000b45d:	pop    rsi
   14000b45e:	add    bh,bh
   14000b460:	(bad)  
   14000b461:	pop    rsi
   14000b462:	add    bh,bh
   14000b464:	(bad)  
   14000b465:	pop    rsi
   14000b466:	add    bh,bh
   14000b468:	(bad)  
   14000b469:	pop    rsi
   14000b46a:	add    bh,bh
   14000b46c:	ret    
   14000b46d:	pop    rsi
   14000b46e:	add    bh,bh
   14000b470:	ret    
   14000b471:	pop    rbp
   14000b472:	add    bh,bh
   14000b474:	ret    
   14000b475:	pop    rbp
   14000b476:	add    bh,bh
   14000b478:	ret    
   14000b479:	pop    rbp
   14000b47a:	add    bh,bh
   14000b47c:	ret    
   14000b47d:	pop    rsp
   14000b47e:	add    bh,bh
   14000b480:	ret    
   14000b481:	pop    rsp
   14000b482:	add    bh,bh
   14000b484:	ret    
   14000b485:	pop    rsp
   14000b486:	add    bh,bh
   14000b488:	push   rdi
   14000b489:	rex.WX
   14000b48a:	inc    DWORD PTR ds:[rdi+0x47]
   14000b48e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b492:	rex.RXB mov r15d,0x0
	...
   14000b4c8:	rex.RXB
   14000b4c9:	rex.RXB
   14000b4ca:	rex.RXB
   14000b4cb:	rex
   14000b4cc:	rex.RXB
   14000b4cd:	rex.RXB
   14000b4ce:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b4d2:	rex.RXB inc DWORD PTR [r8-0x6d]
   14000b4d6:	mov    ecx,0xfec03bff
   14000b4db:	(bad)  
   14000b4dc:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000b4e2:	(bad)  
   14000b4e3:	(bad)  
   14000b4e4:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000b4ea:	(bad)  
   14000b4eb:	(bad)  
   14000b4ec:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000b4f2:	(bad)  
   14000b4f3:	(bad)  
   14000b4f4:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000b4fa:	(bad)  
   14000b4fb:	(bad)  
   14000b4fc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000b502:	(bad)  
   14000b503:	(bad)  
   14000b504:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000b50a:	(bad)  
   14000b50b:	(bad)  
   14000b50c:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000b512:	(bad)  
   14000b513:	(bad)  
   14000b514:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000b51a:	(bad)  
   14000b51b:	(bad)  
   14000b51c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000b522:	(bad)  
   14000b523:	(bad)  
   14000b524:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000b52a:	(bad)  
   14000b52b:	(bad)  
   14000b52c:	(bad)  
   14000b52d:	(bad)  
   14000b52e:	(bad)  
   14000b52f:	(bad)  
   14000b530:	(bad)  
   14000b531:	(bad)  
   14000b532:	(bad)  
   14000b533:	inc    ebp
   14000b535:	(bad)  
   14000b536:	add    bh,bh
   14000b538:	(bad)
   14000b53b:	inc    ebp
   14000b53d:	(bad)  
   14000b53e:	add    bh,bh
   14000b540:	(bad)
   14000b543:	inc    ebp
   14000b545:	(bad)  
   14000b546:	add    bh,bh
   14000b548:	(bad)
   14000b54b:	inc    ebp
   14000b54d:	(bad)  
   14000b54e:	add    bh,bh
   14000b550:	(bad)  
   14000b551:	(bad)  
   14000b552:	add    bh,bh
   14000b554:	(bad)  
   14000b555:	pop    rdi
   14000b556:	add    bh,bh
   14000b558:	(bad)  
   14000b559:	pop    rdi
   14000b55a:	add    bh,bh
   14000b55c:	(bad)  
   14000b55d:	pop    rdi
   14000b55e:	add    bh,bh
   14000b560:	(bad)  
   14000b561:	pop    rsi
   14000b562:	add    bh,bh
   14000b564:	(bad)  
   14000b565:	pop    rsi
   14000b566:	add    bh,bh
   14000b568:	(bad)  
   14000b569:	pop    rsi
   14000b56a:	add    bh,bh
   14000b56c:	(bad)  
   14000b56d:	pop    rsi
   14000b56e:	add    bh,bh
   14000b570:	ret    
   14000b571:	pop    rsi
   14000b572:	add    bh,bh
   14000b574:	ret    
   14000b575:	pop    rbp
   14000b576:	add    bh,bh
   14000b578:	ret    
   14000b579:	pop    rbp
   14000b57a:	add    bh,bh
   14000b57c:	ret    
   14000b57d:	pop    rbp
   14000b57e:	add    bh,bh
   14000b580:	ret    
   14000b581:	pop    rsp
   14000b582:	add    bh,bh
   14000b584:	ret    
   14000b585:	pop    rsp
   14000b586:	add    bh,bh
   14000b588:	xchg   ebp,eax
   14000b589:	push   rsp
   14000b58a:	sbb    edi,edi
   14000b58c:	rex.RXB
   14000b58d:	rex.RXB
   14000b58e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b592:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b596:	rex.RXB
   14000b597:	add    BYTE PTR [rax],al
	...
   14000b5c6:	add    BYTE PTR [rax],al
   14000b5c8:	rex.RXB
   14000b5c9:	rex.RXB
   14000b5ca:	rex.RXB lahf 
   14000b5cc:	rex.RXB
   14000b5cd:	rex.RXB
   14000b5ce:	rex.RXB inc DWORD PTR [r14+0x56]
   14000b5d2:	pop    rsi
   14000b5d3:	(bad)  
   14000b5d4:	cmp    eax,eax
   14000b5d6:	(bad)  
   14000b5d7:	(bad)  
   14000b5d8:	cmp    eax,eax
   14000b5da:	(bad)  
   14000b5db:	(bad)  
   14000b5dc:	cmp    eax,eax
   14000b5de:	(bad)  
   14000b5df:	(bad)  
   14000b5e0:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000b5e6:	(bad)  
   14000b5e7:	(bad)  
   14000b5e8:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000b5ee:	(bad)  
   14000b5ef:	(bad)  
   14000b5f0:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000b5f6:	(bad)  
   14000b5f7:	(bad)  
   14000b5f8:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000b5fe:	(bad)  
   14000b5ff:	(bad)  
   14000b600:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000b606:	(bad)  
   14000b607:	(bad)  
   14000b608:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000b60e:	(bad)  
   14000b60f:	(bad)  
   14000b610:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000b616:	(bad)  
   14000b617:	(bad)  
   14000b618:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000b61e:	(bad)  
   14000b61f:	(bad)  
   14000b620:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000b626:	(bad)  
   14000b627:	(bad)  
   14000b628:	cmp    BYTE PTR [rbp-0x2],bh
   14000b62e:	(bad)  
   14000b62f:	(bad)  
   14000b630:	(bad)  
   14000b631:	(bad)  
   14000b632:	(bad)  
   14000b633:	inc    ebp
   14000b635:	(bad)  
   14000b636:	add    bh,bh
   14000b638:	(bad)
   14000b63b:	inc    ebp
   14000b63d:	(bad)  
   14000b63e:	add    bh,bh
   14000b640:	(bad)
   14000b643:	inc    ebp
   14000b645:	(bad)  
   14000b646:	add    bh,bh
   14000b648:	(bad)
   14000b64b:	inc    ebp
   14000b64d:	(bad)  
   14000b64e:	add    bh,bh
   14000b650:	(bad)
   14000b653:	inc    esp
   14000b655:	(bad)  
   14000b656:	add    bh,bh
   14000b658:	(bad)  
   14000b659:	pop    rdi
   14000b65a:	add    bh,bh
   14000b65c:	(bad)  
   14000b65d:	pop    rdi
   14000b65e:	add    bh,bh
   14000b660:	(bad)  
   14000b661:	pop    rdi
   14000b662:	add    bh,bh
   14000b664:	(bad)  
   14000b665:	pop    rsi
   14000b666:	add    bh,bh
   14000b668:	(bad)  
   14000b669:	pop    rsi
   14000b66a:	add    bh,bh
   14000b66c:	(bad)  
   14000b66d:	pop    rsi
   14000b66e:	add    bh,bh
   14000b670:	(bad)  
   14000b671:	pop    rsi
   14000b672:	add    bh,bh
   14000b674:	ret    
   14000b675:	pop    rsi
   14000b676:	add    bh,bh
   14000b678:	ret    
   14000b679:	pop    rbp
   14000b67a:	add    bh,bh
   14000b67c:	ret    
   14000b67d:	pop    rbp
   14000b67e:	add    bh,bh
   14000b680:	ret    
   14000b681:	pop    rbp
   14000b682:	add    bh,bh
   14000b684:	ret    
   14000b685:	pop    rsp
   14000b686:	add    bh,bh
   14000b688:	ret    
   14000b689:	pop    rsp
   14000b68a:	add    bh,bh
   14000b68c:	push   rdi
   14000b68d:	rex.WX
   14000b68e:	inc    DWORD PTR ds:[rdi+0x47]
   14000b692:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b696:	rex.RXB lahf 
	...
   14000b6c4:	rex.RXB
   14000b6c5:	rex.RXB
   14000b6c6:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000b6ca:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b6ce:	rex.RXB inc DWORD PTR [r8-0x6d]
   14000b6d2:	mov    ecx,0xfec03bff
   14000b6d7:	(bad)  
   14000b6d8:	cmp    eax,eax
   14000b6da:	(bad)  
   14000b6db:	(bad)  
   14000b6dc:	cmp    eax,eax
   14000b6de:	(bad)  
   14000b6df:	(bad)  
   14000b6e0:	cmp    eax,eax
   14000b6e2:	(bad)  
   14000b6e3:	(bad)  
   14000b6e4:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000b6ea:	(bad)  
   14000b6eb:	(bad)  
   14000b6ec:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000b6f2:	(bad)  
   14000b6f3:	(bad)  
   14000b6f4:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000b6fa:	(bad)  
   14000b6fb:	(bad)  
   14000b6fc:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000b702:	(bad)  
   14000b703:	(bad)  
   14000b704:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000b70a:	(bad)  
   14000b70b:	(bad)  
   14000b70c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000b712:	(bad)  
   14000b713:	(bad)  
   14000b714:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000b71a:	(bad)  
   14000b71b:	(bad)  
   14000b71c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000b722:	(bad)  
   14000b723:	(bad)  
   14000b724:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000b72a:	(bad)  
   14000b72b:	(bad)  
   14000b72c:	(bad)  
   14000b72d:	(bad)  
   14000b72e:	(bad)  
   14000b72f:	(bad)  
   14000b730:	(bad)  
   14000b731:	(bad)  
   14000b732:	(bad)  
   14000b733:	inc    esi
   14000b735:	(bad)  
   14000b736:	add    bh,bh
   14000b738:	(bad)
   14000b73b:	inc    ebp
   14000b73d:	(bad)  
   14000b73e:	add    bh,bh
   14000b740:	(bad)
   14000b743:	inc    ebp
   14000b745:	(bad)  
   14000b746:	add    bh,bh
   14000b748:	(bad)
   14000b74b:	inc    ebp
   14000b74d:	(bad)  
   14000b74e:	add    bh,bh
   14000b750:	(bad)
   14000b753:	inc    ebp
   14000b755:	(bad)  
   14000b756:	add    bh,bh
   14000b758:	(bad)  
   14000b759:	(bad)  
   14000b75a:	add    bh,bh
   14000b75c:	(bad)  
   14000b75d:	pop    rdi
   14000b75e:	add    bh,bh
   14000b760:	(bad)  
   14000b761:	pop    rdi
   14000b762:	add    bh,bh
   14000b764:	(bad)  
   14000b765:	pop    rdi
   14000b766:	add    bh,bh
   14000b768:	(bad)  
   14000b769:	pop    rsi
   14000b76a:	add    bh,bh
   14000b76c:	(bad)  
   14000b76d:	pop    rsi
   14000b76e:	add    bh,bh
   14000b770:	(bad)  
   14000b771:	pop    rsi
   14000b772:	add    bh,bh
   14000b774:	(bad)  
   14000b775:	pop    rsi
   14000b776:	add    bh,bh
   14000b778:	ret    
   14000b779:	pop    rsi
   14000b77a:	add    bh,bh
   14000b77c:	ret    
   14000b77d:	pop    rbp
   14000b77e:	add    bh,bh
   14000b780:	ret    
   14000b781:	pop    rbp
   14000b782:	add    bh,bh
   14000b784:	ret    
   14000b785:	pop    rbp
   14000b786:	add    bh,bh
   14000b788:	ret    
   14000b789:	pop    rsp
   14000b78a:	add    bh,bh
   14000b78c:	xchg   ebp,eax
   14000b78d:	push   rsp
   14000b78e:	sbb    edi,edi
   14000b790:	rex.RXB
   14000b791:	rex.RXB
   14000b792:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b796:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b79a:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000b7c1:	add    BYTE PTR [rax],al
   14000b7c3:	add    BYTE PTR [rdi+0x47],al
   14000b7c6:	rex.RXB jo 0x14000b810
   14000b7c9:	rex.RXB
   14000b7ca:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b7ce:	rex.RXB (bad) 
   14000b7d0:	cmp    eax,0x3bfff3b8
   14000b7d5:	sar    dh,0xff
   14000b7d8:	cmp    eax,eax
   14000b7da:	(bad)  
   14000b7db:	(bad)  
   14000b7dc:	cmp    eax,eax
   14000b7de:	(bad)  
   14000b7df:	(bad)  
   14000b7e0:	cmp    eax,eax
   14000b7e2:	(bad)  
   14000b7e3:	(bad)  
   14000b7e4:	cmp    eax,eax
   14000b7e6:	(bad)  
   14000b7e7:	(bad)  
   14000b7e8:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000b7ee:	(bad)  
   14000b7ef:	(bad)  
   14000b7f0:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000b7f6:	(bad)  
   14000b7f7:	(bad)  
   14000b7f8:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000b7fe:	(bad)  
   14000b7ff:	(bad)  
   14000b800:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000b806:	(bad)  
   14000b807:	(bad)  
   14000b808:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000b80e:	(bad)  
   14000b80f:	(bad)  
   14000b810:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000b816:	(bad)  
   14000b817:	(bad)  
   14000b818:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000b81e:	(bad)  
   14000b81f:	(bad)  
   14000b820:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000b826:	(bad)  
   14000b827:	(bad)  
   14000b828:	cmp    BYTE PTR [rbp-0x2],bh
   14000b82e:	(bad)  
   14000b82f:	(bad)  
   14000b830:	(bad)  
   14000b831:	(bad)  
   14000b832:	(bad)  
   14000b833:	inc    esi
   14000b835:	(bad)  
   14000b836:	add    bh,bh
   14000b838:	(bad)  
   14000b839:	(bad)  
   14000b83a:	add    bh,bh
   14000b83c:	(bad)
   14000b83f:	inc    ebp
   14000b841:	(bad)  
   14000b842:	add    bh,bh
   14000b844:	(bad)
   14000b847:	inc    ebp
   14000b849:	(bad)  
   14000b84a:	add    bh,bh
   14000b84c:	(bad)
   14000b84f:	inc    ebp
   14000b851:	(bad)  
   14000b852:	add    bh,bh
   14000b854:	(bad)
   14000b857:	inc    ebp
   14000b859:	(bad)  
   14000b85a:	add    bh,bh
   14000b85c:	(bad)  
   14000b85d:	(bad)  
   14000b85e:	add    bh,bh
   14000b860:	(bad)  
   14000b861:	pop    rdi
   14000b862:	add    bh,bh
   14000b864:	(bad)  
   14000b865:	pop    rdi
   14000b866:	add    bh,bh
   14000b868:	(bad)  
   14000b869:	pop    rdi
   14000b86a:	add    bh,bh
   14000b86c:	(bad)  
   14000b86d:	pop    rsi
   14000b86e:	add    bh,bh
   14000b870:	(bad)  
   14000b871:	pop    rsi
   14000b872:	add    bh,bh
   14000b874:	(bad)  
   14000b875:	pop    rsi
   14000b876:	add    bh,bh
   14000b878:	(bad)  
   14000b879:	pop    rsi
   14000b87a:	add    bh,bh
   14000b87c:	ret    
   14000b87d:	pop    rsi
   14000b87e:	add    bh,bh
   14000b880:	ret    
   14000b881:	pop    rbp
   14000b882:	add    bh,bh
   14000b884:	ret    
   14000b885:	pop    rbp
   14000b886:	add    bh,bh
   14000b888:	ret    
   14000b889:	pop    rbp
   14000b88a:	add    bh,bh
   14000b88c:	mov    ebx,0x47ff045b
   14000b891:	rex.RXB
   14000b892:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b896:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b89a:	rex.RXB jo 0x14000b89d
	...
   14000b8c1:	add    BYTE PTR [rax],al
   14000b8c3:	add    BYTE PTR [rdi+0x47],al
   14000b8c6:	rex.RXB mov r15d,0xff474747
   14000b8cc:	rex.XB je 0x14000b85b
   14000b8cf:	(bad)  
   14000b8d0:	cmp    al,0xc0
   14000b8d2:	(bad)  
   14000b8d3:	(bad)  
   14000b8d4:	cmp    al,0xc0
   14000b8d6:	(bad)  
   14000b8d7:	(bad)  
   14000b8d8:	cmp    eax,eax
   14000b8da:	(bad)  
   14000b8db:	(bad)  
   14000b8dc:	cmp    eax,eax
   14000b8de:	(bad)  
   14000b8df:	(bad)  
   14000b8e0:	cmp    eax,eax
   14000b8e2:	(bad)  
   14000b8e3:	(bad)  
   14000b8e4:	cmp    eax,eax
   14000b8e6:	(bad)  
   14000b8e7:	(bad)  
   14000b8e8:	cmp    eax,eax
   14000b8ea:	(bad)  
   14000b8eb:	(bad)  
   14000b8ec:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000b8f2:	(bad)  
   14000b8f3:	(bad)  
   14000b8f4:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000b8fa:	(bad)  
   14000b8fb:	(bad)  
   14000b8fc:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000b902:	(bad)  
   14000b903:	(bad)  
   14000b904:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000b90a:	(bad)  
   14000b90b:	(bad)  
   14000b90c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000b912:	(bad)  
   14000b913:	(bad)  
   14000b914:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000b91a:	(bad)  
   14000b91b:	(bad)  
   14000b91c:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000b922:	(bad)  
   14000b923:	(bad)  
   14000b924:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000b92a:	(bad)  
   14000b92b:	(bad)  
   14000b92c:	(bad)  
   14000b92d:	(bad)  
   14000b92e:	(bad)  
   14000b92f:	(bad)  
   14000b930:	(bad)  
   14000b931:	(bad)  
   14000b932:	(bad)  
   14000b933:	inc    esi
   14000b935:	movsxd eax,DWORD PTR [rax]
   14000b937:	inc    esi
   14000b939:	(bad)  
   14000b93a:	add    bh,bh
   14000b93c:	(bad)  
   14000b93d:	(bad)  
   14000b93e:	add    bh,bh
   14000b940:	(bad)
   14000b943:	inc    ebp
   14000b945:	(bad)  
   14000b946:	add    bh,bh
   14000b948:	(bad)
   14000b94b:	inc    ebp
   14000b94d:	(bad)  
   14000b94e:	add    bh,bh
   14000b950:	(bad)
   14000b953:	inc    ebp
   14000b955:	(bad)  
   14000b956:	add    bh,bh
   14000b958:	(bad)
   14000b95b:	inc    ebp
   14000b95d:	(bad)  
   14000b95e:	add    bh,bh
   14000b960:	(bad)  
   14000b961:	(bad)  
   14000b962:	add    bh,bh
   14000b964:	(bad)  
   14000b965:	pop    rdi
   14000b966:	add    bh,bh
   14000b968:	(bad)  
   14000b969:	pop    rdi
   14000b96a:	add    bh,bh
   14000b96c:	(bad)  
   14000b96d:	pop    rdi
   14000b96e:	add    bh,bh
   14000b970:	(bad)  
   14000b971:	pop    rsi
   14000b972:	add    bh,bh
   14000b974:	(bad)  
   14000b975:	pop    rsi
   14000b976:	add    bh,bh
   14000b978:	(bad)  
   14000b979:	pop    rsi
   14000b97a:	add    bh,bh
   14000b97c:	(bad)  
   14000b97d:	pop    rsi
   14000b97e:	add    bh,bh
   14000b980:	ret    
   14000b981:	pop    rsi
   14000b982:	add    bh,bh
   14000b984:	ret    
   14000b985:	pop    rbp
   14000b986:	add    bh,bh
   14000b988:	ret    
   14000b989:	pop    rbp
   14000b98a:	add    bh,bh
   14000b98c:	ret    
   14000b98d:	pop    rbp
   14000b98e:	add    bh,bh
   14000b990:	jbe    0x14000b9e1
   14000b992:	sub    al,0xff
   14000b994:	rex.RXB
   14000b995:	rex.RXB
   14000b996:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b99a:	rex.RXB mov r15d,0x0
	...
   14000b9c0:	rex.RXB
   14000b9c1:	rex.RXB
   14000b9c2:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000b9c6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000b9ca:	rex.RXB (bad) 
   14000b9cc:	mov    edx,0xffffbaba
   14000b9d1:	(bad)  
   14000b9d2:	(bad)  
   14000b9d3:	(bad)  
   14000b9d4:	(bad)  
   14000b9d5:	(bad)  
   14000b9d6:	(bad)  
   14000b9d7:	(bad)  
   14000b9d8:	(bad)  
   14000b9d9:	(bad)  
   14000b9da:	(bad)  
   14000b9db:	(bad)  
   14000b9dc:	(bad)  
   14000b9dd:	(bad)  
   14000b9de:	(bad)  
   14000b9df:	(bad)  
   14000b9e0:	(bad)  
   14000b9e1:	(bad)  
   14000b9e2:	(bad)  
   14000b9e3:	(bad)  
   14000b9e4:	(bad)  
   14000b9e5:	(bad)  
   14000b9e6:	(bad)  
   14000b9e7:	(bad)  
   14000b9e8:	(bad)  
   14000b9e9:	(bad)  
   14000b9ea:	(bad)  
   14000b9eb:	(bad)  
   14000b9ec:	(bad)  
   14000b9ed:	(bad)  
   14000b9ee:	(bad)  
   14000b9ef:	(bad)  
   14000b9f0:	(bad)  
   14000b9f1:	(bad)  
   14000b9f2:	(bad)  
   14000b9f3:	(bad)  
   14000b9f4:	(bad)  
   14000b9f5:	(bad)  
   14000b9f6:	(bad)  
   14000b9f7:	(bad)  
   14000b9f8:	(bad)  
   14000b9f9:	(bad)  
   14000b9fa:	(bad)  
   14000b9fb:	(bad)  
   14000b9fc:	(bad)  
   14000b9fd:	(bad)  
   14000b9fe:	(bad)  
   14000b9ff:	(bad)  
   14000ba00:	(bad)  
   14000ba01:	(bad)  
   14000ba02:	(bad)  
   14000ba03:	(bad)  
   14000ba04:	(bad)  
   14000ba05:	(bad)  
   14000ba06:	(bad)  
   14000ba07:	(bad)  
   14000ba08:	(bad)  
   14000ba09:	(bad)  
   14000ba0a:	(bad)  
   14000ba0b:	(bad)  
   14000ba0c:	(bad)  
   14000ba0d:	(bad)  
   14000ba0e:	(bad)  
   14000ba0f:	(bad)  
   14000ba10:	(bad)  
   14000ba11:	(bad)  
   14000ba12:	(bad)  
   14000ba13:	(bad)  
   14000ba14:	(bad)  
   14000ba15:	(bad)  
   14000ba16:	(bad)  
   14000ba17:	(bad)  
   14000ba18:	(bad)  
   14000ba19:	(bad)  
   14000ba1a:	(bad)  
   14000ba1b:	(bad)  
   14000ba1c:	(bad)  
   14000ba1d:	(bad)  
   14000ba1e:	(bad)  
   14000ba1f:	(bad)  
   14000ba20:	(bad)  
   14000ba21:	(bad)  
   14000ba22:	(bad)  
   14000ba23:	(bad)  
   14000ba24:	(bad)  
   14000ba25:	(bad)  
   14000ba26:	(bad)  
   14000ba27:	(bad)  
   14000ba28:	(bad)  
   14000ba29:	(bad)  
   14000ba2a:	(bad)  
   14000ba2b:	(bad)  
   14000ba2c:	(bad)  
   14000ba2d:	(bad)  
   14000ba2e:	(bad)  
   14000ba2f:	(bad)  
   14000ba30:	(bad)  
   14000ba31:	(bad)  
   14000ba32:	(bad)  
   14000ba33:	(bad)  
   14000ba34:	(bad)  
   14000ba35:	(bad)  
   14000ba36:	(bad)  
   14000ba37:	(bad)  
   14000ba38:	(bad)  
   14000ba39:	(bad)  
   14000ba3a:	(bad)  
   14000ba3b:	(bad)  
   14000ba3c:	(bad)  
   14000ba3d:	(bad)  
   14000ba3e:	(bad)  
   14000ba3f:	(bad)  
   14000ba40:	(bad)  
   14000ba41:	(bad)  
   14000ba42:	(bad)  
   14000ba43:	(bad)  
   14000ba44:	(bad)  
   14000ba45:	(bad)  
   14000ba46:	(bad)  
   14000ba47:	(bad)  
   14000ba48:	(bad)  
   14000ba49:	(bad)  
   14000ba4a:	(bad)  
   14000ba4b:	(bad)  
   14000ba4c:	(bad)  
   14000ba4d:	(bad)  
   14000ba4e:	(bad)  
   14000ba4f:	(bad)  
   14000ba50:	(bad)  
   14000ba51:	(bad)  
   14000ba52:	(bad)  
   14000ba53:	(bad)  
   14000ba54:	(bad)  
   14000ba55:	(bad)  
   14000ba56:	(bad)  
   14000ba57:	(bad)  
   14000ba58:	(bad)  
   14000ba59:	(bad)  
   14000ba5a:	(bad)  
   14000ba5b:	(bad)  
   14000ba5c:	(bad)  
   14000ba5d:	(bad)  
   14000ba5e:	(bad)  
   14000ba5f:	(bad)  
   14000ba60:	(bad)  
   14000ba61:	(bad)  
   14000ba62:	(bad)  
   14000ba63:	(bad)  
   14000ba64:	(bad)  
   14000ba65:	(bad)  
   14000ba66:	(bad)  
   14000ba67:	(bad)  
   14000ba68:	(bad)  
   14000ba69:	(bad)  
   14000ba6a:	(bad)  
   14000ba6b:	(bad)  
   14000ba6c:	(bad)  
   14000ba6d:	(bad)  
   14000ba6e:	(bad)  
   14000ba6f:	(bad)  
   14000ba70:	(bad)  
   14000ba71:	(bad)  
   14000ba72:	(bad)  
   14000ba73:	(bad)  
   14000ba74:	(bad)  
   14000ba75:	(bad)  
   14000ba76:	(bad)  
   14000ba77:	(bad)  
   14000ba78:	(bad)  
   14000ba79:	(bad)  
   14000ba7a:	(bad)  
   14000ba7b:	(bad)  
   14000ba7c:	(bad)  
   14000ba7d:	(bad)  
   14000ba7e:	(bad)  
   14000ba7f:	(bad)  
   14000ba80:	(bad)  
   14000ba81:	(bad)  
   14000ba82:	(bad)  
   14000ba83:	(bad)  
   14000ba84:	(bad)  
   14000ba85:	(bad)  
   14000ba86:	(bad)  
   14000ba87:	(bad)  
   14000ba88:	(bad)  
   14000ba89:	(bad)  
   14000ba8a:	(bad)  
   14000ba8b:	(bad)  
   14000ba8c:	(bad)  
   14000ba8d:	(bad)  
   14000ba8e:	(bad)  
   14000ba8f:	(bad)  
   14000ba90:	mov    edx,0x47ffbaba
   14000ba95:	rex.RXB
   14000ba96:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ba9a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ba9e:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000babd:	add    BYTE PTR [rax],al
   14000babf:	add    BYTE PTR [rdi+0x47],al
   14000bac2:	rex.RXB push r8
   14000bac4:	rex.RXB
   14000bac5:	rex.RXB
   14000bac6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000baca:	rex.RXB push r12
   14000bacd:	hlt    
   14000bace:	hlt    
   14000bacf:	(bad)  
   14000bad0:	(bad)  
   14000bad1:	(bad)  
   14000bad2:	(bad)  
   14000bad3:	(bad)  
   14000bad4:	(bad)  
   14000bad5:	(bad)  
   14000bad6:	(bad)  
   14000bad7:	(bad)  
   14000bad8:	(bad)  
   14000bad9:	(bad)  
   14000bada:	(bad)  
   14000badb:	(bad)  
   14000badc:	(bad)  
   14000badd:	(bad)  
   14000bade:	(bad)  
   14000badf:	(bad)  
   14000bae0:	(bad)  
   14000bae1:	(bad)  
   14000bae2:	(bad)  
   14000bae3:	(bad)  
   14000bae4:	(bad)  
   14000bae5:	(bad)  
   14000bae6:	(bad)  
   14000bae7:	(bad)  
   14000bae8:	(bad)  
   14000bae9:	(bad)  
   14000baea:	(bad)  
   14000baeb:	(bad)  
   14000baec:	(bad)  
   14000baed:	(bad)  
   14000baee:	(bad)  
   14000baef:	(bad)  
   14000baf0:	(bad)  
   14000baf1:	(bad)  
   14000baf2:	(bad)  
   14000baf3:	(bad)  
   14000baf4:	(bad)  
   14000baf5:	(bad)  
   14000baf6:	(bad)  
   14000baf7:	(bad)  
   14000baf8:	(bad)  
   14000baf9:	(bad)  
   14000bafa:	(bad)  
   14000bafb:	(bad)  
   14000bafc:	(bad)  
   14000bafd:	(bad)  
   14000bafe:	(bad)  
   14000baff:	(bad)  
   14000bb00:	(bad)  
   14000bb01:	(bad)  
   14000bb02:	(bad)  
   14000bb03:	(bad)  
   14000bb04:	(bad)  
   14000bb05:	(bad)  
   14000bb06:	(bad)  
   14000bb07:	(bad)  
   14000bb08:	(bad)  
   14000bb09:	(bad)  
   14000bb0a:	(bad)  
   14000bb0b:	(bad)  
   14000bb0c:	(bad)  
   14000bb0d:	(bad)  
   14000bb0e:	(bad)  
   14000bb0f:	(bad)  
   14000bb10:	(bad)  
   14000bb11:	(bad)  
   14000bb12:	(bad)  
   14000bb13:	(bad)  
   14000bb14:	(bad)  
   14000bb15:	(bad)  
   14000bb16:	(bad)  
   14000bb17:	(bad)  
   14000bb18:	(bad)  
   14000bb19:	(bad)  
   14000bb1a:	(bad)  
   14000bb1b:	(bad)  
   14000bb1c:	(bad)  
   14000bb1d:	(bad)  
   14000bb1e:	(bad)  
   14000bb1f:	(bad)  
   14000bb20:	(bad)  
   14000bb21:	(bad)  
   14000bb22:	(bad)  
   14000bb23:	(bad)  
   14000bb24:	(bad)  
   14000bb25:	(bad)  
   14000bb26:	(bad)  
   14000bb27:	(bad)  
   14000bb28:	(bad)  
   14000bb29:	(bad)  
   14000bb2a:	(bad)  
   14000bb2b:	(bad)  
   14000bb2c:	(bad)  
   14000bb2d:	(bad)  
   14000bb2e:	(bad)  
   14000bb2f:	(bad)  
   14000bb30:	(bad)  
   14000bb31:	(bad)  
   14000bb32:	(bad)  
   14000bb33:	(bad)  
   14000bb34:	(bad)  
   14000bb35:	(bad)  
   14000bb36:	(bad)  
   14000bb37:	(bad)  
   14000bb38:	(bad)  
   14000bb39:	(bad)  
   14000bb3a:	(bad)  
   14000bb3b:	(bad)  
   14000bb3c:	(bad)  
   14000bb3d:	(bad)  
   14000bb3e:	(bad)  
   14000bb3f:	(bad)  
   14000bb40:	(bad)  
   14000bb41:	(bad)  
   14000bb42:	(bad)  
   14000bb43:	(bad)  
   14000bb44:	(bad)  
   14000bb45:	(bad)  
   14000bb46:	(bad)  
   14000bb47:	(bad)  
   14000bb48:	(bad)  
   14000bb49:	(bad)  
   14000bb4a:	(bad)  
   14000bb4b:	(bad)  
   14000bb4c:	(bad)  
   14000bb4d:	(bad)  
   14000bb4e:	(bad)  
   14000bb4f:	(bad)  
   14000bb50:	(bad)  
   14000bb51:	(bad)  
   14000bb52:	(bad)  
   14000bb53:	(bad)  
   14000bb54:	(bad)  
   14000bb55:	(bad)  
   14000bb56:	(bad)  
   14000bb57:	(bad)  
   14000bb58:	(bad)  
   14000bb59:	(bad)  
   14000bb5a:	(bad)  
   14000bb5b:	(bad)  
   14000bb5c:	(bad)  
   14000bb5d:	(bad)  
   14000bb5e:	(bad)  
   14000bb5f:	(bad)  
   14000bb60:	(bad)  
   14000bb61:	(bad)  
   14000bb62:	(bad)  
   14000bb63:	(bad)  
   14000bb64:	(bad)  
   14000bb65:	(bad)  
   14000bb66:	(bad)  
   14000bb67:	(bad)  
   14000bb68:	(bad)  
   14000bb69:	(bad)  
   14000bb6a:	(bad)  
   14000bb6b:	(bad)  
   14000bb6c:	(bad)  
   14000bb6d:	(bad)  
   14000bb6e:	(bad)  
   14000bb6f:	(bad)  
   14000bb70:	(bad)  
   14000bb71:	(bad)  
   14000bb72:	(bad)  
   14000bb73:	(bad)  
   14000bb74:	(bad)  
   14000bb75:	(bad)  
   14000bb76:	(bad)  
   14000bb77:	(bad)  
   14000bb78:	(bad)  
   14000bb79:	(bad)  
   14000bb7a:	(bad)  
   14000bb7b:	(bad)  
   14000bb7c:	(bad)  
   14000bb7d:	(bad)  
   14000bb7e:	(bad)  
   14000bb7f:	(bad)  
   14000bb80:	(bad)  
   14000bb81:	(bad)  
   14000bb82:	(bad)  
   14000bb83:	(bad)  
   14000bb84:	(bad)  
   14000bb85:	(bad)  
   14000bb86:	(bad)  
   14000bb87:	(bad)  
   14000bb88:	(bad)  
   14000bb89:	(bad)  
   14000bb8a:	(bad)  
   14000bb8b:	(bad)  
   14000bb8c:	(bad)  
   14000bb8d:	(bad)  
   14000bb8e:	(bad)  
   14000bb8f:	push   rsp
   14000bb91:	hlt    
   14000bb92:	hlt    
   14000bb93:	inc    DWORD PTR [rdi+0x47]
   14000bb96:	rex.RXB inc DWORD PTR [r15+0x47]
   14000bb9a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000bb9e:	rex.RXB push r8
	...
   14000bbc0:	rex.RXB
   14000bbc1:	rex.RXB
   14000bbc2:	rex.RXB add BYTE PTR [r15+0x47],0x47
   14000bbc7:	jmp    QWORD PTR [rax+0x4e]
   14000bbca:	cmp    bh,bh
   14000bbcc:	leave  
   14000bbcd:	imul   eax,DWORD PTR [rax],0xffffffff
   14000bbd0:	leave  
   14000bbd1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000bbd4:	leave  
   14000bbd5:	push   0x0
   14000bbd7:	dec    ecx
   14000bbd9:	push   0x0
   14000bbdb:	dec    ecx
   14000bbdd:	push   0x0
   14000bbdf:	dec    ecx
   14000bbe1:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000bbe7:	dec    ecx
   14000bbe9:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000bbef:	dec    eax
   14000bbf1:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000bbf7:	dec    eax
   14000bbf9:	push   0x68c8ff00
   14000bbfe:	add    bh,bh
   14000bc00:	enter  0x67,0xff
   14000bc04:	enter  0x67,0xff
   14000bc08:	enter  0x67,0xff
   14000bc0c:	(bad)  
   14000bc0d:	data16 add bh,bh
   14000bc10:	(bad)  
   14000bc11:	data16 add bh,bh
   14000bc14:	(bad)  
   14000bc15:	data16 add bh,bh
   14000bc18:	(bad)  
   14000bc19:	gs add bh,bh
   14000bc1c:	(bad)  
   14000bc1d:	gs add bh,bh
   14000bc20:	(bad)  
   14000bc21:	gs add bh,bh
   14000bc24:	(bad)  
   14000bc25:	gs add bh,bh
   14000bc28:	(bad)  
   14000bc29:	gs add bh,bh
   14000bc2c:	(bad)  
   14000bc2d:	(bad)  
   14000bc2e:	(bad)  
   14000bc2f:	(bad)  
   14000bc30:	(bad)  
   14000bc31:	(bad)  
   14000bc32:	(bad)  
   14000bc33:	(bad)  
   14000bc34:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000bc3a:	(bad)  
   14000bc3b:	(bad)  
   14000bc3c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000bc42:	(bad)  
   14000bc43:	(bad)  
   14000bc44:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000bc4b:	push   QWORD PTR [rdi]
   14000bc4d:	mov    esp,0xbc37fffe
   14000bc52:	(bad)  
   14000bc53:	push   QWORD PTR [rdi]
   14000bc55:	mov    esp,0xbc37fffe
   14000bc5a:	(bad)  
   14000bc5b:	push   QWORD PTR [rdi]
   14000bc5d:	mov    esp,0xbc37fffe
   14000bc62:	(bad)  
   14000bc63:	push   QWORD PTR [rsi]
   14000bc65:	mov    ebx,0xbb36fffe
   14000bc6a:	(bad)  
   14000bc6b:	push   QWORD PTR [rsi]
   14000bc6d:	mov    ebx,0xbb36fffe
   14000bc72:	(bad)  
   14000bc73:	push   QWORD PTR [rsi]
   14000bc75:	mov    ebx,0xbb36fffe
   14000bc7a:	(bad)  
   14000bc7b:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600bb3b
   14000bc81:	mov    edx,0xba35fffe
   14000bc86:	(bad)  
   14000bc87:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600bb47
   14000bc8d:	mov    edx,0xba35fffe
   14000bc92:	(bad)  
   14000bc93:	inc    DWORD PTR [rbp+rbx*2+0x69]
   14000bc97:	inc    DWORD PTR [rdi+0x47]
   14000bc9a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000bc9e:	rex.RXB add BYTE PTR [r8],0x0
	...
   14000bcbe:	add    BYTE PTR [rax],al
   14000bcc0:	rex.RXB
   14000bcc1:	rex.RXB
   14000bcc2:	rex.RXB mov r15d,0xff474747
   14000bcc8:	js     0x14000bd1f
   14000bcca:	sub    al,0xff
   14000bccc:	retf   0x6b
   14000bccf:	dec    ecx
   14000bcd1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000bcd4:	leave  
   14000bcd5:	imul   eax,DWORD PTR [rax],0xffffffff
   14000bcd8:	leave  
   14000bcd9:	push   0x0
   14000bcdb:	dec    ecx
   14000bcdd:	push   0x0
   14000bcdf:	dec    ecx
   14000bce1:	push   0x0
   14000bce3:	dec    ecx
   14000bce5:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000bceb:	dec    ecx
   14000bced:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000bcf3:	dec    eax
   14000bcf5:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000bcfb:	dec    eax
   14000bcfd:	push   0x68c8ff00
   14000bd02:	add    bh,bh
   14000bd04:	enter  0x67,0xff
   14000bd08:	enter  0x67,0xff
   14000bd0c:	enter  0x67,0xff
   14000bd10:	(bad)  
   14000bd11:	data16 add bh,bh
   14000bd14:	(bad)  
   14000bd15:	data16 add bh,bh
   14000bd18:	(bad)  
   14000bd19:	data16 add bh,bh
   14000bd1c:	(bad)  
   14000bd1d:	gs add bh,bh
   14000bd20:	(bad)  
   14000bd21:	gs add bh,bh
   14000bd24:	(bad)  
   14000bd25:	gs add bh,bh
   14000bd28:	(bad)  
   14000bd29:	gs add bh,bh
   14000bd2c:	(bad)  
   14000bd2d:	(bad)  
   14000bd2e:	(bad)  
   14000bd2f:	(bad)  
   14000bd30:	(bad)  
   14000bd31:	(bad)  
   14000bd32:	(bad)  
   14000bd33:	(bad)  
   14000bd34:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000bd3a:	(bad)  
   14000bd3b:	(bad)  
   14000bd3c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000bd42:	(bad)  
   14000bd43:	(bad)  
   14000bd44:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000bd4a:	(bad)  
   14000bd4b:	(bad)  
   14000bd4c:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000bd53:	push   QWORD PTR [rdi]
   14000bd55:	mov    esp,0xbc37fffe
   14000bd5a:	(bad)  
   14000bd5b:	push   QWORD PTR [rdi]
   14000bd5d:	mov    esp,0xbc37fffe
   14000bd62:	(bad)  
   14000bd63:	push   QWORD PTR [rdi]
   14000bd65:	mov    esp,0xbb36fffe
   14000bd6a:	(bad)  
   14000bd6b:	push   QWORD PTR [rsi]
   14000bd6d:	mov    ebx,0xbb36fffe
   14000bd72:	(bad)  
   14000bd73:	push   QWORD PTR [rsi]
   14000bd75:	mov    ebx,0xbb36fffe
   14000bd7a:	(bad)  
   14000bd7b:	push   QWORD PTR [rsi]
   14000bd7d:	mov    ebx,0xba35fffe
   14000bd82:	(bad)  
   14000bd83:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600bc43
   14000bd89:	mov    edx,0xba35fffe
   14000bd8e:	(bad)  
   14000bd8f:	push   QWORD PTR [rip+0x40fffeba]        # 0x18100bc4f
   14000bd95:	jb     0x14000bd23
   14000bd97:	inc    DWORD PTR [rdi+0x47]
   14000bd9a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000bd9e:	rex.RXB mov r15d,0x0
	...
   14000bdc0:	rex.RXB
   14000bdc1:	rex.RXB
   14000bdc2:	rex.RXB iret 
   14000bdc4:	rex.RXB
   14000bdc5:	rex.RXB
   14000bdc6:	rex.RXB dec DWORD PTR [r9-0x3500dba6]
   14000bdcd:	ins    BYTE PTR es:[rdi],dx
   14000bdce:	add    bh,bh
   14000bdd0:	retf   0x6b
   14000bdd3:	dec    ecx
   14000bdd5:	imul   eax,DWORD PTR [rax],0xffffffff
   14000bdd8:	leave  
   14000bdd9:	imul   eax,DWORD PTR [rax],0xffffffff
   14000bddc:	leave  
   14000bddd:	push   0x0
   14000bddf:	dec    ecx
   14000bde1:	push   0x0
   14000bde3:	dec    ecx
   14000bde5:	push   0x0
   14000bde7:	dec    ecx
   14000bde9:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000bdef:	dec    ecx
   14000bdf1:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000bdf7:	dec    eax
   14000bdf9:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000bdff:	dec    eax
   14000be01:	push   0x68c8ff00
   14000be06:	add    bh,bh
   14000be08:	enter  0x67,0xff
   14000be0c:	enter  0x67,0xff
   14000be10:	enter  0x67,0xff
   14000be14:	(bad)  
   14000be15:	data16 add bh,bh
   14000be18:	(bad)  
   14000be19:	data16 add bh,bh
   14000be1c:	(bad)  
   14000be1d:	data16 add bh,bh
   14000be20:	(bad)  
   14000be21:	gs add bh,bh
   14000be24:	(bad)  
   14000be25:	gs add bh,bh
   14000be28:	(bad)  
   14000be29:	gs add bh,bh
   14000be2c:	(bad)  
   14000be2d:	(bad)  
   14000be2e:	(bad)  
   14000be2f:	(bad)  
   14000be30:	(bad)  
   14000be31:	(bad)  
   14000be32:	(bad)  
   14000be33:	(bad)  
   14000be34:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000be3a:	(bad)  
   14000be3b:	(bad)  
   14000be3c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000be42:	(bad)  
   14000be43:	(bad)  
   14000be44:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000be4a:	(bad)  
   14000be4b:	(bad)  
   14000be4c:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000be53:	push   QWORD PTR [rdi]
   14000be55:	mov    esp,0xbc37fffe
   14000be5a:	(bad)  
   14000be5b:	push   QWORD PTR [rdi]
   14000be5d:	mov    esp,0xbc37fffe
   14000be62:	(bad)  
   14000be63:	push   QWORD PTR [rdi]
   14000be65:	mov    esp,0xbc37fffe
   14000be6a:	(bad)  
   14000be6b:	push   QWORD PTR [rsi]
   14000be6d:	mov    ebx,0xbb36fffe
   14000be72:	(bad)  
   14000be73:	push   QWORD PTR [rsi]
   14000be75:	mov    ebx,0xbb36fffe
   14000be7a:	(bad)  
   14000be7b:	push   QWORD PTR [rsi]
   14000be7d:	mov    ebx,0xbb36fffe
   14000be82:	(bad)  
   14000be83:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600bd43
   14000be89:	mov    edx,0xba35fffe
   14000be8e:	(bad)  
   14000be8f:	push   QWORD PTR [rip+0x3efffeba]        # 0x17f00bd4f
   14000be95:	and    DWORD PTR [rbx+0x474747ff],0x474747ff
   14000be9f:	iret   
	...
   14000bec0:	rex.RXB
   14000bec1:	rex.RXB
   14000bec2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000bec6:	rex.RXB jmp FWORD PTR [r9-0x3500ed9d]
   14000becd:	ins    BYTE PTR es:[rdi],dx
   14000bece:	add    bh,bh
   14000bed0:	retf   0x6c
   14000bed3:	dec    edx
   14000bed5:	imul   eax,DWORD PTR [rax],0xffffffff
   14000bed8:	leave  
   14000bed9:	imul   eax,DWORD PTR [rax],0xffffffff
   14000bedc:	leave  
   14000bedd:	imul   eax,DWORD PTR [rax],0xffffffff
   14000bee0:	leave  
   14000bee1:	push   0x0
   14000bee3:	dec    ecx
   14000bee5:	push   0x0
   14000bee7:	dec    ecx
   14000bee9:	push   0x0
   14000beeb:	dec    ecx
   14000beed:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000bef3:	dec    ecx
   14000bef5:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000befb:	dec    eax
   14000befd:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000bf03:	dec    eax
   14000bf05:	push   0x68c8ff00
   14000bf0a:	add    bh,bh
   14000bf0c:	enter  0x67,0xff
   14000bf10:	enter  0x67,0xff
   14000bf14:	enter  0x67,0xff
   14000bf18:	(bad)  
   14000bf19:	data16 add bh,bh
   14000bf1c:	(bad)  
   14000bf1d:	data16 add bh,bh
   14000bf20:	(bad)  
   14000bf21:	data16 add bh,bh
   14000bf24:	(bad)  
   14000bf25:	gs add bh,bh
   14000bf28:	(bad)  
   14000bf29:	gs add bh,bh
   14000bf2c:	(bad)  
   14000bf2d:	(bad)  
   14000bf2e:	(bad)  
   14000bf2f:	(bad)  
   14000bf30:	(bad)  
   14000bf31:	(bad)  
   14000bf32:	(bad)  
   14000bf33:	(bad)  
   14000bf34:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000bf3a:	(bad)  
   14000bf3b:	(bad)  
   14000bf3c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000bf42:	(bad)  
   14000bf43:	(bad)  
   14000bf44:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000bf4a:	(bad)  
   14000bf4b:	(bad)  
   14000bf4c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000bf52:	(bad)  
   14000bf53:	(bad)  
   14000bf54:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000bf5b:	push   QWORD PTR [rdi]
   14000bf5d:	mov    esp,0xbc37fffe
   14000bf62:	(bad)  
   14000bf63:	push   QWORD PTR [rdi]
   14000bf65:	mov    esp,0xbc37fffe
   14000bf6a:	(bad)  
   14000bf6b:	push   QWORD PTR [rdi]
   14000bf6d:	mov    esp,0xbb36fffe
   14000bf72:	(bad)  
   14000bf73:	push   QWORD PTR [rsi]
   14000bf75:	mov    ebx,0xbb36fffe
   14000bf7a:	(bad)  
   14000bf7b:	push   QWORD PTR [rsi]
   14000bf7d:	mov    ebx,0xbb36fffe
   14000bf82:	(bad)  
   14000bf83:	push   QWORD PTR [rsi]
   14000bf85:	mov    ebx,0xba35fffe
   14000bf8a:	(bad)  
   14000bf8b:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600be4b
   14000bf91:	mov    edx,0x9d3afffe
   14000bf96:	sar    bh,1
   14000bf98:	rex.RXB
   14000bf99:	rex.RXB
   14000bf9a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000bf9e:	rex.RXB inc DWORD PTR [r8]
	...
   14000bfbd:	add    BYTE PTR [rax],al
   14000bfbf:	add    BYTE PTR [rdi+0x47],al
   14000bfc2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000bfc6:	rex.RXB jmp FWORD PTR [r9-0x3500ed9d]
   14000bfcd:	ins    BYTE PTR es:[rdi],dx
   14000bfce:	add    bh,bh
   14000bfd0:	retf   0x6c
   14000bfd3:	dec    edx
   14000bfd5:	ins    BYTE PTR es:[rdi],dx
   14000bfd6:	add    bh,bh
   14000bfd8:	retf   0x6b
   14000bfdb:	dec    ecx
   14000bfdd:	imul   eax,DWORD PTR [rax],0xffffffff
   14000bfe0:	leave  
   14000bfe1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000bfe4:	leave  
   14000bfe5:	push   0x0
   14000bfe7:	dec    ecx
   14000bfe9:	push   0x0
   14000bfeb:	dec    ecx
   14000bfed:	push   0x0
   14000bfef:	dec    ecx
   14000bff1:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000bff7:	dec    ecx
   14000bff9:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000bfff:	dec    eax
   14000c001:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000c007:	dec    eax
   14000c009:	push   0x68c8ff00
   14000c00e:	add    bh,bh
   14000c010:	enter  0x67,0xff
   14000c014:	enter  0x67,0xff
   14000c018:	enter  0x67,0xff
   14000c01c:	(bad)  
   14000c01d:	data16 add bh,bh
   14000c020:	(bad)  
   14000c021:	data16 add bh,bh
   14000c024:	(bad)  
   14000c025:	data16 add bh,bh
   14000c028:	(bad)  
   14000c029:	gs add bh,bh
   14000c02c:	(bad)  
   14000c02d:	(bad)  
   14000c02e:	(bad)  
   14000c02f:	(bad)  
   14000c030:	(bad)  
   14000c031:	(bad)  
   14000c032:	(bad)  
   14000c033:	(bad)  
   14000c034:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c03a:	(bad)  
   14000c03b:	(bad)  
   14000c03c:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000c042:	(bad)  
   14000c043:	(bad)  
   14000c044:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c04a:	(bad)  
   14000c04b:	(bad)  
   14000c04c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c052:	(bad)  
   14000c053:	(bad)  
   14000c054:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000c05b:	push   QWORD PTR [rdi]
   14000c05d:	mov    esp,0xbc37fffe
   14000c062:	(bad)  
   14000c063:	push   QWORD PTR [rdi]
   14000c065:	mov    esp,0xbc37fffe
   14000c06a:	(bad)  
   14000c06b:	push   QWORD PTR [rdi]
   14000c06d:	mov    esp,0xbc37fffe
   14000c072:	(bad)  
   14000c073:	push   QWORD PTR [rsi]
   14000c075:	mov    ebx,0xbb36fffe
   14000c07a:	(bad)  
   14000c07b:	push   QWORD PTR [rsi]
   14000c07d:	mov    ebx,0xbb36fffe
   14000c082:	(bad)  
   14000c083:	push   QWORD PTR [rsi]
   14000c085:	mov    ebx,0xbb36fffe
   14000c08a:	(bad)  
   14000c08b:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600bf4b
   14000c091:	mov    edx,0x9d3afffe
   14000c096:	sar    bh,1
   14000c098:	rex.RXB
   14000c099:	rex.RXB
   14000c09a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c09e:	rex.RXB inc DWORD PTR [r8]
	...
   14000c0bd:	add    BYTE PTR [rax],al
   14000c0bf:	add    BYTE PTR [rdi+0x47],al
   14000c0c2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c0c6:	rex.RXB jmp FWORD PTR [r9-0x3500ed9c]
   14000c0cd:	ins    BYTE PTR es:[rdi],dx
   14000c0ce:	add    bh,bh
   14000c0d0:	retf   0x6c
   14000c0d3:	dec    edx
   14000c0d5:	ins    BYTE PTR es:[rdi],dx
   14000c0d6:	add    bh,bh
   14000c0d8:	retf   0x6c
   14000c0db:	dec    edx
   14000c0dd:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c0e0:	leave  
   14000c0e1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c0e4:	leave  
   14000c0e5:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c0e8:	leave  
   14000c0e9:	push   0x0
   14000c0eb:	dec    ecx
   14000c0ed:	push   0x0
   14000c0ef:	dec    ecx
   14000c0f1:	push   0x0
   14000c0f3:	dec    ecx
   14000c0f5:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000c0fb:	dec    ecx
   14000c0fd:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000c103:	dec    eax
   14000c105:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000c10b:	dec    eax
   14000c10d:	push   0x68c8ff00
   14000c112:	add    bh,bh
   14000c114:	enter  0x67,0xff
   14000c118:	enter  0x67,0xff
   14000c11c:	enter  0x67,0xff
   14000c120:	(bad)  
   14000c121:	data16 add bh,bh
   14000c124:	(bad)  
   14000c125:	data16 add bh,bh
   14000c128:	(bad)  
   14000c129:	data16 add bh,bh
   14000c12c:	(bad)  
   14000c12d:	(bad)  
   14000c12e:	(bad)  
   14000c12f:	(bad)  
   14000c130:	(bad)  
   14000c131:	(bad)  
   14000c132:	(bad)  
   14000c133:	(bad)  
   14000c134:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c13a:	(bad)  
   14000c13b:	(bad)  
   14000c13c:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000c142:	(bad)  
   14000c143:	(bad)  
   14000c144:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c14a:	(bad)  
   14000c14b:	(bad)  
   14000c14c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c152:	(bad)  
   14000c153:	(bad)  
   14000c154:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000c15a:	(bad)  
   14000c15b:	(bad)  
   14000c15c:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000c163:	push   QWORD PTR [rdi]
   14000c165:	mov    esp,0xbc37fffe
   14000c16a:	(bad)  
   14000c16b:	push   QWORD PTR [rdi]
   14000c16d:	mov    esp,0xbc37fffe
   14000c172:	(bad)  
   14000c173:	push   QWORD PTR [rdi]
   14000c175:	mov    esp,0xbb36fffe
   14000c17a:	(bad)  
   14000c17b:	push   QWORD PTR [rsi]
   14000c17d:	mov    ebx,0xbb36fffe
   14000c182:	(bad)  
   14000c183:	push   QWORD PTR [rsi]
   14000c185:	mov    ebx,0xbb36fffe
   14000c18a:	(bad)  
   14000c18b:	push   QWORD PTR [rsi]
   14000c18d:	mov    ebx,0xba35fffe
   14000c192:	(bad)  
   14000c193:	(bad)  
   14000c194:	cmp    bl,BYTE PTR [rbp+0x4747ffd0]
   14000c19a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c19e:	rex.RXB inc DWORD PTR [r8]
	...
   14000c1bd:	add    BYTE PTR [rax],al
   14000c1bf:	add    BYTE PTR [rdi+0x47],al
   14000c1c2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c1c6:	rex.RXB push QWORD PTR [r9-0x3500f29a]
   14000c1cd:	ins    DWORD PTR es:[rdi],dx
   14000c1ce:	add    bh,bh
   14000c1d0:	retf   0x6c
   14000c1d3:	dec    edx
   14000c1d5:	ins    BYTE PTR es:[rdi],dx
   14000c1d6:	add    bh,bh
   14000c1d8:	retf   0x6c
   14000c1db:	dec    edx
   14000c1dd:	ins    BYTE PTR es:[rdi],dx
   14000c1de:	add    bh,bh
   14000c1e0:	retf   0x6b
   14000c1e3:	dec    ecx
   14000c1e5:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c1e8:	leave  
   14000c1e9:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c1ec:	leave  
   14000c1ed:	push   0x0
   14000c1ef:	dec    ecx
   14000c1f1:	push   0x0
   14000c1f3:	dec    ecx
   14000c1f5:	push   0x0
   14000c1f7:	dec    ecx
   14000c1f9:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000c1ff:	dec    ecx
   14000c201:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000c207:	dec    eax
   14000c209:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000c20f:	dec    eax
   14000c211:	push   0x68c8ff00
   14000c216:	add    bh,bh
   14000c218:	enter  0x67,0xff
   14000c21c:	enter  0x67,0xff
   14000c220:	enter  0x67,0xff
   14000c224:	(bad)  
   14000c225:	data16 add bh,bh
   14000c228:	(bad)  
   14000c229:	data16 add bh,bh
   14000c22c:	(bad)  
   14000c22d:	(bad)  
   14000c22e:	(bad)  
   14000c22f:	(bad)  
   14000c230:	(bad)  
   14000c231:	(bad)  
   14000c232:	(bad)  
   14000c233:	(bad)  
   14000c234:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c23a:	(bad)  
   14000c23b:	(bad)  
   14000c23c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c242:	(bad)  
   14000c243:	(bad)  
   14000c244:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000c24a:	(bad)  
   14000c24b:	(bad)  
   14000c24c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c252:	(bad)  
   14000c253:	(bad)  
   14000c254:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c25a:	(bad)  
   14000c25b:	(bad)  
   14000c25c:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000c263:	push   QWORD PTR [rdi]
   14000c265:	mov    esp,0xbc37fffe
   14000c26a:	(bad)  
   14000c26b:	push   QWORD PTR [rdi]
   14000c26d:	mov    esp,0xbc37fffe
   14000c272:	(bad)  
   14000c273:	push   QWORD PTR [rdi]
   14000c275:	mov    esp,0xbc37fffe
   14000c27a:	(bad)  
   14000c27b:	push   QWORD PTR [rsi]
   14000c27d:	mov    ebx,0xbb36fffe
   14000c282:	(bad)  
   14000c283:	push   QWORD PTR [rsi]
   14000c285:	mov    ebx,0xbb36fffe
   14000c28a:	(bad)  
   14000c28b:	push   QWORD PTR [rsi]
   14000c28d:	mov    ebx,0xbb36fffe
   14000c292:	(bad)  
   14000c293:	(bad)  
   14000c294:	cmp    DWORD PTR [rbp+0x4747ffdc],esp
   14000c29a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c29e:	rex.RXB inc DWORD PTR [r8]
	...
   14000c2bd:	add    BYTE PTR [rax],al
   14000c2bf:	add    BYTE PTR [rdi+0x47],al
   14000c2c2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c2c6:	rex.RXB dec r10d
   14000c2c9:	ins    DWORD PTR es:[rdi],dx
   14000c2ca:	add    bh,bh
   14000c2cc:	retf   0x6d
   14000c2cf:	dec    edx
   14000c2d1:	ins    DWORD PTR es:[rdi],dx
   14000c2d2:	add    bh,bh
   14000c2d4:	retf   0x6c
   14000c2d7:	dec    edx
   14000c2d9:	ins    BYTE PTR es:[rdi],dx
   14000c2da:	add    bh,bh
   14000c2dc:	retf   0x6c
   14000c2df:	dec    edx
   14000c2e1:	ins    BYTE PTR es:[rdi],dx
   14000c2e2:	add    bh,bh
   14000c2e4:	retf   0x6b
   14000c2e7:	dec    ecx
   14000c2e9:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c2ec:	leave  
   14000c2ed:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c2f0:	leave  
   14000c2f1:	push   0x0
   14000c2f3:	dec    ecx
   14000c2f5:	push   0x0
   14000c2f7:	dec    ecx
   14000c2f9:	push   0x0
   14000c2fb:	dec    ecx
   14000c2fd:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000c303:	dec    ecx
   14000c305:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000c30b:	dec    eax
   14000c30d:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000c313:	dec    eax
   14000c315:	push   0x68c8ff00
   14000c31a:	add    bh,bh
   14000c31c:	enter  0x67,0xff
   14000c320:	enter  0x67,0xff
   14000c324:	enter  0x67,0xff
   14000c328:	(bad)  
   14000c329:	data16 add bh,bh
   14000c32c:	(bad)  
   14000c32d:	(bad)  
   14000c32e:	(bad)  
   14000c32f:	(bad)  
   14000c330:	(bad)  
   14000c331:	(bad)  
   14000c332:	(bad)  
   14000c333:	(bad)  
   14000c334:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c33a:	(bad)  
   14000c33b:	(bad)  
   14000c33c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c342:	(bad)  
   14000c343:	(bad)  
   14000c344:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000c34a:	(bad)  
   14000c34b:	(bad)  
   14000c34c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c352:	(bad)  
   14000c353:	(bad)  
   14000c354:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c35a:	(bad)  
   14000c35b:	(bad)  
   14000c35c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000c362:	(bad)  
   14000c363:	(bad)  
   14000c364:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000c36b:	push   QWORD PTR [rdi]
   14000c36d:	mov    esp,0xbc37fffe
   14000c372:	(bad)  
   14000c373:	push   QWORD PTR [rdi]
   14000c375:	mov    esp,0xbc37fffe
   14000c37a:	(bad)  
   14000c37b:	push   QWORD PTR [rdi]
   14000c37d:	mov    esp,0xbb36fffe
   14000c382:	(bad)  
   14000c383:	push   QWORD PTR [rsi]
   14000c385:	mov    ebx,0xbb36fffe
   14000c38a:	(bad)  
   14000c38b:	push   QWORD PTR [rsi]
   14000c38d:	mov    ebx,0xbb36fffe
   14000c392:	(bad)  
   14000c393:	push   QWORD PTR [rsi]
   14000c395:	mov    ebx,0x4747fffe
   14000c39a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c39e:	rex.RXB inc DWORD PTR [r8]
	...
   14000c3bd:	add    BYTE PTR [rax],al
   14000c3bf:	add    BYTE PTR [rdi+0x47],al
   14000c3c2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c3c6:	rex.RXB dec r11d
   14000c3c9:	ins    DWORD PTR es:[rdi],dx
   14000c3ca:	add    bh,bh
   14000c3cc:	retf   0x6d
   14000c3cf:	dec    edx
   14000c3d1:	ins    DWORD PTR es:[rdi],dx
   14000c3d2:	add    bh,bh
   14000c3d4:	retf   0x6d
   14000c3d7:	dec    edx
   14000c3d9:	ins    BYTE PTR es:[rdi],dx
   14000c3da:	add    bh,bh
   14000c3dc:	retf   0x6c
   14000c3df:	dec    edx
   14000c3e1:	ins    BYTE PTR es:[rdi],dx
   14000c3e2:	add    bh,bh
   14000c3e4:	retf   0x6c
   14000c3e7:	dec    edx
   14000c3e9:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c3ec:	leave  
   14000c3ed:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c3f0:	leave  
   14000c3f1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c3f4:	leave  
   14000c3f5:	push   0x0
   14000c3f7:	dec    ecx
   14000c3f9:	push   0x0
   14000c3fb:	dec    ecx
   14000c3fd:	push   0x0
   14000c3ff:	dec    ecx
   14000c401:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000c407:	dec    ecx
   14000c409:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000c40f:	dec    eax
   14000c411:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000c417:	dec    eax
   14000c419:	push   0x68c8ff00
   14000c41e:	add    bh,bh
   14000c420:	enter  0x67,0xff
   14000c424:	enter  0x67,0xff
   14000c428:	enter  0x67,0xff
   14000c42c:	(bad)  
   14000c42d:	(bad)  
   14000c42e:	(bad)  
   14000c42f:	(bad)  
   14000c430:	(bad)  
   14000c431:	(bad)  
   14000c432:	(bad)  
   14000c433:	(bad)  
   14000c434:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000c43a:	(bad)  
   14000c43b:	(bad)  
   14000c43c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c442:	(bad)  
   14000c443:	(bad)  
   14000c444:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c44a:	(bad)  
   14000c44b:	(bad)  
   14000c44c:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000c452:	(bad)  
   14000c453:	(bad)  
   14000c454:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c45a:	(bad)  
   14000c45b:	(bad)  
   14000c45c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c462:	(bad)  
   14000c463:	(bad)  
   14000c464:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000c46b:	push   QWORD PTR [rdi]
   14000c46d:	mov    esp,0xbc37fffe
   14000c472:	(bad)  
   14000c473:	push   QWORD PTR [rdi]
   14000c475:	mov    esp,0xbc37fffe
   14000c47a:	(bad)  
   14000c47b:	push   QWORD PTR [rdi]
   14000c47d:	mov    esp,0xbc37fffe
   14000c482:	(bad)  
   14000c483:	push   QWORD PTR [rsi]
   14000c485:	mov    ebx,0xbb36fffe
   14000c48a:	(bad)  
   14000c48b:	push   QWORD PTR [rsi]
   14000c48d:	mov    ebx,0xbb36fffe
   14000c492:	(bad)  
   14000c493:	push   QWORD PTR [rsi]
   14000c495:	mov    ebx,0x4747fffe
   14000c49a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c49e:	rex.RXB inc DWORD PTR [r8]
	...
   14000c4bd:	add    BYTE PTR [rax],al
   14000c4bf:	add    BYTE PTR [rdi+0x47],al
   14000c4c2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c4c6:	rex.RXB dec r11d
   14000c4c9:	outs   dx,BYTE PTR ds:[rsi]
   14000c4ca:	add    bh,bh
   14000c4cc:	retf   
   14000c4cd:	ins    DWORD PTR es:[rdi],dx
   14000c4ce:	add    bh,bh
   14000c4d0:	retf   0x6d
   14000c4d3:	dec    edx
   14000c4d5:	ins    DWORD PTR es:[rdi],dx
   14000c4d6:	add    bh,bh
   14000c4d8:	retf   0x6d
   14000c4db:	dec    edx
   14000c4dd:	ins    BYTE PTR es:[rdi],dx
   14000c4de:	add    bh,bh
   14000c4e0:	retf   0x6c
   14000c4e3:	dec    edx
   14000c4e5:	ins    BYTE PTR es:[rdi],dx
   14000c4e6:	add    bh,bh
   14000c4e8:	retf   0x6c
   14000c4eb:	dec    edx
   14000c4ed:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c4f0:	leave  
   14000c4f1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c4f4:	leave  
   14000c4f5:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c4f8:	leave  
   14000c4f9:	push   0x0
   14000c4fb:	dec    ecx
   14000c4fd:	push   0x0
   14000c4ff:	dec    ecx
   14000c501:	push   0x0
   14000c503:	dec    ecx
   14000c505:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000c50b:	dec    ecx
   14000c50d:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000c513:	dec    eax
   14000c515:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000c51b:	dec    eax
   14000c51d:	push   0x68c8ff00
   14000c522:	add    bh,bh
   14000c524:	enter  0x67,0xff
   14000c528:	enter  0x67,0xff
   14000c52c:	(bad)  
   14000c52d:	(bad)  
   14000c52e:	(bad)  
   14000c52f:	(bad)  
   14000c530:	(bad)  
   14000c531:	(bad)  
   14000c532:	(bad)  
   14000c533:	(bad)  
   14000c534:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000c53a:	(bad)  
   14000c53b:	(bad)  
   14000c53c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c542:	(bad)  
   14000c543:	(bad)  
   14000c544:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c54a:	(bad)  
   14000c54b:	(bad)  
   14000c54c:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000c552:	(bad)  
   14000c553:	(bad)  
   14000c554:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c55a:	(bad)  
   14000c55b:	(bad)  
   14000c55c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c562:	(bad)  
   14000c563:	(bad)  
   14000c564:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000c56a:	(bad)  
   14000c56b:	(bad)  
   14000c56c:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000c573:	push   QWORD PTR [rdi]
   14000c575:	mov    esp,0xbc37fffe
   14000c57a:	(bad)  
   14000c57b:	push   QWORD PTR [rdi]
   14000c57d:	mov    esp,0xbc37fffe
   14000c582:	(bad)  
   14000c583:	push   QWORD PTR [rdi]
   14000c585:	mov    esp,0xbb36fffe
   14000c58a:	(bad)  
   14000c58b:	push   QWORD PTR [rsi]
   14000c58d:	mov    ebx,0xbb36fffe
   14000c592:	(bad)  
   14000c593:	push   QWORD PTR [rsi]
   14000c595:	mov    ebx,0x4747fffe
   14000c59a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c59e:	rex.RXB inc DWORD PTR [r8]
	...
   14000c5bd:	add    BYTE PTR [rax],al
   14000c5bf:	add    BYTE PTR [rdi+0x47],al
   14000c5c2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c5c6:	rex.RXB dec r11d
   14000c5c9:	outs   dx,BYTE PTR ds:[rsi]
   14000c5ca:	add    bh,bh
   14000c5cc:	retf   
   14000c5cd:	outs   dx,BYTE PTR ds:[rsi]
   14000c5ce:	add    bh,bh
   14000c5d0:	retf   
   14000c5d1:	ins    DWORD PTR es:[rdi],dx
   14000c5d2:	add    bh,bh
   14000c5d4:	retf   0x6d
   14000c5d7:	dec    edx
   14000c5d9:	ins    DWORD PTR es:[rdi],dx
   14000c5da:	add    bh,bh
   14000c5dc:	retf   0x6d
   14000c5df:	dec    edx
   14000c5e1:	ins    BYTE PTR es:[rdi],dx
   14000c5e2:	add    bh,bh
   14000c5e4:	retf   0x6c
   14000c5e7:	dec    edx
   14000c5e9:	ins    BYTE PTR es:[rdi],dx
   14000c5ea:	add    bh,bh
   14000c5ec:	retf   0x6c
   14000c5ef:	dec    edx
   14000c5f1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c5f4:	leave  
   14000c5f5:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c5f8:	leave  
   14000c5f9:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c5fc:	leave  
   14000c5fd:	push   0x0
   14000c5ff:	dec    ecx
   14000c601:	push   0x0
   14000c603:	dec    ecx
   14000c605:	push   0x0
   14000c607:	dec    ecx
   14000c609:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000c60f:	dec    ecx
   14000c611:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000c617:	dec    eax
   14000c619:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000c61f:	dec    eax
   14000c621:	push   0x68c8ff00
   14000c626:	add    bh,bh
   14000c628:	enter  0x67,0xff
   14000c62c:	(bad)  
   14000c62d:	(bad)  
   14000c62e:	(bad)  
   14000c62f:	(bad)  
   14000c630:	(bad)  
   14000c631:	(bad)  
   14000c632:	(bad)  
   14000c633:	(bad)  
   14000c634:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000c63a:	(bad)  
   14000c63b:	(bad)  
   14000c63c:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000c642:	(bad)  
   14000c643:	(bad)  
   14000c644:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c64a:	(bad)  
   14000c64b:	(bad)  
   14000c64c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c652:	(bad)  
   14000c653:	(bad)  
   14000c654:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000c65a:	(bad)  
   14000c65b:	(bad)  
   14000c65c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c662:	(bad)  
   14000c663:	(bad)  
   14000c664:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c66a:	(bad)  
   14000c66b:	(bad)  
   14000c66c:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000c673:	push   QWORD PTR [rdi]
   14000c675:	mov    esp,0xbc37fffe
   14000c67a:	(bad)  
   14000c67b:	push   QWORD PTR [rdi]
   14000c67d:	mov    esp,0xbc37fffe
   14000c682:	(bad)  
   14000c683:	push   QWORD PTR [rdi]
   14000c685:	mov    esp,0xbc37fffe
   14000c68a:	(bad)  
   14000c68b:	push   QWORD PTR [rsi]
   14000c68d:	mov    ebx,0xbb36fffe
   14000c692:	(bad)  
   14000c693:	push   QWORD PTR [rsi]
   14000c695:	mov    ebx,0x4747fffe
   14000c69a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c69e:	rex.RXB inc DWORD PTR [r8]
	...
   14000c6bd:	add    BYTE PTR [rax],al
   14000c6bf:	add    BYTE PTR [rdi+0x47],al
   14000c6c2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c6c6:	rex.RXB dec r11d
   14000c6c9:	outs   dx,BYTE PTR ds:[rsi]
   14000c6ca:	add    bh,bh
   14000c6cc:	retf   
   14000c6cd:	outs   dx,BYTE PTR ds:[rsi]
   14000c6ce:	add    bh,bh
   14000c6d0:	retf   
   14000c6d1:	outs   dx,BYTE PTR ds:[rsi]
   14000c6d2:	add    bh,bh
   14000c6d4:	retf   
   14000c6d5:	ins    DWORD PTR es:[rdi],dx
   14000c6d6:	add    bh,bh
   14000c6d8:	retf   0x6d
   14000c6db:	dec    edx
   14000c6dd:	ins    DWORD PTR es:[rdi],dx
   14000c6de:	add    bh,bh
   14000c6e0:	retf   0x6d
   14000c6e3:	dec    edx
   14000c6e5:	ins    BYTE PTR es:[rdi],dx
   14000c6e6:	add    bh,bh
   14000c6e8:	retf   0x6c
   14000c6eb:	dec    edx
   14000c6ed:	ins    BYTE PTR es:[rdi],dx
   14000c6ee:	add    bh,bh
   14000c6f0:	retf   0x6c
   14000c6f3:	dec    edx
   14000c6f5:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c6f8:	leave  
   14000c6f9:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c6fc:	leave  
   14000c6fd:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c700:	leave  
   14000c701:	push   0x0
   14000c703:	dec    ecx
   14000c705:	push   0x0
   14000c707:	dec    ecx
   14000c709:	push   0x0
   14000c70b:	dec    ecx
   14000c70d:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000c713:	dec    ecx
   14000c715:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000c71b:	dec    eax
   14000c71d:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000c723:	dec    eax
   14000c725:	push   0x68c8ff00
   14000c72a:	add    bh,bh
   14000c72c:	(bad)  
   14000c72d:	(bad)  
   14000c72e:	(bad)  
   14000c72f:	(bad)  
   14000c730:	(bad)  
   14000c731:	(bad)  
   14000c732:	(bad)  
   14000c733:	(bad)  
   14000c734:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000c73a:	(bad)  
   14000c73b:	(bad)  
   14000c73c:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000c742:	(bad)  
   14000c743:	(bad)  
   14000c744:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c74a:	(bad)  
   14000c74b:	(bad)  
   14000c74c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c752:	(bad)  
   14000c753:	(bad)  
   14000c754:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000c75a:	(bad)  
   14000c75b:	(bad)  
   14000c75c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c762:	(bad)  
   14000c763:	(bad)  
   14000c764:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c76a:	(bad)  
   14000c76b:	(bad)  
   14000c76c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000c772:	(bad)  
   14000c773:	(bad)  
   14000c774:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000c77b:	push   QWORD PTR [rdi]
   14000c77d:	mov    esp,0xbc37fffe
   14000c782:	(bad)  
   14000c783:	push   QWORD PTR [rdi]
   14000c785:	mov    esp,0xbc37fffe
   14000c78a:	(bad)  
   14000c78b:	push   QWORD PTR [rdi]
   14000c78d:	mov    esp,0xbb36fffe
   14000c792:	(bad)  
   14000c793:	push   QWORD PTR [rsi]
   14000c795:	mov    ebx,0x4747fffe
   14000c79a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c79e:	rex.RXB inc DWORD PTR [r8]
	...
   14000c7bd:	add    BYTE PTR [rax],al
   14000c7bf:	add    BYTE PTR [rdi+0x47],al
   14000c7c2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c7c6:	rex.RXB dec r11d
   14000c7c9:	outs   dx,BYTE PTR ds:[rsi]
   14000c7ca:	add    bh,bh
   14000c7cc:	retf   
   14000c7cd:	outs   dx,BYTE PTR ds:[rsi]
   14000c7ce:	add    bh,bh
   14000c7d0:	retf   
   14000c7d1:	outs   dx,BYTE PTR ds:[rsi]
   14000c7d2:	add    bh,bh
   14000c7d4:	retf   
   14000c7d5:	outs   dx,BYTE PTR ds:[rsi]
   14000c7d6:	add    bh,bh
   14000c7d8:	retf   
   14000c7d9:	ins    DWORD PTR es:[rdi],dx
   14000c7da:	add    bh,bh
   14000c7dc:	retf   0x6d
   14000c7df:	dec    edx
   14000c7e1:	ins    DWORD PTR es:[rdi],dx
   14000c7e2:	add    bh,bh
   14000c7e4:	retf   0x6d
   14000c7e7:	dec    edx
   14000c7e9:	ins    BYTE PTR es:[rdi],dx
   14000c7ea:	add    bh,bh
   14000c7ec:	retf   0x6c
   14000c7ef:	dec    edx
   14000c7f1:	ins    BYTE PTR es:[rdi],dx
   14000c7f2:	add    bh,bh
   14000c7f4:	retf   0x6c
   14000c7f7:	dec    edx
   14000c7f9:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c7fc:	leave  
   14000c7fd:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c800:	leave  
   14000c801:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c804:	leave  
   14000c805:	push   0x0
   14000c807:	dec    ecx
   14000c809:	push   0x0
   14000c80b:	dec    ecx
   14000c80d:	push   0x0
   14000c80f:	dec    ecx
   14000c811:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000c817:	dec    ecx
   14000c819:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000c81f:	dec    eax
   14000c821:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000c827:	dec    eax
   14000c829:	push   0xffffffffffffff00
   14000c82e:	(bad)  
   14000c82f:	(bad)  
   14000c830:	(bad)  
   14000c831:	(bad)  
   14000c832:	(bad)  
   14000c833:	(bad)  
   14000c834:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000c83a:	(bad)  
   14000c83b:	(bad)  
   14000c83c:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000c842:	(bad)  
   14000c843:	(bad)  
   14000c844:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000c84a:	(bad)  
   14000c84b:	(bad)  
   14000c84c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c852:	(bad)  
   14000c853:	(bad)  
   14000c854:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c85a:	(bad)  
   14000c85b:	(bad)  
   14000c85c:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000c862:	(bad)  
   14000c863:	(bad)  
   14000c864:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c86a:	(bad)  
   14000c86b:	(bad)  
   14000c86c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c872:	(bad)  
   14000c873:	(bad)  
   14000c874:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000c87b:	push   QWORD PTR [rdi]
   14000c87d:	mov    esp,0xbc37fffe
   14000c882:	(bad)  
   14000c883:	push   QWORD PTR [rdi]
   14000c885:	mov    esp,0xbc37fffe
   14000c88a:	(bad)  
   14000c88b:	push   QWORD PTR [rdi]
   14000c88d:	mov    esp,0xbc37fffe
   14000c892:	(bad)  
   14000c893:	push   QWORD PTR [rsi]
   14000c895:	mov    ebx,0x4747fffe
   14000c89a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c89e:	rex.RXB inc DWORD PTR [r8]
	...
   14000c8bd:	add    BYTE PTR [rax],al
   14000c8bf:	add    BYTE PTR [rdi+0x47],al
   14000c8c2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c8c6:	rex.RXB dec r11d
   14000c8c9:	outs   dx,DWORD PTR ds:[rsi]
   14000c8ca:	add    bh,bh
   14000c8cc:	retf   
   14000c8cd:	outs   dx,BYTE PTR ds:[rsi]
   14000c8ce:	add    bh,bh
   14000c8d0:	retf   
   14000c8d1:	outs   dx,BYTE PTR ds:[rsi]
   14000c8d2:	add    bh,bh
   14000c8d4:	retf   
   14000c8d5:	outs   dx,BYTE PTR ds:[rsi]
   14000c8d6:	add    bh,bh
   14000c8d8:	retf   
   14000c8d9:	outs   dx,BYTE PTR ds:[rsi]
   14000c8da:	add    bh,bh
   14000c8dc:	retf   
   14000c8dd:	ins    DWORD PTR es:[rdi],dx
   14000c8de:	add    bh,bh
   14000c8e0:	retf   0x6d
   14000c8e3:	dec    edx
   14000c8e5:	ins    DWORD PTR es:[rdi],dx
   14000c8e6:	add    bh,bh
   14000c8e8:	retf   0x6d
   14000c8eb:	dec    edx
   14000c8ed:	ins    BYTE PTR es:[rdi],dx
   14000c8ee:	add    bh,bh
   14000c8f0:	retf   0x6c
   14000c8f3:	dec    edx
   14000c8f5:	ins    BYTE PTR es:[rdi],dx
   14000c8f6:	add    bh,bh
   14000c8f8:	retf   0x6c
   14000c8fb:	dec    edx
   14000c8fd:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c900:	leave  
   14000c901:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c904:	leave  
   14000c905:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c908:	leave  
   14000c909:	push   0x0
   14000c90b:	dec    ecx
   14000c90d:	push   0x0
   14000c90f:	dec    ecx
   14000c911:	push   0x0
   14000c913:	dec    ecx
   14000c915:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000c91b:	dec    ecx
   14000c91d:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000c923:	dec    eax
   14000c925:	imul   eax,DWORD PTR [rax],0x68c8ff
   14000c92b:	(bad)  
   14000c92c:	(bad)  
   14000c92d:	(bad)  
   14000c92e:	(bad)  
   14000c92f:	(bad)  
   14000c930:	(bad)  
   14000c931:	(bad)  
   14000c932:	(bad)  
   14000c933:	(bad)  
   14000c934:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000c93a:	(bad)  
   14000c93b:	(bad)  
   14000c93c:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000c942:	(bad)  
   14000c943:	(bad)  
   14000c944:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000c94a:	(bad)  
   14000c94b:	(bad)  
   14000c94c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c952:	(bad)  
   14000c953:	(bad)  
   14000c954:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000c95a:	(bad)  
   14000c95b:	(bad)  
   14000c95c:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000c962:	(bad)  
   14000c963:	(bad)  
   14000c964:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c96a:	(bad)  
   14000c96b:	(bad)  
   14000c96c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000c972:	(bad)  
   14000c973:	(bad)  
   14000c974:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000c97a:	(bad)  
   14000c97b:	(bad)  
   14000c97c:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000c983:	push   QWORD PTR [rdi]
   14000c985:	mov    esp,0xbc37fffe
   14000c98a:	(bad)  
   14000c98b:	push   QWORD PTR [rdi]
   14000c98d:	mov    esp,0xbc37fffe
   14000c992:	(bad)  
   14000c993:	push   QWORD PTR [rdi]
   14000c995:	mov    esp,0x4747fffe
   14000c99a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c99e:	rex.RXB inc DWORD PTR [r8]
	...
   14000c9bd:	add    BYTE PTR [rax],al
   14000c9bf:	add    BYTE PTR [rdi+0x47],al
   14000c9c2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000c9c6:	rex.RXB dec r11d
   14000c9c9:	outs   dx,DWORD PTR ds:[rsi]
   14000c9ca:	add    bh,bh
   14000c9cc:	retf   
   14000c9cd:	outs   dx,DWORD PTR ds:[rsi]
   14000c9ce:	add    bh,bh
   14000c9d0:	retf   
   14000c9d1:	outs   dx,BYTE PTR ds:[rsi]
   14000c9d2:	add    bh,bh
   14000c9d4:	retf   
   14000c9d5:	outs   dx,BYTE PTR ds:[rsi]
   14000c9d6:	add    bh,bh
   14000c9d8:	retf   
   14000c9d9:	outs   dx,BYTE PTR ds:[rsi]
   14000c9da:	add    bh,bh
   14000c9dc:	retf   
   14000c9dd:	outs   dx,BYTE PTR ds:[rsi]
   14000c9de:	add    bh,bh
   14000c9e0:	retf   
   14000c9e1:	ins    DWORD PTR es:[rdi],dx
   14000c9e2:	add    bh,bh
   14000c9e4:	retf   0x6d
   14000c9e7:	dec    edx
   14000c9e9:	ins    DWORD PTR es:[rdi],dx
   14000c9ea:	add    bh,bh
   14000c9ec:	retf   0x6d
   14000c9ef:	dec    edx
   14000c9f1:	ins    BYTE PTR es:[rdi],dx
   14000c9f2:	add    bh,bh
   14000c9f4:	retf   0x6c
   14000c9f7:	dec    edx
   14000c9f9:	ins    BYTE PTR es:[rdi],dx
   14000c9fa:	add    bh,bh
   14000c9fc:	retf   0x6c
   14000c9ff:	dec    edx
   14000ca01:	imul   eax,DWORD PTR [rax],0xffffffff
   14000ca04:	leave  
   14000ca05:	imul   eax,DWORD PTR [rax],0xffffffff
   14000ca08:	leave  
   14000ca09:	imul   eax,DWORD PTR [rax],0xffffffff
   14000ca0c:	leave  
   14000ca0d:	push   0x0
   14000ca0f:	dec    ecx
   14000ca11:	push   0x0
   14000ca13:	dec    ecx
   14000ca15:	push   0x0
   14000ca17:	dec    ecx
   14000ca19:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000ca1f:	dec    ecx
   14000ca21:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000ca27:	dec    eax
   14000ca29:	imul   eax,DWORD PTR [rax],0xffffffff
   14000ca2f:	(bad)  
   14000ca30:	(bad)  
   14000ca31:	(bad)  
   14000ca32:	(bad)  
   14000ca33:	(bad)  
   14000ca34:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14000ca3a:	(bad)  
   14000ca3b:	(bad)  
   14000ca3c:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000ca42:	(bad)  
   14000ca43:	(bad)  
   14000ca44:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000ca4a:	(bad)  
   14000ca4b:	(bad)  
   14000ca4c:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000ca52:	(bad)  
   14000ca53:	(bad)  
   14000ca54:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000ca5a:	(bad)  
   14000ca5b:	(bad)  
   14000ca5c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000ca62:	(bad)  
   14000ca63:	(bad)  
   14000ca64:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000ca6a:	(bad)  
   14000ca6b:	(bad)  
   14000ca6c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000ca72:	(bad)  
   14000ca73:	(bad)  
   14000ca74:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000ca7a:	(bad)  
   14000ca7b:	(bad)  
   14000ca7c:	cmp    BYTE PTR [rsi+rdi*8-0x143c701],bh
   14000ca83:	push   QWORD PTR [rdi]
   14000ca85:	mov    esp,0xbc37fffe
   14000ca8a:	(bad)  
   14000ca8b:	push   QWORD PTR [rdi]
   14000ca8d:	mov    esp,0xbc37fffe
   14000ca92:	(bad)  
   14000ca93:	push   QWORD PTR [rdi]
   14000ca95:	mov    esp,0x4747fffe
   14000ca9a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ca9e:	rex.RXB inc DWORD PTR [r8]
	...
   14000cabd:	add    BYTE PTR [rax],al
   14000cabf:	add    BYTE PTR [rdi+0x47],al
   14000cac2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cac6:	rex.RXB dec r11d
   14000cac9:	outs   dx,DWORD PTR ds:[rsi]
   14000caca:	add    bh,bh
   14000cacc:	retf   
   14000cacd:	outs   dx,DWORD PTR ds:[rsi]
   14000cace:	add    bh,bh
   14000cad0:	retf   
   14000cad1:	outs   dx,DWORD PTR ds:[rsi]
   14000cad2:	add    bh,bh
   14000cad4:	retf   
   14000cad5:	outs   dx,BYTE PTR ds:[rsi]
   14000cad6:	add    bh,bh
   14000cad8:	retf   
   14000cad9:	outs   dx,BYTE PTR ds:[rsi]
   14000cada:	add    bh,bh
   14000cadc:	retf   
   14000cadd:	outs   dx,BYTE PTR ds:[rsi]
   14000cade:	add    bh,bh
   14000cae0:	retf   
   14000cae1:	outs   dx,BYTE PTR ds:[rsi]
   14000cae2:	add    bh,bh
   14000cae4:	retf   
   14000cae5:	ins    DWORD PTR es:[rdi],dx
   14000cae6:	add    bh,bh
   14000cae8:	retf   0x6d
   14000caeb:	dec    edx
   14000caed:	ins    DWORD PTR es:[rdi],dx
   14000caee:	add    bh,bh
   14000caf0:	retf   0x6d
   14000caf3:	dec    edx
   14000caf5:	ins    BYTE PTR es:[rdi],dx
   14000caf6:	add    bh,bh
   14000caf8:	retf   0x6c
   14000cafb:	dec    edx
   14000cafd:	ins    BYTE PTR es:[rdi],dx
   14000cafe:	add    bh,bh
   14000cb00:	retf   0x6c
   14000cb03:	dec    edx
   14000cb05:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cb08:	leave  
   14000cb09:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cb0c:	leave  
   14000cb0d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cb10:	leave  
   14000cb11:	push   0x0
   14000cb13:	dec    ecx
   14000cb15:	push   0x0
   14000cb17:	dec    ecx
   14000cb19:	push   0x0
   14000cb1b:	dec    ecx
   14000cb1d:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000cb23:	dec    ecx
   14000cb25:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000cb2b:	(bad)  
   14000cb2c:	(bad)  
   14000cb2d:	(bad)  
   14000cb2e:	(bad)  
   14000cb2f:	(bad)  
   14000cb30:	(bad)  
   14000cb31:	(bad)  
   14000cb32:	(bad)  
   14000cb33:	(bad)  
   14000cb34:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000cb3a:	(bad)  
   14000cb3b:	(bad)  
   14000cb3c:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000cb42:	(bad)  
   14000cb43:	(bad)  
   14000cb44:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000cb4a:	(bad)  
   14000cb4b:	(bad)  
   14000cb4c:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000cb52:	(bad)  
   14000cb53:	(bad)  
   14000cb54:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000cb5a:	(bad)  
   14000cb5b:	(bad)  
   14000cb5c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000cb62:	(bad)  
   14000cb63:	(bad)  
   14000cb64:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000cb6a:	(bad)  
   14000cb6b:	(bad)  
   14000cb6c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000cb72:	(bad)  
   14000cb73:	(bad)  
   14000cb74:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000cb7a:	(bad)  
   14000cb7b:	(bad)  
   14000cb7c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000cb82:	(bad)  
   14000cb83:	(bad)  
   14000cb84:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000cb8b:	push   QWORD PTR [rdi]
   14000cb8d:	mov    esp,0xbc37fffe
   14000cb92:	(bad)  
   14000cb93:	push   QWORD PTR [rdi]
   14000cb95:	mov    esp,0x4747fffe
   14000cb9a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cb9e:	rex.RXB inc DWORD PTR [r8]
	...
   14000cbbd:	add    BYTE PTR [rax],al
   14000cbbf:	add    BYTE PTR [rdi+0x47],al
   14000cbc2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cbc6:	rex.RXB dec r12d
   14000cbc9:	jo     0x14000cbcb
   14000cbcb:	dec    ebx
   14000cbcd:	outs   dx,DWORD PTR ds:[rsi]
   14000cbce:	add    bh,bh
   14000cbd0:	retf   
   14000cbd1:	outs   dx,DWORD PTR ds:[rsi]
   14000cbd2:	add    bh,bh
   14000cbd4:	retf   
   14000cbd5:	outs   dx,DWORD PTR ds:[rsi]
   14000cbd6:	add    bh,bh
   14000cbd8:	retf   
   14000cbd9:	outs   dx,BYTE PTR ds:[rsi]
   14000cbda:	add    bh,bh
   14000cbdc:	retf   
   14000cbdd:	outs   dx,BYTE PTR ds:[rsi]
   14000cbde:	add    bh,bh
   14000cbe0:	retf   
   14000cbe1:	outs   dx,BYTE PTR ds:[rsi]
   14000cbe2:	add    bh,bh
   14000cbe4:	retf   
   14000cbe5:	outs   dx,BYTE PTR ds:[rsi]
   14000cbe6:	add    bh,bh
   14000cbe8:	retf   
   14000cbe9:	ins    DWORD PTR es:[rdi],dx
   14000cbea:	add    bh,bh
   14000cbec:	retf   0x6d
   14000cbef:	dec    edx
   14000cbf1:	ins    DWORD PTR es:[rdi],dx
   14000cbf2:	add    bh,bh
   14000cbf4:	retf   0x6d
   14000cbf7:	dec    edx
   14000cbf9:	ins    BYTE PTR es:[rdi],dx
   14000cbfa:	add    bh,bh
   14000cbfc:	retf   0x6c
   14000cbff:	dec    edx
   14000cc01:	ins    BYTE PTR es:[rdi],dx
   14000cc02:	add    bh,bh
   14000cc04:	retf   0x6c
   14000cc07:	dec    edx
   14000cc09:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cc0c:	leave  
   14000cc0d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cc10:	leave  
   14000cc11:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cc14:	leave  
   14000cc15:	push   0x0
   14000cc17:	dec    ecx
   14000cc19:	push   0x0
   14000cc1b:	dec    ecx
   14000cc1d:	push   0x0
   14000cc1f:	dec    ecx
   14000cc21:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000cc27:	dec    ecx
   14000cc29:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cc2f:	(bad)  
   14000cc30:	(bad)  
   14000cc31:	(bad)  
   14000cc32:	(bad)  
   14000cc33:	(bad)  
   14000cc34:	cmp    eax,eax
   14000cc36:	(bad)  
   14000cc37:	(bad)  
   14000cc38:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000cc3e:	(bad)  
   14000cc3f:	(bad)  
   14000cc40:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000cc46:	(bad)  
   14000cc47:	(bad)  
   14000cc48:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000cc4e:	(bad)  
   14000cc4f:	(bad)  
   14000cc50:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000cc56:	(bad)  
   14000cc57:	(bad)  
   14000cc58:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000cc5e:	(bad)  
   14000cc5f:	(bad)  
   14000cc60:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000cc66:	(bad)  
   14000cc67:	(bad)  
   14000cc68:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000cc6e:	(bad)  
   14000cc6f:	(bad)  
   14000cc70:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000cc76:	(bad)  
   14000cc77:	(bad)  
   14000cc78:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000cc7e:	(bad)  
   14000cc7f:	(bad)  
   14000cc80:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000cc86:	(bad)  
   14000cc87:	(bad)  
   14000cc88:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000cc8f:	push   QWORD PTR [rdi]
   14000cc91:	mov    esp,0xbc37fffe
   14000cc96:	(bad)  
   14000cc97:	inc    DWORD PTR [rdi+0x47]
   14000cc9a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cc9e:	rex.RXB inc DWORD PTR [r8]
	...
   14000ccbd:	add    BYTE PTR [rax],al
   14000ccbf:	add    BYTE PTR [rdi+0x47],al
   14000ccc2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ccc6:	rex.RXB dec r12d
   14000ccc9:	jo     0x14000cccb
   14000cccb:	dec    esp
   14000cccd:	jo     0x14000cccf
   14000cccf:	dec    ebx
   14000ccd1:	outs   dx,DWORD PTR ds:[rsi]
   14000ccd2:	add    bh,bh
   14000ccd4:	retf   
   14000ccd5:	outs   dx,DWORD PTR ds:[rsi]
   14000ccd6:	add    bh,bh
   14000ccd8:	retf   
   14000ccd9:	outs   dx,DWORD PTR ds:[rsi]
   14000ccda:	add    bh,bh
   14000ccdc:	retf   
   14000ccdd:	outs   dx,BYTE PTR ds:[rsi]
   14000ccde:	add    bh,bh
   14000cce0:	retf   
   14000cce1:	outs   dx,BYTE PTR ds:[rsi]
   14000cce2:	add    bh,bh
   14000cce4:	retf   
   14000cce5:	outs   dx,BYTE PTR ds:[rsi]
   14000cce6:	add    bh,bh
   14000cce8:	retf   
   14000cce9:	outs   dx,BYTE PTR ds:[rsi]
   14000ccea:	add    bh,bh
   14000ccec:	retf   
   14000cced:	ins    DWORD PTR es:[rdi],dx
   14000ccee:	add    bh,bh
   14000ccf0:	retf   0x6d
   14000ccf3:	dec    edx
   14000ccf5:	ins    DWORD PTR es:[rdi],dx
   14000ccf6:	add    bh,bh
   14000ccf8:	retf   0x6d
   14000ccfb:	dec    edx
   14000ccfd:	ins    BYTE PTR es:[rdi],dx
   14000ccfe:	add    bh,bh
   14000cd00:	retf   0x6c
   14000cd03:	dec    edx
   14000cd05:	ins    BYTE PTR es:[rdi],dx
   14000cd06:	add    bh,bh
   14000cd08:	retf   0x6c
   14000cd0b:	dec    edx
   14000cd0d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cd10:	leave  
   14000cd11:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cd14:	leave  
   14000cd15:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cd18:	leave  
   14000cd19:	push   0x0
   14000cd1b:	dec    ecx
   14000cd1d:	push   0x0
   14000cd1f:	dec    ecx
   14000cd21:	push   0x0
   14000cd23:	dec    ecx
   14000cd25:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000cd2b:	(bad)  
   14000cd2c:	(bad)  
   14000cd2d:	(bad)  
   14000cd2e:	(bad)  
   14000cd2f:	(bad)  
   14000cd30:	(bad)  
   14000cd31:	(bad)  
   14000cd32:	(bad)  
   14000cd33:	(bad)  
   14000cd34:	cmp    eax,eax
   14000cd36:	(bad)  
   14000cd37:	(bad)  
   14000cd38:	cmp    eax,eax
   14000cd3a:	(bad)  
   14000cd3b:	(bad)  
   14000cd3c:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000cd42:	(bad)  
   14000cd43:	(bad)  
   14000cd44:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000cd4a:	(bad)  
   14000cd4b:	(bad)  
   14000cd4c:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000cd52:	(bad)  
   14000cd53:	(bad)  
   14000cd54:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000cd5a:	(bad)  
   14000cd5b:	(bad)  
   14000cd5c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000cd62:	(bad)  
   14000cd63:	(bad)  
   14000cd64:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000cd6a:	(bad)  
   14000cd6b:	(bad)  
   14000cd6c:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000cd72:	(bad)  
   14000cd73:	(bad)  
   14000cd74:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000cd7a:	(bad)  
   14000cd7b:	(bad)  
   14000cd7c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000cd82:	(bad)  
   14000cd83:	(bad)  
   14000cd84:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000cd8a:	(bad)  
   14000cd8b:	(bad)  
   14000cd8c:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000cd93:	push   QWORD PTR [rdi]
   14000cd95:	mov    esp,0x4747fffe
   14000cd9a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cd9e:	rex.RXB inc DWORD PTR [r8]
	...
   14000cdbd:	add    BYTE PTR [rax],al
   14000cdbf:	add    BYTE PTR [rdi+0x47],al
   14000cdc2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cdc6:	rex.RXB dec r12d
   14000cdc9:	jo     0x14000cdcb
   14000cdcb:	dec    esp
   14000cdcd:	jo     0x14000cdcf
   14000cdcf:	dec    esp
   14000cdd1:	jo     0x14000cdd3
   14000cdd3:	dec    ebx
   14000cdd5:	outs   dx,DWORD PTR ds:[rsi]
   14000cdd6:	add    bh,bh
   14000cdd8:	retf   
   14000cdd9:	outs   dx,DWORD PTR ds:[rsi]
   14000cdda:	add    bh,bh
   14000cddc:	retf   
   14000cddd:	outs   dx,DWORD PTR ds:[rsi]
   14000cdde:	add    bh,bh
   14000cde0:	retf   
   14000cde1:	outs   dx,BYTE PTR ds:[rsi]
   14000cde2:	add    bh,bh
   14000cde4:	retf   
   14000cde5:	outs   dx,BYTE PTR ds:[rsi]
   14000cde6:	add    bh,bh
   14000cde8:	retf   
   14000cde9:	outs   dx,BYTE PTR ds:[rsi]
   14000cdea:	add    bh,bh
   14000cdec:	retf   
   14000cded:	outs   dx,BYTE PTR ds:[rsi]
   14000cdee:	add    bh,bh
   14000cdf0:	retf   
   14000cdf1:	ins    DWORD PTR es:[rdi],dx
   14000cdf2:	add    bh,bh
   14000cdf4:	retf   0x6d
   14000cdf7:	dec    edx
   14000cdf9:	ins    DWORD PTR es:[rdi],dx
   14000cdfa:	add    bh,bh
   14000cdfc:	retf   0x6d
   14000cdff:	dec    edx
   14000ce01:	ins    BYTE PTR es:[rdi],dx
   14000ce02:	add    bh,bh
   14000ce04:	retf   0x6c
   14000ce07:	dec    edx
   14000ce09:	ins    BYTE PTR es:[rdi],dx
   14000ce0a:	add    bh,bh
   14000ce0c:	retf   0x6c
   14000ce0f:	dec    edx
   14000ce11:	imul   eax,DWORD PTR [rax],0xffffffff
   14000ce14:	leave  
   14000ce15:	imul   eax,DWORD PTR [rax],0xffffffff
   14000ce18:	leave  
   14000ce19:	imul   eax,DWORD PTR [rax],0xffffffff
   14000ce1c:	leave  
   14000ce1d:	push   0x0
   14000ce1f:	dec    ecx
   14000ce21:	push   0x0
   14000ce23:	dec    ecx
   14000ce25:	push   0x0
   14000ce27:	dec    ecx
   14000ce29:	imul   eax,DWORD PTR [rax],0xffffffff
   14000ce2f:	(bad)  
   14000ce30:	(bad)  
   14000ce31:	(bad)  
   14000ce32:	(bad)  
   14000ce33:	(bad)  
   14000ce34:	cmp    eax,eax
   14000ce36:	(bad)  
   14000ce37:	(bad)  
   14000ce38:	cmp    eax,eax
   14000ce3a:	(bad)  
   14000ce3b:	(bad)  
   14000ce3c:	cmp    eax,eax
   14000ce3e:	(bad)  
   14000ce3f:	(bad)  
   14000ce40:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000ce46:	(bad)  
   14000ce47:	(bad)  
   14000ce48:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000ce4e:	(bad)  
   14000ce4f:	(bad)  
   14000ce50:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000ce56:	(bad)  
   14000ce57:	(bad)  
   14000ce58:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000ce5e:	(bad)  
   14000ce5f:	(bad)  
   14000ce60:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000ce66:	(bad)  
   14000ce67:	(bad)  
   14000ce68:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000ce6e:	(bad)  
   14000ce6f:	(bad)  
   14000ce70:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000ce76:	(bad)  
   14000ce77:	(bad)  
   14000ce78:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000ce7e:	(bad)  
   14000ce7f:	(bad)  
   14000ce80:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000ce86:	(bad)  
   14000ce87:	(bad)  
   14000ce88:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000ce8e:	(bad)  
   14000ce8f:	(bad)  
   14000ce90:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000ce97:	inc    DWORD PTR [rdi+0x47]
   14000ce9a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ce9e:	rex.RXB inc DWORD PTR [r8]
	...
   14000cebd:	add    BYTE PTR [rax],al
   14000cebf:	add    BYTE PTR [rdi+0x47],al
   14000cec2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cec6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ceca:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cece:	rex.RXB call FWORD PTR [r8+0x4c]
   14000ced2:	jmp    FWORD PTR ds:[rax+0x51]
   14000ced6:	xor    eax,0x2c5679ff
   14000cedb:	call   QWORD PTR [rcx-0x5500e0a2]
   14000cee1:	gs adc bh,bh
   14000cee4:	retf   
   14000cee5:	outs   dx,BYTE PTR ds:[rsi]
   14000cee6:	add    bh,bh
   14000cee8:	retf   
   14000cee9:	outs   dx,BYTE PTR ds:[rsi]
   14000ceea:	add    bh,bh
   14000ceec:	retf   
   14000ceed:	outs   dx,BYTE PTR ds:[rsi]
   14000ceee:	add    bh,bh
   14000cef0:	retf   
   14000cef1:	outs   dx,BYTE PTR ds:[rsi]
   14000cef2:	add    bh,bh
   14000cef4:	retf   
   14000cef5:	ins    DWORD PTR es:[rdi],dx
   14000cef6:	add    bh,bh
   14000cef8:	retf   0x6d
   14000cefb:	dec    edx
   14000cefd:	ins    DWORD PTR es:[rdi],dx
   14000cefe:	add    bh,bh
   14000cf00:	retf   0x6d
   14000cf03:	dec    edx
   14000cf05:	ins    BYTE PTR es:[rdi],dx
   14000cf06:	add    bh,bh
   14000cf08:	retf   0x6c
   14000cf0b:	dec    edx
   14000cf0d:	ins    BYTE PTR es:[rdi],dx
   14000cf0e:	add    bh,bh
   14000cf10:	retf   0x6c
   14000cf13:	dec    edx
   14000cf15:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cf18:	leave  
   14000cf19:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cf1c:	leave  
   14000cf1d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000cf20:	leave  
   14000cf21:	push   0x0
   14000cf23:	dec    ecx
   14000cf25:	push   0x0
   14000cf27:	dec    ecx
   14000cf29:	push   0x0
   14000cf2b:	(bad)  
   14000cf2c:	(bad)  
   14000cf2d:	(bad)  
   14000cf2e:	(bad)  
   14000cf2f:	(bad)  
   14000cf30:	(bad)  
   14000cf31:	(bad)  
   14000cf32:	(bad)  
   14000cf33:	(bad)  
   14000cf34:	cmp    eax,eax
   14000cf36:	(bad)  
   14000cf37:	(bad)  
   14000cf38:	cmp    eax,eax
   14000cf3a:	(bad)  
   14000cf3b:	(bad)  
   14000cf3c:	cmp    eax,eax
   14000cf3e:	(bad)  
   14000cf3f:	(bad)  
   14000cf40:	cmp    eax,eax
   14000cf42:	(bad)  
   14000cf43:	(bad)  
   14000cf44:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000cf4a:	(bad)  
   14000cf4b:	(bad)  
   14000cf4c:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000cf52:	(bad)  
   14000cf53:	(bad)  
   14000cf54:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000cf5a:	(bad)  
   14000cf5b:	(bad)  
   14000cf5c:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000cf62:	(bad)  
   14000cf63:	(bad)  
   14000cf64:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000cf6a:	(bad)  
   14000cf6b:	(bad)  
   14000cf6c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000cf72:	(bad)  
   14000cf73:	(bad)  
   14000cf74:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000cf7a:	(bad)  
   14000cf7b:	(bad)  
   14000cf7c:	cmp    al,0xa0
   14000cf7e:	sar    bh,1
   14000cf80:	(bad)  
   14000cf81:	mov    DWORD PTR [rsi-0x738cbe01],ebp
   14000cf87:	inc    DWORD PTR [rbx+0x65]
   14000cf8a:	jne    0x14000cf8b
   14000cf8c:	rex.RB push r14
   14000cf8e:	pop    rsi
   14000cf8f:	inc    DWORD PTR [rdi+0x47]
   14000cf92:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cf96:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cf9a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cf9e:	rex.RXB inc DWORD PTR [r8]
	...
   14000cfbd:	add    BYTE PTR [rax],al
   14000cfbf:	add    BYTE PTR [rdi+0x47],al
   14000cfc2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cfc6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cfca:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cfce:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cfd2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cfd6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cfda:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cfde:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cfe2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000cfe6:	rex.RXB jmp FWORD PTR [r8+0x51]
   14000cfea:	xor    eax,0x1f5d91ff
   14000cfef:	(bad)  
   14000cff0:	mov    ebx,0xcbff0969
   14000cff5:	outs   dx,BYTE PTR ds:[rsi]
   14000cff6:	add    bh,bh
   14000cff8:	retf   
   14000cff9:	ins    DWORD PTR es:[rdi],dx
   14000cffa:	add    bh,bh
   14000cffc:	retf   0x6d
   14000cfff:	dec    edx
   14000d001:	ins    DWORD PTR es:[rdi],dx
   14000d002:	add    bh,bh
   14000d004:	retf   0x6d
   14000d007:	dec    edx
   14000d009:	ins    BYTE PTR es:[rdi],dx
   14000d00a:	add    bh,bh
   14000d00c:	retf   0x6c
   14000d00f:	dec    edx
   14000d011:	ins    BYTE PTR es:[rdi],dx
   14000d012:	add    bh,bh
   14000d014:	retf   0x6c
   14000d017:	dec    edx
   14000d019:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d01c:	leave  
   14000d01d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d020:	leave  
   14000d021:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d024:	leave  
   14000d025:	push   0x0
   14000d027:	dec    ecx
   14000d029:	push   0x0
   14000d02b:	(bad)  
   14000d02c:	(bad)  
   14000d02d:	(bad)  
   14000d02e:	(bad)  
   14000d02f:	(bad)  
   14000d030:	(bad)  
   14000d031:	(bad)  
   14000d032:	(bad)  
   14000d033:	(bad)  
   14000d034:	cmp    eax,eax
   14000d036:	(bad)  
   14000d037:	(bad)  
   14000d038:	cmp    eax,eax
   14000d03a:	(bad)  
   14000d03b:	(bad)  
   14000d03c:	cmp    eax,eax
   14000d03e:	(bad)  
   14000d03f:	(bad)  
   14000d040:	cmp    eax,eax
   14000d042:	(bad)  
   14000d043:	(bad)  
   14000d044:	cmp    eax,eax
   14000d046:	(bad)  
   14000d047:	(bad)  
   14000d048:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000d04e:	(bad)  
   14000d04f:	(bad)  
   14000d050:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000d056:	(bad)  
   14000d057:	(bad)  
   14000d058:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000d05e:	(bad)  
   14000d05f:	(bad)  
   14000d060:	cmp    bh,BYTE PTR [rsi-0x41c50002]
   14000d066:	(bad)  
   14000d067:	(bad)  
   14000d068:	cmp    DWORD PTR [rsi-0x50c40002],edi
   14000d06e:	out    0xff,eax
   14000d070:	(bad)  
   14000d071:	mov    ch,BYTE PTR [rsi+0x756544ff]
   14000d077:	inc    DWORD PTR [rdi+0x47]
   14000d07a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d07e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d082:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d086:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d08a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d08e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d092:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d096:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d09a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d09e:	rex.RXB inc DWORD PTR [r8]
	...
   14000d0bd:	add    BYTE PTR [rax],al
   14000d0bf:	add    BYTE PTR [rdi+0x47],al
   14000d0c2:	rex.RXB
   14000d0c3:	rex
   14000d0c4:	rex.RXB
   14000d0c5:	rex.RXB
   14000d0c6:	rex.RXB
   14000d0c7:	rex
   14000d0c8:	rex.RXB
   14000d0c9:	rex.RXB
   14000d0ca:	rex.RXB
   14000d0cb:	rex
   14000d0cc:	rex.RXB
   14000d0cd:	rex.RXB
   14000d0ce:	rex.RXB
   14000d0cf:	rex
   14000d0d0:	rex.RXB
   14000d0d1:	rex.RXB
   14000d0d2:	rex.RXB jo 0x14000d11c
   14000d0d5:	rex.RXB
   14000d0d6:	rex.RXB add BYTE PTR [r15+0x47],0x47
   14000d0db:	mov    edi,0xef474747
   14000d0e0:	rex.RXB
   14000d0e1:	rex.RXB
   14000d0e2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d0e6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d0ea:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d0ee:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d0f2:	rex.RXB jmp FWORD PTR [r8+0x51]
   14000d0f6:	xor    eax,0x1b5f9aff
   14000d0fb:	dec    ebx
   14000d0fd:	ins    DWORD PTR es:[rdi],dx
   14000d0fe:	add    bh,bh
   14000d100:	retf   0x6d
   14000d103:	dec    edx
   14000d105:	ins    DWORD PTR es:[rdi],dx
   14000d106:	add    bh,bh
   14000d108:	retf   0x6d
   14000d10b:	dec    edx
   14000d10d:	ins    BYTE PTR es:[rdi],dx
   14000d10e:	add    bh,bh
   14000d110:	retf   0x6c
   14000d113:	dec    edx
   14000d115:	ins    BYTE PTR es:[rdi],dx
   14000d116:	add    bh,bh
   14000d118:	retf   0x6c
   14000d11b:	dec    edx
   14000d11d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d120:	leave  
   14000d121:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d124:	leave  
   14000d125:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d128:	leave  
   14000d129:	push   0x0
   14000d12b:	(bad)  
   14000d12c:	(bad)  
   14000d12d:	(bad)  
   14000d12e:	(bad)  
   14000d12f:	(bad)  
   14000d130:	(bad)  
   14000d131:	(bad)  
   14000d132:	(bad)  
   14000d133:	(bad)  
   14000d134:	cmp    al,0xc0
   14000d136:	(bad)  
   14000d137:	(bad)  
   14000d138:	cmp    eax,eax
   14000d13a:	(bad)  
   14000d13b:	(bad)  
   14000d13c:	cmp    eax,eax
   14000d13e:	(bad)  
   14000d13f:	(bad)  
   14000d140:	cmp    eax,eax
   14000d142:	(bad)  
   14000d143:	(bad)  
   14000d144:	cmp    eax,eax
   14000d146:	(bad)  
   14000d147:	(bad)  
   14000d148:	cmp    eax,eax
   14000d14a:	(bad)  
   14000d14b:	(bad)  
   14000d14c:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000d152:	(bad)  
   14000d153:	(bad)  
   14000d154:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000d15a:	(bad)  
   14000d15b:	(bad)  
   14000d15c:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000d162:	(bad)  
   14000d163:	(bad)  
   14000d164:	(bad)  
   14000d165:	xchg   edx,eax
   14000d166:	mov    ecx,0x756544ff
   14000d16b:	inc    DWORD PTR [rdi+0x47]
   14000d16e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d172:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d176:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d17a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d17e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d182:	rex.RXB out dx,eax
   14000d184:	rex.RXB
   14000d185:	rex.RXB
   14000d186:	rex.RXB mov r15d,0x80474747
   14000d18c:	rex.RXB
   14000d18d:	rex.RXB
   14000d18e:	rex.RXB jo 0x14000d1d8
   14000d191:	rex.RXB
   14000d192:	rex.RXB
   14000d193:	rex
   14000d194:	rex.RXB
   14000d195:	rex.RXB
   14000d196:	rex.RXB
   14000d197:	rex
   14000d198:	rex.RXB
   14000d199:	rex.RXB
   14000d19a:	rex.RXB
   14000d19b:	rex
   14000d19c:	rex.RXB
   14000d19d:	rex.RXB
   14000d19e:	rex.RXB
   14000d19f:	add    BYTE PTR [rax],al
	...
   14000d1de:	add    BYTE PTR [rax],al
   14000d1e0:	rex.RXB
   14000d1e1:	rex.RXB
   14000d1e2:	rex.RXB and BYTE PTR [r15+0x47],r8b
   14000d1e6:	rex.RXB (bad) 
   14000d1e8:	rex.RXB
   14000d1e9:	rex.RXB
   14000d1ea:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14000d1ec:	rex.RXB
   14000d1ed:	rex.RXB
   14000d1ee:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d1f2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d1f6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d1fa:	rex.RXB call FWORD PTR [r8+0x4c]
   14000d1fe:	call   FWORD PTR ds:[rcx-0x3500e4a1]
   14000d205:	ins    DWORD PTR es:[rdi],dx
   14000d206:	add    bh,bh
   14000d208:	retf   0x6d
   14000d20b:	dec    edx
   14000d20d:	ins    DWORD PTR es:[rdi],dx
   14000d20e:	add    bh,bh
   14000d210:	retf   0x6c
   14000d213:	dec    edx
   14000d215:	ins    BYTE PTR es:[rdi],dx
   14000d216:	add    bh,bh
   14000d218:	retf   0x6c
   14000d21b:	dec    edx
   14000d21d:	ins    BYTE PTR es:[rdi],dx
   14000d21e:	add    bh,bh
   14000d220:	retf   0x6b
   14000d223:	dec    ecx
   14000d225:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d228:	leave  
   14000d229:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d22c:	(bad)  
   14000d22d:	(bad)  
   14000d22e:	(bad)  
   14000d22f:	(bad)  
   14000d230:	(bad)  
   14000d231:	(bad)  
   14000d232:	(bad)  
   14000d233:	(bad)  
   14000d234:	cmp    al,0xc0
   14000d236:	(bad)  
   14000d237:	(bad)  
   14000d238:	cmp    al,0xc0
   14000d23a:	(bad)  
   14000d23b:	(bad)  
   14000d23c:	cmp    eax,eax
   14000d23e:	(bad)  
   14000d23f:	(bad)  
   14000d240:	cmp    eax,eax
   14000d242:	(bad)  
   14000d243:	(bad)  
   14000d244:	cmp    eax,eax
   14000d246:	(bad)  
   14000d247:	(bad)  
   14000d248:	cmp    eax,eax
   14000d24a:	(bad)  
   14000d24b:	(bad)  
   14000d24c:	cmp    eax,eax
   14000d24e:	(bad)  
   14000d24f:	(bad)  
   14000d250:	cmp    edi,DWORD PTR [rdi-0x40c40002]
   14000d256:	(bad)  
   14000d257:	(bad)  
   14000d258:	cmp    bh,BYTE PTR [rdi-0x6dc00002]
   14000d25e:	mov    ecx,0x5e5645ff
   14000d263:	inc    DWORD PTR [rdi+0x47]
   14000d266:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d26a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d26e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d272:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d276:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14000d278:	rex.RXB
   14000d279:	rex.RXB
   14000d27a:	rex.RXB (bad) 
   14000d27c:	rex.RXB
   14000d27d:	rex.RXB
   14000d27e:	rex.RXB and BYTE PTR [r8],r8b
	...
   14000d2e9:	add    BYTE PTR [rax],al
   14000d2eb:	add    BYTE PTR [rdi+0x47],al
   14000d2ee:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000d2f2:	rex.RXB (bad) 
   14000d2f4:	rex.RXB
   14000d2f5:	rex.RXB
   14000d2f6:	rex.RXB mov r15d,0xff474747
   14000d2fc:	rex.RXB
   14000d2fd:	rex.RXB
   14000d2fe:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d302:	rex.RXB call QWORD PTR [r15+0x4c]
   14000d306:	jmp    FWORD PTR ds:[rcx-0x3500ed9c]
   14000d30d:	ins    DWORD PTR es:[rdi],dx
   14000d30e:	add    bh,bh
   14000d310:	retf   0x6d
   14000d313:	dec    edx
   14000d315:	ins    BYTE PTR es:[rdi],dx
   14000d316:	add    bh,bh
   14000d318:	retf   0x6c
   14000d31b:	dec    edx
   14000d31d:	ins    BYTE PTR es:[rdi],dx
   14000d31e:	add    bh,bh
   14000d320:	retf   0x6c
   14000d323:	dec    edx
   14000d325:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d328:	leave  
   14000d329:	imul   eax,DWORD PTR [rax],0xffffffff
   14000d32c:	(bad)  
   14000d32d:	(bad)  
   14000d32e:	(bad)  
   14000d32f:	(bad)  
   14000d330:	(bad)  
   14000d331:	(bad)  
   14000d332:	(bad)  
   14000d333:	(bad)  
   14000d334:	cmp    al,0xc0
   14000d336:	(bad)  
   14000d337:	(bad)  
   14000d338:	cmp    al,0xc0
   14000d33a:	(bad)  
   14000d33b:	(bad)  
   14000d33c:	cmp    al,0xc0
   14000d33e:	(bad)  
   14000d33f:	(bad)  
   14000d340:	cmp    eax,eax
   14000d342:	(bad)  
   14000d343:	(bad)  
   14000d344:	cmp    eax,eax
   14000d346:	(bad)  
   14000d347:	(bad)  
   14000d348:	cmp    eax,eax
   14000d34a:	(bad)  
   14000d34b:	(bad)  
   14000d34c:	cmp    eax,eax
   14000d34e:	(bad)  
   14000d34f:	(bad)  
   14000d350:	cmp    eax,eax
   14000d352:	(bad)  
   14000d353:	(bad)  
   14000d354:	movabs eax,ds:0x4747ff5e5645ffd0
   14000d35e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d362:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d366:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d36a:	rex.RXB mov r15d,0x60474747
   14000d370:	rex.RXB
   14000d371:	rex.RXB
   14000d372:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000d3f5:	add    BYTE PTR [rax],al
   14000d3f7:	add    BYTE PTR [rdi+0x47],al
   14000d3fa:	rex.RXB
   14000d3fb:	rex
   14000d3fc:	rex.RXB
   14000d3fd:	rex.RXB
   14000d3fe:	rex.RXB mov r15d,0xff474747
   14000d404:	rex.RXB
   14000d405:	rex.RXB
   14000d406:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d40a:	rex.RXB inc DWORD PTR [r8-0x3d00d7a8]
   14000d411:	imul   eax,DWORD PTR [rdi+rdi*8],0xffffffca
   14000d415:	ins    DWORD PTR es:[rdi],dx
   14000d416:	add    bh,bh
   14000d418:	retf   0x6c
   14000d41b:	dec    edx
   14000d41d:	ins    BYTE PTR es:[rdi],dx
   14000d41e:	add    bh,bh
   14000d420:	retf   0x6c
   14000d423:	dec    edx
   14000d425:	ins    BYTE PTR es:[rdi],dx
   14000d426:	add    bh,bh
   14000d428:	retf   0x6b
   14000d42b:	(bad)  
   14000d42c:	(bad)  
   14000d42d:	(bad)  
   14000d42e:	(bad)  
   14000d42f:	(bad)  
   14000d430:	(bad)  
   14000d431:	(bad)  
   14000d432:	(bad)  
   14000d433:	(bad)  
   14000d434:	cmp    al,0xc1
   14000d436:	(bad)  
   14000d437:	(bad)  
   14000d438:	cmp    al,0xc0
   14000d43a:	(bad)  
   14000d43b:	(bad)  
   14000d43c:	cmp    al,0xc0
   14000d43e:	(bad)  
   14000d43f:	(bad)  
   14000d440:	cmp    al,0xc0
   14000d442:	(bad)  
   14000d443:	(bad)  
   14000d444:	cmp    eax,eax
   14000d446:	(bad)  
   14000d447:	(bad)  
   14000d448:	cmp    eax,eax
   14000d44a:	(bad)  
   14000d44b:	(bad)  
   14000d44c:	cmp    al,0xb8
   14000d44e:	repz inc DWORD PTR [rdx+0x7c]
   14000d452:	xchg   edi,eax
   14000d453:	inc    DWORD PTR [rdi+0x47]
   14000d456:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d45a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d45e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d462:	rex.RXB mov r15d,0x40474747
	...
   14000d500:	rex.RXB
   14000d501:	rex.RXB
   14000d502:	rex.RXB
   14000d503:	rex
   14000d504:	rex.RXB
   14000d505:	rex.RXB
   14000d506:	rex.RXB fild WORD PTR [r15+0x47]
   14000d50a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d50e:	rex.RXB dec DWORD PTR [r15+0x49]
   14000d512:	rex.XB dec DWORD PTR [r9-0x3d00dba6]
   14000d519:	imul   eax,DWORD PTR [rdi+rdi*8],0xffffffca
   14000d51d:	ins    BYTE PTR es:[rdi],dx
   14000d51e:	add    bh,bh
   14000d520:	retf   0x6c
   14000d523:	dec    edx
   14000d525:	ins    BYTE PTR es:[rdi],dx
   14000d526:	add    bh,bh
   14000d528:	retf   0x6c
   14000d52b:	(bad)  
   14000d52c:	(bad)  
   14000d52d:	(bad)  
   14000d52e:	(bad)  
   14000d52f:	(bad)  
   14000d530:	(bad)  
   14000d531:	(bad)  
   14000d532:	(bad)  
   14000d533:	(bad)  
   14000d534:	cmp    al,0xc1
   14000d536:	(bad)  
   14000d537:	(bad)  
   14000d538:	cmp    al,0xc1
   14000d53a:	(bad)  
   14000d53b:	(bad)  
   14000d53c:	cmp    al,0xc0
   14000d53e:	(bad)  
   14000d53f:	(bad)  
   14000d540:	cmp    al,0xc0
   14000d542:	(bad)  
   14000d543:	(bad)  
   14000d544:	cmp    eax,0x41fff3b8
   14000d549:	test   BYTE PTR [rbx+0x524f46ff],ah
   14000d54f:	inc    DWORD PTR [rdi+0x47]
   14000d552:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d556:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d55a:	rex.RXB fild WORD PTR [r15+0x47]
   14000d55e:	rex.RXB
   14000d55f:	add    BYTE PTR [rax],al
	...
   14000d606:	add    BYTE PTR [rax],al
   14000d608:	rex.RXB
   14000d609:	rex.RXB
   14000d60a:	rex.RXB pop QWORD PTR [r15+0x47]
   14000d60e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d612:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d616:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d61a:	rex.RXB jmp FWORD PTR [r8+0x51]
   14000d61e:	xor    eax,0x245a89ff
   14000d623:	jmp    QWORD PTR [rcx-0x5600e9a0]
   14000d629:	movsxd edx,DWORD PTR [rdx]
   14000d62b:	call   rcx
   14000d62d:	rcl    ecx,1
   14000d62f:	call   rcx
   14000d631:	rcl    ecx,1
   14000d633:	(bad)  
   14000d634:	(bad)  
   14000d635:	movabs ds:0x8442ffc59b3fffd0,eax
   14000d63e:	movabs ds:0x474747ff756544ff,eax
   14000d647:	inc    DWORD PTR [rdi+0x47]
   14000d64a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d64e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d652:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d656:	rex.RXB pop QWORD PTR [r8]
	...
   14000d709:	add    BYTE PTR [rax],al
   14000d70b:	add    BYTE PTR [rdi+0x47],al
   14000d70e:	rex.RXB and BYTE PTR [r15+0x47],r8b
   14000d712:	rex.RXB lahf 
   14000d714:	rex.RXB
   14000d715:	rex.RXB
   14000d716:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d71a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d71e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d722:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d726:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d72a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d72e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d732:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d736:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d73a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d73e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d742:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d746:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d74a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d74e:	rex.RXB lahf 
   14000d750:	rex.RXB
   14000d751:	rex.RXB
   14000d752:	rex.RXB and BYTE PTR [r8],r8b
	...
   14000d811:	add    BYTE PTR [rax],al
   14000d813:	add    BYTE PTR [rdi+0x47],al
   14000d816:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000d81a:	rex.RXB (bad) 
   14000d81c:	rex.RXB
   14000d81d:	rex.RXB
   14000d81e:	rex.RXB lahf 
   14000d820:	rex.RXB
   14000d821:	rex.RXB
   14000d822:	rex.RXB iret 
   14000d824:	rex.RXB
   14000d825:	rex.RXB
   14000d826:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d82a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d82e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d832:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d836:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d83a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000d83e:	rex.RXB iret 
   14000d840:	rex.RXB
   14000d841:	rex.RXB
   14000d842:	rex.RXB lahf 
   14000d844:	rex.RXB
   14000d845:	rex.RXB
   14000d846:	rex.RXB (bad) 
   14000d848:	rex.RXB
   14000d849:	rex.RXB
   14000d84a:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000daad:	add    BYTE PTR [rax],al
   14000daaf:	add    bh,bh
   14000dab1:	(bad)  
   14000dab2:	(bad)  
   14000dab3:	(bad)  
   14000dab4:	(bad)  
   14000dab5:	(bad)  
   14000dab6:	(bad)  
   14000dab7:	(bad)  
   14000dab8:	(bad)  
   14000dab9:	(bad)  
   14000daba:	(bad)  
   14000dabb:	(bad)  
   14000dabc:	(bad)  
   14000dabd:	(bad)  
   14000dabe:	(bad)  
   14000dabf:	(bad)  
   14000dac0:	(bad)  
   14000dac1:	(bad)  
   14000dac2:	(bad)  
   14000dac3:	cld    
   14000dac4:	(bad)  
   14000dac5:	(bad)  
   14000dac6:	(bad)  
   14000dac7:	(bad)  
   14000dac8:	(bad)  
   14000dac9:	(bad)  
   14000daca:	push   rax
   14000dacc:	ud0    edi,edi
   14000dacf:	(bad)  
   14000dad0:	(bad)  
   14000dad1:	(bad)  
   14000dad2:	jmp    rax
   14000dad4:	(bad)  
   14000dad5:	(bad)  
   14000dad6:	(bad)  
   14000dad7:	(bad)  
   14000dad8:	(bad)  
   14000dad9:	(bad)  
   14000dada:	inc    DWORD PTR [rax-0xff]
   14000dae0:	(bad)  
   14000dae1:	(bad)  
   14000dae2:	inc    DWORD PTR [rax]
   14000dae4:	add    bh,bh
   14000dae6:	(bad)  
   14000dae7:	(bad)  
   14000dae8:	(bad)  
   14000dae9:	(bad)  
   14000daea:	cld    
   14000daeb:	add    BYTE PTR [rax],al
   14000daed:	(bad)  
   14000daee:	(bad)  
   14000daef:	(bad)  
   14000daf0:	(bad)  
   14000daf1:	(bad)  
   14000daf2:	clc    
   14000daf3:	add    BYTE PTR [rax],al
   14000daf5:	(bad)  
   14000daf6:	(bad)  
   14000daf7:	(bad)  
   14000daf8:	(bad)  
   14000daf9:	push   rax
   14000dafb:	add    BYTE PTR [rax],al
   14000dafd:	ud0    edi,edi
   14000db00:	(bad)  
   14000db01:	jmp    rax
   14000db03:	add    BYTE PTR [rax],al
   14000db05:	(bad)  
   14000db06:	(bad)  
   14000db07:	(bad)  
   14000db08:	(bad)  
   14000db09:	inc    eax
   14000db0b:	add    BYTE PTR [rax],al
   14000db0d:	add    edi,edi
   14000db0f:	(bad)  
   14000db10:	(bad)  
   14000db11:	inc    DWORD PTR [rax]
   14000db13:	add    BYTE PTR [rax],al
   14000db15:	add    edi,edi
   14000db17:	(bad)  
   14000db18:	(bad)  
   14000db19:	inc    BYTE PTR [rax]
   14000db1b:	add    BYTE PTR [rax],al
   14000db1d:	add    BYTE PTR [rdi-0x1],bh
   14000db20:	(bad)  
   14000db21:	cld    
   14000db22:	add    BYTE PTR [rax],al
   14000db24:	add    BYTE PTR [rax],al
   14000db26:	(bad)  
   14000db27:	(bad)  
   14000db28:	(bad)  
   14000db29:	cld    
   14000db2a:	add    BYTE PTR [rax],al
   14000db2c:	add    BYTE PTR [rax],al
   14000db2e:	(bad)  
   14000db2f:	(bad)  
   14000db30:	(bad)  
   14000db31:	clc    
   14000db32:	add    BYTE PTR [rax],al
   14000db34:	add    BYTE PTR [rax],al
   14000db36:	(bad)  
   14000db37:	(bad)  
   14000db38:	push   rax
   14000db3a:	add    BYTE PTR [rax],al
   14000db3c:	add    BYTE PTR [rax],al
   14000db3e:	ud0    edi,edi
   14000db41:	loopne 0x14000db43
   14000db43:	add    BYTE PTR [rax],al
   14000db45:	add    BYTE PTR [rdi],al
   14000db47:	(bad)  
   14000db48:	inc    eax
   14000db4a:	add    BYTE PTR [rax],al
   14000db4c:	add    BYTE PTR [rax],al
   14000db4e:	add    edi,edi
   14000db50:	inc    eax
   14000db52:	add    BYTE PTR [rax],al
   14000db54:	add    BYTE PTR [rax],al
   14000db56:	add    edi,edi
   14000db58:	inc    DWORD PTR [rax+0x0]
   14000db5e:	add    edi,edi
   14000db60:	inc    DWORD PTR [rax]
   14000db62:	add    BYTE PTR [rax],al
   14000db64:	add    BYTE PTR [rax],al
   14000db66:	add    bh,bh
   14000db68:	inc    DWORD PTR [rax]
   14000db6a:	add    BYTE PTR [rax],al
   14000db6c:	add    BYTE PTR [rax],al
   14000db6e:	add    bh,bh
   14000db70:	inc    BYTE PTR [rax]
   14000db72:	add    BYTE PTR [rax],al
   14000db74:	add    BYTE PTR [rax],al
   14000db76:	add    BYTE PTR [rdi-0x2],bh
   14000db79:	add    BYTE PTR [rax],al
   14000db7b:	add    BYTE PTR [rax],al
   14000db7d:	add    BYTE PTR [rax],al
   14000db7f:	jg     0x14000db7d
   14000db81:	add    BYTE PTR [rax],al
   14000db83:	add    BYTE PTR [rax],al
   14000db85:	add    BYTE PTR [rax],al
   14000db87:	(bad)  
   14000db88:	cld    
   14000db89:	add    BYTE PTR [rax],al
   14000db8b:	add    BYTE PTR [rax],al
   14000db8d:	add    BYTE PTR [rax],al
   14000db8f:	(bad)  
   14000db90:	clc    
   14000db91:	add    BYTE PTR [rax],al
   14000db93:	add    BYTE PTR [rax],al
   14000db95:	add    BYTE PTR [rax],al
   14000db97:	(bad)  
   14000db98:	clc    
   14000db99:	add    BYTE PTR [rax],al
   14000db9b:	add    BYTE PTR [rax],al
   14000db9d:	add    BYTE PTR [rax],al
   14000db9f:	(bad)  
   14000dba0:	clc    
   14000dba1:	add    BYTE PTR [rax],al
   14000dba3:	add    BYTE PTR [rax],al
   14000dba5:	add    BYTE PTR [rax],al
   14000dba7:	(bad)  
   14000dba8:	lock add BYTE PTR [rax],al
   14000dbab:	add    BYTE PTR [rax],al
   14000dbad:	add    BYTE PTR [rax],al
   14000dbaf:	(bad)  
   14000dbb1:	add    BYTE PTR [rax],al
   14000dbb3:	add    BYTE PTR [rax],al
   14000dbb5:	add    BYTE PTR [rax],al
   14000dbb7:	(bad)  
   14000dbb9:	add    BYTE PTR [rax],al
   14000dbbb:	add    BYTE PTR [rax],al
   14000dbbd:	add    BYTE PTR [rax],al
   14000dbbf:	(bad)  
   14000dbc1:	add    BYTE PTR [rax],al
   14000dbc3:	add    BYTE PTR [rax],al
   14000dbc5:	add    BYTE PTR [rax],al
   14000dbc7:	(bad)  
   14000dbc9:	add    BYTE PTR [rax],al
   14000dbcb:	add    BYTE PTR [rax],al
   14000dbcd:	add    BYTE PTR [rax],al
   14000dbcf:	(bad)  
   14000dbd1:	add    BYTE PTR [rax],al
   14000dbd3:	add    BYTE PTR [rax],al
   14000dbd5:	add    BYTE PTR [rax],al
   14000dbd7:	(bad)  
   14000dbd9:	add    BYTE PTR [rax],al
   14000dbdb:	add    BYTE PTR [rax],al
   14000dbdd:	add    BYTE PTR [rax],al
   14000dbdf:	(bad)  
   14000dbe1:	add    BYTE PTR [rax],al
   14000dbe3:	add    BYTE PTR [rax],al
   14000dbe5:	add    BYTE PTR [rax],al
   14000dbe7:	(bad)  
   14000dbe9:	add    BYTE PTR [rax],al
   14000dbeb:	add    BYTE PTR [rax],al
   14000dbed:	add    BYTE PTR [rax],al
   14000dbef:	(bad)  
   14000dbf1:	add    BYTE PTR [rax],al
   14000dbf3:	add    BYTE PTR [rax],al
   14000dbf5:	add    BYTE PTR [rax],al
   14000dbf7:	(bad)  
   14000dbf9:	add    BYTE PTR [rax],al
   14000dbfb:	add    BYTE PTR [rax],al
   14000dbfd:	add    BYTE PTR [rax],al
   14000dbff:	(bad)  
   14000dc01:	add    BYTE PTR [rax],al
   14000dc03:	add    BYTE PTR [rax],al
   14000dc05:	add    BYTE PTR [rax],al
   14000dc07:	(bad)  
   14000dc09:	add    BYTE PTR [rax],al
   14000dc0b:	add    BYTE PTR [rax],al
   14000dc0d:	add    BYTE PTR [rax],al
   14000dc0f:	(bad)  
   14000dc11:	add    BYTE PTR [rax],al
   14000dc13:	add    BYTE PTR [rax],al
   14000dc15:	add    BYTE PTR [rax],al
   14000dc17:	(bad)  
   14000dc19:	add    BYTE PTR [rax],al
   14000dc1b:	add    BYTE PTR [rax],al
   14000dc1d:	add    BYTE PTR [rax],al
   14000dc1f:	(bad)  
   14000dc21:	add    BYTE PTR [rax],al
   14000dc23:	add    BYTE PTR [rax],al
   14000dc25:	add    BYTE PTR [rax],al
   14000dc27:	(bad)  
   14000dc29:	add    BYTE PTR [rax],al
   14000dc2b:	add    BYTE PTR [rax],al
   14000dc2d:	add    BYTE PTR [rax],al
   14000dc2f:	(bad)  
   14000dc31:	add    BYTE PTR [rax],al
   14000dc33:	add    BYTE PTR [rax],al
   14000dc35:	add    BYTE PTR [rax],al
   14000dc37:	(bad)  
   14000dc39:	add    BYTE PTR [rax],al
   14000dc3b:	add    BYTE PTR [rax],al
   14000dc3d:	add    BYTE PTR [rax],al
   14000dc3f:	(bad)  
   14000dc41:	add    BYTE PTR [rax],al
   14000dc43:	add    BYTE PTR [rax],al
   14000dc45:	add    BYTE PTR [rax],al
   14000dc47:	(bad)  
   14000dc49:	add    BYTE PTR [rax],al
   14000dc4b:	add    BYTE PTR [rax],al
   14000dc4d:	add    BYTE PTR [rax],al
   14000dc4f:	(bad)  
   14000dc51:	add    BYTE PTR [rax],al
   14000dc53:	add    BYTE PTR [rax],al
   14000dc55:	add    BYTE PTR [rax],al
   14000dc57:	(bad)  
   14000dc59:	add    BYTE PTR [rax],al
   14000dc5b:	add    BYTE PTR [rax],al
   14000dc5d:	add    BYTE PTR [rax],al
   14000dc5f:	(bad)  
   14000dc61:	add    BYTE PTR [rax],al
   14000dc63:	add    BYTE PTR [rax],al
   14000dc65:	add    BYTE PTR [rax],al
   14000dc67:	ud0    esi,eax
   14000dc6a:	add    BYTE PTR [rax],al
   14000dc6c:	add    BYTE PTR [rax],al
   14000dc6e:	ud0    edi,edi
   14000dc71:	inc    BYTE PTR [rax]
   14000dc73:	add    BYTE PTR [rax],al
   14000dc75:	add    BYTE PTR [rdi-0x1],bh
   14000dc78:	(bad)  
   14000dc79:	inc    eax
   14000dc7b:	add    BYTE PTR [rax],al
   14000dc7d:	add    edi,edi
   14000dc7f:	(bad)  
   14000dc80:	(bad)  
   14000dc81:	push   rax
   14000dc83:	add    BYTE PTR [rax],al
   14000dc85:	ud0    edi,edi
   14000dc88:	(bad)  
   14000dc89:	(bad)  
   14000dc8a:	cld    
   14000dc8b:	add    BYTE PTR [rax],al
   14000dc8d:	(bad)  
   14000dc8e:	(bad)  
   14000dc8f:	(bad)  
   14000dc90:	(bad)  
   14000dc91:	(bad)  
   14000dc92:	inc    BYTE PTR [rax]
   14000dc94:	add    BYTE PTR [rdi-0x1],bh
   14000dc97:	(bad)  
   14000dc98:	(bad)  
   14000dc99:	(bad)  
   14000dc9a:	inc    DWORD PTR [rax-0xff]
   14000dca0:	(bad)  
   14000dca1:	(bad)  
   14000dca2:	(bad)  
   14000dca3:	(bad)  
   14000dca4:	(bad)  
   14000dca5:	(bad)  
   14000dca6:	(bad)  
   14000dca7:	(bad)  
   14000dca8:	(bad)  
   14000dca9:	(bad)  
   14000dcaa:	(bad)  
   14000dcab:	(bad)  
   14000dcac:	(bad)  
   14000dcad:	(bad)  
   14000dcae:	(bad)  
   14000dcaf:	jmp    FWORD PTR [rax]
   14000dcb1:	add    BYTE PTR [rax],al
   14000dcb3:	add    BYTE PTR [rax],dh
   14000dcb5:	add    BYTE PTR [rax],al
   14000dcb7:	add    BYTE PTR [rax+0x0],ah
   14000dcba:	add    BYTE PTR [rax],al
   14000dcbc:	add    DWORD PTR [rax],eax
   14000dcbe:	and    BYTE PTR [rax],al
	...
   14000ddf4:	rex.RXB
   14000ddf5:	rex.RXB
   14000ddf6:	rex.RXB (bad) 
   14000ddf8:	rex.RXB
   14000ddf9:	rex.RXB
   14000ddfa:	rex.RXB (bad) 
	...
   14000deac:	rex.RXB
   14000dead:	rex.RXB
   14000deae:	rex.RXB
   14000deaf:	rex
   14000deb0:	rex.RXB
   14000deb1:	rex.RXB
   14000deb2:	rex.RXB iret 
   14000deb4:	rex.RXB
   14000deb5:	rex.RXB
   14000deb6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000deba:	rex.RXB inc DWORD PTR [r15+0x47]
   14000debe:	rex.RXB iret 
   14000dec0:	rex.RXB
   14000dec1:	rex.RXB
   14000dec2:	rex.RXB
   14000dec3:	add    BYTE PTR [rax],al
	...
   14000df62:	add    BYTE PTR [rax],al
   14000df64:	rex.RXB
   14000df65:	rex.RXB
   14000df66:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000df6a:	rex.RXB pop QWORD PTR [r15+0x47]
   14000df6e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000df72:	rex.RXB push QWORD PTR [r13+0x75]
   14000df76:	jne    0x14000df77
   14000df78:	jne    0x14000dfef
   14000df7a:	jne    0x14000df7b
   14000df7c:	rex.RXB
   14000df7d:	rex.RXB
   14000df7e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000df82:	rex.RXB inc DWORD PTR [r15+0x47]
   14000df86:	rex.RXB pop QWORD PTR [r15+0x47]
   14000df8a:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000e01d:	add    BYTE PTR [rax],al
   14000e01f:	add    BYTE PTR [rdi+0x47],al
   14000e022:	rex.RXB
   14000e023:	rex
   14000e024:	rex.RXB
   14000e025:	rex.RXB
   14000e026:	rex.RXB fild WORD PTR [r15+0x47]
   14000e02a:	rex.RXB inc DWORD PTR [r13+0x55]
   14000e02e:	pop    rsi
   14000e02f:	(bad)  
   14000e030:	cmp    dl,BYTE PTR [rsi-0x3b]
   14000e036:	(bad)  
   14000e037:	(bad)  
   14000e038:	(bad)  
   14000e039:	(bad)  
   14000e03a:	(bad)  
   14000e03b:	call   FWORD PTR [rbp+rdx*2+0x4a57ff16]
   14000e042:	inc    DWORD PTR ds:[rdi+0x47]
   14000e046:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e04a:	rex.RXB fild WORD PTR [r15+0x47]
   14000e04e:	rex.RXB
   14000e04f:	add    BYTE PTR [rax],al
	...
   14000e0da:	add    BYTE PTR [rax],al
   14000e0dc:	rex.RXB
   14000e0dd:	rex.RXB
   14000e0de:	rex.RXB pop QWORD PTR [r15+0x47]
   14000e0e2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e0e6:	rex.RXB (bad) 
   14000e0e8:	(bad)  
   14000e0e9:	jns    0x14000e082
   14000e0eb:	push   QWORD PTR [rsi]
   14000e0ed:	mov    bl,0xf3
   14000e0ef:	push   QWORD PTR [rip+0xfffffffffffffeba]        # 0x14000dfaf
   14000e0f5:	(bad)  
   14000e0f6:	(bad)  
   14000e0f7:	(bad)  
   14000e0f8:	(bad)  
   14000e0f9:	(bad)  
   14000e0fa:	(bad)  
   14000e0fb:	inc    ebx
   14000e0fd:	pop    rsp
   14000e0fe:	add    bh,bh
   14000e100:	mov    ebx,0x7dff045b
   14000e105:	push   rax
   14000e106:	sub    bh,bh
   14000e108:	rex.RXB
   14000e109:	rex.RXB
   14000e10a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e10e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e112:	rex.RXB pop QWORD PTR [r8]
	...
   14000e191:	add    BYTE PTR [rax],al
   14000e193:	add    BYTE PTR [rdi+0x47],al
   14000e196:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000e19a:	rex.RXB iret 
   14000e19c:	rex.RXB
   14000e19d:	rex.RXB
   14000e19e:	rex.RXB inc DWORD PTR [r14+0x4e]
   14000e1a2:	push   rdx
   14000e1a3:	(bad)  
   14000e1a4:	cmp    edx,DWORD PTR [rdi-0x45ca003b]
   14000e1aa:	(bad)  
   14000e1ab:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600e06b
   14000e1b1:	mov    edx,0xfffffffe
   14000e1b6:	(bad)  
   14000e1b7:	(bad)  
   14000e1b8:	(bad)  
   14000e1b9:	(bad)  
   14000e1ba:	(bad)  
   14000e1bb:	inc    ebx
   14000e1bd:	pop    rbp
   14000e1be:	add    bh,bh
   14000e1c0:	ret    
   14000e1c1:	pop    rsp
   14000e1c2:	add    bh,bh
   14000e1c4:	ret    
   14000e1c5:	pop    rsp
   14000e1c6:	add    bh,bh
   14000e1c8:	pushf  
   14000e1c9:	push   rbp
   14000e1ca:	(bad)  
   14000e1cb:	dec    DWORD PTR [rdi+0x48]
   14000e1ce:	rex.XB inc DWORD PTR [r15+0x47]
   14000e1d2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e1d6:	rex.RXB iret 
   14000e1d8:	rex.RXB
   14000e1d9:	rex.RXB
   14000e1da:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000e24d:	add    BYTE PTR [rax],al
   14000e24f:	add    BYTE PTR [rdi+0x47],al
   14000e252:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   14000e256:	rex.RXB out dx,eax
   14000e258:	rex.RXB
   14000e259:	rex.RXB
   14000e25a:	rex.RXB inc DWORD PTR [r11+0x64]
   14000e25e:	jne    0x14000e25f
   14000e260:	(bad)  
   14000e261:	mov    ah,0xf3
   14000e263:	push   QWORD PTR [rsi]
   14000e265:	mov    ebx,0xbb36fffe
   14000e26a:	(bad)  
   14000e26b:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600e12b
   14000e271:	mov    edx,0xfffffffe
   14000e276:	(bad)  
   14000e277:	(bad)  
   14000e278:	(bad)  
   14000e279:	(bad)  
   14000e27a:	(bad)  
   14000e27b:	inc    ebx
   14000e27d:	pop    rbp
   14000e27e:	add    bh,bh
   14000e280:	ret    
   14000e281:	pop    rbp
   14000e282:	add    bh,bh
   14000e284:	ret    
   14000e285:	pop    rsp
   14000e286:	add    bh,bh
   14000e288:	ret    
   14000e289:	pop    rsp
   14000e28a:	add    bh,bh
   14000e28c:	mov    ebx,0x5eff045a
   14000e291:	rex.WXB cmp dil,r15b
   14000e294:	rex.RXB
   14000e295:	rex.RXB
   14000e296:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e29a:	rex.RXB out dx,eax
   14000e29c:	rex.RXB
   14000e29d:	rex.RXB
   14000e29e:	rex.RXB xor BYTE PTR [r8],r8b
	...
   14000e309:	add    BYTE PTR [rax],al
   14000e30b:	add    BYTE PTR [rdi+0x47],al
   14000e30e:	rex.RXB (bad) 
   14000e310:	rex.RXB
   14000e311:	rex.RXB
   14000e312:	rex.RXB out dx,eax
   14000e314:	rex.RXB
   14000e315:	rex.RXB
   14000e316:	rex.RXB inc DWORD PTR [r9+0x73]
   14000e31a:	mov    edi,?
   14000e31c:	ss mov ebx,0xbb36fffe
   14000e322:	(bad)  
   14000e323:	push   QWORD PTR [rsi]
   14000e325:	mov    ebx,0xbb36fffe
   14000e32a:	(bad)  
   14000e32b:	push   QWORD PTR [rsi]
   14000e32d:	mov    ebx,0xba35fffe
   14000e332:	(bad)  
   14000e333:	(bad)  
   14000e334:	(bad)  
   14000e335:	(bad)  
   14000e336:	(bad)  
   14000e337:	(bad)  
   14000e338:	(bad)  
   14000e339:	(bad)  
   14000e33a:	(bad)  
   14000e33b:	inc    ebx
   14000e33d:	pop    rsi
   14000e33e:	add    bh,bh
   14000e340:	ret    
   14000e341:	pop    rbp
   14000e342:	add    bh,bh
   14000e344:	ret    
   14000e345:	pop    rbp
   14000e346:	add    bh,bh
   14000e348:	ret    
   14000e349:	pop    rsp
   14000e34a:	add    bh,bh
   14000e34c:	ret    
   14000e34d:	pop    rsp
   14000e34e:	add    bh,bh
   14000e350:	ret    0x5b
   14000e353:	push   QWORD PTR [rbp+0x4f]
   14000e356:	sub    al,0xff
   14000e358:	rex.RXB
   14000e359:	rex.RXB
   14000e35a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e35e:	rex.RXB out dx,eax
   14000e360:	rex.RXB
   14000e361:	rex.RXB
   14000e362:	rex.RXB (bad) 
	...
   14000e3c8:	rex.RXB
   14000e3c9:	rex.RXB
   14000e3ca:	rex.RXB (bad) 
   14000e3cc:	rex.RXB
   14000e3cd:	rex.RXB
   14000e3ce:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e3d2:	rex.RXB (bad) 
   14000e3d4:	cmp    eax,0x37ffb990
   14000e3d9:	mov    esp,0xbc37fffe
   14000e3de:	(bad)  
   14000e3df:	push   QWORD PTR [rsi]
   14000e3e1:	mov    ebx,0xbb36fffe
   14000e3e6:	(bad)  
   14000e3e7:	push   QWORD PTR [rsi]
   14000e3e9:	mov    ebx,0xbb36fffe
   14000e3ee:	(bad)  
   14000e3ef:	push   QWORD PTR [rsi]
   14000e3f1:	mov    ebx,0xfffffffe
   14000e3f6:	(bad)  
   14000e3f7:	(bad)  
   14000e3f8:	(bad)  
   14000e3f9:	(bad)  
   14000e3fa:	(bad)  
   14000e3fb:	inc    ebx
   14000e3fd:	pop    rsi
   14000e3fe:	add    bh,bh
   14000e400:	ret    
   14000e401:	pop    rsi
   14000e402:	add    bh,bh
   14000e404:	ret    
   14000e405:	pop    rbp
   14000e406:	add    bh,bh
   14000e408:	ret    
   14000e409:	pop    rbp
   14000e40a:	add    bh,bh
   14000e40c:	ret    
   14000e40d:	pop    rsp
   14000e40e:	add    bh,bh
   14000e410:	ret    
   14000e411:	pop    rsp
   14000e412:	add    bh,bh
   14000e414:	ret    0x5b
   14000e417:	call   QWORD PTR [rsp+rdx*2+0x4747ff1b]
   14000e41e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e422:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e426:	rex.RXB (bad) 
	...
   14000e484:	rex.RXB
   14000e485:	rex.RXB
   14000e486:	rex.RXB (bad) 
   14000e488:	rex.RXB
   14000e489:	rex.RXB
   14000e48a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e48e:	rex.RXB (bad) 
   14000e490:	cmp    eax,0x37ffb990
   14000e495:	mov    esp,0xbc37fffe
   14000e49a:	(bad)  
   14000e49b:	push   QWORD PTR [rdi]
   14000e49d:	mov    esp,0xbc37fffe
   14000e4a2:	(bad)  
   14000e4a3:	push   QWORD PTR [rsi]
   14000e4a5:	mov    ebx,0xbb36fffe
   14000e4aa:	(bad)  
   14000e4ab:	push   QWORD PTR [rsi]
   14000e4ad:	mov    ebx,0xbb36fffe
   14000e4b2:	(bad)  
   14000e4b3:	(bad)  
   14000e4b4:	(bad)  
   14000e4b5:	(bad)  
   14000e4b6:	(bad)  
   14000e4b7:	(bad)  
   14000e4b8:	(bad)  
   14000e4b9:	(bad)  
   14000e4ba:	(bad)  
   14000e4bb:	inc    esp
   14000e4bd:	pop    rsi
   14000e4be:	add    bh,bh
   14000e4c0:	ret    
   14000e4c1:	pop    rsi
   14000e4c2:	add    bh,bh
   14000e4c4:	ret    
   14000e4c5:	pop    rsi
   14000e4c6:	add    bh,bh
   14000e4c8:	ret    
   14000e4c9:	pop    rbp
   14000e4ca:	add    bh,bh
   14000e4cc:	ret    
   14000e4cd:	pop    rbp
   14000e4ce:	add    bh,bh
   14000e4d0:	ret    
   14000e4d1:	pop    rsp
   14000e4d2:	add    bh,bh
   14000e4d4:	ret    
   14000e4d5:	pop    rsp
   14000e4d6:	add    bh,bh
   14000e4d8:	ret    0x5b
   14000e4db:	call   QWORD PTR [rsp+rdx*2+0x4747ff1b]
   14000e4e2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e4e6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e4ea:	rex.RXB (bad) 
	...
   14000e540:	rex.RXB
   14000e541:	rex.RXB
   14000e542:	rex.RXB (bad) 
   14000e544:	rex.RXB
   14000e545:	rex.RXB
   14000e546:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e54a:	rex.RXB (bad) 
   14000e54c:	ds xchg ecx,eax
   14000e54e:	mov    ecx,0xfebc38ff
   14000e553:	push   QWORD PTR [rdi]
   14000e555:	mov    esp,0xbc37fffe
   14000e55a:	(bad)  
   14000e55b:	push   QWORD PTR [rdi]
   14000e55d:	mov    esp,0xbc37fffe
   14000e562:	(bad)  
   14000e563:	push   QWORD PTR [rdi]
   14000e565:	mov    esp,0xbb36fffe
   14000e56a:	(bad)  
   14000e56b:	push   QWORD PTR [rsi]
   14000e56d:	mov    ebx,0xbb36fffe
   14000e572:	(bad)  
   14000e573:	(bad)  
   14000e574:	(bad)  
   14000e575:	(bad)  
   14000e576:	(bad)  
   14000e577:	(bad)  
   14000e578:	(bad)  
   14000e579:	(bad)  
   14000e57a:	(bad)  
   14000e57b:	inc    esp
   14000e57d:	pop    rsi
   14000e57e:	add    bh,bh
   14000e580:	(bad)  
   14000e581:	pop    rsi
   14000e582:	add    bh,bh
   14000e584:	ret    
   14000e585:	pop    rsi
   14000e586:	add    bh,bh
   14000e588:	ret    
   14000e589:	pop    rsi
   14000e58a:	add    bh,bh
   14000e58c:	ret    
   14000e58d:	pop    rbp
   14000e58e:	add    bh,bh
   14000e590:	ret    
   14000e591:	pop    rbp
   14000e592:	add    bh,bh
   14000e594:	ret    
   14000e595:	pop    rsp
   14000e596:	add    bh,bh
   14000e598:	ret    
   14000e599:	pop    rsp
   14000e59a:	add    bh,bh
   14000e59c:	ret    0x5b
   14000e59f:	call   QWORD PTR [rsp+rdx*2+0x4747ff1b]
   14000e5a6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e5aa:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e5ae:	rex.RXB (bad) 
	...
   14000e5fc:	rex.RXB
   14000e5fd:	rex.RXB
   14000e5fe:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   14000e602:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e606:	rex.RXB (bad) 
   14000e608:	ds xchg ecx,eax
   14000e60a:	mov    ecx,0xfebd38ff
   14000e60f:	(bad)  
   14000e610:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000e616:	(bad)  
   14000e617:	push   QWORD PTR [rdi]
   14000e619:	mov    esp,0xbc37fffe
   14000e61e:	(bad)  
   14000e61f:	push   QWORD PTR [rdi]
   14000e621:	mov    esp,0xbc37fffe
   14000e626:	(bad)  
   14000e627:	push   QWORD PTR [rdi]
   14000e629:	mov    esp,0xbb36fffe
   14000e62e:	(bad)  
   14000e62f:	push   QWORD PTR [rsi]
   14000e631:	mov    ebx,0xfffffffe
   14000e636:	(bad)  
   14000e637:	(bad)  
   14000e638:	(bad)  
   14000e639:	(bad)  
   14000e63a:	(bad)  
   14000e63b:	inc    esp
   14000e63d:	pop    rdi
   14000e63e:	add    bh,bh
   14000e640:	(bad)  
   14000e641:	pop    rsi
   14000e642:	add    bh,bh
   14000e644:	(bad)  
   14000e645:	pop    rsi
   14000e646:	add    bh,bh
   14000e648:	ret    
   14000e649:	pop    rsi
   14000e64a:	add    bh,bh
   14000e64c:	ret    
   14000e64d:	pop    rsi
   14000e64e:	add    bh,bh
   14000e650:	ret    
   14000e651:	pop    rbp
   14000e652:	add    bh,bh
   14000e654:	ret    
   14000e655:	pop    rbp
   14000e656:	add    bh,bh
   14000e658:	ret    
   14000e659:	pop    rsp
   14000e65a:	add    bh,bh
   14000e65c:	ret    
   14000e65d:	pop    rsp
   14000e65e:	add    bh,bh
   14000e660:	ret    0x5b
   14000e663:	call   QWORD PTR [rsp+rdx*2+0x4747ff1b]
   14000e66a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e66e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e672:	rex.RXB xor BYTE PTR [r8],r8b
	...
   14000e6b5:	add    BYTE PTR [rax],al
   14000e6b7:	add    BYTE PTR [rdi+0x47],al
   14000e6ba:	rex.RXB and BYTE PTR [r15+0x47],r8b
   14000e6be:	rex.RXB out dx,eax
   14000e6c0:	rex.RXB
   14000e6c1:	rex.RXB
   14000e6c2:	rex.RXB (bad) 
   14000e6c4:	ds xchg ecx,eax
   14000e6c6:	mov    ecx,0xfebd39ff
   14000e6cb:	(bad)  
   14000e6cc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000e6d2:	(bad)  
   14000e6d3:	(bad)  
   14000e6d4:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000e6da:	(bad)  
   14000e6db:	push   QWORD PTR [rdi]
   14000e6dd:	mov    esp,0xbc37fffe
   14000e6e2:	(bad)  
   14000e6e3:	push   QWORD PTR [rdi]
   14000e6e5:	mov    esp,0xbc37fffe
   14000e6ea:	(bad)  
   14000e6eb:	push   QWORD PTR [rdi]
   14000e6ed:	mov    esp,0xbb36fffe
   14000e6f2:	(bad)  
   14000e6f3:	(bad)  
   14000e6f4:	(bad)  
   14000e6f5:	(bad)  
   14000e6f6:	(bad)  
   14000e6f7:	(bad)  
   14000e6f8:	(bad)  
   14000e6f9:	(bad)  
   14000e6fa:	(bad)  
   14000e6fb:	inc    esp
   14000e6fd:	pop    rdi
   14000e6fe:	add    bh,bh
   14000e700:	(bad)  
   14000e701:	pop    rdi
   14000e702:	add    bh,bh
   14000e704:	(bad)  
   14000e705:	pop    rsi
   14000e706:	add    bh,bh
   14000e708:	(bad)  
   14000e709:	pop    rsi
   14000e70a:	add    bh,bh
   14000e70c:	ret    
   14000e70d:	pop    rsi
   14000e70e:	add    bh,bh
   14000e710:	ret    
   14000e711:	pop    rsi
   14000e712:	add    bh,bh
   14000e714:	ret    
   14000e715:	pop    rbp
   14000e716:	add    bh,bh
   14000e718:	ret    
   14000e719:	pop    rbp
   14000e71a:	add    bh,bh
   14000e71c:	ret    
   14000e71d:	pop    rsp
   14000e71e:	add    bh,bh
   14000e720:	ret    
   14000e721:	pop    rsp
   14000e722:	add    bh,bh
   14000e724:	ret    0x5b
   14000e727:	call   QWORD PTR [rsp+rdx*2+0x4747ff1b]
   14000e72e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e732:	rex.RXB out dx,eax
   14000e734:	rex.RXB
   14000e735:	rex.RXB
   14000e736:	rex.RXB and BYTE PTR [r8],r8b
	...
   14000e775:	add    BYTE PTR [rax],al
   14000e777:	add    BYTE PTR [rdi+0x47],al
   14000e77a:	rex.RXB iret 
   14000e77c:	rex.RXB
   14000e77d:	rex.RXB
   14000e77e:	rex.RXB inc DWORD PTR [r9+0x7b]
   14000e782:	xchg   edi,eax
   14000e783:	(bad)  
   14000e784:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000e78a:	(bad)  
   14000e78b:	(bad)  
   14000e78c:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000e792:	(bad)  
   14000e793:	(bad)  
   14000e794:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000e79a:	(bad)  
   14000e79b:	(bad)  
   14000e79c:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000e7a3:	push   QWORD PTR [rdi]
   14000e7a5:	mov    esp,0xbc37fffe
   14000e7aa:	(bad)  
   14000e7ab:	push   QWORD PTR [rdi]
   14000e7ad:	mov    esp,0xbc37fffe
   14000e7b2:	(bad)  
   14000e7b3:	(bad)  
   14000e7b4:	(bad)  
   14000e7b5:	(bad)  
   14000e7b6:	(bad)  
   14000e7b7:	(bad)  
   14000e7b8:	(bad)  
   14000e7b9:	(bad)  
   14000e7ba:	(bad)  
   14000e7bb:	inc    esp
   14000e7bd:	(bad)  
   14000e7be:	add    bh,bh
   14000e7c0:	(bad)  
   14000e7c1:	pop    rdi
   14000e7c2:	add    bh,bh
   14000e7c4:	(bad)  
   14000e7c5:	pop    rdi
   14000e7c6:	add    bh,bh
   14000e7c8:	(bad)  
   14000e7c9:	pop    rsi
   14000e7ca:	add    bh,bh
   14000e7cc:	(bad)  
   14000e7cd:	pop    rsi
   14000e7ce:	add    bh,bh
   14000e7d0:	ret    
   14000e7d1:	pop    rsi
   14000e7d2:	add    bh,bh
   14000e7d4:	ret    
   14000e7d5:	pop    rsi
   14000e7d6:	add    bh,bh
   14000e7d8:	ret    
   14000e7d9:	pop    rbp
   14000e7da:	add    bh,bh
   14000e7dc:	ret    
   14000e7dd:	pop    rbp
   14000e7de:	add    bh,bh
   14000e7e0:	ret    
   14000e7e1:	pop    rsp
   14000e7e2:	add    bh,bh
   14000e7e4:	ret    
   14000e7e5:	pop    rsp
   14000e7e6:	add    bh,bh
   14000e7e8:	ret    0x5b
   14000e7eb:	(bad)  
   14000e7ec:	jge    0x14000e83e
   14000e7ee:	sub    bh,bh
   14000e7f0:	rex.RXB
   14000e7f1:	rex.RXB
   14000e7f2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e7f6:	rex.RXB iret 
	...
   14000e834:	rex.RXB
   14000e835:	rex.RXB
   14000e836:	rex.RXB add BYTE PTR [r15+0x47],0x47
   14000e83b:	inc    DWORD PTR [rbp+riz*2+0x75]
   14000e83f:	(bad)  
   14000e840:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000e846:	(bad)  
   14000e847:	(bad)  
   14000e848:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000e84e:	(bad)  
   14000e84f:	(bad)  
   14000e850:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000e856:	(bad)  
   14000e857:	(bad)  
   14000e858:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000e85e:	(bad)  
   14000e85f:	(bad)  
   14000e860:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000e867:	push   QWORD PTR [rdi]
   14000e869:	mov    esp,0xbc37fffe
   14000e86e:	(bad)  
   14000e86f:	push   QWORD PTR [rdi]
   14000e871:	mov    esp,0xfffffffe
   14000e876:	(bad)  
   14000e877:	(bad)  
   14000e878:	(bad)  
   14000e879:	(bad)  
   14000e87a:	(bad)  
   14000e87b:	inc    esp
   14000e87d:	(bad)  
   14000e87e:	add    bh,bh
   14000e880:	(bad)  
   14000e881:	(bad)  
   14000e882:	add    bh,bh
   14000e884:	(bad)  
   14000e885:	pop    rdi
   14000e886:	add    bh,bh
   14000e888:	(bad)  
   14000e889:	pop    rdi
   14000e88a:	add    bh,bh
   14000e88c:	(bad)  
   14000e88d:	pop    rsi
   14000e88e:	add    bh,bh
   14000e890:	(bad)  
   14000e891:	pop    rsi
   14000e892:	add    bh,bh
   14000e894:	ret    
   14000e895:	pop    rsi
   14000e896:	add    bh,bh
   14000e898:	ret    
   14000e899:	pop    rsi
   14000e89a:	add    bh,bh
   14000e89c:	ret    
   14000e89d:	pop    rbp
   14000e89e:	add    bh,bh
   14000e8a0:	ret    
   14000e8a1:	pop    rbp
   14000e8a2:	add    bh,bh
   14000e8a4:	ret    
   14000e8a5:	pop    rsp
   14000e8a6:	add    bh,bh
   14000e8a8:	ret    
   14000e8a9:	pop    rsp
   14000e8aa:	add    bh,bh
   14000e8ac:	ret    0x5b
   14000e8af:	jmp    QWORD PTR [rsi+0x4c]
   14000e8b2:	xor    eax,0x474747ff
   14000e8b7:	inc    DWORD PTR [rdi+0x47]
   14000e8ba:	rex.RXB add BYTE PTR [r8],0x0
	...
   14000e8ee:	add    BYTE PTR [rax],al
   14000e8f0:	rex.RXB
   14000e8f1:	rex.RXB
   14000e8f2:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   14000e8f6:	rex.RXB inc DWORD PTR [r14+0x4f]
   14000e8fa:	push   rdx
   14000e8fb:	(bad)  
   14000e8fc:	cmp    al,0xb0
   14000e8fe:	out    0xff,eax
   14000e900:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000e906:	(bad)  
   14000e907:	(bad)  
   14000e908:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000e90e:	(bad)  
   14000e90f:	(bad)  
   14000e910:	cmp    DWORD PTR [rbp-0x42c60002],edi
   14000e916:	(bad)  
   14000e917:	(bad)  
   14000e918:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000e91e:	(bad)  
   14000e91f:	(bad)  
   14000e920:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000e926:	(bad)  
   14000e927:	push   QWORD PTR [rdi]
   14000e929:	mov    esp,0xbc37fffe
   14000e92e:	(bad)  
   14000e92f:	push   QWORD PTR [rdi]
   14000e931:	mov    esp,0xfffffffe
   14000e936:	(bad)  
   14000e937:	(bad)  
   14000e938:	(bad)  
   14000e939:	(bad)  
   14000e93a:	(bad)  
   14000e93b:	inc    ebp
   14000e93d:	(bad)  
   14000e93e:	add    bh,bh
   14000e940:	(bad)  
   14000e941:	(bad)  
   14000e942:	add    bh,bh
   14000e944:	(bad)  
   14000e945:	(bad)  
   14000e946:	add    bh,bh
   14000e948:	(bad)  
   14000e949:	pop    rdi
   14000e94a:	add    bh,bh
   14000e94c:	(bad)  
   14000e94d:	pop    rdi
   14000e94e:	add    bh,bh
   14000e950:	(bad)  
   14000e951:	pop    rsi
   14000e952:	add    bh,bh
   14000e954:	(bad)  
   14000e955:	pop    rsi
   14000e956:	add    bh,bh
   14000e958:	ret    
   14000e959:	pop    rsi
   14000e95a:	add    bh,bh
   14000e95c:	ret    
   14000e95d:	pop    rsi
   14000e95e:	add    bh,bh
   14000e960:	ret    
   14000e961:	pop    rbp
   14000e962:	add    bh,bh
   14000e964:	ret    
   14000e965:	pop    rbp
   14000e966:	add    bh,bh
   14000e968:	ret    
   14000e969:	pop    rsp
   14000e96a:	add    bh,bh
   14000e96c:	ret    
   14000e96d:	pop    rsp
   14000e96e:	add    bh,bh
   14000e970:	mov    bl,0x59
   14000e972:	or     edi,edi
   14000e974:	rex.WRXB
   14000e975:	rex.W
   14000e976:	rex.XB inc DWORD PTR [r15+0x47]
   14000e97a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000e97e:	rex.RXB xor BYTE PTR [r8],r8b
	...
   14000e9ad:	add    BYTE PTR [rax],al
   14000e9af:	add    BYTE PTR [rdi+0x47],al
   14000e9b2:	rex.RXB mov r15d,0xff474747
   14000e9b8:	rex mov ebp,DWORD PTR [rsi-0x140c501]
   14000e9bf:	(bad)  
   14000e9c0:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000e9c6:	(bad)  
   14000e9c7:	(bad)  
   14000e9c8:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000e9ce:	(bad)  
   14000e9cf:	(bad)  
   14000e9d0:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000e9d6:	(bad)  
   14000e9d7:	(bad)  
   14000e9d8:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000e9de:	(bad)  
   14000e9df:	(bad)  
   14000e9e0:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000e9e6:	(bad)  
   14000e9e7:	(bad)  
   14000e9e8:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000e9ef:	push   QWORD PTR [rdi]
   14000e9f1:	mov    esp,0xfffffffe
   14000e9f6:	(bad)  
   14000e9f7:	(bad)  
   14000e9f8:	(bad)  
   14000e9f9:	(bad)  
   14000e9fa:	(bad)  
   14000e9fb:	inc    ebp
   14000e9fd:	(bad)  
   14000e9fe:	add    bh,bh
   14000ea00:	(bad)
   14000ea03:	inc    esp
   14000ea05:	(bad)  
   14000ea06:	add    bh,bh
   14000ea08:	(bad)  
   14000ea09:	(bad)  
   14000ea0a:	add    bh,bh
   14000ea0c:	(bad)  
   14000ea0d:	pop    rdi
   14000ea0e:	add    bh,bh
   14000ea10:	(bad)  
   14000ea11:	pop    rdi
   14000ea12:	add    bh,bh
   14000ea14:	(bad)  
   14000ea15:	pop    rsi
   14000ea16:	add    bh,bh
   14000ea18:	(bad)  
   14000ea19:	pop    rsi
   14000ea1a:	add    bh,bh
   14000ea1c:	ret    
   14000ea1d:	pop    rsi
   14000ea1e:	add    bh,bh
   14000ea20:	ret    
   14000ea21:	pop    rsi
   14000ea22:	add    bh,bh
   14000ea24:	ret    
   14000ea25:	pop    rbp
   14000ea26:	add    bh,bh
   14000ea28:	ret    
   14000ea29:	pop    rbp
   14000ea2a:	add    bh,bh
   14000ea2c:	ret    
   14000ea2d:	pop    rsp
   14000ea2e:	add    bh,bh
   14000ea30:	ret    
   14000ea31:	pop    rsp
   14000ea32:	add    bh,bh
   14000ea34:	lea    edx,[rbx+0x1f]
   14000ea37:	inc    DWORD PTR [rdi+0x47]
   14000ea3a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ea3e:	rex.RXB mov r15d,0x0
	...
   14000ea6c:	rex.RXB
   14000ea6d:	rex.RXB
   14000ea6e:	rex.RXB push r8
   14000ea70:	rex.RXB
   14000ea71:	rex.RXB
   14000ea72:	rex.RXB inc DWORD PTR [r13+r12*2+0x75]
   14000ea77:	(bad)  
   14000ea78:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000ea7e:	(bad)  
   14000ea7f:	(bad)  
   14000ea80:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000ea86:	(bad)  
   14000ea87:	(bad)  
   14000ea88:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000ea8e:	(bad)  
   14000ea8f:	(bad)  
   14000ea90:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000ea96:	(bad)  
   14000ea97:	(bad)  
   14000ea98:	cmp    DWORD PTR [rbp-0x42c60002],edi
   14000ea9e:	(bad)  
   14000ea9f:	(bad)  
   14000eaa0:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000eaa6:	(bad)  
   14000eaa7:	(bad)  
   14000eaa8:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000eaae:	(bad)  
   14000eaaf:	push   QWORD PTR [rdi]
   14000eab1:	mov    esp,0xfffffffe
   14000eab6:	(bad)  
   14000eab7:	(bad)  
   14000eab8:	(bad)  
   14000eab9:	(bad)  
   14000eaba:	(bad)  
   14000eabb:	inc    ebp
   14000eabd:	(bad)  
   14000eabe:	add    bh,bh
   14000eac0:	(bad)
   14000eac3:	inc    ebp
   14000eac5:	(bad)  
   14000eac6:	add    bh,bh
   14000eac8:	(bad)  
   14000eac9:	(bad)  
   14000eaca:	add    bh,bh
   14000eacc:	(bad)  
   14000eacd:	(bad)  
   14000eace:	add    bh,bh
   14000ead0:	(bad)  
   14000ead1:	pop    rdi
   14000ead2:	add    bh,bh
   14000ead4:	(bad)  
   14000ead5:	pop    rdi
   14000ead6:	add    bh,bh
   14000ead8:	(bad)  
   14000ead9:	pop    rsi
   14000eada:	add    bh,bh
   14000eadc:	(bad)  
   14000eadd:	pop    rsi
   14000eade:	add    bh,bh
   14000eae0:	ret    
   14000eae1:	pop    rsi
   14000eae2:	add    bh,bh
   14000eae4:	ret    
   14000eae5:	pop    rsi
   14000eae6:	add    bh,bh
   14000eae8:	ret    
   14000eae9:	pop    rbp
   14000eaea:	add    bh,bh
   14000eaec:	ret    
   14000eaed:	pop    rbp
   14000eaee:	add    bh,bh
   14000eaf0:	ret    
   14000eaf1:	pop    rsp
   14000eaf2:	add    bh,bh
   14000eaf4:	ret    
   14000eaf5:	pop    rsp
   14000eaf6:	add    bh,bh
   14000eaf8:	data16 rex.WR xor rax,0x474747ff
   14000eaff:	inc    DWORD PTR [rdi+0x47]
   14000eb02:	rex.RXB push r8
	...
   14000eb2c:	rex.RXB
   14000eb2d:	rex.RXB
   14000eb2e:	rex.RXB iret 
   14000eb30:	rex.RXB
   14000eb31:	rex.RXB
   14000eb32:	rex.RXB (bad) 
   14000eb34:	movabs ds:0xbf3afffebf3bffd0,al
   14000eb3e:	(bad)  
   14000eb3f:	(bad)  
   14000eb40:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000eb46:	(bad)  
   14000eb47:	(bad)  
   14000eb48:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000eb4e:	(bad)  
   14000eb4f:	(bad)  
   14000eb50:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000eb56:	(bad)  
   14000eb57:	(bad)  
   14000eb58:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000eb5e:	(bad)  
   14000eb5f:	(bad)  
   14000eb60:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000eb66:	(bad)  
   14000eb67:	(bad)  
   14000eb68:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000eb6e:	(bad)  
   14000eb6f:	(bad)  
   14000eb70:	cmp    BYTE PTR [rsi+rdi*8-0x1],bh
   14000eb77:	(bad)  
   14000eb78:	(bad)  
   14000eb79:	(bad)  
   14000eb7a:	(bad)  
   14000eb7b:	inc    ebp
   14000eb7d:	(bad)  
   14000eb7e:	add    bh,bh
   14000eb80:	(bad)
   14000eb83:	inc    ebp
   14000eb85:	(bad)  
   14000eb86:	add    bh,bh
   14000eb88:	(bad)
   14000eb8b:	inc    esp
   14000eb8d:	(bad)  
   14000eb8e:	add    bh,bh
   14000eb90:	(bad)  
   14000eb91:	(bad)  
   14000eb92:	add    bh,bh
   14000eb94:	(bad)  
   14000eb95:	pop    rdi
   14000eb96:	add    bh,bh
   14000eb98:	(bad)  
   14000eb99:	pop    rdi
   14000eb9a:	add    bh,bh
   14000eb9c:	(bad)  
   14000eb9d:	pop    rsi
   14000eb9e:	add    bh,bh
   14000eba0:	(bad)  
   14000eba1:	pop    rsi
   14000eba2:	add    bh,bh
   14000eba4:	ret    
   14000eba5:	pop    rsi
   14000eba6:	add    bh,bh
   14000eba8:	ret    
   14000eba9:	pop    rsi
   14000ebaa:	add    bh,bh
   14000ebac:	ret    
   14000ebad:	pop    rbp
   14000ebae:	add    bh,bh
   14000ebb0:	ret    
   14000ebb1:	pop    rbp
   14000ebb2:	add    bh,bh
   14000ebb4:	ret    
   14000ebb5:	pop    rsp
   14000ebb6:	add    bh,bh
   14000ebb8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ebb9:	push   rdi
   14000ebba:	adc    bh,bh
   14000ebbc:	rex.RXB
   14000ebbd:	rex.RXB
   14000ebbe:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ebc2:	rex.RXB iret 
	...
   14000ebe8:	rex.RXB
   14000ebe9:	rex.RXB
   14000ebea:	rex.RXB
   14000ebeb:	rex
   14000ebec:	rex.RXB
   14000ebed:	rex.RXB
   14000ebee:	rex.RXB inc DWORD PTR [r13+r12*2+0x75]
   14000ebf3:	(bad)  
   14000ebf4:	cmp    eax,eax
   14000ebf6:	(bad)  
   14000ebf7:	(bad)  
   14000ebf8:	cmp    eax,eax
   14000ebfa:	(bad)  
   14000ebfb:	(bad)  
   14000ebfc:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14000ec02:	(bad)  
   14000ec03:	(bad)  
   14000ec04:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000ec0a:	(bad)  
   14000ec0b:	(bad)  
   14000ec0c:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000ec12:	(bad)  
   14000ec13:	(bad)  
   14000ec14:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000ec1a:	(bad)  
   14000ec1b:	(bad)  
   14000ec1c:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000ec22:	(bad)  
   14000ec23:	(bad)  
   14000ec24:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000ec2a:	(bad)  
   14000ec2b:	(bad)  
   14000ec2c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000ec32:	(bad)  
   14000ec33:	(bad)  
   14000ec34:	(bad)  
   14000ec35:	(bad)  
   14000ec36:	(bad)  
   14000ec37:	(bad)  
   14000ec38:	(bad)  
   14000ec39:	(bad)  
   14000ec3a:	(bad)  
   14000ec3b:	inc    ebp
   14000ec3d:	(bad)  
   14000ec3e:	add    bh,bh
   14000ec40:	(bad)
   14000ec43:	inc    ebp
   14000ec45:	(bad)  
   14000ec46:	add    bh,bh
   14000ec48:	(bad)
   14000ec4b:	inc    ebp
   14000ec4d:	(bad)  
   14000ec4e:	add    bh,bh
   14000ec50:	(bad)  
   14000ec51:	(bad)  
   14000ec52:	add    bh,bh
   14000ec54:	(bad)  
   14000ec55:	(bad)  
   14000ec56:	add    bh,bh
   14000ec58:	(bad)  
   14000ec59:	pop    rdi
   14000ec5a:	add    bh,bh
   14000ec5c:	(bad)  
   14000ec5d:	pop    rdi
   14000ec5e:	add    bh,bh
   14000ec60:	(bad)  
   14000ec61:	pop    rsi
   14000ec62:	add    bh,bh
   14000ec64:	(bad)  
   14000ec65:	pop    rsi
   14000ec66:	add    bh,bh
   14000ec68:	ret    
   14000ec69:	pop    rsi
   14000ec6a:	add    bh,bh
   14000ec6c:	ret    
   14000ec6d:	pop    rsi
   14000ec6e:	add    bh,bh
   14000ec70:	ret    
   14000ec71:	pop    rbp
   14000ec72:	add    bh,bh
   14000ec74:	ret    
   14000ec75:	pop    rbp
   14000ec76:	add    bh,bh
   14000ec78:	ret    
   14000ec79:	pop    rsp
   14000ec7a:	add    bh,bh
   14000ec7c:	data16 rex.WR xor rax,0x474747ff
   14000ec83:	inc    DWORD PTR [rdi+0x47]
   14000ec86:	rex.RXB
   14000ec87:	add    BYTE PTR [rax],al
	...
   14000eca6:	add    BYTE PTR [rax],al
   14000eca8:	rex.RXB
   14000eca9:	rex.RXB
   14000ecaa:	rex.RXB lahf 
   14000ecac:	rex.RXB
   14000ecad:	rex.RXB
   14000ecae:	rex.RXB inc DWORD PTR [r8-0x6d]
   14000ecb2:	mov    ecx,0xfec03bff
   14000ecb7:	(bad)  
   14000ecb8:	cmp    eax,eax
   14000ecba:	(bad)  
   14000ecbb:	(bad)  
   14000ecbc:	cmp    eax,eax
   14000ecbe:	(bad)  
   14000ecbf:	(bad)  
   14000ecc0:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14000ecc6:	(bad)  
   14000ecc7:	(bad)  
   14000ecc8:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000ecce:	(bad)  
   14000eccf:	(bad)  
   14000ecd0:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000ecd6:	(bad)  
   14000ecd7:	(bad)  
   14000ecd8:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000ecde:	(bad)  
   14000ecdf:	(bad)  
   14000ece0:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000ece6:	(bad)  
   14000ece7:	(bad)  
   14000ece8:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000ecee:	(bad)  
   14000ecef:	(bad)  
   14000ecf0:	cmp    BYTE PTR [rbp-0x2],bh
   14000ecf6:	(bad)  
   14000ecf7:	(bad)  
   14000ecf8:	(bad)  
   14000ecf9:	(bad)  
   14000ecfa:	(bad)  
   14000ecfb:	inc    ebp
   14000ecfd:	(bad)  
   14000ecfe:	add    bh,bh
   14000ed00:	(bad)
   14000ed03:	inc    ebp
   14000ed05:	(bad)  
   14000ed06:	add    bh,bh
   14000ed08:	(bad)
   14000ed0b:	inc    ebp
   14000ed0d:	(bad)  
   14000ed0e:	add    bh,bh
   14000ed10:	(bad)
   14000ed13:	inc    esp
   14000ed15:	(bad)  
   14000ed16:	add    bh,bh
   14000ed18:	(bad)  
   14000ed19:	(bad)  
   14000ed1a:	add    bh,bh
   14000ed1c:	(bad)  
   14000ed1d:	pop    rdi
   14000ed1e:	add    bh,bh
   14000ed20:	(bad)  
   14000ed21:	pop    rdi
   14000ed22:	add    bh,bh
   14000ed24:	(bad)  
   14000ed25:	pop    rsi
   14000ed26:	add    bh,bh
   14000ed28:	(bad)  
   14000ed29:	pop    rsi
   14000ed2a:	add    bh,bh
   14000ed2c:	ret    
   14000ed2d:	pop    rsi
   14000ed2e:	add    bh,bh
   14000ed30:	ret    
   14000ed31:	pop    rsi
   14000ed32:	add    bh,bh
   14000ed34:	ret    
   14000ed35:	pop    rbp
   14000ed36:	add    bh,bh
   14000ed38:	ret    
   14000ed39:	pop    rbp
   14000ed3a:	add    bh,bh
   14000ed3c:	xchg   ebp,eax
   14000ed3d:	push   rsp
   14000ed3e:	sbb    edi,edi
   14000ed40:	rex.RXB
   14000ed41:	rex.RXB
   14000ed42:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ed46:	rex.RXB lahf 
	...
   14000ed68:	rex.RXB
   14000ed69:	rex.RXB
   14000ed6a:	rex.RXB out dx,eax
   14000ed6c:	rex.RX
   14000ed6d:	rex.WRXB push r10
   14000ed6f:	(bad)  
   14000ed70:	cmp    al,0xc0
   14000ed72:	(bad)  
   14000ed73:	(bad)  
   14000ed74:	cmp    eax,eax
   14000ed76:	(bad)  
   14000ed77:	(bad)  
   14000ed78:	cmp    eax,eax
   14000ed7a:	(bad)  
   14000ed7b:	(bad)  
   14000ed7c:	cmp    eax,eax
   14000ed7e:	(bad)  
   14000ed7f:	(bad)  
   14000ed80:	cmp    eax,eax
   14000ed82:	(bad)  
   14000ed83:	(bad)  
   14000ed84:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14000ed8a:	(bad)  
   14000ed8b:	(bad)  
   14000ed8c:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000ed92:	(bad)  
   14000ed93:	(bad)  
   14000ed94:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000ed9a:	(bad)  
   14000ed9b:	(bad)  
   14000ed9c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000eda2:	(bad)  
   14000eda3:	(bad)  
   14000eda4:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000edaa:	(bad)  
   14000edab:	(bad)  
   14000edac:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000edb2:	(bad)  
   14000edb3:	(bad)  
   14000edb4:	(bad)  
   14000edb5:	(bad)  
   14000edb6:	(bad)  
   14000edb7:	(bad)  
   14000edb8:	(bad)  
   14000edb9:	(bad)  
   14000edba:	(bad)  
   14000edbb:	inc    esi
   14000edbd:	(bad)  
   14000edbe:	add    bh,bh
   14000edc0:	(bad)
   14000edc3:	inc    ebp
   14000edc5:	(bad)  
   14000edc6:	add    bh,bh
   14000edc8:	(bad)
   14000edcb:	inc    ebp
   14000edcd:	(bad)  
   14000edce:	add    bh,bh
   14000edd0:	(bad)
   14000edd3:	inc    ebp
   14000edd5:	(bad)  
   14000edd6:	add    bh,bh
   14000edd8:	(bad)  
   14000edd9:	(bad)  
   14000edda:	add    bh,bh
   14000eddc:	(bad)  
   14000eddd:	(bad)  
   14000edde:	add    bh,bh
   14000ede0:	(bad)  
   14000ede1:	pop    rdi
   14000ede2:	add    bh,bh
   14000ede4:	(bad)  
   14000ede5:	pop    rdi
   14000ede6:	add    bh,bh
   14000ede8:	(bad)  
   14000ede9:	pop    rsi
   14000edea:	add    bh,bh
   14000edec:	(bad)  
   14000eded:	pop    rsi
   14000edee:	add    bh,bh
   14000edf0:	ret    
   14000edf1:	pop    rsi
   14000edf2:	add    bh,bh
   14000edf4:	ret    
   14000edf5:	pop    rsi
   14000edf6:	add    bh,bh
   14000edf8:	ret    
   14000edf9:	pop    rbp
   14000edfa:	add    bh,bh
   14000edfc:	ret    
   14000edfd:	pop    rbp
   14000edfe:	add    bh,bh
   14000ee00:	rex.WRXB
   14000ee01:	rex.W
   14000ee02:	rex.XB inc DWORD PTR [r15+0x47]
   14000ee06:	rex.RXB out dx,eax
	...
   14000ee24:	rex.RXB
   14000ee25:	rex.RXB
   14000ee26:	rex.RXB push r8
   14000ee28:	rex.RXB
   14000ee29:	rex.RXB
   14000ee2a:	rex.RXB dec DWORD PTR [r12+r9*4-0x74]
   14000ee32:	(bad)  
   14000ee33:	(bad)  
   14000ee34:	(bad)  
   14000ee35:	(bad)  
   14000ee36:	(bad)  
   14000ee37:	(bad)  
   14000ee38:	(bad)  
   14000ee39:	(bad)  
   14000ee3a:	(bad)  
   14000ee3b:	(bad)  
   14000ee3c:	(bad)  
   14000ee3d:	(bad)  
   14000ee3e:	(bad)  
   14000ee3f:	(bad)  
   14000ee40:	(bad)  
   14000ee41:	(bad)  
   14000ee42:	(bad)  
   14000ee43:	(bad)  
   14000ee44:	(bad)  
   14000ee45:	(bad)  
   14000ee46:	(bad)  
   14000ee47:	(bad)  
   14000ee48:	(bad)  
   14000ee49:	(bad)  
   14000ee4a:	(bad)  
   14000ee4b:	(bad)  
   14000ee4c:	(bad)  
   14000ee4d:	(bad)  
   14000ee4e:	(bad)  
   14000ee4f:	(bad)  
   14000ee50:	(bad)  
   14000ee51:	(bad)  
   14000ee52:	(bad)  
   14000ee53:	(bad)  
   14000ee54:	(bad)  
   14000ee55:	(bad)  
   14000ee56:	(bad)  
   14000ee57:	(bad)  
   14000ee58:	(bad)  
   14000ee59:	(bad)  
   14000ee5a:	(bad)  
   14000ee5b:	(bad)  
   14000ee5c:	(bad)  
   14000ee5d:	(bad)  
   14000ee5e:	(bad)  
   14000ee5f:	(bad)  
   14000ee60:	(bad)  
   14000ee61:	(bad)  
   14000ee62:	(bad)  
   14000ee63:	(bad)  
   14000ee64:	(bad)  
   14000ee65:	(bad)  
   14000ee66:	(bad)  
   14000ee67:	(bad)  
   14000ee68:	(bad)  
   14000ee69:	(bad)  
   14000ee6a:	(bad)  
   14000ee6b:	(bad)  
   14000ee6c:	(bad)  
   14000ee6d:	(bad)  
   14000ee6e:	(bad)  
   14000ee6f:	(bad)  
   14000ee70:	(bad)  
   14000ee71:	(bad)  
   14000ee72:	(bad)  
   14000ee73:	(bad)  
   14000ee74:	(bad)  
   14000ee75:	(bad)  
   14000ee76:	(bad)  
   14000ee77:	(bad)  
   14000ee78:	(bad)  
   14000ee79:	(bad)  
   14000ee7a:	(bad)  
   14000ee7b:	(bad)  
   14000ee7c:	(bad)  
   14000ee7d:	(bad)  
   14000ee7e:	(bad)  
   14000ee7f:	(bad)  
   14000ee80:	(bad)  
   14000ee81:	(bad)  
   14000ee82:	(bad)  
   14000ee83:	(bad)  
   14000ee84:	(bad)  
   14000ee85:	(bad)  
   14000ee86:	(bad)  
   14000ee87:	(bad)  
   14000ee88:	(bad)  
   14000ee89:	(bad)  
   14000ee8a:	(bad)  
   14000ee8b:	(bad)  
   14000ee8c:	(bad)  
   14000ee8d:	(bad)  
   14000ee8e:	(bad)  
   14000ee8f:	(bad)  
   14000ee90:	(bad)  
   14000ee91:	(bad)  
   14000ee92:	(bad)  
   14000ee93:	(bad)  
   14000ee94:	(bad)  
   14000ee95:	(bad)  
   14000ee96:	(bad)  
   14000ee97:	(bad)  
   14000ee98:	(bad)  
   14000ee99:	(bad)  
   14000ee9a:	(bad)  
   14000ee9b:	(bad)  
   14000ee9c:	(bad)  
   14000ee9d:	(bad)  
   14000ee9e:	(bad)  
   14000ee9f:	(bad)  
   14000eea0:	(bad)  
   14000eea1:	(bad)  
   14000eea2:	(bad)  
   14000eea3:	(bad)  
   14000eea4:	(bad)  
   14000eea5:	(bad)  
   14000eea6:	(bad)  
   14000eea7:	(bad)  
   14000eea8:	(bad)  
   14000eea9:	(bad)  
   14000eeaa:	(bad)  
   14000eeab:	(bad)  
   14000eeac:	(bad)  
   14000eead:	(bad)  
   14000eeae:	(bad)  
   14000eeaf:	(bad)  
   14000eeb0:	(bad)  
   14000eeb1:	(bad)  
   14000eeb2:	(bad)  
   14000eeb3:	(bad)  
   14000eeb4:	(bad)  
   14000eeb5:	(bad)  
   14000eeb6:	(bad)  
   14000eeb7:	(bad)  
   14000eeb8:	(bad)  
   14000eeb9:	(bad)  
   14000eeba:	(bad)  
   14000eebb:	(bad)  
   14000eebc:	(bad)  
   14000eebd:	(bad)  
   14000eebe:	(bad)  
   14000eebf:	dec    DWORD PTR [rsp+rcx*4+0x4747ff8c]
   14000eec6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000eeca:	rex.RXB push r8
	...
   14000eee4:	rex.RXB
   14000eee5:	rex.RXB
   14000eee6:	rex.RXB add BYTE PTR [r15+0x47],0x47
   14000eeeb:	inc    esi
   14000eeed:	mov    dh,0xff
   14000eef0:	(bad)  
   14000eef1:	(bad)  
   14000eef2:	(bad)  
   14000eef3:	(bad)  
   14000eef4:	(bad)  
   14000eef5:	(bad)  
   14000eef6:	(bad)  
   14000eef7:	(bad)  
   14000eef8:	(bad)  
   14000eef9:	(bad)  
   14000eefa:	(bad)  
   14000eefb:	(bad)  
   14000eefc:	(bad)  
   14000eefd:	(bad)  
   14000eefe:	(bad)  
   14000eeff:	(bad)  
   14000ef00:	(bad)  
   14000ef01:	(bad)  
   14000ef02:	(bad)  
   14000ef03:	(bad)  
   14000ef04:	(bad)  
   14000ef05:	(bad)  
   14000ef06:	(bad)  
   14000ef07:	(bad)  
   14000ef08:	(bad)  
   14000ef09:	(bad)  
   14000ef0a:	(bad)  
   14000ef0b:	(bad)  
   14000ef0c:	(bad)  
   14000ef0d:	(bad)  
   14000ef0e:	(bad)  
   14000ef0f:	(bad)  
   14000ef10:	(bad)  
   14000ef11:	(bad)  
   14000ef12:	(bad)  
   14000ef13:	(bad)  
   14000ef14:	(bad)  
   14000ef15:	(bad)  
   14000ef16:	(bad)  
   14000ef17:	(bad)  
   14000ef18:	(bad)  
   14000ef19:	(bad)  
   14000ef1a:	(bad)  
   14000ef1b:	(bad)  
   14000ef1c:	(bad)  
   14000ef1d:	(bad)  
   14000ef1e:	(bad)  
   14000ef1f:	(bad)  
   14000ef20:	(bad)  
   14000ef21:	(bad)  
   14000ef22:	(bad)  
   14000ef23:	(bad)  
   14000ef24:	(bad)  
   14000ef25:	(bad)  
   14000ef26:	(bad)  
   14000ef27:	(bad)  
   14000ef28:	(bad)  
   14000ef29:	(bad)  
   14000ef2a:	(bad)  
   14000ef2b:	(bad)  
   14000ef2c:	(bad)  
   14000ef2d:	(bad)  
   14000ef2e:	(bad)  
   14000ef2f:	(bad)  
   14000ef30:	(bad)  
   14000ef31:	(bad)  
   14000ef32:	(bad)  
   14000ef33:	(bad)  
   14000ef34:	(bad)  
   14000ef35:	(bad)  
   14000ef36:	(bad)  
   14000ef37:	(bad)  
   14000ef38:	(bad)  
   14000ef39:	(bad)  
   14000ef3a:	(bad)  
   14000ef3b:	(bad)  
   14000ef3c:	(bad)  
   14000ef3d:	(bad)  
   14000ef3e:	(bad)  
   14000ef3f:	(bad)  
   14000ef40:	(bad)  
   14000ef41:	(bad)  
   14000ef42:	(bad)  
   14000ef43:	(bad)  
   14000ef44:	(bad)  
   14000ef45:	(bad)  
   14000ef46:	(bad)  
   14000ef47:	(bad)  
   14000ef48:	(bad)  
   14000ef49:	(bad)  
   14000ef4a:	(bad)  
   14000ef4b:	(bad)  
   14000ef4c:	(bad)  
   14000ef4d:	(bad)  
   14000ef4e:	(bad)  
   14000ef4f:	(bad)  
   14000ef50:	(bad)  
   14000ef51:	(bad)  
   14000ef52:	(bad)  
   14000ef53:	(bad)  
   14000ef54:	(bad)  
   14000ef55:	(bad)  
   14000ef56:	(bad)  
   14000ef57:	(bad)  
   14000ef58:	(bad)  
   14000ef59:	(bad)  
   14000ef5a:	(bad)  
   14000ef5b:	(bad)  
   14000ef5c:	(bad)  
   14000ef5d:	(bad)  
   14000ef5e:	(bad)  
   14000ef5f:	(bad)  
   14000ef60:	(bad)  
   14000ef61:	(bad)  
   14000ef62:	(bad)  
   14000ef63:	(bad)  
   14000ef64:	(bad)  
   14000ef65:	(bad)  
   14000ef66:	(bad)  
   14000ef67:	(bad)  
   14000ef68:	(bad)  
   14000ef69:	(bad)  
   14000ef6a:	(bad)  
   14000ef6b:	(bad)  
   14000ef6c:	(bad)  
   14000ef6d:	(bad)  
   14000ef6e:	(bad)  
   14000ef6f:	(bad)  
   14000ef70:	(bad)  
   14000ef71:	(bad)  
   14000ef72:	(bad)  
   14000ef73:	(bad)  
   14000ef74:	(bad)  
   14000ef75:	(bad)  
   14000ef76:	(bad)  
   14000ef77:	(bad)  
   14000ef78:	(bad)  
   14000ef79:	(bad)  
   14000ef7a:	(bad)  
   14000ef7b:	(bad)  
   14000ef7c:	(bad)  
   14000ef7d:	(bad)  
   14000ef7e:	(bad)  
   14000ef7f:	inc    esi
   14000ef81:	mov    dh,0xff
   14000ef84:	rex.RXB
   14000ef85:	rex.RXB
   14000ef86:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ef8a:	rex.RXB add BYTE PTR [r8],0x0
	...
   14000efa2:	add    BYTE PTR [rax],al
   14000efa4:	rex.RXB
   14000efa5:	rex.RXB
   14000efa6:	rex.RXB mov r15d,0xff474747
   14000efac:	shr    DWORD PTR [rcx+0x4],0xff
   14000efb0:	leave  
   14000efb1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000efb4:	leave  
   14000efb5:	push   0x0
   14000efb7:	dec    ecx
   14000efb9:	push   0x0
   14000efbb:	dec    ecx
   14000efbd:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000efc3:	dec    eax
   14000efc5:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000efcb:	dec    eax
   14000efcd:	push   0x68c8ff00
   14000efd2:	add    bh,bh
   14000efd4:	enter  0x67,0xff
   14000efd8:	enter  0x67,0xff
   14000efdc:	(bad)  
   14000efdd:	data16 add bh,bh
   14000efe0:	(bad)  
   14000efe1:	data16 add bh,bh
   14000efe4:	(bad)  
   14000efe5:	data16 add bh,bh
   14000efe8:	(bad)  
   14000efe9:	gs add bh,bh
   14000efec:	(bad)  
   14000efed:	gs add bh,bh
   14000eff0:	(bad)  
   14000eff1:	gs add bh,bh
   14000eff4:	(bad)  
   14000eff5:	(bad)  
   14000eff6:	(bad)  
   14000eff7:	(bad)  
   14000eff8:	(bad)  
   14000eff9:	(bad)  
   14000effa:	(bad)  
   14000effb:	(bad)  
   14000effc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000f002:	(bad)  
   14000f003:	(bad)  
   14000f004:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000f00a:	(bad)  
   14000f00b:	push   QWORD PTR [rdi]
   14000f00d:	mov    esp,0xbc37fffe
   14000f012:	(bad)  
   14000f013:	push   QWORD PTR [rdi]
   14000f015:	mov    esp,0xbc37fffe
   14000f01a:	(bad)  
   14000f01b:	push   QWORD PTR [rdi]
   14000f01d:	mov    esp,0xbb36fffe
   14000f022:	(bad)  
   14000f023:	push   QWORD PTR [rsi]
   14000f025:	mov    ebx,0xbb36fffe
   14000f02a:	(bad)  
   14000f02b:	push   QWORD PTR [rsi]
   14000f02d:	mov    ebx,0xbb36fffe
   14000f032:	(bad)  
   14000f033:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600eef3
   14000f039:	mov    edx,0xba35fffe
   14000f03e:	(bad)  
   14000f03f:	push   QWORD PTR [rsi]
   14000f041:	mov    bl,0xf3
   14000f043:	inc    DWORD PTR [rdi+0x47]
   14000f046:	rex.RXB inc DWORD PTR [r15+0x47]
   14000f04a:	rex.RXB mov r15d,0x0
	...
   14000f064:	rex.RXB
   14000f065:	rex.RXB
   14000f066:	rex.RXB out dx,eax
   14000f068:	rex.WRXB
   14000f069:	rex.WB
   14000f06a:	rex.XB dec r10d
   14000f06d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f070:	leave  
   14000f071:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f074:	leave  
   14000f075:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f078:	leave  
   14000f079:	push   0x0
   14000f07b:	dec    ecx
   14000f07d:	push   0x0
   14000f07f:	dec    ecx
   14000f081:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000f087:	dec    eax
   14000f089:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000f08f:	dec    eax
   14000f091:	push   0x68c8ff00
   14000f096:	add    bh,bh
   14000f098:	enter  0x67,0xff
   14000f09c:	enter  0x67,0xff
   14000f0a0:	(bad)  
   14000f0a1:	data16 add bh,bh
   14000f0a4:	(bad)  
   14000f0a5:	data16 add bh,bh
   14000f0a8:	(bad)  
   14000f0a9:	data16 add bh,bh
   14000f0ac:	(bad)  
   14000f0ad:	gs add bh,bh
   14000f0b0:	(bad)  
   14000f0b1:	gs add bh,bh
   14000f0b4:	(bad)  
   14000f0b5:	(bad)  
   14000f0b6:	(bad)  
   14000f0b7:	(bad)  
   14000f0b8:	(bad)  
   14000f0b9:	(bad)  
   14000f0ba:	(bad)  
   14000f0bb:	(bad)  
   14000f0bc:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000f0c2:	(bad)  
   14000f0c3:	(bad)  
   14000f0c4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000f0ca:	(bad)  
   14000f0cb:	(bad)  
   14000f0cc:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000f0d3:	push   QWORD PTR [rdi]
   14000f0d5:	mov    esp,0xbc37fffe
   14000f0da:	(bad)  
   14000f0db:	push   QWORD PTR [rdi]
   14000f0dd:	mov    esp,0xbc37fffe
   14000f0e2:	(bad)  
   14000f0e3:	push   QWORD PTR [rsi]
   14000f0e5:	mov    ebx,0xbb36fffe
   14000f0ea:	(bad)  
   14000f0eb:	push   QWORD PTR [rsi]
   14000f0ed:	mov    ebx,0xbb36fffe
   14000f0f2:	(bad)  
   14000f0f3:	push   QWORD PTR [rsi]
   14000f0f5:	mov    ebx,0xba35fffe
   14000f0fa:	(bad)  
   14000f0fb:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600efbb
   14000f101:	mov    edx,0x4e46fffe
   14000f106:	push   rdx
   14000f107:	inc    DWORD PTR [rdi+0x47]
   14000f10a:	rex.RXB out dx,eax
	...
   14000f124:	rex.RXB
   14000f125:	rex.RXB
   14000f126:	rex.RXB jmp FWORD PTR [r8+0x50]
   14000f12a:	xor    eax,0x6ccaff
   14000f12f:	dec    edx
   14000f131:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f134:	leave  
   14000f135:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f138:	leave  
   14000f139:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f13c:	leave  
   14000f13d:	push   0x0
   14000f13f:	dec    ecx
   14000f141:	push   0x0
   14000f143:	dec    ecx
   14000f145:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000f14b:	dec    eax
   14000f14d:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000f153:	dec    eax
   14000f155:	push   0x68c8ff00
   14000f15a:	add    bh,bh
   14000f15c:	enter  0x67,0xff
   14000f160:	enter  0x67,0xff
   14000f164:	(bad)  
   14000f165:	data16 add bh,bh
   14000f168:	(bad)  
   14000f169:	data16 add bh,bh
   14000f16c:	(bad)  
   14000f16d:	data16 add bh,bh
   14000f170:	(bad)  
   14000f171:	gs add bh,bh
   14000f174:	(bad)  
   14000f175:	(bad)  
   14000f176:	(bad)  
   14000f177:	(bad)  
   14000f178:	(bad)  
   14000f179:	(bad)  
   14000f17a:	(bad)  
   14000f17b:	(bad)  
   14000f17c:	cmp    DWORD PTR [rbp-0x42c60002],edi
   14000f182:	(bad)  
   14000f183:	(bad)  
   14000f184:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000f18a:	(bad)  
   14000f18b:	(bad)  
   14000f18c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000f192:	(bad)  
   14000f193:	push   QWORD PTR [rdi]
   14000f195:	mov    esp,0xbc37fffe
   14000f19a:	(bad)  
   14000f19b:	push   QWORD PTR [rdi]
   14000f19d:	mov    esp,0xbc37fffe
   14000f1a2:	(bad)  
   14000f1a3:	push   QWORD PTR [rdi]
   14000f1a5:	mov    esp,0xbb36fffe
   14000f1aa:	(bad)  
   14000f1ab:	push   QWORD PTR [rsi]
   14000f1ad:	mov    ebx,0xbb36fffe
   14000f1b2:	(bad)  
   14000f1b3:	push   QWORD PTR [rsi]
   14000f1b5:	mov    ebx,0xbb36fffe
   14000f1ba:	(bad)  
   14000f1bb:	push   QWORD PTR [rip+0x35fffeba]        # 0x17600f07b
   14000f1c1:	mov    edx,0x6443fffe
   14000f1c6:	jne    0x14000f1c7
   14000f1c8:	rex.RXB
   14000f1c9:	rex.RXB
   14000f1ca:	rex.RXB inc DWORD PTR [r8]
	...
   14000f1e1:	add    BYTE PTR [rax],al
   14000f1e3:	add    BYTE PTR [rdi+0x47],al
   14000f1e6:	rex.RXB jmp FWORD PTR [r8+0x50]
   14000f1ea:	xor    eax,0x6ccaff
   14000f1ef:	dec    edx
   14000f1f1:	ins    BYTE PTR es:[rdi],dx
   14000f1f2:	add    bh,bh
   14000f1f4:	retf   0x6b
   14000f1f7:	dec    ecx
   14000f1f9:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f1fc:	leave  
   14000f1fd:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f200:	leave  
   14000f201:	push   0x0
   14000f203:	dec    ecx
   14000f205:	push   0x0
   14000f207:	dec    ecx
   14000f209:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000f20f:	dec    eax
   14000f211:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000f217:	dec    eax
   14000f219:	push   0x68c8ff00
   14000f21e:	add    bh,bh
   14000f220:	enter  0x67,0xff
   14000f224:	enter  0x67,0xff
   14000f228:	(bad)  
   14000f229:	data16 add bh,bh
   14000f22c:	(bad)  
   14000f22d:	data16 add bh,bh
   14000f230:	(bad)  
   14000f231:	data16 add bh,bh
   14000f234:	(bad)  
   14000f235:	(bad)  
   14000f236:	(bad)  
   14000f237:	(bad)  
   14000f238:	(bad)  
   14000f239:	(bad)  
   14000f23a:	(bad)  
   14000f23b:	(bad)  
   14000f23c:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000f242:	(bad)  
   14000f243:	(bad)  
   14000f244:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000f24a:	(bad)  
   14000f24b:	(bad)  
   14000f24c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000f252:	(bad)  
   14000f253:	(bad)  
   14000f254:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000f25b:	push   QWORD PTR [rdi]
   14000f25d:	mov    esp,0xbc37fffe
   14000f262:	(bad)  
   14000f263:	push   QWORD PTR [rdi]
   14000f265:	mov    esp,0xbc37fffe
   14000f26a:	(bad)  
   14000f26b:	push   QWORD PTR [rsi]
   14000f26d:	mov    ebx,0xbb36fffe
   14000f272:	(bad)  
   14000f273:	push   QWORD PTR [rsi]
   14000f275:	mov    ebx,0xbb36fffe
   14000f27a:	(bad)  
   14000f27b:	push   QWORD PTR [rsi]
   14000f27d:	mov    ebx,0xba35fffe
   14000f282:	(bad)  
   14000f283:	inc    DWORD PTR [rbx+0x64]
   14000f286:	jne    0x14000f287
   14000f288:	rex.RXB
   14000f289:	rex.RXB
   14000f28a:	rex.RXB inc DWORD PTR [r8]
	...
   14000f2a1:	add    BYTE PTR [rax],al
   14000f2a3:	add    BYTE PTR [rdi+0x47],al
   14000f2a6:	rex.RXB push QWORD PTR [r8+0x53]
   14000f2aa:	xor    edi,edi
   14000f2ac:	retf   0x6d
   14000f2af:	dec    edx
   14000f2b1:	ins    BYTE PTR es:[rdi],dx
   14000f2b2:	add    bh,bh
   14000f2b4:	retf   0x6c
   14000f2b7:	dec    edx
   14000f2b9:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f2bc:	leave  
   14000f2bd:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f2c0:	leave  
   14000f2c1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f2c4:	leave  
   14000f2c5:	push   0x0
   14000f2c7:	dec    ecx
   14000f2c9:	push   0x0
   14000f2cb:	dec    ecx
   14000f2cd:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000f2d3:	dec    eax
   14000f2d5:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000f2db:	dec    eax
   14000f2dd:	push   0x68c8ff00
   14000f2e2:	add    bh,bh
   14000f2e4:	enter  0x67,0xff
   14000f2e8:	enter  0x67,0xff
   14000f2ec:	(bad)  
   14000f2ed:	data16 add bh,bh
   14000f2f0:	(bad)  
   14000f2f1:	data16 add bh,bh
   14000f2f4:	(bad)  
   14000f2f5:	(bad)  
   14000f2f6:	(bad)  
   14000f2f7:	(bad)  
   14000f2f8:	(bad)  
   14000f2f9:	(bad)  
   14000f2fa:	(bad)  
   14000f2fb:	(bad)  
   14000f2fc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000f302:	(bad)  
   14000f303:	(bad)  
   14000f304:	cmp    DWORD PTR [rbp-0x42c60002],edi
   14000f30a:	(bad)  
   14000f30b:	(bad)  
   14000f30c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000f312:	(bad)  
   14000f313:	(bad)  
   14000f314:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000f31a:	(bad)  
   14000f31b:	push   QWORD PTR [rdi]
   14000f31d:	mov    esp,0xbc37fffe
   14000f322:	(bad)  
   14000f323:	push   QWORD PTR [rdi]
   14000f325:	mov    esp,0xbc37fffe
   14000f32a:	(bad)  
   14000f32b:	push   QWORD PTR [rdi]
   14000f32d:	mov    esp,0xbb36fffe
   14000f332:	(bad)  
   14000f333:	push   QWORD PTR [rsi]
   14000f335:	mov    ebx,0xbb36fffe
   14000f33a:	(bad)  
   14000f33b:	push   QWORD PTR [rsi]
   14000f33d:	mov    ebx,0xbb36fffe
   14000f342:	(bad)  
   14000f343:	inc    DWORD PTR [rbx+0x64]
   14000f346:	jne    0x14000f347
   14000f348:	rex.RXB
   14000f349:	rex.RXB
   14000f34a:	rex.RXB inc DWORD PTR [r8]
	...
   14000f361:	add    BYTE PTR [rax],al
   14000f363:	add    BYTE PTR [rdi+0x47],al
   14000f366:	rex.RXB dec DWORD PTR [r9-0x3500dba6]
   14000f36d:	ins    DWORD PTR es:[rdi],dx
   14000f36e:	add    bh,bh
   14000f370:	retf   0x6d
   14000f373:	dec    edx
   14000f375:	ins    BYTE PTR es:[rdi],dx
   14000f376:	add    bh,bh
   14000f378:	retf   0x6c
   14000f37b:	dec    edx
   14000f37d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f380:	leave  
   14000f381:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f384:	leave  
   14000f385:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f388:	leave  
   14000f389:	push   0x0
   14000f38b:	dec    ecx
   14000f38d:	push   0x0
   14000f38f:	dec    ecx
   14000f391:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000f397:	dec    eax
   14000f399:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000f39f:	dec    eax
   14000f3a1:	push   0x68c8ff00
   14000f3a6:	add    bh,bh
   14000f3a8:	enter  0x67,0xff
   14000f3ac:	enter  0x67,0xff
   14000f3b0:	(bad)  
   14000f3b1:	data16 add bh,bh
   14000f3b4:	(bad)  
   14000f3b5:	(bad)  
   14000f3b6:	(bad)  
   14000f3b7:	(bad)  
   14000f3b8:	(bad)  
   14000f3b9:	(bad)  
   14000f3ba:	(bad)  
   14000f3bb:	(bad)  
   14000f3bc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000f3c2:	(bad)  
   14000f3c3:	(bad)  
   14000f3c4:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000f3ca:	(bad)  
   14000f3cb:	(bad)  
   14000f3cc:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000f3d2:	(bad)  
   14000f3d3:	(bad)  
   14000f3d4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000f3da:	(bad)  
   14000f3db:	(bad)  
   14000f3dc:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000f3e3:	push   QWORD PTR [rdi]
   14000f3e5:	mov    esp,0xbc37fffe
   14000f3ea:	(bad)  
   14000f3eb:	push   QWORD PTR [rdi]
   14000f3ed:	mov    esp,0xbc37fffe
   14000f3f2:	(bad)  
   14000f3f3:	push   QWORD PTR [rsi]
   14000f3f5:	mov    ebx,0xbb36fffe
   14000f3fa:	(bad)  
   14000f3fb:	push   QWORD PTR [rsi]
   14000f3fd:	mov    ebx,0xbb36fffe
   14000f402:	(bad)  
   14000f403:	(bad)  
   14000f404:	(bad)  
   14000f405:	and    DWORD PTR [rbx+0x474747ff],0xff
	...
   14000f423:	add    BYTE PTR [rdi+0x47],al
   14000f426:	rex.RXB dec DWORD PTR [r9-0x3500dba6]
   14000f42d:	ins    DWORD PTR es:[rdi],dx
   14000f42e:	add    bh,bh
   14000f430:	retf   0x6d
   14000f433:	dec    edx
   14000f435:	ins    DWORD PTR es:[rdi],dx
   14000f436:	add    bh,bh
   14000f438:	retf   0x6c
   14000f43b:	dec    edx
   14000f43d:	ins    BYTE PTR es:[rdi],dx
   14000f43e:	add    bh,bh
   14000f440:	retf   0x6b
   14000f443:	dec    ecx
   14000f445:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f448:	leave  
   14000f449:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f44c:	leave  
   14000f44d:	push   0x0
   14000f44f:	dec    ecx
   14000f451:	push   0x0
   14000f453:	dec    ecx
   14000f455:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000f45b:	dec    eax
   14000f45d:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000f463:	dec    eax
   14000f465:	push   0x68c8ff00
   14000f46a:	add    bh,bh
   14000f46c:	enter  0x67,0xff
   14000f470:	enter  0x67,0xff
   14000f474:	(bad)  
   14000f475:	(bad)  
   14000f476:	(bad)  
   14000f477:	(bad)  
   14000f478:	(bad)  
   14000f479:	(bad)  
   14000f47a:	(bad)  
   14000f47b:	(bad)  
   14000f47c:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000f482:	(bad)  
   14000f483:	(bad)  
   14000f484:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000f48a:	(bad)  
   14000f48b:	(bad)  
   14000f48c:	cmp    DWORD PTR [rbp-0x42c60002],edi
   14000f492:	(bad)  
   14000f493:	(bad)  
   14000f494:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000f49a:	(bad)  
   14000f49b:	(bad)  
   14000f49c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000f4a2:	(bad)  
   14000f4a3:	push   QWORD PTR [rdi]
   14000f4a5:	mov    esp,0xbc37fffe
   14000f4aa:	(bad)  
   14000f4ab:	push   QWORD PTR [rdi]
   14000f4ad:	mov    esp,0xbc37fffe
   14000f4b2:	(bad)  
   14000f4b3:	push   QWORD PTR [rdi]
   14000f4b5:	mov    esp,0xbb36fffe
   14000f4ba:	(bad)  
   14000f4bb:	push   QWORD PTR [rsi]
   14000f4bd:	mov    ebx,0xbb36fffe
   14000f4c2:	(bad)  
   14000f4c3:	(bad)  
   14000f4c4:	(bad)  
   14000f4c5:	and    DWORD PTR [rbx+0x474747ff],0xff
	...
   14000f4e3:	add    BYTE PTR [rdi+0x47],al
   14000f4e6:	rex.RXB dec DWORD PTR [r9-0x3400dba6]
   14000f4ed:	ins    DWORD PTR es:[rdi],dx
   14000f4ee:	add    bh,bh
   14000f4f0:	retf   0x6d
   14000f4f3:	dec    edx
   14000f4f5:	ins    DWORD PTR es:[rdi],dx
   14000f4f6:	add    bh,bh
   14000f4f8:	retf   0x6d
   14000f4fb:	dec    edx
   14000f4fd:	ins    BYTE PTR es:[rdi],dx
   14000f4fe:	add    bh,bh
   14000f500:	retf   0x6c
   14000f503:	dec    edx
   14000f505:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f508:	leave  
   14000f509:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f50c:	leave  
   14000f50d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f510:	leave  
   14000f511:	push   0x0
   14000f513:	dec    ecx
   14000f515:	push   0x0
   14000f517:	dec    ecx
   14000f519:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000f51f:	dec    eax
   14000f521:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000f527:	dec    eax
   14000f529:	push   0x68c8ff00
   14000f52e:	add    bh,bh
   14000f530:	enter  0x67,0xff
   14000f534:	(bad)  
   14000f535:	(bad)  
   14000f536:	(bad)  
   14000f537:	(bad)  
   14000f538:	(bad)  
   14000f539:	(bad)  
   14000f53a:	(bad)  
   14000f53b:	(bad)  
   14000f53c:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000f542:	(bad)  
   14000f543:	(bad)  
   14000f544:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000f54a:	(bad)  
   14000f54b:	(bad)  
   14000f54c:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000f552:	(bad)  
   14000f553:	(bad)  
   14000f554:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000f55a:	(bad)  
   14000f55b:	(bad)  
   14000f55c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000f562:	(bad)  
   14000f563:	(bad)  
   14000f564:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000f56b:	push   QWORD PTR [rdi]
   14000f56d:	mov    esp,0xbc37fffe
   14000f572:	(bad)  
   14000f573:	push   QWORD PTR [rdi]
   14000f575:	mov    esp,0xbc37fffe
   14000f57a:	(bad)  
   14000f57b:	push   QWORD PTR [rsi]
   14000f57d:	mov    ebx,0xbb36fffe
   14000f582:	(bad)  
   14000f583:	(bad)  
   14000f584:	(bad)  
   14000f585:	and    DWORD PTR [rbx+0x474747ff],0xff
	...
   14000f5a3:	add    BYTE PTR [rdi+0x47],al
   14000f5a6:	rex.RXB dec DWORD PTR [r9-0x3400dba5]
   14000f5ad:	outs   dx,BYTE PTR ds:[rsi]
   14000f5ae:	add    bh,bh
   14000f5b0:	retf   
   14000f5b1:	ins    DWORD PTR es:[rdi],dx
   14000f5b2:	add    bh,bh
   14000f5b4:	retf   0x6d
   14000f5b7:	dec    edx
   14000f5b9:	ins    DWORD PTR es:[rdi],dx
   14000f5ba:	add    bh,bh
   14000f5bc:	retf   0x6d
   14000f5bf:	dec    edx
   14000f5c1:	ins    BYTE PTR es:[rdi],dx
   14000f5c2:	add    bh,bh
   14000f5c4:	retf   0x6c
   14000f5c7:	dec    edx
   14000f5c9:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f5cc:	leave  
   14000f5cd:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f5d0:	leave  
   14000f5d1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f5d4:	leave  
   14000f5d5:	push   0x0
   14000f5d7:	dec    ecx
   14000f5d9:	push   0x0
   14000f5db:	dec    ecx
   14000f5dd:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000f5e3:	dec    eax
   14000f5e5:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000f5eb:	dec    eax
   14000f5ed:	push   0x68c8ff00
   14000f5f2:	add    bh,bh
   14000f5f4:	(bad)  
   14000f5f5:	(bad)  
   14000f5f6:	(bad)  
   14000f5f7:	(bad)  
   14000f5f8:	(bad)  
   14000f5f9:	(bad)  
   14000f5fa:	(bad)  
   14000f5fb:	(bad)  
   14000f5fc:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000f602:	(bad)  
   14000f603:	(bad)  
   14000f604:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000f60a:	(bad)  
   14000f60b:	(bad)  
   14000f60c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000f612:	(bad)  
   14000f613:	(bad)  
   14000f614:	cmp    DWORD PTR [rbp-0x42c60002],edi
   14000f61a:	(bad)  
   14000f61b:	(bad)  
   14000f61c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000f622:	(bad)  
   14000f623:	(bad)  
   14000f624:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000f62a:	(bad)  
   14000f62b:	push   QWORD PTR [rdi]
   14000f62d:	mov    esp,0xbc37fffe
   14000f632:	(bad)  
   14000f633:	push   QWORD PTR [rdi]
   14000f635:	mov    esp,0xbc37fffe
   14000f63a:	(bad)  
   14000f63b:	push   QWORD PTR [rdi]
   14000f63d:	mov    esp,0xbb36fffe
   14000f642:	(bad)  
   14000f643:	(bad)  
   14000f644:	(bad)  
   14000f645:	and    DWORD PTR [rbx+0x474747ff],0xff
	...
   14000f663:	add    BYTE PTR [rdi+0x47],al
   14000f666:	rex.RXB dec DWORD PTR [r9-0x3400dba5]
   14000f66d:	outs   dx,BYTE PTR ds:[rsi]
   14000f66e:	add    bh,bh
   14000f670:	retf   
   14000f671:	outs   dx,BYTE PTR ds:[rsi]
   14000f672:	add    bh,bh
   14000f674:	retf   
   14000f675:	ins    DWORD PTR es:[rdi],dx
   14000f676:	add    bh,bh
   14000f678:	retf   0x6d
   14000f67b:	dec    edx
   14000f67d:	ins    DWORD PTR es:[rdi],dx
   14000f67e:	add    bh,bh
   14000f680:	retf   0x6d
   14000f683:	dec    edx
   14000f685:	ins    BYTE PTR es:[rdi],dx
   14000f686:	add    bh,bh
   14000f688:	retf   0x6c
   14000f68b:	dec    edx
   14000f68d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f690:	leave  
   14000f691:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f694:	leave  
   14000f695:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f698:	leave  
   14000f699:	push   0x0
   14000f69b:	dec    ecx
   14000f69d:	push   0x0
   14000f69f:	dec    ecx
   14000f6a1:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000f6a7:	dec    eax
   14000f6a9:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000f6af:	dec    eax
   14000f6b1:	push   0xffffffffffffff00
   14000f6b6:	(bad)  
   14000f6b7:	(bad)  
   14000f6b8:	(bad)  
   14000f6b9:	(bad)  
   14000f6ba:	(bad)  
   14000f6bb:	(bad)  
   14000f6bc:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000f6c2:	(bad)  
   14000f6c3:	(bad)  
   14000f6c4:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000f6ca:	(bad)  
   14000f6cb:	(bad)  
   14000f6cc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000f6d2:	(bad)  
   14000f6d3:	(bad)  
   14000f6d4:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000f6da:	(bad)  
   14000f6db:	(bad)  
   14000f6dc:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000f6e2:	(bad)  
   14000f6e3:	(bad)  
   14000f6e4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000f6ea:	(bad)  
   14000f6eb:	(bad)  
   14000f6ec:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000f6f3:	push   QWORD PTR [rdi]
   14000f6f5:	mov    esp,0xbc37fffe
   14000f6fa:	(bad)  
   14000f6fb:	push   QWORD PTR [rdi]
   14000f6fd:	mov    esp,0xbc37fffe
   14000f702:	(bad)  
   14000f703:	(bad)  
   14000f704:	(bad)  
   14000f705:	and    DWORD PTR [rbx+0x474747ff],0xff
	...
   14000f723:	add    BYTE PTR [rdi+0x47],al
   14000f726:	rex.RXB dec DWORD PTR [r9-0x3400dba5]
   14000f72d:	outs   dx,DWORD PTR ds:[rsi]
   14000f72e:	add    bh,bh
   14000f730:	retf   
   14000f731:	outs   dx,BYTE PTR ds:[rsi]
   14000f732:	add    bh,bh
   14000f734:	retf   
   14000f735:	outs   dx,BYTE PTR ds:[rsi]
   14000f736:	add    bh,bh
   14000f738:	retf   
   14000f739:	ins    DWORD PTR es:[rdi],dx
   14000f73a:	add    bh,bh
   14000f73c:	retf   0x6d
   14000f73f:	dec    edx
   14000f741:	ins    DWORD PTR es:[rdi],dx
   14000f742:	add    bh,bh
   14000f744:	retf   0x6d
   14000f747:	dec    edx
   14000f749:	ins    BYTE PTR es:[rdi],dx
   14000f74a:	add    bh,bh
   14000f74c:	retf   0x6c
   14000f74f:	dec    edx
   14000f751:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f754:	leave  
   14000f755:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f758:	leave  
   14000f759:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f75c:	leave  
   14000f75d:	push   0x0
   14000f75f:	dec    ecx
   14000f761:	push   0x0
   14000f763:	dec    ecx
   14000f765:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000f76b:	dec    eax
   14000f76d:	imul   eax,DWORD PTR [rax],0x69c8ff
   14000f773:	(bad)  
   14000f774:	(bad)  
   14000f775:	(bad)  
   14000f776:	(bad)  
   14000f777:	(bad)  
   14000f778:	(bad)  
   14000f779:	(bad)  
   14000f77a:	(bad)  
   14000f77b:	(bad)  
   14000f77c:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000f782:	(bad)  
   14000f783:	(bad)  
   14000f784:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000f78a:	(bad)  
   14000f78b:	(bad)  
   14000f78c:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14000f792:	(bad)  
   14000f793:	(bad)  
   14000f794:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000f79a:	(bad)  
   14000f79b:	(bad)  
   14000f79c:	cmp    DWORD PTR [rbp-0x42c60002],edi
   14000f7a2:	(bad)  
   14000f7a3:	(bad)  
   14000f7a4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000f7aa:	(bad)  
   14000f7ab:	(bad)  
   14000f7ac:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14000f7b2:	(bad)  
   14000f7b3:	push   QWORD PTR [rdi]
   14000f7b5:	mov    esp,0xbc37fffe
   14000f7ba:	(bad)  
   14000f7bb:	push   QWORD PTR [rdi]
   14000f7bd:	mov    esp,0xbc37fffe
   14000f7c2:	(bad)  
   14000f7c3:	(bad)  
   14000f7c4:	(bad)  
   14000f7c5:	(bad)  
   14000f7c6:	movabs ds:0xff474747ff,eax
	...
   14000f7e3:	add    BYTE PTR [rdi+0x47],al
   14000f7e6:	rex.RXB dec DWORD PTR [r9-0x3400dba5]
   14000f7ed:	outs   dx,DWORD PTR ds:[rsi]
   14000f7ee:	add    bh,bh
   14000f7f0:	retf   
   14000f7f1:	outs   dx,DWORD PTR ds:[rsi]
   14000f7f2:	add    bh,bh
   14000f7f4:	retf   
   14000f7f5:	outs   dx,BYTE PTR ds:[rsi]
   14000f7f6:	add    bh,bh
   14000f7f8:	retf   
   14000f7f9:	outs   dx,BYTE PTR ds:[rsi]
   14000f7fa:	add    bh,bh
   14000f7fc:	retf   
   14000f7fd:	ins    DWORD PTR es:[rdi],dx
   14000f7fe:	add    bh,bh
   14000f800:	retf   0x6d
   14000f803:	dec    edx
   14000f805:	ins    DWORD PTR es:[rdi],dx
   14000f806:	add    bh,bh
   14000f808:	retf   0x6d
   14000f80b:	dec    edx
   14000f80d:	ins    BYTE PTR es:[rdi],dx
   14000f80e:	add    bh,bh
   14000f810:	retf   0x6c
   14000f813:	dec    edx
   14000f815:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f818:	leave  
   14000f819:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f81c:	leave  
   14000f81d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f820:	leave  
   14000f821:	push   0x0
   14000f823:	dec    ecx
   14000f825:	push   0x0
   14000f827:	dec    ecx
   14000f829:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000f82f:	dec    eax
   14000f831:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f837:	(bad)  
   14000f838:	(bad)  
   14000f839:	(bad)  
   14000f83a:	(bad)  
   14000f83b:	(bad)  
   14000f83c:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14000f842:	(bad)  
   14000f843:	(bad)  
   14000f844:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000f84a:	(bad)  
   14000f84b:	(bad)  
   14000f84c:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000f852:	(bad)  
   14000f853:	(bad)  
   14000f854:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000f85a:	(bad)  
   14000f85b:	(bad)  
   14000f85c:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000f862:	(bad)  
   14000f863:	(bad)  
   14000f864:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000f86a:	(bad)  
   14000f86b:	(bad)  
   14000f86c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000f872:	(bad)  
   14000f873:	(bad)  
   14000f874:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000f87b:	push   QWORD PTR [rdi]
   14000f87d:	mov    esp,0xbc37fffe
   14000f882:	(bad)  
   14000f883:	(bad)  
   14000f884:	(bad)  
   14000f885:	(bad)  
   14000f886:	movabs ds:0xff474747ff,eax
	...
   14000f8a3:	add    BYTE PTR [rdi+0x47],al
   14000f8a6:	rex.RXB dec DWORD PTR [r10-0x3400dba4]
   14000f8ad:	outs   dx,DWORD PTR ds:[rsi]
   14000f8ae:	add    bh,bh
   14000f8b0:	retf   
   14000f8b1:	outs   dx,DWORD PTR ds:[rsi]
   14000f8b2:	add    bh,bh
   14000f8b4:	retf   
   14000f8b5:	outs   dx,DWORD PTR ds:[rsi]
   14000f8b6:	add    bh,bh
   14000f8b8:	retf   
   14000f8b9:	outs   dx,BYTE PTR ds:[rsi]
   14000f8ba:	add    bh,bh
   14000f8bc:	retf   
   14000f8bd:	outs   dx,BYTE PTR ds:[rsi]
   14000f8be:	add    bh,bh
   14000f8c0:	retf   
   14000f8c1:	ins    DWORD PTR es:[rdi],dx
   14000f8c2:	add    bh,bh
   14000f8c4:	retf   0x6d
   14000f8c7:	dec    edx
   14000f8c9:	ins    DWORD PTR es:[rdi],dx
   14000f8ca:	add    bh,bh
   14000f8cc:	retf   0x6d
   14000f8cf:	dec    edx
   14000f8d1:	ins    BYTE PTR es:[rdi],dx
   14000f8d2:	add    bh,bh
   14000f8d4:	retf   0x6c
   14000f8d7:	dec    edx
   14000f8d9:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f8dc:	leave  
   14000f8dd:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f8e0:	leave  
   14000f8e1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f8e4:	leave  
   14000f8e5:	push   0x0
   14000f8e7:	dec    ecx
   14000f8e9:	push   0x0
   14000f8eb:	dec    ecx
   14000f8ed:	imul   eax,DWORD PTR [rax],0x69c9ff
   14000f8f3:	(bad)  
   14000f8f4:	(bad)  
   14000f8f5:	(bad)  
   14000f8f6:	(bad)  
   14000f8f7:	(bad)  
   14000f8f8:	(bad)  
   14000f8f9:	(bad)  
   14000f8fa:	(bad)  
   14000f8fb:	(bad)  
   14000f8fc:	cmp    eax,eax
   14000f8fe:	(bad)  
   14000f8ff:	(bad)  
   14000f900:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14000f906:	(bad)  
   14000f907:	(bad)  
   14000f908:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000f90e:	(bad)  
   14000f90f:	(bad)  
   14000f910:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000f916:	(bad)  
   14000f917:	(bad)  
   14000f918:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000f91e:	(bad)  
   14000f91f:	(bad)  
   14000f920:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000f926:	(bad)  
   14000f927:	(bad)  
   14000f928:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000f92e:	(bad)  
   14000f92f:	(bad)  
   14000f930:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000f936:	(bad)  
   14000f937:	(bad)  
   14000f938:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000f93f:	push   QWORD PTR [rdi]
   14000f941:	mov    esp,0x823ffffe
   14000f946:	movabs ds:0xff474747ff,eax
	...
   14000f963:	add    BYTE PTR [rdi+0x47],al
   14000f966:	rex.RXB dec DWORD PTR [r10-0x3300dba4]
   14000f96d:	jo     0x14000f96f
   14000f96f:	dec    ebx
   14000f971:	outs   dx,DWORD PTR ds:[rsi]
   14000f972:	add    bh,bh
   14000f974:	retf   
   14000f975:	outs   dx,DWORD PTR ds:[rsi]
   14000f976:	add    bh,bh
   14000f978:	retf   
   14000f979:	outs   dx,DWORD PTR ds:[rsi]
   14000f97a:	add    bh,bh
   14000f97c:	retf   
   14000f97d:	outs   dx,BYTE PTR ds:[rsi]
   14000f97e:	add    bh,bh
   14000f980:	retf   
   14000f981:	outs   dx,BYTE PTR ds:[rsi]
   14000f982:	add    bh,bh
   14000f984:	retf   
   14000f985:	ins    DWORD PTR es:[rdi],dx
   14000f986:	add    bh,bh
   14000f988:	retf   0x6d
   14000f98b:	dec    edx
   14000f98d:	ins    DWORD PTR es:[rdi],dx
   14000f98e:	add    bh,bh
   14000f990:	retf   0x6d
   14000f993:	dec    edx
   14000f995:	ins    BYTE PTR es:[rdi],dx
   14000f996:	add    bh,bh
   14000f998:	retf   0x6c
   14000f99b:	dec    edx
   14000f99d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f9a0:	leave  
   14000f9a1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f9a4:	leave  
   14000f9a5:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f9a8:	leave  
   14000f9a9:	push   0x0
   14000f9ab:	dec    ecx
   14000f9ad:	push   0x0
   14000f9af:	dec    ecx
   14000f9b1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000f9b7:	(bad)  
   14000f9b8:	(bad)  
   14000f9b9:	(bad)  
   14000f9ba:	(bad)  
   14000f9bb:	(bad)  
   14000f9bc:	cmp    eax,eax
   14000f9be:	(bad)  
   14000f9bf:	(bad)  
   14000f9c0:	cmp    eax,eax
   14000f9c2:	(bad)  
   14000f9c3:	(bad)  
   14000f9c4:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14000f9ca:	(bad)  
   14000f9cb:	(bad)  
   14000f9cc:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000f9d2:	(bad)  
   14000f9d3:	(bad)  
   14000f9d4:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000f9da:	(bad)  
   14000f9db:	(bad)  
   14000f9dc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000f9e2:	(bad)  
   14000f9e3:	(bad)  
   14000f9e4:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000f9ea:	(bad)  
   14000f9eb:	(bad)  
   14000f9ec:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14000f9f2:	(bad)  
   14000f9f3:	(bad)  
   14000f9f4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14000f9fa:	(bad)  
   14000f9fb:	(bad)  
   14000f9fc:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14000fa03:	(bad)  
   14000fa04:	(bad)  
   14000fa05:	(bad)  
   14000fa06:	movabs ds:0xff474747ff,eax
	...
   14000fa23:	add    BYTE PTR [rdi+0x47],al
   14000fa26:	rex.RXB jmp FWORD PTR [r8+0x51]
   14000fa2a:	xor    eax,0x245c8aff
   14000fa2f:	dec    DWORD PTR [rdx-0x5500dba4]
   14000fa35:	gs adc bh,bh
   14000fa38:	mov    ebx,0xcbff096a
   14000fa3d:	outs   dx,DWORD PTR ds:[rsi]
   14000fa3e:	add    bh,bh
   14000fa40:	retf   
   14000fa41:	outs   dx,BYTE PTR ds:[rsi]
   14000fa42:	add    bh,bh
   14000fa44:	retf   
   14000fa45:	outs   dx,BYTE PTR ds:[rsi]
   14000fa46:	add    bh,bh
   14000fa48:	retf   
   14000fa49:	ins    DWORD PTR es:[rdi],dx
   14000fa4a:	add    bh,bh
   14000fa4c:	retf   0x6d
   14000fa4f:	dec    edx
   14000fa51:	ins    DWORD PTR es:[rdi],dx
   14000fa52:	add    bh,bh
   14000fa54:	retf   0x6d
   14000fa57:	dec    edx
   14000fa59:	ins    BYTE PTR es:[rdi],dx
   14000fa5a:	add    bh,bh
   14000fa5c:	retf   0x6c
   14000fa5f:	dec    edx
   14000fa61:	imul   eax,DWORD PTR [rax],0xffffffff
   14000fa64:	leave  
   14000fa65:	imul   eax,DWORD PTR [rax],0xffffffff
   14000fa68:	leave  
   14000fa69:	imul   eax,DWORD PTR [rax],0xffffffff
   14000fa6c:	leave  
   14000fa6d:	push   0x0
   14000fa6f:	dec    ecx
   14000fa71:	push   0x0
   14000fa73:	(bad)  
   14000fa74:	(bad)  
   14000fa75:	(bad)  
   14000fa76:	(bad)  
   14000fa77:	(bad)  
   14000fa78:	(bad)  
   14000fa79:	(bad)  
   14000fa7a:	(bad)  
   14000fa7b:	(bad)  
   14000fa7c:	cmp    eax,eax
   14000fa7e:	(bad)  
   14000fa7f:	(bad)  
   14000fa80:	cmp    eax,eax
   14000fa82:	(bad)  
   14000fa83:	(bad)  
   14000fa84:	cmp    eax,eax
   14000fa86:	(bad)  
   14000fa87:	(bad)  
   14000fa88:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14000fa8e:	(bad)  
   14000fa8f:	(bad)  
   14000fa90:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000fa96:	(bad)  
   14000fa97:	(bad)  
   14000fa98:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000fa9e:	(bad)  
   14000fa9f:	(bad)  
   14000faa0:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14000faa6:	(bad)  
   14000faa7:	(bad)  
   14000faa8:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14000faae:	(bad)  
   14000faaf:	(bad)  
   14000fab0:	cmp    DWORD PTR [rbp-0x51c50002],edi
   14000fab6:	out    0xff,eax
   14000fab8:	cmp    al,0xa0
   14000faba:	sar    bh,1
   14000fabc:	rex (bad) 
   14000fabe:	movabs ds:0x756443ffa38240ff,eax
   14000fac7:	inc    DWORD PTR [rdi+0x47]
   14000faca:	rex.RXB inc DWORD PTR [r8]
	...
   14000fadd:	add    BYTE PTR [rax],al
   14000fadf:	add    BYTE PTR [rdi+0x47],al
   14000fae2:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000fae6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000faea:	rex.RXB inc DWORD PTR [r15+0x47]
   14000faee:	rex.RXB inc DWORD PTR [r15+0x47]
   14000faf2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000faf6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fafa:	rex.RXB dec DWORD PTR [r15+0x4a]
   14000fafe:	rex.XB push QWORD PTR [r8+0x53]
   14000fb02:	xor    edi,edi
   14000fb04:	(bad)  
   14000fb05:	pop    rdi
   14000fb06:	sbb    edi,edi
   14000fb08:	ret    
   14000fb09:	ins    BYTE PTR es:[rdi],dx
   14000fb0a:	add    al,0xff
   14000fb0c:	retf   
   14000fb0d:	ins    DWORD PTR es:[rdi],dx
   14000fb0e:	add    bh,bh
   14000fb10:	retf   0x6d
   14000fb13:	dec    edx
   14000fb15:	ins    DWORD PTR es:[rdi],dx
   14000fb16:	add    bh,bh
   14000fb18:	retf   0x6d
   14000fb1b:	dec    edx
   14000fb1d:	ins    BYTE PTR es:[rdi],dx
   14000fb1e:	add    bh,bh
   14000fb20:	retf   0x6c
   14000fb23:	dec    edx
   14000fb25:	imul   eax,DWORD PTR [rax],0xffffffff
   14000fb28:	leave  
   14000fb29:	imul   eax,DWORD PTR [rax],0xffffffff
   14000fb2c:	leave  
   14000fb2d:	imul   eax,DWORD PTR [rax],0xffffffff
   14000fb30:	leave  
   14000fb31:	push   0x0
   14000fb33:	(bad)  
   14000fb34:	(bad)  
   14000fb35:	(bad)  
   14000fb36:	(bad)  
   14000fb37:	(bad)  
   14000fb38:	(bad)  
   14000fb39:	(bad)  
   14000fb3a:	(bad)  
   14000fb3b:	(bad)  
   14000fb3c:	cmp    eax,eax
   14000fb3e:	(bad)  
   14000fb3f:	(bad)  
   14000fb40:	cmp    eax,eax
   14000fb42:	(bad)  
   14000fb43:	(bad)  
   14000fb44:	cmp    eax,eax
   14000fb46:	(bad)  
   14000fb47:	(bad)  
   14000fb48:	cmp    eax,eax
   14000fb4a:	(bad)  
   14000fb4b:	(bad)  
   14000fb4c:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14000fb52:	(bad)  
   14000fb53:	(bad)  
   14000fb54:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14000fb5a:	(bad)  
   14000fb5b:	(bad)  
   14000fb5c:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14000fb62:	(bad)  
   14000fb63:	(bad)  
   14000fb64:	cmp    dh,BYTE PTR [rdi-0x6ec1000d]
   14000fb6a:	mov    ecx,0x806c43ff
   14000fb6f:	inc    DWORD PTR [rsi+0x4e]
   14000fb72:	push   rdx
   14000fb73:	inc    DWORD PTR [rdi+0x47]
   14000fb76:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fb7a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fb7e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fb82:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fb86:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fb8a:	rex.RXB inc DWORD PTR [r8]
	...
   14000fb9d:	add    BYTE PTR [rax],al
   14000fb9f:	add    BYTE PTR [rdi+0x47],al
   14000fba2:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000fba6:	rex.RXB
   14000fba7:	rex
   14000fba8:	rex.RXB
   14000fba9:	rex.RXB
   14000fbaa:	rex.RXB
   14000fbab:	rex
   14000fbac:	rex.RXB
   14000fbad:	rex.RXB
   14000fbae:	rex.RXB
   14000fbaf:	rex
   14000fbb0:	rex.RXB
   14000fbb1:	rex.RXB
   14000fbb2:	rex.RXB push r8
   14000fbb4:	rex.RXB
   14000fbb5:	rex.RXB
   14000fbb6:	rex.RXB add BYTE PTR [r15+0x47],0x47
   14000fbbb:	scas   eax,DWORD PTR es:[rdi]
   14000fbbc:	rex.RXB
   14000fbbd:	rex.RXB
   14000fbbe:	rex.RXB out dx,eax
   14000fbc0:	rex.RXB
   14000fbc1:	rex.RXB
   14000fbc2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fbc6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fbca:	rex.RXB push QWORD PTR [r8+0x53]
   14000fbce:	xor    edi,edi
   14000fbd0:	stos   BYTE PTR es:[rdi],al
   14000fbd1:	fs adc bh,bh
   14000fbd4:	retf   0x6d
   14000fbd7:	dec    edx
   14000fbd9:	ins    DWORD PTR es:[rdi],dx
   14000fbda:	add    bh,bh
   14000fbdc:	retf   0x6d
   14000fbdf:	dec    edx
   14000fbe1:	ins    BYTE PTR es:[rdi],dx
   14000fbe2:	add    bh,bh
   14000fbe4:	retf   0x6c
   14000fbe7:	dec    edx
   14000fbe9:	imul   eax,DWORD PTR [rax],0xffffffff
   14000fbec:	leave  
   14000fbed:	imul   eax,DWORD PTR [rax],0xffffffff
   14000fbf0:	leave  
   14000fbf1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000fbf4:	(bad)  
   14000fbf5:	(bad)  
   14000fbf6:	(bad)  
   14000fbf7:	(bad)  
   14000fbf8:	(bad)  
   14000fbf9:	(bad)  
   14000fbfa:	(bad)  
   14000fbfb:	(bad)  
   14000fbfc:	cmp    al,0xc0
   14000fbfe:	(bad)  
   14000fbff:	(bad)  
   14000fc00:	cmp    eax,eax
   14000fc02:	(bad)  
   14000fc03:	(bad)  
   14000fc04:	cmp    eax,eax
   14000fc06:	(bad)  
   14000fc07:	(bad)  
   14000fc08:	cmp    eax,eax
   14000fc0a:	(bad)  
   14000fc0b:	(bad)  
   14000fc0c:	cmp    eax,eax
   14000fc0e:	(bad)  
   14000fc0f:	(bad)  
   14000fc10:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14000fc16:	(bad)  
   14000fc17:	(bad)  
   14000fc18:	cmp    bh,BYTE PTR [rdi-0x5ec20002]
   14000fc1e:	sar    bh,1
   14000fc20:	rex.XB ins BYTE PTR es:[rdi],dx
   14000fc22:	cmp    bh,0x47
   14000fc25:	rex.RXB
   14000fc26:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fc2a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fc2e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fc32:	rex.RXB out dx,eax
   14000fc34:	rex.RXB
   14000fc35:	rex.RXB
   14000fc36:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14000fc38:	rex.RXB
   14000fc39:	rex.RXB
   14000fc3a:	rex.RXB add BYTE PTR [r15+0x47],0x47
   14000fc3f:	push   rax
   14000fc40:	rex.RXB
   14000fc41:	rex.RXB
   14000fc42:	rex.RXB
   14000fc43:	rex
   14000fc44:	rex.RXB
   14000fc45:	rex.RXB
   14000fc46:	rex.RXB
   14000fc47:	rex
   14000fc48:	rex.RXB
   14000fc49:	rex.RXB
   14000fc4a:	rex.RXB
   14000fc4b:	add    BYTE PTR [rax],al
	...
   14000fc7e:	add    BYTE PTR [rax],al
   14000fc80:	rex.RXB
   14000fc81:	rex.RXB
   14000fc82:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   14000fc86:	rex.RXB pop QWORD PTR [r15+0x47]
   14000fc8a:	rex.RXB fild WORD PTR [r15+0x47]
   14000fc8e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fc92:	rex.RXB jmp FWORD PTR [r8+0x51]
   14000fc96:	xor    eax,0x1264a9ff
   14000fc9b:	dec    edx
   14000fc9d:	ins    DWORD PTR es:[rdi],dx
   14000fc9e:	add    bh,bh
   14000fca0:	retf   0x6d
   14000fca3:	dec    edx
   14000fca5:	ins    BYTE PTR es:[rdi],dx
   14000fca6:	add    bh,bh
   14000fca8:	retf   0x6c
   14000fcab:	dec    edx
   14000fcad:	imul   eax,DWORD PTR [rax],0xffffffff
   14000fcb0:	leave  
   14000fcb1:	imul   eax,DWORD PTR [rax],0xffffffff
   14000fcb4:	(bad)  
   14000fcb5:	(bad)  
   14000fcb6:	(bad)  
   14000fcb7:	(bad)  
   14000fcb8:	(bad)  
   14000fcb9:	(bad)  
   14000fcba:	(bad)  
   14000fcbb:	(bad)  
   14000fcbc:	cmp    al,0xc0
   14000fcbe:	(bad)  
   14000fcbf:	(bad)  
   14000fcc0:	cmp    al,0xc0
   14000fcc2:	(bad)  
   14000fcc3:	(bad)  
   14000fcc4:	cmp    eax,eax
   14000fcc6:	(bad)  
   14000fcc7:	(bad)  
   14000fcc8:	cmp    eax,eax
   14000fcca:	(bad)  
   14000fccb:	(bad)  
   14000fccc:	cmp    eax,eax
   14000fcce:	(bad)  
   14000fccf:	(bad)  
   14000fcd0:	cmp    eax,eax
   14000fcd2:	(bad)  
   14000fcd3:	(bad)  
   14000fcd4:	movabs eax,ds:0x4747ff756544ffd0
   14000fcde:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fce2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fce6:	rex.RXB fild WORD PTR [r15+0x47]
   14000fcea:	rex.RXB pop QWORD PTR [r15+0x47]
   14000fcee:	rex.RXB xor BYTE PTR [r8],r8b
	...
   14000fd49:	add    BYTE PTR [rax],al
   14000fd4b:	add    BYTE PTR [rdi+0x47],al
   14000fd4e:	rex.RXB
   14000fd4f:	rex
   14000fd50:	rex.RXB
   14000fd51:	rex.RXB
   14000fd52:	rex.RXB mov r15d,0xff474747
   14000fd58:	rex.RXB
   14000fd59:	rex.RXB
   14000fd5a:	rex.RXB inc DWORD PTR [r8-0x3d00d7a8]
   14000fd61:	imul   eax,DWORD PTR [rdi+rdi*8],0xffffffca
   14000fd65:	ins    DWORD PTR es:[rdi],dx
   14000fd66:	add    bh,bh
   14000fd68:	retf   0x6c
   14000fd6b:	dec    edx
   14000fd6d:	ins    BYTE PTR es:[rdi],dx
   14000fd6e:	add    bh,bh
   14000fd70:	retf   0x6b
   14000fd73:	(bad)  
   14000fd74:	(bad)  
   14000fd75:	(bad)  
   14000fd76:	(bad)  
   14000fd77:	(bad)  
   14000fd78:	(bad)  
   14000fd79:	(bad)  
   14000fd7a:	(bad)  
   14000fd7b:	(bad)  
   14000fd7c:	cmp    al,0xc1
   14000fd7e:	(bad)  
   14000fd7f:	(bad)  
   14000fd80:	cmp    al,0xc0
   14000fd82:	(bad)  
   14000fd83:	(bad)  
   14000fd84:	cmp    al,0xc0
   14000fd86:	(bad)  
   14000fd87:	(bad)  
   14000fd88:	cmp    eax,eax
   14000fd8a:	(bad)  
   14000fd8b:	(bad)  
   14000fd8c:	cmp    al,0xb8
   14000fd8e:	repz inc DWORD PTR [rdx+0x7c]
   14000fd92:	xchg   edi,eax
   14000fd93:	inc    DWORD PTR [rdi+0x47]
   14000fd96:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fd9a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fd9e:	rex.RXB mov r15d,0x40474747
	...
   14000fe14:	rex.RXB
   14000fe15:	rex.RXB
   14000fe16:	rex.RXB push r8
   14000fe18:	rex.RXB
   14000fe19:	rex.RXB
   14000fe1a:	rex.RXB out dx,eax
   14000fe1c:	rex.RXB
   14000fe1d:	rex.RXB
   14000fe1e:	rex.RXB dec DWORD PTR [r15+0x49]
   14000fe22:	rex.XB dec DWORD PTR [r9-0x4500dba6]
   14000fe29:	push   0x6ccaff09
   14000fe2e:	add    bh,bh
   14000fe30:	retf   0x6c
   14000fe33:	(bad)  
   14000fe34:	(bad)  
   14000fe35:	(bad)  
   14000fe36:	(bad)  
   14000fe37:	(bad)  
   14000fe38:	(bad)  
   14000fe39:	(bad)  
   14000fe3a:	(bad)  
   14000fe3b:	(bad)  
   14000fe3c:	cmp    al,0xc1
   14000fe3e:	(bad)  
   14000fe3f:	(bad)  
   14000fe40:	cmp    al,0xc1
   14000fe42:	(bad)  
   14000fe43:	(bad)  
   14000fe44:	cmp    eax,0x41ffe7b1
   14000fe49:	test   BYTE PTR [rbx+0x524f46ff],ah
   14000fe4f:	inc    DWORD PTR [rdi+0x47]
   14000fe52:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fe56:	rex.RXB fild WORD PTR [r15+0x47]
   14000fe5a:	rex.RXB push r8
	...
   14000fed8:	rex.RXB
   14000fed9:	rex.RXB
   14000feda:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000fede:	rex.RXB pop QWORD PTR [r15+0x47]
   14000fee2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000fee6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000feea:	rex.RXB call QWORD PTR [r15+0x4c]
   14000feee:	jmp    FWORD PTR ds:[rax+0x50]
   14000fef2:	xor    eax,0x757575ff
   14000fef7:	push   QWORD PTR [rbp+0x75]
   14000fefa:	jne    0x14000fefb
   14000fefc:	rex.R
   14000fefd:	data16 jne 0x14000feff
   14000ff00:	rex.RX push rsi
   14000ff02:	pop    rsi
   14000ff03:	inc    DWORD PTR [rdi+0x47]
   14000ff06:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ff0a:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ff0e:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ff12:	rex.RXB pop QWORD PTR [r15+0x47]
   14000ff16:	rex.RXB adc BYTE PTR [r8],r8b
	...
   14000ff9d:	add    BYTE PTR [rax],al
   14000ff9f:	add    BYTE PTR [rdi+0x47],al
   14000ffa2:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14000ffa6:	rex.RXB jo 0x14000fff0
   14000ffa9:	rex.RXB
   14000ffaa:	rex.RXB mov r15d,0xef474747
   14000ffb0:	rex.RXB
   14000ffb1:	rex.RXB
   14000ffb2:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ffb6:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ffba:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ffbe:	rex.RXB inc DWORD PTR [r15+0x47]
   14000ffc2:	rex.RXB out dx,eax
   14000ffc4:	rex.RXB
   14000ffc5:	rex.RXB
   14000ffc6:	rex.RXB mov r15d,0x70474747
   14000ffcc:	rex.RXB
   14000ffcd:	rex.RXB
   14000ffce:	rex.RXB adc BYTE PTR [r8],r8b
	...
   1400100d5:	add    BYTE PTR [rax],al
   1400100d7:	add    bh,bh
   1400100d9:	(bad)  
   1400100da:	(bad)  
   1400100db:	(bad)  
   1400100dc:	(bad)  
   1400100dd:	inc    DWORD PTR [rax]
   1400100df:	add    bh,bh
   1400100e1:	(bad)  
   1400100e2:	(bad)  
   1400100e3:	jg     0x1400100e4
   1400100e5:	inc    DWORD PTR [rax]
   1400100e7:	add    bh,bh
   1400100e9:	(bad)  
   1400100ea:	clc    
   1400100eb:	(bad)  
   1400100ec:	(bad)  
   1400100ed:	inc    DWORD PTR [rdi-0x1]
   1400100f0:	(bad)  
   1400100f1:	jmp    rax
   1400100f3:	(bad)  
   1400100f4:	(bad)  
   1400100f5:	inc    DWORD PTR [rax]
   1400100f7:	(bad)  
   1400100f8:	(bad)  
   1400100f9:	inc    eax
   1400100fb:	add    edi,edi
   1400100fd:	inc    DWORD PTR [rax]
   1400100ff:	(bad)  
   140010100:	(bad)  
   140010101:	inc    DWORD PTR [rax+0xffff01]
   140010107:	(bad)  
   140010108:	(bad)  
   140010109:	inc    BYTE PTR [rax]
   14001010b:	add    BYTE PTR [rdi-0x1],bh
   14001010e:	add    bh,bh
   140010110:	(bad)  
   140010111:	cld    
   140010112:	add    BYTE PTR [rax],al
   140010114:	(bad)  
   140010115:	inc    DWORD PTR [rax]
   140010117:	(bad)  
   140010118:	(bad)  
   140010119:	clc    
   14001011a:	add    BYTE PTR [rax],al
   14001011c:	(bad)  
   14001011d:	inc    DWORD PTR [rax]
   14001011f:	(bad)  
   140010120:	push   rax
   140010122:	add    BYTE PTR [rax],al
   140010124:	ud0    eax,DWORD PTR [rax]
   140010127:	(bad)  
   140010128:	jmp    rax
   14001012a:	add    BYTE PTR [rax],al
   14001012c:	(bad)  
   14001012d:	inc    DWORD PTR [rax]
   14001012f:	(bad)  
   140010130:	inc    eax
   140010132:	add    BYTE PTR [rax],al
   140010134:	add    edi,edi
   140010136:	add    bh,bh
   140010138:	inc    DWORD PTR [rax-0xff0000]
   14001013e:	add    bh,bh
   140010140:	inc    DWORD PTR [rax]
   140010142:	add    BYTE PTR [rax],al
   140010144:	add    bh,bh
   140010146:	add    bh,bh
   140010148:	inc    DWORD PTR [rax]
   14001014a:	add    BYTE PTR [rax],al
   14001014c:	add    bh,bh
   14001014e:	add    bh,bh
   140010150:	inc    BYTE PTR [rax]
   140010152:	add    BYTE PTR [rax],al
   140010154:	add    BYTE PTR [rdi-0x1],bh
   140010157:	(bad)  
   140010158:	cld    
   140010159:	add    BYTE PTR [rax],al
   14001015b:	add    BYTE PTR [rax],al
   14001015d:	(bad)  
   14001015e:	(bad)  
   14001015f:	(bad)  
   140010160:	cld    
   140010161:	add    BYTE PTR [rax],al
   140010163:	add    BYTE PTR [rax],al
   140010165:	(bad)  
   140010166:	(bad)  
   140010167:	(bad)  
   140010168:	clc    
   140010169:	add    BYTE PTR [rax],al
   14001016b:	add    BYTE PTR [rax],al
   14001016d:	(bad)  
   14001016e:	(bad)  
   14001016f:	(bad)  
   140010170:	clc    
   140010171:	add    BYTE PTR [rax],al
   140010173:	add    BYTE PTR [rax],al
   140010175:	(bad)  
   140010176:	(bad)  
   140010177:	push   rax
   140010179:	add    BYTE PTR [rax],al
   14001017b:	add    BYTE PTR [rax],al
   14001017d:	paddd  mm7,mm7
   140010180:	lock add BYTE PTR [rax],al
   140010183:	add    BYTE PTR [rax],al
   140010185:	paddd  mm7,mm7
   140010188:	lock add BYTE PTR [rax],al
   14001018b:	add    BYTE PTR [rax],al
   14001018d:	paddd  mm7,mm7
   140010190:	loopne 0x140010192
   140010192:	add    BYTE PTR [rax],al
   140010194:	add    BYTE PTR [rdi],al
   140010196:	(bad)  
   140010197:	jmp    rax
   140010199:	add    BYTE PTR [rax],al
   14001019b:	add    BYTE PTR [rax],al
   14001019d:	(bad)  
   14001019e:	(bad)  
   14001019f:	jmp    rax
   1400101a1:	add    BYTE PTR [rax],al
   1400101a3:	add    BYTE PTR [rax],al
   1400101a5:	(bad)  
   1400101a6:	(bad)  
   1400101a7:	jmp    rax
   1400101a9:	add    BYTE PTR [rax],al
   1400101ab:	add    BYTE PTR [rax],al
   1400101ad:	(bad)  
   1400101ae:	(bad)  
   1400101af:	jmp    rax
   1400101b1:	add    BYTE PTR [rax],al
   1400101b3:	add    BYTE PTR [rax],al
   1400101b5:	(bad)  
   1400101b6:	(bad)  
   1400101b7:	jmp    rax
   1400101b9:	add    BYTE PTR [rax],al
   1400101bb:	add    BYTE PTR [rax],al
   1400101bd:	(bad)  
   1400101be:	sar    bh,1
   1400101c0:	loopne 0x1400101c2
   1400101c2:	add    BYTE PTR [rax],al
   1400101c4:	add    BYTE PTR [rdi],al
   1400101c6:	rex.RXB jmp r8
   1400101c9:	add    BYTE PTR [rax],al
   1400101cb:	add    BYTE PTR [rax],al
   1400101cd:	(bad)  
   1400101ce:	add    BYTE PTR [rax],al
   1400101d0:	loopne 0x1400101d2
   1400101d2:	add    BYTE PTR [rax],al
   1400101d4:	add    BYTE PTR [rdi],al
   1400101d6:	add    BYTE PTR [rax],al
   1400101d8:	loopne 0x1400101da
   1400101da:	add    BYTE PTR [rax],al
   1400101dc:	add    BYTE PTR [rdi],al
   1400101de:	add    BYTE PTR [rax],al
   1400101e0:	loopne 0x1400101e2
   1400101e2:	add    BYTE PTR [rax],al
   1400101e4:	add    BYTE PTR [rdi],al
   1400101e6:	add    BYTE PTR [rax],al
   1400101e8:	loopne 0x1400101ea
   1400101ea:	add    BYTE PTR [rax],al
   1400101ec:	add    BYTE PTR [rdi],al
   1400101ee:	rex.RXB jmp r8
   1400101f1:	add    BYTE PTR [rax],al
   1400101f3:	add    BYTE PTR [rax],al
   1400101f5:	(bad)  
   1400101f6:	add    bh,bh
   1400101f8:	loopne 0x1400101fa
   1400101fa:	add    BYTE PTR [rax],al
   1400101fc:	add    BYTE PTR [rdi],al
   1400101fe:	add    bh,bh
   140010200:	loopne 0x140010202
   140010202:	add    BYTE PTR [rax],al
   140010204:	add    BYTE PTR [rdi],al
   140010206:	add    bh,bh
   140010208:	loopne 0x14001020a
   14001020a:	add    BYTE PTR [rax],al
   14001020c:	add    BYTE PTR [rdi],al
   14001020e:	add    bh,bh
   140010210:	loopne 0x140010212
   140010212:	add    BYTE PTR [rax],al
   140010214:	add    BYTE PTR [rdi],al
   140010216:	add    bh,bh
   140010218:	rol    BYTE PTR [rax],0x0
   14001021b:	add    BYTE PTR [rax],al
   14001021d:	(bad)  
   14001021e:	add    bh,bh
   140010220:	rol    BYTE PTR [rax],0x0
   140010223:	add    BYTE PTR [rax],al
   140010225:	(bad)  
   140010226:	add    bh,bh
   140010228:	inc    eax
   14001022a:	add    BYTE PTR [rax],al
   14001022c:	add    edi,edi
   14001022e:	add    bh,bh
   140010230:	(bad)  
   140010231:	clc    
   140010232:	add    BYTE PTR [rax],al
   140010234:	(bad)  
   140010235:	inc    DWORD PTR [rax]
   140010237:	(bad)  
   140010238:	(bad)  
   140010239:	inc    BYTE PTR [rax]
   14001023b:	add    BYTE PTR [rdi-0x1],bh
   14001023e:	add    bh,bh
   140010240:	(bad)  
   140010241:	inc    DWORD PTR [rax]
   140010243:	add    bh,bh
   140010245:	inc    DWORD PTR [rax]
   140010247:	(bad)  
   140010248:	(bad)  
   140010249:	inc    eax
   14001024b:	add    edi,edi
   14001024d:	inc    DWORD PTR [rax]
   14001024f:	(bad)  
   140010250:	(bad)  
   140010251:	(bad)  
   140010252:	(bad)  
   140010253:	(bad)  
   140010254:	(bad)  
   140010255:	(bad)  
   140010256:	(bad)  
   140010257:	jmp    FWORD PTR [rax]
   140010259:	add    BYTE PTR [rax],al
   14001025b:	add    BYTE PTR [rax],ch
   14001025d:	add    BYTE PTR [rax],al
   14001025f:	add    BYTE PTR [rax+0x0],dl
   140010262:	add    BYTE PTR [rax],al
   140010264:	add    DWORD PTR [rax],eax
   140010266:	and    BYTE PTR [rax],al
	...
   140010368:	rex.RXB
   140010369:	rex.RXB
   14001036a:	rex.RXB push r8
   14001036c:	rex.RXB
   14001036d:	rex.RXB
   14001036e:	rex.RXB fild WORD PTR [r15+0x47]
   140010372:	rex.RXB fild WORD PTR [r15+0x47]
   140010376:	rex.RXB push r8
	...
   140010400:	rex.RXB
   140010401:	rex.RXB
   140010402:	rex.RXB and BYTE PTR [r15+0x47],r8b
   140010406:	rex.RXB mov r15d,0xff474747
   14001040c:	mov    WORD PTR [rsp+rcx*4-0x73737301],cs
   140010413:	inc    DWORD PTR [rdi+0x47]
   140010416:	rex.RXB inc DWORD PTR [r15+0x47]
   14001041a:	rex.RXB mov r15d,0x20474747
	...
   14001049c:	rex.RXB
   14001049d:	rex.RXB
   14001049e:	rex.RXB (bad) 
   1400104a0:	rex.RXB
   1400104a1:	rex.RXB
   1400104a2:	rex.RXB out dx,eax
   1400104a4:	rex.RB push r13
   1400104a6:	pop    rsi
   1400104a7:	(bad)  
   1400104a8:	cmp    DWORD PTR [rbp-0x30],ebx
   1400104ae:	(bad)  
   1400104af:	(bad)  
   1400104b0:	(bad)  
   1400104b1:	(bad)  
   1400104b2:	(bad)  
   1400104b3:	jmp    QWORD PTR [rdi+rdx*2+0x4a57ff12]
   1400104ba:	inc    DWORD PTR ds:[rdi+0x47]
   1400104be:	rex.RXB out dx,eax
   1400104c0:	rex.RXB
   1400104c1:	rex.RXB
   1400104c2:	rex.RXB (bad) 
	...
   140010534:	rex.RXB
   140010535:	rex.RXB
   140010536:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14001053a:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14001053c:	rex.RXB
   14001053d:	rex.RXB
   14001053e:	rex.RXB (bad) 
   140010540:	(bad)  
   140010541:	jns    0x1400104da
   140010543:	push   QWORD PTR [rsi]
   140010545:	mov    bl,0xf3
   140010547:	push   QWORD PTR [rip+0xfffffffffffffeba]        # 0x140010407
   14001054d:	(bad)  
   14001054e:	(bad)  
   14001054f:	(bad)  
   140010550:	(bad)  
   140010551:	(bad)  
   140010552:	(bad)  
   140010553:	inc    ebx
   140010555:	pop    rsp
   140010556:	add    bh,bh
   140010558:	mov    ebx,0x7dff045b
   14001055d:	push   rax
   14001055e:	sub    bh,bh
   140010560:	rex.RXB
   140010561:	rex.RXB
   140010562:	rex.RXB inc DWORD PTR [r15+0x47]
   140010566:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140010568:	rex.RXB
   140010569:	rex.RXB
   14001056a:	rex.RXB adc BYTE PTR [r8],r8b
	...
   1400105cd:	add    BYTE PTR [rax],al
   1400105cf:	add    BYTE PTR [rdi+0x47],al
   1400105d2:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   1400105d6:	rex.RXB iret 
   1400105d8:	rex.RX
   1400105d9:	rex.WRX push rdx
   1400105db:	(bad)  
   1400105dc:	cmp    bl,BYTE PTR [rsi-0x44c90030]
   1400105e2:	(bad)  
   1400105e3:	push   QWORD PTR [rip+0x35fffeba]        # 0x1760104a3
   1400105e9:	mov    edx,0xfffffffe
   1400105ee:	(bad)  
   1400105ef:	(bad)  
   1400105f0:	(bad)  
   1400105f1:	(bad)  
   1400105f2:	(bad)  
   1400105f3:	inc    ebx
   1400105f5:	pop    rbp
   1400105f6:	add    bh,bh
   1400105f8:	ret    
   1400105f9:	pop    rsp
   1400105fa:	add    bh,bh
   1400105fc:	ret    
   1400105fd:	pop    rsp
   1400105fe:	add    bh,bh
   140010600:	movabs ds:0x47ff43484fff1256,eax
   140010609:	rex.RXB
   14001060a:	rex.RXB iret 
   14001060c:	rex.RXB
   14001060d:	rex.RXB
   14001060e:	rex.RXB xor BYTE PTR [r8],r8b
	...
   140010669:	add    BYTE PTR [rax],al
   14001066b:	add    BYTE PTR [rdi+0x47],al
   14001066e:	rex.RXB
   14001066f:	rex
   140010670:	rex.RXB
   140010671:	rex.RXB
   140010672:	rex.RXB out dx,eax
   140010674:	rex.R pop rbp
   140010676:	imul   edi,edi,0xfff3b437
   14001067c:	ss mov ebx,0xbb36fffe
   140010682:	(bad)  
   140010683:	push   QWORD PTR [rsi]
   140010685:	mov    ebx,0xba35fffe
   14001068a:	(bad)  
   14001068b:	(bad)  
   14001068c:	(bad)  
   14001068d:	(bad)  
   14001068e:	(bad)  
   14001068f:	(bad)  
   140010690:	(bad)  
   140010691:	(bad)  
   140010692:	(bad)  
   140010693:	inc    ebx
   140010695:	pop    rbp
   140010696:	add    bh,bh
   140010698:	ret    
   140010699:	pop    rbp
   14001069a:	add    bh,bh
   14001069c:	ret    
   14001069d:	pop    rsp
   14001069e:	add    bh,bh
   1400106a0:	ret    
   1400106a1:	pop    rsp
   1400106a2:	add    bh,bh
   1400106a4:	mov    ebx,0x5eff045a
   1400106a9:	rex.WXB cmp dil,r15b
   1400106ac:	rex.RXB
   1400106ad:	rex.RXB
   1400106ae:	rex.RXB out dx,eax
   1400106b0:	rex.RXB
   1400106b1:	rex.RXB
   1400106b2:	rex.RXB
   1400106b3:	add    BYTE PTR [rax],al
	...
   140010706:	add    BYTE PTR [rax],al
   140010708:	rex.RXB
   140010709:	rex.RXB
   14001070a:	rex.RXB (bad) 
   14001070c:	rex.RXB
   14001070d:	rex.RXB
   14001070e:	rex.RXB inc DWORD PTR [r9+0x73]
   140010712:	mov    edi,?
   140010714:	(bad)  
   140010715:	mov    esp,0xbc37fffe
   14001071a:	(bad)  
   14001071b:	push   QWORD PTR [rsi]
   14001071d:	mov    ebx,0xbb36fffe
   140010722:	(bad)  
   140010723:	push   QWORD PTR [rsi]
   140010725:	mov    ebx,0xbb36fffe
   14001072a:	(bad)  
   14001072b:	(bad)  
   14001072c:	(bad)  
   14001072d:	(bad)  
   14001072e:	(bad)  
   14001072f:	(bad)  
   140010730:	(bad)  
   140010731:	(bad)  
   140010732:	(bad)  
   140010733:	inc    ebx
   140010735:	pop    rsi
   140010736:	add    bh,bh
   140010738:	ret    
   140010739:	pop    rbp
   14001073a:	add    bh,bh
   14001073c:	ret    
   14001073d:	pop    rbp
   14001073e:	add    bh,bh
   140010740:	ret    
   140010741:	pop    rsp
   140010742:	add    bh,bh
   140010744:	ret    
   140010745:	pop    rsp
   140010746:	add    bh,bh
   140010748:	ret    0x5b
   14001074b:	push   QWORD PTR [rbp+0x4f]
   14001074e:	sub    al,0xff
   140010750:	rex.RXB
   140010751:	rex.RXB
   140010752:	rex.RXB inc DWORD PTR [r15+0x47]
   140010756:	rex.RXB (bad) 
	...
   1400107a4:	rex.RXB
   1400107a5:	rex.RXB
   1400107a6:	rex.RXB (bad) 
   1400107a8:	rex.RXB
   1400107a9:	rex.RXB
   1400107aa:	rex.RXB inc DWORD PTR [r9+0x73]
   1400107ae:	mov    edi,?
   1400107b0:	(bad)  
   1400107b1:	mov    esp,0xbc37fffe
   1400107b6:	(bad)  
   1400107b7:	push   QWORD PTR [rdi]
   1400107b9:	mov    esp,0xbc37fffe
   1400107be:	(bad)  
   1400107bf:	push   QWORD PTR [rsi]
   1400107c1:	mov    ebx,0xbb36fffe
   1400107c6:	(bad)  
   1400107c7:	push   QWORD PTR [rsi]
   1400107c9:	mov    ebx,0xfffffffe
   1400107ce:	(bad)  
   1400107cf:	(bad)  
   1400107d0:	(bad)  
   1400107d1:	(bad)  
   1400107d2:	(bad)  
   1400107d3:	inc    esp
   1400107d5:	pop    rsi
   1400107d6:	add    bh,bh
   1400107d8:	ret    
   1400107d9:	pop    rsi
   1400107da:	add    bh,bh
   1400107dc:	ret    
   1400107dd:	pop    rbp
   1400107de:	add    bh,bh
   1400107e0:	ret    
   1400107e1:	pop    rbp
   1400107e2:	add    bh,bh
   1400107e4:	ret    
   1400107e5:	pop    rsp
   1400107e6:	add    bh,bh
   1400107e8:	ret    
   1400107e9:	pop    rsp
   1400107ea:	add    bh,bh
   1400107ec:	ret    0x5b
   1400107ef:	push   QWORD PTR [rbp+0x4f]
   1400107f2:	sub    al,0xff
   1400107f4:	rex.RXB
   1400107f5:	rex.RXB
   1400107f6:	rex.RXB inc DWORD PTR [r15+0x47]
   1400107fa:	rex.RXB (bad) 
	...
   140010840:	rex.RXB
   140010841:	rex.RXB
   140010842:	rex.RXB (bad) 
   140010844:	rex.RXB
   140010845:	rex.RXB
   140010846:	rex.RXB inc DWORD PTR [r9+0x73]
   14001084a:	mov    edi,?
   14001084c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   140010852:	(bad)  
   140010853:	push   QWORD PTR [rdi]
   140010855:	mov    esp,0xbc37fffe
   14001085a:	(bad)  
   14001085b:	push   QWORD PTR [rdi]
   14001085d:	mov    esp,0xbc37fffe
   140010862:	(bad)  
   140010863:	push   QWORD PTR [rsi]
   140010865:	mov    ebx,0xbb36fffe
   14001086a:	(bad)  
   14001086b:	(bad)  
   14001086c:	(bad)  
   14001086d:	(bad)  
   14001086e:	(bad)  
   14001086f:	(bad)  
   140010870:	(bad)  
   140010871:	(bad)  
   140010872:	(bad)  
   140010873:	inc    esp
   140010875:	pop    rsi
   140010876:	add    bh,bh
   140010878:	(bad)  
   140010879:	pop    rsi
   14001087a:	add    bh,bh
   14001087c:	ret    
   14001087d:	pop    rsi
   14001087e:	add    bh,bh
   140010880:	ret    
   140010881:	pop    rbp
   140010882:	add    bh,bh
   140010884:	ret    
   140010885:	pop    rbp
   140010886:	add    bh,bh
   140010888:	ret    
   140010889:	pop    rsp
   14001088a:	add    bh,bh
   14001088c:	ret    
   14001088d:	pop    rsp
   14001088e:	add    bh,bh
   140010890:	ret    0x5b
   140010893:	push   QWORD PTR [rbp+0x4f]
   140010896:	sub    al,0xff
   140010898:	rex.RXB
   140010899:	rex.RXB
   14001089a:	rex.RXB inc DWORD PTR [r15+0x47]
   14001089e:	rex.RXB (bad) 
	...
   1400108dc:	rex.RXB
   1400108dd:	rex.RXB
   1400108de:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   1400108e2:	rex.RXB inc DWORD PTR [r10+0x73]
   1400108e6:	mov    edi,?
   1400108e8:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400108ee:	(bad)  
   1400108ef:	(bad)  
   1400108f0:	cmp    BYTE PTR [rbp-0x43c70002],bh
   1400108f6:	(bad)  
   1400108f7:	push   QWORD PTR [rdi]
   1400108f9:	mov    esp,0xbc37fffe
   1400108fe:	(bad)  
   1400108ff:	push   QWORD PTR [rdi]
   140010901:	mov    esp,0xbc37fffe
   140010906:	(bad)  
   140010907:	push   QWORD PTR [rsi]
   140010909:	mov    ebx,0xfffffffe
   14001090e:	(bad)  
   14001090f:	(bad)  
   140010910:	(bad)  
   140010911:	(bad)  
   140010912:	(bad)  
   140010913:	inc    esp
   140010915:	pop    rdi
   140010916:	add    bh,bh
   140010918:	(bad)  
   140010919:	pop    rsi
   14001091a:	add    bh,bh
   14001091c:	(bad)  
   14001091d:	pop    rsi
   14001091e:	add    bh,bh
   140010920:	ret    
   140010921:	pop    rsi
   140010922:	add    bh,bh
   140010924:	ret    
   140010925:	pop    rbp
   140010926:	add    bh,bh
   140010928:	ret    
   140010929:	pop    rbp
   14001092a:	add    bh,bh
   14001092c:	ret    
   14001092d:	pop    rsp
   14001092e:	add    bh,bh
   140010930:	ret    
   140010931:	pop    rsp
   140010932:	add    bh,bh
   140010934:	ret    0x5b
   140010937:	push   QWORD PTR [rbp+0x4f]
   14001093a:	sub    al,0xff
   14001093c:	rex.RXB
   14001093d:	rex.RXB
   14001093e:	rex.RXB inc DWORD PTR [r15+0x47]
   140010942:	rex.RXB xor BYTE PTR [r8],r8b
	...
   140010975:	add    BYTE PTR [rax],al
   140010977:	add    BYTE PTR [rdi+0x47],al
   14001097a:	rex.RXB and BYTE PTR [r15+0x47],r8b
   14001097e:	rex.RXB out dx,eax
   140010980:	rex.XB ins BYTE PTR es:[rdi],dx
   140010982:	cmp    bh,0x39
   140010985:	mov    esi,0xbd39fffe
   14001098a:	(bad)  
   14001098b:	(bad)  
   14001098c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140010992:	(bad)  
   140010993:	(bad)  
   140010994:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14001099a:	(bad)  
   14001099b:	push   QWORD PTR [rdi]
   14001099d:	mov    esp,0xbc37fffe
   1400109a2:	(bad)  
   1400109a3:	push   QWORD PTR [rdi]
   1400109a5:	mov    esp,0xbc37fffe
   1400109aa:	(bad)  
   1400109ab:	(bad)  
   1400109ac:	(bad)  
   1400109ad:	(bad)  
   1400109ae:	(bad)  
   1400109af:	(bad)  
   1400109b0:	(bad)  
   1400109b1:	(bad)  
   1400109b2:	(bad)  
   1400109b3:	inc    esp
   1400109b5:	pop    rdi
   1400109b6:	add    bh,bh
   1400109b8:	(bad)  
   1400109b9:	pop    rdi
   1400109ba:	add    bh,bh
   1400109bc:	(bad)  
   1400109bd:	pop    rsi
   1400109be:	add    bh,bh
   1400109c0:	(bad)  
   1400109c1:	pop    rsi
   1400109c2:	add    bh,bh
   1400109c4:	ret    
   1400109c5:	pop    rsi
   1400109c6:	add    bh,bh
   1400109c8:	ret    
   1400109c9:	pop    rbp
   1400109ca:	add    bh,bh
   1400109cc:	ret    
   1400109cd:	pop    rbp
   1400109ce:	add    bh,bh
   1400109d0:	ret    
   1400109d1:	pop    rsp
   1400109d2:	add    bh,bh
   1400109d4:	ret    
   1400109d5:	pop    rsp
   1400109d6:	add    bh,bh
   1400109d8:	ret    0x5b
   1400109db:	jmp    FWORD PTR [rbp+0x4d]
   1400109de:	xor    edi,edi
   1400109e0:	rex.RXB
   1400109e1:	rex.RXB
   1400109e2:	rex.RXB out dx,eax
   1400109e4:	rex.RXB
   1400109e5:	rex.RXB
   1400109e6:	rex.RXB and BYTE PTR [r8],r8b
	...
   140010a15:	add    BYTE PTR [rax],al
   140010a17:	add    BYTE PTR [rdi+0x47],al
   140010a1a:	rex.RXB iret 
   140010a1c:	rex.RB pop r13
   140010a1e:	imul   edi,edi,0xfff3b73a
   140010a24:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140010a2a:	(bad)  
   140010a2b:	(bad)  
   140010a2c:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140010a32:	(bad)  
   140010a33:	(bad)  
   140010a34:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140010a3a:	(bad)  
   140010a3b:	(bad)  
   140010a3c:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   140010a43:	push   QWORD PTR [rdi]
   140010a45:	mov    esp,0xbc37fffe
   140010a4a:	(bad)  
   140010a4b:	(bad)  
   140010a4c:	(bad)  
   140010a4d:	(bad)  
   140010a4e:	(bad)  
   140010a4f:	(bad)  
   140010a50:	(bad)  
   140010a51:	(bad)  
   140010a52:	(bad)  
   140010a53:	inc    esp
   140010a55:	(bad)  
   140010a56:	add    bh,bh
   140010a58:	(bad)  
   140010a59:	pop    rdi
   140010a5a:	add    bh,bh
   140010a5c:	(bad)  
   140010a5d:	pop    rdi
   140010a5e:	add    bh,bh
   140010a60:	(bad)  
   140010a61:	pop    rsi
   140010a62:	add    bh,bh
   140010a64:	(bad)  
   140010a65:	pop    rsi
   140010a66:	add    bh,bh
   140010a68:	ret    
   140010a69:	pop    rsi
   140010a6a:	add    bh,bh
   140010a6c:	ret    
   140010a6d:	pop    rbp
   140010a6e:	add    bh,bh
   140010a70:	ret    
   140010a71:	pop    rbp
   140010a72:	add    bh,bh
   140010a74:	ret    
   140010a75:	pop    rsp
   140010a76:	add    bh,bh
   140010a78:	ret    
   140010a79:	pop    rsp
   140010a7a:	add    bh,bh
   140010a7c:	mov    ebx,0x5eff045a
   140010a81:	rex.WXB cmp dil,r15b
   140010a84:	rex.RXB
   140010a85:	rex.RXB
   140010a86:	rex.RXB iret 
	...
   140010ab4:	rex.RXB
   140010ab5:	rex.RXB
   140010ab6:	rex.RXB add BYTE PTR [r15+0x47],0x47
   140010abb:	(bad)  
   140010abc:	cmp    al,0xa8
   140010abe:	fdiv   st(7),st
   140010ac0:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140010ac6:	(bad)  
   140010ac7:	(bad)  
   140010ac8:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140010ace:	(bad)  
   140010acf:	(bad)  
   140010ad0:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140010ad6:	(bad)  
   140010ad7:	(bad)  
   140010ad8:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140010ade:	(bad)  
   140010adf:	(bad)  
   140010ae0:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   140010ae7:	push   QWORD PTR [rdi]
   140010ae9:	mov    esp,0xfffffffe
   140010aee:	(bad)  
   140010aef:	(bad)  
   140010af0:	(bad)  
   140010af1:	(bad)  
   140010af2:	(bad)  
   140010af3:	inc    ebp
   140010af5:	(bad)  
   140010af6:	add    bh,bh
   140010af8:	(bad)  
   140010af9:	(bad)  
   140010afa:	add    bh,bh
   140010afc:	(bad)  
   140010afd:	pop    rdi
   140010afe:	add    bh,bh
   140010b00:	(bad)  
   140010b01:	pop    rdi
   140010b02:	add    bh,bh
   140010b04:	(bad)  
   140010b05:	pop    rsi
   140010b06:	add    bh,bh
   140010b08:	(bad)  
   140010b09:	pop    rsi
   140010b0a:	add    bh,bh
   140010b0c:	ret    
   140010b0d:	pop    rsi
   140010b0e:	add    bh,bh
   140010b10:	ret    
   140010b11:	pop    rbp
   140010b12:	add    bh,bh
   140010b14:	ret    
   140010b15:	pop    rbp
   140010b16:	add    bh,bh
   140010b18:	ret    
   140010b19:	pop    rsp
   140010b1a:	add    bh,bh
   140010b1c:	ret    
   140010b1d:	pop    rsp
   140010b1e:	add    bh,bh
   140010b20:	stos   DWORD PTR es:[rdi],eax
   140010b21:	push   rdi
   140010b22:	or     eax,0x474747ff
   140010b27:	inc    DWORD PTR [rdi+0x47]
   140010b2a:	rex.RXB add BYTE PTR [r8],0x0
	...
   140010b4e:	add    BYTE PTR [rax],al
   140010b50:	rex.RXB
   140010b51:	rex.RXB
   140010b52:	rex.RXB and BYTE PTR [r15+0x47],r8b
   140010b56:	rex.RXB out dx,eax
   140010b58:	and    DWORD PTR [r11-0x140c501],0xffffffff
   140010b60:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   140010b66:	(bad)  
   140010b67:	(bad)  
   140010b68:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140010b6e:	(bad)  
   140010b6f:	(bad)  
   140010b70:	cmp    DWORD PTR [rsi-0x42c60002],edi
   140010b76:	(bad)  
   140010b77:	(bad)  
   140010b78:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140010b7e:	(bad)  
   140010b7f:	(bad)  
   140010b80:	cmp    BYTE PTR [rbp-0x43c70002],bh
   140010b86:	(bad)  
   140010b87:	push   QWORD PTR [rdi]
   140010b89:	mov    esp,0xfffffffe
   140010b8e:	(bad)  
   140010b8f:	(bad)  
   140010b90:	(bad)  
   140010b91:	(bad)  
   140010b92:	(bad)  
   140010b93:	inc    ebp
   140010b95:	(bad)  
   140010b96:	add    bh,bh
   140010b98:	(bad)
   140010b9b:	inc    esp
   140010b9d:	(bad)  
   140010b9e:	add    bh,bh
   140010ba0:	(bad)  
   140010ba1:	pop    rdi
   140010ba2:	add    bh,bh
   140010ba4:	(bad)  
   140010ba5:	pop    rdi
   140010ba6:	add    bh,bh
   140010ba8:	(bad)  
   140010ba9:	pop    rsi
   140010baa:	add    bh,bh
   140010bac:	(bad)  
   140010bad:	pop    rsi
   140010bae:	add    bh,bh
   140010bb0:	ret    
   140010bb1:	pop    rsi
   140010bb2:	add    bh,bh
   140010bb4:	ret    
   140010bb5:	pop    rbp
   140010bb6:	add    bh,bh
   140010bb8:	ret    
   140010bb9:	pop    rbp
   140010bba:	add    bh,bh
   140010bbc:	ret    
   140010bbd:	pop    rsp
   140010bbe:	add    bh,bh
   140010bc0:	ret    
   140010bc1:	pop    rsp
   140010bc2:	add    bh,bh
   140010bc4:	test   DWORD PTR [rcx+0x24],edx
   140010bc7:	inc    DWORD PTR [rdi+0x47]
   140010bca:	rex.RXB out dx,eax
   140010bcc:	rex.RXB
   140010bcd:	rex.RXB
   140010bce:	rex.RXB and BYTE PTR [r8],r8b
	...
   140010bed:	add    BYTE PTR [rax],al
   140010bef:	add    BYTE PTR [rdi+0x47],al
   140010bf2:	rex.RXB lahf 
   140010bf4:	rex.RX push rsi
   140010bf6:	pop    rsi
   140010bf7:	(bad)  
   140010bf8:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   140010bfe:	(bad)  
   140010bff:	(bad)  
   140010c00:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140010c06:	(bad)  
   140010c07:	(bad)  
   140010c08:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140010c0e:	(bad)  
   140010c0f:	(bad)  
   140010c10:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140010c16:	(bad)  
   140010c17:	(bad)  
   140010c18:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140010c1e:	(bad)  
   140010c1f:	(bad)  
   140010c20:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140010c26:	(bad)  
   140010c27:	(bad)  
   140010c28:	cmp    BYTE PTR [rsi+rdi*8-0x1],bh
   140010c2f:	(bad)  
   140010c30:	(bad)  
   140010c31:	(bad)  
   140010c32:	(bad)  
   140010c33:	inc    ebp
   140010c35:	(bad)  
   140010c36:	add    bh,bh
   140010c38:	(bad)
   140010c3b:	inc    ebp
   140010c3d:	(bad)  
   140010c3e:	add    bh,bh
   140010c40:	(bad)  
   140010c41:	(bad)  
   140010c42:	add    bh,bh
   140010c44:	(bad)  
   140010c45:	pop    rdi
   140010c46:	add    bh,bh
   140010c48:	(bad)  
   140010c49:	pop    rdi
   140010c4a:	add    bh,bh
   140010c4c:	(bad)  
   140010c4d:	pop    rsi
   140010c4e:	add    bh,bh
   140010c50:	(bad)  
   140010c51:	pop    rsi
   140010c52:	add    bh,bh
   140010c54:	ret    
   140010c55:	pop    rsi
   140010c56:	add    bh,bh
   140010c58:	ret    
   140010c59:	pop    rbp
   140010c5a:	add    bh,bh
   140010c5c:	ret    
   140010c5d:	pop    rbp
   140010c5e:	add    bh,bh
   140010c60:	ret    
   140010c61:	pop    rsp
   140010c62:	add    bh,bh
   140010c64:	ret    
   140010c65:	pop    rsp
   140010c66:	add    bh,bh
   140010c68:	push   rdi
   140010c69:	rex.WX
   140010c6a:	inc    DWORD PTR ds:[rdi+0x47]
   140010c6e:	rex.RXB lahf 
	...
   140010c8c:	rex.RXB
   140010c8d:	rex.RXB
   140010c8e:	rex.RXB and BYTE PTR [r15+0x47],r8b
   140010c92:	rex.RXB inc DWORD PTR [r8-0x6d]
   140010c96:	mov    ecx,0xfec03bff
   140010c9b:	(bad)  
   140010c9c:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   140010ca2:	(bad)  
   140010ca3:	(bad)  
   140010ca4:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140010caa:	(bad)  
   140010cab:	(bad)  
   140010cac:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140010cb2:	(bad)  
   140010cb3:	(bad)  
   140010cb4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140010cba:	(bad)  
   140010cbb:	(bad)  
   140010cbc:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140010cc2:	(bad)  
   140010cc3:	(bad)  
   140010cc4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140010cca:	(bad)  
   140010ccb:	(bad)  
   140010ccc:	(bad)  
   140010ccd:	(bad)  
   140010cce:	(bad)  
   140010ccf:	(bad)  
   140010cd0:	(bad)  
   140010cd1:	(bad)  
   140010cd2:	(bad)  
   140010cd3:	inc    ebp
   140010cd5:	(bad)  
   140010cd6:	add    bh,bh
   140010cd8:	(bad)
   140010cdb:	inc    ebp
   140010cdd:	(bad)  
   140010cde:	add    bh,bh
   140010ce0:	(bad)
   140010ce3:	inc    esp
   140010ce5:	(bad)  
   140010ce6:	add    bh,bh
   140010ce8:	(bad)  
   140010ce9:	pop    rdi
   140010cea:	add    bh,bh
   140010cec:	(bad)  
   140010ced:	pop    rdi
   140010cee:	add    bh,bh
   140010cf0:	(bad)  
   140010cf1:	pop    rsi
   140010cf2:	add    bh,bh
   140010cf4:	(bad)  
   140010cf5:	pop    rsi
   140010cf6:	add    bh,bh
   140010cf8:	ret    
   140010cf9:	pop    rsi
   140010cfa:	add    bh,bh
   140010cfc:	ret    
   140010cfd:	pop    rbp
   140010cfe:	add    bh,bh
   140010d00:	ret    
   140010d01:	pop    rbp
   140010d02:	add    bh,bh
   140010d04:	ret    
   140010d05:	pop    rsp
   140010d06:	add    bh,bh
   140010d08:	xchg   ebp,eax
   140010d09:	push   rsp
   140010d0a:	sbb    edi,edi
   140010d0c:	rex.RXB
   140010d0d:	rex.RXB
   140010d0e:	rex.RXB inc DWORD PTR [r15+0x47]
   140010d12:	rex.RXB and BYTE PTR [r8],r8b
	...
   140010d29:	add    BYTE PTR [rax],al
   140010d2b:	add    BYTE PTR [rdi+0x47],al
   140010d2e:	rex.RXB lahf 
   140010d30:	rex.RX push rsi
   140010d32:	pop    rsi
   140010d33:	(bad)  
   140010d34:	cmp    eax,eax
   140010d36:	(bad)  
   140010d37:	(bad)  
   140010d38:	cmp    eax,eax
   140010d3a:	(bad)  
   140010d3b:	(bad)  
   140010d3c:	cmp    eax,eax
   140010d3e:	(bad)  
   140010d3f:	(bad)  
   140010d40:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   140010d46:	(bad)  
   140010d47:	(bad)  
   140010d48:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140010d4e:	(bad)  
   140010d4f:	(bad)  
   140010d50:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140010d56:	(bad)  
   140010d57:	(bad)  
   140010d58:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140010d5e:	(bad)  
   140010d5f:	(bad)  
   140010d60:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140010d66:	(bad)  
   140010d67:	(bad)  
   140010d68:	cmp    BYTE PTR [rbp-0x2],bh
   140010d6e:	(bad)  
   140010d6f:	(bad)  
   140010d70:	(bad)  
   140010d71:	(bad)  
   140010d72:	(bad)  
   140010d73:	inc    ebp
   140010d75:	(bad)  
   140010d76:	add    bh,bh
   140010d78:	(bad)
   140010d7b:	inc    ebp
   140010d7d:	(bad)  
   140010d7e:	add    bh,bh
   140010d80:	(bad)
   140010d83:	inc    ebp
   140010d85:	(bad)  
   140010d86:	add    bh,bh
   140010d88:	(bad)  
   140010d89:	(bad)  
   140010d8a:	add    bh,bh
   140010d8c:	(bad)  
   140010d8d:	pop    rdi
   140010d8e:	add    bh,bh
   140010d90:	(bad)  
   140010d91:	pop    rdi
   140010d92:	add    bh,bh
   140010d94:	(bad)  
   140010d95:	pop    rsi
   140010d96:	add    bh,bh
   140010d98:	(bad)  
   140010d99:	pop    rsi
   140010d9a:	add    bh,bh
   140010d9c:	ret    
   140010d9d:	pop    rsi
   140010d9e:	add    bh,bh
   140010da0:	ret    
   140010da1:	pop    rbp
   140010da2:	add    bh,bh
   140010da4:	ret    
   140010da5:	pop    rbp
   140010da6:	add    bh,bh
   140010da8:	ret    
   140010da9:	pop    rsp
   140010daa:	add    bh,bh
   140010dac:	push   rdi
   140010dad:	rex.WX
   140010dae:	inc    DWORD PTR ds:[rdi+0x47]
   140010db2:	rex.RXB lahf 
	...
   140010dcc:	rex.RXB
   140010dcd:	rex.RXB
   140010dce:	rex.RXB out dx,eax
   140010dd0:	rex xchg ebx,eax
   140010dd2:	mov    ecx,0xfec03cff
   140010dd7:	(bad)  
   140010dd8:	cmp    eax,eax
   140010dda:	(bad)  
   140010ddb:	(bad)  
   140010ddc:	cmp    eax,eax
   140010dde:	(bad)  
   140010ddf:	(bad)  
   140010de0:	cmp    eax,eax
   140010de2:	(bad)  
   140010de3:	(bad)  
   140010de4:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   140010dea:	(bad)  
   140010deb:	(bad)  
   140010dec:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140010df2:	(bad)  
   140010df3:	(bad)  
   140010df4:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140010dfa:	(bad)  
   140010dfb:	(bad)  
   140010dfc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140010e02:	(bad)  
   140010e03:	(bad)  
   140010e04:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140010e0a:	(bad)  
   140010e0b:	(bad)  
   140010e0c:	(bad)  
   140010e0d:	(bad)  
   140010e0e:	(bad)  
   140010e0f:	(bad)  
   140010e10:	(bad)  
   140010e11:	(bad)  
   140010e12:	(bad)  
   140010e13:	inc    esi
   140010e15:	(bad)  
   140010e16:	add    bh,bh
   140010e18:	(bad)
   140010e1b:	inc    ebp
   140010e1d:	(bad)  
   140010e1e:	add    bh,bh
   140010e20:	(bad)
   140010e23:	inc    ebp
   140010e25:	(bad)  
   140010e26:	add    bh,bh
   140010e28:	(bad)
   140010e2b:	inc    esp
   140010e2d:	(bad)  
   140010e2e:	add    bh,bh
   140010e30:	(bad)  
   140010e31:	pop    rdi
   140010e32:	add    bh,bh
   140010e34:	(bad)  
   140010e35:	pop    rdi
   140010e36:	add    bh,bh
   140010e38:	(bad)  
   140010e39:	pop    rsi
   140010e3a:	add    bh,bh
   140010e3c:	(bad)  
   140010e3d:	pop    rsi
   140010e3e:	add    bh,bh
   140010e40:	ret    
   140010e41:	pop    rsi
   140010e42:	add    bh,bh
   140010e44:	ret    
   140010e45:	pop    rbp
   140010e46:	add    bh,bh
   140010e48:	ret    
   140010e49:	pop    rbp
   140010e4a:	add    bh,bh
   140010e4c:	xchg   ebp,eax
   140010e4d:	push   rsp
   140010e4e:	sbb    edi,edi
   140010e50:	rex.RXB
   140010e51:	rex.RXB
   140010e52:	rex.RXB out dx,eax
	...
   140010e68:	rex.RXB
   140010e69:	rex.RXB
   140010e6a:	rex.RXB push r8
   140010e6c:	rex.RXB
   140010e6d:	rex.RXB
   140010e6e:	rex.RXB push r12
   140010e71:	hlt    
   140010e72:	hlt    
   140010e73:	(bad)  
   140010e74:	(bad)  
   140010e75:	(bad)  
   140010e76:	(bad)  
   140010e77:	(bad)  
   140010e78:	(bad)  
   140010e79:	(bad)  
   140010e7a:	(bad)  
   140010e7b:	(bad)  
   140010e7c:	(bad)  
   140010e7d:	(bad)  
   140010e7e:	(bad)  
   140010e7f:	(bad)  
   140010e80:	(bad)  
   140010e81:	(bad)  
   140010e82:	(bad)  
   140010e83:	(bad)  
   140010e84:	(bad)  
   140010e85:	(bad)  
   140010e86:	(bad)  
   140010e87:	(bad)  
   140010e88:	(bad)  
   140010e89:	(bad)  
   140010e8a:	(bad)  
   140010e8b:	(bad)  
   140010e8c:	(bad)  
   140010e8d:	(bad)  
   140010e8e:	(bad)  
   140010e8f:	(bad)  
   140010e90:	(bad)  
   140010e91:	(bad)  
   140010e92:	(bad)  
   140010e93:	(bad)  
   140010e94:	(bad)  
   140010e95:	(bad)  
   140010e96:	(bad)  
   140010e97:	(bad)  
   140010e98:	(bad)  
   140010e99:	(bad)  
   140010e9a:	(bad)  
   140010e9b:	(bad)  
   140010e9c:	(bad)  
   140010e9d:	(bad)  
   140010e9e:	(bad)  
   140010e9f:	(bad)  
   140010ea0:	(bad)  
   140010ea1:	(bad)  
   140010ea2:	(bad)  
   140010ea3:	(bad)  
   140010ea4:	(bad)  
   140010ea5:	(bad)  
   140010ea6:	(bad)  
   140010ea7:	(bad)  
   140010ea8:	(bad)  
   140010ea9:	(bad)  
   140010eaa:	(bad)  
   140010eab:	(bad)  
   140010eac:	(bad)  
   140010ead:	(bad)  
   140010eae:	(bad)  
   140010eaf:	(bad)  
   140010eb0:	(bad)  
   140010eb1:	(bad)  
   140010eb2:	(bad)  
   140010eb3:	(bad)  
   140010eb4:	(bad)  
   140010eb5:	(bad)  
   140010eb6:	(bad)  
   140010eb7:	(bad)  
   140010eb8:	(bad)  
   140010eb9:	(bad)  
   140010eba:	(bad)  
   140010ebb:	(bad)  
   140010ebc:	(bad)  
   140010ebd:	(bad)  
   140010ebe:	(bad)  
   140010ebf:	(bad)  
   140010ec0:	(bad)  
   140010ec1:	(bad)  
   140010ec2:	(bad)  
   140010ec3:	(bad)  
   140010ec4:	(bad)  
   140010ec5:	(bad)  
   140010ec6:	(bad)  
   140010ec7:	(bad)  
   140010ec8:	(bad)  
   140010ec9:	(bad)  
   140010eca:	(bad)  
   140010ecb:	(bad)  
   140010ecc:	(bad)  
   140010ecd:	(bad)  
   140010ece:	(bad)  
   140010ecf:	(bad)  
   140010ed0:	(bad)  
   140010ed1:	(bad)  
   140010ed2:	(bad)  
   140010ed3:	(bad)  
   140010ed4:	(bad)  
   140010ed5:	(bad)  
   140010ed6:	(bad)  
   140010ed7:	(bad)  
   140010ed8:	(bad)  
   140010ed9:	(bad)  
   140010eda:	(bad)  
   140010edb:	(bad)  
   140010edc:	(bad)  
   140010edd:	(bad)  
   140010ede:	(bad)  
   140010edf:	(bad)  
   140010ee0:	(bad)  
   140010ee1:	(bad)  
   140010ee2:	(bad)  
   140010ee3:	(bad)  
   140010ee4:	(bad)  
   140010ee5:	(bad)  
   140010ee6:	(bad)  
   140010ee7:	(bad)  
   140010ee8:	(bad)  
   140010ee9:	(bad)  
   140010eea:	(bad)  
   140010eeb:	push   rsp
   140010eed:	hlt    
   140010eee:	hlt    
   140010eef:	inc    DWORD PTR [rdi+0x47]
   140010ef2:	rex.RXB inc DWORD PTR [r15+0x47]
   140010ef6:	rex.RXB push r8
	...
   140010f08:	rex.RXB
   140010f09:	rex.RXB
   140010f0a:	(bad)
   140010f0f:	(bad)  
   140010f10:	(bad)  
   140010f11:	(bad)  
   140010f12:	(bad)  
   140010f13:	(bad)  
   140010f14:	(bad)  
   140010f15:	(bad)  
   140010f16:	(bad)  
   140010f17:	(bad)  
   140010f18:	(bad)  
   140010f19:	(bad)  
   140010f1a:	(bad)  
   140010f1b:	(bad)  
   140010f1c:	(bad)  
   140010f1d:	(bad)  
   140010f1e:	(bad)  
   140010f1f:	(bad)  
   140010f20:	(bad)  
   140010f21:	(bad)  
   140010f22:	(bad)  
   140010f23:	(bad)  
   140010f24:	(bad)  
   140010f25:	(bad)  
   140010f26:	(bad)  
   140010f27:	(bad)  
   140010f28:	(bad)  
   140010f29:	(bad)  
   140010f2a:	(bad)  
   140010f2b:	(bad)  
   140010f2c:	(bad)  
   140010f2d:	(bad)  
   140010f2e:	(bad)  
   140010f2f:	(bad)  
   140010f30:	(bad)  
   140010f31:	(bad)  
   140010f32:	(bad)  
   140010f33:	(bad)  
   140010f34:	(bad)  
   140010f35:	(bad)  
   140010f36:	(bad)  
   140010f37:	(bad)  
   140010f38:	(bad)  
   140010f39:	(bad)  
   140010f3a:	(bad)  
   140010f3b:	(bad)  
   140010f3c:	(bad)  
   140010f3d:	(bad)  
   140010f3e:	(bad)  
   140010f3f:	(bad)  
   140010f40:	(bad)  
   140010f41:	(bad)  
   140010f42:	(bad)  
   140010f43:	(bad)  
   140010f44:	(bad)  
   140010f45:	(bad)  
   140010f46:	(bad)  
   140010f47:	(bad)  
   140010f48:	(bad)  
   140010f49:	(bad)  
   140010f4a:	(bad)  
   140010f4b:	(bad)  
   140010f4c:	(bad)  
   140010f4d:	(bad)  
   140010f4e:	(bad)  
   140010f4f:	(bad)  
   140010f50:	(bad)  
   140010f51:	(bad)  
   140010f52:	(bad)  
   140010f53:	(bad)  
   140010f54:	(bad)  
   140010f55:	(bad)  
   140010f56:	(bad)  
   140010f57:	(bad)  
   140010f58:	(bad)  
   140010f59:	(bad)  
   140010f5a:	(bad)  
   140010f5b:	(bad)  
   140010f5c:	(bad)  
   140010f5d:	(bad)  
   140010f5e:	(bad)  
   140010f5f:	(bad)  
   140010f60:	(bad)  
   140010f61:	(bad)  
   140010f62:	(bad)  
   140010f63:	(bad)  
   140010f64:	(bad)  
   140010f65:	(bad)  
   140010f66:	(bad)  
   140010f67:	(bad)  
   140010f68:	(bad)  
   140010f69:	(bad)  
   140010f6a:	(bad)  
   140010f6b:	(bad)  
   140010f6c:	(bad)  
   140010f6d:	(bad)  
   140010f6e:	(bad)  
   140010f6f:	(bad)  
   140010f70:	(bad)  
   140010f71:	(bad)  
   140010f72:	(bad)  
   140010f73:	(bad)  
   140010f74:	(bad)  
   140010f75:	(bad)  
   140010f76:	(bad)  
   140010f77:	(bad)  
   140010f78:	(bad)  
   140010f79:	(bad)  
   140010f7a:	(bad)  
   140010f7b:	(bad)  
   140010f7c:	(bad)  
   140010f7d:	(bad)  
   140010f7e:	(bad)  
   140010f7f:	(bad)  
   140010f80:	(bad)  
   140010f81:	(bad)  
   140010f82:	(bad)  
   140010f83:	(bad)  
   140010f84:	(bad)  
   140010f85:	(bad)  
   140010f86:	(bad)  
   140010f87:	(bad)  
   140010f88:	(bad)  
   140010f89:	(bad)  
   140010f8a:	(bad)  
   140010f8b:	(bad)  
   140010f8c:	(bad)  
   140010f8d:	(bad)  
   140010f8e:	(bad)  
   140010f8f:	inc    DWORD PTR [rdx+0x64]
   140010f92:	jne    0x140010f93
   140010f94:	rex.RXB
   140010f95:	rex.RXB
   140010f96:	rex.RXB pop QWORD PTR [r8]
	...
   140010fa5:	add    BYTE PTR [rax],al
   140010fa7:	add    BYTE PTR [rdi+0x47],al
   140010faa:	rex.RXB iret 
   140010fac:	mov    DWORD PTR [rcx+0x24],ebx
   140010faf:	dec    ecx
   140010fb1:	imul   eax,DWORD PTR [rax],0xffffffff
   140010fb4:	leave  
   140010fb5:	imul   eax,DWORD PTR [rax],0xffffffff
   140010fb8:	leave  
   140010fb9:	push   0x0
   140010fbb:	dec    ecx
   140010fbd:	push   0x0
   140010fbf:	dec    ecx
   140010fc1:	imul   eax,DWORD PTR [rax],0x69c9ff
   140010fc7:	dec    eax
   140010fc9:	imul   eax,DWORD PTR [rax],0x68c8ff
   140010fcf:	dec    eax
   140010fd1:	push   0x67c8ff00
   140010fd6:	add    bh,bh
   140010fd8:	enter  0x67,0xff
   140010fdc:	(bad)  
   140010fdd:	data16 add bh,bh
   140010fe0:	(bad)  
   140010fe1:	data16 add bh,bh
   140010fe4:	(bad)  
   140010fe5:	gs add bh,bh
   140010fe8:	(bad)  
   140010fe9:	gs add bh,bh
   140010fec:	(bad)  
   140010fed:	(bad)  
   140010fee:	(bad)  
   140010fef:	(bad)  
   140010ff0:	(bad)  
   140010ff1:	(bad)  
   140010ff2:	(bad)  
   140010ff3:	(bad)  
   140010ff4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140010ffa:	(bad)  
   140010ffb:	(bad)  
   140010ffc:	cmp    BYTE PTR [rbp-0x43c70002],bh
   140011002:	(bad)  
   140011003:	push   QWORD PTR [rdi]
   140011005:	mov    esp,0xbc37fffe
   14001100a:	(bad)  
   14001100b:	push   QWORD PTR [rdi]
   14001100d:	mov    esp,0xbc37fffe
   140011012:	(bad)  
   140011013:	push   QWORD PTR [rsi]
   140011015:	mov    ebx,0xbb36fffe
   14001101a:	(bad)  
   14001101b:	push   QWORD PTR [rsi]
   14001101d:	mov    ebx,0xbb36fffe
   140011022:	(bad)  
   140011023:	push   QWORD PTR [rip+0x35fffeba]        # 0x176010ee3
   140011029:	mov    edx,0xba35fffe
   14001102e:	(bad)  
   14001102f:	(bad)  
   140011030:	and    DWORD PTR ds:[rbx+0x474747ff],0xbf
	...
   140011047:	add    BYTE PTR [rdi+0x47],al
   14001104a:	rex.RXB jmp QWORD PTR [r9-0x3500e9a0]
   140011051:	imul   eax,DWORD PTR [rax],0xffffffff
   140011054:	leave  
   140011055:	imul   eax,DWORD PTR [rax],0xffffffff
   140011058:	leave  
   140011059:	imul   eax,DWORD PTR [rax],0xffffffff
   14001105c:	leave  
   14001105d:	push   0x0
   14001105f:	dec    ecx
   140011061:	push   0x0
   140011063:	dec    ecx
   140011065:	imul   eax,DWORD PTR [rax],0x69c9ff
   14001106b:	dec    eax
   14001106d:	imul   eax,DWORD PTR [rax],0x68c8ff
   140011073:	dec    eax
   140011075:	push   0x67c8ff00
   14001107a:	add    bh,bh
   14001107c:	enter  0x67,0xff
   140011080:	(bad)  
   140011081:	data16 add bh,bh
   140011084:	(bad)  
   140011085:	data16 add bh,bh
   140011088:	(bad)  
   140011089:	gs add bh,bh
   14001108c:	(bad)  
   14001108d:	(bad)  
   14001108e:	(bad)  
   14001108f:	(bad)  
   140011090:	(bad)  
   140011091:	(bad)  
   140011092:	(bad)  
   140011093:	(bad)  
   140011094:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14001109a:	(bad)  
   14001109b:	(bad)  
   14001109c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400110a2:	(bad)  
   1400110a3:	(bad)  
   1400110a4:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   1400110ab:	push   QWORD PTR [rdi]
   1400110ad:	mov    esp,0xbc37fffe
   1400110b2:	(bad)  
   1400110b3:	push   QWORD PTR [rdi]
   1400110b5:	mov    esp,0xbb36fffe
   1400110ba:	(bad)  
   1400110bb:	push   QWORD PTR [rsi]
   1400110bd:	mov    ebx,0xbb36fffe
   1400110c2:	(bad)  
   1400110c3:	push   QWORD PTR [rsi]
   1400110c5:	mov    ebx,0xba35fffe
   1400110ca:	(bad)  
   1400110cb:	push   QWORD PTR [rip+0x3bfffeba]        # 0x17c010f8b
   1400110d1:	xchg   esi,eax
   1400110d2:	(bad)  
   1400110d5:	rex.RXB
   1400110d6:	rex.RXB inc DWORD PTR [r8]
	...
   1400110e5:	add    BYTE PTR [rax],al
   1400110e7:	add    BYTE PTR [rdi+0x47],al
   1400110ea:	rex.RXB jmp FWORD PTR [r9-0x3500ed9d]
   1400110f1:	ins    BYTE PTR es:[rdi],dx
   1400110f2:	add    bh,bh
   1400110f4:	retf   0x6b
   1400110f7:	dec    ecx
   1400110f9:	imul   eax,DWORD PTR [rax],0xffffffff
   1400110fc:	leave  
   1400110fd:	imul   eax,DWORD PTR [rax],0xffffffff
   140011100:	leave  
   140011101:	push   0x0
   140011103:	dec    ecx
   140011105:	push   0x0
   140011107:	dec    ecx
   140011109:	imul   eax,DWORD PTR [rax],0x69c9ff
   14001110f:	dec    eax
   140011111:	imul   eax,DWORD PTR [rax],0x68c8ff
   140011117:	dec    eax
   140011119:	push   0x67c8ff00
   14001111e:	add    bh,bh
   140011120:	enter  0x67,0xff
   140011124:	(bad)  
   140011125:	data16 add bh,bh
   140011128:	(bad)  
   140011129:	data16 add bh,bh
   14001112c:	(bad)  
   14001112d:	(bad)  
   14001112e:	(bad)  
   14001112f:	(bad)  
   140011130:	(bad)  
   140011131:	(bad)  
   140011132:	(bad)  
   140011133:	(bad)  
   140011134:	cmp    DWORD PTR [rsi-0x42c60002],edi
   14001113a:	(bad)  
   14001113b:	(bad)  
   14001113c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140011142:	(bad)  
   140011143:	(bad)  
   140011144:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14001114a:	(bad)  
   14001114b:	push   QWORD PTR [rdi]
   14001114d:	mov    esp,0xbc37fffe
   140011152:	(bad)  
   140011153:	push   QWORD PTR [rdi]
   140011155:	mov    esp,0xbc37fffe
   14001115a:	(bad)  
   14001115b:	push   QWORD PTR [rsi]
   14001115d:	mov    ebx,0xbb36fffe
   140011162:	(bad)  
   140011163:	push   QWORD PTR [rsi]
   140011165:	mov    ebx,0xbb36fffe
   14001116a:	(bad)  
   14001116b:	push   QWORD PTR [rip+0x3afffeba]        # 0x17b01102b
   140011171:	popf   
   140011172:	sar    bh,1
   140011174:	rex.RXB
   140011175:	rex.RXB
   140011176:	rex.RXB inc DWORD PTR [r8]
	...
   140011185:	add    BYTE PTR [rax],al
   140011187:	add    BYTE PTR [rdi+0x47],al
   14001118a:	rex.RXB jmp FWORD PTR [r9-0x3500ed9c]
   140011191:	ins    BYTE PTR es:[rdi],dx
   140011192:	add    bh,bh
   140011194:	retf   0x6c
   140011197:	dec    edx
   140011199:	imul   eax,DWORD PTR [rax],0xffffffff
   14001119c:	leave  
   14001119d:	imul   eax,DWORD PTR [rax],0xffffffff
   1400111a0:	leave  
   1400111a1:	imul   eax,DWORD PTR [rax],0xffffffff
   1400111a4:	leave  
   1400111a5:	push   0x0
   1400111a7:	dec    ecx
   1400111a9:	push   0x0
   1400111ab:	dec    ecx
   1400111ad:	imul   eax,DWORD PTR [rax],0x69c9ff
   1400111b3:	dec    eax
   1400111b5:	imul   eax,DWORD PTR [rax],0x68c8ff
   1400111bb:	dec    eax
   1400111bd:	push   0x67c8ff00
   1400111c2:	add    bh,bh
   1400111c4:	enter  0x67,0xff
   1400111c8:	(bad)  
   1400111c9:	data16 add bh,bh
   1400111cc:	(bad)  
   1400111cd:	(bad)  
   1400111ce:	(bad)  
   1400111cf:	(bad)  
   1400111d0:	(bad)  
   1400111d1:	(bad)  
   1400111d2:	(bad)  
   1400111d3:	(bad)  
   1400111d4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   1400111da:	(bad)  
   1400111db:	(bad)  
   1400111dc:	cmp    DWORD PTR [rbp-0x42c70002],edi
   1400111e2:	(bad)  
   1400111e3:	(bad)  
   1400111e4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400111ea:	(bad)  
   1400111eb:	(bad)  
   1400111ec:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   1400111f3:	push   QWORD PTR [rdi]
   1400111f5:	mov    esp,0xbc37fffe
   1400111fa:	(bad)  
   1400111fb:	push   QWORD PTR [rdi]
   1400111fd:	mov    esp,0xbb36fffe
   140011202:	(bad)  
   140011203:	push   QWORD PTR [rsi]
   140011205:	mov    ebx,0xbb36fffe
   14001120a:	(bad)  
   14001120b:	push   QWORD PTR [rsi]
   14001120d:	mov    ebx,0x9d3afffe
   140011212:	sar    bh,1
   140011214:	rex.RXB
   140011215:	rex.RXB
   140011216:	rex.RXB inc DWORD PTR [r8]
	...
   140011225:	add    BYTE PTR [rax],al
   140011227:	add    BYTE PTR [rdi+0x47],al
   14001122a:	rex.RXB dec r10d
   14001122d:	ins    DWORD PTR es:[rdi],dx
   14001122e:	add    bh,bh
   140011230:	retf   0x6d
   140011233:	dec    edx
   140011235:	ins    BYTE PTR es:[rdi],dx
   140011236:	add    bh,bh
   140011238:	retf   0x6c
   14001123b:	dec    edx
   14001123d:	imul   eax,DWORD PTR [rax],0xffffffff
   140011240:	leave  
   140011241:	imul   eax,DWORD PTR [rax],0xffffffff
   140011244:	leave  
   140011245:	imul   eax,DWORD PTR [rax],0xffffffff
   140011248:	leave  
   140011249:	push   0x0
   14001124b:	dec    ecx
   14001124d:	push   0x0
   14001124f:	dec    ecx
   140011251:	imul   eax,DWORD PTR [rax],0x69c9ff
   140011257:	dec    eax
   140011259:	imul   eax,DWORD PTR [rax],0x68c8ff
   14001125f:	dec    eax
   140011261:	push   0x67c8ff00
   140011266:	add    bh,bh
   140011268:	enter  0x67,0xff
   14001126c:	(bad)  
   14001126d:	(bad)  
   14001126e:	(bad)  
   14001126f:	(bad)  
   140011270:	(bad)  
   140011271:	(bad)  
   140011272:	(bad)  
   140011273:	(bad)  
   140011274:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14001127a:	(bad)  
   14001127b:	(bad)  
   14001127c:	cmp    DWORD PTR [rsi-0x42c60002],edi
   140011282:	(bad)  
   140011283:	(bad)  
   140011284:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14001128a:	(bad)  
   14001128b:	(bad)  
   14001128c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   140011292:	(bad)  
   140011293:	push   QWORD PTR [rdi]
   140011295:	mov    esp,0xbc37fffe
   14001129a:	(bad)  
   14001129b:	push   QWORD PTR [rdi]
   14001129d:	mov    esp,0xbc37fffe
   1400112a2:	(bad)  
   1400112a3:	push   QWORD PTR [rsi]
   1400112a5:	mov    ebx,0xbb36fffe
   1400112aa:	(bad)  
   1400112ab:	push   QWORD PTR [rsi]
   1400112ad:	mov    ebx,0xbb36fffe
   1400112b2:	(bad)  
   1400112b3:	inc    DWORD PTR [rdi+0x47]
   1400112b6:	rex.RXB inc DWORD PTR [r8]
	...
   1400112c5:	add    BYTE PTR [rax],al
   1400112c7:	add    BYTE PTR [rdi+0x47],al
   1400112ca:	rex.RXB dec r11d
   1400112cd:	ins    DWORD PTR es:[rdi],dx
   1400112ce:	add    bh,bh
   1400112d0:	retf   0x6d
   1400112d3:	dec    edx
   1400112d5:	ins    DWORD PTR es:[rdi],dx
   1400112d6:	add    bh,bh
   1400112d8:	retf   0x6c
   1400112db:	dec    edx
   1400112dd:	ins    BYTE PTR es:[rdi],dx
   1400112de:	add    bh,bh
   1400112e0:	retf   0x6b
   1400112e3:	dec    ecx
   1400112e5:	imul   eax,DWORD PTR [rax],0xffffffff
   1400112e8:	leave  
   1400112e9:	imul   eax,DWORD PTR [rax],0xffffffff
   1400112ec:	leave  
   1400112ed:	push   0x0
   1400112ef:	dec    ecx
   1400112f1:	push   0x0
   1400112f3:	dec    ecx
   1400112f5:	imul   eax,DWORD PTR [rax],0x69c9ff
   1400112fb:	dec    eax
   1400112fd:	imul   eax,DWORD PTR [rax],0x68c8ff
   140011303:	dec    eax
   140011305:	push   0x67c8ff00
   14001130a:	add    bh,bh
   14001130c:	(bad)  
   14001130d:	(bad)  
   14001130e:	(bad)  
   14001130f:	(bad)  
   140011310:	(bad)  
   140011311:	(bad)  
   140011312:	(bad)  
   140011313:	(bad)  
   140011314:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14001131a:	(bad)  
   14001131b:	(bad)  
   14001131c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140011322:	(bad)  
   140011323:	(bad)  
   140011324:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14001132a:	(bad)  
   14001132b:	(bad)  
   14001132c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140011332:	(bad)  
   140011333:	(bad)  
   140011334:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14001133b:	push   QWORD PTR [rdi]
   14001133d:	mov    esp,0xbc37fffe
   140011342:	(bad)  
   140011343:	push   QWORD PTR [rdi]
   140011345:	mov    esp,0xbb36fffe
   14001134a:	(bad)  
   14001134b:	push   QWORD PTR [rsi]
   14001134d:	mov    ebx,0xbb36fffe
   140011352:	(bad)  
   140011353:	inc    DWORD PTR [rdi+0x47]
   140011356:	rex.RXB inc DWORD PTR [r8]
	...
   140011365:	add    BYTE PTR [rax],al
   140011367:	add    BYTE PTR [rdi+0x47],al
   14001136a:	rex.RXB dec r11d
   14001136d:	outs   dx,BYTE PTR ds:[rsi]
   14001136e:	add    bh,bh
   140011370:	retf   
   140011371:	ins    DWORD PTR es:[rdi],dx
   140011372:	add    bh,bh
   140011374:	retf   0x6d
   140011377:	dec    edx
   140011379:	ins    DWORD PTR es:[rdi],dx
   14001137a:	add    bh,bh
   14001137c:	retf   0x6c
   14001137f:	dec    edx
   140011381:	ins    BYTE PTR es:[rdi],dx
   140011382:	add    bh,bh
   140011384:	retf   0x6b
   140011387:	dec    ecx
   140011389:	imul   eax,DWORD PTR [rax],0xffffffff
   14001138c:	leave  
   14001138d:	imul   eax,DWORD PTR [rax],0xffffffff
   140011390:	leave  
   140011391:	push   0x0
   140011393:	dec    ecx
   140011395:	push   0x0
   140011397:	dec    ecx
   140011399:	imul   eax,DWORD PTR [rax],0x69c9ff
   14001139f:	dec    eax
   1400113a1:	imul   eax,DWORD PTR [rax],0x68c8ff
   1400113a7:	dec    eax
   1400113a9:	push   0xffffffffffffff00
   1400113ae:	(bad)  
   1400113af:	(bad)  
   1400113b0:	(bad)  
   1400113b1:	(bad)  
   1400113b2:	(bad)  
   1400113b3:	(bad)  
   1400113b4:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   1400113ba:	(bad)  
   1400113bb:	(bad)  
   1400113bc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   1400113c2:	(bad)  
   1400113c3:	(bad)  
   1400113c4:	cmp    DWORD PTR [rsi-0x42c60002],edi
   1400113ca:	(bad)  
   1400113cb:	(bad)  
   1400113cc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400113d2:	(bad)  
   1400113d3:	(bad)  
   1400113d4:	cmp    BYTE PTR [rbp-0x43c70002],bh
   1400113da:	(bad)  
   1400113db:	push   QWORD PTR [rdi]
   1400113dd:	mov    esp,0xbc37fffe
   1400113e2:	(bad)  
   1400113e3:	push   QWORD PTR [rdi]
   1400113e5:	mov    esp,0xbc37fffe
   1400113ea:	(bad)  
   1400113eb:	push   QWORD PTR [rsi]
   1400113ed:	mov    ebx,0xbb36fffe
   1400113f2:	(bad)  
   1400113f3:	inc    DWORD PTR [rdi+0x47]
   1400113f6:	rex.RXB inc DWORD PTR [r8]
	...
   140011405:	add    BYTE PTR [rax],al
   140011407:	add    BYTE PTR [rdi+0x47],al
   14001140a:	rex.RXB dec r11d
   14001140d:	outs   dx,BYTE PTR ds:[rsi]
   14001140e:	add    bh,bh
   140011410:	retf   
   140011411:	outs   dx,BYTE PTR ds:[rsi]
   140011412:	add    bh,bh
   140011414:	retf   
   140011415:	ins    DWORD PTR es:[rdi],dx
   140011416:	add    bh,bh
   140011418:	retf   0x6d
   14001141b:	dec    edx
   14001141d:	ins    DWORD PTR es:[rdi],dx
   14001141e:	add    bh,bh
   140011420:	retf   0x6c
   140011423:	dec    edx
   140011425:	ins    BYTE PTR es:[rdi],dx
   140011426:	add    bh,bh
   140011428:	retf   0x6b
   14001142b:	dec    ecx
   14001142d:	imul   eax,DWORD PTR [rax],0xffffffff
   140011430:	leave  
   140011431:	imul   eax,DWORD PTR [rax],0xffffffff
   140011434:	leave  
   140011435:	push   0x0
   140011437:	dec    ecx
   140011439:	push   0x0
   14001143b:	dec    ecx
   14001143d:	imul   eax,DWORD PTR [rax],0x69c9ff
   140011443:	dec    eax
   140011445:	imul   eax,DWORD PTR [rax],0x68c8ff
   14001144b:	(bad)  
   14001144c:	(bad)  
   14001144d:	(bad)  
   14001144e:	(bad)  
   14001144f:	(bad)  
   140011450:	(bad)  
   140011451:	(bad)  
   140011452:	(bad)  
   140011453:	(bad)  
   140011454:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14001145a:	(bad)  
   14001145b:	(bad)  
   14001145c:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140011462:	(bad)  
   140011463:	(bad)  
   140011464:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14001146a:	(bad)  
   14001146b:	(bad)  
   14001146c:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140011472:	(bad)  
   140011473:	(bad)  
   140011474:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14001147a:	(bad)  
   14001147b:	(bad)  
   14001147c:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   140011483:	push   QWORD PTR [rdi]
   140011485:	mov    esp,0xbc37fffe
   14001148a:	(bad)  
   14001148b:	push   QWORD PTR [rdi]
   14001148d:	mov    esp,0xbb36fffe
   140011492:	(bad)  
   140011493:	inc    DWORD PTR [rdi+0x47]
   140011496:	rex.RXB inc DWORD PTR [r8]
	...
   1400114a5:	add    BYTE PTR [rax],al
   1400114a7:	add    BYTE PTR [rdi+0x47],al
   1400114aa:	rex.RXB dec r11d
   1400114ad:	outs   dx,DWORD PTR ds:[rsi]
   1400114ae:	add    bh,bh
   1400114b0:	retf   
   1400114b1:	outs   dx,BYTE PTR ds:[rsi]
   1400114b2:	add    bh,bh
   1400114b4:	retf   
   1400114b5:	outs   dx,BYTE PTR ds:[rsi]
   1400114b6:	add    bh,bh
   1400114b8:	retf   
   1400114b9:	ins    DWORD PTR es:[rdi],dx
   1400114ba:	add    bh,bh
   1400114bc:	retf   0x6d
   1400114bf:	dec    edx
   1400114c1:	ins    DWORD PTR es:[rdi],dx
   1400114c2:	add    bh,bh
   1400114c4:	retf   0x6c
   1400114c7:	dec    edx
   1400114c9:	ins    BYTE PTR es:[rdi],dx
   1400114ca:	add    bh,bh
   1400114cc:	retf   0x6b
   1400114cf:	dec    ecx
   1400114d1:	imul   eax,DWORD PTR [rax],0xffffffff
   1400114d4:	leave  
   1400114d5:	imul   eax,DWORD PTR [rax],0xffffffff
   1400114d8:	leave  
   1400114d9:	push   0x0
   1400114db:	dec    ecx
   1400114dd:	push   0x0
   1400114df:	dec    ecx
   1400114e1:	imul   eax,DWORD PTR [rax],0x69c9ff
   1400114e7:	dec    eax
   1400114e9:	imul   eax,DWORD PTR [rax],0xffffffff
   1400114ef:	(bad)  
   1400114f0:	(bad)  
   1400114f1:	(bad)  
   1400114f2:	(bad)  
   1400114f3:	(bad)  
   1400114f4:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   1400114fa:	(bad)  
   1400114fb:	(bad)  
   1400114fc:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   140011502:	(bad)  
   140011503:	(bad)  
   140011504:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14001150a:	(bad)  
   14001150b:	(bad)  
   14001150c:	cmp    DWORD PTR [rsi-0x42c60002],edi
   140011512:	(bad)  
   140011513:	(bad)  
   140011514:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14001151a:	(bad)  
   14001151b:	(bad)  
   14001151c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   140011522:	(bad)  
   140011523:	push   QWORD PTR [rdi]
   140011525:	mov    esp,0xbc37fffe
   14001152a:	(bad)  
   14001152b:	push   QWORD PTR [rdi]
   14001152d:	mov    esp,0xbc37fffe
   140011532:	(bad)  
   140011533:	inc    DWORD PTR [rdi+0x47]
   140011536:	rex.RXB inc DWORD PTR [r8]
	...
   140011545:	add    BYTE PTR [rax],al
   140011547:	add    BYTE PTR [rdi+0x47],al
   14001154a:	rex.RXB dec r11d
   14001154d:	outs   dx,DWORD PTR ds:[rsi]
   14001154e:	add    bh,bh
   140011550:	retf   
   140011551:	outs   dx,DWORD PTR ds:[rsi]
   140011552:	add    bh,bh
   140011554:	retf   
   140011555:	outs   dx,BYTE PTR ds:[rsi]
   140011556:	add    bh,bh
   140011558:	retf   
   140011559:	outs   dx,BYTE PTR ds:[rsi]
   14001155a:	add    bh,bh
   14001155c:	retf   
   14001155d:	ins    DWORD PTR es:[rdi],dx
   14001155e:	add    bh,bh
   140011560:	retf   0x6d
   140011563:	dec    edx
   140011565:	ins    DWORD PTR es:[rdi],dx
   140011566:	add    bh,bh
   140011568:	retf   0x6c
   14001156b:	dec    edx
   14001156d:	ins    BYTE PTR es:[rdi],dx
   14001156e:	add    bh,bh
   140011570:	retf   0x6b
   140011573:	dec    ecx
   140011575:	imul   eax,DWORD PTR [rax],0xffffffff
   140011578:	leave  
   140011579:	imul   eax,DWORD PTR [rax],0xffffffff
   14001157c:	leave  
   14001157d:	push   0x0
   14001157f:	dec    ecx
   140011581:	push   0x0
   140011583:	dec    ecx
   140011585:	imul   eax,DWORD PTR [rax],0x69c9ff
   14001158b:	(bad)  
   14001158c:	(bad)  
   14001158d:	(bad)  
   14001158e:	(bad)  
   14001158f:	(bad)  
   140011590:	(bad)  
   140011591:	(bad)  
   140011592:	(bad)  
   140011593:	(bad)  
   140011594:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14001159a:	(bad)  
   14001159b:	(bad)  
   14001159c:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   1400115a2:	(bad)  
   1400115a3:	(bad)  
   1400115a4:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   1400115aa:	(bad)  
   1400115ab:	(bad)  
   1400115ac:	cmp    DWORD PTR [rsi-0x41c60002],edi
   1400115b2:	(bad)  
   1400115b3:	(bad)  
   1400115b4:	cmp    DWORD PTR [rbp-0x42c70002],edi
   1400115ba:	(bad)  
   1400115bb:	(bad)  
   1400115bc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400115c2:	(bad)  
   1400115c3:	(bad)  
   1400115c4:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   1400115cb:	push   QWORD PTR [rdi]
   1400115cd:	mov    esp,0xbc37fffe
   1400115d2:	(bad)  
   1400115d3:	inc    DWORD PTR [rdi+0x47]
   1400115d6:	rex.RXB inc DWORD PTR [r8]
	...
   1400115e5:	add    BYTE PTR [rax],al
   1400115e7:	add    BYTE PTR [rdi+0x47],al
   1400115ea:	rex.RXB dec r12d
   1400115ed:	jo     0x1400115ef
   1400115ef:	dec    ebx
   1400115f1:	outs   dx,DWORD PTR ds:[rsi]
   1400115f2:	add    bh,bh
   1400115f4:	retf   
   1400115f5:	outs   dx,DWORD PTR ds:[rsi]
   1400115f6:	add    bh,bh
   1400115f8:	retf   
   1400115f9:	outs   dx,BYTE PTR ds:[rsi]
   1400115fa:	add    bh,bh
   1400115fc:	retf   
   1400115fd:	outs   dx,BYTE PTR ds:[rsi]
   1400115fe:	add    bh,bh
   140011600:	retf   
   140011601:	ins    DWORD PTR es:[rdi],dx
   140011602:	add    bh,bh
   140011604:	retf   0x6d
   140011607:	dec    edx
   140011609:	ins    DWORD PTR es:[rdi],dx
   14001160a:	add    bh,bh
   14001160c:	retf   0x6c
   14001160f:	dec    edx
   140011611:	ins    BYTE PTR es:[rdi],dx
   140011612:	add    bh,bh
   140011614:	retf   0x6b
   140011617:	dec    ecx
   140011619:	imul   eax,DWORD PTR [rax],0xffffffff
   14001161c:	leave  
   14001161d:	imul   eax,DWORD PTR [rax],0xffffffff
   140011620:	leave  
   140011621:	push   0x0
   140011623:	dec    ecx
   140011625:	push   0x0
   140011627:	dec    ecx
   140011629:	imul   eax,DWORD PTR [rax],0xffffffff
   14001162f:	(bad)  
   140011630:	(bad)  
   140011631:	(bad)  
   140011632:	(bad)  
   140011633:	(bad)  
   140011634:	cmp    eax,eax
   140011636:	(bad)  
   140011637:	(bad)  
   140011638:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14001163e:	(bad)  
   14001163f:	(bad)  
   140011640:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140011646:	(bad)  
   140011647:	(bad)  
   140011648:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14001164e:	(bad)  
   14001164f:	(bad)  
   140011650:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140011656:	(bad)  
   140011657:	(bad)  
   140011658:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14001165e:	(bad)  
   14001165f:	(bad)  
   140011660:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140011666:	(bad)  
   140011667:	(bad)  
   140011668:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14001166f:	push   QWORD PTR [rdi]
   140011671:	mov    esp,0x4747fffe
   140011676:	rex.RXB inc DWORD PTR [r8]
	...
   140011685:	add    BYTE PTR [rax],al
   140011687:	add    BYTE PTR [rdi+0x47],al
   14001168a:	rex.RXB dec r12d
   14001168d:	jo     0x14001168f
   14001168f:	dec    esp
   140011691:	jo     0x140011693
   140011693:	dec    ebx
   140011695:	outs   dx,DWORD PTR ds:[rsi]
   140011696:	add    bh,bh
   140011698:	retf   
   140011699:	outs   dx,DWORD PTR ds:[rsi]
   14001169a:	add    bh,bh
   14001169c:	retf   
   14001169d:	outs   dx,BYTE PTR ds:[rsi]
   14001169e:	add    bh,bh
   1400116a0:	retf   
   1400116a1:	outs   dx,BYTE PTR ds:[rsi]
   1400116a2:	add    bh,bh
   1400116a4:	retf   
   1400116a5:	ins    DWORD PTR es:[rdi],dx
   1400116a6:	add    bh,bh
   1400116a8:	retf   0x6d
   1400116ab:	dec    edx
   1400116ad:	ins    DWORD PTR es:[rdi],dx
   1400116ae:	add    bh,bh
   1400116b0:	retf   0x6c
   1400116b3:	dec    edx
   1400116b5:	ins    BYTE PTR es:[rdi],dx
   1400116b6:	add    bh,bh
   1400116b8:	retf   0x6b
   1400116bb:	dec    ecx
   1400116bd:	imul   eax,DWORD PTR [rax],0xffffffff
   1400116c0:	leave  
   1400116c1:	imul   eax,DWORD PTR [rax],0xffffffff
   1400116c4:	leave  
   1400116c5:	push   0x0
   1400116c7:	dec    ecx
   1400116c9:	push   0x0
   1400116cb:	(bad)  
   1400116cc:	(bad)  
   1400116cd:	(bad)  
   1400116ce:	(bad)  
   1400116cf:	(bad)  
   1400116d0:	(bad)  
   1400116d1:	(bad)  
   1400116d2:	(bad)  
   1400116d3:	(bad)  
   1400116d4:	cmp    eax,eax
   1400116d6:	(bad)  
   1400116d7:	(bad)  
   1400116d8:	cmp    eax,eax
   1400116da:	(bad)  
   1400116db:	(bad)  
   1400116dc:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   1400116e2:	(bad)  
   1400116e3:	(bad)  
   1400116e4:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   1400116ea:	(bad)  
   1400116eb:	(bad)  
   1400116ec:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   1400116f2:	(bad)  
   1400116f3:	(bad)  
   1400116f4:	cmp    DWORD PTR [rsi-0x41c60002],edi
   1400116fa:	(bad)  
   1400116fb:	(bad)  
   1400116fc:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140011702:	(bad)  
   140011703:	(bad)  
   140011704:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14001170a:	(bad)  
   14001170b:	(bad)  
   14001170c:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   140011713:	inc    DWORD PTR [rdi+0x47]
   140011716:	rex.RXB inc DWORD PTR [r8]
	...
   140011721:	add    BYTE PTR [rax],al
   140011723:	add    BYTE PTR [rdi+0x47],al
   140011726:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14001172a:	rex.RXB inc DWORD PTR [r15+0x47]
   14001172e:	rex.RXB inc DWORD PTR [r15+0x47]
   140011732:	rex.RXB dec DWORD PTR [r15+0x4a]
   140011736:	rex.XB jmp FWORD PTR [r8+0x51]
   14001173a:	xor    eax,0x285981ff
   14001173f:	jmp    QWORD PTR [rdx-0x3c00e99e]
   140011745:	ins    BYTE PTR es:[rdi],dx
   140011746:	add    al,0xff
   140011748:	retf   
   140011749:	ins    DWORD PTR es:[rdi],dx
   14001174a:	add    bh,bh
   14001174c:	retf   0x6d
   14001174f:	dec    edx
   140011751:	ins    DWORD PTR es:[rdi],dx
   140011752:	add    bh,bh
   140011754:	retf   0x6c
   140011757:	dec    edx
   140011759:	ins    BYTE PTR es:[rdi],dx
   14001175a:	add    bh,bh
   14001175c:	retf   0x6b
   14001175f:	dec    ecx
   140011761:	imul   eax,DWORD PTR [rax],0xffffffff
   140011764:	leave  
   140011765:	imul   eax,DWORD PTR [rax],0xffffffff
   140011768:	leave  
   140011769:	push   0x0
   14001176b:	(bad)  
   14001176c:	(bad)  
   14001176d:	(bad)  
   14001176e:	(bad)  
   14001176f:	(bad)  
   140011770:	(bad)  
   140011771:	(bad)  
   140011772:	(bad)  
   140011773:	(bad)  
   140011774:	cmp    eax,eax
   140011776:	(bad)  
   140011777:	(bad)  
   140011778:	cmp    eax,eax
   14001177a:	(bad)  
   14001177b:	(bad)  
   14001177c:	cmp    eax,eax
   14001177e:	(bad)  
   14001177f:	(bad)  
   140011780:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   140011786:	(bad)  
   140011787:	(bad)  
   140011788:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14001178e:	(bad)  
   14001178f:	(bad)  
   140011790:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140011796:	(bad)  
   140011797:	(bad)  
   140011798:	cmp    dh,BYTE PTR [rdi-0x66c2000d]
   14001179e:	(bad)  
   1400117a1:	jnp    0x14001173a
   1400117a3:	inc    DWORD PTR [rbx+0x65]
   1400117a6:	jne    0x1400117a7
   1400117a8:	rex.RX
   1400117a9:	rex.WRX push rdx
   1400117ab:	inc    DWORD PTR [rdi+0x47]
   1400117ae:	rex.RXB inc DWORD PTR [r15+0x47]
   1400117b2:	rex.RXB inc DWORD PTR [r15+0x47]
   1400117b6:	rex.RXB inc DWORD PTR [r8]
	...
   1400117c1:	add    BYTE PTR [rax],al
   1400117c3:	add    BYTE PTR [rdi+0x47],al
   1400117c6:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   1400117ca:	rex.RXB
   1400117cb:	rex
   1400117cc:	rex.RXB
   1400117cd:	rex.RXB
   1400117ce:	rex.RXB
   1400117cf:	rex
   1400117d0:	rex.RXB
   1400117d1:	rex.RXB
   1400117d2:	rex.RXB
   1400117d3:	rex
   1400117d4:	rex.RXB
   1400117d5:	rex.RXB
   1400117d6:	rex.RXB (bad) 
   1400117d8:	rex.RXB
   1400117d9:	rex.RXB
   1400117da:	rex.RXB pop QWORD PTR [r15+0x47]
   1400117de:	rex.RXB mov r15d,0xff474747
   1400117e4:	rex.RXB
   1400117e5:	rex.RXB
   1400117e6:	rex.RXB push QWORD PTR [r8+0x53]
   1400117ea:	xor    edi,edi
   1400117ec:	(bad)  
   1400117ed:	pop    rdi
   1400117ee:	sbb    edi,edi
   1400117f0:	retf   0x6d
   1400117f3:	dec    edx
   1400117f5:	ins    DWORD PTR es:[rdi],dx
   1400117f6:	add    bh,bh
   1400117f8:	retf   0x6c
   1400117fb:	dec    edx
   1400117fd:	ins    BYTE PTR es:[rdi],dx
   1400117fe:	add    bh,bh
   140011800:	retf   0x6b
   140011803:	dec    ecx
   140011805:	imul   eax,DWORD PTR [rax],0xffffffff
   140011808:	leave  
   140011809:	imul   eax,DWORD PTR [rax],0xffffffff
   14001180c:	(bad)  
   14001180d:	(bad)  
   14001180e:	(bad)  
   14001180f:	(bad)  
   140011810:	(bad)  
   140011811:	(bad)  
   140011812:	(bad)  
   140011813:	(bad)  
   140011814:	cmp    al,0xc0
   140011816:	(bad)  
   140011817:	(bad)  
   140011818:	cmp    eax,eax
   14001181a:	(bad)  
   14001181b:	(bad)  
   14001181c:	cmp    eax,eax
   14001181e:	(bad)  
   14001181f:	(bad)  
   140011820:	cmp    eax,eax
   140011822:	(bad)  
   140011823:	(bad)  
   140011824:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14001182a:	(bad)  
   14001182b:	(bad)  
   14001182c:	cmp    bh,BYTE PTR [rdi-0x6dc00002]
   140011832:	mov    ecx,0x806c43ff
   140011837:	inc    DWORD PTR [rdi+0x47]
   14001183a:	rex.RXB inc DWORD PTR [r15+0x47]
   14001183e:	rex.RXB inc DWORD PTR [r15+0x47]
   140011842:	rex.RXB mov r15d,0x8f474747
   140011848:	rex.RXB
   140011849:	rex.RXB
   14001184a:	rex.RXB (bad) 
   14001184c:	rex.RXB
   14001184d:	rex.RXB
   14001184e:	rex.RXB
   14001184f:	rex
   140011850:	rex.RXB
   140011851:	rex.RXB
   140011852:	rex.RXB
   140011853:	rex
   140011854:	rex.RXB
   140011855:	rex.RXB
   140011856:	rex.RXB
   140011857:	add    BYTE PTR [rax],al
	...
   140011882:	add    BYTE PTR [rax],al
   140011884:	rex.RXB
   140011885:	rex.RXB
   140011886:	rex.RXB push r8
   140011888:	rex.RXB
   140011889:	rex.RXB
   14001188a:	rex.RXB lahf 
   14001188c:	rex.RXB
   14001188d:	rex.RXB
   14001188e:	rex.RXB call FWORD PTR [r8+0x4c]
   140011892:	call   FWORD PTR ds:[rcx-0x3500e4a1]
   140011899:	ins    DWORD PTR es:[rdi],dx
   14001189a:	add    bh,bh
   14001189c:	retf   0x6c
   14001189f:	dec    edx
   1400118a1:	ins    BYTE PTR es:[rdi],dx
   1400118a2:	add    bh,bh
   1400118a4:	retf   0x6b
   1400118a7:	dec    ecx
   1400118a9:	imul   eax,DWORD PTR [rax],0xffffffff
   1400118ac:	(bad)  
   1400118ad:	(bad)  
   1400118ae:	(bad)  
   1400118af:	(bad)  
   1400118b0:	(bad)  
   1400118b1:	(bad)  
   1400118b2:	(bad)  
   1400118b3:	(bad)  
   1400118b4:	cmp    al,0xc0
   1400118b6:	(bad)  
   1400118b7:	(bad)  
   1400118b8:	cmp    al,0xc0
   1400118ba:	(bad)  
   1400118bb:	(bad)  
   1400118bc:	cmp    eax,eax
   1400118be:	(bad)  
   1400118bf:	(bad)  
   1400118c0:	cmp    eax,eax
   1400118c2:	(bad)  
   1400118c3:	(bad)  
   1400118c4:	cmp    eax,eax
   1400118c6:	(bad)  
   1400118c7:	(bad)  
   1400118c8:	(bad)  
   1400118c9:	xchg   edx,eax
   1400118ca:	mov    ecx,0x5e5645ff
   1400118cf:	inc    DWORD PTR [rdi+0x47]
   1400118d2:	rex.RXB inc DWORD PTR [r15+0x47]
   1400118d6:	rex.RXB lahf 
   1400118d8:	rex.RXB
   1400118d9:	rex.RXB
   1400118da:	rex.RXB push r8
	...
   14001192c:	rex.RXB
   14001192d:	rex.RXB
   14001192e:	rex.RXB and BYTE PTR [r15+0x47],r8b
   140011932:	rex.RXB lahf 
   140011934:	rex.RXB
   140011935:	rex.RXB
   140011936:	rex.RXB jmp FWORD PTR [r8+0x51]
   14001193a:	xor    eax,0xd66b1ff
   14001193f:	dec    edx
   140011941:	ins    BYTE PTR es:[rdi],dx
   140011942:	add    bh,bh
   140011944:	retf   0x6c
   140011947:	dec    edx
   140011949:	imul   eax,DWORD PTR [rax],0xffffffff
   14001194c:	(bad)  
   14001194d:	(bad)  
   14001194e:	(bad)  
   14001194f:	(bad)  
   140011950:	(bad)  
   140011951:	(bad)  
   140011952:	(bad)  
   140011953:	(bad)  
   140011954:	cmp    al,0xc1
   140011956:	(bad)  
   140011957:	(bad)  
   140011958:	cmp    al,0xc0
   14001195a:	(bad)  
   14001195b:	(bad)  
   14001195c:	cmp    al,0xc0
   14001195e:	(bad)  
   14001195f:	(bad)  
   140011960:	cmp    eax,0x44ffdca9
   140011965:	gs jne 0x140011967
   140011968:	rex.RXB
   140011969:	rex.RXB
   14001196a:	rex.RXB inc DWORD PTR [r15+0x47]
   14001196e:	rex.RXB lahf 
   140011970:	rex.RXB
   140011971:	rex.RXB
   140011972:	rex.RXB and BYTE PTR [r8],r8b
	...
   1400119d1:	add    BYTE PTR [rax],al
   1400119d3:	add    BYTE PTR [rdi+0x47],al
   1400119d6:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   1400119da:	rex.RXB mov r15d,0xff474747
   1400119e0:	push   0xffffffff91ff3551
   1400119e5:	pop    rsp
   1400119e6:	(bad)  
   1400119e7:	jmp    FWORD PTR [rcx-0x2e00ed9d]
   1400119ed:	rcl    ecx,1
   1400119ef:	call   rcx
   1400119f1:	rcl    ecx,1
   1400119f3:	(bad)  
   1400119f4:	(bad)  
   1400119f5:	movabs ds:0x6544ffae8b41ffd0,eax
   1400119fe:	jne    0x1400119ff
   140011a00:	rex.RXB
   140011a01:	rex.RXB
   140011a02:	rex.RXB inc DWORD PTR [r15+0x47]
   140011a06:	rex.RXB iret 
   140011a08:	rex.RXB
   140011a09:	rex.RXB
   140011a0a:	rex.RXB xor BYTE PTR [r8],r8b
	...
   140011a79:	add    BYTE PTR [rax],al
   140011a7b:	add    BYTE PTR [rdi+0x47],al
   140011a7e:	rex.RXB
   140011a7f:	rex
   140011a80:	rex.RXB
   140011a81:	rex.RXB
   140011a82:	rex.RXB lahf 
   140011a84:	rex.RXB
   140011a85:	rex.RXB
   140011a86:	rex.RXB fild WORD PTR [r15+0x47]
   140011a8a:	rex.RXB inc DWORD PTR [r15+0x47]
   140011a8e:	rex.RXB inc DWORD PTR [r15+0x47]
   140011a92:	rex.RXB inc DWORD PTR [r15+0x47]
   140011a96:	rex.RXB inc DWORD PTR [r15+0x47]
   140011a9a:	rex.RXB fild WORD PTR [r15+0x47]
   140011a9e:	rex.RXB lahf 
   140011aa0:	rex.RXB
   140011aa1:	rex.RXB
   140011aa2:	rex.RXB push r8
	...
   140011b80:	(bad)  
   140011b81:	(bad)  
   140011b82:	(bad)  
   140011b83:	(bad)  
   140011b84:	jmp    FWORD PTR [rcx+0x0]
   140011b87:	(bad)  
   140011b88:	(bad)  
   140011b89:	inc    ebx
   140011b8b:	(bad)  
   140011b8c:	jmp    FWORD PTR [rcx+0x0]
   140011b8f:	(bad)  
   140011b90:	(bad)  
   140011b91:	inc    DWORD PTR [rax]
   140011b93:	(bad)  
   140011b94:	jmp    FWORD PTR [rax+0x0]
   140011b97:	(bad)  
   140011b98:	(bad)  
   140011b99:	inc    BYTE PTR [rax]
   140011b9b:	jg     0x140011b9c
   140011b9d:	(bad)  
   140011b9e:	(bad)  
   140011b9f:	(bad)  
   140011ba0:	(bad)  
   140011ba1:	clc    
   140011ba2:	add    BYTE PTR [rdi],bl
   140011ba4:	(bad)  
   140011ba5:	mov    edi,0xf0fffffe
   140011baa:	add    BYTE PTR [rdi],cl
   140011bac:	(bad)  
   140011bad:	mov    esi,0xe0fffffe
   140011bb2:	add    BYTE PTR [rdi],al
   140011bb4:	(bad)  
   140011bb5:	mov    esi,0xc0fffffe
   140011bba:	add    BYTE PTR [rbx],al
   140011bbc:	(bad)  
   140011bbd:	mov    ebp,0x80fffffe
   140011bc2:	add    BYTE PTR [rcx],al
   140011bc4:	(bad)  
   140011bc5:	mov    ebp,0xfffffe
   140011bca:	add    BYTE PTR [rax],al
   140011bcc:	(bad)  
   140011bcd:	mov    ebp,0xfefffe
   140011bd2:	add    BYTE PTR [rax],al
   140011bd4:	jg     0x140011b92
   140011bd6:	(bad)  
   140011bd7:	(bad)  
   140011bd8:	cld    
   140011bd9:	add    BYTE PTR [rax],al
   140011bdb:	add    BYTE PTR [rdi],bh
   140011bdd:	mov    esp,0xfcfffe
   140011be2:	add    BYTE PTR [rax],al
   140011be4:	(bad)  
   140011be5:	mov    esp,0xf8fffe
   140011bea:	add    BYTE PTR [rax],al
   140011bec:	(bad)  
   140011bed:	and    DWORD PTR [rbx+0xf0ff],0xf00
   140011bf7:	add    al,dh
   140011bf9:	add    BYTE PTR [rax],al
   140011bfb:	add    BYTE PTR [rdi],cl
   140011bfd:	add    BYTE PTR [rax],al
   140011bff:	add    al,ah
   140011c01:	add    BYTE PTR [rax],al
   140011c03:	add    BYTE PTR [rdi],al
   140011c05:	add    BYTE PTR [rax],al
   140011c07:	add    al,ah
   140011c09:	add    BYTE PTR [rax],al
   140011c0b:	add    BYTE PTR [rdi],al
   140011c0d:	rex.RXB
   140011c0e:	rex.RXB jmp r8
   140011c11:	add    BYTE PTR [rax],al
   140011c13:	add    BYTE PTR [rdi],al
   140011c15:	outs   dx,BYTE PTR ds:[rsi]
   140011c16:	add    bh,bh
   140011c18:	rol    BYTE PTR [rax],0x0
   140011c1b:	add    BYTE PTR [rbx],al
   140011c1d:	ins    DWORD PTR es:[rdi],dx
   140011c1e:	add    bh,bh
   140011c20:	rol    BYTE PTR [rax],0x0
   140011c23:	add    BYTE PTR [rbx],al
   140011c25:	ins    DWORD PTR es:[rdi],dx
   140011c26:	add    bh,bh
   140011c28:	rol    BYTE PTR [rax],0x0
   140011c2b:	add    BYTE PTR [rbx],al
   140011c2d:	ins    BYTE PTR es:[rdi],dx
   140011c2e:	add    bh,bh
   140011c30:	rol    BYTE PTR [rax],0x0
   140011c33:	add    BYTE PTR [rbx],al
   140011c35:	imul   eax,DWORD PTR [rax],0xffffffff
   140011c38:	rol    BYTE PTR [rax],0x0
   140011c3b:	add    BYTE PTR [rbx],al
   140011c3d:	imul   eax,DWORD PTR [rax],0xffffffff
   140011c40:	rol    BYTE PTR [rax],0x0
   140011c43:	add    BYTE PTR [rbx],al
   140011c45:	push   0x0
   140011c47:	inc    eax
   140011c49:	add    BYTE PTR [rax],al
   140011c4b:	add    BYTE PTR [rbx],al
   140011c4d:	imul   eax,DWORD PTR [rax],0xc0ff
   140011c53:	add    BYTE PTR [rbx],al
   140011c55:	imul   eax,DWORD PTR [rax],0xc0ff
   140011c5b:	add    BYTE PTR [rbx],al
   140011c5d:	(bad)  
   140011c5e:	(bad)  
   140011c5f:	inc    eax
   140011c61:	add    BYTE PTR [rax],al
   140011c63:	add    BYTE PTR [rbx],al
   140011c65:	mov    edi,0xc0fffe
   140011c6a:	add    BYTE PTR [rax],al
   140011c6c:	add    edi,DWORD PTR [rdi+0xc0fffe]
   140011c72:	add    BYTE PTR [rax],al
   140011c74:	add    edi,DWORD PTR [rsi+0xc0fffe]
   140011c7a:	add    BYTE PTR [rax],al
   140011c7c:	add    edi,DWORD PTR [rsi+0xc0fffe]
   140011c82:	add    BYTE PTR [rax],al
   140011c84:	add    edi,DWORD PTR [rbp+0x80fffe]
   140011c8a:	add    BYTE PTR [rax],al
   140011c8c:	add    edi,DWORD PTR [rbp+0x80fffe]
   140011c92:	add    BYTE PTR [rax],al
   140011c94:	add    edi,DWORD PTR [rsi+rdi*8+0x80ffff]
   140011c9b:	add    edi,edi
   140011c9d:	mov    esp,0xe0fffffe
   140011ca2:	add    BYTE PTR [rdi],al
   140011ca4:	(bad)  
   140011ca5:	mov    esp,0xf8fffffe
   140011caa:	add    BYTE PTR [rdi],bl
   140011cac:	inc    DWORD PTR [rcx-0x100005d]
   140011cb2:	add    BYTE PTR [rdi-0x1],bh
   140011cb5:	add    BYTE PTR [rax],al
   140011cb7:	add    bh,bh
   140011cb9:	(bad)  
   140011cba:	(bad)  
   140011cbb:	(bad)  
   140011cbc:	inc    DWORD PTR [rax]
   140011cbe:	add    BYTE PTR [rax],al
   140011cc0:	sub    BYTE PTR [rax],al
   140011cc2:	add    BYTE PTR [rax],al
   140011cc4:	and    BYTE PTR [rax],al
   140011cc6:	add    BYTE PTR [rax],al
   140011cc8:	add    BYTE PTR [rax],al
   140011ccb:	add    BYTE PTR [rcx],al
   140011ccd:	add    BYTE PTR [rax],ah
	...
   140011d9f:	add    BYTE PTR [rdi+0x47],al
   140011da2:	rex.RXB
   140011da3:	rex
   140011da4:	rex.RXB
   140011da5:	rex.RXB
   140011da6:	rex.RXB iret 
   140011da8:	rex.RXB
   140011da9:	rex.RXB
   140011daa:	rex.RXB iret 
   140011dac:	rex.RXB
   140011dad:	rex.RXB
   140011dae:	rex.RXB
   140011daf:	add    BYTE PTR [rax],al
	...
   140011e16:	add    BYTE PTR [rax],al
   140011e18:	rex.RXB
   140011e19:	rex.RXB
   140011e1a:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140011e1e:	rex.RXB pop QWORD PTR [r15+0x47]
   140011e22:	rex.RXB push QWORD PTR [r13+0x75]
   140011e26:	jne    0x140011e27
   140011e28:	jne    0x140011e9f
   140011e2a:	jne    0x140011e2b
   140011e2c:	rex.RXB
   140011e2d:	rex.RXB
   140011e2e:	rex.RXB inc DWORD PTR [r15+0x47]
   140011e32:	rex.RXB pop QWORD PTR [r15+0x47]
   140011e36:	rex.RXB adc BYTE PTR [r8],r8b
	...
   140011e91:	add    BYTE PTR [rax],al
   140011e93:	add    BYTE PTR [rdi+0x47],al
   140011e96:	rex.RXB
   140011e97:	rex
   140011e98:	rex.RXB
   140011e99:	rex.RXB
   140011e9a:	rex.RXB fild WORD PTR [r14+0x4e]
   140011e9e:	push   rdx
   140011e9f:	(bad)  
   140011ea0:	cmp    al,0x8f
   140011ea2:	mov    ecx,0xffffffff
   140011ea7:	(bad)  
   140011ea8:	(bad)  
   140011ea9:	(bad)  
   140011eaa:	(bad)  
   140011eab:	call   QWORD PTR [rbp+0x4fff1b54]
   140011eb1:	rex.W
   140011eb2:	rex.XB inc DWORD PTR [r15+0x47]
   140011eb6:	rex.RXB fild WORD PTR [r15+0x47]
   140011eba:	rex.RXB xor BYTE PTR [r8],r8b
	...
   140011f0d:	add    BYTE PTR [rax],al
   140011f0f:	add    BYTE PTR [rdi+0x47],al
   140011f12:	rex.RXB jo 0x140011f5c
   140011f15:	rex.RXB
   140011f16:	rex.RXB inc DWORD PTR [r11+0x64]
   140011f1a:	jne    0x140011f1b
   140011f1c:	(bad)  
   140011f1d:	mov    bl,0xf3
   140011f1f:	push   QWORD PTR [rip+0xfffffffffffffeba]        # 0x140011ddf
   140011f25:	(bad)  
   140011f26:	(bad)  
   140011f27:	(bad)  
   140011f28:	(bad)  
   140011f29:	(bad)  
   140011f2a:	(bad)  
   140011f2b:	inc    ebx
   140011f2d:	pop    rbp
   140011f2e:	add    bh,bh
   140011f30:	mov    ebx,0x66ff045b
   140011f35:	rex.WR xor rax,0x474747ff
   140011f3b:	inc    DWORD PTR [rdi+0x47]
   140011f3e:	rex.RXB jo 0x140011f41
	...
   140011f89:	add    BYTE PTR [rax],al
   140011f8b:	add    BYTE PTR [rdi+0x47],al
   140011f8e:	rex.RXB lahf 
   140011f90:	rex.RXB
   140011f91:	rex.RXB
   140011f92:	rex.RXB (bad) 
   140011f94:	mov    DWORD PTR ds:[rsi-0x144c901],ebp
   140011f9b:	push   QWORD PTR [rsi]
   140011f9d:	mov    ebx,0xbb36fffe
   140011fa2:	(bad)  
   140011fa3:	(bad)  
   140011fa4:	(bad)  
   140011fa5:	(bad)  
   140011fa6:	(bad)  
   140011fa7:	(bad)  
   140011fa8:	(bad)  
   140011fa9:	(bad)  
   140011faa:	(bad)  
   140011fab:	inc    ebx
   140011fad:	pop    rbp
   140011fae:	add    bh,bh
   140011fb0:	ret    
   140011fb1:	pop    rbp
   140011fb2:	add    bh,bh
   140011fb4:	ret    
   140011fb5:	pop    rsp
   140011fb6:	add    bh,bh
   140011fb8:	mov    WORD PTR [rdx+0x1f],ss
   140011fbb:	inc    DWORD PTR [rdi+0x47]
   140011fbe:	rex.RXB inc DWORD PTR [r15+0x47]
   140011fc2:	rex.RXB lahf 
	...
   140012004:	rex.RXB
   140012005:	rex.RXB
   140012006:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   14001200a:	rex.RXB mov r15d,0xff524e46
   140012010:	cmp    al,0x97
   140012012:	(bad)  
   140012015:	mov    esp,0xbb36fffe
   14001201a:	(bad)  
   14001201b:	push   QWORD PTR [rsi]
   14001201d:	mov    ebx,0xbb36fffe
   140012022:	(bad)  
   140012023:	(bad)  
   140012024:	(bad)  
   140012025:	(bad)  
   140012026:	(bad)  
   140012027:	(bad)  
   140012028:	(bad)  
   140012029:	(bad)  
   14001202a:	(bad)  
   14001202b:	inc    ebx
   14001202d:	pop    rsi
   14001202e:	add    bh,bh
   140012030:	ret    
   140012031:	pop    rbp
   140012032:	add    bh,bh
   140012034:	ret    
   140012035:	pop    rbp
   140012036:	add    bh,bh
   140012038:	ret    
   140012039:	pop    rsp
   14001203a:	add    bh,bh
   14001203c:	pushf  
   14001203d:	push   rbp
   14001203e:	(bad)  
   14001203f:	dec    DWORD PTR [rdi+0x48]
   140012042:	rex.XB inc DWORD PTR [r15+0x47]
   140012046:	rex.RXB mov r15d,0x10474747
	...
   140012084:	rex.RXB
   140012085:	rex.RXB
   140012086:	rex.RXB mov r15d,0xff524e46
   14001208c:	cmp    esp,DWORD PTR [rsi-0x43c80024]
   140012092:	(bad)  
   140012093:	push   QWORD PTR [rdi]
   140012095:	mov    esp,0xbc37fffe
   14001209a:	(bad)  
   14001209b:	push   QWORD PTR [rsi]
   14001209d:	mov    ebx,0xbb36fffe
   1400120a2:	(bad)  
   1400120a3:	(bad)  
   1400120a4:	(bad)  
   1400120a5:	(bad)  
   1400120a6:	(bad)  
   1400120a7:	(bad)  
   1400120a8:	(bad)  
   1400120a9:	(bad)  
   1400120aa:	(bad)  
   1400120ab:	inc    esp
   1400120ad:	pop    rsi
   1400120ae:	add    bh,bh
   1400120b0:	ret    
   1400120b1:	pop    rsi
   1400120b2:	add    bh,bh
   1400120b4:	ret    
   1400120b5:	pop    rbp
   1400120b6:	add    bh,bh
   1400120b8:	ret    
   1400120b9:	pop    rbp
   1400120ba:	add    bh,bh
   1400120bc:	ret    
   1400120bd:	pop    rsp
   1400120be:	add    bh,bh
   1400120c0:	stos   DWORD PTR es:[rdi],eax
   1400120c1:	push   rdi
   1400120c2:	or     eax,0x43484fff
   1400120c7:	inc    DWORD PTR [rdi+0x47]
   1400120ca:	rex.RXB mov r15d,0x0
	...
   140012100:	rex.RXB
   140012101:	rex.RXB
   140012102:	rex.RXB lahf 
   140012104:	rex.RX
   140012105:	rex.WRX push rdx
   140012107:	(bad)  
   140012108:	cmp    esp,DWORD PTR [rdi-0x42c70024]
   14001210e:	(bad)  
   14001210f:	(bad)  
   140012110:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   140012117:	push   QWORD PTR [rdi]
   140012119:	mov    esp,0xbc37fffe
   14001211e:	(bad)  
   14001211f:	push   QWORD PTR [rsi]
   140012121:	mov    ebx,0xfffffffe
   140012126:	(bad)  
   140012127:	(bad)  
   140012128:	(bad)  
   140012129:	(bad)  
   14001212a:	(bad)  
   14001212b:	inc    esp
   14001212d:	pop    rdi
   14001212e:	add    bh,bh
   140012130:	(bad)  
   140012131:	pop    rsi
   140012132:	add    bh,bh
   140012134:	ret    
   140012135:	pop    rsi
   140012136:	add    bh,bh
   140012138:	ret    
   140012139:	pop    rbp
   14001213a:	add    bh,bh
   14001213c:	ret    
   14001213d:	pop    rbp
   14001213e:	add    bh,bh
   140012140:	ret    
   140012141:	pop    rsp
   140012142:	add    bh,bh
   140012144:	stos   DWORD PTR es:[rdi],eax
   140012145:	push   rdi
   140012146:	or     eax,0x43484fff
   14001214b:	inc    DWORD PTR [rdi+0x47]
   14001214e:	rex.RXB lahf 
	...
   14001217c:	rex.RXB
   14001217d:	rex.RXB
   14001217e:	rex.RXB jo 0x1400121c8
   140012181:	rex.RXB
   140012182:	rex.RXB (bad) 
   140012184:	cmp    eax,0x39ffd0a0
   140012189:	mov    ebp,0xbd38fffe
   14001218e:	(bad)  
   14001218f:	(bad)  
   140012190:	cmp    BYTE PTR [rbp-0x43c70002],bh
   140012196:	(bad)  
   140012197:	push   QWORD PTR [rdi]
   140012199:	mov    esp,0xbc37fffe
   14001219e:	(bad)  
   14001219f:	push   QWORD PTR [rdi]
   1400121a1:	mov    esp,0xfffffffe
   1400121a6:	(bad)  
   1400121a7:	(bad)  
   1400121a8:	(bad)  
   1400121a9:	(bad)  
   1400121aa:	(bad)  
   1400121ab:	inc    esp
   1400121ad:	pop    rdi
   1400121ae:	add    bh,bh
   1400121b0:	(bad)  
   1400121b1:	pop    rdi
   1400121b2:	add    bh,bh
   1400121b4:	(bad)  
   1400121b5:	pop    rsi
   1400121b6:	add    bh,bh
   1400121b8:	ret    
   1400121b9:	pop    rsi
   1400121ba:	add    bh,bh
   1400121bc:	ret    
   1400121bd:	pop    rbp
   1400121be:	add    bh,bh
   1400121c0:	ret    
   1400121c1:	pop    rbp
   1400121c2:	add    bh,bh
   1400121c4:	ret    
   1400121c5:	pop    rsp
   1400121c6:	add    bh,bh
   1400121c8:	movabs ds:0x47ff474747ff1256,eax
   1400121d1:	rex.RXB
   1400121d2:	rex.RXB jo 0x1400121d5
	...
   1400121f5:	add    BYTE PTR [rax],al
   1400121f7:	add    BYTE PTR [rdi+0x47],al
   1400121fa:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   1400121fe:	rex.RXB inc DWORD PTR [r8-0x76]
   140012202:	scas   al,BYTE PTR es:[rdi]
   140012203:	(bad)  
   140012204:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14001220a:	(bad)  
   14001220b:	(bad)  
   14001220c:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140012212:	(bad)  
   140012213:	(bad)  
   140012214:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14001221a:	(bad)  
   14001221b:	push   QWORD PTR [rdi]
   14001221d:	mov    esp,0xbc37fffe
   140012222:	(bad)  
   140012223:	(bad)  
   140012224:	(bad)  
   140012225:	(bad)  
   140012226:	(bad)  
   140012227:	(bad)  
   140012228:	(bad)  
   140012229:	(bad)  
   14001222a:	(bad)  
   14001222b:	inc    esp
   14001222d:	(bad)  
   14001222e:	add    bh,bh
   140012230:	(bad)  
   140012231:	pop    rdi
   140012232:	add    bh,bh
   140012234:	(bad)  
   140012235:	pop    rdi
   140012236:	add    bh,bh
   140012238:	(bad)  
   140012239:	pop    rsi
   14001223a:	add    bh,bh
   14001223c:	ret    
   14001223d:	pop    rsi
   14001223e:	add    bh,bh
   140012240:	ret    
   140012241:	pop    rbp
   140012242:	add    bh,bh
   140012244:	ret    
   140012245:	pop    rbp
   140012246:	add    bh,bh
   140012248:	ret    
   140012249:	pop    rsp
   14001224a:	add    bh,bh
   14001224c:	mov    WORD PTR [rdx+0x1f],ss
   14001224f:	inc    DWORD PTR [rdi+0x47]
   140012252:	rex.RXB inc DWORD PTR [r15+0x47]
   140012256:	rex.RXB xor BYTE PTR [r8],r8b
	...
   140012275:	add    BYTE PTR [rax],al
   140012277:	add    BYTE PTR [rdi+0x47],al
   14001227a:	rex.RXB mov r15d,0xff756544
   140012280:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   140012286:	(bad)  
   140012287:	(bad)  
   140012288:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14001228e:	(bad)  
   14001228f:	(bad)  
   140012290:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140012296:	(bad)  
   140012297:	(bad)  
   140012298:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14001229e:	(bad)  
   14001229f:	push   QWORD PTR [rdi]
   1400122a1:	mov    esp,0xfffffffe
   1400122a6:	(bad)  
   1400122a7:	(bad)  
   1400122a8:	(bad)  
   1400122a9:	(bad)  
   1400122aa:	(bad)  
   1400122ab:	inc    ebp
   1400122ad:	(bad)  
   1400122ae:	add    bh,bh
   1400122b0:	(bad)  
   1400122b1:	(bad)  
   1400122b2:	add    bh,bh
   1400122b4:	(bad)  
   1400122b5:	pop    rdi
   1400122b6:	add    bh,bh
   1400122b8:	(bad)  
   1400122b9:	pop    rdi
   1400122ba:	add    bh,bh
   1400122bc:	(bad)  
   1400122bd:	pop    rsi
   1400122be:	add    bh,bh
   1400122c0:	ret    
   1400122c1:	pop    rsi
   1400122c2:	add    bh,bh
   1400122c4:	ret    
   1400122c5:	pop    rbp
   1400122c6:	add    bh,bh
   1400122c8:	ret    
   1400122c9:	pop    rbp
   1400122ca:	add    bh,bh
   1400122cc:	ret    
   1400122cd:	pop    rsp
   1400122ce:	add    bh,bh
   1400122d0:	data16 rex.WR xor rax,0x474747ff
   1400122d7:	mov    edi,0x0
	...
   1400122f4:	rex.RXB
   1400122f5:	rex.RXB
   1400122f6:	rex.RXB (bad) 
   1400122f8:	rex.RXB
   1400122f9:	rex.RXB
   1400122fa:	rex.RXB (bad) 
   1400122fc:	cmp    al,0xb0
   1400122fe:	out    0xff,eax
   140012300:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140012306:	(bad)  
   140012307:	(bad)  
   140012308:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14001230e:	(bad)  
   14001230f:	(bad)  
   140012310:	cmp    DWORD PTR [rsi-0x42c60002],edi
   140012316:	(bad)  
   140012317:	(bad)  
   140012318:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14001231e:	(bad)  
   14001231f:	(bad)  
   140012320:	cmp    BYTE PTR [rsi+rdi*8-0x1],bh
   140012327:	(bad)  
   140012328:	(bad)  
   140012329:	(bad)  
   14001232a:	(bad)  
   14001232b:	inc    ebp
   14001232d:	(bad)  
   14001232e:	add    bh,bh
   140012330:	(bad)
   140012333:	inc    esp
   140012335:	(bad)  
   140012336:	add    bh,bh
   140012338:	(bad)  
   140012339:	pop    rdi
   14001233a:	add    bh,bh
   14001233c:	(bad)  
   14001233d:	pop    rdi
   14001233e:	add    bh,bh
   140012340:	(bad)  
   140012341:	pop    rsi
   140012342:	add    bh,bh
   140012344:	ret    
   140012345:	pop    rsi
   140012346:	add    bh,bh
   140012348:	ret    
   140012349:	pop    rbp
   14001234a:	add    bh,bh
   14001234c:	ret    
   14001234d:	pop    rbp
   14001234e:	add    bh,bh
   140012350:	lods   al,BYTE PTR ds:[rsi]
   140012351:	pop    rax
   140012352:	or     eax,0x474747ff
   140012357:	inc    DWORD PTR [rdi+0x47]
   14001235a:	rex.RXB (bad) 
	...
   140012374:	rex.RXB
   140012375:	rex.RXB
   140012376:	rex.RXB iret 
   140012378:	rex.XB je 0x140012307
   14001237b:	(bad)  
   14001237c:	cmp    eax,eax
   14001237e:	(bad)  
   14001237f:	(bad)  
   140012380:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   140012386:	(bad)  
   140012387:	(bad)  
   140012388:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14001238e:	(bad)  
   14001238f:	(bad)  
   140012390:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140012396:	(bad)  
   140012397:	(bad)  
   140012398:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14001239e:	(bad)  
   14001239f:	(bad)  
   1400123a0:	cmp    BYTE PTR [rbp-0x2],bh
   1400123a6:	(bad)  
   1400123a7:	(bad)  
   1400123a8:	(bad)  
   1400123a9:	(bad)  
   1400123aa:	(bad)  
   1400123ab:	inc    ebp
   1400123ad:	(bad)  
   1400123ae:	add    bh,bh
   1400123b0:	(bad)
   1400123b3:	inc    ebp
   1400123b5:	(bad)  
   1400123b6:	add    bh,bh
   1400123b8:	(bad)  
   1400123b9:	(bad)  
   1400123ba:	add    bh,bh
   1400123bc:	(bad)  
   1400123bd:	pop    rdi
   1400123be:	add    bh,bh
   1400123c0:	(bad)  
   1400123c1:	pop    rdi
   1400123c2:	add    bh,bh
   1400123c4:	(bad)  
   1400123c5:	pop    rsi
   1400123c6:	add    bh,bh
   1400123c8:	ret    
   1400123c9:	pop    rsi
   1400123ca:	add    bh,bh
   1400123cc:	ret    
   1400123cd:	pop    rbp
   1400123ce:	add    bh,bh
   1400123d0:	ret    
   1400123d1:	pop    rbp
   1400123d2:	add    bh,bh
   1400123d4:	jbe    0x140012425
   1400123d6:	sub    al,0xff
   1400123d8:	rex.RXB
   1400123d9:	rex.RXB
   1400123da:	rex.RXB iret 
	...
   1400123f0:	rex.RXB
   1400123f1:	rex.RXB
   1400123f2:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   1400123f6:	rex.RXB (bad) 
   1400123f8:	ds test eax,0xc03bffdc
   1400123fe:	(bad)  
   1400123ff:	(bad)  
   140012400:	cmp    eax,eax
   140012402:	(bad)  
   140012403:	(bad)  
   140012404:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   14001240a:	(bad)  
   14001240b:	(bad)  
   14001240c:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   140012412:	(bad)  
   140012413:	(bad)  
   140012414:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14001241a:	(bad)  
   14001241b:	(bad)  
   14001241c:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140012422:	(bad)  
   140012423:	(bad)  
   140012424:	(bad)  
   140012425:	(bad)  
   140012426:	(bad)  
   140012427:	(bad)  
   140012428:	(bad)  
   140012429:	(bad)  
   14001242a:	(bad)  
   14001242b:	inc    ebp
   14001242d:	(bad)  
   14001242e:	add    bh,bh
   140012430:	(bad)
   140012433:	inc    ebp
   140012435:	(bad)  
   140012436:	add    bh,bh
   140012438:	(bad)
   14001243b:	inc    esp
   14001243d:	(bad)  
   14001243e:	add    bh,bh
   140012440:	(bad)  
   140012441:	pop    rdi
   140012442:	add    bh,bh
   140012444:	(bad)  
   140012445:	pop    rdi
   140012446:	add    bh,bh
   140012448:	(bad)  
   140012449:	pop    rsi
   14001244a:	add    bh,bh
   14001244c:	ret    
   14001244d:	pop    rsi
   14001244e:	add    bh,bh
   140012450:	ret    
   140012451:	pop    rbp
   140012452:	add    bh,bh
   140012454:	lods   al,BYTE PTR ds:[rsi]
   140012455:	pop    rcx
   140012456:	or     eax,0x474747ff
   14001245b:	inc    DWORD PTR [rdi+0x47]
   14001245e:	rex.RXB xor BYTE PTR [r8],r8b
	...
   14001246d:	add    BYTE PTR [rax],al
   14001246f:	add    BYTE PTR [rdi+0x47],al
   140012472:	(bad)
   140012477:	(bad)  
   140012478:	(bad)  
   140012479:	(bad)  
   14001247a:	(bad)  
   14001247b:	(bad)  
   14001247c:	(bad)  
   14001247d:	(bad)  
   14001247e:	(bad)  
   14001247f:	(bad)  
   140012480:	(bad)  
   140012481:	(bad)  
   140012482:	(bad)  
   140012483:	(bad)  
   140012484:	(bad)  
   140012485:	(bad)  
   140012486:	(bad)  
   140012487:	(bad)  
   140012488:	(bad)  
   140012489:	(bad)  
   14001248a:	(bad)  
   14001248b:	(bad)  
   14001248c:	(bad)  
   14001248d:	(bad)  
   14001248e:	(bad)  
   14001248f:	(bad)  
   140012490:	(bad)  
   140012491:	(bad)  
   140012492:	(bad)  
   140012493:	(bad)  
   140012494:	(bad)  
   140012495:	(bad)  
   140012496:	(bad)  
   140012497:	(bad)  
   140012498:	(bad)  
   140012499:	(bad)  
   14001249a:	(bad)  
   14001249b:	(bad)  
   14001249c:	(bad)  
   14001249d:	(bad)  
   14001249e:	(bad)  
   14001249f:	(bad)  
   1400124a0:	(bad)  
   1400124a1:	(bad)  
   1400124a2:	(bad)  
   1400124a3:	(bad)  
   1400124a4:	(bad)  
   1400124a5:	(bad)  
   1400124a6:	(bad)  
   1400124a7:	(bad)  
   1400124a8:	(bad)  
   1400124a9:	(bad)  
   1400124aa:	(bad)  
   1400124ab:	(bad)  
   1400124ac:	(bad)  
   1400124ad:	(bad)  
   1400124ae:	(bad)  
   1400124af:	(bad)  
   1400124b0:	(bad)  
   1400124b1:	(bad)  
   1400124b2:	(bad)  
   1400124b3:	(bad)  
   1400124b4:	(bad)  
   1400124b5:	(bad)  
   1400124b6:	(bad)  
   1400124b7:	(bad)  
   1400124b8:	(bad)  
   1400124b9:	(bad)  
   1400124ba:	(bad)  
   1400124bb:	(bad)  
   1400124bc:	(bad)  
   1400124bd:	(bad)  
   1400124be:	(bad)  
   1400124bf:	(bad)  
   1400124c0:	(bad)  
   1400124c1:	(bad)  
   1400124c2:	(bad)  
   1400124c3:	(bad)  
   1400124c4:	(bad)  
   1400124c5:	(bad)  
   1400124c6:	(bad)  
   1400124c7:	(bad)  
   1400124c8:	(bad)  
   1400124c9:	(bad)  
   1400124ca:	(bad)  
   1400124cb:	(bad)  
   1400124cc:	(bad)  
   1400124cd:	(bad)  
   1400124ce:	(bad)  
   1400124cf:	(bad)  
   1400124d0:	(bad)  
   1400124d1:	(bad)  
   1400124d2:	(bad)  
   1400124d3:	(bad)  
   1400124d4:	(bad)  
   1400124d5:	(bad)  
   1400124d6:	(bad)  
   1400124d7:	jmp    FWORD PTR [rdx+0x6a]
   1400124da:	push   0xffffffffffffffff
   1400124dc:	rex.RXB
   1400124dd:	rex.RXB
   1400124de:	rex.RXB pop QWORD PTR [r8]
	...
   1400124ed:	add    BYTE PTR [rax],al
   1400124ef:	add    BYTE PTR [rdi+0x47],al
   1400124f2:	rex.RXB mov r15d,0xff989898
   1400124f8:	(bad)  
   1400124f9:	(bad)  
   1400124fa:	(bad)  
   1400124fb:	(bad)  
   1400124fc:	(bad)  
   1400124fd:	(bad)  
   1400124fe:	(bad)  
   1400124ff:	(bad)  
   140012500:	(bad)  
   140012501:	(bad)  
   140012502:	(bad)  
   140012503:	(bad)  
   140012504:	(bad)  
   140012505:	(bad)  
   140012506:	(bad)  
   140012507:	(bad)  
   140012508:	(bad)  
   140012509:	(bad)  
   14001250a:	(bad)  
   14001250b:	(bad)  
   14001250c:	(bad)  
   14001250d:	(bad)  
   14001250e:	(bad)  
   14001250f:	(bad)  
   140012510:	(bad)  
   140012511:	(bad)  
   140012512:	(bad)  
   140012513:	(bad)  
   140012514:	(bad)  
   140012515:	(bad)  
   140012516:	(bad)  
   140012517:	(bad)  
   140012518:	(bad)  
   140012519:	(bad)  
   14001251a:	(bad)  
   14001251b:	(bad)  
   14001251c:	(bad)  
   14001251d:	(bad)  
   14001251e:	(bad)  
   14001251f:	(bad)  
   140012520:	(bad)  
   140012521:	(bad)  
   140012522:	(bad)  
   140012523:	(bad)  
   140012524:	(bad)  
   140012525:	(bad)  
   140012526:	(bad)  
   140012527:	(bad)  
   140012528:	(bad)  
   140012529:	(bad)  
   14001252a:	(bad)  
   14001252b:	(bad)  
   14001252c:	(bad)  
   14001252d:	(bad)  
   14001252e:	(bad)  
   14001252f:	(bad)  
   140012530:	(bad)  
   140012531:	(bad)  
   140012532:	(bad)  
   140012533:	(bad)  
   140012534:	(bad)  
   140012535:	(bad)  
   140012536:	(bad)  
   140012537:	(bad)  
   140012538:	(bad)  
   140012539:	(bad)  
   14001253a:	(bad)  
   14001253b:	(bad)  
   14001253c:	(bad)  
   14001253d:	(bad)  
   14001253e:	(bad)  
   14001253f:	(bad)  
   140012540:	(bad)  
   140012541:	(bad)  
   140012542:	(bad)  
   140012543:	(bad)  
   140012544:	(bad)  
   140012545:	(bad)  
   140012546:	(bad)  
   140012547:	(bad)  
   140012548:	(bad)  
   140012549:	(bad)  
   14001254a:	(bad)  
   14001254b:	(bad)  
   14001254c:	(bad)  
   14001254d:	(bad)  
   14001254e:	(bad)  
   14001254f:	(bad)  
   140012550:	(bad)  
   140012551:	(bad)  
   140012552:	(bad)  
   140012553:	(bad)  
   140012554:	(bad)  
   140012555:	(bad)  
   140012556:	(bad)  
   140012557:	call   FWORD PTR [rax+0x47ff9898]
   14001255d:	rex.RXB
   14001255e:	rex.RXB mov r15d,0x0
	...
   140012570:	rex.RXB
   140012571:	rex.RXB
   140012572:	rex.RXB jmp QWORD PTR [r9-0x3600e9a0]
   140012579:	imul   eax,DWORD PTR [rax],0xffffffff
   14001257c:	leave  
   14001257d:	push   0x0
   14001257f:	dec    ecx
   140012581:	push   0x0
   140012583:	dec    ecx
   140012585:	imul   eax,DWORD PTR [rax],0x69c8ff
   14001258b:	dec    eax
   14001258d:	push   0x68c8ff00
   140012592:	add    bh,bh
   140012594:	enter  0x67,0xff
   140012598:	(bad)  
   140012599:	data16 add bh,bh
   14001259c:	(bad)  
   14001259d:	data16 add bh,bh
   1400125a0:	(bad)  
   1400125a1:	gs add bh,bh
   1400125a4:	(bad)  
   1400125a5:	(bad)  
   1400125a6:	(bad)  
   1400125a7:	(bad)  
   1400125a8:	(bad)  
   1400125a9:	(bad)  
   1400125aa:	(bad)  
   1400125ab:	(bad)  
   1400125ac:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400125b2:	(bad)  
   1400125b3:	(bad)  
   1400125b4:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   1400125bb:	push   QWORD PTR [rdi]
   1400125bd:	mov    esp,0xbc37fffe
   1400125c2:	(bad)  
   1400125c3:	push   QWORD PTR [rsi]
   1400125c5:	mov    ebx,0xbb36fffe
   1400125ca:	(bad)  
   1400125cb:	push   QWORD PTR [rsi]
   1400125cd:	mov    ebx,0xbb36fffe
   1400125d2:	(bad)  
   1400125d3:	push   QWORD PTR [rip+0x3bfffeba]        # 0x17c012493
   1400125d9:	xchg   esi,eax
   1400125da:	(bad)  
   1400125dd:	rex.RXB
   1400125de:	rex.RXB inc DWORD PTR [r8]
	...
   1400125ed:	add    BYTE PTR [rax],al
   1400125ef:	add    BYTE PTR [rdi+0x47],al
   1400125f2:	rex.RXB jmp FWORD PTR [r9-0x3500ed9d]
   1400125f9:	ins    BYTE PTR es:[rdi],dx
   1400125fa:	add    bh,bh
   1400125fc:	leave  
   1400125fd:	imul   eax,DWORD PTR [rax],0xffffffff
   140012600:	leave  
   140012601:	push   0x0
   140012603:	dec    ecx
   140012605:	push   0x0
   140012607:	dec    ecx
   140012609:	imul   eax,DWORD PTR [rax],0x69c8ff
   14001260f:	dec    eax
   140012611:	push   0x68c8ff00
   140012616:	add    bh,bh
   140012618:	enter  0x67,0xff
   14001261c:	(bad)  
   14001261d:	data16 add bh,bh
   140012620:	(bad)  
   140012621:	data16 add bh,bh
   140012624:	(bad)  
   140012625:	(bad)  
   140012626:	(bad)  
   140012627:	(bad)  
   140012628:	(bad)  
   140012629:	(bad)  
   14001262a:	(bad)  
   14001262b:	(bad)  
   14001262c:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140012632:	(bad)  
   140012633:	(bad)  
   140012634:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14001263a:	(bad)  
   14001263b:	push   QWORD PTR [rdi]
   14001263d:	mov    esp,0xbc37fffe
   140012642:	(bad)  
   140012643:	push   QWORD PTR [rdi]
   140012645:	mov    esp,0xbb36fffe
   14001264a:	(bad)  
   14001264b:	push   QWORD PTR [rsi]
   14001264d:	mov    ebx,0xbb36fffe
   140012652:	(bad)  
   140012653:	push   QWORD PTR [rsi]
   140012655:	mov    ebx,0x9d3afffe
   14001265a:	sar    bh,1
   14001265c:	rex.RXB
   14001265d:	rex.RXB
   14001265e:	rex.RXB inc DWORD PTR [r8]
	...
   14001266d:	add    BYTE PTR [rax],al
   14001266f:	add    BYTE PTR [rdi+0x47],al
   140012672:	rex.RXB jmp FWORD PTR [r9-0x3500ed9d]
   140012679:	ins    BYTE PTR es:[rdi],dx
   14001267a:	add    bh,bh
   14001267c:	retf   0x6c
   14001267f:	dec    ecx
   140012681:	imul   eax,DWORD PTR [rax],0xffffffff
   140012684:	leave  
   140012685:	push   0x0
   140012687:	dec    ecx
   140012689:	push   0x0
   14001268b:	dec    ecx
   14001268d:	imul   eax,DWORD PTR [rax],0x69c8ff
   140012693:	dec    eax
   140012695:	push   0x68c8ff00
   14001269a:	add    bh,bh
   14001269c:	enter  0x67,0xff
   1400126a0:	(bad)  
   1400126a1:	data16 add bh,bh
   1400126a4:	(bad)  
   1400126a5:	(bad)  
   1400126a6:	(bad)  
   1400126a7:	(bad)  
   1400126a8:	(bad)  
   1400126a9:	(bad)  
   1400126aa:	(bad)  
   1400126ab:	(bad)  
   1400126ac:	cmp    DWORD PTR [rsi-0x42c60002],edi
   1400126b2:	(bad)  
   1400126b3:	(bad)  
   1400126b4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400126ba:	(bad)  
   1400126bb:	(bad)  
   1400126bc:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   1400126c3:	push   QWORD PTR [rdi]
   1400126c5:	mov    esp,0xbc37fffe
   1400126ca:	(bad)  
   1400126cb:	push   QWORD PTR [rsi]
   1400126cd:	mov    ebx,0xbb36fffe
   1400126d2:	(bad)  
   1400126d3:	push   QWORD PTR [rsi]
   1400126d5:	mov    ebx,0x9e3afffe
   1400126da:	sar    bh,1
   1400126dc:	rex.RXB
   1400126dd:	rex.RXB
   1400126de:	rex.RXB inc DWORD PTR [r8]
	...
   1400126ed:	add    BYTE PTR [rax],al
   1400126ef:	add    BYTE PTR [rdi+0x47],al
   1400126f2:	rex.RXB dec r10d
   1400126f5:	ins    DWORD PTR es:[rdi],dx
   1400126f6:	add    bh,bh
   1400126f8:	retf   0x6d
   1400126fb:	dec    edx
   1400126fd:	ins    BYTE PTR es:[rdi],dx
   1400126fe:	add    bh,bh
   140012700:	retf   0x6c
   140012703:	dec    ecx
   140012705:	imul   eax,DWORD PTR [rax],0xffffffff
   140012708:	leave  
   140012709:	push   0x0
   14001270b:	dec    ecx
   14001270d:	push   0x0
   14001270f:	dec    ecx
   140012711:	imul   eax,DWORD PTR [rax],0x69c8ff
   140012717:	dec    eax
   140012719:	push   0x68c8ff00
   14001271e:	add    bh,bh
   140012720:	enter  0x67,0xff
   140012724:	(bad)  
   140012725:	(bad)  
   140012726:	(bad)  
   140012727:	(bad)  
   140012728:	(bad)  
   140012729:	(bad)  
   14001272a:	(bad)  
   14001272b:	(bad)  
   14001272c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140012732:	(bad)  
   140012733:	(bad)  
   140012734:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14001273a:	(bad)  
   14001273b:	(bad)  
   14001273c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   140012742:	(bad)  
   140012743:	push   QWORD PTR [rdi]
   140012745:	mov    esp,0xbc37fffe
   14001274a:	(bad)  
   14001274b:	push   QWORD PTR [rdi]
   14001274d:	mov    esp,0xbb36fffe
   140012752:	(bad)  
   140012753:	push   QWORD PTR [rsi]
   140012755:	mov    ebx,0xbb36fffe
   14001275a:	(bad)  
   14001275b:	inc    DWORD PTR [rdi+0x47]
   14001275e:	rex.RXB inc DWORD PTR [r8]
	...
   14001276d:	add    BYTE PTR [rax],al
   14001276f:	add    BYTE PTR [rdi+0x47],al
   140012772:	rex.RXB dec r11d
   140012775:	outs   dx,BYTE PTR ds:[rsi]
   140012776:	add    bh,bh
   140012778:	retf   0x6d
   14001277b:	dec    edx
   14001277d:	ins    DWORD PTR es:[rdi],dx
   14001277e:	add    bh,bh
   140012780:	retf   0x6c
   140012783:	dec    edx
   140012785:	ins    BYTE PTR es:[rdi],dx
   140012786:	add    bh,bh
   140012788:	leave  
   140012789:	imul   eax,DWORD PTR [rax],0xffffffff
   14001278c:	leave  
   14001278d:	push   0x0
   14001278f:	dec    ecx
   140012791:	push   0x0
   140012793:	dec    ecx
   140012795:	imul   eax,DWORD PTR [rax],0x69c8ff
   14001279b:	dec    eax
   14001279d:	push   0x68c8ff00
   1400127a2:	add    bh,bh
   1400127a4:	(bad)  
   1400127a5:	(bad)  
   1400127a6:	(bad)  
   1400127a7:	(bad)  
   1400127a8:	(bad)  
   1400127a9:	(bad)  
   1400127aa:	(bad)  
   1400127ab:	(bad)  
   1400127ac:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   1400127b2:	(bad)  
   1400127b3:	(bad)  
   1400127b4:	cmp    DWORD PTR [rsi-0x42c60002],edi
   1400127ba:	(bad)  
   1400127bb:	(bad)  
   1400127bc:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400127c2:	(bad)  
   1400127c3:	(bad)  
   1400127c4:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   1400127cb:	push   QWORD PTR [rdi]
   1400127cd:	mov    esp,0xbc37fffe
   1400127d2:	(bad)  
   1400127d3:	push   QWORD PTR [rsi]
   1400127d5:	mov    ebx,0xbb36fffe
   1400127da:	(bad)  
   1400127db:	inc    DWORD PTR [rdi+0x47]
   1400127de:	rex.RXB inc DWORD PTR [r8]
	...
   1400127ed:	add    BYTE PTR [rax],al
   1400127ef:	add    BYTE PTR [rdi+0x47],al
   1400127f2:	rex.RXB dec r11d
   1400127f5:	outs   dx,BYTE PTR ds:[rsi]
   1400127f6:	add    bh,bh
   1400127f8:	retf   
   1400127f9:	outs   dx,BYTE PTR ds:[rsi]
   1400127fa:	add    bh,bh
   1400127fc:	retf   0x6d
   1400127ff:	dec    edx
   140012801:	ins    DWORD PTR es:[rdi],dx
   140012802:	add    bh,bh
   140012804:	retf   0x6c
   140012807:	dec    edx
   140012809:	ins    BYTE PTR es:[rdi],dx
   14001280a:	add    bh,bh
   14001280c:	leave  
   14001280d:	imul   eax,DWORD PTR [rax],0xffffffff
   140012810:	leave  
   140012811:	push   0x0
   140012813:	dec    ecx
   140012815:	push   0x0
   140012817:	dec    ecx
   140012819:	imul   eax,DWORD PTR [rax],0x69c8ff
   14001281f:	dec    eax
   140012821:	push   0xffffffffffffff00
   140012826:	(bad)  
   140012827:	(bad)  
   140012828:	(bad)  
   140012829:	(bad)  
   14001282a:	(bad)  
   14001282b:	(bad)  
   14001282c:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   140012832:	(bad)  
   140012833:	(bad)  
   140012834:	cmp    DWORD PTR [rsi-0x41c60002],edi
   14001283a:	(bad)  
   14001283b:	(bad)  
   14001283c:	cmp    DWORD PTR [rbp-0x42c70002],edi
   140012842:	(bad)  
   140012843:	(bad)  
   140012844:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14001284a:	(bad)  
   14001284b:	push   QWORD PTR [rdi]
   14001284d:	mov    esp,0xbc37fffe
   140012852:	(bad)  
   140012853:	push   QWORD PTR [rdi]
   140012855:	mov    esp,0xbb36fffe
   14001285a:	(bad)  
   14001285b:	inc    DWORD PTR [rdi+0x47]
   14001285e:	rex.RXB inc DWORD PTR [r8]
	...
   14001286d:	add    BYTE PTR [rax],al
   14001286f:	add    BYTE PTR [rdi+0x47],al
   140012872:	rex.RXB dec r11d
   140012875:	outs   dx,DWORD PTR ds:[rsi]
   140012876:	add    bh,bh
   140012878:	retf   
   140012879:	outs   dx,BYTE PTR ds:[rsi]
   14001287a:	add    bh,bh
   14001287c:	retf   
   14001287d:	outs   dx,BYTE PTR ds:[rsi]
   14001287e:	add    bh,bh
   140012880:	retf   0x6d
   140012883:	dec    edx
   140012885:	ins    DWORD PTR es:[rdi],dx
   140012886:	add    bh,bh
   140012888:	retf   0x6c
   14001288b:	dec    edx
   14001288d:	ins    BYTE PTR es:[rdi],dx
   14001288e:	add    bh,bh
   140012890:	leave  
   140012891:	imul   eax,DWORD PTR [rax],0xffffffff
   140012894:	leave  
   140012895:	push   0x0
   140012897:	dec    ecx
   140012899:	push   0x0
   14001289b:	dec    ecx
   14001289d:	imul   eax,DWORD PTR [rax],0x69c8ff
   1400128a3:	(bad)  
   1400128a4:	(bad)  
   1400128a5:	(bad)  
   1400128a6:	(bad)  
   1400128a7:	(bad)  
   1400128a8:	(bad)  
   1400128a9:	(bad)  
   1400128aa:	(bad)  
   1400128ab:	(bad)  
   1400128ac:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   1400128b2:	(bad)  
   1400128b3:	(bad)  
   1400128b4:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   1400128ba:	(bad)  
   1400128bb:	(bad)  
   1400128bc:	cmp    DWORD PTR [rsi-0x42c60002],edi
   1400128c2:	(bad)  
   1400128c3:	(bad)  
   1400128c4:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400128ca:	(bad)  
   1400128cb:	(bad)  
   1400128cc:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   1400128d3:	push   QWORD PTR [rdi]
   1400128d5:	mov    esp,0xbc37fffe
   1400128da:	(bad)  
   1400128db:	inc    DWORD PTR [rdi+0x47]
   1400128de:	rex.RXB inc DWORD PTR [r8]
	...
   1400128ed:	add    BYTE PTR [rax],al
   1400128ef:	add    BYTE PTR [rdi+0x47],al
   1400128f2:	rex.RXB dec r12d
   1400128f5:	jo     0x1400128f7
   1400128f7:	dec    ebx
   1400128f9:	outs   dx,DWORD PTR ds:[rsi]
   1400128fa:	add    bh,bh
   1400128fc:	retf   
   1400128fd:	outs   dx,BYTE PTR ds:[rsi]
   1400128fe:	add    bh,bh
   140012900:	retf   
   140012901:	outs   dx,BYTE PTR ds:[rsi]
   140012902:	add    bh,bh
   140012904:	retf   0x6d
   140012907:	dec    edx
   140012909:	ins    DWORD PTR es:[rdi],dx
   14001290a:	add    bh,bh
   14001290c:	retf   0x6c
   14001290f:	dec    edx
   140012911:	ins    BYTE PTR es:[rdi],dx
   140012912:	add    bh,bh
   140012914:	leave  
   140012915:	imul   eax,DWORD PTR [rax],0xffffffff
   140012918:	leave  
   140012919:	push   0x0
   14001291b:	dec    ecx
   14001291d:	push   0x0
   14001291f:	dec    ecx
   140012921:	imul   eax,DWORD PTR [rax],0xffffffff
   140012927:	(bad)  
   140012928:	(bad)  
   140012929:	(bad)  
   14001292a:	(bad)  
   14001292b:	(bad)  
   14001292c:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   140012932:	(bad)  
   140012933:	(bad)  
   140012934:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14001293a:	(bad)  
   14001293b:	(bad)  
   14001293c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140012942:	(bad)  
   140012943:	(bad)  
   140012944:	cmp    DWORD PTR [rbp-0x42c70002],edi
   14001294a:	(bad)  
   14001294b:	(bad)  
   14001294c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   140012952:	(bad)  
   140012953:	push   QWORD PTR [rdi]
   140012955:	mov    esp,0xbc37fffe
   14001295a:	(bad)  
   14001295b:	inc    DWORD PTR [rdi+0x47]
   14001295e:	rex.RXB inc DWORD PTR [r8]
	...
   14001296d:	add    BYTE PTR [rax],al
   14001296f:	add    BYTE PTR [rdi+0x47],al
   140012972:	rex.RXB dec r12d
   140012975:	jo     0x140012977
   140012977:	dec    esp
   140012979:	jo     0x14001297b
   14001297b:	dec    ebx
   14001297d:	outs   dx,DWORD PTR ds:[rsi]
   14001297e:	add    bh,bh
   140012980:	retf   
   140012981:	outs   dx,BYTE PTR ds:[rsi]
   140012982:	add    bh,bh
   140012984:	retf   
   140012985:	outs   dx,BYTE PTR ds:[rsi]
   140012986:	add    bh,bh
   140012988:	retf   0x6d
   14001298b:	dec    edx
   14001298d:	ins    DWORD PTR es:[rdi],dx
   14001298e:	add    bh,bh
   140012990:	retf   0x6c
   140012993:	dec    edx
   140012995:	ins    BYTE PTR es:[rdi],dx
   140012996:	add    bh,bh
   140012998:	leave  
   140012999:	imul   eax,DWORD PTR [rax],0xffffffff
   14001299c:	leave  
   14001299d:	push   0x0
   14001299f:	dec    ecx
   1400129a1:	push   0x0
   1400129a3:	(bad)  
   1400129a4:	(bad)  
   1400129a5:	(bad)  
   1400129a6:	(bad)  
   1400129a7:	(bad)  
   1400129a8:	(bad)  
   1400129a9:	(bad)  
   1400129aa:	(bad)  
   1400129ab:	(bad)  
   1400129ac:	cmp    eax,eax
   1400129ae:	(bad)  
   1400129af:	(bad)  
   1400129b0:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   1400129b6:	(bad)  
   1400129b7:	(bad)  
   1400129b8:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   1400129be:	(bad)  
   1400129bf:	(bad)  
   1400129c0:	cmp    DWORD PTR [rsi-0x41c60002],edi
   1400129c6:	(bad)  
   1400129c7:	(bad)  
   1400129c8:	cmp    DWORD PTR [rbp-0x42c70002],edi
   1400129ce:	(bad)  
   1400129cf:	(bad)  
   1400129d0:	cmp    BYTE PTR [rbp-0x43c70002],bh
   1400129d6:	(bad)  
   1400129d7:	push   QWORD PTR [rdi]
   1400129d9:	mov    esp,0x4747fffe
   1400129de:	rex.RXB inc DWORD PTR [r8]
	...
   1400129ed:	add    BYTE PTR [rax],al
   1400129ef:	add    BYTE PTR [rdi+0x47],al
   1400129f2:	rex.RXB inc DWORD PTR [r15+0x47]
   1400129f6:	rex.RXB inc DWORD PTR [r15+0x47]
   1400129fa:	rex.RXB jmp QWORD PTR [r8+0x4f]
   1400129fe:	cmp    bh,bh
   140012a00:	jns    0x140012a58
   140012a02:	sub    al,0xff
   140012a04:	(bad)  
   140012a05:	pop    rdi
   140012a06:	sbb    edi,edi
   140012a08:	ret    
   140012a09:	imul   eax,DWORD PTR [rdi+rdi*8],0xffffffca
   140012a0d:	ins    DWORD PTR es:[rdi],dx
   140012a0e:	add    bh,bh
   140012a10:	retf   0x6d
   140012a13:	dec    edx
   140012a15:	ins    BYTE PTR es:[rdi],dx
   140012a16:	add    bh,bh
   140012a18:	retf   0x6c
   140012a1b:	dec    ecx
   140012a1d:	imul   eax,DWORD PTR [rax],0xffffffff
   140012a20:	leave  
   140012a21:	push   0x0
   140012a23:	(bad)  
   140012a24:	(bad)  
   140012a25:	(bad)  
   140012a26:	(bad)  
   140012a27:	(bad)  
   140012a28:	(bad)  
   140012a29:	(bad)  
   140012a2a:	(bad)  
   140012a2b:	(bad)  
   140012a2c:	cmp    eax,eax
   140012a2e:	(bad)  
   140012a2f:	(bad)  
   140012a30:	cmp    eax,eax
   140012a32:	(bad)  
   140012a33:	(bad)  
   140012a34:	cmp    edi,DWORD PTR [rdi-0x40c50002]
   140012a3a:	(bad)  
   140012a3b:	(bad)  
   140012a3c:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   140012a42:	(bad)  
   140012a43:	(bad)  
   140012a44:	cmp    dh,BYTE PTR [rdi-0x6ec1000d]
   140012a4a:	mov    ecx,0x8c7342ff
   140012a4f:	inc    DWORD PTR [rbp+rbx*2+0x69]
   140012a53:	inc    DWORD PTR [rdi+0x47]
   140012a56:	rex.RXB inc DWORD PTR [r15+0x47]
   140012a5a:	rex.RXB inc DWORD PTR [r15+0x47]
   140012a5e:	rex.RXB inc DWORD PTR [r8]
	...
   140012a6d:	add    BYTE PTR [rax],al
   140012a6f:	add    BYTE PTR [rdi+0x47],al
   140012a72:	rex.RXB
   140012a73:	rex
   140012a74:	rex.RXB
   140012a75:	rex.RXB
   140012a76:	rex.RXB
   140012a77:	rex
   140012a78:	rex.RXB
   140012a79:	rex.RXB
   140012a7a:	rex.RXB
   140012a7b:	rex
   140012a7c:	rex.RXB
   140012a7d:	rex.RXB
   140012a7e:	rex.RXB add BYTE PTR [r15+0x47],0x47
   140012a83:	scas   eax,DWORD PTR es:[rdi]
   140012a84:	rex.RXB
   140012a85:	rex.RXB
   140012a86:	rex.RXB inc DWORD PTR [r15+0x47]
   140012a8a:	rex.RXB (bad) 
   140012a8c:	jns    0x140012ae3
   140012a8e:	sub    al,0xff
   140012a90:	mov    edx,0xcaff0968
   140012a95:	ins    DWORD PTR es:[rdi],dx
   140012a96:	add    bh,bh
   140012a98:	retf   0x6c
   140012a9b:	dec    edx
   140012a9d:	ins    BYTE PTR es:[rdi],dx
   140012a9e:	add    bh,bh
   140012aa0:	leave  
   140012aa1:	imul   eax,DWORD PTR [rax],0xffffffff
   140012aa4:	(bad)  
   140012aa5:	(bad)  
   140012aa6:	(bad)  
   140012aa7:	(bad)  
   140012aa8:	(bad)  
   140012aa9:	(bad)  
   140012aaa:	(bad)  
   140012aab:	(bad)  
   140012aac:	cmp    al,0xc0
   140012aae:	(bad)  
   140012aaf:	(bad)  
   140012ab0:	cmp    eax,eax
   140012ab2:	(bad)  
   140012ab3:	(bad)  
   140012ab4:	cmp    eax,eax
   140012ab6:	(bad)  
   140012ab7:	(bad)  
   140012ab8:	cmp    edi,DWORD PTR [rdi-0x4fc30002]
   140012abe:	out    0xff,eax
   140012ac0:	rex.X je 0x140012a4f
   140012ac3:	inc    DWORD PTR [rdi+0x47]
   140012ac6:	rex.RXB inc DWORD PTR [r15+0x47]
   140012aca:	rex.RXB inc DWORD PTR [r15+0x47]
   140012ace:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140012ad0:	rex.RXB
   140012ad1:	rex.RXB
   140012ad2:	rex.RXB add BYTE PTR [r15+0x47],0x47
   140012ad7:	rex
   140012ad8:	rex.RXB
   140012ad9:	rex.RXB
   140012ada:	rex.RXB
   140012adb:	rex
   140012adc:	rex.RXB
   140012add:	rex.RXB
   140012ade:	rex.RXB
   140012adf:	add    BYTE PTR [rax],al
	...
   140012b02:	add    BYTE PTR [rax],al
   140012b04:	rex.RXB
   140012b05:	rex.RXB
   140012b06:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140012b0a:	rex.RXB (bad) 
   140012b0c:	rex.RXB
   140012b0d:	rex.RXB
   140012b0e:	rex.RXB fild WORD PTR [r15+0x47]
   140012b12:	rex.RXB inc DWORD PTR [r8-0x3d00d7a8]
   140012b19:	imul   eax,DWORD PTR [rdi+rdi*8],0xffffffca
   140012b1d:	ins    BYTE PTR es:[rdi],dx
   140012b1e:	add    bh,bh
   140012b20:	retf   0x6c
   140012b23:	(bad)  
   140012b24:	(bad)  
   140012b25:	(bad)  
   140012b26:	(bad)  
   140012b27:	(bad)  
   140012b28:	(bad)  
   140012b29:	(bad)  
   140012b2a:	(bad)  
   140012b2b:	(bad)  
   140012b2c:	cmp    al,0xc0
   140012b2e:	(bad)  
   140012b2f:	(bad)  
   140012b30:	cmp    al,0xc0
   140012b32:	(bad)  
   140012b33:	(bad)  
   140012b34:	cmp    al,0xb8
   140012b36:	repz inc DWORD PTR [rdx+0x7c]
   140012b3a:	xchg   edi,eax
   140012b3b:	inc    DWORD PTR [rdi+0x47]
   140012b3e:	rex.RXB inc DWORD PTR [r15+0x47]
   140012b42:	rex.RXB fild WORD PTR [r15+0x47]
   140012b46:	rex.RXB (bad) 
   140012b48:	rex.RXB
   140012b49:	rex.RXB
   140012b4a:	rex.RXB adc BYTE PTR [r8],r8b
	...
   140012b8d:	add    BYTE PTR [rax],al
   140012b8f:	add    BYTE PTR [rdi+0x47],al
   140012b92:	rex.RXB jo 0x140012bdc
   140012b95:	rex.RXB
   140012b96:	rex.RXB out dx,eax
   140012b98:	rex.WRXB
   140012b99:	rex.WB
   140012b9a:	rex.XB inc DWORD PTR [r8-0x5600d7a8]
   140012ba1:	movsxd edx,DWORD PTR [rdx]
   140012ba3:	call   rcx
   140012ba5:	rcl    ecx,1
   140012ba7:	call   rcx
   140012ba9:	rcl    ecx,1
   140012bab:	(bad)  
   140012bac:	(bad)  
   140012bad:	movabs ds:0x4f46ff977c42ffd0,al
   140012bb6:	push   rdx
   140012bb7:	inc    DWORD PTR [rdi+0x47]
   140012bba:	rex.RXB out dx,eax
   140012bbc:	rex.RXB
   140012bbd:	rex.RXB
   140012bbe:	rex.RXB (bad) 
	...
   140012c14:	rex.RXB
   140012c15:	rex.RXB
   140012c16:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140012c1a:	rex.RXB add BYTE PTR [r15+0x47],0x47
   140012c1f:	iret   
   140012c20:	rex.RXB
   140012c21:	rex.RXB
   140012c22:	rex.RXB inc DWORD PTR [r15+0x47]
   140012c26:	rex.RXB inc DWORD PTR [r15+0x47]
   140012c2a:	rex.RXB inc DWORD PTR [r15+0x47]
   140012c2e:	rex.RXB inc DWORD PTR [r15+0x47]
   140012c32:	rex.RXB iret 
   140012c34:	rex.RXB
   140012c35:	rex.RXB
   140012c36:	rex.RXB add BYTE PTR [r15+0x47],0x47
   140012c3b:	adc    BYTE PTR [rax],al
	...
   140012ce5:	add    BYTE PTR [rax],al
   140012ce7:	add    bh,bh
   140012ce9:	(bad)  
   140012cea:	(bad)  
   140012ceb:	(bad)  
   140012cec:	(bad)  
   140012ced:	cld    
   140012cee:	(bad)  
   140012cef:	(bad)  
   140012cf0:	push   rax
   140012cf2:	ud0    edi,edi
   140012cf5:	loopne 0x140012cfe
   140012cf7:	(bad)  
   140012cf8:	inc    eax
   140012cfa:	add    edi,edi
   140012cfc:	inc    DWORD PTR [rax+0xfeff01]
   140012d02:	add    BYTE PTR [rdi-0x2],bh
   140012d05:	add    BYTE PTR [rax],al
   140012d07:	jg     0x140012d05
   140012d09:	add    BYTE PTR [rax],al
   140012d0b:	(bad)  
   140012d0c:	clc    
   140012d0d:	add    BYTE PTR [rax],al
   140012d0f:	(bad)  
   140012d10:	lock add BYTE PTR [rax],al
   140012d13:	(bad)  
   140012d15:	add    BYTE PTR [rax],al
   140012d17:	pavgb  mm0,QWORD PTR [rax]
   140012d1a:	add    BYTE PTR [rdi],al
   140012d1c:	loopne 0x140012d1e
   140012d1e:	add    BYTE PTR [rdi],al
   140012d20:	rol    BYTE PTR [rax],0x0
   140012d23:	add    eax,eax
   140012d25:	add    BYTE PTR [rax],al
   140012d27:	add    eax,eax
   140012d29:	add    BYTE PTR [rax],al
   140012d2b:	add    eax,eax
   140012d2d:	add    BYTE PTR [rax],al
   140012d2f:	add    eax,eax
   140012d31:	add    BYTE PTR [rax],al
   140012d33:	add    eax,eax
   140012d35:	add    BYTE PTR [rax],al
   140012d37:	add    eax,eax
   140012d39:	add    BYTE PTR [rax],al
   140012d3b:	add    eax,eax
   140012d3d:	add    BYTE PTR [rax],al
   140012d3f:	add    eax,eax
   140012d41:	add    BYTE PTR [rax],al
   140012d43:	add    eax,eax
   140012d45:	add    BYTE PTR [rax],al
   140012d47:	add    eax,eax
   140012d49:	add    BYTE PTR [rax],al
   140012d4b:	add    eax,eax
   140012d4d:	add    BYTE PTR [rax],al
   140012d4f:	add    eax,eax
   140012d51:	add    BYTE PTR [rax],al
   140012d53:	add    eax,eax
   140012d55:	add    BYTE PTR [rax],al
   140012d57:	add    edi,esi
   140012d59:	add    BYTE PTR [rax],al
   140012d5b:	jg     0x140012d5c
   140012d5d:	rol    BYTE PTR [rbx],0xff
   140012d60:	jmp    rax
   140012d62:	(bad)  
   140012d63:	(bad)  
   140012d64:	(bad)  
   140012d65:	(bad)  
   140012d66:	(bad)  
   140012d67:	jmp    FWORD PTR [rax]
   140012d69:	add    BYTE PTR [rax],al
   140012d6b:	add    BYTE PTR [rax],bl
   140012d6d:	add    BYTE PTR [rax],al
   140012d6f:	add    BYTE PTR [rax],dh
   140012d71:	add    BYTE PTR [rax],al
   140012d73:	add    BYTE PTR [rcx],al
   140012d75:	add    BYTE PTR [rax],ah
	...
   140012db7:	add    BYTE PTR [rdi+0x47],al
   140012dba:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140012dbe:	rex.RXB add BYTE PTR [r15+0x47],0x47
   140012dc3:	pop    QWORD PTR [rdi+0x47]
   140012dc6:	rex.RXB adc BYTE PTR [r8],r8b
	...
   140012e11:	add    BYTE PTR [rax],al
   140012e13:	add    BYTE PTR [rdi+0x47],al
   140012e16:	rex.RXB push r8
   140012e18:	rex.RXB
   140012e19:	rex.RXB
   140012e1a:	rex.RXB fild WORD PTR [r14+0x4e]
   140012e1e:	push   rdx
   140012e1f:	dec    DWORD PTR [rdi+0x48]
   140012e22:	rex.XB inc DWORD PTR [r15+0x47]
   140012e26:	rex.RXB out dx,eax
   140012e28:	rex.RXB
   140012e29:	rex.RXB
   140012e2a:	rex.RXB push r8
	...
   140012e6c:	rex.RXB
   140012e6d:	rex.RXB
   140012e6e:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140012e72:	rex.RXB pop QWORD PTR [r15+0x47]
   140012e76:	rex.RXB inc DWORD PTR [r9+0x6b]
   140012e7a:	cmp    bh,0x36
   140012e7d:	mov    bl,0xf3
   140012e7f:	(bad)  
   140012e80:	mov    ebx,0x6eff045b
   140012e85:	rex.WRX xor rdi,r15
   140012e88:	rex.RXB
   140012e89:	rex.RXB
   140012e8a:	rex.RXB inc DWORD PTR [r15+0x47]
   140012e8e:	rex.RXB lahf 
   140012e90:	rex.RXB
   140012e91:	rex.RXB
   140012e92:	rex.RXB adc BYTE PTR [r8],r8b
	...
   140012ec5:	add    BYTE PTR [rax],al
   140012ec7:	add    BYTE PTR [rdi+0x47],al
   140012eca:	rex.RXB and BYTE PTR [r15+0x47],r8b
   140012ece:	rex.RXB iret 
   140012ed0:	rex.RX
   140012ed1:	rex.WRX push rdx
   140012ed3:	(bad)  
   140012ed4:	cmp    edx,DWORD PTR [rdi-0x44c9003b]
   140012eda:	(bad)  
   140012edb:	push   QWORD PTR [rip+0xffffffffc3fffeba]        # 0x104012d9b
   140012ee1:	pop    rbp
   140012ee2:	add    bh,bh
   140012ee4:	ret    
   140012ee5:	pop    rbp
   140012ee6:	add    bh,bh
   140012ee8:	pushf  
   140012ee9:	push   rbp
   140012eea:	(bad)  
   140012eeb:	dec    DWORD PTR [rdi+0x48]
   140012eee:	rex.XB inc DWORD PTR [r15+0x47]
   140012ef2:	rex.RXB iret 
   140012ef4:	rex.RXB
   140012ef5:	rex.RXB
   140012ef6:	rex.RXB and BYTE PTR [r8],r8b
	...
   140012f21:	add    BYTE PTR [rax],al
   140012f23:	add    BYTE PTR [rdi+0x47],al
   140012f26:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   140012f2a:	rex.RXB out dx,eax
   140012f2c:	rex.R pop rbp
   140012f2e:	imul   edi,edi,0xffdca63a
   140012f34:	ss mov ebx,0xbb36fffe
   140012f3a:	(bad)  
   140012f3b:	push   QWORD PTR [rsi]
   140012f3d:	mov    ebx,0x5ec4fffe
   140012f42:	add    bh,bh
   140012f44:	ret    
   140012f45:	pop    rbp
   140012f46:	add    bh,bh
   140012f48:	ret    
   140012f49:	pop    rbp
   140012f4a:	add    bh,bh
   140012f4c:	mov    bl,0x59
   140012f4e:	or     edi,edi
   140012f50:	pop    rsi
   140012f51:	rex.WXB cmp dil,r15b
   140012f54:	rex.RXB
   140012f55:	rex.RXB
   140012f56:	rex.RXB out dx,eax
   140012f58:	rex.RXB
   140012f59:	rex.RXB
   140012f5a:	rex.RXB xor BYTE PTR [r8],r8b
	...
   140012f7d:	add    BYTE PTR [rax],al
   140012f7f:	add    BYTE PTR [rdi+0x47],al
   140012f82:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   140012f86:	rex.RXB out dx,eax
   140012f88:	rex.R pop rbp
   140012f8a:	imul   edi,edi,0xfff3b539
   140012f90:	(bad)  
   140012f91:	mov    esp,0xbc37fffe
   140012f96:	(bad)  
   140012f97:	push   QWORD PTR [rsi]
   140012f99:	mov    ebx,0xbb36fffe
   140012f9e:	(bad)  
   140012f9f:	inc    esp
   140012fa1:	pop    rdi
   140012fa2:	add    bh,bh
   140012fa4:	(bad)  
   140012fa5:	pop    rsi
   140012fa6:	add    bh,bh
   140012fa8:	ret    
   140012fa9:	pop    rbp
   140012faa:	add    bh,bh
   140012fac:	ret    
   140012fad:	pop    rbp
   140012fae:	add    bh,bh
   140012fb0:	mov    ebx,0x5eff045b
   140012fb5:	rex.WXB cmp dil,r15b
   140012fb8:	rex.RXB
   140012fb9:	rex.RXB
   140012fba:	rex.RXB out dx,eax
   140012fbc:	rex.RXB
   140012fbd:	rex.RXB
   140012fbe:	rex.RXB xor BYTE PTR [r8],r8b
	...
   140012fd9:	add    BYTE PTR [rax],al
   140012fdb:	add    BYTE PTR [rdi+0x47],al
   140012fde:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140012fe2:	rex.RXB fild WORD PTR [r13+r11*2+0x69]
   140012fe7:	(bad)  
   140012fe8:	cmp    DWORD PTR [rsi-0x42c7000d],esi
   140012fee:	(bad)  
   140012fef:	(bad)  
   140012ff0:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   140012ff7:	push   QWORD PTR [rdi]
   140012ff9:	mov    esp,0xbb36fffe
   140012ffe:	(bad)  
   140012fff:	inc    esp
   140013001:	pop    rdi
   140013002:	add    bh,bh
   140013004:	(bad)  
   140013005:	pop    rdi
   140013006:	add    bh,bh
   140013008:	(bad)  
   140013009:	pop    rsi
   14001300a:	add    bh,bh
   14001300c:	ret    
   14001300d:	pop    rbp
   14001300e:	add    bh,bh
   140013010:	ret    
   140013011:	pop    rbp
   140013012:	add    bh,bh
   140013014:	mov    ebx,0x5eff045b
   140013019:	rex.WXB cmp dil,r15b
   14001301c:	rex.RXB
   14001301d:	rex.RXB
   14001301e:	rex.RXB fild WORD PTR [r15+0x47]
   140013022:	rex.RXB adc BYTE PTR [r8],r8b
	...
   140013039:	add    BYTE PTR [rax],al
   14001303b:	add    BYTE PTR [rdi+0x47],al
   14001303e:	rex.RXB mov r15d,0xff524e46
   140013044:	cmp    dh,BYTE PTR [rdi-0x41c6000d]
   14001304a:	(bad)  
   14001304b:	(bad)  
   14001304c:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140013052:	(bad)  
   140013053:	(bad)  
   140013054:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14001305b:	push   QWORD PTR [rdi]
   14001305d:	mov    esp,0x60c5fffe
   140013062:	add    bh,bh
   140013064:	(bad)  
   140013065:	pop    rdi
   140013066:	add    bh,bh
   140013068:	(bad)  
   140013069:	pop    rdi
   14001306a:	add    bh,bh
   14001306c:	(bad)  
   14001306d:	pop    rsi
   14001306e:	add    bh,bh
   140013070:	ret    
   140013071:	pop    rbp
   140013072:	add    bh,bh
   140013074:	ret    
   140013075:	pop    rbp
   140013076:	add    bh,bh
   140013078:	mov    ebx,0x56ff045b
   14001307d:	rex.WX
   14001307e:	inc    DWORD PTR ds:[rdi+0x47]
   140013082:	rex.RXB mov r15d,0x0
	...
   140013098:	rex.RXB
   140013099:	rex.RXB
   14001309a:	rex.RXB (bad) 
   14001309c:	rex.RXB
   14001309d:	rex.RXB
   14001309e:	rex.RXB (bad) 
   1400130a0:	cmp    eax,0x3affd0a1
   1400130a5:	mov    esi,0xbe39fffe
   1400130aa:	(bad)  
   1400130ab:	(bad)  
   1400130ac:	cmp    DWORD PTR [rsi-0x42c70002],edi
   1400130b2:	(bad)  
   1400130b3:	(bad)  
   1400130b4:	cmp    BYTE PTR [rbp-0x43c70002],bh
   1400130ba:	(bad)  
   1400130bb:	push   QWORD PTR [rdi]
   1400130bd:	mov    esp,0x61c5fffe
   1400130c2:	add    bh,bh
   1400130c4:	(bad)
   1400130c7:	inc    esp
   1400130c9:	pop    rdi
   1400130ca:	add    bh,bh
   1400130cc:	(bad)  
   1400130cd:	pop    rdi
   1400130ce:	add    bh,bh
   1400130d0:	(bad)  
   1400130d1:	pop    rsi
   1400130d2:	add    bh,bh
   1400130d4:	ret    
   1400130d5:	pop    rbp
   1400130d6:	add    bh,bh
   1400130d8:	ret    
   1400130d9:	pop    rbp
   1400130da:	add    bh,bh
   1400130dc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400130dd:	push   rdi
   1400130de:	adc    bh,bh
   1400130e0:	rex.RXB
   1400130e1:	rex.RXB
   1400130e2:	rex.RXB inc DWORD PTR [r15+0x47]
   1400130e6:	rex.RXB (bad) 
	...
   1400130f8:	rex.RXB
   1400130f9:	rex.RXB
   1400130fa:	rex.RXB fild WORD PTR [r10+0x74]
   1400130fe:	mov    edi,?
   140013100:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140013106:	(bad)  
   140013107:	(bad)  
   140013108:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   14001310e:	(bad)  
   14001310f:	(bad)  
   140013110:	cmp    DWORD PTR [rsi-0x42c70002],edi
   140013116:	(bad)  
   140013117:	(bad)  
   140013118:	cmp    BYTE PTR [rbp-0x43c70002],bh
   14001311e:	(bad)  
   14001311f:	inc    ebp
   140013121:	(bad)  
   140013122:	add    bh,bh
   140013124:	(bad)
   140013127:	inc    ebp
   140013129:	(bad)  
   14001312a:	add    bh,bh
   14001312c:	(bad)  
   14001312d:	pop    rdi
   14001312e:	add    bh,bh
   140013130:	(bad)  
   140013131:	pop    rdi
   140013132:	add    bh,bh
   140013134:	(bad)  
   140013135:	pop    rsi
   140013136:	add    bh,bh
   140013138:	ret    
   140013139:	pop    rbp
   14001313a:	add    bh,bh
   14001313c:	ret    
   14001313d:	pop    rbp
   14001313e:	add    bh,bh
   140013140:	jbe    0x140013191
   140013142:	sub    al,0xff
   140013144:	rex.RXB
   140013145:	rex.RXB
   140013146:	rex.RXB fild WORD PTR [r8]
	...
   140013151:	add    BYTE PTR [rax],al
   140013153:	add    BYTE PTR [rdi+0x47],al
   140013156:	rex.RXB (bad) 
   140013158:	rex.RXB
   140013159:	rex.RXB
   14001315a:	rex.RXB (bad) 
   14001315c:	cmp    eax,0x3bffe7b1
   140013161:	sar    dh,0xff
   140013164:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14001316a:	(bad)  
   14001316b:	(bad)  
   14001316c:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140013172:	(bad)  
   140013173:	(bad)  
   140013174:	cmp    DWORD PTR [rsi-0x42c70002],edi
   14001317a:	(bad)  
   14001317b:	(bad)  
   14001317c:	cmp    BYTE PTR [rbp+0x62c6fffe],bh
   140013182:	add    bh,bh
   140013184:	(bad)
   140013187:	inc    ebp
   140013189:	(bad)  
   14001318a:	add    bh,bh
   14001318c:	(bad)
   14001318f:	inc    esp
   140013191:	pop    rdi
   140013192:	add    bh,bh
   140013194:	(bad)  
   140013195:	pop    rdi
   140013196:	add    bh,bh
   140013198:	(bad)  
   140013199:	pop    rsi
   14001319a:	add    bh,bh
   14001319c:	ret    
   14001319d:	pop    rbp
   14001319e:	add    bh,bh
   1400131a0:	mov    ah,0x5a
   1400131a2:	or     edi,edi
   1400131a4:	rex.RXB
   1400131a5:	rex.RXB
   1400131a6:	rex.RXB inc DWORD PTR [r15+0x47]
   1400131aa:	rex.RXB (bad) 
	...
   1400131b4:	rex.RXB
   1400131b5:	rex.RXB
   1400131b6:	rex.RXB scas eax,DWORD PTR es:[rdi]
   1400131b8:	rex.R ins DWORD PTR es:[rdi],dx
   1400131ba:	cmp    bh,0x3c
   1400131bd:	sar    dh,0xff
   1400131c0:	cmp    eax,eax
   1400131c2:	(bad)  
   1400131c3:	(bad)  
   1400131c4:	cmp    eax,eax
   1400131c6:	(bad)  
   1400131c7:	(bad)  
   1400131c8:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   1400131ce:	(bad)  
   1400131cf:	(bad)  
   1400131d0:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   1400131d6:	(bad)  
   1400131d7:	(bad)  
   1400131d8:	cmp    DWORD PTR [rsi-0x42c70002],edi
   1400131de:	(bad)  
   1400131df:	inc    esi
   1400131e1:	movsxd eax,DWORD PTR [rax]
   1400131e3:	inc    esi
   1400131e5:	(bad)  
   1400131e6:	add    bh,bh
   1400131e8:	(bad)
   1400131eb:	inc    ebp
   1400131ed:	(bad)  
   1400131ee:	add    bh,bh
   1400131f0:	(bad)
   1400131f3:	inc    esp
   1400131f5:	pop    rdi
   1400131f6:	add    bh,bh
   1400131f8:	(bad)  
   1400131f9:	pop    rdi
   1400131fa:	add    bh,bh
   1400131fc:	(bad)  
   1400131fd:	pop    rsi
   1400131fe:	add    bh,bh
   140013200:	ret    
   140013201:	pop    rbp
   140013202:	add    bh,bh
   140013204:	outs   dx,BYTE PTR ds:[rsi]
   140013205:	rex.WRX xor rdi,r15
   140013208:	rex.RXB
   140013209:	rex.RXB
   14001320a:	rex.RXB scas eax,DWORD PTR es:[rdi]
	...
   140013214:	rex.RXB
   140013215:	rex.RXB
   140013216:	rex.RXB out dx,eax
   140013218:	nop
   140013219:	pop    rbx
   14001321a:	(bad)  
   14001321b:	dec    ecx
   14001321d:	push   0x0
   14001321f:	dec    ecx
   140013221:	imul   eax,DWORD PTR [rax],0x69c8ff
   140013227:	dec    eax
   140013229:	push   0x67c8ff00
   14001322e:	add    bh,bh
   140013230:	(bad)  
   140013231:	data16 add bh,bh
   140013234:	(bad)  
   140013235:	data16 add bh,bh
   140013238:	(bad)  
   140013239:	gs add bh,bh
   14001323c:	(bad)  
   14001323d:	gs add bh,bh
   140013240:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140013246:	(bad)  
   140013247:	(bad)  
   140013248:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   14001324f:	push   QWORD PTR [rdi]
   140013251:	mov    esp,0xbb36fffe
   140013256:	(bad)  
   140013257:	push   QWORD PTR [rsi]
   140013259:	mov    ebx,0xbb36fffe
   14001325e:	(bad)  
   14001325f:	push   QWORD PTR [rip+0x3dfffeba]        # 0x17e01311f
   140013265:	mov    BYTE PTR [rsi+0x474747ff],ch
   14001326b:	out    dx,eax
	...
   140013274:	rex.RXB
   140013275:	rex.RXB
   140013276:	rex.RXB jmp FWORD PTR [r9-0x3600ed9e]
   14001327d:	imul   eax,DWORD PTR [rax],0xffffffff
   140013280:	leave  
   140013281:	push   0x0
   140013283:	dec    ecx
   140013285:	imul   eax,DWORD PTR [rax],0x69c8ff
   14001328b:	dec    eax
   14001328d:	push   0x67c8ff00
   140013292:	add    bh,bh
   140013294:	(bad)  
   140013295:	data16 add bh,bh
   140013298:	(bad)  
   140013299:	data16 add bh,bh
   14001329c:	(bad)  
   14001329d:	gs add bh,bh
   1400132a0:	cmp    DWORD PTR [rsi-0x42c70002],edi
   1400132a6:	(bad)  
   1400132a7:	(bad)  
   1400132a8:	cmp    BYTE PTR [rbp-0x43c70002],bh
   1400132ae:	(bad)  
   1400132af:	push   QWORD PTR [rdi]
   1400132b1:	mov    esp,0xbc37fffe
   1400132b6:	(bad)  
   1400132b7:	push   QWORD PTR [rsi]
   1400132b9:	mov    ebx,0xbb36fffe
   1400132be:	(bad)  
   1400132bf:	push   QWORD PTR [rsi]
   1400132c1:	mov    ebx,0x9d3afffe
   1400132c6:	sar    bh,1
   1400132c8:	rex.RXB
   1400132c9:	rex.RXB
   1400132ca:	rex.RXB inc DWORD PTR [r8]
   1400132cd:	add    BYTE PTR [rax],al
   1400132cf:	add    BYTE PTR [rax],al
   1400132d1:	add    BYTE PTR [rax],al
   1400132d3:	add    BYTE PTR [rdi+0x47],al
   1400132d6:	rex.RXB push QWORD PTR [r9-0x3500f29b]
   1400132dd:	ins    BYTE PTR es:[rdi],dx
   1400132de:	add    bh,bh
   1400132e0:	leave  
   1400132e1:	imul   eax,DWORD PTR [rax],0xffffffff
   1400132e4:	leave  
   1400132e5:	push   0x0
   1400132e7:	dec    ecx
   1400132e9:	imul   eax,DWORD PTR [rax],0x69c8ff
   1400132ef:	dec    eax
   1400132f1:	push   0x67c8ff00
   1400132f6:	add    bh,bh
   1400132f8:	(bad)  
   1400132f9:	data16 add bh,bh
   1400132fc:	(bad)  
   1400132fd:	data16 add bh,bh
   140013300:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140013306:	(bad)  
   140013307:	(bad)  
   140013308:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14001330e:	(bad)  
   14001330f:	(bad)  
   140013310:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   140013317:	push   QWORD PTR [rdi]
   140013319:	mov    esp,0xbb36fffe
   14001331e:	(bad)  
   14001331f:	push   QWORD PTR [rsi]
   140013321:	mov    ebx,0xa539fffe
   140013326:	fdiv   st(7),st
   140013328:	rex.RXB
   140013329:	rex.RXB
   14001332a:	rex.RXB inc DWORD PTR [r8]
   14001332d:	add    BYTE PTR [rax],al
   14001332f:	add    BYTE PTR [rax],al
   140013331:	add    BYTE PTR [rax],al
   140013333:	add    BYTE PTR [rdi+0x47],al
   140013336:	rex.RXB dec r10d
   140013339:	ins    DWORD PTR es:[rdi],dx
   14001333a:	add    bh,bh
   14001333c:	retf   0x6c
   14001333f:	dec    edx
   140013341:	ins    BYTE PTR es:[rdi],dx
   140013342:	add    bh,bh
   140013344:	leave  
   140013345:	imul   eax,DWORD PTR [rax],0xffffffff
   140013348:	leave  
   140013349:	push   0x0
   14001334b:	dec    ecx
   14001334d:	imul   eax,DWORD PTR [rax],0x69c8ff
   140013353:	dec    eax
   140013355:	push   0x67c8ff00
   14001335a:	add    bh,bh
   14001335c:	(bad)  
   14001335d:	data16 add bh,bh
   140013360:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140013366:	(bad)  
   140013367:	(bad)  
   140013368:	cmp    DWORD PTR [rsi-0x42c70002],edi
   14001336e:	(bad)  
   14001336f:	(bad)  
   140013370:	cmp    BYTE PTR [rbp-0x43c70002],bh
   140013376:	(bad)  
   140013377:	push   QWORD PTR [rdi]
   140013379:	mov    esp,0xbc37fffe
   14001337e:	(bad)  
   14001337f:	push   QWORD PTR [rsi]
   140013381:	mov    ebx,0xbb36fffe
   140013386:	(bad)  
   140013387:	inc    DWORD PTR [rdi+0x47]
   14001338a:	rex.RXB inc DWORD PTR [r8]
   14001338d:	add    BYTE PTR [rax],al
   14001338f:	add    BYTE PTR [rax],al
   140013391:	add    BYTE PTR [rax],al
   140013393:	add    BYTE PTR [rdi+0x47],al
   140013396:	rex.RXB dec r11d
   140013399:	outs   dx,BYTE PTR ds:[rsi]
   14001339a:	add    bh,bh
   14001339c:	retf   0x6d
   14001339f:	dec    edx
   1400133a1:	ins    BYTE PTR es:[rdi],dx
   1400133a2:	add    bh,bh
   1400133a4:	retf   0x6c
   1400133a7:	dec    ecx
   1400133a9:	imul   eax,DWORD PTR [rax],0xffffffff
   1400133ac:	leave  
   1400133ad:	push   0x0
   1400133af:	dec    ecx
   1400133b1:	imul   eax,DWORD PTR [rax],0x69c8ff
   1400133b7:	dec    eax
   1400133b9:	push   0x67c8ff00
   1400133be:	add    bh,bh
   1400133c0:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   1400133c6:	(bad)  
   1400133c7:	(bad)  
   1400133c8:	cmp    DWORD PTR [rsi-0x41c60002],edi
   1400133ce:	(bad)  
   1400133cf:	(bad)  
   1400133d0:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400133d6:	(bad)  
   1400133d7:	(bad)  
   1400133d8:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   1400133df:	push   QWORD PTR [rdi]
   1400133e1:	mov    esp,0xbb36fffe
   1400133e6:	(bad)  
   1400133e7:	inc    DWORD PTR [rdi+0x47]
   1400133ea:	rex.RXB inc DWORD PTR [r8]
   1400133ed:	add    BYTE PTR [rax],al
   1400133ef:	add    BYTE PTR [rax],al
   1400133f1:	add    BYTE PTR [rax],al
   1400133f3:	add    BYTE PTR [rdi+0x47],al
   1400133f6:	rex.RXB dec r11d
   1400133f9:	outs   dx,BYTE PTR ds:[rsi]
   1400133fa:	add    bh,bh
   1400133fc:	retf   
   1400133fd:	outs   dx,BYTE PTR ds:[rsi]
   1400133fe:	add    bh,bh
   140013400:	retf   0x6d
   140013403:	dec    edx
   140013405:	ins    BYTE PTR es:[rdi],dx
   140013406:	add    bh,bh
   140013408:	retf   0x6c
   14001340b:	dec    ecx
   14001340d:	imul   eax,DWORD PTR [rax],0xffffffff
   140013410:	leave  
   140013411:	push   0x0
   140013413:	dec    ecx
   140013415:	imul   eax,DWORD PTR [rax],0x69c8ff
   14001341b:	dec    eax
   14001341d:	push   0xffffffffbf3aff00
   140013422:	(bad)  
   140013423:	(bad)  
   140013424:	cmp    bh,BYTE PTR [rdi-0x41c50002]
   14001342a:	(bad)  
   14001342b:	(bad)  
   14001342c:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140013432:	(bad)  
   140013433:	(bad)  
   140013434:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14001343a:	(bad)  
   14001343b:	(bad)  
   14001343c:	cmp    BYTE PTR [rsi+rdi*8-0x143c801],bh
   140013443:	push   QWORD PTR [rdi]
   140013445:	mov    esp,0x4747fffe
   14001344a:	rex.RXB inc DWORD PTR [r8]
   14001344d:	add    BYTE PTR [rax],al
   14001344f:	add    BYTE PTR [rax],al
   140013451:	add    BYTE PTR [rax],al
   140013453:	add    BYTE PTR [rdi+0x47],al
   140013456:	rex.RXB dec r11d
   140013459:	outs   dx,DWORD PTR ds:[rsi]
   14001345a:	add    bh,bh
   14001345c:	retf   
   14001345d:	outs   dx,BYTE PTR ds:[rsi]
   14001345e:	add    bh,bh
   140013460:	retf   
   140013461:	outs   dx,BYTE PTR ds:[rsi]
   140013462:	add    bh,bh
   140013464:	retf   0x6d
   140013467:	dec    edx
   140013469:	ins    BYTE PTR es:[rdi],dx
   14001346a:	add    bh,bh
   14001346c:	retf   0x6c
   14001346f:	dec    ecx
   140013471:	imul   eax,DWORD PTR [rax],0xffffffff
   140013474:	leave  
   140013475:	push   0x0
   140013477:	dec    ecx
   140013479:	imul   eax,DWORD PTR [rax],0x69c8ff
   14001347f:	(bad)  
   140013480:	cmp    eax,eax
   140013482:	(bad)  
   140013483:	(bad)  
   140013484:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   14001348a:	(bad)  
   14001348b:	(bad)  
   14001348c:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   140013492:	(bad)  
   140013493:	(bad)  
   140013494:	cmp    DWORD PTR [rsi-0x42c70002],edi
   14001349a:	(bad)  
   14001349b:	(bad)  
   14001349c:	cmp    BYTE PTR [rbp-0x43c70002],bh
   1400134a2:	(bad)  
   1400134a3:	push   QWORD PTR [rdi]
   1400134a5:	mov    esp,0x4747fffe
   1400134aa:	rex.RXB inc DWORD PTR [r8]
   1400134ad:	add    BYTE PTR [rax],al
   1400134af:	add    BYTE PTR [rax],al
   1400134b1:	add    BYTE PTR [rax],al
   1400134b3:	add    BYTE PTR [rdi+0x47],al
   1400134b6:	rex.RXB jmp FWORD PTR [r11-0x4400ed9a]
   1400134bd:	push   0x9
   1400134bf:	dec    ebx
   1400134c1:	outs   dx,BYTE PTR ds:[rsi]
   1400134c2:	add    bh,bh
   1400134c4:	retf   
   1400134c5:	outs   dx,BYTE PTR ds:[rsi]
   1400134c6:	add    bh,bh
   1400134c8:	retf   0x6d
   1400134cb:	dec    edx
   1400134cd:	ins    BYTE PTR es:[rdi],dx
   1400134ce:	add    bh,bh
   1400134d0:	retf   0x6c
   1400134d3:	dec    ecx
   1400134d5:	imul   eax,DWORD PTR [rax],0xffffffff
   1400134d8:	leave  
   1400134d9:	push   0x0
   1400134db:	dec    ecx
   1400134dd:	imul   eax,DWORD PTR [rax],0xfec03bff
   1400134e3:	(bad)  
   1400134e4:	cmp    eax,eax
   1400134e6:	(bad)  
   1400134e7:	(bad)  
   1400134e8:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   1400134ee:	(bad)  
   1400134ef:	(bad)  
   1400134f0:	cmp    bh,BYTE PTR [rsi-0x41c60002]
   1400134f6:	(bad)  
   1400134f7:	(bad)  
   1400134f8:	cmp    DWORD PTR [rsi-0x42c70002],edi
   1400134fe:	(bad)  
   1400134ff:	(bad)  
   140013500:	cmp    ch,BYTE PTR [rsi-0x60c40019]
   140013506:	sar    bh,1
   140013508:	rex.RXB
   140013509:	rex.RXB
   14001350a:	rex.RXB inc DWORD PTR [r8]
   14001350d:	add    BYTE PTR [rax],al
   14001350f:	add    BYTE PTR [rax],al
   140013511:	add    BYTE PTR [rax],al
   140013513:	add    BYTE PTR [rdi+0x47],al
   140013516:	rex.RXB inc DWORD PTR [r15+0x47]
   14001351a:	rex.RXB inc DWORD PTR [r15+0x47]
   14001351e:	rex.RXB dec DWORD PTR [r15+0x4a]
   140013522:	rex.XB push QWORD PTR [r8+0x53]
   140013526:	xor    edi,edi
   140013528:	movabs ds:0xcaff006dcaff1661,al
   140013531:	ins    BYTE PTR es:[rdi],dx
   140013532:	add    bh,bh
   140013534:	retf   0x6c
   140013537:	dec    ecx
   140013539:	imul   eax,DWORD PTR [rax],0xffffffff
   14001353c:	leave  
   14001353d:	push   0x0
   14001353f:	(bad)  
   140013540:	cmp    al,0xc0
   140013542:	(bad)  
   140013543:	(bad)  
   140013544:	cmp    eax,eax
   140013546:	(bad)  
   140013547:	(bad)  
   140013548:	cmp    eax,eax
   14001354a:	(bad)  
   14001354b:	(bad)  
   14001354c:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140013552:	(bad)  
   140013553:	(bad)  
   140013554:	(bad)  
   140013555:	xchg   ecx,eax
   140013556:	mov    ecx,0x806c43ff
   14001355b:	inc    DWORD PTR [rsi+0x4e]
   14001355e:	push   rdx
   14001355f:	inc    DWORD PTR [rdi+0x47]
   140013562:	rex.RXB inc DWORD PTR [r15+0x47]
   140013566:	rex.RXB inc DWORD PTR [r15+0x47]
   14001356a:	rex.RXB inc DWORD PTR [r8]
	...
   140013579:	add    BYTE PTR [rax],al
   14001357b:	add    BYTE PTR [rdi+0x47],al
   14001357e:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   140013582:	rex.RXB (bad) 
   140013584:	rex.RXB
   140013585:	rex.RXB
   140013586:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140013588:	rex.RXB
   140013589:	rex.RXB
   14001358a:	rex.RXB call QWORD PTR [r15+0x4c]
   14001358e:	jmp    FWORD PTR ds:[rcx-0x3500ed9c]
   140013595:	ins    BYTE PTR es:[rdi],dx
   140013596:	add    bh,bh
   140013598:	retf   0x6c
   14001359b:	dec    ecx
   14001359d:	imul   eax,DWORD PTR [rax],0xffffffff
   1400135a0:	cmp    al,0xc0
   1400135a2:	(bad)  
   1400135a3:	(bad)  
   1400135a4:	cmp    al,0xc0
   1400135a6:	(bad)  
   1400135a7:	(bad)  
   1400135a8:	cmp    eax,eax
   1400135aa:	(bad)  
   1400135ab:	(bad)  
   1400135ac:	(bad)  
   1400135ad:	(bad)  
   1400135ae:	(bad)  
   1400135b1:	push   rsi
   1400135b2:	pop    rsi
   1400135b3:	inc    DWORD PTR [rdi+0x47]
   1400135b6:	rex.RXB inc DWORD PTR [r15+0x47]
   1400135ba:	rex.RXB scas eax,DWORD PTR es:[rdi]
   1400135bc:	rex.RXB
   1400135bd:	rex.RXB
   1400135be:	rex.RXB (bad) 
   1400135c0:	rex.RXB
   1400135c1:	rex.RXB
   1400135c2:	rex.RXB xor BYTE PTR [r8],r8b
	...
   1400135e5:	add    BYTE PTR [rax],al
   1400135e7:	add    BYTE PTR [rdi+0x47],al
   1400135ea:	rex.RXB and BYTE PTR [r15+0x47],r8b
   1400135ee:	rex.RXB scas eax,DWORD PTR es:[rdi]
   1400135f0:	rex.RXB
   1400135f1:	rex.RXB
   1400135f2:	rex.RXB jmp FWORD PTR [r8+0x51]
   1400135f6:	xor    eax,0x1f5c91ff
   1400135fb:	jmp    FWORD PTR [rcx+0x3fff1262]
   140013601:	movabs ds:0x6544ffae8b41ffd0,eax
   14001360a:	jne    0x14001360b
   14001360c:	rex.RXB
   14001360d:	rex.RXB
   14001360e:	rex.RXB inc DWORD PTR [r15+0x47]
   140013612:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140013614:	rex.RXB
   140013615:	rex.RXB
   140013616:	rex.RXB and BYTE PTR [r8],r8b
	...
   14001364d:	add    BYTE PTR [rax],al
   14001364f:	add    BYTE PTR [rdi+0x47],al
   140013652:	rex.RXB
   140013653:	rex
   140013654:	rex.RXB
   140013655:	rex.RXB
   140013656:	rex.RXB lahf 
   140013658:	rex.RXB
   140013659:	rex.RXB
   14001365a:	rex.RXB fild WORD PTR [r15+0x47]
   14001365e:	rex.RXB inc DWORD PTR [r15+0x47]
   140013662:	rex.RXB inc DWORD PTR [r15+0x47]
   140013666:	rex.RXB fild WORD PTR [r15+0x47]
   14001366a:	rex.RXB lahf 
   14001366c:	rex.RXB
   14001366d:	rex.RXB
   14001366e:	rex.RXB
   14001366f:	add    BYTE PTR [rax],al
	...
   14001368e:	add    BYTE PTR [rax],al
   140013690:	inc    ebx
   140013692:	inc    DWORD PTR [rax]
   140013694:	inc    DWORD PTR [rcx+0xfe00ff]
   14001369a:	jg     0x14001369b
   14001369c:	cld    
   14001369d:	add    BYTE PTR [rdi],bh
   14001369f:	(bad)  
   1400136a0:	clc    
   1400136a1:	add    BYTE PTR [rdi],bl
   1400136a3:	push   rax
   1400136a5:	add    BYTE PTR [rdi],cl
   1400136a7:	jmp    rax
   1400136a9:	add    BYTE PTR [rdi],al
   1400136ab:	jmp    rax
   1400136ad:	add    BYTE PTR [rdi],al
   1400136af:	inc    eax
   1400136b1:	add    BYTE PTR [rbx],al
   1400136b3:	inc    eax
   1400136b5:	add    BYTE PTR [rbx],al
   1400136b7:	inc    DWORD PTR [rax-0x7f00ff00]
   1400136bd:	add    BYTE PTR [rcx],al
   1400136bf:	inc    DWORD PTR [rax-0x7f00ff00]
   1400136c5:	add    BYTE PTR [rcx],al
   1400136c7:	inc    DWORD PTR [rax-0x7f00ff00]
   1400136cd:	add    BYTE PTR [rcx],al
   1400136cf:	inc    DWORD PTR [rax-0x7f00ff00]
   1400136d5:	add    BYTE PTR [rcx],al
   1400136d7:	inc    DWORD PTR [rax-0x7f00ff00]
   1400136dd:	add    BYTE PTR [rcx],al
   1400136df:	inc    DWORD PTR [rax-0x1f00ff00]
   1400136e5:	add    BYTE PTR [rdi],al
   1400136e7:	(bad)  
   1400136e8:	cld    
   1400136e9:	add    BYTE PTR [rdi],bh
   1400136eb:	(bad)  
   1400136ec:	inc    DWORD PTR [rax]
   1400136ee:	(bad)  
   1400136ef:	jmp    FWORD PTR [rax]
   1400136f1:	add    BYTE PTR [rax],al
   1400136f3:	add    BYTE PTR [rax+rax*1],dl
   1400136f6:	add    BYTE PTR [rax],al
   1400136f8:	sub    BYTE PTR [rax],al
   1400136fa:	add    BYTE PTR [rax],al
   1400136fc:	add    DWORD PTR [rax],eax
   1400136fe:	and    BYTE PTR [rax],al
	...
   14001373c:	rex.RXB
   14001373d:	rex.RXB
   14001373e:	rex.RXB add BYTE PTR [r15+0x47],0x47
   140013743:	add    BYTE PTR [rax],0x0
	...
   140013782:	add    BYTE PTR [rax],al
   140013784:	rex.RXB
   140013785:	rex.RXB
   140013786:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   14001378a:	rex.RXB fild WORD PTR [r14+0x4e]
   14001378e:	push   rdx
   14001378f:	dec    DWORD PTR [rdi+0x48]
   140013792:	rex.XB inc DWORD PTR [r15+0x47]
   140013796:	rex.RXB iret 
   140013798:	rex.RXB
   140013799:	rex.RXB
   14001379a:	rex.RXB xor BYTE PTR [r8],r8b
	...
   1400137cd:	add    BYTE PTR [rax],al
   1400137cf:	add    BYTE PTR [rdi+0x47],al
   1400137d2:	rex.RXB jo 0x14001381c
   1400137d5:	rex.RXB
   1400137d6:	rex.RXB inc DWORD PTR [r11+0x64]
   1400137da:	jne    0x1400137db
   1400137dc:	(bad)  
   1400137dd:	lods   al,BYTE PTR ds:[rsi]
   1400137de:	out    0xff,eax
   1400137e0:	mov    ah,0x5a
   1400137e2:	or     edi,edi
   1400137e4:	data16 rex.WR xor rax,0x474747ff
   1400137eb:	inc    DWORD PTR [rdi+0x47]
   1400137ee:	rex.RXB jo 0x1400137f1
	...
   140013819:	add    BYTE PTR [rax],al
   14001381b:	add    BYTE PTR [rdi+0x47],al
   14001381e:	rex.RXB lahf 
   140013820:	rex.RXB
   140013821:	rex.RXB
   140013822:	rex.RXB (bad) 
   140013824:	(bad)  
   140013825:	and    DWORD PTR [rbx-0x144c901],0xfeba35ff
   14001382f:	inc    ebx
   140013831:	pop    rsi
   140013832:	add    bh,bh
   140013834:	ret    
   140013835:	pop    rbp
   140013836:	add    bh,bh
   140013838:	test   DWORD PTR [rdx+0x24],edx
   14001383b:	inc    DWORD PTR [rdi+0x47]
   14001383e:	rex.RXB inc DWORD PTR [r15+0x47]
   140013842:	rex.RXB lahf 
	...
   140013868:	rex.RXB
   140013869:	rex.RXB
   14001386a:	rex.RXB lahf 
   14001386c:	rex.RXB
   14001386d:	rex.RXB
   14001386e:	rex.RXB (bad) 
   140013870:	cmp    eax,0x37ffb990
   140013875:	mov    esp,0xbb36fffe
   14001387a:	(bad)  
   14001387b:	push   QWORD PTR [rsi]
   14001387d:	mov    ebx,0x5ec4fffe
   140013882:	add    bh,bh
   140013884:	ret    
   140013885:	pop    rsi
   140013886:	add    bh,bh
   140013888:	ret    
   140013889:	pop    rbp
   14001388a:	add    bh,bh
   14001388c:	xchg   ebp,eax
   14001388d:	push   rsp
   14001388e:	sbb    edi,edi
   140013890:	rex.RXB
   140013891:	rex.RXB
   140013892:	rex.RXB inc DWORD PTR [r15+0x47]
   140013896:	rex.RXB lahf 
	...
   1400138b4:	rex.RXB
   1400138b5:	rex.RXB
   1400138b6:	rex.RXB pop QWORD PTR [r15+0x47]
   1400138ba:	rex.RXB (bad) 
   1400138bc:	ds xchg ecx,eax
   1400138be:	mov    ecx,0xfebd38ff
   1400138c3:	push   QWORD PTR [rdi]
   1400138c5:	mov    esp,0xbc37fffe
   1400138ca:	(bad)  
   1400138cb:	push   QWORD PTR [rsi]
   1400138cd:	mov    ebx,0x5fc4fffe
   1400138d2:	add    bh,bh
   1400138d4:	(bad)  
   1400138d5:	pop    rsi
   1400138d6:	add    bh,bh
   1400138d8:	ret    
   1400138d9:	pop    rsi
   1400138da:	add    bh,bh
   1400138dc:	ret    
   1400138dd:	pop    rbp
   1400138de:	add    bh,bh
   1400138e0:	xchg   ebp,eax
   1400138e1:	push   rsp
   1400138e2:	sbb    edi,edi
   1400138e4:	rex.RXB
   1400138e5:	rex.RXB
   1400138e6:	rex.RXB inc DWORD PTR [r15+0x47]
   1400138ea:	rex.RXB add BYTE PTR [r8],0x0
	...
   1400138fe:	add    BYTE PTR [rax],al
   140013900:	rex.RXB
   140013901:	rex.RXB
   140013902:	rex.RXB
   140013903:	rex
   140013904:	rex.RXB
   140013905:	rex.RXB
   140013906:	rex.RXB (bad) 
   140013908:	(bad)  
   140013909:	mov    ch,BYTE PTR [rsi-0x141c601]
   14001390f:	(bad)  
   140013910:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140013916:	(bad)  
   140013917:	push   QWORD PTR [rdi]
   140013919:	mov    esp,0xbc37fffe
   14001391e:	(bad)  
   14001391f:	inc    ebp
   140013921:	(bad)  
   140013922:	add    bh,bh
   140013924:	(bad)  
   140013925:	pop    rdi
   140013926:	add    bh,bh
   140013928:	(bad)  
   140013929:	pop    rsi
   14001392a:	add    bh,bh
   14001392c:	ret    
   14001392d:	pop    rsi
   14001392e:	add    bh,bh
   140013930:	ret    
   140013931:	pop    rbp
   140013932:	add    bh,bh
   140013934:	lea    edx,[rbx+0x1f]
   140013937:	inc    DWORD PTR [rdi+0x47]
   14001393a:	rex.RXB inc DWORD PTR [r15+0x47]
   14001393e:	rex.RXB
   14001393f:	add    BYTE PTR [rax],al
	...
   14001394e:	add    BYTE PTR [rax],al
   140013950:	rex.RXB
   140013951:	rex.RXB
   140013952:	rex.RXB fild WORD PTR [r13+r12*2+0x75]
   140013957:	(bad)  
   140013958:	cmp    bh,BYTE PTR [rdi-0x41c60002]
   14001395e:	(bad)  
   14001395f:	(bad)  
   140013960:	cmp    DWORD PTR [rsi-0x42c70002],edi
   140013966:	(bad)  
   140013967:	(bad)  
   140013968:	cmp    BYTE PTR [rbp-0x43c80002],bh
   14001396e:	(bad)  
   14001396f:	inc    ebp
   140013971:	(bad)  
   140013972:	add    bh,bh
   140013974:	(bad)
   140013977:	inc    esp
   140013979:	pop    rdi
   14001397a:	add    bh,bh
   14001397c:	(bad)  
   14001397d:	pop    rsi
   14001397e:	add    bh,bh
   140013980:	ret    
   140013981:	pop    rsi
   140013982:	add    bh,bh
   140013984:	ret    
   140013985:	pop    rbp
   140013986:	add    bh,bh
   140013988:	data16 rex.WR xor rax,0x474747ff
   14001398f:	fild   WORD PTR [rax]
	...
   140013999:	add    BYTE PTR [rax],al
   14001399b:	add    BYTE PTR [rdi+0x47],al
   14001399e:	rex.RXB (bad) 
   1400139a0:	rex.RXB
   1400139a1:	rex.RXB
   1400139a2:	rex.RXB (bad) 
   1400139a4:	cmp    eax,0x3affe7b1
   1400139a9:	mov    edi,0xbf3afffe
   1400139ae:	(bad)  
   1400139af:	(bad)  
   1400139b0:	cmp    DWORD PTR [rsi-0x41c60002],edi
   1400139b6:	(bad)  
   1400139b7:	(bad)  
   1400139b8:	cmp    BYTE PTR [rbp-0x42c70002],bh
   1400139be:	(bad)  
   1400139bf:	inc    ebp
   1400139c1:	(bad)  
   1400139c2:	add    bh,bh
   1400139c4:	(bad)
   1400139c7:	inc    ebp
   1400139c9:	(bad)  
   1400139ca:	add    bh,bh
   1400139cc:	(bad)  
   1400139cd:	pop    rdi
   1400139ce:	add    bh,bh
   1400139d0:	(bad)  
   1400139d1:	pop    rsi
   1400139d2:	add    bh,bh
   1400139d4:	ret    
   1400139d5:	pop    rsi
   1400139d6:	add    bh,bh
   1400139d8:	mov    ah,0x5a
   1400139da:	or     edi,edi
   1400139dc:	rex.RXB
   1400139dd:	rex.RXB
   1400139de:	rex.RXB inc DWORD PTR [r15+0x47]
   1400139e2:	rex.RXB (bad) 
	...
   1400139ec:	rex.RXB
   1400139ed:	rex.RXB
   1400139ee:	rex.RXB scas eax,DWORD PTR es:[rdi]
   1400139f0:	rex.R ins DWORD PTR es:[rdi],dx
   1400139f2:	cmp    bh,0x3b
   1400139f5:	sar    dh,0xff
   1400139f8:	cmp    eax,eax
   1400139fa:	(bad)  
   1400139fb:	(bad)  
   1400139fc:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140013a02:	(bad)  
   140013a03:	(bad)  
   140013a04:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140013a0a:	(bad)  
   140013a0b:	(bad)  
   140013a0c:	cmp    BYTE PTR [rbp+0x63c6fffe],bh
   140013a12:	add    bh,bh
   140013a14:	(bad)
   140013a17:	inc    ebp
   140013a19:	(bad)  
   140013a1a:	add    bh,bh
   140013a1c:	(bad)
   140013a1f:	inc    esp
   140013a21:	pop    rdi
   140013a22:	add    bh,bh
   140013a24:	(bad)  
   140013a25:	pop    rsi
   140013a26:	add    bh,bh
   140013a28:	ret    
   140013a29:	pop    rsi
   140013a2a:	add    bh,bh
   140013a2c:	outs   dx,BYTE PTR ds:[rsi]
   140013a2d:	rex.WRX xor rdi,r15
   140013a30:	rex.RXB
   140013a31:	rex.RXB
   140013a32:	rex.RXB scas eax,DWORD PTR es:[rdi]
	...
   140013a3c:	rex.RXB
   140013a3d:	rex.RXB
   140013a3e:	rex.RXB out dx,eax
   140013a40:	cwde   
   140013a41:	pop    rbp
   140013a42:	sbb    edi,edi
   140013a44:	leave  
   140013a45:	push   0x0
   140013a47:	dec    ecx
   140013a49:	imul   eax,DWORD PTR [rax],0x68c8ff
   140013a4f:	dec    eax
   140013a51:	addr32 add bh,bh
   140013a54:	(bad)  
   140013a55:	data16 add bh,bh
   140013a58:	(bad)  
   140013a59:	gs add bh,bh
   140013a5c:	(bad)  
   140013a5d:	gs add bh,bh
   140013a60:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140013a66:	(bad)  
   140013a67:	push   QWORD PTR [rdi]
   140013a69:	mov    esp,0xbc37fffe
   140013a6e:	(bad)  
   140013a6f:	push   QWORD PTR [rsi]
   140013a71:	mov    ebx,0xbb36fffe
   140013a76:	(bad)  
   140013a77:	push   QWORD PTR [rip+0x3cfffeba]        # 0x17d013937
   140013a7d:	(bad)  
   140013a7e:	mov    ecx,0x474747ff
   140013a83:	out    dx,eax
	...
   140013a8c:	rex.RXB
   140013a8d:	rex.RXB
   140013a8e:	rex.RXB jmp FWORD PTR [r9-0x3600ed9d]
   140013a95:	imul   eax,DWORD PTR [rax],0xffffffff
   140013a98:	leave  
   140013a99:	push   0x0
   140013a9b:	dec    ecx
   140013a9d:	imul   eax,DWORD PTR [rax],0x68c8ff
   140013aa3:	dec    eax
   140013aa5:	addr32 add bh,bh
   140013aa8:	(bad)  
   140013aa9:	data16 add bh,bh
   140013aac:	(bad)  
   140013aad:	gs add bh,bh
   140013ab0:	cmp    DWORD PTR [rsi-0x42c70002],edi
   140013ab6:	(bad)  
   140013ab7:	(bad)  
   140013ab8:	cmp    BYTE PTR [rbp-0x43c80002],bh
   140013abe:	(bad)  
   140013abf:	push   QWORD PTR [rdi]
   140013ac1:	mov    esp,0xbb36fffe
   140013ac6:	(bad)  
   140013ac7:	push   QWORD PTR [rsi]
   140013ac9:	mov    ebx,0x9d3afffe
   140013ace:	sar    bh,1
   140013ad0:	rex.RXB
   140013ad1:	rex.RXB
   140013ad2:	rex.RXB inc DWORD PTR [r8]
   140013ad5:	add    BYTE PTR [rax],al
   140013ad7:	add    BYTE PTR [rax],al
   140013ad9:	add    BYTE PTR [rax],al
   140013adb:	add    BYTE PTR [rdi+0x47],al
   140013ade:	rex.RXB (bad) 
   140013ae0:	mov    edx,0xcaff0968
   140013ae5:	ins    BYTE PTR es:[rdi],dx
   140013ae6:	add    bh,bh
   140013ae8:	leave  
   140013ae9:	imul   eax,DWORD PTR [rax],0xffffffff
   140013aec:	leave  
   140013aed:	push   0x0
   140013aef:	dec    ecx
   140013af1:	imul   eax,DWORD PTR [rax],0x68c8ff
   140013af7:	dec    eax
   140013af9:	addr32 add bh,bh
   140013afc:	(bad)  
   140013afd:	data16 add bh,bh
   140013b00:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140013b06:	(bad)  
   140013b07:	(bad)  
   140013b08:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140013b0e:	(bad)  
   140013b0f:	push   QWORD PTR [rdi]
   140013b11:	mov    esp,0xbc37fffe
   140013b16:	(bad)  
   140013b17:	push   QWORD PTR [rsi]
   140013b19:	mov    ebx,0xad38fffe
   140013b1e:	out    0xff,eax
   140013b20:	rex.RXB
   140013b21:	rex.RXB
   140013b22:	rex.RXB inc DWORD PTR [r8]
   140013b25:	add    BYTE PTR [rax],al
   140013b27:	add    BYTE PTR [rax],al
   140013b29:	add    BYTE PTR [rax],al
   140013b2b:	add    BYTE PTR [rdi+0x47],al
   140013b2e:	rex.RXB dec r11d
   140013b31:	ins    DWORD PTR es:[rdi],dx
   140013b32:	add    bh,bh
   140013b34:	retf   0x6d
   140013b37:	dec    edx
   140013b39:	ins    BYTE PTR es:[rdi],dx
   140013b3a:	add    bh,bh
   140013b3c:	leave  
   140013b3d:	imul   eax,DWORD PTR [rax],0xffffffff
   140013b40:	leave  
   140013b41:	push   0x0
   140013b43:	dec    ecx
   140013b45:	imul   eax,DWORD PTR [rax],0x68c8ff
   140013b4b:	dec    eax
   140013b4d:	addr32 add bh,bh
   140013b50:	cmp    bh,BYTE PTR [rdi-0x41c60002]
   140013b56:	(bad)  
   140013b57:	(bad)  
   140013b58:	cmp    DWORD PTR [rsi-0x42c70002],edi
   140013b5e:	(bad)  
   140013b5f:	(bad)  
   140013b60:	cmp    BYTE PTR [rbp-0x43c80002],bh
   140013b66:	(bad)  
   140013b67:	push   QWORD PTR [rdi]
   140013b69:	mov    esp,0xbb36fffe
   140013b6e:	(bad)  
   140013b6f:	inc    DWORD PTR [rdi+0x47]
   140013b72:	rex.RXB inc DWORD PTR [r8]
   140013b75:	add    BYTE PTR [rax],al
   140013b77:	add    BYTE PTR [rax],al
   140013b79:	add    BYTE PTR [rax],al
   140013b7b:	add    BYTE PTR [rdi+0x47],al
   140013b7e:	rex.RXB dec r11d
   140013b81:	outs   dx,BYTE PTR ds:[rsi]
   140013b82:	add    bh,bh
   140013b84:	retf   
   140013b85:	ins    DWORD PTR es:[rdi],dx
   140013b86:	add    bh,bh
   140013b88:	retf   0x6d
   140013b8b:	dec    edx
   140013b8d:	ins    BYTE PTR es:[rdi],dx
   140013b8e:	add    bh,bh
   140013b90:	leave  
   140013b91:	imul   eax,DWORD PTR [rax],0xffffffff
   140013b94:	leave  
   140013b95:	push   0x0
   140013b97:	dec    ecx
   140013b99:	imul   eax,DWORD PTR [rax],0x68c8ff
   140013b9f:	(bad)  
   140013ba0:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140013ba6:	(bad)  
   140013ba7:	(bad)  
   140013ba8:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140013bae:	(bad)  
   140013baf:	(bad)  
   140013bb0:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140013bb6:	(bad)  
   140013bb7:	push   QWORD PTR [rdi]
   140013bb9:	mov    esp,0xbc37fffe
   140013bbe:	(bad)  
   140013bbf:	inc    DWORD PTR [rdi+0x47]
   140013bc2:	rex.RXB inc DWORD PTR [r8]
   140013bc5:	add    BYTE PTR [rax],al
   140013bc7:	add    BYTE PTR [rax],al
   140013bc9:	add    BYTE PTR [rax],al
   140013bcb:	add    BYTE PTR [rdi+0x47],al
   140013bce:	rex.RXB dec r11d
   140013bd1:	outs   dx,DWORD PTR ds:[rsi]
   140013bd2:	add    bh,bh
   140013bd4:	retf   
   140013bd5:	outs   dx,BYTE PTR ds:[rsi]
   140013bd6:	add    bh,bh
   140013bd8:	retf   
   140013bd9:	ins    DWORD PTR es:[rdi],dx
   140013bda:	add    bh,bh
   140013bdc:	retf   0x6d
   140013bdf:	dec    edx
   140013be1:	ins    BYTE PTR es:[rdi],dx
   140013be2:	add    bh,bh
   140013be4:	leave  
   140013be5:	imul   eax,DWORD PTR [rax],0xffffffff
   140013be8:	leave  
   140013be9:	push   0x0
   140013beb:	dec    ecx
   140013bed:	imul   eax,DWORD PTR [rax],0xfec03bff
   140013bf3:	(bad)  
   140013bf4:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140013bfa:	(bad)  
   140013bfb:	(bad)  
   140013bfc:	cmp    DWORD PTR [rsi-0x41c60002],edi
   140013c02:	(bad)  
   140013c03:	(bad)  
   140013c04:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140013c0a:	(bad)  
   140013c0b:	push   QWORD PTR [rdi]
   140013c0d:	mov    esp,0x4747fffe
   140013c12:	rex.RXB inc DWORD PTR [r8]
   140013c15:	add    BYTE PTR [rax],al
   140013c17:	add    BYTE PTR [rdi+0x47],al
   140013c1a:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140013c1e:	rex.RXB inc DWORD PTR [r15+0x47]
   140013c22:	rex.RXB call FWORD PTR [r8+0x4c]
   140013c26:	ds (bad) 
   140013c28:	jns    0x140013c80
   140013c2a:	sub    al,0xff
   140013c2c:	movabs ds:0xcaff006dcaff1661,al
   140013c35:	ins    BYTE PTR es:[rdi],dx
   140013c36:	add    bh,bh
   140013c38:	leave  
   140013c39:	imul   eax,DWORD PTR [rax],0xffffffff
   140013c3c:	leave  
   140013c3d:	push   0x0
   140013c3f:	(bad)  
   140013c40:	cmp    eax,eax
   140013c42:	(bad)  
   140013c43:	(bad)  
   140013c44:	cmp    eax,eax
   140013c46:	(bad)  
   140013c47:	(bad)  
   140013c48:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140013c4e:	(bad)  
   140013c4f:	(bad)  
   140013c50:	ds cdq 
   140013c52:	(bad)  
   140013c55:	je     0x140013be3
   140013c57:	inc    DWORD PTR [rbp+0x56]
   140013c5a:	pop    rsi
   140013c5b:	inc    DWORD PTR [rdi+0x47]
   140013c5e:	rex.RXB inc DWORD PTR [r15+0x47]
   140013c62:	rex.RXB inc DWORD PTR [r8]
   140013c65:	add    BYTE PTR [rax],al
   140013c67:	add    BYTE PTR [rdi+0x47],al
   140013c6a:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140013c6e:	rex.RXB
   140013c6f:	rex
   140013c70:	rex.RXB
   140013c71:	rex.RXB
   140013c72:	rex.RXB
   140013c73:	rex
   140013c74:	rex.RXB
   140013c75:	rex.RXB
   140013c76:	rex.RXB jo 0x140013cc0
   140013c79:	rex.RXB
   140013c7a:	rex.RXB mov r15d,0xff474747
   140013c80:	push   rdi
   140013c81:	rex.WR
   140013c82:	jmp    FWORD PTR ds:[rcx-0x3500ed9d]
   140013c89:	ins    BYTE PTR es:[rdi],dx
   140013c8a:	add    bh,bh
   140013c8c:	leave  
   140013c8d:	imul   eax,DWORD PTR [rax],0xffffffff
   140013c90:	cmp    al,0xc0
   140013c92:	(bad)  
   140013c93:	(bad)  
   140013c94:	cmp    eax,eax
   140013c96:	(bad)  
   140013c97:	(bad)  
   140013c98:	movabs ds:0x4747ff5e5645ffd0,al
   140013ca2:	rex.RXB inc DWORD PTR [r15+0x47]
   140013ca6:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140013ca8:	rex.RXB
   140013ca9:	rex.RXB
   140013caa:	rex.RXB jo 0x140013cf4
   140013cad:	rex.RXB
   140013cae:	rex.RXB
   140013caf:	rex
   140013cb0:	rex.RXB
   140013cb1:	rex.RXB
   140013cb2:	rex.RXB
   140013cb3:	add    BYTE PTR [rax],al
	...
   140013cca:	add    BYTE PTR [rax],al
   140013ccc:	rex.RXB
   140013ccd:	rex.RXB
   140013cce:	rex.RXB and BYTE PTR [r15+0x47],r8b
   140013cd2:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140013cd4:	rex.RXB
   140013cd5:	rex.RXB
   140013cd6:	rex.RXB (bad) 
   140013cd8:	js     0x140013d2f
   140013cda:	sub    al,0xff
   140013cdc:	test   eax,0x3fff1263
   140013ce1:	movabs ds:0x4747ff8c7443ffd0,eax
   140013cea:	rex.RXB inc DWORD PTR [r15+0x47]
   140013cee:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140013cf0:	rex.RXB
   140013cf1:	rex.RXB
   140013cf2:	rex.RXB and BYTE PTR [r8],r8b
	...
   140013d21:	add    BYTE PTR [rax],al
   140013d23:	add    BYTE PTR [rdi+0x47],al
   140013d26:	rex.RXB push r8
   140013d28:	rex.RXB
   140013d29:	rex.RXB
   140013d2a:	rex.RXB fild WORD PTR [r15+0x47]
   140013d2e:	rex.RXB inc DWORD PTR [r15+0x47]
   140013d32:	rex.RXB inc DWORD PTR [r15+0x47]
   140013d36:	rex.RXB fild WORD PTR [r15+0x47]
   140013d3a:	rex.RXB push r8
	...
   140013d58:	call   FWORD PTR [rdi+0x7fefff0]
   140013d5e:	lock (bad) 
   140013d60:	cld    
   140013d61:	add    esi,eax
   140013d63:	(bad)  
   140013d64:	clc    
   140013d65:	add    eax,esi
   140013d67:	push   rax
   140013d69:	add    al,dh
   140013d6b:	jmp    rax
   140013d6d:	add    BYTE PTR [rax-0x1],dh
   140013d70:	rol    BYTE PTR [rax],0x30
   140013d73:	inc    eax
   140013d75:	add    BYTE PTR [rax],dh
   140013d77:	add    BYTE PTR [rax-0x7ffff000],al
   140013d7d:	add    BYTE PTR [rax],dl
   140013d7f:	inc    DWORD PTR [rax-0x7f00f000]
   140013d85:	add    BYTE PTR [rax],dl
   140013d87:	inc    DWORD PTR [rax-0x7f00f000]
   140013d8d:	add    BYTE PTR [rax],dl
   140013d8f:	inc    DWORD PTR [rax-0x7f00f000]
   140013d95:	add    BYTE PTR [rax],dl
   140013d97:	inc    DWORD PTR [rax]
   140013d99:	add    BYTE PTR [rax],dl
   140013d9b:	inc    DWORD PTR [rax]
   140013d9d:	add    BYTE PTR [rax],dl
   140013d9f:	(bad)  
   140013da0:	clc    
   140013da1:	add    eax,esi
   140013da3:	(bad)  
   140013da4:	inc    BYTE PTR [rdi]
   140013da6:	lock jmp FWORD PTR [rax]
   140013da9:	add    BYTE PTR [rax],al
   140013dab:	add    BYTE PTR [rax],dl
   140013dad:	add    BYTE PTR [rax],al
   140013daf:	add    BYTE PTR [rax],ah
   140013db1:	add    BYTE PTR [rax],al
   140013db3:	add    BYTE PTR [rcx],al
   140013db5:	add    BYTE PTR [rax],ah
	...
   140013deb:	add    BYTE PTR [rdi+0x47],al
   140013dee:	rex.RXB (bad) 
   140013df0:	rex.RXB
   140013df1:	rex.RXB
   140013df2:	rex.RXB (bad) 
	...
   140013e24:	rex.RXB
   140013e25:	rex.RXB
   140013e26:	rex.RXB adc BYTE PTR [r15+0x47],r8b
   140013e2a:	rex.RXB mov r15d,0xff474747
   140013e30:	rex.RXB
   140013e31:	rex.RXB
   140013e32:	rex.RXB inc DWORD PTR [r15+0x47]
   140013e36:	rex.RXB mov r15d,0x10474747
	...
   140013e60:	rex.RXB
   140013e61:	rex.RXB
   140013e62:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   140013e66:	rex.RXB out dx,eax
   140013e68:	rex.RB push r14
   140013e6a:	pop    rsi
   140013e6b:	(bad)  
   140013e6c:	cmp    bl,BYTE PTR [rbp+0x58a4ffd0]
   140013e72:	adc    bh,bh
   140013e74:	push   rdi
   140013e75:	rex.WX
   140013e76:	inc    DWORD PTR ds:[rdi+0x47]
   140013e7a:	rex.RXB out dx,eax
   140013e7c:	rex.RXB
   140013e7d:	rex.RXB
   140013e7e:	rex.RXB xor BYTE PTR [r8],r8b
	...
   140013e99:	add    BYTE PTR [rax],al
   140013e9b:	add    BYTE PTR [rdi+0x47],al
   140013e9e:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   140013ea2:	rex.RXB out dx,eax
   140013ea4:	rex.X ins BYTE PTR es:[rdi],dx
   140013ea6:	cmp    bh,0x37
   140013ea9:	mov    ah,0xf3
   140013eab:	push   QWORD PTR [rsi]
   140013ead:	mov    ebx,0x5ec4fffe
   140013eb2:	add    bh,bh
   140013eb4:	mov    ebx,0x6eff045c
   140013eb9:	rex.WRX xor rdi,r15
   140013ebc:	rex.RXB
   140013ebd:	rex.RXB
   140013ebe:	rex.RXB out dx,eax
   140013ec0:	rex.RXB
   140013ec1:	rex.RXB
   140013ec2:	rex.RXB xor BYTE PTR [r8],r8b
	...
   140013ed5:	add    BYTE PTR [rax],al
   140013ed7:	add    BYTE PTR [rdi+0x47],al
   140013eda:	rex.RXB xor BYTE PTR [r15+0x47],r8b
   140013ede:	rex.RXB out dx,eax
   140013ee0:	rex.X jae 0x140013e6f
   140013ee3:	(bad)  
   140013ee4:	cmp    BYTE PTR [rbp-0x43c80002],bh
   140013eea:	(bad)  
   140013eeb:	push   QWORD PTR [rsi]
   140013eed:	mov    ebx,0x5fc4fffe
   140013ef2:	add    bh,bh
   140013ef4:	(bad)  
   140013ef5:	pop    rsi
   140013ef6:	add    bh,bh
   140013ef8:	ret    
   140013ef9:	pop    rbp
   140013efa:	add    bh,bh
   140013efc:	jbe    0x140013f4d
   140013efe:	sub    al,0xff
   140013f00:	rex.RXB
   140013f01:	rex.RXB
   140013f02:	rex.RXB out dx,eax
   140013f04:	rex.RXB
   140013f05:	rex.RXB
   140013f06:	rex.RXB xor BYTE PTR [r8],r8b
	...
   140013f15:	add    BYTE PTR [rax],al
   140013f17:	add    BYTE PTR [rdi+0x47],al
   140013f1a:	rex.RXB iret 
   140013f1c:	rex.RB pop r13
   140013f1e:	imul   edi,edi,0xfffebe39
   140013f24:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140013f2a:	(bad)  
   140013f2b:	push   QWORD PTR [rdi]
   140013f2d:	mov    esp,0x60c5fffe
   140013f32:	add    bh,bh
   140013f34:	(bad)  
   140013f35:	pop    rdi
   140013f36:	add    bh,bh
   140013f38:	(bad)  
   140013f39:	pop    rsi
   140013f3a:	add    bh,bh
   140013f3c:	ret    
   140013f3d:	pop    rbp
   140013f3e:	add    bh,bh
   140013f40:	pop    rsi
   140013f41:	rex.WXB cmp dil,r15b
   140013f44:	rex.RXB
   140013f45:	rex.RXB
   140013f46:	rex.RXB iret 
	...
   140013f54:	rex.RXB
   140013f55:	rex.RXB
   140013f56:	rex.RXB (bad) 
   140013f58:	rex.RXB
   140013f59:	rex.RXB
   140013f5a:	rex.RXB (bad) 
   140013f5c:	cmp    eax,0x3affdca9
   140013f61:	mov    edi,0xbe39fffe
   140013f66:	(bad)  
   140013f67:	(bad)  
   140013f68:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140013f6e:	(bad)  
   140013f6f:	inc    ebp
   140013f71:	(bad)  
   140013f72:	add    bh,bh
   140013f74:	(bad)
   140013f77:	inc    esp
   140013f79:	pop    rdi
   140013f7a:	add    bh,bh
   140013f7c:	(bad)  
   140013f7d:	pop    rsi
   140013f7e:	add    bh,bh
   140013f80:	lods   al,BYTE PTR ds:[rsi]
   140013f81:	pop    rcx
   140013f82:	or     eax,0x474747ff
   140013f87:	inc    DWORD PTR [rdi+0x47]
   140013f8a:	rex.RXB (bad) 
	...
   140013f94:	rex.RXB
   140013f95:	rex.RXB
   140013f96:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140013f98:	rex.XB je 0x140013f27
   140013f9b:	(bad)  
   140013f9c:	cmp    eax,eax
   140013f9e:	(bad)  
   140013f9f:	(bad)  
   140013fa0:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   140013fa6:	(bad)  
   140013fa7:	(bad)  
   140013fa8:	cmp    DWORD PTR [rsi-0x42c70002],edi
   140013fae:	(bad)  
   140013faf:	inc    esi
   140013fb1:	movsxd eax,DWORD PTR [rax]
   140013fb3:	inc    ebp
   140013fb5:	(bad)  
   140013fb6:	add    bh,bh
   140013fb8:	(bad)
   140013fbb:	inc    esp
   140013fbd:	pop    rdi
   140013fbe:	add    bh,bh
   140013fc0:	(bad)  
   140013fc1:	pop    rsi
   140013fc2:	add    bh,bh
   140013fc4:	jbe    0x140014015
   140013fc6:	sub    al,0xff
   140013fc8:	rex.RXB
   140013fc9:	rex.RXB
   140013fca:	rex.RXB scas eax,DWORD PTR es:[rdi]
	...
   140013fd4:	rex.RXB
   140013fd5:	rex.RXB
   140013fd6:	rex.RXB jmp QWORD PTR [r9-0x3600e9a1]
   140013fdd:	imul   eax,DWORD PTR [rax],0x69c8ff
   140013fe3:	dec    eax
   140013fe5:	addr32 add bh,bh
   140013fe8:	(bad)  
   140013fe9:	data16 add bh,bh
   140013fec:	(bad)  
   140013fed:	gs add bh,bh
   140013ff0:	cmp    BYTE PTR [rbp-0x42c70002],bh
   140013ff6:	(bad)  
   140013ff7:	push   QWORD PTR [rdi]
   140013ff9:	mov    esp,0xbb36fffe
   140013ffe:	(bad)  
   140013fff:	push   QWORD PTR [rsi]
   140014001:	mov    ebx,0x963bfffe
   140014006:	(bad)  
   140014009:	rex.RXB
   14001400a:	rex.RXB inc DWORD PTR [r8]
   14001400d:	add    BYTE PTR [rax],al
   14001400f:	add    BYTE PTR [rax],al
   140014011:	add    BYTE PTR [rax],al
   140014013:	add    BYTE PTR [rdi+0x47],al
   140014016:	rex.RXB jmp FWORD PTR [r9-0x3600ed9d]
   14001401d:	imul   eax,DWORD PTR [rax],0xffffffff
   140014020:	leave  
   140014021:	imul   eax,DWORD PTR [rax],0x69c8ff
   140014027:	dec    eax
   140014029:	addr32 add bh,bh
   14001402c:	(bad)  
   14001402d:	data16 add bh,bh
   140014030:	cmp    DWORD PTR [rsi-0x42c70002],edi
   140014036:	(bad)  
   140014037:	(bad)  
   140014038:	cmp    BYTE PTR [rbp-0x43c80002],bh
   14001403e:	(bad)  
   14001403f:	push   QWORD PTR [rsi]
   140014041:	mov    ebx,0x9e3afffe
   140014046:	sar    bh,1
   140014048:	rex.RXB
   140014049:	rex.RXB
   14001404a:	rex.RXB inc DWORD PTR [r8]
   14001404d:	add    BYTE PTR [rax],al
   14001404f:	add    BYTE PTR [rax],al
   140014051:	add    BYTE PTR [rax],al
   140014053:	add    BYTE PTR [rdi+0x47],al
   140014056:	rex.RXB dec r10d
   140014059:	ins    DWORD PTR es:[rdi],dx
   14001405a:	add    bh,bh
   14001405c:	retf   0x6c
   14001405f:	dec    ecx
   140014061:	imul   eax,DWORD PTR [rax],0xffffffff
   140014064:	leave  
   140014065:	imul   eax,DWORD PTR [rax],0x69c8ff
   14001406b:	dec    eax
   14001406d:	addr32 add bh,bh
   140014070:	cmp    bh,BYTE PTR [rdi-0x41c60002]
   140014076:	(bad)  
   140014077:	(bad)  
   140014078:	cmp    BYTE PTR [rbp-0x42c70002],bh
   14001407e:	(bad)  
   14001407f:	push   QWORD PTR [rdi]
   140014081:	mov    esp,0xbb36fffe
   140014086:	(bad)  
   140014087:	inc    DWORD PTR [rdi+0x47]
   14001408a:	rex.RXB inc DWORD PTR [r8]
   14001408d:	add    BYTE PTR [rax],al
   14001408f:	add    BYTE PTR [rax],al
   140014091:	add    BYTE PTR [rax],al
   140014093:	add    BYTE PTR [rdi+0x47],al
   140014096:	rex.RXB dec r11d
   140014099:	outs   dx,BYTE PTR ds:[rsi]
   14001409a:	add    bh,bh
   14001409c:	retf   0x6d
   14001409f:	dec    edx
   1400140a1:	ins    BYTE PTR es:[rdi],dx
   1400140a2:	add    bh,bh
   1400140a4:	leave  
   1400140a5:	imul   eax,DWORD PTR [rax],0xffffffff
   1400140a8:	leave  
   1400140a9:	imul   eax,DWORD PTR [rax],0x69c8ff
   1400140af:	(bad)  
   1400140b0:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   1400140b6:	(bad)  
   1400140b7:	(bad)  
   1400140b8:	cmp    DWORD PTR [rsi-0x42c70002],edi
   1400140be:	(bad)  
   1400140bf:	(bad)  
   1400140c0:	cmp    BYTE PTR [rbp-0x43c80002],bh
   1400140c6:	(bad)  
   1400140c7:	inc    DWORD PTR [rdi+0x47]
   1400140ca:	rex.RXB inc DWORD PTR [r8]
   1400140cd:	add    BYTE PTR [rax],al
   1400140cf:	add    BYTE PTR [rax],al
   1400140d1:	add    BYTE PTR [rax],al
   1400140d3:	add    BYTE PTR [rdi+0x47],al
   1400140d6:	rex.RXB dec DWORD PTR [r9-0x5500dba5]
   1400140dd:	fs adc bh,bh
   1400140e0:	retf   0x6d
   1400140e3:	dec    edx
   1400140e5:	ins    BYTE PTR es:[rdi],dx
   1400140e6:	add    bh,bh
   1400140e8:	leave  
   1400140e9:	imul   eax,DWORD PTR [rax],0xffffffff
   1400140ec:	leave  
   1400140ed:	imul   eax,DWORD PTR [rax],0xfec03bff
   1400140f3:	(bad)  
   1400140f4:	cmp    bh,BYTE PTR [rdi-0x40c50002]
   1400140fa:	(bad)  
   1400140fb:	(bad)  
   1400140fc:	cmp    DWORD PTR [rsi-0x5fc30002],edi
   140014102:	sar    bh,1
   140014104:	(bad)  
   140014105:	(bad)  
   140014106:	movabs ds:0xff474747ff,eax
   14001410f:	add    BYTE PTR [rax],al
   140014111:	add    BYTE PTR [rax],al
   140014113:	add    BYTE PTR [rdi+0x47],al
   140014116:	rex.RXB mov r15d,0xcf474747
   14001411c:	rex.RXB
   14001411d:	rex.RXB
   14001411e:	rex.RXB call FWORD PTR [r8+0x4c]
   140014122:	call   FWORD PTR ds:[rcx-0x3500e4a1]
   140014129:	ins    BYTE PTR es:[rdi],dx
   14001412a:	add    bh,bh
   14001412c:	leave  
   14001412d:	imul   eax,DWORD PTR [rax],0xffffffff
   140014130:	cmp    al,0xc0
   140014132:	(bad)  
   140014133:	(bad)  
   140014134:	cmp    eax,eax
   140014136:	(bad)  
   140014137:	(bad)  
   140014138:	(bad)  
   140014139:	xchg   edx,eax
   14001413a:	mov    ecx,0x5e5645ff
   14001413f:	inc    DWORD PTR [rdi+0x47]
   140014142:	rex.RXB inc DWORD PTR [r15+0x47]
   140014146:	rex.RXB iret 
   140014148:	rex.RXB
   140014149:	rex.RXB
   14001414a:	rex.RXB mov r15d,0x0
	...
   14001415c:	rex.RXB
   14001415d:	rex.RXB
   14001415e:	rex.RXB and BYTE PTR [r15+0x47],r8b
   140014162:	rex.RXB lahf 
   140014164:	rex.RXB
   140014165:	rex.RXB
   140014166:	rex.RXB jmp FWORD PTR [r8+0x50]
   14001416a:	xor    eax,0x1660a1ff
   14001416f:	inc    DWORD PTR [rax-0x65]
   140014172:	(bad)  
   140014175:	gs jne 0x140014177
   140014178:	rex.RXB
   140014179:	rex.RXB
   14001417a:	rex.RXB inc DWORD PTR [r15+0x47]
   14001417e:	rex.RXB lahf 
   140014180:	rex.RXB
   140014181:	rex.RXB
   140014182:	rex.RXB and BYTE PTR [r8],r8b
	...
   1400141a1:	add    BYTE PTR [rax],al
   1400141a3:	add    BYTE PTR [rdi+0x47],al
   1400141a6:	rex.RXB
   1400141a7:	rex
   1400141a8:	rex.RXB
   1400141a9:	rex.RXB
   1400141aa:	rex.RXB mov r15d,0xff474747
   1400141b0:	rex.RXB
   1400141b1:	rex.RXB
   1400141b2:	rex.RXB inc DWORD PTR [r15+0x47]
   1400141b6:	rex.RXB mov r15d,0x30474747
	...
   1400141d0:	(bad)  
   1400141d1:	jg     0x1400141d1
   1400141d3:	(bad)  
   1400141d4:	clc    
   1400141d5:	(bad)  
   1400141d6:	out    0xff,eax
   1400141d8:	lock cmova edi,edi
   1400141dc:	loopne 0x1400141e5
   1400141de:	add    BYTE PTR [rax],al
   1400141e0:	rol    BYTE PTR [rbx],0x0
   1400141e3:	add    al,al
   1400141e5:	add    eax,DWORD PTR [rdi-0x1]
   1400141e8:	add    BYTE PTR [rcx],0x0
   1400141eb:	inc    DWORD PTR [rax-0x7f00ffff]
   1400141f1:	add    DWORD PTR [rax],eax
   1400141f3:	inc    DWORD PTR [rax-0x7f00ffff]
   1400141f9:	add    DWORD PTR [rax],eax
   1400141fb:	inc    DWORD PTR [rax-0x7f00ffff]
   140014201:	add    DWORD PTR [rax],eax
   140014203:	inc    DWORD PTR [rax-0x1f00ffff]
   140014209:	(bad)  
   14001420a:	(bad)  
   14001420b:	(bad)  
   14001420c:	clc    
   14001420d:	(bad)  
   14001420e:	(bad)  
   14001420f:	inc    DWORD PTR [rax]
   140014211:	add    BYTE PTR [rcx],al
   140014213:	add    BYTE PTR [rax],cl
   140014215:	add    BYTE PTR [rax],al
   140014217:	add    BYTE PTR [rax],al
   140014219:	add    BYTE PTR [rcx],al
   14001421b:	add    BYTE PTR [rax],ah
   14001421d:	add    BYTE PTR [rcx+0x100001e],ch
   140014223:	add    BYTE PTR [rax+0x40],al
   140014226:	add    BYTE PTR [rax],al
   140014228:	add    DWORD PTR [rax],eax
   14001422a:	and    BYTE PTR [rax],al
   14001422c:	sub    BYTE PTR [rdx+0x0],al
   14001422f:	add    BYTE PTR [rdx],al
   140014231:	add    BYTE PTR [rax],dh
   140014233:	xor    BYTE PTR [rax],al
   140014235:	add    BYTE PTR [rcx],al
   140014237:	add    BYTE PTR [rax],ah
   140014239:	add    BYTE PTR [rax+0x3000025],ch
   14001423f:	add    BYTE PTR [rax],ch
   140014241:	sub    BYTE PTR [rax],al
   140014243:	add    BYTE PTR [rcx],al
   140014245:	add    BYTE PTR [rax],ah
   140014247:	add    BYTE PTR [rax+0x1a],ch
   14001424a:	add    BYTE PTR [rax],al
   14001424c:	add    al,0x0
   14001424e:	and    BYTE PTR [rax],ah
   140014250:	add    BYTE PTR [rax],al
   140014252:	add    DWORD PTR [rax],eax
   140014254:	and    BYTE PTR [rax],al
   140014256:	test   al,0x10
   140014258:	add    BYTE PTR [rax],al
   14001425a:	add    eax,0x181800
   14001425f:	add    BYTE PTR [rcx],al
   140014261:	add    BYTE PTR [rax],ah
   140014263:	add    BYTE PTR [rax+0x6000009],cl
   140014269:	add    BYTE PTR [rsp+rdx*1],dl
   14001426c:	add    BYTE PTR [rax],al
   14001426e:	add    DWORD PTR [rax],eax
   140014270:	and    BYTE PTR [rax],al
   140014272:	mov    eax,0x7000006
   140014277:	add    BYTE PTR [rax],dl
   140014279:	adc    BYTE PTR [rax],al
   14001427b:	add    BYTE PTR [rcx],al
   14001427d:	add    BYTE PTR [rax],ah
   14001427f:	add    BYTE PTR [rax+0x4],ch
   140014282:	add    BYTE PTR [rax],al
   140014284:	or     BYTE PTR [rax],al
   140014286:	add    BYTE PTR [rax],al
   140014288:	int    0xfe
   14001428a:	int    0xfe
   14001428c:	rol    BYTE PTR [rax],1
   14001428e:	add    BYTE PTR [rax],al
   140014290:	add    BYTE PTR [rax],al
   140014292:	add    DWORD PTR [rax],eax
   140014294:	add    BYTE PTR [rax],al
   140014296:	add    BYTE PTR [rax],al
   140014298:	adc    DWORD PTR [rax],eax
   14001429a:	add    BYTE PTR [rax],al
   14001429c:	add    BYTE PTR [rax],al
   14001429e:	add    BYTE PTR [rax],al
   1400142a0:	add    al,BYTE PTR [rax]
   1400142a2:	add    BYTE PTR [rax],al
   1400142a4:	test   eax,0x84ebebbf
   1400142a9:	(bad)  
   1400142aa:	push   rdi
   1400142ab:	xor    ebp,DWORD PTR [rip+0x62eba9b7]        # 0x1a2ecec68
   1400142b1:	out    0xf6,al
   1400142b3:	push   0xffffffffffffffc3
   1400142b5:	stos   BYTE PTR es:[rdi],al
   1400142b6:	stos   BYTE PTR es:[rdi],al
   1400142b7:	xor    DWORD PTR [r14-0x37b6c4d],ebx
   1400142be:	rex.WX movabs rcx,0x30eca748
	...
   1400142dc:	mov    BYTE PTR [rax],al
   1400142de:	add    BYTE PTR [rax],al
   1400142e0:	(bad)  
   1400142e1:	add    BYTE PTR [rax],al
   1400142e3:	add    BYTE PTR [rax+0x10000000],bl
   1400142e9:	add    BYTE PTR [rax],al
   1400142eb:	add    BYTE PTR [rax+0xe000000],ch
   1400142f1:	add    BYTE PTR [rax],al
   1400142f3:	add    BYTE PTR [rax+0x8000000],bh
	...
   140014301:	add    BYTE PTR [rax],al
   140014303:	add    al,al
   140014305:	add    BYTE PTR [rax],al
   140014307:	add    BYTE PTR [rax+rax*1],cl
   14001430a:	add    BYTE PTR [rax],al
   14001430c:	add    BYTE PTR [rax],al
   14001430e:	add    BYTE PTR [rax],al
   140014310:	rex.WRB add BYTE PTR [r13+0x0],r10b
   140014314:	rex.WB add BYTE PTR [r8],al
	...
   14001431f:	add    BYTE PTR [rbx],al
   140014321:	add    BYTE PTR [rax],al
   140014323:	add    BYTE PTR [rsi],cl
   140014325:	add    BYTE PTR [rax],al
   140014327:	add    BYTE PTR [rax],dl
   140014329:	add    BYTE PTR [rax],al
   14001432b:	add    BYTE PTR [rax],bl
   14001432d:	add    BYTE PTR [rax],al
   14001432f:	add    BYTE PTR [rbp+0x0],cl
   140014332:	push   rbp
   140014333:	add    BYTE PTR [rcx+0x0],cl
	...
   14001433e:	add    BYTE PTR [rax],al
   140014340:	(bad)  
   140014341:	add    BYTE PTR [rax],al
   140014343:	add    BYTE PTR [rax],dl
   140014345:	add    BYTE PTR [rax],al
   140014347:	add    BYTE PTR [rbp+0x0],ah
   14001434a:	outs   dx,BYTE PTR ds:[rsi]
   14001434b:	add    BYTE PTR [rip+0x53005500],ch        # 0x193019851
   140014351:	add    BYTE PTR [rax],al
   140014353:	add    BYTE PTR [rax],al
   140014355:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140015000 <.reloc>:
   140015000:	add    BYTE PTR [rax],dh
   140015002:	add    BYTE PTR [rax],al
   140015004:	sub    BYTE PTR [rax],al
   140015006:	add    BYTE PTR [rax],al
   140015008:	call   0x140a340ae
   14001500d:	movabs ds:0xa270a228a220a208,al
   140015016:	js     0x140014fba
   140015018:	pop    rax
   140015019:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001501a:	push   0x38a478a4
   14001501f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015020:	push   rax
   140015021:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015022:	pop    rax
   140015023:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015024:	(bad)  
   140015025:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...
