
852b7a4831b702ec280c32fdcfd3d1cbfe3ab24884207d811933191d5162bf99.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x28
   140001004:	call   0x140019ab0
   140001009:	call   0x14001aac0
   14000100e:	mov    QWORD PTR [rip+0x5250b],rax        # 0x140053520
   140001015:	test   rax,rax
   140001018:	je     0x140001064
   14000101a:	nop    WORD PTR [rax+rax*1+0x0]
   140001020:	mov    rcx,QWORD PTR [rip+0x52501]        # 0x140053528
   140001027:	test   rcx,rcx
   14000102a:	je     0x140001038
   14000102c:	call   0x140001940
   140001031:	mov    rax,QWORD PTR [rip+0x524e8]        # 0x140053520
   140001038:	mov    rcx,rax
   14000103b:	mov    QWORD PTR [rip+0x524e6],rax        # 0x140053528
   140001042:	call   0x140001fb0
   140001047:	mov    rcx,QWORD PTR [rip+0x524d2]        # 0x140053520
   14000104e:	call   0x140018b00
   140001053:	call   0x14001aac0
   140001058:	mov    QWORD PTR [rip+0x524c1],rax        # 0x140053520
   14000105f:	test   rax,rax
   140001062:	jne    0x140001020
   140001064:	call   0x140019e80
   140001069:	mov    eax,0x1
   14000106e:	add    rsp,0x28
   140001072:	ret    
   140001073:	int3   
   140001074:	int3   
   140001075:	int3   
   140001076:	int3   
   140001077:	int3   
   140001078:	int3   
   140001079:	int3   
   14000107a:	int3   
   14000107b:	int3   
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	mov    QWORD PTR [rsp+0x10],rbx
   140001085:	mov    QWORD PTR [rsp+0x18],rbp
   14000108a:	push   rsi
   14000108b:	sub    rsp,0x20
   14000108f:	mov    rsi,rdx
   140001092:	mov    rbx,rcx
   140001095:	call   0x14002aef0
   14000109a:	mov    rcx,rbx
   14000109d:	cmp    eax,0x1
   1400010a0:	jne    0x1400010c7
   1400010a2:	call   0x14002a4e0
   1400010a7:	xor    ebp,ebp
   1400010a9:	mov    rcx,QWORD PTR [rax+0x88]
   1400010b0:	mov    QWORD PTR [rcx],rbp
   1400010b3:	mov    QWORD PTR [rcx+0x8],rbp
   1400010b7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400010bc:	mov    rbp,QWORD PTR [rsp+0x40]
   1400010c1:	add    rsp,0x20
   1400010c5:	pop    rsi
   1400010c6:	ret    
   1400010c7:	mov    QWORD PTR [rsp+0x30],rdi
   1400010cc:	call   0x140001320
   1400010d1:	test   rsi,rsi
   1400010d4:	jne    0x1400010e1
   1400010d6:	mov    rcx,rbx
   1400010d9:	call   0x140001200
   1400010de:	mov    rsi,rax
   1400010e1:	cmp    BYTE PTR [rip+0x543d1],0x0        # 0x1400554b9
   1400010e8:	je     0x140001105
   1400010ea:	call   QWORD PTR [rip+0x3c1e0]        # 0x14003d2d0
   1400010f0:	mov    r8,QWORD PTR [rsi+0x10]
   1400010f4:	lea    rdx,[rip+0x3c2c5]        # 0x14003d3c0
   1400010fb:	lea    rcx,[rax+0x60]
   1400010ff:	call   QWORD PTR [rip+0x3c1bb]        # 0x14003d2c0
   140001105:	mov    rax,QWORD PTR [rsi+0x68]
   140001109:	xor    ebp,ebp
   14000110b:	xor    r8d,r8d
   14000110e:	mov    DWORD PTR [rax+0xc],ebp
   140001111:	mov    rax,QWORD PTR [rsi+0x68]
   140001115:	mov    rdx,rsi
   140001118:	mov    rcx,rbx
   14000111b:	mov    edi,ebp
   14000111d:	mov    QWORD PTR [rax+0x10],rbp
   140001121:	call   0x1400016f0
   140001126:	mov    rcx,rbx
   140001129:	call   0x14002a4e0
   14000112e:	test   rax,rax
   140001131:	je     0x14000115b
   140001133:	nop    DWORD PTR [rax+0x0]
   140001137:	nop    WORD PTR [rax+rax*1+0x0]
   140001140:	mov    rcx,QWORD PTR [rax+0x68]
   140001144:	mov    rdx,rax
   140001147:	cmp    DWORD PTR [rcx+0xc],edi
   14000114a:	cmovg  edi,DWORD PTR [rcx+0xc]
   14000114e:	mov    rcx,rbx
   140001151:	call   0x14002a5e0
   140001156:	test   rax,rax
   140001159:	jne    0x140001140
   14000115b:	mov    rcx,rbx
   14000115e:	call   0x14002a4e0
   140001163:	mov    rdi,QWORD PTR [rsp+0x30]
   140001168:	mov    r8,rax
   14000116b:	test   rax,rax
   14000116e:	je     0x1400011b7
   140001170:	mov    rax,QWORD PTR [r8+0x68]
   140001174:	cmp    DWORD PTR [rax+0x8],ebp
   140001177:	jg     0x1400011a4
   140001179:	inc    DWORD PTR [rax+0x4]
   14000117c:	mov    rcx,QWORD PTR [r8+0x68]
   140001180:	mov    rdx,QWORD PTR [rcx+0x10]
   140001184:	test   rdx,rdx
   140001187:	je     0x1400011a4
   140001189:	nop    DWORD PTR [rax+0x0]
   140001190:	mov    rax,QWORD PTR [rdx+0x68]
   140001194:	inc    DWORD PTR [rax+0x4]
   140001197:	mov    rax,QWORD PTR [rdx+0x68]
   14000119b:	mov    rdx,QWORD PTR [rax+0x10]
   14000119f:	test   rdx,rdx
   1400011a2:	jne    0x140001190
   1400011a4:	mov    rdx,r8
   1400011a7:	mov    rcx,rbx
   1400011aa:	call   0x14002a5e0
   1400011af:	mov    r8,rax
   1400011b2:	test   rax,rax
   1400011b5:	jne    0x140001170
   1400011b7:	mov    rax,QWORD PTR [rsi+0x68]
   1400011bb:	movabs rcx,0x401921fb54442d18
   1400011c5:	mov    rdx,rsi
   1400011c8:	mov    QWORD PTR [rax+0x18],rcx
   1400011cc:	mov    rcx,rbx
   1400011cf:	call   0x140001640
   1400011d4:	mov    rax,QWORD PTR [rsi+0x68]
   1400011d8:	mov    rdx,rsi
   1400011db:	mov    rcx,rbx
   1400011de:	mov    QWORD PTR [rax+0x20],rbp
   1400011e2:	call   0x140001570
   1400011e7:	mov    rcx,rbx
   1400011ea:	mov    rbx,QWORD PTR [rsp+0x38]
   1400011ef:	mov    rbp,QWORD PTR [rsp+0x40]
   1400011f4:	add    rsp,0x20
   1400011f8:	pop    rsi
   1400011f9:	jmp    0x140001450
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	mov    QWORD PTR [rsp+0x18],rbp
   140001205:	mov    QWORD PTR [rsp+0x20],rsi
   14000120a:	push   r14
   14000120c:	sub    rsp,0x20
   140001210:	xor    r14d,r14d
   140001213:	mov    rsi,rcx
   140001216:	mov    ebp,r14d
   140001219:	call   0x14002aef0
   14000121e:	mov    rcx,rsi
   140001221:	cmp    eax,0x2
   140001224:	jg     0x14000123b
   140001226:	mov    rbp,QWORD PTR [rsp+0x40]
   14000122b:	mov    rsi,QWORD PTR [rsp+0x48]
   140001230:	add    rsp,0x20
   140001234:	pop    r14
   140001236:	jmp    0x14002a4e0
   14000123b:	mov    QWORD PTR [rsp+0x38],rdi
   140001240:	call   0x14002a4e0
   140001245:	mov    rdi,rax
   140001248:	test   rax,rax
   14000124b:	je     0x1400012ca
   14000124d:	mov    QWORD PTR [rsp+0x30],rbx
   140001252:	mov    rcx,QWORD PTR [rdi+0x68]
   140001256:	cmp    DWORD PTR [rcx],ebp
   140001258:	jne    0x1400012b2
   14000125a:	mov    rdx,rdi
   14000125d:	mov    rcx,rsi
   140001260:	call   0x14002b780
   140001265:	mov    rbx,rax
   140001268:	test   rax,rax
   14000126b:	je     0x1400012b2
   14000126d:	nop    DWORD PTR [rax]
   140001270:	mov    rdx,QWORD PTR [rbx+0x18]
   140001274:	cmp    rdx,rdi
   140001277:	jne    0x14000127d
   140001279:	mov    rdx,QWORD PTR [rbx+0x10]
   14000127d:	test   rdx,rdx
   140001280:	je     0x14000129c
   140001282:	mov    rax,QWORD PTR [rdx+0x68]
   140001286:	cmp    DWORD PTR [rax],0x1
   140001289:	jle    0x14000129c
   14000128b:	mov    r8,rdi
   14000128e:	mov    rcx,rsi
   140001291:	mov    DWORD PTR [rax],0x1
   140001297:	call   0x1400017a0
   14000129c:	mov    r8,rdi
   14000129f:	mov    rdx,rbx
   1400012a2:	mov    rcx,rsi
   1400012a5:	call   0x14002b890
   1400012aa:	mov    rbx,rax
   1400012ad:	test   rax,rax
   1400012b0:	jne    0x140001270
   1400012b2:	mov    rdx,rdi
   1400012b5:	mov    rcx,rsi
   1400012b8:	call   0x14002a5e0
   1400012bd:	mov    rdi,rax
   1400012c0:	test   rax,rax
   1400012c3:	jne    0x140001252
   1400012c5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400012ca:	mov    rcx,rsi
   1400012cd:	call   0x14002a4e0
   1400012d2:	mov    rdi,QWORD PTR [rsp+0x38]
   1400012d7:	test   rax,rax
   1400012da:	je     0x1400012ff
   1400012dc:	nop    DWORD PTR [rax+0x0]
   1400012e0:	mov    rcx,QWORD PTR [rax+0x68]
   1400012e4:	mov    edx,DWORD PTR [rcx]
   1400012e6:	cmp    edx,ebp
   1400012e8:	jle    0x1400012ef
   1400012ea:	mov    ebp,edx
   1400012ec:	mov    r14,rax
   1400012ef:	mov    rdx,rax
   1400012f2:	mov    rcx,rsi
   1400012f5:	call   0x14002a5e0
   1400012fa:	test   rax,rax
   1400012fd:	jne    0x1400012e0
   1400012ff:	mov    rbp,QWORD PTR [rsp+0x40]
   140001304:	mov    rsi,QWORD PTR [rsp+0x48]
   140001309:	mov    rax,r14
   14000130c:	add    rsp,0x20
   140001310:	pop    r14
   140001312:	ret    
   140001313:	int3   
   140001314:	int3   
   140001315:	int3   
   140001316:	int3   
   140001317:	int3   
   140001318:	int3   
   140001319:	int3   
   14000131a:	int3   
   14000131b:	int3   
   14000131c:	int3   
   14000131d:	int3   
   14000131e:	int3   
   14000131f:	int3   
   140001320:	mov    QWORD PTR [rsp+0x18],rbp
   140001325:	mov    QWORD PTR [rsp+0x20],rsi
   14000132a:	push   rdi
   14000132b:	sub    rsp,0x20
   14000132f:	mov    rsi,rcx
   140001332:	call   0x14002aef0
   140001337:	mov    rcx,rsi
   14000133a:	mov    ebp,eax
   14000133c:	imul   ebp,ebp
   14000133f:	call   0x14002a4e0
   140001344:	mov    rdi,rax
   140001347:	test   rax,rax
   14000134a:	je     0x1400013db
   140001350:	mov    QWORD PTR [rsp+0x30],rbx
   140001355:	mov    QWORD PTR [rsp+0x38],r14
   14000135a:	xor    r14d,r14d
   14000135d:	nop    DWORD PTR [rax]
   140001360:	mov    rcx,QWORD PTR [rdi+0x68]
   140001364:	mov    rdx,rdi
   140001367:	mov    ebx,r14d
   14000136a:	mov    DWORD PTR [rcx+0x4],r14d
   14000136e:	mov    rcx,QWORD PTR [rdi+0x68]
   140001372:	mov    DWORD PTR [rcx+0x8],r14d
   140001376:	mov    rcx,QWORD PTR [rdi+0x68]
   14000137a:	mov    DWORD PTR [rcx+0xc],ebp
   14000137d:	mov    rcx,rsi
   140001380:	call   0x14002b780
   140001385:	test   rax,rax
   140001388:	je     0x1400013b8
   14000138a:	nop    WORD PTR [rax+rax*1+0x0]
   140001390:	inc    ebx
   140001392:	cmp    ebx,0x2
   140001395:	je     0x1400013aa
   140001397:	mov    r8,rdi
   14000139a:	mov    rdx,rax
   14000139d:	mov    rcx,rsi
   1400013a0:	call   0x14002b890
   1400013a5:	test   rax,rax
   1400013a8:	jne    0x140001390
   1400013aa:	cmp    ebx,0x1
   1400013ad:	jne    0x1400013b8
   1400013af:	mov    rax,QWORD PTR [rdi+0x68]
   1400013b3:	mov    DWORD PTR [rax],r14d
   1400013b6:	jmp    0x1400013be
   1400013b8:	mov    rax,QWORD PTR [rdi+0x68]
   1400013bc:	mov    DWORD PTR [rax],ebp
   1400013be:	mov    rdx,rdi
   1400013c1:	mov    rcx,rsi
   1400013c4:	call   0x14002a5e0
   1400013c9:	mov    rdi,rax
   1400013cc:	test   rax,rax
   1400013cf:	jne    0x140001360
   1400013d1:	mov    r14,QWORD PTR [rsp+0x38]
   1400013d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400013db:	mov    rbp,QWORD PTR [rsp+0x40]
   1400013e0:	mov    rsi,QWORD PTR [rsp+0x48]
   1400013e5:	add    rsp,0x20
   1400013e9:	pop    rdi
   1400013ea:	ret    
   1400013eb:	int3   
   1400013ec:	int3   
   1400013ed:	int3   
   1400013ee:	int3   
   1400013ef:	int3   
   1400013f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400013f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400013fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400013ff:	push   rdi
   140001400:	sub    rsp,0x20
   140001404:	xor    edi,edi
   140001406:	mov    rsi,rdx
   140001409:	mov    rbp,rcx
   14000140c:	mov    ebx,edi
   14000140e:	call   0x14002b780
   140001413:	test   rax,rax
   140001416:	je     0x140001432
   140001418:	inc    ebx
   14000141a:	cmp    ebx,0x2
   14000141d:	je     0x140001432
   14000141f:	mov    r8,rsi
   140001422:	mov    rdx,rax
   140001425:	mov    rcx,rbp
   140001428:	call   0x14002b890
   14000142d:	test   rax,rax
   140001430:	jne    0x140001418
   140001432:	mov    rbp,QWORD PTR [rsp+0x38]
   140001437:	mov    rsi,QWORD PTR [rsp+0x40]
   14000143c:	cmp    ebx,0x1
   14000143f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001444:	sete   dil
   140001448:	mov    eax,edi
   14000144a:	add    rsp,0x20
   14000144e:	pop    rdi
   14000144f:	ret    
   140001450:	mov    QWORD PTR [rsp+0x10],rbx
   140001455:	push   rdi
   140001456:	sub    rsp,0x30
   14000145a:	mov    rdi,rcx
   14000145d:	mov    rcx,QWORD PTR [rcx+0x38]
   140001461:	lea    rdx,[rip+0x3bf30]        # 0x14003d398
   140001468:	call   0x140027500
   14000146d:	xor    r8d,r8d
   140001470:	mov    rcx,rdi
   140001473:	mov    rdx,rax
   140001476:	call   0x14001c3e0
   14000147b:	test   rax,rax
   14000147e:	je     0x1400014ab
   140001480:	lea    r8,[rsp+0x40]
   140001485:	lea    rdx,[rip+0x3bf14]        # 0x14003d3a0
   14000148c:	mov    rcx,rax
   14000148f:	call   QWORD PTR [rip+0x3be23]        # 0x14003d2b8
   140001495:	test   eax,eax
   140001497:	je     0x1400014ab
   140001499:	movsd  xmm0,QWORD PTR [rip+0x3bf2f]        # 0x14003d3d0
   1400014a1:	comisd xmm0,QWORD PTR [rsp+0x40]
   1400014a7:	jbe    0x1400014b9
   1400014a9:	jmp    0x1400014b3
   1400014ab:	movsd  xmm0,QWORD PTR [rip+0x3bf2d]        # 0x14003d3e0
   1400014b3:	movsd  QWORD PTR [rsp+0x40],xmm0
   1400014b9:	cmp    BYTE PTR [rip+0x53ff9],0x0        # 0x1400554b9
   1400014c0:	je     0x1400014e4
   1400014c2:	call   QWORD PTR [rip+0x3be08]        # 0x14003d2d0
   1400014c8:	movsd  xmm2,QWORD PTR [rsp+0x40]
   1400014ce:	lea    rdx,[rip+0x3bed3]        # 0x14003d3a8
   1400014d5:	lea    rcx,[rax+0x60]
   1400014d9:	movq   r8,xmm2
   1400014de:	call   QWORD PTR [rip+0x3bddc]        # 0x14003d2c0
   1400014e4:	mov    rcx,rdi
   1400014e7:	call   0x14002a4e0
   1400014ec:	mov    rbx,rax
   1400014ef:	test   rax,rax
   1400014f2:	je     0x140001562
   1400014f4:	movaps XMMWORD PTR [rsp+0x20],xmm6
   1400014f9:	nop    DWORD PTR [rax+0x0]
   140001500:	mov    rcx,QWORD PTR [rbx+0x68]
   140001504:	movd   xmm6,DWORD PTR [rcx+0xc]
   140001509:	movsd  xmm0,QWORD PTR [rcx+0x20]
   14000150e:	cvtdq2pd xmm6,xmm6
   140001512:	mulsd  xmm6,QWORD PTR [rsp+0x40]
   140001518:	call   0x14003b87e
   14000151d:	mov    rax,QWORD PTR [rbx+0x88]
   140001524:	mulsd  xmm0,xmm6
   140001528:	movsd  QWORD PTR [rax],xmm0
   14000152c:	mov    rax,QWORD PTR [rbx+0x68]
   140001530:	movsd  xmm0,QWORD PTR [rax+0x20]
   140001535:	call   0x14003b884
   14000153a:	mov    rax,QWORD PTR [rbx+0x88]
   140001541:	mov    rdx,rbx
   140001544:	mov    rcx,rdi
   140001547:	mulsd  xmm0,xmm6
   14000154b:	movsd  QWORD PTR [rax+0x8],xmm0
   140001550:	call   0x14002a5e0
   140001555:	mov    rbx,rax
   140001558:	test   rax,rax
   14000155b:	jne    0x140001500
   14000155d:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140001562:	mov    rbx,QWORD PTR [rsp+0x48]
   140001567:	add    rsp,0x30
   14000156b:	pop    rdi
   14000156c:	ret    
   14000156d:	int3   
   14000156e:	int3   
   14000156f:	int3   
   140001570:	mov    QWORD PTR [rsp+0x8],rbx
   140001575:	mov    QWORD PTR [rsp+0x10],rsi
   14000157a:	push   rdi
   14000157b:	sub    rsp,0x40
   14000157f:	mov    rax,QWORD PTR [rdx+0x68]
   140001583:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140001588:	movaps XMMWORD PTR [rsp+0x20],xmm7
   14000158d:	movsd  xmm7,QWORD PTR [rip+0x3be43]        # 0x14003d3d8
   140001595:	mov    rdi,rdx
   140001598:	mov    rsi,rcx
   14000159b:	cmp    QWORD PTR [rax+0x10],0x0
   1400015a0:	jne    0x1400015a7
   1400015a2:	xorps  xmm6,xmm6
   1400015a5:	jmp    0x1400015b9
   1400015a7:	movsd  xmm0,QWORD PTR [rax+0x18]
   1400015ac:	movsd  xmm6,QWORD PTR [rax+0x20]
   1400015b1:	mulsd  xmm0,xmm7
   1400015b5:	subsd  xmm6,xmm0
   1400015b9:	call   0x14002b780
   1400015be:	mov    rbx,rax
   1400015c1:	test   rax,rax
   1400015c4:	je     0x14000161c
   1400015c6:	mov    rdx,QWORD PTR [rbx+0x18]
   1400015ca:	cmp    rdx,rdi
   1400015cd:	jne    0x1400015d3
   1400015cf:	mov    rdx,QWORD PTR [rbx+0x10]
   1400015d3:	mov    rax,QWORD PTR [rdx+0x68]
   1400015d7:	cmp    QWORD PTR [rax+0x10],rdi
   1400015db:	jne    0x140001606
   1400015dd:	movsd  xmm0,QWORD PTR [rax+0x18]
   1400015e2:	mulsd  xmm0,xmm7
   1400015e6:	addsd  xmm0,xmm6
   1400015ea:	movsd  QWORD PTR [rax+0x20],xmm0
   1400015ef:	mov    rax,QWORD PTR [rdx+0x68]
   1400015f3:	cmp    DWORD PTR [rax+0x8],0x0
   1400015f7:	addsd  xmm6,QWORD PTR [rax+0x18]
   1400015fc:	jle    0x140001606
   1400015fe:	mov    rcx,rsi
   140001601:	call   0x140001570
   140001606:	mov    r8,rdi
   140001609:	mov    rdx,rbx
   14000160c:	mov    rcx,rsi
   14000160f:	call   0x14002b890
   140001614:	mov    rbx,rax
   140001617:	test   rax,rax
   14000161a:	jne    0x1400015c6
   14000161c:	mov    rbx,QWORD PTR [rsp+0x50]
   140001621:	mov    rsi,QWORD PTR [rsp+0x58]
   140001626:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14000162b:	movaps xmm7,XMMWORD PTR [rsp+0x20]
   140001630:	add    rsp,0x40
   140001634:	pop    rdi
   140001635:	ret    
   140001636:	int3   
   140001637:	int3   
   140001638:	int3   
   140001639:	int3   
   14000163a:	int3   
   14000163b:	int3   
   14000163c:	int3   
   14000163d:	int3   
   14000163e:	int3   
   14000163f:	int3   
   140001640:	mov    QWORD PTR [rsp+0x8],rbx
   140001645:	mov    QWORD PTR [rsp+0x10],rsi
   14000164a:	push   rdi
   14000164b:	sub    rsp,0x30
   14000164f:	mov    rax,QWORD PTR [rdx+0x68]
   140001653:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140001658:	mov    rdi,rdx
   14000165b:	mov    rsi,rcx
   14000165e:	movd   xmm0,DWORD PTR [rax+0x4]
   140001663:	movsd  xmm6,QWORD PTR [rax+0x18]
   140001668:	cvtdq2pd xmm0,xmm0
   14000166c:	divsd  xmm6,xmm0
   140001670:	call   0x14002b780
   140001675:	mov    rbx,rax
   140001678:	test   rax,rax
   14000167b:	je     0x1400016d1
   14000167d:	nop    DWORD PTR [rax]
   140001680:	mov    rdx,QWORD PTR [rbx+0x18]
   140001684:	cmp    rdx,rdi
   140001687:	jne    0x14000168d
   140001689:	mov    rdx,QWORD PTR [rbx+0x10]
   14000168d:	mov    rax,QWORD PTR [rdx+0x68]
   140001691:	cmp    QWORD PTR [rax+0x10],rdi
   140001695:	jne    0x1400016bb
   140001697:	movd   xmm0,DWORD PTR [rax+0x4]
   14000169c:	cvtdq2pd xmm0,xmm0
   1400016a0:	mulsd  xmm0,xmm6
   1400016a4:	movsd  QWORD PTR [rax+0x18],xmm0
   1400016a9:	mov    rax,QWORD PTR [rdx+0x68]
   1400016ad:	cmp    DWORD PTR [rax+0x8],0x0
   1400016b1:	jle    0x1400016bb
   1400016b3:	mov    rcx,rsi
   1400016b6:	call   0x140001640
   1400016bb:	mov    r8,rdi
   1400016be:	mov    rdx,rbx
   1400016c1:	mov    rcx,rsi
   1400016c4:	call   0x14002b890
   1400016c9:	mov    rbx,rax
   1400016cc:	test   rax,rax
   1400016cf:	jne    0x140001680
   1400016d1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400016d6:	mov    rsi,QWORD PTR [rsp+0x48]
   1400016db:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   1400016e0:	add    rsp,0x30
   1400016e4:	pop    rdi
   1400016e5:	ret    
   1400016e6:	int3   
   1400016e7:	int3   
   1400016e8:	int3   
   1400016e9:	int3   
   1400016ea:	int3   
   1400016eb:	int3   
   1400016ec:	int3   
   1400016ed:	int3   
   1400016ee:	int3   
   1400016ef:	int3   
   1400016f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400016f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400016fa:	mov    QWORD PTR [rsp+0x20],rsi
   1400016ff:	mov    QWORD PTR [rsp+0x18],r8
   140001704:	push   rdi
   140001705:	sub    rsp,0x20
   140001709:	mov    rax,QWORD PTR [rdx+0x68]
   14000170d:	mov    rdi,rdx
   140001710:	mov    rbp,rcx
   140001713:	mov    esi,DWORD PTR [rax+0xc]
   140001716:	inc    esi
   140001718:	call   0x14002b780
   14000171d:	mov    rbx,rax
   140001720:	test   rax,rax
   140001723:	je     0x140001789
   140001725:	mov    rdx,QWORD PTR [rbx+0x18]
   140001729:	cmp    rdx,rdi
   14000172c:	jne    0x140001732
   14000172e:	mov    rdx,QWORD PTR [rbx+0x10]
   140001732:	cmp    QWORD PTR [rsp+0x40],rdx
   140001737:	je     0x140001773
   140001739:	mov    rax,QWORD PTR [rdx+0x68]
   14000173d:	cmp    esi,DWORD PTR [rax+0xc]
   140001740:	jge    0x140001773
   140001742:	mov    DWORD PTR [rax+0xc],esi
   140001745:	mov    rax,QWORD PTR [rdx+0x68]
   140001749:	mov    rax,QWORD PTR [rax+0x10]
   14000174d:	test   rax,rax
   140001750:	je     0x140001759
   140001752:	mov    rax,QWORD PTR [rax+0x68]
   140001756:	dec    DWORD PTR [rax+0x8]
   140001759:	mov    rax,QWORD PTR [rdx+0x68]
   14000175d:	mov    r8,rdi
   140001760:	mov    rcx,rbp
   140001763:	mov    QWORD PTR [rax+0x10],rdi
   140001767:	mov    rax,QWORD PTR [rdi+0x68]
   14000176b:	inc    DWORD PTR [rax+0x8]
   14000176e:	call   0x1400016f0
   140001773:	mov    r8,rdi
   140001776:	mov    rdx,rbx
   140001779:	mov    rcx,rbp
   14000177c:	call   0x14002b890
   140001781:	mov    rbx,rax
   140001784:	test   rax,rax
   140001787:	jne    0x140001725
   140001789:	mov    rbx,QWORD PTR [rsp+0x30]
   14000178e:	mov    rbp,QWORD PTR [rsp+0x38]
   140001793:	mov    rsi,QWORD PTR [rsp+0x48]
   140001798:	add    rsp,0x20
   14000179c:	pop    rdi
   14000179d:	ret    
   14000179e:	int3   
   14000179f:	int3   
   1400017a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400017a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400017aa:	mov    QWORD PTR [rsp+0x20],rsi
   1400017af:	mov    QWORD PTR [rsp+0x18],r8
   1400017b4:	push   rdi
   1400017b5:	sub    rsp,0x20
   1400017b9:	mov    rax,QWORD PTR [rdx+0x68]
   1400017bd:	mov    rdi,rdx
   1400017c0:	mov    rbp,rcx
   1400017c3:	mov    esi,DWORD PTR [rax]
   1400017c5:	inc    esi
   1400017c7:	call   0x14002b780
   1400017cc:	mov    rbx,rax
   1400017cf:	test   rax,rax
   1400017d2:	je     0x140001813
   1400017d4:	mov    rdx,QWORD PTR [rbx+0x18]
   1400017d8:	cmp    rdx,rdi
   1400017db:	jne    0x1400017e1
   1400017dd:	mov    rdx,QWORD PTR [rbx+0x10]
   1400017e1:	cmp    QWORD PTR [rsp+0x40],rdx
   1400017e6:	je     0x1400017fd
   1400017e8:	mov    rax,QWORD PTR [rdx+0x68]
   1400017ec:	cmp    esi,DWORD PTR [rax]
   1400017ee:	jge    0x1400017fd
   1400017f0:	mov    r8,rdi
   1400017f3:	mov    rcx,rbp
   1400017f6:	mov    DWORD PTR [rax],esi
   1400017f8:	call   0x1400017a0
   1400017fd:	mov    r8,rdi
   140001800:	mov    rdx,rbx
   140001803:	mov    rcx,rbp
   140001806:	call   0x14002b890
   14000180b:	mov    rbx,rax
   14000180e:	test   rax,rax
   140001811:	jne    0x1400017d4
   140001813:	mov    rbx,QWORD PTR [rsp+0x30]
   140001818:	mov    rbp,QWORD PTR [rsp+0x38]
   14000181d:	mov    rsi,QWORD PTR [rsp+0x48]
   140001822:	add    rsp,0x20
   140001826:	pop    rdi
   140001827:	ret    
   140001828:	int3   
   140001829:	int3   
   14000182a:	int3   
   14000182b:	int3   
   14000182c:	int3   
   14000182d:	int3   
   14000182e:	int3   
   14000182f:	int3   
   140001830:	mov    QWORD PTR [rsp+0x8],rbx
   140001835:	push   rdi
   140001836:	sub    rsp,0x20
   14000183a:	mov    rax,QWORD PTR [rdx+0x68]
   14000183e:	xor    ebx,ebx
   140001840:	xor    r8d,r8d
   140001843:	mov    DWORD PTR [rax+0xc],ebx
   140001846:	mov    rax,QWORD PTR [rdx+0x68]
   14000184a:	mov    rdi,rcx
   14000184d:	mov    QWORD PTR [rax+0x10],rbx
   140001851:	call   0x1400016f0
   140001856:	mov    rcx,rdi
   140001859:	call   0x14002a4e0
   14000185e:	test   rax,rax
   140001861:	je     0x14000188b
   140001863:	nop    DWORD PTR [rax+0x0]
   140001867:	nop    WORD PTR [rax+rax*1+0x0]
   140001870:	mov    rcx,QWORD PTR [rax+0x68]
   140001874:	mov    rdx,rax
   140001877:	cmp    DWORD PTR [rcx+0xc],ebx
   14000187a:	cmovg  ebx,DWORD PTR [rcx+0xc]
   14000187e:	mov    rcx,rdi
   140001881:	call   0x14002a5e0
   140001886:	test   rax,rax
   140001889:	jne    0x140001870
   14000188b:	mov    eax,ebx
   14000188d:	mov    rbx,QWORD PTR [rsp+0x30]
   140001892:	add    rsp,0x20
   140001896:	pop    rdi
   140001897:	ret    
   140001898:	int3   
   140001899:	int3   
   14000189a:	int3   
   14000189b:	int3   
   14000189c:	int3   
   14000189d:	int3   
   14000189e:	int3   
   14000189f:	int3   
   1400018a0:	mov    rax,QWORD PTR [rdx+0x68]
   1400018a4:	mov    QWORD PTR [rax+0x20],0x0
   1400018ac:	jmp    0x140001570
   1400018b1:	int3   
   1400018b2:	int3   
   1400018b3:	int3   
   1400018b4:	int3   
   1400018b5:	int3   
   1400018b6:	int3   
   1400018b7:	int3   
   1400018b8:	int3   
   1400018b9:	int3   
   1400018ba:	int3   
   1400018bb:	int3   
   1400018bc:	int3   
   1400018bd:	int3   
   1400018be:	int3   
   1400018bf:	int3   
   1400018c0:	rex push rbx
   1400018c2:	sub    rsp,0x20
   1400018c6:	mov    rbx,rcx
   1400018c9:	call   0x14002a4e0
   1400018ce:	mov    rdx,rax
   1400018d1:	test   rax,rax
   1400018d4:	je     0x140001914
   1400018d6:	mov    rax,QWORD PTR [rdx+0x68]
   1400018da:	cmp    DWORD PTR [rax+0x8],0x0
   1400018de:	jg     0x140001904
   1400018e0:	inc    DWORD PTR [rax+0x4]
   1400018e3:	mov    rcx,QWORD PTR [rdx+0x68]
   1400018e7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400018eb:	test   rcx,rcx
   1400018ee:	je     0x140001904
   1400018f0:	mov    rax,QWORD PTR [rcx+0x68]
   1400018f4:	inc    DWORD PTR [rax+0x4]
   1400018f7:	mov    rax,QWORD PTR [rcx+0x68]
   1400018fb:	mov    rcx,QWORD PTR [rax+0x10]
   1400018ff:	test   rcx,rcx
   140001902:	jne    0x1400018f0
   140001904:	mov    rcx,rbx
   140001907:	call   0x14002a5e0
   14000190c:	mov    rdx,rax
   14000190f:	test   rax,rax
   140001912:	jne    0x1400018d6
   140001914:	add    rsp,0x20
   140001918:	pop    rbx
   140001919:	ret    
   14000191a:	int3   
   14000191b:	int3   
   14000191c:	int3   
   14000191d:	int3   
   14000191e:	int3   
   14000191f:	int3   
   140001920:	mov    rax,QWORD PTR [rdx+0x68]
   140001924:	movabs r8,0x401921fb54442d18
   14000192e:	mov    QWORD PTR [rax+0x18],r8
   140001932:	jmp    0x140001640
   140001937:	int3   
   140001938:	int3   
   140001939:	int3   
   14000193a:	int3   
   14000193b:	int3   
   14000193c:	int3   
   14000193d:	int3   
   14000193e:	int3   
   14000193f:	int3   
   140001940:	push   r14
   140001942:	push   r15
   140001944:	sub    rsp,0x28
   140001948:	mov    r15,rcx
   14000194b:	call   0x14002a4e0
   140001950:	mov    r14,rax
   140001953:	test   rax,rax
   140001956:	je     0x140001a82
   14000195c:	mov    QWORD PTR [rsp+0x40],rbx
   140001961:	mov    QWORD PTR [rsp+0x48],rbp
   140001966:	mov    QWORD PTR [rsp+0x50],rsi
   14000196b:	mov    QWORD PTR [rsp+0x58],rdi
   140001970:	mov    QWORD PTR [rsp+0x20],r12
   140001975:	xor    r12d,r12d
   140001978:	nop    DWORD PTR [rax+rax*1+0x0]
   140001980:	mov    rdx,r14
   140001983:	mov    rcx,r15
   140001986:	call   0x14002b780
   14000198b:	mov    rbp,rax
   14000198e:	test   rax,rax
   140001991:	je     0x140001a1f
   140001997:	mov    rcx,QWORD PTR [rbp+0x28]
   14000199b:	test   rcx,rcx
   14000199e:	je     0x1400019e7
   1400019a0:	mov    esi,r12d
   1400019a3:	cmp    DWORD PTR [rcx+0x8],r12d
   1400019a7:	jle    0x1400019d0
   1400019a9:	mov    rdi,r12
   1400019ac:	nop    DWORD PTR [rax+0x0]
   1400019b0:	mov    rax,QWORD PTR [rbp+0x28]
   1400019b4:	mov    rcx,QWORD PTR [rax]
   1400019b7:	mov    rcx,QWORD PTR [rcx+rdi*1]
   1400019bb:	call   QWORD PTR [rip+0x3b8df]        # 0x14003d2a0
   1400019c1:	mov    rax,QWORD PTR [rbp+0x28]
   1400019c5:	inc    esi
   1400019c7:	lea    rdi,[rdi+0x28]
   1400019cb:	cmp    esi,DWORD PTR [rax+0x8]
   1400019ce:	jl     0x1400019b0
   1400019d0:	mov    rcx,QWORD PTR [rbp+0x28]
   1400019d4:	mov    rcx,QWORD PTR [rcx]
   1400019d7:	call   QWORD PTR [rip+0x3b8c3]        # 0x14003d2a0
   1400019dd:	mov    rcx,QWORD PTR [rbp+0x28]
   1400019e1:	call   QWORD PTR [rip+0x3b8b9]        # 0x14003d2a0
   1400019e7:	mov    rcx,QWORD PTR [rbp+0x60]
   1400019eb:	mov    QWORD PTR [rbp+0x28],r12
   1400019ef:	call   0x14001c1c0
   1400019f4:	lea    rcx,[rbp+0x28]
   1400019f8:	xor    edx,edx
   1400019fa:	mov    r8d,0xa0
   140001a00:	call   0x14003b896
   140001a05:	mov    r8,r14
   140001a08:	mov    rdx,rbp
   140001a0b:	mov    rcx,r15
   140001a0e:	call   0x14002b890
   140001a13:	mov    rbp,rax
   140001a16:	test   rax,rax
   140001a19:	jne    0x140001997
   140001a1f:	mov    rcx,QWORD PTR [r14+0x68]
   140001a23:	call   QWORD PTR [rip+0x3b877]        # 0x14003d2a0
   140001a29:	mov    rax,QWORD PTR [r14+0x28]
   140001a2d:	test   rax,rax
   140001a30:	je     0x140001a38
   140001a32:	mov    rcx,r14
   140001a35:	call   QWORD PTR [rax+0x10]
   140001a38:	mov    rcx,QWORD PTR [r14+0x60]
   140001a3c:	call   0x14001c1c0
   140001a41:	lea    rcx,[r14+0x28]
   140001a45:	xor    edx,edx
   140001a47:	mov    r8d,0x170
   140001a4d:	call   0x14003b896
   140001a52:	mov    rdx,r14
   140001a55:	mov    rcx,r15
   140001a58:	call   0x14002a5e0
   140001a5d:	mov    r14,rax
   140001a60:	test   rax,rax
   140001a63:	jne    0x140001980
   140001a69:	mov    r12,QWORD PTR [rsp+0x20]
   140001a6e:	mov    rdi,QWORD PTR [rsp+0x58]
   140001a73:	mov    rsi,QWORD PTR [rsp+0x50]
   140001a78:	mov    rbp,QWORD PTR [rsp+0x48]
   140001a7d:	mov    rbx,QWORD PTR [rsp+0x40]
   140001a82:	mov    rcx,QWORD PTR [r15+0xa8]
   140001a89:	call   QWORD PTR [rip+0x3b811]        # 0x14003d2a0
   140001a8f:	mov    rcx,r15
   140001a92:	call   0x140019ea0
   140001a97:	mov    rcx,QWORD PTR [r15+0x58]
   140001a9b:	call   0x14001c1c0
   140001aa0:	lea    rcx,[r15+0x50]
   140001aa4:	xor    edx,edx
   140001aa6:	mov    r8d,0x108
   140001aac:	add    rsp,0x28
   140001ab0:	pop    r15
   140001ab2:	pop    r14
   140001ab4:	jmp    0x14003b896
   140001ab9:	int3   
   140001aba:	int3   
   140001abb:	int3   
   140001abc:	int3   
   140001abd:	int3   
   140001abe:	int3   
   140001abf:	int3   
   140001ac0:	rex push rbx
   140001ac2:	sub    rsp,0x20
   140001ac6:	mov    rbx,rcx
   140001ac9:	call   0x140001b80
   140001ace:	mov    rcx,QWORD PTR [rbx+0x60]
   140001ad2:	call   0x14001c1c0
   140001ad7:	lea    rcx,[rbx+0x28]
   140001adb:	xor    edx,edx
   140001add:	mov    r8d,0xa0
   140001ae3:	add    rsp,0x20
   140001ae7:	pop    rbx
   140001ae8:	jmp    0x14003b896
   140001aed:	int3   
   140001aee:	int3   
   140001aef:	int3   
   140001af0:	rex push rbx
   140001af2:	sub    rsp,0x20
   140001af6:	mov    rbx,rcx
   140001af9:	mov    rcx,QWORD PTR [rcx+0xa8]
   140001b00:	call   QWORD PTR [rip+0x3b79a]        # 0x14003d2a0
   140001b06:	mov    rcx,rbx
   140001b09:	call   0x140019ea0
   140001b0e:	mov    rcx,QWORD PTR [rbx+0x58]
   140001b12:	call   0x14001c1c0
   140001b17:	lea    rcx,[rbx+0x50]
   140001b1b:	xor    edx,edx
   140001b1d:	mov    r8d,0x108
   140001b23:	add    rsp,0x20
   140001b27:	pop    rbx
   140001b28:	jmp    0x14003b896
   140001b2d:	int3   
   140001b2e:	int3   
   140001b2f:	int3   
   140001b30:	mov    QWORD PTR [rsp+0x8],rbx
   140001b35:	push   rdi
   140001b36:	sub    rsp,0x20
   140001b3a:	mov    rbx,rcx
   140001b3d:	mov    rcx,QWORD PTR [rcx+0x68]
   140001b41:	call   QWORD PTR [rip+0x3b759]        # 0x14003d2a0
   140001b47:	mov    rax,QWORD PTR [rbx+0x28]
   140001b4b:	test   rax,rax
   140001b4e:	je     0x140001b56
   140001b50:	mov    rcx,rbx
   140001b53:	call   QWORD PTR [rax+0x10]
   140001b56:	mov    rcx,QWORD PTR [rbx+0x60]
   140001b5a:	call   0x14001c1c0
   140001b5f:	lea    rcx,[rbx+0x28]
   140001b63:	xor    edx,edx
   140001b65:	mov    r8d,0x170
   140001b6b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001b70:	add    rsp,0x20
   140001b74:	pop    rdi
   140001b75:	jmp    0x14003b896
   140001b7a:	int3   
   140001b7b:	int3   
   140001b7c:	int3   
   140001b7d:	int3   
   140001b7e:	int3   
   140001b7f:	int3   
   140001b80:	rex push rbx
   140001b82:	sub    rsp,0x20
   140001b86:	mov    rax,QWORD PTR [rcx+0x28]
   140001b8a:	mov    rbx,rcx
   140001b8d:	test   rax,rax
   140001b90:	je     0x140001bf4
   140001b92:	mov    QWORD PTR [rsp+0x30],rsi
   140001b97:	xor    esi,esi
   140001b99:	cmp    DWORD PTR [rax+0x8],esi
   140001b9c:	jle    0x140001bca
   140001b9e:	mov    QWORD PTR [rsp+0x38],rdi
   140001ba3:	xor    edi,edi
   140001ba5:	mov    rax,QWORD PTR [rbx+0x28]
   140001ba9:	mov    rcx,QWORD PTR [rax]
   140001bac:	mov    rcx,QWORD PTR [rcx+rdi*1]
   140001bb0:	call   QWORD PTR [rip+0x3b6ea]        # 0x14003d2a0
   140001bb6:	mov    rax,QWORD PTR [rbx+0x28]
   140001bba:	inc    esi
   140001bbc:	lea    rdi,[rdi+0x28]
   140001bc0:	cmp    esi,DWORD PTR [rax+0x8]
   140001bc3:	jl     0x140001ba5
   140001bc5:	mov    rdi,QWORD PTR [rsp+0x38]
   140001bca:	mov    rcx,QWORD PTR [rbx+0x28]
   140001bce:	mov    rcx,QWORD PTR [rcx]
   140001bd1:	call   QWORD PTR [rip+0x3b6c9]        # 0x14003d2a0
   140001bd7:	mov    rcx,QWORD PTR [rbx+0x28]
   140001bdb:	call   QWORD PTR [rip+0x3b6bf]        # 0x14003d2a0
   140001be1:	mov    rsi,QWORD PTR [rsp+0x30]
   140001be6:	mov    QWORD PTR [rbx+0x28],0x0
   140001bee:	add    rsp,0x20
   140001bf2:	pop    rbx
   140001bf3:	ret    
   140001bf4:	mov    QWORD PTR [rcx+0x28],0x0
   140001bfc:	add    rsp,0x20
   140001c00:	pop    rbx
   140001c01:	ret    
   140001c02:	int3   
   140001c03:	int3   
   140001c04:	int3   
   140001c05:	int3   
   140001c06:	int3   
   140001c07:	int3   
   140001c08:	int3   
   140001c09:	int3   
   140001c0a:	int3   
   140001c0b:	int3   
   140001c0c:	int3   
   140001c0d:	int3   
   140001c0e:	int3   
   140001c0f:	int3   
   140001c10:	test   r8,r8
   140001c13:	je     0x140001c7a
   140001c15:	mov    QWORD PTR [rsp+0x8],rbx
   140001c1a:	push   rdi
   140001c1b:	sub    rsp,0x40
   140001c1f:	mov    rax,QWORD PTR [rcx+0x28]
   140001c23:	mov    rbx,rdx
   140001c26:	mov    rdi,rcx
   140001c29:	mov    rdx,rcx
   140001c2c:	lea    rcx,[rsp+0x20]
   140001c31:	call   QWORD PTR [rax+0x18]
   140001c34:	movsd  xmm1,QWORD PTR [rax+0x10]
   140001c39:	movups xmm0,XMMWORD PTR [rax]
   140001c3c:	movsd  QWORD PTR [rsp+0x30],xmm1
   140001c42:	mov    BYTE PTR [rsp+0x32],0x0
   140001c47:	movsd  xmm1,QWORD PTR [rsp+0x30]
   140001c4d:	cmp    QWORD PTR [rbx+0x18],rdi
   140001c51:	jne    0x140001c67
   140001c53:	movups XMMWORD PTR [rbx+0x30],xmm0
   140001c57:	movsd  QWORD PTR [rbx+0x40],xmm1
   140001c5c:	mov    rbx,QWORD PTR [rsp+0x50]
   140001c61:	add    rsp,0x40
   140001c65:	pop    rdi
   140001c66:	ret    
   140001c67:	movups XMMWORD PTR [rbx+0x48],xmm0
   140001c6b:	movsd  QWORD PTR [rbx+0x58],xmm1
   140001c70:	mov    rbx,QWORD PTR [rsp+0x50]
   140001c75:	add    rsp,0x40
   140001c79:	pop    rdi
   140001c7a:	ret    
   140001c7b:	int3   
   140001c7c:	int3   
   140001c7d:	int3   
   140001c7e:	int3   
   140001c7f:	int3   
   140001c80:	mov    QWORD PTR [rsp+0x8],rbx
   140001c85:	push   rdi
   140001c86:	sub    rsp,0x40
   140001c8a:	mov    rbx,rcx
   140001c8d:	call   0x14001b600
   140001c92:	mov    rdx,QWORD PTR [rip+0x536ff]        # 0x140055398
   140001c99:	movsd  xmm2,QWORD PTR [rip+0x3b73f]        # 0x14003d3e0
   140001ca1:	xorps  xmm3,xmm3
   140001ca4:	mov    rcx,rbx
   140001ca7:	call   0x14001c2e0
   140001cac:	lea    rdx,[rip+0x3b735]        # 0x14003d3e8
   140001cb3:	mov    rcx,rbx
   140001cb6:	movsd  QWORD PTR [rbx+0x88],xmm0
   140001cbe:	call   0x1400275b0
   140001cc3:	mov    rdi,QWORD PTR [rbx+0x18]
   140001cc7:	test   rax,rax
   140001cca:	je     0x140001d12
   140001ccc:	mov    r9,QWORD PTR [rdi+0x28]
   140001cd0:	lea    rcx,[rsp+0x20]
   140001cd5:	mov    r8,rax
   140001cd8:	mov    rdx,rdi
   140001cdb:	call   QWORD PTR [r9+0x18]
   140001cdf:	movsd  xmm1,QWORD PTR [rax+0x10]
   140001ce4:	movups xmm0,XMMWORD PTR [rax]
   140001ce7:	movsd  QWORD PTR [rsp+0x30],xmm1
   140001ced:	mov    BYTE PTR [rsp+0x32],0x0
   140001cf2:	movsd  xmm1,QWORD PTR [rsp+0x30]
   140001cf8:	cmp    QWORD PTR [rbx+0x18],rdi
   140001cfc:	jne    0x140001d09
   140001cfe:	movups XMMWORD PTR [rbx+0x30],xmm0
   140001d02:	movsd  QWORD PTR [rbx+0x40],xmm1
   140001d07:	jmp    0x140001d12
   140001d09:	movups XMMWORD PTR [rbx+0x48],xmm0
   140001d0d:	movsd  QWORD PTR [rbx+0x58],xmm1
   140001d12:	lea    rdx,[rip+0x3b6df]        # 0x14003d3f8
   140001d19:	mov    rcx,rbx
   140001d1c:	call   0x1400275b0
   140001d21:	mov    rdi,QWORD PTR [rbx+0x10]
   140001d25:	test   rax,rax
   140001d28:	je     0x140001d79
   140001d2a:	mov    r9,QWORD PTR [rdi+0x28]
   140001d2e:	lea    rcx,[rsp+0x20]
   140001d33:	mov    r8,rax
   140001d36:	mov    rdx,rdi
   140001d39:	call   QWORD PTR [r9+0x18]
   140001d3d:	movsd  xmm1,QWORD PTR [rax+0x10]
   140001d42:	movups xmm0,XMMWORD PTR [rax]
   140001d45:	movsd  QWORD PTR [rsp+0x30],xmm1
   140001d4b:	mov    BYTE PTR [rsp+0x32],0x0
   140001d50:	movsd  xmm1,QWORD PTR [rsp+0x30]
   140001d56:	cmp    QWORD PTR [rbx+0x18],rdi
   140001d5a:	jne    0x140001d70
   140001d5c:	movups XMMWORD PTR [rbx+0x30],xmm0
   140001d60:	movsd  QWORD PTR [rbx+0x40],xmm1
   140001d65:	mov    rbx,QWORD PTR [rsp+0x50]
   140001d6a:	add    rsp,0x40
   140001d6e:	pop    rdi
   140001d6f:	ret    
   140001d70:	movups XMMWORD PTR [rbx+0x48],xmm0
   140001d74:	movsd  QWORD PTR [rbx+0x58],xmm1
   140001d79:	mov    rbx,QWORD PTR [rsp+0x50]
   140001d7e:	add    rsp,0x40
   140001d82:	pop    rdi
   140001d83:	ret    
   140001d84:	int3   
   140001d85:	int3   
   140001d86:	int3   
   140001d87:	int3   
   140001d88:	int3   
   140001d89:	int3   
   140001d8a:	int3   
   140001d8b:	int3   
   140001d8c:	int3   
   140001d8d:	int3   
   140001d8e:	int3   
   140001d8f:	int3   
   140001d90:	mov    QWORD PTR [rsp+0x8],rbx
   140001d95:	mov    QWORD PTR [rsp+0x10],rsi
   140001d9a:	push   rdi
   140001d9b:	sub    rsp,0x50
   140001d9f:	mov    rdi,rcx
   140001da2:	call   0x14002aef0
   140001da7:	inc    eax
   140001da9:	movsxd rcx,eax
   140001dac:	shl    rcx,0x3
   140001db0:	call   0x14001d2c0
   140001db5:	mov    rcx,rdi
   140001db8:	mov    QWORD PTR [rdi+0xa8],rax
   140001dbf:	call   0x14002a4e0
   140001dc4:	mov    rbx,rax
   140001dc7:	test   rax,rax
   140001dca:	je     0x140001ebd
   140001dd0:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140001dd5:	movsd  xmm6,QWORD PTR [rip+0x3b5fb]        # 0x14003d3d8
   140001ddd:	movaps XMMWORD PTR [rsp+0x30],xmm7
   140001de2:	movsd  xmm7,QWORD PTR [rip+0x3b69e]        # 0x14003d488
   140001dea:	xor    esi,esi
   140001dec:	movaps XMMWORD PTR [rsp+0x20],xmm8
   140001df2:	xorps  xmm8,xmm8
   140001df6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001e00:	mov    rcx,QWORD PTR [rdi+0xa8]
   140001e07:	lea    rsi,[rsi+0x8]
   140001e0b:	mov    QWORD PTR [rsi+rcx*1-0x8],rbx
   140001e10:	mov    rcx,rbx
   140001e13:	call   0x14001b8d0
   140001e18:	movsd  xmm0,QWORD PTR [rbx+0x40]
   140001e1d:	mulsd  xmm0,xmm7
   140001e21:	comisd xmm0,xmm8
   140001e26:	jb     0x140001e2e
   140001e28:	addsd  xmm0,xmm6
   140001e2c:	jmp    0x140001e32
   140001e2e:	subsd  xmm0,xmm6
   140001e32:	cvttsd2si eax,xmm0
   140001e36:	movsd  xmm0,QWORD PTR [rbx+0x48]
   140001e3b:	mulsd  xmm0,xmm7
   140001e3f:	mov    WORD PTR [rbx+0x72],ax
   140001e43:	cwde   
   140001e44:	cdq    
   140001e45:	sub    eax,edx
   140001e47:	sar    eax,1
   140001e49:	mov    DWORD PTR [rbx+0x58],eax
   140001e4c:	mov    DWORD PTR [rbx+0x54],eax
   140001e4f:	comisd xmm0,xmm8
   140001e54:	jb     0x140001e5c
   140001e56:	addsd  xmm0,xmm6
   140001e5a:	jmp    0x140001e60
   140001e5c:	subsd  xmm0,xmm6
   140001e60:	cvttsd2si eax,xmm0
   140001e64:	mov    WORD PTR [rbx+0x74],ax
   140001e68:	cwde   
   140001e69:	mov    DWORD PTR [rbx+0x50],eax
   140001e6c:	mov    rax,QWORD PTR [rbx+0x20]
   140001e70:	movsxd rcx,DWORD PTR [rax+0xd8]
   140001e77:	shl    rcx,0x3
   140001e7b:	call   QWORD PTR [rip+0x3b2e7]        # 0x14003d168
   140001e81:	mov    ecx,0x28
   140001e86:	mov    QWORD PTR [rbx+0x88],rax
   140001e8d:	call   0x14001d2c0
   140001e92:	mov    rdx,rbx
   140001e95:	mov    rcx,rdi
   140001e98:	mov    QWORD PTR [rbx+0x68],rax
   140001e9c:	call   0x14002a5e0
   140001ea1:	mov    rbx,rax
   140001ea4:	test   rax,rax
   140001ea7:	jne    0x140001e00
   140001ead:	movaps xmm8,XMMWORD PTR [rsp+0x20]
   140001eb3:	movaps xmm7,XMMWORD PTR [rsp+0x30]
   140001eb8:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   140001ebd:	mov    rcx,rdi
   140001ec0:	call   0x14002a4e0
   140001ec5:	mov    rsi,rax
   140001ec8:	test   rax,rax
   140001ecb:	je     0x140001f31
   140001ecd:	nop    DWORD PTR [rax]
   140001ed0:	mov    rdx,rsi
   140001ed3:	mov    rcx,rdi
   140001ed6:	call   0x14002b830
   140001edb:	mov    rbx,rax
   140001ede:	test   rax,rax
   140001ee1:	je     0x140001f1e
   140001ee3:	mov    rcx,rbx
   140001ee6:	call   0x140001c80
   140001eeb:	lea    rdx,[rip+0x3b512]        # 0x14003d404
   140001ef2:	mov    rcx,rbx
   140001ef5:	call   0x1400275b0
   140001efa:	test   rax,rax
   140001efd:	je     0x140001f0b
   140001eff:	cmp    BYTE PTR [rax],0x0
   140001f02:	je     0x140001f0b
   140001f04:	mov    BYTE PTR [rdi+0x91],0x1
   140001f0b:	mov    rdx,rbx
   140001f0e:	mov    rcx,rdi
   140001f11:	call   0x14002b9e0
   140001f16:	mov    rbx,rax
   140001f19:	test   rax,rax
   140001f1c:	jne    0x140001ee3
   140001f1e:	mov    rdx,rsi
   140001f21:	mov    rcx,rdi
   140001f24:	call   0x14002a5e0
   140001f29:	mov    rsi,rax
   140001f2c:	test   rax,rax
   140001f2f:	jne    0x140001ed0
   140001f31:	mov    rbx,QWORD PTR [rsp+0x60]
   140001f36:	mov    rsi,QWORD PTR [rsp+0x68]
   140001f3b:	add    rsp,0x50
   140001f3f:	pop    rdi
   140001f40:	ret    
   140001f41:	int3   
   140001f42:	int3   
   140001f43:	int3   
   140001f44:	int3   
   140001f45:	int3   
   140001f46:	int3   
   140001f47:	int3   
   140001f48:	int3   
   140001f49:	int3   
   140001f4a:	int3   
   140001f4b:	int3   
   140001f4c:	int3   
   140001f4d:	int3   
   140001f4e:	int3   
   140001f4f:	int3   
   140001f50:	rex push rbx
   140001f52:	sub    rsp,0x20
   140001f56:	mov    rbx,rcx
   140001f59:	call   0x14001b8d0
   140001f5e:	mov    rax,QWORD PTR [rbx+0x20]
   140001f62:	movzx  edx,BYTE PTR [rax+0x90]
   140001f69:	mov    rcx,rbx
   140001f6c:	call   0x1400021c0
   140001f71:	mov    rax,QWORD PTR [rbx+0x20]
   140001f75:	movsxd rcx,DWORD PTR [rax+0xd8]
   140001f7c:	shl    rcx,0x3
   140001f80:	call   QWORD PTR [rip+0x3b1e2]        # 0x14003d168
   140001f86:	mov    ecx,0x28
   140001f8b:	mov    QWORD PTR [rbx+0x88],rax
   140001f92:	call   0x14001d2c0
   140001f97:	mov    QWORD PTR [rbx+0x68],rax
   140001f9b:	add    rsp,0x20
   140001f9f:	pop    rbx
   140001fa0:	ret    
   140001fa1:	int3   
   140001fa2:	int3   
   140001fa3:	int3   
   140001fa4:	int3   
   140001fa5:	int3   
   140001fa6:	int3   
   140001fa7:	int3   
   140001fa8:	int3   
   140001fa9:	int3   
   140001faa:	int3   
   140001fab:	int3   
   140001fac:	int3   
   140001fad:	int3   
   140001fae:	int3   
   140001faf:	int3   
   140001fb0:	rex push rbx
   140001fb2:	push   rbp
   140001fb3:	push   rsi
   140001fb4:	push   rdi
   140001fb5:	sub    rsp,0x38
   140001fb9:	lea    rdx,[rip+0x3b450]        # 0x14003d410
   140001fc0:	xor    ebx,ebx
   140001fc2:	mov    rdi,rcx
   140001fc5:	mov    ebp,ebx
   140001fc7:	call   0x140027500
   140001fcc:	test   rax,rax
   140001fcf:	je     0x140001fe3
   140001fd1:	mov    edx,DWORD PTR [rax+0x10]
   140001fd4:	lea    r8,[rip+0x3b43d]        # 0x14003d418
   140001fdb:	mov    rcx,rdi
   140001fde:	call   0x140027740
   140001fe3:	mov    rcx,rdi
   140001fe6:	call   0x14001a020
   140001feb:	lea    rdx,[rip+0x3b42a]        # 0x14003d41c
   140001ff2:	mov    rcx,rdi
   140001ff5:	call   0x140027500
   140001ffa:	mov    r9d,0x2
   140002000:	mov    rcx,rdi
   140002003:	mov    rdx,rax
   140002006:	mov    r8d,r9d
   140002009:	call   0x14001c350
   14000200e:	mov    ecx,0xa
   140002013:	cmp    eax,ecx
   140002015:	cmovl  ecx,eax
   140002018:	mov    DWORD PTR [rdi+0xd8],ecx
   14000201e:	mov    DWORD PTR [rip+0x53448],ecx        # 0x14005546c
   140002024:	mov    rax,QWORD PTR [rdi+0x50]
   140002028:	mov    rcx,rdi
   14000202b:	mov    DWORD PTR [rax+0x34],0x2
   140002032:	call   0x140001d90
   140002037:	lea    rdx,[rip+0x3b3e2]        # 0x14003d420
   14000203e:	mov    rcx,rdi
   140002041:	call   0x1400275b0
   140002046:	mov    rsi,rax
   140002049:	test   rax,rax
   14000204c:	je     0x140002096
   14000204e:	cmp    BYTE PTR [rax],bl
   140002050:	je     0x140002096
   140002052:	mov    rdx,rax
   140002055:	mov    rcx,rdi
   140002058:	call   0x14002a490
   14000205d:	mov    rbp,rax
   140002060:	test   rax,rax
   140002063:	jne    0x140002096
   140002065:	call   QWORD PTR [rip+0x3b265]        # 0x14003d2d0
   14000206b:	lea    rdx,[rip+0x3b3b6]        # 0x14003d428
   140002072:	mov    r8,rsi
   140002075:	lea    rcx,[rax+0x60]
   140002079:	call   QWORD PTR [rip+0x3b241]        # 0x14003d2c0
   14000207f:	call   QWORD PTR [rip+0x3b24b]        # 0x14003d2d0
   140002085:	lea    rdx,[rip+0x3b3d4]        # 0x14003d460
   14000208c:	lea    rcx,[rax+0x60]
   140002090:	call   QWORD PTR [rip+0x3b22a]        # 0x14003d2c0
   140002096:	mov    rcx,rdi
   140002099:	call   0x14002aef0
   14000209e:	test   eax,eax
   1400020a0:	je     0x14000219d
   1400020a6:	lea    rdx,[rsp+0x60]
   1400020ab:	xor    r8d,r8d
   1400020ae:	mov    rcx,rdi
   1400020b1:	mov    QWORD PTR [rsp+0x78],r14
   1400020b6:	call   0x14000fc10
   1400020bb:	mov    r14,rax
   1400020be:	mov    eax,DWORD PTR [rsp+0x60]
   1400020c2:	cmp    eax,0x1
   1400020c5:	jne    0x1400020e7
   1400020c7:	mov    rdx,rbp
   1400020ca:	mov    rcx,rdi
   1400020cd:	call   0x140001080
   1400020d2:	mov    rcx,rdi
   1400020d5:	call   0x140002410
   1400020da:	mov    rcx,rdi
   1400020dd:	call   0x140009a30
   1400020e2:	jmp    0x14000217b
   1400020e7:	mov    QWORD PTR [rsp+0x70],r13
   1400020ec:	mov    r13d,ebx
   1400020ef:	test   eax,eax
   1400020f1:	jle    0x140002151
   1400020f3:	mov    QWORD PTR [rsp+0x68],r12
   1400020f8:	mov    QWORD PTR [rsp+0x30],r15
   1400020fd:	mov    r12,r14
   140002100:	mov    rsi,QWORD PTR [r12]
   140002104:	test   rbp,rbp
   140002107:	je     0x14000211b
   140002109:	mov    rdx,rbp
   14000210c:	mov    rcx,rsi
   14000210f:	call   0x14002ac40
   140002114:	mov    r15,rbp
   140002117:	test   eax,eax
   140002119:	jne    0x14000211e
   14000211b:	mov    r15,rbx
   14000211e:	mov    rcx,rsi
   140002121:	call   0x140010050
   140002126:	mov    rdx,r15
   140002129:	mov    rcx,rsi
   14000212c:	call   0x140001080
   140002131:	mov    rcx,rsi
   140002134:	call   0x140002410
   140002139:	inc    r13d
   14000213c:	add    r12,0x8
   140002140:	cmp    r13d,DWORD PTR [rsp+0x60]
   140002145:	jl     0x140002100
   140002147:	mov    r15,QWORD PTR [rsp+0x30]
   14000214c:	mov    r12,QWORD PTR [rsp+0x68]
   140002151:	mov    rcx,rdi
   140002154:	call   0x140009a30
   140002159:	mov    ecx,DWORD PTR [rsp+0x60]
   14000215d:	mov    r9d,0x8
   140002163:	mov    r8,rdi
   140002166:	mov    rdx,r14
   140002169:	mov    DWORD PTR [rsp+0x20],0x1
   140002171:	call   0x14000f0d0
   140002176:	mov    r13,QWORD PTR [rsp+0x70]
   14000217b:	cmp    DWORD PTR [rsp+0x60],ebx
   14000217f:	jle    0x140002198
   140002181:	mov    rdx,QWORD PTR [r14]
   140002184:	mov    rcx,rdi
   140002187:	call   0x14002ad00
   14000218c:	inc    ebx
   14000218e:	lea    r14,[r14+0x8]
   140002192:	cmp    ebx,DWORD PTR [rsp+0x60]
   140002196:	jl     0x140002181
   140002198:	mov    r14,QWORD PTR [rsp+0x78]
   14000219d:	lea    rdx,[rip+0x1c]        # 0x1400021c0
   1400021a4:	mov    rcx,rdi
   1400021a7:	add    rsp,0x38
   1400021ab:	pop    rdi
   1400021ac:	pop    rsi
   1400021ad:	pop    rbp
   1400021ae:	pop    rbx
   1400021af:	jmp    0x140023d50
   1400021b4:	int3   
   1400021b5:	int3   
   1400021b6:	int3   
   1400021b7:	int3   
   1400021b8:	int3   
   1400021b9:	int3   
   1400021ba:	int3   
   1400021bb:	int3   
   1400021bc:	int3   
   1400021bd:	int3   
   1400021be:	int3   
   1400021bf:	int3   
   1400021c0:	movsd  xmm0,QWORD PTR [rcx+0x40]
   1400021c5:	movsd  xmm2,QWORD PTR [rip+0x3b2bb]        # 0x14003d488
   1400021cd:	movsd  xmm1,QWORD PTR [rip+0x3b203]        # 0x14003d3d8
   1400021d5:	xorps  xmm3,xmm3
   1400021d8:	mulsd  xmm0,xmm2
   1400021dc:	comisd xmm0,xmm3
   1400021e0:	jb     0x1400021e8
   1400021e2:	addsd  xmm0,xmm1
   1400021e6:	jmp    0x1400021ec
   1400021e8:	subsd  xmm0,xmm1
   1400021ec:	cvttsd2si eax,xmm0
   1400021f0:	movsd  xmm0,QWORD PTR [rcx+0x48]
   1400021f5:	mulsd  xmm0,xmm2
   1400021f9:	mov    WORD PTR [rcx+0x72],ax
   1400021fd:	cwde   
   1400021fe:	cdq    
   1400021ff:	sub    eax,edx
   140002201:	sar    eax,1
   140002203:	mov    DWORD PTR [rcx+0x58],eax
   140002206:	mov    DWORD PTR [rcx+0x54],eax
   140002209:	comisd xmm0,xmm3
   14000220d:	jb     0x140002220
   14000220f:	addsd  xmm0,xmm1
   140002213:	cvttsd2si eax,xmm0
   140002217:	mov    WORD PTR [rcx+0x74],ax
   14000221b:	cwde   
   14000221c:	mov    DWORD PTR [rcx+0x50],eax
   14000221f:	ret    
   140002220:	subsd  xmm0,xmm1
   140002224:	cvttsd2si eax,xmm0
   140002228:	mov    WORD PTR [rcx+0x74],ax
   14000222c:	cwde   
   14000222d:	mov    DWORD PTR [rcx+0x50],eax
   140002230:	ret    
   140002231:	int3   
   140002232:	int3   
   140002233:	int3   
   140002234:	int3   
   140002235:	int3   
   140002236:	int3   
   140002237:	int3   
   140002238:	int3   
   140002239:	int3   
   14000223a:	int3   
   14000223b:	int3   
   14000223c:	int3   
   14000223d:	int3   
   14000223e:	int3   
   14000223f:	int3   
   140002240:	mov    rax,rsp
   140002243:	mov    QWORD PTR [rax+0x8],rbx
   140002247:	mov    QWORD PTR [rax+0x10],rbp
   14000224b:	mov    QWORD PTR [rax+0x18],rsi
   14000224f:	mov    QWORD PTR [rax+0x20],rdi
   140002253:	push   r13
   140002255:	push   r14
   140002257:	push   r15
   140002259:	sub    rsp,0x60
   14000225d:	mov    rdi,QWORD PTR [rip+0x532e4]        # 0x140055548
   140002264:	movaps XMMWORD PTR [rax-0x28],xmm6
   140002268:	movaps XMMWORD PTR [rax-0x38],xmm7
   14000226c:	lea    rdx,[rip+0x512f5]        # 0x140053568
   140002273:	mov    rbp,rdi
   140002276:	mov    r14,rdi
   140002279:	movaps XMMWORD PTR [rax-0x48],xmm8
   14000227e:	lea    rcx,[rdi+0x8]
   140002282:	movaps XMMWORD PTR [rax-0x58],xmm9
   140002287:	mov    r15,rdi
   14000228a:	mov    r13,rdi
   14000228d:	call   0x140003870
   140002292:	lea    rdx,[rip+0x512af]        # 0x140053548
   140002299:	lea    rcx,[rdi+0x8]
   14000229d:	movaps xmm6,xmm0
   1400022a0:	call   0x140003870
   1400022a5:	lea    rdx,[rip+0x512cc]        # 0x140053578
   1400022ac:	lea    rcx,[rdi+0x8]
   1400022b0:	movaps xmm7,xmm0
   1400022b3:	call   0x140003870
   1400022b8:	lea    rdx,[rip+0x51299]        # 0x140053558
   1400022bf:	lea    rcx,[rdi+0x8]
   1400022c3:	movaps xmm8,xmm0
   1400022c7:	call   0x140003870
   1400022cc:	mov    esi,0x1
   1400022d1:	add    rdi,0x68
   1400022d5:	cmp    DWORD PTR [rip+0x532b5],esi        # 0x140055590
   1400022db:	movaps xmm9,xmm0
   1400022df:	jle    0x140002376
   1400022e5:	lea    rbx,[rdi+0x8]
   1400022e9:	nop    DWORD PTR [rax+0x0]
   1400022f0:	lea    rdx,[rip+0x51271]        # 0x140053568
   1400022f7:	mov    rcx,rbx
   1400022fa:	call   0x140003870
   1400022ff:	comisd xmm6,xmm0
   140002303:	jbe    0x14000230b
   140002305:	movaps xmm6,xmm0
   140002308:	mov    rbp,rdi
   14000230b:	lea    rdx,[rip+0x51266]        # 0x140053578
   140002312:	mov    rcx,rbx
   140002315:	call   0x140003870
   14000231a:	comisd xmm8,xmm0
   14000231f:	jbe    0x140002328
   140002321:	movaps xmm8,xmm0
   140002325:	mov    r15,rdi
   140002328:	lea    rdx,[rip+0x51219]        # 0x140053548
   14000232f:	mov    rcx,rbx
   140002332:	call   0x140003870
   140002337:	comisd xmm7,xmm0
   14000233b:	jbe    0x140002343
   14000233d:	movaps xmm7,xmm0
   140002340:	mov    r14,rdi
   140002343:	lea    rdx,[rip+0x5120e]        # 0x140053558
   14000234a:	mov    rcx,rbx
   14000234d:	call   0x140003870
   140002352:	comisd xmm9,xmm0
   140002357:	jbe    0x140002360
   140002359:	movaps xmm9,xmm0
   14000235d:	mov    r13,rdi
   140002360:	inc    esi
   140002362:	add    rdi,0x68
   140002366:	add    rbx,0x68
   14000236a:	cmp    esi,DWORD PTR [rip+0x53220]        # 0x140055590
   140002370:	jl     0x1400022f0
   140002376:	movsd  xmm2,QWORD PTR [rip+0x511f2]        # 0x140053570
   14000237e:	movsd  xmm1,QWORD PTR [rip+0x511e2]        # 0x140053568
   140002386:	lea    rcx,[rbp+0x8]
   14000238a:	call   0x14000ae60
   14000238f:	lea    rcx,[r15+0x8]
   140002393:	movsd  xmm2,QWORD PTR [rip+0x511e5]        # 0x140053580
   14000239b:	movsd  xmm1,QWORD PTR [rip+0x511d5]        # 0x140053578
   1400023a3:	call   0x14000ae60
   1400023a8:	lea    rcx,[r14+0x8]
   1400023ac:	movsd  xmm2,QWORD PTR [rip+0x5119c]        # 0x140053550
   1400023b4:	movsd  xmm1,QWORD PTR [rip+0x5118c]        # 0x140053548
   1400023bc:	call   0x14000ae60
   1400023c1:	lea    rcx,[r13+0x8]
   1400023c5:	movsd  xmm2,QWORD PTR [rip+0x51193]        # 0x140053560
   1400023cd:	movsd  xmm1,QWORD PTR [rip+0x51183]        # 0x140053558
   1400023d5:	lea    r11,[rsp+0x60]
   1400023da:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   1400023df:	movaps xmm7,XMMWORD PTR [rsp+0x40]
   1400023e4:	mov    rbx,QWORD PTR [r11+0x20]
   1400023e8:	mov    rbp,QWORD PTR [r11+0x28]
   1400023ec:	mov    rsi,QWORD PTR [r11+0x30]
   1400023f0:	mov    rdi,QWORD PTR [r11+0x38]
   1400023f4:	movaps xmm8,XMMWORD PTR [r11-0x30]
   1400023f9:	movaps xmm9,XMMWORD PTR [r11-0x40]
   1400023fe:	mov    rsp,r11
   140002401:	pop    r15
   140002403:	pop    r14
   140002405:	pop    r13
   140002407:	jmp    0x14000ae60
   14000240c:	int3   
   14000240d:	int3   
   14000240e:	int3   
   14000240f:	int3   
   140002410:	mov    QWORD PTR [rsp+0x8],rbx
   140002415:	mov    QWORD PTR [rsp+0x10],rbp
   14000241a:	mov    QWORD PTR [rsp+0x18],rsi
   14000241f:	push   rdi
   140002420:	sub    rsp,0x20
   140002424:	xor    edi,edi
   140002426:	mov    rsi,rcx
   140002429:	mov    ebp,edi
   14000242b:	call   0x1400030c0
   140002430:	lea    rdx,[rip+0x3b0d1]        # 0x14003d508
   140002437:	mov    rcx,rsi
   14000243a:	call   0x1400275b0
   14000243f:	mov    rbx,rax
   140002442:	test   rax,rax
   140002445:	je     0x140002561
   14000244b:	lea    rdx,[rip+0x3b0be]        # 0x14003d510
   140002452:	mov    rcx,rax
   140002455:	call   0x14001ca70
   14000245a:	test   eax,eax
   14000245c:	jne    0x140002463
   14000245e:	lea    ebp,[rdi+0x1]
   140002461:	jmp    0x140002473
   140002463:	mov    rcx,rbx
   140002466:	call   0x14001c4b0
   14000246b:	test   eax,eax
   14000246d:	jne    0x140002561
   140002473:	cmp    BYTE PTR [rip+0x5303f],dil        # 0x1400554b9
   14000247a:	je     0x1400024aa
   14000247c:	lea    rax,[rip+0x3b095]        # 0x14003d518
   140002483:	lea    rbx,[rip+0x3b096]        # 0x14003d520
   14000248a:	test   ebp,ebp
   14000248c:	cmovne rbx,rax
   140002490:	call   QWORD PTR [rip+0x3ae3a]        # 0x14003d2d0
   140002496:	lea    rdx,[rip+0x3b08b]        # 0x14003d528
   14000249d:	lea    rcx,[rax+0x60]
   1400024a1:	mov    r8,rbx
   1400024a4:	call   QWORD PTR [rip+0x3ae16]        # 0x14003d2c0
   1400024aa:	mov    rcx,rsi
   1400024ad:	call   0x140002d70
   1400024b2:	mov    rcx,rsi
   1400024b5:	call   0x140002610
   1400024ba:	test   ebp,ebp
   1400024bc:	je     0x1400024c5
   1400024be:	call   0x1400032e0
   1400024c3:	jmp    0x1400024ca
   1400024c5:	call   0x140003680
   1400024ca:	test   eax,eax
   1400024cc:	mov    eax,DWORD PTR [rip+0x530be]        # 0x140055590
   1400024d2:	je     0x140002518
   1400024d4:	mov    rdx,QWORD PTR [rip+0x5306d]        # 0x140055548
   1400024db:	mov    r8d,edi
   1400024de:	test   eax,eax
   1400024e0:	jle    0x140002518
   1400024e2:	mov    rax,QWORD PTR [rdx]
   1400024e5:	inc    r8d
   1400024e8:	lea    rdx,[rdx+0x68]
   1400024ec:	mov    rcx,QWORD PTR [rax+0x88]
   1400024f3:	mov    rax,QWORD PTR [rdx-0x60]
   1400024f7:	mov    QWORD PTR [rcx],rax
   1400024fa:	mov    rax,QWORD PTR [rdx-0x68]
   1400024fe:	mov    rcx,QWORD PTR [rax+0x88]
   140002505:	mov    rax,QWORD PTR [rdx-0x58]
   140002509:	mov    QWORD PTR [rcx+0x8],rax
   14000250d:	mov    eax,DWORD PTR [rip+0x5307d]        # 0x140055590
   140002513:	cmp    r8d,eax
   140002516:	jl     0x1400024e2
   140002518:	mov    rbx,QWORD PTR [rip+0x53029]        # 0x140055548
   14000251f:	test   eax,eax
   140002521:	jle    0x14000253d
   140002523:	add    rbx,0x28
   140002527:	mov    rcx,rbx
   14000252a:	call   0x1400076e0
   14000252f:	inc    edi
   140002531:	add    rbx,0x68
   140002535:	cmp    edi,DWORD PTR [rip+0x53055]        # 0x140055590
   14000253b:	jl     0x140002527
   14000253d:	call   0x140008290
   140002542:	call   0x14000b100
   140002547:	mov    rcx,QWORD PTR [rip+0x52ffa]        # 0x140055548
   14000254e:	call   QWORD PTR [rip+0x3ad4c]        # 0x14003d2a0
   140002554:	mov    rcx,QWORD PTR [rip+0x50fdd]        # 0x140053538
   14000255b:	call   QWORD PTR [rip+0x3ad3f]        # 0x14003d2a0
   140002561:	mov    rbx,QWORD PTR [rsp+0x30]
   140002566:	mov    rbp,QWORD PTR [rsp+0x38]
   14000256b:	mov    rsi,QWORD PTR [rsp+0x40]
   140002570:	add    rsp,0x20
   140002574:	pop    rdi
   140002575:	ret    
   140002576:	int3   
   140002577:	int3   
   140002578:	int3   
   140002579:	int3   
   14000257a:	int3   
   14000257b:	int3   
   14000257c:	int3   
   14000257d:	int3   
   14000257e:	int3   
   14000257f:	int3   
   140002580:	movsd  xmm1,QWORD PTR [r8+0x8]
   140002586:	movsd  xmm3,QWORD PTR [rcx+0x8]
   14000258b:	movsd  xmm0,QWORD PTR [rdx+0x8]
   140002590:	subsd  xmm0,xmm1
   140002594:	subsd  xmm1,xmm3
   140002598:	subsd  xmm3,QWORD PTR [rdx+0x8]
   14000259d:	mulsd  xmm0,QWORD PTR [rcx]
   1400025a1:	mulsd  xmm1,QWORD PTR [rdx]
   1400025a5:	addsd  xmm0,xmm1
   1400025a9:	mulsd  xmm3,QWORD PTR [r8]
   1400025ae:	addsd  xmm0,xmm3
   1400025b2:	andps  xmm0,XMMWORD PTR [rip+0x3afa7]        # 0x14003d560
   1400025b9:	mulsd  xmm0,QWORD PTR [rip+0x3ae17]        # 0x14003d3d8
   1400025c1:	ret    
   1400025c2:	int3   
   1400025c3:	int3   
   1400025c4:	int3   
   1400025c5:	int3   
   1400025c6:	int3   
   1400025c7:	int3   
   1400025c8:	int3   
   1400025c9:	int3   
   1400025ca:	int3   
   1400025cb:	int3   
   1400025cc:	int3   
   1400025cd:	int3   
   1400025ce:	int3   
   1400025cf:	int3   
   1400025d0:	movsd  xmm0,QWORD PTR [rcx]
   1400025d4:	mov    rax,QWORD PTR [rsp+0x28]
   1400025d9:	addsd  xmm0,QWORD PTR [rdx]
   1400025dd:	addsd  xmm0,QWORD PTR [r8]
   1400025e2:	divsd  xmm0,QWORD PTR [rip+0x3af66]        # 0x14003d550
   1400025ea:	movsd  QWORD PTR [r9],xmm0
   1400025ef:	movsd  xmm1,QWORD PTR [rcx+0x8]
   1400025f4:	addsd  xmm1,QWORD PTR [rdx+0x8]
   1400025f9:	addsd  xmm1,QWORD PTR [r8+0x8]
   1400025ff:	divsd  xmm1,QWORD PTR [rip+0x3af49]        # 0x14003d550
   140002607:	movsd  QWORD PTR [rax],xmm1
   14000260b:	ret    
   14000260c:	int3   
   14000260d:	int3   
   14000260e:	int3   
   14000260f:	int3   
   140002610:	sub    rsp,0x68
   140002614:	mov    r8,QWORD PTR [rip+0x52f2d]        # 0x140055548
   14000261b:	mov    r9d,DWORD PTR [rip+0x52f6e]        # 0x140055590
   140002622:	movaps XMMWORD PTR [rsp+0x50],xmm6
   140002627:	movaps XMMWORD PTR [rsp+0x40],xmm7
   14000262c:	movaps XMMWORD PTR [rsp+0x30],xmm8
   140002632:	movaps XMMWORD PTR [rsp+0x20],xmm9
   140002638:	mov    r10d,0x1
   14000263e:	mov    r11,rcx
   140002641:	movsd  xmm7,QWORD PTR [r8+0x8]
   140002647:	movsd  xmm6,QWORD PTR [r8+0x10]
   14000264d:	movaps xmm9,xmm7
   140002651:	addsd  xmm7,QWORD PTR [r8+0x38]
   140002657:	movaps xmm8,xmm6
   14000265b:	addsd  xmm9,QWORD PTR [r8+0x28]
   140002661:	addsd  xmm8,QWORD PTR [r8+0x30]
   140002667:	addsd  xmm6,QWORD PTR [r8+0x40]
   14000266d:	cmp    r9d,r10d
   140002670:	jle    0x140002876
   140002676:	lea    eax,[r9-0x1]
   14000267a:	cmp    eax,0x4
   14000267d:	jl     0x140002813
   140002683:	lea    edx,[r9-0x5]
   140002687:	lea    rcx,[r8+0xa0]
   14000268e:	shr    edx,0x2
   140002691:	inc    edx
   140002693:	imul   rax,rdx,0x1a0
   14000269a:	lea    r10d,[rdx*4+0x1]
   1400026a2:	add    r8,rax
   1400026a5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400026b0:	movsd  xmm0,QWORD PTR [rcx-0x30]
   1400026b5:	movsd  xmm1,QWORD PTR [rcx-0x28]
   1400026ba:	movaps xmm3,xmm0
   1400026bd:	addsd  xmm0,QWORD PTR [rcx]
   1400026c1:	movaps xmm2,xmm1
   1400026c4:	addsd  xmm3,QWORD PTR [rcx-0x10]
   1400026c9:	addsd  xmm2,QWORD PTR [rcx-0x8]
   1400026ce:	addsd  xmm1,QWORD PTR [rcx+0x8]
   1400026d3:	comisd xmm9,xmm3
   1400026d8:	jbe    0x1400026de
   1400026da:	movaps xmm9,xmm3
   1400026de:	comisd xmm8,xmm2
   1400026e3:	jbe    0x1400026e9
   1400026e5:	movaps xmm8,xmm2
   1400026e9:	comisd xmm0,xmm7
   1400026ed:	jbe    0x1400026f2
   1400026ef:	movaps xmm7,xmm0
   1400026f2:	comisd xmm1,xmm6
   1400026f6:	jbe    0x1400026fb
   1400026f8:	movaps xmm6,xmm1
   1400026fb:	movsd  xmm0,QWORD PTR [rcx+0x38]
   140002700:	movsd  xmm1,QWORD PTR [rcx+0x40]
   140002705:	movaps xmm3,xmm0
   140002708:	addsd  xmm0,QWORD PTR [rcx+0x68]
   14000270d:	movaps xmm2,xmm1
   140002710:	addsd  xmm3,QWORD PTR [rcx+0x58]
   140002715:	addsd  xmm2,QWORD PTR [rcx+0x60]
   14000271a:	addsd  xmm1,QWORD PTR [rcx+0x70]
   14000271f:	comisd xmm9,xmm3
   140002724:	jbe    0x14000272a
   140002726:	movaps xmm9,xmm3
   14000272a:	comisd xmm8,xmm2
   14000272f:	jbe    0x140002735
   140002731:	movaps xmm8,xmm2
   140002735:	comisd xmm0,xmm7
   140002739:	jbe    0x14000273e
   14000273b:	movaps xmm7,xmm0
   14000273e:	comisd xmm1,xmm6
   140002742:	jbe    0x140002747
   140002744:	movaps xmm6,xmm1
   140002747:	movsd  xmm0,QWORD PTR [rcx+0xa0]
   14000274f:	movsd  xmm1,QWORD PTR [rcx+0xa8]
   140002757:	movaps xmm3,xmm0
   14000275a:	addsd  xmm0,QWORD PTR [rcx+0xd0]
   140002762:	movaps xmm2,xmm1
   140002765:	addsd  xmm3,QWORD PTR [rcx+0xc0]
   14000276d:	addsd  xmm2,QWORD PTR [rcx+0xc8]
   140002775:	addsd  xmm1,QWORD PTR [rcx+0xd8]
   14000277d:	comisd xmm9,xmm3
   140002782:	jbe    0x140002788
   140002784:	movaps xmm9,xmm3
   140002788:	comisd xmm8,xmm2
   14000278d:	jbe    0x140002793
   14000278f:	movaps xmm8,xmm2
   140002793:	comisd xmm0,xmm7
   140002797:	jbe    0x14000279c
   140002799:	movaps xmm7,xmm0
   14000279c:	comisd xmm1,xmm6
   1400027a0:	jbe    0x1400027a5
   1400027a2:	movaps xmm6,xmm1
   1400027a5:	movsd  xmm0,QWORD PTR [rcx+0x108]
   1400027ad:	movsd  xmm1,QWORD PTR [rcx+0x110]
   1400027b5:	movaps xmm3,xmm0
   1400027b8:	addsd  xmm0,QWORD PTR [rcx+0x138]
   1400027c0:	movaps xmm2,xmm1
   1400027c3:	addsd  xmm3,QWORD PTR [rcx+0x128]
   1400027cb:	addsd  xmm2,QWORD PTR [rcx+0x130]
   1400027d3:	addsd  xmm1,QWORD PTR [rcx+0x140]
   1400027db:	comisd xmm9,xmm3
   1400027e0:	jbe    0x1400027e6
   1400027e2:	movaps xmm9,xmm3
   1400027e6:	comisd xmm8,xmm2
   1400027eb:	jbe    0x1400027f1
   1400027ed:	movaps xmm8,xmm2
   1400027f1:	comisd xmm0,xmm7
   1400027f5:	jbe    0x1400027fa
   1400027f7:	movaps xmm7,xmm0
   1400027fa:	comisd xmm1,xmm6
   1400027fe:	jbe    0x140002803
   140002800:	movaps xmm6,xmm1
   140002803:	add    rcx,0x1a0
   14000280a:	dec    rdx
   14000280d:	jne    0x1400026b0
   140002813:	cmp    r10d,r9d
   140002816:	jge    0x140002876
   140002818:	sub    r9d,r10d
   14000281b:	lea    rax,[r8+0x38]
   14000281f:	mov    ecx,r9d
   140002822:	movsd  xmm0,QWORD PTR [rax+0x38]
   140002827:	movsd  xmm1,QWORD PTR [rax+0x40]
   14000282c:	add    rax,0x68
   140002830:	movaps xmm3,xmm0
   140002833:	addsd  xmm0,QWORD PTR [rax]
   140002837:	movaps xmm2,xmm1
   14000283a:	addsd  xmm3,QWORD PTR [rax-0x10]
   14000283f:	addsd  xmm2,QWORD PTR [rax-0x8]
   140002844:	addsd  xmm1,QWORD PTR [rax+0x8]
   140002849:	comisd xmm9,xmm3
   14000284e:	jbe    0x140002854
   140002850:	movaps xmm9,xmm3
   140002854:	comisd xmm8,xmm2
   140002859:	jbe    0x14000285f
   14000285b:	movaps xmm8,xmm2
   14000285f:	comisd xmm0,xmm7
   140002863:	jbe    0x140002868
   140002865:	movaps xmm7,xmm0
   140002868:	comisd xmm1,xmm6
   14000286c:	jbe    0x140002871
   14000286e:	movaps xmm6,xmm1
   140002871:	dec    rcx
   140002874:	jne    0x140002822
   140002876:	lea    rdx,[rip+0x3ac13]        # 0x14003d490
   14000287d:	mov    rcx,r11
   140002880:	call   0x1400275b0
   140002885:	test   rax,rax
   140002888:	je     0x1400028a5
   14000288a:	cmp    BYTE PTR [rax],0x0
   14000288d:	je     0x1400028a5
   14000288f:	mov    rcx,rax
   140002892:	call   QWORD PTR [rip+0x3a7a8]        # 0x14003d040
   140002898:	movsd  QWORD PTR [rip+0x49778],xmm0        # 0x14004c018
   1400028a0:	movaps xmm2,xmm0
   1400028a3:	jmp    0x1400028ad
   1400028a5:	movsd  xmm2,QWORD PTR [rip+0x4976b]        # 0x14004c018
   1400028ad:	movaps xmm1,xmm6
   1400028b0:	movaps xmm0,xmm7
   1400028b3:	subsd  xmm1,xmm8
   1400028b8:	subsd  xmm0,xmm9
   1400028bd:	mulsd  xmm1,xmm2
   1400028c1:	mulsd  xmm0,xmm2
   1400028c5:	subsd  xmm9,xmm0
   1400028ca:	subsd  xmm8,xmm1
   1400028cf:	addsd  xmm0,xmm7
   1400028d3:	movaps xmm7,XMMWORD PTR [rsp+0x40]
   1400028d8:	addsd  xmm1,xmm6
   1400028dc:	movsd  QWORD PTR [rip+0x52c93],xmm9        # 0x140055578
   1400028e5:	movsd  QWORD PTR [rip+0x52c7a],xmm8        # 0x140055568
   1400028ee:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   1400028f3:	movsd  QWORD PTR [rip+0x50c6c],xmm9        # 0x140053568
   1400028fc:	movsd  QWORD PTR [rip+0x50c43],xmm9        # 0x140053548
   140002905:	movsd  QWORD PTR [rip+0x50c72],xmm8        # 0x140053580
   14000290e:	movaps xmm9,XMMWORD PTR [rsp+0x20]
   140002914:	movsd  QWORD PTR [rip+0x50c53],xmm8        # 0x140053570
   14000291d:	movsd  QWORD PTR [rip+0x52c4b],xmm0        # 0x140055570
   140002925:	movsd  QWORD PTR [rip+0x52c33],xmm1        # 0x140055560
   14000292d:	movaps xmm8,XMMWORD PTR [rsp+0x30]
   140002933:	movsd  QWORD PTR [rip+0x50c3d],xmm0        # 0x140053578
   14000293b:	movsd  QWORD PTR [rip+0x50c15],xmm0        # 0x140053558
   140002943:	movsd  QWORD PTR [rip+0x50c15],xmm1        # 0x140053560
   14000294b:	movsd  QWORD PTR [rip+0x50bfd],xmm1        # 0x140053550
   140002953:	add    rsp,0x68
   140002957:	ret    
   140002958:	int3   
   140002959:	int3   
   14000295a:	int3   
   14000295b:	int3   
   14000295c:	int3   
   14000295d:	int3   
   14000295e:	int3   
   14000295f:	int3   
   140002960:	rex push rsi
   140002962:	push   r15
   140002964:	sub    rsp,0x48
   140002968:	mov    edx,DWORD PTR [rip+0x52c22]        # 0x140055590
   14000296e:	mov    r9,QWORD PTR [rip+0x52bd3]        # 0x140055548
   140002975:	xor    esi,esi
   140002977:	mov    QWORD PTR [rsp+0x68],rbp
   14000297c:	mov    r15d,ecx
   14000297f:	mov    r8d,esi
   140002982:	mov    rbp,r9
   140002985:	test   edx,edx
   140002987:	jle    0x1400029b0
   140002989:	mov    eax,esi
   14000298b:	nop    DWORD PTR [rax+rax*1+0x0]
   140002990:	mov    DWORD PTR [rax+r9*1+0x20],esi
   140002995:	mov    edx,DWORD PTR [rip+0x52bf5]        # 0x140055590
   14000299b:	inc    r8d
   14000299e:	lea    rax,[rax+0x68]
   1400029a2:	cmp    r8d,edx
   1400029a5:	jge    0x1400029b0
   1400029a7:	mov    r9,QWORD PTR [rip+0x52b9a]        # 0x140055548
   1400029ae:	jmp    0x140002990
   1400029b0:	lea    eax,[rdx-0x1]
   1400029b3:	test   eax,eax
   1400029b5:	jle    0x140002a50
   1400029bb:	mov    QWORD PTR [rsp+0x60],rbx
   1400029c0:	mov    QWORD PTR [rsp+0x70],rdi
   1400029c5:	mov    QWORD PTR [rsp+0x40],r14
   1400029ca:	mov    r14d,0x1
   1400029d0:	add    rbp,0x8
   1400029d4:	mov    edi,r14d
   1400029d7:	cmp    r14d,edx
   1400029da:	jge    0x140002a2f
   1400029dc:	lea    rbx,[rbp+0x88]
   1400029e3:	movups xmm0,XMMWORD PTR [rbx-0x20]
   1400029e7:	lea    rdx,[rbp+0x20]
   1400029eb:	lea    r8,[rsp+0x20]
   1400029f0:	lea    rcx,[rsp+0x30]
   1400029f5:	mov    r9,rbx
   1400029f8:	movaps XMMWORD PTR [rsp+0x20],xmm0
   1400029fd:	movups xmm0,XMMWORD PTR [rbp+0x0]
   140002a01:	movaps XMMWORD PTR [rsp+0x30],xmm0
   140002a06:	call   0x1400082e0
   140002a0b:	test   eax,eax
   140002a0d:	je     0x140002a1f
   140002a0f:	mov    DWORD PTR [rbp+0x18],0x1
   140002a16:	inc    esi
   140002a18:	mov    DWORD PTR [rbx-0x8],0x1
   140002a1f:	mov    edx,DWORD PTR [rip+0x52b6b]        # 0x140055590
   140002a25:	inc    edi
   140002a27:	add    rbx,0x68
   140002a2b:	cmp    edi,edx
   140002a2d:	jl     0x1400029e3
   140002a2f:	inc    r14d
   140002a32:	lea    eax,[rdx-0x1]
   140002a35:	add    rbp,0x68
   140002a39:	lea    ecx,[r14-0x1]
   140002a3d:	cmp    ecx,eax
   140002a3f:	jl     0x1400029d4
   140002a41:	mov    r14,QWORD PTR [rsp+0x40]
   140002a46:	mov    rdi,QWORD PTR [rsp+0x70]
   140002a4b:	mov    rbx,QWORD PTR [rsp+0x60]
   140002a50:	cmp    BYTE PTR [rip+0x52a62],0x1        # 0x1400554b9
   140002a57:	mov    rbp,QWORD PTR [rsp+0x68]
   140002a5c:	jbe    0x140002a7b
   140002a5e:	call   QWORD PTR [rip+0x3a86c]        # 0x14003d2d0
   140002a64:	lea    rdx,[rip+0x3aa35]        # 0x14003d4a0
   140002a6b:	mov    r9d,esi
   140002a6e:	lea    rcx,[rax+0x60]
   140002a72:	mov    r8d,r15d
   140002a75:	call   QWORD PTR [rip+0x3a845]        # 0x14003d2c0
   140002a7b:	mov    eax,esi
   140002a7d:	add    rsp,0x48
   140002a81:	pop    r15
   140002a83:	pop    rsi
   140002a84:	ret    
   140002a85:	int3   
   140002a86:	int3   
   140002a87:	int3   
   140002a88:	int3   
   140002a89:	int3   
   140002a8a:	int3   
   140002a8b:	int3   
   140002a8c:	int3   
   140002a8d:	int3   
   140002a8e:	int3   
   140002a8f:	int3   
   140002a90:	mov    QWORD PTR [rsp+0x8],rbx
   140002a95:	push   rdi
   140002a96:	sub    rsp,0x20
   140002a9a:	mov    rdi,QWORD PTR [rip+0x52aa7]        # 0x140055548
   140002aa1:	xor    ebx,ebx
   140002aa3:	cmp    DWORD PTR [rip+0x52ae7],ebx        # 0x140055590
   140002aa9:	jle    0x140002ac6
   140002aab:	add    rdi,0x28
   140002aaf:	nop
   140002ab0:	mov    rcx,rdi
   140002ab3:	call   0x1400076e0
   140002ab8:	inc    ebx
   140002aba:	add    rdi,0x68
   140002abe:	cmp    ebx,DWORD PTR [rip+0x52acc]        # 0x140055590
   140002ac4:	jl     0x140002ab0
   140002ac6:	call   0x140008290
   140002acb:	call   0x14000b100
   140002ad0:	mov    rcx,QWORD PTR [rip+0x52a71]        # 0x140055548
   140002ad7:	mov    rbx,QWORD PTR [rsp+0x30]
   140002adc:	add    rsp,0x20
   140002ae0:	pop    rdi
   140002ae1:	rex.W jmp QWORD PTR [rip+0x3a7b8]        # 0x14003d2a0
   140002ae8:	int3   
   140002ae9:	int3   
   140002aea:	int3   
   140002aeb:	int3   
   140002aec:	int3   
   140002aed:	int3   
   140002aee:	int3   
   140002aef:	int3   
   140002af0:	sub    rsp,0x28
   140002af4:	call   0x140003560
   140002af9:	mov    r10,QWORD PTR [rip+0x50a38]        # 0x140053538
   140002b00:	movsxd r9,DWORD PTR [rip+0x52a89]        # 0x140055590
   140002b07:	mov    r11,QWORD PTR [r10]
   140002b0a:	mov    r8d,0x1
   140002b10:	movsd  xmm3,QWORD PTR [r11]
   140002b15:	movsd  QWORD PTR [rip+0x52aa3],xmm3        # 0x1400555c0
   140002b1d:	movsd  xmm2,QWORD PTR [r11]
   140002b22:	movsd  QWORD PTR [rip+0x52a8e],xmm2        # 0x1400555b8
   140002b2a:	cmp    r9d,r8d
   140002b2d:	jle    0x140002c6c
   140002b33:	lea    eax,[r9-0x1]
   140002b37:	cmp    eax,0x4
   140002b3a:	jl     0x140002c24
   140002b40:	lea    eax,[r9-0x5]
   140002b44:	lea    rcx,[r10+0x18]
   140002b48:	shr    eax,0x2
   140002b4b:	inc    eax
   140002b4d:	mov    edx,eax
   140002b4f:	lea    r8d,[rax*4+0x1]
   140002b57:	nop    WORD PTR [rax+rax*1+0x0]
   140002b60:	mov    rax,QWORD PTR [rcx-0x10]
   140002b64:	movsd  xmm0,QWORD PTR [rax]
   140002b68:	comisd xmm3,xmm0
   140002b6c:	jbe    0x140002b79
   140002b6e:	movsd  QWORD PTR [rip+0x52a4a],xmm0        # 0x1400555c0
   140002b76:	movaps xmm3,xmm0
   140002b79:	movsd  xmm0,QWORD PTR [rax]
   140002b7d:	comisd xmm0,xmm2
   140002b81:	jbe    0x140002b8e
   140002b83:	movsd  QWORD PTR [rip+0x52a2d],xmm0        # 0x1400555b8
   140002b8b:	movaps xmm2,xmm0
   140002b8e:	mov    rax,QWORD PTR [rcx-0x8]
   140002b92:	movsd  xmm0,QWORD PTR [rax]
   140002b96:	comisd xmm3,xmm0
   140002b9a:	jbe    0x140002ba7
   140002b9c:	movsd  QWORD PTR [rip+0x52a1c],xmm0        # 0x1400555c0
   140002ba4:	movaps xmm3,xmm0
   140002ba7:	movsd  xmm0,QWORD PTR [rax]
   140002bab:	comisd xmm0,xmm2
   140002baf:	jbe    0x140002bbc
   140002bb1:	movsd  QWORD PTR [rip+0x529ff],xmm0        # 0x1400555b8
   140002bb9:	movaps xmm2,xmm0
   140002bbc:	mov    rax,QWORD PTR [rcx]
   140002bbf:	movsd  xmm0,QWORD PTR [rax]
   140002bc3:	comisd xmm3,xmm0
   140002bc7:	jbe    0x140002bd4
   140002bc9:	movsd  QWORD PTR [rip+0x529ef],xmm0        # 0x1400555c0
   140002bd1:	movaps xmm3,xmm0
   140002bd4:	movsd  xmm0,QWORD PTR [rax]
   140002bd8:	comisd xmm0,xmm2
   140002bdc:	jbe    0x140002be9
   140002bde:	movsd  QWORD PTR [rip+0x529d2],xmm0        # 0x1400555b8
   140002be6:	movaps xmm2,xmm0
   140002be9:	mov    rax,QWORD PTR [rcx+0x8]
   140002bed:	movsd  xmm0,QWORD PTR [rax]
   140002bf1:	comisd xmm3,xmm0
   140002bf5:	jbe    0x140002c02
   140002bf7:	movsd  QWORD PTR [rip+0x529c1],xmm0        # 0x1400555c0
   140002bff:	movaps xmm3,xmm0
   140002c02:	movsd  xmm0,QWORD PTR [rax]
   140002c06:	comisd xmm0,xmm2
   140002c0a:	jbe    0x140002c17
   140002c0c:	movsd  QWORD PTR [rip+0x529a4],xmm0        # 0x1400555b8
   140002c14:	movaps xmm2,xmm0
   140002c17:	add    rcx,0x20
   140002c1b:	dec    rdx
   140002c1e:	jne    0x140002b60
   140002c24:	cmp    r8d,r9d
   140002c27:	jge    0x140002c6c
   140002c29:	movsxd rax,r8d
   140002c2c:	mov    edx,r9d
   140002c2f:	lea    rcx,[r10+rax*8]
   140002c33:	sub    edx,r8d
   140002c36:	mov    rax,QWORD PTR [rcx]
   140002c39:	movsd  xmm0,QWORD PTR [rax]
   140002c3d:	comisd xmm3,xmm0
   140002c41:	jbe    0x140002c4e
   140002c43:	movsd  QWORD PTR [rip+0x52975],xmm0        # 0x1400555c0
   140002c4b:	movaps xmm3,xmm0
   140002c4e:	movsd  xmm0,QWORD PTR [rax]
   140002c52:	comisd xmm0,xmm2
   140002c56:	jbe    0x140002c63
   140002c58:	movsd  QWORD PTR [rip+0x52958],xmm0        # 0x1400555b8
   140002c60:	movaps xmm2,xmm0
   140002c63:	add    rcx,0x8
   140002c67:	dec    rdx
   140002c6a:	jne    0x140002c36
   140002c6c:	movsd  xmm1,QWORD PTR [r11+0x8]
   140002c72:	subsd  xmm2,xmm3
   140002c76:	movsd  QWORD PTR [rip+0x52932],xmm1        # 0x1400555b0
   140002c7e:	mov    rcx,QWORD PTR [r10+r9*8-0x8]
   140002c83:	movsd  xmm0,QWORD PTR [rcx+0x8]
   140002c88:	movsd  QWORD PTR [rip+0x52910],xmm2        # 0x1400555a0
   140002c90:	movsd  QWORD PTR [rip+0x52910],xmm0        # 0x1400555a8
   140002c98:	subsd  xmm0,xmm1
   140002c9c:	movsd  QWORD PTR [rip+0x528f4],xmm0        # 0x140055598
   140002ca4:	add    rsp,0x28
   140002ca8:	ret    
   140002ca9:	int3   
   140002caa:	int3   
   140002cab:	int3   
   140002cac:	int3   
   140002cad:	int3   
   140002cae:	int3   
   140002caf:	int3   
   140002cb0:	sub    rsp,0x18
   140002cb4:	movsd  xmm5,QWORD PTR [rip+0x528a4]        # 0x140055560
   140002cbc:	movsd  xmm4,QWORD PTR [rip+0x528ac]        # 0x140055570
   140002cc4:	movsd  xmm3,QWORD PTR [rip+0x528ac]        # 0x140055578
   140002ccc:	movaps XMMWORD PTR [rsp],xmm6
   140002cd0:	movsd  xmm6,QWORD PTR [rip+0x52890]        # 0x140055568
   140002cd8:	movaps xmm2,xmm5
   140002cdb:	movaps xmm1,xmm4
   140002cde:	subsd  xmm2,xmm6
   140002ce2:	subsd  xmm1,xmm3
   140002ce6:	mulsd  xmm2,QWORD PTR [rip+0x49332]        # 0x14004c020
   140002cee:	mulsd  xmm1,QWORD PTR [rip+0x4932a]        # 0x14004c020
   140002cf6:	subsd  xmm6,xmm2
   140002cfa:	addsd  xmm4,xmm1
   140002cfe:	addsd  xmm5,xmm2
   140002d02:	subsd  xmm3,xmm1
   140002d06:	movsd  QWORD PTR [rip+0x5285a],xmm6        # 0x140055568
   140002d0e:	movsd  QWORD PTR [rip+0x5086a],xmm6        # 0x140053580
   140002d16:	movsd  QWORD PTR [rip+0x50852],xmm6        # 0x140053570
   140002d1e:	movsd  QWORD PTR [rip+0x52852],xmm3        # 0x140055578
   140002d26:	movsd  QWORD PTR [rip+0x52842],xmm4        # 0x140055570
   140002d2e:	movaps xmm6,XMMWORD PTR [rsp]
   140002d32:	movsd  QWORD PTR [rip+0x52826],xmm5        # 0x140055560
   140002d3a:	movsd  QWORD PTR [rip+0x50826],xmm3        # 0x140053568
   140002d42:	movsd  QWORD PTR [rip+0x507fe],xmm3        # 0x140053548
   140002d4a:	movsd  QWORD PTR [rip+0x50826],xmm4        # 0x140053578
   140002d52:	movsd  QWORD PTR [rip+0x507fe],xmm4        # 0x140053558
   140002d5a:	movsd  QWORD PTR [rip+0x507fe],xmm5        # 0x140053560
   140002d62:	movsd  QWORD PTR [rip+0x507e6],xmm5        # 0x140053550
   140002d6a:	add    rsp,0x18
   140002d6e:	ret    
   140002d6f:	int3   
   140002d70:	mov    QWORD PTR [rsp+0x8],rbx
   140002d75:	mov    QWORD PTR [rsp+0x10],rbp
   140002d7a:	mov    QWORD PTR [rsp+0x18],rsi
   140002d7f:	mov    QWORD PTR [rsp+0x20],rdi
   140002d84:	push   r14
   140002d86:	sub    rsp,0x20
   140002d8a:	mov    rbp,rcx
   140002d8d:	call   0x14002aef0
   140002d92:	mov    DWORD PTR [rip+0x527f8],eax        # 0x140055590
   140002d98:	call   0x140003890
   140002d9d:	movsxd rax,DWORD PTR [rip+0x527ec]        # 0x140055590
   140002da4:	imul   rcx,rax,0x68
   140002da8:	call   QWORD PTR [rip+0x3a3ba]        # 0x14003d168
   140002dae:	mov    rcx,rbp
   140002db1:	mov    QWORD PTR [rip+0x52790],rax        # 0x140055548
   140002db8:	call   0x14002a4e0
   140002dbd:	mov    rbx,QWORD PTR [rip+0x52784]        # 0x140055548
   140002dc4:	lea    rdx,[rip+0x3a6d1]        # 0x14003d49c
   140002dcb:	mov    rcx,rbp
   140002dce:	mov    rdi,rax
   140002dd1:	call   0x1400275b0
   140002dd6:	test   rax,rax
   140002dd9:	je     0x140002dee
   140002ddb:	mov    rcx,rax
   140002dde:	call   QWORD PTR [rip+0x3a25c]        # 0x14003d040
   140002de4:	addsd  xmm0,QWORD PTR [rip+0x3a5f4]        # 0x14003d3e0
   140002dec:	jmp    0x140002df6
   140002dee:	movsd  xmm0,QWORD PTR [rip+0x3a752]        # 0x14003d548
   140002df6:	xor    r14d,r14d
   140002df9:	movsd  QWORD PTR [rip+0x49227],xmm0        # 0x14004c028
   140002e01:	cmp    DWORD PTR [rip+0x52788],r14d        # 0x140055590
   140002e08:	mov    esi,r14d
   140002e0b:	jle    0x140002e83
   140002e0d:	add    rbx,0x10
   140002e11:	nop    DWORD PTR [rax+0x0]
   140002e15:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002e20:	mov    rax,QWORD PTR [rdi+0x88]
   140002e27:	movaps xmm2,xmm0
   140002e2a:	mov    rdx,rdi
   140002e2d:	mov    rcx,QWORD PTR [rax]
   140002e30:	mov    QWORD PTR [rbx-0x8],rcx
   140002e34:	mov    rax,QWORD PTR [rdi+0x88]
   140002e3b:	mov    rcx,QWORD PTR [rax+0x8]
   140002e3f:	mov    QWORD PTR [rbx],rcx
   140002e42:	lea    rcx,[rbx+0x18]
   140002e46:	call   0x140007eb0
   140002e4b:	mov    rdx,rdi
   140002e4e:	mov    rcx,rbp
   140002e51:	mov    DWORD PTR [rbx+0x8],esi
   140002e54:	mov    DWORD PTR [rbx+0xc],0x1
   140002e5b:	mov    QWORD PTR [rbx-0x10],rdi
   140002e5f:	mov    QWORD PTR [rbx+0x50],r14
   140002e63:	call   0x14002a5e0
   140002e68:	inc    esi
   140002e6a:	cmp    esi,DWORD PTR [rip+0x52720]        # 0x140055590
   140002e70:	lea    rbx,[rbx+0x68]
   140002e74:	mov    rdi,rax
   140002e77:	jge    0x140002e83
   140002e79:	movsd  xmm0,QWORD PTR [rip+0x491a7]        # 0x14004c028
   140002e81:	jmp    0x140002e20
   140002e83:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e88:	mov    rbp,QWORD PTR [rsp+0x38]
   140002e8d:	mov    rsi,QWORD PTR [rsp+0x40]
   140002e92:	mov    rdi,QWORD PTR [rsp+0x48]
   140002e97:	add    rsp,0x20
   140002e9b:	pop    r14
   140002e9d:	ret    
   140002e9e:	int3   
   140002e9f:	int3   
   140002ea0:	rex push rbx
   140002ea2:	sub    rsp,0x20
   140002ea6:	mov    rbx,QWORD PTR [rip+0x5269b]        # 0x140055548
   140002ead:	call   0x140002240
   140002eb2:	mov    eax,DWORD PTR [rip+0x526d8]        # 0x140055590
   140002eb8:	xor    r9d,r9d
   140002ebb:	test   eax,eax
   140002ebd:	jle    0x140002eeb
   140002ebf:	mov    r10d,DWORD PTR [rip+0x5066e]        # 0x140053534
   140002ec6:	test   r10d,r10d
   140002ec9:	jne    0x140002ed1
   140002ecb:	cmp    DWORD PTR [rbx+0x20],r10d
   140002ecf:	je     0x140002edf
   140002ed1:	mov    rcx,rbx
   140002ed4:	call   0x140002f00
   140002ed9:	mov    eax,DWORD PTR [rip+0x526b1]        # 0x140055590
   140002edf:	inc    r9d
   140002ee2:	add    rbx,0x68
   140002ee6:	cmp    r9d,eax
   140002ee9:	jl     0x140002ec6
   140002eeb:	add    rsp,0x20
   140002eef:	pop    rbx
   140002ef0:	ret    
   140002ef1:	int3   
   140002ef2:	int3   
   140002ef3:	int3   
   140002ef4:	int3   
   140002ef5:	int3   
   140002ef6:	int3   
   140002ef7:	int3   
   140002ef8:	int3   
   140002ef9:	int3   
   140002efa:	int3   
   140002efb:	int3   
   140002efc:	int3   
   140002efd:	int3   
   140002efe:	int3   
   140002eff:	int3   
   140002f00:	mov    r11,rsp
   140002f03:	sub    rsp,0xb8
   140002f0a:	mov    rax,QWORD PTR [rcx+0x60]
   140002f0e:	xorps  xmm5,xmm5
   140002f11:	movaps XMMWORD PTR [r11-0x18],xmm6
   140002f16:	movaps XMMWORD PTR [r11-0x28],xmm7
   140002f1b:	movaps xmm6,xmm5
   140002f1e:	movaps xmm7,xmm5
   140002f21:	mov    r8,QWORD PTR [rax]
   140002f24:	mov    rdx,QWORD PTR [r8]
   140002f27:	test   rdx,rdx
   140002f2a:	je     0x140003063
   140002f30:	movups xmm0,XMMWORD PTR [rax+0x8]
   140002f34:	movaps XMMWORD PTR [r11-0x38],xmm8
   140002f39:	movaps XMMWORD PTR [r11-0x48],xmm9
   140002f3e:	movsd  xmm9,QWORD PTR [rip+0x3a609]        # 0x14003d550
   140002f47:	movaps XMMWORD PTR [r11-0x58],xmm10
   140002f4c:	movaps XMMWORD PTR [r11-0x68],xmm11
   140002f51:	movaps XMMWORD PTR [r11-0x78],xmm12
   140002f56:	movaps XMMWORD PTR [rsp+0x30],xmm13
   140002f5c:	movaps XMMWORD PTR [rsp],xmm0
   140002f60:	movsd  xmm8,QWORD PTR [rsp+0x8]
   140002f67:	movsd  xmm10,QWORD PTR [rsp]
   140002f6d:	movsd  xmm13,QWORD PTR [rip+0x3a5ea]        # 0x14003d560
   140002f76:	movaps XMMWORD PTR [rsp+0x10],xmm0
   140002f7b:	movsd  xmm11,QWORD PTR [rsp+0x18]
   140002f82:	movsd  xmm12,QWORD PTR [rsp+0x10]
   140002f89:	movaps XMMWORD PTR [rsp+0x20],xmm14
   140002f8f:	movsd  xmm14,QWORD PTR [rip+0x3a440]        # 0x14003d3d8
   140002f98:	nop    DWORD PTR [rax+rax*1+0x0]
   140002fa0:	movups xmm3,XMMWORD PTR [rdx+0x8]
   140002fa4:	movups xmm2,XMMWORD PTR [r8+0x8]
   140002fa9:	movsd  xmm0,QWORD PTR [r8+0x10]
   140002faf:	movaps xmm1,xmm3
   140002fb2:	unpckhpd xmm1,xmm3
   140002fb6:	subsd  xmm0,xmm1
   140002fba:	movaps xmm4,xmm1
   140002fbd:	movaps xmm1,xmm8
   140002fc1:	mulsd  xmm0,xmm10
   140002fc6:	subsd  xmm1,QWORD PTR [r8+0x10]
   140002fcc:	subsd  xmm4,xmm8
   140002fd1:	mulsd  xmm4,xmm2
   140002fd5:	mulsd  xmm1,xmm3
   140002fd9:	addsd  xmm4,xmm0
   140002fdd:	movups xmm0,xmm2
   140002fe0:	movsd  xmm2,QWORD PTR [r8+0x10]
   140002fe6:	mov    r8,rdx
   140002fe9:	addsd  xmm2,xmm11
   140002fee:	addsd  xmm0,xmm12
   140002ff3:	addsd  xmm4,xmm1
   140002ff7:	andps  xmm4,xmm13
   140002ffb:	mulsd  xmm4,xmm14
   140003000:	addsd  xmm2,QWORD PTR [rdx+0x10]
   140003005:	movups xmm1,xmm3
   140003008:	addsd  xmm5,xmm4
   14000300c:	mov    rdx,QWORD PTR [rdx]
   14000300f:	divsd  xmm2,xmm9
   140003014:	addsd  xmm0,xmm1
   140003018:	divsd  xmm0,xmm9
   14000301d:	mulsd  xmm2,xmm4
   140003021:	addsd  xmm7,xmm2
   140003025:	mulsd  xmm0,xmm4
   140003029:	addsd  xmm6,xmm0
   14000302d:	test   rdx,rdx
   140003030:	jne    0x140002fa0
   140003036:	movaps xmm14,XMMWORD PTR [rsp+0x20]
   14000303c:	movaps xmm13,XMMWORD PTR [rsp+0x30]
   140003042:	movaps xmm12,XMMWORD PTR [rsp+0x40]
   140003048:	movaps xmm11,XMMWORD PTR [rsp+0x50]
   14000304e:	movaps xmm10,XMMWORD PTR [rsp+0x60]
   140003054:	movaps xmm9,XMMWORD PTR [rsp+0x70]
   14000305a:	movaps xmm8,XMMWORD PTR [rsp+0x80]
   140003063:	divsd  xmm6,xmm5
   140003067:	divsd  xmm7,xmm5
   14000306b:	movsd  QWORD PTR [rcx+0x8],xmm6
   140003070:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
   140003078:	movsd  QWORD PTR [rcx+0x10],xmm7
   14000307d:	movaps xmm7,XMMWORD PTR [rsp+0x90]
   140003085:	add    rsp,0xb8
   14000308c:	ret    
   14000308d:	int3   
   14000308e:	int3   
   14000308f:	int3   
   140003090:	mov    rcx,QWORD PTR [rip+0x504f1]        # 0x140053588
   140003097:	cmp    rcx,QWORD PTR [rip+0x504a2]        # 0x140053540
   14000309e:	jae    0x1400030af
   1400030a0:	mov    rax,QWORD PTR [rcx]
   1400030a3:	add    rcx,0x8
   1400030a7:	mov    QWORD PTR [rip+0x504da],rcx        # 0x140053588
   1400030ae:	ret    
   1400030af:	xor    eax,eax
   1400030b1:	ret    
   1400030b2:	int3   
   1400030b3:	int3   
   1400030b4:	int3   
   1400030b5:	int3   
   1400030b6:	int3   
   1400030b7:	int3   
   1400030b8:	int3   
   1400030b9:	int3   
   1400030ba:	int3   
   1400030bb:	int3   
   1400030bc:	int3   
   1400030bd:	int3   
   1400030be:	int3   
   1400030bf:	int3   
   1400030c0:	rex push rdi
   1400030c2:	sub    rsp,0x40
   1400030c6:	lea    rdx,[rip+0x3a42b]        # 0x14003d4f8
   1400030cd:	mov    rdi,rcx
   1400030d0:	call   0x1400275b0
   1400030d5:	mov    rcx,rax
   1400030d8:	call   0x14001c4b0
   1400030dd:	test   eax,eax
   1400030df:	je     0x140003263
   1400030e5:	mov    QWORD PTR [rsp+0x50],rbx
   1400030ea:	mov    rcx,rdi
   1400030ed:	movaps XMMWORD PTR [rsp+0x30],xmm6
   1400030f2:	movaps XMMWORD PTR [rsp+0x20],xmm7
   1400030f7:	call   0x14002a4e0
   1400030fc:	mov    rcx,rdi
   1400030ff:	mov    rdx,QWORD PTR [rax+0x88]
   140003106:	movsd  xmm6,QWORD PTR [rdx]
   14000310a:	movsd  xmm7,QWORD PTR [rdx+0x8]
   14000310f:	call   0x14002a4e0
   140003114:	test   rax,rax
   140003117:	je     0x140003158
   140003119:	nop    DWORD PTR [rax+0x0]
   140003120:	mov    rcx,QWORD PTR [rax+0x88]
   140003127:	mov    rdx,rax
   14000312a:	movsd  xmm0,QWORD PTR [rcx]
   14000312e:	subsd  xmm0,xmm6
   140003132:	movsd  QWORD PTR [rcx],xmm0
   140003136:	mov    rcx,QWORD PTR [rax+0x88]
   14000313d:	movsd  xmm0,QWORD PTR [rcx+0x8]
   140003142:	subsd  xmm0,xmm7
   140003146:	movsd  QWORD PTR [rcx+0x8],xmm0
   14000314b:	mov    rcx,rdi
   14000314e:	call   0x14002a5e0
   140003153:	test   rax,rax
   140003156:	jne    0x140003120
   140003158:	mov    rcx,rdi
   14000315b:	call   0x14002a4e0
   140003160:	mov    rbx,rax
   140003163:	test   rax,rax
   140003166:	je     0x140003254
   14000316c:	nop    DWORD PTR [rax+0x0]
   140003170:	mov    rdx,rbx
   140003173:	mov    rcx,rdi
   140003176:	call   0x14002b830
   14000317b:	mov    rcx,rax
   14000317e:	test   rax,rax
   140003181:	jne    0x14000319b
   140003183:	mov    rdx,rbx
   140003186:	mov    rcx,rdi
   140003189:	call   0x14002a5e0
   14000318e:	mov    rbx,rax
   140003191:	test   rax,rax
   140003194:	jne    0x140003170
   140003196:	jmp    0x140003254
   14000319b:	mov    rax,QWORD PTR [rax+0x10]
   14000319f:	mov    rdx,QWORD PTR [rax+0x88]
   1400031a6:	mov    rax,QWORD PTR [rcx+0x18]
   1400031aa:	mov    rcx,QWORD PTR [rax+0x88]
   1400031b1:	movsd  xmm0,QWORD PTR [rdx+0x8]
   1400031b6:	movsd  xmm1,QWORD PTR [rdx]
   1400031ba:	subsd  xmm0,QWORD PTR [rcx+0x8]
   1400031bf:	subsd  xmm1,QWORD PTR [rcx]
   1400031c3:	call   0x14003b8a8
   1400031c8:	mov    rcx,rdi
   1400031cb:	movaps xmm6,xmm0
   1400031ce:	xorps  xmm6,XMMWORD PTR [rip+0x3a39b]        # 0x14003d570
   1400031d5:	call   0x14002a4e0
   1400031da:	mov    rbx,rax
   1400031dd:	test   rax,rax
   1400031e0:	je     0x140003254
   1400031e2:	movaps xmm0,xmm6
   1400031e5:	call   0x14003b87e
   1400031ea:	movaps xmm7,xmm0
   1400031ed:	movaps xmm0,xmm6
   1400031f0:	call   0x14003b884
   1400031f5:	movaps xmm6,xmm0
   1400031f8:	nop    DWORD PTR [rax+rax*1+0x0]
   140003200:	mov    rcx,QWORD PTR [rbx+0x88]
   140003207:	movaps xmm1,xmm6
   14000320a:	movaps xmm2,xmm7
   14000320d:	mov    rdx,rbx
   140003210:	movsd  xmm5,QWORD PTR [rcx]
   140003214:	movaps xmm3,xmm7
   140003217:	movaps xmm0,xmm6
   14000321a:	mulsd  xmm1,QWORD PTR [rcx+0x8]
   14000321f:	mulsd  xmm2,xmm5
   140003223:	mulsd  xmm0,xmm5
   140003227:	subsd  xmm2,xmm1
   14000322b:	movsd  QWORD PTR [rcx],xmm2
   14000322f:	mulsd  xmm3,QWORD PTR [rcx+0x8]
   140003234:	mov    rax,QWORD PTR [rbx+0x88]
   14000323b:	mov    rcx,rdi
   14000323e:	addsd  xmm3,xmm0
   140003242:	movsd  QWORD PTR [rax+0x8],xmm3
   140003247:	call   0x14002a5e0
   14000324c:	mov    rbx,rax
   14000324f:	test   rax,rax
   140003252:	jne    0x140003200
   140003254:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140003259:	mov    rbx,QWORD PTR [rsp+0x50]
   14000325e:	movaps xmm7,XMMWORD PTR [rsp+0x20]
   140003263:	add    rsp,0x40
   140003267:	pop    rdi
   140003268:	ret    
   140003269:	int3   
   14000326a:	int3   
   14000326b:	int3   
   14000326c:	int3   
   14000326d:	int3   
   14000326e:	int3   
   14000326f:	int3   
   140003270:	movsd  xmm3,QWORD PTR [rip+0x48da8]        # 0x14004c020
   140003278:	mov    rax,QWORD PTR [rip+0x522c9]        # 0x140055548
   14000327f:	xor    edx,edx
   140003281:	cmp    DWORD PTR [rip+0x52309],edx        # 0x140055590
   140003287:	addsd  xmm3,QWORD PTR [rip+0x3a151]        # 0x14003d3e0
   14000328f:	jle    0x1400032db
   140003291:	add    rax,0x10
   140003295:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400032a0:	movsd  xmm1,QWORD PTR [rax-0x8]
   1400032a5:	movsd  xmm0,QWORD PTR [rax]
   1400032a9:	inc    edx
   1400032ab:	add    rax,0x68
   1400032af:	subsd  xmm1,QWORD PTR [rcx]
   1400032b3:	mulsd  xmm1,xmm3
   1400032b7:	addsd  xmm1,QWORD PTR [rcx]
   1400032bb:	movsd  QWORD PTR [rax-0x70],xmm1
   1400032c0:	subsd  xmm0,QWORD PTR [rcx+0x8]
   1400032c5:	mulsd  xmm0,xmm3
   1400032c9:	addsd  xmm0,QWORD PTR [rcx+0x8]
   1400032ce:	movsd  QWORD PTR [rax-0x68],xmm0
   1400032d3:	cmp    edx,DWORD PTR [rip+0x522b7]        # 0x140055590
   1400032d9:	jl     0x1400032a0
   1400032db:	ret    
   1400032dc:	int3   
   1400032dd:	int3   
   1400032de:	int3   
   1400032df:	int3   
   1400032e0:	rex push rbx
   1400032e2:	sub    rsp,0x70
   1400032e6:	xor    ebx,ebx
   1400032e8:	cmp    DWORD PTR [rip+0x50242],ebx        # 0x140053530
   1400032ee:	je     0x1400032fc
   1400032f0:	cmp    DWORD PTR [rip+0x48d3a],ebx        # 0x14004c030
   1400032f6:	jle    0x140003496
   1400032fc:	xor    ecx,ecx
   1400032fe:	call   0x140002960
   140003303:	test   eax,eax
   140003305:	je     0x140003496
   14000330b:	mov    edx,DWORD PTR [rip+0x48d1f]        # 0x14004c030
   140003311:	test   edx,edx
   140003313:	je     0x140003496
   140003319:	movsd  xmm0,QWORD PTR [rip+0x5224f]        # 0x140055570
   140003321:	movaps XMMWORD PTR [rsp+0x60],xmm6
   140003326:	movaps XMMWORD PTR [rsp+0x50],xmm7
   14000332b:	addsd  xmm0,QWORD PTR [rip+0x52245]        # 0x140055578
   140003333:	movaps XMMWORD PTR [rsp+0x40],xmm8
   140003339:	movsd  xmm8,QWORD PTR [rip+0x3a09e]        # 0x14003d3e0
   140003342:	mulsd  xmm0,QWORD PTR [rip+0x3a08e]        # 0x14003d3d8
   14000334a:	movsd  QWORD PTR [rsp+0x20],xmm0
   140003350:	movsd  xmm0,QWORD PTR [rip+0x52208]        # 0x140055560
   140003358:	movss  xmm1,DWORD PTR [rsp+0x24]
   14000335e:	addsd  xmm0,QWORD PTR [rip+0x52202]        # 0x140055568
   140003366:	movss  DWORD PTR [rsp+0x34],xmm1
   14000336c:	mulsd  xmm0,QWORD PTR [rip+0x3a064]        # 0x14003d3d8
   140003374:	movsd  QWORD PTR [rsp+0x28],xmm0
   14000337a:	movss  xmm0,DWORD PTR [rsp+0x20]
   140003380:	movss  xmm1,DWORD PTR [rsp+0x2c]
   140003386:	movss  DWORD PTR [rsp+0x30],xmm0
   14000338c:	movss  xmm0,DWORD PTR [rsp+0x28]
   140003392:	movsd  xmm7,QWORD PTR [rsp+0x30]
   140003398:	movss  DWORD PTR [rsp+0x38],xmm0
   14000339e:	movss  DWORD PTR [rsp+0x3c],xmm1
   1400033a4:	movsd  xmm6,QWORD PTR [rsp+0x38]
   1400033aa:	nop    WORD PTR [rax+rax*1+0x0]
   1400033b0:	movsd  xmm2,QWORD PTR [rip+0x48c68]        # 0x14004c020
   1400033b8:	mov    rax,QWORD PTR [rip+0x52189]        # 0x140055548
   1400033bf:	xor    ecx,ecx
   1400033c1:	cmp    DWORD PTR [rip+0x521c9],ecx        # 0x140055590
   1400033c7:	addsd  xmm2,xmm8
   1400033cc:	jle    0x140003419
   1400033ce:	add    rax,0x10
   1400033d2:	nop    DWORD PTR [rax+0x0]
   1400033d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400033e0:	movsd  xmm0,QWORD PTR [rax-0x8]
   1400033e5:	movsd  xmm1,QWORD PTR [rax]
   1400033e9:	inc    ecx
   1400033eb:	add    rax,0x68
   1400033ef:	subsd  xmm0,xmm7
   1400033f3:	subsd  xmm1,xmm6
   1400033f7:	mulsd  xmm0,xmm2
   1400033fb:	mulsd  xmm1,xmm2
   1400033ff:	addsd  xmm0,xmm7
   140003403:	addsd  xmm1,xmm6
   140003407:	movsd  QWORD PTR [rax-0x70],xmm0
   14000340c:	movsd  QWORD PTR [rax-0x68],xmm1
   140003411:	cmp    ecx,DWORD PTR [rip+0x52179]        # 0x140055590
   140003417:	jl     0x1400033e0
   140003419:	inc    ebx
   14000341b:	cmp    DWORD PTR [rip+0x5010e],0x0        # 0x140053530
   140003422:	je     0x140003428
   140003424:	cmp    ebx,edx
   140003426:	je     0x14000343e
   140003428:	mov    ecx,ebx
   14000342a:	call   0x140002960
   14000342f:	test   eax,eax
   140003431:	je     0x14000343e
   140003433:	mov    edx,DWORD PTR [rip+0x48bf7]        # 0x14004c030
   140003439:	jmp    0x1400033b0
   14000343e:	cmp    BYTE PTR [rip+0x52074],0x0        # 0x1400554b9
   140003445:	movaps xmm8,XMMWORD PTR [rsp+0x40]
   14000344b:	movaps xmm7,XMMWORD PTR [rsp+0x50]
   140003450:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   140003455:	je     0x14000348b
   140003457:	call   QWORD PTR [rip+0x39e73]        # 0x14003d2d0
   14000345d:	lea    rdx,[rip+0x3a054]        # 0x14003d4b8
   140003464:	mov    r8d,ebx
   140003467:	lea    rcx,[rax+0x60]
   14000346b:	call   QWORD PTR [rip+0x39e4f]        # 0x14003d2c0
   140003471:	call   QWORD PTR [rip+0x39e59]        # 0x14003d2d0
   140003477:	lea    rdx,[rip+0x3a05a]        # 0x14003d4d8
   14000347e:	lea    rcx,[rax+0x60]
   140003482:	xor    r8d,r8d
   140003485:	call   QWORD PTR [rip+0x39e35]        # 0x14003d2c0
   14000348b:	mov    eax,0x1
   140003490:	add    rsp,0x70
   140003494:	pop    rbx
   140003495:	ret    
   140003496:	xor    eax,eax
   140003498:	add    rsp,0x70
   14000349c:	pop    rbx
   14000349d:	ret    
   14000349e:	int3   
   14000349f:	int3   
   1400034a0:	mov    rax,QWORD PTR [rcx]
   1400034a3:	mov    rcx,QWORD PTR [rdx]
   1400034a6:	movsd  xmm1,QWORD PTR [rcx+0x8]
   1400034ab:	movsd  xmm0,QWORD PTR [rax+0x8]
   1400034b0:	comisd xmm1,xmm0
   1400034b4:	jbe    0x1400034ba
   1400034b6:	or     eax,0xffffffff
   1400034b9:	ret    
   1400034ba:	comisd xmm0,xmm1
   1400034be:	jbe    0x1400034c6
   1400034c0:	mov    eax,0x1
   1400034c5:	ret    
   1400034c6:	movsd  xmm0,QWORD PTR [rax]
   1400034ca:	movsd  xmm1,QWORD PTR [rcx]
   1400034ce:	comisd xmm1,xmm0
   1400034d2:	ja     0x1400034b6
   1400034d4:	xor    eax,eax
   1400034d6:	comisd xmm0,xmm1
   1400034da:	seta   al
   1400034dd:	ret    
   1400034de:	int3   
   1400034df:	int3   
   1400034e0:	movsd  xmm0,QWORD PTR [rcx]
   1400034e4:	movsd  QWORD PTR [rip+0x5208c],xmm0        # 0x140055578
   1400034ec:	movsd  xmm2,QWORD PTR [rdx]
   1400034f0:	movsd  QWORD PTR [rip+0x52078],xmm2        # 0x140055570
   1400034f8:	movsd  xmm3,QWORD PTR [rcx+0x8]
   1400034fd:	movsd  QWORD PTR [rip+0x52063],xmm3        # 0x140055568
   140003505:	movsd  xmm1,QWORD PTR [rdx+0x8]
   14000350a:	movsd  QWORD PTR [rip+0x50056],xmm0        # 0x140053568
   140003512:	movsd  QWORD PTR [rip+0x52046],xmm1        # 0x140055560
   14000351a:	movsd  QWORD PTR [rip+0x5003e],xmm1        # 0x140053560
   140003522:	movsd  QWORD PTR [rip+0x50026],xmm1        # 0x140053550
   14000352a:	movsd  QWORD PTR [rip+0x50016],xmm0        # 0x140053548
   140003532:	movsd  QWORD PTR [rip+0x5003e],xmm2        # 0x140053578
   14000353a:	movsd  QWORD PTR [rip+0x50016],xmm2        # 0x140053558
   140003542:	movsd  QWORD PTR [rip+0x50036],xmm3        # 0x140053580
   14000354a:	movsd  QWORD PTR [rip+0x5001e],xmm3        # 0x140053570
   140003552:	ret    
   140003553:	int3   
   140003554:	int3   
   140003555:	int3   
   140003556:	int3   
   140003557:	int3   
   140003558:	int3   
   140003559:	int3   
   14000355a:	int3   
   14000355b:	int3   
   14000355c:	int3   
   14000355d:	int3   
   14000355e:	int3   
   14000355f:	int3   
   140003560:	mov    QWORD PTR [rsp+0x8],rbx
   140003565:	push   rdi
   140003566:	sub    rsp,0x20
   14000356a:	mov    rdi,QWORD PTR [rip+0x4ffc7]        # 0x140053538
   140003571:	test   rdi,rdi
   140003574:	jne    0x1400035a3
   140003576:	movsxd rax,DWORD PTR [rip+0x52013]        # 0x140055590
   14000357d:	lea    rbx,[rax*8+0x0]
   140003585:	mov    rcx,rbx
   140003588:	call   QWORD PTR [rip+0x39bda]        # 0x14003d168
   14000358e:	mov    rdi,rax
   140003591:	mov    QWORD PTR [rip+0x4ffa0],rax        # 0x140053538
   140003598:	lea    rcx,[rbx+rax*1]
   14000359c:	mov    QWORD PTR [rip+0x4ff9d],rcx        # 0x140053540
   1400035a3:	mov    rbx,QWORD PTR [rip+0x51f9e]        # 0x140055548
   1400035aa:	call   0x14000b100
   1400035af:	mov    eax,DWORD PTR [rip+0x51fdb]        # 0x140055590
   1400035b5:	xor    r8d,r8d
   1400035b8:	mov    edx,r8d
   1400035bb:	test   eax,eax
   1400035bd:	jle    0x1400035f6
   1400035bf:	lea    rcx,[rbx+0x60]
   1400035c3:	nop    DWORD PTR [rax+0x0]
   1400035c7:	nop    WORD PTR [rax+rax*1+0x0]
   1400035d0:	lea    rax,[rcx-0x58]
   1400035d4:	inc    edx
   1400035d6:	lea    rdi,[rdi+0x8]
   1400035da:	mov    QWORD PTR [rdi-0x8],rax
   1400035de:	mov    QWORD PTR [rcx],r8
   1400035e1:	mov    DWORD PTR [rcx-0x44],0x1
   1400035e8:	mov    eax,DWORD PTR [rip+0x51fa2]        # 0x140055590
   1400035ee:	lea    rcx,[rcx+0x68]
   1400035f2:	cmp    edx,eax
   1400035f4:	jl     0x1400035d0
   1400035f6:	mov    rcx,QWORD PTR [rip+0x4ff3b]        # 0x140053538
   1400035fd:	lea    r9,[rip+0xfffffffffffffe9c]        # 0x1400034a0
   140003604:	movsxd rdx,eax
   140003607:	mov    r8d,0x8
   14000360d:	call   QWORD PTR [rip+0x39a35]        # 0x14003d048
   140003613:	mov    rax,QWORD PTR [rip+0x4ff1e]        # 0x140053538
   14000361a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000361f:	mov    QWORD PTR [rip+0x4ff62],rax        # 0x140053588
   140003626:	add    rsp,0x20
   14000362a:	pop    rdi
   14000362b:	ret    
   14000362c:	int3   
   14000362d:	int3   
   14000362e:	int3   
   14000362f:	int3   
   140003630:	mov    rdx,QWORD PTR [rip+0x51f11]        # 0x140055548
   140003637:	xor    r8d,r8d
   14000363a:	cmp    DWORD PTR [rip+0x51f4f],r8d        # 0x140055590
   140003641:	jle    0x140003677
   140003643:	mov    rax,QWORD PTR [rdx]
   140003646:	inc    r8d
   140003649:	lea    rdx,[rdx+0x68]
   14000364d:	mov    rcx,QWORD PTR [rax+0x88]
   140003654:	mov    rax,QWORD PTR [rdx-0x60]
   140003658:	mov    QWORD PTR [rcx],rax
   14000365b:	mov    rax,QWORD PTR [rdx-0x68]
   14000365f:	mov    rcx,QWORD PTR [rax+0x88]
   140003666:	mov    rax,QWORD PTR [rdx-0x58]
   14000366a:	mov    QWORD PTR [rcx+0x8],rax
   14000366e:	cmp    r8d,DWORD PTR [rip+0x51f1b]        # 0x140055590
   140003675:	jl     0x140003643
   140003677:	ret    
   140003678:	int3   
   140003679:	int3   
   14000367a:	int3   
   14000367b:	int3   
   14000367c:	int3   
   14000367d:	int3   
   14000367e:	int3   
   14000367f:	int3   
   140003680:	mov    QWORD PTR [rsp+0x10],rbp
   140003685:	mov    QWORD PTR [rsp+0x18],rsi
   14000368a:	mov    QWORD PTR [rsp+0x20],rdi
   14000368f:	push   r14
   140003691:	sub    rsp,0x20
   140003695:	xor    esi,esi
   140003697:	xor    edi,edi
   140003699:	xor    r14d,r14d
   14000369c:	cmp    DWORD PTR [rip+0x4fe8e],esi        # 0x140053530
   1400036a2:	je     0x1400036b0
   1400036a4:	cmp    DWORD PTR [rip+0x48986],esi        # 0x14004c030
   1400036aa:	jle    0x1400037bc
   1400036b0:	xor    ecx,ecx
   1400036b2:	call   0x140002960
   1400036b7:	mov    ebp,eax
   1400036b9:	test   eax,eax
   1400036bb:	je     0x1400037bc
   1400036c1:	cmp    DWORD PTR [rip+0x48969],esi        # 0x14004c030
   1400036c7:	je     0x1400037bc
   1400036cd:	mov    QWORD PTR [rsp+0x30],rbx
   1400036d2:	call   0x140002af0
   1400036d7:	lea    rdx,[rip+0xfffffffffffff9b2]        # 0x140003090
   1400036de:	xor    ecx,ecx
   1400036e0:	call   0x140004870
   1400036e5:	mov    rbx,QWORD PTR [rip+0x51e5c]        # 0x140055548
   1400036ec:	call   0x140002240
   1400036f1:	mov    eax,DWORD PTR [rip+0x51e99]        # 0x140055590
   1400036f7:	xor    r9d,r9d
   1400036fa:	test   eax,eax
   1400036fc:	jle    0x14000372a
   1400036fe:	mov    r10d,DWORD PTR [rip+0x4fe2f]        # 0x140053534
   140003705:	test   r10d,r10d
   140003708:	jne    0x140003710
   14000370a:	cmp    DWORD PTR [rbx+0x20],r10d
   14000370e:	je     0x14000371e
   140003710:	mov    rcx,rbx
   140003713:	call   0x140002f00
   140003718:	mov    eax,DWORD PTR [rip+0x51e72]        # 0x140055590
   14000371e:	inc    r9d
   140003721:	add    rbx,0x68
   140003725:	cmp    r9d,eax
   140003728:	jl     0x140003705
   14000372a:	inc    esi
   14000372c:	cmp    DWORD PTR [rip+0x4fdfd],0x0        # 0x140053530
   140003733:	je     0x14000373d
   140003735:	cmp    esi,DWORD PTR [rip+0x488f5]        # 0x14004c030
   14000373b:	je     0x140003773
   14000373d:	mov    ecx,esi
   14000373f:	call   0x140002960
   140003744:	test   eax,eax
   140003746:	je     0x140003773
   140003748:	cmp    eax,ebp
   14000374a:	jl     0x140003750
   14000374c:	inc    edi
   14000374e:	jmp    0x140003752
   140003750:	xor    edi,edi
   140003752:	mov    ebp,eax
   140003754:	mov    DWORD PTR [rip+0x4fdd6],0x1        # 0x140053534
   14000375e:	test   edi,edi
   140003760:	je     0x1400036d2
   140003766:	inc    r14d
   140003769:	call   0x140002cb0
   14000376e:	jmp    0x1400036d2
   140003773:	cmp    BYTE PTR [rip+0x51d3f],0x0        # 0x1400554b9
   14000377a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000377f:	je     0x1400037b5
   140003781:	call   QWORD PTR [rip+0x39b49]        # 0x14003d2d0
   140003787:	lea    rdx,[rip+0x39d2a]        # 0x14003d4b8
   14000378e:	mov    r8d,esi
   140003791:	lea    rcx,[rax+0x60]
   140003795:	call   QWORD PTR [rip+0x39b25]        # 0x14003d2c0
   14000379b:	call   QWORD PTR [rip+0x39b2f]        # 0x14003d2d0
   1400037a1:	lea    rdx,[rip+0x39d30]        # 0x14003d4d8
   1400037a8:	lea    rcx,[rax+0x60]
   1400037ac:	mov    r8d,r14d
   1400037af:	call   QWORD PTR [rip+0x39b0b]        # 0x14003d2c0
   1400037b5:	mov    eax,0x1
   1400037ba:	jmp    0x1400037be
   1400037bc:	xor    eax,eax
   1400037be:	mov    rbp,QWORD PTR [rsp+0x38]
   1400037c3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400037c8:	mov    rdi,QWORD PTR [rsp+0x48]
   1400037cd:	add    rsp,0x20
   1400037d1:	pop    r14
   1400037d3:	ret    
   1400037d4:	int3   
   1400037d5:	int3   
   1400037d6:	int3   
   1400037d7:	int3   
   1400037d8:	int3   
   1400037d9:	int3   
   1400037da:	int3   
   1400037db:	int3   
   1400037dc:	int3   
   1400037dd:	int3   
   1400037de:	int3   
   1400037df:	int3   
   1400037e0:	movsd  xmm0,QWORD PTR [rdx]
   1400037e4:	addsd  xmm0,QWORD PTR [r8]
   1400037e9:	movsd  QWORD PTR [rcx],xmm0
   1400037ed:	movsd  xmm1,QWORD PTR [rdx+0x8]
   1400037f2:	addsd  xmm1,QWORD PTR [r8+0x8]
   1400037f8:	movsd  QWORD PTR [rcx+0x8],xmm1
   1400037fd:	ret    
   1400037fe:	int3   
   1400037ff:	int3   
   140003800:	sub    rsp,0x28
   140003804:	movsd  xmm5,QWORD PTR [r8+0x8]
   14000380a:	movsd  xmm0,QWORD PTR [rdx]
   14000380e:	movaps XMMWORD PTR [rsp+0x10],xmm6
   140003813:	movaps XMMWORD PTR [rsp],xmm7
   140003817:	movaps xmm2,xmm5
   14000381a:	mulsd  xmm0,QWORD PTR [rcx+0x8]
   14000381f:	movsd  xmm7,QWORD PTR [r8]
   140003824:	movsd  xmm6,QWORD PTR [rcx]
   140003828:	mulsd  xmm2,QWORD PTR [rcx]
   14000382c:	mulsd  xmm5,QWORD PTR [rdx]
   140003830:	mulsd  xmm6,QWORD PTR [rdx+0x8]
   140003835:	subsd  xmm6,xmm0
   140003839:	movaps xmm0,xmm7
   14000383c:	mulsd  xmm7,QWORD PTR [rdx+0x8]
   140003841:	mulsd  xmm0,QWORD PTR [rcx+0x8]
   140003846:	addsd  xmm0,xmm6
   14000384a:	movaps xmm6,XMMWORD PTR [rsp+0x10]
   14000384f:	subsd  xmm0,xmm2
   140003853:	addsd  xmm0,xmm5
   140003857:	subsd  xmm0,xmm7
   14000385b:	movaps xmm7,XMMWORD PTR [rsp]
   14000385f:	add    rsp,0x28
   140003863:	ret    
   140003864:	int3   
   140003865:	int3   
   140003866:	int3   
   140003867:	int3   
   140003868:	int3   
   140003869:	int3   
   14000386a:	int3   
   14000386b:	int3   
   14000386c:	int3   
   14000386d:	int3   
   14000386e:	int3   
   14000386f:	int3   
   140003870:	movsd  xmm1,QWORD PTR [rcx]
   140003874:	movsd  xmm0,QWORD PTR [rcx+0x8]
   140003879:	subsd  xmm0,QWORD PTR [rdx+0x8]
   14000387e:	subsd  xmm1,QWORD PTR [rdx]
   140003882:	mulsd  xmm0,xmm0
   140003886:	mulsd  xmm1,xmm1
   14000388a:	addsd  xmm0,xmm1
   14000388e:	ret    
   14000388f:	int3   
   140003890:	sub    rsp,0x28
   140003894:	mov    eax,DWORD PTR [rip+0x51cf6]        # 0x140055590
   14000389a:	add    eax,0x4
   14000389d:	movd   xmm0,eax
   1400038a1:	cvtdq2pd xmm0,xmm0
   1400038a5:	call   0x14003b8ae
   1400038aa:	cvttsd2si eax,xmm0
   1400038ae:	mov    DWORD PTR [rip+0x51cd8],eax        # 0x14005558c
   1400038b4:	add    rsp,0x28
   1400038b8:	ret    
   1400038b9:	int3   
   1400038ba:	int3   
   1400038bb:	int3   
   1400038bc:	int3   
   1400038bd:	int3   
   1400038be:	int3   
   1400038bf:	int3   
   1400038c0:	sub    rsp,0x68
   1400038c4:	movsd  xmm3,QWORD PTR [r9+0x8]
   1400038ca:	movsd  xmm0,QWORD PTR [r9]
   1400038cf:	movaps XMMWORD PTR [rsp+0x50],xmm6
   1400038d4:	movaps XMMWORD PTR [rsp+0x40],xmm7
   1400038d9:	movaps XMMWORD PTR [rsp+0x30],xmm8
   1400038df:	movaps XMMWORD PTR [rsp+0x20],xmm9
   1400038e5:	xorps  xmm5,xmm5
   1400038e8:	movsd  xmm9,QWORD PTR [r8+0x8]
   1400038ee:	movsd  xmm6,QWORD PTR [rcx+0x8]
   1400038f3:	movsd  xmm7,QWORD PTR [rdx]
   1400038f7:	movaps XMMWORD PTR [rsp+0x10],xmm10
   1400038fd:	movaps XMMWORD PTR [rsp],xmm13
   140003902:	movsd  xmm13,QWORD PTR [rcx]
   140003907:	movsd  xmm8,QWORD PTR [rdx+0x8]
   14000390d:	movsd  xmm10,QWORD PTR [r8]
   140003912:	movaps xmm2,xmm9
   140003916:	subsd  xmm3,xmm9
   14000391b:	subsd  xmm8,xmm6
   140003920:	mulsd  xmm3,xmm13
   140003925:	mulsd  xmm0,xmm8
   14000392a:	subsd  xmm2,QWORD PTR [r9+0x8]
   140003930:	movaps xmm1,xmm6
   140003933:	subsd  xmm1,QWORD PTR [rdx+0x8]
   140003938:	mulsd  xmm2,xmm7
   14000393c:	addsd  xmm2,xmm3
   140003940:	mulsd  xmm1,xmm10
   140003945:	addsd  xmm2,xmm0
   140003949:	addsd  xmm2,xmm1
   14000394d:	ucomisd xmm2,xmm5
   140003951:	jp     0x140003959
   140003953:	je     0x140003a09
   140003959:	mov    rax,QWORD PTR [rsp+0x90]
   140003961:	movaps xmm4,xmm6
   140003964:	movaps xmm0,xmm9
   140003968:	subsd  xmm4,QWORD PTR [r9+0x8]
   14000396e:	subsd  xmm0,xmm6
   140003972:	subsd  xmm6,xmm9
   140003977:	mulsd  xmm0,QWORD PTR [r9]
   14000397c:	mulsd  xmm6,xmm7
   140003980:	mulsd  xmm4,xmm10
   140003985:	subsd  xmm7,xmm13
   14000398a:	mulsd  xmm10,xmm8
   14000398f:	addsd  xmm4,xmm3
   140003993:	movaps xmm3,xmm9
   140003997:	subsd  xmm3,QWORD PTR [rdx+0x8]
   14000399c:	addsd  xmm4,xmm0
   1400039a0:	divsd  xmm4,xmm2
   1400039a4:	mulsd  xmm3,xmm13
   1400039a9:	mulsd  xmm7,xmm4
   1400039ad:	comisd xmm4,xmm5
   1400039b1:	addsd  xmm3,xmm6
   1400039b5:	addsd  xmm7,xmm13
   1400039ba:	movsd  QWORD PTR [rax],xmm7
   1400039be:	movsd  xmm1,QWORD PTR [rdx+0x8]
   1400039c3:	addsd  xmm3,xmm10
   1400039c8:	divsd  xmm3,xmm2
   1400039cc:	subsd  xmm1,QWORD PTR [rcx+0x8]
   1400039d1:	xorps  xmm3,XMMWORD PTR [rip+0x39b98]        # 0x14003d570
   1400039d8:	mulsd  xmm1,xmm4
   1400039dc:	addsd  xmm1,QWORD PTR [rcx+0x8]
   1400039e1:	movsd  QWORD PTR [rax+0x8],xmm1
   1400039e6:	jb     0x140003a09
   1400039e8:	movsd  xmm0,QWORD PTR [rip+0x399f0]        # 0x14003d3e0
   1400039f0:	comisd xmm0,xmm4
   1400039f4:	jb     0x140003a09
   1400039f6:	comisd xmm3,xmm5
   1400039fa:	jb     0x140003a09
   1400039fc:	comisd xmm0,xmm3
   140003a00:	jb     0x140003a09
   140003a02:	mov    eax,0x1
   140003a07:	jmp    0x140003a0b
   140003a09:	xor    eax,eax
   140003a0b:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   140003a10:	movaps xmm7,XMMWORD PTR [rsp+0x40]
   140003a15:	movaps xmm8,XMMWORD PTR [rsp+0x30]
   140003a1b:	movaps xmm9,XMMWORD PTR [rsp+0x20]
   140003a21:	movaps xmm10,XMMWORD PTR [rsp+0x10]
   140003a27:	movaps xmm13,XMMWORD PTR [rsp]
   140003a2c:	add    rsp,0x68
   140003a30:	ret    
   140003a31:	int3   
   140003a32:	int3   
   140003a33:	int3   
   140003a34:	int3   
   140003a35:	int3   
   140003a36:	int3   
   140003a37:	int3   
   140003a38:	int3   
   140003a39:	int3   
   140003a3a:	int3   
   140003a3b:	int3   
   140003a3c:	int3   
   140003a3d:	int3   
   140003a3e:	int3   
   140003a3f:	int3   
   140003a40:	sub    rsp,0x18
   140003a44:	movups xmm2,XMMWORD PTR [rcx]
   140003a47:	movups xmm5,XMMWORD PTR [rdx]
   140003a4a:	movaps XMMWORD PTR [rsp],xmm6
   140003a4e:	xor    eax,eax
   140003a50:	movaps xmm1,xmm2
   140003a53:	movaps xmm3,xmm5
   140003a56:	unpckhpd xmm1,xmm2
   140003a5a:	unpckhpd xmm3,xmm5
   140003a5e:	movups xmm6,XMMWORD PTR [r8]
   140003a62:	movaps xmm0,xmm1
   140003a65:	movaps xmm4,xmm2
   140003a68:	mulsd  xmm0,xmm5
   140003a6c:	mulsd  xmm4,xmm3
   140003a70:	mulsd  xmm1,xmm6
   140003a74:	subsd  xmm4,xmm0
   140003a78:	movaps xmm0,xmm6
   140003a7b:	unpckhpd xmm0,xmm6
   140003a7f:	mulsd  xmm6,xmm3
   140003a83:	addsd  xmm4,xmm1
   140003a87:	mulsd  xmm2,xmm0
   140003a8b:	mulsd  xmm5,xmm0
   140003a8f:	xorps  xmm0,xmm0
   140003a92:	subsd  xmm4,xmm2
   140003a96:	addsd  xmm4,xmm5
   140003a9a:	subsd  xmm4,xmm6
   140003a9e:	movaps xmm6,XMMWORD PTR [rsp]
   140003aa2:	comisd xmm4,xmm0
   140003aa6:	seta   al
   140003aa9:	add    rsp,0x18
   140003aad:	ret    
   140003aae:	int3   
   140003aaf:	int3   
   140003ab0:	movsd  xmm0,QWORD PTR [rdx]
   140003ab4:	subsd  xmm0,QWORD PTR [r8]
   140003ab9:	movsd  QWORD PTR [rcx],xmm0
   140003abd:	movsd  xmm1,QWORD PTR [rdx+0x8]
   140003ac2:	subsd  xmm1,QWORD PTR [r8+0x8]
   140003ac8:	movsd  QWORD PTR [rcx+0x8],xmm1
   140003acd:	ret    
   140003ace:	int3   
   140003acf:	int3   
   140003ad0:	mov    QWORD PTR [rsp+0x8],rbx
   140003ad5:	push   rdi
   140003ad6:	sub    rsp,0x40
   140003ada:	mov    rbx,rdx
   140003add:	mov    rdi,rcx
   140003ae0:	test   r8,r8
   140003ae3:	jne    0x140003af2
   140003ae5:	xor    eax,eax
   140003ae7:	mov    rbx,QWORD PTR [rsp+0x50]
   140003aec:	add    rsp,0x40
   140003af0:	pop    rdi
   140003af1:	ret    
   140003af2:	mov    rax,QWORD PTR [rcx+0x28]
   140003af6:	mov    rdx,rcx
   140003af9:	lea    rcx,[rsp+0x20]
   140003afe:	call   QWORD PTR [rax+0x18]
   140003b01:	movsd  xmm1,QWORD PTR [rax+0x10]
   140003b06:	movups xmm0,XMMWORD PTR [rax]
   140003b09:	movsd  QWORD PTR [rsp+0x30],xmm1
   140003b0f:	mov    BYTE PTR [rsp+0x32],0x0
   140003b14:	movsd  xmm1,QWORD PTR [rsp+0x30]
   140003b1a:	cmp    QWORD PTR [rbx+0x18],rdi
   140003b1e:	jne    0x140003b39
   140003b20:	movups XMMWORD PTR [rbx+0x30],xmm0
   140003b24:	movsd  QWORD PTR [rbx+0x40],xmm1
   140003b29:	mov    eax,0x1
   140003b2e:	mov    rbx,QWORD PTR [rsp+0x50]
   140003b33:	add    rsp,0x40
   140003b37:	pop    rdi
   140003b38:	ret    
   140003b39:	movups XMMWORD PTR [rbx+0x48],xmm0
   140003b3d:	movsd  QWORD PTR [rbx+0x58],xmm1
   140003b42:	mov    rbx,QWORD PTR [rsp+0x50]
   140003b47:	mov    eax,0x1
   140003b4c:	add    rsp,0x40
   140003b50:	pop    rdi
   140003b51:	ret    
   140003b52:	int3   
   140003b53:	int3   
   140003b54:	int3   
   140003b55:	int3   
   140003b56:	int3   
   140003b57:	int3   
   140003b58:	int3   
   140003b59:	int3   
   140003b5a:	int3   
   140003b5b:	int3   
   140003b5c:	int3   
   140003b5d:	int3   
   140003b5e:	int3   
   140003b5f:	int3   
   140003b60:	push   r14
   140003b62:	push   r15
   140003b64:	sub    rsp,0x28
   140003b68:	mov    r15,rcx
   140003b6b:	call   0x14002a4e0
   140003b70:	mov    r14,rax
   140003b73:	test   rax,rax
   140003b76:	je     0x140003ca5
   140003b7c:	mov    QWORD PTR [rsp+0x40],rbx
   140003b81:	mov    QWORD PTR [rsp+0x48],rbp
   140003b86:	mov    QWORD PTR [rsp+0x50],rsi
   140003b8b:	mov    QWORD PTR [rsp+0x58],rdi
   140003b90:	mov    QWORD PTR [rsp+0x20],r12
   140003b95:	xor    r12d,r12d
   140003b98:	nop    DWORD PTR [rax+rax*1+0x0]
   140003ba0:	mov    rdx,r14
   140003ba3:	mov    rcx,r15
   140003ba6:	call   0x14002b780
   140003bab:	mov    rbp,rax
   140003bae:	test   rax,rax
   140003bb1:	je     0x140003c3f
   140003bb7:	mov    rcx,QWORD PTR [rbp+0x28]
   140003bbb:	test   rcx,rcx
   140003bbe:	je     0x140003c07
   140003bc0:	mov    esi,r12d
   140003bc3:	cmp    DWORD PTR [rcx+0x8],r12d
   140003bc7:	jle    0x140003bf0
   140003bc9:	mov    rdi,r12
   140003bcc:	nop    DWORD PTR [rax+0x0]
   140003bd0:	mov    rax,QWORD PTR [rbp+0x28]
   140003bd4:	mov    rcx,QWORD PTR [rax]
   140003bd7:	mov    rcx,QWORD PTR [rcx+rdi*1]
   140003bdb:	call   QWORD PTR [rip+0x396bf]        # 0x14003d2a0
   140003be1:	mov    rax,QWORD PTR [rbp+0x28]
   140003be5:	inc    esi
   140003be7:	lea    rdi,[rdi+0x28]
   140003beb:	cmp    esi,DWORD PTR [rax+0x8]
   140003bee:	jl     0x140003bd0
   140003bf0:	mov    rcx,QWORD PTR [rbp+0x28]
   140003bf4:	mov    rcx,QWORD PTR [rcx]
   140003bf7:	call   QWORD PTR [rip+0x396a3]        # 0x14003d2a0
   140003bfd:	mov    rcx,QWORD PTR [rbp+0x28]
   140003c01:	call   QWORD PTR [rip+0x39699]        # 0x14003d2a0
   140003c07:	mov    rcx,QWORD PTR [rbp+0x60]
   140003c0b:	mov    QWORD PTR [rbp+0x28],r12
   140003c0f:	call   0x14001c1c0
   140003c14:	lea    rcx,[rbp+0x28]
   140003c18:	xor    edx,edx
   140003c1a:	mov    r8d,0xa0
   140003c20:	call   0x14003b896
   140003c25:	mov    r8,r14
   140003c28:	mov    rdx,rbp
   140003c2b:	mov    rcx,r15
   140003c2e:	call   0x14002b890
   140003c33:	mov    rbp,rax
   140003c36:	test   rax,rax
   140003c39:	jne    0x140003bb7
   140003c3f:	mov    rax,QWORD PTR [r14+0x28]
   140003c43:	test   rax,rax
   140003c46:	je     0x140003c4e
   140003c48:	mov    rcx,r14
   140003c4b:	call   QWORD PTR [rax+0x10]
   140003c4e:	mov    rcx,QWORD PTR [r14+0x88]
   140003c55:	call   QWORD PTR [rip+0x39645]        # 0x14003d2a0
   140003c5b:	mov    rcx,QWORD PTR [r14+0x60]
   140003c5f:	call   0x14001c1c0
   140003c64:	lea    rcx,[r14+0x28]
   140003c68:	xor    edx,edx
   140003c6a:	mov    r8d,0x170
   140003c70:	call   0x14003b896
   140003c75:	mov    rdx,r14
   140003c78:	mov    rcx,r15
   140003c7b:	call   0x14002a5e0
   140003c80:	mov    r14,rax
   140003c83:	test   rax,rax
   140003c86:	jne    0x140003ba0
   140003c8c:	mov    r12,QWORD PTR [rsp+0x20]
   140003c91:	mov    rdi,QWORD PTR [rsp+0x58]
   140003c96:	mov    rsi,QWORD PTR [rsp+0x50]
   140003c9b:	mov    rbp,QWORD PTR [rsp+0x48]
   140003ca0:	mov    rbx,QWORD PTR [rsp+0x40]
   140003ca5:	mov    rcx,r15
   140003ca8:	call   0x140003cf0
   140003cad:	mov    rcx,r15
   140003cb0:	add    rsp,0x28
   140003cb4:	pop    r15
   140003cb6:	pop    r14
   140003cb8:	jmp    0x14002a8b0
   140003cbd:	int3   
   140003cbe:	int3   
   140003cbf:	int3   
   140003cc0:	rex push rbx
   140003cc2:	sub    rsp,0x20
   140003cc6:	mov    rbx,rcx
   140003cc9:	call   0x140003e40
   140003cce:	mov    rcx,QWORD PTR [rbx+0x60]
   140003cd2:	call   0x14001c1c0
   140003cd7:	lea    rcx,[rbx+0x28]
   140003cdb:	xor    edx,edx
   140003cdd:	mov    r8d,0xa0
   140003ce3:	add    rsp,0x20
   140003ce7:	pop    rbx
   140003ce8:	jmp    0x14003b896
   140003ced:	int3   
   140003cee:	int3   
   140003cef:	int3   
   140003cf0:	mov    QWORD PTR [rsp+0x10],rbx
   140003cf5:	mov    QWORD PTR [rsp+0x18],rbp
   140003cfa:	mov    QWORD PTR [rsp+0x20],rsi
   140003cff:	push   rdi
   140003d00:	sub    rsp,0x20
   140003d04:	cmp    DWORD PTR [rip+0x5179d],0x0        # 0x1400554a8
   140003d0b:	mov    rsi,rcx
   140003d0e:	jne    0x140003da6
   140003d14:	cmp    DWORD PTR [rip+0x4f885],0x0        # 0x1400535a0
   140003d1b:	jl     0x140003da6
   140003d21:	mov    rax,QWORD PTR [rip+0x48310]        # 0x14004c038
   140003d28:	or     rbx,0xffffffffffffffff
   140003d2c:	nop    DWORD PTR [rax+0x0]
   140003d30:	inc    rbx
   140003d33:	cmp    BYTE PTR [rax+rbx*1],0x0
   140003d37:	jne    0x140003d30
   140003d39:	mov    rdx,QWORD PTR [rcx+0x40]
   140003d3d:	mov    rbp,QWORD PTR [rdx+0x20]
   140003d41:	mov    rcx,rbp
   140003d44:	call   0x14002b830
   140003d49:	mov    rdi,rax
   140003d4c:	test   rax,rax
   140003d4f:	je     0x140003dab
   140003d51:	mov    QWORD PTR [rsp+0x30],r14
   140003d56:	movsxd r14,ebx
   140003d59:	nop    DWORD PTR [rax+0x0]
   140003d60:	mov    rcx,QWORD PTR [rdi+0x10]
   140003d64:	call   0x14002b080
   140003d69:	mov    rdx,QWORD PTR [rip+0x482c8]        # 0x14004c038
   140003d70:	mov    r8,r14
   140003d73:	mov    rcx,QWORD PTR [rax+0x10]
   140003d77:	mov    rbx,rax
   140003d7a:	call   QWORD PTR [rip+0x392e0]        # 0x14003d060
   140003d80:	test   eax,eax
   140003d82:	jne    0x140003d8c
   140003d84:	mov    rcx,rbx
   140003d87:	call   0x14000c8e0
   140003d8c:	mov    rdx,rdi
   140003d8f:	mov    rcx,rbp
   140003d92:	call   0x14002b9e0
   140003d97:	mov    rdi,rax
   140003d9a:	test   rax,rax
   140003d9d:	jne    0x140003d60
   140003d9f:	mov    r14,QWORD PTR [rsp+0x30]
   140003da4:	jmp    0x140003dab
   140003da6:	call   0x14000c8e0
   140003dab:	mov    rcx,rsi
   140003dae:	call   0x140019ea0
   140003db3:	mov    rcx,QWORD PTR [rsi+0x58]
   140003db7:	call   0x14001c1c0
   140003dbc:	lea    rcx,[rsi+0x50]
   140003dc0:	xor    edx,edx
   140003dc2:	mov    r8d,0x108
   140003dc8:	mov    rbx,QWORD PTR [rsp+0x38]
   140003dcd:	mov    rbp,QWORD PTR [rsp+0x40]
   140003dd2:	mov    rsi,QWORD PTR [rsp+0x48]
   140003dd7:	add    rsp,0x20
   140003ddb:	pop    rdi
   140003ddc:	jmp    0x14003b896
   140003de1:	int3   
   140003de2:	int3   
   140003de3:	int3   
   140003de4:	int3   
   140003de5:	int3   
   140003de6:	int3   
   140003de7:	int3   
   140003de8:	int3   
   140003de9:	int3   
   140003dea:	int3   
   140003deb:	int3   
   140003dec:	int3   
   140003ded:	int3   
   140003dee:	int3   
   140003def:	int3   
   140003df0:	mov    QWORD PTR [rsp+0x8],rbx
   140003df5:	push   rdi
   140003df6:	sub    rsp,0x20
   140003dfa:	mov    rax,QWORD PTR [rcx+0x28]
   140003dfe:	mov    rbx,rcx
   140003e01:	test   rax,rax
   140003e04:	je     0x140003e09
   140003e06:	call   QWORD PTR [rax+0x10]
   140003e09:	mov    rcx,QWORD PTR [rbx+0x88]
   140003e10:	call   QWORD PTR [rip+0x3948a]        # 0x14003d2a0
   140003e16:	mov    rcx,QWORD PTR [rbx+0x60]
   140003e1a:	call   0x14001c1c0
   140003e1f:	lea    rcx,[rbx+0x28]
   140003e23:	xor    edx,edx
   140003e25:	mov    r8d,0x170
   140003e2b:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e30:	add    rsp,0x20
   140003e34:	pop    rdi
   140003e35:	jmp    0x14003b896
   140003e3a:	int3   
   140003e3b:	int3   
   140003e3c:	int3   
   140003e3d:	int3   
   140003e3e:	int3   
   140003e3f:	int3   
   140003e40:	rex push rbx
   140003e42:	sub    rsp,0x20
   140003e46:	mov    rax,QWORD PTR [rcx+0x28]
   140003e4a:	mov    rbx,rcx
   140003e4d:	test   rax,rax
   140003e50:	je     0x140003eb4
   140003e52:	mov    QWORD PTR [rsp+0x30],rsi
   140003e57:	xor    esi,esi
   140003e59:	cmp    DWORD PTR [rax+0x8],esi
   140003e5c:	jle    0x140003e8a
   140003e5e:	mov    QWORD PTR [rsp+0x38],rdi
   140003e63:	xor    edi,edi
   140003e65:	mov    rax,QWORD PTR [rbx+0x28]
   140003e69:	mov    rcx,QWORD PTR [rax]
   140003e6c:	mov    rcx,QWORD PTR [rcx+rdi*1]
   140003e70:	call   QWORD PTR [rip+0x3942a]        # 0x14003d2a0
   140003e76:	mov    rax,QWORD PTR [rbx+0x28]
   140003e7a:	inc    esi
   140003e7c:	lea    rdi,[rdi+0x28]
   140003e80:	cmp    esi,DWORD PTR [rax+0x8]
   140003e83:	jl     0x140003e65
   140003e85:	mov    rdi,QWORD PTR [rsp+0x38]
   140003e8a:	mov    rcx,QWORD PTR [rbx+0x28]
   140003e8e:	mov    rcx,QWORD PTR [rcx]
   140003e91:	call   QWORD PTR [rip+0x39409]        # 0x14003d2a0
   140003e97:	mov    rcx,QWORD PTR [rbx+0x28]
   140003e9b:	call   QWORD PTR [rip+0x393ff]        # 0x14003d2a0
   140003ea1:	mov    rsi,QWORD PTR [rsp+0x30]
   140003ea6:	mov    QWORD PTR [rbx+0x28],0x0
   140003eae:	add    rsp,0x20
   140003eb2:	pop    rbx
   140003eb3:	ret    
   140003eb4:	mov    QWORD PTR [rcx+0x28],0x0
   140003ebc:	add    rsp,0x20
   140003ec0:	pop    rbx
   140003ec1:	ret    
   140003ec2:	int3   
   140003ec3:	int3   
   140003ec4:	int3   
   140003ec5:	int3   
   140003ec6:	int3   
   140003ec7:	int3   
   140003ec8:	int3   
   140003ec9:	int3   
   140003eca:	int3   
   140003ecb:	int3   
   140003ecc:	int3   
   140003ecd:	int3   
   140003ece:	int3   
   140003ecf:	int3   
   140003ed0:	rex push rbx
   140003ed2:	sub    rsp,0x20
   140003ed6:	mov    rbx,rcx
   140003ed9:	call   0x14001b600
   140003ede:	movsd  xmm2,QWORD PTR [rip+0x394fa]        # 0x14003d3e0
   140003ee6:	mov    rdx,QWORD PTR [rip+0x514ab]        # 0x140055398
   140003eed:	movaps xmm3,xmm2
   140003ef0:	mov    rcx,rbx
   140003ef3:	call   0x14001c2e0
   140003ef8:	lea    rdx,[rip+0x394e9]        # 0x14003d3e8
   140003eff:	mov    rcx,rbx
   140003f02:	movsd  QWORD PTR [rbx+0x88],xmm0
   140003f0a:	call   0x1400275b0
   140003f0f:	mov    rcx,QWORD PTR [rbx+0x18]
   140003f13:	mov    r8,rax
   140003f16:	mov    rdx,rbx
   140003f19:	call   0x140003ad0
   140003f1e:	lea    rdx,[rip+0x394d3]        # 0x14003d3f8
   140003f25:	mov    rcx,rbx
   140003f28:	call   0x1400275b0
   140003f2d:	mov    rcx,QWORD PTR [rbx+0x10]
   140003f31:	mov    rdx,rbx
   140003f34:	mov    r8,rax
   140003f37:	add    rsp,0x20
   140003f3b:	pop    rbx
   140003f3c:	jmp    0x140003ad0
   140003f41:	int3   
   140003f42:	int3   
   140003f43:	int3   
   140003f44:	int3   
   140003f45:	int3   
   140003f46:	int3   
   140003f47:	int3   
   140003f48:	int3   
   140003f49:	int3   
   140003f4a:	int3   
   140003f4b:	int3   
   140003f4c:	int3   
   140003f4d:	int3   
   140003f4e:	int3   
   140003f4f:	int3   
   140003f50:	mov    QWORD PTR [rsp+0x8],rbx
   140003f55:	push   rdi
   140003f56:	sub    rsp,0x20
   140003f5a:	mov    rdi,rcx
   140003f5d:	call   0x14001b8d0
   140003f62:	mov    rbx,QWORD PTR [rdi+0x20]
   140003f66:	movsxd rcx,DWORD PTR [rbx+0xd8]
   140003f6d:	shl    rcx,0x3
   140003f71:	call   QWORD PTR [rip+0x391f1]        # 0x14003d168
   140003f77:	mov    rcx,rdi
   140003f7a:	mov    QWORD PTR [rdi+0x88],rax
   140003f81:	movzx  edx,BYTE PTR [rbx+0x90]
   140003f88:	mov    rbx,QWORD PTR [rsp+0x30]
   140003f8d:	add    rsp,0x20
   140003f91:	pop    rdi
   140003f92:	jmp    0x140004560
   140003f97:	int3   
   140003f98:	int3   
   140003f99:	int3   
   140003f9a:	int3   
   140003f9b:	int3   
   140003f9c:	int3   
   140003f9d:	int3   
   140003f9e:	int3   
   140003f9f:	int3   
   140003fa0:	mov    QWORD PTR [rsp+0x10],rbx
   140003fa5:	mov    QWORD PTR [rsp+0x18],rbp
   140003faa:	push   rsi
   140003fab:	sub    rsp,0xa0
   140003fb2:	movaps XMMWORD PTR [rsp+0x90],xmm6
   140003fba:	mov    rsi,rcx
   140003fbd:	call   0x14002a4e0
   140003fc2:	mov    rbx,rax
   140003fc5:	test   rax,rax
   140003fc8:	je     0x14000408d
   140003fce:	movsd  xmm6,QWORD PTR [rip+0x39402]        # 0x14003d3d8
   140003fd6:	movaps XMMWORD PTR [rsp+0x80],xmm7
   140003fde:	movsd  xmm7,QWORD PTR [rip+0x394a2]        # 0x14003d488
   140003fe6:	movaps XMMWORD PTR [rsp+0x70],xmm8
   140003fec:	xorps  xmm8,xmm8
   140003ff0:	mov    rcx,rbx
   140003ff3:	call   0x14001b8d0
   140003ff8:	mov    rcx,QWORD PTR [rbx+0x20]
   140003ffc:	movsxd rcx,DWORD PTR [rcx+0xd8]
   140004003:	shl    rcx,0x3
   140004007:	call   QWORD PTR [rip+0x3915b]        # 0x14003d168
   14000400d:	mov    QWORD PTR [rbx+0x88],rax
   140004014:	movsd  xmm0,QWORD PTR [rbx+0x40]
   140004019:	mulsd  xmm0,xmm7
   14000401d:	comisd xmm0,xmm8
   140004022:	jb     0x14000402a
   140004024:	addsd  xmm0,xmm6
   140004028:	jmp    0x14000402e
   14000402a:	subsd  xmm0,xmm6
   14000402e:	cvttsd2si eax,xmm0
   140004032:	movsd  xmm0,QWORD PTR [rbx+0x48]
   140004037:	mulsd  xmm0,xmm7
   14000403b:	mov    WORD PTR [rbx+0x72],ax
   14000403f:	cwde   
   140004040:	cdq    
   140004041:	sub    eax,edx
   140004043:	sar    eax,1
   140004045:	mov    DWORD PTR [rbx+0x58],eax
   140004048:	mov    DWORD PTR [rbx+0x54],eax
   14000404b:	comisd xmm0,xmm8
   140004050:	jb     0x140004058
   140004052:	addsd  xmm0,xmm6
   140004056:	jmp    0x14000405c
   140004058:	subsd  xmm0,xmm6
   14000405c:	cvttsd2si eax,xmm0
   140004060:	mov    rdx,rbx
   140004063:	mov    rcx,rsi
   140004066:	mov    WORD PTR [rbx+0x74],ax
   14000406a:	cwde   
   14000406b:	mov    DWORD PTR [rbx+0x50],eax
   14000406e:	call   0x14002a5e0
   140004073:	mov    rbx,rax
   140004076:	test   rax,rax
   140004079:	jne    0x140003ff0
   14000407f:	movaps xmm8,XMMWORD PTR [rsp+0x70]
   140004085:	movaps xmm7,XMMWORD PTR [rsp+0x80]
   14000408d:	mov    rcx,rsi
   140004090:	call   0x14002a4e0
   140004095:	mov    rbp,rax
   140004098:	test   rax,rax
   14000409b:	je     0x1400041df
   1400040a1:	movsd  xmm6,QWORD PTR [rip+0x39337]        # 0x14003d3e0
   1400040a9:	mov    QWORD PTR [rsp+0xb0],rdi
   1400040b1:	mov    rdx,rbp
   1400040b4:	mov    rcx,rsi
   1400040b7:	call   0x14002b830
   1400040bc:	mov    rbx,rax
   1400040bf:	test   rax,rax
   1400040c2:	je     0x1400041c0
   1400040c8:	mov    rcx,rbx
   1400040cb:	call   0x14001b600
   1400040d0:	mov    rdx,QWORD PTR [rip+0x512c1]        # 0x140055398
   1400040d7:	mov    rcx,rbx
   1400040da:	movaps xmm3,xmm6
   1400040dd:	movaps xmm2,xmm6
   1400040e0:	call   0x14001c2e0
   1400040e5:	lea    rdx,[rip+0x392fc]        # 0x14003d3e8
   1400040ec:	mov    rcx,rbx
   1400040ef:	movsd  QWORD PTR [rbx+0x88],xmm0
   1400040f7:	call   0x1400275b0
   1400040fc:	mov    rdi,QWORD PTR [rbx+0x18]
   140004100:	test   rax,rax
   140004103:	je     0x14000414b
   140004105:	mov    r9,QWORD PTR [rdi+0x28]
   140004109:	lea    rcx,[rsp+0x50]
   14000410e:	mov    r8,rax
   140004111:	mov    rdx,rdi
   140004114:	call   QWORD PTR [r9+0x18]
   140004118:	movsd  xmm1,QWORD PTR [rax+0x10]
   14000411d:	movups xmm0,XMMWORD PTR [rax]
   140004120:	movsd  QWORD PTR [rsp+0x30],xmm1
   140004126:	mov    BYTE PTR [rsp+0x32],0x0
   14000412b:	movsd  xmm1,QWORD PTR [rsp+0x30]
   140004131:	cmp    QWORD PTR [rbx+0x18],rdi
   140004135:	jne    0x140004142
   140004137:	movups XMMWORD PTR [rbx+0x30],xmm0
   14000413b:	movsd  QWORD PTR [rbx+0x40],xmm1
   140004140:	jmp    0x14000414b
   140004142:	movups XMMWORD PTR [rbx+0x48],xmm0
   140004146:	movsd  QWORD PTR [rbx+0x58],xmm1
   14000414b:	lea    rdx,[rip+0x392a6]        # 0x14003d3f8
   140004152:	mov    rcx,rbx
   140004155:	call   0x1400275b0
   14000415a:	mov    rdi,QWORD PTR [rbx+0x10]
   14000415e:	test   rax,rax
   140004161:	je     0x1400041a9
   140004163:	mov    r9,QWORD PTR [rdi+0x28]
   140004167:	lea    rcx,[rsp+0x50]
   14000416c:	mov    r8,rax
   14000416f:	mov    rdx,rdi
   140004172:	call   QWORD PTR [r9+0x18]
   140004176:	movsd  xmm1,QWORD PTR [rax+0x10]
   14000417b:	movups xmm0,XMMWORD PTR [rax]
   14000417e:	movsd  QWORD PTR [rsp+0x48],xmm1
   140004184:	mov    BYTE PTR [rsp+0x4a],0x0
   140004189:	movsd  xmm1,QWORD PTR [rsp+0x48]
   14000418f:	cmp    QWORD PTR [rbx+0x18],rdi
   140004193:	jne    0x1400041a0
   140004195:	movups XMMWORD PTR [rbx+0x30],xmm0
   140004199:	movsd  QWORD PTR [rbx+0x40],xmm1
   14000419e:	jmp    0x1400041a9
   1400041a0:	movups XMMWORD PTR [rbx+0x48],xmm0
   1400041a4:	movsd  QWORD PTR [rbx+0x58],xmm1
   1400041a9:	mov    rdx,rbx
   1400041ac:	mov    rcx,rsi
   1400041af:	call   0x14002b9e0
   1400041b4:	mov    rbx,rax
   1400041b7:	test   rax,rax
   1400041ba:	jne    0x1400040c8
   1400041c0:	mov    rdx,rbp
   1400041c3:	mov    rcx,rsi
   1400041c6:	call   0x14002a5e0
   1400041cb:	mov    rbp,rax
   1400041ce:	test   rax,rax
   1400041d1:	jne    0x1400040b1
   1400041d7:	mov    rdi,QWORD PTR [rsp+0xb0]
   1400041df:	lea    r11,[rsp+0xa0]
   1400041e7:	mov    rbx,QWORD PTR [r11+0x18]
   1400041eb:	mov    rbp,QWORD PTR [r11+0x20]
   1400041ef:	movaps xmm6,XMMWORD PTR [r11-0x10]
   1400041f4:	mov    rsp,r11
   1400041f7:	pop    rsi
   1400041f8:	ret    
   1400041f9:	int3   
   1400041fa:	int3   
   1400041fb:	int3   
   1400041fc:	int3   
   1400041fd:	int3   
   1400041fe:	int3   
   1400041ff:	int3   
   140004200:	rex push rbp
   140004202:	push   rsi
   140004203:	sub    rsp,0x48
   140004207:	lea    rdx,[rip+0x39202]        # 0x14003d410
   14000420e:	mov    rsi,rcx
   140004211:	call   0x140027500
   140004216:	test   rax,rax
   140004219:	je     0x14000422d
   14000421b:	mov    edx,DWORD PTR [rax+0x10]
   14000421e:	lea    r8,[rip+0x391f3]        # 0x14003d418
   140004225:	mov    rcx,rsi
   140004228:	call   0x140027740
   14000422d:	mov    rcx,rsi
   140004230:	call   0x14001a020
   140004235:	lea    rdx,[rip+0x391e0]        # 0x14003d41c
   14000423c:	mov    rcx,rsi
   14000423f:	call   0x140027500
   140004244:	mov    r9d,0x2
   14000424a:	mov    rcx,rsi
   14000424d:	mov    rdx,rax
   140004250:	mov    r8d,r9d
   140004253:	call   0x14001c350
   140004258:	mov    ecx,0xa
   14000425d:	mov    ebp,0x1
   140004262:	cmp    eax,ecx
   140004264:	cmovl  ecx,eax
   140004267:	mov    DWORD PTR [rsi+0xd8],ecx
   14000426d:	mov    DWORD PTR [rip+0x511f9],ecx        # 0x14005546c
   140004273:	mov    rax,QWORD PTR [rsi+0x50]
   140004277:	mov    rcx,rsi
   14000427a:	mov    DWORD PTR [rax+0x34],ebp
   14000427d:	call   0x140003fa0
   140004282:	cmp    DWORD PTR [rip+0x5121f],0x0        # 0x1400554a8
   140004289:	mov    rcx,rsi
   14000428c:	je     0x1400042b2
   14000428e:	call   0x14000d810
   140004293:	mov    rcx,rsi
   140004296:	mov    edx,eax
   140004298:	call   0x14000caa0
   14000429d:	mov    rcx,rsi
   1400042a0:	call   0x140002410
   1400042a5:	mov    rcx,rsi
   1400042a8:	call   0x140009a30
   1400042ad:	jmp    0x140004541
   1400042b2:	lea    rdx,[rip+0x392d3]        # 0x14003d58c
   1400042b9:	mov    QWORD PTR [rsp+0x68],rbx
   1400042be:	mov    QWORD PTR [rsp+0x70],rdi
   1400042c3:	call   0x1400275b0
   1400042c8:	mov    rbx,rax
   1400042cb:	test   rax,rax
   1400042ce:	je     0x140004307
   1400042d0:	lea    r8,[rip+0x4f2c9]        # 0x1400535a0
   1400042d7:	lea    rdx,[rip+0x392b6]        # 0x14003d594
   1400042de:	mov    rcx,rax
   1400042e1:	call   QWORD PTR [rip+0x38fd1]        # 0x14003d2b8
   1400042e7:	cmp    eax,ebp
   1400042e9:	je     0x140004310
   1400042eb:	movzx  eax,BYTE PTR [rbx]
   1400042ee:	mov    ecx,0xffffffff
   1400042f3:	sub    al,0x54
   1400042f5:	test   al,0xdf
   1400042f7:	mov    eax,0x8
   1400042fc:	cmovne eax,ecx
   1400042ff:	mov    DWORD PTR [rip+0x4f29b],eax        # 0x1400535a0
   140004305:	jmp    0x140004310
   140004307:	or     ecx,0xffffffff
   14000430a:	mov    DWORD PTR [rip+0x4f290],ecx        # 0x1400535a0
   140004310:	lea    rdx,[rip+0x39281]        # 0x14003d598
   140004317:	mov    rcx,rsi
   14000431a:	call   0x1400275b0
   14000431f:	cmp    DWORD PTR [rip+0x4f27a],0x0        # 0x1400535a0
   140004326:	mov    rdi,rax
   140004329:	jl     0x14000444a
   14000432f:	xor    ebx,ebx
   140004331:	mov    QWORD PTR [rsp+0x40],r13
   140004336:	mov    QWORD PTR [rsp+0x30],r15
   14000433b:	test   rax,rax
   14000433e:	je     0x140004365
   140004340:	mov    ecx,ebx
   140004342:	lea    rdx,[rip+0x39257]        # 0x14003d5a0
   140004349:	nop    DWORD PTR [rax+0x0]
   140004350:	movzx  eax,BYTE PTR [rdi+rcx*1]
   140004354:	inc    rcx
   140004357:	cmp    al,BYTE PTR [rdx+rcx*1-0x1]
   14000435b:	jne    0x140004365
   14000435d:	cmp    rcx,0x8
   140004361:	jne    0x140004350
   140004363:	jmp    0x140004367
   140004365:	mov    ebp,ebx
   140004367:	mov    r8,QWORD PTR [rip+0x47cca]        # 0x14004c038
   14000436e:	lea    rdx,[rsp+0x60]
   140004373:	mov    rcx,rsi
   140004376:	call   0x14000fc10
   14000437b:	mov    ecx,DWORD PTR [rsp+0x60]
   14000437f:	mov    r15d,ebx
   140004382:	mov    r13,rax
   140004385:	test   ecx,ecx
   140004387:	jle    0x140004415
   14000438d:	mov    QWORD PTR [rsp+0x78],r12
   140004392:	mov    QWORD PTR [rsp+0x38],r14
   140004397:	mov    r14,rax
   14000439a:	movsxd r12,ebp
   14000439d:	nop    DWORD PTR [rax]
   1400043a0:	mov    rdi,QWORD PTR [r14]
   1400043a3:	mov    rcx,rdi
   1400043a6:	call   0x140010050
   1400043ab:	mov    rcx,rdi
   1400043ae:	call   0x14000d810
   1400043b3:	mov    rcx,rdi
   1400043b6:	mov    ebp,eax
   1400043b8:	mov    edx,eax
   1400043ba:	test   r12,r12
   1400043bd:	je     0x1400043c6
   1400043bf:	call   0x140004be0
   1400043c4:	jmp    0x1400043cb
   1400043c6:	call   0x14000dc90
   1400043cb:	mov    edx,ebp
   1400043cd:	mov    rcx,rdi
   1400043d0:	call   0x14000caa0
   1400043d5:	mov    edx,ebp
   1400043d7:	mov    rcx,rdi
   1400043da:	call   0x14000c100
   1400043df:	mov    edx,ebp
   1400043e1:	mov    rcx,rdi
   1400043e4:	call   0x14000dff0
   1400043e9:	mov    edx,ebp
   1400043eb:	mov    rcx,rdi
   1400043ee:	call   0x14000c560
   1400043f3:	mov    rcx,rdi
   1400043f6:	call   0x140002410
   1400043fb:	mov    ecx,DWORD PTR [rsp+0x60]
   1400043ff:	inc    r15d
   140004402:	add    r14,0x8
   140004406:	cmp    r15d,ecx
   140004409:	jl     0x1400043a0
   14000440b:	mov    r14,QWORD PTR [rsp+0x38]
   140004410:	mov    r12,QWORD PTR [rsp+0x78]
   140004415:	mov    r9d,DWORD PTR [rip+0x4f184]        # 0x1400535a0
   14000441c:	xor    r8d,r8d
   14000441f:	mov    rdx,r13
   140004422:	mov    DWORD PTR [rsp+0x20],ebx
   140004426:	call   0x14000f050
   14000442b:	mov    rcx,rsi
   14000442e:	call   0x140008c90
   140004433:	mov    rcx,rsi
   140004436:	call   0x140009a30
   14000443b:	mov    r15,QWORD PTR [rsp+0x30]
   140004440:	mov    r13,QWORD PTR [rsp+0x40]
   140004445:	jmp    0x140004537
   14000444a:	mov    rcx,rsi
   14000444d:	call   0x14000d810
   140004452:	mov    ebp,eax
   140004454:	test   rdi,rdi
   140004457:	je     0x1400044f5
   14000445d:	xor    ebx,ebx
   14000445f:	lea    rdx,[rip+0x3913a]        # 0x14003d5a0
   140004466:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004470:	movzx  ecx,BYTE PTR [rdi+rbx*1]
   140004474:	inc    rbx
   140004477:	cmp    cl,BYTE PTR [rdx+rbx*1-0x1]
   14000447b:	jne    0x1400044f5
   14000447d:	cmp    rbx,0x8
   140004481:	jne    0x140004470
   140004483:	mov    edx,eax
   140004485:	mov    rcx,rsi
   140004488:	call   0x140004be0
   14000448d:	test   eax,eax
   14000448f:	jne    0x1400044ff
   140004491:	call   QWORD PTR [rip+0x38e39]        # 0x14003d2d0
   140004497:	mov    r8,QWORD PTR [rsi+0x10]
   14000449b:	lea    rdx,[rip+0x3910e]        # 0x14003d5b0
   1400044a2:	lea    rcx,[rax+0x60]
   1400044a6:	call   QWORD PTR [rip+0x38e14]        # 0x14003d2c0
   1400044ac:	call   QWORD PTR [rip+0x38e1e]        # 0x14003d2d0
   1400044b2:	lea    rdx,[rip+0x39147]        # 0x14003d600
   1400044b9:	lea    rcx,[rax+0x60]
   1400044bd:	call   QWORD PTR [rip+0x38dfd]        # 0x14003d2c0
   1400044c3:	call   QWORD PTR [rip+0x38e07]        # 0x14003d2d0
   1400044c9:	lea    rdx,[rip+0x39180]        # 0x14003d650
   1400044d0:	lea    rcx,[rax+0x60]
   1400044d4:	call   QWORD PTR [rip+0x38de6]        # 0x14003d2c0
   1400044da:	call   QWORD PTR [rip+0x38df0]        # 0x14003d2d0
   1400044e0:	lea    rdx,[rip+0x391b1]        # 0x14003d698
   1400044e7:	lea    rcx,[rax+0x60]
   1400044eb:	call   QWORD PTR [rip+0x38dcf]        # 0x14003d2c0
   1400044f1:	mov    edx,ebp
   1400044f3:	jmp    0x1400044f7
   1400044f5:	mov    edx,eax
   1400044f7:	mov    rcx,rsi
   1400044fa:	call   0x14000dc90
   1400044ff:	mov    edx,ebp
   140004501:	mov    rcx,rsi
   140004504:	call   0x14000caa0
   140004509:	mov    edx,ebp
   14000450b:	mov    rcx,rsi
   14000450e:	call   0x14000c100
   140004513:	mov    edx,ebp
   140004515:	mov    rcx,rsi
   140004518:	call   0x14000dff0
   14000451d:	mov    edx,ebp
   14000451f:	mov    rcx,rsi
   140004522:	call   0x14000c560
   140004527:	mov    rcx,rsi
   14000452a:	call   0x140002410
   14000452f:	mov    rcx,rsi
   140004532:	call   0x140009a30
   140004537:	mov    rbx,QWORD PTR [rsp+0x68]
   14000453c:	mov    rdi,QWORD PTR [rsp+0x70]
   140004541:	lea    rdx,[rip+0x18]        # 0x140004560
   140004548:	mov    rcx,rsi
   14000454b:	add    rsp,0x48
   14000454f:	pop    rsi
   140004550:	pop    rbp
   140004551:	jmp    0x140023d50
   140004556:	int3   
   140004557:	int3   
   140004558:	int3   
   140004559:	int3   
   14000455a:	int3   
   14000455b:	int3   
   14000455c:	int3   
   14000455d:	int3   
   14000455e:	int3   
   14000455f:	int3   
   140004560:	movsd  xmm0,QWORD PTR [rcx+0x40]
   140004565:	movsd  xmm2,QWORD PTR [rip+0x38f1b]        # 0x14003d488
   14000456d:	movsd  xmm1,QWORD PTR [rip+0x38e63]        # 0x14003d3d8
   140004575:	xorps  xmm3,xmm3
   140004578:	mulsd  xmm0,xmm2
   14000457c:	comisd xmm0,xmm3
   140004580:	jb     0x140004588
   140004582:	addsd  xmm0,xmm1
   140004586:	jmp    0x14000458c
   140004588:	subsd  xmm0,xmm1
   14000458c:	cvttsd2si eax,xmm0
   140004590:	movsd  xmm0,QWORD PTR [rcx+0x48]
   140004595:	mulsd  xmm0,xmm2
   140004599:	mov    WORD PTR [rcx+0x72],ax
   14000459d:	cwde   
   14000459e:	cdq    
   14000459f:	sub    eax,edx
   1400045a1:	sar    eax,1
   1400045a3:	mov    DWORD PTR [rcx+0x58],eax
   1400045a6:	mov    DWORD PTR [rcx+0x54],eax
   1400045a9:	comisd xmm0,xmm3
   1400045ad:	jb     0x1400045c0
   1400045af:	addsd  xmm0,xmm1
   1400045b3:	cvttsd2si eax,xmm0
   1400045b7:	mov    WORD PTR [rcx+0x74],ax
   1400045bb:	cwde   
   1400045bc:	mov    DWORD PTR [rcx+0x50],eax
   1400045bf:	ret    
   1400045c0:	subsd  xmm0,xmm1
   1400045c4:	cvttsd2si eax,xmm0
   1400045c8:	mov    WORD PTR [rcx+0x74],ax
   1400045cc:	cwde   
   1400045cd:	mov    DWORD PTR [rcx+0x50],eax
   1400045d0:	ret    
   1400045d1:	int3   
   1400045d2:	int3   
   1400045d3:	int3   
   1400045d4:	int3   
   1400045d5:	int3   
   1400045d6:	int3   
   1400045d7:	int3   
   1400045d8:	int3   
   1400045d9:	int3   
   1400045da:	int3   
   1400045db:	int3   
   1400045dc:	int3   
   1400045dd:	int3   
   1400045de:	int3   
   1400045df:	int3   
   1400045e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400045e5:	push   rbx
   1400045e6:	push   rbp
   1400045e7:	sub    rsp,0x38
   1400045eb:	movsxd rbp,r8d
   1400045ee:	mov    rbx,rdx
   1400045f1:	mov    edx,ebp
   1400045f3:	call   0x14000b120
   1400045f8:	test   eax,eax
   1400045fa:	jne    0x140004603
   1400045fc:	add    rsp,0x38
   140004600:	pop    rbp
   140004601:	pop    rbx
   140004602:	ret    
   140004603:	mov    QWORD PTR [rsp+0x50],rsi
   140004608:	mov    QWORD PTR [rsp+0x60],rdi
   14000460d:	mov    QWORD PTR [rsp+0x68],r12
   140004612:	mov    edx,0x8
   140004617:	mov    rcx,rbp
   14000461a:	mov    QWORD PTR [rsp+0x28],r14
   14000461f:	mov    QWORD PTR [rsp+0x20],r15
   140004624:	call   QWORD PTR [rip+0x38a3e]        # 0x14003d068
   14000462a:	mov    r14,rax
   14000462d:	test   ebp,ebp
   14000462f:	jle    0x140004685
   140004631:	mov    QWORD PTR [rsp+0x30],r13
   140004636:	mov    r13,rax
   140004639:	mov    rsi,rbx
   14000463c:	sub    r13,rbx
   14000463f:	movabs rbx,0x3ff0000000000000
   140004649:	mov    r15,rbp
   14000464c:	nop    DWORD PTR [rax+0x0]
   140004650:	test   ebp,ebp
   140004652:	jle    0x14000465f
   140004654:	mov    rdi,r14
   140004657:	xor    eax,eax
   140004659:	mov    rcx,rbp
   14000465c:	rep stos QWORD PTR es:[rdi],rax
   14000465f:	mov    rcx,QWORD PTR [rsi]
   140004662:	mov    r8d,ebp
   140004665:	mov    rdx,r14
   140004668:	mov    QWORD PTR [r13+rsi*1+0x0],rbx
   14000466d:	call   0x14000b6a0
   140004672:	add    rsi,0x8
   140004676:	dec    r15
   140004679:	jne    0x140004650
   14000467b:	mov    rbx,QWORD PTR [rsp+0x58]
   140004680:	mov    r13,QWORD PTR [rsp+0x30]
   140004685:	mov    rcx,r14
   140004688:	call   QWORD PTR [rip+0x38c12]        # 0x14003d2a0
   14000468e:	xor    edi,edi
   140004690:	test   ebp,ebp
   140004692:	jle    0x140004787
   140004698:	nop    DWORD PTR [rax+rax*1+0x0]
   1400046a0:	xor    r8d,r8d
   1400046a3:	cmp    rdi,0x4
   1400046a7:	jl     0x140004752
   1400046ad:	mov    r11,QWORD PTR [rbx+rdi*8]
   1400046b1:	lea    r10,[rdi-0x4]
   1400046b5:	mov    rsi,rbx
   1400046b8:	mov    r14d,0x8
   1400046be:	mov    r15,0xfffffffffffffff0
   1400046c5:	shr    r10,0x2
   1400046c9:	neg    rsi
   1400046cc:	sub    r14,rbx
   1400046cf:	sub    r15,rbx
   1400046d2:	inc    r10
   1400046d5:	lea    r9,[rbx+0x10]
   1400046d9:	lea    r8,[r10*4+0x0]
   1400046e1:	mov    rcx,QWORD PTR [r9-0x10]
   1400046e5:	lea    rdx,[r15+r9*1]
   1400046e9:	mov    rax,QWORD PTR [rcx+rdi*8]
   1400046ed:	movsd  xmm0,QWORD PTR [rdx+r11*1]
   1400046f3:	mov    QWORD PTR [rdx+r11*1],rax
   1400046f7:	movsd  QWORD PTR [rcx+rdi*8],xmm0
   1400046fc:	movsd  xmm1,QWORD PTR [rdx+r11*1+0x8]
   140004703:	mov    rcx,QWORD PTR [r9-0x8]
   140004707:	mov    rax,QWORD PTR [rcx+rdi*8]
   14000470b:	mov    QWORD PTR [rdx+r11*1+0x8],rax
   140004710:	lea    rdx,[r9+r11*1]
   140004714:	movsd  QWORD PTR [rcx+rdi*8],xmm1
   140004719:	mov    rcx,QWORD PTR [r9]
   14000471c:	movsd  xmm0,QWORD PTR [rdx+rsi*1]
   140004721:	mov    rax,QWORD PTR [rcx+rdi*8]
   140004725:	mov    QWORD PTR [rdx+rsi*1],rax
   140004729:	lea    rdx,[r14+r9*1]
   14000472d:	lea    r9,[r9+0x20]
   140004731:	movsd  QWORD PTR [rcx+rdi*8],xmm0
   140004736:	mov    rcx,QWORD PTR [r9-0x18]
   14000473a:	movsd  xmm0,QWORD PTR [rdx+r11*1]
   140004740:	mov    rax,QWORD PTR [rcx+rdi*8]
   140004744:	mov    QWORD PTR [rdx+r11*1],rax
   140004748:	movsd  QWORD PTR [rcx+rdi*8],xmm0
   14000474d:	dec    r10
   140004750:	jne    0x1400046e1
   140004752:	cmp    r8,rdi
   140004755:	jge    0x14000477b
   140004757:	mov    rdx,QWORD PTR [rbx+rdi*8]
   14000475b:	mov    rcx,QWORD PTR [rbx+r8*8]
   14000475f:	movsd  xmm0,QWORD PTR [rdx+r8*8]
   140004765:	inc    r8
   140004768:	mov    rax,QWORD PTR [rcx+rdi*8]
   14000476c:	mov    QWORD PTR [rdx+r8*8-0x8],rax
   140004771:	movsd  QWORD PTR [rcx+rdi*8],xmm0
   140004776:	cmp    r8,rdi
   140004779:	jl     0x14000475b
   14000477b:	inc    rdi
   14000477e:	cmp    rdi,rbp
   140004781:	jl     0x1400046a0
   140004787:	mov    r15,QWORD PTR [rsp+0x20]
   14000478c:	mov    r14,QWORD PTR [rsp+0x28]
   140004791:	mov    r12,QWORD PTR [rsp+0x68]
   140004796:	mov    rdi,QWORD PTR [rsp+0x60]
   14000479b:	mov    rsi,QWORD PTR [rsp+0x50]
   1400047a0:	mov    eax,0x1
   1400047a5:	add    rsp,0x38
   1400047a9:	pop    rbp
   1400047aa:	pop    rbx
   1400047ab:	ret    
   1400047ac:	int3   
   1400047ad:	int3   
   1400047ae:	int3   
   1400047af:	int3   
   1400047b0:	dec    DWORD PTR [rcx+0x14]
   1400047b3:	jne    0x1400047c1
   1400047b5:	lea    rdx,[rip+0x4edec]        # 0x1400535a8
   1400047bc:	jmp    0x140005c20
   1400047c1:	ret    
   1400047c2:	int3   
   1400047c3:	int3   
   1400047c4:	int3   
   1400047c5:	int3   
   1400047c6:	int3   
   1400047c7:	int3   
   1400047c8:	int3   
   1400047c9:	int3   
   1400047ca:	int3   
   1400047cb:	int3   
   1400047cc:	int3   
   1400047cd:	int3   
   1400047ce:	int3   
   1400047cf:	int3   
   1400047d0:	movsd  xmm1,QWORD PTR [rcx]
   1400047d4:	movsd  xmm0,QWORD PTR [rcx+0x8]
   1400047d9:	subsd  xmm0,QWORD PTR [rdx+0x8]
   1400047de:	subsd  xmm1,QWORD PTR [rdx]
   1400047e2:	mulsd  xmm0,xmm0
   1400047e6:	mulsd  xmm1,xmm1
   1400047ea:	addsd  xmm0,xmm1
   1400047ee:	jmp    0x14003b8ae
   1400047f3:	int3   
   1400047f4:	int3   
   1400047f5:	int3   
   1400047f6:	int3   
   1400047f7:	int3   
   1400047f8:	int3   
   1400047f9:	int3   
   1400047fa:	int3   
   1400047fb:	int3   
   1400047fc:	int3   
   1400047fd:	int3   
   1400047fe:	int3   
   1400047ff:	int3   
   140004800:	lea    rcx,[rip+0x4eda1]        # 0x1400535a8
   140004807:	jmp    0x140005b40
   14000480c:	int3   
   14000480d:	int3   
   14000480e:	int3   
   14000480f:	int3   
   140004810:	mov    eax,DWORD PTR [rip+0x4edaa]        # 0x1400535c0
   140004816:	mov    DWORD PTR [rcx+0x10],eax
   140004819:	inc    eax
   14000481b:	mov    DWORD PTR [rip+0x4ed9f],eax        # 0x1400535c0
   140004821:	ret    
   140004822:	int3   
   140004823:	int3   
   140004824:	int3   
   140004825:	int3   
   140004826:	int3   
   140004827:	int3   
   140004828:	int3   
   140004829:	int3   
   14000482a:	int3   
   14000482b:	int3   
   14000482c:	int3   
   14000482d:	int3   
   14000482e:	int3   
   14000482f:	int3   
   140004830:	inc    DWORD PTR [rcx+0x14]
   140004833:	ret    
   140004834:	int3   
   140004835:	int3   
   140004836:	int3   
   140004837:	int3   
   140004838:	int3   
   140004839:	int3   
   14000483a:	int3   
   14000483b:	int3   
   14000483c:	int3   
   14000483d:	int3   
   14000483e:	int3   
   14000483f:	int3   
   140004840:	sub    rsp,0x28
   140004844:	lea    rcx,[rip+0x4ed5d]        # 0x1400535a8
   14000484b:	mov    edx,0x18
   140004850:	call   0x140005a70
   140004855:	mov    DWORD PTR [rip+0x4ed61],0x0        # 0x1400535c0
   14000485f:	add    rsp,0x28
   140004863:	ret    
   140004864:	int3   
   140004865:	int3   
   140004866:	int3   
   140004867:	int3   
   140004868:	int3   
   140004869:	int3   
   14000486a:	int3   
   14000486b:	int3   
   14000486c:	int3   
   14000486d:	int3   
   14000486e:	int3   
   14000486f:	int3   
   140004870:	mov    QWORD PTR [rsp+0x10],rdx
   140004875:	push   rbx
   140004876:	sub    rsp,0x80
   14000487d:	mov    QWORD PTR [rsp+0x78],rsi
   140004882:	mov    QWORD PTR [rsp+0x68],r12
   140004887:	movaps XMMWORD PTR [rsp+0x40],xmm6
   14000488c:	mov    r12,rdx
   14000488f:	call   0x140006910
   140004894:	call   0x140004840
   140004899:	call   0x140005220
   14000489e:	call   r12
   1400048a1:	mov    QWORD PTR [rip+0x50cd8],rax        # 0x140055580
   1400048a8:	call   0x140006a10
   1400048ad:	call   r12
   1400048b0:	movsd  xmm6,QWORD PTR [rsp+0x28]
   1400048b6:	mov    QWORD PTR [rsp+0x90],rbp
   1400048be:	mov    QWORD PTR [rsp+0x70],rdi
   1400048c3:	mov    QWORD PTR [rsp+0x60],r13
   1400048c8:	mov    QWORD PTR [rsp+0x58],r14
   1400048cd:	mov    QWORD PTR [rsp+0x50],r15
   1400048d2:	mov    rsi,rax
   1400048d5:	call   0x1400051e0
   1400048da:	test   eax,eax
   1400048dc:	jne    0x1400048f6
   1400048de:	lea    rcx,[rsp+0x30]
   1400048e3:	call   0x140004f50
   1400048e8:	movups xmm0,XMMWORD PTR [rax]
   1400048eb:	movups XMMWORD PTR [rsp+0x20],xmm0
   1400048f0:	movsd  xmm6,QWORD PTR [rsp+0x28]
   1400048f6:	test   rsi,rsi
   1400048f9:	je     0x1400049f7
   1400048ff:	call   0x1400051e0
   140004904:	test   eax,eax
   140004906:	jne    0x140004933
   140004908:	movsd  xmm0,QWORD PTR [rsi+0x8]
   14000490d:	comisd xmm6,xmm0
   140004911:	ja     0x140004933
   140004913:	ucomisd xmm0,xmm6
   140004917:	jp     0x1400049f7
   14000491d:	jne    0x1400049f7
   140004923:	movsd  xmm0,QWORD PTR [rsp+0x20]
   140004929:	comisd xmm0,QWORD PTR [rsi]
   14000492d:	jbe    0x1400049f7
   140004933:	mov    rcx,rsi
   140004936:	call   0x140006b50
   14000493b:	mov    rcx,rax
   14000493e:	mov    rbx,rax
   140004941:	call   0x140006df0
   140004946:	mov    rcx,rbx
   140004949:	mov    r15,rax
   14000494c:	call   0x140007140
   140004951:	mov    rdx,rsi
   140004954:	mov    rcx,rax
   140004957:	call   0x1400064b0
   14000495c:	xor    edx,edx
   14000495e:	mov    rcx,rax
   140004961:	mov    r14,rax
   140004964:	call   0x140006e00
   140004969:	mov    rcx,rbx
   14000496c:	mov    rdx,rax
   14000496f:	mov    rbp,rax
   140004972:	call   0x140006b20
   140004977:	mov    rdx,rbp
   14000497a:	mov    rcx,rbx
   14000497d:	call   0x140006e40
   140004982:	mov    rdi,rax
   140004985:	test   rax,rax
   140004988:	je     0x1400049ab
   14000498a:	mov    rcx,rbx
   14000498d:	call   0x140005000
   140004992:	mov    rdx,rsi
   140004995:	mov    rcx,rdi
   140004998:	call   0x1400047d0
   14000499d:	mov    rdx,rdi
   1400049a0:	mov    rcx,rbx
   1400049a3:	movaps xmm2,xmm0
   1400049a6:	call   0x140005290
   1400049ab:	mov    dl,0x1
   1400049ad:	mov    rcx,r14
   1400049b0:	call   0x140006e00
   1400049b5:	mov    rcx,rbp
   1400049b8:	mov    rdx,rax
   1400049bb:	mov    rdi,rax
   1400049be:	call   0x140006b20
   1400049c3:	mov    rdx,r15
   1400049c6:	mov    rcx,rdi
   1400049c9:	call   0x140006e40
   1400049ce:	mov    rbx,rax
   1400049d1:	test   rax,rax
   1400049d4:	je     0x1400049ef
   1400049d6:	mov    rdx,rsi
   1400049d9:	mov    rcx,rax
   1400049dc:	call   0x1400047d0
   1400049e1:	mov    rdx,rbx
   1400049e4:	mov    rcx,rdi
   1400049e7:	movaps xmm2,xmm0
   1400049ea:	call   0x140005290
   1400049ef:	call   r12
   1400049f2:	jmp    0x1400048d2
   1400049f7:	call   0x1400051e0
   1400049fc:	test   eax,eax
   1400049fe:	jne    0x140004b65
   140004a04:	call   0x1400051f0
   140004a09:	mov    rcx,rax
   140004a0c:	mov    rdi,rax
   140004a0f:	call   0x140006b40
   140004a14:	mov    rcx,rdi
   140004a17:	mov    r15,rax
   140004a1a:	call   0x140006df0
   140004a1f:	mov    rcx,rax
   140004a22:	mov    rbx,rax
   140004a25:	call   0x140006df0
   140004a2a:	mov    rcx,rdi
   140004a2d:	mov    QWORD PTR [rsp+0xa0],rax
   140004a35:	call   0x140006f60
   140004a3a:	mov    rcx,rbx
   140004a3d:	mov    rbp,rax
   140004a40:	call   0x140007140
   140004a45:	mov    r13,QWORD PTR [rdi+0x20]
   140004a49:	mov    rcx,r13
   140004a4c:	mov    r14,rax
   140004a4f:	call   0x140004810
   140004a54:	movsx  edx,BYTE PTR [rdi+0x1c]
   140004a58:	mov    rcx,QWORD PTR [rdi+0x10]
   140004a5c:	mov    r8,r13
   140004a5f:	call   0x140006940
   140004a64:	movsx  edx,BYTE PTR [rbx+0x1c]
   140004a68:	mov    rcx,QWORD PTR [rbx+0x10]
   140004a6c:	mov    r8,r13
   140004a6f:	call   0x140006940
   140004a74:	mov    rcx,rdi
   140004a77:	call   0x1400069a0
   140004a7c:	mov    rcx,rbx
   140004a7f:	call   0x140005000
   140004a84:	mov    rcx,rbx
   140004a87:	call   0x1400069a0
   140004a8c:	xor    r12b,r12b
   140004a8f:	movsd  xmm0,QWORD PTR [rbp+0x8]
   140004a94:	comisd xmm0,QWORD PTR [r14+0x8]
   140004a9a:	jbe    0x140004aa8
   140004a9c:	mov    rax,rbp
   140004a9f:	mov    rbp,r14
   140004aa2:	mov    r12b,0x1
   140004aa5:	mov    r14,rax
   140004aa8:	mov    rdx,r14
   140004aab:	mov    rcx,rbp
   140004aae:	call   0x1400064b0
   140004ab3:	movzx  edx,r12b
   140004ab7:	mov    rcx,rax
   140004aba:	mov    rbx,rax
   140004abd:	call   0x140006e00
   140004ac2:	mov    rcx,r15
   140004ac5:	mov    rdx,rax
   140004ac8:	mov    rdi,rax
   140004acb:	call   0x140006b20
   140004ad0:	movsx  r8d,r12b
   140004ad4:	mov    edx,0x1
   140004ad9:	sub    edx,r8d
   140004adc:	mov    r8,r13
   140004adf:	mov    rcx,rbx
   140004ae2:	call   0x140006940
   140004ae7:	mov    rcx,r13
   140004aea:	call   0x1400047b0
   140004aef:	mov    rdx,rdi
   140004af2:	mov    rcx,r15
   140004af5:	call   0x140006e40
   140004afa:	mov    rbx,rax
   140004afd:	test   rax,rax
   140004b00:	je     0x140004b23
   140004b02:	mov    rcx,r15
   140004b05:	call   0x140005000
   140004b0a:	mov    rdx,rbp
   140004b0d:	mov    rcx,rbx
   140004b10:	call   0x1400047d0
   140004b15:	mov    rdx,rbx
   140004b18:	mov    rcx,r15
   140004b1b:	movaps xmm2,xmm0
   140004b1e:	call   0x140005290
   140004b23:	mov    rdx,QWORD PTR [rsp+0xa0]
   140004b2b:	mov    rcx,rdi
   140004b2e:	call   0x140006e40
   140004b33:	mov    r12,QWORD PTR [rsp+0x98]
   140004b3b:	mov    rbx,rax
   140004b3e:	test   rax,rax
   140004b41:	je     0x1400048d5
   140004b47:	mov    rdx,rbp
   140004b4a:	mov    rcx,rax
   140004b4d:	call   0x1400047d0
   140004b52:	mov    rdx,rbx
   140004b55:	mov    rcx,rdi
   140004b58:	movaps xmm2,xmm0
   140004b5b:	call   0x140005290
   140004b60:	jmp    0x1400048d5
   140004b65:	mov    rcx,QWORD PTR [rip+0x509ec]        # 0x140055558
   140004b6c:	call   0x140006df0
   140004b71:	mov    r15,QWORD PTR [rsp+0x50]
   140004b76:	mov    r14,QWORD PTR [rsp+0x58]
   140004b7b:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   140004b80:	cmp    rax,QWORD PTR [rip+0x509c9]        # 0x140055550
   140004b87:	mov    r13,QWORD PTR [rsp+0x60]
   140004b8c:	mov    r12,QWORD PTR [rsp+0x68]
   140004b91:	mov    rdi,QWORD PTR [rsp+0x70]
   140004b96:	mov    rsi,QWORD PTR [rsp+0x78]
   140004b9b:	mov    rbp,QWORD PTR [rsp+0x90]
   140004ba3:	mov    rbx,rax
   140004ba6:	je     0x140004bcd
   140004ba8:	nop    DWORD PTR [rax+rax*1+0x0]
   140004bb0:	mov    rcx,QWORD PTR [rbx+0x10]
   140004bb4:	call   0x1400065c0
   140004bb9:	mov    rcx,rbx
   140004bbc:	call   0x140006df0
   140004bc1:	cmp    rax,QWORD PTR [rip+0x50988]        # 0x140055550
   140004bc8:	mov    rbx,rax
   140004bcb:	jne    0x140004bb0
   140004bcd:	add    rsp,0x80
   140004bd4:	pop    rbx
   140004bd5:	ret    
   140004bd6:	int3   
   140004bd7:	int3   
   140004bd8:	int3   
   140004bd9:	int3   
   140004bda:	int3   
   140004bdb:	int3   
   140004bdc:	int3   
   140004bdd:	int3   
   140004bde:	int3   
   140004bdf:	int3   
   140004be0:	mov    QWORD PTR [rsp+0x18],rbx
   140004be5:	mov    QWORD PTR [rsp+0x20],rbp
   140004bea:	push   rsi
   140004beb:	push   rdi
   140004bec:	push   r14
   140004bee:	sub    rsp,0x30
   140004bf2:	cmp    BYTE PTR [rip+0x508c0],0x0        # 0x1400554b9
   140004bf9:	movsxd rbp,edx
   140004bfc:	mov    rdi,rcx
   140004bff:	je     0x140004c18
   140004c01:	call   QWORD PTR [rip+0x386c9]        # 0x14003d2d0
   140004c07:	lea    rdx,[rip+0x38ab2]        # 0x14003d6c0
   140004c0e:	lea    rcx,[rax+0x60]
   140004c12:	call   QWORD PTR [rip+0x386a8]        # 0x14003d2c0
   140004c18:	xorps  xmm2,xmm2
   140004c1b:	mov    edx,ebp
   140004c1d:	mov    ecx,ebp
   140004c1f:	call   0x14000d300
   140004c24:	xorps  xmm2,xmm2
   140004c27:	mov    edx,ebp
   140004c29:	mov    ecx,ebp
   140004c2b:	mov    rsi,rax
   140004c2e:	call   0x14000d300
   140004c33:	mov    rcx,rdi
   140004c36:	mov    r14,rax
   140004c39:	call   0x14002a4e0
   140004c3e:	mov    rbx,rax
   140004c41:	test   rax,rax
   140004c44:	je     0x140004ce3
   140004c4a:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140004c4f:	movsd  xmm6,QWORD PTR [rip+0x38a91]        # 0x14003d6e8
   140004c57:	nop    WORD PTR [rax+rax*1+0x0]
   140004c60:	mov    rdx,rbx
   140004c63:	mov    rcx,rdi
   140004c66:	call   0x14002b780
   140004c6b:	mov    r9,rax
   140004c6e:	test   rax,rax
   140004c71:	je     0x140004ccb
   140004c73:	nop    DWORD PTR [rax+0x0]
   140004c77:	nop    WORD PTR [rax+rax*1+0x0]
   140004c80:	mov    rcx,QWORD PTR [r9+0x18]
   140004c84:	movsxd rax,DWORD PTR [rcx+0x78]
   140004c88:	mov    rcx,QWORD PTR [r9+0x10]
   140004c8c:	movsxd rdx,DWORD PTR [rcx+0x78]
   140004c90:	cmp    eax,edx
   140004c92:	je     0x140004cb5
   140004c94:	mov    rcx,rax
   140004c97:	mov    rax,QWORD PTR [rsi+rdx*8]
   140004c9b:	movaps xmm0,xmm6
   140004c9e:	divsd  xmm0,QWORD PTR [r9+0x90]
   140004ca7:	movsd  QWORD PTR [rax+rcx*8],xmm0
   140004cac:	mov    rax,QWORD PTR [rsi+rcx*8]
   140004cb0:	movsd  QWORD PTR [rax+rdx*8],xmm0
   140004cb5:	mov    r8,rbx
   140004cb8:	mov    rdx,r9
   140004cbb:	mov    rcx,rdi
   140004cbe:	call   0x14002b890
   140004cc3:	mov    r9,rax
   140004cc6:	test   rax,rax
   140004cc9:	jne    0x140004c80
   140004ccb:	mov    rdx,rbx
   140004cce:	mov    rcx,rdi
   140004cd1:	call   0x14002a5e0
   140004cd6:	mov    rbx,rax
   140004cd9:	test   rax,rax
   140004cdc:	jne    0x140004c60
   140004cde:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140004ce3:	xor    r8d,r8d
   140004ce6:	mov    rbx,rbp
   140004ce9:	test   ebp,ebp
   140004ceb:	jle    0x140004d9a
   140004cf1:	movsd  xmm1,QWORD PTR [rip+0x38877]        # 0x14003d570
   140004cf9:	mov    r11,rsi
   140004cfc:	mov    rdx,rsi
   140004cff:	neg    r11
   140004d02:	xor    ecx,ecx
   140004d04:	xorps  xmm0,xmm0
   140004d07:	cmp    rbx,0x4
   140004d0b:	jl     0x140004d61
   140004d0d:	lea    r10,[rbp-0x3]
   140004d11:	lea    r9d,[rcx+0x2]
   140004d15:	cmp    r8,rcx
   140004d18:	je     0x140004d22
   140004d1a:	mov    rax,QWORD PTR [rdx]
   140004d1d:	addsd  xmm0,QWORD PTR [rax+rcx*8]
   140004d22:	lea    rax,[r9-0x1]
   140004d26:	cmp    r8,rax
   140004d29:	je     0x140004d34
   140004d2b:	mov    rax,QWORD PTR [rdx]
   140004d2e:	addsd  xmm0,QWORD PTR [rax+rcx*8+0x8]
   140004d34:	cmp    r8,r9
   140004d37:	je     0x140004d42
   140004d39:	mov    rax,QWORD PTR [rdx]
   140004d3c:	addsd  xmm0,QWORD PTR [rax+rcx*8+0x10]
   140004d42:	lea    rax,[r9+0x1]
   140004d46:	cmp    r8,rax
   140004d49:	je     0x140004d54
   140004d4b:	mov    rax,QWORD PTR [rdx]
   140004d4e:	addsd  xmm0,QWORD PTR [rax+rcx*8+0x18]
   140004d54:	add    rcx,0x4
   140004d58:	add    r9,0x4
   140004d5c:	cmp    rcx,r10
   140004d5f:	jl     0x140004d15
   140004d61:	cmp    rcx,rbx
   140004d64:	jge    0x140004d7b
   140004d66:	cmp    r8,rcx
   140004d69:	je     0x140004d73
   140004d6b:	mov    rax,QWORD PTR [rdx]
   140004d6e:	addsd  xmm0,QWORD PTR [rax+rcx*8]
   140004d73:	inc    rcx
   140004d76:	cmp    rcx,rbx
   140004d79:	jl     0x140004d66
   140004d7b:	mov    rax,QWORD PTR [rdx]
   140004d7e:	lea    rcx,[r11+rdx*1]
   140004d82:	xorps  xmm0,xmm1
   140004d85:	inc    r8
   140004d88:	add    rdx,0x8
   140004d8c:	movsd  QWORD PTR [rcx+rax*1],xmm0
   140004d91:	cmp    r8,rbx
   140004d94:	jl     0x140004d02
   140004d9a:	lea    r8d,[rbp-0x1]
   140004d9e:	mov    rdx,r14
   140004da1:	mov    rcx,rsi
   140004da4:	call   0x1400045e0
   140004da9:	test   eax,eax
   140004dab:	je     0x140004f39
   140004db1:	xor    r9d,r9d
   140004db4:	test   ebp,ebp
   140004db6:	jle    0x140004f34
   140004dbc:	movsd  xmm3,QWORD PTR [rip+0x3891c]        # 0x14003d6e0
   140004dc4:	mov    QWORD PTR [rsp+0x50],r12
   140004dc9:	mov    QWORD PTR [rsp+0x58],r15
   140004dce:	xchg   ax,ax
   140004dd0:	xor    r8d,r8d
   140004dd3:	cmp    rbx,0x4
   140004dd7:	jl     0x140004edc
   140004ddd:	mov    rsi,QWORD PTR [r14+r9*8]
   140004de1:	lea    r10,[rbx-0x4]
   140004de5:	mov    r15,r14
   140004de8:	mov    r12d,0x8
   140004dee:	mov    rbp,0xfffffffffffffff0
   140004df5:	shr    r10,0x2
   140004df9:	neg    r15
   140004dfc:	sub    r12,r14
   140004dff:	sub    rbp,r14
   140004e02:	inc    r10
   140004e05:	lea    r11,[r14+0x10]
   140004e09:	lea    r8,[r10*4+0x0]
   140004e11:	mov    rax,QWORD PTR [r11-0x10]
   140004e15:	lea    rdx,[r11+rbp*1]
   140004e19:	movsd  xmm0,QWORD PTR [rsi+rdx*1]
   140004e1e:	movsd  xmm1,QWORD PTR [rax+rdx*1]
   140004e23:	mov    rax,QWORD PTR [rdi+0xb8]
   140004e2a:	addsd  xmm1,QWORD PTR [rsi+r9*8]
   140004e30:	mulsd  xmm0,xmm3
   140004e34:	mov    rcx,QWORD PTR [rax+r9*8]
   140004e38:	mov    rax,QWORD PTR [r11-0x8]
   140004e3c:	subsd  xmm1,xmm0
   140004e40:	movsd  QWORD PTR [rdx+rcx*1],xmm1
   140004e45:	movsd  xmm2,QWORD PTR [rax+rdx*1+0x8]
   140004e4b:	movsd  xmm0,QWORD PTR [rsi+rdx*1+0x8]
   140004e51:	mov    rax,QWORD PTR [rdi+0xb8]
   140004e58:	mulsd  xmm0,xmm3
   140004e5c:	mov    rcx,QWORD PTR [rax+r9*8]
   140004e60:	mov    rax,QWORD PTR [r11]
   140004e63:	addsd  xmm2,QWORD PTR [rsi+r9*8]
   140004e69:	subsd  xmm2,xmm0
   140004e6d:	movsd  QWORD PTR [rcx+rdx*1+0x8],xmm2
   140004e73:	lea    rdx,[r15+r11*1]
   140004e77:	movsd  xmm1,QWORD PTR [rdx+rax*1]
   140004e7c:	movsd  xmm0,QWORD PTR [rdx+rsi*1]
   140004e81:	mov    rax,QWORD PTR [rdi+0xb8]
   140004e88:	addsd  xmm1,QWORD PTR [rsi+r9*8]
   140004e8e:	mulsd  xmm0,xmm3
   140004e92:	mov    rcx,QWORD PTR [rax+r9*8]
   140004e96:	mov    rax,QWORD PTR [r11+0x8]
   140004e9a:	subsd  xmm1,xmm0
   140004e9e:	movsd  QWORD PTR [rdx+rcx*1],xmm1
   140004ea3:	lea    rdx,[r12+r11*1]
   140004ea7:	add    r11,0x20
   140004eab:	movsd  xmm1,QWORD PTR [rax+rdx*1]
   140004eb0:	movsd  xmm0,QWORD PTR [rsi+rdx*1]
   140004eb5:	mov    rax,QWORD PTR [rdi+0xb8]
   140004ebc:	addsd  xmm1,QWORD PTR [rsi+r9*8]
   140004ec2:	mulsd  xmm0,xmm3
   140004ec6:	mov    rcx,QWORD PTR [rax+r9*8]
   140004eca:	subsd  xmm1,xmm0
   140004ece:	movsd  QWORD PTR [rdx+rcx*1],xmm1
   140004ed3:	dec    r10
   140004ed6:	jne    0x140004e11
   140004edc:	cmp    r8,rbx
   140004edf:	jge    0x140004f1e
   140004ee1:	mov    rdx,QWORD PTR [r14+r9*8]
   140004ee5:	mov    rax,QWORD PTR [r14+r8*8]
   140004ee9:	movsd  xmm0,QWORD PTR [rdx+r8*8]
   140004eef:	inc    r8
   140004ef2:	mulsd  xmm0,xmm3
   140004ef6:	movsd  xmm1,QWORD PTR [rax+r8*8-0x8]
   140004efd:	mov    rax,QWORD PTR [rdi+0xb8]
   140004f04:	addsd  xmm1,QWORD PTR [rdx+r9*8]
   140004f0a:	mov    rcx,QWORD PTR [rax+r9*8]
   140004f0e:	subsd  xmm1,xmm0
   140004f12:	movsd  QWORD PTR [rcx+r8*8-0x8],xmm1
   140004f19:	cmp    r8,rbx
   140004f1c:	jl     0x140004ee5
   140004f1e:	inc    r9
   140004f21:	cmp    r9,rbx
   140004f24:	jl     0x140004dd0
   140004f2a:	mov    r15,QWORD PTR [rsp+0x58]
   140004f2f:	mov    r12,QWORD PTR [rsp+0x50]
   140004f34:	mov    eax,0x1
   140004f39:	mov    rbx,QWORD PTR [rsp+0x60]
   140004f3e:	mov    rbp,QWORD PTR [rsp+0x68]
   140004f43:	add    rsp,0x30
   140004f47:	pop    r14
   140004f49:	pop    rdi
   140004f4a:	pop    rsi
   140004f4b:	ret    
   140004f4c:	int3   
   140004f4d:	int3   
   140004f4e:	int3   
   140004f4f:	int3   
   140004f50:	movsxd r8,DWORD PTR [rip+0x4e681]        # 0x1400535d8
   140004f57:	mov    r9,QWORD PTR [rip+0x4e66a]        # 0x1400535c8
   140004f5e:	mov    r10,rcx
   140004f61:	imul   rdx,r8,0x38
   140004f65:	cmp    QWORD PTR [rdx+r9*1+0x30],0x0
   140004f6b:	jne    0x140004f89
   140004f6d:	nop    DWORD PTR [rax]
   140004f70:	inc    r8d
   140004f73:	movsxd rax,r8d
   140004f76:	imul   rdx,rax,0x38
   140004f7a:	cmp    QWORD PTR [rdx+r9*1+0x30],0x0
   140004f80:	je     0x140004f70
   140004f82:	mov    DWORD PTR [rip+0x4e64f],r8d        # 0x1400535d8
   140004f89:	movsxd rax,r8d
   140004f8c:	imul   rcx,rax,0x38
   140004f90:	mov    rdx,QWORD PTR [rcx+r9*1+0x30]
   140004f95:	mov    rax,QWORD PTR [rdx+0x20]
   140004f99:	mov    rcx,QWORD PTR [rax]
   140004f9c:	mov    rax,QWORD PTR [rdx+0x28]
   140004fa0:	mov    QWORD PTR [r10+0x8],rax
   140004fa4:	mov    rax,r10
   140004fa7:	mov    QWORD PTR [r10],rcx
   140004faa:	ret    
   140004fab:	int3   
   140004fac:	int3   
   140004fad:	int3   
   140004fae:	int3   
   140004faf:	int3   
   140004fb0:	movsd  xmm1,QWORD PTR [rcx+0x28]
   140004fb5:	mov    ecx,DWORD PTR [rip+0x4e615]        # 0x1400535d0
   140004fbb:	xor    edx,edx
   140004fbd:	subsd  xmm1,QWORD PTR [rip+0x505eb]        # 0x1400555b0
   140004fc5:	movd   xmm0,ecx
   140004fc9:	divsd  xmm1,QWORD PTR [rip+0x505c7]        # 0x140055598
   140004fd1:	cvtdq2pd xmm0,xmm0
   140004fd5:	mulsd  xmm1,xmm0
   140004fd9:	cvttsd2si eax,xmm1
   140004fdd:	test   eax,eax
   140004fdf:	cmovs  eax,edx
   140004fe2:	cmp    eax,ecx
   140004fe4:	jl     0x140004fe9
   140004fe6:	lea    eax,[rcx-0x1]
   140004fe9:	mov    ecx,DWORD PTR [rip+0x4e5e9]        # 0x1400535d8
   140004fef:	cmp    eax,ecx
   140004ff1:	cmovl  ecx,eax
   140004ff4:	mov    DWORD PTR [rip+0x4e5de],ecx        # 0x1400535d8
   140004ffa:	ret    
   140004ffb:	int3   
   140004ffc:	int3   
   140004ffd:	int3   
   140004ffe:	int3   
   140004fff:	int3   
   140005000:	rex push rbx
   140005002:	sub    rsp,0x20
   140005006:	cmp    QWORD PTR [rcx+0x20],0x0
   14000500b:	mov    rbx,rcx
   14000500e:	je     0x1400050ad
   140005014:	movsd  xmm1,QWORD PTR [rcx+0x28]
   140005019:	mov    eax,DWORD PTR [rip+0x4e5b1]        # 0x1400535d0
   14000501f:	mov    QWORD PTR [rsp+0x30],rdi
   140005024:	subsd  xmm1,QWORD PTR [rip+0x50584]        # 0x1400555b0
   14000502c:	xor    edi,edi
   14000502e:	movd   xmm0,eax
   140005032:	divsd  xmm1,QWORD PTR [rip+0x5055e]        # 0x140055598
   14000503a:	cvtdq2pd xmm0,xmm0
   14000503e:	mulsd  xmm1,xmm0
   140005042:	cvttsd2si ecx,xmm1
   140005046:	test   ecx,ecx
   140005048:	cmovs  ecx,edi
   14000504b:	cmp    ecx,eax
   14000504d:	jl     0x140005052
   14000504f:	lea    ecx,[rax-0x1]
   140005052:	mov    eax,DWORD PTR [rip+0x4e580]        # 0x1400535d8
   140005058:	cmp    ecx,eax
   14000505a:	cmovl  eax,ecx
   14000505d:	mov    DWORD PTR [rip+0x4e575],eax        # 0x1400535d8
   140005063:	movsxd rax,ecx
   140005066:	imul   rcx,rax,0x38
   14000506a:	add    rcx,QWORD PTR [rip+0x4e557]        # 0x1400535c8
   140005071:	cmp    QWORD PTR [rcx+0x30],rbx
   140005075:	lea    rax,[rcx+0x30]
   140005079:	je     0x14000508d
   14000507b:	nop    DWORD PTR [rax+rax*1+0x0]
   140005080:	mov    rcx,QWORD PTR [rax]
   140005083:	cmp    QWORD PTR [rcx+0x30],rbx
   140005087:	lea    rax,[rcx+0x30]
   14000508b:	jne    0x140005080
   14000508d:	mov    rax,QWORD PTR [rbx+0x30]
   140005091:	dec    DWORD PTR [rip+0x4e53d]        # 0x1400535d4
   140005097:	mov    QWORD PTR [rcx+0x30],rax
   14000509b:	mov    rcx,QWORD PTR [rbx+0x20]
   14000509f:	call   0x1400047b0
   1400050a4:	mov    QWORD PTR [rbx+0x20],rdi
   1400050a8:	mov    rdi,QWORD PTR [rsp+0x30]
   1400050ad:	add    rsp,0x20
   1400050b1:	pop    rbx
   1400050b2:	ret    
   1400050b3:	int3   
   1400050b4:	int3   
   1400050b5:	int3   
   1400050b6:	int3   
   1400050b7:	int3   
   1400050b8:	int3   
   1400050b9:	int3   
   1400050ba:	int3   
   1400050bb:	int3   
   1400050bc:	int3   
   1400050bd:	int3   
   1400050be:	int3   
   1400050bf:	int3   
   1400050c0:	rex push rdi
   1400050c2:	sub    rsp,0x50
   1400050c6:	xor    edi,edi
   1400050c8:	cmp    DWORD PTR [rip+0x4e502],edi        # 0x1400535d0
   1400050ce:	jle    0x140005176
   1400050d4:	mov    QWORD PTR [rsp+0x60],rbx
   1400050d9:	mov    QWORD PTR [rsp+0x68],rsi
   1400050de:	mov    esi,edi
   1400050e0:	lea    rcx,[rip+0x38629]        # 0x14003d710
   1400050e7:	mov    edx,edi
   1400050e9:	call   QWORD PTR [rip+0x37f81]        # 0x14003d070
   1400050ef:	mov    rax,QWORD PTR [rip+0x4e4d2]        # 0x1400535c8
   1400050f6:	mov    rbx,QWORD PTR [rsi+rax*1+0x30]
   1400050fb:	test   rbx,rbx
   1400050fe:	je     0x14000515a
   140005100:	mov    rax,QWORD PTR [rbx+0x20]
   140005104:	test   rax,rax
   140005107:	je     0x14000510e
   140005109:	mov    edx,DWORD PTR [rax+0x10]
   14000510c:	jmp    0x140005111
   14000510e:	or     edx,0xffffffff
   140005111:	movsx  eax,BYTE PTR [rbx+0x1c]
   140005115:	mov    rcx,QWORD PTR [rbx+0x10]
   140005119:	movsd  xmm0,QWORD PTR [rbx+0x28]
   14000511e:	mov    r9,QWORD PTR [rbx+0x8]
   140005122:	mov    r8,QWORD PTR [rbx]
   140005125:	movsd  QWORD PTR [rsp+0x40],xmm0
   14000512b:	mov    DWORD PTR [rsp+0x38],edx
   14000512f:	mov    DWORD PTR [rsp+0x30],eax
   140005133:	mov    eax,DWORD PTR [rbx+0x18]
   140005136:	mov    DWORD PTR [rsp+0x28],eax
   14000513a:	mov    eax,DWORD PTR [rcx+0x38]
   14000513d:	lea    rcx,[rip+0x385ac]        # 0x14003d6f0
   140005144:	mov    rdx,rbx
   140005147:	mov    DWORD PTR [rsp+0x20],eax
   14000514b:	call   QWORD PTR [rip+0x37f1f]        # 0x14003d070
   140005151:	mov    rbx,QWORD PTR [rbx+0x30]
   140005155:	test   rbx,rbx
   140005158:	jne    0x140005100
   14000515a:	inc    edi
   14000515c:	add    rsi,0x38
   140005160:	cmp    edi,DWORD PTR [rip+0x4e46a]        # 0x1400535d0
   140005166:	jl     0x1400050e0
   14000516c:	mov    rsi,QWORD PTR [rsp+0x68]
   140005171:	mov    rbx,QWORD PTR [rsp+0x60]
   140005176:	add    rsp,0x50
   14000517a:	pop    rdi
   14000517b:	ret    
   14000517c:	int3   
   14000517d:	int3   
   14000517e:	int3   
   14000517f:	int3   
   140005180:	sub    rsp,0x58
   140005184:	mov    rax,QWORD PTR [rcx+0x20]
   140005188:	mov    rdx,rcx
   14000518b:	test   rax,rax
   14000518e:	je     0x140005196
   140005190:	mov    r8d,DWORD PTR [rax+0x10]
   140005194:	jmp    0x14000519a
   140005196:	or     r8d,0xffffffff
   14000519a:	movsx  eax,BYTE PTR [rcx+0x1c]
   14000519e:	mov    rcx,QWORD PTR [rcx+0x10]
   1400051a2:	movsd  xmm0,QWORD PTR [rdx+0x28]
   1400051a7:	mov    r9,QWORD PTR [rdx+0x8]
   1400051ab:	movsd  QWORD PTR [rsp+0x40],xmm0
   1400051b1:	mov    DWORD PTR [rsp+0x38],r8d
   1400051b6:	mov    r8,QWORD PTR [rdx]
   1400051b9:	mov    DWORD PTR [rsp+0x30],eax
   1400051bd:	mov    eax,DWORD PTR [rdx+0x18]
   1400051c0:	mov    DWORD PTR [rsp+0x28],eax
   1400051c4:	mov    eax,DWORD PTR [rcx+0x38]
   1400051c7:	lea    rcx,[rip+0x38522]        # 0x14003d6f0
   1400051ce:	mov    DWORD PTR [rsp+0x20],eax
   1400051d2:	call   QWORD PTR [rip+0x37e98]        # 0x14003d070
   1400051d8:	add    rsp,0x58
   1400051dc:	ret    
   1400051dd:	int3   
   1400051de:	int3   
   1400051df:	int3   
   1400051e0:	xor    eax,eax
   1400051e2:	cmp    DWORD PTR [rip+0x4e3ec],eax        # 0x1400535d4
   1400051e8:	sete   al
   1400051eb:	ret    
   1400051ec:	int3   
   1400051ed:	int3   
   1400051ee:	int3   
   1400051ef:	int3   
   1400051f0:	movsxd rax,DWORD PTR [rip+0x4e3e1]        # 0x1400535d8
   1400051f7:	dec    DWORD PTR [rip+0x4e3d7]        # 0x1400535d4
   1400051fd:	imul   rdx,rax,0x38
   140005201:	add    rdx,QWORD PTR [rip+0x4e3c0]        # 0x1400535c8
   140005208:	mov    rax,QWORD PTR [rdx+0x30]
   14000520c:	mov    rcx,QWORD PTR [rax+0x30]
   140005210:	mov    QWORD PTR [rdx+0x30],rcx
   140005214:	ret    
   140005215:	int3   
   140005216:	int3   
   140005217:	int3   
   140005218:	int3   
   140005219:	int3   
   14000521a:	int3   
   14000521b:	int3   
   14000521c:	int3   
   14000521d:	int3   
   14000521e:	int3   
   14000521f:	int3   
   140005220:	rex push rbx
   140005222:	sub    rsp,0x20
   140005226:	mov    eax,DWORD PTR [rip+0x50360]        # 0x14005558c
   14000522c:	xor    ebx,ebx
   14000522e:	lea    ecx,[rax*4+0x0]
   140005235:	mov    rax,QWORD PTR [rip+0x4e38c]        # 0x1400535c8
   14000523c:	mov    DWORD PTR [rip+0x4e392],ebx        # 0x1400535d4
   140005242:	mov    DWORD PTR [rip+0x4e390],ebx        # 0x1400535d8
   140005248:	mov    DWORD PTR [rip+0x4e382],ecx        # 0x1400535d0
   14000524e:	test   rax,rax
   140005251:	jne    0x140005268
   140005253:	imul   ecx,ecx,0x38
   140005256:	call   0x140005c30
   14000525b:	mov    ecx,DWORD PTR [rip+0x4e36f]        # 0x1400535d0
   140005261:	mov    QWORD PTR [rip+0x4e360],rax        # 0x1400535c8
   140005268:	test   ecx,ecx
   14000526a:	jle    0x14000527c
   14000526c:	add    rax,0x30
   140005270:	mov    QWORD PTR [rax],rbx
   140005273:	lea    rax,[rax+0x38]
   140005277:	dec    rcx
   14000527a:	jne    0x140005270
   14000527c:	add    rsp,0x20
   140005280:	pop    rbx
   140005281:	ret    
   140005282:	int3   
   140005283:	int3   
   140005284:	int3   
   140005285:	int3   
   140005286:	int3   
   140005287:	int3   
   140005288:	int3   
   140005289:	int3   
   14000528a:	int3   
   14000528b:	int3   
   14000528c:	int3   
   14000528d:	int3   
   14000528e:	int3   
   14000528f:	int3   
   140005290:	mov    QWORD PTR [rsp+0x8],rbx
   140005295:	push   rdi
   140005296:	sub    rsp,0x30
   14000529a:	mov    rdi,rcx
   14000529d:	mov    QWORD PTR [rcx+0x20],rdx
   1400052a1:	mov    rcx,rdx
   1400052a4:	movaps XMMWORD PTR [rsp+0x20],xmm6
   1400052a9:	mov    rbx,rdx
   1400052ac:	movaps xmm6,xmm2
   1400052af:	call   0x140004830
   1400052b4:	mov    eax,DWORD PTR [rip+0x4e316]        # 0x1400535d0
   1400052ba:	xor    edx,edx
   1400052bc:	addsd  xmm6,QWORD PTR [rbx+0x8]
   1400052c1:	movsd  QWORD PTR [rdi+0x28],xmm6
   1400052c6:	movaps xmm1,xmm6
   1400052c9:	movd   xmm0,eax
   1400052cd:	subsd  xmm1,QWORD PTR [rip+0x502db]        # 0x1400555b0
   1400052d5:	cvtdq2pd xmm0,xmm0
   1400052d9:	divsd  xmm1,QWORD PTR [rip+0x502b7]        # 0x140055598
   1400052e1:	mulsd  xmm1,xmm0
   1400052e5:	cvttsd2si ecx,xmm1
   1400052e9:	test   ecx,ecx
   1400052eb:	cmovs  ecx,edx
   1400052ee:	cmp    ecx,eax
   1400052f0:	jl     0x1400052f5
   1400052f2:	lea    ecx,[rax-0x1]
   1400052f5:	mov    eax,DWORD PTR [rip+0x4e2dd]        # 0x1400535d8
   1400052fb:	cmp    ecx,eax
   1400052fd:	cmovl  eax,ecx
   140005300:	mov    DWORD PTR [rip+0x4e2d2],eax        # 0x1400535d8
   140005306:	movsxd rax,ecx
   140005309:	imul   rdx,rax,0x38
   14000530d:	add    rdx,QWORD PTR [rip+0x4e2b4]        # 0x1400535c8
   140005314:	mov    rcx,QWORD PTR [rdx+0x30]
   140005318:	test   rcx,rcx
   14000531b:	je     0x14000534d
   14000531d:	nop    DWORD PTR [rax]
   140005320:	movsd  xmm0,QWORD PTR [rcx+0x28]
   140005325:	comisd xmm6,xmm0
   140005329:	ja     0x140005341
   14000532b:	ucomisd xmm6,xmm0
   14000532f:	jp     0x14000534d
   140005331:	jne    0x14000534d
   140005333:	mov    rax,QWORD PTR [rcx+0x20]
   140005337:	movsd  xmm0,QWORD PTR [rbx]
   14000533b:	comisd xmm0,QWORD PTR [rax]
   14000533f:	jbe    0x14000534d
   140005341:	mov    rdx,rcx
   140005344:	mov    rcx,QWORD PTR [rcx+0x30]
   140005348:	test   rcx,rcx
   14000534b:	jne    0x140005320
   14000534d:	mov    rax,QWORD PTR [rdx+0x30]
   140005351:	inc    DWORD PTR [rip+0x4e27d]        # 0x1400535d4
   140005357:	mov    rbx,QWORD PTR [rsp+0x40]
   14000535c:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140005361:	mov    QWORD PTR [rdi+0x30],rax
   140005365:	mov    QWORD PTR [rdx+0x30],rdi
   140005369:	add    rsp,0x30
   14000536d:	pop    rdi
   14000536e:	ret    
   14000536f:	int3   
   140005370:	ucomisd xmm0,xmm1
   140005374:	jp     0x140005378
   140005376:	je     0x140005380
   140005378:	ucomisd xmm1,xmm2
   14000537c:	jp     0x140005383
   14000537e:	jne    0x140005383
   140005380:	xor    eax,eax
   140005382:	ret    
   140005383:	or     eax,0xffffffff
   140005386:	comisd xmm1,xmm0
   14000538a:	lea    ecx,[rax+0x2]
   14000538d:	jbe    0x140005397
   14000538f:	comisd xmm2,xmm1
   140005393:	cmova  eax,ecx
   140005396:	ret    
   140005397:	comisd xmm1,xmm2
   14000539b:	cmova  eax,ecx
   14000539e:	ret    
   14000539f:	int3   
   1400053a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400053a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400053aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400053af:	push   rdi
   1400053b0:	sub    rsp,0x50
   1400053b4:	mov    rbp,r8
   1400053b7:	lea    r8,[rsp+0x38]
   1400053bc:	mov    rsi,r9
   1400053bf:	mov    rbx,rdx
   1400053c2:	mov    rdi,rcx
   1400053c5:	call   0x140005980
   1400053ca:	mov    r11d,DWORD PTR [rsp+0x40]
   1400053cf:	test   r11d,r11d
   1400053d2:	jg     0x140005535
   1400053d8:	jns    0x140005416
   1400053da:	lea    r8,[rsp+0x38]
   1400053df:	mov    rdx,rdi
   1400053e2:	mov    rcx,rbx
   1400053e5:	call   0x140005980
   1400053ea:	mov    r8d,DWORD PTR [rsp+0x40]
   1400053ef:	test   r8d,r8d
   1400053f2:	jg     0x140005535
   1400053f8:	jns    0x140005401
   1400053fa:	mov    eax,0x3
   1400053ff:	jmp    0x140005471
   140005401:	mov    r8d,DWORD PTR [rsp+0x38]
   140005406:	test   r8d,r8d
   140005409:	jns    0x14000540e
   14000540b:	neg    r8d
   14000540e:	mov    rdx,rdi
   140005411:	mov    rcx,rbx
   140005414:	jmp    0x14000546c
   140005416:	mov    r8d,DWORD PTR [rsp+0x38]
   14000541b:	cmp    r8d,DWORD PTR [rsp+0x3c]
   140005420:	jne    0x14000545e
   140005422:	mov    r8d,0x1
   140005428:	mov    rdx,rbx
   14000542b:	mov    rcx,rdi
   14000542e:	call   0x140005890
   140005433:	xor    r8d,r8d
   140005436:	mov    rdx,rbx
   140005439:	mov    rcx,rdi
   14000543c:	mov    r9d,eax
   14000543f:	call   0x140005890
   140005444:	mov    rdx,rbx
   140005447:	mov    rcx,rdi
   14000544a:	cmp    eax,r9d
   14000544d:	jg     0x140005455
   14000544f:	mov    r8d,0x1
   140005455:	call   0x140005890
   14000545a:	add    eax,eax
   14000545c:	jmp    0x140005471
   14000545e:	test   r8d,r8d
   140005461:	jns    0x140005466
   140005463:	neg    r8d
   140005466:	mov    rdx,rbx
   140005469:	mov    rcx,rdi
   14000546c:	call   0x140005890
   140005471:	lea    r9,[rsp+0x38]
   140005476:	lea    r8,[rsp+0x30]
   14000547b:	mov    rdx,rbx
   14000547e:	mov    rcx,rdi
   140005481:	mov    DWORD PTR [rsp+0x20],eax
   140005485:	call   0x140005550
   14000548a:	test   eax,eax
   14000548c:	je     0x140005535
   140005492:	movsxd rax,DWORD PTR [rsi+0x8]
   140005496:	cmp    eax,0x2710
   14000549b:	jl     0x1400054c0
   14000549d:	call   QWORD PTR [rip+0x37e2d]        # 0x14003d2d0
   1400054a3:	lea    rdx,[rip+0x3826e]        # 0x14003d718
   1400054aa:	lea    rcx,[rax+0x60]
   1400054ae:	call   QWORD PTR [rip+0x37e0c]        # 0x14003d2c0
   1400054b4:	mov    ecx,0x1
   1400054b9:	call   QWORD PTR [rip+0x37bb9]        # 0x14003d078
   1400054bf:	int3   
   1400054c0:	movsd  xmm0,QWORD PTR [rsp+0x30]
   1400054c6:	lea    rcx,[rax+rax*2]
   1400054ca:	add    rcx,rcx
   1400054cd:	mov    QWORD PTR [rbp+rcx*8+0x0],rdi
   1400054d2:	movsxd rax,DWORD PTR [rsi+0x8]
   1400054d6:	lea    rcx,[rax+rax*2]
   1400054da:	add    rcx,rcx
   1400054dd:	mov    QWORD PTR [rbp+rcx*8+0x8],rbx
   1400054e2:	movsxd rax,DWORD PTR [rsi+0x8]
   1400054e6:	lea    rcx,[rax+rax*2]
   1400054ea:	mov    rax,QWORD PTR [rdi+0x10]
   1400054ee:	add    rcx,rcx
   1400054f1:	mov    QWORD PTR [rbp+rcx*8+0x10],rax
   1400054f6:	movsxd rax,DWORD PTR [rsi+0x8]
   1400054fa:	lea    rcx,[rax+rax*2]
   1400054fe:	mov    rax,QWORD PTR [rbx+0x10]
   140005502:	add    rcx,rcx
   140005505:	mov    QWORD PTR [rbp+rcx*8+0x18],rax
   14000550a:	movsxd rax,DWORD PTR [rsi+0x8]
   14000550e:	lea    rcx,[rax+rax*2]
   140005512:	add    rcx,rcx
   140005515:	movsd  QWORD PTR [rbp+rcx*8+0x20],xmm0
   14000551b:	movsxd rax,DWORD PTR [rsi+0x8]
   14000551f:	movsd  xmm0,QWORD PTR [rsp+0x38]
   140005525:	lea    rcx,[rax+rax*2]
   140005529:	add    rcx,rcx
   14000552c:	movsd  QWORD PTR [rbp+rcx*8+0x28],xmm0
   140005532:	inc    DWORD PTR [rsi+0x8]
   140005535:	mov    rbx,QWORD PTR [rsp+0x60]
   14000553a:	mov    rbp,QWORD PTR [rsp+0x68]
   14000553f:	mov    rsi,QWORD PTR [rsp+0x70]
   140005544:	add    rsp,0x50
   140005548:	pop    rdi
   140005549:	ret    
   14000554a:	int3   
   14000554b:	int3   
   14000554c:	int3   
   14000554d:	int3   
   14000554e:	int3   
   14000554f:	int3   
   140005550:	mov    QWORD PTR [rsp+0x8],rbx
   140005555:	push   rbp
   140005556:	lea    rbp,[rsp-0x4f]
   14000555b:	sub    rsp,0xa0
   140005562:	mov    r10,rcx
   140005565:	mov    ecx,DWORD PTR [rbp+0x7f]
   140005568:	mov    rbx,r8
   14000556b:	mov    r11,rdx
   14000556e:	test   ecx,ecx
   140005570:	jg     0x140005585
   140005572:	xor    eax,eax
   140005574:	mov    rbx,QWORD PTR [rsp+0xb0]
   14000557c:	add    rsp,0xa0
   140005583:	pop    rbp
   140005584:	ret    
   140005585:	movups xmm0,XMMWORD PTR [r10]
   140005589:	mov    rax,QWORD PTR [r10+0x10]
   14000558d:	movups XMMWORD PTR [rbp-0x21],xmm0
   140005591:	cmp    r10,QWORD PTR [rax+0x8]
   140005595:	jne    0x14000559c
   140005597:	mov    rdx,QWORD PTR [rax]
   14000559a:	jmp    0x1400055a0
   14000559c:	lea    rdx,[r10+0x20]
   1400055a0:	movups xmm0,XMMWORD PTR [rdx]
   1400055a3:	mov    rax,QWORD PTR [r11+0x10]
   1400055a7:	movups XMMWORD PTR [rbp-0x11],xmm0
   1400055ab:	movups xmm0,XMMWORD PTR [r11]
   1400055af:	movups XMMWORD PTR [rbp-0x1],xmm0
   1400055b3:	cmp    r11,QWORD PTR [rax+0x8]
   1400055b7:	jne    0x1400055be
   1400055b9:	mov    rax,QWORD PTR [rax]
   1400055bc:	jmp    0x1400055c2
   1400055be:	lea    rax,[r11+0x20]
   1400055c2:	movups xmm0,XMMWORD PTR [rax]
   1400055c5:	movaps XMMWORD PTR [rsp+0x90],xmm6
   1400055cd:	movaps XMMWORD PTR [rsp+0x80],xmm7
   1400055d5:	movaps XMMWORD PTR [rsp+0x70],xmm8
   1400055db:	movups XMMWORD PTR [rbp+0xf],xmm0
   1400055df:	dec    ecx
   1400055e1:	je     0x1400057fa
   1400055e7:	dec    ecx
   1400055e9:	je     0x1400056f5
   1400055ef:	dec    ecx
   1400055f1:	jne    0x140005857
   1400055f7:	movsd  xmm6,QWORD PTR [rbp-0x21]
   1400055fc:	movsd  xmm8,QWORD PTR [rbp-0x11]
   140005602:	ucomisd xmm6,xmm8
   140005607:	jp     0x140005640
   140005609:	jne    0x140005640
   14000560b:	movsd  xmm3,QWORD PTR [rbp+0x7]
   140005610:	movsd  xmm0,QWORD PTR [rbp-0x1]
   140005615:	movsd  QWORD PTR [r8],xmm6
   14000561a:	subsd  xmm3,QWORD PTR [rbp+0x17]
   14000561f:	subsd  xmm0,QWORD PTR [rbp+0xf]
   140005624:	subsd  xmm6,QWORD PTR [rbp+0xf]
   140005629:	divsd  xmm3,xmm0
   14000562d:	mulsd  xmm3,xmm6
   140005631:	addsd  xmm3,QWORD PTR [rbp+0x17]
   140005636:	movsd  QWORD PTR [r9],xmm3
   14000563b:	jmp    0x140005857
   140005640:	movsd  xmm7,QWORD PTR [rbp-0x1]
   140005645:	movsd  xmm1,QWORD PTR [rbp+0xf]
   14000564a:	ucomisd xmm7,xmm1
   14000564e:	jp     0x14000567d
   140005650:	jne    0x14000567d
   140005652:	movsd  xmm1,QWORD PTR [rbp-0x19]
   140005657:	subsd  xmm6,xmm8
   14000565c:	movsd  QWORD PTR [r8],xmm7
   140005661:	subsd  xmm1,QWORD PTR [rbp-0x9]
   140005666:	subsd  xmm7,xmm8
   14000566b:	divsd  xmm1,xmm6
   14000566f:	mulsd  xmm1,xmm7
   140005673:	addsd  xmm1,QWORD PTR [rbp-0x9]
   140005678:	jmp    0x140005852
   14000567d:	movsd  xmm5,QWORD PTR [rbp+0x7]
   140005682:	movsd  xmm4,QWORD PTR [rbp-0x19]
   140005687:	movaps xmm0,xmm7
   14000568a:	subsd  xmm0,xmm1
   14000568e:	movaps xmm2,xmm4
   140005691:	movaps xmm3,xmm5
   140005694:	subsd  xmm3,QWORD PTR [rbp+0x17]
   140005699:	subsd  xmm2,QWORD PTR [rbp-0x9]
   14000569e:	divsd  xmm3,xmm0
   1400056a2:	movaps xmm0,xmm6
   1400056a5:	subsd  xmm0,xmm8
   1400056aa:	divsd  xmm2,xmm0
   1400056ae:	movaps xmm1,xmm3
   1400056b1:	mulsd  xmm1,xmm7
   1400056b5:	movaps xmm0,xmm2
   1400056b8:	mulsd  xmm0,xmm6
   1400056bc:	subsd  xmm5,xmm1
   1400056c0:	movaps xmm1,xmm3
   1400056c3:	subsd  xmm4,xmm0
   1400056c7:	subsd  xmm1,xmm2
   1400056cb:	movaps xmm0,xmm4
   1400056ce:	subsd  xmm0,xmm5
   1400056d2:	mulsd  xmm4,xmm3
   1400056d6:	mulsd  xmm5,xmm2
   1400056da:	divsd  xmm0,xmm1
   1400056de:	subsd  xmm4,xmm5
   1400056e2:	divsd  xmm4,xmm1
   1400056e6:	movsd  QWORD PTR [r8],xmm0
   1400056eb:	movsd  QWORD PTR [r9],xmm4
   1400056f0:	jmp    0x140005857
   1400056f5:	xor    r8d,r8d
   1400056f8:	mov    rdx,r11
   1400056fb:	mov    rcx,r10
   1400056fe:	call   0x140005890
   140005703:	mov    r8d,0x1
   140005709:	cmp    eax,0xffffffff
   14000570c:	jne    0x140005751
   14000570e:	movups xmm0,XMMWORD PTR [rbp-0x1]
   140005712:	mov    rdx,r10
   140005715:	mov    rcx,r11
   140005718:	movups XMMWORD PTR [rbp-0x31],xmm0
   14000571c:	call   0x140005890
   140005721:	cmp    eax,0xffffffff
   140005724:	jne    0x140005748
   140005726:	xor    r8d,r8d
   140005729:	mov    rdx,r10
   14000572c:	mov    rcx,r11
   14000572f:	call   0x140005890
   140005734:	lea    rcx,[rbp-0x11]
   140005738:	lea    rdx,[rbp-0x21]
   14000573c:	cmp    eax,0xffffffff
   14000573f:	cmovne rcx,rdx
   140005743:	movups xmm0,XMMWORD PTR [rcx]
   140005746:	jmp    0x1400057c7
   140005748:	lea    rcx,[rbp+0xf]
   14000574c:	movups xmm0,XMMWORD PTR [rcx]
   14000574f:	jmp    0x1400057c7
   140005751:	mov    rdx,r11
   140005754:	mov    rcx,r10
   140005757:	call   0x140005890
   14000575c:	xor    r8d,r8d
   14000575f:	cmp    eax,0xffffffff
   140005762:	jne    0x1400057a4
   140005764:	movups xmm0,XMMWORD PTR [rbp+0xf]
   140005768:	mov    rdx,r11
   14000576b:	mov    rcx,r10
   14000576e:	movups XMMWORD PTR [rbp-0x31],xmm0
   140005772:	call   0x140005890
   140005777:	cmp    eax,0xffffffff
   14000577a:	jne    0x14000579b
   14000577c:	mov    rdx,r10
   14000577f:	mov    rcx,r11
   140005782:	call   0x140005890
   140005787:	lea    rcx,[rbp-0x11]
   14000578b:	lea    rdx,[rbp-0x21]
   14000578f:	cmp    eax,0xffffffff
   140005792:	cmovne rcx,rdx
   140005796:	movups xmm0,XMMWORD PTR [rcx]
   140005799:	jmp    0x1400057c7
   14000579b:	lea    rcx,[rbp-0x1]
   14000579f:	movups xmm0,XMMWORD PTR [rcx]
   1400057a2:	jmp    0x1400057c7
   1400057a4:	mov    rdx,r10
   1400057a7:	mov    rcx,r11
   1400057aa:	call   0x140005890
   1400057af:	cmp    eax,0xffffffff
   1400057b2:	je     0x1400057bb
   1400057b4:	xor    eax,eax
   1400057b6:	jmp    0x14000585c
   1400057bb:	movups xmm0,XMMWORD PTR [rbp-0x21]
   1400057bf:	movups XMMWORD PTR [rbp-0x31],xmm0
   1400057c3:	movups xmm0,XMMWORD PTR [rbp-0x11]
   1400057c7:	movups XMMWORD PTR [rbp+0xf],xmm0
   1400057cb:	movsd  xmm0,QWORD PTR [rbp+0xf]
   1400057d0:	addsd  xmm0,QWORD PTR [rbp-0x31]
   1400057d5:	mulsd  xmm0,QWORD PTR [rip+0x37bfb]        # 0x14003d3d8
   1400057dd:	movsd  QWORD PTR [rbx],xmm0
   1400057e1:	movsd  xmm0,QWORD PTR [rbp+0x17]
   1400057e6:	addsd  xmm0,QWORD PTR [rbp-0x29]
   1400057eb:	mulsd  xmm0,QWORD PTR [rip+0x37be5]        # 0x14003d3d8
   1400057f3:	movsd  QWORD PTR [r9],xmm0
   1400057f8:	jmp    0x140005857
   1400057fa:	movsd  xmm2,QWORD PTR [rbp-0x19]
   1400057ff:	movsd  xmm4,QWORD PTR [rbp+0x7]
   140005804:	movsd  xmm0,QWORD PTR [rbp-0x21]
   140005809:	subsd  xmm0,QWORD PTR [rbp-0x11]
   14000580e:	movsd  xmm5,QWORD PTR [rbp-0x1]
   140005813:	movaps xmm3,xmm4
   140005816:	subsd  xmm3,xmm2
   14000581a:	subsd  xmm2,QWORD PTR [rbp-0x9]
   14000581f:	mulsd  xmm3,xmm0
   140005823:	movaps xmm0,xmm5
   140005826:	subsd  xmm0,QWORD PTR [rbp-0x21]
   14000582b:	mulsd  xmm2,xmm0
   14000582f:	ucomisd xmm3,xmm2
   140005833:	jp     0x140005843
   140005835:	jne    0x140005843
   140005837:	movsd  QWORD PTR [r8],xmm5
   14000583c:	movsd  QWORD PTR [r9],xmm4
   140005841:	jmp    0x140005857
   140005843:	movsd  xmm0,QWORD PTR [rbp+0xf]
   140005848:	movsd  xmm1,QWORD PTR [rbp+0x17]
   14000584d:	movsd  QWORD PTR [r8],xmm0
   140005852:	movsd  QWORD PTR [r9],xmm1
   140005857:	mov    eax,0x1
   14000585c:	movaps xmm7,XMMWORD PTR [rsp+0x80]
   140005864:	movaps xmm6,XMMWORD PTR [rsp+0x90]
   14000586c:	movaps xmm8,XMMWORD PTR [rsp+0x70]
   140005872:	mov    rbx,QWORD PTR [rsp+0xb0]
   14000587a:	add    rsp,0xa0
   140005881:	pop    rbp
   140005882:	ret    
   140005883:	int3   
   140005884:	int3   
   140005885:	int3   
   140005886:	int3   
   140005887:	int3   
   140005888:	int3   
   140005889:	int3   
   14000588a:	int3   
   14000588b:	int3   
   14000588c:	int3   
   14000588d:	int3   
   14000588e:	int3   
   14000588f:	int3   
   140005890:	sub    rsp,0x38
   140005894:	movups xmm0,XMMWORD PTR [rcx]
   140005897:	mov    rax,QWORD PTR [rcx+0x10]
   14000589b:	movups XMMWORD PTR [rsp+0x10],xmm0
   1400058a0:	cmp    rcx,QWORD PTR [rax+0x8]
   1400058a4:	jne    0x1400058ab
   1400058a6:	mov    rax,QWORD PTR [rax]
   1400058a9:	jmp    0x1400058af
   1400058ab:	lea    rax,[rcx+0x20]
   1400058af:	movups xmm0,XMMWORD PTR [rax]
   1400058b2:	movups XMMWORD PTR [rsp+0x20],xmm0
   1400058b7:	test   r8d,r8d
   1400058ba:	je     0x1400058cf
   1400058bc:	mov    rax,QWORD PTR [rdx+0x10]
   1400058c0:	cmp    rdx,QWORD PTR [rax+0x8]
   1400058c4:	jne    0x1400058cb
   1400058c6:	mov    rdx,QWORD PTR [rax]
   1400058c9:	jmp    0x1400058cf
   1400058cb:	add    rdx,0x20
   1400058cf:	movups xmm0,XMMWORD PTR [rdx]
   1400058d2:	movsd  xmm1,QWORD PTR [rsp+0x10]
   1400058d8:	movsd  xmm2,QWORD PTR [rsp+0x20]
   1400058de:	ucomisd xmm1,xmm2
   1400058e2:	movups XMMWORD PTR [rsp],xmm0
   1400058e6:	jp     0x140005943
   1400058e8:	jne    0x140005943
   1400058ea:	ucomisd xmm1,QWORD PTR [rsp]
   1400058ef:	jp     0x14000593c
   1400058f1:	jne    0x14000593c
   1400058f3:	movsd  xmm2,QWORD PTR [rsp+0x18]
   1400058f9:	movsd  xmm0,QWORD PTR [rsp+0x8]
   1400058ff:	mov    ecx,0x1
   140005904:	ucomisd xmm2,xmm0
   140005908:	jp     0x14000590c
   14000590a:	je     0x140005935
   14000590c:	movsd  xmm1,QWORD PTR [rsp+0x28]
   140005912:	ucomisd xmm0,xmm1
   140005916:	jp     0x14000591a
   140005918:	je     0x140005935
   14000591a:	or     eax,0xffffffff
   14000591d:	comisd xmm0,xmm2
   140005921:	jbe    0x140005929
   140005923:	comisd xmm1,xmm0
   140005927:	jmp    0x14000592d
   140005929:	comisd xmm0,xmm1
   14000592d:	cmova  eax,ecx
   140005930:	cmp    eax,0xffffffff
   140005933:	je     0x14000593c
   140005935:	mov    eax,ecx
   140005937:	add    rsp,0x38
   14000593b:	ret    
   14000593c:	xor    eax,eax
   14000593e:	add    rsp,0x38
   140005942:	ret    
   140005943:	movsd  xmm0,QWORD PTR [rsp]
   140005948:	ucomisd xmm1,xmm0
   14000594c:	jp     0x140005950
   14000594e:	je     0x14000593c
   140005950:	ucomisd xmm0,xmm2
   140005954:	jp     0x140005958
   140005956:	je     0x14000593c
   140005958:	or     eax,0xffffffff
   14000595b:	comisd xmm0,xmm1
   14000595f:	lea    ecx,[rax+0x2]
   140005962:	jbe    0x140005970
   140005964:	comisd xmm2,xmm0
   140005968:	cmova  eax,ecx
   14000596b:	add    rsp,0x38
   14000596f:	ret    
   140005970:	comisd xmm0,xmm2
   140005974:	cmova  eax,ecx
   140005977:	add    rsp,0x38
   14000597b:	ret    
   14000597c:	int3   
   14000597d:	int3   
   14000597e:	int3   
   14000597f:	int3   
   140005980:	sub    rsp,0x18
   140005984:	mov    rax,QWORD PTR [rcx+0x10]
   140005988:	movsd  xmm0,QWORD PTR [rcx]
   14000598c:	movaps XMMWORD PTR [rsp],xmm6
   140005990:	movsd  xmm6,QWORD PTR [rcx+0x8]
   140005995:	mov    r10,QWORD PTR [rax+0x8]
   140005999:	cmp    rcx,r10
   14000599c:	jne    0x1400059a3
   14000599e:	mov    r9,QWORD PTR [rax]
   1400059a1:	jmp    0x1400059a7
   1400059a3:	lea    r9,[rcx+0x20]
   1400059a7:	movsd  xmm3,QWORD PTR [r9]
   1400059ac:	subsd  xmm3,xmm0
   1400059b0:	cmp    rcx,r10
   1400059b3:	jne    0x1400059ba
   1400059b5:	mov    rcx,QWORD PTR [rax]
   1400059b8:	jmp    0x1400059be
   1400059ba:	add    rcx,0x20
   1400059be:	mov    rax,QWORD PTR [rdx+0x10]
   1400059c2:	movsd  xmm5,QWORD PTR [rcx+0x8]
   1400059c7:	movsd  xmm4,QWORD PTR [rdx]
   1400059cb:	movsd  xmm1,QWORD PTR [rdx+0x8]
   1400059d0:	subsd  xmm5,xmm6
   1400059d4:	subsd  xmm4,xmm0
   1400059d8:	mov    r9,QWORD PTR [rax+0x8]
   1400059dc:	subsd  xmm1,xmm6
   1400059e0:	cmp    rdx,r9
   1400059e3:	jne    0x1400059ea
   1400059e5:	mov    rcx,QWORD PTR [rax]
   1400059e8:	jmp    0x1400059ee
   1400059ea:	lea    rcx,[rdx+0x20]
   1400059ee:	movsd  xmm2,QWORD PTR [rcx]
   1400059f2:	subsd  xmm2,xmm0
   1400059f6:	cmp    rdx,r9
   1400059f9:	jne    0x140005a00
   1400059fb:	mov    rdx,QWORD PTR [rax]
   1400059fe:	jmp    0x140005a04
   140005a00:	add    rdx,0x20
   140005a04:	movsd  xmm0,QWORD PTR [rdx+0x8]
   140005a09:	mulsd  xmm4,xmm5
   140005a0d:	mulsd  xmm1,xmm3
   140005a11:	xor    eax,eax
   140005a13:	mov    edx,0x1
   140005a18:	subsd  xmm0,xmm6
   140005a1c:	subsd  xmm1,xmm4
   140005a20:	xorps  xmm4,xmm4
   140005a23:	ucomisd xmm1,xmm4
   140005a27:	jp     0x140005a2f
   140005a29:	jne    0x140005a2f
   140005a2b:	mov    ecx,eax
   140005a2d:	jmp    0x140005a39
   140005a2f:	or     ecx,0xffffffff
   140005a32:	comisd xmm1,xmm4
   140005a36:	cmova  ecx,edx
   140005a39:	mulsd  xmm0,xmm3
   140005a3d:	mulsd  xmm2,xmm5
   140005a41:	mov    DWORD PTR [r8],ecx
   140005a44:	subsd  xmm0,xmm2
   140005a48:	ucomisd xmm0,xmm4
   140005a4c:	jp     0x140005a50
   140005a4e:	je     0x140005a5a
   140005a50:	or     eax,0xffffffff
   140005a53:	comisd xmm0,xmm4
   140005a57:	cmova  eax,edx
   140005a5a:	movaps xmm6,XMMWORD PTR [rsp]
   140005a5e:	mov    DWORD PTR [r8+0x4],eax
   140005a62:	imul   eax,ecx
   140005a65:	mov    DWORD PTR [r8+0x8],eax
   140005a69:	add    rsp,0x18
   140005a6d:	ret    
   140005a6e:	int3   
   140005a6f:	int3   
   140005a70:	mov    QWORD PTR [rsp+0x10],rsi
   140005a75:	push   rdi
   140005a76:	sub    rsp,0x20
   140005a7a:	movsxd r8,edx
   140005a7d:	mov    rsi,rcx
   140005a80:	mov    QWORD PTR [rcx],0x0
   140005a87:	test   r8b,0x7
   140005a8b:	jne    0x140005a92
   140005a8d:	mov    r9,r8
   140005a90:	jmp    0x140005ad1
   140005a92:	xor    edx,edx
   140005a94:	mov    r9d,0x8
   140005a9a:	mov    r10,r8
   140005a9d:	mov    eax,r9d
   140005aa0:	div    r8
   140005aa3:	test   rdx,rdx
   140005aa6:	je     0x140005ad1
   140005aa8:	mov    eax,r9d
   140005aab:	cmp    r8d,eax
   140005aae:	je     0x140005abf
   140005ab0:	jge    0x140005ab7
   140005ab2:	sub    eax,r8d
   140005ab5:	jmp    0x140005aba
   140005ab7:	sub    r8d,eax
   140005aba:	cmp    r8d,eax
   140005abd:	jne    0x140005ab0
   140005abf:	movsxd rcx,eax
   140005ac2:	mov    rax,r9
   140005ac5:	xor    edx,edx
   140005ac7:	div    rcx
   140005aca:	mov    r9,rax
   140005acd:	imul   r9,r10
   140005ad1:	mov    rdi,QWORD PTR [rsi+0x8]
   140005ad5:	mov    DWORD PTR [rsi+0x10],r9d
   140005ad9:	test   rdi,rdi
   140005adc:	je     0x140005b06
   140005ade:	mov    QWORD PTR [rsp+0x30],rbx
   140005ae3:	mov    rcx,QWORD PTR [rdi+0x8]
   140005ae7:	mov    rbx,QWORD PTR [rdi]
   140005aea:	call   QWORD PTR [rip+0x377b0]        # 0x14003d2a0
   140005af0:	mov    rcx,rdi
   140005af3:	call   QWORD PTR [rip+0x377a7]        # 0x14003d2a0
   140005af9:	mov    rdi,rbx
   140005afc:	test   rbx,rbx
   140005aff:	jne    0x140005ae3
   140005b01:	mov    rbx,QWORD PTR [rsp+0x30]
   140005b06:	mov    QWORD PTR [rsi+0x8],0x0
   140005b0e:	mov    rsi,QWORD PTR [rsp+0x38]
   140005b13:	add    rsp,0x20
   140005b17:	pop    rdi
   140005b18:	ret    
   140005b19:	int3   
   140005b1a:	int3   
   140005b1b:	int3   
   140005b1c:	int3   
   140005b1d:	int3   
   140005b1e:	int3   
   140005b1f:	int3   
   140005b20:	cmp    edx,ecx
   140005b22:	je     0x140005b32
   140005b24:	cmp    ecx,edx
   140005b26:	jge    0x140005b2c
   140005b28:	sub    edx,ecx
   140005b2a:	jmp    0x140005b2e
   140005b2c:	sub    ecx,edx
   140005b2e:	cmp    ecx,edx
   140005b30:	jne    0x140005b26
   140005b32:	mov    eax,edx
   140005b34:	ret    
   140005b35:	int3   
   140005b36:	int3   
   140005b37:	int3   
   140005b38:	int3   
   140005b39:	int3   
   140005b3a:	int3   
   140005b3b:	int3   
   140005b3c:	int3   
   140005b3d:	int3   
   140005b3e:	int3   
   140005b3f:	int3   
   140005b40:	mov    QWORD PTR [rsp+0x8],rbx
   140005b45:	mov    QWORD PTR [rsp+0x10],rsi
   140005b4a:	push   rdi
   140005b4b:	sub    rsp,0x20
   140005b4f:	cmp    QWORD PTR [rcx],0x0
   140005b53:	mov    rbx,rcx
   140005b56:	jne    0x140005c07
   140005b5c:	mov    esi,DWORD PTR [rcx+0x10]
   140005b5f:	mov    ecx,0x10
   140005b64:	call   QWORD PTR [rip+0x375fe]        # 0x14003d168
   140005b6a:	mov    rdi,rax
   140005b6d:	test   rax,rax
   140005b70:	jne    0x140005b93
   140005b72:	call   QWORD PTR [rip+0x37758]        # 0x14003d2d0
   140005b78:	lea    rdx,[rip+0x37bc9]        # 0x14003d748
   140005b7f:	lea    rcx,[rax+0x60]
   140005b83:	call   QWORD PTR [rip+0x37737]        # 0x14003d2c0
   140005b89:	lea    ecx,[rdi+0x1]
   140005b8c:	call   QWORD PTR [rip+0x374e6]        # 0x14003d078
   140005b92:	int3   
   140005b93:	mov    ecx,DWORD PTR [rip+0x4f9f3]        # 0x14005558c
   140005b99:	imul   ecx,esi
   140005b9c:	call   QWORD PTR [rip+0x375c6]        # 0x14003d168
   140005ba2:	mov    r9,rax
   140005ba5:	test   rax,rax
   140005ba8:	jne    0x140005bcd
   140005baa:	call   QWORD PTR [rip+0x37720]        # 0x14003d2d0
   140005bb0:	lea    rdx,[rip+0x37b91]        # 0x14003d748
   140005bb7:	lea    rcx,[rax+0x60]
   140005bbb:	call   QWORD PTR [rip+0x376ff]        # 0x14003d2c0
   140005bc1:	mov    ecx,0x1
   140005bc6:	call   QWORD PTR [rip+0x374ac]        # 0x14003d078
   140005bcc:	int3   
   140005bcd:	xor    edx,edx
   140005bcf:	mov    QWORD PTR [rdi+0x8],rax
   140005bd3:	cmp    DWORD PTR [rip+0x4f9b3],edx        # 0x14005558c
   140005bd9:	jle    0x140005bfc
   140005bdb:	mov    r8d,edx
   140005bde:	xchg   ax,ax
   140005be0:	mov    rax,QWORD PTR [rbx]
   140005be3:	movsxd rcx,r8d
   140005be6:	inc    edx
   140005be8:	add    rcx,r9
   140005beb:	add    r8d,esi
   140005bee:	mov    QWORD PTR [rcx],rax
   140005bf1:	mov    QWORD PTR [rbx],rcx
   140005bf4:	cmp    edx,DWORD PTR [rip+0x4f992]        # 0x14005558c
   140005bfa:	jl     0x140005be0
   140005bfc:	mov    rax,QWORD PTR [rbx+0x8]
   140005c00:	mov    QWORD PTR [rdi],rax
   140005c03:	mov    QWORD PTR [rbx+0x8],rdi
   140005c07:	mov    rax,QWORD PTR [rbx]
   140005c0a:	mov    rsi,QWORD PTR [rsp+0x38]
   140005c0f:	mov    rcx,QWORD PTR [rax]
   140005c12:	mov    QWORD PTR [rbx],rcx
   140005c15:	mov    rbx,QWORD PTR [rsp+0x30]
   140005c1a:	add    rsp,0x20
   140005c1e:	pop    rdi
   140005c1f:	ret    
   140005c20:	mov    rax,QWORD PTR [rdx]
   140005c23:	mov    QWORD PTR [rcx],rax
   140005c26:	mov    QWORD PTR [rdx],rcx
   140005c29:	ret    
   140005c2a:	int3   
   140005c2b:	int3   
   140005c2c:	int3   
   140005c2d:	int3   
   140005c2e:	int3   
   140005c2f:	int3   
   140005c30:	sub    rsp,0x28
   140005c34:	mov    ecx,ecx
   140005c36:	call   QWORD PTR [rip+0x3752c]        # 0x14003d168
   140005c3c:	test   rax,rax
   140005c3f:	jne    0x140005c64
   140005c41:	call   QWORD PTR [rip+0x37689]        # 0x14003d2d0
   140005c47:	lea    rdx,[rip+0x37afa]        # 0x14003d748
   140005c4e:	lea    rcx,[rax+0x60]
   140005c52:	call   QWORD PTR [rip+0x37668]        # 0x14003d2c0
   140005c58:	mov    ecx,0x1
   140005c5d:	call   QWORD PTR [rip+0x37415]        # 0x14003d078
   140005c63:	int3   
   140005c64:	add    rsp,0x28
   140005c68:	ret    
   140005c69:	int3   
   140005c6a:	int3   
   140005c6b:	int3   
   140005c6c:	int3   
   140005c6d:	int3   
   140005c6e:	int3   
   140005c6f:	int3   
   140005c70:	mov    QWORD PTR [rsp+0x8],rbx
   140005c75:	mov    DWORD PTR [rsp+0x20],r9d
   140005c7a:	mov    QWORD PTR [rsp+0x18],r8
   140005c7f:	mov    QWORD PTR [rsp+0x10],rdx
   140005c84:	push   rbp
   140005c85:	push   rsi
   140005c86:	push   rdi
   140005c87:	push   r12
   140005c89:	push   r13
   140005c8b:	push   r14
   140005c8d:	push   r15
   140005c8f:	sub    rsp,0x80
   140005c96:	movsxd r15,r9d
   140005c99:	xor    r12d,r12d
   140005c9c:	mov    rdi,rcx
   140005c9f:	mov    eax,r15d
   140005ca2:	mov    rbp,r8
   140005ca5:	mov    QWORD PTR [rsp+0x70],r12
   140005caa:	mov    r13d,r12d
   140005cad:	mov    DWORD PTR [rsp+0x20],r12d
   140005cb2:	imul   eax,r15d
   140005cb6:	movsxd rsi,eax
   140005cb9:	mov    QWORD PTR [rsp+0x78],rsi
   140005cbe:	lea    rcx,[rsi*8+0x0]
   140005cc6:	call   QWORD PTR [rip+0x3749c]        # 0x14003d168
   140005ccc:	lea    r14,[r15*8+0x0]
   140005cd4:	mov    rbx,r15
   140005cd7:	mov    rcx,r14
   140005cda:	mov    QWORD PTR [rsp+0x50],rax
   140005cdf:	call   QWORD PTR [rip+0x37483]        # 0x14003d168
   140005ce5:	mov    QWORD PTR [rsp+0x58],rax
   140005cea:	test   r15d,r15d
   140005ced:	jle    0x140005d01
   140005cef:	mov    r8,rbx
   140005cf2:	mov    rdx,rbp
   140005cf5:	mov    rcx,rax
   140005cf8:	shl    r8,0x3
   140005cfc:	call   0x14003b8cc
   140005d01:	test   rsi,rsi
   140005d04:	jle    0x140005d1a
   140005d06:	mov    rcx,QWORD PTR [rsp+0x50]
   140005d0b:	mov    r8,rsi
   140005d0e:	mov    rdx,rdi
   140005d11:	shl    r8,0x3
   140005d15:	call   0x14003b8cc
   140005d1a:	movsd  xmm4,QWORD PTR [rip+0x3783e]        # 0x14003d560
   140005d22:	movsd  xmm5,QWORD PTR [rip+0x37a4e]        # 0x14003d778
   140005d2a:	lea    eax,[r15-0x1]
   140005d2e:	mov    edx,r12d
   140005d31:	movsxd r11,eax
   140005d34:	mov    rsi,r12
   140005d37:	mov    QWORD PTR [rsp+0x48],r11
   140005d3c:	mov    DWORD PTR [rsp+0x24],edx
   140005d40:	mov    rcx,0xfffffffffffffff8
   140005d47:	test   eax,eax
   140005d49:	jle    0x1400061e4
   140005d4f:	mov    eax,r15d
   140005d52:	sub    rcx,rbp
   140005d55:	mov    QWORD PTR [rsp+0x30],r12
   140005d5a:	mov    QWORD PTR [rsp+0x28],rbp
   140005d5f:	mov    r11,rbx
   140005d62:	mov    QWORD PTR [rsp+0x38],rbx
   140005d67:	mov    DWORD PTR [rsp+0x40],eax
   140005d6b:	mov    QWORD PTR [rsp+0x68],rcx
   140005d70:	xorps  xmm0,xmm0
   140005d73:	mov    r9d,edx
   140005d76:	mov    r8,rsi
   140005d79:	cmp    edx,r15d
   140005d7c:	jge    0x1400061fd
   140005d82:	cmp    eax,0x4
   140005d85:	jl     0x140005e7b
   140005d8b:	lea    rcx,[rsi+0x2]
   140005d8f:	mov    rax,rbx
   140005d92:	lea    r11d,[rdx+0x2]
   140005d96:	mov    rbp,rbx
   140005d99:	add    r15d,0xfffffffd
   140005d9d:	imul   rax,rcx
   140005da1:	add    rax,rsi
   140005da4:	shl    rbp,0x5
   140005da8:	lea    rdx,[rax*8+0x0]
   140005db0:	mov    rax,rsi
   140005db3:	sub    rax,rcx
   140005db6:	lea    r10,[rdx+rdi*1]
   140005dba:	lea    rcx,[rax+0x1]
   140005dbe:	lea    r14,[rax+0x3]
   140005dc2:	lea    rax,[rbx*8+0x8]
   140005dca:	imul   rax,rsi
   140005dce:	imul   rcx,rbx
   140005dd2:	imul   r14,rbx
   140005dd6:	sub    rax,rdx
   140005dd9:	nop    DWORD PTR [rax+0x0]
   140005de0:	movsd  xmm1,QWORD PTR [rax+r10*1]
   140005de6:	andps  xmm1,xmm4
   140005de9:	comisd xmm0,xmm1
   140005ded:	ja     0x140005df8
   140005def:	mov    r13d,r9d
   140005df2:	mov    r12,r8
   140005df5:	movaps xmm0,xmm1
   140005df8:	movsd  xmm1,QWORD PTR [r10+rcx*8]
   140005dfe:	andps  xmm1,xmm4
   140005e01:	comisd xmm0,xmm1
   140005e05:	ja     0x140005e12
   140005e07:	lea    r13d,[r11-0x1]
   140005e0b:	lea    r12,[r8+0x1]
   140005e0f:	movaps xmm0,xmm1
   140005e12:	movsd  xmm1,QWORD PTR [r10]
   140005e17:	andps  xmm1,xmm4
   140005e1a:	comisd xmm0,xmm1
   140005e1e:	ja     0x140005e2a
   140005e20:	mov    r13d,r11d
   140005e23:	lea    r12,[r8+0x2]
   140005e27:	movaps xmm0,xmm1
   140005e2a:	movsd  xmm1,QWORD PTR [r10+r14*8]
   140005e30:	andps  xmm1,xmm4
   140005e33:	comisd xmm0,xmm1
   140005e37:	ja     0x140005e44
   140005e39:	lea    r13d,[r11+0x1]
   140005e3d:	lea    r12,[r8+0x3]
   140005e41:	movaps xmm0,xmm1
   140005e44:	add    r9d,0x4
   140005e48:	add    r8,0x4
   140005e4c:	add    r10,rbp
   140005e4f:	add    r11d,0x4
   140005e53:	cmp    r9d,r15d
   140005e56:	jl     0x140005de0
   140005e58:	mov    r15d,DWORD PTR [rsp+0xd8]
   140005e60:	mov    edx,DWORD PTR [rsp+0x24]
   140005e64:	mov    r11,QWORD PTR [rsp+0x38]
   140005e69:	mov    DWORD PTR [rsp+0x20],r13d
   140005e6e:	mov    QWORD PTR [rsp+0x30],r12
   140005e73:	lea    r14,[rbx*8+0x0]
   140005e7b:	cmp    r9d,r15d
   140005e7e:	jge    0x140005ebc
   140005e80:	mov    rax,rbx
   140005e83:	imul   rax,r8
   140005e87:	add    rax,rsi
   140005e8a:	lea    rcx,[rdi+rax*8]
   140005e8e:	movsd  xmm1,QWORD PTR [rcx]
   140005e92:	andps  xmm1,xmm4
   140005e95:	comisd xmm0,xmm1
   140005e99:	ja     0x140005ea4
   140005e9b:	mov    r13d,r9d
   140005e9e:	mov    r12,r8
   140005ea1:	movaps xmm0,xmm1
   140005ea4:	inc    r9d
   140005ea7:	inc    r8
   140005eaa:	add    rcx,r14
   140005ead:	cmp    r9d,r15d
   140005eb0:	jl     0x140005e8e
   140005eb2:	mov    DWORD PTR [rsp+0x20],r13d
   140005eb7:	mov    QWORD PTR [rsp+0x30],r12
   140005ebc:	comisd xmm5,xmm0
   140005ec0:	ja     0x1400061fd
   140005ec6:	mov    ebp,edx
   140005ec8:	mov    r10,rsi
   140005ecb:	cmp    rsi,rbx
   140005ece:	jge    0x140005fe8
   140005ed4:	cmp    r11,0x4
   140005ed8:	jl     0x140005fa5
   140005ede:	lea    r8d,[rdx+0x2]
   140005ee2:	mov    eax,r13d
   140005ee5:	mov    r11,rbx
   140005ee8:	sub    r11,rsi
   140005eeb:	mov    rdx,rsi
   140005eee:	lea    r9,[rbx*8+0x8]
   140005ef6:	imul   eax,r15d
   140005efa:	add    r8d,eax
   140005efd:	lea    rax,[r14+0x8]
   140005f01:	sub    r11,0x4
   140005f05:	sub    r9,rax
   140005f08:	shr    r11,0x2
   140005f0c:	imul   rdx,rax
   140005f10:	mov    eax,DWORD PTR [rsp+0x24]
   140005f14:	add    rdx,rdi
   140005f17:	imul   r9,rsi
   140005f1b:	inc    r11
   140005f1e:	lea    ebp,[rax+r11*4]
   140005f22:	lea    r10,[rsi+r11*4]
   140005f26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005f30:	lea    eax,[r8-0x2]
   140005f34:	lea    rdx,[rdx+0x20]
   140005f38:	movsxd rcx,eax
   140005f3b:	mov    rax,QWORD PTR [rdx-0x20]
   140005f3f:	movsd  xmm0,QWORD PTR [rdi+rcx*8]
   140005f44:	mov    QWORD PTR [rdi+rcx*8],rax
   140005f48:	lea    eax,[r8-0x1]
   140005f4c:	movsd  QWORD PTR [rdx-0x20],xmm0
   140005f51:	movsxd rcx,eax
   140005f54:	mov    rax,QWORD PTR [r9+rdx*1-0x18]
   140005f59:	movsd  xmm0,QWORD PTR [rdi+rcx*8]
   140005f5e:	mov    QWORD PTR [rdi+rcx*8],rax
   140005f62:	mov    rax,QWORD PTR [rdx-0x10]
   140005f66:	movsd  QWORD PTR [r9+rdx*1-0x18],xmm0
   140005f6d:	movsxd rcx,r8d
   140005f70:	movsd  xmm0,QWORD PTR [rdi+rcx*8]
   140005f75:	mov    QWORD PTR [rdi+rcx*8],rax
   140005f79:	lea    eax,[r8+0x1]
   140005f7d:	movsxd rcx,eax
   140005f80:	mov    rax,QWORD PTR [rdx-0x8]
   140005f84:	movsd  QWORD PTR [rdx-0x10],xmm0
   140005f89:	add    r8d,0x4
   140005f8d:	movsd  xmm0,QWORD PTR [rdi+rcx*8]
   140005f92:	mov    QWORD PTR [rdi+rcx*8],rax
   140005f96:	movsd  QWORD PTR [rdx-0x8],xmm0
   140005f9b:	dec    r11
   140005f9e:	jne    0x140005f30
   140005fa0:	mov    r11,QWORD PTR [rsp+0x38]
   140005fa5:	cmp    r10,rbx
   140005fa8:	jge    0x140005fe8
   140005faa:	mov    rax,rbx
   140005fad:	mov    r8d,r13d
   140005fb0:	mov    r9,rbx
   140005fb3:	imul   rax,rsi
   140005fb7:	imul   r8d,r15d
   140005fbb:	add    r8d,ebp
   140005fbe:	add    rax,r10
   140005fc1:	sub    r9,r10
   140005fc4:	lea    rdx,[rdi+rax*8]
   140005fc8:	mov    rax,QWORD PTR [rdx]
   140005fcb:	movsxd rcx,r8d
   140005fce:	inc    r8d
   140005fd1:	lea    rdx,[rdx+0x8]
   140005fd5:	movsd  xmm0,QWORD PTR [rdi+rcx*8]
   140005fda:	mov    QWORD PTR [rdi+rcx*8],rax
   140005fde:	movsd  QWORD PTR [rdx-0x8],xmm0
   140005fe3:	dec    r9
   140005fe6:	jne    0x140005fc8
   140005fe8:	mov    rcx,QWORD PTR [rsp+0x28]
   140005fed:	mov    rbp,QWORD PTR [rsp+0xd0]
   140005ff5:	lea    r14,[rsi+0x1]
   140005ff9:	mov    rax,QWORD PTR [rcx]
   140005ffc:	mov    QWORD PTR [rsp+0x60],r14
   140006001:	mov    r9,r14
   140006004:	movsd  xmm0,QWORD PTR [rbp+r12*8+0x0]
   14000600b:	mov    QWORD PTR [rbp+r12*8+0x0],rax
   140006010:	movsd  QWORD PTR [rcx],xmm0
   140006014:	cmp    r14,rbx
   140006017:	jge    0x14000619d
   14000601d:	mov    r13,QWORD PTR [rsp+0xd0]
   140006025:	mov    r11,r14
   140006028:	lea    r15,[rbx+0x1]
   14000602c:	imul   r11,rbx
   140006030:	mov    rbp,rbx
   140006033:	lea    r10,[rdi+0x8]
   140006037:	imul   r15,rsi
   14000603b:	sub    rsi,r14
   14000603e:	neg    rbp
   140006041:	mov    r14,rcx
   140006044:	shl    rbp,0x3
   140006048:	lea    r10,[r10+r11*8]
   14000604c:	imul   rsi,rbx
   140006050:	lea    rdx,[rsi*8+0x8]
   140006058:	mov    rsi,QWORD PTR [rsp+0x68]
   14000605d:	add    rsi,rcx
   140006060:	xor    r12d,r12d
   140006063:	nop    DWORD PTR [rax+0x0]
   140006067:	nop    WORD PTR [rax+rax*1+0x0]
   140006070:	movsd  xmm3,QWORD PTR [rsi+r10*1]
   140006076:	movsd  xmm0,QWORD PTR [r13+r9*8+0x0]
   14000607d:	mov    r8,r12
   140006080:	divsd  xmm3,QWORD PTR [rdi+r15*8]
   140006086:	movaps xmm1,xmm3
   140006089:	mulsd  xmm1,QWORD PTR [r14]
   14000608e:	subsd  xmm0,xmm1
   140006092:	movsd  QWORD PTR [r13+r9*8+0x0],xmm0
   140006099:	cmp    rbx,0x4
   14000609d:	jl     0x140006125
   1400060a3:	lea    rcx,[rbx-0x4]
   1400060a7:	mov    rax,r10
   1400060aa:	shr    rcx,0x2
   1400060ae:	inc    rcx
   1400060b1:	lea    r8,[rcx*4+0x0]
   1400060b9:	nop    DWORD PTR [rax+0x0]
   1400060c0:	movsd  xmm0,QWORD PTR [rax-0x8]
   1400060c5:	movaps xmm1,xmm3
   1400060c8:	movaps xmm2,xmm3
   1400060cb:	add    rax,0x20
   1400060cf:	mulsd  xmm1,QWORD PTR [rdx+rax*1-0x30]
   1400060d5:	subsd  xmm0,xmm1
   1400060d9:	movaps xmm1,xmm3
   1400060dc:	movsd  QWORD PTR [rax-0x28],xmm0
   1400060e1:	movsd  xmm0,QWORD PTR [rax-0x20]
   1400060e6:	mulsd  xmm2,QWORD PTR [rax+rdx*1-0x28]
   1400060ec:	subsd  xmm0,xmm2
   1400060f0:	movsd  QWORD PTR [rax-0x20],xmm0
   1400060f5:	movsd  xmm0,QWORD PTR [rax-0x18]
   1400060fa:	mulsd  xmm1,QWORD PTR [rax+rdx*1-0x20]
   140006100:	subsd  xmm0,xmm1
   140006104:	movaps xmm1,xmm3
   140006107:	movsd  QWORD PTR [rax-0x18],xmm0
   14000610c:	movsd  xmm0,QWORD PTR [rax-0x10]
   140006111:	mulsd  xmm1,QWORD PTR [rax+rdx*1-0x18]
   140006117:	subsd  xmm0,xmm1
   14000611b:	movsd  QWORD PTR [rax-0x10],xmm0
   140006120:	dec    rcx
   140006123:	jne    0x1400060c0
   140006125:	cmp    r8,rbx
   140006128:	jge    0x140006157
   14000612a:	lea    rax,[r11+r8*1]
   14000612e:	lea    rcx,[rdi+rax*8]
   140006132:	mov    rax,rbx
   140006135:	sub    rax,r8
   140006138:	movsd  xmm0,QWORD PTR [rcx]
   14000613c:	movaps xmm1,xmm3
   14000613f:	add    rcx,0x8
   140006143:	mulsd  xmm1,QWORD PTR [rdx+rcx*1-0x10]
   140006149:	subsd  xmm0,xmm1
   14000614d:	movsd  QWORD PTR [rcx-0x8],xmm0
   140006152:	dec    rax
   140006155:	jne    0x140006138
   140006157:	lea    rax,[rbx*8+0x0]
   14000615f:	inc    r9
   140006162:	add    r11,rbx
   140006165:	add    r10,rax
   140006168:	add    rdx,rbp
   14000616b:	cmp    r9,rbx
   14000616e:	jl     0x140006070
   140006174:	mov    r12,QWORD PTR [rsp+0x30]
   140006179:	mov    r13d,DWORD PTR [rsp+0x20]
   14000617e:	mov    r14,QWORD PTR [rsp+0x60]
   140006183:	mov    r15d,DWORD PTR [rsp+0xd8]
   14000618b:	mov    rcx,QWORD PTR [rsp+0x28]
   140006190:	mov    rbp,QWORD PTR [rsp+0xd0]
   140006198:	mov    r11,QWORD PTR [rsp+0x38]
   14000619d:	mov    edx,DWORD PTR [rsp+0x24]
   1400061a1:	mov    eax,DWORD PTR [rsp+0x40]
   1400061a5:	dec    r11
   1400061a8:	add    rcx,0x8
   1400061ac:	inc    edx
   1400061ae:	dec    eax
   1400061b0:	cmp    r14,QWORD PTR [rsp+0x48]
   1400061b5:	mov    rsi,r14
   1400061b8:	mov    QWORD PTR [rsp+0x38],r11
   1400061bd:	mov    DWORD PTR [rsp+0x24],edx
   1400061c1:	mov    DWORD PTR [rsp+0x40],eax
   1400061c5:	mov    QWORD PTR [rsp+0x28],rcx
   1400061ca:	lea    r14,[rbx*8+0x0]
   1400061d2:	jl     0x140005d70
   1400061d8:	mov    r11,QWORD PTR [rsp+0x48]
   1400061dd:	mov    rcx,0xfffffffffffffff8
   1400061e4:	mov    rax,rbx
   1400061e7:	imul   rax,rbx
   1400061eb:	movsd  xmm1,QWORD PTR [rdi+rax*8-0x8]
   1400061f1:	movaps xmm0,xmm1
   1400061f4:	andps  xmm0,xmm4
   1400061f7:	comisd xmm5,xmm0
   1400061fb:	jbe    0x14000621f
   1400061fd:	lea    rcx,[rip+0x3755c]        # 0x14003d760
   140006204:	call   QWORD PTR [rip+0x36e66]        # 0x14003d070
   14000620a:	mov    rcx,QWORD PTR [rsp+0x50]
   14000620f:	call   QWORD PTR [rip+0x3708b]        # 0x14003d2a0
   140006215:	mov    rcx,QWORD PTR [rsp+0x58]
   14000621a:	jmp    0x14000648c
   14000621f:	movsd  xmm0,QWORD PTR [r14+rbp*1-0x8]
   140006226:	mov    rsi,QWORD PTR [rsp+0xc8]
   14000622e:	divsd  xmm0,xmm1
   140006232:	movsd  QWORD PTR [r14+rsi*1-0x8],xmm0
   140006239:	test   r11,r11
   14000623c:	jle    0x140006426
   140006242:	sub    rcx,r14
   140006245:	mov    rax,rbx
   140006248:	lea    r10,[rbx-0x1]
   14000624c:	neg    rax
   14000624f:	mov    QWORD PTR [rsp+0x38],rcx
   140006254:	lea    rcx,[rbx+0x1]
   140006258:	mov    QWORD PTR [rsp+0x68],rax
   14000625d:	mov    rax,rbx
   140006260:	mov    r14d,0x1
   140006266:	imul   rcx,rbx
   14000626a:	neg    rax
   14000626d:	shl    rax,0x3
   140006271:	mov    QWORD PTR [rsp+0x60],rax
   140006276:	lea    rax,[rbx-0x2]
   14000627a:	mov    r15,rax
   14000627d:	lea    rdx,[rsi+rax*8]
   140006281:	lea    rax,[rbx*2+0x2]
   140006289:	sub    rcx,rax
   14000628c:	mov    eax,0x2
   140006291:	imul   r15,rbx
   140006295:	sub    rax,rbx
   140006298:	lea    r12,[rdi+rcx*8]
   14000629c:	mov    rcx,rbp
   14000629f:	sub    rcx,rsi
   1400062a2:	lea    r13,[r15*8+0x0]
   1400062aa:	imul   rax,rbx
   1400062ae:	lea    r8,[rax*8+0x0]
   1400062b6:	lea    r9,[rax*8+0x18]
   1400062be:	mov    rax,rsi
   1400062c1:	sub    r8,rdi
   1400062c4:	sub    r9,rdi
   1400062c7:	mov    QWORD PTR [rsp+0x30],rcx
   1400062cc:	add    r8,rsi
   1400062cf:	add    r9,rsi
   1400062d2:	neg    rax
   1400062d5:	mov    QWORD PTR [rsp+0x28],rax
   1400062da:	nop    WORD PTR [rax+rax*1+0x0]
   1400062e0:	movsd  xmm1,QWORD PTR [rcx+rdx*1]
   1400062e5:	mov    rbp,r10
   1400062e8:	movsd  QWORD PTR [rdx],xmm1
   1400062ec:	cmp    r10,rbx
   1400062ef:	jge    0x1400063cc
   1400062f5:	cmp    r14,0x4
   1400062f9:	jl     0x14000637d
   1400062ff:	lea    rax,[r15+r10*1]
   140006303:	lea    rcx,[rdi+rax*8]
   140006307:	mov    rax,rbx
   14000630a:	sub    rax,r10
   14000630d:	sub    rax,0x4
   140006311:	shr    rax,0x2
   140006315:	inc    rax
   140006318:	lea    rbp,[r10+rax*4]
   14000631c:	nop    DWORD PTR [rax+0x0]
   140006320:	movsd  xmm0,QWORD PTR [rcx+r8*1]
   140006326:	add    rcx,0x20
   14000632a:	mulsd  xmm0,QWORD PTR [rcx-0x20]
   14000632f:	subsd  xmm1,xmm0
   140006333:	movsd  QWORD PTR [rdx],xmm1
   140006337:	movsd  xmm0,QWORD PTR [rcx+r8*1-0x18]
   14000633e:	mulsd  xmm0,QWORD PTR [rcx-0x18]
   140006343:	subsd  xmm1,xmm0
   140006347:	movsd  QWORD PTR [rdx],xmm1
   14000634b:	movsd  xmm0,QWORD PTR [rcx+r9*1-0x28]
   140006352:	mulsd  xmm0,QWORD PTR [rcx-0x10]
   140006357:	subsd  xmm1,xmm0
   14000635b:	movsd  QWORD PTR [rdx],xmm1
   14000635f:	movsd  xmm0,QWORD PTR [rcx+r9*1-0x20]
   140006366:	mulsd  xmm0,QWORD PTR [rcx-0x8]
   14000636b:	subsd  xmm1,xmm0
   14000636f:	movsd  QWORD PTR [rdx],xmm1
   140006373:	dec    rax
   140006376:	jne    0x140006320
   140006378:	mov    rax,QWORD PTR [rsp+0x28]
   14000637d:	cmp    rbp,rbx
   140006380:	jge    0x1400063cc
   140006382:	lea    r11,[rax+rdx*1]
   140006386:	lea    rcx,[rsi+rbp*8]
   14000638a:	mov    rax,r13
   14000638d:	sub    rax,rsi
   140006390:	lea    rsi,[rax+rdi*1]
   140006394:	mov    rax,rbx
   140006397:	sub    rax,rbp
   14000639a:	mov    rbp,QWORD PTR [rsp+0xc8]
   1400063a2:	movsd  xmm0,QWORD PTR [rsi+rcx*1]
   1400063a7:	add    rcx,0x8
   1400063ab:	mulsd  xmm0,QWORD PTR [rcx-0x8]
   1400063b0:	subsd  xmm1,xmm0
   1400063b4:	movsd  QWORD PTR [r11+rbp*1],xmm1
   1400063ba:	dec    rax
   1400063bd:	jne    0x1400063a2
   1400063bf:	mov    rsi,QWORD PTR [rsp+0xc8]
   1400063c7:	mov    r11,QWORD PTR [rsp+0x48]
   1400063cc:	divsd  xmm1,QWORD PTR [r12]
   1400063d2:	mov    rax,QWORD PTR [rsp+0x28]
   1400063d7:	add    r13,QWORD PTR [rsp+0x60]
   1400063dc:	add    r15,QWORD PTR [rsp+0x68]
   1400063e1:	add    r12,QWORD PTR [rsp+0x38]
   1400063e6:	mov    rcx,QWORD PTR [rsp+0x30]
   1400063eb:	add    rax,rdx
   1400063ee:	inc    r14
   1400063f1:	dec    r10
   1400063f4:	sub    rdx,0x8
   1400063f8:	movsd  QWORD PTR [rax+rsi*1],xmm1
   1400063fd:	lea    rax,[rbx*8+0x0]
   140006405:	add    r9,rax
   140006408:	add    r8,rax
   14000640b:	mov    rax,QWORD PTR [rsp+0x28]
   140006410:	dec    r11
   140006413:	mov    QWORD PTR [rsp+0x48],r11
   140006418:	jne    0x1400062e0
   14000641e:	mov    rbp,QWORD PTR [rsp+0xd0]
   140006426:	test   rbx,rbx
   140006429:	jle    0x140006444
   14000642b:	shl    rbx,0x3
   14000642f:	mov    rcx,rbp
   140006432:	mov    r8,rbx
   140006435:	mov    rbx,QWORD PTR [rsp+0x58]
   14000643a:	mov    rdx,rbx
   14000643d:	call   0x14003b8cc
   140006442:	jmp    0x140006449
   140006444:	mov    rbx,QWORD PTR [rsp+0x58]
   140006449:	mov    rdx,QWORD PTR [rsp+0x78]
   14000644e:	test   rdx,rdx
   140006451:	jle    0x14000647e
   140006453:	mov    rcx,QWORD PTR [rsp+0x50]
   140006458:	sub    rcx,rdi
   14000645b:	nop    DWORD PTR [rax+rax*1+0x0]
   140006460:	mov    rax,QWORD PTR [rdi+rcx*1]
   140006464:	lea    rdi,[rdi+0x8]
   140006468:	mov    QWORD PTR [rdi-0x8],rax
   14000646c:	mov    rax,QWORD PTR [rsp+0x70]
   140006471:	inc    rax
   140006474:	mov    QWORD PTR [rsp+0x70],rax
   140006479:	cmp    rax,rdx
   14000647c:	jl     0x140006460
   14000647e:	mov    rcx,QWORD PTR [rsp+0x50]
   140006483:	call   QWORD PTR [rip+0x36e17]        # 0x14003d2a0
   140006489:	mov    rcx,rbx
   14000648c:	call   QWORD PTR [rip+0x36e0e]        # 0x14003d2a0
   140006492:	mov    rbx,QWORD PTR [rsp+0xc0]
   14000649a:	add    rsp,0x80
   1400064a1:	pop    r15
   1400064a3:	pop    r14
   1400064a5:	pop    r13
   1400064a7:	pop    r12
   1400064a9:	pop    rdi
   1400064aa:	pop    rsi
   1400064ab:	pop    rbp
   1400064ac:	ret    
   1400064ad:	int3   
   1400064ae:	int3   
   1400064af:	int3   
   1400064b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400064b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400064ba:	push   rdi
   1400064bb:	sub    rsp,0x20
   1400064bf:	mov    rbx,rcx
   1400064c2:	lea    rcx,[rip+0x4d11f]        # 0x1400535e8
   1400064c9:	mov    rdi,rdx
   1400064cc:	call   0x140005b40
   1400064d1:	mov    rcx,rbx
   1400064d4:	mov    QWORD PTR [rax+0x28],rbx
   1400064d8:	mov    QWORD PTR [rax+0x30],rdi
   1400064dc:	mov    rsi,rax
   1400064df:	call   0x140004830
   1400064e4:	mov    rcx,rdi
   1400064e7:	call   0x140004830
   1400064ec:	xor    eax,eax
   1400064ee:	mov    QWORD PTR [rsi+0x18],rax
   1400064f2:	mov    QWORD PTR [rsi+0x20],rax
   1400064f6:	movabs rax,0x3ff0000000000000
   140006500:	movsd  xmm2,QWORD PTR [rbx]
   140006504:	movsd  xmm3,QWORD PTR [rdi]
   140006508:	movsd  xmm1,QWORD PTR [rbx+0x8]
   14000650d:	movsd  xmm4,QWORD PTR [rdi+0x8]
   140006512:	subsd  xmm3,xmm2
   140006516:	subsd  xmm4,xmm1
   14000651a:	mulsd  xmm2,xmm3
   14000651e:	movaps xmm0,xmm3
   140006521:	mulsd  xmm0,xmm3
   140006525:	movaps xmm5,xmm4
   140006528:	mulsd  xmm1,xmm4
   14000652c:	mulsd  xmm5,xmm4
   140006530:	addsd  xmm1,xmm2
   140006534:	movaps xmm2,xmm3
   140006537:	andps  xmm2,XMMWORD PTR [rip+0x37022]        # 0x14003d560
   14000653e:	addsd  xmm5,xmm0
   140006542:	movaps xmm0,xmm4
   140006545:	mulsd  xmm5,QWORD PTR [rip+0x36e8b]        # 0x14003d3d8
   14000654d:	andps  xmm0,XMMWORD PTR [rip+0x3700c]        # 0x14003d560
   140006554:	addsd  xmm5,xmm1
   140006558:	comisd xmm2,xmm0
   14000655c:	movsd  QWORD PTR [rsi+0x10],xmm5
   140006561:	jbe    0x14000657a
   140006563:	divsd  xmm4,xmm3
   140006567:	divsd  xmm5,xmm3
   14000656b:	mov    QWORD PTR [rsi],rax
   14000656e:	movsd  QWORD PTR [rsi+0x8],xmm4
   140006573:	movsd  QWORD PTR [rsi+0x10],xmm5
   140006578:	jmp    0x140006593
   14000657a:	movsd  xmm0,xmm5
   14000657e:	divsd  xmm3,xmm4
   140006582:	mov    QWORD PTR [rsi+0x8],rax
   140006586:	divsd  xmm0,xmm4
   14000658a:	movsd  QWORD PTR [rsi],xmm3
   14000658e:	movsd  QWORD PTR [rsi+0x10],xmm0
   140006593:	mov    eax,DWORD PTR [rip+0x4d047]        # 0x1400535e0
   140006599:	mov    rbx,QWORD PTR [rsp+0x30]
   14000659e:	mov    DWORD PTR [rsi+0x38],eax
   1400065a1:	inc    eax
   1400065a3:	mov    DWORD PTR [rip+0x4d037],eax        # 0x1400535e0
   1400065a9:	mov    rax,rsi
   1400065ac:	mov    rsi,QWORD PTR [rsp+0x38]
   1400065b1:	add    rsp,0x20
   1400065b5:	pop    rdi
   1400065b6:	ret    
   1400065b7:	int3   
   1400065b8:	int3   
   1400065b9:	int3   
   1400065ba:	int3   
   1400065bb:	int3   
   1400065bc:	int3   
   1400065bd:	int3   
   1400065be:	int3   
   1400065bf:	int3   
   1400065c0:	sub    rsp,0x48
   1400065c4:	movsd  xmm5,QWORD PTR [rcx]
   1400065c8:	movsd  xmm2,QWORD PTR [rip+0x36e10]        # 0x14003d3e0
   1400065d0:	mov    rdx,rcx
   1400065d3:	ucomisd xmm5,xmm2
   1400065d7:	jp     0x1400065f3
   1400065d9:	jne    0x1400065f3
   1400065db:	movsd  xmm1,QWORD PTR [rcx+0x8]
   1400065e0:	xorps  xmm0,xmm0
   1400065e3:	comisd xmm1,xmm0
   1400065e7:	jb     0x1400065f3
   1400065e9:	mov    rax,QWORD PTR [rcx+0x20]
   1400065ed:	mov    rcx,QWORD PTR [rcx+0x18]
   1400065f1:	jmp    0x1400065fb
   1400065f3:	mov    rax,QWORD PTR [rcx+0x18]
   1400065f7:	mov    rcx,QWORD PTR [rcx+0x20]
   1400065fb:	ucomisd xmm5,xmm2
   1400065ff:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140006604:	jp     0x140006743
   14000660a:	jne    0x140006743
   140006610:	movsd  xmm5,QWORD PTR [rip+0x4ef48]        # 0x140055560
   140006618:	test   rax,rax
   14000661b:	je     0x140006640
   14000661d:	movsd  xmm2,QWORD PTR [rax+0x8]
   140006622:	comisd xmm2,xmm5
   140006626:	ja     0x140006884
   14000662c:	movsd  xmm3,QWORD PTR [rip+0x4ef34]        # 0x140055568
   140006634:	comisd xmm2,xmm3
   140006638:	jb     0x140006648
   14000663a:	movsd  xmm4,QWORD PTR [rax]
   14000663e:	jmp    0x14000665c
   140006640:	movsd  xmm3,QWORD PTR [rip+0x4ef20]        # 0x140055568
   140006648:	movsd  xmm4,QWORD PTR [rdx+0x10]
   14000664d:	movaps xmm2,xmm3
   140006650:	movaps xmm0,xmm2
   140006653:	mulsd  xmm0,QWORD PTR [rdx+0x8]
   140006658:	subsd  xmm4,xmm0
   14000665c:	test   rcx,rcx
   14000665f:	je     0x140006684
   140006661:	movsd  xmm1,QWORD PTR [rcx+0x8]
   140006666:	comisd xmm3,xmm1
   14000666a:	ja     0x140006884
   140006670:	comisd xmm5,xmm1
   140006674:	jb     0x14000667c
   140006676:	movsd  xmm3,QWORD PTR [rcx]
   14000667a:	jmp    0x140006698
   14000667c:	movaps xmm1,xmm5
   14000667f:	movaps xmm0,xmm1
   140006682:	jmp    0x14000668a
   140006684:	movaps xmm1,xmm5
   140006687:	movaps xmm0,xmm5
   14000668a:	mulsd  xmm0,QWORD PTR [rdx+0x8]
   14000668f:	movsd  xmm3,QWORD PTR [rdx+0x10]
   140006694:	subsd  xmm3,xmm0
   140006698:	movsd  xmm0,QWORD PTR [rip+0x4eed8]        # 0x140055578
   1400066a0:	movsd  xmm5,QWORD PTR [rip+0x4eec8]        # 0x140055570
   1400066a8:	xor    r8d,r8d
   1400066ab:	mov    eax,r8d
   1400066ae:	mov    ecx,r8d
   1400066b1:	comisd xmm0,xmm3
   1400066b5:	seta   cl
   1400066b8:	comisd xmm0,xmm4
   1400066bc:	seta   al
   1400066bf:	and    ecx,eax
   1400066c1:	mov    eax,r8d
   1400066c4:	comisd xmm3,xmm5
   1400066c8:	seta   al
   1400066cb:	comisd xmm4,xmm5
   1400066cf:	seta   r8b
   1400066d3:	and    eax,r8d
   1400066d6:	or     ecx,eax
   1400066d8:	jne    0x140006884
   1400066de:	comisd xmm4,xmm5
   1400066e2:	jbe    0x1400066f5
   1400066e4:	movsd  xmm2,QWORD PTR [rdx+0x10]
   1400066e9:	movaps xmm4,xmm5
   1400066ec:	subsd  xmm2,xmm4
   1400066f0:	divsd  xmm2,QWORD PTR [rdx+0x8]
   1400066f5:	comisd xmm0,xmm4
   1400066f9:	jbe    0x14000670c
   1400066fb:	movsd  xmm2,QWORD PTR [rdx+0x10]
   140006700:	movaps xmm4,xmm0
   140006703:	subsd  xmm2,xmm4
   140006707:	divsd  xmm2,QWORD PTR [rdx+0x8]
   14000670c:	comisd xmm3,xmm5
   140006710:	jbe    0x140006723
   140006712:	movsd  xmm1,QWORD PTR [rdx+0x10]
   140006717:	movaps xmm3,xmm5
   14000671a:	subsd  xmm1,xmm3
   14000671e:	divsd  xmm1,QWORD PTR [rdx+0x8]
   140006723:	comisd xmm0,xmm3
   140006727:	jbe    0x140006873
   14000672d:	movsd  xmm1,QWORD PTR [rdx+0x10]
   140006732:	movaps xmm3,xmm0
   140006735:	subsd  xmm1,xmm3
   140006739:	divsd  xmm1,QWORD PTR [rdx+0x8]
   14000673e:	jmp    0x140006873
   140006743:	movsd  xmm6,QWORD PTR [rip+0x4ee25]        # 0x140055570
   14000674b:	test   rax,rax
   14000674e:	je     0x14000677f
   140006750:	movsd  xmm4,QWORD PTR [rax]
   140006754:	comisd xmm4,xmm6
   140006758:	ja     0x140006884
   14000675e:	movsd  xmm1,QWORD PTR [rip+0x4ee12]        # 0x140055578
   140006766:	comisd xmm4,xmm1
   14000676a:	jb     0x140006773
   14000676c:	movsd  xmm2,QWORD PTR [rax+0x8]
   140006771:	jmp    0x14000679a
   140006773:	movaps xmm4,xmm1
   140006776:	movaps xmm0,xmm5
   140006779:	mulsd  xmm0,xmm4
   14000677d:	jmp    0x140006791
   14000677f:	movsd  xmm1,QWORD PTR [rip+0x4edf1]        # 0x140055578
   140006787:	movaps xmm0,xmm5
   14000678a:	movaps xmm4,xmm1
   14000678d:	mulsd  xmm0,xmm1
   140006791:	movsd  xmm2,QWORD PTR [rdx+0x10]
   140006796:	subsd  xmm2,xmm0
   14000679a:	test   rcx,rcx
   14000679d:	je     0x1400067c6
   14000679f:	movsd  xmm3,QWORD PTR [rcx]
   1400067a3:	comisd xmm1,xmm3
   1400067a7:	ja     0x140006884
   1400067ad:	comisd xmm6,xmm3
   1400067b1:	jb     0x1400067ba
   1400067b3:	movsd  xmm1,QWORD PTR [rcx+0x8]
   1400067b8:	jmp    0x1400067d9
   1400067ba:	movaps xmm3,xmm6
   1400067bd:	movaps xmm0,xmm5
   1400067c0:	mulsd  xmm0,xmm3
   1400067c4:	jmp    0x1400067d0
   1400067c6:	movaps xmm0,xmm5
   1400067c9:	movaps xmm3,xmm6
   1400067cc:	mulsd  xmm0,xmm6
   1400067d0:	movsd  xmm1,QWORD PTR [rdx+0x10]
   1400067d5:	subsd  xmm1,xmm0
   1400067d9:	movsd  xmm6,QWORD PTR [rip+0x4ed87]        # 0x140055568
   1400067e1:	movsd  xmm0,QWORD PTR [rip+0x4ed77]        # 0x140055560
   1400067e9:	xor    r8d,r8d
   1400067ec:	mov    eax,r8d
   1400067ef:	mov    ecx,r8d
   1400067f2:	comisd xmm6,xmm1
   1400067f6:	seta   cl
   1400067f9:	comisd xmm6,xmm2
   1400067fd:	seta   al
   140006800:	and    ecx,eax
   140006802:	mov    eax,r8d
   140006805:	comisd xmm1,xmm0
   140006809:	seta   al
   14000680c:	comisd xmm2,xmm0
   140006810:	seta   r8b
   140006814:	and    eax,r8d
   140006817:	or     ecx,eax
   140006819:	jne    0x140006884
   14000681b:	comisd xmm2,xmm0
   14000681f:	jbe    0x140006831
   140006821:	movsd  xmm4,QWORD PTR [rdx+0x10]
   140006826:	movaps xmm2,xmm0
   140006829:	subsd  xmm4,xmm2
   14000682d:	divsd  xmm4,xmm5
   140006831:	comisd xmm6,xmm2
   140006835:	jbe    0x140006847
   140006837:	movsd  xmm4,QWORD PTR [rdx+0x10]
   14000683c:	movaps xmm2,xmm6
   14000683f:	subsd  xmm4,xmm2
   140006843:	divsd  xmm4,xmm5
   140006847:	comisd xmm1,xmm0
   14000684b:	jbe    0x14000685d
   14000684d:	movsd  xmm3,QWORD PTR [rdx+0x10]
   140006852:	movaps xmm1,xmm0
   140006855:	subsd  xmm3,xmm1
   140006859:	divsd  xmm3,xmm5
   14000685d:	comisd xmm6,xmm1
   140006861:	jbe    0x140006873
   140006863:	movsd  xmm3,QWORD PTR [rdx+0x10]
   140006868:	movaps xmm1,xmm6
   14000686b:	subsd  xmm3,xmm1
   14000686f:	divsd  xmm3,xmm5
   140006873:	movsd  QWORD PTR [rsp+0x20],xmm1
   140006879:	movaps xmm1,xmm4
   14000687c:	mov    rcx,rdx
   14000687f:	call   0x140006890
   140006884:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140006889:	add    rsp,0x48
   14000688d:	ret    
   14000688e:	int3   
   14000688f:	int3   
   140006890:	rex push rbx
   140006892:	sub    rsp,0x50
   140006896:	movaps XMMWORD PTR [rsp+0x40],xmm7
   14000689b:	mov    rbx,rcx
   14000689e:	mov    rcx,QWORD PTR [rcx+0x28]
   1400068a2:	movaps XMMWORD PTR [rsp+0x30],xmm8
   1400068a8:	movaps XMMWORD PTR [rsp+0x20],xmm9
   1400068ae:	movaps xmm7,xmm2
   1400068b1:	movaps xmm9,xmm3
   1400068b5:	movaps xmm8,xmm1
   1400068b9:	call   0x14000ae60
   1400068be:	mov    rcx,QWORD PTR [rbx+0x28]
   1400068c2:	movsd  xmm2,QWORD PTR [rsp+0x80]
   1400068cb:	movaps xmm1,xmm9
   1400068cf:	call   0x14000ae60
   1400068d4:	mov    rcx,QWORD PTR [rbx+0x30]
   1400068d8:	movaps xmm2,xmm7
   1400068db:	movaps xmm1,xmm8
   1400068df:	call   0x14000ae60
   1400068e4:	mov    rcx,QWORD PTR [rbx+0x30]
   1400068e8:	movsd  xmm2,QWORD PTR [rsp+0x80]
   1400068f1:	movaps xmm1,xmm9
   1400068f5:	movaps xmm7,XMMWORD PTR [rsp+0x40]
   1400068fa:	movaps xmm8,XMMWORD PTR [rsp+0x30]
   140006900:	movaps xmm9,XMMWORD PTR [rsp+0x20]
   140006906:	add    rsp,0x50
   14000690a:	pop    rbx
   14000690b:	jmp    0x14000ae60
   140006910:	sub    rsp,0x28
   140006914:	lea    rcx,[rip+0x4cccd]        # 0x1400535e8
   14000691b:	mov    edx,0x40
   140006920:	call   0x140005a70
   140006925:	mov    DWORD PTR [rip+0x4ccb1],0x0        # 0x1400535e0
   14000692f:	add    rsp,0x28
   140006933:	ret    
   140006934:	int3   
   140006935:	int3   
   140006936:	int3   
   140006937:	int3   
   140006938:	int3   
   140006939:	int3   
   14000693a:	int3   
   14000693b:	int3   
   14000693c:	int3   
   14000693d:	int3   
   14000693e:	int3   
   14000693f:	int3   
   140006940:	mov    QWORD PTR [rsp+0x8],rbx
   140006945:	push   rdi
   140006946:	sub    rsp,0x20
   14000694a:	movsxd rbx,edx
   14000694d:	mov    rdi,rcx
   140006950:	mov    QWORD PTR [rcx+rbx*8+0x18],r8
   140006955:	mov    rcx,r8
   140006958:	call   0x140004830
   14000695d:	mov    eax,0x4
   140006962:	sub    rax,rbx
   140006965:	cmp    QWORD PTR [rdi+rax*8],0x0
   14000696a:	je     0x140006995
   14000696c:	mov    rcx,rdi
   14000696f:	call   0x1400065c0
   140006974:	mov    rcx,QWORD PTR [rdi+0x28]
   140006978:	call   0x1400047b0
   14000697d:	mov    rcx,QWORD PTR [rdi+0x30]
   140006981:	call   0x1400047b0
   140006986:	lea    rdx,[rip+0x4cc5b]        # 0x1400535e8
   14000698d:	mov    rcx,rdi
   140006990:	call   0x140005c20
   140006995:	mov    rbx,QWORD PTR [rsp+0x30]
   14000699a:	add    rsp,0x20
   14000699e:	pop    rdi
   14000699f:	ret    
   1400069a0:	mov    rdx,QWORD PTR [rcx]
   1400069a3:	mov    rax,QWORD PTR [rcx+0x8]
   1400069a7:	mov    QWORD PTR [rdx+0x8],rax
   1400069ab:	mov    rdx,QWORD PTR [rcx+0x8]
   1400069af:	mov    rax,QWORD PTR [rcx]
   1400069b2:	mov    QWORD PTR [rdx],rax
   1400069b5:	mov    QWORD PTR [rcx+0x10],0xfffffffffffffffe
   1400069bd:	ret    
   1400069be:	int3   
   1400069bf:	int3   
   1400069c0:	sub    rsp,0x28
   1400069c4:	test   ecx,ecx
   1400069c6:	js     0x140006a09
   1400069c8:	cmp    ecx,DWORD PTR [rip+0x4cc4a]        # 0x140053618
   1400069ce:	jge    0x140006a09
   1400069d0:	mov    rax,QWORD PTR [rip+0x4cc49]        # 0x140053620
   1400069d7:	movsxd rcx,ecx
   1400069da:	lea    rdx,[rax+rcx*8]
   1400069de:	mov    rax,QWORD PTR [rax+rcx*8]
   1400069e2:	test   rax,rax
   1400069e5:	je     0x140006a0b
   1400069e7:	cmp    QWORD PTR [rax+0x10],0xfffffffffffffffe
   1400069ec:	jne    0x140006a0b
   1400069ee:	mov    QWORD PTR [rdx],0x0
   1400069f5:	dec    DWORD PTR [rax+0x18]
   1400069f8:	jne    0x140006a09
   1400069fa:	lea    rdx,[rip+0x4cbff]        # 0x140053600
   140006a01:	mov    rcx,rax
   140006a04:	call   0x140005c20
   140006a09:	xor    eax,eax
   140006a0b:	add    rsp,0x28
   140006a0f:	ret    
   140006a10:	rex push rdi
   140006a12:	sub    rsp,0x20
   140006a16:	lea    rcx,[rip+0x4cbe3]        # 0x140053600
   140006a1d:	mov    edx,0x38
   140006a22:	call   0x140005a70
   140006a27:	mov    eax,DWORD PTR [rip+0x4eb5f]        # 0x14005558c
   140006a2d:	mov    rdi,QWORD PTR [rip+0x4cbec]        # 0x140053620
   140006a34:	add    eax,eax
   140006a36:	mov    DWORD PTR [rip+0x4cbdc],eax        # 0x140053618
   140006a3c:	test   rdi,rdi
   140006a3f:	jne    0x140006a5d
   140006a41:	lea    ecx,[rax*8+0x0]
   140006a48:	call   0x140005c30
   140006a4d:	mov    rdi,rax
   140006a50:	mov    QWORD PTR [rip+0x4cbc9],rax        # 0x140053620
   140006a57:	mov    eax,DWORD PTR [rip+0x4cbbb]        # 0x140053618
   140006a5d:	test   eax,eax
   140006a5f:	jle    0x140006a69
   140006a61:	movsxd rcx,eax
   140006a64:	xor    eax,eax
   140006a66:	rep stos QWORD PTR es:[rdi],rax
   140006a69:	lea    rcx,[rip+0x4cb90]        # 0x140053600
   140006a70:	call   0x140005b40
   140006a75:	xor    edi,edi
   140006a77:	lea    rcx,[rip+0x4cb82]        # 0x140053600
   140006a7e:	mov    QWORD PTR [rax+0x10],rdi
   140006a82:	mov    BYTE PTR [rax+0x1c],dil
   140006a86:	mov    QWORD PTR [rax+0x30],rdi
   140006a8a:	mov    QWORD PTR [rax+0x20],rdi
   140006a8e:	mov    DWORD PTR [rax+0x18],edi
   140006a91:	mov    QWORD PTR [rip+0x4eac0],rax        # 0x140055558
   140006a98:	call   0x140005b40
   140006a9d:	mov    rdx,QWORD PTR [rip+0x4cb7c]        # 0x140053620
   140006aa4:	mov    QWORD PTR [rax+0x10],rdi
   140006aa8:	mov    BYTE PTR [rax+0x1c],dil
   140006aac:	mov    QWORD PTR [rax+0x30],rdi
   140006ab0:	mov    QWORD PTR [rax+0x20],rdi
   140006ab4:	mov    DWORD PTR [rax+0x18],edi
   140006ab7:	mov    QWORD PTR [rip+0x4ea92],rax        # 0x140055550
   140006abe:	mov    rax,QWORD PTR [rip+0x4ea93]        # 0x140055558
   140006ac5:	mov    QWORD PTR [rax],rdi
   140006ac8:	mov    rcx,QWORD PTR [rip+0x4ea89]        # 0x140055558
   140006acf:	mov    rax,QWORD PTR [rip+0x4ea7a]        # 0x140055550
   140006ad6:	mov    QWORD PTR [rcx+0x8],rax
   140006ada:	mov    rax,QWORD PTR [rip+0x4ea6f]        # 0x140055550
   140006ae1:	mov    rcx,QWORD PTR [rip+0x4ea70]        # 0x140055558
   140006ae8:	mov    QWORD PTR [rax],rcx
   140006aeb:	mov    rax,QWORD PTR [rip+0x4ea5e]        # 0x140055550
   140006af2:	movsxd rcx,DWORD PTR [rip+0x4cb1f]        # 0x140053618
   140006af9:	mov    QWORD PTR [rax+0x8],rdi
   140006afd:	mov    rax,QWORD PTR [rip+0x4ea54]        # 0x140055558
   140006b04:	mov    QWORD PTR [rdx],rax
   140006b07:	mov    rax,QWORD PTR [rip+0x4ea42]        # 0x140055550
   140006b0e:	mov    QWORD PTR [rdx+rcx*8-0x8],rax
   140006b13:	add    rsp,0x20
   140006b17:	pop    rdi
   140006b18:	ret    
   140006b19:	int3   
   140006b1a:	int3   
   140006b1b:	int3   
   140006b1c:	int3   
   140006b1d:	int3   
   140006b1e:	int3   
   140006b1f:	int3   
   140006b20:	mov    QWORD PTR [rdx],rcx
   140006b23:	mov    rax,QWORD PTR [rcx+0x8]
   140006b27:	mov    QWORD PTR [rdx+0x8],rax
   140006b2b:	mov    rax,QWORD PTR [rcx+0x8]
   140006b2f:	mov    QWORD PTR [rax],rdx
   140006b32:	mov    QWORD PTR [rcx+0x8],rdx
   140006b36:	ret    
   140006b37:	int3   
   140006b38:	int3   
   140006b39:	int3   
   140006b3a:	int3   
   140006b3b:	int3   
   140006b3c:	int3   
   140006b3d:	int3   
   140006b3e:	int3   
   140006b3f:	int3   
   140006b40:	mov    rax,QWORD PTR [rcx]
   140006b43:	ret    
   140006b44:	int3   
   140006b45:	int3   
   140006b46:	int3   
   140006b47:	int3   
   140006b48:	int3   
   140006b49:	int3   
   140006b4a:	int3   
   140006b4b:	int3   
   140006b4c:	int3   
   140006b4d:	int3   
   140006b4e:	int3   
   140006b4f:	int3   
   140006b50:	mov    QWORD PTR [rsp+0x8],rcx
   140006b55:	push   rbx
   140006b56:	push   rbp
   140006b57:	push   r14
   140006b59:	sub    rsp,0x50
   140006b5d:	mov    ebp,DWORD PTR [rip+0x4cab5]        # 0x140053618
   140006b63:	movsd  xmm1,QWORD PTR [rcx]
   140006b67:	xor    r8d,r8d
   140006b6a:	subsd  xmm1,QWORD PTR [rip+0x4ea4e]        # 0x1400555c0
   140006b72:	mov    QWORD PTR [rsp+0x48],rsi
   140006b77:	mov    QWORD PTR [rsp+0x40],rdi
   140006b7c:	movd   xmm0,ebp
   140006b80:	mov    QWORD PTR [rsp+0x28],r15
   140006b85:	mov    r15,rcx
   140006b88:	divsd  xmm1,QWORD PTR [rip+0x4ea10]        # 0x1400555a0
   140006b90:	cvtdq2pd xmm0,xmm0
   140006b94:	mulsd  xmm1,xmm0
   140006b98:	cvttsd2si r14d,xmm1
   140006b9d:	test   r14d,r14d
   140006ba0:	cmovs  r14d,r8d
   140006ba4:	cmp    r14d,ebp
   140006ba7:	jl     0x140006bad
   140006ba9:	lea    r14d,[rbp-0x1]
   140006bad:	test   r14d,r14d
   140006bb0:	js     0x140006c0d
   140006bb2:	cmp    r14d,ebp
   140006bb5:	jge    0x140006c0d
   140006bb7:	movsxd rax,r14d
   140006bba:	lea    rdx,[rax*8+0x0]
   140006bc2:	mov    rax,QWORD PTR [rip+0x4ca57]        # 0x140053620
   140006bc9:	mov    rbx,QWORD PTR [rdx+rax*1]
   140006bcd:	mov    QWORD PTR [rsp+0x88],rdx
   140006bd5:	test   rbx,rbx
   140006bd8:	je     0x140006c0d
   140006bda:	cmp    QWORD PTR [rbx+0x10],0xfffffffffffffffe
   140006bdf:	jne    0x140006c04
   140006be1:	mov    QWORD PTR [rdx+rax*1],r8
   140006be5:	dec    DWORD PTR [rbx+0x18]
   140006be8:	jne    0x140006c0d
   140006bea:	lea    rdx,[rip+0x4ca0f]        # 0x140053600
   140006bf1:	mov    rcx,rbx
   140006bf4:	call   0x140005c20
   140006bf9:	mov    ebp,DWORD PTR [rip+0x4ca19]        # 0x140053618
   140006bff:	xor    r8d,r8d
   140006c02:	jmp    0x140006c0d
   140006c04:	test   rbx,rbx
   140006c07:	jne    0x140006d2e
   140006c0d:	movsxd rax,r14d
   140006c10:	mov    QWORD PTR [rsp+0x38],r12
   140006c15:	mov    QWORD PTR [rsp+0x30],r13
   140006c1a:	lea    rdx,[rax*8+0x0]
   140006c22:	lea    r12,[rax+0x1]
   140006c26:	mov    ecx,0x1
   140006c2b:	lea    r15d,[r14+0x1]
   140006c2f:	lea    r13d,[r14-0x1]
   140006c33:	dec    rax
   140006c36:	lea    rdi,[rdx+0x8]
   140006c3a:	lea    rsi,[rdx-0x8]
   140006c3e:	mov    QWORD PTR [rsp+0x88],rdx
   140006c46:	mov    QWORD PTR [rsp+0x80],rax
   140006c4e:	mov    DWORD PTR [rsp+0x78],ecx
   140006c52:	test   rax,rax
   140006c55:	js     0x140006ca4
   140006c57:	cmp    r13d,ebp
   140006c5a:	jge    0x140006ca4
   140006c5c:	mov    rax,QWORD PTR [rip+0x4c9bd]        # 0x140053620
   140006c63:	mov    rbx,QWORD PTR [rsi+rax*1]
   140006c67:	test   rbx,rbx
   140006c6a:	je     0x140006c9c
   140006c6c:	cmp    QWORD PTR [rbx+0x10],0xfffffffffffffffe
   140006c71:	jne    0x140006c97
   140006c73:	mov    QWORD PTR [rsi+rax*1],r8
   140006c77:	dec    DWORD PTR [rbx+0x18]
   140006c7a:	jne    0x140006c9c
   140006c7c:	lea    rdx,[rip+0x4c97d]        # 0x140053600
   140006c83:	mov    rcx,rbx
   140006c86:	call   0x140005c20
   140006c8b:	mov    ebp,DWORD PTR [rip+0x4c987]        # 0x140053618
   140006c91:	mov    ecx,DWORD PTR [rsp+0x78]
   140006c95:	jmp    0x140006c9c
   140006c97:	test   rbx,rbx
   140006c9a:	jne    0x140006d19
   140006c9c:	mov    rax,QWORD PTR [rsp+0x80]
   140006ca4:	test   r12,r12
   140006ca7:	js     0x140006cf6
   140006ca9:	cmp    r15d,ebp
   140006cac:	jge    0x140006cf6
   140006cae:	mov    rax,QWORD PTR [rip+0x4c96b]        # 0x140053620
   140006cb5:	mov    rbx,QWORD PTR [rdi+rax*1]
   140006cb9:	test   rbx,rbx
   140006cbc:	je     0x140006cee
   140006cbe:	cmp    QWORD PTR [rbx+0x10],0xfffffffffffffffe
   140006cc3:	jne    0x140006d14
   140006cc5:	xor    r8d,r8d
   140006cc8:	mov    QWORD PTR [rdi+rax*1],r8
   140006ccc:	dec    DWORD PTR [rbx+0x18]
   140006ccf:	jne    0x140006d79
   140006cd5:	lea    rdx,[rip+0x4c924]        # 0x140053600
   140006cdc:	mov    rcx,rbx
   140006cdf:	call   0x140005c20
   140006ce4:	mov    ebp,DWORD PTR [rip+0x4c92e]        # 0x140053618
   140006cea:	mov    ecx,DWORD PTR [rsp+0x78]
   140006cee:	mov    rax,QWORD PTR [rsp+0x80]
   140006cf6:	xor    r8d,r8d
   140006cf9:	inc    ecx
   140006cfb:	dec    r13d
   140006cfe:	inc    r15d
   140006d01:	add    rdi,0x8
   140006d05:	sub    rsi,0x8
   140006d09:	dec    rax
   140006d0c:	inc    r12
   140006d0f:	jmp    0x140006c46
   140006d14:	test   rbx,rbx
   140006d17:	je     0x140006cee
   140006d19:	add    DWORD PTR [rip+0x4c909],ecx        # 0x140053628
   140006d1f:	mov    r15,QWORD PTR [rsp+0x70]
   140006d24:	mov    r13,QWORD PTR [rsp+0x30]
   140006d29:	mov    r12,QWORD PTR [rsp+0x38]
   140006d2e:	mov    rsi,QWORD PTR [rip+0x4e823]        # 0x140055558
   140006d35:	inc    DWORD PTR [rip+0x4c8e1]        # 0x14005361c
   140006d3b:	mov    rdi,QWORD PTR [rip+0x4e80e]        # 0x140055550
   140006d42:	cmp    rbx,rsi
   140006d45:	je     0x140006d86
   140006d47:	cmp    rbx,rdi
   140006d4a:	je     0x140006d60
   140006d4c:	mov    rdx,r15
   140006d4f:	mov    rcx,rbx
   140006d52:	call   0x140006f90
   140006d57:	test   eax,eax
   140006d59:	jne    0x140006d86
   140006d5b:	nop    DWORD PTR [rax+rax*1+0x0]
   140006d60:	mov    rbx,QWORD PTR [rbx]
   140006d63:	cmp    rbx,rsi
   140006d66:	je     0x140006da1
   140006d68:	mov    rdx,r15
   140006d6b:	mov    rcx,rbx
   140006d6e:	call   0x140006f90
   140006d73:	test   eax,eax
   140006d75:	je     0x140006d60
   140006d77:	jmp    0x140006da1
   140006d79:	mov    rax,QWORD PTR [rsp+0x80]
   140006d81:	jmp    0x140006cf9
   140006d86:	mov    rbx,QWORD PTR [rbx+0x8]
   140006d8a:	cmp    rbx,rdi
   140006d8d:	je     0x140006d9e
   140006d8f:	mov    rdx,r15
   140006d92:	mov    rcx,rbx
   140006d95:	call   0x140006f90
   140006d9a:	test   eax,eax
   140006d9c:	jne    0x140006d86
   140006d9e:	mov    rbx,QWORD PTR [rbx]
   140006da1:	mov    r15,QWORD PTR [rsp+0x28]
   140006da6:	mov    rdi,QWORD PTR [rsp+0x40]
   140006dab:	mov    rsi,QWORD PTR [rsp+0x48]
   140006db0:	test   r14d,r14d
   140006db3:	jle    0x140006ddf
   140006db5:	lea    eax,[rbp-0x1]
   140006db8:	cmp    r14d,eax
   140006dbb:	jge    0x140006ddf
   140006dbd:	mov    rcx,QWORD PTR [rip+0x4c85c]        # 0x140053620
   140006dc4:	mov    rdx,QWORD PTR [rsp+0x88]
   140006dcc:	mov    rax,QWORD PTR [rdx+rcx*1]
   140006dd0:	test   rax,rax
   140006dd3:	je     0x140006dd8
   140006dd5:	dec    DWORD PTR [rax+0x18]
   140006dd8:	mov    QWORD PTR [rdx+rcx*1],rbx
   140006ddc:	inc    DWORD PTR [rbx+0x18]
   140006ddf:	mov    rax,rbx
   140006de2:	add    rsp,0x50
   140006de6:	pop    r14
   140006de8:	pop    rbp
   140006de9:	pop    rbx
   140006dea:	ret    
   140006deb:	int3   
   140006dec:	int3   
   140006ded:	int3   
   140006dee:	int3   
   140006def:	int3   
   140006df0:	mov    rax,QWORD PTR [rcx+0x8]
   140006df4:	ret    
   140006df5:	int3   
   140006df6:	int3   
   140006df7:	int3   
   140006df8:	int3   
   140006df9:	int3   
   140006dfa:	int3   
   140006dfb:	int3   
   140006dfc:	int3   
   140006dfd:	int3   
   140006dfe:	int3   
   140006dff:	int3   
   140006e00:	mov    QWORD PTR [rsp+0x8],rbx
   140006e05:	push   rdi
   140006e06:	sub    rsp,0x20
   140006e0a:	mov    rbx,rcx
   140006e0d:	lea    rcx,[rip+0x4c7ec]        # 0x140053600
   140006e14:	movzx  edi,dl
   140006e17:	call   0x140005b40
   140006e1c:	xor    ecx,ecx
   140006e1e:	mov    QWORD PTR [rax+0x10],rbx
   140006e22:	mov    rbx,QWORD PTR [rsp+0x30]
   140006e27:	mov    BYTE PTR [rax+0x1c],dil
   140006e2b:	mov    QWORD PTR [rax+0x30],rcx
   140006e2f:	mov    QWORD PTR [rax+0x20],rcx
   140006e33:	mov    DWORD PTR [rax+0x18],ecx
   140006e36:	add    rsp,0x20
   140006e3a:	pop    rdi
   140006e3b:	ret    
   140006e3c:	int3   
   140006e3d:	int3   
   140006e3e:	int3   
   140006e3f:	int3   
   140006e40:	sub    rsp,0x48
   140006e44:	mov    r8,QWORD PTR [rcx+0x10]
   140006e48:	mov    rax,QWORD PTR [rdx+0x10]
   140006e4c:	test   r8,r8
   140006e4f:	je     0x140006e63
   140006e51:	test   rax,rax
   140006e54:	je     0x140006e63
   140006e56:	mov    r9,QWORD PTR [r8+0x30]
   140006e5a:	mov    r10,QWORD PTR [rax+0x30]
   140006e5e:	cmp    r9,r10
   140006e61:	jne    0x140006e6a
   140006e63:	xor    eax,eax
   140006e65:	add    rsp,0x48
   140006e69:	ret    
   140006e6a:	movsd  xmm4,QWORD PTR [r8]
   140006e6f:	movsd  xmm3,QWORD PTR [rax+0x8]
   140006e74:	movsd  xmm5,QWORD PTR [r8+0x8]
   140006e7a:	movsd  xmm0,QWORD PTR [rax]
   140006e7e:	movaps xmm2,xmm4
   140006e81:	mulsd  xmm2,xmm3
   140006e85:	mulsd  xmm0,xmm5
   140006e89:	subsd  xmm2,xmm0
   140006e8d:	comisd xmm2,QWORD PTR [rip+0x368eb]        # 0x14003d780
   140006e95:	jbe    0x140006ea5
   140006e97:	movsd  xmm0,QWORD PTR [rip+0x368d9]        # 0x14003d778
   140006e9f:	comisd xmm0,xmm2
   140006ea3:	ja     0x140006e63
   140006ea5:	movsd  xmm1,QWORD PTR [r8+0x10]
   140006eab:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140006eb0:	movaps XMMWORD PTR [rsp+0x20],xmm7
   140006eb5:	movsd  xmm7,QWORD PTR [rax+0x10]
   140006eba:	movaps xmm6,xmm1
   140006ebd:	mulsd  xmm1,QWORD PTR [rax]
   140006ec1:	movaps xmm0,xmm7
   140006ec4:	mulsd  xmm0,xmm5
   140006ec8:	mulsd  xmm6,xmm3
   140006ecc:	mulsd  xmm7,xmm4
   140006ed0:	subsd  xmm6,xmm0
   140006ed4:	movsd  xmm0,QWORD PTR [r9+0x8]
   140006eda:	subsd  xmm7,xmm1
   140006ede:	divsd  xmm6,xmm2
   140006ee2:	divsd  xmm7,xmm2
   140006ee6:	movsd  xmm1,QWORD PTR [r10+0x8]
   140006eec:	comisd xmm1,xmm0
   140006ef0:	ja     0x140006f06
   140006ef2:	ucomisd xmm0,xmm1
   140006ef6:	jp     0x140006f0c
   140006ef8:	jne    0x140006f0c
   140006efa:	movsd  xmm0,QWORD PTR [r10]
   140006eff:	comisd xmm0,QWORD PTR [r9]
   140006f04:	jbe    0x140006f0c
   140006f06:	mov    rdx,rcx
   140006f09:	mov    rax,r8
   140006f0c:	mov    rax,QWORD PTR [rax+0x30]
   140006f10:	xor    ecx,ecx
   140006f12:	comisd xmm6,QWORD PTR [rax]
   140006f16:	setae  cl
   140006f19:	test   ecx,ecx
   140006f1b:	je     0x140006f47
   140006f1d:	cmp    BYTE PTR [rdx+0x1c],0x0
   140006f21:	je     0x140006f4d
   140006f23:	call   0x140004800
   140006f28:	movsd  QWORD PTR [rax],xmm6
   140006f2c:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140006f31:	movsd  QWORD PTR [rax+0x8],xmm7
   140006f36:	movaps xmm7,XMMWORD PTR [rsp+0x20]
   140006f3b:	mov    DWORD PTR [rax+0x14],0x0
   140006f42:	add    rsp,0x48
   140006f46:	ret    
   140006f47:	cmp    BYTE PTR [rdx+0x1c],0x1
   140006f4b:	jne    0x140006f23
   140006f4d:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140006f52:	movaps xmm7,XMMWORD PTR [rsp+0x20]
   140006f57:	xor    eax,eax
   140006f59:	add    rsp,0x48
   140006f5d:	ret    
   140006f5e:	int3   
   140006f5f:	int3   
   140006f60:	mov    rax,QWORD PTR [rcx+0x10]
   140006f64:	test   rax,rax
   140006f67:	jne    0x140006f71
   140006f69:	mov    rax,QWORD PTR [rip+0x4e610]        # 0x140055580
   140006f70:	ret    
   140006f71:	cmp    BYTE PTR [rcx+0x1c],0x0
   140006f75:	jne    0x140006f7c
   140006f77:	mov    rax,QWORD PTR [rax+0x28]
   140006f7b:	ret    
   140006f7c:	mov    rax,QWORD PTR [rax+0x30]
   140006f80:	ret    
   140006f81:	int3   
   140006f82:	int3   
   140006f83:	int3   
   140006f84:	int3   
   140006f85:	int3   
   140006f86:	int3   
   140006f87:	int3   
   140006f88:	int3   
   140006f89:	int3   
   140006f8a:	int3   
   140006f8b:	int3   
   140006f8c:	int3   
   140006f8d:	int3   
   140006f8e:	int3   
   140006f8f:	int3   
   140006f90:	sub    rsp,0x28
   140006f94:	movsd  xmm2,QWORD PTR [rdx]
   140006f98:	mov    r9,QWORD PTR [rcx+0x10]
   140006f9c:	xor    r8d,r8d
   140006f9f:	mov    r11,QWORD PTR [r9+0x30]
   140006fa3:	mov    r10d,r8d
   140006fa6:	mov    rax,rdx
   140006fa9:	movzx  edx,BYTE PTR [rcx+0x1c]
   140006fad:	movsd  xmm5,QWORD PTR [r11]
   140006fb2:	comisd xmm2,xmm5
   140006fb6:	seta   r10b
   140006fba:	test   r10d,r10d
   140006fbd:	je     0x140006fcc
   140006fbf:	test   dl,dl
   140006fc1:	jne    0x140006fd8
   140006fc3:	lea    eax,[r8+0x1]
   140006fc7:	add    rsp,0x28
   140006fcb:	ret    
   140006fcc:	cmp    dl,0x1
   140006fcf:	jne    0x140006fd8
   140006fd1:	xor    eax,eax
   140006fd3:	add    rsp,0x28
   140006fd7:	ret    
   140006fd8:	movsd  xmm0,QWORD PTR [r9]
   140006fdd:	movaps XMMWORD PTR [rsp+0x10],xmm6
   140006fe2:	movaps XMMWORD PTR [rsp],xmm7
   140006fe6:	ucomisd xmm0,QWORD PTR [rip+0x363f2]        # 0x14003d3e0
   140006fee:	jp     0x1400070e3
   140006ff4:	jne    0x1400070e3
   140006ffa:	movsd  xmm1,QWORD PTR [rax+0x8]
   140006fff:	movsd  xmm4,QWORD PTR [r9+0x8]
   140007005:	mov    eax,r8d
   140007008:	xorps  xmm7,xmm7
   14000700b:	mov    ecx,r8d
   14000700e:	comisd xmm7,xmm4
   140007012:	movaps xmm6,xmm1
   140007015:	movaps xmm3,xmm2
   140007018:	movaps xmm0,xmm4
   14000701b:	seta   cl
   14000701e:	test   r10d,r10d
   140007021:	sete   al
   140007024:	subsd  xmm6,QWORD PTR [r11+0x8]
   14000702a:	and    ecx,eax
   14000702c:	comisd xmm4,xmm7
   140007030:	mov    eax,r8d
   140007033:	setae  al
   140007036:	and    eax,r10d
   140007039:	or     ecx,eax
   14000703b:	mov    ecx,r8d
   14000703e:	subsd  xmm3,xmm5
   140007042:	je     0x140007059
   140007044:	mulsd  xmm0,xmm3
   140007048:	comisd xmm6,xmm0
   14000704c:	setae  cl
   14000704f:	test   ecx,ecx
   140007051:	jne    0x14000711e
   140007057:	jmp    0x140007082
   140007059:	mulsd  xmm0,xmm1
   14000705d:	addsd  xmm0,xmm2
   140007061:	comisd xmm0,QWORD PTR [r9+0x10]
   140007067:	seta   cl
   14000706a:	comisd xmm7,xmm4
   14000706e:	jbe    0x14000707a
   140007070:	test   ecx,ecx
   140007072:	mov    eax,r8d
   140007075:	sete   al
   140007078:	mov    ecx,eax
   14000707a:	test   ecx,ecx
   14000707c:	je     0x14000711e
   140007082:	mov    rax,QWORD PTR [r9+0x28]
   140007086:	movaps xmm1,xmm3
   140007089:	movaps xmm0,xmm6
   14000708c:	mov    ecx,r8d
   14000708f:	subsd  xmm5,QWORD PTR [rax]
   140007093:	mulsd  xmm1,xmm3
   140007097:	mulsd  xmm3,QWORD PTR [rip+0x36641]        # 0x14003d6e0
   14000709f:	mulsd  xmm0,xmm6
   1400070a3:	subsd  xmm1,xmm0
   1400070a7:	movaps xmm0,xmm4
   1400070aa:	divsd  xmm3,xmm5
   1400070ae:	mulsd  xmm0,xmm4
   1400070b2:	mulsd  xmm5,xmm6
   1400070b6:	addsd  xmm3,QWORD PTR [rip+0x36322]        # 0x14003d3e0
   1400070be:	addsd  xmm3,xmm0
   1400070c2:	mulsd  xmm1,xmm4
   1400070c6:	mulsd  xmm3,xmm5
   1400070ca:	comisd xmm3,xmm1
   1400070ce:	seta   cl
   1400070d1:	comisd xmm7,xmm4
   1400070d5:	jbe    0x14000711e
   1400070d7:	test   ecx,ecx
   1400070d9:	mov    eax,r8d
   1400070dc:	sete   al
   1400070df:	mov    ecx,eax
   1400070e1:	jmp    0x14000711e
   1400070e3:	movsd  xmm1,QWORD PTR [r9+0x10]
   1400070e9:	mulsd  xmm0,xmm2
   1400070ed:	subsd  xmm2,xmm5
   1400070f1:	mulsd  xmm2,xmm2
   1400070f5:	mov    ecx,r8d
   1400070f8:	subsd  xmm1,xmm0
   1400070fc:	movsd  xmm0,QWORD PTR [rax+0x8]
   140007101:	subsd  xmm0,xmm1
   140007105:	subsd  xmm1,QWORD PTR [r11+0x8]
   14000710b:	mulsd  xmm0,xmm0
   14000710f:	mulsd  xmm1,xmm1
   140007113:	addsd  xmm1,xmm2
   140007117:	comisd xmm0,xmm1
   14000711b:	seta   cl
   14000711e:	movaps xmm7,XMMWORD PTR [rsp]
   140007122:	movaps xmm6,XMMWORD PTR [rsp+0x10]
   140007127:	test   dl,dl
   140007129:	je     0x140007134
   14000712b:	test   ecx,ecx
   14000712d:	sete   r8b
   140007131:	mov    ecx,r8d
   140007134:	mov    eax,ecx
   140007136:	add    rsp,0x28
   14000713a:	ret    
   14000713b:	int3   
   14000713c:	int3   
   14000713d:	int3   
   14000713e:	int3   
   14000713f:	int3   
   140007140:	mov    rax,QWORD PTR [rcx+0x10]
   140007144:	test   rax,rax
   140007147:	jne    0x140007151
   140007149:	mov    rax,QWORD PTR [rip+0x4e430]        # 0x140055580
   140007150:	ret    
   140007151:	cmp    BYTE PTR [rcx+0x1c],0x0
   140007155:	jne    0x14000715c
   140007157:	mov    rax,QWORD PTR [rax+0x30]
   14000715b:	ret    
   14000715c:	mov    rax,QWORD PTR [rax+0x28]
   140007160:	ret    
   140007161:	int3   
   140007162:	int3   
   140007163:	int3   
   140007164:	int3   
   140007165:	int3   
   140007166:	int3   
   140007167:	int3   
   140007168:	int3   
   140007169:	int3   
   14000716a:	int3   
   14000716b:	int3   
   14000716c:	int3   
   14000716d:	int3   
   14000716e:	int3   
   14000716f:	int3   
   140007170:	mov    QWORD PTR [rsp+0x8],rbx
   140007175:	mov    QWORD PTR [rsp+0x10],rsi
   14000717a:	mov    QWORD PTR [rsp+0x20],rdi
   14000717f:	push   rbp
   140007180:	push   r12
   140007182:	push   r13
   140007184:	push   r14
   140007186:	push   r15
   140007188:	lea    rbp,[rsp-0x75280]
   140007190:	mov    eax,0x75380
   140007195:	call   0x14003b8f0
   14000719a:	sub    rsp,rax
   14000719d:	mov    rbx,rcx
   1400071a0:	movsxd r14,edx
   1400071a3:	mov    r12d,edx
   1400071a6:	mov    rcx,r14
   1400071a9:	xor    edi,edi
   1400071ab:	xor    esi,esi
   1400071ad:	shl    rcx,0x4
   1400071b1:	call   QWORD PTR [rip+0x35fb1]        # 0x14003d168
   1400071b7:	xor    r15d,r15d
   1400071ba:	xor    r8d,r8d
   1400071bd:	mov    QWORD PTR [rbp+0x752c0],rax
   1400071c4:	test   r12d,r12d
   1400071c7:	jle    0x14000720b
   1400071c9:	cmp    r14,0x2
   1400071cd:	jl     0x1400071f8
   1400071cf:	lea    rdx,[r14-0x1]
   1400071d3:	nop    DWORD PTR [rax+0x0]
   1400071d7:	nop    WORD PTR [rax+rax*1+0x0]
   1400071e0:	mov    rcx,QWORD PTR [rbx+r8*8]
   1400071e4:	mov    rax,QWORD PTR [rbx+r8*8+0x8]
   1400071e9:	add    r8,0x2
   1400071ed:	add    edi,DWORD PTR [rcx+0x8]
   1400071f0:	add    esi,DWORD PTR [rax+0x8]
   1400071f3:	cmp    r8,rdx
   1400071f6:	jl     0x1400071e0
   1400071f8:	cmp    r8,r14
   1400071fb:	jge    0x140007205
   1400071fd:	mov    rax,QWORD PTR [rbx+r8*8]
   140007201:	mov    r15d,DWORD PTR [rax+0x8]
   140007205:	lea    eax,[rsi+rdi*1]
   140007208:	add    r15d,eax
   14000720b:	movsxd rcx,r15d
   14000720e:	shl    rcx,0x5
   140007212:	call   QWORD PTR [rip+0x35f50]        # 0x14003d168
   140007218:	xor    r10d,r10d
   14000721b:	mov    r13,rax
   14000721e:	test   r12d,r12d
   140007221:	jle    0x1400072d7
   140007227:	mov    rsi,QWORD PTR [rbp+0x752c0]
   14000722e:	xor    r11d,r11d
   140007231:	mov    r14,r12
   140007234:	mov    rdi,rsi
   140007237:	nop    WORD PTR [rax+rax*1+0x0]
   140007240:	movsxd rcx,r10d
   140007243:	xor    r9d,r9d
   140007246:	shl    rcx,0x5
   14000724a:	add    rcx,r13
   14000724d:	mov    QWORD PTR [rsi],rcx
   140007250:	mov    rcx,QWORD PTR [rbx]
   140007253:	cmp    DWORD PTR [rcx+0x8],r9d
   140007257:	jle    0x1400072b0
   140007259:	mov    rax,r11
   14000725c:	lea    rdx,[r13+0x10]
   140007260:	xor    r8d,r8d
   140007263:	shl    rax,0x5
   140007267:	add    rdx,rax
   14000726a:	nop    WORD PTR [rax+rax*1+0x0]
   140007270:	mov    rax,QWORD PTR [rcx]
   140007273:	inc    r9d
   140007276:	inc    r10d
   140007279:	mov    rcx,QWORD PTR [r8+rax*1]
   14000727d:	inc    r11
   140007280:	lea    rdx,[rdx+0x20]
   140007284:	mov    QWORD PTR [rdx-0x30],rcx
   140007288:	mov    rax,QWORD PTR [rbx]
   14000728b:	lea    r8,[r8+0x10]
   14000728f:	mov    rcx,QWORD PTR [rax]
   140007292:	mov    rax,QWORD PTR [rcx+r8*1-0x8]
   140007297:	mov    QWORD PTR [rdx-0x20],rdi
   14000729b:	mov    QWORD PTR [rdx-0x18],0x0
   1400072a3:	mov    QWORD PTR [rdx-0x28],rax
   1400072a7:	mov    rcx,QWORD PTR [rbx]
   1400072aa:	cmp    r9d,DWORD PTR [rcx+0x8]
   1400072ae:	jl     0x140007270
   1400072b0:	lea    eax,[r10-0x1]
   1400072b4:	add    rsi,0x10
   1400072b8:	add    rdi,0x10
   1400072bc:	movsxd rcx,eax
   1400072bf:	add    rbx,0x8
   1400072c3:	shl    rcx,0x5
   1400072c7:	add    rcx,r13
   1400072ca:	mov    QWORD PTR [rsi-0x8],rcx
   1400072ce:	dec    r14
   1400072d1:	jne    0x140007240
   1400072d7:	mov    rdx,QWORD PTR [rbp+0x752c0]
   1400072de:	lea    r9,[rbp-0x80]
   1400072e2:	lea    r8,[rsp+0x30]
   1400072e7:	mov    rcx,r13
   1400072ea:	mov    DWORD PTR [rsp+0x30],r15d
   1400072ef:	mov    DWORD PTR [rsp+0x34],r12d
   1400072f4:	call   0x14000ab70
   1400072f9:	mov    edx,DWORD PTR [rsp+0x38]
   1400072fd:	xor    r15d,r15d
   140007300:	mov    r12d,0x1
   140007306:	test   edx,edx
   140007308:	jle    0x140007540
   14000730e:	lea    rbx,[rbp-0x58]
   140007312:	nop    DWORD PTR [rax+0x0]
   140007316:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007320:	mov    rax,QWORD PTR [rbx-0x28]
   140007324:	movups xmm0,XMMWORD PTR [rax]
   140007327:	mov    rcx,QWORD PTR [rax+0x10]
   14000732b:	movups XMMWORD PTR [rsp+0x60],xmm0
   140007330:	cmp    rax,QWORD PTR [rcx+0x8]
   140007334:	jne    0x14000733b
   140007336:	mov    rax,QWORD PTR [rcx]
   140007339:	jmp    0x14000733f
   14000733b:	add    rax,0x20
   14000733f:	movups xmm0,XMMWORD PTR [rax]
   140007342:	mov    rax,QWORD PTR [rbx-0x20]
   140007346:	movups XMMWORD PTR [rsp+0x70],xmm0
   14000734b:	movups xmm0,XMMWORD PTR [rax]
   14000734e:	mov    rcx,QWORD PTR [rax+0x10]
   140007352:	movups XMMWORD PTR [rsp+0x50],xmm0
   140007357:	cmp    rax,QWORD PTR [rcx+0x8]
   14000735b:	jne    0x140007362
   14000735d:	mov    rax,QWORD PTR [rcx]
   140007360:	jmp    0x140007366
   140007362:	add    rax,0x20
   140007366:	movups xmm0,XMMWORD PTR [rax]
   140007369:	movsd  xmm2,QWORD PTR [rsp+0x60]
   14000736f:	movsd  xmm3,QWORD PTR [rsp+0x70]
   140007375:	ucomisd xmm2,xmm3
   140007379:	movups XMMWORD PTR [rsp+0x40],xmm0
   14000737e:	jp     0x1400073d1
   140007380:	jne    0x1400073d1
   140007382:	movsd  xmm1,QWORD PTR [rbx-0x8]
   140007387:	ucomisd xmm2,xmm1
   14000738b:	jp     0x14000739d
   14000738d:	jne    0x14000739d
   14000738f:	movsd  xmm0,QWORD PTR [rsp+0x68]
   140007395:	ucomisd xmm0,QWORD PTR [rbx]
   140007399:	jp     0x14000739d
   14000739b:	je     0x1400073b3
   14000739d:	ucomisd xmm3,xmm1
   1400073a1:	jp     0x14000741e
   1400073a3:	jne    0x14000741e
   1400073a5:	movsd  xmm0,QWORD PTR [rsp+0x78]
   1400073ab:	ucomisd xmm0,QWORD PTR [rbx]
   1400073af:	jp     0x14000741e
   1400073b1:	jne    0x14000741e
   1400073b3:	movsd  xmm0,QWORD PTR [rsp+0x50]
   1400073b9:	movsd  xmm1,QWORD PTR [rsp+0x40]
   1400073bf:	ucomisd xmm0,xmm1
   1400073c3:	jp     0x140007530
   1400073c9:	jne    0x140007530
   1400073cf:	jmp    0x1400073e5
   1400073d1:	movsd  xmm0,QWORD PTR [rsp+0x50]
   1400073d7:	movsd  xmm1,QWORD PTR [rsp+0x40]
   1400073dd:	ucomisd xmm0,xmm1
   1400073e1:	jp     0x14000741e
   1400073e3:	jne    0x14000741e
   1400073e5:	movsd  xmm2,QWORD PTR [rbx-0x8]
   1400073ea:	ucomisd xmm0,xmm2
   1400073ee:	jp     0x140007404
   1400073f0:	jne    0x140007404
   1400073f2:	movsd  xmm0,QWORD PTR [rsp+0x58]
   1400073f8:	ucomisd xmm0,QWORD PTR [rbx]
   1400073fc:	jp     0x140007404
   1400073fe:	je     0x140007530
   140007404:	ucomisd xmm1,xmm2
   140007408:	jp     0x14000741e
   14000740a:	jne    0x14000741e
   14000740c:	movsd  xmm0,QWORD PTR [rsp+0x48]
   140007412:	ucomisd xmm0,QWORD PTR [rbx]
   140007416:	jp     0x14000741e
   140007418:	je     0x140007530
   14000741e:	xor    r12d,r12d
   140007421:	cmp    BYTE PTR [rip+0x4e091],r12b        # 0x1400554b9
   140007428:	je     0x140007530
   14000742e:	call   QWORD PTR [rip+0x35e9c]        # 0x14003d2d0
   140007434:	movsd  xmm3,QWORD PTR [rbx-0x8]
   140007439:	movsd  xmm0,QWORD PTR [rbx]
   14000743d:	lea    rdx,[rip+0x36344]        # 0x14003d788
   140007444:	mov    r8d,r15d
   140007447:	lea    rcx,[rax+0x60]
   14000744b:	movq   r9,xmm3
   140007450:	movsd  QWORD PTR [rsp+0x20],xmm0
   140007456:	call   QWORD PTR [rip+0x35e64]        # 0x14003d2c0
   14000745c:	mov    rdi,QWORD PTR [rbx-0x28]
   140007460:	mov    rax,QWORD PTR [rdi+0x10]
   140007464:	mov    rcx,QWORD PTR [rax+0x8]
   140007468:	cmp    rdi,rcx
   14000746b:	jne    0x140007472
   14000746d:	mov    r14,QWORD PTR [rax]
   140007470:	jmp    0x140007476
   140007472:	lea    r14,[rdi+0x20]
   140007476:	cmp    rdi,rcx
   140007479:	jne    0x140007480
   14000747b:	mov    rsi,QWORD PTR [rax]
   14000747e:	jmp    0x140007484
   140007480:	lea    rsi,[rdi+0x20]
   140007484:	call   QWORD PTR [rip+0x35e46]        # 0x14003d2d0
   14000748a:	movsd  xmm3,QWORD PTR [rdi+0x8]
   14000748f:	movsd  xmm2,QWORD PTR [rdi]
   140007493:	lea    rdx,[rip+0x3630e]        # 0x14003d7a8
   14000749a:	lea    rcx,[rax+0x60]
   14000749e:	movsd  xmm0,QWORD PTR [r14+0x8]
   1400074a4:	movsd  xmm1,QWORD PTR [rsi]
   1400074a8:	movq   r9,xmm3
   1400074ad:	movq   r8,xmm2
   1400074b2:	movsd  QWORD PTR [rsp+0x28],xmm0
   1400074b8:	movsd  QWORD PTR [rsp+0x20],xmm1
   1400074be:	call   QWORD PTR [rip+0x35dfc]        # 0x14003d2c0
   1400074c4:	mov    rdi,QWORD PTR [rbx-0x20]
   1400074c8:	mov    rsi,QWORD PTR [rdi+0x10]
   1400074cc:	mov    rax,QWORD PTR [rsi+0x8]
   1400074d0:	cmp    rdi,rax
   1400074d3:	jne    0x1400074da
   1400074d5:	mov    r14,QWORD PTR [rsi]
   1400074d8:	jmp    0x1400074de
   1400074da:	lea    r14,[rdi+0x20]
   1400074de:	cmp    rdi,rax
   1400074e1:	jne    0x1400074e8
   1400074e3:	mov    rsi,QWORD PTR [rsi]
   1400074e6:	jmp    0x1400074ec
   1400074e8:	lea    rsi,[rdi+0x20]
   1400074ec:	call   QWORD PTR [rip+0x35dde]        # 0x14003d2d0
   1400074f2:	movsd  xmm3,QWORD PTR [rdi+0x8]
   1400074f7:	movsd  xmm2,QWORD PTR [rdi]
   1400074fb:	lea    rdx,[rip+0x362ce]        # 0x14003d7d0
   140007502:	lea    rcx,[rax+0x60]
   140007506:	movsd  xmm0,QWORD PTR [r14+0x8]
   14000750c:	movsd  xmm1,QWORD PTR [rsi]
   140007510:	movq   r9,xmm3
   140007515:	movq   r8,xmm2
   14000751a:	movsd  QWORD PTR [rsp+0x28],xmm0
   140007520:	movsd  QWORD PTR [rsp+0x20],xmm1
   140007526:	call   QWORD PTR [rip+0x35d94]        # 0x14003d2c0
   14000752c:	mov    edx,DWORD PTR [rsp+0x38]
   140007530:	inc    r15d
   140007533:	add    rbx,0x30
   140007537:	cmp    r15d,edx
   14000753a:	jl     0x140007320
   140007540:	mov    rcx,QWORD PTR [rbp+0x752c0]
   140007547:	call   QWORD PTR [rip+0x35d53]        # 0x14003d2a0
   14000754d:	mov    rcx,r13
   140007550:	call   QWORD PTR [rip+0x35d4a]        # 0x14003d2a0
   140007556:	lea    r11,[rsp+0x75380]
   14000755e:	mov    eax,r12d
   140007561:	mov    rbx,QWORD PTR [r11+0x30]
   140007565:	mov    rsi,QWORD PTR [r11+0x38]
   140007569:	mov    rdi,QWORD PTR [r11+0x48]
   14000756d:	mov    rsp,r11
   140007570:	pop    r15
   140007572:	pop    r14
   140007574:	pop    r13
   140007576:	pop    r12
   140007578:	pop    rbp
   140007579:	ret    
   14000757a:	int3   
   14000757b:	int3   
   14000757c:	int3   
   14000757d:	int3   
   14000757e:	int3   
   14000757f:	int3   
   140007580:	movsd  xmm4,QWORD PTR [rcx]
   140007584:	movsd  xmm2,QWORD PTR [rcx+0x8]
   140007589:	mov    r11d,0x1
   14000758f:	mov    r10d,edx
   140007592:	movaps xmm3,xmm4
   140007595:	movaps xmm5,xmm2
   140007598:	cmp    edx,r11d
   14000759b:	jle    0x1400076c7
   1400075a1:	lea    eax,[rdx-0x1]
   1400075a4:	cmp    eax,0x4
   1400075a7:	jl     0x140007685
   1400075ad:	lea    eax,[rdx-0x5]
   1400075b0:	shr    eax,0x2
   1400075b3:	inc    eax
   1400075b5:	mov    edx,eax
   1400075b7:	lea    r11d,[rax*4+0x1]
   1400075bf:	nop
   1400075c0:	movsd  xmm0,QWORD PTR [rcx+0x10]
   1400075c5:	comisd xmm3,xmm0
   1400075c9:	jbe    0x1400075ce
   1400075cb:	movaps xmm3,xmm0
   1400075ce:	movsd  xmm1,QWORD PTR [rcx+0x18]
   1400075d3:	comisd xmm5,xmm1
   1400075d7:	jbe    0x1400075dc
   1400075d9:	movaps xmm5,xmm1
   1400075dc:	comisd xmm0,xmm4
   1400075e0:	jbe    0x1400075e5
   1400075e2:	movaps xmm4,xmm0
   1400075e5:	comisd xmm1,xmm2
   1400075e9:	jbe    0x1400075ee
   1400075eb:	movaps xmm2,xmm1
   1400075ee:	movsd  xmm0,QWORD PTR [rcx+0x20]
   1400075f3:	comisd xmm3,xmm0
   1400075f7:	jbe    0x1400075fc
   1400075f9:	movaps xmm3,xmm0
   1400075fc:	movsd  xmm1,QWORD PTR [rcx+0x28]
   140007601:	comisd xmm5,xmm1
   140007605:	jbe    0x14000760a
   140007607:	movaps xmm5,xmm1
   14000760a:	comisd xmm0,xmm4
   14000760e:	jbe    0x140007613
   140007610:	movaps xmm4,xmm0
   140007613:	comisd xmm1,xmm2
   140007617:	jbe    0x14000761c
   140007619:	movaps xmm2,xmm1
   14000761c:	movsd  xmm0,QWORD PTR [rcx+0x30]
   140007621:	comisd xmm3,xmm0
   140007625:	jbe    0x14000762a
   140007627:	movaps xmm3,xmm0
   14000762a:	movsd  xmm1,QWORD PTR [rcx+0x38]
   14000762f:	comisd xmm5,xmm1
   140007633:	jbe    0x140007638
   140007635:	movaps xmm5,xmm1
   140007638:	comisd xmm0,xmm4
   14000763c:	jbe    0x140007641
   14000763e:	movaps xmm4,xmm0
   140007641:	comisd xmm1,xmm2
   140007645:	jbe    0x14000764a
   140007647:	movaps xmm2,xmm1
   14000764a:	movsd  xmm1,QWORD PTR [rcx+0x40]
   14000764f:	comisd xmm3,xmm1
   140007653:	jbe    0x140007658
   140007655:	movaps xmm3,xmm1
   140007658:	movsd  xmm0,QWORD PTR [rcx+0x48]
   14000765d:	comisd xmm5,xmm0
   140007661:	jbe    0x140007666
   140007663:	movaps xmm5,xmm0
   140007666:	comisd xmm1,xmm4
   14000766a:	jbe    0x14000766f
   14000766c:	movaps xmm4,xmm1
   14000766f:	comisd xmm0,xmm2
   140007673:	jbe    0x140007678
   140007675:	movaps xmm2,xmm0
   140007678:	add    rcx,0x40
   14000767c:	dec    rdx
   14000767f:	jne    0x1400075c0
   140007685:	cmp    r11d,r10d
   140007688:	jge    0x1400076c7
   14000768a:	sub    r10d,r11d
   14000768d:	mov    eax,r10d
   140007690:	movsd  xmm0,QWORD PTR [rcx+0x10]
   140007695:	lea    rcx,[rcx+0x10]
   140007699:	comisd xmm3,xmm0
   14000769d:	jbe    0x1400076a2
   14000769f:	movaps xmm3,xmm0
   1400076a2:	movsd  xmm1,QWORD PTR [rcx+0x8]
   1400076a7:	comisd xmm5,xmm1
   1400076ab:	jbe    0x1400076b0
   1400076ad:	movaps xmm5,xmm1
   1400076b0:	comisd xmm0,xmm4
   1400076b4:	jbe    0x1400076b9
   1400076b6:	movaps xmm4,xmm0
   1400076b9:	comisd xmm1,xmm2
   1400076bd:	jbe    0x1400076c2
   1400076bf:	movaps xmm2,xmm1
   1400076c2:	dec    rax
   1400076c5:	jne    0x140007690
   1400076c7:	movsd  QWORD PTR [r8],xmm3
   1400076cc:	movsd  QWORD PTR [r8+0x8],xmm5
   1400076d2:	movsd  QWORD PTR [r9],xmm4
   1400076d7:	movsd  QWORD PTR [r9+0x8],xmm2
   1400076dd:	ret    
   1400076de:	int3   
   1400076df:	int3   
   1400076e0:	mov    rcx,QWORD PTR [rcx+0x28]
   1400076e4:	rex.W jmp QWORD PTR [rip+0x35bb5]        # 0x14003d2a0
   1400076eb:	int3   
   1400076ec:	int3   
   1400076ed:	int3   
   1400076ee:	int3   
   1400076ef:	int3   
   1400076f0:	mov    rax,rsp
   1400076f3:	mov    DWORD PTR [rax+0x20],r9d
   1400076f7:	mov    DWORD PTR [rax+0x18],r8d
   1400076fb:	mov    QWORD PTR [rax+0x10],rdx
   1400076ff:	mov    QWORD PTR [rax+0x8],rcx
   140007703:	push   rbp
   140007704:	push   rbx
   140007705:	push   rsi
   140007706:	push   rdi
   140007707:	push   r12
   140007709:	push   r13
   14000770b:	push   r14
   14000770d:	push   r15
   14000770f:	lea    rbp,[rax-0x5f]
   140007713:	sub    rsp,0xe8
   14000771a:	xor    r13d,r13d
   14000771d:	movaps XMMWORD PTR [rax-0x58],xmm6
   140007721:	movaps XMMWORD PTR [rax-0x68],xmm7
   140007725:	lea    eax,[r8-0x1]
   140007729:	mov    rdi,rcx
   14000772c:	lea    r10d,[r9-0x1]
   140007730:	xorps  xmm7,xmm7
   140007733:	mov    r8d,r13d
   140007736:	mov    DWORD PTR [rsp+0x30],r13d
   14000773b:	mov    r15d,r13d
   14000773e:	mov    DWORD PTR [rbp-0x69],eax
   140007741:	mov    r12d,r13d
   140007744:	nop    DWORD PTR [rax+0x0]
   140007748:	nop    DWORD PTR [rax+rax*1+0x0]
   140007750:	add    eax,r13d
   140007753:	movsxd rsi,r13d
   140007756:	lea    rcx,[rbp-0x49]
   14000775a:	cdq    
   14000775b:	add    rsi,rsi
   14000775e:	idiv   DWORD PTR [rbp+0x77]
   140007761:	lea    eax,[r10+r8*1]
   140007765:	lea    r8,[rbp-0x79]
   140007769:	movsxd r14,edx
   14000776c:	cdq    
   14000776d:	add    r14,r14
   140007770:	idiv   r9d
   140007773:	movups xmm0,XMMWORD PTR [rdi+r14*8]
   140007778:	movaps XMMWORD PTR [rbp-0x79],xmm0
   14000777c:	movups xmm0,XMMWORD PTR [rdi+rsi*8]
   140007780:	movaps XMMWORD PTR [rsp+0x40],xmm0
   140007785:	movsxd rbx,edx
   140007788:	lea    rdx,[rsp+0x40]
   14000778d:	call   0x140003ab0
   140007792:	mov    rax,QWORD PTR [rbp+0x6f]
   140007796:	mov    rdi,rbx
   140007799:	movsxd rbx,DWORD PTR [rsp+0x30]
   14000779e:	add    rdi,rdi
   1400077a1:	lea    r8,[rsp+0x40]
   1400077a6:	add    rbx,rbx
   1400077a9:	lea    rdx,[rbp-0x79]
   1400077ad:	lea    rcx,[rbp-0x29]
   1400077b1:	movups xmm0,XMMWORD PTR [rax+rdi*8]
   1400077b5:	movaps XMMWORD PTR [rsp+0x40],xmm0
   1400077ba:	movups xmm0,XMMWORD PTR [rax+rbx*8]
   1400077be:	movaps XMMWORD PTR [rbp-0x79],xmm0
   1400077c2:	call   0x140003ab0
   1400077c7:	movaps xmm0,XMMWORD PTR [rbp-0x29]
   1400077cb:	lea    r8,[rsp+0x40]
   1400077d0:	lea    rdx,[rbp-0x79]
   1400077d4:	lea    rcx,[rbp-0x59]
   1400077d8:	movaps xmm1,XMMWORD PTR [rbp-0x49]
   1400077dc:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400077e2:	movups xmm0,XMMWORD PTR [rip+0x4bda7]        # 0x140053590
   1400077e9:	movaps XMMWORD PTR [rbp-0x59],xmm0
   1400077ed:	movdqa XMMWORD PTR [rbp-0x79],xmm1
   1400077f2:	call   0x140003800
   1400077f7:	mov    rax,QWORD PTR [rbp+0x67]
   1400077fb:	mov    rdx,QWORD PTR [rbp+0x6f]
   1400077ff:	movaps xmm6,xmm0
   140007802:	movups xmm1,XMMWORD PTR [rdx+rbx*8]
   140007806:	lea    r8,[rbp-0x59]
   14000780a:	lea    rdx,[rsp+0x40]
   14000780f:	lea    rcx,[rbp-0x79]
   140007813:	movaps XMMWORD PTR [rbp-0x59],xmm1
   140007817:	movups xmm1,XMMWORD PTR [rax+rsi*8]
   14000781b:	movaps XMMWORD PTR [rsp+0x40],xmm1
   140007820:	movups xmm1,XMMWORD PTR [rax+r14*8]
   140007825:	movaps XMMWORD PTR [rbp-0x79],xmm1
   140007829:	call   0x140003a40
   14000782e:	lea    r8,[rbp-0x59]
   140007832:	mov    DWORD PTR [rsp+0x38],eax
   140007836:	mov    rax,QWORD PTR [rbp+0x67]
   14000783a:	lea    rdx,[rsp+0x40]
   14000783f:	lea    rcx,[rbp-0x79]
   140007843:	movups xmm0,XMMWORD PTR [rax+rsi*8]
   140007847:	mov    rax,QWORD PTR [rbp+0x6f]
   14000784b:	movaps XMMWORD PTR [rbp-0x59],xmm0
   14000784f:	movups xmm0,XMMWORD PTR [rax+rbx*8]
   140007853:	movaps XMMWORD PTR [rsp+0x40],xmm0
   140007858:	movups xmm0,XMMWORD PTR [rax+rdi*8]
   14000785c:	movaps XMMWORD PTR [rbp-0x79],xmm0
   140007860:	call   0x140003a40
   140007865:	mov    DWORD PTR [rsp+0x34],eax
   140007869:	mov    rax,QWORD PTR [rbp+0x6f]
   14000786d:	movups xmm0,XMMWORD PTR [rax+rbx*8]
   140007871:	movaps XMMWORD PTR [rbp-0x59],xmm0
   140007875:	movups xmm0,XMMWORD PTR [rax+rdi*8]
   140007879:	mov    rdi,QWORD PTR [rbp+0x67]
   14000787d:	lea    rax,[rbp-0x19]
   140007881:	mov    QWORD PTR [rsp+0x20],rax
   140007886:	movaps XMMWORD PTR [rsp+0x40],xmm0
   14000788b:	movups xmm0,XMMWORD PTR [rdi+rsi*8]
   14000788f:	movaps XMMWORD PTR [rbp-0x79],xmm0
   140007893:	movups xmm0,XMMWORD PTR [rdi+r14*8]
   140007898:	movaps XMMWORD PTR [rbp-0x39],xmm0
   14000789c:	lea    r9,[rbp-0x59]
   1400078a0:	lea    r8,[rsp+0x40]
   1400078a5:	lea    rdx,[rbp-0x79]
   1400078a9:	lea    rcx,[rbp-0x39]
   1400078ad:	call   0x1400038c0
   1400078b2:	test   eax,eax
   1400078b4:	jne    0x140007957
   1400078ba:	ucomisd xmm6,xmm7
   1400078be:	mov    eax,DWORD PTR [rsp+0x38]
   1400078c2:	mov    ecx,DWORD PTR [rsp+0x34]
   1400078c6:	jp     0x1400078d2
   1400078c8:	jne    0x1400078d2
   1400078ca:	test   eax,eax
   1400078cc:	jne    0x1400078d2
   1400078ce:	test   ecx,ecx
   1400078d0:	je     0x140007914
   1400078d2:	comisd xmm6,xmm7
   1400078d6:	jb     0x1400078f6
   1400078d8:	mov    r9d,DWORD PTR [rbp+0x7f]
   1400078dc:	test   eax,eax
   1400078de:	jne    0x140007918
   1400078e0:	mov    eax,DWORD PTR [rsp+0x30]
   1400078e4:	inc    r12d
   1400078e7:	inc    eax
   1400078e9:	cdq    
   1400078ea:	idiv   r9d
   1400078ed:	mov    r8d,edx
   1400078f0:	mov    DWORD PTR [rsp+0x30],edx
   1400078f4:	jmp    0x14000792b
   1400078f6:	test   ecx,ecx
   1400078f8:	je     0x140007914
   1400078fa:	mov    eax,DWORD PTR [rsp+0x30]
   1400078fe:	mov    r9d,DWORD PTR [rbp+0x7f]
   140007902:	inc    r12d
   140007905:	inc    eax
   140007907:	cdq    
   140007908:	idiv   r9d
   14000790b:	mov    r8d,edx
   14000790e:	mov    DWORD PTR [rsp+0x30],edx
   140007912:	jmp    0x14000792b
   140007914:	mov    r9d,DWORD PTR [rbp+0x7f]
   140007918:	mov    r8d,DWORD PTR [rsp+0x30]
   14000791d:	lea    eax,[r13+0x1]
   140007921:	inc    r15d
   140007924:	cdq    
   140007925:	idiv   DWORD PTR [rbp+0x77]
   140007928:	mov    r13d,edx
   14000792b:	mov    eax,DWORD PTR [rbp+0x77]
   14000792e:	cmp    r15d,eax
   140007931:	jl     0x140007938
   140007933:	cmp    r12d,r9d
   140007936:	jge    0x140007953
   140007938:	add    eax,eax
   14000793a:	cmp    r15d,eax
   14000793d:	jge    0x140007953
   14000793f:	lea    eax,[r9+r9*1]
   140007943:	lea    r10d,[r9-0x1]
   140007947:	cmp    r12d,eax
   14000794a:	mov    eax,DWORD PTR [rbp-0x69]
   14000794d:	jl     0x140007750
   140007953:	xor    eax,eax
   140007955:	jmp    0x14000795c
   140007957:	mov    eax,0x1
   14000795c:	movaps xmm6,XMMWORD PTR [rsp+0xd0]
   140007964:	movaps xmm7,XMMWORD PTR [rsp+0xc0]
   14000796c:	add    rsp,0xe8
   140007973:	pop    r15
   140007975:	pop    r14
   140007977:	pop    r13
   140007979:	pop    r12
   14000797b:	pop    rdi
   14000797c:	pop    rsi
   14000797d:	pop    rbx
   14000797e:	pop    rbp
   14000797f:	ret    
   140007980:	mov    QWORD PTR [rsp+0x10],rbx
   140007985:	mov    QWORD PTR [rsp+0x18],rbp
   14000798a:	push   rdi
   14000798b:	push   r14
   14000798d:	push   r15
   14000798f:	sub    rsp,0x70
   140007993:	mov    r15,rdx
   140007996:	lea    rdx,[rip+0x35e5b]        # 0x14003d7f8
   14000799d:	mov    r14,rcx
   1400079a0:	call   0x1400275b0
   1400079a5:	test   rax,rax
   1400079a8:	je     0x1400079ba
   1400079aa:	mov    rcx,rax
   1400079ad:	call   QWORD PTR [rip+0x356d5]        # 0x14003d088
   1400079b3:	mov    ebx,eax
   1400079b5:	cmp    eax,0x3
   1400079b8:	jge    0x1400079bf
   1400079ba:	mov    ebx,0x14
   1400079bf:	mov    ecx,ebx
   1400079c1:	shl    ecx,0x4
   1400079c4:	call   0x140005c30
   1400079c9:	xor    edi,edi
   1400079cb:	mov    rbp,rax
   1400079ce:	test   ebx,ebx
   1400079d0:	jle    0x140007a9e
   1400079d6:	mov    QWORD PTR [rsp+0x90],rsi
   1400079de:	movaps XMMWORD PTR [rsp+0x60],xmm6
   1400079e3:	movaps XMMWORD PTR [rsp+0x50],xmm7
   1400079e8:	movsd  xmm7,QWORD PTR [rip+0x359e8]        # 0x14003d3d8
   1400079f0:	mov    rsi,rax
   1400079f3:	movaps XMMWORD PTR [rsp+0x40],xmm8
   1400079f9:	movaps XMMWORD PTR [rsp+0x30],xmm9
   1400079ff:	movd   xmm8,ebx
   140007a04:	movsd  xmm9,QWORD PTR [rip+0x35e3b]        # 0x14003d848
   140007a0d:	cvtdq2pd xmm8,xmm8
   140007a12:	movaps XMMWORD PTR [rsp+0x20],xmm10
   140007a18:	movsd  xmm10,QWORD PTR [rip+0x35cbf]        # 0x14003d6e0
   140007a21:	movd   xmm6,edi
   140007a25:	cvtdq2pd xmm6,xmm6
   140007a29:	divsd  xmm6,xmm8
   140007a2e:	mulsd  xmm6,xmm9
   140007a33:	mulsd  xmm6,xmm10
   140007a38:	movaps xmm0,xmm6
   140007a3b:	call   0x14003b87e
   140007a40:	movsd  xmm1,QWORD PTR [r14+0x40]
   140007a46:	mulsd  xmm1,xmm7
   140007a4a:	mulsd  xmm0,xmm1
   140007a4e:	movsd  QWORD PTR [rsi],xmm0
   140007a52:	movaps xmm0,xmm6
   140007a55:	call   0x14003b884
   140007a5a:	movsd  xmm1,QWORD PTR [r14+0x48]
   140007a60:	inc    edi
   140007a62:	lea    rsi,[rsi+0x10]
   140007a66:	mulsd  xmm1,xmm7
   140007a6a:	mulsd  xmm0,xmm1
   140007a6e:	movsd  QWORD PTR [rsi-0x8],xmm0
   140007a73:	cmp    edi,ebx
   140007a75:	jl     0x140007a21
   140007a77:	movaps xmm10,XMMWORD PTR [rsp+0x20]
   140007a7d:	movaps xmm9,XMMWORD PTR [rsp+0x30]
   140007a83:	movaps xmm8,XMMWORD PTR [rsp+0x40]
   140007a89:	mov    rsi,QWORD PTR [rsp+0x90]
   140007a91:	mov    rax,rbp
   140007a94:	movaps xmm7,XMMWORD PTR [rsp+0x50]
   140007a99:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   140007a9e:	lea    r11,[rsp+0x70]
   140007aa3:	mov    DWORD PTR [r15],ebx
   140007aa6:	mov    rbx,QWORD PTR [r11+0x28]
   140007aaa:	mov    rbp,QWORD PTR [r11+0x30]
   140007aae:	mov    rsp,r11
   140007ab1:	pop    r15
   140007ab3:	pop    r14
   140007ab5:	pop    rdi
   140007ab6:	ret    
   140007ab7:	int3   
   140007ab8:	int3   
   140007ab9:	int3   
   140007aba:	int3   
   140007abb:	int3   
   140007abc:	int3   
   140007abd:	int3   
   140007abe:	int3   
   140007abf:	int3   
   140007ac0:	movsd  xmm1,QWORD PTR [rcx]
   140007ac4:	movsd  xmm0,QWORD PTR [r8]
   140007ac9:	comisd xmm0,xmm1
   140007acd:	jb     0x140007af3
   140007acf:	comisd xmm1,QWORD PTR [rdx]
   140007ad3:	jb     0x140007af3
   140007ad5:	movsd  xmm1,QWORD PTR [rcx+0x8]
   140007ada:	movsd  xmm0,QWORD PTR [r8+0x8]
   140007ae0:	comisd xmm0,xmm1
   140007ae4:	jb     0x140007af3
   140007ae6:	comisd xmm1,QWORD PTR [rdx+0x8]
   140007aeb:	jb     0x140007af3
   140007aed:	mov    eax,0x1
   140007af2:	ret    
   140007af3:	xor    eax,eax
   140007af5:	ret    
   140007af6:	int3   
   140007af7:	int3   
   140007af8:	int3   
   140007af9:	int3   
   140007afa:	int3   
   140007afb:	int3   
   140007afc:	int3   
   140007afd:	int3   
   140007afe:	int3   
   140007aff:	int3   
   140007b00:	mov    QWORD PTR [rsp+0x18],rbp
   140007b05:	mov    QWORD PTR [rsp+0x20],rsi
   140007b0a:	push   r14
   140007b0c:	sub    rsp,0x50
   140007b10:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140007b15:	movaps XMMWORD PTR [rsp+0x30],xmm7
   140007b1a:	mov    QWORD PTR [rsp+0x60],rbx
   140007b1f:	mov    rbx,r8
   140007b22:	mov    r8,QWORD PTR [rip+0x4bb1f]        # 0x140053648
   140007b29:	xorps  xmm6,xmm6
   140007b2c:	mov    QWORD PTR [rsp+0x68],rdi
   140007b31:	movsxd rbp,edx
   140007b34:	mov    rdi,rcx
   140007b37:	movaps xmm7,xmm6
   140007b3a:	test   r8,r8
   140007b3d:	jne    0x140007b57
   140007b3f:	mov    ecx,DWORD PTR [rip+0x4baeb]        # 0x140053630
   140007b45:	shl    ecx,0x4
   140007b48:	call   0x140005c30
   140007b4d:	mov    r8,rax
   140007b50:	mov    QWORD PTR [rip+0x4baf1],rax        # 0x140053648
   140007b57:	xor    r14d,r14d
   140007b5a:	mov    r9d,r14d
   140007b5d:	cmp    rbp,0x4
   140007b61:	jl     0x140007c19
   140007b67:	lea    rdx,[rbp-0x4]
   140007b6b:	mov    rax,rdi
   140007b6e:	lea    rcx,[r8+0x8]
   140007b72:	shr    rdx,0x2
   140007b76:	sub    rax,r8
   140007b79:	inc    rdx
   140007b7c:	lea    r9,[rdx*4+0x0]
   140007b84:	nop    DWORD PTR [rax+0x0]
   140007b88:	nop    DWORD PTR [rax+rax*1+0x0]
   140007b90:	movsd  xmm0,QWORD PTR [rcx+rax*1-0x8]
   140007b96:	add    rcx,0x40
   140007b9a:	subsd  xmm0,QWORD PTR [rbx]
   140007b9e:	movsd  QWORD PTR [rcx-0x48],xmm0
   140007ba3:	movsd  xmm1,QWORD PTR [rax+rcx*1-0x40]
   140007ba9:	subsd  xmm1,QWORD PTR [rbx+0x8]
   140007bae:	movsd  QWORD PTR [rcx-0x40],xmm1
   140007bb3:	movsd  xmm0,QWORD PTR [rax+rcx*1-0x38]
   140007bb9:	subsd  xmm0,QWORD PTR [rbx]
   140007bbd:	movsd  QWORD PTR [rcx-0x38],xmm0
   140007bc2:	movsd  xmm1,QWORD PTR [rax+rcx*1-0x30]
   140007bc8:	subsd  xmm1,QWORD PTR [rbx+0x8]
   140007bcd:	movsd  QWORD PTR [rcx-0x30],xmm1
   140007bd2:	movsd  xmm0,QWORD PTR [rax+rcx*1-0x28]
   140007bd8:	subsd  xmm0,QWORD PTR [rbx]
   140007bdc:	movsd  QWORD PTR [rcx-0x28],xmm0
   140007be1:	movsd  xmm1,QWORD PTR [rax+rcx*1-0x20]
   140007be7:	subsd  xmm1,QWORD PTR [rbx+0x8]
   140007bec:	movsd  QWORD PTR [rcx-0x20],xmm1
   140007bf1:	movsd  xmm0,QWORD PTR [rcx+rax*1-0x18]
   140007bf7:	subsd  xmm0,QWORD PTR [rbx]
   140007bfb:	movsd  QWORD PTR [rcx-0x18],xmm0
   140007c00:	movsd  xmm1,QWORD PTR [rcx+rax*1-0x10]
   140007c06:	subsd  xmm1,QWORD PTR [rbx+0x8]
   140007c0b:	movsd  QWORD PTR [rcx-0x10],xmm1
   140007c10:	dec    rdx
   140007c13:	jne    0x140007b90
   140007c19:	cmp    r9,rbp
   140007c1c:	jge    0x140007c5d
   140007c1e:	mov    rcx,r9
   140007c21:	mov    rax,rbp
   140007c24:	sub    rdi,r8
   140007c27:	shl    rcx,0x4
   140007c2b:	add    rcx,0x8
   140007c2f:	add    rcx,r8
   140007c32:	sub    rax,r9
   140007c35:	movsd  xmm0,QWORD PTR [rcx+rdi*1-0x8]
   140007c3b:	add    rcx,0x10
   140007c3f:	subsd  xmm0,QWORD PTR [rbx]
   140007c43:	movsd  QWORD PTR [rcx-0x18],xmm0
   140007c48:	movsd  xmm1,QWORD PTR [rdi+rcx*1-0x10]
   140007c4e:	subsd  xmm1,QWORD PTR [rbx+0x8]
   140007c53:	movsd  QWORD PTR [rcx-0x10],xmm1
   140007c58:	dec    rax
   140007c5b:	jne    0x140007c35
   140007c5d:	movaps XMMWORD PTR [rsp+0x20],xmm8
   140007c63:	mov    rdi,QWORD PTR [rsp+0x68]
   140007c68:	mov    rbx,QWORD PTR [rsp+0x60]
   140007c6d:	mov    r10,r14
   140007c70:	test   ebp,ebp
   140007c72:	jle    0x140007d6a
   140007c78:	movsd  xmm5,QWORD PTR [rip+0x35760]        # 0x14003d3e0
   140007c80:	movsd  xmm8,QWORD PTR [rip+0x3574f]        # 0x14003d3d8
   140007c89:	lea    r11d,[rbp-0x1]
   140007c8d:	lea    r9,[r8+0x8]
   140007c91:	movsd  xmm4,QWORD PTR [r9]
   140007c96:	mov    eax,r11d
   140007c99:	cdq    
   140007c9a:	idiv   ebp
   140007c9c:	ucomisd xmm4,xmm6
   140007ca0:	jp     0x140007cd9
   140007ca2:	jne    0x140007cd9
   140007ca4:	movsxd rax,edx
   140007ca7:	add    rax,rax
   140007caa:	movsd  xmm0,QWORD PTR [r8+rax*8+0x8]
   140007cb1:	ucomisd xmm0,xmm6
   140007cb5:	jp     0x140007cd9
   140007cb7:	jne    0x140007cd9
   140007cb9:	movsd  xmm0,QWORD PTR [r9-0x8]
   140007cbf:	mulsd  xmm0,QWORD PTR [r8+rax*8]
   140007cc5:	comisd xmm6,xmm0
   140007cc9:	jbe    0x140007d57
   140007ccf:	mov    eax,0x1
   140007cd4:	jmp    0x140007d87
   140007cd9:	comisd xmm4,xmm6
   140007cdd:	jb     0x140007cf4
   140007cdf:	movsxd rcx,edx
   140007ce2:	shl    rcx,0x4
   140007ce6:	add    rcx,r8
   140007ce9:	movsd  xmm3,QWORD PTR [rcx+0x8]
   140007cee:	comisd xmm6,xmm3
   140007cf2:	jae    0x140007d0f
   140007cf4:	movsxd rcx,edx
   140007cf7:	shl    rcx,0x4
   140007cfb:	add    rcx,r8
   140007cfe:	movsd  xmm3,QWORD PTR [rcx+0x8]
   140007d03:	comisd xmm3,xmm6
   140007d07:	jb     0x140007d57
   140007d09:	comisd xmm6,xmm4
   140007d0d:	jb     0x140007d57
   140007d0f:	movaps xmm2,xmm3
   140007d12:	movaps xmm0,xmm4
   140007d15:	movaps xmm1,xmm3
   140007d18:	mulsd  xmm2,QWORD PTR [r9-0x8]
   140007d1e:	mulsd  xmm0,QWORD PTR [rcx]
   140007d22:	subsd  xmm1,xmm4
   140007d26:	subsd  xmm2,xmm0
   140007d2a:	divsd  xmm2,xmm1
   140007d2e:	ucomisd xmm2,xmm6
   140007d32:	jp     0x140007d36
   140007d34:	je     0x140007ccf
   140007d36:	comisd xmm2,xmm6
   140007d3a:	jbe    0x140007d57
   140007d3c:	ucomisd xmm4,xmm6
   140007d40:	jp     0x140007d44
   140007d42:	je     0x140007d4c
   140007d44:	ucomisd xmm3,xmm6
   140007d48:	jp     0x140007d53
   140007d4a:	jne    0x140007d53
   140007d4c:	addsd  xmm7,xmm8
   140007d51:	jmp    0x140007d57
   140007d53:	addsd  xmm7,xmm5
   140007d57:	inc    r10
   140007d5a:	inc    r11d
   140007d5d:	add    r9,0x10
   140007d61:	cmp    r10,rbp
   140007d64:	jl     0x140007c91
   140007d6a:	cvttsd2si ecx,xmm7
   140007d6e:	and    ecx,0x80000001
   140007d74:	jge    0x140007d7d
   140007d76:	dec    ecx
   140007d78:	or     ecx,0xfffffffe
   140007d7b:	inc    ecx
   140007d7d:	cmp    ecx,0x1
   140007d80:	sete   r14b
   140007d84:	mov    eax,r14d
   140007d87:	movaps xmm8,XMMWORD PTR [rsp+0x20]
   140007d8d:	mov    rbp,QWORD PTR [rsp+0x70]
   140007d92:	mov    rsi,QWORD PTR [rsp+0x78]
   140007d97:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   140007d9c:	movaps xmm7,XMMWORD PTR [rsp+0x30]
   140007da1:	add    rsp,0x50
   140007da5:	pop    r14
   140007da7:	ret    
   140007da8:	int3   
   140007da9:	int3   
   140007daa:	int3   
   140007dab:	int3   
   140007dac:	int3   
   140007dad:	int3   
   140007dae:	int3   
   140007daf:	int3   
   140007db0:	xor    eax,eax
   140007db2:	unpcklpd xmm2,xmm2
   140007db6:	cmp    edx,0x4
   140007db9:	jl     0x140007e08
   140007dbb:	lea    eax,[rdx-0x4]
   140007dbe:	shr    eax,0x2
   140007dc1:	inc    eax
   140007dc3:	mov    r8d,eax
   140007dc6:	lea    eax,[rax*4+0x0]
   140007dcd:	nop    DWORD PTR [rax]
   140007dd0:	movups xmm0,XMMWORD PTR [rcx]
   140007dd3:	add    rcx,0x40
   140007dd7:	mulpd  xmm0,xmm2
   140007ddb:	movups XMMWORD PTR [rcx-0x40],xmm0
   140007ddf:	movups xmm0,XMMWORD PTR [rcx-0x30]
   140007de3:	mulpd  xmm0,xmm2
   140007de7:	movups XMMWORD PTR [rcx-0x30],xmm0
   140007deb:	movups xmm0,XMMWORD PTR [rcx-0x20]
   140007def:	mulpd  xmm0,xmm2
   140007df3:	movups XMMWORD PTR [rcx-0x20],xmm0
   140007df7:	movups xmm0,XMMWORD PTR [rcx-0x10]
   140007dfb:	mulpd  xmm0,xmm2
   140007dff:	movups XMMWORD PTR [rcx-0x10],xmm0
   140007e03:	dec    r8
   140007e06:	jne    0x140007dd0
   140007e08:	cmp    eax,edx
   140007e0a:	jge    0x140007e24
   140007e0c:	sub    edx,eax
   140007e0e:	mov    eax,edx
   140007e10:	movups xmm0,XMMWORD PTR [rcx]
   140007e13:	lea    rcx,[rcx+0x10]
   140007e17:	mulpd  xmm0,xmm2
   140007e1b:	movups XMMWORD PTR [rcx-0x10],xmm0
   140007e1f:	dec    rax
   140007e22:	jne    0x140007e10
   140007e24:	ret    
   140007e25:	int3   
   140007e26:	int3   
   140007e27:	int3   
   140007e28:	int3   
   140007e29:	int3   
   140007e2a:	int3   
   140007e2b:	int3   
   140007e2c:	int3   
   140007e2d:	int3   
   140007e2e:	int3   
   140007e2f:	int3   
   140007e30:	cmp    edx,0x4
   140007e33:	jne    0x140007ea1
   140007e35:	movsd  xmm2,QWORD PTR [rcx+0x8]
   140007e3a:	movsd  xmm1,QWORD PTR [rcx+0x18]
   140007e3f:	ucomisd xmm2,xmm1
   140007e43:	jp     0x140007e6e
   140007e45:	jne    0x140007e6e
   140007e47:	movsd  xmm0,QWORD PTR [rcx+0x28]
   140007e4c:	ucomisd xmm0,QWORD PTR [rcx+0x38]
   140007e51:	jp     0x140007ea1
   140007e53:	jne    0x140007ea1
   140007e55:	movsd  xmm0,QWORD PTR [rcx]
   140007e59:	ucomisd xmm0,QWORD PTR [rcx+0x30]
   140007e5e:	jp     0x140007ea1
   140007e60:	jne    0x140007ea1
   140007e62:	movsd  xmm0,QWORD PTR [rcx+0x10]
   140007e67:	ucomisd xmm0,QWORD PTR [rcx+0x20]
   140007e6c:	jmp    0x140007e97
   140007e6e:	movsd  xmm0,QWORD PTR [rcx]
   140007e72:	ucomisd xmm0,QWORD PTR [rcx+0x10]
   140007e77:	jp     0x140007ea1
   140007e79:	jne    0x140007ea1
   140007e7b:	movsd  xmm0,QWORD PTR [rcx+0x20]
   140007e80:	ucomisd xmm0,QWORD PTR [rcx+0x30]
   140007e85:	jp     0x140007ea1
   140007e87:	jne    0x140007ea1
   140007e89:	ucomisd xmm2,QWORD PTR [rcx+0x38]
   140007e8e:	jp     0x140007ea1
   140007e90:	jne    0x140007ea1
   140007e92:	ucomisd xmm1,QWORD PTR [rcx+0x28]
   140007e97:	jp     0x140007ea1
   140007e99:	jne    0x140007ea1
   140007e9b:	mov    eax,0x1
   140007ea0:	ret    
   140007ea1:	xor    eax,eax
   140007ea3:	ret    
   140007ea4:	int3   
   140007ea5:	int3   
   140007ea6:	int3   
   140007ea7:	int3   
   140007ea8:	int3   
   140007ea9:	int3   
   140007eaa:	int3   
   140007eab:	int3   
   140007eac:	int3   
   140007ead:	int3   
   140007eae:	int3   
   140007eaf:	int3   
   140007eb0:	mov    QWORD PTR [rsp+0x8],rbx
   140007eb5:	mov    QWORD PTR [rsp+0x18],rbp
   140007eba:	push   rsi
   140007ebb:	push   rdi
   140007ebc:	push   r14
   140007ebe:	sub    rsp,0x30
   140007ec2:	mov    rbx,QWORD PTR [rdx+0x28]
   140007ec6:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140007ecb:	mov    rsi,rcx
   140007ece:	mov    rax,QWORD PTR [rbx+0x8]
   140007ed2:	lea    rcx,[rip+0x180b7]        # 0x14001ff90
   140007ed9:	movaps xmm6,xmm2
   140007edc:	unpcklpd xmm6,xmm6
   140007ee0:	xor    ebp,ebp
   140007ee2:	mov    r14,rdx
   140007ee5:	cmp    rax,rcx
   140007ee8:	jne    0x140008059
   140007eee:	mov    rdi,QWORD PTR [rdx+0x30]
   140007ef2:	mov    ebx,DWORD PTR [rdi+0x8]
   140007ef5:	mov    DWORD PTR [rsp+0x58],ebx
   140007ef9:	cmp    ebx,0x3
   140007efc:	jl     0x140007f47
   140007efe:	mov    ecx,ebx
   140007f00:	shl    ecx,0x4
   140007f03:	call   0x140005c30
   140007f08:	mov    r10,rax
   140007f0b:	test   ebx,ebx
   140007f0d:	jle    0x140007f5b
   140007f0f:	mov    r8d,ebp
   140007f12:	mov    r9d,ebx
   140007f15:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007f20:	mov    rcx,QWORD PTR [rdi+0x30]
   140007f24:	lea    r8,[r8+0x10]
   140007f28:	mov    rdx,QWORD PTR [r8+rcx*1-0x10]
   140007f2d:	mov    QWORD PTR [r8+r10*1-0x10],rdx
   140007f32:	mov    rcx,QWORD PTR [rdi+0x30]
   140007f36:	mov    rax,QWORD PTR [r8+rcx*1-0x8]
   140007f3b:	mov    QWORD PTR [r8+r10*1-0x8],rax
   140007f40:	dec    r9
   140007f43:	jne    0x140007f20
   140007f45:	jmp    0x140007f5b
   140007f47:	lea    rdx,[rsp+0x58]
   140007f4c:	mov    rcx,r14
   140007f4f:	call   0x140007980
   140007f54:	mov    ebx,DWORD PTR [rsp+0x58]
   140007f58:	mov    r10,rax
   140007f5b:	mov    rax,QWORD PTR [r14+0x28]
   140007f5f:	mov    rcx,rbp
   140007f62:	lea    r8,[rip+0x3589f]        # 0x14003d808
   140007f69:	mov    rdx,QWORD PTR [rax]
   140007f6c:	nop    DWORD PTR [rax+0x0]
   140007f70:	movzx  eax,BYTE PTR [rdx+rcx*1]
   140007f74:	inc    rcx
   140007f77:	cmp    al,BYTE PTR [r8+rcx*1-0x1]
   140007f7c:	jne    0x140007f90
   140007f7e:	cmp    rcx,0x4
   140007f82:	jne    0x140007f70
   140007f84:	mov    DWORD PTR [rsi+0x30],0x1
   140007f8b:	jmp    0x140008137
   140007f90:	mov    rcx,rbp
   140007f93:	lea    r8,[rip+0x35876]        # 0x14003d810
   140007f9a:	nop    WORD PTR [rax+rax*1+0x0]
   140007fa0:	movzx  eax,BYTE PTR [rdx+rcx*1]
   140007fa4:	inc    rcx
   140007fa7:	cmp    al,BYTE PTR [r8+rcx*1-0x1]
   140007fac:	jne    0x140007ffc
   140007fae:	cmp    rcx,0x8
   140007fb2:	jne    0x140007fa0
   140007fb4:	cmp    ebx,0x4
   140007fb7:	jne    0x140007ffc
   140007fb9:	movsd  xmm1,QWORD PTR [r10+0x8]
   140007fbf:	movsd  xmm2,QWORD PTR [r10+0x18]
   140007fc5:	ucomisd xmm1,xmm2
   140007fc9:	jp     0x140008012
   140007fcb:	jne    0x140008012
   140007fcd:	movsd  xmm0,QWORD PTR [r10+0x28]
   140007fd3:	ucomisd xmm0,QWORD PTR [r10+0x38]
   140007fd9:	jp     0x140007ffc
   140007fdb:	jne    0x140007ffc
   140007fdd:	movsd  xmm0,QWORD PTR [r10]
   140007fe2:	ucomisd xmm0,QWORD PTR [r10+0x30]
   140007fe8:	jp     0x140007ffc
   140007fea:	jne    0x140007ffc
   140007fec:	movsd  xmm0,QWORD PTR [r10+0x10]
   140007ff2:	ucomisd xmm0,QWORD PTR [r10+0x20]
   140007ff8:	jp     0x140007ffc
   140007ffa:	je     0x140008045
   140007ffc:	cmp    DWORD PTR [rdi+0x8],0x3
   140008000:	jge    0x140008051
   140008002:	cmp    DWORD PTR [rdi],ebp
   140008004:	je     0x140008051
   140008006:	mov    DWORD PTR [rsi+0x30],0x2
   14000800d:	jmp    0x140008137
   140008012:	movsd  xmm0,QWORD PTR [r10]
   140008017:	ucomisd xmm0,QWORD PTR [r10+0x10]
   14000801d:	jp     0x140007ffc
   14000801f:	jne    0x140007ffc
   140008021:	movsd  xmm0,QWORD PTR [r10+0x20]
   140008027:	ucomisd xmm0,QWORD PTR [r10+0x30]
   14000802d:	jp     0x140007ffc
   14000802f:	jne    0x140007ffc
   140008031:	ucomisd xmm1,QWORD PTR [r10+0x38]
   140008037:	jp     0x140007ffc
   140008039:	jne    0x140007ffc
   14000803b:	ucomisd xmm2,QWORD PTR [r10+0x28]
   140008041:	jp     0x140007ffc
   140008043:	jne    0x140007ffc
   140008045:	mov    DWORD PTR [rsi+0x30],0x1
   14000804c:	jmp    0x140008137
   140008051:	mov    DWORD PTR [rsi+0x30],ebp
   140008054:	jmp    0x140008137
   140008059:	lea    rcx,[rip+0x19b10]        # 0x140021b70
   140008060:	cmp    rax,rcx
   140008063:	jne    0x14000810c
   140008069:	mov    ebx,0x4
   14000806e:	lea    ecx,[rbx+0x3c]
   140008071:	call   0x140005c30
   140008076:	mov    r10,rax
   140008079:	mov    rax,QWORD PTR [r14+0x30]
   14000807d:	movsd  xmm3,QWORD PTR [rip+0x35403]        # 0x14003d488
   140008085:	movups xmm2,XMMWORD PTR [rax+0x8]
   140008089:	movq   rax,xmm2
   14000808e:	psrldq xmm2,0x8
   140008093:	movd   xmm4,eax
   140008097:	shr    rax,0x20
   14000809b:	movd   xmm1,eax
   14000809f:	movq   rax,xmm2
   1400080a4:	cvtdq2pd xmm4,xmm4
   1400080a8:	cvtdq2pd xmm1,xmm1
   1400080ac:	movd   xmm2,eax
   1400080b0:	divsd  xmm4,xmm3
   1400080b4:	shr    rax,0x20
   1400080b8:	cvtdq2pd xmm2,xmm2
   1400080bc:	divsd  xmm1,xmm3
   1400080c0:	divsd  xmm2,xmm3
   1400080c4:	movsd  xmm0,xmm4
   1400080c8:	unpcklpd xmm0,xmm1
   1400080cc:	movups XMMWORD PTR [r10],xmm0
   1400080d0:	movsd  xmm0,xmm2
   1400080d4:	unpcklpd xmm0,xmm1
   1400080d8:	movd   xmm1,eax
   1400080dc:	movups XMMWORD PTR [r10+0x10],xmm0
   1400080e1:	movsd  xmm0,xmm2
   1400080e5:	cvtdq2pd xmm1,xmm1
   1400080e9:	divsd  xmm1,xmm3
   1400080ed:	unpcklpd xmm0,xmm1
   1400080f1:	movups XMMWORD PTR [r10+0x20],xmm0
   1400080f6:	movsd  xmm0,xmm4
   1400080fa:	unpcklpd xmm0,xmm1
   1400080fe:	movups XMMWORD PTR [r10+0x30],xmm0
   140008103:	mov    DWORD PTR [rsi+0x30],0x1
   14000810a:	jmp    0x140008137
   14000810c:	lea    rcx,[rip+0x198dd]        # 0x1400219f0
   140008113:	cmp    rax,rcx
   140008116:	jne    0x1400081f2
   14000811c:	lea    rdx,[rsp+0x58]
   140008121:	mov    rcx,r14
   140008124:	mov    DWORD PTR [rsi+0x30],0x2
   14000812b:	call   0x140007980
   140008130:	mov    ebx,DWORD PTR [rsp+0x58]
   140008134:	mov    r10,rax
   140008137:	ucomisd xmm6,QWORD PTR [rip+0x352a1]        # 0x14003d3e0
   14000813f:	jp     0x140008143
   140008141:	je     0x1400081b4
   140008143:	mov    rcx,r10
   140008146:	cmp    ebx,0x4
   140008149:	jl     0x140008198
   14000814b:	lea    eax,[rbx-0x4]
   14000814e:	shr    eax,0x2
   140008151:	inc    eax
   140008153:	mov    edx,eax
   140008155:	lea    ebp,[rax*4+0x0]
   14000815c:	nop    DWORD PTR [rax+0x0]
   140008160:	movups xmm0,XMMWORD PTR [rcx]
   140008163:	add    rcx,0x40
   140008167:	mulpd  xmm0,xmm6
   14000816b:	movups XMMWORD PTR [rcx-0x40],xmm0
   14000816f:	movups xmm0,XMMWORD PTR [rcx-0x30]
   140008173:	mulpd  xmm0,xmm6
   140008177:	movups XMMWORD PTR [rcx-0x30],xmm0
   14000817b:	movups xmm0,XMMWORD PTR [rcx-0x20]
   14000817f:	mulpd  xmm0,xmm6
   140008183:	movups XMMWORD PTR [rcx-0x20],xmm0
   140008187:	movups xmm0,XMMWORD PTR [rcx-0x10]
   14000818b:	mulpd  xmm0,xmm6
   14000818f:	movups XMMWORD PTR [rcx-0x10],xmm0
   140008193:	dec    rdx
   140008196:	jne    0x140008160
   140008198:	cmp    ebp,ebx
   14000819a:	jge    0x1400081b4
   14000819c:	mov    edx,ebx
   14000819e:	sub    edx,ebp
   1400081a0:	movups xmm0,XMMWORD PTR [rcx]
   1400081a3:	lea    rcx,[rcx+0x10]
   1400081a7:	mulpd  xmm0,xmm6
   1400081ab:	movups XMMWORD PTR [rcx-0x10],xmm0
   1400081af:	dec    rdx
   1400081b2:	jne    0x1400081a0
   1400081b4:	lea    r9,[rsi+0x10]
   1400081b8:	mov    r8,rsi
   1400081bb:	mov    edx,ebx
   1400081bd:	mov    rcx,r10
   1400081c0:	mov    QWORD PTR [rsi+0x28],r10
   1400081c4:	mov    DWORD PTR [rsi+0x20],ebx
   1400081c7:	call   0x140007580
   1400081cc:	cmp    ebx,DWORD PTR [rip+0x4b45e]        # 0x140053630
   1400081d2:	jle    0x1400081da
   1400081d4:	mov    DWORD PTR [rip+0x4b456],ebx        # 0x140053630
   1400081da:	mov    rbx,QWORD PTR [rsp+0x50]
   1400081df:	mov    rbp,QWORD PTR [rsp+0x60]
   1400081e4:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   1400081e9:	add    rsp,0x30
   1400081ed:	pop    r14
   1400081ef:	pop    rdi
   1400081f0:	pop    rsi
   1400081f1:	ret    
   1400081f2:	call   QWORD PTR [rip+0x350d8]        # 0x14003d2d0
   1400081f8:	mov    r8,QWORD PTR [rbx]
   1400081fb:	lea    rdx,[rip+0x35616]        # 0x14003d818
   140008202:	lea    rcx,[rax+0x60]
   140008206:	call   QWORD PTR [rip+0x350b4]        # 0x14003d2c0
   14000820c:	mov    ecx,0x1
   140008211:	call   QWORD PTR [rip+0x34e61]        # 0x14003d078
   140008217:	int3   
   140008218:	int3   
   140008219:	int3   
   14000821a:	int3   
   14000821b:	int3   
   14000821c:	int3   
   14000821d:	int3   
   14000821e:	int3   
   14000821f:	int3   
   140008220:	movd   xmm0,edx
   140008224:	mov    rax,rcx
   140008227:	cvtdq2pd xmm0,xmm0
   14000822b:	divsd  xmm0,QWORD PTR [rip+0x35255]        # 0x14003d488
   140008233:	movsd  QWORD PTR [rcx],xmm0
   140008237:	movd   xmm0,r8d
   14000823c:	cvtdq2pd xmm0,xmm0
   140008240:	divsd  xmm0,QWORD PTR [rip+0x35240]        # 0x14003d488
   140008248:	movsd  QWORD PTR [rcx+0x8],xmm0
   14000824d:	ret    
   14000824e:	int3   
   14000824f:	int3   
   140008250:	movsd  xmm0,QWORD PTR [r9]
   140008255:	comisd xmm0,QWORD PTR [rcx]
   140008259:	jb     0x140008286
   14000825b:	movsd  xmm0,QWORD PTR [rdx]
   14000825f:	comisd xmm0,QWORD PTR [r8]
   140008264:	jb     0x140008286
   140008266:	movsd  xmm0,QWORD PTR [r9+0x8]
   14000826c:	comisd xmm0,QWORD PTR [rcx+0x8]
   140008271:	jb     0x140008286
   140008273:	movsd  xmm0,QWORD PTR [rdx+0x8]
   140008278:	comisd xmm0,QWORD PTR [r8+0x8]
   14000827e:	jb     0x140008286
   140008280:	mov    eax,0x1
   140008285:	ret    
   140008286:	xor    eax,eax
   140008288:	ret    
   140008289:	int3   
   14000828a:	int3   
   14000828b:	int3   
   14000828c:	int3   
   14000828d:	int3   
   14000828e:	int3   
   14000828f:	int3   
   140008290:	rex push rbx
   140008292:	sub    rsp,0x20
   140008296:	mov    rcx,QWORD PTR [rip+0x4b39b]        # 0x140053638
   14000829d:	xor    ebx,ebx
   14000829f:	mov    DWORD PTR [rip+0x4b38b],ebx        # 0x140053630
   1400082a5:	call   QWORD PTR [rip+0x34ff5]        # 0x14003d2a0
   1400082ab:	mov    rcx,QWORD PTR [rip+0x4b38e]        # 0x140053640
   1400082b2:	call   QWORD PTR [rip+0x34fe8]        # 0x14003d2a0
   1400082b8:	mov    rcx,QWORD PTR [rip+0x4b389]        # 0x140053648
   1400082bf:	call   QWORD PTR [rip+0x34fdb]        # 0x14003d2a0
   1400082c5:	mov    QWORD PTR [rip+0x4b36c],rbx        # 0x140053638
   1400082cc:	mov    QWORD PTR [rip+0x4b36d],rbx        # 0x140053640
   1400082d3:	mov    QWORD PTR [rip+0x4b36e],rbx        # 0x140053648
   1400082da:	add    rsp,0x20
   1400082de:	pop    rbx
   1400082df:	ret    
   1400082e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400082e5:	mov    QWORD PTR [rsp+0x18],rdi
   1400082ea:	push   rbp
   1400082eb:	push   r14
   1400082ed:	push   r15
   1400082ef:	lea    rbp,[rsp-0x47]
   1400082f4:	sub    rsp,0xa0
   1400082fb:	movups xmm0,XMMWORD PTR [rdx]
   1400082fe:	mov    r14,r8
   140008301:	mov    rdi,rdx
   140008304:	mov    r15,rcx
   140008307:	lea    r8,[rbp+0x37]
   14000830b:	lea    rdx,[rbp+0x27]
   14000830f:	mov    rbx,r9
   140008312:	movaps XMMWORD PTR [rbp+0x37],xmm0
   140008316:	movups xmm0,XMMWORD PTR [rcx]
   140008319:	lea    rcx,[rbp-0x19]
   14000831d:	movaps XMMWORD PTR [rbp+0x27],xmm0
   140008321:	call   0x1400037e0
   140008326:	lea    r8,[rbp+0x37]
   14000832a:	movups xmm0,XMMWORD PTR [rdi+0x10]
   14000832e:	lea    rdx,[rbp+0x27]
   140008332:	lea    rcx,[rbp-0x9]
   140008336:	movaps XMMWORD PTR [rbp+0x37],xmm0
   14000833a:	movups xmm0,XMMWORD PTR [r15]
   14000833e:	movaps XMMWORD PTR [rbp+0x27],xmm0
   140008342:	call   0x1400037e0
   140008347:	lea    r8,[rbp+0x37]
   14000834b:	movups xmm0,XMMWORD PTR [rbx]
   14000834e:	lea    rdx,[rbp+0x27]
   140008352:	lea    rcx,[rbp-0x39]
   140008356:	movaps XMMWORD PTR [rbp+0x37],xmm0
   14000835a:	movups xmm0,XMMWORD PTR [r14]
   14000835e:	movaps XMMWORD PTR [rbp+0x27],xmm0
   140008362:	call   0x1400037e0
   140008367:	lea    r8,[rbp+0x37]
   14000836b:	movups xmm0,XMMWORD PTR [rbx+0x10]
   14000836f:	lea    rdx,[rbp+0x27]
   140008373:	lea    rcx,[rbp-0x29]
   140008377:	movaps XMMWORD PTR [rbp+0x37],xmm0
   14000837b:	movups xmm0,XMMWORD PTR [r14]
   14000837f:	movaps XMMWORD PTR [rbp+0x27],xmm0
   140008383:	call   0x1400037e0
   140008388:	movss  xmm0,DWORD PTR [rbp-0x21]
   14000838d:	movss  xmm1,DWORD PTR [rbp-0x1d]
   140008392:	movss  xmm4,DWORD PTR [rbp-0x25]
   140008397:	movss  xmm3,DWORD PTR [rbp-0x15]
   14000839c:	movss  xmm2,DWORD PTR [rbp-0x29]
   1400083a1:	movss  DWORD PTR [rbp+0x2f],xmm0
   1400083a6:	unpcklps xmm2,xmm4
   1400083a9:	movups xmm0,XMMWORD PTR [rbp-0x39]
   1400083ad:	movss  DWORD PTR [rbp+0x33],xmm1
   1400083b2:	movss  xmm1,DWORD PTR [rbp-0xd]
   1400083b7:	movaps XMMWORD PTR [rbp+0x17],xmm0
   1400083bb:	movups xmm0,XMMWORD PTR [rbp-0x9]
   1400083bf:	movss  DWORD PTR [rbp+0x43],xmm1
   1400083c4:	movaps XMMWORD PTR [rbp+0x7],xmm0
   1400083c8:	movss  xmm0,DWORD PTR [rbp-0x11]
   1400083cd:	movss  DWORD PTR [rbp+0x3f],xmm0
   1400083d2:	movss  xmm0,DWORD PTR [rbp-0x19]
   1400083d7:	unpcklps xmm0,xmm3
   1400083da:	comisd xmm2,xmm0
   1400083de:	jb     0x140008627
   1400083e4:	movsd  xmm0,QWORD PTR [rbp+0x7]
   1400083e9:	comisd xmm0,QWORD PTR [rbp+0x17]
   1400083ee:	jb     0x140008627
   1400083f4:	movsd  xmm0,QWORD PTR [rbp+0x2f]
   1400083f9:	comisd xmm0,QWORD PTR [rbp+0x3f]
   1400083fe:	jb     0x140008627
   140008404:	movsd  xmm0,QWORD PTR [rbp+0xf]
   140008409:	comisd xmm0,QWORD PTR [rbp+0x1f]
   14000840e:	jb     0x140008627
   140008414:	mov    eax,DWORD PTR [rdi+0x30]
   140008417:	test   al,0x1
   140008419:	je     0x14000842b
   14000841b:	test   BYTE PTR [rbx+0x30],0x1
   14000841f:	je     0x14000842b
   140008421:	mov    eax,0x1
   140008426:	jmp    0x140008629
   14000842b:	test   al,0x2
   14000842d:	je     0x140008483
   14000842f:	test   BYTE PTR [rbx+0x30],0x2
   140008433:	je     0x140008483
   140008435:	movsd  xmm2,QWORD PTR [rdi+0x10]
   14000843a:	movsd  xmm0,QWORD PTR [r15]
   14000843f:	movsd  xmm1,QWORD PTR [r15+0x8]
   140008445:	xor    eax,eax
   140008447:	subsd  xmm2,QWORD PTR [rdi]
   14000844b:	subsd  xmm1,QWORD PTR [r14+0x8]
   140008451:	subsd  xmm0,QWORD PTR [r14]
   140008456:	mulsd  xmm1,xmm1
   14000845a:	mulsd  xmm0,xmm0
   14000845e:	addsd  xmm2,QWORD PTR [rbx+0x10]
   140008463:	addsd  xmm1,xmm0
   140008467:	subsd  xmm2,QWORD PTR [rbx]
   14000846b:	mulsd  xmm2,xmm2
   14000846f:	mulsd  xmm2,QWORD PTR [rip+0x353c9]        # 0x14003d840
   140008477:	comisd xmm1,xmm2
   14000847b:	setbe  al
   14000847e:	jmp    0x140008629
   140008483:	mov    r11,QWORD PTR [rip+0x4b1ae]        # 0x140053638
   14000848a:	mov    QWORD PTR [rsp+0xc0],rsi
   140008492:	test   r11,r11
   140008495:	jne    0x1400084cd
   140008497:	mov    ecx,DWORD PTR [rip+0x4b193]        # 0x140053630
   14000849d:	shl    ecx,0x4
   1400084a0:	call   0x140005c30
   1400084a5:	mov    ecx,DWORD PTR [rip+0x4b185]        # 0x140053630
   1400084ab:	shl    ecx,0x4
   1400084ae:	mov    QWORD PTR [rip+0x4b183],rax        # 0x140053638
   1400084b5:	call   0x140005c30
   1400084ba:	mov    r11,QWORD PTR [rip+0x4b177]        # 0x140053638
   1400084c1:	mov    rsi,rax
   1400084c4:	mov    QWORD PTR [rip+0x4b175],rax        # 0x140053640
   1400084cb:	jmp    0x1400084d4
   1400084cd:	mov    rsi,QWORD PTR [rip+0x4b16c]        # 0x140053640
   1400084d4:	movups xmm0,XMMWORD PTR [r15]
   1400084d8:	mov    edx,DWORD PTR [rdi+0x20]
   1400084db:	mov    rcx,QWORD PTR [rdi+0x28]
   1400084df:	lea    r8,[rbp+0x37]
   1400084e3:	mov    r9,r11
   1400084e6:	movaps XMMWORD PTR [rbp+0x37],xmm0
   1400084ea:	call   0x140008650
   1400084ef:	mov    edx,DWORD PTR [rbx+0x20]
   1400084f2:	movups xmm2,XMMWORD PTR [r14]
   1400084f6:	mov    rcx,QWORD PTR [rbx+0x28]
   1400084fa:	lea    r8,[rbp+0x37]
   1400084fe:	mov    r9,rsi
   140008501:	movaps XMMWORD PTR [rbp+0x37],xmm2
   140008505:	call   0x140008650
   14000850a:	mov    r9d,DWORD PTR [rbx+0x20]
   14000850e:	mov    r8d,DWORD PTR [rdi+0x20]
   140008512:	mov    rdx,rsi
   140008515:	mov    rcx,r11
   140008518:	call   0x1400076f0
   14000851d:	mov    rsi,QWORD PTR [rsp+0xc0]
   140008525:	test   eax,eax
   140008527:	jne    0x140008421
   14000852d:	movss  xmm0,DWORD PTR [rbp-0x21]
   140008532:	movss  xmm1,DWORD PTR [rbp-0x1d]
   140008537:	mov    rcx,QWORD PTR [rip+0x4b0fa]        # 0x140053638
   14000853e:	movss  xmm2,DWORD PTR [rbp-0x25]
   140008543:	movss  DWORD PTR [rbp+0x3f],xmm0
   140008548:	movups xmm0,XMMWORD PTR [rbp-0x39]
   14000854c:	movaps XMMWORD PTR [rbp+0x17],xmm0
   140008550:	movss  xmm0,DWORD PTR [rbp-0x29]
   140008555:	movss  DWORD PTR [rbp+0x43],xmm1
   14000855a:	movups xmm1,XMMWORD PTR [rcx]
   14000855d:	unpcklps xmm0,xmm2
   140008560:	movaps XMMWORD PTR [rbp+0x27],xmm1
   140008564:	comisd xmm0,xmm1
   140008568:	jb     0x1400085b1
   14000856a:	comisd xmm1,QWORD PTR [rbp+0x17]
   14000856f:	jb     0x1400085b1
   140008571:	movsd  xmm1,QWORD PTR [rbp+0x2f]
   140008576:	movsd  xmm0,QWORD PTR [rbp+0x3f]
   14000857b:	comisd xmm0,xmm1
   14000857f:	jb     0x1400085b1
   140008581:	comisd xmm1,QWORD PTR [rbp+0x1f]
   140008586:	jb     0x1400085b1
   140008588:	movups xmm0,XMMWORD PTR [rcx]
   14000858b:	mov    edx,DWORD PTR [rbx+0x20]
   14000858e:	mov    rcx,QWORD PTR [rip+0x4b0ab]        # 0x140053640
   140008595:	lea    r8,[rbp+0x37]
   140008599:	movaps XMMWORD PTR [rbp+0x37],xmm0
   14000859d:	call   0x140007b00
   1400085a2:	test   eax,eax
   1400085a4:	jne    0x140008421
   1400085aa:	mov    rcx,QWORD PTR [rip+0x4b087]        # 0x140053638
   1400085b1:	movss  xmm0,DWORD PTR [rbp-0x1]
   1400085b6:	movss  xmm1,DWORD PTR [rbp+0x3]
   1400085bb:	mov    rax,QWORD PTR [rip+0x4b07e]        # 0x140053640
   1400085c2:	movss  xmm2,DWORD PTR [rbp-0x5]
   1400085c7:	movss  DWORD PTR [rbp+0x3f],xmm0
   1400085cc:	movups xmm0,XMMWORD PTR [rbp-0x19]
   1400085d0:	movaps XMMWORD PTR [rbp+0x17],xmm0
   1400085d4:	movss  xmm0,DWORD PTR [rbp-0x9]
   1400085d9:	movss  DWORD PTR [rbp+0x43],xmm1
   1400085de:	movups xmm1,XMMWORD PTR [rax]
   1400085e1:	unpcklps xmm0,xmm2
   1400085e4:	movaps XMMWORD PTR [rbp+0x27],xmm1
   1400085e8:	comisd xmm0,xmm1
   1400085ec:	jb     0x140008627
   1400085ee:	comisd xmm1,QWORD PTR [rbp+0x17]
   1400085f3:	jb     0x140008627
   1400085f5:	movsd  xmm1,QWORD PTR [rbp+0x2f]
   1400085fa:	movsd  xmm0,QWORD PTR [rbp+0x3f]
   1400085ff:	comisd xmm0,xmm1
   140008603:	jb     0x140008627
   140008605:	comisd xmm1,QWORD PTR [rbp+0x1f]
   14000860a:	jb     0x140008627
   14000860c:	movups xmm0,XMMWORD PTR [rax]
   14000860f:	mov    edx,DWORD PTR [rdi+0x20]
   140008612:	lea    r8,[rbp+0x37]
   140008616:	movaps XMMWORD PTR [rbp+0x37],xmm0
   14000861a:	call   0x140007b00
   14000861f:	test   eax,eax
   140008621:	jne    0x140008421
   140008627:	xor    eax,eax
   140008629:	lea    r11,[rsp+0xa0]
   140008631:	mov    rbx,QWORD PTR [r11+0x28]
   140008635:	mov    rdi,QWORD PTR [r11+0x30]
   140008639:	mov    rsp,r11
   14000863c:	pop    r15
   14000863e:	pop    r14
   140008640:	pop    rbp
   140008641:	ret    
   140008642:	int3   
   140008643:	int3   
   140008644:	int3   
   140008645:	int3   
   140008646:	int3   
   140008647:	int3   
   140008648:	int3   
   140008649:	int3   
   14000864a:	int3   
   14000864b:	int3   
   14000864c:	int3   
   14000864d:	int3   
   14000864e:	int3   
   14000864f:	int3   
   140008650:	xor    eax,eax
   140008652:	cmp    edx,0x4
   140008655:	jl     0x140008704
   14000865b:	lea    eax,[rdx-0x4]
   14000865e:	shr    eax,0x2
   140008661:	inc    eax
   140008663:	mov    r10d,eax
   140008666:	lea    eax,[rax*4+0x0]
   14000866d:	nop    DWORD PTR [rax]
   140008670:	movsd  xmm0,QWORD PTR [rcx]
   140008674:	add    r9,0x40
   140008678:	add    rcx,0x40
   14000867c:	addsd  xmm0,QWORD PTR [r8]
   140008681:	movsd  QWORD PTR [r9-0x40],xmm0
   140008687:	movsd  xmm1,QWORD PTR [rcx-0x38]
   14000868c:	addsd  xmm1,QWORD PTR [r8+0x8]
   140008692:	movsd  QWORD PTR [r9-0x38],xmm1
   140008698:	movsd  xmm0,QWORD PTR [rcx-0x30]
   14000869d:	addsd  xmm0,QWORD PTR [r8]
   1400086a2:	movsd  QWORD PTR [r9-0x30],xmm0
   1400086a8:	movsd  xmm1,QWORD PTR [rcx-0x28]
   1400086ad:	addsd  xmm1,QWORD PTR [r8+0x8]
   1400086b3:	movsd  QWORD PTR [r9-0x28],xmm1
   1400086b9:	movsd  xmm0,QWORD PTR [rcx-0x20]
   1400086be:	addsd  xmm0,QWORD PTR [r8]
   1400086c3:	movsd  QWORD PTR [r9-0x20],xmm0
   1400086c9:	movsd  xmm1,QWORD PTR [rcx-0x18]
   1400086ce:	addsd  xmm1,QWORD PTR [r8+0x8]
   1400086d4:	movsd  QWORD PTR [r9-0x18],xmm1
   1400086da:	movsd  xmm0,QWORD PTR [rcx-0x10]
   1400086df:	addsd  xmm0,QWORD PTR [r8]
   1400086e4:	movsd  QWORD PTR [r9-0x10],xmm0
   1400086ea:	movsd  xmm1,QWORD PTR [rcx-0x8]
   1400086ef:	addsd  xmm1,QWORD PTR [r8+0x8]
   1400086f5:	movsd  QWORD PTR [r9-0x8],xmm1
   1400086fb:	dec    r10
   1400086fe:	jne    0x140008670
   140008704:	cmp    eax,edx
   140008706:	jge    0x14000873c
   140008708:	sub    rcx,r9
   14000870b:	sub    edx,eax
   14000870d:	mov    eax,edx
   14000870f:	movsd  xmm0,QWORD PTR [rcx+r9*1]
   140008715:	add    r9,0x10
   140008719:	addsd  xmm0,QWORD PTR [r8]
   14000871e:	movsd  QWORD PTR [r9-0x10],xmm0
   140008724:	movsd  xmm1,QWORD PTR [rcx+r9*1-0x8]
   14000872b:	addsd  xmm1,QWORD PTR [r8+0x8]
   140008731:	movsd  QWORD PTR [r9-0x8],xmm1
   140008737:	dec    rax
   14000873a:	jne    0x14000870f
   14000873c:	ret    
   14000873d:	int3   
   14000873e:	int3   
   14000873f:	int3   
   140008740:	mov    QWORD PTR [rsp+0x10],rdx
   140008745:	push   rbp
   140008746:	push   rbx
   140008747:	push   rsi
   140008748:	push   rdi
   140008749:	push   r12
   14000874b:	push   r13
   14000874d:	push   r14
   14000874f:	push   r15
   140008751:	mov    rbp,rsp
   140008754:	sub    rsp,0x78
   140008758:	mov    rax,QWORD PTR [rcx+0x10]
   14000875c:	mov    r13,QWORD PTR [rcx+0x18]
   140008760:	mov    rdi,rdx
   140008763:	mov    edx,r8d
   140008766:	mov    ebx,r8d
   140008769:	mov    r14,rcx
   14000876c:	mov    QWORD PTR [rbp+0x48],rax
   140008770:	call   0x140009470
   140008775:	xor    r15d,r15d
   140008778:	add    ebx,0xfffffffc
   14000877b:	mov    QWORD PTR [rbp-0x48],rax
   14000877f:	mov    esi,r15d
   140008782:	movsxd rax,ebx
   140008785:	mov    r12d,r15d
   140008788:	mov    QWORD PTR [rbp+0x60],rax
   14000878c:	test   ebx,ebx
   14000878e:	jle    0x140008807
   140008790:	add    rdi,0x1c
   140008794:	mov    r15,rax
   140008797:	mov    rcx,r13
   14000879a:	call   0x14001bb10
   14000879f:	mov    ecx,DWORD PTR [rdi-0x4]
   1400087a2:	sub    ecx,eax
   1400087a4:	shr    rax,0x20
   1400087a8:	movd   xmm0,ecx
   1400087ac:	mov    ecx,DWORD PTR [rdi]
   1400087ae:	sub    ecx,eax
   1400087b0:	mov    rax,QWORD PTR [r13+0x28]
   1400087b4:	cvtdq2pd xmm0,xmm0
   1400087b8:	movsd  QWORD PTR [rbp-0x28],xmm0
   1400087bd:	movd   xmm0,ecx
   1400087c1:	cvtdq2pd xmm0,xmm0
   1400087c5:	movsd  QWORD PTR [rbp-0x20],xmm0
   1400087ca:	test   rax,rax
   1400087cd:	je     0x140008800
   1400087cf:	mov    rax,QWORD PTR [rax+0x20]
   1400087d3:	test   rax,rax
   1400087d6:	je     0x140008800
   1400087d8:	movups xmm0,XMMWORD PTR [rbp-0x28]
   1400087dc:	lea    rdx,[rbp-0x38]
   1400087e0:	mov    r8,r14
   1400087e3:	mov    rcx,r13
   1400087e6:	movaps XMMWORD PTR [rbp-0x38],xmm0
   1400087ea:	call   rax
   1400087ec:	test   eax,eax
   1400087ee:	je     0x140008800
   1400087f0:	add    r12,0x3
   1400087f4:	add    esi,0x3
   1400087f7:	add    rdi,0x18
   1400087fb:	cmp    r12,r15
   1400087fe:	jl     0x140008797
   140008800:	mov    rdi,QWORD PTR [rbp+0x50]
   140008804:	xor    r15d,r15d
   140008807:	movsxd r12,esi
   14000880a:	mov    r8,r14
   14000880d:	mov    rcx,r13
   140008810:	lea    rax,[rdi+r12*8]
   140008814:	mov    rdx,rax
   140008817:	mov    QWORD PTR [rbp-0x38],rax
   14000881b:	call   0x1400090f0
   140008820:	movsxd rdi,ebx
   140008823:	test   ebx,ebx
   140008825:	jle    0x14000889c
   140008827:	mov    r13,QWORD PTR [rbp+0x48]
   14000882b:	mov    r15,QWORD PTR [rbp+0x50]
   14000882f:	nop
   140008830:	mov    rcx,r13
   140008833:	call   0x14001bb10
   140008838:	mov    ecx,DWORD PTR [r15+rdi*8]
   14000883c:	sub    ecx,eax
   14000883e:	shr    rax,0x20
   140008842:	movd   xmm0,ecx
   140008846:	mov    ecx,DWORD PTR [r15+rdi*8+0x4]
   14000884b:	sub    ecx,eax
   14000884d:	mov    rax,QWORD PTR [r13+0x28]
   140008851:	cvtdq2pd xmm0,xmm0
   140008855:	movsd  QWORD PTR [rbp-0x28],xmm0
   14000885a:	movd   xmm0,ecx
   14000885e:	cvtdq2pd xmm0,xmm0
   140008862:	movsd  QWORD PTR [rbp-0x20],xmm0
   140008867:	test   rax,rax
   14000886a:	je     0x140008899
   14000886c:	mov    rax,QWORD PTR [rax+0x20]
   140008870:	test   rax,rax
   140008873:	je     0x140008899
   140008875:	movups xmm0,XMMWORD PTR [rbp-0x28]
   140008879:	lea    rdx,[rbp-0x18]
   14000887d:	mov    r8,r14
   140008880:	mov    rcx,r13
   140008883:	movaps XMMWORD PTR [rbp-0x18],xmm0
   140008887:	call   rax
   140008889:	test   eax,eax
   14000888b:	je     0x140008899
   14000888d:	sub    rdi,0x3
   140008891:	sub    ebx,0x3
   140008894:	test   rdi,rdi
   140008897:	jg     0x140008830
   140008899:	xor    r15d,r15d
   14000889c:	mov    rax,QWORD PTR [rbp+0x50]
   1400088a0:	mov    rcx,QWORD PTR [rbp+0x48]
   1400088a4:	movsxd rdi,ebx
   1400088a7:	lea    r13,[rax+rdi*8]
   1400088ab:	mov    r8,r14
   1400088ae:	mov    rdx,r13
   1400088b1:	call   0x1400090f0
   1400088b6:	mov    rdx,QWORD PTR [rbp+0x60]
   1400088ba:	cmp    r12,rdx
   1400088bd:	jge    0x1400088e6
   1400088bf:	mov    rcx,QWORD PTR [rbp-0x38]
   1400088c3:	add    rcx,0x1c
   1400088c7:	mov    eax,DWORD PTR [rcx-0x4]
   1400088ca:	cmp    DWORD PTR [rcx-0x1c],eax
   1400088cd:	jne    0x1400088e6
   1400088cf:	mov    eax,DWORD PTR [rcx]
   1400088d1:	cmp    DWORD PTR [rcx-0x18],eax
   1400088d4:	jne    0x1400088e6
   1400088d6:	add    r12,0x3
   1400088da:	add    esi,0x3
   1400088dd:	add    rcx,0x18
   1400088e1:	cmp    r12,rdx
   1400088e4:	jl     0x1400088c7
   1400088e6:	test   ebx,ebx
   1400088e8:	jle    0x14000890f
   1400088ea:	lea    rcx,[r13+0x1c]
   1400088ee:	xchg   ax,ax
   1400088f0:	mov    eax,DWORD PTR [rcx-0x4]
   1400088f3:	cmp    DWORD PTR [rcx-0x1c],eax
   1400088f6:	jne    0x14000890f
   1400088f8:	mov    eax,DWORD PTR [rcx]
   1400088fa:	cmp    DWORD PTR [rcx-0x18],eax
   1400088fd:	jne    0x14000890f
   1400088ff:	sub    rdi,0x3
   140008903:	sub    ebx,0x3
   140008906:	sub    rcx,0x18
   14000890a:	test   rdi,rdi
   14000890d:	jg     0x1400088f0
   14000890f:	mov    rax,QWORD PTR [r14+0x80]
   140008916:	test   rax,rax
   140008919:	je     0x14000892f
   14000891b:	nop    DWORD PTR [rax+rax*1+0x0]
   140008920:	mov    r14,rax
   140008923:	mov    rax,QWORD PTR [rax+0x80]
   14000892a:	test   rax,rax
   14000892d:	jne    0x140008920
   14000892f:	lea    r8,[rbp+0x48]
   140008933:	lea    rdx,[rbp+0x58]
   140008937:	mov    rcx,r14
   14000893a:	call   0x1400252b0
   14000893f:	mov    eax,DWORD PTR [rbp+0x58]
   140008942:	mov    r12,QWORD PTR [rbp-0x48]
   140008946:	mov    rdi,QWORD PTR [rbp+0x50]
   14000894a:	test   eax,eax
   14000894c:	je     0x14000896a
   14000894e:	mov    DWORD PTR [rsp+0x28],eax
   140008952:	mov    r9d,ebx
   140008955:	mov    r8d,esi
   140008958:	mov    rdx,rdi
   14000895b:	mov    rcx,r14
   14000895e:	mov    QWORD PTR [rsp+0x20],r12
   140008963:	call   0x140024e00
   140008968:	mov    esi,eax
   14000896a:	mov    eax,DWORD PTR [rbp+0x48]
   14000896d:	test   eax,eax
   14000896f:	je     0x14000898d
   140008971:	mov    DWORD PTR [rsp+0x28],eax
   140008975:	mov    r9d,ebx
   140008978:	mov    r8d,esi
   14000897b:	mov    rdx,rdi
   14000897e:	mov    rcx,r14
   140008981:	mov    QWORD PTR [rsp+0x20],r12
   140008986:	call   0x140024950
   14000898b:	mov    ebx,eax
   14000898d:	lea    eax,[rbx+0x4]
   140008990:	movsxd rcx,esi
   140008993:	movsxd rdx,eax
   140008996:	cmp    rcx,rdx
   140008999:	jge    0x1400089b8
   14000899b:	lea    r8,[rdi+rcx*8]
   14000899f:	sub    rdx,rcx
   1400089a2:	mov    rax,QWORD PTR [r8+r15*1]
   1400089a6:	mov    rcx,QWORD PTR [r12]
   1400089aa:	lea    r15,[r15+0x8]
   1400089ae:	mov    QWORD PTR [r15+rcx*1-0x8],rax
   1400089b3:	dec    rdx
   1400089b6:	jne    0x1400089a2
   1400089b8:	sub    ebx,esi
   1400089ba:	add    ebx,0x4
   1400089bd:	mov    DWORD PTR [r12+0x8],ebx
   1400089c2:	add    rsp,0x78
   1400089c6:	pop    r15
   1400089c8:	pop    r14
   1400089ca:	pop    r13
   1400089cc:	pop    r12
   1400089ce:	pop    rdi
   1400089cf:	pop    rsi
   1400089d0:	pop    rbx
   1400089d1:	pop    rbp
   1400089d2:	ret    
   1400089d3:	int3   
   1400089d4:	int3   
   1400089d5:	int3   
   1400089d6:	int3   
   1400089d7:	int3   
   1400089d8:	int3   
   1400089d9:	int3   
   1400089da:	int3   
   1400089db:	int3   
   1400089dc:	int3   
   1400089dd:	int3   
   1400089de:	int3   
   1400089df:	int3   
   1400089e0:	sub    rsp,0x28
   1400089e4:	mov    rax,QWORD PTR [rcx+0x28]
   1400089e8:	test   rax,rax
   1400089eb:	jne    0x1400089f4
   1400089ed:	call   QWORD PTR [rip+0x346ad]        # 0x14003d0a0
   1400089f3:	int3   
   1400089f4:	add    rsp,0x28
   1400089f8:	ret    
   1400089f9:	int3   
   1400089fa:	int3   
   1400089fb:	int3   
   1400089fc:	int3   
   1400089fd:	int3   
   1400089fe:	int3   
   1400089ff:	int3   
   140008a00:	mov    rax,rsp
   140008a03:	mov    DWORD PTR [rax+0x18],r8d
   140008a07:	mov    DWORD PTR [rax+0x10],edx
   140008a0a:	push   rsi
   140008a0b:	push   r15
   140008a0d:	sub    rsp,0x58
   140008a11:	mov    QWORD PTR [rax+0x8],rbx
   140008a15:	mov    QWORD PTR [rax-0x20],rdi
   140008a19:	mov    QWORD PTR [rax-0x28],r12
   140008a1d:	mov    QWORD PTR [rax-0x30],r13
   140008a21:	xor    esi,esi
   140008a23:	mov    QWORD PTR [rax-0x38],r14
   140008a27:	xor    eax,eax
   140008a29:	movsxd r13,r9d
   140008a2c:	movsxd rdi,r8d
   140008a2f:	movsxd r12,edx
   140008a32:	mov    rbx,rcx
   140008a35:	mov    DWORD PTR [rsp+0x20],esi
   140008a39:	test   edx,edx
   140008a3b:	jle    0x140008a64
   140008a3d:	nop    DWORD PTR [rax]
   140008a40:	cmp    rax,rdi
   140008a43:	je     0x140008a51
   140008a45:	cmp    rax,r13
   140008a48:	je     0x140008a51
   140008a4a:	mov    rcx,QWORD PTR [rbx+rax*8]
   140008a4e:	add    esi,DWORD PTR [rcx+0x8]
   140008a51:	inc    rax
   140008a54:	cmp    rax,r12
   140008a57:	jl     0x140008a40
   140008a59:	mov    edi,DWORD PTR [rsp+0x80]
   140008a60:	mov    DWORD PTR [rsp+0x20],esi
   140008a64:	movsxd rcx,esi
   140008a67:	shl    rcx,0x5
   140008a6b:	call   QWORD PTR [rip+0x346f7]        # 0x14003d168
   140008a71:	xor    r14d,r14d
   140008a74:	xor    r9d,r9d
   140008a77:	mov    r15,rax
   140008a7a:	test   r12d,r12d
   140008a7d:	jle    0x140008b3f
   140008a83:	xor    esi,esi
   140008a85:	mov    QWORD PTR [rsp+0x50],rbp
   140008a8a:	mov    ebp,esi
   140008a8c:	nop    DWORD PTR [rax+0x0]
   140008a90:	cmp    r9d,edi
   140008a93:	je     0x140008b26
   140008a99:	cmp    r9d,r13d
   140008a9c:	je     0x140008b26
   140008aa2:	mov    rax,QWORD PTR [rbx]
   140008aa5:	mov    r10d,esi
   140008aa8:	cmp    DWORD PTR [rax+0x8],0x0
   140008aac:	jle    0x140008b26
   140008aae:	xor    r12d,r12d
   140008ab1:	mov    r8,rbp
   140008ab4:	shl    r8,0x5
   140008ab8:	mov    r11d,r12d
   140008abb:	lea    edi,[r12+0x1]
   140008ac0:	add    r8,r15
   140008ac3:	nop    DWORD PTR [rax+0x0]
   140008ac7:	nop    WORD PTR [rax+rax*1+0x0]
   140008ad0:	inc    r10d
   140008ad3:	mov    rdx,rdi
   140008ad6:	lea    r8,[r8+0x20]
   140008ada:	cmp    r10d,DWORD PTR [rax+0x8]
   140008ade:	mov    rax,QWORD PTR [rax]
   140008ae1:	lea    r11,[r11+0x10]
   140008ae5:	cmovge rdx,r12
   140008ae9:	inc    r14d
   140008aec:	inc    rbp
   140008aef:	movups xmm0,XMMWORD PTR [r11+rax*1-0x10]
   140008af5:	movups XMMWORD PTR [r8-0x20],xmm0
   140008afa:	mov    rax,QWORD PTR [rbx]
   140008afd:	add    rdx,rdx
   140008b00:	inc    rdi
   140008b03:	mov    rcx,QWORD PTR [rax]
   140008b06:	movups xmm0,XMMWORD PTR [rcx+rdx*8]
   140008b0a:	movups XMMWORD PTR [r8-0x10],xmm0
   140008b0f:	mov    rax,QWORD PTR [rbx]
   140008b12:	cmp    r10d,DWORD PTR [rax+0x8]
   140008b16:	jl     0x140008ad0
   140008b18:	mov    r12d,DWORD PTR [rsp+0x78]
   140008b1d:	mov    edi,DWORD PTR [rsp+0x80]
   140008b24:	xor    esi,esi
   140008b26:	inc    r9d
   140008b29:	add    rbx,0x8
   140008b2d:	cmp    r9d,r12d
   140008b30:	jl     0x140008a90
   140008b36:	mov    esi,DWORD PTR [rsp+0x20]
   140008b3a:	mov    rbp,QWORD PTR [rsp+0x50]
   140008b3f:	mov    r13,QWORD PTR [rsp+0x38]
   140008b44:	mov    r12,QWORD PTR [rsp+0x40]
   140008b49:	mov    rdi,QWORD PTR [rsp+0x48]
   140008b4e:	mov    rbx,QWORD PTR [rsp+0x70]
   140008b53:	cmp    r14d,esi
   140008b56:	mov    r14,QWORD PTR [rsp+0x30]
   140008b5b:	je     0x140008b77
   140008b5d:	lea    rdx,[rip+0x34cec]        # 0x14003d850
   140008b64:	lea    rcx,[rip+0x34d6d]        # 0x14003d8d8
   140008b6b:	mov    r8d,0x75
   140008b71:	call   QWORD PTR [rip+0x34519]        # 0x14003d090
   140008b77:	mov    rax,QWORD PTR [rsp+0x90]
   140008b7f:	mov    QWORD PTR [rax],r15
   140008b82:	mov    rax,QWORD PTR [rsp+0x98]
   140008b8a:	mov    DWORD PTR [rax],esi
   140008b8c:	add    rsp,0x58
   140008b90:	pop    r15
   140008b92:	pop    rsi
   140008b93:	ret    
   140008b94:	int3   
   140008b95:	int3   
   140008b96:	int3   
   140008b97:	int3   
   140008b98:	int3   
   140008b99:	int3   
   140008b9a:	int3   
   140008b9b:	int3   
   140008b9c:	int3   
   140008b9d:	int3   
   140008b9e:	int3   
   140008b9f:	int3   
   140008ba0:	movd   xmm0,edx
   140008ba4:	shr    rdx,0x20
   140008ba8:	mov    rax,rcx
   140008bab:	cvtdq2pd xmm0,xmm0
   140008baf:	movsd  QWORD PTR [rcx],xmm0
   140008bb3:	movd   xmm0,edx
   140008bb7:	cvtdq2pd xmm0,xmm0
   140008bbb:	movsd  QWORD PTR [rcx+0x8],xmm0
   140008bc0:	ret    
   140008bc1:	int3   
   140008bc2:	int3   
   140008bc3:	int3   
   140008bc4:	int3   
   140008bc5:	int3   
   140008bc6:	int3   
   140008bc7:	int3   
   140008bc8:	int3   
   140008bc9:	int3   
   140008bca:	int3   
   140008bcb:	int3   
   140008bcc:	int3   
   140008bcd:	int3   
   140008bce:	int3   
   140008bcf:	int3   
   140008bd0:	mov    QWORD PTR [rsp+0x10],rbx
   140008bd5:	mov    QWORD PTR [rsp+0x18],rbp
   140008bda:	push   rsi
   140008bdb:	push   rdi
   140008bdc:	push   r14
   140008bde:	sub    rsp,0x40
   140008be2:	mov    rax,QWORD PTR [rcx+0x80]
   140008be9:	mov    r14,r9
   140008bec:	mov    rbp,r8
   140008bef:	mov    rbx,rcx
   140008bf2:	test   rax,rax
   140008bf5:	je     0x140008c0f
   140008bf7:	nop    WORD PTR [rax+rax*1+0x0]
   140008c00:	mov    rbx,rax
   140008c03:	mov    rax,QWORD PTR [rax+0x80]
   140008c0a:	test   rax,rax
   140008c0d:	jne    0x140008c00
   140008c0f:	lea    r8,[rsp+0x30]
   140008c14:	lea    rdx,[rsp+0x60]
   140008c19:	mov    rcx,rbx
   140008c1c:	call   0x1400252b0
   140008c21:	mov    eax,DWORD PTR [rsp+0x60]
   140008c25:	mov    rsi,QWORD PTR [rsp+0x88]
   140008c2d:	mov    rdi,QWORD PTR [rsp+0x80]
   140008c35:	test   eax,eax
   140008c37:	je     0x140008c56
   140008c39:	mov    r9d,DWORD PTR [rdi]
   140008c3c:	mov    r8d,DWORD PTR [r14]
   140008c3f:	mov    DWORD PTR [rsp+0x28],eax
   140008c43:	mov    rdx,rbp
   140008c46:	mov    rcx,rbx
   140008c49:	mov    QWORD PTR [rsp+0x20],rsi
   140008c4e:	call   0x140024e00
   140008c53:	mov    DWORD PTR [r14],eax
   140008c56:	mov    eax,DWORD PTR [rsp+0x30]
   140008c5a:	test   eax,eax
   140008c5c:	je     0x140008c7a
   140008c5e:	mov    r9d,DWORD PTR [rdi]
   140008c61:	mov    r8d,DWORD PTR [r14]
   140008c64:	mov    DWORD PTR [rsp+0x28],eax
   140008c68:	mov    rdx,rbp
   140008c6b:	mov    rcx,rbx
   140008c6e:	mov    QWORD PTR [rsp+0x20],rsi
   140008c73:	call   0x140024950
   140008c78:	mov    DWORD PTR [rdi],eax
   140008c7a:	mov    rbx,QWORD PTR [rsp+0x68]
   140008c7f:	mov    rbp,QWORD PTR [rsp+0x70]
   140008c84:	add    rsp,0x40
   140008c88:	pop    r14
   140008c8a:	pop    rdi
   140008c8b:	pop    rsi
   140008c8c:	ret    
   140008c8d:	int3   
   140008c8e:	int3   
   140008c8f:	int3   
   140008c90:	mov    QWORD PTR [rsp+0x8],rcx
   140008c95:	push   rbp
   140008c96:	push   rsi
   140008c97:	push   r12
   140008c99:	push   r13
   140008c9b:	push   r14
   140008c9d:	push   r15
   140008c9f:	mov    rbp,rsp
   140008ca2:	sub    rsp,0x48
   140008ca6:	mov    edx,0x7fffffff
   140008cab:	mov    rsi,rcx
   140008cae:	mov    QWORD PTR [rsp+0x98],rbx
   140008cb6:	mov    ecx,edx
   140008cb8:	call   0x14001c660
   140008cbd:	mov    edx,0x80000001
   140008cc2:	mov    ecx,edx
   140008cc4:	mov    QWORD PTR [rbp-0x28],rax
   140008cc8:	call   0x14001c660
   140008ccd:	mov    rcx,rsi
   140008cd0:	mov    QWORD PTR [rbp-0x20],rax
   140008cd4:	call   0x14002a4e0
   140008cd9:	mov    r14d,DWORD PTR [rbp-0x1c]
   140008cdd:	mov    r15d,DWORD PTR [rbp-0x20]
   140008ce1:	mov    r12d,DWORD PTR [rbp-0x24]
   140008ce5:	mov    r13d,DWORD PTR [rbp-0x28]
   140008ce9:	mov    rbx,rax
   140008cec:	mov    QWORD PTR [rbp+0x40],rax
   140008cf0:	test   rax,rax
   140008cf3:	je     0x140008e54
   140008cf9:	mov    QWORD PTR [rsp+0x40],rdi
   140008cfe:	xchg   ax,ax
   140008d00:	mov    rcx,rbx
   140008d03:	call   0x14001bb10
   140008d08:	mov    rsi,rax
   140008d0b:	movsx  eax,WORD PTR [rbx+0x72]
   140008d0f:	cdq    
   140008d10:	mov    rcx,rsi
   140008d13:	sub    eax,edx
   140008d15:	sar    eax,1
   140008d17:	inc    eax
   140008d19:	mov    DWORD PTR [rbp+0x48],eax
   140008d1c:	movsx  eax,WORD PTR [rbx+0x74]
   140008d20:	cdq    
   140008d21:	sub    eax,edx
   140008d23:	sar    eax,1
   140008d25:	inc    eax
   140008d27:	mov    DWORD PTR [rbp+0x4c],eax
   140008d2a:	mov    rdx,QWORD PTR [rbp+0x48]
   140008d2e:	call   0x14001d0b0
   140008d33:	mov    rdx,QWORD PTR [rbp+0x48]
   140008d37:	mov    rcx,rsi
   140008d3a:	mov    rdi,rax
   140008d3d:	mov    QWORD PTR [rbp-0x18],rax
   140008d41:	call   0x14001b3e0
   140008d46:	mov    ecx,DWORD PTR [rbp-0x14]
   140008d49:	mov    rsi,QWORD PTR [rbp+0x38]
   140008d4d:	mov    rdx,QWORD PTR [rbp+0x40]
   140008d51:	cmp    r13d,edi
   140008d54:	cmovl  edi,r13d
   140008d58:	cmp    r12d,ecx
   140008d5b:	cmovl  ecx,r12d
   140008d5f:	cmp    r15d,eax
   140008d62:	mov    r13d,edi
   140008d65:	mov    r12d,ecx
   140008d68:	mov    DWORD PTR [rbp-0x24],ecx
   140008d6b:	mov    ecx,eax
   140008d6d:	cmovg  ecx,r15d
   140008d71:	shr    rax,0x20
   140008d75:	mov    DWORD PTR [rbp-0x28],edi
   140008d78:	cmp    r14d,eax
   140008d7b:	mov    r15d,ecx
   140008d7e:	mov    DWORD PTR [rbp-0x20],ecx
   140008d81:	cmovg  eax,r14d
   140008d85:	mov    rcx,rsi
   140008d88:	mov    r14d,eax
   140008d8b:	mov    DWORD PTR [rbp-0x1c],eax
   140008d8e:	call   0x14002b830
   140008d93:	mov    rdi,rax
   140008d96:	test   rax,rax
   140008d99:	je     0x140008e33
   140008d9f:	nop
   140008da0:	mov    rcx,QWORD PTR [rdi+0x28]
   140008da4:	test   rcx,rcx
   140008da7:	je     0x140008e1c
   140008da9:	movsxd r11,DWORD PTR [rcx+0x8]
   140008dad:	test   r11,r11
   140008db0:	jle    0x140008e1c
   140008db2:	mov    rbx,QWORD PTR [rcx]
   140008db5:	xor    r10d,r10d
   140008db8:	lea    r9,[rbx+0x8]
   140008dbc:	nop    DWORD PTR [rax+0x0]
   140008dc0:	movsxd r8,DWORD PTR [r9]
   140008dc3:	test   r8,r8
   140008dc6:	jle    0x140008e0f
   140008dc8:	mov    rcx,QWORD PTR [r10+rbx*1]
   140008dcc:	nop    DWORD PTR [rax+0x0]
   140008dd0:	mov    rax,QWORD PTR [rcx]
   140008dd3:	lea    rcx,[rcx+0x8]
   140008dd7:	cmp    r13d,eax
   140008dda:	mov    rdx,rax
   140008ddd:	cmovg  r13d,eax
   140008de1:	shr    rdx,0x20
   140008de5:	cmp    r12d,edx
   140008de8:	cmovg  r12d,edx
   140008dec:	cmp    r15d,eax
   140008def:	cmovl  r15d,eax
   140008df3:	cmp    r14d,edx
   140008df6:	cmovl  r14d,edx
   140008dfa:	dec    r8
   140008dfd:	jne    0x140008dd0
   140008dff:	mov    DWORD PTR [rbp-0x1c],r14d
   140008e03:	mov    DWORD PTR [rbp-0x20],r15d
   140008e07:	mov    DWORD PTR [rbp-0x24],r12d
   140008e0b:	mov    DWORD PTR [rbp-0x28],r13d
   140008e0f:	add    r10,0x28
   140008e13:	add    r9,0x28
   140008e17:	dec    r11
   140008e1a:	jne    0x140008dc0
   140008e1c:	mov    rdx,rdi
   140008e1f:	mov    rcx,rsi
   140008e22:	call   0x14002b9e0
   140008e27:	mov    rdi,rax
   140008e2a:	test   rax,rax
   140008e2d:	jne    0x140008da0
   140008e33:	mov    rdx,QWORD PTR [rbp+0x40]
   140008e37:	mov    rcx,rsi
   140008e3a:	call   0x14002a5e0
   140008e3f:	mov    rbx,rax
   140008e42:	mov    QWORD PTR [rbp+0x40],rax
   140008e46:	test   rax,rax
   140008e49:	jne    0x140008d00
   140008e4f:	mov    rdi,QWORD PTR [rsp+0x40]
   140008e54:	mov    eax,DWORD PTR [rsi+0xdc]
   140008e5a:	mov    rbx,QWORD PTR [rsp+0x98]
   140008e62:	cmp    eax,0x1
   140008e65:	jl     0x140008ec1
   140008e67:	mov    r9,QWORD PTR [rsi+0xe0]
   140008e6e:	mov    edx,0x8
   140008e73:	mov    r8d,eax
   140008e76:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008e80:	mov    rcx,QWORD PTR [rdx+r9*1]
   140008e84:	lea    rdx,[rdx+0x8]
   140008e88:	cmp    r13d,DWORD PTR [rcx+0x60]
   140008e8c:	cmovge r13d,DWORD PTR [rcx+0x60]
   140008e91:	cmp    r12d,DWORD PTR [rcx+0x64]
   140008e95:	cmovge r12d,DWORD PTR [rcx+0x64]
   140008e9a:	cmp    r15d,DWORD PTR [rcx+0x68]
   140008e9e:	cmovle r15d,DWORD PTR [rcx+0x68]
   140008ea3:	cmp    r14d,DWORD PTR [rcx+0x6c]
   140008ea7:	cmovle r14d,DWORD PTR [rcx+0x6c]
   140008eac:	dec    r8
   140008eaf:	jne    0x140008e80
   140008eb1:	mov    DWORD PTR [rbp-0x1c],r14d
   140008eb5:	mov    DWORD PTR [rbp-0x20],r15d
   140008eb9:	mov    DWORD PTR [rbp-0x24],r12d
   140008ebd:	mov    DWORD PTR [rbp-0x28],r13d
   140008ec1:	movups xmm0,XMMWORD PTR [rbp-0x28]
   140008ec5:	movups XMMWORD PTR [rsi+0x60],xmm0
   140008ec9:	add    rsp,0x48
   140008ecd:	pop    r15
   140008ecf:	pop    r14
   140008ed1:	pop    r13
   140008ed3:	pop    r12
   140008ed5:	pop    rsi
   140008ed6:	pop    rbp
   140008ed7:	ret    
   140008ed8:	int3   
   140008ed9:	int3   
   140008eda:	int3   
   140008edb:	int3   
   140008edc:	int3   
   140008edd:	int3   
   140008ede:	int3   
   140008edf:	int3   
   140008ee0:	mov    QWORD PTR [rsp+0x8],rbx
   140008ee5:	mov    QWORD PTR [rsp+0x10],rsi
   140008eea:	push   rdi
   140008eeb:	sub    rsp,0x40
   140008eef:	mov    rsi,rdx
   140008ef2:	lea    rdx,[rip+0x34a9f]        # 0x14003d998
   140008ef9:	mov    rbx,rcx
   140008efc:	call   0x1400275b0
   140008f01:	mov    rdi,rax
   140008f04:	test   rax,rax
   140008f07:	je     0x1400090d8
   140008f0d:	cmp    DWORD PTR [rbx+0x60],0x0
   140008f11:	je     0x140008f2d
   140008f13:	lea    rdx,[rip+0x34936]        # 0x14003d850
   140008f1a:	lea    rcx,[rip+0x34a7f]        # 0x14003d9a0
   140008f21:	mov    r8d,0x273
   140008f27:	call   QWORD PTR [rip+0x34163]        # 0x14003d090
   140008f2d:	cmp    DWORD PTR [rbx+0x64],0x0
   140008f31:	je     0x140008f4d
   140008f33:	lea    rdx,[rip+0x34916]        # 0x14003d850
   140008f3a:	lea    rcx,[rip+0x34a87]        # 0x14003d9c8
   140008f41:	mov    r8d,0x274
   140008f47:	call   QWORD PTR [rip+0x34143]        # 0x14003d090
   140008f4d:	cmp    BYTE PTR [rbx+0x90],0x0
   140008f54:	je     0x140008f62
   140008f56:	mov    ecx,DWORD PTR [rbx+0x68]
   140008f59:	mov    eax,DWORD PTR [rbx+0x6c]
   140008f5c:	mov    DWORD PTR [rbx+0x68],eax
   140008f5f:	mov    DWORD PTR [rbx+0x6c],ecx
   140008f62:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140008f67:	xor    ecx,ecx
   140008f69:	lea    rdx,[rip+0x34a7c]        # 0x14003d9ec
   140008f70:	movaps XMMWORD PTR [rsp+0x20],xmm7
   140008f75:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140008f80:	movzx  eax,BYTE PTR [rdi+rcx*1]
   140008f84:	inc    rcx
   140008f87:	cmp    al,BYTE PTR [rdx+rcx*1-0x1]
   140008f8b:	jne    0x140008ff9
   140008f8d:	cmp    rcx,0x5
   140008f91:	jne    0x140008f80
   140008f93:	mov    rax,QWORD PTR [rbx+0x50]
   140008f97:	mov    ecx,DWORD PTR [rax+0x28]
   140008f9a:	test   ecx,ecx
   140008f9c:	jle    0x140009010
   140008f9e:	movd   xmm0,DWORD PTR [rbx+0x68]
   140008fa3:	movd   xmm7,DWORD PTR [rax+0x2c]
   140008fa8:	movsd  xmm1,QWORD PTR [rip+0x34430]        # 0x14003d3e0
   140008fb0:	cvtdq2pd xmm0,xmm0
   140008fb4:	cvtdq2pd xmm7,xmm7
   140008fb8:	movd   xmm6,ecx
   140008fbc:	cvtdq2pd xmm6,xmm6
   140008fc0:	divsd  xmm6,xmm0
   140008fc4:	movd   xmm0,DWORD PTR [rbx+0x6c]
   140008fc9:	cvtdq2pd xmm0,xmm0
   140008fcd:	divsd  xmm7,xmm0
   140008fd1:	comisd xmm1,xmm6
   140008fd5:	ja     0x140008fe1
   140008fd7:	comisd xmm1,xmm7
   140008fdb:	jbe    0x140009062
   140008fe1:	comisd xmm7,xmm6
   140008fe5:	jbe    0x140008ff0
   140008fe7:	divsd  xmm7,xmm6
   140008feb:	movaps xmm6,xmm1
   140008fee:	jmp    0x140009062
   140008ff0:	divsd  xmm6,xmm7
   140008ff4:	movaps xmm7,xmm1
   140008ff7:	jmp    0x140009062
   140008ff9:	mov    rcx,rdi
   140008ffc:	call   QWORD PTR [rip+0x3403e]        # 0x14003d040
   140009002:	xorps  xmm1,xmm1
   140009005:	ucomisd xmm0,xmm1
   140009009:	movaps xmm7,xmm0
   14000900c:	jp     0x14000902c
   14000900e:	jne    0x14000902c
   140009010:	xor    eax,eax
   140009012:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140009017:	movaps xmm7,XMMWORD PTR [rsp+0x20]
   14000901c:	mov    rbx,QWORD PTR [rsp+0x50]
   140009021:	mov    rsi,QWORD PTR [rsp+0x58]
   140009026:	add    rsp,0x40
   14000902a:	pop    rdi
   14000902b:	ret    
   14000902c:	movd   xmm6,DWORD PTR [rbx+0x6c]
   140009031:	movd   xmm0,DWORD PTR [rbx+0x68]
   140009036:	cvtdq2pd xmm6,xmm6
   14000903a:	cvtdq2pd xmm0,xmm0
   14000903e:	divsd  xmm6,xmm0
   140009042:	comisd xmm7,xmm6
   140009046:	jbe    0x140009056
   140009048:	divsd  xmm7,xmm6
   14000904c:	movsd  xmm6,QWORD PTR [rip+0x3438c]        # 0x14003d3e0
   140009054:	jmp    0x140009062
   140009056:	divsd  xmm6,xmm7
   14000905a:	movsd  xmm7,QWORD PTR [rip+0x3437e]        # 0x14003d3e0
   140009062:	cmp    BYTE PTR [rbx+0x90],0x0
   140009069:	je     0x140009074
   14000906b:	movaps xmm0,xmm6
   14000906e:	movaps xmm6,xmm7
   140009071:	movaps xmm7,xmm0
   140009074:	mov    rcx,rbx
   140009077:	call   0x14002a4e0
   14000907c:	test   rax,rax
   14000907f:	je     0x1400090b7
   140009081:	mov    rcx,QWORD PTR [rax+0x88]
   140009088:	movaps xmm0,xmm6
   14000908b:	mov    rdx,rax
   14000908e:	mulsd  xmm0,QWORD PTR [rcx]
   140009092:	movsd  QWORD PTR [rcx],xmm0
   140009096:	mov    rcx,QWORD PTR [rax+0x88]
   14000909d:	movaps xmm0,xmm7
   1400090a0:	mulsd  xmm0,QWORD PTR [rcx+0x8]
   1400090a5:	movsd  QWORD PTR [rcx+0x8],xmm0
   1400090aa:	mov    rcx,rbx
   1400090ad:	call   0x14002a5e0
   1400090b2:	test   rax,rax
   1400090b5:	jne    0x140009081
   1400090b7:	movaps xmm2,xmm7
   1400090ba:	movaps xmm1,xmm6
   1400090bd:	mov    rcx,rbx
   1400090c0:	call   0x140009960
   1400090c5:	movsd  QWORD PTR [rsi],xmm6
   1400090c9:	movsd  QWORD PTR [rsi+0x8],xmm7
   1400090ce:	mov    eax,0x1
   1400090d3:	jmp    0x140009012
   1400090d8:	mov    rbx,QWORD PTR [rsp+0x50]
   1400090dd:	mov    rsi,QWORD PTR [rsp+0x58]
   1400090e2:	add    rsp,0x40
   1400090e6:	pop    rdi
   1400090e7:	ret    
   1400090e8:	int3   
   1400090e9:	int3   
   1400090ea:	int3   
   1400090eb:	int3   
   1400090ec:	int3   
   1400090ed:	int3   
   1400090ee:	int3   
   1400090ef:	int3   
   1400090f0:	mov    r11,rsp
   1400090f3:	push   rbp
   1400090f4:	push   rbx
   1400090f5:	push   r13
   1400090f7:	push   r14
   1400090f9:	lea    rbp,[r11-0xe8]
   140009100:	sub    rsp,0x1c8
   140009107:	mov    rax,QWORD PTR [rcx+0x28]
   14000910b:	mov    r13,r8
   14000910e:	mov    rbx,rdx
   140009111:	mov    r14,rcx
   140009114:	test   rax,rax
   140009117:	je     0x140009452
   14000911d:	cmp    QWORD PTR [rax+0x20],0x0
   140009122:	je     0x140009452
   140009128:	mov    QWORD PTR [r11+0x8],rsi
   14000912c:	mov    QWORD PTR [r11+0x10],rdi
   140009130:	mov    QWORD PTR [r11+0x18],r12
   140009134:	mov    QWORD PTR [r11-0x28],r15
   140009138:	xor    r15d,r15d
   14000913b:	lea    rsi,[rbp-0x28]
   14000913f:	movaps XMMWORD PTR [r11-0x38],xmm6
   140009144:	movaps XMMWORD PTR [r11-0x48],xmm7
   140009149:	movaps XMMWORD PTR [r11-0x58],xmm8
   14000914e:	mov    edi,r15d
   140009151:	movaps XMMWORD PTR [r11-0x68],xmm9
   140009156:	movaps XMMWORD PTR [r11-0x78],xmm10
   14000915b:	movaps XMMWORD PTR [r11-0x88],xmm11
   140009163:	movaps XMMWORD PTR [r11-0x98],xmm12
   14000916b:	movaps XMMWORD PTR [r11-0xa8],xmm13
   140009173:	movaps XMMWORD PTR [r11-0xb8],xmm14
   14000917b:	movaps XMMWORD PTR [r11-0xc8],xmm15
   140009183:	mov    rcx,r14
   140009186:	call   0x14001bb10
   14000918b:	mov    ecx,DWORD PTR [rbx+rdi*8]
   14000918e:	inc    rdi
   140009191:	sub    ecx,eax
   140009193:	shr    rax,0x20
   140009197:	add    rsi,0x10
   14000919b:	movd   xmm0,ecx
   14000919f:	mov    ecx,DWORD PTR [rbx+rdi*8-0x4]
   1400091a3:	sub    ecx,eax
   1400091a5:	cvtdq2pd xmm0,xmm0
   1400091a9:	movsd  QWORD PTR [rsi-0x18],xmm0
   1400091ae:	movd   xmm0,ecx
   1400091b2:	cvtdq2pd xmm0,xmm0
   1400091b6:	movsd  QWORD PTR [rsi-0x10],xmm0
   1400091bb:	cmp    rdi,0x4
   1400091bf:	jl     0x140009183
   1400091c1:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   1400091c5:	mov    rax,QWORD PTR [r14+0x28]
   1400091c9:	lea    rdx,[rsp+0x40]
   1400091ce:	mov    r8,r13
   1400091d1:	mov    rcx,r14
   1400091d4:	movaps XMMWORD PTR [rsp+0x40],xmm0
   1400091d9:	call   QWORD PTR [rax+0x20]
   1400091dc:	mov    edi,eax
   1400091de:	test   al,al
   1400091e0:	je     0x1400091eb
   1400091e2:	mov    r12,r15
   1400091e5:	lea    r15,[rbp-0x70]
   1400091e9:	jmp    0x1400091ef
   1400091eb:	lea    r12,[rbp-0x70]
   1400091ef:	movsd  xmm15,QWORD PTR [rip+0x341e8]        # 0x14003d3e0
   1400091f8:	xorps  xmm8,xmm8
   1400091fc:	xor    sil,sil
   1400091ff:	movaps xmm14,xmm8
   140009203:	test   al,al
   140009205:	je     0x14000920d
   140009207:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   14000920b:	jmp    0x140009211
   14000920d:	movaps xmm0,XMMWORD PTR [rbp+0x0]
   140009211:	movsd  xmm10,QWORD PTR [rip+0x34346]        # 0x14003d560
   14000921a:	movsd  xmm6,QWORD PTR [rip+0x341b6]        # 0x14003d3d8
   140009222:	movups XMMWORD PTR [rsp+0x30],xmm0
   140009227:	movss  xmm13,DWORD PTR [rsp+0x3c]
   14000922e:	movss  xmm12,DWORD PTR [rsp+0x38]
   140009235:	movss  xmm11,DWORD PTR [rsp+0x34]
   14000923c:	movss  xmm9,DWORD PTR [rsp+0x30]
   140009243:	movaps xmm7,xmm15
   140009247:	lea    rdx,[rbp-0x30]
   14000924b:	lea    rcx,[rbp+0x10]
   14000924f:	addsd  xmm7,xmm14
   140009254:	mov    r8d,0x3
   14000925a:	mov    QWORD PTR [rsp+0x28],r15
   14000925f:	movss  DWORD PTR [rsp+0x30],xmm9
   140009266:	movss  DWORD PTR [rsp+0x34],xmm11
   14000926d:	movss  DWORD PTR [rsp+0x38],xmm12
   140009274:	mov    QWORD PTR [rsp+0x20],r12
   140009279:	mulsd  xmm7,xmm6
   14000927d:	movaps xmm3,xmm7
   140009280:	movss  DWORD PTR [rsp+0x3c],xmm13
   140009287:	call   0x14001abf0
   14000928c:	lea    rdx,[rsp+0x40]
   140009291:	mov    r8,r13
   140009294:	mov    rcx,r14
   140009297:	movups xmm0,XMMWORD PTR [rax]
   14000929a:	mov    rax,QWORD PTR [r14+0x28]
   14000929e:	movups xmm9,xmm0
   1400092a2:	movss  DWORD PTR [rsp+0x40],xmm9
   1400092a9:	movaps xmm11,xmm0
   1400092ad:	movaps xmm12,xmm0
   1400092b1:	movaps xmm13,xmm0
   1400092b5:	shufps xmm11,xmm0,0x55
   1400092ba:	shufps xmm12,xmm0,0xaa
   1400092bf:	shufps xmm13,xmm0,0xff
   1400092c4:	movss  DWORD PTR [rsp+0x44],xmm11
   1400092cb:	movss  DWORD PTR [rsp+0x48],xmm12
   1400092d2:	movss  DWORD PTR [rsp+0x4c],xmm13
   1400092d9:	call   QWORD PTR [rax+0x20]
   1400092dc:	movaps xmm2,XMMWORD PTR [rbp-0x40]
   1400092e0:	movaps xmm3,XMMWORD PTR [rbp-0x50]
   1400092e4:	movaps xmm4,XMMWORD PTR [rbp-0x60]
   1400092e8:	movaps xmm5,XMMWORD PTR [rbp-0x70]
   1400092ec:	test   al,al
   1400092ee:	jne    0x140009306
   1400092f0:	movaps XMMWORD PTR [rsp+0x50],xmm5
   1400092f5:	movaps XMMWORD PTR [rsp+0x60],xmm4
   1400092fa:	movaps XMMWORD PTR [rsp+0x70],xmm3
   1400092ff:	mov    sil,0x1
   140009302:	movaps XMMWORD PTR [rbp-0x80],xmm2
   140009306:	cmp    al,dil
   140009309:	jne    0x140009311
   14000930b:	movaps xmm14,xmm7
   14000930f:	jmp    0x140009315
   140009311:	movaps xmm15,xmm7
   140009315:	movsd  xmm1,QWORD PTR [rsp+0x30]
   14000931b:	movss  xmm0,xmm9
   140009320:	unpcklps xmm0,xmm11
   140009324:	subsd  xmm1,xmm0
   140009328:	andps  xmm1,xmm10
   14000932c:	comisd xmm1,xmm6
   140009330:	ja     0x140009243
   140009336:	movsd  xmm1,QWORD PTR [rsp+0x38]
   14000933c:	movss  xmm0,xmm12
   140009341:	unpcklps xmm0,xmm13
   140009345:	subsd  xmm1,xmm0
   140009349:	andps  xmm1,xmm10
   14000934d:	comisd xmm1,xmm6
   140009351:	ja     0x140009243
   140009357:	movaps xmm15,XMMWORD PTR [rsp+0x120]
   140009360:	movaps xmm14,XMMWORD PTR [rsp+0x130]
   140009369:	movaps xmm13,XMMWORD PTR [rsp+0x140]
   140009372:	mov    r15,QWORD PTR [rsp+0x1c0]
   14000937a:	mov    r12,QWORD PTR [rsp+0x200]
   140009382:	movaps xmm12,XMMWORD PTR [rsp+0x150]
   14000938b:	movaps xmm11,XMMWORD PTR [rsp+0x160]
   140009394:	movaps xmm10,XMMWORD PTR [rsp+0x170]
   14000939d:	movaps xmm9,XMMWORD PTR [rsp+0x180]
   1400093a6:	movaps xmm7,XMMWORD PTR [rsp+0x1a0]
   1400093ae:	test   sil,sil
   1400093b1:	jne    0x1400093c6
   1400093b3:	movaps XMMWORD PTR [rsp+0x50],xmm5
   1400093b8:	movaps XMMWORD PTR [rsp+0x60],xmm4
   1400093bd:	movaps XMMWORD PTR [rsp+0x70],xmm3
   1400093c2:	movaps XMMWORD PTR [rbp-0x80],xmm2
   1400093c6:	lea    rdi,[rsp+0x58]
   1400093cb:	mov    esi,0x4
   1400093d0:	mov    rcx,r14
   1400093d3:	call   0x14001bb10
   1400093d8:	movd   xmm0,eax
   1400093dc:	cvtdq2pd xmm0,xmm0
   1400093e0:	addsd  xmm0,QWORD PTR [rdi-0x8]
   1400093e5:	comisd xmm0,xmm8
   1400093ea:	jb     0x1400093f2
   1400093ec:	addsd  xmm0,xmm6
   1400093f0:	jmp    0x1400093f6
   1400093f2:	subsd  xmm0,xmm6
   1400093f6:	cvttsd2si ecx,xmm0
   1400093fa:	shr    rax,0x20
   1400093fe:	movd   xmm0,eax
   140009402:	mov    DWORD PTR [rbx],ecx
   140009404:	cvtdq2pd xmm0,xmm0
   140009408:	addsd  xmm0,QWORD PTR [rdi]
   14000940c:	comisd xmm0,xmm8
   140009411:	jb     0x140009419
   140009413:	addsd  xmm0,xmm6
   140009417:	jmp    0x14000941d
   140009419:	subsd  xmm0,xmm6
   14000941d:	cvttsd2si eax,xmm0
   140009421:	add    rbx,0x8
   140009425:	add    rdi,0x10
   140009429:	mov    DWORD PTR [rbx-0x4],eax
   14000942c:	dec    rsi
   14000942f:	jne    0x1400093d0
   140009431:	movaps xmm8,XMMWORD PTR [rsp+0x190]
   14000943a:	movaps xmm6,XMMWORD PTR [rsp+0x1b0]
   140009442:	mov    rdi,QWORD PTR [rsp+0x1f8]
   14000944a:	mov    rsi,QWORD PTR [rsp+0x1f0]
   140009452:	add    rsp,0x1c8
   140009459:	pop    r14
   14000945b:	pop    r13
   14000945d:	pop    rbx
   14000945e:	pop    rbp
   14000945f:	ret    
   140009460:	xor    eax,eax
   140009462:	ret    
   140009463:	int3   
   140009464:	int3   
   140009465:	int3   
   140009466:	int3   
   140009467:	int3   
   140009468:	int3   
   140009469:	int3   
   14000946a:	int3   
   14000946b:	int3   
   14000946c:	int3   
   14000946d:	int3   
   14000946e:	int3   
   14000946f:	int3   
   140009470:	mov    QWORD PTR [rsp+0x8],rbx
   140009475:	push   rdi
   140009476:	sub    rsp,0x20
   14000947a:	cmp    QWORD PTR [rcx+0x28],0x0
   14000947f:	movsxd rdi,edx
   140009482:	mov    rbx,rcx
   140009485:	jne    0x140009495
   140009487:	mov    ecx,0x10
   14000948c:	call   0x14001d2c0
   140009491:	mov    QWORD PTR [rbx+0x28],rax
   140009495:	mov    rax,QWORD PTR [rbx+0x28]
   140009499:	mov    rcx,QWORD PTR [rax]
   14000949c:	mov    eax,DWORD PTR [rax+0x8]
   14000949f:	inc    eax
   1400094a1:	cdqe   
   1400094a3:	test   rcx,rcx
   1400094a6:	je     0x1400094b8
   1400094a8:	lea    rdx,[rax+rax*4]
   1400094ac:	shl    rdx,0x3
   1400094b0:	call   QWORD PTR [rip+0x33bf2]        # 0x14003d0a8
   1400094b6:	jmp    0x1400094c6
   1400094b8:	lea    rcx,[rax+rax*4]
   1400094bc:	shl    rcx,0x3
   1400094c0:	call   QWORD PTR [rip+0x33ca2]        # 0x14003d168
   1400094c6:	mov    rcx,rax
   1400094c9:	mov    rax,QWORD PTR [rbx+0x28]
   1400094cd:	mov    QWORD PTR [rax],rcx
   1400094d0:	mov    r8,QWORD PTR [rbx+0x28]
   1400094d4:	movsxd rdx,DWORD PTR [r8+0x8]
   1400094d8:	mov    rax,QWORD PTR [r8]
   1400094db:	lea    rcx,[rdx+rdx*4]
   1400094df:	lea    rbx,[rax+rcx*8]
   1400094e3:	lea    ecx,[rdx+0x1]
   1400094e6:	mov    DWORD PTR [r8+0x8],ecx
   1400094ea:	mov    rcx,rdi
   1400094ed:	shl    rcx,0x3
   1400094f1:	call   0x14001d2c0
   1400094f6:	mov    DWORD PTR [rbx+0x8],edi
   1400094f9:	mov    QWORD PTR [rbx],rax
   1400094fc:	xor    eax,eax
   1400094fe:	mov    QWORD PTR [rbx+0xc],rax
   140009502:	mov    rax,rbx
   140009505:	mov    rbx,QWORD PTR [rsp+0x30]
   14000950a:	add    rsp,0x20
   14000950e:	pop    rdi
   14000950f:	ret    
   140009510:	mov    QWORD PTR [rsp+0x8],rbx
   140009515:	push   rdi
   140009516:	sub    rsp,0x20
   14000951a:	mov    rbx,rcx
   14000951d:	movsx  ecx,BYTE PTR [rcx]
   140009520:	xor    edi,edi
   140009522:	call   QWORD PTR [rip+0x33b70]        # 0x14003d098
   140009528:	test   eax,eax
   14000952a:	je     0x140009541
   14000952c:	nop    DWORD PTR [rax+0x0]
   140009530:	movsx  ecx,BYTE PTR [rbx+0x1]
   140009534:	inc    rbx
   140009537:	call   QWORD PTR [rip+0x33b5b]        # 0x14003d098
   14000953d:	test   eax,eax
   14000953f:	jne    0x140009530
   140009541:	movzx  eax,BYTE PTR [rbx]
   140009544:	test   al,al
   140009546:	je     0x140009598
   140009548:	inc    edi
   14000954a:	test   al,al
   14000954c:	je     0x140009568
   14000954e:	xchg   ax,ax
   140009550:	movsx  ecx,al
   140009553:	call   QWORD PTR [rip+0x33b3f]        # 0x14003d098
   140009559:	test   eax,eax
   14000955b:	jne    0x140009568
   14000955d:	movzx  eax,BYTE PTR [rbx+0x1]
   140009561:	inc    rbx
   140009564:	test   al,al
   140009566:	jne    0x140009550
   140009568:	movsx  ecx,BYTE PTR [rbx]
   14000956b:	call   QWORD PTR [rip+0x33b27]        # 0x14003d098
   140009571:	test   eax,eax
   140009573:	je     0x140009591
   140009575:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140009580:	movsx  ecx,BYTE PTR [rbx+0x1]
   140009584:	inc    rbx
   140009587:	call   QWORD PTR [rip+0x33b0b]        # 0x14003d098
   14000958d:	test   eax,eax
   14000958f:	jne    0x140009580
   140009591:	movzx  eax,BYTE PTR [rbx]
   140009594:	test   al,al
   140009596:	jne    0x140009548
   140009598:	mov    eax,edi
   14000959a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000959f:	add    rsp,0x20
   1400095a3:	pop    rdi
   1400095a4:	ret    
   1400095a5:	int3   
   1400095a6:	int3   
   1400095a7:	int3   
   1400095a8:	int3   
   1400095a9:	int3   
   1400095aa:	int3   
   1400095ab:	int3   
   1400095ac:	int3   
   1400095ad:	int3   
   1400095ae:	int3   
   1400095af:	int3   
   1400095b0:	rex push rbp
   1400095b2:	push   rsi
   1400095b3:	push   rdi
   1400095b4:	lea    rbp,[rsp-0x47]
   1400095b9:	sub    rsp,0xc0
   1400095c0:	mov    rdi,rcx
   1400095c3:	test   dl,dl
   1400095c5:	je     0x1400095cd
   1400095c7:	mov    rsi,QWORD PTR [rcx+0x68]
   1400095cb:	jmp    0x1400095d1
   1400095cd:	mov    rsi,QWORD PTR [rcx+0x70]
   1400095d1:	mov    r8,QWORD PTR [rcx+0x28]
   1400095d5:	test   r8,r8
   1400095d8:	jne    0x1400095e1
   1400095da:	call   QWORD PTR [rip+0x33ac0]        # 0x14003d0a0
   1400095e0:	int3   
   1400095e1:	mov    QWORD PTR [rsp+0xe8],rbx
   1400095e9:	mov    QWORD PTR [rsp+0xf0],r14
   1400095f1:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   1400095f9:	movaps XMMWORD PTR [rsp+0xa0],xmm7
   140009601:	movaps XMMWORD PTR [rsp+0x90],xmm8
   14000960a:	movaps XMMWORD PTR [rsp+0x80],xmm9
   140009613:	test   dl,dl
   140009615:	jne    0x140009713
   14000961b:	mov    rcx,QWORD PTR [r8]
   14000961e:	mov    eax,DWORD PTR [rcx+0xc]
   140009621:	test   eax,0xffffff9f
   140009626:	jne    0x1400096fe
   14000962c:	cmp    eax,0x60
   14000962f:	je     0x1400096fe
   140009635:	mov    rax,QWORD PTR [rcx]
   140009638:	movsd  xmm3,QWORD PTR [rip+0x343c0]        # 0x14003da00
   140009640:	movd   xmm0,DWORD PTR [rax]
   140009644:	mov    rbx,QWORD PTR [rax]
   140009647:	mov    QWORD PTR [rbp+0x67],rbx
   14000964b:	cvtdq2pd xmm0,xmm0
   14000964f:	movsd  QWORD PTR [rbp-0x39],xmm0
   140009654:	mov    rax,QWORD PTR [rcx]
   140009657:	movd   xmm1,DWORD PTR [rax+0x4]
   14000965c:	cvtdq2pd xmm1,xmm1
   140009660:	movsd  QWORD PTR [rbp-0x31],xmm1
   140009665:	mov    rax,QWORD PTR [rcx]
   140009668:	movd   xmm0,DWORD PTR [rax+0x8]
   14000966d:	cvtdq2pd xmm0,xmm0
   140009671:	movsd  QWORD PTR [rbp-0x29],xmm0
   140009676:	mov    rax,QWORD PTR [rcx]
   140009679:	movd   xmm1,DWORD PTR [rax+0xc]
   14000967e:	cvtdq2pd xmm1,xmm1
   140009682:	movsd  QWORD PTR [rbp-0x21],xmm1
   140009687:	mov    rax,QWORD PTR [rcx]
   14000968a:	movd   xmm0,DWORD PTR [rax+0x10]
   14000968f:	cvtdq2pd xmm0,xmm0
   140009693:	movsd  QWORD PTR [rbp-0x19],xmm0
   140009698:	mov    rax,QWORD PTR [rcx]
   14000969b:	movd   xmm1,DWORD PTR [rax+0x14]
   1400096a0:	cvtdq2pd xmm1,xmm1
   1400096a4:	movsd  QWORD PTR [rbp-0x11],xmm1
   1400096a9:	mov    rax,QWORD PTR [rcx]
   1400096ac:	movd   xmm0,DWORD PTR [rax+0x18]
   1400096b1:	cvtdq2pd xmm0,xmm0
   1400096b5:	movsd  QWORD PTR [rbp-0x9],xmm0
   1400096ba:	mov    rax,QWORD PTR [rcx]
   1400096bd:	movd   xmm1,DWORD PTR [rax+0x1c]
   1400096c2:	cvtdq2pd xmm1,xmm1
   1400096c6:	movsd  QWORD PTR [rbp-0x1],xmm1
   1400096cb:	xor    eax,eax
   1400096cd:	lea    rdx,[rbp-0x39]
   1400096d1:	lea    rcx,[rbp-0x49]
   1400096d5:	mov    QWORD PTR [rsp+0x28],rax
   1400096da:	lea    r8d,[rax+0x3]
   1400096de:	mov    QWORD PTR [rsp+0x20],rax
   1400096e3:	call   0x14001abf0
   1400096e8:	movups xmm0,XMMWORD PTR [rax]
   1400096eb:	movups XMMWORD PTR [rbp-0x49],xmm0
   1400096ef:	movsd  xmm6,QWORD PTR [rbp-0x41]
   1400096f4:	movsd  xmm7,QWORD PTR [rbp-0x49]
   1400096f9:	jmp    0x140009837
   1400096fe:	mov    rax,QWORD PTR [rcx]
   140009701:	mov    rbx,QWORD PTR [rcx+0x14]
   140009705:	movd   xmm7,DWORD PTR [rax]
   140009709:	movd   xmm6,DWORD PTR [rax+0x4]
   14000970e:	jmp    0x14000982b
   140009713:	mov    eax,DWORD PTR [r8+0x8]
   140009717:	mov    r8,QWORD PTR [r8]
   14000971a:	dec    eax
   14000971c:	cdqe   
   14000971e:	lea    rdx,[rax+rax*4]
   140009722:	mov    eax,DWORD PTR [r8+rdx*8+0x10]
   140009727:	test   eax,0xffffff9f
   14000972c:	jne    0x140009811
   140009732:	cmp    eax,0x60
   140009735:	je     0x140009811
   14000973b:	movsxd rcx,DWORD PTR [r8+rdx*8+0x8]
   140009740:	mov    rax,QWORD PTR [r8+rdx*8]
   140009744:	movsd  xmm3,QWORD PTR [rip+0x342c4]        # 0x14003da10
   14000974c:	mov    rbx,QWORD PTR [rax+rcx*8-0x8]
   140009751:	movd   xmm0,DWORD PTR [rax+rcx*8-0x20]
   140009757:	mov    QWORD PTR [rbp+0x67],rbx
   14000975b:	cvtdq2pd xmm0,xmm0
   14000975f:	movsd  QWORD PTR [rbp-0x39],xmm0
   140009764:	movsxd rcx,DWORD PTR [r8+rdx*8+0x8]
   140009769:	mov    rax,QWORD PTR [r8+rdx*8]
   14000976d:	movd   xmm0,DWORD PTR [rax+rcx*8-0x1c]
   140009773:	cvtdq2pd xmm0,xmm0
   140009777:	movsd  QWORD PTR [rbp-0x31],xmm0
   14000977c:	movsxd rcx,DWORD PTR [r8+rdx*8+0x8]
   140009781:	mov    rax,QWORD PTR [r8+rdx*8]
   140009785:	movd   xmm0,DWORD PTR [rax+rcx*8-0x18]
   14000978b:	cvtdq2pd xmm0,xmm0
   14000978f:	movsd  QWORD PTR [rbp-0x29],xmm0
   140009794:	movsxd rcx,DWORD PTR [r8+rdx*8+0x8]
   140009799:	mov    rax,QWORD PTR [r8+rdx*8]
   14000979d:	movd   xmm0,DWORD PTR [rax+rcx*8-0x14]
   1400097a3:	cvtdq2pd xmm0,xmm0
   1400097a7:	movsd  QWORD PTR [rbp-0x21],xmm0
   1400097ac:	movsxd rcx,DWORD PTR [r8+rdx*8+0x8]
   1400097b1:	mov    rax,QWORD PTR [r8+rdx*8]
   1400097b5:	movd   xmm0,DWORD PTR [rax+rcx*8-0x10]
   1400097bb:	cvtdq2pd xmm0,xmm0
   1400097bf:	movsd  QWORD PTR [rbp-0x19],xmm0
   1400097c4:	movsxd rcx,DWORD PTR [r8+rdx*8+0x8]
   1400097c9:	mov    rax,QWORD PTR [r8+rdx*8]
   1400097cd:	movd   xmm0,DWORD PTR [rax+rcx*8-0xc]
   1400097d3:	cvtdq2pd xmm0,xmm0
   1400097d7:	movsd  QWORD PTR [rbp-0x11],xmm0
   1400097dc:	movsxd rcx,DWORD PTR [r8+rdx*8+0x8]
   1400097e1:	mov    rax,QWORD PTR [r8+rdx*8]
   1400097e5:	movd   xmm0,DWORD PTR [rax+rcx*8-0x8]
   1400097eb:	cvtdq2pd xmm0,xmm0
   1400097ef:	movsd  QWORD PTR [rbp-0x9],xmm0
   1400097f4:	movsxd rcx,DWORD PTR [r8+rdx*8+0x8]
   1400097f9:	mov    rax,QWORD PTR [r8+rdx*8]
   1400097fd:	movd   xmm0,DWORD PTR [rax+rcx*8-0x4]
   140009803:	cvtdq2pd xmm0,xmm0
   140009807:	movsd  QWORD PTR [rbp-0x1],xmm0
   14000980c:	jmp    0x1400096cb
   140009811:	movsxd rcx,DWORD PTR [r8+rdx*8+0x8]
   140009816:	mov    rax,QWORD PTR [r8+rdx*8]
   14000981a:	mov    rbx,QWORD PTR [r8+rdx*8+0x1c]
   14000981f:	movd   xmm7,DWORD PTR [rax+rcx*8-0x8]
   140009825:	movd   xmm6,DWORD PTR [rax+rcx*8-0x4]
   14000982b:	cvtdq2pd xmm6,xmm6
   14000982f:	cvtdq2pd xmm7,xmm7
   140009833:	mov    QWORD PTR [rbp+0x67],rbx
   140009837:	mov    rdx,QWORD PTR [rip+0x4ba8a]        # 0x1400552c8
   14000983e:	movsd  xmm3,QWORD PTR [rip+0x341f2]        # 0x14003da38
   140009846:	movsd  xmm2,QWORD PTR [rip+0x341e2]        # 0x14003da30
   14000984e:	mov    rcx,rdi
   140009851:	call   0x14001c2e0
   140009856:	mov    r14d,DWORD PTR [rbp+0x6b]
   14000985a:	movd   xmm3,ebx
   14000985e:	movaps xmm8,xmm0
   140009862:	movd   xmm2,r14d
   140009867:	divsd  xmm8,QWORD PTR [rip+0x341b8]        # 0x14003da28
   140009870:	cvtdq2pd xmm3,xmm3
   140009874:	subsd  xmm7,xmm3
   140009878:	cvtdq2pd xmm2,xmm2
   14000987c:	movaps xmm1,xmm7
   14000987f:	subsd  xmm6,xmm2
   140009883:	mulsd  xmm8,QWORD PTR [rip+0x33fbc]        # 0x14003d848
   14000988c:	movaps xmm0,xmm6
   14000988f:	call   0x14003b8a8
   140009894:	mov    rdx,QWORD PTR [rip+0x4ba35]        # 0x1400552d0
   14000989b:	movsd  xmm2,QWORD PTR [rip+0x33b3d]        # 0x14003d3e0
   1400098a3:	xorps  xmm9,xmm9
   1400098a7:	mov    rcx,rdi
   1400098aa:	movaps xmm3,xmm9
   1400098ae:	addsd  xmm8,xmm0
   1400098b3:	call   0x14001c2e0
   1400098b8:	movaps xmm7,xmm0
   1400098bb:	movaps xmm0,xmm8
   1400098bf:	mulsd  xmm7,QWORD PTR [rip+0x34159]        # 0x14003da20
   1400098c7:	call   0x14003b87e
   1400098cc:	movsd  xmm6,QWORD PTR [rip+0x33b04]        # 0x14003d3d8
   1400098d4:	mulsd  xmm0,xmm7
   1400098d8:	comisd xmm0,xmm9
   1400098dd:	jb     0x1400098e5
   1400098df:	addsd  xmm0,xmm6
   1400098e3:	jmp    0x1400098e9
   1400098e5:	subsd  xmm0,xmm6
   1400098e9:	cvttsd2si eax,xmm0
   1400098ed:	movaps xmm0,xmm8
   1400098f1:	add    eax,ebx
   1400098f3:	mov    DWORD PTR [rsi+0x30],eax
   1400098f6:	call   0x14003b884
   1400098fb:	mov    rbx,QWORD PTR [rsp+0xe8]
   140009903:	movaps xmm8,XMMWORD PTR [rsp+0x90]
   14000990c:	mulsd  xmm0,xmm7
   140009910:	movaps xmm7,XMMWORD PTR [rsp+0xa0]
   140009918:	comisd xmm0,xmm9
   14000991d:	movaps xmm9,XMMWORD PTR [rsp+0x80]
   140009926:	jb     0x14000992e
   140009928:	addsd  xmm0,xmm6
   14000992c:	jmp    0x140009932
   14000992e:	subsd  xmm0,xmm6
   140009932:	movaps xmm6,XMMWORD PTR [rsp+0xb0]
   14000993a:	cvttsd2si eax,xmm0
   14000993e:	add    eax,r14d
   140009941:	mov    r14,QWORD PTR [rsp+0xf0]
   140009949:	mov    DWORD PTR [rsi+0x34],eax
   14000994c:	add    rsp,0xc0
   140009953:	pop    rdi
   140009954:	pop    rsi
   140009955:	pop    rbp
   140009956:	ret    
   140009957:	int3   
   140009958:	int3   
   140009959:	int3   
   14000995a:	int3   
   14000995b:	int3   
   14000995c:	int3   
   14000995d:	int3   
   14000995e:	int3   
   14000995f:	int3   
   140009960:	mov    QWORD PTR [rsp+0x10],rsi
   140009965:	push   rdi
   140009966:	sub    rsp,0x40
   14000996a:	movd   xmm0,DWORD PTR [rcx+0x68]
   14000996f:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140009974:	mov    edi,0x1
   140009979:	movaps xmm6,xmm2
   14000997c:	mov    rsi,rcx
   14000997f:	cvtdq2pd xmm0,xmm0
   140009983:	movaps XMMWORD PTR [rsp+0x20],xmm7
   140009988:	movaps xmm7,xmm1
   14000998b:	mulsd  xmm0,xmm1
   14000998f:	cvttsd2si eax,xmm0
   140009993:	movd   xmm0,DWORD PTR [rcx+0x6c]
   140009998:	cvtdq2pd xmm0,xmm0
   14000999c:	mov    DWORD PTR [rcx+0x68],eax
   14000999f:	mulsd  xmm0,xmm2
   1400099a3:	cvttsd2si eax,xmm0
   1400099a7:	movd   xmm0,DWORD PTR [rcx+0x60]
   1400099ac:	cvtdq2pd xmm0,xmm0
   1400099b0:	mov    DWORD PTR [rcx+0x6c],eax
   1400099b3:	mulsd  xmm0,xmm1
   1400099b7:	cvttsd2si eax,xmm0
   1400099bb:	movd   xmm0,DWORD PTR [rcx+0x64]
   1400099c0:	cvtdq2pd xmm0,xmm0
   1400099c4:	mov    DWORD PTR [rcx+0x60],eax
   1400099c7:	mulsd  xmm0,xmm2
   1400099cb:	cvttsd2si eax,xmm0
   1400099cf:	mov    DWORD PTR [rcx+0x64],eax
   1400099d2:	cmp    DWORD PTR [rcx+0xdc],edi
   1400099d8:	jl     0x140009a19
   1400099da:	mov    QWORD PTR [rsp+0x50],rbx
   1400099df:	mov    ebx,0x8
   1400099e4:	nop    DWORD PTR [rax+0x0]
   1400099e8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400099f0:	mov    rcx,QWORD PTR [rsi+0xe0]
   1400099f7:	movaps xmm2,xmm6
   1400099fa:	movaps xmm1,xmm7
   1400099fd:	mov    rcx,QWORD PTR [rcx+rbx*1]
   140009a01:	call   0x140009960
   140009a06:	inc    edi
   140009a08:	lea    rbx,[rbx+0x8]
   140009a0c:	cmp    edi,DWORD PTR [rsi+0xdc]
   140009a12:	jle    0x1400099f0
   140009a14:	mov    rbx,QWORD PTR [rsp+0x50]
   140009a19:	mov    rsi,QWORD PTR [rsp+0x58]
   140009a1e:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140009a23:	movaps xmm7,XMMWORD PTR [rsp+0x20]
   140009a28:	add    rsp,0x40
   140009a2c:	pop    rdi
   140009a2d:	ret    
   140009a2e:	int3   
   140009a2f:	int3   
   140009a30:	rex push rbx
   140009a32:	sub    rsp,0x60
   140009a36:	mov    rbx,rcx
   140009a39:	call   0x140008c90
   140009a3e:	mov    rdx,QWORD PTR [rbx+0x60]
   140009a42:	lea    rcx,[rsp+0x30]
   140009a47:	call   0x14001bc30
   140009a4c:	mov    rcx,rbx
   140009a4f:	movups xmm0,XMMWORD PTR [rax]
   140009a52:	movups XMMWORD PTR [rsp+0x20],xmm0
   140009a57:	call   0x14002a4e0
   140009a5c:	test   rax,rax
   140009a5f:	je     0x140009ac2
   140009a61:	movaps XMMWORD PTR [rsp+0x50],xmm6
   140009a66:	movsd  xmm6,QWORD PTR [rsp+0x28]
   140009a6c:	movaps XMMWORD PTR [rsp+0x40],xmm7
   140009a71:	movsd  xmm7,QWORD PTR [rsp+0x20]
   140009a77:	nop    WORD PTR [rax+rax*1+0x0]
   140009a80:	mov    rcx,QWORD PTR [rax+0x88]
   140009a87:	mov    rdx,rax
   140009a8a:	movsd  xmm0,QWORD PTR [rcx]
   140009a8e:	subsd  xmm0,xmm7
   140009a92:	movsd  QWORD PTR [rcx],xmm0
   140009a96:	mov    rcx,QWORD PTR [rax+0x88]
   140009a9d:	movsd  xmm0,QWORD PTR [rcx+0x8]
   140009aa2:	subsd  xmm0,xmm6
   140009aa6:	movsd  QWORD PTR [rcx+0x8],xmm0
   140009aab:	mov    rcx,rbx
   140009aae:	call   0x14002a5e0
   140009ab3:	test   rax,rax
   140009ab6:	jne    0x140009a80
   140009ab8:	movaps xmm7,XMMWORD PTR [rsp+0x40]
   140009abd:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   140009ac2:	mov    eax,DWORD PTR [rbx+0x60]
   140009ac5:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140009aca:	lea    rdx,[rsp+0x30]
   140009acf:	sub    DWORD PTR [rbx+0x68],eax
   140009ad2:	mov    eax,DWORD PTR [rbx+0x64]
   140009ad5:	mov    rcx,rbx
   140009ad8:	movaps XMMWORD PTR [rsp+0x30],xmm0
   140009add:	sub    DWORD PTR [rbx+0x6c],eax
   140009ae0:	xor    eax,eax
   140009ae2:	mov    QWORD PTR [rbx+0x60],rax
   140009ae6:	call   0x140009b00
   140009aeb:	add    rsp,0x60
   140009aef:	pop    rbx
   140009af0:	ret    
   140009af1:	int3   
   140009af2:	int3   
   140009af3:	int3   
   140009af4:	int3   
   140009af5:	int3   
   140009af6:	int3   
   140009af7:	int3   
   140009af8:	int3   
   140009af9:	int3   
   140009afa:	int3   
   140009afb:	int3   
   140009afc:	int3   
   140009afd:	int3   
   140009afe:	int3   
   140009aff:	int3   
   140009b00:	mov    rax,rsp
   140009b03:	mov    QWORD PTR [rax+0x10],rdx
   140009b07:	mov    QWORD PTR [rax+0x8],rcx
   140009b0b:	push   rbp
   140009b0c:	push   rdi
   140009b0d:	push   r14
   140009b0f:	lea    rbp,[rax-0x158]
   140009b16:	sub    rsp,0x240
   140009b1d:	mov    QWORD PTR [rax-0x28],rsi
   140009b21:	mov    QWORD PTR [rax-0x30],r12
   140009b25:	mov    QWORD PTR [rax-0x38],r13
   140009b29:	mov    QWORD PTR [rax-0x40],r15
   140009b2d:	xor    esi,esi
   140009b2f:	lea    rdx,[rip+0x33966]        # 0x14003d49c
   140009b36:	movaps XMMWORD PTR [rax-0x68],xmm7
   140009b3a:	movaps XMMWORD PTR [rax-0x88],xmm9
   140009b42:	movaps XMMWORD PTR [rax-0xb8],xmm12
   140009b4a:	mov    r14,rcx
   140009b4d:	mov    DWORD PTR [rbp+0x170],esi
   140009b53:	mov    QWORD PTR [rbp-0x80],rsi
   140009b57:	movaps XMMWORD PTR [rax-0xc8],xmm13
   140009b5f:	movaps XMMWORD PTR [rax-0xe8],xmm15
   140009b67:	xorps  xmm15,xmm15
   140009b6b:	movaps xmm9,xmm15
   140009b6f:	call   0x1400275b0
   140009b74:	test   rax,rax
   140009b77:	je     0x140009b91
   140009b79:	mov    rcx,rax
   140009b7c:	call   QWORD PTR [rip+0x334be]        # 0x14003d040
   140009b82:	movaps xmm13,xmm0
   140009b86:	addsd  xmm13,QWORD PTR [rip+0x33851]        # 0x14003d3e0
   140009b8f:	jmp    0x140009b9a
   140009b91:	movsd  xmm13,QWORD PTR [rip+0x339ae]        # 0x14003d548
   140009b9a:	mov    QWORD PTR [rsp+0x238],rbx
   140009ba2:	movaps XMMWORD PTR [rsp+0x200],xmm6
   140009baa:	movaps XMMWORD PTR [rsp+0x1e0],xmm8
   140009bb3:	lea    rdx,[rbp+0x58]
   140009bb7:	mov    rcx,r14
   140009bba:	movsd  QWORD PTR [rbp+0x30],xmm13
   140009bc0:	movaps XMMWORD PTR [rsp+0x1c0],xmm10
   140009bc9:	movaps XMMWORD PTR [rsp+0x1b0],xmm11
   140009bd2:	call   0x140008ee0
   140009bd7:	lea    r15,[rip+0x33d3a]        # 0x14003d918
   140009bde:	mov    rcx,r14
   140009be1:	mov    DWORD PTR [rbp+0x178],eax
   140009be7:	mov    rdx,r15
   140009bea:	call   0x1400275b0
   140009bef:	mov    rcx,rax
   140009bf2:	call   0x14001c4b0
   140009bf7:	mov    rcx,r14
   140009bfa:	movsd  xmm12,QWORD PTR [rip+0x33885]        # 0x14003d488
   140009c03:	movsd  xmm7,QWORD PTR [rip+0x337cd]        # 0x14003d3d8
   140009c0b:	test   eax,eax
   140009c0d:	je     0x140009e76
   140009c13:	call   0x14002aef0
   140009c18:	movsxd rcx,eax
   140009c1b:	shl    rcx,0x3
   140009c1f:	call   0x14001d2c0
   140009c24:	mov    rcx,r14
   140009c27:	mov    r12,rax
   140009c2a:	mov    QWORD PTR [rsp+0x30],rax
   140009c2f:	call   0x14002a4e0
   140009c34:	mov    rbx,rax
   140009c37:	test   rax,rax
   140009c3a:	je     0x140009eea
   140009c40:	movsd  xmm11,QWORD PTR [rip+0x33daf]        # 0x14003d9f8
   140009c49:	movsd  xmm10,QWORD PTR [rip+0x33dc6]        # 0x14003da18
   140009c52:	lea    rdx,[rip+0x16337]        # 0x14001ff90
   140009c59:	nop    DWORD PTR [rax+0x0]
   140009c60:	mov    rcx,QWORD PTR [rbx+0x88]
   140009c67:	movsd  xmm0,QWORD PTR [rcx]
   140009c6b:	mulsd  xmm0,xmm12
   140009c70:	comisd xmm0,xmm15
   140009c75:	jb     0x140009c7d
   140009c77:	addsd  xmm0,xmm7
   140009c7b:	jmp    0x140009c81
   140009c7d:	subsd  xmm0,xmm7
   140009c81:	cvttsd2si eax,xmm0
   140009c85:	mov    DWORD PTR [rbx+0x38],eax
   140009c88:	movsd  xmm0,QWORD PTR [rcx+0x8]
   140009c8d:	mulsd  xmm0,xmm12
   140009c92:	comisd xmm0,xmm15
   140009c97:	jb     0x140009c9f
   140009c99:	addsd  xmm0,xmm7
   140009c9d:	jmp    0x140009ca3
   140009c9f:	subsd  xmm0,xmm7
   140009ca3:	cvttsd2si eax,xmm0
   140009ca7:	mov    DWORD PTR [rbx+0x3c],eax
   140009caa:	mov    rax,QWORD PTR [rbx+0x28]
   140009cae:	cmp    QWORD PTR [rax+0x8],rdx
   140009cb2:	jne    0x140009e4a
   140009cb8:	mov    ecx,0x10
   140009cbd:	call   0x14001d2c0
   140009cc2:	mov    QWORD PTR [r12],rax
   140009cc6:	mov    r13,QWORD PTR [rbx+0x30]
   140009cca:	mov    r15d,DWORD PTR [r13+0x8]
   140009cce:	cmp    r15d,0x3
   140009cd2:	jge    0x140009ce8
   140009cd4:	mov    r15d,0x8
   140009cda:	call   0x14000c540
   140009cdf:	movaps xmm9,xmm0
   140009ce3:	mulsd  xmm9,xmm11
   140009ce8:	mov    rax,QWORD PTR [r12]
   140009cec:	movsxd rdi,r15d
   140009cef:	shl    rdi,0x4
   140009cf3:	mov    DWORD PTR [rax+0x8],r15d
   140009cf7:	mov    rcx,rdi
   140009cfa:	call   0x14001d2c0
   140009cff:	xor    r14d,r14d
   140009d02:	mov    rcx,rax
   140009d05:	mov    rax,QWORD PTR [r12]
   140009d09:	mov    QWORD PTR [rax],rcx
   140009d0c:	test   r15d,r15d
   140009d0f:	jle    0x140009e37
   140009d15:	xor    esi,esi
   140009d17:	cmp    DWORD PTR [r13+0x8],0x3
   140009d1c:	jl     0x140009d7f
   140009d1e:	mov    rcx,QWORD PTR [r13+0x30]
   140009d22:	movsd  xmm0,QWORD PTR [rcx+rsi*1]
   140009d27:	mulsd  xmm0,xmm12
   140009d2c:	comisd xmm0,xmm15
   140009d31:	jb     0x140009d39
   140009d33:	addsd  xmm0,xmm7
   140009d37:	jmp    0x140009d3d
   140009d39:	subsd  xmm0,xmm7
   140009d3d:	cvttsd2si eax,xmm0
   140009d41:	movsd  xmm0,QWORD PTR [rcx+rsi*1+0x8]
   140009d47:	mulsd  xmm0,xmm12
   140009d4c:	comisd xmm0,xmm15
   140009d51:	movd   xmm8,eax
   140009d56:	cvtdq2pd xmm8,xmm8
   140009d5b:	mulsd  xmm8,xmm13
   140009d60:	jb     0x140009d68
   140009d62:	addsd  xmm0,xmm7
   140009d66:	jmp    0x140009d6c
   140009d68:	subsd  xmm0,xmm7
   140009d6c:	cvttsd2si eax,xmm0
   140009d70:	movd   xmm2,eax
   140009d74:	cvtdq2pd xmm2,xmm2
   140009d78:	mulsd  xmm2,xmm13
   140009d7d:	jmp    0x140009de9
   140009d7f:	movd   xmm6,r14d
   140009d84:	movd   xmm0,r15d
   140009d89:	cvtdq2pd xmm6,xmm6
   140009d8d:	cvtdq2pd xmm0,xmm0
   140009d91:	mulsd  xmm6,xmm10
   140009d96:	divsd  xmm6,xmm0
   140009d9a:	addsd  xmm6,xmm9
   140009d9f:	movaps xmm0,xmm6
   140009da2:	call   0x14003b87e
   140009da7:	mov    eax,DWORD PTR [rbx+0x58]
   140009daa:	add    eax,DWORD PTR [rbx+0x54]
   140009dad:	movaps xmm8,xmm0
   140009db1:	movaps xmm0,xmm6
   140009db4:	mulsd  xmm8,xmm13
   140009db9:	movd   xmm1,eax
   140009dbd:	cvtdq2pd xmm1,xmm1
   140009dc1:	mulsd  xmm8,xmm1
   140009dc6:	mulsd  xmm8,xmm7
   140009dcb:	call   0x14003b884
   140009dd0:	movd   xmm1,DWORD PTR [rbx+0x50]
   140009dd5:	movaps xmm2,xmm0
   140009dd8:	cvtdq2pd xmm1,xmm1
   140009ddc:	mulsd  xmm2,xmm13
   140009de1:	mulsd  xmm2,xmm1
   140009de5:	mulsd  xmm2,xmm7
   140009de9:	mov    rax,QWORD PTR [r12]
   140009ded:	movd   xmm1,DWORD PTR [rbx+0x38]
   140009df2:	inc    r14d
   140009df5:	mov    rcx,QWORD PTR [rax]
   140009df8:	sub    rdi,0x10
   140009dfc:	add    rsi,0x10
   140009e00:	cvtdq2pd xmm1,xmm1
   140009e04:	addsd  xmm1,xmm8
   140009e09:	movsd  QWORD PTR [rcx+rdi*1],xmm1
   140009e0e:	mov    rax,QWORD PTR [r12]
   140009e12:	movd   xmm0,DWORD PTR [rbx+0x3c]
   140009e17:	cvtdq2pd xmm0,xmm0
   140009e1b:	mov    rcx,QWORD PTR [rax]
   140009e1e:	addsd  xmm0,xmm2
   140009e22:	movsd  QWORD PTR [rcx+rdi*1+0x8],xmm0
   140009e28:	cmp    r14d,r15d
   140009e2b:	jl     0x140009d17
   140009e31:	mov    esi,DWORD PTR [rbp+0x170]
   140009e37:	mov    r14,QWORD PTR [rbp+0x160]
   140009e3e:	inc    esi
   140009e40:	add    r12,0x8
   140009e44:	mov    DWORD PTR [rbp+0x170],esi
   140009e4a:	mov    rdx,rbx
   140009e4d:	mov    rcx,r14
   140009e50:	call   0x14002a5e0
   140009e55:	lea    rdx,[rip+0x16134]        # 0x14001ff90
   140009e5c:	mov    rbx,rax
   140009e5f:	test   rax,rax
   140009e62:	jne    0x140009c60
   140009e68:	mov    r12,QWORD PTR [rsp+0x30]
   140009e6d:	lea    r15,[rip+0x33aa4]        # 0x14003d918
   140009e74:	jmp    0x140009eea
   140009e76:	xor    r12d,r12d
   140009e79:	mov    QWORD PTR [rsp+0x30],r12
   140009e7e:	call   0x14002a4e0
   140009e83:	test   rax,rax
   140009e86:	je     0x140009eea
   140009e88:	nop    DWORD PTR [rax+rax*1+0x0]
   140009e90:	mov    rdx,QWORD PTR [rax+0x88]
   140009e97:	movsd  xmm0,QWORD PTR [rdx]
   140009e9b:	mulsd  xmm0,xmm12
   140009ea0:	comisd xmm0,xmm15
   140009ea5:	jb     0x140009ead
   140009ea7:	addsd  xmm0,xmm7
   140009eab:	jmp    0x140009eb1
   140009ead:	subsd  xmm0,xmm7
   140009eb1:	cvttsd2si ecx,xmm0
   140009eb5:	mov    DWORD PTR [rax+0x38],ecx
   140009eb8:	movsd  xmm0,QWORD PTR [rdx+0x8]
   140009ebd:	mulsd  xmm0,xmm12
   140009ec2:	comisd xmm0,xmm15
   140009ec7:	jb     0x140009ecf
   140009ec9:	addsd  xmm0,xmm7
   140009ecd:	jmp    0x140009ed3
   140009ecf:	subsd  xmm0,xmm7
   140009ed3:	cvttsd2si ecx,xmm0
   140009ed7:	mov    rdx,rax
   140009eda:	mov    DWORD PTR [rax+0x3c],ecx
   140009edd:	mov    rcx,r14
   140009ee0:	call   0x14002a5e0
   140009ee5:	test   rax,rax
   140009ee8:	jne    0x140009e90
   140009eea:	test   r12,r12
   140009eed:	je     0x140009f20
   140009eef:	mov    edx,esi
   140009ef1:	mov    rcx,r12
   140009ef4:	call   0x140007170
   140009ef9:	test   eax,eax
   140009efb:	jne    0x14000a1e1
   140009f01:	cmp    BYTE PTR [rip+0x4b5b2],al        # 0x1400554b9
   140009f07:	je     0x140009f20
   140009f09:	call   QWORD PTR [rip+0x333c1]        # 0x14003d2d0
   140009f0f:	lea    rdx,[rip+0x33a0a]        # 0x14003d920
   140009f16:	lea    rcx,[rax+0x60]
   140009f1a:	call   QWORD PTR [rip+0x333a0]        # 0x14003d2c0
   140009f20:	xor    edi,edi
   140009f22:	cmp    BYTE PTR [rip+0x4b590],0x0        # 0x1400554b9
   140009f29:	mov    QWORD PTR [rsp+0x50],rdi
   140009f2e:	je     0x140009f58
   140009f30:	lea    rbx,[rip+0x33a21]        # 0x14003d958
   140009f37:	test   rdi,rdi
   140009f3a:	cmovne rbx,r15
   140009f3e:	call   QWORD PTR [rip+0x3338c]        # 0x14003d2d0
   140009f44:	lea    rdx,[rip+0x33a1d]        # 0x14003d968
   140009f4b:	lea    rcx,[rax+0x60]
   140009f4f:	mov    r8,rbx
   140009f52:	call   QWORD PTR [rip+0x33368]        # 0x14003d2c0
   140009f58:	movaps XMMWORD PTR [rsp+0x180],xmm14
   140009f61:	movsxd r13,esi
   140009f64:	test   rdi,rdi
   140009f67:	je     0x14000a189
   140009f6d:	mov    rcx,r14
   140009f70:	call   0x14002a4e0
   140009f75:	mov    r12,rax
   140009f78:	mov    QWORD PTR [rsp+0x38],rax
   140009f7d:	test   rax,rax
   140009f80:	je     0x14000a184
   140009f86:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009f90:	mov    rdx,r12
   140009f93:	mov    rcx,r14
   140009f96:	call   0x14002b830
   140009f9b:	mov    r15,rax
   140009f9e:	test   rax,rax
   140009fa1:	je     0x14000a15f
   140009fa7:	mov    r12,QWORD PTR [rsp+0x30]
   140009fac:	nop    DWORD PTR [rax+0x0]
   140009fb0:	mov    rcx,QWORD PTR [r15+0x18]
   140009fb4:	call   0x14001bb10
   140009fb9:	mov    rcx,QWORD PTR [r15+0x10]
   140009fbd:	movd   xmm0,eax
   140009fc1:	shr    rax,0x20
   140009fc5:	cvtdq2pd xmm0,xmm0
   140009fc9:	movsd  QWORD PTR [rsp+0x40],xmm0
   140009fcf:	movd   xmm0,eax
   140009fd3:	cvtdq2pd xmm0,xmm0
   140009fd7:	movsd  QWORD PTR [rsp+0x48],xmm0
   140009fdd:	call   0x14001bb10
   140009fe2:	movss  xmm6,DWORD PTR [rsp+0x4c]
   140009fe8:	movss  xmm8,DWORD PTR [rsp+0x48]
   140009fef:	mov    edi,0xfffffba9
   140009ff4:	xor    r14d,r14d
   140009ff7:	xor    ebx,ebx
   140009ff9:	mov    esi,edi
   140009ffb:	movd   xmm0,eax
   140009fff:	shr    rax,0x20
   14000a003:	movss  xmm9,DWORD PTR [rsp+0x44]
   14000a00a:	movss  xmm10,DWORD PTR [rsp+0x40]
   14000a011:	cvtdq2pd xmm0,xmm0
   14000a015:	movsd  QWORD PTR [rbp-0x60],xmm0
   14000a01a:	movss  xmm13,DWORD PTR [rbp-0x5c]
   14000a020:	movss  xmm14,DWORD PTR [rbp-0x60]
   14000a026:	movd   xmm0,eax
   14000a02a:	cvtdq2pd xmm0,xmm0
   14000a02e:	movsd  QWORD PTR [rbp-0x58],xmm0
   14000a033:	movss  xmm11,DWORD PTR [rbp-0x54]
   14000a039:	movss  xmm12,DWORD PTR [rbp-0x58]
   14000a03f:	test   r13,r13
   14000a042:	jle    0x14000a0dc
   14000a048:	cmp    esi,0xfffffba9
   14000a04e:	jne    0x14000a08a
   14000a050:	mov    rax,QWORD PTR [r12+rbx*8]
   14000a054:	lea    rdx,[rsp+0x60]
   14000a059:	lea    rcx,[rbp-0x70]
   14000a05d:	movss  DWORD PTR [rsp+0x60],xmm10
   14000a064:	movss  DWORD PTR [rsp+0x64],xmm9
   14000a06b:	movss  DWORD PTR [rsp+0x68],xmm8
   14000a072:	movups xmm0,XMMWORD PTR [rax]
   14000a075:	movss  DWORD PTR [rsp+0x6c],xmm6
   14000a07b:	movaps XMMWORD PTR [rbp-0x70],xmm0
   14000a07f:	call   0x140017e30
   14000a084:	test   eax,eax
   14000a086:	cmovne esi,r14d
   14000a08a:	cmp    edi,0xfffffba9
   14000a090:	jne    0x14000a0cd
   14000a092:	mov    rax,QWORD PTR [r12+rbx*8]
   14000a096:	lea    rdx,[rsp+0x70]
   14000a09b:	lea    rcx,[rbp-0x70]
   14000a09f:	movss  DWORD PTR [rsp+0x70],xmm14
   14000a0a6:	movss  DWORD PTR [rsp+0x74],xmm13
   14000a0ad:	movss  DWORD PTR [rsp+0x78],xmm12
   14000a0b4:	movups xmm0,XMMWORD PTR [rax]
   14000a0b7:	movss  DWORD PTR [rsp+0x7c],xmm11
   14000a0be:	movaps XMMWORD PTR [rbp-0x70],xmm0
   14000a0c2:	call   0x140017e30
   14000a0c7:	test   eax,eax
   14000a0c9:	cmovne edi,r14d
   14000a0cd:	inc    rbx
   14000a0d0:	inc    r14d
   14000a0d3:	cmp    rbx,r13
   14000a0d6:	jl     0x14000a048
   14000a0dc:	lea    rax,[rbp-0x40]
   14000a0e0:	lea    r9,[rbp-0x30]
   14000a0e4:	lea    rdx,[rbp-0x20]
   14000a0e8:	movss  DWORD PTR [rbp-0x30],xmm14
   14000a0ee:	movss  DWORD PTR [rbp-0x2c],xmm13
   14000a0f4:	movss  DWORD PTR [rbp-0x28],xmm12
   14000a0fa:	mov    QWORD PTR [rsp+0x28],rax
   14000a0ff:	mov    DWORD PTR [rsp+0x20],edi
   14000a103:	mov    rdi,QWORD PTR [rsp+0x50]
   14000a108:	movss  DWORD PTR [rbp-0x24],xmm11
   14000a10e:	movss  DWORD PTR [rbp-0x20],xmm10
   14000a114:	movss  DWORD PTR [rbp-0x1c],xmm9
   14000a11a:	movss  DWORD PTR [rbp-0x18],xmm8
   14000a120:	movss  DWORD PTR [rbp-0x14],xmm6
   14000a125:	mov    rcx,rdi
   14000a128:	mov    r8d,esi
   14000a12b:	call   0x140016da0
   14000a130:	mov    r14,QWORD PTR [rbp+0x160]
   14000a137:	mov    rdx,r15
   14000a13a:	movups xmm0,XMMWORD PTR [rbp-0x40]
   14000a13e:	mov    rcx,r14
   14000a141:	movups XMMWORD PTR [r15+0x98],xmm0
   14000a149:	call   0x14002b9e0
   14000a14e:	mov    r15,rax
   14000a151:	test   rax,rax
   14000a154:	jne    0x140009fb0
   14000a15a:	mov    r12,QWORD PTR [rsp+0x38]
   14000a15f:	mov    rdx,r12
   14000a162:	mov    rcx,r14
   14000a165:	call   0x14002a5e0
   14000a16a:	mov    r12,rax
   14000a16d:	mov    QWORD PTR [rsp+0x38],rax
   14000a172:	test   rax,rax
   14000a175:	jne    0x140009f90
   14000a17b:	movsd  xmm12,QWORD PTR [rip+0x33304]        # 0x14003d488
   14000a184:	mov    r12,QWORD PTR [rsp+0x30]
   14000a189:	cmp    DWORD PTR [rip+0x4b318],0x1        # 0x1400554a8
   14000a190:	jle    0x14000a1f3
   14000a192:	mov    rcx,QWORD PTR [r14+0x48]
   14000a196:	lea    rdx,[rip+0x337e7]        # 0x14003d984
   14000a19d:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a1a1:	call   0x140027500
   14000a1a6:	mov    r15,rax
   14000a1a9:	mov    QWORD PTR [rbp-0x80],rax
   14000a1ad:	movsd  xmm0,QWORD PTR [rip+0x4b2eb]        # 0x1400554a0
   14000a1b5:	ucomisd xmm0,xmm15
   14000a1ba:	jp     0x14000a1be
   14000a1bc:	je     0x14000a1f7
   14000a1be:	mov    rbx,QWORD PTR [rbp+0x168]
   14000a1c5:	mulsd  xmm0,QWORD PTR [rbx]
   14000a1c9:	movsd  QWORD PTR [rbx],xmm0
   14000a1cd:	movsd  xmm0,QWORD PTR [rip+0x4b2cb]        # 0x1400554a0
   14000a1d5:	mulsd  xmm0,QWORD PTR [rbx+0x8]
   14000a1da:	movsd  QWORD PTR [rbx+0x8],xmm0
   14000a1df:	jmp    0x14000a1fe
   14000a1e1:	mov    edx,esi
   14000a1e3:	mov    rcx,r12
   14000a1e6:	call   0x140016bc0
   14000a1eb:	mov    rdi,rax
   14000a1ee:	jmp    0x140009f22
   14000a1f3:	mov    r15,QWORD PTR [rbp-0x80]
   14000a1f7:	mov    rbx,QWORD PTR [rbp+0x168]
   14000a1fe:	mov    rcx,r14
   14000a201:	call   0x14002a4e0
   14000a206:	mov    QWORD PTR [rbp+0x10],rax
   14000a20a:	test   rax,rax
   14000a20d:	je     0x14000a742
   14000a213:	mov    rdx,rax
   14000a216:	mov    rcx,r14
   14000a219:	call   0x14002b830
   14000a21e:	mov    rsi,rax
   14000a221:	test   rax,rax
   14000a224:	je     0x14000a717
   14000a22a:	nop    WORD PTR [rax+rax*1+0x0]
   14000a230:	mov    rcx,QWORD PTR [rsi+0x18]
   14000a234:	call   0x14001bb10
   14000a239:	mov    rcx,QWORD PTR [rsi+0x10]
   14000a23d:	movd   xmm6,eax
   14000a241:	shr    rax,0x20
   14000a245:	movd   xmm8,eax
   14000a24a:	cvtdq2pd xmm6,xmm6
   14000a24e:	movsd  QWORD PTR [rbp-0x60],xmm6
   14000a253:	movsd  QWORD PTR [rsp+0x70],xmm6
   14000a259:	cvtdq2pd xmm8,xmm8
   14000a25e:	movsd  QWORD PTR [rbp-0x20],xmm8
   14000a264:	movsd  QWORD PTR [rsp+0x78],xmm8
   14000a26b:	call   0x14001bb10
   14000a270:	movd   xmm9,eax
   14000a275:	shr    rax,0x20
   14000a279:	cmp    DWORD PTR [rip+0x4b228],0x1        # 0x1400554a8
   14000a280:	movd   xmm10,eax
   14000a285:	cvtdq2pd xmm9,xmm9
   14000a28a:	movsd  QWORD PTR [rsp+0x40],xmm9
   14000a291:	cvtdq2pd xmm10,xmm10
   14000a296:	movsd  QWORD PTR [rsp+0x48],xmm10
   14000a29d:	jle    0x14000a2c5
   14000a29f:	mov    r9d,DWORD PTR [rbp+0x178]
   14000a2a6:	lea    rax,[rbp+0x58]
   14000a2aa:	mov    r8,rbx
   14000a2ad:	mov    rdx,rsi
   14000a2b0:	mov    rcx,r15
   14000a2b3:	mov    QWORD PTR [rsp+0x20],rax
   14000a2b8:	call   0x14000a8c0
   14000a2bd:	test   eax,eax
   14000a2bf:	jne    0x14000a608
   14000a2c5:	test   rdi,rdi
   14000a2c8:	je     0x14000a50f
   14000a2ce:	mov    rax,QWORD PTR [rsi+0x10]
   14000a2d2:	cmp    QWORD PTR [rsi+0x18],rax
   14000a2d6:	je     0x14000a50f
   14000a2dc:	mov    r14d,0xfffffba9
   14000a2e2:	xor    edi,edi
   14000a2e4:	xor    ebx,ebx
   14000a2e6:	mov    r15d,r14d
   14000a2e9:	test   r13,r13
   14000a2ec:	jle    0x14000a3cf
   14000a2f2:	movss  xmm6,DWORD PTR [rsp+0x7c]
   14000a2f8:	movss  xmm8,DWORD PTR [rsp+0x78]
   14000a2ff:	movss  xmm9,DWORD PTR [rsp+0x74]
   14000a306:	movss  xmm10,DWORD PTR [rsp+0x70]
   14000a30d:	movss  xmm11,DWORD PTR [rsp+0x4c]
   14000a314:	movss  xmm12,DWORD PTR [rsp+0x48]
   14000a31b:	movss  xmm13,DWORD PTR [rsp+0x44]
   14000a322:	movss  xmm14,DWORD PTR [rsp+0x40]
   14000a329:	nop    DWORD PTR [rax+0x0]
   14000a330:	cmp    r15d,0xfffffba9
   14000a337:	jne    0x14000a36e
   14000a339:	mov    rax,QWORD PTR [r12+rbx*8]
   14000a33d:	lea    rdx,[rbp-0x40]
   14000a341:	lea    rcx,[rbp+0x20]
   14000a345:	movss  DWORD PTR [rbp-0x40],xmm10
   14000a34b:	movss  DWORD PTR [rbp-0x3c],xmm9
   14000a351:	movss  DWORD PTR [rbp-0x38],xmm8
   14000a357:	movups xmm0,XMMWORD PTR [rax]
   14000a35a:	movss  DWORD PTR [rbp-0x34],xmm6
   14000a35f:	movaps XMMWORD PTR [rbp+0x20],xmm0
   14000a363:	call   0x140017e30
   14000a368:	test   eax,eax
   14000a36a:	cmovne r15d,edi
   14000a36e:	cmp    r14d,0xfffffba9
   14000a375:	jne    0x14000a3ad
   14000a377:	mov    rax,QWORD PTR [r12+rbx*8]
   14000a37b:	lea    rdx,[rbp-0x70]
   14000a37f:	lea    rcx,[rbp+0x20]
   14000a383:	movss  DWORD PTR [rbp-0x70],xmm14
   14000a389:	movss  DWORD PTR [rbp-0x6c],xmm13
   14000a38f:	movss  DWORD PTR [rbp-0x68],xmm12
   14000a395:	movups xmm0,XMMWORD PTR [rax]
   14000a398:	movss  DWORD PTR [rbp-0x64],xmm11
   14000a39e:	movaps XMMWORD PTR [rbp+0x20],xmm0
   14000a3a2:	call   0x140017e30
   14000a3a7:	test   eax,eax
   14000a3a9:	cmovne r14d,edi
   14000a3ad:	inc    rbx
   14000a3b0:	inc    edi
   14000a3b2:	cmp    rbx,r13
   14000a3b5:	jl     0x14000a330
   14000a3bb:	movsd  xmm8,QWORD PTR [rbp-0x20]
   14000a3c1:	movsd  xmm9,QWORD PTR [rsp+0x40]
   14000a3c8:	movsd  xmm10,QWORD PTR [rsp+0x48]
   14000a3cf:	mov    edx,DWORD PTR [rbp+0x170]
   14000a3d5:	movups xmm6,XMMWORD PTR [rsi+0x98]
   14000a3dc:	lea    rax,[rbp-0x50]
   14000a3e0:	mov    QWORD PTR [rsp+0x28],rax
   14000a3e5:	lea    rax,[rbp-0x30]
   14000a3e9:	mov    r9d,r14d
   14000a3ec:	mov    r8d,r15d
   14000a3ef:	mov    rcx,r12
   14000a3f2:	mov    QWORD PTR [rsp+0x20],rax
   14000a3f7:	call   0x140008a00
   14000a3fc:	mov    r15,QWORD PTR [rbp-0x30]
   14000a400:	mov    edx,DWORD PTR [rbp-0x50]
   14000a403:	movdqa XMMWORD PTR [rbp+0x20],xmm6
   14000a408:	movups XMMWORD PTR [rbp+0x38],xmm15
   14000a40d:	movups XMMWORD PTR [rbp+0x48],xmm15
   14000a412:	lea    rax,[rsp+0x60]
   14000a417:	lea    r9,[rbp+0x38]
   14000a41b:	lea    r8,[rbp+0x20]
   14000a41f:	mov    rcx,r15
   14000a422:	mov    QWORD PTR [rsp+0x20],rax
   14000a427:	call   0x1400108f0
   14000a42c:	movsxd rbx,DWORD PTR [rsp+0x68]
   14000a431:	mov    rcx,rbx
   14000a434:	shl    rcx,0x3
   14000a438:	call   QWORD PTR [rip+0x32d2a]        # 0x14003d168
   14000a43e:	xor    r9d,r9d
   14000a441:	mov    r14,rax
   14000a444:	test   ebx,ebx
   14000a446:	jle    0x14000a4aa
   14000a448:	xor    edx,edx
   14000a44a:	mov    r8,rax
   14000a44d:	nop    DWORD PTR [rax]
   14000a450:	mov    rcx,QWORD PTR [rsp+0x60]
   14000a455:	movsd  xmm0,QWORD PTR [rdx+rcx*1]
   14000a45a:	comisd xmm0,xmm15
   14000a45f:	jb     0x14000a467
   14000a461:	addsd  xmm0,xmm7
   14000a465:	jmp    0x14000a46b
   14000a467:	subsd  xmm0,xmm7
   14000a46b:	cvttsd2si eax,xmm0
   14000a46f:	mov    DWORD PTR [r8],eax
   14000a472:	mov    rax,QWORD PTR [rsp+0x60]
   14000a477:	movsd  xmm0,QWORD PTR [rdx+rax*1+0x8]
   14000a47d:	comisd xmm0,xmm15
   14000a482:	jb     0x14000a48a
   14000a484:	addsd  xmm0,xmm7
   14000a488:	jmp    0x14000a48e
   14000a48a:	subsd  xmm0,xmm7
   14000a48e:	cvttsd2si eax,xmm0
   14000a492:	inc    r9d
   14000a495:	add    rdx,0x10
   14000a499:	add    r8,0x8
   14000a49d:	mov    DWORD PTR [r8-0x4],eax
   14000a4a1:	mov    ebx,DWORD PTR [rsp+0x68]
   14000a4a5:	cmp    r9d,ebx
   14000a4a8:	jl     0x14000a450
   14000a4aa:	cmp    BYTE PTR [rip+0x4b008],0x1        # 0x1400554b9
   14000a4b1:	jbe    0x14000a4de
   14000a4b3:	mov    rbx,QWORD PTR [rsi+0x10]
   14000a4b7:	mov    rdi,QWORD PTR [rsi+0x18]
   14000a4bb:	call   QWORD PTR [rip+0x32e0f]        # 0x14003d2d0
   14000a4c1:	mov    r9,QWORD PTR [rbx+0x10]
   14000a4c5:	mov    r8,QWORD PTR [rdi+0x10]
   14000a4c9:	lea    rcx,[rax+0x60]
   14000a4cd:	lea    rdx,[rip+0x334b4]        # 0x14003d988
   14000a4d4:	call   QWORD PTR [rip+0x32de6]        # 0x14003d2c0
   14000a4da:	mov    ebx,DWORD PTR [rsp+0x68]
   14000a4de:	mov    r8d,ebx
   14000a4e1:	mov    rdx,r14
   14000a4e4:	mov    rcx,rsi
   14000a4e7:	call   0x140008740
   14000a4ec:	mov    rcx,r14
   14000a4ef:	call   QWORD PTR [rip+0x32dab]        # 0x14003d2a0
   14000a4f5:	mov    rcx,r15
   14000a4f8:	call   QWORD PTR [rip+0x32da2]        # 0x14003d2a0
   14000a4fe:	mov    r14,QWORD PTR [rbp+0x160]
   14000a505:	movsd  xmm6,QWORD PTR [rbp-0x60]
   14000a50a:	jmp    0x14000a601
   14000a50f:	mov    rcx,QWORD PTR [rsi+0x18]
   14000a513:	call   0x14001bb10
   14000a518:	mov    QWORD PTR [rbp-0x10],rax
   14000a51c:	mov    rcx,QWORD PTR [rsi+0x10]
   14000a520:	call   0x14001bb10
   14000a525:	mov    QWORD PTR [rbp+0x8],rax
   14000a529:	mov    rdx,QWORD PTR [rsi+0x10]
   14000a52d:	cmp    QWORD PTR [rsi+0x18],rdx
   14000a531:	je     0x14000a592
   14000a533:	mov    rdx,QWORD PTR [rbp-0x10]
   14000a537:	mov    rcx,rax
   14000a53a:	call   0x14001d0b0
   14000a53f:	mov    rcx,QWORD PTR [rbp-0x10]
   14000a543:	mov    QWORD PTR [rsp+0x30],rax
   14000a548:	mov    eax,0x55555556
   14000a54d:	imul   DWORD PTR [rsp+0x30]
   14000a551:	mov    eax,edx
   14000a553:	shr    eax,0x1f
   14000a556:	add    edx,eax
   14000a558:	mov    eax,0x55555556
   14000a55d:	mov    DWORD PTR [rsp+0x30],edx
   14000a561:	imul   DWORD PTR [rsp+0x34]
   14000a565:	mov    eax,edx
   14000a567:	shr    eax,0x1f
   14000a56a:	add    edx,eax
   14000a56c:	mov    DWORD PTR [rsp+0x34],edx
   14000a570:	mov    rdx,QWORD PTR [rsp+0x30]
   14000a575:	call   0x14001b3e0
   14000a57a:	mov    rdx,QWORD PTR [rsp+0x30]
   14000a57f:	mov    rcx,QWORD PTR [rbp+0x8]
   14000a583:	mov    QWORD PTR [rbp-0x8],rax
   14000a587:	call   0x14001d0b0
   14000a58c:	mov    QWORD PTR [rbp+0x0],rax
   14000a590:	jmp    0x14000a5ef
   14000a592:	movsd  xmm0,QWORD PTR [rbp+0x30]
   14000a597:	mulsd  xmm0,QWORD PTR [rip+0x33469]        # 0x14003da08
   14000a59f:	mulsd  xmm0,xmm12
   14000a5a4:	comisd xmm0,xmm15
   14000a5a9:	jb     0x14000a5b1
   14000a5ab:	addsd  xmm0,xmm7
   14000a5af:	jmp    0x14000a5b5
   14000a5b1:	subsd  xmm0,xmm7
   14000a5b5:	mov    ebx,DWORD PTR [rdx+0x58]
   14000a5b8:	cvttsd2si ecx,xmm0
   14000a5bc:	mov    DWORD PTR [rsp+0x34],0x0
   14000a5c4:	add    ebx,ecx
   14000a5c6:	mov    rcx,QWORD PTR [rbp-0x10]
   14000a5ca:	mov    DWORD PTR [rsp+0x30],ebx
   14000a5ce:	mov    rdx,QWORD PTR [rsp+0x30]
   14000a5d3:	call   0x14001b3e0
   14000a5d8:	mov    QWORD PTR [rbp+0x0],rax
   14000a5dc:	mov    QWORD PTR [rbp-0x8],rax
   14000a5e0:	shr    rax,0x20
   14000a5e4:	lea    ecx,[rax+rbx*1]
   14000a5e7:	sub    eax,ebx
   14000a5e9:	mov    DWORD PTR [rbp-0x4],ecx
   14000a5ec:	mov    DWORD PTR [rbp+0x4],eax
   14000a5ef:	lea    rdx,[rbp-0x10]
   14000a5f3:	mov    r8d,0x4
   14000a5f9:	mov    rcx,rsi
   14000a5fc:	call   0x140008740
   14000a601:	mov    rbx,QWORD PTR [rbp+0x168]
   14000a608:	mov    r8,QWORD PTR [rsi+0x60]
   14000a60c:	test   r8,r8
   14000a60f:	je     0x14000a6ee
   14000a615:	movaps xmm0,xmm9
   14000a619:	movaps xmm1,xmm10
   14000a61d:	addsd  xmm0,xmm6
   14000a621:	addsd  xmm1,xmm8
   14000a626:	subsd  xmm6,xmm9
   14000a62b:	mulsd  xmm0,xmm7
   14000a62f:	mulsd  xmm1,xmm7
   14000a633:	cvttsd2si eax,xmm0
   14000a637:	movsd  xmm0,QWORD PTR [r8+0x28]
   14000a63d:	subsd  xmm8,xmm10
   14000a642:	mulsd  xmm0,QWORD PTR [rip+0x32e3e]        # 0x14003d488
   14000a64a:	mov    DWORD PTR [rsp+0x30],eax
   14000a64e:	cvttsd2si eax,xmm1
   14000a652:	mov    DWORD PTR [rsp+0x34],eax
   14000a656:	cvttsd2si eax,xmm6
   14000a65a:	cdq    
   14000a65b:	mov    ecx,eax
   14000a65d:	xor    ecx,edx
   14000a65f:	cvttsd2si eax,xmm8
   14000a664:	sub    ecx,edx
   14000a666:	cdq    
   14000a667:	xor    eax,edx
   14000a669:	sub    eax,edx
   14000a66b:	cmp    ecx,eax
   14000a66d:	jle    0x14000a69a
   14000a66f:	comisd xmm0,xmm15
   14000a674:	mov    DWORD PTR [rsp+0x38],0x0
   14000a67c:	jb     0x14000a684
   14000a67e:	addsd  xmm0,xmm7
   14000a682:	jmp    0x14000a688
   14000a684:	subsd  xmm0,xmm7
   14000a688:	cvttsd2si eax,xmm0
   14000a68c:	cdq    
   14000a68d:	sub    eax,edx
   14000a68f:	sar    eax,1
   14000a691:	add    eax,0x2
   14000a694:	mov    DWORD PTR [rsp+0x3c],eax
   14000a698:	jmp    0x14000a6d2
   14000a69a:	comisd xmm0,xmm15
   14000a69f:	jb     0x14000a6a7
   14000a6a1:	addsd  xmm0,xmm7
   14000a6a5:	jmp    0x14000a6ab
   14000a6a7:	subsd  xmm0,xmm7
   14000a6ab:	cvttsd2si eax,xmm0
   14000a6af:	mov    DWORD PTR [rsp+0x3c],0x0
   14000a6b7:	cdq    
   14000a6b8:	sub    eax,edx
   14000a6ba:	sar    eax,1
   14000a6bc:	movd   xmm0,eax
   14000a6c0:	cvtdq2pd xmm0,xmm0
   14000a6c4:	addsd  xmm0,QWORD PTR [r8+0x18]
   14000a6ca:	cvttsd2si eax,xmm0
   14000a6ce:	mov    DWORD PTR [rsp+0x38],eax
   14000a6d2:	mov    rdx,QWORD PTR [rsp+0x38]
   14000a6d7:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a6dc:	call   0x14001b3e0
   14000a6e1:	mov    rcx,QWORD PTR [rsi+0x60]
   14000a6e5:	mov    QWORD PTR [rcx+0x30],rax
   14000a6e9:	mov    QWORD PTR [rsp+0x30],rax
   14000a6ee:	mov    rdx,rsi
   14000a6f1:	mov    rcx,r14
   14000a6f4:	call   0x14002b9e0
   14000a6f9:	mov    rdi,QWORD PTR [rsp+0x50]
   14000a6fe:	mov    r15,QWORD PTR [rbp-0x80]
   14000a702:	movsd  xmm12,QWORD PTR [rip+0x32d7d]        # 0x14003d488
   14000a70b:	mov    rsi,rax
   14000a70e:	test   rax,rax
   14000a711:	jne    0x14000a230
   14000a717:	mov    rdx,QWORD PTR [rbp+0x10]
   14000a71b:	mov    rcx,r14
   14000a71e:	call   0x14002a5e0
   14000a723:	mov    rdi,QWORD PTR [rsp+0x50]
   14000a728:	mov    r15,QWORD PTR [rbp-0x80]
   14000a72c:	movsd  xmm12,QWORD PTR [rip+0x32d53]        # 0x14003d488
   14000a735:	mov    QWORD PTR [rbp+0x10],rax
   14000a739:	test   rax,rax
   14000a73c:	jne    0x14000a213
   14000a742:	mov    rcx,r14
   14000a745:	call   0x140008c90
   14000a74a:	cmp    QWORD PTR [rip+0x4aba6],0x0        # 0x1400552f8
   14000a752:	mov    r15,QWORD PTR [rsp+0x218]
   14000a75a:	movaps xmm15,XMMWORD PTR [rsp+0x170]
   14000a763:	movaps xmm14,XMMWORD PTR [rsp+0x180]
   14000a76c:	movaps xmm13,XMMWORD PTR [rsp+0x190]
   14000a775:	mov    r13,QWORD PTR [rsp+0x220]
   14000a77d:	mov    r12,QWORD PTR [rsp+0x228]
   14000a785:	mov    rsi,QWORD PTR [rsp+0x230]
   14000a78d:	movaps xmm12,XMMWORD PTR [rsp+0x1a0]
   14000a796:	movaps xmm11,XMMWORD PTR [rsp+0x1b0]
   14000a79f:	movaps xmm10,XMMWORD PTR [rsp+0x1c0]
   14000a7a8:	movaps xmm9,XMMWORD PTR [rsp+0x1d0]
   14000a7b1:	movaps xmm8,XMMWORD PTR [rsp+0x1e0]
   14000a7ba:	movaps xmm7,XMMWORD PTR [rsp+0x1f0]
   14000a7c2:	movaps xmm6,XMMWORD PTR [rsp+0x200]
   14000a7ca:	jne    0x14000a7da
   14000a7cc:	cmp    QWORD PTR [rip+0x4ab1c],0x0        # 0x1400552f0
   14000a7d4:	je     0x14000a88c
   14000a7da:	mov    rcx,r14
   14000a7dd:	call   0x14002a4e0
   14000a7e2:	mov    rdi,rax
   14000a7e5:	test   rax,rax
   14000a7e8:	je     0x14000a88c
   14000a7ee:	xchg   ax,ax
   14000a7f0:	cmp    QWORD PTR [rip+0x4ab00],0x0        # 0x1400552f8
   14000a7f8:	je     0x14000a834
   14000a7fa:	mov    rdx,rdi
   14000a7fd:	mov    rcx,r14
   14000a800:	call   0x14002b7d0
   14000a805:	mov    rbx,rax
   14000a808:	test   rax,rax
   14000a80b:	je     0x14000a834
   14000a80d:	nop    DWORD PTR [rax]
   14000a810:	cmp    QWORD PTR [rbx+0x68],0x0
   14000a815:	je     0x14000a821
   14000a817:	mov    dl,0x1
   14000a819:	mov    rcx,rbx
   14000a81c:	call   0x1400095b0
   14000a821:	mov    rdx,rbx
   14000a824:	mov    rcx,r14
   14000a827:	call   0x14002b9a0
   14000a82c:	mov    rbx,rax
   14000a82f:	test   rax,rax
   14000a832:	jne    0x14000a810
   14000a834:	cmp    QWORD PTR [rip+0x4aab4],0x0        # 0x1400552f0
   14000a83c:	je     0x14000a875
   14000a83e:	mov    rdx,rdi
   14000a841:	mov    rcx,r14
   14000a844:	call   0x14002b830
   14000a849:	mov    rbx,rax
   14000a84c:	test   rax,rax
   14000a84f:	je     0x14000a875
   14000a851:	cmp    QWORD PTR [rbx+0x70],0x0
   14000a856:	je     0x14000a862
   14000a858:	xor    edx,edx
   14000a85a:	mov    rcx,rbx
   14000a85d:	call   0x1400095b0
   14000a862:	mov    rdx,rbx
   14000a865:	mov    rcx,r14
   14000a868:	call   0x14002b9e0
   14000a86d:	mov    rbx,rax
   14000a870:	test   rax,rax
   14000a873:	jne    0x14000a851
   14000a875:	mov    rdx,rdi
   14000a878:	mov    rcx,r14
   14000a87b:	call   0x14002a5e0
   14000a880:	mov    rdi,rax
   14000a883:	test   rax,rax
   14000a886:	jne    0x14000a7f0
   14000a88c:	mov    DWORD PTR [rip+0x4abd2],0x1        # 0x140055468
   14000a896:	mov    rbx,QWORD PTR [rsp+0x238]
   14000a89e:	add    rsp,0x240
   14000a8a5:	pop    r14
   14000a8a7:	pop    rdi
   14000a8a8:	pop    rbp
   14000a8a9:	ret    
   14000a8aa:	int3   
   14000a8ab:	int3   
   14000a8ac:	int3   
   14000a8ad:	int3   
   14000a8ae:	int3   
   14000a8af:	int3   
   14000a8b0:	xor    al,al
   14000a8b2:	ret    
   14000a8b3:	int3   
   14000a8b4:	int3   
   14000a8b5:	int3   
   14000a8b6:	int3   
   14000a8b7:	int3   
   14000a8b8:	int3   
   14000a8b9:	int3   
   14000a8ba:	int3   
   14000a8bb:	int3   
   14000a8bc:	int3   
   14000a8bd:	int3   
   14000a8be:	int3   
   14000a8bf:	int3   
   14000a8c0:	mov    DWORD PTR [rsp+0x20],r9d
   14000a8c5:	mov    QWORD PTR [rsp+0x10],rdx
   14000a8ca:	push   rbp
   14000a8cb:	push   rbx
   14000a8cc:	push   r14
   14000a8ce:	push   r15
   14000a8d0:	mov    rbp,rsp
   14000a8d3:	sub    rsp,0x78
   14000a8d7:	xor    ebx,ebx
   14000a8d9:	mov    r15d,r9d
   14000a8dc:	mov    r14,r8
   14000a8df:	mov    rax,rdx
   14000a8e2:	mov    DWORD PTR [rbp-0x48],ebx
   14000a8e5:	mov    DWORD PTR [rbp-0x44],ebx
   14000a8e8:	test   rcx,rcx
   14000a8eb:	jne    0x14000a8fa
   14000a8ed:	xor    eax,eax
   14000a8ef:	add    rsp,0x78
   14000a8f3:	pop    r15
   14000a8f5:	pop    r14
   14000a8f7:	pop    rbx
   14000a8f8:	pop    rbp
   14000a8f9:	ret    
   14000a8fa:	mov    edx,DWORD PTR [rcx+0x10]
   14000a8fd:	mov    rcx,rax
   14000a900:	mov    QWORD PTR [rsp+0x70],rdi
   14000a905:	call   0x140027720
   14000a90a:	mov    rdi,rax
   14000a90d:	cmp    BYTE PTR [rax],bl
   14000a90f:	jne    0x14000a923
   14000a911:	xor    eax,eax
   14000a913:	mov    rdi,QWORD PTR [rsp+0x70]
   14000a918:	add    rsp,0x78
   14000a91c:	pop    r15
   14000a91e:	pop    r14
   14000a920:	pop    rbx
   14000a921:	pop    rbp
   14000a922:	ret    
   14000a923:	lea    rax,[rbp+0x28]
   14000a927:	lea    r9,[rbp-0x30]
   14000a92b:	lea    r8,[rbp-0x38]
   14000a92f:	lea    rdx,[rip+0x32fb2]        # 0x14003d8e8
   14000a936:	mov    rcx,rdi
   14000a939:	mov    QWORD PTR [rsp+0xb0],rsi
   14000a941:	mov    QWORD PTR [rsp+0x20],rax
   14000a946:	mov    QWORD PTR [rsp+0x60],r13
   14000a94b:	call   QWORD PTR [rip+0x32967]        # 0x14003d2b8
   14000a951:	mov    rsi,QWORD PTR [rbp+0x48]
   14000a955:	cmp    eax,0x2
   14000a958:	jne    0x14000a999
   14000a95a:	movsxd rax,DWORD PTR [rbp+0x28]
   14000a95e:	movsd  xmm0,QWORD PTR [rbp-0x38]
   14000a963:	movsd  xmm1,QWORD PTR [rbp-0x30]
   14000a968:	add    rdi,rax
   14000a96b:	mov    DWORD PTR [rbp-0x48],0x1
   14000a972:	subsd  xmm0,QWORD PTR [r14]
   14000a977:	subsd  xmm1,QWORD PTR [r14+0x8]
   14000a97d:	test   r15d,r15d
   14000a980:	je     0x14000a98b
   14000a982:	mulsd  xmm0,QWORD PTR [rsi]
   14000a986:	mulsd  xmm1,QWORD PTR [rsi+0x8]
   14000a98b:	cvttsd2si eax,xmm0
   14000a98f:	mov    DWORD PTR [rbp-0x28],eax
   14000a992:	cvttsd2si eax,xmm1
   14000a996:	mov    DWORD PTR [rbp-0x24],eax
   14000a999:	lea    rax,[rbp+0x28]
   14000a99d:	lea    r9,[rbp-0x30]
   14000a9a1:	lea    r8,[rbp-0x38]
   14000a9a5:	lea    rdx,[rip+0x32f4c]        # 0x14003d8f8
   14000a9ac:	mov    rcx,rdi
   14000a9af:	mov    QWORD PTR [rsp+0x20],rax
   14000a9b4:	call   QWORD PTR [rip+0x328fe]        # 0x14003d2b8
   14000a9ba:	cmp    eax,0x2
   14000a9bd:	jne    0x14000a9fe
   14000a9bf:	movsxd rax,DWORD PTR [rbp+0x28]
   14000a9c3:	movsd  xmm0,QWORD PTR [rbp-0x38]
   14000a9c8:	movsd  xmm1,QWORD PTR [rbp-0x30]
   14000a9cd:	add    rdi,rax
   14000a9d0:	mov    DWORD PTR [rbp-0x44],0x1
   14000a9d7:	subsd  xmm0,QWORD PTR [r14]
   14000a9dc:	subsd  xmm1,QWORD PTR [r14+0x8]
   14000a9e2:	test   r15d,r15d
   14000a9e5:	je     0x14000a9f0
   14000a9e7:	mulsd  xmm0,QWORD PTR [rsi]
   14000a9eb:	mulsd  xmm1,QWORD PTR [rsi+0x8]
   14000a9f0:	cvttsd2si eax,xmm0
   14000a9f4:	mov    DWORD PTR [rbp-0x20],eax
   14000a9f7:	cvttsd2si eax,xmm1
   14000a9fb:	mov    DWORD PTR [rbp-0x1c],eax
   14000a9fe:	mov    rcx,rdi
   14000aa01:	call   0x140009510
   14000aa06:	movsxd r8,eax
   14000aa09:	mov    r13d,r8d
   14000aa0c:	cmp    r8d,0x4
   14000aa10:	jl     0x14000ab61
   14000aa16:	mov    eax,0x55555556
   14000aa1b:	imul   r8d
   14000aa1e:	mov    eax,r8d
   14000aa21:	mov    ecx,edx
   14000aa23:	shr    ecx,0x1f
   14000aa26:	add    edx,ecx
   14000aa28:	lea    ecx,[rdx+rdx*2]
   14000aa2b:	sub    eax,ecx
   14000aa2d:	cmp    eax,0x1
   14000aa30:	jne    0x14000ab61
   14000aa36:	lea    rcx,[r8*8+0x0]
   14000aa3e:	mov    QWORD PTR [rsp+0x68],r12
   14000aa43:	mov    r12,r8
   14000aa46:	call   QWORD PTR [rip+0x3271c]        # 0x14003d168
   14000aa4c:	mov    r15,rax
   14000aa4f:	mov    rsi,rax
   14000aa52:	lea    rax,[rbp+0x28]
   14000aa56:	lea    r9,[rbp-0x30]
   14000aa5a:	lea    r8,[rbp-0x38]
   14000aa5e:	lea    rdx,[rip+0x32ea3]        # 0x14003d908
   14000aa65:	mov    rcx,rdi
   14000aa68:	mov    QWORD PTR [rsp+0x20],rax
   14000aa6d:	call   QWORD PTR [rip+0x32845]        # 0x14003d2b8
   14000aa73:	cmp    eax,0x2
   14000aa76:	jl     0x14000ab54
   14000aa7c:	movsxd rax,DWORD PTR [rbp+0x28]
   14000aa80:	movsd  xmm0,QWORD PTR [rbp-0x38]
   14000aa85:	subsd  xmm0,QWORD PTR [r14]
   14000aa8a:	add    rdi,rax
   14000aa8d:	cmp    DWORD PTR [rbp+0x40],ebx
   14000aa90:	je     0x14000aab2
   14000aa92:	mov    rcx,QWORD PTR [rbp+0x48]
   14000aa96:	mulsd  xmm0,QWORD PTR [rcx]
   14000aa9a:	cvttsd2si eax,xmm0
   14000aa9e:	mov    DWORD PTR [rsi],eax
   14000aaa0:	movsd  xmm1,QWORD PTR [rbp-0x30]
   14000aaa5:	subsd  xmm1,QWORD PTR [r14+0x8]
   14000aaab:	mulsd  xmm1,QWORD PTR [rcx+0x8]
   14000aab0:	jmp    0x14000aac3
   14000aab2:	cvttsd2si eax,xmm0
   14000aab6:	mov    DWORD PTR [rsi],eax
   14000aab8:	movsd  xmm1,QWORD PTR [rbp-0x30]
   14000aabd:	subsd  xmm1,QWORD PTR [r14+0x8]
   14000aac3:	cvttsd2si eax,xmm1
   14000aac7:	add    rsi,0x8
   14000aacb:	mov    DWORD PTR [rsi-0x4],eax
   14000aace:	dec    r13d
   14000aad1:	jne    0x14000aa52
   14000aad7:	mov    rcx,QWORD PTR [rbp+0x30]
   14000aadb:	mov    edx,r12d
   14000aade:	call   0x140009470
   14000aae3:	cmp    DWORD PTR [rbp-0x48],ebx
   14000aae6:	je     0x14000aaf7
   14000aae8:	mov    rcx,QWORD PTR [rbp-0x28]
   14000aaec:	mov    DWORD PTR [rax+0xc],0x1
   14000aaf3:	mov    QWORD PTR [rax+0x14],rcx
   14000aaf7:	cmp    DWORD PTR [rbp-0x44],ebx
   14000aafa:	je     0x14000ab0b
   14000aafc:	mov    rcx,QWORD PTR [rbp-0x20]
   14000ab00:	mov    DWORD PTR [rax+0x10],0x1
   14000ab07:	mov    QWORD PTR [rax+0x1c],rcx
   14000ab0b:	test   r12,r12
   14000ab0e:	jle    0x14000ab24
   14000ab10:	mov    rcx,QWORD PTR [r15+rbx*8]
   14000ab14:	mov    rdx,QWORD PTR [rax]
   14000ab17:	inc    rbx
   14000ab1a:	mov    QWORD PTR [rdx+rbx*8-0x8],rcx
   14000ab1f:	cmp    rbx,r12
   14000ab22:	jl     0x14000ab10
   14000ab24:	mov    rcx,r15
   14000ab27:	call   QWORD PTR [rip+0x32773]        # 0x14003d2a0
   14000ab2d:	mov    eax,0x1
   14000ab32:	mov    r12,QWORD PTR [rsp+0x68]
   14000ab37:	mov    rsi,QWORD PTR [rsp+0xb0]
   14000ab3f:	mov    r13,QWORD PTR [rsp+0x60]
   14000ab44:	mov    rdi,QWORD PTR [rsp+0x70]
   14000ab49:	add    rsp,0x78
   14000ab4d:	pop    r15
   14000ab4f:	pop    r14
   14000ab51:	pop    rbx
   14000ab52:	pop    rbp
   14000ab53:	ret    
   14000ab54:	mov    rcx,r15
   14000ab57:	call   QWORD PTR [rip+0x32743]        # 0x14003d2a0
   14000ab5d:	xor    eax,eax
   14000ab5f:	jmp    0x14000ab32
   14000ab61:	xor    eax,eax
   14000ab63:	jmp    0x14000ab37
   14000ab65:	int3   
   14000ab66:	int3   
   14000ab67:	int3   
   14000ab68:	int3   
   14000ab69:	int3   
   14000ab6a:	int3   
   14000ab6b:	int3   
   14000ab6c:	int3   
   14000ab6d:	int3   
   14000ab6e:	int3   
   14000ab6f:	int3   
   14000ab70:	mov    QWORD PTR [rsp+0x20],r9
   14000ab75:	push   rbx
   14000ab76:	push   rbp
   14000ab77:	push   rsi
   14000ab78:	push   rdi
   14000ab79:	push   r12
   14000ab7b:	push   r14
   14000ab7d:	push   r15
   14000ab7f:	sub    rsp,0x60
   14000ab83:	movsxd rbx,DWORD PTR [r8]
   14000ab86:	mov    rdi,rcx
   14000ab89:	mov    r12,r8
   14000ab8c:	mov    rcx,rbx
   14000ab8f:	mov    DWORD PTR [r8+0x8],0x0
   14000ab97:	xor    ebp,ebp
   14000ab99:	shl    rcx,0x3
   14000ab9d:	xor    r15d,r15d
   14000aba0:	xor    r14d,r14d
   14000aba3:	call   QWORD PTR [rip+0x325bf]        # 0x14003d168
   14000aba9:	xor    edx,edx
   14000abab:	mov    rsi,rax
   14000abae:	mov    QWORD PTR [rsp+0x30],rax
   14000abb3:	test   ebx,ebx
   14000abb5:	jle    0x14000abda
   14000abb7:	mov    r8,rax
   14000abba:	nop    WORD PTR [rax+rax*1+0x0]
   14000abc0:	movsxd rcx,edx
   14000abc3:	inc    edx
   14000abc5:	lea    r8,[r8+0x8]
   14000abc9:	shl    rcx,0x5
   14000abcd:	add    rcx,rdi
   14000abd0:	mov    QWORD PTR [r8-0x8],rcx
   14000abd4:	cmp    edx,DWORD PTR [r12]
   14000abd8:	jl     0x14000abc0
   14000abda:	movsxd rdx,DWORD PTR [r12]
   14000abde:	lea    r9,[rip+0x23b]        # 0x14000ae20
   14000abe5:	mov    r8d,0x8
   14000abeb:	mov    rcx,rax
   14000abee:	call   QWORD PTR [rip+0x32454]        # 0x14003d048
   14000abf4:	xor    ebx,ebx
   14000abf6:	mov    DWORD PTR [rsp+0x20],ebx
   14000abfa:	cmp    DWORD PTR [r12],ebx
   14000abfe:	jle    0x14000adec
   14000ac04:	mov    QWORD PTR [rsp+0xa0],r13
   14000ac0c:	movaps XMMWORD PTR [rsp+0x50],xmm6
   14000ac11:	xorps  xmm6,xmm6
   14000ac14:	mov    rcx,QWORD PTR [rsi]
   14000ac17:	mov    edx,0x1
   14000ac1c:	mov    rax,QWORD PTR [rcx+0x10]
   14000ac20:	mov    QWORD PTR [rsp+0x28],rcx
   14000ac25:	cmp    rcx,QWORD PTR [rax]
   14000ac28:	jne    0x14000ac30
   14000ac2a:	mov    rax,QWORD PTR [rax+0x8]
   14000ac2e:	jmp    0x14000ac34
   14000ac30:	lea    rax,[rcx-0x20]
   14000ac34:	mov    rdi,rax
   14000ac37:	mov    r13d,ebx
   14000ac3a:	mov    DWORD PTR [rsp+0xb0],ebx
   14000ac41:	movsd  xmm0,QWORD PTR [rcx]
   14000ac45:	subsd  xmm0,QWORD PTR [rax]
   14000ac49:	ucomisd xmm0,xmm6
   14000ac4d:	jp     0x14000ac67
   14000ac4f:	jne    0x14000ac67
   14000ac51:	movsd  xmm0,QWORD PTR [rcx+0x8]
   14000ac56:	subsd  xmm0,QWORD PTR [rax+0x8]
   14000ac5b:	ucomisd xmm0,xmm6
   14000ac5f:	jp     0x14000ac67
   14000ac61:	je     0x14000ad97
   14000ac67:	or     eax,0xffffffff
   14000ac6a:	comisd xmm0,xmm6
   14000ac6e:	cmova  eax,edx
   14000ac71:	cmp    eax,0xffffffff
   14000ac74:	je     0x14000ad1f
   14000ac7a:	cmp    eax,0x1
   14000ac7d:	jne    0x14000ad97
   14000ac83:	mov    rcx,QWORD PTR [rdi+0x18]
   14000ac87:	test   rcx,rcx
   14000ac8a:	je     0x14000adfb
   14000ac90:	cmp    r14d,eax
   14000ac93:	jne    0x14000acba
   14000ac95:	xorps  xmm0,xmm0
   14000ac98:	movdqu XMMWORD PTR [rsp+0x38],xmm0
   14000ac9e:	mov    rbp,QWORD PTR [rsp+0x40]
   14000aca3:	mov    r15,QWORD PTR [rsp+0x38]
   14000aca8:	call   QWORD PTR [rip+0x325f2]        # 0x14003d2a0
   14000acae:	dec    r14d
   14000acb1:	mov    QWORD PTR [rdi+0x18],rbx
   14000acb5:	jmp    0x14000ad8d
   14000acba:	cmp    rcx,r15
   14000acbd:	jne    0x14000acd9
   14000acbf:	mov    r15,QWORD PTR [r15+0x8]
   14000acc3:	mov    QWORD PTR [r15+0x10],rbx
   14000acc7:	call   QWORD PTR [rip+0x325d3]        # 0x14003d2a0
   14000accd:	dec    r14d
   14000acd0:	mov    QWORD PTR [rdi+0x18],rbx
   14000acd4:	jmp    0x14000ad8d
   14000acd9:	cmp    rcx,rbp
   14000acdc:	jne    0x14000acf8
   14000acde:	mov    rbp,QWORD PTR [rbp+0x10]
   14000ace2:	mov    QWORD PTR [rbp+0x8],rbx
   14000ace6:	call   QWORD PTR [rip+0x325b4]        # 0x14003d2a0
   14000acec:	dec    r14d
   14000acef:	mov    QWORD PTR [rdi+0x18],rbx
   14000acf3:	jmp    0x14000ad8d
   14000acf8:	mov    rdx,QWORD PTR [rcx+0x10]
   14000acfc:	mov    rax,QWORD PTR [rcx+0x8]
   14000ad00:	mov    QWORD PTR [rdx+0x8],rax
   14000ad04:	mov    rdx,QWORD PTR [rcx+0x8]
   14000ad08:	mov    rax,QWORD PTR [rcx+0x10]
   14000ad0c:	mov    QWORD PTR [rdx+0x10],rax
   14000ad10:	call   QWORD PTR [rip+0x3258a]        # 0x14003d2a0
   14000ad16:	dec    r14d
   14000ad19:	mov    QWORD PTR [rdi+0x18],rbx
   14000ad1d:	jmp    0x14000ad8d
   14000ad1f:	mov    rbx,r15
   14000ad22:	test   r14d,r14d
   14000ad25:	jle    0x14000ad59
   14000ad27:	mov    r13,QWORD PTR [rsp+0xb8]
   14000ad2f:	mov    esi,r14d
   14000ad32:	mov    rcx,QWORD PTR [rbx]
   14000ad35:	mov    r9,r12
   14000ad38:	mov    r8,r13
   14000ad3b:	mov    rdx,rdi
   14000ad3e:	call   0x1400053a0
   14000ad43:	mov    rbx,QWORD PTR [rbx+0x8]
   14000ad47:	dec    rsi
   14000ad4a:	jne    0x14000ad32
   14000ad4c:	mov    r13d,DWORD PTR [rsp+0xb0]
   14000ad54:	mov    rsi,QWORD PTR [rsp+0x30]
   14000ad59:	mov    ecx,0x18
   14000ad5e:	call   QWORD PTR [rip+0x32404]        # 0x14003d168
   14000ad64:	xor    ebx,ebx
   14000ad66:	test   r14d,r14d
   14000ad69:	jne    0x14000ad74
   14000ad6b:	mov    r15,rax
   14000ad6e:	mov    QWORD PTR [rax+0x10],rbx
   14000ad72:	jmp    0x14000ad7c
   14000ad74:	mov    QWORD PTR [rbp+0x8],rax
   14000ad78:	mov    QWORD PTR [rax+0x10],rbp
   14000ad7c:	mov    QWORD PTR [rax],rdi
   14000ad7f:	mov    QWORD PTR [rax+0x8],rbx
   14000ad83:	mov    rbp,rax
   14000ad86:	mov    QWORD PTR [rdi+0x18],rax
   14000ad8a:	inc    r14d
   14000ad8d:	mov    rcx,QWORD PTR [rsp+0x28]
   14000ad92:	mov    edx,0x1
   14000ad97:	mov    rdi,QWORD PTR [rsi]
   14000ad9a:	mov    rax,QWORD PTR [rdi+0x10]
   14000ad9e:	cmp    rdi,QWORD PTR [rax+0x8]
   14000ada2:	jne    0x14000ada9
   14000ada4:	mov    rax,QWORD PTR [rax]
   14000ada7:	jmp    0x14000adad
   14000ada9:	lea    rax,[rdi+0x20]
   14000adad:	inc    r13d
   14000adb0:	mov    DWORD PTR [rsp+0xb0],r13d
   14000adb8:	cmp    r13d,0x2
   14000adbc:	jl     0x14000ac41
   14000adc2:	mov    edx,DWORD PTR [rsp+0x20]
   14000adc6:	add    rsi,0x8
   14000adca:	inc    edx
   14000adcc:	mov    QWORD PTR [rsp+0x30],rsi
   14000add1:	mov    DWORD PTR [rsp+0x20],edx
   14000add5:	cmp    edx,DWORD PTR [r12]
   14000add9:	jl     0x14000ac14
   14000addf:	mov    r13,QWORD PTR [rsp+0xa0]
   14000ade7:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   14000adec:	add    rsp,0x60
   14000adf0:	pop    r15
   14000adf2:	pop    r14
   14000adf4:	pop    r12
   14000adf6:	pop    rdi
   14000adf7:	pop    rsi
   14000adf8:	pop    rbp
   14000adf9:	pop    rbx
   14000adfa:	ret    
   14000adfb:	call   QWORD PTR [rip+0x324cf]        # 0x14003d2d0
   14000ae01:	lea    rdx,[rip+0x32c38]        # 0x14003da40
   14000ae08:	lea    rcx,[rax+0x60]
   14000ae0c:	call   QWORD PTR [rip+0x324ae]        # 0x14003d2c0
   14000ae12:	mov    ecx,0x1
   14000ae17:	call   QWORD PTR [rip+0x3225b]        # 0x14003d078
   14000ae1d:	int3   
   14000ae1e:	int3   
   14000ae1f:	int3   
   14000ae20:	mov    rax,QWORD PTR [rcx]
   14000ae23:	mov    rcx,QWORD PTR [rdx]
   14000ae26:	xorps  xmm1,xmm1
   14000ae29:	movsd  xmm0,QWORD PTR [rax]
   14000ae2d:	subsd  xmm0,QWORD PTR [rcx]
   14000ae31:	ucomisd xmm0,xmm1
   14000ae35:	jp     0x14000ae4e
   14000ae37:	jne    0x14000ae4e
   14000ae39:	movsd  xmm0,QWORD PTR [rax+0x8]
   14000ae3e:	subsd  xmm0,QWORD PTR [rcx+0x8]
   14000ae43:	ucomisd xmm0,xmm1
   14000ae47:	jp     0x14000ae4e
   14000ae49:	jne    0x14000ae4e
   14000ae4b:	xor    eax,eax
   14000ae4d:	ret    
   14000ae4e:	or     eax,0xffffffff
   14000ae51:	comisd xmm0,xmm1
   14000ae55:	mov    ecx,0x1
   14000ae5a:	cmova  eax,ecx
   14000ae5d:	ret    
   14000ae5e:	int3   
   14000ae5f:	int3   
   14000ae60:	mov    QWORD PTR [rsp+0x8],rbx
   14000ae65:	push   rdi
   14000ae66:	sub    rsp,0x70
   14000ae6a:	movsxd rax,DWORD PTR [rcx+0x10]
   14000ae6e:	movaps XMMWORD PTR [rsp+0x50],xmm7
   14000ae73:	lea    rdx,[rsp+0x20]
   14000ae78:	movaps XMMWORD PTR [rsp+0x40],xmm8
   14000ae7e:	movsd  QWORD PTR [rsp+0x28],xmm1
   14000ae84:	movsd  QWORD PTR [rsp+0x30],xmm2
   14000ae8a:	mov    r9,rcx
   14000ae8d:	movaps xmm7,xmm2
   14000ae90:	movaps xmm8,xmm1
   14000ae94:	imul   rbx,rax,0x68
   14000ae98:	add    rbx,QWORD PTR [rip+0x4a6a9]        # 0x140055548
   14000ae9f:	mov    rdi,QWORD PTR [rbx+0x60]
   14000aea3:	mov    r8,rdi
   14000aea6:	call   0x14000b000
   14000aeab:	test   eax,eax
   14000aead:	je     0x14000af9a
   14000aeb3:	jns    0x14000aed8
   14000aeb5:	lea    rcx,[rip+0x48794]        # 0x140053650
   14000aebc:	call   0x140005b40
   14000aec1:	movsd  QWORD PTR [rax+0x8],xmm8
   14000aec7:	movsd  QWORD PTR [rax+0x10],xmm7
   14000aecc:	mov    QWORD PTR [rax],rdi
   14000aecf:	mov    QWORD PTR [rbx+0x60],rax
   14000aed3:	jmp    0x14000af9a
   14000aed8:	mov    rbx,QWORD PTR [rdi]
   14000aedb:	xorps  xmm5,xmm5
   14000aede:	movaps XMMWORD PTR [rsp+0x60],xmm6
   14000aee3:	test   rbx,rbx
   14000aee6:	je     0x14000af78
   14000aeec:	movsd  xmm2,QWORD PTR [rbx+0x8]
   14000aef1:	ucomisd xmm8,xmm2
   14000aef6:	jp     0x14000af07
   14000aef8:	jne    0x14000af07
   14000aefa:	ucomisd xmm7,QWORD PTR [rbx+0x10]
   14000aeff:	jp     0x14000af07
   14000af01:	je     0x14000af95
   14000af07:	movsd  xmm3,QWORD PTR [rbx+0x10]
   14000af0c:	subsd  xmm2,QWORD PTR [r9]
   14000af11:	movaps xmm6,xmm8
   14000af15:	subsd  xmm6,QWORD PTR [r9]
   14000af1a:	subsd  xmm3,QWORD PTR [r9+0x8]
   14000af20:	movaps xmm4,xmm7
   14000af23:	comisd xmm6,xmm5
   14000af27:	subsd  xmm4,QWORD PTR [r9+0x8]
   14000af2d:	jb     0x14000afca
   14000af33:	comisd xmm5,xmm2
   14000af37:	ja     0x14000af78
   14000af39:	comisd xmm6,xmm5
   14000af3d:	jbe    0x14000af6c
   14000af3f:	comisd xmm2,xmm5
   14000af43:	jbe    0x14000af66
   14000af45:	divsd  xmm3,xmm2
   14000af49:	divsd  xmm4,xmm6
   14000af4d:	comisd xmm3,xmm4
   14000af51:	ja     0x14000af78
   14000af53:	comisd xmm4,xmm3
   14000af57:	ja     0x14000afea
   14000af5d:	comisd xmm2,xmm6
   14000af61:	jmp    0x14000afe8
   14000af66:	comisd xmm3,xmm5
   14000af6a:	jmp    0x14000afe8
   14000af6c:	comisd xmm2,xmm5
   14000af70:	jbe    0x14000afb3
   14000af72:	comisd xmm5,xmm4
   14000af76:	jb     0x14000afea
   14000af78:	lea    rcx,[rip+0x486d1]        # 0x140053650
   14000af7f:	call   0x140005b40
   14000af84:	movsd  QWORD PTR [rax+0x8],xmm8
   14000af8a:	movsd  QWORD PTR [rax+0x10],xmm7
   14000af8f:	mov    QWORD PTR [rdi],rax
   14000af92:	mov    QWORD PTR [rax],rbx
   14000af95:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   14000af9a:	mov    rbx,QWORD PTR [rsp+0x80]
   14000afa2:	movaps xmm7,XMMWORD PTR [rsp+0x50]
   14000afa7:	movaps xmm8,XMMWORD PTR [rsp+0x40]
   14000afad:	add    rsp,0x70
   14000afb1:	pop    rdi
   14000afb2:	ret    
   14000afb3:	comisd xmm3,xmm4
   14000afb7:	jbe    0x14000af72
   14000afb9:	comisd xmm5,xmm3
   14000afbd:	jb     0x14000af78
   14000afbf:	mov    rdi,rbx
   14000afc2:	mov    rbx,QWORD PTR [rbx]
   14000afc5:	jmp    0x14000aee3
   14000afca:	comisd xmm2,xmm5
   14000afce:	jae    0x14000afea
   14000afd0:	divsd  xmm3,xmm2
   14000afd4:	divsd  xmm4,xmm6
   14000afd8:	comisd xmm3,xmm4
   14000afdc:	ja     0x14000af78
   14000afde:	comisd xmm4,xmm3
   14000afe2:	ja     0x14000afea
   14000afe4:	comisd xmm6,xmm2
   14000afe8:	ja     0x14000af78
   14000afea:	mov    rdi,rbx
   14000afed:	mov    rbx,QWORD PTR [rbx]
   14000aff0:	jmp    0x14000aee3
   14000aff5:	int3   
   14000aff6:	int3   
   14000aff7:	int3   
   14000aff8:	int3   
   14000aff9:	int3   
   14000affa:	int3   
   14000affb:	int3   
   14000affc:	int3   
   14000affd:	int3   
   14000affe:	int3   
   14000afff:	int3   
   14000b000:	test   r8,r8
   14000b003:	jne    0x14000b009
   14000b005:	or     eax,0xffffffff
   14000b008:	ret    
   14000b009:	movsd  xmm5,QWORD PTR [rdx+0x8]
   14000b00e:	movsd  xmm4,QWORD PTR [r8+0x8]
   14000b014:	ucomisd xmm5,xmm4
   14000b018:	jp     0x14000b02e
   14000b01a:	jne    0x14000b02e
   14000b01c:	movsd  xmm0,QWORD PTR [rdx+0x10]
   14000b021:	ucomisd xmm0,QWORD PTR [r8+0x10]
   14000b027:	jp     0x14000b02e
   14000b029:	jne    0x14000b02e
   14000b02b:	xor    eax,eax
   14000b02d:	ret    
   14000b02e:	subsd  xmm5,QWORD PTR [rcx]
   14000b032:	movsd  xmm3,QWORD PTR [rdx+0x10]
   14000b037:	movsd  xmm2,QWORD PTR [r8+0x10]
   14000b03d:	xorps  xmm1,xmm1
   14000b040:	comisd xmm5,xmm1
   14000b044:	subsd  xmm3,QWORD PTR [rcx+0x8]
   14000b049:	subsd  xmm4,QWORD PTR [rcx]
   14000b04d:	subsd  xmm2,QWORD PTR [rcx+0x8]
   14000b052:	jb     0x14000b0c0
   14000b054:	comisd xmm1,xmm4
   14000b058:	ja     0x14000b005
   14000b05a:	comisd xmm5,xmm1
   14000b05e:	jbe    0x14000b09a
   14000b060:	comisd xmm4,xmm1
   14000b064:	jbe    0x14000b08a
   14000b066:	divsd  xmm2,xmm4
   14000b06a:	divsd  xmm3,xmm5
   14000b06e:	comisd xmm2,xmm3
   14000b072:	ja     0x14000b005
   14000b074:	comisd xmm3,xmm2
   14000b078:	mov    eax,0x1
   14000b07d:	ja     0x14000b0f3
   14000b07f:	or     ecx,0xffffffff
   14000b082:	comisd xmm4,xmm5
   14000b086:	cmova  eax,ecx
   14000b089:	ret    
   14000b08a:	or     ecx,0xffffffff
   14000b08d:	comisd xmm2,xmm1
   14000b091:	mov    eax,0x1
   14000b096:	cmova  eax,ecx
   14000b099:	ret    
   14000b09a:	or     ecx,0xffffffff
   14000b09d:	comisd xmm4,xmm1
   14000b0a1:	mov    eax,0x1
   14000b0a6:	jbe    0x14000b0b0
   14000b0a8:	comisd xmm1,xmm3
   14000b0ac:	cmovae eax,ecx
   14000b0af:	ret    
   14000b0b0:	comisd xmm2,xmm3
   14000b0b4:	jbe    0x14000b0a8
   14000b0b6:	comisd xmm1,xmm2
   14000b0ba:	cmovae ecx,eax
   14000b0bd:	mov    eax,ecx
   14000b0bf:	ret    
   14000b0c0:	comisd xmm4,xmm1
   14000b0c4:	jb     0x14000b0cc
   14000b0c6:	mov    eax,0x1
   14000b0cb:	ret    
   14000b0cc:	divsd  xmm2,xmm4
   14000b0d0:	divsd  xmm3,xmm5
   14000b0d4:	comisd xmm2,xmm3
   14000b0d8:	ja     0x14000b005
   14000b0de:	comisd xmm3,xmm2
   14000b0e2:	ja     0x14000b0c6
   14000b0e4:	or     ecx,0xffffffff
   14000b0e7:	comisd xmm5,xmm4
   14000b0eb:	mov    eax,0x1
   14000b0f0:	cmova  eax,ecx
   14000b0f3:	ret    
   14000b0f4:	int3   
   14000b0f5:	int3   
   14000b0f6:	int3   
   14000b0f7:	int3   
   14000b0f8:	int3   
   14000b0f9:	int3   
   14000b0fa:	int3   
   14000b0fb:	int3   
   14000b0fc:	int3   
   14000b0fd:	int3   
   14000b0fe:	int3   
   14000b0ff:	int3   
   14000b100:	lea    rcx,[rip+0x48549]        # 0x140053650
   14000b107:	mov    edx,0x18
   14000b10c:	jmp    0x140005a70
   14000b111:	int3   
   14000b112:	int3   
   14000b113:	int3   
   14000b114:	int3   
   14000b115:	int3   
   14000b116:	int3   
   14000b117:	int3   
   14000b118:	int3   
   14000b119:	int3   
   14000b11a:	int3   
   14000b11b:	int3   
   14000b11c:	int3   
   14000b11d:	int3   
   14000b11e:	int3   
   14000b11f:	int3   
   14000b120:	mov    DWORD PTR [rsp+0x10],edx
   14000b124:	push   rbx
   14000b125:	push   rdi
   14000b126:	push   r12
   14000b128:	push   r13
   14000b12a:	push   r14
   14000b12c:	push   r15
   14000b12e:	sub    rsp,0x38
   14000b132:	mov    r13,rcx
   14000b135:	mov    rcx,QWORD PTR [rip+0x48534]        # 0x140053670
   14000b13c:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14000b141:	movsxd rdi,edx
   14000b144:	test   rcx,rcx
   14000b147:	je     0x14000b14e
   14000b149:	call   0x14000c8b0
   14000b14e:	xorps  xmm6,xmm6
   14000b151:	mov    edx,edi
   14000b153:	mov    ecx,edi
   14000b155:	movaps xmm2,xmm6
   14000b158:	call   0x14000d300
   14000b15d:	mov    rcx,QWORD PTR [rip+0x48514]        # 0x140053678
   14000b164:	mov    rbx,rax
   14000b167:	mov    QWORD PTR [rip+0x48502],rax        # 0x140053670
   14000b16e:	test   rcx,rcx
   14000b171:	je     0x14000b179
   14000b173:	call   QWORD PTR [rip+0x32127]        # 0x14003d2a0
   14000b179:	mov    edx,0x4
   14000b17e:	mov    rcx,rdi
   14000b181:	call   QWORD PTR [rip+0x31ee1]        # 0x14003d068
   14000b187:	mov    rcx,QWORD PTR [rip+0x484da]        # 0x140053668
   14000b18e:	mov    r12,rax
   14000b191:	mov    QWORD PTR [rip+0x484e0],rax        # 0x140053678
   14000b198:	test   rcx,rcx
   14000b19b:	je     0x14000b1a3
   14000b19d:	call   QWORD PTR [rip+0x320fd]        # 0x14003d2a0
   14000b1a3:	mov    edx,0x8
   14000b1a8:	mov    rcx,rdi
   14000b1ab:	mov    QWORD PTR [rsp+0x70],rbp
   14000b1b0:	mov    QWORD PTR [rsp+0x30],rsi
   14000b1b5:	call   QWORD PTR [rip+0x31ead]        # 0x14003d068
   14000b1bb:	mov    r9d,DWORD PTR [rsp+0x78]
   14000b1c0:	movsd  xmm3,QWORD PTR [rip+0x32398]        # 0x14003d560
   14000b1c8:	xor    ecx,ecx
   14000b1ca:	mov    r15,rax
   14000b1cd:	mov    QWORD PTR [rip+0x48494],rax        # 0x140053668
   14000b1d4:	mov    QWORD PTR [rsp+0x88],rcx
   14000b1dc:	mov    r14d,ecx
   14000b1df:	test   r9d,r9d
   14000b1e2:	jle    0x14000b333
   14000b1e8:	movsd  xmm2,QWORD PTR [rip+0x321f0]        # 0x14003d3e0
   14000b1f0:	mov    r8,rax
   14000b1f3:	sub    r13,rbx
   14000b1f6:	sub    r8,rbx
   14000b1f9:	mov    rsi,rbx
   14000b1fc:	mov    QWORD PTR [rsp+0x80],r8
   14000b204:	nop    DWORD PTR [rax+0x0]
   14000b208:	nop    DWORD PTR [rax+rax*1+0x0]
   14000b210:	movaps xmm1,xmm6
   14000b213:	mov    rbp,rcx
   14000b216:	cmp    rdi,0x4
   14000b21a:	jl     0x14000b2a5
   14000b220:	mov    rax,QWORD PTR [rsi]
   14000b223:	mov    rdx,QWORD PTR [r13+rsi*1+0x0]
   14000b228:	lea    rcx,[rax+0x8]
   14000b22c:	sub    rdx,rax
   14000b22f:	lea    rax,[rdi-0x4]
   14000b233:	shr    rax,0x2
   14000b237:	inc    rax
   14000b23a:	lea    rbp,[rax*4+0x0]
   14000b242:	movsd  xmm0,QWORD PTR [rdx+rcx*1-0x8]
   14000b248:	movsd  QWORD PTR [rcx-0x8],xmm0
   14000b24d:	andps  xmm0,xmm3
   14000b250:	comisd xmm0,xmm1
   14000b254:	jbe    0x14000b259
   14000b256:	movaps xmm1,xmm0
   14000b259:	movsd  xmm0,QWORD PTR [rdx+rcx*1]
   14000b25e:	movsd  QWORD PTR [rcx],xmm0
   14000b262:	andps  xmm0,xmm3
   14000b265:	comisd xmm0,xmm1
   14000b269:	jbe    0x14000b26e
   14000b26b:	movaps xmm1,xmm0
   14000b26e:	movsd  xmm0,QWORD PTR [rdx+rcx*1+0x8]
   14000b274:	movsd  QWORD PTR [rcx+0x8],xmm0
   14000b279:	andps  xmm0,xmm3
   14000b27c:	comisd xmm0,xmm1
   14000b280:	jbe    0x14000b285
   14000b282:	movaps xmm1,xmm0
   14000b285:	movsd  xmm0,QWORD PTR [rdx+rcx*1+0x10]
   14000b28b:	movsd  QWORD PTR [rcx+0x10],xmm0
   14000b290:	andps  xmm0,xmm3
   14000b293:	comisd xmm0,xmm1
   14000b297:	jbe    0x14000b29c
   14000b299:	movaps xmm1,xmm0
   14000b29c:	add    rcx,0x20
   14000b2a0:	dec    rax
   14000b2a3:	jne    0x14000b242
   14000b2a5:	cmp    rbp,rdi
   14000b2a8:	jge    0x14000b2f7
   14000b2aa:	mov    r9,QWORD PTR [rsi]
   14000b2ad:	mov    r10,QWORD PTR [r13+rsi*1+0x0]
   14000b2b2:	mov    r8,rdi
   14000b2b5:	mov    r11,r9
   14000b2b8:	sub    r10,r9
   14000b2bb:	lea    rdx,[r9+rbp*8]
   14000b2bf:	neg    r11
   14000b2c2:	sub    r8,rbp
   14000b2c5:	mov    rax,QWORD PTR [r10+rdx*1]
   14000b2c9:	lea    rcx,[r11+r9*1]
   14000b2cd:	mov    QWORD PTR [rcx+rdx*1],rax
   14000b2d1:	movsd  xmm0,QWORD PTR [rdx]
   14000b2d5:	andps  xmm0,xmm3
   14000b2d8:	comisd xmm0,xmm1
   14000b2dc:	jbe    0x14000b2e1
   14000b2de:	movaps xmm1,xmm0
   14000b2e1:	add    rdx,0x8
   14000b2e5:	dec    r8
   14000b2e8:	jne    0x14000b2c5
   14000b2ea:	mov    r8,QWORD PTR [rsp+0x80]
   14000b2f2:	mov    r9d,DWORD PTR [rsp+0x78]
   14000b2f7:	ucomisd xmm1,xmm6
   14000b2fb:	jp     0x14000b303
   14000b2fd:	je     0x14000b486
   14000b303:	movaps xmm0,xmm2
   14000b306:	add    rsi,0x8
   14000b30a:	add    r12,0x4
   14000b30e:	xor    ecx,ecx
   14000b310:	divsd  xmm0,xmm1
   14000b314:	movsd  QWORD PTR [r8+rsi*1-0x8],xmm0
   14000b31b:	mov    DWORD PTR [r12-0x4],r14d
   14000b320:	inc    r14d
   14000b323:	cmp    r14d,r9d
   14000b326:	jl     0x14000b210
   14000b32c:	mov    r12,QWORD PTR [rip+0x48345]        # 0x140053678
   14000b333:	lea    eax,[r9-0x1]
   14000b337:	test   eax,eax
   14000b339:	jle    0x14000b65a
   14000b33f:	mov    eax,r9d
   14000b342:	mov    r10,r12
   14000b345:	mov    rsi,rcx
   14000b348:	mov    r13d,0x1
   14000b34e:	mov    r11,rcx
   14000b351:	lea    r12,[rdi-0x1]
   14000b355:	mov    DWORD PTR [rsp+0x80],eax
   14000b35c:	nop    DWORD PTR [rax+0x0]
   14000b360:	lea    r14,[r13-0x1]
   14000b364:	movaps xmm0,xmm6
   14000b367:	mov    ebp,ecx
   14000b369:	mov    rdx,r14
   14000b36c:	cmp    ecx,r9d
   14000b36f:	jge    0x14000b491
   14000b375:	cmp    eax,0x4
   14000b378:	jl     0x14000b444
   14000b37e:	mov    eax,r9d
   14000b381:	lea    r8,[r10+0x8]
   14000b385:	sub    eax,ecx
   14000b387:	sub    eax,0x4
   14000b38a:	shr    eax,0x2
   14000b38d:	inc    eax
   14000b38f:	mov    r9d,eax
   14000b392:	lea    ebp,[rcx+rax*4]
   14000b395:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000b3a0:	movsxd rcx,DWORD PTR [r8-0x8]
   14000b3a4:	mov    rax,QWORD PTR [rbx+rcx*8]
   14000b3a8:	movsd  xmm1,QWORD PTR [rax+r11*1]
   14000b3ae:	andps  xmm1,xmm3
   14000b3b1:	mulsd  xmm1,QWORD PTR [r15+rcx*8]
   14000b3b7:	comisd xmm1,xmm0
   14000b3bb:	jbe    0x14000b3c3
   14000b3bd:	movaps xmm0,xmm1
   14000b3c0:	mov    rsi,rdx
   14000b3c3:	movsxd rcx,DWORD PTR [r8-0x4]
   14000b3c7:	mov    rax,QWORD PTR [rbx+rcx*8]
   14000b3cb:	movsd  xmm1,QWORD PTR [rax+r11*1]
   14000b3d1:	andps  xmm1,xmm3
   14000b3d4:	mulsd  xmm1,QWORD PTR [r15+rcx*8]
   14000b3da:	comisd xmm1,xmm0
   14000b3de:	jbe    0x14000b3e7
   14000b3e0:	movaps xmm0,xmm1
   14000b3e3:	lea    rsi,[rdx+0x1]
   14000b3e7:	movsxd rcx,DWORD PTR [r8]
   14000b3ea:	mov    rax,QWORD PTR [rbx+rcx*8]
   14000b3ee:	movsd  xmm1,QWORD PTR [rax+r11*1]
   14000b3f4:	andps  xmm1,xmm3
   14000b3f7:	mulsd  xmm1,QWORD PTR [r15+rcx*8]
   14000b3fd:	comisd xmm1,xmm0
   14000b401:	jbe    0x14000b40a
   14000b403:	movaps xmm0,xmm1
   14000b406:	lea    rsi,[rdx+0x2]
   14000b40a:	movsxd rcx,DWORD PTR [r8+0x4]
   14000b40e:	mov    rax,QWORD PTR [rbx+rcx*8]
   14000b412:	movsd  xmm1,QWORD PTR [rax+r11*1]
   14000b418:	andps  xmm1,xmm3
   14000b41b:	mulsd  xmm1,QWORD PTR [r15+rcx*8]
   14000b421:	comisd xmm1,xmm0
   14000b425:	jbe    0x14000b42e
   14000b427:	movaps xmm0,xmm1
   14000b42a:	lea    rsi,[rdx+0x3]
   14000b42e:	add    rdx,0x4
   14000b432:	add    r8,0x10
   14000b436:	dec    r9
   14000b439:	jne    0x14000b3a0
   14000b43f:	mov    r9d,DWORD PTR [rsp+0x78]
   14000b444:	cmp    ebp,r9d
   14000b447:	jge    0x14000b498
   14000b449:	mov    eax,r9d
   14000b44c:	sub    eax,ebp
   14000b44e:	mov    rbp,QWORD PTR [rip+0x48223]        # 0x140053678
   14000b455:	movsxd r8,eax
   14000b458:	movsxd rcx,DWORD PTR [rbp+rdx*4+0x0]
   14000b45d:	mov    rax,QWORD PTR [rbx+rcx*8]
   14000b461:	movsd  xmm1,QWORD PTR [rax+r11*1]
   14000b467:	andps  xmm1,xmm3
   14000b46a:	mulsd  xmm1,QWORD PTR [r15+rcx*8]
   14000b470:	comisd xmm1,xmm0
   14000b474:	jbe    0x14000b47c
   14000b476:	movaps xmm0,xmm1
   14000b479:	mov    rsi,rdx
   14000b47c:	inc    rdx
   14000b47f:	dec    r8
   14000b482:	jne    0x14000b458
   14000b484:	jmp    0x14000b49f
   14000b486:	movsxd rax,r14d
   14000b489:	mov    QWORD PTR [r15+rax*8],0x0
   14000b491:	xor    eax,eax
   14000b493:	jmp    0x14000b681
   14000b498:	mov    rbp,QWORD PTR [rip+0x481d9]        # 0x140053678
   14000b49f:	ucomisd xmm0,xmm6
   14000b4a3:	jp     0x14000b4a7
   14000b4a5:	je     0x14000b491
   14000b4a7:	cmp    rsi,r14
   14000b4aa:	je     0x14000b4ba
   14000b4ac:	mov    eax,DWORD PTR [rbp+rsi*4+0x0]
   14000b4b0:	mov    ecx,DWORD PTR [r10]
   14000b4b3:	mov    DWORD PTR [r10],eax
   14000b4b6:	mov    DWORD PTR [rbp+rsi*4+0x0],ecx
   14000b4ba:	movsxd rax,DWORD PTR [r10]
   14000b4bd:	mov    rcx,QWORD PTR [rbx+rax*8]
   14000b4c1:	movsd  xmm4,QWORD PTR [r11+rcx*1]
   14000b4c7:	cmp    r13,rdi
   14000b4ca:	jge    0x14000b61e
   14000b4d0:	mov    r14,rdi
   14000b4d3:	lea    r9,[r10+0x4]
   14000b4d7:	sub    r14,r13
   14000b4da:	nop    WORD PTR [rax+rax*1+0x0]
   14000b4e0:	movsxd rax,DWORD PTR [r9]
   14000b4e3:	mov    rcx,QWORD PTR [rbx+rax*8]
   14000b4e7:	movsd  xmm2,QWORD PTR [rcx+r11*1]
   14000b4ed:	divsd  xmm2,xmm4
   14000b4f1:	ucomisd xmm2,xmm6
   14000b4f5:	movsd  QWORD PTR [rcx+r11*1],xmm2
   14000b4fb:	jp     0x14000b503
   14000b4fd:	je     0x14000b60c
   14000b503:	mov    r8,r13
   14000b506:	cmp    r12,0x4
   14000b50a:	jl     0x14000b5d5
   14000b510:	lea    rbp,[rdi-0x3]
   14000b514:	nop    DWORD PTR [rax+0x0]
   14000b518:	nop    DWORD PTR [rax+rax*1+0x0]
   14000b520:	movsxd rax,DWORD PTR [r9]
   14000b523:	movaps xmm1,xmm2
   14000b526:	add    r8,0x4
   14000b52a:	mov    rdx,QWORD PTR [rbx+rax*8]
   14000b52e:	movsxd rax,DWORD PTR [r10]
   14000b531:	mov    rcx,QWORD PTR [rbx+rax*8]
   14000b535:	movsd  xmm0,QWORD PTR [rdx+r8*8-0x20]
   14000b53c:	mulsd  xmm1,QWORD PTR [rcx+r8*8-0x20]
   14000b543:	subsd  xmm0,xmm1
   14000b547:	movaps xmm1,xmm2
   14000b54a:	movsd  QWORD PTR [rdx+r8*8-0x20],xmm0
   14000b551:	movsxd rax,DWORD PTR [r9]
   14000b554:	mov    rdx,QWORD PTR [rbx+rax*8]
   14000b558:	movsxd rax,DWORD PTR [r10]
   14000b55b:	mov    rcx,QWORD PTR [rbx+rax*8]
   14000b55f:	movsd  xmm0,QWORD PTR [rdx+r8*8-0x18]
   14000b566:	mulsd  xmm1,QWORD PTR [rcx+r8*8-0x18]
   14000b56d:	subsd  xmm0,xmm1
   14000b571:	movaps xmm1,xmm2
   14000b574:	movsd  QWORD PTR [rdx+r8*8-0x18],xmm0
   14000b57b:	movsxd rax,DWORD PTR [r9]
   14000b57e:	mov    rdx,QWORD PTR [rbx+rax*8]
   14000b582:	movsxd rax,DWORD PTR [r10]
   14000b585:	mov    rcx,QWORD PTR [rbx+rax*8]
   14000b589:	movsd  xmm0,QWORD PTR [rdx+r8*8-0x10]
   14000b590:	mulsd  xmm1,QWORD PTR [rcx+r8*8-0x10]
   14000b597:	subsd  xmm0,xmm1
   14000b59b:	movaps xmm1,xmm2
   14000b59e:	movsd  QWORD PTR [rdx+r8*8-0x10],xmm0
   14000b5a5:	movsxd rax,DWORD PTR [r9]
   14000b5a8:	mov    rdx,QWORD PTR [rbx+rax*8]
   14000b5ac:	movsxd rax,DWORD PTR [r10]
   14000b5af:	mov    rcx,QWORD PTR [rbx+rax*8]
   14000b5b3:	movsd  xmm0,QWORD PTR [rdx+r8*8-0x8]
   14000b5ba:	mulsd  xmm1,QWORD PTR [rcx+r8*8-0x8]
   14000b5c1:	subsd  xmm0,xmm1
   14000b5c5:	movsd  QWORD PTR [rdx+r8*8-0x8],xmm0
   14000b5cc:	cmp    r8,rbp
   14000b5cf:	jl     0x14000b520
   14000b5d5:	cmp    r8,rdi
   14000b5d8:	jge    0x14000b60c
   14000b5da:	movsxd rax,DWORD PTR [r9]
   14000b5dd:	movaps xmm1,xmm2
   14000b5e0:	inc    r8
   14000b5e3:	mov    rdx,QWORD PTR [rbx+rax*8]
   14000b5e7:	movsxd rax,DWORD PTR [r10]
   14000b5ea:	mov    rcx,QWORD PTR [rbx+rax*8]
   14000b5ee:	movsd  xmm0,QWORD PTR [rdx+r8*8-0x8]
   14000b5f5:	mulsd  xmm1,QWORD PTR [rcx+r8*8-0x8]
   14000b5fc:	subsd  xmm0,xmm1
   14000b600:	movsd  QWORD PTR [rdx+r8*8-0x8],xmm0
   14000b607:	cmp    r8,rdi
   14000b60a:	jl     0x14000b5da
   14000b60c:	add    r9,0x4
   14000b610:	dec    r14
   14000b613:	jne    0x14000b4e0
   14000b619:	mov    r9d,DWORD PTR [rsp+0x78]
   14000b61e:	mov    rcx,QWORD PTR [rsp+0x88]
   14000b626:	mov    eax,DWORD PTR [rsp+0x80]
   14000b62d:	lea    edx,[r9-0x1]
   14000b631:	inc    ecx
   14000b633:	dec    eax
   14000b635:	dec    r12
   14000b638:	add    r11,0x8
   14000b63c:	inc    r13
   14000b63f:	add    r10,0x4
   14000b643:	mov    QWORD PTR [rsp+0x88],rcx
   14000b64b:	mov    DWORD PTR [rsp+0x80],eax
   14000b652:	cmp    ecx,edx
   14000b654:	jl     0x14000b360
   14000b65a:	mov    rax,QWORD PTR [rip+0x48017]        # 0x140053678
   14000b661:	movsxd rax,DWORD PTR [rax+rdi*4-0x4]
   14000b666:	mov    rcx,QWORD PTR [rbx+rax*8]
   14000b66a:	movsd  xmm0,QWORD PTR [rcx+rdi*8-0x8]
   14000b670:	ucomisd xmm0,xmm6
   14000b674:	jp     0x14000b67c
   14000b676:	je     0x14000b491
   14000b67c:	mov    eax,0x1
   14000b681:	mov    rsi,QWORD PTR [rsp+0x30]
   14000b686:	mov    rbp,QWORD PTR [rsp+0x70]
   14000b68b:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14000b690:	add    rsp,0x38
   14000b694:	pop    r15
   14000b696:	pop    r14
   14000b698:	pop    r13
   14000b69a:	pop    r12
   14000b69c:	pop    rdi
   14000b69d:	pop    rbx
   14000b69e:	ret    
   14000b69f:	int3   
   14000b6a0:	mov    QWORD PTR [rsp+0x10],rbx
   14000b6a5:	mov    QWORD PTR [rsp+0x18],rsi
   14000b6aa:	mov    QWORD PTR [rsp+0x20],rdi
   14000b6af:	push   r14
   14000b6b1:	mov    r14,QWORD PTR [rip+0x47fb8]        # 0x140053670
   14000b6b8:	mov    rbx,QWORD PTR [rip+0x47fb9]        # 0x140053678
   14000b6bf:	movsxd rdi,r8d
   14000b6c2:	mov    rsi,rdx
   14000b6c5:	mov    r11,rcx
   14000b6c8:	test   r8d,r8d
   14000b6cb:	jle    0x14000b7a8
   14000b6d1:	xor    r9d,r9d
   14000b6d4:	mov    r10d,edi
   14000b6d7:	nop    WORD PTR [rax+rax*1+0x0]
   14000b6e0:	xor    r8d,r8d
   14000b6e3:	xorps  xmm2,xmm2
   14000b6e6:	cmp    r9,0x4
   14000b6ea:	jl     0x14000b757
   14000b6ec:	movsxd rax,DWORD PTR [rbx+r9*4]
   14000b6f0:	lea    rcx,[r11+0x8]
   14000b6f4:	mov    rdx,QWORD PTR [r14+rax*8]
   14000b6f8:	lea    rax,[r9-0x4]
   14000b6fc:	shr    rax,0x2
   14000b700:	sub    rdx,r11
   14000b703:	inc    rax
   14000b706:	lea    r8,[rax*4+0x0]
   14000b70e:	xchg   ax,ax
   14000b710:	movsd  xmm1,QWORD PTR [rdx+rcx*1-0x8]
   14000b716:	movsd  xmm0,QWORD PTR [rdx+rcx*1]
   14000b71b:	add    rcx,0x20
   14000b71f:	mulsd  xmm1,QWORD PTR [rcx-0x28]
   14000b724:	mulsd  xmm0,QWORD PTR [rcx-0x20]
   14000b729:	addsd  xmm1,xmm2
   14000b72d:	movaps xmm2,xmm1
   14000b730:	movsd  xmm1,QWORD PTR [rdx+rcx*1-0x18]
   14000b736:	addsd  xmm2,xmm0
   14000b73a:	movsd  xmm0,QWORD PTR [rdx+rcx*1-0x10]
   14000b740:	mulsd  xmm1,QWORD PTR [rcx-0x18]
   14000b745:	mulsd  xmm0,QWORD PTR [rcx-0x10]
   14000b74a:	addsd  xmm2,xmm1
   14000b74e:	addsd  xmm2,xmm0
   14000b752:	dec    rax
   14000b755:	jne    0x14000b710
   14000b757:	cmp    r8,r9
   14000b75a:	jge    0x14000b788
   14000b75c:	movsxd rax,DWORD PTR [rbx+r9*4]
   14000b760:	lea    rcx,[r11+r8*8]
   14000b764:	mov    rdx,QWORD PTR [r14+rax*8]
   14000b768:	mov    rax,r9
   14000b76b:	sub    rdx,r11
   14000b76e:	sub    rax,r8
   14000b771:	movsd  xmm0,QWORD PTR [rdx+rcx*1]
   14000b776:	add    rcx,0x8
   14000b77a:	mulsd  xmm0,QWORD PTR [rcx-0x8]
   14000b77f:	addsd  xmm2,xmm0
   14000b783:	dec    rax
   14000b786:	jne    0x14000b771
   14000b788:	movsxd rax,DWORD PTR [rbx+r9*4]
   14000b78c:	inc    r9
   14000b78f:	movsd  xmm0,QWORD PTR [rsi+rax*8]
   14000b794:	subsd  xmm0,xmm2
   14000b798:	movsd  QWORD PTR [r11+r9*8-0x8],xmm0
   14000b79f:	dec    r10
   14000b7a2:	jne    0x14000b6e0
   14000b7a8:	lea    eax,[rdi-0x1]
   14000b7ab:	movsxd rcx,eax
   14000b7ae:	test   eax,eax
   14000b7b0:	js     0x14000b8d5
   14000b7b6:	mov    QWORD PTR [rsp+0x10],rbp
   14000b7bb:	mov    rsi,rdi
   14000b7be:	mov    rbp,r11
   14000b7c1:	sub    rsi,rcx
   14000b7c4:	lea    r8,[rcx+0x1]
   14000b7c8:	lea    r10,[r11+rcx*8]
   14000b7cc:	dec    rsi
   14000b7cf:	neg    rbp
   14000b7d2:	lea    rbx,[rbx+rcx*4]
   14000b7d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000b7e0:	xorps  xmm2,xmm2
   14000b7e3:	mov    r9,r8
   14000b7e6:	cmp    r8,rdi
   14000b7e9:	jge    0x14000b897
   14000b7ef:	cmp    rsi,0x4
   14000b7f3:	jl     0x14000b867
   14000b7f5:	movsxd rax,DWORD PTR [rbx]
   14000b7f8:	lea    rcx,[r10+0x10]
   14000b7fc:	mov    rdx,QWORD PTR [r14+rax*8]
   14000b800:	mov    rax,rdi
   14000b803:	sub    rax,r8
   14000b806:	sub    rdx,r11
   14000b809:	sub    rax,0x4
   14000b80d:	shr    rax,0x2
   14000b811:	inc    rax
   14000b814:	lea    r9,[r8+rax*4]
   14000b818:	nop    DWORD PTR [rax+rax*1+0x0]
   14000b820:	movsd  xmm1,QWORD PTR [rdx+rcx*1-0x8]
   14000b826:	movsd  xmm0,QWORD PTR [rdx+rcx*1]
   14000b82b:	add    rcx,0x20
   14000b82f:	mulsd  xmm1,QWORD PTR [rcx-0x28]
   14000b834:	mulsd  xmm0,QWORD PTR [rcx-0x20]
   14000b839:	addsd  xmm1,xmm2
   14000b83d:	movaps xmm2,xmm1
   14000b840:	movsd  xmm1,QWORD PTR [rdx+rcx*1-0x18]
   14000b846:	addsd  xmm2,xmm0
   14000b84a:	movsd  xmm0,QWORD PTR [rdx+rcx*1-0x10]
   14000b850:	mulsd  xmm1,QWORD PTR [rcx-0x18]
   14000b855:	mulsd  xmm0,QWORD PTR [rcx-0x10]
   14000b85a:	addsd  xmm2,xmm1
   14000b85e:	addsd  xmm2,xmm0
   14000b862:	dec    rax
   14000b865:	jne    0x14000b820
   14000b867:	cmp    r9,rdi
   14000b86a:	jge    0x14000b897
   14000b86c:	movsxd rax,DWORD PTR [rbx]
   14000b86f:	lea    rcx,[r11+r9*8]
   14000b873:	mov    rdx,QWORD PTR [r14+rax*8]
   14000b877:	mov    rax,rdi
   14000b87a:	sub    rdx,r11
   14000b87d:	sub    rax,r9
   14000b880:	movsd  xmm0,QWORD PTR [rdx+rcx*1]
   14000b885:	add    rcx,0x8
   14000b889:	mulsd  xmm0,QWORD PTR [rcx-0x8]
   14000b88e:	addsd  xmm2,xmm0
   14000b892:	dec    rax
   14000b895:	jne    0x14000b880
   14000b897:	movsxd rax,DWORD PTR [rbx]
   14000b89a:	movsd  xmm0,QWORD PTR [r10]
   14000b89f:	dec    r8
   14000b8a2:	mov    rcx,QWORD PTR [r14+rax*8]
   14000b8a6:	subsd  xmm0,xmm2
   14000b8aa:	lea    rax,[r8-0x1]
   14000b8ae:	add    rcx,r10
   14000b8b1:	inc    rsi
   14000b8b4:	sub    rbx,0x4
   14000b8b8:	sub    r10,0x8
   14000b8bc:	divsd  xmm0,QWORD PTR [rcx+rbp*1]
   14000b8c1:	movsd  QWORD PTR [r10+0x8],xmm0
   14000b8c7:	test   rax,rax
   14000b8ca:	jns    0x14000b7e0
   14000b8d0:	mov    rbp,QWORD PTR [rsp+0x10]
   14000b8d5:	mov    rbx,QWORD PTR [rsp+0x18]
   14000b8da:	mov    rsi,QWORD PTR [rsp+0x20]
   14000b8df:	mov    rdi,QWORD PTR [rsp+0x28]
   14000b8e4:	pop    r14
   14000b8e6:	ret    
   14000b8e7:	int3   
   14000b8e8:	int3   
   14000b8e9:	int3   
   14000b8ea:	int3   
   14000b8eb:	int3   
   14000b8ec:	int3   
   14000b8ed:	int3   
   14000b8ee:	int3   
   14000b8ef:	int3   
   14000b8f0:	mov    rax,rsp
   14000b8f3:	push   rbx
   14000b8f4:	push   rdi
   14000b8f5:	push   r15
   14000b8f7:	sub    rsp,0xc0
   14000b8fe:	mov    ebx,DWORD PTR [rip+0x49b68]        # 0x14005546c
   14000b904:	mov    QWORD PTR [rax+0x18],rsi
   14000b908:	mov    QWORD PTR [rax+0x20],r12
   14000b90c:	mov    QWORD PTR [rax-0x20],r13
   14000b910:	mov    rax,QWORD PTR [rcx+0xc0]
   14000b917:	xor    r15d,r15d
   14000b91a:	mov    QWORD PTR [rsp+0x30],rax
   14000b91f:	mov    rax,QWORD PTR [rcx+0xb8]
   14000b926:	movsxd r12,r8d
   14000b929:	mov    QWORD PTR [rsp+0x28],rax
   14000b92e:	mov    rax,QWORD PTR [rcx+0xa8]
   14000b935:	mov    rdi,r9
   14000b938:	mov    r11,QWORD PTR [rax+r12*8]
   14000b93c:	movsxd r10,edx
   14000b93f:	mov    r9d,r15d
   14000b942:	mov    QWORD PTR [rsp+0x20],rax
   14000b947:	mov    QWORD PTR [rsp+0xe0],r11
   14000b94f:	test   ebx,ebx
   14000b951:	jle    0x14000b98d
   14000b953:	mov    r8d,r15d
   14000b956:	mov    ecx,r15d
   14000b959:	mov    rdx,r15
   14000b95c:	test   ebx,ebx
   14000b95e:	jle    0x14000b97d
   14000b960:	movsxd rax,ebx
   14000b963:	inc    ecx
   14000b965:	imul   rax,r8
   14000b969:	add    rax,rdx
   14000b96c:	inc    rdx
   14000b96f:	mov    QWORD PTR [rdi+rax*8],r15
   14000b973:	mov    ebx,DWORD PTR [rip+0x49af3]        # 0x14005546c
   14000b979:	cmp    ecx,ebx
   14000b97b:	jl     0x14000b960
   14000b97d:	inc    r9d
   14000b980:	inc    r8
   14000b983:	cmp    r9d,ebx
   14000b986:	jl     0x14000b956
   14000b988:	mov    rax,QWORD PTR [rsp+0x20]
   14000b98d:	mov    rsi,r15
   14000b990:	mov    r13,r10
   14000b993:	test   r10d,r10d
   14000b996:	jle    0x14000bd08
   14000b99c:	mov    QWORD PTR [rsp+0xe8],rbp
   14000b9a4:	movaps XMMWORD PTR [rsp+0xa0],xmm6
   14000b9ac:	movaps XMMWORD PTR [rsp+0x90],xmm7
   14000b9b4:	movsd  xmm7,QWORD PTR [rip+0x31a24]        # 0x14003d3e0
   14000b9bc:	mov    QWORD PTR [rsp+0xb0],r14
   14000b9c4:	cmp    r12,rsi
   14000b9c7:	je     0x14000bcd7
   14000b9cd:	mov    r14,QWORD PTR [rax+rsi*8]
   14000b9d1:	xorps  xmm6,xmm6
   14000b9d4:	mov    r10d,r15d
   14000b9d7:	cmp    ebx,0x4
   14000b9da:	jl     0x14000baa7
   14000b9e0:	mov    rax,QWORD PTR [r14+0x88]
   14000b9e7:	mov    rdx,QWORD PTR [r11+0x88]
   14000b9ee:	lea    r9,[rsp+0x40]
   14000b9f3:	sub    rdx,rax
   14000b9f6:	lea    rcx,[rax+0x8]
   14000b9fa:	neg    rax
   14000b9fd:	add    r9,rax
   14000ba00:	lea    r11,[rsp+0x48]
   14000ba05:	lea    rbp,[rsp+0x50]
   14000ba0a:	add    r11,rax
   14000ba0d:	add    rbp,rax
   14000ba10:	lea    eax,[rbx-0x4]
   14000ba13:	shr    eax,0x2
   14000ba16:	inc    eax
   14000ba18:	mov    r8d,eax
   14000ba1b:	lea    r10d,[rax*4+0x0]
   14000ba23:	lea    r15,[rax*4+0x0]
   14000ba2b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ba30:	movsd  xmm0,QWORD PTR [rdx+rcx*1-0x8]
   14000ba36:	movsd  xmm1,QWORD PTR [rdx+rcx*1]
   14000ba3b:	add    rcx,0x20
   14000ba3f:	subsd  xmm0,QWORD PTR [rcx-0x28]
   14000ba44:	subsd  xmm1,QWORD PTR [rcx-0x20]
   14000ba49:	movsd  QWORD PTR [rcx+r9*1-0x28],xmm0
   14000ba50:	movsd  QWORD PTR [rcx+r9*1-0x20],xmm1
   14000ba57:	mulsd  xmm0,xmm0
   14000ba5b:	mulsd  xmm1,xmm1
   14000ba5f:	addsd  xmm6,xmm0
   14000ba63:	movsd  xmm0,QWORD PTR [rdx+rcx*1-0x18]
   14000ba69:	subsd  xmm0,QWORD PTR [rcx-0x18]
   14000ba6e:	addsd  xmm6,xmm1
   14000ba72:	movsd  xmm1,QWORD PTR [rdx+rcx*1-0x10]
   14000ba78:	subsd  xmm1,QWORD PTR [rcx-0x10]
   14000ba7d:	movsd  QWORD PTR [rcx+r11*1-0x20],xmm0
   14000ba84:	mulsd  xmm0,xmm0
   14000ba88:	movsd  QWORD PTR [rcx+rbp*1-0x20],xmm1
   14000ba8e:	addsd  xmm6,xmm0
   14000ba92:	mulsd  xmm1,xmm1
   14000ba96:	addsd  xmm6,xmm1
   14000ba9a:	dec    r8
   14000ba9d:	jne    0x14000ba30
   14000ba9f:	mov    r11,QWORD PTR [rsp+0xe0]
   14000baa7:	cmp    r10d,ebx
   14000baaa:	jge    0x14000baf1
   14000baac:	mov    rax,QWORD PTR [r14+0x88]
   14000bab3:	mov    r8,QWORD PTR [r11+0x88]
   14000baba:	lea    r9,[rsp+0x40]
   14000babf:	mov    edx,ebx
   14000bac1:	sub    r8,rax
   14000bac4:	sub    r9,rax
   14000bac7:	lea    rcx,[rax+r15*8]
   14000bacb:	sub    edx,r10d
   14000bace:	movsd  xmm0,QWORD PTR [rcx+r8*1]
   14000bad4:	add    rcx,0x8
   14000bad8:	subsd  xmm0,QWORD PTR [rcx-0x8]
   14000badd:	movsd  QWORD PTR [rcx+r9*1-0x8],xmm0
   14000bae4:	mulsd  xmm0,xmm0
   14000bae8:	addsd  xmm6,xmm0
   14000baec:	dec    rdx
   14000baef:	jne    0x14000bace
   14000baf1:	movaps xmm0,xmm6
   14000baf4:	call   0x14003b8ae
   14000baf9:	xor    r15d,r15d
   14000bafc:	movaps xmm2,xmm7
   14000baff:	mov    ebp,r15d
   14000bb02:	mov    r8d,r15d
   14000bb05:	movaps xmm1,xmm0
   14000bb08:	mulsd  xmm1,xmm0
   14000bb0c:	mulsd  xmm1,xmm0
   14000bb10:	divsd  xmm2,xmm1
   14000bb14:	test   ebx,ebx
   14000bb16:	jle    0x14000bccf
   14000bb1c:	mov    rax,QWORD PTR [rsp+0x28]
   14000bb21:	mov    r9,QWORD PTR [rax+r12*8]
   14000bb25:	mov    rax,QWORD PTR [rsp+0x30]
   14000bb2a:	mov    r10,QWORD PTR [rax+r12*8]
   14000bb2e:	xchg   ax,ax
   14000bb30:	mov    rdx,r15
   14000bb33:	cmp    r8,0x4
   14000bb37:	jl     0x14000bc37
   14000bb3d:	movsd  xmm1,QWORD PTR [rsp+r8*8+0x40]
   14000bb44:	mov    r11d,0x2
   14000bb4a:	nop    WORD PTR [rax+rax*1+0x0]
   14000bb50:	movsd  xmm0,QWORD PTR [r10+rsi*8]
   14000bb56:	movsxd rax,ebx
   14000bb59:	lea    rcx,[r11-0x1]
   14000bb5d:	imul   rax,rdx
   14000bb61:	add    rdx,0x4
   14000bb65:	add    rax,r8
   14000bb68:	mulsd  xmm0,QWORD PTR [r9+rsi*8]
   14000bb6e:	mulsd  xmm0,xmm1
   14000bb72:	mulsd  xmm0,QWORD PTR [rsp+rdx*8+0x20]
   14000bb78:	mulsd  xmm0,xmm2
   14000bb7c:	addsd  xmm0,QWORD PTR [rdi+rax*8]
   14000bb81:	movsd  QWORD PTR [rdi+rax*8],xmm0
   14000bb86:	movsd  xmm0,QWORD PTR [r10+rsi*8]
   14000bb8c:	movsxd rax,DWORD PTR [rip+0x498d9]        # 0x14005546c
   14000bb93:	mulsd  xmm0,QWORD PTR [r9+rsi*8]
   14000bb99:	imul   rcx,rax
   14000bb9d:	mulsd  xmm0,xmm1
   14000bba1:	add    rcx,r8
   14000bba4:	mulsd  xmm0,QWORD PTR [rsp+rdx*8+0x28]
   14000bbaa:	mulsd  xmm0,xmm2
   14000bbae:	addsd  xmm0,QWORD PTR [rdi+rcx*8]
   14000bbb3:	movsd  QWORD PTR [rdi+rcx*8],xmm0
   14000bbb8:	movsd  xmm0,QWORD PTR [r10+rsi*8]
   14000bbbe:	movsxd rax,DWORD PTR [rip+0x498a7]        # 0x14005546c
   14000bbc5:	lea    rcx,[r11+0x1]
   14000bbc9:	mulsd  xmm0,QWORD PTR [r9+rsi*8]
   14000bbcf:	imul   rax,r11
   14000bbd3:	add    r11,0x4
   14000bbd7:	add    rax,r8
   14000bbda:	mulsd  xmm0,xmm1
   14000bbde:	mulsd  xmm0,QWORD PTR [rsp+rdx*8+0x30]
   14000bbe4:	mulsd  xmm0,xmm2
   14000bbe8:	addsd  xmm0,QWORD PTR [rdi+rax*8]
   14000bbed:	movsd  QWORD PTR [rdi+rax*8],xmm0
   14000bbf2:	movsd  xmm0,QWORD PTR [r10+rsi*8]
   14000bbf8:	movsxd rax,DWORD PTR [rip+0x4986d]        # 0x14005546c
   14000bbff:	mulsd  xmm0,QWORD PTR [r9+rsi*8]
   14000bc05:	imul   rcx,rax
   14000bc09:	lea    rax,[r8-0x3]
   14000bc0d:	mulsd  xmm0,xmm1
   14000bc11:	add    rcx,r8
   14000bc14:	mulsd  xmm0,QWORD PTR [rsp+rdx*8+0x38]
   14000bc1a:	mulsd  xmm0,xmm2
   14000bc1e:	addsd  xmm0,QWORD PTR [rdi+rcx*8]
   14000bc23:	movsd  QWORD PTR [rdi+rcx*8],xmm0
   14000bc28:	mov    ebx,DWORD PTR [rip+0x4983e]        # 0x14005546c
   14000bc2e:	cmp    rdx,rax
   14000bc31:	jl     0x14000bb50
   14000bc37:	cmp    rdx,r8
   14000bc3a:	jge    0x14000bc7f
   14000bc3c:	movsd  xmm1,QWORD PTR [rsp+r8*8+0x40]
   14000bc43:	movsd  xmm0,QWORD PTR [r10+rsi*8]
   14000bc49:	movsxd rax,ebx
   14000bc4c:	imul   rax,rdx
   14000bc50:	inc    rdx
   14000bc53:	mulsd  xmm0,QWORD PTR [r9+rsi*8]
   14000bc59:	mulsd  xmm0,xmm1
   14000bc5d:	add    rax,r8
   14000bc60:	mulsd  xmm0,QWORD PTR [rsp+rdx*8+0x38]
   14000bc66:	mulsd  xmm0,xmm2
   14000bc6a:	addsd  xmm0,QWORD PTR [rdi+rax*8]
   14000bc6f:	movsd  QWORD PTR [rdi+rax*8],xmm0
   14000bc74:	mov    ebx,DWORD PTR [rip+0x497f2]        # 0x14005546c
   14000bc7a:	cmp    rdx,r8
   14000bc7d:	jl     0x14000bc43
   14000bc7f:	movsd  xmm0,QWORD PTR [rsp+r8*8+0x40]
   14000bc86:	movsxd rax,ebx
   14000bc89:	movaps xmm1,xmm6
   14000bc8c:	inc    rax
   14000bc8f:	inc    ebp
   14000bc91:	mulsd  xmm0,xmm0
   14000bc95:	imul   rax,r8
   14000bc99:	inc    r8
   14000bc9c:	subsd  xmm1,xmm0
   14000bca0:	movaps xmm0,xmm7
   14000bca3:	mulsd  xmm1,QWORD PTR [r9+rsi*8]
   14000bca9:	mulsd  xmm1,xmm2
   14000bcad:	subsd  xmm0,xmm1
   14000bcb1:	mulsd  xmm0,QWORD PTR [r10+rsi*8]
   14000bcb7:	addsd  xmm0,QWORD PTR [rdi+rax*8]
   14000bcbc:	movsd  QWORD PTR [rdi+rax*8],xmm0
   14000bcc1:	mov    ebx,DWORD PTR [rip+0x497a5]        # 0x14005546c
   14000bcc7:	cmp    ebp,ebx
   14000bcc9:	jl     0x14000bb30
   14000bccf:	mov    r11,QWORD PTR [rsp+0xe0]
   14000bcd7:	mov    rax,QWORD PTR [rsp+0x20]
   14000bcdc:	inc    rsi
   14000bcdf:	cmp    rsi,r13
   14000bce2:	jl     0x14000b9c4
   14000bce8:	movaps xmm7,XMMWORD PTR [rsp+0x90]
   14000bcf0:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
   14000bcf8:	mov    r14,QWORD PTR [rsp+0xb0]
   14000bd00:	mov    rbp,QWORD PTR [rsp+0xe8]
   14000bd08:	mov    r13,QWORD PTR [rsp+0xb8]
   14000bd10:	mov    r12,QWORD PTR [rsp+0xf8]
   14000bd18:	mov    rsi,QWORD PTR [rsp+0xf0]
   14000bd20:	mov    r10d,0x1
   14000bd26:	cmp    ebx,r10d
   14000bd29:	jle    0x14000be17
   14000bd2f:	mov    r9d,r10d
   14000bd32:	mov    r8,r15
   14000bd35:	cmp    r9,0x4
   14000bd39:	jl     0x14000bdd9
   14000bd3f:	nop
   14000bd40:	movsxd rcx,ebx
   14000bd43:	mov    rax,rcx
   14000bd46:	imul   rcx,r9
   14000bd4a:	imul   rax,r8
   14000bd4e:	add    rcx,r8
   14000bd51:	add    rax,r9
   14000bd54:	mov    rax,QWORD PTR [rdi+rax*8]
   14000bd58:	mov    QWORD PTR [rdi+rcx*8],rax
   14000bd5c:	movsxd rcx,DWORD PTR [rip+0x49709]        # 0x14005546c
   14000bd63:	lea    rax,[r8+0x1]
   14000bd67:	imul   rax,rcx
   14000bd6b:	add    rax,r9
   14000bd6e:	imul   rcx,r9
   14000bd72:	add    rcx,r8
   14000bd75:	mov    rax,QWORD PTR [rdi+rax*8]
   14000bd79:	mov    QWORD PTR [rdi+rcx*8+0x8],rax
   14000bd7e:	movsxd rcx,DWORD PTR [rip+0x496e7]        # 0x14005546c
   14000bd85:	lea    rax,[r8+0x2]
   14000bd89:	imul   rax,rcx
   14000bd8d:	add    rax,r9
   14000bd90:	imul   rcx,r9
   14000bd94:	add    rcx,r8
   14000bd97:	mov    rax,QWORD PTR [rdi+rax*8]
   14000bd9b:	mov    QWORD PTR [rdi+rcx*8+0x10],rax
   14000bda0:	movsxd rcx,DWORD PTR [rip+0x496c5]        # 0x14005546c
   14000bda7:	lea    rax,[r8+0x3]
   14000bdab:	imul   rax,rcx
   14000bdaf:	add    rax,r9
   14000bdb2:	imul   rcx,r9
   14000bdb6:	add    rcx,r8
   14000bdb9:	add    r8,0x4
   14000bdbd:	mov    rax,QWORD PTR [rdi+rax*8]
   14000bdc1:	mov    QWORD PTR [rdi+rcx*8+0x18],rax
   14000bdc6:	mov    ebx,DWORD PTR [rip+0x496a0]        # 0x14005546c
   14000bdcc:	lea    rax,[r9-0x3]
   14000bdd0:	cmp    r8,rax
   14000bdd3:	jl     0x14000bd40
   14000bdd9:	cmp    r8,r9
   14000bddc:	jge    0x14000be08
   14000bdde:	movsxd rcx,ebx
   14000bde1:	mov    rax,rcx
   14000bde4:	imul   rcx,r9
   14000bde8:	imul   rax,r8
   14000bdec:	add    rcx,r8
   14000bdef:	inc    r8
   14000bdf2:	add    rax,r9
   14000bdf5:	mov    rax,QWORD PTR [rdi+rax*8]
   14000bdf9:	mov    QWORD PTR [rdi+rcx*8],rax
   14000bdfd:	mov    ebx,DWORD PTR [rip+0x49669]        # 0x14005546c
   14000be03:	cmp    r8,r9
   14000be06:	jl     0x14000bdde
   14000be08:	inc    r10d
   14000be0b:	inc    r9
   14000be0e:	cmp    r10d,ebx
   14000be11:	jl     0x14000bd32
   14000be17:	add    rsp,0xc0
   14000be1e:	pop    r15
   14000be20:	pop    rdi
   14000be21:	pop    rbx
   14000be22:	ret    
   14000be23:	int3   
   14000be24:	int3   
   14000be25:	int3   
   14000be26:	int3   
   14000be27:	int3   
   14000be28:	int3   
   14000be29:	int3   
   14000be2a:	int3   
   14000be2b:	int3   
   14000be2c:	int3   
   14000be2d:	int3   
   14000be2e:	int3   
   14000be2f:	int3   
   14000be30:	xor    eax,eax
   14000be32:	ret    
   14000be33:	int3   
   14000be34:	int3   
   14000be35:	int3   
   14000be36:	int3   
   14000be37:	int3   
   14000be38:	int3   
   14000be39:	int3   
   14000be3a:	int3   
   14000be3b:	int3   
   14000be3c:	int3   
   14000be3d:	int3   
   14000be3e:	int3   
   14000be3f:	int3   
   14000be40:	rex push rdi
   14000be42:	sub    rsp,0x30
   14000be46:	mov    eax,DWORD PTR [rip+0x49624]        # 0x140055470
   14000be4c:	mov    rdi,rcx
   14000be4f:	cmp    DWORD PTR [rcx+0xb0],eax
   14000be55:	jl     0x14000be5f
   14000be57:	xor    eax,eax
   14000be59:	add    rsp,0x30
   14000be5d:	pop    rdi
   14000be5e:	ret    
   14000be5f:	mov    QWORD PTR [rsp+0x48],rbp
   14000be64:	mov    QWORD PTR [rsp+0x50],rsi
   14000be69:	xor    r8d,r8d
   14000be6c:	xor    esi,esi
   14000be6e:	xorps  xmm3,xmm3
   14000be71:	movsxd rbp,edx
   14000be74:	test   edx,edx
   14000be76:	jle    0x14000bf77
   14000be7c:	mov    r11d,DWORD PTR [rip+0x495e9]        # 0x14005546c
   14000be83:	mov    QWORD PTR [rsp+0x40],rbx
   14000be88:	mov    QWORD PTR [rsp+0x58],r14
   14000be8d:	mov    r14,QWORD PTR [rcx+0xa8]
   14000be94:	mov    rbx,QWORD PTR [r14+r8*8]
   14000be98:	cmp    BYTE PTR [rbx+0x98],0x0
   14000be9f:	jne    0x14000bf61
   14000bea5:	xor    r10d,r10d
   14000bea8:	xor    ecx,ecx
   14000beaa:	xorps  xmm2,xmm2
   14000bead:	cmp    r11d,0x4
   14000beb1:	jl     0x14000bf20
   14000beb3:	mov    rax,QWORD PTR [rdi+0xc8]
   14000beba:	mov    rdx,QWORD PTR [rax+r8*8]
   14000bebe:	lea    eax,[r11-0x4]
   14000bec2:	shr    eax,0x2
   14000bec5:	inc    eax
   14000bec7:	mov    r9d,eax
   14000beca:	lea    r10d,[rax*4+0x0]
   14000bed2:	nop    DWORD PTR [rax+0x0]
   14000bed6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000bee0:	movsd  xmm0,QWORD PTR [rdx+rcx*8]
   14000bee5:	movsd  xmm1,QWORD PTR [rdx+rcx*8+0x8]
   14000beeb:	add    rcx,0x4
   14000beef:	mulsd  xmm0,xmm0
   14000bef3:	mulsd  xmm1,xmm1
   14000bef7:	addsd  xmm2,xmm0
   14000befb:	movsd  xmm0,QWORD PTR [rdx+rcx*8-0x10]
   14000bf01:	mulsd  xmm0,xmm0
   14000bf05:	addsd  xmm2,xmm1
   14000bf09:	movsd  xmm1,QWORD PTR [rdx+rcx*8-0x8]
   14000bf0f:	mulsd  xmm1,xmm1
   14000bf13:	addsd  xmm2,xmm0
   14000bf17:	addsd  xmm2,xmm1
   14000bf1b:	dec    r9
   14000bf1e:	jne    0x14000bee0
   14000bf20:	cmp    r10d,r11d
   14000bf23:	jge    0x14000bf55
   14000bf25:	mov    rax,QWORD PTR [rdi+0xc8]
   14000bf2c:	mov    edx,r11d
   14000bf2f:	lea    rcx,[rcx*8+0x0]
   14000bf37:	mov    r9,QWORD PTR [rax+r8*8]
   14000bf3b:	sub    edx,r10d
   14000bf3e:	movsd  xmm0,QWORD PTR [rcx+r9*1]
   14000bf44:	add    rcx,0x8
   14000bf48:	mulsd  xmm0,xmm0
   14000bf4c:	addsd  xmm2,xmm0
   14000bf50:	dec    rdx
   14000bf53:	jne    0x14000bf3e
   14000bf55:	comisd xmm2,xmm3
   14000bf59:	jbe    0x14000bf61
   14000bf5b:	mov    rsi,rbx
   14000bf5e:	movaps xmm3,xmm2
   14000bf61:	inc    r8
   14000bf64:	cmp    r8,rbp
   14000bf67:	jl     0x14000be94
   14000bf6d:	mov    r14,QWORD PTR [rsp+0x58]
   14000bf72:	mov    rbx,QWORD PTR [rsp+0x40]
   14000bf77:	movsd  xmm0,QWORD PTR [rip+0x47709]        # 0x140053688
   14000bf7f:	mov    rbp,QWORD PTR [rsp+0x48]
   14000bf84:	comisd xmm0,xmm3
   14000bf88:	jbe    0x14000bf99
   14000bf8a:	xor    esi,esi
   14000bf8c:	mov    eax,esi
   14000bf8e:	mov    rsi,QWORD PTR [rsp+0x50]
   14000bf93:	add    rsp,0x30
   14000bf97:	pop    rdi
   14000bf98:	ret    
   14000bf99:	cmp    BYTE PTR [rip+0x49519],0x0        # 0x1400554b9
   14000bfa0:	je     0x14000c03a
   14000bfa6:	mov    ecx,DWORD PTR [rip+0x476d4]        # 0x140053680
   14000bfac:	mov    eax,0x51eb851f
   14000bfb1:	inc    ecx
   14000bfb3:	mov    DWORD PTR [rip+0x476c7],ecx        # 0x140053680
   14000bfb9:	imul   ecx
   14000bfbb:	sar    edx,0x5
   14000bfbe:	mov    eax,edx
   14000bfc0:	shr    eax,0x1f
   14000bfc3:	add    edx,eax
   14000bfc5:	imul   eax,edx,0x64
   14000bfc8:	cmp    ecx,eax
   14000bfca:	jne    0x14000c03a
   14000bfcc:	movaps xmm0,xmm3
   14000bfcf:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14000bfd4:	call   0x14003b8ae
   14000bfd9:	movaps xmm6,xmm0
   14000bfdc:	call   QWORD PTR [rip+0x312ee]        # 0x14003d2d0
   14000bfe2:	movaps xmm2,xmm6
   14000bfe5:	lea    rdx,[rip+0x31b84]        # 0x14003db70
   14000bfec:	lea    rcx,[rax+0x60]
   14000bff0:	movq   r8,xmm2
   14000bff5:	call   QWORD PTR [rip+0x312c5]        # 0x14003d2c0
   14000bffb:	mov    eax,0x10624dd3
   14000c000:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14000c005:	imul   DWORD PTR [rip+0x47675]        # 0x140053680
   14000c00b:	sar    edx,0x6
   14000c00e:	mov    ecx,edx
   14000c010:	shr    ecx,0x1f
   14000c013:	add    edx,ecx
   14000c015:	imul   ecx,edx,0x3e8
   14000c01b:	cmp    DWORD PTR [rip+0x4765f],ecx        # 0x140053680
   14000c021:	jne    0x14000c03a
   14000c023:	call   QWORD PTR [rip+0x312a7]        # 0x14003d2d0
   14000c029:	lea    rdx,[rip+0x31b48]        # 0x14003db78
   14000c030:	lea    rcx,[rax+0x60]
   14000c034:	call   QWORD PTR [rip+0x31286]        # 0x14003d2c0
   14000c03a:	mov    rax,rsi
   14000c03d:	mov    rsi,QWORD PTR [rsp+0x50]
   14000c042:	add    rsp,0x30
   14000c046:	pop    rdi
   14000c047:	ret    
   14000c048:	int3   
   14000c049:	int3   
   14000c04a:	int3   
   14000c04b:	int3   
   14000c04c:	int3   
   14000c04d:	int3   
   14000c04e:	int3   
   14000c04f:	int3   
   14000c050:	mov    QWORD PTR [rsp+0x8],rbx
   14000c055:	mov    QWORD PTR [rsp+0x10],rbp
   14000c05a:	mov    QWORD PTR [rsp+0x18],rsi
   14000c05f:	mov    QWORD PTR [rsp+0x20],rdi
   14000c064:	push   r14
   14000c066:	sub    rsp,0x20
   14000c06a:	xor    esi,esi
   14000c06c:	mov    r14,r8
   14000c06f:	mov    rdi,rdx
   14000c072:	mov    ebx,esi
   14000c074:	mov    rbp,rcx
   14000c077:	call   0x14002b780
   14000c07c:	mov    r9,rax
   14000c07f:	test   rax,rax
   14000c082:	je     0x14000c0e2
   14000c084:	nop    DWORD PTR [rax+0x0]
   14000c088:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c090:	mov    rdx,QWORD PTR [r9+0x10]
   14000c094:	mov    rax,QWORD PTR [r9+0x18]
   14000c098:	cmp    rdx,rax
   14000c09b:	je     0x14000c0cc
   14000c09d:	cmp    esi,0x1
   14000c0a0:	jne    0x14000c0bd
   14000c0a2:	cmp    rax,rdi
   14000c0a5:	jne    0x14000c0ac
   14000c0a7:	cmp    rdx,rbx
   14000c0aa:	je     0x14000c0cc
   14000c0ac:	cmp    rax,rbx
   14000c0af:	jne    0x14000c0b6
   14000c0b1:	cmp    rdx,rdi
   14000c0b4:	je     0x14000c0cc
   14000c0b6:	mov    eax,0x2
   14000c0bb:	jmp    0x14000c0e4
   14000c0bd:	cmp    rax,rdi
   14000c0c0:	mov    rbx,rax
   14000c0c3:	cmove  rbx,rdx
   14000c0c7:	inc    esi
   14000c0c9:	mov    QWORD PTR [r14],rbx
   14000c0cc:	mov    r8,rdi
   14000c0cf:	mov    rdx,r9
   14000c0d2:	mov    rcx,rbp
   14000c0d5:	call   0x14002b890
   14000c0da:	mov    r9,rax
   14000c0dd:	test   rax,rax
   14000c0e0:	jne    0x14000c090
   14000c0e2:	mov    eax,esi
   14000c0e4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c0e9:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c0ee:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c0f3:	mov    rdi,QWORD PTR [rsp+0x48]
   14000c0f8:	add    rsp,0x20
   14000c0fc:	pop    r14
   14000c0fe:	ret    
   14000c0ff:	int3   
   14000c100:	rex push rbp
   14000c102:	push   rsi
   14000c103:	push   r13
   14000c105:	push   r14
   14000c107:	push   r15
   14000c109:	sub    rsp,0xa0
   14000c110:	cmp    BYTE PTR [rip+0x493a2],0x0        # 0x1400554b9
   14000c117:	movsxd r13,edx
   14000c11a:	mov    rbp,rcx
   14000c11d:	je     0x14000c136
   14000c11f:	call   QWORD PTR [rip+0x311ab]        # 0x14003d2d0
   14000c125:	lea    rdx,[rip+0x31a14]        # 0x14003db40
   14000c12c:	lea    rcx,[rax+0x60]
   14000c130:	call   QWORD PTR [rip+0x3118a]        # 0x14003d2c0
   14000c136:	mov    r14,QWORD PTR [rbp+0xc0]
   14000c13d:	mov    r15,QWORD PTR [rbp+0xb8]
   14000c144:	mov    QWORD PTR [rsp+0xd8],rbx
   14000c14c:	mov    QWORD PTR [rsp+0x98],rdi
   14000c154:	mov    QWORD PTR [rsp+0x90],r12
   14000c15c:	test   r13d,r13d
   14000c15f:	jle    0x14000c1f7
   14000c165:	movaps XMMWORD PTR [rsp+0x80],xmm6
   14000c16d:	xor    edi,edi
   14000c16f:	movaps XMMWORD PTR [rsp+0x70],xmm7
   14000c174:	movsd  xmm7,QWORD PTR [rip+0x31264]        # 0x14003d3e0
   14000c17c:	sub    r15,r14
   14000c17f:	mov    r12d,r13d
   14000c182:	xor    ebx,ebx
   14000c184:	test   rdi,rdi
   14000c187:	jle    0x14000c1e2
   14000c189:	lea    rsi,[r14+rdi*8]
   14000c18d:	nop    DWORD PTR [rax]
   14000c190:	mov    rdx,QWORD PTR [rbp+0xa8]
   14000c197:	mov    rax,QWORD PTR [rsi+r15*1]
   14000c19b:	movaps xmm6,xmm7
   14000c19e:	mov    r8,QWORD PTR [rdx+rbx*8]
   14000c1a2:	mov    rdx,QWORD PTR [rdx+rdi*8]
   14000c1a6:	mov    rcx,rbp
   14000c1a9:	movsd  xmm0,QWORD PTR [rax+rbx*8]
   14000c1ae:	mulsd  xmm0,xmm0
   14000c1b2:	divsd  xmm6,xmm0
   14000c1b6:	call   0x14002b710
   14000c1bb:	test   rax,rax
   14000c1be:	je     0x14000c1c8
   14000c1c0:	mulsd  xmm6,QWORD PTR [rax+0x88]
   14000c1c8:	mov    rax,QWORD PTR [r14+rbx*8]
   14000c1cc:	inc    rbx
   14000c1cf:	movsd  QWORD PTR [rax+rdi*8],xmm6
   14000c1d4:	mov    rax,QWORD PTR [rsi]
   14000c1d7:	movsd  QWORD PTR [rax+rbx*8-0x8],xmm6
   14000c1dd:	cmp    rbx,rdi
   14000c1e0:	jl     0x14000c190
   14000c1e2:	inc    rdi
   14000c1e5:	dec    r12
   14000c1e8:	jne    0x14000c182
   14000c1ea:	movaps xmm7,XMMWORD PTR [rsp+0x70]
   14000c1ef:	movaps xmm6,XMMWORD PTR [rsp+0x80]
   14000c1f7:	mov    ebx,DWORD PTR [rip+0x4926f]        # 0x14005546c
   14000c1fd:	xor    r8d,r8d
   14000c200:	mov    rsi,r13
   14000c203:	mov    QWORD PTR [rsp+0xe0],r13
   14000c20b:	test   r13d,r13d
   14000c20e:	jle    0x14000c240
   14000c210:	xor    edx,edx
   14000c212:	test   ebx,ebx
   14000c214:	jle    0x14000c238
   14000c216:	mov    rax,QWORD PTR [rbp+0xc8]
   14000c21d:	mov    rcx,QWORD PTR [rax+r8*8]
   14000c221:	mov    QWORD PTR [rcx],0x0
   14000c228:	mov    ebx,DWORD PTR [rip+0x4923e]        # 0x14005546c
   14000c22e:	inc    edx
   14000c230:	lea    rcx,[rcx+0x8]
   14000c234:	cmp    edx,ebx
   14000c236:	jl     0x14000c221
   14000c238:	inc    r8
   14000c23b:	cmp    r8,r13
   14000c23e:	jl     0x14000c210
   14000c240:	mov    rax,QWORD PTR [rbp+0xa8]
   14000c247:	mov    rcx,QWORD PTR [rax]
   14000c24a:	mov    QWORD PTR [rsp+0xd0],rcx
   14000c252:	test   rcx,rcx
   14000c255:	je     0x14000c45b
   14000c25b:	xor    r13d,r13d
   14000c25e:	xor    r12d,r12d
   14000c261:	xor    edi,edi
   14000c263:	test   rsi,rsi
   14000c266:	jle    0x14000c43b
   14000c26c:	nop    DWORD PTR [rax+0x0]
   14000c270:	cmp    r13,rdi
   14000c273:	je     0x14000c42f
   14000c279:	mov    rax,QWORD PTR [rax+rdi*8]
   14000c27d:	mov    r9,QWORD PTR [rcx+0x88]
   14000c284:	xor    r11d,r11d
   14000c287:	xorps  xmm2,xmm2
   14000c28a:	mov    r10,QWORD PTR [rax+0x88]
   14000c291:	xor    eax,eax
   14000c293:	cmp    ebx,0x4
   14000c296:	jl     0x14000c356
   14000c29c:	mov    rax,r10
   14000c29f:	lea    rsi,[rsp+0x20]
   14000c2a4:	lea    r14,[rsp+0x28]
   14000c2a9:	neg    rax
   14000c2ac:	lea    r15,[rsp+0x30]
   14000c2b1:	mov    rdx,r9
   14000c2b4:	add    rsi,rax
   14000c2b7:	add    r14,rax
   14000c2ba:	add    r15,rax
   14000c2bd:	lea    eax,[rbx-0x4]
   14000c2c0:	sub    rdx,r10
   14000c2c3:	lea    rcx,[r10+0x8]
   14000c2c7:	shr    eax,0x2
   14000c2ca:	inc    eax
   14000c2cc:	mov    r8d,eax
   14000c2cf:	lea    r11d,[rax*4+0x0]
   14000c2d7:	lea    rax,[rax*4+0x0]
   14000c2df:	nop
   14000c2e0:	movsd  xmm0,QWORD PTR [rdx+rcx*1-0x8]
   14000c2e6:	movsd  xmm1,QWORD PTR [rdx+rcx*1]
   14000c2eb:	add    rcx,0x20
   14000c2ef:	subsd  xmm0,QWORD PTR [rcx-0x28]
   14000c2f4:	subsd  xmm1,QWORD PTR [rcx-0x20]
   14000c2f9:	movsd  QWORD PTR [rsi+rcx*1-0x28],xmm0
   14000c2ff:	movsd  QWORD PTR [rsi+rcx*1-0x20],xmm1
   14000c305:	mulsd  xmm0,xmm0
   14000c309:	mulsd  xmm1,xmm1
   14000c30d:	addsd  xmm2,xmm0
   14000c311:	movsd  xmm0,QWORD PTR [rdx+rcx*1-0x18]
   14000c317:	subsd  xmm0,QWORD PTR [rcx-0x18]
   14000c31c:	addsd  xmm2,xmm1
   14000c320:	movsd  xmm1,QWORD PTR [rdx+rcx*1-0x10]
   14000c326:	subsd  xmm1,QWORD PTR [rcx-0x10]
   14000c32b:	movsd  QWORD PTR [r14+rcx*1-0x20],xmm0
   14000c332:	mulsd  xmm0,xmm0
   14000c336:	movsd  QWORD PTR [r15+rcx*1-0x20],xmm1
   14000c33d:	addsd  xmm2,xmm0
   14000c341:	mulsd  xmm1,xmm1
   14000c345:	addsd  xmm2,xmm1
   14000c349:	dec    r8
   14000c34c:	jne    0x14000c2e0
   14000c34e:	mov    rsi,QWORD PTR [rsp+0xe0]
   14000c356:	cmp    r11d,ebx
   14000c359:	jge    0x14000c392
   14000c35b:	lea    r8,[rsp+0x20]
   14000c360:	mov    edx,ebx
   14000c362:	sub    r9,r10
   14000c365:	sub    r8,r10
   14000c368:	sub    edx,r11d
   14000c36b:	lea    rcx,[r10+rax*8]
   14000c36f:	movsd  xmm1,QWORD PTR [rcx+r9*1]
   14000c375:	add    rcx,0x8
   14000c379:	subsd  xmm1,QWORD PTR [rcx-0x8]
   14000c37e:	movsd  QWORD PTR [r8+rcx*1-0x8],xmm1
   14000c385:	mulsd  xmm1,xmm1
   14000c389:	addsd  xmm2,xmm1
   14000c38d:	dec    rdx
   14000c390:	jne    0x14000c36f
   14000c392:	movaps xmm0,xmm2
   14000c395:	call   0x14003b8ae
   14000c39a:	xor    edx,edx
   14000c39c:	movaps xmm2,xmm0
   14000c39f:	test   ebx,ebx
   14000c3a1:	jle    0x14000c420
   14000c3a3:	mov    rax,QWORD PTR [rbp+0xd0]
   14000c3aa:	mov    rcx,QWORD PTR [rax+r12*1]
   14000c3ae:	mov    rax,QWORD PTR [rbp+0xc8]
   14000c3b5:	mov    r8,QWORD PTR [rcx+rdi*8]
   14000c3b9:	mov    rcx,QWORD PTR [r12+rax*1]
   14000c3bd:	mov    rax,QWORD PTR [rbp+0xb8]
   14000c3c4:	mov    r9,QWORD PTR [r12+rax*1]
   14000c3c8:	mov    rax,QWORD PTR [rbp+0xc0]
   14000c3cf:	mov    r10,QWORD PTR [rax+r12*1]
   14000c3d3:	xor    eax,eax
   14000c3d5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000c3e0:	movsd  xmm1,QWORD PTR [rsp+rax*1+0x20]
   14000c3e6:	inc    edx
   14000c3e8:	add    rax,0x8
   14000c3ec:	movaps xmm0,xmm1
   14000c3ef:	mulsd  xmm0,QWORD PTR [r9+rdi*8]
   14000c3f5:	divsd  xmm0,xmm2
   14000c3f9:	subsd  xmm1,xmm0
   14000c3fd:	mulsd  xmm1,QWORD PTR [r10+rdi*8]
   14000c403:	movsd  QWORD PTR [rax+r8*1-0x8],xmm1
   14000c40a:	addsd  xmm1,QWORD PTR [rax+rcx*1-0x8]
   14000c410:	movsd  QWORD PTR [rax+rcx*1-0x8],xmm1
   14000c416:	mov    ebx,DWORD PTR [rip+0x49050]        # 0x14005546c
   14000c41c:	cmp    edx,ebx
   14000c41e:	jl     0x14000c3e0
   14000c420:	mov    rax,QWORD PTR [rbp+0xa8]
   14000c427:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000c42f:	inc    rdi
   14000c432:	cmp    rdi,rsi
   14000c435:	jl     0x14000c270
   14000c43b:	inc    r13
   14000c43e:	lea    r12,[r13*8+0x0]
   14000c446:	mov    rcx,QWORD PTR [rax+r12*1]
   14000c44a:	mov    QWORD PTR [rsp+0xd0],rcx
   14000c452:	test   rcx,rcx
   14000c455:	jne    0x14000c261
   14000c45b:	mov    r12,QWORD PTR [rsp+0x90]
   14000c463:	mov    rdi,QWORD PTR [rsp+0x98]
   14000c46b:	mov    rbx,QWORD PTR [rsp+0xd8]
   14000c473:	add    rsp,0xa0
   14000c47a:	pop    r15
   14000c47c:	pop    r14
   14000c47e:	pop    r13
   14000c480:	pop    rsi
   14000c481:	pop    rbp
   14000c482:	ret    
   14000c483:	int3   
   14000c484:	int3   
   14000c485:	int3   
   14000c486:	int3   
   14000c487:	int3   
   14000c488:	int3   
   14000c489:	int3   
   14000c48a:	int3   
   14000c48b:	int3   
   14000c48c:	int3   
   14000c48d:	int3   
   14000c48e:	int3   
   14000c48f:	int3   
   14000c490:	xor    eax,eax
   14000c492:	xorps  xmm0,xmm0
   14000c495:	cmp    DWORD PTR [rip+0x48fd1],eax        # 0x14005546c
   14000c49b:	jle    0x14000c4d7
   14000c49d:	sub    rcx,rdx
   14000c4a0:	sub    r8,rdx
   14000c4a3:	nop    DWORD PTR [rax+0x0]
   14000c4a7:	nop    WORD PTR [rax+rax*1+0x0]
   14000c4b0:	movsd  xmm1,QWORD PTR [rcx+rdx*1]
   14000c4b5:	inc    eax
   14000c4b7:	add    rdx,0x8
   14000c4bb:	subsd  xmm1,QWORD PTR [rdx-0x8]
   14000c4c0:	movsd  QWORD PTR [r8+rdx*1-0x8],xmm1
   14000c4c7:	cmp    eax,DWORD PTR [rip+0x48f9f]        # 0x14005546c
   14000c4cd:	mulsd  xmm1,xmm1
   14000c4d1:	addsd  xmm0,xmm1
   14000c4d5:	jl     0x14000c4b0
   14000c4d7:	jmp    0x14003b8ae
   14000c4dc:	int3   
   14000c4dd:	int3   
   14000c4de:	int3   
   14000c4df:	int3   
   14000c4e0:	sub    rsp,0x38
   14000c4e4:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14000c4e9:	movaps xmm6,xmm2
   14000c4ec:	test   edx,edx
   14000c4ee:	jns    0x14000c4fd
   14000c4f0:	movaps xmm0,xmm2
   14000c4f3:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14000c4f8:	add    rsp,0x38
   14000c4fc:	ret    
   14000c4fd:	call   0x140027720
   14000c502:	lea    r8,[rsp+0x58]
   14000c507:	lea    rdx,[rip+0x30e92]        # 0x14003d3a0
   14000c50e:	mov    rcx,rax
   14000c511:	call   QWORD PTR [rip+0x30da1]        # 0x14003d2b8
   14000c517:	cmp    eax,0x1
   14000c51a:	jge    0x14000c529
   14000c51c:	movaps xmm0,xmm6
   14000c51f:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14000c524:	add    rsp,0x38
   14000c528:	ret    
   14000c529:	movsd  xmm0,QWORD PTR [rsp+0x58]
   14000c52f:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14000c534:	add    rsp,0x38
   14000c538:	ret    
   14000c539:	int3   
   14000c53a:	int3   
   14000c53b:	int3   
   14000c53c:	int3   
   14000c53d:	int3   
   14000c53e:	int3   
   14000c53f:	int3   
   14000c540:	sub    rsp,0x28
   14000c544:	call   QWORD PTR [rip+0x30b6e]        # 0x14003d0b8
   14000c54a:	movd   xmm0,eax
   14000c54e:	cvtdq2pd xmm0,xmm0
   14000c552:	divsd  xmm0,QWORD PTR [rip+0x3171e]        # 0x14003dc78
   14000c55a:	add    rsp,0x28
   14000c55e:	ret    
   14000c55f:	int3   
   14000c560:	mov    DWORD PTR [rsp+0x10],edx
   14000c564:	mov    r11,rsp
   14000c567:	mov    QWORD PTR [r11+0x8],rcx
   14000c56b:	push   rdi
   14000c56c:	sub    rsp,0xd0
   14000c573:	cmp    BYTE PTR [rip+0x48f3f],0x0        # 0x1400554b9
   14000c57a:	movaps XMMWORD PTR [r11-0x78],xmm8
   14000c57f:	mov    rdi,rcx
   14000c582:	xorps  xmm8,xmm8
   14000c586:	je     0x14000c7eb
   14000c58c:	lea    eax,[rdx-0x1]
   14000c58f:	mov    QWORD PTR [r11-0x20],rsi
   14000c593:	xor    esi,esi
   14000c595:	cdqe   
   14000c597:	mov    QWORD PTR [rsp+0xf0],rsi
   14000c59f:	mov    QWORD PTR [rsp+0x20],rax
   14000c5a4:	test   rax,rax
   14000c5a7:	jle    0x14000c7bc
   14000c5ad:	mov    r8,QWORD PTR [rcx+0xa8]
   14000c5b4:	mov    QWORD PTR [r11-0x10],rbx
   14000c5b8:	mov    ebx,DWORD PTR [rip+0x48eae]        # 0x14005546c
   14000c5be:	mov    QWORD PTR [r11-0x18],rbp
   14000c5c2:	mov    QWORD PTR [r11-0x28],r12
   14000c5c6:	mov    QWORD PTR [r11-0x30],r13
   14000c5ca:	mov    QWORD PTR [r11-0x38],r14
   14000c5ce:	mov    QWORD PTR [r11-0x40],r15
   14000c5d2:	mov    r9d,0x8
   14000c5d8:	movaps XMMWORD PTR [r11-0x58],xmm6
   14000c5dd:	movaps XMMWORD PTR [rsp+0x70],xmm7
   14000c5e2:	movaps XMMWORD PTR [rsp+0x50],xmm9
   14000c5e8:	movsd  xmm9,QWORD PTR [rip+0x310ef]        # 0x14003d6e0
   14000c5f1:	sub    r9,r8
   14000c5f4:	mov    QWORD PTR [rsp+0x28],r8
   14000c5f9:	lea    r15d,[rsi+0x1]
   14000c5fd:	mov    QWORD PTR [rsp+0x30],r9
   14000c602:	movaps XMMWORD PTR [rsp+0x40],xmm10
   14000c608:	movsd  xmm10,QWORD PTR [rip+0x30dc7]        # 0x14003d3d8
   14000c611:	cmp    r15d,edx
   14000c614:	jge    0x14000c75c
   14000c61a:	mov    rax,QWORD PTR [rdi+0xb8]
   14000c621:	mov    r14,QWORD PTR [r8+rsi*8]
   14000c625:	lea    rcx,[r8+rsi*8]
   14000c629:	mov    rax,QWORD PTR [rax+rsi*8]
   14000c62d:	mov    rbp,r8
   14000c630:	mov    r13d,edx
   14000c633:	mov    QWORD PTR [rsp+0xf8],rax
   14000c63b:	mov    rax,QWORD PTR [rdi+0xc0]
   14000c642:	mov    r12,QWORD PTR [rax+rsi*8]
   14000c646:	mov    rsi,QWORD PTR [rsp+0xf8]
   14000c64e:	lea    rdi,[r12+rcx*1]
   14000c652:	sub    rbp,r12
   14000c655:	neg    r12
   14000c658:	add    rdi,r9
   14000c65b:	sub    r13d,r15d
   14000c65e:	xchg   ax,ax
   14000c660:	mov    r10,QWORD PTR [rdi+rbp*1]
   14000c664:	xor    r9d,r9d
   14000c667:	xor    r11d,r11d
   14000c66a:	xorps  xmm0,xmm0
   14000c66d:	cmp    ebx,0x4
   14000c670:	jl     0x14000c6b9
   14000c672:	mov    rax,QWORD PTR [r10+0x88]
   14000c679:	mov    r8,QWORD PTR [r14+0x88]
   14000c680:	lea    rcx,[rax+0x18]
   14000c684:	sub    r8,rax
   14000c687:	lea    eax,[rbx-0x4]
   14000c68a:	shr    eax,0x2
   14000c68d:	inc    eax
   14000c68f:	mov    edx,eax
   14000c691:	lea    r9d,[rax*4+0x0]
   14000c699:	lea    r11,[rax*4+0x0]
   14000c6a1:	movsd  xmm0,QWORD PTR [r8+rcx*1]
   14000c6a7:	add    rcx,0x20
   14000c6ab:	subsd  xmm0,QWORD PTR [rcx-0x20]
   14000c6b0:	mulsd  xmm0,xmm0
   14000c6b4:	dec    rdx
   14000c6b7:	jne    0x14000c6a1
   14000c6b9:	cmp    r9d,ebx
   14000c6bc:	jge    0x14000c6f0
   14000c6be:	mov    rax,QWORD PTR [r10+0x88]
   14000c6c5:	mov    r8,QWORD PTR [r14+0x88]
   14000c6cc:	mov    edx,ebx
   14000c6ce:	sub    r8,rax
   14000c6d1:	lea    rcx,[rax+r11*8]
   14000c6d5:	sub    edx,r9d
   14000c6d8:	movsd  xmm0,QWORD PTR [rcx+r8*1]
   14000c6de:	add    rcx,0x8
   14000c6e2:	subsd  xmm0,QWORD PTR [rcx-0x8]
   14000c6e7:	mulsd  xmm0,xmm0
   14000c6eb:	dec    rdx
   14000c6ee:	jne    0x14000c6d8
   14000c6f0:	lea    rax,[r12+rdi*1]
   14000c6f4:	movsd  xmm6,QWORD PTR [rax+rsi*1]
   14000c6f9:	movaps xmm7,xmm6
   14000c6fc:	mulsd  xmm7,xmm6
   14000c700:	addsd  xmm7,xmm0
   14000c704:	call   0x14003b8ae
   14000c709:	mulsd  xmm6,xmm9
   14000c70e:	mulsd  xmm0,xmm6
   14000c712:	add    rdi,0x8
   14000c716:	subsd  xmm7,xmm0
   14000c71a:	movsd  xmm0,QWORD PTR [rdi-0x8]
   14000c71f:	mulsd  xmm0,xmm10
   14000c724:	mulsd  xmm7,xmm0
   14000c728:	addsd  xmm8,xmm7
   14000c72d:	dec    r13
   14000c730:	jne    0x14000c660
   14000c736:	mov    rsi,QWORD PTR [rsp+0xf0]
   14000c73e:	mov    edx,DWORD PTR [rsp+0xe8]
   14000c745:	mov    rax,QWORD PTR [rsp+0x20]
   14000c74a:	mov    rdi,QWORD PTR [rsp+0xe0]
   14000c752:	mov    r8,QWORD PTR [rsp+0x28]
   14000c757:	mov    r9,QWORD PTR [rsp+0x30]
   14000c75c:	inc    rsi
   14000c75f:	inc    r15d
   14000c762:	mov    QWORD PTR [rsp+0xf0],rsi
   14000c76a:	cmp    rsi,rax
   14000c76d:	jl     0x14000c611
   14000c773:	movaps xmm10,XMMWORD PTR [rsp+0x40]
   14000c779:	movaps xmm9,XMMWORD PTR [rsp+0x50]
   14000c77f:	movaps xmm7,XMMWORD PTR [rsp+0x70]
   14000c784:	mov    r15,QWORD PTR [rsp+0x98]
   14000c78c:	mov    r14,QWORD PTR [rsp+0xa0]
   14000c794:	mov    r13,QWORD PTR [rsp+0xa8]
   14000c79c:	mov    r12,QWORD PTR [rsp+0xb0]
   14000c7a4:	mov    rbp,QWORD PTR [rsp+0xc0]
   14000c7ac:	mov    rbx,QWORD PTR [rsp+0xc8]
   14000c7b4:	movaps xmm6,XMMWORD PTR [rsp+0x80]
   14000c7bc:	call   QWORD PTR [rip+0x30b0e]        # 0x14003d2d0
   14000c7c2:	mov    r8d,DWORD PTR [rdi+0xb0]
   14000c7c9:	movaps xmm3,xmm8
   14000c7cd:	lea    rcx,[rax+0x60]
   14000c7d1:	lea    rdx,[rip+0x31478]        # 0x14003dc50
   14000c7d8:	movq   r9,xmm3
   14000c7dd:	call   QWORD PTR [rip+0x30add]        # 0x14003d2c0
   14000c7e3:	mov    rsi,QWORD PTR [rsp+0xb8]
   14000c7eb:	movaps xmm8,XMMWORD PTR [rsp+0x60]
   14000c7f1:	add    rsp,0xd0
   14000c7f8:	pop    rdi
   14000c7f9:	ret    
   14000c7fa:	int3   
   14000c7fb:	int3   
   14000c7fc:	int3   
   14000c7fd:	int3   
   14000c7fe:	int3   
   14000c7ff:	int3   
   14000c800:	sub    rsp,0x28
   14000c804:	call   0x14003b8ae
   14000c809:	movaps xmm1,xmm0
   14000c80c:	mulsd  xmm1,xmm0
   14000c810:	mulsd  xmm1,xmm0
   14000c814:	movaps xmm0,xmm1
   14000c817:	add    rsp,0x28
   14000c81b:	ret    
   14000c81c:	int3   
   14000c81d:	int3   
   14000c81e:	int3   
   14000c81f:	int3   
   14000c820:	push   r14
   14000c822:	sub    rsp,0x20
   14000c826:	mov    rax,QWORD PTR [rcx]
   14000c829:	mov    r14,rcx
   14000c82c:	test   rax,rax
   14000c82f:	je     0x14000c898
   14000c831:	mov    QWORD PTR [rsp+0x30],rbx
   14000c836:	mov    QWORD PTR [rsp+0x38],rsi
   14000c83b:	mov    QWORD PTR [rsp+0x40],rdi
   14000c840:	mov    rdi,rcx
   14000c843:	xor    esi,esi
   14000c845:	xor    ebx,ebx
   14000c847:	cmp    QWORD PTR [rax],rbx
   14000c84a:	je     0x14000c870
   14000c84c:	xor    ecx,ecx
   14000c84e:	xchg   ax,ax
   14000c850:	mov    rcx,QWORD PTR [rax+rcx*1]
   14000c854:	call   QWORD PTR [rip+0x30a46]        # 0x14003d2a0
   14000c85a:	mov    rax,QWORD PTR [rdi]
   14000c85d:	lea    rbx,[rbx+0x1]
   14000c861:	cmp    QWORD PTR [rax+rbx*8],0x0
   14000c866:	lea    rcx,[rbx*8+0x0]
   14000c86e:	jne    0x14000c850
   14000c870:	mov    rcx,rax
   14000c873:	call   QWORD PTR [rip+0x30a27]        # 0x14003d2a0
   14000c879:	inc    rsi
   14000c87c:	mov    rax,QWORD PTR [r14+rsi*8]
   14000c880:	lea    rdi,[r14+rsi*8]
   14000c884:	test   rax,rax
   14000c887:	jne    0x14000c845
   14000c889:	mov    rdi,QWORD PTR [rsp+0x40]
   14000c88e:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c893:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c898:	mov    rcx,r14
   14000c89b:	add    rsp,0x20
   14000c89f:	pop    r14
   14000c8a1:	rex.W jmp QWORD PTR [rip+0x309f8]        # 0x14003d2a0
   14000c8a8:	int3   
   14000c8a9:	int3   
   14000c8aa:	int3   
   14000c8ab:	int3   
   14000c8ac:	int3   
   14000c8ad:	int3   
   14000c8ae:	int3   
   14000c8af:	int3   
   14000c8b0:	rex push rbx
   14000c8b2:	sub    rsp,0x20
   14000c8b6:	mov    rbx,rcx
   14000c8b9:	mov    rcx,QWORD PTR [rcx]
   14000c8bc:	call   QWORD PTR [rip+0x309de]        # 0x14003d2a0
   14000c8c2:	mov    rcx,rbx
   14000c8c5:	add    rsp,0x20
   14000c8c9:	pop    rbx
   14000c8ca:	rex.W jmp QWORD PTR [rip+0x309cf]        # 0x14003d2a0
   14000c8d1:	int3   
   14000c8d2:	int3   
   14000c8d3:	int3   
   14000c8d4:	int3   
   14000c8d5:	int3   
   14000c8d6:	int3   
   14000c8d7:	int3   
   14000c8d8:	int3   
   14000c8d9:	int3   
   14000c8da:	int3   
   14000c8db:	int3   
   14000c8dc:	int3   
   14000c8dd:	int3   
   14000c8de:	int3   
   14000c8df:	int3   
   14000c8e0:	rex push rdi
   14000c8e2:	sub    rsp,0x20
   14000c8e6:	mov    rdi,rcx
   14000c8e9:	mov    rcx,QWORD PTR [rcx+0xa8]
   14000c8f0:	call   QWORD PTR [rip+0x309aa]        # 0x14003d2a0
   14000c8f6:	cmp    DWORD PTR [rip+0x48bab],0x0        # 0x1400554a8
   14000c8fd:	jne    0x14000c96b
   14000c8ff:	mov    QWORD PTR [rsp+0x30],rbx
   14000c904:	mov    rbx,QWORD PTR [rdi+0xb8]
   14000c90b:	mov    rcx,QWORD PTR [rbx]
   14000c90e:	call   QWORD PTR [rip+0x3098c]        # 0x14003d2a0
   14000c914:	mov    rcx,rbx
   14000c917:	call   QWORD PTR [rip+0x30983]        # 0x14003d2a0
   14000c91d:	mov    rbx,QWORD PTR [rdi+0xc0]
   14000c924:	mov    rcx,QWORD PTR [rbx]
   14000c927:	call   QWORD PTR [rip+0x30973]        # 0x14003d2a0
   14000c92d:	mov    rcx,rbx
   14000c930:	call   QWORD PTR [rip+0x3096a]        # 0x14003d2a0
   14000c936:	mov    rbx,QWORD PTR [rdi+0xc8]
   14000c93d:	mov    rcx,QWORD PTR [rbx]
   14000c940:	call   QWORD PTR [rip+0x3095a]        # 0x14003d2a0
   14000c946:	mov    rcx,rbx
   14000c949:	call   QWORD PTR [rip+0x30951]        # 0x14003d2a0
   14000c94f:	mov    rcx,QWORD PTR [rdi+0xd0]
   14000c956:	call   0x14000c820
   14000c95b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c960:	mov    QWORD PTR [rdi+0xd0],0x0
   14000c96b:	add    rsp,0x20
   14000c96f:	pop    rdi
   14000c970:	ret    
   14000c971:	int3   
   14000c972:	int3   
   14000c973:	int3   
   14000c974:	int3   
   14000c975:	int3   
   14000c976:	int3   
   14000c977:	int3   
   14000c978:	int3   
   14000c979:	int3   
   14000c97a:	int3   
   14000c97b:	int3   
   14000c97c:	int3   
   14000c97d:	int3   
   14000c97e:	int3   
   14000c97f:	int3   
   14000c980:	mov    QWORD PTR [rsp+0x10],rbx
   14000c985:	mov    QWORD PTR [rsp+0x18],rsi
   14000c98a:	push   rdi
   14000c98b:	movsxd rsi,DWORD PTR [rcx+0x7c]
   14000c98f:	mov    edi,DWORD PTR [rip+0x46cef]        # 0x140053684
   14000c995:	mov    rbx,rcx
   14000c998:	lea    r9d,[rsi*2+0x1]
   14000c9a0:	cmp    r9d,edi
   14000c9a3:	jge    0x14000ca32
   14000c9a9:	mov    r11,QWORD PTR [rip+0x46ce8]        # 0x140053698
   14000c9b0:	mov    QWORD PTR [rsp+0x10],rbp
   14000c9b5:	movsxd r10,r9d
   14000c9b8:	mov    rbp,rsi
   14000c9bb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c9c0:	lea    r8d,[r9+0x1]
   14000c9c4:	lea    rdx,[r10+0x1]
   14000c9c8:	cmp    r8d,edi
   14000c9cb:	jge    0x14000c9e7
   14000c9cd:	mov    rax,QWORD PTR [r11+r10*8]
   14000c9d1:	mov    rcx,QWORD PTR [r11+rdx*8]
   14000c9d5:	movsd  xmm0,QWORD PTR [rax+0x90]
   14000c9dd:	comisd xmm0,QWORD PTR [rcx+0x90]
   14000c9e5:	ja     0x14000c9ed
   14000c9e7:	mov    r8d,r9d
   14000c9ea:	mov    rdx,r10
   14000c9ed:	mov    rax,QWORD PTR [r11+rdx*8]
   14000c9f1:	movsd  xmm0,QWORD PTR [rax+0x90]
   14000c9f9:	comisd xmm0,QWORD PTR [rbx+0x90]
   14000ca01:	jae    0x14000ca2d
   14000ca03:	mov    QWORD PTR [r11+rdx*8],rbx
   14000ca07:	mov    DWORD PTR [rbx+0x7c],r8d
   14000ca0b:	mov    QWORD PTR [r11+rbp*8],rax
   14000ca0f:	lea    r9d,[r8*2+0x1]
   14000ca17:	mov    DWORD PTR [rax+0x7c],esi
   14000ca1a:	mov    rbp,rdx
   14000ca1d:	mov    esi,r8d
   14000ca20:	lea    r10,[rdx*2+0x1]
   14000ca28:	cmp    r9d,edi
   14000ca2b:	jl     0x14000c9c0
   14000ca2d:	mov    rbp,QWORD PTR [rsp+0x10]
   14000ca32:	mov    rbx,QWORD PTR [rsp+0x18]
   14000ca37:	mov    rsi,QWORD PTR [rsp+0x20]
   14000ca3c:	pop    rdi
   14000ca3d:	ret    
   14000ca3e:	int3   
   14000ca3f:	int3   
   14000ca40:	mov    r8d,DWORD PTR [rcx+0x7c]
   14000ca44:	mov    r9,rcx
   14000ca47:	test   r8d,r8d
   14000ca4a:	jle    0x14000ca9d
   14000ca4c:	mov    r10,QWORD PTR [rip+0x46c45]        # 0x140053698
   14000ca53:	nop    DWORD PTR [rax+0x0]
   14000ca57:	nop    WORD PTR [rax+rax*1+0x0]
   14000ca60:	movsd  xmm0,QWORD PTR [r9+0x90]
   14000ca69:	lea    eax,[r8-0x1]
   14000ca6d:	cdq    
   14000ca6e:	sub    eax,edx
   14000ca70:	sar    eax,1
   14000ca72:	movsxd rcx,eax
   14000ca75:	mov    rdx,QWORD PTR [r10+rcx*8]
   14000ca79:	comisd xmm0,QWORD PTR [rdx+0x90]
   14000ca81:	jae    0x14000ca9d
   14000ca83:	mov    QWORD PTR [r10+rcx*8],r9
   14000ca87:	movsxd rcx,r8d
   14000ca8a:	mov    DWORD PTR [r9+0x7c],eax
   14000ca8e:	mov    QWORD PTR [r10+rcx*8],rdx
   14000ca92:	mov    DWORD PTR [rdx+0x7c],r8d
   14000ca96:	mov    r8d,eax
   14000ca99:	test   eax,eax
   14000ca9b:	jg     0x14000ca60
   14000ca9d:	ret    
   14000ca9e:	int3   
   14000ca9f:	int3   
   14000caa0:	mov    QWORD PTR [rsp+0x10],rbx
   14000caa5:	mov    QWORD PTR [rsp+0x18],rbp
   14000caaa:	push   rsi
   14000caab:	push   rdi
   14000caac:	push   r14
   14000caae:	sub    rsp,0x70
   14000cab2:	cmp    BYTE PTR [rip+0x48a00],0x0        # 0x1400554b9
   14000cab9:	mov    esi,edx
   14000cabb:	mov    rbp,rcx
   14000cabe:	je     0x14000cad7
   14000cac0:	call   QWORD PTR [rip+0x3080a]        # 0x14003d2d0
   14000cac6:	lea    rdx,[rip+0x3103b]        # 0x14003db08
   14000cacd:	lea    rcx,[rax+0x60]
   14000cad1:	call   QWORD PTR [rip+0x307e9]        # 0x14003d2c0
   14000cad7:	mov    rcx,QWORD PTR [rbp+0x48]
   14000cadb:	movaps XMMWORD PTR [rsp+0x60],xmm6
   14000cae0:	lea    rdx,[rip+0x3103d]        # 0x14003db24
   14000cae7:	mov    rcx,QWORD PTR [rcx]
   14000caea:	movaps XMMWORD PTR [rsp+0x50],xmm7
   14000caef:	movaps XMMWORD PTR [rsp+0x40],xmm8
   14000caf5:	call   0x140027500
   14000cafa:	lea    rdx,[rip+0x30e83]        # 0x14003d984
   14000cb01:	mov    QWORD PTR [rip+0x48898],rax        # 0x1400553a0
   14000cb08:	mov    rcx,QWORD PTR [rbp+0x48]
   14000cb0c:	mov    rcx,QWORD PTR [rcx]
   14000cb0f:	call   0x140027500
   14000cb14:	lea    rdx,[rip+0x3100d]        # 0x14003db28
   14000cb1b:	mov    rcx,rbp
   14000cb1e:	mov    r14,rax
   14000cb21:	mov    DWORD PTR [rsp+0x90],0x1
   14000cb2c:	call   0x1400275b0
   14000cb31:	xor    ebx,ebx
   14000cb33:	mov    rdi,rax
   14000cb36:	test   rax,rax
   14000cb39:	je     0x14000cc6a
   14000cb3f:	lea    r8,[rsp+0x90]
   14000cb47:	lea    rdx,[rip+0x30a46]        # 0x14003d594
   14000cb4e:	mov    rcx,rax
   14000cb51:	call   QWORD PTR [rip+0x30761]        # 0x14003d2b8
   14000cb57:	cmp    eax,0x1
   14000cb5a:	jge    0x14000cc6a
   14000cb60:	mov    ecx,ebx
   14000cb62:	lea    rdx,[rip+0x30fc7]        # 0x14003db30
   14000cb69:	nop    DWORD PTR [rax+0x0]
   14000cb70:	movzx  eax,BYTE PTR [rdi+rcx*1]
   14000cb74:	inc    rcx
   14000cb77:	cmp    al,BYTE PTR [rdx+rcx*1-0x1]
   14000cb7b:	jne    0x14000cc32
   14000cb81:	cmp    rcx,0x8
   14000cb85:	jne    0x14000cb70
   14000cb87:	mov    rax,QWORD PTR [rbp+0xa8]
   14000cb8e:	movsd  xmm8,QWORD PTR [rip+0x30e81]        # 0x14003da18
   14000cb97:	movd   xmm7,esi
   14000cb9b:	xorps  xmm6,xmm6
   14000cb9e:	mov    rdi,QWORD PTR [rax]
   14000cba1:	cvtdq2pd xmm7,xmm7
   14000cba5:	divsd  xmm8,xmm7
   14000cbaa:	test   rdi,rdi
   14000cbad:	je     0x14000ccc0
   14000cbb3:	nop    DWORD PTR [rax+0x0]
   14000cbb7:	nop    WORD PTR [rax+rax*1+0x0]
   14000cbc0:	mov    r8d,esi
   14000cbc3:	mov    rdx,rdi
   14000cbc6:	mov    rcx,r14
   14000cbc9:	call   0x14000e340
   14000cbce:	test   eax,eax
   14000cbd0:	jne    0x14000cc19
   14000cbd2:	movaps xmm0,xmm6
   14000cbd5:	call   0x14003b87e
   14000cbda:	mov    rax,QWORD PTR [rdi+0x88]
   14000cbe1:	mulsd  xmm0,xmm7
   14000cbe5:	movsd  QWORD PTR [rax],xmm0
   14000cbe9:	movaps xmm0,xmm6
   14000cbec:	call   0x14003b884
   14000cbf1:	mov    rax,QWORD PTR [rdi+0x88]
   14000cbf8:	addsd  xmm6,xmm8
   14000cbfd:	mulsd  xmm0,xmm7
   14000cc01:	movsd  QWORD PTR [rax+0x8],xmm0
   14000cc06:	cmp    DWORD PTR [rip+0x4885f],0x2        # 0x14005546c
   14000cc0d:	jle    0x14000cc19
   14000cc0f:	mov    edx,esi
   14000cc11:	mov    rcx,rdi
   14000cc14:	call   0x14000ccf0
   14000cc19:	mov    rax,QWORD PTR [rbp+0xa8]
   14000cc20:	add    rbx,0x8
   14000cc24:	mov    rdi,QWORD PTR [rbx+rax*1]
   14000cc28:	test   rdi,rdi
   14000cc2b:	jne    0x14000cbc0
   14000cc2d:	jmp    0x14000ccc0
   14000cc32:	xor    ecx,ecx
   14000cc34:	call   QWORD PTR [rip+0x3048e]        # 0x14003d0c8
   14000cc3a:	lea    rdx,[rip+0x30ef7]        # 0x14003db38
   14000cc41:	lea    rcx,[rsp+0x20]
   14000cc46:	mov    r8d,eax
   14000cc49:	mov    DWORD PTR [rsp+0x90],eax
   14000cc50:	call   QWORD PTR [rip+0x3045a]        # 0x14003d0b0
   14000cc56:	lea    r8,[rsp+0x20]
   14000cc5b:	lea    rdx,[rip+0x30ec6]        # 0x14003db28
   14000cc62:	mov    rcx,rbp
   14000cc65:	call   0x1400276d0
   14000cc6a:	mov    ecx,DWORD PTR [rsp+0x90]
   14000cc71:	call   QWORD PTR [rip+0x30449]        # 0x14003d0c0
   14000cc77:	mov    rax,QWORD PTR [rbp+0xa8]
   14000cc7e:	mov    rdi,QWORD PTR [rax]
   14000cc81:	test   rdi,rdi
   14000cc84:	je     0x14000ccc0
   14000cc86:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000cc90:	mov    r8d,esi
   14000cc93:	mov    rdx,rdi
   14000cc96:	mov    rcx,r14
   14000cc99:	call   0x14000e340
   14000cc9e:	test   eax,eax
   14000cca0:	jne    0x14000ccac
   14000cca2:	mov    edx,esi
   14000cca4:	mov    rcx,rdi
   14000cca7:	call   0x14000d4c0
   14000ccac:	mov    rax,QWORD PTR [rbp+0xa8]
   14000ccb3:	add    rbx,0x8
   14000ccb7:	mov    rdi,QWORD PTR [rbx+rax*1]
   14000ccbb:	test   rdi,rdi
   14000ccbe:	jne    0x14000cc90
   14000ccc0:	movaps xmm8,XMMWORD PTR [rsp+0x40]
   14000ccc6:	movaps xmm7,XMMWORD PTR [rsp+0x50]
   14000cccb:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   14000ccd0:	lea    r11,[rsp+0x70]
   14000ccd5:	mov    rbx,QWORD PTR [r11+0x28]
   14000ccd9:	mov    rbp,QWORD PTR [r11+0x30]
   14000ccdd:	mov    rsp,r11
   14000cce0:	pop    r14
   14000cce2:	pop    rdi
   14000cce3:	pop    rsi
   14000cce4:	ret    
   14000cce5:	int3   
   14000cce6:	int3   
   14000cce7:	int3   
   14000cce8:	int3   
   14000cce9:	int3   
   14000ccea:	int3   
   14000cceb:	int3   
   14000ccec:	int3   
   14000cced:	int3   
   14000ccee:	int3   
   14000ccef:	int3   
   14000ccf0:	mov    QWORD PTR [rsp+0x10],rbx
   14000ccf5:	push   rsi
   14000ccf6:	sub    rsp,0x40
   14000ccfa:	mov    ebx,0x2
   14000ccff:	mov    rsi,rcx
   14000cd02:	cmp    DWORD PTR [rip+0x48764],ebx        # 0x14005546c
   14000cd08:	jle    0x14000cd73
   14000cd0a:	mov    QWORD PTR [rsp+0x50],rdi
   14000cd0f:	movaps XMMWORD PTR [rsp+0x30],xmm6
   14000cd14:	movd   xmm6,edx
   14000cd18:	lea    edi,[rbx+0xe]
   14000cd1b:	movaps XMMWORD PTR [rsp+0x20],xmm7
   14000cd20:	cvtdq2pd xmm6,xmm6
   14000cd24:	movsd  xmm7,QWORD PTR [rip+0x30f4c]        # 0x14003dc78
   14000cd2c:	nop    DWORD PTR [rax+0x0]
   14000cd30:	call   QWORD PTR [rip+0x30382]        # 0x14003d0b8
   14000cd36:	movaps xmm0,xmm6
   14000cd39:	inc    ebx
   14000cd3b:	lea    rdi,[rdi+0x8]
   14000cd3f:	movd   xmm1,eax
   14000cd43:	mov    rax,QWORD PTR [rsi+0x88]
   14000cd4a:	cvtdq2pd xmm1,xmm1
   14000cd4e:	divsd  xmm1,xmm7
   14000cd52:	mulsd  xmm0,xmm1
   14000cd56:	movsd  QWORD PTR [rdi+rax*1-0x8],xmm0
   14000cd5c:	cmp    ebx,DWORD PTR [rip+0x4870a]        # 0x14005546c
   14000cd62:	jl     0x14000cd30
   14000cd64:	movaps xmm7,XMMWORD PTR [rsp+0x20]
   14000cd69:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14000cd6e:	mov    rdi,QWORD PTR [rsp+0x50]
   14000cd73:	mov    rbx,QWORD PTR [rsp+0x58]
   14000cd78:	add    rsp,0x40
   14000cd7c:	pop    rsi
   14000cd7d:	ret    
   14000cd7e:	int3   
   14000cd7f:	int3   
   14000cd80:	movsxd r9,DWORD PTR [r8+0x78]
   14000cd84:	mov    r8,QWORD PTR [rcx+0xb8]
   14000cd8b:	movsxd rcx,DWORD PTR [rdx+0x78]
   14000cd8f:	mov    rax,QWORD PTR [r8+r9*8]
   14000cd93:	movsd  QWORD PTR [rax+rcx*8],xmm3
   14000cd98:	mov    rax,QWORD PTR [r8+rcx*8]
   14000cd9c:	movsd  QWORD PTR [rax+r9*8],xmm3
   14000cda2:	ret    
   14000cda3:	int3   
   14000cda4:	int3   
   14000cda5:	int3   
   14000cda6:	int3   
   14000cda7:	int3   
   14000cda8:	int3   
   14000cda9:	int3   
   14000cdaa:	int3   
   14000cdab:	int3   
   14000cdac:	int3   
   14000cdad:	int3   
   14000cdae:	int3   
   14000cdaf:	int3   
   14000cdb0:	mov    rax,rsp
   14000cdb3:	mov    DWORD PTR [rax+0x10],edx
   14000cdb6:	push   rsi
   14000cdb7:	push   r12
   14000cdb9:	push   r13
   14000cdbb:	sub    rsp,0x60
   14000cdbf:	mov    QWORD PTR [rax+0x8],rbx
   14000cdc3:	mov    QWORD PTR [rax+0x18],rbp
   14000cdc7:	mov    QWORD PTR [rax+0x20],rdi
   14000cdcb:	mov    QWORD PTR [rax-0x20],r14
   14000cdcf:	movsxd r14,DWORD PTR [r8+0x78]
   14000cdd3:	mov    QWORD PTR [rax-0x28],r15
   14000cdd7:	mov    eax,DWORD PTR [rip+0x4868f]        # 0x14005546c
   14000cddd:	mov    rbx,rcx
   14000cde0:	mov    rcx,QWORD PTR [rip+0x468a9]        # 0x140053690
   14000cde7:	mov    r13,r8
   14000cdea:	mov    r15d,edx
   14000cded:	imul   eax,eax
   14000cdf0:	test   rcx,rcx
   14000cdf3:	je     0x14000ce04
   14000cdf5:	movsxd rdx,eax
   14000cdf8:	shl    rdx,0x3
   14000cdfc:	call   QWORD PTR [rip+0x302a6]        # 0x14003d0a8
   14000ce02:	jmp    0x14000ce11
   14000ce04:	movsxd rcx,eax
   14000ce07:	shl    rcx,0x3
   14000ce0b:	call   QWORD PTR [rip+0x30357]        # 0x14003d168
   14000ce11:	mov    r9,rax
   14000ce14:	mov    r8d,r14d
   14000ce17:	mov    edx,r15d
   14000ce1a:	mov    rcx,rbx
   14000ce1d:	mov    QWORD PTR [rip+0x4686c],rax        # 0x140053690
   14000ce24:	mov    rdi,rax
   14000ce27:	call   0x14000b8f0
   14000ce2c:	mov    r9d,DWORD PTR [rip+0x48639]        # 0x14005546c
   14000ce33:	xor    esi,esi
   14000ce35:	movsd  xmm1,QWORD PTR [rip+0x30733]        # 0x14003d570
   14000ce3d:	mov    r10d,esi
   14000ce40:	lea    r8,[rip+0x468a9]        # 0x1400536f0
   14000ce47:	cmp    r9d,0x4
   14000ce4b:	jl     0x14000cf1e
   14000ce51:	lea    rax,[rip+0x468a0]        # 0x1400536f8
   14000ce58:	mov    r15d,0x10
   14000ce5e:	mov    r12d,0x18
   14000ce64:	sub    r15,rax
   14000ce67:	sub    r12,rax
   14000ce6a:	lea    eax,[r9-0x4]
   14000ce6e:	shr    eax,0x2
   14000ce71:	mov    r8d,esi
   14000ce74:	lea    r9,[rip+0x46875]        # 0x1400536f0
   14000ce7b:	inc    eax
   14000ce7d:	mov    ebp,eax
   14000ce7f:	lea    r10d,[rax*4+0x0]
   14000ce87:	nop    WORD PTR [rax+rax*1+0x0]
   14000ce90:	mov    rax,QWORD PTR [rbx+0xc8]
   14000ce97:	lea    rdx,[r8+r9*1]
   14000ce9b:	lea    r8,[r8+0x20]
   14000ce9f:	mov    rcx,QWORD PTR [rax+r14*8]
   14000cea3:	movsd  xmm0,QWORD PTR [rcx+r8*1-0x20]
   14000ceaa:	xorps  xmm0,xmm1
   14000cead:	movsd  QWORD PTR [rdx],xmm0
   14000ceb1:	mov    rax,QWORD PTR [rbx+0xc8]
   14000ceb8:	mov    rcx,QWORD PTR [rax+r14*8]
   14000cebc:	movsd  xmm0,QWORD PTR [rcx+r8*1-0x18]
   14000cec3:	xorps  xmm0,xmm1
   14000cec6:	movsd  QWORD PTR [rdx+0x8],xmm0
   14000cecb:	mov    rax,QWORD PTR [rbx+0xc8]
   14000ced2:	mov    rcx,QWORD PTR [rax+r14*8]
   14000ced6:	add    rcx,r15
   14000ced9:	movsd  xmm0,QWORD PTR [rcx+rdx*1+0x8]
   14000cedf:	xorps  xmm0,xmm1
   14000cee2:	movsd  QWORD PTR [rdx+0x10],xmm0
   14000cee7:	mov    rax,QWORD PTR [rbx+0xc8]
   14000ceee:	mov    rcx,QWORD PTR [rax+r14*8]
   14000cef2:	add    rcx,r12
   14000cef5:	movsd  xmm0,QWORD PTR [rcx+rdx*1+0x8]
   14000cefb:	xorps  xmm0,xmm1
   14000cefe:	movsd  QWORD PTR [rdx+0x18],xmm0
   14000cf03:	dec    rbp
   14000cf06:	jne    0x14000ce90
   14000cf08:	mov    r9d,DWORD PTR [rip+0x4855d]        # 0x14005546c
   14000cf0f:	mov    r15d,DWORD PTR [rsp+0x88]
   14000cf17:	lea    r8,[rip+0x467d2]        # 0x1400536f0
   14000cf1e:	cmp    r10d,r9d
   14000cf21:	jge    0x14000cf5b
   14000cf23:	movsxd rax,r10d
   14000cf26:	lea    rdx,[rax*8+0x0]
   14000cf2e:	mov    eax,r9d
   14000cf31:	sub    eax,r10d
   14000cf34:	mov    r10d,eax
   14000cf37:	mov    rax,QWORD PTR [rbx+0xc8]
   14000cf3e:	lea    rdx,[rdx+0x8]
   14000cf42:	mov    rcx,QWORD PTR [rax+r14*8]
   14000cf46:	movsd  xmm0,QWORD PTR [rcx+rdx*1-0x8]
   14000cf4c:	xorps  xmm0,xmm1
   14000cf4f:	movsd  QWORD PTR [rdx+r8*1-0x8],xmm0
   14000cf56:	dec    r10
   14000cf59:	jne    0x14000cf37
   14000cf5b:	lea    r12,[rip+0x4673e]        # 0x1400536a0
   14000cf62:	mov    rcx,rdi
   14000cf65:	movaps XMMWORD PTR [rsp+0x40],xmm6
   14000cf6a:	mov    rdx,r12
   14000cf6d:	call   0x140005c70
   14000cf72:	cmp    DWORD PTR [rip+0x484f4],esi        # 0x14005546c
   14000cf78:	mov    ebp,esi
   14000cf7a:	jle    0x14000d00f
   14000cf80:	movsd  xmm6,QWORD PTR [rip+0x30cf0]        # 0x14003dc78
   14000cf88:	movaps XMMWORD PTR [rsp+0x30],xmm7
   14000cf8d:	movsd  xmm7,QWORD PTR [rip+0x3044b]        # 0x14003d3e0
   14000cf95:	movaps XMMWORD PTR [rsp+0x20],xmm8
   14000cf9b:	mov    rdi,rsi
   14000cf9e:	movsd  xmm8,QWORD PTR [rip+0x30739]        # 0x14003d6e0
   14000cfa7:	call   QWORD PTR [rip+0x3010b]        # 0x14003d0b8
   14000cfad:	movaps xmm2,xmm7
   14000cfb0:	inc    ebp
   14000cfb2:	subsd  xmm2,QWORD PTR [rip+0x4849e]        # 0x140055458
   14000cfba:	add    rdi,0x8
   14000cfbe:	movd   xmm1,eax
   14000cfc2:	mulsd  xmm2,xmm8
   14000cfc7:	cvtdq2pd xmm1,xmm1
   14000cfcb:	divsd  xmm1,xmm6
   14000cfcf:	mulsd  xmm2,xmm1
   14000cfd3:	addsd  xmm2,QWORD PTR [rip+0x4847d]        # 0x140055458
   14000cfdb:	mulsd  xmm2,QWORD PTR [rdi+r12*1-0x8]
   14000cfe2:	movsd  QWORD PTR [rdi+r12*1-0x8],xmm2
   14000cfe9:	mov    rax,QWORD PTR [r13+0x88]
   14000cff0:	addsd  xmm2,QWORD PTR [rdi+rax*1-0x8]
   14000cff6:	movsd  QWORD PTR [rdi+rax*1-0x8],xmm2
   14000cffc:	cmp    ebp,DWORD PTR [rip+0x4846a]        # 0x14005546c
   14000d002:	jl     0x14000cfa7
   14000d004:	movaps xmm8,XMMWORD PTR [rsp+0x20]
   14000d00a:	movaps xmm7,XMMWORD PTR [rsp+0x30]
   14000d00f:	inc    DWORD PTR [rbx+0xb0]
   14000d015:	mov    r8d,r14d
   14000d018:	mov    edx,r15d
   14000d01b:	mov    rcx,rbx
   14000d01e:	call   0x14000e080
   14000d023:	call   0x14001d0d0
   14000d028:	mov    r15,QWORD PTR [rsp+0x50]
   14000d02d:	mov    r14,QWORD PTR [rsp+0x58]
   14000d032:	mov    rdi,QWORD PTR [rsp+0x98]
   14000d03a:	mov    rbp,QWORD PTR [rsp+0x90]
   14000d042:	mov    rbx,QWORD PTR [rsp+0x80]
   14000d04a:	test   eax,eax
   14000d04c:	je     0x14000d11f
   14000d052:	mov    r8d,DWORD PTR [rip+0x48413]        # 0x14005546c
   14000d059:	movsd  xmm3,QWORD PTR [rip+0x304ff]        # 0x14003d560
   14000d061:	xorps  xmm2,xmm2
   14000d064:	cmp    r8d,0x4
   14000d068:	jl     0x14000d0cb
   14000d06a:	lea    eax,[r8-0x4]
   14000d06e:	lea    rcx,[rip+0x46633]        # 0x1400536a8
   14000d075:	shr    eax,0x2
   14000d078:	inc    eax
   14000d07a:	mov    edx,eax
   14000d07c:	lea    esi,[rax*4+0x0]
   14000d083:	nop    DWORD PTR [rax+0x0]
   14000d087:	nop    WORD PTR [rax+rax*1+0x0]
   14000d090:	movsd  xmm1,QWORD PTR [rcx-0x8]
   14000d095:	movsd  xmm0,QWORD PTR [rcx]
   14000d099:	add    rcx,0x20
   14000d09d:	andps  xmm1,xmm3
   14000d0a0:	addsd  xmm1,xmm2
   14000d0a4:	andps  xmm0,xmm3
   14000d0a7:	movaps xmm2,xmm1
   14000d0aa:	movsd  xmm1,QWORD PTR [rcx-0x18]
   14000d0af:	addsd  xmm2,xmm0
   14000d0b3:	movsd  xmm0,QWORD PTR [rcx-0x10]
   14000d0b8:	andps  xmm1,xmm3
   14000d0bb:	andps  xmm0,xmm3
   14000d0be:	addsd  xmm2,xmm1
   14000d0c2:	addsd  xmm2,xmm0
   14000d0c6:	dec    rdx
   14000d0c9:	jne    0x14000d090
   14000d0cb:	cmp    esi,r8d
   14000d0ce:	jge    0x14000d0f1
   14000d0d0:	movsxd rax,esi
   14000d0d3:	sub    r8d,esi
   14000d0d6:	lea    rcx,[r12+rax*8]
   14000d0da:	mov    eax,r8d
   14000d0dd:	movsd  xmm1,QWORD PTR [rcx]
   14000d0e1:	add    rcx,0x8
   14000d0e5:	andps  xmm1,xmm3
   14000d0e8:	addsd  xmm2,xmm1
   14000d0ec:	dec    rax
   14000d0ef:	jne    0x14000d0dd
   14000d0f1:	movaps xmm0,xmm2
   14000d0f4:	call   0x14003b8ae
   14000d0f9:	movaps xmm6,xmm0
   14000d0fc:	call   QWORD PTR [rip+0x301ce]        # 0x14003d2d0
   14000d102:	mov    r8,QWORD PTR [r13+0x10]
   14000d106:	movaps xmm3,xmm6
   14000d109:	lea    rdx,[rip+0x30a70]        # 0x14003db80
   14000d110:	lea    rcx,[rax+0x60]
   14000d114:	movq   r9,xmm3
   14000d119:	call   QWORD PTR [rip+0x301a1]        # 0x14003d2c0
   14000d11f:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   14000d124:	add    rsp,0x60
   14000d128:	pop    r13
   14000d12a:	pop    r12
   14000d12c:	pop    rsi
   14000d12d:	ret    
   14000d12e:	int3   
   14000d12f:	int3   
   14000d130:	sub    rsp,0x28
   14000d134:	mov    eax,DWORD PTR [rip+0x4654a]        # 0x140053684
   14000d13a:	test   eax,eax
   14000d13c:	jne    0x14000d145
   14000d13e:	xor    eax,eax
   14000d140:	add    rsp,0x28
   14000d144:	ret    
   14000d145:	mov    rdx,QWORD PTR [rip+0x4654c]        # 0x140053698
   14000d14c:	dec    eax
   14000d14e:	mov    QWORD PTR [rsp+0x20],rbx
   14000d153:	mov    rbx,QWORD PTR [rdx]
   14000d156:	movsxd rcx,eax
   14000d159:	mov    DWORD PTR [rip+0x46525],eax        # 0x140053684
   14000d15f:	mov    rcx,QWORD PTR [rdx+rcx*8]
   14000d163:	mov    QWORD PTR [rdx],rcx
   14000d166:	mov    DWORD PTR [rcx+0x7c],0x0
   14000d16d:	cmp    eax,0x1
   14000d170:	jle    0x14000d177
   14000d172:	call   0x14000c980
   14000d177:	mov    DWORD PTR [rbx+0x7c],0xffffffff
   14000d17e:	mov    rax,rbx
   14000d181:	mov    rbx,QWORD PTR [rsp+0x20]
   14000d186:	add    rsp,0x28
   14000d18a:	ret    
   14000d18b:	int3   
   14000d18c:	int3   
   14000d18d:	int3   
   14000d18e:	int3   
   14000d18f:	int3   
   14000d190:	rex push rbx
   14000d192:	sub    rsp,0x20
   14000d196:	cmp    DWORD PTR [rcx+0x7c],0x0
   14000d19a:	mov    rbx,rcx
   14000d19d:	jl     0x14000d1b9
   14000d19f:	lea    rdx,[rip+0x309ea]        # 0x14003db90
   14000d1a6:	lea    rcx,[rip+0x30a5b]        # 0x14003dc08
   14000d1ad:	mov    r8d,0x221
   14000d1b3:	call   QWORD PTR [rip+0x2fed7]        # 0x14003d090
   14000d1b9:	movsxd rax,DWORD PTR [rip+0x464c4]        # 0x140053684
   14000d1c0:	mov    rdx,rax
   14000d1c3:	inc    eax
   14000d1c5:	mov    DWORD PTR [rip+0x464b9],eax        # 0x140053684
   14000d1cb:	mov    rax,QWORD PTR [rip+0x464c6]        # 0x140053698
   14000d1d2:	mov    DWORD PTR [rbx+0x7c],edx
   14000d1d5:	mov    QWORD PTR [rax+rdx*8],rbx
   14000d1d9:	test   edx,edx
   14000d1db:	jle    0x14000d1ea
   14000d1dd:	mov    rcx,rbx
   14000d1e0:	add    rsp,0x20
   14000d1e4:	pop    rbx
   14000d1e5:	jmp    0x14000ca40
   14000d1ea:	add    rsp,0x20
   14000d1ee:	pop    rbx
   14000d1ef:	ret    
   14000d1f0:	movsd  QWORD PTR [rsp+0x20],xmm3
   14000d1f6:	push   rbx
   14000d1f7:	push   rdi
   14000d1f8:	push   r13
   14000d1fa:	push   r14
   14000d1fc:	push   r15
   14000d1fe:	sub    rsp,0x40
   14000d202:	movsxd rdi,ecx
   14000d205:	movsxd r15,r8d
   14000d208:	movsxd rbx,edx
   14000d20b:	lea    eax,[rdi+0x1]
   14000d20e:	movsxd rcx,eax
   14000d211:	shl    rcx,0x3
   14000d215:	call   0x14001d2c0
   14000d21a:	mov    r14,rbx
   14000d21d:	mov    r13,rdi
   14000d220:	mov    rdx,rax
   14000d223:	mov    QWORD PTR [rsp+0x28],rax
   14000d228:	xor    eax,eax
   14000d22a:	test   edi,edi
   14000d22c:	jle    0x14000d2e1
   14000d232:	mov    QWORD PTR [rsp+0x78],rbp
   14000d237:	mov    QWORD PTR [rsp+0x38],rsi
   14000d23c:	lea    eax,[rbx+0x1]
   14000d23f:	cdqe   
   14000d241:	mov    QWORD PTR [rsp+0x30],r12
   14000d246:	mov    r12,QWORD PTR [rsp+0x88]
   14000d24e:	shl    rax,0x3
   14000d252:	mov    rsi,rdx
   14000d255:	mov    DWORD PTR [rsp+0x70],edi
   14000d259:	mov    QWORD PTR [rsp+0x20],rax
   14000d25e:	xchg   ax,ax
   14000d260:	mov    rcx,rax
   14000d263:	call   0x14001d2c0
   14000d268:	xor    ebx,ebx
   14000d26a:	mov    QWORD PTR [rsi],rax
   14000d26d:	test   r14,r14
   14000d270:	jle    0x14000d2b0
   14000d272:	mov    rbp,r15
   14000d275:	shl    rbp,0x3
   14000d279:	nop    DWORD PTR [rax+0x0]
   14000d280:	mov    rcx,rbp
   14000d283:	call   0x14001d2c0
   14000d288:	mov    rcx,QWORD PTR [rsi]
   14000d28b:	mov    QWORD PTR [rcx+rbx*8],rax
   14000d28f:	test   r15d,r15d
   14000d292:	jle    0x14000d2a8
   14000d294:	mov    rdi,QWORD PTR [rsi]
   14000d297:	mov    rcx,rbp
   14000d29a:	mov    rax,r12
   14000d29d:	mov    rdi,QWORD PTR [rdi+rbx*8]
   14000d2a1:	shr    rcx,0x3
   14000d2a5:	rep stos QWORD PTR es:[rdi],rax
   14000d2a8:	inc    rbx
   14000d2ab:	cmp    rbx,r14
   14000d2ae:	jl     0x14000d280
   14000d2b0:	mov    rax,QWORD PTR [rsi]
   14000d2b3:	add    rsi,0x8
   14000d2b7:	mov    QWORD PTR [rax+rbx*8],0x0
   14000d2bf:	mov    rax,QWORD PTR [rsp+0x20]
   14000d2c4:	dec    r13
   14000d2c7:	jne    0x14000d260
   14000d2c9:	mov    rdx,QWORD PTR [rsp+0x28]
   14000d2ce:	mov    eax,DWORD PTR [rsp+0x70]
   14000d2d2:	mov    r12,QWORD PTR [rsp+0x30]
   14000d2d7:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d2dc:	mov    rbp,QWORD PTR [rsp+0x78]
   14000d2e1:	cdqe   
   14000d2e3:	mov    QWORD PTR [rdx+rax*8],0x0
   14000d2eb:	mov    rax,rdx
   14000d2ee:	add    rsp,0x40
   14000d2f2:	pop    r15
   14000d2f4:	pop    r14
   14000d2f6:	pop    r13
   14000d2f8:	pop    rdi
   14000d2f9:	pop    rbx
   14000d2fa:	ret    
   14000d2fb:	int3   
   14000d2fc:	int3   
   14000d2fd:	int3   
   14000d2fe:	int3   
   14000d2ff:	int3   
   14000d300:	mov    QWORD PTR [rsp+0x8],rbx
   14000d305:	mov    QWORD PTR [rsp+0x10],rbp
   14000d30a:	mov    QWORD PTR [rsp+0x20],rsi
   14000d30f:	movsd  QWORD PTR [rsp+0x18],xmm2
   14000d315:	push   rdi
   14000d316:	sub    rsp,0x20
   14000d31a:	movsxd rdi,ecx
   14000d31d:	movsxd rsi,edx
   14000d320:	lea    rcx,[rdi*8+0x0]
   14000d328:	mov    rbp,rdi
   14000d32b:	call   0x14001d2c0
   14000d330:	mov    rbx,rax
   14000d333:	imul   edi,esi
   14000d336:	movsxd rcx,edi
   14000d339:	shl    rcx,0x3
   14000d33d:	call   0x14001d2c0
   14000d342:	xor    r8d,r8d
   14000d345:	mov    r9,rax
   14000d348:	test   rbp,rbp
   14000d34b:	jle    0x14000d381
   14000d34d:	mov    rax,QWORD PTR [rsp+0x40]
   14000d352:	mov    rdx,rsi
   14000d355:	shl    rdx,0x3
   14000d359:	nop    DWORD PTR [rax+0x0]
   14000d360:	mov    QWORD PTR [rbx+r8*8],r9
   14000d364:	add    r9,rdx
   14000d367:	test   esi,esi
   14000d369:	jle    0x14000d379
   14000d36b:	mov    rdi,QWORD PTR [rbx+r8*8]
   14000d36f:	mov    rcx,rdx
   14000d372:	shr    rcx,0x3
   14000d376:	rep stos QWORD PTR es:[rdi],rax
   14000d379:	inc    r8
   14000d37c:	cmp    r8,rbp
   14000d37f:	jl     0x14000d360
   14000d381:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d386:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d38b:	mov    rax,rbx
   14000d38e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d393:	add    rsp,0x20
   14000d397:	pop    rdi
   14000d398:	ret    
   14000d399:	int3   
   14000d39a:	int3   
   14000d39b:	int3   
   14000d39c:	int3   
   14000d39d:	int3   
   14000d39e:	int3   
   14000d39f:	int3   
   14000d3a0:	rex push rbx
   14000d3a2:	push   rbp
   14000d3a3:	push   r14
   14000d3a5:	sub    rsp,0x20
   14000d3a9:	mov    r14,r8
   14000d3ac:	mov    rbx,rdx
   14000d3af:	mov    rbp,rcx
   14000d3b2:	test   rdx,rdx
   14000d3b5:	je     0x14000d4a8
   14000d3bb:	mov    QWORD PTR [rsp+0x40],rsi
   14000d3c0:	mov    QWORD PTR [rsp+0x50],rdi
   14000d3c5:	mov    QWORD PTR [rsp+0x58],r15
   14000d3ca:	mov    r15,QWORD PTR [rsp+0x48]
   14000d3cf:	nop
   14000d3d0:	mov    rdx,rbx
   14000d3d3:	mov    rcx,rbp
   14000d3d6:	xor    esi,esi
   14000d3d8:	xor    edi,edi
   14000d3da:	call   0x14002b780
   14000d3df:	test   rax,rax
   14000d3e2:	je     0x14000d46f
   14000d3e8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d3f0:	mov    rdx,QWORD PTR [rax+0x10]
   14000d3f4:	mov    rcx,QWORD PTR [rax+0x18]
   14000d3f8:	cmp    rdx,rcx
   14000d3fb:	je     0x14000d427
   14000d3fd:	cmp    esi,0x1
   14000d400:	jne    0x14000d418
   14000d402:	cmp    rcx,rbx
   14000d405:	jne    0x14000d40c
   14000d407:	cmp    rdx,rdi
   14000d40a:	je     0x14000d427
   14000d40c:	cmp    rcx,rdi
   14000d40f:	jne    0x14000d48d
   14000d411:	cmp    rdx,rbx
   14000d414:	jne    0x14000d48d
   14000d416:	jmp    0x14000d427
   14000d418:	cmp    rcx,rbx
   14000d41b:	mov    rdi,rcx
   14000d41e:	cmove  rdi,rdx
   14000d422:	inc    esi
   14000d424:	mov    r15,rdi
   14000d427:	mov    r8,rbx
   14000d42a:	mov    rdx,rax
   14000d42d:	mov    rcx,rbp
   14000d430:	call   0x14002b890
   14000d435:	test   rax,rax
   14000d438:	jne    0x14000d3f0
   14000d43a:	test   esi,esi
   14000d43c:	je     0x14000d46f
   14000d43e:	cmp    esi,0x1
   14000d441:	jne    0x14000d48d
   14000d443:	cmp    r14,rbx
   14000d446:	jne    0x14000d456
   14000d448:	mov    rdx,rbx
   14000d44b:	mov    rcx,rbp
   14000d44e:	call   0x14002a5e0
   14000d453:	mov    r14,rax
   14000d456:	mov    rdx,rbx
   14000d459:	mov    rcx,rbp
   14000d45c:	call   0x14002ad00
   14000d461:	mov    rbx,r15
   14000d464:	test   r15,r15
   14000d467:	jne    0x14000d3d0
   14000d46d:	jmp    0x14000d48d
   14000d46f:	cmp    r14,rbx
   14000d472:	jne    0x14000d482
   14000d474:	mov    rdx,rbx
   14000d477:	mov    rcx,rbp
   14000d47a:	call   0x14002a5e0
   14000d47f:	mov    r14,rax
   14000d482:	mov    rdx,rbx
   14000d485:	mov    rcx,rbp
   14000d488:	call   0x14002ad00
   14000d48d:	mov    rdi,QWORD PTR [rsp+0x50]
   14000d492:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d497:	mov    r15,QWORD PTR [rsp+0x58]
   14000d49c:	mov    rax,r14
   14000d49f:	add    rsp,0x20
   14000d4a3:	pop    r14
   14000d4a5:	pop    rbp
   14000d4a6:	pop    rbx
   14000d4a7:	ret    
   14000d4a8:	mov    rax,r8
   14000d4ab:	add    rsp,0x20
   14000d4af:	pop    r14
   14000d4b1:	pop    rbp
   14000d4b2:	pop    rbx
   14000d4b3:	ret    
   14000d4b4:	int3   
   14000d4b5:	int3   
   14000d4b6:	int3   
   14000d4b7:	int3   
   14000d4b8:	int3   
   14000d4b9:	int3   
   14000d4ba:	int3   
   14000d4bb:	int3   
   14000d4bc:	int3   
   14000d4bd:	int3   
   14000d4be:	int3   
   14000d4bf:	int3   
   14000d4c0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d4c5:	push   rdi
   14000d4c6:	sub    rsp,0x30
   14000d4ca:	movaps XMMWORD PTR [rsp+0x20],xmm7
   14000d4cf:	mov    edi,edx
   14000d4d1:	mov    rbx,rcx
   14000d4d4:	call   QWORD PTR [rip+0x2fbde]        # 0x14003d0b8
   14000d4da:	movd   xmm7,edi
   14000d4de:	movd   xmm1,eax
   14000d4e2:	mov    rax,QWORD PTR [rbx+0x88]
   14000d4e9:	cvtdq2pd xmm7,xmm7
   14000d4ed:	movaps xmm0,xmm7
   14000d4f0:	cvtdq2pd xmm1,xmm1
   14000d4f4:	divsd  xmm1,QWORD PTR [rip+0x3077c]        # 0x14003dc78
   14000d4fc:	mulsd  xmm0,xmm1
   14000d500:	movsd  QWORD PTR [rax],xmm0
   14000d504:	call   QWORD PTR [rip+0x2fbae]        # 0x14003d0b8
   14000d50a:	movd   xmm0,eax
   14000d50e:	mov    rax,QWORD PTR [rbx+0x88]
   14000d515:	cvtdq2pd xmm0,xmm0
   14000d519:	divsd  xmm0,QWORD PTR [rip+0x30757]        # 0x14003dc78
   14000d521:	mulsd  xmm7,xmm0
   14000d525:	movsd  QWORD PTR [rax+0x8],xmm7
   14000d52a:	cmp    DWORD PTR [rip+0x47f3b],0x2        # 0x14005546c
   14000d531:	jle    0x14000d53d
   14000d533:	mov    edx,edi
   14000d535:	mov    rcx,rbx
   14000d538:	call   0x14000ccf0
   14000d53d:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d542:	movaps xmm7,XMMWORD PTR [rsp+0x20]
   14000d547:	add    rsp,0x30
   14000d54b:	pop    rdi
   14000d54c:	ret    
   14000d54d:	int3   
   14000d54e:	int3   
   14000d54f:	int3   
   14000d550:	mov    QWORD PTR [rsp+0x8],rbx
   14000d555:	mov    QWORD PTR [rsp+0x10],rsi
   14000d55a:	push   rdi
   14000d55b:	sub    rsp,0x20
   14000d55f:	mov    rax,QWORD PTR [rcx+0xa8]
   14000d566:	mov    rbx,rdx
   14000d569:	mov    rdi,rcx
   14000d56c:	mov    r8,QWORD PTR [rax]
   14000d56f:	test   r8,r8
   14000d572:	je     0x14000d591
   14000d574:	movsd  xmm0,QWORD PTR [rip+0x47ee4]        # 0x140055460
   14000d57c:	lea    rax,[rax+0x8]
   14000d580:	movsd  QWORD PTR [r8+0x90],xmm0
   14000d589:	mov    r8,QWORD PTR [rax]
   14000d58c:	test   r8,r8
   14000d58f:	jne    0x14000d574
   14000d591:	xor    esi,esi
   14000d593:	mov    QWORD PTR [rip+0x461a6],rdx        # 0x140053740
   14000d59a:	mov    QWORD PTR [rdx+0x90],rsi
   14000d5a1:	mov    DWORD PTR [rdx+0x80],esi
   14000d5a7:	cmp    DWORD PTR [rdx+0x7c],esi
   14000d5aa:	jl     0x14000d5c6
   14000d5ac:	lea    rdx,[rip+0x305dd]        # 0x14003db90
   14000d5b3:	lea    rcx,[rip+0x3064e]        # 0x14003dc08
   14000d5ba:	mov    r8d,0x221
   14000d5c0:	call   QWORD PTR [rip+0x2faca]        # 0x14003d090
   14000d5c6:	movsxd r8,DWORD PTR [rip+0x460b7]        # 0x140053684
   14000d5cd:	mov    r9,QWORD PTR [rip+0x460c4]        # 0x140053698
   14000d5d4:	mov    rcx,r8
   14000d5d7:	inc    r8d
   14000d5da:	mov    DWORD PTR [rbx+0x7c],ecx
   14000d5dd:	mov    DWORD PTR [rip+0x460a0],r8d        # 0x140053684
   14000d5e4:	mov    QWORD PTR [r9+rcx*8],rbx
   14000d5e8:	test   ecx,ecx
   14000d5ea:	jle    0x14000d640
   14000d5ec:	mov    r10d,DWORD PTR [rbx+0x7c]
   14000d5f0:	test   r10d,r10d
   14000d5f3:	jle    0x14000d640
   14000d5f5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000d600:	movsd  xmm0,QWORD PTR [rbx+0x90]
   14000d608:	lea    eax,[r10-0x1]
   14000d60c:	cdq    
   14000d60d:	sub    eax,edx
   14000d60f:	sar    eax,1
   14000d611:	movsxd rcx,eax
   14000d614:	mov    rdx,QWORD PTR [r9+rcx*8]
   14000d618:	comisd xmm0,QWORD PTR [rdx+0x90]
   14000d620:	jae    0x14000d640
   14000d622:	mov    QWORD PTR [r9+rcx*8],rbx
   14000d626:	movsxd rcx,r10d
   14000d629:	mov    DWORD PTR [rbx+0x7c],eax
   14000d62c:	mov    QWORD PTR [r9+rcx*8],rdx
   14000d630:	mov    DWORD PTR [rdx+0x7c],r10d
   14000d634:	mov    r10d,eax
   14000d637:	test   eax,eax
   14000d639:	jg     0x14000d600
   14000d63b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d640:	test   r8d,r8d
   14000d643:	je     0x14000d7fa
   14000d649:	mov    rbx,QWORD PTR [r9]
   14000d64c:	dec    r8d
   14000d64f:	movsxd rax,r8d
   14000d652:	mov    DWORD PTR [rip+0x4602b],r8d        # 0x140053684
   14000d659:	mov    rcx,QWORD PTR [r9+rax*8]
   14000d65d:	mov    QWORD PTR [r9],rcx
   14000d660:	mov    DWORD PTR [rcx+0x7c],esi
   14000d663:	cmp    r8d,0x1
   14000d667:	jle    0x14000d66e
   14000d669:	call   0x14000c980
   14000d66e:	mov    rax,QWORD PTR [rip+0x460cb]        # 0x140053740
   14000d675:	mov    DWORD PTR [rbx+0x7c],0xffffffff
   14000d67c:	cmp    rbx,rax
   14000d67f:	je     0x14000d6ab
   14000d681:	movsxd rcx,DWORD PTR [rax+0x78]
   14000d685:	movsxd r8,DWORD PTR [rbx+0x78]
   14000d689:	mov    rdx,QWORD PTR [rdi+0xb8]
   14000d690:	movsd  xmm0,QWORD PTR [rbx+0x90]
   14000d698:	mov    rax,QWORD PTR [rdx+r8*8]
   14000d69c:	movsd  QWORD PTR [rax+rcx*8],xmm0
   14000d6a1:	mov    rax,QWORD PTR [rdx+rcx*8]
   14000d6a5:	movsd  QWORD PTR [rax+r8*8],xmm0
   14000d6ab:	mov    rdx,rbx
   14000d6ae:	mov    rcx,rdi
   14000d6b1:	call   0x14002b780
   14000d6b6:	jmp    0x14000d7db
   14000d6bb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d6c0:	mov    r8,QWORD PTR [r11+0x10]
   14000d6c4:	cmp    r8,rbx
   14000d6c7:	jne    0x14000d6cd
   14000d6c9:	mov    r8,QWORD PTR [r11+0x18]
   14000d6cd:	movsd  xmm1,QWORD PTR [r11+0x90]
   14000d6d6:	movsd  xmm0,QWORD PTR [r8+0x90]
   14000d6df:	addsd  xmm1,QWORD PTR [rbx+0x90]
   14000d6e7:	comisd xmm0,xmm1
   14000d6eb:	jbe    0x14000d7cd
   14000d6f1:	mov    r9d,DWORD PTR [r8+0x7c]
   14000d6f5:	movsd  QWORD PTR [r8+0x90],xmm1
   14000d6fe:	test   r9d,r9d
   14000d701:	js     0x14000d753
   14000d703:	jle    0x14000d7cd
   14000d709:	mov    r10,QWORD PTR [rip+0x45f88]        # 0x140053698
   14000d710:	movsd  xmm0,QWORD PTR [r8+0x90]
   14000d719:	lea    eax,[r9-0x1]
   14000d71d:	cdq    
   14000d71e:	sub    eax,edx
   14000d720:	sar    eax,1
   14000d722:	movsxd rcx,eax
   14000d725:	mov    rdx,QWORD PTR [r10+rcx*8]
   14000d729:	comisd xmm0,QWORD PTR [rdx+0x90]
   14000d731:	jae    0x14000d7cd
   14000d737:	mov    QWORD PTR [r10+rcx*8],r8
   14000d73b:	movsxd rcx,r9d
   14000d73e:	mov    DWORD PTR [r8+0x7c],eax
   14000d742:	mov    QWORD PTR [r10+rcx*8],rdx
   14000d746:	mov    DWORD PTR [rdx+0x7c],r9d
   14000d74a:	mov    r9d,eax
   14000d74d:	test   eax,eax
   14000d74f:	jg     0x14000d710
   14000d751:	jmp    0x14000d7cd
   14000d753:	mov    eax,DWORD PTR [rbx+0x80]
   14000d759:	mov    r10,QWORD PTR [rip+0x45f38]        # 0x140053698
   14000d760:	inc    eax
   14000d762:	mov    DWORD PTR [r8+0x80],eax
   14000d769:	movsxd rax,DWORD PTR [rip+0x45f14]        # 0x140053684
   14000d770:	mov    rcx,rax
   14000d773:	inc    eax
   14000d775:	mov    DWORD PTR [r8+0x7c],ecx
   14000d779:	mov    DWORD PTR [rip+0x45f05],eax        # 0x140053684
   14000d77f:	mov    QWORD PTR [r10+rcx*8],r8
   14000d783:	test   ecx,ecx
   14000d785:	jle    0x14000d7cd
   14000d787:	mov    r9d,DWORD PTR [r8+0x7c]
   14000d78b:	test   r9d,r9d
   14000d78e:	jle    0x14000d7cd
   14000d790:	movsd  xmm0,QWORD PTR [r8+0x90]
   14000d799:	lea    eax,[r9-0x1]
   14000d79d:	cdq    
   14000d79e:	sub    eax,edx
   14000d7a0:	sar    eax,1
   14000d7a2:	movsxd rcx,eax
   14000d7a5:	mov    rdx,QWORD PTR [r10+rcx*8]
   14000d7a9:	comisd xmm0,QWORD PTR [rdx+0x90]
   14000d7b1:	jae    0x14000d7cd
   14000d7b3:	mov    QWORD PTR [r10+rcx*8],r8
   14000d7b7:	movsxd rcx,r9d
   14000d7ba:	mov    DWORD PTR [r8+0x7c],eax
   14000d7be:	mov    QWORD PTR [r10+rcx*8],rdx
   14000d7c2:	mov    DWORD PTR [rdx+0x7c],r9d
   14000d7c6:	mov    r9d,eax
   14000d7c9:	test   eax,eax
   14000d7cb:	jg     0x14000d790
   14000d7cd:	mov    r8,rbx
   14000d7d0:	mov    rdx,r11
   14000d7d3:	mov    rcx,rdi
   14000d7d6:	call   0x14002b890
   14000d7db:	mov    r11,rax
   14000d7de:	test   rax,rax
   14000d7e1:	jne    0x14000d6c0
   14000d7e7:	mov    r8d,DWORD PTR [rip+0x45e96]        # 0x140053684
   14000d7ee:	mov    r9,QWORD PTR [rip+0x45ea3]        # 0x140053698
   14000d7f5:	jmp    0x14000d640
   14000d7fa:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d7ff:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d804:	add    rsp,0x20
   14000d808:	pop    rdi
   14000d809:	ret    
   14000d80a:	int3   
   14000d80b:	int3   
   14000d80c:	int3   
   14000d80d:	int3   
   14000d80e:	int3   
   14000d80f:	int3   
   14000d810:	rex push rbx
   14000d812:	push   rbp
   14000d813:	push   rsi
   14000d814:	push   rdi
   14000d815:	push   r12
   14000d817:	push   r13
   14000d819:	push   r15
   14000d81b:	sub    rsp,0x60
   14000d81f:	cmp    BYTE PTR [rip+0x47c93],0x0        # 0x1400554b9
   14000d826:	movaps XMMWORD PTR [rsp+0x20],xmm9
   14000d82c:	xorps  xmm9,xmm9
   14000d830:	movaps XMMWORD PTR [rsp+0x40],xmm7
   14000d835:	movaps XMMWORD PTR [rsp+0x30],xmm8
   14000d83b:	mov    rbp,rcx
   14000d83e:	movaps xmm8,xmm9
   14000d842:	je     0x14000d85f
   14000d844:	call   QWORD PTR [rip+0x2fa86]        # 0x14003d2d0
   14000d84a:	mov    r8,QWORD PTR [rbp+0x10]
   14000d84e:	lea    rdx,[rip+0x3021b]        # 0x14003da70
   14000d855:	lea    rcx,[rax+0x60]
   14000d859:	call   QWORD PTR [rip+0x2fa61]        # 0x14003d2c0
   14000d85f:	xor    r12d,r12d
   14000d862:	mov    QWORD PTR [rsp+0xb0],r14
   14000d86a:	cmp    BYTE PTR [rip+0x47c47],r12b        # 0x1400554b8
   14000d871:	je     0x14000d948
   14000d877:	mov    rcx,rbp
   14000d87a:	call   0x14002a4e0
   14000d87f:	mov    rbx,rax
   14000d882:	test   rax,rax
   14000d885:	je     0x14000d948
   14000d88b:	mov    r15,QWORD PTR [rsp+0xa0]
   14000d893:	mov    rdx,rbx
   14000d896:	mov    rcx,rbp
   14000d899:	call   0x14002a5e0
   14000d89e:	mov    rdx,rbx
   14000d8a1:	mov    rcx,rbp
   14000d8a4:	mov    esi,r12d
   14000d8a7:	mov    rdi,r12
   14000d8aa:	mov    r14,rax
   14000d8ad:	call   0x14002b780
   14000d8b2:	test   rax,rax
   14000d8b5:	je     0x14000d931
   14000d8bb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d8c0:	mov    rdx,QWORD PTR [rax+0x10]
   14000d8c4:	mov    rcx,QWORD PTR [rax+0x18]
   14000d8c8:	cmp    rdx,rcx
   14000d8cb:	je     0x14000d8f7
   14000d8cd:	cmp    esi,0x1
   14000d8d0:	jne    0x14000d8e8
   14000d8d2:	cmp    rcx,rbx
   14000d8d5:	jne    0x14000d8dc
   14000d8d7:	cmp    rdx,rdi
   14000d8da:	je     0x14000d8f7
   14000d8dc:	cmp    rcx,rdi
   14000d8df:	jne    0x14000d93c
   14000d8e1:	cmp    rdx,rbx
   14000d8e4:	jne    0x14000d93c
   14000d8e6:	jmp    0x14000d8f7
   14000d8e8:	cmp    rcx,rbx
   14000d8eb:	mov    rdi,rcx
   14000d8ee:	cmove  rdi,rdx
   14000d8f2:	inc    esi
   14000d8f4:	mov    r15,rdi
   14000d8f7:	mov    r8,rbx
   14000d8fa:	mov    rdx,rax
   14000d8fd:	mov    rcx,rbp
   14000d900:	call   0x14002b890
   14000d905:	test   rax,rax
   14000d908:	jne    0x14000d8c0
   14000d90a:	test   esi,esi
   14000d90c:	je     0x14000d931
   14000d90e:	cmp    esi,0x1
   14000d911:	jne    0x14000d93c
   14000d913:	mov    rdx,rbx
   14000d916:	mov    rcx,rbp
   14000d919:	call   0x14002ad00
   14000d91e:	mov    r8,r14
   14000d921:	mov    rdx,r15
   14000d924:	mov    rcx,rbp
   14000d927:	call   0x14000d3a0
   14000d92c:	mov    r14,rax
   14000d92f:	jmp    0x14000d93c
   14000d931:	mov    rdx,rbx
   14000d934:	mov    rcx,rbp
   14000d937:	call   0x14002ad00
   14000d93c:	mov    rbx,r14
   14000d93f:	test   r14,r14
   14000d942:	jne    0x14000d893
   14000d948:	mov    rcx,rbp
   14000d94b:	call   0x14002aef0
   14000d950:	mov    rcx,rbp
   14000d953:	movsxd r13,eax
   14000d956:	call   0x14002ae00
   14000d95b:	mov    rcx,QWORD PTR [rbp+0x38]
   14000d95f:	lea    rdx,[rip+0x30122]        # 0x14003da88
   14000d966:	mov    edi,eax
   14000d968:	mov    DWORD PTR [rsp+0xa0],eax
   14000d96f:	call   0x1400275b0
   14000d974:	test   rax,rax
   14000d977:	je     0x14000d98a
   14000d979:	mov    rcx,rax
   14000d97c:	call   QWORD PTR [rip+0x2f706]        # 0x14003d088
   14000d982:	mov    DWORD PTR [rip+0x47ae8],eax        # 0x140055470
   14000d988:	jmp    0x14000d994
   14000d98a:	mov    DWORD PTR [rip+0x47adc],0x7fffffff        # 0x140055470
   14000d994:	mov    rcx,QWORD PTR [rbp+0x38]
   14000d998:	lea    rdx,[rip+0x300f1]        # 0x14003da90
   14000d99f:	call   0x1400275b0
   14000d9a4:	test   rax,rax
   14000d9a7:	je     0x14000d9b4
   14000d9a9:	mov    rcx,rax
   14000d9ac:	call   QWORD PTR [rip+0x2f68e]        # 0x14003d040
   14000d9b2:	jmp    0x14000d9bc
   14000d9b4:	movsd  xmm0,QWORD PTR [rip+0x302b4]        # 0x14003dc70
   14000d9bc:	movsd  QWORD PTR [rip+0x47a94],xmm0        # 0x140055458
   14000d9c4:	mov    rax,QWORD PTR [rbp+0x38]
   14000d9c8:	lea    rdx,[rip+0x300c9]        # 0x14003da98
   14000d9cf:	mov    rcx,QWORD PTR [rax+0x48]
   14000d9d3:	mov    rcx,QWORD PTR [rcx+0x8]
   14000d9d7:	call   0x1400275f0
   14000d9dc:	lea    ecx,[r13+0x1]
   14000d9e0:	movsxd rcx,ecx
   14000d9e3:	mov    ebx,eax
   14000d9e5:	shl    rcx,0x3
   14000d9e9:	call   0x14001d2c0
   14000d9ee:	mov    rcx,rbp
   14000d9f1:	mov    r15d,r12d
   14000d9f4:	mov    QWORD PTR [rbp+0xa8],rax
   14000d9fb:	call   0x14002a4e0
   14000da00:	movsd  xmm7,QWORD PTR [rip+0x2f9d8]        # 0x14003d3e0
   14000da08:	mov    rsi,rax
   14000da0b:	test   rax,rax
   14000da0e:	je     0x14000db2c
   14000da14:	movaps XMMWORD PTR [rsp+0x50],xmm6
   14000da19:	mov    r14,r12
   14000da1c:	nop    DWORD PTR [rax+0x0]
   14000da20:	mov    rcx,QWORD PTR [rbp+0xa8]
   14000da27:	mov    rdx,rsi
   14000da2a:	lea    r14,[r14+0x8]
   14000da2e:	mov    QWORD PTR [r14+rcx*1-0x8],rsi
   14000da33:	mov    DWORD PTR [rsi+0x78],r15d
   14000da37:	mov    rcx,rbp
   14000da3a:	inc    r15d
   14000da3d:	mov    DWORD PTR [rsi+0x7c],0xffffffff
   14000da44:	call   0x14002b830
   14000da49:	mov    rdi,rax
   14000da4c:	test   rax,rax
   14000da4f:	je     0x14000db09
   14000da55:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000da60:	lea    rdx,[rip+0x2f99d]        # 0x14003d404
   14000da67:	mov    rcx,rdi
   14000da6a:	call   0x1400275b0
   14000da6f:	test   rax,rax
   14000da72:	je     0x14000da84
   14000da74:	cmp    BYTE PTR [rax],r12b
   14000da77:	je     0x14000da84
   14000da79:	mov    rax,QWORD PTR [rbp+0x38]
   14000da7d:	mov    BYTE PTR [rax+0x91],0x1
   14000da84:	test   ebx,ebx
   14000da86:	js     0x14000dae2
   14000da88:	mov    edx,ebx
   14000da8a:	mov    rcx,rdi
   14000da8d:	call   0x140027720
   14000da92:	lea    r8,[rsp+0xa8]
   14000da9a:	lea    rdx,[rip+0x2f8ff]        # 0x14003d3a0
   14000daa1:	mov    rcx,rax
   14000daa4:	call   QWORD PTR [rip+0x2f80e]        # 0x14003d2b8
   14000daaa:	cmp    eax,0x1
   14000daad:	jl     0x14000dae2
   14000daaf:	movsd  xmm6,QWORD PTR [rsp+0xa8]
   14000dab8:	comisd xmm9,xmm6
   14000dabd:	jb     0x14000dae5
   14000dabf:	call   QWORD PTR [rip+0x2f80b]        # 0x14003d2d0
   14000dac5:	mov    r9,QWORD PTR [rbp+0x10]
   14000dac9:	movaps xmm2,xmm6
   14000dacc:	lea    rcx,[rax+0x60]
   14000dad0:	lea    rdx,[rip+0x2ffc9]        # 0x14003daa0
   14000dad7:	movq   r8,xmm2
   14000dadc:	call   QWORD PTR [rip+0x2f7de]        # 0x14003d2c0
   14000dae2:	movaps xmm6,xmm7
   14000dae5:	mov    rdx,rdi
   14000dae8:	mov    rcx,rbp
   14000daeb:	movsd  QWORD PTR [rdi+0x90],xmm6
   14000daf3:	addsd  xmm8,xmm6
   14000daf8:	call   0x14002b9e0
   14000dafd:	mov    rdi,rax
   14000db00:	test   rax,rax
   14000db03:	jne    0x14000da60
   14000db09:	mov    rdx,rsi
   14000db0c:	mov    rcx,rbp
   14000db0f:	call   0x14002a5e0
   14000db14:	mov    rsi,rax
   14000db17:	test   rax,rax
   14000db1a:	jne    0x14000da20
   14000db20:	mov    edi,DWORD PTR [rsp+0xa0]
   14000db27:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   14000db2c:	movd   xmm0,r13d
   14000db31:	cvtdq2pd xmm0,xmm0
   14000db35:	call   0x14003b8ae
   14000db3a:	test   edi,edi
   14000db3c:	mov    eax,0x1
   14000db41:	cmovg  eax,edi
   14000db44:	cmp    DWORD PTR [rip+0x4795d],r12d        # 0x1400554a8
   14000db4b:	movaps xmm2,xmm0
   14000db4e:	movd   xmm0,eax
   14000db52:	cvtdq2pd xmm0,xmm0
   14000db56:	divsd  xmm8,xmm0
   14000db5b:	mulsd  xmm2,xmm8
   14000db60:	movaps xmm8,XMMWORD PTR [rsp+0x30]
   14000db66:	addsd  xmm2,xmm7
   14000db6a:	movaps xmm7,XMMWORD PTR [rsp+0x40]
   14000db6f:	movsd  QWORD PTR [rip+0x478e9],xmm2        # 0x140055460
   14000db77:	jne    0x14000dc61
   14000db7d:	mov    edx,r13d
   14000db80:	mov    ecx,r13d
   14000db83:	call   0x14000d300
   14000db88:	lea    rbx,[r13*8+0x0]
   14000db90:	mov    rcx,rbx
   14000db93:	mov    QWORD PTR [rbp+0xb8],rax
   14000db9a:	call   0x14001d2c0
   14000db9f:	mov    ecx,r13d
   14000dba2:	mov    r14,rax
   14000dba5:	imul   ecx,r13d
   14000dba9:	movsxd r15,ecx
   14000dbac:	shl    r15,0x3
   14000dbb0:	mov    rcx,r15
   14000dbb3:	call   0x14001d2c0
   14000dbb8:	mov    rdx,r12
   14000dbbb:	mov    r8,rax
   14000dbbe:	test   r13d,r13d
   14000dbc1:	jle    0x14000dbef
   14000dbc3:	mov    QWORD PTR [r14+rdx*8],r8
   14000dbc7:	add    r8,rbx
   14000dbca:	test   r13d,r13d
   14000dbcd:	jle    0x14000dbe7
   14000dbcf:	mov    rdi,QWORD PTR [r14+rdx*8]
   14000dbd3:	mov    rcx,rbx
   14000dbd6:	movabs rax,0x3ff0000000000000
   14000dbe0:	shr    rcx,0x3
   14000dbe4:	rep stos QWORD PTR es:[rdi],rax
   14000dbe7:	inc    rdx
   14000dbea:	cmp    rdx,r13
   14000dbed:	jl     0x14000dbc3
   14000dbef:	mov    rcx,rbx
   14000dbf2:	mov    QWORD PTR [rbp+0xc0],r14
   14000dbf9:	call   0x14001d2c0
   14000dbfe:	mov    rcx,r15
   14000dc01:	mov    r14,rax
   14000dc04:	call   0x14001d2c0
   14000dc09:	mov    rdx,rax
   14000dc0c:	test   r13d,r13d
   14000dc0f:	jle    0x14000dc3d
   14000dc11:	mov    QWORD PTR [r14+r12*8],rdx
   14000dc15:	add    rdx,rbx
   14000dc18:	test   r13d,r13d
   14000dc1b:	jle    0x14000dc35
   14000dc1d:	mov    rdi,QWORD PTR [r14+r12*8]
   14000dc21:	mov    rcx,rbx
   14000dc24:	movabs rax,0x3ff0000000000000
   14000dc2e:	shr    rcx,0x3
   14000dc32:	rep stos QWORD PTR es:[rdi],rax
   14000dc35:	inc    r12
   14000dc38:	cmp    r12,r13
   14000dc3b:	jl     0x14000dc11
   14000dc3d:	mov    QWORD PTR [rbp+0xc8],r14
   14000dc44:	mov    r8d,DWORD PTR [rip+0x47821]        # 0x14005546c
   14000dc4b:	movaps xmm3,xmm9
   14000dc4f:	mov    edx,r13d
   14000dc52:	mov    ecx,r13d
   14000dc55:	call   0x14000d1f0
   14000dc5a:	mov    QWORD PTR [rbp+0xd0],rax
   14000dc61:	mov    r14,QWORD PTR [rsp+0xb0]
   14000dc69:	movaps xmm9,XMMWORD PTR [rsp+0x20]
   14000dc6f:	mov    eax,r13d
   14000dc72:	add    rsp,0x60
   14000dc76:	pop    r15
   14000dc78:	pop    r13
   14000dc7a:	pop    r12
   14000dc7c:	pop    rdi
   14000dc7d:	pop    rsi
   14000dc7e:	pop    rbp
   14000dc7f:	pop    rbx
   14000dc80:	ret    
   14000dc81:	int3   
   14000dc82:	int3   
   14000dc83:	int3   
   14000dc84:	int3   
   14000dc85:	int3   
   14000dc86:	int3   
   14000dc87:	int3   
   14000dc88:	int3   
   14000dc89:	int3   
   14000dc8a:	int3   
   14000dc8b:	int3   
   14000dc8c:	int3   
   14000dc8d:	int3   
   14000dc8e:	int3   
   14000dc8f:	int3   
   14000dc90:	mov    QWORD PTR [rsp+0x10],rbx
   14000dc95:	mov    QWORD PTR [rsp+0x18],rsi
   14000dc9a:	push   rdi
   14000dc9b:	sub    rsp,0x20
   14000dc9f:	cmp    BYTE PTR [rip+0x47813],0x0        # 0x1400554b9
   14000dca6:	mov    ebx,edx
   14000dca8:	mov    rdi,rcx
   14000dcab:	je     0x14000dcc4
   14000dcad:	call   QWORD PTR [rip+0x2f61d]        # 0x14003d2d0
   14000dcb3:	lea    rdx,[rip+0x2ff76]        # 0x14003dc30
   14000dcba:	lea    rcx,[rax+0x60]
   14000dcbe:	call   QWORD PTR [rip+0x2f5fc]        # 0x14003d2c0
   14000dcc4:	lea    eax,[rbx+0x1]
   14000dcc7:	movsxd rcx,eax
   14000dcca:	shl    rcx,0x3
   14000dcce:	call   0x14001d2c0
   14000dcd3:	mov    rcx,rdi
   14000dcd6:	mov    QWORD PTR [rip+0x459bb],rax        # 0x140053698
   14000dcdd:	call   0x14002a4e0
   14000dce2:	mov    rsi,rax
   14000dce5:	test   rax,rax
   14000dce8:	je     0x14000dfc6
   14000dcee:	mov    QWORD PTR [rsp+0x30],rbp
   14000dcf3:	xor    ebp,ebp
   14000dcf5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000dd00:	mov    rcx,QWORD PTR [rdi+0xa8]
   14000dd07:	mov    rdx,QWORD PTR [rcx]
   14000dd0a:	test   rdx,rdx
   14000dd0d:	je     0x14000dd36
   14000dd0f:	mov    rcx,rbp
   14000dd12:	movsd  xmm0,QWORD PTR [rip+0x47746]        # 0x140055460
   14000dd1a:	lea    rcx,[rcx+0x8]
   14000dd1e:	movsd  QWORD PTR [rdx+0x90],xmm0
   14000dd26:	mov    rax,QWORD PTR [rdi+0xa8]
   14000dd2d:	mov    rdx,QWORD PTR [rcx+rax*1]
   14000dd31:	test   rdx,rdx
   14000dd34:	jne    0x14000dd12
   14000dd36:	mov    QWORD PTR [rip+0x45a03],rsi        # 0x140053740
   14000dd3d:	mov    QWORD PTR [rsi+0x90],rbp
   14000dd44:	mov    DWORD PTR [rsi+0x80],ebp
   14000dd4a:	cmp    DWORD PTR [rsi+0x7c],ebp
   14000dd4d:	jl     0x14000dd69
   14000dd4f:	lea    rdx,[rip+0x2fe3a]        # 0x14003db90
   14000dd56:	lea    rcx,[rip+0x2feab]        # 0x14003dc08
   14000dd5d:	mov    r8d,0x221
   14000dd63:	call   QWORD PTR [rip+0x2f327]        # 0x14003d090
   14000dd69:	movsxd r8,DWORD PTR [rip+0x45914]        # 0x140053684
   14000dd70:	mov    r9,QWORD PTR [rip+0x45921]        # 0x140053698
   14000dd77:	mov    rcx,r8
   14000dd7a:	inc    r8d
   14000dd7d:	mov    DWORD PTR [rsi+0x7c],ecx
   14000dd80:	mov    DWORD PTR [rip+0x458fd],r8d        # 0x140053684
   14000dd87:	mov    QWORD PTR [r9+rcx*8],rsi
   14000dd8b:	test   ecx,ecx
   14000dd8d:	jle    0x14000dde0
   14000dd8f:	mov    r10d,DWORD PTR [rsi+0x7c]
   14000dd93:	test   r10d,r10d
   14000dd96:	jle    0x14000dde0
   14000dd98:	nop    DWORD PTR [rax+rax*1+0x0]
   14000dda0:	movsd  xmm0,QWORD PTR [rsi+0x90]
   14000dda8:	lea    eax,[r10-0x1]
   14000ddac:	cdq    
   14000ddad:	sub    eax,edx
   14000ddaf:	sar    eax,1
   14000ddb1:	movsxd rcx,eax
   14000ddb4:	mov    rdx,QWORD PTR [r9+rcx*8]
   14000ddb8:	comisd xmm0,QWORD PTR [rdx+0x90]
   14000ddc0:	jae    0x14000dde0
   14000ddc2:	mov    QWORD PTR [r9+rcx*8],rsi
   14000ddc6:	movsxd rcx,r10d
   14000ddc9:	mov    DWORD PTR [rsi+0x7c],eax
   14000ddcc:	mov    QWORD PTR [r9+rcx*8],rdx
   14000ddd0:	mov    DWORD PTR [rdx+0x7c],r10d
   14000ddd4:	mov    r10d,eax
   14000ddd7:	test   eax,eax
   14000ddd9:	jg     0x14000dda0
   14000dddb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000dde0:	test   r8d,r8d
   14000dde3:	je     0x14000dfaa
   14000dde9:	mov    rbx,QWORD PTR [r9]
   14000ddec:	dec    r8d
   14000ddef:	movsxd rax,r8d
   14000ddf2:	mov    DWORD PTR [rip+0x4588b],r8d        # 0x140053684
   14000ddf9:	mov    rcx,QWORD PTR [r9+rax*8]
   14000ddfd:	mov    QWORD PTR [r9],rcx
   14000de00:	mov    DWORD PTR [rcx+0x7c],ebp
   14000de03:	cmp    r8d,0x1
   14000de07:	jle    0x14000de0e
   14000de09:	call   0x14000c980
   14000de0e:	mov    rax,QWORD PTR [rip+0x4592b]        # 0x140053740
   14000de15:	mov    DWORD PTR [rbx+0x7c],0xffffffff
   14000de1c:	cmp    rbx,rax
   14000de1f:	je     0x14000de52
   14000de21:	movsxd rdx,DWORD PTR [rax+0x78]
   14000de25:	mov    rax,QWORD PTR [rdi+0xb8]
   14000de2c:	movsxd r8,DWORD PTR [rbx+0x78]
   14000de30:	movsd  xmm0,QWORD PTR [rbx+0x90]
   14000de38:	mov    rcx,QWORD PTR [rax+r8*8]
   14000de3c:	movsd  QWORD PTR [rcx+rdx*8],xmm0
   14000de41:	mov    rax,QWORD PTR [rdi+0xb8]
   14000de48:	mov    rcx,QWORD PTR [rax+rdx*8]
   14000de4c:	movsd  QWORD PTR [rcx+r8*8],xmm0
   14000de52:	mov    rdx,rbx
   14000de55:	mov    rcx,rdi
   14000de58:	call   0x14002b780
   14000de5d:	jmp    0x14000df8b
   14000de62:	mov    r8,QWORD PTR [r11+0x10]
   14000de66:	cmp    r8,rbx
   14000de69:	jne    0x14000de6f
   14000de6b:	mov    r8,QWORD PTR [r11+0x18]
   14000de6f:	movsd  xmm1,QWORD PTR [r11+0x90]
   14000de78:	movsd  xmm0,QWORD PTR [r8+0x90]
   14000de81:	addsd  xmm1,QWORD PTR [rbx+0x90]
   14000de89:	comisd xmm0,xmm1
   14000de8d:	jbe    0x14000df7d
   14000de93:	mov    r9d,DWORD PTR [r8+0x7c]
   14000de97:	movsd  QWORD PTR [r8+0x90],xmm1
   14000dea0:	test   r9d,r9d
   14000dea3:	js     0x14000df03
   14000dea5:	jle    0x14000df7d
   14000deab:	mov    r10,QWORD PTR [rip+0x457e6]        # 0x140053698
   14000deb2:	nop    DWORD PTR [rax+0x0]
   14000deb6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000dec0:	movsd  xmm0,QWORD PTR [r8+0x90]
   14000dec9:	lea    eax,[r9-0x1]
   14000decd:	cdq    
   14000dece:	sub    eax,edx
   14000ded0:	sar    eax,1
   14000ded2:	movsxd rcx,eax
   14000ded5:	mov    rdx,QWORD PTR [r10+rcx*8]
   14000ded9:	comisd xmm0,QWORD PTR [rdx+0x90]
   14000dee1:	jae    0x14000df7d
   14000dee7:	mov    QWORD PTR [r10+rcx*8],r8
   14000deeb:	movsxd rcx,r9d
   14000deee:	mov    DWORD PTR [r8+0x7c],eax
   14000def2:	mov    QWORD PTR [r10+rcx*8],rdx
   14000def6:	mov    DWORD PTR [rdx+0x7c],r9d
   14000defa:	mov    r9d,eax
   14000defd:	test   eax,eax
   14000deff:	jg     0x14000dec0
   14000df01:	jmp    0x14000df7d
   14000df03:	mov    eax,DWORD PTR [rbx+0x80]
   14000df09:	mov    r10,QWORD PTR [rip+0x45788]        # 0x140053698
   14000df10:	inc    eax
   14000df12:	mov    DWORD PTR [r8+0x80],eax
   14000df19:	movsxd rax,DWORD PTR [rip+0x45764]        # 0x140053684
   14000df20:	mov    rcx,rax
   14000df23:	inc    eax
   14000df25:	mov    DWORD PTR [r8+0x7c],ecx
   14000df29:	mov    DWORD PTR [rip+0x45755],eax        # 0x140053684
   14000df2f:	mov    QWORD PTR [r10+rcx*8],r8
   14000df33:	test   ecx,ecx
   14000df35:	jle    0x14000df7d
   14000df37:	mov    r9d,DWORD PTR [r8+0x7c]
   14000df3b:	test   r9d,r9d
   14000df3e:	jle    0x14000df7d
   14000df40:	movsd  xmm0,QWORD PTR [r8+0x90]
   14000df49:	lea    eax,[r9-0x1]
   14000df4d:	cdq    
   14000df4e:	sub    eax,edx
   14000df50:	sar    eax,1
   14000df52:	movsxd rcx,eax
   14000df55:	mov    rdx,QWORD PTR [r10+rcx*8]
   14000df59:	comisd xmm0,QWORD PTR [rdx+0x90]
   14000df61:	jae    0x14000df7d
   14000df63:	mov    QWORD PTR [r10+rcx*8],r8
   14000df67:	movsxd rcx,r9d
   14000df6a:	mov    DWORD PTR [r8+0x7c],eax
   14000df6e:	mov    QWORD PTR [r10+rcx*8],rdx
   14000df72:	mov    DWORD PTR [rdx+0x7c],r9d
   14000df76:	mov    r9d,eax
   14000df79:	test   eax,eax
   14000df7b:	jg     0x14000df40
   14000df7d:	mov    r8,rbx
   14000df80:	mov    rdx,r11
   14000df83:	mov    rcx,rdi
   14000df86:	call   0x14002b890
   14000df8b:	mov    r11,rax
   14000df8e:	test   rax,rax
   14000df91:	jne    0x14000de62
   14000df97:	mov    r9,QWORD PTR [rip+0x456fa]        # 0x140053698
   14000df9e:	mov    r8d,DWORD PTR [rip+0x456df]        # 0x140053684
   14000dfa5:	jmp    0x14000dde0
   14000dfaa:	mov    rdx,rsi
   14000dfad:	mov    rcx,rdi
   14000dfb0:	call   0x14002a5e0
   14000dfb5:	mov    rsi,rax
   14000dfb8:	test   rax,rax
   14000dfbb:	jne    0x14000dd00
   14000dfc1:	mov    rbp,QWORD PTR [rsp+0x30]
   14000dfc6:	mov    rcx,QWORD PTR [rip+0x456cb]        # 0x140053698
   14000dfcd:	mov    rbx,QWORD PTR [rsp+0x38]
   14000dfd2:	mov    rsi,QWORD PTR [rsp+0x40]
   14000dfd7:	add    rsp,0x20
   14000dfdb:	pop    rdi
   14000dfdc:	rex.W jmp QWORD PTR [rip+0x2f2bd]        # 0x14003d2a0
   14000dfe3:	int3   
   14000dfe4:	int3   
   14000dfe5:	int3   
   14000dfe6:	int3   
   14000dfe7:	int3   
   14000dfe8:	int3   
   14000dfe9:	int3   
   14000dfea:	int3   
   14000dfeb:	int3   
   14000dfec:	int3   
   14000dfed:	int3   
   14000dfee:	int3   
   14000dfef:	int3   
   14000dff0:	mov    QWORD PTR [rsp+0x8],rbx
   14000dff5:	push   rdi
   14000dff6:	sub    rsp,0x20
   14000dffa:	cmp    BYTE PTR [rip+0x474b8],0x0        # 0x1400554b9
   14000e001:	movsd  xmm0,QWORD PTR [rip+0x4747f]        # 0x140055488
   14000e009:	mov    ebx,edx
   14000e00b:	mov    rdi,rcx
   14000e00e:	mulsd  xmm0,xmm0
   14000e012:	movsd  QWORD PTR [rip+0x4566e],xmm0        # 0x140053688
   14000e01a:	je     0x14000e033
   14000e01c:	call   QWORD PTR [rip+0x2f2ae]        # 0x14003d2d0
   14000e022:	lea    rdx,[rip+0x2fb37]        # 0x14003db60
   14000e029:	lea    rcx,[rax+0x60]
   14000e02d:	call   QWORD PTR [rip+0x2f28d]        # 0x14003d2c0
   14000e033:	mov    edx,ebx
   14000e035:	mov    rcx,rdi
   14000e038:	call   0x14000be40
   14000e03d:	test   rax,rax
   14000e040:	je     0x14000e05e
   14000e042:	mov    r8,rax
   14000e045:	mov    edx,ebx
   14000e047:	mov    rcx,rdi
   14000e04a:	call   0x14000cdb0
   14000e04f:	mov    edx,ebx
   14000e051:	mov    rcx,rdi
   14000e054:	call   0x14000be40
   14000e059:	test   rax,rax
   14000e05c:	jne    0x14000e042
   14000e05e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e063:	add    rsp,0x20
   14000e067:	pop    rdi
   14000e068:	ret    
   14000e069:	int3   
   14000e06a:	int3   
   14000e06b:	int3   
   14000e06c:	int3   
   14000e06d:	int3   
   14000e06e:	int3   
   14000e06f:	int3   
   14000e070:	rex.W jmp QWORD PTR [rip+0x2f051]        # 0x14003d0c8
   14000e077:	int3   
   14000e078:	int3   
   14000e079:	int3   
   14000e07a:	int3   
   14000e07b:	int3   
   14000e07c:	int3   
   14000e07d:	int3   
   14000e07e:	int3   
   14000e07f:	int3   
   14000e080:	rex push rbx
   14000e082:	push   rsi
   14000e083:	push   rdi
   14000e084:	push   r12
   14000e086:	push   r13
   14000e088:	sub    rsp,0x80
   14000e08f:	mov    rax,QWORD PTR [rcx+0xa8]
   14000e096:	mov    edi,DWORD PTR [rip+0x473d0]        # 0x14005546c
   14000e09c:	movsxd rsi,r8d
   14000e09f:	mov    r13,rcx
   14000e0a2:	mov    rcx,QWORD PTR [rax+rsi*8]
   14000e0a6:	xor    r9d,r9d
   14000e0a9:	mov    QWORD PTR [rsp+0xb0],rcx
   14000e0b1:	test   edi,edi
   14000e0b3:	jle    0x14000e0e0
   14000e0b5:	mov    rax,QWORD PTR [r13+0xc8]
   14000e0bc:	mov    r8,QWORD PTR [rax+rsi*8]
   14000e0c0:	mov    QWORD PTR [r8],0x0
   14000e0c7:	mov    edi,DWORD PTR [rip+0x4739f]        # 0x14005546c
   14000e0cd:	inc    r9d
   14000e0d0:	lea    r8,[r8+0x8]
   14000e0d4:	cmp    r9d,edi
   14000e0d7:	jl     0x14000e0c0
   14000e0d9:	mov    rax,QWORD PTR [r13+0xa8]
   14000e0e0:	xor    ebx,ebx
   14000e0e2:	movsxd r12,edx
   14000e0e5:	test   edx,edx
   14000e0e7:	jle    0x14000e323
   14000e0ed:	mov    QWORD PTR [rsp+0xb8],rbp
   14000e0f5:	mov    QWORD PTR [rsp+0xc0],r14
   14000e0fd:	mov    QWORD PTR [rsp+0xc8],r15
   14000e105:	movaps XMMWORD PTR [rsp+0x70],xmm6
   14000e10a:	movsd  xmm6,QWORD PTR [rip+0x2f45e]        # 0x14003d570
   14000e112:	cmp    rsi,rbx
   14000e115:	je     0x14000e2f3
   14000e11b:	mov    rax,QWORD PTR [rax+rbx*8]
   14000e11f:	mov    r9,QWORD PTR [rcx+0x88]
   14000e126:	xor    r11d,r11d
   14000e129:	xorps  xmm2,xmm2
   14000e12c:	mov    r10,QWORD PTR [rax+0x88]
   14000e133:	xor    eax,eax
   14000e135:	cmp    edi,0x4
   14000e138:	jl     0x14000e1ef
   14000e13e:	mov    rax,r10
   14000e141:	lea    rbp,[rsp+0x20]
   14000e146:	lea    r14,[rsp+0x28]
   14000e14b:	neg    rax
   14000e14e:	lea    r15,[rsp+0x30]
   14000e153:	mov    rdx,r9
   14000e156:	add    rbp,rax
   14000e159:	add    r14,rax
   14000e15c:	add    r15,rax
   14000e15f:	lea    eax,[rdi-0x4]
   14000e162:	sub    rdx,r10
   14000e165:	lea    rcx,[r10+0x8]
   14000e169:	shr    eax,0x2
   14000e16c:	inc    eax
   14000e16e:	mov    r8d,eax
   14000e171:	lea    r11d,[rax*4+0x0]
   14000e179:	lea    rax,[rax*4+0x0]
   14000e181:	movsd  xmm0,QWORD PTR [rdx+rcx*1-0x8]
   14000e187:	movsd  xmm1,QWORD PTR [rdx+rcx*1]
   14000e18c:	add    rcx,0x20
   14000e190:	subsd  xmm0,QWORD PTR [rcx-0x28]
   14000e195:	subsd  xmm1,QWORD PTR [rcx-0x20]
   14000e19a:	movsd  QWORD PTR [rcx+rbp*1-0x28],xmm0
   14000e1a0:	movsd  QWORD PTR [rcx+rbp*1-0x20],xmm1
   14000e1a6:	mulsd  xmm0,xmm0
   14000e1aa:	mulsd  xmm1,xmm1
   14000e1ae:	addsd  xmm2,xmm0
   14000e1b2:	movsd  xmm0,QWORD PTR [rdx+rcx*1-0x18]
   14000e1b8:	subsd  xmm0,QWORD PTR [rcx-0x18]
   14000e1bd:	addsd  xmm2,xmm1
   14000e1c1:	movsd  xmm1,QWORD PTR [rdx+rcx*1-0x10]
   14000e1c7:	subsd  xmm1,QWORD PTR [rcx-0x10]
   14000e1cc:	movsd  QWORD PTR [r14+rcx*1-0x20],xmm0
   14000e1d3:	mulsd  xmm0,xmm0
   14000e1d7:	movsd  QWORD PTR [r15+rcx*1-0x20],xmm1
   14000e1de:	addsd  xmm2,xmm0
   14000e1e2:	mulsd  xmm1,xmm1
   14000e1e6:	addsd  xmm2,xmm1
   14000e1ea:	dec    r8
   14000e1ed:	jne    0x14000e181
   14000e1ef:	cmp    r11d,edi
   14000e1f2:	jge    0x14000e22b
   14000e1f4:	lea    r8,[rsp+0x20]
   14000e1f9:	mov    edx,edi
   14000e1fb:	sub    r9,r10
   14000e1fe:	sub    r8,r10
   14000e201:	sub    edx,r11d
   14000e204:	lea    rcx,[r10+rax*8]
   14000e208:	movsd  xmm1,QWORD PTR [rcx+r9*1]
   14000e20e:	add    rcx,0x8
   14000e212:	subsd  xmm1,QWORD PTR [rcx-0x8]
   14000e217:	movsd  QWORD PTR [r8+rcx*1-0x8],xmm1
   14000e21e:	mulsd  xmm1,xmm1
   14000e222:	addsd  xmm2,xmm1
   14000e226:	dec    rdx
   14000e229:	jne    0x14000e208
   14000e22b:	movaps xmm0,xmm2
   14000e22e:	call   0x14003b8ae
   14000e233:	xor    r8d,r8d
   14000e236:	movaps xmm2,xmm0
   14000e239:	test   edi,edi
   14000e23b:	jle    0x14000e2eb
   14000e241:	mov    rdx,QWORD PTR [r13+0xd0]
   14000e248:	mov    rcx,QWORD PTR [r13+0xc8]
   14000e24f:	mov    rax,QWORD PTR [rdx+rsi*8]
   14000e253:	mov    r10,QWORD PTR [rcx+rsi*8]
   14000e257:	mov    r11,QWORD PTR [rcx+rbx*8]
   14000e25b:	mov    r9,QWORD PTR [rax+rbx*8]
   14000e25f:	mov    rax,QWORD PTR [rdx+rbx*8]
   14000e263:	mov    rdx,QWORD PTR [rax+rsi*8]
   14000e267:	mov    rax,QWORD PTR [r13+0xb8]
   14000e26e:	mov    rcx,QWORD PTR [rax+rsi*8]
   14000e272:	mov    rax,QWORD PTR [r13+0xc0]
   14000e279:	mov    rbp,QWORD PTR [rax+rsi*8]
   14000e27d:	xor    eax,eax
   14000e27f:	nop
   14000e280:	movsd  xmm1,QWORD PTR [rsp+rax*1+0x20]
   14000e286:	inc    r8d
   14000e289:	add    rax,0x8
   14000e28d:	movaps xmm0,xmm1
   14000e290:	mulsd  xmm0,QWORD PTR [rcx+rbx*8]
   14000e295:	divsd  xmm0,xmm2
   14000e299:	subsd  xmm1,xmm0
   14000e29d:	mulsd  xmm1,QWORD PTR [rbp+rbx*8+0x0]
   14000e2a3:	movsd  QWORD PTR [rax+r9*1-0x8],xmm1
   14000e2aa:	addsd  xmm1,QWORD PTR [rax+r10*1-0x8]
   14000e2b1:	movsd  QWORD PTR [rax+r10*1-0x8],xmm1
   14000e2b8:	movsd  xmm1,QWORD PTR [rax+r9*1-0x8]
   14000e2bf:	movsd  xmm0,QWORD PTR [rax+rdx*1-0x8]
   14000e2c5:	xorps  xmm1,xmm6
   14000e2c8:	movsd  QWORD PTR [rax+rdx*1-0x8],xmm1
   14000e2ce:	subsd  xmm1,xmm0
   14000e2d2:	addsd  xmm1,QWORD PTR [rax+r11*1-0x8]
   14000e2d9:	movsd  QWORD PTR [rax+r11*1-0x8],xmm1
   14000e2e0:	mov    edi,DWORD PTR [rip+0x47186]        # 0x14005546c
   14000e2e6:	cmp    r8d,edi
   14000e2e9:	jl     0x14000e280
   14000e2eb:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000e2f3:	mov    rax,QWORD PTR [r13+0xa8]
   14000e2fa:	inc    rbx
   14000e2fd:	cmp    rbx,r12
   14000e300:	jl     0x14000e112
   14000e306:	movaps xmm6,XMMWORD PTR [rsp+0x70]
   14000e30b:	mov    r15,QWORD PTR [rsp+0xc8]
   14000e313:	mov    r14,QWORD PTR [rsp+0xc0]
   14000e31b:	mov    rbp,QWORD PTR [rsp+0xb8]
   14000e323:	add    rsp,0x80
   14000e32a:	pop    r13
   14000e32c:	pop    r12
   14000e32e:	pop    rdi
   14000e32f:	pop    rsi
   14000e330:	pop    rbx
   14000e331:	ret    
   14000e332:	int3   
   14000e333:	int3   
   14000e334:	int3   
   14000e335:	int3   
   14000e336:	int3   
   14000e337:	int3   
   14000e338:	int3   
   14000e339:	int3   
   14000e33a:	int3   
   14000e33b:	int3   
   14000e33c:	int3   
   14000e33d:	int3   
   14000e33e:	int3   
   14000e33f:	int3   
   14000e340:	mov    QWORD PTR [rsp+0x20],rbp
   14000e345:	push   rdi
   14000e346:	sub    rsp,0x30
   14000e34a:	mov    ebp,r8d
   14000e34d:	mov    rdi,rdx
   14000e350:	test   rcx,rcx
   14000e353:	jne    0x14000e362
   14000e355:	xor    eax,eax
   14000e357:	mov    rbp,QWORD PTR [rsp+0x58]
   14000e35c:	add    rsp,0x30
   14000e360:	pop    rdi
   14000e361:	ret    
   14000e362:	mov    QWORD PTR [rsp+0x48],rbx
   14000e367:	mov    rbx,QWORD PTR [rdx+0x88]
   14000e36e:	mov    edx,DWORD PTR [rcx+0x10]
   14000e371:	mov    rcx,rdi
   14000e374:	mov    QWORD PTR [rsp+0x50],rsi
   14000e379:	call   0x140027720
   14000e37e:	mov    rsi,rax
   14000e381:	cmp    BYTE PTR [rax],0x0
   14000e384:	je     0x14000e46c
   14000e38a:	lea    rax,[rsp+0x40]
   14000e38f:	lea    r9,[rbx+0x8]
   14000e393:	lea    rdx,[rip+0x2f72e]        # 0x14003dac8
   14000e39a:	mov    r8,rbx
   14000e39d:	mov    rcx,rsi
   14000e3a0:	mov    BYTE PTR [rsp+0x40],0x0
   14000e3a5:	mov    QWORD PTR [rsp+0x20],rax
   14000e3aa:	call   QWORD PTR [rip+0x2ef08]        # 0x14003d2b8
   14000e3b0:	cmp    eax,0x2
   14000e3b3:	jl     0x14000e44e
   14000e3b9:	movsd  xmm1,QWORD PTR [rip+0x470df]        # 0x1400554a0
   14000e3c1:	mov    eax,DWORD PTR [rip+0x470a5]        # 0x14005546c
   14000e3c7:	xorps  xmm0,xmm0
   14000e3ca:	comisd xmm1,xmm0
   14000e3ce:	jbe    0x14000e407
   14000e3d0:	xor    ecx,ecx
   14000e3d2:	test   eax,eax
   14000e3d4:	jle    0x14000e407
   14000e3d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000e3e0:	movsd  xmm0,QWORD PTR [rbx]
   14000e3e4:	inc    ecx
   14000e3e6:	lea    rbx,[rbx+0x8]
   14000e3ea:	divsd  xmm0,xmm1
   14000e3ee:	movsd  QWORD PTR [rbx-0x8],xmm0
   14000e3f3:	mov    eax,DWORD PTR [rip+0x47073]        # 0x14005546c
   14000e3f9:	cmp    ecx,eax
   14000e3fb:	jge    0x14000e407
   14000e3fd:	movsd  xmm1,QWORD PTR [rip+0x4709b]        # 0x1400554a0
   14000e405:	jmp    0x14000e3e0
   14000e407:	cmp    eax,0x2
   14000e40a:	jle    0x14000e416
   14000e40c:	mov    edx,ebp
   14000e40e:	mov    rcx,rdi
   14000e411:	call   0x14000ccf0
   14000e416:	cmp    BYTE PTR [rsp+0x40],0x21
   14000e41b:	je     0x14000e440
   14000e41d:	mov    rax,QWORD PTR [rip+0x46f7c]        # 0x1400553a0
   14000e424:	test   rax,rax
   14000e427:	je     0x14000e447
   14000e429:	mov    edx,DWORD PTR [rax+0x10]
   14000e42c:	mov    rcx,rdi
   14000e42f:	call   0x140027720
   14000e434:	mov    rcx,rax
   14000e437:	call   0x14001c4b0
   14000e43c:	test   eax,eax
   14000e43e:	je     0x14000e447
   14000e440:	mov    BYTE PTR [rdi+0x98],0x1
   14000e447:	mov    eax,0x1
   14000e44c:	jmp    0x14000e46e
   14000e44e:	call   QWORD PTR [rip+0x2ee7c]        # 0x14003d2d0
   14000e454:	mov    r8,QWORD PTR [rdi+0x10]
   14000e458:	lea    rdx,[rip+0x2f679]        # 0x14003dad8
   14000e45f:	lea    rcx,[rax+0x60]
   14000e463:	mov    r9,rsi
   14000e466:	call   QWORD PTR [rip+0x2ee54]        # 0x14003d2c0
   14000e46c:	xor    eax,eax
   14000e46e:	mov    rbx,QWORD PTR [rsp+0x48]
   14000e473:	mov    rsi,QWORD PTR [rsp+0x50]
   14000e478:	mov    rbp,QWORD PTR [rsp+0x58]
   14000e47d:	add    rsp,0x30
   14000e481:	pop    rdi
   14000e482:	ret    
   14000e483:	int3   
   14000e484:	int3   
   14000e485:	int3   
   14000e486:	int3   
   14000e487:	int3   
   14000e488:	int3   
   14000e489:	int3   
   14000e48a:	int3   
   14000e48b:	int3   
   14000e48c:	int3   
   14000e48d:	int3   
   14000e48e:	int3   
   14000e48f:	int3   
   14000e490:	mov    QWORD PTR [rsp+0x8],rbx
   14000e495:	mov    QWORD PTR [rsp+0x10],rbp
   14000e49a:	mov    QWORD PTR [rsp+0x18],rsi
   14000e49f:	push   rdi
   14000e4a0:	push   r14
   14000e4a2:	push   r15
   14000e4a4:	sub    rsp,0x30
   14000e4a8:	mov    rbx,QWORD PTR [rcx+0x18]
   14000e4ac:	mov    r15,QWORD PTR [rcx+0x20]
   14000e4b0:	mov    rdi,QWORD PTR [rcx+0x8]
   14000e4b4:	mov    r14,QWORD PTR [rcx+0x28]
   14000e4b8:	mov    rsi,rcx
   14000e4bb:	lea    rcx,[rip+0x2f7be]        # 0x14003dc80
   14000e4c2:	call   QWORD PTR [rip+0x2eba8]        # 0x14003d070
   14000e4c8:	xor    ebp,ebp
   14000e4ca:	cmp    DWORD PTR [rsi+0x4],ebp
   14000e4cd:	jle    0x14000e4ff
   14000e4cf:	sub    r15,rbx
   14000e4d2:	movups xmm0,XMMWORD PTR [rdi]
   14000e4d5:	mov    r9d,DWORD PTR [r15+rbx*1]
   14000e4d9:	mov    r8d,DWORD PTR [rbx]
   14000e4dc:	lea    rcx,[rip+0x2f7b5]        # 0x14003dc98
   14000e4e3:	mov    edx,ebp
   14000e4e5:	movups XMMWORD PTR [rsp+0x20],xmm0
   14000e4ea:	call   QWORD PTR [rip+0x2eb80]        # 0x14003d070
   14000e4f0:	inc    ebp
   14000e4f2:	lea    rdi,[rdi+0x10]
   14000e4f6:	lea    rbx,[rbx+0x4]
   14000e4fa:	cmp    ebp,DWORD PTR [rsi+0x4]
   14000e4fd:	jl     0x14000e4d2
   14000e4ff:	lea    rcx,[rip+0x2f7ae]        # 0x14003dcb4
   14000e506:	call   QWORD PTR [rip+0x2eb64]        # 0x14003d070
   14000e50c:	mov    eax,DWORD PTR [rsi+0x4]
   14000e50f:	xor    ebp,ebp
   14000e511:	test   eax,eax
   14000e513:	jle    0x14000e55f
   14000e515:	xor    edi,edi
   14000e517:	test   eax,eax
   14000e519:	jle    0x14000e545
   14000e51b:	xor    ebx,ebx
   14000e51d:	nop    DWORD PTR [rax]
   14000e520:	mov    rax,QWORD PTR [r14]
   14000e523:	lea    rcx,[rip+0x2f78e]        # 0x14003dcb8
   14000e52a:	movsd  xmm1,QWORD PTR [rax+rbx*1]
   14000e52f:	movq   rdx,xmm1
   14000e534:	call   QWORD PTR [rip+0x2eb36]        # 0x14003d070
   14000e53a:	inc    edi
   14000e53c:	lea    rbx,[rbx+0x8]
   14000e540:	cmp    edi,DWORD PTR [rsi+0x4]
   14000e543:	jl     0x14000e520
   14000e545:	lea    rcx,[rip+0x2f62c]        # 0x14003db78
   14000e54c:	call   QWORD PTR [rip+0x2eb1e]        # 0x14003d070
   14000e552:	mov    eax,DWORD PTR [rsi+0x4]
   14000e555:	inc    ebp
   14000e557:	add    r14,0x8
   14000e55b:	cmp    ebp,eax
   14000e55d:	jl     0x14000e515
   14000e55f:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e564:	mov    rbp,QWORD PTR [rsp+0x58]
   14000e569:	mov    rsi,QWORD PTR [rsp+0x60]
   14000e56e:	add    rsp,0x30
   14000e572:	pop    r15
   14000e574:	pop    r14
   14000e576:	pop    rdi
   14000e577:	ret    
   14000e578:	int3   
   14000e579:	int3   
   14000e57a:	int3   
   14000e57b:	int3   
   14000e57c:	int3   
   14000e57d:	int3   
   14000e57e:	int3   
   14000e57f:	int3   
   14000e580:	mov    rax,QWORD PTR [rcx]
   14000e583:	mov    rcx,QWORD PTR [rdx]
   14000e586:	mov    edx,DWORD PTR [rcx+0x8]
   14000e589:	sub    edx,DWORD PTR [rax+0x8]
   14000e58c:	mov    eax,edx
   14000e58e:	ret    
   14000e58f:	int3   
   14000e590:	mov    rax,rsp
   14000e593:	mov    QWORD PTR [rax+0x8],rbx
   14000e597:	push   rdi
   14000e598:	sub    rsp,0xb0
   14000e59f:	movaps XMMWORD PTR [rax-0x18],xmm6
   14000e5a3:	movaps XMMWORD PTR [rax-0x38],xmm8
   14000e5a8:	movaps XMMWORD PTR [rax-0x48],xmm9
   14000e5ad:	xorps  xmm3,xmm3
   14000e5b0:	movsxd r10,ecx
   14000e5b3:	xor    r9d,r9d
   14000e5b6:	mov    edi,r8d
   14000e5b9:	mov    r11,rdx
   14000e5bc:	movaps xmm9,xmm3
   14000e5c0:	movaps xmm8,xmm3
   14000e5c4:	movaps XMMWORD PTR [rax-0x78],xmm12
   14000e5c9:	imul   eax,ecx,0x64
   14000e5cc:	dec    eax
   14000e5ce:	movd   xmm12,eax
   14000e5d3:	cvtdq2pd xmm12,xmm12
   14000e5d8:	cmp    r10,0x4
   14000e5dc:	jl     0x14000e6f9
   14000e5e2:	lea    rbx,[rdx+0x10]
   14000e5e6:	lea    rdx,[r10-0x4]
   14000e5ea:	add    r8d,r8d
   14000e5ed:	shr    rdx,0x2
   14000e5f1:	inc    rdx
   14000e5f4:	lea    r9,[rdx*4+0x0]
   14000e5fc:	nop    DWORD PTR [rax+0x0]
   14000e600:	mov    rcx,QWORD PTR [rbx-0x10]
   14000e604:	add    rbx,0x20
   14000e608:	mov    eax,DWORD PTR [rcx+0x68]
   14000e60b:	sub    eax,DWORD PTR [rcx+0x60]
   14000e60e:	add    eax,r8d
   14000e611:	movd   xmm2,eax
   14000e615:	mov    eax,DWORD PTR [rcx+0x6c]
   14000e618:	sub    eax,DWORD PTR [rcx+0x64]
   14000e61b:	mov    rcx,QWORD PTR [rbx-0x28]
   14000e61f:	add    eax,r8d
   14000e622:	cvtdq2pd xmm2,xmm2
   14000e626:	movd   xmm1,eax
   14000e62a:	mov    eax,DWORD PTR [rcx+0x68]
   14000e62d:	sub    eax,DWORD PTR [rcx+0x60]
   14000e630:	add    eax,r8d
   14000e633:	cvtdq2pd xmm1,xmm1
   14000e637:	movaps xmm0,xmm1
   14000e63a:	addsd  xmm0,xmm2
   14000e63e:	mulsd  xmm1,xmm2
   14000e642:	movd   xmm2,eax
   14000e646:	mov    eax,DWORD PTR [rcx+0x6c]
   14000e649:	sub    eax,DWORD PTR [rcx+0x64]
   14000e64c:	mov    rcx,QWORD PTR [rbx-0x20]
   14000e650:	subsd  xmm9,xmm1
   14000e655:	add    eax,r8d
   14000e658:	subsd  xmm8,xmm0
   14000e65d:	cvtdq2pd xmm2,xmm2
   14000e661:	movd   xmm1,eax
   14000e665:	mov    eax,DWORD PTR [rcx+0x68]
   14000e668:	sub    eax,DWORD PTR [rcx+0x60]
   14000e66b:	add    eax,r8d
   14000e66e:	cvtdq2pd xmm1,xmm1
   14000e672:	movaps xmm0,xmm1
   14000e675:	addsd  xmm0,xmm2
   14000e679:	mulsd  xmm1,xmm2
   14000e67d:	movd   xmm2,eax
   14000e681:	mov    eax,DWORD PTR [rcx+0x6c]
   14000e684:	sub    eax,DWORD PTR [rcx+0x64]
   14000e687:	mov    rcx,QWORD PTR [rbx-0x18]
   14000e68b:	subsd  xmm9,xmm1
   14000e690:	add    eax,r8d
   14000e693:	subsd  xmm8,xmm0
   14000e698:	cvtdq2pd xmm2,xmm2
   14000e69c:	movd   xmm1,eax
   14000e6a0:	mov    eax,DWORD PTR [rcx+0x68]
   14000e6a3:	sub    eax,DWORD PTR [rcx+0x60]
   14000e6a6:	add    eax,r8d
   14000e6a9:	cvtdq2pd xmm1,xmm1
   14000e6ad:	movaps xmm0,xmm1
   14000e6b0:	addsd  xmm0,xmm2
   14000e6b4:	mulsd  xmm1,xmm2
   14000e6b8:	movd   xmm2,eax
   14000e6bc:	mov    eax,DWORD PTR [rcx+0x6c]
   14000e6bf:	sub    eax,DWORD PTR [rcx+0x64]
   14000e6c2:	subsd  xmm9,xmm1
   14000e6c7:	subsd  xmm8,xmm0
   14000e6cc:	add    eax,r8d
   14000e6cf:	cvtdq2pd xmm2,xmm2
   14000e6d3:	movd   xmm1,eax
   14000e6d7:	cvtdq2pd xmm1,xmm1
   14000e6db:	movaps xmm0,xmm1
   14000e6de:	addsd  xmm0,xmm2
   14000e6e2:	mulsd  xmm1,xmm2
   14000e6e6:	subsd  xmm8,xmm0
   14000e6eb:	subsd  xmm9,xmm1
   14000e6f0:	dec    rdx
   14000e6f3:	jne    0x14000e600
   14000e6f9:	cmp    r9,r10
   14000e6fc:	jge    0x14000e742
   14000e6fe:	lea    edx,[rdi+rdi*1]
   14000e701:	mov    rcx,QWORD PTR [r11+r9*8]
   14000e705:	inc    r9
   14000e708:	mov    eax,DWORD PTR [rcx+0x68]
   14000e70b:	sub    eax,DWORD PTR [rcx+0x60]
   14000e70e:	add    eax,edx
   14000e710:	movd   xmm2,eax
   14000e714:	mov    eax,DWORD PTR [rcx+0x6c]
   14000e717:	sub    eax,DWORD PTR [rcx+0x64]
   14000e71a:	add    eax,edx
   14000e71c:	cvtdq2pd xmm2,xmm2
   14000e720:	movd   xmm1,eax
   14000e724:	cvtdq2pd xmm1,xmm1
   14000e728:	movaps xmm0,xmm1
   14000e72b:	addsd  xmm0,xmm2
   14000e72f:	mulsd  xmm1,xmm2
   14000e733:	subsd  xmm8,xmm0
   14000e738:	subsd  xmm9,xmm1
   14000e73d:	cmp    r9,r10
   14000e740:	jl     0x14000e701
   14000e742:	movaps xmm0,xmm12
   14000e746:	movaps xmm6,xmm8
   14000e74a:	mulsd  xmm0,QWORD PTR [rip+0x2f666]        # 0x14003ddb8
   14000e752:	mulsd  xmm6,xmm8
   14000e757:	mulsd  xmm0,xmm9
   14000e75c:	subsd  xmm6,xmm0
   14000e760:	comisd xmm3,xmm6
   14000e764:	jbe    0x14000e791
   14000e766:	call   QWORD PTR [rip+0x2eb64]        # 0x14003d2d0
   14000e76c:	movaps xmm2,xmm6
   14000e76f:	lea    rdx,[rip+0x2f54a]        # 0x14003dcc0
   14000e776:	lea    rcx,[rax+0x60]
   14000e77a:	movq   r8,xmm2
   14000e77f:	call   QWORD PTR [rip+0x2eb3b]        # 0x14003d2c0
   14000e785:	mov    ecx,0x1
   14000e78a:	call   QWORD PTR [rip+0x2e8e8]        # 0x14003d078
   14000e790:	int3   
   14000e791:	movaps XMMWORD PTR [rsp+0x90],xmm7
   14000e799:	movaps xmm0,xmm6
   14000e79c:	movaps XMMWORD PTR [rsp+0x60],xmm10
   14000e7a2:	movaps XMMWORD PTR [rsp+0x50],xmm11
   14000e7a8:	call   0x14003b8ae
   14000e7ad:	cmp    BYTE PTR [rip+0x46d05],0x2        # 0x1400554b9
   14000e7b4:	movaps xmm10,xmm8
   14000e7b8:	movaps xmm1,xmm12
   14000e7bc:	movaps xmm11,xmm0
   14000e7c0:	movaps xmm7,xmm0
   14000e7c3:	xorps  xmm10,XMMWORD PTR [rip+0x2eda5]        # 0x14003d570
   14000e7cb:	mulsd  xmm1,QWORD PTR [rip+0x2ef0d]        # 0x14003d6e0
   14000e7d3:	subsd  xmm10,xmm0
   14000e7d8:	subsd  xmm11,xmm8
   14000e7dd:	divsd  xmm10,xmm1
   14000e7e2:	divsd  xmm11,xmm1
   14000e7e7:	jbe    0x14000e8dc
   14000e7ed:	call   QWORD PTR [rip+0x2eadd]        # 0x14003d2d0
   14000e7f3:	lea    rdx,[rip+0x2f4de]        # 0x14003dcd8
   14000e7fa:	lea    rcx,[rax+0x60]
   14000e7fe:	call   QWORD PTR [rip+0x2eabc]        # 0x14003d2c0
   14000e804:	call   QWORD PTR [rip+0x2eac6]        # 0x14003d2d0
   14000e80a:	lea    rdx,[rip+0x2f4e7]        # 0x14003dcf8
   14000e811:	movaps xmm3,xmm8
   14000e815:	movaps xmm2,xmm12
   14000e819:	movsd  QWORD PTR [rsp+0x30],xmm7
   14000e81f:	movq   r9,xmm3
   14000e824:	movq   r8,xmm2
   14000e829:	lea    rcx,[rax+0x60]
   14000e82d:	movsd  QWORD PTR [rsp+0x28],xmm6
   14000e833:	movsd  QWORD PTR [rsp+0x20],xmm9
   14000e83a:	call   QWORD PTR [rip+0x2ea80]        # 0x14003d2c0
   14000e840:	cvttsd2si ebx,xmm10
   14000e845:	cvttsd2si edi,xmm11
   14000e84a:	call   QWORD PTR [rip+0x2ea80]        # 0x14003d2d0
   14000e850:	lea    rdx,[rip+0x2f4c1]        # 0x14003dd18
   14000e857:	mov    r8d,edi
   14000e85a:	lea    rcx,[rax+0x60]
   14000e85e:	movaps xmm3,xmm11
   14000e862:	movsd  QWORD PTR [rsp+0x28],xmm10
   14000e869:	mov    DWORD PTR [rsp+0x20],ebx
   14000e86d:	movq   r9,xmm3
   14000e872:	call   QWORD PTR [rip+0x2ea48]        # 0x14003d2c0
   14000e878:	movaps xmm7,xmm10
   14000e87c:	movaps xmm0,xmm11
   14000e880:	movaps xmm6,xmm11
   14000e884:	mulsd  xmm7,xmm12
   14000e889:	mulsd  xmm0,xmm8
   14000e88e:	mulsd  xmm6,xmm12
   14000e893:	mulsd  xmm7,xmm10
   14000e898:	mulsd  xmm10,xmm8
   14000e89d:	addsd  xmm7,xmm10
   14000e8a2:	addsd  xmm7,xmm9
   14000e8a7:	mulsd  xmm6,xmm11
   14000e8ac:	addsd  xmm6,xmm0
   14000e8b0:	addsd  xmm6,xmm9
   14000e8b5:	call   QWORD PTR [rip+0x2ea15]        # 0x14003d2d0
   14000e8bb:	lea    rdx,[rip+0x2f46e]        # 0x14003dd30
   14000e8c2:	movaps xmm3,xmm7
   14000e8c5:	movaps xmm2,xmm6
   14000e8c8:	lea    rcx,[rax+0x60]
   14000e8cc:	movq   r9,xmm3
   14000e8d1:	movq   r8,xmm2
   14000e8d6:	call   QWORD PTR [rip+0x2e9e4]        # 0x14003d2c0
   14000e8dc:	movaps xmm10,XMMWORD PTR [rsp+0x60]
   14000e8e2:	movaps xmm7,XMMWORD PTR [rsp+0x90]
   14000e8ea:	lea    r11,[rsp+0xb0]
   14000e8f2:	cvttsd2si eax,xmm11
   14000e8f7:	mov    rbx,QWORD PTR [r11+0x10]
   14000e8fb:	movaps xmm6,XMMWORD PTR [r11-0x10]
   14000e900:	movaps xmm8,XMMWORD PTR [r11-0x30]
   14000e905:	movaps xmm9,XMMWORD PTR [r11-0x40]
   14000e90a:	movaps xmm12,XMMWORD PTR [r11-0x70]
   14000e90f:	movaps xmm11,XMMWORD PTR [rsp+0x50]
   14000e915:	mov    rsp,r11
   14000e918:	pop    rdi
   14000e919:	ret    
   14000e91a:	int3   
   14000e91b:	int3   
   14000e91c:	int3   
   14000e91d:	int3   
   14000e91e:	int3   
   14000e91f:	int3   
   14000e920:	mov    QWORD PTR [rsp+0x8],rbx
   14000e925:	mov    QWORD PTR [rsp+0x10],rbp
   14000e92a:	mov    QWORD PTR [rsp+0x18],rsi
   14000e92f:	push   rdi
   14000e930:	push   r12
   14000e932:	push   r13
   14000e934:	push   r14
   14000e936:	push   r15
   14000e938:	sub    rsp,0x30
   14000e93c:	mov    rbx,rcx
   14000e93f:	mov    rsi,rcx
   14000e942:	mov    ecx,edx
   14000e944:	sub    ecx,ebx
   14000e946:	or     r9d,0xffffffff
   14000e94a:	shr    rsi,0x20
   14000e94e:	mov    eax,ecx
   14000e950:	mov    r12,r8
   14000e953:	mov    r8,rdx
   14000e956:	shr    r8,0x20
   14000e95a:	mov    rdi,rdx
   14000e95d:	cdq    
   14000e95e:	mov    r14d,eax
   14000e961:	mov    r13d,0x1
   14000e967:	mov    QWORD PTR [rsp+0x20],r8
   14000e96c:	xor    r14d,edx
   14000e96f:	mov    ebp,r13d
   14000e972:	sub    r14d,edx
   14000e975:	add    r14d,r14d
   14000e978:	test   ecx,ecx
   14000e97a:	mov    ecx,r8d
   14000e97d:	cmovs  ebp,r9d
   14000e981:	sub    ecx,esi
   14000e983:	mov    r8d,esi
   14000e986:	mov    eax,ecx
   14000e988:	mov    DWORD PTR [rsp+0x78],ebp
   14000e98c:	cdq    
   14000e98d:	mov    r15d,eax
   14000e990:	xor    r15d,edx
   14000e993:	sub    r15d,edx
   14000e996:	mov    edx,ebx
   14000e998:	add    r15d,r15d
   14000e99b:	test   ecx,ecx
   14000e99d:	mov    rcx,r12
   14000e9a0:	cmovs  r13d,r9d
   14000e9a4:	cmp    r14d,r15d
   14000e9a7:	jle    0x14000e9e4
   14000e9a9:	mov    eax,r14d
   14000e9ac:	mov    ebp,r15d
   14000e9af:	sar    eax,1
   14000e9b1:	sub    ebp,eax
   14000e9b3:	call   0x14000fa90
   14000e9b8:	cmp    ebx,edi
   14000e9ba:	je     0x14000ea22
   14000e9bc:	nop    DWORD PTR [rax+0x0]
   14000e9c0:	test   ebp,ebp
   14000e9c2:	js     0x14000e9ca
   14000e9c4:	add    esi,r13d
   14000e9c7:	sub    ebp,r14d
   14000e9ca:	add    ebx,DWORD PTR [rsp+0x78]
   14000e9ce:	mov    r8d,esi
   14000e9d1:	mov    rcx,r12
   14000e9d4:	mov    edx,ebx
   14000e9d6:	add    ebp,r15d
   14000e9d9:	call   0x14000fa90
   14000e9de:	cmp    ebx,edi
   14000e9e0:	jne    0x14000e9c0
   14000e9e2:	jmp    0x14000ea22
   14000e9e4:	mov    eax,r15d
   14000e9e7:	mov    edi,r14d
   14000e9ea:	sar    eax,1
   14000e9ec:	sub    edi,eax
   14000e9ee:	call   0x14000fa90
   14000e9f3:	cmp    esi,DWORD PTR [rsp+0x20]
   14000e9f7:	je     0x14000ea22
   14000e9f9:	nop    DWORD PTR [rax+0x0]
   14000ea00:	test   edi,edi
   14000ea02:	js     0x14000ea09
   14000ea04:	add    ebx,ebp
   14000ea06:	sub    edi,r15d
   14000ea09:	add    esi,r13d
   14000ea0c:	mov    edx,ebx
   14000ea0e:	mov    rcx,r12
   14000ea11:	mov    r8d,esi
   14000ea14:	add    edi,r14d
   14000ea17:	call   0x14000fa90
   14000ea1c:	cmp    esi,DWORD PTR [rsp+0x20]
   14000ea20:	jne    0x14000ea00
   14000ea22:	mov    rbx,QWORD PTR [rsp+0x60]
   14000ea27:	mov    rbp,QWORD PTR [rsp+0x68]
   14000ea2c:	mov    rsi,QWORD PTR [rsp+0x70]
   14000ea31:	add    rsp,0x30
   14000ea35:	pop    r15
   14000ea37:	pop    r14
   14000ea39:	pop    r13
   14000ea3b:	pop    r12
   14000ea3d:	pop    rdi
   14000ea3e:	ret    
   14000ea3f:	int3   
   14000ea40:	mov    r11,rsp
   14000ea43:	mov    DWORD PTR [r11+0x18],r8d
   14000ea47:	mov    QWORD PTR [r11+0x10],rdx
   14000ea4b:	mov    QWORD PTR [r11+0x8],rcx
   14000ea4f:	push   rbp
   14000ea50:	push   r13
   14000ea52:	lea    rbp,[r11-0x57]
   14000ea56:	sub    rsp,0x98
   14000ea5d:	mov    rax,QWORD PTR [rcx+0x28]
   14000ea61:	mov    r13d,r9d
   14000ea64:	mov    r9,rdx
   14000ea67:	test   rax,rax
   14000ea6a:	je     0x14000ec51
   14000ea70:	mov    QWORD PTR [r11-0x38],r15
   14000ea74:	xor    r15d,r15d
   14000ea77:	mov    QWORD PTR [rbp-0x21],r15
   14000ea7b:	cmp    DWORD PTR [rax+0x8],r15d
   14000ea7f:	jle    0x14000ec4c
   14000ea85:	mov    QWORD PTR [r11+0x20],rbx
   14000ea89:	mov    QWORD PTR [r11-0x18],rsi
   14000ea8d:	mov    esi,DWORD PTR [rbp+0x7f]
   14000ea90:	mov    QWORD PTR [r11-0x20],rdi
   14000ea94:	mov    ecx,r15d
   14000ea97:	mov    QWORD PTR [r11-0x28],r12
   14000ea9b:	mov    QWORD PTR [r11-0x30],r14
   14000ea9f:	mov    QWORD PTR [rbp-0x19],rcx
   14000eaa3:	nop    DWORD PTR [rax+0x0]
   14000eaa7:	nop    WORD PTR [rax+rax*1+0x0]
   14000eab0:	mov    rax,QWORD PTR [rax]
   14000eab3:	movups xmm0,XMMWORD PTR [rax+rcx*1]
   14000eab7:	movups xmm1,XMMWORD PTR [rax+rcx*1+0x10]
   14000eabc:	movups xmm2,xmm0
   14000eabf:	movups XMMWORD PTR [rbp-0x11],xmm0
   14000eac3:	movsd  xmm0,QWORD PTR [rax+rcx*1+0x20]
   14000eac9:	mov    rdi,QWORD PTR [rbp-0x11]
   14000eacd:	psrldq xmm2,0x8
   14000ead2:	movsd  QWORD PTR [rbp+0xf],xmm0
   14000ead7:	movups XMMWORD PTR [rbp-0x1],xmm1
   14000eadb:	movq   rax,xmm2
   14000eae0:	shr    rax,0x20
   14000eae4:	test   eax,eax
   14000eae6:	je     0x14000eafb
   14000eae8:	mov    rax,QWORD PTR [rbp+0x3]
   14000eaec:	mov    r14d,0x1
   14000eaf2:	mov    QWORD PTR [rbp-0x29],rax
   14000eaf6:	mov    rax,QWORD PTR [rdi]
   14000eaf9:	jmp    0x14000eb0c
   14000eafb:	mov    rax,QWORD PTR [rdi]
   14000eafe:	mov    r14d,0x2
   14000eb04:	mov    QWORD PTR [rbp-0x29],rax
   14000eb08:	mov    rax,QWORD PTR [rdi+0x8]
   14000eb0c:	mov    ecx,DWORD PTR [rbp-0x25]
   14000eb0f:	mov    QWORD PTR [rbp-0x31],rax
   14000eb13:	mov    eax,DWORD PTR [rbp-0x29]
   14000eb16:	add    eax,r8d
   14000eb19:	add    ecx,r13d
   14000eb1c:	mov    r12,r14
   14000eb1f:	cdq    
   14000eb20:	idiv   esi
   14000eb22:	mov    DWORD PTR [rbp-0x29],eax
   14000eb25:	mov    eax,ecx
   14000eb27:	mov    ecx,DWORD PTR [rbp-0x2d]
   14000eb2a:	cdq    
   14000eb2b:	add    ecx,r13d
   14000eb2e:	idiv   esi
   14000eb30:	mov    DWORD PTR [rbp-0x25],eax
   14000eb33:	mov    eax,DWORD PTR [rbp-0x31]
   14000eb36:	add    eax,r8d
   14000eb39:	mov    r8,r9
   14000eb3c:	cdq    
   14000eb3d:	idiv   esi
   14000eb3f:	mov    DWORD PTR [rbp-0x31],eax
   14000eb42:	mov    eax,ecx
   14000eb44:	mov    rcx,QWORD PTR [rbp-0x29]
   14000eb48:	cdq    
   14000eb49:	idiv   esi
   14000eb4b:	mov    DWORD PTR [rbp-0x2d],eax
   14000eb4e:	mov    rbx,QWORD PTR [rbp-0x31]
   14000eb52:	mov    rdx,rbx
   14000eb55:	call   0x14000e920
   14000eb5a:	mov    eax,DWORD PTR [rbp-0x9]
   14000eb5d:	cmp    r14d,eax
   14000eb60:	jge    0x14000ebc1
   14000eb62:	mov    r12d,DWORD PTR [rbp+0x6f]
   14000eb66:	mov    r15,QWORD PTR [rbp+0x67]
   14000eb6a:	sub    eax,r14d
   14000eb6d:	lea    rdi,[rdi+r14*8]
   14000eb71:	mov    r14d,eax
   14000eb74:	nop    DWORD PTR [rax+0x0]
   14000eb78:	nop    DWORD PTR [rax+rax*1+0x0]
   14000eb80:	mov    rax,QWORD PTR [rdi]
   14000eb83:	mov    rcx,rbx
   14000eb86:	mov    QWORD PTR [rbp-0x31],rax
   14000eb8a:	mov    r8d,DWORD PTR [rbp-0x2d]
   14000eb8e:	add    eax,r12d
   14000eb91:	cdq    
   14000eb92:	add    r8d,r13d
   14000eb95:	idiv   esi
   14000eb97:	mov    DWORD PTR [rbp-0x31],eax
   14000eb9a:	mov    eax,r8d
   14000eb9d:	mov    r8,r15
   14000eba0:	cdq    
   14000eba1:	idiv   esi
   14000eba3:	mov    DWORD PTR [rbp-0x2d],eax
   14000eba6:	mov    rbx,QWORD PTR [rbp-0x31]
   14000ebaa:	mov    rdx,rbx
   14000ebad:	call   0x14000e920
   14000ebb2:	lea    rdi,[rdi+0x8]
   14000ebb6:	dec    r14
   14000ebb9:	jne    0x14000eb80
   14000ebbb:	mov    r15,QWORD PTR [rbp-0x21]
   14000ebbf:	jmp    0x14000ebc5
   14000ebc1:	mov    r12d,DWORD PTR [rbp+0x6f]
   14000ebc5:	cmp    DWORD PTR [rbp-0x1],0x0
   14000ebc9:	je     0x14000ebfa
   14000ebcb:	mov    rax,QWORD PTR [rbp+0xb]
   14000ebcf:	mov    r8,QWORD PTR [rbp+0x67]
   14000ebd3:	mov    QWORD PTR [rbp-0x31],rax
   14000ebd7:	mov    ecx,DWORD PTR [rbp-0x2d]
   14000ebda:	add    eax,r12d
   14000ebdd:	cdq    
   14000ebde:	add    ecx,r13d
   14000ebe1:	idiv   esi
   14000ebe3:	mov    DWORD PTR [rbp-0x31],eax
   14000ebe6:	mov    eax,ecx
   14000ebe8:	mov    rcx,rbx
   14000ebeb:	cdq    
   14000ebec:	idiv   esi
   14000ebee:	mov    DWORD PTR [rbp-0x2d],eax
   14000ebf1:	mov    rdx,QWORD PTR [rbp-0x31]
   14000ebf5:	call   0x14000e920
   14000ebfa:	mov    rcx,QWORD PTR [rbp-0x19]
   14000ebfe:	mov    rax,QWORD PTR [rbp+0x5f]
   14000ec02:	mov    r8d,DWORD PTR [rbp+0x6f]
   14000ec06:	mov    rax,QWORD PTR [rax+0x28]
   14000ec0a:	mov    r9,QWORD PTR [rbp+0x67]
   14000ec0e:	inc    r15d
   14000ec11:	add    rcx,0x28
   14000ec15:	mov    QWORD PTR [rbp-0x21],r15
   14000ec19:	mov    QWORD PTR [rbp-0x19],rcx
   14000ec1d:	cmp    r15d,DWORD PTR [rax+0x8]
   14000ec21:	jl     0x14000eab0
   14000ec27:	mov    r14,QWORD PTR [rsp+0x78]
   14000ec2c:	mov    r12,QWORD PTR [rsp+0x80]
   14000ec34:	mov    rdi,QWORD PTR [rsp+0x88]
   14000ec3c:	mov    rsi,QWORD PTR [rsp+0x90]
   14000ec44:	mov    rbx,QWORD PTR [rsp+0xc8]
   14000ec4c:	mov    r15,QWORD PTR [rsp+0x70]
   14000ec51:	add    rsp,0x98
   14000ec58:	pop    r13
   14000ec5a:	pop    rbp
   14000ec5b:	ret    
   14000ec5c:	int3   
   14000ec5d:	int3   
   14000ec5e:	int3   
   14000ec5f:	int3   
   14000ec60:	mov    QWORD PTR [rsp+0x10],rbx
   14000ec65:	mov    QWORD PTR [rsp+0x20],rbp
   14000ec6a:	push   rsi
   14000ec6b:	push   rdi
   14000ec6c:	push   r13
   14000ec6e:	push   r14
   14000ec70:	push   r15
   14000ec72:	sub    rsp,0x30
   14000ec76:	mov    esi,DWORD PTR [r8+0x18]
   14000ec7a:	mov    rdi,QWORD PTR [r8+0x10]
   14000ec7e:	xor    ebx,ebx
   14000ec80:	mov    r15,r9
   14000ec83:	mov    r13,r8
   14000ec86:	mov    ebp,edx
   14000ec88:	mov    r14d,ecx
   14000ec8b:	test   esi,esi
   14000ec8d:	jle    0x14000ecc0
   14000ec8f:	nop
   14000ec90:	mov    rax,QWORD PTR [rdi]
   14000ec93:	mov    rcx,r15
   14000ec96:	mov    QWORD PTR [rsp+0x70],rax
   14000ec9b:	add    DWORD PTR [rsp+0x70],r14d
   14000eca0:	add    DWORD PTR [rsp+0x74],ebp
   14000eca4:	mov    rdx,QWORD PTR [rsp+0x70]
   14000eca9:	call   0x14000fae0
   14000ecae:	test   eax,eax
   14000ecb0:	jne    0x14000ed78
   14000ecb6:	inc    ebx
   14000ecb8:	add    rdi,0x8
   14000ecbc:	cmp    ebx,esi
   14000ecbe:	jl     0x14000ec90
   14000ecc0:	mov    eax,r14d
   14000ecc3:	mov    QWORD PTR [rsp+0x60],r12
   14000ecc8:	mov    r12,QWORD PTR [rsp+0x80]
   14000ecd0:	imul   eax,DWORD PTR [rsp+0x88]
   14000ecd8:	mov    DWORD PTR [r12],eax
   14000ecdc:	mov    eax,ebp
   14000ecde:	imul   eax,DWORD PTR [rsp+0x88]
   14000ece6:	mov    DWORD PTR [r12+0x4],eax
   14000eceb:	mov    rbx,QWORD PTR [r13+0x10]
   14000ecef:	test   esi,esi
   14000ecf1:	jle    0x14000ed27
   14000ecf3:	mov    rdi,rsi
   14000ecf6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000ed00:	mov    rax,QWORD PTR [rbx]
   14000ed03:	mov    rcx,r15
   14000ed06:	mov    QWORD PTR [rsp+0x70],rax
   14000ed0b:	add    DWORD PTR [rsp+0x70],r14d
   14000ed10:	add    DWORD PTR [rsp+0x74],ebp
   14000ed14:	mov    rdx,QWORD PTR [rsp+0x70]
   14000ed19:	call   0x14000fb00
   14000ed1e:	lea    rbx,[rbx+0x8]
   14000ed22:	dec    rdi
   14000ed25:	jne    0x14000ed00
   14000ed27:	cmp    BYTE PTR [rip+0x4678b],0x2        # 0x1400554b9
   14000ed2e:	jb     0x14000ed57
   14000ed30:	call   QWORD PTR [rip+0x2e59a]        # 0x14003d2d0
   14000ed36:	mov    ecx,DWORD PTR [r12+0x4]
   14000ed3b:	mov    r9d,DWORD PTR [r12]
   14000ed3f:	mov    DWORD PTR [rsp+0x20],ecx
   14000ed43:	lea    rdx,[rip+0x2f026]        # 0x14003dd70
   14000ed4a:	lea    rcx,[rax+0x60]
   14000ed4e:	mov    r8d,esi
   14000ed51:	call   QWORD PTR [rip+0x2e569]        # 0x14003d2c0
   14000ed57:	mov    r12,QWORD PTR [rsp+0x60]
   14000ed5c:	mov    eax,0x1
   14000ed61:	mov    rbx,QWORD PTR [rsp+0x68]
   14000ed66:	mov    rbp,QWORD PTR [rsp+0x78]
   14000ed6b:	add    rsp,0x30
   14000ed6f:	pop    r15
   14000ed71:	pop    r14
   14000ed73:	pop    r13
   14000ed75:	pop    rdi
   14000ed76:	pop    rsi
   14000ed77:	ret    
   14000ed78:	xor    eax,eax
   14000ed7a:	jmp    0x14000ed61
   14000ed7c:	int3   
   14000ed7d:	int3   
   14000ed7e:	int3   
   14000ed7f:	int3   
   14000ed80:	mov    QWORD PTR [rsp+0x18],r8
   14000ed85:	mov    QWORD PTR [rsp+0x10],rdx
   14000ed8a:	push   rbp
   14000ed8b:	push   rbx
   14000ed8c:	push   rsi
   14000ed8d:	push   rdi
   14000ed8e:	push   r12
   14000ed90:	push   r13
   14000ed92:	push   r14
   14000ed94:	push   r15
   14000ed96:	mov    rbp,rsp
   14000ed99:	sub    rsp,0x68
   14000ed9d:	mov    rax,rdx
   14000eda0:	test   rcx,rcx
   14000eda3:	mov    r15d,r9d
   14000eda6:	cmovne rax,rcx
   14000edaa:	mov    r12,r8
   14000edad:	mov    r14,rdx
   14000edb0:	mov    QWORD PTR [rbp-0x18],rax
   14000edb4:	call   0x14000fb70
   14000edb9:	mov    ebx,DWORD PTR [r14+0x64]
   14000edbd:	mov    r13d,DWORD PTR [r14+0x60]
   14000edc1:	neg    ebx
   14000edc3:	mov    rcx,r14
   14000edc6:	mov    DWORD PTR [rbp+0x60],ebx
   14000edc9:	mov    rsi,rax
   14000edcc:	neg    r13d
   14000edcf:	call   0x14002a4e0
   14000edd4:	mov    rdi,rax
   14000edd7:	mov    QWORD PTR [rbp-0x30],rax
   14000eddb:	test   rax,rax
   14000edde:	je     0x14000ef61
   14000ede4:	mov    rcx,rdi
   14000ede7:	call   0x14001bb10
   14000edec:	mov    r8d,DWORD PTR [rbp+0x68]
   14000edf0:	mov    QWORD PTR [rbp-0x38],rax
   14000edf4:	movsx  eax,WORD PTR [rdi+0x72]
   14000edf8:	add    DWORD PTR [rbp-0x38],r13d
   14000edfc:	add    DWORD PTR [rbp-0x34],ebx
   14000edff:	cdq    
   14000ee00:	lea    ecx,[r8+0x1]
   14000ee04:	sub    eax,edx
   14000ee06:	sar    eax,1
   14000ee08:	add    ecx,eax
   14000ee0a:	movsx  eax,WORD PTR [rdi+0x74]
   14000ee0e:	mov    DWORD PTR [rbp-0x28],ecx
   14000ee11:	cdq    
   14000ee12:	lea    ecx,[r8+0x1]
   14000ee16:	sub    eax,edx
   14000ee18:	sar    eax,1
   14000ee1a:	add    ecx,eax
   14000ee1c:	mov    DWORD PTR [rbp-0x24],ecx
   14000ee1f:	mov    rdx,QWORD PTR [rbp-0x28]
   14000ee23:	mov    rcx,QWORD PTR [rbp-0x38]
   14000ee27:	call   0x14001d0b0
   14000ee2c:	mov    rdx,QWORD PTR [rbp-0x28]
   14000ee30:	mov    rcx,QWORD PTR [rbp-0x38]
   14000ee34:	mov    QWORD PTR [rbp+0x48],rax
   14000ee38:	call   0x14001b3e0
   14000ee3d:	mov    QWORD PTR [rbp-0x20],rax
   14000ee41:	mov    eax,DWORD PTR [rbp+0x48]
   14000ee44:	cdq    
   14000ee45:	idiv   r15d
   14000ee48:	mov    edi,eax
   14000ee4a:	mov    eax,DWORD PTR [rbp+0x4c]
   14000ee4d:	cdq    
   14000ee4e:	idiv   r15d
   14000ee51:	mov    r12d,eax
   14000ee54:	mov    eax,DWORD PTR [rbp-0x20]
   14000ee57:	cdq    
   14000ee58:	idiv   r15d
   14000ee5b:	mov    ecx,eax
   14000ee5d:	mov    DWORD PTR [rbp+0x48],eax
   14000ee60:	mov    eax,DWORD PTR [rbp-0x1c]
   14000ee63:	cdq    
   14000ee64:	idiv   r15d
   14000ee67:	mov    r14d,eax
   14000ee6a:	cmp    edi,ecx
   14000ee6c:	jg     0x14000ee9d
   14000ee6e:	xchg   ax,ax
   14000ee70:	mov    ebx,r12d
   14000ee73:	cmp    r12d,r14d
   14000ee76:	jg     0x14000ee97
   14000ee78:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ee80:	mov    r8d,ebx
   14000ee83:	mov    edx,edi
   14000ee85:	mov    rcx,rsi
   14000ee88:	call   0x14000fa90
   14000ee8d:	inc    ebx
   14000ee8f:	cmp    ebx,r14d
   14000ee92:	jle    0x14000ee80
   14000ee94:	mov    ecx,DWORD PTR [rbp+0x48]
   14000ee97:	inc    edi
   14000ee99:	cmp    edi,ecx
   14000ee9b:	jle    0x14000ee70
   14000ee9d:	mov    eax,DWORD PTR [rbp-0x38]
   14000eea0:	mov    r12,QWORD PTR [rbp-0x18]
   14000eea4:	cdq    
   14000eea5:	mov    rcx,r12
   14000eea8:	idiv   r15d
   14000eeab:	mov    DWORD PTR [rbp-0x38],eax
   14000eeae:	mov    eax,DWORD PTR [rbp-0x34]
   14000eeb1:	cdq    
   14000eeb2:	idiv   r15d
   14000eeb5:	mov    rdx,QWORD PTR [rbp-0x30]
   14000eeb9:	mov    DWORD PTR [rbp-0x34],eax
   14000eebc:	call   0x14002b830
   14000eec1:	mov    rdi,rax
   14000eec4:	test   rax,rax
   14000eec7:	je     0x14000ef3a
   14000eec9:	mov    rbx,QWORD PTR [rbp-0x38]
   14000eecd:	mov    r14d,DWORD PTR [rbp+0x60]
   14000eed1:	cmp    DWORD PTR [rbp+0x70],0x0
   14000eed5:	je     0x14000eeef
   14000eed7:	mov    r9d,r14d
   14000eeda:	mov    r8d,r13d
   14000eedd:	mov    rdx,rsi
   14000eee0:	mov    rcx,rdi
   14000eee3:	mov    DWORD PTR [rsp+0x20],r15d
   14000eee8:	call   0x14000ea40
   14000eeed:	jmp    0x14000ef27
   14000eeef:	mov    rcx,QWORD PTR [rdi+0x10]
   14000eef3:	call   0x14001bb10
   14000eef8:	mov    r8,rsi
   14000eefb:	mov    QWORD PTR [rbp+0x48],rax
   14000eeff:	mov    eax,DWORD PTR [rbp+0x48]
   14000ef02:	mov    ecx,DWORD PTR [rbp+0x4c]
   14000ef05:	add    eax,r13d
   14000ef08:	add    ecx,r14d
   14000ef0b:	cdq    
   14000ef0c:	idiv   r15d
   14000ef0f:	mov    DWORD PTR [rbp+0x48],eax
   14000ef12:	mov    eax,ecx
   14000ef14:	mov    rcx,rbx
   14000ef17:	cdq    
   14000ef18:	idiv   r15d
   14000ef1b:	mov    DWORD PTR [rbp+0x4c],eax
   14000ef1e:	mov    rdx,QWORD PTR [rbp+0x48]
   14000ef22:	call   0x14000e920
   14000ef27:	mov    rdx,rdi
   14000ef2a:	mov    rcx,r12
   14000ef2d:	call   0x14002b9e0
   14000ef32:	mov    rdi,rax
   14000ef35:	test   rax,rax
   14000ef38:	jne    0x14000eed1
   14000ef3a:	mov    r14,QWORD PTR [rbp+0x50]
   14000ef3e:	mov    rdx,QWORD PTR [rbp-0x30]
   14000ef42:	mov    rcx,r14
   14000ef45:	call   0x14002a5e0
   14000ef4a:	mov    ebx,DWORD PTR [rbp+0x60]
   14000ef4d:	mov    rdi,rax
   14000ef50:	mov    QWORD PTR [rbp-0x30],rax
   14000ef54:	test   rax,rax
   14000ef57:	jne    0x14000ede4
   14000ef5d:	mov    r12,QWORD PTR [rbp+0x58]
   14000ef61:	mov    rcx,rsi
   14000ef64:	mov    QWORD PTR [r12],r14
   14000ef68:	call   0x14000fb90
   14000ef6d:	mov    rcx,rsi
   14000ef70:	mov    QWORD PTR [r12+0x10],rax
   14000ef75:	call   0x14000fc00
   14000ef7a:	mov    r8d,DWORD PTR [rbp+0x68]
   14000ef7e:	mov    DWORD PTR [r12+0x18],eax
   14000ef83:	mov    ecx,DWORD PTR [r14+0x68]
   14000ef87:	mov    ebx,eax
   14000ef89:	sub    ecx,DWORD PTR [r14+0x60]
   14000ef8d:	add    r8d,r8d
   14000ef90:	lea    eax,[r15-0x1]
   14000ef94:	add    ecx,r8d
   14000ef97:	add    eax,ecx
   14000ef99:	mov    ecx,DWORD PTR [r14+0x6c]
   14000ef9d:	sub    ecx,DWORD PTR [r14+0x64]
   14000efa1:	cdq    
   14000efa2:	add    ecx,r8d
   14000efa5:	idiv   r15d
   14000efa8:	mov    edi,eax
   14000efaa:	lea    eax,[r15-0x1]
   14000efae:	add    eax,ecx
   14000efb0:	cdq    
   14000efb1:	idiv   r15d
   14000efb4:	mov    r14d,eax
   14000efb7:	lea    ecx,[rax+rdi*1]
   14000efba:	mov    DWORD PTR [r12+0x8],ecx
   14000efbf:	cmp    BYTE PTR [rip+0x464f3],0x2        # 0x1400554b9
   14000efc6:	jbe    0x14000f032
   14000efc8:	call   QWORD PTR [rip+0x2e302]        # 0x14003d2d0
   14000efce:	mov    r8,QWORD PTR [rbp+0x50]
   14000efd2:	lea    rdx,[rip+0x2ed67]        # 0x14003dd40
   14000efd9:	mov    r8,QWORD PTR [r8+0x10]
   14000efdd:	lea    rcx,[rax+0x60]
   14000efe1:	mov    r9d,ebx
   14000efe4:	mov    DWORD PTR [rsp+0x28],r14d
   14000efe9:	mov    DWORD PTR [rsp+0x20],edi
   14000efed:	call   QWORD PTR [rip+0x2e2cd]        # 0x14003d2c0
   14000eff3:	xor    edi,edi
   14000eff5:	cmp    DWORD PTR [r12+0x18],edi
   14000effa:	jle    0x14000f032
   14000effc:	mov    r14d,edi
   14000efff:	nop
   14000f000:	mov    rbx,QWORD PTR [r12+0x10]
   14000f005:	call   QWORD PTR [rip+0x2e2c5]        # 0x14003d2d0
   14000f00b:	mov    r9d,DWORD PTR [rbx+r14*1+0x4]
   14000f010:	mov    r8d,DWORD PTR [rbx+r14*1]
   14000f014:	lea    rcx,[rax+0x60]
   14000f018:	lea    rdx,[rip+0x2ed41]        # 0x14003dd60
   14000f01f:	call   QWORD PTR [rip+0x2e29b]        # 0x14003d2c0
   14000f025:	inc    edi
   14000f027:	lea    r14,[r14+0x8]
   14000f02b:	cmp    edi,DWORD PTR [r12+0x18]
   14000f030:	jl     0x14000f000
   14000f032:	mov    rcx,rsi
   14000f035:	add    rsp,0x68
   14000f039:	pop    r15
   14000f03b:	pop    r14
   14000f03d:	pop    r13
   14000f03f:	pop    r12
   14000f041:	pop    rdi
   14000f042:	pop    rsi
   14000f043:	pop    rbx
   14000f044:	pop    rbp
   14000f045:	jmp    0x14000fad0
   14000f04a:	int3   
   14000f04b:	int3   
   14000f04c:	int3   
   14000f04d:	int3   
   14000f04e:	int3   
   14000f04f:	int3   
   14000f050:	mov    QWORD PTR [rsp+0x8],rbx
   14000f055:	mov    QWORD PTR [rsp+0x10],rbp
   14000f05a:	mov    QWORD PTR [rsp+0x18],rsi
   14000f05f:	mov    QWORD PTR [rsp+0x20],rdi
   14000f064:	push   r14
   14000f066:	sub    rsp,0x30
   14000f06a:	mov    r14d,DWORD PTR [rsp+0x60]
   14000f06f:	mov    rbx,r8
   14000f072:	mov    rsi,rdx
   14000f075:	mov    DWORD PTR [rsp+0x20],r14d
   14000f07a:	mov    ebp,ecx
   14000f07c:	call   0x14000f420
   14000f081:	mov    rdi,rax
   14000f084:	test   rax,rax
   14000f087:	jne    0x14000f08e
   14000f089:	lea    eax,[rdi+0x1]
   14000f08c:	jmp    0x14000f0b0
   14000f08e:	mov    r9,rbx
   14000f091:	mov    r8,rax
   14000f094:	mov    rdx,rsi
   14000f097:	mov    ecx,ebp
   14000f099:	mov    DWORD PTR [rsp+0x20],r14d
   14000f09e:	call   0x14000f8a0
   14000f0a3:	mov    rcx,rdi
   14000f0a6:	mov    ebx,eax
   14000f0a8:	call   QWORD PTR [rip+0x2e1f2]        # 0x14003d2a0
   14000f0ae:	mov    eax,ebx
   14000f0b0:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f0b5:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f0ba:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f0bf:	mov    rdi,QWORD PTR [rsp+0x58]
   14000f0c4:	add    rsp,0x30
   14000f0c8:	pop    r14
   14000f0ca:	ret    
   14000f0cb:	int3   
   14000f0cc:	int3   
   14000f0cd:	int3   
   14000f0ce:	int3   
   14000f0cf:	int3   
   14000f0d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f0d5:	push   rdi
   14000f0d6:	sub    rsp,0x30
   14000f0da:	mov    eax,DWORD PTR [rsp+0x60]
   14000f0de:	mov    rdi,r8
   14000f0e1:	mov    DWORD PTR [rsp+0x20],eax
   14000f0e5:	call   0x14000f050
   14000f0ea:	mov    rcx,rdi
   14000f0ed:	mov    ebx,eax
   14000f0ef:	call   0x140008c90
   14000f0f4:	mov    eax,ebx
   14000f0f6:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f0fb:	add    rsp,0x30
   14000f0ff:	pop    rdi
   14000f100:	ret    
   14000f101:	int3   
   14000f102:	int3   
   14000f103:	int3   
   14000f104:	int3   
   14000f105:	int3   
   14000f106:	int3   
   14000f107:	int3   
   14000f108:	int3   
   14000f109:	int3   
   14000f10a:	int3   
   14000f10b:	int3   
   14000f10c:	int3   
   14000f10d:	int3   
   14000f10e:	int3   
   14000f10f:	int3   
   14000f110:	rex push rbx
   14000f112:	push   rbp
   14000f113:	push   r14
   14000f115:	push   r15
   14000f117:	sub    rsp,0x38
   14000f11b:	mov    rbp,r9
   14000f11e:	mov    r15,r8
   14000f121:	mov    r14,rdx
   14000f124:	test   ecx,ecx
   14000f126:	jne    0x14000f19f
   14000f128:	mov    r10,QWORD PTR [rdx]
   14000f12b:	mov    r8d,DWORD PTR [rsp+0x80]
   14000f133:	mov    eax,DWORD PTR [rsp+0x88]
   14000f13a:	mov    ecx,DWORD PTR [r10+0x68]
   14000f13e:	lea    ebx,[rax+rax*1]
   14000f141:	mov    eax,DWORD PTR [r10+0x6c]
   14000f145:	sub    eax,DWORD PTR [r10+0x64]
   14000f149:	sub    ecx,DWORD PTR [r10+0x60]
   14000f14d:	mov    DWORD PTR [rsp+0x88],r8d
   14000f155:	dec    eax
   14000f157:	add    ecx,ebx
   14000f159:	mov    QWORD PTR [rsp+0x80],r9
   14000f161:	add    eax,ebx
   14000f163:	mov    r9,r15
   14000f166:	add    eax,r8d
   14000f169:	cdq    
   14000f16a:	idiv   r8d
   14000f16d:	cdq    
   14000f16e:	sub    eax,edx
   14000f170:	sar    eax,1
   14000f172:	neg    eax
   14000f174:	mov    r11d,eax
   14000f177:	lea    eax,[r8-0x1]
   14000f17b:	add    eax,ecx
   14000f17d:	cdq    
   14000f17e:	idiv   r8d
   14000f181:	mov    r8,r14
   14000f184:	cdq    
   14000f185:	sub    eax,edx
   14000f187:	mov    edx,r11d
   14000f18a:	sar    eax,1
   14000f18c:	neg    eax
   14000f18e:	mov    ecx,eax
   14000f190:	add    rsp,0x38
   14000f194:	pop    r15
   14000f196:	pop    r14
   14000f198:	pop    rbp
   14000f199:	pop    rbx
   14000f19a:	jmp    0x14000ec60
   14000f19f:	mov    QWORD PTR [rsp+0x70],r12
   14000f1a4:	mov    r12d,DWORD PTR [rsp+0x80]
   14000f1ac:	xor    ecx,ecx
   14000f1ae:	mov    DWORD PTR [rsp+0x28],r12d
   14000f1b3:	mov    QWORD PTR [rsp+0x20],r9
   14000f1b8:	mov    r9,r8
   14000f1bb:	mov    r8,rdx
   14000f1be:	xor    edx,edx
   14000f1c0:	call   0x14000ec60
   14000f1c5:	test   eax,eax
   14000f1c7:	jne    0x14000f40c
   14000f1cd:	mov    rcx,QWORD PTR [r14]
   14000f1d0:	mov    QWORD PTR [rsp+0x60],rsi
   14000f1d5:	mov    QWORD PTR [rsp+0x68],rdi
   14000f1da:	mov    edx,DWORD PTR [rcx+0x6c]
   14000f1dd:	mov    eax,DWORD PTR [rcx+0x68]
   14000f1e0:	or     esi,0xffffffff
   14000f1e3:	sub    edx,DWORD PTR [rcx+0x64]
   14000f1e6:	sub    eax,DWORD PTR [rcx+0x60]
   14000f1e9:	mov    QWORD PTR [rsp+0x30],r13
   14000f1ee:	mov    r13d,0x1
   14000f1f4:	cmp    eax,edx
   14000f1f6:	jl     0x14000f300
   14000f1fc:	nop    DWORD PTR [rax+0x0]
   14000f200:	xor    ebx,ebx
   14000f202:	mov    edi,esi
   14000f204:	test   r13d,r13d
   14000f207:	jle    0x14000f238
   14000f209:	nop    DWORD PTR [rax+0x0]
   14000f210:	mov    r9,r15
   14000f213:	mov    r8,r14
   14000f216:	mov    edx,esi
   14000f218:	mov    ecx,ebx
   14000f21a:	mov    DWORD PTR [rsp+0x28],r12d
   14000f21f:	mov    QWORD PTR [rsp+0x20],rbp
   14000f224:	call   0x14000ec60
   14000f229:	test   eax,eax
   14000f22b:	jne    0x14000f3fd
   14000f231:	inc    ebx
   14000f233:	cmp    ebx,r13d
   14000f236:	jl     0x14000f210
   14000f238:	cmp    esi,r13d
   14000f23b:	jge    0x14000f268
   14000f23d:	nop    DWORD PTR [rax]
   14000f240:	mov    r9,r15
   14000f243:	mov    r8,r14
   14000f246:	mov    edx,edi
   14000f248:	mov    ecx,ebx
   14000f24a:	mov    DWORD PTR [rsp+0x28],r12d
   14000f24f:	mov    QWORD PTR [rsp+0x20],rbp
   14000f254:	call   0x14000ec60
   14000f259:	test   eax,eax
   14000f25b:	jne    0x14000f3fd
   14000f261:	inc    edi
   14000f263:	cmp    edi,r13d
   14000f266:	jl     0x14000f240
   14000f268:	cmp    ebx,esi
   14000f26a:	jle    0x14000f297
   14000f26c:	nop    DWORD PTR [rax+0x0]
   14000f270:	mov    r9,r15
   14000f273:	mov    r8,r14
   14000f276:	mov    edx,edi
   14000f278:	mov    ecx,ebx
   14000f27a:	mov    DWORD PTR [rsp+0x28],r12d
   14000f27f:	mov    QWORD PTR [rsp+0x20],rbp
   14000f284:	call   0x14000ec60
   14000f289:	test   eax,eax
   14000f28b:	jne    0x14000f3fd
   14000f291:	dec    ebx
   14000f293:	cmp    ebx,esi
   14000f295:	jg     0x14000f270
   14000f297:	cmp    edi,esi
   14000f299:	jle    0x14000f2c7
   14000f29b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f2a0:	mov    r9,r15
   14000f2a3:	mov    r8,r14
   14000f2a6:	mov    edx,edi
   14000f2a8:	mov    ecx,ebx
   14000f2aa:	mov    DWORD PTR [rsp+0x28],r12d
   14000f2af:	mov    QWORD PTR [rsp+0x20],rbp
   14000f2b4:	call   0x14000ec60
   14000f2b9:	test   eax,eax
   14000f2bb:	jne    0x14000f3fd
   14000f2c1:	dec    edi
   14000f2c3:	cmp    edi,esi
   14000f2c5:	jg     0x14000f2a0
   14000f2c7:	test   ebx,ebx
   14000f2c9:	jns    0x14000f2f5
   14000f2cb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f2d0:	mov    r9,r15
   14000f2d3:	mov    r8,r14
   14000f2d6:	mov    edx,edi
   14000f2d8:	mov    ecx,ebx
   14000f2da:	mov    DWORD PTR [rsp+0x28],r12d
   14000f2df:	mov    QWORD PTR [rsp+0x20],rbp
   14000f2e4:	call   0x14000ec60
   14000f2e9:	test   eax,eax
   14000f2eb:	jne    0x14000f3fd
   14000f2f1:	inc    ebx
   14000f2f3:	js     0x14000f2d0
   14000f2f5:	inc    r13d
   14000f2f8:	dec    esi
   14000f2fa:	jmp    0x14000f200
   14000f2ff:	nop
   14000f300:	xor    ebx,ebx
   14000f302:	mov    edi,esi
   14000f304:	test   esi,esi
   14000f306:	jns    0x14000f337
   14000f308:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f310:	mov    r9,r15
   14000f313:	mov    r8,r14
   14000f316:	mov    edx,ebx
   14000f318:	mov    ecx,esi
   14000f31a:	mov    DWORD PTR [rsp+0x28],r12d
   14000f31f:	mov    QWORD PTR [rsp+0x20],rbp
   14000f324:	call   0x14000ec60
   14000f329:	test   eax,eax
   14000f32b:	jne    0x14000f3fd
   14000f331:	dec    ebx
   14000f333:	cmp    ebx,esi
   14000f335:	jg     0x14000f310
   14000f337:	cmp    esi,r13d
   14000f33a:	jge    0x14000f368
   14000f33c:	nop    DWORD PTR [rax+0x0]
   14000f340:	mov    r9,r15
   14000f343:	mov    r8,r14
   14000f346:	mov    edx,ebx
   14000f348:	mov    ecx,edi
   14000f34a:	mov    DWORD PTR [rsp+0x28],r12d
   14000f34f:	mov    QWORD PTR [rsp+0x20],rbp
   14000f354:	call   0x14000ec60
   14000f359:	test   eax,eax
   14000f35b:	jne    0x14000f3fd
   14000f361:	inc    edi
   14000f363:	cmp    edi,r13d
   14000f366:	jl     0x14000f340
   14000f368:	cmp    ebx,r13d
   14000f36b:	jge    0x14000f394
   14000f36d:	nop    DWORD PTR [rax]
   14000f370:	mov    r9,r15
   14000f373:	mov    r8,r14
   14000f376:	mov    edx,ebx
   14000f378:	mov    ecx,edi
   14000f37a:	mov    DWORD PTR [rsp+0x28],r12d
   14000f37f:	mov    QWORD PTR [rsp+0x20],rbp
   14000f384:	call   0x14000ec60
   14000f389:	test   eax,eax
   14000f38b:	jne    0x14000f3fd
   14000f38d:	inc    ebx
   14000f38f:	cmp    ebx,r13d
   14000f392:	jl     0x14000f370
   14000f394:	cmp    edi,esi
   14000f396:	jle    0x14000f3c3
   14000f398:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f3a0:	mov    r9,r15
   14000f3a3:	mov    r8,r14
   14000f3a6:	mov    edx,ebx
   14000f3a8:	mov    ecx,edi
   14000f3aa:	mov    DWORD PTR [rsp+0x28],r12d
   14000f3af:	mov    QWORD PTR [rsp+0x20],rbp
   14000f3b4:	call   0x14000ec60
   14000f3b9:	test   eax,eax
   14000f3bb:	jne    0x14000f3fd
   14000f3bd:	dec    edi
   14000f3bf:	cmp    edi,esi
   14000f3c1:	jg     0x14000f3a0
   14000f3c3:	test   ebx,ebx
   14000f3c5:	jle    0x14000f3f3
   14000f3c7:	nop    WORD PTR [rax+rax*1+0x0]
   14000f3d0:	mov    r9,r15
   14000f3d3:	mov    r8,r14
   14000f3d6:	mov    edx,ebx
   14000f3d8:	mov    ecx,edi
   14000f3da:	mov    DWORD PTR [rsp+0x28],r12d
   14000f3df:	mov    QWORD PTR [rsp+0x20],rbp
   14000f3e4:	call   0x14000ec60
   14000f3e9:	test   eax,eax
   14000f3eb:	jne    0x14000f3fd
   14000f3ed:	dec    ebx
   14000f3ef:	test   ebx,ebx
   14000f3f1:	jg     0x14000f3d0
   14000f3f3:	inc    r13d
   14000f3f6:	dec    esi
   14000f3f8:	jmp    0x14000f300
   14000f3fd:	mov    rsi,QWORD PTR [rsp+0x60]
   14000f402:	mov    rdi,QWORD PTR [rsp+0x68]
   14000f407:	mov    r13,QWORD PTR [rsp+0x30]
   14000f40c:	mov    r12,QWORD PTR [rsp+0x70]
   14000f411:	add    rsp,0x38
   14000f415:	pop    r15
   14000f417:	pop    r14
   14000f419:	pop    rbp
   14000f41a:	pop    rbx
   14000f41b:	ret    
   14000f41c:	int3   
   14000f41d:	int3   
   14000f41e:	int3   
   14000f41f:	int3   
   14000f420:	mov    QWORD PTR [rsp+0x18],r8
   14000f425:	push   rdi
   14000f426:	push   r13
   14000f428:	push   r15
   14000f42a:	sub    rsp,0x90
   14000f431:	mov    r13d,r9d
   14000f434:	mov    r15,rdx
   14000f437:	movsxd rdi,ecx
   14000f43a:	test   ecx,ecx
   14000f43c:	jne    0x14000f44d
   14000f43e:	xor    eax,eax
   14000f440:	add    rsp,0x90
   14000f447:	pop    r15
   14000f449:	pop    r13
   14000f44b:	pop    rdi
   14000f44c:	ret    
   14000f44d:	mov    QWORD PTR [rsp+0xb8],rbx
   14000f455:	mov    QWORD PTR [rsp+0x88],rbp
   14000f45d:	mov    QWORD PTR [rsp+0x80],rsi
   14000f465:	xor    ebp,ebp
   14000f467:	mov    QWORD PTR [rsp+0x78],r12
   14000f46c:	mov    QWORD PTR [rsp+0x70],r14
   14000f471:	movaps XMMWORD PTR [rsp+0x60],xmm6
   14000f476:	mov    r14,rdi
   14000f479:	mov    esi,ebp
   14000f47b:	test   ecx,ecx
   14000f47d:	jle    0x14000f4d2
   14000f47f:	nop
   14000f480:	mov    rcx,QWORD PTR [r15+rsi*8]
   14000f484:	call   0x140008c90
   14000f489:	cmp    BYTE PTR [rip+0x46029],0x2        # 0x1400554b9
   14000f490:	jbe    0x14000f4ca
   14000f492:	mov    rbx,QWORD PTR [r15+rsi*8]
   14000f496:	call   QWORD PTR [rip+0x2de34]        # 0x14003d2d0
   14000f49c:	mov    ecx,DWORD PTR [rbx+0x6c]
   14000f49f:	mov    r9d,DWORD PTR [rbx+0x60]
   14000f4a3:	mov    r8,QWORD PTR [rbx+0x10]
   14000f4a7:	mov    DWORD PTR [rsp+0x30],ecx
   14000f4ab:	mov    ecx,DWORD PTR [rbx+0x68]
   14000f4ae:	lea    rdx,[rip+0x2e8db]        # 0x14003dd90
   14000f4b5:	mov    DWORD PTR [rsp+0x28],ecx
   14000f4b9:	mov    ecx,DWORD PTR [rbx+0x64]
   14000f4bc:	mov    DWORD PTR [rsp+0x20],ecx
   14000f4c0:	lea    rcx,[rax+0x60]
   14000f4c4:	call   QWORD PTR [rip+0x2ddf6]        # 0x14003d2c0
   14000f4ca:	inc    rsi
   14000f4cd:	cmp    rsi,rdi
   14000f4d0:	jl     0x14000f480
   14000f4d2:	test   r13d,r13d
   14000f4d5:	mov    rdx,r15
   14000f4d8:	mov    ecx,edi
   14000f4da:	cmovs  r13d,ebp
   14000f4de:	mov    r8d,r13d
   14000f4e1:	call   0x14000e590
   14000f4e6:	mov    rcx,rdi
   14000f4e9:	shl    rcx,0x5
   14000f4ed:	mov    r12d,eax
   14000f4f0:	mov    DWORD PTR [rsp+0xb0],eax
   14000f4f7:	call   0x14001d2c0
   14000f4fc:	mov    ebx,ebp
   14000f4fe:	mov    QWORD PTR [rsp+0x40],rax
   14000f503:	movq   xmm6,rax
   14000f508:	punpcklqdq xmm6,xmm6
   14000f50c:	test   edi,edi
   14000f50e:	jle    0x14000f573
   14000f510:	mov    r14d,DWORD PTR [rsp+0xb0]
   14000f518:	mov    ebp,DWORD PTR [rsp+0xd0]
   14000f51f:	mov    rsi,rax
   14000f522:	lea    r12,[rax+0x1c]
   14000f526:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000f530:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000f538:	mov    DWORD PTR [r12],ebx
   14000f53c:	mov    rdx,QWORD PTR [r15]
   14000f53f:	mov    r9d,r14d
   14000f542:	mov    r8,rsi
   14000f545:	mov    DWORD PTR [rsp+0x28],ebp
   14000f549:	mov    DWORD PTR [rsp+0x20],r13d
   14000f54e:	call   0x14000ed80
   14000f553:	inc    ebx
   14000f555:	add    rsi,0x20
   14000f559:	lea    r12,[r12+0x20]
   14000f55e:	lea    r15,[r15+0x8]
   14000f562:	cmp    ebx,edi
   14000f564:	jl     0x14000f530
   14000f566:	mov    r12d,DWORD PTR [rsp+0xb0]
   14000f56e:	xor    ebp,ebp
   14000f570:	mov    r14,rdi
   14000f573:	lea    rbx,[r14*8+0x0]
   14000f57b:	mov    rcx,rbx
   14000f57e:	call   0x14001d2c0
   14000f583:	mov    r9d,ebp
   14000f586:	mov    rsi,rax
   14000f589:	mov    QWORD PTR [rsp+0x50],rax
   14000f58e:	test   edi,edi
   14000f590:	jle    0x14000f660
   14000f596:	cmp    edi,0x4
   14000f599:	jb     0x14000f632
   14000f59f:	cmp    DWORD PTR [rip+0x43f4a],0x2        # 0x1400534f0
   14000f5a6:	jl     0x14000f632
   14000f5ac:	movdqa xmm2,XMMWORD PTR [rip+0x2e80c]        # 0x14003ddc0
   14000f5b4:	mov    ecx,edi
   14000f5b6:	and    ecx,0x80000003
   14000f5bc:	jge    0x14000f5c5
   14000f5be:	dec    ecx
   14000f5c0:	or     ecx,0xfffffffc
   14000f5c3:	inc    ecx
   14000f5c5:	mov    edx,edi
   14000f5c7:	mov    eax,0x5
   14000f5cc:	sub    edx,ecx
   14000f5ce:	movd   xmm3,eax
   14000f5d2:	nop    DWORD PTR [rax+0x0]
   14000f5d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000f5e0:	lea    ecx,[r9+0x2]
   14000f5e4:	movd   xmm0,r9d
   14000f5e9:	movsxd rax,r9d
   14000f5ec:	add    r9d,0x4
   14000f5f0:	pshufd xmm0,xmm0,0x0
   14000f5f5:	paddd  xmm0,xmm2
   14000f5f9:	pmovsxdq xmm1,xmm0
   14000f5fe:	psllq  xmm1,xmm3
   14000f602:	movd   xmm0,ecx
   14000f606:	paddq  xmm1,xmm6
   14000f60a:	movdqu XMMWORD PTR [rsi+rax*8],xmm1
   14000f60f:	pshufd xmm0,xmm0,0x0
   14000f614:	movsxd rax,ecx
   14000f617:	paddd  xmm0,xmm2
   14000f61b:	pmovsxdq xmm1,xmm0
   14000f620:	psllq  xmm1,xmm3
   14000f624:	paddq  xmm1,xmm6
   14000f628:	movdqu XMMWORD PTR [rsi+rax*8],xmm1
   14000f62d:	cmp    r9d,edx
   14000f630:	jl     0x14000f5e0
   14000f632:	cmp    r9d,edi
   14000f635:	jge    0x14000f660
   14000f637:	movsxd rdx,r9d
   14000f63a:	mov    eax,edi
   14000f63c:	lea    r8,[rsi+rdx*8]
   14000f640:	shl    rdx,0x5
   14000f644:	add    rdx,QWORD PTR [rsp+0x40]
   14000f649:	sub    eax,r9d
   14000f64c:	mov    r9d,eax
   14000f64f:	nop
   14000f650:	mov    QWORD PTR [r8],rdx
   14000f653:	add    rdx,0x20
   14000f657:	lea    r8,[r8+0x8]
   14000f65b:	dec    r9
   14000f65e:	jne    0x14000f650
   14000f660:	lea    r9,[rip+0xffffffffffffef19]        # 0x14000e580
   14000f667:	mov    r8d,0x8
   14000f66d:	mov    rdx,r14
   14000f670:	mov    rcx,rsi
   14000f673:	call   QWORD PTR [rip+0x2d9cf]        # 0x14003d048
   14000f679:	call   0x14000fb70
   14000f67e:	mov    rcx,rbx
   14000f681:	mov    QWORD PTR [rsp+0x48],rax
   14000f686:	call   0x14001d2c0
   14000f68b:	mov    ebx,ebp
   14000f68d:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   14000f692:	mov    r15,rax
   14000f695:	test   edi,edi
   14000f697:	jle    0x14000f6d0
   14000f699:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f69e:	xchg   ax,ax
   14000f6a0:	mov    rdx,QWORD PTR [rsi]
   14000f6a3:	mov    r8,rbp
   14000f6a6:	mov    DWORD PTR [rsp+0x28],r13d
   14000f6ab:	movsxd rcx,DWORD PTR [rdx+0x1c]
   14000f6af:	mov    DWORD PTR [rsp+0x20],r12d
   14000f6b4:	lea    r9,[r15+rcx*8]
   14000f6b8:	mov    ecx,ebx
   14000f6ba:	call   0x14000f110
   14000f6bf:	inc    ebx
   14000f6c1:	lea    rsi,[rsi+0x8]
   14000f6c5:	cmp    ebx,edi
   14000f6c7:	jl     0x14000f6a0
   14000f6c9:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f6ce:	xor    ebp,ebp
   14000f6d0:	mov    rcx,rsi
   14000f6d3:	call   QWORD PTR [rip+0x2dbc7]        # 0x14003d2a0
   14000f6d9:	mov    r12,QWORD PTR [rsp+0x78]
   14000f6de:	mov    rsi,QWORD PTR [rsp+0x80]
   14000f6e6:	test   r14,r14
   14000f6e9:	jle    0x14000f706
   14000f6eb:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f6f0:	add    rbx,0x10
   14000f6f4:	mov    rcx,QWORD PTR [rbx]
   14000f6f7:	call   QWORD PTR [rip+0x2dba3]        # 0x14003d2a0
   14000f6fd:	lea    rbx,[rbx+0x20]
   14000f701:	dec    r14
   14000f704:	jne    0x14000f6f4
   14000f706:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f70b:	call   QWORD PTR [rip+0x2db8f]        # 0x14003d2a0
   14000f711:	mov    rcx,QWORD PTR [rsp+0x48]
   14000f716:	call   0x14000fad0
   14000f71b:	cmp    BYTE PTR [rip+0x45d97],0x1        # 0x1400554b9
   14000f722:	mov    r14,QWORD PTR [rsp+0x70]
   14000f727:	jbe    0x14000f75e
   14000f729:	test   edi,edi
   14000f72b:	jle    0x14000f75e
   14000f72d:	mov    rbx,r15
   14000f730:	call   QWORD PTR [rip+0x2db9a]        # 0x14003d2d0
   14000f736:	mov    ecx,DWORD PTR [rbx+0x4]
   14000f739:	mov    r9d,DWORD PTR [rbx]
   14000f73c:	mov    DWORD PTR [rsp+0x20],ecx
   14000f740:	lea    rdx,[rip+0x2e661]        # 0x14003dda8
   14000f747:	lea    rcx,[rax+0x60]
   14000f74b:	mov    r8d,ebp
   14000f74e:	call   QWORD PTR [rip+0x2db6c]        # 0x14003d2c0
   14000f754:	inc    ebp
   14000f756:	lea    rbx,[rbx+0x8]
   14000f75a:	cmp    ebp,edi
   14000f75c:	jl     0x14000f730
   14000f75e:	mov    rbp,QWORD PTR [rsp+0x88]
   14000f766:	mov    rbx,QWORD PTR [rsp+0xb8]
   14000f76e:	mov    rax,r15
   14000f771:	add    rsp,0x90
   14000f778:	pop    r15
   14000f77a:	pop    r13
   14000f77c:	pop    rdi
   14000f77d:	ret    
   14000f77e:	int3   
   14000f77f:	int3   
   14000f780:	sub    rsp,0x38
   14000f784:	mov    rax,QWORD PTR [rcx+0x28]
   14000f788:	mov    r9,rcx
   14000f78b:	test   rax,rax
   14000f78e:	je     0x14000f88e
   14000f794:	xor    r11d,r11d
   14000f797:	cmp    DWORD PTR [rax+0x8],r11d
   14000f79b:	jle    0x14000f852
   14000f7a1:	mov    r10d,r11d
   14000f7a4:	nop    DWORD PTR [rax+0x0]
   14000f7a8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f7b0:	mov    rax,QWORD PTR [rax]
   14000f7b3:	movups xmm0,XMMWORD PTR [r10+rax*1]
   14000f7b8:	movups xmm1,XMMWORD PTR [r10+rax*1+0x10]
   14000f7be:	movups xmm2,xmm0
   14000f7c1:	movups XMMWORD PTR [rsp],xmm0
   14000f7c5:	movsd  xmm0,QWORD PTR [r10+rax*1+0x20]
   14000f7cc:	psrldq xmm2,0x8
   14000f7d1:	movsd  QWORD PTR [rsp+0x20],xmm0
   14000f7d7:	movups XMMWORD PTR [rsp+0x10],xmm1
   14000f7dc:	movd   ecx,xmm2
   14000f7e0:	test   ecx,ecx
   14000f7e2:	jle    0x14000f7ff
   14000f7e4:	mov    rax,QWORD PTR [rsp]
   14000f7e8:	mov    ecx,ecx
   14000f7ea:	nop    WORD PTR [rax+rax*1+0x0]
   14000f7f0:	add    DWORD PTR [rax],edx
   14000f7f2:	add    DWORD PTR [rax+0x4],r8d
   14000f7f6:	lea    rax,[rax+0x8]
   14000f7fa:	dec    rcx
   14000f7fd:	jne    0x14000f7f0
   14000f7ff:	cmp    DWORD PTR [rsp+0xc],0x0
   14000f804:	je     0x14000f81e
   14000f806:	mov    rax,QWORD PTR [r9+0x28]
   14000f80a:	mov    rcx,QWORD PTR [rax]
   14000f80d:	add    DWORD PTR [rcx+r10*1+0x14],edx
   14000f812:	mov    rax,QWORD PTR [r9+0x28]
   14000f816:	mov    rcx,QWORD PTR [rax]
   14000f819:	add    DWORD PTR [rcx+r10*1+0x18],r8d
   14000f81e:	cmp    DWORD PTR [rsp+0x10],0x0
   14000f823:	je     0x14000f83d
   14000f825:	mov    rax,QWORD PTR [r9+0x28]
   14000f829:	mov    rcx,QWORD PTR [rax]
   14000f82c:	add    DWORD PTR [rcx+r10*1+0x1c],edx
   14000f831:	mov    rax,QWORD PTR [r9+0x28]
   14000f835:	mov    rcx,QWORD PTR [rax]
   14000f838:	add    DWORD PTR [rcx+r10*1+0x20],r8d
   14000f83d:	mov    rax,QWORD PTR [r9+0x28]
   14000f841:	inc    r11d
   14000f844:	add    r10,0x28
   14000f848:	cmp    r11d,DWORD PTR [rax+0x8]
   14000f84c:	jl     0x14000f7b0
   14000f852:	mov    rax,QWORD PTR [r9+0x60]
   14000f856:	test   rax,rax
   14000f859:	je     0x14000f866
   14000f85b:	add    DWORD PTR [rax+0x30],edx
   14000f85e:	mov    rax,QWORD PTR [r9+0x60]
   14000f862:	add    DWORD PTR [rax+0x34],r8d
   14000f866:	mov    rax,QWORD PTR [r9+0x68]
   14000f86a:	test   rax,rax
   14000f86d:	je     0x14000f87a
   14000f86f:	add    DWORD PTR [rax+0x30],edx
   14000f872:	mov    rax,QWORD PTR [r9+0x68]
   14000f876:	add    DWORD PTR [rax+0x34],r8d
   14000f87a:	mov    rax,QWORD PTR [r9+0x70]
   14000f87e:	test   rax,rax
   14000f881:	je     0x14000f88e
   14000f883:	add    DWORD PTR [rax+0x30],edx
   14000f886:	mov    rax,QWORD PTR [r9+0x70]
   14000f88a:	add    DWORD PTR [rax+0x34],r8d
   14000f88e:	add    rsp,0x38
   14000f892:	ret    
   14000f893:	int3   
   14000f894:	int3   
   14000f895:	int3   
   14000f896:	int3   
   14000f897:	int3   
   14000f898:	int3   
   14000f899:	int3   
   14000f89a:	int3   
   14000f89b:	int3   
   14000f89c:	int3   
   14000f89d:	int3   
   14000f89e:	int3   
   14000f89f:	int3   
   14000f8a0:	mov    QWORD PTR [rsp+0x20],r9
   14000f8a5:	push   r12
   14000f8a7:	sub    rsp,0x80
   14000f8ae:	mov    r12,r8
   14000f8b1:	mov    rax,rdx
   14000f8b4:	test   ecx,ecx
   14000f8b6:	jg     0x14000f8c9
   14000f8b8:	mov    eax,ecx
   14000f8ba:	cdq    
   14000f8bb:	xor    eax,edx
   14000f8bd:	sub    eax,edx
   14000f8bf:	add    rsp,0x80
   14000f8c6:	pop    r12
   14000f8c8:	ret    
   14000f8c9:	mov    QWORD PTR [rsp+0x60],r13
   14000f8ce:	movsxd r13,ecx
   14000f8d1:	test   ecx,ecx
   14000f8d3:	jle    0x14000fa45
   14000f8d9:	mov    QWORD PTR [rsp+0x90],rbx
   14000f8e1:	mov    QWORD PTR [rsp+0x78],rbp
   14000f8e6:	mov    QWORD PTR [rsp+0x70],rsi
   14000f8eb:	mov    QWORD PTR [rsp+0x68],rdi
   14000f8f0:	mov    QWORD PTR [rsp+0x58],r14
   14000f8f5:	mov    QWORD PTR [rsp+0x50],r15
   14000f8fa:	movaps XMMWORD PTR [rsp+0x40],xmm6
   14000f8ff:	movaps XMMWORD PTR [rsp+0x30],xmm7
   14000f904:	movaps XMMWORD PTR [rsp+0x20],xmm8
   14000f90a:	movsd  xmm8,QWORD PTR [rip+0x2db75]        # 0x14003d488
   14000f913:	sub    rax,r8
   14000f916:	mov    QWORD PTR [rsp+0x98],rax
   14000f91e:	xchg   ax,ax
   14000f920:	mov    r15,QWORD PTR [rax+r12*1]
   14000f924:	mov    rbx,QWORD PTR [r12]
   14000f928:	test   r9,r9
   14000f92b:	mov    ebp,ebx
   14000f92d:	mov    r14,r15
   14000f930:	mov    rcx,r15
   14000f933:	cmovne r14,r9
   14000f937:	sub    ebp,DWORD PTR [r15+0x60]
   14000f93b:	shr    rbx,0x20
   14000f93f:	sub    ebx,DWORD PTR [r15+0x64]
   14000f943:	movd   xmm6,ebp
   14000f947:	movd   xmm7,ebx
   14000f94b:	cvtdq2pd xmm6,xmm6
   14000f94f:	divsd  xmm6,xmm8
   14000f954:	cvtdq2pd xmm7,xmm7
   14000f958:	divsd  xmm7,xmm8
   14000f95d:	call   0x14002a4e0
   14000f962:	mov    rsi,rax
   14000f965:	test   rax,rax
   14000f968:	je     0x14000f9f7
   14000f96e:	xchg   ax,ax
   14000f970:	cmp    DWORD PTR [rsp+0xb0],0x0
   14000f978:	mov    rcx,QWORD PTR [rsi+0x88]
   14000f97f:	movaps xmm0,xmm6
   14000f982:	addsd  xmm0,QWORD PTR [rcx]
   14000f986:	movsd  QWORD PTR [rcx],xmm0
   14000f98a:	movaps xmm0,xmm7
   14000f98d:	mov    rcx,QWORD PTR [rsi+0x88]
   14000f994:	addsd  xmm0,QWORD PTR [rcx+0x8]
   14000f999:	movsd  QWORD PTR [rcx+0x8],xmm0
   14000f99e:	je     0x14000f9e0
   14000f9a0:	add    DWORD PTR [rsi+0x38],ebp
   14000f9a3:	add    DWORD PTR [rsi+0x3c],ebx
   14000f9a6:	mov    rdx,rsi
   14000f9a9:	mov    rcx,r14
   14000f9ac:	call   0x14002b830
   14000f9b1:	mov    rdi,rax
   14000f9b4:	test   rax,rax
   14000f9b7:	je     0x14000f9e0
   14000f9b9:	nop    DWORD PTR [rax+0x0]
   14000f9c0:	mov    r8d,ebx
   14000f9c3:	mov    edx,ebp
   14000f9c5:	mov    rcx,rdi
   14000f9c8:	call   0x14000f780
   14000f9cd:	mov    rdx,rdi
   14000f9d0:	mov    rcx,r14
   14000f9d3:	call   0x14002b9e0
   14000f9d8:	mov    rdi,rax
   14000f9db:	test   rax,rax
   14000f9de:	jne    0x14000f9c0
   14000f9e0:	mov    rdx,rsi
   14000f9e3:	mov    rcx,r15
   14000f9e6:	call   0x14002a5e0
   14000f9eb:	mov    rsi,rax
   14000f9ee:	test   rax,rax
   14000f9f1:	jne    0x14000f970
   14000f9f7:	mov    rax,QWORD PTR [rsp+0x98]
   14000f9ff:	mov    r9,QWORD PTR [rsp+0xa8]
   14000fa07:	add    r12,0x8
   14000fa0b:	dec    r13
   14000fa0e:	jne    0x14000f920
   14000fa14:	movaps xmm8,XMMWORD PTR [rsp+0x20]
   14000fa1a:	movaps xmm7,XMMWORD PTR [rsp+0x30]
   14000fa1f:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   14000fa24:	mov    r15,QWORD PTR [rsp+0x50]
   14000fa29:	mov    r14,QWORD PTR [rsp+0x58]
   14000fa2e:	mov    rdi,QWORD PTR [rsp+0x68]
   14000fa33:	mov    rsi,QWORD PTR [rsp+0x70]
   14000fa38:	mov    rbp,QWORD PTR [rsp+0x78]
   14000fa3d:	mov    rbx,QWORD PTR [rsp+0x90]
   14000fa45:	xor    eax,eax
   14000fa47:	mov    r13,QWORD PTR [rsp+0x60]
   14000fa4c:	add    rsp,0x80
   14000fa53:	pop    r12
   14000fa55:	ret    
   14000fa56:	int3   
   14000fa57:	int3   
   14000fa58:	int3   
   14000fa59:	int3   
   14000fa5a:	int3   
   14000fa5b:	int3   
   14000fa5c:	int3   
   14000fa5d:	int3   
   14000fa5e:	int3   
   14000fa5f:	int3   
   14000fa60:	mov    eax,DWORD PTR [rdx]
   14000fa62:	mov    ecx,DWORD PTR [r8]
   14000fa65:	cmp    eax,ecx
   14000fa67:	jle    0x14000fa6f
   14000fa69:	mov    eax,0x1
   14000fa6e:	ret    
   14000fa6f:	jge    0x14000fa75
   14000fa71:	or     eax,0xffffffff
   14000fa74:	ret    
   14000fa75:	mov    ecx,DWORD PTR [rdx+0x4]
   14000fa78:	mov    edx,DWORD PTR [r8+0x4]
   14000fa7c:	cmp    ecx,edx
   14000fa7e:	jg     0x14000fa69
   14000fa80:	xor    eax,eax
   14000fa82:	cmp    ecx,edx
   14000fa84:	setge  al
   14000fa87:	dec    eax
   14000fa89:	ret    
   14000fa8a:	int3   
   14000fa8b:	int3   
   14000fa8c:	int3   
   14000fa8d:	int3   
   14000fa8e:	int3   
   14000fa8f:	int3   
   14000fa90:	rex push rbx
   14000fa92:	sub    rsp,0x20
   14000fa96:	mov    rbx,rcx
   14000fa99:	mov    ecx,0x18
   14000fa9e:	mov    DWORD PTR [rsp+0x30],edx
   14000faa2:	mov    DWORD PTR [rsp+0x34],r8d
   14000faa7:	call   0x14001d2c0
   14000faac:	mov    rdx,QWORD PTR [rsp+0x30]
   14000fab1:	mov    QWORD PTR [rax+0x10],rdx
   14000fab5:	mov    r8d,0x1
   14000fabb:	mov    rcx,rbx
   14000fabe:	mov    rdx,rax
   14000fac1:	mov    rax,QWORD PTR [rbx]
   14000fac4:	add    rsp,0x20
   14000fac8:	pop    rbx
   14000fac9:	rex.W jmp rax
   14000facc:	int3   
   14000facd:	int3   
   14000face:	int3   
   14000facf:	int3   
   14000fad0:	jmp    0x14002c860
   14000fad5:	int3   
   14000fad6:	int3   
   14000fad7:	int3   
   14000fad8:	int3   
   14000fad9:	int3   
   14000fada:	int3   
   14000fadb:	int3   
   14000fadc:	int3   
   14000fadd:	int3   
   14000fade:	int3   
   14000fadf:	int3   
   14000fae0:	sub    rsp,0x48
   14000fae4:	mov    QWORD PTR [rsp+0x30],rdx
   14000fae9:	lea    rdx,[rsp+0x20]
   14000faee:	mov    r8d,0x4
   14000faf4:	call   QWORD PTR [rcx]
   14000faf6:	add    rsp,0x48
   14000fafa:	ret    
   14000fafb:	int3   
   14000fafc:	int3   
   14000fafd:	int3   
   14000fafe:	int3   
   14000faff:	int3   
   14000fb00:	mov    QWORD PTR [rsp+0x10],rdx
   14000fb05:	push   rbx
   14000fb06:	sub    rsp,0x20
   14000fb0a:	mov    rbx,rcx
   14000fb0d:	mov    ecx,0x18
   14000fb12:	call   0x14001d2c0
   14000fb17:	mov    rdx,QWORD PTR [rsp+0x38]
   14000fb1c:	mov    r8d,0x1
   14000fb22:	mov    QWORD PTR [rax+0x10],rdx
   14000fb26:	mov    rdx,rax
   14000fb29:	mov    rcx,rbx
   14000fb2c:	call   QWORD PTR [rbx]
   14000fb2e:	add    rsp,0x20
   14000fb32:	pop    rbx
   14000fb33:	ret    
   14000fb34:	int3   
   14000fb35:	int3   
   14000fb36:	int3   
   14000fb37:	int3   
   14000fb38:	int3   
   14000fb39:	int3   
   14000fb3a:	int3   
   14000fb3b:	int3   
   14000fb3c:	int3   
   14000fb3d:	int3   
   14000fb3e:	int3   
   14000fb3f:	int3   
   14000fb40:	mov    QWORD PTR [rsp+0x8],rcx
   14000fb45:	sub    rsp,0x28
   14000fb49:	mov    ecx,0x18
   14000fb4e:	call   0x14001d2c0
   14000fb53:	mov    rcx,QWORD PTR [rsp+0x30]
   14000fb58:	mov    QWORD PTR [rax+0x10],rcx
   14000fb5c:	add    rsp,0x28
   14000fb60:	ret    
   14000fb61:	int3   
   14000fb62:	int3   
   14000fb63:	int3   
   14000fb64:	int3   
   14000fb65:	int3   
   14000fb66:	int3   
   14000fb67:	int3   
   14000fb68:	int3   
   14000fb69:	int3   
   14000fb6a:	int3   
   14000fb6b:	int3   
   14000fb6c:	int3   
   14000fb6d:	int3   
   14000fb6e:	int3   
   14000fb6f:	int3   
   14000fb70:	mov    rdx,QWORD PTR [rip+0x41ed9]        # 0x140051a50
   14000fb77:	lea    rcx,[rip+0x3c4c2]        # 0x14004c040
   14000fb7e:	jmp    0x14002c900
   14000fb83:	int3   
   14000fb84:	int3   
   14000fb85:	int3   
   14000fb86:	int3   
   14000fb87:	int3   
   14000fb88:	int3   
   14000fb89:	int3   
   14000fb8a:	int3   
   14000fb8b:	int3   
   14000fb8c:	int3   
   14000fb8d:	int3   
   14000fb8e:	int3   
   14000fb8f:	int3   
   14000fb90:	mov    QWORD PTR [rsp+0x8],rbx
   14000fb95:	mov    QWORD PTR [rsp+0x10],rsi
   14000fb9a:	push   rdi
   14000fb9b:	sub    rsp,0x20
   14000fb9f:	mov    rbx,rcx
   14000fba2:	call   0x14002c770
   14000fba7:	movsxd rcx,eax
   14000fbaa:	shl    rcx,0x3
   14000fbae:	call   0x14001d2c0
   14000fbb3:	mov    rcx,rbx
   14000fbb6:	mov    rsi,rax
   14000fbb9:	mov    rdi,rax
   14000fbbc:	call   0x14002daf0
   14000fbc1:	test   rax,rax
   14000fbc4:	je     0x14000fbe4
   14000fbc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000fbd0:	mov    rcx,QWORD PTR [rax+0x10]
   14000fbd4:	lea    rdi,[rdi+0x8]
   14000fbd8:	mov    QWORD PTR [rdi-0x8],rcx
   14000fbdc:	mov    rax,QWORD PTR [rax]
   14000fbdf:	test   rax,rax
   14000fbe2:	jne    0x14000fbd0
   14000fbe4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fbe9:	mov    rax,rsi
   14000fbec:	mov    rsi,QWORD PTR [rsp+0x38]
   14000fbf1:	add    rsp,0x20
   14000fbf5:	pop    rdi
   14000fbf6:	ret    
   14000fbf7:	int3   
   14000fbf8:	int3   
   14000fbf9:	int3   
   14000fbfa:	int3   
   14000fbfb:	int3   
   14000fbfc:	int3   
   14000fbfd:	int3   
   14000fbfe:	int3   
   14000fbff:	int3   
   14000fc00:	jmp    0x14002c770
   14000fc05:	int3   
   14000fc06:	int3   
   14000fc07:	int3   
   14000fc08:	int3   
   14000fc09:	int3   
   14000fc0a:	int3   
   14000fc0b:	int3   
   14000fc0c:	int3   
   14000fc0d:	int3   
   14000fc0e:	int3   
   14000fc0f:	int3   
   14000fc10:	mov    QWORD PTR [rsp+0x8],rbx
   14000fc15:	mov    QWORD PTR [rsp+0x10],rdx
   14000fc1a:	push   rbp
   14000fc1b:	push   rsi
   14000fc1c:	push   rdi
   14000fc1d:	push   r12
   14000fc1f:	push   r13
   14000fc21:	push   r14
   14000fc23:	push   r15
   14000fc25:	sub    rsp,0xa0
   14000fc2c:	xor    r14d,r14d
   14000fc2f:	mov    rbx,r8
   14000fc32:	mov    r12,rdx
   14000fc35:	mov    rsi,rcx
   14000fc38:	mov    DWORD PTR [rsp+0xf0],0xa
   14000fc43:	test   r8,r8
   14000fc46:	je     0x14000fc71
   14000fc48:	movzx  eax,BYTE PTR [r8]
   14000fc4c:	mov    rdi,rbx
   14000fc4f:	test   al,al
   14000fc51:	je     0x14000fc78
   14000fc53:	lea    rdi,[rdi+0x1]
   14000fc57:	cmp    al,0x5f
   14000fc59:	je     0x14000fc68
   14000fc5b:	movsx  ecx,al
   14000fc5e:	call   QWORD PTR [rip+0x2d46c]        # 0x14003d0d0
   14000fc64:	test   eax,eax
   14000fc66:	je     0x14000fc71
   14000fc68:	movzx  eax,BYTE PTR [rdi]
   14000fc6b:	test   al,al
   14000fc6d:	jne    0x14000fc53
   14000fc6f:	jmp    0x14000fc78
   14000fc71:	lea    rbx,[rip+0x2e158]        # 0x14003ddd0
   14000fc78:	or     r15,0xffffffffffffffff
   14000fc7c:	nop    DWORD PTR [rax+0x0]
   14000fc80:	inc    r15
   14000fc83:	cmp    BYTE PTR [rbx+r15*1],r14b
   14000fc87:	jne    0x14000fc80
   14000fc89:	lea    eax,[r15+0x19]
   14000fc8d:	cmp    eax,0x80
   14000fc92:	jg     0x14000fc9b
   14000fc94:	lea    rbp,[rsp+0x20]
   14000fc99:	jmp    0x14000fca7
   14000fc9b:	movsxd rcx,eax
   14000fc9e:	call   QWORD PTR [rip+0x2d4c4]        # 0x14003d168
   14000fca4:	mov    rbp,rax
   14000fca7:	mov    rdx,rbp
   14000fcaa:	mov    QWORD PTR [rsp+0xf8],rbp
   14000fcb2:	sub    rdx,rbx
   14000fcb5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000fcc0:	movzx  ecx,BYTE PTR [rbx]
   14000fcc3:	lea    rbx,[rbx+0x1]
   14000fcc7:	mov    BYTE PTR [rdx+rbx*1-0x1],cl
   14000fccb:	test   cl,cl
   14000fccd:	jne    0x14000fcc0
   14000fccf:	mov    rcx,rsi
   14000fcd2:	call   0x14002a4e0
   14000fcd7:	test   rax,rax
   14000fcda:	je     0x14000fcf7
   14000fcdc:	nop    DWORD PTR [rax+0x0]
   14000fce0:	mov    rdx,rax
   14000fce3:	mov    rcx,rsi
   14000fce6:	mov    BYTE PTR [rax+0x9c],r14b
   14000fced:	call   0x14002a5e0
   14000fcf2:	test   rax,rax
   14000fcf5:	jne    0x14000fce0
   14000fcf7:	mov    ecx,0x50
   14000fcfc:	call   QWORD PTR [rip+0x2d466]        # 0x14003d168
   14000fd02:	mov    rcx,rsi
   14000fd05:	mov    r13,rax
   14000fd08:	call   0x14002a4e0
   14000fd0d:	mov    rdi,rax
   14000fd10:	test   rax,rax
   14000fd13:	je     0x14000fe0e
   14000fd19:	mov    r12,r14
   14000fd1c:	nop    DWORD PTR [rax+0x0]
   14000fd20:	cmp    BYTE PTR [rdi+0x9c],0x0
   14000fd27:	jne    0x14000fdef
   14000fd2d:	movsxd rcx,r15d
   14000fd30:	lea    rdx,[rip+0x2d85d]        # 0x14003d594
   14000fd37:	mov    r8d,r14d
   14000fd3a:	add    rcx,rbp
   14000fd3d:	call   QWORD PTR [rip+0x2d36d]        # 0x14003d0b0
   14000fd43:	mov    rdx,rbp
   14000fd46:	mov    rcx,rsi
   14000fd49:	call   0x14002afe0
   14000fd4e:	mov    rdx,rdi
   14000fd51:	mov    BYTE PTR [rdi+0x9c],0x1
   14000fd58:	mov    rcx,rax
   14000fd5b:	mov    rbp,rax
   14000fd5e:	call   0x14002add0
   14000fd63:	mov    rdx,rdi
   14000fd66:	mov    rcx,rsi
   14000fd69:	call   0x14002b780
   14000fd6e:	mov    rbx,rax
   14000fd71:	test   rax,rax
   14000fd74:	je     0x14000fdb4
   14000fd76:	mov    rdx,QWORD PTR [rbx+0x18]
   14000fd7a:	cmp    rdx,rdi
   14000fd7d:	jne    0x14000fd83
   14000fd7f:	mov    rdx,QWORD PTR [rbx+0x10]
   14000fd83:	cmp    BYTE PTR [rdx+0x9c],0x0
   14000fd8a:	jne    0x14000fd9e
   14000fd8c:	lea    r8,[rip+0x17d]        # 0x14000ff10
   14000fd93:	mov    r9,rbp
   14000fd96:	mov    rcx,rsi
   14000fd99:	call   0x14000fe70
   14000fd9e:	mov    r8,rdi
   14000fda1:	mov    rdx,rbx
   14000fda4:	mov    rcx,rsi
   14000fda7:	call   0x14002b890
   14000fdac:	mov    rbx,rax
   14000fdaf:	test   rax,rax
   14000fdb2:	jne    0x14000fd76
   14000fdb4:	mov    eax,DWORD PTR [rsp+0xf0]
   14000fdbb:	cmp    r14d,eax
   14000fdbe:	jne    0x14000fddc
   14000fdc0:	add    eax,eax
   14000fdc2:	mov    rcx,r13
   14000fdc5:	movsxd rdx,eax
   14000fdc8:	mov    DWORD PTR [rsp+0xf0],eax
   14000fdcf:	shl    rdx,0x3
   14000fdd3:	call   QWORD PTR [rip+0x2d2cf]        # 0x14003d0a8
   14000fdd9:	mov    r13,rax
   14000fddc:	mov    QWORD PTR [r12+r13*1],rbp
   14000fde0:	mov    rbp,QWORD PTR [rsp+0xf8]
   14000fde8:	inc    r14d
   14000fdeb:	add    r12,0x8
   14000fdef:	mov    rdx,rdi
   14000fdf2:	mov    rcx,rsi
   14000fdf5:	call   0x14002a5e0
   14000fdfa:	mov    rdi,rax
   14000fdfd:	test   rax,rax
   14000fe00:	jne    0x14000fd20
   14000fe06:	mov    r12,QWORD PTR [rsp+0xe8]
   14000fe0e:	movsxd rdx,r14d
   14000fe11:	mov    rcx,r13
   14000fe14:	shl    rdx,0x3
   14000fe18:	call   QWORD PTR [rip+0x2d28a]        # 0x14003d0a8
   14000fe1e:	mov    rbx,rax
   14000fe21:	lea    rax,[rsp+0x20]
   14000fe26:	cmp    rbp,rax
   14000fe29:	je     0x14000fe34
   14000fe2b:	mov    rcx,rbp
   14000fe2e:	call   QWORD PTR [rip+0x2d46c]        # 0x14003d2a0
   14000fe34:	mov    rax,rbx
   14000fe37:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000fe3f:	mov    DWORD PTR [r12],r14d
   14000fe43:	add    rsp,0xa0
   14000fe4a:	pop    r15
   14000fe4c:	pop    r14
   14000fe4e:	pop    r13
   14000fe50:	pop    r12
   14000fe52:	pop    rdi
   14000fe53:	pop    rsi
   14000fe54:	pop    rbp
   14000fe55:	ret    
   14000fe56:	int3   
   14000fe57:	int3   
   14000fe58:	int3   
   14000fe59:	int3   
   14000fe5a:	int3   
   14000fe5b:	int3   
   14000fe5c:	int3   
   14000fe5d:	int3   
   14000fe5e:	int3   
   14000fe5f:	int3   
   14000fe60:	inc    DWORD PTR [rdx]
   14000fe62:	ret    
   14000fe63:	int3   
   14000fe64:	int3   
   14000fe65:	int3   
   14000fe66:	int3   
   14000fe67:	int3   
   14000fe68:	int3   
   14000fe69:	int3   
   14000fe6a:	int3   
   14000fe6b:	int3   
   14000fe6c:	int3   
   14000fe6d:	int3   
   14000fe6e:	int3   
   14000fe6f:	int3   
   14000fe70:	mov    QWORD PTR [rsp+0x8],rbx
   14000fe75:	mov    QWORD PTR [rsp+0x10],rbp
   14000fe7a:	mov    QWORD PTR [rsp+0x20],rsi
   14000fe7f:	mov    QWORD PTR [rsp+0x18],r8
   14000fe84:	push   rdi
   14000fe85:	sub    rsp,0x20
   14000fe89:	mov    rdi,rdx
   14000fe8c:	mov    rsi,rcx
   14000fe8f:	mov    BYTE PTR [rdx+0x9c],0x1
   14000fe96:	mov    rax,r8
   14000fe99:	mov    rdx,r9
   14000fe9c:	mov    rcx,rdi
   14000fe9f:	mov    rbp,r9
   14000fea2:	call   rax
   14000fea4:	mov    rdx,rdi
   14000fea7:	mov    rcx,rsi
   14000feaa:	call   0x14002b780
   14000feaf:	mov    rbx,rax
   14000feb2:	test   rax,rax
   14000feb5:	je     0x14000fef3
   14000feb7:	mov    rdx,QWORD PTR [rbx+0x18]
   14000febb:	cmp    rdx,rdi
   14000febe:	jne    0x14000fec4
   14000fec0:	mov    rdx,QWORD PTR [rbx+0x10]
   14000fec4:	cmp    BYTE PTR [rdx+0x9c],0x0
   14000fecb:	jne    0x14000fedd
   14000fecd:	mov    r8,QWORD PTR [rsp+0x40]
   14000fed2:	mov    r9,rbp
   14000fed5:	mov    rcx,rsi
   14000fed8:	call   0x14000fe70
   14000fedd:	mov    r8,rdi
   14000fee0:	mov    rdx,rbx
   14000fee3:	mov    rcx,rsi
   14000fee6:	call   0x14002b890
   14000feeb:	mov    rbx,rax
   14000feee:	test   rax,rax
   14000fef1:	jne    0x14000feb7
   14000fef3:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fef8:	mov    rbp,QWORD PTR [rsp+0x38]
   14000fefd:	mov    rsi,QWORD PTR [rsp+0x48]
   14000ff02:	add    rsp,0x20
   14000ff06:	pop    rdi
   14000ff07:	ret    
   14000ff08:	int3   
   14000ff09:	int3   
   14000ff0a:	int3   
   14000ff0b:	int3   
   14000ff0c:	int3   
   14000ff0d:	int3   
   14000ff0e:	int3   
   14000ff0f:	int3   
   14000ff10:	mov    rax,rdx
   14000ff13:	mov    rdx,rcx
   14000ff16:	mov    rcx,rax
   14000ff19:	jmp    0x14002add0
   14000ff1e:	int3   
   14000ff1f:	int3   
   14000ff20:	mov    QWORD PTR [rsp+0x18],rbp
   14000ff25:	push   rsi
   14000ff26:	push   rdi
   14000ff27:	push   r14
   14000ff29:	sub    rsp,0x20
   14000ff2d:	xor    r14d,r14d
   14000ff30:	mov    rdi,rcx
   14000ff33:	mov    ebp,0x1
   14000ff38:	mov    DWORD PTR [rsp+0x48],r14d
   14000ff3d:	call   0x14002a4e0
   14000ff42:	test   rax,rax
   14000ff45:	je     0x14000ff67
   14000ff47:	nop    WORD PTR [rax+rax*1+0x0]
   14000ff50:	mov    rdx,rax
   14000ff53:	mov    rcx,rdi
   14000ff56:	mov    BYTE PTR [rax+0x9c],r14b
   14000ff5d:	call   0x14002a5e0
   14000ff62:	test   rax,rax
   14000ff65:	jne    0x14000ff50
   14000ff67:	mov    rcx,rdi
   14000ff6a:	call   0x14002a4e0
   14000ff6f:	mov    rsi,rax
   14000ff72:	test   rax,rax
   14000ff75:	je     0x14000fff5
   14000ff77:	mov    BYTE PTR [rax+0x9c],bpl
   14000ff7e:	inc    DWORD PTR [rsp+0x48]
   14000ff82:	mov    rdx,rax
   14000ff85:	mov    rcx,rdi
   14000ff88:	mov    QWORD PTR [rsp+0x40],rbx
   14000ff8d:	call   0x14002b780
   14000ff92:	mov    rbx,rax
   14000ff95:	test   rax,rax
   14000ff98:	je     0x14000ffe0
   14000ff9a:	nop    WORD PTR [rax+rax*1+0x0]
   14000ffa0:	mov    rdx,QWORD PTR [rbx+0x18]
   14000ffa4:	cmp    rdx,rsi
   14000ffa7:	jne    0x14000ffad
   14000ffa9:	mov    rdx,QWORD PTR [rbx+0x10]
   14000ffad:	cmp    BYTE PTR [rdx+0x9c],r14b
   14000ffb4:	jne    0x14000ffca
   14000ffb6:	lea    r9,[rsp+0x48]
   14000ffbb:	lea    r8,[rip+0xfffffffffffffe9e]        # 0x14000fe60
   14000ffc2:	mov    rcx,rdi
   14000ffc5:	call   0x14000fe70
   14000ffca:	mov    r8,rsi
   14000ffcd:	mov    rdx,rbx
   14000ffd0:	mov    rcx,rdi
   14000ffd3:	call   0x14002b890
   14000ffd8:	mov    rbx,rax
   14000ffdb:	test   rax,rax
   14000ffde:	jne    0x14000ffa0
   14000ffe0:	mov    rcx,rdi
   14000ffe3:	call   0x14002aef0
   14000ffe8:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ffed:	cmp    DWORD PTR [rsp+0x48],eax
   14000fff1:	cmovne ebp,r14d
   14000fff5:	mov    eax,ebp
   14000fff7:	mov    rbp,QWORD PTR [rsp+0x50]
   14000fffc:	add    rsp,0x20
   140010000:	pop    r14
   140010002:	pop    rdi
   140010003:	pop    rsi
   140010004:	ret    
   140010005:	int3   
   140010006:	int3   
   140010007:	int3   
   140010008:	int3   
   140010009:	int3   
   14001000a:	int3   
   14001000b:	int3   
   14001000c:	int3   
   14001000d:	int3   
   14001000e:	int3   
   14001000f:	int3   
   140010010:	rex push rbx
   140010012:	sub    rsp,0x20
   140010016:	movzx  eax,BYTE PTR [rcx]
   140010019:	mov    rbx,rcx
   14001001c:	test   al,al
   14001001e:	je     0x14001003c
   140010020:	lea    rbx,[rbx+0x1]
   140010024:	cmp    al,0x5f
   140010026:	je     0x140010035
   140010028:	movsx  ecx,al
   14001002b:	call   QWORD PTR [rip+0x2d09f]        # 0x14003d0d0
   140010031:	test   eax,eax
   140010033:	je     0x140010047
   140010035:	movzx  eax,BYTE PTR [rbx]
   140010038:	test   al,al
   14001003a:	jne    0x140010020
   14001003c:	mov    eax,0x1
   140010041:	add    rsp,0x20
   140010045:	pop    rbx
   140010046:	ret    
   140010047:	xor    eax,eax
   140010049:	add    rsp,0x20
   14001004d:	pop    rbx
   14001004e:	ret    
   14001004f:	int3   
   140010050:	mov    QWORD PTR [rsp+0x10],rbp
   140010055:	mov    QWORD PTR [rsp+0x18],rsi
   14001005a:	mov    QWORD PTR [rsp+0x20],rdi
   14001005f:	push   r14
   140010061:	sub    rsp,0x20
   140010065:	mov    rbp,QWORD PTR [rcx+0x38]
   140010069:	mov    rsi,rcx
   14001006c:	xor    edi,edi
   14001006e:	call   0x14002a4e0
   140010073:	mov    r14,rax
   140010076:	test   rax,rax
   140010079:	je     0x1400100db
   14001007b:	mov    QWORD PTR [rsp+0x30],rbx
   140010080:	mov    rdx,r14
   140010083:	mov    rcx,rbp
   140010086:	call   0x14002b830
   14001008b:	mov    rbx,rax
   14001008e:	test   rax,rax
   140010091:	je     0x1400100c3
   140010093:	mov    rdx,QWORD PTR [rbx+0x10]
   140010097:	mov    rcx,rsi
   14001009a:	call   0x14002ac40
   14001009f:	test   eax,eax
   1400100a1:	je     0x1400100b0
   1400100a3:	mov    rdx,rbx
   1400100a6:	mov    rcx,rsi
   1400100a9:	call   0x14002add0
   1400100ae:	inc    edi
   1400100b0:	mov    rdx,rbx
   1400100b3:	mov    rcx,rbp
   1400100b6:	call   0x14002b9e0
   1400100bb:	mov    rbx,rax
   1400100be:	test   rax,rax
   1400100c1:	jne    0x140010093
   1400100c3:	mov    rdx,r14
   1400100c6:	mov    rcx,rsi
   1400100c9:	call   0x14002a5e0
   1400100ce:	mov    r14,rax
   1400100d1:	test   rax,rax
   1400100d4:	jne    0x140010080
   1400100d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400100db:	mov    rbp,QWORD PTR [rsp+0x38]
   1400100e0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400100e5:	mov    eax,edi
   1400100e7:	mov    rdi,QWORD PTR [rsp+0x48]
   1400100ec:	add    rsp,0x20
   1400100f0:	pop    r14
   1400100f2:	ret    
   1400100f3:	int3   
   1400100f4:	int3   
   1400100f5:	int3   
   1400100f6:	int3   
   1400100f7:	int3   
   1400100f8:	int3   
   1400100f9:	int3   
   1400100fa:	int3   
   1400100fb:	int3   
   1400100fc:	int3   
   1400100fd:	int3   
   1400100fe:	int3   
   1400100ff:	int3   
   140010100:	mov    rax,QWORD PTR [rip+0x3bf89]        # 0x14004c090
   140010107:	test   ecx,ecx
   140010109:	cmovne rax,QWORD PTR [rip+0x3bf77]        # 0x14004c088
   140010111:	ret    
   140010112:	int3   
   140010113:	int3   
   140010114:	int3   
   140010115:	int3   
   140010116:	int3   
   140010117:	int3   
   140010118:	int3   
   140010119:	int3   
   14001011a:	int3   
   14001011b:	int3   
   14001011c:	int3   
   14001011d:	int3   
   14001011e:	int3   
   14001011f:	int3   
   140010120:	rex push rbx
   140010122:	sub    rsp,0x20
   140010126:	lea    rdx,[rip+0x2de7b]        # 0x14003dfa8
   14001012d:	mov    rbx,rcx
   140010130:	call   QWORD PTR [rip+0x2cfa2]        # 0x14003d0d8
   140010136:	test   rax,rax
   140010139:	jne    0x140010150
   14001013b:	mov    rcx,rbx
   14001013e:	call   QWORD PTR [rip+0x2cf9c]        # 0x14003d0e0
   140010144:	mov    ecx,0x1
   140010149:	call   QWORD PTR [rip+0x2cf29]        # 0x14003d078
   14001014f:	int3   
   140010150:	add    rsp,0x20
   140010154:	pop    rbx
   140010155:	ret    
   140010156:	int3   
   140010157:	int3   
   140010158:	int3   
   140010159:	int3   
   14001015a:	int3   
   14001015b:	int3   
   14001015c:	int3   
   14001015d:	int3   
   14001015e:	int3   
   14001015f:	int3   
   140010160:	mov    QWORD PTR [rsp+0x20],rbx
   140010165:	push   rbp
   140010166:	push   r14
   140010168:	push   r15
   14001016a:	sub    rsp,0x30
   14001016e:	xor    r15d,r15d
   140010171:	movsxd rbp,ecx
   140010174:	mov    r8d,0x1
   14001017a:	mov    r14,rdx
   14001017d:	mov    r9d,r15d
   140010180:	cmp    r8,rbp
   140010183:	jge    0x140010199
   140010185:	mov    rax,QWORD PTR [rdx+r8*8]
   140010189:	cmp    BYTE PTR [rax],0x2d
   14001018c:	je     0x140010191
   14001018e:	inc    r9d
   140010191:	inc    r8
   140010194:	cmp    r8,rbp
   140010197:	jl     0x140010185
   140010199:	mov    QWORD PTR [rsp+0x50],rsi
   14001019e:	lea    eax,[r9+0x1]
   1400101a2:	mov    QWORD PTR [rsp+0x58],rdi
   1400101a7:	movsxd rcx,eax
   1400101aa:	mov    QWORD PTR [rsp+0x60],r12
   1400101af:	shl    rcx,0x3
   1400101b3:	movaps XMMWORD PTR [rsp+0x20],xmm6
   1400101b8:	call   QWORD PTR [rip+0x2cfaa]        # 0x14003d168
   1400101be:	mov    ebx,0x1
   1400101c3:	mov    QWORD PTR [rip+0x452fe],rax        # 0x1400554c8
   1400101ca:	cmp    ebp,ebx
   1400101cc:	jle    0x1400103c5
   1400101d2:	lea    r12,[rip+0xfffffffffffefe27]        # 0x140000000
   1400101d9:	xorps  xmm6,xmm6
   1400101dc:	nop    DWORD PTR [rax+0x0]
   1400101e0:	movsxd rax,ebx
   1400101e3:	mov    rcx,QWORD PTR [r14+rax*8]
   1400101e7:	cmp    BYTE PTR [rcx],0x2d
   1400101ea:	jne    0x1400103ab
   1400101f0:	movsx  esi,BYTE PTR [rcx+0x1]
   1400101f4:	lea    rdi,[rcx+0x2]
   1400101f8:	lea    eax,[rsi-0x3f]
   1400101fb:	cmp    eax,0x39
   1400101fe:	ja     0x14001038f
   140010204:	cdqe   
   140010206:	movzx  eax,BYTE PTR [r12+rax*1+0x1047c]
   14001020f:	mov    ecx,DWORD PTR [r12+rax*4+0x10444]
   140010217:	add    rcx,r12
   14001021a:	jmp    rcx
   14001021c:	cmp    BYTE PTR [rdi],0x0
   14001021f:	jne    0x14001022a
   140010221:	inc    ebx
   140010223:	movsxd rax,ebx
   140010226:	mov    rdi,QWORD PTR [r14+rax*8]
   14001022a:	lea    rdx,[rip+0x2dd77]        # 0x14003dfa8
   140010231:	mov    rcx,rdi
   140010234:	call   QWORD PTR [rip+0x2ce9e]        # 0x14003d0d8
   14001023a:	test   rax,rax
   14001023d:	je     0x140010403
   140010243:	mov    QWORD PTR [rip+0x452a6],rax        # 0x1400554f0
   14001024a:	jmp    0x1400103bb
   14001024f:	mov    DWORD PTR [rip+0x434ff],0x1        # 0x140053758
   140010259:	cmp    BYTE PTR [rdi],0x0
   14001025c:	je     0x1400103bb
   140010262:	mov    rcx,rdi
   140010265:	call   QWORD PTR [rip+0x2cdd5]        # 0x14003d040
   14001026b:	movsd  QWORD PTR [rip+0x3be0d],xmm0        # 0x14004c080
   140010273:	jmp    0x1400103bb
   140010278:	mov    DWORD PTR [rip+0x434d2],0x1        # 0x140053754
   140010282:	jmp    0x1400103bb
   140010287:	mov    DWORD PTR [rip+0x434cb],0x1        # 0x14005375c
   140010291:	jmp    0x1400103bb
   140010296:	mov    DWORD PTR [rip+0x434b0],0x1        # 0x140053750
   1400102a0:	jmp    0x1400103bb
   1400102a5:	mov    DWORD PTR [rip+0x4349d],0x1        # 0x14005374c
   1400102af:	jmp    0x1400103bb
   1400102b4:	cmp    BYTE PTR [rdi],0x0
   1400102b7:	je     0x1400102cd
   1400102b9:	mov    rcx,rdi
   1400102bc:	call   QWORD PTR [rip+0x2cdc6]        # 0x14003d088
   1400102c2:	mov    DWORD PTR [rip+0x451f1],eax        # 0x1400554b9
   1400102c8:	jmp    0x1400103bb
   1400102cd:	mov    DWORD PTR [rip+0x451e2],0x1        # 0x1400554b9
   1400102d7:	jmp    0x1400103bb
   1400102dc:	cmp    BYTE PTR [rdi],0x0
   1400102df:	jne    0x1400102ea
   1400102e1:	inc    ebx
   1400102e3:	movsxd rax,ebx
   1400102e6:	mov    rdi,QWORD PTR [r14+rax*8]
   1400102ea:	mov    rcx,rdi
   1400102ed:	call   QWORD PTR [rip+0x2cd4d]        # 0x14003d040
   1400102f3:	movsd  QWORD PTR [rip+0x43465],xmm0        # 0x140053760
   1400102fb:	jmp    0x1400103bb
   140010300:	cmp    BYTE PTR [rdi],0x0
   140010303:	jne    0x14001030e
   140010305:	inc    ebx
   140010307:	movsxd rax,ebx
   14001030a:	mov    rdi,QWORD PTR [r14+rax*8]
   14001030e:	mov    rcx,rdi
   140010311:	call   QWORD PTR [rip+0x2cd29]        # 0x14003d040
   140010317:	comisd xmm0,xmm6
   14001031b:	jbe    0x1400103bb
   140010321:	movsd  QWORD PTR [rip+0x3bd87],xmm0        # 0x14004c0b0
   140010329:	jmp    0x1400103bb
   14001032e:	cmp    BYTE PTR [rdi],0x0
   140010331:	jne    0x14001033c
   140010333:	inc    ebx
   140010335:	movsxd rax,ebx
   140010338:	mov    rdi,QWORD PTR [r14+rax*8]
   14001033c:	mov    rcx,rdi
   14001033f:	call   QWORD PTR [rip+0x2ccfb]        # 0x14003d040
   140010345:	movsd  QWORD PTR [rip+0x451f3],xmm0        # 0x140055540
   14001034d:	jmp    0x1400103bb
   14001034f:	cmp    BYTE PTR [rdi],0x0
   140010352:	jne    0x14001035d
   140010354:	inc    ebx
   140010356:	movsxd rax,ebx
   140010359:	mov    rdi,QWORD PTR [r14+rax*8]
   14001035d:	mov    rcx,rdi
   140010360:	call   QWORD PTR [rip+0x2ccda]        # 0x14003d040
   140010366:	movsd  QWORD PTR [rip+0x451ca],xmm0        # 0x140055538
   14001036e:	jmp    0x1400103bb
   140010370:	cmp    BYTE PTR [rdi],0x0
   140010373:	jne    0x14001037e
   140010375:	inc    ebx
   140010377:	movsxd rax,ebx
   14001037a:	mov    rdi,QWORD PTR [r14+rax*8]
   14001037e:	mov    rcx,rdi
   140010381:	call   QWORD PTR [rip+0x2cd01]        # 0x14003d088
   140010387:	mov    DWORD PTR [rip+0x451a7],eax        # 0x140055534
   14001038d:	jmp    0x1400103bb
   14001038f:	call   QWORD PTR [rip+0x2cf3b]        # 0x14003d2d0
   140010395:	lea    rdx,[rip+0x2dc14]        # 0x14003dfb0
   14001039c:	mov    r8d,esi
   14001039f:	lea    rcx,[rax+0x60]
   1400103a3:	call   QWORD PTR [rip+0x2cf17]        # 0x14003d2c0
   1400103a9:	jmp    0x1400103bb
   1400103ab:	mov    rax,QWORD PTR [rip+0x45116]        # 0x1400554c8
   1400103b2:	add    r15,0x8
   1400103b6:	mov    QWORD PTR [r15+rax*1-0x8],rcx
   1400103bb:	inc    ebx
   1400103bd:	cmp    ebx,ebp
   1400103bf:	jl     0x1400101e0
   1400103c5:	cmp    QWORD PTR [rip+0x45123],0x0        # 0x1400554f0
   1400103cd:	jne    0x1400103e0
   1400103cf:	call   QWORD PTR [rip+0x2cefb]        # 0x14003d2d0
   1400103d5:	add    rax,0x30
   1400103d9:	mov    QWORD PTR [rip+0x45110],rax        # 0x1400554f0
   1400103e0:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   1400103e5:	mov    r12,QWORD PTR [rsp+0x60]
   1400103ea:	mov    rdi,QWORD PTR [rsp+0x58]
   1400103ef:	mov    rsi,QWORD PTR [rsp+0x50]
   1400103f4:	mov    rbx,QWORD PTR [rsp+0x68]
   1400103f9:	add    rsp,0x30
   1400103fd:	pop    r15
   1400103ff:	pop    r14
   140010401:	pop    rbp
   140010402:	ret    
   140010403:	mov    rcx,rdi
   140010406:	call   QWORD PTR [rip+0x2ccd4]        # 0x14003d0e0
   14001040c:	mov    ecx,0x1
   140010411:	call   QWORD PTR [rip+0x2cc61]        # 0x14003d078
   140010417:	int3   
   140010418:	mov    r9d,DWORD PTR [rip+0x3bc89]        # 0x14004c0a8
   14001041f:	mov    r8d,DWORD PTR [rip+0x3bc7e]        # 0x14004c0a4
   140010426:	mov    edx,DWORD PTR [rip+0x3bc74]        # 0x14004c0a0
   14001042c:	mov    rcx,QWORD PTR [rip+0x3bc65]        # 0x14004c098
   140010433:	call   QWORD PTR [rip+0x2cc37]        # 0x14003d070
   140010439:	xor    ecx,ecx
   14001043b:	call   QWORD PTR [rip+0x2cc37]        # 0x14003d078
   140010441:	int3   
   140010442:	xchg   ax,ax
   140010444:	sbb    BYTE PTR [rcx+rax*1],al
   140010447:	add    BYTE PTR [rdi+0x2],cl
   14001044a:	add    DWORD PTR [rax],eax
   14001044c:	xchg   esi,eax
   14001044d:	add    al,BYTE PTR [rcx]
   14001044f:	add    BYTE PTR [rax+0x2],bh
   140010452:	add    DWORD PTR [rax],eax
   140010454:	xchg   DWORD PTR [rdx],eax
   140010456:	add    DWORD PTR [rax],eax
   140010458:	rex.WRXB add r8,QWORD PTR [r9]
   14001045b:	add    ah,bl
   14001045d:	add    al,BYTE PTR [rcx]
   14001045f:	add    BYTE PTR [rax+0x3],dh
   140010462:	add    DWORD PTR [rax],eax
   140010464:	sbb    al,0x2
   140010466:	add    DWORD PTR [rax],eax
   140010468:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010469:	add    al,BYTE PTR [rcx]
   14001046b:	add    BYTE PTR [rdx+rax*1+0x32e0001],dh
   140010472:	add    DWORD PTR [rax],eax
   140010474:	add    BYTE PTR [rbx],al
   140010476:	add    DWORD PTR [rax],eax
   140010478:	pop    QWORD PTR [rbx]
   14001047a:	add    DWORD PTR [rax],eax
   14001047c:	add    BYTE PTR [rip+0xd020d01],cl        # 0x14d031183
   140010482:	or     eax,0xd0d030d
   140010487:	or     eax,0xd0d0d0d
   14001048c:	or     eax,0x40d0d0d
   140010491:	or     eax,0xd0d0d0d
   140010496:	or     eax,0xd0d0d0d
   14001049b:	or     eax,0xd0d0d0d
   1400104a0:	or     eax,0xd0d0d0d
   1400104a5:	add    eax,0xd060d0d
   1400104aa:	or     eax,0xd090807
   1400104af:	or     eax,0xa0d0d0d
   1400104b4:	or     ecx,DWORD PTR [rsp+rcx*8]
   1400104b7:	int3   
   1400104b8:	int3   
   1400104b9:	int3   
   1400104ba:	int3   
   1400104bb:	int3   
   1400104bc:	int3   
   1400104bd:	int3   
   1400104be:	int3   
   1400104bf:	int3   
   1400104c0:	rex push rbx
   1400104c2:	sub    rsp,0x30
   1400104c6:	mov    r8,QWORD PTR [rip+0x3bbc3]        # 0x14004c090
   1400104cd:	cmp    DWORD PTR [rip+0x4327c],0x0        # 0x140053750
   1400104d4:	lea    rdx,[rip+0x2daf5]        # 0x14003dfd0
   1400104db:	cmovne r8,QWORD PTR [rip+0x3bba5]        # 0x14004c088
   1400104e3:	mov    rbx,rcx
   1400104e6:	call   QWORD PTR [rip+0x2cdd4]        # 0x14003d2c0
   1400104ec:	mov    r8,QWORD PTR [rip+0x3bb9d]        # 0x14004c090
   1400104f3:	cmp    DWORD PTR [rip+0x43262],0x0        # 0x14005375c
   1400104fa:	cmovne r8,QWORD PTR [rip+0x3bb86]        # 0x14004c088
   140010502:	lea    rdx,[rip+0x2dae7]        # 0x14003dff0
   140010509:	mov    rcx,rbx
   14001050c:	call   QWORD PTR [rip+0x2cdae]        # 0x14003d2c0
   140010512:	mov    r8,QWORD PTR [rip+0x3bb77]        # 0x14004c090
   140010519:	cmp    DWORD PTR [rip+0x43234],0x0        # 0x140053754
   140010520:	cmovne r8,QWORD PTR [rip+0x3bb60]        # 0x14004c088
   140010528:	lea    rdx,[rip+0x2dad9]        # 0x14003e008
   14001052f:	mov    rcx,rbx
   140010532:	call   QWORD PTR [rip+0x2cd88]        # 0x14003d2c0
   140010538:	mov    r8d,DWORD PTR [rip+0x44f7a]        # 0x1400554b9
   14001053f:	lea    rdx,[rip+0x2dada]        # 0x14003e020
   140010546:	mov    rcx,rbx
   140010549:	call   QWORD PTR [rip+0x2cd71]        # 0x14003d2c0
   14001054f:	mov    eax,DWORD PTR [rip+0x44fdf]        # 0x140055534
   140010555:	lea    rdx,[rip+0x2dadc]        # 0x14003e038
   14001055c:	movsd  xmm3,QWORD PTR [rip+0x44fd4]        # 0x140055538
   140010564:	movsd  xmm2,QWORD PTR [rip+0x44fd4]        # 0x140055540
   14001056c:	movq   r9,xmm3
   140010571:	movq   r8,xmm2
   140010576:	mov    rcx,rbx
   140010579:	mov    DWORD PTR [rsp+0x20],eax
   14001057d:	call   QWORD PTR [rip+0x2cd3d]        # 0x14003d2c0
   140010583:	add    rsp,0x30
   140010587:	pop    rbx
   140010588:	ret    
   140010589:	int3   
   14001058a:	int3   
   14001058b:	int3   
   14001058c:	int3   
   14001058d:	int3   
   14001058e:	int3   
   14001058f:	int3   
   140010590:	sub    rsp,0x28
   140010594:	mov    r9d,DWORD PTR [rip+0x3bb0d]        # 0x14004c0a8
   14001059b:	mov    r8d,DWORD PTR [rip+0x3bb02]        # 0x14004c0a4
   1400105a2:	mov    edx,DWORD PTR [rip+0x3baf8]        # 0x14004c0a0
   1400105a8:	mov    rcx,QWORD PTR [rip+0x3bae9]        # 0x14004c098
   1400105af:	call   QWORD PTR [rip+0x2cabb]        # 0x14003d070
   1400105b5:	xor    ecx,ecx
   1400105b7:	call   QWORD PTR [rip+0x2cabb]        # 0x14003d078
   1400105bd:	int3   
   1400105be:	int3   
   1400105bf:	int3   
   1400105c0:	mov    ecx,DWORD PTR [rip+0x44f6e]        # 0x140055534
   1400105c6:	mov    eax,ecx
   1400105c8:	sub    eax,DWORD PTR [rip+0x44f62]        # 0x140055530
   1400105ce:	movd   xmm1,ecx
   1400105d2:	movd   xmm0,eax
   1400105d6:	cvtdq2pd xmm1,xmm1
   1400105da:	cvtdq2pd xmm0,xmm0
   1400105de:	mulsd  xmm0,QWORD PTR [rip+0x44f1a]        # 0x140055500
   1400105e6:	divsd  xmm0,xmm1
   1400105ea:	ret    
   1400105eb:	int3   
   1400105ec:	int3   
   1400105ed:	int3   
   1400105ee:	int3   
   1400105ef:	int3   
   1400105f0:	sub    rsp,0x48
   1400105f4:	movaps XMMWORD PTR [rsp+0x30],xmm6
   1400105f9:	movsd  xmm6,QWORD PTR [rip+0x44f3f]        # 0x140055540
   140010601:	xorps  xmm1,xmm1
   140010604:	ucomisd xmm6,xmm1
   140010608:	jp     0x140010620
   14001060a:	jne    0x140010620
   14001060c:	movd   xmm6,DWORD PTR [rip+0x3ba90]        # 0x14004c0a4
   140010614:	cvtdq2pd xmm6,xmm6
   140010618:	movsd  QWORD PTR [rip+0x44f20],xmm6        # 0x140055540
   140010620:	movsd  xmm2,QWORD PTR [rip+0x44f10]        # 0x140055538
   140010628:	ucomisd xmm2,xmm1
   14001062c:	jp     0x140010644
   14001062e:	jne    0x140010644
   140010630:	movd   xmm2,DWORD PTR [rip+0x3ba68]        # 0x14004c0a0
   140010638:	cvtdq2pd xmm2,xmm2
   14001063c:	movsd  QWORD PTR [rip+0x44ef4],xmm2        # 0x140055538
   140010644:	mov    eax,DWORD PTR [rip+0x44eea]        # 0x140055534
   14001064a:	movsd  xmm0,QWORD PTR [rip+0x4310e]        # 0x140053760
   140010652:	test   eax,eax
   140010654:	cmove  eax,DWORD PTR [rip+0x3ba4d]        # 0x14004c0a8
   14001065b:	mov    DWORD PTR [rip+0x44ed3],eax        # 0x140055534
   140010661:	comisd xmm0,xmm1
   140010665:	ja     0x14001067f
   140010667:	mulsd  xmm2,xmm6
   14001066b:	movd   xmm1,ecx
   14001066f:	cvtdq2pd xmm1,xmm1
   140010673:	divsd  xmm2,xmm1
   140010677:	movaps xmm0,xmm2
   14001067a:	call   0x14003b8ae
   14001067f:	cmp    DWORD PTR [rip+0x44e33],0x0        # 0x1400554b9
   140010686:	divsd  xmm6,QWORD PTR [rip+0x2d392]        # 0x14003da20
   14001068e:	movaps xmm1,xmm0
   140010691:	movsd  QWORD PTR [rip+0x44e77],xmm0        # 0x140055510
   140010699:	mulsd  xmm1,xmm0
   14001069d:	movsd  QWORD PTR [rip+0x44e5b],xmm6        # 0x140055500
   1400106a5:	movsd  QWORD PTR [rip+0x44e5b],xmm1        # 0x140055508
   1400106ad:	movaps xmm1,xmm0
   1400106b0:	mulsd  xmm1,QWORD PTR [rip+0x2da40]        # 0x14003e0f8
   1400106b8:	mulsd  xmm1,xmm0
   1400106bc:	mulsd  xmm0,QWORD PTR [rip+0x2d01c]        # 0x14003d6e0
   1400106c4:	movsd  QWORD PTR [rip+0x44e5c],xmm1        # 0x140055528
   1400106cc:	movsd  QWORD PTR [rip+0x44e4c],xmm0        # 0x140055520
   1400106d4:	movsd  QWORD PTR [rip+0x44e3c],xmm0        # 0x140055518
   1400106dc:	je     0x14001072b
   1400106de:	call   QWORD PTR [rip+0x2cbec]        # 0x14003d2d0
   1400106e4:	movsd  xmm3,QWORD PTR [rip+0x44e4c]        # 0x140055538
   1400106ec:	movsd  xmm2,QWORD PTR [rip+0x44e4c]        # 0x140055540
   1400106f4:	lea    rdx,[rip+0x2d9d5]        # 0x14003e0d0
   1400106fb:	lea    rcx,[rax+0x60]
   1400106ff:	movsd  xmm0,QWORD PTR [rip+0x44df9]        # 0x140055500
   140010707:	movsd  xmm1,QWORD PTR [rip+0x44e01]        # 0x140055510
   14001070f:	movq   r9,xmm3
   140010714:	movq   r8,xmm2
   140010719:	movsd  QWORD PTR [rsp+0x28],xmm0
   14001071f:	movsd  QWORD PTR [rsp+0x20],xmm1
   140010725:	call   QWORD PTR [rip+0x2cb95]        # 0x14003d2c0
   14001072b:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140010730:	add    rsp,0x48
   140010734:	ret    
   140010735:	int3   
   140010736:	int3   
   140010737:	int3   
   140010738:	int3   
   140010739:	int3   
   14001073a:	int3   
   14001073b:	int3   
   14001073c:	int3   
   14001073d:	int3   
   14001073e:	int3   
   14001073f:	int3   
   140010740:	sub    rsp,0x38
   140010744:	call   QWORD PTR [rip+0x2cb86]        # 0x14003d2d0
   14001074a:	mov    r8d,DWORD PTR [rip+0x44de3]        # 0x140055534
   140010751:	lea    rdx,[rip+0x2d918]        # 0x14003e070
   140010758:	lea    rcx,[rax+0x60]
   14001075c:	call   QWORD PTR [rip+0x2cb5e]        # 0x14003d2c0
   140010762:	call   QWORD PTR [rip+0x2cb68]        # 0x14003d2d0
   140010768:	lea    rdx,[rip+0x2d911]        # 0x14003e080
   14001076f:	movsd  xmm3,QWORD PTR [rip+0x44dc1]        # 0x140055538
   140010777:	movsd  xmm2,QWORD PTR [rip+0x44dc1]        # 0x140055540
   14001077f:	movq   r9,xmm3
   140010784:	movq   r8,xmm2
   140010789:	lea    rcx,[rax+0x60]
   14001078d:	call   QWORD PTR [rip+0x2cb2d]        # 0x14003d2c0
   140010793:	call   QWORD PTR [rip+0x2cb37]        # 0x14003d2d0
   140010799:	lea    rdx,[rip+0x2d8f8]        # 0x14003e098
   1400107a0:	movsd  xmm3,QWORD PTR [rip+0x44d70]        # 0x140055518
   1400107a8:	movsd  xmm2,QWORD PTR [rip+0x44d70]        # 0x140055520
   1400107b0:	movq   r9,xmm3
   1400107b5:	movq   r8,xmm2
   1400107ba:	lea    rcx,[rax+0x60]
   1400107be:	call   QWORD PTR [rip+0x2cafc]        # 0x14003d2c0
   1400107c4:	call   QWORD PTR [rip+0x2cb06]        # 0x14003d2d0
   1400107ca:	lea    rdx,[rip+0x2d8df]        # 0x14003e0b0
   1400107d1:	movsd  xmm3,QWORD PTR [rip+0x44d37]        # 0x140055510
   1400107d9:	movsd  xmm2,QWORD PTR [rip+0x44d47]        # 0x140055528
   1400107e1:	movsd  xmm0,QWORD PTR [rip+0x44d17]        # 0x140055500
   1400107e9:	movq   r9,xmm3
   1400107ee:	movq   r8,xmm2
   1400107f3:	lea    rcx,[rax+0x60]
   1400107f7:	movsd  QWORD PTR [rsp+0x20],xmm0
   1400107fd:	call   QWORD PTR [rip+0x2cabd]        # 0x14003d2c0
   140010803:	add    rsp,0x38
   140010807:	ret    
   140010808:	int3   
   140010809:	int3   
   14001080a:	int3   
   14001080b:	int3   
   14001080c:	int3   
   14001080d:	int3   
   14001080e:	int3   
   14001080f:	int3   
   140010810:	movsd  xmm1,QWORD PTR [rip+0x2cbc8]        # 0x14003d3e0
   140010818:	subsd  xmm1,xmm0
   14001081c:	movaps xmm0,xmm1
   14001081f:	mulsd  xmm0,xmm1
   140010823:	mulsd  xmm0,xmm1
   140010827:	ret    
   140010828:	int3   
   140010829:	int3   
   14001082a:	int3   
   14001082b:	int3   
   14001082c:	int3   
   14001082d:	int3   
   14001082e:	int3   
   14001082f:	int3   
   140010830:	movsd  xmm1,QWORD PTR [rip+0x2cba8]        # 0x14003d3e0
   140010838:	subsd  xmm1,xmm0
   14001083c:	mulsd  xmm0,QWORD PTR [rip+0x2cd0c]        # 0x14003d550
   140010844:	addsd  xmm0,xmm1
   140010848:	mulsd  xmm1,xmm1
   14001084c:	mulsd  xmm0,xmm1
   140010850:	ret    
   140010851:	int3   
   140010852:	int3   
   140010853:	int3   
   140010854:	int3   
   140010855:	int3   
   140010856:	int3   
   140010857:	int3   
   140010858:	int3   
   140010859:	int3   
   14001085a:	int3   
   14001085b:	int3   
   14001085c:	int3   
   14001085d:	int3   
   14001085e:	int3   
   14001085f:	int3   
   140010860:	movsd  xmm1,QWORD PTR [rip+0x2cb78]        # 0x14003d3e0
   140010868:	subsd  xmm1,xmm0
   14001086c:	mulsd  xmm0,QWORD PTR [rip+0x2ccdc]        # 0x14003d550
   140010874:	mulsd  xmm0,xmm1
   140010878:	mulsd  xmm0,xmm1
   14001087c:	ret    
   14001087d:	int3   
   14001087e:	int3   
   14001087f:	int3   
   140010880:	movsd  xmm1,QWORD PTR [rip+0x2cb58]        # 0x14003d3e0
   140010888:	movaps xmm2,xmm0
   14001088b:	mulsd  xmm2,QWORD PTR [rip+0x2ccbd]        # 0x14003d550
   140010893:	subsd  xmm1,xmm0
   140010897:	mulsd  xmm2,xmm0
   14001089b:	mulsd  xmm2,xmm1
   14001089f:	movaps xmm0,xmm2
   1400108a2:	ret    
   1400108a3:	int3   
   1400108a4:	int3   
   1400108a5:	int3   
   1400108a6:	int3   
   1400108a7:	int3   
   1400108a8:	int3   
   1400108a9:	int3   
   1400108aa:	int3   
   1400108ab:	int3   
   1400108ac:	int3   
   1400108ad:	int3   
   1400108ae:	int3   
   1400108af:	int3   
   1400108b0:	movaps xmm1,xmm0
   1400108b3:	movsd  xmm0,QWORD PTR [rip+0x2cb25]        # 0x14003d3e0
   1400108bb:	subsd  xmm0,xmm1
   1400108bf:	mulsd  xmm0,QWORD PTR [rip+0x2cc89]        # 0x14003d550
   1400108c7:	addsd  xmm0,xmm1
   1400108cb:	mulsd  xmm1,xmm1
   1400108cf:	mulsd  xmm0,xmm1
   1400108d3:	ret    
   1400108d4:	int3   
   1400108d5:	int3   
   1400108d6:	int3   
   1400108d7:	int3   
   1400108d8:	int3   
   1400108d9:	int3   
   1400108da:	int3   
   1400108db:	int3   
   1400108dc:	int3   
   1400108dd:	int3   
   1400108de:	int3   
   1400108df:	int3   
   1400108e0:	movaps xmm1,xmm0
   1400108e3:	mulsd  xmm0,xmm0
   1400108e7:	mulsd  xmm0,xmm1
   1400108eb:	ret    
   1400108ec:	int3   
   1400108ed:	int3   
   1400108ee:	int3   
   1400108ef:	int3   
   1400108f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400108f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400108fa:	mov    QWORD PTR [rsp+0x18],rdi
   1400108ff:	push   rbp
   140010900:	push   r14
   140010902:	push   r15
   140010904:	mov    rbp,rsp
   140010907:	sub    rsp,0x80
   14001090e:	mov    rdi,QWORD PTR [r8]
   140010911:	mov    r15d,DWORD PTR [r8+0x8]
   140010915:	movaps XMMWORD PTR [rsp+0x70],xmm6
   14001091a:	movups xmm6,XMMWORD PTR [r9]
   14001091e:	movaps XMMWORD PTR [rsp+0x60],xmm7
   140010923:	movaps XMMWORD PTR [rsp+0x50],xmm8
   140010929:	mov    rbx,r9
   14001092c:	mov    esi,edx
   14001092e:	mov    r14,rcx
   140010931:	movaps xmm1,xmm6
   140010934:	movaps xmm7,xmm6
   140010937:	movaps XMMWORD PTR [rbp-0x50],xmm6
   14001093b:	mulsd  xmm1,xmm6
   14001093f:	unpckhpd xmm7,xmm6
   140010943:	movaps xmm0,xmm7
   140010946:	mulsd  xmm0,xmm7
   14001094a:	addsd  xmm0,xmm1
   14001094e:	call   0x14003b8ae
   140010953:	xorps  xmm8,xmm8
   140010957:	ucomisd xmm0,xmm8
   14001095c:	jp     0x140010960
   14001095e:	je     0x140010972
   140010960:	divsd  xmm6,xmm0
   140010964:	divsd  xmm7,xmm0
   140010968:	movsd  QWORD PTR [rbp-0x50],xmm6
   14001096d:	movsd  QWORD PTR [rbp-0x48],xmm7
   140010972:	movups xmm6,XMMWORD PTR [rbx+0x10]
   140010976:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   14001097a:	movups XMMWORD PTR [rbp-0x40],xmm0
   14001097e:	movups XMMWORD PTR [rbx],xmm0
   140010981:	movaps xmm1,xmm6
   140010984:	movaps xmm7,xmm6
   140010987:	movaps XMMWORD PTR [rbp-0x50],xmm6
   14001098b:	unpckhpd xmm7,xmm6
   14001098f:	mulsd  xmm1,xmm6
   140010993:	movaps xmm0,xmm7
   140010996:	mulsd  xmm0,xmm7
   14001099a:	addsd  xmm0,xmm1
   14001099e:	call   0x14003b8ae
   1400109a3:	ucomisd xmm0,xmm8
   1400109a8:	jp     0x1400109ac
   1400109aa:	je     0x1400109be
   1400109ac:	divsd  xmm6,xmm0
   1400109b0:	divsd  xmm7,xmm0
   1400109b4:	movsd  QWORD PTR [rbp-0x50],xmm6
   1400109b9:	movsd  QWORD PTR [rbp-0x48],xmm7
   1400109be:	movaps xmm0,XMMWORD PTR [rbp-0x50]
   1400109c2:	mov    ecx,0x4
   1400109c7:	mov    DWORD PTR [rip+0x42da3],0x0        # 0x140053774
   1400109d1:	movups XMMWORD PTR [rbp-0x40],xmm0
   1400109d5:	movups XMMWORD PTR [rbx+0x10],xmm0
   1400109d9:	call   0x140010cf0
   1400109de:	movsxd rdx,DWORD PTR [rip+0x42d8f]        # 0x140053774
   1400109e5:	mov    rax,QWORD PTR [rip+0x42d7c]        # 0x140053768
   1400109ec:	mov    r9d,r15d
   1400109ef:	movups xmm0,XMMWORD PTR [rdi]
   1400109f2:	mov    rcx,rdx
   1400109f5:	inc    edx
   1400109f7:	mov    r8,rdi
   1400109fa:	add    rcx,rcx
   1400109fd:	mov    DWORD PTR [rip+0x42d71],edx        # 0x140053774
   140010a03:	mov    edx,esi
   140010a05:	movups XMMWORD PTR [rax+rcx*8],xmm0
   140010a09:	movups xmm0,XMMWORD PTR [rbx+0x10]
   140010a0d:	lea    rax,[rbp-0x40]
   140010a11:	mov    QWORD PTR [rsp+0x28],rax
   140010a16:	lea    rax,[rbp-0x50]
   140010a1a:	mov    rcx,r14
   140010a1d:	movaps XMMWORD PTR [rbp-0x40],xmm0
   140010a21:	movups xmm0,XMMWORD PTR [rbx]
   140010a24:	mov    QWORD PTR [rsp+0x20],rax
   140010a29:	movaps XMMWORD PTR [rbp-0x50],xmm0
   140010a2d:	call   0x1400112c0
   140010a32:	cmp    eax,0xffffffff
   140010a35:	jne    0x140010a3b
   140010a37:	or     eax,eax
   140010a39:	jmp    0x140010a54
   140010a3b:	mov    rcx,QWORD PTR [rbp+0x40]
   140010a3f:	mov    eax,DWORD PTR [rip+0x42d2f]        # 0x140053774
   140010a45:	mov    DWORD PTR [rcx+0x8],eax
   140010a48:	mov    rax,QWORD PTR [rip+0x42d19]        # 0x140053768
   140010a4f:	mov    QWORD PTR [rcx],rax
   140010a52:	xor    eax,eax
   140010a54:	movaps xmm6,XMMWORD PTR [rsp+0x70]
   140010a59:	movaps xmm7,XMMWORD PTR [rsp+0x60]
   140010a5e:	lea    r11,[rsp+0x80]
   140010a66:	mov    rbx,QWORD PTR [r11+0x20]
   140010a6a:	mov    rsi,QWORD PTR [r11+0x28]
   140010a6e:	mov    rdi,QWORD PTR [r11+0x30]
   140010a72:	movaps xmm8,XMMWORD PTR [r11-0x30]
   140010a77:	mov    rsp,r11
   140010a7a:	pop    r15
   140010a7c:	pop    r14
   140010a7e:	pop    rbp
   140010a7f:	ret    
   140010a80:	movsd  xmm0,QWORD PTR [rdx]
   140010a84:	mov    rax,rcx
   140010a87:	addsd  xmm0,QWORD PTR [r8]
   140010a8c:	movsd  QWORD PTR [rdx],xmm0
   140010a90:	movsd  xmm1,QWORD PTR [r8+0x8]
   140010a96:	addsd  xmm1,QWORD PTR [rdx+0x8]
   140010a9b:	movsd  QWORD PTR [rdx+0x8],xmm1
   140010aa0:	movups xmm0,XMMWORD PTR [rdx]
   140010aa3:	movups XMMWORD PTR [rcx],xmm0
   140010aa6:	ret    
   140010aa7:	int3   
   140010aa8:	int3   
   140010aa9:	int3   
   140010aaa:	int3   
   140010aab:	int3   
   140010aac:	int3   
   140010aad:	int3   
   140010aae:	int3   
   140010aaf:	int3   
   140010ab0:	xorps  xmm1,xmm1
   140010ab3:	comisd xmm0,xmm1
   140010ab7:	jb     0x140010ad2
   140010ab9:	movsd  xmm1,QWORD PTR [rip+0x2c91f]        # 0x14003d3e0
   140010ac1:	comisd xmm1,xmm0
   140010ac5:	jb     0x140010ad2
   140010ac7:	movsxd rax,DWORD PTR [r8]
   140010aca:	movsd  QWORD PTR [rdx+rax*8],xmm0
   140010acf:	inc    DWORD PTR [r8]
   140010ad2:	ret    
   140010ad3:	int3   
   140010ad4:	int3   
   140010ad5:	int3   
   140010ad6:	int3   
   140010ad7:	int3   
   140010ad8:	int3   
   140010ad9:	int3   
   140010ada:	int3   
   140010adb:	int3   
   140010adc:	int3   
   140010add:	int3   
   140010ade:	int3   
   140010adf:	int3   
   140010ae0:	movsd  xmm1,QWORD PTR [rdx]
   140010ae4:	movsd  xmm0,QWORD PTR [rdx+0x8]
   140010ae9:	subsd  xmm0,QWORD PTR [rcx+0x8]
   140010aee:	subsd  xmm1,QWORD PTR [rcx]
   140010af2:	mulsd  xmm0,xmm0
   140010af6:	mulsd  xmm1,xmm1
   140010afa:	addsd  xmm0,xmm1
   140010afe:	jmp    0x14003b8ae
   140010b03:	int3   
   140010b04:	int3   
   140010b05:	int3   
   140010b06:	int3   
   140010b07:	int3   
   140010b08:	int3   
   140010b09:	int3   
   140010b0a:	int3   
   140010b0b:	int3   
   140010b0c:	int3   
   140010b0d:	int3   
   140010b0e:	int3   
   140010b0f:	int3   
   140010b10:	mov    r11,rsp
   140010b13:	mov    QWORD PTR [r11+0x18],rsi
   140010b17:	mov    QWORD PTR [r11+0x20],rdi
   140010b1b:	push   r14
   140010b1d:	sub    rsp,0x70
   140010b21:	mov    esi,0x1
   140010b26:	movaps XMMWORD PTR [r11-0x58],xmm10
   140010b2b:	mov    edi,edx
   140010b2d:	mov    r14,rcx
   140010b30:	xorps  xmm10,xmm10
   140010b34:	cmp    edx,esi
   140010b36:	jle    0x140010cbb
   140010b3c:	lea    eax,[rdx-0x1]
   140010b3f:	mov    QWORD PTR [r11+0x8],rbx
   140010b43:	cmp    eax,0x4
   140010b46:	jl     0x140010c51
   140010b4c:	mov    QWORD PTR [r11+0x10],rbp
   140010b50:	movaps XMMWORD PTR [rsp+0x60],xmm6
   140010b55:	movaps XMMWORD PTR [rsp+0x50],xmm7
   140010b5a:	lea    eax,[rdx-0x5]
   140010b5d:	lea    rbx,[rcx+0x18]
   140010b61:	shr    eax,0x2
   140010b64:	movaps XMMWORD PTR [r11-0x38],xmm8
   140010b69:	movaps XMMWORD PTR [r11-0x48],xmm9
   140010b6e:	inc    eax
   140010b70:	mov    ebp,eax
   140010b72:	lea    esi,[rax*4+0x1]
   140010b79:	nop    DWORD PTR [rax+0x0]
   140010b80:	movsd  xmm1,QWORD PTR [rbx]
   140010b84:	movsd  xmm0,QWORD PTR [rbx-0x8]
   140010b89:	subsd  xmm0,QWORD PTR [rbx-0x18]
   140010b8e:	subsd  xmm1,QWORD PTR [rbx-0x10]
   140010b93:	mulsd  xmm0,xmm0
   140010b97:	mulsd  xmm1,xmm1
   140010b9b:	addsd  xmm0,xmm1
   140010b9f:	call   0x14003b8ae
   140010ba4:	movsd  xmm1,QWORD PTR [rbx+0x10]
   140010ba9:	subsd  xmm1,QWORD PTR [rbx]
   140010bad:	addsd  xmm10,xmm0
   140010bb2:	movsd  xmm0,QWORD PTR [rbx+0x8]
   140010bb7:	mulsd  xmm1,xmm1
   140010bbb:	subsd  xmm0,QWORD PTR [rbx-0x8]
   140010bc0:	mulsd  xmm0,xmm0
   140010bc4:	addsd  xmm0,xmm1
   140010bc8:	call   0x14003b8ae
   140010bcd:	movsd  xmm1,QWORD PTR [rbx+0x20]
   140010bd2:	subsd  xmm1,QWORD PTR [rbx+0x10]
   140010bd7:	addsd  xmm10,xmm0
   140010bdc:	movsd  xmm0,QWORD PTR [rbx+0x18]
   140010be1:	mulsd  xmm1,xmm1
   140010be5:	subsd  xmm0,QWORD PTR [rbx+0x8]
   140010bea:	mulsd  xmm0,xmm0
   140010bee:	addsd  xmm0,xmm1
   140010bf2:	call   0x14003b8ae
   140010bf7:	movsd  xmm1,QWORD PTR [rbx+0x30]
   140010bfc:	subsd  xmm1,QWORD PTR [rbx+0x20]
   140010c01:	addsd  xmm10,xmm0
   140010c06:	movsd  xmm0,QWORD PTR [rbx+0x28]
   140010c0b:	mulsd  xmm1,xmm1
   140010c0f:	subsd  xmm0,QWORD PTR [rbx+0x18]
   140010c14:	mulsd  xmm0,xmm0
   140010c18:	addsd  xmm0,xmm1
   140010c1c:	call   0x14003b8ae
   140010c21:	add    rbx,0x40
   140010c25:	addsd  xmm10,xmm0
   140010c2a:	dec    rbp
   140010c2d:	jne    0x140010b80
   140010c33:	movaps xmm9,XMMWORD PTR [rsp+0x30]
   140010c39:	movaps xmm8,XMMWORD PTR [rsp+0x40]
   140010c3f:	movaps xmm7,XMMWORD PTR [rsp+0x50]
   140010c44:	mov    rbp,QWORD PTR [rsp+0x88]
   140010c4c:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   140010c51:	cmp    esi,edi
   140010c53:	jge    0x140010c97
   140010c55:	movsxd rax,esi
   140010c58:	lea    rbx,[r14+0x8]
   140010c5c:	shl    rax,0x4
   140010c60:	add    rbx,rax
   140010c63:	sub    edi,esi
   140010c65:	movsd  xmm1,QWORD PTR [rbx]
   140010c69:	movsd  xmm0,QWORD PTR [rbx-0x8]
   140010c6e:	subsd  xmm0,QWORD PTR [rbx-0x18]
   140010c73:	subsd  xmm1,QWORD PTR [rbx-0x10]
   140010c78:	mulsd  xmm0,xmm0
   140010c7c:	mulsd  xmm1,xmm1
   140010c80:	addsd  xmm0,xmm1
   140010c84:	call   0x14003b8ae
   140010c89:	add    rbx,0x10
   140010c8d:	addsd  xmm10,xmm0
   140010c92:	dec    rdi
   140010c95:	jne    0x140010c65
   140010c97:	mov    rbx,QWORD PTR [rsp+0x80]
   140010c9f:	movaps xmm0,xmm10
   140010ca3:	lea    r11,[rsp+0x70]
   140010ca8:	mov    rsi,QWORD PTR [r11+0x20]
   140010cac:	mov    rdi,QWORD PTR [r11+0x28]
   140010cb0:	movaps xmm10,XMMWORD PTR [r11-0x50]
   140010cb5:	mov    rsp,r11
   140010cb8:	pop    r14
   140010cba:	ret    
   140010cbb:	movaps xmm0,xmm10
   140010cbf:	jmp    0x140010ca3
   140010cc1:	int3   
   140010cc2:	int3   
   140010cc3:	int3   
   140010cc4:	int3   
   140010cc5:	int3   
   140010cc6:	int3   
   140010cc7:	int3   
   140010cc8:	int3   
   140010cc9:	int3   
   140010cca:	int3   
   140010ccb:	int3   
   140010ccc:	int3   
   140010ccd:	int3   
   140010cce:	int3   
   140010ccf:	int3   
   140010cd0:	movsd  xmm0,QWORD PTR [rcx+0x8]
   140010cd5:	movsd  xmm1,QWORD PTR [rcx]
   140010cd9:	mulsd  xmm0,QWORD PTR [rdx+0x8]
   140010cde:	mulsd  xmm1,QWORD PTR [rdx]
   140010ce2:	addsd  xmm0,xmm1
   140010ce6:	ret    
   140010ce7:	int3   
   140010ce8:	int3   
   140010ce9:	int3   
   140010cea:	int3   
   140010ceb:	int3   
   140010cec:	int3   
   140010ced:	int3   
   140010cee:	int3   
   140010cef:	int3   
   140010cf0:	rex push rbx
   140010cf2:	sub    rsp,0x30
   140010cf6:	movsxd rbx,ecx
   140010cf9:	cmp    ebx,DWORD PTR [rip+0x42a71]        # 0x140053770
   140010cff:	jle    0x140010dbb
   140010d05:	mov    rcx,QWORD PTR [rip+0x42a5c]        # 0x140053768
   140010d0c:	test   rcx,rcx
   140010d0f:	jne    0x140010d65
   140010d11:	mov    rcx,rbx
   140010d14:	shl    rcx,0x4
   140010d18:	call   QWORD PTR [rip+0x2c44a]        # 0x14003d168
   140010d1e:	mov    QWORD PTR [rip+0x42a43],rax        # 0x140053768
   140010d25:	test   rax,rax
   140010d28:	jne    0x140010db5
   140010d2e:	call   QWORD PTR [rip+0x2c59c]        # 0x14003d2d0
   140010d34:	lea    rcx,[rip+0x2d3c5]        # 0x14003e100
   140010d3b:	lea    r8,[rip+0x2d3d6]        # 0x14003e118
   140010d42:	mov    QWORD PTR [rsp+0x20],rcx
   140010d47:	lea    rdx,[rip+0x2d402]        # 0x14003e150
   140010d4e:	lea    rcx,[rax+0x60]
   140010d52:	mov    r9d,0x1ee
   140010d58:	call   QWORD PTR [rip+0x2c562]        # 0x14003d2c0
   140010d5e:	call   QWORD PTR [rip+0x2c33c]        # 0x14003d0a0
   140010d64:	int3   
   140010d65:	mov    rdx,rbx
   140010d68:	shl    rdx,0x4
   140010d6c:	call   QWORD PTR [rip+0x2c336]        # 0x14003d0a8
   140010d72:	mov    QWORD PTR [rip+0x429ef],rax        # 0x140053768
   140010d79:	test   rax,rax
   140010d7c:	jne    0x140010db5
   140010d7e:	call   QWORD PTR [rip+0x2c54c]        # 0x14003d2d0
   140010d84:	lea    rcx,[rip+0x2d3dd]        # 0x14003e168
   140010d8b:	lea    r8,[rip+0x2d386]        # 0x14003e118
   140010d92:	mov    QWORD PTR [rsp+0x20],rcx
   140010d97:	lea    rdx,[rip+0x2d3b2]        # 0x14003e150
   140010d9e:	lea    rcx,[rax+0x60]
   140010da2:	mov    r9d,0x1f4
   140010da8:	call   QWORD PTR [rip+0x2c512]        # 0x14003d2c0
   140010dae:	call   QWORD PTR [rip+0x2c2ec]        # 0x14003d0a0
   140010db4:	int3   
   140010db5:	mov    DWORD PTR [rip+0x429b5],ebx        # 0x140053770
   140010dbb:	add    rsp,0x30
   140010dbf:	pop    rbx
   140010dc0:	ret    
   140010dc1:	int3   
   140010dc2:	int3   
   140010dc3:	int3   
   140010dc4:	int3   
   140010dc5:	int3   
   140010dc6:	int3   
   140010dc7:	int3   
   140010dc8:	int3   
   140010dc9:	int3   
   140010dca:	int3   
   140010dcb:	int3   
   140010dcc:	int3   
   140010dcd:	int3   
   140010dce:	int3   
   140010dcf:	int3   
   140010dd0:	mov    rax,rsp
   140010dd3:	mov    QWORD PTR [rax+0x8],rbx
   140010dd7:	mov    QWORD PTR [rax+0x10],rsi
   140010ddb:	mov    QWORD PTR [rax+0x18],rdi
   140010ddf:	push   rbp
   140010de0:	lea    rbp,[rax-0x37]
   140010de4:	sub    rsp,0xf0
   140010deb:	movaps XMMWORD PTR [rax-0x28],xmm7
   140010def:	movaps XMMWORD PTR [rax-0x38],xmm8
   140010df4:	movaps XMMWORD PTR [rax-0x48],xmm9
   140010df9:	xorps  xmm9,xmm9
   140010dfd:	mov    rsi,r9
   140010e00:	movsxd rbx,edx
   140010e03:	mov    rdi,rcx
   140010e06:	movaps xmm7,xmm9
   140010e0a:	movaps xmm8,xmm9
   140010e0e:	movaps XMMWORD PTR [rax-0x58],xmm10
   140010e13:	movaps XMMWORD PTR [rax-0x68],xmm11
   140010e18:	movaps XMMWORD PTR [rax-0x78],xmm12
   140010e1d:	movaps xmm12,xmm9
   140010e21:	movaps xmm11,xmm9
   140010e25:	movaps xmm10,xmm9
   140010e29:	movaps XMMWORD PTR [rsp+0x70],xmm13
   140010e2f:	movaps XMMWORD PTR [rsp+0x60],xmm14
   140010e35:	movaps XMMWORD PTR [rsp+0x50],xmm15
   140010e3b:	movaps xmm15,xmm9
   140010e3f:	movaps xmm13,xmm9
   140010e43:	movaps xmm14,xmm9
   140010e47:	test   edx,edx
   140010e49:	jle    0x14001104b
   140010e4f:	movaps XMMWORD PTR [rax-0x18],xmm6
   140010e53:	mov    rax,rbx
   140010e56:	lea    rcx,[r8+0x18]
   140010e5a:	add    rax,rax
   140010e5d:	xor    edx,edx
   140010e5f:	mov    r8d,ebx
   140010e62:	movsd  xmm6,QWORD PTR [rcx-0x18]
   140010e67:	movups xmm2,XMMWORD PTR [rcx-0x10]
   140010e6b:	movsd  xmm1,QWORD PTR [rcx-0x8]
   140010e70:	mulsd  xmm1,QWORD PTR [rcx-0x8]
   140010e75:	movsd  xmm3,QWORD PTR [rip+0x2c563]        # 0x14003d3e0
   140010e7d:	movups xmm0,xmm2
   140010e80:	mulsd  xmm0,xmm2
   140010e84:	movups xmm2,XMMWORD PTR [rcx]
   140010e87:	subsd  xmm3,xmm6
   140010e8b:	addsd  xmm0,xmm1
   140010e8f:	movsd  xmm1,QWORD PTR [rcx-0x8]
   140010e94:	mulsd  xmm1,QWORD PTR [rcx+0x8]
   140010e99:	addsd  xmm13,xmm0
   140010e9e:	movups xmm0,XMMWORD PTR [rcx-0x10]
   140010ea2:	mulsd  xmm0,xmm2
   140010ea6:	addsd  xmm0,xmm1
   140010eaa:	movsd  xmm1,QWORD PTR [rcx+0x8]
   140010eaf:	mulsd  xmm1,QWORD PTR [rcx+0x8]
   140010eb4:	addsd  xmm11,xmm0
   140010eb9:	movups xmm0,xmm2
   140010ebc:	mulsd  xmm0,xmm2
   140010ec0:	movups xmm2,XMMWORD PTR [rdi+rax*8-0x10]
   140010ec5:	addsd  xmm0,xmm1
   140010ec9:	movaps xmm1,xmm3
   140010ecc:	mulsd  xmm1,QWORD PTR [rip+0x2c67c]        # 0x14003d550
   140010ed4:	movaps XMMWORD PTR [rsp+0x30],xmm2
   140010ed9:	addsd  xmm12,xmm0
   140010ede:	addsd  xmm1,xmm6
   140010ee2:	movaps xmm0,xmm6
   140010ee5:	mulsd  xmm0,xmm6
   140010ee9:	mulsd  xmm6,QWORD PTR [rip+0x2c65f]        # 0x14003d550
   140010ef1:	addsd  xmm6,xmm3
   140010ef5:	movaps xmm15,xmm11
   140010ef9:	mulsd  xmm1,xmm0
   140010efd:	mulsd  xmm3,xmm3
   140010f01:	movsd  xmm0,QWORD PTR [rsp+0x38]
   140010f07:	mulsd  xmm0,xmm1
   140010f0b:	mulsd  xmm2,xmm1
   140010f0f:	mulsd  xmm6,xmm3
   140010f13:	movsd  QWORD PTR [rsp+0x38],xmm0
   140010f19:	movups xmm0,XMMWORD PTR [rdi]
   140010f1c:	movss  xmm5,DWORD PTR [rsp+0x3c]
   140010f22:	movaps XMMWORD PTR [rsp+0x20],xmm0
   140010f27:	mulsd  xmm0,xmm6
   140010f2b:	movsd  QWORD PTR [rsp+0x20],xmm0
   140010f31:	movsd  xmm0,QWORD PTR [rsp+0x28]
   140010f37:	movss  xmm1,DWORD PTR [rsp+0x24]
   140010f3d:	mulsd  xmm0,xmm6
   140010f41:	movsd  QWORD PTR [rsp+0x28],xmm0
   140010f47:	movss  xmm3,DWORD PTR [rsp+0x2c]
   140010f4d:	movsd  QWORD PTR [rsp+0x30],xmm2
   140010f53:	movss  xmm0,DWORD PTR [rsp+0x30]
   140010f59:	movss  xmm4,DWORD PTR [rsp+0x34]
   140010f5f:	movss  xmm2,DWORD PTR [rsp+0x20]
   140010f65:	unpcklps xmm2,xmm1
   140010f68:	unpcklps xmm0,xmm4
   140010f6b:	movss  xmm1,DWORD PTR [rsp+0x28]
   140010f71:	addsd  xmm2,xmm0
   140010f75:	movss  xmm0,DWORD PTR [rsp+0x38]
   140010f7b:	unpcklps xmm1,xmm3
   140010f7e:	unpcklps xmm0,xmm5
   140010f81:	addsd  xmm1,xmm0
   140010f85:	movsd  QWORD PTR [rsp+0x40],xmm2
   140010f8b:	movss  xmm0,DWORD PTR [rsp+0x40]
   140010f91:	movss  xmm2,DWORD PTR [rbp-0x7d]
   140010f96:	movsd  QWORD PTR [rbp-0x79],xmm1
   140010f9b:	movups xmm1,XMMWORD PTR [rdx+rdi*1]
   140010f9f:	unpcklps xmm0,xmm2
   140010fa2:	movaps XMMWORD PTR [rsp+0x30],xmm1
   140010fa7:	movss  xmm3,DWORD PTR [rbp-0x75]
   140010fac:	subsd  xmm1,xmm0
   140010fb0:	movsd  xmm0,QWORD PTR [rsp+0x38]
   140010fb6:	movsd  QWORD PTR [rsp+0x30],xmm1
   140010fbc:	movss  xmm1,DWORD PTR [rbp-0x79]
   140010fc1:	unpcklps xmm1,xmm3
   140010fc4:	movss  xmm3,DWORD PTR [rsp+0x34]
   140010fca:	subsd  xmm0,xmm1
   140010fce:	movups xmm1,XMMWORD PTR [rcx-0x10]
   140010fd2:	movsd  QWORD PTR [rsp+0x38],xmm0
   140010fd8:	movss  xmm5,DWORD PTR [rsp+0x3c]
   140010fde:	movss  xmm0,DWORD PTR [rsp+0x30]
   140010fe4:	movsd  xmm2,QWORD PTR [rcx-0x8]
   140010fe9:	unpcklps xmm0,xmm3
   140010fec:	add    rdx,0x10
   140010ff0:	mulsd  xmm1,xmm0
   140010ff4:	movss  xmm0,DWORD PTR [rsp+0x38]
   140010ffa:	add    rcx,0x28
   140010ffe:	unpcklps xmm0,xmm5
   140011001:	mulsd  xmm2,xmm0
   140011005:	movss  xmm0,DWORD PTR [rsp+0x30]
   14001100b:	unpcklps xmm0,xmm3
   14001100e:	addsd  xmm1,xmm2
   140011012:	movsd  xmm2,QWORD PTR [rcx-0x20]
   140011017:	addsd  xmm10,xmm1
   14001101c:	movups xmm1,XMMWORD PTR [rcx-0x28]
   140011020:	mulsd  xmm1,xmm0
   140011024:	movss  xmm0,DWORD PTR [rsp+0x38]
   14001102a:	unpcklps xmm0,xmm5
   14001102d:	mulsd  xmm2,xmm0
   140011031:	addsd  xmm1,xmm2
   140011035:	addsd  xmm14,xmm1
   14001103a:	dec    r8
   14001103d:	jne    0x140010e62
   140011043:	movaps xmm6,XMMWORD PTR [rsp+0xe0]
   14001104b:	movsd  xmm3,QWORD PTR [rip+0x2d12d]        # 0x14003e180
   140011053:	movaps xmm1,xmm13
   140011057:	movaps xmm0,xmm11
   14001105b:	mulsd  xmm0,xmm15
   140011060:	movaps xmm15,XMMWORD PTR [rsp+0x50]
   140011066:	mulsd  xmm1,xmm12
   14001106b:	subsd  xmm1,xmm0
   14001106f:	movaps xmm2,xmm1
   140011072:	andps  xmm2,XMMWORD PTR [rip+0x2c4e7]        # 0x14003d560
   140011079:	comisd xmm2,xmm3
   14001107d:	jb     0x1400110b2
   14001107f:	movaps xmm8,xmm10
   140011083:	movaps xmm0,xmm14
   140011087:	movaps xmm7,xmm14
   14001108b:	mulsd  xmm10,xmm11
   140011090:	mulsd  xmm8,xmm12
   140011095:	mulsd  xmm7,xmm13
   14001109a:	mulsd  xmm0,xmm11
   14001109f:	subsd  xmm8,xmm0
   1400110a4:	subsd  xmm7,xmm10
   1400110a9:	divsd  xmm8,xmm1
   1400110ae:	divsd  xmm7,xmm1
   1400110b2:	comisd xmm3,xmm2
   1400110b6:	movaps xmm14,XMMWORD PTR [rsp+0x60]
   1400110bc:	movaps xmm13,XMMWORD PTR [rsp+0x70]
   1400110c2:	movaps xmm12,XMMWORD PTR [rsp+0x80]
   1400110cb:	movaps xmm11,XMMWORD PTR [rsp+0x90]
   1400110d4:	movaps xmm10,XMMWORD PTR [rsp+0xa0]
   1400110dd:	ja     0x1400110ed
   1400110df:	comisd xmm9,xmm8
   1400110e4:	jae    0x1400110ed
   1400110e6:	comisd xmm9,xmm7
   1400110eb:	jb     0x14001112d
   1400110ed:	movups xmm0,XMMWORD PTR [rdi]
   1400110f0:	mov    rax,rbx
   1400110f3:	add    rax,rax
   1400110f6:	movups xmm1,XMMWORD PTR [rdi+rax*8-0x10]
   1400110fb:	movsd  xmm2,QWORD PTR [rdi+rax*8-0x8]
   140011101:	subsd  xmm2,QWORD PTR [rdi+0x8]
   140011106:	subsd  xmm1,xmm0
   14001110a:	mulsd  xmm1,xmm1
   14001110e:	mulsd  xmm2,xmm2
   140011112:	addsd  xmm2,xmm1
   140011116:	movaps xmm0,xmm2
   140011119:	call   0x14003b8ae
   14001111e:	movaps xmm7,xmm0
   140011121:	divsd  xmm7,QWORD PTR [rip+0x2c427]        # 0x14003d550
   140011129:	movaps xmm8,xmm7
   14001112d:	movups xmm1,XMMWORD PTR [rdi]
   140011130:	mov    rax,QWORD PTR [rbp+0x67]
   140011134:	lea    r11,[rsp+0xf0]
   14001113c:	mov    rcx,rbx
   14001113f:	mov    rbx,QWORD PTR [r11+0x10]
   140011143:	movups XMMWORD PTR [rax],xmm1
   140011146:	movups xmm2,XMMWORD PTR [rsi]
   140011149:	movaps xmm9,XMMWORD PTR [r11-0x40]
   14001114e:	mov    rax,QWORD PTR [rbp+0x6f]
   140011152:	mov    rsi,QWORD PTR [r11+0x18]
   140011156:	add    rcx,rcx
   140011159:	movaps XMMWORD PTR [rsp+0x40],xmm2
   14001115e:	mulsd  xmm2,xmm8
   140011163:	movsd  xmm1,QWORD PTR [rbp-0x79]
   140011168:	movsd  xmm0,xmm2
   14001116c:	mulsd  xmm1,xmm8
   140011171:	movaps xmm8,XMMWORD PTR [r11-0x30]
   140011176:	unpcklpd xmm0,xmm1
   14001117a:	movups XMMWORD PTR [rax],xmm0
   14001117d:	movups xmm0,XMMWORD PTR [rdi+rcx*8-0x10]
   140011182:	mov    rax,QWORD PTR [rbp+0x77]
   140011186:	mov    rdi,QWORD PTR [r11+0x20]
   14001118a:	movups XMMWORD PTR [rax],xmm0
   14001118d:	mov    rax,QWORD PTR [rbp+0x5f]
   140011191:	movups xmm0,XMMWORD PTR [rax]
   140011194:	mov    rax,QWORD PTR [rbp+0x7f]
   140011198:	movaps XMMWORD PTR [rsp+0x40],xmm0
   14001119d:	movsd  xmm1,QWORD PTR [rbp-0x79]
   1400111a2:	mulsd  xmm0,xmm7
   1400111a6:	mulsd  xmm1,xmm7
   1400111aa:	movaps xmm7,XMMWORD PTR [r11-0x20]
   1400111af:	unpcklpd xmm0,xmm1
   1400111b3:	movups XMMWORD PTR [rax],xmm0
   1400111b6:	xor    eax,eax
   1400111b8:	mov    rsp,r11
   1400111bb:	pop    rbp
   1400111bc:	ret    
   1400111bd:	int3   
   1400111be:	int3   
   1400111bf:	int3   
   1400111c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400111c5:	push   rdi
   1400111c6:	sub    rsp,0x40
   1400111ca:	movaps XMMWORD PTR [rsp+0x30],xmm6
   1400111cf:	movsd  xmm6,QWORD PTR [rdx]
   1400111d3:	movaps XMMWORD PTR [rsp+0x20],xmm7
   1400111d8:	movsd  xmm7,QWORD PTR [rdx+0x8]
   1400111dd:	movaps xmm0,xmm6
   1400111e0:	mov    rbx,rdx
   1400111e3:	mov    rdi,rcx
   1400111e6:	movaps xmm1,xmm7
   1400111e9:	mulsd  xmm0,xmm6
   1400111ed:	mulsd  xmm1,xmm7
   1400111f1:	addsd  xmm0,xmm1
   1400111f5:	call   0x14003b8ae
   1400111fa:	xorps  xmm1,xmm1
   1400111fd:	ucomisd xmm0,xmm1
   140011201:	jp     0x140011205
   140011203:	je     0x140011216
   140011205:	divsd  xmm6,xmm0
   140011209:	divsd  xmm7,xmm0
   14001120d:	movsd  QWORD PTR [rbx],xmm6
   140011211:	movsd  QWORD PTR [rbx+0x8],xmm7
   140011216:	movups xmm0,XMMWORD PTR [rbx]
   140011219:	mov    rbx,QWORD PTR [rsp+0x50]
   14001121e:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140011223:	movaps xmm7,XMMWORD PTR [rsp+0x20]
   140011228:	mov    rax,rdi
   14001122b:	movups XMMWORD PTR [rdi],xmm0
   14001122e:	add    rsp,0x40
   140011232:	pop    rdi
   140011233:	ret    
   140011234:	int3   
   140011235:	int3   
   140011236:	int3   
   140011237:	int3   
   140011238:	int3   
   140011239:	int3   
   14001123a:	int3   
   14001123b:	int3   
   14001123c:	int3   
   14001123d:	int3   
   14001123e:	int3   
   14001123f:	int3   
   140011240:	sub    rsp,0x28
   140011244:	movsd  xmm5,QWORD PTR [rip+0x2c304]        # 0x14003d550
   14001124c:	mov    rax,QWORD PTR [rsp+0x50]
   140011251:	movaps XMMWORD PTR [rsp+0x10],xmm6
   140011256:	movaps xmm6,xmm1
   140011259:	movaps xmm4,xmm1
   14001125c:	movaps xmm1,xmm0
   14001125f:	movaps XMMWORD PTR [rsp],xmm7
   140011263:	mulsd  xmm2,xmm5
   140011267:	mulsd  xmm4,xmm5
   14001126b:	mulsd  xmm1,xmm5
   14001126f:	movaps xmm7,xmm0
   140011272:	addsd  xmm4,xmm3
   140011276:	movaps xmm3,xmm2
   140011279:	addsd  xmm1,xmm2
   14001127d:	addsd  xmm3,xmm0
   140011281:	movaps xmm0,xmm6
   140011284:	subsd  xmm6,xmm7
   140011288:	mulsd  xmm0,QWORD PTR [rip+0x2cf10]        # 0x14003e1a0
   140011290:	mulsd  xmm6,xmm5
   140011294:	subsd  xmm4,xmm3
   140011298:	subsd  xmm1,xmm0
   14001129c:	movsd  QWORD PTR [rax],xmm7
   1400112a0:	movaps xmm7,XMMWORD PTR [rsp]
   1400112a4:	movsd  QWORD PTR [rax+0x8],xmm6
   1400112a9:	movsd  QWORD PTR [rax+0x10],xmm1
   1400112ae:	movsd  QWORD PTR [rax+0x18],xmm4
   1400112b3:	movaps xmm6,XMMWORD PTR [rsp+0x10]
   1400112b8:	add    rsp,0x28
   1400112bc:	ret    
   1400112bd:	int3   
   1400112be:	int3   
   1400112bf:	int3   
   1400112c0:	mov    DWORD PTR [rsp+0x20],r9d
   1400112c5:	mov    QWORD PTR [rsp+0x18],r8
   1400112ca:	mov    DWORD PTR [rsp+0x10],edx
   1400112ce:	mov    QWORD PTR [rsp+0x8],rcx
   1400112d3:	push   rbp
   1400112d4:	push   rbx
   1400112d5:	push   rdi
   1400112d6:	lea    rbp,[rsp-0x80]
   1400112db:	sub    rsp,0x180
   1400112e2:	movsxd rdi,r9d
   1400112e5:	cmp    DWORD PTR [rip+0x42495],edi        # 0x140053780
   1400112eb:	jge    0x140011343
   1400112ed:	mov    rcx,QWORD PTR [rip+0x42484]        # 0x140053778
   1400112f4:	test   rcx,rcx
   1400112f7:	jne    0x140011324
   1400112f9:	lea    rcx,[rdi+rdi*4]
   1400112fd:	shl    rcx,0x3
   140011301:	call   QWORD PTR [rip+0x2be61]        # 0x14003d168
   140011307:	mov    rbx,rax
   14001130a:	mov    QWORD PTR [rip+0x42467],rax        # 0x140053778
   140011311:	test   rax,rax
   140011314:	jne    0x140011334
   140011316:	or     eax,0xffffffff
   140011319:	add    rsp,0x180
   140011320:	pop    rdi
   140011321:	pop    rbx
   140011322:	pop    rbp
   140011323:	ret    
   140011324:	lea    rdx,[rdi+rdi*4]
   140011328:	shl    rdx,0x3
   14001132c:	call   QWORD PTR [rip+0x2bd76]        # 0x14003d0a8
   140011332:	jmp    0x140011307
   140011334:	mov    r8,QWORD PTR [rbp+0xb0]
   14001133b:	mov    DWORD PTR [rip+0x4243f],edi        # 0x140053780
   140011341:	jmp    0x14001134a
   140011343:	mov    rbx,QWORD PTR [rip+0x4242e]        # 0x140053778
   14001134a:	mov    QWORD PTR [rsp+0x178],rsi
   140011352:	movaps XMMWORD PTR [rsp+0x160],xmm6
   14001135a:	mov    esi,0x1
   14001135f:	mov    edx,esi
   140011361:	movaps XMMWORD PTR [rsp+0x150],xmm7
   140011369:	mov    QWORD PTR [rbx],0x0
   140011370:	mov    QWORD PTR [rbp-0x70],rdi
   140011374:	movaps XMMWORD PTR [rsp+0x140],xmm8
   14001137d:	cmp    rdi,rdx
   140011380:	jle    0x140011522
   140011386:	lea    rax,[rdi-0x1]
   14001138a:	cmp    rax,0x4
   14001138e:	jl     0x1400114b1
   140011394:	lea    rax,[rdi-0x5]
   140011398:	add    r8,0x20
   14001139c:	lea    rsi,[rbx+0x50]
   1400113a0:	shr    rax,0x2
   1400113a4:	mov    rdi,r8
   1400113a7:	inc    rax
   1400113aa:	mov    QWORD PTR [rsp+0x70],rax
   1400113af:	mov    rbx,QWORD PTR [rsp+0x70]
   1400113b4:	lea    rax,[rax*4+0x1]
   1400113bc:	mov    QWORD PTR [rsp+0x60],rax
   1400113c1:	movups xmm2,XMMWORD PTR [rdi-0x20]
   1400113c5:	movups xmm1,XMMWORD PTR [rdi-0x10]
   1400113c9:	movsd  xmm0,QWORD PTR [rdi-0x18]
   1400113ce:	subsd  xmm0,QWORD PTR [rdi-0x8]
   1400113d3:	subsd  xmm2,xmm1
   1400113d7:	mulsd  xmm2,xmm2
   1400113db:	mulsd  xmm0,xmm0
   1400113df:	addsd  xmm0,xmm2
   1400113e3:	call   0x14003b8ae
   1400113e8:	movaps xmm6,xmm0
   1400113eb:	addsd  xmm6,QWORD PTR [rsi-0x50]
   1400113f0:	movsd  QWORD PTR [rsi-0x28],xmm6
   1400113f5:	movups xmm2,XMMWORD PTR [rdi-0x10]
   1400113f9:	movups xmm1,XMMWORD PTR [rdi]
   1400113fc:	movsd  xmm0,QWORD PTR [rdi-0x8]
   140011401:	subsd  xmm2,xmm1
   140011405:	subsd  xmm0,QWORD PTR [rdi+0x8]
   14001140a:	mulsd  xmm2,xmm2
   14001140e:	mulsd  xmm0,xmm0
   140011412:	addsd  xmm0,xmm2
   140011416:	call   0x14003b8ae
   14001141b:	movaps xmm7,xmm0
   14001141e:	addsd  xmm7,xmm6
   140011422:	movsd  QWORD PTR [rsi],xmm7
   140011426:	movups xmm2,XMMWORD PTR [rdi]
   140011429:	movups xmm1,XMMWORD PTR [rdi+0x10]
   14001142d:	movsd  xmm0,QWORD PTR [rdi+0x8]
   140011432:	subsd  xmm2,xmm1
   140011436:	subsd  xmm0,QWORD PTR [rdi+0x18]
   14001143b:	mulsd  xmm2,xmm2
   14001143f:	mulsd  xmm0,xmm0
   140011443:	addsd  xmm0,xmm2
   140011447:	call   0x14003b8ae
   14001144c:	movaps xmm6,xmm0
   14001144f:	addsd  xmm6,xmm7
   140011453:	movsd  QWORD PTR [rsi+0x28],xmm6
   140011458:	movups xmm2,XMMWORD PTR [rdi+0x10]
   14001145c:	movups xmm1,XMMWORD PTR [rdi+0x20]
   140011460:	movsd  xmm0,QWORD PTR [rdi+0x18]
   140011465:	subsd  xmm2,xmm1
   140011469:	subsd  xmm0,QWORD PTR [rdi+0x28]
   14001146e:	mulsd  xmm2,xmm2
   140011472:	mulsd  xmm0,xmm0
   140011476:	addsd  xmm0,xmm2
   14001147a:	call   0x14003b8ae
   14001147f:	add    rsi,0xa0
   140011486:	add    rdi,0x40
   14001148a:	addsd  xmm0,xmm6
   14001148e:	movsd  QWORD PTR [rsi-0x50],xmm0
   140011493:	dec    rbx
   140011496:	jne    0x1400113c1
   14001149c:	mov    rbx,QWORD PTR [rip+0x422d5]        # 0x140053778
   1400114a3:	mov    rdi,QWORD PTR [rbp-0x70]
   1400114a7:	mov    rdx,QWORD PTR [rsp+0x60]
   1400114ac:	mov    esi,0x1
   1400114b1:	cmp    rdx,rdi
   1400114b4:	jge    0x140011522
   1400114b6:	lea    rax,[rdx+rdx*4]
   1400114ba:	mov    rsi,rdx
   1400114bd:	lea    rcx,[rbx+rax*8]
   1400114c1:	shl    rsi,0x4
   1400114c5:	mov    rbx,rdi
   1400114c8:	add    rsi,QWORD PTR [rbp+0xb0]
   1400114cf:	mov    rdi,rcx
   1400114d2:	sub    rbx,rdx
   1400114d5:	movups xmm2,XMMWORD PTR [rsi-0x10]
   1400114d9:	movups xmm1,XMMWORD PTR [rsi]
   1400114dc:	movsd  xmm0,QWORD PTR [rsi-0x8]
   1400114e1:	subsd  xmm0,QWORD PTR [rsi+0x8]
   1400114e6:	subsd  xmm2,xmm1
   1400114ea:	mulsd  xmm2,xmm2
   1400114ee:	mulsd  xmm0,xmm0
   1400114f2:	addsd  xmm0,xmm2
   1400114f6:	call   0x14003b8ae
   1400114fb:	add    rdi,0x28
   1400114ff:	add    rsi,0x10
   140011503:	addsd  xmm0,QWORD PTR [rdi-0x50]
   140011508:	movsd  QWORD PTR [rdi-0x28],xmm0
   14001150d:	dec    rbx
   140011510:	jne    0x1400114d5
   140011512:	mov    rbx,QWORD PTR [rip+0x4225f]        # 0x140053778
   140011519:	mov    rdi,QWORD PTR [rbp-0x70]
   14001151d:	mov    esi,0x1
   140011522:	mov    r8,rsi
   140011525:	cmp    rdi,0x1
   140011529:	jle    0x1400115db
   14001152f:	lea    rax,[rdi-0x1]
   140011533:	cmp    rax,0x4
   140011537:	jl     0x1400115ac
   140011539:	lea    rdx,[rdi-0x5]
   14001153d:	lea    rcx,[rdi+rdi*4]
   140011541:	lea    rax,[rbx+0x78]
   140011545:	shr    rdx,0x2
   140011549:	inc    rdx
   14001154c:	lea    r8,[rdx*4+0x1]
   140011554:	movsd  xmm0,QWORD PTR [rax-0x50]
   140011559:	movsd  xmm1,QWORD PTR [rax-0x28]
   14001155e:	lea    rax,[rax+0xa0]
   140011565:	divsd  xmm0,QWORD PTR [rbx+rcx*8-0x28]
   14001156b:	movsd  QWORD PTR [rax-0xf0],xmm0
   140011573:	divsd  xmm1,QWORD PTR [rbx+rcx*8-0x28]
   140011579:	movsd  xmm0,QWORD PTR [rax-0xa0]
   140011581:	movsd  QWORD PTR [rax-0xc8],xmm1
   140011589:	movsd  xmm1,QWORD PTR [rax-0x78]
   14001158e:	divsd  xmm0,QWORD PTR [rbx+rcx*8-0x28]
   140011594:	movsd  QWORD PTR [rax-0xa0],xmm0
   14001159c:	divsd  xmm1,QWORD PTR [rbx+rcx*8-0x28]
   1400115a2:	movsd  QWORD PTR [rax-0x78],xmm1
   1400115a7:	dec    rdx
   1400115aa:	jne    0x140011554
   1400115ac:	cmp    r8,rdi
   1400115af:	jge    0x1400115db
   1400115b1:	lea    rax,[r8+r8*4]
   1400115b5:	lea    rdx,[rdi+rdi*4]
   1400115b9:	lea    rcx,[rbx+rax*8]
   1400115bd:	mov    rax,rdi
   1400115c0:	sub    rax,r8
   1400115c3:	movsd  xmm0,QWORD PTR [rcx]
   1400115c7:	lea    rcx,[rcx+0x28]
   1400115cb:	divsd  xmm0,QWORD PTR [rbx+rdx*8-0x28]
   1400115d1:	movsd  QWORD PTR [rcx-0x28],xmm0
   1400115d6:	dec    rax
   1400115d9:	jne    0x1400115c3
   1400115db:	movsd  xmm7,QWORD PTR [rip+0x2bdfd]        # 0x14003d3e0
   1400115e3:	movsd  xmm8,QWORD PTR [rip+0x2bf64]        # 0x14003d550
   1400115ec:	mov    rcx,QWORD PTR [rbp+0xc8]
   1400115f3:	mov    rdx,QWORD PTR [rbp+0xc0]
   1400115fa:	test   rdi,rdi
   1400115fd:	jle    0x140011702
   140011603:	mov    rax,rbx
   140011606:	data16 nop WORD PTR [rax+rax*1+0x0]
   140011610:	movsd  xmm2,QWORD PTR [rax]
   140011614:	movups xmm1,XMMWORD PTR [rdx]
   140011617:	movaps xmm0,xmm7
   14001161a:	add    rax,0x28
   14001161e:	movaps XMMWORD PTR [rsp+0x60],xmm1
   140011623:	subsd  xmm0,xmm2
   140011627:	mulsd  xmm2,xmm8
   14001162c:	mulsd  xmm2,xmm0
   140011630:	mulsd  xmm2,xmm0
   140011634:	movsd  xmm0,QWORD PTR [rsp+0x68]
   14001163a:	mulsd  xmm0,xmm2
   14001163e:	mulsd  xmm1,xmm2
   140011642:	movsd  QWORD PTR [rsp+0x68],xmm0
   140011648:	movsd  QWORD PTR [rsp+0x60],xmm1
   14001164e:	movss  xmm0,DWORD PTR [rsp+0x60]
   140011654:	movss  xmm1,DWORD PTR [rsp+0x64]
   14001165a:	movss  DWORD PTR [rsp+0x50],xmm0
   140011660:	movss  xmm0,DWORD PTR [rsp+0x68]
   140011666:	movss  DWORD PTR [rsp+0x58],xmm0
   14001166c:	movss  DWORD PTR [rsp+0x54],xmm1
   140011672:	movss  xmm1,DWORD PTR [rsp+0x6c]
   140011678:	movss  DWORD PTR [rsp+0x5c],xmm1
   14001167e:	movups xmm0,XMMWORD PTR [rsp+0x50]
   140011683:	movups XMMWORD PTR [rax-0x20],xmm0
   140011687:	movsd  xmm1,QWORD PTR [rax-0x28]
   14001168c:	movups xmm3,XMMWORD PTR [rcx]
   14001168f:	movaps xmm2,xmm1
   140011692:	mulsd  xmm2,xmm8
   140011697:	movaps XMMWORD PTR [rsp+0x60],xmm3
   14001169c:	mulsd  xmm2,xmm1
   1400116a0:	movaps xmm0,xmm7
   1400116a3:	subsd  xmm0,xmm1
   1400116a7:	mulsd  xmm2,xmm0
   1400116ab:	movsd  xmm0,QWORD PTR [rsp+0x68]
   1400116b1:	mulsd  xmm0,xmm2
   1400116b5:	mulsd  xmm3,xmm2
   1400116b9:	movsd  QWORD PTR [rsp+0x68],xmm0
   1400116bf:	movsd  QWORD PTR [rsp+0x60],xmm3
   1400116c5:	movss  xmm0,DWORD PTR [rsp+0x60]
   1400116cb:	movss  xmm1,DWORD PTR [rsp+0x64]
   1400116d1:	movss  DWORD PTR [rbp-0x80],xmm0
   1400116d6:	movss  xmm0,DWORD PTR [rsp+0x68]
   1400116dc:	movss  DWORD PTR [rbp-0x7c],xmm1
   1400116e1:	movss  xmm1,DWORD PTR [rsp+0x6c]
   1400116e7:	movss  DWORD PTR [rbp-0x78],xmm0
   1400116ec:	movss  DWORD PTR [rbp-0x74],xmm1
   1400116f1:	movups xmm0,XMMWORD PTR [rbp-0x80]
   1400116f5:	movups XMMWORD PTR [rax-0x10],xmm0
   1400116f9:	dec    rdi
   1400116fc:	jne    0x140011610
   140011702:	movups xmm0,XMMWORD PTR [rcx]
   140011705:	mov    edi,DWORD PTR [rbp+0xb8]
   14001170b:	lea    rax,[rbp-0x60]
   14001170f:	mov    QWORD PTR [rsp+0x40],rax
   140011714:	lea    rax,[rsp+0x60]
   140011719:	mov    r8,rbx
   14001171c:	movaps XMMWORD PTR [rsp+0x50],xmm0
   140011721:	movups xmm0,XMMWORD PTR [rdx]
   140011724:	mov    rbx,QWORD PTR [rbp+0xb0]
   14001172b:	mov    QWORD PTR [rsp+0x38],rax
   140011730:	lea    rax,[rsp+0x70]
   140011735:	movaps XMMWORD PTR [rbp-0x80],xmm0
   140011739:	mov    QWORD PTR [rsp+0x30],rax
   14001173e:	lea    rax,[rbp-0x50]
   140011742:	lea    r9,[rbp-0x80]
   140011746:	mov    QWORD PTR [rsp+0x28],rax
   14001174b:	lea    rax,[rsp+0x50]
   140011750:	mov    edx,edi
   140011752:	mov    rcx,rbx
   140011755:	mov    QWORD PTR [rsp+0x20],rax
   14001175a:	call   0x140010dd0
   14001175f:	cmp    eax,0xffffffff
   140011762:	jne    0x14001176b
   140011764:	or     eax,eax
   140011766:	jmp    0x140011e17
   14001176b:	movaps xmm0,XMMWORD PTR [rbp-0x60]
   14001176f:	movss  xmm6,DWORD PTR [rbp-0x50]
   140011774:	mov    edx,DWORD PTR [rbp+0xa8]
   14001177a:	mov    rcx,QWORD PTR [rbp+0xa0]
   140011781:	movaps XMMWORD PTR [rsp+0x130],xmm9
   14001178a:	movaps XMMWORD PTR [rsp+0x120],xmm10
   140011793:	mov    DWORD PTR [rsp+0x38],edi
   140011797:	lea    rax,[rbp-0x70]
   14001179b:	mov    QWORD PTR [rsp+0x30],rbx
   1400117a0:	movss  DWORD PTR [rbp-0x80],xmm6
   1400117a5:	movss  xmm9,DWORD PTR [rbp-0x4c]
   1400117ab:	movss  xmm10,DWORD PTR [rbp-0x48]
   1400117b1:	movaps XMMWORD PTR [rsp+0x110],xmm11
   1400117ba:	movaps XMMWORD PTR [rsp+0x100],xmm12
   1400117c3:	movaps XMMWORD PTR [rsp+0xf0],xmm13
   1400117cc:	movss  xmm12,DWORD PTR [rsp+0x60]
   1400117d3:	movss  xmm13,DWORD PTR [rsp+0x64]
   1400117da:	movss  xmm11,DWORD PTR [rbp-0x44]
   1400117e0:	mov    QWORD PTR [rsp+0x28],rax
   1400117e5:	lea    rax,[rsp+0x50]
   1400117ea:	lea    r9,[rbp-0x40]
   1400117ee:	movdqa XMMWORD PTR [rbp-0x70],xmm0
   1400117f3:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   1400117f8:	movaps XMMWORD PTR [rsp+0xe0],xmm14
   140011801:	movss  xmm14,DWORD PTR [rsp+0x68]
   140011808:	movss  DWORD PTR [rsp+0x50],xmm12
   14001180f:	movss  DWORD PTR [rsp+0x54],xmm13
   140011816:	lea    r8,[rbp-0x80]
   14001181a:	mov    QWORD PTR [rsp+0x20],rax
   14001181f:	movss  DWORD PTR [rsp+0x58],xmm14
   140011826:	movss  DWORD PTR [rbp-0x7c],xmm9
   14001182c:	movss  DWORD PTR [rbp-0x78],xmm10
   140011832:	movaps XMMWORD PTR [rsp+0xd0],xmm15
   14001183b:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   140011840:	movss  xmm15,DWORD PTR [rsp+0x6c]
   140011847:	movss  DWORD PTR [rbp-0x74],xmm11
   14001184d:	movss  DWORD PTR [rsp+0x5c],xmm15
   140011854:	call   0x140011e70
   140011859:	test   eax,eax
   14001185b:	jne    0x140011dd6
   140011861:	movss  xmm0,DWORD PTR [rsp+0x74]
   140011867:	movss  xmm1,DWORD PTR [rsp+0x70]
   14001186d:	movss  xmm2,DWORD PTR [rsp+0x7c]
   140011873:	lea    eax,[rdi-0x1]
   140011876:	or     ebx,0xffffffff
   140011879:	unpcklps xmm1,xmm0
   14001187c:	movss  xmm0,DWORD PTR [rsp+0x78]
   140011882:	movsd  xmm4,QWORD PTR [rip+0x2c906]        # 0x14003e190
   14001188a:	unpcklps xmm0,xmm2
   14001188d:	mulsd  xmm1,xmm4
   140011891:	mulsd  xmm0,xmm4
   140011895:	movsd  QWORD PTR [rbp-0x70],xmm1
   14001189a:	movss  xmm2,DWORD PTR [rbp-0x6c]
   14001189f:	movss  xmm1,xmm6
   1400118a3:	movsd  QWORD PTR [rbp-0x68],xmm0
   1400118a8:	movss  xmm0,DWORD PTR [rbp-0x70]
   1400118ad:	movss  xmm3,DWORD PTR [rbp-0x64]
   1400118b2:	unpcklps xmm1,xmm9
   1400118b6:	mov    DWORD PTR [rbp-0x70],eax
   1400118b9:	unpcklps xmm0,xmm2
   1400118bc:	movaps xmm2,xmm10
   1400118c0:	unpcklps xmm2,xmm11
   1400118c4:	movsd  xmm9,QWORD PTR [rip+0x2be1b]        # 0x14003d6e8
   1400118cd:	addsd  xmm1,xmm0
   1400118d1:	movss  xmm0,DWORD PTR [rbp-0x68]
   1400118d6:	unpcklps xmm0,xmm3
   1400118d9:	addsd  xmm2,xmm0
   1400118dd:	movsd  QWORD PTR [rsp+0x70],xmm1
   1400118e3:	movss  xmm0,DWORD PTR [rsp+0x70]
   1400118e9:	movss  xmm1,DWORD PTR [rsp+0x74]
   1400118ef:	movss  DWORD PTR [rbp-0x80],xmm0
   1400118f4:	movsd  QWORD PTR [rsp+0x78],xmm2
   1400118fa:	movss  xmm0,DWORD PTR [rsp+0x78]
   140011900:	movss  xmm2,DWORD PTR [rbp-0x54]
   140011905:	movss  DWORD PTR [rbp-0x7c],xmm1
   14001190a:	movss  xmm1,DWORD PTR [rsp+0x7c]
   140011910:	movss  DWORD PTR [rbp-0x78],xmm0
   140011915:	movss  xmm0,DWORD PTR [rbp-0x5c]
   14001191a:	movss  DWORD PTR [rbp-0x74],xmm1
   14001191f:	movss  xmm1,DWORD PTR [rbp-0x60]
   140011924:	unpcklps xmm1,xmm0
   140011927:	movss  xmm0,DWORD PTR [rbp-0x58]
   14001192c:	mulsd  xmm1,xmm4
   140011930:	unpcklps xmm0,xmm2
   140011933:	mulsd  xmm0,xmm4
   140011937:	movsd  QWORD PTR [rsp+0x70],xmm1
   14001193d:	movss  xmm2,DWORD PTR [rsp+0x74]
   140011943:	movss  xmm1,xmm12
   140011948:	movsd  QWORD PTR [rsp+0x78],xmm0
   14001194e:	movss  xmm0,DWORD PTR [rsp+0x70]
   140011954:	movss  xmm3,DWORD PTR [rsp+0x7c]
   14001195a:	unpcklps xmm1,xmm13
   14001195e:	unpcklps xmm0,xmm2
   140011961:	movaps xmm2,xmm14
   140011965:	unpcklps xmm2,xmm15
   140011969:	subsd  xmm1,xmm0
   14001196d:	movss  xmm0,DWORD PTR [rsp+0x78]
   140011973:	unpcklps xmm0,xmm3
   140011976:	movsd  QWORD PTR [rbp-0x60],xmm1
   14001197b:	movss  xmm1,DWORD PTR [rbp-0x5c]
   140011980:	subsd  xmm2,xmm0
   140011984:	movss  xmm0,DWORD PTR [rbp-0x60]
   140011989:	movsd  QWORD PTR [rbp-0x58],xmm2
   14001198e:	movss  DWORD PTR [rsp+0x54],xmm1
   140011994:	movss  xmm1,DWORD PTR [rbp-0x54]
   140011999:	movss  DWORD PTR [rsp+0x50],xmm0
   14001199f:	movss  xmm0,DWORD PTR [rbp-0x58]
   1400119a4:	movss  DWORD PTR [rsp+0x58],xmm0
   1400119aa:	movss  DWORD PTR [rsp+0x5c],xmm1
   1400119b0:	cmp    eax,0x1
   1400119b3:	jle    0x140011b12
   1400119b9:	mov    rcx,QWORD PTR [rbp+0xb0]
   1400119c0:	mov    rdi,QWORD PTR [rip+0x41db1]        # 0x140053778
   1400119c7:	movsd  xmm10,QWORD PTR [rsp+0x68]
   1400119ce:	movsd  xmm11,QWORD PTR [rsp+0x60]
   1400119d5:	movsd  xmm12,QWORD PTR [rbp-0x48]
   1400119db:	movsd  xmm13,QWORD PTR [rbp-0x50]
   1400119e1:	add    rcx,0x10
   1400119e5:	add    rdi,0x28
   1400119e9:	mov    QWORD PTR [rsp+0x70],rcx
   1400119ee:	movsd  xmm14,QWORD PTR [rbp-0x78]
   1400119f4:	movsd  xmm15,QWORD PTR [rbp-0x80]
   1400119fa:	nop    WORD PTR [rax+rax*1+0x0]
   140011a00:	movsd  xmm0,QWORD PTR [rdi]
   140011a04:	movaps xmm4,xmm7
   140011a07:	subsd  xmm4,xmm0
   140011a0b:	movaps xmm3,xmm0
   140011a0e:	movaps xmm6,xmm0
   140011a11:	mulsd  xmm3,xmm0
   140011a15:	mulsd  xmm6,xmm8
   140011a1a:	movaps xmm2,xmm6
   140011a1d:	movaps xmm5,xmm6
   140011a20:	mulsd  xmm3,xmm0
   140011a24:	mulsd  xmm6,xmm4
   140011a28:	movaps xmm1,xmm3
   140011a2b:	mulsd  xmm5,xmm0
   140011a2f:	mulsd  xmm2,xmm4
   140011a33:	mulsd  xmm6,xmm4
   140011a37:	movaps xmm0,xmm4
   140011a3a:	mulsd  xmm0,xmm4
   140011a3e:	mulsd  xmm2,xmm4
   140011a42:	mulsd  xmm5,xmm4
   140011a46:	mulsd  xmm0,xmm4
   140011a4a:	mulsd  xmm2,xmm15
   140011a4f:	mulsd  xmm1,xmm11
   140011a54:	mulsd  xmm0,xmm13
   140011a59:	mulsd  xmm3,xmm10
   140011a5e:	mulsd  xmm6,xmm14
   140011a63:	addsd  xmm2,xmm0
   140011a67:	movaps xmm0,xmm5
   140011a6a:	mulsd  xmm0,QWORD PTR [rsp+0x50]
   140011a70:	mulsd  xmm5,QWORD PTR [rsp+0x58]
   140011a76:	addsd  xmm2,xmm0
   140011a7a:	movaps xmm0,xmm4
   140011a7d:	mulsd  xmm0,xmm4
   140011a81:	addsd  xmm2,xmm1
   140011a85:	mulsd  xmm0,xmm4
   140011a89:	movsd  xmm4,QWORD PTR [rcx+0x8]
   140011a8e:	movsd  QWORD PTR [rbp-0x80],xmm2
   140011a93:	movss  xmm1,DWORD PTR [rbp-0x7c]
   140011a98:	mulsd  xmm0,xmm12
   140011a9d:	addsd  xmm6,xmm0
   140011aa1:	movss  xmm0,DWORD PTR [rbp-0x80]
   140011aa6:	unpcklps xmm0,xmm1
   140011aa9:	addsd  xmm6,xmm5
   140011aad:	addsd  xmm6,xmm3
   140011ab1:	movups xmm3,XMMWORD PTR [rcx]
   140011ab4:	subsd  xmm3,xmm0
   140011ab8:	movsd  QWORD PTR [rbp-0x78],xmm6
   140011abd:	movss  xmm2,DWORD PTR [rbp-0x74]
   140011ac2:	mulsd  xmm3,xmm3
   140011ac6:	movss  xmm1,DWORD PTR [rbp-0x78]
   140011acb:	unpcklps xmm1,xmm2
   140011ace:	subsd  xmm4,xmm1
   140011ad2:	mulsd  xmm4,xmm4
   140011ad6:	addsd  xmm4,xmm3
   140011ada:	movaps xmm0,xmm4
   140011add:	call   0x14003b8ae
   140011ae2:	comisd xmm0,xmm9
   140011ae7:	jbe    0x140011aef
   140011ae9:	movaps xmm9,xmm0
   140011aed:	mov    ebx,esi
   140011aef:	mov    rcx,QWORD PTR [rsp+0x70]
   140011af4:	inc    esi
   140011af6:	add    rdi,0x28
   140011afa:	add    rcx,0x10
   140011afe:	mov    QWORD PTR [rsp+0x70],rcx
   140011b03:	cmp    esi,DWORD PTR [rbp-0x70]
   140011b06:	jl     0x140011a00
   140011b0c:	mov    edi,DWORD PTR [rbp+0xb8]
   140011b12:	mov    rsi,QWORD PTR [rbp+0xb0]
   140011b19:	movsxd rax,ebx
   140011b1c:	shl    rax,0x4
   140011b20:	add    rax,rsi
   140011b23:	mov    QWORD PTR [rsp+0x70],rax
   140011b28:	movups xmm0,XMMWORD PTR [rax]
   140011b2b:	movups xmm1,XMMWORD PTR [rax-0x10]
   140011b2f:	movaps XMMWORD PTR [rsp+0x60],xmm0
   140011b34:	subsd  xmm0,xmm1
   140011b38:	movsd  QWORD PTR [rsp+0x60],xmm0
   140011b3e:	movsd  xmm0,QWORD PTR [rsp+0x68]
   140011b44:	movss  xmm12,DWORD PTR [rsp+0x60]
   140011b4b:	subsd  xmm0,QWORD PTR [rax-0x8]
   140011b50:	movss  xmm13,DWORD PTR [rsp+0x64]
   140011b57:	movss  xmm7,xmm12
   140011b5c:	unpcklps xmm7,xmm13
   140011b60:	movsd  QWORD PTR [rsp+0x68],xmm0
   140011b66:	movss  xmm14,DWORD PTR [rsp+0x68]
   140011b6d:	movss  xmm15,DWORD PTR [rsp+0x6c]
   140011b74:	movaps xmm1,xmm7
   140011b77:	movss  xmm6,xmm14
   140011b7c:	unpcklps xmm6,xmm15
   140011b80:	mulsd  xmm1,xmm7
   140011b84:	movaps xmm0,xmm6
   140011b87:	mulsd  xmm0,xmm6
   140011b8b:	addsd  xmm0,xmm1
   140011b8f:	call   0x14003b8ae
   140011b94:	xorps  xmm1,xmm1
   140011b97:	ucomisd xmm0,xmm1
   140011b9b:	jp     0x140011b9f
   140011b9d:	je     0x140011bcf
   140011b9f:	divsd  xmm7,xmm0
   140011ba3:	divsd  xmm6,xmm0
   140011ba7:	movsd  QWORD PTR [rsp+0x50],xmm7
   140011bad:	movss  xmm13,DWORD PTR [rsp+0x54]
   140011bb4:	movss  xmm12,DWORD PTR [rsp+0x50]
   140011bbb:	movsd  QWORD PTR [rsp+0x58],xmm6
   140011bc1:	movss  xmm15,DWORD PTR [rsp+0x5c]
   140011bc8:	movss  xmm14,DWORD PTR [rsp+0x58]
   140011bcf:	mov    rax,QWORD PTR [rsp+0x70]
   140011bd4:	movups xmm0,XMMWORD PTR [rax+0x10]
   140011bd8:	movups xmm1,XMMWORD PTR [rax]
   140011bdb:	movaps XMMWORD PTR [rsp+0x60],xmm0
   140011be0:	subsd  xmm0,xmm1
   140011be4:	movsd  QWORD PTR [rsp+0x60],xmm0
   140011bea:	movsd  xmm0,QWORD PTR [rsp+0x68]
   140011bf0:	movss  xmm8,DWORD PTR [rsp+0x60]
   140011bf7:	subsd  xmm0,QWORD PTR [rax+0x8]
   140011bfc:	movss  xmm9,DWORD PTR [rsp+0x64]
   140011c03:	movss  xmm7,xmm8
   140011c08:	unpcklps xmm7,xmm9
   140011c0c:	movsd  QWORD PTR [rsp+0x68],xmm0
   140011c12:	movss  xmm10,DWORD PTR [rsp+0x68]
   140011c19:	movss  xmm11,DWORD PTR [rsp+0x6c]
   140011c20:	movaps xmm1,xmm7
   140011c23:	movss  xmm6,xmm10
   140011c28:	unpcklps xmm6,xmm11
   140011c2c:	mulsd  xmm1,xmm7
   140011c30:	movaps xmm0,xmm6
   140011c33:	mulsd  xmm0,xmm6
   140011c37:	addsd  xmm0,xmm1
   140011c3b:	call   0x14003b8ae
   140011c40:	xorps  xmm1,xmm1
   140011c43:	ucomisd xmm0,xmm1
   140011c47:	jp     0x140011c4b
   140011c49:	je     0x140011c7b
   140011c4b:	divsd  xmm7,xmm0
   140011c4f:	divsd  xmm6,xmm0
   140011c53:	movsd  QWORD PTR [rsp+0x50],xmm7
   140011c59:	movss  xmm9,DWORD PTR [rsp+0x54]
   140011c60:	movss  xmm8,DWORD PTR [rsp+0x50]
   140011c67:	movsd  QWORD PTR [rsp+0x58],xmm6
   140011c6d:	movss  xmm11,DWORD PTR [rsp+0x5c]
   140011c74:	movss  xmm10,DWORD PTR [rsp+0x58]
   140011c7b:	movaps xmm1,xmm12
   140011c7f:	movss  xmm0,xmm8
   140011c84:	movss  xmm2,xmm14
   140011c89:	unpcklps xmm0,xmm9
   140011c8d:	unpcklps xmm1,xmm13
   140011c91:	unpcklps xmm2,xmm15
   140011c95:	addsd  xmm1,xmm0
   140011c99:	movss  xmm0,xmm10
   140011c9e:	unpcklps xmm0,xmm11
   140011ca2:	movsd  QWORD PTR [rsp+0x50],xmm1
   140011ca8:	movss  xmm8,DWORD PTR [rsp+0x50]
   140011caf:	movss  xmm9,DWORD PTR [rsp+0x54]
   140011cb6:	addsd  xmm2,xmm0
   140011cba:	movss  xmm7,xmm8
   140011cbf:	unpcklps xmm7,xmm9
   140011cc3:	movsd  QWORD PTR [rsp+0x58],xmm2
   140011cc9:	movss  xmm10,DWORD PTR [rsp+0x58]
   140011cd0:	movss  xmm11,DWORD PTR [rsp+0x5c]
   140011cd7:	movaps xmm1,xmm7
   140011cda:	movss  xmm6,xmm10
   140011cdf:	unpcklps xmm6,xmm11
   140011ce3:	mulsd  xmm1,xmm7
   140011ce7:	movaps xmm0,xmm6
   140011cea:	mulsd  xmm0,xmm6
   140011cee:	addsd  xmm0,xmm1
   140011cf2:	call   0x14003b8ae
   140011cf7:	xorps  xmm1,xmm1
   140011cfa:	ucomisd xmm0,xmm1
   140011cfe:	jp     0x140011d02
   140011d00:	je     0x140011d32
   140011d02:	divsd  xmm7,xmm0
   140011d06:	divsd  xmm6,xmm0
   140011d0a:	movsd  QWORD PTR [rsp+0x50],xmm7
   140011d10:	movss  xmm9,DWORD PTR [rsp+0x54]
   140011d17:	movss  xmm8,DWORD PTR [rsp+0x50]
   140011d1e:	movsd  QWORD PTR [rsp+0x58],xmm6
   140011d24:	movss  xmm11,DWORD PTR [rsp+0x5c]
   140011d2b:	movss  xmm10,DWORD PTR [rsp+0x58]
   140011d32:	mov    rax,QWORD PTR [rbp+0xc0]
   140011d39:	mov    edx,DWORD PTR [rbp+0xa8]
   140011d3f:	mov    rcx,QWORD PTR [rbp+0xa0]
   140011d46:	movss  DWORD PTR [rsp+0x50],xmm8
   140011d4d:	movss  DWORD PTR [rsp+0x54],xmm9
   140011d54:	movss  DWORD PTR [rsp+0x58],xmm10
   140011d5b:	movups xmm0,XMMWORD PTR [rax]
   140011d5e:	movss  DWORD PTR [rsp+0x5c],xmm11
   140011d65:	lea    rax,[rbp-0x40]
   140011d69:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   140011d6e:	mov    QWORD PTR [rsp+0x28],rax
   140011d73:	lea    rax,[rsp+0x50]
   140011d78:	movdqa XMMWORD PTR [rbp-0x40],xmm6
   140011d7d:	movaps XMMWORD PTR [rsp+0x50],xmm0
   140011d82:	lea    r9d,[rbx+0x1]
   140011d86:	mov    r8,rsi
   140011d89:	mov    QWORD PTR [rsp+0x20],rax
   140011d8e:	call   0x1400112c0
   140011d93:	mov    rax,QWORD PTR [rbp+0xc8]
   140011d9a:	mov    r8,QWORD PTR [rsp+0x70]
   140011d9f:	movdqa XMMWORD PTR [rsp+0x50],xmm6
   140011da5:	movups xmm0,XMMWORD PTR [rax]
   140011da8:	mov    edx,DWORD PTR [rbp+0xa8]
   140011dae:	mov    rcx,QWORD PTR [rbp+0xa0]
   140011db5:	movaps XMMWORD PTR [rbp-0x40],xmm0
   140011db9:	lea    rax,[rbp-0x40]
   140011dbd:	sub    edi,ebx
   140011dbf:	mov    QWORD PTR [rsp+0x28],rax
   140011dc4:	lea    rax,[rsp+0x50]
   140011dc9:	mov    r9d,edi
   140011dcc:	mov    QWORD PTR [rsp+0x20],rax
   140011dd1:	call   0x1400112c0
   140011dd6:	movaps xmm14,XMMWORD PTR [rsp+0xe0]
   140011ddf:	movaps xmm13,XMMWORD PTR [rsp+0xf0]
   140011de8:	movaps xmm12,XMMWORD PTR [rsp+0x100]
   140011df1:	xor    eax,eax
   140011df3:	movaps xmm11,XMMWORD PTR [rsp+0x110]
   140011dfc:	movaps xmm10,XMMWORD PTR [rsp+0x120]
   140011e05:	movaps xmm9,XMMWORD PTR [rsp+0x130]
   140011e0e:	movaps xmm15,XMMWORD PTR [rsp+0xd0]
   140011e17:	movaps xmm7,XMMWORD PTR [rsp+0x150]
   140011e1f:	movaps xmm6,XMMWORD PTR [rsp+0x160]
   140011e27:	mov    rsi,QWORD PTR [rsp+0x178]
   140011e2f:	movaps xmm8,XMMWORD PTR [rsp+0x140]
   140011e38:	add    rsp,0x180
   140011e3f:	pop    rdi
   140011e40:	pop    rbx
   140011e41:	pop    rbp
   140011e42:	ret    
   140011e43:	int3   
   140011e44:	int3   
   140011e45:	int3   
   140011e46:	int3   
   140011e47:	int3   
   140011e48:	int3   
   140011e49:	int3   
   140011e4a:	int3   
   140011e4b:	int3   
   140011e4c:	int3   
   140011e4d:	int3   
   140011e4e:	int3   
   140011e4f:	int3   
   140011e50:	movaps xmm0,xmm2
   140011e53:	mulsd  xmm2,QWORD PTR [rdx+0x8]
   140011e58:	mov    rax,rcx
   140011e5b:	mulsd  xmm0,QWORD PTR [rdx]
   140011e5f:	movsd  QWORD PTR [rdx+0x8],xmm2
   140011e64:	movsd  QWORD PTR [rdx],xmm0
   140011e68:	movups xmm0,XMMWORD PTR [rdx]
   140011e6b:	movups XMMWORD PTR [rcx],xmm0
   140011e6e:	ret    
   140011e6f:	int3   
   140011e70:	mov    rax,rsp
   140011e73:	mov    QWORD PTR [rax+0x8],rbx
   140011e77:	mov    QWORD PTR [rax+0x10],rbp
   140011e7b:	mov    QWORD PTR [rax+0x20],rsi
   140011e7f:	push   rdi
   140011e80:	push   r12
   140011e82:	push   r13
   140011e84:	push   r14
   140011e86:	push   r15
   140011e88:	sub    rsp,0x100
   140011e8f:	movaps XMMWORD PTR [rax-0x38],xmm6
   140011e93:	movaps XMMWORD PTR [rax-0x48],xmm7
   140011e97:	movaps XMMWORD PTR [rax-0x58],xmm8
   140011e9c:	movaps XMMWORD PTR [rax-0x68],xmm9
   140011ea1:	movaps XMMWORD PTR [rax-0x78],xmm10
   140011ea6:	movaps XMMWORD PTR [rax-0x88],xmm11
   140011eae:	movaps XMMWORD PTR [rax-0x98],xmm12
   140011eb6:	movaps XMMWORD PTR [rax-0xa8],xmm13
   140011ebe:	movaps XMMWORD PTR [rsp+0x70],xmm14
   140011ec4:	movaps XMMWORD PTR [rsp+0x60],xmm15
   140011eca:	mov    edi,DWORD PTR [rsp+0x168]
   140011ed1:	mov    r14,QWORD PTR [rsp+0x160]
   140011ed9:	movsd  xmm2,QWORD PTR [rip+0x2b66f]        # 0x14003d550
   140011ee1:	movsd  xmm8,QWORD PTR [rip+0x2bece]        # 0x14003ddb8
   140011eea:	xor    r15d,r15d
   140011eed:	cmp    edi,0x2
   140011ef0:	movaps xmm7,xmm8
   140011ef4:	mov    r12,r9
   140011ef7:	mov    r13,r8
   140011efa:	mov    esi,edx
   140011efc:	mov    rbp,rcx
   140011eff:	mov    ebx,0x1
   140011f04:	sete   r15b
   140011f08:	xorps  xmm9,xmm9
   140011f0c:	movsd  xmm12,QWORD PTR [rip+0x2b4c3]        # 0x14003d3d8
   140011f15:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140011f20:	movsd  xmm0,QWORD PTR [r13+0x0]
   140011f26:	mov    rax,QWORD PTR [rsp+0x158]
   140011f2e:	mov    rcx,QWORD PTR [rsp+0x150]
   140011f36:	movsd  xmm1,QWORD PTR [r13+0x8]
   140011f3c:	movsd  QWORD PTR [rsp+0x20],xmm0
   140011f42:	movaps xmm10,xmm7
   140011f46:	mulsd  xmm10,QWORD PTR [r12]
   140011f4c:	movsd  xmm15,QWORD PTR [rcx]
   140011f51:	movsd  xmm6,QWORD PTR [rcx+0x8]
   140011f56:	divsd  xmm10,xmm2
   140011f5b:	movaps xmm13,xmm15
   140011f5f:	movaps xmm11,xmm7
   140011f63:	movaps xmm14,xmm6
   140011f67:	movsd  QWORD PTR [rsp+0x28],xmm1
   140011f6d:	movsd  QWORD PTR [rsp+0x140],xmm6
   140011f76:	movsd  QWORD PTR [rsp+0x50],xmm15
   140011f7d:	mulsd  xmm11,QWORD PTR [r12+0x8]
   140011f84:	addsd  xmm10,xmm0
   140011f89:	movaps xmm0,xmm8
   140011f8d:	movsd  QWORD PTR [rsp+0x58],xmm6
   140011f93:	divsd  xmm11,xmm2
   140011f98:	movsd  QWORD PTR [rsp+0x30],xmm10
   140011f9f:	mulsd  xmm0,QWORD PTR [rax]
   140011fa3:	addsd  xmm11,xmm1
   140011fa8:	movsd  QWORD PTR [rsp+0x38],xmm11
   140011faf:	divsd  xmm0,xmm2
   140011fb3:	subsd  xmm13,xmm0
   140011fb8:	movaps xmm0,xmm8
   140011fbc:	mulsd  xmm0,QWORD PTR [rax+0x8]
   140011fc1:	movsd  QWORD PTR [rsp+0x40],xmm13
   140011fc8:	divsd  xmm0,xmm2
   140011fcc:	subsd  xmm14,xmm0
   140011fd1:	movsd  QWORD PTR [rsp+0x48],xmm14
   140011fd8:	test   ebx,ebx
   140011fda:	je     0x14001200f
   140011fdc:	lea    rcx,[rsp+0x20]
   140011fe1:	mov    edx,0x4
   140011fe6:	call   0x140010b10
   140011feb:	mov    edx,edi
   140011fed:	mov    rcx,r14
   140011ff0:	movaps xmm6,xmm0
   140011ff3:	call   0x140010b10
   140011ff8:	subsd  xmm0,QWORD PTR [rip+0x2c188]        # 0x14003e188
   140012000:	comisd xmm0,xmm6
   140012004:	ja     0x140012068
   140012006:	movsd  xmm6,QWORD PTR [rsp+0x140]
   14001200f:	lea    r8,[rsp+0x20]
   140012014:	mov    edx,esi
   140012016:	mov    rcx,rbp
   140012019:	xor    ebx,ebx
   14001201b:	call   0x140012f00
   140012020:	test   eax,eax
   140012022:	jne    0x1400120da
   140012028:	ucomisd xmm7,xmm9
   14001202d:	jp     0x14001203a
   14001202f:	jne    0x14001203a
   140012031:	ucomisd xmm8,xmm9
   140012036:	jp     0x14001203a
   140012038:	je     0x14001206f
   14001203a:	comisd xmm7,QWORD PTR [rip+0x2b9b6]        # 0x14003d9f8
   140012042:	movsd  xmm2,QWORD PTR [rip+0x2b506]        # 0x14003d550
   14001204a:	jbe    0x14001205b
   14001204c:	mulsd  xmm7,xmm12
   140012051:	mulsd  xmm8,xmm12
   140012056:	jmp    0x140011f20
   14001205b:	movaps xmm8,xmm9
   14001205f:	movaps xmm7,xmm9
   140012063:	jmp    0x140011f20
   140012068:	xor    eax,eax
   14001206a:	jmp    0x14001213f
   14001206f:	test   r15d,r15d
   140012072:	je     0x140012068
   140012074:	mov    ecx,DWORD PTR [rip+0x416fa]        # 0x140053774
   14001207a:	add    ecx,0x4
   14001207d:	call   0x140010cf0
   140012082:	mov    rdx,QWORD PTR [rip+0x416df]        # 0x140053768
   140012089:	movsxd r8,DWORD PTR [rip+0x416e4]        # 0x140053774
   140012090:	mov    rax,r8
   140012093:	inc    r8d
   140012096:	movsxd rcx,r8d
   140012099:	add    rax,rax
   14001209c:	inc    r8d
   14001209f:	add    rcx,rcx
   1400120a2:	movsd  QWORD PTR [rdx+rax*8],xmm10
   1400120a8:	movsd  QWORD PTR [rdx+rax*8+0x8],xmm11
   1400120af:	movsd  QWORD PTR [rdx+rcx*8],xmm13
   1400120b5:	movsd  QWORD PTR [rdx+rcx*8+0x8],xmm14
   1400120bc:	movsxd rcx,r8d
   1400120bf:	add    rcx,rcx
   1400120c2:	inc    r8d
   1400120c5:	movsd  QWORD PTR [rdx+rcx*8],xmm15
   1400120cb:	movsd  QWORD PTR [rdx+rcx*8+0x8],xmm6
   1400120d1:	mov    DWORD PTR [rip+0x4169c],r8d        # 0x140053774
   1400120d8:	jmp    0x14001213a
   1400120da:	mov    ecx,DWORD PTR [rip+0x41694]        # 0x140053774
   1400120e0:	add    ecx,0x4
   1400120e3:	call   0x140010cf0
   1400120e8:	mov    rcx,QWORD PTR [rip+0x41679]        # 0x140053768
   1400120ef:	movsxd rdx,DWORD PTR [rip+0x4167e]        # 0x140053774
   1400120f6:	mov    rax,rdx
   1400120f9:	inc    edx
   1400120fb:	add    rax,rax
   1400120fe:	movsd  QWORD PTR [rcx+rax*8],xmm10
   140012104:	movsd  QWORD PTR [rcx+rax*8+0x8],xmm11
   14001210b:	movsxd rax,edx
   14001210e:	add    rax,rax
   140012111:	inc    edx
   140012113:	movsd  QWORD PTR [rcx+rax*8],xmm13
   140012119:	movsd  QWORD PTR [rcx+rax*8+0x8],xmm14
   140012120:	movsxd rax,edx
   140012123:	add    rax,rax
   140012126:	inc    edx
   140012128:	mov    DWORD PTR [rip+0x41646],edx        # 0x140053774
   14001212e:	movsd  QWORD PTR [rcx+rax*8],xmm15
   140012134:	movsd  QWORD PTR [rcx+rax*8+0x8],xmm6
   14001213a:	mov    eax,0x1
   14001213f:	movaps xmm14,XMMWORD PTR [rsp+0x70]
   140012145:	movaps xmm15,XMMWORD PTR [rsp+0x60]
   14001214b:	lea    r11,[rsp+0x100]
   140012153:	mov    rbx,QWORD PTR [r11+0x30]
   140012157:	mov    rbp,QWORD PTR [r11+0x38]
   14001215b:	mov    rsi,QWORD PTR [r11+0x48]
   14001215f:	movaps xmm6,XMMWORD PTR [r11-0x10]
   140012164:	movaps xmm7,XMMWORD PTR [r11-0x20]
   140012169:	movaps xmm8,XMMWORD PTR [r11-0x30]
   14001216e:	movaps xmm9,XMMWORD PTR [r11-0x40]
   140012173:	movaps xmm10,XMMWORD PTR [r11-0x50]
   140012178:	movaps xmm11,XMMWORD PTR [r11-0x60]
   14001217d:	movaps xmm12,XMMWORD PTR [r11-0x70]
   140012182:	movaps xmm13,XMMWORD PTR [r11-0x80]
   140012187:	mov    rsp,r11
   14001218a:	pop    r15
   14001218c:	pop    r14
   14001218e:	pop    r13
   140012190:	pop    r12
   140012192:	pop    rdi
   140012193:	ret    
   140012194:	int3   
   140012195:	int3   
   140012196:	int3   
   140012197:	int3   
   140012198:	int3   
   140012199:	int3   
   14001219a:	int3   
   14001219b:	int3   
   14001219c:	int3   
   14001219d:	int3   
   14001219e:	int3   
   14001219f:	int3   
   1400121a0:	mov    rax,rsp
   1400121a3:	mov    QWORD PTR [rax+0x10],rbx
   1400121a7:	mov    QWORD PTR [rax+0x18],rsi
   1400121ab:	mov    QWORD PTR [rax+0x20],rdi
   1400121af:	push   rbp
   1400121b0:	push   r14
   1400121b2:	push   r15
   1400121b4:	lea    rbp,[rax-0x5f]
   1400121b8:	sub    rsp,0x100
   1400121bf:	movaps XMMWORD PTR [rax-0x28],xmm6
   1400121c3:	movaps XMMWORD PTR [rax-0x38],xmm7
   1400121c7:	movaps XMMWORD PTR [rax-0x48],xmm8
   1400121cc:	xor    esi,esi
   1400121ce:	xorps  xmm8,xmm8
   1400121d2:	mov    r14,r8
   1400121d5:	mov    r15,rcx
   1400121d8:	mov    edi,esi
   1400121da:	mov    ebx,esi
   1400121dc:	movaps XMMWORD PTR [rax-0x58],xmm9
   1400121e1:	movaps XMMWORD PTR [rax-0x68],xmm10
   1400121e6:	movaps XMMWORD PTR [rax-0x78],xmm11
   1400121eb:	movsd  xmm11,QWORD PTR [rdx+0x8]
   1400121f1:	movsd  xmm10,QWORD PTR [rdx+0x18]
   1400121f7:	subsd  xmm10,xmm11
   1400121fc:	movaps XMMWORD PTR [rax-0x88],xmm12
   140012204:	movaps XMMWORD PTR [rax-0x98],xmm13
   14001220c:	movsd  xmm13,QWORD PTR [rdx]
   140012211:	movsd  xmm12,QWORD PTR [rdx+0x10]
   140012217:	subsd  xmm12,xmm13
   14001221c:	ucomisd xmm12,xmm8
   140012221:	jp     0x140012a51
   140012227:	jne    0x140012a51
   14001222d:	ucomisd xmm10,xmm8
   140012232:	jp     0x14001263e
   140012238:	jne    0x14001263e
   14001223e:	movsd  xmm5,QWORD PTR [rcx]
   140012242:	movsd  xmm4,QWORD PTR [rcx+0x10]
   140012247:	movsd  xmm7,QWORD PTR [rip+0x2b301]        # 0x14003d550
   14001224f:	lea    rdx,[rsp+0x20]
   140012254:	mov    QWORD PTR [rax+0x8],r12
   140012258:	movsd  xmm3,QWORD PTR [rcx+0x20]
   14001225d:	movaps xmm1,xmm4
   140012260:	movaps xmm2,xmm5
   140012263:	mulsd  xmm1,xmm7
   140012267:	mulsd  xmm2,xmm7
   14001226b:	addsd  xmm1,QWORD PTR [rcx+0x30]
   140012270:	mulsd  xmm3,xmm7
   140012274:	lea    rcx,[rbp-0x69]
   140012278:	movaps xmm0,xmm3
   14001227b:	addsd  xmm2,xmm3
   14001227f:	addsd  xmm0,xmm5
   140012283:	subsd  xmm1,xmm0
   140012287:	movaps xmm0,xmm4
   14001228a:	subsd  xmm4,xmm5
   14001228e:	mulsd  xmm0,QWORD PTR [rip+0x2bf0a]        # 0x14003e1a0
   140012296:	mulsd  xmm4,xmm7
   14001229a:	subsd  xmm5,xmm13
   14001229f:	subsd  xmm2,xmm0
   1400122a3:	movsd  QWORD PTR [rbp-0x51],xmm1
   1400122a8:	movsd  QWORD PTR [rbp-0x59],xmm2
   1400122ad:	movsd  QWORD PTR [rbp-0x61],xmm4
   1400122b2:	movsd  QWORD PTR [rbp-0x69],xmm5
   1400122b7:	call   0x140017b00
   1400122bc:	lea    rdx,[rsp+0x38]
   1400122c1:	lea    rcx,[rbp-0x69]
   1400122c5:	movsxd r12,eax
   1400122c8:	movsd  xmm5,QWORD PTR [r15+0x8]
   1400122ce:	movsd  xmm4,QWORD PTR [r15+0x18]
   1400122d4:	movsd  xmm3,QWORD PTR [r15+0x28]
   1400122da:	mulsd  xmm3,xmm7
   1400122de:	movaps xmm1,xmm4
   1400122e1:	movaps xmm2,xmm5
   1400122e4:	movaps xmm0,xmm3
   1400122e7:	mulsd  xmm1,xmm7
   1400122eb:	mulsd  xmm2,xmm7
   1400122ef:	addsd  xmm1,QWORD PTR [r15+0x38]
   1400122f5:	addsd  xmm0,xmm5
   1400122f9:	addsd  xmm2,xmm3
   1400122fd:	subsd  xmm1,xmm0
   140012301:	movaps xmm0,xmm4
   140012304:	subsd  xmm4,xmm5
   140012308:	mulsd  xmm0,QWORD PTR [rip+0x2be90]        # 0x14003e1a0
   140012310:	mulsd  xmm4,xmm7
   140012314:	subsd  xmm5,xmm11
   140012319:	subsd  xmm2,xmm0
   14001231d:	movsd  QWORD PTR [rbp-0x51],xmm1
   140012322:	movsd  QWORD PTR [rbp-0x59],xmm2
   140012327:	movsd  QWORD PTR [rbp-0x61],xmm4
   14001232c:	movsd  QWORD PTR [rbp-0x69],xmm5
   140012331:	call   0x140017b00
   140012336:	movsxd rcx,eax
   140012339:	mov    rax,rcx
   14001233c:	cmp    r12d,0x4
   140012340:	jne    0x140012437
   140012346:	cmp    ecx,r12d
   140012349:	jne    0x14001235b
   14001234b:	mov    eax,r12d
   14001234e:	mov    r12,QWORD PTR [rsp+0x120]
   140012356:	jmp    0x140012b31
   14001235b:	movsd  xmm0,QWORD PTR [rip+0x2b07d]        # 0x14003d3e0
   140012363:	cmp    rax,0x4
   140012367:	jl     0x1400123f6
   14001236d:	add    rcx,0xfffffffffffffffd
   140012371:	movsd  xmm1,QWORD PTR [rsp+rsi*8+0x38]
   140012377:	comisd xmm1,xmm8
   14001237c:	jb     0x14001238f
   14001237e:	comisd xmm0,xmm1
   140012382:	jb     0x14001238f
   140012384:	movsd  QWORD PTR [r14+rbx*8],xmm1
   14001238a:	inc    edi
   14001238c:	inc    rbx
   14001238f:	movsd  xmm1,QWORD PTR [rbp+rsi*8-0x79]
   140012395:	comisd xmm1,xmm8
   14001239a:	jb     0x1400123ad
   14001239c:	comisd xmm0,xmm1
   1400123a0:	jb     0x1400123ad
   1400123a2:	movsd  QWORD PTR [r14+rbx*8],xmm1
   1400123a8:	inc    edi
   1400123aa:	inc    rbx
   1400123ad:	movsd  xmm1,QWORD PTR [rbp+rsi*8-0x71]
   1400123b3:	comisd xmm1,xmm8
   1400123b8:	jb     0x1400123cb
   1400123ba:	comisd xmm0,xmm1
   1400123be:	jb     0x1400123cb
   1400123c0:	movsd  QWORD PTR [r14+rbx*8],xmm1
   1400123c6:	inc    edi
   1400123c8:	inc    rbx
   1400123cb:	movsd  xmm1,QWORD PTR [rbp+rsi*8-0x69]
   1400123d1:	comisd xmm1,xmm8
   1400123d6:	jb     0x1400123e9
   1400123d8:	comisd xmm0,xmm1
   1400123dc:	jb     0x1400123e9
   1400123de:	movsd  QWORD PTR [r14+rbx*8],xmm1
   1400123e4:	inc    edi
   1400123e6:	inc    rbx
   1400123e9:	add    rsi,0x4
   1400123ed:	cmp    rsi,rcx
   1400123f0:	jl     0x140012371
   1400123f6:	cmp    rsi,rax
   1400123f9:	jge    0x14001262f
   1400123ff:	lea    rcx,[r14+rbx*8]
   140012403:	movsd  xmm1,QWORD PTR [rsp+rsi*8+0x38]
   140012409:	comisd xmm1,xmm8
   14001240e:	jb     0x140012420
   140012410:	comisd xmm0,xmm1
   140012414:	jb     0x140012420
   140012416:	movsd  QWORD PTR [rcx],xmm1
   14001241a:	inc    edi
   14001241c:	add    rcx,0x8
   140012420:	inc    rsi
   140012423:	cmp    rsi,rax
   140012426:	jl     0x140012403
   140012428:	mov    r12,QWORD PTR [rsp+0x120]
   140012430:	mov    eax,edi
   140012432:	jmp    0x140012b31
   140012437:	cmp    ecx,0x4
   14001243a:	jne    0x140012526
   140012440:	movsd  xmm0,QWORD PTR [rip+0x2af98]        # 0x14003d3e0
   140012448:	cmp    r12,0x4
   14001244c:	jl     0x1400124e5
   140012452:	lea    rax,[r12-0x3]
   140012457:	nop    WORD PTR [rax+rax*1+0x0]
   140012460:	movsd  xmm1,QWORD PTR [rsp+rsi*8+0x20]
   140012466:	comisd xmm1,xmm8
   14001246b:	jb     0x14001247e
   14001246d:	comisd xmm0,xmm1
   140012471:	jb     0x14001247e
   140012473:	movsd  QWORD PTR [r14+rbx*8],xmm1
   140012479:	inc    edi
   14001247b:	inc    rbx
   14001247e:	movsd  xmm1,QWORD PTR [rsp+rsi*8+0x28]
   140012484:	comisd xmm1,xmm8
   140012489:	jb     0x14001249c
   14001248b:	comisd xmm0,xmm1
   14001248f:	jb     0x14001249c
   140012491:	movsd  QWORD PTR [r14+rbx*8],xmm1
   140012497:	inc    edi
   140012499:	inc    rbx
   14001249c:	movsd  xmm1,QWORD PTR [rsp+rsi*8+0x30]
   1400124a2:	comisd xmm1,xmm8
   1400124a7:	jb     0x1400124ba
   1400124a9:	comisd xmm0,xmm1
   1400124ad:	jb     0x1400124ba
   1400124af:	movsd  QWORD PTR [r14+rbx*8],xmm1
   1400124b5:	inc    edi
   1400124b7:	inc    rbx
   1400124ba:	movsd  xmm1,QWORD PTR [rsp+rsi*8+0x38]
   1400124c0:	comisd xmm1,xmm8
   1400124c5:	jb     0x1400124d8
   1400124c7:	comisd xmm0,xmm1
   1400124cb:	jb     0x1400124d8
   1400124cd:	movsd  QWORD PTR [r14+rbx*8],xmm1
   1400124d3:	inc    edi
   1400124d5:	inc    rbx
   1400124d8:	add    rsi,0x4
   1400124dc:	cmp    rsi,rax
   1400124df:	jl     0x140012460
   1400124e5:	cmp    rsi,r12
   1400124e8:	jge    0x14001262f
   1400124ee:	lea    rax,[r14+rbx*8]
   1400124f2:	movsd  xmm1,QWORD PTR [rsp+rsi*8+0x20]
   1400124f8:	comisd xmm1,xmm8
   1400124fd:	jb     0x14001250f
   1400124ff:	comisd xmm0,xmm1
   140012503:	jb     0x14001250f
   140012505:	movsd  QWORD PTR [rax],xmm1
   140012509:	inc    edi
   14001250b:	add    rax,0x8
   14001250f:	inc    rsi
   140012512:	cmp    rsi,r12
   140012515:	jl     0x1400124f2
   140012517:	mov    r12,QWORD PTR [rsp+0x120]
   14001251f:	mov    eax,edi
   140012521:	jmp    0x140012b31
   140012526:	mov    r8,rsi
   140012529:	test   r12d,r12d
   14001252c:	jle    0x14001262f
   140012532:	movsd  xmm1,QWORD PTR [rip+0x2aea6]        # 0x14003d3e0
   14001253a:	nop    WORD PTR [rax+rax*1+0x0]
   140012540:	mov    rcx,rsi
   140012543:	cmp    rax,0x4
   140012547:	jl     0x1400125ed
   14001254d:	movsd  xmm0,QWORD PTR [rsp+r8*8+0x20]
   140012554:	lea    rdx,[rax-0x3]
   140012558:	ucomisd xmm0,QWORD PTR [rsp+rcx*8+0x38]
   14001255e:	jp     0x14001257a
   140012560:	jne    0x14001257a
   140012562:	comisd xmm0,xmm8
   140012567:	jb     0x14001257a
   140012569:	comisd xmm1,xmm0
   14001256d:	jb     0x14001257a
   14001256f:	movsd  QWORD PTR [r14+rbx*8],xmm0
   140012575:	inc    edi
   140012577:	inc    rbx
   14001257a:	ucomisd xmm0,QWORD PTR [rbp+rcx*8-0x79]
   140012580:	jp     0x14001259c
   140012582:	jne    0x14001259c
   140012584:	comisd xmm0,xmm8
   140012589:	jb     0x14001259c
   14001258b:	comisd xmm1,xmm0
   14001258f:	jb     0x14001259c
   140012591:	movsd  QWORD PTR [r14+rbx*8],xmm0
   140012597:	inc    edi
   140012599:	inc    rbx
   14001259c:	ucomisd xmm0,QWORD PTR [rbp+rcx*8-0x71]
   1400125a2:	jp     0x1400125be
   1400125a4:	jne    0x1400125be
   1400125a6:	comisd xmm0,xmm8
   1400125ab:	jb     0x1400125be
   1400125ad:	comisd xmm1,xmm0
   1400125b1:	jb     0x1400125be
   1400125b3:	movsd  QWORD PTR [r14+rbx*8],xmm0
   1400125b9:	inc    edi
   1400125bb:	inc    rbx
   1400125be:	ucomisd xmm0,QWORD PTR [rbp+rcx*8-0x69]
   1400125c4:	jp     0x1400125e0
   1400125c6:	jne    0x1400125e0
   1400125c8:	comisd xmm0,xmm8
   1400125cd:	jb     0x1400125e0
   1400125cf:	comisd xmm1,xmm0
   1400125d3:	jb     0x1400125e0
   1400125d5:	movsd  QWORD PTR [r14+rbx*8],xmm0
   1400125db:	inc    edi
   1400125dd:	inc    rbx
   1400125e0:	add    rcx,0x4
   1400125e4:	cmp    rcx,rdx
   1400125e7:	jl     0x140012558
   1400125ed:	cmp    rcx,rax
   1400125f0:	jge    0x140012623
   1400125f2:	movsd  xmm0,QWORD PTR [rsp+r8*8+0x20]
   1400125f9:	ucomisd xmm0,QWORD PTR [rsp+rcx*8+0x38]
   1400125ff:	jp     0x14001261b
   140012601:	jne    0x14001261b
   140012603:	comisd xmm0,xmm8
   140012608:	jb     0x14001261b
   14001260a:	comisd xmm1,xmm0
   14001260e:	jb     0x14001261b
   140012610:	movsd  QWORD PTR [r14+rbx*8],xmm0
   140012616:	inc    edi
   140012618:	inc    rbx
   14001261b:	inc    rcx
   14001261e:	cmp    rcx,rax
   140012621:	jl     0x1400125f9
   140012623:	inc    r8
   140012626:	cmp    r8,r12
   140012629:	jl     0x140012540
   14001262f:	mov    r12,QWORD PTR [rsp+0x120]
   140012637:	mov    eax,edi
   140012639:	jmp    0x140012b31
   14001263e:	movsd  xmm5,QWORD PTR [rcx]
   140012642:	movsd  xmm4,QWORD PTR [rcx+0x10]
   140012647:	movsd  xmm7,QWORD PTR [rip+0x2af01]        # 0x14003d550
   14001264f:	lea    rdx,[rsp+0x20]
   140012654:	movsd  xmm3,QWORD PTR [rcx+0x20]
   140012659:	movsd  xmm12,QWORD PTR [rip+0x2bb3e]        # 0x14003e1a0
   140012662:	movaps xmm1,xmm4
   140012665:	mulsd  xmm1,xmm7
   140012669:	mulsd  xmm3,xmm7
   14001266d:	addsd  xmm1,QWORD PTR [rcx+0x30]
   140012672:	movaps xmm2,xmm5
   140012675:	lea    rcx,[rbp-0x69]
   140012679:	mulsd  xmm2,xmm7
   14001267d:	movaps xmm0,xmm3
   140012680:	addsd  xmm2,xmm3
   140012684:	addsd  xmm0,xmm5
   140012688:	subsd  xmm1,xmm0
   14001268c:	movaps xmm0,xmm4
   14001268f:	subsd  xmm4,xmm5
   140012693:	mulsd  xmm0,xmm12
   140012698:	mulsd  xmm4,xmm7
   14001269c:	subsd  xmm2,xmm0
   1400126a0:	subsd  xmm5,xmm13
   1400126a5:	movsd  QWORD PTR [rbp-0x51],xmm1
   1400126aa:	movsd  QWORD PTR [rbp-0x59],xmm2
   1400126af:	movsd  QWORD PTR [rbp-0x61],xmm4
   1400126b4:	movsd  QWORD PTR [rbp-0x69],xmm5
   1400126b9:	call   0x140017b00
   1400126be:	cmp    eax,0x4
   1400126c1:	jne    0x1400126c8
   1400126c3:	jmp    0x140012b31
   1400126c8:	movsd  xmm6,QWORD PTR [rip+0x2ad10]        # 0x14003d3e0
   1400126d0:	movsxd rcx,eax
   1400126d3:	cmp    rcx,0x4
   1400126d7:	jl     0x14001298a
   1400126dd:	lea    rax,[rcx-0x3]
   1400126e1:	movsd  xmm9,QWORD PTR [rsp+rsi*8+0x20]
   1400126e8:	comisd xmm9,xmm8
   1400126ed:	jb     0x140012788
   1400126f3:	comisd xmm6,xmm9
   1400126f8:	jb     0x140012788
   1400126fe:	movsd  xmm4,QWORD PTR [r15+0x8]
   140012704:	movsd  xmm3,QWORD PTR [r15+0x18]
   14001270a:	movsd  xmm2,QWORD PTR [r15+0x28]
   140012710:	mulsd  xmm2,xmm7
   140012714:	movaps xmm5,xmm3
   140012717:	movaps xmm0,xmm2
   14001271a:	movaps xmm1,xmm4
   14001271d:	mulsd  xmm5,xmm7
   140012721:	mulsd  xmm1,xmm7
   140012725:	addsd  xmm5,QWORD PTR [r15+0x38]
   14001272b:	addsd  xmm0,xmm4
   14001272f:	addsd  xmm1,xmm2
   140012733:	subsd  xmm5,xmm0
   140012737:	movaps xmm0,xmm3
   14001273a:	subsd  xmm3,xmm4
   14001273e:	mulsd  xmm0,xmm12
   140012743:	mulsd  xmm5,xmm9
   140012748:	mulsd  xmm3,xmm7
   14001274c:	subsd  xmm1,xmm0
   140012750:	addsd  xmm5,xmm1
   140012754:	mulsd  xmm5,xmm9
   140012759:	addsd  xmm5,xmm3
   14001275d:	mulsd  xmm5,xmm9
   140012762:	addsd  xmm5,xmm4
   140012766:	subsd  xmm5,xmm11
   14001276b:	divsd  xmm5,xmm10
   140012770:	comisd xmm5,xmm8
   140012775:	jb     0x140012788
   140012777:	comisd xmm6,xmm5
   14001277b:	jb     0x140012788
   14001277d:	movsd  QWORD PTR [r14+rbx*8],xmm9
   140012783:	inc    edi
   140012785:	inc    rbx
   140012788:	movsd  xmm9,QWORD PTR [rsp+rsi*8+0x28]
   14001278f:	comisd xmm9,xmm8
   140012794:	jb     0x14001282f
   14001279a:	comisd xmm6,xmm9
   14001279f:	jb     0x14001282f
   1400127a5:	movsd  xmm4,QWORD PTR [r15+0x8]
   1400127ab:	movsd  xmm3,QWORD PTR [r15+0x18]
   1400127b1:	movsd  xmm2,QWORD PTR [r15+0x28]
   1400127b7:	mulsd  xmm2,xmm7
   1400127bb:	movaps xmm5,xmm3
   1400127be:	movaps xmm0,xmm2
   1400127c1:	movaps xmm1,xmm4
   1400127c4:	mulsd  xmm5,xmm7
   1400127c8:	mulsd  xmm1,xmm7
   1400127cc:	addsd  xmm5,QWORD PTR [r15+0x38]
   1400127d2:	addsd  xmm0,xmm4
   1400127d6:	addsd  xmm1,xmm2
   1400127da:	subsd  xmm5,xmm0
   1400127de:	movaps xmm0,xmm3
   1400127e1:	subsd  xmm3,xmm4
   1400127e5:	mulsd  xmm0,xmm12
   1400127ea:	mulsd  xmm5,xmm9
   1400127ef:	mulsd  xmm3,xmm7
   1400127f3:	subsd  xmm1,xmm0
   1400127f7:	addsd  xmm5,xmm1
   1400127fb:	mulsd  xmm5,xmm9
   140012800:	addsd  xmm5,xmm3
   140012804:	mulsd  xmm5,xmm9
   140012809:	addsd  xmm5,xmm4
   14001280d:	subsd  xmm5,xmm11
   140012812:	divsd  xmm5,xmm10
   140012817:	comisd xmm5,xmm8
   14001281c:	jb     0x14001282f
   14001281e:	comisd xmm6,xmm5
   140012822:	jb     0x14001282f
   140012824:	movsd  QWORD PTR [r14+rbx*8],xmm9
   14001282a:	inc    edi
   14001282c:	inc    rbx
   14001282f:	movsd  xmm9,QWORD PTR [rsp+rsi*8+0x30]
   140012836:	comisd xmm9,xmm8
   14001283b:	jb     0x1400128d6
   140012841:	comisd xmm6,xmm9
   140012846:	jb     0x1400128d6
   14001284c:	movsd  xmm4,QWORD PTR [r15+0x8]
   140012852:	movsd  xmm3,QWORD PTR [r15+0x18]
   140012858:	movsd  xmm2,QWORD PTR [r15+0x28]
   14001285e:	mulsd  xmm2,xmm7
   140012862:	movaps xmm5,xmm3
   140012865:	movaps xmm0,xmm2
   140012868:	movaps xmm1,xmm4
   14001286b:	mulsd  xmm5,xmm7
   14001286f:	mulsd  xmm1,xmm7
   140012873:	addsd  xmm5,QWORD PTR [r15+0x38]
   140012879:	addsd  xmm0,xmm4
   14001287d:	addsd  xmm1,xmm2
   140012881:	subsd  xmm5,xmm0
   140012885:	movaps xmm0,xmm3
   140012888:	subsd  xmm3,xmm4
   14001288c:	mulsd  xmm0,xmm12
   140012891:	mulsd  xmm5,xmm9
   140012896:	mulsd  xmm3,xmm7
   14001289a:	subsd  xmm1,xmm0
   14001289e:	addsd  xmm5,xmm1
   1400128a2:	mulsd  xmm5,xmm9
   1400128a7:	addsd  xmm5,xmm3
   1400128ab:	mulsd  xmm5,xmm9
   1400128b0:	addsd  xmm5,xmm4
   1400128b4:	subsd  xmm5,xmm11
   1400128b9:	divsd  xmm5,xmm10
   1400128be:	comisd xmm5,xmm8
   1400128c3:	jb     0x1400128d6
   1400128c5:	comisd xmm6,xmm5
   1400128c9:	jb     0x1400128d6
   1400128cb:	movsd  QWORD PTR [r14+rbx*8],xmm9
   1400128d1:	inc    edi
   1400128d3:	inc    rbx
   1400128d6:	movsd  xmm9,QWORD PTR [rsp+rsi*8+0x38]
   1400128dd:	comisd xmm9,xmm8
   1400128e2:	jb     0x14001297d
   1400128e8:	comisd xmm6,xmm9
   1400128ed:	jb     0x14001297d
   1400128f3:	movsd  xmm4,QWORD PTR [r15+0x8]
   1400128f9:	movsd  xmm3,QWORD PTR [r15+0x18]
   1400128ff:	movsd  xmm2,QWORD PTR [r15+0x28]
   140012905:	mulsd  xmm2,xmm7
   140012909:	movaps xmm5,xmm3
   14001290c:	movaps xmm0,xmm2
   14001290f:	movaps xmm1,xmm4
   140012912:	mulsd  xmm5,xmm7
   140012916:	mulsd  xmm1,xmm7
   14001291a:	addsd  xmm5,QWORD PTR [r15+0x38]
   140012920:	addsd  xmm0,xmm4
   140012924:	addsd  xmm1,xmm2
   140012928:	subsd  xmm5,xmm0
   14001292c:	movaps xmm0,xmm3
   14001292f:	subsd  xmm3,xmm4
   140012933:	mulsd  xmm0,xmm12
   140012938:	mulsd  xmm5,xmm9
   14001293d:	mulsd  xmm3,xmm7
   140012941:	subsd  xmm1,xmm0
   140012945:	addsd  xmm5,xmm1
   140012949:	mulsd  xmm5,xmm9
   14001294e:	addsd  xmm5,xmm3
   140012952:	mulsd  xmm5,xmm9
   140012957:	addsd  xmm5,xmm4
   14001295b:	subsd  xmm5,xmm11
   140012960:	divsd  xmm5,xmm10
   140012965:	comisd xmm5,xmm8
   14001296a:	jb     0x14001297d
   14001296c:	comisd xmm6,xmm5
   140012970:	jb     0x14001297d
   140012972:	movsd  QWORD PTR [r14+rbx*8],xmm9
   140012978:	inc    edi
   14001297a:	inc    rbx
   14001297d:	add    rsi,0x4
   140012981:	cmp    rsi,rax
   140012984:	jl     0x1400126e1
   14001298a:	cmp    rsi,rcx
   14001298d:	jge    0x140012a4a
   140012993:	lea    rax,[r14+rbx*8]
   140012997:	movsd  xmm9,QWORD PTR [rsp+rsi*8+0x20]
   14001299e:	comisd xmm9,xmm8
   1400129a3:	jb     0x140012a3e
   1400129a9:	comisd xmm6,xmm9
   1400129ae:	jb     0x140012a3e
   1400129b4:	movsd  xmm4,QWORD PTR [r15+0x8]
   1400129ba:	movsd  xmm3,QWORD PTR [r15+0x18]
   1400129c0:	movsd  xmm2,QWORD PTR [r15+0x28]
   1400129c6:	mulsd  xmm2,xmm7
   1400129ca:	movaps xmm5,xmm3
   1400129cd:	movaps xmm0,xmm2
   1400129d0:	movaps xmm1,xmm4
   1400129d3:	mulsd  xmm5,xmm7
   1400129d7:	mulsd  xmm1,xmm7
   1400129db:	addsd  xmm5,QWORD PTR [r15+0x38]
   1400129e1:	addsd  xmm0,xmm4
   1400129e5:	addsd  xmm1,xmm2
   1400129e9:	subsd  xmm5,xmm0
   1400129ed:	movaps xmm0,xmm3
   1400129f0:	subsd  xmm3,xmm4
   1400129f4:	mulsd  xmm0,xmm12
   1400129f9:	mulsd  xmm5,xmm9
   1400129fe:	mulsd  xmm3,xmm7
   140012a02:	subsd  xmm1,xmm0
   140012a06:	addsd  xmm5,xmm1
   140012a0a:	mulsd  xmm5,xmm9
   140012a0f:	addsd  xmm5,xmm3
   140012a13:	mulsd  xmm5,xmm9
   140012a18:	addsd  xmm5,xmm4
   140012a1c:	subsd  xmm5,xmm11
   140012a21:	divsd  xmm5,xmm10
   140012a26:	comisd xmm5,xmm8
   140012a2b:	jb     0x140012a3e
   140012a2d:	comisd xmm6,xmm5
   140012a31:	jb     0x140012a3e
   140012a33:	movsd  QWORD PTR [rax],xmm9
   140012a38:	inc    edi
   140012a3a:	add    rax,0x8
   140012a3e:	inc    rsi
   140012a41:	cmp    rsi,rcx
   140012a44:	jl     0x140012997
   140012a4a:	mov    eax,edi
   140012a4c:	jmp    0x140012b31
   140012a51:	movsd  xmm9,QWORD PTR [rip+0x2aaf6]        # 0x14003d550
   140012a5a:	movsd  xmm3,QWORD PTR [rcx+0x28]
   140012a5f:	movsd  xmm4,QWORD PTR [rcx+0x18]
   140012a64:	divsd  xmm10,xmm12
   140012a69:	movaps XMMWORD PTR [rsp+0x70],xmm14
   140012a6f:	lea    rdx,[rsp+0x20]
   140012a74:	movsd  xmm5,QWORD PTR [rcx+0x8]
   140012a79:	movsd  xmm2,QWORD PTR [rcx+0x38]
   140012a7e:	movsd  xmm14,QWORD PTR [rip+0x2b719]        # 0x14003e1a0
   140012a87:	movaps xmm0,xmm10
   140012a8b:	movaps xmm1,xmm10
   140012a8f:	mulsd  xmm0,QWORD PTR [rcx+0x20]
   140012a94:	mulsd  xmm1,QWORD PTR [rcx]
   140012a98:	subsd  xmm3,xmm0
   140012a9c:	subsd  xmm5,xmm1
   140012aa0:	movaps xmm0,xmm10
   140012aa4:	mulsd  xmm0,QWORD PTR [rcx+0x10]
   140012aa9:	mulsd  xmm3,xmm9
   140012aae:	subsd  xmm4,xmm0
   140012ab2:	movaps xmm0,xmm10
   140012ab6:	mulsd  xmm0,QWORD PTR [rcx+0x30]
   140012abb:	movaps xmm1,xmm4
   140012abe:	lea    rcx,[rbp-0x69]
   140012ac2:	mulsd  xmm1,xmm9
   140012ac7:	subsd  xmm2,xmm0
   140012acb:	movaps xmm0,xmm3
   140012ace:	addsd  xmm0,xmm5
   140012ad2:	addsd  xmm2,xmm1
   140012ad6:	movaps xmm1,xmm5
   140012ad9:	mulsd  xmm1,xmm9
   140012ade:	subsd  xmm2,xmm0
   140012ae2:	movaps xmm0,xmm4
   140012ae5:	addsd  xmm1,xmm3
   140012ae9:	mulsd  xmm0,xmm14
   140012aee:	subsd  xmm1,xmm0
   140012af2:	movaps xmm0,xmm13
   140012af6:	subsd  xmm4,xmm5
   140012afa:	mulsd  xmm0,xmm10
   140012aff:	mulsd  xmm4,xmm9
   140012b04:	subsd  xmm0,xmm11
   140012b09:	movsd  QWORD PTR [rbp-0x51],xmm2
   140012b0e:	movsd  QWORD PTR [rbp-0x59],xmm1
   140012b13:	addsd  xmm0,xmm5
   140012b17:	movsd  QWORD PTR [rbp-0x61],xmm4
   140012b1c:	movsd  QWORD PTR [rbp-0x69],xmm0
   140012b21:	call   0x140017b00
   140012b26:	cmp    eax,0x4
   140012b29:	jne    0x140012b76
   140012b2b:	movaps xmm14,XMMWORD PTR [rsp+0x70]
   140012b31:	lea    r11,[rsp+0x100]
   140012b39:	mov    rbx,QWORD PTR [r11+0x28]
   140012b3d:	mov    rsi,QWORD PTR [r11+0x30]
   140012b41:	mov    rdi,QWORD PTR [r11+0x38]
   140012b45:	movaps xmm6,XMMWORD PTR [r11-0x10]
   140012b4a:	movaps xmm7,XMMWORD PTR [r11-0x20]
   140012b4f:	movaps xmm8,XMMWORD PTR [r11-0x30]
   140012b54:	movaps xmm9,XMMWORD PTR [r11-0x40]
   140012b59:	movaps xmm10,XMMWORD PTR [r11-0x50]
   140012b5e:	movaps xmm11,XMMWORD PTR [r11-0x60]
   140012b63:	movaps xmm12,XMMWORD PTR [r11-0x70]
   140012b68:	movaps xmm13,XMMWORD PTR [r11-0x80]
   140012b6d:	mov    rsp,r11
   140012b70:	pop    r15
   140012b72:	pop    r14
   140012b74:	pop    rbp
   140012b75:	ret    
   140012b76:	movsd  xmm6,QWORD PTR [rip+0x2a862]        # 0x14003d3e0
   140012b7e:	movsxd rcx,eax
   140012b81:	cmp    rcx,0x4
   140012b85:	jl     0x140012e31
   140012b8b:	lea    rax,[rcx-0x3]
   140012b8f:	nop
   140012b90:	movsd  xmm7,QWORD PTR [rsp+rsi*8+0x20]
   140012b96:	comisd xmm7,xmm8
   140012b9b:	jb     0x140012c35
   140012ba1:	comisd xmm6,xmm7
   140012ba5:	jb     0x140012c35
   140012bab:	movsd  xmm4,QWORD PTR [r15]
   140012bb0:	movsd  xmm3,QWORD PTR [r15+0x10]
   140012bb6:	movsd  xmm2,QWORD PTR [r15+0x20]
   140012bbc:	mulsd  xmm2,xmm9
   140012bc1:	movaps xmm5,xmm3
   140012bc4:	movaps xmm0,xmm2
   140012bc7:	movaps xmm1,xmm4
   140012bca:	mulsd  xmm5,xmm9
   140012bcf:	mulsd  xmm1,xmm9
   140012bd4:	addsd  xmm5,QWORD PTR [r15+0x30]
   140012bda:	addsd  xmm0,xmm4
   140012bde:	addsd  xmm1,xmm2
   140012be2:	subsd  xmm5,xmm0
   140012be6:	movaps xmm0,xmm3
   140012be9:	subsd  xmm3,xmm4
   140012bed:	mulsd  xmm0,xmm14
   140012bf2:	mulsd  xmm5,xmm7
   140012bf6:	mulsd  xmm3,xmm9
   140012bfb:	subsd  xmm1,xmm0
   140012bff:	addsd  xmm5,xmm1
   140012c03:	mulsd  xmm5,xmm7
   140012c07:	addsd  xmm5,xmm3
   140012c0b:	mulsd  xmm5,xmm7
   140012c0f:	addsd  xmm5,xmm4
   140012c13:	subsd  xmm5,xmm13
   140012c18:	divsd  xmm5,xmm12
   140012c1d:	comisd xmm5,xmm8
   140012c22:	jb     0x140012c35
   140012c24:	comisd xmm6,xmm5
   140012c28:	jb     0x140012c35
   140012c2a:	movsd  QWORD PTR [r14+rbx*8],xmm7
   140012c30:	inc    edi
   140012c32:	inc    rbx
   140012c35:	movsd  xmm7,QWORD PTR [rsp+rsi*8+0x28]
   140012c3b:	comisd xmm7,xmm8
   140012c40:	jb     0x140012cda
   140012c46:	comisd xmm6,xmm7
   140012c4a:	jb     0x140012cda
   140012c50:	movsd  xmm4,QWORD PTR [r15]
   140012c55:	movsd  xmm3,QWORD PTR [r15+0x10]
   140012c5b:	movsd  xmm2,QWORD PTR [r15+0x20]
   140012c61:	mulsd  xmm2,xmm9
   140012c66:	movaps xmm5,xmm3
   140012c69:	movaps xmm0,xmm2
   140012c6c:	movaps xmm1,xmm4
   140012c6f:	mulsd  xmm5,xmm9
   140012c74:	mulsd  xmm1,xmm9
   140012c79:	addsd  xmm5,QWORD PTR [r15+0x30]
   140012c7f:	addsd  xmm0,xmm4
   140012c83:	addsd  xmm1,xmm2
   140012c87:	subsd  xmm5,xmm0
   140012c8b:	movaps xmm0,xmm3
   140012c8e:	subsd  xmm3,xmm4
   140012c92:	mulsd  xmm0,xmm14
   140012c97:	mulsd  xmm5,xmm7
   140012c9b:	mulsd  xmm3,xmm9
   140012ca0:	subsd  xmm1,xmm0
   140012ca4:	addsd  xmm5,xmm1
   140012ca8:	mulsd  xmm5,xmm7
   140012cac:	addsd  xmm5,xmm3
   140012cb0:	mulsd  xmm5,xmm7
   140012cb4:	addsd  xmm5,xmm4
   140012cb8:	subsd  xmm5,xmm13
   140012cbd:	divsd  xmm5,xmm12
   140012cc2:	comisd xmm5,xmm8
   140012cc7:	jb     0x140012cda
   140012cc9:	comisd xmm6,xmm5
   140012ccd:	jb     0x140012cda
   140012ccf:	movsd  QWORD PTR [r14+rbx*8],xmm7
   140012cd5:	inc    edi
   140012cd7:	inc    rbx
   140012cda:	movsd  xmm7,QWORD PTR [rsp+rsi*8+0x30]
   140012ce0:	comisd xmm7,xmm8
   140012ce5:	jb     0x140012d7f
   140012ceb:	comisd xmm6,xmm7
   140012cef:	jb     0x140012d7f
   140012cf5:	movsd  xmm4,QWORD PTR [r15]
   140012cfa:	movsd  xmm3,QWORD PTR [r15+0x10]
   140012d00:	movsd  xmm2,QWORD PTR [r15+0x20]
   140012d06:	mulsd  xmm2,xmm9
   140012d0b:	movaps xmm5,xmm3
   140012d0e:	movaps xmm0,xmm2
   140012d11:	movaps xmm1,xmm4
   140012d14:	mulsd  xmm5,xmm9
   140012d19:	mulsd  xmm1,xmm9
   140012d1e:	addsd  xmm5,QWORD PTR [r15+0x30]
   140012d24:	addsd  xmm0,xmm4
   140012d28:	addsd  xmm1,xmm2
   140012d2c:	subsd  xmm5,xmm0
   140012d30:	movaps xmm0,xmm3
   140012d33:	subsd  xmm3,xmm4
   140012d37:	mulsd  xmm0,xmm14
   140012d3c:	mulsd  xmm5,xmm7
   140012d40:	mulsd  xmm3,xmm9
   140012d45:	subsd  xmm1,xmm0
   140012d49:	addsd  xmm5,xmm1
   140012d4d:	mulsd  xmm5,xmm7
   140012d51:	addsd  xmm5,xmm3
   140012d55:	mulsd  xmm5,xmm7
   140012d59:	addsd  xmm5,xmm4
   140012d5d:	subsd  xmm5,xmm13
   140012d62:	divsd  xmm5,xmm12
   140012d67:	comisd xmm5,xmm8
   140012d6c:	jb     0x140012d7f
   140012d6e:	comisd xmm6,xmm5
   140012d72:	jb     0x140012d7f
   140012d74:	movsd  QWORD PTR [r14+rbx*8],xmm7
   140012d7a:	inc    edi
   140012d7c:	inc    rbx
   140012d7f:	movsd  xmm7,QWORD PTR [rsp+rsi*8+0x38]
   140012d85:	comisd xmm7,xmm8
   140012d8a:	jb     0x140012e24
   140012d90:	comisd xmm6,xmm7
   140012d94:	jb     0x140012e24
   140012d9a:	movsd  xmm4,QWORD PTR [r15]
   140012d9f:	movsd  xmm3,QWORD PTR [r15+0x10]
   140012da5:	movsd  xmm2,QWORD PTR [r15+0x20]
   140012dab:	mulsd  xmm2,xmm9
   140012db0:	movaps xmm5,xmm3
   140012db3:	movaps xmm0,xmm2
   140012db6:	movaps xmm1,xmm4
   140012db9:	mulsd  xmm5,xmm9
   140012dbe:	mulsd  xmm1,xmm9
   140012dc3:	addsd  xmm5,QWORD PTR [r15+0x30]
   140012dc9:	addsd  xmm0,xmm4
   140012dcd:	addsd  xmm1,xmm2
   140012dd1:	subsd  xmm5,xmm0
   140012dd5:	movaps xmm0,xmm3
   140012dd8:	subsd  xmm3,xmm4
   140012ddc:	mulsd  xmm0,xmm14
   140012de1:	mulsd  xmm5,xmm7
   140012de5:	mulsd  xmm3,xmm9
   140012dea:	subsd  xmm1,xmm0
   140012dee:	addsd  xmm5,xmm1
   140012df2:	mulsd  xmm5,xmm7
   140012df6:	addsd  xmm5,xmm3
   140012dfa:	mulsd  xmm5,xmm7
   140012dfe:	addsd  xmm5,xmm4
   140012e02:	subsd  xmm5,xmm13
   140012e07:	divsd  xmm5,xmm12
   140012e0c:	comisd xmm5,xmm8
   140012e11:	jb     0x140012e24
   140012e13:	comisd xmm6,xmm5
   140012e17:	jb     0x140012e24
   140012e19:	movsd  QWORD PTR [r14+rbx*8],xmm7
   140012e1f:	inc    edi
   140012e21:	inc    rbx
   140012e24:	add    rsi,0x4
   140012e28:	cmp    rsi,rax
   140012e2b:	jl     0x140012b90
   140012e31:	cmp    rsi,rcx
   140012e34:	jge    0x140012eee
   140012e3a:	lea    rax,[r14+rbx*8]
   140012e3e:	movsd  xmm7,QWORD PTR [rsp+rsi*8+0x20]
   140012e44:	comisd xmm7,xmm8
   140012e49:	jb     0x140012ee2
   140012e4f:	comisd xmm6,xmm7
   140012e53:	jb     0x140012ee2
   140012e59:	movsd  xmm4,QWORD PTR [r15]
   140012e5e:	movsd  xmm3,QWORD PTR [r15+0x10]
   140012e64:	movsd  xmm2,QWORD PTR [r15+0x20]
   140012e6a:	mulsd  xmm2,xmm9
   140012e6f:	movaps xmm5,xmm3
   140012e72:	movaps xmm0,xmm2
   140012e75:	movaps xmm1,xmm4
   140012e78:	mulsd  xmm5,xmm9
   140012e7d:	mulsd  xmm1,xmm9
   140012e82:	addsd  xmm5,QWORD PTR [r15+0x30]
   140012e88:	addsd  xmm0,xmm4
   140012e8c:	addsd  xmm1,xmm2
   140012e90:	subsd  xmm5,xmm0
   140012e94:	movaps xmm0,xmm3
   140012e97:	subsd  xmm3,xmm4
   140012e9b:	mulsd  xmm0,xmm14
   140012ea0:	mulsd  xmm5,xmm7
   140012ea4:	mulsd  xmm3,xmm9
   140012ea9:	subsd  xmm1,xmm0
   140012ead:	addsd  xmm5,xmm1
   140012eb1:	mulsd  xmm5,xmm7
   140012eb5:	addsd  xmm5,xmm3
   140012eb9:	mulsd  xmm5,xmm7
   140012ebd:	addsd  xmm5,xmm4
   140012ec1:	subsd  xmm5,xmm13
   140012ec6:	divsd  xmm5,xmm12
   140012ecb:	comisd xmm5,xmm8
   140012ed0:	jb     0x140012ee2
   140012ed2:	comisd xmm6,xmm5
   140012ed6:	jb     0x140012ee2
   140012ed8:	movsd  QWORD PTR [rax],xmm7
   140012edc:	inc    edi
   140012ede:	add    rax,0x8
   140012ee2:	inc    rsi
   140012ee5:	cmp    rsi,rcx
   140012ee8:	jl     0x140012e3e
   140012eee:	mov    eax,edi
   140012ef0:	jmp    0x140012b2b
   140012ef5:	int3   
   140012ef6:	int3   
   140012ef7:	int3   
   140012ef8:	int3   
   140012ef9:	int3   
   140012efa:	int3   
   140012efb:	int3   
   140012efc:	int3   
   140012efd:	int3   
   140012efe:	int3   
   140012eff:	int3   
   140012f00:	mov    rax,rsp
   140012f03:	mov    QWORD PTR [rax+0x8],rbx
   140012f07:	mov    QWORD PTR [rax+0x10],rbp
   140012f0b:	mov    QWORD PTR [rax+0x18],rsi
   140012f0f:	push   rdi
   140012f10:	sub    rsp,0x100
   140012f17:	movaps XMMWORD PTR [rax-0x18],xmm6
   140012f1b:	movaps XMMWORD PTR [rax-0x28],xmm7
   140012f1f:	movaps XMMWORD PTR [rax-0x38],xmm8
   140012f24:	mov    rbx,r8
   140012f27:	mov    rdi,rcx
   140012f2a:	movaps XMMWORD PTR [rax-0x48],xmm9
   140012f2f:	movaps XMMWORD PTR [rax-0x58],xmm10
   140012f34:	movaps XMMWORD PTR [rax-0x68],xmm11
   140012f39:	movaps XMMWORD PTR [rax-0x78],xmm12
   140012f3e:	movaps XMMWORD PTR [rax-0x88],xmm13
   140012f46:	movaps XMMWORD PTR [rsp+0x70],xmm14
   140012f4c:	movaps XMMWORD PTR [rsp+0x60],xmm15
   140012f52:	test   edx,edx
   140012f54:	jle    0x1400130e2
   140012f5a:	movsd  xmm11,QWORD PTR [rip+0x2b21d]        # 0x14003e180
   140012f63:	movsd  xmm10,QWORD PTR [rip+0x2b22c]        # 0x14003e198
   140012f6c:	movsd  xmm14,QWORD PTR [rip+0x2a5db]        # 0x14003d550
   140012f75:	xor    esi,esi
   140012f77:	movsxd rbp,edx
   140012f7a:	movsd  xmm15,QWORD PTR [rip+0x2a45d]        # 0x14003d3e0
   140012f83:	movsd  xmm7,QWORD PTR [rip+0x2b1fd]        # 0x14003e188
   140012f8b:	nop    DWORD PTR [rax+rax*1+0x0]
   140012f90:	movups xmm0,XMMWORD PTR [rdi]
   140012f93:	lea    r8,[rsp+0x40]
   140012f98:	lea    rdx,[rsp+0x20]
   140012f9d:	mov    rcx,rbx
   140012fa0:	movups XMMWORD PTR [rsp+0x20],xmm0
   140012fa5:	movups xmm0,XMMWORD PTR [rdi+0x10]
   140012fa9:	movups XMMWORD PTR [rsp+0x30],xmm0
   140012fae:	call   0x1400121a0
   140012fb3:	cmp    eax,0x4
   140012fb6:	je     0x1400130d2
   140012fbc:	cdqe   
   140012fbe:	xor    ecx,ecx
   140012fc0:	test   rax,rax
   140012fc3:	jle    0x1400130d2
   140012fc9:	movsd  xmm8,QWORD PTR [rsp+0x38]
   140012fd0:	movsd  xmm9,QWORD PTR [rsp+0x30]
   140012fd7:	movsd  xmm12,QWORD PTR [rsp+0x28]
   140012fde:	movsd  xmm13,QWORD PTR [rsp+0x20]
   140012fe5:	movsd  xmm2,QWORD PTR [rsp+rcx*8+0x40]
   140012feb:	comisd xmm11,xmm2
   140012ff0:	ja     0x1400130c6
   140012ff6:	comisd xmm2,xmm10
   140012ffb:	ja     0x1400130c6
   140013001:	movaps xmm0,xmm2
   140013004:	movaps xmm4,xmm2
   140013007:	movaps xmm1,xmm15
   14001300b:	mulsd  xmm0,xmm14
   140013010:	mulsd  xmm4,xmm2
   140013014:	subsd  xmm1,xmm2
   140013018:	movaps xmm3,xmm0
   14001301b:	mulsd  xmm3,xmm2
   14001301f:	mulsd  xmm4,xmm2
   140013023:	movaps xmm2,xmm1
   140013026:	movaps xmm6,xmm1
   140013029:	mulsd  xmm2,xmm0
   14001302d:	mulsd  xmm6,xmm1
   140013031:	mulsd  xmm3,xmm1
   140013035:	mulsd  xmm6,xmm1
   140013039:	mulsd  xmm2,xmm1
   14001303d:	movaps xmm1,xmm3
   140013040:	movaps xmm0,xmm6
   140013043:	movaps xmm5,xmm2
   140013046:	mulsd  xmm0,QWORD PTR [rbx]
   14001304a:	mulsd  xmm1,QWORD PTR [rbx+0x20]
   14001304f:	mulsd  xmm5,QWORD PTR [rbx+0x10]
   140013054:	addsd  xmm5,xmm0
   140013058:	movaps xmm0,xmm4
   14001305b:	addsd  xmm5,xmm1
   14001305f:	mulsd  xmm0,QWORD PTR [rbx+0x30]
   140013064:	mulsd  xmm6,QWORD PTR [rbx+0x8]
   140013069:	mulsd  xmm2,QWORD PTR [rbx+0x18]
   14001306e:	addsd  xmm5,xmm0
   140013072:	addsd  xmm6,xmm2
   140013076:	movaps xmm0,xmm5
   140013079:	subsd  xmm0,xmm13
   14001307e:	mulsd  xmm3,QWORD PTR [rbx+0x28]
   140013083:	mulsd  xmm4,QWORD PTR [rbx+0x38]
   140013088:	addsd  xmm6,xmm3
   14001308c:	addsd  xmm6,xmm4
   140013090:	mulsd  xmm0,xmm0
   140013094:	movaps xmm1,xmm6
   140013097:	subsd  xmm1,xmm12
   14001309c:	mulsd  xmm1,xmm1
   1400130a0:	addsd  xmm0,xmm1
   1400130a4:	comisd xmm7,xmm0
   1400130a8:	ja     0x1400130c6
   1400130aa:	subsd  xmm5,xmm9
   1400130af:	subsd  xmm6,xmm8
   1400130b4:	mulsd  xmm5,xmm5
   1400130b8:	mulsd  xmm6,xmm6
   1400130bc:	addsd  xmm5,xmm6
   1400130c0:	comisd xmm7,xmm5
   1400130c4:	jbe    0x140013134
   1400130c6:	inc    rcx
   1400130c9:	cmp    rcx,rax
   1400130cc:	jl     0x140012fe5
   1400130d2:	inc    rsi
   1400130d5:	add    rdi,0x20
   1400130d9:	cmp    rsi,rbp
   1400130dc:	jl     0x140012f90
   1400130e2:	mov    eax,0x1
   1400130e7:	movaps xmm14,XMMWORD PTR [rsp+0x70]
   1400130ed:	movaps xmm15,XMMWORD PTR [rsp+0x60]
   1400130f3:	lea    r11,[rsp+0x100]
   1400130fb:	mov    rbx,QWORD PTR [r11+0x10]
   1400130ff:	mov    rbp,QWORD PTR [r11+0x18]
   140013103:	mov    rsi,QWORD PTR [r11+0x20]
   140013107:	movaps xmm6,XMMWORD PTR [r11-0x10]
   14001310c:	movaps xmm7,XMMWORD PTR [r11-0x20]
   140013111:	movaps xmm8,XMMWORD PTR [r11-0x30]
   140013116:	movaps xmm9,XMMWORD PTR [r11-0x40]
   14001311b:	movaps xmm10,XMMWORD PTR [r11-0x50]
   140013120:	movaps xmm11,XMMWORD PTR [r11-0x60]
   140013125:	movaps xmm12,XMMWORD PTR [r11-0x70]
   14001312a:	movaps xmm13,XMMWORD PTR [r11-0x80]
   14001312f:	mov    rsp,r11
   140013132:	pop    rdi
   140013133:	ret    
   140013134:	xor    eax,eax
   140013136:	jmp    0x1400130e7
   140013138:	int3   
   140013139:	int3   
   14001313a:	int3   
   14001313b:	int3   
   14001313c:	int3   
   14001313d:	int3   
   14001313e:	int3   
   14001313f:	int3   
   140013140:	movsd  xmm0,QWORD PTR [rdx]
   140013144:	movsd  xmm1,QWORD PTR [rdx+0x8]
   140013149:	mov    rax,rcx
   14001314c:	subsd  xmm0,QWORD PTR [r8]
   140013151:	movsd  QWORD PTR [rdx],xmm0
   140013155:	subsd  xmm1,QWORD PTR [r8+0x8]
   14001315b:	movsd  QWORD PTR [rdx+0x8],xmm1
   140013160:	movups xmm0,XMMWORD PTR [rdx]
   140013163:	movups XMMWORD PTR [rcx],xmm0
   140013166:	ret    
   140013167:	int3   
   140013168:	int3   
   140013169:	int3   
   14001316a:	int3   
   14001316b:	int3   
   14001316c:	int3   
   14001316d:	int3   
   14001316e:	int3   
   14001316f:	int3   
   140013170:	mov    rax,rsp
   140013173:	mov    QWORD PTR [rax+0x8],rbx
   140013177:	mov    QWORD PTR [rax+0x10],rsi
   14001317b:	push   rdi
   14001317c:	sub    rsp,0x50
   140013180:	movups xmm0,XMMWORD PTR [r9]
   140013184:	mov    rdi,QWORD PTR [rsp+0x90]
   14001318c:	mov    r9d,DWORD PTR [rsp+0x80]
   140013194:	movsxd rbx,DWORD PTR [rdi+0x4]
   140013198:	mov    rsi,r8
   14001319b:	lea    r8,[rax-0x28]
   14001319f:	movaps XMMWORD PTR [rax-0x28],xmm0
   1400131a3:	movups xmm0,XMMWORD PTR [rcx]
   1400131a6:	lea    rcx,[rax-0x18]
   1400131aa:	mov    QWORD PTR [rax-0x38],rdi
   1400131ae:	movaps XMMWORD PTR [rax-0x18],xmm0
   1400131b2:	call   0x1400157b0
   1400131b7:	test   eax,eax
   1400131b9:	je     0x1400131e9
   1400131bb:	lea    eax,[rbx+0x2]
   1400131be:	movsxd rcx,eax
   1400131c1:	shl    rcx,0x2
   1400131c5:	call   QWORD PTR [rip+0x29f9d]        # 0x14003d168
   1400131cb:	lea    ecx,[rbx+0x1]
   1400131ce:	mov    DWORD PTR [rax+rbx*4],ecx
   1400131d1:	mov    DWORD PTR [rax+rbx*4+0x4],0xffffffff
   1400131d9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400131de:	mov    rsi,QWORD PTR [rsp+0x68]
   1400131e3:	add    rsp,0x50
   1400131e7:	pop    rdi
   1400131e8:	ret    
   1400131e9:	mov    r9,QWORD PTR [rdi+0x28]
   1400131ed:	mov    rax,QWORD PTR [rsp+0x88]
   1400131f5:	lea    r8d,[rbx+0x2]
   1400131f9:	lea    ecx,[rbx+0x1]
   1400131fc:	mov    edx,ebx
   1400131fe:	mov    QWORD PTR [r9+rbx*8],rax
   140013202:	mov    QWORD PTR [r9+rbx*8+0x8],rsi
   140013207:	mov    rbx,QWORD PTR [rsp+0x60]
   14001320c:	mov    rsi,QWORD PTR [rsp+0x68]
   140013211:	add    rsp,0x50
   140013215:	pop    rdi
   140013216:	jmp    0x140013220
   14001321b:	int3   
   14001321c:	int3   
   14001321d:	int3   
   14001321e:	int3   
   14001321f:	int3   
   140013220:	mov    QWORD PTR [rsp+0x20],r9
   140013225:	mov    DWORD PTR [rsp+0x10],edx
   140013229:	push   rbx
   14001322a:	push   rbp
   14001322b:	push   rsi
   14001322c:	push   rdi
   14001322d:	push   r12
   14001322f:	push   r13
   140013231:	sub    rsp,0x38
   140013235:	movsxd r13,r8d
   140013238:	movsxd rbp,ecx
   14001323b:	mov    esi,edx
   14001323d:	lea    rcx,[r13*4+0x0]
   140013245:	mov    rbx,r13
   140013248:	call   QWORD PTR [rip+0x29f1a]        # 0x14003d168
   14001324e:	lea    ecx,[r13+0x1]
   140013252:	movsxd rcx,ecx
   140013255:	mov    r12,rax
   140013258:	shl    rcx,0x3
   14001325c:	call   QWORD PTR [rip+0x29f06]        # 0x14003d168
   140013262:	xor    edx,edx
   140013264:	lea    r9,[rax+0x8]
   140013268:	mov    QWORD PTR [rsp+0x20],rax
   14001326d:	movsd  xmm4,QWORD PTR [rip+0x2a2fb]        # 0x14003d570
   140013275:	test   r13d,r13d
   140013278:	jle    0x1400132aa
   14001327a:	mov    rdi,r12
   14001327d:	or     rax,0xffffffffffffffff
   140013281:	mov    rcx,rbx
   140013284:	rep stos DWORD PTR es:[rdi],eax
   140013286:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013290:	movsd  xmm0,QWORD PTR [rip+0x38e20]        # 0x14004c0b8
   140013298:	inc    rdx
   14001329b:	xorps  xmm0,xmm4
   14001329e:	movsd  QWORD PTR [r9+rdx*8-0x8],xmm0
   1400132a5:	cmp    rdx,rbx
   1400132a8:	jl     0x140013290
   1400132aa:	movsd  xmm0,QWORD PTR [rip+0x38e06]        # 0x14004c0b8
   1400132b2:	addsd  xmm0,QWORD PTR [rip+0x2a126]        # 0x14003d3e0
   1400132ba:	xorps  xmm0,xmm4
   1400132bd:	movsd  QWORD PTR [r9-0x8],xmm0
   1400132c3:	cmp    ebp,esi
   1400132c5:	je     0x1400133d9
   1400132cb:	movsd  xmm5,QWORD PTR [rip+0x2a415]        # 0x14003d6e8
   1400132d3:	mov    eax,DWORD PTR [rsp+0x78]
   1400132d7:	mov    QWORD PTR [rsp+0x70],r14
   1400132dc:	mov    QWORD PTR [rsp+0x30],r15
   1400132e1:	xorps  xmm3,xmm3
   1400132e4:	mov    r15,rbp
   1400132e7:	nop    WORD PTR [rax+rax*1+0x0]
   1400132f0:	lea    r10,[r15*8+0x0]
   1400132f8:	mov    esi,ebp
   1400132fa:	or     ebp,0xffffffff
   1400132fd:	or     r15,0xffffffffffffffff
   140013301:	movsd  xmm0,QWORD PTR [r10+r9*1]
   140013307:	mulsd  xmm0,xmm5
   14001330b:	movsd  QWORD PTR [r10+r9*1],xmm0
   140013311:	ucomisd xmm0,QWORD PTR [rip+0x38d9f]        # 0x14004c0b8
   140013319:	jp     0x140013325
   14001331b:	jne    0x140013325
   14001331d:	mov    QWORD PTR [r10+r9*1],0x0
   140013325:	xor    edi,edi
   140013327:	xor    r8d,r8d
   14001332a:	test   r13d,r13d
   14001332d:	jle    0x1400133c7
   140013333:	mov    rax,QWORD PTR [rsp+0x88]
   14001333b:	mov    r11,r9
   14001333e:	lea    rbx,[rdi-0x8]
   140013342:	mov    r14,rax
   140013345:	mov    rdx,r9
   140013348:	sub    r14,r9
   14001334b:	neg    r11
   14001334e:	xchg   ax,ax
   140013350:	movsd  xmm1,QWORD PTR [rdx]
   140013354:	comisd xmm3,xmm1
   140013358:	jbe    0x1400133b5
   14001335a:	cmp    esi,edi
   14001335c:	jl     0x14001336d
   14001335e:	mov    rax,QWORD PTR [r10+rax*1]
   140013362:	lea    rcx,[r11+rdx*1]
   140013366:	movsd  xmm2,QWORD PTR [rcx+rax*1]
   14001336b:	jmp    0x140013377
   14001336d:	mov    rax,QWORD PTR [r14+rdx*1]
   140013371:	movsd  xmm2,QWORD PTR [r10+rax*1]
   140013377:	ucomisd xmm2,xmm3
   14001337b:	movaps xmm0,xmm2
   14001337e:	addsd  xmm0,QWORD PTR [r10+r9*1]
   140013384:	xorps  xmm0,xmm4
   140013387:	jp     0x14001338b
   140013389:	je     0x14001339c
   14001338b:	comisd xmm0,xmm1
   14001338f:	jbe    0x14001339c
   140013391:	movsd  QWORD PTR [rdx],xmm0
   140013395:	movaps xmm1,xmm0
   140013398:	mov    DWORD PTR [r12+r8*4],esi
   14001339c:	comisd xmm1,QWORD PTR [rbx+r9*1]
   1400133a2:	mov    rax,QWORD PTR [rsp+0x88]
   1400133aa:	jbe    0x1400133b5
   1400133ac:	mov    ebp,edi
   1400133ae:	mov    r15,r8
   1400133b1:	lea    rbx,[r11+rdx*1]
   1400133b5:	inc    edi
   1400133b7:	inc    r8
   1400133ba:	add    rdx,0x8
   1400133be:	cmp    edi,r13d
   1400133c1:	jl     0x140013350
   1400133c3:	mov    eax,DWORD PTR [rsp+0x78]
   1400133c7:	cmp    ebp,eax
   1400133c9:	jne    0x1400132f0
   1400133cf:	mov    r15,QWORD PTR [rsp+0x30]
   1400133d4:	mov    r14,QWORD PTR [rsp+0x70]
   1400133d9:	mov    rcx,QWORD PTR [rsp+0x20]
   1400133de:	call   QWORD PTR [rip+0x29ebc]        # 0x14003d2a0
   1400133e4:	mov    rax,r12
   1400133e7:	add    rsp,0x38
   1400133eb:	pop    r13
   1400133ed:	pop    r12
   1400133ef:	pop    rdi
   1400133f0:	pop    rsi
   1400133f1:	pop    rbp
   1400133f2:	pop    rbx
   1400133f3:	ret    
   1400133f4:	int3   
   1400133f5:	int3   
   1400133f6:	int3   
   1400133f7:	int3   
   1400133f8:	int3   
   1400133f9:	int3   
   1400133fa:	int3   
   1400133fb:	int3   
   1400133fc:	int3   
   1400133fd:	int3   
   1400133fe:	int3   
   1400133ff:	int3   
   140013400:	mov    QWORD PTR [rsp+0x18],r8
   140013405:	mov    QWORD PTR [rsp+0x10],rdx
   14001340a:	push   rbx
   14001340b:	push   rsi
   14001340c:	push   rdi
   14001340d:	push   r12
   14001340f:	push   r13
   140013411:	push   r15
   140013413:	sub    rsp,0xa8
   14001341a:	mov    rbx,rcx
   14001341d:	mov    ecx,DWORD PTR [rcx+0x8]
   140013420:	movaps XMMWORD PTR [rsp+0x80],xmm6
   140013428:	mov    r12,rdx
   14001342b:	call   0x1400143a0
   140013430:	mov    ecx,DWORD PTR [rbx+0x8]
   140013433:	xor    r13d,r13d
   140013436:	add    ecx,ecx
   140013438:	mov    DWORD PTR [rip+0x4035d],r13d        # 0x14005379c
   14001343f:	mov    DWORD PTR [rip+0x40366],r13d        # 0x1400537ac
   140013446:	call   0x1400141e0
   14001344b:	mov    eax,DWORD PTR [rip+0x40367]        # 0x1400537b8
   140013451:	mov    r10d,DWORD PTR [rbx+0x8]
   140013455:	or     ecx,0xffffffff
   140013458:	cdq    
   140013459:	sub    eax,edx
   14001345b:	sar    eax,1
   14001345d:	mov    DWORD PTR [rip+0x40359],eax        # 0x1400537bc
   140013463:	dec    eax
   140013465:	mov    DWORD PTR [rip+0x40355],eax        # 0x1400537c0
   14001346b:	mov    rax,QWORD PTR [rip+0x29c76]        # 0x14003d0e8
   140013472:	movsd  xmm0,QWORD PTR [rax]
   140013476:	mov    eax,r13d
   140013479:	cmp    r10d,0x4
   14001347d:	jl     0x1400134ec
   14001347f:	mov    r9,QWORD PTR [rbx]
   140013482:	lea    r11d,[r10-0x3]
   140013486:	lea    r8d,[r13+0x2]
   14001348a:	mov    edx,r13d
   14001348d:	nop    DWORD PTR [rax]
   140013490:	movsd  xmm1,QWORD PTR [r9+rdx*1]
   140013496:	comisd xmm0,xmm1
   14001349a:	jbe    0x1400134a1
   14001349c:	movaps xmm0,xmm1
   14001349f:	mov    ecx,eax
   1400134a1:	movsd  xmm1,QWORD PTR [r9+rdx*1+0x10]
   1400134a8:	comisd xmm0,xmm1
   1400134ac:	jbe    0x1400134b5
   1400134ae:	movaps xmm0,xmm1
   1400134b1:	lea    ecx,[r8-0x1]
   1400134b5:	movsd  xmm1,QWORD PTR [r9+rdx*1+0x20]
   1400134bc:	comisd xmm0,xmm1
   1400134c0:	jbe    0x1400134c8
   1400134c2:	movaps xmm0,xmm1
   1400134c5:	mov    ecx,r8d
   1400134c8:	movsd  xmm1,QWORD PTR [r9+rdx*1+0x30]
   1400134cf:	comisd xmm0,xmm1
   1400134d3:	jbe    0x1400134dc
   1400134d5:	movaps xmm0,xmm1
   1400134d8:	lea    ecx,[r8+0x1]
   1400134dc:	add    eax,0x4
   1400134df:	add    rdx,0x40
   1400134e3:	add    r8d,0x4
   1400134e7:	cmp    eax,r11d
   1400134ea:	jl     0x140013490
   1400134ec:	cmp    eax,r10d
   1400134ef:	jge    0x140013517
   1400134f1:	mov    r8,QWORD PTR [rbx]
   1400134f4:	movsxd rdx,eax
   1400134f7:	shl    rdx,0x4
   1400134fb:	movsd  xmm1,QWORD PTR [r8+rdx*1]
   140013501:	comisd xmm0,xmm1
   140013505:	jbe    0x14001350c
   140013507:	movaps xmm0,xmm1
   14001350a:	mov    ecx,eax
   14001350c:	inc    eax
   14001350e:	add    rdx,0x10
   140013512:	cmp    eax,r10d
   140013515:	jl     0x1400134fb
   140013517:	mov    rdx,QWORD PTR [rbx]
   14001351a:	movsxd rax,ecx
   14001351d:	add    rax,rax
   140013520:	movups xmm0,XMMWORD PTR [rdx+rax*8]
   140013524:	lea    eax,[r10-0x1]
   140013528:	movups XMMWORD PTR [rsp+0x30],xmm0
   14001352d:	test   ecx,ecx
   14001352f:	je     0x140013534
   140013531:	lea    eax,[rcx-0x1]
   140013534:	cdqe   
   140013536:	lea    edi,[r10-0x1]
   14001353a:	add    rax,rax
   14001353d:	movups xmm0,XMMWORD PTR [rdx+rax*8]
   140013541:	movups XMMWORD PTR [rsp+0x50],xmm0
   140013546:	cmp    ecx,edi
   140013548:	jne    0x14001354f
   14001354a:	mov    ecx,r13d
   14001354d:	jmp    0x140013551
   14001354f:	inc    ecx
   140013551:	movsd  xmm4,QWORD PTR [rsp+0x50]
   140013557:	movsd  xmm2,QWORD PTR [rsp+0x30]
   14001355d:	mov    r15,QWORD PTR [rip+0x4022c]        # 0x140053790
   140013564:	movsxd rax,ecx
   140013567:	mov    QWORD PTR [rsp+0xa0],rbp
   14001356f:	xorps  xmm6,xmm6
   140013572:	add    rax,rax
   140013575:	mov    QWORD PTR [rsp+0x98],r14
   14001357d:	movsd  xmm5,QWORD PTR [rsp+0x38]
   140013583:	ucomisd xmm4,xmm2
   140013587:	movups xmm0,XMMWORD PTR [rdx+rax*8]
   14001358b:	movups XMMWORD PTR [rsp+0x40],xmm0
   140013590:	movsd  xmm1,QWORD PTR [rsp+0x48]
   140013596:	movsd  xmm3,QWORD PTR [rsp+0x40]
   14001359c:	jp     0x1400135ae
   14001359e:	jne    0x1400135ae
   1400135a0:	ucomisd xmm2,xmm3
   1400135a4:	jp     0x1400135ae
   1400135a6:	jne    0x1400135ae
   1400135a8:	comisd xmm1,xmm5
   1400135ac:	ja     0x1400135f0
   1400135ae:	movsd  xmm0,QWORD PTR [rsp+0x58]
   1400135b4:	subsd  xmm3,xmm2
   1400135b8:	subsd  xmm1,xmm5
   1400135bc:	subsd  xmm0,xmm5
   1400135c0:	subsd  xmm4,xmm2
   1400135c4:	mulsd  xmm0,xmm3
   1400135c8:	mulsd  xmm1,xmm4
   1400135cc:	subsd  xmm0,xmm1
   1400135d0:	comisd xmm0,xmm6
   1400135d4:	ja     0x140013894
   1400135da:	comisd xmm6,xmm0
   1400135de:	mov    eax,r13d
   1400135e1:	setbe  al
   1400135e4:	add    eax,0x2
   1400135e7:	cmp    eax,0x1
   1400135ea:	je     0x140013894
   1400135f0:	test   edi,edi
   1400135f2:	js     0x140013925
   1400135f8:	mov    rsi,QWORD PTR [rip+0x40189]        # 0x140053788
   1400135ff:	mov    r10d,DWORD PTR [rip+0x40196]        # 0x14005379c
   140013606:	lea    eax,[rdi+0x1]
   140013609:	cmp    eax,0x4
   14001360c:	jl     0x140013809
   140013612:	lea    eax,[rdi-0x3]
   140013615:	lea    ebp,[rdi-0x2]
   140013618:	movsxd r11,edi
   14001361b:	movsxd r14,eax
   14001361e:	lea    eax,[rdi-0x1]
   140013621:	movsxd r12,ebp
   140013624:	movsxd r13,eax
   140013627:	shl    r11,0x4
   14001362b:	shl    r14,0x4
   14001362f:	shl    r12,0x4
   140013633:	shl    r13,0x4
   140013637:	mov    eax,DWORD PTR [rbx+0x8]
   14001363a:	dec    eax
   14001363c:	cmp    edi,eax
   14001363e:	jge    0x140013666
   140013640:	mov    rax,QWORD PTR [rbx]
   140013643:	movsd  xmm0,QWORD PTR [rax+r11*1]
   140013649:	ucomisd xmm0,QWORD PTR [rax+r11*1+0x10]
   140013650:	jp     0x140013666
   140013652:	jne    0x140013666
   140013654:	movsd  xmm0,QWORD PTR [rax+r11*1+0x8]
   14001365b:	ucomisd xmm0,QWORD PTR [rax+r11*1+0x18]
   140013662:	jp     0x140013666
   140013664:	je     0x14001369f
   140013666:	mov    rcx,QWORD PTR [rbx]
   140013669:	movsxd r9,r10d
   14001366c:	mov    eax,r10d
   14001366f:	cdq    
   140013670:	add    rcx,r11
   140013673:	mov    r8,r9
   140013676:	shl    r8,0x4
   14001367a:	add    r8,rsi
   14001367d:	mov    QWORD PTR [r8],rcx
   140013680:	idiv   DWORD PTR [rbx+0x8]
   140013683:	movsxd rax,edx
   140013686:	shl    rax,0x4
   14001368a:	add    rax,rsi
   14001368d:	inc    r10d
   140013690:	mov    QWORD PTR [r8+0x8],rax
   140013694:	mov    QWORD PTR [r15+r9*8],r8
   140013698:	mov    DWORD PTR [rip+0x400fd],r10d        # 0x14005379c
   14001369f:	mov    eax,DWORD PTR [rbx+0x8]
   1400136a2:	lea    ecx,[rbp+0x1]
   1400136a5:	dec    eax
   1400136a7:	cmp    ecx,eax
   1400136a9:	jge    0x1400136d1
   1400136ab:	mov    rax,QWORD PTR [rbx]
   1400136ae:	movsd  xmm0,QWORD PTR [rax+r11*1-0x10]
   1400136b5:	ucomisd xmm0,QWORD PTR [rax+r11*1]
   1400136bb:	jp     0x1400136d1
   1400136bd:	jne    0x1400136d1
   1400136bf:	movsd  xmm0,QWORD PTR [rax+r11*1-0x8]
   1400136c6:	ucomisd xmm0,QWORD PTR [rax+r11*1+0x8]
   1400136cd:	jp     0x1400136d1
   1400136cf:	je     0x14001370a
   1400136d1:	mov    rcx,QWORD PTR [rbx]
   1400136d4:	movsxd r9,r10d
   1400136d7:	mov    eax,r10d
   1400136da:	cdq    
   1400136db:	add    rcx,r13
   1400136de:	mov    r8,r9
   1400136e1:	shl    r8,0x4
   1400136e5:	add    r8,rsi
   1400136e8:	mov    QWORD PTR [r8],rcx
   1400136eb:	idiv   DWORD PTR [rbx+0x8]
   1400136ee:	movsxd rax,edx
   1400136f1:	shl    rax,0x4
   1400136f5:	add    rax,rsi
   1400136f8:	inc    r10d
   1400136fb:	mov    QWORD PTR [r8+0x8],rax
   1400136ff:	mov    QWORD PTR [r15+r9*8],r8
   140013703:	mov    DWORD PTR [rip+0x40092],r10d        # 0x14005379c
   14001370a:	mov    eax,DWORD PTR [rbx+0x8]
   14001370d:	dec    eax
   14001370f:	cmp    ebp,eax
   140013711:	jge    0x14001373a
   140013713:	mov    rax,QWORD PTR [rbx]
   140013716:	movsd  xmm0,QWORD PTR [rax+r11*1-0x20]
   14001371d:	ucomisd xmm0,QWORD PTR [rax+r11*1-0x10]
   140013724:	jp     0x14001373a
   140013726:	jne    0x14001373a
   140013728:	movsd  xmm0,QWORD PTR [rax+r11*1-0x18]
   14001372f:	ucomisd xmm0,QWORD PTR [rax+r11*1-0x8]
   140013736:	jp     0x14001373a
   140013738:	je     0x140013773
   14001373a:	mov    rcx,QWORD PTR [rbx]
   14001373d:	movsxd r9,r10d
   140013740:	mov    eax,r10d
   140013743:	cdq    
   140013744:	add    rcx,r12
   140013747:	mov    r8,r9
   14001374a:	shl    r8,0x4
   14001374e:	add    r8,rsi
   140013751:	mov    QWORD PTR [r8],rcx
   140013754:	idiv   DWORD PTR [rbx+0x8]
   140013757:	movsxd rax,edx
   14001375a:	shl    rax,0x4
   14001375e:	add    rax,rsi
   140013761:	inc    r10d
   140013764:	mov    QWORD PTR [r8+0x8],rax
   140013768:	mov    QWORD PTR [r15+r9*8],r8
   14001376c:	mov    DWORD PTR [rip+0x40029],r10d        # 0x14005379c
   140013773:	mov    eax,DWORD PTR [rbx+0x8]
   140013776:	lea    ecx,[rbp-0x1]
   140013779:	dec    eax
   14001377b:	cmp    ecx,eax
   14001377d:	jge    0x1400137a6
   14001377f:	mov    rax,QWORD PTR [rbx]
   140013782:	movsd  xmm0,QWORD PTR [r11+rax*1-0x30]
   140013789:	ucomisd xmm0,QWORD PTR [r11+rax*1-0x20]
   140013790:	jp     0x1400137a6
   140013792:	jne    0x1400137a6
   140013794:	movsd  xmm0,QWORD PTR [rax+r11*1-0x28]
   14001379b:	ucomisd xmm0,QWORD PTR [rax+r11*1-0x18]
   1400137a2:	jp     0x1400137a6
   1400137a4:	je     0x1400137df
   1400137a6:	mov    rcx,QWORD PTR [rbx]
   1400137a9:	movsxd r9,r10d
   1400137ac:	mov    eax,r10d
   1400137af:	cdq    
   1400137b0:	add    rcx,r14
   1400137b3:	mov    r8,r9
   1400137b6:	shl    r8,0x4
   1400137ba:	add    r8,rsi
   1400137bd:	mov    QWORD PTR [r8],rcx
   1400137c0:	idiv   DWORD PTR [rbx+0x8]
   1400137c3:	movsxd rax,edx
   1400137c6:	shl    rax,0x4
   1400137ca:	add    rax,rsi
   1400137cd:	inc    r10d
   1400137d0:	mov    QWORD PTR [r8+0x8],rax
   1400137d4:	mov    QWORD PTR [r15+r9*8],r8
   1400137d8:	mov    DWORD PTR [rip+0x3ffbd],r10d        # 0x14005379c
   1400137df:	sub    edi,0x4
   1400137e2:	sub    r11,0x40
   1400137e6:	sub    r13,0x40
   1400137ea:	sub    ebp,0x4
   1400137ed:	sub    r12,0x40
   1400137f1:	sub    r14,0x40
   1400137f5:	cmp    edi,0x3
   1400137f8:	jge    0x140013637
   1400137fe:	mov    r12,QWORD PTR [rsp+0xe8]
   140013806:	xor    r13d,r13d
   140013809:	test   edi,edi
   14001380b:	js     0x14001392c
   140013811:	movsxd r11,edi
   140013814:	shl    r11,0x4
   140013818:	mov    r14,r11
   14001381b:	mov    eax,DWORD PTR [rbx+0x8]
   14001381e:	dec    eax
   140013820:	cmp    edi,eax
   140013822:	jge    0x14001384a
   140013824:	mov    rax,QWORD PTR [rbx]
   140013827:	movsd  xmm0,QWORD PTR [r11+rax*1]
   14001382d:	ucomisd xmm0,QWORD PTR [r11+rax*1+0x10]
   140013834:	jp     0x14001384a
   140013836:	jne    0x14001384a
   140013838:	movsd  xmm0,QWORD PTR [r11+rax*1+0x8]
   14001383f:	ucomisd xmm0,QWORD PTR [r11+rax*1+0x18]
   140013846:	jp     0x14001384a
   140013848:	je     0x14001387c
   14001384a:	mov    rcx,QWORD PTR [rbx]
   14001384d:	movsxd r9,r10d
   140013850:	mov    eax,r10d
   140013853:	cdq    
   140013854:	add    rcx,r14
   140013857:	mov    r8,r9
   14001385a:	shl    r8,0x4
   14001385e:	add    r8,rsi
   140013861:	mov    QWORD PTR [r8],rcx
   140013864:	idiv   DWORD PTR [rbx+0x8]
   140013867:	movsxd rax,edx
   14001386a:	shl    rax,0x4
   14001386e:	add    rax,rsi
   140013871:	inc    r10d
   140013874:	mov    QWORD PTR [r8+0x8],rax
   140013878:	mov    QWORD PTR [r15+r9*8],r8
   14001387c:	sub    r11,0x10
   140013880:	sub    r14,0x10
   140013884:	dec    edi
   140013886:	jns    0x14001381b
   140013888:	mov    DWORD PTR [rip+0x3ff0d],r10d        # 0x14005379c
   14001388f:	jmp    0x14001392c
   140013894:	mov    edi,r13d
   140013897:	test   r10d,r10d
   14001389a:	jle    0x140013925
   1400138a0:	mov    rsi,QWORD PTR [rip+0x3fee1]        # 0x140053788
   1400138a7:	mov    r10d,DWORD PTR [rip+0x3feee]        # 0x14005379c
   1400138ae:	mov    r11,r13
   1400138b1:	test   edi,edi
   1400138b3:	jle    0x1400138db
   1400138b5:	mov    rax,QWORD PTR [rbx]
   1400138b8:	movsd  xmm0,QWORD PTR [r11+rax*1]
   1400138be:	ucomisd xmm0,QWORD PTR [r11+rax*1-0x10]
   1400138c5:	jp     0x1400138db
   1400138c7:	jne    0x1400138db
   1400138c9:	movsd  xmm0,QWORD PTR [r11+rax*1+0x8]
   1400138d0:	ucomisd xmm0,QWORD PTR [r11+rax*1-0x8]
   1400138d7:	jp     0x1400138db
   1400138d9:	je     0x140013911
   1400138db:	movsxd r9,r10d
   1400138de:	mov    eax,r10d
   1400138e1:	movsxd rcx,edi
   1400138e4:	cdq    
   1400138e5:	shl    rcx,0x4
   1400138e9:	mov    r8,r9
   1400138ec:	add    rcx,QWORD PTR [rbx]
   1400138ef:	shl    r8,0x4
   1400138f3:	add    r8,rsi
   1400138f6:	mov    QWORD PTR [r8],rcx
   1400138f9:	idiv   DWORD PTR [rbx+0x8]
   1400138fc:	movsxd rax,edx
   1400138ff:	shl    rax,0x4
   140013903:	add    rax,rsi
   140013906:	inc    r10d
   140013909:	mov    QWORD PTR [r8+0x8],rax
   14001390d:	mov    QWORD PTR [r15+r9*8],r8
   140013911:	inc    edi
   140013913:	add    r11,0x10
   140013917:	cmp    edi,DWORD PTR [rbx+0x8]
   14001391a:	jl     0x1400138b1
   14001391c:	mov    DWORD PTR [rip+0x3fe79],r10d        # 0x14005379c
   140013923:	jmp    0x14001392c
   140013925:	mov    r10d,DWORD PTR [rip+0x3fe70]        # 0x14005379c
   14001392c:	mov    edx,r10d
   14001392f:	mov    rcx,r15
   140013932:	call   0x140014d70
   140013937:	mov    edi,DWORD PTR [rip+0x3fe6f]        # 0x1400537ac
   14001393d:	mov    esi,r13d
   140013940:	test   edi,edi
   140013942:	jle    0x140013965
   140013944:	lea    ebp,[rsi+0x1]
   140013947:	mov    ebx,ebp
   140013949:	cmp    ebp,edi
   14001394b:	jge    0x14001395f
   14001394d:	nop    DWORD PTR [rax]
   140013950:	mov    edx,ebx
   140013952:	mov    ecx,esi
   140013954:	call   0x140013ff0
   140013959:	inc    ebx
   14001395b:	cmp    ebx,edi
   14001395d:	jl     0x140013950
   14001395f:	mov    esi,ebp
   140013961:	cmp    ebp,edi
   140013963:	jl     0x140013944
   140013965:	mov    ebx,r13d
   140013968:	mov    DWORD PTR [rsp+0xe0],ebx
   14001396f:	test   edi,edi
   140013971:	jle    0x14001398e
   140013973:	mov    rdx,r12
   140013976:	mov    ecx,ebx
   140013978:	call   0x140014bf0
   14001397d:	test   eax,eax
   14001397f:	jne    0x140013987
   140013981:	inc    ebx
   140013983:	cmp    ebx,edi
   140013985:	jl     0x140013973
   140013987:	mov    DWORD PTR [rsp+0xe0],ebx
   14001398e:	cmp    ebx,edi
   140013990:	jne    0x1400139ca
   140013992:	call   QWORD PTR [rip+0x29938]        # 0x14003d2d0
   140013998:	lea    rcx,[rip+0x2a809]        # 0x14003e1a8
   14001399f:	mov    r9d,0xb2
   1400139a5:	mov    QWORD PTR [rsp+0x20],rcx
   1400139aa:	lea    r8,[rip+0x2a81f]        # 0x14003e1d0
   1400139b1:	lea    rdx,[rip+0x2a798]        # 0x14003e150
   1400139b8:	lea    rcx,[rax+0x60]
   1400139bc:	call   QWORD PTR [rip+0x298fe]        # 0x14003d2c0
   1400139c2:	or     eax,0xffffffff
   1400139c5:	jmp    0x140013dfc
   1400139ca:	mov    r11d,r13d
   1400139cd:	test   edi,edi
   1400139cf:	jle    0x1400139ea
   1400139d1:	lea    rdx,[r12+0x10]
   1400139d6:	mov    ecx,r11d
   1400139d9:	call   0x140014bf0
   1400139de:	test   eax,eax
   1400139e0:	jne    0x1400139ea
   1400139e2:	inc    r11d
   1400139e5:	cmp    r11d,edi
   1400139e8:	jl     0x1400139d1
   1400139ea:	cmp    r11d,edi
   1400139ed:	jne    0x140013a04
   1400139ef:	call   QWORD PTR [rip+0x298db]        # 0x14003d2d0
   1400139f5:	lea    rcx,[rip+0x2a80c]        # 0x14003e208
   1400139fc:	mov    r9d,0xba
   140013a02:	jmp    0x1400139a5
   140013a04:	mov    edx,r11d
   140013a07:	mov    ecx,ebx
   140013a09:	call   0x140014b10
   140013a0e:	test   eax,eax
   140013a10:	jne    0x140013a49
   140013a12:	call   QWORD PTR [rip+0x298b8]        # 0x14003d2d0
   140013a18:	lea    rcx,[rip+0x2a811]        # 0x14003e230
   140013a1f:	lea    r8,[rip+0x2a7aa]        # 0x14003e1d0
   140013a26:	mov    QWORD PTR [rsp+0x20],rcx
   140013a2b:	lea    rdx,[rip+0x2a71e]        # 0x14003e150
   140013a32:	lea    rcx,[rax+0x60]
   140013a36:	mov    r9d,0xc1
   140013a3c:	call   QWORD PTR [rip+0x2987e]        # 0x14003d2c0
   140013a42:	call   QWORD PTR [rip+0x29658]        # 0x14003d0a0
   140013a48:	int3   
   140013a49:	cmp    ebx,r11d
   140013a4c:	jne    0x140013a89
   140013a4e:	mov    ecx,0x2
   140013a53:	call   0x1400142c0
   140013a58:	mov    rax,QWORD PTR [rip+0x3fd69]        # 0x1400537c8
   140013a5f:	mov    r9,QWORD PTR [rsp+0xf0]
   140013a67:	mov    DWORD PTR [r9+0x8],0x2
   140013a6f:	movups xmm0,XMMWORD PTR [r12]
   140013a74:	movups XMMWORD PTR [rax],xmm0
   140013a77:	movups xmm0,XMMWORD PTR [r12+0x10]
   140013a7d:	movups XMMWORD PTR [rax+0x10],xmm0
   140013a81:	mov    QWORD PTR [r9],rax
   140013a84:	jmp    0x140013dfa
   140013a89:	mov    esi,DWORD PTR [rip+0x3fd31]        # 0x1400537c0
   140013a8f:	movsxd rbp,DWORD PTR [rip+0x3fd26]        # 0x1400537bc
   140013a96:	mov    r15,QWORD PTR [rip+0x3fd13]        # 0x1400537b0
   140013a9d:	cmp    esi,ebp
   140013a9f:	lea    r14,[r12+0x10]
   140013aa4:	mov    QWORD PTR [rsp+0x60],r12
   140013aa9:	mov    QWORD PTR [rsp+0x68],r13
   140013aae:	mov    QWORD PTR [rsp+0x78],r13
   140013ab3:	mov    QWORD PTR [rsp+0x40],r14
   140013ab8:	mov    QWORD PTR [rsp+0x70],r14
   140013abd:	js     0x140013ac8
   140013abf:	mov    rcx,QWORD PTR [r15+rbp*8]
   140013ac3:	mov    QWORD PTR [rsp+0x68],rcx
   140013ac8:	dec    ebp
   140013aca:	mov    r10d,ebx
   140013acd:	movsxd rax,ebp
   140013ad0:	mov    DWORD PTR [rip+0x3fce6],ebp        # 0x1400537bc
   140013ad6:	mov    r12d,ebp
   140013ad9:	lea    r8,[r15+rax*8]
   140013add:	lea    rax,[rsp+0x60]
   140013ae2:	mov    DWORD PTR [rip+0x3fcdc],ebp        # 0x1400537c4
   140013ae8:	mov    QWORD PTR [r8],rax
   140013aeb:	mov    QWORD PTR [rsp+0xf8],r8
   140013af3:	cmp    ebx,0xffffffff
   140013af6:	je     0x140013d9b
   140013afc:	nop    DWORD PTR [rax+0x0]
   140013b00:	movsxd rax,r10d
   140013b03:	mov    edx,r13d
   140013b06:	mov    r9,r13
   140013b09:	imul   r11,rax,0x68
   140013b0d:	add    r11,QWORD PTR [rip+0x3fc8c]        # 0x1400537a0
   140013b14:	mov    QWORD PTR [rsp+0x30],r11
   140013b19:	lea    rdi,[r11+0x20]
   140013b1d:	mov    DWORD PTR [r11],0x2
   140013b24:	mov    rax,rdi
   140013b27:	mov    rcx,QWORD PTR [rax]
   140013b2a:	test   rcx,rcx
   140013b2d:	je     0x140013b34
   140013b2f:	cmp    DWORD PTR [rcx],0x1
   140013b32:	je     0x140013b43
   140013b34:	inc    r9
   140013b37:	inc    edx
   140013b39:	add    rax,0x20
   140013b3d:	cmp    r9,0x3
   140013b41:	jl     0x140013b27
   140013b43:	cmp    r9,0x3
   140013b47:	jne    0x140013bba
   140013b49:	movsd  xmm4,QWORD PTR [r14+0x8]
   140013b4f:	movsxd rax,esi
   140013b52:	mov    rbx,QWORD PTR [r15+rax*8]
   140013b56:	mov    rax,QWORD PTR [r8]
   140013b59:	mov    rcx,QWORD PTR [rax]
   140013b5c:	mov    rdx,QWORD PTR [rbx]
   140013b5f:	movsd  xmm0,QWORD PTR [rdx]
   140013b63:	subsd  xmm4,QWORD PTR [rcx+0x8]
   140013b68:	movsd  xmm1,QWORD PTR [rdx+0x8]
   140013b6d:	subsd  xmm0,QWORD PTR [rcx]
   140013b71:	subsd  xmm1,QWORD PTR [rcx+0x8]
   140013b76:	mulsd  xmm4,xmm0
   140013b7a:	movsd  xmm0,QWORD PTR [r14]
   140013b7f:	subsd  xmm0,QWORD PTR [rcx]
   140013b83:	mulsd  xmm1,xmm0
   140013b87:	subsd  xmm4,xmm1
   140013b8b:	comisd xmm4,xmm6
   140013b8f:	ja     0x140013bad
   140013b91:	comisd xmm6,xmm4
   140013b95:	mov    eax,r13d
   140013b98:	setbe  al
   140013b9b:	add    eax,0x2
   140013b9e:	cmp    eax,0x1
   140013ba1:	je     0x140013bad
   140013ba3:	lea    r14,[rsp+0x70]
   140013ba8:	jmp    0x140013c50
   140013bad:	mov    r14,rbx
   140013bb0:	lea    rbx,[rsp+0x70]
   140013bb5:	jmp    0x140013c50
   140013bba:	lea    ecx,[rdx+0x1]
   140013bbd:	shl    r9,0x5
   140013bc1:	mov    eax,0x55555556
   140013bc6:	mov    rbx,QWORD PTR [r9+r11*1+0x10]
   140013bcb:	imul   ecx
   140013bcd:	mov    eax,edx
   140013bcf:	mov    r8,QWORD PTR [rbx]
   140013bd2:	shr    eax,0x1f
   140013bd5:	add    edx,eax
   140013bd7:	movsd  xmm0,QWORD PTR [r8]
   140013bdc:	movsd  xmm1,QWORD PTR [r8+0x8]
   140013be2:	lea    eax,[rdx+rdx*2]
   140013be5:	mov    rdx,QWORD PTR [r9+r11*1+0x8]
   140013bea:	sub    ecx,eax
   140013bec:	movsxd rax,ecx
   140013bef:	shl    rax,0x5
   140013bf3:	mov    rax,QWORD PTR [rax+r11*1+0x10]
   140013bf8:	mov    rcx,QWORD PTR [rax]
   140013bfb:	mov    rax,QWORD PTR [rdx]
   140013bfe:	subsd  xmm0,QWORD PTR [rcx]
   140013c02:	movsd  xmm4,QWORD PTR [rax+0x8]
   140013c07:	subsd  xmm1,QWORD PTR [rcx+0x8]
   140013c0c:	subsd  xmm4,QWORD PTR [rcx+0x8]
   140013c11:	mulsd  xmm4,xmm0
   140013c15:	movsd  xmm0,QWORD PTR [rax]
   140013c19:	subsd  xmm0,QWORD PTR [rcx]
   140013c1d:	mulsd  xmm1,xmm0
   140013c21:	subsd  xmm4,xmm1
   140013c25:	comisd xmm4,xmm6
   140013c29:	ja     0x140013c42
   140013c2b:	comisd xmm6,xmm4
   140013c2f:	mov    eax,r13d
   140013c32:	setbe  al
   140013c35:	add    eax,0x2
   140013c38:	cmp    eax,0x1
   140013c3b:	je     0x140013c42
   140013c3d:	mov    r14,rdx
   140013c40:	jmp    0x140013c48
   140013c42:	mov    r14,rbx
   140013c45:	mov    rbx,rdx
   140013c48:	mov    r8,QWORD PTR [rsp+0xf8]
   140013c50:	cmp    r10d,DWORD PTR [rsp+0xe0]
   140013c58:	jne    0x140013ca2
   140013c5a:	cmp    esi,ebp
   140013c5c:	js     0x140013c69
   140013c5e:	movsxd rax,esi
   140013c61:	mov    rcx,QWORD PTR [r15+rax*8]
   140013c65:	mov    QWORD PTR [r14+0x8],rcx
   140013c69:	inc    esi
   140013c6b:	cmp    esi,ebp
   140013c6d:	movsxd rax,esi
   140013c70:	mov    DWORD PTR [rip+0x3fb4a],esi        # 0x1400537c0
   140013c76:	mov    QWORD PTR [r15+rax*8],r14
   140013c7a:	js     0x140013c83
   140013c7c:	mov    rax,QWORD PTR [r8]
   140013c7f:	mov    QWORD PTR [rbx+0x8],rax
   140013c83:	dec    ebp
   140013c85:	movsxd rax,ebp
   140013c88:	mov    DWORD PTR [rip+0x3fb2e],ebp        # 0x1400537bc
   140013c8e:	lea    r8,[r15+rax*8]
   140013c92:	mov    QWORD PTR [rsp+0xf8],r8
   140013c9a:	mov    QWORD PTR [r8],rbx
   140013c9d:	jmp    0x140013d39
   140013ca2:	cmp    QWORD PTR [r8],rbx
   140013ca5:	je     0x140013cf7
   140013ca7:	movsxd rax,esi
   140013caa:	cmp    QWORD PTR [r15+rax*8],rbx
   140013cae:	je     0x140013cf7
   140013cb0:	mov    rcx,rbx
   140013cb3:	call   0x1400140a0
   140013cb8:	cmp    esi,eax
   140013cba:	js     0x140013cc7
   140013cbc:	movsxd rcx,eax
   140013cbf:	mov    rdx,QWORD PTR [r15+rcx*8]
   140013cc3:	mov    QWORD PTR [rbx+0x8],rdx
   140013cc7:	mov    r11,QWORD PTR [rsp+0x30]
   140013ccc:	lea    ebp,[rax-0x1]
   140013ccf:	movsxd rcx,ebp
   140013cd2:	mov    DWORD PTR [rip+0x3fae4],ebp        # 0x1400537bc
   140013cd8:	lea    r8,[r15+rcx*8]
   140013cdc:	mov    QWORD PTR [rsp+0xf8],r8
   140013ce4:	mov    QWORD PTR [r8],rbx
   140013ce7:	cmp    eax,r12d
   140013cea:	jle    0x140013d39
   140013cec:	mov    r12d,eax
   140013cef:	mov    DWORD PTR [rip+0x3facf],eax        # 0x1400537c4
   140013cf5:	jmp    0x140013d39
   140013cf7:	mov    rcx,r14
   140013cfa:	call   0x1400140a0
   140013cff:	cmp    eax,ebp
   140013d01:	js     0x140013d0e
   140013d03:	movsxd rcx,eax
   140013d06:	mov    rdx,QWORD PTR [r15+rcx*8]
   140013d0a:	mov    QWORD PTR [r14+0x8],rdx
   140013d0e:	mov    r8,QWORD PTR [rsp+0xf8]
   140013d16:	mov    r11,QWORD PTR [rsp+0x30]
   140013d1b:	lea    esi,[rax+0x1]
   140013d1e:	cmp    eax,r12d
   140013d21:	movsxd rcx,esi
   140013d24:	mov    DWORD PTR [rip+0x3fa96],esi        # 0x1400537c0
   140013d2a:	cmovl  r12d,eax
   140013d2e:	mov    QWORD PTR [r15+rcx*8],r14
   140013d32:	mov    DWORD PTR [rip+0x3fa8b],r12d        # 0x1400537c4
   140013d39:	mov    rax,r13
   140013d3c:	nop    DWORD PTR [rax+0x0]
   140013d40:	mov    rcx,QWORD PTR [rdi]
   140013d43:	test   rcx,rcx
   140013d46:	je     0x140013d4d
   140013d48:	cmp    DWORD PTR [rcx],0x1
   140013d4b:	je     0x140013d5c
   140013d4d:	inc    rax
   140013d50:	add    rdi,0x20
   140013d54:	cmp    rax,0x3
   140013d58:	jl     0x140013d40
   140013d5a:	jmp    0x140013d9b
   140013d5c:	mov    r14,QWORD PTR [rsp+0x40]
   140013d61:	inc    rax
   140013d64:	shl    rax,0x5
   140013d68:	mov    rcx,QWORD PTR [rax+r11*1]
   140013d6c:	movabs rax,0x4ec4ec4ec4ec4ec5
   140013d76:	sub    rcx,QWORD PTR [rip+0x3fa23]        # 0x1400537a0
   140013d7d:	imul   rcx
   140013d80:	mov    r10,rdx
   140013d83:	sar    r10,0x5
   140013d87:	mov    rax,r10
   140013d8a:	shr    rax,0x3f
   140013d8e:	add    r10,rax
   140013d91:	cmp    r10d,0xffffffff
   140013d95:	jne    0x140013b00
   140013d9b:	lea    rax,[rsp+0x70]
   140013da0:	mov    rax,QWORD PTR [rax+0x8]
   140013da4:	inc    r13d
   140013da7:	test   rax,rax
   140013daa:	jne    0x140013da0
   140013dac:	mov    ecx,r13d
   140013daf:	call   0x1400142c0
   140013db4:	mov    r9,QWORD PTR [rsp+0xf0]
   140013dbc:	mov    r8,QWORD PTR [rip+0x3fa05]        # 0x1400537c8
   140013dc3:	lea    eax,[r13-0x1]
   140013dc7:	mov    DWORD PTR [r9+0x8],r13d
   140013dcb:	lea    rcx,[rsp+0x70]
   140013dd0:	movsxd rdx,eax
   140013dd3:	shl    rdx,0x4
   140013dd7:	add    rdx,r8
   140013dda:	nop    WORD PTR [rax+rax*1+0x0]
   140013de0:	mov    rax,QWORD PTR [rcx]
   140013de3:	lea    rdx,[rdx-0x10]
   140013de7:	movups xmm0,XMMWORD PTR [rax]
   140013dea:	movups XMMWORD PTR [rdx+0x10],xmm0
   140013dee:	mov    rcx,QWORD PTR [rcx+0x8]
   140013df2:	test   rcx,rcx
   140013df5:	jne    0x140013de0
   140013df7:	mov    QWORD PTR [r9],r8
   140013dfa:	xor    eax,eax
   140013dfc:	mov    r14,QWORD PTR [rsp+0x98]
   140013e04:	mov    rbp,QWORD PTR [rsp+0xa0]
   140013e0c:	movaps xmm6,XMMWORD PTR [rsp+0x80]
   140013e14:	add    rsp,0xa8
   140013e1b:	pop    r15
   140013e1d:	pop    r13
   140013e1f:	pop    r12
   140013e21:	pop    rdi
   140013e22:	pop    rsi
   140013e23:	pop    rbx
   140013e24:	ret    
   140013e25:	int3   
   140013e26:	int3   
   140013e27:	int3   
   140013e28:	int3   
   140013e29:	int3   
   140013e2a:	int3   
   140013e2b:	int3   
   140013e2c:	int3   
   140013e2d:	int3   
   140013e2e:	int3   
   140013e2f:	int3   
   140013e30:	mov    r9,rdx
   140013e33:	cmp    ecx,0x1
   140013e36:	jne    0x140013e69
   140013e38:	movsxd r8,DWORD PTR [rip+0x3f97d]        # 0x1400537bc
   140013e3f:	mov    rdx,QWORD PTR [rip+0x3f96a]        # 0x1400537b0
   140013e46:	cmp    DWORD PTR [rip+0x3f973],r8d        # 0x1400537c0
   140013e4d:	js     0x140013e57
   140013e4f:	mov    rcx,QWORD PTR [rdx+r8*8]
   140013e53:	mov    QWORD PTR [r9+0x8],rcx
   140013e57:	dec    r8d
   140013e5a:	movsxd rax,r8d
   140013e5d:	mov    DWORD PTR [rip+0x3f958],r8d        # 0x1400537bc
   140013e64:	mov    QWORD PTR [rdx+rax*8],r9
   140013e68:	ret    
   140013e69:	movsxd rdx,DWORD PTR [rip+0x3f950]        # 0x1400537c0
   140013e70:	mov    r8,QWORD PTR [rip+0x3f939]        # 0x1400537b0
   140013e77:	cmp    edx,DWORD PTR [rip+0x3f93f]        # 0x1400537bc
   140013e7d:	js     0x140013e87
   140013e7f:	mov    rcx,QWORD PTR [r8+rdx*8]
   140013e83:	mov    QWORD PTR [r9+0x8],rcx
   140013e87:	inc    edx
   140013e89:	movsxd rax,edx
   140013e8c:	mov    DWORD PTR [rip+0x3f92e],edx        # 0x1400537c0
   140013e92:	mov    QWORD PTR [r8+rax*8],r9
   140013e96:	ret    
   140013e97:	int3   
   140013e98:	int3   
   140013e99:	int3   
   140013e9a:	int3   
   140013e9b:	int3   
   140013e9c:	int3   
   140013e9d:	int3   
   140013e9e:	int3   
   140013e9f:	int3   
   140013ea0:	sub    rsp,0x48
   140013ea4:	movsd  xmm2,QWORD PTR [rdx+0x8]
   140013ea9:	movsd  xmm3,QWORD PTR [rdx]
   140013ead:	movsd  xmm4,QWORD PTR [rcx]
   140013eb1:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140013eb6:	movaps XMMWORD PTR [rsp+0x20],xmm7
   140013ebb:	movaps XMMWORD PTR [rsp+0x10],xmm8
   140013ec1:	movsd  xmm0,QWORD PTR [r8]
   140013ec6:	movsd  xmm1,QWORD PTR [r8+0x8]
   140013ecc:	movaps xmm5,xmm2
   140013ecf:	movaps XMMWORD PTR [rsp],xmm9
   140013ed4:	movsd  xmm9,QWORD PTR [rcx+0x8]
   140013eda:	movaps xmm6,xmm1
   140013edd:	movaps xmm8,xmm0
   140013ee1:	subsd  xmm5,xmm9
   140013ee6:	subsd  xmm6,xmm9
   140013eeb:	subsd  xmm9,xmm2
   140013ef0:	subsd  xmm1,xmm2
   140013ef4:	movaps xmm7,xmm3
   140013ef7:	subsd  xmm8,xmm4
   140013efc:	xorps  xmm2,xmm2
   140013eff:	subsd  xmm7,xmm4
   140013f03:	subsd  xmm0,xmm3
   140013f07:	subsd  xmm4,xmm3
   140013f0b:	mulsd  xmm9,xmm0
   140013f10:	mulsd  xmm1,xmm4
   140013f14:	subsd  xmm9,xmm1
   140013f19:	comisd xmm9,xmm2
   140013f1e:	ja     0x140013f76
   140013f20:	xor    ecx,ecx
   140013f22:	comisd xmm2,xmm9
   140013f27:	mov    eax,ecx
   140013f29:	setbe  al
   140013f2c:	add    eax,0x2
   140013f2f:	cmp    eax,0x3
   140013f32:	jne    0x140013f76
   140013f34:	movaps xmm1,xmm6
   140013f37:	movaps xmm0,xmm8
   140013f3b:	mulsd  xmm1,xmm5
   140013f3f:	mulsd  xmm0,xmm7
   140013f43:	addsd  xmm1,xmm0
   140013f47:	comisd xmm1,xmm2
   140013f4b:	jb     0x140013f72
   140013f4d:	mulsd  xmm6,xmm6
   140013f51:	mulsd  xmm8,xmm8
   140013f56:	mulsd  xmm5,xmm5
   140013f5a:	addsd  xmm6,xmm8
   140013f5f:	mulsd  xmm7,xmm7
   140013f63:	addsd  xmm5,xmm7
   140013f67:	comisd xmm5,xmm6
   140013f6b:	jb     0x140013f72
   140013f6d:	mov    ecx,0x1
   140013f72:	mov    eax,ecx
   140013f74:	jmp    0x140013f78
   140013f76:	xor    eax,eax
   140013f78:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140013f7d:	movaps xmm7,XMMWORD PTR [rsp+0x20]
   140013f82:	movaps xmm8,XMMWORD PTR [rsp+0x10]
   140013f88:	movaps xmm9,XMMWORD PTR [rsp]
   140013f8d:	add    rsp,0x48
   140013f91:	ret    
   140013f92:	int3   
   140013f93:	int3   
   140013f94:	int3   
   140013f95:	int3   
   140013f96:	int3   
   140013f97:	int3   
   140013f98:	int3   
   140013f99:	int3   
   140013f9a:	int3   
   140013f9b:	int3   
   140013f9c:	int3   
   140013f9d:	int3   
   140013f9e:	int3   
   140013f9f:	int3   
   140013fa0:	movsd  xmm0,QWORD PTR [r8]
   140013fa5:	movsd  xmm4,QWORD PTR [rcx+0x8]
   140013faa:	movsd  xmm1,QWORD PTR [r8+0x8]
   140013fb0:	subsd  xmm0,QWORD PTR [rdx]
   140013fb4:	subsd  xmm4,QWORD PTR [rdx+0x8]
   140013fb9:	subsd  xmm1,QWORD PTR [rdx+0x8]
   140013fbe:	mulsd  xmm4,xmm0
   140013fc2:	movsd  xmm0,QWORD PTR [rcx]
   140013fc6:	subsd  xmm0,QWORD PTR [rdx]
   140013fca:	mulsd  xmm1,xmm0
   140013fce:	xorps  xmm0,xmm0
   140013fd1:	subsd  xmm4,xmm1
   140013fd5:	comisd xmm4,xmm0
   140013fd9:	jbe    0x140013fe1
   140013fdb:	mov    eax,0x1
   140013fe0:	ret    
   140013fe1:	xor    eax,eax
   140013fe3:	comisd xmm0,xmm4
   140013fe7:	setbe  al
   140013fea:	add    eax,0x2
   140013fed:	ret    
   140013fee:	int3   
   140013fef:	int3   
   140013ff0:	mov    QWORD PTR [rsp+0x8],rbx
   140013ff5:	mov    QWORD PTR [rsp+0x10],rdi
   140013ffa:	movsxd rax,ecx
   140013ffd:	mov    r10d,0x10
   140014003:	imul   r9,rax,0x68
   140014007:	movsxd rax,edx
   14001400a:	imul   rdi,rax,0x68
   14001400e:	add    r9,QWORD PTR [rip+0x3f78b]        # 0x1400537a0
   140014015:	add    rdi,QWORD PTR [rip+0x3f784]        # 0x1400537a0
   14001401c:	nop    DWORD PTR [rax+0x0]
   140014020:	xor    eax,eax
   140014022:	nop    DWORD PTR [rax+0x0]
   140014026:	data16 nop WORD PTR [rax+rax*1+0x0]
   140014030:	mov    rcx,QWORD PTR [r10+r9*1-0x8]
   140014035:	mov    r11,QWORD PTR [rcx]
   140014038:	mov    rcx,QWORD PTR [rax+rdi*1+0x8]
   14001403d:	mov    rbx,QWORD PTR [rcx]
   140014040:	cmp    r11,rbx
   140014043:	jne    0x140014056
   140014045:	mov    rcx,QWORD PTR [rax+rdi*1+0x10]
   14001404a:	mov    r8,QWORD PTR [r10+r9*1]
   14001404e:	mov    rdx,QWORD PTR [rcx]
   140014051:	cmp    QWORD PTR [r8],rdx
   140014054:	je     0x140014069
   140014056:	mov    rcx,QWORD PTR [rax+rdi*1+0x10]
   14001405b:	cmp    r11,QWORD PTR [rcx]
   14001405e:	jne    0x140014073
   140014060:	mov    rcx,QWORD PTR [r10+r9*1]
   140014064:	cmp    QWORD PTR [rcx],rbx
   140014067:	jne    0x140014073
   140014069:	mov    QWORD PTR [r10+r9*1+0x10],rdi
   14001406e:	mov    QWORD PTR [rax+rdi*1+0x20],r9
   140014073:	add    rax,0x20
   140014077:	cmp    rax,0x60
   14001407b:	jl     0x140014030
   14001407d:	add    r10,0x20
   140014081:	cmp    r10,0x70
   140014085:	jl     0x140014020
   140014087:	mov    rbx,QWORD PTR [rsp+0x8]
   14001408c:	mov    rdi,QWORD PTR [rsp+0x10]
   140014091:	ret    
   140014092:	int3   
   140014093:	int3   
   140014094:	int3   
   140014095:	int3   
   140014096:	int3   
   140014097:	int3   
   140014098:	int3   
   140014099:	int3   
   14001409a:	int3   
   14001409b:	int3   
   14001409c:	int3   
   14001409d:	int3   
   14001409e:	int3   
   14001409f:	int3   
   1400140a0:	rex push rbx
   1400140a2:	sub    rsp,0x20
   1400140a6:	movsxd r8,DWORD PTR [rip+0x3f70f]        # 0x1400537bc
   1400140ad:	mov    r9d,DWORD PTR [rip+0x3f710]        # 0x1400537c4
   1400140b4:	mov    rbx,QWORD PTR [rip+0x3f6f5]        # 0x1400537b0
   1400140bb:	movaps XMMWORD PTR [rsp+0x10],xmm6
   1400140c0:	xorps  xmm5,xmm5
   1400140c3:	movaps XMMWORD PTR [rsp],xmm7
   1400140c7:	mov    r11,rcx
   1400140ca:	cmp    r8d,r9d
   1400140cd:	jge    0x140014144
   1400140cf:	mov    rdx,QWORD PTR [rcx]
   1400140d2:	lea    r10,[rbx+r8*8]
   1400140d6:	movsd  xmm6,QWORD PTR [rdx]
   1400140da:	movsd  xmm7,QWORD PTR [rdx+0x8]
   1400140df:	nop
   1400140e0:	mov    rax,QWORD PTR [r10]
   1400140e3:	add    r10,0x8
   1400140e7:	movaps xmm0,xmm6
   1400140ea:	mov    rcx,QWORD PTR [rax]
   1400140ed:	mov    rax,QWORD PTR [r10]
   1400140f0:	movaps xmm1,xmm7
   1400140f3:	mov    rdx,QWORD PTR [rax]
   1400140f6:	subsd  xmm0,QWORD PTR [rcx]
   1400140fa:	subsd  xmm1,QWORD PTR [rcx+0x8]
   1400140ff:	movsd  xmm4,QWORD PTR [rdx+0x8]
   140014104:	subsd  xmm4,QWORD PTR [rcx+0x8]
   140014109:	mulsd  xmm4,xmm0
   14001410d:	movsd  xmm0,QWORD PTR [rdx]
   140014111:	subsd  xmm0,QWORD PTR [rcx]
   140014115:	mulsd  xmm1,xmm0
   140014119:	subsd  xmm4,xmm1
   14001411d:	comisd xmm4,xmm5
   140014121:	ja     0x1400141ce
   140014127:	xor    eax,eax
   140014129:	comisd xmm5,xmm4
   14001412d:	setbe  al
   140014130:	add    eax,0x2
   140014133:	cmp    eax,0x1
   140014136:	je     0x1400141ce
   14001413c:	inc    r8d
   14001413f:	cmp    r8d,r9d
   140014142:	jl     0x1400140e0
   140014144:	movsxd r8,DWORD PTR [rip+0x3f675]        # 0x1400537c0
   14001414b:	cmp    r8d,r9d
   14001414e:	jle    0x1400141bc
   140014150:	mov    rcx,QWORD PTR [r11]
   140014153:	lea    r10,[rbx+r8*8]
   140014157:	movsd  xmm6,QWORD PTR [rcx]
   14001415b:	movsd  xmm7,QWORD PTR [rcx+0x8]
   140014160:	mov    rax,QWORD PTR [r10]
   140014163:	add    r10,0xfffffffffffffff8
   140014167:	movaps xmm0,xmm6
   14001416a:	mov    rcx,QWORD PTR [rax]
   14001416d:	mov    rax,QWORD PTR [r10]
   140014170:	movaps xmm1,xmm7
   140014173:	mov    rdx,QWORD PTR [rax]
   140014176:	subsd  xmm0,QWORD PTR [rcx]
   14001417a:	subsd  xmm1,QWORD PTR [rcx+0x8]
   14001417f:	movsd  xmm4,QWORD PTR [rdx+0x8]
   140014184:	subsd  xmm4,QWORD PTR [rcx+0x8]
   140014189:	mulsd  xmm4,xmm0
   14001418d:	movsd  xmm0,QWORD PTR [rdx]
   140014191:	subsd  xmm0,QWORD PTR [rcx]
   140014195:	mulsd  xmm1,xmm0
   140014199:	subsd  xmm4,xmm1
   14001419d:	comisd xmm4,xmm5
   1400141a1:	ja     0x1400141b4
   1400141a3:	xor    eax,eax
   1400141a5:	comisd xmm5,xmm4
   1400141a9:	setbe  al
   1400141ac:	add    eax,0x2
   1400141af:	cmp    eax,0x2
   1400141b2:	je     0x1400141ce
   1400141b4:	dec    r8d
   1400141b7:	cmp    r8d,r9d
   1400141ba:	jg     0x140014160
   1400141bc:	mov    eax,r9d
   1400141bf:	movaps xmm6,XMMWORD PTR [rsp+0x10]
   1400141c4:	movaps xmm7,XMMWORD PTR [rsp]
   1400141c8:	add    rsp,0x20
   1400141cc:	pop    rbx
   1400141cd:	ret    
   1400141ce:	movaps xmm6,XMMWORD PTR [rsp+0x10]
   1400141d3:	movaps xmm7,XMMWORD PTR [rsp]
   1400141d7:	mov    eax,r8d
   1400141da:	add    rsp,0x20
   1400141de:	pop    rbx
   1400141df:	ret    
   1400141e0:	rex push rbx
   1400141e2:	sub    rsp,0x30
   1400141e6:	movsxd rbx,ecx
   1400141e9:	cmp    ebx,DWORD PTR [rip+0x3f5c9]        # 0x1400537b8
   1400141ef:	jle    0x1400142ab
   1400141f5:	mov    rcx,QWORD PTR [rip+0x3f5b4]        # 0x1400537b0
   1400141fc:	test   rcx,rcx
   1400141ff:	jne    0x140014255
   140014201:	mov    rcx,rbx
   140014204:	shl    rcx,0x3
   140014208:	call   QWORD PTR [rip+0x28f5a]        # 0x14003d168
   14001420e:	mov    QWORD PTR [rip+0x3f59b],rax        # 0x1400537b0
   140014215:	test   rax,rax
   140014218:	jne    0x1400142a5
   14001421e:	call   QWORD PTR [rip+0x290ac]        # 0x14003d2d0
   140014224:	lea    rcx,[rip+0x2a0b5]        # 0x14003e2e0
   14001422b:	lea    r8,[rip+0x29f9e]        # 0x14003e1d0
   140014232:	mov    QWORD PTR [rsp+0x20],rcx
   140014237:	lea    rdx,[rip+0x29f12]        # 0x14003e150
   14001423e:	lea    rcx,[rax+0x60]
   140014242:	mov    r9d,0x20b
   140014248:	call   QWORD PTR [rip+0x29072]        # 0x14003d2c0
   14001424e:	call   QWORD PTR [rip+0x28e4c]        # 0x14003d0a0
   140014254:	int3   
   140014255:	mov    rdx,rbx
   140014258:	shl    rdx,0x3
   14001425c:	call   QWORD PTR [rip+0x28e46]        # 0x14003d0a8
   140014262:	mov    QWORD PTR [rip+0x3f547],rax        # 0x1400537b0
   140014269:	test   rax,rax
   14001426c:	jne    0x1400142a5
   14001426e:	call   QWORD PTR [rip+0x2905c]        # 0x14003d2d0
   140014274:	lea    rcx,[rip+0x2a07d]        # 0x14003e2f8
   14001427b:	lea    r8,[rip+0x29f4e]        # 0x14003e1d0
   140014282:	mov    QWORD PTR [rsp+0x20],rcx
   140014287:	lea    rdx,[rip+0x29ec2]        # 0x14003e150
   14001428e:	lea    rcx,[rax+0x60]
   140014292:	mov    r9d,0x211
   140014298:	call   QWORD PTR [rip+0x29022]        # 0x14003d2c0
   14001429e:	call   QWORD PTR [rip+0x28dfc]        # 0x14003d0a0
   1400142a4:	int3   
   1400142a5:	mov    DWORD PTR [rip+0x3f50d],ebx        # 0x1400537b8
   1400142ab:	add    rsp,0x30
   1400142af:	pop    rbx
   1400142b0:	ret    
   1400142b1:	int3   
   1400142b2:	int3   
   1400142b3:	int3   
   1400142b4:	int3   
   1400142b5:	int3   
   1400142b6:	int3   
   1400142b7:	int3   
   1400142b8:	int3   
   1400142b9:	int3   
   1400142ba:	int3   
   1400142bb:	int3   
   1400142bc:	int3   
   1400142bd:	int3   
   1400142be:	int3   
   1400142bf:	int3   
   1400142c0:	rex push rbx
   1400142c2:	sub    rsp,0x30
   1400142c6:	movsxd rbx,ecx
   1400142c9:	cmp    ebx,DWORD PTR [rip+0x3f501]        # 0x1400537d0
   1400142cf:	jle    0x14001438b
   1400142d5:	mov    rcx,QWORD PTR [rip+0x3f4ec]        # 0x1400537c8
   1400142dc:	test   rcx,rcx
   1400142df:	jne    0x140014335
   1400142e1:	mov    rcx,rbx
   1400142e4:	shl    rcx,0x4
   1400142e8:	call   QWORD PTR [rip+0x28e7a]        # 0x14003d168
   1400142ee:	mov    QWORD PTR [rip+0x3f4d3],rax        # 0x1400537c8
   1400142f5:	test   rax,rax
   1400142f8:	jne    0x140014385
   1400142fe:	call   QWORD PTR [rip+0x28fcc]        # 0x14003d2d0
   140014304:	lea    rcx,[rip+0x29df5]        # 0x14003e100
   14001430b:	lea    r8,[rip+0x29ebe]        # 0x14003e1d0
   140014312:	mov    QWORD PTR [rsp+0x20],rcx
   140014317:	lea    rdx,[rip+0x29e32]        # 0x14003e150
   14001431e:	lea    rcx,[rax+0x60]
   140014322:	mov    r9d,0x21d
   140014328:	call   QWORD PTR [rip+0x28f92]        # 0x14003d2c0
   14001432e:	call   QWORD PTR [rip+0x28d6c]        # 0x14003d0a0
   140014334:	int3   
   140014335:	mov    rdx,rbx
   140014338:	shl    rdx,0x4
   14001433c:	call   QWORD PTR [rip+0x28d66]        # 0x14003d0a8
   140014342:	mov    QWORD PTR [rip+0x3f47f],rax        # 0x1400537c8
   140014349:	test   rax,rax
   14001434c:	jne    0x140014385
   14001434e:	call   QWORD PTR [rip+0x28f7c]        # 0x14003d2d0
   140014354:	lea    rcx,[rip+0x29e0d]        # 0x14003e168
   14001435b:	lea    r8,[rip+0x29e6e]        # 0x14003e1d0
   140014362:	mov    QWORD PTR [rsp+0x20],rcx
   140014367:	lea    rdx,[rip+0x29de2]        # 0x14003e150
   14001436e:	lea    rcx,[rax+0x60]
   140014372:	mov    r9d,0x223
   140014378:	call   QWORD PTR [rip+0x28f42]        # 0x14003d2c0
   14001437e:	call   QWORD PTR [rip+0x28d1c]        # 0x14003d0a0
   140014384:	int3   
   140014385:	mov    DWORD PTR [rip+0x3f445],ebx        # 0x1400537d0
   14001438b:	add    rsp,0x30
   14001438f:	pop    rbx
   140014390:	ret    
   140014391:	int3   
   140014392:	int3   
   140014393:	int3   
   140014394:	int3   
   140014395:	int3   
   140014396:	int3   
   140014397:	int3   
   140014398:	int3   
   140014399:	int3   
   14001439a:	int3   
   14001439b:	int3   
   14001439c:	int3   
   14001439d:	int3   
   14001439e:	int3   
   14001439f:	int3   
   1400143a0:	rex push rbx
   1400143a2:	sub    rsp,0x30
   1400143a6:	movsxd rbx,ecx
   1400143a9:	cmp    ebx,DWORD PTR [rip+0x3f3e9]        # 0x140053798
   1400143af:	jle    0x140014522
   1400143b5:	mov    rcx,QWORD PTR [rip+0x3f3cc]        # 0x140053788
   1400143bc:	mov    QWORD PTR [rsp+0x40],rdi
   1400143c1:	test   rcx,rcx
   1400143c4:	jne    0x14001446f
   1400143ca:	mov    rcx,rbx
   1400143cd:	shl    rcx,0x4
   1400143d1:	call   QWORD PTR [rip+0x28d91]        # 0x14003d168
   1400143d7:	mov    QWORD PTR [rip+0x3f3aa],rax        # 0x140053788
   1400143de:	test   rax,rax
   1400143e1:	jne    0x14001441a
   1400143e3:	call   QWORD PTR [rip+0x28ee7]        # 0x14003d2d0
   1400143e9:	lea    rcx,[rip+0x29e60]        # 0x14003e250
   1400143f0:	lea    r8,[rip+0x29dd9]        # 0x14003e1d0
   1400143f7:	mov    QWORD PTR [rsp+0x20],rcx
   1400143fc:	lea    rdx,[rip+0x29d4d]        # 0x14003e150
   140014403:	lea    rcx,[rax+0x60]
   140014407:	mov    r9d,0x1de
   14001440d:	call   QWORD PTR [rip+0x28ead]        # 0x14003d2c0
   140014413:	call   QWORD PTR [rip+0x28c87]        # 0x14003d0a0
   140014419:	int3   
   14001441a:	lea    rcx,[rbx*8+0x0]
   140014422:	call   QWORD PTR [rip+0x28d40]        # 0x14003d168
   140014428:	mov    QWORD PTR [rip+0x3f361],rax        # 0x140053790
   14001442f:	test   rax,rax
   140014432:	jne    0x140014517
   140014438:	call   QWORD PTR [rip+0x28e92]        # 0x14003d2d0
   14001443e:	lea    rcx,[rip+0x29e23]        # 0x14003e268
   140014445:	lea    r8,[rip+0x29d84]        # 0x14003e1d0
   14001444c:	mov    QWORD PTR [rsp+0x20],rcx
   140014451:	lea    rdx,[rip+0x29cf8]        # 0x14003e150
   140014458:	lea    rcx,[rax+0x60]
   14001445c:	mov    r9d,0x1e2
   140014462:	call   QWORD PTR [rip+0x28e58]        # 0x14003d2c0
   140014468:	call   QWORD PTR [rip+0x28c32]        # 0x14003d0a0
   14001446e:	int3   
   14001446f:	mov    rdx,rbx
   140014472:	shl    rdx,0x4
   140014476:	call   QWORD PTR [rip+0x28c2c]        # 0x14003d0a8
   14001447c:	mov    QWORD PTR [rip+0x3f305],rax        # 0x140053788
   140014483:	test   rax,rax
   140014486:	jne    0x1400144bf
   140014488:	call   QWORD PTR [rip+0x28e42]        # 0x14003d2d0
   14001448e:	lea    rcx,[rip+0x29deb]        # 0x14003e280
   140014495:	lea    r8,[rip+0x29d34]        # 0x14003e1d0
   14001449c:	mov    QWORD PTR [rsp+0x20],rcx
   1400144a1:	lea    rdx,[rip+0x29ca8]        # 0x14003e150
   1400144a8:	lea    rcx,[rax+0x60]
   1400144ac:	mov    r9d,0x1e8
   1400144b2:	call   QWORD PTR [rip+0x28e08]        # 0x14003d2c0
   1400144b8:	call   QWORD PTR [rip+0x28be2]        # 0x14003d0a0
   1400144be:	int3   
   1400144bf:	mov    rcx,QWORD PTR [rip+0x3f2ca]        # 0x140053790
   1400144c6:	lea    rdx,[rbx*8+0x0]
   1400144ce:	call   QWORD PTR [rip+0x28bd4]        # 0x14003d0a8
   1400144d4:	mov    QWORD PTR [rip+0x3f2b5],rax        # 0x140053790
   1400144db:	test   rax,rax
   1400144de:	jne    0x140014517
   1400144e0:	call   QWORD PTR [rip+0x28dea]        # 0x14003d2d0
   1400144e6:	lea    rcx,[rip+0x29dab]        # 0x14003e298
   1400144ed:	lea    r8,[rip+0x29cdc]        # 0x14003e1d0
   1400144f4:	mov    QWORD PTR [rsp+0x20],rcx
   1400144f9:	lea    rdx,[rip+0x29c50]        # 0x14003e150
   140014500:	lea    rcx,[rax+0x60]
   140014504:	mov    r9d,0x1ed
   14001450a:	call   QWORD PTR [rip+0x28db0]        # 0x14003d2c0
   140014510:	call   QWORD PTR [rip+0x28b8a]        # 0x14003d0a0
   140014516:	int3   
   140014517:	mov    rdi,QWORD PTR [rsp+0x40]
   14001451c:	mov    DWORD PTR [rip+0x3f276],ebx        # 0x140053798
   140014522:	add    rsp,0x30
   140014526:	pop    rbx
   140014527:	ret    
   140014528:	int3   
   140014529:	int3   
   14001452a:	int3   
   14001452b:	int3   
   14001452c:	int3   
   14001452d:	int3   
   14001452e:	int3   
   14001452f:	int3   
   140014530:	rex push rbx
   140014532:	sub    rsp,0x30
   140014536:	movsxd rbx,ecx
   140014539:	cmp    ebx,DWORD PTR [rip+0x3f269]        # 0x1400537a8
   14001453f:	jle    0x1400145f5
   140014545:	mov    rcx,QWORD PTR [rip+0x3f254]        # 0x1400537a0
   14001454c:	test   rcx,rcx
   14001454f:	jne    0x1400145a2
   140014551:	imul   rcx,rbx,0x68
   140014555:	call   QWORD PTR [rip+0x28c0d]        # 0x14003d168
   14001455b:	mov    QWORD PTR [rip+0x3f23e],rax        # 0x1400537a0
   140014562:	test   rax,rax
   140014565:	jne    0x1400145ef
   14001456b:	call   QWORD PTR [rip+0x28d5f]        # 0x14003d2d0
   140014571:	lea    rcx,[rip+0x29d38]        # 0x14003e2b0
   140014578:	lea    r8,[rip+0x29c51]        # 0x14003e1d0
   14001457f:	mov    QWORD PTR [rsp+0x20],rcx
   140014584:	lea    rdx,[rip+0x29bc5]        # 0x14003e150
   14001458b:	lea    rcx,[rax+0x60]
   14001458f:	mov    r9d,0x1f9
   140014595:	call   QWORD PTR [rip+0x28d25]        # 0x14003d2c0
   14001459b:	call   QWORD PTR [rip+0x28aff]        # 0x14003d0a0
   1400145a1:	int3   
   1400145a2:	imul   rdx,rbx,0x68
   1400145a6:	call   QWORD PTR [rip+0x28afc]        # 0x14003d0a8
   1400145ac:	mov    QWORD PTR [rip+0x3f1ed],rax        # 0x1400537a0
   1400145b3:	test   rax,rax
   1400145b6:	jne    0x1400145ef
   1400145b8:	call   QWORD PTR [rip+0x28d12]        # 0x14003d2d0
   1400145be:	lea    rcx,[rip+0x29d03]        # 0x14003e2c8
   1400145c5:	lea    r8,[rip+0x29c04]        # 0x14003e1d0
   1400145cc:	mov    QWORD PTR [rsp+0x20],rcx
   1400145d1:	lea    rdx,[rip+0x29b78]        # 0x14003e150
   1400145d8:	lea    rcx,[rax+0x60]
   1400145dc:	mov    r9d,0x1ff
   1400145e2:	call   QWORD PTR [rip+0x28cd8]        # 0x14003d2c0
   1400145e8:	call   QWORD PTR [rip+0x28ab2]        # 0x14003d0a0
   1400145ee:	int3   
   1400145ef:	mov    DWORD PTR [rip+0x3f1b3],ebx        # 0x1400537a8
   1400145f5:	add    rsp,0x30
   1400145f9:	pop    rbx
   1400145fa:	ret    
   1400145fb:	int3   
   1400145fc:	int3   
   1400145fd:	int3   
   1400145fe:	int3   
   1400145ff:	int3   
   140014600:	mov    QWORD PTR [rsp+0x8],rbx
   140014605:	mov    QWORD PTR [rsp+0x10],rsi
   14001460a:	push   rdi
   14001460b:	sub    rsp,0x60
   14001460f:	movsd  xmm4,QWORD PTR [rcx+0x8]
   140014614:	movsd  xmm1,QWORD PTR [r8+0x8]
   14001461a:	movaps XMMWORD PTR [rsp+0x50],xmm7
   14001461f:	movaps XMMWORD PTR [rsp+0x40],xmm8
   140014625:	movaps XMMWORD PTR [rsp+0x30],xmm9
   14001462b:	movaps XMMWORD PTR [rsp+0x20],xmm10
   140014631:	xorps  xmm3,xmm3
   140014634:	xor    r10d,r10d
   140014637:	mov    r11,r9
   14001463a:	mov    rbx,r8
   14001463d:	mov    rdi,rdx
   140014640:	mov    rsi,rcx
   140014643:	movsd  xmm8,QWORD PTR [r8]
   140014648:	movsd  xmm7,QWORD PTR [rcx]
   14001464c:	movaps xmm9,xmm4
   140014650:	subsd  xmm9,QWORD PTR [rdx+0x8]
   140014656:	movaps xmm2,xmm8
   14001465a:	movaps xmm10,xmm7
   14001465e:	subsd  xmm2,QWORD PTR [rdx]
   140014662:	subsd  xmm10,QWORD PTR [rdx]
   140014667:	movaps xmm0,xmm1
   14001466a:	mulsd  xmm2,xmm9
   14001466f:	subsd  xmm0,QWORD PTR [rdx+0x8]
   140014674:	mulsd  xmm0,xmm10
   140014679:	subsd  xmm2,xmm0
   14001467d:	comisd xmm2,xmm3
   140014681:	ja     0x140014699
   140014683:	comisd xmm3,xmm2
   140014687:	mov    eax,r10d
   14001468a:	setbe  al
   14001468d:	add    eax,0x2
   140014690:	cmp    eax,0x3
   140014693:	je     0x14001478e
   140014699:	movsd  xmm5,QWORD PTR [r9]
   14001469e:	movsd  xmm0,QWORD PTR [r9+0x8]
   1400146a4:	subsd  xmm0,QWORD PTR [rdx+0x8]
   1400146a9:	movaps xmm2,xmm5
   1400146ac:	subsd  xmm2,QWORD PTR [rdx]
   1400146b0:	mulsd  xmm0,xmm10
   1400146b5:	mulsd  xmm2,xmm9
   1400146ba:	subsd  xmm2,xmm0
   1400146be:	comisd xmm2,xmm3
   1400146c2:	ja     0x1400146da
   1400146c4:	comisd xmm3,xmm2
   1400146c8:	mov    eax,r10d
   1400146cb:	setbe  al
   1400146ce:	add    eax,0x2
   1400146d1:	cmp    eax,0x3
   1400146d4:	je     0x14001478e
   1400146da:	subsd  xmm1,QWORD PTR [r9+0x8]
   1400146e0:	subsd  xmm4,QWORD PTR [r9+0x8]
   1400146e6:	subsd  xmm7,xmm5
   1400146ea:	mulsd  xmm1,xmm7
   1400146ee:	subsd  xmm8,xmm5
   1400146f3:	mulsd  xmm4,xmm8
   1400146f8:	subsd  xmm1,xmm4
   1400146fc:	comisd xmm1,xmm3
   140014700:	ja     0x140014714
   140014702:	comisd xmm3,xmm1
   140014706:	mov    eax,r10d
   140014709:	setbe  al
   14001470c:	add    eax,0x2
   14001470f:	cmp    eax,0x3
   140014712:	je     0x14001478e
   140014714:	mov    r8,rdx
   140014717:	mov    rcx,rbx
   14001471a:	mov    rdx,r9
   14001471d:	call   0x140013fa0
   140014722:	cmp    eax,0x3
   140014725:	je     0x14001478e
   140014727:	mov    r8,rbx
   14001472a:	mov    rdx,rdi
   14001472d:	mov    rcx,rsi
   140014730:	call   0x140013fa0
   140014735:	mov    r8,r11
   140014738:	mov    r9d,r10d
   14001473b:	cmp    eax,0x1
   14001473e:	sete   r9b
   140014742:	call   0x140013fa0
   140014747:	mov    ecx,r10d
   14001474a:	cmp    eax,0x1
   14001474d:	sete   cl
   140014750:	xor    r9d,ecx
   140014753:	je     0x140014789
   140014755:	mov    r8,rsi
   140014758:	mov    rdx,r11
   14001475b:	mov    rcx,rbx
   14001475e:	call   0x140013fa0
   140014763:	mov    r8,rdi
   140014766:	mov    r9d,r10d
   140014769:	cmp    eax,0x1
   14001476c:	sete   r9b
   140014770:	call   0x140013fa0
   140014775:	mov    ecx,r10d
   140014778:	cmp    eax,0x1
   14001477b:	sete   cl
   14001477e:	xor    r9d,ecx
   140014781:	je     0x140014789
   140014783:	mov    r10d,0x1
   140014789:	mov    eax,r10d
   14001478c:	jmp    0x1400147d5
   14001478e:	mov    r8,rbx
   140014791:	mov    rdx,rdi
   140014794:	mov    rcx,rsi
   140014797:	call   0x140013ea0
   14001479c:	test   eax,eax
   14001479e:	jne    0x1400147d0
   1400147a0:	mov    r8,r9
   1400147a3:	mov    rcx,rsi
   1400147a6:	call   0x140013ea0
   1400147ab:	test   eax,eax
   1400147ad:	jne    0x1400147d0
   1400147af:	mov    r8,rsi
   1400147b2:	mov    rdx,r9
   1400147b5:	mov    rcx,rbx
   1400147b8:	call   0x140013ea0
   1400147bd:	test   eax,eax
   1400147bf:	jne    0x1400147d0
   1400147c1:	mov    r8,rdi
   1400147c4:	mov    rcx,rbx
   1400147c7:	call   0x140013ea0
   1400147cc:	test   eax,eax
   1400147ce:	je     0x1400147d5
   1400147d0:	mov    eax,0x1
   1400147d5:	mov    rbx,QWORD PTR [rsp+0x70]
   1400147da:	mov    rsi,QWORD PTR [rsp+0x78]
   1400147df:	movaps xmm7,XMMWORD PTR [rsp+0x50]
   1400147e4:	movaps xmm8,XMMWORD PTR [rsp+0x40]
   1400147ea:	movaps xmm9,XMMWORD PTR [rsp+0x30]
   1400147f0:	movaps xmm10,XMMWORD PTR [rsp+0x20]
   1400147f6:	add    rsp,0x60
   1400147fa:	pop    rdi
   1400147fb:	ret    
   1400147fc:	int3   
   1400147fd:	int3   
   1400147fe:	int3   
   1400147ff:	int3   
   140014800:	mov    DWORD PTR [rsp+0x10],edx
   140014804:	mov    DWORD PTR [rsp+0x8],ecx
   140014808:	push   rbx
   140014809:	push   rbp
   14001480a:	push   rsi
   14001480b:	push   r12
   14001480d:	push   r14
   14001480f:	push   r15
   140014811:	sub    rsp,0x28
   140014815:	movsxd r11,ecx
   140014818:	mov    r14,r8
   14001481b:	movsxd r8,edx
   14001481e:	movsxd r12,r9d
   140014821:	lea    eax,[r11+0x1]
   140014825:	xorps  xmm5,xmm5
   140014828:	cdq    
   140014829:	xor    ebx,ebx
   14001482b:	mov    QWORD PTR [rsp+0x70],r11
   140014830:	idiv   r12d
   140014833:	lea    eax,[r12-0x1]
   140014838:	add    eax,r11d
   14001483b:	movsxd r10,edx
   14001483e:	cdq    
   14001483f:	mov    r10,QWORD PTR [r14+r10*8]
   140014843:	idiv   r12d
   140014846:	mov    rax,QWORD PTR [r14+r11*8]
   14001484a:	mov    r9,QWORD PTR [r10]
   14001484d:	mov    r10,r11
   140014850:	mov    rbp,QWORD PTR [rax]
   140014853:	movsd  xmm0,QWORD PTR [r9]
   140014858:	movsd  xmm1,QWORD PTR [r9+0x8]
   14001485e:	movsd  xmm2,QWORD PTR [rbp+0x8]
   140014863:	movsd  xmm3,QWORD PTR [rbp+0x0]
   140014868:	subsd  xmm0,xmm3
   14001486c:	subsd  xmm1,xmm2
   140014870:	movsxd rax,edx
   140014873:	mov    rcx,QWORD PTR [r14+rax*8]
   140014877:	mov    rdx,QWORD PTR [rcx]
   14001487a:	movsd  xmm4,QWORD PTR [rdx+0x8]
   14001487f:	subsd  xmm4,xmm2
   140014883:	mulsd  xmm4,xmm0
   140014887:	movsd  xmm0,QWORD PTR [rdx]
   14001488b:	subsd  xmm0,xmm3
   14001488f:	mulsd  xmm1,xmm0
   140014893:	subsd  xmm4,xmm1
   140014897:	comisd xmm4,xmm5
   14001489b:	ja     0x1400149a4
   1400148a1:	comisd xmm5,xmm4
   1400148a5:	mov    eax,ebx
   1400148a7:	setbe  al
   1400148aa:	add    eax,0x2
   1400148ad:	cmp    eax,0x1
   1400148b0:	je     0x1400149a4
   1400148b6:	movsd  xmm0,QWORD PTR [r9]
   1400148bb:	mov    rax,QWORD PTR [r14+r8*8]
   1400148bf:	movsd  xmm1,QWORD PTR [r9+0x8]
   1400148c5:	mov    r15,r8
   1400148c8:	mov    rsi,QWORD PTR [rax]
   1400148cb:	movsd  xmm4,xmm2
   1400148cf:	subsd  xmm0,QWORD PTR [rsi]
   1400148d3:	subsd  xmm4,QWORD PTR [rsi+0x8]
   1400148d8:	subsd  xmm1,QWORD PTR [rsi+0x8]
   1400148dd:	mulsd  xmm4,xmm0
   1400148e1:	movsd  xmm0,xmm3
   1400148e5:	subsd  xmm0,QWORD PTR [rsi]
   1400148e9:	mulsd  xmm1,xmm0
   1400148ed:	subsd  xmm4,xmm1
   1400148f1:	comisd xmm4,xmm5
   1400148f5:	jbe    0x1400148fc
   1400148f7:	lea    ecx,[rbx+0x1]
   1400148fa:	jmp    0x140014908
   1400148fc:	comisd xmm5,xmm4
   140014900:	mov    ecx,ebx
   140014902:	setbe  cl
   140014905:	add    ecx,0x2
   140014908:	cmp    ecx,0x2
   14001490b:	mov    eax,ebx
   14001490d:	sete   al
   140014910:	test   eax,eax
   140014912:	je     0x140014a4f
   140014918:	mov    QWORD PTR [rsp+0x78],rdi
   14001491d:	mov    QWORD PTR [rsp+0x20],r13
   140014922:	test   r12d,r12d
   140014925:	jle    0x140014987
   140014927:	mov    edi,0x1
   14001492c:	nop    DWORD PTR [rax+0x0]
   140014930:	mov    eax,edi
   140014932:	cdq    
   140014933:	idiv   r12d
   140014936:	cmp    rbx,r10
   140014939:	je     0x14001497d
   14001493b:	cmp    edx,r11d
   14001493e:	je     0x14001497d
   140014940:	cmp    rbx,r15
   140014943:	je     0x14001497d
   140014945:	cmp    edx,r8d
   140014948:	je     0x14001497d
   14001494a:	mov    r8,QWORD PTR [r14+rbx*8]
   14001494e:	movsxd rax,edx
   140014951:	mov    rcx,rbp
   140014954:	mov    r9,QWORD PTR [r14+rax*8]
   140014958:	mov    r8,QWORD PTR [r8]
   14001495b:	mov    rdx,rsi
   14001495e:	mov    r9,QWORD PTR [r9]
   140014961:	call   0x140014600
   140014966:	test   eax,eax
   140014968:	jne    0x140014a5f
   14001496e:	mov    r8d,DWORD PTR [rsp+0x68]
   140014973:	mov    r11d,DWORD PTR [rsp+0x60]
   140014978:	mov    r10,QWORD PTR [rsp+0x70]
   14001497d:	inc    rbx
   140014980:	inc    edi
   140014982:	cmp    rbx,r12
   140014985:	jl     0x140014930
   140014987:	mov    eax,0x1
   14001498c:	mov    rdi,QWORD PTR [rsp+0x78]
   140014991:	mov    r13,QWORD PTR [rsp+0x20]
   140014996:	add    rsp,0x28
   14001499a:	pop    r15
   14001499c:	pop    r14
   14001499e:	pop    r12
   1400149a0:	pop    rsi
   1400149a1:	pop    rbp
   1400149a2:	pop    rbx
   1400149a3:	ret    
   1400149a4:	movsd  xmm0,QWORD PTR [rdx]
   1400149a8:	mov    rax,QWORD PTR [r14+r8*8]
   1400149ac:	movsd  xmm4,QWORD PTR [rbp+0x8]
   1400149b1:	mov    r15,r8
   1400149b4:	mov    rsi,QWORD PTR [rax]
   1400149b7:	movsd  xmm1,QWORD PTR [rdx+0x8]
   1400149bc:	movsd  xmm2,QWORD PTR [rsi+0x8]
   1400149c1:	movsd  xmm3,QWORD PTR [rsi]
   1400149c5:	subsd  xmm0,xmm3
   1400149c9:	subsd  xmm4,xmm2
   1400149cd:	subsd  xmm1,xmm2
   1400149d1:	mulsd  xmm4,xmm0
   1400149d5:	movsd  xmm0,QWORD PTR [rbp+0x0]
   1400149da:	subsd  xmm0,xmm3
   1400149de:	mulsd  xmm1,xmm0
   1400149e2:	subsd  xmm4,xmm1
   1400149e6:	comisd xmm4,xmm5
   1400149ea:	ja     0x1400149fd
   1400149ec:	comisd xmm5,xmm4
   1400149f0:	mov    eax,ebx
   1400149f2:	setbe  al
   1400149f5:	add    eax,0x2
   1400149f8:	cmp    eax,0x1
   1400149fb:	jne    0x140014a4f
   1400149fd:	movsd  xmm0,QWORD PTR [r9]
   140014a02:	movsd  xmm1,QWORD PTR [r9+0x8]
   140014a08:	movsd  xmm4,xmm2
   140014a0c:	subsd  xmm0,QWORD PTR [rbp+0x0]
   140014a11:	subsd  xmm4,QWORD PTR [rbp+0x8]
   140014a16:	subsd  xmm1,QWORD PTR [rbp+0x8]
   140014a1b:	mulsd  xmm4,xmm0
   140014a1f:	movsd  xmm0,xmm3
   140014a23:	subsd  xmm0,QWORD PTR [rbp+0x0]
   140014a28:	mulsd  xmm1,xmm0
   140014a2c:	subsd  xmm4,xmm1
   140014a30:	comisd xmm4,xmm5
   140014a34:	ja     0x140014918
   140014a3a:	comisd xmm5,xmm4
   140014a3e:	mov    eax,ebx
   140014a40:	setbe  al
   140014a43:	add    eax,0x2
   140014a46:	cmp    eax,0x1
   140014a49:	je     0x140014918
   140014a4f:	xor    eax,eax
   140014a51:	add    rsp,0x28
   140014a55:	pop    r15
   140014a57:	pop    r14
   140014a59:	pop    r12
   140014a5b:	pop    rsi
   140014a5c:	pop    rbp
   140014a5d:	pop    rbx
   140014a5e:	ret    
   140014a5f:	xor    eax,eax
   140014a61:	jmp    0x14001498c
   140014a66:	int3   
   140014a67:	int3   
   140014a68:	int3   
   140014a69:	int3   
   140014a6a:	int3   
   140014a6b:	int3   
   140014a6c:	int3   
   140014a6d:	int3   
   140014a6e:	int3   
   140014a6f:	int3   
   140014a70:	mov    QWORD PTR [rsp+0x8],rbx
   140014a75:	mov    QWORD PTR [rsp+0x10],rsi
   140014a7a:	push   rdi
   140014a7b:	sub    rsp,0x20
   140014a7f:	mov    r9d,DWORD PTR [rip+0x3ed26]        # 0x1400537ac
   140014a86:	mov    rsi,rcx
   140014a89:	mov    ecx,DWORD PTR [rip+0x3ed19]        # 0x1400537a8
   140014a8f:	mov    rbx,r8
   140014a92:	mov    rdi,rdx
   140014a95:	cmp    r9d,ecx
   140014a98:	jl     0x140014aa9
   140014a9a:	add    ecx,0x14
   140014a9d:	call   0x140014530
   140014aa2:	mov    r9d,DWORD PTR [rip+0x3ed03]        # 0x1400537ac
   140014aa9:	movsxd rax,r9d
   140014aac:	inc    r9d
   140014aaf:	mov    DWORD PTR [rip+0x3ecf6],r9d        # 0x1400537ac
   140014ab6:	imul   r8,rax,0x68
   140014aba:	add    r8,QWORD PTR [rip+0x3ecdf]        # 0x1400537a0
   140014ac1:	xor    eax,eax
   140014ac3:	mov    DWORD PTR [r8],eax
   140014ac6:	mov    QWORD PTR [r8+0x8],rsi
   140014aca:	mov    QWORD PTR [r8+0x30],rbx
   140014ace:	mov    QWORD PTR [r8+0x48],rbx
   140014ad2:	mov    rbx,QWORD PTR [rsp+0x30]
   140014ad7:	mov    QWORD PTR [r8+0x50],rsi
   140014adb:	mov    rsi,QWORD PTR [rsp+0x38]
   140014ae0:	mov    QWORD PTR [r8+0x10],rdi
   140014ae4:	mov    QWORD PTR [r8+0x20],rax
   140014ae8:	mov    QWORD PTR [r8+0x28],rdi
   140014aec:	mov    QWORD PTR [r8+0x40],rax
   140014af0:	mov    QWORD PTR [r8+0x60],rax
   140014af4:	mov    QWORD PTR [r8+0x18],r8
   140014af8:	mov    QWORD PTR [r8+0x38],r8
   140014afc:	mov    QWORD PTR [r8+0x58],r8
   140014b00:	add    rsp,0x20
   140014b04:	pop    rdi
   140014b05:	ret    
   140014b06:	int3   
   140014b07:	int3   
   140014b08:	int3   
   140014b09:	int3   
   140014b0a:	int3   
   140014b0b:	int3   
   140014b0c:	int3   
   140014b0d:	int3   
   140014b0e:	int3   
   140014b0f:	int3   
   140014b10:	mov    QWORD PTR [rsp+0x18],rbp
   140014b15:	push   rsi
   140014b16:	sub    rsp,0x20
   140014b1a:	movsxd rax,ecx
   140014b1d:	mov    ebp,edx
   140014b1f:	imul   rsi,rax,0x68
   140014b23:	mov    rax,QWORD PTR [rip+0x3ec76]        # 0x1400537a0
   140014b2a:	cmp    DWORD PTR [rsi+rax*1],0x0
   140014b2e:	je     0x140014b3d
   140014b30:	xor    eax,eax
   140014b32:	mov    rbp,QWORD PTR [rsp+0x40]
   140014b37:	add    rsp,0x20
   140014b3b:	pop    rsi
   140014b3c:	ret    
   140014b3d:	mov    DWORD PTR [rsi+rax*1],0x1
   140014b44:	cmp    ecx,edx
   140014b46:	jne    0x140014b58
   140014b48:	mov    eax,0x1
   140014b4d:	mov    rbp,QWORD PTR [rsp+0x40]
   140014b52:	add    rsp,0x20
   140014b56:	pop    rsi
   140014b57:	ret    
   140014b58:	mov    QWORD PTR [rsp+0x30],rbx
   140014b5d:	mov    QWORD PTR [rsp+0x38],rdi
   140014b62:	movabs rdx,0x4ec4ec4ec4ec4ec5
   140014b6c:	xor    edi,edi
   140014b6e:	mov    rbx,rsi
   140014b71:	mov    rcx,QWORD PTR [rbx+rax*1+0x20]
   140014b76:	test   rcx,rcx
   140014b79:	je     0x140014bb1
   140014b7b:	sub    rcx,rax
   140014b7e:	mov    rax,rdx
   140014b81:	imul   rcx
   140014b84:	mov    rcx,rdx
   140014b87:	mov    edx,ebp
   140014b89:	sar    rcx,0x5
   140014b8d:	mov    rax,rcx
   140014b90:	shr    rax,0x3f
   140014b94:	add    rcx,rax
   140014b97:	call   0x140014b10
   140014b9c:	test   eax,eax
   140014b9e:	jne    0x140014bdc
   140014ba0:	mov    rax,QWORD PTR [rip+0x3ebf9]        # 0x1400537a0
   140014ba7:	movabs rdx,0x4ec4ec4ec4ec4ec5
   140014bb1:	inc    rdi
   140014bb4:	add    rbx,0x20
   140014bb8:	cmp    rdi,0x3
   140014bbc:	jl     0x140014b71
   140014bbe:	mov    DWORD PTR [rsi+rax*1],0x0
   140014bc5:	xor    eax,eax
   140014bc7:	mov    rbx,QWORD PTR [rsp+0x30]
   140014bcc:	mov    rdi,QWORD PTR [rsp+0x38]
   140014bd1:	mov    rbp,QWORD PTR [rsp+0x40]
   140014bd6:	add    rsp,0x20
   140014bda:	pop    rsi
   140014bdb:	ret    
   140014bdc:	mov    eax,0x1
   140014be1:	jmp    0x140014bc7
   140014be3:	int3   
   140014be4:	int3   
   140014be5:	int3   
   140014be6:	int3   
   140014be7:	int3   
   140014be8:	int3   
   140014be9:	int3   
   140014bea:	int3   
   140014beb:	int3   
   140014bec:	int3   
   140014bed:	int3   
   140014bee:	int3   
   140014bef:	int3   
   140014bf0:	sub    rsp,0x28
   140014bf4:	mov    r10,QWORD PTR [rip+0x3eba5]        # 0x1400537a0
   140014bfb:	movsxd rax,ecx
   140014bfe:	movaps XMMWORD PTR [rsp+0x10],xmm6
   140014c03:	movsd  xmm6,QWORD PTR [rdx]
   140014c07:	movaps XMMWORD PTR [rsp],xmm7
   140014c0b:	xorps  xmm5,xmm5
   140014c0e:	movsd  xmm7,QWORD PTR [rdx+0x8]
   140014c13:	imul   r9,rax,0x68
   140014c17:	movaps xmm0,xmm6
   140014c1a:	xor    r8d,r8d
   140014c1d:	mov    rax,QWORD PTR [r9+r10*1+0x10]
   140014c22:	mov    rcx,QWORD PTR [rax]
   140014c25:	mov    rax,QWORD PTR [r9+r10*1+0x8]
   140014c2a:	mov    rdx,QWORD PTR [rax]
   140014c2d:	subsd  xmm0,QWORD PTR [rcx]
   140014c31:	movsd  xmm4,QWORD PTR [rdx+0x8]
   140014c36:	movsd  xmm1,QWORD PTR [rdx]
   140014c3a:	subsd  xmm4,QWORD PTR [rcx+0x8]
   140014c3f:	subsd  xmm1,QWORD PTR [rcx]
   140014c43:	mulsd  xmm4,xmm0
   140014c47:	movaps xmm0,xmm7
   140014c4a:	subsd  xmm0,QWORD PTR [rcx+0x8]
   140014c4f:	mulsd  xmm1,xmm0
   140014c53:	subsd  xmm4,xmm1
   140014c57:	comisd xmm4,xmm5
   140014c5b:	ja     0x140014c6e
   140014c5d:	xor    eax,eax
   140014c5f:	comisd xmm5,xmm4
   140014c63:	setbe  al
   140014c66:	add    eax,0x2
   140014c69:	cmp    eax,0x2
   140014c6c:	je     0x140014c74
   140014c6e:	mov    r8d,0x1
   140014c74:	mov    rax,QWORD PTR [r9+r10*1+0x30]
   140014c79:	movaps xmm0,xmm6
   140014c7c:	mov    rcx,QWORD PTR [rax]
   140014c7f:	mov    rax,QWORD PTR [r9+r10*1+0x28]
   140014c84:	mov    rdx,QWORD PTR [rax]
   140014c87:	subsd  xmm0,QWORD PTR [rcx]
   140014c8b:	movsd  xmm4,QWORD PTR [rdx+0x8]
   140014c90:	movsd  xmm1,QWORD PTR [rdx]
   140014c94:	subsd  xmm4,QWORD PTR [rcx+0x8]
   140014c99:	subsd  xmm1,QWORD PTR [rcx]
   140014c9d:	mulsd  xmm4,xmm0
   140014ca1:	movaps xmm0,xmm7
   140014ca4:	subsd  xmm0,QWORD PTR [rcx+0x8]
   140014ca9:	mulsd  xmm1,xmm0
   140014cad:	subsd  xmm4,xmm1
   140014cb1:	comisd xmm4,xmm5
   140014cb5:	ja     0x140014cc8
   140014cb7:	xor    eax,eax
   140014cb9:	comisd xmm5,xmm4
   140014cbd:	setbe  al
   140014cc0:	add    eax,0x2
   140014cc3:	cmp    eax,0x2
   140014cc6:	je     0x140014ccb
   140014cc8:	inc    r8d
   140014ccb:	mov    rax,QWORD PTR [r9+r10*1+0x50]
   140014cd0:	mov    rcx,QWORD PTR [rax]
   140014cd3:	mov    rax,QWORD PTR [r9+r10*1+0x48]
   140014cd8:	mov    rdx,QWORD PTR [rax]
   140014cdb:	subsd  xmm6,QWORD PTR [rcx]
   140014cdf:	subsd  xmm7,QWORD PTR [rcx+0x8]
   140014ce4:	movsd  xmm3,QWORD PTR [rdx+0x8]
   140014ce9:	movsd  xmm0,QWORD PTR [rdx]
   140014ced:	subsd  xmm3,QWORD PTR [rcx+0x8]
   140014cf2:	subsd  xmm0,QWORD PTR [rcx]
   140014cf6:	mulsd  xmm3,xmm6
   140014cfa:	mulsd  xmm0,xmm7
   140014cfe:	subsd  xmm3,xmm0
   140014d02:	comisd xmm3,xmm5
   140014d06:	ja     0x140014d19
   140014d08:	xor    ecx,ecx
   140014d0a:	comisd xmm5,xmm3
   140014d0e:	setbe  cl
   140014d11:	add    ecx,0x2
   140014d14:	cmp    ecx,0x2
   140014d17:	je     0x140014d1c
   140014d19:	inc    r8d
   140014d1c:	cmp    r8d,0x3
   140014d20:	je     0x140014d37
   140014d22:	test   r8d,r8d
   140014d25:	je     0x140014d37
   140014d27:	xor    eax,eax
   140014d29:	movaps xmm6,XMMWORD PTR [rsp+0x10]
   140014d2e:	movaps xmm7,XMMWORD PTR [rsp]
   140014d32:	add    rsp,0x28
   140014d36:	ret    
   140014d37:	movaps xmm6,XMMWORD PTR [rsp+0x10]
   140014d3c:	movaps xmm7,XMMWORD PTR [rsp]
   140014d40:	mov    eax,0x1
   140014d45:	add    rsp,0x28
   140014d49:	ret    
   140014d4a:	int3   
   140014d4b:	int3   
   140014d4c:	int3   
   140014d4d:	int3   
   140014d4e:	int3   
   140014d4f:	int3   
   140014d50:	cmp    ecx,0x1
   140014d53:	jne    0x140014d5c
   140014d55:	mov    DWORD PTR [rip+0x3ea65],edx        # 0x1400537c0
   140014d5b:	ret    
   140014d5c:	mov    DWORD PTR [rip+0x3ea5a],edx        # 0x1400537bc
   140014d62:	ret    
   140014d63:	int3   
   140014d64:	int3   
   140014d65:	int3   
   140014d66:	int3   
   140014d67:	int3   
   140014d68:	int3   
   140014d69:	int3   
   140014d6a:	int3   
   140014d6b:	int3   
   140014d6c:	int3   
   140014d6d:	int3   
   140014d6e:	int3   
   140014d6f:	int3   
   140014d70:	mov    QWORD PTR [rsp+0x8],rbx
   140014d75:	mov    QWORD PTR [rsp+0x10],rbp
   140014d7a:	mov    QWORD PTR [rsp+0x18],rsi
   140014d7f:	push   rdi
   140014d80:	push   r14
   140014d82:	push   r15
   140014d84:	sub    rsp,0x20
   140014d88:	mov    ebx,edx
   140014d8a:	mov    r14,rcx
   140014d8d:	cmp    edx,0x3
   140014d90:	jle    0x140014df9
   140014d92:	xor    edi,edi
   140014d94:	xor    esi,esi
   140014d96:	cmp    edi,ebx
   140014d98:	jge    0x140014e21
   140014d9e:	lea    eax,[rdi+0x1]
   140014da1:	mov    r9d,ebx
   140014da4:	mov    r8,r14
   140014da7:	cdq    
   140014da8:	mov    ecx,edi
   140014daa:	idiv   ebx
   140014dac:	lea    eax,[rdi+0x2]
   140014daf:	movsxd rbp,edx
   140014db2:	cdq    
   140014db3:	idiv   ebx
   140014db5:	movsxd r15,edx
   140014db8:	mov    edx,r15d
   140014dbb:	call   0x140014800
   140014dc0:	test   eax,eax
   140014dc2:	jne    0x140014dcb
   140014dc4:	inc    edi
   140014dc6:	inc    rsi
   140014dc9:	jmp    0x140014d96
   140014dcb:	mov    rdx,QWORD PTR [r14+rbp*8]
   140014dcf:	mov    r8,QWORD PTR [r14+r15*8]
   140014dd3:	mov    rcx,QWORD PTR [r14+rsi*8]
   140014dd7:	lea    rdi,[r14+rbp*8]
   140014ddb:	call   0x140014a70
   140014de0:	dec    ebx
   140014de2:	movsxd rcx,ebx
   140014de5:	cmp    rbp,rcx
   140014de8:	jge    0x140014df4
   140014dea:	lea    rsi,[rdi+0x8]
   140014dee:	sub    rcx,rbp
   140014df1:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140014df4:	cmp    ebx,0x3
   140014df7:	jg     0x140014d92
   140014df9:	mov    r8,QWORD PTR [r14+0x10]
   140014dfd:	mov    rdx,QWORD PTR [r14+0x8]
   140014e01:	mov    rcx,QWORD PTR [r14]
   140014e04:	mov    rbx,QWORD PTR [rsp+0x40]
   140014e09:	mov    rbp,QWORD PTR [rsp+0x48]
   140014e0e:	mov    rsi,QWORD PTR [rsp+0x50]
   140014e13:	add    rsp,0x20
   140014e17:	pop    r15
   140014e19:	pop    r14
   140014e1b:	pop    rdi
   140014e1c:	jmp    0x140014a70
   140014e21:	call   QWORD PTR [rip+0x28279]        # 0x14003d0a0
   140014e27:	int3   
   140014e28:	int3   
   140014e29:	int3   
   140014e2a:	int3   
   140014e2b:	int3   
   140014e2c:	int3   
   140014e2d:	int3   
   140014e2e:	int3   
   140014e2f:	int3   
   140014e30:	mov    QWORD PTR [rsp+0x18],rbp
   140014e35:	mov    QWORD PTR [rsp+0x20],rsi
   140014e3a:	push   rdi
   140014e3b:	push   r14
   140014e3d:	push   r15
   140014e3f:	sub    rsp,0x20
   140014e43:	mov    esi,ecx
   140014e45:	mov    QWORD PTR [rsp+0x40],rbx
   140014e4a:	lea    r15d,[rsi+rdx*1]
   140014e4e:	movsxd rcx,r15d
   140014e51:	shl    rcx,0x3
   140014e55:	call   QWORD PTR [rip+0x2830d]        # 0x14003d168
   140014e5b:	xor    ebx,ebx
   140014e5d:	movsxd rbp,esi
   140014e60:	mov    r14,rax
   140014e63:	test   esi,esi
   140014e65:	jle    0x140014e9d
   140014e67:	mov    QWORD PTR [rsp+0x48],r12
   140014e6c:	lea    r12,[rbp*8+0x0]
   140014e74:	mov    rcx,r12
   140014e77:	call   QWORD PTR [rip+0x282eb]        # 0x14003d168
   140014e7d:	mov    QWORD PTR [r14+rbx*8],rax
   140014e81:	test   esi,esi
   140014e83:	jle    0x140014e90
   140014e85:	mov    rdi,rax
   140014e88:	mov    rcx,rsi
   140014e8b:	xor    eax,eax
   140014e8d:	rep stos QWORD PTR es:[rdi],rax
   140014e90:	inc    rbx
   140014e93:	cmp    rbx,rbp
   140014e96:	jl     0x140014e74
   140014e98:	mov    r12,QWORD PTR [rsp+0x48]
   140014e9d:	mov    rbx,QWORD PTR [rsp+0x40]
   140014ea2:	cmp    esi,r15d
   140014ea5:	jge    0x140014eb6
   140014ea7:	sub    r15d,esi
   140014eaa:	lea    rdi,[r14+rbp*8]
   140014eae:	xor    eax,eax
   140014eb0:	movsxd rcx,r15d
   140014eb3:	rep stos QWORD PTR es:[rdi],rax
   140014eb6:	mov    rbp,QWORD PTR [rsp+0x50]
   140014ebb:	mov    rsi,QWORD PTR [rsp+0x58]
   140014ec0:	mov    rax,r14
   140014ec3:	add    rsp,0x20
   140014ec7:	pop    r15
   140014ec9:	pop    r14
   140014ecb:	pop    rdi
   140014ecc:	ret    
   140014ecd:	int3   
   140014ece:	int3   
   140014ecf:	int3   
   140014ed0:	movsd  xmm1,QWORD PTR [r8]
   140014ed5:	movsd  xmm0,QWORD PTR [rcx+0x8]
   140014eda:	movsd  xmm2,QWORD PTR [r8+0x8]
   140014ee0:	subsd  xmm1,QWORD PTR [rdx]
   140014ee4:	subsd  xmm0,QWORD PTR [rdx+0x8]
   140014ee9:	subsd  xmm2,QWORD PTR [rdx+0x8]
   140014eee:	mulsd  xmm0,xmm1
   140014ef2:	movsd  xmm1,QWORD PTR [rcx]
   140014ef6:	subsd  xmm1,QWORD PTR [rdx]
   140014efa:	mulsd  xmm2,xmm1
   140014efe:	subsd  xmm0,xmm2
   140014f02:	ret    
   140014f03:	int3   
   140014f04:	int3   
   140014f05:	int3   
   140014f06:	int3   
   140014f07:	int3   
   140014f08:	int3   
   140014f09:	int3   
   140014f0a:	int3   
   140014f0b:	int3   
   140014f0c:	int3   
   140014f0d:	int3   
   140014f0e:	int3   
   140014f0f:	int3   
   140014f10:	mov    rax,rsp
   140014f13:	mov    QWORD PTR [rax+0x10],rbx
   140014f17:	mov    QWORD PTR [rax+0x18],rdi
   140014f1b:	mov    QWORD PTR [rax+0x20],r12
   140014f1f:	push   rbp
   140014f20:	push   r14
   140014f22:	push   r15
   140014f24:	lea    rbp,[rax-0xe8]
   140014f2b:	sub    rsp,0x1d0
   140014f32:	mov    r15,QWORD PTR [rbp+0x120]
   140014f39:	mov    r14,QWORD PTR [rbp+0x118]
   140014f40:	movaps XMMWORD PTR [rax-0x28],xmm6
   140014f44:	movaps XMMWORD PTR [rax-0x38],xmm7
   140014f48:	movaps XMMWORD PTR [rax-0x48],xmm8
   140014f4d:	movaps XMMWORD PTR [rax-0x58],xmm9
   140014f52:	xor    r10d,r10d
   140014f55:	movsxd rbx,r9d
   140014f58:	mov    rdi,rdx
   140014f5b:	mov    r12,rcx
   140014f5e:	movsxd r11,r8d
   140014f61:	movaps XMMWORD PTR [rax-0x68],xmm10
   140014f66:	movaps XMMWORD PTR [rax-0x78],xmm11
   140014f6b:	movaps XMMWORD PTR [rax-0x88],xmm12
   140014f73:	movaps XMMWORD PTR [rax-0x98],xmm13
   140014f7b:	movaps XMMWORD PTR [rax-0xa8],xmm14
   140014f83:	movaps XMMWORD PTR [rax-0xb8],xmm15
   140014f8b:	test   r8d,r8d
   140014f8e:	jle    0x1400153cc
   140014f94:	movups xmm15,XMMWORD PTR [rdx]
   140014f98:	movups xmm14,XMMWORD PTR [rcx]
   140014f9c:	movsd  xmm13,QWORD PTR [rip+0x2936b]        # 0x14003e310
   140014fa5:	mov    r9,r14
   140014fa8:	movaps xmm11,xmm15
   140014fac:	movaps xmm3,xmm14
   140014fb0:	movaps xmm12,xmm15
   140014fb4:	shufps xmm11,xmm15,0xaa
   140014fb9:	shufps xmm3,xmm14,0xaa
   140014fbe:	shufps xmm12,xmm15,0xff
   140014fc3:	movaps xmm4,xmm14
   140014fc7:	movaps xmm10,xmm15
   140014fcb:	movaps xmm2,xmm14
   140014fcf:	movsd  xmm9,QWORD PTR [rip+0x29340]        # 0x14003e318
   140014fd8:	movss  xmm0,xmm3
   140014fdc:	movss  xmm1,xmm11
   140014fe1:	unpcklps xmm1,xmm12
   140014fe5:	shufps xmm4,xmm14,0xff
   140014fea:	shufps xmm10,xmm15,0x55
   140014fef:	movaps XMMWORD PTR [rbp+0x20],xmm11
   140014ff4:	movaps XMMWORD PTR [rbp-0x10],xmm12
   140014ff9:	movaps XMMWORD PTR [rsp+0x40],xmm3
   140014ffe:	movsd  QWORD PTR [rbp+0x0],xmm1
   140015003:	movaps XMMWORD PTR [rsp+0x60],xmm10
   140015009:	movaps XMMWORD PTR [rsp+0x50],xmm4
   14001500e:	unpcklps xmm0,xmm4
   140015011:	shufps xmm2,xmm14,0x55
   140015016:	movaps XMMWORD PTR [rsp+0x70],xmm2
   14001501b:	subsd  xmm0,xmm1
   14001501f:	movss  xmm1,xmm15
   140015024:	unpcklps xmm1,xmm10
   140015028:	movsd  QWORD PTR [rbp-0x30],xmm0
   14001502d:	movss  xmm0,xmm14
   140015032:	movsd  QWORD PTR [rbp+0x10],xmm1
   140015037:	unpcklps xmm0,xmm2
   14001503a:	subsd  xmm0,xmm1
   14001503e:	movsd  QWORD PTR [rbp-0x20],xmm0
   140015043:	nop    DWORD PTR [rax+0x0]
   140015047:	nop    WORD PTR [rax+rax*1+0x0]
   140015050:	movups xmm5,XMMWORD PTR [r9]
   140015054:	movsxd rax,DWORD PTR [r15+r10*4]
   140015058:	add    rax,rax
   14001505b:	movups xmm0,XMMWORD PTR [r14+rax*8]
   140015060:	movss  xmm1,xmm5
   140015064:	movaps xmm7,xmm5
   140015067:	movaps xmm6,xmm5
   14001506a:	movaps xmm8,xmm5
   14001506e:	shufps xmm7,xmm5,0xaa
   140015072:	shufps xmm6,xmm5,0x55
   140015076:	shufps xmm8,xmm5,0xff
   14001507b:	movaps XMMWORD PTR [rbp-0x70],xmm0
   14001507f:	movss  xmm0,xmm7
   140015083:	unpcklps xmm1,xmm6
   140015086:	unpcklps xmm0,xmm8
   14001508a:	subsd  xmm1,QWORD PTR [rbp+0x10]
   14001508f:	subsd  xmm0,QWORD PTR [rbp+0x0]
   140015094:	mulsd  xmm0,QWORD PTR [rbp-0x20]
   140015099:	mulsd  xmm1,QWORD PTR [rbp-0x30]
   14001509e:	subsd  xmm1,xmm0
   1400150a2:	comisd xmm1,xmm13
   1400150a7:	jbe    0x1400150b4
   1400150a9:	mov    r8d,0x1
   1400150af:	jmp    0x140015163
   1400150b4:	xor    r8d,r8d
   1400150b7:	comisd xmm9,xmm1
   1400150bc:	setbe  r8b
   1400150c0:	dec    r8d
   1400150c3:	jne    0x140015163
   1400150c9:	movss  xmm1,xmm14
   1400150ce:	movss  xmm0,xmm15
   1400150d3:	movss  DWORD PTR [rsp+0x30],xmm5
   1400150d9:	unpcklps xmm1,xmm2
   1400150dc:	unpcklps xmm0,xmm10
   1400150e0:	ucomisd xmm1,xmm0
   1400150e4:	movss  DWORD PTR [rsp+0x34],xmm6
   1400150ea:	movss  DWORD PTR [rsp+0x38],xmm7
   1400150f0:	movss  DWORD PTR [rsp+0x3c],xmm8
   1400150f7:	movss  DWORD PTR [rbp-0x78],xmm11
   1400150fd:	movss  DWORD PTR [rbp-0x74],xmm12
   140015103:	movss  DWORD PTR [rbp-0x58],xmm3
   140015108:	movss  DWORD PTR [rbp-0x54],xmm4
   14001510d:	jp     0x14001513d
   14001510f:	jne    0x14001513d
   140015111:	movsd  xmm2,QWORD PTR [rsp+0x38]
   140015117:	movsd  xmm0,QWORD PTR [rbp-0x58]
   14001511c:	movsd  xmm3,QWORD PTR [rbp-0x78]
   140015121:	comisd xmm2,xmm0
   140015125:	jbe    0x140015131
   140015127:	comisd xmm3,xmm2
   14001512b:	ja     0x1400153c8
   140015131:	comisd xmm2,xmm3
   140015135:	jbe    0x140015163
   140015137:	comisd xmm0,xmm2
   14001513b:	jmp    0x14001515d
   14001513d:	movsd  xmm2,QWORD PTR [rsp+0x30]
   140015143:	comisd xmm2,xmm1
   140015147:	jbe    0x140015153
   140015149:	comisd xmm0,xmm2
   14001514d:	ja     0x1400153c8
   140015153:	comisd xmm2,xmm0
   140015157:	jbe    0x140015163
   140015159:	comisd xmm1,xmm2
   14001515d:	ja     0x1400153c8
   140015163:	movss  xmm10,DWORD PTR [rbp-0x70]
   140015169:	movss  xmm0,DWORD PTR [rsp+0x40]
   14001516f:	movss  xmm2,DWORD PTR [rbp+0x20]
   140015174:	unpcklps xmm0,XMMWORD PTR [rsp+0x50]
   140015179:	unpcklps xmm2,XMMWORD PTR [rbp-0x10]
   14001517d:	movss  xmm11,DWORD PTR [rbp-0x6c]
   140015183:	movss  xmm12,DWORD PTR [rbp-0x68]
   140015189:	movss  xmm13,DWORD PTR [rbp-0x64]
   14001518f:	subsd  xmm0,xmm2
   140015193:	movss  xmm3,xmm15
   140015198:	movss  xmm4,xmm10
   14001519d:	unpcklps xmm3,XMMWORD PTR [rsp+0x60]
   1400151a2:	unpcklps xmm4,xmm11
   1400151a6:	subsd  xmm4,xmm3
   1400151aa:	movss  xmm1,xmm14
   1400151af:	unpcklps xmm1,XMMWORD PTR [rsp+0x70]
   1400151b4:	mulsd  xmm4,xmm0
   1400151b8:	movss  xmm0,xmm12
   1400151bd:	subsd  xmm1,xmm3
   1400151c1:	unpcklps xmm0,xmm13
   1400151c5:	subsd  xmm0,xmm2
   1400151c9:	mulsd  xmm1,xmm0
   1400151cd:	subsd  xmm4,xmm1
   1400151d1:	comisd xmm4,QWORD PTR [rip+0x29137]        # 0x14003e310
   1400151d9:	jbe    0x1400151e5
   1400151db:	mov    ecx,0x1
   1400151e0:	jmp    0x1400152a7
   1400151e5:	xor    ecx,ecx
   1400151e7:	comisd xmm9,xmm4
   1400151ec:	setbe  cl
   1400151ef:	dec    ecx
   1400151f1:	jne    0x1400152a7
   1400151f7:	movaps xmm0,XMMWORD PTR [rbp+0x20]
   1400151fb:	movss  xmm1,xmm14
   140015200:	movss  DWORD PTR [rsp+0x20],xmm10
   140015207:	movss  DWORD PTR [rbp-0x38],xmm0
   14001520c:	movss  DWORD PTR [rsp+0x24],xmm11
   140015213:	movss  DWORD PTR [rsp+0x28],xmm12
   14001521a:	unpcklps xmm1,XMMWORD PTR [rsp+0x70]
   14001521f:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140015223:	movss  DWORD PTR [rbp-0x34],xmm0
   140015228:	movss  DWORD PTR [rsp+0x2c],xmm13
   14001522f:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140015234:	movss  DWORD PTR [rbp-0x48],xmm0
   140015239:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14001523e:	movss  DWORD PTR [rbp-0x44],xmm0
   140015243:	movss  xmm0,xmm15
   140015248:	unpcklps xmm0,XMMWORD PTR [rsp+0x60]
   14001524d:	ucomisd xmm1,xmm0
   140015251:	jp     0x140015281
   140015253:	jne    0x140015281
   140015255:	movsd  xmm2,QWORD PTR [rsp+0x28]
   14001525b:	movsd  xmm0,QWORD PTR [rbp-0x48]
   140015260:	movsd  xmm3,QWORD PTR [rbp-0x38]
   140015265:	comisd xmm2,xmm0
   140015269:	jbe    0x140015275
   14001526b:	comisd xmm3,xmm2
   14001526f:	ja     0x1400153c8
   140015275:	comisd xmm2,xmm3
   140015279:	jbe    0x1400152a7
   14001527b:	comisd xmm0,xmm2
   14001527f:	jmp    0x1400152a1
   140015281:	movsd  xmm2,QWORD PTR [rsp+0x20]
   140015287:	comisd xmm2,xmm1
   14001528b:	jbe    0x140015297
   14001528d:	comisd xmm0,xmm2
   140015291:	ja     0x1400153c8
   140015297:	comisd xmm2,xmm0
   14001529b:	jbe    0x1400152a7
   14001529d:	comisd xmm1,xmm2
   1400152a1:	ja     0x1400153c8
   1400152a7:	movss  xmm0,xmm7
   1400152ab:	movss  xmm4,xmm14
   1400152b0:	movss  xmm3,xmm10
   1400152b5:	unpcklps xmm4,XMMWORD PTR [rsp+0x70]
   1400152ba:	unpcklps xmm0,xmm8
   1400152be:	unpcklps xmm3,xmm11
   1400152c2:	subsd  xmm4,xmm3
   1400152c6:	movss  xmm2,xmm12
   1400152cb:	movss  xmm1,xmm5
   1400152cf:	unpcklps xmm2,xmm13
   1400152d3:	unpcklps xmm1,xmm6
   1400152d6:	subsd  xmm0,xmm2
   1400152da:	subsd  xmm1,xmm3
   1400152de:	mulsd  xmm4,xmm0
   1400152e2:	movss  xmm0,DWORD PTR [rsp+0x40]
   1400152e8:	unpcklps xmm0,XMMWORD PTR [rsp+0x50]
   1400152ed:	subsd  xmm0,xmm2
   1400152f1:	mulsd  xmm1,xmm0
   1400152f5:	subsd  xmm4,xmm1
   1400152f9:	comisd xmm4,QWORD PTR [rip+0x2900f]        # 0x14003e310
   140015301:	jbe    0x14001530a
   140015303:	mov    edx,0x1
   140015308:	jmp    0x140015316
   14001530a:	xor    edx,edx
   14001530c:	comisd xmm9,xmm4
   140015311:	setbe  dl
   140015314:	dec    edx
   140015316:	movss  xmm2,xmm12
   14001531b:	movaps xmm12,XMMWORD PTR [rbp-0x10]
   140015320:	movss  xmm4,xmm15
   140015325:	movss  xmm3,xmm10
   14001532a:	movss  xmm0,xmm7
   14001532e:	movss  xmm1,xmm5
   140015332:	unpcklps xmm4,XMMWORD PTR [rsp+0x60]
   140015337:	unpcklps xmm2,xmm13
   14001533b:	unpcklps xmm0,xmm8
   14001533f:	unpcklps xmm3,xmm11
   140015343:	unpcklps xmm1,xmm6
   140015346:	movsd  xmm13,QWORD PTR [rip+0x28fc1]        # 0x14003e310
   14001534f:	movaps xmm11,XMMWORD PTR [rbp+0x20]
   140015354:	subsd  xmm0,xmm2
   140015358:	subsd  xmm4,xmm3
   14001535c:	subsd  xmm1,xmm3
   140015360:	mulsd  xmm4,xmm0
   140015364:	movss  xmm0,xmm11
   140015369:	unpcklps xmm0,xmm12
   14001536d:	subsd  xmm0,xmm2
   140015371:	mulsd  xmm1,xmm0
   140015375:	subsd  xmm4,xmm1
   140015379:	comisd xmm4,xmm13
   14001537e:	jbe    0x140015387
   140015380:	mov    eax,0x1
   140015385:	jmp    0x140015393
   140015387:	xor    eax,eax
   140015389:	comisd xmm9,xmm4
   14001538e:	setbe  al
   140015391:	dec    eax
   140015393:	imul   ecx,r8d
   140015397:	test   ecx,ecx
   140015399:	jns    0x1400153a2
   14001539b:	imul   eax,edx
   14001539e:	test   eax,eax
   1400153a0:	js     0x1400153c8
   1400153a2:	inc    r10
   1400153a5:	add    r9,0x10
   1400153a9:	cmp    r10,r11
   1400153ac:	jge    0x1400153cc
   1400153ae:	movaps xmm2,XMMWORD PTR [rsp+0x70]
   1400153b3:	movaps xmm3,XMMWORD PTR [rsp+0x40]
   1400153b8:	movaps xmm4,XMMWORD PTR [rsp+0x50]
   1400153bd:	movaps xmm10,XMMWORD PTR [rsp+0x60]
   1400153c3:	jmp    0x140015050
   1400153c8:	xor    eax,eax
   1400153ca:	jmp    0x140015449
   1400153cc:	mov    QWORD PTR [rsp+0x1f0],rsi
   1400153d4:	movsxd rsi,DWORD PTR [rbp+0x110]
   1400153db:	cmp    rbx,rsi
   1400153de:	jge    0x14001543c
   1400153e0:	movups xmm0,XMMWORD PTR [rdi]
   1400153e3:	mov    rdi,rbx
   1400153e6:	shl    rdi,0x4
   1400153ea:	add    rdi,r14
   1400153ed:	movaps XMMWORD PTR [rbp-0x60],xmm0
   1400153f1:	movups xmm0,XMMWORD PTR [r12]
   1400153f6:	movaps XMMWORD PTR [rbp-0x80],xmm0
   1400153fa:	nop    WORD PTR [rax+rax*1+0x0]
   140015400:	movsxd rax,DWORD PTR [r15+rbx*4]
   140015404:	lea    r9,[rbp-0x50]
   140015408:	lea    r8,[rbp-0x40]
   14001540c:	add    rax,rax
   14001540f:	lea    rdx,[rbp-0x60]
   140015413:	lea    rcx,[rbp-0x80]
   140015417:	movups xmm0,XMMWORD PTR [r14+rax*8]
   14001541c:	movaps XMMWORD PTR [rbp-0x50],xmm0
   140015420:	movups xmm0,XMMWORD PTR [rdi]
   140015423:	movaps XMMWORD PTR [rbp-0x40],xmm0
   140015427:	call   0x140015e80
   14001542c:	test   eax,eax
   14001542e:	jne    0x14001549e
   140015430:	inc    rbx
   140015433:	add    rdi,0x10
   140015437:	cmp    rbx,rsi
   14001543a:	jl     0x140015400
   14001543c:	mov    eax,0x1
   140015441:	mov    rsi,QWORD PTR [rsp+0x1f0]
   140015449:	lea    r11,[rsp+0x1d0]
   140015451:	mov    rbx,QWORD PTR [r11+0x28]
   140015455:	mov    rdi,QWORD PTR [r11+0x30]
   140015459:	mov    r12,QWORD PTR [r11+0x38]
   14001545d:	movaps xmm6,XMMWORD PTR [r11-0x10]
   140015462:	movaps xmm7,XMMWORD PTR [r11-0x20]
   140015467:	movaps xmm8,XMMWORD PTR [r11-0x30]
   14001546c:	movaps xmm9,XMMWORD PTR [r11-0x40]
   140015471:	movaps xmm10,XMMWORD PTR [r11-0x50]
   140015476:	movaps xmm11,XMMWORD PTR [r11-0x60]
   14001547b:	movaps xmm12,XMMWORD PTR [r11-0x70]
   140015480:	movaps xmm13,XMMWORD PTR [r11-0x80]
   140015485:	movaps xmm14,XMMWORD PTR [r11-0x90]
   14001548d:	movaps xmm15,XMMWORD PTR [r11-0xa0]
   140015495:	mov    rsp,r11
   140015498:	pop    r15
   14001549a:	pop    r14
   14001549c:	pop    rbp
   14001549d:	ret    
   14001549e:	xor    eax,eax
   1400154a0:	jmp    0x140015441
   1400154a2:	int3   
   1400154a3:	int3   
   1400154a4:	int3   
   1400154a5:	int3   
   1400154a6:	int3   
   1400154a7:	int3   
   1400154a8:	int3   
   1400154a9:	int3   
   1400154aa:	int3   
   1400154ab:	int3   
   1400154ac:	int3   
   1400154ad:	int3   
   1400154ae:	int3   
   1400154af:	int3   
   1400154b0:	mov    r11,rsp
   1400154b3:	push   rbp
   1400154b4:	push   rsi
   1400154b5:	push   r12
   1400154b7:	push   r14
   1400154b9:	push   r15
   1400154bb:	sub    rsp,0xb0
   1400154c2:	mov    r14d,DWORD PTR [rcx+0x4]
   1400154c6:	mov    rax,QWORD PTR [rcx+0x28]
   1400154ca:	mov    rsi,QWORD PTR [rcx+0x8]
   1400154ce:	mov    r12,QWORD PTR [rcx+0x18]
   1400154d2:	mov    r15,QWORD PTR [rcx+0x20]
   1400154d6:	movsxd rbp,edx
   1400154d9:	mov    QWORD PTR [rsp+0x48],rax
   1400154de:	cmp    ebp,r14d
   1400154e1:	jge    0x140015793
   1400154e7:	mov    QWORD PTR [r11+0x10],rbx
   1400154eb:	mov    QWORD PTR [r11-0x30],rdi
   1400154ef:	mov    QWORD PTR [r11-0x38],r13
   1400154f3:	movaps XMMWORD PTR [r11-0x48],xmm6
   1400154f8:	movaps XMMWORD PTR [r11-0x58],xmm7
   1400154fd:	lea    rcx,[rbp*8+0x0]
   140015505:	lea    r13,[rbp-0x1]
   140015509:	lea    rax,[r15+rbp*4]
   14001550d:	mov    QWORD PTR [rsp+0xf0],rcx
   140015515:	mov    rcx,rbp
   140015518:	mov    QWORD PTR [rsp+0x40],r13
   14001551d:	shl    rcx,0x4
   140015521:	mov    QWORD PTR [rsp+0xf8],rax
   140015529:	add    rcx,rsi
   14001552c:	mov    QWORD PTR [rsp+0xe0],rcx
   140015534:	nop    DWORD PTR [rax+0x0]
   140015538:	nop    DWORD PTR [rax+rax*1+0x0]
   140015540:	movups xmm3,XMMWORD PTR [rcx]
   140015543:	movsxd rdi,DWORD PTR [rax]
   140015546:	mov    rax,rdi
   140015549:	add    rax,rax
   14001554c:	movaps xmm0,xmm3
   14001554f:	movaps xmm2,xmm3
   140015552:	movaps xmm1,xmm3
   140015555:	movups xmm7,XMMWORD PTR [rsi+rax*8]
   140015559:	shufps xmm0,xmm3,0x55
   14001555d:	shufps xmm1,xmm3,0xff
   140015561:	shufps xmm2,xmm3,0xaa
   140015565:	movaps xmm4,xmm7
   140015568:	movaps xmm5,xmm7
   14001556b:	movaps xmm6,xmm7
   14001556e:	unpcklps xmm3,xmm0
   140015571:	shufps xmm4,xmm7,0x55
   140015575:	shufps xmm5,xmm7,0xff
   140015579:	movss  xmm0,xmm7
   14001557d:	unpcklps xmm0,xmm4
   140015580:	shufps xmm6,xmm7,0xaa
   140015584:	subsd  xmm3,xmm0
   140015588:	movss  xmm0,xmm2
   14001558c:	unpcklps xmm0,xmm1
   14001558f:	mulsd  xmm3,xmm3
   140015593:	movss  xmm1,xmm6
   140015597:	unpcklps xmm1,xmm5
   14001559a:	subsd  xmm0,xmm1
   14001559e:	mulsd  xmm0,xmm0
   1400155a2:	addsd  xmm0,xmm3
   1400155a6:	call   0x14003b8ae
   1400155ab:	mov    r10,QWORD PTR [rsp+0xf0]
   1400155b3:	mov    rdx,QWORD PTR [rsp+0x48]
   1400155b8:	mov    rcx,QWORD PTR [r10+rdx*1]
   1400155bc:	mov    rax,QWORD PTR [rdx+rdi*8]
   1400155c0:	lea    ebx,[rbp-0x1]
   1400155c3:	movsd  QWORD PTR [rcx+rdi*8],xmm0
   1400155c8:	movsd  QWORD PTR [r10+rax*1],xmm0
   1400155ce:	cmp    edi,ebx
   1400155d0:	jne    0x1400155da
   1400155d2:	dec    ebx
   1400155d4:	lea    rdi,[r13-0x1]
   1400155d8:	jmp    0x1400155dd
   1400155da:	mov    rdi,r13
   1400155dd:	test   ebx,ebx
   1400155df:	js     0x140015724
   1400155e5:	lea    r13,[rdx+rdi*8]
   1400155e9:	shl    rdi,0x4
   1400155ed:	add    rdi,rsi
   1400155f0:	sub    rcx,rdx
   1400155f3:	mov    QWORD PTR [rsp+0x50],rcx
   1400155f8:	nop    DWORD PTR [rax+rax*1+0x0]
   140015600:	mov    r9,r12
   140015603:	mov    r8,rsi
   140015606:	mov    edx,ebx
   140015608:	mov    ecx,ebp
   14001560a:	mov    QWORD PTR [rsp+0x20],r15
   14001560f:	call   0x140015a70
   140015614:	test   eax,eax
   140015616:	je     0x14001570f
   14001561c:	mov    r9,r12
   14001561f:	mov    edx,ebp
   140015621:	mov    ecx,ebx
   140015623:	mov    QWORD PTR [rsp+0x20],r15
   140015628:	call   0x140015a70
   14001562d:	test   eax,eax
   14001562f:	je     0x14001570f
   140015635:	movups xmm0,XMMWORD PTR [rdi]
   140015638:	mov    rax,QWORD PTR [rsp+0xe0]
   140015640:	mov    QWORD PTR [rsp+0x38],r15
   140015645:	mov    QWORD PTR [rsp+0x30],r12
   14001564a:	lea    rdx,[rsp+0x60]
   14001564f:	lea    rcx,[rsp+0x70]
   140015654:	movaps XMMWORD PTR [rsp+0x60],xmm0
   140015659:	movups xmm0,XMMWORD PTR [rax]
   14001565c:	mov    r9d,r14d
   14001565f:	mov    r8d,r14d
   140015662:	mov    QWORD PTR [rsp+0x28],rsi
   140015667:	movaps XMMWORD PTR [rsp+0x70],xmm0
   14001566c:	mov    DWORD PTR [rsp+0x20],r14d
   140015671:	call   0x140014f10
   140015676:	test   eax,eax
   140015678:	je     0x140015707
   14001567e:	movups xmm7,XMMWORD PTR [rdi]
   140015681:	mov    rax,QWORD PTR [rsp+0xe0]
   140015689:	movups xmm3,XMMWORD PTR [rax]
   14001568c:	movaps xmm4,xmm7
   14001568f:	movaps xmm5,xmm7
   140015692:	movaps xmm6,xmm7
   140015695:	shufps xmm4,xmm7,0x55
   140015699:	shufps xmm5,xmm7,0xff
   14001569d:	shufps xmm6,xmm7,0xaa
   1400156a1:	movaps xmm0,xmm3
   1400156a4:	movaps xmm2,xmm3
   1400156a7:	movaps xmm1,xmm3
   1400156aa:	shufps xmm0,xmm3,0x55
   1400156ae:	shufps xmm1,xmm3,0xff
   1400156b2:	shufps xmm2,xmm3,0xaa
   1400156b6:	unpcklps xmm3,xmm0
   1400156b9:	movss  xmm0,xmm7
   1400156bd:	unpcklps xmm0,xmm4
   1400156c0:	subsd  xmm3,xmm0
   1400156c4:	movss  xmm0,xmm2
   1400156c8:	unpcklps xmm0,xmm1
   1400156cb:	movss  xmm1,xmm6
   1400156cf:	mulsd  xmm3,xmm3
   1400156d3:	unpcklps xmm1,xmm5
   1400156d6:	subsd  xmm0,xmm1
   1400156da:	mulsd  xmm0,xmm0
   1400156de:	addsd  xmm0,xmm3
   1400156e2:	call   0x14003b8ae
   1400156e7:	mov    rax,QWORD PTR [rsp+0x50]
   1400156ec:	mov    r10,QWORD PTR [rsp+0xf0]
   1400156f4:	movsd  QWORD PTR [r13+rax*1+0x0],xmm0
   1400156fb:	mov    rax,QWORD PTR [r13+0x0]
   1400156ff:	movsd  QWORD PTR [r10+rax*1],xmm0
   140015705:	jmp    0x14001570f
   140015707:	mov    r10,QWORD PTR [rsp+0xf0]
   14001570f:	sub    rdi,0x10
   140015713:	sub    r13,0x8
   140015717:	dec    ebx
   140015719:	jns    0x140015600
   14001571f:	mov    r13,QWORD PTR [rsp+0x40]
   140015724:	mov    rax,QWORD PTR [rsp+0xf8]
   14001572c:	mov    rcx,QWORD PTR [rsp+0xe0]
   140015734:	inc    r13
   140015737:	add    r10,0x8
   14001573b:	add    rax,0x4
   14001573f:	add    rcx,0x10
   140015743:	inc    ebp
   140015745:	mov    QWORD PTR [rsp+0x40],r13
   14001574a:	mov    QWORD PTR [rsp+0xf8],rax
   140015752:	mov    QWORD PTR [rsp+0xe0],rcx
   14001575a:	mov    QWORD PTR [rsp+0xf0],r10
   140015762:	cmp    ebp,r14d
   140015765:	jl     0x140015540
   14001576b:	movaps xmm7,XMMWORD PTR [rsp+0x80]
   140015773:	movaps xmm6,XMMWORD PTR [rsp+0x90]
   14001577b:	mov    r13,QWORD PTR [rsp+0xa0]
   140015783:	mov    rdi,QWORD PTR [rsp+0xa8]
   14001578b:	mov    rbx,QWORD PTR [rsp+0xe8]
   140015793:	add    rsp,0xb0
   14001579a:	pop    r15
   14001579c:	pop    r14
   14001579e:	pop    r12
   1400157a0:	pop    rsi
   1400157a1:	pop    rbp
   1400157a2:	ret    
   1400157a3:	int3   
   1400157a4:	int3   
   1400157a5:	int3   
   1400157a6:	int3   
   1400157a7:	int3   
   1400157a8:	int3   
   1400157a9:	int3   
   1400157aa:	int3   
   1400157ab:	int3   
   1400157ac:	int3   
   1400157ad:	int3   
   1400157ae:	int3   
   1400157af:	int3   
   1400157b0:	mov    QWORD PTR [rsp+0x20],rbx
   1400157b5:	mov    QWORD PTR [rsp+0x18],r8
   1400157ba:	mov    QWORD PTR [rsp+0x8],rcx
   1400157bf:	push   rbp
   1400157c0:	push   rsi
   1400157c1:	push   rdi
   1400157c2:	push   r12
   1400157c4:	push   r13
   1400157c6:	push   r14
   1400157c8:	push   r15
   1400157ca:	mov    rbp,rsp
   1400157cd:	sub    rsp,0x60
   1400157d1:	mov    r10,QWORD PTR [rbp+0x60]
   1400157d5:	xor    ebx,ebx
   1400157d7:	mov    rdi,rcx
   1400157da:	mov    eax,DWORD PTR [r10+0x4]
   1400157de:	mov    r14,QWORD PTR [r10+0x8]
   1400157e2:	mov    r15,QWORD PTR [r10+0x18]
   1400157e6:	mov    DWORD PTR [rbp+0x60],eax
   1400157e9:	test   edx,edx
   1400157eb:	jns    0x140015811
   1400157ed:	mov    r11d,ebx
   1400157f0:	mov    r13d,ebx
   1400157f3:	test   r9d,r9d
   1400157f6:	jns    0x140015800
   1400157f8:	mov    r12d,ebx
   1400157fb:	mov    DWORD PTR [rbp+0x48],ebx
   1400157fe:	jmp    0x140015861
   140015800:	mov    rax,QWORD PTR [r10+0x10]
   140015804:	movsxd rcx,r9d
   140015807:	mov    r12d,DWORD PTR [rax+rcx*4]
   14001580b:	mov    eax,DWORD PTR [rax+rcx*4+0x4]
   14001580f:	jmp    0x14001585e
   140015811:	test   r9d,r9d
   140015814:	jns    0x14001582d
   140015816:	mov    rax,QWORD PTR [r10+0x10]
   14001581a:	movsxd rcx,edx
   14001581d:	mov    r11d,ebx
   140015820:	mov    r12d,DWORD PTR [rax+rcx*4]
   140015824:	mov    eax,DWORD PTR [rax+rcx*4+0x4]
   140015828:	mov    r13d,ebx
   14001582b:	jmp    0x14001585e
   14001582d:	mov    rcx,QWORD PTR [r10+0x10]
   140015831:	cmp    edx,r9d
   140015834:	jg     0x140015847
   140015836:	movsxd rax,edx
   140015839:	mov    r11d,DWORD PTR [rcx+rax*4]
   14001583d:	mov    r13d,DWORD PTR [rcx+rax*4+0x4]
   140015842:	movsxd rax,r9d
   140015845:	jmp    0x140015856
   140015847:	movsxd rax,r9d
   14001584a:	mov    r11d,DWORD PTR [rcx+rax*4]
   14001584e:	mov    r13d,DWORD PTR [rcx+rax*4+0x4]
   140015853:	movsxd rax,edx
   140015856:	mov    r12d,DWORD PTR [rcx+rax*4]
   14001585a:	mov    eax,DWORD PTR [rcx+rax*4+0x4]
   14001585e:	mov    DWORD PTR [rbp+0x48],eax
   140015861:	movsxd rsi,r11d
   140015864:	test   r11d,r11d
   140015867:	jle    0x1400158c8
   140015869:	movups xmm0,XMMWORD PTR [r8]
   14001586d:	movaps XMMWORD PTR [rbp-0x20],xmm0
   140015871:	movups xmm0,XMMWORD PTR [rdi]
   140015874:	mov    rdi,r14
   140015877:	movaps XMMWORD PTR [rbp-0x10],xmm0
   14001587b:	nop    DWORD PTR [rax+rax*1+0x0]
   140015880:	movsxd rax,DWORD PTR [r15+rbx*4]
   140015884:	lea    r9,[rbp-0x40]
   140015888:	lea    r8,[rbp-0x30]
   14001588c:	add    rax,rax
   14001588f:	lea    rdx,[rbp-0x20]
   140015893:	lea    rcx,[rbp-0x10]
   140015897:	movups xmm0,XMMWORD PTR [r14+rax*8]
   14001589c:	movaps XMMWORD PTR [rbp-0x40],xmm0
   1400158a0:	movups xmm0,XMMWORD PTR [rdi]
   1400158a3:	movaps XMMWORD PTR [rbp-0x30],xmm0
   1400158a7:	call   0x140015e80
   1400158ac:	test   eax,eax
   1400158ae:	jne    0x1400159b9
   1400158b4:	inc    rbx
   1400158b7:	add    rdi,0x10
   1400158bb:	cmp    rbx,rsi
   1400158be:	jl     0x140015880
   1400158c0:	mov    r8,QWORD PTR [rbp+0x50]
   1400158c4:	mov    rdi,QWORD PTR [rbp+0x40]
   1400158c8:	movsxd rbx,r13d
   1400158cb:	movsxd rsi,r12d
   1400158ce:	cmp    rbx,rsi
   1400158d1:	jge    0x140015930
   1400158d3:	movups xmm0,XMMWORD PTR [r8]
   1400158d7:	movaps XMMWORD PTR [rbp-0x30],xmm0
   1400158db:	movups xmm0,XMMWORD PTR [rdi]
   1400158de:	mov    rdi,rbx
   1400158e1:	shl    rdi,0x4
   1400158e5:	add    rdi,r14
   1400158e8:	movaps XMMWORD PTR [rbp-0x40],xmm0
   1400158ec:	nop    DWORD PTR [rax+0x0]
   1400158f0:	movsxd rax,DWORD PTR [r15+rbx*4]
   1400158f4:	lea    r9,[rbp-0x10]
   1400158f8:	lea    r8,[rbp-0x20]
   1400158fc:	add    rax,rax
   1400158ff:	lea    rdx,[rbp-0x30]
   140015903:	lea    rcx,[rbp-0x40]
   140015907:	movups xmm0,XMMWORD PTR [r14+rax*8]
   14001590c:	movaps XMMWORD PTR [rbp-0x10],xmm0
   140015910:	movups xmm0,XMMWORD PTR [rdi]
   140015913:	movaps XMMWORD PTR [rbp-0x20],xmm0
   140015917:	call   0x140015e80
   14001591c:	test   eax,eax
   14001591e:	jne    0x1400159b9
   140015924:	inc    rbx
   140015927:	add    rdi,0x10
   14001592b:	cmp    rbx,rsi
   14001592e:	jl     0x1400158f0
   140015930:	movsxd rbx,DWORD PTR [rbp+0x48]
   140015934:	movsxd rsi,DWORD PTR [rbp+0x60]
   140015938:	cmp    rbx,rsi
   14001593b:	jge    0x14001599c
   14001593d:	mov    rax,QWORD PTR [rbp+0x50]
   140015941:	mov    rdi,rbx
   140015944:	shl    rdi,0x4
   140015948:	add    rdi,r14
   14001594b:	movups xmm0,XMMWORD PTR [rax]
   14001594e:	mov    rax,QWORD PTR [rbp+0x40]
   140015952:	movaps XMMWORD PTR [rbp-0x30],xmm0
   140015956:	movups xmm0,XMMWORD PTR [rax]
   140015959:	movaps XMMWORD PTR [rbp-0x40],xmm0
   14001595d:	nop    DWORD PTR [rax]
   140015960:	movsxd rax,DWORD PTR [r15+rbx*4]
   140015964:	lea    r9,[rbp-0x10]
   140015968:	lea    r8,[rbp-0x20]
   14001596c:	add    rax,rax
   14001596f:	lea    rdx,[rbp-0x30]
   140015973:	lea    rcx,[rbp-0x40]
   140015977:	movups xmm0,XMMWORD PTR [r14+rax*8]
   14001597c:	movaps XMMWORD PTR [rbp-0x10],xmm0
   140015980:	movups xmm0,XMMWORD PTR [rdi]
   140015983:	movaps XMMWORD PTR [rbp-0x20],xmm0
   140015987:	call   0x140015e80
   14001598c:	test   eax,eax
   14001598e:	jne    0x1400159b9
   140015990:	inc    rbx
   140015993:	add    rdi,0x10
   140015997:	cmp    rbx,rsi
   14001599a:	jl     0x140015960
   14001599c:	mov    eax,0x1
   1400159a1:	mov    rbx,QWORD PTR [rsp+0xb8]
   1400159a9:	add    rsp,0x60
   1400159ad:	pop    r15
   1400159af:	pop    r14
   1400159b1:	pop    r13
   1400159b3:	pop    r12
   1400159b5:	pop    rdi
   1400159b6:	pop    rsi
   1400159b7:	pop    rbp
   1400159b8:	ret    
   1400159b9:	xor    eax,eax
   1400159bb:	jmp    0x1400159a1
   1400159bd:	int3   
   1400159be:	int3   
   1400159bf:	int3   
   1400159c0:	movups xmm2,XMMWORD PTR [rdx]
   1400159c3:	movups xmm1,XMMWORD PTR [rcx]
   1400159c6:	movsd  xmm0,QWORD PTR [rcx+0x8]
   1400159cb:	subsd  xmm0,QWORD PTR [rdx+0x8]
   1400159d0:	subsd  xmm1,xmm2
   1400159d4:	mulsd  xmm1,xmm1
   1400159d8:	mulsd  xmm0,xmm0
   1400159dc:	addsd  xmm0,xmm1
   1400159e0:	jmp    0x14003b8ae
   1400159e5:	int3   
   1400159e6:	int3   
   1400159e7:	int3   
   1400159e8:	int3   
   1400159e9:	int3   
   1400159ea:	int3   
   1400159eb:	int3   
   1400159ec:	int3   
   1400159ed:	int3   
   1400159ee:	int3   
   1400159ef:	int3   
   1400159f0:	movsd  xmm1,QWORD PTR [rcx]
   1400159f4:	movsd  xmm0,QWORD PTR [rcx+0x8]
   1400159f9:	subsd  xmm0,QWORD PTR [rdx+0x8]
   1400159fe:	subsd  xmm1,QWORD PTR [rdx]
   140015a02:	mulsd  xmm0,xmm0
   140015a06:	mulsd  xmm1,xmm1
   140015a0a:	addsd  xmm0,xmm1
   140015a0e:	ret    
   140015a0f:	int3   
   140015a10:	movsd  xmm2,QWORD PTR [rcx]
   140015a14:	movsd  xmm1,QWORD PTR [rdx]
   140015a18:	ucomisd xmm2,xmm1
   140015a1c:	jp     0x140015a49
   140015a1e:	jne    0x140015a49
   140015a20:	movsd  xmm3,QWORD PTR [rcx+0x8]
   140015a25:	movsd  xmm1,QWORD PTR [r8+0x8]
   140015a2b:	comisd xmm1,xmm3
   140015a2f:	jbe    0x140015a3c
   140015a31:	movsd  xmm0,QWORD PTR [rdx+0x8]
   140015a36:	comisd xmm0,xmm1
   140015a3a:	ja     0x140015a66
   140015a3c:	comisd xmm1,QWORD PTR [rdx+0x8]
   140015a41:	jbe    0x140015a6c
   140015a43:	comisd xmm3,xmm1
   140015a47:	jmp    0x140015a64
   140015a49:	movsd  xmm0,QWORD PTR [r8]
   140015a4e:	comisd xmm0,xmm2
   140015a52:	jbe    0x140015a5a
   140015a54:	comisd xmm1,xmm0
   140015a58:	ja     0x140015a66
   140015a5a:	comisd xmm0,xmm1
   140015a5e:	jbe    0x140015a6c
   140015a60:	comisd xmm2,xmm0
   140015a64:	jbe    0x140015a6c
   140015a66:	mov    eax,0x1
   140015a6b:	ret    
   140015a6c:	xor    eax,eax
   140015a6e:	ret    
   140015a6f:	int3   
   140015a70:	mov    rax,rsp
   140015a73:	sub    rsp,0x118
   140015a7a:	movaps XMMWORD PTR [rax-0x18],xmm6
   140015a7e:	movaps XMMWORD PTR [rax-0x28],xmm7
   140015a82:	movaps XMMWORD PTR [rax-0x38],xmm8
   140015a87:	movaps XMMWORD PTR [rax-0x48],xmm9
   140015a8c:	movaps XMMWORD PTR [rax-0x58],xmm10
   140015a91:	movaps XMMWORD PTR [rax-0x68],xmm11
   140015a96:	movaps XMMWORD PTR [rax-0x78],xmm12
   140015a9b:	movaps XMMWORD PTR [rax-0x88],xmm13
   140015aa3:	movaps XMMWORD PTR [rax-0x98],xmm14
   140015aab:	movsd  xmm14,QWORD PTR [rip+0x2885c]        # 0x14003e310
   140015ab4:	movsxd rax,edx
   140015ab7:	movsxd rdx,ecx
   140015aba:	add    rax,rax
   140015abd:	lea    rcx,[rdx*4+0x0]
   140015ac5:	add    rdx,rdx
   140015ac8:	movups xmm10,XMMWORD PTR [r8+rdx*8]
   140015acd:	movaps XMMWORD PTR [rsp+0x70],xmm15
   140015ad3:	movups xmm15,XMMWORD PTR [r8+rax*8]
   140015ad8:	movss  xmm4,xmm10
   140015add:	movaps xmm11,xmm10
   140015ae1:	movaps xmm12,xmm10
   140015ae5:	movaps xmm13,xmm10
   140015ae9:	movsxd rax,DWORD PTR [rcx+r9*1]
   140015aed:	add    rax,rax
   140015af0:	shufps xmm11,xmm10,0x55
   140015af5:	shufps xmm12,xmm10,0xaa
   140015afa:	shufps xmm13,xmm10,0xff
   140015aff:	movaps xmm1,xmm15
   140015b03:	movaps xmm2,xmm15
   140015b07:	movaps xmm5,xmm15
   140015b0b:	movups xmm0,XMMWORD PTR [r8+rax*8]
   140015b10:	mov    rax,QWORD PTR [rsp+0x140]
   140015b18:	movaps XMMWORD PTR [rsp],xmm0
   140015b1c:	shufps xmm1,xmm15,0xaa
   140015b21:	shufps xmm2,xmm15,0xff
   140015b26:	movsxd rcx,DWORD PTR [rcx+rax*1]
   140015b2a:	add    rcx,rcx
   140015b2d:	movaps XMMWORD PTR [rsp+0x10],xmm1
   140015b32:	movaps XMMWORD PTR [rsp+0x20],xmm2
   140015b37:	movups xmm0,XMMWORD PTR [r8+rcx*8]
   140015b3c:	unpcklps xmm4,xmm11
   140015b40:	shufps xmm5,xmm15,0x55
   140015b45:	movss  xmm3,xmm0
   140015b49:	movaps xmm6,xmm0
   140015b4c:	movaps xmm7,xmm0
   140015b4f:	movaps xmm8,xmm0
   140015b53:	shufps xmm6,xmm0,0x55
   140015b57:	shufps xmm7,xmm0,0xaa
   140015b5b:	shufps xmm8,xmm0,0xff
   140015b60:	movss  xmm0,xmm1
   140015b64:	movss  xmm1,xmm15
   140015b69:	movaps XMMWORD PTR [rsp+0x30],xmm5
   140015b6e:	movaps XMMWORD PTR [rsp+0x60],xmm6
   140015b73:	movaps XMMWORD PTR [rsp+0x40],xmm7
   140015b78:	movaps XMMWORD PTR [rsp+0x50],xmm8
   140015b7e:	unpcklps xmm0,xmm2
   140015b81:	unpcklps xmm1,xmm5
   140015b84:	unpcklps xmm3,xmm6
   140015b87:	movsd  xmm5,QWORD PTR [rip+0x28789]        # 0x14003e318
   140015b8f:	movss  xmm2,xmm7
   140015b93:	subsd  xmm4,xmm3
   140015b97:	subsd  xmm1,xmm3
   140015b9b:	unpcklps xmm2,xmm8
   140015b9f:	subsd  xmm0,xmm2
   140015ba3:	mulsd  xmm4,xmm0
   140015ba7:	movss  xmm0,xmm12
   140015bac:	unpcklps xmm0,xmm13
   140015bb0:	subsd  xmm0,xmm2
   140015bb4:	mulsd  xmm1,xmm0
   140015bb8:	subsd  xmm4,xmm1
   140015bbc:	comisd xmm4,xmm14
   140015bc1:	jbe    0x140015bcb
   140015bc3:	mov    r9d,0x1
   140015bc9:	jmp    0x140015bd9
   140015bcb:	xor    r9d,r9d
   140015bce:	comisd xmm5,xmm4
   140015bd2:	setbe  r9b
   140015bd6:	dec    r9d
   140015bd9:	movss  xmm6,DWORD PTR [rsp]
   140015bde:	movss  xmm0,DWORD PTR [rsp+0x10]
   140015be4:	movss  xmm7,DWORD PTR [rsp+0x4]
   140015bea:	unpcklps xmm0,XMMWORD PTR [rsp+0x20]
   140015bef:	movss  xmm8,DWORD PTR [rsp+0x8]
   140015bf6:	movss  xmm9,DWORD PTR [rsp+0xc]
   140015bfd:	movss  xmm4,xmm6
   140015c01:	unpcklps xmm4,xmm7
   140015c04:	movss  xmm3,xmm10
   140015c09:	movss  xmm2,xmm12
   140015c0e:	movss  xmm1,xmm15
   140015c13:	unpcklps xmm1,XMMWORD PTR [rsp+0x30]
   140015c18:	unpcklps xmm3,xmm11
   140015c1c:	unpcklps xmm2,xmm13
   140015c20:	subsd  xmm0,xmm2
   140015c24:	subsd  xmm4,xmm3
   140015c28:	subsd  xmm1,xmm3
   140015c2c:	mulsd  xmm4,xmm0
   140015c30:	movss  xmm0,xmm8
   140015c35:	unpcklps xmm0,xmm9
   140015c39:	subsd  xmm0,xmm2
   140015c3d:	mulsd  xmm1,xmm0
   140015c41:	subsd  xmm4,xmm1
   140015c45:	comisd xmm4,xmm14
   140015c4a:	jbe    0x140015c53
   140015c4c:	mov    edx,0x1
   140015c51:	jmp    0x140015c5e
   140015c53:	xor    edx,edx
   140015c55:	comisd xmm5,xmm4
   140015c59:	setbe  dl
   140015c5c:	dec    edx
   140015c5e:	movss  xmm0,DWORD PTR [rsp+0x40]
   140015c64:	movups xmm1,XMMWORD PTR [r8+rcx*8]
   140015c69:	movss  xmm4,xmm6
   140015c6d:	unpcklps xmm4,xmm7
   140015c70:	unpcklps xmm0,XMMWORD PTR [rsp+0x50]
   140015c75:	unpcklps xmm1,XMMWORD PTR [rsp+0x60]
   140015c7a:	movss  xmm3,xmm10
   140015c7f:	movss  xmm2,xmm12
   140015c84:	unpcklps xmm3,xmm11
   140015c88:	unpcklps xmm2,xmm13
   140015c8c:	subsd  xmm0,xmm2
   140015c90:	subsd  xmm4,xmm3
   140015c94:	subsd  xmm1,xmm3
   140015c98:	mulsd  xmm4,xmm0
   140015c9c:	movss  xmm0,xmm8
   140015ca1:	unpcklps xmm0,xmm9
   140015ca5:	subsd  xmm0,xmm2
   140015ca9:	mulsd  xmm1,xmm0
   140015cad:	subsd  xmm4,xmm1
   140015cb1:	comisd xmm4,xmm14
   140015cb6:	ja     0x140015cd7
   140015cb8:	xor    eax,eax
   140015cba:	comisd xmm5,xmm4
   140015cbe:	setbe  al
   140015cc1:	dec    eax
   140015cc3:	test   eax,eax
   140015cc5:	jg     0x140015cd7
   140015cc7:	test   r9d,r9d
   140015cca:	jns    0x140015cd0
   140015ccc:	test   edx,edx
   140015cce:	js     0x140015cdc
   140015cd0:	mov    eax,0x1
   140015cd5:	jmp    0x140015cde
   140015cd7:	test   r9d,r9d
   140015cda:	jns    0x140015ccc
   140015cdc:	xor    eax,eax
   140015cde:	movaps xmm15,XMMWORD PTR [rsp+0x70]
   140015ce4:	lea    r11,[rsp+0x118]
   140015cec:	movaps xmm6,XMMWORD PTR [r11-0x18]
   140015cf1:	movaps xmm7,XMMWORD PTR [r11-0x28]
   140015cf6:	movaps xmm8,XMMWORD PTR [r11-0x38]
   140015cfb:	movaps xmm9,XMMWORD PTR [r11-0x48]
   140015d00:	movaps xmm10,XMMWORD PTR [r11-0x58]
   140015d05:	movaps xmm11,XMMWORD PTR [r11-0x68]
   140015d0a:	movaps xmm12,XMMWORD PTR [r11-0x78]
   140015d0f:	movaps xmm13,XMMWORD PTR [r11-0x88]
   140015d17:	movaps xmm14,XMMWORD PTR [r11-0x98]
   140015d1f:	mov    rsp,r11
   140015d22:	ret    
   140015d23:	int3   
   140015d24:	int3   
   140015d25:	int3   
   140015d26:	int3   
   140015d27:	int3   
   140015d28:	int3   
   140015d29:	int3   
   140015d2a:	int3   
   140015d2b:	int3   
   140015d2c:	int3   
   140015d2d:	int3   
   140015d2e:	int3   
   140015d2f:	int3   
   140015d30:	rex push rbx
   140015d32:	sub    rsp,0x10
   140015d36:	movups xmm2,XMMWORD PTR [rcx]
   140015d39:	movups xmm3,XMMWORD PTR [r9]
   140015d3d:	movsd  xmm4,QWORD PTR [rdx+0x8]
   140015d42:	movaps XMMWORD PTR [rsp],xmm6
   140015d46:	mov    r10,r8
   140015d49:	xor    r8d,r8d
   140015d4c:	mov    r11,r9
   140015d4f:	mov    rax,rdx
   140015d52:	mov    rbx,rcx
   140015d55:	lea    r9d,[r8+0x1]
   140015d59:	movaps xmm0,xmm3
   140015d5c:	movaps xmm1,xmm2
   140015d5f:	unpckhpd xmm0,xmm3
   140015d63:	unpckhpd xmm1,xmm2
   140015d67:	movups xmm6,XMMWORD PTR [rdx]
   140015d6a:	movsd  xmm5,QWORD PTR [rip+0x285a6]        # 0x14003e318
   140015d72:	subsd  xmm0,xmm1
   140015d76:	subsd  xmm6,xmm2
   140015d7a:	subsd  xmm4,xmm1
   140015d7e:	subsd  xmm3,xmm2
   140015d82:	mulsd  xmm6,xmm0
   140015d86:	mulsd  xmm3,xmm4
   140015d8a:	subsd  xmm6,xmm3
   140015d8e:	comisd xmm6,QWORD PTR [rip+0x2857a]        # 0x14003e310
   140015d96:	jbe    0x140015d9d
   140015d98:	mov    edx,r9d
   140015d9b:	jmp    0x140015da9
   140015d9d:	comisd xmm5,xmm6
   140015da1:	mov    edx,r8d
   140015da4:	setbe  dl
   140015da7:	dec    edx
   140015da9:	movups xmm2,XMMWORD PTR [rax]
   140015dac:	movups xmm3,XMMWORD PTR [r11]
   140015db0:	movups xmm6,XMMWORD PTR [r10]
   140015db4:	movaps xmm0,xmm3
   140015db7:	movaps xmm1,xmm2
   140015dba:	unpckhpd xmm0,xmm3
   140015dbe:	unpckhpd xmm1,xmm2
   140015dc2:	movsd  xmm4,QWORD PTR [r10+0x8]
   140015dc8:	subsd  xmm6,xmm2
   140015dcc:	subsd  xmm0,xmm1
   140015dd0:	mulsd  xmm6,xmm0
   140015dd4:	subsd  xmm4,xmm1
   140015dd8:	subsd  xmm3,xmm2
   140015ddc:	mulsd  xmm3,xmm4
   140015de0:	subsd  xmm6,xmm3
   140015de4:	comisd xmm6,QWORD PTR [rip+0x28524]        # 0x14003e310
   140015dec:	jbe    0x140015df3
   140015dee:	mov    ecx,r9d
   140015df1:	jmp    0x140015dff
   140015df3:	comisd xmm5,xmm6
   140015df7:	mov    ecx,r8d
   140015dfa:	setbe  cl
   140015dfd:	dec    ecx
   140015dff:	movups xmm3,XMMWORD PTR [rbx]
   140015e02:	movups xmm6,XMMWORD PTR [r10]
   140015e06:	movsd  xmm4,QWORD PTR [r10+0x8]
   140015e0c:	movaps xmm1,xmm2
   140015e0f:	unpckhpd xmm1,xmm2
   140015e13:	movaps xmm0,xmm3
   140015e16:	unpckhpd xmm0,xmm3
   140015e1a:	subsd  xmm6,xmm2
   140015e1e:	subsd  xmm0,xmm1
   140015e22:	subsd  xmm3,xmm2
   140015e26:	mulsd  xmm6,xmm0
   140015e2a:	subsd  xmm4,xmm1
   140015e2e:	mulsd  xmm3,xmm4
   140015e32:	subsd  xmm6,xmm3
   140015e36:	comisd xmm6,QWORD PTR [rip+0x284d2]        # 0x14003e310
   140015e3e:	ja     0x140015e68
   140015e40:	comisd xmm5,xmm6
   140015e44:	mov    eax,r8d
   140015e47:	setbe  al
   140015e4a:	dec    eax
   140015e4c:	test   eax,eax
   140015e4e:	jg     0x140015e68
   140015e50:	test   edx,edx
   140015e52:	jns    0x140015e58
   140015e54:	test   ecx,ecx
   140015e56:	js     0x140015e5b
   140015e58:	mov    r8d,r9d
   140015e5b:	mov    eax,r8d
   140015e5e:	movaps xmm6,XMMWORD PTR [rsp]
   140015e62:	add    rsp,0x10
   140015e66:	pop    rbx
   140015e67:	ret    
   140015e68:	test   edx,edx
   140015e6a:	js     0x140015e70
   140015e6c:	test   ecx,ecx
   140015e6e:	jns    0x140015e73
   140015e70:	mov    r9d,r8d
   140015e73:	mov    eax,r9d
   140015e76:	movaps xmm6,XMMWORD PTR [rsp]
   140015e7a:	add    rsp,0x10
   140015e7e:	pop    rbx
   140015e7f:	ret    
   140015e80:	mov    QWORD PTR [rsp+0x8],rbx
   140015e85:	push   rbp
   140015e86:	mov    rbp,rsp
   140015e89:	sub    rsp,0x50
   140015e8d:	movups xmm2,XMMWORD PTR [rdx]
   140015e90:	movups xmm3,XMMWORD PTR [rcx]
   140015e93:	movups xmm5,XMMWORD PTR [r8]
   140015e97:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140015e9c:	movaps XMMWORD PTR [rsp+0x30],xmm7
   140015ea1:	mov    r11,r9
   140015ea4:	mov    rbx,r8
   140015ea7:	mov    r10,rdx
   140015eaa:	mov    eax,0x1
   140015eaf:	movaps xmm0,xmm3
   140015eb2:	movaps xmm1,xmm2
   140015eb5:	unpckhpd xmm0,xmm3
   140015eb9:	unpckhpd xmm1,xmm2
   140015ebd:	movsd  xmm4,QWORD PTR [r8+0x8]
   140015ec3:	movsd  xmm7,QWORD PTR [rip+0x28445]        # 0x14003e310
   140015ecb:	movsd  xmm6,QWORD PTR [rip+0x28445]        # 0x14003e318
   140015ed3:	subsd  xmm5,xmm2
   140015ed7:	subsd  xmm0,xmm1
   140015edb:	subsd  xmm4,xmm1
   140015edf:	mulsd  xmm5,xmm0
   140015ee3:	subsd  xmm3,xmm2
   140015ee7:	mulsd  xmm3,xmm4
   140015eeb:	subsd  xmm5,xmm3
   140015eef:	comisd xmm5,xmm7
   140015ef3:	jbe    0x140015efa
   140015ef5:	mov    r9d,eax
   140015ef8:	jmp    0x140015f78
   140015efa:	xor    r9d,r9d
   140015efd:	comisd xmm6,xmm5
   140015f01:	setbe  r9b
   140015f05:	dec    r9d
   140015f08:	jne    0x140015f78
   140015f0a:	movups xmm0,XMMWORD PTR [r8]
   140015f0e:	movups xmm1,xmm2
   140015f11:	movaps XMMWORD PTR [rbp-0x40],xmm2
   140015f15:	movups xmm2,XMMWORD PTR [rcx]
   140015f18:	movaps XMMWORD PTR [rbp-0x50],xmm0
   140015f1c:	ucomisd xmm2,xmm1
   140015f20:	movaps XMMWORD PTR [rbp-0x30],xmm2
   140015f24:	jp     0x140015f53
   140015f26:	jne    0x140015f53
   140015f28:	movsd  xmm0,QWORD PTR [rbp-0x48]
   140015f2d:	movsd  xmm1,QWORD PTR [rbp-0x28]
   140015f32:	movsd  xmm3,QWORD PTR [rbp-0x38]
   140015f37:	comisd xmm0,xmm1
   140015f3b:	jbe    0x140015f47
   140015f3d:	comisd xmm3,xmm0
   140015f41:	ja     0x1400160e8
   140015f47:	comisd xmm0,xmm3
   140015f4b:	jbe    0x140015f78
   140015f4d:	comisd xmm1,xmm0
   140015f51:	jmp    0x140015f72
   140015f53:	movsd  xmm0,QWORD PTR [rbp-0x50]
   140015f58:	comisd xmm0,xmm2
   140015f5c:	jbe    0x140015f68
   140015f5e:	comisd xmm1,xmm0
   140015f62:	ja     0x1400160e8
   140015f68:	comisd xmm0,xmm1
   140015f6c:	jbe    0x140015f78
   140015f6e:	comisd xmm2,xmm0
   140015f72:	ja     0x1400160e8
   140015f78:	movups xmm2,XMMWORD PTR [rdx]
   140015f7b:	movups xmm3,XMMWORD PTR [rcx]
   140015f7e:	movups xmm5,XMMWORD PTR [r11]
   140015f82:	movaps xmm0,xmm3
   140015f85:	movaps xmm1,xmm2
   140015f88:	unpckhpd xmm0,xmm3
   140015f8c:	unpckhpd xmm1,xmm2
   140015f90:	movsd  xmm4,QWORD PTR [r11+0x8]
   140015f96:	subsd  xmm5,xmm2
   140015f9a:	subsd  xmm0,xmm1
   140015f9e:	mulsd  xmm5,xmm0
   140015fa2:	subsd  xmm4,xmm1
   140015fa6:	subsd  xmm3,xmm2
   140015faa:	mulsd  xmm3,xmm4
   140015fae:	subsd  xmm5,xmm3
   140015fb2:	comisd xmm5,xmm7
   140015fb6:	jbe    0x140015fbc
   140015fb8:	mov    edx,eax
   140015fba:	jmp    0x140016037
   140015fbc:	xor    edx,edx
   140015fbe:	comisd xmm6,xmm5
   140015fc2:	setbe  dl
   140015fc5:	dec    edx
   140015fc7:	jne    0x140016037
   140015fc9:	movups xmm0,XMMWORD PTR [r11]
   140015fcd:	movups xmm1,xmm2
   140015fd0:	movaps XMMWORD PTR [rbp-0x30],xmm2
   140015fd4:	movups xmm2,XMMWORD PTR [rcx]
   140015fd7:	movaps XMMWORD PTR [rbp-0x50],xmm0
   140015fdb:	ucomisd xmm2,xmm1
   140015fdf:	movaps XMMWORD PTR [rbp-0x40],xmm2
   140015fe3:	jp     0x140016012
   140015fe5:	jne    0x140016012
   140015fe7:	movsd  xmm0,QWORD PTR [rbp-0x48]
   140015fec:	movsd  xmm1,QWORD PTR [rbp-0x38]
   140015ff1:	movsd  xmm3,QWORD PTR [rbp-0x28]
   140015ff6:	comisd xmm0,xmm1
   140015ffa:	jbe    0x140016006
   140015ffc:	comisd xmm3,xmm0
   140016000:	ja     0x1400160e8
   140016006:	comisd xmm0,xmm3
   14001600a:	jbe    0x140016037
   14001600c:	comisd xmm1,xmm0
   140016010:	jmp    0x140016031
   140016012:	movsd  xmm0,QWORD PTR [rbp-0x50]
   140016017:	comisd xmm0,xmm2
   14001601b:	jbe    0x140016027
   14001601d:	comisd xmm1,xmm0
   140016021:	ja     0x1400160e8
   140016027:	comisd xmm0,xmm1
   14001602b:	jbe    0x140016037
   14001602d:	comisd xmm2,xmm0
   140016031:	ja     0x1400160e8
   140016037:	movups xmm2,XMMWORD PTR [r11]
   14001603b:	movups xmm3,XMMWORD PTR [r8]
   14001603f:	movups xmm5,XMMWORD PTR [rcx]
   140016042:	movaps xmm0,xmm3
   140016045:	movaps xmm1,xmm2
   140016048:	unpckhpd xmm0,xmm3
   14001604c:	unpckhpd xmm1,xmm2
   140016050:	movsd  xmm4,QWORD PTR [rcx+0x8]
   140016055:	subsd  xmm5,xmm2
   140016059:	subsd  xmm0,xmm1
   14001605d:	mulsd  xmm5,xmm0
   140016061:	subsd  xmm4,xmm1
   140016065:	subsd  xmm3,xmm2
   140016069:	mulsd  xmm3,xmm4
   14001606d:	subsd  xmm5,xmm3
   140016071:	comisd xmm5,xmm7
   140016075:	jbe    0x14001607c
   140016077:	mov    r8d,eax
   14001607a:	jmp    0x14001608a
   14001607c:	xor    r8d,r8d
   14001607f:	comisd xmm6,xmm5
   140016083:	setbe  r8b
   140016087:	dec    r8d
   14001608a:	movups xmm3,XMMWORD PTR [rbx]
   14001608d:	movups xmm5,XMMWORD PTR [r10]
   140016091:	movsd  xmm4,QWORD PTR [r10+0x8]
   140016097:	movaps xmm1,xmm2
   14001609a:	unpckhpd xmm1,xmm2
   14001609e:	movaps xmm0,xmm3
   1400160a1:	unpckhpd xmm0,xmm3
   1400160a5:	subsd  xmm5,xmm2
   1400160a9:	subsd  xmm0,xmm1
   1400160ad:	subsd  xmm3,xmm2
   1400160b1:	mulsd  xmm5,xmm0
   1400160b5:	subsd  xmm4,xmm1
   1400160b9:	mulsd  xmm3,xmm4
   1400160bd:	subsd  xmm5,xmm3
   1400160c1:	comisd xmm5,xmm7
   1400160c5:	jbe    0x1400160cb
   1400160c7:	mov    ecx,eax
   1400160c9:	jmp    0x1400160d6
   1400160cb:	xor    ecx,ecx
   1400160cd:	comisd xmm6,xmm5
   1400160d1:	setbe  cl
   1400160d4:	dec    ecx
   1400160d6:	imul   edx,r9d
   1400160da:	test   edx,edx
   1400160dc:	jns    0x1400160e6
   1400160de:	imul   ecx,r8d
   1400160e2:	test   ecx,ecx
   1400160e4:	js     0x1400160e8
   1400160e6:	xor    eax,eax
   1400160e8:	mov    rbx,QWORD PTR [rsp+0x60]
   1400160ed:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   1400160f2:	movaps xmm7,XMMWORD PTR [rsp+0x30]
   1400160f7:	add    rsp,0x50
   1400160fb:	pop    rbp
   1400160fc:	ret    
   1400160fd:	int3   
   1400160fe:	int3   
   1400160ff:	int3   
   140016100:	mov    QWORD PTR [rsp+0x8],rbx
   140016105:	mov    QWORD PTR [rsp+0x10],rbp
   14001610a:	mov    QWORD PTR [rsp+0x18],rsi
   14001610f:	push   rdi
   140016110:	sub    rsp,0x50
   140016114:	xor    ebx,ebx
   140016116:	mov    rbp,rdx
   140016119:	mov    rdi,rcx
   14001611c:	cmp    DWORD PTR [rcx],ebx
   14001611e:	jle    0x140016176
   140016120:	mov    esi,ebx
   140016122:	mov    r8,QWORD PTR [rdi+0x10]
   140016126:	movups xmm0,XMMWORD PTR [rbp+0x0]
   14001612a:	lea    rsi,[rsi+0x4]
   14001612e:	movsxd rdx,DWORD PTR [rsi+r8*1-0x4]
   140016133:	lea    rcx,[rsp+0x40]
   140016138:	movaps XMMWORD PTR [rsp+0x30],xmm0
   14001613d:	mov    rax,rdx
   140016140:	shl    rax,0x4
   140016144:	add    rax,QWORD PTR [rdi+0x8]
   140016148:	mov    QWORD PTR [rsp+0x20],rax
   14001614d:	mov    eax,DWORD PTR [rsi+r8*1]
   140016151:	sub    eax,edx
   140016153:	lea    rdx,[rsp+0x30]
   140016158:	mov    DWORD PTR [rsp+0x28],eax
   14001615c:	movaps xmm1,XMMWORD PTR [rsp+0x20]
   140016161:	movdqa XMMWORD PTR [rsp+0x40],xmm1
   140016167:	call   0x140017e30
   14001616c:	test   eax,eax
   14001616e:	jne    0x140016190
   140016170:	inc    ebx
   140016172:	cmp    ebx,DWORD PTR [rdi]
   140016174:	jl     0x140016122
   140016176:	mov    eax,0xfffffba9
   14001617b:	mov    rbx,QWORD PTR [rsp+0x60]
   140016180:	mov    rbp,QWORD PTR [rsp+0x68]
   140016185:	mov    rsi,QWORD PTR [rsp+0x70]
   14001618a:	add    rsp,0x50
   14001618e:	pop    rdi
   14001618f:	ret    
   140016190:	mov    eax,ebx
   140016192:	jmp    0x14001617b
   140016194:	int3   
   140016195:	int3   
   140016196:	int3   
   140016197:	int3   
   140016198:	int3   
   140016199:	int3   
   14001619a:	int3   
   14001619b:	int3   
   14001619c:	int3   
   14001619d:	int3   
   14001619e:	int3   
   14001619f:	int3   
   1400161a0:	mov    rax,rsp
   1400161a3:	mov    QWORD PTR [rax+0x18],r8
   1400161a7:	push   rbp
   1400161a8:	push   rbx
   1400161a9:	push   rsi
   1400161aa:	push   rdi
   1400161ab:	push   r12
   1400161ad:	push   r13
   1400161af:	push   r14
   1400161b1:	push   r15
   1400161b3:	lea    rbp,[rax-0xc8]
   1400161ba:	sub    rsp,0x188
   1400161c1:	mov    rdi,rcx
   1400161c4:	movaps XMMWORD PTR [rax-0x58],xmm6
   1400161c8:	movaps XMMWORD PTR [rax-0x68],xmm7
   1400161cc:	mov    rsi,r8
   1400161cf:	mov    ebx,edx
   1400161d1:	movaps XMMWORD PTR [rax-0x78],xmm8
   1400161d6:	mov    eax,DWORD PTR [rcx+0x4]
   1400161d9:	mov    rcx,QWORD PTR [rcx+0x8]
   1400161dd:	mov    QWORD PTR [rbp+0xe8],rcx
   1400161e4:	mov    rcx,QWORD PTR [rdi+0x18]
   1400161e8:	mov    DWORD PTR [rbp+0xd8],eax
   1400161ee:	mov    QWORD PTR [rbp+0xd0],rcx
   1400161f5:	mov    rcx,QWORD PTR [rdi+0x20]
   1400161f9:	add    eax,0x2
   1400161fc:	mov    QWORD PTR [rsp+0x60],rcx
   140016201:	movsxd rcx,eax
   140016204:	shl    rcx,0x3
   140016208:	call   QWORD PTR [rip+0x26f5a]        # 0x14003d168
   14001620e:	mov    r14,rax
   140016211:	cmp    ebx,0xfffff752
   140016217:	jne    0x140016416
   14001621d:	movups xmm6,XMMWORD PTR [rsi]
   140016220:	xor    ebx,ebx
   140016222:	cmp    DWORD PTR [rdi],ebx
   140016224:	jle    0x140016282
   140016226:	xor    esi,esi
   140016228:	nop    DWORD PTR [rax+rax*1+0x0]
   140016230:	mov    rdx,QWORD PTR [rdi+0x10]
   140016234:	movdqa XMMWORD PTR [rsp+0x40],xmm6
   14001623a:	movsxd rcx,DWORD PTR [rsi+rdx*1]
   14001623e:	mov    rax,rcx
   140016241:	shl    rax,0x4
   140016245:	add    rax,QWORD PTR [rdi+0x8]
   140016249:	mov    QWORD PTR [rsp+0x50],rax
   14001624e:	mov    eax,DWORD PTR [rsi+rdx*1+0x4]
   140016252:	lea    rdx,[rsp+0x40]
   140016257:	sub    eax,ecx
   140016259:	lea    rcx,[rbp-0x60]
   14001625d:	mov    DWORD PTR [rsp+0x58],eax
   140016261:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140016266:	movdqa XMMWORD PTR [rbp-0x60],xmm0
   14001626b:	call   0x140017e30
   140016270:	test   eax,eax
   140016272:	jne    0x140016416
   140016278:	inc    ebx
   14001627a:	add    rsi,0x4
   14001627e:	cmp    ebx,DWORD PTR [rdi]
   140016280:	jl     0x140016230
   140016282:	mov    r9d,DWORD PTR [rbp+0xd8]
   140016289:	mov    r12d,r9d
   14001628c:	mov    r13d,r9d
   14001628f:	movsd  xmm7,QWORD PTR [rip+0x28079]        # 0x14003e310
   140016297:	movsd  xmm8,QWORD PTR [rip+0x28078]        # 0x14003e318
   1400162a0:	movaps XMMWORD PTR [rsp+0x140],xmm9
   1400162a9:	movaps XMMWORD PTR [rsp+0x130],xmm10
   1400162b2:	movaps XMMWORD PTR [rsp+0x120],xmm11
   1400162bb:	movaps XMMWORD PTR [rsp+0x110],xmm12
   1400162c4:	xor    edi,edi
   1400162c6:	movsxd r15,r12d
   1400162c9:	movaps XMMWORD PTR [rsp+0x100],xmm13
   1400162d2:	movaps XMMWORD PTR [rsp+0xf0],xmm14
   1400162db:	movaps XMMWORD PTR [rsp+0xe0],xmm15
   1400162e4:	test   r12d,r12d
   1400162e7:	jle    0x140016640
   1400162ed:	mov    r8,QWORD PTR [rbp+0xe0]
   1400162f4:	mov    r11,QWORD PTR [rsp+0x60]
   1400162f9:	mov    rax,QWORD PTR [rbp+0xd0]
   140016300:	movups xmm9,XMMWORD PTR [r8]
   140016304:	mov    r10,QWORD PTR [rbp+0xe8]
   14001630b:	sub    rax,r11
   14001630e:	movss  DWORD PTR [rsp+0x40],xmm9
   140016315:	mov    rsi,r11
   140016318:	mov    rbx,r10
   14001631b:	mov    QWORD PTR [rbp-0x60],rax
   14001631f:	movaps xmm0,xmm9
   140016323:	shufps xmm0,xmm9,0x55
   140016328:	movss  DWORD PTR [rsp+0x44],xmm0
   14001632e:	movaps XMMWORD PTR [rbp-0x70],xmm0
   140016332:	movaps xmm0,xmm9
   140016336:	shufps xmm0,xmm9,0xaa
   14001633b:	movss  DWORD PTR [rsp+0x48],xmm0
   140016341:	movaps XMMWORD PTR [rbp-0x40],xmm0
   140016345:	movaps xmm0,xmm9
   140016349:	shufps xmm0,xmm9,0xff
   14001634e:	movss  DWORD PTR [rsp+0x4c],xmm0
   140016354:	movaps XMMWORD PTR [rsp+0x70],xmm0
   140016359:	nop    DWORD PTR [rax+0x0]
   140016360:	movups xmm5,XMMWORD PTR [rbx]
   140016363:	movsxd rax,DWORD PTR [rax+rsi*1]
   140016367:	add    rax,rax
   14001636a:	movups xmm0,XMMWORD PTR [r10+rax*8]
   14001636f:	movss  xmm4,xmm5
   140016373:	movsxd rax,DWORD PTR [rsi]
   140016376:	movaps xmm12,xmm5
   14001637a:	movaps xmm13,xmm5
   14001637e:	add    rax,rax
   140016381:	movaps xmm14,xmm5
   140016385:	shufps xmm12,xmm5,0x55
   14001638a:	shufps xmm13,xmm5,0xaa
   14001638f:	movaps XMMWORD PTR [rsp+0x50],xmm0
   140016394:	movups xmm15,XMMWORD PTR [r10+rax*8]
   140016399:	unpcklps xmm4,xmm12
   14001639d:	shufps xmm14,xmm5,0xff
   1400163a2:	movss  xmm2,xmm15
   1400163a7:	movaps xmm1,xmm15
   1400163ab:	shufps xmm1,xmm15,0xaa
   1400163b0:	movaps xmm0,xmm15
   1400163b4:	movaps xmm6,xmm15
   1400163b8:	shufps xmm0,xmm15,0x55
   1400163bd:	movaps XMMWORD PTR [rbp-0x30],xmm1
   1400163c1:	movss  xmm3,xmm1
   1400163c5:	movsd  xmm1,QWORD PTR [rsp+0x40]
   1400163cb:	unpcklps xmm2,xmm0
   1400163ce:	movaps XMMWORD PTR [rbp-0x80],xmm0
   1400163d2:	movsd  xmm0,QWORD PTR [rsp+0x48]
   1400163d8:	shufps xmm6,xmm15,0xff
   1400163dd:	subsd  xmm4,xmm2
   1400163e1:	subsd  xmm1,xmm2
   1400163e5:	unpcklps xmm3,xmm6
   1400163e8:	movaps XMMWORD PTR [rbp-0x50],xmm6
   1400163ec:	subsd  xmm0,xmm3
   1400163f0:	mulsd  xmm4,xmm0
   1400163f4:	movss  xmm0,xmm13
   1400163f9:	unpcklps xmm0,xmm14
   1400163fd:	subsd  xmm0,xmm3
   140016401:	mulsd  xmm1,xmm0
   140016405:	subsd  xmm4,xmm1
   140016409:	comisd xmm4,xmm7
   14001640d:	jbe    0x14001643a
   14001640f:	mov    ecx,0x1
   140016414:	jmp    0x140016446
   140016416:	test   ebx,ebx
   140016418:	js     0x140016282
   14001641e:	mov    rax,QWORD PTR [rdi+0x10]
   140016422:	mov    r9d,DWORD PTR [rbp+0xd8]
   140016429:	movsxd rcx,ebx
   14001642c:	mov    r12d,DWORD PTR [rax+rcx*4]
   140016430:	mov    r13d,DWORD PTR [rax+rcx*4+0x4]
   140016435:	jmp    0x14001628f
   14001643a:	xor    ecx,ecx
   14001643c:	comisd xmm8,xmm4
   140016441:	setbe  cl
   140016444:	dec    ecx
   140016446:	movss  xmm6,DWORD PTR [rsp+0x50]
   14001644c:	movss  xmm0,DWORD PTR [rbp-0x40]
   140016451:	movss  xmm7,DWORD PTR [rsp+0x54]
   140016457:	unpcklps xmm0,XMMWORD PTR [rsp+0x70]
   14001645c:	movss  xmm10,DWORD PTR [rsp+0x58]
   140016463:	movss  xmm11,DWORD PTR [rsp+0x5c]
   14001646a:	movss  xmm4,xmm6
   14001646e:	unpcklps xmm4,xmm7
   140016471:	movss  xmm3,xmm5
   140016475:	movss  xmm2,xmm13
   14001647a:	movss  xmm1,xmm9
   14001647f:	unpcklps xmm1,XMMWORD PTR [rbp-0x70]
   140016483:	unpcklps xmm3,xmm12
   140016487:	unpcklps xmm2,xmm14
   14001648b:	subsd  xmm0,xmm2
   14001648f:	subsd  xmm4,xmm3
   140016493:	subsd  xmm1,xmm3
   140016497:	mulsd  xmm4,xmm0
   14001649b:	movss  xmm0,xmm10
   1400164a0:	unpcklps xmm0,xmm11
   1400164a4:	subsd  xmm0,xmm2
   1400164a8:	mulsd  xmm1,xmm0
   1400164ac:	subsd  xmm4,xmm1
   1400164b0:	comisd xmm4,QWORD PTR [rip+0x27e58]        # 0x14003e310
   1400164b8:	jbe    0x1400164c1
   1400164ba:	mov    edx,0x1
   1400164bf:	jmp    0x1400164cd
   1400164c1:	xor    edx,edx
   1400164c3:	comisd xmm8,xmm4
   1400164c8:	setbe  dl
   1400164cb:	dec    edx
   1400164cd:	movss  xmm0,DWORD PTR [rbp-0x30]
   1400164d2:	movss  xmm4,xmm6
   1400164d6:	movss  xmm3,xmm5
   1400164da:	unpcklps xmm4,xmm7
   1400164dd:	unpcklps xmm3,xmm12
   1400164e1:	movsd  xmm7,QWORD PTR [rip+0x27e27]        # 0x14003e310
   1400164e9:	subsd  xmm4,xmm3
   1400164ed:	movss  xmm2,xmm13
   1400164f2:	unpcklps xmm0,XMMWORD PTR [rbp-0x50]
   1400164f6:	unpcklps xmm2,xmm14
   1400164fa:	subsd  xmm0,xmm2
   1400164fe:	movss  xmm1,xmm15
   140016503:	unpcklps xmm1,XMMWORD PTR [rbp-0x80]
   140016507:	mulsd  xmm4,xmm0
   14001650b:	movss  xmm0,xmm10
   140016510:	subsd  xmm1,xmm3
   140016514:	unpcklps xmm0,xmm11
   140016518:	subsd  xmm0,xmm2
   14001651c:	mulsd  xmm1,xmm0
   140016520:	subsd  xmm4,xmm1
   140016524:	comisd xmm4,xmm7
   140016528:	ja     0x140016540
   14001652a:	xor    eax,eax
   14001652c:	comisd xmm8,xmm4
   140016531:	setbe  al
   140016534:	dec    eax
   140016536:	test   eax,eax
   140016538:	jg     0x140016540
   14001653a:	test   ecx,ecx
   14001653c:	jns    0x140016550
   14001653e:	jmp    0x140016548
   140016540:	test   ecx,ecx
   140016542:	js     0x140016606
   140016548:	test   edx,edx
   14001654a:	js     0x140016606
   140016550:	movups xmm0,XMMWORD PTR [r8]
   140016554:	mov    rax,QWORD PTR [rbp+0xd0]
   14001655b:	mov    QWORD PTR [rsp+0x38],r11
   140016560:	mov    QWORD PTR [rsp+0x30],rax
   140016565:	mov    QWORD PTR [rsp+0x28],r10
   14001656a:	mov    DWORD PTR [rsp+0x20],r9d
   14001656f:	movaps XMMWORD PTR [rbp-0x80],xmm5
   140016573:	movaps XMMWORD PTR [rbp-0x50],xmm0
   140016577:	lea    rdx,[rbp-0x80]
   14001657b:	lea    rcx,[rbp-0x50]
   14001657f:	mov    r9d,r13d
   140016582:	mov    r8d,r12d
   140016585:	call   0x140014f10
   14001658a:	test   eax,eax
   14001658c:	je     0x140016606
   14001658e:	movups xmm7,XMMWORD PTR [rbx]
   140016591:	mov    rax,QWORD PTR [rbp+0xe0]
   140016598:	movups xmm3,XMMWORD PTR [rax]
   14001659b:	movaps xmm4,xmm7
   14001659e:	movaps xmm5,xmm7
   1400165a1:	movaps xmm6,xmm7
   1400165a4:	shufps xmm4,xmm7,0x55
   1400165a8:	shufps xmm5,xmm7,0xff
   1400165ac:	shufps xmm6,xmm7,0xaa
   1400165b0:	movaps xmm0,xmm3
   1400165b3:	movaps xmm2,xmm3
   1400165b6:	movaps xmm1,xmm3
   1400165b9:	shufps xmm0,xmm3,0x55
   1400165bd:	shufps xmm1,xmm3,0xff
   1400165c1:	shufps xmm2,xmm3,0xaa
   1400165c5:	unpcklps xmm3,xmm0
   1400165c8:	movss  xmm0,xmm7
   1400165cc:	unpcklps xmm0,xmm4
   1400165cf:	subsd  xmm3,xmm0
   1400165d3:	movss  xmm0,xmm2
   1400165d7:	unpcklps xmm0,xmm1
   1400165da:	movss  xmm1,xmm6
   1400165de:	mulsd  xmm3,xmm3
   1400165e2:	unpcklps xmm1,xmm5
   1400165e5:	subsd  xmm0,xmm1
   1400165e9:	mulsd  xmm0,xmm0
   1400165ed:	addsd  xmm0,xmm3
   1400165f1:	call   0x14003b8ae
   1400165f6:	movsd  xmm7,QWORD PTR [rip+0x27d12]        # 0x14003e310
   1400165fe:	movsd  QWORD PTR [r14+rdi*8],xmm0
   140016604:	jmp    0x14001660e
   140016606:	mov    QWORD PTR [r14+rdi*8],0x0
   14001660e:	mov    r8,QWORD PTR [rbp+0xe0]
   140016615:	mov    r9d,DWORD PTR [rbp+0xd8]
   14001661c:	mov    r10,QWORD PTR [rbp+0xe8]
   140016623:	mov    r11,QWORD PTR [rsp+0x60]
   140016628:	mov    rax,QWORD PTR [rbp-0x60]
   14001662c:	inc    rdi
   14001662f:	add    rbx,0x10
   140016633:	add    rsi,0x4
   140016637:	cmp    rdi,r15
   14001663a:	jl     0x140016360
   140016640:	cmp    r12d,r13d
   140016643:	jge    0x140016657
   140016645:	mov    eax,r13d
   140016648:	lea    rdi,[r14+r15*8]
   14001664c:	sub    eax,r12d
   14001664f:	movsxd rcx,eax
   140016652:	xor    eax,eax
   140016654:	rep stos QWORD PTR es:[rdi],rax
   140016657:	movsxd r9,DWORD PTR [rbp+0xd8]
   14001665e:	movsxd rdi,r13d
   140016661:	mov    r15,r9
   140016664:	cmp    rdi,r9
   140016667:	jge    0x14001699f
   14001666d:	mov    r8,QWORD PTR [rbp+0xe0]
   140016674:	mov    r11,QWORD PTR [rsp+0x60]
   140016679:	mov    r10,QWORD PTR [rbp+0xe8]
   140016680:	movups xmm9,XMMWORD PTR [r8]
   140016684:	mov    rax,QWORD PTR [rbp+0xd0]
   14001668b:	mov    rbx,rdi
   14001668e:	movss  DWORD PTR [rsp+0x40],xmm9
   140016695:	shl    rbx,0x4
   140016699:	lea    rsi,[r11+rdi*4]
   14001669d:	movaps xmm0,xmm9
   1400166a1:	shufps xmm0,xmm9,0x55
   1400166a6:	add    rbx,r10
   1400166a9:	sub    rax,r11
   1400166ac:	movss  DWORD PTR [rsp+0x44],xmm0
   1400166b2:	movaps XMMWORD PTR [rbp-0x30],xmm0
   1400166b6:	movaps xmm0,xmm9
   1400166ba:	mov    QWORD PTR [rbp-0x60],rax
   1400166be:	shufps xmm0,xmm9,0xaa
   1400166c3:	movss  DWORD PTR [rsp+0x48],xmm0
   1400166c9:	movaps XMMWORD PTR [rbp-0x80],xmm0
   1400166cd:	movaps xmm0,xmm9
   1400166d1:	shufps xmm0,xmm9,0xff
   1400166d6:	movss  DWORD PTR [rsp+0x4c],xmm0
   1400166dc:	movaps XMMWORD PTR [rbp-0x50],xmm0
   1400166e0:	movups xmm5,XMMWORD PTR [rbx]
   1400166e3:	movsxd rax,DWORD PTR [rsi+rax*1]
   1400166e7:	add    rax,rax
   1400166ea:	movups xmm0,XMMWORD PTR [r10+rax*8]
   1400166ef:	movss  xmm4,xmm5
   1400166f3:	movsxd rax,DWORD PTR [rsi]
   1400166f6:	movaps xmm12,xmm5
   1400166fa:	movaps xmm13,xmm5
   1400166fe:	add    rax,rax
   140016701:	movaps xmm14,xmm5
   140016705:	shufps xmm12,xmm5,0x55
   14001670a:	shufps xmm13,xmm5,0xaa
   14001670f:	movaps XMMWORD PTR [rsp+0x50],xmm0
   140016714:	movups xmm15,XMMWORD PTR [r10+rax*8]
   140016719:	unpcklps xmm4,xmm12
   14001671d:	shufps xmm14,xmm5,0xff
   140016722:	movss  xmm2,xmm15
   140016727:	movaps xmm1,xmm15
   14001672b:	shufps xmm1,xmm15,0xaa
   140016730:	movaps xmm0,xmm15
   140016734:	movaps xmm6,xmm15
   140016738:	shufps xmm0,xmm15,0x55
   14001673d:	movaps XMMWORD PTR [rbp-0x70],xmm1
   140016741:	movss  xmm3,xmm1
   140016745:	movsd  xmm1,QWORD PTR [rsp+0x40]
   14001674b:	unpcklps xmm2,xmm0
   14001674e:	movaps XMMWORD PTR [rbp-0x40],xmm0
   140016752:	movsd  xmm0,QWORD PTR [rsp+0x48]
   140016758:	shufps xmm6,xmm15,0xff
   14001675d:	subsd  xmm4,xmm2
   140016761:	subsd  xmm1,xmm2
   140016765:	unpcklps xmm3,xmm6
   140016768:	movaps XMMWORD PTR [rsp+0x70],xmm6
   14001676d:	subsd  xmm0,xmm3
   140016771:	mulsd  xmm4,xmm0
   140016775:	movss  xmm0,xmm13
   14001677a:	unpcklps xmm0,xmm14
   14001677e:	subsd  xmm0,xmm3
   140016782:	mulsd  xmm1,xmm0
   140016786:	subsd  xmm4,xmm1
   14001678a:	comisd xmm4,xmm7
   14001678e:	jbe    0x140016797
   140016790:	mov    ecx,0x1
   140016795:	jmp    0x1400167a3
   140016797:	xor    ecx,ecx
   140016799:	comisd xmm8,xmm4
   14001679e:	setbe  cl
   1400167a1:	dec    ecx
   1400167a3:	movss  xmm6,DWORD PTR [rsp+0x50]
   1400167a9:	movss  xmm0,DWORD PTR [rbp-0x80]
   1400167ae:	movss  xmm7,DWORD PTR [rsp+0x54]
   1400167b4:	unpcklps xmm0,XMMWORD PTR [rbp-0x50]
   1400167b8:	movss  xmm10,DWORD PTR [rsp+0x58]
   1400167bf:	movss  xmm11,DWORD PTR [rsp+0x5c]
   1400167c6:	movss  xmm4,xmm6
   1400167ca:	unpcklps xmm4,xmm7
   1400167cd:	movss  xmm3,xmm5
   1400167d1:	movss  xmm2,xmm13
   1400167d6:	movss  xmm1,xmm9
   1400167db:	unpcklps xmm1,XMMWORD PTR [rbp-0x30]
   1400167df:	unpcklps xmm3,xmm12
   1400167e3:	unpcklps xmm2,xmm14
   1400167e7:	subsd  xmm0,xmm2
   1400167eb:	subsd  xmm4,xmm3
   1400167ef:	subsd  xmm1,xmm3
   1400167f3:	mulsd  xmm4,xmm0
   1400167f7:	movss  xmm0,xmm10
   1400167fc:	unpcklps xmm0,xmm11
   140016800:	subsd  xmm0,xmm2
   140016804:	mulsd  xmm1,xmm0
   140016808:	subsd  xmm4,xmm1
   14001680c:	comisd xmm4,QWORD PTR [rip+0x27afc]        # 0x14003e310
   140016814:	jbe    0x14001681d
   140016816:	mov    edx,0x1
   14001681b:	jmp    0x140016829
   14001681d:	xor    edx,edx
   14001681f:	comisd xmm8,xmm4
   140016824:	setbe  dl
   140016827:	dec    edx
   140016829:	movss  xmm0,DWORD PTR [rbp-0x70]
   14001682e:	movss  xmm4,xmm6
   140016832:	movss  xmm3,xmm5
   140016836:	unpcklps xmm4,xmm7
   140016839:	unpcklps xmm3,xmm12
   14001683d:	movsd  xmm7,QWORD PTR [rip+0x27acb]        # 0x14003e310
   140016845:	subsd  xmm4,xmm3
   140016849:	movss  xmm2,xmm13
   14001684e:	unpcklps xmm0,XMMWORD PTR [rsp+0x70]
   140016853:	unpcklps xmm2,xmm14
   140016857:	subsd  xmm0,xmm2
   14001685b:	movss  xmm1,xmm15
   140016860:	unpcklps xmm1,XMMWORD PTR [rbp-0x40]
   140016864:	mulsd  xmm4,xmm0
   140016868:	movss  xmm0,xmm10
   14001686d:	subsd  xmm1,xmm3
   140016871:	unpcklps xmm0,xmm11
   140016875:	subsd  xmm0,xmm2
   140016879:	mulsd  xmm1,xmm0
   14001687d:	subsd  xmm4,xmm1
   140016881:	comisd xmm4,xmm7
   140016885:	ja     0x14001689d
   140016887:	xor    eax,eax
   140016889:	comisd xmm8,xmm4
   14001688e:	setbe  al
   140016891:	dec    eax
   140016893:	test   eax,eax
   140016895:	jg     0x14001689d
   140016897:	test   ecx,ecx
   140016899:	jns    0x1400168ad
   14001689b:	jmp    0x1400168a5
   14001689d:	test   ecx,ecx
   14001689f:	js     0x140016965
   1400168a5:	test   edx,edx
   1400168a7:	js     0x140016965
   1400168ad:	movups xmm0,XMMWORD PTR [r8]
   1400168b1:	mov    rax,QWORD PTR [rbp+0xd0]
   1400168b8:	mov    QWORD PTR [rsp+0x38],r11
   1400168bd:	mov    QWORD PTR [rsp+0x30],rax
   1400168c2:	mov    QWORD PTR [rsp+0x28],r10
   1400168c7:	mov    DWORD PTR [rsp+0x20],r9d
   1400168cc:	movaps XMMWORD PTR [rbp-0x70],xmm5
   1400168d0:	movaps XMMWORD PTR [rsp+0x70],xmm0
   1400168d5:	lea    rdx,[rbp-0x70]
   1400168d9:	lea    rcx,[rsp+0x70]
   1400168de:	mov    r9d,r13d
   1400168e1:	mov    r8d,r12d
   1400168e4:	call   0x140014f10
   1400168e9:	test   eax,eax
   1400168eb:	je     0x140016965
   1400168ed:	movups xmm7,XMMWORD PTR [rbx]
   1400168f0:	mov    rax,QWORD PTR [rbp+0xe0]
   1400168f7:	movups xmm3,XMMWORD PTR [rax]
   1400168fa:	movaps xmm4,xmm7
   1400168fd:	movaps xmm5,xmm7
   140016900:	movaps xmm6,xmm7
   140016903:	shufps xmm4,xmm7,0x55
   140016907:	shufps xmm5,xmm7,0xff
   14001690b:	shufps xmm6,xmm7,0xaa
   14001690f:	movaps xmm0,xmm3
   140016912:	movaps xmm2,xmm3
   140016915:	movaps xmm1,xmm3
   140016918:	shufps xmm0,xmm3,0x55
   14001691c:	shufps xmm1,xmm3,0xff
   140016920:	shufps xmm2,xmm3,0xaa
   140016924:	unpcklps xmm3,xmm0
   140016927:	movss  xmm0,xmm7
   14001692b:	unpcklps xmm0,xmm4
   14001692e:	subsd  xmm3,xmm0
   140016932:	movss  xmm0,xmm2
   140016936:	unpcklps xmm0,xmm1
   140016939:	movss  xmm1,xmm6
   14001693d:	mulsd  xmm3,xmm3
   140016941:	unpcklps xmm1,xmm5
   140016944:	subsd  xmm0,xmm1
   140016948:	mulsd  xmm0,xmm0
   14001694c:	addsd  xmm0,xmm3
   140016950:	call   0x14003b8ae
   140016955:	movsd  xmm7,QWORD PTR [rip+0x279b3]        # 0x14003e310
   14001695d:	movsd  QWORD PTR [r14+rdi*8],xmm0
   140016963:	jmp    0x14001696d
   140016965:	mov    QWORD PTR [r14+rdi*8],0x0
   14001696d:	mov    r8,QWORD PTR [rbp+0xe0]
   140016974:	mov    r9d,DWORD PTR [rbp+0xd8]
   14001697b:	mov    r10,QWORD PTR [rbp+0xe8]
   140016982:	mov    r11,QWORD PTR [rsp+0x60]
   140016987:	mov    rax,QWORD PTR [rbp-0x60]
   14001698b:	inc    rdi
   14001698e:	add    rbx,0x10
   140016992:	add    rsi,0x4
   140016996:	cmp    rdi,r15
   140016999:	jl     0x1400166e0
   14001699f:	movaps xmm15,XMMWORD PTR [rsp+0xe0]
   1400169a8:	movaps xmm14,XMMWORD PTR [rsp+0xf0]
   1400169b1:	movaps xmm13,XMMWORD PTR [rsp+0x100]
   1400169ba:	lea    r11,[rsp+0x188]
   1400169c2:	mov    QWORD PTR [r14+r15*8],0x0
   1400169ca:	mov    QWORD PTR [r14+r15*8+0x8],0x0
   1400169d3:	mov    rax,r14
   1400169d6:	movaps xmm6,XMMWORD PTR [r11-0x18]
   1400169db:	movaps xmm7,XMMWORD PTR [r11-0x28]
   1400169e0:	movaps xmm8,XMMWORD PTR [r11-0x38]
   1400169e5:	movaps xmm12,XMMWORD PTR [rsp+0x110]
   1400169ee:	movaps xmm11,XMMWORD PTR [rsp+0x120]
   1400169f7:	movaps xmm10,XMMWORD PTR [rsp+0x130]
   140016a00:	movaps xmm9,XMMWORD PTR [rsp+0x140]
   140016a09:	mov    rsp,r11
   140016a0c:	pop    r15
   140016a0e:	pop    r14
   140016a10:	pop    r13
   140016a12:	pop    r12
   140016a14:	pop    rdi
   140016a15:	pop    rsi
   140016a16:	pop    rbx
   140016a17:	pop    rbp
   140016a18:	ret    
   140016a19:	int3   
   140016a1a:	int3   
   140016a1b:	int3   
   140016a1c:	int3   
   140016a1d:	int3   
   140016a1e:	int3   
   140016a1f:	int3   
   140016a20:	rex push rbx
   140016a22:	sub    rsp,0x20
   140016a26:	mov    rbx,rcx
   140016a29:	mov    ecx,DWORD PTR [rcx+0x4]
   140016a2c:	mov    edx,0x2
   140016a31:	call   0x140014e30
   140016a36:	xor    edx,edx
   140016a38:	mov    rcx,rbx
   140016a3b:	mov    QWORD PTR [rbx+0x28],rax
   140016a3f:	add    rsp,0x20
   140016a43:	pop    rbx
   140016a44:	jmp    0x1400154b0
   140016a49:	int3   
   140016a4a:	int3   
   140016a4b:	int3   
   140016a4c:	int3   
   140016a4d:	int3   
   140016a4e:	int3   
   140016a4f:	int3   
   140016a50:	movsd  xmm0,QWORD PTR [r8]
   140016a55:	movsd  xmm4,QWORD PTR [rcx+0x8]
   140016a5a:	movsd  xmm1,QWORD PTR [r8+0x8]
   140016a60:	subsd  xmm0,QWORD PTR [rdx]
   140016a64:	subsd  xmm4,QWORD PTR [rdx+0x8]
   140016a69:	subsd  xmm1,QWORD PTR [rdx+0x8]
   140016a6e:	mulsd  xmm4,xmm0
   140016a72:	movsd  xmm0,QWORD PTR [rcx]
   140016a76:	subsd  xmm0,QWORD PTR [rdx]
   140016a7a:	mulsd  xmm1,xmm0
   140016a7e:	subsd  xmm4,xmm1
   140016a82:	comisd xmm4,QWORD PTR [rip+0x27886]        # 0x14003e310
   140016a8a:	jbe    0x140016a92
   140016a8c:	mov    eax,0x1
   140016a91:	ret    
   140016a92:	movsd  xmm0,QWORD PTR [rip+0x2787e]        # 0x14003e318
   140016a9a:	xor    eax,eax
   140016a9c:	comisd xmm0,xmm4
   140016aa0:	setbe  al
   140016aa3:	dec    eax
   140016aa5:	ret    
   140016aa6:	int3   
   140016aa7:	int3   
   140016aa8:	int3   
   140016aa9:	int3   
   140016aaa:	int3   
   140016aab:	int3   
   140016aac:	int3   
   140016aad:	int3   
   140016aae:	int3   
   140016aaf:	int3   
   140016ab0:	mov    QWORD PTR [rsp+0x8],rbx
   140016ab5:	mov    QWORD PTR [rsp+0x10],rsi
   140016aba:	push   rdi
   140016abb:	sub    rsp,0x20
   140016abf:	mov    rdi,rcx
   140016ac2:	movsxd rcx,DWORD PTR [rcx+0x4]
   140016ac6:	mov    rbx,r8
   140016ac9:	shl    rcx,0x5
   140016acd:	mov    rsi,rdx
   140016ad0:	call   QWORD PTR [rip+0x26692]        # 0x14003d168
   140016ad6:	xor    r8d,r8d
   140016ad9:	mov    QWORD PTR [rsi],rax
   140016adc:	mov    eax,DWORD PTR [rdi+0x4]
   140016adf:	mov    DWORD PTR [rbx],eax
   140016ae1:	cmp    DWORD PTR [rdi+0x4],r8d
   140016ae5:	jle    0x140016b50
   140016ae7:	mov    r10d,r8d
   140016aea:	mov    r9d,r8d
   140016aed:	nop    DWORD PTR [rax]
   140016af0:	mov    rcx,QWORD PTR [rsi]
   140016af3:	mov    rax,QWORD PTR [rdi+0x8]
   140016af7:	inc    r8d
   140016afa:	mov    rax,QWORD PTR [r9+rax*1]
   140016afe:	lea    r9,[r9+0x10]
   140016b02:	lea    r10,[r10+0x4]
   140016b06:	mov    QWORD PTR [rcx],rax
   140016b09:	mov    rcx,QWORD PTR [rsi]
   140016b0c:	mov    rax,QWORD PTR [rdi+0x8]
   140016b10:	mov    rax,QWORD PTR [r9+rax*1-0x8]
   140016b15:	lea    rsi,[rsi+0x8]
   140016b19:	mov    QWORD PTR [rcx+0x8],rax
   140016b1d:	mov    rax,QWORD PTR [rdi+0x18]
   140016b21:	mov    rcx,QWORD PTR [rsi-0x8]
   140016b25:	movsxd rdx,DWORD PTR [r10+rax*1-0x4]
   140016b2a:	mov    rax,QWORD PTR [rdi+0x8]
   140016b2e:	add    rdx,rdx
   140016b31:	mov    rax,QWORD PTR [rax+rdx*8]
   140016b35:	mov    QWORD PTR [rcx+0x10],rax
   140016b39:	mov    rax,QWORD PTR [rdi+0x8]
   140016b3d:	mov    rcx,QWORD PTR [rsi-0x8]
   140016b41:	mov    rax,QWORD PTR [rax+rdx*8+0x8]
   140016b46:	mov    QWORD PTR [rcx+0x18],rax
   140016b4a:	cmp    r8d,DWORD PTR [rdi+0x4]
   140016b4e:	jl     0x140016af0
   140016b50:	mov    rbx,QWORD PTR [rsp+0x30]
   140016b55:	mov    rsi,QWORD PTR [rsp+0x38]
   140016b5a:	mov    eax,0x1
   140016b5f:	add    rsp,0x20
   140016b63:	pop    rdi
   140016b64:	ret    
   140016b65:	int3   
   140016b66:	int3   
   140016b67:	int3   
   140016b68:	int3   
   140016b69:	int3   
   140016b6a:	int3   
   140016b6b:	int3   
   140016b6c:	int3   
   140016b6d:	int3   
   140016b6e:	int3   
   140016b6f:	int3   
   140016b70:	rex push rbx
   140016b72:	sub    rsp,0x20
   140016b76:	mov    rbx,rcx
   140016b79:	mov    rcx,QWORD PTR [rcx+0x8]
   140016b7d:	call   QWORD PTR [rip+0x2671d]        # 0x14003d2a0
   140016b83:	mov    rcx,QWORD PTR [rbx+0x10]
   140016b87:	call   QWORD PTR [rip+0x26713]        # 0x14003d2a0
   140016b8d:	mov    rcx,QWORD PTR [rbx+0x18]
   140016b91:	call   QWORD PTR [rip+0x26709]        # 0x14003d2a0
   140016b97:	mov    rcx,QWORD PTR [rbx+0x20]
   140016b9b:	call   QWORD PTR [rip+0x266ff]        # 0x14003d2a0
   140016ba1:	mov    rcx,QWORD PTR [rbx+0x28]
   140016ba5:	add    rsp,0x20
   140016ba9:	pop    rbx
   140016baa:	rex.W jmp QWORD PTR [rip+0x266ef]        # 0x14003d2a0
   140016bb1:	int3   
   140016bb2:	int3   
   140016bb3:	int3   
   140016bb4:	int3   
   140016bb5:	int3   
   140016bb6:	int3   
   140016bb7:	int3   
   140016bb8:	int3   
   140016bb9:	int3   
   140016bba:	int3   
   140016bbb:	int3   
   140016bbc:	int3   
   140016bbd:	int3   
   140016bbe:	int3   
   140016bbf:	int3   
   140016bc0:	mov    QWORD PTR [rsp+0x20],rbx
   140016bc5:	push   rbp
   140016bc6:	push   rsi
   140016bc7:	push   rdi
   140016bc8:	push   r14
   140016bca:	push   r15
   140016bcc:	sub    rsp,0x20
   140016bd0:	mov    rdi,rcx
   140016bd3:	xor    esi,esi
   140016bd5:	mov    r15d,edx
   140016bd8:	lea    ecx,[rsi+0x30]
   140016bdb:	xor    r14d,r14d
   140016bde:	call   QWORD PTR [rip+0x26584]        # 0x14003d168
   140016be4:	movsxd r8,r15d
   140016be7:	xor    ebp,ebp
   140016be9:	xor    ecx,ecx
   140016beb:	mov    rbx,rax
   140016bee:	cmp    r8,0x2
   140016bf2:	jl     0x140016c19
   140016bf4:	lea    rdx,[r8-0x1]
   140016bf8:	nop    DWORD PTR [rax+rax*1+0x0]
   140016c00:	mov    rax,QWORD PTR [rdi+rcx*8]
   140016c04:	add    rcx,0x2
   140016c08:	add    esi,DWORD PTR [rax+0x8]
   140016c0b:	mov    rax,QWORD PTR [rdi+rcx*8-0x8]
   140016c10:	add    r14d,DWORD PTR [rax+0x8]
   140016c14:	cmp    rcx,rdx
   140016c17:	jl     0x140016c00
   140016c19:	cmp    rcx,r8
   140016c1c:	jge    0x140016c25
   140016c1e:	mov    rax,QWORD PTR [rdi+rcx*8]
   140016c22:	mov    ebp,DWORD PTR [rax+0x8]
   140016c25:	lea    eax,[r14+rsi*1]
   140016c29:	add    ebp,eax
   140016c2b:	movsxd rsi,ebp
   140016c2e:	mov    rcx,rsi
   140016c31:	shl    rcx,0x4
   140016c35:	test   rcx,rcx
   140016c38:	je     0x140016c42
   140016c3a:	call   QWORD PTR [rip+0x26528]        # 0x14003d168
   140016c40:	jmp    0x140016c44
   140016c42:	xor    eax,eax
   140016c44:	mov    QWORD PTR [rbx+0x8],rax
   140016c48:	lea    eax,[r15+0x1]
   140016c4c:	movsxd rcx,eax
   140016c4f:	shl    rcx,0x2
   140016c53:	test   rcx,rcx
   140016c56:	je     0x140016c60
   140016c58:	call   QWORD PTR [rip+0x2650a]        # 0x14003d168
   140016c5e:	jmp    0x140016c62
   140016c60:	xor    eax,eax
   140016c62:	lea    rsi,[rsi*4+0x0]
   140016c6a:	mov    QWORD PTR [rbx+0x10],rax
   140016c6e:	test   rsi,rsi
   140016c71:	je     0x140016c7e
   140016c73:	mov    rcx,rsi
   140016c76:	call   QWORD PTR [rip+0x264ec]        # 0x14003d168
   140016c7c:	jmp    0x140016c80
   140016c7e:	xor    eax,eax
   140016c80:	mov    QWORD PTR [rbx+0x18],rax
   140016c84:	test   rsi,rsi
   140016c87:	je     0x140016c94
   140016c89:	mov    rcx,rsi
   140016c8c:	call   QWORD PTR [rip+0x264d6]        # 0x14003d168
   140016c92:	jmp    0x140016c96
   140016c94:	xor    eax,eax
   140016c96:	mov    QWORD PTR [rbx+0x20],rax
   140016c9a:	xor    edx,edx
   140016c9c:	xor    eax,eax
   140016c9e:	mov    DWORD PTR [rbx+0x4],ebp
   140016ca1:	mov    DWORD PTR [rbx],r15d
   140016ca4:	test   r15d,r15d
   140016ca7:	jle    0x140016d75
   140016cad:	mov    QWORD PTR [rsp+0x50],r12
   140016cb2:	xor    r10d,r10d
   140016cb5:	mov    QWORD PTR [rsp+0x60],r15
   140016cba:	mov    QWORD PTR [rsp+0x58],r13
   140016cbf:	xor    r14d,r14d
   140016cc2:	nop    DWORD PTR [rax+0x0]
   140016cc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140016cd0:	mov    rax,QWORD PTR [rbx+0x10]
   140016cd4:	lea    ebp,[rdx-0x1]
   140016cd7:	xor    esi,esi
   140016cd9:	mov    DWORD PTR [r14+rax*1],edx
   140016cdd:	mov    rcx,QWORD PTR [rdi]
   140016ce0:	mov    r12d,edx
   140016ce3:	mov    eax,DWORD PTR [rcx+0x8]
   140016ce6:	mov    r13,r10
   140016ce9:	add    ebp,eax
   140016ceb:	test   eax,eax
   140016ced:	jle    0x140016d42
   140016cef:	mov    r8,r10
   140016cf2:	lea    r9d,[rdx-0x1]
   140016cf6:	shl    r8,0x4
   140016cfa:	xor    r11d,r11d
   140016cfd:	nop    DWORD PTR [rax]
   140016d00:	mov    rcx,QWORD PTR [rcx]
   140016d03:	mov    rax,QWORD PTR [rbx+0x8]
   140016d07:	inc    esi
   140016d09:	inc    edx
   140016d0b:	inc    r10
   140016d0e:	lea    r8,[r8+0x10]
   140016d12:	movups xmm0,XMMWORD PTR [r11+rcx*1]
   140016d17:	movups XMMWORD PTR [rax+r8*1-0x10],xmm0
   140016d1d:	mov    rax,QWORD PTR [rbx+0x18]
   140016d21:	lea    ecx,[r9+0x2]
   140016d25:	lea    r11,[r11+0x10]
   140016d29:	mov    DWORD PTR [rax+r10*4-0x4],ecx
   140016d2e:	mov    rax,QWORD PTR [rbx+0x20]
   140016d32:	mov    DWORD PTR [rax+r10*4-0x4],r9d
   140016d37:	mov    rcx,QWORD PTR [rdi]
   140016d3a:	inc    r9d
   140016d3d:	cmp    esi,DWORD PTR [rcx+0x8]
   140016d40:	jl     0x140016d00
   140016d42:	mov    rax,QWORD PTR [rbx+0x18]
   140016d46:	movsxd rcx,ebp
   140016d49:	add    r14,0x4
   140016d4d:	mov    DWORD PTR [rax+rcx*4],r12d
   140016d51:	mov    rax,QWORD PTR [rbx+0x20]
   140016d55:	add    rdi,0x8
   140016d59:	mov    DWORD PTR [rax+r13*4],ebp
   140016d5d:	dec    r15
   140016d60:	jne    0x140016cd0
   140016d66:	mov    rax,QWORD PTR [rsp+0x60]
   140016d6b:	mov    r13,QWORD PTR [rsp+0x58]
   140016d70:	mov    r12,QWORD PTR [rsp+0x50]
   140016d75:	movsxd rcx,eax
   140016d78:	mov    rax,QWORD PTR [rbx+0x10]
   140016d7c:	mov    DWORD PTR [rax+rcx*4],edx
   140016d7f:	mov    rcx,rbx
   140016d82:	call   0x140016a20
   140016d87:	mov    rax,rbx
   140016d8a:	mov    rbx,QWORD PTR [rsp+0x68]
   140016d8f:	add    rsp,0x20
   140016d93:	pop    r15
   140016d95:	pop    r14
   140016d97:	pop    rdi
   140016d98:	pop    rsi
   140016d99:	pop    rbp
   140016d9a:	ret    
   140016d9b:	int3   
   140016d9c:	int3   
   140016d9d:	int3   
   140016d9e:	int3   
   140016d9f:	int3   
   140016da0:	mov    QWORD PTR [rsp+0x8],rbx
   140016da5:	mov    QWORD PTR [rsp+0x10],rbp
   140016daa:	mov    QWORD PTR [rsp+0x18],rsi
   140016daf:	push   rdi
   140016db0:	push   r12
   140016db2:	push   r13
   140016db4:	push   r14
   140016db6:	push   r15
   140016db8:	sub    rsp,0x60
   140016dbc:	movups xmm0,XMMWORD PTR [rdx]
   140016dbf:	mov    edi,r8d
   140016dc2:	mov    r13,rdx
   140016dc5:	lea    r8,[rsp+0x40]
   140016dca:	mov    edx,edi
   140016dcc:	mov    r12,r9
   140016dcf:	mov    rsi,rcx
   140016dd2:	movaps XMMWORD PTR [rsp+0x40],xmm0
   140016dd7:	call   0x1400161a0
   140016ddc:	mov    ebx,DWORD PTR [rsp+0xb0]
   140016de3:	movups xmm0,XMMWORD PTR [r12]
   140016de8:	lea    r8,[rsp+0x40]
   140016ded:	mov    rcx,rsi
   140016df0:	mov    edx,ebx
   140016df2:	movaps XMMWORD PTR [rsp+0x40],xmm0
   140016df7:	mov    r15,rax
   140016dfa:	call   0x1400161a0
   140016dff:	mov    QWORD PTR [rsp+0x30],rsi
   140016e04:	movups xmm0,XMMWORD PTR [r12]
   140016e09:	mov    QWORD PTR [rsp+0x28],rax
   140016e0e:	lea    r9,[rsp+0x40]
   140016e13:	lea    rcx,[rsp+0x50]
   140016e18:	movaps XMMWORD PTR [rsp+0x40],xmm0
   140016e1d:	movups xmm0,XMMWORD PTR [r13+0x0]
   140016e22:	mov    r8,r15
   140016e25:	mov    edx,edi
   140016e27:	mov    r14,rax
   140016e2a:	movaps XMMWORD PTR [rsp+0x50],xmm0
   140016e2f:	mov    DWORD PTR [rsp+0x20],ebx
   140016e33:	call   0x140013170
   140016e38:	movsxd rdx,DWORD PTR [rsi+0x4]
   140016e3c:	mov    r8d,DWORD PTR [rax+rdx*4]
   140016e40:	inc    edx
   140016e42:	mov    rdi,rax
   140016e45:	mov    ebx,0x1
   140016e4a:	cmp    r8d,edx
   140016e4d:	je     0x140016e5e
   140016e4f:	nop
   140016e50:	movsxd rcx,r8d
   140016e53:	inc    ebx
   140016e55:	mov    r8d,DWORD PTR [rax+rcx*4]
   140016e59:	cmp    r8d,edx
   140016e5c:	jne    0x140016e50
   140016e5e:	inc    ebx
   140016e60:	movsxd rcx,ebx
   140016e63:	shl    rcx,0x4
   140016e67:	call   QWORD PTR [rip+0x262fb]        # 0x14003d168
   140016e6d:	lea    r9d,[rbx-0x1]
   140016e71:	movups xmm0,XMMWORD PTR [r12]
   140016e76:	movsxd rcx,r9d
   140016e79:	dec    r9d
   140016e7c:	add    rcx,rcx
   140016e7f:	mov    rbp,rax
   140016e82:	movups XMMWORD PTR [rax+rcx*8],xmm0
   140016e86:	movsxd rdx,DWORD PTR [rsi+0x4]
   140016e8a:	mov    r8d,DWORD PTR [rdi+rdx*4]
   140016e8e:	lea    ecx,[rdx+0x1]
   140016e91:	cmp    r8d,ecx
   140016e94:	je     0x140016eca
   140016e96:	movsxd rax,r9d
   140016e99:	shl    rax,0x4
   140016e9d:	add    rax,rbp
   140016ea0:	mov    rcx,QWORD PTR [rsi+0x8]
   140016ea4:	movsxd r8,r8d
   140016ea7:	dec    r9d
   140016eaa:	mov    rdx,r8
   140016ead:	lea    rax,[rax-0x10]
   140016eb1:	add    rdx,rdx
   140016eb4:	movups xmm0,XMMWORD PTR [rcx+rdx*8]
   140016eb8:	movups XMMWORD PTR [rax+0x10],xmm0
   140016ebc:	mov    ecx,DWORD PTR [rsi+0x4]
   140016ebf:	mov    r8d,DWORD PTR [rdi+r8*4]
   140016ec3:	inc    ecx
   140016ec5:	cmp    r8d,ecx
   140016ec8:	jne    0x140016ea0
   140016eca:	movups xmm0,XMMWORD PTR [r13+0x0]
   140016ecf:	movsxd rax,r9d
   140016ed2:	add    rax,rax
   140016ed5:	movups XMMWORD PTR [rbp+rax*8+0x0],xmm0
   140016eda:	test   r9d,r9d
   140016edd:	je     0x140016ef9
   140016edf:	lea    rdx,[rip+0x2743a]        # 0x14003e320
   140016ee6:	lea    rcx,[rip+0x27493]        # 0x14003e380
   140016eed:	mov    r8d,0x84
   140016ef3:	call   QWORD PTR [rip+0x26197]        # 0x14003d090
   140016ef9:	test   r15,r15
   140016efc:	je     0x140016f07
   140016efe:	mov    rcx,r15
   140016f01:	call   QWORD PTR [rip+0x26399]        # 0x14003d2a0
   140016f07:	test   r14,r14
   140016f0a:	je     0x140016f15
   140016f0c:	mov    rcx,r14
   140016f0f:	call   QWORD PTR [rip+0x2638b]        # 0x14003d2a0
   140016f15:	mov    rcx,QWORD PTR [rsp+0xb8]
   140016f1d:	lea    r11,[rsp+0x60]
   140016f22:	mov    eax,0x1
   140016f27:	mov    rsi,QWORD PTR [r11+0x40]
   140016f2b:	mov    DWORD PTR [rcx+0x8],ebx
   140016f2e:	mov    rbx,QWORD PTR [r11+0x30]
   140016f32:	mov    QWORD PTR [rcx],rbp
   140016f35:	mov    rbp,QWORD PTR [r11+0x38]
   140016f39:	mov    rsp,r11
   140016f3c:	pop    r15
   140016f3e:	pop    r14
   140016f40:	pop    r13
   140016f42:	pop    r12
   140016f44:	pop    rdi
   140016f45:	ret    
   140016f46:	int3   
   140016f47:	int3   
   140016f48:	int3   
   140016f49:	int3   
   140016f4a:	int3   
   140016f4b:	int3   
   140016f4c:	int3   
   140016f4d:	int3   
   140016f4e:	int3   
   140016f4f:	int3   
   140016f50:	test   rcx,rcx
   140016f53:	je     0x140016f5c
   140016f55:	rex.W jmp QWORD PTR [rip+0x2620c]        # 0x14003d168
   140016f5c:	xor    eax,eax
   140016f5e:	ret    
   140016f5f:	int3   
   140016f60:	mov    QWORD PTR [rsp+0x18],rbx
   140016f65:	mov    QWORD PTR [rsp+0x20],rbp
   140016f6a:	mov    QWORD PTR [rsp+0x10],rdx
   140016f6f:	push   rsi
   140016f70:	push   rdi
   140016f71:	push   r13
   140016f73:	push   r14
   140016f75:	push   r15
   140016f77:	sub    rsp,0x50
   140016f7b:	movsxd rbp,DWORD PTR [rcx+0x8]
   140016f7f:	mov    rdi,rcx
   140016f82:	mov    r13,r8
   140016f85:	lea    rcx,[rbp*8+0x0]
   140016f8d:	mov    r15,rdx
   140016f90:	call   QWORD PTR [rip+0x261d2]        # 0x14003d168
   140016f96:	xor    ebx,ebx
   140016f98:	mov    rsi,rax
   140016f9b:	mov    eax,ebx
   140016f9d:	mov    r9d,ebx
   140016fa0:	test   ebp,ebp
   140016fa2:	jle    0x140016fca
   140016fa4:	nop    DWORD PTR [rax+0x0]
   140016fa8:	nop    DWORD PTR [rax+rax*1+0x0]
   140016fb0:	movsxd rcx,r9d
   140016fb3:	inc    rax
   140016fb6:	inc    r9d
   140016fb9:	shl    rcx,0x4
   140016fbd:	add    rcx,QWORD PTR [rdi]
   140016fc0:	mov    QWORD PTR [rsi+rax*8-0x8],rcx
   140016fc5:	cmp    rax,rbp
   140016fc8:	jl     0x140016fb0
   140016fca:	mov    QWORD PTR [rsp+0x80],r12
   140016fd2:	cmp    ebp,0x3
   140016fd5:	jle    0x140017081
   140016fdb:	mov    edi,ebx
   140016fdd:	test   ebp,ebp
   140016fdf:	jle    0x14001700d
   140016fe1:	lea    eax,[rdi+0x1]
   140016fe4:	mov    r9d,ebp
   140016fe7:	mov    r8,rsi
   140016fea:	cdq    
   140016feb:	mov    ecx,edi
   140016fed:	idiv   ebp
   140016fef:	lea    eax,[rdi+0x2]
   140016ff2:	movsxd r12,edx
   140016ff5:	cdq    
   140016ff6:	idiv   ebp
   140016ff8:	movsxd r15,edx
   140016ffb:	mov    edx,r15d
   140016ffe:	call   0x140017430
   140017003:	test   eax,eax
   140017005:	jne    0x140017014
   140017007:	inc    edi
   140017009:	cmp    edi,ebp
   14001700b:	jl     0x140016fe1
   14001700d:	call   QWORD PTR [rip+0x2608d]        # 0x14003d0a0
   140017013:	int3   
   140017014:	movsxd rax,edi
   140017017:	lea    rdx,[rsp+0x20]
   14001701c:	mov    rcx,QWORD PTR [rsi+rax*8]
   140017020:	mov    rax,QWORD PTR [rsi+r12*8]
   140017024:	movups xmm0,XMMWORD PTR [rcx]
   140017027:	mov    rcx,QWORD PTR [rsi+r15*8]
   14001702b:	mov    r15,QWORD PTR [rsp+0x88]
   140017033:	movups XMMWORD PTR [rsp+0x20],xmm0
   140017038:	movups xmm0,XMMWORD PTR [rax]
   14001703b:	movups XMMWORD PTR [rsp+0x30],xmm0
   140017040:	movups xmm0,XMMWORD PTR [rcx]
   140017043:	mov    rcx,r13
   140017046:	movups XMMWORD PTR [rsp+0x40],xmm0
   14001704b:	call   r15
   14001704e:	test   ebp,ebp
   140017050:	jle    0x14001706e
   140017052:	mov    rcx,rsi
   140017055:	cmp    rbx,r12
   140017058:	je     0x140017066
   14001705a:	mov    rax,QWORD PTR [rsi+rbx*8]
   14001705e:	add    rcx,0x8
   140017062:	mov    QWORD PTR [rcx-0x8],rax
   140017066:	inc    rbx
   140017069:	cmp    rbx,rbp
   14001706c:	jl     0x140017055
   14001706e:	lea    edx,[rbp-0x1]
   140017071:	mov    r9,r13
   140017074:	mov    r8,r15
   140017077:	mov    rcx,rsi
   14001707a:	call   0x140017680
   14001707f:	jmp    0x1400170af
   140017081:	mov    rax,QWORD PTR [rsi]
   140017084:	lea    rdx,[rsp+0x20]
   140017089:	mov    rcx,r13
   14001708c:	movups xmm0,XMMWORD PTR [rax]
   14001708f:	mov    rax,QWORD PTR [rsi+0x8]
   140017093:	movups XMMWORD PTR [rsp+0x20],xmm0
   140017098:	movups xmm0,XMMWORD PTR [rax]
   14001709b:	mov    rax,QWORD PTR [rsi+0x10]
   14001709f:	movups XMMWORD PTR [rsp+0x30],xmm0
   1400170a4:	movups xmm0,XMMWORD PTR [rax]
   1400170a7:	movups XMMWORD PTR [rsp+0x40],xmm0
   1400170ac:	call   r15
   1400170af:	mov    rcx,rsi
   1400170b2:	mov    r12,QWORD PTR [rsp+0x80]
   1400170ba:	lea    r11,[rsp+0x50]
   1400170bf:	mov    rbx,QWORD PTR [r11+0x40]
   1400170c3:	mov    rbp,QWORD PTR [r11+0x48]
   1400170c7:	mov    rsp,r11
   1400170ca:	pop    r15
   1400170cc:	pop    r14
   1400170ce:	pop    r13
   1400170d0:	pop    rdi
   1400170d1:	pop    rsi
   1400170d2:	rex.W jmp QWORD PTR [rip+0x261c7]        # 0x14003d2a0
   1400170d9:	int3   
   1400170da:	int3   
   1400170db:	int3   
   1400170dc:	int3   
   1400170dd:	int3   
   1400170de:	int3   
   1400170df:	int3   
   1400170e0:	sub    rsp,0x48
   1400170e4:	movsd  xmm2,QWORD PTR [rdx+0x8]
   1400170e9:	movsd  xmm3,QWORD PTR [rdx]
   1400170ed:	movsd  xmm4,QWORD PTR [rcx]
   1400170f1:	movaps XMMWORD PTR [rsp+0x30],xmm6
   1400170f6:	movaps XMMWORD PTR [rsp+0x20],xmm7
   1400170fb:	movaps XMMWORD PTR [rsp+0x10],xmm8
   140017101:	movsd  xmm0,QWORD PTR [r8]
   140017106:	movsd  xmm1,QWORD PTR [r8+0x8]
   14001710c:	movaps xmm5,xmm2
   14001710f:	movaps XMMWORD PTR [rsp],xmm9
   140017114:	movsd  xmm9,QWORD PTR [rcx+0x8]
   14001711a:	movaps xmm6,xmm1
   14001711d:	movaps xmm8,xmm0
   140017121:	subsd  xmm5,xmm9
   140017126:	subsd  xmm6,xmm9
   14001712b:	subsd  xmm9,xmm2
   140017130:	subsd  xmm1,xmm2
   140017134:	movaps xmm7,xmm3
   140017137:	subsd  xmm8,xmm4
   14001713c:	xorps  xmm2,xmm2
   14001713f:	subsd  xmm7,xmm4
   140017143:	subsd  xmm0,xmm3
   140017147:	subsd  xmm4,xmm3
   14001714b:	mulsd  xmm9,xmm0
   140017150:	mulsd  xmm1,xmm4
   140017154:	subsd  xmm9,xmm1
   140017159:	comisd xmm9,xmm2
   14001715e:	ja     0x1400171b6
   140017160:	comisd xmm2,xmm9
   140017165:	mov    eax,0x3
   14001716a:	mov    ecx,0x1
   14001716f:	cmova  eax,ecx
   140017172:	cmp    eax,0x3
   140017175:	jne    0x1400171b6
   140017177:	movaps xmm1,xmm6
   14001717a:	movaps xmm0,xmm8
   14001717e:	mulsd  xmm1,xmm5
   140017182:	mulsd  xmm0,xmm7
   140017186:	addsd  xmm1,xmm0
   14001718a:	comisd xmm1,xmm2
   14001718e:	jb     0x1400171b0
   140017190:	mulsd  xmm6,xmm6
   140017194:	mulsd  xmm8,xmm8
   140017199:	mulsd  xmm5,xmm5
   14001719d:	addsd  xmm6,xmm8
   1400171a2:	mulsd  xmm7,xmm7
   1400171a6:	addsd  xmm5,xmm7
   1400171aa:	comisd xmm5,xmm6
   1400171ae:	jae    0x1400171b2
   1400171b0:	xor    ecx,ecx
   1400171b2:	mov    eax,ecx
   1400171b4:	jmp    0x1400171b8
   1400171b6:	xor    eax,eax
   1400171b8:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   1400171bd:	movaps xmm7,XMMWORD PTR [rsp+0x20]
   1400171c2:	movaps xmm8,XMMWORD PTR [rsp+0x10]
   1400171c8:	movaps xmm9,XMMWORD PTR [rsp]
   1400171cd:	add    rsp,0x48
   1400171d1:	ret    
   1400171d2:	int3   
   1400171d3:	int3   
   1400171d4:	int3   
   1400171d5:	int3   
   1400171d6:	int3   
   1400171d7:	int3   
   1400171d8:	int3   
   1400171d9:	int3   
   1400171da:	int3   
   1400171db:	int3   
   1400171dc:	int3   
   1400171dd:	int3   
   1400171de:	int3   
   1400171df:	int3   
   1400171e0:	movsd  xmm0,QWORD PTR [r8]
   1400171e5:	movsd  xmm4,QWORD PTR [rcx+0x8]
   1400171ea:	movsd  xmm1,QWORD PTR [r8+0x8]
   1400171f0:	subsd  xmm0,QWORD PTR [rdx]
   1400171f4:	subsd  xmm4,QWORD PTR [rdx+0x8]
   1400171f9:	subsd  xmm1,QWORD PTR [rdx+0x8]
   1400171fe:	mulsd  xmm4,xmm0
   140017202:	movsd  xmm0,QWORD PTR [rcx]
   140017206:	subsd  xmm0,QWORD PTR [rdx]
   14001720a:	mulsd  xmm1,xmm0
   14001720e:	xorps  xmm0,xmm0
   140017211:	subsd  xmm4,xmm1
   140017215:	comisd xmm4,xmm0
   140017219:	jbe    0x140017221
   14001721b:	mov    eax,0x2
   140017220:	ret    
   140017221:	comisd xmm0,xmm4
   140017225:	mov    eax,0x3
   14001722a:	mov    ecx,0x1
   14001722f:	cmova  eax,ecx
   140017232:	ret    
   140017233:	int3   
   140017234:	int3   
   140017235:	int3   
   140017236:	int3   
   140017237:	int3   
   140017238:	int3   
   140017239:	int3   
   14001723a:	int3   
   14001723b:	int3   
   14001723c:	int3   
   14001723d:	int3   
   14001723e:	int3   
   14001723f:	int3   
   140017240:	mov    QWORD PTR [rsp+0x8],rbx
   140017245:	mov    QWORD PTR [rsp+0x10],rsi
   14001724a:	push   rdi
   14001724b:	sub    rsp,0x60
   14001724f:	movsd  xmm4,QWORD PTR [rcx+0x8]
   140017254:	movsd  xmm1,QWORD PTR [r8+0x8]
   14001725a:	movaps XMMWORD PTR [rsp+0x50],xmm7
   14001725f:	movaps XMMWORD PTR [rsp+0x40],xmm8
   140017265:	movaps XMMWORD PTR [rsp+0x30],xmm9
   14001726b:	movaps XMMWORD PTR [rsp+0x20],xmm10
   140017271:	xorps  xmm3,xmm3
   140017274:	mov    rsi,rcx
   140017277:	mov    r10,r9
   14001727a:	mov    r11,r8
   14001727d:	mov    rbx,rdx
   140017280:	movsd  xmm7,QWORD PTR [rcx]
   140017284:	movsd  xmm8,QWORD PTR [r8]
   140017289:	movaps xmm9,xmm4
   14001728d:	mov    ecx,0x3
   140017292:	lea    edi,[rcx-0x2]
   140017295:	subsd  xmm9,QWORD PTR [rdx+0x8]
   14001729b:	movaps xmm2,xmm8
   14001729f:	movaps xmm10,xmm7
   1400172a3:	subsd  xmm2,QWORD PTR [rdx]
   1400172a7:	subsd  xmm10,QWORD PTR [rdx]
   1400172ac:	movaps xmm0,xmm1
   1400172af:	mulsd  xmm2,xmm9
   1400172b4:	subsd  xmm0,QWORD PTR [rdx+0x8]
   1400172b9:	mulsd  xmm0,xmm10
   1400172be:	subsd  xmm2,xmm0
   1400172c2:	comisd xmm2,xmm3
   1400172c6:	ja     0x1400172d9
   1400172c8:	comisd xmm3,xmm2
   1400172cc:	mov    eax,ecx
   1400172ce:	cmova  eax,edi
   1400172d1:	cmp    eax,ecx
   1400172d3:	je     0x1400173eb
   1400172d9:	movsd  xmm5,QWORD PTR [r9]
   1400172de:	movsd  xmm0,QWORD PTR [r9+0x8]
   1400172e4:	subsd  xmm0,QWORD PTR [rdx+0x8]
   1400172e9:	movaps xmm2,xmm5
   1400172ec:	subsd  xmm2,QWORD PTR [rdx]
   1400172f0:	mulsd  xmm0,xmm10
   1400172f5:	mulsd  xmm2,xmm9
   1400172fa:	subsd  xmm2,xmm0
   1400172fe:	comisd xmm2,xmm3
   140017302:	ja     0x140017315
   140017304:	comisd xmm3,xmm2
   140017308:	mov    eax,ecx
   14001730a:	cmova  eax,edi
   14001730d:	cmp    eax,ecx
   14001730f:	je     0x1400173eb
   140017315:	subsd  xmm1,QWORD PTR [r9+0x8]
   14001731b:	subsd  xmm4,QWORD PTR [r9+0x8]
   140017321:	subsd  xmm7,xmm5
   140017325:	mulsd  xmm1,xmm7
   140017329:	subsd  xmm8,xmm5
   14001732e:	mulsd  xmm4,xmm8
   140017333:	subsd  xmm1,xmm4
   140017337:	comisd xmm1,xmm3
   14001733b:	ja     0x14001734d
   14001733d:	comisd xmm3,xmm1
   140017341:	cmova  ecx,edi
   140017344:	cmp    ecx,0x3
   140017347:	je     0x1400173eb
   14001734d:	mov    r8,rdx
   140017350:	mov    rcx,r11
   140017353:	mov    rdx,r9
   140017356:	call   0x1400171e0
   14001735b:	cmp    eax,0x3
   14001735e:	je     0x1400173eb
   140017364:	mov    r8,r11
   140017367:	mov    rdx,rbx
   14001736a:	mov    rcx,rsi
   14001736d:	call   0x1400171e0
   140017372:	xor    r9d,r9d
   140017375:	mov    r8,r10
   140017378:	cmp    eax,edi
   14001737a:	mov    rcx,rsi
   14001737d:	sete   r9b
   140017381:	call   0x1400171e0
   140017386:	xor    ecx,ecx
   140017388:	cmp    eax,edi
   14001738a:	sete   cl
   14001738d:	xor    r9d,ecx
   140017390:	je     0x1400173c0
   140017392:	mov    r8,rsi
   140017395:	mov    rdx,r10
   140017398:	mov    rcx,r11
   14001739b:	call   0x1400171e0
   1400173a0:	xor    r9d,r9d
   1400173a3:	mov    r8,rbx
   1400173a6:	cmp    eax,edi
   1400173a8:	mov    rcx,r11
   1400173ab:	sete   r9b
   1400173af:	call   0x1400171e0
   1400173b4:	xor    ecx,ecx
   1400173b6:	cmp    eax,edi
   1400173b8:	sete   cl
   1400173bb:	xor    r9d,ecx
   1400173be:	jne    0x1400173c2
   1400173c0:	xor    edi,edi
   1400173c2:	mov    eax,edi
   1400173c4:	mov    rbx,QWORD PTR [rsp+0x70]
   1400173c9:	mov    rsi,QWORD PTR [rsp+0x78]
   1400173ce:	movaps xmm7,XMMWORD PTR [rsp+0x50]
   1400173d3:	movaps xmm8,XMMWORD PTR [rsp+0x40]
   1400173d9:	movaps xmm9,XMMWORD PTR [rsp+0x30]
   1400173df:	movaps xmm10,XMMWORD PTR [rsp+0x20]
   1400173e5:	add    rsp,0x60
   1400173e9:	pop    rdi
   1400173ea:	ret    
   1400173eb:	mov    r8,r11
   1400173ee:	mov    rdx,rbx
   1400173f1:	mov    rcx,rsi
   1400173f4:	call   0x1400170e0
   1400173f9:	test   eax,eax
   1400173fb:	jne    0x1400173c2
   1400173fd:	mov    r8,r9
   140017400:	mov    rcx,rsi
   140017403:	call   0x1400170e0
   140017408:	test   eax,eax
   14001740a:	jne    0x1400173c2
   14001740c:	mov    r8,rsi
   14001740f:	mov    rdx,r9
   140017412:	mov    rcx,r11
   140017415:	call   0x1400170e0
   14001741a:	test   eax,eax
   14001741c:	jne    0x1400173c2
   14001741e:	mov    r8,rbx
   140017421:	mov    rcx,r11
   140017424:	call   0x1400170e0
   140017429:	test   eax,eax
   14001742b:	jne    0x1400173c2
   14001742d:	jmp    0x1400173c4
   14001742f:	int3   
   140017430:	mov    DWORD PTR [rsp+0x10],edx
   140017434:	mov    DWORD PTR [rsp+0x8],ecx
   140017438:	push   rbx
   140017439:	push   rbp
   14001743a:	push   rsi
   14001743b:	push   rdi
   14001743c:	push   r12
   14001743e:	push   r14
   140017440:	push   r15
   140017442:	sub    rsp,0x20
   140017446:	movsxd r11,ecx
   140017449:	mov    rsi,r8
   14001744c:	movsxd r8,edx
   14001744f:	mov    r14,QWORD PTR [rsi+r11*8]
   140017453:	movsxd r12,r9d
   140017456:	lea    eax,[r11+0x1]
   14001745a:	xorps  xmm5,xmm5
   14001745d:	cdq    
   14001745e:	xor    ebx,ebx
   140017460:	mov    QWORD PTR [rsp+0x70],r11
   140017465:	movsd  xmm2,QWORD PTR [r14+0x8]
   14001746b:	movsd  xmm3,QWORD PTR [r14]
   140017470:	lea    ecx,[rbx+0x3]
   140017473:	lea    edi,[rbx+0x1]
   140017476:	idiv   r12d
   140017479:	lea    eax,[r12-0x1]
   14001747e:	add    eax,r11d
   140017481:	movsxd r10,edx
   140017484:	cdq    
   140017485:	mov    r9,QWORD PTR [rsi+r10*8]
   140017489:	mov    r10,r11
   14001748c:	idiv   r12d
   14001748f:	movsd  xmm0,QWORD PTR [r9]
   140017494:	movsd  xmm1,QWORD PTR [r9+0x8]
   14001749a:	subsd  xmm0,xmm3
   14001749e:	subsd  xmm1,xmm2
   1400174a2:	movsxd rax,edx
   1400174a5:	mov    rdx,QWORD PTR [rsi+rax*8]
   1400174a9:	movsd  xmm4,QWORD PTR [rdx+0x8]
   1400174ae:	subsd  xmm4,xmm2
   1400174b2:	mulsd  xmm4,xmm0
   1400174b6:	movsd  xmm0,QWORD PTR [rdx]
   1400174ba:	subsd  xmm0,xmm3
   1400174be:	mulsd  xmm1,xmm0
   1400174c2:	subsd  xmm4,xmm1
   1400174c6:	comisd xmm4,xmm5
   1400174ca:	ja     0x140017601
   1400174d0:	comisd xmm5,xmm4
   1400174d4:	mov    eax,ecx
   1400174d6:	cmova  eax,edi
   1400174d9:	cmp    eax,edi
   1400174db:	jne    0x140017601
   1400174e1:	mov    rbp,QWORD PTR [rsi+r8*8]
   1400174e5:	movsd  xmm0,QWORD PTR [rdx]
   1400174e9:	movsd  xmm4,QWORD PTR [r14+0x8]
   1400174ef:	mov    r15,r8
   1400174f2:	movsd  xmm2,QWORD PTR [rbp+0x8]
   1400174f7:	movsd  xmm3,QWORD PTR [rbp+0x0]
   1400174fc:	movsd  xmm1,QWORD PTR [rdx+0x8]
   140017501:	subsd  xmm0,xmm3
   140017505:	subsd  xmm4,xmm2
   140017509:	subsd  xmm1,xmm2
   14001750d:	mulsd  xmm4,xmm0
   140017511:	movsd  xmm0,QWORD PTR [r14]
   140017516:	subsd  xmm0,xmm3
   14001751a:	mulsd  xmm1,xmm0
   14001751e:	subsd  xmm4,xmm1
   140017522:	comisd xmm4,xmm5
   140017526:	ja     0x14001765f
   14001752c:	comisd xmm5,xmm4
   140017530:	mov    eax,ecx
   140017532:	cmova  eax,edi
   140017535:	cmp    eax,edi
   140017537:	jne    0x14001765f
   14001753d:	movsd  xmm0,QWORD PTR [r9]
   140017542:	movsd  xmm1,QWORD PTR [r9+0x8]
   140017548:	movsd  xmm4,xmm2
   14001754c:	subsd  xmm0,QWORD PTR [r14]
   140017551:	subsd  xmm4,QWORD PTR [r14+0x8]
   140017557:	subsd  xmm1,QWORD PTR [r14+0x8]
   14001755d:	mulsd  xmm4,xmm0
   140017561:	movsd  xmm0,xmm3
   140017565:	subsd  xmm0,QWORD PTR [r14]
   14001756a:	mulsd  xmm1,xmm0
   14001756e:	subsd  xmm4,xmm1
   140017572:	comisd xmm4,xmm5
   140017576:	ja     0x14001765f
   14001757c:	comisd xmm5,xmm4
   140017580:	cmova  ecx,edi
   140017583:	cmp    ecx,edi
   140017585:	jne    0x14001765f
   14001758b:	mov    QWORD PTR [rsp+0x78],r13
   140017590:	test   r12d,r12d
   140017593:	jle    0x1400175eb
   140017595:	mov    eax,edi
   140017597:	cdq    
   140017598:	idiv   r12d
   14001759b:	cmp    rbx,r10
   14001759e:	je     0x1400175dc
   1400175a0:	cmp    edx,r11d
   1400175a3:	je     0x1400175dc
   1400175a5:	cmp    rbx,r15
   1400175a8:	je     0x1400175dc
   1400175aa:	cmp    edx,r8d
   1400175ad:	je     0x1400175dc
   1400175af:	mov    r8,QWORD PTR [rsi+rbx*8]
   1400175b3:	movsxd r9,edx
   1400175b6:	mov    rcx,r14
   1400175b9:	mov    r9,QWORD PTR [rsi+r9*8]
   1400175bd:	mov    rdx,rbp
   1400175c0:	call   0x140017240
   1400175c5:	test   eax,eax
   1400175c7:	jne    0x140017670
   1400175cd:	mov    r8d,DWORD PTR [rsp+0x68]
   1400175d2:	mov    r11d,DWORD PTR [rsp+0x60]
   1400175d7:	mov    r10,QWORD PTR [rsp+0x70]
   1400175dc:	inc    rbx
   1400175df:	inc    edi
   1400175e1:	cmp    rbx,r12
   1400175e4:	jl     0x140017595
   1400175e6:	mov    edi,0x1
   1400175eb:	mov    eax,edi
   1400175ed:	mov    r13,QWORD PTR [rsp+0x78]
   1400175f2:	add    rsp,0x20
   1400175f6:	pop    r15
   1400175f8:	pop    r14
   1400175fa:	pop    r12
   1400175fc:	pop    rdi
   1400175fd:	pop    rsi
   1400175fe:	pop    rbp
   1400175ff:	pop    rbx
   140017600:	ret    
   140017601:	mov    rbp,QWORD PTR [rsi+r8*8]
   140017605:	movsd  xmm0,QWORD PTR [r9]
   14001760a:	movsd  xmm1,QWORD PTR [r9+0x8]
   140017610:	mov    r15,r8
   140017613:	subsd  xmm0,QWORD PTR [rbp+0x0]
   140017618:	subsd  xmm1,QWORD PTR [rbp+0x8]
   14001761d:	movsd  xmm4,xmm2
   140017621:	subsd  xmm4,QWORD PTR [rbp+0x8]
   140017626:	mulsd  xmm4,xmm0
   14001762a:	movsd  xmm0,xmm3
   14001762e:	subsd  xmm0,QWORD PTR [rbp+0x0]
   140017633:	mulsd  xmm1,xmm0
   140017637:	subsd  xmm4,xmm1
   14001763b:	comisd xmm4,xmm5
   14001763f:	jbe    0x140017648
   140017641:	mov    ecx,0x2
   140017646:	jmp    0x14001764f
   140017648:	comisd xmm5,xmm4
   14001764c:	cmova  ecx,edi
   14001764f:	cmp    ecx,0x2
   140017652:	mov    eax,ebx
   140017654:	sete   al
   140017657:	test   eax,eax
   140017659:	jne    0x14001758b
   14001765f:	xor    eax,eax
   140017661:	add    rsp,0x20
   140017665:	pop    r15
   140017667:	pop    r14
   140017669:	pop    r12
   14001766b:	pop    rdi
   14001766c:	pop    rsi
   14001766d:	pop    rbp
   14001766e:	pop    rbx
   14001766f:	ret    
   140017670:	xor    eax,eax
   140017672:	jmp    0x1400175ed
   140017677:	int3   
   140017678:	int3   
   140017679:	int3   
   14001767a:	int3   
   14001767b:	int3   
   14001767c:	int3   
   14001767d:	int3   
   14001767e:	int3   
   14001767f:	int3   
   140017680:	mov    rax,rsp
   140017683:	mov    QWORD PTR [rax+0x20],r9
   140017687:	mov    QWORD PTR [rax+0x18],r8
   14001768b:	push   rbp
   14001768c:	push   rsi
   14001768d:	sub    rsp,0x68
   140017691:	movsxd rsi,edx
   140017694:	mov    rbp,rcx
   140017697:	cmp    esi,0x3
   14001769a:	jle    0x140017780
   1400176a0:	mov    QWORD PTR [rax+0x8],rbx
   1400176a4:	xor    ebx,ebx
   1400176a6:	mov    QWORD PTR [rax-0x18],rdi
   1400176aa:	mov    edi,ebx
   1400176ac:	test   edx,edx
   1400176ae:	jle    0x1400176de
   1400176b0:	lea    eax,[rdi+0x1]
   1400176b3:	mov    r9d,esi
   1400176b6:	mov    r8,rbp
   1400176b9:	cdq    
   1400176ba:	mov    ecx,edi
   1400176bc:	idiv   esi
   1400176be:	lea    eax,[rdi+0x2]
   1400176c1:	mov    DWORD PTR [rsp+0x88],edx
   1400176c8:	cdq    
   1400176c9:	idiv   esi
   1400176cb:	mov    DWORD PTR [rsp+0x20],edx
   1400176cf:	call   0x140017430
   1400176d4:	test   eax,eax
   1400176d6:	jne    0x1400176e5
   1400176d8:	inc    edi
   1400176da:	cmp    edi,esi
   1400176dc:	jl     0x1400176b0
   1400176de:	call   QWORD PTR [rip+0x259bc]        # 0x14003d0a0
   1400176e4:	int3   
   1400176e5:	movsxd rax,edi
   1400176e8:	movsxd rdi,DWORD PTR [rsp+0x88]
   1400176f0:	lea    rdx,[rsp+0x28]
   1400176f5:	mov    rcx,QWORD PTR [rbp+rax*8+0x0]
   1400176fa:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   1400176ff:	movups xmm0,XMMWORD PTR [rcx]
   140017702:	movups XMMWORD PTR [rsp+0x28],xmm0
   140017707:	movups xmm0,XMMWORD PTR [rax]
   14001770a:	movsxd rax,DWORD PTR [rsp+0x20]
   14001770f:	mov    rcx,QWORD PTR [rbp+rax*8+0x0]
   140017714:	movups XMMWORD PTR [rsp+0x38],xmm0
   140017719:	movups xmm0,XMMWORD PTR [rcx]
   14001771c:	mov    rcx,QWORD PTR [rsp+0x98]
   140017724:	movups XMMWORD PTR [rsp+0x48],xmm0
   140017729:	call   QWORD PTR [rsp+0x90]
   140017730:	test   esi,esi
   140017732:	jle    0x140017751
   140017734:	mov    rcx,rbp
   140017737:	cmp    rbx,rdi
   14001773a:	je     0x140017749
   14001773c:	mov    rax,QWORD PTR [rbp+rbx*8+0x0]
   140017741:	add    rcx,0x8
   140017745:	mov    QWORD PTR [rcx-0x8],rax
   140017749:	inc    rbx
   14001774c:	cmp    rbx,rsi
   14001774f:	jl     0x140017737
   140017751:	mov    r9,QWORD PTR [rsp+0x98]
   140017759:	mov    r8,QWORD PTR [rsp+0x90]
   140017761:	lea    edx,[rsi-0x1]
   140017764:	mov    rcx,rbp
   140017767:	call   0x140017680
   14001776c:	mov    rbx,QWORD PTR [rsp+0x80]
   140017774:	mov    rdi,QWORD PTR [rsp+0x60]
   140017779:	add    rsp,0x68
   14001777d:	pop    rsi
   14001777e:	pop    rbp
   14001777f:	ret    
   140017780:	mov    rax,QWORD PTR [rcx]
   140017783:	lea    rdx,[rsp+0x28]
   140017788:	movups xmm0,XMMWORD PTR [rax]
   14001778b:	mov    rax,QWORD PTR [rcx+0x8]
   14001778f:	movups XMMWORD PTR [rsp+0x28],xmm0
   140017794:	movups xmm0,XMMWORD PTR [rax]
   140017797:	mov    rax,QWORD PTR [rcx+0x10]
   14001779b:	mov    rcx,r9
   14001779e:	movups XMMWORD PTR [rsp+0x38],xmm0
   1400177a3:	movups xmm0,XMMWORD PTR [rax]
   1400177a6:	movups XMMWORD PTR [rsp+0x48],xmm0
   1400177ab:	call   r8
   1400177ae:	add    rsp,0x68
   1400177b2:	pop    rsi
   1400177b3:	pop    rbp
   1400177b4:	ret    
   1400177b5:	int3   
   1400177b6:	int3   
   1400177b7:	int3   
   1400177b8:	int3   
   1400177b9:	int3   
   1400177ba:	int3   
   1400177bb:	int3   
   1400177bc:	int3   
   1400177bd:	int3   
   1400177be:	int3   
   1400177bf:	int3   
   1400177c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400177c5:	mov    QWORD PTR [rsp+0x20],r9
   1400177ca:	mov    QWORD PTR [rsp+0x18],r8
   1400177cf:	push   rbp
   1400177d0:	push   rsi
   1400177d1:	push   rdi
   1400177d2:	push   r12
   1400177d4:	push   r13
   1400177d6:	push   r14
   1400177d8:	push   r15
   1400177da:	sub    rsp,0x30
   1400177de:	movsxd rbp,edx
   1400177e1:	xor    r11d,r11d
   1400177e4:	xor    ebx,ebx
   1400177e6:	xor    r15d,r15d
   1400177e9:	xor    r10d,r10d
   1400177ec:	mov    r13,r9
   1400177ef:	mov    rsi,r8
   1400177f2:	mov    rdi,rcx
   1400177f5:	cmp    rbp,0x2
   1400177f9:	jl     0x140017819
   1400177fb:	lea    rcx,[rbp-0x1]
   1400177ff:	nop
   140017800:	mov    rax,QWORD PTR [rdi+r10*8]
   140017804:	add    r10,0x2
   140017808:	add    r11d,DWORD PTR [rax+0x8]
   14001780c:	mov    rax,QWORD PTR [rdi+r10*8-0x8]
   140017811:	add    ebx,DWORD PTR [rax+0x8]
   140017814:	cmp    r10,rcx
   140017817:	jl     0x140017800
   140017819:	cmp    r10,rbp
   14001781c:	jge    0x140017826
   14001781e:	mov    rax,QWORD PTR [rdi+r10*8]
   140017822:	mov    r15d,DWORD PTR [rax+0x8]
   140017826:	lea    eax,[rbx+r11*1]
   14001782a:	add    r15d,eax
   14001782d:	movsxd rcx,r15d
   140017830:	shl    rcx,0x5
   140017834:	call   QWORD PTR [rip+0x2592e]        # 0x14003d168
   14001783a:	xor    r14d,r14d
   14001783d:	xor    r9d,r9d
   140017840:	mov    r12,rax
   140017843:	test   rbp,rbp
   140017846:	jle    0x1400178d9
   14001784c:	xor    r13d,r13d
   14001784f:	mov    esi,r13d
   140017852:	mov    rcx,QWORD PTR [rdi+r9*8]
   140017856:	mov    r8d,r13d
   140017859:	movups xmm0,XMMWORD PTR [rcx]
   14001785c:	movups xmm1,xmm0
   14001785f:	movups XMMWORD PTR [rsp+0x20],xmm0
   140017864:	psrldq xmm1,0x8
   140017869:	movd   edx,xmm1
   14001786d:	test   edx,edx
   14001786f:	jle    0x1400178c1
   140017871:	mov    rbx,QWORD PTR [rsp+0x20]
   140017876:	mov    rax,rsi
   140017879:	mov    ecx,edx
   14001787b:	shl    rax,0x5
   14001787f:	add    r14d,edx
   140017882:	mov    r10d,0x1
   140017888:	add    rax,r12
   14001788b:	add    rsi,rcx
   14001788e:	mov    r11,rbx
   140017891:	movups xmm0,XMMWORD PTR [r11]
   140017895:	inc    r8d
   140017898:	mov    rcx,r10
   14001789b:	cmp    r8d,edx
   14001789e:	lea    rax,[rax+0x20]
   1400178a2:	lea    r11,[r11+0x10]
   1400178a6:	movups XMMWORD PTR [rax-0x20],xmm0
   1400178aa:	cmovge rcx,r13
   1400178ae:	inc    r10
   1400178b1:	add    rcx,rcx
   1400178b4:	movups xmm0,XMMWORD PTR [rbx+rcx*8]
   1400178b8:	movups XMMWORD PTR [rax-0x10],xmm0
   1400178bc:	cmp    r8d,edx
   1400178bf:	jl     0x140017891
   1400178c1:	inc    r9
   1400178c4:	cmp    r9,rbp
   1400178c7:	jl     0x140017852
   1400178c9:	mov    r13,QWORD PTR [rsp+0x88]
   1400178d1:	mov    rsi,QWORD PTR [rsp+0x80]
   1400178d9:	cmp    r14d,r15d
   1400178dc:	je     0x1400178f8
   1400178de:	lea    rdx,[rip+0x26aab]        # 0x14003e390
   1400178e5:	lea    rcx,[rip+0x25fec]        # 0x14003d8d8
   1400178ec:	mov    r8d,0x3a
   1400178f2:	call   QWORD PTR [rip+0x25798]        # 0x14003d090
   1400178f8:	mov    rbx,QWORD PTR [rsp+0x70]
   1400178fd:	mov    QWORD PTR [rsi],r12
   140017900:	mov    eax,0x1
   140017905:	mov    DWORD PTR [r13+0x0],r15d
   140017909:	add    rsp,0x30
   14001790d:	pop    r15
   14001790f:	pop    r14
   140017911:	pop    r13
   140017913:	pop    r12
   140017915:	pop    rdi
   140017916:	pop    rsi
   140017917:	pop    rbp
   140017918:	ret    
   140017919:	int3   
   14001791a:	int3   
   14001791b:	int3   
   14001791c:	int3   
   14001791d:	int3   
   14001791e:	int3   
   14001791f:	int3   
   140017920:	mov    QWORD PTR [rsp+0x8],rbx
   140017925:	mov    QWORD PTR [rsp+0x10],rsi
   14001792a:	push   rdi
   14001792b:	sub    rsp,0x20
   14001792f:	movsxd rbx,DWORD PTR [rdx+0x8]
   140017933:	mov    rsi,rcx
   140017936:	mov    rdi,rdx
   140017939:	mov    DWORD PTR [rcx+0x8],ebx
   14001793c:	mov    rcx,rbx
   14001793f:	shl    rcx,0x4
   140017943:	call   QWORD PTR [rip+0x2581f]        # 0x14003d168
   140017949:	xor    r8d,r8d
   14001794c:	mov    QWORD PTR [rsi],rax
   14001794f:	test   ebx,ebx
   140017951:	jle    0x14001797a
   140017953:	mov    ecx,r8d
   140017956:	data16 nop WORD PTR [rax+rax*1+0x0]
   140017960:	mov    rdx,QWORD PTR [rdi]
   140017963:	inc    r8d
   140017966:	lea    rcx,[rcx+0x10]
   14001796a:	movups xmm0,XMMWORD PTR [rcx+rdx*1-0x10]
   14001796f:	movups XMMWORD PTR [rcx+rax*1-0x10],xmm0
   140017974:	cmp    r8d,DWORD PTR [rdi+0x8]
   140017978:	jl     0x140017960
   14001797a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001797f:	mov    rax,rsi
   140017982:	mov    rsi,QWORD PTR [rsp+0x38]
   140017987:	add    rsp,0x20
   14001798b:	pop    rdi
   14001798c:	ret    
   14001798d:	int3   
   14001798e:	int3   
   14001798f:	int3   
   140017990:	mov    rcx,QWORD PTR [rcx]
   140017993:	rex.W jmp QWORD PTR [rip+0x25906]        # 0x14003d2a0
   14001799a:	int3   
   14001799b:	int3   
   14001799c:	int3   
   14001799d:	int3   
   14001799e:	int3   
   14001799f:	int3   
   1400179a0:	movsd  xmm2,QWORD PTR [rcx+0x8]
   1400179a5:	movsd  xmm3,QWORD PTR [rip+0x26a43]        # 0x14003e3f0
   1400179ad:	movsd  xmm0,QWORD PTR [rcx]
   1400179b1:	comisd xmm3,xmm2
   1400179b5:	jbe    0x1400179da
   1400179b7:	movsd  xmm1,QWORD PTR [rip+0x26a39]        # 0x14003e3f8
   1400179bf:	comisd xmm2,xmm1
   1400179c3:	jbe    0x1400179da
   1400179c5:	comisd xmm3,xmm0
   1400179c9:	jbe    0x1400179d7
   1400179cb:	comisd xmm0,xmm1
   1400179cf:	jbe    0x1400179d7
   1400179d1:	mov    eax,0x4
   1400179d6:	ret    
   1400179d7:	xor    eax,eax
   1400179d9:	ret    
   1400179da:	divsd  xmm0,xmm2
   1400179de:	mov    eax,0x1
   1400179e3:	xorps  xmm0,XMMWORD PTR [rip+0x25b86]        # 0x14003d570
   1400179ea:	movsd  QWORD PTR [rdx],xmm0
   1400179ee:	ret    
   1400179ef:	int3   
   1400179f0:	rex push rbx
   1400179f2:	sub    rsp,0x30
   1400179f6:	movsd  xmm3,QWORD PTR [rcx+0x10]
   1400179fb:	movsd  xmm2,QWORD PTR [rip+0x269ed]        # 0x14003e3f0
   140017a03:	movsd  xmm1,QWORD PTR [rcx]
   140017a07:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140017a0c:	mov    rbx,rdx
   140017a0f:	comisd xmm2,xmm3
   140017a13:	movsd  xmm6,QWORD PTR [rcx+0x8]
   140017a18:	jbe    0x140017a6f
   140017a1a:	movsd  xmm0,QWORD PTR [rip+0x269d6]        # 0x14003e3f8
   140017a22:	comisd xmm3,xmm0
   140017a26:	jbe    0x140017a6f
   140017a28:	comisd xmm2,xmm6
   140017a2c:	jbe    0x140017a50
   140017a2e:	comisd xmm6,xmm0
   140017a32:	jbe    0x140017a50
   140017a34:	comisd xmm2,xmm1
   140017a38:	jbe    0x140017a96
   140017a3a:	comisd xmm1,xmm0
   140017a3e:	jbe    0x140017a96
   140017a40:	mov    eax,0x4
   140017a45:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140017a4a:	add    rsp,0x30
   140017a4e:	pop    rbx
   140017a4f:	ret    
   140017a50:	divsd  xmm1,xmm6
   140017a54:	mov    eax,0x1
   140017a59:	xorps  xmm1,XMMWORD PTR [rip+0x25b10]        # 0x14003d570
   140017a60:	movsd  QWORD PTR [rdx],xmm1
   140017a64:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140017a69:	add    rsp,0x30
   140017a6d:	pop    rbx
   140017a6e:	ret    
   140017a6f:	movaps xmm0,xmm3
   140017a72:	divsd  xmm1,xmm3
   140017a76:	xorps  xmm2,xmm2
   140017a79:	mulsd  xmm0,QWORD PTR [rip+0x25c5f]        # 0x14003d6e0
   140017a81:	divsd  xmm6,xmm0
   140017a85:	movaps xmm0,xmm6
   140017a88:	mulsd  xmm0,xmm6
   140017a8c:	subsd  xmm0,xmm1
   140017a90:	comisd xmm2,xmm0
   140017a94:	jbe    0x140017aa3
   140017a96:	xor    eax,eax
   140017a98:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140017a9d:	add    rsp,0x30
   140017aa1:	pop    rbx
   140017aa2:	ret    
   140017aa3:	ucomisd xmm0,xmm2
   140017aa7:	jp     0x140017ac6
   140017aa9:	jne    0x140017ac6
   140017aab:	xorps  xmm6,XMMWORD PTR [rip+0x25abe]        # 0x14003d570
   140017ab2:	mov    eax,0x1
   140017ab7:	movsd  QWORD PTR [rdx],xmm6
   140017abb:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140017ac0:	add    rsp,0x30
   140017ac4:	pop    rbx
   140017ac5:	ret    
   140017ac6:	call   0x14003b8ae
   140017acb:	mov    eax,0x2
   140017ad0:	subsd  xmm0,xmm6
   140017ad4:	mulsd  xmm6,QWORD PTR [rip+0x2692c]        # 0x14003e408
   140017adc:	movsd  QWORD PTR [rbx],xmm0
   140017ae0:	subsd  xmm6,xmm0
   140017ae4:	movsd  QWORD PTR [rbx+0x8],xmm6
   140017ae9:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140017aee:	add    rsp,0x30
   140017af2:	pop    rbx
   140017af3:	ret    
   140017af4:	int3   
   140017af5:	int3   
   140017af6:	int3   
   140017af7:	int3   
   140017af8:	int3   
   140017af9:	int3   
   140017afa:	int3   
   140017afb:	int3   
   140017afc:	int3   
   140017afd:	int3   
   140017afe:	int3   
   140017aff:	int3   
   140017b00:	rex push rbx
   140017b02:	sub    rsp,0x90
   140017b09:	movsd  xmm2,QWORD PTR [rcx+0x18]
   140017b0e:	movsd  xmm0,QWORD PTR [rip+0x268da]        # 0x14003e3f0
   140017b16:	movsd  xmm3,QWORD PTR [rcx+0x8]
   140017b1b:	movaps XMMWORD PTR [rsp+0x70],xmm7
   140017b20:	mov    rbx,rdx
   140017b23:	comisd xmm0,xmm2
   140017b27:	movsd  xmm7,QWORD PTR [rcx+0x10]
   140017b2c:	movsd  xmm4,QWORD PTR [rcx]
   140017b30:	jbe    0x140017b4e
   140017b32:	comisd xmm2,QWORD PTR [rip+0x268be]        # 0x14003e3f8
   140017b3a:	jbe    0x140017b4e
   140017b3c:	movaps xmm7,XMMWORD PTR [rsp+0x70]
   140017b41:	add    rsp,0x90
   140017b48:	pop    rbx
   140017b49:	jmp    0x1400179f0
   140017b4e:	movaps XMMWORD PTR [rsp+0x80],xmm6
   140017b56:	movaps XMMWORD PTR [rsp+0x60],xmm8
   140017b5c:	movaps XMMWORD PTR [rsp+0x50],xmm9
   140017b62:	divsd  xmm3,xmm2
   140017b66:	divsd  xmm4,xmm2
   140017b6a:	movaps XMMWORD PTR [rsp+0x40],xmm10
   140017b70:	movaps XMMWORD PTR [rsp+0x30],xmm11
   140017b76:	movaps xmm0,xmm2
   140017b79:	movaps XMMWORD PTR [rsp+0x20],xmm12
   140017b7f:	movsd  xmm12,QWORD PTR [rip+0x259c8]        # 0x14003d550
   140017b88:	mulsd  xmm0,xmm12
   140017b8d:	xorps  xmm11,xmm11
   140017b91:	divsd  xmm7,xmm0
   140017b95:	movaps xmm0,xmm3
   140017b98:	unpcklpd xmm7,xmm7
   140017b9c:	divsd  xmm3,xmm12
   140017ba1:	movaps xmm1,xmm7
   140017ba4:	movaps xmm6,xmm7
   140017ba7:	mulsd  xmm6,QWORD PTR [rip+0x25b31]        # 0x14003d6e0
   140017baf:	mulsd  xmm0,xmm7
   140017bb3:	mulsd  xmm1,xmm7
   140017bb7:	subsd  xmm3,xmm1
   140017bbb:	movaps xmm9,xmm3
   140017bbf:	mulsd  xmm9,QWORD PTR [rip+0x261f0]        # 0x14003ddb8
   140017bc8:	mulsd  xmm6,xmm1
   140017bcc:	subsd  xmm6,xmm0
   140017bd0:	addsd  xmm6,xmm4
   140017bd4:	mulsd  xmm9,xmm3
   140017bd9:	movaps xmm0,xmm6
   140017bdc:	mulsd  xmm9,xmm3
   140017be1:	mulsd  xmm0,xmm6
   140017be5:	addsd  xmm9,xmm0
   140017bea:	comisd xmm11,xmm9
   140017bef:	jbe    0x140017cd9
   140017bf5:	subsd  xmm0,xmm9
   140017bfa:	call   0x14003b8ae
   140017bff:	movsd  xmm10,QWORD PTR [rip+0x25968]        # 0x14003d570
   140017c08:	xorps  xmm9,xmm10
   140017c0c:	movaps xmm8,xmm0
   140017c10:	mulsd  xmm8,QWORD PTR [rip+0x257bf]        # 0x14003d3d8
   140017c19:	movaps xmm0,xmm9
   140017c1d:	call   0x14003b8ae
   140017c22:	xorps  xmm6,xmm10
   140017c26:	movaps xmm1,xmm6
   140017c29:	call   0x14003b8a8
   140017c2e:	comisd xmm11,xmm8
   140017c33:	movsd  xmm1,QWORD PTR [rip+0x26555]        # 0x14003e190
   140017c3b:	movaps xmm9,xmm0
   140017c3f:	jbe    0x140017c5d
   140017c41:	xorps  xmm8,xmm10
   140017c45:	movaps xmm0,xmm8
   140017c49:	call   0x14003bb2a
   140017c4e:	movaps xmm8,xmm0
   140017c52:	mulsd  xmm8,QWORD PTR [rip+0x25a8d]        # 0x14003d6e8
   140017c5b:	jmp    0x140017c6a
   140017c5d:	movaps xmm0,xmm8
   140017c61:	call   0x14003bb2a
   140017c66:	movaps xmm8,xmm0
   140017c6a:	mulsd  xmm8,QWORD PTR [rip+0x25a6d]        # 0x14003d6e0
   140017c73:	movaps xmm0,xmm9
   140017c77:	divsd  xmm0,xmm12
   140017c7c:	call   0x14003b87e
   140017c81:	movsd  xmm6,QWORD PTR [rip+0x25bbf]        # 0x14003d848
   140017c89:	mulsd  xmm0,xmm8
   140017c8e:	movsd  QWORD PTR [rbx],xmm0
   140017c92:	movaps xmm0,xmm9
   140017c96:	addsd  xmm0,xmm6
   140017c9a:	addsd  xmm0,xmm6
   140017c9e:	divsd  xmm0,xmm12
   140017ca3:	call   0x14003b87e
   140017ca8:	subsd  xmm9,xmm6
   140017cad:	subsd  xmm9,xmm6
   140017cb2:	mulsd  xmm0,xmm8
   140017cb7:	movsd  QWORD PTR [rbx+0x8],xmm0
   140017cbc:	divsd  xmm9,xmm12
   140017cc1:	movaps xmm0,xmm9
   140017cc5:	call   0x14003b87e
   140017cca:	mulsd  xmm0,xmm8
   140017ccf:	movsd  QWORD PTR [rbx+0x10],xmm0
   140017cd4:	jmp    0x140017d85
   140017cd9:	movaps xmm0,xmm9
   140017cdd:	call   0x14003b8ae
   140017ce2:	movsd  xmm12,QWORD PTR [rip+0x25885]        # 0x14003d570
   140017ceb:	movsd  xmm8,QWORD PTR [rip+0x2649c]        # 0x14003e190
   140017cf4:	subsd  xmm0,xmm6
   140017cf8:	movaps xmm1,xmm8
   140017cfc:	xorps  xmm6,xmm12
   140017d00:	mulsd  xmm0,QWORD PTR [rip+0x256d0]        # 0x14003d3d8
   140017d08:	comisd xmm11,xmm0
   140017d0d:	subsd  xmm6,xmm0
   140017d11:	jbe    0x140017d2b
   140017d13:	xorps  xmm0,xmm12
   140017d17:	call   0x14003bb2a
   140017d1c:	movaps xmm10,xmm0
   140017d20:	mulsd  xmm10,QWORD PTR [rip+0x259bf]        # 0x14003d6e8
   140017d29:	jmp    0x140017d34
   140017d2b:	call   0x14003bb2a
   140017d30:	movaps xmm10,xmm0
   140017d34:	comisd xmm11,xmm6
   140017d39:	movaps xmm1,xmm8
   140017d3d:	jbe    0x140017d55
   140017d3f:	xorps  xmm6,xmm12
   140017d43:	movaps xmm0,xmm6
   140017d46:	call   0x14003bb2a
   140017d4b:	mulsd  xmm0,QWORD PTR [rip+0x25995]        # 0x14003d6e8
   140017d53:	jmp    0x140017d5d
   140017d55:	movaps xmm0,xmm6
   140017d58:	call   0x14003bb2a
   140017d5d:	comisd xmm9,xmm11
   140017d62:	addsd  xmm0,xmm10
   140017d67:	movsd  QWORD PTR [rbx],xmm0
   140017d6b:	jbe    0x140017d75
   140017d6d:	mov    r9d,0x1
   140017d73:	jmp    0x140017d90
   140017d75:	mulsd  xmm0,QWORD PTR [rip+0x26683]        # 0x14003e400
   140017d7d:	unpcklpd xmm0,xmm0
   140017d81:	movups XMMWORD PTR [rbx+0x8],xmm0
   140017d85:	mov    r9d,0x3
   140017d8b:	nop    DWORD PTR [rax+rax*1+0x0]
   140017d90:	movaps xmm12,XMMWORD PTR [rsp+0x20]
   140017d96:	movaps xmm11,XMMWORD PTR [rsp+0x30]
   140017d9c:	movaps xmm10,XMMWORD PTR [rsp+0x40]
   140017da2:	xor    ecx,ecx
   140017da4:	movsxd r8,r9d
   140017da7:	movaps xmm9,XMMWORD PTR [rsp+0x50]
   140017dad:	movaps xmm8,XMMWORD PTR [rsp+0x60]
   140017db3:	movaps xmm6,XMMWORD PTR [rsp+0x80]
   140017dbb:	test   r9d,r9d
   140017dbe:	jle    0x140017e1d
   140017dc0:	cmp    r8,0x4
   140017dc4:	jl     0x140017e01
   140017dc6:	lea    rdx,[r8-0x4]
   140017dca:	lea    rax,[rbx+0x10]
   140017dce:	shr    rdx,0x2
   140017dd2:	inc    rdx
   140017dd5:	lea    rcx,[rdx*4+0x0]
   140017ddd:	nop    DWORD PTR [rax]
   140017de0:	movups xmm0,XMMWORD PTR [rax-0x10]
   140017de4:	add    rax,0x20
   140017de8:	subpd  xmm0,xmm7
   140017dec:	movups XMMWORD PTR [rax-0x30],xmm0
   140017df0:	movups xmm0,XMMWORD PTR [rax-0x20]
   140017df4:	subpd  xmm0,xmm7
   140017df8:	movups XMMWORD PTR [rax-0x20],xmm0
   140017dfc:	dec    rdx
   140017dff:	jne    0x140017de0
   140017e01:	cmp    rcx,r8
   140017e04:	jge    0x140017e1d
   140017e06:	movsd  xmm0,QWORD PTR [rbx+rcx*8]
   140017e0b:	inc    rcx
   140017e0e:	subsd  xmm0,xmm7
   140017e12:	movsd  QWORD PTR [rbx+rcx*8-0x8],xmm0
   140017e18:	cmp    rcx,r8
   140017e1b:	jl     0x140017e06
   140017e1d:	mov    eax,r9d
   140017e20:	movaps xmm7,XMMWORD PTR [rsp+0x70]
   140017e25:	add    rsp,0x90
   140017e2c:	pop    rbx
   140017e2d:	ret    
   140017e2e:	int3   
   140017e2f:	int3   
   140017e30:	mov    QWORD PTR [rsp+0x18],rbx
   140017e35:	push   rbp
   140017e36:	push   rsi
   140017e37:	push   rdi
   140017e38:	push   r13
   140017e3a:	push   r14
   140017e3c:	mov    rbp,rsp
   140017e3f:	sub    rsp,0x40
   140017e43:	movups xmm0,XMMWORD PTR [rcx]
   140017e46:	mov    rsi,rdx
   140017e49:	lea    rdx,[rbp-0x20]
   140017e4d:	lea    rcx,[rbp-0x10]
   140017e51:	xor    r13d,r13d
   140017e54:	mov    ebx,r13d
   140017e57:	movaps XMMWORD PTR [rbp-0x20],xmm0
   140017e5b:	call   0x140017920
   140017e60:	mov    edx,r13d
   140017e63:	movups xmm5,XMMWORD PTR [rax]
   140017e66:	movdqa xmm0,xmm5
   140017e6a:	movaps XMMWORD PTR [rbp-0x20],xmm5
   140017e6e:	mov    r8,QWORD PTR [rbp-0x20]
   140017e72:	psrldq xmm0,0x8
   140017e77:	movd   edi,xmm0
   140017e7b:	movsxd r14,edi
   140017e7e:	cmp    r14,0x4
   140017e82:	jl     0x140017f1d
   140017e88:	lea    rax,[r14-0x4]
   140017e8c:	lea    rcx,[r8+0x20]
   140017e90:	shr    rax,0x2
   140017e94:	inc    rax
   140017e97:	lea    rdx,[rax*4+0x0]
   140017e9f:	nop
   140017ea0:	movups xmm1,XMMWORD PTR [rsi]
   140017ea3:	movups xmm0,XMMWORD PTR [rcx-0x20]
   140017ea7:	movsd  xmm2,QWORD PTR [rcx-0x18]
   140017eac:	add    rcx,0x40
   140017eb0:	subsd  xmm2,QWORD PTR [rsi+0x8]
   140017eb5:	subsd  xmm0,xmm1
   140017eb9:	unpcklpd xmm0,xmm2
   140017ebd:	movsd  xmm2,QWORD PTR [rcx-0x48]
   140017ec2:	movups XMMWORD PTR [rcx-0x60],xmm0
   140017ec6:	movups xmm1,XMMWORD PTR [rsi]
   140017ec9:	subsd  xmm2,QWORD PTR [rsi+0x8]
   140017ece:	movups xmm0,XMMWORD PTR [rcx-0x50]
   140017ed2:	subsd  xmm0,xmm1
   140017ed6:	unpcklpd xmm0,xmm2
   140017eda:	movsd  xmm2,QWORD PTR [rcx-0x38]
   140017edf:	movups XMMWORD PTR [rcx-0x50],xmm0
   140017ee3:	subsd  xmm2,QWORD PTR [rsi+0x8]
   140017ee8:	movups xmm1,XMMWORD PTR [rsi]
   140017eeb:	movups xmm0,XMMWORD PTR [rcx-0x40]
   140017eef:	subsd  xmm0,xmm1
   140017ef3:	unpcklpd xmm0,xmm2
   140017ef7:	movsd  xmm2,QWORD PTR [rcx-0x28]
   140017efc:	movups XMMWORD PTR [rcx-0x40],xmm0
   140017f00:	movups xmm0,XMMWORD PTR [rcx-0x30]
   140017f04:	movups xmm1,XMMWORD PTR [rsi]
   140017f07:	subsd  xmm2,QWORD PTR [rsi+0x8]
   140017f0c:	subsd  xmm0,xmm1
   140017f10:	unpcklpd xmm0,xmm2
   140017f14:	movups XMMWORD PTR [rcx-0x30],xmm0
   140017f18:	dec    rax
   140017f1b:	jne    0x140017ea0
   140017f1d:	cmp    rdx,r14
   140017f20:	jge    0x140017f57
   140017f22:	mov    rax,rdx
   140017f25:	mov    rcx,r14
   140017f28:	shl    rax,0x4
   140017f2c:	add    rax,r8
   140017f2f:	sub    rcx,rdx
   140017f32:	movups xmm0,XMMWORD PTR [rax]
   140017f35:	movsd  xmm2,QWORD PTR [rax+0x8]
   140017f3a:	movups xmm1,XMMWORD PTR [rsi]
   140017f3d:	add    rax,0x10
   140017f41:	subsd  xmm2,QWORD PTR [rsi+0x8]
   140017f46:	subsd  xmm0,xmm1
   140017f4a:	unpcklpd xmm0,xmm2
   140017f4e:	movups XMMWORD PTR [rax-0x10],xmm0
   140017f52:	dec    rcx
   140017f55:	jne    0x140017f32
   140017f57:	mov    QWORD PTR [rsp+0x70],r12
   140017f5c:	mov    rsi,r13
   140017f5f:	mov    QWORD PTR [rsp+0x78],r15
   140017f64:	test   edi,edi
   140017f66:	jle    0x1400180a6
   140017f6c:	mov    r12d,0x2
   140017f72:	mov    r15d,0x3
   140017f78:	lea    r10d,[rdi-0x1]
   140017f7c:	sub    r12d,edi
   140017f7f:	lea    r9,[r8+0x8]
   140017f83:	xorps  xmm1,xmm1
   140017f86:	sub    r15d,edi
   140017f89:	nop    DWORD PTR [rax+0x0]
   140017f90:	movsd  xmm2,QWORD PTR [r9]
   140017f95:	mov    eax,r10d
   140017f98:	cdq    
   140017f99:	idiv   edi
   140017f9b:	ucomisd xmm2,xmm1
   140017f9f:	movsxd r11,edx
   140017fa2:	jp     0x140017fdb
   140017fa4:	jne    0x140017fdb
   140017fa6:	mov    rax,r11
   140017fa9:	add    rax,rax
   140017fac:	movsd  xmm0,QWORD PTR [r8+rax*8+0x8]
   140017fb3:	ucomisd xmm0,xmm1
   140017fb7:	jp     0x140017fdb
   140017fb9:	jne    0x140017fdb
   140017fbb:	movsd  xmm0,QWORD PTR [r9-0x8]
   140017fc1:	mulsd  xmm0,QWORD PTR [r8+rax*8]
   140017fc7:	comisd xmm1,xmm0
   140017fcb:	jbe    0x140018093
   140017fd1:	mov    eax,0x1
   140017fd6:	jmp    0x1400180cd
   140017fdb:	comisd xmm2,xmm1
   140017fdf:	jb     0x140017ff6
   140017fe1:	mov    rcx,r11
   140017fe4:	shl    rcx,0x4
   140017fe8:	add    rcx,r8
   140017feb:	movsd  xmm4,QWORD PTR [rcx+0x8]
   140017ff0:	comisd xmm1,xmm4
   140017ff4:	jae    0x140018015
   140017ff6:	mov    rcx,r11
   140017ff9:	shl    rcx,0x4
   140017ffd:	add    rcx,r8
   140018000:	movsd  xmm4,QWORD PTR [rcx+0x8]
   140018005:	comisd xmm4,xmm1
   140018009:	jb     0x140018093
   14001800f:	comisd xmm1,xmm2
   140018013:	jb     0x140018093
   140018015:	movaps xmm3,xmm4
   140018018:	movaps xmm0,xmm2
   14001801b:	subsd  xmm4,xmm2
   14001801f:	mulsd  xmm3,QWORD PTR [r9-0x8]
   140018025:	mulsd  xmm0,QWORD PTR [rcx]
   140018029:	subsd  xmm3,xmm0
   14001802d:	divsd  xmm3,xmm4
   140018031:	ucomisd xmm3,xmm1
   140018035:	jp     0x140018039
   140018037:	je     0x140017fd1
   140018039:	comisd xmm3,xmm1
   14001803d:	jbe    0x140018093
   14001803f:	ucomisd xmm2,xmm1
   140018043:	jp     0x140018090
   140018045:	jne    0x140018090
   140018047:	lea    eax,[r10+r12*1]
   14001804b:	cdq    
   14001804c:	idiv   edi
   14001804e:	mov    rax,r11
   140018051:	add    rax,rax
   140018054:	movsxd rcx,edx
   140018057:	add    rcx,rcx
   14001805a:	movsd  xmm0,QWORD PTR [r8+rcx*8+0x8]
   140018061:	mulsd  xmm0,QWORD PTR [r8+rax*8+0x8]
   140018068:	comisd xmm1,xmm0
   14001806c:	jbe    0x140018072
   14001806e:	inc    ebx
   140018070:	jmp    0x140018093
   140018072:	lea    eax,[r10+r15*1]
   140018076:	cdq    
   140018077:	idiv   edi
   140018079:	movsxd rax,edx
   14001807c:	add    rax,rax
   14001807f:	mulsd  xmm2,QWORD PTR [r8+rax*8+0x8]
   140018086:	comisd xmm1,xmm2
   14001808a:	jbe    0x140018093
   14001808c:	inc    ebx
   14001808e:	jmp    0x140018093
   140018090:	add    ebx,0x2
   140018093:	inc    rsi
   140018096:	inc    r10d
   140018099:	add    r9,0x10
   14001809d:	cmp    rsi,r14
   1400180a0:	jl     0x140017f90
   1400180a6:	lea    rcx,[rbp-0x20]
   1400180aa:	movdqa XMMWORD PTR [rbp-0x20],xmm5
   1400180af:	call   0x140017990
   1400180b4:	and    ebx,0x80000003
   1400180ba:	jge    0x1400180c3
   1400180bc:	dec    ebx
   1400180be:	or     ebx,0xfffffffc
   1400180c1:	inc    ebx
   1400180c3:	cmp    ebx,0x2
   1400180c6:	setge  r13b
   1400180ca:	mov    eax,r13d
   1400180cd:	mov    r15,QWORD PTR [rsp+0x78]
   1400180d2:	mov    r12,QWORD PTR [rsp+0x70]
   1400180d7:	mov    rbx,QWORD PTR [rsp+0x80]
   1400180df:	add    rsp,0x40
   1400180e3:	pop    r14
   1400180e5:	pop    r13
   1400180e7:	pop    rdi
   1400180e8:	pop    rsi
   1400180e9:	pop    rbp
   1400180ea:	ret    
   1400180eb:	int3   
   1400180ec:	int3   
   1400180ed:	int3   
   1400180ee:	int3   
   1400180ef:	int3   
   1400180f0:	movsd  xmm0,QWORD PTR [rdx]
   1400180f4:	movsd  xmm1,QWORD PTR [rdx+0x8]
   1400180f9:	mov    rax,rcx
   1400180fc:	subsd  xmm0,QWORD PTR [r8]
   140018101:	subsd  xmm1,QWORD PTR [r8+0x8]
   140018107:	movsd  QWORD PTR [rcx],xmm0
   14001810b:	movsd  QWORD PTR [rcx+0x8],xmm1
   140018110:	ret    
   140018111:	int3   
   140018112:	int3   
   140018113:	int3   
   140018114:	int3   
   140018115:	int3   
   140018116:	int3   
   140018117:	int3   
   140018118:	int3   
   140018119:	int3   
   14001811a:	int3   
   14001811b:	int3   
   14001811c:	int3   
   14001811d:	int3   
   14001811e:	int3   
   14001811f:	int3   
   140018120:	mov    QWORD PTR [rsp+0x8],rcx
   140018125:	push   rbp
   140018126:	push   r13
   140018128:	push   r14
   14001812a:	lea    rbp,[rsp-0x3b0]
   140018132:	sub    rsp,0x4b0
   140018139:	mov    r14,rcx
   14001813c:	lea    r8,[rbp+0x140]
   140018143:	lea    rcx,[rsp+0x20]
   140018148:	mov    edx,0x200
   14001814d:	call   0x14001fdc0
   140018152:	mov    rax,QWORD PTR [r14+0x48]
   140018156:	lea    rdx,[rip+0x25827]        # 0x14003d984
   14001815d:	mov    rcx,QWORD PTR [rax]
   140018160:	call   0x140027500
   140018165:	test   rax,rax
   140018168:	jne    0x140018180
   14001816a:	lea    r8,[rip+0x252a7]        # 0x14003d418
   140018171:	lea    rdx,[rip+0x2580c]        # 0x14003d984
   140018178:	mov    rcx,r14
   14001817b:	call   0x140027680
   140018180:	mov    rax,QWORD PTR [r14+0x48]
   140018184:	lea    rdx,[rip+0x262a5]        # 0x14003e430
   14001818b:	mov    rcx,QWORD PTR [rax]
   14001818e:	call   0x140027500
   140018193:	test   rax,rax
   140018196:	jne    0x1400181ae
   140018198:	lea    r8,[rip+0x25279]        # 0x14003d418
   14001819f:	lea    rdx,[rip+0x2628a]        # 0x14003e430
   1400181a6:	mov    rcx,r14
   1400181a9:	call   0x140027680
   1400181ae:	mov    rax,QWORD PTR [r14+0x48]
   1400181b2:	lea    rdx,[rip+0x2627f]        # 0x14003e438
   1400181b9:	mov    rcx,QWORD PTR [rax]
   1400181bc:	call   0x140027500
   1400181c1:	test   rax,rax
   1400181c4:	jne    0x1400181dc
   1400181c6:	lea    r8,[rip+0x2524b]        # 0x14003d418
   1400181cd:	lea    rdx,[rip+0x26264]        # 0x14003e438
   1400181d4:	mov    rcx,r14
   1400181d7:	call   0x140027680
   1400181dc:	mov    QWORD PTR [rip+0x3d265],rax        # 0x140055448
   1400181e3:	mov    rax,QWORD PTR [r14+0x48]
   1400181e7:	lea    rdx,[rip+0x26252]        # 0x14003e440
   1400181ee:	mov    rcx,QWORD PTR [rax]
   1400181f1:	call   0x140027500
   1400181f6:	test   rax,rax
   1400181f9:	jne    0x140018211
   1400181fb:	lea    r8,[rip+0x25216]        # 0x14003d418
   140018202:	lea    rdx,[rip+0x26237]        # 0x14003e440
   140018209:	mov    rcx,r14
   14001820c:	call   0x140027680
   140018211:	mov    QWORD PTR [rip+0x3d238],rax        # 0x140055450
   140018218:	mov    rax,QWORD PTR [r14+0x48]
   14001821c:	lea    rdx,[rip+0x25761]        # 0x14003d984
   140018223:	mov    rcx,QWORD PTR [rax+0x8]
   140018227:	call   0x140027500
   14001822c:	test   rax,rax
   14001822f:	jne    0x140018247
   140018231:	lea    r8,[rip+0x251e0]        # 0x14003d418
   140018238:	lea    rdx,[rip+0x25745]        # 0x14003d984
   14001823f:	mov    rcx,r14
   140018242:	call   0x1400274d0
   140018247:	cmp    BYTE PTR [r14+0x91],0x0
   14001824f:	je     0x140018280
   140018251:	mov    rax,QWORD PTR [r14+0x48]
   140018255:	lea    rdx,[rip+0x261ec]        # 0x14003e448
   14001825c:	mov    rcx,QWORD PTR [rax+0x8]
   140018260:	call   0x140027500
   140018265:	test   rax,rax
   140018268:	jne    0x140018280
   14001826a:	lea    r8,[rip+0x251a7]        # 0x14003d418
   140018271:	lea    rdx,[rip+0x261d0]        # 0x14003e448
   140018278:	mov    rcx,r14
   14001827b:	call   0x1400274d0
   140018280:	cmp    QWORD PTR [r14+0x58],0x0
   140018285:	je     0x1400182e9
   140018287:	lea    rdx,[rip+0x261ba]        # 0x14003e448
   14001828e:	mov    rcx,r14
   140018291:	call   0x140027500
   140018296:	test   rax,rax
   140018299:	jne    0x1400182b1
   14001829b:	lea    r8,[rip+0x25176]        # 0x14003d418
   1400182a2:	lea    rdx,[rip+0x2619f]        # 0x14003e448
   1400182a9:	mov    rcx,r14
   1400182ac:	call   0x1400276b0
   1400182b1:	mov    rax,QWORD PTR [r14+0x58]
   1400182b5:	lea    rdx,[rip+0x26190]        # 0x14003e44c
   1400182bc:	lea    rcx,[rsp+0x40]
   1400182c1:	mov    rax,QWORD PTR [rax+0x30]
   1400182c5:	mov    r9,rax
   1400182c8:	mov    r8d,eax
   1400182cb:	shr    r9,0x20
   1400182cf:	call   QWORD PTR [rip+0x24ddb]        # 0x14003d0b0
   1400182d5:	lea    r8,[rsp+0x40]
   1400182da:	lea    rdx,[rip+0x26167]        # 0x14003e448
   1400182e1:	mov    rcx,r14
   1400182e4:	call   0x1400276d0
   1400182e9:	lea    rdx,[rip+0x26164]        # 0x14003e454
   1400182f0:	mov    rcx,r14
   1400182f3:	call   0x140027500
   1400182f8:	test   rax,rax
   1400182fb:	jne    0x140018313
   1400182fd:	lea    r8,[rip+0x25114]        # 0x14003d418
   140018304:	lea    rdx,[rip+0x26149]        # 0x14003e454
   14001830b:	mov    rcx,r14
   14001830e:	call   0x1400276b0
   140018313:	mov    rcx,r14
   140018316:	call   0x14002a4e0
   14001831b:	mov    r13,rax
   14001831e:	test   rax,rax
   140018321:	je     0x140018942
   140018327:	mov    QWORD PTR [rsp+0x4d8],rbx
   14001832f:	mov    QWORD PTR [rsp+0x4e0],rsi
   140018337:	mov    QWORD PTR [rsp+0x4e8],rdi
   14001833f:	mov    QWORD PTR [rsp+0x4a8],r12
   140018347:	mov    QWORD PTR [rsp+0x4a0],r15
   14001834f:	lea    rbx,[rip+0x2610a]        # 0x14003e460
   140018356:	movaps XMMWORD PTR [rsp+0x490],xmm6
   14001835e:	movaps XMMWORD PTR [rsp+0x480],xmm7
   140018366:	movaps XMMWORD PTR [rsp+0x470],xmm8
   14001836f:	movsd  xmm8,QWORD PTR [rip+0x25060]        # 0x14003d3d8
   140018378:	lea    rsi,[rip+0x7c11]        # 0x14001ff90
   14001837f:	mov    edi,0x8
   140018384:	movaps XMMWORD PTR [rsp+0x460],xmm9
   14001838d:	movaps XMMWORD PTR [rsp+0x450],xmm10
   140018396:	movaps XMMWORD PTR [rsp+0x440],xmm11
   14001839f:	movsd  xmm11,QWORD PTR [rip+0x250e0]        # 0x14003d488
   1400183a8:	movsd  xmm9,QWORD PTR [rip+0x25497]        # 0x14003d848
   1400183b1:	movsd  xmm10,QWORD PTR [rip+0x25326]        # 0x14003d6e0
   1400183ba:	nop    WORD PTR [rax+rax*1+0x0]
   1400183c0:	mov    r9d,DWORD PTR [r13+0x3c]
   1400183c4:	mov    r8d,DWORD PTR [r13+0x38]
   1400183c8:	lea    rdx,[rip+0x2607d]        # 0x14003e44c
   1400183cf:	lea    rcx,[rsp+0x40]
   1400183d4:	call   QWORD PTR [rip+0x24cd6]        # 0x14003d0b0
   1400183da:	lea    r8,[rsp+0x40]
   1400183df:	lea    rdx,[rip+0x2559e]        # 0x14003d984
   1400183e6:	mov    rcx,r13
   1400183e9:	call   0x1400276d0
   1400183ee:	lea    rdx,[rip+0x26063]        # 0x14003e458
   1400183f5:	lea    rcx,[rsp+0x40]
   1400183fa:	movd   xmm2,DWORD PTR [r13+0x50]
   140018400:	cvtdq2pd xmm2,xmm2
   140018404:	divsd  xmm2,xmm11
   140018409:	movq   r8,xmm2
   14001840e:	call   QWORD PTR [rip+0x24c9c]        # 0x14003d0b0
   140018414:	mov    rax,QWORD PTR [rip+0x3d035]        # 0x140055450
   14001841b:	lea    r8,[rsp+0x40]
   140018420:	mov    edx,DWORD PTR [rax+0x10]
   140018423:	mov    rcx,r13
   140018426:	call   0x140027740
   14001842b:	mov    eax,DWORD PTR [r13+0x58]
   14001842f:	lea    rdx,[rip+0x26022]        # 0x14003e458
   140018436:	add    eax,DWORD PTR [r13+0x54]
   14001843a:	lea    rcx,[rsp+0x40]
   14001843f:	movd   xmm2,eax
   140018443:	cvtdq2pd xmm2,xmm2
   140018447:	divsd  xmm2,xmm11
   14001844c:	movq   r8,xmm2
   140018451:	call   QWORD PTR [rip+0x24c59]        # 0x14003d0b0
   140018457:	mov    rax,QWORD PTR [rip+0x3cfea]        # 0x140055448
   14001845e:	lea    r8,[rsp+0x40]
   140018463:	mov    edx,DWORD PTR [rax+0x10]
   140018466:	mov    rcx,r13
   140018469:	call   0x140027740
   14001846e:	mov    r8,QWORD PTR [r13+0x28]
   140018472:	xor    ecx,ecx
   140018474:	mov    rdx,QWORD PTR [r8]
   140018477:	nop    WORD PTR [rax+rax*1+0x0]
   140018480:	movzx  eax,BYTE PTR [rdx+rcx*1]
   140018484:	inc    rcx
   140018487:	cmp    al,BYTE PTR [rbx+rcx*1-0x1]
   14001848b:	jne    0x1400184ef
   14001848d:	cmp    rcx,0x7
   140018491:	jne    0x140018480
   140018493:	mov    rdx,QWORD PTR [r13+0x30]
   140018497:	lea    r8,[rsp+0x20]
   14001849c:	mov    rcx,r13
   14001849f:	call   0x140018e20
   1400184a4:	lea    rcx,[rsp+0x20]
   1400184a9:	call   0x14001ff00
   1400184ae:	mov    rax,QWORD PTR [rsp+0x28]
   1400184b3:	cmp    rax,QWORD PTR [rsp+0x30]
   1400184b8:	jb     0x1400184ce
   1400184ba:	lea    rcx,[rsp+0x20]
   1400184bf:	mov    edx,0x1
   1400184c4:	call   0x14001fe20
   1400184c9:	mov    rax,QWORD PTR [rsp+0x28]
   1400184ce:	mov    BYTE PTR [rax],0x0
   1400184d1:	mov    r8,QWORD PTR [rsp+0x20]
   1400184d6:	lea    rdx,[rip+0x25f53]        # 0x14003e430
   1400184dd:	mov    rcx,r13
   1400184e0:	mov    QWORD PTR [rsp+0x28],r8
   1400184e5:	call   0x1400276d0
   1400184ea:	jmp    0x140018668
   1400184ef:	cmp    QWORD PTR [rip+0x3ceb9],0x0        # 0x1400553b0
   1400184f7:	je     0x140018668
   1400184fd:	cmp    QWORD PTR [r8+0x8],rsi
   140018501:	jne    0x140018668
   140018507:	mov    r14,QWORD PTR [r13+0x30]
   14001850b:	mov    esi,DWORD PTR [r14+0x8]
   14001850f:	cmp    esi,0x3
   140018512:	jge    0x14001853d
   140018514:	lea    rdx,[rip+0x252dd]        # 0x14003d7f8
   14001851b:	mov    rcx,r13
   14001851e:	call   0x1400275b0
   140018523:	test   rax,rax
   140018526:	je     0x14001853b
   140018528:	mov    rcx,rax
   14001852b:	call   QWORD PTR [rip+0x24b57]        # 0x14003d088
   140018531:	mov    esi,eax
   140018533:	cmp    eax,0x3
   140018536:	cmovl  esi,edi
   140018539:	jmp    0x14001853d
   14001853b:	mov    esi,edi
   14001853d:	xor    ebx,ebx
   14001853f:	test   esi,esi
   140018541:	jle    0x140018622
   140018547:	xor    edi,edi
   140018549:	nop    DWORD PTR [rax+0x0]
   140018550:	test   ebx,ebx
   140018552:	jle    0x14001857c
   140018554:	mov    rax,QWORD PTR [rsp+0x28]
   140018559:	cmp    rax,QWORD PTR [rsp+0x30]
   14001855e:	jb     0x140018574
   140018560:	lea    rcx,[rsp+0x20]
   140018565:	mov    edx,0x1
   14001856a:	call   0x14001fe20
   14001856f:	mov    rax,QWORD PTR [rsp+0x28]
   140018574:	mov    BYTE PTR [rax],0x20
   140018577:	inc    QWORD PTR [rsp+0x28]
   14001857c:	cmp    DWORD PTR [r14+0x8],0x3
   140018581:	jl     0x140018594
   140018583:	mov    rax,QWORD PTR [r14+0x30]
   140018587:	movsd  xmm3,QWORD PTR [rax+rdi*1+0x8]
   14001858d:	movsd  xmm2,QWORD PTR [rax+rdi*1]
   140018592:	jmp    0x1400185e9
   140018594:	movd   xmm1,esi
   140018598:	movd   xmm7,ebx
   14001859c:	cvtdq2pd xmm7,xmm7
   1400185a0:	cvtdq2pd xmm1,xmm1
   1400185a4:	divsd  xmm7,xmm1
   1400185a8:	mulsd  xmm7,xmm9
   1400185ad:	mulsd  xmm7,xmm10
   1400185b2:	movaps xmm0,xmm7
   1400185b5:	call   0x14003b884
   1400185ba:	movsd  xmm1,QWORD PTR [r13+0x48]
   1400185c0:	mulsd  xmm1,xmm8
   1400185c5:	movaps xmm6,xmm0
   1400185c8:	movaps xmm0,xmm7
   1400185cb:	mulsd  xmm6,xmm1
   1400185cf:	call   0x14003b87e
   1400185d4:	movsd  xmm1,QWORD PTR [r13+0x40]
   1400185da:	movaps xmm3,xmm6
   1400185dd:	mulsd  xmm1,xmm8
   1400185e2:	mulsd  xmm0,xmm1
   1400185e6:	movaps xmm2,xmm0
   1400185e9:	movq   r9,xmm3
   1400185ee:	movq   r8,xmm2
   1400185f3:	lea    rdx,[rip+0x25e6e]        # 0x14003e468
   1400185fa:	lea    rcx,[rsp+0x40]
   1400185ff:	call   QWORD PTR [rip+0x24aab]        # 0x14003d0b0
   140018605:	lea    rdx,[rsp+0x40]
   14001860a:	lea    rcx,[rsp+0x20]
   14001860f:	call   0x14001ff20
   140018614:	inc    ebx
   140018616:	add    rdi,0x10
   14001861a:	cmp    ebx,esi
   14001861c:	jl     0x140018550
   140018622:	mov    rax,QWORD PTR [rsp+0x28]
   140018627:	cmp    rax,QWORD PTR [rsp+0x30]
   14001862c:	jb     0x140018642
   14001862e:	lea    rcx,[rsp+0x20]
   140018633:	mov    edx,0x1
   140018638:	call   0x14001fe20
   14001863d:	mov    rax,QWORD PTR [rsp+0x28]
   140018642:	mov    BYTE PTR [rax],0x0
   140018645:	mov    r8,QWORD PTR [rsp+0x20]
   14001864a:	mov    rax,QWORD PTR [rip+0x3cd5f]        # 0x1400553b0
   140018651:	mov    QWORD PTR [rsp+0x28],r8
   140018656:	mov    edx,DWORD PTR [rax+0x10]
   140018659:	mov    rcx,r13
   14001865c:	call   0x140027740
   140018661:	mov    r14,QWORD PTR [rbp+0x3d0]
   140018668:	cmp    DWORD PTR [rip+0x3cdf9],0x1        # 0x140055468
   14001866f:	jl     0x1400188bc
   140018675:	mov    rdx,r13
   140018678:	mov    rcx,r14
   14001867b:	call   0x14002b830
   140018680:	mov    rsi,rax
   140018683:	test   rax,rax
   140018686:	je     0x1400188bc
   14001868c:	nop    DWORD PTR [rax+0x0]
   140018690:	cmp    BYTE PTR [rsi+0x78],0x6
   140018694:	je     0x1400188a5
   14001869a:	mov    rax,QWORD PTR [rsi+0x28]
   14001869e:	test   rax,rax
   1400186a1:	jne    0x1400186cf
   1400186a3:	mov    rbx,QWORD PTR [rsi+0x10]
   1400186a7:	mov    rdi,QWORD PTR [rsi+0x18]
   1400186ab:	call   QWORD PTR [rip+0x24c1f]        # 0x14003d2d0
   1400186b1:	mov    r9,QWORD PTR [rbx+0x10]
   1400186b5:	mov    r8,QWORD PTR [rdi+0x10]
   1400186b9:	lea    rcx,[rax+0x60]
   1400186bd:	lea    rdx,[rip+0x25db4]        # 0x14003e478
   1400186c4:	call   QWORD PTR [rip+0x24bf6]        # 0x14003d2c0
   1400186ca:	jmp    0x1400188a5
   1400186cf:	xor    r12d,r12d
   1400186d2:	xor    r15d,r15d
   1400186d5:	cmp    DWORD PTR [rax+0x8],r12d
   1400186d9:	jle    0x14001882c
   1400186df:	xor    ebx,ebx
   1400186e1:	test   r15,r15
   1400186e4:	jle    0x14001870e
   1400186e6:	mov    rax,QWORD PTR [rsp+0x30]
   1400186eb:	cmp    QWORD PTR [rsp+0x28],rax
   1400186f0:	jb     0x140018701
   1400186f2:	lea    rcx,[rsp+0x20]
   1400186f7:	mov    edx,0x1
   1400186fc:	call   0x14001fe20
   140018701:	mov    rax,QWORD PTR [rsp+0x28]
   140018706:	mov    BYTE PTR [rax],0x3b
   140018709:	inc    QWORD PTR [rsp+0x28]
   14001870e:	mov    rax,QWORD PTR [rsi+0x28]
   140018712:	mov    rcx,QWORD PTR [rax]
   140018715:	cmp    DWORD PTR [rcx+rbx*1+0xc],0x0
   14001871a:	je     0x140018747
   14001871c:	mov    r9d,DWORD PTR [rcx+rbx*1+0x18]
   140018721:	mov    r8d,DWORD PTR [rcx+rbx*1+0x14]
   140018726:	lea    rdx,[rip+0x25d63]        # 0x14003e490
   14001872d:	lea    rcx,[rsp+0x40]
   140018732:	call   QWORD PTR [rip+0x24978]        # 0x14003d0b0
   140018738:	lea    rdx,[rsp+0x40]
   14001873d:	lea    rcx,[rsp+0x20]
   140018742:	call   0x14001ff20
   140018747:	mov    rax,QWORD PTR [rsi+0x28]
   14001874b:	mov    rcx,QWORD PTR [rax]
   14001874e:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   140018753:	je     0x140018780
   140018755:	mov    r9d,DWORD PTR [rcx+rbx*1+0x20]
   14001875a:	mov    r8d,DWORD PTR [rcx+rbx*1+0x1c]
   14001875f:	lea    rdx,[rip+0x25d3a]        # 0x14003e4a0
   140018766:	lea    rcx,[rsp+0x40]
   14001876b:	call   QWORD PTR [rip+0x2493f]        # 0x14003d0b0
   140018771:	lea    rdx,[rsp+0x40]
   140018776:	lea    rcx,[rsp+0x20]
   14001877b:	call   0x14001ff20
   140018780:	mov    rax,QWORD PTR [rsi+0x28]
   140018784:	xor    edi,edi
   140018786:	xor    r14d,r14d
   140018789:	mov    rcx,QWORD PTR [rax]
   14001878c:	cmp    DWORD PTR [rcx+rbx*1+0x8],edi
   140018790:	jle    0x14001880d
   140018792:	test   rdi,rdi
   140018795:	jle    0x1400187bf
   140018797:	mov    rax,QWORD PTR [rsp+0x30]
   14001879c:	cmp    QWORD PTR [rsp+0x28],rax
   1400187a1:	jb     0x1400187b2
   1400187a3:	lea    rcx,[rsp+0x20]
   1400187a8:	mov    edx,0x1
   1400187ad:	call   0x14001fe20
   1400187b2:	mov    rax,QWORD PTR [rsp+0x28]
   1400187b7:	mov    BYTE PTR [rax],0x20
   1400187ba:	inc    QWORD PTR [rsp+0x28]
   1400187bf:	mov    rax,QWORD PTR [rsi+0x28]
   1400187c3:	lea    rdx,[rip+0x25c82]        # 0x14003e44c
   1400187ca:	mov    rcx,QWORD PTR [rax]
   1400187cd:	mov    rax,QWORD PTR [rcx+rbx*1]
   1400187d1:	lea    rcx,[rsp+0x40]
   1400187d6:	mov    rax,QWORD PTR [rax+rdi*8]
   1400187da:	mov    r9,rax
   1400187dd:	mov    r8d,eax
   1400187e0:	shr    r9,0x20
   1400187e4:	call   QWORD PTR [rip+0x248c6]        # 0x14003d0b0
   1400187ea:	lea    rdx,[rsp+0x40]
   1400187ef:	lea    rcx,[rsp+0x20]
   1400187f4:	call   0x14001ff20
   1400187f9:	mov    rax,QWORD PTR [rsi+0x28]
   1400187fd:	inc    r14d
   140018800:	mov    rcx,QWORD PTR [rax]
   140018803:	inc    rdi
   140018806:	cmp    r14d,DWORD PTR [rcx+rbx*1+0x8]
   14001880b:	jl     0x140018792
   14001880d:	mov    rax,QWORD PTR [rsi+0x28]
   140018811:	inc    r12d
   140018814:	inc    r15
   140018817:	add    rbx,0x28
   14001881b:	cmp    r12d,DWORD PTR [rax+0x8]
   14001881f:	jl     0x1400186e1
   140018825:	mov    r14,QWORD PTR [rbp+0x3d0]
   14001882c:	mov    rax,QWORD PTR [rsp+0x30]
   140018831:	cmp    QWORD PTR [rsp+0x28],rax
   140018836:	jb     0x140018847
   140018838:	lea    rcx,[rsp+0x20]
   14001883d:	mov    edx,0x1
   140018842:	call   0x14001fe20
   140018847:	mov    rax,QWORD PTR [rsp+0x28]
   14001884c:	lea    rdx,[rip+0x25131]        # 0x14003d984
   140018853:	mov    rcx,rsi
   140018856:	mov    BYTE PTR [rax],0x0
   140018859:	mov    r8,QWORD PTR [rsp+0x20]
   14001885e:	mov    QWORD PTR [rsp+0x28],r8
   140018863:	call   0x1400276d0
   140018868:	mov    rax,QWORD PTR [rsi+0x60]
   14001886c:	test   rax,rax
   14001886f:	je     0x1400188a5
   140018871:	mov    rax,QWORD PTR [rax+0x30]
   140018875:	lea    rdx,[rip+0x25bd0]        # 0x14003e44c
   14001887c:	lea    rcx,[rsp+0x40]
   140018881:	mov    r9,rax
   140018884:	mov    r8d,eax
   140018887:	shr    r9,0x20
   14001888b:	call   QWORD PTR [rip+0x2481f]        # 0x14003d0b0
   140018891:	lea    r8,[rsp+0x40]
   140018896:	lea    rdx,[rip+0x25bab]        # 0x14003e448
   14001889d:	mov    rcx,rsi
   1400188a0:	call   0x1400276d0
   1400188a5:	mov    rdx,rsi
   1400188a8:	mov    rcx,r14
   1400188ab:	call   0x14002b9e0
   1400188b0:	mov    rsi,rax
   1400188b3:	test   rax,rax
   1400188b6:	jne    0x140018690
   1400188bc:	mov    rdx,r13
   1400188bf:	mov    rcx,r14
   1400188c2:	call   0x14002a5e0
   1400188c7:	lea    rbx,[rip+0x25b92]        # 0x14003e460
   1400188ce:	mov    edi,0x8
   1400188d3:	mov    r13,rax
   1400188d6:	lea    rsi,[rip+0x76b3]        # 0x14001ff90
   1400188dd:	test   rax,rax
   1400188e0:	jne    0x1400183c0
   1400188e6:	movaps xmm11,XMMWORD PTR [rsp+0x440]
   1400188ef:	movaps xmm10,XMMWORD PTR [rsp+0x450]
   1400188f8:	movaps xmm9,XMMWORD PTR [rsp+0x460]
   140018901:	mov    r15,QWORD PTR [rsp+0x4a0]
   140018909:	mov    r12,QWORD PTR [rsp+0x4a8]
   140018911:	mov    rdi,QWORD PTR [rsp+0x4e8]
   140018919:	mov    rsi,QWORD PTR [rsp+0x4e0]
   140018921:	mov    rbx,QWORD PTR [rsp+0x4d8]
   140018929:	movaps xmm8,XMMWORD PTR [rsp+0x470]
   140018932:	movaps xmm7,XMMWORD PTR [rsp+0x480]
   14001893a:	movaps xmm6,XMMWORD PTR [rsp+0x490]
   140018942:	mov    rcx,r14
   140018945:	call   0x140018d40
   14001894a:	lea    rcx,[rsp+0x20]
   14001894f:	call   0x14001fda0
   140018954:	add    rsp,0x4b0
   14001895b:	pop    r14
   14001895d:	pop    r13
   14001895f:	pop    rbp
   140018960:	ret    
   140018961:	int3   
   140018962:	int3   
   140018963:	int3   
   140018964:	int3   
   140018965:	int3   
   140018966:	int3   
   140018967:	int3   
   140018968:	int3   
   140018969:	int3   
   14001896a:	int3   
   14001896b:	int3   
   14001896c:	int3   
   14001896d:	int3   
   14001896e:	int3   
   14001896f:	int3   
   140018970:	rex push rbx
   140018972:	sub    rsp,0x20
   140018976:	mov    rbx,rcx
   140018979:	call   0x140018c50
   14001897e:	mov    rcx,rbx
   140018981:	mov    rdx,rax
   140018984:	add    rsp,0x20
   140018988:	pop    rbx
   140018989:	jmp    0x140028c40
   14001898e:	int3   
   14001898f:	int3   
   140018990:	mov    rax,QWORD PTR [rip+0x3cb51]        # 0x1400554e8
   140018997:	test   rax,rax
   14001899a:	je     0x1400189ab
   14001899c:	cmp    BYTE PTR [rax+0xe0],0x0
   1400189a3:	je     0x1400189ab
   1400189a5:	mov    eax,0x1
   1400189aa:	ret    
   1400189ab:	xor    eax,eax
   1400189ad:	ret    
   1400189ae:	int3   
   1400189af:	int3   
   1400189b0:	rex push rbx
   1400189b2:	sub    rsp,0x20
   1400189b6:	lea    rdx,[rip+0x25a53]        # 0x14003e410
   1400189bd:	mov    rbx,rcx
   1400189c0:	call   0x1400275b0
   1400189c5:	test   rax,rax
   1400189c8:	je     0x140018a70
   1400189ce:	lea    r9,[rsp+0x40]
   1400189d3:	lea    r8,[rsp+0x38]
   1400189d8:	lea    rdx,[rip+0x25a39]        # 0x14003e418
   1400189df:	mov    rcx,rax
   1400189e2:	call   QWORD PTR [rip+0x248d0]        # 0x14003d2b8
   1400189e8:	mov    edx,eax
   1400189ea:	movsd  xmm2,QWORD PTR [rip+0x24a96]        # 0x14003d488
   1400189f2:	movsd  xmm1,QWORD PTR [rip+0x249de]        # 0x14003d3d8
   1400189fa:	xorps  xmm3,xmm3
   1400189fd:	test   eax,eax
   1400189ff:	jle    0x140018a2d
   140018a01:	movsd  xmm0,QWORD PTR [rsp+0x38]
   140018a07:	mulsd  xmm0,xmm2
   140018a0b:	comisd xmm0,xmm3
   140018a0f:	jb     0x140018a17
   140018a11:	addsd  xmm0,xmm1
   140018a15:	jmp    0x140018a1b
   140018a17:	subsd  xmm0,xmm1
   140018a1b:	mov    rax,QWORD PTR [rbx+0x50]
   140018a1f:	cvttsd2si ecx,xmm0
   140018a23:	mov    DWORD PTR [rax+0x1c],ecx
   140018a26:	mov    rax,QWORD PTR [rbx+0x50]
   140018a2a:	mov    DWORD PTR [rax+0x18],ecx
   140018a2d:	cmp    edx,0x1
   140018a30:	jle    0x140018ac9
   140018a36:	movsd  xmm0,QWORD PTR [rsp+0x40]
   140018a3c:	mulsd  xmm0,xmm2
   140018a40:	comisd xmm0,xmm3
   140018a44:	jb     0x140018a5b
   140018a46:	mov    rax,QWORD PTR [rbx+0x50]
   140018a4a:	addsd  xmm0,xmm1
   140018a4e:	cvttsd2si ecx,xmm0
   140018a52:	mov    DWORD PTR [rax+0x1c],ecx
   140018a55:	add    rsp,0x20
   140018a59:	pop    rbx
   140018a5a:	ret    
   140018a5b:	mov    rax,QWORD PTR [rbx+0x50]
   140018a5f:	subsd  xmm0,xmm1
   140018a63:	cvttsd2si ecx,xmm0
   140018a67:	mov    DWORD PTR [rax+0x1c],ecx
   140018a6a:	add    rsp,0x20
   140018a6e:	pop    rbx
   140018a6f:	ret    
   140018a70:	movsxd rax,DWORD PTR [rip+0x3ca81]        # 0x1400554f8
   140018a77:	cmp    eax,0x1a
   140018a7a:	ja     0x140018ac9
   140018a7c:	lea    rdx,[rip+0xfffffffffffe757d]        # 0x140000000
   140018a83:	movzx  eax,BYTE PTR [rdx+rax*1+0x18adc]
   140018a8b:	mov    ecx,DWORD PTR [rdx+rax*4+0x18ad0]
   140018a92:	add    rcx,rdx
   140018a95:	jmp    rcx
   140018a97:	mov    rax,QWORD PTR [rbx+0x50]
   140018a9b:	mov    DWORD PTR [rax+0x1c],0x5
   140018aa2:	mov    rax,QWORD PTR [rbx+0x50]
   140018aa6:	mov    DWORD PTR [rax+0x18],0x5
   140018aad:	add    rsp,0x20
   140018ab1:	pop    rbx
   140018ab2:	ret    
   140018ab3:	mov    rax,QWORD PTR [rbx+0x50]
   140018ab7:	mov    DWORD PTR [rax+0x1c],0x24
   140018abe:	mov    rax,QWORD PTR [rbx+0x50]
   140018ac2:	mov    DWORD PTR [rax+0x18],0x24
   140018ac9:	add    rsp,0x20
   140018acd:	pop    rbx
   140018ace:	ret    
   140018acf:	nop
   140018ad0:	mov    bl,0x8a
   140018ad2:	add    DWORD PTR [rax],eax
   140018ad4:	xchg   edi,eax
   140018ad5:	mov    al,BYTE PTR [rcx]
   140018ad7:	add    cl,cl
   140018ad9:	mov    al,BYTE PTR [rcx]
   140018adb:	add    BYTE PTR [rax],al
   140018add:	add    BYTE PTR [rax],al
   140018adf:	add    BYTE PTR [rax],al
   140018ae1:	add    al,BYTE PTR [rax]
   140018ae3:	add    BYTE PTR [rcx],al
   140018ae5:	add    DWORD PTR [rcx],eax
   140018ae7:	add    DWORD PTR [rcx],eax
   140018ae9:	add    DWORD PTR [rcx],eax
   140018aeb:	add    al,BYTE PTR [rcx]
   140018aed:	add    DWORD PTR [rcx],eax
   140018aef:	add    DWORD PTR [rax],eax
   140018af1:	add    BYTE PTR [rax],al
   140018af3:	add    DWORD PTR [rcx],eax
   140018af5:	add    al,BYTE PTR [rax]
   140018af7:	int3   
   140018af8:	int3   
   140018af9:	int3   
   140018afa:	int3   
   140018afb:	int3   
   140018afc:	int3   
   140018afd:	int3   
   140018afe:	int3   
   140018aff:	int3   
   140018b00:	rex push rbx
   140018b02:	sub    rsp,0x20
   140018b06:	mov    rbx,rcx
   140018b09:	call   0x1400189b0
   140018b0e:	movsxd rax,DWORD PTR [rip+0x3c9e3]        # 0x1400554f8
   140018b15:	cmp    eax,0x1a
   140018b18:	ja     0x140018c01
   140018b1e:	lea    rcx,[rip+0xfffffffffffe74db]        # 0x140000000
   140018b25:	movzx  eax,BYTE PTR [rcx+rax*1+0x18c34]
   140018b2d:	mov    edx,DWORD PTR [rcx+rax*4+0x18c14]
   140018b34:	add    rdx,rcx
   140018b37:	jmp    rdx
   140018b39:	xor    edx,edx
   140018b3b:	mov    rcx,rbx
   140018b3e:	call   0x14001dee0
   140018b43:	mov    rcx,QWORD PTR [rip+0x3c9a6]        # 0x1400554f0
   140018b4a:	add    rsp,0x20
   140018b4e:	pop    rbx
   140018b4f:	rex.W jmp QWORD PTR [rip+0x245a2]        # 0x14003d0f8
   140018b56:	mov    edx,0x2
   140018b5b:	mov    rcx,rbx
   140018b5e:	call   0x14001dee0
   140018b63:	mov    rcx,QWORD PTR [rip+0x3c986]        # 0x1400554f0
   140018b6a:	add    rsp,0x20
   140018b6e:	pop    rbx
   140018b6f:	rex.W jmp QWORD PTR [rip+0x24582]        # 0x14003d0f8
   140018b76:	mov    edx,0x1
   140018b7b:	mov    rcx,rbx
   140018b7e:	call   0x14001dee0
   140018b83:	mov    rcx,QWORD PTR [rip+0x3c966]        # 0x1400554f0
   140018b8a:	add    rsp,0x20
   140018b8e:	pop    rbx
   140018b8f:	rex.W jmp QWORD PTR [rip+0x24562]        # 0x14003d0f8
   140018b96:	mov    rcx,rbx
   140018b99:	call   0x140018120
   140018b9e:	mov    rdx,QWORD PTR [rip+0x3c94b]        # 0x1400554f0
   140018ba5:	mov    rcx,rbx
   140018ba8:	call   0x140028fa0
   140018bad:	mov    rcx,QWORD PTR [rip+0x3c93c]        # 0x1400554f0
   140018bb4:	add    rsp,0x20
   140018bb8:	pop    rbx
   140018bb9:	rex.W jmp QWORD PTR [rip+0x24538]        # 0x14003d0f8
   140018bc0:	mov    rcx,rbx
   140018bc3:	call   0x140018120
   140018bc8:	mov    rdx,QWORD PTR [rip+0x3c921]        # 0x1400554f0
   140018bcf:	mov    rcx,rbx
   140018bd2:	call   0x140018f00
   140018bd7:	mov    rcx,QWORD PTR [rip+0x3c912]        # 0x1400554f0
   140018bde:	add    rsp,0x20
   140018be2:	pop    rbx
   140018be3:	rex.W jmp QWORD PTR [rip+0x2450e]        # 0x14003d0f8
   140018bea:	mov    rcx,rbx
   140018bed:	call   0x140018120
   140018bf2:	mov    rdx,QWORD PTR [rip+0x3c8f7]        # 0x1400554f0
   140018bf9:	mov    rcx,rbx
   140018bfc:	call   0x1400193d0
   140018c01:	mov    rcx,QWORD PTR [rip+0x3c8e8]        # 0x1400554f0
   140018c08:	add    rsp,0x20
   140018c0c:	pop    rbx
   140018c0d:	rex.W jmp QWORD PTR [rip+0x244e4]        # 0x14003d0f8
   140018c14:	xchg   esi,eax
   140018c15:	mov    eax,DWORD PTR [rcx]
   140018c17:	add    BYTE PTR [rcx],bh
   140018c19:	mov    eax,DWORD PTR [rcx]
   140018c1b:	add    al,al
   140018c1d:	mov    eax,DWORD PTR [rcx]
   140018c1f:	add    dl,ch
   140018c21:	mov    eax,DWORD PTR [rcx]
   140018c23:	add    BYTE PTR [rsi-0x75],dh
   140018c26:	add    DWORD PTR [rax],eax
   140018c28:	push   rsi
   140018c29:	mov    eax,DWORD PTR [rcx]
   140018c2b:	add    BYTE PTR [rsi+0x100018b],bl
   140018c31:	mov    WORD PTR [rcx],es
   140018c33:	add    BYTE PTR [rax],al
   140018c35:	add    DWORD PTR [rcx],eax
   140018c37:	add    DWORD PTR [rcx],eax
   140018c39:	add    DWORD PTR [rdx],eax
   140018c3b:	add    eax,DWORD PTR [rcx]
   140018c3d:	add    DWORD PTR [rcx],eax
   140018c3f:	add    DWORD PTR [rcx],eax
   140018c41:	add    DWORD PTR [rcx],eax
   140018c43:	(bad)  
   140018c44:	add    DWORD PTR [rcx],eax
   140018c46:	add    DWORD PTR [rcx],eax
   140018c48:	add    al,0x1
   140018c4a:	add    eax,0x1060101
   140018c4f:	int3   
   140018c50:	rex push rbx
   140018c52:	sub    rsp,0x20
   140018c56:	or     rdx,0xffffffffffffffff
   140018c5a:	mov    rax,rdx
   140018c5d:	nop    DWORD PTR [rax]
   140018c60:	cmp    BYTE PTR [rcx+rax*1+0x1],0x0
   140018c65:	lea    rax,[rax+0x1]
   140018c69:	jne    0x140018c60
   140018c6b:	lea    rax,[rax*2+0x2]
   140018c73:	mov    ebx,0x200
   140018c78:	cmp    rax,rbx
   140018c7b:	jbe    0x140018c92
   140018c7d:	nop    DWORD PTR [rax]
   140018c80:	cmp    BYTE PTR [rcx+rdx*1+0x1],0x0
   140018c85:	lea    rdx,[rdx+0x1]
   140018c89:	jne    0x140018c80
   140018c8b:	lea    ebx,[rdx*2+0x2]
   140018c92:	cmp    ebx,DWORD PTR [rip+0x3ab48]        # 0x1400537e0
   140018c98:	jle    0x140018cde
   140018c9a:	mov    rcx,QWORD PTR [rip+0x3ab37]        # 0x1400537d8
   140018ca1:	test   rcx,rcx
   140018ca4:	je     0x140018cc2
   140018ca6:	movsxd rdx,ebx
   140018ca9:	call   QWORD PTR [rip+0x243f9]        # 0x14003d0a8
   140018caf:	mov    DWORD PTR [rip+0x3ab2b],ebx        # 0x1400537e0
   140018cb5:	mov    QWORD PTR [rip+0x3ab1c],rax        # 0x1400537d8
   140018cbc:	add    rsp,0x20
   140018cc0:	pop    rbx
   140018cc1:	ret    
   140018cc2:	movsxd rcx,ebx
   140018cc5:	call   QWORD PTR [rip+0x2449d]        # 0x14003d168
   140018ccb:	mov    DWORD PTR [rip+0x3ab0f],ebx        # 0x1400537e0
   140018cd1:	mov    QWORD PTR [rip+0x3ab00],rax        # 0x1400537d8
   140018cd8:	add    rsp,0x20
   140018cdc:	pop    rbx
   140018cdd:	ret    
   140018cde:	mov    rax,QWORD PTR [rip+0x3aaf3]        # 0x1400537d8
   140018ce5:	add    rsp,0x20
   140018ce9:	pop    rbx
   140018cea:	ret    
   140018ceb:	int3   
   140018cec:	int3   
   140018ced:	int3   
   140018cee:	int3   
   140018cef:	int3   
   140018cf0:	sub    rsp,0x28
   140018cf4:	mov    rax,rdx
   140018cf7:	movd   xmm2,edx
   140018cfb:	lea    rdx,[rip+0x25846]        # 0x14003e548
   140018d02:	shr    rax,0x20
   140018d06:	movd   xmm3,eax
   140018d0a:	cvtdq2pd xmm2,xmm2
   140018d0e:	divsd  xmm2,QWORD PTR [rip+0x24772]        # 0x14003d488
   140018d16:	cvtdq2pd xmm3,xmm3
   140018d1a:	divsd  xmm3,QWORD PTR [rip+0x24766]        # 0x14003d488
   140018d22:	movq   r8,xmm2
   140018d27:	movq   r9,xmm3
   140018d2c:	call   QWORD PTR [rip+0x2458e]        # 0x14003d2c0
   140018d32:	add    rsp,0x28
   140018d36:	ret    
   140018d37:	int3   
   140018d38:	int3   
   140018d39:	int3   
   140018d3a:	int3   
   140018d3b:	int3   
   140018d3c:	int3   
   140018d3d:	int3   
   140018d3e:	int3   
   140018d3f:	int3   
   140018d40:	mov    QWORD PTR [rsp+0x10],rsi
   140018d45:	push   rdi
   140018d46:	sub    rsp,0x50
   140018d4a:	mov    eax,DWORD PTR [rcx+0x6c]
   140018d4d:	mov    r9d,DWORD PTR [rcx+0x64]
   140018d51:	mov    r8d,DWORD PTR [rcx+0x60]
   140018d55:	mov    DWORD PTR [rsp+0x28],eax
   140018d59:	mov    eax,DWORD PTR [rcx+0x68]
   140018d5c:	mov    rsi,rcx
   140018d5f:	lea    rdx,[rip+0x2574a]        # 0x14003e4b0
   140018d66:	lea    rcx,[rsp+0x30]
   140018d6b:	mov    DWORD PTR [rsp+0x20],eax
   140018d6f:	call   QWORD PTR [rip+0x2433b]        # 0x14003d0b0
   140018d75:	lea    r8,[rsp+0x30]
   140018d7a:	lea    rdx,[rip+0x256d3]        # 0x14003e454
   140018d81:	mov    rcx,rsi
   140018d84:	call   0x1400276d0
   140018d89:	mov    edi,0x1
   140018d8e:	cmp    DWORD PTR [rsi+0xdc],edi
   140018d94:	jl     0x140018dc3
   140018d96:	mov    QWORD PTR [rsp+0x60],rbx
   140018d9b:	mov    ebx,0x8
   140018da0:	mov    rcx,QWORD PTR [rsi+0xe0]
   140018da7:	mov    rcx,QWORD PTR [rcx+rbx*1]
   140018dab:	call   0x140018d40
   140018db0:	inc    edi
   140018db2:	lea    rbx,[rbx+0x8]
   140018db6:	cmp    edi,DWORD PTR [rsi+0xdc]
   140018dbc:	jle    0x140018da0
   140018dbe:	mov    rbx,QWORD PTR [rsp+0x60]
   140018dc3:	mov    rsi,QWORD PTR [rsp+0x68]
   140018dc8:	add    rsp,0x50
   140018dcc:	pop    rdi
   140018dcd:	ret    
   140018dce:	int3   
   140018dcf:	int3   
   140018dd0:	mov    QWORD PTR [rsp+0x8],rbx
   140018dd5:	mov    QWORD PTR [rsp+0x10],rsi
   140018dda:	push   rdi
   140018ddb:	sub    rsp,0x20
   140018ddf:	mov    rax,rdx
   140018de2:	mov    rsi,rcx
   140018de5:	mov    rdx,r8
   140018de8:	mov    rcx,rax
   140018deb:	mov    rdi,r9
   140018dee:	mov    rbx,r8
   140018df1:	call   0x140027500
   140018df6:	test   rax,rax
   140018df9:	jne    0x140018e08
   140018dfb:	mov    r8,rdi
   140018dfe:	mov    rdx,rbx
   140018e01:	mov    rcx,rsi
   140018e04:	call   QWORD PTR [rsp+0x50]
   140018e08:	mov    rbx,QWORD PTR [rsp+0x30]
   140018e0d:	mov    rsi,QWORD PTR [rsp+0x38]
   140018e12:	add    rsp,0x20
   140018e16:	pop    rdi
   140018e17:	ret    
   140018e18:	int3   
   140018e19:	int3   
   140018e1a:	int3   
   140018e1b:	int3   
   140018e1c:	int3   
   140018e1d:	int3   
   140018e1e:	int3   
   140018e1f:	int3   
   140018e20:	mov    QWORD PTR [rsp+0x10],rbx
   140018e25:	mov    QWORD PTR [rsp+0x20],rbp
   140018e2a:	mov    QWORD PTR [rsp+0x18],r8
   140018e2f:	push   rsi
   140018e30:	sub    rsp,0x230
   140018e37:	cmp    DWORD PTR [rdx+0x18],0x0
   140018e3b:	mov    rax,r8
   140018e3e:	mov    rsi,rdx
   140018e41:	mov    rbp,rcx
   140018e44:	jne    0x140018e9b
   140018e46:	mov    r9d,DWORD PTR [rcx+0x3c]
   140018e4a:	mov    r11d,DWORD PTR [rdx+0x14]
   140018e4e:	mov    r10d,DWORD PTR [rdx+0x10]
   140018e52:	mov    r8d,DWORD PTR [rdx+0x8]
   140018e56:	add    r10d,DWORD PTR [rcx+0x38]
   140018e5a:	add    r11d,r9d
   140018e5d:	add    r9d,DWORD PTR [rdx+0xc]
   140018e61:	add    r8d,DWORD PTR [rcx+0x38]
   140018e65:	mov    DWORD PTR [rsp+0x28],r11d
   140018e6a:	lea    rdx,[rip+0x255af]        # 0x14003e420
   140018e71:	lea    rcx,[rsp+0x30]
   140018e76:	mov    DWORD PTR [rsp+0x20],r10d
   140018e7b:	call   QWORD PTR [rip+0x2422f]        # 0x14003d0b0
   140018e81:	mov    rcx,QWORD PTR [rsp+0x250]
   140018e89:	lea    rdx,[rsp+0x30]
   140018e8e:	call   0x14001ff20
   140018e93:	mov    rax,QWORD PTR [rsp+0x250]
   140018e9b:	xor    ebx,ebx
   140018e9d:	cmp    DWORD PTR [rsi+0x18],ebx
   140018ea0:	jle    0x140018ede
   140018ea2:	mov    QWORD PTR [rsp+0x240],rdi
   140018eaa:	mov    edi,ebx
   140018eac:	nop    DWORD PTR [rax+0x0]
   140018eb0:	mov    rdx,QWORD PTR [rsi+0x28]
   140018eb4:	mov    r8,rax
   140018eb7:	mov    rcx,rbp
   140018eba:	mov    rdx,QWORD PTR [rdx+rdi*1]
   140018ebe:	call   0x140018e20
   140018ec3:	mov    rax,QWORD PTR [rsp+0x250]
   140018ecb:	inc    ebx
   140018ecd:	lea    rdi,[rdi+0x8]
   140018ed1:	cmp    ebx,DWORD PTR [rsi+0x18]
   140018ed4:	jl     0x140018eb0
   140018ed6:	mov    rdi,QWORD PTR [rsp+0x240]
   140018ede:	lea    r11,[rsp+0x230]
   140018ee6:	mov    rbx,QWORD PTR [r11+0x18]
   140018eea:	mov    rbp,QWORD PTR [r11+0x28]
   140018eee:	mov    rsp,r11
   140018ef1:	pop    rsi
   140018ef2:	ret    
   140018ef3:	int3   
   140018ef4:	int3   
   140018ef5:	int3   
   140018ef6:	int3   
   140018ef7:	int3   
   140018ef8:	int3   
   140018ef9:	int3   
   140018efa:	int3   
   140018efb:	int3   
   140018efc:	int3   
   140018efd:	int3   
   140018efe:	int3   
   140018eff:	int3   
   140018f00:	mov    rax,rsp
   140018f03:	mov    QWORD PTR [rax+0x8],rbx
   140018f07:	mov    QWORD PTR [rax+0x10],rbp
   140018f0b:	mov    QWORD PTR [rax+0x18],rsi
   140018f0f:	push   rdi
   140018f10:	push   r12
   140018f12:	push   r13
   140018f14:	push   r14
   140018f16:	push   r15
   140018f18:	sub    rsp,0x90
   140018f1f:	movaps XMMWORD PTR [rax-0x38],xmm6
   140018f23:	mov    r14,rdx
   140018f26:	mov    r13,rcx
   140018f29:	call   0x14001f5b0
   140018f2e:	mov    rax,QWORD PTR [r13+0x50]
   140018f32:	lea    rdx,[rip+0x2558f]        # 0x14003e4c8
   140018f39:	mov    rcx,r14
   140018f3c:	movsd  xmm2,QWORD PTR [rax+0x8]
   140018f41:	movq   r8,xmm2
   140018f46:	call   QWORD PTR [rip+0x24374]        # 0x14003d2c0
   140018f4c:	mov    rax,QWORD PTR [r13+0x68]
   140018f50:	movsd  xmm6,QWORD PTR [rip+0x24530]        # 0x14003d488
   140018f58:	mov    r8,rax
   140018f5b:	lea    rdx,[rip+0x255e6]        # 0x14003e548
   140018f62:	mov    rcx,r14
   140018f65:	movd   xmm2,eax
   140018f69:	shr    r8,0x20
   140018f6d:	cvtdq2pd xmm2,xmm2
   140018f71:	movd   xmm3,r8d
   140018f76:	divsd  xmm2,xmm6
   140018f7a:	cvtdq2pd xmm3,xmm3
   140018f7e:	divsd  xmm3,xmm6
   140018f82:	movq   r8,xmm2
   140018f87:	movq   r9,xmm3
   140018f8c:	call   QWORD PTR [rip+0x2432e]        # 0x14003d2c0
   140018f92:	lea    rdx,[rip+0x24bdf]        # 0x14003db78
   140018f99:	mov    rcx,r14
   140018f9c:	call   QWORD PTR [rip+0x2431e]        # 0x14003d2c0
   140018fa2:	mov    rcx,r13
   140018fa5:	call   0x14002a4e0
   140018faa:	mov    r15,rax
   140018fad:	test   rax,rax
   140018fb0:	je     0x1400190e9
   140018fb6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140018fc0:	mov    rbx,QWORD PTR [r15+0x10]
   140018fc4:	mov    rcx,rbx
   140018fc7:	call   0x140018c50
   140018fcc:	mov    rcx,rbx
   140018fcf:	mov    rdx,rax
   140018fd2:	call   0x140028c40
   140018fd7:	lea    rdx,[rip+0x254fa]        # 0x14003e4d8
   140018fde:	mov    rcx,r14
   140018fe1:	mov    r8,rax
   140018fe4:	call   QWORD PTR [rip+0x242d6]        # 0x14003d2c0
   140018fea:	mov    rax,QWORD PTR [r15+0x38]
   140018fee:	lea    rdx,[rip+0x25553]        # 0x14003e548
   140018ff5:	mov    rcx,rax
   140018ff8:	movd   xmm2,eax
   140018ffc:	shr    rcx,0x20
   140019000:	cvtdq2pd xmm2,xmm2
   140019004:	movd   xmm3,ecx
   140019008:	mov    rcx,r14
   14001900b:	divsd  xmm2,xmm6
   14001900f:	cvtdq2pd xmm3,xmm3
   140019013:	divsd  xmm3,xmm6
   140019017:	movq   r8,xmm2
   14001901c:	movq   r9,xmm3
   140019021:	call   QWORD PTR [rip+0x24299]        # 0x14003d2c0
   140019027:	mov    rax,QWORD PTR [r15+0x60]
   14001902b:	mov    rbx,QWORD PTR [rax]
   14001902e:	mov    rcx,rbx
   140019031:	call   0x140018c50
   140019036:	mov    rcx,rbx
   140019039:	mov    rdx,rax
   14001903c:	call   0x140028c40
   140019041:	mov    rdx,QWORD PTR [rip+0x3c3e8]        # 0x140055430
   140019048:	lea    r8,[rip+0x25499]        # 0x14003e4e8
   14001904f:	mov    rcx,r15
   140019052:	mov    rbp,rax
   140019055:	call   0x14001c3a0
   14001905a:	mov    rdx,QWORD PTR [rip+0x3c3d7]        # 0x140055438
   140019061:	lea    r8,[rip+0x2548c]        # 0x14003e4f4
   140019068:	mov    rcx,r15
   14001906b:	mov    rsi,rax
   14001906e:	call   0x14001c3a0
   140019073:	mov    rdx,QWORD PTR [rip+0x3c38e]        # 0x140055408
   14001907a:	mov    rdi,QWORD PTR [r15+0x28]
   14001907e:	lea    r8,[rip+0x25477]        # 0x14003e4fc
   140019085:	mov    rcx,r15
   140019088:	mov    rbx,rax
   14001908b:	call   0x14001c3a0
   140019090:	mov    rcx,QWORD PTR [rdi]
   140019093:	mov    QWORD PTR [rsp+0x40],rsi
   140019098:	movsd  xmm3,QWORD PTR [r15+0x48]
   14001909e:	movsd  xmm2,QWORD PTR [r15+0x40]
   1400190a4:	movq   r9,xmm3
   1400190a9:	movq   r8,xmm2
   1400190ae:	mov    QWORD PTR [rsp+0x38],rbx
   1400190b3:	mov    QWORD PTR [rsp+0x30],rcx
   1400190b8:	mov    QWORD PTR [rsp+0x28],rax
   1400190bd:	lea    rdx,[rip+0x25444]        # 0x14003e508
   1400190c4:	mov    rcx,r14
   1400190c7:	mov    QWORD PTR [rsp+0x20],rbp
   1400190cc:	call   QWORD PTR [rip+0x241ee]        # 0x14003d2c0
   1400190d2:	mov    rdx,r15
   1400190d5:	mov    rcx,r13
   1400190d8:	call   0x14002a5e0
   1400190dd:	mov    r15,rax
   1400190e0:	test   rax,rax
   1400190e3:	jne    0x140018fc0
   1400190e9:	mov    rcx,r13
   1400190ec:	call   0x14002a4e0
   1400190f1:	mov    r12,rax
   1400190f4:	test   rax,rax
   1400190f7:	je     0x14001938e
   1400190fd:	nop    DWORD PTR [rax]
   140019100:	mov    rdx,r12
   140019103:	mov    rcx,r13
   140019106:	call   0x14002b830
   14001910b:	mov    r15,rax
   14001910e:	test   rax,rax
   140019111:	je     0x140019377
   140019117:	nop    WORD PTR [rax+rax*1+0x0]
   140019120:	mov    rcx,QWORD PTR [r15+0x28]
   140019124:	test   rcx,rcx
   140019127:	je     0x1400192a8
   14001912d:	movsxd rdx,DWORD PTR [rcx+0x8]
   140019131:	xor    edi,edi
   140019133:	test   rdx,rdx
   140019136:	jle    0x14001916b
   140019138:	mov    rcx,QWORD PTR [rcx]
   14001913b:	nop    DWORD PTR [rax+rax*1+0x0]
   140019140:	movups xmm2,XMMWORD PTR [rcx]
   140019143:	movups xmm1,XMMWORD PTR [rcx+0x10]
   140019147:	movsd  xmm0,QWORD PTR [rcx+0x20]
   14001914c:	lea    rcx,[rcx+0x28]
   140019150:	psrldq xmm2,0x8
   140019155:	movsd  QWORD PTR [rsp+0x70],xmm0
   14001915b:	movups XMMWORD PTR [rsp+0x60],xmm1
   140019160:	movd   eax,xmm2
   140019164:	add    edi,eax
   140019166:	dec    rdx
   140019169:	jne    0x140019140
   14001916b:	lea    rdx,[rip+0x253b2]        # 0x14003e524
   140019172:	mov    rcx,r14
   140019175:	call   QWORD PTR [rip+0x24145]        # 0x14003d2c0
   14001917b:	mov    rax,QWORD PTR [r15+0x18]
   14001917f:	mov    rbx,QWORD PTR [rax+0x10]
   140019183:	mov    rcx,rbx
   140019186:	call   0x140018c50
   14001918b:	mov    rcx,rbx
   14001918e:	mov    rdx,rax
   140019191:	call   0x140028c40
   140019196:	lea    rdx,[rip+0x2531f]        # 0x14003e4bc
   14001919d:	mov    rcx,r14
   1400191a0:	mov    r8,rax
   1400191a3:	call   QWORD PTR [rip+0x24117]        # 0x14003d2c0
   1400191a9:	lea    rdx,[rip+0x2537c]        # 0x14003e52c
   1400191b0:	mov    rcx,r14
   1400191b3:	call   QWORD PTR [rip+0x24107]        # 0x14003d2c0
   1400191b9:	mov    rax,QWORD PTR [r15+0x10]
   1400191bd:	mov    rbx,QWORD PTR [rax+0x10]
   1400191c1:	mov    rcx,rbx
   1400191c4:	call   0x140018c50
   1400191c9:	mov    rcx,rbx
   1400191cc:	mov    rdx,rax
   1400191cf:	call   0x140028c40
   1400191d4:	lea    rdx,[rip+0x252e1]        # 0x14003e4bc
   1400191db:	mov    rcx,r14
   1400191de:	mov    r8,rax
   1400191e1:	call   QWORD PTR [rip+0x240d9]        # 0x14003d2c0
   1400191e7:	lea    rdx,[rip+0x25342]        # 0x14003e530
   1400191ee:	mov    r8d,edi
   1400191f1:	mov    rcx,r14
   1400191f4:	call   QWORD PTR [rip+0x240c6]        # 0x14003d2c0
   1400191fa:	mov    rax,QWORD PTR [r15+0x28]
   1400191fe:	xor    ebp,ebp
   140019200:	cmp    DWORD PTR [rax+0x8],ebp
   140019203:	jle    0x1400192a8
   140019209:	xor    esi,esi
   14001920b:	nop    DWORD PTR [rax+rax*1+0x0]
   140019210:	mov    rax,QWORD PTR [rax]
   140019213:	movups xmm0,XMMWORD PTR [rsi+rax*1]
   140019217:	movups xmm1,XMMWORD PTR [rsi+rax*1+0x10]
   14001921c:	movups xmm2,xmm0
   14001921f:	movups XMMWORD PTR [rsp+0x50],xmm0
   140019224:	movsd  xmm0,QWORD PTR [rsi+rax*1+0x20]
   14001922a:	psrldq xmm2,0x8
   14001922f:	movsd  QWORD PTR [rsp+0x70],xmm0
   140019235:	movups XMMWORD PTR [rsp+0x60],xmm1
   14001923a:	movd   eax,xmm2
   14001923e:	test   eax,eax
   140019240:	jle    0x140019295
   140019242:	mov    rbx,QWORD PTR [rsp+0x50]
   140019247:	mov    edi,eax
   140019249:	nop    DWORD PTR [rax+0x0]
   140019250:	mov    rax,QWORD PTR [rbx]
   140019253:	lea    rdx,[rip+0x252ee]        # 0x14003e548
   14001925a:	mov    rcx,rax
   14001925d:	shr    rcx,0x20
   140019261:	movd   xmm2,eax
   140019265:	movd   xmm3,ecx
   140019269:	cvtdq2pd xmm2,xmm2
   14001926d:	mov    rcx,r14
   140019270:	divsd  xmm2,xmm6
   140019274:	cvtdq2pd xmm3,xmm3
   140019278:	divsd  xmm3,xmm6
   14001927c:	movq   r8,xmm2
   140019281:	movq   r9,xmm3
   140019286:	call   QWORD PTR [rip+0x24034]        # 0x14003d2c0
   14001928c:	lea    rbx,[rbx+0x8]
   140019290:	dec    rdi
   140019293:	jne    0x140019250
   140019295:	mov    rax,QWORD PTR [r15+0x28]
   140019299:	inc    ebp
   14001929b:	add    rsi,0x28
   14001929f:	cmp    ebp,DWORD PTR [rax+0x8]
   1400192a2:	jl     0x140019210
   1400192a8:	mov    rbx,QWORD PTR [r15+0x60]
   1400192ac:	test   rbx,rbx
   1400192af:	je     0x14001931b
   1400192b1:	mov    rbx,QWORD PTR [rbx]
   1400192b4:	mov    rcx,rbx
   1400192b7:	call   0x140018c50
   1400192bc:	mov    rcx,rbx
   1400192bf:	mov    rdx,rax
   1400192c2:	call   0x140028c40
   1400192c7:	lea    rdx,[rip+0x25266]        # 0x14003e534
   1400192ce:	mov    rcx,r14
   1400192d1:	mov    r8,rax
   1400192d4:	call   QWORD PTR [rip+0x23fe6]        # 0x14003d2c0
   1400192da:	mov    rax,QWORD PTR [r15+0x60]
   1400192de:	lea    rdx,[rip+0x25263]        # 0x14003e548
   1400192e5:	mov    rax,QWORD PTR [rax+0x30]
   1400192e9:	mov    rcx,rax
   1400192ec:	shr    rcx,0x20
   1400192f0:	movd   xmm2,eax
   1400192f4:	movd   xmm3,ecx
   1400192f8:	cvtdq2pd xmm2,xmm2
   1400192fc:	mov    rcx,r14
   1400192ff:	divsd  xmm2,xmm6
   140019303:	cvtdq2pd xmm3,xmm3
   140019307:	divsd  xmm3,xmm6
   14001930b:	movq   r8,xmm2
   140019310:	movq   r9,xmm3
   140019315:	call   QWORD PTR [rip+0x23fa5]        # 0x14003d2c0
   14001931b:	mov    rdx,QWORD PTR [rip+0x3c066]        # 0x140055388
   140019322:	lea    r8,[rip+0x251cb]        # 0x14003e4f4
   140019329:	mov    rcx,r15
   14001932c:	call   0x14001c3a0
   140019331:	mov    rdx,QWORD PTR [rip+0x3c020]        # 0x140055358
   140019338:	lea    r8,[rip+0x251bd]        # 0x14003e4fc
   14001933f:	mov    rcx,r15
   140019342:	mov    rbx,rax
   140019345:	call   0x14001c3a0
   14001934a:	lea    rdx,[rip+0x251e7]        # 0x14003e538
   140019351:	mov    r9,rbx
   140019354:	mov    r8,rax
   140019357:	mov    rcx,r14
   14001935a:	call   QWORD PTR [rip+0x23f60]        # 0x14003d2c0
   140019360:	mov    rdx,r15
   140019363:	mov    rcx,r13
   140019366:	call   0x14002b9e0
   14001936b:	mov    r15,rax
   14001936e:	test   rax,rax
   140019371:	jne    0x140019120
   140019377:	mov    rdx,r12
   14001937a:	mov    rcx,r13
   14001937d:	call   0x14002a5e0
   140019382:	mov    r12,rax
   140019385:	test   rax,rax
   140019388:	jne    0x140019100
   14001938e:	lea    rdx,[rip+0x251ab]        # 0x14003e540
   140019395:	mov    rcx,r14
   140019398:	lea    r11,[rsp+0x90]
   1400193a0:	mov    rbx,QWORD PTR [r11+0x30]
   1400193a4:	mov    rbp,QWORD PTR [r11+0x38]
   1400193a8:	mov    rsi,QWORD PTR [r11+0x40]
   1400193ac:	movaps xmm6,XMMWORD PTR [r11-0x10]
   1400193b1:	mov    rsp,r11
   1400193b4:	pop    r15
   1400193b6:	pop    r14
   1400193b8:	pop    r13
   1400193ba:	pop    r12
   1400193bc:	pop    rdi
   1400193bd:	rex.W jmp QWORD PTR [rip+0x23efc]        # 0x14003d2c0
   1400193c4:	int3   
   1400193c5:	int3   
   1400193c6:	int3   
   1400193c7:	int3   
   1400193c8:	int3   
   1400193c9:	int3   
   1400193ca:	int3   
   1400193cb:	int3   
   1400193cc:	int3   
   1400193cd:	int3   
   1400193ce:	int3   
   1400193cf:	int3   
   1400193d0:	mov    rax,rsp
   1400193d3:	mov    QWORD PTR [rax+0x10],rbx
   1400193d7:	mov    QWORD PTR [rax+0x18],rbp
   1400193db:	push   rsi
   1400193dc:	push   rdi
   1400193dd:	push   r12
   1400193df:	push   r14
   1400193e1:	push   r15
   1400193e3:	sub    rsp,0x90
   1400193ea:	movaps XMMWORD PTR [rax-0x38],xmm6
   1400193ee:	mov    r14,rdx
   1400193f1:	mov    r15,rcx
   1400193f4:	mov    QWORD PTR [rax+0x8],r13
   1400193f8:	call   0x14001f5b0
   1400193fd:	mov    rax,QWORD PTR [r15+0x50]
   140019401:	lea    rdx,[rip+0x250c0]        # 0x14003e4c8
   140019408:	mov    rcx,r14
   14001940b:	movsd  xmm2,QWORD PTR [rax+0x8]
   140019410:	movq   r8,xmm2
   140019415:	call   QWORD PTR [rip+0x23ea5]        # 0x14003d2c0
   14001941b:	mov    rax,QWORD PTR [r15+0x68]
   14001941f:	lea    rdx,[rip+0x25122]        # 0x14003e548
   140019426:	movsd  xmm6,QWORD PTR [rip+0x2405a]        # 0x14003d488
   14001942e:	mov    r8,rax
   140019431:	movd   xmm2,eax
   140019435:	mov    rcx,r14
   140019438:	shr    r8,0x20
   14001943c:	cvtdq2pd xmm2,xmm2
   140019440:	movd   xmm3,r8d
   140019445:	divsd  xmm2,xmm6
   140019449:	cvtdq2pd xmm3,xmm3
   14001944d:	divsd  xmm3,xmm6
   140019451:	movq   r8,xmm2
   140019456:	movq   r9,xmm3
   14001945b:	call   QWORD PTR [rip+0x23e5f]        # 0x14003d2c0
   140019461:	lea    rdx,[rip+0x24710]        # 0x14003db78
   140019468:	mov    rcx,r14
   14001946b:	call   QWORD PTR [rip+0x23e4f]        # 0x14003d2c0
   140019471:	mov    rcx,r15
   140019474:	call   0x14002a4e0
   140019479:	mov    r13,rax
   14001947c:	test   rax,rax
   14001947f:	je     0x1400195b9
   140019485:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140019490:	mov    rbx,QWORD PTR [r13+0x10]
   140019494:	mov    rcx,rbx
   140019497:	call   0x140018c50
   14001949c:	mov    rcx,rbx
   14001949f:	mov    rdx,rax
   1400194a2:	call   0x140028c40
   1400194a7:	lea    rdx,[rip+0x2502a]        # 0x14003e4d8
   1400194ae:	mov    rcx,r14
   1400194b1:	mov    r8,rax
   1400194b4:	call   QWORD PTR [rip+0x23e06]        # 0x14003d2c0
   1400194ba:	mov    rax,QWORD PTR [r13+0x38]
   1400194be:	lea    rdx,[rip+0x25083]        # 0x14003e548
   1400194c5:	mov    rcx,rax
   1400194c8:	movd   xmm2,eax
   1400194cc:	shr    rcx,0x20
   1400194d0:	cvtdq2pd xmm2,xmm2
   1400194d4:	movd   xmm3,ecx
   1400194d8:	mov    rcx,r14
   1400194db:	divsd  xmm2,xmm6
   1400194df:	cvtdq2pd xmm3,xmm3
   1400194e3:	divsd  xmm3,xmm6
   1400194e7:	movq   r8,xmm2
   1400194ec:	movq   r9,xmm3
   1400194f1:	call   QWORD PTR [rip+0x23dc9]        # 0x14003d2c0
   1400194f7:	mov    rax,QWORD PTR [r13+0x60]
   1400194fb:	mov    rbx,QWORD PTR [rax]
   1400194fe:	mov    rcx,rbx
   140019501:	call   0x140018c50
   140019506:	mov    rcx,rbx
   140019509:	mov    rdx,rax
   14001950c:	call   0x140028c40
   140019511:	mov    rdx,QWORD PTR [rip+0x3bf18]        # 0x140055430
   140019518:	lea    r8,[rip+0x24fc9]        # 0x14003e4e8
   14001951f:	mov    rcx,r13
   140019522:	mov    rbp,rax
   140019525:	call   0x14001c3a0
   14001952a:	mov    rdx,QWORD PTR [rip+0x3bf07]        # 0x140055438
   140019531:	lea    r8,[rip+0x24fbc]        # 0x14003e4f4
   140019538:	mov    rcx,r13
   14001953b:	mov    rsi,rax
   14001953e:	call   0x14001c3a0
   140019543:	mov    rdx,QWORD PTR [rip+0x3bebe]        # 0x140055408
   14001954a:	mov    rdi,QWORD PTR [r13+0x28]
   14001954e:	lea    r8,[rip+0x24fa7]        # 0x14003e4fc
   140019555:	mov    rcx,r13
   140019558:	mov    rbx,rax
   14001955b:	call   0x14001c3a0
   140019560:	mov    rcx,QWORD PTR [rdi]
   140019563:	mov    QWORD PTR [rsp+0x40],rsi
   140019568:	movsd  xmm3,QWORD PTR [r13+0x48]
   14001956e:	movsd  xmm2,QWORD PTR [r13+0x40]
   140019574:	movq   r9,xmm3
   140019579:	movq   r8,xmm2
   14001957e:	mov    QWORD PTR [rsp+0x38],rbx
   140019583:	mov    QWORD PTR [rsp+0x30],rcx
   140019588:	mov    QWORD PTR [rsp+0x28],rax
   14001958d:	lea    rdx,[rip+0x24f74]        # 0x14003e508
   140019594:	mov    rcx,r14
   140019597:	mov    QWORD PTR [rsp+0x20],rbp
   14001959c:	call   QWORD PTR [rip+0x23d1e]        # 0x14003d2c0
   1400195a2:	mov    rdx,r13
   1400195a5:	mov    rcx,r15
   1400195a8:	call   0x14002a5e0
   1400195ad:	mov    r13,rax
   1400195b0:	test   rax,rax
   1400195b3:	jne    0x140019490
   1400195b9:	mov    rcx,r15
   1400195bc:	call   0x14002a4e0
   1400195c1:	mov    r13,QWORD PTR [rsp+0xc0]
   1400195c9:	mov    r12,rax
   1400195cc:	test   rax,rax
   1400195cf:	je     0x14001986b
   1400195d5:	mov    rdx,r12
   1400195d8:	mov    rcx,r15
   1400195db:	call   0x14002b830
   1400195e0:	mov    rdi,rax
   1400195e3:	test   rax,rax
   1400195e6:	je     0x140019854
   1400195ec:	nop    DWORD PTR [rax+0x0]
   1400195f0:	mov    rcx,QWORD PTR [rdi+0x28]
   1400195f4:	mov    rbp,QWORD PTR [rdi+0x8]
   1400195f8:	mov    rdx,QWORD PTR [rcx]
   1400195fb:	movups xmm0,XMMWORD PTR [rdx]
   1400195fe:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140019602:	movups XMMWORD PTR [rsp+0x50],xmm0
   140019607:	movsd  xmm0,QWORD PTR [rdx+0x20]
   14001960c:	movups XMMWORD PTR [rsp+0x60],xmm1
   140019611:	movsd  QWORD PTR [rsp+0x70],xmm0
   140019617:	test   rbp,rbp
   14001961a:	je     0x140019626
   14001961c:	mov    rsi,QWORD PTR [rbp+0x8]
   140019620:	mov    rbp,QWORD PTR [rbp+0x10]
   140019624:	jmp    0x140019634
   140019626:	lea    rbp,[rip+0x23deb]        # 0x14003d418
   14001962d:	lea    rsi,[rip+0x23de4]        # 0x14003d418
   140019634:	lea    rdx,[rip+0x24ee9]        # 0x14003e524
   14001963b:	mov    rcx,r14
   14001963e:	call   QWORD PTR [rip+0x23c7c]        # 0x14003d2c0
   140019644:	mov    rax,QWORD PTR [rdi+0x18]
   140019648:	mov    rbx,QWORD PTR [rax+0x10]
   14001964c:	mov    rcx,rbx
   14001964f:	call   0x140018c50
   140019654:	mov    rcx,rbx
   140019657:	mov    rdx,rax
   14001965a:	call   0x140028c40
   14001965f:	lea    rdx,[rip+0x24e56]        # 0x14003e4bc
   140019666:	mov    rcx,r14
   140019669:	mov    r8,rax
   14001966c:	call   QWORD PTR [rip+0x23c4e]        # 0x14003d2c0
   140019672:	test   rsi,rsi
   140019675:	je     0x1400196a8
   140019677:	cmp    BYTE PTR [rsi],0x0
   14001967a:	je     0x1400196a8
   14001967c:	lea    rcx,[rsi+0x1]
   140019680:	call   0x140018c50
   140019685:	lea    rcx,[rsi+0x1]
   140019689:	mov    rdx,rax
   14001968c:	call   0x140028c40
   140019691:	movsx  r8d,BYTE PTR [rsi]
   140019695:	lea    rdx,[rip+0x24e24]        # 0x14003e4c0
   14001969c:	mov    r9,rax
   14001969f:	mov    rcx,r14
   1400196a2:	call   QWORD PTR [rip+0x23c18]        # 0x14003d2c0
   1400196a8:	lea    rdx,[rip+0x24e7d]        # 0x14003e52c
   1400196af:	mov    rcx,r14
   1400196b2:	call   QWORD PTR [rip+0x23c08]        # 0x14003d2c0
   1400196b8:	mov    rax,QWORD PTR [rdi+0x10]
   1400196bc:	mov    rbx,QWORD PTR [rax+0x10]
   1400196c0:	mov    rcx,rbx
   1400196c3:	call   0x140018c50
   1400196c8:	mov    rcx,rbx
   1400196cb:	mov    rdx,rax
   1400196ce:	call   0x140028c40
   1400196d3:	lea    rdx,[rip+0x24de2]        # 0x14003e4bc
   1400196da:	mov    rcx,r14
   1400196dd:	mov    r8,rax
   1400196e0:	call   QWORD PTR [rip+0x23bda]        # 0x14003d2c0
   1400196e6:	test   rbp,rbp
   1400196e9:	je     0x14001971e
   1400196eb:	cmp    BYTE PTR [rbp+0x0],0x0
   1400196ef:	je     0x14001971e
   1400196f1:	lea    rcx,[rbp+0x1]
   1400196f5:	call   0x140018c50
   1400196fa:	lea    rcx,[rbp+0x1]
   1400196fe:	mov    rdx,rax
   140019701:	call   0x140028c40
   140019706:	movsx  r8d,BYTE PTR [rbp+0x0]
   14001970b:	lea    rdx,[rip+0x24dae]        # 0x14003e4c0
   140019712:	mov    r9,rax
   140019715:	mov    rcx,r14
   140019718:	call   QWORD PTR [rip+0x23ba2]        # 0x14003d2c0
   14001971e:	mov    esi,DWORD PTR [rsp+0x58]
   140019722:	lea    rdx,[rip+0x24e07]        # 0x14003e530
   140019729:	mov    rcx,r14
   14001972c:	mov    r8d,esi
   14001972f:	call   QWORD PTR [rip+0x23b8b]        # 0x14003d2c0
   140019735:	test   esi,esi
   140019737:	jle    0x140019785
   140019739:	mov    rbx,QWORD PTR [rsp+0x50]
   14001973e:	xchg   ax,ax
   140019740:	mov    rax,QWORD PTR [rbx]
   140019743:	lea    rdx,[rip+0x24dfe]        # 0x14003e548
   14001974a:	mov    rcx,rax
   14001974d:	shr    rcx,0x20
   140019751:	movd   xmm2,eax
   140019755:	movd   xmm3,ecx
   140019759:	cvtdq2pd xmm2,xmm2
   14001975d:	mov    rcx,r14
   140019760:	divsd  xmm2,xmm6
   140019764:	cvtdq2pd xmm3,xmm3
   140019768:	divsd  xmm3,xmm6
   14001976c:	movq   r8,xmm2
   140019771:	movq   r9,xmm3
   140019776:	call   QWORD PTR [rip+0x23b44]        # 0x14003d2c0
   14001977c:	lea    rbx,[rbx+0x8]
   140019780:	dec    rsi
   140019783:	jne    0x140019740
   140019785:	mov    rbx,QWORD PTR [rdi+0x60]
   140019789:	test   rbx,rbx
   14001978c:	je     0x1400197f8
   14001978e:	mov    rbx,QWORD PTR [rbx]
   140019791:	mov    rcx,rbx
   140019794:	call   0x140018c50
   140019799:	mov    rcx,rbx
   14001979c:	mov    rdx,rax
   14001979f:	call   0x140028c40
   1400197a4:	lea    rdx,[rip+0x24d89]        # 0x14003e534
   1400197ab:	mov    rcx,r14
   1400197ae:	mov    r8,rax
   1400197b1:	call   QWORD PTR [rip+0x23b09]        # 0x14003d2c0
   1400197b7:	mov    rax,QWORD PTR [rdi+0x60]
   1400197bb:	lea    rdx,[rip+0x24d86]        # 0x14003e548
   1400197c2:	mov    rax,QWORD PTR [rax+0x30]
   1400197c6:	mov    rcx,rax
   1400197c9:	shr    rcx,0x20
   1400197cd:	movd   xmm2,eax
   1400197d1:	movd   xmm3,ecx
   1400197d5:	cvtdq2pd xmm2,xmm2
   1400197d9:	mov    rcx,r14
   1400197dc:	divsd  xmm2,xmm6
   1400197e0:	cvtdq2pd xmm3,xmm3
   1400197e4:	divsd  xmm3,xmm6
   1400197e8:	movq   r8,xmm2
   1400197ed:	movq   r9,xmm3
   1400197f2:	call   QWORD PTR [rip+0x23ac8]        # 0x14003d2c0
   1400197f8:	mov    rdx,QWORD PTR [rip+0x3bb89]        # 0x140055388
   1400197ff:	lea    r8,[rip+0x24cee]        # 0x14003e4f4
   140019806:	mov    rcx,rdi
   140019809:	call   0x14001c3a0
   14001980e:	mov    rdx,QWORD PTR [rip+0x3bb43]        # 0x140055358
   140019815:	lea    r8,[rip+0x24ce0]        # 0x14003e4fc
   14001981c:	mov    rcx,rdi
   14001981f:	mov    rbx,rax
   140019822:	call   0x14001c3a0
   140019827:	lea    rdx,[rip+0x24d0a]        # 0x14003e538
   14001982e:	mov    r9,rbx
   140019831:	mov    r8,rax
   140019834:	mov    rcx,r14
   140019837:	call   QWORD PTR [rip+0x23a83]        # 0x14003d2c0
   14001983d:	mov    rdx,rdi
   140019840:	mov    rcx,r15
   140019843:	call   0x14002b9e0
   140019848:	mov    rdi,rax
   14001984b:	test   rax,rax
   14001984e:	jne    0x1400195f0
   140019854:	mov    rdx,r12
   140019857:	mov    rcx,r15
   14001985a:	call   0x14002a5e0
   14001985f:	mov    r12,rax
   140019862:	test   rax,rax
   140019865:	jne    0x1400195d5
   14001986b:	lea    rdx,[rip+0x24cce]        # 0x14003e540
   140019872:	mov    rcx,r14
   140019875:	lea    r11,[rsp+0x90]
   14001987d:	mov    rbx,QWORD PTR [r11+0x38]
   140019881:	mov    rbp,QWORD PTR [r11+0x40]
   140019885:	movaps xmm6,XMMWORD PTR [r11-0x10]
   14001988a:	mov    rsp,r11
   14001988d:	pop    r15
   14001988f:	pop    r14
   140019891:	pop    r12
   140019893:	pop    rdi
   140019894:	pop    rsi
   140019895:	rex.W jmp QWORD PTR [rip+0x23a24]        # 0x14003d2c0
   14001989c:	int3   
   14001989d:	int3   
   14001989e:	int3   
   14001989f:	int3   
   1400198a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400198a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400198aa:	push   rdi
   1400198ab:	sub    rsp,0x20
   1400198af:	mov    rsi,rcx
   1400198b2:	mov    rcx,rdx
   1400198b5:	mov    rdi,r8
   1400198b8:	mov    rbx,rdx
   1400198bb:	call   0x140018c50
   1400198c0:	mov    rcx,rbx
   1400198c3:	mov    rdx,rax
   1400198c6:	call   0x140028c40
   1400198cb:	lea    rdx,[rip+0x24bea]        # 0x14003e4bc
   1400198d2:	mov    rcx,rsi
   1400198d5:	mov    r8,rax
   1400198d8:	call   QWORD PTR [rip+0x239e2]        # 0x14003d2c0
   1400198de:	test   rdi,rdi
   1400198e1:	je     0x140019914
   1400198e3:	cmp    BYTE PTR [rdi],0x0
   1400198e6:	je     0x140019914
   1400198e8:	lea    rcx,[rdi+0x1]
   1400198ec:	call   0x140018c50
   1400198f1:	lea    rcx,[rdi+0x1]
   1400198f5:	mov    rdx,rax
   1400198f8:	call   0x140028c40
   1400198fd:	movsx  r8d,BYTE PTR [rdi]
   140019901:	lea    rdx,[rip+0x24bb8]        # 0x14003e4c0
   140019908:	mov    r9,rax
   14001990b:	mov    rcx,rsi
   14001990e:	call   QWORD PTR [rip+0x239ac]        # 0x14003d2c0
   140019914:	mov    rbx,QWORD PTR [rsp+0x30]
   140019919:	mov    rsi,QWORD PTR [rsp+0x38]
   14001991e:	add    rsp,0x20
   140019922:	pop    rdi
   140019923:	ret    
   140019924:	int3   
   140019925:	int3   
   140019926:	int3   
   140019927:	int3   
   140019928:	int3   
   140019929:	int3   
   14001992a:	int3   
   14001992b:	int3   
   14001992c:	int3   
   14001992d:	int3   
   14001992e:	int3   
   14001992f:	int3   
   140019930:	mov    QWORD PTR [rsp+0x18],rbp
   140019935:	push   rsi
   140019936:	sub    rsp,0x50
   14001993a:	lea    rdx,[rip+0x23ac3]        # 0x14003d404
   140019941:	mov    rsi,rcx
   140019944:	call   0x1400275b0
   140019949:	mov    rbp,rax
   14001994c:	test   rax,rax
   14001994f:	je     0x140019a96
   140019955:	mov    QWORD PTR [rsp+0x60],rbx
   14001995a:	lea    rdx,[rip+0x24caf]        # 0x14003e610
   140019961:	mov    rcx,rsi
   140019964:	mov    QWORD PTR [rsp+0x68],rdi
   140019969:	movaps XMMWORD PTR [rsp+0x40],xmm6
   14001996e:	call   0x140027500
   140019973:	lea    r8,[rip+0x24b7a]        # 0x14003e4f4
   14001997a:	mov    rdx,rax
   14001997d:	mov    rcx,rsi
   140019980:	call   0x14001c3a0
   140019985:	lea    rdx,[rip+0x24c74]        # 0x14003e600
   14001998c:	mov    rcx,rsi
   14001998f:	mov    rdi,rax
   140019992:	call   0x140027500
   140019997:	lea    r8,[rip+0x24eaa]        # 0x14003e848
   14001999e:	mov    rdx,rax
   1400199a1:	mov    rcx,rsi
   1400199a4:	call   0x14001c3a0
   1400199a9:	lea    rdx,[rip+0x24c40]        # 0x14003e5f0
   1400199b0:	mov    rcx,rsi
   1400199b3:	mov    rbx,rax
   1400199b6:	call   0x140027500
   1400199bb:	mov    rcx,rsi
   1400199be:	movsd  xmm3,QWORD PTR [rip+0x23a1a]        # 0x14003d3e0
   1400199c6:	movsd  xmm2,QWORD PTR [rip+0x24e9a]        # 0x14003e868
   1400199ce:	mov    rdx,rax
   1400199d1:	call   0x14001c2e0
   1400199d6:	mov    rcx,rbp
   1400199d9:	movaps xmm6,xmm0
   1400199dc:	call   QWORD PTR [rip+0x238fe]        # 0x14003d2e0
   1400199e2:	mov    r9,rdi
   1400199e5:	movaps xmm1,xmm6
   1400199e8:	mov    rcx,rax
   1400199eb:	mov    r8,rbx
   1400199ee:	mov    QWORD PTR [rsp+0x20],rsi
   1400199f3:	call   0x14001c400
   1400199f8:	lea    rdx,[rip+0x24e59]        # 0x14003e858
   1400199ff:	mov    rcx,rsi
   140019a02:	mov    QWORD PTR [rsi+0x58],rax
   140019a06:	call   0x1400275b0
   140019a0b:	cmp    BYTE PTR [rsi+0x90],0x0
   140019a12:	mov    rdi,QWORD PTR [rsp+0x68]
   140019a17:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   140019a1c:	jne    0x140019a60
   140019a1e:	test   rax,rax
   140019a21:	je     0x140019a2c
   140019a23:	cmp    BYTE PTR [rax],0x62
   140019a26:	jne    0x140019a2c
   140019a28:	xor    ebx,ebx
   140019a2a:	jmp    0x140019a31
   140019a2c:	mov    ebx,0x2
   140019a31:	mov    rax,QWORD PTR [rsi+0x58]
   140019a35:	lea    rcx,[rsp+0x30]
   140019a3a:	movups xmm0,XMMWORD PTR [rax+0x20]
   140019a3e:	movaps XMMWORD PTR [rsp+0x30],xmm0
   140019a43:	call   0x14001bbc0
   140019a48:	movsxd rcx,ebx
   140019a4b:	mov    rbx,QWORD PTR [rsp+0x60]
   140019a50:	mov    QWORD PTR [rsi+rcx*8+0x70],rax
   140019a55:	mov    rbp,QWORD PTR [rsp+0x70]
   140019a5a:	add    rsp,0x50
   140019a5e:	pop    rsi
   140019a5f:	ret    
   140019a60:	test   rax,rax
   140019a63:	je     0x140019a6f
   140019a65:	cmp    BYTE PTR [rax],0x62
   140019a68:	mov    eax,0x3
   140019a6d:	je     0x140019a74
   140019a6f:	mov    eax,0x1
   140019a74:	mov    rbx,QWORD PTR [rsp+0x60]
   140019a79:	movsxd rdx,eax
   140019a7c:	mov    rax,QWORD PTR [rsi+0x58]
   140019a80:	cvttsd2si ecx,QWORD PTR [rax+0x28]
   140019a85:	mov    DWORD PTR [rsi+rdx*8+0x70],ecx
   140019a89:	mov    rax,QWORD PTR [rsi+0x58]
   140019a8d:	cvttsd2si ecx,QWORD PTR [rax+0x20]
   140019a92:	mov    DWORD PTR [rsi+rdx*8+0x74],ecx
   140019a96:	mov    rbp,QWORD PTR [rsp+0x70]
   140019a9b:	add    rsp,0x50
   140019a9f:	pop    rsi
   140019aa0:	ret    
   140019aa1:	int3   
   140019aa2:	int3   
   140019aa3:	int3   
   140019aa4:	int3   
   140019aa5:	int3   
   140019aa6:	int3   
   140019aa7:	int3   
   140019aa8:	int3   
   140019aa9:	int3   
   140019aaa:	int3   
   140019aab:	int3   
   140019aac:	int3   
   140019aad:	int3   
   140019aae:	int3   
   140019aaf:	int3   
   140019ab0:	rex push rsi
   140019ab2:	push   rdi
   140019ab3:	push   r15
   140019ab5:	sub    rsp,0x40
   140019ab9:	mov    rdi,rdx
   140019abc:	mov    edx,0x198
   140019ac1:	movsxd r15,ecx
   140019ac4:	lea    ecx,[rdx-0x40]
   140019ac7:	mov    r8d,0xc8
   140019acd:	call   0x140027610
   140019ad2:	mov    r8d,0x1
   140019ad8:	xor    r9d,r9d
   140019adb:	cmp    r8,r15
   140019ade:	jge    0x140019af4
   140019ae0:	mov    rax,QWORD PTR [rdi+r8*8]
   140019ae4:	cmp    BYTE PTR [rax],0x2d
   140019ae7:	je     0x140019aec
   140019ae9:	inc    r9d
   140019aec:	inc    r8
   140019aef:	cmp    r8,r15
   140019af2:	jl     0x140019ae0
   140019af4:	mov    QWORD PTR [rsp+0x60],rbx
   140019af9:	mov    QWORD PTR [rsp+0x68],rbp
   140019afe:	lea    eax,[r9+0x1]
   140019b02:	movsxd rcx,eax
   140019b05:	mov    QWORD PTR [rsp+0x70],r12
   140019b0a:	mov    QWORD PTR [rsp+0x78],r14
   140019b0f:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140019b14:	shl    rcx,0x3
   140019b18:	call   0x14001d2c0
   140019b1d:	mov    esi,0x1
   140019b22:	mov    QWORD PTR [rip+0x3b99f],rax        # 0x1400554c8
   140019b29:	mov    rax,QWORD PTR [rdi]
   140019b2c:	mov    QWORD PTR [rip+0x3b98d],rax        # 0x1400554c0
   140019b33:	cmp    r15d,esi
   140019b36:	jle    0x140019d6b
   140019b3c:	movsd  xmm6,QWORD PTR [rip+0x23944]        # 0x14003d488
   140019b44:	xor    r14d,r14d
   140019b47:	lea    r12,[rip+0xfffffffffffe64b2]        # 0x140000000
   140019b4e:	add    rdi,0x8
   140019b52:	mov    rcx,QWORD PTR [rdi]
   140019b55:	cmp    BYTE PTR [rcx],0x2d
   140019b58:	jne    0x140019d4c
   140019b5e:	movsx  ebp,BYTE PTR [rcx+0x1]
   140019b62:	lea    rbx,[rcx+0x2]
   140019b66:	lea    eax,[rbp-0x45]
   140019b69:	cmp    eax,0x33
   140019b6c:	ja     0x140019d29
   140019b72:	cdqe   
   140019b74:	movzx  eax,BYTE PTR [r12+rax*1+0x19e44]
   140019b7d:	mov    ecx,DWORD PTR [r12+rax*4+0x19e14]
   140019b85:	add    rcx,r12
   140019b88:	jmp    rcx
   140019b8a:	mov    edx,0x3d
   140019b8f:	mov    rcx,rbx
   140019b92:	lea    rbp,[rip+0x2423f]        # 0x14003ddd8
   140019b99:	call   QWORD PTR [rip+0x23571]        # 0x14003d110
   140019b9f:	test   rax,rax
   140019ba2:	je     0x140019bab
   140019ba4:	mov    BYTE PTR [rax],0x0
   140019ba7:	lea    rbp,[rax+0x1]
   140019bab:	mov    r8,rbp
   140019bae:	mov    rdx,rbx
   140019bb1:	xor    ecx,ecx
   140019bb3:	call   0x1400276b0
   140019bb8:	mov    ecx,0x1
   140019bbd:	call   0x140027a10
   140019bc2:	jmp    0x140019d5c
   140019bc7:	mov    edx,0x3d
   140019bcc:	mov    rcx,rbx
   140019bcf:	lea    rbp,[rip+0x24202]        # 0x14003ddd8
   140019bd6:	call   QWORD PTR [rip+0x23534]        # 0x14003d110
   140019bdc:	test   rax,rax
   140019bdf:	je     0x140019be8
   140019be1:	mov    BYTE PTR [rax],0x0
   140019be4:	lea    rbp,[rax+0x1]
   140019be8:	mov    r8,rbp
   140019beb:	mov    rdx,rbx
   140019bee:	xor    ecx,ecx
   140019bf0:	call   0x140027680
   140019bf5:	mov    ecx,0x1
   140019bfa:	call   0x140027a10
   140019bff:	jmp    0x140019d5c
   140019c04:	mov    edx,0x3d
   140019c09:	mov    rcx,rbx
   140019c0c:	lea    rbp,[rip+0x241c5]        # 0x14003ddd8
   140019c13:	call   QWORD PTR [rip+0x234f7]        # 0x14003d110
   140019c19:	test   rax,rax
   140019c1c:	je     0x140019c25
   140019c1e:	mov    BYTE PTR [rax],0x0
   140019c21:	lea    rbp,[rax+0x1]
   140019c25:	mov    r8,rbp
   140019c28:	mov    rdx,rbx
   140019c2b:	xor    ecx,ecx
   140019c2d:	call   0x1400274d0
   140019c32:	mov    ecx,0x1
   140019c37:	call   0x140027a10
   140019c3c:	jmp    0x140019d5c
   140019c41:	mov    rcx,rbx
   140019c44:	call   0x14001eb10
   140019c49:	mov    DWORD PTR [rip+0x3b8a9],eax        # 0x1400554f8
   140019c4f:	jmp    0x140019d5c
   140019c54:	cmp    BYTE PTR [rbx],0x0
   140019c57:	jne    0x140019c7a
   140019c59:	mov    rax,QWORD PTR [rdi+0x8]
   140019c5d:	cmp    BYTE PTR [rax],0x2d
   140019c60:	je     0x140019c78
   140019c62:	mov    rcx,rax
   140019c65:	inc    esi
   140019c67:	add    rdi,0x8
   140019c6b:	mov    rbx,rax
   140019c6e:	call   0x14001fcf0
   140019c73:	jmp    0x140019d5c
   140019c78:	xor    ebx,ebx
   140019c7a:	mov    rcx,rbx
   140019c7d:	call   0x14001fcf0
   140019c82:	jmp    0x140019d5c
   140019c87:	mov    DWORD PTR [rip+0x3b817],0x1        # 0x1400554a8
   140019c91:	movsx  ecx,BYTE PTR [rbx]
   140019c94:	call   QWORD PTR [rip+0x23466]        # 0x14003d100
   140019c9a:	test   eax,eax
   140019c9c:	je     0x140019d5c
   140019ca2:	mov    rcx,rbx
   140019ca5:	call   QWORD PTR [rip+0x233dd]        # 0x14003d088
   140019cab:	mov    DWORD PTR [rip+0x3b7f7],eax        # 0x1400554a8
   140019cb1:	jmp    0x140019d5c
   140019cb6:	cmp    BYTE PTR [rbx],0x0
   140019cb9:	jne    0x140019cc5
   140019cbb:	mov    rbx,QWORD PTR [rdi+0x8]
   140019cbf:	inc    esi
   140019cc1:	add    rdi,0x8
   140019cc5:	mov    rcx,rbx
   140019cc8:	call   0x14001ea90
   140019ccd:	mov    QWORD PTR [rip+0x3b81c],rax        # 0x1400554f0
   140019cd4:	jmp    0x140019d5c
   140019cd9:	cmp    BYTE PTR [rbx],0x0
   140019cdc:	je     0x140019cf1
   140019cde:	mov    rcx,rbx
   140019ce1:	call   QWORD PTR [rip+0x23359]        # 0x14003d040
   140019ce7:	movsd  QWORD PTR [rip+0x3b7b1],xmm0        # 0x1400554a0
   140019cef:	jmp    0x140019d5c
   140019cf1:	movsd  QWORD PTR [rip+0x3b7a7],xmm6        # 0x1400554a0
   140019cf9:	jmp    0x140019d5c
   140019cfb:	mov    BYTE PTR [rip+0x3b7b7],0x1        # 0x1400554b9
   140019d02:	movsx  ecx,BYTE PTR [rbx]
   140019d05:	call   QWORD PTR [rip+0x233f5]        # 0x14003d100
   140019d0b:	test   eax,eax
   140019d0d:	je     0x140019d5c
   140019d0f:	mov    rcx,rbx
   140019d12:	call   QWORD PTR [rip+0x23370]        # 0x14003d088
   140019d18:	mov    BYTE PTR [rip+0x3b79b],al        # 0x1400554b9
   140019d1e:	jmp    0x140019d5c
   140019d20:	mov    BYTE PTR [rip+0x3b791],0x1        # 0x1400554b8
   140019d27:	jmp    0x140019d5c
   140019d29:	call   QWORD PTR [rip+0x235a1]        # 0x14003d2d0
   140019d2f:	mov    r8,QWORD PTR [rip+0x3b78a]        # 0x1400554c0
   140019d36:	lea    rdx,[rip+0x2484b]        # 0x14003e588
   140019d3d:	lea    rcx,[rax+0x60]
   140019d41:	mov    r9d,ebp
   140019d44:	call   QWORD PTR [rip+0x23576]        # 0x14003d2c0
   140019d4a:	jmp    0x140019d5c
   140019d4c:	mov    rax,QWORD PTR [rip+0x3b775]        # 0x1400554c8
   140019d53:	add    r14,0x8
   140019d57:	mov    QWORD PTR [r14+rax*1-0x8],rcx
   140019d5c:	inc    esi
   140019d5e:	add    rdi,0x8
   140019d62:	cmp    esi,r15d
   140019d65:	jl     0x140019b52
   140019d6b:	cmp    QWORD PTR [rip+0x3b77d],0x0        # 0x1400554f0
   140019d73:	jne    0x140019d86
   140019d75:	call   QWORD PTR [rip+0x23555]        # 0x14003d2d0
   140019d7b:	add    rax,0x30
   140019d7f:	mov    QWORD PTR [rip+0x3b76a],rax        # 0x1400554f0
   140019d86:	call   0x1400276a0
   140019d8b:	lea    rdx,[rip+0x23672]        # 0x14003d404
   140019d92:	mov    rcx,QWORD PTR [rax+0x48]
   140019d96:	mov    rcx,QWORD PTR [rcx]
   140019d99:	call   0x140027500
   140019d9e:	test   rax,rax
   140019da1:	jne    0x140019db8
   140019da3:	lea    r8,[rip+0x247fe]        # 0x14003e5a8
   140019daa:	lea    rdx,[rip+0x23653]        # 0x14003d404
   140019db1:	xor    ecx,ecx
   140019db3:	call   0x140027680
   140019db8:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140019dbd:	mov    r14,QWORD PTR [rsp+0x78]
   140019dc2:	mov    r12,QWORD PTR [rsp+0x70]
   140019dc7:	mov    rbp,QWORD PTR [rsp+0x68]
   140019dcc:	mov    rbx,QWORD PTR [rsp+0x60]
   140019dd1:	add    rsp,0x40
   140019dd5:	pop    r15
   140019dd7:	pop    rdi
   140019dd8:	pop    rsi
   140019dd9:	ret    
   140019dda:	call   QWORD PTR [rip+0x234f0]        # 0x14003d2d0
   140019de0:	mov    rcx,QWORD PTR [rip+0x32229]        # 0x14004c010
   140019de7:	mov    r9,QWORD PTR [rip+0x3221a]        # 0x14004c008
   140019dee:	mov    r8,QWORD PTR [rip+0x3220b]        # 0x14004c000
   140019df5:	mov    QWORD PTR [rsp+0x20],rcx
   140019dfa:	lea    rdx,[rip+0x2476f]        # 0x14003e570
   140019e01:	lea    rcx,[rax+0x60]
   140019e05:	call   QWORD PTR [rip+0x234b5]        # 0x14003d2c0
   140019e0b:	xor    ecx,ecx
   140019e0d:	call   QWORD PTR [rip+0x23265]        # 0x14003d078
   140019e13:	int3   
   140019e14:	add    al,0x9c
   140019e16:	add    DWORD PTR [rax],eax
   140019e18:	mov    bl,BYTE PTR [rbx-0x6438ffff]
   140019e1e:	add    DWORD PTR [rax],eax
   140019e20:	rex.B pushf 
   140019e22:	add    DWORD PTR [rax],eax
   140019e24:	ficomp DWORD PTR [rbp-0x63abffff]
   140019e2a:	add    DWORD PTR [rax],eax
   140019e2c:	xchg   DWORD PTR [rcx+rax*1+0x19cb600],ebx
   140019e33:	add    cl,bl
   140019e35:	pushf  
   140019e36:	add    DWORD PTR [rax],eax
   140019e38:	sti    
   140019e39:	pushf  
   140019e3a:	add    DWORD PTR [rax],eax
   140019e3c:	and    BYTE PTR [rbp-0x62d6ffff],bl
   140019e42:	add    DWORD PTR [rax],eax
   140019e44:	add    BYTE PTR [rbx],cl
   140019e46:	add    DWORD PTR [rbx],ecx
   140019e48:	or     ecx,DWORD PTR [rbx]
   140019e4a:	or     ecx,DWORD PTR [rbx]
   140019e4c:	or     eax,DWORD PTR [rdx]
   140019e4e:	or     ecx,DWORD PTR [rbx]
   140019e50:	or     ecx,DWORD PTR [rbx]
   140019e52:	or     eax,DWORD PTR [rbx]
   140019e54:	or     eax,DWORD PTR [rbx+rcx*1]
   140019e57:	or     ecx,DWORD PTR [rbx]
   140019e59:	or     ecx,DWORD PTR [rbx]
   140019e5b:	or     ecx,DWORD PTR [rbx]
   140019e5d:	or     ecx,DWORD PTR [rbx]
   140019e5f:	or     ecx,DWORD PTR [rbx]
   140019e61:	or     ecx,DWORD PTR [rbx]
   140019e63:	or     ecx,DWORD PTR [rbx]
   140019e65:	or     ecx,DWORD PTR [rbx]
   140019e67:	or     ecx,DWORD PTR [rbx]
   140019e69:	or     ecx,DWORD PTR [rbx]
   140019e6b:	add    eax,0xb07060b
   140019e70:	or     ecx,DWORD PTR [rbx]
   140019e72:	or     BYTE PTR [rbx],cl
   140019e74:	or     ecx,DWORD PTR [rcx]
   140019e76:	or     ecx,DWORD PTR [rdx]
   140019e78:	int3   
   140019e79:	int3   
   140019e7a:	int3   
   140019e7b:	int3   
   140019e7c:	int3   
   140019e7d:	int3   
   140019e7e:	int3   
   140019e7f:	int3   
   140019e80:	sub    rsp,0x28
   140019e84:	call   0x14001dec0
   140019e89:	call   0x140028bb0
   140019e8e:	add    eax,DWORD PTR [rip+0x39960]        # 0x1400537f4
   140019e94:	mov    ecx,eax
   140019e96:	call   QWORD PTR [rip+0x231dc]        # 0x14003d078
   140019e9c:	int3   
   140019e9d:	int3   
   140019e9e:	int3   
   140019e9f:	int3   
   140019ea0:	rex push rbx
   140019ea2:	sub    rsp,0x20
   140019ea6:	mov    rbx,rcx
   140019ea9:	mov    rcx,QWORD PTR [rcx+0x50]
   140019ead:	call   QWORD PTR [rip+0x233ed]        # 0x14003d2a0
   140019eb3:	mov    QWORD PTR [rbx+0x50],0x0
   140019ebb:	add    rsp,0x20
   140019ebf:	pop    rbx
   140019ec0:	ret    
   140019ec1:	int3   
   140019ec2:	int3   
   140019ec3:	int3   
   140019ec4:	int3   
   140019ec5:	int3   
   140019ec6:	int3   
   140019ec7:	int3   
   140019ec8:	int3   
   140019ec9:	int3   
   140019eca:	int3   
   140019ecb:	int3   
   140019ecc:	int3   
   140019ecd:	int3   
   140019ece:	int3   
   140019ecf:	int3   
   140019ed0:	rex push rbx
   140019ed2:	sub    rsp,0x20
   140019ed6:	mov    rbx,r8
   140019ed9:	call   0x1400275b0
   140019ede:	test   rax,rax
   140019ee1:	je     0x140019f07
   140019ee3:	lea    r8,[rsp+0x48]
   140019ee8:	lea    rdx,[rip+0x234b1]        # 0x14003d3a0
   140019eef:	mov    rcx,rax
   140019ef2:	call   QWORD PTR [rip+0x233c0]        # 0x14003d2b8
   140019ef8:	cmp    eax,0x1
   140019efb:	jl     0x140019f07
   140019efd:	movsd  xmm0,QWORD PTR [rsp+0x48]
   140019f03:	movsd  QWORD PTR [rbx],xmm0
   140019f07:	add    rsp,0x20
   140019f0b:	pop    rbx
   140019f0c:	ret    
   140019f0d:	int3   
   140019f0e:	int3   
   140019f0f:	int3   
   140019f10:	rex push rbx
   140019f12:	sub    rsp,0x30
   140019f16:	mov    rbx,r8
   140019f19:	call   0x1400275b0
   140019f1e:	test   rax,rax
   140019f21:	je     0x140019fb1
   140019f27:	lea    r9,[rsp+0x20]
   140019f2c:	lea    r8,[rsp+0x58]
   140019f31:	lea    rdx,[rip+0x244e0]        # 0x14003e418
   140019f38:	mov    rcx,rax
   140019f3b:	call   QWORD PTR [rip+0x23377]        # 0x14003d2b8
   140019f41:	cmp    eax,0x1
   140019f44:	jle    0x140019fb1
   140019f46:	movsd  xmm1,QWORD PTR [rsp+0x58]
   140019f4c:	xorps  xmm3,xmm3
   140019f4f:	comisd xmm1,xmm3
   140019f53:	jbe    0x140019fb1
   140019f55:	movsd  xmm0,QWORD PTR [rsp+0x20]
   140019f5b:	comisd xmm0,xmm3
   140019f5f:	jbe    0x140019fb1
   140019f61:	movsd  xmm4,QWORD PTR [rip+0x2351f]        # 0x14003d488
   140019f69:	movsd  xmm2,QWORD PTR [rip+0x23467]        # 0x14003d3d8
   140019f71:	mulsd  xmm1,xmm4
   140019f75:	comisd xmm1,xmm3
   140019f79:	jb     0x140019f81
   140019f7b:	addsd  xmm1,xmm2
   140019f7f:	jmp    0x140019f85
   140019f81:	subsd  xmm1,xmm2
   140019f85:	cvttsd2si eax,xmm1
   140019f89:	mulsd  xmm0,xmm4
   140019f8d:	comisd xmm0,xmm3
   140019f91:	mov    DWORD PTR [rbx],eax
   140019f93:	jb     0x140019fa6
   140019f95:	addsd  xmm0,xmm2
   140019f99:	cvttsd2si eax,xmm0
   140019f9d:	mov    DWORD PTR [rbx+0x4],eax
   140019fa0:	add    rsp,0x30
   140019fa4:	pop    rbx
   140019fa5:	ret    
   140019fa6:	subsd  xmm0,xmm2
   140019faa:	cvttsd2si eax,xmm0
   140019fae:	mov    DWORD PTR [rbx+0x4],eax
   140019fb1:	add    rsp,0x30
   140019fb5:	pop    rbx
   140019fb6:	ret    
   140019fb7:	int3   
   140019fb8:	int3   
   140019fb9:	int3   
   140019fba:	int3   
   140019fbb:	int3   
   140019fbc:	int3   
   140019fbd:	int3   
   140019fbe:	int3   
   140019fbf:	int3   
   140019fc0:	mov    QWORD PTR [rsp+0x8],rbx
   140019fc5:	mov    QWORD PTR [rsp+0x10],rsi
   140019fca:	push   rdi
   140019fcb:	sub    rsp,0x20
   140019fcf:	mov    rsi,rdx
   140019fd2:	mov    edx,0x3d
   140019fd7:	mov    rdi,rcx
   140019fda:	lea    rbx,[rip+0x23df7]        # 0x14003ddd8
   140019fe1:	call   QWORD PTR [rip+0x23129]        # 0x14003d110
   140019fe7:	test   rax,rax
   140019fea:	je     0x140019ff3
   140019fec:	mov    BYTE PTR [rax],0x0
   140019fef:	lea    rbx,[rax+0x1]
   140019ff3:	mov    r8,rbx
   140019ff6:	mov    rdx,rdi
   140019ff9:	xor    ecx,ecx
   140019ffb:	call   rsi
   140019ffd:	mov    ecx,0x1
   14001a002:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a007:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a00c:	add    rsp,0x20
   14001a010:	pop    rdi
   14001a011:	jmp    0x140027a10
   14001a016:	int3   
   14001a017:	int3   
   14001a018:	int3   
   14001a019:	int3   
   14001a01a:	int3   
   14001a01b:	int3   
   14001a01c:	int3   
   14001a01d:	int3   
   14001a01e:	int3   
   14001a01f:	int3   
   14001a020:	rex push rbx
   14001a022:	sub    rsp,0x20
   14001a026:	mov    rbx,rcx
   14001a029:	call   0x14001a550
   14001a02e:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a032:	mov    rcx,QWORD PTR [rcx]
   14001a035:	lea    rdx,[rip+0x24404]        # 0x14003e440
   14001a03c:	call   0x140027500
   14001a041:	lea    rdx,[rip+0x243f0]        # 0x14003e438
   14001a048:	mov    QWORD PTR [rip+0x3b401],rax        # 0x140055450
   14001a04f:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a053:	mov    rcx,QWORD PTR [rcx]
   14001a056:	call   0x140027500
   14001a05b:	lea    rdx,[rip+0x24562]        # 0x14003e5c4
   14001a062:	mov    QWORD PTR [rip+0x3b3df],rax        # 0x140055448
   14001a069:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a06d:	mov    rcx,QWORD PTR [rcx]
   14001a070:	call   0x140027500
   14001a075:	lea    rdx,[rip+0x24550]        # 0x14003e5cc
   14001a07c:	mov    QWORD PTR [rip+0x3b3bd],rax        # 0x140055440
   14001a083:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a087:	mov    rcx,QWORD PTR [rcx]
   14001a08a:	call   0x140027500
   14001a08f:	lea    rdx,[rip+0x24542]        # 0x14003e5d8
   14001a096:	mov    QWORD PTR [rip+0x3b39b],rax        # 0x140055438
   14001a09d:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a0a1:	mov    rcx,QWORD PTR [rcx]
   14001a0a4:	call   0x140027500
   14001a0a9:	lea    rdx,[rip+0x24534]        # 0x14003e5e4
   14001a0b0:	mov    QWORD PTR [rip+0x3b379],rax        # 0x140055430
   14001a0b7:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a0bb:	mov    rcx,QWORD PTR [rcx]
   14001a0be:	call   0x140027500
   14001a0c3:	lea    rdx,[rip+0x24526]        # 0x14003e5f0
   14001a0ca:	mov    QWORD PTR [rip+0x3b337],rax        # 0x140055408
   14001a0d1:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a0d5:	mov    rcx,QWORD PTR [rcx]
   14001a0d8:	call   0x140027500
   14001a0dd:	lea    rdx,[rip+0x2451c]        # 0x14003e600
   14001a0e4:	mov    QWORD PTR [rip+0x3b33d],rax        # 0x140055428
   14001a0eb:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a0ef:	mov    rcx,QWORD PTR [rcx]
   14001a0f2:	call   0x140027500
   14001a0f7:	lea    rdx,[rip+0x24512]        # 0x14003e610
   14001a0fe:	mov    QWORD PTR [rip+0x3b31b],rax        # 0x140055420
   14001a105:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a109:	mov    rcx,QWORD PTR [rcx]
   14001a10c:	call   0x140027500
   14001a111:	lea    rdx,[rip+0x232ec]        # 0x14003d404
   14001a118:	mov    QWORD PTR [rip+0x3b2f9],rax        # 0x140055418
   14001a11f:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a123:	mov    rcx,QWORD PTR [rcx]
   14001a126:	call   0x140027500
   14001a12b:	lea    rdx,[rip+0x244ee]        # 0x14003e620
   14001a132:	mov    QWORD PTR [rip+0x3b2d7],rax        # 0x140055410
   14001a139:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a13d:	mov    rcx,QWORD PTR [rcx]
   14001a140:	call   0x140027500
   14001a145:	lea    rdx,[rip+0x244e0]        # 0x14003e62c
   14001a14c:	mov    QWORD PTR [rip+0x3b2ad],rax        # 0x140055400
   14001a153:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a157:	mov    rcx,QWORD PTR [rcx]
   14001a15a:	call   0x140027500
   14001a15f:	lea    rdx,[rip+0x244d2]        # 0x14003e638
   14001a166:	mov    QWORD PTR [rip+0x3b28b],rax        # 0x1400553f8
   14001a16d:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a171:	mov    rcx,QWORD PTR [rcx]
   14001a174:	call   0x140027500
   14001a179:	lea    rdx,[rip+0x244c4]        # 0x14003e644
   14001a180:	mov    QWORD PTR [rip+0x3b269],rax        # 0x1400553f0
   14001a187:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a18b:	mov    rcx,QWORD PTR [rcx]
   14001a18e:	call   0x140027500
   14001a193:	lea    rdx,[rip+0x244b6]        # 0x14003e650
   14001a19a:	mov    QWORD PTR [rip+0x3b23f],rax        # 0x1400553e0
   14001a1a1:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a1a5:	mov    rcx,QWORD PTR [rcx]
   14001a1a8:	call   0x140027500
   14001a1ad:	lea    rdx,[rip+0x244ac]        # 0x14003e660
   14001a1b4:	mov    QWORD PTR [rip+0x3b22d],rax        # 0x1400553e8
   14001a1bb:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a1bf:	mov    rcx,QWORD PTR [rcx]
   14001a1c2:	call   0x140027500
   14001a1c7:	mov    QWORD PTR [rip+0x3b20a],rax        # 0x1400553d8
   14001a1ce:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a1d2:	lea    rdx,[rip+0x24497]        # 0x14003e670
   14001a1d9:	mov    rcx,QWORD PTR [rcx]
   14001a1dc:	call   0x140027500
   14001a1e1:	lea    rdx,[rip+0x24494]        # 0x14003e67c
   14001a1e8:	mov    QWORD PTR [rip+0x3b1e1],rax        # 0x1400553d0
   14001a1ef:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a1f3:	mov    rcx,QWORD PTR [rcx]
   14001a1f6:	call   0x140027500
   14001a1fb:	lea    rdx,[rip+0x24482]        # 0x14003e684
   14001a202:	mov    QWORD PTR [rip+0x3b1bf],rax        # 0x1400553c8
   14001a209:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a20d:	mov    rcx,QWORD PTR [rcx]
   14001a210:	call   0x140027500
   14001a215:	lea    rdx,[rip+0x24474]        # 0x14003e690
   14001a21c:	mov    QWORD PTR [rip+0x3b19d],rax        # 0x1400553c0
   14001a223:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a227:	mov    rcx,QWORD PTR [rcx]
   14001a22a:	call   0x140027500
   14001a22f:	lea    rdx,[rip+0x24462]        # 0x14003e698
   14001a236:	mov    QWORD PTR [rip+0x3b17b],rax        # 0x1400553b8
   14001a23d:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a241:	mov    rcx,QWORD PTR [rcx]
   14001a244:	call   0x140027500
   14001a249:	lea    rdx,[rip+0x24454]        # 0x14003e6a4
   14001a250:	mov    QWORD PTR [rip+0x3b159],rax        # 0x1400553b0
   14001a257:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a25b:	mov    rcx,QWORD PTR [rcx]
   14001a25e:	call   0x140027500
   14001a263:	lea    rdx,[rip+0x2443e]        # 0x14003e6a8
   14001a26a:	mov    QWORD PTR [rip+0x3b137],rax        # 0x1400553a8
   14001a271:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a275:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a279:	call   0x140027500
   14001a27e:	lea    rdx,[rip+0x24347]        # 0x14003e5cc
   14001a285:	mov    QWORD PTR [rip+0x3b10c],rax        # 0x140055398
   14001a28c:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a290:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a294:	call   0x140027500
   14001a299:	lea    rdx,[rip+0x24350]        # 0x14003e5f0
   14001a2a0:	mov    QWORD PTR [rip+0x3b0e1],rax        # 0x140055388
   14001a2a7:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a2ab:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a2af:	call   0x140027500
   14001a2b4:	lea    rdx,[rip+0x24345]        # 0x14003e600
   14001a2bb:	mov    QWORD PTR [rip+0x3b0be],rax        # 0x140055380
   14001a2c2:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a2c6:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a2ca:	call   0x140027500
   14001a2cf:	lea    rdx,[rip+0x2433a]        # 0x14003e610
   14001a2d6:	mov    QWORD PTR [rip+0x3b09b],rax        # 0x140055378
   14001a2dd:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a2e1:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a2e5:	call   0x140027500
   14001a2ea:	lea    rdx,[rip+0x23113]        # 0x14003d404
   14001a2f1:	mov    QWORD PTR [rip+0x3b078],rax        # 0x140055370
   14001a2f8:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a2fc:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a300:	call   0x140027500
   14001a305:	lea    rdx,[rip+0x243a4]        # 0x14003e6b0
   14001a30c:	mov    QWORD PTR [rip+0x3b055],rax        # 0x140055368
   14001a313:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a317:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a31b:	call   0x140027500
   14001a320:	lea    rdx,[rip+0x24395]        # 0x14003e6bc
   14001a327:	mov    QWORD PTR [rip+0x3aff2],rax        # 0x140055320
   14001a32e:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a332:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a336:	call   0x140027500
   14001a33b:	lea    rdx,[rip+0x2437e]        # 0x14003e6c0
   14001a342:	mov    QWORD PTR [rip+0x3b017],rax        # 0x140055360
   14001a349:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a34d:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a351:	call   0x140027500
   14001a356:	lea    rdx,[rip+0x24373]        # 0x14003e6d0
   14001a35d:	mov    QWORD PTR [rip+0x3afa4],rax        # 0x140055308
   14001a364:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a368:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a36c:	call   0x140027500
   14001a371:	mov    QWORD PTR [rip+0x3af88],rax        # 0x140055300
   14001a378:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a37c:	lea    rdx,[rip+0x2435d]        # 0x14003e6e0
   14001a383:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a387:	call   0x140027500
   14001a38c:	lea    rdx,[rip+0x2435d]        # 0x14003e6f0
   14001a393:	mov    QWORD PTR [rip+0x3af5e],rax        # 0x1400552f8
   14001a39a:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a39e:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a3a2:	call   0x140027500
   14001a3a7:	lea    rdx,[rip+0x24352]        # 0x14003e700
   14001a3ae:	mov    QWORD PTR [rip+0x3af3b],rax        # 0x1400552f0
   14001a3b5:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a3b9:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a3bd:	call   0x140027500
   14001a3c2:	lea    rdx,[rip+0x24347]        # 0x14003e710
   14001a3c9:	mov    QWORD PTR [rip+0x3af18],rax        # 0x1400552e8
   14001a3d0:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a3d4:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a3d8:	call   0x140027500
   14001a3dd:	lea    rdx,[rip+0x2433c]        # 0x14003e720
   14001a3e4:	mov    QWORD PTR [rip+0x3aef5],rax        # 0x1400552e0
   14001a3eb:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a3ef:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a3f3:	call   0x140027500
   14001a3f8:	lea    rdx,[rip+0x24331]        # 0x14003e730
   14001a3ff:	mov    QWORD PTR [rip+0x3aed2],rax        # 0x1400552d8
   14001a406:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a40a:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a40e:	call   0x140027500
   14001a413:	lea    rdx,[rip+0x24326]        # 0x14003e740
   14001a41a:	mov    QWORD PTR [rip+0x3aeaf],rax        # 0x1400552d0
   14001a421:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a425:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a429:	call   0x140027500
   14001a42e:	lea    rdx,[rip+0x24317]        # 0x14003e74c
   14001a435:	mov    QWORD PTR [rip+0x3ae8c],rax        # 0x1400552c8
   14001a43c:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a440:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a444:	call   0x140027500
   14001a449:	lea    rdx,[rip+0x241d0]        # 0x14003e620
   14001a450:	mov    QWORD PTR [rip+0x3af39],rax        # 0x140055390
   14001a457:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a45b:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a45f:	call   0x140027500
   14001a464:	lea    rdx,[rip+0x24179]        # 0x14003e5e4
   14001a46b:	mov    QWORD PTR [rip+0x3aed6],rax        # 0x140055348
   14001a472:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a476:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a47a:	call   0x140027500
   14001a47f:	lea    rdx,[rip+0x242d2]        # 0x14003e758
   14001a486:	mov    QWORD PTR [rip+0x3aecb],rax        # 0x140055358
   14001a48d:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a491:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a495:	call   0x140027500
   14001a49a:	lea    rdx,[rip+0x242c7]        # 0x14003e768
   14001a4a1:	mov    QWORD PTR [rip+0x3aea8],rax        # 0x140055350
   14001a4a8:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a4ac:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a4b0:	call   0x140027500
   14001a4b5:	lea    rdx,[rip+0x242bc]        # 0x14003e778
   14001a4bc:	mov    QWORD PTR [rip+0x3ae7d],rax        # 0x140055340
   14001a4c3:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a4c7:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a4cb:	call   0x140027500
   14001a4d0:	lea    rdx,[rip+0x241a5]        # 0x14003e67c
   14001a4d7:	mov    QWORD PTR [rip+0x3ae5a],rax        # 0x140055338
   14001a4de:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a4e2:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a4e6:	call   0x140027500
   14001a4eb:	lea    rdx,[rip+0x2419e]        # 0x14003e690
   14001a4f2:	mov    QWORD PTR [rip+0x3ae37],rax        # 0x140055330
   14001a4f9:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a4fd:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a501:	call   0x140027500
   14001a506:	lea    rdx,[rip+0x2427b]        # 0x14003e788
   14001a50d:	mov    QWORD PTR [rip+0x3ae14],rax        # 0x140055328
   14001a514:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a518:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a51c:	call   0x140027500
   14001a521:	mov    QWORD PTR [rip+0x3ad98],rax        # 0x1400552c0
   14001a528:	mov    rcx,QWORD PTR [rbx+0x48]
   14001a52c:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a530:	lea    rdx,[rip+0x24261]        # 0x14003e798
   14001a537:	call   0x140027500
   14001a53c:	mov    QWORD PTR [rip+0x3ad75],rax        # 0x1400552b8
   14001a543:	add    rsp,0x20
   14001a547:	pop    rbx
   14001a548:	ret    
   14001a549:	int3   
   14001a54a:	int3   
   14001a54b:	int3   
   14001a54c:	int3   
   14001a54d:	int3   
   14001a54e:	int3   
   14001a54f:	int3   
   14001a550:	mov    QWORD PTR [rsp+0x20],rbx
   14001a555:	push   rsi
   14001a556:	sub    rsp,0x50
   14001a55a:	mov    rbx,rcx
   14001a55d:	mov    QWORD PTR [rsp+0x70],rdi
   14001a562:	mov    ecx,0x38
   14001a567:	movaps XMMWORD PTR [rsp+0x30],xmm7
   14001a56c:	movaps XMMWORD PTR [rsp+0x20],xmm8
   14001a572:	call   0x14001d2c0
   14001a577:	lea    rdx,[rip+0x2422a]        # 0x14003e7a8
   14001a57e:	mov    rcx,rbx
   14001a581:	mov    QWORD PTR [rbx+0x50],rax
   14001a585:	call   0x1400275b0
   14001a58a:	mov    rdi,rax
   14001a58d:	test   rax,rax
   14001a590:	jne    0x14001a5a7
   14001a592:	lea    rcx,[rip+0x2421f]        # 0x14003e7b8
   14001a599:	call   QWORD PTR [rip+0x22b69]        # 0x14003d108
   14001a59f:	mov    rdi,rax
   14001a5a2:	test   rax,rax
   14001a5a5:	je     0x14001a619
   14001a5a7:	or     rdx,0xffffffffffffffff
   14001a5ab:	nop    DWORD PTR [rax+rax*1+0x0]
   14001a5b0:	inc    rdx
   14001a5b3:	cmp    BYTE PTR [rdi+rdx*1],0x0
   14001a5b7:	jne    0x14001a5b0
   14001a5b9:	mov    rcx,QWORD PTR [rip+0x39228]        # 0x1400537e8
   14001a5c0:	add    rdx,0xc
   14001a5c4:	call   QWORD PTR [rip+0x22ade]        # 0x14003d0a8
   14001a5ca:	mov    r8,rax
   14001a5cd:	mov    QWORD PTR [rip+0x39214],rax        # 0x1400537e8
   14001a5d4:	movsd  xmm0,QWORD PTR [rip+0x241ec]        # 0x14003e7c8
   14001a5dc:	movsd  QWORD PTR [rax],xmm0
   14001a5e0:	mov    ecx,DWORD PTR [rip+0x241ea]        # 0x14003e7d0
   14001a5e6:	mov    DWORD PTR [rax+0x8],ecx
   14001a5e9:	lea    rcx,[rax-0x1]
   14001a5ed:	nop    DWORD PTR [rax]
   14001a5f0:	cmp    BYTE PTR [rcx+0x1],0x0
   14001a5f4:	lea    rcx,[rcx+0x1]
   14001a5f8:	jne    0x14001a5f0
   14001a5fa:	xor    edx,edx
   14001a5fc:	nop    DWORD PTR [rax+0x0]
   14001a600:	movzx  eax,BYTE PTR [rdi+rdx*1]
   14001a604:	lea    rdx,[rdx+0x1]
   14001a608:	mov    BYTE PTR [rcx+rdx*1-0x1],al
   14001a60c:	test   al,al
   14001a60e:	jne    0x14001a600
   14001a610:	mov    rcx,r8
   14001a613:	call   QWORD PTR [rip+0x22cbf]        # 0x14003d2d8
   14001a619:	lea    rdx,[rip+0x241b8]        # 0x14003e7d8
   14001a620:	mov    rcx,rbx
   14001a623:	call   0x140027500
   14001a628:	mov    rcx,rbx
   14001a62b:	mov    rdx,rax
   14001a62e:	xorps  xmm8,xmm8
   14001a632:	movaps xmm3,xmm8
   14001a636:	movaps xmm2,xmm8
   14001a63a:	call   0x14001c2e0
   14001a63f:	mov    rax,QWORD PTR [rbx+0x50]
   14001a643:	movabs rcx,0x3ff0000000000000
   14001a64d:	lea    rdx,[rip+0x22dbc]        # 0x14003d410
   14001a654:	movsd  QWORD PTR [rax],xmm0
   14001a658:	mov    rax,QWORD PTR [rbx+0x50]
   14001a65c:	mov    QWORD PTR [rax+0x10],rcx
   14001a660:	mov    rcx,rbx
   14001a663:	call   0x1400275b0
   14001a668:	xor    esi,esi
   14001a66a:	test   rax,rax
   14001a66d:	je     0x14001a695
   14001a66f:	movzx  ecx,BYTE PTR [rax]
   14001a672:	cmp    cl,BYTE PTR [rip+0x24168]        # 0x14003e7e0
   14001a678:	jne    0x14001a695
   14001a67a:	movzx  ecx,BYTE PTR [rax+0x1]
   14001a67e:	cmp    cl,BYTE PTR [rip+0x2415d]        # 0x14003e7e1
   14001a684:	jne    0x14001a695
   14001a686:	movzx  eax,BYTE PTR [rax+0x2]
   14001a68a:	cmp    al,BYTE PTR [rip+0x24152]        # 0x14003e7e2
   14001a690:	lea    eax,[rsi+0x1]
   14001a693:	je     0x14001a697
   14001a695:	mov    eax,esi
   14001a697:	mov    rcx,rbx
   14001a69a:	movaps XMMWORD PTR [rsp+0x40],xmm6
   14001a69f:	mov    BYTE PTR [rbx+0x90],al
   14001a6a5:	call   0x140019930
   14001a6aa:	lea    rdx,[rip+0x24137]        # 0x14003e7e8
   14001a6b1:	mov    rcx,rbx
   14001a6b4:	call   0x140027500
   14001a6b9:	mov    rcx,rbx
   14001a6bc:	mov    rdx,rax
   14001a6bf:	movsd  xmm7,QWORD PTR [rip+0x22d09]        # 0x14003d3d0
   14001a6c7:	movsd  xmm2,QWORD PTR [rip+0x23171]        # 0x14003d840
   14001a6cf:	movaps xmm3,xmm7
   14001a6d2:	call   0x14001c2e0
   14001a6d7:	movsd  xmm6,QWORD PTR [rip+0x22cf9]        # 0x14003d3d8
   14001a6df:	movsd  QWORD PTR [rsp+0x60],xmm0
   14001a6e5:	mulsd  xmm0,QWORD PTR [rip+0x22d9b]        # 0x14003d488
   14001a6ed:	comisd xmm0,xmm8
   14001a6f2:	jb     0x14001a6fa
   14001a6f4:	addsd  xmm0,xmm6
   14001a6f8:	jmp    0x14001a6fe
   14001a6fa:	subsd  xmm0,xmm6
   14001a6fe:	cvttsd2si eax,xmm0
   14001a702:	lea    rdx,[rip+0x22c8f]        # 0x14003d398
   14001a709:	mov    rcx,rbx
   14001a70c:	mov    DWORD PTR [rbx+0x124],eax
   14001a712:	call   0x140027500
   14001a717:	xor    r8d,r8d
   14001a71a:	mov    rdx,rax
   14001a71d:	mov    rcx,rbx
   14001a720:	call   0x14001c3e0
   14001a725:	mov    rdi,rax
   14001a728:	test   rax,rax
   14001a72b:	je     0x14001a77a
   14001a72d:	lea    r8,[rsp+0x60]
   14001a732:	lea    rdx,[rip+0x22c67]        # 0x14003d3a0
   14001a739:	mov    rcx,rax
   14001a73c:	call   QWORD PTR [rip+0x22b76]        # 0x14003d2b8
   14001a742:	test   eax,eax
   14001a744:	jne    0x14001a74e
   14001a746:	movsd  QWORD PTR [rsp+0x60],xmm6
   14001a74c:	jmp    0x14001a75c
   14001a74e:	comisd xmm7,QWORD PTR [rsp+0x60]
   14001a754:	jbe    0x14001a75c
   14001a756:	movsd  QWORD PTR [rsp+0x60],xmm7
   14001a75c:	lea    rdx,[rip+0x2408d]        # 0x14003e7f0
   14001a763:	mov    rcx,rdi
   14001a766:	call   QWORD PTR [rip+0x229ac]        # 0x14003d118
   14001a76c:	test   rax,rax
   14001a76f:	je     0x14001a780
   14001a771:	mov    BYTE PTR [rbx+0x153],0x1
   14001a778:	jmp    0x14001a780
   14001a77a:	movsd  QWORD PTR [rsp+0x60],xmm6
   14001a780:	movsd  xmm0,QWORD PTR [rsp+0x60]
   14001a786:	movaps xmm7,XMMWORD PTR [rsp+0x30]
   14001a78b:	mov    rdi,QWORD PTR [rsp+0x70]
   14001a790:	mulsd  xmm0,QWORD PTR [rip+0x22cf0]        # 0x14003d488
   14001a798:	comisd xmm0,xmm8
   14001a79d:	movaps xmm8,XMMWORD PTR [rsp+0x20]
   14001a7a3:	jb     0x14001a7ab
   14001a7a5:	addsd  xmm0,xmm6
   14001a7a9:	jmp    0x14001a7af
   14001a7ab:	subsd  xmm0,xmm6
   14001a7af:	cvttsd2si eax,xmm0
   14001a7b3:	lea    rdx,[rip+0x23e66]        # 0x14003e620
   14001a7ba:	mov    rcx,rbx
   14001a7bd:	mov    DWORD PTR [rbx+0x128],eax
   14001a7c3:	call   0x140027500
   14001a7c8:	xor    r9d,r9d
   14001a7cb:	xor    r8d,r8d
   14001a7ce:	mov    rcx,rbx
   14001a7d1:	mov    rdx,rax
   14001a7d4:	call   0x14001c350
   14001a7d9:	mov    rcx,rbx
   14001a7dc:	mov    BYTE PTR [rbx+0x121],al
   14001a7e2:	call   0x14002aef0
   14001a7e7:	lea    rdx,[rip+0x2400a]        # 0x14003e7f8
   14001a7ee:	mov    rcx,rbx
   14001a7f1:	movd   xmm0,eax
   14001a7f5:	cvtdq2pd xmm0,xmm0
   14001a7f9:	mulsd  xmm0,QWORD PTR [rip+0x23b0f]        # 0x14003e310
   14001a801:	movsd  QWORD PTR [rip+0x3ac7f],xmm0        # 0x140055488
   14001a809:	mov    r8,QWORD PTR [rbx+0x50]
   14001a80d:	add    r8,0x28
   14001a811:	call   0x140019f10
   14001a816:	mov    r8,QWORD PTR [rbx+0x50]
   14001a81a:	lea    rdx,[rip+0x23fdf]        # 0x14003e800
   14001a821:	add    r8,0x20
   14001a825:	mov    rcx,rbx
   14001a828:	call   0x140019f10
   14001a82d:	lea    rdx,[rip+0x23fd4]        # 0x14003e808
   14001a834:	mov    rcx,rbx
   14001a837:	call   0x1400275b0
   14001a83c:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   14001a841:	test   rax,rax
   14001a844:	je     0x14001a86e
   14001a846:	lea    r8,[rsp+0x68]
   14001a84b:	lea    rdx,[rip+0x22b4e]        # 0x14003d3a0
   14001a852:	mov    rcx,rax
   14001a855:	call   QWORD PTR [rip+0x22a5d]        # 0x14003d2b8
   14001a85b:	cmp    eax,0x1
   14001a85e:	jl     0x14001a86e
   14001a860:	movsd  xmm0,QWORD PTR [rsp+0x68]
   14001a866:	movsd  QWORD PTR [rip+0x3ac1a],xmm0        # 0x140055488
   14001a86e:	lea    rdx,[rip+0x23f73]        # 0x14003e7e8
   14001a875:	mov    rcx,rbx
   14001a878:	call   0x1400275b0
   14001a87d:	test   rax,rax
   14001a880:	je     0x14001a8aa
   14001a882:	lea    r8,[rsp+0x68]
   14001a887:	lea    rdx,[rip+0x22b12]        # 0x14003d3a0
   14001a88e:	mov    rcx,rax
   14001a891:	call   QWORD PTR [rip+0x22a21]        # 0x14003d2b8
   14001a897:	cmp    eax,0x1
   14001a89a:	jl     0x14001a8aa
   14001a89c:	movsd  xmm0,QWORD PTR [rsp+0x68]
   14001a8a2:	movsd  QWORD PTR [rip+0x3abd6],xmm0        # 0x140055480
   14001a8aa:	lea    rdx,[rip+0x23f5f]        # 0x14003e810
   14001a8b1:	mov    rcx,rbx
   14001a8b4:	call   0x1400275b0
   14001a8b9:	test   rax,rax
   14001a8bc:	je     0x14001a8e6
   14001a8be:	lea    r8,[rsp+0x68]
   14001a8c3:	lea    rdx,[rip+0x22ad6]        # 0x14003d3a0
   14001a8ca:	mov    rcx,rax
   14001a8cd:	call   QWORD PTR [rip+0x229e5]        # 0x14003d2b8
   14001a8d3:	cmp    eax,0x1
   14001a8d6:	jl     0x14001a8e6
   14001a8d8:	movsd  xmm0,QWORD PTR [rsp+0x68]
   14001a8de:	movsd  QWORD PTR [rip+0x3ab92],xmm0        # 0x140055478
   14001a8e6:	lea    rdx,[rip+0x22b33]        # 0x14003d420
   14001a8ed:	mov    rcx,rbx
   14001a8f0:	call   0x1400275b0
   14001a8f5:	mov    rcx,rax
   14001a8f8:	call   0x14001c4b0
   14001a8fd:	mov    rcx,QWORD PTR [rbx+0x50]
   14001a901:	lea    rdx,[rip+0x23f14]        # 0x14003e81c
   14001a908:	mov    BYTE PTR [rcx+0x31],al
   14001a90b:	mov    rcx,rbx
   14001a90e:	call   0x1400275b0
   14001a913:	test   rax,rax
   14001a916:	je     0x14001a930
   14001a918:	mov    rcx,rax
   14001a91b:	call   QWORD PTR [rip+0x22767]        # 0x14003d088
   14001a921:	cmp    eax,0x5a
   14001a924:	mov    rax,QWORD PTR [rbx+0x50]
   14001a928:	sete   cl
   14001a92b:	mov    BYTE PTR [rax+0x30],cl
   14001a92e:	jmp    0x14001a957
   14001a930:	lea    rdx,[rip+0x23d19]        # 0x14003e650
   14001a937:	mov    rcx,rbx
   14001a93a:	call   0x1400275b0
   14001a93f:	test   rax,rax
   14001a942:	je     0x14001a957
   14001a944:	movzx  eax,BYTE PTR [rax]
   14001a947:	sub    al,0x4c
   14001a949:	test   al,0xdf
   14001a94b:	mov    rax,QWORD PTR [rbx+0x50]
   14001a94f:	sete   sil
   14001a953:	mov    BYTE PTR [rax+0x30],sil
   14001a957:	lea    rdx,[rip+0x23eca]        # 0x14003e828
   14001a95e:	mov    rcx,rbx
   14001a961:	call   0x1400275b0
   14001a966:	lea    r8,[rip+0x31773]        # 0x14004c0e0
   14001a96d:	lea    rdx,[rip+0x3174c]        # 0x14004c0c0
   14001a974:	mov    rcx,rax
   14001a977:	call   0x14001c510
   14001a97c:	lea    rdx,[rip+0x23eb5]        # 0x14003e838
   14001a983:	mov    rcx,rbx
   14001a986:	mov    DWORD PTR [rip+0x3ab08],eax        # 0x140055494
   14001a98c:	call   0x1400275b0
   14001a991:	mov    rcx,rax
   14001a994:	call   0x14001c4b0
   14001a999:	mov    rbx,QWORD PTR [rsp+0x78]
   14001a99e:	movsd  xmm0,QWORD PTR [rip+0x22a3a]        # 0x14003d3e0
   14001a9a6:	movsd  QWORD PTR [rip+0x3aad2],xmm0        # 0x140055480
   14001a9ae:	movsd  QWORD PTR [rip+0x3aac2],xmm0        # 0x140055478
   14001a9b6:	movsd  xmm0,QWORD PTR [rip+0x23eb2]        # 0x14003e870
   14001a9be:	mov    BYTE PTR [rip+0x3aacc],al        # 0x140055490
   14001a9c4:	movsd  QWORD PTR [rip+0x3aa94],xmm0        # 0x140055460
   14001a9cc:	add    rsp,0x50
   14001a9d0:	pop    rsi
   14001a9d1:	ret    
   14001a9d2:	int3   
   14001a9d3:	int3   
   14001a9d4:	int3   
   14001a9d5:	int3   
   14001a9d6:	int3   
   14001a9d7:	int3   
   14001a9d8:	int3   
   14001a9d9:	int3   
   14001a9da:	int3   
   14001a9db:	int3   
   14001a9dc:	int3   
   14001a9dd:	int3   
   14001a9de:	int3   
   14001a9df:	int3   
   14001a9e0:	sub    rsp,0x28
   14001a9e4:	mov    rdx,QWORD PTR [rip+0x3aadd]        # 0x1400554c8
   14001a9eb:	cmp    QWORD PTR [rdx],0x0
   14001a9ef:	jne    0x14001aa17
   14001a9f1:	mov    eax,DWORD PTR [rip+0x38df9]        # 0x1400537f0
   14001a9f7:	mov    ecx,eax
   14001a9f9:	inc    eax
   14001a9fb:	mov    DWORD PTR [rip+0x38def],eax        # 0x1400537f0
   14001aa01:	test   ecx,ecx
   14001aa03:	jne    0x14001aa10
   14001aa05:	add    rsp,0x28
   14001aa09:	rex.W jmp QWORD PTR [rip+0x228c0]        # 0x14003d2d0
   14001aa10:	xor    eax,eax
   14001aa12:	add    rsp,0x28
   14001aa16:	ret    
   14001aa17:	movsxd rax,DWORD PTR [rip+0x38dd2]        # 0x1400537f0
   14001aa1e:	cmp    QWORD PTR [rdx+rax*8],0x0
   14001aa23:	lea    r8,[rdx+rax*8]
   14001aa27:	je     0x14001aa10
   14001aa29:	mov    QWORD PTR [rsp+0x30],rbx
   14001aa2e:	mov    QWORD PTR [rsp+0x20],rdi
   14001aa33:	mov    rcx,QWORD PTR [r8]
   14001aa36:	inc    eax
   14001aa38:	lea    rdx,[rip+0x23b6d]        # 0x14003e5ac
   14001aa3f:	mov    DWORD PTR [rip+0x38dab],eax        # 0x1400537f0
   14001aa45:	call   QWORD PTR [rip+0x2268d]        # 0x14003d0d8
   14001aa4b:	mov    rdi,rax
   14001aa4e:	test   rax,rax
   14001aa51:	jne    0x14001aaa5
   14001aa53:	movsxd rbx,DWORD PTR [rip+0x38d96]        # 0x1400537f0
   14001aa5a:	call   QWORD PTR [rip+0x22870]        # 0x14003d2d0
   14001aa60:	mov    r9,QWORD PTR [rip+0x3aa61]        # 0x1400554c8
   14001aa67:	mov    r9,QWORD PTR [r9+rbx*8-0x8]
   14001aa6c:	mov    r8,QWORD PTR [rip+0x3aa4d]        # 0x1400554c0
   14001aa73:	lea    rcx,[rax+0x60]
   14001aa77:	lea    rdx,[rip+0x23b32]        # 0x14003e5b0
   14001aa7e:	call   QWORD PTR [rip+0x2283c]        # 0x14003d2c0
   14001aa84:	movsxd rax,DWORD PTR [rip+0x38d65]        # 0x1400537f0
   14001aa8b:	mov    rcx,QWORD PTR [rip+0x3aa36]        # 0x1400554c8
   14001aa92:	inc    DWORD PTR [rip+0x38d5c]        # 0x1400537f4
   14001aa98:	cmp    QWORD PTR [rcx+rax*8],rdi
   14001aa9c:	lea    r8,[rcx+rax*8]
   14001aaa0:	jne    0x14001aa33
   14001aaa2:	mov    rax,rdi
   14001aaa5:	mov    rbx,QWORD PTR [rsp+0x30]
   14001aaaa:	mov    rdi,QWORD PTR [rsp+0x20]
   14001aaaf:	add    rsp,0x28
   14001aab3:	ret    
   14001aab4:	int3   
   14001aab5:	int3   
   14001aab6:	int3   
   14001aab7:	int3   
   14001aab8:	int3   
   14001aab9:	int3   
   14001aaba:	int3   
   14001aabb:	int3   
   14001aabc:	int3   
   14001aabd:	int3   
   14001aabe:	int3   
   14001aabf:	int3   
   14001aac0:	rex push rbx
   14001aac2:	sub    rsp,0x20
   14001aac6:	mov    rbx,QWORD PTR [rip+0x38d2b]        # 0x1400537f8
   14001aacd:	test   rbx,rbx
   14001aad0:	jne    0x14001aaea
   14001aad2:	call   0x14001a9e0
   14001aad7:	mov    rbx,rax
   14001aada:	mov    QWORD PTR [rip+0x38d17],rax        # 0x1400537f8
   14001aae1:	test   rax,rax
   14001aae4:	je     0x14001abde
   14001aaea:	mov    QWORD PTR [rsp+0x30],rsi
   14001aaef:	mov    QWORD PTR [rsp+0x38],rdi
   14001aaf4:	mov    rcx,rbx
   14001aaf7:	call   0x140028bf0
   14001aafc:	mov    rsi,rax
   14001aaff:	test   rax,rax
   14001ab02:	jne    0x14001abce
   14001ab08:	mov    rcx,QWORD PTR [rip+0x3a9b9]        # 0x1400554c8
   14001ab0f:	xor    ebx,ebx
   14001ab11:	cmp    QWORD PTR [rcx],rbx
   14001ab14:	jne    0x14001ab3c
   14001ab16:	mov    ecx,DWORD PTR [rip+0x38cd4]        # 0x1400537f0
   14001ab1c:	mov    edx,ecx
   14001ab1e:	inc    ecx
   14001ab20:	mov    DWORD PTR [rip+0x38cca],ecx        # 0x1400537f0
   14001ab26:	test   edx,edx
   14001ab28:	jne    0x14001abbb
   14001ab2e:	call   QWORD PTR [rip+0x2279c]        # 0x14003d2d0
   14001ab34:	mov    rbx,rax
   14001ab37:	jmp    0x14001abbb
   14001ab3c:	movsxd rdx,DWORD PTR [rip+0x38cad]        # 0x1400537f0
   14001ab43:	mov    rcx,QWORD PTR [rcx+rdx*8]
   14001ab47:	test   rcx,rcx
   14001ab4a:	je     0x14001abbb
   14001ab4c:	nop    DWORD PTR [rax+0x0]
   14001ab50:	inc    edx
   14001ab52:	mov    DWORD PTR [rip+0x38c98],edx        # 0x1400537f0
   14001ab58:	lea    rdx,[rip+0x23a4d]        # 0x14003e5ac
   14001ab5f:	call   QWORD PTR [rip+0x22573]        # 0x14003d0d8
   14001ab65:	mov    rbx,rax
   14001ab68:	test   rax,rax
   14001ab6b:	jne    0x14001abbb
   14001ab6d:	movsxd rdi,DWORD PTR [rip+0x38c7c]        # 0x1400537f0
   14001ab74:	call   QWORD PTR [rip+0x22756]        # 0x14003d2d0
   14001ab7a:	mov    r9,QWORD PTR [rip+0x3a947]        # 0x1400554c8
   14001ab81:	mov    r9,QWORD PTR [r9+rdi*8-0x8]
   14001ab86:	mov    r8,QWORD PTR [rip+0x3a933]        # 0x1400554c0
   14001ab8d:	lea    rcx,[rax+0x60]
   14001ab91:	lea    rdx,[rip+0x23a18]        # 0x14003e5b0
   14001ab98:	call   QWORD PTR [rip+0x22722]        # 0x14003d2c0
   14001ab9e:	movsxd rdx,DWORD PTR [rip+0x38c4b]        # 0x1400537f0
   14001aba5:	mov    rax,QWORD PTR [rip+0x3a91c]        # 0x1400554c8
   14001abac:	mov    rcx,QWORD PTR [rax+rdx*8]
   14001abb0:	inc    DWORD PTR [rip+0x38c3e]        # 0x1400537f4
   14001abb6:	test   rcx,rcx
   14001abb9:	jne    0x14001ab50
   14001abbb:	mov    QWORD PTR [rip+0x38c36],rbx        # 0x1400537f8
   14001abc2:	test   rbx,rbx
   14001abc5:	jne    0x14001aaf4
   14001abcb:	mov    rax,rsi
   14001abce:	mov    rsi,QWORD PTR [rsp+0x30]
   14001abd3:	mov    rdi,QWORD PTR [rsp+0x38]
   14001abd8:	add    rsp,0x20
   14001abdc:	pop    rbx
   14001abdd:	ret    
   14001abde:	add    rsp,0x20
   14001abe2:	pop    rbx
   14001abe3:	ret    
   14001abe4:	int3   
   14001abe5:	int3   
   14001abe6:	int3   
   14001abe7:	int3   
   14001abe8:	int3   
   14001abe9:	int3   
   14001abea:	int3   
   14001abeb:	int3   
   14001abec:	int3   
   14001abed:	int3   
   14001abee:	int3   
   14001abef:	int3   
   14001abf0:	mov    rax,rsp
   14001abf3:	mov    QWORD PTR [rax+0x8],rcx
   14001abf7:	push   rbx
   14001abf8:	push   r14
   14001abfa:	sub    rsp,0x2d8
   14001ac01:	mov    QWORD PTR [rax+0x20],rdi
   14001ac05:	movaps XMMWORD PTR [rax-0x48],xmm7
   14001ac09:	movaps XMMWORD PTR [rax-0x68],xmm9
   14001ac0e:	movsd  xmm9,xmm3
   14001ac13:	movaps xmm7,xmm3
   14001ac16:	mov    edi,r8d
   14001ac19:	mov    rbx,rcx
   14001ac1c:	movsxd r14,r8d
   14001ac1f:	unpcklpd xmm9,xmm9
   14001ac24:	test   r8d,r8d
   14001ac27:	js     0x14001ac4c
   14001ac29:	movabs rax,0x1ffffffffffffffe
   14001ac33:	lea    r8,[r14*2+0x2]
   14001ac3b:	lea    rcx,[rsp+0x30]
   14001ac40:	and    r8,rax
   14001ac43:	shl    r8,0x3
   14001ac47:	call   0x14003b8cc
   14001ac4c:	xor    r10d,r10d
   14001ac4f:	cmp    edi,0x1
   14001ac52:	jl     0x14001b040
   14001ac58:	mov    QWORD PTR [rsp+0x2f8],rbp
   14001ac60:	mov    QWORD PTR [rsp+0x300],rsi
   14001ac68:	mov    QWORD PTR [rsp+0x2d0],r12
   14001ac70:	mov    QWORD PTR [rsp+0x2c8],r13
   14001ac78:	mov    QWORD PTR [rsp+0x2c0],r15
   14001ac80:	lea    r11d,[rdi-0x1]
   14001ac84:	movaps XMMWORD PTR [rsp+0x2b0],xmm6
   14001ac8c:	movaps XMMWORD PTR [rsp+0x290],xmm8
   14001ac95:	movaps XMMWORD PTR [rsp+0x270],xmm10
   14001ac9e:	movsd  xmm10,QWORD PTR [rip+0x22739]        # 0x14003d3e0
   14001aca7:	mov    ebx,0x6
   14001acac:	mov    rdx,rdi
   14001acaf:	movsxd r9,r11d
   14001acb2:	mov    r15,r9
   14001acb5:	mov    ebp,ebx
   14001acb7:	lea    r12,[rsp+0x30]
   14001acbc:	mov    QWORD PTR [rsp+0x20],rdx
   14001acc1:	mov    r8,r10
   14001acc4:	test   r11d,r11d
   14001acc7:	js     0x14001ae31
   14001accd:	lea    eax,[r11+0x1]
   14001acd1:	cmp    eax,0x4
   14001acd4:	jb     0x14001ae31
   14001acda:	and    eax,0x80000003
   14001acdf:	jge    0x14001ace8
   14001ace1:	dec    eax
   14001ace3:	or     eax,0xfffffffc
   14001ace6:	inc    eax
   14001ace8:	movaps xmm5,XMMWORD PTR [rip+0x23cf1]        # 0x14003e9e0
   14001acef:	mov    edi,r11d
   14001acf2:	mov    r13d,0x2
   14001acf8:	sub    edi,eax
   14001acfa:	mov    rsi,r12
   14001acfd:	subpd  xmm5,xmm9
   14001ad02:	nop    DWORD PTR [rax+0x0]
   14001ad06:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001ad10:	movsd  xmm4,QWORD PTR [rsi+0x20]
   14001ad15:	movsd  xmm3,QWORD PTR [rsi+0x28]
   14001ad1a:	movsd  xmm2,QWORD PTR [rsi+0x10]
   14001ad1f:	lea    eax,[r13-0x2]
   14001ad23:	add    r8,0x4
   14001ad27:	movsxd rdx,eax
   14001ad2a:	lea    eax,[r13-0x1]
   14001ad2e:	add    rdx,rbp
   14001ad31:	movsxd rcx,eax
   14001ad34:	lea    eax,[r13+0x1]
   14001ad38:	movsd  xmm1,QWORD PTR [rsi]
   14001ad3c:	movaps xmm0,xmm4
   14001ad3f:	add    rdx,rdx
   14001ad42:	add    rcx,rbp
   14001ad45:	add    rsi,0x40
   14001ad49:	unpcklpd xmm2,xmm0
   14001ad4d:	movsd  xmm0,QWORD PTR [rsi-0x30]
   14001ad52:	mulpd  xmm2,xmm9
   14001ad57:	add    rcx,rcx
   14001ad5a:	unpcklpd xmm1,xmm0
   14001ad5e:	mulpd  xmm1,xmm5
   14001ad62:	addpd  xmm2,xmm1
   14001ad66:	movsd  xmm1,QWORD PTR [rsi-0x28]
   14001ad6b:	movlpd QWORD PTR [rsp+rdx*8+0x30],xmm2
   14001ad71:	movhpd QWORD PTR [rsp+rcx*8+0x30],xmm2
   14001ad77:	movsd  xmm2,QWORD PTR [rsi-0x38]
   14001ad7c:	movaps xmm0,xmm1
   14001ad7f:	unpcklpd xmm2,xmm0
   14001ad83:	movaps xmm0,xmm3
   14001ad86:	unpcklpd xmm1,xmm0
   14001ad8a:	movsd  xmm0,QWORD PTR [rsi]
   14001ad8e:	mulpd  xmm2,xmm5
   14001ad92:	mulpd  xmm1,xmm9
   14001ad97:	addpd  xmm2,xmm1
   14001ad9b:	movsd  xmm1,QWORD PTR [rsi-0x10]
   14001ada0:	movlpd QWORD PTR [rsp+rdx*8+0x38],xmm2
   14001ada6:	movhpd QWORD PTR [rsp+rcx*8+0x38],xmm2
   14001adac:	movaps xmm2,xmm1
   14001adaf:	movsxd rdx,r13d
   14001adb2:	movsxd rcx,eax
   14001adb5:	add    r13d,0x4
   14001adb9:	add    rdx,rbp
   14001adbc:	add    rcx,rbp
   14001adbf:	lea    eax,[r13-0x2]
   14001adc3:	add    rdx,rdx
   14001adc6:	add    rcx,rcx
   14001adc9:	unpcklpd xmm2,xmm0
   14001adcd:	movaps xmm0,xmm1
   14001add0:	movaps xmm1,xmm4
   14001add3:	unpcklpd xmm1,xmm0
   14001add7:	mulpd  xmm2,xmm9
   14001addc:	movsd  xmm0,QWORD PTR [rsi+0x8]
   14001ade1:	mulpd  xmm1,xmm5
   14001ade5:	addpd  xmm2,xmm1
   14001ade9:	movsd  xmm1,QWORD PTR [rsi-0x8]
   14001adee:	movlpd QWORD PTR [rsp+rdx*8+0x30],xmm2
   14001adf4:	movaps xmm2,xmm1
   14001adf7:	movhpd QWORD PTR [rsp+rcx*8+0x30],xmm2
   14001adfd:	unpcklpd xmm2,xmm0
   14001ae01:	movaps xmm0,xmm1
   14001ae04:	movaps xmm1,xmm3
   14001ae07:	unpcklpd xmm1,xmm0
   14001ae0b:	mulpd  xmm2,xmm9
   14001ae10:	mulpd  xmm1,xmm5
   14001ae14:	addpd  xmm2,xmm1
   14001ae18:	movlpd QWORD PTR [rsp+rdx*8+0x38],xmm2
   14001ae1e:	movhpd QWORD PTR [rsp+rcx*8+0x38],xmm2
   14001ae24:	cmp    eax,edi
   14001ae26:	jle    0x14001ad10
   14001ae2c:	mov    rdx,QWORD PTR [rsp+0x20]
   14001ae31:	cmp    r8,r9
   14001ae34:	jg     0x14001afd3
   14001ae3a:	mov    rax,r9
   14001ae3d:	sub    rax,r8
   14001ae40:	inc    rax
   14001ae43:	cmp    rax,0x4
   14001ae47:	jl     0x14001af6f
   14001ae4d:	lea    rax,[rbx+r8*1]
   14001ae51:	lea    rcx,[rsp+0x30]
   14001ae56:	movaps xmm8,xmm10
   14001ae5a:	shl    rax,0x4
   14001ae5e:	subsd  xmm8,xmm7
   14001ae63:	add    rcx,rax
   14001ae66:	mov    rax,r9
   14001ae69:	sub    rax,r8
   14001ae6c:	sub    rax,0x3
   14001ae70:	shr    rax,0x2
   14001ae74:	inc    rax
   14001ae77:	lea    r8,[r8+rax*4]
   14001ae7b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001ae80:	movsd  xmm0,QWORD PTR [rcx-0x50]
   14001ae85:	movsd  xmm6,QWORD PTR [rcx-0x38]
   14001ae8a:	movsd  xmm3,QWORD PTR [rcx-0x30]
   14001ae8f:	add    rcx,0x40
   14001ae93:	mulsd  xmm0,xmm7
   14001ae97:	movaps xmm1,xmm8
   14001ae9b:	movaps xmm2,xmm8
   14001ae9f:	mulsd  xmm1,QWORD PTR [rcx-0xa0]
   14001aea7:	mulsd  xmm2,QWORD PTR [rcx-0x98]
   14001aeaf:	addsd  xmm1,xmm0
   14001aeb3:	movsd  xmm0,QWORD PTR [rcx-0x88]
   14001aebb:	mulsd  xmm0,xmm7
   14001aebf:	movsd  QWORD PTR [rcx-0x40],xmm1
   14001aec4:	movsd  xmm1,QWORD PTR [rcx-0x80]
   14001aec9:	addsd  xmm2,xmm0
   14001aecd:	movaps xmm0,xmm8
   14001aed1:	mulsd  xmm1,xmm7
   14001aed5:	mulsd  xmm0,QWORD PTR [rcx-0x90]
   14001aedd:	movsd  QWORD PTR [rcx-0x38],xmm2
   14001aee2:	movaps xmm2,xmm6
   14001aee5:	mulsd  xmm6,xmm8
   14001aeea:	addsd  xmm1,xmm0
   14001aeee:	movaps xmm0,xmm8
   14001aef2:	mulsd  xmm2,xmm7
   14001aef6:	mulsd  xmm0,QWORD PTR [rcx-0x88]
   14001aefe:	movsd  QWORD PTR [rcx-0x30],xmm1
   14001af03:	movaps xmm1,xmm3
   14001af06:	mulsd  xmm1,xmm7
   14001af0a:	mulsd  xmm3,xmm8
   14001af0f:	addsd  xmm2,xmm0
   14001af13:	movaps xmm0,xmm8
   14001af17:	movsd  QWORD PTR [rcx-0x28],xmm2
   14001af1c:	movsd  xmm2,QWORD PTR [rcx-0x68]
   14001af21:	mulsd  xmm0,QWORD PTR [rcx-0x80]
   14001af26:	addsd  xmm1,xmm0
   14001af2a:	movaps xmm0,xmm2
   14001af2d:	mulsd  xmm2,xmm8
   14001af32:	mulsd  xmm0,xmm7
   14001af36:	movsd  QWORD PTR [rcx-0x20],xmm1
   14001af3b:	movaps xmm1,xmm7
   14001af3e:	addsd  xmm0,xmm6
   14001af42:	mulsd  xmm1,QWORD PTR [rcx-0x60]
   14001af47:	movsd  QWORD PTR [rcx-0x18],xmm0
   14001af4c:	movaps xmm0,xmm7
   14001af4f:	addsd  xmm1,xmm3
   14001af53:	mulsd  xmm0,QWORD PTR [rcx-0x58]
   14001af58:	addsd  xmm0,xmm2
   14001af5c:	movsd  QWORD PTR [rcx-0x10],xmm1
   14001af61:	movsd  QWORD PTR [rcx-0x8],xmm0
   14001af66:	dec    rax
   14001af69:	jne    0x14001ae80
   14001af6f:	cmp    r8,r9
   14001af72:	jg     0x14001afd3
   14001af74:	lea    rax,[r8-0x5]
   14001af78:	lea    rcx,[rsp+0x30]
   14001af7d:	movaps xmm3,xmm10
   14001af81:	add    rax,rbx
   14001af84:	subsd  xmm3,xmm7
   14001af88:	shl    rax,0x4
   14001af8c:	add    rcx,rax
   14001af8f:	mov    rax,r15
   14001af92:	sub    rax,r8
   14001af95:	inc    rax
   14001af98:	movaps xmm1,xmm3
   14001af9b:	movaps xmm0,xmm7
   14001af9e:	movaps xmm2,xmm7
   14001afa1:	add    rcx,0x10
   14001afa5:	mulsd  xmm0,QWORD PTR [rcx-0x10]
   14001afaa:	mulsd  xmm1,QWORD PTR [rcx-0x20]
   14001afaf:	mulsd  xmm2,QWORD PTR [rcx-0x8]
   14001afb4:	addsd  xmm1,xmm0
   14001afb8:	movaps xmm0,xmm3
   14001afbb:	movsd  QWORD PTR [rcx+0x40],xmm1
   14001afc0:	mulsd  xmm0,QWORD PTR [rcx-0x18]
   14001afc5:	addsd  xmm2,xmm0
   14001afc9:	movsd  QWORD PTR [rcx+0x48],xmm2
   14001afce:	dec    rax
   14001afd1:	jne    0x14001af98
   14001afd3:	dec    r11d
   14001afd6:	dec    r9
   14001afd9:	dec    r15
   14001afdc:	add    rbp,0x6
   14001afe0:	add    r12,0x60
   14001afe4:	add    rbx,0x6
   14001afe8:	dec    rdx
   14001afeb:	mov    QWORD PTR [rsp+0x20],rdx
   14001aff0:	jne    0x14001acc1
   14001aff6:	mov    rbx,QWORD PTR [rsp+0x2f0]
   14001affe:	movaps xmm10,XMMWORD PTR [rsp+0x270]
   14001b007:	movaps xmm8,XMMWORD PTR [rsp+0x290]
   14001b010:	mov    r15,QWORD PTR [rsp+0x2c0]
   14001b018:	mov    r13,QWORD PTR [rsp+0x2c8]
   14001b020:	mov    r12,QWORD PTR [rsp+0x2d0]
   14001b028:	movaps xmm6,XMMWORD PTR [rsp+0x2b0]
   14001b030:	mov    rsi,QWORD PTR [rsp+0x300]
   14001b038:	mov    rbp,QWORD PTR [rsp+0x2f8]
   14001b040:	mov    rax,QWORD PTR [rsp+0x310]
   14001b048:	movaps xmm9,XMMWORD PTR [rsp+0x280]
   14001b051:	movaps xmm7,XMMWORD PTR [rsp+0x2a0]
   14001b059:	mov    rdi,QWORD PTR [rsp+0x308]
   14001b061:	test   rax,rax
   14001b064:	je     0x14001b087
   14001b066:	test   r14,r14
   14001b069:	js     0x14001b087
   14001b06b:	lea    rcx,[rsp+0x30]
   14001b070:	movups xmm0,XMMWORD PTR [rcx]
   14001b073:	inc    r10
   14001b076:	lea    rax,[rax+0x10]
   14001b07a:	lea    rcx,[rcx+0x60]
   14001b07e:	movups XMMWORD PTR [rax-0x10],xmm0
   14001b082:	cmp    r10,r14
   14001b085:	jle    0x14001b070
   14001b087:	mov    rcx,QWORD PTR [rsp+0x318]
   14001b08f:	test   rcx,rcx
   14001b092:	je     0x14001b0c4
   14001b094:	test   r14,r14
   14001b097:	js     0x14001b0c4
   14001b099:	lea    rax,[r14+r14*2]
   14001b09d:	lea    rdx,[rsp+0x30]
   14001b0a2:	shl    rax,0x5
   14001b0a6:	add    rdx,rax
   14001b0a9:	lea    rax,[r14+0x1]
   14001b0ad:	nop    DWORD PTR [rax]
   14001b0b0:	movups xmm0,XMMWORD PTR [rdx]
   14001b0b3:	lea    rcx,[rcx+0x10]
   14001b0b7:	lea    rdx,[rdx-0x50]
   14001b0bb:	movups XMMWORD PTR [rcx-0x10],xmm0
   14001b0bf:	dec    rax
   14001b0c2:	jne    0x14001b0b0
   14001b0c4:	lea    rax,[r14+r14*2]
   14001b0c8:	shl    rax,0x5
   14001b0cc:	movups xmm0,XMMWORD PTR [rsp+rax*1+0x30]
   14001b0d1:	mov    rax,rbx
   14001b0d4:	movups XMMWORD PTR [rbx],xmm0
   14001b0d7:	add    rsp,0x2d8
   14001b0de:	pop    r14
   14001b0e0:	pop    rbx
   14001b0e1:	ret    
   14001b0e2:	int3   
   14001b0e3:	int3   
   14001b0e4:	int3   
   14001b0e5:	int3   
   14001b0e6:	int3   
   14001b0e7:	int3   
   14001b0e8:	int3   
   14001b0e9:	int3   
   14001b0ea:	int3   
   14001b0eb:	int3   
   14001b0ec:	int3   
   14001b0ed:	int3   
   14001b0ee:	int3   
   14001b0ef:	int3   
   14001b0f0:	mov    QWORD PTR [rsp+0x8],rbx
   14001b0f5:	mov    QWORD PTR [rsp+0x10],rbp
   14001b0fa:	mov    QWORD PTR [rsp+0x18],rsi
   14001b0ff:	mov    QWORD PTR [rsp+0x20],rdi
   14001b104:	push   r14
   14001b106:	sub    rsp,0x20
   14001b10a:	mov    r8,QWORD PTR [rip+0x38707]        # 0x140053818
   14001b111:	xor    ebp,ebp
   14001b113:	mov    r14,rcx
   14001b116:	mov    edi,ebp
   14001b118:	mov    esi,ebp
   14001b11a:	nop    WORD PTR [rax+rax*1+0x0]
   14001b120:	mov    ebx,DWORD PTR [rip+0x386e6]        # 0x14005380c
   14001b126:	mov    eax,ebx
   14001b128:	sub    eax,edi
   14001b12a:	cmp    eax,0x200
   14001b12f:	jge    0x14001b153
   14001b131:	add    ebx,0x200
   14001b137:	mov    rcx,r8
   14001b13a:	movsxd rdx,ebx
   14001b13d:	mov    DWORD PTR [rip+0x386c9],ebx        # 0x14005380c
   14001b143:	call   QWORD PTR [rip+0x21f5f]        # 0x14003d0a8
   14001b149:	mov    r8,rax
   14001b14c:	mov    QWORD PTR [rip+0x386c5],rax        # 0x140053818
   14001b153:	lea    rcx,[rsi+r8*1]
   14001b157:	sub    ebx,edi
   14001b159:	mov    r8,r14
   14001b15c:	mov    edx,ebx
   14001b15e:	call   QWORD PTR [rip+0x21fcc]        # 0x14003d130
   14001b164:	mov    r8,QWORD PTR [rip+0x386ad]        # 0x140053818
   14001b16b:	test   rax,rax
   14001b16e:	je     0x14001b18a
   14001b170:	or     rcx,0xffffffffffffffff
   14001b174:	inc    rcx
   14001b177:	cmp    BYTE PTR [rax+rcx*1],bpl
   14001b17b:	jne    0x14001b174
   14001b17d:	add    edi,ecx
   14001b17f:	movsxd rsi,edi
   14001b182:	cmp    BYTE PTR [rsi+r8*1-0x1],0xa
   14001b188:	jne    0x14001b120
   14001b18a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b18f:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b194:	test   edi,edi
   14001b196:	mov    rdi,QWORD PTR [rsp+0x48]
   14001b19b:	cmovg  rbp,r8
   14001b19f:	mov    rax,rbp
   14001b1a2:	mov    rbp,QWORD PTR [rsp+0x38]
   14001b1a7:	add    rsp,0x20
   14001b1ab:	pop    r14
   14001b1ad:	ret    
   14001b1ae:	int3   
   14001b1af:	int3   
   14001b1b0:	lea    rax,[rcx+0x110]
   14001b1b7:	cmp    QWORD PTR [rax],0x0
   14001b1bb:	je     0x14001b1e7
   14001b1bd:	nop    DWORD PTR [rax]
   14001b1c0:	mov    rdx,QWORD PTR [rax]
   14001b1c3:	cmp    rdx,rcx
   14001b1c6:	je     0x14001b1e7
   14001b1c8:	mov    rcx,QWORD PTR [rdx+0x110]
   14001b1cf:	test   rcx,rcx
   14001b1d2:	je     0x14001b1d7
   14001b1d4:	mov    QWORD PTR [rax],rcx
   14001b1d7:	mov    rcx,QWORD PTR [rax]
   14001b1da:	lea    rax,[rcx+0x110]
   14001b1e1:	cmp    QWORD PTR [rax],0x0
   14001b1e5:	jne    0x14001b1c0
   14001b1e7:	mov    rax,rcx
   14001b1ea:	ret    
   14001b1eb:	int3   
   14001b1ec:	int3   
   14001b1ed:	int3   
   14001b1ee:	int3   
   14001b1ef:	int3   
   14001b1f0:	mov    QWORD PTR [rsp+0x8],rbx
   14001b1f5:	push   rdi
   14001b1f6:	sub    rsp,0x20
   14001b1fa:	cmp    DWORD PTR [rcx+0x108],0x1
   14001b201:	mov    rdi,rdx
   14001b204:	mov    rbx,rcx
   14001b207:	je     0x14001b223
   14001b209:	lea    rdx,[rip+0x23680]        # 0x14003e890
   14001b210:	lea    rcx,[rip+0x236e9]        # 0x14003e900
   14001b217:	mov    r8d,0xad
   14001b21d:	call   QWORD PTR [rip+0x21e6d]        # 0x14003d090
   14001b223:	mov    eax,DWORD PTR [rbx+0x108]
   14001b229:	mov    QWORD PTR [rbx+0x110],rbx
   14001b230:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b235:	sub    DWORD PTR [rdi+0x108],eax
   14001b23b:	add    rsp,0x20
   14001b23f:	pop    rdi
   14001b240:	ret    
   14001b241:	int3   
   14001b242:	int3   
   14001b243:	int3   
   14001b244:	int3   
   14001b245:	int3   
   14001b246:	int3   
   14001b247:	int3   
   14001b248:	int3   
   14001b249:	int3   
   14001b24a:	int3   
   14001b24b:	int3   
   14001b24c:	int3   
   14001b24d:	int3   
   14001b24e:	int3   
   14001b24f:	int3   
   14001b250:	mov    QWORD PTR [rsp+0x8],rbx
   14001b255:	mov    QWORD PTR [rsp+0x10],rsi
   14001b25a:	push   rdi
   14001b25b:	sub    rsp,0x20
   14001b25f:	cmp    QWORD PTR [rcx+0x110],0x0
   14001b267:	mov    rdi,rdx
   14001b26a:	mov    rbx,rcx
   14001b26d:	mov    r8,rcx
   14001b270:	je     0x14001b2c6
   14001b272:	lea    rax,[rcx+0x110]
   14001b279:	nop    DWORD PTR [rax+0x0]
   14001b280:	mov    rcx,QWORD PTR [rax]
   14001b283:	cmp    rcx,r8
   14001b286:	je     0x14001b2a7
   14001b288:	mov    rcx,QWORD PTR [rcx+0x110]
   14001b28f:	test   rcx,rcx
   14001b292:	je     0x14001b297
   14001b294:	mov    QWORD PTR [rax],rcx
   14001b297:	mov    r8,QWORD PTR [rax]
   14001b29a:	lea    rax,[r8+0x110]
   14001b2a1:	cmp    QWORD PTR [rax],0x0
   14001b2a5:	jne    0x14001b280
   14001b2a7:	cmp    rbx,r8
   14001b2aa:	je     0x14001b2c6
   14001b2ac:	lea    rdx,[rip+0x235dd]        # 0x14003e890
   14001b2b3:	lea    rcx,[rip+0x2366e]        # 0x14003e928
   14001b2ba:	mov    r8d,0xbd
   14001b2c0:	call   QWORD PTR [rip+0x21dca]        # 0x14003d090
   14001b2c6:	mov    eax,DWORD PTR [rbx+0x108]
   14001b2cc:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b2d1:	mov    QWORD PTR [rbx+0x110],rdi
   14001b2d8:	add    DWORD PTR [rdi+0x108],eax
   14001b2de:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b2e3:	add    rsp,0x20
   14001b2e7:	pop    rdi
   14001b2e8:	ret    
   14001b2e9:	int3   
   14001b2ea:	int3   
   14001b2eb:	int3   
   14001b2ec:	int3   
   14001b2ed:	int3   
   14001b2ee:	int3   
   14001b2ef:	int3   
   14001b2f0:	mov    DWORD PTR [rcx+0x108],0x1
   14001b2fa:	mov    QWORD PTR [rcx+0x110],0x0
   14001b305:	mov    BYTE PTR [rcx+0x9e],0x0
   14001b30c:	ret    
   14001b30d:	int3   
   14001b30e:	int3   
   14001b30f:	int3   
   14001b310:	cmp    rcx,rdx
   14001b313:	jne    0x14001b319
   14001b315:	mov    rax,rcx
   14001b318:	ret    
   14001b319:	lea    rax,[rcx+0x110]
   14001b320:	cmp    QWORD PTR [rax],0x0
   14001b324:	jne    0x14001b335
   14001b326:	mov    QWORD PTR [rax],rcx
   14001b329:	mov    DWORD PTR [rcx+0x108],0x1
   14001b333:	jmp    0x14001b35c
   14001b335:	mov    r8,QWORD PTR [rax]
   14001b338:	cmp    r8,rcx
   14001b33b:	je     0x14001b35c
   14001b33d:	mov    rcx,QWORD PTR [r8+0x110]
   14001b344:	test   rcx,rcx
   14001b347:	je     0x14001b34c
   14001b349:	mov    QWORD PTR [rax],rcx
   14001b34c:	mov    rcx,QWORD PTR [rax]
   14001b34f:	lea    rax,[rcx+0x110]
   14001b356:	cmp    QWORD PTR [rax],0x0
   14001b35a:	jne    0x14001b335
   14001b35c:	lea    rax,[rdx+0x110]
   14001b363:	cmp    QWORD PTR [rax],0x0
   14001b367:	jne    0x14001b378
   14001b369:	mov    QWORD PTR [rax],rdx
   14001b36c:	mov    DWORD PTR [rdx+0x108],0x1
   14001b376:	jmp    0x14001b39f
   14001b378:	mov    r8,QWORD PTR [rax]
   14001b37b:	cmp    r8,rdx
   14001b37e:	je     0x14001b39f
   14001b380:	mov    rdx,QWORD PTR [r8+0x110]
   14001b387:	test   rdx,rdx
   14001b38a:	je     0x14001b38f
   14001b38c:	mov    QWORD PTR [rax],rdx
   14001b38f:	mov    rdx,QWORD PTR [rax]
   14001b392:	lea    rax,[rdx+0x110]
   14001b399:	cmp    QWORD PTR [rax],0x0
   14001b39d:	jne    0x14001b378
   14001b39f:	mov    eax,DWORD PTR [rdx+0x18]
   14001b3a2:	cmp    DWORD PTR [rcx+0x18],eax
   14001b3a5:	jle    0x14001b3be
   14001b3a7:	mov    eax,DWORD PTR [rcx+0x108]
   14001b3ad:	mov    QWORD PTR [rcx+0x110],rdx
   14001b3b4:	add    DWORD PTR [rdx+0x108],eax
   14001b3ba:	mov    rax,rdx
   14001b3bd:	ret    
   14001b3be:	mov    eax,DWORD PTR [rdx+0x108]
   14001b3c4:	mov    QWORD PTR [rdx+0x110],rcx
   14001b3cb:	mov    rdx,rcx
   14001b3ce:	add    DWORD PTR [rcx+0x108],eax
   14001b3d4:	mov    rax,rcx
   14001b3d7:	ret    
   14001b3d8:	int3   
   14001b3d9:	int3   
   14001b3da:	int3   
   14001b3db:	int3   
   14001b3dc:	int3   
   14001b3dd:	int3   
   14001b3de:	int3   
   14001b3df:	int3   
   14001b3e0:	mov    QWORD PTR [rsp+0x8],rcx
   14001b3e5:	add    DWORD PTR [rsp+0x8],edx
   14001b3e9:	shr    rdx,0x20
   14001b3ed:	add    DWORD PTR [rsp+0xc],edx
   14001b3f1:	mov    rax,QWORD PTR [rsp+0x8]
   14001b3f6:	ret    
   14001b3f7:	int3   
   14001b3f8:	int3   
   14001b3f9:	int3   
   14001b3fa:	int3   
   14001b3fb:	int3   
   14001b3fc:	int3   
   14001b3fd:	int3   
   14001b3fe:	int3   
   14001b3ff:	int3   
   14001b400:	mov    r8,rcx
   14001b403:	mov    rax,rdx
   14001b406:	sub    ecx,edx
   14001b408:	shr    r8,0x20
   14001b40c:	shr    rax,0x20
   14001b410:	sub    r8d,eax
   14001b413:	movd   xmm1,ecx
   14001b417:	movd   xmm0,r8d
   14001b41c:	cvtdq2pd xmm1,xmm1
   14001b420:	cvtdq2pd xmm0,xmm0
   14001b424:	jmp    0x14003b8a8
   14001b429:	int3   
   14001b42a:	int3   
   14001b42b:	int3   
   14001b42c:	int3   
   14001b42d:	int3   
   14001b42e:	int3   
   14001b42f:	int3   
   14001b430:	mov    eax,DWORD PTR [rsp+0x28]
   14001b434:	mov    DWORD PTR [rcx],edx
   14001b436:	mov    DWORD PTR [rcx+0x4],r8d
   14001b43a:	mov    DWORD PTR [rcx+0xc],eax
   14001b43d:	mov    rax,rcx
   14001b440:	mov    DWORD PTR [rcx+0x8],r9d
   14001b444:	ret    
   14001b445:	int3   
   14001b446:	int3   
   14001b447:	int3   
   14001b448:	int3   
   14001b449:	int3   
   14001b44a:	int3   
   14001b44b:	int3   
   14001b44c:	int3   
   14001b44d:	int3   
   14001b44e:	int3   
   14001b44f:	int3   
   14001b450:	mov    QWORD PTR [rsp+0x20],rbx
   14001b455:	push   r12
   14001b457:	push   r14
   14001b459:	push   r15
   14001b45b:	sub    rsp,0x20
   14001b45f:	xor    r12d,r12d
   14001b462:	mov    rbx,r8
   14001b465:	mov    r15,rdx
   14001b468:	mov    r14,rcx
   14001b46b:	mov    eax,0x1
   14001b470:	test   rdx,rdx
   14001b473:	je     0x14001b498
   14001b475:	mov    r9,QWORD PTR [rdx]
   14001b478:	test   r9,r9
   14001b47b:	je     0x14001b498
   14001b47d:	mov    r8,rdx
   14001b480:	cmp    BYTE PTR [r9],r12b
   14001b483:	mov    r9,QWORD PTR [r8+0x8]
   14001b487:	lea    r8,[r8+0x8]
   14001b48b:	cmove  eax,r12d
   14001b48f:	test   r9,r9
   14001b492:	jne    0x14001b480
   14001b494:	test   eax,eax
   14001b496:	je     0x14001b4c7
   14001b498:	mov    rax,QWORD PTR [rbx]
   14001b49b:	test   rax,rax
   14001b49e:	je     0x14001b4c7
   14001b4a0:	mov    rdx,r14
   14001b4a3:	mov    rcx,rax
   14001b4a6:	call   QWORD PTR [rip+0x21c94]        # 0x14003d140
   14001b4ac:	mov    rdx,r14
   14001b4af:	mov    ecx,0xa
   14001b4b4:	call   QWORD PTR [rip+0x21c7e]        # 0x14003d138
   14001b4ba:	mov    rax,QWORD PTR [rbx+0x8]
   14001b4be:	lea    rbx,[rbx+0x8]
   14001b4c2:	test   rax,rax
   14001b4c5:	jne    0x14001b4a0
   14001b4c7:	test   r15,r15
   14001b4ca:	je     0x14001b5ef
   14001b4d0:	mov    rbx,QWORD PTR [r15]
   14001b4d3:	test   rbx,rbx
   14001b4d6:	je     0x14001b5ef
   14001b4dc:	mov    QWORD PTR [rsp+0x40],rbp
   14001b4e1:	mov    QWORD PTR [rsp+0x48],rsi
   14001b4e6:	mov    QWORD PTR [rsp+0x50],rdi
   14001b4eb:	nop    DWORD PTR [rax+rax*1+0x0]
   14001b4f0:	cmp    BYTE PTR [rbx],r12b
   14001b4f3:	je     0x14001b5b5
   14001b4f9:	lea    rdx,[rip+0x230ac]        # 0x14003e5ac
   14001b500:	mov    rcx,rbx
   14001b503:	call   QWORD PTR [rip+0x21bcf]        # 0x14003d0d8
   14001b509:	mov    rbp,rax
   14001b50c:	test   rax,rax
   14001b50f:	je     0x14001b5b5
   14001b515:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001b520:	mov    r8,QWORD PTR [rip+0x382f1]        # 0x140053818
   14001b527:	mov    edi,r12d
   14001b52a:	mov    rsi,r12
   14001b52d:	nop    DWORD PTR [rax]
   14001b530:	mov    ebx,DWORD PTR [rip+0x382d6]        # 0x14005380c
   14001b536:	mov    edx,ebx
   14001b538:	sub    edx,edi
   14001b53a:	cmp    edx,0x200
   14001b540:	jge    0x14001b564
   14001b542:	add    ebx,0x200
   14001b548:	mov    rcx,r8
   14001b54b:	movsxd rdx,ebx
   14001b54e:	mov    DWORD PTR [rip+0x382b8],ebx        # 0x14005380c
   14001b554:	call   QWORD PTR [rip+0x21b4e]        # 0x14003d0a8
   14001b55a:	mov    r8,rax
   14001b55d:	mov    QWORD PTR [rip+0x382b4],rax        # 0x140053818
   14001b564:	lea    rcx,[rsi+r8*1]
   14001b568:	sub    ebx,edi
   14001b56a:	mov    r8,rbp
   14001b56d:	mov    edx,ebx
   14001b56f:	call   QWORD PTR [rip+0x21bbb]        # 0x14003d130
   14001b575:	mov    r8,QWORD PTR [rip+0x3829c]        # 0x140053818
   14001b57c:	test   rax,rax
   14001b57f:	je     0x14001b59b
   14001b581:	or     rcx,0xffffffffffffffff
   14001b585:	inc    rcx
   14001b588:	cmp    BYTE PTR [rax+rcx*1],r12b
   14001b58c:	jne    0x14001b585
   14001b58e:	add    edi,ecx
   14001b590:	movsxd rsi,edi
   14001b593:	cmp    BYTE PTR [rsi+r8*1-0x1],0xa
   14001b599:	jne    0x14001b530
   14001b59b:	test   edi,edi
   14001b59d:	jle    0x14001b5cf
   14001b59f:	test   r8,r8
   14001b5a2:	je     0x14001b5cf
   14001b5a4:	mov    rdx,r14
   14001b5a7:	mov    rcx,r8
   14001b5aa:	call   QWORD PTR [rip+0x21b90]        # 0x14003d140
   14001b5b0:	jmp    0x14001b520
   14001b5b5:	call   QWORD PTR [rip+0x21d15]        # 0x14003d2d0
   14001b5bb:	lea    rdx,[rip+0x233b6]        # 0x14003e978
   14001b5c2:	mov    r8,rbx
   14001b5c5:	lea    rcx,[rax+0x60]
   14001b5c9:	call   QWORD PTR [rip+0x21cf1]        # 0x14003d2c0
   14001b5cf:	mov    rbx,QWORD PTR [r15+0x8]
   14001b5d3:	add    r15,0x8
   14001b5d7:	test   rbx,rbx
   14001b5da:	jne    0x14001b4f0
   14001b5e0:	mov    rdi,QWORD PTR [rsp+0x50]
   14001b5e5:	mov    rsi,QWORD PTR [rsp+0x48]
   14001b5ea:	mov    rbp,QWORD PTR [rsp+0x40]
   14001b5ef:	mov    rbx,QWORD PTR [rsp+0x58]
   14001b5f4:	add    rsp,0x20
   14001b5f8:	pop    r15
   14001b5fa:	pop    r14
   14001b5fc:	pop    r12
   14001b5fe:	ret    
   14001b5ff:	int3   
   14001b600:	mov    QWORD PTR [rsp+0x18],rbx
   14001b605:	mov    QWORD PTR [rsp+0x20],rbp
   14001b60a:	push   rsi
   14001b60b:	push   rdi
   14001b60c:	push   r14
   14001b60e:	sub    rsp,0x30
   14001b612:	mov    rax,QWORD PTR [rip+0x39d4f]        # 0x140055368
   14001b619:	mov    QWORD PTR [rsp+0x50],r12
   14001b61e:	mov    rdi,rcx
   14001b621:	mov    QWORD PTR [rsp+0x58],r15
   14001b626:	lea    rsi,[rip+0x22ec7]        # 0x14003e4f4
   14001b62d:	lea    rbp,[rip+0x23214]        # 0x14003e848
   14001b634:	test   rax,rax
   14001b637:	je     0x14001b72c
   14001b63d:	mov    edx,DWORD PTR [rax+0x10]
   14001b640:	call   0x140027720
   14001b645:	test   rax,rax
   14001b648:	je     0x14001b72c
   14001b64e:	cmp    BYTE PTR [rax],0x0
   14001b651:	je     0x14001b72c
   14001b657:	mov    rdx,rdi
   14001b65a:	mov    rcx,rax
   14001b65d:	call   0x14001cb40
   14001b662:	mov    rcx,QWORD PTR [rip+0x39d07]        # 0x140055370
   14001b669:	mov    r12,rax
   14001b66c:	test   rcx,rcx
   14001b66f:	jne    0x14001b676
   14001b671:	mov    r14,rsi
   14001b674:	jmp    0x14001b68b
   14001b676:	mov    edx,DWORD PTR [rcx+0x10]
   14001b679:	mov    rcx,rdi
   14001b67c:	call   0x140027720
   14001b681:	mov    r14,rsi
   14001b684:	cmp    BYTE PTR [rax],0x0
   14001b687:	cmovne r14,rax
   14001b68b:	mov    rax,QWORD PTR [rip+0x39ce6]        # 0x140055378
   14001b692:	test   rax,rax
   14001b695:	jne    0x14001b69c
   14001b697:	mov    r15,rbp
   14001b69a:	jmp    0x14001b6b1
   14001b69c:	mov    edx,DWORD PTR [rax+0x10]
   14001b69f:	mov    rcx,rdi
   14001b6a2:	call   0x140027720
   14001b6a7:	mov    r15,rbp
   14001b6aa:	cmp    BYTE PTR [rax],0x0
   14001b6ad:	cmovne r15,rax
   14001b6b1:	mov    rdx,QWORD PTR [rip+0x39cc8]        # 0x140055380
   14001b6b8:	movsd  xmm3,QWORD PTR [rip+0x21d20]        # 0x14003d3e0
   14001b6c0:	movsd  xmm2,QWORD PTR [rip+0x231a0]        # 0x14003e868
   14001b6c8:	mov    rbx,QWORD PTR [rdi+0x18]
   14001b6cc:	mov    rcx,rdi
   14001b6cf:	call   0x14001c2e0
   14001b6d4:	mov    rax,QWORD PTR [rbx+0x20]
   14001b6d8:	mov    r9,r14
   14001b6db:	mov    r8,r15
   14001b6de:	mov    rcx,r12
   14001b6e1:	mov    QWORD PTR [rsp+0x20],rax
   14001b6e6:	movaps xmm1,xmm0
   14001b6e9:	call   0x14001c400
   14001b6ee:	mov    QWORD PTR [rdi+0x60],rax
   14001b6f2:	mov    rax,QWORD PTR [rdi+0x18]
   14001b6f6:	mov    rcx,QWORD PTR [rax+0x20]
   14001b6fa:	mov    BYTE PTR [rcx+0x91],0x1
   14001b701:	mov    rax,QWORD PTR [rip+0x39c18]        # 0x140055320
   14001b708:	test   rax,rax
   14001b70b:	jne    0x14001b716
   14001b70d:	lea    rax,[rip+0x226cc]        # 0x14003dde0
   14001b714:	jmp    0x14001b721
   14001b716:	mov    edx,DWORD PTR [rax+0x10]
   14001b719:	mov    rcx,rdi
   14001b71c:	call   0x140027720
   14001b721:	mov    rcx,rax
   14001b724:	call   0x14001c4b0
   14001b729:	mov    BYTE PTR [rdi+0x79],al
   14001b72c:	mov    rax,QWORD PTR [rip+0x39bc5]        # 0x1400552f8
   14001b733:	test   rax,rax
   14001b736:	je     0x14001b7f4
   14001b73c:	mov    edx,DWORD PTR [rax+0x10]
   14001b73f:	mov    rcx,rdi
   14001b742:	call   0x140027720
   14001b747:	test   rax,rax
   14001b74a:	je     0x14001b7f4
   14001b750:	cmp    BYTE PTR [rax],0x0
   14001b753:	je     0x14001b7f4
   14001b759:	mov    rdx,rdi
   14001b75c:	mov    rcx,rax
   14001b75f:	call   0x14001cb40
   14001b764:	mov    rcx,QWORD PTR [rip+0x39b6d]        # 0x1400552d8
   14001b76b:	mov    r12,rax
   14001b76e:	test   rcx,rcx
   14001b771:	jne    0x14001b778
   14001b773:	mov    r14,rsi
   14001b776:	jmp    0x14001b78d
   14001b778:	mov    edx,DWORD PTR [rcx+0x10]
   14001b77b:	mov    rcx,rdi
   14001b77e:	call   0x140027720
   14001b783:	mov    r14,rsi
   14001b786:	cmp    BYTE PTR [rax],0x0
   14001b789:	cmovne r14,rax
   14001b78d:	mov    rax,QWORD PTR [rip+0x39b4c]        # 0x1400552e0
   14001b794:	test   rax,rax
   14001b797:	jne    0x14001b79e
   14001b799:	mov    r15,rbp
   14001b79c:	jmp    0x14001b7b3
   14001b79e:	mov    edx,DWORD PTR [rax+0x10]
   14001b7a1:	mov    rcx,rdi
   14001b7a4:	call   0x140027720
   14001b7a9:	mov    r15,rbp
   14001b7ac:	cmp    BYTE PTR [rax],0x0
   14001b7af:	cmovne r15,rax
   14001b7b3:	mov    rdx,QWORD PTR [rip+0x39b2e]        # 0x1400552e8
   14001b7ba:	movsd  xmm3,QWORD PTR [rip+0x21c1e]        # 0x14003d3e0
   14001b7c2:	movsd  xmm2,QWORD PTR [rip+0x231fe]        # 0x14003e9c8
   14001b7ca:	mov    rbx,QWORD PTR [rdi+0x18]
   14001b7ce:	mov    rcx,rdi
   14001b7d1:	call   0x14001c2e0
   14001b7d6:	mov    rax,QWORD PTR [rbx+0x20]
   14001b7da:	mov    r9,r14
   14001b7dd:	mov    r8,r15
   14001b7e0:	mov    rcx,r12
   14001b7e3:	mov    QWORD PTR [rsp+0x20],rax
   14001b7e8:	movaps xmm1,xmm0
   14001b7eb:	call   0x14001c400
   14001b7f0:	mov    QWORD PTR [rdi+0x68],rax
   14001b7f4:	mov    rax,QWORD PTR [rip+0x39af5]        # 0x1400552f0
   14001b7fb:	mov    r15,QWORD PTR [rsp+0x58]
   14001b800:	mov    r12,QWORD PTR [rsp+0x50]
   14001b805:	test   rax,rax
   14001b808:	je     0x14001b8b6
   14001b80e:	mov    edx,DWORD PTR [rax+0x10]
   14001b811:	mov    rcx,rdi
   14001b814:	call   0x140027720
   14001b819:	test   rax,rax
   14001b81c:	je     0x14001b8b6
   14001b822:	cmp    BYTE PTR [rax],0x0
   14001b825:	je     0x14001b8b6
   14001b82b:	mov    rdx,rdi
   14001b82e:	mov    rcx,rax
   14001b831:	call   0x14001cb40
   14001b836:	mov    rcx,QWORD PTR [rip+0x39a9b]        # 0x1400552d8
   14001b83d:	mov    r14,rax
   14001b840:	test   rcx,rcx
   14001b843:	je     0x14001b857
   14001b845:	mov    edx,DWORD PTR [rcx+0x10]
   14001b848:	mov    rcx,rdi
   14001b84b:	call   0x140027720
   14001b850:	cmp    BYTE PTR [rax],0x0
   14001b853:	cmovne rsi,rax
   14001b857:	mov    rax,QWORD PTR [rip+0x39a82]        # 0x1400552e0
   14001b85e:	test   rax,rax
   14001b861:	je     0x14001b875
   14001b863:	mov    edx,DWORD PTR [rax+0x10]
   14001b866:	mov    rcx,rdi
   14001b869:	call   0x140027720
   14001b86e:	cmp    BYTE PTR [rax],0x0
   14001b871:	cmovne rbp,rax
   14001b875:	mov    rdx,QWORD PTR [rip+0x39a6c]        # 0x1400552e8
   14001b87c:	movsd  xmm3,QWORD PTR [rip+0x21b5c]        # 0x14003d3e0
   14001b884:	movsd  xmm2,QWORD PTR [rip+0x2313c]        # 0x14003e9c8
   14001b88c:	mov    rbx,QWORD PTR [rdi+0x18]
   14001b890:	mov    rcx,rdi
   14001b893:	call   0x14001c2e0
   14001b898:	mov    rax,QWORD PTR [rbx+0x20]
   14001b89c:	mov    r9,rsi
   14001b89f:	mov    r8,rbp
   14001b8a2:	mov    rcx,r14
   14001b8a5:	mov    QWORD PTR [rsp+0x20],rax
   14001b8aa:	movaps xmm1,xmm0
   14001b8ad:	call   0x14001c400
   14001b8b2:	mov    QWORD PTR [rdi+0x70],rax
   14001b8b6:	mov    rbx,QWORD PTR [rsp+0x60]
   14001b8bb:	mov    rbp,QWORD PTR [rsp+0x68]
   14001b8c0:	add    rsp,0x30
   14001b8c4:	pop    r14
   14001b8c6:	pop    rdi
   14001b8c7:	pop    rsi
   14001b8c8:	ret    
   14001b8c9:	int3   
   14001b8ca:	int3   
   14001b8cb:	int3   
   14001b8cc:	int3   
   14001b8cd:	int3   
   14001b8ce:	int3   
   14001b8cf:	int3   
   14001b8d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001b8d5:	mov    QWORD PTR [rsp+0x10],rbp
   14001b8da:	mov    QWORD PTR [rsp+0x18],rsi
   14001b8df:	push   rdi
   14001b8e0:	sub    rsp,0x30
   14001b8e4:	mov    rax,QWORD PTR [rip+0x39b5d]        # 0x140055448
   14001b8eb:	mov    rbx,rcx
   14001b8ee:	test   rax,rax
   14001b8f1:	jne    0x14001b8fd
   14001b8f3:	movsd  xmm0,QWORD PTR [rip+0x230c5]        # 0x14003e9c0
   14001b8fb:	jmp    0x14001b92e
   14001b8fd:	mov    edx,DWORD PTR [rax+0x10]
   14001b900:	call   0x140027720
   14001b905:	cmp    BYTE PTR [rax],0x0
   14001b908:	jne    0x14001b914
   14001b90a:	movsd  xmm0,QWORD PTR [rip+0x230ae]        # 0x14003e9c0
   14001b912:	jmp    0x14001b92e
   14001b914:	mov    rcx,rax
   14001b917:	call   QWORD PTR [rip+0x21723]        # 0x14003d040
   14001b91d:	movsd  xmm1,QWORD PTR [rip+0x220d3]        # 0x14003d9f8
   14001b925:	comisd xmm1,xmm0
   14001b929:	jbe    0x14001b92e
   14001b92b:	movaps xmm0,xmm1
   14001b92e:	movsd  QWORD PTR [rbx+0x40],xmm0
   14001b933:	mov    rax,QWORD PTR [rip+0x39b16]        # 0x140055450
   14001b93a:	test   rax,rax
   14001b93d:	jne    0x14001b949
   14001b93f:	movsd  xmm0,QWORD PTR [rip+0x21a91]        # 0x14003d3d8
   14001b947:	jmp    0x14001b97d
   14001b949:	mov    edx,DWORD PTR [rax+0x10]
   14001b94c:	mov    rcx,rbx
   14001b94f:	call   0x140027720
   14001b954:	cmp    BYTE PTR [rax],0x0
   14001b957:	jne    0x14001b963
   14001b959:	movsd  xmm0,QWORD PTR [rip+0x21a77]        # 0x14003d3d8
   14001b961:	jmp    0x14001b97d
   14001b963:	mov    rcx,rax
   14001b966:	call   QWORD PTR [rip+0x216d4]        # 0x14003d040
   14001b96c:	movsd  xmm1,QWORD PTR [rip+0x21a5c]        # 0x14003d3d0
   14001b974:	comisd xmm1,xmm0
   14001b978:	jbe    0x14001b97d
   14001b97a:	movaps xmm0,xmm1
   14001b97d:	movsd  QWORD PTR [rbx+0x48],xmm0
   14001b982:	mov    rax,QWORD PTR [rip+0x39a87]        # 0x140055410
   14001b989:	test   rax,rax
   14001b98c:	jne    0x14001b997
   14001b98e:	lea    rax,[rip+0x22c13]        # 0x14003e5a8
   14001b995:	jmp    0x14001b9a2
   14001b997:	mov    edx,DWORD PTR [rax+0x10]
   14001b99a:	mov    rcx,rbx
   14001b99d:	call   0x140027720
   14001b9a2:	mov    rdx,rbx
   14001b9a5:	mov    rcx,rax
   14001b9a8:	call   0x14001ceb0
   14001b9ad:	mov    rcx,QWORD PTR [rip+0x39a64]        # 0x140055418
   14001b9b4:	mov    rbp,rax
   14001b9b7:	test   rcx,rcx
   14001b9ba:	jne    0x14001b9c5
   14001b9bc:	lea    rdi,[rip+0x22b31]        # 0x14003e4f4
   14001b9c3:	jmp    0x14001b9de
   14001b9c5:	mov    edx,DWORD PTR [rcx+0x10]
   14001b9c8:	mov    rcx,rbx
   14001b9cb:	call   0x140027720
   14001b9d0:	lea    rdi,[rip+0x22b1d]        # 0x14003e4f4
   14001b9d7:	cmp    BYTE PTR [rax],0x0
   14001b9da:	cmovne rdi,rax
   14001b9de:	mov    rax,QWORD PTR [rip+0x39a3b]        # 0x140055420
   14001b9e5:	test   rax,rax
   14001b9e8:	jne    0x14001b9f3
   14001b9ea:	lea    rsi,[rip+0x22e57]        # 0x14003e848
   14001b9f1:	jmp    0x14001ba0c
   14001b9f3:	mov    edx,DWORD PTR [rax+0x10]
   14001b9f6:	mov    rcx,rbx
   14001b9f9:	call   0x140027720
   14001b9fe:	lea    rsi,[rip+0x22e43]        # 0x14003e848
   14001ba05:	cmp    BYTE PTR [rax],0x0
   14001ba08:	cmovne rsi,rax
   14001ba0c:	mov    rax,QWORD PTR [rip+0x39a15]        # 0x140055428
   14001ba13:	test   rax,rax
   14001ba16:	jne    0x14001ba22
   14001ba18:	movsd  xmm0,QWORD PTR [rip+0x22e48]        # 0x14003e868
   14001ba20:	jmp    0x14001ba56
   14001ba22:	mov    edx,DWORD PTR [rax+0x10]
   14001ba25:	mov    rcx,rbx
   14001ba28:	call   0x140027720
   14001ba2d:	cmp    BYTE PTR [rax],0x0
   14001ba30:	jne    0x14001ba3c
   14001ba32:	movsd  xmm0,QWORD PTR [rip+0x22e2e]        # 0x14003e868
   14001ba3a:	jmp    0x14001ba56
   14001ba3c:	mov    rcx,rax
   14001ba3f:	call   QWORD PTR [rip+0x215fb]        # 0x14003d040
   14001ba45:	movsd  xmm1,QWORD PTR [rip+0x21993]        # 0x14003d3e0
   14001ba4d:	comisd xmm1,xmm0
   14001ba51:	jbe    0x14001ba56
   14001ba53:	movaps xmm0,xmm1
   14001ba56:	mov    rax,QWORD PTR [rbx+0x20]
   14001ba5a:	movaps xmm1,xmm0
   14001ba5d:	mov    r9,rdi
   14001ba60:	mov    r8,rsi
   14001ba63:	mov    rcx,rbp
   14001ba66:	mov    QWORD PTR [rsp+0x20],rax
   14001ba6b:	call   0x14001c400
   14001ba70:	mov    QWORD PTR [rbx+0x60],rax
   14001ba74:	mov    rax,QWORD PTR [rip+0x399c5]        # 0x140055440
   14001ba7b:	test   rax,rax
   14001ba7e:	jne    0x14001ba89
   14001ba80:	lea    rcx,[rip+0x22f31]        # 0x14003e9b8
   14001ba87:	jmp    0x14001baa2
   14001ba89:	mov    edx,DWORD PTR [rax+0x10]
   14001ba8c:	mov    rcx,rbx
   14001ba8f:	call   0x140027720
   14001ba94:	lea    rcx,[rip+0x22f1d]        # 0x14003e9b8
   14001ba9b:	cmp    BYTE PTR [rax],0x0
   14001ba9e:	cmovne rcx,rax
   14001baa2:	call   0x1400224b0
   14001baa7:	mov    QWORD PTR [rbx+0x28],rax
   14001baab:	mov    rax,QWORD PTR [rip+0x3994e]        # 0x140055400
   14001bab2:	test   rax,rax
   14001bab5:	jne    0x14001babb
   14001bab7:	xor    ecx,ecx
   14001bab9:	jmp    0x14001badd
   14001babb:	mov    edx,DWORD PTR [rax+0x10]
   14001babe:	mov    rcx,rbx
   14001bac1:	call   0x140027720
   14001bac6:	cmp    BYTE PTR [rax],0x0
   14001bac9:	je     0x14001bab7
   14001bacb:	mov    rcx,rax
   14001bace:	call   QWORD PTR [rip+0x215b4]        # 0x14003d088
   14001bad4:	xor    ecx,ecx
   14001bad6:	test   eax,eax
   14001bad8:	cmovs  eax,ecx
   14001badb:	mov    ecx,eax
   14001badd:	mov    rax,QWORD PTR [rbx+0x28]
   14001bae1:	mov    BYTE PTR [rbx+0x99],cl
   14001bae7:	mov    rcx,rbx
   14001baea:	mov    rbx,QWORD PTR [rsp+0x40]
   14001baef:	mov    rbp,QWORD PTR [rsp+0x48]
   14001baf4:	mov    rsi,QWORD PTR [rsp+0x50]
   14001baf9:	add    rsp,0x30
   14001bafd:	pop    rdi
   14001bafe:	rex.W jmp QWORD PTR [rax+0x8]
   14001bb02:	int3   
   14001bb03:	int3   
   14001bb04:	int3   
   14001bb05:	int3   
   14001bb06:	int3   
   14001bb07:	int3   
   14001bb08:	int3   
   14001bb09:	int3   
   14001bb0a:	int3   
   14001bb0b:	int3   
   14001bb0c:	int3   
   14001bb0d:	int3   
   14001bb0e:	int3   
   14001bb0f:	int3   
   14001bb10:	sub    rsp,0x28
   14001bb14:	mov    rax,QWORD PTR [rcx+0x88]
   14001bb1b:	xorps  xmm3,xmm3
   14001bb1e:	movups xmm0,XMMWORD PTR [rax]
   14001bb21:	movups XMMWORD PTR [rsp],xmm0
   14001bb25:	movss  xmm0,DWORD PTR [rsp+0x8]
   14001bb2b:	movss  xmm2,DWORD PTR [rsp+0x4]
   14001bb31:	movss  xmm1,DWORD PTR [rsp+0xc]
   14001bb37:	movss  DWORD PTR [rsp+0x18],xmm0
   14001bb3d:	movss  xmm0,DWORD PTR [rsp]
   14001bb42:	unpcklps xmm0,xmm2
   14001bb45:	movsd  xmm2,QWORD PTR [rip+0x2193b]        # 0x14003d488
   14001bb4d:	movss  DWORD PTR [rsp+0x1c],xmm1
   14001bb53:	movsd  xmm1,QWORD PTR [rip+0x2187d]        # 0x14003d3d8
   14001bb5b:	mulsd  xmm0,xmm2
   14001bb5f:	comisd xmm0,xmm3
   14001bb63:	jb     0x14001bb6b
   14001bb65:	addsd  xmm0,xmm1
   14001bb69:	jmp    0x14001bb6f
   14001bb6b:	subsd  xmm0,xmm1
   14001bb6f:	cvttsd2si eax,xmm0
   14001bb73:	movsd  xmm0,QWORD PTR [rsp+0x18]
   14001bb79:	mulsd  xmm0,xmm2
   14001bb7d:	comisd xmm0,xmm3
   14001bb81:	mov    DWORD PTR [rsp+0x30],eax
   14001bb85:	jb     0x14001bb9d
   14001bb87:	addsd  xmm0,xmm1
   14001bb8b:	cvttsd2si eax,xmm0
   14001bb8f:	mov    DWORD PTR [rsp+0x34],eax
   14001bb93:	mov    rax,QWORD PTR [rsp+0x30]
   14001bb98:	add    rsp,0x28
   14001bb9c:	ret    
   14001bb9d:	subsd  xmm0,xmm1
   14001bba1:	cvttsd2si eax,xmm0
   14001bba5:	mov    DWORD PTR [rsp+0x34],eax
   14001bba9:	mov    rax,QWORD PTR [rsp+0x30]
   14001bbae:	add    rsp,0x28
   14001bbb2:	ret    
   14001bbb3:	int3   
   14001bbb4:	int3   
   14001bbb5:	int3   
   14001bbb6:	int3   
   14001bbb7:	int3   
   14001bbb8:	int3   
   14001bbb9:	int3   
   14001bbba:	int3   
   14001bbbb:	int3   
   14001bbbc:	int3   
   14001bbbd:	int3   
   14001bbbe:	int3   
   14001bbbf:	int3   
   14001bbc0:	movsd  xmm0,QWORD PTR [rcx]
   14001bbc4:	movsd  xmm2,QWORD PTR [rip+0x218bc]        # 0x14003d488
   14001bbcc:	movsd  xmm1,QWORD PTR [rip+0x21804]        # 0x14003d3d8
   14001bbd4:	xorps  xmm3,xmm3
   14001bbd7:	mulsd  xmm0,xmm2
   14001bbdb:	comisd xmm0,xmm3
   14001bbdf:	jb     0x14001bbe7
   14001bbe1:	addsd  xmm0,xmm1
   14001bbe5:	jmp    0x14001bbeb
   14001bbe7:	subsd  xmm0,xmm1
   14001bbeb:	cvttsd2si eax,xmm0
   14001bbef:	movsd  xmm0,QWORD PTR [rcx+0x8]
   14001bbf4:	mulsd  xmm0,xmm2
   14001bbf8:	comisd xmm0,xmm3
   14001bbfc:	mov    DWORD PTR [rsp+0x8],eax
   14001bc00:	jb     0x14001bc14
   14001bc02:	addsd  xmm0,xmm1
   14001bc06:	cvttsd2si eax,xmm0
   14001bc0a:	mov    DWORD PTR [rsp+0xc],eax
   14001bc0e:	mov    rax,QWORD PTR [rsp+0x8]
   14001bc13:	ret    
   14001bc14:	subsd  xmm0,xmm1
   14001bc18:	cvttsd2si eax,xmm0
   14001bc1c:	mov    DWORD PTR [rsp+0xc],eax
   14001bc20:	mov    rax,QWORD PTR [rsp+0x8]
   14001bc25:	ret    
   14001bc26:	int3   
   14001bc27:	int3   
   14001bc28:	int3   
   14001bc29:	int3   
   14001bc2a:	int3   
   14001bc2b:	int3   
   14001bc2c:	int3   
   14001bc2d:	int3   
   14001bc2e:	int3   
   14001bc2f:	int3   
   14001bc30:	movd   xmm0,edx
   14001bc34:	shr    rdx,0x20
   14001bc38:	mov    rax,rcx
   14001bc3b:	cvtdq2pd xmm0,xmm0
   14001bc3f:	divsd  xmm0,QWORD PTR [rip+0x21841]        # 0x14003d488
   14001bc47:	movsd  QWORD PTR [rcx],xmm0
   14001bc4b:	movd   xmm0,edx
   14001bc4f:	cvtdq2pd xmm0,xmm0
   14001bc53:	divsd  xmm0,QWORD PTR [rip+0x2182d]        # 0x14003d488
   14001bc5b:	movsd  QWORD PTR [rcx+0x8],xmm0
   14001bc60:	ret    
   14001bc61:	int3   
   14001bc62:	int3   
   14001bc63:	int3   
   14001bc64:	int3   
   14001bc65:	int3   
   14001bc66:	int3   
   14001bc67:	int3   
   14001bc68:	int3   
   14001bc69:	int3   
   14001bc6a:	int3   
   14001bc6b:	int3   
   14001bc6c:	int3   
   14001bc6d:	int3   
   14001bc6e:	int3   
   14001bc6f:	int3   
   14001bc70:	mov    rax,rcx
   14001bc73:	mov    rcx,QWORD PTR [rcx+0x10]
   14001bc77:	cmp    rcx,QWORD PTR [rax+0x18]
   14001bc7b:	jne    0x14001bc80
   14001bc7d:	xor    eax,eax
   14001bc7f:	ret    
   14001bc80:	mov    rdx,QWORD PTR [rcx]
   14001bc83:	add    rcx,0x8
   14001bc87:	mov    QWORD PTR [rax+0x10],rcx
   14001bc8b:	cmp    rcx,QWORD PTR [rax+0x8]
   14001bc8f:	jb     0x14001bc98
   14001bc91:	mov    rcx,QWORD PTR [rax]
   14001bc94:	mov    QWORD PTR [rax+0x10],rcx
   14001bc98:	mov    rax,rdx
   14001bc9b:	ret    
   14001bc9c:	int3   
   14001bc9d:	int3   
   14001bc9e:	int3   
   14001bc9f:	int3   
   14001bca0:	movsd  xmm1,QWORD PTR [rcx]
   14001bca4:	movsd  xmm0,QWORD PTR [rcx+0x8]
   14001bca9:	subsd  xmm0,QWORD PTR [rdx+0x8]
   14001bcae:	subsd  xmm1,QWORD PTR [rdx]
   14001bcb2:	mulsd  xmm0,xmm0
   14001bcb6:	mulsd  xmm1,xmm1
   14001bcba:	addsd  xmm0,xmm1
   14001bcbe:	jmp    0x14003b8ae
   14001bcc3:	int3   
   14001bcc4:	int3   
   14001bcc5:	int3   
   14001bcc6:	int3   
   14001bcc7:	int3   
   14001bcc8:	int3   
   14001bcc9:	int3   
   14001bcca:	int3   
   14001bccb:	int3   
   14001bccc:	int3   
   14001bccd:	int3   
   14001bcce:	int3   
   14001bccf:	int3   
   14001bcd0:	mov    rax,rsp
   14001bcd3:	mov    QWORD PTR [rax+0x8],rcx
   14001bcd7:	push   rbp
   14001bcd8:	push   rbx
   14001bcd9:	lea    rbp,[rax-0x68]
   14001bcdd:	sub    rsp,0x158
   14001bce4:	mov    r8d,DWORD PTR [rcx+0x8]
   14001bce8:	movaps XMMWORD PTR [rax-0x48],xmm6
   14001bcec:	movsd  xmm6,QWORD PTR [rip+0x22cdc]        # 0x14003e9d0
   14001bcf4:	movaps XMMWORD PTR [rax-0x58],xmm7
   14001bcf8:	movaps XMMWORD PTR [rax-0x68],xmm8
   14001bcfd:	movaps XMMWORD PTR [rax-0x78],xmm9
   14001bd02:	xor    ebx,ebx
   14001bd04:	mov    DWORD PTR [rbp+0x80],r8d
   14001bd0b:	movaps XMMWORD PTR [rax-0x88],xmm10
   14001bd13:	movaps XMMWORD PTR [rax-0x98],xmm11
   14001bd1b:	movaps XMMWORD PTR [rax-0xa8],xmm12
   14001bd23:	movaps XMMWORD PTR [rax-0xb8],xmm13
   14001bd2b:	movaps XMMWORD PTR [rax-0xc8],xmm14
   14001bd33:	movd   xmm0,edx
   14001bd37:	shr    rdx,0x20
   14001bd3b:	cvtdq2pd xmm0,xmm0
   14001bd3f:	movsd  QWORD PTR [rsp+0x30],xmm0
   14001bd45:	movss  xmm12,DWORD PTR [rsp+0x34]
   14001bd4c:	movss  xmm11,DWORD PTR [rsp+0x30]
   14001bd53:	movaps XMMWORD PTR [rax-0xd8],xmm15
   14001bd5b:	movd   xmm0,edx
   14001bd5f:	mov    QWORD PTR [rax+0x10],rsi
   14001bd63:	or     esi,0xffffffff
   14001bd66:	mov    QWORD PTR [rax-0x28],r13
   14001bd6a:	mov    QWORD PTR [rax-0x30],r14
   14001bd6e:	mov    r13d,esi
   14001bd71:	mov    r14d,ebx
   14001bd74:	cvtdq2pd xmm0,xmm0
   14001bd78:	movsd  QWORD PTR [rsp+0x38],xmm0
   14001bd7e:	movss  xmm14,DWORD PTR [rsp+0x3c]
   14001bd85:	movss  xmm13,DWORD PTR [rsp+0x38]
   14001bd8c:	test   r8d,r8d
   14001bd8f:	jle    0x14001bec7
   14001bd95:	mov    QWORD PTR [rax-0x18],rdi
   14001bd99:	mov    QWORD PTR [rax-0x20],r12
   14001bd9d:	mov    r12,QWORD PTR [rcx]
   14001bda0:	mov    QWORD PTR [rax-0x38],r15
   14001bda4:	nop    DWORD PTR [rax+0x0]
   14001bda8:	nop    DWORD PTR [rax+rax*1+0x0]
   14001bdb0:	movups xmm0,XMMWORD PTR [r12]
   14001bdb5:	movups xmm1,XMMWORD PTR [r12+0x10]
   14001bdbb:	movups xmm2,xmm0
   14001bdbe:	movups XMMWORD PTR [rsp+0x50],xmm0
   14001bdc3:	movsd  xmm0,QWORD PTR [r12+0x20]
   14001bdca:	psrldq xmm2,0x8
   14001bdcf:	movsd  QWORD PTR [rsp+0x70],xmm0
   14001bdd5:	movups XMMWORD PTR [rsp+0x60],xmm1
   14001bdda:	movd   r15d,xmm2
   14001bddf:	test   r15d,r15d
   14001bde2:	jle    0x14001be9a
   14001bde8:	mov    rdi,QWORD PTR [rsp+0x50]
   14001bded:	movss  DWORD PTR [rsp+0x30],xmm11
   14001bdf4:	movss  DWORD PTR [rsp+0x34],xmm12
   14001bdfb:	movsd  xmm8,QWORD PTR [rsp+0x30]
   14001be02:	movss  DWORD PTR [rsp+0x38],xmm13
   14001be09:	movss  DWORD PTR [rsp+0x3c],xmm14
   14001be10:	movsd  xmm7,QWORD PTR [rsp+0x38]
   14001be16:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001be20:	movd   xmm1,DWORD PTR [rdi+0x4]
   14001be25:	movd   xmm0,DWORD PTR [rdi]
   14001be29:	cvtdq2pd xmm0,xmm0
   14001be2d:	cvtdq2pd xmm1,xmm1
   14001be31:	movsd  QWORD PTR [rsp+0x40],xmm0
   14001be37:	movss  xmm0,DWORD PTR [rsp+0x44]
   14001be3d:	movss  xmm2,DWORD PTR [rsp+0x40]
   14001be43:	unpcklps xmm2,xmm0
   14001be46:	movsd  QWORD PTR [rsp+0x48],xmm1
   14001be4c:	movss  xmm1,DWORD PTR [rsp+0x4c]
   14001be52:	movss  xmm0,DWORD PTR [rsp+0x48]
   14001be58:	unpcklps xmm0,xmm1
   14001be5b:	subsd  xmm0,xmm7
   14001be5f:	subsd  xmm2,xmm8
   14001be64:	mulsd  xmm0,xmm0
   14001be68:	mulsd  xmm2,xmm2
   14001be6c:	addsd  xmm0,xmm2
   14001be70:	call   0x14003b8ae
   14001be75:	cmp    esi,0xffffffff
   14001be78:	je     0x14001be80
   14001be7a:	comisd xmm6,xmm0
   14001be7e:	jbe    0x14001be88
   14001be80:	mov    r13d,r14d
   14001be83:	mov    esi,ebx
   14001be85:	movaps xmm6,xmm0
   14001be88:	inc    ebx
   14001be8a:	add    rdi,0x8
   14001be8e:	cmp    ebx,r15d
   14001be91:	jl     0x14001be20
   14001be93:	mov    r8d,DWORD PTR [rbp+0x80]
   14001be9a:	inc    r14d
   14001be9d:	add    r12,0x28
   14001bea1:	mov    ebx,0x0
   14001bea6:	cmp    r14d,r8d
   14001bea9:	jl     0x14001bdb0
   14001beaf:	mov    r15,QWORD PTR [rsp+0x130]
   14001beb7:	mov    r12,QWORD PTR [rsp+0x148]
   14001bebf:	mov    rdi,QWORD PTR [rsp+0x150]
   14001bec7:	mov    r14,QWORD PTR [rsp+0x138]
   14001becf:	movsxd rax,r13d
   14001bed2:	mov    r13,QWORD PTR [rsp+0x140]
   14001beda:	lea    rcx,[rax+rax*4]
   14001bede:	mov    rax,QWORD PTR [rbp+0x70]
   14001bee2:	mov    rax,QWORD PTR [rax]
   14001bee5:	movups xmm0,XMMWORD PTR [rax+rcx*8]
   14001bee9:	movups xmm1,XMMWORD PTR [rax+rcx*8+0x10]
   14001beee:	movups XMMWORD PTR [rsp+0x50],xmm0
   14001bef3:	movsd  xmm0,QWORD PTR [rax+rcx*8+0x20]
   14001bef9:	movups XMMWORD PTR [rsp+0x60],xmm1
   14001befe:	mov    eax,0x55555556
   14001bf03:	imul   esi
   14001bf05:	mov    rsi,QWORD PTR [rsp+0x178]
   14001bf0d:	mov    eax,edx
   14001bf0f:	shr    eax,0x1f
   14001bf12:	add    edx,eax
   14001bf14:	movsd  QWORD PTR [rsp+0x70],xmm0
   14001bf1a:	cmp    edx,r8d
   14001bf1d:	jl     0x14001bf21
   14001bf1f:	dec    edx
   14001bf21:	mov    rax,QWORD PTR [rsp+0x50]
   14001bf26:	movsd  xmm15,QWORD PTR [rip+0x214b1]        # 0x14003d3e0
   14001bf2f:	movsxd rcx,edx
   14001bf32:	xorps  xmm9,xmm9
   14001bf36:	movaps xmm10,xmm15
   14001bf3a:	movd   xmm1,DWORD PTR [rax+rcx*8+0xc]
   14001bf40:	movd   xmm3,DWORD PTR [rax+rcx*8]
   14001bf45:	movd   xmm2,DWORD PTR [rax+rcx*8+0x4]
   14001bf4b:	cvtdq2pd xmm1,xmm1
   14001bf4f:	cvtdq2pd xmm2,xmm2
   14001bf53:	cvtdq2pd xmm3,xmm3
   14001bf57:	movd   xmm0,DWORD PTR [rax+rcx*8+0x8]
   14001bf5d:	movd   xmm7,DWORD PTR [rax+rcx*8+0x18]
   14001bf63:	movd   xmm6,DWORD PTR [rax+rcx*8+0x1c]
   14001bf69:	movsd  QWORD PTR [rsp+0x68],xmm1
   14001bf6f:	cvtdq2pd xmm0,xmm0
   14001bf73:	movsd  QWORD PTR [rsp+0x58],xmm2
   14001bf79:	movd   xmm1,DWORD PTR [rax+rcx*8+0x14]
   14001bf7f:	cvtdq2pd xmm1,xmm1
   14001bf83:	movsd  QWORD PTR [rsp+0x60],xmm0
   14001bf89:	movd   xmm0,DWORD PTR [rax+rcx*8+0x10]
   14001bf8f:	movsd  QWORD PTR [rsp+0x78],xmm1
   14001bf95:	movsd  QWORD PTR [rsp+0x50],xmm3
   14001bf9b:	cvtdq2pd xmm0,xmm0
   14001bf9f:	movss  xmm1,xmm11
   14001bfa4:	movsd  QWORD PTR [rsp+0x70],xmm0
   14001bfaa:	cvtdq2pd xmm7,xmm7
   14001bfae:	unpcklps xmm1,xmm12
   14001bfb2:	subsd  xmm3,xmm1
   14001bfb6:	movss  xmm1,xmm13
   14001bfbb:	cvtdq2pd xmm6,xmm6
   14001bfbf:	unpcklps xmm1,xmm14
   14001bfc3:	mulsd  xmm3,xmm3
   14001bfc7:	subsd  xmm2,xmm1
   14001bfcb:	movsd  QWORD PTR [rbp-0x80],xmm7
   14001bfd0:	movsd  QWORD PTR [rbp-0x78],xmm6
   14001bfd5:	mulsd  xmm2,xmm2
   14001bfd9:	addsd  xmm2,xmm3
   14001bfdd:	movaps xmm0,xmm2
   14001bfe0:	call   0x14003b8ae
   14001bfe5:	movss  xmm1,xmm11
   14001bfea:	unpcklps xmm1,xmm12
   14001bfee:	movaps xmm8,xmm0
   14001bff2:	subsd  xmm7,xmm1
   14001bff6:	movss  xmm1,xmm13
   14001bffb:	unpcklps xmm1,xmm14
   14001bfff:	subsd  xmm6,xmm1
   14001c003:	mulsd  xmm7,xmm7
   14001c007:	mulsd  xmm6,xmm6
   14001c00b:	addsd  xmm6,xmm7
   14001c00f:	movaps xmm0,xmm6
   14001c012:	call   0x14003b8ae
   14001c017:	lea    rdx,[rsp+0x50]
   14001c01c:	lea    rcx,[rsp+0x40]
   14001c021:	mov    r8d,0x3
   14001c027:	mov    QWORD PTR [rsp+0x28],rbx
   14001c02c:	mov    QWORD PTR [rsp+0x20],rbx
   14001c031:	movaps xmm7,xmm0
   14001c034:	movsd  xmm0,QWORD PTR [rip+0x2139c]        # 0x14003d3d8
   14001c03c:	movaps xmm3,xmm0
   14001c03f:	movaps xmm6,xmm0
   14001c042:	call   0x14001abf0
   14001c047:	movaps xmm0,xmm8
   14001c04b:	subsd  xmm0,xmm7
   14001c04f:	movups xmm1,XMMWORD PTR [rax]
   14001c052:	andps  xmm0,XMMWORD PTR [rip+0x21507]        # 0x14003d560
   14001c059:	movups XMMWORD PTR [rsp+0x30],xmm1
   14001c05e:	comisd xmm15,xmm0
   14001c063:	ja     0x14001c138
   14001c069:	nop    DWORD PTR [rax+0x0]
   14001c070:	ucomisd xmm9,xmm10
   14001c075:	jp     0x14001c07d
   14001c077:	je     0x14001c138
   14001c07d:	comisd xmm7,xmm8
   14001c082:	movss  xmm0,DWORD PTR [rsp+0x34]
   14001c088:	movss  xmm1,DWORD PTR [rsp+0x3c]
   14001c08e:	movss  xmm2,DWORD PTR [rsp+0x30]
   14001c094:	unpcklps xmm2,xmm0
   14001c097:	movss  xmm0,xmm11
   14001c09c:	unpcklps xmm0,xmm12
   14001c0a0:	subsd  xmm2,xmm0
   14001c0a4:	movss  xmm0,DWORD PTR [rsp+0x38]
   14001c0aa:	unpcklps xmm0,xmm1
   14001c0ad:	movss  xmm1,xmm13
   14001c0b2:	mulsd  xmm2,xmm2
   14001c0b6:	unpcklps xmm1,xmm14
   14001c0ba:	subsd  xmm0,xmm1
   14001c0be:	mulsd  xmm0,xmm0
   14001c0c2:	addsd  xmm0,xmm2
   14001c0c6:	jbe    0x14001c0d6
   14001c0c8:	movaps xmm10,xmm6
   14001c0cc:	call   0x14003b8ae
   14001c0d1:	movaps xmm7,xmm0
   14001c0d4:	jmp    0x14001c0e3
   14001c0d6:	movaps xmm9,xmm6
   14001c0da:	call   0x14003b8ae
   14001c0df:	movaps xmm8,xmm0
   14001c0e3:	movaps xmm6,xmm10
   14001c0e7:	lea    rdx,[rsp+0x50]
   14001c0ec:	lea    rcx,[rsp+0x40]
   14001c0f1:	addsd  xmm6,xmm9
   14001c0f6:	mov    r8d,0x3
   14001c0fc:	mov    QWORD PTR [rsp+0x28],rbx
   14001c101:	mov    QWORD PTR [rsp+0x20],rbx
   14001c106:	mulsd  xmm6,QWORD PTR [rip+0x212ca]        # 0x14003d3d8
   14001c10e:	movaps xmm3,xmm6
   14001c111:	call   0x14001abf0
   14001c116:	movaps xmm1,xmm8
   14001c11a:	subsd  xmm1,xmm7
   14001c11e:	movups xmm0,XMMWORD PTR [rax]
   14001c121:	andps  xmm1,XMMWORD PTR [rip+0x21438]        # 0x14003d560
   14001c128:	movups XMMWORD PTR [rsp+0x30],xmm0
   14001c12d:	comisd xmm15,xmm1
   14001c132:	jbe    0x14001c070
   14001c138:	cvttsd2si eax,QWORD PTR [rsp+0x30]
   14001c13e:	lea    r11,[rsp+0x158]
   14001c146:	movaps xmm6,XMMWORD PTR [r11-0x38]
   14001c14b:	movaps xmm7,XMMWORD PTR [r11-0x48]
   14001c150:	movaps xmm8,XMMWORD PTR [r11-0x58]
   14001c155:	mov    DWORD PTR [rbp+0x70],eax
   14001c158:	cvttsd2si eax,QWORD PTR [rsp+0x38]
   14001c15e:	movaps xmm9,XMMWORD PTR [r11-0x68]
   14001c163:	movaps xmm10,XMMWORD PTR [r11-0x78]
   14001c168:	movaps xmm11,XMMWORD PTR [r11-0x88]
   14001c170:	mov    DWORD PTR [rbp+0x74],eax
   14001c173:	mov    rax,QWORD PTR [rbp+0x70]
   14001c177:	movaps xmm12,XMMWORD PTR [r11-0x98]
   14001c17f:	movaps xmm13,XMMWORD PTR [r11-0xa8]
   14001c187:	movaps xmm14,XMMWORD PTR [r11-0xb8]
   14001c18f:	movaps xmm15,XMMWORD PTR [r11-0xc8]
   14001c197:	mov    rsp,r11
   14001c19a:	pop    rbx
   14001c19b:	pop    rbp
   14001c19c:	ret    
   14001c19d:	int3   
   14001c19e:	int3   
   14001c19f:	int3   
   14001c1a0:	mov    rax,QWORD PTR [rcx+0x18]
   14001c1a4:	mov    QWORD PTR [rax],rdx
   14001c1a7:	add    QWORD PTR [rcx+0x18],0x8
   14001c1ac:	mov    rax,QWORD PTR [rcx+0x18]
   14001c1b0:	cmp    rax,QWORD PTR [rcx+0x8]
   14001c1b4:	jb     0x14001c1bd
   14001c1b6:	mov    rax,QWORD PTR [rcx]
   14001c1b9:	mov    QWORD PTR [rcx+0x18],rax
   14001c1bd:	ret    
   14001c1be:	int3   
   14001c1bf:	int3   
   14001c1c0:	test   rcx,rcx
   14001c1c3:	je     0x14001c202
   14001c1c5:	push   rbx
   14001c1c6:	sub    rsp,0x20
   14001c1ca:	cmp    WORD PTR [rcx+0x40],0x0
   14001c1cf:	mov    rbx,rcx
   14001c1d2:	je     0x14001c1e1
   14001c1d4:	mov    rcx,QWORD PTR [rcx+0x38]
   14001c1d8:	mov    rcx,QWORD PTR [rcx]
   14001c1db:	call   QWORD PTR [rip+0x210bf]        # 0x14003d2a0
   14001c1e1:	mov    rcx,QWORD PTR [rbx+0x38]
   14001c1e5:	call   QWORD PTR [rip+0x210b5]        # 0x14003d2a0
   14001c1eb:	mov    rcx,QWORD PTR [rbx]
   14001c1ee:	call   QWORD PTR [rip+0x210ac]        # 0x14003d2a0
   14001c1f4:	mov    rcx,rbx
   14001c1f7:	call   QWORD PTR [rip+0x210a3]        # 0x14003d2a0
   14001c1fd:	add    rsp,0x20
   14001c201:	pop    rbx
   14001c202:	ret    
   14001c203:	int3   
   14001c204:	int3   
   14001c205:	int3   
   14001c206:	int3   
   14001c207:	int3   
   14001c208:	int3   
   14001c209:	int3   
   14001c20a:	int3   
   14001c20b:	int3   
   14001c20c:	int3   
   14001c20d:	int3   
   14001c20e:	int3   
   14001c20f:	int3   
   14001c210:	rex push rbx
   14001c212:	sub    rsp,0x20
   14001c216:	mov    rbx,rcx
   14001c219:	mov    rcx,QWORD PTR [rcx]
   14001c21c:	call   QWORD PTR [rip+0x2107e]        # 0x14003d2a0
   14001c222:	mov    rcx,rbx
   14001c225:	add    rsp,0x20
   14001c229:	pop    rbx
   14001c22a:	rex.W jmp QWORD PTR [rip+0x2106f]        # 0x14003d2a0
   14001c231:	int3   
   14001c232:	int3   
   14001c233:	int3   
   14001c234:	int3   
   14001c235:	int3   
   14001c236:	int3   
   14001c237:	int3   
   14001c238:	int3   
   14001c239:	int3   
   14001c23a:	int3   
   14001c23b:	int3   
   14001c23c:	int3   
   14001c23d:	int3   
   14001c23e:	int3   
   14001c23f:	int3   
   14001c240:	sub    rsp,0x28
   14001c244:	call   0x140027500
   14001c249:	test   rax,rax
   14001c24c:	je     0x14001c256
   14001c24e:	mov    eax,DWORD PTR [rax+0x10]
   14001c251:	add    rsp,0x28
   14001c255:	ret    
   14001c256:	or     eax,0xffffffff
   14001c259:	add    rsp,0x28
   14001c25d:	ret    
   14001c25e:	int3   
   14001c25f:	int3   
   14001c260:	sub    rsp,0x28
   14001c264:	test   rdx,rdx
   14001c267:	jne    0x14001c271
   14001c269:	mov    eax,r8d
   14001c26c:	add    rsp,0x28
   14001c270:	ret    
   14001c271:	mov    edx,DWORD PTR [rdx+0x10]
   14001c274:	mov    QWORD PTR [rsp+0x20],rbx
   14001c279:	call   0x140027720
   14001c27e:	mov    rbx,rax
   14001c281:	test   rax,rax
   14001c284:	jne    0x14001c292
   14001c286:	xor    eax,eax
   14001c288:	mov    rbx,QWORD PTR [rsp+0x20]
   14001c28d:	add    rsp,0x28
   14001c291:	ret    
   14001c292:	lea    rdx,[rip+0x21b47]        # 0x14003dde0
   14001c299:	mov    rcx,rax
   14001c29c:	call   0x14001ca70
   14001c2a1:	test   eax,eax
   14001c2a3:	je     0x14001c286
   14001c2a5:	lea    rdx,[rip+0x21b2c]        # 0x14003ddd8
   14001c2ac:	mov    rcx,rbx
   14001c2af:	call   0x14001ca70
   14001c2b4:	test   eax,eax
   14001c2b6:	jne    0x14001c2c7
   14001c2b8:	mov    eax,0x1
   14001c2bd:	mov    rbx,QWORD PTR [rsp+0x20]
   14001c2c2:	add    rsp,0x28
   14001c2c6:	ret    
   14001c2c7:	mov    rcx,rbx
   14001c2ca:	mov    rbx,QWORD PTR [rsp+0x20]
   14001c2cf:	add    rsp,0x28
   14001c2d3:	rex.W jmp QWORD PTR [rip+0x20dae]        # 0x14003d088
   14001c2da:	int3   
   14001c2db:	int3   
   14001c2dc:	int3   
   14001c2dd:	int3   
   14001c2de:	int3   
   14001c2df:	int3   
   14001c2e0:	sub    rsp,0x48
   14001c2e4:	movaps XMMWORD PTR [rsp+0x30],xmm6
   14001c2e9:	movaps XMMWORD PTR [rsp+0x20],xmm7
   14001c2ee:	movaps xmm7,xmm3
   14001c2f1:	movaps xmm6,xmm2
   14001c2f4:	test   rdx,rdx
   14001c2f7:	jne    0x14001c30b
   14001c2f9:	movaps xmm0,xmm2
   14001c2fc:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14001c301:	movaps xmm7,XMMWORD PTR [rsp+0x20]
   14001c306:	add    rsp,0x48
   14001c30a:	ret    
   14001c30b:	mov    edx,DWORD PTR [rdx+0x10]
   14001c30e:	call   0x140027720
   14001c313:	cmp    BYTE PTR [rax],0x0
   14001c316:	jne    0x14001c32a
   14001c318:	movaps xmm0,xmm6
   14001c31b:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14001c320:	movaps xmm7,XMMWORD PTR [rsp+0x20]
   14001c325:	add    rsp,0x48
   14001c329:	ret    
   14001c32a:	mov    rcx,rax
   14001c32d:	call   QWORD PTR [rip+0x20d0d]        # 0x14003d040
   14001c333:	comisd xmm7,xmm0
   14001c337:	jbe    0x14001c33c
   14001c339:	movaps xmm0,xmm7
   14001c33c:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14001c341:	movaps xmm7,XMMWORD PTR [rsp+0x20]
   14001c346:	add    rsp,0x48
   14001c34a:	ret    
   14001c34b:	int3   
   14001c34c:	int3   
   14001c34d:	int3   
   14001c34e:	int3   
   14001c34f:	int3   
   14001c350:	mov    QWORD PTR [rsp+0x8],rbx
   14001c355:	push   rdi
   14001c356:	sub    rsp,0x20
   14001c35a:	mov    edi,r9d
   14001c35d:	mov    ebx,r8d
   14001c360:	test   rdx,rdx
   14001c363:	jne    0x14001c372
   14001c365:	mov    eax,ebx
   14001c367:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c36c:	add    rsp,0x20
   14001c370:	pop    rdi
   14001c371:	ret    
   14001c372:	mov    edx,DWORD PTR [rdx+0x10]
   14001c375:	call   0x140027720
   14001c37a:	cmp    BYTE PTR [rax],0x0
   14001c37d:	je     0x14001c365
   14001c37f:	mov    rcx,rax
   14001c382:	call   QWORD PTR [rip+0x20d00]        # 0x14003d088
   14001c388:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c38d:	cmp    eax,edi
   14001c38f:	cmovl  eax,edi
   14001c392:	add    rsp,0x20
   14001c396:	pop    rdi
   14001c397:	ret    
   14001c398:	int3   
   14001c399:	int3   
   14001c39a:	int3   
   14001c39b:	int3   
   14001c39c:	int3   
   14001c39d:	int3   
   14001c39e:	int3   
   14001c39f:	int3   
   14001c3a0:	rex push rbx
   14001c3a2:	sub    rsp,0x20
   14001c3a6:	mov    rbx,r8
   14001c3a9:	test   rdx,rdx
   14001c3ac:	jne    0x14001c3bd
   14001c3ae:	mov    rax,rbx
   14001c3b1:	cmp    BYTE PTR [rax],dl
   14001c3b3:	cmove  rax,rbx
   14001c3b7:	add    rsp,0x20
   14001c3bb:	pop    rbx
   14001c3bc:	ret    
   14001c3bd:	mov    edx,DWORD PTR [rdx+0x10]
   14001c3c0:	call   0x140027720
   14001c3c5:	cmp    BYTE PTR [rax],0x0
   14001c3c8:	cmove  rax,rbx
   14001c3cc:	add    rsp,0x20
   14001c3d0:	pop    rbx
   14001c3d1:	ret    
   14001c3d2:	int3   
   14001c3d3:	int3   
   14001c3d4:	int3   
   14001c3d5:	int3   
   14001c3d6:	int3   
   14001c3d7:	int3   
   14001c3d8:	int3   
   14001c3d9:	int3   
   14001c3da:	int3   
   14001c3db:	int3   
   14001c3dc:	int3   
   14001c3dd:	int3   
   14001c3de:	int3   
   14001c3df:	int3   
   14001c3e0:	test   rdx,rdx
   14001c3e3:	jne    0x14001c3e9
   14001c3e5:	mov    rax,r8
   14001c3e8:	ret    
   14001c3e9:	mov    edx,DWORD PTR [rdx+0x10]
   14001c3ec:	jmp    0x140027720
   14001c3f1:	int3   
   14001c3f2:	int3   
   14001c3f3:	int3   
   14001c3f4:	int3   
   14001c3f5:	int3   
   14001c3f6:	int3   
   14001c3f7:	int3   
   14001c3f8:	int3   
   14001c3f9:	int3   
   14001c3fa:	int3   
   14001c3fb:	int3   
   14001c3fc:	int3   
   14001c3fd:	int3   
   14001c3fe:	int3   
   14001c3ff:	int3   
   14001c400:	mov    QWORD PTR [rsp+0x8],rbx
   14001c405:	mov    QWORD PTR [rsp+0x10],rbp
   14001c40a:	mov    QWORD PTR [rsp+0x18],rsi
   14001c40f:	push   rdi
   14001c410:	sub    rsp,0x40
   14001c414:	mov    rdi,rcx
   14001c417:	mov    ecx,0x48
   14001c41c:	movaps XMMWORD PTR [rsp+0x30],xmm6
   14001c421:	mov    rsi,r9
   14001c424:	mov    rbp,r8
   14001c427:	movaps xmm6,xmm1
   14001c42a:	call   QWORD PTR [rip+0x20d38]        # 0x14003d168
   14001c430:	mov    rbx,rax
   14001c433:	test   rax,rax
   14001c436:	jne    0x14001c456
   14001c438:	call   QWORD PTR [rip+0x20e92]        # 0x14003d2d0
   14001c43e:	lea    rdx,[rip+0x22433]        # 0x14003e878
   14001c445:	lea    rcx,[rax+0x60]
   14001c449:	call   QWORD PTR [rip+0x20e71]        # 0x14003d2c0
   14001c44f:	call   QWORD PTR [rip+0x20c4b]        # 0x14003d0a0
   14001c455:	int3   
   14001c456:	mov    r9,QWORD PTR [rsp+0x70]
   14001c45b:	xor    eax,eax
   14001c45d:	lea    rcx,[rsp+0x20]
   14001c462:	mov    QWORD PTR [rbx+0x20],rax
   14001c466:	mov    QWORD PTR [rbx+0x28],rax
   14001c46a:	mov    QWORD PTR [rbx+0x30],rax
   14001c46e:	mov    QWORD PTR [rbx+0x38],rax
   14001c472:	mov    QWORD PTR [rbx+0x40],rax
   14001c476:	mov    r8,rbx
   14001c479:	movsd  QWORD PTR [rbx+0x18],xmm6
   14001c47e:	mov    rdx,rdi
   14001c481:	mov    QWORD PTR [rbx],rdi
   14001c484:	mov    QWORD PTR [rbx+0x8],rbp
   14001c488:	mov    QWORD PTR [rbx+0x10],rsi
   14001c48c:	call   0x140022b60
   14001c491:	mov    rbp,QWORD PTR [rsp+0x58]
   14001c496:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14001c49b:	mov    rsi,QWORD PTR [rsp+0x60]
   14001c4a0:	mov    rax,rbx
   14001c4a3:	mov    rbx,QWORD PTR [rsp+0x50]
   14001c4a8:	add    rsp,0x40
   14001c4ac:	pop    rdi
   14001c4ad:	ret    
   14001c4ae:	int3   
   14001c4af:	int3   
   14001c4b0:	rex push rbx
   14001c4b2:	sub    rsp,0x20
   14001c4b6:	mov    rbx,rcx
   14001c4b9:	test   rcx,rcx
   14001c4bc:	jne    0x14001c4c6
   14001c4be:	xor    eax,eax
   14001c4c0:	add    rsp,0x20
   14001c4c4:	pop    rbx
   14001c4c5:	ret    
   14001c4c6:	lea    rdx,[rip+0x21913]        # 0x14003dde0
   14001c4cd:	call   0x14001ca70
   14001c4d2:	test   eax,eax
   14001c4d4:	je     0x14001c4be
   14001c4d6:	lea    rdx,[rip+0x218fb]        # 0x14003ddd8
   14001c4dd:	mov    rcx,rbx
   14001c4e0:	call   0x14001ca70
   14001c4e5:	test   eax,eax
   14001c4e7:	jne    0x14001c4f4
   14001c4e9:	mov    eax,0x1
   14001c4ee:	add    rsp,0x20
   14001c4f2:	pop    rbx
   14001c4f3:	ret    
   14001c4f4:	mov    rcx,rbx
   14001c4f7:	add    rsp,0x20
   14001c4fb:	pop    rbx
   14001c4fc:	rex.W jmp QWORD PTR [rip+0x20b85]        # 0x14003d088
   14001c503:	int3   
   14001c504:	int3   
   14001c505:	int3   
   14001c506:	int3   
   14001c507:	int3   
   14001c508:	int3   
   14001c509:	int3   
   14001c50a:	int3   
   14001c50b:	int3   
   14001c50c:	int3   
   14001c50d:	int3   
   14001c50e:	int3   
   14001c50f:	int3   
   14001c510:	mov    QWORD PTR [rsp+0x8],rbx
   14001c515:	mov    r9,QWORD PTR [rdx]
   14001c518:	xor    r11d,r11d
   14001c51b:	mov    r10,rdx
   14001c51e:	mov    rbx,rcx
   14001c521:	test   r9,r9
   14001c524:	je     0x14001c558
   14001c526:	test   rbx,rbx
   14001c529:	je     0x14001c548
   14001c52b:	mov    rax,rbx
   14001c52e:	sub    r9,rbx
   14001c531:	movzx  edx,BYTE PTR [rax]
   14001c534:	movzx  ecx,BYTE PTR [rax+r9*1]
   14001c539:	sub    edx,ecx
   14001c53b:	jne    0x14001c544
   14001c53d:	inc    rax
   14001c540:	test   ecx,ecx
   14001c542:	jne    0x14001c531
   14001c544:	test   edx,edx
   14001c546:	je     0x14001c558
   14001c548:	mov    r9,QWORD PTR [r10+0x8]
   14001c54c:	add    r10,0x8
   14001c550:	inc    r11d
   14001c553:	test   r9,r9
   14001c556:	jne    0x14001c526
   14001c558:	mov    rbx,QWORD PTR [rsp+0x8]
   14001c55d:	movsxd rax,r11d
   14001c560:	mov    eax,DWORD PTR [r8+rax*4]
   14001c564:	ret    
   14001c565:	int3   
   14001c566:	int3   
   14001c567:	int3   
   14001c568:	int3   
   14001c569:	int3   
   14001c56a:	int3   
   14001c56b:	int3   
   14001c56c:	int3   
   14001c56d:	int3   
   14001c56e:	int3   
   14001c56f:	int3   
   14001c570:	cmp    edx,r8d
   14001c573:	jge    0x14001c57d
   14001c575:	mov    DWORD PTR [rcx],edx
   14001c577:	mov    DWORD PTR [rcx+0x8],r8d
   14001c57b:	jmp    0x14001c583
   14001c57d:	mov    DWORD PTR [rcx],r8d
   14001c580:	mov    DWORD PTR [rcx+0x8],edx
   14001c583:	shr    rdx,0x20
   14001c587:	shr    r8,0x20
   14001c58b:	mov    rax,rcx
   14001c58e:	cmp    edx,r8d
   14001c591:	jge    0x14001c59b
   14001c593:	mov    DWORD PTR [rcx+0x4],edx
   14001c596:	mov    DWORD PTR [rcx+0xc],r8d
   14001c59a:	ret    
   14001c59b:	mov    DWORD PTR [rcx+0x4],r8d
   14001c59f:	mov    DWORD PTR [rcx+0xc],edx
   14001c5a2:	ret    
   14001c5a3:	int3   
   14001c5a4:	int3   
   14001c5a5:	int3   
   14001c5a6:	int3   
   14001c5a7:	int3   
   14001c5a8:	int3   
   14001c5a9:	int3   
   14001c5aa:	int3   
   14001c5ab:	int3   
   14001c5ac:	int3   
   14001c5ad:	int3   
   14001c5ae:	int3   
   14001c5af:	int3   
   14001c5b0:	sub    rsp,0x28
   14001c5b4:	shr    rdx,0x20
   14001c5b8:	call   0x14001c6a0
   14001c5bd:	add    rsp,0x28
   14001c5c1:	ret    
   14001c5c2:	int3   
   14001c5c3:	int3   
   14001c5c4:	int3   
   14001c5c5:	int3   
   14001c5c6:	int3   
   14001c5c7:	int3   
   14001c5c8:	int3   
   14001c5c9:	int3   
   14001c5ca:	int3   
   14001c5cb:	int3   
   14001c5cc:	int3   
   14001c5cd:	int3   
   14001c5ce:	int3   
   14001c5cf:	int3   
   14001c5d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001c5d5:	push   rdi
   14001c5d6:	sub    rsp,0x20
   14001c5da:	mov    ebx,ecx
   14001c5dc:	mov    ecx,0x20
   14001c5e1:	call   QWORD PTR [rip+0x20b81]        # 0x14003d168
   14001c5e7:	mov    rdi,rax
   14001c5ea:	test   rax,rax
   14001c5ed:	jne    0x14001c60d
   14001c5ef:	call   QWORD PTR [rip+0x20cdb]        # 0x14003d2d0
   14001c5f5:	lea    rdx,[rip+0x2227c]        # 0x14003e878
   14001c5fc:	lea    rcx,[rax+0x60]
   14001c600:	call   QWORD PTR [rip+0x20cba]        # 0x14003d2c0
   14001c606:	call   QWORD PTR [rip+0x20a94]        # 0x14003d0a0
   14001c60c:	int3   
   14001c60d:	xor    eax,eax
   14001c60f:	cmp    ebx,0x1
   14001c612:	mov    QWORD PTR [rdi],rax
   14001c615:	mov    QWORD PTR [rdi+0x8],rax
   14001c619:	mov    QWORD PTR [rdi+0x10],rax
   14001c61d:	mov    QWORD PTR [rdi+0x18],rax
   14001c621:	mov    eax,0x2
   14001c626:	cmovle ebx,eax
   14001c629:	movsxd rax,ebx
   14001c62c:	lea    rbx,[rax*8+0x0]
   14001c634:	mov    rcx,rbx
   14001c637:	call   0x14001d2c0
   14001c63c:	mov    QWORD PTR [rdi],rax
   14001c63f:	mov    QWORD PTR [rdi+0x18],rax
   14001c643:	mov    QWORD PTR [rdi+0x10],rax
   14001c647:	add    rax,rbx
   14001c64a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c64f:	mov    QWORD PTR [rdi+0x8],rax
   14001c653:	mov    rax,rdi
   14001c656:	add    rsp,0x20
   14001c65a:	pop    rdi
   14001c65b:	ret    
   14001c65c:	int3   
   14001c65d:	int3   
   14001c65e:	int3   
   14001c65f:	int3   
   14001c660:	mov    DWORD PTR [rsp+0x18],ecx
   14001c664:	mov    DWORD PTR [rsp+0x1c],edx
   14001c668:	mov    rax,QWORD PTR [rsp+0x18]
   14001c66d:	ret    
   14001c66e:	int3   
   14001c66f:	int3   
   14001c670:	mov    eax,DWORD PTR [rdx]
   14001c672:	cmp    DWORD PTR [rcx+0x8],eax
   14001c675:	jl     0x14001c694
   14001c677:	mov    eax,DWORD PTR [rcx]
   14001c679:	cmp    DWORD PTR [rdx+0x8],eax
   14001c67c:	jl     0x14001c694
   14001c67e:	mov    eax,DWORD PTR [rdx+0x4]
   14001c681:	cmp    DWORD PTR [rcx+0xc],eax
   14001c684:	jl     0x14001c694
   14001c686:	mov    eax,DWORD PTR [rcx+0x4]
   14001c689:	cmp    DWORD PTR [rdx+0xc],eax
   14001c68c:	jl     0x14001c694
   14001c68e:	mov    eax,0x1
   14001c693:	ret    
   14001c694:	xor    eax,eax
   14001c696:	ret    
   14001c697:	int3   
   14001c698:	int3   
   14001c699:	int3   
   14001c69a:	int3   
   14001c69b:	int3   
   14001c69c:	int3   
   14001c69d:	int3   
   14001c69e:	int3   
   14001c69f:	int3   
   14001c6a0:	mov    QWORD PTR [rsp+0x18],rbx
   14001c6a5:	mov    QWORD PTR [rsp+0x20],rsi
   14001c6aa:	push   rbp
   14001c6ab:	lea    rbp,[rsp-0x10]
   14001c6b0:	sub    rsp,0x110
   14001c6b7:	xor    esi,esi
   14001c6b9:	cmp    QWORD PTR [rip+0x37150],rcx        # 0x140053810
   14001c6c0:	mov    ebx,edx
   14001c6c2:	je     0x14001c736
   14001c6c4:	movsxd rax,DWORD PTR [rcx+0x8]
   14001c6c8:	mov    QWORD PTR [rip+0x37141],rcx        # 0x140053810
   14001c6cf:	test   eax,eax
   14001c6d1:	jle    0x14001c736
   14001c6d3:	mov    rcx,QWORD PTR [rcx]
   14001c6d6:	mov    edx,esi
   14001c6d8:	mov    r8,rax
   14001c6db:	nop    DWORD PTR [rax+rax*1+0x0]
   14001c6e0:	movups xmm0,XMMWORD PTR [rcx]
   14001c6e3:	movups xmm1,XMMWORD PTR [rcx+0x10]
   14001c6e7:	movups xmm2,xmm0
   14001c6ea:	movups XMMWORD PTR [rip+0x3713f],xmm1        # 0x140053830
   14001c6f1:	movups XMMWORD PTR [rip+0x37128],xmm0        # 0x140053820
   14001c6f8:	movdqa xmm1,xmm2
   14001c6fc:	movsd  xmm0,QWORD PTR [rcx+0x20]
   14001c701:	psrldq xmm1,0x8
   14001c706:	movq   r9,xmm2
   14001c70b:	movd   r10d,xmm1
   14001c710:	movsd  QWORD PTR [rip+0x37128],xmm0        # 0x140053840
   14001c718:	movsxd rax,r10d
   14001c71b:	cmp    DWORD PTR [r9+rax*8-0x4],ebx
   14001c720:	jg     0x14001c728
   14001c722:	cmp    ebx,DWORD PTR [r9+0x4]
   14001c726:	jle    0x14001c756
   14001c728:	inc    rdx
   14001c72b:	add    rcx,0x28
   14001c72f:	cmp    rdx,r8
   14001c732:	jl     0x14001c6e0
   14001c734:	jmp    0x14001c744
   14001c736:	mov    r10d,DWORD PTR [rip+0x370eb]        # 0x140053828
   14001c73d:	mov    r9,QWORD PTR [rip+0x370dc]        # 0x140053820
   14001c744:	cmp    ebx,DWORD PTR [r9+0x4]
   14001c748:	jle    0x14001c756
   14001c74a:	mov    rax,QWORD PTR [r9]
   14001c74d:	mov    QWORD PTR [rbp+0x20],rax
   14001c751:	jmp    0x14001ca20
   14001c756:	movsxd rax,r10d
   14001c759:	cmp    ebx,DWORD PTR [r9+rax*8-0x4]
   14001c75e:	jge    0x14001c76e
   14001c760:	mov    rax,QWORD PTR [r9+rax*8-0x8]
   14001c765:	mov    QWORD PTR [rbp+0x20],rax
   14001c769:	jmp    0x14001ca20
   14001c76e:	mov    QWORD PTR [rsp+0x128],rdi
   14001c776:	movaps XMMWORD PTR [rsp+0x100],xmm6
   14001c77e:	movaps XMMWORD PTR [rsp+0xf0],xmm7
   14001c786:	mov    edi,esi
   14001c788:	movaps XMMWORD PTR [rsp+0xe0],xmm8
   14001c791:	movaps XMMWORD PTR [rsp+0xd0],xmm9
   14001c79a:	movaps XMMWORD PTR [rsp+0xc0],xmm10
   14001c7a3:	movaps XMMWORD PTR [rsp+0xb0],xmm11
   14001c7ac:	movaps XMMWORD PTR [rsp+0xa0],xmm12
   14001c7b5:	movaps XMMWORD PTR [rsp+0x90],xmm13
   14001c7be:	test   r10d,r10d
   14001c7c1:	jle    0x14001c81c
   14001c7c3:	lea    r11,[r9+0xc]
   14001c7c7:	nop    WORD PTR [rax+rax*1+0x0]
   14001c7d0:	mov    r8d,esi
   14001c7d3:	mov    rcx,rsi
   14001c7d6:	mov    rax,r11
   14001c7d9:	nop    DWORD PTR [rax+0x0]
   14001c7e0:	mov    edx,DWORD PTR [rax-0x8]
   14001c7e3:	cmp    edx,ebx
   14001c7e5:	jg     0x14001c7ef
   14001c7e7:	cmp    ebx,DWORD PTR [rax]
   14001c7e9:	jle    0x14001c803
   14001c7eb:	cmp    edx,ebx
   14001c7ed:	jl     0x14001c7f3
   14001c7ef:	cmp    ebx,DWORD PTR [rax]
   14001c7f1:	jge    0x14001c803
   14001c7f3:	inc    rcx
   14001c7f6:	inc    r8d
   14001c7f9:	add    rax,0x8
   14001c7fd:	cmp    rcx,0x3
   14001c801:	jl     0x14001c7e0
   14001c803:	cmp    r8d,0x3
   14001c807:	jl     0x14001c817
   14001c809:	add    edi,0x3
   14001c80c:	add    r11,0x18
   14001c810:	cmp    edi,r10d
   14001c813:	jl     0x14001c7d0
   14001c815:	jmp    0x14001c81c
   14001c817:	cmp    edi,r10d
   14001c81a:	jl     0x14001c83d
   14001c81c:	lea    rdx,[rip+0x2206d]        # 0x14003e890
   14001c823:	lea    rcx,[rip+0x22176]        # 0x14003e9a0
   14001c82a:	mov    r8d,0x351
   14001c830:	call   QWORD PTR [rip+0x2085a]        # 0x14003d090
   14001c836:	mov    r9,QWORD PTR [rip+0x36fe3]        # 0x140053820
   14001c83d:	movsxd rax,edi
   14001c840:	mov    rdi,QWORD PTR [rsp+0x128]
   14001c848:	movd   xmm0,DWORD PTR [r9+rax*8]
   14001c84e:	movd   xmm2,DWORD PTR [r9+rax*8+0x4]
   14001c855:	movd   xmm1,DWORD PTR [r9+rax*8+0xc]
   14001c85c:	cvtdq2pd xmm0,xmm0
   14001c860:	cvtdq2pd xmm2,xmm2
   14001c864:	cvtdq2pd xmm1,xmm1
   14001c868:	comisd xmm1,xmm2
   14001c86c:	movsd  QWORD PTR [rsp+0x50],xmm0
   14001c872:	movsd  QWORD PTR [rsp+0x58],xmm2
   14001c878:	movd   xmm0,DWORD PTR [r9+rax*8+0x8]
   14001c87f:	cvtdq2pd xmm0,xmm0
   14001c883:	movsd  QWORD PTR [rsp+0x68],xmm1
   14001c889:	movsd  QWORD PTR [rsp+0x60],xmm0
   14001c88f:	jbe    0x14001c89a
   14001c891:	movaps xmm1,xmm2
   14001c894:	movsd  QWORD PTR [rsp+0x68],xmm1
   14001c89a:	movd   xmm2,DWORD PTR [r9+rax*8+0x14]
   14001c8a1:	movd   xmm0,DWORD PTR [r9+rax*8+0x10]
   14001c8a8:	cvtdq2pd xmm2,xmm2
   14001c8ac:	cvtdq2pd xmm0,xmm0
   14001c8b0:	comisd xmm2,xmm1
   14001c8b4:	movsd  QWORD PTR [rsp+0x70],xmm0
   14001c8ba:	movsd  QWORD PTR [rsp+0x78],xmm2
   14001c8c0:	jbe    0x14001c8cb
   14001c8c2:	movaps xmm2,xmm1
   14001c8c5:	movsd  QWORD PTR [rsp+0x78],xmm2
   14001c8cb:	movd   xmm1,DWORD PTR [r9+rax*8+0x1c]
   14001c8d2:	movd   xmm0,DWORD PTR [r9+rax*8+0x18]
   14001c8d9:	cvtdq2pd xmm1,xmm1
   14001c8dd:	cvtdq2pd xmm0,xmm0
   14001c8e1:	comisd xmm1,xmm2
   14001c8e5:	movsd  QWORD PTR [rbp-0x80],xmm0
   14001c8ea:	movsd  QWORD PTR [rbp-0x78],xmm1
   14001c8ef:	jbe    0x14001c8f6
   14001c8f1:	movsd  QWORD PTR [rbp-0x78],xmm2
   14001c8f6:	movsd  xmm11,QWORD PTR [rip+0x20ad9]        # 0x14003d3d8
   14001c8ff:	movsd  xmm10,QWORD PTR [rip+0x20ad8]        # 0x14003d3e0
   14001c908:	xorps  xmm9,xmm9
   14001c90c:	lea    rdx,[rsp+0x50]
   14001c911:	lea    rcx,[rsp+0x40]
   14001c916:	mov    r8d,0x3
   14001c91c:	mov    QWORD PTR [rsp+0x28],rsi
   14001c921:	mov    QWORD PTR [rsp+0x20],rsi
   14001c926:	movaps xmm3,xmm11
   14001c92a:	movaps xmm7,xmm9
   14001c92e:	movaps xmm8,xmm10
   14001c932:	movaps xmm6,xmm11
   14001c936:	call   0x14001abf0
   14001c93b:	movsd  xmm13,QWORD PTR [rip+0x20c1c]        # 0x14003d560
   14001c944:	movd   xmm12,ebx
   14001c949:	movups xmm0,XMMWORD PTR [rax]
   14001c94c:	movups xmm1,xmm0
   14001c94f:	movups XMMWORD PTR [rsp+0x30],xmm0
   14001c954:	cvtdq2pd xmm12,xmm12
   14001c959:	unpckhpd xmm1,xmm1
   14001c95d:	subsd  xmm1,xmm12
   14001c962:	movaps xmm0,xmm1
   14001c965:	andps  xmm0,xmm13
   14001c969:	comisd xmm10,xmm0
   14001c96e:	jae    0x14001c9d1
   14001c970:	comisd xmm9,xmm1
   14001c975:	jbe    0x14001c97d
   14001c977:	movaps xmm8,xmm6
   14001c97b:	jmp    0x14001c980
   14001c97d:	movaps xmm7,xmm6
   14001c980:	movaps xmm6,xmm8
   14001c984:	lea    rdx,[rsp+0x50]
   14001c989:	lea    rcx,[rsp+0x40]
   14001c98e:	addsd  xmm6,xmm7
   14001c992:	mov    r8d,0x3
   14001c998:	mov    QWORD PTR [rsp+0x28],rsi
   14001c99d:	mov    QWORD PTR [rsp+0x20],rsi
   14001c9a2:	mulsd  xmm6,xmm11
   14001c9a7:	movaps xmm3,xmm6
   14001c9aa:	call   0x14001abf0
   14001c9af:	movups xmm0,XMMWORD PTR [rax]
   14001c9b2:	movups xmm1,xmm0
   14001c9b5:	movups XMMWORD PTR [rsp+0x30],xmm0
   14001c9ba:	unpckhpd xmm1,xmm1
   14001c9be:	subsd  xmm1,xmm12
   14001c9c3:	movaps xmm0,xmm1
   14001c9c6:	andps  xmm0,xmm13
   14001c9ca:	comisd xmm10,xmm0
   14001c9cf:	jb     0x14001c970
   14001c9d1:	cvttsd2si eax,QWORD PTR [rsp+0x30]
   14001c9d7:	movaps xmm13,XMMWORD PTR [rsp+0x90]
   14001c9e0:	movaps xmm12,XMMWORD PTR [rsp+0xa0]
   14001c9e9:	movaps xmm11,XMMWORD PTR [rsp+0xb0]
   14001c9f2:	movaps xmm10,XMMWORD PTR [rsp+0xc0]
   14001c9fb:	movaps xmm9,XMMWORD PTR [rsp+0xd0]
   14001ca04:	mov    DWORD PTR [rbp+0x20],eax
   14001ca07:	movaps xmm8,XMMWORD PTR [rsp+0xe0]
   14001ca10:	movaps xmm7,XMMWORD PTR [rsp+0xf0]
   14001ca18:	movaps xmm6,XMMWORD PTR [rsp+0x100]
   14001ca20:	lea    r11,[rsp+0x110]
   14001ca28:	mov    DWORD PTR [rbp+0x24],ebx
   14001ca2b:	mov    rax,QWORD PTR [rbp+0x20]
   14001ca2f:	mov    rbx,QWORD PTR [r11+0x20]
   14001ca33:	mov    rsi,QWORD PTR [r11+0x28]
   14001ca37:	mov    rsp,r11
   14001ca3a:	pop    rbp
   14001ca3b:	ret    
   14001ca3c:	int3   
   14001ca3d:	int3   
   14001ca3e:	int3   
   14001ca3f:	int3   
   14001ca40:	cmp    BYTE PTR [rcx+0x9b],0x1
   14001ca47:	jne    0x14001ca5e
   14001ca49:	cmp    DWORD PTR [rcx+0xb8],0x1
   14001ca50:	jg     0x14001ca5b
   14001ca52:	cmp    DWORD PTR [rcx+0xc8],0x1
   14001ca59:	jle    0x14001ca5e
   14001ca5b:	mov    al,0x1
   14001ca5d:	ret    
   14001ca5e:	xor    al,al
   14001ca60:	ret    
   14001ca61:	int3   
   14001ca62:	int3   
   14001ca63:	int3   
   14001ca64:	int3   
   14001ca65:	int3   
   14001ca66:	int3   
   14001ca67:	int3   
   14001ca68:	int3   
   14001ca69:	int3   
   14001ca6a:	int3   
   14001ca6b:	int3   
   14001ca6c:	int3   
   14001ca6d:	int3   
   14001ca6e:	int3   
   14001ca6f:	int3   
   14001ca70:	mov    QWORD PTR [rsp+0x8],rbx
   14001ca75:	mov    QWORD PTR [rsp+0x10],rbp
   14001ca7a:	mov    QWORD PTR [rsp+0x18],rsi
   14001ca7f:	mov    QWORD PTR [rsp+0x20],rdi
   14001ca84:	push   r14
   14001ca86:	sub    rsp,0x20
   14001ca8a:	mov    r14,rcx
   14001ca8d:	mov    rsi,rdx
   14001ca90:	sub    r14,rdx
   14001ca93:	nop    DWORD PTR [rax+0x0]
   14001ca97:	nop    WORD PTR [rax+rax*1+0x0]
   14001caa0:	movsx  edi,BYTE PTR [r14+rsi*1]
   14001caa5:	movzx  ebx,BYTE PTR [rsi]
   14001caa8:	lea    rsi,[rsi+0x1]
   14001caac:	mov    ecx,edi
   14001caae:	mov    ebp,edi
   14001cab0:	call   QWORD PTR [rip+0x2066a]        # 0x14003d120
   14001cab6:	test   eax,eax
   14001cab8:	je     0x14001cac4
   14001caba:	mov    ecx,edi
   14001cabc:	call   QWORD PTR [rip+0x20666]        # 0x14003d128
   14001cac2:	mov    edi,eax
   14001cac4:	movsx  ebp,bl
   14001cac7:	mov    ecx,ebp
   14001cac9:	call   QWORD PTR [rip+0x20651]        # 0x14003d120
   14001cacf:	test   eax,eax
   14001cad1:	je     0x14001cadd
   14001cad3:	mov    ecx,ebp
   14001cad5:	call   QWORD PTR [rip+0x2064d]        # 0x14003d128
   14001cadb:	mov    ebx,eax
   14001cadd:	cmp    dil,bl
   14001cae0:	jne    0x14001caeb
   14001cae2:	test   dil,dil
   14001cae5:	je     0x14001caeb
   14001cae7:	test   bl,bl
   14001cae9:	jne    0x14001caa0
   14001caeb:	mov    rbp,QWORD PTR [rsp+0x38]
   14001caf0:	mov    rsi,QWORD PTR [rsp+0x40]
   14001caf5:	movsx  ecx,bl
   14001caf8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cafd:	movsx  eax,dil
   14001cb01:	mov    rdi,QWORD PTR [rsp+0x48]
   14001cb06:	sub    eax,ecx
   14001cb08:	add    rsp,0x20
   14001cb0c:	pop    r14
   14001cb0e:	ret    
   14001cb0f:	int3   
   14001cb10:	movzx  r8d,BYTE PTR [rcx]
   14001cb14:	xor    eax,eax
   14001cb16:	test   r8b,r8b
   14001cb19:	je     0x14001cb34
   14001cb1b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001cb20:	lea    rcx,[rcx+0x1]
   14001cb24:	cmp    r8b,dl
   14001cb27:	jne    0x14001cb2b
   14001cb29:	inc    eax
   14001cb2b:	movzx  r8d,BYTE PTR [rcx]
   14001cb2f:	test   r8b,r8b
   14001cb32:	jne    0x14001cb20
   14001cb34:	ret    
   14001cb35:	int3   
   14001cb36:	int3   
   14001cb37:	int3   
   14001cb38:	int3   
   14001cb39:	int3   
   14001cb3a:	int3   
   14001cb3b:	int3   
   14001cb3c:	int3   
   14001cb3d:	int3   
   14001cb3e:	int3   
   14001cb3f:	int3   
   14001cb40:	mov    QWORD PTR [rsp+0x10],rbx
   14001cb45:	mov    QWORD PTR [rsp+0x18],rsi
   14001cb4a:	push   rdi
   14001cb4b:	push   r14
   14001cb4d:	push   r15
   14001cb4f:	sub    rsp,0x20
   14001cb53:	xor    r15d,r15d
   14001cb56:	mov    r14,rcx
   14001cb59:	movzx  esi,BYTE PTR [r14]
   14001cb5d:	mov    ebx,r15d
   14001cb60:	mov    edi,r15d
   14001cb63:	mov    ecx,r15d
   14001cb66:	mov    r8d,r15d
   14001cb69:	mov    r9d,r15d
   14001cb6c:	mov    r10d,r15d
   14001cb6f:	mov    r11,r14
   14001cb72:	movzx  eax,sil
   14001cb76:	test   sil,sil
   14001cb79:	je     0x14001cc72
   14001cb7f:	mov    QWORD PTR [rsp+0x40],rbp
   14001cb84:	lea    rbp,[rip+0x21dc1]        # 0x14003e94c
   14001cb8b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001cb90:	inc    r11
   14001cb93:	cmp    al,0x5c
   14001cb95:	jne    0x14001cc5e
   14001cb9b:	movsx  eax,BYTE PTR [r11]
   14001cb9f:	inc    r11
   14001cba2:	cmp    eax,0x45
   14001cba5:	je     0x14001cc02
   14001cba7:	cmp    eax,0x48
   14001cbaa:	je     0x14001cbe2
   14001cbac:	cmp    eax,0x54
   14001cbaf:	je     0x14001cbba
   14001cbb1:	add    r10d,0x2
   14001cbb5:	jmp    0x14001cc61
   14001cbba:	test   rdi,rdi
   14001cbbd:	jne    0x14001cbda
   14001cbbf:	mov    rax,QWORD PTR [rdx+0x18]
   14001cbc3:	or     r9,0xffffffffffffffff
   14001cbc7:	mov    rdi,QWORD PTR [rax+0x10]
   14001cbcb:	nop    DWORD PTR [rax+rax*1+0x0]
   14001cbd0:	inc    r9
   14001cbd3:	cmp    BYTE PTR [rdi+r9*1],0x0
   14001cbd8:	jne    0x14001cbd0
   14001cbda:	add    r10d,r9d
   14001cbdd:	jmp    0x14001cc61
   14001cbe2:	test   rbx,rbx
   14001cbe5:	jne    0x14001cbfd
   14001cbe7:	mov    rax,QWORD PTR [rdx+0x10]
   14001cbeb:	or     r8,0xffffffffffffffff
   14001cbef:	mov    rbx,QWORD PTR [rax+0x10]
   14001cbf3:	inc    r8
   14001cbf6:	cmp    BYTE PTR [rbx+r8*1],0x0
   14001cbfb:	jne    0x14001cbf3
   14001cbfd:	add    r10d,r8d
   14001cc00:	jmp    0x14001cc61
   14001cc02:	test   r15,r15
   14001cc05:	jne    0x14001cc59
   14001cc07:	mov    rcx,QWORD PTR [rdx+0x18]
   14001cc0b:	or     rax,0xffffffffffffffff
   14001cc0f:	mov    rdi,QWORD PTR [rcx+0x10]
   14001cc13:	inc    rax
   14001cc16:	cmp    BYTE PTR [rdi+rax*1],0x0
   14001cc1a:	jne    0x14001cc13
   14001cc1c:	mov    r9d,eax
   14001cc1f:	mov    rax,QWORD PTR [rdx+0x10]
   14001cc23:	mov    rbx,QWORD PTR [rax+0x10]
   14001cc27:	or     rax,0xffffffffffffffff
   14001cc2b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001cc30:	inc    rax
   14001cc33:	cmp    BYTE PTR [rbx+rax*1],0x0
   14001cc37:	jne    0x14001cc30
   14001cc39:	mov    r8d,eax
   14001cc3c:	mov    rax,QWORD PTR [rcx+0x20]
   14001cc40:	lea    r15,[rip+0x21d01]        # 0x14003e948
   14001cc47:	mov    rcx,QWORD PTR [rax+0x38]
   14001cc4b:	test   BYTE PTR [rcx],0x10
   14001cc4e:	lea    ecx,[r8+0x2]
   14001cc52:	cmove  r15,rbp
   14001cc56:	add    ecx,r9d
   14001cc59:	add    r10d,ecx
   14001cc5c:	jmp    0x14001cc61
   14001cc5e:	inc    r10d
   14001cc61:	movzx  eax,BYTE PTR [r11]
   14001cc65:	test   al,al
   14001cc67:	jne    0x14001cb90
   14001cc6d:	mov    rbp,QWORD PTR [rsp+0x40]
   14001cc72:	lea    eax,[r10+0x1]
   14001cc76:	movsxd rcx,eax
   14001cc79:	call   QWORD PTR [rip+0x204e9]        # 0x14003d168
   14001cc7f:	mov    r9,rax
   14001cc82:	mov    rcx,rax
   14001cc85:	test   sil,sil
   14001cc88:	je     0x14001cd8e
   14001cc8e:	xchg   ax,ax
   14001cc90:	inc    r14
   14001cc93:	cmp    sil,0x5c
   14001cc97:	jne    0x14001cd73
   14001cc9d:	movsx  r8d,BYTE PTR [r14]
   14001cca1:	inc    r14
   14001cca4:	mov    edx,r8d
   14001cca7:	cmp    r8d,0x45
   14001ccab:	je     0x14001cd12
   14001ccad:	cmp    edx,0x48
   14001ccb0:	je     0x14001ccf3
   14001ccb2:	cmp    edx,0x54
   14001ccb5:	je     0x14001ccc7
   14001ccb7:	mov    BYTE PTR [rcx],sil
   14001ccba:	mov    BYTE PTR [rcx+0x1],r8b
   14001ccbe:	add    rcx,0x2
   14001ccc2:	jmp    0x14001cd79
   14001ccc7:	movzx  eax,BYTE PTR [rdi]
   14001ccca:	mov    BYTE PTR [rcx],al
   14001cccc:	test   al,al
   14001ccce:	je     0x14001cd79
   14001ccd4:	mov    rdx,rdi
   14001ccd7:	sub    rdx,rcx
   14001ccda:	nop    WORD PTR [rax+rax*1+0x0]
   14001cce0:	movzx  eax,BYTE PTR [rdx+rcx*1+0x1]
   14001cce5:	inc    rcx
   14001cce8:	mov    BYTE PTR [rcx],al
   14001ccea:	test   al,al
   14001ccec:	jne    0x14001cce0
   14001ccee:	jmp    0x14001cd79
   14001ccf3:	movzx  eax,BYTE PTR [rbx]
   14001ccf6:	mov    BYTE PTR [rcx],al
   14001ccf8:	test   al,al
   14001ccfa:	je     0x14001cd79
   14001ccfc:	mov    rdx,rbx
   14001ccff:	sub    rdx,rcx
   14001cd02:	movzx  eax,BYTE PTR [rdx+rcx*1+0x1]
   14001cd07:	inc    rcx
   14001cd0a:	mov    BYTE PTR [rcx],al
   14001cd0c:	test   al,al
   14001cd0e:	jne    0x14001cd02
   14001cd10:	jmp    0x14001cd79
   14001cd12:	movzx  eax,BYTE PTR [rdi]
   14001cd15:	mov    rdx,rdi
   14001cd18:	mov    BYTE PTR [rcx],al
   14001cd1a:	test   al,al
   14001cd1c:	je     0x14001cd31
   14001cd1e:	xchg   ax,ax
   14001cd20:	movzx  eax,BYTE PTR [rdx+0x1]
   14001cd24:	inc    rcx
   14001cd27:	lea    rdx,[rdx+0x1]
   14001cd2b:	mov    BYTE PTR [rcx],al
   14001cd2d:	test   al,al
   14001cd2f:	jne    0x14001cd20
   14001cd31:	movzx  eax,BYTE PTR [r15]
   14001cd35:	mov    BYTE PTR [rcx],al
   14001cd37:	test   al,al
   14001cd39:	je     0x14001cd4f
   14001cd3b:	mov    rdx,r15
   14001cd3e:	sub    rdx,rcx
   14001cd41:	movzx  eax,BYTE PTR [rdx+rcx*1+0x1]
   14001cd46:	inc    rcx
   14001cd49:	mov    BYTE PTR [rcx],al
   14001cd4b:	test   al,al
   14001cd4d:	jne    0x14001cd41
   14001cd4f:	movzx  eax,BYTE PTR [rbx]
   14001cd52:	mov    rdx,rbx
   14001cd55:	mov    BYTE PTR [rcx],al
   14001cd57:	test   al,al
   14001cd59:	je     0x14001cd79
   14001cd5b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001cd60:	movzx  eax,BYTE PTR [rdx+0x1]
   14001cd64:	inc    rcx
   14001cd67:	lea    rdx,[rdx+0x1]
   14001cd6b:	mov    BYTE PTR [rcx],al
   14001cd6d:	test   al,al
   14001cd6f:	jne    0x14001cd60
   14001cd71:	jmp    0x14001cd79
   14001cd73:	mov    BYTE PTR [rcx],sil
   14001cd76:	inc    rcx
   14001cd79:	movzx  esi,BYTE PTR [r14]
   14001cd7d:	test   sil,sil
   14001cd80:	jne    0x14001cc90
   14001cd86:	mov    BYTE PTR [rcx],sil
   14001cd89:	mov    rax,r9
   14001cd8c:	jmp    0x14001cd91
   14001cd8e:	mov    BYTE PTR [rax],0x0
   14001cd91:	mov    rbx,QWORD PTR [rsp+0x48]
   14001cd96:	mov    rsi,QWORD PTR [rsp+0x50]
   14001cd9b:	add    rsp,0x20
   14001cd9f:	pop    r15
   14001cda1:	pop    r14
   14001cda3:	pop    rdi
   14001cda4:	ret    
   14001cda5:	int3   
   14001cda6:	int3   
   14001cda7:	int3   
   14001cda8:	int3   
   14001cda9:	int3   
   14001cdaa:	int3   
   14001cdab:	int3   
   14001cdac:	int3   
   14001cdad:	int3   
   14001cdae:	int3   
   14001cdaf:	int3   
   14001cdb0:	mov    QWORD PTR [rsp+0x8],rbx
   14001cdb5:	mov    QWORD PTR [rsp+0x10],rsi
   14001cdba:	push   rdi
   14001cdbb:	sub    rsp,0x20
   14001cdbf:	mov    rbx,rcx
   14001cdc2:	xor    edi,edi
   14001cdc4:	movzx  esi,BYTE PTR [rbx]
   14001cdc7:	mov    r8d,edi
   14001cdca:	mov    ecx,edi
   14001cdcc:	mov    r9,rbx
   14001cdcf:	movzx  eax,sil
   14001cdd3:	test   sil,sil
   14001cdd6:	je     0x14001ce19
   14001cdd8:	inc    r9
   14001cddb:	cmp    al,0x5c
   14001cddd:	jne    0x14001ce0f
   14001cddf:	movsx  eax,BYTE PTR [r9]
   14001cde3:	inc    r9
   14001cde6:	cmp    eax,0x47
   14001cde9:	je     0x14001cdf0
   14001cdeb:	add    ecx,0x2
   14001cdee:	jmp    0x14001ce11
   14001cdf0:	test   rdi,rdi
   14001cdf3:	jne    0x14001ce0a
   14001cdf5:	mov    rdi,QWORD PTR [rdx+0x10]
   14001cdf9:	or     r8,0xffffffffffffffff
   14001cdfd:	nop    DWORD PTR [rax]
   14001ce00:	inc    r8
   14001ce03:	cmp    BYTE PTR [rdi+r8*1],0x0
   14001ce08:	jne    0x14001ce00
   14001ce0a:	add    ecx,r8d
   14001ce0d:	jmp    0x14001ce11
   14001ce0f:	inc    ecx
   14001ce11:	movzx  eax,BYTE PTR [r9]
   14001ce15:	test   al,al
   14001ce17:	jne    0x14001cdd8
   14001ce19:	lea    eax,[rcx+0x1]
   14001ce1c:	movsxd rcx,eax
   14001ce1f:	call   QWORD PTR [rip+0x20343]        # 0x14003d168
   14001ce25:	mov    r8,rax
   14001ce28:	mov    rcx,rax
   14001ce2b:	test   sil,sil
   14001ce2e:	je     0x14001ce94
   14001ce30:	inc    rbx
   14001ce33:	cmp    sil,0x5c
   14001ce37:	jne    0x14001ce70
   14001ce39:	movzx  edx,BYTE PTR [rbx]
   14001ce3c:	inc    rbx
   14001ce3f:	cmp    dl,0x47
   14001ce42:	je     0x14001ce50
   14001ce44:	mov    BYTE PTR [rcx],sil
   14001ce47:	mov    BYTE PTR [rcx+0x1],dl
   14001ce4a:	add    rcx,0x2
   14001ce4e:	jmp    0x14001ce76
   14001ce50:	movzx  eax,BYTE PTR [rdi]
   14001ce53:	mov    BYTE PTR [rcx],al
   14001ce55:	test   al,al
   14001ce57:	je     0x14001ce76
   14001ce59:	mov    rdx,rdi
   14001ce5c:	sub    rdx,rcx
   14001ce5f:	nop
   14001ce60:	movzx  eax,BYTE PTR [rdx+rcx*1+0x1]
   14001ce65:	inc    rcx
   14001ce68:	mov    BYTE PTR [rcx],al
   14001ce6a:	test   al,al
   14001ce6c:	jne    0x14001ce60
   14001ce6e:	jmp    0x14001ce76
   14001ce70:	mov    BYTE PTR [rcx],sil
   14001ce73:	inc    rcx
   14001ce76:	movzx  esi,BYTE PTR [rbx]
   14001ce79:	test   sil,sil
   14001ce7c:	jne    0x14001ce30
   14001ce7e:	mov    BYTE PTR [rcx],sil
   14001ce81:	mov    rax,r8
   14001ce84:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ce89:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ce8e:	add    rsp,0x20
   14001ce92:	pop    rdi
   14001ce93:	ret    
   14001ce94:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ce99:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ce9e:	mov    BYTE PTR [rax],0x0
   14001cea1:	add    rsp,0x20
   14001cea5:	pop    rdi
   14001cea6:	ret    
   14001cea7:	int3   
   14001cea8:	int3   
   14001cea9:	int3   
   14001ceaa:	int3   
   14001ceab:	int3   
   14001ceac:	int3   
   14001cead:	int3   
   14001ceae:	int3   
   14001ceaf:	int3   
   14001ceb0:	mov    QWORD PTR [rsp+0x8],rbx
   14001ceb5:	mov    QWORD PTR [rsp+0x10],rsi
   14001ceba:	mov    QWORD PTR [rsp+0x18],rdi
   14001cebf:	push   r14
   14001cec1:	sub    rsp,0x20
   14001cec5:	movzx  edi,BYTE PTR [rcx]
   14001cec8:	xor    esi,esi
   14001ceca:	mov    rbx,rcx
   14001cecd:	mov    r14d,esi
   14001ced0:	mov    eax,esi
   14001ced2:	mov    r8d,esi
   14001ced5:	mov    r9d,esi
   14001ced8:	mov    r11,rcx
   14001cedb:	movzx  r10d,dil
   14001cedf:	test   dil,dil
   14001cee2:	je     0x14001cf4b
   14001cee4:	inc    r11
   14001cee7:	cmp    r10b,0x5c
   14001ceeb:	jne    0x14001cf3f
   14001ceed:	movsx  ecx,BYTE PTR [r11]
   14001cef1:	inc    r11
   14001cef4:	cmp    ecx,0x47
   14001cef7:	je     0x14001cf20
   14001cef9:	cmp    ecx,0x4e
   14001cefc:	je     0x14001cf04
   14001cefe:	add    r9d,0x2
   14001cf02:	jmp    0x14001cf42
   14001cf04:	test   r14,r14
   14001cf07:	jne    0x14001cf1b
   14001cf09:	mov    r14,QWORD PTR [rdx+0x10]
   14001cf0d:	or     r8,0xffffffffffffffff
   14001cf11:	inc    r8
   14001cf14:	cmp    BYTE PTR [r14+r8*1],0x0
   14001cf19:	jne    0x14001cf11
   14001cf1b:	add    r9d,r8d
   14001cf1e:	jmp    0x14001cf42
   14001cf20:	test   rsi,rsi
   14001cf23:	jne    0x14001cf3a
   14001cf25:	mov    rax,QWORD PTR [rdx+0x20]
   14001cf29:	mov    rsi,QWORD PTR [rax+0x10]
   14001cf2d:	or     rax,0xffffffffffffffff
   14001cf31:	inc    rax
   14001cf34:	cmp    BYTE PTR [rsi+rax*1],0x0
   14001cf38:	jne    0x14001cf31
   14001cf3a:	add    r9d,eax
   14001cf3d:	jmp    0x14001cf42
   14001cf3f:	inc    r9d
   14001cf42:	movzx  r10d,BYTE PTR [r11]
   14001cf46:	test   r10b,r10b
   14001cf49:	jne    0x14001cee4
   14001cf4b:	lea    eax,[r9+0x1]
   14001cf4f:	movsxd rcx,eax
   14001cf52:	call   QWORD PTR [rip+0x20210]        # 0x14003d168
   14001cf58:	mov    r9,rax
   14001cf5b:	mov    rcx,rax
   14001cf5e:	test   dil,dil
   14001cf61:	je     0x14001cfe6
   14001cf67:	inc    rbx
   14001cf6a:	cmp    dil,0x5c
   14001cf6e:	jne    0x14001cfd0
   14001cf70:	movsx  edx,BYTE PTR [rbx]
   14001cf73:	inc    rbx
   14001cf76:	mov    r8d,edx
   14001cf79:	cmp    edx,0x47
   14001cf7c:	je     0x14001cfb0
   14001cf7e:	cmp    edx,0x4e
   14001cf81:	je     0x14001cf8f
   14001cf83:	mov    BYTE PTR [rcx],dil
   14001cf86:	mov    BYTE PTR [rcx+0x1],dl
   14001cf89:	add    rcx,0x2
   14001cf8d:	jmp    0x14001cfd6
   14001cf8f:	movzx  eax,BYTE PTR [r14]
   14001cf93:	mov    BYTE PTR [rcx],al
   14001cf95:	test   al,al
   14001cf97:	je     0x14001cfd6
   14001cf99:	mov    rdx,r14
   14001cf9c:	sub    rdx,rcx
   14001cf9f:	nop
   14001cfa0:	movzx  eax,BYTE PTR [rdx+rcx*1+0x1]
   14001cfa5:	inc    rcx
   14001cfa8:	mov    BYTE PTR [rcx],al
   14001cfaa:	test   al,al
   14001cfac:	jne    0x14001cfa0
   14001cfae:	jmp    0x14001cfd6
   14001cfb0:	movzx  eax,BYTE PTR [rsi]
   14001cfb3:	mov    BYTE PTR [rcx],al
   14001cfb5:	test   al,al
   14001cfb7:	je     0x14001cfd6
   14001cfb9:	mov    rdx,rsi
   14001cfbc:	sub    rdx,rcx
   14001cfbf:	nop
   14001cfc0:	movzx  eax,BYTE PTR [rdx+rcx*1+0x1]
   14001cfc5:	inc    rcx
   14001cfc8:	mov    BYTE PTR [rcx],al
   14001cfca:	test   al,al
   14001cfcc:	jne    0x14001cfc0
   14001cfce:	jmp    0x14001cfd6
   14001cfd0:	mov    BYTE PTR [rcx],dil
   14001cfd3:	inc    rcx
   14001cfd6:	movzx  edi,BYTE PTR [rbx]
   14001cfd9:	test   dil,dil
   14001cfdc:	jne    0x14001cf67
   14001cfde:	mov    BYTE PTR [rcx],dil
   14001cfe1:	mov    rax,r9
   14001cfe4:	jmp    0x14001cfe9
   14001cfe6:	mov    BYTE PTR [rax],0x0
   14001cfe9:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cfee:	mov    rsi,QWORD PTR [rsp+0x38]
   14001cff3:	mov    rdi,QWORD PTR [rsp+0x40]
   14001cff8:	add    rsp,0x20
   14001cffc:	pop    r14
   14001cffe:	ret    
   14001cfff:	int3   
   14001d000:	mov    QWORD PTR [rsp+0x8],rbx
   14001d005:	mov    QWORD PTR [rsp+0x10],rbp
   14001d00a:	mov    QWORD PTR [rsp+0x20],rsi
   14001d00f:	push   rdi
   14001d010:	push   r14
   14001d012:	push   r15
   14001d014:	sub    rsp,0x20
   14001d018:	mov    ebp,r8d
   14001d01b:	mov    rsi,rdx
   14001d01e:	mov    r15,rcx
   14001d021:	test   r8d,r8d
   14001d024:	je     0x14001d07e
   14001d026:	sub    r15,rdx
   14001d029:	nop    DWORD PTR [rax+0x0]
   14001d030:	movsx  edi,BYTE PTR [r15+rsi*1]
   14001d035:	movzx  ebx,BYTE PTR [rsi]
   14001d038:	dec    ebp
   14001d03a:	mov    ecx,edi
   14001d03c:	lea    rsi,[rsi+0x1]
   14001d040:	mov    r14d,edi
   14001d043:	call   QWORD PTR [rip+0x200d7]        # 0x14003d120
   14001d049:	test   eax,eax
   14001d04b:	je     0x14001d057
   14001d04d:	mov    ecx,edi
   14001d04f:	call   QWORD PTR [rip+0x200d3]        # 0x14003d128
   14001d055:	mov    edi,eax
   14001d057:	movsx  r14d,bl
   14001d05b:	mov    ecx,r14d
   14001d05e:	call   QWORD PTR [rip+0x200bc]        # 0x14003d120
   14001d064:	test   eax,eax
   14001d066:	je     0x14001d073
   14001d068:	mov    ecx,r14d
   14001d06b:	call   QWORD PTR [rip+0x200b7]        # 0x14003d128
   14001d071:	mov    ebx,eax
   14001d073:	cmp    dil,bl
   14001d076:	jne    0x14001d088
   14001d078:	test   ebp,ebp
   14001d07a:	jne    0x14001d030
   14001d07c:	jmp    0x14001d088
   14001d07e:	movzx  edi,BYTE PTR [rsp+0x50]
   14001d083:	movzx  ebx,BYTE PTR [rsp+0x50]
   14001d088:	mov    rbp,QWORD PTR [rsp+0x48]
   14001d08d:	mov    rsi,QWORD PTR [rsp+0x58]
   14001d092:	movsx  ecx,bl
   14001d095:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d09a:	movsx  eax,dil
   14001d09e:	sub    eax,ecx
   14001d0a0:	add    rsp,0x20
   14001d0a4:	pop    r15
   14001d0a6:	pop    r14
   14001d0a8:	pop    rdi
   14001d0a9:	ret    
   14001d0aa:	int3   
   14001d0ab:	int3   
   14001d0ac:	int3   
   14001d0ad:	int3   
   14001d0ae:	int3   
   14001d0af:	int3   
   14001d0b0:	mov    QWORD PTR [rsp+0x8],rcx
   14001d0b5:	sub    DWORD PTR [rsp+0x8],edx
   14001d0b9:	shr    rdx,0x20
   14001d0bd:	sub    DWORD PTR [rsp+0xc],edx
   14001d0c1:	mov    rax,QWORD PTR [rsp+0x8]
   14001d0c6:	ret    
   14001d0c7:	int3   
   14001d0c8:	int3   
   14001d0c9:	int3   
   14001d0ca:	int3   
   14001d0cb:	int3   
   14001d0cc:	int3   
   14001d0cd:	int3   
   14001d0ce:	int3   
   14001d0cf:	int3   
   14001d0d0:	mov    eax,DWORD PTR [rip+0x36772]        # 0x140053848
   14001d0d6:	ret    
   14001d0d7:	int3   
   14001d0d8:	int3   
   14001d0d9:	int3   
   14001d0da:	int3   
   14001d0db:	int3   
   14001d0dc:	int3   
   14001d0dd:	int3   
   14001d0de:	int3   
   14001d0df:	int3   
   14001d0e0:	xor    eax,eax
   14001d0e2:	cmp    DWORD PTR [rip+0x36760],eax        # 0x140053848
   14001d0e8:	sete   al
   14001d0eb:	mov    DWORD PTR [rip+0x36757],eax        # 0x140053848
   14001d0f1:	ret    
   14001d0f2:	int3   
   14001d0f3:	int3   
   14001d0f4:	int3   
   14001d0f5:	int3   
   14001d0f6:	int3   
   14001d0f7:	int3   
   14001d0f8:	int3   
   14001d0f9:	int3   
   14001d0fa:	int3   
   14001d0fb:	int3   
   14001d0fc:	int3   
   14001d0fd:	int3   
   14001d0fe:	int3   
   14001d0ff:	int3   
   14001d100:	lea    rax,[rip+0x21861]        # 0x14003e968
   14001d107:	ret    
   14001d108:	int3   
   14001d109:	int3   
   14001d10a:	int3   
   14001d10b:	int3   
   14001d10c:	int3   
   14001d10d:	int3   
   14001d10e:	int3   
   14001d10f:	int3   
   14001d110:	movzx  eax,BYTE PTR [rcx+0x1]
   14001d114:	inc    rcx
   14001d117:	cmp    al,0x23
   14001d119:	jne    0x14001d13e
   14001d11b:	movzx  eax,BYTE PTR [rcx+0x1]
   14001d11f:	inc    rcx
   14001d122:	cmp    al,0x30
   14001d124:	jl     0x14001d151
   14001d126:	cmp    al,0x39
   14001d128:	jg     0x14001d151
   14001d12a:	movzx  eax,BYTE PTR [rcx+0x1]
   14001d12e:	inc    rcx
   14001d131:	cmp    al,0x30
   14001d133:	jge    0x14001d126
   14001d135:	xor    eax,eax
   14001d137:	cmp    BYTE PTR [rcx],0x3b
   14001d13a:	sete   al
   14001d13d:	ret    
   14001d13e:	cmp    al,0x61
   14001d140:	jl     0x14001d151
   14001d142:	cmp    al,0x7a
   14001d144:	jg     0x14001d151
   14001d146:	movzx  eax,BYTE PTR [rcx+0x1]
   14001d14a:	inc    rcx
   14001d14d:	cmp    al,0x61
   14001d14f:	jge    0x14001d142
   14001d151:	xor    eax,eax
   14001d153:	cmp    BYTE PTR [rcx],0x3b
   14001d156:	sete   al
   14001d159:	ret    
   14001d15a:	int3   
   14001d15b:	int3   
   14001d15c:	int3   
   14001d15d:	int3   
   14001d15e:	int3   
   14001d15f:	int3   
   14001d160:	mov    QWORD PTR [rsp+0x8],rbx
   14001d165:	mov    QWORD PTR [rsp+0x10],rsi
   14001d16a:	push   rdi
   14001d16b:	sub    rsp,0x20
   14001d16f:	mov    r9,QWORD PTR [rip+0x3668a]        # 0x140053800
   14001d176:	xor    esi,esi
   14001d178:	mov    rbx,rcx
   14001d17b:	test   r9,r9
   14001d17e:	jne    0x14001d19f
   14001d180:	mov    edi,0x40
   14001d185:	mov    ecx,edi
   14001d187:	mov    DWORD PTR [rip+0x3667b],edi        # 0x140053808
   14001d18d:	call   QWORD PTR [rip+0x1ffd5]        # 0x14003d168
   14001d193:	mov    r9,rax
   14001d196:	mov    QWORD PTR [rip+0x36663],rax        # 0x140053800
   14001d19d:	jmp    0x14001d1a5
   14001d19f:	mov    edi,DWORD PTR [rip+0x36663]        # 0x140053808
   14001d1a5:	mov    rdx,r9
   14001d1a8:	cmp    BYTE PTR [rbx],sil
   14001d1ab:	je     0x14001d2a7
   14001d1b1:	inc    rbx
   14001d1b4:	lea    eax,[rdi-0x8]
   14001d1b7:	cmp    esi,eax
   14001d1b9:	jle    0x14001d1dc
   14001d1bb:	lea    eax,[rdi+rdi*1]
   14001d1be:	mov    rcx,r9
   14001d1c1:	movsxd rdi,eax
   14001d1c4:	mov    rdx,rdi
   14001d1c7:	mov    DWORD PTR [rip+0x3663b],edi        # 0x140053808
   14001d1cd:	call   QWORD PTR [rip+0x1fed5]        # 0x14003d0a8
   14001d1d3:	movsxd rdx,esi
   14001d1d6:	mov    r9,rax
   14001d1d9:	add    rdx,rax
   14001d1dc:	movzx  eax,BYTE PTR [rbx-0x1]
   14001d1e0:	lea    r8,[rbx-0x1]
   14001d1e4:	cmp    al,0x3c
   14001d1e6:	jne    0x14001d1f6
   14001d1e8:	lea    r8,[rip+0x21761]        # 0x14003e950
   14001d1ef:	mov    ecx,0x4
   14001d1f4:	jmp    0x14001d269
   14001d1f6:	cmp    al,0x3e
   14001d1f8:	jne    0x14001d208
   14001d1fa:	lea    r8,[rip+0x21757]        # 0x14003e958
   14001d201:	mov    ecx,0x4
   14001d206:	jmp    0x14001d269
   14001d208:	cmp    al,0x26
   14001d20a:	jne    0x14001d264
   14001d20c:	movzx  ecx,BYTE PTR [rbx]
   14001d20f:	mov    rax,rbx
   14001d212:	cmp    cl,0x23
   14001d215:	jne    0x14001d237
   14001d217:	movzx  ecx,BYTE PTR [rbx+0x1]
   14001d21b:	lea    rax,[rbx+0x1]
   14001d21f:	cmp    cl,0x30
   14001d222:	jl     0x14001d251
   14001d224:	cmp    cl,0x39
   14001d227:	jg     0x14001d251
   14001d229:	movzx  ecx,BYTE PTR [rax+0x1]
   14001d22d:	inc    rax
   14001d230:	cmp    cl,0x30
   14001d233:	jge    0x14001d224
   14001d235:	jmp    0x14001d251
   14001d237:	cmp    cl,0x61
   14001d23a:	jl     0x14001d251
   14001d23c:	nop    DWORD PTR [rax+0x0]
   14001d240:	cmp    cl,0x7a
   14001d243:	jg     0x14001d251
   14001d245:	movzx  ecx,BYTE PTR [rax+0x1]
   14001d249:	inc    rax
   14001d24c:	cmp    cl,0x61
   14001d24f:	jge    0x14001d240
   14001d251:	cmp    BYTE PTR [rax],0x3b
   14001d254:	je     0x14001d264
   14001d256:	lea    r8,[rip+0x21703]        # 0x14003e960
   14001d25d:	mov    ecx,0x5
   14001d262:	jmp    0x14001d269
   14001d264:	mov    ecx,0x1
   14001d269:	sub    r8,rdx
   14001d26c:	add    esi,ecx
   14001d26e:	xchg   ax,ax
   14001d270:	movzx  eax,BYTE PTR [r8+rdx*1]
   14001d275:	inc    rdx
   14001d278:	mov    BYTE PTR [rdx-0x1],al
   14001d27b:	dec    ecx
   14001d27d:	jne    0x14001d270
   14001d27f:	inc    rbx
   14001d282:	cmp    BYTE PTR [rbx-0x1],cl
   14001d285:	jne    0x14001d1b4
   14001d28b:	mov    QWORD PTR [rip+0x3656e],r9        # 0x140053800
   14001d292:	mov    BYTE PTR [rdx],cl
   14001d294:	mov    rax,r9
   14001d297:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d29c:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d2a1:	add    rsp,0x20
   14001d2a5:	pop    rdi
   14001d2a6:	ret    
   14001d2a7:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d2ac:	mov    BYTE PTR [r9],sil
   14001d2af:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d2b4:	mov    rax,r9
   14001d2b7:	add    rsp,0x20
   14001d2bb:	pop    rdi
   14001d2bc:	ret    
   14001d2bd:	int3   
   14001d2be:	int3   
   14001d2bf:	int3   
   14001d2c0:	mov    QWORD PTR [rsp+0x8],rbx
   14001d2c5:	push   rdi
   14001d2c6:	sub    rsp,0x20
   14001d2ca:	mov    rdi,rcx
   14001d2cd:	call   QWORD PTR [rip+0x1fe95]        # 0x14003d168
   14001d2d3:	mov    rbx,rax
   14001d2d6:	test   rdi,rdi
   14001d2d9:	jne    0x14001d2e8
   14001d2db:	xor    eax,eax
   14001d2dd:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d2e2:	add    rsp,0x20
   14001d2e6:	pop    rdi
   14001d2e7:	ret    
   14001d2e8:	test   rax,rax
   14001d2eb:	jne    0x14001d30b
   14001d2ed:	call   QWORD PTR [rip+0x1ffdd]        # 0x14003d2d0
   14001d2f3:	lea    rdx,[rip+0x2157e]        # 0x14003e878
   14001d2fa:	lea    rcx,[rax+0x60]
   14001d2fe:	call   QWORD PTR [rip+0x1ffbc]        # 0x14003d2c0
   14001d304:	call   QWORD PTR [rip+0x1fd96]        # 0x14003d0a0
   14001d30a:	int3   
   14001d30b:	mov    r8,rdi
   14001d30e:	xor    edx,edx
   14001d310:	mov    rcx,rax
   14001d313:	call   0x14003b896
   14001d318:	mov    rax,rbx
   14001d31b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d320:	add    rsp,0x20
   14001d324:	pop    rdi
   14001d325:	ret    
   14001d326:	int3   
   14001d327:	int3   
   14001d328:	int3   
   14001d329:	int3   
   14001d32a:	int3   
   14001d32b:	int3   
   14001d32c:	int3   
   14001d32d:	int3   
   14001d32e:	int3   
   14001d32f:	int3   
   14001d330:	mov    QWORD PTR [rsp+0x8],rbx
   14001d335:	mov    QWORD PTR [rsp+0x10],rbp
   14001d33a:	mov    QWORD PTR [rsp+0x18],rsi
   14001d33f:	push   rdi
   14001d340:	sub    rsp,0x20
   14001d344:	mov    rdi,rdx
   14001d347:	imul   rdx,r8
   14001d34b:	mov    rbp,r9
   14001d34e:	mov    rbx,r8
   14001d351:	call   QWORD PTR [rip+0x1fd51]        # 0x14003d0a8
   14001d357:	mov    rsi,rax
   14001d35a:	cmp    rbp,rdi
   14001d35d:	jae    0x14001d37b
   14001d35f:	sub    rdi,rbp
   14001d362:	xor    edx,edx
   14001d364:	imul   rdi,rbx
   14001d368:	imul   rbx,rbp
   14001d36c:	mov    r8,rdi
   14001d36f:	lea    rcx,[rax+rbx*1]
   14001d373:	call   0x14003b896
   14001d378:	mov    rax,rsi
   14001d37b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d380:	mov    rbp,QWORD PTR [rsp+0x38]
   14001d385:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d38a:	add    rsp,0x20
   14001d38e:	pop    rdi
   14001d38f:	ret    
   14001d390:	lea    rcx,[rip+0x365c9]        # 0x140053960
   14001d397:	jmp    0x14001fda0
   14001d39c:	int3   
   14001d39d:	int3   
   14001d39e:	int3   
   14001d39f:	int3   
   14001d3a0:	rex push rdi
   14001d3a2:	sub    rsp,0x20
   14001d3a6:	cmp    DWORD PTR [rip+0x364b3],0x0        # 0x140053860
   14001d3ad:	mov    rdi,rcx
   14001d3b0:	jg     0x14001d3bd
   14001d3b2:	mov    eax,0x1
   14001d3b7:	add    rsp,0x20
   14001d3bb:	pop    rdi
   14001d3bc:	ret    
   14001d3bd:	lea    rdx,[rip+0x212b8]        # 0x14003e67c
   14001d3c4:	mov    QWORD PTR [rsp+0x30],rbx
   14001d3c9:	call   0x140027500
   14001d3ce:	lea    r8,[rip+0x20043]        # 0x14003d418
   14001d3d5:	mov    rcx,rdi
   14001d3d8:	mov    rdx,rax
   14001d3db:	call   0x14001c3e0
   14001d3e0:	mov    rcx,rax
   14001d3e3:	mov    rbx,rax
   14001d3e6:	call   0x14001f3a0
   14001d3eb:	test   eax,eax
   14001d3ed:	jne    0x14001d432
   14001d3ef:	cmp    BYTE PTR [rbx],al
   14001d3f1:	jne    0x14001d425
   14001d3f3:	mov    rcx,rdi
   14001d3f6:	call   0x14002a4e0
   14001d3fb:	mov    rbx,rax
   14001d3fe:	test   rax,rax
   14001d401:	je     0x14001d425
   14001d403:	mov    rdx,rbx
   14001d406:	mov    rcx,rdi
   14001d409:	call   0x14001ede0
   14001d40e:	test   eax,eax
   14001d410:	jne    0x14001d432
   14001d412:	mov    rdx,rbx
   14001d415:	mov    rcx,rdi
   14001d418:	call   0x14002a5e0
   14001d41d:	mov    rbx,rax
   14001d420:	test   rax,rax
   14001d423:	jne    0x14001d403
   14001d425:	xor    eax,eax
   14001d427:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d42c:	add    rsp,0x20
   14001d430:	pop    rdi
   14001d431:	ret    
   14001d432:	mov    eax,0x1
   14001d437:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d43c:	add    rsp,0x20
   14001d440:	pop    rdi
   14001d441:	ret    
   14001d442:	int3   
   14001d443:	int3   
   14001d444:	int3   
   14001d445:	int3   
   14001d446:	int3   
   14001d447:	int3   
   14001d448:	int3   
   14001d449:	int3   
   14001d44a:	int3   
   14001d44b:	int3   
   14001d44c:	int3   
   14001d44d:	int3   
   14001d44e:	int3   
   14001d44f:	int3   
   14001d450:	push   r13
   14001d452:	sub    rsp,0x90
   14001d459:	cmp    DWORD PTR [rip+0x363f4],0x1        # 0x140053854
   14001d460:	mov    r13,rcx
   14001d463:	jne    0x14001d474
   14001d465:	mov    eax,0x1
   14001d46a:	add    rsp,0x90
   14001d471:	pop    r13
   14001d473:	ret    
   14001d474:	mov    rax,QWORD PTR [rcx+0x28]
   14001d478:	test   rax,rax
   14001d47b:	jne    0x14001d487
   14001d47d:	add    rsp,0x90
   14001d484:	pop    r13
   14001d486:	ret    
   14001d487:	mov    QWORD PTR [rsp+0xa0],rbx
   14001d48f:	mov    QWORD PTR [rsp+0xa8],rbp
   14001d497:	mov    QWORD PTR [rsp+0xb0],rsi
   14001d49f:	mov    QWORD PTR [rsp+0xb8],rdi
   14001d4a7:	mov    QWORD PTR [rsp+0x88],r14
   14001d4af:	xor    r14d,r14d
   14001d4b2:	mov    QWORD PTR [rsp+0x80],r15
   14001d4ba:	cmp    DWORD PTR [rax+0x8],r14d
   14001d4be:	jle    0x14001d56b
   14001d4c4:	xor    r15d,r15d
   14001d4c7:	nop    WORD PTR [rax+rax*1+0x0]
   14001d4d0:	mov    rax,QWORD PTR [rax]
   14001d4d3:	xor    edi,edi
   14001d4d5:	xor    ebx,ebx
   14001d4d7:	movups xmm2,XMMWORD PTR [rax+r15*1]
   14001d4dc:	movups xmm1,XMMWORD PTR [rax+r15*1+0x10]
   14001d4e2:	movsd  xmm0,QWORD PTR [rax+r15*1+0x20]
   14001d4e9:	movq   rsi,xmm2
   14001d4ee:	psrldq xmm2,0x8
   14001d4f3:	movsd  QWORD PTR [rsp+0x70],xmm0
   14001d4f9:	movd   eax,xmm2
   14001d4fd:	mov    rdx,QWORD PTR [rsi]
   14001d500:	movups XMMWORD PTR [rsp+0x60],xmm1
   14001d505:	movsxd rbp,eax
   14001d508:	test   eax,eax
   14001d50a:	jle    0x14001d556
   14001d50c:	nop    DWORD PTR [rax+0x0]
   14001d510:	movsxd r8,edi
   14001d513:	lea    rcx,[rsp+0x40]
   14001d518:	mov    r8,QWORD PTR [rsi+r8*8]
   14001d51c:	call   0x14001c570
   14001d521:	lea    rdx,[rsp+0x20]
   14001d526:	lea    rcx,[rsp+0x30]
   14001d52b:	movups xmm1,XMMWORD PTR [rip+0x3637e]        # 0x1400538b0
   14001d532:	movups xmm0,XMMWORD PTR [rax]
   14001d535:	movaps XMMWORD PTR [rsp+0x30],xmm1
   14001d53a:	movaps XMMWORD PTR [rsp+0x20],xmm0
   14001d53f:	call   0x14001c670
   14001d544:	test   eax,eax
   14001d546:	jne    0x14001d578
   14001d548:	mov    rdx,QWORD PTR [rsi+rbx*8]
   14001d54c:	inc    rbx
   14001d54f:	inc    edi
   14001d551:	cmp    rbx,rbp
   14001d554:	jl     0x14001d510
   14001d556:	mov    rax,QWORD PTR [r13+0x28]
   14001d55a:	inc    r14d
   14001d55d:	add    r15,0x28
   14001d561:	cmp    r14d,DWORD PTR [rax+0x8]
   14001d565:	jl     0x14001d4d0
   14001d56b:	mov    rbx,QWORD PTR [r13+0x60]
   14001d56f:	test   rbx,rbx
   14001d572:	jne    0x14001d57f
   14001d574:	xor    eax,eax
   14001d576:	jmp    0x14001d5eb
   14001d578:	mov    eax,0x1
   14001d57d:	jmp    0x14001d5eb
   14001d57f:	movups xmm0,XMMWORD PTR [rbx+0x20]
   14001d583:	lea    rcx,[rsp+0x30]
   14001d588:	movaps XMMWORD PTR [rsp+0x30],xmm0
   14001d58d:	call   0x14001bbc0
   14001d592:	movups xmm1,XMMWORD PTR [rip+0x36317]        # 0x1400538b0
   14001d599:	mov    rcx,rax
   14001d59c:	cdq    
   14001d59d:	sub    eax,edx
   14001d59f:	mov    edx,DWORD PTR [rbx+0x30]
   14001d5a2:	shr    rcx,0x20
   14001d5a6:	sar    eax,1
   14001d5a8:	sub    edx,eax
   14001d5aa:	add    eax,DWORD PTR [rbx+0x30]
   14001d5ad:	mov    DWORD PTR [rsp+0x28],eax
   14001d5b1:	mov    eax,ecx
   14001d5b3:	mov    ecx,DWORD PTR [rbx+0x34]
   14001d5b6:	mov    DWORD PTR [rsp+0x20],edx
   14001d5ba:	cdq    
   14001d5bb:	sub    eax,edx
   14001d5bd:	lea    rdx,[rsp+0x30]
   14001d5c2:	sar    eax,1
   14001d5c4:	sub    ecx,eax
   14001d5c6:	add    eax,DWORD PTR [rbx+0x34]
   14001d5c9:	mov    DWORD PTR [rsp+0x24],ecx
   14001d5cd:	mov    DWORD PTR [rsp+0x2c],eax
   14001d5d1:	lea    rcx,[rsp+0x20]
   14001d5d6:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001d5db:	movaps XMMWORD PTR [rsp+0x20],xmm1
   14001d5e0:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001d5e6:	call   0x14001c670
   14001d5eb:	mov    r14,QWORD PTR [rsp+0x88]
   14001d5f3:	mov    rdi,QWORD PTR [rsp+0xb8]
   14001d5fb:	mov    rsi,QWORD PTR [rsp+0xb0]
   14001d603:	mov    rbp,QWORD PTR [rsp+0xa8]
   14001d60b:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001d613:	mov    r15,QWORD PTR [rsp+0x80]
   14001d61b:	add    rsp,0x90
   14001d622:	pop    r13
   14001d624:	ret    
   14001d625:	int3   
   14001d626:	int3   
   14001d627:	int3   
   14001d628:	int3   
   14001d629:	int3   
   14001d62a:	int3   
   14001d62b:	int3   
   14001d62c:	int3   
   14001d62d:	int3   
   14001d62e:	int3   
   14001d62f:	int3   
   14001d630:	rex push rdi
   14001d632:	sub    rsp,0x20
   14001d636:	cmp    DWORD PTR [rip+0x36223],0x0        # 0x140053860
   14001d63d:	mov    rdi,rdx
   14001d640:	jg     0x14001d64d
   14001d642:	mov    eax,0x1
   14001d647:	add    rsp,0x20
   14001d64b:	pop    rdi
   14001d64c:	ret    
   14001d64d:	mov    rdx,QWORD PTR [rip+0x37cdc]        # 0x140055330
   14001d654:	lea    r8,[rip+0x1fdbd]        # 0x14003d418
   14001d65b:	mov    rcx,rdi
   14001d65e:	mov    QWORD PTR [rsp+0x30],rbx
   14001d663:	call   0x14001c3e0
   14001d668:	mov    rcx,rax
   14001d66b:	mov    rbx,rax
   14001d66e:	call   0x14001f3a0
   14001d673:	test   eax,eax
   14001d675:	jne    0x14001d6c7
   14001d677:	cmp    BYTE PTR [rbx],al
   14001d679:	jne    0x14001d6ba
   14001d67b:	xor    ebx,ebx
   14001d67d:	nop    DWORD PTR [rax]
   14001d680:	cmp    ebx,0x1
   14001d683:	jge    0x14001d68b
   14001d685:	mov    rcx,QWORD PTR [rdi+0x18]
   14001d689:	jmp    0x14001d68f
   14001d68b:	mov    rcx,QWORD PTR [rdi+0x10]
   14001d68f:	mov    rdx,QWORD PTR [rip+0x37d32]        # 0x1400553c8
   14001d696:	lea    r8,[rip+0x1fd7b]        # 0x14003d418
   14001d69d:	call   0x14001c3e0
   14001d6a2:	cmp    BYTE PTR [rax],0x0
   14001d6a5:	je     0x14001d6c7
   14001d6a7:	mov    rcx,rax
   14001d6aa:	call   0x14001f3a0
   14001d6af:	test   eax,eax
   14001d6b1:	jne    0x14001d6c7
   14001d6b3:	inc    ebx
   14001d6b5:	cmp    ebx,0x2
   14001d6b8:	jl     0x14001d680
   14001d6ba:	xor    eax,eax
   14001d6bc:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d6c1:	add    rsp,0x20
   14001d6c5:	pop    rdi
   14001d6c6:	ret    
   14001d6c7:	mov    eax,0x1
   14001d6cc:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d6d1:	add    rsp,0x20
   14001d6d5:	pop    rdi
   14001d6d6:	ret    
   14001d6d7:	int3   
   14001d6d8:	int3   
   14001d6d9:	int3   
   14001d6da:	int3   
   14001d6db:	int3   
   14001d6dc:	int3   
   14001d6dd:	int3   
   14001d6de:	int3   
   14001d6df:	int3   
   14001d6e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001d6e5:	mov    QWORD PTR [rsp+0x10],rsi
   14001d6ea:	push   rdi
   14001d6eb:	sub    rsp,0x50
   14001d6ef:	mov    rbx,QWORD PTR [rcx]
   14001d6f2:	mov    rsi,rdx
   14001d6f5:	mov    rdi,rcx
   14001d6f8:	movzx  eax,BYTE PTR [rbx]
   14001d6fb:	test   al,al
   14001d6fd:	je     0x14001d7a9
   14001d703:	movsx  ecx,al
   14001d706:	call   QWORD PTR [rip+0x1f98c]        # 0x14003d098
   14001d70c:	test   eax,eax
   14001d70e:	je     0x14001d72b
   14001d710:	movzx  eax,BYTE PTR [rbx+0x1]
   14001d714:	inc    rbx
   14001d717:	test   al,al
   14001d719:	jne    0x14001d703
   14001d71b:	mov    rbx,QWORD PTR [rsp+0x60]
   14001d720:	mov    rsi,QWORD PTR [rsp+0x68]
   14001d725:	add    rsp,0x50
   14001d729:	pop    rdi
   14001d72a:	ret    
   14001d72b:	cmp    BYTE PTR [rbx],0x0
   14001d72e:	je     0x14001d7a9
   14001d730:	movups xmm0,XMMWORD PTR [rdi+0x20]
   14001d734:	lea    rcx,[rsp+0x20]
   14001d739:	movaps XMMWORD PTR [rsp+0x20],xmm0
   14001d73e:	call   0x14001bbc0
   14001d743:	mov    ecx,DWORD PTR [rdi+0x34]
   14001d746:	mov    rbx,rax
   14001d749:	shr    rax,0x20
   14001d74d:	cdq    
   14001d74e:	sub    eax,edx
   14001d750:	sar    eax,1
   14001d752:	sub    ecx,eax
   14001d754:	mov    eax,ebx
   14001d756:	cdq    
   14001d757:	sub    eax,edx
   14001d759:	mov    edx,ecx
   14001d75b:	sar    eax,1
   14001d75d:	add    eax,DWORD PTR [rdi+0x30]
   14001d760:	mov    ecx,eax
   14001d762:	call   0x14001c660
   14001d767:	mov    rdx,rax
   14001d76a:	mov    QWORD PTR [rsp+0x30],rax
   14001d76f:	sub    eax,ebx
   14001d771:	mov    ecx,eax
   14001d773:	shr    rdx,0x20
   14001d777:	call   0x14001c660
   14001d77c:	mov    rdx,QWORD PTR [rdi+0x30]
   14001d780:	mov    rcx,rsi
   14001d783:	mov    QWORD PTR [rsp+0x38],rax
   14001d788:	call   0x14001bcd0
   14001d78d:	lea    rcx,[rsp+0x30]
   14001d792:	mov    QWORD PTR [rsp+0x40],rax
   14001d797:	mov    rax,QWORD PTR [rip+0x37d4a]        # 0x1400554e8
   14001d79e:	mov    edx,0x3
   14001d7a3:	call   QWORD PTR [rax+0xd8]
   14001d7a9:	mov    rbx,QWORD PTR [rsp+0x60]
   14001d7ae:	mov    rsi,QWORD PTR [rsp+0x68]
   14001d7b3:	add    rsp,0x50
   14001d7b7:	pop    rdi
   14001d7b8:	ret    
   14001d7b9:	int3   
   14001d7ba:	int3   
   14001d7bb:	int3   
   14001d7bc:	int3   
   14001d7bd:	int3   
   14001d7be:	int3   
   14001d7bf:	int3   
   14001d7c0:	mov    QWORD PTR [rsp+0x8],rbx
   14001d7c5:	mov    QWORD PTR [rsp+0x18],r8
   14001d7ca:	mov    QWORD PTR [rsp+0x10],rdx
   14001d7cf:	push   rdi
   14001d7d0:	sub    rsp,0x40
   14001d7d4:	lea    rdx,[rip+0x2123d]        # 0x14003ea18
   14001d7db:	mov    rdi,rcx
   14001d7de:	call   0x1400275b0
   14001d7e3:	mov    rbx,rax
   14001d7e6:	test   rax,rax
   14001d7e9:	je     0x14001d873
   14001d7ef:	cmp    BYTE PTR [rax],0x0
   14001d7f2:	je     0x14001d873
   14001d7f4:	mov    r8,QWORD PTR [rdi+0x50]
   14001d7f8:	mov    ecx,DWORD PTR [rsp+0x58]
   14001d7fc:	mov    eax,DWORD PTR [rsp+0x5c]
   14001d800:	sub    ecx,DWORD PTR [r8+0x18]
   14001d804:	mov    DWORD PTR [rsp+0x28],ecx
   14001d808:	mov    DWORD PTR [rsp+0x20],ecx
   14001d80c:	mov    edx,DWORD PTR [r8+0x18]
   14001d810:	add    edx,DWORD PTR [rsp+0x60]
   14001d814:	mov    rcx,rbx
   14001d817:	mov    DWORD PTR [rsp+0x38],edx
   14001d81b:	mov    DWORD PTR [rsp+0x30],edx
   14001d81f:	mov    edx,DWORD PTR [rsp+0x64]
   14001d823:	add    edx,DWORD PTR [r8+0x1c]
   14001d827:	mov    DWORD PTR [rsp+0x34],edx
   14001d82b:	mov    DWORD PTR [rsp+0x2c],edx
   14001d82f:	sub    eax,DWORD PTR [r8+0x1c]
   14001d833:	mov    DWORD PTR [rsp+0x24],eax
   14001d837:	mov    DWORD PTR [rsp+0x3c],eax
   14001d83b:	mov    rax,QWORD PTR [rip+0x37ca6]        # 0x1400554e8
   14001d842:	call   QWORD PTR [rax+0xb0]
   14001d848:	mov    rax,QWORD PTR [rip+0x37c99]        # 0x1400554e8
   14001d84f:	mov    rcx,rbx
   14001d852:	call   QWORD PTR [rax+0xa8]
   14001d858:	mov    rax,QWORD PTR [rip+0x37c89]        # 0x1400554e8
   14001d85f:	mov    edx,0x4
   14001d864:	lea    r8d,[rdx-0x3]
   14001d868:	lea    rcx,[rsp+0x20]
   14001d86d:	call   QWORD PTR [rax+0xc8]
   14001d873:	mov    rbx,QWORD PTR [rsp+0x50]
   14001d878:	add    rsp,0x40
   14001d87c:	pop    rdi
   14001d87d:	ret    
   14001d87e:	int3   
   14001d87f:	int3   
   14001d880:	mov    QWORD PTR [rsp+0x8],rcx
   14001d885:	push   rsi
   14001d886:	sub    rsp,0x50
   14001d88a:	mov    esi,0x1
   14001d88f:	mov    rax,rcx
   14001d892:	cmp    DWORD PTR [rcx+0xdc],esi
   14001d898:	jl     0x14001dac2
   14001d89e:	mov    QWORD PTR [rsp+0x70],rbx
   14001d8a3:	mov    QWORD PTR [rsp+0x40],rdi
   14001d8a8:	mov    edi,0x8
   14001d8ad:	mov    QWORD PTR [rsp+0x68],rdi
   14001d8b2:	mov    QWORD PTR [rsp+0x48],rbp
   14001d8b7:	nop    WORD PTR [rax+rax*1+0x0]
   14001d8c0:	mov    rax,QWORD PTR [rax+0xe0]
   14001d8c7:	mov    rbx,QWORD PTR [rdi+rax*1]
   14001d8cb:	mov    rcx,rbx
   14001d8ce:	call   0x14001d3a0
   14001d8d3:	test   eax,eax
   14001d8d5:	je     0x14001da97
   14001d8db:	mov    rax,QWORD PTR [rip+0x37c06]        # 0x1400554e8
   14001d8e2:	mov    rcx,rbx
   14001d8e5:	call   QWORD PTR [rax+0x38]
   14001d8e8:	mov    rax,QWORD PTR [rip+0x37bf9]        # 0x1400554e8
   14001d8ef:	call   QWORD PTR [rax+0x88]
   14001d8f5:	lea    rdx,[rip+0x20ce8]        # 0x14003e5e4
   14001d8fc:	mov    rcx,rbx
   14001d8ff:	xor    ebp,ebp
   14001d901:	call   0x1400275b0
   14001d906:	test   rax,rax
   14001d909:	je     0x14001d962
   14001d90b:	cmp    BYTE PTR [rax],bpl
   14001d90e:	je     0x14001d962
   14001d910:	mov    rcx,rax
   14001d913:	call   0x14001f070
   14001d918:	mov    rdx,QWORD PTR [rip+0x37bc9]        # 0x1400554e8
   14001d91f:	mov    rcx,rax
   14001d922:	mov    rdi,rax
   14001d925:	call   QWORD PTR [rdx+0xb8]
   14001d92b:	mov    rdx,QWORD PTR [rdi]
   14001d92e:	xor    r8d,r8d
   14001d931:	test   rdx,rdx
   14001d934:	je     0x14001d95d
   14001d936:	lea    r9,[rip+0x210e3]        # 0x14003ea20
   14001d93d:	nop    DWORD PTR [rax]
   14001d940:	xor    ecx,ecx
   14001d942:	movzx  eax,BYTE PTR [rdx+rcx*1]
   14001d946:	inc    rcx
   14001d949:	cmp    al,BYTE PTR [r9+rcx*1-0x1]
   14001d94e:	jne    0x14001dac8
   14001d954:	cmp    rcx,0x7
   14001d958:	jne    0x14001d942
   14001d95a:	lea    ebp,[rcx-0x6]
   14001d95d:	mov    rdi,QWORD PTR [rsp+0x68]
   14001d962:	lea    rdx,[rip+0x210bf]        # 0x14003ea28
   14001d969:	mov    rcx,rbx
   14001d96c:	call   0x1400275b0
   14001d971:	test   rax,rax
   14001d974:	je     0x14001d97b
   14001d976:	cmp    BYTE PTR [rax],0x0
   14001d979:	jne    0x14001d9ad
   14001d97b:	lea    rdx,[rip+0x20c4a]        # 0x14003e5cc
   14001d982:	mov    rcx,rbx
   14001d985:	call   0x1400275b0
   14001d98a:	test   rax,rax
   14001d98d:	je     0x14001d994
   14001d98f:	cmp    BYTE PTR [rax],0x0
   14001d992:	jne    0x14001d9ad
   14001d994:	lea    rdx,[rip+0x2107d]        # 0x14003ea18
   14001d99b:	mov    rcx,rbx
   14001d99e:	call   0x1400275b0
   14001d9a3:	test   rax,rax
   14001d9a6:	je     0x14001d9bd
   14001d9a8:	cmp    BYTE PTR [rax],0x0
   14001d9ab:	je     0x14001d9bd
   14001d9ad:	mov    rcx,rax
   14001d9b0:	mov    rax,QWORD PTR [rip+0x37b31]        # 0x1400554e8
   14001d9b7:	call   QWORD PTR [rax+0xa8]
   14001d9bd:	lea    rdx,[rip+0x20c14]        # 0x14003e5d8
   14001d9c4:	mov    rcx,rbx
   14001d9c7:	call   0x1400275b0
   14001d9cc:	test   rax,rax
   14001d9cf:	je     0x14001d9d6
   14001d9d1:	cmp    BYTE PTR [rax],0x0
   14001d9d4:	jne    0x14001da0d
   14001d9d6:	lea    rdx,[rip+0x20bef]        # 0x14003e5cc
   14001d9dd:	mov    rcx,rbx
   14001d9e0:	call   0x1400275b0
   14001d9e5:	test   rax,rax
   14001d9e8:	je     0x14001d9ef
   14001d9ea:	cmp    BYTE PTR [rax],0x0
   14001d9ed:	jne    0x14001da0d
   14001d9ef:	lea    rdx,[rip+0x21022]        # 0x14003ea18
   14001d9f6:	mov    rcx,rbx
   14001d9f9:	call   0x1400275b0
   14001d9fe:	test   rax,rax
   14001da01:	je     0x14001da1d
   14001da03:	cmp    BYTE PTR [rax],0x0
   14001da06:	je     0x14001da1d
   14001da08:	mov    ebp,0x1
   14001da0d:	mov    rcx,rax
   14001da10:	mov    rax,QWORD PTR [rip+0x37ad1]        # 0x1400554e8
   14001da17:	call   QWORD PTR [rax+0xb0]
   14001da1d:	mov    rcx,QWORD PTR [rbx+0x60]
   14001da21:	mov    r8d,ebp
   14001da24:	mov    QWORD PTR [rsp+0x20],rcx
   14001da29:	mov    rdx,QWORD PTR [rbx+0x68]
   14001da2d:	shr    rcx,0x20
   14001da31:	mov    eax,edx
   14001da33:	mov    eax,DWORD PTR [rsp+0x20]
   14001da37:	mov    QWORD PTR [rsp+0x30],rdx
   14001da3c:	mov    DWORD PTR [rsp+0x28],edx
   14001da40:	shr    rdx,0x20
   14001da44:	mov    DWORD PTR [rsp+0x38],eax
   14001da48:	mov    rax,QWORD PTR [rip+0x37a99]        # 0x1400554e8
   14001da4f:	mov    DWORD PTR [rsp+0x2c],ecx
   14001da53:	mov    DWORD PTR [rsp+0x3c],edx
   14001da57:	lea    rcx,[rsp+0x20]
   14001da5c:	mov    edx,0x4
   14001da61:	call   QWORD PTR [rax+0xc8]
   14001da67:	mov    rcx,QWORD PTR [rbx+0x58]
   14001da6b:	test   rcx,rcx
   14001da6e:	je     0x14001da78
   14001da70:	mov    rdx,rbx
   14001da73:	call   0x14001e6c0
   14001da78:	mov    rax,QWORD PTR [rip+0x37a69]        # 0x1400554e8
   14001da7f:	call   QWORD PTR [rax+0x90]
   14001da85:	mov    rax,QWORD PTR [rip+0x37a5c]        # 0x1400554e8
   14001da8c:	call   QWORD PTR [rax+0x40]
   14001da8f:	mov    rcx,rbx
   14001da92:	call   0x14001d880
   14001da97:	mov    rax,QWORD PTR [rsp+0x60]
   14001da9c:	add    rdi,0x8
   14001daa0:	inc    esi
   14001daa2:	mov    QWORD PTR [rsp+0x68],rdi
   14001daa7:	cmp    esi,DWORD PTR [rax+0xdc]
   14001daad:	jle    0x14001d8c0
   14001dab3:	mov    rdi,QWORD PTR [rsp+0x40]
   14001dab8:	mov    rbp,QWORD PTR [rsp+0x48]
   14001dabd:	mov    rbx,QWORD PTR [rsp+0x70]
   14001dac2:	add    rsp,0x50
   14001dac6:	pop    rsi
   14001dac7:	ret    
   14001dac8:	mov    rdx,QWORD PTR [rdi+r8*8+0x8]
   14001dacd:	inc    r8
   14001dad0:	test   rdx,rdx
   14001dad3:	jne    0x14001d940
   14001dad9:	jmp    0x14001d95d
   14001dade:	int3   
   14001dadf:	int3   
   14001dae0:	sub    rsp,0x28
   14001dae4:	mov    rax,QWORD PTR [rip+0x379fd]        # 0x1400554e8
   14001daeb:	lea    rcx,[rip+0x20a02]        # 0x14003e4f4
   14001daf2:	call   QWORD PTR [rax+0xa8]
   14001daf8:	mov    rax,QWORD PTR [rip+0x379e9]        # 0x1400554e8
   14001daff:	lea    rcx,[rip+0x209ee]        # 0x14003e4f4
   14001db06:	call   QWORD PTR [rax+0xb0]
   14001db0c:	mov    rax,QWORD PTR [rip+0x379d5]        # 0x1400554e8
   14001db13:	mov    rcx,QWORD PTR [rip+0x35db6]        # 0x1400538d0
   14001db1a:	movsd  xmm1,QWORD PTR [rip+0x35da6]        # 0x1400538c8
   14001db22:	add    rsp,0x28
   14001db26:	rex.W jmp QWORD PTR [rax+0x98]
   14001db2d:	int3   
   14001db2e:	int3   
   14001db2f:	int3   
   14001db30:	rex push rbx
   14001db32:	push   rbp
   14001db33:	push   r13
   14001db35:	push   r15
   14001db37:	sub    rsp,0x88
   14001db3e:	xor    r15d,r15d
   14001db41:	mov    rbp,rcx
   14001db44:	xor    r13b,r13b
   14001db47:	mov    ebx,r15d
   14001db4a:	call   0x14001d450
   14001db4f:	test   eax,eax
   14001db51:	je     0x14001dea9
   14001db57:	mov    rcx,QWORD PTR [rbp+0x10]
   14001db5b:	mov    rdx,rbp
   14001db5e:	mov    rcx,QWORD PTR [rcx+0x20]
   14001db62:	call   0x14001d630
   14001db67:	test   eax,eax
   14001db69:	je     0x14001dea9
   14001db6f:	mov    rax,QWORD PTR [rip+0x37972]        # 0x1400554e8
   14001db76:	mov    rcx,rbp
   14001db79:	call   QWORD PTR [rax+0x78]
   14001db7c:	mov    rdx,QWORD PTR [rip+0x377d5]        # 0x140055358
   14001db83:	lea    r8,[rip+0x1f88e]        # 0x14003d418
   14001db8a:	mov    rcx,rbp
   14001db8d:	call   0x14001c3e0
   14001db92:	cmp    BYTE PTR [rax],bl
   14001db94:	je     0x14001dbe5
   14001db96:	mov    rcx,rax
   14001db99:	call   0x14001f070
   14001db9e:	mov    rbx,rax
   14001dba1:	mov    rdx,QWORD PTR [rax]
   14001dba4:	test   rdx,rdx
   14001dba7:	je     0x14001dbe1
   14001dba9:	lea    r8,[rip+0x20e84]        # 0x14003ea34
   14001dbb0:	add    rbx,0x8
   14001dbb4:	mov    rcx,r15
   14001dbb7:	nop    WORD PTR [rax+rax*1+0x0]
   14001dbc0:	movzx  eax,BYTE PTR [rdx+rcx*1]
   14001dbc4:	inc    rcx
   14001dbc7:	cmp    al,BYTE PTR [r8+rcx*1-0x1]
   14001dbcc:	jne    0x14001dbd9
   14001dbce:	cmp    rcx,0x6
   14001dbd2:	jne    0x14001dbc0
   14001dbd4:	jmp    0x14001de9c
   14001dbd9:	mov    rdx,QWORD PTR [rbx]
   14001dbdc:	test   rdx,rdx
   14001dbdf:	jne    0x14001dbb0
   14001dbe1:	add    rbx,0x8
   14001dbe5:	mov    rdx,QWORD PTR [rip+0x3779c]        # 0x140055388
   14001dbec:	lea    r8,[rip+0x1f825]        # 0x14003d418
   14001dbf3:	mov    rcx,rbp
   14001dbf6:	mov    QWORD PTR [rsp+0xb8],rdi
   14001dbfe:	movaps XMMWORD PTR [rsp+0x50],xmm8
   14001dc04:	call   0x14001c3e0
   14001dc09:	mov    rdx,QWORD PTR [rip+0x37730]        # 0x140055340
   14001dc10:	movsd  xmm2,QWORD PTR [rip+0x1f7c8]        # 0x14003d3e0
   14001dc18:	xorps  xmm3,xmm3
   14001dc1b:	mov    rcx,rbp
   14001dc1e:	mov    rdi,rax
   14001dc21:	call   0x14001c2e0
   14001dc26:	movaps xmm8,xmm0
   14001dc2a:	cmp    BYTE PTR [rdi],r15b
   14001dc2d:	jne    0x14001dc34
   14001dc2f:	test   rbx,rbx
   14001dc32:	je     0x14001dc7e
   14001dc34:	mov    rcx,QWORD PTR [rip+0x378ad]        # 0x1400554e8
   14001dc3b:	call   QWORD PTR [rcx+0x88]
   14001dc41:	test   rbx,rbx
   14001dc44:	je     0x14001dc56
   14001dc46:	mov    rax,QWORD PTR [rip+0x3789b]        # 0x1400554e8
   14001dc4d:	mov    rcx,rbx
   14001dc50:	call   QWORD PTR [rax+0xb8]
   14001dc56:	cmp    BYTE PTR [rdi],r15b
   14001dc59:	je     0x14001dc7b
   14001dc5b:	mov    rax,QWORD PTR [rip+0x37886]        # 0x1400554e8
   14001dc62:	mov    rcx,rdi
   14001dc65:	call   QWORD PTR [rax+0xa8]
   14001dc6b:	mov    rax,QWORD PTR [rip+0x37876]        # 0x1400554e8
   14001dc72:	mov    rcx,rdi
   14001dc75:	call   QWORD PTR [rax+0xb0]
   14001dc7b:	mov    r13b,0x1
   14001dc7e:	mov    rax,QWORD PTR [rbp+0x28]
   14001dc82:	test   rax,rax
   14001dc85:	je     0x14001de06
   14001dc8b:	cmp    DWORD PTR [rax+0x8],r15d
   14001dc8f:	jle    0x14001de06
   14001dc95:	mov    QWORD PTR [rsp+0x80],r14
   14001dc9d:	movaps XMMWORD PTR [rsp+0x70],xmm6
   14001dca2:	movsd  xmm6,QWORD PTR [rip+0x1fb9e]        # 0x14003d848
   14001dcaa:	movaps XMMWORD PTR [rsp+0x60],xmm7
   14001dcaf:	movsd  xmm7,QWORD PTR [rip+0x1fd71]        # 0x14003da28
   14001dcb7:	mov    QWORD PTR [rsp+0xb0],rsi
   14001dcbf:	mov    QWORD PTR [rsp+0xc0],r12
   14001dcc7:	mov    r14,r15
   14001dcca:	nop    WORD PTR [rax+rax*1+0x0]
   14001dcd0:	mov    rax,QWORD PTR [rax]
   14001dcd3:	movups xmm0,XMMWORD PTR [rax+r14*1]
   14001dcd8:	movups xmm1,XMMWORD PTR [rax+r14*1+0x10]
   14001dcde:	movups XMMWORD PTR [rsp+0x20],xmm0
   14001dce3:	movsd  xmm0,QWORD PTR [rax+r14*1+0x20]
   14001dcea:	movups XMMWORD PTR [rsp+0x30],xmm1
   14001dcef:	movsd  QWORD PTR [rsp+0x40],xmm0
   14001dcf5:	call   0x140018990
   14001dcfa:	test   eax,eax
   14001dcfc:	mov    rax,QWORD PTR [rip+0x377e5]        # 0x1400554e8
   14001dd03:	jne    0x14001ddb6
   14001dd09:	movsxd r12,DWORD PTR [rsp+0x28]
   14001dd0e:	mov    rdi,QWORD PTR [rsp+0x20]
   14001dd13:	xor    r9d,r9d
   14001dd16:	mov    edx,r12d
   14001dd19:	mov    rcx,rdi
   14001dd1c:	xor    r8d,r8d
   14001dd1f:	call   QWORD PTR [rax+0xd0]
   14001dd25:	mov    esi,DWORD PTR [rsp+0x2c]
   14001dd29:	test   esi,esi
   14001dd2b:	je     0x14001dd6a
   14001dd2d:	mov    rbx,QWORD PTR [rsp+0x34]
   14001dd32:	lea    eax,[rsi-0x20]
   14001dd35:	test   eax,0xffffffdf
   14001dd3a:	je     0x14001dd44
   14001dd3c:	mov    rcx,QWORD PTR [rdi]
   14001dd3f:	mov    rdx,rbx
   14001dd42:	jmp    0x14001dd4b
   14001dd44:	mov    rdx,QWORD PTR [rdi]
   14001dd47:	mov    rcx,QWORD PTR [rdi+0x8]
   14001dd4b:	call   0x14001b400
   14001dd50:	movaps xmm2,xmm8
   14001dd54:	mov    r9d,esi
   14001dd57:	mov    rcx,rbx
   14001dd5a:	divsd  xmm0,xmm6
   14001dd5e:	mulsd  xmm0,xmm7
   14001dd62:	movaps xmm1,xmm0
   14001dd65:	call   0x1400254b0
   14001dd6a:	mov    esi,DWORD PTR [rsp+0x30]
   14001dd6e:	test   esi,esi
   14001dd70:	je     0x14001ddcf
   14001dd72:	mov    rbx,QWORD PTR [rsp+0x3c]
   14001dd77:	lea    eax,[rsi-0x20]
   14001dd7a:	test   eax,0xffffffdf
   14001dd7f:	je     0x14001dd8b
   14001dd81:	mov    rcx,QWORD PTR [rdi+r12*8-0x8]
   14001dd86:	mov    rdx,rbx
   14001dd89:	jmp    0x14001dd95
   14001dd8b:	mov    rdx,QWORD PTR [rdi+r12*8-0x8]
   14001dd90:	mov    rcx,QWORD PTR [rdi+r12*8-0x10]
   14001dd95:	call   0x14001b400
   14001dd9a:	movaps xmm2,xmm8
   14001dd9e:	mov    r9d,esi
   14001dda1:	mov    rcx,rbx
   14001dda4:	divsd  xmm0,xmm6
   14001dda8:	mulsd  xmm0,xmm7
   14001ddac:	movaps xmm1,xmm0
   14001ddaf:	call   0x1400254b0
   14001ddb4:	jmp    0x14001ddcf
   14001ddb6:	mov    r9d,DWORD PTR [rsp+0x30]
   14001ddbb:	mov    r8d,DWORD PTR [rsp+0x2c]
   14001ddc0:	mov    edx,DWORD PTR [rsp+0x28]
   14001ddc4:	mov    rcx,QWORD PTR [rsp+0x20]
   14001ddc9:	call   QWORD PTR [rax+0xd0]
   14001ddcf:	mov    rax,QWORD PTR [rbp+0x28]
   14001ddd3:	inc    r15d
   14001ddd6:	add    r14,0x28
   14001ddda:	cmp    r15d,DWORD PTR [rax+0x8]
   14001ddde:	jl     0x14001dcd0
   14001dde4:	movaps xmm7,XMMWORD PTR [rsp+0x60]
   14001dde9:	movaps xmm6,XMMWORD PTR [rsp+0x70]
   14001ddee:	mov    r14,QWORD PTR [rsp+0x80]
   14001ddf6:	mov    r12,QWORD PTR [rsp+0xc0]
   14001ddfe:	mov    rsi,QWORD PTR [rsp+0xb0]
   14001de06:	mov    rcx,QWORD PTR [rbp+0x60]
   14001de0a:	movaps xmm8,XMMWORD PTR [rsp+0x50]
   14001de10:	mov    rdi,QWORD PTR [rsp+0xb8]
   14001de18:	test   rcx,rcx
   14001de1b:	je     0x14001de5e
   14001de1d:	mov    rdx,QWORD PTR [rbp+0x18]
   14001de21:	mov    rdx,QWORD PTR [rdx+0x20]
   14001de25:	call   0x14001e6c0
   14001de2a:	mov    rdx,QWORD PTR [rip+0x3751f]        # 0x140055350
   14001de31:	lea    r8,[rip+0x1ffa8]        # 0x14003dde0
   14001de38:	mov    rcx,rbp
   14001de3b:	call   0x14001c3e0
   14001de40:	mov    rcx,rax
   14001de43:	call   0x14001c4b0
   14001de48:	test   eax,eax
   14001de4a:	je     0x14001de5e
   14001de4c:	mov    rdx,QWORD PTR [rbp+0x28]
   14001de50:	test   rdx,rdx
   14001de53:	je     0x14001de5e
   14001de55:	mov    rcx,QWORD PTR [rbp+0x60]
   14001de59:	call   0x14001d6e0
   14001de5e:	mov    rcx,QWORD PTR [rbp+0x68]
   14001de62:	test   rcx,rcx
   14001de65:	je     0x14001de74
   14001de67:	mov    rdx,QWORD PTR [rbp+0x18]
   14001de6b:	mov    rdx,QWORD PTR [rdx+0x20]
   14001de6f:	call   0x14001e6c0
   14001de74:	mov    rcx,QWORD PTR [rbp+0x70]
   14001de78:	test   rcx,rcx
   14001de7b:	je     0x14001de8a
   14001de7d:	mov    rdx,QWORD PTR [rbp+0x18]
   14001de81:	mov    rdx,QWORD PTR [rdx+0x20]
   14001de85:	call   0x14001e6c0
   14001de8a:	test   r13b,r13b
   14001de8d:	je     0x14001de9c
   14001de8f:	mov    rax,QWORD PTR [rip+0x37652]        # 0x1400554e8
   14001de96:	call   QWORD PTR [rax+0x90]
   14001de9c:	mov    rax,QWORD PTR [rip+0x37645]        # 0x1400554e8
   14001dea3:	call   QWORD PTR [rax+0x80]
   14001dea9:	add    rsp,0x88
   14001deb0:	pop    r15
   14001deb2:	pop    r13
   14001deb4:	pop    rbp
   14001deb5:	pop    rbx
   14001deb6:	ret    
   14001deb7:	int3   
   14001deb8:	int3   
   14001deb9:	int3   
   14001deba:	int3   
   14001debb:	int3   
   14001debc:	int3   
   14001debd:	int3   
   14001debe:	int3   
   14001debf:	int3   
   14001dec0:	cmp    DWORD PTR [rip+0x35991],0x0        # 0x140053858
   14001dec7:	jle    0x14001ded4
   14001dec9:	mov    rax,QWORD PTR [rip+0x37618]        # 0x1400554e8
   14001ded0:	rex.W jmp QWORD PTR [rax+0x10]
   14001ded4:	ret    
   14001ded5:	int3   
   14001ded6:	int3   
   14001ded7:	int3   
   14001ded8:	int3   
   14001ded9:	int3   
   14001deda:	int3   
   14001dedb:	int3   
   14001dedc:	int3   
   14001dedd:	int3   
   14001dede:	int3   
   14001dedf:	int3   
   14001dee0:	mov    QWORD PTR [rsp+0x8],rbx
   14001dee5:	mov    QWORD PTR [rsp+0x10],rsi
   14001deea:	mov    QWORD PTR [rsp+0x20],rdi
   14001deef:	push   rbp
   14001def0:	push   r12
   14001def2:	push   r13
   14001def4:	push   r14
   14001def6:	push   r15
   14001def8:	lea    rbp,[rsp-0x1a0]
   14001df00:	sub    rsp,0x2a0
   14001df07:	mov    r12d,edx
   14001df0a:	mov    r14,rcx
   14001df0d:	call   0x14001e640
   14001df12:	test   r12b,0x2
   14001df16:	je     0x14001e15c
   14001df1c:	mov    rax,QWORD PTR [rip+0x375c5]        # 0x1400554e8
   14001df23:	lea    rcx,[rip+0x205be]        # 0x14003e4e8
   14001df2a:	call   QWORD PTR [rax+0xb0]
   14001df30:	lea    rdx,[rip+0x20ae1]        # 0x14003ea18
   14001df37:	mov    rcx,r14
   14001df3a:	call   0x1400275b0
   14001df3f:	test   rax,rax
   14001df42:	je     0x14001df59
   14001df44:	cmp    BYTE PTR [rax],0x0
   14001df47:	je     0x14001df59
   14001df49:	mov    rcx,rax
   14001df4c:	mov    rax,QWORD PTR [rip+0x37595]        # 0x1400554e8
   14001df53:	call   QWORD PTR [rax+0xb0]
   14001df59:	lea    rdx,[rip+0x206b0]        # 0x14003e610
   14001df60:	mov    rcx,r14
   14001df63:	call   0x1400275b0
   14001df68:	test   rax,rax
   14001df6b:	je     0x14001df82
   14001df6d:	cmp    BYTE PTR [rax],0x0
   14001df70:	je     0x14001df82
   14001df72:	mov    rcx,rax
   14001df75:	mov    rax,QWORD PTR [rip+0x3756c]        # 0x1400554e8
   14001df7c:	call   QWORD PTR [rax+0xa8]
   14001df82:	mov    edi,0x1
   14001df87:	cmp    DWORD PTR [r14+0xdc],edi
   14001df8e:	jl     0x14001e039
   14001df94:	mov    esi,0x8
   14001df99:	nop    DWORD PTR [rax+0x0]
   14001dfa0:	mov    rax,QWORD PTR [r14+0xe0]
   14001dfa7:	lea    rdx,[rip+0x2061e]        # 0x14003e5cc
   14001dfae:	mov    rbx,QWORD PTR [rsi+rax*1]
   14001dfb2:	mov    rcx,rbx
   14001dfb5:	call   0x1400275b0
   14001dfba:	test   rax,rax
   14001dfbd:	je     0x14001dfd4
   14001dfbf:	cmp    BYTE PTR [rax],0x0
   14001dfc2:	je     0x14001dfd4
   14001dfc4:	mov    rcx,rax
   14001dfc7:	mov    rax,QWORD PTR [rip+0x3751a]        # 0x1400554e8
   14001dfce:	call   QWORD PTR [rax+0xa8]
   14001dfd4:	lea    rdx,[rip+0x205fd]        # 0x14003e5d8
   14001dfdb:	mov    rcx,rbx
   14001dfde:	call   0x1400275b0
   14001dfe3:	test   rax,rax
   14001dfe6:	je     0x14001dffd
   14001dfe8:	cmp    BYTE PTR [rax],0x0
   14001dfeb:	je     0x14001dffd
   14001dfed:	mov    rcx,rax
   14001dff0:	mov    rax,QWORD PTR [rip+0x374f1]        # 0x1400554e8
   14001dff7:	call   QWORD PTR [rax+0xb0]
   14001dffd:	lea    rdx,[rip+0x2060c]        # 0x14003e610
   14001e004:	mov    rcx,rbx
   14001e007:	call   0x1400275b0
   14001e00c:	test   rax,rax
   14001e00f:	je     0x14001e026
   14001e011:	cmp    BYTE PTR [rax],0x0
   14001e014:	je     0x14001e026
   14001e016:	mov    rcx,rax
   14001e019:	mov    rax,QWORD PTR [rip+0x374c8]        # 0x1400554e8
   14001e020:	call   QWORD PTR [rax+0xa8]
   14001e026:	inc    edi
   14001e028:	add    rsi,0x8
   14001e02c:	cmp    edi,DWORD PTR [r14+0xdc]
   14001e033:	jle    0x14001dfa0
   14001e039:	mov    rcx,r14
   14001e03c:	call   0x14002a4e0
   14001e041:	mov    rdi,rax
   14001e044:	test   rax,rax
   14001e047:	je     0x14001e15c
   14001e04d:	nop    DWORD PTR [rax]
   14001e050:	lea    rdx,[rip+0x20575]        # 0x14003e5cc
   14001e057:	mov    rcx,rdi
   14001e05a:	call   0x1400275b0
   14001e05f:	test   rax,rax
   14001e062:	je     0x14001e079
   14001e064:	cmp    BYTE PTR [rax],0x0
   14001e067:	je     0x14001e079
   14001e069:	mov    rcx,rax
   14001e06c:	mov    rax,QWORD PTR [rip+0x37475]        # 0x1400554e8
   14001e073:	call   QWORD PTR [rax+0xa8]
   14001e079:	lea    rdx,[rip+0x20558]        # 0x14003e5d8
   14001e080:	mov    rcx,rdi
   14001e083:	call   0x1400275b0
   14001e088:	test   rax,rax
   14001e08b:	je     0x14001e0a2
   14001e08d:	cmp    BYTE PTR [rax],0x0
   14001e090:	je     0x14001e0a2
   14001e092:	mov    rcx,rax
   14001e095:	mov    rax,QWORD PTR [rip+0x3744c]        # 0x1400554e8
   14001e09c:	call   QWORD PTR [rax+0xb0]
   14001e0a2:	lea    rdx,[rip+0x20567]        # 0x14003e610
   14001e0a9:	mov    rcx,rdi
   14001e0ac:	call   0x1400275b0
   14001e0b1:	test   rax,rax
   14001e0b4:	je     0x14001e0cb
   14001e0b6:	cmp    BYTE PTR [rax],0x0
   14001e0b9:	je     0x14001e0cb
   14001e0bb:	mov    rcx,rax
   14001e0be:	mov    rax,QWORD PTR [rip+0x37423]        # 0x1400554e8
   14001e0c5:	call   QWORD PTR [rax+0xa8]
   14001e0cb:	mov    rdx,rdi
   14001e0ce:	mov    rcx,r14
   14001e0d1:	call   0x14002b830
   14001e0d6:	mov    rbx,rax
   14001e0d9:	test   rax,rax
   14001e0dc:	je     0x14001e145
   14001e0de:	xchg   ax,ax
   14001e0e0:	lea    rdx,[rip+0x204e5]        # 0x14003e5cc
   14001e0e7:	mov    rcx,rbx
   14001e0ea:	call   0x1400275b0
   14001e0ef:	test   rax,rax
   14001e0f2:	je     0x14001e109
   14001e0f4:	cmp    BYTE PTR [rax],0x0
   14001e0f7:	je     0x14001e109
   14001e0f9:	mov    rcx,rax
   14001e0fc:	mov    rax,QWORD PTR [rip+0x373e5]        # 0x1400554e8
   14001e103:	call   QWORD PTR [rax+0xa8]
   14001e109:	lea    rdx,[rip+0x20500]        # 0x14003e610
   14001e110:	mov    rcx,rbx
   14001e113:	call   0x1400275b0
   14001e118:	test   rax,rax
   14001e11b:	je     0x14001e132
   14001e11d:	cmp    BYTE PTR [rax],0x0
   14001e120:	je     0x14001e132
   14001e122:	mov    rcx,rax
   14001e125:	mov    rax,QWORD PTR [rip+0x373bc]        # 0x1400554e8
   14001e12c:	call   QWORD PTR [rax+0xa8]
   14001e132:	mov    rdx,rbx
   14001e135:	mov    rcx,r14
   14001e138:	call   0x14002b9e0
   14001e13d:	mov    rbx,rax
   14001e140:	test   rax,rax
   14001e143:	jne    0x14001e0e0
   14001e145:	mov    rdx,rdi
   14001e148:	mov    rcx,r14
   14001e14b:	call   0x14002a5e0
   14001e150:	mov    rdi,rax
   14001e153:	test   rax,rax
   14001e156:	jne    0x14001e050
   14001e15c:	mov    ecx,DWORD PTR [rip+0x356fe]        # 0x140053860
   14001e162:	mov    eax,0x1
   14001e167:	xor    r13d,r13d
   14001e16a:	mov    DWORD PTR [rip+0x356ec],eax        # 0x14005385c
   14001e170:	test   ecx,ecx
   14001e172:	jle    0x14001e1bf
   14001e174:	cmp    QWORD PTR [rip+0x356ed],r13        # 0x140053868
   14001e17b:	je     0x14001e1bf
   14001e17d:	mov    DWORD PTR [rsp+0x30],r13d
   14001e182:	mov    DWORD PTR [rsp+0x28],ecx
   14001e186:	lea    rdx,[rip+0x209b3]        # 0x14003eb40
   14001e18d:	lea    rcx,[rbp-0x60]
   14001e191:	mov    r9d,eax
   14001e194:	xor    r8d,r8d
   14001e197:	mov    DWORD PTR [rsp+0x20],r13d
   14001e19c:	call   QWORD PTR [rip+0x1ef0e]        # 0x14003d0b0
   14001e1a2:	lea    rax,[rbp-0x60]
   14001e1a6:	mov    QWORD PTR [rbp-0x70],rax
   14001e1aa:	mov    rax,QWORD PTR [rip+0x37337]        # 0x1400554e8
   14001e1b1:	lea    rcx,[rbp-0x70]
   14001e1b5:	mov    QWORD PTR [rbp-0x68],r13
   14001e1b9:	call   QWORD PTR [rax+0xb8]
   14001e1bf:	mov    rbx,QWORD PTR [rip+0x356aa]        # 0x140053870
   14001e1c6:	test   ebx,ebx
   14001e1c8:	js     0x14001e5ee
   14001e1ce:	cmp    ebx,DWORD PTR [rip+0x356b4]        # 0x140053888
   14001e1d4:	jge    0x14001e5ee
   14001e1da:	mov    rax,rbx
   14001e1dd:	shr    rax,0x20
   14001e1e1:	test   eax,eax
   14001e1e3:	js     0x14001e5ee
   14001e1e9:	cmp    eax,DWORD PTR [rip+0x3569d]        # 0x14005388c
   14001e1ef:	jge    0x14001e5ee
   14001e1f5:	mov    rdx,rbx
   14001e1f8:	mov    rcx,r14
   14001e1fb:	mov    DWORD PTR [rip+0x372de],r13d        # 0x1400554e0
   14001e202:	call   0x14001fa50
   14001e207:	mov    rcx,QWORD PTR [r14+0x58]
   14001e20b:	test   rcx,rcx
   14001e20e:	je     0x14001e218
   14001e210:	mov    rdx,r14
   14001e213:	call   0x14001e6c0
   14001e218:	mov    rcx,r14
   14001e21b:	mov    DWORD PTR [rip+0x372bb],0x3        # 0x1400554e0
   14001e225:	call   0x14001d880
   14001e22a:	test   r12b,0x1
   14001e22e:	je     0x14001e390
   14001e234:	mov    rax,QWORD PTR [rip+0x372ad]        # 0x1400554e8
   14001e23b:	mov    DWORD PTR [rip+0x3729b],0x1        # 0x1400554e0
   14001e245:	call   QWORD PTR [rax+0x48]
   14001e248:	mov    rcx,r14
   14001e24b:	call   0x14002a4e0
   14001e250:	mov    rdi,rax
   14001e253:	test   rax,rax
   14001e256:	je     0x14001e310
   14001e25c:	nop    DWORD PTR [rax+0x0]
   14001e260:	cmp    QWORD PTR [rdi+0x28],r13
   14001e264:	je     0x14001e2f9
   14001e26a:	mov    rcx,QWORD PTR [rdi+0x20]
   14001e26e:	mov    rdx,rdi
   14001e271:	call   0x14001ede0
   14001e276:	test   eax,eax
   14001e278:	je     0x14001e2f9
   14001e27a:	cmp    DWORD PTR [rip+0x355d3],0x1        # 0x140053854
   14001e281:	je     0x14001e2d9
   14001e283:	mov    ecx,DWORD PTR [rdi+0x3c]
   14001e286:	mov    eax,DWORD PTR [rdi+0x38]
   14001e289:	movups xmm1,XMMWORD PTR [rip+0x35620]        # 0x1400538b0
   14001e290:	sub    eax,DWORD PTR [rdi+0x54]
   14001e293:	mov    DWORD PTR [rsp+0x70],eax
   14001e297:	mov    eax,DWORD PTR [rdi+0x50]
   14001e29a:	movaps XMMWORD PTR [rsp+0x50],xmm1
   14001e29f:	cdq    
   14001e2a0:	sub    eax,edx
   14001e2a2:	mov    edx,DWORD PTR [rdi+0x58]
   14001e2a5:	add    edx,DWORD PTR [rdi+0x38]
   14001e2a8:	sar    eax,1
   14001e2aa:	sub    ecx,eax
   14001e2ac:	add    eax,DWORD PTR [rdi+0x3c]
   14001e2af:	mov    DWORD PTR [rsp+0x78],edx
   14001e2b3:	mov    DWORD PTR [rsp+0x74],ecx
   14001e2b7:	mov    DWORD PTR [rsp+0x7c],eax
   14001e2bb:	lea    rdx,[rsp+0x40]
   14001e2c0:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   14001e2c5:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14001e2cb:	lea    rcx,[rsp+0x50]
   14001e2d0:	call   0x14001c670
   14001e2d5:	test   eax,eax
   14001e2d7:	je     0x14001e2f9
   14001e2d9:	movsx  eax,BYTE PTR [rdi+0x70]
   14001e2dd:	cmp    eax,DWORD PTR [rip+0x35575]        # 0x140053858
   14001e2e3:	je     0x14001e2f9
   14001e2e5:	mov    rax,QWORD PTR [rdi+0x28]
   14001e2e9:	mov    rcx,rdi
   14001e2ec:	call   QWORD PTR [rax+0x30]
   14001e2ef:	movzx  eax,BYTE PTR [rip+0x35562]        # 0x140053858
   14001e2f6:	mov    BYTE PTR [rdi+0x70],al
   14001e2f9:	mov    rdx,rdi
   14001e2fc:	mov    rcx,r14
   14001e2ff:	call   0x14002a5e0
   14001e304:	mov    rdi,rax
   14001e307:	test   rax,rax
   14001e30a:	jne    0x14001e260
   14001e310:	mov    rax,QWORD PTR [rip+0x371d1]        # 0x1400554e8
   14001e317:	call   QWORD PTR [rax+0x50]
   14001e31a:	mov    rax,QWORD PTR [rip+0x371c7]        # 0x1400554e8
   14001e321:	mov    DWORD PTR [rip+0x371b5],0x2        # 0x1400554e0
   14001e32b:	call   QWORD PTR [rax+0x58]
   14001e32e:	mov    rcx,r14
   14001e331:	call   0x14002a4e0
   14001e336:	mov    rsi,rax
   14001e339:	test   rax,rax
   14001e33c:	je     0x14001e381
   14001e33e:	xchg   ax,ax
   14001e340:	mov    rdx,rsi
   14001e343:	mov    rcx,r14
   14001e346:	call   0x14002b830
   14001e34b:	mov    rdi,rax
   14001e34e:	test   rax,rax
   14001e351:	je     0x14001e36e
   14001e353:	mov    rcx,rdi
   14001e356:	call   0x14001db30
   14001e35b:	mov    rdx,rdi
   14001e35e:	mov    rcx,r14
   14001e361:	call   0x14002b9e0
   14001e366:	mov    rdi,rax
   14001e369:	test   rax,rax
   14001e36c:	jne    0x14001e353
   14001e36e:	mov    rdx,rsi
   14001e371:	mov    rcx,r14
   14001e374:	call   0x14002a5e0
   14001e379:	mov    rsi,rax
   14001e37c:	test   rax,rax
   14001e37f:	jne    0x14001e340
   14001e381:	mov    rax,QWORD PTR [rip+0x37160]        # 0x1400554e8
   14001e388:	call   QWORD PTR [rax+0x60]
   14001e38b:	jmp    0x14001e55d
   14001e390:	mov    rcx,r14
   14001e393:	call   0x14002a4e0
   14001e398:	mov    r15,rax
   14001e39b:	test   rax,rax
   14001e39e:	je     0x14001e55d
   14001e3a4:	nop    DWORD PTR [rax+0x0]
   14001e3a8:	nop    DWORD PTR [rax+rax*1+0x0]
   14001e3b0:	mov    DWORD PTR [rip+0x37126],0x1        # 0x1400554e0
   14001e3ba:	cmp    QWORD PTR [r15+0x28],r13
   14001e3be:	je     0x14001e45b
   14001e3c4:	mov    rcx,QWORD PTR [r15+0x20]
   14001e3c8:	mov    rdx,r15
   14001e3cb:	call   0x14001ede0
   14001e3d0:	test   eax,eax
   14001e3d2:	je     0x14001e45b
   14001e3d8:	cmp    DWORD PTR [rip+0x35475],0x1        # 0x140053854
   14001e3df:	je     0x14001e439
   14001e3e1:	mov    ecx,DWORD PTR [r15+0x3c]
   14001e3e5:	mov    eax,DWORD PTR [r15+0x38]
   14001e3e9:	movups xmm1,XMMWORD PTR [rip+0x354c0]        # 0x1400538b0
   14001e3f0:	sub    eax,DWORD PTR [r15+0x54]
   14001e3f4:	mov    DWORD PTR [rbp-0x80],eax
   14001e3f7:	mov    eax,DWORD PTR [r15+0x50]
   14001e3fb:	movaps XMMWORD PTR [rsp+0x40],xmm1
   14001e400:	cdq    
   14001e401:	sub    eax,edx
   14001e403:	mov    edx,DWORD PTR [r15+0x58]
   14001e407:	add    edx,DWORD PTR [r15+0x38]
   14001e40b:	sar    eax,1
   14001e40d:	sub    ecx,eax
   14001e40f:	add    eax,DWORD PTR [r15+0x3c]
   14001e413:	mov    DWORD PTR [rbp-0x78],edx
   14001e416:	mov    DWORD PTR [rbp-0x7c],ecx
   14001e419:	mov    DWORD PTR [rbp-0x74],eax
   14001e41c:	lea    rdx,[rsp+0x50]
   14001e421:	movaps xmm0,XMMWORD PTR [rbp-0x80]
   14001e425:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   14001e42b:	lea    rcx,[rsp+0x40]
   14001e430:	call   0x14001c670
   14001e435:	test   eax,eax
   14001e437:	je     0x14001e45b
   14001e439:	movsx  eax,BYTE PTR [r15+0x70]
   14001e43e:	cmp    eax,DWORD PTR [rip+0x35414]        # 0x140053858
   14001e444:	je     0x14001e45b
   14001e446:	mov    rax,QWORD PTR [r15+0x28]
   14001e44a:	mov    rcx,r15
   14001e44d:	call   QWORD PTR [rax+0x30]
   14001e450:	movzx  eax,BYTE PTR [rip+0x35401]        # 0x140053858
   14001e457:	mov    BYTE PTR [r15+0x70],al
   14001e45b:	mov    rdx,r15
   14001e45e:	mov    rcx,r14
   14001e461:	call   0x14002b830
   14001e466:	mov    rsi,rax
   14001e469:	test   rax,rax
   14001e46c:	je     0x14001e546
   14001e472:	mov    DWORD PTR [rip+0x37064],0x1        # 0x1400554e0
   14001e47c:	mov    rdi,QWORD PTR [rsi+0x10]
   14001e480:	cmp    QWORD PTR [rdi+0x28],r13
   14001e484:	je     0x14001e51d
   14001e48a:	mov    rcx,QWORD PTR [rdi+0x20]
   14001e48e:	mov    rdx,rdi
   14001e491:	call   0x14001ede0
   14001e496:	test   eax,eax
   14001e498:	je     0x14001e51d
   14001e49e:	cmp    DWORD PTR [rip+0x353af],0x1        # 0x140053854
   14001e4a5:	je     0x14001e4fd
   14001e4a7:	mov    ecx,DWORD PTR [rdi+0x3c]
   14001e4aa:	mov    eax,DWORD PTR [rdi+0x38]
   14001e4ad:	movups xmm1,XMMWORD PTR [rip+0x353fc]        # 0x1400538b0
   14001e4b4:	sub    eax,DWORD PTR [rdi+0x54]
   14001e4b7:	mov    DWORD PTR [rsp+0x60],eax
   14001e4bb:	mov    eax,DWORD PTR [rdi+0x50]
   14001e4be:	movaps XMMWORD PTR [rsp+0x40],xmm1
   14001e4c3:	cdq    
   14001e4c4:	sub    eax,edx
   14001e4c6:	mov    edx,DWORD PTR [rdi+0x58]
   14001e4c9:	add    edx,DWORD PTR [rdi+0x38]
   14001e4cc:	sar    eax,1
   14001e4ce:	sub    ecx,eax
   14001e4d0:	add    eax,DWORD PTR [rdi+0x3c]
   14001e4d3:	mov    DWORD PTR [rsp+0x68],edx
   14001e4d7:	mov    DWORD PTR [rsp+0x64],ecx
   14001e4db:	mov    DWORD PTR [rsp+0x6c],eax
   14001e4df:	lea    rdx,[rsp+0x50]
   14001e4e4:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   14001e4e9:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   14001e4ef:	lea    rcx,[rsp+0x40]
   14001e4f4:	call   0x14001c670
   14001e4f9:	test   eax,eax
   14001e4fb:	je     0x14001e51d
   14001e4fd:	movsx  eax,BYTE PTR [rdi+0x70]
   14001e501:	cmp    eax,DWORD PTR [rip+0x35351]        # 0x140053858
   14001e507:	je     0x14001e51d
   14001e509:	mov    rax,QWORD PTR [rdi+0x28]
   14001e50d:	mov    rcx,rdi
   14001e510:	call   QWORD PTR [rax+0x30]
   14001e513:	movzx  eax,BYTE PTR [rip+0x3533e]        # 0x140053858
   14001e51a:	mov    BYTE PTR [rdi+0x70],al
   14001e51d:	mov    rcx,rsi
   14001e520:	mov    DWORD PTR [rip+0x36fb6],0x2        # 0x1400554e0
   14001e52a:	call   0x14001db30
   14001e52f:	mov    rdx,rsi
   14001e532:	mov    rcx,r14
   14001e535:	call   0x14002b9e0
   14001e53a:	mov    rsi,rax
   14001e53d:	test   rax,rax
   14001e540:	jne    0x14001e472
   14001e546:	mov    rdx,r15
   14001e549:	mov    rcx,r14
   14001e54c:	call   0x14002a5e0
   14001e551:	mov    r15,rax
   14001e554:	test   rax,rax
   14001e557:	jne    0x14001e3b0
   14001e55d:	mov    rax,QWORD PTR [rip+0x36f84]        # 0x1400554e8
   14001e564:	mov    DWORD PTR [rip+0x36f75],r13d        # 0x1400554e0
   14001e56b:	call   QWORD PTR [rax+0x30]
   14001e56e:	mov    rdx,QWORD PTR [rip+0x3530b]        # 0x140053880
   14001e575:	mov    rcx,rbx
   14001e578:	call   0x14001b3e0
   14001e57d:	mov    rbx,rax
   14001e580:	mov    QWORD PTR [rbp+0x1e0],rax
   14001e587:	mov    eax,DWORD PTR [rbp+0x1e0]
   14001e58d:	test   eax,eax
   14001e58f:	js     0x14001e5b0
   14001e591:	cmp    eax,DWORD PTR [rip+0x352f1]        # 0x140053888
   14001e597:	jge    0x14001e5b0
   14001e599:	mov    rax,rbx
   14001e59c:	shr    rax,0x20
   14001e5a0:	test   eax,eax
   14001e5a2:	js     0x14001e5b0
   14001e5a4:	cmp    eax,DWORD PTR [rip+0x352e2]        # 0x14005388c
   14001e5aa:	jl     0x14001e1c6
   14001e5b0:	cmp    DWORD PTR [rip+0x352c5],r13d        # 0x14005387c
   14001e5b7:	je     0x14001e5c7
   14001e5b9:	mov    eax,DWORD PTR [rip+0x352b1]        # 0x140053870
   14001e5bf:	mov    DWORD PTR [rbp+0x1e0],eax
   14001e5c5:	jmp    0x14001e5d3
   14001e5c7:	mov    eax,DWORD PTR [rip+0x352a7]        # 0x140053874
   14001e5cd:	mov    DWORD PTR [rbp+0x1e4],eax
   14001e5d3:	mov    rdx,QWORD PTR [rip+0x3529e]        # 0x140053878
   14001e5da:	mov    rcx,QWORD PTR [rbp+0x1e0]
   14001e5e1:	call   0x14001b3e0
   14001e5e6:	mov    rbx,rax
   14001e5e9:	jmp    0x14001e1c6
   14001e5ee:	mov    eax,DWORD PTR [rip+0x35268]        # 0x14005385c
   14001e5f4:	mov    ecx,DWORD PTR [rip+0x35266]        # 0x140053860
   14001e5fa:	inc    eax
   14001e5fc:	mov    DWORD PTR [rip+0x3525a],eax        # 0x14005385c
   14001e602:	cmp    eax,ecx
   14001e604:	jle    0x14001e170
   14001e60a:	mov    rax,QWORD PTR [rip+0x36ed7]        # 0x1400554e8
   14001e611:	lea    r11,[rsp+0x2a0]
   14001e619:	mov    rbx,QWORD PTR [r11+0x30]
   14001e61d:	mov    rsi,QWORD PTR [r11+0x38]
   14001e621:	mov    rdi,QWORD PTR [r11+0x48]
   14001e625:	mov    rsp,r11
   14001e628:	pop    r15
   14001e62a:	pop    r14
   14001e62c:	pop    r13
   14001e62e:	pop    r12
   14001e630:	pop    rbp
   14001e631:	rex.W jmp QWORD PTR [rax+0x20]
   14001e635:	int3   
   14001e636:	int3   
   14001e637:	int3   
   14001e638:	int3   
   14001e639:	int3   
   14001e63a:	int3   
   14001e63b:	int3   
   14001e63c:	int3   
   14001e63d:	int3   
   14001e63e:	int3   
   14001e63f:	int3   
   14001e640:	rex push rbx
   14001e642:	sub    rsp,0x40
   14001e646:	mov    rbx,rcx
   14001e649:	call   0x14001f5b0
   14001e64e:	cmp    DWORD PTR [rip+0x35203],0x0        # 0x140053858
   14001e655:	jne    0x14001e692
   14001e657:	call   0x14001d100
   14001e65c:	mov    rdx,QWORD PTR [rip+0x35225]        # 0x140053888
   14001e663:	mov    r8,QWORD PTR [rip+0x36e66]        # 0x1400554d0
   14001e66a:	mov    QWORD PTR [rsp+0x28],rdx
   14001e66f:	lea    rcx,[rip+0x2d98a]        # 0x14004c000
   14001e676:	mov    r9,rax
   14001e679:	mov    rax,QWORD PTR [rip+0x36e68]        # 0x1400554e8
   14001e680:	mov    QWORD PTR [rsp+0x20],rcx
   14001e685:	mov    rcx,QWORD PTR [rip+0x36e64]        # 0x1400554f0
   14001e68c:	mov    rdx,rbx
   14001e68f:	call   QWORD PTR [rax+0x8]
   14001e692:	movups xmm0,XMMWORD PTR [rip+0x351f7]        # 0x140053890
   14001e699:	mov    rax,QWORD PTR [rip+0x36e48]        # 0x1400554e8
   14001e6a0:	mov    r8,QWORD PTR [rip+0x35219]        # 0x1400538c0
   14001e6a7:	lea    rdx,[rsp+0x30]
   14001e6ac:	mov    rcx,rbx
   14001e6af:	movaps XMMWORD PTR [rsp+0x30],xmm0
   14001e6b4:	call   QWORD PTR [rax+0x18]
   14001e6b7:	add    rsp,0x40
   14001e6bb:	pop    rbx
   14001e6bc:	ret    
   14001e6bd:	int3   
   14001e6be:	int3   
   14001e6bf:	int3   
   14001e6c0:	rex push rsi
   14001e6c2:	sub    rsp,0x40
   14001e6c6:	mov    rsi,rcx
   14001e6c9:	movzx  ecx,WORD PTR [rcx+0x40]
   14001e6cd:	cmp    cx,0x1
   14001e6d1:	jl     0x14001e8a5
   14001e6d7:	movsd  xmm1,QWORD PTR [rsi+0x20]
   14001e6dc:	movsd  xmm2,QWORD PTR [rip+0x1ecf4]        # 0x14003d3d8
   14001e6e4:	mov    QWORD PTR [rsp+0x58],rbx
   14001e6e9:	mov    rbx,QWORD PTR [rdx+0x38]
   14001e6ed:	mov    QWORD PTR [rsp+0x60],rbp
   14001e6f2:	mov    QWORD PTR [rsp+0x38],r12
   14001e6f7:	xorps  xmm3,xmm3
   14001e6fa:	mulsd  xmm1,QWORD PTR [rip+0x1ed86]        # 0x14003d488
   14001e702:	mov    QWORD PTR [rsp+0x30],r13
   14001e707:	mov    QWORD PTR [rsp+0x28],r14
   14001e70c:	mov    QWORD PTR [rsp+0x20],r15
   14001e711:	comisd xmm1,xmm3
   14001e715:	movaps xmm0,xmm1
   14001e718:	jb     0x14001e720
   14001e71a:	addsd  xmm0,xmm2
   14001e71e:	jmp    0x14001e724
   14001e720:	subsd  xmm0,xmm2
   14001e724:	cvttsd2si eax,xmm0
   14001e728:	test   eax,eax
   14001e72a:	js     0x14001e74e
   14001e72c:	comisd xmm1,xmm3
   14001e730:	jb     0x14001e738
   14001e732:	addsd  xmm1,xmm2
   14001e736:	jmp    0x14001e73c
   14001e738:	subsd  xmm1,xmm2
   14001e73c:	cvttsd2si eax,xmm1
   14001e740:	movd   xmm0,eax
   14001e744:	cvtdq2pd xmm0,xmm0
   14001e748:	addsd  xmm0,xmm2
   14001e74c:	jmp    0x14001e76e
   14001e74e:	comisd xmm1,xmm3
   14001e752:	jb     0x14001e75a
   14001e754:	addsd  xmm1,xmm2
   14001e758:	jmp    0x14001e75e
   14001e75a:	subsd  xmm1,xmm2
   14001e75e:	cvttsd2si eax,xmm1
   14001e762:	movd   xmm0,eax
   14001e766:	cvtdq2pd xmm0,xmm0
   14001e76a:	subsd  xmm0,xmm2
   14001e76e:	movsd  xmm1,QWORD PTR [rsi+0x18]
   14001e773:	mov    r15d,DWORD PTR [rsi+0x30]
   14001e777:	cvttsd2si eax,xmm0
   14001e77b:	mov    r14d,r15d
   14001e77e:	movaps xmm0,xmm1
   14001e781:	divsd  xmm1,QWORD PTR [rip+0x1edc7]        # 0x14003d550
   14001e789:	cdq    
   14001e78a:	sub    eax,edx
   14001e78c:	sar    eax,1
   14001e78e:	sub    r14d,eax
   14001e791:	lea    r12d,[rax+r15*1]
   14001e795:	movsx  eax,cx
   14001e798:	dec    eax
   14001e79a:	mulsd  xmm0,QWORD PTR [rip+0x20476]        # 0x14003ec18
   14001e7a2:	cvttsd2si r13d,xmm0
   14001e7a7:	imul   eax,r13d
   14001e7ab:	cdq    
   14001e7ac:	sub    eax,edx
   14001e7ae:	sar    eax,1
   14001e7b0:	add    eax,DWORD PTR [rsi+0x34]
   14001e7b3:	movd   xmm0,eax
   14001e7b7:	mov    rax,QWORD PTR [rip+0x36d2a]        # 0x1400554e8
   14001e7be:	cvtdq2pd xmm0,xmm0
   14001e7c2:	subsd  xmm0,xmm1
   14001e7c6:	cvttsd2si ebp,xmm0
   14001e7ca:	mov    DWORD PTR [rsp+0x54],ebp
   14001e7ce:	call   QWORD PTR [rax+0x88]
   14001e7d4:	mov    rax,QWORD PTR [rip+0x36d0d]        # 0x1400554e8
   14001e7db:	mov    rcx,QWORD PTR [rsi+0x10]
   14001e7df:	call   QWORD PTR [rax+0xa8]
   14001e7e5:	mov    rax,QWORD PTR [rbx+0x50]
   14001e7e9:	mov    rcx,QWORD PTR [rsi+0x8]
   14001e7ed:	movsd  xmm1,QWORD PTR [rax+0x10]
   14001e7f2:	mov    rax,QWORD PTR [rip+0x36cef]        # 0x1400554e8
   14001e7f9:	mulsd  xmm1,QWORD PTR [rsi+0x18]
   14001e7fe:	call   QWORD PTR [rax+0x98]
   14001e804:	xor    ebx,ebx
   14001e806:	cmp    bx,WORD PTR [rsi+0x40]
   14001e80a:	jge    0x14001e87a
   14001e80c:	mov    QWORD PTR [rsp+0x68],rdi
   14001e811:	mov    edi,ebx
   14001e813:	nop    DWORD PTR [rax+0x0]
   14001e817:	nop    WORD PTR [rax+rax*1+0x0]
   14001e820:	mov    r8,QWORD PTR [rsi+0x38]
   14001e824:	movzx  ecx,BYTE PTR [rdi+r8*1+0xa]
   14001e82a:	cmp    cl,0x6c
   14001e82d:	je     0x14001e83f
   14001e82f:	mov    eax,r12d
   14001e832:	cmp    cl,0x72
   14001e835:	cmovne eax,r15d
   14001e839:	mov    DWORD PTR [rsp+0x50],eax
   14001e83d:	jmp    0x14001e844
   14001e83f:	mov    DWORD PTR [rsp+0x50],r14d
   14001e844:	mov    rax,QWORD PTR [rip+0x36c9d]        # 0x1400554e8
   14001e84b:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e850:	movsxd rdx,ebx
   14001e853:	shl    rdx,0x4
   14001e857:	add    rdx,r8
   14001e85a:	call   QWORD PTR [rax+0xa0]
   14001e860:	movsx  eax,WORD PTR [rsi+0x40]
   14001e864:	sub    ebp,r13d
   14001e867:	inc    ebx
   14001e869:	add    rdi,0x10
   14001e86d:	mov    DWORD PTR [rsp+0x54],ebp
   14001e871:	cmp    ebx,eax
   14001e873:	jl     0x14001e820
   14001e875:	mov    rdi,QWORD PTR [rsp+0x68]
   14001e87a:	mov    rax,QWORD PTR [rip+0x36c67]        # 0x1400554e8
   14001e881:	call   QWORD PTR [rax+0x90]
   14001e887:	mov    r15,QWORD PTR [rsp+0x20]
   14001e88c:	mov    r14,QWORD PTR [rsp+0x28]
   14001e891:	mov    r13,QWORD PTR [rsp+0x30]
   14001e896:	mov    r12,QWORD PTR [rsp+0x38]
   14001e89b:	mov    rbp,QWORD PTR [rsp+0x60]
   14001e8a0:	mov    rbx,QWORD PTR [rsp+0x58]
   14001e8a5:	add    rsp,0x40
   14001e8a9:	pop    rsi
   14001e8aa:	ret    
   14001e8ab:	int3   
   14001e8ac:	int3   
   14001e8ad:	int3   
   14001e8ae:	int3   
   14001e8af:	int3   
   14001e8b0:	sub    rsp,0x258
   14001e8b7:	cmp    QWORD PTR [rip+0x34fa9],0x0        # 0x140053868
   14001e8bf:	je     0x14001e918
   14001e8c1:	mov    eax,DWORD PTR [rip+0x34f99]        # 0x140053860
   14001e8c7:	mov    r9d,ecx
   14001e8ca:	mov    DWORD PTR [rsp+0x30],0x0
   14001e8d2:	mov    DWORD PTR [rsp+0x28],eax
   14001e8d6:	lea    rdx,[rip+0x20263]        # 0x14003eb40
   14001e8dd:	lea    rcx,[rsp+0x50]
   14001e8e2:	xor    r8d,r8d
   14001e8e5:	mov    DWORD PTR [rsp+0x20],0x0
   14001e8ed:	call   QWORD PTR [rip+0x1e7bd]        # 0x14003d0b0
   14001e8f3:	lea    rax,[rsp+0x50]
   14001e8f8:	lea    rcx,[rsp+0x40]
   14001e8fd:	mov    QWORD PTR [rsp+0x40],rax
   14001e902:	mov    rax,QWORD PTR [rip+0x36bdf]        # 0x1400554e8
   14001e909:	mov    QWORD PTR [rsp+0x48],0x0
   14001e912:	call   QWORD PTR [rax+0xb8]
   14001e918:	add    rsp,0x258
   14001e91f:	ret    
   14001e920:	rex push rbx
   14001e922:	sub    rsp,0x20
   14001e926:	cmp    QWORD PTR [rcx+0x28],0x0
   14001e92b:	mov    rbx,rcx
   14001e92e:	je     0x14001e96c
   14001e930:	mov    rdx,rcx
   14001e933:	mov    rcx,QWORD PTR [rcx+0x20]
   14001e937:	call   0x14001ede0
   14001e93c:	test   eax,eax
   14001e93e:	je     0x14001e96c
   14001e940:	mov    rcx,rbx
   14001e943:	call   0x14001ed60
   14001e948:	test   eax,eax
   14001e94a:	je     0x14001e96c
   14001e94c:	movsx  eax,BYTE PTR [rbx+0x70]
   14001e950:	cmp    eax,DWORD PTR [rip+0x34f02]        # 0x140053858
   14001e956:	je     0x14001e96c
   14001e958:	mov    rax,QWORD PTR [rbx+0x28]
   14001e95c:	mov    rcx,rbx
   14001e95f:	call   QWORD PTR [rax+0x30]
   14001e962:	movzx  eax,BYTE PTR [rip+0x34eef]        # 0x140053858
   14001e969:	mov    BYTE PTR [rbx+0x70],al
   14001e96c:	add    rsp,0x20
   14001e970:	pop    rbx
   14001e971:	ret    
   14001e972:	int3   
   14001e973:	int3   
   14001e974:	int3   
   14001e975:	int3   
   14001e976:	int3   
   14001e977:	int3   
   14001e978:	int3   
   14001e979:	int3   
   14001e97a:	int3   
   14001e97b:	int3   
   14001e97c:	int3   
   14001e97d:	int3   
   14001e97e:	int3   
   14001e97f:	int3   
   14001e980:	rex push rbx
   14001e982:	sub    rsp,0x20
   14001e986:	xor    eax,eax
   14001e988:	xorps  xmm0,xmm0
   14001e98b:	mov    rbx,rcx
   14001e98e:	mov    DWORD PTR [rip+0x34ec4],eax        # 0x140053858
   14001e994:	mov    DWORD PTR [rip+0x34eba],eax        # 0x140053854
   14001e99a:	mov    DWORD PTR [rip+0x34ec0],eax        # 0x140053860
   14001e9a0:	movsd  QWORD PTR [rip+0x34f20],xmm0        # 0x1400538c8
   14001e9a8:	movups XMMWORD PTR [rip+0x34ef1],xmm0        # 0x1400538a0
   14001e9af:	mov    DWORD PTR [rip+0x34ea7],eax        # 0x14005385c
   14001e9b5:	mov    QWORD PTR [rip+0x34eac],rax        # 0x140053868
   14001e9bc:	mov    QWORD PTR [rip+0x34ead],rax        # 0x140053870
   14001e9c3:	mov    QWORD PTR [rip+0x34eae],rax        # 0x140053878
   14001e9ca:	mov    QWORD PTR [rip+0x34eaf],rax        # 0x140053880
   14001e9d1:	mov    QWORD PTR [rip+0x34eb0],rax        # 0x140053888
   14001e9d8:	mov    QWORD PTR [rip+0x34eb9],rax        # 0x140053898
   14001e9df:	mov    QWORD PTR [rip+0x34eaa],rax        # 0x140053890
   14001e9e6:	mov    QWORD PTR [rip+0x34ecb],rax        # 0x1400538b8
   14001e9ed:	mov    QWORD PTR [rip+0x34ebc],rax        # 0x1400538b0
   14001e9f4:	mov    QWORD PTR [rip+0x34ec5],rax        # 0x1400538c0
   14001e9fb:	mov    QWORD PTR [rip+0x34ece],rax        # 0x1400538d0
   14001ea02:	call   0x14002a4e0
   14001ea07:	test   rax,rax
   14001ea0a:	je     0x14001ea24
   14001ea0c:	nop    DWORD PTR [rax+0x0]
   14001ea10:	mov    rdx,rax
   14001ea13:	mov    rcx,rbx
   14001ea16:	mov    BYTE PTR [rax+0x70],0x0
   14001ea1a:	call   0x14002a5e0
   14001ea1f:	test   rax,rax
   14001ea22:	jne    0x14001ea10
   14001ea24:	mov    rax,QWORD PTR [rip+0x36abd]        # 0x1400554e8
   14001ea2b:	test   rax,rax
   14001ea2e:	je     0x14001ea38
   14001ea30:	add    rsp,0x20
   14001ea34:	pop    rbx
   14001ea35:	rex.W jmp QWORD PTR [rax]
   14001ea38:	add    rsp,0x20
   14001ea3c:	pop    rbx
   14001ea3d:	ret    
   14001ea3e:	int3   
   14001ea3f:	int3   
   14001ea40:	mov    rax,QWORD PTR [rip+0x36aa1]        # 0x1400554e8
   14001ea47:	rex.W jmp QWORD PTR [rax+0x20]
   14001ea4b:	int3   
   14001ea4c:	int3   
   14001ea4d:	int3   
   14001ea4e:	int3   
   14001ea4f:	int3   
   14001ea50:	mov    QWORD PTR [rsp+0x8],rcx
   14001ea55:	mov    eax,DWORD PTR [rsp+0xc]
   14001ea59:	mov    ecx,DWORD PTR [rsp+0x8]
   14001ea5d:	mov    DWORD PTR [rsp+0x8],eax
   14001ea61:	mov    DWORD PTR [rsp+0xc],ecx
   14001ea65:	mov    rax,QWORD PTR [rsp+0x8]
   14001ea6a:	ret    
   14001ea6b:	int3   
   14001ea6c:	int3   
   14001ea6d:	int3   
   14001ea6e:	int3   
   14001ea6f:	int3   
   14001ea70:	mov    rax,QWORD PTR [rdx+0x8]
   14001ea74:	movsd  xmm0,QWORD PTR [rdx]
   14001ea78:	mov    QWORD PTR [rdx],rax
   14001ea7b:	movsd  QWORD PTR [rdx+0x8],xmm0
   14001ea80:	mov    rax,rcx
   14001ea83:	movups xmm0,XMMWORD PTR [rdx]
   14001ea86:	movups XMMWORD PTR [rcx],xmm0
   14001ea89:	ret    
   14001ea8a:	int3   
   14001ea8b:	int3   
   14001ea8c:	int3   
   14001ea8d:	int3   
   14001ea8e:	int3   
   14001ea8f:	int3   
   14001ea90:	rex push rbx
   14001ea92:	sub    rsp,0x20
   14001ea96:	lea    rdx,[rip+0x20177]        # 0x14003ec14
   14001ea9d:	mov    rbx,rcx
   14001eaa0:	call   QWORD PTR [rip+0x1e632]        # 0x14003d0d8
   14001eaa6:	test   rax,rax
   14001eaa9:	jne    0x14001eac0
   14001eaab:	mov    rcx,rbx
   14001eaae:	call   QWORD PTR [rip+0x1e62c]        # 0x14003d0e0
   14001eab4:	mov    ecx,0x1
   14001eab9:	call   QWORD PTR [rip+0x1e5b9]        # 0x14003d078
   14001eabf:	int3   
   14001eac0:	add    rsp,0x20
   14001eac4:	pop    rbx
   14001eac5:	ret    
   14001eac6:	int3   
   14001eac7:	int3   
   14001eac8:	int3   
   14001eac9:	int3   
   14001eaca:	int3   
   14001eacb:	int3   
   14001eacc:	int3   
   14001eacd:	int3   
   14001eace:	int3   
   14001eacf:	int3   
   14001ead0:	rex push rbx
   14001ead2:	sub    rsp,0x20
   14001ead6:	movzx  eax,BYTE PTR [rcx]
   14001ead9:	mov    rbx,rcx
   14001eadc:	test   al,al
   14001eade:	je     0x14001eaf8
   14001eae0:	movsx  ecx,al
   14001eae3:	call   QWORD PTR [rip+0x1e617]        # 0x14003d100
   14001eae9:	lea    rbx,[rbx+0x1]
   14001eaed:	test   eax,eax
   14001eaef:	je     0x14001eb03
   14001eaf1:	movzx  eax,BYTE PTR [rbx]
   14001eaf4:	test   al,al
   14001eaf6:	jne    0x14001eae0
   14001eaf8:	mov    eax,0x1
   14001eafd:	add    rsp,0x20
   14001eb01:	pop    rbx
   14001eb02:	ret    
   14001eb03:	xor    eax,eax
   14001eb05:	add    rsp,0x20
   14001eb09:	pop    rbx
   14001eb0a:	ret    
   14001eb0b:	int3   
   14001eb0c:	int3   
   14001eb0d:	int3   
   14001eb0e:	int3   
   14001eb0f:	int3   
   14001eb10:	mov    QWORD PTR [rsp+0x8],rbx
   14001eb15:	push   rdi
   14001eb16:	sub    rsp,0x20
   14001eb1a:	cmp    QWORD PTR [rip+0x2d5e6],0x0        # 0x14004c108
   14001eb22:	mov    rdi,rcx
   14001eb25:	lea    rbx,[rip+0x2d5d4]        # 0x14004c100
   14001eb2c:	je     0x14001eb4f
   14001eb2e:	xchg   ax,ax
   14001eb30:	mov    rdx,QWORD PTR [rbx+0x8]
   14001eb34:	mov    rcx,rdi
   14001eb37:	call   0x14001ca70
   14001eb3c:	test   eax,eax
   14001eb3e:	je     0x14001ebce
   14001eb44:	add    rbx,0x18
   14001eb48:	cmp    QWORD PTR [rbx+0x8],0x0
   14001eb4d:	jne    0x14001eb30
   14001eb4f:	call   QWORD PTR [rip+0x1e77b]        # 0x14003d2d0
   14001eb55:	lea    rdx,[rip+0x20084]        # 0x14003ebe0
   14001eb5c:	mov    r8,rdi
   14001eb5f:	lea    rcx,[rax+0x60]
   14001eb63:	call   QWORD PTR [rip+0x1e757]        # 0x14003d2c0
   14001eb69:	mov    rdi,QWORD PTR [rip+0x2d598]        # 0x14004c108
   14001eb70:	test   rdi,rdi
   14001eb73:	je     0x14001ebaa
   14001eb75:	lea    rbx,[rip+0x2d58c]        # 0x14004c108
   14001eb7c:	nop    DWORD PTR [rax+0x0]
   14001eb80:	call   QWORD PTR [rip+0x1e74a]        # 0x14003d2d0
   14001eb86:	lea    rdx,[rip+0x1f9a7]        # 0x14003e534
   14001eb8d:	mov    r8,rdi
   14001eb90:	lea    rcx,[rax+0x60]
   14001eb94:	call   QWORD PTR [rip+0x1e726]        # 0x14003d2c0
   14001eb9a:	mov    rax,QWORD PTR [rbx+0x18]
   14001eb9e:	lea    rbx,[rbx+0x18]
   14001eba2:	mov    rdi,rax
   14001eba5:	test   rax,rax
   14001eba8:	jne    0x14001eb80
   14001ebaa:	call   QWORD PTR [rip+0x1e720]        # 0x14003d2d0
   14001ebb0:	lea    rdx,[rip+0x1efc1]        # 0x14003db78
   14001ebb7:	lea    rcx,[rax+0x60]
   14001ebbb:	call   QWORD PTR [rip+0x1e6ff]        # 0x14003d2c0
   14001ebc1:	xor    eax,eax
   14001ebc3:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ebc8:	add    rsp,0x20
   14001ebcc:	pop    rdi
   14001ebcd:	ret    
   14001ebce:	mov    rax,QWORD PTR [rbx]
   14001ebd1:	mov    QWORD PTR [rip+0x36910],rax        # 0x1400554e8
   14001ebd8:	mov    eax,DWORD PTR [rbx+0x10]
   14001ebdb:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ebe0:	add    rsp,0x20
   14001ebe4:	pop    rdi
   14001ebe5:	ret    
   14001ebe6:	int3   
   14001ebe7:	int3   
   14001ebe8:	int3   
   14001ebe9:	int3   
   14001ebea:	int3   
   14001ebeb:	int3   
   14001ebec:	int3   
   14001ebed:	int3   
   14001ebee:	int3   
   14001ebef:	int3   
   14001ebf0:	rex push rdi
   14001ebf2:	sub    rsp,0x20
   14001ebf6:	mov    rdi,rcx
   14001ebf9:	xor    r8d,r8d
   14001ebfc:	lea    rcx,[rip+0x1fe65]        # 0x14003ea68
   14001ec03:	nop    DWORD PTR [rax+0x0]
   14001ec07:	nop    WORD PTR [rax+rax*1+0x0]
   14001ec10:	movzx  eax,BYTE PTR [rdi+r8*1]
   14001ec15:	inc    r8
   14001ec18:	cmp    al,BYTE PTR [rcx+r8*1-0x1]
   14001ec1d:	jne    0x14001ec2d
   14001ec1f:	cmp    r8,0x4
   14001ec23:	jne    0x14001ec10
   14001ec25:	mov    eax,edx
   14001ec27:	add    rsp,0x20
   14001ec2b:	pop    rdi
   14001ec2c:	ret    
   14001ec2d:	cmp    BYTE PTR [rdi],0x0
   14001ec30:	mov    QWORD PTR [rsp+0x30],rbx
   14001ec35:	mov    rbx,rdi
   14001ec38:	je     0x14001ec56
   14001ec3a:	nop    WORD PTR [rax+rax*1+0x0]
   14001ec40:	movsx  ecx,BYTE PTR [rbx]
   14001ec43:	call   QWORD PTR [rip+0x1e4b7]        # 0x14003d100
   14001ec49:	lea    rbx,[rbx+0x1]
   14001ec4d:	test   eax,eax
   14001ec4f:	je     0x14001ec6a
   14001ec51:	cmp    BYTE PTR [rbx],0x0
   14001ec54:	jne    0x14001ec40
   14001ec56:	mov    rcx,rdi
   14001ec59:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ec5e:	add    rsp,0x20
   14001ec62:	pop    rdi
   14001ec63:	rex.W jmp QWORD PTR [rip+0x1e41e]        # 0x14003d088
   14001ec6a:	mov    r10,QWORD PTR [rip+0x34bf7]        # 0x140053868
   14001ec71:	test   r10,r10
   14001ec74:	je     0x14001ecc3
   14001ec76:	mov    r11d,DWORD PTR [rip+0x34be3]        # 0x140053860
   14001ec7d:	mov    r9d,0x1
   14001ec83:	cmp    r11d,r9d
   14001ec86:	jl     0x14001ecc3
   14001ec88:	add    r10,0x8
   14001ec8c:	nop    DWORD PTR [rax+0x0]
   14001ec90:	mov    r8,QWORD PTR [r10]
   14001ec93:	mov    rax,rdi
   14001ec96:	sub    r8,rdi
   14001ec99:	nop    DWORD PTR [rax+0x0]
   14001eca0:	movzx  edx,BYTE PTR [rax]
   14001eca3:	movzx  ecx,BYTE PTR [rax+r8*1]
   14001eca8:	sub    edx,ecx
   14001ecaa:	jne    0x14001ecb3
   14001ecac:	inc    rax
   14001ecaf:	test   ecx,ecx
   14001ecb1:	jne    0x14001eca0
   14001ecb3:	test   edx,edx
   14001ecb5:	je     0x14001ecd1
   14001ecb7:	inc    r9d
   14001ecba:	add    r10,0x8
   14001ecbe:	cmp    r9d,r11d
   14001ecc1:	jle    0x14001ec90
   14001ecc3:	or     eax,0xffffffff
   14001ecc6:	mov    rbx,QWORD PTR [rsp+0x30]
   14001eccb:	add    rsp,0x20
   14001eccf:	pop    rdi
   14001ecd0:	ret    
   14001ecd1:	mov    eax,r9d
   14001ecd4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ecd9:	add    rsp,0x20
   14001ecdd:	pop    rdi
   14001ecde:	ret    
   14001ecdf:	int3   
   14001ece0:	mov    QWORD PTR [rsp+0x8],rbx
   14001ece5:	mov    r11d,DWORD PTR [rip+0x34b74]        # 0x140053860
   14001ecec:	mov    r9d,0x1
   14001ecf2:	mov    rbx,rcx
   14001ecf5:	cmp    r11d,r9d
   14001ecf8:	jl     0x14001ed43
   14001ecfa:	mov    r10,QWORD PTR [rip+0x34b67]        # 0x140053868
   14001ed01:	add    r10,0x8
   14001ed05:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001ed10:	mov    r8,QWORD PTR [r10]
   14001ed13:	mov    rax,rbx
   14001ed16:	sub    r8,rbx
   14001ed19:	nop    DWORD PTR [rax+0x0]
   14001ed20:	movzx  edx,BYTE PTR [rax]
   14001ed23:	movzx  ecx,BYTE PTR [rax+r8*1]
   14001ed28:	sub    edx,ecx
   14001ed2a:	jne    0x14001ed33
   14001ed2c:	inc    rax
   14001ed2f:	test   ecx,ecx
   14001ed31:	jne    0x14001ed20
   14001ed33:	test   edx,edx
   14001ed35:	je     0x14001ed4c
   14001ed37:	inc    r9d
   14001ed3a:	add    r10,0x8
   14001ed3e:	cmp    r9d,r11d
   14001ed41:	jle    0x14001ed10
   14001ed43:	or     eax,0xffffffff
   14001ed46:	mov    rbx,QWORD PTR [rsp+0x8]
   14001ed4b:	ret    
   14001ed4c:	mov    rbx,QWORD PTR [rsp+0x8]
   14001ed51:	mov    eax,r9d
   14001ed54:	ret    
   14001ed55:	int3   
   14001ed56:	int3   
   14001ed57:	int3   
   14001ed58:	int3   
   14001ed59:	int3   
   14001ed5a:	int3   
   14001ed5b:	int3   
   14001ed5c:	int3   
   14001ed5d:	int3   
   14001ed5e:	int3   
   14001ed5f:	int3   
   14001ed60:	sub    rsp,0x48
   14001ed64:	cmp    DWORD PTR [rip+0x34ae9],0x1        # 0x140053854
   14001ed6b:	mov    r10,rcx
   14001ed6e:	jne    0x14001ed7a
   14001ed70:	mov    eax,0x1
   14001ed75:	add    rsp,0x48
   14001ed79:	ret    
   14001ed7a:	mov    eax,DWORD PTR [rcx+0x38]
   14001ed7d:	movups xmm1,XMMWORD PTR [rip+0x34b2c]        # 0x1400538b0
   14001ed84:	sub    eax,DWORD PTR [rcx+0x54]
   14001ed87:	mov    DWORD PTR [rsp+0x20],eax
   14001ed8b:	mov    eax,DWORD PTR [rcx+0x50]
   14001ed8e:	mov    ecx,DWORD PTR [rcx+0x3c]
   14001ed91:	movaps XMMWORD PTR [rsp+0x30],xmm1
   14001ed96:	cdq    
   14001ed97:	sub    eax,edx
   14001ed99:	mov    edx,DWORD PTR [r10+0x58]
   14001ed9d:	add    edx,DWORD PTR [r10+0x38]
   14001eda1:	sar    eax,1
   14001eda3:	sub    ecx,eax
   14001eda5:	add    eax,DWORD PTR [r10+0x3c]
   14001eda9:	mov    DWORD PTR [rsp+0x28],edx
   14001edad:	mov    DWORD PTR [rsp+0x24],ecx
   14001edb1:	mov    DWORD PTR [rsp+0x2c],eax
   14001edb5:	lea    rdx,[rsp+0x20]
   14001edba:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001edbf:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14001edc5:	lea    rcx,[rsp+0x30]
   14001edca:	call   0x14001c670
   14001edcf:	add    rsp,0x48
   14001edd3:	ret    
   14001edd4:	int3   
   14001edd5:	int3   
   14001edd6:	int3   
   14001edd7:	int3   
   14001edd8:	int3   
   14001edd9:	int3   
   14001edda:	int3   
   14001eddb:	int3   
   14001eddc:	int3   
   14001eddd:	int3   
   14001edde:	int3   
   14001eddf:	int3   
   14001ede0:	mov    QWORD PTR [rsp+0x10],rsi
   14001ede5:	push   rdi
   14001ede6:	sub    rsp,0x20
   14001edea:	cmp    DWORD PTR [rip+0x34a6f],0x0        # 0x140053860
   14001edf1:	mov    rdi,rdx
   14001edf4:	mov    rsi,rcx
   14001edf7:	jg     0x14001ee09
   14001edf9:	mov    eax,0x1
   14001edfe:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ee03:	add    rsp,0x20
   14001ee07:	pop    rdi
   14001ee08:	ret    
   14001ee09:	mov    rdx,QWORD PTR [rip+0x365b8]        # 0x1400553c8
   14001ee10:	lea    r8,[rip+0x1e601]        # 0x14003d418
   14001ee17:	mov    rcx,rdi
   14001ee1a:	mov    QWORD PTR [rsp+0x30],rbx
   14001ee1f:	call   0x14001c3e0
   14001ee24:	mov    rcx,rax
   14001ee27:	mov    rbx,rax
   14001ee2a:	call   0x14001f3a0
   14001ee2f:	test   eax,eax
   14001ee31:	jne    0x14001eeaf
   14001ee33:	cmp    BYTE PTR [rbx],al
   14001ee35:	jne    0x14001ee9d
   14001ee37:	mov    rdx,rdi
   14001ee3a:	mov    rcx,rsi
   14001ee3d:	call   0x14002b780
   14001ee42:	test   rax,rax
   14001ee45:	je     0x14001eeaf
   14001ee47:	mov    rdx,rdi
   14001ee4a:	mov    rcx,rsi
   14001ee4d:	call   0x14002b780
   14001ee52:	mov    rbx,rax
   14001ee55:	test   rax,rax
   14001ee58:	je     0x14001ee9d
   14001ee5a:	nop    WORD PTR [rax+rax*1+0x0]
   14001ee60:	mov    rdx,QWORD PTR [rip+0x364c9]        # 0x140055330
   14001ee67:	lea    r8,[rip+0x1e5aa]        # 0x14003d418
   14001ee6e:	mov    rcx,rbx
   14001ee71:	call   0x14001c3e0
   14001ee76:	cmp    BYTE PTR [rax],0x0
   14001ee79:	je     0x14001eeaf
   14001ee7b:	mov    rcx,rax
   14001ee7e:	call   0x14001f3a0
   14001ee83:	test   eax,eax
   14001ee85:	jne    0x14001eeaf
   14001ee87:	mov    r8,rdi
   14001ee8a:	mov    rdx,rbx
   14001ee8d:	mov    rcx,rsi
   14001ee90:	call   0x14002b890
   14001ee95:	mov    rbx,rax
   14001ee98:	test   rax,rax
   14001ee9b:	jne    0x14001ee60
   14001ee9d:	xor    eax,eax
   14001ee9f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001eea4:	mov    rsi,QWORD PTR [rsp+0x38]
   14001eea9:	add    rsp,0x20
   14001eead:	pop    rdi
   14001eeae:	ret    
   14001eeaf:	mov    rbx,QWORD PTR [rsp+0x30]
   14001eeb4:	mov    rsi,QWORD PTR [rsp+0x38]
   14001eeb9:	mov    eax,0x1
   14001eebe:	add    rsp,0x20
   14001eec2:	pop    rdi
   14001eec3:	ret    
   14001eec4:	int3   
   14001eec5:	int3   
   14001eec6:	int3   
   14001eec7:	int3   
   14001eec8:	int3   
   14001eec9:	int3   
   14001eeca:	int3   
   14001eecb:	int3   
   14001eecc:	int3   
   14001eecd:	int3   
   14001eece:	int3   
   14001eecf:	int3   
   14001eed0:	xor    eax,eax
   14001eed2:	mov    QWORD PTR [rsp+0x10],rax
   14001eed7:	cmp    cl,0x42
   14001eeda:	je     0x14001ef31
   14001eedc:	cmp    cl,0x4c
   14001eedf:	je     0x14001ef23
   14001eee1:	cmp    cl,0x52
   14001eee4:	je     0x14001ef07
   14001eee6:	cmp    cl,0x54
   14001eee9:	jne    0x14001ef39
   14001eeeb:	mov    eax,DWORD PTR [rip+0x3499b]        # 0x14005388c
   14001eef1:	mov    DWORD PTR [rsp+0x14],0xffffffff
   14001eef9:	dec    eax
   14001eefb:	mov    DWORD PTR [rip+0x34973],eax        # 0x140053874
   14001ef01:	mov    rax,QWORD PTR [rsp+0x10]
   14001ef06:	ret    
   14001ef07:	mov    eax,DWORD PTR [rip+0x3497b]        # 0x140053888
   14001ef0d:	mov    DWORD PTR [rsp+0x10],0xffffffff
   14001ef15:	dec    eax
   14001ef17:	mov    DWORD PTR [rip+0x34953],eax        # 0x140053870
   14001ef1d:	mov    rax,QWORD PTR [rsp+0x10]
   14001ef22:	ret    
   14001ef23:	mov    DWORD PTR [rsp+0x10],0x1
   14001ef2b:	mov    rax,QWORD PTR [rsp+0x10]
   14001ef30:	ret    
   14001ef31:	mov    DWORD PTR [rsp+0x14],0x1
   14001ef39:	mov    rax,QWORD PTR [rsp+0x10]
   14001ef3e:	ret    
   14001ef3f:	int3   
   14001ef40:	mov    QWORD PTR [rsp+0x8],rcx
   14001ef45:	sub    rsp,0x28
   14001ef49:	mov    rdx,QWORD PTR [rip+0x34930]        # 0x140053880
   14001ef50:	call   0x14001b3e0
   14001ef55:	mov    QWORD PTR [rsp+0x30],rax
   14001ef5a:	mov    ecx,DWORD PTR [rsp+0x30]
   14001ef5e:	test   ecx,ecx
   14001ef60:	js     0x14001ef7d
   14001ef62:	cmp    ecx,DWORD PTR [rip+0x34920]        # 0x140053888
   14001ef68:	jge    0x14001ef7d
   14001ef6a:	mov    rcx,rax
   14001ef6d:	shr    rcx,0x20
   14001ef71:	test   ecx,ecx
   14001ef73:	js     0x14001ef7d
   14001ef75:	cmp    ecx,DWORD PTR [rip+0x34911]        # 0x14005388c
   14001ef7b:	jl     0x14001efad
   14001ef7d:	cmp    DWORD PTR [rip+0x348f8],0x0        # 0x14005387c
   14001ef84:	je     0x14001ef92
   14001ef86:	mov    eax,DWORD PTR [rip+0x348e4]        # 0x140053870
   14001ef8c:	mov    DWORD PTR [rsp+0x30],eax
   14001ef90:	jmp    0x14001ef9c
   14001ef92:	mov    eax,DWORD PTR [rip+0x348dc]        # 0x140053874
   14001ef98:	mov    DWORD PTR [rsp+0x34],eax
   14001ef9c:	mov    rdx,QWORD PTR [rip+0x348d5]        # 0x140053878
   14001efa3:	mov    rcx,QWORD PTR [rsp+0x30]
   14001efa8:	call   0x14001b3e0
   14001efad:	add    rsp,0x28
   14001efb1:	ret    
   14001efb2:	int3   
   14001efb3:	int3   
   14001efb4:	int3   
   14001efb5:	int3   
   14001efb6:	int3   
   14001efb7:	int3   
   14001efb8:	int3   
   14001efb9:	int3   
   14001efba:	int3   
   14001efbb:	int3   
   14001efbc:	int3   
   14001efbd:	int3   
   14001efbe:	int3   
   14001efbf:	int3   
   14001efc0:	mov    QWORD PTR [rsp+0x8],rbx
   14001efc5:	push   rdi
   14001efc6:	sub    rsp,0x20
   14001efca:	mov    dl,0x3a
   14001efcc:	mov    rbx,rcx
   14001efcf:	call   0x14001cb10
   14001efd4:	mov    rcx,rbx
   14001efd7:	mov    edi,eax
   14001efd9:	call   QWORD PTR [rip+0x1e301]        # 0x14003d2e0
   14001efdf:	mov    rcx,QWORD PTR [rip+0x34882]        # 0x140053868
   14001efe6:	mov    rbx,rax
   14001efe9:	test   rcx,rcx
   14001efec:	je     0x14001eff4
   14001efee:	call   QWORD PTR [rip+0x1e2ac]        # 0x14003d2a0
   14001eff4:	lea    eax,[rdi+0x3]
   14001eff7:	movsxd rcx,eax
   14001effa:	shl    rcx,0x3
   14001effe:	call   0x14001d2c0
   14001f003:	lea    rdx,[rip+0x2d0ea]        # 0x14004c0f4
   14001f00a:	mov    rcx,rbx
   14001f00d:	mov    QWORD PTR [rip+0x34854],rax        # 0x140053868
   14001f014:	call   QWORD PTR [rip+0x1e12e]        # 0x14003d148
   14001f01a:	test   rax,rax
   14001f01d:	je     0x14001f054
   14001f01f:	mov    ebx,0x8
   14001f024:	nop    DWORD PTR [rax+0x0]
   14001f028:	nop    DWORD PTR [rax+rax*1+0x0]
   14001f030:	mov    rcx,QWORD PTR [rip+0x34831]        # 0x140053868
   14001f037:	lea    rdx,[rip+0x2d0b6]        # 0x14004c0f4
   14001f03e:	lea    rbx,[rbx+0x8]
   14001f042:	mov    QWORD PTR [rbx+rcx*1-0x8],rax
   14001f047:	xor    ecx,ecx
   14001f049:	call   QWORD PTR [rip+0x1e0f9]        # 0x14003d148
   14001f04f:	test   rax,rax
   14001f052:	jne    0x14001f030
   14001f054:	lea    eax,[rdi+0x1]
   14001f057:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f05c:	add    rsp,0x20
   14001f060:	pop    rdi
   14001f061:	ret    
   14001f062:	int3   
   14001f063:	int3   
   14001f064:	int3   
   14001f065:	int3   
   14001f066:	int3   
   14001f067:	int3   
   14001f068:	int3   
   14001f069:	int3   
   14001f06a:	int3   
   14001f06b:	int3   
   14001f06c:	int3   
   14001f06d:	int3   
   14001f06e:	int3   
   14001f06f:	int3   
   14001f070:	mov    QWORD PTR [rsp+0x8],rbx
   14001f075:	mov    QWORD PTR [rsp+0x10],rbp
   14001f07a:	mov    QWORD PTR [rsp+0x18],rsi
   14001f07f:	push   rdi
   14001f080:	push   r12
   14001f082:	push   r13
   14001f084:	push   r14
   14001f086:	push   r15
   14001f088:	sub    rsp,0xc0
   14001f08f:	xor    r13d,r13d
   14001f092:	xor    bpl,bpl
   14001f095:	mov    r12,rcx
   14001f098:	cmp    DWORD PTR [rip+0x2d051],r13d        # 0x14004c0f0
   14001f09f:	mov    r15d,r13d
   14001f0a2:	je     0x14001f0cf
   14001f0a4:	lea    r8,[rip+0x34835]        # 0x1400538e0
   14001f0ab:	lea    rcx,[rip+0x348ae]        # 0x140053960
   14001f0b2:	mov    edx,0x80
   14001f0b7:	call   0x14001fdc0
   14001f0bc:	lea    rcx,[rip+0xffffffffffffe2cd]        # 0x14001d390
   14001f0c3:	call   0x14003bc6c
   14001f0c8:	mov    DWORD PTR [rip+0x2d021],r13d        # 0x14004c0f0
   14001f0cf:	lea    r8,[rsp+0x40]
   14001f0d4:	lea    rcx,[rsp+0x20]
   14001f0d9:	mov    edx,0x80
   14001f0de:	call   0x14001fdc0
   14001f0e3:	lea    rax,[rip+0x34896]        # 0x140053980
   14001f0ea:	mov    rbx,r12
   14001f0ed:	mov    r14,rax
   14001f0f0:	lea    rdx,[rip+0x34a81]        # 0x140053b78
   14001f0f7:	cmp    BYTE PTR [rbx],0x0
   14001f0fa:	je     0x14001f121
   14001f0fc:	nop    DWORD PTR [rax+0x0]
   14001f100:	movsx  ecx,BYTE PTR [rbx]
   14001f103:	call   QWORD PTR [rip+0x1df8f]        # 0x14003d098
   14001f109:	test   eax,eax
   14001f10b:	jne    0x14001f112
   14001f10d:	cmp    BYTE PTR [rbx],0x2c
   14001f110:	jne    0x14001f11a
   14001f112:	inc    rbx
   14001f115:	cmp    BYTE PTR [rbx],0x0
   14001f118:	jne    0x14001f100
   14001f11a:	lea    rdx,[rip+0x34a57]        # 0x140053b78
   14001f121:	movzx  ecx,BYTE PTR [rbx]
   14001f124:	movzx  eax,cl
   14001f127:	test   cl,cl
   14001f129:	je     0x14001f198
   14001f12b:	sub    al,0x28
   14001f12d:	cmp    al,0x1
   14001f12f:	ja     0x14001f139
   14001f131:	movsx  esi,cl
   14001f134:	inc    rbx
   14001f137:	jmp    0x14001f19b
   14001f139:	mov    esi,0x1
   14001f13e:	movabs r13,0x130000000001
   14001f148:	nop    DWORD PTR [rax+rax*1+0x0]
   14001f150:	movsx  rdi,BYTE PTR [rbx]
   14001f154:	mov    rax,rdi
   14001f157:	cmp    edi,0x2c
   14001f15a:	ja     0x14001f162
   14001f15c:	bt     r13,rax
   14001f160:	jb     0x14001f18c
   14001f162:	mov    rax,QWORD PTR [rsp+0x30]
   14001f167:	cmp    QWORD PTR [rsp+0x28],rax
   14001f16c:	jb     0x14001f17a
   14001f16e:	lea    rcx,[rsp+0x20]
   14001f173:	mov    edx,esi
   14001f175:	call   0x14001fe20
   14001f17a:	mov    rax,QWORD PTR [rsp+0x28]
   14001f17f:	mov    BYTE PTR [rax],dil
   14001f182:	inc    QWORD PTR [rsp+0x28]
   14001f187:	inc    rbx
   14001f18a:	jmp    0x14001f150
   14001f18c:	xor    r13d,r13d
   14001f18f:	lea    rdx,[rip+0x349e2]        # 0x140053b78
   14001f196:	jmp    0x14001f19b
   14001f198:	mov    esi,r13d
   14001f19b:	test   esi,esi
   14001f19d:	je     0x14001f30d
   14001f1a3:	sub    esi,0x28
   14001f1a6:	je     0x14001f286
   14001f1ac:	dec    esi
   14001f1ae:	je     0x14001f279
   14001f1b4:	test   bpl,bpl
   14001f1b7:	jne    0x14001f209
   14001f1b9:	cmp    r14,rdx
   14001f1bc:	je     0x14001f293
   14001f1c2:	mov    rax,QWORD PTR [rip+0x347a7]        # 0x140053970
   14001f1c9:	cmp    QWORD PTR [rip+0x34798],rax        # 0x140053968
   14001f1d0:	jb     0x14001f1e3
   14001f1d2:	lea    rcx,[rip+0x34787]        # 0x140053960
   14001f1d9:	mov    edx,0x1
   14001f1de:	call   0x14001fe20
   14001f1e3:	mov    rax,QWORD PTR [rip+0x3477e]        # 0x140053968
   14001f1ea:	inc    r15d
   14001f1ed:	mov    BYTE PTR [rax],0x0
   14001f1f0:	mov    rax,QWORD PTR [rip+0x34771]        # 0x140053968
   14001f1f7:	inc    rax
   14001f1fa:	add    r14,0x8
   14001f1fe:	mov    QWORD PTR [r14-0x8],rax
   14001f202:	mov    QWORD PTR [rip+0x3475f],rax        # 0x140053968
   14001f209:	mov    rax,QWORD PTR [rsp+0x30]
   14001f20e:	cmp    QWORD PTR [rsp+0x28],rax
   14001f213:	jb     0x14001f224
   14001f215:	lea    rcx,[rsp+0x20]
   14001f21a:	mov    edx,0x1
   14001f21f:	call   0x14001fe20
   14001f224:	mov    rax,QWORD PTR [rsp+0x28]
   14001f229:	lea    rcx,[rip+0x34730]        # 0x140053960
   14001f230:	mov    BYTE PTR [rax],0x0
   14001f233:	mov    rdx,QWORD PTR [rsp+0x20]
   14001f238:	mov    QWORD PTR [rsp+0x28],rdx
   14001f23d:	call   0x14001ff20
   14001f242:	mov    rax,QWORD PTR [rip+0x3471f]        # 0x140053968
   14001f249:	cmp    rax,QWORD PTR [rip+0x34720]        # 0x140053970
   14001f250:	jb     0x14001f26a
   14001f252:	lea    rcx,[rip+0x34707]        # 0x140053960
   14001f259:	mov    edx,0x1
   14001f25e:	call   0x14001fe20
   14001f263:	mov    rax,QWORD PTR [rip+0x346fe]        # 0x140053968
   14001f26a:	mov    BYTE PTR [rax],0x0
   14001f26d:	inc    QWORD PTR [rip+0x346f4]        # 0x140053968
   14001f274:	jmp    0x14001f0f0
   14001f279:	test   bpl,bpl
   14001f27c:	je     0x14001f2ca
   14001f27e:	xor    bpl,bpl
   14001f281:	jmp    0x14001f0f7
   14001f286:	test   bpl,bpl
   14001f289:	jne    0x14001f2d9
   14001f28b:	mov    bpl,0x1
   14001f28e:	jmp    0x14001f0f7
   14001f293:	call   QWORD PTR [rip+0x1e037]        # 0x14003d2d0
   14001f299:	lea    rdx,[rip+0x1f900]        # 0x14003eba0
   14001f2a0:	mov    r8,r12
   14001f2a3:	lea    rcx,[rax+0x60]
   14001f2a7:	call   QWORD PTR [rip+0x1e013]        # 0x14003d2c0
   14001f2ad:	movsxd rax,r15d
   14001f2b0:	lea    rbx,[rip+0x346c9]        # 0x140053980
   14001f2b7:	lea    rcx,[rsp+0x20]
   14001f2bc:	mov    QWORD PTR [rbx+rax*8],r13
   14001f2c0:	call   0x14001fda0
   14001f2c5:	jmp    0x14001f373
   14001f2ca:	call   QWORD PTR [rip+0x1e000]        # 0x14003d2d0
   14001f2d0:	lea    rdx,[rip+0x1f8a9]        # 0x14003eb80
   14001f2d7:	jmp    0x14001f2e6
   14001f2d9:	call   QWORD PTR [rip+0x1dff1]        # 0x14003d2d0
   14001f2df:	lea    rdx,[rip+0x1f872]        # 0x14003eb58
   14001f2e6:	lea    rcx,[rax+0x60]
   14001f2ea:	mov    r8,r12
   14001f2ed:	call   QWORD PTR [rip+0x1dfcd]        # 0x14003d2c0
   14001f2f3:	lea    rcx,[rsp+0x20]
   14001f2f8:	mov    QWORD PTR [rip+0x34681],r13        # 0x140053980
   14001f2ff:	call   0x14001fda0
   14001f304:	lea    rax,[rip+0x34675]        # 0x140053980
   14001f30b:	jmp    0x14001f376
   14001f30d:	test   bpl,bpl
   14001f310:	je     0x14001f321
   14001f312:	call   QWORD PTR [rip+0x1dfb8]        # 0x14003d2d0
   14001f318:	lea    rdx,[rip+0x1f8a1]        # 0x14003ebc0
   14001f31f:	jmp    0x14001f2e6
   14001f321:	movsxd rax,r15d
   14001f324:	lea    rbx,[rip+0x34655]        # 0x140053980
   14001f32b:	lea    rcx,[rsp+0x20]
   14001f330:	mov    QWORD PTR [rbx+rax*8],r13
   14001f334:	call   0x14001fda0
   14001f339:	mov    r8,QWORD PTR [rip+0x34628]        # 0x140053968
   14001f340:	cmp    r8,QWORD PTR [rip+0x34629]        # 0x140053970
   14001f347:	jb     0x14001f361
   14001f349:	lea    rcx,[rip+0x34610]        # 0x140053960
   14001f350:	mov    edx,0x1
   14001f355:	call   0x14001fe20
   14001f35a:	mov    r8,QWORD PTR [rip+0x34607]        # 0x140053968
   14001f361:	mov    BYTE PTR [r8],0x0
   14001f365:	mov    rcx,QWORD PTR [rip+0x345f4]        # 0x140053960
   14001f36c:	mov    QWORD PTR [rip+0x345f5],rcx        # 0x140053968
   14001f373:	mov    rax,rbx
   14001f376:	lea    r11,[rsp+0xc0]
   14001f37e:	mov    rbx,QWORD PTR [r11+0x30]
   14001f382:	mov    rbp,QWORD PTR [r11+0x38]
   14001f386:	mov    rsi,QWORD PTR [r11+0x40]
   14001f38a:	mov    rsp,r11
   14001f38d:	pop    r15
   14001f38f:	pop    r14
   14001f391:	pop    r13
   14001f393:	pop    r12
   14001f395:	pop    rdi
   14001f396:	ret    
   14001f397:	int3   
   14001f398:	int3   
   14001f399:	int3   
   14001f39a:	int3   
   14001f39b:	int3   
   14001f39c:	int3   
   14001f39d:	int3   
   14001f39e:	int3   
   14001f39f:	int3   
   14001f3a0:	mov    QWORD PTR [rsp+0x8],rbx
   14001f3a5:	mov    QWORD PTR [rsp+0x10],rsi
   14001f3aa:	push   rdi
   14001f3ab:	sub    rsp,0xc0
   14001f3b2:	mov    rbx,rcx
   14001f3b5:	lea    r8,[rsp+0x40]
   14001f3ba:	lea    rcx,[rsp+0x20]
   14001f3bf:	mov    edx,0x80
   14001f3c4:	xor    edi,edi
   14001f3c6:	call   0x14001fdc0
   14001f3cb:	lea    rcx,[rsp+0x20]
   14001f3d0:	mov    rdx,rbx
   14001f3d3:	call   0x14001ff20
   14001f3d8:	mov    rax,QWORD PTR [rsp+0x28]
   14001f3dd:	cmp    rax,QWORD PTR [rsp+0x30]
   14001f3e2:	jb     0x14001f3f6
   14001f3e4:	lea    edx,[rdi+0x1]
   14001f3e7:	lea    rcx,[rsp+0x20]
   14001f3ec:	call   0x14001fe20
   14001f3f1:	mov    rax,QWORD PTR [rsp+0x28]
   14001f3f6:	mov    BYTE PTR [rax],dil
   14001f3f9:	mov    rcx,QWORD PTR [rsp+0x20]
   14001f3fe:	lea    rdx,[rip+0x2ccef]        # 0x14004c0f4
   14001f405:	mov    QWORD PTR [rsp+0x28],rcx
   14001f40a:	call   QWORD PTR [rip+0x1dd38]        # 0x14003d148
   14001f410:	mov    rbx,rax
   14001f413:	mov    rsi,rax
   14001f416:	test   rax,rax
   14001f419:	je     0x14001f42d
   14001f41b:	lea    rdx,[rip+0x2ccd2]        # 0x14004c0f4
   14001f422:	xor    ecx,ecx
   14001f424:	call   QWORD PTR [rip+0x1dd1e]        # 0x14003d148
   14001f42a:	mov    rsi,rax
   14001f42d:	test   rbx,rbx
   14001f430:	mov    ecx,edi
   14001f432:	mov    eax,edi
   14001f434:	setne  cl
   14001f437:	test   rsi,rsi
   14001f43a:	setne  al
   14001f43d:	add    ecx,eax
   14001f43f:	je     0x14001f4a4
   14001f441:	dec    ecx
   14001f443:	je     0x14001f48c
   14001f445:	dec    ecx
   14001f447:	jne    0x14001f4a4
   14001f449:	xor    edx,edx
   14001f44b:	mov    rcx,rbx
   14001f44e:	call   0x14001ebf0
   14001f453:	mov    edx,DWORD PTR [rip+0x34407]        # 0x140053860
   14001f459:	mov    rcx,rsi
   14001f45c:	mov    ebx,eax
   14001f45e:	call   0x14001ebf0
   14001f463:	mov    ecx,eax
   14001f465:	test   ebx,ebx
   14001f467:	js     0x14001f477
   14001f469:	test   eax,eax
   14001f46b:	js     0x14001f477
   14001f46d:	cmp    ebx,eax
   14001f46f:	jle    0x14001f477
   14001f471:	mov    eax,ebx
   14001f473:	mov    ebx,ecx
   14001f475:	mov    ecx,eax
   14001f477:	mov    eax,DWORD PTR [rip+0x343df]        # 0x14005385c
   14001f47d:	cmp    ebx,eax
   14001f47f:	jg     0x14001f4a4
   14001f481:	cmp    eax,ecx
   14001f483:	jg     0x14001f4a4
   14001f485:	mov    edi,0x1
   14001f48a:	jmp    0x14001f4a4
   14001f48c:	mov    edx,DWORD PTR [rip+0x343ca]        # 0x14005385c
   14001f492:	mov    rcx,rbx
   14001f495:	call   0x14001ebf0
   14001f49a:	cmp    eax,DWORD PTR [rip+0x343bc]        # 0x14005385c
   14001f4a0:	sete   dil
   14001f4a4:	lea    rcx,[rsp+0x20]
   14001f4a9:	call   0x14001fda0
   14001f4ae:	lea    r11,[rsp+0xc0]
   14001f4b6:	mov    eax,edi
   14001f4b8:	mov    rbx,QWORD PTR [r11+0x10]
   14001f4bc:	mov    rsi,QWORD PTR [r11+0x18]
   14001f4c0:	mov    rsp,r11
   14001f4c3:	pop    rdi
   14001f4c4:	ret    
   14001f4c5:	int3   
   14001f4c6:	int3   
   14001f4c7:	int3   
   14001f4c8:	int3   
   14001f4c9:	int3   
   14001f4ca:	int3   
   14001f4cb:	int3   
   14001f4cc:	int3   
   14001f4cd:	int3   
   14001f4ce:	int3   
   14001f4cf:	int3   
   14001f4d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001f4d5:	push   rdi
   14001f4d6:	sub    rsp,0x20
   14001f4da:	xor    edi,edi
   14001f4dc:	lea    rdx,[rip+0x1f55d]        # 0x14003ea40
   14001f4e3:	mov    QWORD PTR [rip+0x34396],rdi        # 0x140053880
   14001f4ea:	mov    QWORD PTR [rip+0x34387],rdi        # 0x140053878
   14001f4f1:	call   0x1400275b0
   14001f4f6:	mov    rbx,rax
   14001f4f9:	test   rax,rax
   14001f4fc:	je     0x14001f526
   14001f4fe:	movzx  ecx,BYTE PTR [rax]
   14001f501:	test   cl,cl
   14001f503:	je     0x14001f526
   14001f505:	call   0x14001eed0
   14001f50a:	movzx  ecx,BYTE PTR [rbx+0x1]
   14001f50e:	mov    QWORD PTR [rip+0x34363],rax        # 0x140053878
   14001f515:	call   0x14001eed0
   14001f51a:	mov    rcx,rax
   14001f51d:	mov    QWORD PTR [rip+0x3435c],rax        # 0x140053880
   14001f524:	jmp    0x14001f52d
   14001f526:	mov    rcx,QWORD PTR [rip+0x34353]        # 0x140053880
   14001f52d:	mov    eax,DWORD PTR [rip+0x34345]        # 0x140053878
   14001f533:	add    eax,DWORD PTR [rip+0x34347]        # 0x140053880
   14001f539:	cdq    
   14001f53a:	xor    eax,edx
   14001f53c:	sub    eax,edx
   14001f53e:	cmp    eax,0x1
   14001f541:	jne    0x14001f559
   14001f543:	shr    rcx,0x20
   14001f547:	add    ecx,DWORD PTR [rip+0x3432f]        # 0x14005387c
   14001f54d:	mov    eax,ecx
   14001f54f:	cdq    
   14001f550:	xor    eax,edx
   14001f552:	sub    eax,edx
   14001f554:	cmp    eax,0x1
   14001f557:	je     0x14001f59a
   14001f559:	mov    DWORD PTR [rip+0x34319],edi        # 0x140053878
   14001f55f:	mov    DWORD PTR [rip+0x34313],0x1        # 0x14005387c
   14001f569:	mov    QWORD PTR [rip+0x3430c],0x1        # 0x140053880
   14001f574:	mov    QWORD PTR [rip+0x342f5],rdi        # 0x140053870
   14001f57b:	test   rbx,rbx
   14001f57e:	je     0x14001f59a
   14001f580:	call   QWORD PTR [rip+0x1dd4a]        # 0x14003d2d0
   14001f586:	lea    rdx,[rip+0x1f4bb]        # 0x14003ea48
   14001f58d:	mov    r8,rbx
   14001f590:	lea    rcx,[rax+0x60]
   14001f594:	call   QWORD PTR [rip+0x1dd26]        # 0x14003d2c0
   14001f59a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f59f:	add    rsp,0x20
   14001f5a3:	pop    rdi
   14001f5a4:	ret    
   14001f5a5:	int3   
   14001f5a6:	int3   
   14001f5a7:	int3   
   14001f5a8:	int3   
   14001f5a9:	int3   
   14001f5aa:	int3   
   14001f5ab:	int3   
   14001f5ac:	int3   
   14001f5ad:	int3   
   14001f5ae:	int3   
   14001f5af:	int3   
   14001f5b0:	rex push rbp
   14001f5b2:	push   rbx
   14001f5b3:	push   rsi
   14001f5b4:	push   r13
   14001f5b6:	push   r14
   14001f5b8:	mov    rbp,rsp
   14001f5bb:	sub    rsp,0x80
   14001f5c2:	cmp    DWORD PTR [rcx+0x60],0x0
   14001f5c6:	movaps XMMWORD PTR [rsp+0x40],xmm8
   14001f5cc:	mov    rsi,rcx
   14001f5cf:	jne    0x14001f5d7
   14001f5d1:	cmp    DWORD PTR [rcx+0x64],0x0
   14001f5d5:	je     0x14001f5f1
   14001f5d7:	lea    rdx,[rip+0x1f492]        # 0x14003ea70
   14001f5de:	lea    rcx,[rip+0x1f4fb]        # 0x14003eae0
   14001f5e5:	mov    r8d,0x219
   14001f5eb:	call   QWORD PTR [rip+0x1da9f]        # 0x14003d090
   14001f5f1:	mov    rcx,QWORD PTR [rip+0x34270]        # 0x140053868
   14001f5f8:	test   rcx,rcx
   14001f5fb:	je     0x14001f603
   14001f5fd:	call   QWORD PTR [rip+0x1dc9d]        # 0x14003d2a0
   14001f603:	lea    rdx,[rip+0x1f52e]        # 0x14003eb38
   14001f60a:	mov    rcx,rsi
   14001f60d:	call   0x1400275b0
   14001f612:	xor    r13d,r13d
   14001f615:	test   rax,rax
   14001f618:	je     0x14001f62a
   14001f61a:	mov    rcx,rax
   14001f61d:	call   0x14001efc0
   14001f622:	mov    DWORD PTR [rip+0x34238],eax        # 0x140053860
   14001f628:	jmp    0x14001f638
   14001f62a:	mov    QWORD PTR [rip+0x34237],r13        # 0x140053868
   14001f631:	mov    DWORD PTR [rip+0x34228],r13d        # 0x140053860
   14001f638:	mov    rcx,QWORD PTR [rsi+0x50]
   14001f63c:	movsd  xmm8,QWORD PTR [rip+0x1dd9b]        # 0x14003d3e0
   14001f645:	mov    edx,DWORD PTR [rcx+0x28]
   14001f648:	test   edx,edx
   14001f64a:	jle    0x14001f6c8
   14001f64c:	mov    r8d,DWORD PTR [rsi+0x68]
   14001f650:	cmp    edx,r8d
   14001f653:	jl     0x14001f65d
   14001f655:	mov    eax,DWORD PTR [rsi+0x6c]
   14001f658:	cmp    DWORD PTR [rcx+0x2c],eax
   14001f65b:	jge    0x14001f6c8
   14001f65d:	movd   xmm1,DWORD PTR [rcx+0x2c]
   14001f662:	movd   xmm3,edx
   14001f666:	movd   xmm0,r8d
   14001f66b:	cvtdq2pd xmm1,xmm1
   14001f66f:	cvtdq2pd xmm0,xmm0
   14001f673:	cvtdq2pd xmm3,xmm3
   14001f677:	divsd  xmm3,xmm0
   14001f67b:	movd   xmm0,DWORD PTR [rsi+0x6c]
   14001f680:	cvtdq2pd xmm0,xmm0
   14001f684:	divsd  xmm1,xmm0
   14001f688:	comisd xmm1,xmm3
   14001f68c:	ja     0x14001f691
   14001f68e:	movaps xmm3,xmm1
   14001f691:	movsd  QWORD PTR [rcx+0x8],xmm3
   14001f696:	movd   xmm0,DWORD PTR [rsi+0x68]
   14001f69b:	mov    rax,QWORD PTR [rsi+0x50]
   14001f69f:	cvtdq2pd xmm0,xmm0
   14001f6a3:	mulsd  xmm0,xmm3
   14001f6a7:	cvttsd2si ecx,xmm0
   14001f6ab:	mov    DWORD PTR [rax+0x28],ecx
   14001f6ae:	movd   xmm0,DWORD PTR [rsi+0x6c]
   14001f6b3:	mov    rax,QWORD PTR [rsi+0x50]
   14001f6b7:	cvtdq2pd xmm0,xmm0
   14001f6bb:	mulsd  xmm0,xmm3
   14001f6bf:	cvttsd2si ecx,xmm0
   14001f6c3:	mov    DWORD PTR [rax+0x2c],ecx
   14001f6c6:	jmp    0x14001f6e6
   14001f6c8:	mov    rax,QWORD PTR [rsi+0x68]
   14001f6cc:	movaps xmm3,xmm8
   14001f6d0:	mov    QWORD PTR [rcx+0x28],rax
   14001f6d4:	mov    rax,QWORD PTR [rsi+0x50]
   14001f6d8:	movabs rcx,0x3ff0000000000000
   14001f6e2:	mov    QWORD PTR [rax+0x8],rcx
   14001f6e6:	mov    r14,QWORD PTR [rsi+0x50]
   14001f6ea:	mov    QWORD PTR [rsp+0xc0],rdi
   14001f6f2:	mov    QWORD PTR [rsp+0x78],r12
   14001f6f7:	mov    rax,QWORD PTR [r14+0x18]
   14001f6fb:	mov    QWORD PTR [rsp+0x70],r15
   14001f700:	mov    QWORD PTR [rip+0x34189],rax        # 0x140053890
   14001f707:	cmp    DWORD PTR [r14+0x20],r13d
   14001f70b:	jle    0x14001f8e8
   14001f711:	cmp    DWORD PTR [r14+0x24],r13d
   14001f715:	jle    0x14001f8e8
   14001f71b:	mov    rdi,QWORD PTR [r14+0x20]
   14001f71f:	mov    ecx,DWORD PTR [rip+0x3416b]        # 0x140053890
   14001f725:	movzx  r12d,BYTE PTR [r14+0x30]
   14001f72a:	movaps XMMWORD PTR [rsp+0x60],xmm6
   14001f72f:	movaps XMMWORD PTR [rsp+0x50],xmm7
   14001f734:	movaps XMMWORD PTR [rsp+0x30],xmm9
   14001f73a:	mov    QWORD PTR [rip+0x3417f],rdi        # 0x1400538c0
   14001f741:	mov    r15d,DWORD PTR [rip+0x34178]        # 0x1400538c0
   14001f748:	shr    rax,0x20
   14001f74c:	add    ecx,ecx
   14001f74e:	add    eax,eax
   14001f750:	shr    rdi,0x20
   14001f754:	sub    r15d,ecx
   14001f757:	sub    edi,eax
   14001f759:	movd   xmm0,r15d
   14001f75e:	movd   xmm6,edi
   14001f762:	cvtdq2pd xmm0,xmm0
   14001f766:	cvtdq2pd xmm6,xmm6
   14001f76a:	movsd  QWORD PTR [rip+0x3412e],xmm0        # 0x1400538a0
   14001f772:	movsd  QWORD PTR [rip+0x3412e],xmm6        # 0x1400538a8
   14001f77a:	test   r12b,r12b
   14001f77d:	je     0x14001f7f3
   14001f77f:	movss  xmm0,DWORD PTR [rip+0x3411d]        # 0x1400538a4
   14001f787:	movss  xmm1,DWORD PTR [rip+0x3411d]        # 0x1400538ac
   14001f78f:	movss  xmm2,DWORD PTR [rip+0x34109]        # 0x1400538a0
   14001f797:	unpcklps xmm2,xmm0
   14001f79a:	movss  xmm0,DWORD PTR [rip+0x34106]        # 0x1400538a8
   14001f7a2:	movsd  QWORD PTR [rbp-0x58],xmm2
   14001f7a7:	unpcklps xmm0,xmm1
   14001f7aa:	movsd  QWORD PTR [rbp-0x60],xmm0
   14001f7af:	movss  xmm0,DWORD PTR [rbp-0x60]
   14001f7b4:	movss  xmm1,DWORD PTR [rbp-0x5c]
   14001f7b9:	movss  DWORD PTR [rip+0x340df],xmm0        # 0x1400538a0
   14001f7c1:	movss  xmm0,DWORD PTR [rbp-0x58]
   14001f7c6:	movss  DWORD PTR [rip+0x340d6],xmm1        # 0x1400538a4
   14001f7ce:	movss  xmm1,DWORD PTR [rbp-0x54]
   14001f7d3:	movss  DWORD PTR [rip+0x340cd],xmm0        # 0x1400538a8
   14001f7db:	movsd  xmm0,QWORD PTR [rip+0x340bd]        # 0x1400538a0
   14001f7e3:	movss  DWORD PTR [rip+0x340c1],xmm1        # 0x1400538ac
   14001f7eb:	movsd  xmm6,QWORD PTR [rip+0x340b5]        # 0x1400538a8
   14001f7f3:	movd   xmm1,DWORD PTR [rsi+0x68]
   14001f7f8:	divsd  xmm0,xmm3
   14001f7fc:	divsd  xmm6,xmm3
   14001f800:	cvtdq2pd xmm1,xmm1
   14001f804:	comisd xmm1,xmm0
   14001f808:	movsd  QWORD PTR [rip+0x34090],xmm0        # 0x1400538a0
   14001f810:	movsd  QWORD PTR [rip+0x34090],xmm6        # 0x1400538a8
   14001f818:	ja     0x14001f825
   14001f81a:	movaps xmm0,xmm1
   14001f81d:	movsd  QWORD PTR [rip+0x3407b],xmm0        # 0x1400538a0
   14001f825:	movd   xmm7,DWORD PTR [rsi+0x6c]
   14001f82a:	cvtdq2pd xmm7,xmm7
   14001f82e:	comisd xmm7,xmm6
   14001f832:	ja     0x14001f83f
   14001f834:	movaps xmm6,xmm7
   14001f837:	movsd  QWORD PTR [rip+0x34069],xmm6        # 0x1400538a8
   14001f83f:	xorps  xmm9,xmm9
   14001f843:	comisd xmm0,xmm9
   14001f848:	jbe    0x14001f858
   14001f84a:	divsd  xmm1,xmm0
   14001f84e:	movaps xmm0,xmm1
   14001f851:	call   0x14003bc8a
   14001f856:	jmp    0x14001f85c
   14001f858:	movaps xmm0,xmm8
   14001f85c:	cvttsd2si ebx,xmm0
   14001f860:	comisd xmm6,xmm9
   14001f865:	movaps xmm9,XMMWORD PTR [rsp+0x30]
   14001f86b:	mov    DWORD PTR [rip+0x34017],ebx        # 0x140053888
   14001f871:	jbe    0x14001f881
   14001f873:	divsd  xmm7,xmm6
   14001f877:	movaps xmm0,xmm7
   14001f87a:	call   0x14003bc8a
   14001f87f:	jmp    0x14001f885
   14001f881:	movaps xmm0,xmm8
   14001f885:	movaps xmm7,XMMWORD PTR [rsp+0x50]
   14001f88a:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   14001f88f:	cvttsd2si eax,xmm0
   14001f893:	mov    DWORD PTR [rip+0x33ff3],eax        # 0x14005388c
   14001f899:	imul   eax,ebx
   14001f89c:	mov    DWORD PTR [rip+0x33fb2],eax        # 0x140053854
   14001f8a2:	mov    rax,QWORD PTR [r14+0x28]
   14001f8a6:	mov    QWORD PTR [rbp+0x38],rax
   14001f8aa:	test   r12b,r12b
   14001f8ad:	je     0x14001f8c0
   14001f8af:	mov    ecx,DWORD PTR [rbp+0x3c]
   14001f8b2:	mov    QWORD PTR [rbp+0x30],rax
   14001f8b6:	mov    DWORD PTR [rbp+0x34],eax
   14001f8b9:	mov    DWORD PTR [rbp+0x30],ecx
   14001f8bc:	mov    rax,QWORD PTR [rbp+0x30]
   14001f8c0:	cmp    eax,r15d
   14001f8c3:	mov    r14d,r15d
   14001f8c6:	mov    r12d,edi
   14001f8c9:	cmovl  r14d,eax
   14001f8cd:	shr    rax,0x20
   14001f8d1:	cmp    eax,edi
   14001f8d3:	mov    DWORD PTR [rbp+0x30],r14d
   14001f8d7:	cmovl  r12d,eax
   14001f8db:	mov    DWORD PTR [rbp+0x34],r12d
   14001f8df:	mov    rbx,QWORD PTR [rbp+0x30]
   14001f8e3:	jmp    0x14001f988
   14001f8e8:	movd   xmm0,DWORD PTR [rsi+0x68]
   14001f8ed:	movd   xmm1,DWORD PTR [rsi+0x6c]
   14001f8f2:	mov    rbx,QWORD PTR [r14+0x28]
   14001f8f6:	shr    rax,0x20
   14001f8fa:	mov    ecx,0x18c
   14001f8ff:	mov    r15d,0x132
   14001f905:	sub    r15d,DWORD PTR [rip+0x33f84]        # 0x140053890
   14001f90c:	sub    ecx,eax
   14001f90e:	mov    DWORD PTR [rip+0x33fa8],0x264        # 0x1400538c0
   14001f918:	cvtdq2pd xmm0,xmm0
   14001f91c:	cvtdq2pd xmm1,xmm1
   14001f920:	add    r15d,r15d
   14001f923:	movsd  QWORD PTR [rip+0x33f75],xmm0        # 0x1400538a0
   14001f92b:	movsd  QWORD PTR [rip+0x33f75],xmm1        # 0x1400538a8
   14001f933:	mov    DWORD PTR [rip+0x33f87],0x318        # 0x1400538c4
   14001f93d:	lea    edi,[rcx+rcx*1]
   14001f940:	mov    QWORD PTR [rbp+0x30],rbx
   14001f944:	cmp    BYTE PTR [r14+0x30],r13b
   14001f948:	je     0x14001f962
   14001f94a:	mov    eax,DWORD PTR [rbp+0x34]
   14001f94d:	mov    QWORD PTR [rbp+0x38],rbx
   14001f951:	mov    DWORD PTR [rbp+0x38],eax
   14001f954:	mov    eax,DWORD PTR [rbp+0x30]
   14001f957:	mov    DWORD PTR [rbp+0x3c],eax
   14001f95a:	mov    rbx,QWORD PTR [rbp+0x38]
   14001f95e:	mov    QWORD PTR [rbp+0x30],rbx
   14001f962:	mov    r12d,DWORD PTR [rbp+0x34]
   14001f966:	mov    r14d,DWORD PTR [rbp+0x30]
   14001f96a:	mov    DWORD PTR [rip+0x33ee0],0x1        # 0x140053854
   14001f974:	mov    DWORD PTR [rip+0x33f0e],0x1        # 0x14005388c
   14001f97e:	mov    DWORD PTR [rip+0x33f00],0x1        # 0x140053888
   14001f988:	mov    rcx,rsi
   14001f98b:	call   0x14001f4d0
   14001f990:	mov    rax,QWORD PTR [rsi+0x50]
   14001f994:	cmp    BYTE PTR [rax+0x31],r13b
   14001f998:	je     0x14001f9c3
   14001f99a:	sub    r15d,r14d
   14001f99d:	cmovs  r15d,r13d
   14001f9a1:	sub    edi,r12d
   14001f9a4:	cmovs  edi,r13d
   14001f9a8:	mov    eax,r15d
   14001f9ab:	cdq    
   14001f9ac:	sub    eax,edx
   14001f9ae:	sar    eax,1
   14001f9b0:	add    DWORD PTR [rip+0x33eda],eax        # 0x140053890
   14001f9b6:	mov    eax,edi
   14001f9b8:	cdq    
   14001f9b9:	sub    eax,edx
   14001f9bb:	sar    eax,1
   14001f9bd:	add    DWORD PTR [rip+0x33ed1],eax        # 0x140053894
   14001f9c3:	mov    rcx,QWORD PTR [rip+0x33ec6]        # 0x140053890
   14001f9ca:	mov    rdx,rbx
   14001f9cd:	call   0x14001b3e0
   14001f9d2:	mov    rcx,QWORD PTR [rsi+0x48]
   14001f9d6:	mov    rdx,QWORD PTR [rip+0x35a43]        # 0x140055420
   14001f9dd:	mov    rcx,QWORD PTR [rcx]
   14001f9e0:	lea    r8,[rip+0x1ee61]        # 0x14003e848
   14001f9e7:	mov    QWORD PTR [rip+0x33eaa],rax        # 0x140053898
   14001f9ee:	call   0x14001c3a0
   14001f9f3:	mov    rcx,QWORD PTR [rsi+0x48]
   14001f9f7:	mov    rdx,QWORD PTR [rip+0x35a2a]        # 0x140055428
   14001f9fe:	movsd  xmm2,QWORD PTR [rip+0x1ee62]        # 0x14003e868
   14001fa06:	movaps xmm3,xmm8
   14001fa0a:	mov    rcx,QWORD PTR [rcx]
   14001fa0d:	mov    QWORD PTR [rip+0x33ebc],rax        # 0x1400538d0
   14001fa14:	call   0x14001c2e0
   14001fa19:	mov    r15,QWORD PTR [rsp+0x70]
   14001fa1e:	mov    r12,QWORD PTR [rsp+0x78]
   14001fa23:	movaps xmm8,XMMWORD PTR [rsp+0x40]
   14001fa29:	movsd  QWORD PTR [rip+0x33e97],xmm0        # 0x1400538c8
   14001fa31:	mov    rdi,QWORD PTR [rsp+0xc0]
   14001fa39:	add    rsp,0x80
   14001fa40:	pop    r14
   14001fa42:	pop    r13
   14001fa44:	pop    rsi
   14001fa45:	pop    rbx
   14001fa46:	pop    rbp
   14001fa47:	ret    
   14001fa48:	int3   
   14001fa49:	int3   
   14001fa4a:	int3   
   14001fa4b:	int3   
   14001fa4c:	int3   
   14001fa4d:	int3   
   14001fa4e:	int3   
   14001fa4f:	int3   
   14001fa50:	mov    QWORD PTR [rsp+0x18],rbx
   14001fa55:	mov    QWORD PTR [rsp+0x10],rdx
   14001fa5a:	push   rdi
   14001fa5b:	sub    rsp,0x30
   14001fa5f:	mov    rax,QWORD PTR [rcx+0x50]
   14001fa63:	movsd  xmm2,QWORD PTR [rip+0x33e35]        # 0x1400538a0
   14001fa6b:	inc    DWORD PTR [rip+0x33de7]        # 0x140053858
   14001fa71:	movzx  r8d,BYTE PTR [rax+0x30]
   14001fa76:	movsd  xmm3,QWORD PTR [rip+0x33e2a]        # 0x1400538a8
   14001fa7e:	movd   xmm0,edx
   14001fa82:	movzx  eax,r8b
   14001fa86:	mov    rbx,rcx
   14001fa89:	neg    al
   14001fa8b:	mov    rax,rdx
   14001fa8e:	cvtdq2pd xmm0,xmm0
   14001fa92:	sbb    edi,edi
   14001fa94:	shr    rax,0x20
   14001fa98:	mulsd  xmm0,xmm2
   14001fa9c:	and    edi,0x5a
   14001fa9f:	cvttsd2si ecx,xmm0
   14001faa3:	movd   xmm0,eax
   14001faa7:	mov    DWORD PTR [rip+0x33e03],ecx        # 0x1400538b0
   14001faad:	cvtdq2pd xmm0,xmm0
   14001fab1:	mulsd  xmm0,xmm3
   14001fab5:	cvttsd2si r9d,xmm0
   14001faba:	movd   xmm0,ecx
   14001fabe:	cvtdq2pd xmm0,xmm0
   14001fac2:	movd   xmm1,r9d
   14001fac7:	mov    DWORD PTR [rip+0x33de6],r9d        # 0x1400538b4
   14001face:	addsd  xmm0,xmm2
   14001fad2:	cvttsd2si eax,xmm0
   14001fad6:	cvtdq2pd xmm1,xmm1
   14001fada:	mov    DWORD PTR [rip+0x33dd8],eax        # 0x1400538b8
   14001fae0:	addsd  xmm1,xmm3
   14001fae4:	cvttsd2si eax,xmm1
   14001fae8:	mov    DWORD PTR [rip+0x33dce],eax        # 0x1400538bc
   14001faee:	test   r8b,r8b
   14001faf1:	jne    0x14001fb07
   14001faf3:	neg    r9d
   14001faf6:	neg    ecx
   14001faf8:	mov    edx,r9d
   14001fafb:	call   0x14001c660
   14001fb00:	mov    rdx,QWORD PTR [rsp+0x48]
   14001fb05:	jmp    0x14001fb3e
   14001fb07:	mov    eax,DWORD PTR [rsp+0x4c]
   14001fb0b:	inc    eax
   14001fb0d:	movd   xmm0,eax
   14001fb11:	cvtdq2pd xmm0,xmm0
   14001fb15:	mulsd  xmm0,xmm3
   14001fb19:	cvttsd2si eax,xmm0
   14001fb1d:	mov    DWORD PTR [rsp+0x40],eax
   14001fb21:	mov    eax,edx
   14001fb23:	neg    eax
   14001fb25:	movd   xmm0,eax
   14001fb29:	cvtdq2pd xmm0,xmm0
   14001fb2d:	mulsd  xmm0,xmm2
   14001fb31:	cvttsd2si eax,xmm0
   14001fb35:	mov    DWORD PTR [rsp+0x44],eax
   14001fb39:	mov    rax,QWORD PTR [rsp+0x40]
   14001fb3e:	mov    rcx,QWORD PTR [rbx+0x50]
   14001fb42:	mov    QWORD PTR [rsp+0x20],rax
   14001fb47:	mov    rax,QWORD PTR [rip+0x3599a]        # 0x1400554e8
   14001fb4e:	mov    r9d,edi
   14001fb51:	movsd  xmm2,QWORD PTR [rcx+0x8]
   14001fb56:	mov    rcx,rbx
   14001fb59:	call   QWORD PTR [rax+0x28]
   14001fb5c:	mov    r8,QWORD PTR [rip+0x33d55]        # 0x1400538b8
   14001fb63:	mov    rdx,QWORD PTR [rip+0x33d46]        # 0x1400538b0
   14001fb6a:	mov    rcx,rbx
   14001fb6d:	call   0x14001d7c0
   14001fb72:	mov    rax,QWORD PTR [rip+0x3596f]        # 0x1400554e8
   14001fb79:	lea    rcx,[rip+0x1e974]        # 0x14003e4f4
   14001fb80:	call   QWORD PTR [rax+0xa8]
   14001fb86:	mov    rax,QWORD PTR [rip+0x3595b]        # 0x1400554e8
   14001fb8d:	lea    rcx,[rip+0x1e960]        # 0x14003e4f4
   14001fb94:	call   QWORD PTR [rax+0xb0]
   14001fb9a:	mov    rax,QWORD PTR [rip+0x35947]        # 0x1400554e8
   14001fba1:	mov    rcx,QWORD PTR [rip+0x33d28]        # 0x1400538d0
   14001fba8:	movsd  xmm1,QWORD PTR [rip+0x33d18]        # 0x1400538c8
   14001fbb0:	call   QWORD PTR [rax+0x98]
   14001fbb6:	mov    rbx,QWORD PTR [rsp+0x50]
   14001fbbb:	add    rsp,0x30
   14001fbbf:	pop    rdi
   14001fbc0:	ret    
   14001fbc1:	int3   
   14001fbc2:	int3   
   14001fbc3:	int3   
   14001fbc4:	int3   
   14001fbc5:	int3   
   14001fbc6:	int3   
   14001fbc7:	int3   
   14001fbc8:	int3   
   14001fbc9:	int3   
   14001fbca:	int3   
   14001fbcb:	int3   
   14001fbcc:	int3   
   14001fbcd:	int3   
   14001fbce:	int3   
   14001fbcf:	int3   
   14001fbd0:	cmp    ecx,0x2c
   14001fbd3:	ja     0x14001fbeb
   14001fbd5:	movabs rax,0x130000000001
   14001fbdf:	bt     rax,rcx
   14001fbe3:	jae    0x14001fbeb
   14001fbe5:	mov    eax,0x1
   14001fbea:	ret    
   14001fbeb:	xor    eax,eax
   14001fbed:	ret    
   14001fbee:	int3   
   14001fbef:	int3   
   14001fbf0:	mov    QWORD PTR [rsp+0x18],rbx
   14001fbf5:	mov    QWORD PTR [rsp+0x20],rdi
   14001fbfa:	push   r14
   14001fbfc:	sub    rsp,0x20
   14001fc00:	mov    rbx,QWORD PTR [rcx]
   14001fc03:	mov    rdi,rdx
   14001fc06:	mov    r14,rcx
   14001fc09:	movzx  eax,BYTE PTR [rbx]
   14001fc0c:	test   al,al
   14001fc0e:	je     0x14001fc2d
   14001fc10:	movsx  ecx,al
   14001fc13:	call   QWORD PTR [rip+0x1d47f]        # 0x14003d098
   14001fc19:	test   eax,eax
   14001fc1b:	jne    0x14001fc22
   14001fc1d:	cmp    BYTE PTR [rbx],0x2c
   14001fc20:	jne    0x14001fc2d
   14001fc22:	movzx  eax,BYTE PTR [rbx+0x1]
   14001fc26:	inc    rbx
   14001fc29:	test   al,al
   14001fc2b:	jne    0x14001fc10
   14001fc2d:	movzx  ecx,BYTE PTR [rbx]
   14001fc30:	movzx  eax,cl
   14001fc33:	test   cl,cl
   14001fc35:	je     0x14001fccc
   14001fc3b:	sub    al,0x28
   14001fc3d:	cmp    al,0x1
   14001fc3f:	ja     0x14001fc5b
   14001fc41:	inc    rbx
   14001fc44:	movsx  eax,cl
   14001fc47:	mov    QWORD PTR [r14],rbx
   14001fc4a:	mov    rbx,QWORD PTR [rsp+0x40]
   14001fc4f:	mov    rdi,QWORD PTR [rsp+0x48]
   14001fc54:	add    rsp,0x20
   14001fc58:	pop    r14
   14001fc5a:	ret    
   14001fc5b:	mov    QWORD PTR [rsp+0x30],rbp
   14001fc60:	mov    QWORD PTR [rsp+0x38],rsi
   14001fc65:	movabs rbp,0x130000000001
   14001fc6f:	nop
   14001fc70:	movsx  rsi,BYTE PTR [rbx]
   14001fc74:	mov    rax,rsi
   14001fc77:	cmp    esi,0x2c
   14001fc7a:	ja     0x14001fc82
   14001fc7c:	bt     rbp,rax
   14001fc80:	jb     0x14001fca9
   14001fc82:	mov    rax,QWORD PTR [rdi+0x10]
   14001fc86:	cmp    QWORD PTR [rdi+0x8],rax
   14001fc8a:	jb     0x14001fc99
   14001fc8c:	mov    edx,0x1
   14001fc91:	mov    rcx,rdi
   14001fc94:	call   0x14001fe20
   14001fc99:	mov    rax,QWORD PTR [rdi+0x8]
   14001fc9d:	mov    BYTE PTR [rax],sil
   14001fca0:	inc    QWORD PTR [rdi+0x8]
   14001fca4:	inc    rbx
   14001fca7:	jmp    0x14001fc70
   14001fca9:	mov    rsi,QWORD PTR [rsp+0x38]
   14001fcae:	mov    rbp,QWORD PTR [rsp+0x30]
   14001fcb3:	mov    eax,0x1
   14001fcb8:	mov    QWORD PTR [r14],rbx
   14001fcbb:	mov    rbx,QWORD PTR [rsp+0x40]
   14001fcc0:	mov    rdi,QWORD PTR [rsp+0x48]
   14001fcc5:	add    rsp,0x20
   14001fcc9:	pop    r14
   14001fccb:	ret    
   14001fccc:	mov    rdi,QWORD PTR [rsp+0x48]
   14001fcd1:	mov    QWORD PTR [r14],rbx
   14001fcd4:	mov    rbx,QWORD PTR [rsp+0x40]
   14001fcd9:	xor    eax,eax
   14001fcdb:	add    rsp,0x20
   14001fcdf:	pop    r14
   14001fce1:	ret    
   14001fce2:	int3   
   14001fce3:	int3   
   14001fce4:	int3   
   14001fce5:	int3   
   14001fce6:	int3   
   14001fce7:	int3   
   14001fce8:	int3   
   14001fce9:	int3   
   14001fcea:	int3   
   14001fceb:	int3   
   14001fcec:	int3   
   14001fced:	int3   
   14001fcee:	int3   
   14001fcef:	int3   
   14001fcf0:	test   rcx,rcx
   14001fcf3:	je     0x14001fd68
   14001fcf5:	push   rdi
   14001fcf6:	sub    rsp,0x20
   14001fcfa:	mov    rdi,rcx
   14001fcfd:	mov    rcx,QWORD PTR [rip+0x357cc]        # 0x1400554d0
   14001fd04:	mov    QWORD PTR [rsp+0x30],rbx
   14001fd09:	mov    ebx,DWORD PTR [rip+0x33b41]        # 0x140053850
   14001fd0f:	lea    eax,[rbx+0x2]
   14001fd12:	test   rcx,rcx
   14001fd15:	je     0x14001fd26
   14001fd17:	movsxd rdx,eax
   14001fd1a:	shl    rdx,0x3
   14001fd1e:	call   QWORD PTR [rip+0x1d384]        # 0x14003d0a8
   14001fd24:	jmp    0x14001fd33
   14001fd26:	movsxd rcx,eax
   14001fd29:	shl    rcx,0x3
   14001fd2d:	call   QWORD PTR [rip+0x1d435]        # 0x14003d168
   14001fd33:	mov    QWORD PTR [rip+0x35796],rax        # 0x1400554d0
   14001fd3a:	mov    rcx,rax
   14001fd3d:	movsxd rax,ebx
   14001fd40:	mov    QWORD PTR [rcx+rax*8],rdi
   14001fd44:	mov    rax,QWORD PTR [rip+0x35785]        # 0x1400554d0
   14001fd4b:	inc    ebx
   14001fd4d:	movsxd rcx,ebx
   14001fd50:	mov    DWORD PTR [rip+0x33afa],ebx        # 0x140053850
   14001fd56:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fd5b:	mov    QWORD PTR [rax+rcx*8],0x0
   14001fd63:	add    rsp,0x20
   14001fd67:	pop    rdi
   14001fd68:	ret    
   14001fd69:	int3   
   14001fd6a:	int3   
   14001fd6b:	int3   
   14001fd6c:	int3   
   14001fd6d:	int3   
   14001fd6e:	int3   
   14001fd6f:	int3   
   14001fd70:	test   ecx,ecx
   14001fd72:	js     0x14001fd92
   14001fd74:	cmp    ecx,DWORD PTR [rip+0x33b0e]        # 0x140053888
   14001fd7a:	jge    0x14001fd92
   14001fd7c:	shr    rcx,0x20
   14001fd80:	test   ecx,ecx
   14001fd82:	js     0x14001fd92
   14001fd84:	cmp    ecx,DWORD PTR [rip+0x33b02]        # 0x14005388c
   14001fd8a:	jge    0x14001fd92
   14001fd8c:	mov    eax,0x1
   14001fd91:	ret    
   14001fd92:	xor    eax,eax
   14001fd94:	ret    
   14001fd95:	int3   
   14001fd96:	int3   
   14001fd97:	int3   
   14001fd98:	int3   
   14001fd99:	int3   
   14001fd9a:	int3   
   14001fd9b:	int3   
   14001fd9c:	int3   
   14001fd9d:	int3   
   14001fd9e:	int3   
   14001fd9f:	int3   
   14001fda0:	cmp    DWORD PTR [rcx+0x18],0x0
   14001fda4:	je     0x14001fdb0
   14001fda6:	mov    rcx,QWORD PTR [rcx]
   14001fda9:	rex.W jmp QWORD PTR [rip+0x1d4f0]        # 0x14003d2a0
   14001fdb0:	ret    
   14001fdb1:	int3   
   14001fdb2:	int3   
   14001fdb3:	int3   
   14001fdb4:	int3   
   14001fdb5:	int3   
   14001fdb6:	int3   
   14001fdb7:	int3   
   14001fdb8:	int3   
   14001fdb9:	int3   
   14001fdba:	int3   
   14001fdbb:	int3   
   14001fdbc:	int3   
   14001fdbd:	int3   
   14001fdbe:	int3   
   14001fdbf:	int3   
   14001fdc0:	mov    QWORD PTR [rsp+0x8],rbx
   14001fdc5:	push   rdi
   14001fdc6:	sub    rsp,0x20
   14001fdca:	mov    edi,edx
   14001fdcc:	mov    rbx,rcx
   14001fdcf:	test   r8,r8
   14001fdd2:	je     0x14001fde0
   14001fdd4:	mov    QWORD PTR [rcx],r8
   14001fdd7:	mov    DWORD PTR [rcx+0x18],0x0
   14001fdde:	jmp    0x14001fdfc
   14001fde0:	mov    eax,0x200
   14001fde5:	test   edx,edx
   14001fde7:	mov    DWORD PTR [rcx+0x18],0x1
   14001fdee:	cmove  edi,eax
   14001fdf1:	mov    ecx,edi
   14001fdf3:	call   QWORD PTR [rip+0x1d36f]        # 0x14003d168
   14001fdf9:	mov    QWORD PTR [rbx],rax
   14001fdfc:	mov    rcx,QWORD PTR [rbx]
   14001fdff:	mov    eax,edi
   14001fe01:	mov    QWORD PTR [rbx+0x8],rcx
   14001fe05:	add    rax,rcx
   14001fe08:	mov    QWORD PTR [rbx+0x10],rax
   14001fe0c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fe11:	mov    BYTE PTR [rcx],0x0
   14001fe14:	add    rsp,0x20
   14001fe18:	pop    rdi
   14001fe19:	ret    
   14001fe1a:	int3   
   14001fe1b:	int3   
   14001fe1c:	int3   
   14001fe1d:	int3   
   14001fe1e:	int3   
   14001fe1f:	int3   
   14001fe20:	mov    QWORD PTR [rsp+0x8],rbx
   14001fe25:	mov    QWORD PTR [rsp+0x10],rbp
   14001fe2a:	mov    QWORD PTR [rsp+0x18],rsi
   14001fe2f:	push   rdi
   14001fe30:	sub    rsp,0x20
   14001fe34:	mov    eax,DWORD PTR [rcx+0x10]
   14001fe37:	mov    rdi,rcx
   14001fe3a:	sub    eax,DWORD PTR [rcx]
   14001fe3c:	mov    ebp,DWORD PTR [rdi+0x8]
   14001fe3f:	add    edx,eax
   14001fe41:	lea    ecx,[rax+rax*1]
   14001fe44:	cmp    edx,ecx
   14001fe46:	cmova  ecx,edx
   14001fe49:	sub    ebp,DWORD PTR [rdi]
   14001fe4b:	cmp    DWORD PTR [rdi+0x18],0x0
   14001fe4f:	movsxd rsi,ecx
   14001fe52:	je     0x14001fe89
   14001fe54:	mov    rcx,QWORD PTR [rdi]
   14001fe57:	mov    rdx,rsi
   14001fe5a:	call   QWORD PTR [rip+0x1d248]        # 0x14003d0a8
   14001fe60:	mov    rbx,rax
   14001fe63:	test   rax,rax
   14001fe66:	jne    0x14001fed0
   14001fe68:	call   QWORD PTR [rip+0x1d462]        # 0x14003d2d0
   14001fe6e:	lea    rdx,[rip+0x1edab]        # 0x14003ec20
   14001fe75:	lea    rcx,[rax+0x60]
   14001fe79:	call   QWORD PTR [rip+0x1d441]        # 0x14003d2c0
   14001fe7f:	lea    ecx,[rbx+0x1]
   14001fe82:	call   QWORD PTR [rip+0x1d1f0]        # 0x14003d078
   14001fe88:	int3   
   14001fe89:	mov    rcx,rsi
   14001fe8c:	call   QWORD PTR [rip+0x1d2d6]        # 0x14003d168
   14001fe92:	mov    rbx,rax
   14001fe95:	test   rax,rax
   14001fe98:	jne    0x14001febb
   14001fe9a:	call   QWORD PTR [rip+0x1d430]        # 0x14003d2d0
   14001fea0:	lea    rdx,[rip+0x1ed79]        # 0x14003ec20
   14001fea7:	lea    rcx,[rax+0x60]
   14001feab:	call   QWORD PTR [rip+0x1d40f]        # 0x14003d2c0
   14001feb1:	lea    ecx,[rbx+0x1]
   14001feb4:	call   QWORD PTR [rip+0x1d1be]        # 0x14003d078
   14001feba:	int3   
   14001febb:	mov    rdx,QWORD PTR [rdi]
   14001febe:	movsxd r8,ebp
   14001fec1:	mov    rcx,rax
   14001fec4:	call   0x14003b8cc
   14001fec9:	mov    DWORD PTR [rdi+0x18],0x1
   14001fed0:	movsxd rax,ebp
   14001fed3:	mov    rbp,QWORD PTR [rsp+0x38]
   14001fed8:	mov    QWORD PTR [rdi],rbx
   14001fedb:	add    rax,rbx
   14001fede:	mov    QWORD PTR [rdi+0x8],rax
   14001fee2:	lea    rax,[rsi+rbx*1]
   14001fee6:	mov    rbx,QWORD PTR [rsp+0x30]
   14001feeb:	mov    rsi,QWORD PTR [rsp+0x40]
   14001fef0:	mov    QWORD PTR [rdi+0x10],rax
   14001fef4:	xor    eax,eax
   14001fef6:	add    rsp,0x20
   14001fefa:	pop    rdi
   14001fefb:	ret    
   14001fefc:	int3   
   14001fefd:	int3   
   14001fefe:	int3   
   14001feff:	int3   
   14001ff00:	mov    rdx,QWORD PTR [rcx+0x8]
   14001ff04:	cmp    rdx,QWORD PTR [rcx]
   14001ff07:	jbe    0x14001ff14
   14001ff09:	movzx  eax,BYTE PTR [rdx]
   14001ff0c:	dec    rdx
   14001ff0f:	mov    QWORD PTR [rcx+0x8],rdx
   14001ff13:	ret    
   14001ff14:	or     eax,0xffffffff
   14001ff17:	ret    
   14001ff18:	int3   
   14001ff19:	int3   
   14001ff1a:	int3   
   14001ff1b:	int3   
   14001ff1c:	int3   
   14001ff1d:	int3   
   14001ff1e:	int3   
   14001ff1f:	int3   
   14001ff20:	mov    QWORD PTR [rsp+0x8],rbx
   14001ff25:	mov    QWORD PTR [rsp+0x10],rsi
   14001ff2a:	mov    QWORD PTR [rsp+0x18],rdi
   14001ff2f:	push   r14
   14001ff31:	sub    rsp,0x20
   14001ff35:	mov    rdi,rdx
   14001ff38:	mov    rsi,rcx
   14001ff3b:	or     rbx,0xffffffffffffffff
   14001ff3f:	nop
   14001ff40:	inc    rbx
   14001ff43:	cmp    BYTE PTR [rdx+rbx*1],0x0
   14001ff47:	jne    0x14001ff40
   14001ff49:	mov    rcx,QWORD PTR [rcx+0x8]
   14001ff4d:	mov    r14d,ebx
   14001ff50:	add    rcx,r14
   14001ff53:	cmp    rcx,QWORD PTR [rsi+0x10]
   14001ff57:	jbe    0x14001ff63
   14001ff59:	mov    edx,ebx
   14001ff5b:	mov    rcx,rsi
   14001ff5e:	call   0x14001fe20
   14001ff63:	mov    rcx,QWORD PTR [rsi+0x8]
   14001ff67:	mov    r8,r14
   14001ff6a:	mov    rdx,rdi
   14001ff6d:	call   0x14003b8cc
   14001ff72:	add    QWORD PTR [rsi+0x8],r14
   14001ff76:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ff7b:	mov    rdi,QWORD PTR [rsp+0x40]
   14001ff80:	mov    eax,ebx
   14001ff82:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ff87:	add    rsp,0x20
   14001ff8b:	pop    r14
   14001ff8d:	ret    
   14001ff8e:	int3   
   14001ff8f:	int3   
   14001ff90:	mov    rax,rsp
   14001ff93:	mov    QWORD PTR [rax+0x8],rcx
   14001ff97:	push   rbp
   14001ff98:	push   rbx
   14001ff99:	push   rsi
   14001ff9a:	push   rdi
   14001ff9b:	push   r12
   14001ff9d:	push   r13
   14001ff9f:	push   r15
   14001ffa1:	lea    rbp,[rsp-0x50]
   14001ffa6:	sub    rsp,0x150
   14001ffad:	movaps XMMWORD PTR [rax-0x58],xmm6
   14001ffb1:	movaps XMMWORD PTR [rax-0x68],xmm7
   14001ffb5:	movaps XMMWORD PTR [rax-0x78],xmm8
   14001ffba:	mov    rdi,rcx
   14001ffbd:	mov    ecx,0x38
   14001ffc2:	movaps XMMWORD PTR [rax-0x88],xmm9
   14001ffca:	movaps XMMWORD PTR [rax-0x98],xmm10
   14001ffd2:	movaps XMMWORD PTR [rax-0xa8],xmm11
   14001ffda:	movaps XMMWORD PTR [rax-0xb8],xmm12
   14001ffe2:	movaps XMMWORD PTR [rax-0xc8],xmm13
   14001ffea:	movaps XMMWORD PTR [rax-0xd8],xmm14
   14001fff2:	movaps XMMWORD PTR [rax-0xe8],xmm15
   14001fffa:	call   0x14001d2c0
   14001ffff:	mov    rdx,QWORD PTR [rdi+0x28]
   140020003:	mov    rcx,rdi
   140020006:	mov    r9,QWORD PTR [rdx+0x38]
   14002000a:	lea    rdx,[rip+0x1db1f]        # 0x14003db30
   140020011:	mov    QWORD PTR [rbp-0x80],rax
   140020015:	mov    esi,DWORD PTR [r9+0x8]
   140020019:	mov    r12d,DWORD PTR [r9]
   14002001c:	mov    ebx,DWORD PTR [r9+0x4]
   140020020:	movsd  xmm11,QWORD PTR [r9+0x20]
   140020026:	movsd  xmm14,QWORD PTR [r9+0x18]
   14002002c:	movsd  xmm6,QWORD PTR [r9+0x10]
   140020032:	movsd  QWORD PTR [rsp+0x38],xmm11
   140020039:	movsd  QWORD PTR [rsp+0x48],xmm14
   140020040:	mov    DWORD PTR [rbp+0x98],esi
   140020046:	call   0x1400275b0
   14002004b:	mov    rcx,rax
   14002004e:	call   0x14001c4b0
   140020053:	mov    rdx,QWORD PTR [rip+0x35396]        # 0x1400553f0
   14002005a:	xor    r9d,r9d
   14002005d:	or     r12d,eax
   140020060:	mov    r8d,ebx
   140020063:	mov    rcx,rdi
   140020066:	mov    DWORD PTR [rbp+0xa8],r12d
   14002006d:	call   0x14001c350
   140020072:	mov    rdx,QWORD PTR [rip+0x3536f]        # 0x1400553e8
   140020079:	movsd  xmm3,QWORD PTR [rip+0x1eea7]        # 0x14003ef28
   140020081:	xorps  xmm8,xmm8
   140020085:	movaps xmm2,xmm8
   140020089:	movsxd r15,eax
   14002008c:	mov    rcx,rdi
   14002008f:	mov    DWORD PTR [rbp+0xa0],r15d
   140020096:	call   0x14001c2e0
   14002009b:	addsd  xmm6,xmm0
   14002009f:	movsd  QWORD PTR [rsp+0x40],xmm6
   1400200a5:	test   esi,esi
   1400200a7:	jne    0x140020111
   1400200a9:	mov    rdx,QWORD PTR [rip+0x35330]        # 0x1400553e0
   1400200b0:	movsd  xmm3,QWORD PTR [rip+0x1ee68]        # 0x14003ef20
   1400200b8:	movaps xmm2,xmm8
   1400200bc:	mov    rcx,rdi
   1400200bf:	call   0x14001c2e0
   1400200c4:	mov    rdx,QWORD PTR [rip+0x3532d]        # 0x1400553f8
   1400200cb:	lea    r8d,[rsi+0x4]
   1400200cf:	xor    r9d,r9d
   1400200d2:	mov    rcx,rdi
   1400200d5:	movsd  QWORD PTR [rsp+0x38],xmm0
   1400200db:	movaps xmm11,xmm0
   1400200df:	call   0x14001c350
   1400200e4:	mov    rdx,QWORD PTR [rip+0x352ed]        # 0x1400553d8
   1400200eb:	mov    rcx,rdi
   1400200ee:	movsd  xmm3,QWORD PTR [rip+0x1ee2a]        # 0x14003ef20
   1400200f6:	movaps xmm2,xmm8
   1400200fa:	mov    esi,eax
   1400200fc:	mov    DWORD PTR [rbp+0x98],eax
   140020102:	call   0x14001c2e0
   140020107:	movsd  QWORD PTR [rsp+0x48],xmm0
   14002010d:	movaps xmm14,xmm0
   140020111:	mov    rcx,QWORD PTR [rdi+0x60]
   140020115:	mov    rdx,QWORD PTR [rip+0x352b4]        # 0x1400553d0
   14002011c:	lea    r8,[rip+0x1dcbd]        # 0x14003dde0
   140020123:	movups xmm1,XMMWORD PTR [rcx+0x20]
   140020127:	mov    rcx,rdi
   14002012a:	movups XMMWORD PTR [rsp+0x20],xmm1
   14002012f:	call   0x14001c3e0
   140020134:	mov    rcx,rax
   140020137:	call   0x14001c4b0
   14002013c:	test   eax,eax
   14002013e:	je     0x140020189
   140020140:	movsd  xmm0,QWORD PTR [rsp+0x20]
   140020146:	comisd xmm0,QWORD PTR [rdi+0x40]
   14002014b:	ja     0x14002015a
   14002014d:	movsd  xmm0,QWORD PTR [rsp+0x28]
   140020153:	comisd xmm0,QWORD PTR [rdi+0x48]
   140020158:	jbe    0x14002017c
   14002015a:	call   QWORD PTR [rip+0x1d170]        # 0x14003d2d0
   140020160:	mov    r9,QWORD PTR [rdi+0x10]
   140020164:	mov    r8,QWORD PTR [rip+0x35355]        # 0x1400554c0
   14002016b:	lea    rcx,[rax+0x60]
   14002016f:	lea    rdx,[rip+0x1ecaa]        # 0x14003ee20
   140020176:	call   QWORD PTR [rip+0x1d144]        # 0x14003d2c0
   14002017c:	movaps xmm2,xmm8
   140020180:	movaps xmm9,xmm8
   140020184:	jmp    0x140020213
   140020189:	mov    rax,QWORD PTR [rdi+0x28]
   14002018d:	cmp    BYTE PTR [rax+0x40],0x0
   140020191:	je     0x140020206
   140020193:	mov    rbx,QWORD PTR [rip+0x3534e]        # 0x1400554e8
   14002019a:	cmp    QWORD PTR [rbx+0x100],0x0
   1400201a2:	je     0x140020206
   1400201a4:	lea    rdx,[rip+0x1ecad]        # 0x14003ee58
   1400201ab:	mov    rcx,rdi
   1400201ae:	call   0x1400275b0
   1400201b3:	mov    rcx,rdi
   1400201b6:	mov    rdx,rax
   1400201b9:	call   QWORD PTR [rbx+0x100]
   1400201bf:	movsd  xmm1,QWORD PTR [rip+0x1d2c1]        # 0x14003d488
   1400201c7:	movsd  xmm9,QWORD PTR [rsp+0x20]
   1400201ce:	movd   xmm0,eax
   1400201d2:	cvtdq2pd xmm0,xmm0
   1400201d6:	divsd  xmm0,xmm1
   1400201da:	comisd xmm9,xmm0
   1400201df:	ja     0x1400201e5
   1400201e1:	movaps xmm9,xmm0
   1400201e5:	movsd  xmm2,QWORD PTR [rsp+0x28]
   1400201eb:	shr    rax,0x20
   1400201ef:	movd   xmm0,eax
   1400201f3:	cvtdq2pd xmm0,xmm0
   1400201f7:	divsd  xmm0,xmm1
   1400201fb:	comisd xmm2,xmm0
   1400201ff:	ja     0x140020213
   140020201:	movaps xmm2,xmm0
   140020204:	jmp    0x140020213
   140020206:	movsd  xmm2,QWORD PTR [rsp+0x28]
   14002020c:	movsd  xmm9,QWORD PTR [rsp+0x20]
   140020213:	mov    rax,QWORD PTR [rdi+0x20]
   140020217:	mov    rcx,QWORD PTR [rax+0x50]
   14002021b:	movsd  xmm3,QWORD PTR [rcx]
   14002021f:	comisd xmm3,xmm8
   140020224:	jbe    0x140020291
   140020226:	movsd  xmm4,QWORD PTR [rip+0x1ecb2]        # 0x14003eee0
   14002022e:	movaps xmm0,xmm9
   140020232:	divsd  xmm0,xmm3
   140020236:	cvttsd2si eax,xmm0
   14002023a:	movd   xmm1,eax
   14002023e:	cvtdq2pd xmm1,xmm1
   140020242:	mulsd  xmm1,xmm3
   140020246:	addsd  xmm1,xmm4
   14002024a:	comisd xmm9,xmm1
   14002024f:	jbe    0x140020253
   140020251:	inc    eax
   140020253:	movd   xmm9,eax
   140020258:	movaps xmm0,xmm2
   14002025b:	divsd  xmm0,xmm3
   14002025f:	cvtdq2pd xmm9,xmm9
   140020264:	mulsd  xmm9,xmm3
   140020269:	cvttsd2si eax,xmm0
   14002026d:	movd   xmm1,eax
   140020271:	cvtdq2pd xmm1,xmm1
   140020275:	mulsd  xmm1,xmm3
   140020279:	addsd  xmm1,xmm4
   14002027d:	comisd xmm2,xmm1
   140020281:	jbe    0x140020285
   140020283:	inc    eax
   140020285:	movd   xmm2,eax
   140020289:	cvtdq2pd xmm2,xmm2
   14002028d:	mulsd  xmm2,xmm3
   140020291:	test   r12d,r12d
   140020294:	je     0x1400202c2
   140020296:	movsd  xmm0,QWORD PTR [rdi+0x40]
   14002029b:	movsd  xmm1,QWORD PTR [rdi+0x48]
   1400202a0:	comisd xmm1,xmm0
   1400202a4:	ja     0x1400202a9
   1400202a6:	movaps xmm0,xmm1
   1400202a9:	comisd xmm9,xmm2
   1400202ae:	unpcklpd xmm0,xmm0
   1400202b2:	movups XMMWORD PTR [rdi+0x40],xmm0
   1400202b6:	ja     0x1400202bc
   1400202b8:	movaps xmm9,xmm2
   1400202bc:	movaps xmm10,xmm9
   1400202c0:	jmp    0x1400202ca
   1400202c2:	movaps xmm10,xmm9
   1400202c6:	movaps xmm9,xmm2
   1400202ca:	movsd  xmm15,QWORD PTR [rip+0x1d575]        # 0x14003d848
   1400202d3:	cmp    esi,0x2
   1400202d6:	jg     0x1400202f5
   1400202d8:	ucomisd xmm14,xmm8
   1400202dd:	jp     0x1400202ea
   1400202df:	jne    0x1400202ea
   1400202e1:	ucomisd xmm11,xmm8
   1400202e6:	jp     0x1400202ea
   1400202e8:	je     0x140020314
   1400202ea:	mov    esi,0x78
   1400202ef:	mov    DWORD PTR [rbp+0x98],esi
   1400202f5:	movd   xmm1,esi
   1400202f9:	movaps xmm0,xmm15
   1400202fd:	cvtdq2pd xmm1,xmm1
   140020301:	divsd  xmm0,xmm1
   140020305:	call   0x14003b87e
   14002030a:	divsd  xmm10,xmm0
   14002030f:	divsd  xmm9,xmm0
   140020314:	movsd  xmm13,QWORD PTR [rip+0x1d3c3]        # 0x14003d6e0
   14002031d:	movsd  xmm7,QWORD PTR [rip+0x1d0bb]        # 0x14003d3e0
   140020325:	movsd  xmm12,QWORD PTR [rip+0x1d0aa]        # 0x14003d3d8
   14002032e:	cmp    esi,0x4
   140020331:	jne    0x140020379
   140020333:	comisd xmm6,xmm8
   140020338:	movaps xmm0,xmm6
   14002033b:	jb     0x140020344
   14002033d:	addsd  xmm0,xmm12
   140020342:	jmp    0x140020349
   140020344:	subsd  xmm0,xmm12
   140020349:	cvttsd2si ecx,xmm0
   14002034d:	mov    eax,0xb60b60b7
   140020352:	imul   ecx
   140020354:	add    edx,ecx
   140020356:	sar    edx,0x6
   140020359:	mov    eax,edx
   14002035b:	shr    eax,0x1f
   14002035e:	add    edx,eax
   140020360:	imul   eax,edx,0x5a
   140020363:	cmp    ecx,eax
   140020365:	jne    0x140020379
   140020367:	ucomisd xmm14,xmm8
   14002036c:	jp     0x140020379
   14002036e:	jne    0x140020379
   140020370:	ucomisd xmm11,xmm8
   140020375:	jp     0x140020379
   140020377:	je     0x1400203a3
   140020379:	movaps xmm0,xmm13
   14002037d:	call   0x14003b8ae
   140020382:	comisd xmm9,xmm10
   140020387:	subsd  xmm0,xmm7
   14002038b:	jbe    0x140020394
   14002038d:	mulsd  xmm0,xmm10
   140020392:	jmp    0x140020399
   140020394:	mulsd  xmm0,xmm9
   140020399:	addsd  xmm10,xmm0
   14002039e:	addsd  xmm9,xmm0
   1400203a3:	movsd  xmm0,QWORD PTR [rdi+0x40]
   1400203a8:	comisd xmm0,xmm10
   1400203ad:	jbe    0x1400203b3
   1400203af:	movaps xmm10,xmm0
   1400203b3:	movsd  xmm0,QWORD PTR [rdi+0x48]
   1400203b8:	comisd xmm0,xmm9
   1400203bd:	jbe    0x1400203c3
   1400203bf:	movaps xmm9,xmm0
   1400203c3:	mov    r12d,0x1
   1400203c9:	mov    eax,r15d
   1400203cc:	mov    QWORD PTR [rsp+0x58],r15
   1400203d1:	cmp    r15d,r12d
   1400203d4:	cmovl  eax,r12d
   1400203d8:	cmp    esi,0x3
   1400203db:	jge    0x140020474
   1400203e1:	movsxd rcx,eax
   1400203e4:	mov    DWORD PTR [rbp+0x98],r12d
   1400203eb:	shl    rcx,0x4
   1400203ef:	call   0x14001d2c0
   1400203f4:	mov    r13,rax
   1400203f7:	movaps xmm1,xmm10
   1400203fb:	movaps xmm2,xmm9
   1400203ff:	mulsd  xmm1,xmm12
   140020404:	mulsd  xmm2,xmm12
   140020409:	movsd  xmm0,xmm1
   14002040d:	unpcklpd xmm0,xmm2
   140020411:	movups XMMWORD PTR [rax],xmm0
   140020414:	cmp    r15d,r12d
   140020417:	jle    0x140020b28
   14002041d:	cmp    r15,r12
   140020420:	jle    0x14002045d
   140020422:	movsd  xmm3,QWORD PTR [rip+0x1eabe]        # 0x14003eee8
   14002042a:	add    rax,0x10
   14002042e:	lea    rcx,[r15-0x1]
   140020432:	nop    DWORD PTR [rax+0x0]
   140020436:	data16 nop WORD PTR [rax+rax*1+0x0]
   140020440:	addsd  xmm1,xmm3
   140020444:	addsd  xmm2,xmm3
   140020448:	add    rax,0x10
   14002044c:	movsd  xmm0,xmm1
   140020450:	unpcklpd xmm0,xmm2
   140020454:	movups XMMWORD PTR [rax-0x10],xmm0
   140020458:	dec    rcx
   14002045b:	jne    0x140020440
   14002045d:	movaps xmm10,xmm1
   140020461:	movaps xmm9,xmm2
   140020465:	mulsd  xmm10,xmm13
   14002046a:	mulsd  xmm9,xmm13
   14002046f:	jmp    0x140020b28
   140020474:	imul   eax,esi
   140020477:	mov    QWORD PTR [rsp+0x148],r14
   14002047f:	movsxd rcx,eax
   140020482:	shl    rcx,0x4
   140020486:	call   0x14001d2c0
   14002048b:	mov    r13,rax
   14002048e:	movsd  xmm11,QWORD PTR [rip+0x1d581]        # 0x14003da18
   140020497:	movd   xmm0,esi
   14002049b:	cvtdq2pd xmm0,xmm0
   14002049f:	divsd  xmm11,xmm0
   1400204a4:	movaps xmm6,xmm11
   1400204a8:	movsd  QWORD PTR [rsp+0x68],xmm11
   1400204af:	mulsd  xmm6,xmm12
   1400204b4:	movaps xmm0,xmm6
   1400204b7:	call   0x14003b884
   1400204bc:	movsd  xmm2,QWORD PTR [rsp+0x38]
   1400204c2:	movaps xmm1,xmm7
   1400204c5:	movsd  QWORD PTR [rsp+0x60],xmm0
   1400204cb:	movaps xmm0,xmm14
   1400204cf:	movsd  xmm14,QWORD PTR [rip+0x1d088]        # 0x14003d560
   1400204d8:	andps  xmm0,xmm14
   1400204dc:	andps  xmm2,xmm14
   1400204e0:	addsd  xmm0,xmm2
   1400204e4:	call   QWORD PTR [rip+0x1cc6e]        # 0x14003d158
   1400204ea:	movsd  QWORD PTR [rbp-0x78],xmm0
   1400204ef:	movaps xmm0,xmm13
   1400204f3:	call   0x14003b8ae
   1400204f8:	movaps xmm7,xmm0
   1400204fb:	movaps xmm0,xmm6
   1400204fe:	mulsd  xmm7,QWORD PTR [rsp+0x48]
   140020504:	call   0x14003b87e
   140020509:	movaps xmm6,xmm11
   14002050d:	subsd  xmm6,xmm15
   140020512:	divsd  xmm7,xmm0
   140020516:	movsd  xmm0,QWORD PTR [rsp+0x38]
   14002051c:	mulsd  xmm0,xmm12
   140020521:	mulsd  xmm6,xmm12
   140020526:	movsd  QWORD PTR [rbp-0x70],xmm7
   14002052b:	movsd  QWORD PTR [rsp+0x78],xmm0
   140020531:	movaps xmm0,xmm6
   140020534:	call   0x14003b87e
   140020539:	movaps xmm7,xmm0
   14002053c:	movaps xmm0,xmm6
   14002053f:	mulsd  xmm7,xmm12
   140020544:	call   0x14003b884
   140020549:	movsxd rsi,esi
   14002054c:	mov    QWORD PTR [rsp+0x70],rsi
   140020551:	movaps xmm15,xmm0
   140020555:	movsd  xmm0,QWORD PTR [rip+0x1d2eb]        # 0x14003d848
   14002055d:	movaps xmm1,xmm0
   140020560:	mulsd  xmm15,xmm12
   140020565:	movaps xmm12,xmm8
   140020569:	subsd  xmm1,xmm11
   14002056e:	mulsd  xmm1,QWORD PTR [rip+0x1ce62]        # 0x14003d3d8
   140020576:	addsd  xmm6,xmm1
   14002057a:	test   rsi,rsi
   14002057d:	jle    0x1400206a8
   140020583:	movsd  xmm11,QWORD PTR [rsp+0x40]
   14002058a:	mov    rbx,r13
   14002058d:	mov    r14,rsi
   140020590:	movsd  xmm13,xmm6
   140020595:	divsd  xmm11,QWORD PTR [rip+0x1d48a]        # 0x14003da28
   14002059e:	mulsd  xmm11,xmm0
   1400205a3:	movsd  QWORD PTR [rsp+0x50],xmm11
   1400205aa:	nop    WORD PTR [rax+rax*1+0x0]
   1400205b0:	addsd  xmm13,QWORD PTR [rsp+0x68]
   1400205b7:	movaps xmm0,xmm13
   1400205bb:	call   0x14003b87e
   1400205c0:	mulsd  xmm0,QWORD PTR [rsp+0x60]
   1400205c6:	addsd  xmm7,xmm0
   1400205ca:	movaps xmm0,xmm13
   1400205ce:	movsd  QWORD PTR [rsp+0x30],xmm7
   1400205d4:	call   0x14003b884
   1400205d9:	mulsd  xmm0,QWORD PTR [rsp+0x60]
   1400205df:	addsd  xmm15,xmm0
   1400205e4:	movaps xmm1,xmm15
   1400205e8:	movaps xmm7,xmm15
   1400205ec:	movaps xmm0,xmm15
   1400205f0:	mulsd  xmm7,QWORD PTR [rbp-0x70]
   1400205f5:	mulsd  xmm1,QWORD PTR [rsp+0x78]
   1400205fb:	addsd  xmm7,QWORD PTR [rbp-0x78]
   140020600:	mulsd  xmm7,QWORD PTR [rsp+0x30]
   140020606:	addsd  xmm7,xmm1
   14002060a:	movaps xmm1,xmm7
   14002060d:	call   0x14003b8a8
   140020612:	movaps xmm1,xmm15
   140020616:	movaps xmm6,xmm0
   140020619:	movaps xmm0,xmm7
   14002061c:	addsd  xmm6,xmm11
   140020621:	call   QWORD PTR [rip+0x1cb31]        # 0x14003d158
   140020627:	movaps xmm7,xmm0
   14002062a:	movaps xmm0,xmm6
   14002062d:	call   0x14003b87e
   140020632:	movaps xmm11,xmm0
   140020636:	movaps xmm0,xmm6
   140020639:	mulsd  xmm11,xmm7
   14002063e:	call   0x14003b884
   140020643:	mulsd  xmm11,xmm10
   140020648:	movsd  QWORD PTR [rsp+0x20],xmm11
   14002064f:	mulsd  xmm7,xmm0
   140020653:	andps  xmm11,xmm14
   140020657:	comisd xmm11,xmm12
   14002065c:	mulsd  xmm7,xmm9
   140020661:	movsd  QWORD PTR [rsp+0x28],xmm7
   140020667:	jbe    0x14002066d
   140020669:	movaps xmm12,xmm11
   14002066d:	andps  xmm7,xmm14
   140020671:	comisd xmm7,xmm8
   140020676:	jbe    0x14002067c
   140020678:	movaps xmm8,xmm7
   14002067c:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140020681:	movsd  xmm11,QWORD PTR [rsp+0x50]
   140020688:	movsd  xmm7,QWORD PTR [rsp+0x30]
   14002068e:	add    rbx,0x10
   140020692:	movups XMMWORD PTR [rbx-0x10],xmm0
   140020696:	dec    r14
   140020699:	jne    0x1400205b0
   14002069f:	movsd  xmm13,QWORD PTR [rip+0x1d038]        # 0x14003d6e0
   1400206a8:	movsd  xmm10,QWORD PTR [rdi+0x40]
   1400206ae:	mulsd  xmm12,xmm13
   1400206b3:	mulsd  xmm8,xmm13
   1400206b8:	comisd xmm10,xmm12
   1400206bd:	ja     0x1400206c3
   1400206bf:	movaps xmm10,xmm12
   1400206c3:	movsd  xmm9,QWORD PTR [rdi+0x48]
   1400206c9:	comisd xmm9,xmm8
   1400206ce:	ja     0x1400206d4
   1400206d0:	movaps xmm9,xmm8
   1400206d4:	xor    r14d,r14d
   1400206d7:	movaps xmm3,xmm10
   1400206db:	movaps xmm4,xmm9
   1400206df:	mov    edx,r14d
   1400206e2:	divsd  xmm3,xmm12
   1400206e7:	divsd  xmm4,xmm8
   1400206ec:	cmp    rsi,0x4
   1400206f0:	jl     0x1400207b5
   1400206f6:	lea    rcx,[rsi-0x4]
   1400206fa:	lea    rax,[r13+0x20]
   1400206fe:	shr    rcx,0x2
   140020702:	inc    rcx
   140020705:	lea    rdx,[rcx*4+0x0]
   14002070d:	nop    DWORD PTR [rax]
   140020710:	movups xmm0,XMMWORD PTR [rax-0x20]
   140020714:	lea    rax,[rax+0x40]
   140020718:	movups xmm2,xmm0
   14002071b:	movups XMMWORD PTR [rsp+0x20],xmm0
   140020720:	movsd  xmm1,QWORD PTR [rsp+0x28]
   140020726:	mulsd  xmm2,xmm3
   14002072a:	mulsd  xmm1,xmm4
   14002072e:	movsd  xmm0,xmm2
   140020732:	unpcklpd xmm0,xmm1
   140020736:	movups XMMWORD PTR [rax-0x60],xmm0
   14002073a:	movups xmm0,XMMWORD PTR [rax-0x50]
   14002073e:	movups xmm2,xmm0
   140020741:	movups XMMWORD PTR [rsp+0x20],xmm0
   140020746:	movsd  xmm1,QWORD PTR [rsp+0x28]
   14002074c:	mulsd  xmm2,xmm3
   140020750:	mulsd  xmm1,xmm4
   140020754:	movsd  xmm0,xmm2
   140020758:	unpcklpd xmm0,xmm1
   14002075c:	movups XMMWORD PTR [rax-0x50],xmm0
   140020760:	movups xmm0,XMMWORD PTR [rax-0x40]
   140020764:	movups xmm2,xmm0
   140020767:	movups XMMWORD PTR [rsp+0x20],xmm0
   14002076c:	movsd  xmm1,QWORD PTR [rsp+0x28]
   140020772:	mulsd  xmm2,xmm3
   140020776:	mulsd  xmm1,xmm4
   14002077a:	movsd  xmm0,xmm2
   14002077e:	unpcklpd xmm0,xmm1
   140020782:	movups XMMWORD PTR [rax-0x40],xmm0
   140020786:	movups xmm0,XMMWORD PTR [rax-0x30]
   14002078a:	movups xmm2,xmm0
   14002078d:	movups XMMWORD PTR [rsp+0x20],xmm0
   140020792:	movsd  xmm1,QWORD PTR [rsp+0x28]
   140020798:	mulsd  xmm2,xmm3
   14002079c:	mulsd  xmm1,xmm4
   1400207a0:	movsd  xmm0,xmm2
   1400207a4:	unpcklpd xmm0,xmm1
   1400207a8:	movups XMMWORD PTR [rax-0x30],xmm0
   1400207ac:	dec    rcx
   1400207af:	jne    0x140020710
   1400207b5:	cmp    rdx,rsi
   1400207b8:	jge    0x1400207f8
   1400207ba:	mov    rax,rdx
   1400207bd:	mov    rcx,rsi
   1400207c0:	shl    rax,0x4
   1400207c4:	add    rax,r13
   1400207c7:	sub    rcx,rdx
   1400207ca:	movups xmm0,XMMWORD PTR [rax]
   1400207cd:	lea    rax,[rax+0x10]
   1400207d1:	movups xmm2,xmm0
   1400207d4:	movups XMMWORD PTR [rsp+0x20],xmm0
   1400207d9:	movsd  xmm1,QWORD PTR [rsp+0x28]
   1400207df:	mulsd  xmm2,xmm3
   1400207e3:	mulsd  xmm1,xmm4
   1400207e7:	movsd  xmm0,xmm2
   1400207eb:	unpcklpd xmm0,xmm1
   1400207ef:	movups XMMWORD PTR [rax-0x10],xmm0
   1400207f3:	dec    rcx
   1400207f6:	jne    0x1400207ca
   1400207f8:	cmp    r15d,0x1
   1400207fc:	jle    0x140020b20
   140020802:	movups xmm0,XMMWORD PTR [r13+0x0]
   140020807:	mov    rbx,rsi
   14002080a:	shl    rbx,0x4
   14002080e:	movups xmm4,XMMWORD PTR [rbx+r13*1-0x10]
   140020814:	movups XMMWORD PTR [rsp+0x20],xmm0
   140020819:	movups xmm1,xmm0
   14002081c:	movaps xmm3,xmm0
   14002081f:	unpckhpd xmm3,xmm0
   140020823:	movaps xmm2,xmm4
   140020826:	unpckhpd xmm2,xmm4
   14002082a:	movsd  QWORD PTR [rsp+0x28],xmm3
   140020830:	subsd  xmm3,xmm2
   140020834:	movsd  QWORD PTR [rsp+0x20],xmm1
   14002083a:	subsd  xmm1,xmm4
   14002083e:	movaps xmm0,xmm3
   140020841:	call   0x14003b8a8
   140020846:	movsd  QWORD PTR [rsp+0x50],xmm0
   14002084c:	test   rsi,rsi
   14002084f:	jle    0x14002099c
   140020855:	movsd  xmm15,QWORD PTR [rip+0x1e68a]        # 0x14003eee8
   14002085e:	mov    rdi,QWORD PTR [rsp+0x58]
   140020863:	mov    r15,rsi
   140020866:	mov    esi,DWORD PTR [rbp+0x98]
   14002086c:	lea    r14,[rbx+r13*1]
   140020870:	movsd  xmm14,xmm0
   140020875:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140020880:	movss  xmm4,DWORD PTR [rsp+0x20]
   140020886:	movss  xmm2,DWORD PTR [rsp+0x28]
   14002088c:	movss  xmm5,DWORD PTR [rsp+0x24]
   140020892:	mov    eax,r12d
   140020895:	cdq    
   140020896:	idiv   esi
   140020898:	movss  xmm3,DWORD PTR [rsp+0x2c]
   14002089e:	movss  xmm11,xmm2
   1400208a3:	movss  xmm12,xmm4
   1400208a8:	unpcklps xmm12,xmm5
   1400208ac:	unpcklps xmm11,xmm3
   1400208b0:	movaps xmm8,xmm14
   1400208b4:	movsxd rax,edx
   1400208b7:	add    rax,rax
   1400208ba:	movups xmm0,XMMWORD PTR [r13+rax*8+0x0]
   1400208c0:	movups xmm1,xmm0
   1400208c3:	movups XMMWORD PTR [rsp+0x20],xmm0
   1400208c8:	movsd  xmm0,QWORD PTR [r13+rax*8+0x8]
   1400208cf:	movsd  QWORD PTR [rsp+0x28],xmm0
   1400208d5:	movsd  QWORD PTR [rsp+0x20],xmm1
   1400208db:	subsd  xmm1,xmm12
   1400208e0:	subsd  xmm0,xmm11
   1400208e5:	call   0x14003b8a8
   1400208ea:	movaps xmm6,xmm8
   1400208ee:	addsd  xmm6,QWORD PTR [rip+0x1cf52]        # 0x14003d848
   1400208f6:	subsd  xmm6,xmm0
   1400208fa:	movaps xmm14,xmm0
   1400208fe:	mulsd  xmm6,QWORD PTR [rip+0x1cad2]        # 0x14003d3d8
   140020906:	movaps xmm0,xmm6
   140020909:	call   0x14003b884
   14002090e:	subsd  xmm8,xmm6
   140020913:	movaps xmm7,xmm15
   140020917:	divsd  xmm7,xmm0
   14002091b:	movaps xmm0,xmm8
   14002091f:	call   0x14003b884
   140020924:	movaps xmm6,xmm0
   140020927:	movaps xmm0,xmm8
   14002092b:	mulsd  xmm6,xmm7
   14002092f:	call   0x14003b87e
   140020934:	movaps xmm1,xmm0
   140020937:	mulsd  xmm1,xmm7
   14002093b:	cmp    rdi,0x1
   14002093f:	jle    0x14002096f
   140020941:	mov    rax,r14
   140020944:	lea    rcx,[rdi-0x1]
   140020948:	nop    DWORD PTR [rax+rax*1+0x0]
   140020950:	addsd  xmm12,xmm1
   140020955:	addsd  xmm11,xmm6
   14002095a:	movsd  xmm0,xmm12
   14002095f:	unpcklpd xmm0,xmm11
   140020964:	movups XMMWORD PTR [rax],xmm0
   140020967:	add    rax,rbx
   14002096a:	dec    rcx
   14002096d:	jne    0x140020950
   14002096f:	inc    r12d
   140020972:	add    r14,0x10
   140020976:	dec    r15
   140020979:	jne    0x140020880
   14002097f:	movsd  xmm14,QWORD PTR [rip+0x1cbd8]        # 0x14003d560
   140020988:	mov    rdi,QWORD PTR [rbp+0x90]
   14002098f:	mov    rsi,QWORD PTR [rsp+0x70]
   140020994:	mov    r15,QWORD PTR [rsp+0x58]
   140020999:	xor    r14d,r14d
   14002099c:	cmp    rsi,0x4
   1400209a0:	jl     0x140020ac4
   1400209a6:	lea    rax,[r15-0x1]
   1400209aa:	lea    rcx,[rsi-0x4]
   1400209ae:	shr    rcx,0x2
   1400209b2:	imul   rax,rsi
   1400209b6:	shl    rax,0x4
   1400209ba:	add    rax,r13
   1400209bd:	inc    rcx
   1400209c0:	lea    r14,[rcx*4+0x0]
   1400209c8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400209d0:	movups xmm0,XMMWORD PTR [rax]
   1400209d3:	movups xmm1,xmm0
   1400209d6:	movups XMMWORD PTR [rsp+0x20],xmm0
   1400209db:	andps  xmm1,xmm14
   1400209df:	mulsd  xmm1,xmm13
   1400209e4:	comisd xmm1,xmm10
   1400209e9:	jbe    0x1400209ef
   1400209eb:	movaps xmm10,xmm1
   1400209ef:	movsd  xmm0,QWORD PTR [rsp+0x28]
   1400209f5:	andps  xmm0,xmm14
   1400209f9:	mulsd  xmm0,xmm13
   1400209fe:	comisd xmm0,xmm9
   140020a03:	jbe    0x140020a09
   140020a05:	movaps xmm9,xmm0
   140020a09:	movups xmm0,XMMWORD PTR [rax+0x10]
   140020a0d:	movups xmm1,xmm0
   140020a10:	movups XMMWORD PTR [rsp+0x20],xmm0
   140020a15:	andps  xmm1,xmm14
   140020a19:	mulsd  xmm1,xmm13
   140020a1e:	comisd xmm1,xmm10
   140020a23:	jbe    0x140020a29
   140020a25:	movaps xmm10,xmm1
   140020a29:	movsd  xmm0,QWORD PTR [rsp+0x28]
   140020a2f:	andps  xmm0,xmm14
   140020a33:	mulsd  xmm0,xmm13
   140020a38:	comisd xmm0,xmm9
   140020a3d:	jbe    0x140020a43
   140020a3f:	movaps xmm9,xmm0
   140020a43:	movups xmm0,XMMWORD PTR [rax+0x20]
   140020a47:	movups xmm1,xmm0
   140020a4a:	movups XMMWORD PTR [rsp+0x20],xmm0
   140020a4f:	andps  xmm1,xmm14
   140020a53:	mulsd  xmm1,xmm13
   140020a58:	comisd xmm1,xmm10
   140020a5d:	jbe    0x140020a63
   140020a5f:	movaps xmm10,xmm1
   140020a63:	movsd  xmm0,QWORD PTR [rsp+0x28]
   140020a69:	andps  xmm0,xmm14
   140020a6d:	mulsd  xmm0,xmm13
   140020a72:	comisd xmm0,xmm9
   140020a77:	jbe    0x140020a7d
   140020a79:	movaps xmm9,xmm0
   140020a7d:	movups xmm0,XMMWORD PTR [rax+0x30]
   140020a81:	movups xmm1,xmm0
   140020a84:	movups XMMWORD PTR [rsp+0x20],xmm0
   140020a89:	andps  xmm1,xmm14
   140020a8d:	mulsd  xmm1,xmm13
   140020a92:	comisd xmm1,xmm10
   140020a97:	jbe    0x140020a9d
   140020a99:	movaps xmm10,xmm1
   140020a9d:	movsd  xmm0,QWORD PTR [rsp+0x28]
   140020aa3:	andps  xmm0,xmm14
   140020aa7:	mulsd  xmm0,xmm13
   140020aac:	comisd xmm0,xmm9
   140020ab1:	jbe    0x140020ab7
   140020ab3:	movaps xmm9,xmm0
   140020ab7:	add    rax,0x40
   140020abb:	dec    rcx
   140020abe:	jne    0x1400209d0
   140020ac4:	cmp    r14,rsi
   140020ac7:	jge    0x140020b20
   140020ac9:	lea    rax,[r15-0x1]
   140020acd:	imul   rax,rsi
   140020ad1:	add    rax,r14
   140020ad4:	shl    rax,0x4
   140020ad8:	add    rax,r13
   140020adb:	sub    rsi,r14
   140020ade:	movups xmm0,XMMWORD PTR [rax]
   140020ae1:	movups xmm1,xmm0
   140020ae4:	movups XMMWORD PTR [rsp+0x20],xmm0
   140020ae9:	andps  xmm1,xmm14
   140020aed:	mulsd  xmm1,xmm13
   140020af2:	comisd xmm1,xmm10
   140020af7:	jbe    0x140020afd
   140020af9:	movaps xmm10,xmm1
   140020afd:	movsd  xmm0,QWORD PTR [rsp+0x28]
   140020b03:	andps  xmm0,xmm14
   140020b07:	mulsd  xmm0,xmm13
   140020b0c:	comisd xmm0,xmm9
   140020b11:	jbe    0x140020b17
   140020b13:	movaps xmm9,xmm0
   140020b17:	add    rax,0x10
   140020b1b:	dec    rsi
   140020b1e:	jne    0x140020ade
   140020b20:	mov    r14,QWORD PTR [rsp+0x148]
   140020b28:	mov    rcx,QWORD PTR [rbp-0x80]
   140020b2c:	mov    eax,DWORD PTR [rbp+0xa8]
   140020b32:	movsd  xmm0,QWORD PTR [rsp+0x40]
   140020b38:	lea    r11,[rsp+0x150]
   140020b40:	mov    DWORD PTR [rcx],eax
   140020b42:	mov    eax,DWORD PTR [rbp+0xa0]
   140020b48:	movsd  QWORD PTR [rcx+0x10],xmm0
   140020b4d:	movsd  xmm0,QWORD PTR [rsp+0x38]
   140020b53:	movsd  QWORD PTR [rcx+0x20],xmm0
   140020b58:	movsd  xmm0,QWORD PTR [rsp+0x48]
   140020b5e:	mov    DWORD PTR [rcx+0x4],eax
   140020b61:	mov    eax,DWORD PTR [rbp+0x98]
   140020b67:	mov    QWORD PTR [rcx+0x30],r13
   140020b6b:	movaps xmm6,XMMWORD PTR [r11-0x20]
   140020b70:	movaps xmm7,XMMWORD PTR [r11-0x30]
   140020b75:	movaps xmm8,XMMWORD PTR [r11-0x40]
   140020b7a:	movsd  QWORD PTR [rcx+0x18],xmm0
   140020b7f:	movaps xmm11,XMMWORD PTR [r11-0x70]
   140020b84:	movaps xmm12,XMMWORD PTR [r11-0x80]
   140020b89:	movaps xmm13,XMMWORD PTR [r11-0x90]
   140020b91:	mov    DWORD PTR [rcx+0x8],eax
   140020b94:	mov    QWORD PTR [rdi+0x30],rcx
   140020b98:	movsd  QWORD PTR [rdi+0x40],xmm10
   140020b9e:	movsd  QWORD PTR [rdi+0x48],xmm9
   140020ba4:	movaps xmm9,XMMWORD PTR [r11-0x50]
   140020ba9:	movaps xmm10,XMMWORD PTR [r11-0x60]
   140020bae:	movaps xmm14,XMMWORD PTR [r11-0xa0]
   140020bb6:	movaps xmm15,XMMWORD PTR [r11-0xb0]
   140020bbe:	mov    rsp,r11
   140020bc1:	pop    r15
   140020bc3:	pop    r13
   140020bc5:	pop    r12
   140020bc7:	pop    rdi
   140020bc8:	pop    rsi
   140020bc9:	pop    rbx
   140020bca:	pop    rbp
   140020bcb:	ret    
   140020bcc:	int3   
   140020bcd:	int3   
   140020bce:	int3   
   140020bcf:	int3   
   140020bd0:	rex push rbx
   140020bd2:	sub    rsp,0x20
   140020bd6:	mov    rbx,QWORD PTR [rcx+0x30]
   140020bda:	test   rbx,rbx
   140020bdd:	je     0x140020bf8
   140020bdf:	mov    rcx,QWORD PTR [rbx+0x30]
   140020be3:	call   QWORD PTR [rip+0x1c6b7]        # 0x14003d2a0
   140020be9:	mov    rcx,rbx
   140020bec:	add    rsp,0x20
   140020bf0:	pop    rbx
   140020bf1:	rex.W jmp QWORD PTR [rip+0x1c6a8]        # 0x14003d2a0
   140020bf8:	add    rsp,0x20
   140020bfc:	pop    rbx
   140020bfd:	ret    
   140020bfe:	int3   
   140020bff:	int3   
   140020c00:	mov    QWORD PTR [rsp+0x8],rbx
   140020c05:	mov    QWORD PTR [rsp+0x10],rsi
   140020c0a:	push   rdi
   140020c0b:	sub    rsp,0x20
   140020c0f:	cmp    BYTE PTR [r8],0x0
   140020c13:	mov    rbx,r8
   140020c16:	mov    rsi,rdx
   140020c19:	mov    rdi,rcx
   140020c1c:	je     0x140020c21
   140020c1e:	inc    rbx
   140020c21:	mov    r9,QWORD PTR [rip+0x2b568]        # 0x14004c190
   140020c28:	xor    r11d,r11d
   140020c2b:	test   r9,r9
   140020c2e:	je     0x140020c77
   140020c30:	lea    r10,[rip+0x2b559]        # 0x14004c190
   140020c37:	nop    WORD PTR [rax+rax*1+0x0]
   140020c40:	mov    r8,rbx
   140020c43:	mov    rax,r9
   140020c46:	sub    r8,r9
   140020c49:	nop    DWORD PTR [rax+0x0]
   140020c50:	movzx  edx,BYTE PTR [rax]
   140020c53:	movzx  ecx,BYTE PTR [rax+r8*1]
   140020c58:	sub    edx,ecx
   140020c5a:	jne    0x140020c63
   140020c5c:	inc    rax
   140020c5f:	test   ecx,ecx
   140020c61:	jne    0x140020c50
   140020c63:	test   edx,edx
   140020c65:	je     0x140020cc4
   140020c67:	mov    r9,QWORD PTR [r10+0x8]
   140020c6b:	add    r10,0x8
   140020c6f:	inc    r11d
   140020c72:	test   r9,r9
   140020c75:	jne    0x140020c40
   140020c77:	cmp    BYTE PTR [rbx],0x0
   140020c7a:	je     0x140020c9a
   140020c7c:	call   QWORD PTR [rip+0x1c64e]        # 0x14003d2d0
   140020c82:	mov    r8,QWORD PTR [rsi+0x10]
   140020c86:	lea    rdx,[rip+0x1e0db]        # 0x14003ed68
   140020c8d:	lea    rcx,[rax+0x60]
   140020c91:	mov    r9,rbx
   140020c94:	call   QWORD PTR [rip+0x1c626]        # 0x14003d2c0
   140020c9a:	movups xmm0,XMMWORD PTR [rip+0x2b547]        # 0x14004c1e8
   140020ca1:	movsd  xmm1,QWORD PTR [rip+0x2b54f]        # 0x14004c1f8
   140020ca9:	mov    rax,rdi
   140020cac:	movups XMMWORD PTR [rdi],xmm0
   140020caf:	movsd  QWORD PTR [rdi+0x10],xmm1
   140020cb4:	mov    rbx,QWORD PTR [rsp+0x30]
   140020cb9:	mov    rsi,QWORD PTR [rsp+0x38]
   140020cbe:	add    rsp,0x20
   140020cc2:	pop    rdi
   140020cc3:	ret    
   140020cc4:	test   r9,r9
   140020cc7:	je     0x140020c77
   140020cc9:	mov    r9d,DWORD PTR [rsi+0x54]
   140020ccd:	mov    rbx,QWORD PTR [rsp+0x30]
   140020cd2:	movsxd rax,r11d
   140020cd5:	lea    rcx,[rip+0x2b4fc]        # 0x14004c1d8
   140020cdc:	mov    WORD PTR [rdi+0x10],0x100
   140020ce2:	movsx  r8d,BYTE PTR [rcx+rax*2]
   140020ce7:	movsx  ecx,BYTE PTR [rcx+rax*2+0x1]
   140020cec:	mov    eax,DWORD PTR [rsi+0x50]
   140020cef:	imul   r8d,r9d
   140020cf3:	cdq    
   140020cf4:	mov    DWORD PTR [rdi],r8d
   140020cf7:	sub    eax,edx
   140020cf9:	sar    eax,1
   140020cfb:	imul   ecx,eax
   140020cfe:	lea    eax,[r8+r9*1]
   140020d02:	shl    eax,0x8
   140020d05:	mov    DWORD PTR [rdi+0x4],ecx
   140020d08:	mov    ecx,DWORD PTR [rsi+0x58]
   140020d0b:	mov    rsi,QWORD PTR [rsp+0x38]
   140020d10:	cdq    
   140020d11:	add    ecx,r9d
   140020d14:	idiv   ecx
   140020d16:	mov    BYTE PTR [rdi+0x12],al
   140020d19:	mov    rax,rdi
   140020d1c:	add    rsp,0x20
   140020d20:	pop    rdi
   140020d21:	ret    
   140020d22:	int3   
   140020d23:	int3   
   140020d24:	int3   
   140020d25:	int3   
   140020d26:	int3   
   140020d27:	int3   
   140020d28:	int3   
   140020d29:	int3   
   140020d2a:	int3   
   140020d2b:	int3   
   140020d2c:	int3   
   140020d2d:	int3   
   140020d2e:	int3   
   140020d2f:	int3   
   140020d30:	mov    rax,rsp
   140020d33:	mov    QWORD PTR [rax+0x20],rbx
   140020d37:	push   rbp
   140020d38:	lea    rbp,[rax-0x58]
   140020d3c:	sub    rsp,0x150
   140020d43:	movaps XMMWORD PTR [rax-0x18],xmm6
   140020d47:	movaps XMMWORD PTR [rax-0x28],xmm7
   140020d4b:	movaps XMMWORD PTR [rax-0x38],xmm8
   140020d50:	movsd  xmm8,QWORD PTR [rip+0x1c817]        # 0x14003d570
   140020d59:	movaps XMMWORD PTR [rax-0x48],xmm9
   140020d5e:	mov    rax,QWORD PTR [rcx+0x20]
   140020d62:	movzx  r9d,BYTE PTR [rax+0x90]
   140020d6a:	test   r9b,r9b
   140020d6d:	je     0x140020dc3
   140020d6f:	movups xmm1,XMMWORD PTR [rdx]
   140020d72:	lea    rdx,[rsp+0x30]
   140020d77:	movaps XMMWORD PTR [rsp+0x20],xmm1
   140020d7c:	movaps xmm0,xmm1
   140020d7f:	movsd  QWORD PTR [rsp+0x28],xmm1
   140020d85:	unpckhpd xmm0,xmm1
   140020d89:	xorps  xmm0,xmm8
   140020d8d:	movsd  QWORD PTR [rsp+0x20],xmm0
   140020d93:	movss  xmm0,DWORD PTR [rsp+0x20]
   140020d99:	movss  xmm1,DWORD PTR [rsp+0x24]
   140020d9f:	movss  DWORD PTR [rsp+0x30],xmm0
   140020da5:	movss  xmm0,DWORD PTR [rsp+0x28]
   140020dab:	movss  DWORD PTR [rsp+0x34],xmm1
   140020db1:	movss  xmm1,DWORD PTR [rsp+0x2c]
   140020db7:	movss  DWORD PTR [rsp+0x38],xmm0
   140020dbd:	movss  DWORD PTR [rsp+0x3c],xmm1
   140020dc3:	movups xmm0,XMMWORD PTR [rdx]
   140020dc6:	movsd  xmm9,QWORD PTR [rip+0x1c611]        # 0x14003d3e0
   140020dcf:	xor    ebx,ebx
   140020dd1:	cmp    rcx,QWORD PTR [rip+0x32dc8]        # 0x140053ba0
   140020dd8:	mov    QWORD PTR [rsp+0x168],rdi
   140020de0:	xorps  xmm6,xmm6
   140020de3:	movups XMMWORD PTR [rsp+0x20],xmm0
   140020de8:	je     0x140020ed3
   140020dee:	mov    rdx,QWORD PTR [rcx+0x30]
   140020df2:	mov    eax,DWORD PTR [rcx+0x58]
   140020df5:	mov    QWORD PTR [rip+0x32da4],rcx        # 0x140053ba0
   140020dfc:	mov    rdi,QWORD PTR [rdx+0x30]
   140020e00:	mov    r8d,DWORD PTR [rdx+0x8]
   140020e04:	add    eax,DWORD PTR [rcx+0x54]
   140020e07:	mov    QWORD PTR [rip+0x32daa],rdi        # 0x140053bb8
   140020e0e:	mov    DWORD PTR [rip+0x32d83],r8d        # 0x140053b98
   140020e15:	mov    QWORD PTR [rip+0x32d6c],rdx        # 0x140053b88
   140020e1c:	test   r9b,r9b
   140020e1f:	je     0x140020e2c
   140020e21:	movd   xmm1,DWORD PTR [rcx+0x50]
   140020e26:	movd   xmm0,eax
   140020e2a:	jmp    0x140020e35
   140020e2c:	movd   xmm0,DWORD PTR [rcx+0x50]
   140020e31:	movd   xmm1,eax
   140020e35:	cvtdq2pd xmm1,xmm1
   140020e39:	cvtdq2pd xmm0,xmm0
   140020e3d:	ucomisd xmm1,xmm6
   140020e41:	movsd  QWORD PTR [rip+0x32d7f],xmm0        # 0x140053bc8
   140020e49:	movsd  QWORD PTR [rip+0x32d6f],xmm1        # 0x140053bc0
   140020e51:	jp     0x140020e61
   140020e53:	jne    0x140020e61
   140020e55:	movaps xmm1,xmm9
   140020e59:	movsd  QWORD PTR [rip+0x32d5f],xmm1        # 0x140053bc0
   140020e61:	ucomisd xmm0,xmm6
   140020e65:	jp     0x140020e75
   140020e67:	jne    0x140020e75
   140020e69:	movaps xmm0,xmm9
   140020e6d:	movsd  QWORD PTR [rip+0x32d53],xmm0        # 0x140053bc8
   140020e75:	movsd  xmm5,QWORD PTR [rcx+0x40]
   140020e7a:	movsd  xmm4,QWORD PTR [rcx+0x48]
   140020e7f:	mov    ecx,DWORD PTR [rdx+0x4]
   140020e82:	dec    ecx
   140020e84:	movaps xmm2,xmm5
   140020e87:	movaps xmm7,xmm4
   140020e8a:	imul   ecx,r8d
   140020e8e:	mulsd  xmm5,QWORD PTR [rip+0x1c542]        # 0x14003d3d8
   140020e96:	mulsd  xmm4,QWORD PTR [rip+0x1c53a]        # 0x14003d3d8
   140020e9e:	test   ecx,ecx
   140020ea0:	cmovs  ecx,ebx
   140020ea3:	mov    DWORD PTR [rip+0x32ceb],ecx        # 0x140053b94
   140020ea9:	movsd  QWORD PTR [rip+0x32d2f],xmm5        # 0x140053be0
   140020eb1:	movsd  QWORD PTR [rip+0x32d2f],xmm4        # 0x140053be8
   140020eb9:	divsd  xmm2,xmm1
   140020ebd:	divsd  xmm7,xmm0
   140020ec1:	movsd  QWORD PTR [rip+0x32d07],xmm2        # 0x140053bd0
   140020ec9:	movsd  QWORD PTR [rip+0x32d07],xmm7        # 0x140053bd8
   140020ed1:	jmp    0x140020f07
   140020ed3:	mov    rdi,QWORD PTR [rip+0x32cde]        # 0x140053bb8
   140020eda:	mov    r8d,DWORD PTR [rip+0x32cb7]        # 0x140053b98
   140020ee1:	movsd  xmm2,QWORD PTR [rip+0x32ce7]        # 0x140053bd0
   140020ee9:	movsd  xmm7,QWORD PTR [rip+0x32ce7]        # 0x140053bd8
   140020ef1:	movsd  xmm5,QWORD PTR [rip+0x32ce7]        # 0x140053be0
   140020ef9:	movsd  xmm4,QWORD PTR [rip+0x32ce7]        # 0x140053be8
   140020f01:	mov    ecx,DWORD PTR [rip+0x32c8d]        # 0x140053b94
   140020f07:	movsd  xmm3,QWORD PTR [rsp+0x20]
   140020f0d:	movsd  xmm1,QWORD PTR [rsp+0x28]
   140020f13:	mulsd  xmm3,xmm2
   140020f17:	mulsd  xmm1,xmm7
   140020f1b:	movsd  xmm7,QWORD PTR [rip+0x1c63d]        # 0x14003d560
   140020f23:	movaps xmm0,xmm3
   140020f26:	movsd  QWORD PTR [rsp+0x20],xmm3
   140020f2c:	movsd  QWORD PTR [rsp+0x28],xmm1
   140020f32:	andps  xmm0,xmm7
   140020f35:	comisd xmm0,xmm5
   140020f39:	ja     0x14002140c
   140020f3f:	movaps xmm2,xmm1
   140020f42:	andps  xmm2,xmm7
   140020f45:	comisd xmm2,xmm4
   140020f49:	ja     0x14002140c
   140020f4f:	cmp    r8d,0x2
   140020f53:	jg     0x140020f75
   140020f55:	divsd  xmm3,xmm5
   140020f59:	divsd  xmm1,xmm4
   140020f5d:	movaps xmm0,xmm3
   140020f60:	call   QWORD PTR [rip+0x1c1f2]        # 0x14003d158
   140020f66:	comisd xmm9,xmm0
   140020f6b:	seta   bl
   140020f6e:	mov    eax,ebx
   140020f70:	jmp    0x1400213d4
   140020f75:	mov    eax,DWORD PTR [rip+0x32c15]        # 0x140053b90
   140020f7b:	movss  xmm7,DWORD PTR [rip+0x32c25]        # 0x140053ba8
   140020f83:	movss  xmm9,DWORD PTR [rip+0x32c20]        # 0x140053bac
   140020f8c:	cdq    
   140020f8d:	mov    QWORD PTR [rsp+0x170],r14
   140020f95:	movsxd r14,ecx
   140020f98:	mov    ecx,ebx
   140020f9a:	movaps XMMWORD PTR [rsp+0x100],xmm10
   140020fa3:	movss  xmm10,DWORD PTR [rip+0x32c04]        # 0x140053bb0
   140020fac:	movaps XMMWORD PTR [rsp+0xf0],xmm11
   140020fb5:	idiv   r8d
   140020fb8:	movss  xmm11,DWORD PTR [rip+0x32bf3]        # 0x140053bb4
   140020fc1:	movaps XMMWORD PTR [rsp+0xe0],xmm12
   140020fca:	movaps XMMWORD PTR [rsp+0xd0],xmm13
   140020fd3:	movaps XMMWORD PTR [rsp+0xc0],xmm14
   140020fdc:	movss  xmm14,DWORD PTR [rsp+0x28]
   140020fe3:	movss  xmm12,DWORD PTR [rsp+0x20]
   140020fea:	movss  xmm13,DWORD PTR [rsp+0x24]
   140020ff1:	movaps XMMWORD PTR [rsp+0xb0],xmm15
   140020ffa:	movss  xmm15,DWORD PTR [rsp+0x2c]
   140021001:	movsxd r9,edx
   140021004:	lea    eax,[r9+0x1]
   140021008:	cdq    
   140021009:	idiv   r8d
   14002100c:	lea    rax,[r14+r9*1]
   140021010:	add    rax,rax
   140021013:	movups xmm0,XMMWORD PTR [rdi+rax*8]
   140021017:	movups xmm2,xmm0
   14002101a:	movups XMMWORD PTR [rsp+0x60],xmm0
   14002101f:	movaps xmm5,xmm2
   140021022:	shufps xmm5,xmm2,0x55
   140021026:	movaps XMMWORD PTR [rsp+0x50],xmm5
   14002102b:	movaps xmm5,xmm2
   14002102e:	shufps xmm5,xmm2,0xaa
   140021032:	movaps XMMWORD PTR [rsp+0x30],xmm5
   140021037:	movaps xmm5,xmm2
   14002103a:	shufps xmm5,xmm2,0xff
   14002103e:	movaps XMMWORD PTR [rsp+0x40],xmm5
   140021043:	movsxd r10,edx
   140021046:	lea    rax,[r14+r10*1]
   14002104a:	add    rax,rax
   14002104d:	movups xmm0,XMMWORD PTR [rdi+rax*8]
   140021051:	movups XMMWORD PTR [rbp-0x80],xmm0
   140021055:	movaps xmm1,xmm0
   140021058:	movaps xmm3,xmm0
   14002105b:	movaps xmm4,xmm0
   14002105e:	shufps xmm1,xmm0,0xaa
   140021062:	shufps xmm4,xmm0,0x55
   140021066:	shufps xmm3,xmm0,0xff
   14002106a:	movaps XMMWORD PTR [rbp-0x70],xmm1
   14002106e:	movaps XMMWORD PTR [rbp-0x60],xmm4
   140021072:	movaps XMMWORD PTR [rsp+0x70],xmm3
   140021077:	movss  xmm5,xmm1
   14002107b:	movss  xmm1,DWORD PTR [rsp+0x30]
   140021081:	unpcklps xmm1,XMMWORD PTR [rsp+0x40]
   140021086:	unpcklps xmm5,xmm3
   140021089:	movss  xmm3,xmm0
   14002108d:	subsd  xmm5,xmm1
   140021091:	unpcklps xmm3,xmm4
   140021094:	movss  xmm4,xmm2
   140021098:	movss  xmm2,xmm14
   14002109d:	unpcklps xmm4,XMMWORD PTR [rsp+0x50]
   1400210a2:	xorps  xmm5,xmm8
   1400210a6:	unpcklps xmm2,xmm15
   1400210aa:	subsd  xmm3,xmm4
   1400210ae:	movaps xmm0,xmm3
   1400210b1:	mulsd  xmm0,xmm1
   1400210b5:	mulsd  xmm4,xmm5
   1400210b9:	movss  xmm1,xmm10
   1400210be:	addsd  xmm4,xmm0
   1400210c2:	movss  xmm0,xmm7
   1400210c6:	unpcklps xmm1,xmm11
   1400210ca:	unpcklps xmm0,xmm9
   1400210ce:	mulsd  xmm2,xmm3
   1400210d2:	mulsd  xmm0,xmm5
   1400210d6:	mulsd  xmm1,xmm3
   1400210da:	addsd  xmm1,xmm0
   1400210de:	movss  xmm0,xmm12
   1400210e3:	subsd  xmm1,xmm4
   1400210e7:	comisd xmm1,xmm6
   1400210eb:	setae  cl
   1400210ee:	mov    eax,ebx
   1400210f0:	unpcklps xmm0,xmm13
   1400210f4:	mulsd  xmm0,xmm5
   1400210f8:	addsd  xmm2,xmm0
   1400210fc:	subsd  xmm2,xmm4
   140021100:	comisd xmm2,xmm6
   140021104:	setae  al
   140021107:	cmp    eax,ecx
   140021109:	je     0x140021112
   14002110b:	xor    eax,eax
   14002110d:	jmp    0x140021396
   140021112:	movss  xmm0,DWORD PTR [rbp-0x70]
   140021117:	movss  xmm4,DWORD PTR [rbp-0x80]
   14002111c:	movss  xmm1,DWORD PTR [rsp+0x30]
   140021122:	mov    ecx,ebx
   140021124:	mov    eax,ebx
   140021126:	mov    edx,ebx
   140021128:	unpcklps xmm0,XMMWORD PTR [rsp+0x70]
   14002112d:	unpcklps xmm4,XMMWORD PTR [rbp-0x60]
   140021131:	unpcklps xmm1,XMMWORD PTR [rsp+0x40]
   140021136:	movss  xmm5,xmm10
   14002113b:	movss  xmm3,xmm7
   14002113f:	movss  xmm2,xmm14
   140021144:	unpcklps xmm5,xmm11
   140021148:	unpcklps xmm2,xmm15
   14002114c:	unpcklps xmm3,xmm9
   140021150:	subsd  xmm5,xmm0
   140021154:	subsd  xmm3,xmm4
   140021158:	mulsd  xmm0,xmm3
   14002115c:	xorps  xmm5,xmm8
   140021160:	mulsd  xmm1,xmm3
   140021164:	mulsd  xmm4,xmm5
   140021168:	mulsd  xmm2,xmm3
   14002116c:	addsd  xmm4,xmm0
   140021170:	movss  xmm0,DWORD PTR [rsp+0x60]
   140021176:	unpcklps xmm0,XMMWORD PTR [rsp+0x50]
   14002117b:	mulsd  xmm0,xmm5
   14002117f:	addsd  xmm1,xmm0
   140021183:	movss  xmm0,xmm12
   140021188:	unpcklps xmm0,xmm13
   14002118c:	mulsd  xmm0,xmm5
   140021190:	subsd  xmm1,xmm4
   140021194:	comisd xmm1,xmm6
   140021198:	addsd  xmm2,xmm0
   14002119c:	setae  cl
   14002119f:	subsd  xmm2,xmm4
   1400211a3:	comisd xmm2,xmm6
   1400211a7:	setae  al
   1400211aa:	cmp    eax,ecx
   1400211ac:	sete   dl
   1400211af:	test   edx,edx
   1400211b1:	je     0x14002125b
   1400211b7:	movss  xmm5,DWORD PTR [rsp+0x30]
   1400211bd:	movss  xmm3,DWORD PTR [rsp+0x60]
   1400211c3:	movss  xmm1,DWORD PTR [rbp-0x70]
   1400211c8:	mov    ecx,ebx
   1400211ca:	mov    eax,ebx
   1400211cc:	unpcklps xmm1,XMMWORD PTR [rsp+0x70]
   1400211d1:	unpcklps xmm5,XMMWORD PTR [rsp+0x40]
   1400211d6:	unpcklps xmm3,XMMWORD PTR [rsp+0x50]
   1400211db:	movss  xmm0,xmm10
   1400211e0:	movss  xmm4,xmm7
   1400211e4:	movss  xmm2,xmm14
   1400211e9:	unpcklps xmm0,xmm11
   1400211ed:	unpcklps xmm4,xmm9
   1400211f1:	unpcklps xmm2,xmm15
   1400211f5:	subsd  xmm5,xmm0
   1400211f9:	subsd  xmm3,xmm4
   1400211fd:	mulsd  xmm0,xmm3
   140021201:	xorps  xmm5,xmm8
   140021205:	mulsd  xmm1,xmm3
   140021209:	mulsd  xmm4,xmm5
   14002120d:	mulsd  xmm2,xmm3
   140021211:	addsd  xmm4,xmm0
   140021215:	movss  xmm0,DWORD PTR [rbp-0x80]
   14002121a:	unpcklps xmm0,XMMWORD PTR [rbp-0x60]
   14002121e:	mulsd  xmm0,xmm5
   140021222:	addsd  xmm1,xmm0
   140021226:	movss  xmm0,xmm12
   14002122b:	unpcklps xmm0,xmm13
   14002122f:	mulsd  xmm0,xmm5
   140021233:	subsd  xmm1,xmm4
   140021237:	comisd xmm1,xmm6
   14002123b:	addsd  xmm2,xmm0
   14002123f:	setae  cl
   140021242:	subsd  xmm2,xmm4
   140021246:	comisd xmm2,xmm6
   14002124a:	setae  al
   14002124d:	cmp    eax,ecx
   14002124f:	jne    0x14002125b
   140021251:	mov    eax,0x1
   140021256:	jmp    0x140021396
   14002125b:	mov    r11d,0x1
   140021261:	mov    QWORD PTR [rsp+0x160],rsi
   140021269:	cmp    r8d,r11d
   14002126c:	jle    0x140021382
   140021272:	movss  DWORD PTR [rsp+0x30],xmm7
   140021278:	movss  DWORD PTR [rsp+0x34],xmm9
   14002127f:	movss  DWORD PTR [rsp+0x3c],xmm11
   140021286:	movsxd rsi,edx
   140021289:	movsd  xmm11,QWORD PTR [rsp+0x30]
   140021290:	movss  DWORD PTR [rsp+0x38],xmm10
   140021297:	movsd  xmm10,QWORD PTR [rsp+0x38]
   14002129e:	movss  DWORD PTR [rsp+0x20],xmm12
   1400212a5:	movss  DWORD PTR [rsp+0x24],xmm13
   1400212ac:	movsd  xmm9,QWORD PTR [rsp+0x20]
   1400212b3:	movss  DWORD PTR [rsp+0x28],xmm14
   1400212ba:	movss  DWORD PTR [rsp+0x2c],xmm15
   1400212c1:	movsd  xmm7,QWORD PTR [rsp+0x28]
   1400212c7:	test   rsi,rsi
   1400212ca:	je     0x1400212dc
   1400212cc:	lea    eax,[r10+0x1]
   1400212d0:	mov    r9d,r10d
   1400212d3:	cdq    
   1400212d4:	idiv   r8d
   1400212d7:	mov    r10d,edx
   1400212da:	jmp    0x1400212ed
   1400212dc:	lea    eax,[r9-0x1]
   1400212e0:	mov    r10d,r9d
   1400212e3:	add    eax,r8d
   1400212e6:	cdq    
   1400212e7:	idiv   r8d
   1400212ea:	mov    r9d,edx
   1400212ed:	movsxd rax,r10d
   1400212f0:	mov    ecx,ebx
   1400212f2:	movaps xmm1,xmm10
   1400212f6:	add    rax,r14
   1400212f9:	movaps xmm2,xmm7
   1400212fc:	add    rax,rax
   1400212ff:	movups xmm5,XMMWORD PTR [rdi+rax*8]
   140021303:	movsxd rax,r9d
   140021306:	add    rax,r14
   140021309:	add    rax,rax
   14002130c:	movups xmm4,XMMWORD PTR [rdi+rax*8]
   140021310:	movaps xmm3,xmm5
   140021313:	mov    eax,ebx
   140021315:	unpckhpd xmm3,xmm5
   140021319:	subsd  xmm5,xmm4
   14002131d:	movaps xmm0,xmm4
   140021320:	unpckhpd xmm0,xmm4
   140021324:	mulsd  xmm1,xmm5
   140021328:	mulsd  xmm2,xmm5
   14002132c:	subsd  xmm3,xmm0
   140021330:	mulsd  xmm0,xmm5
   140021334:	xorps  xmm3,xmm8
   140021338:	mulsd  xmm4,xmm3
   14002133c:	addsd  xmm4,xmm0
   140021340:	movaps xmm0,xmm11
   140021344:	mulsd  xmm0,xmm3
   140021348:	addsd  xmm1,xmm0
   14002134c:	movaps xmm0,xmm9
   140021350:	mulsd  xmm0,xmm3
   140021354:	subsd  xmm1,xmm4
   140021358:	addsd  xmm2,xmm0
   14002135c:	comisd xmm1,xmm6
   140021360:	subsd  xmm2,xmm4
   140021364:	setae  cl
   140021367:	comisd xmm2,xmm6
   14002136b:	setae  al
   14002136e:	cmp    eax,ecx
   140021370:	jne    0x140021401
   140021376:	inc    r11d
   140021379:	cmp    r11d,r8d
   14002137c:	jl     0x1400212c7
   140021382:	mov    DWORD PTR [rip+0x32807],r9d        # 0x140053b90
   140021389:	mov    eax,0x1
   14002138e:	mov    rsi,QWORD PTR [rsp+0x160]
   140021396:	movaps xmm13,XMMWORD PTR [rsp+0xd0]
   14002139f:	movaps xmm12,XMMWORD PTR [rsp+0xe0]
   1400213a8:	movaps xmm11,XMMWORD PTR [rsp+0xf0]
   1400213b1:	mov    r14,QWORD PTR [rsp+0x170]
   1400213b9:	movaps xmm10,XMMWORD PTR [rsp+0x100]
   1400213c2:	movaps xmm14,XMMWORD PTR [rsp+0xc0]
   1400213cb:	movaps xmm15,XMMWORD PTR [rsp+0xb0]
   1400213d4:	mov    rdi,QWORD PTR [rsp+0x168]
   1400213dc:	lea    r11,[rsp+0x150]
   1400213e4:	mov    rbx,QWORD PTR [r11+0x28]
   1400213e8:	movaps xmm6,XMMWORD PTR [r11-0x10]
   1400213ed:	movaps xmm7,XMMWORD PTR [r11-0x20]
   1400213f2:	movaps xmm8,XMMWORD PTR [r11-0x30]
   1400213f7:	movaps xmm9,XMMWORD PTR [r11-0x40]
   1400213fc:	mov    rsp,r11
   1400213ff:	pop    rbp
   140021400:	ret    
   140021401:	mov    DWORD PTR [rip+0x32788],r9d        # 0x140053b90
   140021408:	xor    eax,eax
   14002140a:	jmp    0x14002138e
   14002140c:	xor    eax,eax
   14002140e:	jmp    0x1400213d4
   140021410:	mov    rax,rsp
   140021413:	push   rdi
   140021414:	push   r14
   140021416:	sub    rsp,0x98
   14002141d:	mov    QWORD PTR [rax+0x18],rbx
   140021421:	mov    QWORD PTR [rax-0x18],rbp
   140021425:	mov    QWORD PTR [rax-0x20],rsi
   140021429:	mov    QWORD PTR [rax-0x28],r12
   14002142d:	mov    QWORD PTR [rax-0x30],r13
   140021431:	mov    QWORD PTR [rax-0x38],r15
   140021435:	movaps XMMWORD PTR [rax-0x68],xmm8
   14002143a:	movaps XMMWORD PTR [rax-0x78],xmm9
   14002143f:	mov    rax,QWORD PTR [rcx+0x30]
   140021443:	mov    rdi,rcx
   140021446:	movsxd r15,DWORD PTR [rax+0x8]
   14002144a:	mov    rcx,QWORD PTR [rax+0x30]
   14002144e:	mov    ebx,DWORD PTR [rax+0x4]
   140021451:	cmp    DWORD PTR [rip+0x32744],r15d        # 0x140053b9c
   140021458:	mov    QWORD PTR [rsp+0xb0],rcx
   140021460:	jge    0x14002149b
   140021462:	mov    rcx,QWORD PTR [rip+0x32787]        # 0x140053bf0
   140021469:	lea    eax,[r15+0x5]
   14002146d:	mov    DWORD PTR [rip+0x32729],eax        # 0x140053b9c
   140021473:	test   rcx,rcx
   140021476:	je     0x140021487
   140021478:	movsxd rdx,eax
   14002147b:	shl    rdx,0x3
   14002147f:	call   QWORD PTR [rip+0x1bc23]        # 0x14003d0a8
   140021485:	jmp    0x140021494
   140021487:	movsxd rcx,eax
   14002148a:	shl    rcx,0x3
   14002148e:	call   QWORD PTR [rip+0x1bcd4]        # 0x14003d168
   140021494:	mov    QWORD PTR [rip+0x32755],rax        # 0x140053bf0
   14002149b:	mov    rax,QWORD PTR [rip+0x34046]        # 0x1400554e8
   1400214a2:	mov    rcx,rdi
   1400214a5:	call   QWORD PTR [rax+0x68]
   1400214a8:	mov    rax,QWORD PTR [rip+0x34039]        # 0x1400554e8
   1400214af:	call   QWORD PTR [rax+0x88]
   1400214b5:	mov    eax,DWORD PTR [rdi+0x58]
   1400214b8:	mov    rdx,QWORD PTR [rip+0x34029]        # 0x1400554e8
   1400214bf:	movd   xmm9,DWORD PTR [rdi+0x50]
   1400214c5:	cvtdq2pd xmm9,xmm9
   1400214ca:	add    eax,DWORD PTR [rdi+0x54]
   1400214cd:	mov    r14d,0x1
   1400214d3:	divsd  xmm9,QWORD PTR [rdi+0x48]
   1400214d9:	movd   xmm8,eax
   1400214de:	lea    rax,[rip+0x314cb]        # 0x1400529b0
   1400214e5:	mulsd  xmm9,QWORD PTR [rip+0x1da1a]        # 0x14003ef08
   1400214ee:	cvtdq2pd xmm8,xmm8
   1400214f3:	divsd  xmm8,QWORD PTR [rdi+0x40]
   1400214f9:	mulsd  xmm8,QWORD PTR [rip+0x1da06]        # 0x14003ef08
   140021502:	cmp    rdx,rax
   140021505:	jne    0x14002150d
   140021507:	test   ebx,ebx
   140021509:	cmove  ebx,r14d
   14002150d:	mov    rax,QWORD PTR [rip+0x3266c]        # 0x140053b80
   140021514:	cmp    QWORD PTR [rdi+0x28],rax
   140021518:	jne    0x14002152c
   14002151a:	lea    rcx,[rip+0x2ac5f]        # 0x14004c180
   140021521:	call   QWORD PTR [rdx+0xb8]
   140021527:	mov    r12d,r14d
   14002152a:	jmp    0x140021537
   14002152c:	mov    rcx,rdi
   14002152f:	call   0x140023ae0
   140021534:	mov    r12d,eax
   140021537:	mov    rdx,QWORD PTR [rip+0x33efa]        # 0x140055438
   14002153e:	lea    r8,[rip+0x1bed3]        # 0x14003d418
   140021545:	mov    rcx,rdi
   140021548:	call   0x14001c3a0
   14002154d:	cmp    BYTE PTR [rax],0x0
   140021550:	je     0x140021562
   140021552:	mov    rdx,QWORD PTR [rip+0x33f8f]        # 0x1400554e8
   140021559:	mov    rcx,rax
   14002155c:	call   QWORD PTR [rdx+0xa8]
   140021562:	mov    r13d,r12d
   140021565:	and    r13d,r14d
   140021568:	je     0x140021572
   14002156a:	mov    rcx,rdi
   14002156d:	call   0x140022680
   140021572:	movsxd rbx,ebx
   140021575:	xor    ebp,ebp
   140021577:	mov    QWORD PTR [rsp+0xb8],rbx
   14002157f:	test   rbx,rbx
   140021582:	jle    0x140021934
   140021588:	movaps XMMWORD PTR [rsp+0x60],xmm6
   14002158d:	movsd  xmm6,QWORD PTR [rip+0x1be43]        # 0x14003d3d8
   140021595:	movaps XMMWORD PTR [rsp+0x50],xmm7
   14002159a:	xorps  xmm7,xmm7
   14002159d:	nop    DWORD PTR [rax]
   1400215a0:	mov    r14,QWORD PTR [rip+0x32649]        # 0x140053bf0
   1400215a7:	xor    r11d,r11d
   1400215aa:	cmp    r15,0x4
   1400215ae:	jl     0x1400217da
   1400215b4:	mov    r10,r15
   1400215b7:	lea    rbx,[r15-0x4]
   1400215bb:	lea    r8,[r14+0x8]
   1400215bf:	shr    rbx,0x2
   1400215c3:	imul   r10,rbp
   1400215c7:	shl    r10,0x4
   1400215cb:	add    r10,QWORD PTR [rsp+0xb0]
   1400215d3:	inc    rbx
   1400215d6:	lea    r11,[rbx*4+0x0]
   1400215de:	xchg   ax,ax
   1400215e0:	movups xmm0,XMMWORD PTR [r10]
   1400215e4:	movups xmm1,xmm0
   1400215e7:	movups XMMWORD PTR [rsp+0x20],xmm0
   1400215ec:	mulsd  xmm1,xmm8
   1400215f1:	comisd xmm1,xmm7
   1400215f5:	jb     0x1400215fd
   1400215f7:	addsd  xmm1,xmm6
   1400215fb:	jmp    0x140021601
   1400215fd:	subsd  xmm1,xmm6
   140021601:	movsd  xmm0,QWORD PTR [rsp+0x28]
   140021607:	cvttsd2si eax,xmm1
   14002160b:	mulsd  xmm0,xmm9
   140021610:	cdq    
   140021611:	and    edx,0xf
   140021614:	add    eax,edx
   140021616:	sar    eax,0x4
   140021619:	mov    r9d,eax
   14002161c:	mov    DWORD PTR [r8-0x8],eax
   140021620:	comisd xmm0,xmm7
   140021624:	jb     0x14002162c
   140021626:	addsd  xmm0,xmm6
   14002162a:	jmp    0x140021630
   14002162c:	subsd  xmm0,xmm6
   140021630:	cvttsd2si eax,xmm0
   140021634:	cdq    
   140021635:	and    edx,0xf
   140021638:	add    eax,edx
   14002163a:	sar    eax,0x4
   14002163d:	mov    DWORD PTR [r8-0x4],eax
   140021641:	cmp    r15,0x2
   140021645:	jle    0x140021658
   140021647:	mov    edx,DWORD PTR [rdi+0x38]
   14002164a:	add    edx,r9d
   14002164d:	mov    DWORD PTR [r8-0x8],edx
   140021651:	add    eax,DWORD PTR [rdi+0x3c]
   140021654:	mov    DWORD PTR [r8-0x4],eax
   140021658:	movups xmm0,XMMWORD PTR [r10+0x10]
   14002165d:	movups xmm1,xmm0
   140021660:	movups XMMWORD PTR [rsp+0x20],xmm0
   140021665:	mulsd  xmm1,xmm8
   14002166a:	comisd xmm1,xmm7
   14002166e:	jb     0x140021676
   140021670:	addsd  xmm1,xmm6
   140021674:	jmp    0x14002167a
   140021676:	subsd  xmm1,xmm6
   14002167a:	movsd  xmm0,QWORD PTR [rsp+0x28]
   140021680:	cvttsd2si eax,xmm1
   140021684:	mulsd  xmm0,xmm9
   140021689:	cdq    
   14002168a:	and    edx,0xf
   14002168d:	add    eax,edx
   14002168f:	sar    eax,0x4
   140021692:	mov    r9d,eax
   140021695:	mov    DWORD PTR [r8],eax
   140021698:	comisd xmm0,xmm7
   14002169c:	jb     0x1400216a4
   14002169e:	addsd  xmm0,xmm6
   1400216a2:	jmp    0x1400216a8
   1400216a4:	subsd  xmm0,xmm6
   1400216a8:	cvttsd2si eax,xmm0
   1400216ac:	cdq    
   1400216ad:	and    edx,0xf
   1400216b0:	add    eax,edx
   1400216b2:	sar    eax,0x4
   1400216b5:	mov    DWORD PTR [r8+0x4],eax
   1400216b9:	cmp    r15,0x2
   1400216bd:	jle    0x1400216cf
   1400216bf:	mov    edx,DWORD PTR [rdi+0x38]
   1400216c2:	add    edx,r9d
   1400216c5:	mov    DWORD PTR [r8],edx
   1400216c8:	add    eax,DWORD PTR [rdi+0x3c]
   1400216cb:	mov    DWORD PTR [r8+0x4],eax
   1400216cf:	movups xmm0,XMMWORD PTR [r10+0x20]
   1400216d4:	movups xmm1,xmm0
   1400216d7:	movups XMMWORD PTR [rsp+0x20],xmm0
   1400216dc:	mulsd  xmm1,xmm8
   1400216e1:	comisd xmm1,xmm7
   1400216e5:	jb     0x1400216ed
   1400216e7:	addsd  xmm1,xmm6
   1400216eb:	jmp    0x1400216f1
   1400216ed:	subsd  xmm1,xmm6
   1400216f1:	movsd  xmm0,QWORD PTR [rsp+0x28]
   1400216f7:	cvttsd2si eax,xmm1
   1400216fb:	mulsd  xmm0,xmm9
   140021700:	cdq    
   140021701:	and    edx,0xf
   140021704:	add    eax,edx
   140021706:	sar    eax,0x4
   140021709:	mov    r9d,eax
   14002170c:	mov    DWORD PTR [r8+0x8],eax
   140021710:	comisd xmm0,xmm7
   140021714:	jb     0x14002171c
   140021716:	addsd  xmm0,xmm6
   14002171a:	jmp    0x140021720
   14002171c:	subsd  xmm0,xmm6
   140021720:	cvttsd2si eax,xmm0
   140021724:	cdq    
   140021725:	and    edx,0xf
   140021728:	add    eax,edx
   14002172a:	sar    eax,0x4
   14002172d:	mov    DWORD PTR [r8+0xc],eax
   140021731:	cmp    r15,0x2
   140021735:	jle    0x140021748
   140021737:	mov    edx,DWORD PTR [rdi+0x38]
   14002173a:	add    edx,r9d
   14002173d:	mov    DWORD PTR [r8+0x8],edx
   140021741:	add    eax,DWORD PTR [rdi+0x3c]
   140021744:	mov    DWORD PTR [r8+0xc],eax
   140021748:	movups xmm0,XMMWORD PTR [r10+0x30]
   14002174d:	movups xmm1,xmm0
   140021750:	movups XMMWORD PTR [rsp+0x20],xmm0
   140021755:	mulsd  xmm1,xmm8
   14002175a:	comisd xmm1,xmm7
   14002175e:	jb     0x140021766
   140021760:	addsd  xmm1,xmm6
   140021764:	jmp    0x14002176a
   140021766:	subsd  xmm1,xmm6
   14002176a:	movsd  xmm0,QWORD PTR [rsp+0x28]
   140021770:	cvttsd2si eax,xmm1
   140021774:	mulsd  xmm0,xmm9
   140021779:	cdq    
   14002177a:	and    edx,0xf
   14002177d:	add    eax,edx
   14002177f:	sar    eax,0x4
   140021782:	mov    r9d,eax
   140021785:	mov    DWORD PTR [r8+0x10],eax
   140021789:	comisd xmm0,xmm7
   14002178d:	jb     0x140021795
   14002178f:	addsd  xmm0,xmm6
   140021793:	jmp    0x140021799
   140021795:	subsd  xmm0,xmm6
   140021799:	cvttsd2si eax,xmm0
   14002179d:	cdq    
   14002179e:	and    edx,0xf
   1400217a1:	add    eax,edx
   1400217a3:	sar    eax,0x4
   1400217a6:	mov    DWORD PTR [r8+0x14],eax
   1400217aa:	cmp    r15,0x2
   1400217ae:	jle    0x1400217c1
   1400217b0:	mov    edx,DWORD PTR [rdi+0x38]
   1400217b3:	add    edx,r9d
   1400217b6:	mov    DWORD PTR [r8+0x10],edx
   1400217ba:	add    eax,DWORD PTR [rdi+0x3c]
   1400217bd:	mov    DWORD PTR [r8+0x14],eax
   1400217c1:	add    r10,0x40
   1400217c5:	add    r8,0x20
   1400217c9:	dec    rbx
   1400217cc:	jne    0x1400215e0
   1400217d2:	mov    rbx,QWORD PTR [rsp+0xb8]
   1400217da:	cmp    r11,r15
   1400217dd:	jge    0x140021883
   1400217e3:	mov    r8,r15
   1400217e6:	imul   r8,rbp
   1400217ea:	add    r8,r11
   1400217ed:	shl    r8,0x4
   1400217f1:	add    r8,QWORD PTR [rsp+0xb0]
   1400217f9:	movups xmm0,XMMWORD PTR [r8]
   1400217fd:	movups xmm1,xmm0
   140021800:	movups XMMWORD PTR [rsp+0x20],xmm0
   140021805:	mulsd  xmm1,xmm8
   14002180a:	comisd xmm1,xmm7
   14002180e:	jb     0x140021816
   140021810:	addsd  xmm1,xmm6
   140021814:	jmp    0x14002181a
   140021816:	subsd  xmm1,xmm6
   14002181a:	movsd  xmm0,QWORD PTR [rsp+0x28]
   140021820:	cvttsd2si eax,xmm1
   140021824:	mulsd  xmm0,xmm9
   140021829:	cdq    
   14002182a:	and    edx,0xf
   14002182d:	add    eax,edx
   14002182f:	sar    eax,0x4
   140021832:	mov    r9d,eax
   140021835:	mov    DWORD PTR [r14+r11*8],eax
   140021839:	comisd xmm0,xmm7
   14002183d:	jb     0x140021845
   14002183f:	addsd  xmm0,xmm6
   140021843:	jmp    0x140021849
   140021845:	subsd  xmm0,xmm6
   140021849:	cvttsd2si eax,xmm0
   14002184d:	cdq    
   14002184e:	and    edx,0xf
   140021851:	add    eax,edx
   140021853:	sar    eax,0x4
   140021856:	mov    DWORD PTR [r14+r11*8+0x4],eax
   14002185b:	cmp    r15,0x2
   14002185f:	jle    0x140021873
   140021861:	mov    edx,DWORD PTR [rdi+0x38]
   140021864:	add    edx,r9d
   140021867:	mov    DWORD PTR [r14+r11*8],edx
   14002186b:	add    eax,DWORD PTR [rdi+0x3c]
   14002186e:	mov    DWORD PTR [r14+r11*8+0x4],eax
   140021873:	inc    r11
   140021876:	add    r8,0x10
   14002187a:	cmp    r11,r15
   14002187d:	jl     0x1400217f9
   140021883:	test   rbp,rbp
   140021886:	jne    0x140021893
   140021888:	test   r13d,r13d
   14002188b:	je     0x140021893
   14002188d:	lea    r8d,[rbp+0x1]
   140021891:	jmp    0x140021896
   140021893:	xor    r8d,r8d
   140021896:	mov    rcx,QWORD PTR [rdi+0x28]
   14002189a:	cmp    BYTE PTR [rcx+0x40],0x0
   14002189e:	je     0x1400218bb
   1400218a0:	mov    rax,QWORD PTR [rip+0x33c41]        # 0x1400554e8
   1400218a7:	mov    rcx,QWORD PTR [rcx]
   1400218aa:	mov    r9d,r8d
   1400218ad:	mov    r8d,r15d
   1400218b0:	mov    rdx,r14
   1400218b3:	call   QWORD PTR [rax+0xe8]
   1400218b9:	jmp    0x140021918
   1400218bb:	cmp    r15d,0x2
   1400218bf:	jg     0x1400218ec
   1400218c1:	mov    rax,QWORD PTR [rip+0x33c20]        # 0x1400554e8
   1400218c8:	mov    edx,DWORD PTR [r14]
   1400218cb:	mov    rcx,QWORD PTR [rdi+0x38]
   1400218cf:	mov    r9d,r8d
   1400218d2:	mov    r8d,DWORD PTR [r14+0x4]
   1400218d6:	call   QWORD PTR [rax+0xc0]
   1400218dc:	test   r12b,0x4
   1400218e0:	je     0x140021918
   1400218e2:	mov    rcx,rdi
   1400218e5:	call   0x140022390
   1400218ea:	jmp    0x140021918
   1400218ec:	test   r12b,0x6
   1400218f0:	je     0x140021905
   1400218f2:	mov    r9d,r12d
   1400218f5:	mov    r8d,r15d
   1400218f8:	mov    rdx,r14
   1400218fb:	mov    rcx,rdi
   1400218fe:	call   0x140023410
   140021903:	jmp    0x140021918
   140021905:	mov    rax,QWORD PTR [rip+0x33bdc]        # 0x1400554e8
   14002190c:	mov    edx,r15d
   14002190f:	mov    rcx,r14
   140021912:	call   QWORD PTR [rax+0xc8]
   140021918:	inc    rbp
   14002191b:	cmp    rbp,rbx
   14002191e:	jl     0x1400215a0
   140021924:	movaps xmm7,XMMWORD PTR [rsp+0x50]
   140021929:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   14002192e:	mov    r14d,0x1
   140021934:	movaps xmm9,XMMWORD PTR [rsp+0x30]
   14002193a:	movaps xmm8,XMMWORD PTR [rsp+0x40]
   140021940:	mov    r15,QWORD PTR [rsp+0x70]
   140021945:	mov    r13,QWORD PTR [rsp+0x78]
   14002194a:	mov    rsi,QWORD PTR [rsp+0x88]
   140021952:	mov    rbp,QWORD PTR [rsp+0x90]
   14002195a:	mov    rbx,QWORD PTR [rsp+0xc0]
   140021962:	test   r12b,0x8
   140021966:	mov    r12,QWORD PTR [rsp+0x80]
   14002196e:	je     0x1400219b5
   140021970:	lea    rdx,[rip+0x1d509]        # 0x14003ee80
   140021977:	mov    rcx,rdi
   14002197a:	call   0x1400275b0
   14002197f:	test   rax,rax
   140021982:	je     0x140021992
   140021984:	mov    r8d,r14d
   140021987:	mov    rdx,rax
   14002198a:	mov    rcx,rdi
   14002198d:	call   0x140022980
   140021992:	lea    rdx,[rip+0x1d4f7]        # 0x14003ee90
   140021999:	mov    rcx,rdi
   14002199c:	call   0x1400275b0
   1400219a1:	test   rax,rax
   1400219a4:	je     0x1400219b5
   1400219a6:	or     r8d,0xffffffff
   1400219aa:	mov    rdx,rax
   1400219ad:	mov    rcx,rdi
   1400219b0:	call   0x140022980
   1400219b5:	mov    rcx,QWORD PTR [rdi+0x60]
   1400219b9:	mov    rax,QWORD PTR [rdi+0x38]
   1400219bd:	mov    QWORD PTR [rcx+0x30],rax
   1400219c1:	mov    rdx,QWORD PTR [rdi+0x20]
   1400219c5:	mov    rcx,QWORD PTR [rdi+0x60]
   1400219c9:	call   0x14001e6c0
   1400219ce:	mov    rax,QWORD PTR [rip+0x33b13]        # 0x1400554e8
   1400219d5:	call   QWORD PTR [rax+0x90]
   1400219db:	mov    rax,QWORD PTR [rip+0x33b06]        # 0x1400554e8
   1400219e2:	add    rsp,0x98
   1400219e9:	pop    r14
   1400219eb:	pop    rdi
   1400219ec:	rex.W jmp QWORD PTR [rax+0x70]
   1400219f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400219f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400219fa:	push   rdi
   1400219fb:	sub    rsp,0x20
   1400219ff:	xor    esi,esi
   140021a01:	mov    rbx,rcx
   140021a04:	cmp    QWORD PTR [rip+0x32175],rsi        # 0x140053b80
   140021a0b:	jne    0x140021a84
   140021a0d:	mov    rdx,QWORD PTR [rip+0x2acbc]        # 0x14004c6d0
   140021a14:	lea    r8,[rip+0x2acb5]        # 0x14004c6d0
   140021a1b:	test   rdx,rdx
   140021a1e:	je     0x140021a6a
   140021a20:	lea    r9,[rip+0x1d219]        # 0x14003ec40
   140021a27:	nop    WORD PTR [rax+rax*1+0x0]
   140021a30:	mov    rcx,rsi
   140021a33:	nop    DWORD PTR [rax+0x0]
   140021a37:	nop    WORD PTR [rax+rax*1+0x0]
   140021a40:	movzx  eax,BYTE PTR [rdx+rcx*1]
   140021a44:	inc    rcx
   140021a47:	cmp    al,BYTE PTR [r9+rcx*1-0x1]
   140021a4c:	jne    0x140021a5d
   140021a4e:	cmp    rcx,0x6
   140021a52:	jne    0x140021a40
   140021a54:	mov    QWORD PTR [rip+0x32125],r8        # 0x140053b80
   140021a5b:	jmp    0x140021a84
   140021a5d:	mov    rdx,QWORD PTR [r8+0x48]
   140021a61:	add    r8,0x48
   140021a65:	test   rdx,rdx
   140021a68:	jne    0x140021a30
   140021a6a:	lea    rdx,[rip+0x1d31f]        # 0x14003ed90
   140021a71:	lea    rcx,[rip+0x1d390]        # 0x14003ee08
   140021a78:	mov    r8d,0xfd
   140021a7e:	call   QWORD PTR [rip+0x1b60c]        # 0x14003d090
   140021a84:	mov    rdi,QWORD PTR [rbx+0x60]
   140021a88:	cmp    WORD PTR [rdi+0x40],si
   140021a8c:	je     0x140021a9b
   140021a8e:	mov    rcx,QWORD PTR [rdi+0x38]
   140021a92:	mov    rcx,QWORD PTR [rcx]
   140021a95:	call   QWORD PTR [rip+0x1b805]        # 0x14003d2a0
   140021a9b:	mov    rcx,QWORD PTR [rdi+0x38]
   140021a9f:	call   QWORD PTR [rip+0x1b7fb]        # 0x14003d2a0
   140021aa5:	lea    rax,[rip+0x1b96c]        # 0x14003d418
   140021aac:	mov    WORD PTR [rdi+0x40],si
   140021ab0:	mov    QWORD PTR [rdi],rax
   140021ab3:	mov    QWORD PTR [rdi+0x20],rsi
   140021ab7:	mov    QWORD PTR [rdi+0x28],rsi
   140021abb:	mov    rax,QWORD PTR [rip+0x33986]        # 0x140055448
   140021ac2:	test   rax,rax
   140021ac5:	je     0x140021b16
   140021ac7:	mov    edx,DWORD PTR [rax+0x10]
   140021aca:	mov    rcx,rbx
   140021acd:	call   0x140027720
   140021ad2:	cmp    BYTE PTR [rax],sil
   140021ad5:	je     0x140021b16
   140021ad7:	mov    rax,QWORD PTR [rip+0x33972]        # 0x140055450
   140021ade:	test   rax,rax
   140021ae1:	je     0x140021b10
   140021ae3:	mov    edx,DWORD PTR [rax+0x10]
   140021ae6:	mov    rcx,rbx
   140021ae9:	call   0x140027720
   140021aee:	cmp    BYTE PTR [rax],sil
   140021af1:	je     0x140021b10
   140021af3:	movsd  xmm0,QWORD PTR [rbx+0x40]
   140021af8:	movsd  xmm1,QWORD PTR [rbx+0x48]
   140021afd:	comisd xmm1,xmm0
   140021b01:	ja     0x140021b06
   140021b03:	movaps xmm0,xmm1
   140021b06:	unpcklpd xmm0,xmm0
   140021b0a:	movups XMMWORD PTR [rbx+0x40],xmm0
   140021b0e:	jmp    0x140021b4e
   140021b10:	mov    rax,QWORD PTR [rbx+0x40]
   140021b14:	jmp    0x140021b4a
   140021b16:	mov    rax,QWORD PTR [rip+0x33933]        # 0x140055450
   140021b1d:	test   rax,rax
   140021b20:	je     0x140021b3c
   140021b22:	mov    edx,DWORD PTR [rax+0x10]
   140021b25:	mov    rcx,rbx
   140021b28:	call   0x140027720
   140021b2d:	cmp    BYTE PTR [rax],sil
   140021b30:	je     0x140021b3c
   140021b32:	mov    rax,QWORD PTR [rbx+0x48]
   140021b36:	mov    QWORD PTR [rbx+0x40],rax
   140021b3a:	jmp    0x140021b4e
   140021b3c:	movabs rax,0x3fa999999999999a
   140021b46:	mov    QWORD PTR [rbx+0x40],rax
   140021b4a:	mov    QWORD PTR [rbx+0x48],rax
   140021b4e:	mov    rcx,rbx
   140021b51:	mov    rbx,QWORD PTR [rsp+0x30]
   140021b56:	mov    rsi,QWORD PTR [rsp+0x38]
   140021b5b:	add    rsp,0x20
   140021b5f:	pop    rdi
   140021b60:	jmp    0x14001ff90
   140021b65:	int3   
   140021b66:	int3   
   140021b67:	int3   
   140021b68:	int3   
   140021b69:	int3   
   140021b6a:	int3   
   140021b6b:	int3   
   140021b6c:	int3   
   140021b6d:	int3   
   140021b6e:	int3   
   140021b6f:	int3   
   140021b70:	mov    QWORD PTR [rsp+0x10],rbx
   140021b75:	mov    QWORD PTR [rsp+0x18],rbp
   140021b7a:	mov    QWORD PTR [rsp+0x20],rsi
   140021b7f:	push   rdi
   140021b80:	sub    rsp,0x30
   140021b84:	mov    rax,QWORD PTR [rcx+0x60]
   140021b88:	mov    rdi,rcx
   140021b8b:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140021b90:	mov    rcx,QWORD PTR [rax]
   140021b93:	or     rax,0xffffffffffffffff
   140021b97:	mov    QWORD PTR [rip+0x3205a],rcx        # 0x140053bf8
   140021b9e:	xchg   ax,ax
   140021ba0:	inc    rax
   140021ba3:	cmp    BYTE PTR [rcx+rax*1],0x0
   140021ba7:	jne    0x140021ba0
   140021ba9:	inc    eax
   140021bab:	movsxd rcx,eax
   140021bae:	call   0x14001d2c0
   140021bb3:	mov    rcx,QWORD PTR [rdi+0x20]
   140021bb7:	xor    ebp,ebp
   140021bb9:	mov    edx,ebp
   140021bbb:	lea    r8d,[rbp+0x1]
   140021bbf:	mov    r9,rax
   140021bc2:	cmp    BYTE PTR [rcx+0x90],dl
   140021bc8:	mov    rcx,rdi
   140021bcb:	mov    rsi,rax
   140021bce:	sete   dl
   140021bd1:	call   0x140022d10
   140021bd6:	mov    rbx,rax
   140021bd9:	test   rax,rax
   140021bdc:	jne    0x140021c2f
   140021bde:	mov    rbx,QWORD PTR [rdi+0x60]
   140021be2:	call   QWORD PTR [rip+0x1b6e8]        # 0x14003d2d0
   140021be8:	mov    r8,QWORD PTR [rbx]
   140021beb:	lea    rcx,[rax+0x60]
   140021bef:	lea    rdx,[rip+0x1d2aa]        # 0x14003eea0
   140021bf6:	call   QWORD PTR [rip+0x1b6c4]        # 0x14003d2c0
   140021bfc:	lea    rax,[rip+0x1c9a5]        # 0x14003e5a8
   140021c03:	mov    r9,rsi
   140021c06:	mov    QWORD PTR [rip+0x31feb],rax        # 0x140053bf8
   140021c0d:	mov    rax,QWORD PTR [rdi+0x20]
   140021c11:	mov    r8d,0x1
   140021c17:	cmp    BYTE PTR [rax+0x90],bpl
   140021c1e:	mov    rcx,rdi
   140021c21:	sete   bpl
   140021c25:	mov    edx,ebp
   140021c27:	call   0x140022d10
   140021c2c:	mov    rbx,rax
   140021c2f:	mov    rcx,rsi
   140021c32:	call   QWORD PTR [rip+0x1b668]        # 0x14003d2a0
   140021c38:	mov    rdx,rbx
   140021c3b:	mov    rcx,rdi
   140021c3e:	call   0x1400238a0
   140021c43:	movsd  xmm0,QWORD PTR [rdi+0x40]
   140021c48:	movsd  xmm6,QWORD PTR [rip+0x1b838]        # 0x14003d488
   140021c50:	movsd  xmm1,QWORD PTR [rip+0x1b780]        # 0x14003d3d8
   140021c58:	xorps  xmm2,xmm2
   140021c5b:	mulsd  xmm0,xmm6
   140021c5f:	comisd xmm0,xmm2
   140021c63:	jb     0x140021c6b
   140021c65:	addsd  xmm0,xmm1
   140021c69:	jmp    0x140021c6f
   140021c6b:	subsd  xmm0,xmm1
   140021c6f:	cvttsd2si ebp,xmm0
   140021c73:	movsd  xmm0,QWORD PTR [rdi+0x48]
   140021c78:	mulsd  xmm0,xmm6
   140021c7c:	comisd xmm0,xmm2
   140021c80:	jb     0x140021c88
   140021c82:	addsd  xmm0,xmm1
   140021c86:	jmp    0x140021c8c
   140021c88:	subsd  xmm0,xmm1
   140021c8c:	cmp    DWORD PTR [rbx],ebp
   140021c8e:	cvttsd2si esi,xmm0
   140021c92:	mov    rcx,rbx
   140021c95:	cmovg  ebp,DWORD PTR [rbx]
   140021c98:	cmp    DWORD PTR [rbx+0x4],esi
   140021c9b:	mov    DWORD PTR [rsp+0x40],ebp
   140021c9f:	cmovg  esi,DWORD PTR [rbx+0x4]
   140021ca3:	mov    DWORD PTR [rsp+0x44],esi
   140021ca7:	mov    rdx,QWORD PTR [rsp+0x40]
   140021cac:	call   0x140023310
   140021cb1:	mov    eax,esi
   140021cb3:	cdq    
   140021cb4:	sub    eax,edx
   140021cb6:	sar    eax,1
   140021cb8:	mov    r8d,eax
   140021cbb:	mov    eax,ebp
   140021cbd:	cdq    
   140021cbe:	sub    eax,edx
   140021cc0:	mov    edx,r8d
   140021cc3:	sar    eax,1
   140021cc5:	neg    eax
   140021cc7:	mov    ecx,eax
   140021cc9:	call   0x14001c660
   140021cce:	mov    rcx,rbx
   140021cd1:	mov    rdx,rax
   140021cd4:	call   0x140023230
   140021cd9:	mov    rbp,QWORD PTR [rsp+0x50]
   140021cde:	mov    rsi,QWORD PTR [rsp+0x58]
   140021ce3:	movd   xmm0,DWORD PTR [rbx]
   140021ce7:	cvtdq2pd xmm0,xmm0
   140021ceb:	divsd  xmm0,xmm6
   140021cef:	movsd  QWORD PTR [rdi+0x40],xmm0
   140021cf4:	movd   xmm1,DWORD PTR [rbx+0x4]
   140021cf9:	mov    QWORD PTR [rdi+0x30],rbx
   140021cfd:	mov    rbx,QWORD PTR [rsp+0x48]
   140021d02:	cvtdq2pd xmm1,xmm1
   140021d06:	divsd  xmm1,xmm6
   140021d0a:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140021d0f:	movsd  QWORD PTR [rdi+0x48],xmm1
   140021d14:	add    rsp,0x30
   140021d18:	pop    rdi
   140021d19:	ret    
   140021d1a:	int3   
   140021d1b:	int3   
   140021d1c:	int3   
   140021d1d:	int3   
   140021d1e:	int3   
   140021d1f:	int3   
   140021d20:	mov    rcx,QWORD PTR [rcx+0x30]
   140021d24:	rex.W jmp QWORD PTR [rip+0x1b575]        # 0x14003d2a0
   140021d2b:	int3   
   140021d2c:	int3   
   140021d2d:	int3   
   140021d2e:	int3   
   140021d2f:	int3   
   140021d30:	mov    QWORD PTR [rsp+0x10],rbx
   140021d35:	mov    QWORD PTR [rsp+0x18],rsi
   140021d3a:	push   rdi
   140021d3b:	sub    rsp,0x40
   140021d3f:	cmp    BYTE PTR [r8],0x3a
   140021d43:	mov    rsi,r8
   140021d46:	mov    rdi,rdx
   140021d49:	mov    rbx,rcx
   140021d4c:	je     0x140021d78
   140021d4e:	movups xmm0,XMMWORD PTR [rip+0x2a493]        # 0x14004c1e8
   140021d55:	movsd  xmm1,QWORD PTR [rip+0x2a49b]        # 0x14004c1f8
   140021d5d:	mov    rax,rcx
   140021d60:	movups XMMWORD PTR [rcx],xmm0
   140021d63:	movsd  QWORD PTR [rcx+0x10],xmm1
   140021d68:	mov    rbx,QWORD PTR [rsp+0x58]
   140021d6d:	mov    rsi,QWORD PTR [rsp+0x60]
   140021d72:	add    rsp,0x40
   140021d76:	pop    rdi
   140021d77:	ret    
   140021d78:	mov    rcx,QWORD PTR [rdi+0x30]
   140021d7c:	lea    rdx,[r8+0x1]
   140021d80:	call   0x140022c60
   140021d85:	test   rax,rax
   140021d88:	jne    0x140021dbc
   140021d8a:	call   QWORD PTR [rip+0x1b540]        # 0x14003d2d0
   140021d90:	mov    r8,QWORD PTR [rdi+0x10]
   140021d94:	lea    rdx,[rip+0x1cfcd]        # 0x14003ed68
   140021d9b:	lea    rcx,[rax+0x60]
   140021d9f:	mov    r9,rsi
   140021da2:	call   QWORD PTR [rip+0x1b518]        # 0x14003d2c0
   140021da8:	movups xmm0,XMMWORD PTR [rip+0x2a439]        # 0x14004c1e8
   140021daf:	movsd  xmm1,QWORD PTR [rip+0x2a441]        # 0x14004c1f8
   140021db7:	jmp    0x140021e59
   140021dbc:	movups xmm1,XMMWORD PTR [rax+0x8]
   140021dc0:	movq   r10,xmm1
   140021dc5:	psrldq xmm1,0x8
   140021dca:	movq   r9,xmm1
   140021dcf:	mov    rax,r10
   140021dd2:	shr    rax,0x20
   140021dd6:	mov    rcx,r9
   140021dd9:	shr    rcx,0x20
   140021ddd:	add    eax,ecx
   140021ddf:	cdq    
   140021de0:	sub    eax,edx
   140021de2:	sar    eax,1
   140021de4:	mov    r8d,eax
   140021de7:	lea    eax,[r9+r10*1]
   140021deb:	cdq    
   140021dec:	sub    eax,edx
   140021dee:	mov    edx,r8d
   140021df1:	sar    eax,1
   140021df3:	mov    ecx,eax
   140021df5:	call   0x14001c660
   140021dfa:	mov    rcx,QWORD PTR [rdi+0x20]
   140021dfe:	cmp    BYTE PTR [rcx+0x90],0x0
   140021e05:	mov    QWORD PTR [rsp+0x20],rax
   140021e0a:	je     0x140021e2d
   140021e0c:	mov    QWORD PTR [rsp+0x50],rax
   140021e11:	mov    eax,DWORD PTR [rsp+0x24]
   140021e15:	mov    DWORD PTR [rsp+0x50],eax
   140021e19:	mov    eax,DWORD PTR [rsp+0x20]
   140021e1d:	neg    eax
   140021e1f:	mov    DWORD PTR [rsp+0x54],eax
   140021e23:	mov    rax,QWORD PTR [rsp+0x50]
   140021e28:	mov    QWORD PTR [rsp+0x20],rax
   140021e2d:	mov    eax,DWORD PTR [rsp+0x20]
   140021e31:	mov    r8d,DWORD PTR [rdi+0x58]
   140021e35:	movups xmm0,XMMWORD PTR [rsp+0x20]
   140021e3a:	add    eax,DWORD PTR [rdi+0x54]
   140021e3d:	add    r8d,DWORD PTR [rdi+0x54]
   140021e41:	mov    WORD PTR [rsp+0x30],0x100
   140021e48:	shl    eax,0x8
   140021e4b:	cdq    
   140021e4c:	idiv   r8d
   140021e4f:	mov    BYTE PTR [rsp+0x32],al
   140021e53:	movsd  xmm1,QWORD PTR [rsp+0x30]
   140021e59:	mov    rsi,QWORD PTR [rsp+0x60]
   140021e5e:	movups XMMWORD PTR [rbx],xmm0
   140021e61:	mov    rax,rbx
   140021e64:	movsd  QWORD PTR [rbx+0x10],xmm1
   140021e69:	mov    rbx,QWORD PTR [rsp+0x58]
   140021e6e:	add    rsp,0x40
   140021e72:	pop    rdi
   140021e73:	ret    
   140021e74:	int3   
   140021e75:	int3   
   140021e76:	int3   
   140021e77:	int3   
   140021e78:	int3   
   140021e79:	int3   
   140021e7a:	int3   
   140021e7b:	int3   
   140021e7c:	int3   
   140021e7d:	int3   
   140021e7e:	int3   
   140021e7f:	int3   
   140021e80:	mov    QWORD PTR [rsp+0x8],rbx
   140021e85:	push   rdi
   140021e86:	sub    rsp,0x20
   140021e8a:	mov    rax,QWORD PTR [rcx+0x20]
   140021e8e:	mov    rdi,rdx
   140021e91:	mov    rbx,rcx
   140021e94:	cmp    BYTE PTR [rax+0x90],0x0
   140021e9b:	je     0x140021eb5
   140021e9d:	movups xmm1,XMMWORD PTR [rdx]
   140021ea0:	movaps xmm0,xmm1
   140021ea3:	unpckhpd xmm0,xmm1
   140021ea7:	xorps  xmm0,XMMWORD PTR [rip+0x1b6c2]        # 0x14003d570
   140021eae:	unpcklpd xmm0,xmm1
   140021eb2:	movups XMMWORD PTR [rdx],xmm0
   140021eb5:	cmp    BYTE PTR [r8+0x78],0x0
   140021eba:	je     0x140021ece
   140021ebc:	nop    DWORD PTR [rax+0x0]
   140021ec0:	mov    r8,QWORD PTR [r8+0x80]
   140021ec7:	cmp    BYTE PTR [r8+0x78],0x0
   140021ecc:	jne    0x140021ec0
   140021ece:	cmp    r8,QWORD PTR [rip+0x31d2b]        # 0x140053c00
   140021ed5:	jne    0x140021ee9
   140021ed7:	cmp    rcx,QWORD PTR [rip+0x31d2a]        # 0x140053c08
   140021ede:	jne    0x140021ee9
   140021ee0:	mov    rax,QWORD PTR [rip+0x31d29]        # 0x140053c10
   140021ee7:	jmp    0x140021f29
   140021ee9:	cmp    rcx,QWORD PTR [r8+0x10]
   140021eed:	lea    rax,[rip+0x1b504]        # 0x14003d3f8
   140021ef4:	mov    QWORD PTR [rip+0x31d0d],rcx        # 0x140053c08
   140021efb:	lea    rdx,[rip+0x1b4e6]        # 0x14003d3e8
   140021f02:	mov    rcx,r8
   140021f05:	mov    QWORD PTR [rip+0x31cf4],r8        # 0x140053c00
   140021f0c:	cmove  rdx,rax
   140021f10:	call   0x1400275b0
   140021f15:	mov    rcx,QWORD PTR [rbx+0x30]
   140021f19:	lea    rdx,[rax+0x1]
   140021f1d:	call   0x140022c60
   140021f22:	mov    QWORD PTR [rip+0x31ce7],rax        # 0x140053c10
   140021f29:	test   rax,rax
   140021f2c:	jne    0x140021f69
   140021f2e:	mov    rax,QWORD PTR [rbx+0x30]
   140021f32:	movd   xmm2,DWORD PTR [rax]
   140021f36:	movd   xmm1,DWORD PTR [rax+0x4]
   140021f3b:	cvtdq2pd xmm2,xmm2
   140021f3f:	cvtdq2pd xmm1,xmm1
   140021f43:	mulsd  xmm2,QWORD PTR [rip+0x1b48d]        # 0x14003d3d8
   140021f4b:	mulsd  xmm1,QWORD PTR [rip+0x1b485]        # 0x14003d3d8
   140021f53:	movaps xmm4,xmm2
   140021f56:	movaps xmm3,xmm1
   140021f59:	xorps  xmm4,XMMWORD PTR [rip+0x1b610]        # 0x14003d570
   140021f60:	xorps  xmm3,XMMWORD PTR [rip+0x1b609]        # 0x14003d570
   140021f67:	jmp    0x140021f8d
   140021f69:	movd   xmm4,DWORD PTR [rax+0x8]
   140021f6e:	movd   xmm3,DWORD PTR [rax+0xc]
   140021f73:	movd   xmm2,DWORD PTR [rax+0x10]
   140021f78:	cvtdq2pd xmm4,xmm4
   140021f7c:	cvtdq2pd xmm3,xmm3
   140021f80:	cvtdq2pd xmm2,xmm2
   140021f84:	movd   xmm1,DWORD PTR [rax+0x14]
   140021f89:	cvtdq2pd xmm1,xmm1
   140021f8d:	movsd  xmm0,QWORD PTR [rdi]
   140021f91:	comisd xmm0,xmm4
   140021f95:	jb     0x140021fbe
   140021f97:	comisd xmm2,xmm0
   140021f9b:	jb     0x140021fbe
   140021f9d:	movsd  xmm0,QWORD PTR [rdi+0x8]
   140021fa2:	comisd xmm0,xmm3
   140021fa6:	jb     0x140021fbe
   140021fa8:	comisd xmm1,xmm0
   140021fac:	jb     0x140021fbe
   140021fae:	mov    eax,0x1
   140021fb3:	mov    rbx,QWORD PTR [rsp+0x30]
   140021fb8:	add    rsp,0x20
   140021fbc:	pop    rdi
   140021fbd:	ret    
   140021fbe:	xor    eax,eax
   140021fc0:	mov    rbx,QWORD PTR [rsp+0x30]
   140021fc5:	add    rsp,0x20
   140021fc9:	pop    rdi
   140021fca:	ret    
   140021fcb:	int3   
   140021fcc:	int3   
   140021fcd:	int3   
   140021fce:	int3   
   140021fcf:	int3   
   140021fd0:	mov    QWORD PTR [rsp+0x18],rbx
   140021fd5:	push   rbp
   140021fd6:	push   r14
   140021fd8:	push   r15
   140021fda:	sub    rsp,0x10
   140021fde:	mov    r14,r9
   140021fe1:	mov    ebp,r8d
   140021fe4:	mov    rbx,rcx
   140021fe7:	cmp    r8d,0x1
   140021feb:	jne    0x140021ff3
   140021fed:	mov    rax,QWORD PTR [rdx+0x30]
   140021ff1:	jmp    0x140021ff7
   140021ff3:	mov    rax,QWORD PTR [rdx+0x48]
   140021ff7:	mov    r11,QWORD PTR [rcx+0x30]
   140021ffb:	xor    r10d,r10d
   140021ffe:	movsxd rdx,DWORD PTR [r11+0x18]
   140022002:	lea    r15d,[r10+0x1]
   140022006:	test   edx,edx
   140022008:	jle    0x140022113
   14002200e:	mov    rcx,QWORD PTR [rcx+0x20]
   140022012:	mov    QWORD PTR [rsp+0x30],rsi
   140022017:	mov    QWORD PTR [rsp+0x38],rdi
   14002201c:	movzx  edi,BYTE PTR [rcx+0x90]
   140022023:	mov    ecx,r10d
   140022026:	mov    rsi,rdx
   140022029:	nop    DWORD PTR [rax+0x0]
   140022030:	mov    rdx,QWORD PTR [r11+0x28]
   140022034:	mov    r8,QWORD PTR [rdx+rcx*8]
   140022038:	test   dil,dil
   14002203b:	jne    0x140022047
   14002203d:	mov    edx,DWORD PTR [r8+0x8]
   140022041:	mov    r9d,DWORD PTR [r8+0x10]
   140022045:	jmp    0x14002204f
   140022047:	mov    edx,DWORD PTR [r8+0xc]
   14002204b:	mov    r9d,DWORD PTR [r8+0x14]
   14002204f:	cmp    edx,eax
   140022051:	jg     0x140022058
   140022053:	cmp    eax,r9d
   140022056:	jle    0x140022068
   140022058:	inc    rcx
   14002205b:	inc    r10d
   14002205e:	cmp    rcx,rsi
   140022061:	jl     0x140022030
   140022063:	jmp    0x140022109
   140022068:	test   dil,dil
   14002206b:	je     0x1400220cf
   14002206d:	mov    rax,QWORD PTR [r11+0x28]
   140022071:	movsxd rcx,r10d
   140022074:	mov    rdx,QWORD PTR [rax+rcx*8]
   140022078:	mov    rax,QWORD PTR [rbx+0x38]
   14002207c:	movups xmm1,XMMWORD PTR [rdx+0x8]
   140022080:	mov    rdx,rax
   140022083:	shr    rdx,0x20
   140022087:	movq   r8,xmm1
   14002208c:	movdqa xmm0,xmm1
   140022090:	psrldq xmm0,0x8
   140022095:	movq   r10,xmm0
   14002209a:	mov    rcx,r8
   14002209d:	shr    rcx,0x20
   1400220a1:	add    ecx,eax
   1400220a3:	mov    DWORD PTR [rsp],ecx
   1400220a6:	lea    ecx,[rdx+r8*1]
   1400220aa:	mov    r9,r10
   1400220ad:	mov    DWORD PTR [rsp+0x4],ecx
   1400220b1:	shr    r9,0x20
   1400220b5:	add    r9d,eax
   1400220b8:	lea    eax,[rdx+r10*1]
   1400220bc:	mov    DWORD PTR [rsp+0xc],eax
   1400220c0:	mov    DWORD PTR [rsp+0x8],r9d
   1400220c5:	movups xmm0,XMMWORD PTR [rsp]
   1400220c9:	movups XMMWORD PTR [r14],xmm0
   1400220cd:	jmp    0x1400220f2
   1400220cf:	mov    ecx,DWORD PTR [rbx+0x38]
   1400220d2:	add    ecx,edx
   1400220d4:	mov    DWORD PTR [r14],ecx
   1400220d7:	mov    eax,DWORD PTR [rbx+0x50]
   1400220da:	mov    ecx,DWORD PTR [rbx+0x3c]
   1400220dd:	cdq    
   1400220de:	sub    eax,edx
   1400220e0:	sar    eax,1
   1400220e2:	sub    ecx,eax
   1400220e4:	mov    DWORD PTR [r14+0x4],ecx
   1400220e8:	mov    ecx,DWORD PTR [rbx+0x38]
   1400220eb:	add    ecx,r9d
   1400220ee:	mov    DWORD PTR [r14+0x8],ecx
   1400220f2:	mov    eax,DWORD PTR [rbx+0x50]
   1400220f5:	cdq    
   1400220f6:	sub    eax,edx
   1400220f8:	sar    eax,1
   1400220fa:	add    eax,DWORD PTR [rbx+0x3c]
   1400220fd:	mov    DWORD PTR [r14+0xc],eax
   140022101:	mov    rax,QWORD PTR [rsp+0x50]
   140022106:	mov    DWORD PTR [rax],r15d
   140022109:	mov    rsi,QWORD PTR [rsp+0x30]
   14002210e:	mov    rdi,QWORD PTR [rsp+0x38]
   140022113:	mov    rbx,QWORD PTR [rsp+0x40]
   140022118:	mov    eax,0x4
   14002211d:	cmp    ebp,r15d
   140022120:	cmove  eax,r15d
   140022124:	add    rsp,0x10
   140022128:	pop    r15
   14002212a:	pop    r14
   14002212c:	pop    rbp
   14002212d:	ret    
   14002212e:	int3   
   14002212f:	int3   
   140022130:	mov    r11,rsp
   140022133:	mov    QWORD PTR [r11+0x8],rbx
   140022137:	mov    QWORD PTR [r11+0x10],rbp
   14002213b:	mov    QWORD PTR [r11+0x18],rsi
   14002213f:	mov    QWORD PTR [r11+0x20],rdi
   140022143:	push   r14
   140022145:	sub    rsp,0x40
   140022149:	mov    r14,QWORD PTR [rcx+0x30]
   14002214d:	mov    rsi,rcx
   140022150:	lea    rbx,[r11-0x28]
   140022154:	mov    rdx,QWORD PTR [r14+0x8]
   140022158:	lea    rdi,[r11-0x28]
   14002215c:	mov    ebp,0x4
   140022161:	mov    QWORD PTR [r11-0x28],rdx
   140022165:	mov    r8,QWORD PTR [r14+0x10]
   140022169:	shr    rdx,0x20
   14002216d:	mov    QWORD PTR [r11-0x18],r8
   140022171:	mov    eax,DWORD PTR [rsp+0x30]
   140022175:	shr    r8,0x20
   140022179:	mov    DWORD PTR [rsp+0x28],eax
   14002217d:	mov    eax,DWORD PTR [rsp+0x20]
   140022181:	mov    DWORD PTR [rsp+0x2c],edx
   140022185:	mov    DWORD PTR [rsp+0x38],eax
   140022189:	mov    DWORD PTR [r11-0xc],r8d
   14002218d:	nop    DWORD PTR [rax]
   140022190:	mov    rdx,QWORD PTR [rsi+0x38]
   140022194:	mov    rcx,QWORD PTR [rdi]
   140022197:	call   0x14001b3e0
   14002219c:	lea    rbx,[rbx+0x8]
   1400221a0:	lea    rdi,[rdi+0x8]
   1400221a4:	mov    QWORD PTR [rbx-0x8],rax
   1400221a8:	dec    rbp
   1400221ab:	jne    0x140022190
   1400221ad:	mov    rax,QWORD PTR [rip+0x33334]        # 0x1400554e8
   1400221b4:	mov    rcx,rsi
   1400221b7:	call   QWORD PTR [rax+0x68]
   1400221ba:	mov    rax,QWORD PTR [rip+0x33327]        # 0x1400554e8
   1400221c1:	call   QWORD PTR [rax+0x88]
   1400221c7:	mov    rcx,rsi
   1400221ca:	call   0x140023ae0
   1400221cf:	mov    rdx,QWORD PTR [rip+0x33262]        # 0x140055438
   1400221d6:	lea    r8,[rip+0x1b23b]        # 0x14003d418
   1400221dd:	mov    rcx,rsi
   1400221e0:	mov    ebx,eax
   1400221e2:	call   0x14001c3a0
   1400221e7:	cmp    BYTE PTR [rax],bpl
   1400221ea:	je     0x1400221fc
   1400221ec:	mov    rdx,QWORD PTR [rip+0x332f5]        # 0x1400554e8
   1400221f3:	mov    rcx,rax
   1400221f6:	call   QWORD PTR [rdx+0xa8]
   1400221fc:	test   bl,0x1
   1400221ff:	je     0x140022209
   140022201:	mov    rcx,rsi
   140022204:	call   0x140022680
   140022209:	mov    rax,QWORD PTR [rsi+0x28]
   14002220d:	xor    ecx,ecx
   14002220f:	lea    r9,[rip+0x1cb1a]        # 0x14003ed30
   140022216:	mov    rdx,QWORD PTR [rax]
   140022219:	nop    DWORD PTR [rax+0x0]
   140022220:	movzx  eax,BYTE PTR [rdx+rcx*1]
   140022224:	inc    rcx
   140022227:	cmp    al,BYTE PTR [r9+rcx*1-0x1]
   14002222c:	jne    0x140022237
   14002222e:	cmp    rcx,0x8
   140022232:	jne    0x140022220
   140022234:	or     ebx,0x2
   140022237:	test   bl,0x6
   14002223a:	je     0x140022255
   14002223c:	mov    r9d,0x2
   140022242:	lea    rdx,[rsp+0x20]
   140022247:	mov    rcx,rsi
   14002224a:	lea    r8d,[r9+0x2]
   14002224e:	call   0x140023410
   140022253:	jmp    0x140022272
   140022255:	mov    rax,QWORD PTR [rip+0x3328c]        # 0x1400554e8
   14002225c:	and    ebx,0x1
   14002225f:	lea    rcx,[rsp+0x20]
   140022264:	mov    r8d,ebx
   140022267:	mov    edx,0x4
   14002226c:	call   QWORD PTR [rax+0xc8]
   140022272:	mov    rdx,r14
   140022275:	mov    rcx,rsi
   140022278:	call   0x140022820
   14002227d:	mov    rax,QWORD PTR [rip+0x33264]        # 0x1400554e8
   140022284:	call   QWORD PTR [rax+0x90]
   14002228a:	mov    rax,QWORD PTR [rip+0x33257]        # 0x1400554e8
   140022291:	call   QWORD PTR [rax+0x70]
   140022294:	mov    rbx,QWORD PTR [rsp+0x50]
   140022299:	mov    rbp,QWORD PTR [rsp+0x58]
   14002229e:	mov    rsi,QWORD PTR [rsp+0x60]
   1400222a3:	mov    rdi,QWORD PTR [rsp+0x68]
   1400222a8:	add    rsp,0x40
   1400222ac:	pop    r14
   1400222ae:	ret    
   1400222af:	int3   
   1400222b0:	sub    rsp,0x28
   1400222b4:	mov    rax,QWORD PTR [rcx+0x20]
   1400222b8:	movsd  xmm3,QWORD PTR [rip+0x1b2b0]        # 0x14003d570
   1400222c0:	cmp    BYTE PTR [rax+0x90],0x0
   1400222c7:	je     0x140022319
   1400222c9:	movups xmm1,XMMWORD PTR [rdx]
   1400222cc:	lea    rdx,[rsp+0x10]
   1400222d1:	movaps XMMWORD PTR [rsp],xmm1
   1400222d5:	movaps xmm0,xmm1
   1400222d8:	movsd  QWORD PTR [rsp+0x8],xmm1
   1400222de:	unpckhpd xmm0,xmm1
   1400222e2:	xorps  xmm0,xmm3
   1400222e5:	movsd  QWORD PTR [rsp],xmm0
   1400222ea:	movss  xmm0,DWORD PTR [rsp]
   1400222ef:	movss  xmm1,DWORD PTR [rsp+0x4]
   1400222f5:	movss  DWORD PTR [rsp+0x10],xmm0
   1400222fb:	movss  xmm0,DWORD PTR [rsp+0x8]
   140022301:	movss  DWORD PTR [rsp+0x14],xmm1
   140022307:	movss  xmm1,DWORD PTR [rsp+0xc]
   14002230d:	movss  DWORD PTR [rsp+0x18],xmm0
   140022313:	movss  DWORD PTR [rsp+0x1c],xmm1
   140022319:	movups xmm0,XMMWORD PTR [rdx]
   14002231c:	mov    eax,DWORD PTR [rcx+0x50]
   14002231f:	cdq    
   140022320:	sub    eax,edx
   140022322:	sar    eax,1
   140022324:	movups xmm1,xmm0
   140022327:	movups XMMWORD PTR [rsp+0x10],xmm0
   14002232c:	movd   xmm2,eax
   140022330:	unpckhpd xmm1,xmm1
   140022334:	cvtdq2pd xmm2,xmm2
   140022338:	movaps xmm0,xmm2
   14002233b:	xorps  xmm0,xmm3
   14002233e:	comisd xmm1,xmm0
   140022342:	jb     0x14002237c
   140022344:	comisd xmm2,xmm1
   140022348:	jb     0x14002237c
   14002234a:	mov    eax,DWORD PTR [rcx+0x54]
   14002234d:	movsd  xmm1,QWORD PTR [rsp+0x10]
   140022353:	neg    eax
   140022355:	movd   xmm0,eax
   140022359:	cvtdq2pd xmm0,xmm0
   14002235d:	comisd xmm1,xmm0
   140022361:	jb     0x14002237c
   140022363:	movd   xmm0,DWORD PTR [rcx+0x58]
   140022368:	cvtdq2pd xmm0,xmm0
   14002236c:	comisd xmm0,xmm1
   140022370:	jb     0x14002237c
   140022372:	mov    eax,0x1
   140022377:	add    rsp,0x28
   14002237b:	ret    
   14002237c:	xor    eax,eax
   14002237e:	add    rsp,0x28
   140022382:	ret    
   140022383:	int3   
   140022384:	int3   
   140022385:	int3   
   140022386:	int3   
   140022387:	int3   
   140022388:	int3   
   140022389:	int3   
   14002238a:	int3   
   14002238b:	int3   
   14002238c:	int3   
   14002238d:	int3   
   14002238e:	int3   
   14002238f:	int3   
   140022390:	mov    QWORD PTR [rsp+0x10],rbx
   140022395:	push   rdi
   140022396:	sub    rsp,0x30
   14002239a:	movd   xmm0,DWORD PTR [rcx+0x50]
   14002239f:	mov    rdx,QWORD PTR [rcx+0x38]
   1400223a3:	cvtdq2pd xmm0,xmm0
   1400223a7:	mulsd  xmm0,QWORD PTR [rip+0x1c611]        # 0x14003e9c0
   1400223af:	mulsd  xmm0,QWORD PTR [rip+0x1b021]        # 0x14003d3d8
   1400223b7:	cvttsd2si edi,xmm0
   1400223bb:	movd   xmm0,DWORD PTR [rcx+0x58]
   1400223c0:	cvtdq2pd xmm0,xmm0
   1400223c4:	mov    DWORD PTR [rsp+0x44],edi
   1400223c8:	mulsd  xmm0,QWORD PTR [rip+0x1cb20]        # 0x14003eef0
   1400223d0:	cvttsd2si ebx,xmm0
   1400223d4:	mov    DWORD PTR [rsp+0x40],ebx
   1400223d8:	mov    rcx,QWORD PTR [rsp+0x40]
   1400223dd:	call   0x14001b3e0
   1400223e2:	mov    edx,0x2
   1400223e7:	mov    QWORD PTR [rsp+0x20],rax
   1400223ec:	mov    ecx,DWORD PTR [rsp+0x20]
   1400223f0:	shr    rax,0x20
   1400223f4:	mov    DWORD PTR [rsp+0x2c],eax
   1400223f8:	lea    eax,[rbx+rbx*1]
   1400223fb:	sub    ecx,eax
   1400223fd:	mov    rax,QWORD PTR [rip+0x330e4]        # 0x1400554e8
   140022404:	mov    DWORD PTR [rsp+0x28],ecx
   140022408:	lea    rcx,[rsp+0x20]
   14002240d:	call   QWORD PTR [rax+0xd8]
   140022413:	mov    eax,DWORD PTR [rsp+0x24]
   140022417:	neg    edi
   140022419:	lea    ecx,[rax+rdi*2]
   14002241c:	mov    rax,QWORD PTR [rip+0x330c5]        # 0x1400554e8
   140022423:	mov    edx,0x2
   140022428:	mov    DWORD PTR [rsp+0x24],ecx
   14002242c:	mov    DWORD PTR [rsp+0x2c],ecx
   140022430:	lea    rcx,[rsp+0x20]
   140022435:	call   QWORD PTR [rax+0xd8]
   14002243b:	mov    rbx,QWORD PTR [rsp+0x48]
   140022440:	add    rsp,0x30
   140022444:	pop    rdi
   140022445:	ret    
   140022446:	int3   
   140022447:	int3   
   140022448:	int3   
   140022449:	int3   
   14002244a:	int3   
   14002244b:	int3   
   14002244c:	int3   
   14002244d:	int3   
   14002244e:	int3   
   14002244f:	int3   
   140022450:	rex push rbx
   140022452:	sub    rsp,0x20
   140022456:	lea    rdx,[rip+0x1ca23]        # 0x14003ee80
   14002245d:	mov    rbx,rcx
   140022460:	call   0x1400275b0
   140022465:	test   rax,rax
   140022468:	je     0x14002247b
   14002246a:	mov    r8d,0x1
   140022470:	mov    rdx,rax
   140022473:	mov    rcx,rbx
   140022476:	call   0x140022980
   14002247b:	lea    rdx,[rip+0x1ca0e]        # 0x14003ee90
   140022482:	mov    rcx,rbx
   140022485:	call   0x1400275b0
   14002248a:	test   rax,rax
   14002248d:	je     0x1400224a3
   14002248f:	or     r8d,0xffffffff
   140022493:	mov    rdx,rax
   140022496:	mov    rcx,rbx
   140022499:	add    rsp,0x20
   14002249d:	pop    rbx
   14002249e:	jmp    0x140022980
   1400224a3:	add    rsp,0x20
   1400224a7:	pop    rbx
   1400224a8:	ret    
   1400224a9:	int3   
   1400224aa:	int3   
   1400224ab:	int3   
   1400224ac:	int3   
   1400224ad:	int3   
   1400224ae:	int3   
   1400224af:	int3   
   1400224b0:	rex push rdi
   1400224b2:	sub    rsp,0x20
   1400224b6:	mov    rdx,QWORD PTR [rip+0x2a213]        # 0x14004c6d0
   1400224bd:	mov    rdi,rcx
   1400224c0:	lea    r9,[rip+0x2a209]        # 0x14004c6d0
   1400224c7:	test   rdx,rdx
   1400224ca:	je     0x140022504
   1400224cc:	nop    DWORD PTR [rax+0x0]
   1400224d0:	mov    r8,rdi
   1400224d3:	sub    r8,rdx
   1400224d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400224e0:	movzx  ecx,BYTE PTR [rdx]
   1400224e3:	movzx  eax,BYTE PTR [rdx+r8*1]
   1400224e8:	sub    ecx,eax
   1400224ea:	jne    0x1400224f3
   1400224ec:	inc    rdx
   1400224ef:	test   eax,eax
   1400224f1:	jne    0x1400224e0
   1400224f3:	test   ecx,ecx
   1400224f5:	je     0x140022565
   1400224f7:	mov    rdx,QWORD PTR [r9+0x48]
   1400224fb:	add    r9,0x48
   1400224ff:	test   rdx,rdx
   140022502:	jne    0x1400224d0
   140022504:	movsxd r11,DWORD PTR [rip+0x31715]        # 0x140053c20
   14002250b:	mov    QWORD PTR [rsp+0x30],rbx
   140022510:	mov    rbx,QWORD PTR [rip+0x31701]        # 0x140053c18
   140022517:	test   rbx,rbx
   14002251a:	je     0x14002257e
   14002251c:	xor    r9d,r9d
   14002251f:	test   r11d,r11d
   140022522:	jle    0x14002257e
   140022524:	mov    r10,rbx
   140022527:	nop    WORD PTR [rax+rax*1+0x0]
   140022530:	mov    rax,QWORD PTR [r10]
   140022533:	mov    r8,rdi
   140022536:	mov    rcx,QWORD PTR [rax]
   140022539:	sub    r8,rcx
   14002253c:	nop    DWORD PTR [rax+0x0]
   140022540:	movzx  edx,BYTE PTR [rcx]
   140022543:	movzx  eax,BYTE PTR [rcx+r8*1]
   140022548:	sub    edx,eax
   14002254a:	jne    0x140022553
   14002254c:	inc    rcx
   14002254f:	test   eax,eax
   140022551:	jne    0x140022540
   140022553:	test   edx,edx
   140022555:	je     0x14002256e
   140022557:	inc    r9d
   14002255a:	add    r10,0x8
   14002255e:	cmp    r9d,r11d
   140022561:	jl     0x140022530
   140022563:	jmp    0x14002257e
   140022565:	mov    rax,r9
   140022568:	add    rsp,0x20
   14002256c:	pop    rdi
   14002256d:	ret    
   14002256e:	movsxd rax,r9d
   140022571:	mov    rax,QWORD PTR [rbx+rax*8]
   140022575:	test   rax,rax
   140022578:	jne    0x140022656
   14002257e:	mov    QWORD PTR [rsp+0x38],rsi
   140022583:	mov    rsi,r11
   140022586:	inc    r11d
   140022589:	mov    DWORD PTR [rip+0x31690],r11d        # 0x140053c20
   140022590:	test   rbx,rbx
   140022593:	je     0x1400225a7
   140022595:	movsxd rdx,r11d
   140022598:	mov    rcx,rbx
   14002259b:	shl    rdx,0x3
   14002259f:	call   QWORD PTR [rip+0x1ab03]        # 0x14003d0a8
   1400225a5:	jmp    0x1400225b4
   1400225a7:	movsxd rcx,r11d
   1400225aa:	shl    rcx,0x3
   1400225ae:	call   QWORD PTR [rip+0x1abb4]        # 0x14003d168
   1400225b4:	mov    ecx,0x48
   1400225b9:	mov    QWORD PTR [rip+0x31658],rax        # 0x140053c18
   1400225c0:	call   0x14001d2c0
   1400225c5:	mov    rbx,rax
   1400225c8:	mov    rax,QWORD PTR [rip+0x31649]        # 0x140053c18
   1400225cf:	mov    QWORD PTR [rax+rsi*8],rbx
   1400225d3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400225d8:	movaps xmm0,XMMWORD PTR [rip+0x2a0f1]        # 0x14004c6d0
   1400225df:	movups XMMWORD PTR [rbx],xmm0
   1400225e2:	movaps xmm1,XMMWORD PTR [rip+0x2a0f7]        # 0x14004c6e0
   1400225e9:	movups XMMWORD PTR [rbx+0x10],xmm1
   1400225ed:	movaps xmm0,XMMWORD PTR [rip+0x2a0fc]        # 0x14004c6f0
   1400225f4:	movups XMMWORD PTR [rbx+0x20],xmm0
   1400225f8:	movaps xmm1,XMMWORD PTR [rip+0x2a101]        # 0x14004c700
   1400225ff:	movups XMMWORD PTR [rbx+0x30],xmm1
   140022603:	movsd  xmm0,QWORD PTR [rip+0x2a105]        # 0x14004c710
   14002260b:	movsd  QWORD PTR [rbx+0x40],xmm0
   140022610:	mov    QWORD PTR [rbx],rdi
   140022613:	mov    BYTE PTR [rbx+0x40],0x1
   140022617:	cmp    QWORD PTR [rip+0x32eb1],0x0        # 0x1400554d0
   14002261f:	jne    0x140022653
   140022621:	mov    rcx,QWORD PTR [rip+0x32ec0]        # 0x1400554e8
   140022628:	cmp    QWORD PTR [rcx+0x100],0x0
   140022630:	jne    0x140022653
   140022632:	call   QWORD PTR [rip+0x1ac98]        # 0x14003d2d0
   140022638:	mov    r8,QWORD PTR [rip+0x2a091]        # 0x14004c6d0
   14002263f:	lea    rdx,[rip+0x1c872]        # 0x14003eeb8
   140022646:	lea    rcx,[rax+0x60]
   14002264a:	mov    r9,rdi
   14002264d:	call   QWORD PTR [rip+0x1ac6d]        # 0x14003d2c0
   140022653:	mov    rax,rbx
   140022656:	mov    rbx,QWORD PTR [rsp+0x30]
   14002265b:	add    rsp,0x20
   14002265f:	pop    rdi
   140022660:	ret    
   140022661:	int3   
   140022662:	int3   
   140022663:	int3   
   140022664:	int3   
   140022665:	int3   
   140022666:	int3   
   140022667:	int3   
   140022668:	int3   
   140022669:	int3   
   14002266a:	int3   
   14002266b:	int3   
   14002266c:	int3   
   14002266d:	int3   
   14002266e:	int3   
   14002266f:	int3   
   140022670:	ret    0x0
   140022673:	int3   
   140022674:	int3   
   140022675:	int3   
   140022676:	int3   
   140022677:	int3   
   140022678:	int3   
   140022679:	int3   
   14002267a:	int3   
   14002267b:	int3   
   14002267c:	int3   
   14002267d:	int3   
   14002267e:	int3   
   14002267f:	int3   
   140022680:	rex push rbx
   140022682:	sub    rsp,0x20
   140022686:	mov    rdx,QWORD PTR [rip+0x32da3]        # 0x140055430
   14002268d:	lea    r8,[rip+0x1ad84]        # 0x14003d418
   140022694:	mov    rbx,rcx
   140022697:	call   0x14001c3a0
   14002269c:	mov    rcx,rax
   14002269f:	cmp    BYTE PTR [rax],0x0
   1400226a2:	jne    0x140022702
   1400226a4:	mov    rdx,QWORD PTR [rip+0x32d8d]        # 0x140055438
   1400226ab:	lea    r8,[rip+0x1ad66]        # 0x14003d418
   1400226b2:	mov    rcx,rbx
   1400226b5:	call   0x14001c3a0
   1400226ba:	mov    rcx,rax
   1400226bd:	cmp    BYTE PTR [rax],0x0
   1400226c0:	jne    0x140022702
   1400226c2:	mov    rax,QWORD PTR [rip+0x314b7]        # 0x140053b80
   1400226c9:	cmp    QWORD PTR [rbx+0x28],rax
   1400226cd:	jne    0x1400226e9
   1400226cf:	mov    rax,QWORD PTR [rip+0x32e12]        # 0x1400554e8
   1400226d6:	lea    rcx,[rip+0x1be17]        # 0x14003e4f4
   1400226dd:	add    rsp,0x20
   1400226e1:	pop    rbx
   1400226e2:	rex.W jmp QWORD PTR [rax+0xb0]
   1400226e9:	cmp    DWORD PTR [rip+0x32e08],0x4        # 0x1400554f8
   1400226f0:	lea    rax,[rip+0x1bdfd]        # 0x14003e4f4
   1400226f7:	lea    rcx,[rip+0x1bdea]        # 0x14003e4e8
   1400226fe:	cmove  rcx,rax
   140022702:	mov    rax,QWORD PTR [rip+0x32ddf]        # 0x1400554e8
   140022709:	add    rsp,0x20
   14002270d:	pop    rbx
   14002270e:	rex.W jmp QWORD PTR [rax+0xb0]
   140022715:	int3   
   140022716:	int3   
   140022717:	int3   
   140022718:	int3   
   140022719:	int3   
   14002271a:	int3   
   14002271b:	int3   
   14002271c:	int3   
   14002271d:	int3   
   14002271e:	int3   
   14002271f:	int3   
   140022720:	mov    QWORD PTR [rsp+0x8],rbx
   140022725:	mov    QWORD PTR [rsp+0x10],rdi
   14002272a:	mov    rbx,QWORD PTR [rip+0x314e7]        # 0x140053c18
   140022731:	mov    rdi,rcx
   140022734:	test   rbx,rbx
   140022737:	je     0x140022783
   140022739:	mov    r11d,DWORD PTR [rip+0x314e0]        # 0x140053c20
   140022740:	xor    r9d,r9d
   140022743:	test   r11d,r11d
   140022746:	jle    0x140022783
   140022748:	mov    r10,rbx
   14002274b:	nop    DWORD PTR [rax+rax*1+0x0]
   140022750:	mov    rax,QWORD PTR [r10]
   140022753:	mov    r8,rdi
   140022756:	mov    rax,QWORD PTR [rax]
   140022759:	sub    r8,rax
   14002275c:	nop    DWORD PTR [rax+0x0]
   140022760:	movzx  edx,BYTE PTR [rax]
   140022763:	movzx  ecx,BYTE PTR [rax+r8*1]
   140022768:	sub    edx,ecx
   14002276a:	jne    0x140022773
   14002276c:	inc    rax
   14002276f:	test   ecx,ecx
   140022771:	jne    0x140022760
   140022773:	test   edx,edx
   140022775:	je     0x140022790
   140022777:	inc    r9d
   14002277a:	add    r10,0x8
   14002277e:	cmp    r9d,r11d
   140022781:	jl     0x140022750
   140022783:	xor    eax,eax
   140022785:	mov    rbx,QWORD PTR [rsp+0x8]
   14002278a:	mov    rdi,QWORD PTR [rsp+0x10]
   14002278f:	ret    
   140022790:	mov    rdi,QWORD PTR [rsp+0x10]
   140022795:	movsxd rax,r9d
   140022798:	mov    rax,QWORD PTR [rbx+rax*8]
   14002279c:	mov    rbx,QWORD PTR [rsp+0x8]
   1400227a1:	ret    
   1400227a2:	int3   
   1400227a3:	int3   
   1400227a4:	int3   
   1400227a5:	int3   
   1400227a6:	int3   
   1400227a7:	int3   
   1400227a8:	int3   
   1400227a9:	int3   
   1400227aa:	int3   
   1400227ab:	int3   
   1400227ac:	int3   
   1400227ad:	int3   
   1400227ae:	int3   
   1400227af:	int3   
   1400227b0:	movsd  xmm0,QWORD PTR [rdx+0x8]
   1400227b5:	movsd  xmm1,QWORD PTR [rdx]
   1400227b9:	mov    rax,rcx
   1400227bc:	xorps  xmm0,XMMWORD PTR [rip+0x1adad]        # 0x14003d570
   1400227c3:	movsd  QWORD PTR [rdx+0x8],xmm1
   1400227c8:	movsd  QWORD PTR [rdx],xmm0
   1400227cc:	movups xmm0,XMMWORD PTR [rdx]
   1400227cf:	movups XMMWORD PTR [rcx],xmm0
   1400227d2:	ret    
   1400227d3:	int3   
   1400227d4:	int3   
   1400227d5:	int3   
   1400227d6:	int3   
   1400227d7:	int3   
   1400227d8:	int3   
   1400227d9:	int3   
   1400227da:	int3   
   1400227db:	int3   
   1400227dc:	int3   
   1400227dd:	int3   
   1400227de:	int3   
   1400227df:	int3   
   1400227e0:	mov    r9d,DWORD PTR [rdx+0x4]
   1400227e4:	mov    r11,rcx
   1400227e7:	mov    r10,r8
   1400227ea:	add    r9d,r8d
   1400227ed:	shr    r10,0x20
   1400227f1:	mov    rax,r11
   1400227f4:	mov    DWORD PTR [rcx],r9d
   1400227f7:	mov    r9d,DWORD PTR [rdx]
   1400227fa:	add    r9d,r10d
   1400227fd:	mov    DWORD PTR [rcx+0x4],r9d
   140022801:	mov    r9d,DWORD PTR [rdx+0xc]
   140022805:	add    r9d,r8d
   140022808:	mov    DWORD PTR [rcx+0x8],r9d
   14002280c:	mov    ecx,DWORD PTR [rdx+0x8]
   14002280f:	add    ecx,r10d
   140022812:	mov    DWORD PTR [r11+0xc],ecx
   140022816:	ret    
   140022817:	int3   
   140022818:	int3   
   140022819:	int3   
   14002281a:	int3   
   14002281b:	int3   
   14002281c:	int3   
   14002281d:	int3   
   14002281e:	int3   
   14002281f:	int3   
   140022820:	mov    QWORD PTR [rsp+0x10],rbp
   140022825:	mov    QWORD PTR [rsp+0x18],rsi
   14002282a:	push   rdi
   14002282b:	sub    rsp,0x30
   14002282f:	cmp    QWORD PTR [rdx+0x20],0x0
   140022834:	mov    rdi,rdx
   140022837:	mov    rbp,rcx
   14002283a:	je     0x1400228a4
   14002283c:	mov    eax,DWORD PTR [rdx+0x10]
   14002283f:	movd   xmm0,DWORD PTR [rcx+0x38]
   140022844:	add    eax,DWORD PTR [rdx+0x8]
   140022847:	cvtdq2pd xmm0,xmm0
   14002284b:	movd   xmm3,eax
   14002284f:	mov    eax,DWORD PTR [rdx+0x14]
   140022852:	add    eax,DWORD PTR [rdx+0xc]
   140022855:	movd   xmm1,eax
   140022859:	cvtdq2pd xmm3,xmm3
   14002285d:	mulsd  xmm3,QWORD PTR [rip+0x1ab73]        # 0x14003d3d8
   140022865:	cvtdq2pd xmm1,xmm1
   140022869:	addsd  xmm3,xmm0
   14002286d:	movd   xmm0,DWORD PTR [rcx+0x3c]
   140022872:	mulsd  xmm1,QWORD PTR [rip+0x1ab5e]        # 0x14003d3d8
   14002287a:	cvtdq2pd xmm0,xmm0
   14002287e:	cvttsd2si ecx,xmm3
   140022882:	addsd  xmm1,xmm0
   140022886:	cvttsd2si edx,xmm1
   14002288a:	call   0x14001c660
   14002288f:	mov    rcx,QWORD PTR [rdi+0x20]
   140022893:	mov    QWORD PTR [rcx+0x30],rax
   140022897:	mov    rdx,QWORD PTR [rbp+0x20]
   14002289b:	mov    rcx,QWORD PTR [rdi+0x20]
   14002289f:	call   0x14001e6c0
   1400228a4:	xor    esi,esi
   1400228a6:	cmp    DWORD PTR [rdi+0x18],esi
   1400228a9:	jle    0x140022969
   1400228af:	mov    QWORD PTR [rsp+0x40],rbx
   1400228b4:	mov    ebx,esi
   1400228b6:	test   rbx,rbx
   1400228b9:	jle    0x140022946
   1400228bf:	cmp    DWORD PTR [rdi+0x30],0x0
   1400228c3:	mov    rcx,QWORD PTR [rdi+0x28]
   1400228c7:	mov    rax,QWORD PTR [rcx+rbx*8]
   1400228cb:	je     0x1400228ea
   1400228cd:	mov    r8,QWORD PTR [rax+0x8]
   1400228d1:	mov    eax,r8d
   1400228d4:	mov    QWORD PTR [rsp+0x20],r8
   1400228d9:	mov    DWORD PTR [rsp+0x28],eax
   1400228dd:	mov    rax,QWORD PTR [rcx+rbx*8]
   1400228e1:	mov    ecx,DWORD PTR [rax+0x14]
   1400228e4:	mov    DWORD PTR [rsp+0x2c],ecx
   1400228e8:	jmp    0x14002290b
   1400228ea:	mov    rdx,QWORD PTR [rax+0x10]
   1400228ee:	mov    QWORD PTR [rsp+0x28],rdx
   1400228f3:	mov    rax,QWORD PTR [rcx+rbx*8]
   1400228f7:	shr    rdx,0x20
   1400228fb:	mov    ecx,DWORD PTR [rax+0x8]
   1400228fe:	mov    DWORD PTR [rsp+0x24],edx
   140022902:	mov    DWORD PTR [rsp+0x20],ecx
   140022906:	mov    r8,QWORD PTR [rsp+0x20]
   14002290b:	mov    rdx,QWORD PTR [rbp+0x38]
   14002290f:	mov    rcx,r8
   140022912:	call   0x14001b3e0
   140022917:	mov    rdx,QWORD PTR [rbp+0x38]
   14002291b:	mov    rcx,QWORD PTR [rsp+0x28]
   140022920:	mov    QWORD PTR [rsp+0x20],rax
   140022925:	call   0x14001b3e0
   14002292a:	lea    rcx,[rsp+0x20]
   14002292f:	mov    QWORD PTR [rsp+0x28],rax
   140022934:	mov    rax,QWORD PTR [rip+0x32bad]        # 0x1400554e8
   14002293b:	mov    edx,0x2
   140022940:	call   QWORD PTR [rax+0xd8]
   140022946:	mov    rdx,QWORD PTR [rdi+0x28]
   14002294a:	mov    rcx,rbp
   14002294d:	mov    rdx,QWORD PTR [rdx+rbx*8]
   140022951:	call   0x140022820
   140022956:	inc    esi
   140022958:	inc    rbx
   14002295b:	cmp    esi,DWORD PTR [rdi+0x18]
   14002295e:	jl     0x1400228b6
   140022964:	mov    rbx,QWORD PTR [rsp+0x40]
   140022969:	mov    rbp,QWORD PTR [rsp+0x48]
   14002296e:	mov    rsi,QWORD PTR [rsp+0x50]
   140022973:	add    rsp,0x30
   140022977:	pop    rdi
   140022978:	ret    
   140022979:	int3   
   14002297a:	int3   
   14002297b:	int3   
   14002297c:	int3   
   14002297d:	int3   
   14002297e:	int3   
   14002297f:	int3   
   140022980:	mov    QWORD PTR [rsp+0x10],rbx
   140022985:	mov    QWORD PTR [rsp+0x18],rsi
   14002298a:	push   rdi
   14002298b:	sub    rsp,0x40
   14002298f:	mov    rax,QWORD PTR [rcx+0x60]
   140022993:	movd   xmm1,DWORD PTR [rcx+0x38]
   140022998:	movaps XMMWORD PTR [rsp+0x30],xmm6
   14002299d:	or     rbx,0xffffffffffffffff
   1400229a1:	mov    rdi,rdx
   1400229a4:	mov    rsi,rcx
   1400229a7:	cvtdq2pd xmm1,xmm1
   1400229ab:	movsd  xmm3,QWORD PTR [rax+0x18]
   1400229b0:	mov    rax,rbx
   1400229b3:	movaps xmm6,xmm3
   1400229b6:	mulsd  xmm6,QWORD PTR [rip+0x1c53a]        # 0x14003eef8
   1400229be:	xchg   ax,ax
   1400229c0:	inc    rax
   1400229c3:	cmp    BYTE PTR [rdx+rax*1],0x0
   1400229c7:	jne    0x1400229c0
   1400229c9:	xorps  xmm0,xmm0
   1400229cc:	cvtsi2sd xmm0,rax
   1400229d1:	test   rax,rax
   1400229d4:	jns    0x1400229de
   1400229d6:	addsd  xmm0,QWORD PTR [rip+0x1c532]        # 0x14003ef10
   1400229de:	mulsd  xmm0,xmm3
   1400229e2:	mulsd  xmm0,QWORD PTR [rip+0x1a9ee]        # 0x14003d3d8
   1400229ea:	subsd  xmm1,xmm0
   1400229ee:	movd   xmm0,r8d
   1400229f3:	cvttsd2si eax,xmm1
   1400229f7:	movd   xmm1,DWORD PTR [rcx+0x50]
   1400229fc:	cvtdq2pd xmm1,xmm1
   140022a00:	cvtdq2pd xmm0,xmm0
   140022a04:	mov    DWORD PTR [rsp+0x50],eax
   140022a08:	subsd  xmm1,xmm3
   140022a0c:	subsd  xmm1,QWORD PTR [rip+0x1accc]        # 0x14003d6e0
   140022a14:	mulsd  xmm1,xmm0
   140022a18:	movd   xmm0,DWORD PTR [rcx+0x3c]
   140022a1d:	mulsd  xmm1,QWORD PTR [rip+0x1a9b3]        # 0x14003d3d8
   140022a25:	cvtdq2pd xmm0,xmm0
   140022a29:	addsd  xmm1,xmm0
   140022a2d:	cvttsd2si eax,xmm1
   140022a31:	mov    DWORD PTR [rsp+0x54],eax
   140022a35:	mov    rax,QWORD PTR [rip+0x32aac]        # 0x1400554e8
   140022a3c:	call   QWORD PTR [rax+0x88]
   140022a42:	mov    rcx,QWORD PTR [rsi+0x60]
   140022a46:	mov    rax,QWORD PTR [rip+0x32a9b]        # 0x1400554e8
   140022a4d:	movaps xmm1,xmm6
   140022a50:	mov    rcx,QWORD PTR [rcx+0x8]
   140022a54:	call   QWORD PTR [rax+0x98]
   140022a5a:	mov    QWORD PTR [rsp+0x20],rdi
   140022a5f:	nop
   140022a60:	inc    rbx
   140022a63:	cmp    BYTE PTR [rdi+rbx*1],0x0
   140022a67:	jne    0x140022a60
   140022a69:	xorps  xmm0,xmm0
   140022a6c:	cvtsi2sd xmm0,rbx
   140022a71:	test   rbx,rbx
   140022a74:	jns    0x140022a7e
   140022a76:	addsd  xmm0,QWORD PTR [rip+0x1c492]        # 0x14003ef10
   140022a7e:	mov    rcx,QWORD PTR [rsp+0x50]
   140022a83:	mulsd  xmm0,xmm6
   140022a87:	lea    rdx,[rsp+0x20]
   140022a8c:	mov    BYTE PTR [rsp+0x2a],0x0
   140022a91:	cvttsd2si eax,xmm0
   140022a95:	mov    WORD PTR [rsp+0x28],ax
   140022a9a:	mov    rax,QWORD PTR [rip+0x32a47]        # 0x1400554e8
   140022aa1:	call   QWORD PTR [rax+0xa0]
   140022aa7:	mov    rax,QWORD PTR [rip+0x32a3a]        # 0x1400554e8
   140022aae:	call   QWORD PTR [rax+0x90]
   140022ab4:	mov    rbx,QWORD PTR [rsp+0x58]
   140022ab9:	mov    rsi,QWORD PTR [rsp+0x60]
   140022abe:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140022ac3:	add    rsp,0x40
   140022ac7:	pop    rdi
   140022ac8:	ret    
   140022ac9:	int3   
   140022aca:	int3   
   140022acb:	int3   
   140022acc:	int3   
   140022acd:	int3   
   140022ace:	int3   
   140022acf:	int3   
   140022ad0:	rex.W jmp QWORD PTR [rip+0x1a681]        # 0x14003d158
   140022ad7:	int3   
   140022ad8:	int3   
   140022ad9:	int3   
   140022ada:	int3   
   140022adb:	int3   
   140022adc:	int3   
   140022add:	int3   
   140022ade:	int3   
   140022adf:	int3   
   140022ae0:	mov    eax,r8d
   140022ae3:	movd   xmm1,edx
   140022ae7:	shr    r8,0x20
   140022aeb:	sub    eax,edx
   140022aed:	shr    rdx,0x20
   140022af1:	sub    r8d,edx
   140022af4:	movd   xmm2,eax
   140022af8:	cvtdq2pd xmm1,xmm1
   140022afc:	cvtdq2pd xmm2,xmm2
   140022b00:	mulsd  xmm2,xmm0
   140022b04:	addsd  xmm2,xmm1
   140022b08:	movd   xmm1,r8d
   140022b0d:	cvttsd2si eax,xmm2
   140022b11:	cvtdq2pd xmm1,xmm1
   140022b15:	mov    DWORD PTR [rsp+0x8],eax
   140022b19:	mulsd  xmm1,xmm0
   140022b1d:	movd   xmm0,edx
   140022b21:	cvtdq2pd xmm0,xmm0
   140022b25:	addsd  xmm1,xmm0
   140022b29:	cvttsd2si eax,xmm1
   140022b2d:	mov    DWORD PTR [rsp+0xc],eax
   140022b31:	mov    rax,QWORD PTR [rsp+0x8]
   140022b36:	ret    
   140022b37:	int3   
   140022b38:	int3   
   140022b39:	int3   
   140022b3a:	int3   
   140022b3b:	int3   
   140022b3c:	int3   
   140022b3d:	int3   
   140022b3e:	int3   
   140022b3f:	int3   
   140022b40:	mov    QWORD PTR [rsp+0x8],rcx
   140022b45:	mov    eax,DWORD PTR [rsp+0xc]
   140022b49:	mov    ecx,DWORD PTR [rsp+0x8]
   140022b4d:	neg    ecx
   140022b4f:	mov    DWORD PTR [rsp+0x8],eax
   140022b53:	mov    DWORD PTR [rsp+0xc],ecx
   140022b57:	mov    rax,QWORD PTR [rsp+0x8]
   140022b5c:	ret    
   140022b5d:	int3   
   140022b5e:	int3   
   140022b5f:	int3   
   140022b60:	mov    QWORD PTR [rsp+0x10],rbp
   140022b65:	mov    QWORD PTR [rsp+0x18],rsi
   140022b6a:	mov    QWORD PTR [rsp+0x20],rdi
   140022b6f:	push   r14
   140022b71:	sub    rsp,0x20
   140022b75:	cmp    BYTE PTR [rdx],0x0
   140022b78:	mov    rsi,r9
   140022b7b:	mov    rbp,r8
   140022b7e:	mov    rdi,rdx
   140022b81:	mov    r14,rcx
   140022b84:	jne    0x140022b96
   140022b86:	movups xmm0,XMMWORD PTR [r8+0x20]
   140022b8b:	mov    rax,rcx
   140022b8e:	movups XMMWORD PTR [rcx],xmm0
   140022b91:	jmp    0x140022c42
   140022b96:	mov    QWORD PTR [rsp+0x30],rbx
   140022b9b:	or     rcx,0xffffffffffffffff
   140022b9f:	nop
   140022ba0:	inc    rcx
   140022ba3:	cmp    BYTE PTR [rdx+rcx*1],0x0
   140022ba7:	jne    0x140022ba0
   140022ba9:	inc    rcx
   140022bac:	call   QWORD PTR [rip+0x1a5b6]        # 0x14003d168
   140022bb2:	mov    rbx,rax
   140022bb5:	mov    rdx,rax
   140022bb8:	mov    BYTE PTR [rax],0x0
   140022bbb:	movzx  eax,BYTE PTR [rdi]
   140022bbe:	test   al,al
   140022bc0:	je     0x140022c32
   140022bc2:	inc    rdi
   140022bc5:	test   al,al
   140022bc7:	jns    0x140022bd0
   140022bc9:	mov    BYTE PTR [rsi+0x92],0x1
   140022bd0:	cmp    al,0x5c
   140022bd2:	jne    0x140022c11
   140022bd4:	movzx  ecx,BYTE PTR [rdi]
   140022bd7:	movzx  r8d,cl
   140022bdb:	lea    eax,[r8-0x6c]
   140022bdf:	test   al,0xf9
   140022be1:	jne    0x140022c02
   140022be3:	cmp    cl,0x70
   140022be6:	je     0x140022c02
   140022be8:	mov    BYTE PTR [rbx],0x0
   140022beb:	movzx  r8d,BYTE PTR [rdi]
   140022bef:	mov    r9,rsi
   140022bf2:	mov    rcx,rbp
   140022bf5:	inc    rbx
   140022bf8:	call   0x140023990
   140022bfd:	mov    rdx,rbx
   140022c00:	jmp    0x140022c07
   140022c02:	mov    BYTE PTR [rbx],cl
   140022c04:	inc    rbx
   140022c07:	cmp    BYTE PTR [rdi],0x0
   140022c0a:	je     0x140022c16
   140022c0c:	inc    rdi
   140022c0f:	jmp    0x140022c16
   140022c11:	mov    BYTE PTR [rbx],al
   140022c13:	inc    rbx
   140022c16:	movzx  eax,BYTE PTR [rdi]
   140022c19:	test   al,al
   140022c1b:	jne    0x140022bc2
   140022c1d:	cmp    rdx,rbx
   140022c20:	je     0x140022c32
   140022c22:	mov    r9,rsi
   140022c25:	mov    r8b,0x6e
   140022c28:	mov    rcx,rbp
   140022c2b:	mov    BYTE PTR [rbx],al
   140022c2d:	call   0x140023990
   140022c32:	movups xmm0,XMMWORD PTR [rbp+0x20]
   140022c36:	mov    rbx,QWORD PTR [rsp+0x30]
   140022c3b:	mov    rax,r14
   140022c3e:	movups XMMWORD PTR [r14],xmm0
   140022c42:	mov    rbp,QWORD PTR [rsp+0x38]
   140022c47:	mov    rsi,QWORD PTR [rsp+0x40]
   140022c4c:	mov    rdi,QWORD PTR [rsp+0x48]
   140022c51:	add    rsp,0x20
   140022c55:	pop    r14
   140022c57:	ret    
   140022c58:	int3   
   140022c59:	int3   
   140022c5a:	int3   
   140022c5b:	int3   
   140022c5c:	int3   
   140022c5d:	int3   
   140022c5e:	int3   
   140022c5f:	int3   
   140022c60:	mov    QWORD PTR [rsp+0x18],rbp
   140022c65:	push   rsi
   140022c66:	sub    rsp,0x20
   140022c6a:	mov    rsi,rcx
   140022c6d:	mov    rcx,QWORD PTR [rcx+0x38]
   140022c71:	mov    rbp,rdx
   140022c74:	test   rcx,rcx
   140022c77:	je     0x140022ca7
   140022c79:	mov    rax,rdx
   140022c7c:	sub    rax,rcx
   140022c7f:	nop
   140022c80:	movzx  r8d,BYTE PTR [rcx]
   140022c84:	movzx  edx,BYTE PTR [rcx+rax*1]
   140022c88:	sub    r8d,edx
   140022c8b:	jne    0x140022c94
   140022c8d:	inc    rcx
   140022c90:	test   edx,edx
   140022c92:	jne    0x140022c80
   140022c94:	test   r8d,r8d
   140022c97:	jne    0x140022ca7
   140022c99:	mov    rax,rsi
   140022c9c:	mov    rbp,QWORD PTR [rsp+0x40]
   140022ca1:	add    rsp,0x20
   140022ca5:	pop    rsi
   140022ca6:	ret    
   140022ca7:	mov    QWORD PTR [rsp+0x30],rbx
   140022cac:	xor    ebx,ebx
   140022cae:	cmp    DWORD PTR [rsi+0x18],ebx
   140022cb1:	jle    0x140022cf5
   140022cb3:	mov    QWORD PTR [rsp+0x38],rdi
   140022cb8:	mov    edi,ebx
   140022cba:	nop    WORD PTR [rax+rax*1+0x0]
   140022cc0:	mov    rcx,QWORD PTR [rsi+0x28]
   140022cc4:	mov    rdx,rbp
   140022cc7:	mov    rcx,QWORD PTR [rcx+rdi*1]
   140022ccb:	call   0x140022c60
   140022cd0:	test   rax,rax
   140022cd3:	jne    0x140022ce0
   140022cd5:	inc    ebx
   140022cd7:	add    rdi,0x8
   140022cdb:	cmp    ebx,DWORD PTR [rsi+0x18]
   140022cde:	jl     0x140022cc0
   140022ce0:	mov    rdi,QWORD PTR [rsp+0x38]
   140022ce5:	mov    rbx,QWORD PTR [rsp+0x30]
   140022cea:	mov    rbp,QWORD PTR [rsp+0x40]
   140022cef:	add    rsp,0x20
   140022cf3:	pop    rsi
   140022cf4:	ret    
   140022cf5:	mov    rbp,QWORD PTR [rsp+0x40]
   140022cfa:	mov    rax,rbx
   140022cfd:	mov    rbx,QWORD PTR [rsp+0x30]
   140022d02:	add    rsp,0x20
   140022d06:	pop    rsi
   140022d07:	ret    
   140022d08:	int3   
   140022d09:	int3   
   140022d0a:	int3   
   140022d0b:	int3   
   140022d0c:	int3   
   140022d0d:	int3   
   140022d0e:	int3   
   140022d0f:	int3   
   140022d10:	mov    QWORD PTR [rsp+0x20],r9
   140022d15:	mov    DWORD PTR [rsp+0x18],r8d
   140022d1a:	mov    DWORD PTR [rsp+0x10],edx
   140022d1e:	mov    QWORD PTR [rsp+0x8],rcx
   140022d23:	push   rbx
   140022d24:	push   rbp
   140022d25:	push   rsi
   140022d26:	push   rdi
   140022d27:	sub    rsp,0xe8
   140022d2e:	mov    ecx,0x40
   140022d33:	mov    esi,edx
   140022d35:	call   0x14001d2c0
   140022d3a:	mov    r11,QWORD PTR [rip+0x30eb7]        # 0x140053bf8
   140022d41:	xor    r10d,r10d
   140022d44:	movzx  r8d,BYTE PTR [r11]
   140022d48:	mov    QWORD PTR [rsp+0x50],0x0
   140022d51:	mov    ebx,0x1
   140022d56:	mov    rdi,rax
   140022d59:	mov    QWORD PTR [rsp+0x40],rax
   140022d5e:	test   r8b,r8b
   140022d61:	je     0x140022d98
   140022d63:	cmp    r8b,0x5c
   140022d67:	jne    0x140022d79
   140022d69:	movzx  r8d,BYTE PTR [r11+0x1]
   140022d6e:	inc    r11
   140022d71:	lea    eax,[r8-0x7b]
   140022d75:	cmp    al,0x2
   140022d77:	jbe    0x140022d8b
   140022d79:	cmp    r8b,0x7b
   140022d7d:	jne    0x140022e17
   140022d83:	inc    r10d
   140022d86:	test   r10d,r10d
   140022d89:	js     0x140022d98
   140022d8b:	movzx  r8d,BYTE PTR [r11+0x1]
   140022d90:	inc    r11
   140022d93:	test   r8b,r8b
   140022d96:	jne    0x140022d63
   140022d98:	movsxd rcx,ebx
   140022d9b:	shl    rcx,0x3
   140022d9f:	call   0x14001d2c0
   140022da4:	mov    r10,QWORD PTR [rsp+0x128]
   140022dac:	mov    DWORD PTR [rdi+0x30],esi
   140022daf:	mov    QWORD PTR [rdi+0x28],rax
   140022db3:	xor    eax,eax
   140022db5:	lea    r9,[rsp+0x60]
   140022dba:	xor    ebx,ebx
   140022dbc:	mov    rsi,r10
   140022dbf:	mov    QWORD PTR [rsp+0x58],r10
   140022dc4:	mov    DWORD PTR [rsp+0x30],eax
   140022dc8:	mov    QWORD PTR [rsp+0x48],rax
   140022dcd:	lea    rdi,[rsp+0x60]
   140022dd2:	mov    QWORD PTR [rsp+0x38],r9
   140022dd7:	xor    ebp,ebp
   140022dd9:	mov    rdx,QWORD PTR [rip+0x30e18]        # 0x140053bf8
   140022de0:	lea    r11,[rip+0xfffffffffffdd219]        # 0x140000000
   140022de7:	nop    WORD PTR [rax+rax*1+0x0]
   140022df0:	movsx  r8,BYTE PTR [rdx]
   140022df4:	mov    rax,r8
   140022df7:	cmp    r8d,0x7d
   140022dfb:	ja     0x14002308e
   140022e01:	movzx  eax,BYTE PTR [r11+rax*1+0x2316c]
   140022e0a:	mov    ecx,DWORD PTR [r11+rax*4+0x23154]
   140022e12:	add    rcx,r11
   140022e15:	jmp    rcx
   140022e17:	cmp    r8b,0x7d
   140022e1b:	jne    0x140022e25
   140022e1d:	dec    r10d
   140022e20:	jmp    0x140022d86
   140022e25:	cmp    r8b,0x7c
   140022e29:	jne    0x140022d86
   140022e2f:	test   r10d,r10d
   140022e32:	jne    0x140022d89
   140022e38:	inc    ebx
   140022e3a:	jmp    0x140022d8b
   140022e3f:	test   bl,0x6
   140022e42:	jne    0x140023144
   140022e48:	or     ebx,0x12
   140022e4b:	inc    rdx
   140022e4e:	mov    QWORD PTR [rip+0x30da3],rdx        # 0x140053bf8
   140022e55:	jmp    0x140022df0
   140022e57:	test   bl,0x10
   140022e5a:	je     0x140023144
   140022e60:	and    ebx,0xffffffef
   140022e63:	inc    rdx
   140022e66:	mov    QWORD PTR [rip+0x30d8b],rdx        # 0x140053bf8
   140022e6d:	jmp    0x140022df0
   140022e6f:	inc    rdx
   140022e72:	mov    QWORD PTR [rip+0x30d7f],rdx        # 0x140053bf8
   140022e79:	test   ebx,ebx
   140022e7b:	jne    0x140023144
   140022e81:	cmp    BYTE PTR [rdx],bl
   140022e83:	je     0x140023144
   140022e89:	mov    rcx,QWORD PTR [rsp+0x110]
   140022e91:	xor    edx,edx
   140022e93:	mov    r9,r10
   140022e96:	cmp    DWORD PTR [rsp+0x118],edx
   140022e9d:	mov    ebx,0x4
   140022ea2:	sete   dl
   140022ea5:	xor    r8d,r8d
   140022ea8:	call   0x140022d10
   140022ead:	mov    r10,QWORD PTR [rsp+0x48]
   140022eb2:	mov    rcx,QWORD PTR [rsp+0x40]
   140022eb7:	mov    rcx,QWORD PTR [rcx+0x28]
   140022ebb:	inc    DWORD PTR [rsp+0x30]
   140022ebf:	add    r10,0x8
   140022ec3:	mov    QWORD PTR [r10+rcx*1-0x8],rax
   140022ec8:	mov    QWORD PTR [rsp+0x48],r10
   140022ecd:	test   rax,rax
   140022ed0:	je     0x140023144
   140022ed6:	mov    r9,QWORD PTR [rsp+0x38]
   140022edb:	mov    r10,QWORD PTR [rsp+0x128]
   140022ee3:	jmp    0x140022dd9
   140022ee8:	test   r8b,r8b
   140022eeb:	jne    0x140022efb
   140022eed:	cmp    DWORD PTR [rsp+0x120],0x0
   140022ef5:	je     0x140023144
   140022efb:	test   bl,0x10
   140022efe:	jne    0x140023144
   140022f04:	test   bl,0x4
   140022f07:	jne    0x140022f47
   140022f09:	mov    ecx,0x40
   140022f0e:	call   0x14001d2c0
   140022f13:	mov    r10,QWORD PTR [rsp+0x48]
   140022f18:	inc    DWORD PTR [rsp+0x30]
   140022f1c:	mov    rdx,QWORD PTR [rip+0x30cd5]        # 0x140053bf8
   140022f23:	mov    r9,QWORD PTR [rsp+0x38]
   140022f28:	mov    r8,rax
   140022f2b:	mov    QWORD PTR [rsp+0x50],rax
   140022f30:	mov    rax,QWORD PTR [rsp+0x40]
   140022f35:	add    r10,0x8
   140022f39:	mov    rcx,QWORD PTR [rax+0x28]
   140022f3d:	mov    QWORD PTR [rsp+0x48],r10
   140022f42:	mov    QWORD PTR [r10+rcx*1-0x8],r8
   140022f47:	test   bl,0x2
   140022f4a:	je     0x140022f93
   140022f4c:	lea    rax,[rsp+0x61]
   140022f51:	cmp    rdi,rax
   140022f54:	jbe    0x140022f66
   140022f56:	lea    rax,[rdi-0x1]
   140022f5a:	cmp    rax,r9
   140022f5d:	je     0x140022f66
   140022f5f:	cmp    BYTE PTR [rax],0x20
   140022f62:	cmove  rdi,rax
   140022f66:	lea    rcx,[rsp+0x60]
   140022f6b:	mov    BYTE PTR [rdi],0x0
   140022f6e:	call   QWORD PTR [rip+0x1a36c]        # 0x14003d2e0
   140022f74:	mov    rcx,QWORD PTR [rsp+0x50]
   140022f79:	mov    rdx,QWORD PTR [rip+0x30c78]        # 0x140053bf8
   140022f80:	lea    r9,[rsp+0x60]
   140022f85:	mov    QWORD PTR [rcx+0x38],rax
   140022f89:	lea    rdi,[rsp+0x60]
   140022f8e:	mov    QWORD PTR [rsp+0x38],r9
   140022f93:	test   bl,0x5
   140022f96:	jne    0x140022fa1
   140022f98:	or     ebx,0x1
   140022f9b:	mov    BYTE PTR [rsi],0x20
   140022f9e:	inc    rsi
   140022fa1:	test   bl,0x1
   140022fa4:	je     0x140023031
   140022faa:	mov    r9,QWORD PTR [rsp+0x128]
   140022fb2:	lea    rax,[r9+0x1]
   140022fb6:	cmp    rsi,rax
   140022fb9:	jbe    0x140022fcd
   140022fbb:	lea    rax,[rsi-0x1]
   140022fbf:	cmp    rax,QWORD PTR [rsp+0x58]
   140022fc4:	je     0x140022fcd
   140022fc6:	cmp    BYTE PTR [rax],0x20
   140022fc9:	cmove  rsi,rax
   140022fcd:	mov    BYTE PTR [rsi],0x0
   140022fd0:	mov    rsi,QWORD PTR [rsp+0x110]
   140022fd8:	mov    rcx,r9
   140022fdb:	mov    rbx,QWORD PTR [rsi+0x60]
   140022fdf:	call   QWORD PTR [rip+0x1a2fb]        # 0x14003d2e0
   140022fe5:	mov    r9,QWORD PTR [rbx+0x10]
   140022fe9:	movsd  xmm1,QWORD PTR [rbx+0x18]
   140022fee:	mov    r8,QWORD PTR [rbx+0x8]
   140022ff2:	mov    rcx,rax
   140022ff5:	mov    rax,QWORD PTR [rsi+0x20]
   140022ff9:	mov    QWORD PTR [rsp+0x20],rax
   140022ffe:	call   0x14001c400
   140023003:	mov    rcx,QWORD PTR [rsp+0x50]
   140023008:	mov    r10,QWORD PTR [rsp+0x128]
   140023010:	mov    rdx,QWORD PTR [rip+0x30be1]        # 0x140053bf8
   140023017:	mov    r9,QWORD PTR [rsp+0x38]
   14002301c:	mov    QWORD PTR [rcx+0x20],rax
   140023020:	mov    DWORD PTR [rcx+0x30],0x1
   140023027:	mov    rsi,r10
   14002302a:	mov    QWORD PTR [rsp+0x58],r10
   14002302f:	jmp    0x140023039
   140023031:	mov    r10,QWORD PTR [rsp+0x128]
   140023039:	movzx  eax,BYTE PTR [rdx]
   14002303c:	test   al,al
   14002303e:	je     0x140023129
   140023044:	cmp    al,0x7d
   140023046:	je     0x14002311f
   14002304c:	xor    ebx,ebx
   14002304e:	inc    rdx
   140023051:	mov    QWORD PTR [rip+0x30ba0],rdx        # 0x140053bf8
   140023058:	jmp    0x140022de0
   14002305d:	movzx  ecx,BYTE PTR [rdx+0x1]
   140023061:	lea    r8,[rdx+0x1]
   140023065:	test   cl,cl
   140023067:	je     0x14002308e
   140023069:	lea    eax,[rcx-0x7b]
   14002306c:	cmp    al,0x2
   14002306e:	jbe    0x140023084
   140023070:	cmp    cl,0x3c
   140023073:	je     0x140023084
   140023075:	cmp    cl,0x3e
   140023078:	je     0x140023084
   14002307a:	cmp    cl,0x20
   14002307d:	jne    0x14002308e
   14002307f:	mov    ebp,0x1
   140023084:	mov    rdx,r8
   140023087:	mov    QWORD PTR [rip+0x30b6a],rdx        # 0x140053bf8
   14002308e:	test   bl,0x4
   140023091:	je     0x14002309c
   140023093:	cmp    BYTE PTR [rdx],0x20
   140023096:	jne    0x140023144
   14002309c:	test   bl,0x18
   14002309f:	jne    0x1400230a9
   1400230a1:	cmp    BYTE PTR [rdx],0x20
   1400230a4:	je     0x1400230a9
   1400230a6:	or     ebx,0x9
   1400230a9:	test   bl,0x8
   1400230ac:	je     0x1400230df
   1400230ae:	movzx  eax,BYTE PTR [rdx]
   1400230b1:	cmp    al,0x20
   1400230b3:	jne    0x1400230be
   1400230b5:	test   ebp,ebp
   1400230b7:	jne    0x1400230be
   1400230b9:	cmp    BYTE PTR [rsi-0x1],al
   1400230bc:	je     0x140023110
   1400230be:	mov    BYTE PTR [rsi],al
   1400230c0:	inc    rsi
   1400230c3:	test   ebp,ebp
   1400230c5:	je     0x140023110
   1400230c7:	lea    rcx,[rsi-0x1]
   1400230cb:	inc    rdx
   1400230ce:	mov    QWORD PTR [rsp+0x58],rcx
   1400230d3:	mov    QWORD PTR [rip+0x30b1e],rdx        # 0x140053bf8
   1400230da:	jmp    0x140022df0
   1400230df:	test   bl,0x10
   1400230e2:	je     0x140023110
   1400230e4:	movzx  eax,BYTE PTR [rdx]
   1400230e7:	cmp    al,0x20
   1400230e9:	jne    0x1400230fe
   1400230eb:	test   ebp,ebp
   1400230ed:	jne    0x1400230fe
   1400230ef:	lea    rcx,[rsp+0x60]
   1400230f4:	cmp    rdi,rcx
   1400230f7:	je     0x140023110
   1400230f9:	cmp    BYTE PTR [rdi-0x1],al
   1400230fc:	je     0x140023110
   1400230fe:	mov    BYTE PTR [rdi],al
   140023100:	inc    rdi
   140023103:	test   ebp,ebp
   140023105:	je     0x140023110
   140023107:	lea    r9,[rdi-0x1]
   14002310b:	mov    QWORD PTR [rsp+0x38],r9
   140023110:	inc    rdx
   140023113:	mov    QWORD PTR [rip+0x30ade],rdx        # 0x140053bf8
   14002311a:	jmp    0x140022df0
   14002311f:	inc    rdx
   140023122:	mov    QWORD PTR [rip+0x30acf],rdx        # 0x140053bf8
   140023129:	mov    rcx,QWORD PTR [rsp+0x40]
   14002312e:	mov    eax,DWORD PTR [rsp+0x30]
   140023132:	mov    DWORD PTR [rcx+0x18],eax
   140023135:	mov    rax,rcx
   140023138:	add    rsp,0xe8
   14002313f:	pop    rdi
   140023140:	pop    rsi
   140023141:	pop    rbp
   140023142:	pop    rbx
   140023143:	ret    
   140023144:	xor    eax,eax
   140023146:	add    rsp,0xe8
   14002314d:	pop    rdi
   14002314e:	pop    rsi
   14002314f:	pop    rbp
   140023150:	pop    rbx
   140023151:	ret    
   140023152:	xchg   ax,ax
   140023154:	call   0x17f023387
   140023159:	add    al,BYTE PTR cs:[rax]
   14002315c:	push   rdi
   14002315d:	add    al,BYTE PTR cs:[rax]
   140023160:	pop    rbp
   140023161:	xor    BYTE PTR [rdx],al
   140023163:	add    BYTE PTR [rdi+0x2e],ch
   140023166:	add    al,BYTE PTR [rax]
   140023168:	mov    ?,WORD PTR [rax]
   14002316a:	add    al,BYTE PTR [rax]
   14002316c:	add    BYTE PTR [rip+0x5050505],al        # 0x145073677
   140023172:	add    eax,0x5050505
   140023177:	add    eax,0x5050505
   14002317c:	add    eax,0x5050505
   140023181:	add    eax,0x5050505
   140023186:	add    eax,0x5050505
   14002318b:	add    eax,0x5050505
   140023190:	add    eax,0x5050505
   140023195:	add    eax,0x5050505
   14002319a:	add    eax,0x5050505
   14002319f:	add    eax,0x5050505
   1400231a4:	add    eax,0x1050505
   1400231a9:	add    eax,0x5050502
   1400231ae:	add    eax,0x5050505
   1400231b3:	add    eax,0x5050505
   1400231b8:	add    eax,0x5050505
   1400231bd:	add    eax,0x5050505
   1400231c2:	add    eax,0x5050505
   1400231c7:	add    eax,0x5050503
   1400231cc:	add    eax,0x5050505
   1400231d1:	add    eax,0x5050505
   1400231d6:	add    eax,0x5050505
   1400231db:	add    eax,0x5050505
   1400231e0:	add    eax,0x5050505
   1400231e5:	add    eax,0x405
   1400231ea:	int3   
   1400231eb:	int3   
   1400231ec:	int3   
   1400231ed:	int3   
   1400231ee:	int3   
   1400231ef:	int3   
   1400231f0:	sub    rsp,0x28
   1400231f4:	mov    rdx,QWORD PTR [rip+0x3223d]        # 0x140055438
   1400231fb:	lea    r8,[rip+0x1a216]        # 0x14003d418
   140023202:	call   0x14001c3a0
   140023207:	cmp    BYTE PTR [rax],0x0
   14002320a:	je     0x140023221
   14002320c:	mov    rcx,rax
   14002320f:	mov    rax,QWORD PTR [rip+0x322d2]        # 0x1400554e8
   140023216:	add    rsp,0x28
   14002321a:	rex.W jmp QWORD PTR [rax+0xa8]
   140023221:	add    rsp,0x28
   140023225:	ret    
   140023226:	int3   
   140023227:	int3   
   140023228:	int3   
   140023229:	int3   
   14002322a:	int3   
   14002322b:	int3   
   14002322c:	int3   
   14002322d:	int3   
   14002322e:	int3   
   14002322f:	int3   
   140023230:	mov    QWORD PTR [rsp+0x18],rsi
   140023235:	mov    QWORD PTR [rsp+0x10],rdx
   14002323a:	push   rdi
   14002323b:	sub    rsp,0x20
   14002323f:	shr    rdx,0x20
   140023243:	mov    rdi,rcx
   140023246:	sub    edx,DWORD PTR [rcx+0x4]
   140023249:	mov    ecx,DWORD PTR [rsp+0x38]
   14002324d:	call   0x14001c660
   140023252:	mov    ecx,DWORD PTR [rsp+0x38]
   140023256:	mov    edx,DWORD PTR [rsp+0x3c]
   14002325a:	add    ecx,DWORD PTR [rdi]
   14002325c:	mov    QWORD PTR [rdi+0x8],rax
   140023260:	call   0x14001c660
   140023265:	xor    esi,esi
   140023267:	mov    QWORD PTR [rdi+0x10],rax
   14002326b:	cmp    DWORD PTR [rdi+0x18],esi
   14002326e:	jle    0x1400232c3
   140023270:	mov    QWORD PTR [rsp+0x30],rbx
   140023275:	mov    ebx,esi
   140023277:	nop    WORD PTR [rax+rax*1+0x0]
   140023280:	mov    rcx,QWORD PTR [rdi+0x28]
   140023284:	mov    rdx,QWORD PTR [rsp+0x38]
   140023289:	mov    rcx,QWORD PTR [rcx+rbx*1]
   14002328d:	call   0x140023230
   140023292:	cmp    DWORD PTR [rdi+0x30],0x0
   140023296:	mov    rax,QWORD PTR [rdi+0x28]
   14002329a:	je     0x1400232a8
   14002329c:	mov    rcx,QWORD PTR [rbx+rax*1]
   1400232a0:	mov    eax,DWORD PTR [rcx]
   1400232a2:	add    DWORD PTR [rsp+0x38],eax
   1400232a6:	jmp    0x1400232b3
   1400232a8:	mov    rcx,QWORD PTR [rax+rbx*1]
   1400232ac:	mov    eax,DWORD PTR [rcx+0x4]
   1400232af:	sub    DWORD PTR [rsp+0x3c],eax
   1400232b3:	inc    esi
   1400232b5:	add    rbx,0x8
   1400232b9:	cmp    esi,DWORD PTR [rdi+0x18]
   1400232bc:	jl     0x140023280
   1400232be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400232c3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400232c8:	add    rsp,0x20
   1400232cc:	pop    rdi
   1400232cd:	ret    
   1400232ce:	int3   
   1400232cf:	int3   
   1400232d0:	movaps xmm2,xmm0
   1400232d3:	divsd  xmm2,xmm1
   1400232d7:	cvttsd2si eax,xmm2
   1400232db:	movd   xmm3,eax
   1400232df:	cvtdq2pd xmm3,xmm3
   1400232e3:	mulsd  xmm3,xmm1
   1400232e7:	addsd  xmm3,QWORD PTR [rip+0x1bbf1]        # 0x14003eee0
   1400232ef:	comisd xmm0,xmm3
   1400232f3:	jbe    0x1400232f7
   1400232f5:	inc    eax
   1400232f7:	movd   xmm0,eax
   1400232fb:	cvtdq2pd xmm0,xmm0
   1400232ff:	mulsd  xmm0,xmm1
   140023303:	ret    
   140023304:	int3   
   140023305:	int3   
   140023306:	int3   
   140023307:	int3   
   140023308:	int3   
   140023309:	int3   
   14002330a:	int3   
   14002330b:	int3   
   14002330c:	int3   
   14002330d:	int3   
   14002330e:	int3   
   14002330f:	int3   
   140023310:	mov    QWORD PTR [rsp+0x10],rdx
   140023315:	push   rbx
   140023316:	sub    rsp,0x30
   14002331a:	mov    rbx,rcx
   14002331d:	mov    rax,rdx
   140023320:	sub    edx,DWORD PTR [rcx]
   140023322:	mov    r8d,DWORD PTR [rbx+0x18]
   140023326:	mov    rcx,rax
   140023329:	shr    rcx,0x20
   14002332d:	sub    ecx,DWORD PTR [rbx+0x4]
   140023330:	mov    QWORD PTR [rbx],rax
   140023333:	test   r8d,r8d
   140023336:	je     0x1400233fe
   14002333c:	cmp    DWORD PTR [rbx+0x30],0x0
   140023340:	movd   xmm0,r8d
   140023345:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14002334a:	cvtdq2pd xmm0,xmm0
   14002334e:	je     0x140023356
   140023350:	movd   xmm6,edx
   140023354:	jmp    0x14002335a
   140023356:	movd   xmm6,ecx
   14002335a:	cvtdq2pd xmm6,xmm6
   14002335e:	xor    edx,edx
   140023360:	divsd  xmm6,xmm0
   140023364:	test   r8d,r8d
   140023367:	jle    0x1400233f9
   14002336d:	mov    QWORD PTR [rsp+0x40],rbp
   140023372:	mov    QWORD PTR [rsp+0x50],rsi
   140023377:	mov    QWORD PTR [rsp+0x58],rdi
   14002337c:	mov    esi,edx
   14002337e:	xchg   ax,ax
   140023380:	mov    rcx,QWORD PTR [rbx+0x28]
   140023384:	lea    ebp,[rdx+0x1]
   140023387:	movd   xmm1,edx
   14002338b:	mov    rdi,QWORD PTR [rsi+rcx*1]
   14002338f:	movd   xmm0,ebp
   140023393:	cvtdq2pd xmm1,xmm1
   140023397:	mulsd  xmm1,xmm6
   14002339b:	cvtdq2pd xmm0,xmm0
   14002339f:	cvttsd2si ecx,xmm1
   1400233a3:	mulsd  xmm0,xmm6
   1400233a7:	cvttsd2si r8d,xmm0
   1400233ac:	sub    r8d,ecx
   1400233af:	cmp    DWORD PTR [rbx+0x30],0x0
   1400233b3:	je     0x1400233c0
   1400233b5:	mov    ecx,DWORD PTR [rdi]
   1400233b7:	mov    edx,DWORD PTR [rsp+0x4c]
   1400233bb:	add    ecx,r8d
   1400233be:	jmp    0x1400233c8
   1400233c0:	mov    edx,DWORD PTR [rdi+0x4]
   1400233c3:	mov    ecx,eax
   1400233c5:	add    edx,r8d
   1400233c8:	call   0x14001c660
   1400233cd:	mov    rcx,rdi
   1400233d0:	mov    rdx,rax
   1400233d3:	call   0x140023310
   1400233d8:	add    rsi,0x8
   1400233dc:	mov    edx,ebp
   1400233de:	cmp    ebp,DWORD PTR [rbx+0x18]
   1400233e1:	jge    0x1400233ea
   1400233e3:	mov    rax,QWORD PTR [rsp+0x48]
   1400233e8:	jmp    0x140023380
   1400233ea:	mov    rdi,QWORD PTR [rsp+0x58]
   1400233ef:	mov    rsi,QWORD PTR [rsp+0x50]
   1400233f4:	mov    rbp,QWORD PTR [rsp+0x40]
   1400233f9:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   1400233fe:	add    rsp,0x30
   140023402:	pop    rbx
   140023403:	ret    
   140023404:	int3   
   140023405:	int3   
   140023406:	int3   
   140023407:	int3   
   140023408:	int3   
   140023409:	int3   
   14002340a:	int3   
   14002340b:	int3   
   14002340c:	int3   
   14002340d:	int3   
   14002340e:	int3   
   14002340f:	int3   
   140023410:	mov    rax,rsp
   140023413:	mov    DWORD PTR [rax+0x20],r9d
   140023417:	mov    DWORD PTR [rax+0x18],r8d
   14002341b:	mov    QWORD PTR [rax+0x8],rcx
   14002341f:	push   rbx
   140023420:	push   rsi
   140023421:	push   rdi
   140023422:	push   r13
   140023424:	push   r14
   140023426:	push   r15
   140023428:	sub    rsp,0xc8
   14002342f:	mov    QWORD PTR [rax+0x10],rbp
   140023433:	mov    QWORD PTR [rax-0x38],r12
   140023437:	mov    eax,0x4
   14002343c:	mov    edi,r8d
   14002343f:	test   r9b,0x4
   140023443:	mov    ebx,0x2
   140023448:	cmovne ebx,eax
   14002344b:	lea    eax,[rdi*4+0x4]
   140023452:	mov    r15,rdx
   140023455:	movsxd rcx,eax
   140023458:	mov    DWORD PTR [rsp+0x24],ebx
   14002345c:	shl    rcx,0x3
   140023460:	call   0x14001d2c0
   140023465:	xor    esi,esi
   140023467:	movsxd r14,edi
   14002346a:	mov    r13,rax
   14002346d:	mov    QWORD PTR [rsp+0x50],rax
   140023472:	mov    r12d,esi
   140023475:	mov    ebp,esi
   140023477:	test   edi,edi
   140023479:	jle    0x14002368c
   14002347f:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   140023487:	movaps XMMWORD PTR [rsp+0xa0],xmm7
   14002348f:	movaps XMMWORD PTR [rsp+0x90],xmm8
   140023498:	movsd  xmm8,QWORD PTR [rip+0x19f37]        # 0x14003d3d8
   1400234a1:	movsxd rax,ebx
   1400234a4:	mov    QWORD PTR [rsp+0x48],rax
   1400234a9:	lea    eax,[rdi-0x1]
   1400234ac:	mov    rdi,r13
   1400234af:	mov    DWORD PTR [rsp+0x20],eax
   1400234b3:	movaps XMMWORD PTR [rsp+0x80],xmm9
   1400234bc:	movaps XMMWORD PTR [rsp+0x70],xmm10
   1400234c2:	movsd  xmm10,QWORD PTR [rip+0x1ba35]        # 0x14003ef00
   1400234cb:	movsd  xmm9,QWORD PTR [rip+0x19f0c]        # 0x14003d3e0
   1400234d4:	mov    rbx,QWORD PTR [r15+rbp*8]
   1400234d8:	cmp    r12d,eax
   1400234db:	jge    0x1400234e4
   1400234dd:	mov    rax,QWORD PTR [r15+rbp*8+0x8]
   1400234e2:	jmp    0x1400234e7
   1400234e4:	mov    rax,QWORD PTR [r15]
   1400234e7:	mov    ecx,eax
   1400234e9:	shr    rax,0x20
   1400234ed:	mov    r13,rbx
   1400234f0:	sub    ecx,ebx
   1400234f2:	shr    r13,0x20
   1400234f6:	sub    eax,r13d
   1400234f9:	movd   xmm6,ecx
   1400234fd:	movd   xmm7,eax
   140023501:	cvtdq2pd xmm6,xmm6
   140023505:	movaps xmm1,xmm6
   140023508:	mulsd  xmm1,xmm6
   14002350c:	cvtdq2pd xmm7,xmm7
   140023510:	movaps xmm0,xmm7
   140023513:	mulsd  xmm0,xmm7
   140023517:	addsd  xmm0,xmm1
   14002351b:	call   0x14003b8ae
   140023520:	mov    rcx,QWORD PTR [rsp+0x48]
   140023525:	movaps xmm4,xmm10
   140023529:	inc    esi
   14002352b:	divsd  xmm4,xmm0
   14002352f:	cmp    rcx,0x2
   140023533:	je     0x14002353a
   140023535:	mov    QWORD PTR [rdi],rbx
   140023538:	jmp    0x140023581
   14002353a:	movd   xmm0,ebx
   14002353e:	movaps xmm3,xmm4
   140023541:	movaps xmm1,xmm6
   140023544:	movaps xmm2,xmm7
   140023547:	mulsd  xmm3,xmm8
   14002354c:	mulsd  xmm1,xmm3
   140023550:	mulsd  xmm2,xmm3
   140023554:	cvtdq2pd xmm0,xmm0
   140023558:	addsd  xmm1,xmm0
   14002355c:	movd   xmm0,r13d
   140023561:	cvttsd2si eax,xmm1
   140023565:	cvtdq2pd xmm0,xmm0
   140023569:	mov    DWORD PTR [rsp+0x38],eax
   14002356d:	addsd  xmm2,xmm0
   140023571:	cvttsd2si eax,xmm2
   140023575:	mov    DWORD PTR [rsp+0x3c],eax
   140023579:	mov    rax,QWORD PTR [rsp+0x38]
   14002357e:	mov    QWORD PTR [rdi],rax
   140023581:	add    rdi,0x8
   140023585:	movd   xmm3,ebx
   140023589:	movaps xmm0,xmm6
   14002358c:	movaps xmm2,xmm9
   140023590:	movaps xmm1,xmm7
   140023593:	add    rdi,0x10
   140023597:	add    esi,0x2
   14002359a:	mulsd  xmm0,xmm4
   14002359e:	subsd  xmm2,xmm4
   1400235a2:	movd   xmm5,r13d
   1400235a7:	cvtdq2pd xmm3,xmm3
   1400235ab:	mulsd  xmm1,xmm2
   1400235af:	addsd  xmm0,xmm3
   1400235b3:	cvtdq2pd xmm5,xmm5
   1400235b7:	cvttsd2si eax,xmm0
   1400235bb:	movaps xmm0,xmm7
   1400235be:	addsd  xmm1,xmm5
   1400235c2:	mulsd  xmm0,xmm4
   1400235c6:	mov    DWORD PTR [rsp+0x40],eax
   1400235ca:	addsd  xmm0,xmm5
   1400235ce:	cvttsd2si eax,xmm0
   1400235d2:	movaps xmm0,xmm6
   1400235d5:	mulsd  xmm0,xmm2
   1400235d9:	addsd  xmm0,xmm3
   1400235dd:	mov    DWORD PTR [rsp+0x44],eax
   1400235e1:	mov    rax,QWORD PTR [rsp+0x40]
   1400235e6:	mov    QWORD PTR [rdi-0x10],rax
   1400235ea:	cvttsd2si eax,xmm0
   1400235ee:	mov    DWORD PTR [rsp+0x28],eax
   1400235f2:	cvttsd2si eax,xmm1
   1400235f6:	mov    DWORD PTR [rsp+0x2c],eax
   1400235fa:	mov    rax,QWORD PTR [rsp+0x28]
   1400235ff:	mov    QWORD PTR [rdi-0x8],rax
   140023603:	cmp    rcx,0x2
   140023607:	jne    0x140023645
   140023609:	mulsd  xmm4,xmm8
   14002360e:	movaps xmm0,xmm9
   140023612:	inc    esi
   140023614:	add    rdi,0x8
   140023618:	subsd  xmm0,xmm4
   14002361c:	mulsd  xmm6,xmm0
   140023620:	mulsd  xmm7,xmm0
   140023624:	addsd  xmm6,xmm3
   140023628:	addsd  xmm7,xmm5
   14002362c:	cvttsd2si eax,xmm6
   140023630:	mov    DWORD PTR [rsp+0x30],eax
   140023634:	cvttsd2si eax,xmm7
   140023638:	mov    DWORD PTR [rsp+0x34],eax
   14002363c:	mov    rax,QWORD PTR [rsp+0x30]
   140023641:	mov    QWORD PTR [rdi-0x8],rax
   140023645:	mov    eax,DWORD PTR [rsp+0x20]
   140023649:	inc    rbp
   14002364c:	inc    r12d
   14002364f:	cmp    rbp,r14
   140023652:	jl     0x1400234d4
   140023658:	mov    r13,QWORD PTR [rsp+0x50]
   14002365d:	mov    edi,DWORD PTR [rsp+0x110]
   140023664:	movaps xmm10,XMMWORD PTR [rsp+0x70]
   14002366a:	movaps xmm9,XMMWORD PTR [rsp+0x80]
   140023673:	movaps xmm8,XMMWORD PTR [rsp+0x90]
   14002367c:	movaps xmm7,XMMWORD PTR [rsp+0xa0]
   140023684:	movaps xmm6,XMMWORD PTR [rsp+0xb0]
   14002368c:	mov    rax,QWORD PTR [r13+0x0]
   140023690:	mov    r12,QWORD PTR [rsp+0xc0]
   140023698:	mov    rbp,QWORD PTR [rsp+0x108]
   1400236a0:	movsxd rcx,esi
   1400236a3:	inc    esi
   1400236a5:	cmp    DWORD PTR [rsp+0x24],0x2
   1400236aa:	mov    QWORD PTR [r13+rcx*8+0x0],rax
   1400236af:	mov    rax,QWORD PTR [r13+0x8]
   1400236b3:	movsxd rcx,esi
   1400236b6:	mov    QWORD PTR [r13+rcx*8+0x0],rax
   1400236bb:	mov    rax,QWORD PTR [r13+0x10]
   1400236bf:	lea    rbx,[r13+0x10]
   1400236c3:	mov    QWORD PTR [r13+rcx*8+0x8],rax
   1400236c8:	jne    0x14002371e
   1400236ca:	test   edi,edi
   1400236cc:	jle    0x1400237c1
   1400236d2:	nop    DWORD PTR [rax+0x0]
   1400236d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400236e0:	mov    rax,QWORD PTR [rip+0x31e01]        # 0x1400554e8
   1400236e7:	lea    rcx,[rbx-0x8]
   1400236eb:	mov    edx,0x2
   1400236f0:	call   QWORD PTR [rax+0xd8]
   1400236f6:	mov    rax,QWORD PTR [rip+0x31deb]        # 0x1400554e8
   1400236fd:	xor    r9d,r9d
   140023700:	lea    edx,[r9+0x4]
   140023704:	xor    r8d,r8d
   140023707:	mov    rcx,rbx
   14002370a:	call   QWORD PTR [rax+0xd0]
   140023710:	add    rbx,0x20
   140023714:	dec    rdi
   140023717:	jne    0x1400236e0
   140023719:	jmp    0x1400237c1
   14002371e:	mov    rsi,QWORD PTR [rsp+0x100]
   140023726:	mov    rdx,QWORD PTR [rip+0x31d0b]        # 0x140055438
   14002372d:	lea    r8,[rip+0x19ce4]        # 0x14003d418
   140023734:	mov    rcx,rsi
   140023737:	call   0x14001c3a0
   14002373c:	cmp    BYTE PTR [rax],0x0
   14002373f:	je     0x140023751
   140023741:	mov    rcx,rax
   140023744:	mov    rax,QWORD PTR [rip+0x31d9d]        # 0x1400554e8
   14002374b:	call   QWORD PTR [rax+0xa8]
   140023751:	mov    ebx,DWORD PTR [rsp+0x118]
   140023758:	and    ebx,0x1
   14002375b:	je     0x140023765
   14002375d:	mov    rcx,rsi
   140023760:	call   0x140022680
   140023765:	mov    rax,QWORD PTR [rip+0x31d7c]        # 0x1400554e8
   14002376c:	mov    r8d,ebx
   14002376f:	mov    edx,edi
   140023771:	mov    rcx,r15
   140023774:	call   QWORD PTR [rax+0xc8]
   14002377a:	test   r14,r14
   14002377d:	jle    0x1400237c1
   14002377f:	lea    rbx,[r13+0x20]
   140023783:	nop    DWORD PTR [rax+0x0]
   140023787:	nop    WORD PTR [rax+rax*1+0x0]
   140023790:	mov    rax,QWORD PTR [rbx-0x10]
   140023794:	lea    rcx,[rsp+0x58]
   140023799:	mov    edx,0x2
   14002379e:	mov    QWORD PTR [rsp+0x58],rax
   1400237a3:	mov    rax,QWORD PTR [rbx]
   1400237a6:	mov    QWORD PTR [rsp+0x60],rax
   1400237ab:	mov    rax,QWORD PTR [rip+0x31d36]        # 0x1400554e8
   1400237b2:	call   QWORD PTR [rax+0xd8]
   1400237b8:	lea    rbx,[rbx+0x18]
   1400237bc:	dec    r14
   1400237bf:	jne    0x140023790
   1400237c1:	mov    rcx,r13
   1400237c4:	call   QWORD PTR [rip+0x19ad6]        # 0x14003d2a0
   1400237ca:	add    rsp,0xc8
   1400237d1:	pop    r15
   1400237d3:	pop    r14
   1400237d5:	pop    r13
   1400237d7:	pop    rdi
   1400237d8:	pop    rsi
   1400237d9:	pop    rbx
   1400237da:	ret    
   1400237db:	int3   
   1400237dc:	int3   
   1400237dd:	int3   
   1400237de:	int3   
   1400237df:	int3   
   1400237e0:	movsd  xmm0,QWORD PTR [r8+0x8]
   1400237e6:	movsd  xmm2,QWORD PTR [r8]
   1400237eb:	movsd  xmm4,QWORD PTR [r9+0x8]
   1400237f1:	xor    eax,eax
   1400237f3:	movsd  xmm3,QWORD PTR [r9]
   1400237f8:	subsd  xmm4,xmm0
   1400237fc:	xorps  xmm4,XMMWORD PTR [rip+0x19d6d]        # 0x14003d570
   140023803:	subsd  xmm3,xmm2
   140023807:	mulsd  xmm2,xmm4
   14002380b:	movaps xmm1,xmm3
   14002380e:	mulsd  xmm0,xmm3
   140023812:	mulsd  xmm3,QWORD PTR [rcx+0x8]
   140023817:	addsd  xmm2,xmm0
   14002381b:	movaps xmm0,xmm4
   14002381e:	mulsd  xmm0,QWORD PTR [rdx]
   140023822:	mulsd  xmm1,QWORD PTR [rdx+0x8]
   140023827:	mulsd  xmm4,QWORD PTR [rcx]
   14002382b:	mov    edx,eax
   14002382d:	mov    ecx,eax
   14002382f:	addsd  xmm1,xmm0
   140023833:	addsd  xmm3,xmm4
   140023837:	subsd  xmm1,xmm2
   14002383b:	subsd  xmm3,xmm2
   14002383f:	xorps  xmm0,xmm0
   140023842:	comisd xmm1,xmm0
   140023846:	setae  dl
   140023849:	comisd xmm3,xmm0
   14002384d:	setae  cl
   140023850:	cmp    ecx,edx
   140023852:	sete   al
   140023855:	ret    
   140023856:	int3   
   140023857:	int3   
   140023858:	int3   
   140023859:	int3   
   14002385a:	int3   
   14002385b:	int3   
   14002385c:	int3   
   14002385d:	int3   
   14002385e:	int3   
   14002385f:	int3   
   140023860:	mov    QWORD PTR [rsp+0x8],rbx
   140023865:	push   rdi
   140023866:	sub    rsp,0x30
   14002386a:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14002386f:	mov    rdi,r8
   140023872:	mov    rbx,rdx
   140023875:	movaps xmm6,xmm0
   140023878:	call   0x14003b884
   14002387d:	movsd  QWORD PTR [rbx],xmm0
   140023881:	movaps xmm0,xmm6
   140023884:	call   0x14003b87e
   140023889:	mov    rbx,QWORD PTR [rsp+0x40]
   14002388e:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140023893:	movsd  QWORD PTR [rdi],xmm0
   140023897:	add    rsp,0x30
   14002389b:	pop    rdi
   14002389c:	ret    
   14002389d:	int3   
   14002389e:	int3   
   14002389f:	int3   
   1400238a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400238a5:	push   rdi
   1400238a6:	sub    rsp,0x40
   1400238aa:	mov    rax,QWORD PTR [rdx+0x20]
   1400238ae:	mov    rdi,rdx
   1400238b1:	test   rax,rax
   1400238b4:	je     0x1400238d2
   1400238b6:	movups xmm0,XMMWORD PTR [rax+0x20]
   1400238ba:	lea    rcx,[rsp+0x20]
   1400238bf:	movaps XMMWORD PTR [rsp+0x20],xmm0
   1400238c4:	call   0x14001bbc0
   1400238c9:	mov    QWORD PTR [rdi],rax
   1400238cc:	add    rsp,0x40
   1400238d0:	pop    rdi
   1400238d1:	ret    
   1400238d2:	mov    QWORD PTR [rsp+0x68],rbx
   1400238d7:	xor    ebx,ebx
   1400238d9:	mov    QWORD PTR [rsp+0x38],rbp
   1400238de:	mov    QWORD PTR [rsp+0x30],rsi
   1400238e3:	mov    QWORD PTR [rsp+0x58],rbx
   1400238e8:	mov    esi,ebx
   1400238ea:	mov    ebp,ebx
   1400238ec:	cmp    DWORD PTR [rdx+0x18],ebx
   1400238ef:	jle    0x140023966
   1400238f1:	mov    eax,ebx
   1400238f3:	mov    QWORD PTR [rsp+0x60],rbx
   1400238f8:	nop    DWORD PTR [rax+rax*1+0x0]
   140023900:	mov    rdx,QWORD PTR [rdi+0x28]
   140023904:	mov    rdx,QWORD PTR [rax+rdx*1]
   140023908:	call   0x1400238a0
   14002390d:	cmp    DWORD PTR [rdi+0x30],0x0
   140023911:	je     0x14002392a
   140023913:	add    esi,eax
   140023915:	shr    rax,0x20
   140023919:	cmp    ebx,eax
   14002391b:	mov    DWORD PTR [rsp+0x58],esi
   14002391f:	cmovg  eax,ebx
   140023922:	mov    ebx,eax
   140023924:	mov    DWORD PTR [rsp+0x5c],eax
   140023928:	jmp    0x140023942
   14002392a:	mov    rcx,rax
   14002392d:	shr    rcx,0x20
   140023931:	add    ebx,ecx
   140023933:	cmp    esi,eax
   140023935:	cmovg  eax,esi
   140023938:	mov    DWORD PTR [rsp+0x5c],ebx
   14002393c:	mov    esi,eax
   14002393e:	mov    DWORD PTR [rsp+0x58],eax
   140023942:	mov    rax,QWORD PTR [rsp+0x60]
   140023947:	mov    rcx,QWORD PTR [rsp+0x50]
   14002394c:	inc    ebp
   14002394e:	add    rax,0x8
   140023952:	mov    QWORD PTR [rsp+0x60],rax
   140023957:	cmp    ebp,DWORD PTR [rdi+0x18]
   14002395a:	jl     0x140023900
   14002395c:	mov    rax,QWORD PTR [rsp+0x58]
   140023961:	mov    QWORD PTR [rdi],rax
   140023964:	jmp    0x14002396e
   140023966:	mov    rax,QWORD PTR [rsp+0x58]
   14002396b:	mov    QWORD PTR [rdx],rax
   14002396e:	mov    rbp,QWORD PTR [rsp+0x38]
   140023973:	mov    rbx,QWORD PTR [rsp+0x68]
   140023978:	mov    rsi,QWORD PTR [rsp+0x30]
   14002397d:	add    rsp,0x40
   140023981:	pop    rdi
   140023982:	ret    
   140023983:	int3   
   140023984:	int3   
   140023985:	int3   
   140023986:	int3   
   140023987:	int3   
   140023988:	int3   
   140023989:	int3   
   14002398a:	int3   
   14002398b:	int3   
   14002398c:	int3   
   14002398d:	int3   
   14002398e:	int3   
   14002398f:	int3   
   140023990:	mov    QWORD PTR [rsp+0x8],rbx
   140023995:	mov    QWORD PTR [rsp+0x10],rsi
   14002399a:	push   rdi
   14002399b:	sub    rsp,0x40
   14002399f:	mov    rbx,rcx
   1400239a2:	mov    rcx,QWORD PTR [rcx+0x38]
   1400239a6:	movaps XMMWORD PTR [rsp+0x30],xmm6
   1400239ab:	movsx  eax,WORD PTR [rbx+0x40]
   1400239af:	movaps XMMWORD PTR [rsp+0x20],xmm7
   1400239b4:	movzx  esi,r8b
   1400239b8:	xorps  xmm7,xmm7
   1400239bb:	add    eax,0x2
   1400239be:	mov    rdi,rdx
   1400239c1:	movaps xmm6,xmm7
   1400239c4:	test   rcx,rcx
   1400239c7:	je     0x1400239d8
   1400239c9:	movsxd rdx,eax
   1400239cc:	shl    rdx,0x4
   1400239d0:	call   QWORD PTR [rip+0x196d2]        # 0x14003d0a8
   1400239d6:	jmp    0x1400239e5
   1400239d8:	movsxd rcx,eax
   1400239db:	shl    rcx,0x4
   1400239df:	call   QWORD PTR [rip+0x19783]        # 0x14003d168
   1400239e5:	mov    rcx,rax
   1400239e8:	mov    QWORD PTR [rbx+0x38],rax
   1400239ec:	movsx  rax,WORD PTR [rbx+0x40]
   1400239f1:	add    rax,rax
   1400239f4:	mov    QWORD PTR [rcx+rax*8],rdi
   1400239f8:	test   rdi,rdi
   1400239fb:	je     0x140023a42
   1400239fd:	mov    rax,QWORD PTR [rip+0x31ae4]        # 0x1400554e8
   140023a04:	test   rax,rax
   140023a07:	je     0x140023a29
   140023a09:	cmp    QWORD PTR [rax+0xf8],0x0
   140023a11:	je     0x140023a29
   140023a13:	mov    rdx,QWORD PTR [rbx+0x8]
   140023a17:	movsd  xmm2,QWORD PTR [rbx+0x18]
   140023a1c:	mov    rcx,rdi
   140023a1f:	call   QWORD PTR [rax+0xf8]
   140023a25:	test   eax,eax
   140023a27:	jne    0x140023a3a
   140023a29:	mov    rdx,QWORD PTR [rbx+0x8]
   140023a2d:	movsd  xmm2,QWORD PTR [rbx+0x18]
   140023a32:	mov    rcx,rdi
   140023a35:	call   0x140026080
   140023a3a:	movd   xmm6,eax
   140023a3e:	cvtdq2pd xmm6,xmm6
   140023a42:	movsx  rcx,WORD PTR [rbx+0x40]
   140023a47:	mov    rax,QWORD PTR [rbx+0x38]
   140023a4b:	movsd  xmm1,QWORD PTR [rip+0x19a35]        # 0x14003d488
   140023a53:	add    rcx,rcx
   140023a56:	cvttsd2si edx,xmm6
   140023a5a:	mov    WORD PTR [rax+rcx*8+0x8],dx
   140023a5f:	movsx  rcx,WORD PTR [rbx+0x40]
   140023a64:	mov    rax,QWORD PTR [rbx+0x38]
   140023a68:	add    rcx,rcx
   140023a6b:	mov    BYTE PTR [rax+rcx*8+0xa],sil
   140023a70:	inc    WORD PTR [rbx+0x40]
   140023a74:	comisd xmm6,xmm7
   140023a78:	jbe    0x140023a8f
   140023a7a:	addsd  xmm6,QWORD PTR [rbx+0x18]
   140023a7f:	divsd  xmm6,xmm1
   140023a83:	comisd xmm6,QWORD PTR [rbx+0x20]
   140023a88:	jbe    0x140023a8f
   140023a8a:	movsd  QWORD PTR [rbx+0x20],xmm6
   140023a8f:	movsd  xmm0,QWORD PTR [rbx+0x18]
   140023a94:	movsx  eax,WORD PTR [rbx+0x40]
   140023a98:	mov    rsi,QWORD PTR [rsp+0x58]
   140023a9d:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140023aa2:	movaps xmm7,XMMWORD PTR [rsp+0x20]
   140023aa7:	mulsd  xmm0,QWORD PTR [rip+0x1b469]        # 0x14003ef18
   140023aaf:	cvttsd2si ecx,xmm0
   140023ab3:	imul   ecx,eax
   140023ab6:	mov    eax,0x4
   140023abb:	sub    eax,ecx
   140023abd:	movd   xmm0,eax
   140023ac1:	cvtdq2pd xmm0,xmm0
   140023ac5:	divsd  xmm0,xmm1
   140023ac9:	movsd  QWORD PTR [rbx+0x28],xmm0
   140023ace:	mov    rbx,QWORD PTR [rsp+0x50]
   140023ad3:	add    rsp,0x40
   140023ad7:	pop    rdi
   140023ad8:	ret    
   140023ad9:	int3   
   140023ada:	int3   
   140023adb:	int3   
   140023adc:	int3   
   140023add:	int3   
   140023ade:	int3   
   140023adf:	int3   
   140023ae0:	rex push rbx
   140023ae2:	sub    rsp,0x30
   140023ae6:	mov    rdx,QWORD PTR [rip+0x3191b]        # 0x140055408
   140023aed:	lea    r8,[rip+0x19924]        # 0x14003d418
   140023af4:	mov    QWORD PTR [rsp+0x40],rbp
   140023af9:	mov    rbp,rcx
   140023afc:	xor    ebx,ebx
   140023afe:	call   0x14001c3a0
   140023b03:	cmp    BYTE PTR [rax],bl
   140023b05:	je     0x140023be1
   140023b0b:	mov    rcx,rax
   140023b0e:	mov    QWORD PTR [rsp+0x48],rsi
   140023b13:	call   0x14001f070
   140023b18:	mov    rsi,rax
   140023b1b:	mov    rcx,rax
   140023b1e:	mov    rax,QWORD PTR [rip+0x319c3]        # 0x1400554e8
   140023b25:	call   QWORD PTR [rax+0xb8]
   140023b2b:	mov    r8,QWORD PTR [rsi]
   140023b2e:	test   r8,r8
   140023b31:	je     0x140023bdc
   140023b37:	mov    QWORD PTR [rsp+0x50],rdi
   140023b3c:	mov    QWORD PTR [rsp+0x28],r14
   140023b41:	mov    QWORD PTR [rsp+0x20],r15
   140023b46:	lea    r15,[rip+0x1b31b]        # 0x14003ee68
   140023b4d:	xor    edi,edi
   140023b4f:	lea    r14,[rip+0x1aeca]        # 0x14003ea20
   140023b56:	data16 nop WORD PTR [rax+rax*1+0x0]
   140023b60:	xor    ecx,ecx
   140023b62:	nop    DWORD PTR [rax+0x0]
   140023b66:	data16 nop WORD PTR [rax+rax*1+0x0]
   140023b70:	movzx  eax,BYTE PTR [r8+rcx*1]
   140023b75:	inc    rcx
   140023b78:	cmp    al,BYTE PTR [r14+rcx*1-0x1]
   140023b7d:	jne    0x140023b8a
   140023b7f:	cmp    rcx,0x7
   140023b83:	jne    0x140023b70
   140023b85:	or     ebx,0x1
   140023b88:	jmp    0x140023bc0
   140023b8a:	xor    eax,eax
   140023b8c:	nop    DWORD PTR [rax+0x0]
   140023b90:	movzx  ecx,BYTE PTR [r8+rax*1]
   140023b95:	inc    rax
   140023b98:	cmp    cl,BYTE PTR [r15+rax*1-0x1]
   140023b9d:	jne    0x140023baa
   140023b9f:	cmp    rax,0x8
   140023ba3:	jne    0x140023b90
   140023ba5:	or     ebx,0x2
   140023ba8:	jmp    0x140023bc0
   140023baa:	lea    rdx,[rip+0x1b2bf]        # 0x14003ee70
   140023bb1:	mov    rcx,r8
   140023bb4:	call   0x14003bc96
   140023bb9:	test   eax,eax
   140023bbb:	jne    0x140023bc0
   140023bbd:	or     ebx,0x4
   140023bc0:	mov    r8,QWORD PTR [rsi+rdi*8+0x8]
   140023bc5:	inc    rdi
   140023bc8:	test   r8,r8
   140023bcb:	jne    0x140023b60
   140023bcd:	mov    r15,QWORD PTR [rsp+0x20]
   140023bd2:	mov    r14,QWORD PTR [rsp+0x28]
   140023bd7:	mov    rdi,QWORD PTR [rsp+0x50]
   140023bdc:	mov    rsi,QWORD PTR [rsp+0x48]
   140023be1:	mov    rcx,QWORD PTR [rbp+0x28]
   140023be5:	mov    rbp,QWORD PTR [rsp+0x40]
   140023bea:	mov    rdx,QWORD PTR [rcx+0x38]
   140023bee:	test   rdx,rdx
   140023bf1:	je     0x140023bf6
   140023bf3:	or     ebx,DWORD PTR [rdx+0x28]
   140023bf6:	mov    eax,ebx
   140023bf8:	add    rsp,0x30
   140023bfc:	pop    rbx
   140023bfd:	ret    
   140023bfe:	int3   
   140023bff:	int3   
   140023c00:	mov    QWORD PTR [rsp+0x8],rbx
   140023c05:	push   rdi
   140023c06:	sub    rsp,0x20
   140023c0a:	mov    rbx,rdx
   140023c0d:	mov    rdi,rcx
   140023c10:	call   QWORD PTR [rip+0x196ba]        # 0x14003d2d0
   140023c16:	mov    r8,QWORD PTR [rdi+0x10]
   140023c1a:	lea    rdx,[rip+0x1b147]        # 0x14003ed68
   140023c21:	lea    rcx,[rax+0x60]
   140023c25:	mov    r9,rbx
   140023c28:	mov    rbx,QWORD PTR [rsp+0x30]
   140023c2d:	add    rsp,0x20
   140023c31:	pop    rdi
   140023c32:	rex.W jmp QWORD PTR [rip+0x19687]        # 0x14003d2c0
   140023c39:	int3   
   140023c3a:	int3   
   140023c3b:	int3   
   140023c3c:	int3   
   140023c3d:	int3   
   140023c3e:	int3   
   140023c3f:	int3   
   140023c40:	rex push rdi
   140023c42:	sub    rsp,0x20
   140023c46:	mov    rdi,rcx
   140023c49:	call   0x140022720
   140023c4e:	test   rax,rax
   140023c51:	jne    0x140023d42
   140023c57:	movsxd rax,DWORD PTR [rip+0x2ffc2]        # 0x140053c20
   140023c5e:	mov    rcx,QWORD PTR [rip+0x2ffb3]        # 0x140053c18
   140023c65:	mov    QWORD PTR [rsp+0x30],rbx
   140023c6a:	mov    QWORD PTR [rsp+0x38],rsi
   140023c6f:	mov    rsi,rax
   140023c72:	inc    eax
   140023c74:	mov    DWORD PTR [rip+0x2ffa6],eax        # 0x140053c20
   140023c7a:	test   rcx,rcx
   140023c7d:	je     0x140023c8e
   140023c7f:	movsxd rdx,eax
   140023c82:	shl    rdx,0x3
   140023c86:	call   QWORD PTR [rip+0x1941c]        # 0x14003d0a8
   140023c8c:	jmp    0x140023c9b
   140023c8e:	movsxd rcx,eax
   140023c91:	shl    rcx,0x3
   140023c95:	call   QWORD PTR [rip+0x194cd]        # 0x14003d168
   140023c9b:	mov    ecx,0x48
   140023ca0:	mov    QWORD PTR [rip+0x2ff71],rax        # 0x140053c18
   140023ca7:	call   0x14001d2c0
   140023cac:	mov    rbx,rax
   140023caf:	mov    rax,QWORD PTR [rip+0x2ff62]        # 0x140053c18
   140023cb6:	mov    QWORD PTR [rax+rsi*8],rbx
   140023cba:	mov    rsi,QWORD PTR [rsp+0x38]
   140023cbf:	movaps xmm0,XMMWORD PTR [rip+0x28a0a]        # 0x14004c6d0
   140023cc6:	movups XMMWORD PTR [rbx],xmm0
   140023cc9:	movaps xmm1,XMMWORD PTR [rip+0x28a10]        # 0x14004c6e0
   140023cd0:	movups XMMWORD PTR [rbx+0x10],xmm1
   140023cd4:	movaps xmm0,XMMWORD PTR [rip+0x28a15]        # 0x14004c6f0
   140023cdb:	movups XMMWORD PTR [rbx+0x20],xmm0
   140023cdf:	movaps xmm1,XMMWORD PTR [rip+0x28a1a]        # 0x14004c700
   140023ce6:	movups XMMWORD PTR [rbx+0x30],xmm1
   140023cea:	movsd  xmm0,QWORD PTR [rip+0x28a1e]        # 0x14004c710
   140023cf2:	movsd  QWORD PTR [rbx+0x40],xmm0
   140023cf7:	mov    QWORD PTR [rbx],rdi
   140023cfa:	mov    BYTE PTR [rbx+0x40],0x1
   140023cfe:	cmp    QWORD PTR [rip+0x317ca],0x0        # 0x1400554d0
   140023d06:	jne    0x140023d3a
   140023d08:	mov    rcx,QWORD PTR [rip+0x317d9]        # 0x1400554e8
   140023d0f:	cmp    QWORD PTR [rcx+0x100],0x0
   140023d17:	jne    0x140023d3a
   140023d19:	call   QWORD PTR [rip+0x195b1]        # 0x14003d2d0
   140023d1f:	mov    r8,QWORD PTR [rip+0x289aa]        # 0x14004c6d0
   140023d26:	lea    rdx,[rip+0x1b18b]        # 0x14003eeb8
   140023d2d:	lea    rcx,[rax+0x60]
   140023d31:	mov    r9,rdi
   140023d34:	call   QWORD PTR [rip+0x19586]        # 0x14003d2c0
   140023d3a:	mov    rax,rbx
   140023d3d:	mov    rbx,QWORD PTR [rsp+0x30]
   140023d42:	add    rsp,0x20
   140023d46:	pop    rdi
   140023d47:	ret    
   140023d48:	int3   
   140023d49:	int3   
   140023d4a:	int3   
   140023d4b:	int3   
   140023d4c:	int3   
   140023d4d:	int3   
   140023d4e:	int3   
   140023d4f:	int3   
   140023d50:	mov    QWORD PTR [rsp+0x8],rbx
   140023d55:	push   rdi
   140023d56:	sub    rsp,0x30
   140023d5a:	movzx  eax,BYTE PTR [rcx+0x90]
   140023d61:	mov    rdi,rdx
   140023d64:	mov    rbx,rcx
   140023d67:	mov    BYTE PTR [rip+0x2febb],al        # 0x140053c28
   140023d6d:	test   al,al
   140023d6f:	je     0x140023d78
   140023d71:	call   0x140024320
   140023d76:	jmp    0x140023d7d
   140023d78:	call   0x140024480
   140023d7d:	cmp    BYTE PTR [rip+0x2fea4],0x0        # 0x140053c28
   140023d84:	mov    rax,QWORD PTR [rbx+0x58]
   140023d88:	je     0x140023e22
   140023d8e:	test   rax,rax
   140023d91:	je     0x140023e09
   140023d93:	movsd  xmm0,QWORD PTR [rax+0x20]
   140023d98:	movsd  xmm2,QWORD PTR [rip+0x196e8]        # 0x14003d488
   140023da0:	movsd  xmm1,QWORD PTR [rip+0x19630]        # 0x14003d3d8
   140023da8:	xorps  xmm3,xmm3
   140023dab:	mulsd  xmm0,xmm2
   140023daf:	comisd xmm0,xmm3
   140023db3:	jb     0x140023dbb
   140023db5:	addsd  xmm0,xmm1
   140023db9:	jmp    0x140023dbf
   140023dbb:	subsd  xmm0,xmm1
   140023dbf:	cvttsd2si edx,xmm0
   140023dc3:	movsd  xmm0,QWORD PTR [rax+0x28]
   140023dc8:	mulsd  xmm0,xmm2
   140023dcc:	comisd xmm0,xmm3
   140023dd0:	jb     0x140023dd8
   140023dd2:	addsd  xmm0,xmm1
   140023dd6:	jmp    0x140023ddc
   140023dd8:	subsd  xmm0,xmm1
   140023ddc:	mov    r9d,DWORD PTR [rbx+0x6c]
   140023de0:	mov    r8d,DWORD PTR [rbx+0x64]
   140023de4:	cvttsd2si eax,xmm0
   140023de8:	sub    DWORD PTR [rbx+0x60],eax
   140023deb:	mov    ecx,r9d
   140023dee:	sub    ecx,r8d
   140023df1:	cmp    edx,ecx
   140023df3:	jle    0x140023e09
   140023df5:	mov    eax,edx
   140023df7:	cdq    
   140023df8:	sub    eax,edx
   140023dfa:	sar    eax,1
   140023dfc:	sub    r8d,eax
   140023dff:	add    eax,r9d
   140023e02:	mov    DWORD PTR [rbx+0x6c],eax
   140023e05:	mov    DWORD PTR [rbx+0x64],r8d
   140023e09:	mov    eax,DWORD PTR [rbx+0x6c]
   140023e0c:	neg    eax
   140023e0e:	mov    DWORD PTR [rip+0x2fe1c],eax        # 0x140053c30
   140023e14:	mov    eax,DWORD PTR [rbx+0x60]
   140023e17:	mov    DWORD PTR [rip+0x2fe17],eax        # 0x140053c34
   140023e1d:	jmp    0x140023ea8
   140023e22:	test   rax,rax
   140023e25:	je     0x140023e9d
   140023e27:	movsd  xmm0,QWORD PTR [rax+0x20]
   140023e2c:	movsd  xmm2,QWORD PTR [rip+0x19654]        # 0x14003d488
   140023e34:	movsd  xmm1,QWORD PTR [rip+0x1959c]        # 0x14003d3d8
   140023e3c:	xorps  xmm3,xmm3
   140023e3f:	mulsd  xmm0,xmm2
   140023e43:	comisd xmm0,xmm3
   140023e47:	jb     0x140023e4f
   140023e49:	addsd  xmm0,xmm1
   140023e4d:	jmp    0x140023e53
   140023e4f:	subsd  xmm0,xmm1
   140023e53:	cvttsd2si edx,xmm0
   140023e57:	movsd  xmm0,QWORD PTR [rax+0x28]
   140023e5c:	mulsd  xmm0,xmm2
   140023e60:	comisd xmm0,xmm3
   140023e64:	jb     0x140023e6c
   140023e66:	addsd  xmm0,xmm1
   140023e6a:	jmp    0x140023e70
   140023e6c:	subsd  xmm0,xmm1
   140023e70:	mov    r9d,DWORD PTR [rbx+0x68]
   140023e74:	mov    r8d,DWORD PTR [rbx+0x60]
   140023e78:	cvttsd2si eax,xmm0
   140023e7c:	sub    DWORD PTR [rbx+0x64],eax
   140023e7f:	mov    ecx,r9d
   140023e82:	sub    ecx,r8d
   140023e85:	cmp    edx,ecx
   140023e87:	jle    0x140023e9d
   140023e89:	mov    eax,edx
   140023e8b:	cdq    
   140023e8c:	sub    eax,edx
   140023e8e:	sar    eax,1
   140023e90:	sub    r8d,eax
   140023e93:	add    eax,r9d
   140023e96:	mov    DWORD PTR [rbx+0x68],eax
   140023e99:	mov    DWORD PTR [rbx+0x60],r8d
   140023e9d:	mov    rax,QWORD PTR [rbx+0x60]
   140023ea1:	mov    QWORD PTR [rip+0x2fd88],rax        # 0x140053c30
   140023ea8:	mov    rdx,rdi
   140023eab:	mov    rcx,rbx
   140023eae:	call   0x140024850
   140023eb3:	cmp    QWORD PTR [rbx+0x58],0x0
   140023eb8:	je     0x140023ec2
   140023eba:	mov    rcx,rbx
   140023ebd:	call   0x1400245b0
   140023ec2:	cmp    DWORD PTR [rip+0x315cf],0x0        # 0x140055498
   140023ec9:	je     0x140023f20
   140023ecb:	cmp    BYTE PTR [rip+0x2fd56],0x0        # 0x140053c28
   140023ed2:	je     0x140023ef1
   140023ed4:	call   QWORD PTR [rip+0x193f6]        # 0x14003d2d0
   140023eda:	mov    r9d,DWORD PTR [rip+0x2fd53]        # 0x140053c34
   140023ee1:	mov    r8d,DWORD PTR [rip+0x2fd48]        # 0x140053c30
   140023ee8:	lea    rdx,[rip+0x1b061]        # 0x14003ef50
   140023eef:	jmp    0x140023f0c
   140023ef1:	call   QWORD PTR [rip+0x193d9]        # 0x14003d2d0
   140023ef7:	mov    r9d,DWORD PTR [rip+0x2fd32]        # 0x140053c30
   140023efe:	mov    r8d,DWORD PTR [rip+0x2fd2f]        # 0x140053c34
   140023f05:	lea    rdx,[rip+0x1b0f4]        # 0x14003f000
   140023f0c:	mov    DWORD PTR [rsp+0x28],r9d
   140023f11:	lea    rcx,[rax+0x60]
   140023f15:	mov    DWORD PTR [rsp+0x20],r8d
   140023f1a:	call   QWORD PTR [rip+0x193a0]        # 0x14003d2c0
   140023f20:	mov    rbx,QWORD PTR [rsp+0x40]
   140023f25:	add    rsp,0x30
   140023f29:	pop    rdi
   140023f2a:	ret    
   140023f2b:	int3   
   140023f2c:	int3   
   140023f2d:	int3   
   140023f2e:	int3   
   140023f2f:	int3   
   140023f30:	rex push rbp
   140023f32:	push   rbx
   140023f33:	push   rdi
   140023f34:	mov    rbp,rsp
   140023f37:	sub    rsp,0x50
   140023f3b:	mov    rax,QWORD PTR [rcx+0x28]
   140023f3f:	mov    rdi,rcx
   140023f42:	test   rax,rax
   140023f45:	jne    0x140023f88
   140023f47:	cmp    BYTE PTR [rip+0x31543],al        # 0x140055490
   140023f4d:	je     0x140023f59
   140023f4f:	cmp    BYTE PTR [rcx+0x78],0x6
   140023f53:	je     0x1400241cc
   140023f59:	mov    rbx,QWORD PTR [rcx+0x10]
   140023f5d:	mov    rdi,QWORD PTR [rcx+0x18]
   140023f61:	call   QWORD PTR [rip+0x19369]        # 0x14003d2d0
   140023f67:	mov    r9,QWORD PTR [rbx+0x10]
   140023f6b:	mov    r8,QWORD PTR [rdi+0x10]
   140023f6f:	lea    rcx,[rax+0x60]
   140023f73:	lea    rdx,[rip+0x1afb6]        # 0x14003ef30
   140023f7a:	add    rsp,0x50
   140023f7e:	pop    rdi
   140023f7f:	pop    rbx
   140023f80:	pop    rbp
   140023f81:	rex.W jmp QWORD PTR [rip+0x19338]        # 0x14003d2c0
   140023f88:	movzx  ebx,BYTE PTR [rip+0x2fc99]        # 0x140053c28
   140023f8f:	mov    rcx,QWORD PTR [rip+0x2fc9a]        # 0x140053c30
   140023f96:	mov    r10d,DWORD PTR [rip+0x2fc97]        # 0x140053c34
   140023f9d:	mov    QWORD PTR [rsp+0x80],r14
   140023fa5:	xor    r14d,r14d
   140023fa8:	cmp    DWORD PTR [rax+0x8],r14d
   140023fac:	jle    0x1400240ed
   140023fb2:	mov    QWORD PTR [rsp+0x78],rsi
   140023fb7:	mov    esi,r14d
   140023fba:	nop    WORD PTR [rax+rax*1+0x0]
   140023fc0:	mov    rax,QWORD PTR [rax]
   140023fc3:	movups xmm0,XMMWORD PTR [rsi+rax*1]
   140023fc7:	movups xmm1,XMMWORD PTR [rsi+rax*1+0x10]
   140023fcc:	movups xmm2,xmm0
   140023fcf:	movups XMMWORD PTR [rbp-0x30],xmm0
   140023fd3:	movsd  xmm0,QWORD PTR [rsi+rax*1+0x20]
   140023fd9:	psrldq xmm2,0x8
   140023fde:	movsd  QWORD PTR [rbp-0x10],xmm0
   140023fe3:	movups XMMWORD PTR [rbp-0x20],xmm1
   140023fe7:	movd   eax,xmm2
   140023feb:	test   eax,eax
   140023fed:	jle    0x140024041
   140023fef:	mov    r9,QWORD PTR [rbp-0x30]
   140023ff3:	mov    r11d,eax
   140023ff6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140024000:	mov    rax,QWORD PTR [r9]
   140024003:	mov    QWORD PTR [rbp+0x20],rax
   140024007:	mov    edx,DWORD PTR [rbp+0x20]
   14002400a:	shr    rax,0x20
   14002400e:	test   bl,bl
   140024010:	je     0x140024025
   140024012:	lea    r8d,[rcx+rax*1]
   140024016:	neg    r8d
   140024019:	sub    edx,r10d
   14002401c:	mov    DWORD PTR [rbp+0x24],edx
   14002401f:	mov    DWORD PTR [rbp+0x20],r8d
   140024023:	jmp    0x140024030
   140024025:	sub    edx,ecx
   140024027:	sub    eax,r10d
   14002402a:	mov    DWORD PTR [rbp+0x24],eax
   14002402d:	mov    DWORD PTR [rbp+0x20],edx
   140024030:	mov    rax,QWORD PTR [rbp+0x20]
   140024034:	add    r9,0x8
   140024038:	mov    QWORD PTR [r9-0x8],rax
   14002403c:	dec    r11
   14002403f:	jne    0x140024000
   140024041:	cmp    DWORD PTR [rbp-0x24],0x0
   140024045:	je     0x14002408a
   140024047:	mov    rax,QWORD PTR [rdi+0x28]
   14002404b:	mov    r9,QWORD PTR [rax]
   14002404e:	mov    rax,QWORD PTR [r9+rsi*1+0x14]
   140024053:	mov    QWORD PTR [rbp+0x20],rax
   140024057:	mov    r8d,DWORD PTR [rbp+0x20]
   14002405b:	shr    rax,0x20
   14002405f:	test   bl,bl
   140024061:	je     0x140024074
   140024063:	lea    edx,[rcx+rax*1]
   140024066:	neg    edx
   140024068:	sub    r8d,r10d
   14002406b:	mov    DWORD PTR [rbp+0x24],r8d
   14002406f:	mov    DWORD PTR [rbp+0x20],edx
   140024072:	jmp    0x140024081
   140024074:	sub    r8d,ecx
   140024077:	sub    eax,r10d
   14002407a:	mov    DWORD PTR [rbp+0x24],eax
   14002407d:	mov    DWORD PTR [rbp+0x20],r8d
   140024081:	mov    rax,QWORD PTR [rbp+0x20]
   140024085:	mov    QWORD PTR [r9+rsi*1+0x14],rax
   14002408a:	cmp    DWORD PTR [rbp-0x20],0x0
   14002408e:	je     0x1400240d3
   140024090:	mov    rax,QWORD PTR [rdi+0x28]
   140024094:	mov    r9,QWORD PTR [rax]
   140024097:	mov    rax,QWORD PTR [r9+rsi*1+0x1c]
   14002409c:	mov    QWORD PTR [rbp+0x20],rax
   1400240a0:	mov    r8d,DWORD PTR [rbp+0x20]
   1400240a4:	shr    rax,0x20
   1400240a8:	test   bl,bl
   1400240aa:	je     0x1400240bd
   1400240ac:	lea    edx,[rcx+rax*1]
   1400240af:	neg    edx
   1400240b1:	sub    r8d,r10d
   1400240b4:	mov    DWORD PTR [rbp+0x24],r8d
   1400240b8:	mov    DWORD PTR [rbp+0x20],edx
   1400240bb:	jmp    0x1400240ca
   1400240bd:	sub    r8d,ecx
   1400240c0:	sub    eax,r10d
   1400240c3:	mov    DWORD PTR [rbp+0x24],eax
   1400240c6:	mov    DWORD PTR [rbp+0x20],r8d
   1400240ca:	mov    rax,QWORD PTR [rbp+0x20]
   1400240ce:	mov    QWORD PTR [r9+rsi*1+0x1c],rax
   1400240d3:	mov    rax,QWORD PTR [rdi+0x28]
   1400240d7:	inc    r14d
   1400240da:	add    rsi,0x28
   1400240de:	cmp    r14d,DWORD PTR [rax+0x8]
   1400240e2:	jl     0x140023fc0
   1400240e8:	mov    rsi,QWORD PTR [rsp+0x78]
   1400240ed:	mov    r9,QWORD PTR [rdi+0x60]
   1400240f1:	mov    r14,QWORD PTR [rsp+0x80]
   1400240f9:	test   r9,r9
   1400240fc:	je     0x140024138
   1400240fe:	mov    rax,QWORD PTR [r9+0x30]
   140024102:	mov    QWORD PTR [rbp+0x20],rax
   140024106:	mov    r8d,DWORD PTR [rbp+0x20]
   14002410a:	shr    rax,0x20
   14002410e:	test   bl,bl
   140024110:	je     0x140024123
   140024112:	lea    edx,[rax+rcx*1]
   140024115:	neg    edx
   140024117:	sub    r8d,r10d
   14002411a:	mov    DWORD PTR [rbp+0x24],r8d
   14002411e:	mov    DWORD PTR [rbp+0x20],edx
   140024121:	jmp    0x140024130
   140024123:	sub    r8d,ecx
   140024126:	sub    eax,r10d
   140024129:	mov    DWORD PTR [rbp+0x24],eax
   14002412c:	mov    DWORD PTR [rbp+0x20],r8d
   140024130:	mov    rax,QWORD PTR [rbp+0x20]
   140024134:	mov    QWORD PTR [r9+0x30],rax
   140024138:	mov    r9,QWORD PTR [rdi+0x68]
   14002413c:	test   r9,r9
   14002413f:	je     0x14002417b
   140024141:	mov    rax,QWORD PTR [r9+0x30]
   140024145:	mov    QWORD PTR [rbp+0x20],rax
   140024149:	mov    r8d,DWORD PTR [rbp+0x20]
   14002414d:	shr    rax,0x20
   140024151:	test   bl,bl
   140024153:	je     0x140024166
   140024155:	lea    edx,[rax+rcx*1]
   140024158:	neg    edx
   14002415a:	sub    r8d,r10d
   14002415d:	mov    DWORD PTR [rbp+0x24],r8d
   140024161:	mov    DWORD PTR [rbp+0x20],edx
   140024164:	jmp    0x140024173
   140024166:	sub    r8d,ecx
   140024169:	sub    eax,r10d
   14002416c:	mov    DWORD PTR [rbp+0x24],eax
   14002416f:	mov    DWORD PTR [rbp+0x20],r8d
   140024173:	mov    rax,QWORD PTR [rbp+0x20]
   140024177:	mov    QWORD PTR [r9+0x30],rax
   14002417b:	mov    r9,QWORD PTR [rdi+0x70]
   14002417f:	test   r9,r9
   140024182:	je     0x1400241cc
   140024184:	mov    rax,QWORD PTR [r9+0x30]
   140024188:	mov    QWORD PTR [rbp+0x20],rax
   14002418c:	mov    r8d,DWORD PTR [rbp+0x20]
   140024190:	shr    rax,0x20
   140024194:	test   bl,bl
   140024196:	je     0x1400241b7
   140024198:	lea    edx,[rax+rcx*1]
   14002419b:	neg    edx
   14002419d:	sub    r8d,r10d
   1400241a0:	mov    DWORD PTR [rbp+0x24],r8d
   1400241a4:	mov    DWORD PTR [rbp+0x20],edx
   1400241a7:	mov    rax,QWORD PTR [rbp+0x20]
   1400241ab:	mov    QWORD PTR [r9+0x30],rax
   1400241af:	add    rsp,0x50
   1400241b3:	pop    rdi
   1400241b4:	pop    rbx
   1400241b5:	pop    rbp
   1400241b6:	ret    
   1400241b7:	sub    r8d,ecx
   1400241ba:	sub    eax,r10d
   1400241bd:	mov    DWORD PTR [rbp+0x24],eax
   1400241c0:	mov    DWORD PTR [rbp+0x20],r8d
   1400241c4:	mov    rax,QWORD PTR [rbp+0x20]
   1400241c8:	mov    QWORD PTR [r9+0x30],rax
   1400241cc:	add    rsp,0x50
   1400241d0:	pop    rdi
   1400241d1:	pop    rbx
   1400241d2:	pop    rbp
   1400241d3:	ret    
   1400241d4:	int3   
   1400241d5:	int3   
   1400241d6:	int3   
   1400241d7:	int3   
   1400241d8:	int3   
   1400241d9:	int3   
   1400241da:	int3   
   1400241db:	int3   
   1400241dc:	int3   
   1400241dd:	int3   
   1400241de:	int3   
   1400241df:	int3   
   1400241e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400241e5:	mov    r8d,DWORD PTR [rsp+0x8]
   1400241ea:	shr    rcx,0x20
   1400241ee:	cmp    BYTE PTR [rip+0x2fa33],0x0        # 0x140053c28
   1400241f5:	je     0x140024217
   1400241f7:	mov    edx,DWORD PTR [rip+0x2fa33]        # 0x140053c30
   1400241fd:	add    edx,ecx
   1400241ff:	neg    edx
   140024201:	sub    r8d,DWORD PTR [rip+0x2fa2c]        # 0x140053c34
   140024208:	mov    DWORD PTR [rsp+0xc],r8d
   14002420d:	mov    DWORD PTR [rsp+0x8],edx
   140024211:	mov    rax,QWORD PTR [rsp+0x8]
   140024216:	ret    
   140024217:	sub    r8d,DWORD PTR [rip+0x2fa12]        # 0x140053c30
   14002421e:	sub    ecx,DWORD PTR [rip+0x2fa10]        # 0x140053c34
   140024224:	mov    DWORD PTR [rsp+0x8],r8d
   140024229:	mov    DWORD PTR [rsp+0xc],ecx
   14002422d:	mov    rax,QWORD PTR [rsp+0x8]
   140024232:	ret    
   140024233:	int3   
   140024234:	int3   
   140024235:	int3   
   140024236:	int3   
   140024237:	int3   
   140024238:	int3   
   140024239:	int3   
   14002423a:	int3   
   14002423b:	int3   
   14002423c:	int3   
   14002423d:	int3   
   14002423e:	int3   
   14002423f:	int3   
   140024240:	mov    QWORD PTR [rsp+0x10],rsi
   140024245:	mov    QWORD PTR [rsp+0x18],rdi
   14002424a:	mov    QWORD PTR [rsp+0x20],r14
   14002424f:	push   r15
   140024251:	sub    rsp,0x20
   140024255:	movsd  xmm0,QWORD PTR [rcx+0x20]
   14002425a:	movsd  xmm2,QWORD PTR [rip+0x19226]        # 0x14003d488
   140024262:	movsd  xmm1,QWORD PTR [rip+0x1916e]        # 0x14003d3d8
   14002426a:	xorps  xmm3,xmm3
   14002426d:	mov    r14,r9
   140024270:	mov    r15,r8
   140024273:	mulsd  xmm0,xmm2
   140024277:	mov    rdi,rdx
   14002427a:	mov    rsi,rcx
   14002427d:	comisd xmm0,xmm3
   140024281:	jb     0x140024289
   140024283:	addsd  xmm0,xmm1
   140024287:	jmp    0x14002428d
   140024289:	subsd  xmm0,xmm1
   14002428d:	cvttsd2si eax,xmm0
   140024291:	movsd  xmm0,QWORD PTR [rcx+0x28]
   140024296:	mulsd  xmm0,xmm2
   14002429a:	cdq    
   14002429b:	sub    eax,edx
   14002429d:	sar    eax,1
   14002429f:	comisd xmm0,xmm3
   1400242a3:	mov    DWORD PTR [rsp+0x30],eax
   1400242a7:	jb     0x1400242af
   1400242a9:	addsd  xmm0,xmm1
   1400242ad:	jmp    0x1400242b3
   1400242af:	subsd  xmm0,xmm1
   1400242b3:	mov    rcx,QWORD PTR [rcx+0x30]
   1400242b7:	cvttsd2si eax,xmm0
   1400242bb:	cdq    
   1400242bc:	sub    eax,edx
   1400242be:	sar    eax,1
   1400242c0:	mov    DWORD PTR [rsp+0x34],eax
   1400242c4:	mov    rdx,QWORD PTR [rsp+0x30]
   1400242c9:	call   0x14001b3e0
   1400242ce:	mov    rcx,QWORD PTR [rsp+0x50]
   1400242d3:	cmp    DWORD PTR [rcx],eax
   1400242d5:	jge    0x1400242d9
   1400242d7:	mov    DWORD PTR [rcx],eax
   1400242d9:	shr    rax,0x20
   1400242dd:	cmp    DWORD PTR [r15],eax
   1400242e0:	jge    0x1400242e5
   1400242e2:	mov    DWORD PTR [r15],eax
   1400242e5:	mov    rdx,QWORD PTR [rsp+0x30]
   1400242ea:	mov    rcx,QWORD PTR [rsi+0x30]
   1400242ee:	call   0x14001d0b0
   1400242f3:	cmp    DWORD PTR [r14],eax
   1400242f6:	jle    0x1400242fb
   1400242f8:	mov    DWORD PTR [r14],eax
   1400242fb:	shr    rax,0x20
   1400242ff:	cmp    DWORD PTR [rdi],eax
   140024301:	jle    0x140024305
   140024303:	mov    DWORD PTR [rdi],eax
   140024305:	mov    rsi,QWORD PTR [rsp+0x38]
   14002430a:	mov    rdi,QWORD PTR [rsp+0x40]
   14002430f:	mov    r14,QWORD PTR [rsp+0x48]
   140024314:	add    rsp,0x20
   140024318:	pop    r15
   14002431a:	ret    
   14002431b:	int3   
   14002431c:	int3   
   14002431d:	int3   
   14002431e:	int3   
   14002431f:	int3   
   140024320:	mov    QWORD PTR [rsp+0x20],rbx
   140024325:	push   rdi
   140024326:	sub    rsp,0x30
   14002432a:	mov    rdi,rcx
   14002432d:	cmp    rcx,QWORD PTR [rcx+0x38]
   140024331:	je     0x14002442e
   140024337:	mov    rax,QWORD PTR [rcx+0x58]
   14002433b:	test   rax,rax
   14002433e:	je     0x14002442e
   140024344:	movups xmm0,XMMWORD PTR [rax+0x20]
   140024348:	lea    rcx,[rsp+0x20]
   14002434d:	movaps XMMWORD PTR [rsp+0x20],xmm0
   140024352:	call   0x14001bbc0
   140024357:	lea    rdx,[rip+0x1ad4a]        # 0x14003f0a8
   14002435e:	mov    rcx,rdi
   140024361:	mov    rbx,rax
   140024364:	mov    QWORD PTR [rsp+0x48],rax
   140024369:	call   0x1400275b0
   14002436e:	test   rax,rax
   140024371:	je     0x140024399
   140024373:	cmp    BYTE PTR [rax],0x72
   140024376:	jne    0x140024399
   140024378:	mov    eax,ebx
   14002437a:	cdq    
   14002437b:	sub    eax,edx
   14002437d:	mov    edx,DWORD PTR [rdi+0x64]
   140024380:	sar    eax,1
   140024382:	add    edx,eax
   140024384:	mov    DWORD PTR [rsp+0x44],edx
   140024388:	lea    ecx,[rax+rdx*1]
   14002438b:	mov    rax,QWORD PTR [rdi+0x38]
   14002438f:	cmp    DWORD PTR [rax+0x6c],ecx
   140024392:	jge    0x1400243b7
   140024394:	mov    DWORD PTR [rax+0x6c],ecx
   140024397:	jmp    0x1400243b7
   140024399:	mov    ecx,DWORD PTR [rdi+0x6c]
   14002439c:	mov    eax,ebx
   14002439e:	cdq    
   14002439f:	sub    eax,edx
   1400243a1:	sar    eax,1
   1400243a3:	sub    ecx,eax
   1400243a5:	mov    DWORD PTR [rsp+0x44],ecx
   1400243a9:	sub    ecx,eax
   1400243ab:	mov    rax,QWORD PTR [rdi+0x38]
   1400243af:	cmp    DWORD PTR [rax+0x64],ecx
   1400243b2:	jle    0x1400243b7
   1400243b4:	mov    DWORD PTR [rax+0x64],ecx
   1400243b7:	lea    rdx,[rip+0x1a49a]        # 0x14003e858
   1400243be:	mov    rcx,rdi
   1400243c1:	call   0x1400275b0
   1400243c6:	test   rax,rax
   1400243c9:	je     0x1400243fb
   1400243cb:	cmp    BYTE PTR [rax],0x62
   1400243ce:	jne    0x1400243fb
   1400243d0:	mov    eax,DWORD PTR [rsp+0x4c]
   1400243d4:	mov    r9d,DWORD PTR [rdi+0x60]
   1400243d8:	cdq    
   1400243d9:	mov    ecx,r9d
   1400243dc:	sub    r9d,DWORD PTR [rsp+0x4c]
   1400243e1:	sub    eax,edx
   1400243e3:	sar    eax,1
   1400243e5:	sub    ecx,eax
   1400243e7:	mov    rax,QWORD PTR [rdi+0x38]
   1400243eb:	mov    DWORD PTR [rsp+0x40],ecx
   1400243ef:	cmp    DWORD PTR [rax+0x60],r9d
   1400243f3:	jle    0x140024421
   1400243f5:	mov    DWORD PTR [rax+0x60],r9d
   1400243f9:	jmp    0x140024421
   1400243fb:	mov    ecx,DWORD PTR [rsp+0x4c]
   1400243ff:	mov    r8d,DWORD PTR [rdi+0x68]
   140024403:	mov    eax,ecx
   140024405:	cdq    
   140024406:	sub    eax,edx
   140024408:	sar    eax,1
   14002440a:	add    eax,r8d
   14002440d:	mov    DWORD PTR [rsp+0x40],eax
   140024411:	lea    eax,[r8+rcx*1]
   140024415:	mov    rcx,QWORD PTR [rdi+0x38]
   140024419:	cmp    DWORD PTR [rcx+0x68],eax
   14002441c:	jge    0x140024421
   14002441e:	mov    DWORD PTR [rcx+0x68],eax
   140024421:	mov    rcx,QWORD PTR [rdi+0x58]
   140024425:	mov    rax,QWORD PTR [rsp+0x40]
   14002442a:	mov    QWORD PTR [rcx+0x30],rax
   14002442e:	mov    ebx,0x1
   140024433:	cmp    DWORD PTR [rdi+0xdc],ebx
   140024439:	jl     0x140024473
   14002443b:	mov    QWORD PTR [rsp+0x50],rsi
   140024440:	mov    esi,0x8
   140024445:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140024450:	mov    rcx,QWORD PTR [rdi+0xe0]
   140024457:	mov    rcx,QWORD PTR [rsi+rcx*1]
   14002445b:	call   0x140024320
   140024460:	inc    ebx
   140024462:	lea    rsi,[rsi+0x8]
   140024466:	cmp    ebx,DWORD PTR [rdi+0xdc]
   14002446c:	jle    0x140024450
   14002446e:	mov    rsi,QWORD PTR [rsp+0x50]
   140024473:	mov    rbx,QWORD PTR [rsp+0x58]
   140024478:	add    rsp,0x30
   14002447c:	pop    rdi
   14002447d:	ret    
   14002447e:	int3   
   14002447f:	int3   
   140024480:	mov    QWORD PTR [rsp+0x20],rbx
   140024485:	push   rdi
   140024486:	sub    rsp,0x30
   14002448a:	mov    rdi,rcx
   14002448d:	cmp    rcx,QWORD PTR [rcx+0x38]
   140024491:	je     0x140024561
   140024497:	mov    rax,QWORD PTR [rcx+0x58]
   14002449b:	test   rax,rax
   14002449e:	je     0x140024561
   1400244a4:	movups xmm0,XMMWORD PTR [rax+0x20]
   1400244a8:	lea    rcx,[rsp+0x20]
   1400244ad:	movaps XMMWORD PTR [rsp+0x20],xmm0
   1400244b2:	call   0x14001bbc0
   1400244b7:	lea    rdx,[rip+0x1abea]        # 0x14003f0a8
   1400244be:	mov    rcx,rdi
   1400244c1:	mov    rbx,rax
   1400244c4:	mov    QWORD PTR [rsp+0x48],rax
   1400244c9:	call   0x1400275b0
   1400244ce:	test   rax,rax
   1400244d1:	je     0x1400244f8
   1400244d3:	cmp    BYTE PTR [rax],0x72
   1400244d6:	jne    0x1400244f8
   1400244d8:	mov    ecx,DWORD PTR [rdi+0x68]
   1400244db:	mov    eax,ebx
   1400244dd:	cdq    
   1400244de:	sub    eax,edx
   1400244e0:	sar    eax,1
   1400244e2:	sub    ecx,eax
   1400244e4:	mov    DWORD PTR [rsp+0x40],ecx
   1400244e8:	sub    ecx,eax
   1400244ea:	mov    rax,QWORD PTR [rdi+0x38]
   1400244ee:	cmp    DWORD PTR [rax+0x60],ecx
   1400244f1:	jle    0x140024517
   1400244f3:	mov    DWORD PTR [rax+0x60],ecx
   1400244f6:	jmp    0x140024517
   1400244f8:	mov    eax,ebx
   1400244fa:	cdq    
   1400244fb:	sub    eax,edx
   1400244fd:	mov    edx,DWORD PTR [rdi+0x60]
   140024500:	sar    eax,1
   140024502:	add    edx,eax
   140024504:	mov    DWORD PTR [rsp+0x40],edx
   140024508:	lea    ecx,[rax+rdx*1]
   14002450b:	mov    rax,QWORD PTR [rdi+0x38]
   14002450f:	cmp    DWORD PTR [rax+0x68],ecx
   140024512:	jge    0x140024517
   140024514:	mov    DWORD PTR [rax+0x68],ecx
   140024517:	lea    rdx,[rip+0x1a33a]        # 0x14003e858
   14002451e:	mov    rcx,rdi
   140024521:	call   0x1400275b0
   140024526:	test   rax,rax
   140024529:	je     0x140024542
   14002452b:	cmp    BYTE PTR [rax],0x62
   14002452e:	jne    0x140024542
   140024530:	mov    eax,DWORD PTR [rsp+0x4c]
   140024534:	cdq    
   140024535:	sub    eax,edx
   140024537:	sar    eax,1
   140024539:	add    eax,DWORD PTR [rdi+0x64]
   14002453c:	mov    DWORD PTR [rsp+0x44],eax
   140024540:	jmp    0x140024554
   140024542:	mov    eax,DWORD PTR [rsp+0x4c]
   140024546:	mov    ecx,DWORD PTR [rdi+0x6c]
   140024549:	cdq    
   14002454a:	sub    eax,edx
   14002454c:	sar    eax,1
   14002454e:	sub    ecx,eax
   140024550:	mov    DWORD PTR [rsp+0x44],ecx
   140024554:	mov    rcx,QWORD PTR [rdi+0x58]
   140024558:	mov    rax,QWORD PTR [rsp+0x40]
   14002455d:	mov    QWORD PTR [rcx+0x30],rax
   140024561:	mov    ebx,0x1
   140024566:	cmp    DWORD PTR [rdi+0xdc],ebx
   14002456c:	jl     0x1400245a3
   14002456e:	mov    QWORD PTR [rsp+0x50],rsi
   140024573:	mov    esi,0x8
   140024578:	nop    DWORD PTR [rax+rax*1+0x0]
   140024580:	mov    rcx,QWORD PTR [rdi+0xe0]
   140024587:	mov    rcx,QWORD PTR [rcx+rsi*1]
   14002458b:	call   0x140024480
   140024590:	inc    ebx
   140024592:	lea    rsi,[rsi+0x8]
   140024596:	cmp    ebx,DWORD PTR [rdi+0xdc]
   14002459c:	jle    0x140024580
   14002459e:	mov    rsi,QWORD PTR [rsp+0x50]
   1400245a3:	mov    rbx,QWORD PTR [rsp+0x58]
   1400245a8:	add    rsp,0x30
   1400245ac:	pop    rdi
   1400245ad:	ret    
   1400245ae:	int3   
   1400245af:	int3   
   1400245b0:	rex push rbx
   1400245b2:	sub    rsp,0x30
   1400245b6:	mov    rax,QWORD PTR [rcx+0x58]
   1400245ba:	mov    rbx,rcx
   1400245bd:	lea    rcx,[rsp+0x20]
   1400245c2:	movups xmm0,XMMWORD PTR [rax+0x20]
   1400245c6:	movaps XMMWORD PTR [rsp+0x20],xmm0
   1400245cb:	call   0x14001bbc0
   1400245d0:	mov    rcx,QWORD PTR [rbx+0x58]
   1400245d4:	mov    r8,rax
   1400245d7:	shr    r8,0x20
   1400245db:	cmp    BYTE PTR [rip+0x2f646],0x0        # 0x140053c28
   1400245e2:	je     0x140024611
   1400245e4:	mov    eax,DWORD PTR [rbx+0x6c]
   1400245e7:	add    eax,DWORD PTR [rbx+0x64]
   1400245ea:	cdq    
   1400245eb:	sub    eax,edx
   1400245ed:	sar    eax,1
   1400245ef:	mov    DWORD PTR [rsp+0x44],eax
   1400245f3:	mov    eax,r8d
   1400245f6:	cdq    
   1400245f7:	sub    eax,edx
   1400245f9:	sar    eax,1
   1400245fb:	add    eax,DWORD PTR [rbx+0x60]
   1400245fe:	mov    DWORD PTR [rsp+0x40],eax
   140024602:	mov    rax,QWORD PTR [rsp+0x40]
   140024607:	mov    QWORD PTR [rcx+0x30],rax
   14002460b:	add    rsp,0x30
   14002460f:	pop    rbx
   140024610:	ret    
   140024611:	mov    eax,DWORD PTR [rbx+0x68]
   140024614:	add    eax,DWORD PTR [rbx+0x60]
   140024617:	cdq    
   140024618:	sub    eax,edx
   14002461a:	sar    eax,1
   14002461c:	mov    DWORD PTR [rsp+0x40],eax
   140024620:	mov    eax,r8d
   140024623:	cdq    
   140024624:	sub    eax,edx
   140024626:	sar    eax,1
   140024628:	add    eax,DWORD PTR [rbx+0x64]
   14002462b:	mov    DWORD PTR [rsp+0x44],eax
   14002462f:	mov    rax,QWORD PTR [rsp+0x40]
   140024634:	mov    QWORD PTR [rcx+0x30],rax
   140024638:	add    rsp,0x30
   14002463c:	pop    rbx
   14002463d:	ret    
   14002463e:	int3   
   14002463f:	int3   
   140024640:	mov    DWORD PTR [rsp+0x10],edx
   140024644:	push   rbp
   140024645:	push   rbx
   140024646:	push   rsi
   140024647:	mov    rbp,rsp
   14002464a:	sub    rsp,0x40
   14002464e:	movups xmm0,XMMWORD PTR [rcx+0x60]
   140024652:	mov    rsi,rcx
   140024655:	movups XMMWORD PTR [rbp-0x20],xmm0
   140024659:	mov    ecx,DWORD PTR [rbp-0x20]
   14002465c:	test   edx,edx
   14002465e:	je     0x140024708
   140024664:	mov    rbx,QWORD PTR [rbp-0x18]
   140024668:	mov    rdx,rbx
   14002466b:	shr    rdx,0x20
   14002466f:	call   0x14001c660
   140024674:	mov    QWORD PTR [rbp+0x20],rax
   140024678:	mov    r8d,DWORD PTR [rbp+0x20]
   14002467c:	shr    rax,0x20
   140024680:	cmp    BYTE PTR [rip+0x2f5a1],0x0        # 0x140053c28
   140024687:	je     0x1400246a3
   140024689:	mov    edx,DWORD PTR [rip+0x2f5a1]        # 0x140053c30
   14002468f:	add    edx,eax
   140024691:	neg    edx
   140024693:	sub    r8d,DWORD PTR [rip+0x2f59a]        # 0x140053c34
   14002469a:	mov    DWORD PTR [rbp+0x24],r8d
   14002469e:	mov    DWORD PTR [rbp+0x20],edx
   1400246a1:	jmp    0x1400246b7
   1400246a3:	sub    r8d,DWORD PTR [rip+0x2f586]        # 0x140053c30
   1400246aa:	sub    eax,DWORD PTR [rip+0x2f584]        # 0x140053c34
   1400246b0:	mov    DWORD PTR [rbp+0x24],eax
   1400246b3:	mov    DWORD PTR [rbp+0x20],r8d
   1400246b7:	mov    rax,QWORD PTR [rbp+0x20]
   1400246bb:	mov    edx,DWORD PTR [rbp-0x1c]
   1400246be:	mov    ecx,ebx
   1400246c0:	mov    QWORD PTR [rbp-0x10],rax
   1400246c4:	call   0x14001c660
   1400246c9:	movzx  r11d,BYTE PTR [rip+0x2f557]        # 0x140053c28
   1400246d1:	mov    rcx,QWORD PTR [rip+0x2f558]        # 0x140053c30
   1400246d8:	mov    r8d,DWORD PTR [rip+0x2f555]        # 0x140053c34
   1400246df:	mov    QWORD PTR [rbp+0x20],rax
   1400246e3:	mov    r9d,DWORD PTR [rbp+0x20]
   1400246e7:	shr    rax,0x20
   1400246eb:	test   r11b,r11b
   1400246ee:	je     0x14002479e
   1400246f4:	lea    edx,[rcx+rax*1]
   1400246f7:	neg    edx
   1400246f9:	sub    r9d,r8d
   1400246fc:	mov    DWORD PTR [rbp+0x24],r9d
   140024700:	mov    DWORD PTR [rbp+0x20],edx
   140024703:	jmp    0x1400247ab
   140024708:	mov    edx,DWORD PTR [rbp-0x1c]
   14002470b:	call   0x14001c660
   140024710:	mov    QWORD PTR [rbp+0x20],rax
   140024714:	mov    r8d,DWORD PTR [rbp+0x20]
   140024718:	shr    rax,0x20
   14002471c:	cmp    BYTE PTR [rip+0x2f505],0x0        # 0x140053c28
   140024723:	je     0x14002473f
   140024725:	mov    edx,DWORD PTR [rip+0x2f505]        # 0x140053c30
   14002472b:	add    edx,eax
   14002472d:	neg    edx
   14002472f:	sub    r8d,DWORD PTR [rip+0x2f4fe]        # 0x140053c34
   140024736:	mov    DWORD PTR [rbp+0x24],r8d
   14002473a:	mov    DWORD PTR [rbp+0x20],edx
   14002473d:	jmp    0x140024753
   14002473f:	sub    r8d,DWORD PTR [rip+0x2f4ea]        # 0x140053c30
   140024746:	sub    eax,DWORD PTR [rip+0x2f4e8]        # 0x140053c34
   14002474c:	mov    DWORD PTR [rbp+0x24],eax
   14002474f:	mov    DWORD PTR [rbp+0x20],r8d
   140024753:	mov    rax,QWORD PTR [rbp+0x20]
   140024757:	mov    edx,DWORD PTR [rbp-0x14]
   14002475a:	mov    ecx,DWORD PTR [rbp-0x18]
   14002475d:	mov    QWORD PTR [rbp-0x10],rax
   140024761:	call   0x14001c660
   140024766:	movzx  r11d,BYTE PTR [rip+0x2f4ba]        # 0x140053c28
   14002476e:	mov    rcx,QWORD PTR [rip+0x2f4bb]        # 0x140053c30
   140024775:	mov    r8d,DWORD PTR [rip+0x2f4b8]        # 0x140053c34
   14002477c:	mov    QWORD PTR [rbp+0x20],rax
   140024780:	mov    r9d,DWORD PTR [rbp+0x20]
   140024784:	shr    rax,0x20
   140024788:	test   r11b,r11b
   14002478b:	je     0x14002479e
   14002478d:	lea    edx,[rax+rcx*1]
   140024790:	neg    edx
   140024792:	sub    r9d,r8d
   140024795:	mov    DWORD PTR [rbp+0x24],r9d
   140024799:	mov    DWORD PTR [rbp+0x20],edx
   14002479c:	jmp    0x1400247ab
   14002479e:	sub    r9d,ecx
   1400247a1:	sub    eax,r8d
   1400247a4:	mov    DWORD PTR [rbp+0x24],eax
   1400247a7:	mov    DWORD PTR [rbp+0x20],r9d
   1400247ab:	mov    rax,QWORD PTR [rbp+0x20]
   1400247af:	mov    r10,QWORD PTR [rsi+0x58]
   1400247b3:	mov    QWORD PTR [rbp-0x8],rax
   1400247b7:	movups xmm0,XMMWORD PTR [rbp-0x10]
   1400247bb:	movups XMMWORD PTR [rsi+0x60],xmm0
   1400247bf:	test   r10,r10
   1400247c2:	je     0x1400247ff
   1400247c4:	mov    rax,QWORD PTR [r10+0x30]
   1400247c8:	mov    QWORD PTR [rbp+0x20],rax
   1400247cc:	mov    r9d,DWORD PTR [rbp+0x20]
   1400247d0:	shr    rax,0x20
   1400247d4:	test   r11b,r11b
   1400247d7:	je     0x1400247ea
   1400247d9:	lea    edx,[rax+rcx*1]
   1400247dc:	neg    edx
   1400247de:	sub    r9d,r8d
   1400247e1:	mov    DWORD PTR [rbp+0x24],r9d
   1400247e5:	mov    DWORD PTR [rbp+0x20],edx
   1400247e8:	jmp    0x1400247f7
   1400247ea:	sub    r9d,ecx
   1400247ed:	sub    eax,r8d
   1400247f0:	mov    DWORD PTR [rbp+0x24],eax
   1400247f3:	mov    DWORD PTR [rbp+0x20],r9d
   1400247f7:	mov    rax,QWORD PTR [rbp+0x20]
   1400247fb:	mov    QWORD PTR [r10+0x30],rax
   1400247ff:	mov    ebx,0x1
   140024804:	cmp    DWORD PTR [rsi+0xdc],ebx
   14002480a:	jl     0x140024846
   14002480c:	mov    QWORD PTR [rsp+0x70],rdi
   140024811:	mov    edi,0x8
   140024816:	data16 nop WORD PTR [rax+rax*1+0x0]
   140024820:	mov    rcx,QWORD PTR [rsi+0xe0]
   140024827:	mov    edx,DWORD PTR [rbp+0x28]
   14002482a:	mov    rcx,QWORD PTR [rdi+rcx*1]
   14002482e:	call   0x140024640
   140024833:	inc    ebx
   140024835:	lea    rdi,[rdi+0x8]
   140024839:	cmp    ebx,DWORD PTR [rsi+0xdc]
   14002483f:	jle    0x140024820
   140024841:	mov    rdi,QWORD PTR [rsp+0x70]
   140024846:	add    rsp,0x40
   14002484a:	pop    rsi
   14002484b:	pop    rbx
   14002484c:	pop    rbp
   14002484d:	ret    
   14002484e:	int3   
   14002484f:	int3   
   140024850:	mov    QWORD PTR [rsp+0x18],rbp
   140024855:	mov    QWORD PTR [rsp+0x20],rsi
   14002485a:	push   rdi
   14002485b:	sub    rsp,0x20
   14002485f:	mov    rbp,rdx
   140024862:	mov    rdi,rcx
   140024865:	call   0x14002a4e0
   14002486a:	mov    rsi,rax
   14002486d:	test   rax,rax
   140024870:	je     0x140024927
   140024876:	mov    QWORD PTR [rsp+0x38],rbx
   14002487b:	nop    DWORD PTR [rax+rax*1+0x0]
   140024880:	xor    edx,edx
   140024882:	mov    rcx,rsi
   140024885:	call   rbp
   140024887:	mov    rdx,QWORD PTR [rsi+0x38]
   14002488b:	mov    QWORD PTR [rsp+0x30],rdx
   140024890:	mov    r8d,DWORD PTR [rsp+0x30]
   140024895:	shr    rdx,0x20
   140024899:	cmp    BYTE PTR [rip+0x2f388],0x0        # 0x140053c28
   1400248a0:	je     0x1400248be
   1400248a2:	mov    ecx,DWORD PTR [rip+0x2f388]        # 0x140053c30
   1400248a8:	add    ecx,edx
   1400248aa:	neg    ecx
   1400248ac:	sub    r8d,DWORD PTR [rip+0x2f381]        # 0x140053c34
   1400248b3:	mov    DWORD PTR [rsp+0x34],r8d
   1400248b8:	mov    DWORD PTR [rsp+0x30],ecx
   1400248bc:	jmp    0x1400248d4
   1400248be:	sub    r8d,DWORD PTR [rip+0x2f36b]        # 0x140053c30
   1400248c5:	sub    edx,DWORD PTR [rip+0x2f369]        # 0x140053c34
   1400248cb:	mov    DWORD PTR [rsp+0x34],edx
   1400248cf:	mov    DWORD PTR [rsp+0x30],r8d
   1400248d4:	mov    rax,QWORD PTR [rsp+0x30]
   1400248d9:	mov    rdx,rsi
   1400248dc:	mov    rcx,rdi
   1400248df:	mov    QWORD PTR [rsi+0x38],rax
   1400248e3:	call   0x14002b830
   1400248e8:	mov    rbx,rax
   1400248eb:	test   rax,rax
   1400248ee:	je     0x14002490b
   1400248f0:	mov    rcx,rbx
   1400248f3:	call   0x140023f30
   1400248f8:	mov    rdx,rbx
   1400248fb:	mov    rcx,rdi
   1400248fe:	call   0x14002b9e0
   140024903:	mov    rbx,rax
   140024906:	test   rax,rax
   140024909:	jne    0x1400248f0
   14002490b:	mov    rdx,rsi
   14002490e:	mov    rcx,rdi
   140024911:	call   0x14002a5e0
   140024916:	mov    rsi,rax
   140024919:	test   rax,rax
   14002491c:	jne    0x140024880
   140024922:	mov    rbx,QWORD PTR [rsp+0x38]
   140024927:	movzx  edx,BYTE PTR [rdi+0x90]
   14002492e:	mov    rcx,rdi
   140024931:	mov    rbp,QWORD PTR [rsp+0x40]
   140024936:	mov    rsi,QWORD PTR [rsp+0x48]
   14002493b:	add    rsp,0x20
   14002493f:	pop    rdi
   140024940:	jmp    0x140024640
   140024945:	int3   
   140024946:	int3   
   140024947:	int3   
   140024948:	int3   
   140024949:	int3   
   14002494a:	int3   
   14002494b:	int3   
   14002494c:	int3   
   14002494d:	int3   
   14002494e:	int3   
   14002494f:	int3   
   140024950:	mov    rax,rsp
   140024953:	mov    QWORD PTR [rax+0x18],rbx
   140024957:	push   rbp
   140024958:	push   rsi
   140024959:	push   rdi
   14002495a:	push   r13
   14002495c:	push   r15
   14002495e:	lea    rbp,[rax-0x58]
   140024962:	sub    rsp,0x130
   140024969:	movaps XMMWORD PTR [rax-0x38],xmm6
   14002496d:	movaps XMMWORD PTR [rax-0x48],xmm7
   140024971:	movaps XMMWORD PTR [rax-0x58],xmm8
   140024976:	xor    r13d,r13d
   140024979:	movsxd r15,r9d
   14002497c:	mov    rdi,rdx
   14002497f:	lea    r10,[rip+0x285ea]        # 0x14004cf70
   140024986:	mov    ebx,r13d
   140024989:	movaps XMMWORD PTR [rax-0x78],xmm10
   14002498e:	movaps XMMWORD PTR [rax-0x98],xmm12
   140024996:	mov    QWORD PTR [rax+0x8],r12
   14002499a:	mov    QWORD PTR [rax+0x10],r14
   14002499e:	mov    r14d,DWORD PTR [rbp+0x88]
   1400249a5:	mov    r12d,r8d
   1400249a8:	movaps XMMWORD PTR [rax-0x68],xmm9
   1400249ad:	movaps XMMWORD PTR [rax-0x88],xmm11
   1400249b5:	cmp    r14d,DWORD PTR [r10]
   1400249b8:	je     0x1400249d3
   1400249ba:	inc    ebx
   1400249bc:	add    r10,0x4
   1400249c0:	movsxd rax,ebx
   1400249c3:	cmp    rax,0x12
   1400249c7:	jb     0x1400249b5
   1400249c9:	xorps  xmm10,xmm10
   1400249cd:	movaps xmm11,xmm10
   1400249d1:	jmp    0x140024a0b
   1400249d3:	mov    rdx,QWORD PTR [rip+0x30966]        # 0x140055340
   1400249da:	movsd  xmm2,QWORD PTR [rip+0x189fe]        # 0x14003d3e0
   1400249e2:	xorps  xmm10,xmm10
   1400249e6:	movaps xmm3,xmm10
   1400249ea:	call   0x14001c2e0
   1400249ef:	lea    rcx,[rip+0x285ca]        # 0x14004cfc0
   1400249f6:	movsxd rax,ebx
   1400249f9:	movd   xmm1,DWORD PTR [rcx+rax*4]
   1400249fe:	movaps xmm11,xmm0
   140024a02:	cvtdq2pd xmm1,xmm1
   140024a06:	mulsd  xmm11,xmm1
   140024a0b:	mov    rsi,QWORD PTR [rbp+0x80]
   140024a12:	cmp    r15d,r12d
   140024a15:	mov    r12,QWORD PTR [rsp+0x160]
   140024a1d:	mov    DWORD PTR [rsi+0x10],r14d
   140024a21:	mov    rax,QWORD PTR [rdi+r15*8+0x18]
   140024a26:	mov    r14,QWORD PTR [rsp+0x168]
   140024a2e:	mov    QWORD PTR [rsi+0x1c],rax
   140024a32:	jle    0x140024a73
   140024a34:	mov    edx,DWORD PTR [rdi+r15*8+0x4]
   140024a39:	mov    ecx,DWORD PTR [rdi+r15*8]
   140024a3d:	cvttsd2si eax,xmm11
   140024a42:	sub    edx,DWORD PTR [rdi+r15*8+0x1c]
   140024a47:	sub    ecx,DWORD PTR [rdi+r15*8+0x18]
   140024a4c:	movd   xmm1,eax
   140024a50:	imul   edx,edx
   140024a53:	imul   ecx,ecx
   140024a56:	add    edx,ecx
   140024a58:	cvtdq2pd xmm1,xmm1
   140024a5c:	movd   xmm0,edx
   140024a60:	mulsd  xmm1,xmm11
   140024a65:	cvtdq2pd xmm0,xmm0
   140024a69:	comisd xmm1,xmm0
   140024a6d:	jbe    0x140024a73
   140024a6f:	sub    r15d,0x3
   140024a73:	movsxd rbx,r15d
   140024a76:	movd   xmm3,DWORD PTR [rdi+rbx*8+0x18]
   140024a7c:	movd   xmm1,DWORD PTR [rdi+rbx*8+0x10]
   140024a82:	movd   xmm2,DWORD PTR [rdi+rbx*8+0x1c]
   140024a88:	cvtdq2pd xmm1,xmm1
   140024a8c:	cvtdq2pd xmm3,xmm3
   140024a90:	cvtdq2pd xmm2,xmm2
   140024a94:	movd   xmm0,DWORD PTR [rdi+rbx*8+0x14]
   140024a9a:	movd   xmm5,DWORD PTR [rdi+rbx*8]
   140024a9f:	movd   xmm4,DWORD PTR [rdi+rbx*8+0x4]
   140024aa5:	cvtdq2pd xmm0,xmm0
   140024aa9:	movaps xmm7,xmm1
   140024aac:	movsd  QWORD PTR [rsp+0x40],xmm1
   140024ab2:	movd   xmm9,DWORD PTR [rdi+rbx*8+0x8]
   140024ab9:	movd   xmm8,DWORD PTR [rdi+rbx*8+0xc]
   140024ac0:	movaps xmm6,xmm0
   140024ac3:	movsd  QWORD PTR [rsp+0x48],xmm0
   140024ac9:	movsd  QWORD PTR [rsp+0x30],xmm3
   140024acf:	subsd  xmm3,xmm1
   140024ad3:	movsd  QWORD PTR [rsp+0x38],xmm2
   140024ad9:	subsd  xmm2,xmm0
   140024add:	cvttsd2si eax,xmm3
   140024ae1:	cvtdq2pd xmm9,xmm9
   140024ae6:	cvtdq2pd xmm8,xmm8
   140024aeb:	movd   xmm0,eax
   140024aef:	cvtdq2pd xmm0,xmm0
   140024af3:	cvttsd2si eax,xmm2
   140024af7:	cvtdq2pd xmm5,xmm5
   140024afb:	mulsd  xmm0,xmm3
   140024aff:	movd   xmm1,eax
   140024b03:	cvtdq2pd xmm4,xmm4
   140024b07:	cvtdq2pd xmm1,xmm1
   140024b0b:	movsd  QWORD PTR [rsp+0x50],xmm9
   140024b12:	mulsd  xmm1,xmm2
   140024b16:	addsd  xmm0,xmm1
   140024b1a:	movsd  QWORD PTR [rsp+0x58],xmm8
   140024b21:	subsd  xmm7,xmm9
   140024b26:	subsd  xmm6,xmm8
   140024b2b:	movsd  QWORD PTR [rsp+0x60],xmm5
   140024b31:	movsd  QWORD PTR [rsp+0x68],xmm4
   140024b37:	subsd  xmm8,xmm4
   140024b3c:	subsd  xmm9,xmm5
   140024b41:	call   0x14003b8ae
   140024b46:	movaps xmm12,xmm0
   140024b4a:	cvttsd2si eax,xmm6
   140024b4e:	movd   xmm0,eax
   140024b52:	cvttsd2si eax,xmm7
   140024b56:	cvtdq2pd xmm0,xmm0
   140024b5a:	movd   xmm1,eax
   140024b5e:	mulsd  xmm0,xmm6
   140024b62:	cvtdq2pd xmm1,xmm1
   140024b66:	mulsd  xmm1,xmm7
   140024b6a:	addsd  xmm0,xmm1
   140024b6e:	call   0x14003b8ae
   140024b73:	cvttsd2si eax,xmm9
   140024b78:	addsd  xmm12,xmm0
   140024b7d:	movd   xmm0,eax
   140024b81:	cvttsd2si eax,xmm8
   140024b86:	cvtdq2pd xmm0,xmm0
   140024b8a:	movd   xmm1,eax
   140024b8e:	mulsd  xmm0,xmm9
   140024b93:	cvtdq2pd xmm1,xmm1
   140024b97:	mulsd  xmm1,xmm8
   140024b9c:	addsd  xmm0,xmm1
   140024ba0:	call   0x14003b8ae
   140024ba5:	movaps xmm9,XMMWORD PTR [rsp+0xf0]
   140024bae:	addsd  xmm12,xmm0
   140024bb3:	comisd xmm12,xmm10
   140024bb8:	jbe    0x140024db5
   140024bbe:	movaps xmm6,xmm11
   140024bc2:	divsd  xmm6,xmm12
   140024bc7:	comisd xmm6,QWORD PTR [rip+0x18811]        # 0x14003d3e0
   140024bcf:	jbe    0x140024bdb
   140024bd1:	movsd  xmm6,QWORD PTR [rip+0x18807]        # 0x14003d3e0
   140024bd9:	jmp    0x140024bec
   140024bdb:	movsd  xmm0,QWORD PTR [rip+0x18e1d]        # 0x14003da00
   140024be3:	comisd xmm0,xmm6
   140024be7:	jbe    0x140024bec
   140024be9:	movaps xmm6,xmm0
   140024bec:	lea    rax,[rsp+0x70]
   140024bf1:	lea    rdx,[rsp+0x30]
   140024bf6:	lea    rcx,[rbp-0x50]
   140024bfa:	movaps xmm3,xmm6
   140024bfd:	mov    QWORD PTR [rsp+0x28],rax
   140024c02:	mov    r8d,0x3
   140024c08:	mov    QWORD PTR [rsp+0x20],r13
   140024c0d:	call   0x14001abf0
   140024c12:	movups xmm0,XMMWORD PTR [rax]
   140024c15:	cvttsd2si eax,xmm11
   140024c1a:	movd   xmm7,eax
   140024c1e:	movups xmm1,xmm0
   140024c21:	cvttsd2si eax,xmm1
   140024c25:	cvtdq2pd xmm7,xmm7
   140024c29:	unpckhpd xmm0,xmm0
   140024c2d:	mulsd  xmm7,xmm11
   140024c32:	sub    eax,DWORD PTR [rsi+0x1c]
   140024c35:	cvttsd2si ecx,xmm0
   140024c39:	imul   eax,eax
   140024c3c:	sub    ecx,DWORD PTR [rsi+0x20]
   140024c3f:	imul   ecx,ecx
   140024c42:	add    eax,ecx
   140024c44:	movd   xmm0,eax
   140024c48:	cvtdq2pd xmm0,xmm0
   140024c4c:	comisd xmm7,xmm0
   140024c50:	jae    0x140024cbc
   140024c52:	movsd  xmm8,QWORD PTR [rip+0x18db5]        # 0x14003da10
   140024c5b:	nop    DWORD PTR [rax+rax*1+0x0]
   140024c60:	lea    rax,[rsp+0x70]
   140024c65:	mulsd  xmm6,xmm8
   140024c6a:	lea    rdx,[rsp+0x30]
   140024c6f:	mov    QWORD PTR [rsp+0x28],rax
   140024c74:	lea    rcx,[rbp-0x50]
   140024c78:	mov    r8d,0x3
   140024c7e:	movaps xmm3,xmm6
   140024c81:	mov    QWORD PTR [rsp+0x20],r13
   140024c86:	call   0x14001abf0
   140024c8b:	movups xmm0,XMMWORD PTR [rax]
   140024c8e:	movups xmm2,xmm0
   140024c91:	cvttsd2si eax,xmm2
   140024c95:	movaps xmm1,xmm0
   140024c98:	unpckhpd xmm1,xmm0
   140024c9c:	cvttsd2si ecx,xmm1
   140024ca0:	sub    eax,DWORD PTR [rsi+0x1c]
   140024ca3:	imul   eax,eax
   140024ca6:	sub    ecx,DWORD PTR [rsi+0x20]
   140024ca9:	imul   ecx,ecx
   140024cac:	add    eax,ecx
   140024cae:	movd   xmm0,eax
   140024cb2:	cvtdq2pd xmm0,xmm0
   140024cb6:	comisd xmm7,xmm0
   140024cba:	jb     0x140024c60
   140024cbc:	movsd  xmm1,QWORD PTR [rbp-0x60]
   140024cc1:	movsd  xmm0,QWORD PTR [rip+0x1870f]        # 0x14003d3d8
   140024cc9:	comisd xmm1,xmm10
   140024cce:	jb     0x140024cd6
   140024cd0:	addsd  xmm1,xmm0
   140024cd4:	jmp    0x140024cda
   140024cd6:	subsd  xmm1,xmm0
   140024cda:	cvttsd2si eax,xmm1
   140024cde:	movsd  xmm1,QWORD PTR [rbp-0x58]
   140024ce3:	comisd xmm1,xmm10
   140024ce8:	mov    DWORD PTR [rdi+rbx*8],eax
   140024ceb:	jb     0x140024cf3
   140024ced:	addsd  xmm1,xmm0
   140024cf1:	jmp    0x140024cf7
   140024cf3:	subsd  xmm1,xmm0
   140024cf7:	cvttsd2si eax,xmm1
   140024cfb:	movsd  xmm1,QWORD PTR [rbp-0x70]
   140024d00:	comisd xmm1,xmm10
   140024d05:	mov    DWORD PTR [rdi+rbx*8+0x4],eax
   140024d09:	jb     0x140024d11
   140024d0b:	addsd  xmm1,xmm0
   140024d0f:	jmp    0x140024d15
   140024d11:	subsd  xmm1,xmm0
   140024d15:	cvttsd2si eax,xmm1
   140024d19:	movsd  xmm1,QWORD PTR [rbp-0x68]
   140024d1e:	comisd xmm1,xmm10
   140024d23:	mov    DWORD PTR [rdi+rbx*8+0x8],eax
   140024d27:	jb     0x140024d2f
   140024d29:	addsd  xmm1,xmm0
   140024d2d:	jmp    0x140024d33
   140024d2f:	subsd  xmm1,xmm0
   140024d33:	cvttsd2si eax,xmm1
   140024d37:	movsd  xmm1,QWORD PTR [rbp-0x80]
   140024d3c:	comisd xmm1,xmm10
   140024d41:	mov    DWORD PTR [rdi+rbx*8+0xc],eax
   140024d45:	jb     0x140024d4d
   140024d47:	addsd  xmm1,xmm0
   140024d4b:	jmp    0x140024d51
   140024d4d:	subsd  xmm1,xmm0
   140024d51:	cvttsd2si eax,xmm1
   140024d55:	movsd  xmm1,QWORD PTR [rbp-0x78]
   140024d5a:	comisd xmm1,xmm10
   140024d5f:	mov    DWORD PTR [rdi+rbx*8+0x10],eax
   140024d63:	jb     0x140024d6b
   140024d65:	addsd  xmm1,xmm0
   140024d69:	jmp    0x140024d6f
   140024d6b:	subsd  xmm1,xmm0
   140024d6f:	cvttsd2si eax,xmm1
   140024d73:	movsd  xmm1,QWORD PTR [rsp+0x70]
   140024d79:	comisd xmm1,xmm10
   140024d7e:	mov    DWORD PTR [rdi+rbx*8+0x14],eax
   140024d82:	jb     0x140024d8a
   140024d84:	addsd  xmm1,xmm0
   140024d88:	jmp    0x140024d8e
   140024d8a:	subsd  xmm1,xmm0
   140024d8e:	cvttsd2si eax,xmm1
   140024d92:	movsd  xmm1,QWORD PTR [rsp+0x78]
   140024d98:	comisd xmm1,xmm10
   140024d9d:	mov    DWORD PTR [rdi+rbx*8+0x18],eax
   140024da1:	jb     0x140024da9
   140024da3:	addsd  xmm1,xmm0
   140024da7:	jmp    0x140024dad
   140024da9:	subsd  xmm1,xmm0
   140024dad:	cvttsd2si eax,xmm1
   140024db1:	mov    DWORD PTR [rdi+rbx*8+0x1c],eax
   140024db5:	movaps xmm11,XMMWORD PTR [rsp+0xd0]
   140024dbe:	lea    r11,[rsp+0x130]
   140024dc6:	mov    eax,r15d
   140024dc9:	mov    rbx,QWORD PTR [r11+0x40]
   140024dcd:	movaps xmm6,XMMWORD PTR [r11-0x10]
   140024dd2:	movaps xmm7,XMMWORD PTR [r11-0x20]
   140024dd7:	movaps xmm8,XMMWORD PTR [r11-0x30]
   140024ddc:	movaps xmm10,XMMWORD PTR [r11-0x50]
   140024de1:	movaps xmm12,XMMWORD PTR [r11-0x70]
   140024de6:	mov    rsp,r11
   140024de9:	pop    r15
   140024deb:	pop    r13
   140024ded:	pop    rdi
   140024dee:	pop    rsi
   140024def:	pop    rbp
   140024df0:	ret    
   140024df1:	int3   
   140024df2:	int3   
   140024df3:	int3   
   140024df4:	int3   
   140024df5:	int3   
   140024df6:	int3   
   140024df7:	int3   
   140024df8:	int3   
   140024df9:	int3   
   140024dfa:	int3   
   140024dfb:	int3   
   140024dfc:	int3   
   140024dfd:	int3   
   140024dfe:	int3   
   140024dff:	int3   
   140024e00:	mov    rax,rsp
   140024e03:	mov    QWORD PTR [rax+0x18],rbx
   140024e07:	push   rbp
   140024e08:	push   rsi
   140024e09:	push   rdi
   140024e0a:	push   r13
   140024e0c:	push   r15
   140024e0e:	lea    rbp,[rax-0x58]
   140024e12:	sub    rsp,0x130
   140024e19:	movaps XMMWORD PTR [rax-0x38],xmm6
   140024e1d:	movaps XMMWORD PTR [rax-0x48],xmm7
   140024e21:	movaps XMMWORD PTR [rax-0x58],xmm8
   140024e26:	xor    r13d,r13d
   140024e29:	movsxd r15,r8d
   140024e2c:	mov    rdi,rdx
   140024e2f:	lea    r10,[rip+0x2813a]        # 0x14004cf70
   140024e36:	mov    ebx,r13d
   140024e39:	movaps XMMWORD PTR [rax-0x78],xmm10
   140024e3e:	movaps XMMWORD PTR [rax-0x98],xmm12
   140024e46:	mov    QWORD PTR [rax+0x8],r12
   140024e4a:	mov    QWORD PTR [rax+0x10],r14
   140024e4e:	mov    r14d,DWORD PTR [rbp+0x88]
   140024e55:	mov    r12d,r9d
   140024e58:	movaps XMMWORD PTR [rax-0x68],xmm9
   140024e5d:	movaps XMMWORD PTR [rax-0x88],xmm11
   140024e65:	cmp    r14d,DWORD PTR [r10]
   140024e68:	je     0x140024e83
   140024e6a:	inc    ebx
   140024e6c:	add    r10,0x4
   140024e70:	movsxd rax,ebx
   140024e73:	cmp    rax,0x12
   140024e77:	jb     0x140024e65
   140024e79:	xorps  xmm10,xmm10
   140024e7d:	movaps xmm11,xmm10
   140024e81:	jmp    0x140024ebb
   140024e83:	mov    rdx,QWORD PTR [rip+0x304b6]        # 0x140055340
   140024e8a:	movsd  xmm2,QWORD PTR [rip+0x1854e]        # 0x14003d3e0
   140024e92:	xorps  xmm10,xmm10
   140024e96:	movaps xmm3,xmm10
   140024e9a:	call   0x14001c2e0
   140024e9f:	lea    rcx,[rip+0x2811a]        # 0x14004cfc0
   140024ea6:	movsxd rax,ebx
   140024ea9:	movd   xmm1,DWORD PTR [rcx+rax*4]
   140024eae:	movaps xmm11,xmm0
   140024eb2:	cvtdq2pd xmm1,xmm1
   140024eb6:	mulsd  xmm11,xmm1
   140024ebb:	mov    rsi,QWORD PTR [rbp+0x80]
   140024ec2:	cmp    r12d,r15d
   140024ec5:	mov    r12,QWORD PTR [rsp+0x160]
   140024ecd:	mov    DWORD PTR [rsi+0xc],r14d
   140024ed1:	mov    rax,QWORD PTR [rdi+r15*8]
   140024ed5:	mov    r14,QWORD PTR [rsp+0x168]
   140024edd:	mov    QWORD PTR [rsi+0x14],rax
   140024ee1:	jle    0x140024f22
   140024ee3:	mov    edx,DWORD PTR [rdi+r15*8+0x4]
   140024ee8:	mov    ecx,DWORD PTR [rdi+r15*8]
   140024eec:	cvttsd2si eax,xmm11
   140024ef1:	sub    edx,DWORD PTR [rdi+r15*8+0x1c]
   140024ef6:	sub    ecx,DWORD PTR [rdi+r15*8+0x18]
   140024efb:	movd   xmm1,eax
   140024eff:	imul   edx,edx
   140024f02:	imul   ecx,ecx
   140024f05:	add    edx,ecx
   140024f07:	cvtdq2pd xmm1,xmm1
   140024f0b:	movd   xmm0,edx
   140024f0f:	mulsd  xmm1,xmm11
   140024f14:	cvtdq2pd xmm0,xmm0
   140024f18:	comisd xmm1,xmm0
   140024f1c:	jbe    0x140024f22
   140024f1e:	add    r15d,0x3
   140024f22:	movsxd rbx,r15d
   140024f25:	movd   xmm4,DWORD PTR [rdi+rbx*8+0x4]
   140024f2b:	movd   xmm3,DWORD PTR [rdi+rbx*8+0xc]
   140024f31:	movd   xmm5,DWORD PTR [rdi+rbx*8]
   140024f36:	cvtdq2pd xmm3,xmm3
   140024f3a:	cvtdq2pd xmm4,xmm4
   140024f3e:	cvtdq2pd xmm5,xmm5
   140024f42:	movd   xmm2,DWORD PTR [rdi+rbx*8+0x8]
   140024f48:	movd   xmm1,DWORD PTR [rdi+rbx*8+0x18]
   140024f4e:	movd   xmm8,DWORD PTR [rdi+rbx*8+0x14]
   140024f55:	cvtdq2pd xmm1,xmm1
   140024f59:	cvtdq2pd xmm2,xmm2
   140024f5d:	cvtdq2pd xmm8,xmm8
   140024f62:	movd   xmm0,DWORD PTR [rdi+rbx*8+0x1c]
   140024f68:	movd   xmm9,DWORD PTR [rdi+rbx*8+0x10]
   140024f6f:	cvtdq2pd xmm0,xmm0
   140024f73:	movsd  QWORD PTR [rsp+0x60],xmm1
   140024f79:	cvtdq2pd xmm9,xmm9
   140024f7e:	movsd  QWORD PTR [rsp+0x68],xmm0
   140024f84:	movsd  QWORD PTR [rsp+0x38],xmm4
   140024f8a:	subsd  xmm4,xmm3
   140024f8e:	cvttsd2si eax,xmm4
   140024f92:	movsd  QWORD PTR [rsp+0x30],xmm5
   140024f98:	subsd  xmm5,xmm2
   140024f9c:	movaps xmm6,xmm3
   140024f9f:	movaps xmm7,xmm2
   140024fa2:	movsd  QWORD PTR [rsp+0x58],xmm8
   140024fa9:	subsd  xmm6,xmm8
   140024fae:	subsd  xmm8,xmm0
   140024fb3:	movsd  QWORD PTR [rsp+0x50],xmm9
   140024fba:	movd   xmm0,eax
   140024fbe:	cvtdq2pd xmm0,xmm0
   140024fc2:	cvttsd2si eax,xmm5
   140024fc6:	subsd  xmm7,xmm9
   140024fcb:	mulsd  xmm0,xmm4
   140024fcf:	subsd  xmm9,xmm1
   140024fd4:	movsd  QWORD PTR [rsp+0x40],xmm2
   140024fda:	movsd  QWORD PTR [rsp+0x48],xmm3
   140024fe0:	movd   xmm1,eax
   140024fe4:	cvtdq2pd xmm1,xmm1
   140024fe8:	mulsd  xmm1,xmm5
   140024fec:	addsd  xmm0,xmm1
   140024ff0:	call   0x14003b8ae
   140024ff5:	cvttsd2si eax,xmm6
   140024ff9:	movaps xmm12,xmm0
   140024ffd:	movd   xmm0,eax
   140025001:	cvttsd2si eax,xmm7
   140025005:	cvtdq2pd xmm0,xmm0
   140025009:	movd   xmm1,eax
   14002500d:	mulsd  xmm0,xmm6
   140025011:	cvtdq2pd xmm1,xmm1
   140025015:	mulsd  xmm1,xmm7
   140025019:	addsd  xmm0,xmm1
   14002501d:	call   0x14003b8ae
   140025022:	cvttsd2si eax,xmm9
   140025027:	addsd  xmm12,xmm0
   14002502c:	movd   xmm0,eax
   140025030:	cvttsd2si eax,xmm8
   140025035:	cvtdq2pd xmm0,xmm0
   140025039:	movd   xmm1,eax
   14002503d:	mulsd  xmm0,xmm9
   140025042:	cvtdq2pd xmm1,xmm1
   140025046:	mulsd  xmm1,xmm8
   14002504b:	addsd  xmm0,xmm1
   14002504f:	call   0x14003b8ae
   140025054:	movaps xmm9,XMMWORD PTR [rsp+0xf0]
   14002505d:	addsd  xmm12,xmm0
   140025062:	comisd xmm12,xmm10
   140025067:	jbe    0x140025265
   14002506d:	movaps xmm6,xmm11
   140025071:	divsd  xmm6,xmm12
   140025076:	comisd xmm6,QWORD PTR [rip+0x18362]        # 0x14003d3e0
   14002507e:	jbe    0x14002508a
   140025080:	movsd  xmm6,QWORD PTR [rip+0x18358]        # 0x14003d3e0
   140025088:	jmp    0x14002509b
   14002508a:	movsd  xmm0,QWORD PTR [rip+0x1896e]        # 0x14003da00
   140025092:	comisd xmm0,xmm6
   140025096:	jbe    0x14002509b
   140025098:	movaps xmm6,xmm0
   14002509b:	lea    rax,[rsp+0x70]
   1400250a0:	lea    rdx,[rsp+0x30]
   1400250a5:	lea    rcx,[rbp-0x50]
   1400250a9:	movaps xmm3,xmm6
   1400250ac:	mov    QWORD PTR [rsp+0x28],rax
   1400250b1:	mov    r8d,0x3
   1400250b7:	mov    QWORD PTR [rsp+0x20],r13
   1400250bc:	call   0x14001abf0
   1400250c1:	movups xmm0,XMMWORD PTR [rax]
   1400250c4:	cvttsd2si eax,xmm11
   1400250c9:	movd   xmm7,eax
   1400250cd:	movups xmm1,xmm0
   1400250d0:	cvttsd2si eax,xmm1
   1400250d4:	cvtdq2pd xmm7,xmm7
   1400250d8:	unpckhpd xmm0,xmm0
   1400250dc:	mulsd  xmm7,xmm11
   1400250e1:	sub    eax,DWORD PTR [rsi+0x14]
   1400250e4:	cvttsd2si ecx,xmm0
   1400250e8:	imul   eax,eax
   1400250eb:	sub    ecx,DWORD PTR [rsi+0x18]
   1400250ee:	imul   ecx,ecx
   1400250f1:	add    eax,ecx
   1400250f3:	movd   xmm0,eax
   1400250f7:	cvtdq2pd xmm0,xmm0
   1400250fb:	comisd xmm7,xmm0
   1400250ff:	jae    0x14002516c
   140025101:	movsd  xmm8,QWORD PTR [rip+0x18906]        # 0x14003da10
   14002510a:	nop    WORD PTR [rax+rax*1+0x0]
   140025110:	lea    rax,[rsp+0x70]
   140025115:	mulsd  xmm6,xmm8
   14002511a:	lea    rdx,[rsp+0x30]
   14002511f:	mov    QWORD PTR [rsp+0x28],rax
   140025124:	lea    rcx,[rbp-0x50]
   140025128:	mov    r8d,0x3
   14002512e:	movaps xmm3,xmm6
   140025131:	mov    QWORD PTR [rsp+0x20],r13
   140025136:	call   0x14001abf0
   14002513b:	movups xmm0,XMMWORD PTR [rax]
   14002513e:	movups xmm2,xmm0
   140025141:	cvttsd2si eax,xmm2
   140025145:	movaps xmm1,xmm0
   140025148:	unpckhpd xmm1,xmm0
   14002514c:	cvttsd2si ecx,xmm1
   140025150:	sub    eax,DWORD PTR [rsi+0x14]
   140025153:	imul   eax,eax
   140025156:	sub    ecx,DWORD PTR [rsi+0x18]
   140025159:	imul   ecx,ecx
   14002515c:	add    eax,ecx
   14002515e:	movd   xmm0,eax
   140025162:	cvtdq2pd xmm0,xmm0
   140025166:	comisd xmm7,xmm0
   14002516a:	jb     0x140025110
   14002516c:	movsd  xmm1,QWORD PTR [rsp+0x70]
   140025172:	movsd  xmm0,QWORD PTR [rip+0x1825e]        # 0x14003d3d8
   14002517a:	comisd xmm1,xmm10
   14002517f:	jb     0x140025187
   140025181:	addsd  xmm1,xmm0
   140025185:	jmp    0x14002518b
   140025187:	subsd  xmm1,xmm0
   14002518b:	cvttsd2si eax,xmm1
   14002518f:	movsd  xmm1,QWORD PTR [rsp+0x78]
   140025195:	comisd xmm1,xmm10
   14002519a:	mov    DWORD PTR [rdi+rbx*8],eax
   14002519d:	jb     0x1400251a5
   14002519f:	addsd  xmm1,xmm0
   1400251a3:	jmp    0x1400251a9
   1400251a5:	subsd  xmm1,xmm0
   1400251a9:	cvttsd2si eax,xmm1
   1400251ad:	movsd  xmm1,QWORD PTR [rbp-0x80]
   1400251b2:	comisd xmm1,xmm10
   1400251b7:	mov    DWORD PTR [rdi+rbx*8+0x4],eax
   1400251bb:	jb     0x1400251c3
   1400251bd:	addsd  xmm1,xmm0
   1400251c1:	jmp    0x1400251c7
   1400251c3:	subsd  xmm1,xmm0
   1400251c7:	cvttsd2si eax,xmm1
   1400251cb:	movsd  xmm1,QWORD PTR [rbp-0x78]
   1400251d0:	comisd xmm1,xmm10
   1400251d5:	mov    DWORD PTR [rdi+rbx*8+0x8],eax
   1400251d9:	jb     0x1400251e1
   1400251db:	addsd  xmm1,xmm0
   1400251df:	jmp    0x1400251e5
   1400251e1:	subsd  xmm1,xmm0
   1400251e5:	cvttsd2si eax,xmm1
   1400251e9:	movsd  xmm1,QWORD PTR [rbp-0x70]
   1400251ee:	comisd xmm1,xmm10
   1400251f3:	mov    DWORD PTR [rdi+rbx*8+0xc],eax
   1400251f7:	jb     0x1400251ff
   1400251f9:	addsd  xmm1,xmm0
   1400251fd:	jmp    0x140025203
   1400251ff:	subsd  xmm1,xmm0
   140025203:	cvttsd2si eax,xmm1
   140025207:	movsd  xmm1,QWORD PTR [rbp-0x68]
   14002520c:	comisd xmm1,xmm10
   140025211:	mov    DWORD PTR [rdi+rbx*8+0x10],eax
   140025215:	jb     0x14002521d
   140025217:	addsd  xmm1,xmm0
   14002521b:	jmp    0x140025221
   14002521d:	subsd  xmm1,xmm0
   140025221:	cvttsd2si eax,xmm1
   140025225:	movsd  xmm1,QWORD PTR [rbp-0x60]
   14002522a:	comisd xmm1,xmm10
   14002522f:	mov    DWORD PTR [rdi+rbx*8+0x14],eax
   140025233:	jb     0x14002523b
   140025235:	addsd  xmm1,xmm0
   140025239:	jmp    0x14002523f
   14002523b:	subsd  xmm1,xmm0
   14002523f:	cvttsd2si eax,xmm1
   140025243:	movsd  xmm1,QWORD PTR [rbp-0x58]
   140025248:	comisd xmm1,xmm10
   14002524d:	mov    DWORD PTR [rdi+rbx*8+0x18],eax
   140025251:	jb     0x140025259
   140025253:	addsd  xmm1,xmm0
   140025257:	jmp    0x14002525d
   140025259:	subsd  xmm1,xmm0
   14002525d:	cvttsd2si eax,xmm1
   140025261:	mov    DWORD PTR [rdi+rbx*8+0x1c],eax
   140025265:	movaps xmm11,XMMWORD PTR [rsp+0xd0]
   14002526e:	lea    r11,[rsp+0x130]
   140025276:	mov    eax,r15d
   140025279:	mov    rbx,QWORD PTR [r11+0x40]
   14002527d:	movaps xmm6,XMMWORD PTR [r11-0x10]
   140025282:	movaps xmm7,XMMWORD PTR [r11-0x20]
   140025287:	movaps xmm8,XMMWORD PTR [r11-0x30]
   14002528c:	movaps xmm10,XMMWORD PTR [r11-0x50]
   140025291:	movaps xmm12,XMMWORD PTR [r11-0x70]
   140025296:	mov    rsp,r11
   140025299:	pop    r15
   14002529b:	pop    r13
   14002529d:	pop    rdi
   14002529e:	pop    rsi
   14002529f:	pop    rbp
   1400252a0:	ret    
   1400252a1:	int3   
   1400252a2:	int3   
   1400252a3:	int3   
   1400252a4:	int3   
   1400252a5:	int3   
   1400252a6:	int3   
   1400252a7:	int3   
   1400252a8:	int3   
   1400252a9:	int3   
   1400252aa:	int3   
   1400252ab:	int3   
   1400252ac:	int3   
   1400252ad:	int3   
   1400252ae:	int3   
   1400252af:	int3   
   1400252b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400252b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400252ba:	mov    QWORD PTR [rsp+0x18],rdi
   1400252bf:	push   r12
   1400252c1:	push   r14
   1400252c3:	push   r15
   1400252c5:	sub    rsp,0x20
   1400252c9:	xor    edi,edi
   1400252cb:	mov    r14,r8
   1400252ce:	mov    r15,rdx
   1400252d1:	mov    DWORD PTR [rdx],edi
   1400252d3:	mov    rax,QWORD PTR [rcx+0x18]
   1400252d7:	mov    rsi,rcx
   1400252da:	mov    r9,QWORD PTR [rax+0x20]
   1400252de:	lea    r12,[rip+0xfffffffffffdad1b]        # 0x140000000
   1400252e5:	mov    eax,DWORD PTR [r9]
   1400252e8:	sar    eax,0x4
   1400252eb:	and    eax,0x1
   1400252ee:	mov    DWORD PTR [r8],eax
   1400252f1:	mov    rax,QWORD PTR [rip+0x30068]        # 0x140055360
   1400252f8:	test   rax,rax
   1400252fb:	je     0x14002538a
   140025301:	mov    edx,DWORD PTR [rax+0x10]
   140025304:	call   0x140027720
   140025309:	mov    r11,rax
   14002530c:	cmp    BYTE PTR [rax],dil
   14002530f:	je     0x14002538a
   140025311:	mov    r8,QWORD PTR [rip+0x27b68]        # 0x14004ce80
   140025318:	mov    r10d,edi
   14002531b:	test   r8,r8
   14002531e:	je     0x14002538a
   140025320:	lea    r9,[rip+0x27b59]        # 0x14004ce80
   140025327:	nop    WORD PTR [rax+rax*1+0x0]
   140025330:	mov    rcx,r11
   140025333:	sub    r8,r11
   140025336:	data16 nop WORD PTR [rax+rax*1+0x0]
   140025340:	movzx  edx,BYTE PTR [rcx]
   140025343:	movzx  eax,BYTE PTR [rcx+r8*1]
   140025348:	sub    edx,eax
   14002534a:	jne    0x140025353
   14002534c:	inc    rcx
   14002534f:	test   eax,eax
   140025351:	jne    0x140025340
   140025353:	test   edx,edx
   140025355:	je     0x140025369
   140025357:	mov    r8,QWORD PTR [r9+0x8]
   14002535b:	add    r9,0x8
   14002535f:	inc    r10d
   140025362:	test   r8,r8
   140025365:	jne    0x140025330
   140025367:	jmp    0x14002538a
   140025369:	movsxd rax,r10d
   14002536c:	lea    rcx,[rax*4+0x0]
   140025374:	mov    eax,DWORD PTR [rcx+r12*1+0x4cea8]
   14002537c:	mov    DWORD PTR [r15],eax
   14002537f:	mov    eax,DWORD PTR [rcx+r12*1+0x4ceb8]
   140025387:	mov    DWORD PTR [r14],eax
   14002538a:	mov    rax,QWORD PTR [rip+0x2ff77]        # 0x140055308
   140025391:	lea    rbx,[rip+0x27b38]        # 0x14004ced0
   140025398:	test   rax,rax
   14002539b:	je     0x140025417
   14002539d:	mov    edx,DWORD PTR [rax+0x10]
   1400253a0:	mov    rcx,rsi
   1400253a3:	call   0x140027720
   1400253a8:	mov    r11,rax
   1400253ab:	cmp    BYTE PTR [rax],dil
   1400253ae:	je     0x140025417
   1400253b0:	mov    r8,QWORD PTR [rip+0x27b19]        # 0x14004ced0
   1400253b7:	mov    r10d,edi
   1400253ba:	test   r8,r8
   1400253bd:	je     0x140025417
   1400253bf:	mov    r9,rbx
   1400253c2:	nop    DWORD PTR [rax+0x0]
   1400253c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400253d0:	mov    rcx,r11
   1400253d3:	sub    r8,r11
   1400253d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400253e0:	movzx  edx,BYTE PTR [rcx]
   1400253e3:	movzx  eax,BYTE PTR [rcx+r8*1]
   1400253e8:	sub    edx,eax
   1400253ea:	jne    0x1400253f3
   1400253ec:	inc    rcx
   1400253ef:	test   eax,eax
   1400253f1:	jne    0x1400253e0
   1400253f3:	test   edx,edx
   1400253f5:	je     0x140025409
   1400253f7:	mov    r8,QWORD PTR [r9+0x8]
   1400253fb:	add    r9,0x8
   1400253ff:	inc    r10d
   140025402:	test   r8,r8
   140025405:	jne    0x1400253d0
   140025407:	jmp    0x140025417
   140025409:	movsxd rax,r10d
   14002540c:	mov    eax,DWORD PTR [r12+rax*4+0x4cf70]
   140025414:	mov    DWORD PTR [r14],eax
   140025417:	mov    rax,QWORD PTR [rip+0x2fee2]        # 0x140055300
   14002541e:	test   rax,rax
   140025421:	je     0x140025496
   140025423:	mov    edx,DWORD PTR [rax+0x10]
   140025426:	mov    rcx,rsi
   140025429:	call   0x140027720
   14002542e:	mov    r9,rax
   140025431:	cmp    BYTE PTR [rax],dil
   140025434:	je     0x140025496
   140025436:	mov    r8,QWORD PTR [rip+0x27a93]        # 0x14004ced0
   14002543d:	test   r8,r8
   140025440:	je     0x140025496
   140025442:	nop    DWORD PTR [rax+0x0]
   140025446:	data16 nop WORD PTR [rax+rax*1+0x0]
   140025450:	mov    rcx,r9
   140025453:	sub    r8,r9
   140025456:	data16 nop WORD PTR [rax+rax*1+0x0]
   140025460:	movzx  edx,BYTE PTR [rcx]
   140025463:	movzx  eax,BYTE PTR [rcx+r8*1]
   140025468:	sub    edx,eax
   14002546a:	jne    0x140025473
   14002546c:	inc    rcx
   14002546f:	test   eax,eax
   140025471:	jne    0x140025460
   140025473:	test   edx,edx
   140025475:	je     0x140025488
   140025477:	mov    r8,QWORD PTR [rbx+0x8]
   14002547b:	add    rbx,0x8
   14002547f:	inc    edi
   140025481:	test   r8,r8
   140025484:	jne    0x140025450
   140025486:	jmp    0x140025496
   140025488:	movsxd rax,edi
   14002548b:	mov    eax,DWORD PTR [r12+rax*4+0x4cf70]
   140025493:	mov    DWORD PTR [r15],eax
   140025496:	mov    rbx,QWORD PTR [rsp+0x40]
   14002549b:	mov    rsi,QWORD PTR [rsp+0x48]
   1400254a0:	mov    rdi,QWORD PTR [rsp+0x50]
   1400254a5:	add    rsp,0x20
   1400254a9:	pop    r15
   1400254ab:	pop    r14
   1400254ad:	pop    r12
   1400254af:	ret    
   1400254b0:	mov    rax,rsp
   1400254b3:	mov    QWORD PTR [rax+0x18],rbx
   1400254b7:	mov    QWORD PTR [rax+0x8],rcx
   1400254bb:	push   rbp
   1400254bc:	push   rsi
   1400254bd:	push   rdi
   1400254be:	lea    rbp,[rax-0x5f]
   1400254c2:	sub    rsp,0xd0
   1400254c9:	movaps XMMWORD PTR [rax-0x48],xmm8
   1400254ce:	movaps XMMWORD PTR [rax-0x58],xmm9
   1400254d3:	movaps XMMWORD PTR [rsp+0x50],xmm13
   1400254d9:	mov    esi,r9d
   1400254dc:	movaps xmm13,xmm2
   1400254e0:	movaps XMMWORD PTR [rsp+0x40],xmm14
   1400254e6:	movaps XMMWORD PTR [rax-0x28],xmm6
   1400254ea:	movaps XMMWORD PTR [rax-0x38],xmm7
   1400254ee:	movaps xmm14,xmm1
   1400254f2:	divsd  xmm14,QWORD PTR [rip+0x1852d]        # 0x14003da28
   1400254fb:	movaps XMMWORD PTR [rax-0x68],xmm10
   140025500:	movaps XMMWORD PTR [rax-0x78],xmm11
   140025505:	movaps XMMWORD PTR [rsp+0x60],xmm12
   14002550b:	mov    rax,QWORD PTR [rip+0x2ffd6]        # 0x1400554e8
   140025512:	mulsd  xmm14,QWORD PTR [rip+0x1832d]        # 0x14003d848
   14002551b:	call   QWORD PTR [rax+0x88]
   140025521:	mov    rax,QWORD PTR [rip+0x2ffc0]        # 0x1400554e8
   140025528:	lea    rcx,[rip+0x27941]        # 0x14004ce70
   14002552f:	call   QWORD PTR [rax+0xb8]
   140025535:	mov    edi,esi
   140025537:	movsd  xmm8,QWORD PTR [rip+0x17e98]        # 0x14003d3d8
   140025540:	xorps  xmm9,xmm9
   140025544:	and    edi,0x1
   140025547:	jne    0x140025d0e
   14002554d:	test   sil,0x20
   140025551:	jne    0x140025d0e
   140025557:	test   sil,0x40
   14002555b:	jne    0x140025d0e
   140025561:	test   sil,0x10
   140025565:	je     0x1400256d0
   14002556b:	movaps xmm6,xmm13
   14002556f:	movaps xmm0,xmm14
   140025573:	mulsd  xmm6,QWORD PTR [rip+0x19c85]        # 0x14003f200
   14002557b:	call   0x14003b87e
   140025580:	movaps xmm12,xmm0
   140025584:	movaps xmm0,xmm14
   140025588:	mulsd  xmm12,xmm6
   14002558d:	call   0x14003b884
   140025592:	movaps xmm7,xmm13
   140025596:	movaps xmm10,xmm0
   14002559a:	mulsd  xmm7,QWORD PTR [rip+0x19c4e]        # 0x14003f1f0
   1400255a2:	mulsd  xmm10,xmm6
   1400255a7:	movaps xmm6,xmm14
   1400255ab:	addsd  xmm6,QWORD PTR [rip+0x19c35]        # 0x14003f1e8
   1400255b3:	movaps xmm0,xmm6
   1400255b6:	call   0x14003b87e
   1400255bb:	movaps xmm11,xmm0
   1400255bf:	movaps xmm0,xmm6
   1400255c2:	mulsd  xmm11,xmm7
   1400255c7:	call   0x14003b884
   1400255cc:	movd   xmm1,DWORD PTR [rbp+0x67]
   1400255d1:	movaps xmm3,xmm0
   1400255d4:	cvtdq2pd xmm1,xmm1
   1400255d8:	mulsd  xmm3,xmm7
   1400255dc:	addsd  xmm1,xmm12
   1400255e1:	movaps xmm0,xmm1
   1400255e4:	addsd  xmm0,xmm11
   1400255e9:	comisd xmm0,xmm9
   1400255ee:	jb     0x1400255f7
   1400255f0:	addsd  xmm0,xmm8
   1400255f5:	jmp    0x1400255fc
   1400255f7:	subsd  xmm0,xmm8
   1400255fc:	cvttsd2si eax,xmm0
   140025600:	movd   xmm0,DWORD PTR [rbp+0x6b]
   140025605:	cvtdq2pd xmm0,xmm0
   140025609:	mov    DWORD PTR [rbp-0x69],eax
   14002560c:	addsd  xmm0,xmm10
   140025611:	movaps xmm2,xmm0
   140025614:	addsd  xmm2,xmm3
   140025618:	comisd xmm2,xmm9
   14002561d:	jb     0x140025626
   14002561f:	addsd  xmm2,xmm8
   140025624:	jmp    0x14002562b
   140025626:	subsd  xmm2,xmm8
   14002562b:	cvttsd2si eax,xmm2
   14002562f:	subsd  xmm1,xmm11
   140025634:	mov    DWORD PTR [rbp-0x65],eax
   140025637:	comisd xmm1,xmm9
   14002563c:	jb     0x140025645
   14002563e:	addsd  xmm1,xmm8
   140025643:	jmp    0x14002564a
   140025645:	subsd  xmm1,xmm8
   14002564a:	cvttsd2si eax,xmm1
   14002564e:	subsd  xmm0,xmm3
   140025652:	mov    DWORD PTR [rbp-0x61],eax
   140025655:	comisd xmm0,xmm9
   14002565a:	jb     0x140025663
   14002565c:	addsd  xmm0,xmm8
   140025661:	jmp    0x140025668
   140025663:	subsd  xmm0,xmm8
   140025668:	cvttsd2si eax,xmm0
   14002566c:	lea    rcx,[rbp-0x69]
   140025670:	mov    edx,0x2
   140025675:	mov    DWORD PTR [rbp-0x5d],eax
   140025678:	mov    rax,QWORD PTR [rip+0x2fe69]        # 0x1400554e8
   14002567f:	call   QWORD PTR [rax+0xd8]
   140025685:	movd   xmm0,DWORD PTR [rbp+0x67]
   14002568a:	cvtdq2pd xmm0,xmm0
   14002568e:	addsd  xmm0,xmm12
   140025693:	comisd xmm0,xmm9
   140025698:	jb     0x1400256a1
   14002569a:	addsd  xmm0,xmm8
   14002569f:	jmp    0x1400256a6
   1400256a1:	subsd  xmm0,xmm8
   1400256a6:	cvttsd2si edi,xmm0
   1400256aa:	movd   xmm0,DWORD PTR [rbp+0x6b]
   1400256af:	cvtdq2pd xmm0,xmm0
   1400256b3:	addsd  xmm0,xmm10
   1400256b8:	comisd xmm0,xmm9
   1400256bd:	mov    DWORD PTR [rbp+0x67],edi
   1400256c0:	jb     0x140025ef3
   1400256c6:	addsd  xmm0,xmm8
   1400256cb:	jmp    0x140025ef8
   1400256d0:	test   sil,sil
   1400256d3:	jns    0x140025876
   1400256d9:	movaps xmm6,xmm13
   1400256dd:	movaps xmm0,xmm14
   1400256e1:	mulsd  xmm6,QWORD PTR [rip+0x19b17]        # 0x14003f200
   1400256e9:	call   0x14003b87e
   1400256ee:	movaps xmm11,xmm0
   1400256f2:	movaps xmm0,xmm14
   1400256f6:	mulsd  xmm11,xmm6
   1400256fb:	call   0x14003b884
   140025700:	movaps xmm7,xmm13
   140025704:	movaps xmm10,xmm0
   140025708:	mulsd  xmm7,QWORD PTR [rip+0x19ae8]        # 0x14003f1f8
   140025710:	mulsd  xmm10,xmm6
   140025715:	movaps xmm6,xmm14
   140025719:	addsd  xmm6,QWORD PTR [rip+0x19ac7]        # 0x14003f1e8
   140025721:	movaps xmm0,xmm6
   140025724:	call   0x14003b87e
   140025729:	movaps xmm12,xmm0
   14002572d:	movaps xmm0,xmm6
   140025730:	mulsd  xmm12,xmm7
   140025735:	call   0x14003b884
   14002573a:	movd   xmm5,DWORD PTR [rbp+0x67]
   14002573f:	movaps xmm4,xmm0
   140025742:	cvtdq2pd xmm5,xmm5
   140025746:	mulsd  xmm4,xmm7
   14002574a:	movaps xmm2,xmm5
   14002574d:	addsd  xmm2,xmm11
   140025752:	movaps xmm0,xmm2
   140025755:	addsd  xmm0,xmm12
   14002575a:	comisd xmm0,xmm9
   14002575f:	jb     0x140025768
   140025761:	addsd  xmm0,xmm8
   140025766:	jmp    0x14002576d
   140025768:	subsd  xmm0,xmm8
   14002576d:	movd   xmm3,DWORD PTR [rbp+0x6b]
   140025772:	cvttsd2si eax,xmm0
   140025776:	cvtdq2pd xmm3,xmm3
   14002577a:	mov    DWORD PTR [rbp-0x69],eax
   14002577d:	movaps xmm0,xmm3
   140025780:	addsd  xmm0,xmm10
   140025785:	movaps xmm1,xmm0
   140025788:	addsd  xmm1,xmm4
   14002578c:	comisd xmm1,xmm9
   140025791:	jb     0x14002579a
   140025793:	addsd  xmm1,xmm8
   140025798:	jmp    0x14002579f
   14002579a:	subsd  xmm1,xmm8
   14002579f:	cvttsd2si eax,xmm1
   1400257a3:	subsd  xmm2,xmm12
   1400257a8:	mov    DWORD PTR [rbp-0x65],eax
   1400257ab:	mov    rax,QWORD PTR [rbp+0x67]
   1400257af:	comisd xmm2,xmm9
   1400257b4:	mov    QWORD PTR [rbp-0x61],rax
   1400257b8:	jb     0x1400257c1
   1400257ba:	addsd  xmm2,xmm8
   1400257bf:	jmp    0x1400257c6
   1400257c1:	subsd  xmm2,xmm8
   1400257c6:	cvttsd2si eax,xmm2
   1400257ca:	subsd  xmm0,xmm4
   1400257ce:	mov    DWORD PTR [rbp-0x59],eax
   1400257d1:	comisd xmm0,xmm9
   1400257d6:	jb     0x1400257df
   1400257d8:	addsd  xmm0,xmm8
   1400257dd:	jmp    0x1400257e4
   1400257df:	subsd  xmm0,xmm8
   1400257e4:	movsd  xmm1,QWORD PTR [rip+0x17ef4]        # 0x14003d6e0
   1400257ec:	cvttsd2si eax,xmm0
   1400257f0:	movaps xmm0,xmm11
   1400257f4:	mulsd  xmm0,xmm1
   1400257f8:	mov    DWORD PTR [rbp-0x55],eax
   1400257fb:	addsd  xmm0,xmm5
   1400257ff:	comisd xmm0,xmm9
   140025804:	jb     0x14002580d
   140025806:	addsd  xmm0,xmm8
   14002580b:	jmp    0x140025812
   14002580d:	subsd  xmm0,xmm8
   140025812:	cvttsd2si eax,xmm0
   140025816:	movaps xmm0,xmm10
   14002581a:	mulsd  xmm0,xmm1
   14002581e:	addsd  xmm0,xmm3
   140025822:	mov    DWORD PTR [rbp-0x51],eax
   140025825:	comisd xmm0,xmm9
   14002582a:	jb     0x140025833
   14002582c:	addsd  xmm0,xmm8
   140025831:	jmp    0x140025838
   140025833:	subsd  xmm0,xmm8
   140025838:	cvttsd2si eax,xmm0
   14002583c:	mov    r8d,esi
   14002583f:	mov    DWORD PTR [rbp-0x4d],eax
   140025842:	mov    edx,0x4
   140025847:	shr    r8d,0x3
   14002584b:	not    r8d
   14002584e:	and    r8d,0x1
   140025852:	mov    rax,QWORD PTR [rip+0x2fc8f]        # 0x1400554e8
   140025859:	lea    rcx,[rbp-0x69]
   14002585d:	call   QWORD PTR [rax+0xc8]
   140025863:	movd   xmm0,DWORD PTR [rbp+0x67]
   140025868:	cvtdq2pd xmm0,xmm0
   14002586c:	addsd  xmm0,xmm11
   140025871:	jmp    0x140025693
   140025876:	bt     esi,0x8
   14002587a:	jae    0x140025a0c
   140025880:	movaps xmm6,xmm13
   140025884:	movaps xmm0,xmm14
   140025888:	mulsd  xmm6,QWORD PTR [rip+0x19970]        # 0x14003f200
   140025890:	call   0x14003b87e
   140025895:	movaps xmm11,xmm0
   140025899:	movaps xmm0,xmm14
   14002589d:	mulsd  xmm11,xmm6
   1400258a2:	call   0x14003b884
   1400258a7:	movaps xmm7,xmm13
   1400258ab:	movaps xmm10,xmm0
   1400258af:	mulsd  xmm7,QWORD PTR [rip+0x19939]        # 0x14003f1f0
   1400258b7:	mulsd  xmm10,xmm6
   1400258bc:	movaps xmm6,xmm14
   1400258c0:	addsd  xmm6,QWORD PTR [rip+0x19920]        # 0x14003f1e8
   1400258c8:	movaps xmm0,xmm6
   1400258cb:	call   0x14003b87e
   1400258d0:	movaps xmm12,xmm0
   1400258d4:	movaps xmm0,xmm6
   1400258d7:	mulsd  xmm12,xmm7
   1400258dc:	call   0x14003b884
   1400258e1:	movd   xmm2,DWORD PTR [rbp+0x67]
   1400258e6:	movaps xmm3,xmm0
   1400258e9:	cvtdq2pd xmm2,xmm2
   1400258ed:	mulsd  xmm3,xmm7
   1400258f1:	movaps xmm0,xmm2
   1400258f4:	addsd  xmm0,xmm12
   1400258f9:	comisd xmm0,xmm9
   1400258fe:	jb     0x140025907
   140025900:	addsd  xmm0,xmm8
   140025905:	jmp    0x14002590c
   140025907:	subsd  xmm0,xmm8
   14002590c:	cvttsd2si r8d,xmm0
   140025911:	movd   xmm0,DWORD PTR [rbp+0x6b]
   140025916:	cvtdq2pd xmm0,xmm0
   14002591a:	mov    DWORD PTR [rbp-0x69],r8d
   14002591e:	movaps xmm1,xmm0
   140025921:	addsd  xmm1,xmm3
   140025925:	comisd xmm1,xmm9
   14002592a:	jb     0x140025933
   14002592c:	addsd  xmm1,xmm8
   140025931:	jmp    0x140025938
   140025933:	subsd  xmm1,xmm8
   140025938:	cvttsd2si r9d,xmm1
   14002593d:	subsd  xmm2,xmm12
   140025942:	mov    DWORD PTR [rbp-0x65],r9d
   140025946:	comisd xmm2,xmm9
   14002594b:	jb     0x140025954
   14002594d:	addsd  xmm2,xmm8
   140025952:	jmp    0x140025959
   140025954:	subsd  xmm2,xmm8
   140025959:	cvttsd2si eax,xmm2
   14002595d:	subsd  xmm0,xmm3
   140025961:	mov    DWORD PTR [rbp-0x61],eax
   140025964:	comisd xmm0,xmm9
   140025969:	jb     0x140025972
   14002596b:	addsd  xmm0,xmm8
   140025970:	jmp    0x140025977
   140025972:	subsd  xmm0,xmm8
   140025977:	comisd xmm11,xmm9
   14002597c:	cvttsd2si ecx,xmm0
   140025980:	movaps xmm0,xmm11
   140025984:	mov    DWORD PTR [rbp-0x5d],ecx
   140025987:	jb     0x140025990
   140025989:	addsd  xmm0,xmm8
   14002598e:	jmp    0x140025995
   140025990:	subsd  xmm0,xmm8
   140025995:	cvttsd2si edx,xmm0
   140025999:	movaps xmm0,xmm10
   14002599d:	add    eax,edx
   14002599f:	comisd xmm10,xmm9
   1400259a4:	mov    DWORD PTR [rbp-0x59],eax
   1400259a7:	jb     0x1400259b0
   1400259a9:	addsd  xmm0,xmm8
   1400259ae:	jmp    0x1400259b5
   1400259b0:	subsd  xmm0,xmm8
   1400259b5:	cvttsd2si eax,xmm0
   1400259b9:	movaps xmm0,xmm11
   1400259bd:	add    eax,ecx
   1400259bf:	comisd xmm11,xmm9
   1400259c4:	mov    DWORD PTR [rbp-0x55],eax
   1400259c7:	jb     0x1400259d0
   1400259c9:	addsd  xmm0,xmm8
   1400259ce:	jmp    0x1400259d5
   1400259d0:	subsd  xmm0,xmm8
   1400259d5:	cvttsd2si eax,xmm0
   1400259d9:	movaps xmm0,xmm10
   1400259dd:	add    eax,r8d
   1400259e0:	comisd xmm10,xmm9
   1400259e5:	mov    DWORD PTR [rbp-0x51],eax
   1400259e8:	jb     0x1400259fb
   1400259ea:	addsd  xmm0,xmm8
   1400259ef:	cvttsd2si eax,xmm0
   1400259f3:	add    eax,r9d
   1400259f6:	jmp    0x14002583c
   1400259fb:	subsd  xmm0,xmm8
   140025a00:	cvttsd2si eax,xmm0
   140025a04:	add    eax,r9d
   140025a07:	jmp    0x14002583c
   140025a0c:	test   sil,0x2
   140025a10:	je     0x140025b74
   140025a16:	movaps xmm6,xmm13
   140025a1a:	movaps xmm0,xmm14
   140025a1e:	mulsd  xmm6,QWORD PTR [rip+0x197e2]        # 0x14003f208
   140025a26:	call   0x14003b87e
   140025a2b:	movaps xmm11,xmm0
   140025a2f:	movaps xmm0,xmm14
   140025a33:	mulsd  xmm11,xmm6
   140025a38:	call   0x14003b884
   140025a3d:	movaps xmm7,xmm13
   140025a41:	movaps xmm10,xmm0
   140025a45:	mulsd  xmm7,QWORD PTR [rip+0x17b03]        # 0x14003d550
   140025a4d:	mulsd  xmm10,xmm6
   140025a52:	movaps xmm6,xmm14
   140025a56:	addsd  xmm6,QWORD PTR [rip+0x1978a]        # 0x14003f1e8
   140025a5e:	movaps xmm0,xmm6
   140025a61:	call   0x14003b87e
   140025a66:	movaps xmm12,xmm0
   140025a6a:	movaps xmm0,xmm6
   140025a6d:	mulsd  xmm12,xmm7
   140025a72:	call   0x14003b884
   140025a77:	movd   xmm1,DWORD PTR [rbp+0x67]
   140025a7c:	movaps xmm3,xmm0
   140025a7f:	cvtdq2pd xmm1,xmm1
   140025a83:	mulsd  xmm3,xmm7
   140025a87:	movaps xmm0,xmm1
   140025a8a:	addsd  xmm0,xmm12
   140025a8f:	comisd xmm0,xmm9
   140025a94:	jb     0x140025a9d
   140025a96:	addsd  xmm0,xmm8
   140025a9b:	jmp    0x140025aa2
   140025a9d:	subsd  xmm0,xmm8
   140025aa2:	cvttsd2si eax,xmm0
   140025aa6:	movd   xmm0,DWORD PTR [rbp+0x6b]
   140025aab:	cvtdq2pd xmm0,xmm0
   140025aaf:	mov    DWORD PTR [rbp-0x69],eax
   140025ab2:	movaps xmm2,xmm0
   140025ab5:	addsd  xmm2,xmm3
   140025ab9:	comisd xmm2,xmm9
   140025abe:	jb     0x140025ac7
   140025ac0:	addsd  xmm2,xmm8
   140025ac5:	jmp    0x140025acc
   140025ac7:	subsd  xmm2,xmm8
   140025acc:	cvttsd2si eax,xmm2
   140025ad0:	movaps xmm2,xmm1
   140025ad3:	addsd  xmm2,xmm11
   140025ad8:	mov    DWORD PTR [rbp-0x65],eax
   140025adb:	comisd xmm2,xmm9
   140025ae0:	jb     0x140025ae9
   140025ae2:	addsd  xmm2,xmm8
   140025ae7:	jmp    0x140025aee
   140025ae9:	subsd  xmm2,xmm8
   140025aee:	cvttsd2si eax,xmm2
   140025af2:	movaps xmm2,xmm0
   140025af5:	addsd  xmm2,xmm10
   140025afa:	mov    DWORD PTR [rbp-0x61],eax
   140025afd:	comisd xmm2,xmm9
   140025b02:	jb     0x140025b0b
   140025b04:	addsd  xmm2,xmm8
   140025b09:	jmp    0x140025b10
   140025b0b:	subsd  xmm2,xmm8
   140025b10:	cvttsd2si eax,xmm2
   140025b14:	subsd  xmm1,xmm12
   140025b19:	mov    DWORD PTR [rbp-0x5d],eax
   140025b1c:	comisd xmm1,xmm9
   140025b21:	jb     0x140025b2a
   140025b23:	addsd  xmm1,xmm8
   140025b28:	jmp    0x140025b2f
   140025b2a:	subsd  xmm1,xmm8
   140025b2f:	cvttsd2si eax,xmm1
   140025b33:	subsd  xmm0,xmm3
   140025b37:	mov    DWORD PTR [rbp-0x59],eax
   140025b3a:	comisd xmm0,xmm9
   140025b3f:	jb     0x140025b48
   140025b41:	addsd  xmm0,xmm8
   140025b46:	jmp    0x140025b4d
   140025b48:	subsd  xmm0,xmm8
   140025b4d:	cvttsd2si eax,xmm0
   140025b51:	mov    r8d,esi
   140025b54:	mov    edx,0x3
   140025b59:	shr    r8d,0x3
   140025b5d:	not    r8d
   140025b60:	and    r8d,0x1
   140025b64:	mov    DWORD PTR [rbp-0x55],eax
   140025b67:	mov    eax,esi
   140025b69:	and    eax,0x4
   140025b6c:	or     r8d,eax
   140025b6f:	jmp    0x140025852
   140025b74:	bt     esi,0x9
   140025b78:	jae    0x140025d03
   140025b7e:	movaps xmm6,xmm13
   140025b82:	movaps xmm0,xmm14
   140025b86:	mulsd  xmm6,QWORD PTR [rip+0x17e92]        # 0x14003da20
   140025b8e:	call   0x14003b87e
   140025b93:	movaps xmm11,xmm0
   140025b97:	movaps xmm0,xmm14
   140025b9b:	mulsd  xmm11,xmm6
   140025ba0:	call   0x14003b884
   140025ba5:	movaps xmm7,xmm13
   140025ba9:	movaps xmm10,xmm0
   140025bad:	mulsd  xmm7,QWORD PTR [rip+0x1964b]        # 0x14003f200
   140025bb5:	mulsd  xmm10,xmm6
   140025bba:	movaps xmm6,xmm14
   140025bbe:	addsd  xmm6,QWORD PTR [rip+0x19622]        # 0x14003f1e8
   140025bc6:	movaps xmm0,xmm6
   140025bc9:	call   0x14003b87e
   140025bce:	movaps xmm12,xmm0
   140025bd2:	movaps xmm0,xmm6
   140025bd5:	mulsd  xmm12,xmm7
   140025bda:	call   0x14003b884
   140025bdf:	movd   xmm1,DWORD PTR [rbp+0x67]
   140025be4:	movaps xmm3,xmm0
   140025be7:	cvtdq2pd xmm1,xmm1
   140025beb:	mulsd  xmm3,xmm7
   140025bef:	movaps xmm0,xmm1
   140025bf2:	addsd  xmm0,xmm12
   140025bf7:	comisd xmm0,xmm9
   140025bfc:	jb     0x140025c05
   140025bfe:	addsd  xmm0,xmm8
   140025c03:	jmp    0x140025c0a
   140025c05:	subsd  xmm0,xmm8
   140025c0a:	cvttsd2si eax,xmm0
   140025c0e:	movd   xmm0,DWORD PTR [rbp+0x6b]
   140025c13:	cvtdq2pd xmm0,xmm0
   140025c17:	mov    DWORD PTR [rbp-0x69],eax
   140025c1a:	movaps xmm2,xmm0
   140025c1d:	addsd  xmm2,xmm3
   140025c21:	comisd xmm2,xmm9
   140025c26:	jb     0x140025c2f
   140025c28:	addsd  xmm2,xmm8
   140025c2d:	jmp    0x140025c34
   140025c2f:	subsd  xmm2,xmm8
   140025c34:	cvttsd2si eax,xmm2
   140025c38:	movaps xmm2,xmm1
   140025c3b:	addsd  xmm2,xmm11
   140025c40:	mov    DWORD PTR [rbp-0x65],eax
   140025c43:	comisd xmm2,xmm9
   140025c48:	jb     0x140025c51
   140025c4a:	addsd  xmm2,xmm8
   140025c4f:	jmp    0x140025c56
   140025c51:	subsd  xmm2,xmm8
   140025c56:	cvttsd2si eax,xmm2
   140025c5a:	movaps xmm2,xmm0
   140025c5d:	addsd  xmm2,xmm10
   140025c62:	mov    DWORD PTR [rbp-0x61],eax
   140025c65:	comisd xmm2,xmm9
   140025c6a:	jb     0x140025c73
   140025c6c:	addsd  xmm2,xmm8
   140025c71:	jmp    0x140025c78
   140025c73:	subsd  xmm2,xmm8
   140025c78:	cvttsd2si eax,xmm2
   140025c7c:	subsd  xmm1,xmm12
   140025c81:	mov    DWORD PTR [rbp-0x5d],eax
   140025c84:	comisd xmm1,xmm9
   140025c89:	jb     0x140025c92
   140025c8b:	addsd  xmm1,xmm8
   140025c90:	jmp    0x140025c97
   140025c92:	subsd  xmm1,xmm8
   140025c97:	cvttsd2si eax,xmm1
   140025c9b:	subsd  xmm0,xmm3
   140025c9f:	mov    DWORD PTR [rbp-0x59],eax
   140025ca2:	comisd xmm0,xmm9
   140025ca7:	jb     0x140025cb0
   140025ca9:	addsd  xmm0,xmm8
   140025cae:	jmp    0x140025cb5
   140025cb0:	subsd  xmm0,xmm8
   140025cb5:	cvttsd2si eax,xmm0
   140025cb9:	lea    rcx,[rbp-0x69]
   140025cbd:	mov    edx,0x3
   140025cc2:	mov    DWORD PTR [rbp-0x55],eax
   140025cc5:	mov    rax,QWORD PTR [rip+0x2f81c]        # 0x1400554e8
   140025ccc:	call   QWORD PTR [rax+0xd8]
   140025cd2:	mov    rax,QWORD PTR [rbp+0x67]
   140025cd6:	lea    rcx,[rbp-0x69]
   140025cda:	mov    QWORD PTR [rbp-0x69],rax
   140025cde:	mov    rax,QWORD PTR [rip+0x2f803]        # 0x1400554e8
   140025ce5:	mov    edx,0x2
   140025cea:	call   QWORD PTR [rax+0xd8]
   140025cf0:	movd   xmm0,DWORD PTR [rbp+0x67]
   140025cf5:	cvtdq2pd xmm0,xmm0
   140025cf9:	addsd  xmm0,xmm11
   140025cfe:	jmp    0x140025693
   140025d03:	mov    ebx,DWORD PTR [rbp+0x6b]
   140025d06:	mov    edi,DWORD PTR [rbp+0x67]
   140025d09:	jmp    0x140025eff
   140025d0e:	mov    ebx,esi
   140025d10:	movaps xmm6,xmm13
   140025d14:	movaps xmm0,xmm14
   140025d18:	and    ebx,0x40
   140025d1b:	je     0x140025d4a
   140025d1d:	mulsd  xmm6,QWORD PTR [rip+0x194e3]        # 0x14003f208
   140025d25:	call   0x14003b87e
   140025d2a:	movaps xmm11,xmm0
   140025d2e:	movaps xmm0,xmm14
   140025d32:	mulsd  xmm11,xmm6
   140025d37:	call   0x14003b884
   140025d3c:	movaps xmm7,xmm13
   140025d40:	mulsd  xmm7,QWORD PTR [rip+0x17808]        # 0x14003d550
   140025d48:	jmp    0x140025d75
   140025d4a:	mulsd  xmm6,QWORD PTR [rip+0x17cce]        # 0x14003da20
   140025d52:	call   0x14003b87e
   140025d57:	movaps xmm11,xmm0
   140025d5b:	movaps xmm0,xmm14
   140025d5f:	mulsd  xmm11,xmm6
   140025d64:	call   0x14003b884
   140025d69:	movaps xmm7,xmm13
   140025d6d:	mulsd  xmm7,QWORD PTR [rip+0x1947b]        # 0x14003f1f0
   140025d75:	movaps xmm12,xmm0
   140025d79:	mulsd  xmm12,xmm6
   140025d7e:	movaps xmm6,xmm14
   140025d82:	addsd  xmm6,QWORD PTR [rip+0x1945e]        # 0x14003f1e8
   140025d8a:	movaps xmm0,xmm6
   140025d8d:	call   0x14003b87e
   140025d92:	movaps xmm10,xmm0
   140025d96:	movaps xmm0,xmm6
   140025d99:	mulsd  xmm10,xmm7
   140025d9e:	call   0x14003b884
   140025da3:	movd   xmm1,DWORD PTR [rbp+0x67]
   140025da8:	movaps xmm3,xmm0
   140025dab:	cvtdq2pd xmm1,xmm1
   140025daf:	mulsd  xmm3,xmm7
   140025db3:	addsd  xmm1,xmm11
   140025db8:	movaps xmm0,xmm1
   140025dbb:	subsd  xmm0,xmm10
   140025dc0:	comisd xmm0,xmm9
   140025dc5:	jb     0x140025dce
   140025dc7:	addsd  xmm0,xmm8
   140025dcc:	jmp    0x140025dd3
   140025dce:	subsd  xmm0,xmm8
   140025dd3:	cvttsd2si eax,xmm0
   140025dd7:	movd   xmm0,DWORD PTR [rbp+0x6b]
   140025ddc:	cvtdq2pd xmm0,xmm0
   140025de0:	mov    DWORD PTR [rbp-0x69],eax
   140025de3:	addsd  xmm0,xmm12
   140025de8:	movaps xmm2,xmm0
   140025deb:	subsd  xmm2,xmm3
   140025def:	comisd xmm2,xmm9
   140025df4:	jb     0x140025dfd
   140025df6:	addsd  xmm2,xmm8
   140025dfb:	jmp    0x140025e02
   140025dfd:	subsd  xmm2,xmm8
   140025e02:	cvttsd2si eax,xmm2
   140025e06:	addsd  xmm1,xmm10
   140025e0b:	mov    DWORD PTR [rbp-0x65],eax
   140025e0e:	mov    rax,QWORD PTR [rbp+0x67]
   140025e12:	comisd xmm1,xmm9
   140025e17:	mov    QWORD PTR [rbp-0x61],rax
   140025e1b:	jb     0x140025e24
   140025e1d:	addsd  xmm1,xmm8
   140025e22:	jmp    0x140025e29
   140025e24:	subsd  xmm1,xmm8
   140025e29:	cvttsd2si eax,xmm1
   140025e2d:	addsd  xmm0,xmm3
   140025e31:	mov    DWORD PTR [rbp-0x59],eax
   140025e34:	comisd xmm0,xmm9
   140025e39:	jb     0x140025e42
   140025e3b:	addsd  xmm0,xmm8
   140025e40:	jmp    0x140025e47
   140025e42:	subsd  xmm0,xmm8
   140025e47:	cvttsd2si eax,xmm0
   140025e4b:	mov    DWORD PTR [rbp-0x55],eax
   140025e4e:	test   edi,edi
   140025e50:	je     0x140025e78
   140025e52:	mov    rax,QWORD PTR [rip+0x2f68f]        # 0x1400554e8
   140025e59:	mov    r8d,esi
   140025e5c:	lea    rcx,[rbp-0x69]
   140025e60:	shr    r8d,0x3
   140025e64:	mov    edx,0x3
   140025e69:	not    r8d
   140025e6c:	and    r8d,0x1
   140025e70:	call   QWORD PTR [rax+0xc8]
   140025e76:	jmp    0x140025ebb
   140025e78:	test   sil,0x20
   140025e7c:	je     0x140025e85
   140025e7e:	mov    edx,0x3
   140025e83:	jmp    0x140025e8e
   140025e85:	test   ebx,ebx
   140025e87:	je     0x140025ea1
   140025e89:	mov    edx,0x2
   140025e8e:	mov    rax,QWORD PTR [rip+0x2f653]        # 0x1400554e8
   140025e95:	lea    rcx,[rbp-0x69]
   140025e99:	call   QWORD PTR [rax+0xd8]
   140025e9f:	jmp    0x140025ebb
   140025ea1:	lea    rdx,[rip+0x192c8]        # 0x14003f170
   140025ea8:	lea    rcx,[rip+0x19335]        # 0x14003f1e4
   140025eaf:	mov    r8d,0xdd
   140025eb5:	call   QWORD PTR [rip+0x171d5]        # 0x14003d090
   140025ebb:	movd   xmm0,DWORD PTR [rbp+0x67]
   140025ec0:	cvtdq2pd xmm0,xmm0
   140025ec4:	addsd  xmm0,xmm11
   140025ec9:	comisd xmm0,xmm9
   140025ece:	jb     0x140025ed7
   140025ed0:	addsd  xmm0,xmm8
   140025ed5:	jmp    0x140025edc
   140025ed7:	subsd  xmm0,xmm8
   140025edc:	cvttsd2si edi,xmm0
   140025ee0:	movd   xmm0,DWORD PTR [rbp+0x6b]
   140025ee5:	cvtdq2pd xmm0,xmm0
   140025ee9:	addsd  xmm0,xmm12
   140025eee:	jmp    0x1400256b8
   140025ef3:	subsd  xmm0,xmm8
   140025ef8:	cvttsd2si ebx,xmm0
   140025efc:	mov    DWORD PTR [rbp+0x6b],ebx
   140025eff:	movaps xmm12,XMMWORD PTR [rsp+0x60]
   140025f05:	movaps xmm11,XMMWORD PTR [rsp+0x70]
   140025f0b:	movaps xmm10,XMMWORD PTR [rsp+0x80]
   140025f14:	movaps xmm7,XMMWORD PTR [rsp+0xb0]
   140025f1c:	movaps xmm6,XMMWORD PTR [rsp+0xc0]
   140025f24:	test   sil,0x4
   140025f28:	je     0x140025fd9
   140025f2e:	mulsd  xmm13,QWORD PTR [rip+0x17619]        # 0x14003d550
   140025f37:	mov    QWORD PTR [rsp+0xf8],r14
   140025f3f:	comisd xmm13,xmm9
   140025f44:	movaps xmm0,xmm13
   140025f48:	jb     0x140025f51
   140025f4a:	addsd  xmm0,xmm8
   140025f4f:	jmp    0x140025f56
   140025f51:	subsd  xmm0,xmm8
   140025f56:	cvttsd2si r14d,xmm0
   140025f5b:	movaps xmm0,xmm14
   140025f5f:	call   0x14003b87e
   140025f64:	mulsd  xmm0,xmm13
   140025f69:	comisd xmm0,xmm9
   140025f6e:	jb     0x140025f77
   140025f70:	addsd  xmm0,xmm8
   140025f75:	jmp    0x140025f7c
   140025f77:	subsd  xmm0,xmm8
   140025f7c:	cvttsd2si eax,xmm0
   140025f80:	movaps xmm0,xmm14
   140025f84:	add    edi,eax
   140025f86:	mov    DWORD PTR [rbp+0x67],edi
   140025f89:	call   0x14003b884
   140025f8e:	mulsd  xmm0,xmm13
   140025f93:	comisd xmm0,xmm9
   140025f98:	jb     0x140025fa1
   140025f9a:	addsd  xmm0,xmm8
   140025f9f:	jmp    0x140025fa6
   140025fa1:	subsd  xmm0,xmm8
   140025fa6:	cvttsd2si eax,xmm0
   140025faa:	shr    esi,0x3
   140025fad:	mov    r8d,r14d
   140025fb0:	not    esi
   140025fb2:	mov    edx,r14d
   140025fb5:	and    esi,0x1
   140025fb8:	add    ebx,eax
   140025fba:	mov    rax,QWORD PTR [rip+0x2f527]        # 0x1400554e8
   140025fc1:	mov    r9d,esi
   140025fc4:	mov    DWORD PTR [rbp+0x6b],ebx
   140025fc7:	mov    rcx,QWORD PTR [rbp+0x67]
   140025fcb:	call   QWORD PTR [rax+0xc0]
   140025fd1:	mov    r14,QWORD PTR [rsp+0xf8]
   140025fd9:	mov    rax,QWORD PTR [rip+0x2f508]        # 0x1400554e8
   140025fe0:	call   QWORD PTR [rax+0x90]
   140025fe6:	movaps xmm14,XMMWORD PTR [rsp+0x40]
   140025fec:	lea    r11,[rsp+0xd0]
   140025ff4:	mov    rbx,QWORD PTR [r11+0x30]
   140025ff8:	movaps xmm8,XMMWORD PTR [r11-0x30]
   140025ffd:	movaps xmm9,XMMWORD PTR [r11-0x40]
   140026002:	movaps xmm13,XMMWORD PTR [r11-0x80]
   140026007:	mov    rsp,r11
   14002600a:	pop    rdi
   14002600b:	pop    rsi
   14002600c:	pop    rbp
   14002600d:	ret    
   14002600e:	int3   
   14002600f:	int3   
   140026010:	rex push rbx
   140026012:	sub    rsp,0x20
   140026016:	xor    ebx,ebx
   140026018:	lea    r8,[rip+0x26f51]        # 0x14004cf70
   14002601f:	nop
   140026020:	cmp    edx,DWORD PTR [r8]
   140026023:	je     0x14002603d
   140026025:	inc    ebx
   140026027:	add    r8,0x4
   14002602b:	movsxd rax,ebx
   14002602e:	cmp    rax,0x12
   140026032:	jb     0x140026020
   140026034:	xorps  xmm0,xmm0
   140026037:	add    rsp,0x20
   14002603b:	pop    rbx
   14002603c:	ret    
   14002603d:	mov    rdx,QWORD PTR [rip+0x2f2fc]        # 0x140055340
   140026044:	movsd  xmm2,QWORD PTR [rip+0x17394]        # 0x14003d3e0
   14002604c:	xorps  xmm3,xmm3
   14002604f:	call   0x14001c2e0
   140026054:	lea    rcx,[rip+0x26f65]        # 0x14004cfc0
   14002605b:	movsxd rax,ebx
   14002605e:	movd   xmm1,DWORD PTR [rcx+rax*4]
   140026063:	cvtdq2pd xmm1,xmm1
   140026067:	mulsd  xmm0,xmm1
   14002606b:	add    rsp,0x20
   14002606f:	pop    rbx
   140026070:	ret    
   140026071:	int3   
   140026072:	int3   
   140026073:	int3   
   140026074:	int3   
   140026075:	int3   
   140026076:	int3   
   140026077:	int3   
   140026078:	int3   
   140026079:	int3   
   14002607a:	int3   
   14002607b:	int3   
   14002607c:	int3   
   14002607d:	int3   
   14002607e:	int3   
   14002607f:	int3   
   140026080:	mov    QWORD PTR [rsp+0x10],rbx
   140026085:	push   rdi
   140026086:	sub    rsp,0x40
   14002608a:	mov    rdi,rdx
   14002608d:	mov    rbx,rcx
   140026090:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140026095:	lea    rdx,[rip+0x19174]        # 0x14003f210
   14002609c:	mov    r8d,0x4
   1400260a2:	mov    rcx,rdi
   1400260a5:	movaps XMMWORD PTR [rsp+0x20],xmm7
   1400260aa:	xorps  xmm6,xmm6
   1400260ad:	movaps xmm7,xmm2
   1400260b0:	call   0x14001d000
   1400260b5:	test   eax,eax
   1400260b7:	jne    0x1400260c2
   1400260b9:	lea    rcx,[rip+0x27750]        # 0x14004d810
   1400260c0:	jmp    0x1400260eb
   1400260c2:	lea    rdx,[rip+0x1914f]        # 0x14003f218
   1400260c9:	mov    r8d,0x5
   1400260cf:	mov    rcx,rdi
   1400260d2:	call   0x14001d000
   1400260d7:	lea    rcx,[rip+0x27f32]        # 0x14004e010
   1400260de:	lea    rdx,[rip+0x26f2b]        # 0x14004d010
   1400260e5:	test   eax,eax
   1400260e7:	cmovne rcx,rdx
   1400260eb:	movzx  eax,BYTE PTR [rbx]
   1400260ee:	test   al,al
   1400260f0:	je     0x140026112
   1400260f2:	nop    DWORD PTR [rax+0x0]
   1400260f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140026100:	movzx  eax,al
   140026103:	inc    rbx
   140026106:	addsd  xmm6,QWORD PTR [rcx+rax*8]
   14002610b:	movzx  eax,BYTE PTR [rbx]
   14002610e:	test   al,al
   140026110:	jne    0x140026100
   140026112:	mov    rbx,QWORD PTR [rsp+0x58]
   140026117:	mulsd  xmm6,xmm7
   14002611b:	cvttsd2si eax,xmm6
   14002611f:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140026124:	mov    DWORD PTR [rsp+0x50],eax
   140026128:	cvttsd2si eax,xmm7
   14002612c:	movaps xmm7,XMMWORD PTR [rsp+0x20]
   140026131:	mov    DWORD PTR [rsp+0x54],eax
   140026135:	mov    rax,QWORD PTR [rsp+0x50]
   14002613a:	add    rsp,0x40
   14002613e:	pop    rdi
   14002613f:	ret    
   140026140:	mov    QWORD PTR [rsp+0x10],rbx
   140026145:	mov    QWORD PTR [rsp+0x18],rsi
   14002614a:	push   rdi
   14002614b:	push   r14
   14002614d:	push   r15
   14002614f:	sub    rsp,0x20
   140026153:	movzx  ebx,BYTE PTR [rcx]
   140026156:	mov    r15,rcx
   140026159:	mov    rsi,rcx
   14002615c:	lea    rdi,[rip+0x2dadd]        # 0x140053c40
   140026163:	mov    r14d,0x80
   140026169:	test   bl,bl
   14002616b:	je     0x1400261d1
   14002616d:	mov    QWORD PTR [rsp+0x40],rbp
   140026172:	lea    rsi,[rsi+0x1]
   140026176:	dec    r14d
   140026179:	je     0x1400261ae
   14002617b:	movsx  ebp,bl
   14002617e:	mov    ecx,ebp
   140026180:	call   QWORD PTR [rip+0x16f4a]        # 0x14003d0d0
   140026186:	test   eax,eax
   140026188:	je     0x1400261a5
   14002618a:	mov    ecx,ebp
   14002618c:	call   QWORD PTR [rip+0x16f8e]        # 0x14003d120
   140026192:	test   eax,eax
   140026194:	je     0x1400261a0
   140026196:	mov    ecx,ebp
   140026198:	call   QWORD PTR [rip+0x16f8a]        # 0x14003d128
   14002619e:	mov    ebx,eax
   1400261a0:	mov    BYTE PTR [rdi],bl
   1400261a2:	inc    rdi
   1400261a5:	movzx  ebx,BYTE PTR [rsi]
   1400261a8:	test   bl,bl
   1400261aa:	jne    0x140026172
   1400261ac:	jmp    0x1400261cc
   1400261ae:	test   bl,bl
   1400261b0:	je     0x1400261cc
   1400261b2:	call   QWORD PTR [rip+0x17118]        # 0x14003d2d0
   1400261b8:	lea    rdx,[rip+0x1ae79]        # 0x140041038
   1400261bf:	mov    r8,r15
   1400261c2:	lea    rcx,[rax+0x60]
   1400261c6:	call   QWORD PTR [rip+0x170f4]        # 0x14003d2c0
   1400261cc:	mov    rbp,QWORD PTR [rsp+0x40]
   1400261d1:	mov    rbx,QWORD PTR [rsp+0x48]
   1400261d6:	mov    rsi,QWORD PTR [rsp+0x50]
   1400261db:	mov    BYTE PTR [rdi],0x0
   1400261de:	lea    rax,[rip+0x2da5b]        # 0x140053c40
   1400261e5:	add    rsp,0x20
   1400261e9:	pop    r15
   1400261eb:	pop    r14
   1400261ed:	pop    rdi
   1400261ee:	ret    
   1400261ef:	int3   
   1400261f0:	mov    rcx,QWORD PTR [rcx]
   1400261f3:	mov    r8,QWORD PTR [rdx]
   1400261f6:	movsx  edx,BYTE PTR [r8]
   1400261fa:	movsx  eax,BYTE PTR [rcx]
   1400261fd:	sub    eax,edx
   1400261ff:	jne    0x14002621c
   140026201:	sub    r8,rcx
   140026204:	movzx  eax,BYTE PTR [rcx]
   140026207:	cmp    al,BYTE PTR [rcx+r8*1]
   14002620b:	jne    0x140026217
   14002620d:	inc    rcx
   140026210:	test   al,al
   140026212:	jne    0x140026204
   140026214:	xor    eax,eax
   140026216:	ret    
   140026217:	sbb    eax,eax
   140026219:	or     eax,0x1
   14002621c:	ret    
   14002621d:	int3   
   14002621e:	int3   
   14002621f:	int3   
   140026220:	rex push rbp
   140026222:	push   rbx
   140026223:	push   rsi
   140026224:	push   rdi
   140026225:	push   r12
   140026227:	push   r14
   140026229:	lea    rbp,[rsp-0x2f]
   14002622e:	sub    rsp,0xf8
   140026235:	mov    DWORD PTR [rdx+0x18],r8d
   140026239:	cmp    BYTE PTR [rcx],0x20
   14002623c:	mov    edi,r8d
   14002623f:	mov    rbx,rdx
   140026242:	mov    rsi,rcx
   140026245:	jne    0x14002624f
   140026247:	inc    rsi
   14002624a:	cmp    BYTE PTR [rsi],0x20
   14002624d:	je     0x140026247
   14002624f:	xor    r12d,r12d
   140026252:	cmp    BYTE PTR [rsi],0x23
   140026255:	mov    r14,rsi
   140026258:	mov    DWORD PTR [rbp+0x7f],r12d
   14002625c:	jne    0x14002647f
   140026262:	lea    rax,[rbp+0x7f]
   140026266:	lea    r9,[rbp+0x67]
   14002626a:	lea    r8,[rbp+0x77]
   14002626e:	mov    QWORD PTR [rsp+0x28],rax
   140026273:	lea    rax,[rbp+0x6f]
   140026277:	lea    rdx,[rip+0x1ade2]        # 0x140041060
   14002627e:	mov    rcx,rsi
   140026281:	mov    QWORD PTR [rsp+0x20],rax
   140026286:	call   QWORD PTR [rip+0x1702c]        # 0x14003d2b8
   14002628c:	cmp    eax,0x3
   14002628f:	jl     0x14002647f
   140026295:	test   edi,edi
   140026297:	je     0x140026402
   14002629d:	dec    edi
   14002629f:	je     0x1400263d7
   1400262a5:	dec    edi
   1400262a7:	je     0x140026354
   1400262ad:	dec    edi
   1400262af:	jne    0x1400269d7
   1400262b5:	movsd  xmm0,QWORD PTR [rip+0x1adfb]        # 0x1400410b8
   1400262bd:	movsd  xmm4,QWORD PTR [rip+0x1711b]        # 0x14003d3e0
   1400262c5:	movd   xmm3,DWORD PTR [rbp+0x77]
   1400262ca:	movd   xmm1,DWORD PTR [rbp+0x67]
   1400262cf:	movd   xmm2,DWORD PTR [rbp+0x6f]
   1400262d4:	cvtdq2pd xmm3,xmm3
   1400262d8:	movaps xmm5,xmm4
   1400262db:	cvtdq2pd xmm1,xmm1
   1400262df:	cvtdq2pd xmm2,xmm2
   1400262e3:	divsd  xmm3,xmm0
   1400262e7:	divsd  xmm1,xmm0
   1400262eb:	divsd  xmm2,xmm0
   1400262ef:	subsd  xmm5,xmm3
   1400262f3:	movaps xmm3,xmm4
   1400262f6:	subsd  xmm3,xmm1
   1400262fa:	subsd  xmm4,xmm2
   1400262fe:	comisd xmm3,xmm5
   140026302:	jbe    0x140026309
   140026304:	movaps xmm0,xmm5
   140026307:	jmp    0x14002630c
   140026309:	movaps xmm0,xmm3
   14002630c:	comisd xmm0,xmm4
   140026310:	jbe    0x140026315
   140026312:	movaps xmm0,xmm4
   140026315:	subsd  xmm5,xmm0
   140026319:	subsd  xmm3,xmm0
   14002631d:	subsd  xmm4,xmm0
   140026321:	cvttsd2si eax,xmm5
   140026325:	neg    al
   140026327:	mov    BYTE PTR [rbx],al
   140026329:	cvttsd2si eax,xmm3
   14002632d:	neg    al
   14002632f:	mov    BYTE PTR [rbx+0x1],al
   140026332:	cvttsd2si eax,xmm4
   140026336:	neg    al
   140026338:	mov    BYTE PTR [rbx+0x2],al
   14002633b:	cvttsd2si eax,xmm0
   14002633f:	neg    al
   140026341:	mov    BYTE PTR [rbx+0x3],al
   140026344:	add    rsp,0xf8
   14002634b:	pop    r14
   14002634d:	pop    r12
   14002634f:	pop    rdi
   140026350:	pop    rsi
   140026351:	pop    rbx
   140026352:	pop    rbp
   140026353:	ret    
   140026354:	imul   ecx,DWORD PTR [rbp+0x77],0xffff
   14002635b:	mov    eax,0x80808081
   140026360:	imul   ecx
   140026362:	add    edx,ecx
   140026364:	imul   ecx,DWORD PTR [rbp+0x67],0xffff
   14002636b:	sar    edx,0x7
   14002636e:	mov    eax,edx
   140026370:	shr    eax,0x1f
   140026373:	add    edx,eax
   140026375:	mov    eax,0x80808081
   14002637a:	mov    DWORD PTR [rbx],edx
   14002637c:	imul   ecx
   14002637e:	add    edx,ecx
   140026380:	imul   ecx,DWORD PTR [rbp+0x6f],0xffff
   140026387:	sar    edx,0x7
   14002638a:	mov    eax,edx
   14002638c:	shr    eax,0x1f
   14002638f:	add    edx,eax
   140026391:	mov    eax,0x80808081
   140026396:	mov    DWORD PTR [rbx+0x4],edx
   140026399:	imul   ecx
   14002639b:	add    edx,ecx
   14002639d:	mov    eax,0x80808081
   1400263a2:	sar    edx,0x7
   1400263a5:	mov    ecx,edx
   1400263a7:	shr    ecx,0x1f
   1400263aa:	add    edx,ecx
   1400263ac:	mov    DWORD PTR [rbx+0x8],edx
   1400263af:	imul   ecx,DWORD PTR [rbp+0x7f],0xffff
   1400263b6:	imul   ecx
   1400263b8:	add    edx,ecx
   1400263ba:	sar    edx,0x7
   1400263bd:	mov    eax,edx
   1400263bf:	shr    eax,0x1f
   1400263c2:	add    edx,eax
   1400263c4:	mov    DWORD PTR [rbx+0xc],edx
   1400263c7:	add    rsp,0xf8
   1400263ce:	pop    r14
   1400263d0:	pop    r12
   1400263d2:	pop    rdi
   1400263d3:	pop    rsi
   1400263d4:	pop    rbx
   1400263d5:	pop    rbp
   1400263d6:	ret    
   1400263d7:	movzx  eax,BYTE PTR [rbp+0x77]
   1400263db:	mov    BYTE PTR [rbx],al
   1400263dd:	movzx  eax,BYTE PTR [rbp+0x67]
   1400263e1:	mov    BYTE PTR [rbx+0x1],al
   1400263e4:	movzx  eax,BYTE PTR [rbp+0x6f]
   1400263e8:	mov    BYTE PTR [rbx+0x2],al
   1400263eb:	movzx  eax,BYTE PTR [rbp+0x7f]
   1400263ef:	mov    BYTE PTR [rbx+0x3],al
   1400263f2:	add    rsp,0xf8
   1400263f9:	pop    r14
   1400263fb:	pop    r12
   1400263fd:	pop    rdi
   1400263fe:	pop    rsi
   1400263ff:	pop    rbx
   140026400:	pop    rbp
   140026401:	ret    
   140026402:	movsd  xmm3,QWORD PTR [rip+0x1acae]        # 0x1400410b8
   14002640a:	movd   xmm0,DWORD PTR [rbp+0x77]
   14002640f:	movd   xmm1,DWORD PTR [rbp+0x67]
   140026414:	lea    rax,[rsp+0x40]
   140026419:	lea    r9,[rsp+0x30]
   14002641e:	mov    QWORD PTR [rsp+0x28],rax
   140026423:	lea    rax,[rsp+0x38]
   140026428:	cvtdq2pd xmm0,xmm0
   14002642c:	cvtdq2pd xmm1,xmm1
   140026430:	movd   xmm2,DWORD PTR [rbp+0x6f]
   140026435:	mov    QWORD PTR [rsp+0x20],rax
   14002643a:	divsd  xmm0,xmm3
   14002643e:	divsd  xmm1,xmm3
   140026442:	cvtdq2pd xmm2,xmm2
   140026446:	divsd  xmm2,xmm3
   14002644a:	call   0x140026c10
   14002644f:	movsd  xmm1,QWORD PTR [rsp+0x30]
   140026455:	movsd  xmm2,QWORD PTR [rsp+0x38]
   14002645b:	movsd  xmm0,QWORD PTR [rsp+0x40]
   140026461:	movsd  QWORD PTR [rbx],xmm1
   140026465:	movsd  QWORD PTR [rbx+0x8],xmm2
   14002646a:	movsd  QWORD PTR [rbx+0x10],xmm0
   14002646f:	add    rsp,0xf8
   140026476:	pop    r14
   140026478:	pop    r12
   14002647a:	pop    rdi
   14002647b:	pop    rsi
   14002647c:	pop    rbx
   14002647d:	pop    rbp
   14002647e:	ret    
   14002647f:	movzx  eax,BYTE PTR [rsi]
   140026482:	movaps XMMWORD PTR [rsp+0xe0],xmm6
   14002648a:	cmp    al,0x2e
   14002648c:	je     0x14002649f
   14002648e:	movsx  ecx,al
   140026491:	call   QWORD PTR [rip+0x16c69]        # 0x14003d100
   140026497:	test   eax,eax
   140026499:	je     0x14002669c
   14002649f:	movzx  ecx,BYTE PTR [rsi]
   1400264a2:	mov    QWORD PTR [rsp+0xf0],r15
   1400264aa:	mov    edx,0x80
   1400264af:	lea    r15,[rbp-0x69]
   1400264b3:	test   cl,cl
   1400264b5:	je     0x140026501
   1400264b7:	lea    r8d,[rdx-0x60]
   1400264bb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400264c0:	lea    r14,[r14+0x1]
   1400264c4:	dec    edx
   1400264c6:	je     0x1400264e3
   1400264c8:	cmp    cl,0x2c
   1400264cb:	movzx  eax,cl
   1400264ce:	movzx  ecx,BYTE PTR [r14]
   1400264d2:	cmove  eax,r8d
   1400264d6:	inc    r15
   1400264d9:	mov    BYTE PTR [r15-0x1],al
   1400264dd:	test   cl,cl
   1400264df:	jne    0x1400264c0
   1400264e1:	jmp    0x140026501
   1400264e3:	test   cl,cl
   1400264e5:	je     0x140026501
   1400264e7:	call   QWORD PTR [rip+0x16de3]        # 0x14003d2d0
   1400264ed:	lea    rdx,[rip+0x1ab44]        # 0x140041038
   1400264f4:	mov    r8,rsi
   1400264f7:	lea    rcx,[rax+0x60]
   1400264fb:	call   QWORD PTR [rip+0x16dbf]        # 0x14003d2c0
   140026501:	lea    rax,[rsp+0x40]
   140026506:	lea    r9,[rsp+0x38]
   14002650b:	lea    r8,[rsp+0x30]
   140026510:	lea    rdx,[rip+0x1ab59]        # 0x140041070
   140026517:	lea    rcx,[rbp-0x69]
   14002651b:	mov    BYTE PTR [r15],r12b
   14002651e:	mov    QWORD PTR [rsp+0x20],rax
   140026523:	call   QWORD PTR [rip+0x16d8f]        # 0x14003d2b8
   140026529:	mov    r15,QWORD PTR [rsp+0xf0]
   140026531:	cmp    eax,0x3
   140026534:	jne    0x14002669c
   14002653a:	movsd  xmm6,QWORD PTR [rip+0x16e9e]        # 0x14003d3e0
   140026542:	movsd  xmm0,QWORD PTR [rsp+0x30]
   140026548:	xorps  xmm3,xmm3
   14002654b:	comisd xmm6,xmm0
   14002654f:	jbe    0x14002655c
   140026551:	comisd xmm0,xmm3
   140026555:	ja     0x14002655f
   140026557:	movaps xmm0,xmm3
   14002655a:	jmp    0x14002655f
   14002655c:	movaps xmm0,xmm6
   14002655f:	movsd  xmm1,QWORD PTR [rsp+0x38]
   140026565:	comisd xmm6,xmm1
   140026569:	jbe    0x140026576
   14002656b:	comisd xmm1,xmm3
   14002656f:	ja     0x140026579
   140026571:	movaps xmm1,xmm3
   140026574:	jmp    0x140026579
   140026576:	movaps xmm1,xmm6
   140026579:	movsd  xmm2,QWORD PTR [rsp+0x40]
   14002657f:	comisd xmm6,xmm2
   140026583:	jbe    0x140026590
   140026585:	comisd xmm2,xmm3
   140026589:	ja     0x140026593
   14002658b:	movaps xmm2,xmm3
   14002658e:	jmp    0x140026593
   140026590:	movaps xmm2,xmm6
   140026593:	test   edi,edi
   140026595:	je     0x140026689
   14002659b:	dec    edi
   14002659d:	je     0x14002662e
   1400265a3:	dec    edi
   1400265a5:	je     0x140026855
   1400265ab:	dec    edi
   1400265ad:	jne    0x1400269cf
   1400265b3:	lea    rax,[rbp+0x7f]
   1400265b7:	lea    r9,[rbp+0x67]
   1400265bb:	mov    QWORD PTR [rsp+0x28],rax
   1400265c0:	lea    rax,[rbp+0x6f]
   1400265c4:	mov    QWORD PTR [rsp+0x20],rax
   1400265c9:	call   0x1400269f0
   1400265ce:	movaps xmm2,xmm6
   1400265d1:	movaps xmm1,xmm6
   1400265d4:	subsd  xmm6,QWORD PTR [rbp+0x7f]
   1400265d9:	subsd  xmm2,QWORD PTR [rbp+0x67]
   1400265de:	subsd  xmm1,QWORD PTR [rbp+0x6f]
   1400265e3:	comisd xmm1,xmm2
   1400265e7:	jbe    0x1400265ee
   1400265e9:	movaps xmm0,xmm2
   1400265ec:	jmp    0x1400265f1
   1400265ee:	movaps xmm0,xmm1
   1400265f1:	comisd xmm0,xmm6
   1400265f5:	jbe    0x1400265fa
   1400265f7:	movaps xmm0,xmm6
   1400265fa:	subsd  xmm2,xmm0
   1400265fe:	subsd  xmm1,xmm0
   140026602:	subsd  xmm6,xmm0
   140026606:	cvttsd2si eax,xmm2
   14002660a:	neg    al
   14002660c:	mov    BYTE PTR [rbx],al
   14002660e:	cvttsd2si eax,xmm1
   140026612:	neg    al
   140026614:	mov    BYTE PTR [rbx+0x1],al
   140026617:	cvttsd2si eax,xmm6
   14002661b:	neg    al
   14002661d:	mov    BYTE PTR [rbx+0x2],al
   140026620:	cvttsd2si eax,xmm0
   140026624:	neg    al
   140026626:	mov    BYTE PTR [rbx+0x3],al
   140026629:	jmp    0x1400269cf
   14002662e:	lea    rax,[rbp+0x7f]
   140026632:	lea    r9,[rbp+0x67]
   140026636:	mov    QWORD PTR [rsp+0x28],rax
   14002663b:	lea    rax,[rbp+0x6f]
   14002663f:	mov    QWORD PTR [rsp+0x20],rax
   140026644:	call   0x1400269f0
   140026649:	mov    BYTE PTR [rbx+0x3],r12b
   14002664d:	movsd  xmm3,QWORD PTR [rip+0x1aa63]        # 0x1400410b8
   140026655:	movsd  xmm2,QWORD PTR [rbp+0x67]
   14002665a:	movsd  xmm0,QWORD PTR [rbp+0x6f]
   14002665f:	mulsd  xmm2,xmm3
   140026663:	mulsd  xmm0,xmm3
   140026667:	movsd  xmm1,QWORD PTR [rbp+0x7f]
   14002666c:	cvttsd2si eax,xmm2
   140026670:	mulsd  xmm1,xmm3
   140026674:	mov    BYTE PTR [rbx],al
   140026676:	cvttsd2si eax,xmm0
   14002667a:	mov    BYTE PTR [rbx+0x1],al
   14002667d:	cvttsd2si eax,xmm1
   140026681:	mov    BYTE PTR [rbx+0x2],al
   140026684:	jmp    0x1400269cf
   140026689:	movsd  QWORD PTR [rbx],xmm0
   14002668d:	movsd  QWORD PTR [rbx+0x8],xmm1
   140026692:	movsd  QWORD PTR [rbx+0x10],xmm2
   140026697:	jmp    0x1400269cf
   14002669c:	mov    rcx,rsi
   14002669f:	call   0x140026140
   1400266a4:	mov    r8,QWORD PTR [rip+0x2d615]        # 0x140053cc0
   1400266ab:	mov    r9,rax
   1400266ae:	mov    QWORD PTR [rsp+0x48],rax
   1400266b3:	test   r8,r8
   1400266b6:	je     0x1400266e7
   1400266b8:	mov    rdx,QWORD PTR [r8]
   1400266bb:	movzx  ecx,BYTE PTR [rax]
   1400266be:	cmp    BYTE PTR [rdx],cl
   1400266c0:	jne    0x1400266e7
   1400266c2:	sub    r9,rdx
   1400266c5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400266d0:	movzx  ecx,BYTE PTR [rdx]
   1400266d3:	movzx  eax,BYTE PTR [rdx+r9*1]
   1400266d8:	sub    ecx,eax
   1400266da:	jne    0x1400266e3
   1400266dc:	inc    rdx
   1400266df:	test   eax,eax
   1400266e1:	jne    0x1400266d0
   1400266e3:	test   ecx,ecx
   1400266e5:	je     0x14002671b
   1400266e7:	lea    rax,[rip+0xfffffffffffffb02]        # 0x1400261f0
   1400266ee:	lea    rdx,[rip+0x2811b]        # 0x14004e810
   1400266f5:	lea    rcx,[rsp+0x48]
   1400266fa:	mov    r9d,0x10
   140026700:	mov    r8d,0x28c
   140026706:	mov    QWORD PTR [rsp+0x20],rax
   14002670b:	call   QWORD PTR [rip+0x16bb7]        # 0x14003d2c8
   140026711:	mov    r8,rax
   140026714:	mov    QWORD PTR [rip+0x2d5a5],rax        # 0x140053cc0
   14002671b:	test   r8,r8
   14002671e:	je     0x140026995
   140026724:	test   edi,edi
   140026726:	je     0x14002694a
   14002672c:	dec    edi
   14002672e:	je     0x1400268b0
   140026734:	dec    edi
   140026736:	je     0x14002680e
   14002673c:	dec    edi
   14002673e:	jne    0x1400269cf
   140026744:	movzx  eax,BYTE PTR [r8+0x8]
   140026749:	movsd  xmm3,QWORD PTR [rip+0x1a967]        # 0x1400410b8
   140026751:	lea    r9,[rbp+0x67]
   140026755:	movd   xmm0,eax
   140026759:	cvtdq2pd xmm0,xmm0
   14002675d:	divsd  xmm0,xmm3
   140026761:	movsd  QWORD PTR [rsp+0x30],xmm0
   140026767:	movzx  eax,BYTE PTR [r8+0x9]
   14002676c:	movd   xmm1,eax
   140026770:	cvtdq2pd xmm1,xmm1
   140026774:	divsd  xmm1,xmm3
   140026778:	movsd  QWORD PTR [rsp+0x38],xmm1
   14002677e:	movzx  eax,BYTE PTR [r8+0xa]
   140026783:	movd   xmm2,eax
   140026787:	lea    rax,[rbp+0x7f]
   14002678b:	mov    QWORD PTR [rsp+0x28],rax
   140026790:	lea    rax,[rbp+0x6f]
   140026794:	mov    QWORD PTR [rsp+0x20],rax
   140026799:	cvtdq2pd xmm2,xmm2
   14002679d:	divsd  xmm2,xmm3
   1400267a1:	call   0x1400269f0
   1400267a6:	movsd  xmm2,QWORD PTR [rip+0x16c32]        # 0x14003d3e0
   1400267ae:	movaps xmm1,xmm2
   1400267b1:	movaps xmm3,xmm2
   1400267b4:	subsd  xmm2,QWORD PTR [rbp+0x7f]
   1400267b9:	subsd  xmm1,QWORD PTR [rbp+0x67]
   1400267be:	subsd  xmm3,QWORD PTR [rbp+0x6f]
   1400267c3:	comisd xmm3,xmm1
   1400267c7:	jbe    0x1400267ce
   1400267c9:	movaps xmm0,xmm1
   1400267cc:	jmp    0x1400267d1
   1400267ce:	movaps xmm0,xmm3
   1400267d1:	comisd xmm0,xmm2
   1400267d5:	jbe    0x1400267da
   1400267d7:	movaps xmm0,xmm2
   1400267da:	subsd  xmm1,xmm0
   1400267de:	subsd  xmm3,xmm0
   1400267e2:	subsd  xmm2,xmm0
   1400267e6:	cvttsd2si eax,xmm1
   1400267ea:	neg    al
   1400267ec:	mov    BYTE PTR [rbx],al
   1400267ee:	cvttsd2si eax,xmm3
   1400267f2:	neg    al
   1400267f4:	mov    BYTE PTR [rbx+0x1],al
   1400267f7:	cvttsd2si eax,xmm2
   1400267fb:	neg    al
   1400267fd:	mov    BYTE PTR [rbx+0x2],al
   140026800:	cvttsd2si eax,xmm0
   140026804:	neg    al
   140026806:	mov    BYTE PTR [rbx+0x3],al
   140026809:	jmp    0x1400269cf
   14002680e:	movzx  eax,BYTE PTR [r8+0x8]
   140026813:	movsd  xmm3,QWORD PTR [rip+0x1a89d]        # 0x1400410b8
   14002681b:	movd   xmm0,eax
   14002681f:	cvtdq2pd xmm0,xmm0
   140026823:	divsd  xmm0,xmm3
   140026827:	movsd  QWORD PTR [rsp+0x30],xmm0
   14002682d:	movzx  eax,BYTE PTR [r8+0x9]
   140026832:	movd   xmm1,eax
   140026836:	cvtdq2pd xmm1,xmm1
   14002683a:	divsd  xmm1,xmm3
   14002683e:	movsd  QWORD PTR [rsp+0x38],xmm1
   140026844:	movzx  eax,BYTE PTR [r8+0xa]
   140026849:	movd   xmm2,eax
   14002684d:	cvtdq2pd xmm2,xmm2
   140026851:	divsd  xmm2,xmm3
   140026855:	lea    rax,[rbp+0x7f]
   140026859:	lea    r9,[rbp+0x67]
   14002685d:	mov    QWORD PTR [rsp+0x28],rax
   140026862:	lea    rax,[rbp+0x6f]
   140026866:	mov    QWORD PTR [rsp+0x20],rax
   14002686b:	call   0x1400269f0
   140026870:	mov    DWORD PTR [rbx+0xc],r12d
   140026874:	movsd  xmm3,QWORD PTR [rip+0x1a84c]        # 0x1400410c8
   14002687c:	movsd  xmm2,QWORD PTR [rbp+0x67]
   140026881:	movsd  xmm0,QWORD PTR [rbp+0x6f]
   140026886:	mulsd  xmm2,xmm3
   14002688a:	mulsd  xmm0,xmm3
   14002688e:	movsd  xmm1,QWORD PTR [rbp+0x7f]
   140026893:	cvttsd2si eax,xmm2
   140026897:	mulsd  xmm1,xmm3
   14002689b:	mov    DWORD PTR [rbx],eax
   14002689d:	cvttsd2si eax,xmm0
   1400268a1:	mov    DWORD PTR [rbx+0x4],eax
   1400268a4:	cvttsd2si eax,xmm1
   1400268a8:	mov    DWORD PTR [rbx+0x8],eax
   1400268ab:	jmp    0x1400269cf
   1400268b0:	movzx  eax,BYTE PTR [r8+0x8]
   1400268b5:	movsd  xmm6,QWORD PTR [rip+0x1a7fb]        # 0x1400410b8
   1400268bd:	lea    r9,[rbp+0x67]
   1400268c1:	movd   xmm0,eax
   1400268c5:	cvtdq2pd xmm0,xmm0
   1400268c9:	divsd  xmm0,xmm6
   1400268cd:	movsd  QWORD PTR [rsp+0x30],xmm0
   1400268d3:	movzx  eax,BYTE PTR [r8+0x9]
   1400268d8:	movd   xmm1,eax
   1400268dc:	cvtdq2pd xmm1,xmm1
   1400268e0:	divsd  xmm1,xmm6
   1400268e4:	movsd  QWORD PTR [rsp+0x38],xmm1
   1400268ea:	movzx  eax,BYTE PTR [r8+0xa]
   1400268ef:	movd   xmm2,eax
   1400268f3:	lea    rax,[rbp+0x7f]
   1400268f7:	mov    QWORD PTR [rsp+0x28],rax
   1400268fc:	lea    rax,[rbp+0x6f]
   140026900:	mov    QWORD PTR [rsp+0x20],rax
   140026905:	cvtdq2pd xmm2,xmm2
   140026909:	divsd  xmm2,xmm6
   14002690d:	call   0x1400269f0
   140026912:	movsd  xmm2,QWORD PTR [rbp+0x67]
   140026917:	movsd  xmm0,QWORD PTR [rbp+0x6f]
   14002691c:	mov    BYTE PTR [rbx+0x3],r12b
   140026920:	movsd  xmm1,QWORD PTR [rbp+0x7f]
   140026925:	mulsd  xmm2,xmm6
   140026929:	mulsd  xmm0,xmm6
   14002692d:	cvttsd2si eax,xmm2
   140026931:	mulsd  xmm1,xmm6
   140026935:	mov    BYTE PTR [rbx],al
   140026937:	cvttsd2si eax,xmm0
   14002693b:	mov    BYTE PTR [rbx+0x1],al
   14002693e:	cvttsd2si eax,xmm1
   140026942:	mov    BYTE PTR [rbx+0x2],al
   140026945:	jmp    0x1400269cf
   14002694a:	movzx  eax,BYTE PTR [r8+0x8]
   14002694f:	movsd  xmm2,QWORD PTR [rip+0x1a761]        # 0x1400410b8
   140026957:	movd   xmm0,eax
   14002695b:	cvtdq2pd xmm0,xmm0
   14002695f:	divsd  xmm0,xmm2
   140026963:	movsd  QWORD PTR [rbx],xmm0
   140026967:	movzx  eax,BYTE PTR [r8+0x9]
   14002696c:	movd   xmm0,eax
   140026970:	cvtdq2pd xmm0,xmm0
   140026974:	divsd  xmm0,xmm2
   140026978:	movsd  QWORD PTR [rbx+0x8],xmm0
   14002697d:	movzx  eax,BYTE PTR [r8+0xa]
   140026982:	movd   xmm1,eax
   140026986:	cvtdq2pd xmm1,xmm1
   14002698a:	divsd  xmm1,xmm2
   14002698e:	movsd  QWORD PTR [rbx+0x10],xmm1
   140026993:	jmp    0x1400269cf
   140026995:	call   QWORD PTR [rip+0x16935]        # 0x14003d2d0
   14002699b:	lea    rdx,[rip+0x1a6de]        # 0x140041080
   1400269a2:	mov    r8,rsi
   1400269a5:	lea    rcx,[rax+0x60]
   1400269a9:	call   QWORD PTR [rip+0x16911]        # 0x14003d2c0
   1400269af:	test   edi,edi
   1400269b1:	je     0x1400269c4
   1400269b3:	dec    edi
   1400269b5:	je     0x1400269bf
   1400269b7:	dec    edi
   1400269b9:	je     0x1400269c8
   1400269bb:	dec    edi
   1400269bd:	jne    0x1400269cf
   1400269bf:	mov    DWORD PTR [rbx],r12d
   1400269c2:	jmp    0x1400269cf
   1400269c4:	mov    QWORD PTR [rbx+0x10],r12
   1400269c8:	mov    QWORD PTR [rbx],r12
   1400269cb:	mov    QWORD PTR [rbx+0x8],r12
   1400269cf:	movaps xmm6,XMMWORD PTR [rsp+0xe0]
   1400269d7:	add    rsp,0xf8
   1400269de:	pop    r14
   1400269e0:	pop    r12
   1400269e2:	pop    rdi
   1400269e3:	pop    rsi
   1400269e4:	pop    rbx
   1400269e5:	pop    rbp
   1400269e6:	ret    
   1400269e7:	int3   
   1400269e8:	int3   
   1400269e9:	int3   
   1400269ea:	int3   
   1400269eb:	int3   
   1400269ec:	int3   
   1400269ed:	int3   
   1400269ee:	int3   
   1400269ef:	int3   
   1400269f0:	sub    rsp,0x18
   1400269f4:	xorps  xmm5,xmm5
   1400269f7:	movaps XMMWORD PTR [rsp],xmm6
   1400269fb:	movaps xmm4,xmm0
   1400269fe:	movaps xmm6,xmm1
   140026a01:	comisd xmm5,xmm1
   140026a05:	jb     0x140026a27
   140026a07:	mov    rax,QWORD PTR [rsp+0x40]
   140026a0c:	movsd  QWORD PTR [r9],xmm2
   140026a11:	movsd  QWORD PTR [rax],xmm2
   140026a15:	mov    rax,QWORD PTR [rsp+0x48]
   140026a1a:	movsd  QWORD PTR [rax],xmm2
   140026a1e:	movaps xmm6,XMMWORD PTR [rsp]
   140026a22:	add    rsp,0x18
   140026a26:	ret    
   140026a27:	movsd  xmm3,QWORD PTR [rip+0x169b1]        # 0x14003d3e0
   140026a2f:	comisd xmm0,xmm3
   140026a33:	jb     0x140026a38
   140026a35:	movaps xmm4,xmm5
   140026a38:	mulsd  xmm4,QWORD PTR [rip+0x17760]        # 0x14003e1a0
   140026a40:	movaps xmm5,xmm3
   140026a43:	movaps xmm1,xmm3
   140026a46:	subsd  xmm1,xmm6
   140026a4a:	cvttsd2si eax,xmm4
   140026a4e:	mulsd  xmm1,xmm2
   140026a52:	movd   xmm0,eax
   140026a56:	cvtdq2pd xmm0,xmm0
   140026a5a:	subsd  xmm4,xmm0
   140026a5e:	movaps xmm0,xmm4
   140026a61:	mulsd  xmm0,xmm6
   140026a65:	subsd  xmm5,xmm0
   140026a69:	movaps xmm0,xmm3
   140026a6c:	subsd  xmm0,xmm4
   140026a70:	mulsd  xmm5,xmm2
   140026a74:	mulsd  xmm0,xmm6
   140026a78:	subsd  xmm3,xmm0
   140026a7c:	mulsd  xmm3,xmm2
   140026a80:	cmp    eax,0x5
   140026a83:	ja     0x140026b55
   140026a89:	lea    rdx,[rip+0xfffffffffffd9570]        # 0x140000000
   140026a90:	cdqe   
   140026a92:	mov    ecx,DWORD PTR [rdx+rax*4+0x26b60]
   140026a99:	add    rcx,rdx
   140026a9c:	jmp    rcx
   140026a9e:	mov    rax,QWORD PTR [rsp+0x40]
   140026aa3:	movsd  QWORD PTR [r9],xmm2
   140026aa8:	movsd  QWORD PTR [rax],xmm3
   140026aac:	mov    rax,QWORD PTR [rsp+0x48]
   140026ab1:	movsd  QWORD PTR [rax],xmm1
   140026ab5:	movaps xmm6,XMMWORD PTR [rsp]
   140026ab9:	add    rsp,0x18
   140026abd:	ret    
   140026abe:	mov    rax,QWORD PTR [rsp+0x40]
   140026ac3:	movsd  QWORD PTR [r9],xmm5
   140026ac8:	movsd  QWORD PTR [rax],xmm2
   140026acc:	mov    rax,QWORD PTR [rsp+0x48]
   140026ad1:	movsd  QWORD PTR [rax],xmm1
   140026ad5:	movaps xmm6,XMMWORD PTR [rsp]
   140026ad9:	add    rsp,0x18
   140026add:	ret    
   140026ade:	mov    rax,QWORD PTR [rsp+0x40]
   140026ae3:	movsd  QWORD PTR [r9],xmm1
   140026ae8:	movsd  QWORD PTR [rax],xmm2
   140026aec:	mov    rax,QWORD PTR [rsp+0x48]
   140026af1:	movsd  QWORD PTR [rax],xmm3
   140026af5:	movaps xmm6,XMMWORD PTR [rsp]
   140026af9:	add    rsp,0x18
   140026afd:	ret    
   140026afe:	mov    rax,QWORD PTR [rsp+0x40]
   140026b03:	movsd  QWORD PTR [r9],xmm1
   140026b08:	movsd  QWORD PTR [rax],xmm5
   140026b0c:	mov    rax,QWORD PTR [rsp+0x48]
   140026b11:	movsd  QWORD PTR [rax],xmm2
   140026b15:	movaps xmm6,XMMWORD PTR [rsp]
   140026b19:	add    rsp,0x18
   140026b1d:	ret    
   140026b1e:	mov    rax,QWORD PTR [rsp+0x40]
   140026b23:	movsd  QWORD PTR [r9],xmm3
   140026b28:	movsd  QWORD PTR [rax],xmm1
   140026b2c:	mov    rax,QWORD PTR [rsp+0x48]
   140026b31:	movsd  QWORD PTR [rax],xmm2
   140026b35:	movaps xmm6,XMMWORD PTR [rsp]
   140026b39:	add    rsp,0x18
   140026b3d:	ret    
   140026b3e:	mov    rax,QWORD PTR [rsp+0x40]
   140026b43:	movsd  QWORD PTR [r9],xmm2
   140026b48:	movsd  QWORD PTR [rax],xmm1
   140026b4c:	mov    rax,QWORD PTR [rsp+0x48]
   140026b51:	movsd  QWORD PTR [rax],xmm5
   140026b55:	movaps xmm6,XMMWORD PTR [rsp]
   140026b59:	add    rsp,0x18
   140026b5d:	ret    
   140026b5e:	xchg   ax,ax
   140026b60:	sahf   
   140026b61:	push   0x2
   140026b63:	add    BYTE PTR [rsi-0x21fffd96],bh
   140026b69:	push   0x2
   140026b6b:	add    dh,bh
   140026b6d:	push   0x2
   140026b6f:	add    BYTE PTR [rsi],bl
   140026b71:	imul   eax,DWORD PTR [rdx],0x0
   140026b74:	imul   eax,DWORD PTR ds:[rdx],0x0
   140026b78:	int3   
   140026b79:	int3   
   140026b7a:	int3   
   140026b7b:	int3   
   140026b7c:	int3   
   140026b7d:	int3   
   140026b7e:	int3   
   140026b7f:	int3   
   140026b80:	movsd  xmm4,QWORD PTR [rip+0x16858]        # 0x14003d3e0
   140026b88:	mov    rdx,QWORD PTR [rsp+0x28]
   140026b8d:	mov    rcx,QWORD PTR [rsp+0x30]
   140026b92:	movaps xmm3,xmm4
   140026b95:	subsd  xmm3,xmm0
   140026b99:	movaps xmm0,xmm4
   140026b9c:	subsd  xmm4,xmm2
   140026ba0:	movsd  QWORD PTR [r9],xmm3
   140026ba5:	subsd  xmm0,xmm1
   140026ba9:	movsd  QWORD PTR [rdx],xmm0
   140026bad:	movsd  QWORD PTR [rcx],xmm4
   140026bb1:	movsd  xmm0,QWORD PTR [r9]
   140026bb6:	movsd  xmm1,QWORD PTR [rdx]
   140026bba:	comisd xmm1,xmm0
   140026bbe:	ja     0x140026bc3
   140026bc0:	movaps xmm0,xmm1
   140026bc3:	mov    rax,QWORD PTR [rsp+0x38]
   140026bc8:	movsd  QWORD PTR [rax],xmm0
   140026bcc:	movsd  xmm1,QWORD PTR [rcx]
   140026bd0:	comisd xmm0,xmm1
   140026bd4:	ja     0x140026bd9
   140026bd6:	movaps xmm1,xmm0
   140026bd9:	movsd  QWORD PTR [rax],xmm1
   140026bdd:	movsd  xmm0,QWORD PTR [r9]
   140026be2:	subsd  xmm0,xmm1
   140026be6:	movsd  QWORD PTR [r9],xmm0
   140026beb:	movsd  xmm1,QWORD PTR [rdx]
   140026bef:	subsd  xmm1,QWORD PTR [rax]
   140026bf3:	movsd  QWORD PTR [rdx],xmm1
   140026bf7:	movsd  xmm0,QWORD PTR [rcx]
   140026bfb:	subsd  xmm0,QWORD PTR [rax]
   140026bff:	movsd  QWORD PTR [rcx],xmm0
   140026c03:	ret    
   140026c04:	int3   
   140026c05:	int3   
   140026c06:	int3   
   140026c07:	int3   
   140026c08:	int3   
   140026c09:	int3   
   140026c0a:	int3   
   140026c0b:	int3   
   140026c0c:	int3   
   140026c0d:	int3   
   140026c0e:	int3   
   140026c0f:	int3   
   140026c10:	sub    rsp,0x58
   140026c14:	comisd xmm2,xmm1
   140026c18:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140026c1d:	xorps  xmm6,xmm6
   140026c20:	movaps XMMWORD PTR [rsp],xmm10
   140026c25:	movaps xmm4,xmm0
   140026c28:	movaps xmm3,xmm6
   140026c2b:	movaps xmm10,xmm6
   140026c2f:	jbe    0x140026c36
   140026c31:	movaps xmm0,xmm1
   140026c34:	jmp    0x140026c39
   140026c36:	movaps xmm0,xmm2
   140026c39:	comisd xmm0,xmm4
   140026c3d:	movaps XMMWORD PTR [rsp+0x30],xmm7
   140026c42:	jbe    0x140026c49
   140026c44:	movaps xmm7,xmm4
   140026c47:	jmp    0x140026c57
   140026c49:	comisd xmm2,xmm1
   140026c4d:	jbe    0x140026c54
   140026c4f:	movaps xmm7,xmm1
   140026c52:	jmp    0x140026c57
   140026c54:	movaps xmm7,xmm2
   140026c57:	comisd xmm1,xmm2
   140026c5b:	jbe    0x140026c62
   140026c5d:	movaps xmm0,xmm1
   140026c60:	jmp    0x140026c65
   140026c62:	movaps xmm0,xmm2
   140026c65:	comisd xmm4,xmm0
   140026c69:	jbe    0x140026c70
   140026c6b:	movaps xmm0,xmm4
   140026c6e:	jmp    0x140026c7e
   140026c70:	comisd xmm1,xmm2
   140026c74:	jbe    0x140026c7b
   140026c76:	movaps xmm0,xmm1
   140026c79:	jmp    0x140026c7e
   140026c7b:	movaps xmm0,xmm2
   140026c7e:	comisd xmm0,xmm6
   140026c82:	jbe    0x140026d3d
   140026c88:	movaps xmm5,xmm0
   140026c8b:	subsd  xmm5,xmm7
   140026c8f:	movaps xmm10,xmm5
   140026c93:	divsd  xmm10,xmm0
   140026c98:	comisd xmm10,xmm6
   140026c9d:	jbe    0x140026d3d
   140026ca3:	ucomisd xmm4,xmm0
   140026ca7:	movaps XMMWORD PTR [rsp+0x20],xmm8
   140026cad:	movaps XMMWORD PTR [rsp+0x10],xmm9
   140026cb3:	movaps xmm9,xmm0
   140026cb7:	movaps xmm8,xmm0
   140026cbb:	movaps xmm7,xmm0
   140026cbe:	subsd  xmm9,xmm4
   140026cc3:	subsd  xmm8,xmm1
   140026cc8:	subsd  xmm7,xmm2
   140026ccc:	divsd  xmm9,xmm5
   140026cd1:	divsd  xmm8,xmm5
   140026cd6:	divsd  xmm7,xmm5
   140026cda:	jp     0x140026ce8
   140026cdc:	jne    0x140026ce8
   140026cde:	movaps xmm3,xmm7
   140026ce1:	subsd  xmm3,xmm8
   140026ce6:	jmp    0x140026d1b
   140026ce8:	ucomisd xmm1,xmm0
   140026cec:	jp     0x140026d02
   140026cee:	jne    0x140026d02
   140026cf0:	movaps xmm3,xmm9
   140026cf4:	addsd  xmm3,QWORD PTR [rip+0x169e4]        # 0x14003d6e0
   140026cfc:	subsd  xmm3,xmm7
   140026d00:	jmp    0x140026d1b
   140026d02:	ucomisd xmm2,xmm0
   140026d06:	jp     0x140026d1b
   140026d08:	jne    0x140026d1b
   140026d0a:	movaps xmm3,xmm8
   140026d0e:	addsd  xmm3,QWORD PTR [rip+0x170a2]        # 0x14003ddb8
   140026d16:	subsd  xmm3,xmm9
   140026d1b:	mulsd  xmm3,QWORD PTR [rip+0x1a38d]        # 0x1400410b0
   140026d23:	movaps xmm9,XMMWORD PTR [rsp+0x10]
   140026d29:	movaps xmm8,XMMWORD PTR [rsp+0x20]
   140026d2f:	comisd xmm6,xmm3
   140026d33:	jbe    0x140026d3d
   140026d35:	addsd  xmm3,QWORD PTR [rip+0x1a383]        # 0x1400410c0
   140026d3d:	mov    rax,QWORD PTR [rsp+0x88]
   140026d45:	divsd  xmm3,QWORD PTR [rip+0x1a373]        # 0x1400410c0
   140026d4d:	movaps xmm7,XMMWORD PTR [rsp+0x30]
   140026d52:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   140026d57:	movsd  QWORD PTR [r9],xmm3
   140026d5c:	movsd  QWORD PTR [rax],xmm0
   140026d60:	mov    rax,QWORD PTR [rsp+0x80]
   140026d68:	movsd  QWORD PTR [rax],xmm10
   140026d6d:	movaps xmm10,XMMWORD PTR [rsp]
   140026d72:	add    rsp,0x58
   140026d76:	ret    
   140026d77:	int3   
   140026d78:	int3   
   140026d79:	int3   
   140026d7a:	int3   
   140026d7b:	int3   
   140026d7c:	int3   
   140026d7d:	int3   
   140026d7e:	int3   
   140026d7f:	int3   
   140026d80:	mov    QWORD PTR [rsp+0x10],rbx
   140026d85:	mov    QWORD PTR [rsp+0x18],rbp
   140026d8a:	push   rsi
   140026d8b:	push   rdi
   140026d8c:	push   r15
   140026d8e:	sub    rsp,0x20
   140026d92:	mov    rbp,rdx
   140026d95:	mov    r15,rcx
   140026d98:	call   0x14002a4e0
   140026d9d:	mov    rsi,rax
   140026da0:	test   rax,rax
   140026da3:	je     0x140026e3b
   140026da9:	nop    DWORD PTR [rax+0x0]
   140026db0:	mov    rdx,rsi
   140026db3:	mov    rcx,r15
   140026db6:	call   0x14002b830
   140026dbb:	mov    rbx,rax
   140026dbe:	test   rax,rax
   140026dc1:	je     0x140026e24
   140026dc3:	nop    DWORD PTR [rax+0x0]
   140026dc7:	nop    WORD PTR [rax+rax*1+0x0]
   140026dd0:	movsxd rdi,DWORD PTR [rbp+0x10]
   140026dd4:	mov    rcx,QWORD PTR [rbx+0x8]
   140026dd8:	lea    eax,[rdi+0x1]
   140026ddb:	test   rcx,rcx
   140026dde:	je     0x140026def
   140026de0:	movsxd rdx,eax
   140026de3:	shl    rdx,0x3
   140026de7:	call   QWORD PTR [rip+0x162bb]        # 0x14003d0a8
   140026ded:	jmp    0x140026dfc
   140026def:	movsxd rcx,eax
   140026df2:	shl    rcx,0x3
   140026df6:	call   QWORD PTR [rip+0x1636c]        # 0x14003d168
   140026dfc:	mov    QWORD PTR [rbx+0x8],rax
   140026e00:	mov    rcx,QWORD PTR [rbp+0x8]
   140026e04:	call   0x14002bbb0
   140026e09:	mov    rcx,QWORD PTR [rbx+0x8]
   140026e0d:	mov    rdx,rbx
   140026e10:	mov    QWORD PTR [rcx+rdi*8],rax
   140026e14:	mov    rcx,r15
   140026e17:	call   0x14002b9e0
   140026e1c:	mov    rbx,rax
   140026e1f:	test   rax,rax
   140026e22:	jne    0x140026dd0
   140026e24:	mov    rdx,rsi
   140026e27:	mov    rcx,r15
   140026e2a:	call   0x14002a5e0
   140026e2f:	mov    rsi,rax
   140026e32:	test   rax,rax
   140026e35:	jne    0x140026db0
   140026e3b:	mov    rcx,QWORD PTR [r15+0x40]
   140026e3f:	mov    QWORD PTR [rsp+0x40],r14
   140026e44:	test   rcx,rcx
   140026e47:	je     0x140026eec
   140026e4d:	mov    rcx,QWORD PTR [rcx+0x20]
   140026e51:	call   0x14002a4e0
   140026e56:	mov    r14,rax
   140026e59:	test   rax,rax
   140026e5c:	je     0x140026f4e
   140026e62:	mov    rcx,r14
   140026e65:	call   0x14002b080
   140026e6a:	mov    rbx,QWORD PTR [rax+0x48]
   140026e6e:	test   rbx,rbx
   140026e71:	je     0x140026ece
   140026e73:	nop    DWORD PTR [rax+0x0]
   140026e77:	nop    WORD PTR [rax+rax*1+0x0]
   140026e80:	mov    rdi,QWORD PTR [rbx+0x8]
   140026e84:	movsxd rsi,DWORD PTR [rbp+0x10]
   140026e88:	mov    rcx,QWORD PTR [rdi+0x8]
   140026e8c:	lea    eax,[rsi+0x1]
   140026e8f:	test   rcx,rcx
   140026e92:	je     0x140026ea3
   140026e94:	movsxd rdx,eax
   140026e97:	shl    rdx,0x3
   140026e9b:	call   QWORD PTR [rip+0x16207]        # 0x14003d0a8
   140026ea1:	jmp    0x140026eb0
   140026ea3:	movsxd rcx,eax
   140026ea6:	shl    rcx,0x3
   140026eaa:	call   QWORD PTR [rip+0x162b8]        # 0x14003d168
   140026eb0:	mov    QWORD PTR [rdi+0x8],rax
   140026eb4:	mov    rcx,QWORD PTR [rbp+0x8]
   140026eb8:	call   0x14002bbb0
   140026ebd:	mov    rcx,QWORD PTR [rdi+0x8]
   140026ec1:	mov    QWORD PTR [rcx+rsi*8],rax
   140026ec5:	mov    rbx,QWORD PTR [rbx+0x10]
   140026ec9:	test   rbx,rbx
   140026ecc:	jne    0x140026e80
   140026ece:	mov    rcx,QWORD PTR [r15+0x40]
   140026ed2:	mov    rdx,r14
   140026ed5:	mov    rcx,QWORD PTR [rcx+0x20]
   140026ed9:	call   0x14002a5e0
   140026ede:	mov    r14,rax
   140026ee1:	test   rax,rax
   140026ee4:	jne    0x140026e62
   140026eea:	jmp    0x140026f4e
   140026eec:	mov    rbx,QWORD PTR [r15+0x48]
   140026ef0:	test   rbx,rbx
   140026ef3:	je     0x140026f4e
   140026ef5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140026f00:	mov    rdi,QWORD PTR [rbx+0x8]
   140026f04:	movsxd rsi,DWORD PTR [rbp+0x10]
   140026f08:	mov    rcx,QWORD PTR [rdi+0x8]
   140026f0c:	lea    eax,[rsi+0x1]
   140026f0f:	test   rcx,rcx
   140026f12:	je     0x140026f23
   140026f14:	movsxd rdx,eax
   140026f17:	shl    rdx,0x3
   140026f1b:	call   QWORD PTR [rip+0x16187]        # 0x14003d0a8
   140026f21:	jmp    0x140026f30
   140026f23:	movsxd rcx,eax
   140026f26:	shl    rcx,0x3
   140026f2a:	call   QWORD PTR [rip+0x16238]        # 0x14003d168
   140026f30:	mov    QWORD PTR [rdi+0x8],rax
   140026f34:	mov    rcx,QWORD PTR [rbp+0x8]
   140026f38:	call   0x14002bbb0
   140026f3d:	mov    rcx,QWORD PTR [rdi+0x8]
   140026f41:	mov    QWORD PTR [rcx+rsi*8],rax
   140026f45:	mov    rbx,QWORD PTR [rbx+0x10]
   140026f49:	test   rbx,rbx
   140026f4c:	jne    0x140026f00
   140026f4e:	mov    r14,QWORD PTR [rsp+0x40]
   140026f53:	mov    rbx,QWORD PTR [rsp+0x48]
   140026f58:	mov    rbp,QWORD PTR [rsp+0x50]
   140026f5d:	add    rsp,0x20
   140026f61:	pop    r15
   140026f63:	pop    rdi
   140026f64:	pop    rsi
   140026f65:	ret    
   140026f66:	int3   
   140026f67:	int3   
   140026f68:	int3   
   140026f69:	int3   
   140026f6a:	int3   
   140026f6b:	int3   
   140026f6c:	int3   
   140026f6d:	int3   
   140026f6e:	int3   
   140026f6f:	int3   
   140026f70:	mov    QWORD PTR [rsp+0x20],rbp
   140026f75:	push   r14
   140026f77:	sub    rsp,0x20
   140026f7b:	mov    r14,rcx
   140026f7e:	mov    rcx,QWORD PTR [rcx+0x40]
   140026f82:	mov    rbp,rdx
   140026f85:	test   rcx,rcx
   140026f88:	je     0x140027034
   140026f8e:	mov    rcx,QWORD PTR [rcx+0x20]
   140026f92:	mov    QWORD PTR [rsp+0x38],rsi
   140026f97:	call   0x14002a4e0
   140026f9c:	mov    rsi,rax
   140026f9f:	test   rax,rax
   140026fa2:	je     0x140027023
   140026fa8:	mov    QWORD PTR [rsp+0x30],rbx
   140026fad:	mov    QWORD PTR [rsp+0x40],rdi
   140026fb2:	mov    rcx,rsi
   140026fb5:	call   0x14002b080
   140026fba:	movsxd rbx,DWORD PTR [rbp+0x10]
   140026fbe:	mov    rcx,QWORD PTR [rax+0x8]
   140026fc2:	mov    rdi,rax
   140026fc5:	test   rcx,rcx
   140026fc8:	je     0x140026fdc
   140026fca:	lea    edx,[rbx+0x1]
   140026fcd:	movsxd rdx,edx
   140026fd0:	shl    rdx,0x3
   140026fd4:	call   QWORD PTR [rip+0x160ce]        # 0x14003d0a8
   140026fda:	jmp    0x140026fec
   140026fdc:	lea    eax,[rbx+0x1]
   140026fdf:	movsxd rcx,eax
   140026fe2:	shl    rcx,0x3
   140026fe6:	call   QWORD PTR [rip+0x1617c]        # 0x14003d168
   140026fec:	mov    QWORD PTR [rdi+0x8],rax
   140026ff0:	mov    rcx,QWORD PTR [rbp+0x8]
   140026ff4:	call   0x14002bbb0
   140026ff9:	mov    rcx,QWORD PTR [rdi+0x8]
   140026ffd:	mov    rdx,rsi
   140027000:	mov    QWORD PTR [rcx+rbx*8],rax
   140027004:	mov    rcx,QWORD PTR [r14+0x40]
   140027008:	mov    rcx,QWORD PTR [rcx+0x20]
   14002700c:	call   0x14002a5e0
   140027011:	mov    rsi,rax
   140027014:	test   rax,rax
   140027017:	jne    0x140026fb2
   140027019:	mov    rdi,QWORD PTR [rsp+0x40]
   14002701e:	mov    rbx,QWORD PTR [rsp+0x30]
   140027023:	mov    rsi,QWORD PTR [rsp+0x38]
   140027028:	mov    rbp,QWORD PTR [rsp+0x48]
   14002702d:	add    rsp,0x20
   140027031:	pop    r14
   140027033:	ret    
   140027034:	mov    rcx,r14
   140027037:	mov    rbp,QWORD PTR [rsp+0x48]
   14002703c:	add    rsp,0x20
   140027040:	pop    r14
   140027042:	jmp    0x140027970
   140027047:	int3   
   140027048:	int3   
   140027049:	int3   
   14002704a:	int3   
   14002704b:	int3   
   14002704c:	int3   
   14002704d:	int3   
   14002704e:	int3   
   14002704f:	int3   
   140027050:	mov    QWORD PTR [rsp+0x18],rbx
   140027055:	push   rbp
   140027056:	push   rdi
   140027057:	push   r15
   140027059:	sub    rsp,0x20
   14002705d:	mov    rbp,rdx
   140027060:	mov    r15,rcx
   140027063:	call   0x14002a4e0
   140027068:	mov    rbx,rax
   14002706b:	test   rax,rax
   14002706e:	je     0x1400270c4
   140027070:	movsxd rdi,DWORD PTR [rbp+0x10]
   140027074:	mov    rcx,QWORD PTR [rbx+0x8]
   140027078:	lea    eax,[rdi+0x1]
   14002707b:	test   rcx,rcx
   14002707e:	je     0x14002708f
   140027080:	movsxd rdx,eax
   140027083:	shl    rdx,0x3
   140027087:	call   QWORD PTR [rip+0x1601b]        # 0x14003d0a8
   14002708d:	jmp    0x14002709c
   14002708f:	movsxd rcx,eax
   140027092:	shl    rcx,0x3
   140027096:	call   QWORD PTR [rip+0x160cc]        # 0x14003d168
   14002709c:	mov    QWORD PTR [rbx+0x8],rax
   1400270a0:	mov    rcx,QWORD PTR [rbp+0x8]
   1400270a4:	call   0x14002bbb0
   1400270a9:	mov    rcx,QWORD PTR [rbx+0x8]
   1400270ad:	mov    rdx,rbx
   1400270b0:	mov    QWORD PTR [rcx+rdi*8],rax
   1400270b4:	mov    rcx,r15
   1400270b7:	call   0x14002a5e0
   1400270bc:	mov    rbx,rax
   1400270bf:	test   rax,rax
   1400270c2:	jne    0x140027070
   1400270c4:	mov    rcx,QWORD PTR [r15+0x40]
   1400270c8:	mov    QWORD PTR [rsp+0x40],rsi
   1400270cd:	mov    QWORD PTR [rsp+0x48],r14
   1400270d2:	test   rcx,rcx
   1400270d5:	je     0x140027168
   1400270db:	mov    rcx,QWORD PTR [rcx+0x20]
   1400270df:	call   0x14002a4e0
   1400270e4:	mov    r14,rax
   1400270e7:	test   rax,rax
   1400270ea:	je     0x1400271be
   1400270f0:	mov    rcx,r14
   1400270f3:	call   0x14002b080
   1400270f8:	mov    rbx,QWORD PTR [rax+0x48]
   1400270fc:	test   rbx,rbx
   1400270ff:	je     0x14002714e
   140027101:	mov    rdi,QWORD PTR [rbx]
   140027104:	movsxd rsi,DWORD PTR [rbp+0x10]
   140027108:	mov    rcx,QWORD PTR [rdi+0x8]
   14002710c:	lea    eax,[rsi+0x1]
   14002710f:	test   rcx,rcx
   140027112:	je     0x140027123
   140027114:	movsxd rdx,eax
   140027117:	shl    rdx,0x3
   14002711b:	call   QWORD PTR [rip+0x15f87]        # 0x14003d0a8
   140027121:	jmp    0x140027130
   140027123:	movsxd rcx,eax
   140027126:	shl    rcx,0x3
   14002712a:	call   QWORD PTR [rip+0x16038]        # 0x14003d168
   140027130:	mov    QWORD PTR [rdi+0x8],rax
   140027134:	mov    rcx,QWORD PTR [rbp+0x8]
   140027138:	call   0x14002bbb0
   14002713d:	mov    rcx,QWORD PTR [rdi+0x8]
   140027141:	mov    QWORD PTR [rcx+rsi*8],rax
   140027145:	mov    rbx,QWORD PTR [rbx+0x10]
   140027149:	test   rbx,rbx
   14002714c:	jne    0x140027101
   14002714e:	mov    rcx,QWORD PTR [r15+0x40]
   140027152:	mov    rdx,r14
   140027155:	mov    rcx,QWORD PTR [rcx+0x20]
   140027159:	call   0x14002a5e0
   14002715e:	mov    r14,rax
   140027161:	test   rax,rax
   140027164:	jne    0x1400270f0
   140027166:	jmp    0x1400271be
   140027168:	mov    rbx,QWORD PTR [r15+0x48]
   14002716c:	test   rbx,rbx
   14002716f:	je     0x1400271be
   140027171:	mov    rdi,QWORD PTR [rbx]
   140027174:	movsxd rsi,DWORD PTR [rbp+0x10]
   140027178:	mov    rcx,QWORD PTR [rdi+0x8]
   14002717c:	lea    eax,[rsi+0x1]
   14002717f:	test   rcx,rcx
   140027182:	je     0x140027193
   140027184:	movsxd rdx,eax
   140027187:	shl    rdx,0x3
   14002718b:	call   QWORD PTR [rip+0x15f17]        # 0x14003d0a8
   140027191:	jmp    0x1400271a0
   140027193:	movsxd rcx,eax
   140027196:	shl    rcx,0x3
   14002719a:	call   QWORD PTR [rip+0x15fc8]        # 0x14003d168
   1400271a0:	mov    QWORD PTR [rdi+0x8],rax
   1400271a4:	mov    rcx,QWORD PTR [rbp+0x8]
   1400271a8:	call   0x14002bbb0
   1400271ad:	mov    rcx,QWORD PTR [rdi+0x8]
   1400271b1:	mov    QWORD PTR [rcx+rsi*8],rax
   1400271b5:	mov    rbx,QWORD PTR [rbx+0x10]
   1400271b9:	test   rbx,rbx
   1400271bc:	jne    0x140027171
   1400271be:	mov    r14,QWORD PTR [rsp+0x48]
   1400271c3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400271c8:	mov    rbx,QWORD PTR [rsp+0x50]
   1400271cd:	add    rsp,0x20
   1400271d1:	pop    r15
   1400271d3:	pop    rdi
   1400271d4:	pop    rbp
   1400271d5:	ret    
   1400271d6:	int3   
   1400271d7:	int3   
   1400271d8:	int3   
   1400271d9:	int3   
   1400271da:	int3   
   1400271db:	int3   
   1400271dc:	int3   
   1400271dd:	int3   
   1400271de:	int3   
   1400271df:	int3   
   1400271e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400271e5:	push   rsi
   1400271e6:	sub    rsp,0x20
   1400271ea:	mov    rcx,QWORD PTR [rdx+0x8]
   1400271ee:	mov    rsi,rdx
   1400271f1:	call   0x14002c860
   1400271f6:	mov    rbx,QWORD PTR [rsi+0x10]
   1400271fa:	test   rbx,rbx
   1400271fd:	je     0x14002724a
   1400271ff:	mov    rbx,QWORD PTR [rbx]
   140027202:	test   rbx,rbx
   140027205:	je     0x140027240
   140027207:	mov    QWORD PTR [rsp+0x30],rdi
   14002720c:	xor    edi,edi
   14002720e:	xchg   ax,ax
   140027210:	mov    rcx,QWORD PTR [rbx]
   140027213:	lea    rdi,[rdi+0x8]
   140027217:	call   0x14002bc90
   14002721c:	mov    rcx,QWORD PTR [rbx+0x8]
   140027220:	call   0x14002bc90
   140027225:	mov    rcx,rbx
   140027228:	call   QWORD PTR [rip+0x16072]        # 0x14003d2a0
   14002722e:	mov    rbx,QWORD PTR [rsi+0x10]
   140027232:	mov    rbx,QWORD PTR [rdi+rbx*1]
   140027236:	test   rbx,rbx
   140027239:	jne    0x140027210
   14002723b:	mov    rdi,QWORD PTR [rsp+0x30]
   140027240:	mov    rcx,QWORD PTR [rsi+0x10]
   140027244:	call   QWORD PTR [rip+0x16056]        # 0x14003d2a0
   14002724a:	mov    rcx,rsi
   14002724d:	mov    rbx,QWORD PTR [rsp+0x38]
   140027252:	add    rsp,0x20
   140027256:	pop    rsi
   140027257:	rex.W jmp QWORD PTR [rip+0x16042]        # 0x14003d2a0
   14002725e:	int3   
   14002725f:	int3   
   140027260:	mov    QWORD PTR [rsp+0x8],rbx
   140027265:	push   rdi
   140027266:	sub    rsp,0x20
   14002726a:	mov    edx,0x18
   14002726f:	mov    rbx,rcx
   140027272:	lea    ecx,[rdx-0x17]
   140027275:	call   QWORD PTR [rip+0x15ded]        # 0x14003d068
   14002727b:	mov    rdx,QWORD PTR [rip+0x2a7e6]        # 0x140051a68
   140027282:	lea    rcx,[rip+0x29e47]        # 0x1400510d0
   140027289:	mov    QWORD PTR [rax],rbx
   14002728c:	mov    rdi,rax
   14002728f:	call   0x14002c900
   140027294:	mov    rbx,QWORD PTR [rsp+0x30]
   140027299:	mov    QWORD PTR [rdi+0x8],rax
   14002729d:	mov    QWORD PTR [rdi+0x10],0x0
   1400272a5:	mov    rax,rdi
   1400272a8:	add    rsp,0x20
   1400272ac:	pop    rdi
   1400272ad:	ret    
   1400272ae:	int3   
   1400272af:	int3   
   1400272b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400272b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400272ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400272bf:	push   rdi
   1400272c0:	sub    rsp,0x20
   1400272c4:	mov    rbx,rdx
   1400272c7:	mov    edx,0x18
   1400272cc:	mov    rbp,rcx
   1400272cf:	lea    ecx,[rdx-0x17]
   1400272d2:	mov    rdi,r8
   1400272d5:	call   QWORD PTR [rip+0x15d8d]        # 0x14003d068
   1400272db:	mov    rcx,rbx
   1400272de:	mov    rsi,rax
   1400272e1:	call   0x14002bbb0
   1400272e6:	mov    rcx,rdi
   1400272e9:	mov    QWORD PTR [rsi],rax
   1400272ec:	call   0x14002bbb0
   1400272f1:	mov    BYTE PTR [rsi+0x14],0x1
   1400272f5:	mov    QWORD PTR [rsi+0x8],rax
   1400272f9:	mov    rcx,QWORD PTR [rbp+0x8]
   1400272fd:	call   0x14002c770
   140027302:	movsxd rbx,eax
   140027305:	mov    DWORD PTR [rsi+0x10],ebx
   140027308:	mov    rcx,QWORD PTR [rbp+0x10]
   14002730c:	test   rcx,rcx
   14002730f:	je     0x140027323
   140027311:	lea    edx,[rbx+0x2]
   140027314:	movsxd rdx,edx
   140027317:	shl    rdx,0x3
   14002731b:	call   QWORD PTR [rip+0x15d87]        # 0x14003d0a8
   140027321:	jmp    0x140027333
   140027323:	lea    eax,[rbx+0x2]
   140027326:	movsxd rcx,eax
   140027329:	shl    rcx,0x3
   14002732d:	call   QWORD PTR [rip+0x15e35]        # 0x14003d168
   140027333:	mov    QWORD PTR [rbp+0x10],rax
   140027337:	mov    QWORD PTR [rax+rbx*8],rsi
   14002733b:	mov    rax,QWORD PTR [rbp+0x10]
   14002733f:	mov    QWORD PTR [rax+rbx*8+0x8],0x0
   140027348:	mov    rax,QWORD PTR [rbp+0x8]
   14002734c:	mov    r8d,0x1
   140027352:	mov    rcx,rax
   140027355:	mov    rdx,rsi
   140027358:	call   QWORD PTR [rax]
   14002735a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002735f:	mov    rbp,QWORD PTR [rsp+0x38]
   140027364:	mov    rax,rsi
   140027367:	mov    rsi,QWORD PTR [rsp+0x40]
   14002736c:	add    rsp,0x20
   140027370:	pop    rdi
   140027371:	ret    
   140027372:	int3   
   140027373:	int3   
   140027374:	int3   
   140027375:	int3   
   140027376:	int3   
   140027377:	int3   
   140027378:	int3   
   140027379:	int3   
   14002737a:	int3   
   14002737b:	int3   
   14002737c:	int3   
   14002737d:	int3   
   14002737e:	int3   
   14002737f:	int3   
   140027380:	rex push rbp
   140027382:	push   rsi
   140027383:	push   r12
   140027385:	push   r13
   140027387:	push   r15
   140027389:	sub    rsp,0x20
   14002738d:	mov    rsi,rcx
   140027390:	mov    rcx,QWORD PTR [rdx+0x8]
   140027394:	xor    r12d,r12d
   140027397:	mov    r13,rdx
   14002739a:	mov    ebp,r12d
   14002739d:	call   0x14002c770
   1400273a2:	movsxd r15,eax
   1400273a5:	test   eax,eax
   1400273a7:	jle    0x140027478
   1400273ad:	mov    QWORD PTR [rsp+0x50],rbx
   1400273b2:	mov    QWORD PTR [rsp+0x58],rdi
   1400273b7:	mov    QWORD PTR [rsp+0x60],r14
   1400273bc:	nop    DWORD PTR [rax+0x0]
   1400273c0:	mov    rax,QWORD PTR [r13+0x10]
   1400273c4:	mov    edx,0x18
   1400273c9:	mov    r14,QWORD PTR [rax+rbp*8]
   1400273cd:	lea    ecx,[rdx-0x17]
   1400273d0:	mov    rbx,QWORD PTR [r14+0x8]
   1400273d4:	call   QWORD PTR [rip+0x15c8e]        # 0x14003d068
   1400273da:	mov    rcx,QWORD PTR [r14]
   1400273dd:	mov    rdi,rax
   1400273e0:	call   0x14002bbb0
   1400273e5:	mov    rcx,rbx
   1400273e8:	mov    QWORD PTR [rdi],rax
   1400273eb:	call   0x14002bbb0
   1400273f0:	mov    BYTE PTR [rdi+0x14],0x1
   1400273f4:	mov    QWORD PTR [rdi+0x8],rax
   1400273f8:	mov    rcx,QWORD PTR [rsi+0x8]
   1400273fc:	call   0x14002c770
   140027401:	movsxd rbx,eax
   140027404:	mov    DWORD PTR [rdi+0x10],ebx
   140027407:	mov    rcx,QWORD PTR [rsi+0x10]
   14002740b:	test   rcx,rcx
   14002740e:	je     0x140027422
   140027410:	lea    edx,[rbx+0x2]
   140027413:	movsxd rdx,edx
   140027416:	shl    rdx,0x3
   14002741a:	call   QWORD PTR [rip+0x15c88]        # 0x14003d0a8
   140027420:	jmp    0x140027432
   140027422:	lea    eax,[rbx+0x2]
   140027425:	movsxd rcx,eax
   140027428:	shl    rcx,0x3
   14002742c:	call   QWORD PTR [rip+0x15d36]        # 0x14003d168
   140027432:	mov    QWORD PTR [rsi+0x10],rax
   140027436:	mov    QWORD PTR [rax+rbx*8],rdi
   14002743a:	mov    rax,QWORD PTR [rsi+0x10]
   14002743e:	mov    QWORD PTR [rax+rbx*8+0x8],r12
   140027443:	mov    rax,QWORD PTR [rsi+0x8]
   140027447:	mov    r8d,0x1
   14002744d:	mov    rcx,rax
   140027450:	mov    rdx,rdi
   140027453:	call   QWORD PTR [rax]
   140027455:	movzx  eax,BYTE PTR [r14+0x14]
   14002745a:	inc    rbp
   14002745d:	mov    BYTE PTR [rdi+0x14],al
   140027460:	cmp    rbp,r15
   140027463:	jl     0x1400273c0
   140027469:	mov    r14,QWORD PTR [rsp+0x60]
   14002746e:	mov    rdi,QWORD PTR [rsp+0x58]
   140027473:	mov    rbx,QWORD PTR [rsp+0x50]
   140027478:	add    rsp,0x20
   14002747c:	pop    r15
   14002747e:	pop    r13
   140027480:	pop    r12
   140027482:	pop    rsi
   140027483:	pop    rbp
   140027484:	ret    
   140027485:	int3   
   140027486:	int3   
   140027487:	int3   
   140027488:	int3   
   140027489:	int3   
   14002748a:	int3   
   14002748b:	int3   
   14002748c:	int3   
   14002748d:	int3   
   14002748e:	int3   
   14002748f:	int3   
   140027490:	mov    edx,DWORD PTR [rcx]
   140027492:	shl    edx,0x1c
   140027495:	sar    edx,0x1c
   140027498:	dec    edx
   14002749a:	je     0x1400274c1
   14002749c:	dec    edx
   14002749e:	je     0x1400274b0
   1400274a0:	dec    edx
   1400274a2:	jne    0x1400274ad
   1400274a4:	mov    rax,QWORD PTR [rcx+0x18]
   1400274a8:	mov    rax,QWORD PTR [rax+0x18]
   1400274ac:	ret    
   1400274ad:	xor    eax,eax
   1400274af:	ret    
   1400274b0:	mov    rax,QWORD PTR [rcx+0x18]
   1400274b4:	mov    rcx,QWORD PTR [rax+0x20]
   1400274b8:	mov    rax,QWORD PTR [rcx+0x18]
   1400274bc:	mov    rax,QWORD PTR [rax+0x10]
   1400274c0:	ret    
   1400274c1:	mov    rax,QWORD PTR [rcx+0x20]
   1400274c5:	mov    rcx,QWORD PTR [rax+0x18]
   1400274c9:	mov    rax,QWORD PTR [rcx+0x8]
   1400274cd:	ret    
   1400274ce:	int3   
   1400274cf:	int3   
   1400274d0:	test   rcx,rcx
   1400274d3:	cmove  rcx,QWORD PTR [rip+0x2ddb5]        # 0x140055290
   1400274db:	cmp    rcx,QWORD PTR [rcx+0x38]
   1400274df:	je     0x1400274e4
   1400274e1:	xor    eax,eax
   1400274e3:	ret    
   1400274e4:	mov    rcx,QWORD PTR [rcx+0x48]
   1400274e8:	mov    rcx,QWORD PTR [rcx+0x8]
   1400274ec:	jmp    0x140027780
   1400274f1:	int3   
   1400274f2:	int3   
   1400274f3:	int3   
   1400274f4:	int3   
   1400274f5:	int3   
   1400274f6:	int3   
   1400274f7:	int3   
   1400274f8:	int3   
   1400274f9:	int3   
   1400274fa:	int3   
   1400274fb:	int3   
   1400274fc:	int3   
   1400274fd:	int3   
   1400274fe:	int3   
   1400274ff:	int3   
   140027500:	mov    r8d,DWORD PTR [rcx]
   140027503:	xor    r9d,r9d
   140027506:	shl    r8d,0x1c
   14002750a:	sar    r8d,0x1c
   14002750e:	dec    r8d
   140027511:	je     0x140027555
   140027513:	dec    r8d
   140027516:	je     0x140027535
   140027518:	dec    r8d
   14002751b:	jne    0x140027561
   14002751d:	mov    rax,QWORD PTR [rcx+0x18]
   140027521:	mov    r8d,0x200
   140027527:	mov    r9,QWORD PTR [rax+0x18]
   14002752b:	mov    rax,QWORD PTR [r9+0x8]
   14002752f:	mov    rcx,rax
   140027532:	rex.W jmp QWORD PTR [rax]
   140027535:	mov    rax,QWORD PTR [rcx+0x18]
   140027539:	mov    r8d,0x200
   14002753f:	mov    rcx,QWORD PTR [rax+0x20]
   140027543:	mov    rax,QWORD PTR [rcx+0x18]
   140027547:	mov    r9,QWORD PTR [rax+0x10]
   14002754b:	mov    rax,QWORD PTR [r9+0x8]
   14002754f:	mov    rcx,rax
   140027552:	rex.W jmp QWORD PTR [rax]
   140027555:	mov    rax,QWORD PTR [rcx+0x20]
   140027559:	mov    rcx,QWORD PTR [rax+0x18]
   14002755d:	mov    r9,QWORD PTR [rcx+0x8]
   140027561:	mov    rax,QWORD PTR [r9+0x8]
   140027565:	mov    r8d,0x200
   14002756b:	mov    rcx,rax
   14002756e:	rex.W jmp QWORD PTR [rax]
   140027571:	int3   
   140027572:	int3   
   140027573:	int3   
   140027574:	int3   
   140027575:	int3   
   140027576:	int3   
   140027577:	int3   
   140027578:	int3   
   140027579:	int3   
   14002757a:	int3   
   14002757b:	int3   
   14002757c:	int3   
   14002757d:	int3   
   14002757e:	int3   
   14002757f:	int3   
   140027580:	rex push rbx
   140027582:	sub    rsp,0x20
   140027586:	mov    rbx,rcx
   140027589:	mov    rcx,QWORD PTR [rcx]
   14002758c:	call   0x14002bc90
   140027591:	mov    rcx,QWORD PTR [rbx+0x8]
   140027595:	call   0x14002bc90
   14002759a:	mov    rcx,rbx
   14002759d:	add    rsp,0x20
   1400275a1:	pop    rbx
   1400275a2:	rex.W jmp QWORD PTR [rip+0x15cf7]        # 0x14003d2a0
   1400275a9:	int3   
   1400275aa:	int3   
   1400275ab:	int3   
   1400275ac:	int3   
   1400275ad:	int3   
   1400275ae:	int3   
   1400275af:	int3   
   1400275b0:	rex push rbx
   1400275b2:	sub    rsp,0x20
   1400275b6:	mov    rbx,rcx
   1400275b9:	call   0x140027500
   1400275be:	test   rax,rax
   1400275c1:	je     0x1400275dc
   1400275c3:	movsxd rax,DWORD PTR [rax+0x10]
   1400275c7:	test   eax,eax
   1400275c9:	js     0x1400275dc
   1400275cb:	mov    rdx,rax
   1400275ce:	mov    rax,QWORD PTR [rbx+0x8]
   1400275d2:	mov    rax,QWORD PTR [rax+rdx*8]
   1400275d6:	add    rsp,0x20
   1400275da:	pop    rbx
   1400275db:	ret    
   1400275dc:	xor    eax,eax
   1400275de:	add    rsp,0x20
   1400275e2:	pop    rbx
   1400275e3:	ret    
   1400275e4:	int3   
   1400275e5:	int3   
   1400275e6:	int3   
   1400275e7:	int3   
   1400275e8:	int3   
   1400275e9:	int3   
   1400275ea:	int3   
   1400275eb:	int3   
   1400275ec:	int3   
   1400275ed:	int3   
   1400275ee:	int3   
   1400275ef:	int3   
   1400275f0:	sub    rsp,0x28
   1400275f4:	call   0x140027500
   1400275f9:	test   rax,rax
   1400275fc:	je     0x140027606
   1400275fe:	mov    eax,DWORD PTR [rax+0x10]
   140027601:	add    rsp,0x28
   140027605:	ret    
   140027606:	or     eax,0xffffffff
   140027609:	add    rsp,0x28
   14002760d:	ret    
   14002760e:	int3   
   14002760f:	int3   
   140027610:	sub    rsp,0x28
   140027614:	cmp    QWORD PTR [rip+0x2dc74],0x0        # 0x140055290
   14002761c:	jne    0x140027641
   14002761e:	mov    DWORD PTR [rip+0x2dc5c],ecx        # 0x140055280
   140027624:	mov    DWORD PTR [rip+0x2dc5a],edx        # 0x140055284
   14002762a:	mov    DWORD PTR [rip+0x2dc57],r8d        # 0x140055288
   140027631:	mov    BYTE PTR [rip+0x2dc7b],0x1        # 0x1400552b3
   140027638:	add    rsp,0x28
   14002763c:	jmp    0x1400278c0
   140027641:	cmp    DWORD PTR [rip+0x2dc39],ecx        # 0x140055280
   140027647:	jne    0x14002765a
   140027649:	cmp    DWORD PTR [rip+0x2dc35],edx        # 0x140055284
   14002764f:	jne    0x14002765a
   140027651:	cmp    DWORD PTR [rip+0x2dc30],r8d        # 0x140055288
   140027658:	je     0x140027676
   14002765a:	call   QWORD PTR [rip+0x15c70]        # 0x14003d2d0
   140027660:	lea    rdx,[rip+0x19aa1]        # 0x140041108
   140027667:	lea    rcx,[rax+0x60]
   14002766b:	add    rsp,0x28
   14002766f:	rex.W jmp QWORD PTR [rip+0x15c4a]        # 0x14003d2c0
   140027676:	add    rsp,0x28
   14002767a:	ret    
   14002767b:	int3   
   14002767c:	int3   
   14002767d:	int3   
   14002767e:	int3   
   14002767f:	int3   
   140027680:	test   rcx,rcx
   140027683:	cmove  rcx,QWORD PTR [rip+0x2dc05]        # 0x140055290
   14002768b:	cmp    rcx,QWORD PTR [rcx+0x38]
   14002768f:	je     0x140027694
   140027691:	xor    eax,eax
   140027693:	ret    
   140027694:	mov    rcx,QWORD PTR [rcx+0x48]
   140027698:	mov    rcx,QWORD PTR [rcx]
   14002769b:	jmp    0x140027780
   1400276a0:	mov    rax,QWORD PTR [rip+0x2dbe9]        # 0x140055290
   1400276a7:	ret    
   1400276a8:	int3   
   1400276a9:	int3   
   1400276aa:	int3   
   1400276ab:	int3   
   1400276ac:	int3   
   1400276ad:	int3   
   1400276ae:	int3   
   1400276af:	int3   
   1400276b0:	test   rcx,rcx
   1400276b3:	cmove  rcx,QWORD PTR [rip+0x2dbd5]        # 0x140055290
   1400276bb:	cmp    rcx,QWORD PTR [rcx+0x38]
   1400276bf:	je     0x1400276c4
   1400276c1:	xor    eax,eax
   1400276c3:	ret    
   1400276c4:	jmp    0x140027780
   1400276c9:	int3   
   1400276ca:	int3   
   1400276cb:	int3   
   1400276cc:	int3   
   1400276cd:	int3   
   1400276ce:	int3   
   1400276cf:	int3   
   1400276d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400276d5:	push   rdi
   1400276d6:	sub    rsp,0x20
   1400276da:	mov    rdi,r8
   1400276dd:	mov    rbx,rcx
   1400276e0:	call   0x140027500
   1400276e5:	test   rax,rax
   1400276e8:	je     0x14002770e
   1400276ea:	movsxd rax,DWORD PTR [rax+0x10]
   1400276ee:	test   eax,eax
   1400276f0:	js     0x14002770e
   1400276f2:	mov    rcx,QWORD PTR [rbx+0x8]
   1400276f6:	lea    rbx,[rcx+rax*8]
   1400276fa:	mov    rcx,QWORD PTR [rcx+rax*8]
   1400276fe:	call   0x14002bc90
   140027703:	mov    rcx,rdi
   140027706:	call   0x14002bbb0
   14002770b:	mov    QWORD PTR [rbx],rax
   14002770e:	mov    rbx,QWORD PTR [rsp+0x30]
   140027713:	add    rsp,0x20
   140027717:	pop    rdi
   140027718:	ret    
   140027719:	int3   
   14002771a:	int3   
   14002771b:	int3   
   14002771c:	int3   
   14002771d:	int3   
   14002771e:	int3   
   14002771f:	int3   
   140027720:	test   edx,edx
   140027722:	js     0x140027730
   140027724:	mov    rax,QWORD PTR [rcx+0x8]
   140027728:	movsxd rdx,edx
   14002772b:	mov    rax,QWORD PTR [rax+rdx*8]
   14002772f:	ret    
   140027730:	xor    eax,eax
   140027732:	ret    
   140027733:	int3   
   140027734:	int3   
   140027735:	int3   
   140027736:	int3   
   140027737:	int3   
   140027738:	int3   
   140027739:	int3   
   14002773a:	int3   
   14002773b:	int3   
   14002773c:	int3   
   14002773d:	int3   
   14002773e:	int3   
   14002773f:	int3   
   140027740:	test   edx,edx
   140027742:	js     0x140027779
   140027744:	push   rdi
   140027745:	sub    rsp,0x20
   140027749:	mov    rcx,QWORD PTR [rcx+0x8]
   14002774d:	movsxd rax,edx
   140027750:	mov    QWORD PTR [rsp+0x30],rbx
   140027755:	lea    rbx,[rcx+rax*8]
   140027759:	mov    rdi,r8
   14002775c:	mov    rcx,QWORD PTR [rbx]
   14002775f:	call   0x14002bc90
   140027764:	mov    rcx,rdi
   140027767:	call   0x14002bbb0
   14002776c:	mov    QWORD PTR [rbx],rax
   14002776f:	mov    rbx,QWORD PTR [rsp+0x30]
   140027774:	add    rsp,0x20
   140027778:	pop    rdi
   140027779:	ret    
   14002777a:	int3   
   14002777b:	int3   
   14002777c:	int3   
   14002777d:	int3   
   14002777e:	int3   
   14002777f:	int3   
   140027780:	mov    QWORD PTR [rsp+0x8],rbx
   140027785:	mov    QWORD PTR [rsp+0x10],rbp
   14002778a:	mov    QWORD PTR [rsp+0x18],rsi
   14002778f:	push   rdi
   140027790:	sub    rsp,0x30
   140027794:	mov    rbp,r8
   140027797:	mov    rsi,rdx
   14002779a:	mov    rbx,rcx
   14002779d:	call   0x140027500
   1400277a2:	mov    rdi,rax
   1400277a5:	test   rax,rax
   1400277a8:	je     0x140027814
   1400277aa:	mov    rbx,QWORD PTR [rax+0x8]
   1400277ae:	mov    r9,rbp
   1400277b1:	mov    rcx,rbx
   1400277b4:	sub    r9,rbx
   1400277b7:	nop    WORD PTR [rax+rax*1+0x0]
   1400277c0:	movzx  r8d,BYTE PTR [rcx]
   1400277c4:	movzx  edx,BYTE PTR [rcx+r9*1]
   1400277c9:	sub    r8d,edx
   1400277cc:	jne    0x1400277d5
   1400277ce:	inc    rcx
   1400277d1:	test   edx,edx
   1400277d3:	jne    0x1400277c0
   1400277d5:	test   r8d,r8d
   1400277d8:	je     0x1400278a8
   1400277de:	call   QWORD PTR [rip+0x15aec]        # 0x14003d2d0
   1400277e4:	lea    rdx,[rip+0x198e5]        # 0x1400410d0
   1400277eb:	mov    r9,rbp
   1400277ee:	lea    rcx,[rax+0x60]
   1400277f2:	mov    r8,rsi
   1400277f5:	mov    QWORD PTR [rsp+0x20],rbx
   1400277fa:	call   QWORD PTR [rip+0x15ac0]        # 0x14003d2c0
   140027800:	lea    rcx,[rip+0x198d9]        # 0x1400410e0
   140027807:	mov    rdx,rsi
   14002780a:	call   0x14002bd50
   14002780f:	jmp    0x1400278a8
   140027814:	mov    ecx,DWORD PTR [rbx]
   140027816:	xor    r9d,r9d
   140027819:	shl    ecx,0x1c
   14002781c:	sar    ecx,0x1c
   14002781f:	dec    ecx
   140027821:	je     0x140027847
   140027823:	dec    ecx
   140027825:	je     0x140027835
   140027827:	dec    ecx
   140027829:	jne    0x140027853
   14002782b:	mov    rax,QWORD PTR [rbx+0x18]
   14002782f:	mov    r9,QWORD PTR [rax+0x18]
   140027833:	jmp    0x140027853
   140027835:	mov    rax,QWORD PTR [rbx+0x18]
   140027839:	mov    rcx,QWORD PTR [rax+0x20]
   14002783d:	mov    rax,QWORD PTR [rcx+0x18]
   140027841:	mov    r9,QWORD PTR [rax+0x10]
   140027845:	jmp    0x140027853
   140027847:	mov    rax,QWORD PTR [rbx+0x20]
   14002784b:	mov    rcx,QWORD PTR [rax+0x18]
   14002784f:	mov    r9,QWORD PTR [rcx+0x8]
   140027853:	mov    r8,rbp
   140027856:	mov    rdx,rsi
   140027859:	mov    rcx,r9
   14002785c:	call   0x1400272b0
   140027861:	mov    rdi,rax
   140027864:	test   rax,rax
   140027867:	je     0x1400278a8
   140027869:	mov    edx,DWORD PTR [rbx]
   14002786b:	shl    edx,0x1c
   14002786e:	sar    edx,0x1c
   140027871:	dec    edx
   140027873:	je     0x14002789c
   140027875:	dec    edx
   140027877:	je     0x14002788a
   140027879:	dec    edx
   14002787b:	jne    0x1400278a8
   14002787d:	mov    rdx,rax
   140027880:	mov    rcx,rbx
   140027883:	call   0x140026f70
   140027888:	jmp    0x1400278a8
   14002788a:	mov    rcx,QWORD PTR [rbx+0x10]
   14002788e:	mov    rdx,rax
   140027891:	mov    rcx,QWORD PTR [rcx+0x20]
   140027895:	call   0x140026d80
   14002789a:	jmp    0x1400278a8
   14002789c:	mov    rcx,QWORD PTR [rbx+0x20]
   1400278a0:	mov    rdx,rax
   1400278a3:	call   0x140027050
   1400278a8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400278ad:	mov    rbp,QWORD PTR [rsp+0x48]
   1400278b2:	mov    rsi,QWORD PTR [rsp+0x50]
   1400278b7:	mov    rax,rdi
   1400278ba:	add    rsp,0x30
   1400278be:	pop    rdi
   1400278bf:	ret    
   1400278c0:	rex push rbx
   1400278c2:	sub    rsp,0x20
   1400278c6:	lea    rcx,[rip+0x1982b]        # 0x1400410f8
   1400278cd:	xor    edx,edx
   1400278cf:	call   0x14002af00
   1400278d4:	lea    r8,[rip+0x15b3d]        # 0x14003d418
   1400278db:	lea    rdx,[rip+0x19822]        # 0x140041104
   1400278e2:	mov    QWORD PTR [rip+0x2d9a7],rax        # 0x140055290
   1400278e9:	mov    rcx,QWORD PTR [rax+0x48]
   1400278ed:	mov    rbx,rax
   1400278f0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400278f4:	call   0x140027780
   1400278f9:	cmp    DWORD PTR [rax+0x10],0x0
   1400278fd:	je     0x140027906
   1400278ff:	call   QWORD PTR [rip+0x1579b]        # 0x14003d0a0
   140027905:	int3   
   140027906:	mov    rcx,QWORD PTR [rbx+0x48]
   14002790a:	lea    r8,[rip+0x15b07]        # 0x14003d418
   140027911:	lea    rdx,[rip+0x15ad0]        # 0x14003d3e8
   140027918:	mov    rcx,QWORD PTR [rcx+0x8]
   14002791c:	call   0x140027780
   140027921:	cmp    DWORD PTR [rax+0x10],0x1
   140027925:	je     0x14002792e
   140027927:	call   QWORD PTR [rip+0x15773]        # 0x14003d0a0
   14002792d:	int3   
   14002792e:	mov    BYTE PTR [rax+0x14],0x0
   140027932:	mov    rcx,QWORD PTR [rbx+0x48]
   140027936:	lea    r8,[rip+0x15adb]        # 0x14003d418
   14002793d:	mov    rcx,QWORD PTR [rcx+0x8]
   140027941:	lea    rdx,[rip+0x15ab0]        # 0x14003d3f8
   140027948:	call   0x140027780
   14002794d:	cmp    DWORD PTR [rax+0x10],0x2
   140027951:	je     0x14002795a
   140027953:	call   QWORD PTR [rip+0x15747]        # 0x14003d0a0
   140027959:	int3   
   14002795a:	mov    BYTE PTR [rax+0x14],0x0
   14002795e:	add    rsp,0x20
   140027962:	pop    rbx
   140027963:	ret    
   140027964:	int3   
   140027965:	int3   
   140027966:	int3   
   140027967:	int3   
   140027968:	int3   
   140027969:	int3   
   14002796a:	int3   
   14002796b:	int3   
   14002796c:	int3   
   14002796d:	int3   
   14002796e:	int3   
   14002796f:	int3   
   140027970:	mov    QWORD PTR [rsp+0x8],rbx
   140027975:	mov    QWORD PTR [rsp+0x10],rsi
   14002797a:	push   rdi
   14002797b:	sub    rsp,0x20
   14002797f:	movsxd rbx,DWORD PTR [rdx+0x10]
   140027983:	mov    rdi,rcx
   140027986:	mov    rcx,QWORD PTR [rcx+0x8]
   14002798a:	mov    rsi,rdx
   14002798d:	lea    eax,[rbx+0x1]
   140027990:	test   rcx,rcx
   140027993:	je     0x1400279a4
   140027995:	movsxd rdx,eax
   140027998:	shl    rdx,0x3
   14002799c:	call   QWORD PTR [rip+0x15706]        # 0x14003d0a8
   1400279a2:	jmp    0x1400279b1
   1400279a4:	movsxd rcx,eax
   1400279a7:	shl    rcx,0x3
   1400279ab:	call   QWORD PTR [rip+0x157b7]        # 0x14003d168
   1400279b1:	mov    QWORD PTR [rdi+0x8],rax
   1400279b5:	mov    rcx,QWORD PTR [rsi+0x8]
   1400279b9:	call   0x14002bbb0
   1400279be:	mov    rcx,QWORD PTR [rdi+0x8]
   1400279c2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400279c7:	mov    QWORD PTR [rcx+rbx*8],rax
   1400279cb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400279d0:	add    rsp,0x20
   1400279d4:	pop    rdi
   1400279d5:	ret    
   1400279d6:	int3   
   1400279d7:	int3   
   1400279d8:	int3   
   1400279d9:	int3   
   1400279da:	int3   
   1400279db:	int3   
   1400279dc:	int3   
   1400279dd:	int3   
   1400279de:	int3   
   1400279df:	int3   
   1400279e0:	test   r8d,r8d
   1400279e3:	jle    0x140027a03
   1400279e5:	sub    rcx,rdx
   1400279e8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400279f0:	movzx  eax,BYTE PTR [rdx]
   1400279f3:	dec    r8d
   1400279f6:	lea    rdx,[rdx+0x1]
   1400279fa:	mov    BYTE PTR [rcx+rdx*1-0x1],al
   1400279fe:	test   r8d,r8d
   140027a01:	jg     0x1400279f0
   140027a03:	ret    
   140027a04:	int3   
   140027a05:	int3   
   140027a06:	int3   
   140027a07:	int3   
   140027a08:	int3   
   140027a09:	int3   
   140027a0a:	int3   
   140027a0b:	int3   
   140027a0c:	int3   
   140027a0d:	int3   
   140027a0e:	int3   
   140027a0f:	int3   
   140027a10:	xor    eax,eax
   140027a12:	test   ecx,ecx
   140027a14:	cmovg  eax,ecx
   140027a17:	mov    DWORD PTR [rip+0x2c477],eax        # 0x140053e94
   140027a1d:	ret    
   140027a1e:	int3   
   140027a1f:	int3   
   140027a20:	rex push rbp
   140027a22:	push   rbx
   140027a23:	push   rsi
   140027a24:	push   rdi
   140027a25:	push   r12
   140027a27:	push   r13
   140027a29:	push   r14
   140027a2b:	push   r15
   140027a2d:	lea    rbp,[rsp-0xf28]
   140027a35:	mov    eax,0x1028
   140027a3a:	call   0x14003b8f0
   140027a3f:	sub    rsp,rax
   140027a42:	xor    eax,eax
   140027a44:	xor    r12d,r12d
   140027a47:	lea    r8,[rbp+0x290]
   140027a4e:	lea    r14,[rbp+0x100]
   140027a55:	mov    DWORD PTR [rbp+0xf78],eax
   140027a5b:	mov    DWORD PTR [rip+0x2d7ef],eax        # 0x140055250
   140027a61:	movaps XMMWORD PTR [rsp+0x1010],xmm6
   140027a69:	mov    eax,0xfffffffe
   140027a6e:	mov    edx,0xc8
   140027a73:	xor    ebx,ebx
   140027a75:	lea    r13,[rbp+0x100]
   140027a7c:	mov    QWORD PTR [rbp+0xf88],r8
   140027a83:	mov    DWORD PTR [rbp+0xf80],r12d
   140027a8a:	mov    DWORD PTR [rip+0x2d7e0],eax        # 0x140055270
   140027a90:	mov    DWORD PTR [rbp+0xf70],edx
   140027a96:	sub    r14,0x2
   140027a9a:	lea    r15,[rbp+0x290]
   140027aa1:	lea    rdi,[rip+0xfffffffffffd8558]        # 0x140000000
   140027aa8:	add    r14,0x2
   140027aac:	movsxd rax,edx
   140027aaf:	mov    r9d,0x2710
   140027ab5:	lea    rcx,[rax*2-0x2]
   140027abd:	nop    DWORD PTR [rax]
   140027ac0:	mov    WORD PTR [r14],bx
   140027ac4:	add    rcx,r13
   140027ac7:	cmp    r14,rcx
   140027aca:	jb     0x140027bb8
   140027ad0:	sub    r14,r13
   140027ad3:	mov    rsi,r8
   140027ad6:	mov    rdi,r13
   140027ad9:	sar    r14,1
   140027adc:	inc    r14d
   140027adf:	cmp    edx,r9d
   140027ae2:	jge    0x140028344
   140027ae8:	add    edx,edx
   140027aea:	mov    DWORD PTR [rbp+0xf78],0x1
   140027af4:	cmp    edx,r9d
   140027af7:	cmovg  edx,r9d
   140027afb:	movsxd r15,edx
   140027afe:	mov    DWORD PTR [rbp+0xf70],edx
   140027b04:	lea    r12,[r15+r15*1]
   140027b08:	mov    rcx,r12
   140027b0b:	call   QWORD PTR [rip+0x15657]        # 0x14003d168
   140027b11:	lea    r8d,[r14+r14*1]
   140027b15:	mov    r13,rax
   140027b18:	test   r8d,r8d
   140027b1b:	jle    0x140027b44
   140027b1d:	mov    r9,rax
   140027b20:	sub    r9,rdi
   140027b23:	nop    DWORD PTR [rax+0x0]
   140027b27:	nop    WORD PTR [rax+rax*1+0x0]
   140027b30:	movzx  edx,BYTE PTR [rdi]
   140027b33:	dec    r8d
   140027b36:	lea    rdi,[rdi+0x1]
   140027b3a:	mov    BYTE PTR [rdi+r9*1-0x1],dl
   140027b3f:	test   r8d,r8d
   140027b42:	jg     0x140027b30
   140027b44:	shl    r15,0x4
   140027b48:	mov    rcx,r15
   140027b4b:	call   QWORD PTR [rip+0x15617]        # 0x14003d168
   140027b51:	mov    ecx,r14d
   140027b54:	shl    ecx,0x4
   140027b57:	mov    r8,rax
   140027b5a:	mov    QWORD PTR [rbp+0xf88],rax
   140027b61:	test   ecx,ecx
   140027b63:	jle    0x140027b81
   140027b65:	mov    rdx,rax
   140027b68:	sub    rdx,rsi
   140027b6b:	nop    DWORD PTR [rax+rax*1+0x0]
   140027b70:	movzx  eax,BYTE PTR [rsi]
   140027b73:	dec    ecx
   140027b75:	lea    rsi,[rsi+0x1]
   140027b79:	mov    BYTE PTR [rsi+rdx*1-0x1],al
   140027b7d:	test   ecx,ecx
   140027b7f:	jg     0x140027b70
   140027b81:	movsxd rax,r14d
   140027b84:	lea    r14,[rax*2-0x2]
   140027b8c:	shl    rax,0x4
   140027b90:	lea    r15,[rax-0x10]
   140027b94:	lea    rax,[r13-0x2]
   140027b98:	add    r14,r13
   140027b9b:	add    rax,r12
   140027b9e:	add    r15,r8
   140027ba1:	cmp    r14,rax
   140027ba4:	jae    0x1400283a5
   140027baa:	mov    r12d,DWORD PTR [rbp+0xf80]
   140027bb1:	lea    rdi,[rip+0xfffffffffffd8448]        # 0x140000000
   140027bb8:	mov    ecx,DWORD PTR [rip+0x2d6b2]        # 0x140055270
   140027bbe:	movsxd rax,ebx
   140027bc1:	lea    rsi,[rax+rax*1]
   140027bc5:	movsx  edi,WORD PTR [rsi+rdi*1+0x51450]
   140027bcd:	cmp    edi,0xffff8000
   140027bd3:	je     0x140027cf9
   140027bd9:	cmp    ecx,0xfffffffe
   140027bdc:	jne    0x140027beb
   140027bde:	call   0x14002bdf0
   140027be3:	mov    ecx,eax
   140027be5:	mov    DWORD PTR [rip+0x2d685],eax        # 0x140055270
   140027beb:	test   ecx,ecx
   140027bed:	jg     0x140027bfb
   140027bef:	xor    edx,edx
   140027bf1:	xor    ecx,ecx
   140027bf3:	mov    DWORD PTR [rip+0x2d677],ecx        # 0x140055270
   140027bf9:	jmp    0x140027c1c
   140027bfb:	cmp    ecx,0x108
   140027c01:	ja     0x140027c17
   140027c03:	lea    rdx,[rip+0xfffffffffffd83f6]        # 0x140000000
   140027c0a:	movsxd rax,ecx
   140027c0d:	movsx  edx,BYTE PTR [rax+rdx*1+0x51110]
   140027c15:	jmp    0x140027c1c
   140027c17:	mov    edx,0x3a
   140027c1c:	add    edi,edx
   140027c1e:	cmp    edi,0x51
   140027c21:	ja     0x140027cf9
   140027c27:	movsxd rax,edi
   140027c2a:	lea    rdi,[rip+0xfffffffffffd83cf]        # 0x140000000
   140027c31:	lea    r8,[rax+rax*1]
   140027c35:	movsx  eax,WORD PTR [r8+rdi*1+0x51610]
   140027c3e:	cmp    eax,edx
   140027c40:	jne    0x140027d00
   140027c46:	movsx  edx,WORD PTR [r8+rdi*1+0x51560]
   140027c4f:	test   edx,edx
   140027c51:	jns    0x140027cac
   140027c53:	cmp    edx,0xffff8000
   140027c59:	je     0x140027d10
   140027c5f:	neg    edx
   140027c61:	movsxd rax,edx
   140027c64:	lea    rsi,[rax+rax*1]
   140027c68:	movsx  rdi,WORD PTR [rsi+rdi*1+0x512b0]
   140027c71:	test   edi,edi
   140027c73:	jle    0x140027c8b
   140027c75:	mov    rax,rdi
   140027c78:	mov    rcx,r15
   140027c7b:	shl    rax,0x4
   140027c7f:	sub    rcx,rax
   140027c82:	movups xmm0,XMMWORD PTR [rcx+0x10]
   140027c86:	movaps XMMWORD PTR [rsp+0x20],xmm0
   140027c8b:	dec    edx
   140027c8d:	cmp    edx,0x41
   140027c90:	ja     0x1400282b1
   140027c96:	lea    rbx,[rip+0xfffffffffffd8363]        # 0x140000000
   140027c9d:	movsxd rax,edx
   140027ca0:	mov    ecx,DWORD PTR [rbx+rax*4+0x283dc]
   140027ca7:	add    rcx,rbx
   140027caa:	jmp    rcx
   140027cac:	je     0x140027d10
   140027cae:	cmp    edx,0x5b
   140027cb1:	je     0x140028377
   140027cb7:	movups xmm0,XMMWORD PTR [rip+0x2d5a2]        # 0x140055260
   140027cbe:	test   ecx,ecx
   140027cc0:	mov    eax,0xfffffffe
   140027cc5:	cmovne ecx,eax
   140027cc8:	add    r15,0x10
   140027ccc:	mov    DWORD PTR [rip+0x2d59e],ecx        # 0x140055270
   140027cd2:	movups XMMWORD PTR [r15],xmm0
   140027cd6:	test   r12d,r12d
   140027cd9:	je     0x140027ce5
   140027cdb:	dec    r12d
   140027cde:	mov    DWORD PTR [rbp+0xf80],r12d
   140027ce5:	mov    r8,QWORD PTR [rbp+0xf88]
   140027cec:	mov    ebx,edx
   140027cee:	mov    edx,DWORD PTR [rbp+0xf70]
   140027cf4:	jmp    0x140027aa8
   140027cf9:	lea    rdi,[rip+0xfffffffffffd8300]        # 0x140000000
   140027d00:	movsx  edx,WORD PTR [rsi+rdi*1+0x51340]
   140027d08:	test   edx,edx
   140027d0a:	jne    0x140027c61
   140027d10:	test   r12d,r12d
   140027d13:	jne    0x140027d29
   140027d15:	inc    DWORD PTR [rip+0x2d535]        # 0x140055250
   140027d1b:	lea    rcx,[rip+0x194a6]        # 0x1400411c8
   140027d22:	call   0x14002bd50
   140027d27:	jmp    0x140027d42
   140027d29:	cmp    r12d,0x3
   140027d2d:	jne    0x140027d42
   140027d2f:	test   ecx,ecx
   140027d31:	je     0x14002839b
   140027d37:	mov    eax,0xfffffffe
   140027d3c:	mov    DWORD PTR [rip+0x2d52e],eax        # 0x140055270
   140027d42:	mov    r12d,0x3
   140027d48:	mov    DWORD PTR [rbp+0xf80],r12d
   140027d4f:	nop
   140027d50:	movsxd rax,ebx
   140027d53:	movsx  eax,WORD PTR [rdi+rax*2+0x51450]
   140027d5b:	cmp    eax,0xffff8000
   140027d60:	je     0x140027d94
   140027d62:	inc    eax
   140027d64:	cmp    eax,0x51
   140027d67:	ja     0x140027d94
   140027d69:	movsxd rcx,eax
   140027d6c:	cmp    WORD PTR [rdi+rcx*2+0x51610],0x1
   140027d75:	jne    0x140027d94
   140027d77:	movsx  ebx,WORD PTR [rdi+rcx*2+0x51560]
   140027d7f:	test   ebx,ebx
   140027d81:	jns    0x140027d92
   140027d83:	cmp    ebx,0xffff8000
   140027d89:	je     0x140027d94
   140027d8b:	mov    edx,ebx
   140027d8d:	jmp    0x140027c5f
   140027d92:	jne    0x140027dac
   140027d94:	cmp    r14,r13
   140027d97:	je     0x14002839b
   140027d9d:	movsx  ebx,WORD PTR [r14-0x2]
   140027da2:	sub    r15,0x10
   140027da6:	sub    r14,0x2
   140027daa:	jmp    0x140027d50
   140027dac:	cmp    ebx,0x5b
   140027daf:	je     0x140028377
   140027db5:	movups xmm0,XMMWORD PTR [rip+0x2d4a4]        # 0x140055260
   140027dbc:	mov    r8,QWORD PTR [rbp+0xf88]
   140027dc3:	mov    edx,DWORD PTR [rbp+0xf70]
   140027dc9:	add    r15,0x10
   140027dcd:	movups XMMWORD PTR [r15],xmm0
   140027dd1:	jmp    0x140027aa8
   140027dd6:	mov    edx,DWORD PTR [rip+0x2bf90]        # 0x140053d6c
   140027ddc:	mov    rcx,QWORD PTR [r15]
   140027ddf:	call   0x14002af00
   140027de4:	movsxd rdx,DWORD PTR [rip+0x2c0a5]        # 0x140053e90
   140027deb:	mov    BYTE PTR [rip+0x2bee2],0x1        # 0x140053cd4
   140027df2:	mov    QWORD PTR [rip+0x2d49f],rax        # 0x140055298
   140027df9:	mov    rcx,QWORD PTR [r15]
   140027dfc:	mov    QWORD PTR [rbx+rdx*8+0x53d90],rax
   140027e04:	inc    edx
   140027e06:	mov    QWORD PTR [rip+0x2bf63],rax        # 0x140053d70
   140027e0d:	mov    DWORD PTR [rip+0x2c07d],edx        # 0x140053e90
   140027e13:	call   0x14002bc90
   140027e18:	jmp    0x1400282b1
   140027e1d:	mov    BYTE PTR [rip+0x2d48e],0x1        # 0x1400552b2
   140027e24:	call   0x140028b10
   140027e29:	jmp    0x1400282b1
   140027e2e:	mov    rcx,QWORD PTR [rip+0x2d463]        # 0x140055298
   140027e35:	test   rcx,rcx
   140027e38:	je     0x140027e3f
   140027e3a:	call   0x14002a8b0
   140027e3f:	mov    QWORD PTR [rip+0x2d44e],0x0        # 0x140055298
   140027e4a:	jmp    0x1400282b1
   140027e4f:	lea    rax,[rip+0x16af6]        # 0x14003e94c
   140027e56:	mov    DWORD PTR [rip+0x2bf0c],0x0        # 0x140053d6c
   140027e60:	mov    QWORD PTR [rip+0x2d439],rax        # 0x1400552a0
   140027e67:	jmp    0x1400282b1
   140027e6c:	lea    rax,[rip+0x16ad9]        # 0x14003e94c
   140027e73:	mov    DWORD PTR [rip+0x2beef],0x2        # 0x140053d6c
   140027e7d:	mov    QWORD PTR [rip+0x2d41c],rax        # 0x1400552a0
   140027e84:	jmp    0x1400282b1
   140027e89:	lea    rax,[rip+0x16ab8]        # 0x14003e948
   140027e90:	mov    DWORD PTR [rip+0x2bed2],0x1        # 0x140053d6c
   140027e9a:	mov    QWORD PTR [rip+0x2d3ff],rax        # 0x1400552a0
   140027ea1:	jmp    0x1400282b1
   140027ea6:	lea    rax,[rip+0x16a9b]        # 0x14003e948
   140027ead:	mov    DWORD PTR [rip+0x2beb5],0x3        # 0x140053d6c
   140027eb7:	mov    QWORD PTR [rip+0x2d3e2],rax        # 0x1400552a0
   140027ebe:	jmp    0x1400282b1
   140027ec3:	mov    DWORD PTR [rip+0x2be9b],0x3        # 0x140053d68
   140027ecd:	jmp    0x1400282b1
   140027ed2:	mov    rax,QWORD PTR [rip+0x2be97]        # 0x140053d70
   140027ed9:	mov    DWORD PTR [rip+0x2be85],0x1        # 0x140053d68
   140027ee3:	mov    rcx,QWORD PTR [rax+0x48]
   140027ee7:	mov    rax,QWORD PTR [rcx]
   140027eea:	mov    QWORD PTR [rip+0x2be87],rax        # 0x140053d78
   140027ef1:	jmp    0x1400282b1
   140027ef6:	mov    rax,QWORD PTR [rip+0x2be73]        # 0x140053d70
   140027efd:	mov    DWORD PTR [rip+0x2be61],0x2        # 0x140053d68
   140027f07:	mov    rcx,QWORD PTR [rax+0x48]
   140027f0b:	mov    rax,QWORD PTR [rcx+0x8]
   140027f0f:	mov    QWORD PTR [rip+0x2be6a],rax        # 0x140053d80
   140027f16:	jmp    0x1400282b1
   140027f1b:	mov    rdx,QWORD PTR [r15]
   140027f1e:	mov    rcx,QWORD PTR [r15-0x20]
   140027f22:	call   0x140028560
   140027f27:	mov    rcx,QWORD PTR [r15-0x20]
   140027f2b:	call   0x14002bc90
   140027f30:	mov    rcx,QWORD PTR [r15]
   140027f33:	call   0x14002bc90
   140027f38:	jmp    0x1400282b1
   140027f3d:	mov    rcx,QWORD PTR [r15]
   140027f40:	lea    rdx,[rip+0x15e91]        # 0x14003ddd8
   140027f47:	call   0x140028560
   140027f4c:	mov    rcx,QWORD PTR [r15]
   140027f4f:	call   0x14002bc90
   140027f54:	jmp    0x1400282b1
   140027f59:	lea    rcx,[rip+0x19230]        # 0x140041190
   140027f60:	call   0x14002bd50
   140027f65:	jmp    0x1400282b1
   140027f6a:	mov    rax,QWORD PTR [r15-0x10]
   140027f6e:	lea    rcx,[rip+0x2bd6b]        # 0x140053ce0
   140027f75:	mov    QWORD PTR [rsp+0x70],rax
   140027f7a:	call   QWORD PTR [rip+0x15360]        # 0x14003d2e0
   140027f80:	mov    BYTE PTR [rip+0x2bd59],0x0        # 0x140053ce0
   140027f87:	mov    QWORD PTR [rsp+0x78],rax
   140027f8c:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140027f91:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140027f97:	jmp    0x1400282b1
   140027f9c:	mov    rdx,QWORD PTR [r15]
   140027f9f:	mov    rcx,QWORD PTR [rip+0x2bdca]        # 0x140053d70
   140027fa6:	call   0x14002a530
   140027fab:	mov    rcx,QWORD PTR [r15]
   140027fae:	mov    BYTE PTR [rip+0x2bd1f],0x0        # 0x140053cd4
   140027fb5:	mov    QWORD PTR [rsp+0x20],rax
   140027fba:	call   0x14002bc90
   140027fbf:	jmp    0x1400282b1
   140027fc4:	lea    rcx,[rip+0x2bd15]        # 0x140053ce0
   140027fcb:	dec    rcx
   140027fce:	xchg   ax,ax
   140027fd0:	cmp    BYTE PTR [rcx+0x1],0x0
   140027fd4:	lea    rcx,[rcx+0x1]
   140027fd8:	jne    0x140027fd0
   140027fda:	movzx  eax,WORD PTR [rip+0x191cf]        # 0x1400411b0
   140027fe1:	mov    WORD PTR [rcx],ax
   140027fe4:	lea    rcx,[rip+0x2bcf5]        # 0x140053ce0
   140027feb:	dec    rcx
   140027fee:	xchg   ax,ax
   140027ff0:	cmp    BYTE PTR [rcx+0x1],0x0
   140027ff4:	lea    rcx,[rcx+0x1]
   140027ff8:	jne    0x140027ff0
   140027ffa:	mov    r8,QWORD PTR [r15]
   140027ffd:	xor    edx,edx
   140027fff:	nop
   140028000:	movzx  eax,BYTE PTR [r8+rdx*1]
   140028005:	inc    rdx
   140028008:	mov    BYTE PTR [rcx+rdx*1-0x1],al
   14002800c:	test   al,al
   14002800e:	jne    0x140028000
   140028010:	jmp    0x1400282b1
   140028015:	mov    rcx,QWORD PTR [r15]
   140028018:	call   QWORD PTR [rip+0x152c2]        # 0x14003d2e0
   14002801e:	mov    QWORD PTR [rip+0x2bd3b],rax        # 0x140053d60
   140028025:	jmp    0x1400282b1
   14002802a:	mov    r9,QWORD PTR [r15-0x10]
   14002802e:	mov    r8,QWORD PTR [rip+0x2bd2b]        # 0x140053d60
   140028035:	lea    rdx,[rip+0x1917c]        # 0x1400411b8
   14002803c:	lea    rcx,[rbp-0x80]
   140028040:	call   QWORD PTR [rip+0x1506a]        # 0x14003d0b0
   140028046:	lea    rcx,[rip+0x2bc93]        # 0x140053ce0
   14002804d:	dec    rcx
   140028050:	cmp    BYTE PTR [rcx+0x1],0x0
   140028054:	lea    rcx,[rcx+0x1]
   140028058:	jne    0x140028050
   14002805a:	lea    r8,[rbp-0x80]
   14002805e:	xor    edx,edx
   140028060:	movzx  eax,BYTE PTR [r8+rdx*1]
   140028065:	inc    rdx
   140028068:	mov    BYTE PTR [rcx+rdx*1-0x1],al
   14002806c:	test   al,al
   14002806e:	jne    0x140028060
   140028070:	mov    rcx,QWORD PTR [rip+0x2bce9]        # 0x140053d60
   140028077:	call   QWORD PTR [rip+0x15223]        # 0x14003d2a0
   14002807d:	jmp    0x1400282b1
   140028082:	mov    r8,QWORD PTR [r15]
   140028085:	lea    rdx,[rip+0x19138]        # 0x1400411c4
   14002808c:	lea    rcx,[rbp+0x80]
   140028093:	call   QWORD PTR [rip+0x15017]        # 0x14003d0b0
   140028099:	lea    rcx,[rip+0x2bc40]        # 0x140053ce0
   1400280a0:	dec    rcx
   1400280a3:	cmp    BYTE PTR [rcx+0x1],0x0
   1400280a7:	lea    rcx,[rcx+0x1]
   1400280ab:	jne    0x1400280a3
   1400280ad:	lea    r8,[rbp+0x80]
   1400280b4:	xor    edx,edx
   1400280b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400280c0:	movzx  eax,BYTE PTR [r8+rdx*1]
   1400280c5:	inc    rdx
   1400280c8:	mov    BYTE PTR [rcx+rdx*1-0x1],al
   1400280cc:	test   al,al
   1400280ce:	jne    0x1400280c0
   1400280d0:	jmp    0x1400282b1
   1400280d5:	mov    rax,QWORD PTR [r15]
   1400280d8:	mov    DWORD PTR [rip+0x2bc86],0x1        # 0x140053d68
   1400280e2:	mov    QWORD PTR [rip+0x2bc8f],rax        # 0x140053d78
   1400280e9:	jmp    0x1400282b1
   1400280ee:	movups xmm0,XMMWORD PTR [r15]
   1400280f2:	lea    rcx,[rsp+0x30]
   1400280f7:	movaps XMMWORD PTR [rsp+0x30],xmm0
   1400280fc:	call   0x140028730
   140028101:	jmp    0x1400282b1
   140028106:	mov    rax,QWORD PTR [rip+0x2bc7b]        # 0x140053d88
   14002810d:	mov    DWORD PTR [rip+0x2bc51],0x2        # 0x140053d68
   140028117:	mov    rcx,QWORD PTR [rax]
   14002811a:	mov    rax,QWORD PTR [rcx+0x48]
   14002811e:	mov    rcx,QWORD PTR [rax+0x8]
   140028122:	mov    QWORD PTR [rip+0x2bc57],rcx        # 0x140053d80
   140028129:	jmp    0x1400282b1
   14002812e:	call   0x140028830
   140028133:	jmp    0x1400282b1
   140028138:	movups xmm6,XMMWORD PTR [r15]
   14002813c:	mov    rbx,QWORD PTR [rip+0x2bc45]        # 0x140053d88
   140028143:	mov    edx,0x18
   140028148:	lea    ecx,[rdx-0x17]
   14002814b:	call   QWORD PTR [rip+0x14f17]        # 0x14003d068
   140028151:	mov    rcx,QWORD PTR [rbx+0x10]
   140028155:	mov    QWORD PTR [rcx+0x10],rax
   140028159:	mov    rax,QWORD PTR [rbx+0x10]
   14002815d:	mov    rcx,QWORD PTR [rax+0x10]
   140028161:	mov    QWORD PTR [rbx+0x10],rcx
   140028165:	movups XMMWORD PTR [rcx],xmm6
   140028168:	mov    rax,QWORD PTR [rbx+0x10]
   14002816c:	mov    QWORD PTR [rax+0x10],0x0
   140028174:	jmp    0x1400282b1
   140028179:	call   0x140028b10
   14002817e:	mov    QWORD PTR [rsp+0x68],0x0
   140028187:	mov    QWORD PTR [rsp+0x60],rax
   14002818c:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140028191:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140028197:	jmp    0x1400282b1
   14002819c:	mov    eax,DWORD PTR [rip+0x2bb2e]        # 0x140053cd0
   1400281a2:	lea    rdx,[rip+0x18fbf]        # 0x140041168
   1400281a9:	lea    rcx,[rbp+0x0]
   1400281ad:	mov    r8d,eax
   1400281b0:	inc    eax
   1400281b2:	mov    BYTE PTR [rip+0x2bb1b],0x0        # 0x140053cd4
   1400281b9:	mov    DWORD PTR [rip+0x2bb11],eax        # 0x140053cd0
   1400281bf:	call   QWORD PTR [rip+0x14eeb]        # 0x14003d0b0
   1400281c5:	mov    rcx,QWORD PTR [rip+0x2bba4]        # 0x140053d70
   1400281cc:	lea    rdx,[rbp+0x0]
   1400281d0:	call   0x14002afe0
   1400281d5:	movsxd rdx,DWORD PTR [rip+0x2bcb4]        # 0x140053e90
   1400281dc:	mov    QWORD PTR [rbx+rdx*8+0x53d90],rax
   1400281e4:	inc    edx
   1400281e6:	mov    QWORD PTR [rip+0x2bb83],rax        # 0x140053d70
   1400281ed:	mov    DWORD PTR [rip+0x2bc9d],edx        # 0x140053e90
   1400281f3:	jmp    0x1400282b1
   1400281f8:	call   0x140028b10
   1400281fd:	mov    QWORD PTR [rsp+0x48],0x0
   140028206:	mov    QWORD PTR [rsp+0x40],rax
   14002820b:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140028210:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140028216:	jmp    0x1400282b1
   14002821b:	call   0x140028b10
   140028220:	mov    QWORD PTR [rsp+0x58],0x0
   140028229:	mov    QWORD PTR [rsp+0x50],rax
   14002822e:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140028233:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140028239:	jmp    0x1400282b1
   14002823b:	mov    rdx,QWORD PTR [r15]
   14002823e:	mov    rcx,QWORD PTR [rip+0x2d053]        # 0x140055298
   140028245:	call   0x14002ad30
   14002824a:	mov    rcx,QWORD PTR [rip+0x2bb1f]        # 0x140053d70
   140028251:	mov    rbx,rax
   140028254:	test   rax,rax
   140028257:	je     0x140028263
   140028259:	mov    rdx,rax
   14002825c:	call   0x14002add0
   140028261:	jmp    0x14002826e
   140028263:	mov    rdx,QWORD PTR [r15]
   140028266:	call   0x14002afe0
   14002826b:	mov    rbx,rax
   14002826e:	movsxd rcx,DWORD PTR [rip+0x2bc1b]        # 0x140053e90
   140028275:	lea    rdx,[rip+0xfffffffffffd7d84]        # 0x140000000
   14002827c:	mov    QWORD PTR [rip+0x2baed],rbx        # 0x140053d70
   140028283:	mov    QWORD PTR [rdx+rcx*8+0x53d90],rbx
   14002828b:	inc    ecx
   14002828d:	mov    BYTE PTR [rip+0x2ba40],0x0        # 0x140053cd4
   140028294:	mov    DWORD PTR [rip+0x2bbf6],ecx        # 0x140053e90
   14002829a:	mov    rcx,QWORD PTR [r15]
   14002829d:	call   0x14002bc90
   1400282a2:	jmp    0x1400282b1
   1400282a4:	mov    rcx,QWORD PTR [r15]
   1400282a7:	call   0x14002bbb0
   1400282ac:	mov    QWORD PTR [rsp+0x20],rax
   1400282b1:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400282b6:	mov    rax,rdi
   1400282b9:	mov    rcx,rdi
   1400282bc:	neg    rax
   1400282bf:	shl    rcx,0x4
   1400282c3:	lea    rdi,[rip+0xfffffffffffd7d36]        # 0x140000000
   1400282ca:	lea    r14,[r14+rax*2]
   1400282ce:	mov    eax,0x10
   1400282d3:	sub    rax,rcx
   1400282d6:	add    r15,rax
   1400282d9:	movsx  rax,WORD PTR [rsi+rdi*1+0x51220]
   1400282e2:	lea    r8,[rax*2-0x2c]
   1400282ea:	movups XMMWORD PTR [r15],xmm0
   1400282ee:	movsx  edx,WORD PTR [r14]
   1400282f2:	movsx  ecx,WORD PTR [r8+rdi*1+0x51510]
   1400282fb:	add    ecx,edx
   1400282fd:	cmp    ecx,0x51
   140028300:	ja     0x140028329
   140028302:	movsxd rax,ecx
   140028305:	cmp    WORD PTR [rdi+rax*2+0x51610],dx
   14002830d:	jne    0x140028329
   14002830f:	movsx  ebx,WORD PTR [rdi+rax*2+0x51560]
   140028317:	mov    r8,QWORD PTR [rbp+0xf88]
   14002831e:	mov    edx,DWORD PTR [rbp+0xf70]
   140028324:	jmp    0x140027aa8
   140028329:	movsx  ebx,WORD PTR [r8+rdi*1+0x51400]
   140028332:	mov    edx,DWORD PTR [rbp+0xf70]
   140028338:	mov    r8,QWORD PTR [rbp+0xf88]
   14002833f:	jmp    0x140027aa8
   140028344:	lea    rcx,[rip+0x18e2d]        # 0x140041178
   14002834b:	call   0x14002bd50
   140028350:	mov    eax,DWORD PTR [rbp+0xf78]
   140028356:	test   eax,eax
   140028358:	je     0x140028370
   14002835a:	mov    rcx,r13
   14002835d:	call   QWORD PTR [rip+0x14f3d]        # 0x14003d2a0
   140028363:	mov    rcx,QWORD PTR [rbp+0xf88]
   14002836a:	call   QWORD PTR [rip+0x14f30]        # 0x14003d2a0
   140028370:	mov    eax,0x2
   140028375:	jmp    0x1400283c0
   140028377:	mov    eax,DWORD PTR [rbp+0xf78]
   14002837d:	test   eax,eax
   14002837f:	je     0x140028397
   140028381:	mov    rcx,r13
   140028384:	call   QWORD PTR [rip+0x14f16]        # 0x14003d2a0
   14002838a:	mov    rcx,QWORD PTR [rbp+0xf88]
   140028391:	call   QWORD PTR [rip+0x14f09]        # 0x14003d2a0
   140028397:	xor    eax,eax
   140028399:	jmp    0x1400283c0
   14002839b:	mov    eax,DWORD PTR [rbp+0xf78]
   1400283a1:	test   eax,eax
   1400283a3:	je     0x1400283bb
   1400283a5:	mov    rcx,r13
   1400283a8:	call   QWORD PTR [rip+0x14ef2]        # 0x14003d2a0
   1400283ae:	mov    rcx,QWORD PTR [rbp+0xf88]
   1400283b5:	call   QWORD PTR [rip+0x14ee5]        # 0x14003d2a0
   1400283bb:	mov    eax,0x1
   1400283c0:	movaps xmm6,XMMWORD PTR [rsp+0x1010]
   1400283c8:	add    rsp,0x1028
   1400283cf:	pop    r15
   1400283d1:	pop    r14
   1400283d3:	pop    r13
   1400283d5:	pop    r12
   1400283d7:	pop    rdi
   1400283d8:	pop    rsi
   1400283d9:	pop    rbx
   1400283da:	pop    rbp
   1400283db:	ret    
   1400283dc:	(bad)  
   1400283dd:	jge    0x1400283e1
   1400283df:	add    BYTE PTR [rip+0x2e00027e],bl        # 0x16e028663
   1400283e5:	jle    0x1400283e9
   1400283e7:	add    BYTE PTR [rdi],bh
   1400283e9:	jle    0x1400283ed
   1400283eb:	add    BYTE PTR [rdi+0x7e],cl
   1400283ee:	add    al,BYTE PTR [rax]
   1400283f0:	ins    BYTE PTR es:[rdi],dx
   1400283f1:	jle    0x1400283f5
   1400283f3:	add    BYTE PTR [rcx-0x59fffd82],cl
   1400283f9:	jle    0x1400283fd
   1400283fb:	add    bl,al
   1400283fd:	jle    0x140028401
   1400283ff:	add    dl,dl
   140028401:	jle    0x140028405
   140028403:	add    dh,dh
   140028405:	jle    0x140028409
   140028407:	add    BYTE PTR [rcx-0x4efffd7e],dh
   14002840d:	(bad)  
   14002840e:	add    al,BYTE PTR [rax]
   140028410:	mov    cl,0x82
   140028412:	add    al,BYTE PTR [rax]
   140028414:	mov    cl,0x82
   140028416:	add    al,BYTE PTR [rax]
   140028418:	mov    cl,0x82
   14002841a:	add    al,BYTE PTR [rax]
   14002841c:	mov    cl,0x82
   14002841e:	add    al,BYTE PTR [rax]
   140028420:	mov    cl,0x82
   140028422:	add    al,BYTE PTR [rax]
   140028424:	mov    cl,0x82
   140028426:	add    al,BYTE PTR [rax]
   140028428:	sbb    edi,DWORD PTR [rdi+0x2]
   14002842b:	add    BYTE PTR [rcx+0x3d000282],dh
   140028431:	jg     0x140028435
   140028433:	add    BYTE PTR [rcx-0x4efffd7e],dh
   140028439:	(bad)  
   14002843a:	add    al,BYTE PTR [rax]
   14002843c:	mov    cl,0x82
   14002843e:	add    al,BYTE PTR [rax]
   140028440:	mov    cl,0x82
   140028442:	add    al,BYTE PTR [rax]
   140028444:	mov    cl,0x82
   140028446:	add    al,BYTE PTR [rax]
   140028448:	mov    cl,0x82
   14002844a:	add    al,BYTE PTR [rax]
   14002844c:	pop    rcx
   14002844d:	jg     0x140028451
   14002844f:	add    BYTE PTR [rcx-0x4efffd7e],dh
   140028455:	(bad)  
   140028456:	add    al,BYTE PTR [rax]
   140028458:	mov    cl,0x82
   14002845a:	add    al,BYTE PTR [rax]
   14002845c:	mov    cl,0x82
   14002845e:	add    al,BYTE PTR [rax]
   140028460:	ret    
   140028461:	jle    0x140028465
   140028463:	add    bl,al
   140028465:	jle    0x140028469
   140028467:	add    BYTE PTR [rdx+0x7f],ch
   14002846a:	add    al,BYTE PTR [rax]
   14002846c:	pushf  
   14002846d:	jg     0x140028471
   14002846f:	add    BYTE PTR [rcx-0x4efffd7e],dh
   140028475:	(bad)  
   140028476:	add    al,BYTE PTR [rax]
   140028478:	mov    cl,0x82
   14002847a:	add    al,BYTE PTR [rax]
   14002847c:	mov    cl,0x82
   14002847e:	add    al,BYTE PTR [rax]
   140028480:	mov    cl,0x82
   140028482:	add    al,BYTE PTR [rax]
   140028484:	(bad)  
   140028485:	jg     0x140028489
   140028487:	add    BYTE PTR [rip+0x2a000280],dl        # 0x16a02870d
   14002848d:	add    BYTE PTR [rdx],0x0
   140028490:	(bad)  
   140028491:	add    BYTE PTR [rdx],0x0
   140028494:	(bad)  
   140028495:	add    BYTE PTR [rdx],0x0
   140028498:	ret    
   140028499:	jle    0x14002849d
   14002849b:	add    dh,ch
   14002849d:	add    BYTE PTR [rdx],0x0
   1400284a0:	(bad)  
   1400284a1:	add    DWORD PTR [rdx],0x2812e00
   1400284a7:	add    dh,ch
   1400284a9:	add    BYTE PTR [rdx],0x0
   1400284ac:	(bad)  
   1400284ad:	add    DWORD PTR [rdx],0x2812e00
   1400284b3:	add    BYTE PTR [rax],bh
   1400284b5:	add    DWORD PTR [rdx],0x2813800
   1400284bb:	add    BYTE PTR [rcx+0x38000282],dh
   1400284c1:	add    DWORD PTR [rdx],0x2813800
   1400284c7:	add    BYTE PTR [rcx+0x79000282],dh
   1400284cd:	add    DWORD PTR [rdx],0x2819c00
   1400284d3:	add    al,bh
   1400284d5:	add    DWORD PTR [rdx],0x2821b00
   1400284db:	add    BYTE PTR [rbx],bh
   1400284dd:	(bad)  
   1400284de:	add    al,BYTE PTR [rax]
   1400284e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400284e1:	(bad)  
   1400284e2:	add    al,BYTE PTR [rax]
   1400284e4:	int3   
   1400284e5:	int3   
   1400284e6:	int3   
   1400284e7:	int3   
   1400284e8:	int3   
   1400284e9:	int3   
   1400284ea:	int3   
   1400284eb:	int3   
   1400284ec:	int3   
   1400284ed:	int3   
   1400284ee:	int3   
   1400284ef:	int3   
   1400284f0:	sub    rsp,0xa8
   1400284f7:	mov    eax,DWORD PTR [rip+0x2b7d3]        # 0x140053cd0
   1400284fd:	lea    rdx,[rip+0x18c64]        # 0x140041168
   140028504:	lea    rcx,[rsp+0x20]
   140028509:	mov    r8d,eax
   14002850c:	inc    eax
   14002850e:	mov    BYTE PTR [rip+0x2b7bf],0x0        # 0x140053cd4
   140028515:	mov    DWORD PTR [rip+0x2b7b5],eax        # 0x140053cd0
   14002851b:	call   QWORD PTR [rip+0x14b8f]        # 0x14003d0b0
   140028521:	mov    rcx,QWORD PTR [rip+0x2b848]        # 0x140053d70
   140028528:	lea    rdx,[rsp+0x20]
   14002852d:	call   0x14002afe0
   140028532:	movsxd rdx,DWORD PTR [rip+0x2b957]        # 0x140053e90
   140028539:	lea    r8,[rip+0x2b850]        # 0x140053d90
   140028540:	mov    QWORD PTR [r8+rdx*8],rax
   140028544:	inc    edx
   140028546:	mov    QWORD PTR [rip+0x2b823],rax        # 0x140053d70
   14002854d:	mov    DWORD PTR [rip+0x2b93d],edx        # 0x140053e90
   140028553:	add    rsp,0xa8
   14002855a:	ret    
   14002855b:	int3   
   14002855c:	int3   
   14002855d:	int3   
   14002855e:	int3   
   14002855f:	int3   
   140028560:	mov    QWORD PTR [rsp+0x8],rbx
   140028565:	mov    QWORD PTR [rsp+0x10],rsi
   14002856a:	push   rdi
   14002856b:	sub    rsp,0x20
   14002856f:	cmp    BYTE PTR [rip+0x2b75e],0x0        # 0x140053cd4
   140028576:	mov    rdi,rcx
   140028579:	mov    rcx,QWORD PTR [rip+0x2b7f0]        # 0x140053d70
   140028580:	mov    rsi,rdx
   140028583:	lea    rbx,[rip+0x14e8e]        # 0x14003d418
   14002858a:	je     0x140028594
   14002858c:	cmp    QWORD PTR [rcx+0x38],rcx
   140028590:	cmove  rbx,rdx
   140028594:	mov    edx,DWORD PTR [rip+0x2b7ce]        # 0x140053d68
   14002859a:	test   edx,edx
   14002859c:	je     0x1400285b2
   14002859e:	dec    edx
   1400285a0:	je     0x14002866c
   1400285a6:	dec    edx
   1400285a8:	je     0x1400285e0
   1400285aa:	dec    edx
   1400285ac:	jne    0x14002871b
   1400285b2:	mov    rdx,rdi
   1400285b5:	call   0x140027500
   1400285ba:	mov    rcx,rax
   1400285bd:	test   rax,rax
   1400285c0:	jne    0x1400286e8
   1400285c6:	mov    rcx,QWORD PTR [rip+0x2cccb]        # 0x140055298
   1400285cd:	mov    r8,rbx
   1400285d0:	mov    rdx,rdi
   1400285d3:	call   0x1400276b0
   1400285d8:	mov    rcx,rax
   1400285db:	jmp    0x140028709
   1400285e0:	mov    rcx,QWORD PTR [rcx+0x48]
   1400285e4:	mov    rdx,rdi
   1400285e7:	mov    rcx,QWORD PTR [rcx+0x8]
   1400285eb:	call   0x140027500
   1400285f0:	mov    rdx,rax
   1400285f3:	test   rax,rax
   1400285f6:	jne    0x14002861c
   1400285f8:	mov    rcx,QWORD PTR [rip+0x2cc99]        # 0x140055298
   1400285ff:	mov    r8,rbx
   140028602:	mov    rdx,rdi
   140028605:	call   0x1400274d0
   14002860a:	mov    rcx,QWORD PTR [rip+0x2b76f]        # 0x140053d80
   140028611:	mov    rdx,rax
   140028614:	mov    edx,DWORD PTR [rax+0x10]
   140028617:	jmp    0x140028713
   14002861c:	mov    eax,DWORD PTR [rip+0x2b872]        # 0x140053e94
   140028622:	test   eax,eax
   140028624:	je     0x14002865d
   140028626:	cmp    BYTE PTR [rip+0x2b6a7],0x0        # 0x140053cd4
   14002862d:	jne    0x14002871b
   140028633:	cmp    eax,0x1
   140028636:	jle    0x14002865d
   140028638:	mov    rax,QWORD PTR [rip+0x2b731]        # 0x140053d70
   14002863f:	mov    rcx,QWORD PTR [rax+0x48]
   140028643:	mov    rax,QWORD PTR [rcx+0x8]
   140028647:	cmp    QWORD PTR [rip+0x2b732],rax        # 0x140053d80
   14002864e:	jne    0x14002865d
   140028650:	mov    rax,QWORD PTR [rdx+0x8]
   140028654:	cmp    BYTE PTR [rax],0x0
   140028657:	jne    0x14002871b
   14002865d:	mov    edx,DWORD PTR [rdx+0x10]
   140028660:	mov    rcx,QWORD PTR [rip+0x2b719]        # 0x140053d80
   140028667:	jmp    0x140028713
   14002866c:	mov    rcx,QWORD PTR [rcx+0x48]
   140028670:	mov    rdx,rdi
   140028673:	mov    rcx,QWORD PTR [rcx]
   140028676:	call   0x140027500
   14002867b:	mov    rdx,rax
   14002867e:	test   rax,rax
   140028681:	jne    0x1400286a4
   140028683:	mov    rcx,QWORD PTR [rip+0x2cc0e]        # 0x140055298
   14002868a:	mov    r8,rbx
   14002868d:	mov    rdx,rdi
   140028690:	call   0x140027680
   140028695:	mov    rcx,QWORD PTR [rip+0x2b6dc]        # 0x140053d78
   14002869c:	mov    rdx,rax
   14002869f:	mov    edx,DWORD PTR [rax+0x10]
   1400286a2:	jmp    0x140028713
   1400286a4:	mov    eax,DWORD PTR [rip+0x2b7ea]        # 0x140053e94
   1400286aa:	test   eax,eax
   1400286ac:	je     0x1400286dc
   1400286ae:	cmp    BYTE PTR [rip+0x2b61f],0x0        # 0x140053cd4
   1400286b5:	jne    0x14002871b
   1400286b7:	cmp    eax,0x1
   1400286ba:	jle    0x1400286dc
   1400286bc:	mov    rax,QWORD PTR [rip+0x2b6ad]        # 0x140053d70
   1400286c3:	mov    rcx,QWORD PTR [rax+0x48]
   1400286c7:	mov    rax,QWORD PTR [rcx]
   1400286ca:	cmp    QWORD PTR [rip+0x2b6a7],rax        # 0x140053d78
   1400286d1:	jne    0x1400286dc
   1400286d3:	mov    rax,QWORD PTR [rdx+0x8]
   1400286d7:	cmp    BYTE PTR [rax],0x0
   1400286da:	jne    0x14002871b
   1400286dc:	mov    edx,DWORD PTR [rdx+0x10]
   1400286df:	mov    rcx,QWORD PTR [rip+0x2b692]        # 0x140053d78
   1400286e6:	jmp    0x140028713
   1400286e8:	mov    eax,DWORD PTR [rip+0x2b7a6]        # 0x140053e94
   1400286ee:	test   eax,eax
   1400286f0:	je     0x140028709
   1400286f2:	cmp    BYTE PTR [rip+0x2b5db],0x0        # 0x140053cd4
   1400286f9:	jne    0x14002871b
   1400286fb:	cmp    eax,0x1
   1400286fe:	jle    0x140028709
   140028700:	mov    rax,QWORD PTR [rcx+0x8]
   140028704:	cmp    BYTE PTR [rax],0x0
   140028707:	jne    0x14002871b
   140028709:	mov    edx,DWORD PTR [rcx+0x10]
   14002870c:	mov    rcx,QWORD PTR [rip+0x2b65d]        # 0x140053d70
   140028713:	mov    r8,rsi
   140028716:	call   0x140027740
   14002871b:	mov    rbx,QWORD PTR [rsp+0x30]
   140028720:	mov    rsi,QWORD PTR [rsp+0x38]
   140028725:	add    rsp,0x20
   140028729:	pop    rdi
   14002872a:	ret    
   14002872b:	int3   
   14002872c:	int3   
   14002872d:	int3   
   14002872e:	int3   
   14002872f:	int3   
   140028730:	mov    QWORD PTR [rsp+0x8],rbx
   140028735:	push   rdi
   140028736:	sub    rsp,0x20
   14002873a:	mov    edx,0x28
   14002873f:	mov    rbx,rcx
   140028742:	lea    ecx,[rdx-0x27]
   140028745:	call   QWORD PTR [rip+0x1491d]        # 0x14003d068
   14002874b:	mov    rdx,QWORD PTR [rip+0x2b636]        # 0x140053d88
   140028752:	mov    QWORD PTR [rax+0x20],rdx
   140028756:	mov    edx,0x18
   14002875b:	mov    rdi,rax
   14002875e:	lea    ecx,[rdx-0x17]
   140028761:	mov    QWORD PTR [rip+0x2b620],rax        # 0x140053d88
   140028768:	call   QWORD PTR [rip+0x148fa]        # 0x14003d068
   14002876e:	mov    rcx,QWORD PTR [rip+0x2b5fb]        # 0x140053d70
   140028775:	mov    QWORD PTR [rdi+0x10],rax
   140028779:	mov    QWORD PTR [rdi+0x8],rax
   14002877d:	movups xmm0,XMMWORD PTR [rbx]
   140028780:	movups XMMWORD PTR [rax],xmm0
   140028783:	mov    rax,QWORD PTR [rdi+0x8]
   140028787:	mov    QWORD PTR [rax+0x10],0x0
   14002878f:	movsx  eax,BYTE PTR [rip+0x2b53f]        # 0x140053cd5
   140028796:	mov    QWORD PTR [rdi],rcx
   140028799:	mov    DWORD PTR [rdi+0x18],eax
   14002879c:	call   0x14002afd0
   1400287a1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400287a6:	mov    BYTE PTR [rip+0x2b528],0x1        # 0x140053cd5
   1400287ad:	add    rsp,0x20
   1400287b1:	pop    rdi
   1400287b2:	ret    
   1400287b3:	int3   
   1400287b4:	int3   
   1400287b5:	int3   
   1400287b6:	int3   
   1400287b7:	int3   
   1400287b8:	int3   
   1400287b9:	int3   
   1400287ba:	int3   
   1400287bb:	int3   
   1400287bc:	int3   
   1400287bd:	int3   
   1400287be:	int3   
   1400287bf:	int3   
   1400287c0:	sub    rsp,0x28
   1400287c4:	mov    edx,DWORD PTR [rip+0x2b5a2]        # 0x140053d6c
   1400287ca:	call   0x14002af00
   1400287cf:	movsxd rdx,DWORD PTR [rip+0x2b6ba]        # 0x140053e90
   1400287d6:	lea    r8,[rip+0x2b5b3]        # 0x140053d90
   1400287dd:	mov    QWORD PTR [r8+rdx*8],rax
   1400287e1:	inc    edx
   1400287e3:	mov    QWORD PTR [rip+0x2caae],rax        # 0x140055298
   1400287ea:	mov    QWORD PTR [rip+0x2b57f],rax        # 0x140053d70
   1400287f1:	mov    BYTE PTR [rip+0x2b4dc],0x1        # 0x140053cd4
   1400287f8:	mov    DWORD PTR [rip+0x2b692],edx        # 0x140053e90
   1400287fe:	add    rsp,0x28
   140028802:	ret    
   140028803:	int3   
   140028804:	int3   
   140028805:	int3   
   140028806:	int3   
   140028807:	int3   
   140028808:	int3   
   140028809:	int3   
   14002880a:	int3   
   14002880b:	int3   
   14002880c:	int3   
   14002880d:	int3   
   14002880e:	int3   
   14002880f:	int3   
   140028810:	sub    rsp,0x28
   140028814:	mov    rdx,rcx
   140028817:	mov    rcx,QWORD PTR [rip+0x2b552]        # 0x140053d70
   14002881e:	call   0x14002a530
   140028823:	mov    BYTE PTR [rip+0x2b4aa],0x0        # 0x140053cd4
   14002882a:	add    rsp,0x28
   14002882e:	ret    
   14002882f:	int3   
   140028830:	mov    r11,rsp
   140028833:	sub    rsp,0x58
   140028837:	mov    QWORD PTR [r11+0x18],rbx
   14002883b:	mov    QWORD PTR [r11-0x10],rsi
   14002883f:	mov    rsi,QWORD PTR [rip+0x2b542]        # 0x140053d88
   140028846:	mov    rax,QWORD PTR [rsi+0x8]
   14002884a:	mov    QWORD PTR [r11-0x18],rdi
   14002884e:	mov    rbx,QWORD PTR [rax+0x10]
   140028852:	lea    rcx,[rax+0x10]
   140028856:	mov    QWORD PTR [rsp+0x68],rcx
   14002885b:	test   rbx,rbx
   14002885e:	je     0x1400289ce
   140028864:	mov    QWORD PTR [r11-0x8],rbp
   140028868:	mov    QWORD PTR [r11-0x20],r12
   14002886c:	mov    QWORD PTR [r11-0x28],r13
   140028870:	mov    QWORD PTR [r11-0x30],r14
   140028874:	mov    QWORD PTR [r11-0x38],r15
   140028878:	nop    DWORD PTR [rax+rax*1+0x0]
   140028880:	mov    r14,QWORD PTR [rax]
   140028883:	mov    r15,QWORD PTR [rax+0x8]
   140028887:	mov    r12,QWORD PTR [rbx+0x8]
   14002888b:	mov    eax,DWORD PTR [r14]
   14002888e:	and    al,0xf
   140028890:	cmp    al,0x1
   140028892:	jne    0x14002889d
   140028894:	xor    edi,edi
   140028896:	mov    QWORD PTR [rsp+0x60],rdi
   14002889b:	jmp    0x1400288b0
   14002889d:	mov    rcx,r14
   1400288a0:	mov    rdi,r14
   1400288a3:	mov    QWORD PTR [rsp+0x60],r14
   1400288a8:	call   0x14002a4e0
   1400288ad:	mov    r14,rax
   1400288b0:	mov    r13,QWORD PTR [rbx]
   1400288b3:	mov    eax,DWORD PTR [r13+0x0]
   1400288b7:	and    al,0xf
   1400288b9:	cmp    al,0x1
   1400288bb:	jne    0x1400288c1
   1400288bd:	xor    ebp,ebp
   1400288bf:	jmp    0x1400288cf
   1400288c1:	mov    rcx,r13
   1400288c4:	mov    rbp,r13
   1400288c7:	call   0x14002a4e0
   1400288cc:	mov    r13,rax
   1400288cf:	test   r14,r14
   1400288d2:	je     0x140028990
   1400288d8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400288e0:	mov    rsi,r13
   1400288e3:	test   r13,r13
   1400288e6:	je     0x140028974
   1400288ec:	nop    DWORD PTR [rax+0x0]
   1400288f0:	mov    rcx,QWORD PTR [rip+0x2b479]        # 0x140053d70
   1400288f7:	mov    r8,rsi
   1400288fa:	mov    rdx,r14
   1400288fd:	call   0x14002b540
   140028902:	mov    rdi,rax
   140028905:	test   rax,rax
   140028908:	je     0x140028957
   14002890a:	mov    rax,QWORD PTR [rax+0x10]
   14002890e:	mov    r8,r15
   140028911:	mov    rbx,r12
   140028914:	cmp    QWORD PTR [rdi+0x18],rax
   140028918:	je     0x140028925
   14002891a:	cmp    rax,r14
   14002891d:	jne    0x140028925
   14002891f:	mov    r8,r12
   140028922:	mov    rbx,r15
   140028925:	test   r8,r8
   140028928:	je     0x14002893d
   14002892a:	cmp    BYTE PTR [r8],0x0
   14002892e:	je     0x14002893d
   140028930:	mov    edx,0x1
   140028935:	mov    rcx,rdi
   140028938:	call   0x140027740
   14002893d:	test   rbx,rbx
   140028940:	je     0x140028957
   140028942:	cmp    BYTE PTR [rbx],0x0
   140028945:	je     0x140028957
   140028947:	mov    r8,rbx
   14002894a:	mov    edx,0x2
   14002894f:	mov    rcx,rdi
   140028952:	call   0x140027740
   140028957:	test   rbp,rbp
   14002895a:	je     0x14002896f
   14002895c:	mov    rdx,rsi
   14002895f:	mov    rcx,rbp
   140028962:	call   0x14002a5e0
   140028967:	mov    rsi,rax
   14002896a:	test   rax,rax
   14002896d:	jne    0x1400288f0
   14002896f:	mov    rdi,QWORD PTR [rsp+0x60]
   140028974:	test   rdi,rdi
   140028977:	je     0x140028990
   140028979:	mov    rdx,r14
   14002897c:	mov    rcx,rdi
   14002897f:	call   0x14002a5e0
   140028984:	mov    r14,rax
   140028987:	test   rax,rax
   14002898a:	jne    0x1400288e0
   140028990:	mov    rax,QWORD PTR [rsp+0x68]
   140028995:	mov    rax,QWORD PTR [rax]
   140028998:	mov    rbx,QWORD PTR [rax+0x10]
   14002899c:	lea    rcx,[rax+0x10]
   1400289a0:	mov    QWORD PTR [rsp+0x68],rcx
   1400289a5:	test   rbx,rbx
   1400289a8:	jne    0x140028880
   1400289ae:	mov    rsi,QWORD PTR [rip+0x2b3d3]        # 0x140053d88
   1400289b5:	mov    r15,QWORD PTR [rsp+0x20]
   1400289ba:	mov    r14,QWORD PTR [rsp+0x28]
   1400289bf:	mov    r13,QWORD PTR [rsp+0x30]
   1400289c4:	mov    r12,QWORD PTR [rsp+0x38]
   1400289c9:	mov    rbp,QWORD PTR [rsp+0x50]
   1400289ce:	mov    rbx,QWORD PTR [rsi+0x8]
   1400289d2:	test   rbx,rbx
   1400289d5:	je     0x140028a0c
   1400289d7:	nop    WORD PTR [rax+rax*1+0x0]
   1400289e0:	mov    rdi,rbx
   1400289e3:	mov    rbx,QWORD PTR [rbx+0x10]
   1400289e7:	mov    rax,QWORD PTR [rdi]
   1400289ea:	mov    edx,DWORD PTR [rax]
   1400289ec:	and    dl,0xf
   1400289ef:	cmp    dl,0x1
   1400289f2:	jne    0x1400289fe
   1400289f4:	mov    rcx,QWORD PTR [rdi+0x8]
   1400289f8:	call   QWORD PTR [rip+0x148a2]        # 0x14003d2a0
   1400289fe:	mov    rcx,rdi
   140028a01:	call   QWORD PTR [rip+0x14899]        # 0x14003d2a0
   140028a07:	test   rbx,rbx
   140028a0a:	jne    0x1400289e0
   140028a0c:	mov    rcx,QWORD PTR [rip+0x2b35d]        # 0x140053d70
   140028a13:	mov    rdi,QWORD PTR [rsp+0x40]
   140028a18:	mov    rbx,QWORD PTR [rsp+0x70]
   140028a1d:	cmp    rcx,QWORD PTR [rsi]
   140028a20:	mov    rsi,QWORD PTR [rsp+0x48]
   140028a25:	je     0x140028a2e
   140028a27:	call   QWORD PTR [rip+0x14673]        # 0x14003d0a0
   140028a2d:	int3   
   140028a2e:	call   0x14002af70
   140028a33:	mov    rcx,QWORD PTR [rip+0x2b34e]        # 0x140053d88
   140028a3a:	mov    BYTE PTR [rip+0x2b293],0x0        # 0x140053cd4
   140028a41:	movzx  eax,BYTE PTR [rcx+0x18]
   140028a45:	mov    BYTE PTR [rip+0x2b28a],al        # 0x140053cd5
   140028a4b:	mov    rax,QWORD PTR [rcx+0x20]
   140028a4f:	mov    QWORD PTR [rip+0x2b332],rax        # 0x140053d88
   140028a56:	call   QWORD PTR [rip+0x14844]        # 0x14003d2a0
   140028a5c:	mov    DWORD PTR [rip+0x2b302],0x3        # 0x140053d68
   140028a66:	add    rsp,0x58
   140028a6a:	ret    
   140028a6b:	int3   
   140028a6c:	int3   
   140028a6d:	int3   
   140028a6e:	int3   
   140028a6f:	int3   
   140028a70:	jmp    0x140028b10
   140028a75:	int3   
   140028a76:	int3   
   140028a77:	int3   
   140028a78:	int3   
   140028a79:	int3   
   140028a7a:	int3   
   140028a7b:	int3   
   140028a7c:	int3   
   140028a7d:	int3   
   140028a7e:	int3   
   140028a7f:	int3   
   140028a80:	mov    QWORD PTR [rsp+0x8],rbx
   140028a85:	push   rdi
   140028a86:	sub    rsp,0x20
   140028a8a:	mov    rdi,QWORD PTR [rip+0x2b2f7]        # 0x140053d88
   140028a91:	mov    edx,0x18
   140028a96:	mov    rbx,rcx
   140028a99:	lea    ecx,[rdx-0x17]
   140028a9c:	call   QWORD PTR [rip+0x145c6]        # 0x14003d068
   140028aa2:	mov    rdx,QWORD PTR [rdi+0x10]
   140028aa6:	mov    QWORD PTR [rdx+0x10],rax
   140028aaa:	mov    rax,QWORD PTR [rdi+0x10]
   140028aae:	mov    rdx,QWORD PTR [rax+0x10]
   140028ab2:	mov    QWORD PTR [rdi+0x10],rdx
   140028ab6:	movups xmm0,XMMWORD PTR [rbx]
   140028ab9:	mov    rbx,QWORD PTR [rsp+0x30]
   140028abe:	movups XMMWORD PTR [rdx],xmm0
   140028ac1:	mov    rax,QWORD PTR [rdi+0x10]
   140028ac5:	mov    QWORD PTR [rax+0x10],0x0
   140028acd:	add    rsp,0x20
   140028ad1:	pop    rdi
   140028ad2:	ret    
   140028ad3:	int3   
   140028ad4:	int3   
   140028ad5:	int3   
   140028ad6:	int3   
   140028ad7:	int3   
   140028ad8:	int3   
   140028ad9:	int3   
   140028ada:	int3   
   140028adb:	int3   
   140028adc:	int3   
   140028add:	int3   
   140028ade:	int3   
   140028adf:	int3   
   140028ae0:	rex push rbx
   140028ae2:	sub    rsp,0x20
   140028ae6:	mov    rbx,rcx
   140028ae9:	call   0x140028b10
   140028aee:	mov    QWORD PTR [rbx+0x8],0x0
   140028af6:	mov    QWORD PTR [rbx],rax
   140028af9:	mov    rax,rbx
   140028afc:	add    rsp,0x20
   140028b00:	pop    rbx
   140028b01:	ret    
   140028b02:	int3   
   140028b03:	int3   
   140028b04:	int3   
   140028b05:	int3   
   140028b06:	int3   
   140028b07:	int3   
   140028b08:	int3   
   140028b09:	int3   
   140028b0a:	int3   
   140028b0b:	int3   
   140028b0c:	int3   
   140028b0d:	int3   
   140028b0e:	int3   
   140028b0f:	int3   
   140028b10:	sub    rsp,0x28
   140028b14:	mov    eax,DWORD PTR [rip+0x2b376]        # 0x140053e90
   140028b1a:	test   eax,eax
   140028b1c:	jne    0x140028b41
   140028b1e:	call   QWORD PTR [rip+0x147ac]        # 0x14003d2d0
   140028b24:	lea    rdx,[rip+0x18615]        # 0x140041140
   140028b2b:	lea    rcx,[rax+0x60]
   140028b2f:	call   QWORD PTR [rip+0x1478b]        # 0x14003d2c0
   140028b35:	mov    ecx,0x1
   140028b3a:	call   QWORD PTR [rip+0x14538]        # 0x14003d078
   140028b40:	int3   
   140028b41:	dec    eax
   140028b43:	lea    rdx,[rip+0x2b246]        # 0x140053d90
   140028b4a:	mov    DWORD PTR [rip+0x2b340],eax        # 0x140053e90
   140028b50:	movsxd rcx,eax
   140028b53:	test   eax,eax
   140028b55:	jle    0x140028b6c
   140028b57:	mov    rax,QWORD PTR [rdx+rcx*8-0x8]
   140028b5c:	mov    QWORD PTR [rip+0x2b20d],rax        # 0x140053d70
   140028b63:	mov    rax,QWORD PTR [rdx+rcx*8]
   140028b67:	add    rsp,0x28
   140028b6b:	ret    
   140028b6c:	mov    QWORD PTR [rip+0x2b1f9],0x0        # 0x140053d70
   140028b77:	mov    rax,QWORD PTR [rdx+rcx*8]
   140028b7b:	add    rsp,0x28
   140028b7f:	ret    
   140028b80:	movsxd rdx,DWORD PTR [rip+0x2b309]        # 0x140053e90
   140028b87:	lea    r8,[rip+0x2b202]        # 0x140053d90
   140028b8e:	mov    QWORD PTR [rip+0x2b1db],rcx        # 0x140053d70
   140028b95:	mov    QWORD PTR [r8+rdx*8],rcx
   140028b99:	inc    edx
   140028b9b:	mov    DWORD PTR [rip+0x2b2ef],edx        # 0x140053e90
   140028ba1:	ret    
   140028ba2:	int3   
   140028ba3:	int3   
   140028ba4:	int3   
   140028ba5:	int3   
   140028ba6:	int3   
   140028ba7:	int3   
   140028ba8:	int3   
   140028ba9:	int3   
   140028baa:	int3   
   140028bab:	int3   
   140028bac:	int3   
   140028bad:	int3   
   140028bae:	int3   
   140028baf:	int3   
   140028bb0:	movsx  eax,WORD PTR [rip+0x2c6f9]        # 0x1400552b0
   140028bb7:	ret    
   140028bb8:	int3   
   140028bb9:	int3   
   140028bba:	int3   
   140028bbb:	int3   
   140028bbc:	int3   
   140028bbd:	int3   
   140028bbe:	int3   
   140028bbf:	int3   
   140028bc0:	sub    rsp,0x28
   140028bc4:	lea    rdx,[rip+0x8f5]        # 0x1400294c0
   140028bcb:	call   0x14002bfd0
   140028bd0:	call   0x140027a20
   140028bd5:	mov    rax,QWORD PTR [rip+0x2c6bc]        # 0x140055298
   140028bdc:	add    rsp,0x28
   140028be0:	ret    
   140028be1:	int3   
   140028be2:	int3   
   140028be3:	int3   
   140028be4:	int3   
   140028be5:	int3   
   140028be6:	int3   
   140028be7:	int3   
   140028be8:	int3   
   140028be9:	int3   
   140028bea:	int3   
   140028beb:	int3   
   140028bec:	int3   
   140028bed:	int3   
   140028bee:	int3   
   140028bef:	int3   
   140028bf0:	sub    rsp,0x28
   140028bf4:	mov    rdx,QWORD PTR [rip+0x14535]        # 0x14003d130
   140028bfb:	call   0x14002bfd0
   140028c00:	call   0x140027a20
   140028c05:	mov    rax,QWORD PTR [rip+0x2c68c]        # 0x140055298
   140028c0c:	add    rsp,0x28
   140028c10:	ret    
   140028c11:	int3   
   140028c12:	int3   
   140028c13:	int3   
   140028c14:	int3   
   140028c15:	int3   
   140028c16:	int3   
   140028c17:	int3   
   140028c18:	int3   
   140028c19:	int3   
   140028c1a:	int3   
   140028c1b:	int3   
   140028c1c:	int3   
   140028c1d:	int3   
   140028c1e:	int3   
   140028c1f:	int3   
   140028c20:	sub    rsp,0x28
   140028c24:	call   0x14002bfd0
   140028c29:	call   0x140027a20
   140028c2e:	mov    rax,QWORD PTR [rip+0x2c663]        # 0x140055298
   140028c35:	add    rsp,0x28
   140028c39:	ret    
   140028c3a:	int3   
   140028c3b:	int3   
   140028c3c:	int3   
   140028c3d:	int3   
   140028c3e:	int3   
   140028c3f:	int3   
   140028c40:	mov    QWORD PTR [rsp+0x18],rbp
   140028c45:	push   rsi
   140028c46:	push   rdi
   140028c47:	push   r13
   140028c49:	push   r14
   140028c4b:	push   r15
   140028c4d:	sub    rsp,0x20
   140028c51:	mov    r14,rcx
   140028c54:	mov    rdi,rcx
   140028c57:	movsx  ecx,BYTE PTR [rcx]
   140028c5a:	xor    ebp,ebp
   140028c5c:	mov    r15,rdx
   140028c5f:	mov    esi,ebp
   140028c61:	call   QWORD PTR [rip+0x14499]        # 0x14003d100
   140028c67:	lea    r13d,[rbp+0x1]
   140028c6b:	test   eax,eax
   140028c6d:	jne    0x140028c76
   140028c6f:	cmp    BYTE PTR [rdi],0x2e
   140028c72:	mov    eax,ebp
   140028c74:	jne    0x140028c79
   140028c76:	mov    eax,r13d
   140028c79:	cmp    BYTE PTR [r14],sil
   140028c7c:	je     0x140028d69
   140028c82:	mov    BYTE PTR [r15],0x22
   140028c86:	mov    QWORD PTR [rsp+0x50],rbx
   140028c8b:	lea    rbx,[r15+0x1]
   140028c8f:	cmp    BYTE PTR [r14],sil
   140028c92:	je     0x140028d23
   140028c98:	mov    QWORD PTR [rsp+0x58],r12
   140028c9d:	movsxd r12,eax
   140028ca0:	movzx  eax,BYTE PTR [rdi]
   140028ca3:	cmp    al,0x22
   140028ca5:	jne    0x140028cb2
   140028ca7:	mov    BYTE PTR [rbx],0x5c
   140028caa:	inc    rbx
   140028cad:	mov    esi,r13d
   140028cb0:	jmp    0x140028cee
   140028cb2:	movsx  ecx,al
   140028cb5:	call   QWORD PTR [rip+0x14415]        # 0x14003d0d0
   140028cbb:	test   eax,eax
   140028cbd:	jne    0x140028cd5
   140028cbf:	movzx  eax,BYTE PTR [rdi]
   140028cc2:	cmp    al,0x5f
   140028cc4:	je     0x140028cd5
   140028cc6:	movsx  eax,al
   140028cc9:	cmp    eax,0x80
   140028cce:	jae    0x140028cd5
   140028cd0:	mov    esi,r13d
   140028cd3:	jmp    0x140028cee
   140028cd5:	test   r12,r12
   140028cd8:	je     0x140028cee
   140028cda:	movsx  ecx,BYTE PTR [rdi]
   140028cdd:	call   QWORD PTR [rip+0x1441d]        # 0x14003d100
   140028ce3:	test   eax,eax
   140028ce5:	jne    0x140028cee
   140028ce7:	cmp    BYTE PTR [rdi],0x2e
   140028cea:	cmovne esi,r13d
   140028cee:	movzx  eax,BYTE PTR [rdi]
   140028cf1:	inc    ebp
   140028cf3:	inc    rbx
   140028cf6:	mov    BYTE PTR [rbx-0x1],al
   140028cf9:	mov    eax,ebp
   140028cfb:	inc    rdi
   140028cfe:	and    eax,0x8000007f
   140028d03:	jge    0x140028d0c
   140028d05:	dec    eax
   140028d07:	or     eax,0xffffff80
   140028d0a:	inc    eax
   140028d0c:	test   eax,eax
   140028d0e:	jne    0x140028d19
   140028d10:	mov    WORD PTR [rbx],0xa5c
   140028d15:	add    rbx,0x2
   140028d19:	cmp    BYTE PTR [rdi],0x0
   140028d1c:	jne    0x140028ca0
   140028d1e:	mov    r12,QWORD PTR [rsp+0x58]
   140028d23:	mov    WORD PTR [rbx],0x22
   140028d28:	mov    rbx,QWORD PTR [rsp+0x50]
   140028d2d:	test   esi,esi
   140028d2f:	je     0x140028d46
   140028d31:	mov    rax,r15
   140028d34:	mov    rbp,QWORD PTR [rsp+0x60]
   140028d39:	add    rsp,0x20
   140028d3d:	pop    r15
   140028d3f:	pop    r14
   140028d41:	pop    r13
   140028d43:	pop    rdi
   140028d44:	pop    rsi
   140028d45:	ret    
   140028d46:	mov    rcx,r14
   140028d49:	call   0x14002c060
   140028d4e:	test   eax,eax
   140028d50:	cmovns r14,r15
   140028d54:	mov    rax,r14
   140028d57:	mov    rbp,QWORD PTR [rsp+0x60]
   140028d5c:	add    rsp,0x20
   140028d60:	pop    r15
   140028d62:	pop    r14
   140028d64:	pop    r13
   140028d66:	pop    rdi
   140028d67:	pop    rsi
   140028d68:	ret    
   140028d69:	lea    rax,[rip+0x18464]        # 0x1400411d4
   140028d70:	mov    rbp,QWORD PTR [rsp+0x60]
   140028d75:	add    rsp,0x20
   140028d79:	pop    r15
   140028d7b:	pop    r14
   140028d7d:	pop    r13
   140028d7f:	pop    rdi
   140028d80:	pop    rsi
   140028d81:	ret    
   140028d82:	int3   
   140028d83:	int3   
   140028d84:	int3   
   140028d85:	int3   
   140028d86:	int3   
   140028d87:	int3   
   140028d88:	int3   
   140028d89:	int3   
   140028d8a:	int3   
   140028d8b:	int3   
   140028d8c:	int3   
   140028d8d:	int3   
   140028d8e:	int3   
   140028d8f:	int3   
   140028d90:	mov    QWORD PTR [rsp+0x18],rbx
   140028d95:	mov    QWORD PTR [rsp+0x20],rbp
   140028d9a:	mov    QWORD PTR [rsp+0x10],rdx
   140028d9f:	push   rsi
   140028da0:	push   rdi
   140028da1:	push   r12
   140028da3:	push   r13
   140028da5:	push   r14
   140028da7:	sub    rsp,0x20
   140028dab:	mov    esi,r9d
   140028dae:	mov    r9,rdx
   140028db1:	mov    rdx,QWORD PTR [r8+0x18]
   140028db5:	mov    rax,QWORD PTR [rdx+0x20]
   140028db9:	xor    r12d,r12d
   140028dbc:	mov    r14,r8
   140028dbf:	mov    r10,QWORD PTR [rax+0x18]
   140028dc3:	mov    rax,QWORD PTR [r8+0x8]
   140028dc7:	mov    rbp,rcx
   140028dca:	mov    r13,QWORD PTR [r10+0x10]
   140028dce:	test   rax,rax
   140028dd1:	je     0x140028ddd
   140028dd3:	mov    r8,QWORD PTR [rax+0x8]
   140028dd7:	mov    rdi,QWORD PTR [rax+0x10]
   140028ddb:	jmp    0x140028de7
   140028ddd:	lea    r8,[rip+0x14634]        # 0x14003d418
   140028de4:	mov    rdi,r8
   140028de7:	test   BYTE PTR [rcx],0x10
   140028dea:	mov    rdx,QWORD PTR [rdx+0x10]
   140028dee:	lea    rax,[rip+0x15b57]        # 0x14003e94c
   140028df5:	lea    rbx,[rip+0x15b4c]        # 0x14003e948
   140028dfc:	mov    rcx,r9
   140028dff:	cmove  rbx,rax
   140028e03:	call   0x14002a050
   140028e08:	mov    r8,rbx
   140028e0b:	mov    rbx,QWORD PTR [rsp+0x58]
   140028e10:	lea    rdx,[rip+0x183fd]        # 0x140041214
   140028e17:	mov    rcx,rbx
   140028e1a:	call   QWORD PTR [rip+0x144a0]        # 0x14003d2c0
   140028e20:	mov    rdx,QWORD PTR [r14+0x10]
   140028e24:	mov    r8,rdi
   140028e27:	mov    rdx,QWORD PTR [rdx+0x10]
   140028e2b:	mov    rcx,rbx
   140028e2e:	call   0x14002a050
   140028e33:	test   esi,esi
   140028e35:	je     0x140028f65
   140028e3b:	mov    rcx,QWORD PTR [r13+0x8]
   140028e3f:	mov    esi,r12d
   140028e42:	call   0x14002c770
   140028e47:	test   eax,eax
   140028e49:	jle    0x140028f65
   140028e4f:	mov    rdi,r12
   140028e52:	mov    QWORD PTR [rsp+0x50],r15
   140028e57:	nop    WORD PTR [rax+rax*1+0x0]
   140028e60:	mov    rax,QWORD PTR [r13+0x10]
   140028e64:	mov    rbx,QWORD PTR [rax+rdi*8]
   140028e68:	cmp    BYTE PTR [rbx+0x14],0x0
   140028e6c:	je     0x140028f45
   140028e72:	test   rdi,rdi
   140028e75:	jne    0x140028e84
   140028e77:	mov    eax,DWORD PTR [r14]
   140028e7a:	and    al,0xf0
   140028e7c:	cmp    al,0x20
   140028e7e:	jne    0x140028f45
   140028e84:	mov    rdx,QWORD PTR [rbx]
   140028e87:	mov    rcx,r14
   140028e8a:	call   0x1400275b0
   140028e8f:	mov    r15,rax
   140028e92:	cmp    rbp,QWORD PTR [rbp+0x38]
   140028e96:	jne    0x140028e9e
   140028e98:	mov    rax,QWORD PTR [rbx+0x8]
   140028e9c:	jmp    0x140028eae
   140028e9e:	mov    rcx,QWORD PTR [rbp+0x48]
   140028ea2:	mov    rdx,QWORD PTR [rbx]
   140028ea5:	mov    rcx,QWORD PTR [rcx+0x8]
   140028ea9:	call   0x1400275b0
   140028eae:	mov    r8,r15
   140028eb1:	sub    r8,rax
   140028eb4:	movzx  edx,BYTE PTR [rax]
   140028eb7:	movzx  ecx,BYTE PTR [rax+r8*1]
   140028ebc:	sub    edx,ecx
   140028ebe:	jne    0x140028ec7
   140028ec0:	inc    rax
   140028ec3:	test   ecx,ecx
   140028ec5:	jne    0x140028eb4
   140028ec7:	test   edx,edx
   140028ec9:	je     0x140028f45
   140028ecb:	mov    rcx,QWORD PTR [rsp+0x58]
   140028ed0:	mov    rbx,QWORD PTR [rbx]
   140028ed3:	lea    rax,[rip+0x18306]        # 0x1400411e0
   140028eda:	inc    r12d
   140028edd:	lea    rdx,[rip+0x1831c]        # 0x140041200
   140028ee4:	cmp    r12d,0x1
   140028ee8:	cmovg  rdx,rax
   140028eec:	call   QWORD PTR [rip+0x143ce]        # 0x14003d2c0
   140028ef2:	mov    rcx,rbx
   140028ef5:	call   0x140029420
   140028efa:	mov    rcx,rbx
   140028efd:	mov    rdx,rax
   140028f00:	call   0x140028c40
   140028f05:	mov    rbx,QWORD PTR [rsp+0x58]
   140028f0a:	lea    rdx,[rip+0x182f3]        # 0x140041204
   140028f11:	mov    rcx,rbx
   140028f14:	mov    r8,rax
   140028f17:	call   QWORD PTR [rip+0x143a3]        # 0x14003d2c0
   140028f1d:	mov    rcx,r15
   140028f20:	call   0x140029420
   140028f25:	mov    rcx,r15
   140028f28:	mov    rdx,rax
   140028f2b:	call   0x140028c40
   140028f30:	lea    rdx,[rip+0x15585]        # 0x14003e4bc
   140028f37:	mov    rcx,rbx
   140028f3a:	mov    r8,rax
   140028f3d:	call   QWORD PTR [rip+0x1437d]        # 0x14003d2c0
   140028f43:	jmp    0x140028f4a
   140028f45:	mov    rbx,QWORD PTR [rsp+0x58]
   140028f4a:	mov    rcx,QWORD PTR [r13+0x8]
   140028f4e:	inc    esi
   140028f50:	inc    rdi
   140028f53:	call   0x14002c770
   140028f58:	cmp    esi,eax
   140028f5a:	jl     0x140028e60
   140028f60:	mov    r15,QWORD PTR [rsp+0x50]
   140028f65:	lea    rax,[rip+0x18280]        # 0x1400411ec
   140028f6c:	test   r12d,r12d
   140028f6f:	lea    rdx,[rip+0x18292]        # 0x140041208
   140028f76:	cmovg  rdx,rax
   140028f7a:	mov    rcx,rbx
   140028f7d:	mov    rbx,QWORD PTR [rsp+0x60]
   140028f82:	mov    rbp,QWORD PTR [rsp+0x68]
   140028f87:	add    rsp,0x20
   140028f8b:	pop    r14
   140028f8d:	pop    r13
   140028f8f:	pop    r12
   140028f91:	pop    rdi
   140028f92:	pop    rsi
   140028f93:	rex.W jmp QWORD PTR [rip+0x14326]        # 0x14003d2c0
   140028f9a:	int3   
   140028f9b:	int3   
   140028f9c:	int3   
   140028f9d:	int3   
   140028f9e:	int3   
   140028f9f:	int3   
   140028fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140028fa5:	mov    QWORD PTR [rsp+0x10],rbp
   140028faa:	mov    QWORD PTR [rsp+0x18],rsi
   140028faf:	mov    QWORD PTR [rsp+0x20],rdi
   140028fb4:	push   r14
   140028fb6:	sub    rsp,0x30
   140028fba:	mov    eax,DWORD PTR [rcx]
   140028fbc:	mov    r14,rcx
   140028fbf:	lea    rcx,[rip+0x1829a]        # 0x140041260
   140028fc6:	mov    rbx,QWORD PTR [r14+0x10]
   140028fca:	sar    eax,0x4
   140028fcd:	lea    rsi,[rip+0x14444]        # 0x14003d418
   140028fd4:	test   al,0x2
   140028fd6:	lea    rdi,[rip+0x18293]        # 0x140041270
   140028fdd:	mov    rbp,rdx
   140028fe0:	cmovne rsi,rcx
   140028fe4:	test   al,0x1
   140028fe6:	lea    rax,[rip+0x1827b]        # 0x140041268
   140028fed:	mov    rcx,rbx
   140028ff0:	cmovne rdi,rax
   140028ff4:	call   0x140029420
   140028ff9:	mov    rcx,rbx
   140028ffc:	mov    rdx,rax
   140028fff:	call   0x140028c40
   140029004:	lea    rdx,[rip+0x1826d]        # 0x140041278
   14002900b:	mov    r9,rdi
   14002900e:	mov    r8,rsi
   140029011:	mov    rcx,rbp
   140029014:	mov    QWORD PTR [rsp+0x20],rax
   140029019:	call   QWORD PTR [rip+0x142a1]        # 0x14003d2c0
   14002901f:	mov    rcx,QWORD PTR [r14+0x18]
   140029023:	mov    rdx,rbp
   140029026:	mov    rcx,QWORD PTR [rcx+0x18]
   14002902a:	call   0x1400296a0
   14002902f:	mov    rcx,QWORD PTR [r14+0x18]
   140029033:	mov    rdx,rbp
   140029036:	mov    rcx,QWORD PTR [rcx+0x8]
   14002903a:	call   0x1400296a0
   14002903f:	mov    rcx,QWORD PTR [r14+0x18]
   140029043:	mov    rdx,rbp
   140029046:	mov    rcx,QWORD PTR [rcx+0x10]
   14002904a:	call   0x1400296a0
   14002904f:	mov    rcx,r14
   140029052:	call   0x140029560
   140029057:	xor    r9d,r9d
   14002905a:	xor    r8d,r8d
   14002905d:	mov    rdx,rbp
   140029060:	mov    rcx,r14
   140029063:	mov    rbx,rax
   140029066:	mov    QWORD PTR [rsp+0x20],rax
   14002906b:	call   0x1400298f0
   140029070:	lea    rdx,[rip+0x181e1]        # 0x140041258
   140029077:	mov    rcx,rbp
   14002907a:	call   QWORD PTR [rip+0x14240]        # 0x14003d2c0
   140029080:	mov    rcx,QWORD PTR [rbx]
   140029083:	call   0x14002c860
   140029088:	mov    rcx,QWORD PTR [rbx+0x20]
   14002908c:	call   0x14002c860
   140029091:	mov    rcx,QWORD PTR [rbx+0x8]
   140029095:	call   0x14002c860
   14002909a:	mov    rcx,QWORD PTR [rbx+0x18]
   14002909e:	call   0x14002c860
   1400290a3:	mov    rcx,QWORD PTR [rbx+0x10]
   1400290a7:	call   0x14002c860
   1400290ac:	mov    rcx,rbx
   1400290af:	call   QWORD PTR [rip+0x141eb]        # 0x14003d2a0
   1400290b5:	mov    rcx,rbp
   1400290b8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400290bd:	mov    rbp,QWORD PTR [rsp+0x48]
   1400290c2:	mov    rsi,QWORD PTR [rsp+0x50]
   1400290c7:	mov    rdi,QWORD PTR [rsp+0x58]
   1400290cc:	add    rsp,0x30
   1400290d0:	pop    r14
   1400290d2:	rex.W jmp QWORD PTR [rip+0x14097]        # 0x14003d170
   1400290d9:	int3   
   1400290da:	int3   
   1400290db:	int3   
   1400290dc:	int3   
   1400290dd:	int3   
   1400290de:	int3   
   1400290df:	int3   
   1400290e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400290e5:	push   rbx
   1400290e6:	push   rbp
   1400290e7:	push   rsi
   1400290e8:	push   rdi
   1400290e9:	push   r13
   1400290eb:	push   r14
   1400290ed:	push   r15
   1400290ef:	sub    rsp,0x30
   1400290f3:	mov    rax,QWORD PTR [r8+0x20]
   1400290f7:	mov    esi,DWORD PTR [rsp+0x90]
   1400290fe:	xor    r15d,r15d
   140029101:	mov    r10,QWORD PTR [rax+0x18]
   140029105:	mov    rbp,r8
   140029108:	mov    rdi,rdx
   14002910b:	mov    r14,QWORD PTR [r10+0x8]
   14002910f:	mov    rbx,rcx
   140029112:	mov    DWORD PTR [rsp+0x88],r15d
   14002911a:	mov    QWORD PTR [rsp+0x20],r14
   14002911f:	test   r9d,r9d
   140029122:	je     0x1400292f9
   140029128:	mov    rcx,QWORD PTR [r14+0x8]
   14002912c:	mov    r13d,r15d
   14002912f:	call   0x14002c770
   140029134:	test   eax,eax
   140029136:	jle    0x1400292f9
   14002913c:	mov    QWORD PTR [rsp+0x78],r12
   140029141:	mov    r12d,r15d
   140029144:	nop    DWORD PTR [rax+0x0]
   140029148:	nop    DWORD PTR [rax+rax*1+0x0]
   140029150:	mov    rax,QWORD PTR [r14+0x10]
   140029154:	mov    r14,QWORD PTR [r12+rax*1]
   140029158:	cmp    BYTE PTR [r14+0x14],0x0
   14002915d:	je     0x14002929e
   140029163:	mov    rdx,QWORD PTR [r14]
   140029166:	mov    rcx,rbp
   140029169:	call   0x1400275b0
   14002916e:	mov    QWORD PTR [rsp+0x80],rax
   140029176:	cmp    rbx,QWORD PTR [rbp+0x20]
   14002917a:	jne    0x140029182
   14002917c:	mov    rax,QWORD PTR [r14+0x8]
   140029180:	jmp    0x140029191
   140029182:	mov    rcx,QWORD PTR [rbx+0x48]
   140029186:	mov    rdx,QWORD PTR [r14]
   140029189:	mov    rcx,QWORD PTR [rcx]
   14002918c:	call   0x1400275b0
   140029191:	mov    r8,QWORD PTR [rsp+0x80]
   140029199:	sub    r8,rax
   14002919c:	nop    DWORD PTR [rax+0x0]
   1400291a0:	movzx  edx,BYTE PTR [rax]
   1400291a3:	movzx  ecx,BYTE PTR [rax+r8*1]
   1400291a8:	sub    edx,ecx
   1400291aa:	jne    0x1400291b3
   1400291ac:	inc    rax
   1400291af:	test   ecx,ecx
   1400291b1:	jne    0x1400291a0
   1400291b3:	test   edx,edx
   1400291b5:	je     0x14002929e
   1400291bb:	test   r15d,r15d
   1400291be:	jne    0x140029212
   1400291c0:	mov    ebx,esi
   1400291c2:	test   esi,esi
   1400291c4:	je     0x1400291e2
   1400291c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400291d0:	mov    rdx,rdi
   1400291d3:	mov    ecx,0x9
   1400291d8:	call   QWORD PTR [rip+0x13f9a]        # 0x14003d178
   1400291de:	dec    ebx
   1400291e0:	jne    0x1400291d0
   1400291e2:	mov    rbx,QWORD PTR [rbp+0x10]
   1400291e6:	mov    rcx,rbx
   1400291e9:	call   0x140029420
   1400291ee:	mov    rcx,rbx
   1400291f1:	mov    rdx,rax
   1400291f4:	call   0x140028c40
   1400291f9:	lea    rdx,[rip+0x152bc]        # 0x14003e4bc
   140029200:	mov    rcx,rdi
   140029203:	mov    r8,rax
   140029206:	call   QWORD PTR [rip+0x140b4]        # 0x14003d2c0
   14002920c:	mov    r15d,0x1
   140029212:	mov    eax,DWORD PTR [rsp+0x88]
   140029219:	mov    rbx,QWORD PTR [r14]
   14002921c:	lea    rdx,[rip+0x17fdd]        # 0x140041200
   140029223:	inc    eax
   140029225:	mov    rcx,rdi
   140029228:	cmp    eax,0x1
   14002922b:	mov    DWORD PTR [rsp+0x88],eax
   140029232:	lea    rax,[rip+0x17fa7]        # 0x1400411e0
   140029239:	cmovg  rdx,rax
   14002923d:	call   QWORD PTR [rip+0x1407d]        # 0x14003d2c0
   140029243:	mov    rcx,rbx
   140029246:	call   0x140029420
   14002924b:	mov    rcx,rbx
   14002924e:	mov    rdx,rax
   140029251:	call   0x140028c40
   140029256:	lea    rdx,[rip+0x17fa7]        # 0x140041204
   14002925d:	mov    rcx,rdi
   140029260:	mov    r8,rax
   140029263:	call   QWORD PTR [rip+0x14057]        # 0x14003d2c0
   140029269:	mov    rcx,QWORD PTR [rsp+0x80]
   140029271:	call   0x140029420
   140029276:	mov    rcx,QWORD PTR [rsp+0x80]
   14002927e:	mov    rdx,rax
   140029281:	call   0x140028c40
   140029286:	lea    rdx,[rip+0x1522f]        # 0x14003e4bc
   14002928d:	mov    rcx,rdi
   140029290:	mov    r8,rax
   140029293:	call   QWORD PTR [rip+0x14027]        # 0x14003d2c0
   140029299:	mov    rbx,QWORD PTR [rsp+0x70]
   14002929e:	mov    r14,QWORD PTR [rsp+0x20]
   1400292a3:	inc    r13d
   1400292a6:	add    r12,0x8
   1400292aa:	mov    rcx,QWORD PTR [r14+0x8]
   1400292ae:	call   0x14002c770
   1400292b3:	cmp    r13d,eax
   1400292b6:	jl     0x140029150
   1400292bc:	mov    r12,QWORD PTR [rsp+0x78]
   1400292c1:	test   r15d,r15d
   1400292c4:	je     0x1400292f9
   1400292c6:	mov    eax,DWORD PTR [rsp+0x88]
   1400292cd:	lea    rcx,[rip+0x17f18]        # 0x1400411ec
   1400292d4:	lea    rdx,[rip+0x17f2d]        # 0x140041208
   1400292db:	test   eax,eax
   1400292dd:	cmovg  rdx,rcx
   1400292e1:	mov    rcx,rdi
   1400292e4:	add    rsp,0x30
   1400292e8:	pop    r15
   1400292ea:	pop    r14
   1400292ec:	pop    r13
   1400292ee:	pop    rdi
   1400292ef:	pop    rsi
   1400292f0:	pop    rbp
   1400292f1:	pop    rbx
   1400292f2:	rex.W jmp QWORD PTR [rip+0x13fc7]        # 0x14003d2c0
   1400292f9:	mov    rdx,rbp
   1400292fc:	mov    rcx,rbx
   1400292ff:	call   0x14002b830
   140029304:	test   rax,rax
   140029307:	jne    0x14002935c
   140029309:	mov    rdx,rbp
   14002930c:	mov    rcx,rbx
   14002930f:	call   0x14002b7d0
   140029314:	test   rax,rax
   140029317:	jne    0x14002935c
   140029319:	test   esi,esi
   14002931b:	je     0x140029332
   14002931d:	nop    DWORD PTR [rax]
   140029320:	mov    rdx,rdi
   140029323:	mov    ecx,0x9
   140029328:	call   QWORD PTR [rip+0x13e4a]        # 0x14003d178
   14002932e:	dec    esi
   140029330:	jne    0x140029320
   140029332:	mov    rbx,QWORD PTR [rbp+0x10]
   140029336:	mov    rcx,rbx
   140029339:	call   0x140029420
   14002933e:	mov    rcx,rbx
   140029341:	mov    rdx,rax
   140029344:	call   0x140028c40
   140029349:	lea    rdx,[rip+0x17ebc]        # 0x14004120c
   140029350:	mov    rcx,rdi
   140029353:	mov    r8,rax
   140029356:	call   QWORD PTR [rip+0x13f64]        # 0x14003d2c0
   14002935c:	add    rsp,0x30
   140029360:	pop    r15
   140029362:	pop    r14
   140029364:	pop    r13
   140029366:	pop    rdi
   140029367:	pop    rsi
   140029368:	pop    rbp
   140029369:	pop    rbx
   14002936a:	ret    
   14002936b:	int3   
   14002936c:	int3   
   14002936d:	int3   
   14002936e:	int3   
   14002936f:	int3   
   140029370:	rex push rbx
   140029372:	sub    rsp,0x20
   140029376:	mov    rbx,rcx
   140029379:	call   0x140029420
   14002937e:	mov    rcx,rbx
   140029381:	mov    rdx,rax
   140029384:	add    rsp,0x20
   140029388:	pop    rbx
   140029389:	jmp    0x140028c40
   14002938e:	int3   
   14002938f:	int3   
   140029390:	mov    QWORD PTR [rip+0x2ab19],rdx        # 0x140053eb0
   140029397:	lea    rdx,[rip+0x12]        # 0x1400293b0
   14002939e:	xor    r8d,r8d
   1400293a1:	jmp    0x14002d610
   1400293a6:	int3   
   1400293a7:	int3   
   1400293a8:	int3   
   1400293a9:	int3   
   1400293aa:	int3   
   1400293ab:	int3   
   1400293ac:	int3   
   1400293ad:	int3   
   1400293ae:	int3   
   1400293af:	int3   
   1400293b0:	sub    rsp,0x28
   1400293b4:	mov    rax,QWORD PTR [rip+0x2aaf5]        # 0x140053eb0
   1400293bb:	mov    r8d,0x1
   1400293c1:	mov    rcx,rax
   1400293c4:	call   QWORD PTR [rax]
   1400293c6:	xor    eax,eax
   1400293c8:	add    rsp,0x28
   1400293cc:	ret    
   1400293cd:	int3   
   1400293ce:	int3   
   1400293cf:	int3   
   1400293d0:	rex push rbx
   1400293d2:	sub    rsp,0x20
   1400293d6:	mov    rbx,rcx
   1400293d9:	mov    rcx,QWORD PTR [rcx]
   1400293dc:	call   0x14002c860
   1400293e1:	mov    rcx,QWORD PTR [rbx+0x20]
   1400293e5:	call   0x14002c860
   1400293ea:	mov    rcx,QWORD PTR [rbx+0x8]
   1400293ee:	call   0x14002c860
   1400293f3:	mov    rcx,QWORD PTR [rbx+0x18]
   1400293f7:	call   0x14002c860
   1400293fc:	mov    rcx,QWORD PTR [rbx+0x10]
   140029400:	call   0x14002c860
   140029405:	mov    rcx,rbx
   140029408:	add    rsp,0x20
   14002940c:	pop    rbx
   14002940d:	rex.W jmp QWORD PTR [rip+0x13e8c]        # 0x14003d2a0
   140029414:	int3   
   140029415:	int3   
   140029416:	int3   
   140029417:	int3   
   140029418:	int3   
   140029419:	int3   
   14002941a:	int3   
   14002941b:	int3   
   14002941c:	int3   
   14002941d:	int3   
   14002941e:	int3   
   14002941f:	int3   
   140029420:	rex push rbx
   140029422:	sub    rsp,0x20
   140029426:	or     rdx,0xffffffffffffffff
   14002942a:	mov    rax,rdx
   14002942d:	nop    DWORD PTR [rax]
   140029430:	cmp    BYTE PTR [rcx+rax*1+0x1],0x0
   140029435:	lea    rax,[rax+0x1]
   140029439:	jne    0x140029430
   14002943b:	lea    rax,[rax*2+0x2]
   140029443:	mov    ebx,0x200
   140029448:	cmp    rax,rbx
   14002944b:	jbe    0x140029462
   14002944d:	nop    DWORD PTR [rax]
   140029450:	cmp    BYTE PTR [rcx+rdx*1+0x1],0x0
   140029455:	lea    rdx,[rdx+0x1]
   140029459:	jne    0x140029450
   14002945b:	lea    ebx,[rdx*2+0x2]
   140029462:	cmp    ebx,DWORD PTR [rip+0x2aa40]        # 0x140053ea8
   140029468:	jle    0x1400294ae
   14002946a:	mov    rcx,QWORD PTR [rip+0x2aa2f]        # 0x140053ea0
   140029471:	test   rcx,rcx
   140029474:	je     0x140029492
   140029476:	movsxd rdx,ebx
   140029479:	call   QWORD PTR [rip+0x13c29]        # 0x14003d0a8
   14002947f:	mov    DWORD PTR [rip+0x2aa23],ebx        # 0x140053ea8
   140029485:	mov    QWORD PTR [rip+0x2aa14],rax        # 0x140053ea0
   14002948c:	add    rsp,0x20
   140029490:	pop    rbx
   140029491:	ret    
   140029492:	movsxd rcx,ebx
   140029495:	call   QWORD PTR [rip+0x13ccd]        # 0x14003d168
   14002949b:	mov    DWORD PTR [rip+0x2aa07],ebx        # 0x140053ea8
   1400294a1:	mov    QWORD PTR [rip+0x2a9f8],rax        # 0x140053ea0
   1400294a8:	add    rsp,0x20
   1400294ac:	pop    rbx
   1400294ad:	ret    
   1400294ae:	mov    rax,QWORD PTR [rip+0x2a9eb]        # 0x140053ea0
   1400294b5:	add    rsp,0x20
   1400294b9:	pop    rbx
   1400294ba:	ret    
   1400294bb:	int3   
   1400294bc:	int3   
   1400294bd:	int3   
   1400294be:	int3   
   1400294bf:	int3   
   1400294c0:	mov    rax,QWORD PTR [rip+0x2a9d1]        # 0x140053e98
   1400294c7:	test   edx,edx
   1400294c9:	mov    r9,rcx
   1400294cc:	cmove  rax,r8
   1400294d0:	xor    r8d,r8d
   1400294d3:	dec    edx
   1400294d5:	mov    QWORD PTR [rip+0x2a9bc],rax        # 0x140053e98
   1400294dc:	mov    r10,rcx
   1400294df:	test   edx,edx
   1400294e1:	jle    0x140029549
   1400294e3:	movzx  ecx,BYTE PTR [rax]
   1400294e6:	test   cl,cl
   1400294e8:	je     0x14002952b
   1400294ea:	cmp    cl,0xa
   1400294ed:	je     0x14002950f
   1400294ef:	inc    rax
   1400294f2:	inc    r8d
   1400294f5:	mov    BYTE PTR [r9],cl
   1400294f8:	inc    r9
   1400294fb:	mov    QWORD PTR [rip+0x2a996],rax        # 0x140053e98
   140029502:	cmp    r8d,edx
   140029505:	jl     0x1400294e3
   140029507:	mov    BYTE PTR [r9],0x0
   14002950b:	mov    rax,r10
   14002950e:	ret    
   14002950f:	movzx  ecx,BYTE PTR [rax]
   140029512:	inc    r9
   140029515:	inc    rax
   140029518:	mov    BYTE PTR [r9-0x1],cl
   14002951c:	mov    QWORD PTR [rip+0x2a975],rax        # 0x140053e98
   140029523:	mov    rax,r10
   140029526:	mov    BYTE PTR [r9],0x0
   14002952a:	ret    
   14002952b:	test   r8d,r8d
   14002952e:	je     0x14002953f
   140029530:	mov    BYTE PTR [r9],0xa
   140029534:	inc    r9
   140029537:	mov    rax,r10
   14002953a:	mov    BYTE PTR [r9],0x0
   14002953e:	ret    
   14002953f:	xor    r10d,r10d
   140029542:	mov    QWORD PTR [rip+0x2a94f],r10        # 0x140053e98
   140029549:	mov    BYTE PTR [r9],0x0
   14002954d:	mov    rax,r10
   140029550:	ret    
   140029551:	int3   
   140029552:	int3   
   140029553:	int3   
   140029554:	int3   
   140029555:	int3   
   140029556:	int3   
   140029557:	int3   
   140029558:	int3   
   140029559:	int3   
   14002955a:	int3   
   14002955b:	int3   
   14002955c:	int3   
   14002955d:	int3   
   14002955e:	int3   
   14002955f:	int3   
   140029560:	mov    QWORD PTR [rsp+0x8],rbx
   140029565:	push   rdi
   140029566:	sub    rsp,0x20
   14002956a:	mov    edx,0x28
   14002956f:	mov    rbx,rcx
   140029572:	lea    ecx,[rdx-0x27]
   140029575:	call   QWORD PTR [rip+0x13aed]        # 0x14003d068
   14002957b:	mov    rdx,QWORD PTR [rip+0x284e6]        # 0x140051a68
   140029582:	lea    rcx,[rip+0x281b7]        # 0x140051740
   140029589:	mov    rdi,rax
   14002958c:	call   0x14002c900
   140029591:	mov    rcx,QWORD PTR [rbx+0x20]
   140029595:	lea    rdx,[rip+0xfffffffffffffe14]        # 0x1400293b0
   14002959c:	xor    r8d,r8d
   14002959f:	mov    QWORD PTR [rdi],rax
   1400295a2:	mov    QWORD PTR [rip+0x2a907],rax        # 0x140053eb0
   1400295a9:	call   0x14002d610
   1400295ae:	mov    rdx,QWORD PTR [rip+0x284b3]        # 0x140051a68
   1400295b5:	lea    rcx,[rip+0x28104]        # 0x1400516c0
   1400295bc:	call   0x14002c900
   1400295c1:	mov    rcx,QWORD PTR [rbx+0x30]
   1400295c5:	lea    rdx,[rip+0xfffffffffffffde4]        # 0x1400293b0
   1400295cc:	xor    r8d,r8d
   1400295cf:	mov    QWORD PTR [rdi+0x8],rax
   1400295d3:	mov    QWORD PTR [rip+0x2a8d6],rax        # 0x140053eb0
   1400295da:	call   0x14002d610
   1400295df:	mov    rdx,QWORD PTR [rip+0x28482]        # 0x140051a68
   1400295e6:	lea    rcx,[rip+0x28153]        # 0x140051740
   1400295ed:	call   0x14002c900
   1400295f2:	mov    rdx,QWORD PTR [rip+0x2846f]        # 0x140051a68
   1400295f9:	lea    rcx,[rip+0x28180]        # 0x140051780
   140029600:	mov    QWORD PTR [rdi+0x20],rax
   140029604:	call   0x14002c900
   140029609:	mov    rdx,QWORD PTR [rip+0x28458]        # 0x140051a68
   140029610:	lea    rcx,[rip+0x28129]        # 0x140051740
   140029617:	mov    QWORD PTR [rdi+0x18],rax
   14002961b:	call   0x14002c900
   140029620:	lea    rdx,[rip+0xfffffffffffffd89]        # 0x1400293b0
   140029627:	xor    r8d,r8d
   14002962a:	mov    QWORD PTR [rdi+0x10],rax
   14002962e:	mov    QWORD PTR [rip+0x2a87b],rax        # 0x140053eb0
   140029635:	mov    rax,QWORD PTR [rbx+0x40]
   140029639:	mov    rcx,QWORD PTR [rax+0x20]
   14002963d:	mov    rcx,QWORD PTR [rcx+0x20]
   140029641:	call   0x14002d610
   140029646:	mov    rbx,QWORD PTR [rsp+0x30]
   14002964b:	mov    rax,rdi
   14002964e:	add    rsp,0x20
   140029652:	pop    rdi
   140029653:	ret    
   140029654:	int3   
   140029655:	int3   
   140029656:	int3   
   140029657:	int3   
   140029658:	int3   
   140029659:	int3   
   14002965a:	int3   
   14002965b:	int3   
   14002965c:	int3   
   14002965d:	int3   
   14002965e:	int3   
   14002965f:	int3   
   140029660:	test   edx,edx
   140029662:	je     0x14002969c
   140029664:	mov    QWORD PTR [rsp+0x8],rbx
   140029669:	push   rdi
   14002966a:	sub    rsp,0x20
   14002966e:	mov    ebx,edx
   140029670:	mov    rdi,rcx
   140029673:	nop    DWORD PTR [rax+0x0]
   140029677:	nop    WORD PTR [rax+rax*1+0x0]
   140029680:	mov    rdx,rdi
   140029683:	mov    ecx,0x9
   140029688:	call   QWORD PTR [rip+0x13aea]        # 0x14003d178
   14002968e:	dec    ebx
   140029690:	jne    0x140029680
   140029692:	mov    rbx,QWORD PTR [rsp+0x30]
   140029697:	add    rsp,0x20
   14002969b:	pop    rdi
   14002969c:	ret    
   14002969d:	int3   
   14002969e:	int3   
   14002969f:	int3   
   1400296a0:	mov    QWORD PTR [rsp+0x20],rbx
   1400296a5:	push   rbp
   1400296a6:	push   rsi
   1400296a7:	push   r15
   1400296a9:	sub    rsp,0x20
   1400296ad:	mov    rsi,rcx
   1400296b0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400296b4:	xor    ebx,ebx
   1400296b6:	mov    r15,rdx
   1400296b9:	mov    ebp,ebx
   1400296bb:	call   0x14002c770
   1400296c0:	test   eax,eax
   1400296c2:	jle    0x14002978a
   1400296c8:	mov    QWORD PTR [rsp+0x48],r12
   1400296cd:	mov    QWORD PTR [rsp+0x50],r14
   1400296d2:	mov    r14d,ebx
   1400296d5:	mov    QWORD PTR [rsp+0x40],rdi
   1400296da:	nop    WORD PTR [rax+rax*1+0x0]
   1400296e0:	mov    rax,QWORD PTR [rsi+0x10]
   1400296e4:	mov    r12,QWORD PTR [r14+rax*1]
   1400296e8:	mov    rax,QWORD PTR [r12+0x8]
   1400296ed:	test   rax,rax
   1400296f0:	je     0x140029750
   1400296f2:	cmp    BYTE PTR [rax],0x0
   1400296f5:	je     0x140029750
   1400296f7:	mov    eax,ebx
   1400296f9:	inc    ebx
   1400296fb:	mov    rcx,r15
   1400296fe:	test   eax,eax
   140029700:	jne    0x140029714
   140029702:	mov    r8,QWORD PTR [rsi]
   140029705:	lea    rdx,[rip+0x17acc]        # 0x1400411d8
   14002970c:	call   QWORD PTR [rip+0x13bae]        # 0x14003d2c0
   140029712:	jmp    0x140029721
   140029714:	lea    rdx,[rip+0x17ac5]        # 0x1400411e0
   14002971b:	call   QWORD PTR [rip+0x13b9f]        # 0x14003d2c0
   140029721:	mov    rdi,QWORD PTR [r12+0x8]
   140029726:	mov    rcx,rdi
   140029729:	call   0x140029420
   14002972e:	mov    rcx,rdi
   140029731:	mov    rdx,rax
   140029734:	call   0x140028c40
   140029739:	mov    r8,QWORD PTR [r12]
   14002973d:	lea    rdx,[rip+0x17aa0]        # 0x1400411e4
   140029744:	mov    r9,rax
   140029747:	mov    rcx,r15
   14002974a:	call   QWORD PTR [rip+0x13b70]        # 0x14003d2c0
   140029750:	mov    rcx,QWORD PTR [rsi+0x8]
   140029754:	inc    ebp
   140029756:	add    r14,0x8
   14002975a:	call   0x14002c770
   14002975f:	cmp    ebp,eax
   140029761:	jl     0x1400296e0
   140029767:	mov    r14,QWORD PTR [rsp+0x50]
   14002976c:	mov    r12,QWORD PTR [rsp+0x48]
   140029771:	mov    rdi,QWORD PTR [rsp+0x40]
   140029776:	test   ebx,ebx
   140029778:	jle    0x14002978a
   14002977a:	lea    rdx,[rip+0x17a6b]        # 0x1400411ec
   140029781:	mov    rcx,r15
   140029784:	call   QWORD PTR [rip+0x13b36]        # 0x14003d2c0
   14002978a:	mov    rbx,QWORD PTR [rsp+0x58]
   14002978f:	add    rsp,0x20
   140029793:	pop    r15
   140029795:	pop    rsi
   140029796:	pop    rbp
   140029797:	ret    
   140029798:	int3   
   140029799:	int3   
   14002979a:	int3   
   14002979b:	int3   
   14002979c:	int3   
   14002979d:	int3   
   14002979e:	int3   
   14002979f:	int3   
   1400297a0:	mov    QWORD PTR [rsp+0x20],r9
   1400297a5:	mov    QWORD PTR [rsp+0x18],r8
   1400297aa:	push   rbx
   1400297ab:	push   rbp
   1400297ac:	push   rsi
   1400297ad:	push   r12
   1400297af:	push   r13
   1400297b1:	push   r15
   1400297b3:	sub    rsp,0x28
   1400297b7:	mov    r15,QWORD PTR [rsp+0x80]
   1400297bf:	mov    rsi,rcx
   1400297c2:	mov    rbx,r9
   1400297c5:	mov    rcx,QWORD PTR [r15+0x8]
   1400297c9:	mov    r12,r8
   1400297cc:	mov    r13d,edx
   1400297cf:	xor    ebp,ebp
   1400297d1:	call   0x14002c770
   1400297d6:	test   eax,eax
   1400297d8:	jle    0x1400298df
   1400297de:	mov    QWORD PTR [rsp+0x60],rdi
   1400297e3:	mov    QWORD PTR [rsp+0x20],r14
   1400297e8:	mov    r14d,ebp
   1400297eb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400297f0:	mov    rax,QWORD PTR [r15+0x10]
   1400297f4:	mov    rdi,QWORD PTR [r14+rax*1]
   1400297f8:	cmp    BYTE PTR [rdi+0x14],0x0
   1400297fc:	je     0x1400298be
   140029802:	mov    edx,DWORD PTR [rdi+0x10]
   140029805:	mov    rcx,r12
   140029808:	call   0x140027720
   14002980d:	mov    r12,rax
   140029810:	test   rbx,rbx
   140029813:	je     0x140029825
   140029815:	mov    edx,DWORD PTR [rdi+0x10]
   140029818:	mov    rcx,rbx
   14002981b:	call   0x140027720
   140029820:	mov    r8,rax
   140029823:	jmp    0x140029829
   140029825:	mov    r8,QWORD PTR [rdi+0x8]
   140029829:	mov    rax,r12
   14002982c:	sub    r8,r12
   14002982f:	nop
   140029830:	movzx  edx,BYTE PTR [rax]
   140029833:	movzx  ecx,BYTE PTR [rax+r8*1]
   140029838:	sub    edx,ecx
   14002983a:	jne    0x140029843
   14002983c:	inc    rax
   14002983f:	test   ecx,ecx
   140029841:	jne    0x140029830
   140029843:	test   edx,edx
   140029845:	je     0x1400298b9
   140029847:	mov    ebx,r13d
   14002984a:	test   r13d,r13d
   14002984d:	je     0x140029862
   14002984f:	nop
   140029850:	mov    rdx,rsi
   140029853:	mov    ecx,0x9
   140029858:	call   QWORD PTR [rip+0x1391a]        # 0x14003d178
   14002985e:	dec    ebx
   140029860:	jne    0x140029850
   140029862:	mov    rbx,QWORD PTR [rdi]
   140029865:	mov    rcx,rbx
   140029868:	call   0x140029420
   14002986d:	mov    rcx,rbx
   140029870:	mov    rdx,rax
   140029873:	call   0x140028c40
   140029878:	mov    r8,QWORD PTR [r15]
   14002987b:	lea    rdx,[rip+0x1796e]        # 0x1400411f0
   140029882:	mov    r9,rax
   140029885:	mov    rcx,rsi
   140029888:	call   QWORD PTR [rip+0x13a32]        # 0x14003d2c0
   14002988e:	mov    rcx,r12
   140029891:	call   0x140029420
   140029896:	mov    rcx,r12
   140029899:	mov    rdx,rax
   14002989c:	call   0x140028c40
   1400298a1:	lea    rdx,[rip+0x17950]        # 0x1400411f8
   1400298a8:	mov    rcx,rsi
   1400298ab:	mov    r8,rax
   1400298ae:	call   QWORD PTR [rip+0x13a0c]        # 0x14003d2c0
   1400298b4:	mov    rbx,QWORD PTR [rsp+0x78]
   1400298b9:	mov    r12,QWORD PTR [rsp+0x70]
   1400298be:	mov    rcx,QWORD PTR [r15+0x8]
   1400298c2:	inc    ebp
   1400298c4:	add    r14,0x8
   1400298c8:	call   0x14002c770
   1400298cd:	cmp    ebp,eax
   1400298cf:	jl     0x1400297f0
   1400298d5:	mov    r14,QWORD PTR [rsp+0x20]
   1400298da:	mov    rdi,QWORD PTR [rsp+0x60]
   1400298df:	add    rsp,0x28
   1400298e3:	pop    r15
   1400298e5:	pop    r13
   1400298e7:	pop    r12
   1400298e9:	pop    rsi
   1400298ea:	pop    rbp
   1400298eb:	pop    rbx
   1400298ec:	ret    
   1400298ed:	int3   
   1400298ee:	int3   
   1400298ef:	int3   
   1400298f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400298f5:	mov    QWORD PTR [rsp+0x18],r8
   1400298fa:	push   rbp
   1400298fb:	push   rsi
   1400298fc:	push   rdi
   1400298fd:	sub    rsp,0x60
   140029901:	mov    edi,r9d
   140029904:	mov    rbx,rdx
   140029907:	mov    rbp,rcx
   14002990a:	test   r9d,r9d
   14002990d:	je     0x140029a8a
   140029913:	mov    esi,r9d
   140029916:	data16 nop WORD PTR [rax+rax*1+0x0]
   140029920:	mov    rdx,rbx
   140029923:	mov    ecx,0x9
   140029928:	call   QWORD PTR [rip+0x1384a]        # 0x14003d178
   14002992e:	dec    esi
   140029930:	jne    0x140029920
   140029932:	mov    rsi,QWORD PTR [rsp+0xa0]
   14002993a:	mov    rdx,QWORD PTR [rbp+0x40]
   14002993e:	inc    edi
   140029940:	mov    rax,QWORD PTR [rsi+0x10]
   140029944:	mov    r8d,0x4
   14002994a:	mov    DWORD PTR [rsp+0x98],edi
   140029951:	mov    rcx,rax
   140029954:	call   QWORD PTR [rax]
   140029956:	test   rax,rax
   140029959:	je     0x140029a50
   14002995f:	mov    rcx,QWORD PTR [rbp+0x10]
   140029963:	lea    rdx,[rip+0x178b6]        # 0x140041220
   14002996a:	mov    r8d,0xa
   140029970:	call   QWORD PTR [rip+0x136ea]        # 0x14003d060
   140029976:	test   eax,eax
   140029978:	je     0x1400299ad
   14002997a:	mov    rdi,QWORD PTR [rbp+0x10]
   14002997e:	mov    rcx,rdi
   140029981:	call   0x140029420
   140029986:	mov    rcx,rdi
   140029989:	mov    rdx,rax
   14002998c:	call   0x140028c40
   140029991:	lea    rdx,[rip+0x17898]        # 0x140041230
   140029998:	mov    rcx,rbx
   14002999b:	mov    r8,rax
   14002999e:	call   QWORD PTR [rip+0x1391c]        # 0x14003d2c0
   1400299a4:	mov    edi,DWORD PTR [rsp+0x98]
   1400299ab:	jmp    0x1400299bd
   1400299ad:	lea    rdx,[rip+0x1788c]        # 0x140041240
   1400299b4:	mov    rcx,rbx
   1400299b7:	call   QWORD PTR [rip+0x13903]        # 0x14003d2c0
   1400299bd:	mov    rax,QWORD PTR [rbp+0x18]
   1400299c1:	mov    r9,QWORD PTR [rsp+0x90]
   1400299c9:	mov    r8,rbp
   1400299cc:	mov    rcx,QWORD PTR [rax+0x18]
   1400299d0:	mov    edx,edi
   1400299d2:	mov    QWORD PTR [rsp+0x20],rcx
   1400299d7:	mov    rcx,rbx
   1400299da:	call   0x1400297a0
   1400299df:	mov    rax,QWORD PTR [rbp+0x18]
   1400299e3:	mov    r8,QWORD PTR [rbp+0x48]
   1400299e7:	mov    rax,QWORD PTR [rax+0x8]
   1400299eb:	mov    r9,QWORD PTR [rsp+0x90]
   1400299f3:	mov    r8,QWORD PTR [r8]
   1400299f6:	mov    r9,QWORD PTR [r9+0x48]
   1400299fa:	mov    edx,edi
   1400299fc:	mov    rcx,rbx
   1400299ff:	mov    r9,QWORD PTR [r9]
   140029a02:	mov    QWORD PTR [rsp+0x20],rax
   140029a07:	call   0x1400297a0
   140029a0c:	mov    rcx,QWORD PTR [rsp+0x90]
   140029a14:	mov    rax,QWORD PTR [rbp+0x18]
   140029a18:	mov    r9,QWORD PTR [rcx+0x48]
   140029a1c:	mov    r8,QWORD PTR [rbp+0x48]
   140029a20:	mov    rax,QWORD PTR [rax+0x10]
   140029a24:	mov    r9,QWORD PTR [r9+0x8]
   140029a28:	mov    r8,QWORD PTR [r8+0x8]
   140029a2c:	mov    edx,edi
   140029a2e:	mov    rcx,rbx
   140029a31:	mov    QWORD PTR [rsp+0x20],rax
   140029a36:	call   0x1400297a0
   140029a3b:	mov    rax,QWORD PTR [rsi+0x10]
   140029a3f:	mov    rdx,QWORD PTR [rbp+0x40]
   140029a43:	mov    rcx,rax
   140029a46:	mov    r8d,0x2
   140029a4c:	call   QWORD PTR [rax]
   140029a4e:	jmp    0x140029abb
   140029a50:	mov    rdi,QWORD PTR [rbp+0x10]
   140029a54:	mov    rcx,rdi
   140029a57:	call   0x140029420
   140029a5c:	mov    rcx,rdi
   140029a5f:	mov    rdx,rax
   140029a62:	call   0x140028c40
   140029a67:	lea    rdx,[rip+0x177da]        # 0x140041248
   140029a6e:	mov    rcx,rbx
   140029a71:	mov    r8,rax
   140029a74:	mov    rbx,QWORD PTR [rsp+0x80]
   140029a7c:	add    rsp,0x60
   140029a80:	pop    rdi
   140029a81:	pop    rsi
   140029a82:	pop    rbp
   140029a83:	rex.W jmp QWORD PTR [rip+0x13836]        # 0x14003d2c0
   140029a8a:	mov    rax,QWORD PTR [rcx+0x18]
   140029a8e:	mov    edi,0x1
   140029a93:	xor    r9d,r9d
   140029a96:	mov    rcx,QWORD PTR [rax+0x18]
   140029a9a:	mov    r8,rbp
   140029a9d:	mov    edx,edi
   140029a9f:	mov    QWORD PTR [rsp+0x20],rcx
   140029aa4:	mov    rcx,rbx
   140029aa7:	mov    DWORD PTR [rsp+0x98],edi
   140029aae:	call   0x1400297a0
   140029ab3:	mov    rsi,QWORD PTR [rsp+0xa0]
   140029abb:	mov    rax,QWORD PTR [rsi+0x20]
   140029abf:	mov    rdx,QWORD PTR [rip+0x27fa2]        # 0x140051a68
   140029ac6:	lea    rcx,[rip+0x27c33]        # 0x140051700
   140029acd:	mov    QWORD PTR [rsp+0x40],rax
   140029ad2:	mov    rax,QWORD PTR [rsi+0x18]
   140029ad6:	mov    QWORD PTR [rsp+0x48],rax
   140029adb:	mov    rax,QWORD PTR [rbp+0x40]
   140029adf:	mov    rax,QWORD PTR [rax+0x20]
   140029ae3:	mov    QWORD PTR [rsp+0x38],rax
   140029ae8:	call   0x14002c900
   140029aed:	lea    rcx,[rip+0x27c8c]        # 0x140051780
   140029af4:	mov    QWORD PTR [rsi+0x20],rax
   140029af8:	mov    rdx,QWORD PTR [rip+0x27f69]        # 0x140051a68
   140029aff:	call   0x14002c900
   140029b04:	mov    rcx,QWORD PTR [rsp+0x38]
   140029b09:	mov    QWORD PTR [rsi+0x18],rax
   140029b0d:	mov    rdx,QWORD PTR [rbp+0x40]
   140029b11:	call   0x14002b830
   140029b16:	mov    rsi,rax
   140029b19:	test   rax,rax
   140029b1c:	je     0x140029b5c
   140029b1e:	xchg   ax,ax
   140029b20:	mov    rcx,QWORD PTR [rsi+0x10]
   140029b24:	call   0x14002b080
   140029b29:	mov    rcx,QWORD PTR [rsp+0xa0]
   140029b31:	mov    r9d,edi
   140029b34:	mov    QWORD PTR [rsp+0x20],rcx
   140029b39:	mov    r8,rbp
   140029b3c:	mov    rdx,rbx
   140029b3f:	mov    rcx,rax
   140029b42:	call   0x1400298f0
   140029b47:	mov    rcx,QWORD PTR [rsp+0x38]
   140029b4c:	mov    rdx,rsi
   140029b4f:	call   0x14002b9e0
   140029b54:	mov    rsi,rax
   140029b57:	test   rax,rax
   140029b5a:	jne    0x140029b20
   140029b5c:	mov    rcx,rbp
   140029b5f:	call   0x14002a4e0
   140029b64:	mov    rsi,rax
   140029b67:	test   rax,rax
   140029b6a:	je     0x140029c96
   140029b70:	jmp    0x140029b87
   140029b72:	nop    DWORD PTR [rax+0x0]
   140029b76:	data16 nop WORD PTR [rax+rax*1+0x0]
   140029b80:	mov    edi,DWORD PTR [rsp+0x98]
   140029b87:	mov    rax,QWORD PTR [rsp+0xa0]
   140029b8f:	mov    r8d,0x4
   140029b95:	mov    rdx,rsi
   140029b98:	mov    r9,QWORD PTR [rax]
   140029b9b:	mov    rcx,r9
   140029b9e:	call   QWORD PTR [r9]
   140029ba1:	test   rax,rax
   140029ba4:	je     0x140029bdc
   140029ba6:	mov    r9d,0x1
   140029bac:	mov    r8,rsi
   140029baf:	mov    rdx,rbx
   140029bb2:	mov    rcx,rbp
   140029bb5:	mov    DWORD PTR [rsp+0x20],edi
   140029bb9:	call   0x1400290e0
   140029bbe:	mov    rcx,QWORD PTR [rsp+0xa0]
   140029bc6:	mov    r8d,0x2
   140029bcc:	mov    rax,QWORD PTR [rcx]
   140029bcf:	mov    rdx,rsi
   140029bd2:	mov    rcx,rax
   140029bd5:	call   QWORD PTR [rax]
   140029bd7:	jmp    0x140029c6c
   140029bdc:	mov    rax,QWORD PTR [rsp+0xa0]
   140029be4:	mov    r8d,0x4
   140029bea:	mov    rdx,rsi
   140029bed:	mov    rax,QWORD PTR [rax+0x20]
   140029bf1:	mov    rcx,rax
   140029bf4:	call   QWORD PTR [rax]
   140029bf6:	test   rax,rax
   140029bf9:	jne    0x140029c6c
   140029bfb:	mov    rdx,rsi
   140029bfe:	mov    rcx,rbp
   140029c01:	call   0x14002b830
   140029c06:	test   rax,rax
   140029c09:	jne    0x140029c6c
   140029c0b:	mov    rdx,rsi
   140029c0e:	mov    rcx,rbp
   140029c11:	call   0x14002b7d0
   140029c16:	test   rax,rax
   140029c19:	jne    0x140029c6c
   140029c1b:	cmp    DWORD PTR [rsp+0x98],eax
   140029c22:	je     0x140029c42
   140029c24:	nop    DWORD PTR [rax+0x0]
   140029c28:	nop    DWORD PTR [rax+rax*1+0x0]
   140029c30:	mov    rdx,rbx
   140029c33:	mov    ecx,0x9
   140029c38:	call   QWORD PTR [rip+0x1353a]        # 0x14003d178
   140029c3e:	dec    edi
   140029c40:	jne    0x140029c30
   140029c42:	mov    rdi,QWORD PTR [rsi+0x10]
   140029c46:	mov    rcx,rdi
   140029c49:	call   0x140029420
   140029c4e:	mov    rcx,rdi
   140029c51:	mov    rdx,rax
   140029c54:	call   0x140028c40
   140029c59:	lea    rdx,[rip+0x175ac]        # 0x14004120c
   140029c60:	mov    rcx,rbx
   140029c63:	mov    r8,rax
   140029c66:	call   QWORD PTR [rip+0x13654]        # 0x14003d2c0
   140029c6c:	mov    rax,QWORD PTR [rsp+0x40]
   140029c71:	mov    r8d,0x1
   140029c77:	mov    rdx,rsi
   140029c7a:	mov    rcx,rax
   140029c7d:	call   QWORD PTR [rax]
   140029c7f:	mov    rdx,rsi
   140029c82:	mov    rcx,rbp
   140029c85:	call   0x14002a5e0
   140029c8a:	mov    rsi,rax
   140029c8d:	test   rax,rax
   140029c90:	jne    0x140029b80
   140029c96:	mov    rcx,QWORD PTR [rbp+0x30]
   140029c9a:	lea    rdx,[rip+0x27a1f]        # 0x1400516c0
   140029ca1:	xor    r8d,r8d
   140029ca4:	call   0x14002d3c0
   140029ca9:	mov    rax,QWORD PTR [rbp+0x30]
   140029cad:	xor    edx,edx
   140029caf:	mov    rcx,rax
   140029cb2:	mov    r8d,0x80
   140029cb8:	call   QWORD PTR [rax]
   140029cba:	mov    rsi,rax
   140029cbd:	mov    QWORD PTR [rsp+0x30],rax
   140029cc2:	test   rax,rax
   140029cc5:	je     0x140029f16
   140029ccb:	mov    rdi,QWORD PTR [rsp+0xa0]
   140029cd3:	nop    DWORD PTR [rax+0x0]
   140029cd7:	nop    WORD PTR [rax+rax*1+0x0]
   140029ce0:	mov    rax,QWORD PTR [rdi+0x8]
   140029ce4:	mov    r8d,0x4
   140029cea:	mov    rdx,rsi
   140029ced:	mov    rcx,rax
   140029cf0:	call   QWORD PTR [rax]
   140029cf2:	test   rax,rax
   140029cf5:	je     0x140029d5a
   140029cf7:	mov    esi,DWORD PTR [rsp+0x98]
   140029cfe:	mov    edi,esi
   140029d00:	test   esi,esi
   140029d02:	je     0x140029d22
   140029d04:	nop    DWORD PTR [rax+0x0]
   140029d08:	nop    DWORD PTR [rax+rax*1+0x0]
   140029d10:	mov    rdx,rbx
   140029d13:	mov    ecx,0x9
   140029d18:	call   QWORD PTR [rip+0x1345a]        # 0x14003d178
   140029d1e:	dec    edi
   140029d20:	jne    0x140029d10
   140029d22:	mov    rsi,QWORD PTR [rsp+0x30]
   140029d27:	mov    r9d,0x1
   140029d2d:	mov    rdx,rbx
   140029d30:	mov    r8,rsi
   140029d33:	mov    rcx,rbp
   140029d36:	call   0x140028d90
   140029d3b:	mov    rdi,QWORD PTR [rsp+0xa0]
   140029d43:	mov    r8d,0x2
   140029d49:	mov    rax,QWORD PTR [rdi+0x8]
   140029d4d:	mov    rdx,rsi
   140029d50:	mov    rcx,rax
   140029d53:	call   QWORD PTR [rax]
   140029d55:	jmp    0x140029ee0
   140029d5a:	mov    rax,QWORD PTR [rdi+0x18]
   140029d5e:	mov    r8d,0x4
   140029d64:	mov    rdx,rsi
   140029d67:	mov    rcx,rax
   140029d6a:	call   QWORD PTR [rax]
   140029d6c:	test   rax,rax
   140029d6f:	jne    0x140029ee0
   140029d75:	mov    eax,DWORD PTR [rsp+0x98]
   140029d7c:	mov    edi,eax
   140029d7e:	test   eax,eax
   140029d80:	je     0x140029d94
   140029d82:	mov    rdx,rbx
   140029d85:	mov    ecx,0x9
   140029d8a:	call   QWORD PTR [rip+0x133e8]        # 0x14003d178
   140029d90:	dec    edi
   140029d92:	jne    0x140029d82
   140029d94:	mov    rax,QWORD PTR [rsi+0x8]
   140029d98:	test   rax,rax
   140029d9b:	je     0x140029da7
   140029d9d:	mov    rsi,QWORD PTR [rax+0x8]
   140029da1:	mov    rcx,QWORD PTR [rax+0x10]
   140029da5:	jmp    0x140029db5
   140029da7:	lea    rcx,[rip+0x1366a]        # 0x14003d418
   140029dae:	lea    rsi,[rip+0x13663]        # 0x14003d418
   140029db5:	test   BYTE PTR [rbp+0x0],0x10
   140029db9:	mov    QWORD PTR [rsp+0x38],rcx
   140029dbe:	lea    rcx,[rip+0x14b87]        # 0x14003e94c
   140029dc5:	lea    rax,[rip+0x14b7c]        # 0x14003e948
   140029dcc:	cmove  rax,rcx
   140029dd0:	mov    QWORD PTR [rsp+0x50],rax
   140029dd5:	mov    rax,QWORD PTR [rsp+0x30]
   140029dda:	mov    rax,QWORD PTR [rax+0x18]
   140029dde:	mov    rdi,QWORD PTR [rax+0x10]
   140029de2:	mov    rcx,rdi
   140029de5:	call   0x140029420
   140029dea:	mov    rcx,rdi
   140029ded:	mov    rdx,rax
   140029df0:	call   0x140028c40
   140029df5:	lea    rdx,[rip+0x146c0]        # 0x14003e4bc
   140029dfc:	mov    rcx,rbx
   140029dff:	mov    r8,rax
   140029e02:	call   QWORD PTR [rip+0x134b8]        # 0x14003d2c0
   140029e08:	test   rsi,rsi
   140029e0b:	je     0x140029e3e
   140029e0d:	cmp    BYTE PTR [rsi],0x0
   140029e10:	je     0x140029e3e
   140029e12:	lea    rcx,[rsi+0x1]
   140029e16:	call   0x140029420
   140029e1b:	lea    rcx,[rsi+0x1]
   140029e1f:	mov    rdx,rax
   140029e22:	call   0x140028c40
   140029e27:	movsx  r8d,BYTE PTR [rsi]
   140029e2b:	lea    rdx,[rip+0x1468e]        # 0x14003e4c0
   140029e32:	mov    r9,rax
   140029e35:	mov    rcx,rbx
   140029e38:	call   QWORD PTR [rip+0x13482]        # 0x14003d2c0
   140029e3e:	mov    r8,QWORD PTR [rsp+0x50]
   140029e43:	lea    rdx,[rip+0x173ca]        # 0x140041214
   140029e4a:	mov    rcx,rbx
   140029e4d:	call   QWORD PTR [rip+0x1346d]        # 0x14003d2c0
   140029e53:	mov    rsi,QWORD PTR [rsp+0x30]
   140029e58:	mov    rax,QWORD PTR [rsi+0x10]
   140029e5c:	mov    rdi,QWORD PTR [rax+0x10]
   140029e60:	mov    rcx,rdi
   140029e63:	call   0x140029420
   140029e68:	mov    rcx,rdi
   140029e6b:	mov    rdx,rax
   140029e6e:	call   0x140028c40
   140029e73:	lea    rdx,[rip+0x14642]        # 0x14003e4bc
   140029e7a:	mov    rcx,rbx
   140029e7d:	mov    r8,rax
   140029e80:	call   QWORD PTR [rip+0x1343a]        # 0x14003d2c0
   140029e86:	mov    rax,QWORD PTR [rsp+0x38]
   140029e8b:	test   rax,rax
   140029e8e:	je     0x140029ec8
   140029e90:	cmp    BYTE PTR [rax],0x0
   140029e93:	je     0x140029ec8
   140029e95:	lea    rdi,[rax+0x1]
   140029e99:	mov    rcx,rdi
   140029e9c:	call   0x140029420
   140029ea1:	mov    rcx,rdi
   140029ea4:	mov    rdx,rax
   140029ea7:	call   0x140028c40
   140029eac:	mov    rcx,QWORD PTR [rsp+0x38]
   140029eb1:	lea    rdx,[rip+0x14608]        # 0x14003e4c0
   140029eb8:	movsx  r8d,BYTE PTR [rcx]
   140029ebc:	mov    r9,rax
   140029ebf:	mov    rcx,rbx
   140029ec2:	call   QWORD PTR [rip+0x133f8]        # 0x14003d2c0
   140029ec8:	lea    rdx,[rip+0x17339]        # 0x140041208
   140029ecf:	mov    rcx,rbx
   140029ed2:	call   QWORD PTR [rip+0x133e8]        # 0x14003d2c0
   140029ed8:	mov    rdi,QWORD PTR [rsp+0xa0]
   140029ee0:	mov    rax,QWORD PTR [rsp+0x48]
   140029ee5:	mov    r8d,0x1
   140029eeb:	mov    rdx,rsi
   140029eee:	mov    rcx,rax
   140029ef1:	call   QWORD PTR [rax]
   140029ef3:	mov    rax,QWORD PTR [rbp+0x30]
   140029ef7:	mov    r8d,0x8
   140029efd:	mov    rcx,rax
   140029f00:	mov    rdx,rsi
   140029f03:	call   QWORD PTR [rax]
   140029f05:	mov    rsi,rax
   140029f08:	mov    QWORD PTR [rsp+0x30],rax
   140029f0d:	test   rax,rax
   140029f10:	jne    0x140029ce0
   140029f16:	mov    rcx,QWORD PTR [rbp+0x30]
   140029f1a:	lea    rdx,[rip+0x2785f]        # 0x140051780
   140029f21:	xor    r8d,r8d
   140029f24:	call   0x14002d3c0
   140029f29:	mov    rdi,QWORD PTR [rsp+0xa0]
   140029f31:	mov    rcx,QWORD PTR [rdi+0x20]
   140029f35:	call   0x14002c860
   140029f3a:	mov    rax,QWORD PTR [rsp+0x40]
   140029f3f:	mov    rcx,QWORD PTR [rdi+0x18]
   140029f43:	mov    QWORD PTR [rdi+0x20],rax
   140029f47:	call   0x14002c860
   140029f4c:	mov    rax,QWORD PTR [rsp+0x48]
   140029f51:	mov    QWORD PTR [rdi+0x18],rax
   140029f55:	mov    eax,DWORD PTR [rsp+0x98]
   140029f5c:	cmp    eax,0x1
   140029f5f:	jle    0x140029f92
   140029f61:	lea    edi,[rax-0x1]
   140029f64:	test   edi,edi
   140029f66:	je     0x140029f82
   140029f68:	nop    DWORD PTR [rax+rax*1+0x0]
   140029f70:	mov    rdx,rbx
   140029f73:	mov    ecx,0x9
   140029f78:	call   QWORD PTR [rip+0x131fa]        # 0x14003d178
   140029f7e:	dec    edi
   140029f80:	jne    0x140029f70
   140029f82:	lea    rdx,[rip+0x172cf]        # 0x140041258
   140029f89:	mov    rcx,rbx
   140029f8c:	call   QWORD PTR [rip+0x1332e]        # 0x14003d2c0
   140029f92:	mov    rbx,QWORD PTR [rsp+0x80]
   140029f9a:	add    rsp,0x60
   140029f9e:	pop    rdi
   140029f9f:	pop    rsi
   140029fa0:	pop    rbp
   140029fa1:	ret    
   140029fa2:	int3   
   140029fa3:	int3   
   140029fa4:	int3   
   140029fa5:	int3   
   140029fa6:	int3   
   140029fa7:	int3   
   140029fa8:	int3   
   140029fa9:	int3   
   140029faa:	int3   
   140029fab:	int3   
   140029fac:	int3   
   140029fad:	int3   
   140029fae:	int3   
   140029faf:	int3   
   140029fb0:	mov    QWORD PTR [rsp+0x8],rbx
   140029fb5:	mov    QWORD PTR [rsp+0x10],rsi
   140029fba:	push   rdi
   140029fbb:	sub    rsp,0x20
   140029fbf:	inc    DWORD PTR [rdx]
   140029fc1:	mov    eax,DWORD PTR [rdx]
   140029fc3:	mov    rsi,rcx
   140029fc6:	lea    rcx,[rip+0x17213]        # 0x1400411e0
   140029fcd:	cmp    eax,0x1
   140029fd0:	lea    rdx,[rip+0x17229]        # 0x140041200
   140029fd7:	cmovg  rdx,rcx
   140029fdb:	mov    rcx,rsi
   140029fde:	mov    rdi,r9
   140029fe1:	mov    rbx,r8
   140029fe4:	call   QWORD PTR [rip+0x132d6]        # 0x14003d2c0
   140029fea:	mov    rcx,rbx
   140029fed:	call   0x140029420
   140029ff2:	mov    rcx,rbx
   140029ff5:	mov    rdx,rax
   140029ff8:	call   0x140028c40
   140029ffd:	lea    rdx,[rip+0x17200]        # 0x140041204
   14002a004:	mov    rcx,rsi
   14002a007:	mov    r8,rax
   14002a00a:	call   QWORD PTR [rip+0x132b0]        # 0x14003d2c0
   14002a010:	mov    rcx,rdi
   14002a013:	call   0x140029420
   14002a018:	mov    rcx,rdi
   14002a01b:	mov    rdx,rax
   14002a01e:	call   0x140028c40
   14002a023:	lea    rdx,[rip+0x14492]        # 0x14003e4bc
   14002a02a:	mov    rcx,rsi
   14002a02d:	mov    r8,rax
   14002a030:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a035:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a03a:	add    rsp,0x20
   14002a03e:	pop    rdi
   14002a03f:	rex.W jmp QWORD PTR [rip+0x1327a]        # 0x14003d2c0
   14002a046:	int3   
   14002a047:	int3   
   14002a048:	int3   
   14002a049:	int3   
   14002a04a:	int3   
   14002a04b:	int3   
   14002a04c:	int3   
   14002a04d:	int3   
   14002a04e:	int3   
   14002a04f:	int3   
   14002a050:	mov    QWORD PTR [rsp+0x8],rbx
   14002a055:	mov    QWORD PTR [rsp+0x10],rsi
   14002a05a:	push   rdi
   14002a05b:	sub    rsp,0x20
   14002a05f:	mov    rsi,rcx
   14002a062:	mov    rcx,rdx
   14002a065:	mov    rdi,r8
   14002a068:	mov    rbx,rdx
   14002a06b:	call   0x140029420
   14002a070:	mov    rcx,rbx
   14002a073:	mov    rdx,rax
   14002a076:	call   0x140028c40
   14002a07b:	lea    rdx,[rip+0x1443a]        # 0x14003e4bc
   14002a082:	mov    rcx,rsi
   14002a085:	mov    r8,rax
   14002a088:	call   QWORD PTR [rip+0x13232]        # 0x14003d2c0
   14002a08e:	test   rdi,rdi
   14002a091:	je     0x14002a0c4
   14002a093:	cmp    BYTE PTR [rdi],0x0
   14002a096:	je     0x14002a0c4
   14002a098:	lea    rcx,[rdi+0x1]
   14002a09c:	call   0x140029420
   14002a0a1:	lea    rcx,[rdi+0x1]
   14002a0a5:	mov    rdx,rax
   14002a0a8:	call   0x140028c40
   14002a0ad:	movsx  r8d,BYTE PTR [rdi]
   14002a0b1:	lea    rdx,[rip+0x14408]        # 0x14003e4c0
   14002a0b8:	mov    r9,rax
   14002a0bb:	mov    rcx,rsi
   14002a0be:	call   QWORD PTR [rip+0x131fc]        # 0x14003d2c0
   14002a0c4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a0c9:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a0ce:	add    rsp,0x20
   14002a0d2:	pop    rdi
   14002a0d3:	ret    
   14002a0d4:	int3   
   14002a0d5:	int3   
   14002a0d6:	int3   
   14002a0d7:	int3   
   14002a0d8:	int3   
   14002a0d9:	int3   
   14002a0da:	int3   
   14002a0db:	int3   
   14002a0dc:	int3   
   14002a0dd:	int3   
   14002a0de:	int3   
   14002a0df:	int3   
   14002a0e0:	mov    QWORD PTR [rsp+0x8],rcx
   14002a0e5:	push   rbx
   14002a0e6:	push   rsi
   14002a0e7:	push   rdi
   14002a0e8:	sub    rsp,0x20
   14002a0ec:	mov    QWORD PTR [rsp+0x48],rbp
   14002a0f1:	mov    rdi,rdx
   14002a0f4:	mov    rsi,rcx
   14002a0f7:	call   0x14002b780
   14002a0fc:	mov    rbp,rax
   14002a0ff:	test   rax,rax
   14002a102:	je     0x14002a134
   14002a104:	nop    DWORD PTR [rax+0x0]
   14002a108:	nop    DWORD PTR [rax+rax*1+0x0]
   14002a110:	mov    r8,rdi
   14002a113:	mov    rdx,rbp
   14002a116:	mov    rcx,rsi
   14002a119:	call   0x14002b890
   14002a11e:	mov    rdx,rbp
   14002a121:	mov    rcx,rsi
   14002a124:	mov    rbx,rax
   14002a127:	call   0x14002b260
   14002a12c:	mov    rbp,rbx
   14002a12f:	test   rbx,rbx
   14002a132:	jne    0x14002a110
   14002a134:	test   BYTE PTR [rsi],0x40
   14002a137:	jne    0x14002a1a7
   14002a139:	mov    rdx,QWORD PTR [rsi+0x40]
   14002a13d:	mov    rax,QWORD PTR [rdx+0x20]
   14002a141:	mov    rcx,rax
   14002a144:	mov    QWORD PTR [rsp+0x50],rax
   14002a149:	call   0x14002b830
   14002a14e:	mov    rbx,rax
   14002a151:	test   rax,rax
   14002a154:	je     0x14002a1a7
   14002a156:	mov    rsi,QWORD PTR [rsp+0x50]
   14002a15b:	nop    DWORD PTR [rax+rax*1+0x0]
   14002a160:	mov    rcx,QWORD PTR [rbx+0x10]
   14002a164:	call   0x14002b080
   14002a169:	mov    r8d,0x4
   14002a16f:	mov    rdx,rdi
   14002a172:	mov    r9,QWORD PTR [rax+0x20]
   14002a176:	mov    rbp,rax
   14002a179:	mov    rcx,r9
   14002a17c:	call   QWORD PTR [r9]
   14002a17f:	test   rax,rax
   14002a182:	je     0x14002a18f
   14002a184:	mov    rdx,rdi
   14002a187:	mov    rcx,rbp
   14002a18a:	call   0x14002a0e0
   14002a18f:	mov    rdx,rbx
   14002a192:	mov    rcx,rsi
   14002a195:	call   0x14002b9e0
   14002a19a:	mov    rbx,rax
   14002a19d:	test   rax,rax
   14002a1a0:	jne    0x14002a160
   14002a1a2:	mov    rsi,QWORD PTR [rsp+0x40]
   14002a1a7:	mov    rax,QWORD PTR [rsi+0x20]
   14002a1ab:	mov    r8d,0x2
   14002a1b1:	mov    rdx,rdi
   14002a1b4:	mov    rcx,rax
   14002a1b7:	call   QWORD PTR [rax]
   14002a1b9:	mov    rbp,QWORD PTR [rsp+0x48]
   14002a1be:	cmp    rsi,QWORD PTR [rsi+0x38]
   14002a1c2:	jne    0x14002a248
   14002a1c8:	mov    rcx,rdi
   14002a1cb:	call   0x140027490
   14002a1d0:	mov    rax,QWORD PTR [rdi+0x20]
   14002a1d4:	mov    r8d,0x2
   14002a1da:	mov    rcx,QWORD PTR [rax+0x18]
   14002a1de:	mov    rdx,rdi
   14002a1e1:	mov    rax,QWORD PTR [rcx]
   14002a1e4:	mov    rcx,rax
   14002a1e7:	call   QWORD PTR [rax]
   14002a1e9:	mov    rcx,QWORD PTR [rdi+0x10]
   14002a1ed:	or     DWORD PTR [rdi],0xf
   14002a1f0:	call   0x14002bc90
   14002a1f5:	mov    rax,QWORD PTR [rdi+0x20]
   14002a1f9:	test   BYTE PTR [rax],0x40
   14002a1fc:	jne    0x14002a235
   14002a1fe:	mov    rax,QWORD PTR [rax+0x18]
   14002a202:	xor    ebx,ebx
   14002a204:	mov    rcx,QWORD PTR [rax+0x8]
   14002a208:	mov    rcx,QWORD PTR [rcx+0x8]
   14002a20c:	call   0x14002c770
   14002a211:	movsxd rsi,eax
   14002a214:	test   eax,eax
   14002a216:	jle    0x14002a235
   14002a218:	nop    DWORD PTR [rax+rax*1+0x0]
   14002a220:	mov    rcx,QWORD PTR [rdi+0x8]
   14002a224:	mov    rcx,QWORD PTR [rcx+rbx*8]
   14002a228:	call   0x14002bc90
   14002a22d:	inc    rbx
   14002a230:	cmp    rbx,rsi
   14002a233:	jl     0x14002a220
   14002a235:	mov    rcx,QWORD PTR [rdi+0x8]
   14002a239:	call   QWORD PTR [rip+0x13061]        # 0x14003d2a0
   14002a23f:	mov    rcx,rdi
   14002a242:	call   QWORD PTR [rip+0x13058]        # 0x14003d2a0
   14002a248:	add    rsp,0x20
   14002a24c:	pop    rdi
   14002a24d:	pop    rsi
   14002a24e:	pop    rbx
   14002a24f:	ret    
   14002a250:	rex push rdi
   14002a252:	sub    rsp,0x20
   14002a256:	mov    rdi,rcx
   14002a259:	call   0x140027490
   14002a25e:	mov    rax,QWORD PTR [rdi+0x20]
   14002a262:	mov    rdx,QWORD PTR [rax+0x18]
   14002a266:	mov    r8d,0x2
   14002a26c:	mov    rax,QWORD PTR [rdx]
   14002a26f:	mov    rdx,rdi
   14002a272:	mov    rcx,rax
   14002a275:	call   QWORD PTR [rax]
   14002a277:	mov    rcx,QWORD PTR [rdi+0x10]
   14002a27b:	or     DWORD PTR [rdi],0xf
   14002a27e:	call   0x14002bc90
   14002a283:	mov    rax,QWORD PTR [rdi+0x20]
   14002a287:	test   BYTE PTR [rax],0x40
   14002a28a:	jne    0x14002a2cf
   14002a28c:	mov    rax,QWORD PTR [rax+0x18]
   14002a290:	mov    QWORD PTR [rsp+0x30],rbx
   14002a295:	mov    QWORD PTR [rsp+0x38],rsi
   14002a29a:	mov    rcx,QWORD PTR [rax+0x8]
   14002a29e:	xor    ebx,ebx
   14002a2a0:	mov    rcx,QWORD PTR [rcx+0x8]
   14002a2a4:	call   0x14002c770
   14002a2a9:	movsxd rsi,eax
   14002a2ac:	test   eax,eax
   14002a2ae:	jle    0x14002a2c5
   14002a2b0:	mov    rcx,QWORD PTR [rdi+0x8]
   14002a2b4:	mov    rcx,QWORD PTR [rcx+rbx*8]
   14002a2b8:	call   0x14002bc90
   14002a2bd:	inc    rbx
   14002a2c0:	cmp    rbx,rsi
   14002a2c3:	jl     0x14002a2b0
   14002a2c5:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a2ca:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a2cf:	mov    rcx,QWORD PTR [rdi+0x8]
   14002a2d3:	call   QWORD PTR [rip+0x12fc7]        # 0x14003d2a0
   14002a2d9:	mov    rcx,rdi
   14002a2dc:	add    rsp,0x20
   14002a2e0:	pop    rdi
   14002a2e1:	rex.W jmp QWORD PTR [rip+0x12fb8]        # 0x14003d2a0
   14002a2e8:	int3   
   14002a2e9:	int3   
   14002a2ea:	int3   
   14002a2eb:	int3   
   14002a2ec:	int3   
   14002a2ed:	int3   
   14002a2ee:	int3   
   14002a2ef:	int3   
   14002a2f0:	mov    QWORD PTR [rsp+0x18],rbx
   14002a2f5:	push   rsi
   14002a2f6:	sub    rsp,0x20
   14002a2fa:	mov    eax,DWORD PTR [rdx+0x18]
   14002a2fd:	mov    rsi,rdx
   14002a300:	mov    rbx,rcx
   14002a303:	mov    DWORD PTR [rsp+0x30],eax
   14002a307:	mov    rax,QWORD PTR [rcx+0x20]
   14002a30b:	lea    rdx,[rsp+0x30]
   14002a310:	mov    rcx,rax
   14002a313:	mov    r8d,0x200
   14002a319:	call   QWORD PTR [rax]
   14002a31b:	test   rax,rax
   14002a31e:	jne    0x14002a380
   14002a320:	mov    rax,QWORD PTR [rbx+0x20]
   14002a324:	mov    r8d,0x1
   14002a32a:	mov    rdx,rsi
   14002a32d:	mov    rcx,rax
   14002a330:	call   QWORD PTR [rax]
   14002a332:	test   BYTE PTR [rbx],0x40
   14002a335:	jne    0x14002a380
   14002a337:	mov    rdx,QWORD PTR [rbx+0x40]
   14002a33b:	mov    QWORD PTR [rsp+0x38],rdi
   14002a340:	mov    rdi,QWORD PTR [rdx+0x20]
   14002a344:	mov    rcx,rdi
   14002a347:	call   0x14002b7d0
   14002a34c:	mov    rbx,rax
   14002a34f:	test   rax,rax
   14002a352:	je     0x14002a37b
   14002a354:	mov    rcx,QWORD PTR [rbx+0x18]
   14002a358:	call   0x14002b080
   14002a35d:	mov    rdx,rsi
   14002a360:	mov    rcx,rax
   14002a363:	call   0x14002a2f0
   14002a368:	mov    rdx,rbx
   14002a36b:	mov    rcx,rdi
   14002a36e:	call   0x14002b9a0
   14002a373:	mov    rbx,rax
   14002a376:	test   rax,rax
   14002a379:	jne    0x14002a354
   14002a37b:	mov    rdi,QWORD PTR [rsp+0x38]
   14002a380:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a385:	add    rsp,0x20
   14002a389:	pop    rsi
   14002a38a:	ret    
   14002a38b:	int3   
   14002a38c:	int3   
   14002a38d:	int3   
   14002a38e:	int3   
   14002a38f:	int3   
   14002a390:	mov    QWORD PTR [rsp+0x10],rbx
   14002a395:	mov    QWORD PTR [rsp+0x18],rbp
   14002a39a:	mov    QWORD PTR [rsp+0x20],rsi
   14002a39f:	push   rdi
   14002a3a0:	push   r13
   14002a3a2:	push   r14
   14002a3a4:	sub    rsp,0x20
   14002a3a8:	mov    rbx,rdx
   14002a3ab:	movsxd rdx,DWORD PTR [rip+0x2aed2]        # 0x140055284
   14002a3b2:	mov    r13,rcx
   14002a3b5:	mov    ecx,0x1
   14002a3ba:	mov    rsi,r8
   14002a3bd:	call   QWORD PTR [rip+0x12ca5]        # 0x14003d068
   14002a3c3:	mov    rcx,rbx
   14002a3c6:	and    DWORD PTR [rax],0xfffffff1
   14002a3c9:	or     DWORD PTR [rax],0x1
   14002a3cc:	mov    rbp,rax
   14002a3cf:	call   0x14002bbb0
   14002a3d4:	mov    rdx,QWORD PTR [r13+0x18]
   14002a3d8:	mov    ecx,DWORD PTR [rdx+0x20]
   14002a3db:	mov    QWORD PTR [rbp+0x10],rax
   14002a3df:	mov    DWORD PTR [rbp+0x18],ecx
   14002a3e2:	inc    ecx
   14002a3e4:	mov    DWORD PTR [rdx+0x20],ecx
   14002a3e7:	mov    rcx,QWORD PTR [r13+0x38]
   14002a3eb:	mov    rax,QWORD PTR [r13+0x18]
   14002a3ef:	mov    QWORD PTR [rbp+0x20],rcx
   14002a3f3:	mov    rcx,QWORD PTR [rax+0x8]
   14002a3f7:	mov    rcx,QWORD PTR [rcx+0x8]
   14002a3fb:	call   0x14002c770
   14002a400:	xor    ebx,ebx
   14002a402:	movsxd rdi,eax
   14002a405:	test   eax,eax
   14002a407:	je     0x14002a41b
   14002a409:	lea    edx,[rbx+0x8]
   14002a40c:	mov    rcx,rdi
   14002a40f:	call   QWORD PTR [rip+0x12c53]        # 0x14003d068
   14002a415:	mov    QWORD PTR [rbp+0x8],rax
   14002a419:	jmp    0x14002a41f
   14002a41b:	mov    QWORD PTR [rbp+0x8],rbx
   14002a41f:	mov    r14,rdi
   14002a422:	test   edi,edi
   14002a424:	jle    0x14002a471
   14002a426:	mov    QWORD PTR [rsp+0x40],r15
   14002a42b:	mov    r15,QWORD PTR [rbp+0x8]
   14002a42f:	nop
   14002a430:	lea    rdi,[rbx*8+0x0]
   14002a438:	test   rsi,rsi
   14002a43b:	je     0x14002a447
   14002a43d:	mov    rax,QWORD PTR [rsi+0x8]
   14002a441:	mov    rcx,QWORD PTR [rdi+rax*1]
   14002a445:	jmp    0x14002a45b
   14002a447:	mov    rax,QWORD PTR [r13+0x18]
   14002a44b:	mov    rcx,QWORD PTR [rax+0x8]
   14002a44f:	mov    rax,QWORD PTR [rcx+0x10]
   14002a453:	mov    rcx,QWORD PTR [rax+rdi*1]
   14002a457:	mov    rcx,QWORD PTR [rcx+0x8]
   14002a45b:	call   0x14002bbb0
   14002a460:	inc    rbx
   14002a463:	mov    QWORD PTR [r15+rdi*1],rax
   14002a467:	cmp    rbx,r14
   14002a46a:	jl     0x14002a430
   14002a46c:	mov    r15,QWORD PTR [rsp+0x40]
   14002a471:	mov    rbx,QWORD PTR [rsp+0x48]
   14002a476:	mov    rsi,QWORD PTR [rsp+0x58]
   14002a47b:	mov    rax,rbp
   14002a47e:	mov    rbp,QWORD PTR [rsp+0x50]
   14002a483:	add    rsp,0x20
   14002a487:	pop    r14
   14002a489:	pop    r13
   14002a48b:	pop    rdi
   14002a48c:	ret    
   14002a48d:	int3   
   14002a48e:	int3   
   14002a48f:	int3   
   14002a490:	rex push rbx
   14002a492:	sub    rsp,0x20
   14002a496:	mov    rax,QWORD PTR [rcx+0x18]
   14002a49a:	mov    rbx,rcx
   14002a49d:	mov    r8d,0x200
   14002a4a3:	mov    r9,QWORD PTR [rax]
   14002a4a6:	mov    rcx,r9
   14002a4a9:	call   QWORD PTR [r9]
   14002a4ac:	test   rax,rax
   14002a4af:	je     0x14002a4cf
   14002a4b1:	cmp    rbx,QWORD PTR [rbx+0x38]
   14002a4b5:	je     0x14002a4cf
   14002a4b7:	mov    r9,QWORD PTR [rbx+0x20]
   14002a4bb:	mov    r8d,0x4
   14002a4c1:	mov    rdx,rax
   14002a4c4:	mov    rcx,r9
   14002a4c7:	add    rsp,0x20
   14002a4cb:	pop    rbx
   14002a4cc:	rex.WB jmp QWORD PTR [r9]
   14002a4cf:	add    rsp,0x20
   14002a4d3:	pop    rbx
   14002a4d4:	ret    
   14002a4d5:	int3   
   14002a4d6:	int3   
   14002a4d7:	int3   
   14002a4d8:	int3   
   14002a4d9:	int3   
   14002a4da:	int3   
   14002a4db:	int3   
   14002a4dc:	int3   
   14002a4dd:	int3   
   14002a4de:	int3   
   14002a4df:	int3   
   14002a4e0:	mov    rax,QWORD PTR [rcx+0x20]
   14002a4e4:	xor    edx,edx
   14002a4e6:	mov    r8d,0x80
   14002a4ec:	mov    rcx,rax
   14002a4ef:	rex.W jmp QWORD PTR [rax]
   14002a4f2:	int3   
   14002a4f3:	int3   
   14002a4f4:	int3   
   14002a4f5:	int3   
   14002a4f6:	int3   
   14002a4f7:	int3   
   14002a4f8:	int3   
   14002a4f9:	int3   
   14002a4fa:	int3   
   14002a4fb:	int3   
   14002a4fc:	int3   
   14002a4fd:	int3   
   14002a4fe:	int3   
   14002a4ff:	int3   
   14002a500:	mov    DWORD PTR [rsp+0x10],edx
   14002a504:	sub    rsp,0x28
   14002a508:	mov    rax,QWORD PTR [rcx+0x20]
   14002a50c:	lea    rdx,[rsp+0x38]
   14002a511:	mov    r8d,0x200
   14002a517:	mov    rcx,rax
   14002a51a:	call   QWORD PTR [rax]
   14002a51c:	add    rsp,0x28
   14002a520:	ret    
   14002a521:	int3   
   14002a522:	int3   
   14002a523:	int3   
   14002a524:	int3   
   14002a525:	int3   
   14002a526:	int3   
   14002a527:	int3   
   14002a528:	int3   
   14002a529:	int3   
   14002a52a:	int3   
   14002a52b:	int3   
   14002a52c:	int3   
   14002a52d:	int3   
   14002a52e:	int3   
   14002a52f:	int3   
   14002a530:	mov    QWORD PTR [rsp+0x8],rbx
   14002a535:	mov    QWORD PTR [rsp+0x10],rbp
   14002a53a:	mov    QWORD PTR [rsp+0x18],rsi
   14002a53f:	push   rdi
   14002a540:	sub    rsp,0x20
   14002a544:	mov    rdi,QWORD PTR [rcx+0x38]
   14002a548:	mov    rsi,rcx
   14002a54b:	mov    r8d,0x200
   14002a551:	mov    rax,QWORD PTR [rdi+0x18]
   14002a555:	mov    rbp,rdx
   14002a558:	mov    r9,QWORD PTR [rax]
   14002a55b:	mov    rcx,r9
   14002a55e:	call   QWORD PTR [r9]
   14002a561:	mov    rbx,rax
   14002a564:	test   rax,rax
   14002a567:	je     0x14002a584
   14002a569:	cmp    rdi,QWORD PTR [rdi+0x38]
   14002a56d:	je     0x14002a584
   14002a56f:	mov    rax,QWORD PTR [rdi+0x20]
   14002a573:	mov    r8d,0x4
   14002a579:	mov    rdx,rbx
   14002a57c:	mov    rcx,rax
   14002a57f:	call   QWORD PTR [rax]
   14002a581:	mov    rbx,rax
   14002a584:	test   rbx,rbx
   14002a587:	jne    0x14002a5b4
   14002a589:	mov    r8,QWORD PTR [rsi+0x48]
   14002a58d:	mov    rdx,rbp
   14002a590:	mov    rcx,rsi
   14002a593:	mov    r8,QWORD PTR [r8]
   14002a596:	call   0x14002a390
   14002a59b:	mov    rcx,QWORD PTR [rsi+0x18]
   14002a59f:	mov    r8d,0x1
   14002a5a5:	mov    r9,QWORD PTR [rcx]
   14002a5a8:	mov    rdx,rax
   14002a5ab:	mov    rbx,rax
   14002a5ae:	mov    rcx,r9
   14002a5b1:	call   QWORD PTR [r9]
   14002a5b4:	mov    rdx,rbx
   14002a5b7:	mov    rcx,rsi
   14002a5ba:	call   0x14002a2f0
   14002a5bf:	mov    rbp,QWORD PTR [rsp+0x38]
   14002a5c4:	mov    rsi,QWORD PTR [rsp+0x40]
   14002a5c9:	mov    rax,rbx
   14002a5cc:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a5d1:	add    rsp,0x20
   14002a5d5:	pop    rdi
   14002a5d6:	ret    
   14002a5d7:	int3   
   14002a5d8:	int3   
   14002a5d9:	int3   
   14002a5da:	int3   
   14002a5db:	int3   
   14002a5dc:	int3   
   14002a5dd:	int3   
   14002a5de:	int3   
   14002a5df:	int3   
   14002a5e0:	mov    rax,QWORD PTR [rcx+0x20]
   14002a5e4:	mov    r8d,0x8
   14002a5ea:	mov    rcx,rax
   14002a5ed:	rex.W jmp QWORD PTR [rax]
   14002a5f0:	mov    eax,DWORD PTR [rdx]
   14002a5f2:	sub    eax,DWORD PTR [r8]
   14002a5f5:	ret    
   14002a5f6:	int3   
   14002a5f7:	int3   
   14002a5f8:	int3   
   14002a5f9:	int3   
   14002a5fa:	int3   
   14002a5fb:	int3   
   14002a5fc:	int3   
   14002a5fd:	int3   
   14002a5fe:	int3   
   14002a5ff:	int3   
   14002a600:	mov    rax,r8
   14002a603:	mov    rcx,rdx
   14002a606:	xor    r8d,r8d
   14002a609:	mov    rdx,rax
   14002a60c:	jmp    0x14002ab40
   14002a611:	int3   
   14002a612:	int3   
   14002a613:	int3   
   14002a614:	int3   
   14002a615:	int3   
   14002a616:	int3   
   14002a617:	int3   
   14002a618:	int3   
   14002a619:	int3   
   14002a61a:	int3   
   14002a61b:	int3   
   14002a61c:	int3   
   14002a61d:	int3   
   14002a61e:	int3   
   14002a61f:	int3   
   14002a620:	mov    rax,r8
   14002a623:	mov    rcx,rdx
   14002a626:	mov    r8d,0x1
   14002a62c:	mov    rdx,rax
   14002a62f:	jmp    0x14002ab40
   14002a634:	int3   
   14002a635:	int3   
   14002a636:	int3   
   14002a637:	int3   
   14002a638:	int3   
   14002a639:	int3   
   14002a63a:	int3   
   14002a63b:	int3   
   14002a63c:	int3   
   14002a63d:	int3   
   14002a63e:	int3   
   14002a63f:	int3   
   14002a640:	mov    QWORD PTR [rsp+0x18],rbp
   14002a645:	push   rsi
   14002a646:	sub    rsp,0x20
   14002a64a:	mov    rsi,QWORD PTR [rcx+0x40]
   14002a64e:	mov    rbp,QWORD PTR [rdx+0x40]
   14002a652:	test   rsi,rsi
   14002a655:	je     0x14002a6b1
   14002a657:	test   rbp,rbp
   14002a65a:	je     0x14002a6b1
   14002a65c:	mov    rdx,QWORD PTR [rip+0x27405]        # 0x140051a68
   14002a663:	lea    rcx,[rip+0x270d6]        # 0x140051740
   14002a66a:	mov    QWORD PTR [rsp+0x30],rbx
   14002a66f:	mov    QWORD PTR [rsp+0x38],rdi
   14002a674:	call   0x14002c900
   14002a679:	mov    r8,rsi
   14002a67c:	mov    rcx,rax
   14002a67f:	mov    rdx,rbp
   14002a682:	mov    rdi,rax
   14002a685:	call   0x14002b190
   14002a68a:	mov    rcx,rdi
   14002a68d:	mov    ebx,eax
   14002a68f:	call   0x14002c860
   14002a694:	mov    rdi,QWORD PTR [rsp+0x38]
   14002a699:	test   ebx,ebx
   14002a69b:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a6a0:	jne    0x14002a6b1
   14002a6a2:	mov    rcx,QWORD PTR [rsi+0x20]
   14002a6a6:	mov    r8,rbp
   14002a6a9:	mov    rdx,rsi
   14002a6ac:	call   0x14002b540
   14002a6b1:	mov    rbp,QWORD PTR [rsp+0x40]
   14002a6b6:	add    rsp,0x20
   14002a6ba:	pop    rsi
   14002a6bb:	ret    
   14002a6bc:	int3   
   14002a6bd:	int3   
   14002a6be:	int3   
   14002a6bf:	int3   
   14002a6c0:	mov    QWORD PTR [rsp+0x18],rsi
   14002a6c5:	mov    QWORD PTR [rsp+0x20],rdi
   14002a6ca:	push   r15
   14002a6cc:	sub    rsp,0x20
   14002a6d0:	cmp    BYTE PTR [rip+0x2abdc],0x0        # 0x1400552b3
   14002a6d7:	mov    edi,r8d
   14002a6da:	mov    rsi,rdx
   14002a6dd:	mov    r15,rcx
   14002a6e0:	jne    0x14002a705
   14002a6e2:	call   QWORD PTR [rip+0x12be8]        # 0x14003d2d0
   14002a6e8:	lea    rdx,[rip+0x16bb1]        # 0x1400412a0
   14002a6ef:	lea    rcx,[rax+0x60]
   14002a6f3:	call   QWORD PTR [rip+0x12bc7]        # 0x14003d2c0
   14002a6f9:	mov    ecx,0x1
   14002a6fe:	call   QWORD PTR [rip+0x12974]        # 0x14003d078
   14002a704:	int3   
   14002a705:	movsxd rdx,DWORD PTR [rip+0x2ab74]        # 0x140055280
   14002a70c:	mov    ecx,0x1
   14002a711:	mov    QWORD PTR [rsp+0x30],rbx
   14002a716:	mov    QWORD PTR [rsp+0x38],r14
   14002a71b:	call   QWORD PTR [rip+0x12947]        # 0x14003d068
   14002a721:	and    edi,0xf
   14002a724:	and    DWORD PTR [rax],0xffffff03
   14002a72a:	shl    edi,0x4
   14002a72d:	lea    rcx,[rip+0x2700c]        # 0x140051740
   14002a734:	or     edi,0x3
   14002a737:	mov    rbx,rax
   14002a73a:	or     DWORD PTR [rax],edi
   14002a73c:	mov    rdx,QWORD PTR [rip+0x27325]        # 0x140051a68
   14002a743:	call   0x14002c900
   14002a748:	lea    rcx,[rip+0x27071]        # 0x1400517c0
   14002a74f:	mov    QWORD PTR [rbx+0x20],rax
   14002a753:	mov    rdx,QWORD PTR [rip+0x2730e]        # 0x140051a68
   14002a75a:	call   0x14002c900
   14002a75f:	lea    rcx,[rip+0x2701a]        # 0x140051780
   14002a766:	mov    QWORD PTR [rbx+0x28],rax
   14002a76a:	mov    rdx,QWORD PTR [rip+0x272f7]        # 0x140051a68
   14002a771:	call   0x14002c900
   14002a776:	mov    QWORD PTR [rbx+0x30],rax
   14002a77a:	test   rsi,rsi
   14002a77d:	jne    0x14002a7f7
   14002a77f:	call   0x14002ae10
   14002a784:	mov    QWORD PTR [rbx+0x38],rbx
   14002a788:	mov    QWORD PTR [rbx+0x18],rax
   14002a78c:	mov    rcx,QWORD PTR [rax+0x18]
   14002a790:	mov    rcx,QWORD PTR [rcx+0x8]
   14002a794:	call   0x14002c770
   14002a799:	movsxd r14,eax
   14002a79c:	test   eax,eax
   14002a79e:	je     0x14002a7b2
   14002a7a0:	lea    edx,[rsi+0x8]
   14002a7a3:	mov    rcx,r14
   14002a7a6:	call   QWORD PTR [rip+0x128bc]        # 0x14003d068
   14002a7ac:	mov    QWORD PTR [rbx+0x8],rax
   14002a7b0:	jmp    0x14002a7ba
   14002a7b2:	mov    QWORD PTR [rbx+0x8],0x0
   14002a7ba:	xor    edi,edi
   14002a7bc:	test   r14,r14
   14002a7bf:	jle    0x14002a860
   14002a7c5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002a7d0:	mov    rax,QWORD PTR [rip+0x2aab9]        # 0x140055290
   14002a7d7:	mov    rcx,QWORD PTR [rax+0x8]
   14002a7db:	mov    rcx,QWORD PTR [rcx+rdi*8]
   14002a7df:	call   0x14002bbb0
   14002a7e4:	mov    rcx,QWORD PTR [rbx+0x8]
   14002a7e8:	inc    rdi
   14002a7eb:	mov    QWORD PTR [rcx+rdi*8-0x8],rax
   14002a7f0:	cmp    rdi,r14
   14002a7f3:	jl     0x14002a7d0
   14002a7f5:	jmp    0x14002a860
   14002a7f7:	mov    rax,QWORD PTR [rsi+0x18]
   14002a7fb:	mov    QWORD PTR [rbx+0x18],rax
   14002a7ff:	mov    rax,QWORD PTR [rsi+0x38]
   14002a803:	mov    QWORD PTR [rbx+0x38],rax
   14002a807:	mov    rax,QWORD PTR [rsi+0x18]
   14002a80b:	mov    rcx,QWORD PTR [rax+0x18]
   14002a80f:	mov    rcx,QWORD PTR [rcx+0x8]
   14002a813:	call   0x14002c770
   14002a818:	movsxd r14,eax
   14002a81b:	test   eax,eax
   14002a81d:	je     0x14002a833
   14002a81f:	mov    rcx,r14
   14002a822:	mov    edx,0x8
   14002a827:	call   QWORD PTR [rip+0x1283b]        # 0x14003d068
   14002a82d:	mov    QWORD PTR [rbx+0x8],rax
   14002a831:	jmp    0x14002a83b
   14002a833:	mov    QWORD PTR [rbx+0x8],0x0
   14002a83b:	xor    edi,edi
   14002a83d:	test   r14,r14
   14002a840:	jle    0x14002a860
   14002a842:	mov    rcx,QWORD PTR [rsi+0x8]
   14002a846:	mov    rcx,QWORD PTR [rcx+rdi*8]
   14002a84a:	call   0x14002bbb0
   14002a84f:	mov    rcx,QWORD PTR [rbx+0x8]
   14002a853:	inc    rdi
   14002a856:	mov    QWORD PTR [rcx+rdi*8-0x8],rax
   14002a85b:	cmp    rdi,r14
   14002a85e:	jl     0x14002a842
   14002a860:	mov    rcx,r15
   14002a863:	mov    QWORD PTR [rbx+0x40],0x0
   14002a86b:	call   0x14002bbb0
   14002a870:	mov    r14,QWORD PTR [rsp+0x38]
   14002a875:	mov    QWORD PTR [rbx+0x48],0x0
   14002a87d:	mov    QWORD PTR [rbx+0x10],rax
   14002a881:	mov    rcx,rbx
   14002a884:	test   rsi,rsi
   14002a887:	je     0x14002a88f
   14002a889:	mov    rdx,QWORD PTR [rsi+0x48]
   14002a88d:	jmp    0x14002a891
   14002a88f:	xor    edx,edx
   14002a891:	call   0x14002b0a0
   14002a896:	mov    rsi,QWORD PTR [rsp+0x40]
   14002a89b:	mov    rdi,QWORD PTR [rsp+0x48]
   14002a8a0:	mov    rax,rbx
   14002a8a3:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a8a8:	add    rsp,0x20
   14002a8ac:	pop    r15
   14002a8ae:	ret    
   14002a8af:	int3   
   14002a8b0:	test   rcx,rcx
   14002a8b3:	je     0x14002ab36
   14002a8b9:	mov    QWORD PTR [rsp+0x8],rcx
   14002a8be:	push   rbp
   14002a8bf:	push   rsi
   14002a8c0:	push   rdi
   14002a8c1:	sub    rsp,0x30
   14002a8c5:	xor    ebp,ebp
   14002a8c7:	mov    rdi,rcx
   14002a8ca:	mov    ecx,DWORD PTR [rcx]
   14002a8cc:	mov    eax,ecx
   14002a8ce:	mov    esi,ebp
   14002a8d0:	and    eax,0xf
   14002a8d3:	cmp    al,0x3
   14002a8d5:	jne    0x14002ab2f
   14002a8db:	sar    ecx,0x4
   14002a8de:	mov    QWORD PTR [rsp+0x28],rbx
   14002a8e3:	and    ecx,0x4
   14002a8e6:	mov    DWORD PTR [rsp+0x58],ecx
   14002a8ea:	jne    0x14002a98c
   14002a8f0:	mov    rax,QWORD PTR [rdi+0x40]
   14002a8f4:	mov    rsi,QWORD PTR [rax+0x20]
   14002a8f8:	mov    QWORD PTR [rsp+0x68],rsi
   14002a8fd:	nop    DWORD PTR [rax]
   14002a900:	mov    rdx,QWORD PTR [rdi+0x40]
   14002a904:	mov    rcx,rsi
   14002a907:	call   0x14002b830
   14002a90c:	mov    rbx,rax
   14002a90f:	test   rax,rax
   14002a912:	je     0x14002a98c
   14002a914:	mov    edi,ebp
   14002a916:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002a920:	mov    rdx,rbx
   14002a923:	mov    rcx,rsi
   14002a926:	call   0x14002b9e0
   14002a92b:	mov    rdx,QWORD PTR [rbx+0x10]
   14002a92f:	mov    rcx,QWORD PTR [rsp+0x68]
   14002a934:	mov    rsi,rax
   14002a937:	call   0x14002b7d0
   14002a93c:	mov    rcx,QWORD PTR [rsp+0x68]
   14002a941:	mov    rdx,rax
   14002a944:	call   0x14002b9a0
   14002a949:	test   rax,rax
   14002a94c:	jne    0x14002a972
   14002a94e:	mov    rdx,QWORD PTR [rbx+0x10]
   14002a952:	mov    rcx,QWORD PTR [rdx+0x20]
   14002a956:	cmp    QWORD PTR [rcx+0x40],rbp
   14002a95a:	je     0x14002a961
   14002a95c:	mov    rcx,rbp
   14002a95f:	jmp    0x14002a968
   14002a961:	mov    rcx,QWORD PTR [rdx+0x8]
   14002a965:	mov    rcx,QWORD PTR [rcx]
   14002a968:	call   0x14002a8b0
   14002a96d:	mov    edi,0x1
   14002a972:	mov    rbx,rsi
   14002a975:	test   rsi,rsi
   14002a978:	mov    rsi,QWORD PTR [rsp+0x68]
   14002a97d:	jne    0x14002a920
   14002a97f:	test   edi,edi
   14002a981:	mov    rdi,QWORD PTR [rsp+0x50]
   14002a986:	jne    0x14002a900
   14002a98c:	cmp    QWORD PTR [rdi+0x48],rbp
   14002a990:	je     0x14002a9da
   14002a992:	mov    rbx,QWORD PTR [rdi+0x48]
   14002a996:	test   rbx,rbx
   14002a999:	je     0x14002a9d4
   14002a99b:	mov    rax,QWORD PTR [rbx+0x10]
   14002a99f:	mov    QWORD PTR [rdi+0x48],rax
   14002a9a3:	mov    rdx,QWORD PTR [rbx+0x8]
   14002a9a7:	mov    rax,QWORD PTR [rbx]
   14002a9aa:	mov    QWORD PTR [rdx+0x10],rax
   14002a9ae:	mov    rdx,QWORD PTR [rbx+0x8]
   14002a9b2:	mov    rax,QWORD PTR [rdx+0x10]
   14002a9b6:	mov    QWORD PTR [rdx+0x18],rax
   14002a9ba:	mov    rcx,QWORD PTR [rbx+0x8]
   14002a9be:	call   0x14002b3a0
   14002a9c3:	mov    rcx,QWORD PTR [rbx]
   14002a9c6:	call   0x14002a250
   14002a9cb:	mov    rcx,rbx
   14002a9ce:	call   QWORD PTR [rip+0x128cc]        # 0x14003d2a0
   14002a9d4:	cmp    QWORD PTR [rdi+0x48],rbp
   14002a9d8:	jne    0x14002a992
   14002a9da:	mov    ebx,DWORD PTR [rsp+0x58]
   14002a9de:	test   ebx,ebx
   14002a9e0:	jne    0x14002aa19
   14002a9e2:	mov    rax,QWORD PTR [rdi+0x18]
   14002a9e6:	mov    rcx,QWORD PTR [rax+0x18]
   14002a9ea:	mov    rcx,QWORD PTR [rcx+0x8]
   14002a9ee:	call   0x14002c770
   14002a9f3:	movsxd rbx,eax
   14002a9f6:	test   eax,eax
   14002a9f8:	jle    0x14002aa15
   14002a9fa:	nop    WORD PTR [rax+rax*1+0x0]
   14002aa00:	mov    rcx,QWORD PTR [rdi+0x8]
   14002aa04:	mov    rcx,QWORD PTR [rcx+rbp*8]
   14002aa08:	call   0x14002bc90
   14002aa0d:	inc    rbp
   14002aa10:	cmp    rbp,rbx
   14002aa13:	jl     0x14002aa00
   14002aa15:	mov    ebx,DWORD PTR [rsp+0x58]
   14002aa19:	mov    rcx,QWORD PTR [rdi+0x8]
   14002aa1d:	test   rcx,rcx
   14002aa20:	je     0x14002aa28
   14002aa22:	call   QWORD PTR [rip+0x12878]        # 0x14003d2a0
   14002aa28:	cmp    rdi,QWORD PTR [rdi+0x38]
   14002aa2c:	jne    0x14002aabf
   14002aa32:	mov    rcx,rdi
   14002aa35:	call   0x14002a4e0
   14002aa3a:	mov    rsi,rax
   14002aa3d:	test   rax,rax
   14002aa40:	je     0x14002aa63
   14002aa42:	mov    rdx,rsi
   14002aa45:	mov    rcx,rdi
   14002aa48:	call   0x14002a5e0
   14002aa4d:	mov    rdx,rsi
   14002aa50:	mov    rcx,rdi
   14002aa53:	mov    rbx,rax
   14002aa56:	call   0x14002a0e0
   14002aa5b:	mov    rsi,rbx
   14002aa5e:	test   rbx,rbx
   14002aa61:	jne    0x14002aa42
   14002aa63:	cmp    DWORD PTR [rsp+0x58],0x0
   14002aa68:	jne    0x14002aa77
   14002aa6a:	mov    rcx,QWORD PTR [rdi+0x40]
   14002aa6e:	mov    rcx,QWORD PTR [rcx+0x20]
   14002aa72:	call   0x14002a8b0
   14002aa77:	mov    rdx,QWORD PTR [rdi+0x18]
   14002aa7b:	mov    rcx,rdi
   14002aa7e:	mov    rdx,QWORD PTR [rdx+0x18]
   14002aa82:	call   0x1400271e0
   14002aa87:	mov    rdx,QWORD PTR [rdi+0x18]
   14002aa8b:	mov    rcx,rdi
   14002aa8e:	mov    rdx,QWORD PTR [rdx+0x8]
   14002aa92:	call   0x1400271e0
   14002aa97:	mov    rdx,QWORD PTR [rdi+0x18]
   14002aa9b:	mov    rcx,rdi
   14002aa9e:	mov    rdx,QWORD PTR [rdx+0x10]
   14002aaa2:	call   0x1400271e0
   14002aaa7:	mov    rcx,QWORD PTR [rdi+0x18]
   14002aaab:	mov    rcx,QWORD PTR [rcx]
   14002aaae:	call   0x14002c860
   14002aab3:	mov    rcx,QWORD PTR [rdi+0x18]
   14002aab7:	call   QWORD PTR [rip+0x127e3]        # 0x14003d2a0
   14002aabd:	jmp    0x14002aafa
   14002aabf:	test   ebx,ebx
   14002aac1:	jne    0x14002aafa
   14002aac3:	mov    rcx,QWORD PTR [rdi+0x40]
   14002aac7:	mov    edx,DWORD PTR [rcx]
   14002aac9:	shl    edx,0x1c
   14002aacc:	sar    edx,0x1c
   14002aacf:	dec    edx
   14002aad1:	je     0x14002aaef
   14002aad3:	dec    edx
   14002aad5:	je     0x14002aae2
   14002aad7:	dec    edx
   14002aad9:	jne    0x14002aafa
   14002aadb:	call   0x14002a8b0
   14002aae0:	jmp    0x14002aafa
   14002aae2:	mov    rdx,rcx
   14002aae5:	mov    rcx,rsi
   14002aae8:	call   0x14002b260
   14002aaed:	jmp    0x14002aafa
   14002aaef:	mov    rdx,rcx
   14002aaf2:	mov    rcx,rsi
   14002aaf5:	call   0x14002a0e0
   14002aafa:	mov    rcx,QWORD PTR [rdi+0x20]
   14002aafe:	call   0x14002c860
   14002ab03:	mov    rcx,QWORD PTR [rdi+0x28]
   14002ab07:	call   0x14002c860
   14002ab0c:	mov    rcx,QWORD PTR [rdi+0x30]
   14002ab10:	call   0x14002c860
   14002ab15:	mov    rcx,QWORD PTR [rdi+0x10]
   14002ab19:	call   0x14002bc90
   14002ab1e:	or     DWORD PTR [rdi],0xf
   14002ab21:	mov    rcx,rdi
   14002ab24:	call   QWORD PTR [rip+0x12776]        # 0x14003d2a0
   14002ab2a:	mov    rbx,QWORD PTR [rsp+0x28]
   14002ab2f:	add    rsp,0x30
   14002ab33:	pop    rdi
   14002ab34:	pop    rsi
   14002ab35:	pop    rbp
   14002ab36:	ret    
   14002ab37:	int3   
   14002ab38:	int3   
   14002ab39:	int3   
   14002ab3a:	int3   
   14002ab3b:	int3   
   14002ab3c:	int3   
   14002ab3d:	int3   
   14002ab3e:	int3   
   14002ab3f:	int3   
   14002ab40:	mov    QWORD PTR [rsp+0x8],rbx
   14002ab45:	test   r8d,r8d
   14002ab48:	je     0x14002ab5c
   14002ab4a:	mov    r10,QWORD PTR [rcx+0x18]
   14002ab4e:	mov    rbx,QWORD PTR [rdx+0x18]
   14002ab52:	mov    r9,QWORD PTR [rcx+0x10]
   14002ab56:	mov    r11,QWORD PTR [rdx+0x10]
   14002ab5a:	jmp    0x14002ab6c
   14002ab5c:	mov    r10,QWORD PTR [rcx+0x10]
   14002ab60:	mov    rbx,QWORD PTR [rdx+0x10]
   14002ab64:	mov    r9,QWORD PTR [rcx+0x18]
   14002ab68:	mov    r11,QWORD PTR [rdx+0x18]
   14002ab6c:	mov    rax,QWORD PTR [rcx+0x8]
   14002ab70:	xor    r8d,r8d
   14002ab73:	test   rax,rax
   14002ab76:	je     0x14002ab7d
   14002ab78:	mov    rax,QWORD PTR [rax]
   14002ab7b:	jmp    0x14002ab80
   14002ab7d:	mov    rax,r8
   14002ab80:	mov    rdx,QWORD PTR [rdx+0x8]
   14002ab84:	test   rdx,rdx
   14002ab87:	je     0x14002ab8e
   14002ab89:	mov    rdx,QWORD PTR [rdx]
   14002ab8c:	jmp    0x14002ab91
   14002ab8e:	mov    rdx,r8
   14002ab91:	cmp    r10,rbx
   14002ab94:	je     0x14002abc1
   14002ab96:	test   r10,r10
   14002ab99:	je     0x14002abad
   14002ab9b:	test   rbx,rbx
   14002ab9e:	je     0x14002abad
   14002aba0:	mov    eax,DWORD PTR [r10+0x18]
   14002aba4:	sub    eax,DWORD PTR [rbx+0x18]
   14002aba7:	mov    rbx,QWORD PTR [rsp+0x8]
   14002abac:	ret    
   14002abad:	or     eax,0xffffffff
   14002abb0:	mov    ecx,0x1
   14002abb5:	test   r10,r10
   14002abb8:	cmovne eax,ecx
   14002abbb:	mov    rbx,QWORD PTR [rsp+0x8]
   14002abc0:	ret    
   14002abc1:	cmp    r9,r11
   14002abc4:	je     0x14002abf2
   14002abc6:	test   r9,r9
   14002abc9:	je     0x14002abde
   14002abcb:	test   r11,r11
   14002abce:	je     0x14002abde
   14002abd0:	mov    eax,DWORD PTR [r9+0x18]
   14002abd4:	sub    eax,DWORD PTR [r11+0x18]
   14002abd8:	mov    rbx,QWORD PTR [rsp+0x8]
   14002abdd:	ret    
   14002abde:	or     eax,0xffffffff
   14002abe1:	mov    ecx,0x1
   14002abe6:	test   r9,r9
   14002abe9:	cmovne eax,ecx
   14002abec:	mov    rbx,QWORD PTR [rsp+0x8]
   14002abf1:	ret    
   14002abf2:	test   rax,rax
   14002abf5:	jne    0x14002ac02
   14002abf7:	neg    rdx
   14002abfa:	sbb    eax,eax
   14002abfc:	mov    rbx,QWORD PTR [rsp+0x8]
   14002ac01:	ret    
   14002ac02:	test   rdx,rdx
   14002ac05:	jne    0x14002ac12
   14002ac07:	mov    eax,0x1
   14002ac0c:	mov    rbx,QWORD PTR [rsp+0x8]
   14002ac11:	ret    
   14002ac12:	sub    rdx,rax
   14002ac15:	movzx  ecx,BYTE PTR [rax]
   14002ac18:	cmp    cl,BYTE PTR [rax+rdx*1]
   14002ac1b:	jne    0x14002ac2d
   14002ac1d:	inc    rax
   14002ac20:	test   cl,cl
   14002ac22:	jne    0x14002ac15
   14002ac24:	mov    eax,r8d
   14002ac27:	mov    rbx,QWORD PTR [rsp+0x8]
   14002ac2c:	ret    
   14002ac2d:	mov    rbx,QWORD PTR [rsp+0x8]
   14002ac32:	sbb    r8d,r8d
   14002ac35:	or     r8d,0x1
   14002ac39:	mov    eax,r8d
   14002ac3c:	ret    
   14002ac3d:	int3   
   14002ac3e:	int3   
   14002ac3f:	int3   
   14002ac40:	sub    rsp,0x28
   14002ac44:	mov    r8d,DWORD PTR [rdx]
   14002ac47:	shl    r8d,0x1c
   14002ac4b:	sar    r8d,0x1c
   14002ac4f:	dec    r8d
   14002ac52:	je     0x14002ace2
   14002ac58:	dec    r8d
   14002ac5b:	je     0x14002acc4
   14002ac5d:	dec    r8d
   14002ac60:	je     0x14002ac69
   14002ac62:	xor    eax,eax
   14002ac64:	add    rsp,0x28
   14002ac68:	ret    
   14002ac69:	mov    QWORD PTR [rsp+0x30],rbx
   14002ac6e:	mov    rbx,QWORD PTR [rdx+0x40]
   14002ac72:	mov    rdx,QWORD PTR [rip+0x26def]        # 0x140051a68
   14002ac79:	mov    QWORD PTR [rsp+0x38],rsi
   14002ac7e:	mov    QWORD PTR [rsp+0x20],rdi
   14002ac83:	mov    rdi,QWORD PTR [rcx+0x40]
   14002ac87:	lea    rcx,[rip+0x26ab2]        # 0x140051740
   14002ac8e:	call   0x14002c900
   14002ac93:	mov    r8,rbx
   14002ac96:	mov    rdx,rdi
   14002ac99:	mov    rcx,rax
   14002ac9c:	mov    rsi,rax
   14002ac9f:	call   0x14002b190
   14002aca4:	mov    rcx,rsi
   14002aca7:	mov    ebx,eax
   14002aca9:	call   0x14002c860
   14002acae:	mov    rdi,QWORD PTR [rsp+0x20]
   14002acb3:	mov    rsi,QWORD PTR [rsp+0x38]
   14002acb8:	mov    eax,ebx
   14002acba:	mov    rbx,QWORD PTR [rsp+0x30]
   14002acbf:	add    rsp,0x28
   14002acc3:	ret    
   14002acc4:	mov    rax,QWORD PTR [rcx+0x28]
   14002acc8:	mov    r8d,0x4
   14002acce:	mov    rcx,rax
   14002acd1:	call   QWORD PTR [rax]
   14002acd3:	xor    ecx,ecx
   14002acd5:	test   rax,rax
   14002acd8:	setne  cl
   14002acdb:	mov    eax,ecx
   14002acdd:	add    rsp,0x28
   14002ace1:	ret    
   14002ace2:	mov    edx,DWORD PTR [rdx+0x18]
   14002ace5:	call   0x14002a500
   14002acea:	xor    ecx,ecx
   14002acec:	test   rax,rax
   14002acef:	setne  cl
   14002acf2:	mov    eax,ecx
   14002acf4:	add    rsp,0x28
   14002acf8:	ret    
   14002acf9:	int3   
   14002acfa:	int3   
   14002acfb:	int3   
   14002acfc:	int3   
   14002acfd:	int3   
   14002acfe:	int3   
   14002acff:	int3   
   14002ad00:	mov    r8d,DWORD PTR [rdx]
   14002ad03:	shl    r8d,0x1c
   14002ad07:	sar    r8d,0x1c
   14002ad0b:	dec    r8d
   14002ad0e:	je     0x14002ad27
   14002ad10:	dec    r8d
   14002ad13:	je     0x14002ad22
   14002ad15:	dec    r8d
   14002ad18:	jne    0x14002ad2c
   14002ad1a:	mov    rcx,rdx
   14002ad1d:	jmp    0x14002a8b0
   14002ad22:	jmp    0x14002b260
   14002ad27:	jmp    0x14002a0e0
   14002ad2c:	ret    
   14002ad2d:	int3   
   14002ad2e:	int3   
   14002ad2f:	int3   
   14002ad30:	sub    rsp,0x28
   14002ad34:	mov    rcx,QWORD PTR [rcx+0x40]
   14002ad38:	test   rcx,rcx
   14002ad3b:	je     0x14002ad62
   14002ad3d:	mov    rcx,QWORD PTR [rcx+0x20]
   14002ad41:	call   0x14002a490
   14002ad46:	test   rax,rax
   14002ad49:	je     0x14002ad62
   14002ad4b:	mov    rcx,QWORD PTR [rax+0x20]
   14002ad4f:	cmp    QWORD PTR [rcx+0x40],0x0
   14002ad54:	jne    0x14002ad62
   14002ad56:	mov    rax,QWORD PTR [rax+0x8]
   14002ad5a:	mov    rax,QWORD PTR [rax]
   14002ad5d:	add    rsp,0x28
   14002ad61:	ret    
   14002ad62:	xor    eax,eax
   14002ad64:	add    rsp,0x28
   14002ad68:	ret    
   14002ad69:	int3   
   14002ad6a:	int3   
   14002ad6b:	int3   
   14002ad6c:	int3   
   14002ad6d:	int3   
   14002ad6e:	int3   
   14002ad6f:	int3   
   14002ad70:	rex push rbx
   14002ad72:	sub    rsp,0x20
   14002ad76:	mov    rdx,QWORD PTR [rcx+0x18]
   14002ad7a:	mov    rbx,rcx
   14002ad7d:	mov    rdx,QWORD PTR [rdx+0x18]
   14002ad81:	call   0x1400271e0
   14002ad86:	mov    rdx,QWORD PTR [rbx+0x18]
   14002ad8a:	mov    rcx,rbx
   14002ad8d:	mov    rdx,QWORD PTR [rdx+0x8]
   14002ad91:	call   0x1400271e0
   14002ad96:	mov    rdx,QWORD PTR [rbx+0x18]
   14002ad9a:	mov    rcx,rbx
   14002ad9d:	mov    rdx,QWORD PTR [rdx+0x10]
   14002ada1:	call   0x1400271e0
   14002ada6:	mov    rcx,QWORD PTR [rbx+0x18]
   14002adaa:	mov    rcx,QWORD PTR [rcx]
   14002adad:	call   0x14002c860
   14002adb2:	mov    rcx,QWORD PTR [rbx+0x18]
   14002adb6:	add    rsp,0x20
   14002adba:	pop    rbx
   14002adbb:	rex.W jmp QWORD PTR [rip+0x124de]        # 0x14003d2a0
   14002adc2:	int3   
   14002adc3:	int3   
   14002adc4:	int3   
   14002adc5:	int3   
   14002adc6:	int3   
   14002adc7:	int3   
   14002adc8:	int3   
   14002adc9:	int3   
   14002adca:	int3   
   14002adcb:	int3   
   14002adcc:	int3   
   14002adcd:	int3   
   14002adce:	int3   
   14002adcf:	int3   
   14002add0:	mov    r8d,DWORD PTR [rdx]
   14002add3:	shl    r8d,0x1c
   14002add7:	sar    r8d,0x1c
   14002addb:	dec    r8d
   14002adde:	je     0x14002adf4
   14002ade0:	dec    r8d
   14002ade3:	je     0x14002adef
   14002ade5:	dec    r8d
   14002ade8:	jne    0x14002adf9
   14002adea:	jmp    0x14002a640
   14002adef:	jmp    0x14002b420
   14002adf4:	jmp    0x14002a2f0
   14002adf9:	ret    
   14002adfa:	int3   
   14002adfb:	int3   
   14002adfc:	int3   
   14002adfd:	int3   
   14002adfe:	int3   
   14002adff:	int3   
   14002ae00:	mov    rcx,QWORD PTR [rcx+0x30]
   14002ae04:	jmp    0x14002c770
   14002ae09:	int3   
   14002ae0a:	int3   
   14002ae0b:	int3   
   14002ae0c:	int3   
   14002ae0d:	int3   
   14002ae0e:	int3   
   14002ae0f:	int3   
   14002ae10:	mov    QWORD PTR [rsp+0x8],rbx
   14002ae15:	mov    QWORD PTR [rsp+0x10],rbp
   14002ae1a:	mov    QWORD PTR [rsp+0x18],rsi
   14002ae1f:	push   rdi
   14002ae20:	sub    rsp,0x20
   14002ae24:	mov    edx,0x28
   14002ae29:	lea    ecx,[rdx-0x27]
   14002ae2c:	call   QWORD PTR [rip+0x12236]        # 0x14003d068
   14002ae32:	mov    rdx,QWORD PTR [rip+0x26c2f]        # 0x140051a68
   14002ae39:	lea    rcx,[rip+0x268c0]        # 0x140051700
   14002ae40:	mov    rbx,rax
   14002ae43:	call   0x14002c900
   14002ae48:	lea    rcx,[rip+0x16421]        # 0x140041270
   14002ae4f:	mov    QWORD PTR [rbx],rax
   14002ae52:	call   0x140027260
   14002ae57:	lea    rcx,[rip+0x16426]        # 0x140041284
   14002ae5e:	mov    rdi,rax
   14002ae61:	mov    QWORD PTR [rbx+0x18],rax
   14002ae65:	call   0x140027260
   14002ae6a:	lea    rcx,[rip+0x1641b]        # 0x14004128c
   14002ae71:	mov    rsi,rax
   14002ae74:	mov    QWORD PTR [rbx+0x8],rax
   14002ae78:	call   0x140027260
   14002ae7d:	mov    rdx,QWORD PTR [rip+0x2a40c]        # 0x140055290
   14002ae84:	mov    rbp,rax
   14002ae87:	mov    QWORD PTR [rbx+0x10],rax
   14002ae8b:	test   rdx,rdx
   14002ae8e:	je     0x14002aece
   14002ae90:	mov    rdx,QWORD PTR [rdx+0x18]
   14002ae94:	mov    rcx,rdi
   14002ae97:	mov    rdx,QWORD PTR [rdx+0x18]
   14002ae9b:	call   0x140027380
   14002aea0:	mov    rcx,QWORD PTR [rip+0x2a3e9]        # 0x140055290
   14002aea7:	mov    rdx,QWORD PTR [rcx+0x18]
   14002aeab:	mov    rcx,rsi
   14002aeae:	mov    rdx,QWORD PTR [rdx+0x8]
   14002aeb2:	call   0x140027380
   14002aeb7:	mov    rax,QWORD PTR [rip+0x2a3d2]        # 0x140055290
   14002aebe:	mov    rcx,rbp
   14002aec1:	mov    rdx,QWORD PTR [rax+0x18]
   14002aec5:	mov    rdx,QWORD PTR [rdx+0x10]
   14002aec9:	call   0x140027380
   14002aece:	mov    rbp,QWORD PTR [rsp+0x38]
   14002aed3:	mov    rsi,QWORD PTR [rsp+0x40]
   14002aed8:	mov    rax,rbx
   14002aedb:	mov    rbx,QWORD PTR [rsp+0x30]
   14002aee0:	add    rsp,0x20
   14002aee4:	pop    rdi
   14002aee5:	ret    
   14002aee6:	int3   
   14002aee7:	int3   
   14002aee8:	int3   
   14002aee9:	int3   
   14002aeea:	int3   
   14002aeeb:	int3   
   14002aeec:	int3   
   14002aeed:	int3   
   14002aeee:	int3   
   14002aeef:	int3   
   14002aef0:	mov    rcx,QWORD PTR [rcx+0x20]
   14002aef4:	jmp    0x14002c770
   14002aef9:	int3   
   14002aefa:	int3   
   14002aefb:	int3   
   14002aefc:	int3   
   14002aefd:	int3   
   14002aefe:	int3   
   14002aeff:	int3   
   14002af00:	mov    QWORD PTR [rsp+0x8],rbx
   14002af05:	mov    QWORD PTR [rsp+0x10],rsi
   14002af0a:	push   rdi
   14002af0b:	sub    rsp,0x20
   14002af0f:	mov    r8d,edx
   14002af12:	xor    edx,edx
   14002af14:	mov    rdi,rcx
   14002af17:	call   0x14002a6c0
   14002af1c:	xor    edx,edx
   14002af1e:	mov    rcx,rdi
   14002af21:	lea    r8d,[rdx+0x7]
   14002af25:	mov    rsi,rax
   14002af28:	call   0x14002a6c0
   14002af2d:	lea    rdx,[rip+0x1639c]        # 0x1400412d0
   14002af34:	xor    r8d,r8d
   14002af37:	mov    rcx,rax
   14002af3a:	mov    rbx,rax
   14002af3d:	call   0x140027680
   14002af42:	mov    rdx,rdi
   14002af45:	mov    rcx,rbx
   14002af48:	call   0x14002a530
   14002af4d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002af52:	mov    QWORD PTR [rsi+0x40],rax
   14002af56:	mov    rax,QWORD PTR [rax+0x8]
   14002af5a:	mov    QWORD PTR [rax],rsi
   14002af5d:	mov    rax,rsi
   14002af60:	mov    rsi,QWORD PTR [rsp+0x38]
   14002af65:	add    rsp,0x20
   14002af69:	pop    rdi
   14002af6a:	ret    
   14002af6b:	int3   
   14002af6c:	int3   
   14002af6d:	int3   
   14002af6e:	int3   
   14002af6f:	int3   
   14002af70:	rex push rbx
   14002af72:	sub    rsp,0x20
   14002af76:	mov    rbx,QWORD PTR [rcx+0x48]
   14002af7a:	test   rbx,rbx
   14002af7d:	je     0x14002afbe
   14002af7f:	mov    rax,QWORD PTR [rbx+0x10]
   14002af83:	mov    QWORD PTR [rcx+0x48],rax
   14002af87:	mov    rdx,QWORD PTR [rbx+0x8]
   14002af8b:	mov    rax,QWORD PTR [rbx]
   14002af8e:	mov    QWORD PTR [rdx+0x10],rax
   14002af92:	mov    rdx,QWORD PTR [rbx+0x8]
   14002af96:	mov    rax,QWORD PTR [rdx+0x10]
   14002af9a:	mov    QWORD PTR [rdx+0x18],rax
   14002af9e:	mov    rcx,QWORD PTR [rbx+0x8]
   14002afa2:	call   0x14002b3a0
   14002afa7:	mov    rcx,QWORD PTR [rbx]
   14002afaa:	call   0x14002a250
   14002afaf:	mov    rcx,rbx
   14002afb2:	add    rsp,0x20
   14002afb6:	pop    rbx
   14002afb7:	rex.W jmp QWORD PTR [rip+0x122e2]        # 0x14003d2a0
   14002afbe:	add    rsp,0x20
   14002afc2:	pop    rbx
   14002afc3:	ret    
   14002afc4:	int3   
   14002afc5:	int3   
   14002afc6:	int3   
   14002afc7:	int3   
   14002afc8:	int3   
   14002afc9:	int3   
   14002afca:	int3   
   14002afcb:	int3   
   14002afcc:	int3   
   14002afcd:	int3   
   14002afce:	int3   
   14002afcf:	int3   
   14002afd0:	mov    rdx,QWORD PTR [rcx+0x48]
   14002afd4:	jmp    0x14002b0a0
   14002afd9:	int3   
   14002afda:	int3   
   14002afdb:	int3   
   14002afdc:	int3   
   14002afdd:	int3   
   14002afde:	int3   
   14002afdf:	int3   
   14002afe0:	mov    QWORD PTR [rsp+0x8],rbx
   14002afe5:	mov    QWORD PTR [rsp+0x10],rbp
   14002afea:	mov    QWORD PTR [rsp+0x18],rsi
   14002afef:	push   rdi
   14002aff0:	sub    rsp,0x20
   14002aff4:	mov    rax,QWORD PTR [rcx+0x40]
   14002aff8:	mov    rdi,rcx
   14002affb:	mov    rsi,rdx
   14002affe:	mov    rbp,QWORD PTR [rax+0x20]
   14002b002:	mov    rcx,rbp
   14002b005:	call   0x14002a490
   14002b00a:	test   rax,rax
   14002b00d:	je     0x14002b027
   14002b00f:	mov    rdx,QWORD PTR [rax+0x20]
   14002b013:	cmp    QWORD PTR [rdx+0x40],0x0
   14002b018:	je     0x14002b01e
   14002b01a:	xor    ebx,ebx
   14002b01c:	jmp    0x14002b056
   14002b01e:	mov    rax,QWORD PTR [rax+0x8]
   14002b022:	mov    rbx,QWORD PTR [rax]
   14002b025:	jmp    0x14002b056
   14002b027:	mov    r8d,DWORD PTR [rdi]
   14002b02a:	mov    rdx,rdi
   14002b02d:	mov    rcx,rsi
   14002b030:	shl    r8d,0x18
   14002b034:	sar    r8d,0x1c
   14002b038:	call   0x14002a6c0
   14002b03d:	mov    rdx,rsi
   14002b040:	mov    rcx,rbp
   14002b043:	mov    rbx,rax
   14002b046:	call   0x14002a530
   14002b04b:	mov    QWORD PTR [rbx+0x40],rax
   14002b04f:	mov    rcx,QWORD PTR [rax+0x8]
   14002b053:	mov    QWORD PTR [rcx],rbx
   14002b056:	mov    rdx,rbx
   14002b059:	mov    rcx,rdi
   14002b05c:	call   0x14002a640
   14002b061:	mov    rbp,QWORD PTR [rsp+0x38]
   14002b066:	mov    rsi,QWORD PTR [rsp+0x40]
   14002b06b:	mov    rax,rbx
   14002b06e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b073:	add    rsp,0x20
   14002b077:	pop    rdi
   14002b078:	ret    
   14002b079:	int3   
   14002b07a:	int3   
   14002b07b:	int3   
   14002b07c:	int3   
   14002b07d:	int3   
   14002b07e:	int3   
   14002b07f:	int3   
   14002b080:	mov    rax,QWORD PTR [rcx+0x20]
   14002b084:	cmp    QWORD PTR [rax+0x40],0x0
   14002b089:	je     0x14002b08e
   14002b08b:	xor    eax,eax
   14002b08d:	ret    
   14002b08e:	mov    rax,QWORD PTR [rcx+0x8]
   14002b092:	mov    rax,QWORD PTR [rax]
   14002b095:	ret    
   14002b096:	int3   
   14002b097:	int3   
   14002b098:	int3   
   14002b099:	int3   
   14002b09a:	int3   
   14002b09b:	int3   
   14002b09c:	int3   
   14002b09d:	int3   
   14002b09e:	int3   
   14002b09f:	int3   
   14002b0a0:	mov    QWORD PTR [rsp+0x8],rbx
   14002b0a5:	mov    QWORD PTR [rsp+0x10],rbp
   14002b0aa:	mov    QWORD PTR [rsp+0x18],rsi
   14002b0af:	mov    QWORD PTR [rsp+0x20],rdi
   14002b0b4:	push   r14
   14002b0b6:	sub    rsp,0x20
   14002b0ba:	xor    edi,edi
   14002b0bc:	mov    rbx,rdx
   14002b0bf:	mov    rsi,rcx
   14002b0c2:	lea    edx,[rdi+0x18]
   14002b0c5:	lea    ecx,[rdi+0x1]
   14002b0c8:	mov    ebp,edi
   14002b0ca:	call   QWORD PTR [rip+0x11f98]        # 0x14003d068
   14002b0d0:	mov    r8,QWORD PTR [rsi+0x48]
   14002b0d4:	mov    QWORD PTR [rax+0x10],r8
   14002b0d8:	mov    r14,rax
   14002b0db:	test   rbx,rbx
   14002b0de:	je     0x14002b0e7
   14002b0e0:	mov    rdi,QWORD PTR [rbx]
   14002b0e3:	mov    rbp,QWORD PTR [rbx+0x8]
   14002b0e7:	lea    rdx,[rip+0x161a6]        # 0x140041294
   14002b0ee:	mov    r8,rdi
   14002b0f1:	mov    rcx,rsi
   14002b0f4:	call   0x14002a390
   14002b0f9:	mov    r9,rbp
   14002b0fc:	mov    rcx,rsi
   14002b0ff:	mov    r8,rax
   14002b102:	mov    rdx,rax
   14002b105:	mov    QWORD PTR [r14],rax
   14002b108:	call   0x14002b440
   14002b10d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b112:	mov    rbp,QWORD PTR [rsp+0x38]
   14002b117:	mov    rdi,QWORD PTR [rsp+0x48]
   14002b11c:	mov    QWORD PTR [r14+0x8],rax
   14002b120:	mov    QWORD PTR [rsi+0x48],r14
   14002b124:	mov    rsi,QWORD PTR [rsp+0x40]
   14002b129:	add    rsp,0x20
   14002b12d:	pop    r14
   14002b12f:	ret    
   14002b130:	mov    QWORD PTR [rsp+0x8],rbx
   14002b135:	mov    QWORD PTR [rsp+0x10],rsi
   14002b13a:	push   rdi
   14002b13b:	sub    rsp,0x20
   14002b13f:	mov    rbx,rdx
   14002b142:	mov    rdx,QWORD PTR [rip+0x2691f]        # 0x140051a68
   14002b149:	mov    rsi,rcx
   14002b14c:	lea    rcx,[rip+0x265ed]        # 0x140051740
   14002b153:	call   0x14002c900
   14002b158:	mov    r8,rbx
   14002b15b:	mov    rdx,rsi
   14002b15e:	mov    rcx,rax
   14002b161:	mov    rdi,rax
   14002b164:	call   0x14002b190
   14002b169:	mov    rcx,rdi
   14002b16c:	mov    ebx,eax
   14002b16e:	call   0x14002c860
   14002b173:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b178:	mov    eax,ebx
   14002b17a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b17f:	add    rsp,0x20
   14002b183:	pop    rdi
   14002b184:	ret    
   14002b185:	int3   
   14002b186:	int3   
   14002b187:	int3   
   14002b188:	int3   
   14002b189:	int3   
   14002b18a:	int3   
   14002b18b:	int3   
   14002b18c:	int3   
   14002b18d:	int3   
   14002b18e:	int3   
   14002b18f:	int3   
   14002b190:	mov    QWORD PTR [rsp+0x10],rbp
   14002b195:	mov    QWORD PTR [rsp+0x18],rsi
   14002b19a:	push   rdi
   14002b19b:	sub    rsp,0x20
   14002b19f:	mov    rbp,r8
   14002b1a2:	mov    rsi,rdx
   14002b1a5:	mov    rdi,rcx
   14002b1a8:	cmp    rdx,r8
   14002b1ab:	jne    0x14002b1c2
   14002b1ad:	mov    eax,0x1
   14002b1b2:	mov    rbp,QWORD PTR [rsp+0x38]
   14002b1b7:	mov    rsi,QWORD PTR [rsp+0x40]
   14002b1bc:	add    rsp,0x20
   14002b1c0:	pop    rdi
   14002b1c1:	ret    
   14002b1c2:	mov    rcx,QWORD PTR [rdx+0x20]
   14002b1c6:	mov    rcx,QWORD PTR [rcx+0x38]
   14002b1ca:	call   0x14002b710
   14002b1cf:	test   rax,rax
   14002b1d2:	jne    0x14002b1ad
   14002b1d4:	lea    r8d,[rax+0x1]
   14002b1d8:	mov    rdx,rsi
   14002b1db:	mov    rcx,rdi
   14002b1de:	mov    QWORD PTR [rsp+0x30],rbx
   14002b1e3:	call   QWORD PTR [rdi]
   14002b1e5:	mov    rcx,QWORD PTR [rsi+0x20]
   14002b1e9:	mov    rdx,rsi
   14002b1ec:	call   0x14002b830
   14002b1f1:	mov    rbx,rax
   14002b1f4:	test   rax,rax
   14002b1f7:	je     0x14002b23b
   14002b1f9:	nop    DWORD PTR [rax+0x0]
   14002b200:	mov    rdx,QWORD PTR [rbx+0x10]
   14002b204:	mov    r8d,0x4
   14002b20a:	mov    rcx,rdi
   14002b20d:	call   QWORD PTR [rdi]
   14002b20f:	test   rax,rax
   14002b212:	jne    0x14002b227
   14002b214:	mov    rdx,QWORD PTR [rbx+0x10]
   14002b218:	mov    r8,rbp
   14002b21b:	mov    rcx,rdi
   14002b21e:	call   0x14002b190
   14002b223:	test   eax,eax
   14002b225:	jne    0x14002b252
   14002b227:	mov    rcx,QWORD PTR [rsi+0x20]
   14002b22b:	mov    rdx,rbx
   14002b22e:	call   0x14002b9e0
   14002b233:	mov    rbx,rax
   14002b236:	test   rax,rax
   14002b239:	jne    0x14002b200
   14002b23b:	xor    eax,eax
   14002b23d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b242:	mov    rbp,QWORD PTR [rsp+0x38]
   14002b247:	mov    rsi,QWORD PTR [rsp+0x40]
   14002b24c:	add    rsp,0x20
   14002b250:	pop    rdi
   14002b251:	ret    
   14002b252:	mov    eax,0x1
   14002b257:	jmp    0x14002b23d
   14002b259:	int3   
   14002b25a:	int3   
   14002b25b:	int3   
   14002b25c:	int3   
   14002b25d:	int3   
   14002b25e:	int3   
   14002b25f:	int3   
   14002b260:	mov    QWORD PTR [rsp+0x8],rcx
   14002b265:	push   rbp
   14002b266:	push   rdi
   14002b267:	sub    rsp,0x28
   14002b26b:	mov    rax,QWORD PTR [rcx+0x28]
   14002b26f:	mov    rbp,rcx
   14002b272:	mov    r8d,0x4
   14002b278:	mov    rcx,rax
   14002b27b:	mov    rdi,rdx
   14002b27e:	call   QWORD PTR [rax]
   14002b280:	test   rax,rax
   14002b283:	jne    0x14002b2b5
   14002b285:	call   QWORD PTR [rip+0x12045]        # 0x14003d2d0
   14002b28b:	lea    rdx,[rip+0x1605e]        # 0x1400412f0
   14002b292:	lea    rcx,[rax+0x60]
   14002b296:	call   QWORD PTR [rip+0x12024]        # 0x14003d2c0
   14002b29c:	mov    rcx,QWORD PTR [rbp+0x28]
   14002b2a0:	lea    rdx,[rip+0x8a9]        # 0x14002bb50
   14002b2a7:	xor    r8d,r8d
   14002b2aa:	add    rsp,0x28
   14002b2ae:	pop    rdi
   14002b2af:	pop    rbp
   14002b2b0:	jmp    0x14002d610
   14002b2b5:	test   BYTE PTR [rbp+0x0],0x40
   14002b2b9:	jne    0x14002b35e
   14002b2bf:	mov    rdx,QWORD PTR [rbp+0x40]
   14002b2c3:	mov    QWORD PTR [rsp+0x48],rbx
   14002b2c8:	mov    rax,QWORD PTR [rdx+0x20]
   14002b2cc:	mov    rcx,rax
   14002b2cf:	mov    QWORD PTR [rsp+0x50],rax
   14002b2d4:	call   0x14002b830
   14002b2d9:	mov    rbx,rax
   14002b2dc:	test   rax,rax
   14002b2df:	je     0x14002b359
   14002b2e1:	mov    rbp,QWORD PTR [rsp+0x50]
   14002b2e6:	mov    QWORD PTR [rsp+0x20],rsi
   14002b2eb:	nop    DWORD PTR [rax+rax*1+0x0]
   14002b2f0:	mov    rcx,QWORD PTR [rbx+0x10]
   14002b2f4:	call   0x14002b080
   14002b2f9:	mov    r8d,0x4
   14002b2ff:	mov    rdx,rdi
   14002b302:	mov    r9,QWORD PTR [rax+0x28]
   14002b306:	mov    rsi,rax
   14002b309:	mov    rcx,r9
   14002b30c:	call   QWORD PTR [r9]
   14002b30f:	test   rax,rax
   14002b312:	je     0x14002b31f
   14002b314:	mov    rdx,rdi
   14002b317:	mov    rcx,rsi
   14002b31a:	call   0x14002b260
   14002b31f:	mov    rax,QWORD PTR [rbp+0x30]
   14002b323:	mov    r8d,0x8
   14002b329:	mov    rdx,rbx
   14002b32c:	mov    rcx,rax
   14002b32f:	call   QWORD PTR [rax]
   14002b331:	test   rax,rax
   14002b334:	je     0x14002b347
   14002b336:	mov    rcx,QWORD PTR [rbx+0x18]
   14002b33a:	cmp    QWORD PTR [rax+0x18],rcx
   14002b33e:	mov    ecx,0x0
   14002b343:	cmovne rax,rcx
   14002b347:	mov    rbx,rax
   14002b34a:	test   rax,rax
   14002b34d:	jne    0x14002b2f0
   14002b34f:	mov    rbp,QWORD PTR [rsp+0x40]
   14002b354:	mov    rsi,QWORD PTR [rsp+0x20]
   14002b359:	mov    rbx,QWORD PTR [rsp+0x48]
   14002b35e:	mov    rax,QWORD PTR [rbp+0x28]
   14002b362:	mov    r8d,0x2
   14002b368:	mov    rdx,rdi
   14002b36b:	mov    rcx,rax
   14002b36e:	call   QWORD PTR [rax]
   14002b370:	mov    rax,QWORD PTR [rbp+0x30]
   14002b374:	mov    r8d,0x2
   14002b37a:	mov    rcx,rax
   14002b37d:	mov    rdx,rdi
   14002b380:	call   QWORD PTR [rax]
   14002b382:	cmp    rbp,QWORD PTR [rbp+0x38]
   14002b386:	jne    0x14002b396
   14002b388:	mov    rcx,rdi
   14002b38b:	add    rsp,0x28
   14002b38f:	pop    rdi
   14002b390:	pop    rbp
   14002b391:	jmp    0x14002b3a0
   14002b396:	add    rsp,0x28
   14002b39a:	pop    rdi
   14002b39b:	pop    rbp
   14002b39c:	ret    
   14002b39d:	int3   
   14002b39e:	int3   
   14002b39f:	int3   
   14002b3a0:	mov    QWORD PTR [rsp+0x8],rbx
   14002b3a5:	mov    QWORD PTR [rsp+0x10],rsi
   14002b3aa:	push   rdi
   14002b3ab:	sub    rsp,0x20
   14002b3af:	mov    rdi,rcx
   14002b3b2:	call   0x140027490
   14002b3b7:	or     DWORD PTR [rdi],0xf
   14002b3ba:	mov    rax,QWORD PTR [rdi+0x18]
   14002b3be:	xor    ebx,ebx
   14002b3c0:	mov    rdx,QWORD PTR [rax+0x20]
   14002b3c4:	mov    rax,QWORD PTR [rdx+0x18]
   14002b3c8:	mov    rcx,QWORD PTR [rax+0x10]
   14002b3cc:	mov    rcx,QWORD PTR [rcx+0x8]
   14002b3d0:	call   0x14002c770
   14002b3d5:	movsxd rsi,eax
   14002b3d8:	test   eax,eax
   14002b3da:	jle    0x14002b3f5
   14002b3dc:	nop    DWORD PTR [rax+0x0]
   14002b3e0:	mov    rcx,QWORD PTR [rdi+0x8]
   14002b3e4:	mov    rcx,QWORD PTR [rcx+rbx*8]
   14002b3e8:	call   0x14002bc90
   14002b3ed:	inc    rbx
   14002b3f0:	cmp    rbx,rsi
   14002b3f3:	jl     0x14002b3e0
   14002b3f5:	mov    rcx,QWORD PTR [rdi+0x8]
   14002b3f9:	call   QWORD PTR [rip+0x11ea1]        # 0x14003d2a0
   14002b3ff:	mov    rcx,rdi
   14002b402:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b407:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b40c:	add    rsp,0x20
   14002b410:	pop    rdi
   14002b411:	rex.W jmp QWORD PTR [rip+0x11e88]        # 0x14003d2a0
   14002b418:	int3   
   14002b419:	int3   
   14002b41a:	int3   
   14002b41b:	int3   
   14002b41c:	int3   
   14002b41d:	int3   
   14002b41e:	int3   
   14002b41f:	int3   
   14002b420:	mov    r8d,DWORD PTR [rdx]
   14002b423:	mov    eax,r8d
   14002b426:	and    al,0xf0
   14002b428:	cmp    al,0x10
   14002b42a:	jne    0x14002b43a
   14002b42c:	and    r8d,0xffffff2f
   14002b433:	or     r8d,0x20
   14002b437:	mov    DWORD PTR [rdx],r8d
   14002b43a:	jmp    0x14002ba20
   14002b43f:	int3   
   14002b440:	mov    QWORD PTR [rsp+0x10],rbx
   14002b445:	mov    QWORD PTR [rsp+0x18],rbp
   14002b44a:	mov    QWORD PTR [rsp+0x20],rsi
   14002b44f:	push   rdi
   14002b450:	push   r13
   14002b452:	push   r14
   14002b454:	sub    rsp,0x20
   14002b458:	mov    rbx,rdx
   14002b45b:	movsxd rdx,DWORD PTR [rip+0x29e26]        # 0x140055288
   14002b462:	mov    r13,rcx
   14002b465:	mov    ecx,0x1
   14002b46a:	mov    rsi,r9
   14002b46d:	mov    rdi,r8
   14002b470:	call   QWORD PTR [rip+0x11bf2]        # 0x14003d068
   14002b476:	mov    rdx,QWORD PTR [r13+0x18]
   14002b47a:	mov    ecx,DWORD PTR [rdx+0x24]
   14002b47d:	and    DWORD PTR [rax],0xfffffff2
   14002b480:	or     DWORD PTR [rax],0x2
   14002b483:	mov    DWORD PTR [rax+0x20],ecx
   14002b486:	inc    ecx
   14002b488:	mov    rbp,rax
   14002b48b:	mov    DWORD PTR [rdx+0x24],ecx
   14002b48e:	mov    rcx,QWORD PTR [r13+0x18]
   14002b492:	mov    QWORD PTR [rax+0x18],rbx
   14002b496:	mov    rcx,QWORD PTR [rcx+0x10]
   14002b49a:	mov    QWORD PTR [rax+0x10],rdi
   14002b49e:	mov    rcx,QWORD PTR [rcx+0x8]
   14002b4a2:	call   0x14002c770
   14002b4a7:	xor    ebx,ebx
   14002b4a9:	movsxd rdi,eax
   14002b4ac:	test   eax,eax
   14002b4ae:	je     0x14002b4c2
   14002b4b0:	lea    edx,[rbx+0x8]
   14002b4b3:	mov    rcx,rdi
   14002b4b6:	call   QWORD PTR [rip+0x11bac]        # 0x14003d068
   14002b4bc:	mov    QWORD PTR [rbp+0x8],rax
   14002b4c0:	jmp    0x14002b4c6
   14002b4c2:	mov    QWORD PTR [rbp+0x8],rbx
   14002b4c6:	mov    r14,rdi
   14002b4c9:	test   edi,edi
   14002b4cb:	jle    0x14002b521
   14002b4cd:	mov    QWORD PTR [rsp+0x40],r15
   14002b4d2:	mov    r15,QWORD PTR [rbp+0x8]
   14002b4d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002b4e0:	lea    rdi,[rbx*8+0x0]
   14002b4e8:	test   rsi,rsi
   14002b4eb:	je     0x14002b4f7
   14002b4ed:	mov    rax,QWORD PTR [rsi+0x8]
   14002b4f1:	mov    rcx,QWORD PTR [rdi+rax*1]
   14002b4f5:	jmp    0x14002b50b
   14002b4f7:	mov    rax,QWORD PTR [r13+0x18]
   14002b4fb:	mov    rcx,QWORD PTR [rax+0x10]
   14002b4ff:	mov    rax,QWORD PTR [rcx+0x10]
   14002b503:	mov    rcx,QWORD PTR [rax+rdi*1]
   14002b507:	mov    rcx,QWORD PTR [rcx+0x8]
   14002b50b:	call   0x14002bbb0
   14002b510:	inc    rbx
   14002b513:	mov    QWORD PTR [r15+rdi*1],rax
   14002b517:	cmp    rbx,r14
   14002b51a:	jl     0x14002b4e0
   14002b51c:	mov    r15,QWORD PTR [rsp+0x40]
   14002b521:	mov    rbx,QWORD PTR [rsp+0x48]
   14002b526:	mov    rsi,QWORD PTR [rsp+0x58]
   14002b52b:	mov    rax,rbp
   14002b52e:	mov    rbp,QWORD PTR [rsp+0x50]
   14002b533:	add    rsp,0x20
   14002b537:	pop    r14
   14002b539:	pop    r13
   14002b53b:	pop    rdi
   14002b53c:	ret    
   14002b53d:	int3   
   14002b53e:	int3   
   14002b53f:	int3   
   14002b540:	mov    QWORD PTR [rsp+0x8],rbx
   14002b545:	mov    QWORD PTR [rsp+0x10],rbp
   14002b54a:	mov    QWORD PTR [rsp+0x18],rsi
   14002b54f:	push   rdi
   14002b550:	push   r14
   14002b552:	push   r15
   14002b554:	sub    rsp,0xa0
   14002b55b:	xor    r15b,r15b
   14002b55e:	test   BYTE PTR [rcx],0x10
   14002b561:	mov    rsi,r8
   14002b564:	mov    rbp,rdx
   14002b567:	mov    rbx,rcx
   14002b56a:	jne    0x14002b577
   14002b56c:	cmp    rdx,r8
   14002b56f:	jbe    0x14002b577
   14002b571:	mov    rbp,r8
   14002b574:	mov    rsi,rdx
   14002b577:	mov    rax,QWORD PTR [rcx+0x48]
   14002b57b:	mov    rcx,QWORD PTR [rax+0x8]
   14002b57f:	mov    rax,QWORD PTR [rcx+0x8]
   14002b583:	mov    r14,QWORD PTR [rax]
   14002b586:	mov    QWORD PTR [rcx+0x10],rsi
   14002b58a:	mov    rax,QWORD PTR [rbx+0x48]
   14002b58e:	mov    rcx,QWORD PTR [rax+0x8]
   14002b592:	mov    QWORD PTR [rcx+0x18],rbp
   14002b596:	test   BYTE PTR [rbx],0x20
   14002b599:	je     0x14002b5fd
   14002b59b:	mov    rax,QWORD PTR [rbx+0x48]
   14002b59f:	mov    r8d,0x4
   14002b5a5:	mov    rcx,QWORD PTR [rax+0x8]
   14002b5a9:	mov    rax,QWORD PTR [rcx+0x8]
   14002b5ad:	lea    rcx,[rip+0x11e64]        # 0x14003d418
   14002b5b4:	mov    QWORD PTR [rax],rcx
   14002b5b7:	mov    rax,QWORD PTR [rbx+0x38]
   14002b5bb:	mov    rdx,QWORD PTR [rbx+0x48]
   14002b5bf:	mov    r9,QWORD PTR [rax+0x28]
   14002b5c3:	mov    rdx,QWORD PTR [rdx+0x8]
   14002b5c7:	mov    rcx,r9
   14002b5ca:	call   QWORD PTR [r9]
   14002b5cd:	mov    rdi,rax
   14002b5d0:	test   rax,rax
   14002b5d3:	je     0x14002b688
   14002b5d9:	cmp    QWORD PTR [rax+0x18],rbp
   14002b5dd:	jne    0x14002b6db
   14002b5e3:	cmp    QWORD PTR [rax+0x10],rsi
   14002b5e7:	jne    0x14002b6db
   14002b5ed:	mov    rdx,rax
   14002b5f0:	mov    rcx,rbx
   14002b5f3:	call   0x14002ba20
   14002b5f8:	jmp    0x14002b6db
   14002b5fd:	cmp    BYTE PTR [r14],0x0
   14002b601:	je     0x14002b651
   14002b603:	mov    rax,QWORD PTR [rbx+0x38]
   14002b607:	mov    rdx,QWORD PTR [rbx+0x48]
   14002b60b:	mov    r8d,0x4
   14002b611:	mov    r9,QWORD PTR [rax+0x28]
   14002b615:	mov    rdx,QWORD PTR [rdx+0x8]
   14002b619:	mov    rcx,r9
   14002b61c:	call   QWORD PTR [r9]
   14002b61f:	mov    rdi,rax
   14002b622:	test   rax,rax
   14002b625:	je     0x14002b64c
   14002b627:	mov    ecx,DWORD PTR [rax]
   14002b629:	mov    eax,ecx
   14002b62b:	and    al,0xf0
   14002b62d:	cmp    al,0x10
   14002b62f:	jne    0x14002b63c
   14002b631:	and    ecx,0xffffff2f
   14002b637:	or     ecx,0x20
   14002b63a:	mov    DWORD PTR [rdi],ecx
   14002b63c:	mov    rdx,rdi
   14002b63f:	mov    rcx,rbx
   14002b642:	call   0x14002ba20
   14002b647:	jmp    0x14002b6db
   14002b64c:	mov    r15b,0x2
   14002b64f:	jmp    0x14002b688
   14002b651:	mov    eax,DWORD PTR [rip+0x28861]        # 0x140053eb8
   14002b657:	lea    rdx,[rip+0x11f36]        # 0x14003d594
   14002b65e:	lea    rcx,[rsp+0x20]
   14002b663:	mov    r8d,eax
   14002b666:	inc    eax
   14002b668:	mov    DWORD PTR [rip+0x2884a],eax        # 0x140053eb8
   14002b66e:	call   QWORD PTR [rip+0x11a3c]        # 0x14003d0b0
   14002b674:	mov    rax,QWORD PTR [rbx+0x48]
   14002b678:	mov    rcx,QWORD PTR [rax+0x8]
   14002b67c:	mov    rax,QWORD PTR [rcx+0x8]
   14002b680:	lea    rcx,[rsp+0x20]
   14002b685:	mov    QWORD PTR [rax],rcx
   14002b688:	mov    r9,QWORD PTR [rbx+0x48]
   14002b68c:	mov    r8,rsi
   14002b68f:	mov    rdx,rbp
   14002b692:	mov    r9,QWORD PTR [r9+0x8]
   14002b696:	mov    rcx,rbx
   14002b699:	call   0x14002b440
   14002b69e:	mov    rcx,rbx
   14002b6a1:	mov    rdx,rax
   14002b6a4:	mov    rdi,rax
   14002b6a7:	call   0x14002ba20
   14002b6ac:	mov    rax,QWORD PTR [rbx+0x48]
   14002b6b0:	mov    rcx,QWORD PTR [rax+0x8]
   14002b6b4:	mov    rax,QWORD PTR [rax]
   14002b6b7:	mov    QWORD PTR [rcx+0x18],rax
   14002b6bb:	mov    rax,QWORD PTR [rbx+0x48]
   14002b6bf:	mov    rcx,QWORD PTR [rax+0x8]
   14002b6c3:	mov    rax,QWORD PTR [rcx+0x18]
   14002b6c7:	mov    QWORD PTR [rcx+0x10],rax
   14002b6cb:	movsx  eax,r15b
   14002b6cf:	shl    eax,0x4
   14002b6d2:	xor    eax,DWORD PTR [rdi]
   14002b6d4:	and    eax,0xf0
   14002b6d9:	xor    DWORD PTR [rdi],eax
   14002b6db:	mov    rax,QWORD PTR [rbx+0x48]
   14002b6df:	lea    r11,[rsp+0xa0]
   14002b6e7:	mov    rcx,QWORD PTR [rax+0x8]
   14002b6eb:	mov    rbx,QWORD PTR [r11+0x20]
   14002b6ef:	mov    rbp,QWORD PTR [r11+0x28]
   14002b6f3:	mov    rax,QWORD PTR [rcx+0x8]
   14002b6f7:	mov    rsi,QWORD PTR [r11+0x30]
   14002b6fb:	mov    QWORD PTR [rax],r14
   14002b6fe:	mov    rax,rdi
   14002b701:	mov    rsp,r11
   14002b704:	pop    r15
   14002b706:	pop    r14
   14002b708:	pop    rdi
   14002b709:	ret    
   14002b70a:	int3   
   14002b70b:	int3   
   14002b70c:	int3   
   14002b70d:	int3   
   14002b70e:	int3   
   14002b70f:	int3   
   14002b710:	mov    QWORD PTR [rsp+0x8],rbx
   14002b715:	push   rdi
   14002b716:	sub    rsp,0x50
   14002b71a:	test   BYTE PTR [rcx],0x10
   14002b71d:	mov    rbx,r8
   14002b720:	mov    rdi,rdx
   14002b723:	jne    0x14002b730
   14002b725:	cmp    rdx,rbx
   14002b728:	jbe    0x14002b730
   14002b72a:	mov    rdi,rbx
   14002b72d:	mov    rbx,rdx
   14002b730:	mov    rax,QWORD PTR [rcx+0x28]
   14002b734:	lea    rdx,[rsp+0x20]
   14002b739:	mov    r8d,0x8
   14002b73f:	mov    rcx,rax
   14002b742:	mov    QWORD PTR [rsp+0x38],rdi
   14002b747:	mov    QWORD PTR [rsp+0x30],rbx
   14002b74c:	mov    QWORD PTR [rsp+0x28],0x0
   14002b755:	call   QWORD PTR [rax]
   14002b757:	test   rax,rax
   14002b75a:	je     0x14002b76a
   14002b75c:	cmp    QWORD PTR [rax+0x18],rdi
   14002b760:	jne    0x14002b768
   14002b762:	cmp    QWORD PTR [rax+0x10],rbx
   14002b766:	je     0x14002b76a
   14002b768:	xor    eax,eax
   14002b76a:	mov    rbx,QWORD PTR [rsp+0x60]
   14002b76f:	add    rsp,0x50
   14002b773:	pop    rdi
   14002b774:	ret    
   14002b775:	int3   
   14002b776:	int3   
   14002b777:	int3   
   14002b778:	int3   
   14002b779:	int3   
   14002b77a:	int3   
   14002b77b:	int3   
   14002b77c:	int3   
   14002b77d:	int3   
   14002b77e:	int3   
   14002b77f:	int3   
   14002b780:	mov    QWORD PTR [rsp+0x8],rbx
   14002b785:	push   rdi
   14002b786:	sub    rsp,0x20
   14002b78a:	mov    rbx,rdx
   14002b78d:	mov    rdi,rcx
   14002b790:	test   rcx,rcx
   14002b793:	je     0x14002b7b9
   14002b795:	test   rdx,rdx
   14002b798:	je     0x14002b7b9
   14002b79a:	call   0x14002b830
   14002b79f:	test   rax,rax
   14002b7a2:	jne    0x14002b7bb
   14002b7a4:	mov    rdx,rbx
   14002b7a7:	mov    rcx,rdi
   14002b7aa:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b7af:	add    rsp,0x20
   14002b7b3:	pop    rdi
   14002b7b4:	jmp    0x14002b7d0
   14002b7b9:	xor    eax,eax
   14002b7bb:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b7c0:	add    rsp,0x20
   14002b7c4:	pop    rdi
   14002b7c5:	ret    
   14002b7c6:	int3   
   14002b7c7:	int3   
   14002b7c8:	int3   
   14002b7c9:	int3   
   14002b7ca:	int3   
   14002b7cb:	int3   
   14002b7cc:	int3   
   14002b7cd:	int3   
   14002b7ce:	int3   
   14002b7cf:	int3   
   14002b7d0:	mov    QWORD PTR [rsp+0x8],rbx
   14002b7d5:	push   rdi
   14002b7d6:	sub    rsp,0x50
   14002b7da:	xor    edi,edi
   14002b7dc:	mov    rbx,rdx
   14002b7df:	test   rcx,rcx
   14002b7e2:	je     0x14002b822
   14002b7e4:	test   rdx,rdx
   14002b7e7:	je     0x14002b822
   14002b7e9:	mov    rax,QWORD PTR [rcx+0x28]
   14002b7ed:	mov    QWORD PTR [rsp+0x30],rdx
   14002b7f2:	lea    r8d,[rdi+0x8]
   14002b7f6:	lea    rdx,[rsp+0x20]
   14002b7fb:	mov    rcx,rax
   14002b7fe:	mov    QWORD PTR [rsp+0x38],rdi
   14002b803:	mov    QWORD PTR [rsp+0x28],rdi
   14002b808:	call   QWORD PTR [rax]
   14002b80a:	test   rax,rax
   14002b80d:	je     0x14002b825
   14002b80f:	cmp    QWORD PTR [rax+0x10],rbx
   14002b813:	cmovne rax,rdi
   14002b817:	mov    rbx,QWORD PTR [rsp+0x60]
   14002b81c:	add    rsp,0x50
   14002b820:	pop    rdi
   14002b821:	ret    
   14002b822:	mov    rax,rdi
   14002b825:	mov    rbx,QWORD PTR [rsp+0x60]
   14002b82a:	add    rsp,0x50
   14002b82e:	pop    rdi
   14002b82f:	ret    
   14002b830:	mov    QWORD PTR [rsp+0x8],rbx
   14002b835:	push   rdi
   14002b836:	sub    rsp,0x50
   14002b83a:	xor    edi,edi
   14002b83c:	mov    rbx,rdx
   14002b83f:	test   rcx,rcx
   14002b842:	je     0x14002b882
   14002b844:	test   rdx,rdx
   14002b847:	je     0x14002b882
   14002b849:	mov    rax,QWORD PTR [rcx+0x30]
   14002b84d:	mov    QWORD PTR [rsp+0x38],rdx
   14002b852:	lea    r8d,[rdi+0x8]
   14002b856:	lea    rdx,[rsp+0x20]
   14002b85b:	mov    rcx,rax
   14002b85e:	mov    QWORD PTR [rsp+0x30],rdi
   14002b863:	mov    QWORD PTR [rsp+0x28],rdi
   14002b868:	call   QWORD PTR [rax]
   14002b86a:	test   rax,rax
   14002b86d:	je     0x14002b885
   14002b86f:	cmp    QWORD PTR [rax+0x18],rbx
   14002b873:	cmovne rax,rdi
   14002b877:	mov    rbx,QWORD PTR [rsp+0x60]
   14002b87c:	add    rsp,0x50
   14002b880:	pop    rdi
   14002b881:	ret    
   14002b882:	mov    rax,rdi
   14002b885:	mov    rbx,QWORD PTR [rsp+0x60]
   14002b88a:	add    rsp,0x50
   14002b88e:	pop    rdi
   14002b88f:	ret    
   14002b890:	mov    QWORD PTR [rsp+0x8],rbx
   14002b895:	mov    QWORD PTR [rsp+0x10],rsi
   14002b89a:	push   rdi
   14002b89b:	sub    rsp,0x20
   14002b89f:	xor    esi,esi
   14002b8a1:	mov    rbx,r8
   14002b8a4:	mov    rdi,rcx
   14002b8a7:	mov    eax,esi
   14002b8a9:	test   rcx,rcx
   14002b8ac:	je     0x14002b98f
   14002b8b2:	test   rdx,rdx
   14002b8b5:	je     0x14002b98f
   14002b8bb:	test   rbx,rbx
   14002b8be:	je     0x14002b98f
   14002b8c4:	cmp    QWORD PTR [rdx+0x18],rbx
   14002b8c8:	jne    0x14002b937
   14002b8ca:	mov    rax,QWORD PTR [rcx+0x30]
   14002b8ce:	lea    r8d,[rsi+0x8]
   14002b8d2:	mov    rcx,rax
   14002b8d5:	call   QWORD PTR [rax]
   14002b8d7:	test   rax,rax
   14002b8da:	je     0x14002b8e6
   14002b8dc:	cmp    QWORD PTR [rax+0x18],rbx
   14002b8e0:	je     0x14002b98f
   14002b8e6:	mov    rdx,rbx
   14002b8e9:	mov    rcx,rdi
   14002b8ec:	call   0x14002b7d0
   14002b8f1:	test   rax,rax
   14002b8f4:	je     0x14002b98f
   14002b8fa:	nop    WORD PTR [rax+rax*1+0x0]
   14002b900:	mov    rcx,QWORD PTR [rax+0x10]
   14002b904:	cmp    rcx,QWORD PTR [rax+0x18]
   14002b908:	jne    0x14002b94c
   14002b90a:	cmp    rcx,rbx
   14002b90d:	jne    0x14002b94c
   14002b90f:	mov    r9,QWORD PTR [rdi+0x28]
   14002b913:	mov    r8d,0x8
   14002b919:	mov    rdx,rax
   14002b91c:	mov    rcx,r9
   14002b91f:	call   QWORD PTR [r9]
   14002b922:	test   rax,rax
   14002b925:	jne    0x14002b900
   14002b927:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b92c:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b931:	add    rsp,0x20
   14002b935:	pop    rdi
   14002b936:	ret    
   14002b937:	cmp    QWORD PTR [rdx+0x10],rbx
   14002b93b:	jne    0x14002b98f
   14002b93d:	mov    rax,QWORD PTR [rcx+0x28]
   14002b941:	mov    r8d,0x8
   14002b947:	mov    rcx,rax
   14002b94a:	call   QWORD PTR [rax]
   14002b94c:	test   rax,rax
   14002b94f:	je     0x14002b98f
   14002b951:	mov    rcx,QWORD PTR [rax+0x10]
   14002b955:	cmp    rcx,QWORD PTR [rax+0x18]
   14002b959:	jne    0x14002b988
   14002b95b:	cmp    rcx,rbx
   14002b95e:	jne    0x14002b98b
   14002b960:	mov    r9,QWORD PTR [rdi+0x28]
   14002b964:	mov    r8d,0x8
   14002b96a:	mov    rdx,rax
   14002b96d:	mov    rcx,r9
   14002b970:	call   QWORD PTR [r9]
   14002b973:	test   rax,rax
   14002b976:	jne    0x14002b951
   14002b978:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b97d:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b982:	add    rsp,0x20
   14002b986:	pop    rdi
   14002b987:	ret    
   14002b988:	cmp    rcx,rbx
   14002b98b:	cmovne rax,rsi
   14002b98f:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b994:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b999:	add    rsp,0x20
   14002b99d:	pop    rdi
   14002b99e:	ret    
   14002b99f:	int3   
   14002b9a0:	rex push rbx
   14002b9a2:	sub    rsp,0x20
   14002b9a6:	mov    rax,QWORD PTR [rcx+0x28]
   14002b9aa:	mov    r8d,0x8
   14002b9b0:	mov    rbx,rdx
   14002b9b3:	mov    rcx,rax
   14002b9b6:	call   QWORD PTR [rax]
   14002b9b8:	test   rax,rax
   14002b9bb:	je     0x14002b9cb
   14002b9bd:	mov    rcx,QWORD PTR [rbx+0x10]
   14002b9c1:	xor    edx,edx
   14002b9c3:	cmp    QWORD PTR [rax+0x10],rcx
   14002b9c7:	cmovne rax,rdx
   14002b9cb:	add    rsp,0x20
   14002b9cf:	pop    rbx
   14002b9d0:	ret    
   14002b9d1:	int3   
   14002b9d2:	int3   
   14002b9d3:	int3   
   14002b9d4:	int3   
   14002b9d5:	int3   
   14002b9d6:	int3   
   14002b9d7:	int3   
   14002b9d8:	int3   
   14002b9d9:	int3   
   14002b9da:	int3   
   14002b9db:	int3   
   14002b9dc:	int3   
   14002b9dd:	int3   
   14002b9de:	int3   
   14002b9df:	int3   
   14002b9e0:	rex push rbx
   14002b9e2:	sub    rsp,0x20
   14002b9e6:	mov    rax,QWORD PTR [rcx+0x30]
   14002b9ea:	mov    r8d,0x8
   14002b9f0:	mov    rbx,rdx
   14002b9f3:	mov    rcx,rax
   14002b9f6:	call   QWORD PTR [rax]
   14002b9f8:	test   rax,rax
   14002b9fb:	je     0x14002ba0b
   14002b9fd:	mov    rcx,QWORD PTR [rbx+0x18]
   14002ba01:	xor    edx,edx
   14002ba03:	cmp    QWORD PTR [rax+0x18],rcx
   14002ba07:	cmovne rax,rdx
   14002ba0b:	add    rsp,0x20
   14002ba0f:	pop    rbx
   14002ba10:	ret    
   14002ba11:	int3   
   14002ba12:	int3   
   14002ba13:	int3   
   14002ba14:	int3   
   14002ba15:	int3   
   14002ba16:	int3   
   14002ba17:	int3   
   14002ba18:	int3   
   14002ba19:	int3   
   14002ba1a:	int3   
   14002ba1b:	int3   
   14002ba1c:	int3   
   14002ba1d:	int3   
   14002ba1e:	int3   
   14002ba1f:	int3   
   14002ba20:	mov    QWORD PTR [rsp+0x18],rbx
   14002ba25:	push   rdi
   14002ba26:	sub    rsp,0x20
   14002ba2a:	mov    rax,QWORD PTR [rcx+0x28]
   14002ba2e:	mov    rbx,rcx
   14002ba31:	mov    r8d,0x4
   14002ba37:	mov    rcx,rax
   14002ba3a:	mov    rdi,rdx
   14002ba3d:	call   QWORD PTR [rax]
   14002ba3f:	test   rax,rax
   14002ba42:	jne    0x14002bb39
   14002ba48:	mov    rdx,QWORD PTR [rdi+0x18]
   14002ba4c:	mov    rcx,rbx
   14002ba4f:	call   0x14002a2f0
   14002ba54:	mov    rdx,QWORD PTR [rdi+0x10]
   14002ba58:	mov    rcx,rbx
   14002ba5b:	call   0x14002a2f0
   14002ba60:	mov    rax,QWORD PTR [rbx+0x30]
   14002ba64:	mov    r8d,0x1
   14002ba6a:	mov    rcx,rax
   14002ba6d:	mov    rdx,rdi
   14002ba70:	call   QWORD PTR [rax]
   14002ba72:	mov    rax,QWORD PTR [rbx+0x28]
   14002ba76:	mov    r8d,0x1
   14002ba7c:	mov    rcx,rax
   14002ba7f:	mov    rdx,rdi
   14002ba82:	call   QWORD PTR [rax]
   14002ba84:	mov    rax,QWORD PTR [rbx+0x30]
   14002ba88:	mov    r8d,0x10
   14002ba8e:	mov    rcx,rax
   14002ba91:	mov    rdx,rdi
   14002ba94:	call   QWORD PTR [rax]
   14002ba96:	test   rax,rax
   14002ba99:	je     0x14002babf
   14002ba9b:	mov    rcx,QWORD PTR [rdi+0x18]
   14002ba9f:	cmp    QWORD PTR [rax+0x18],rcx
   14002baa3:	jne    0x14002babf
   14002baa5:	mov    rcx,QWORD PTR [rdi+0x10]
   14002baa9:	cmp    QWORD PTR [rax+0x10],rcx
   14002baad:	jne    0x14002babf
   14002baaf:	mov    eax,DWORD PTR [rdi]
   14002bab1:	test   al,0xf0
   14002bab3:	jne    0x14002babf
   14002bab5:	and    eax,0xffffff1f
   14002baba:	or     eax,0x10
   14002babd:	mov    DWORD PTR [rdi],eax
   14002babf:	test   BYTE PTR [rbx],0x40
   14002bac2:	jne    0x14002bb39
   14002bac4:	mov    rdx,QWORD PTR [rbx+0x40]
   14002bac8:	mov    QWORD PTR [rsp+0x38],rsi
   14002bacd:	mov    rsi,QWORD PTR [rdx+0x20]
   14002bad1:	mov    rcx,rsi
   14002bad4:	call   0x14002b7d0
   14002bad9:	mov    rbx,rax
   14002badc:	test   rax,rax
   14002badf:	je     0x14002bb34
   14002bae1:	mov    QWORD PTR [rsp+0x30],rbp
   14002bae6:	xor    ebp,ebp
   14002bae8:	nop    DWORD PTR [rax+rax*1+0x0]
   14002baf0:	mov    rcx,QWORD PTR [rbx+0x18]
   14002baf4:	call   0x14002b080
   14002baf9:	mov    rdx,rdi
   14002bafc:	mov    rcx,rax
   14002baff:	call   0x14002ba20
   14002bb04:	mov    rax,QWORD PTR [rsi+0x28]
   14002bb08:	mov    r8d,0x8
   14002bb0e:	mov    rcx,rax
   14002bb11:	mov    rdx,rbx
   14002bb14:	call   QWORD PTR [rax]
   14002bb16:	test   rax,rax
   14002bb19:	je     0x14002bb27
   14002bb1b:	mov    rcx,QWORD PTR [rbx+0x10]
   14002bb1f:	cmp    QWORD PTR [rax+0x10],rcx
   14002bb23:	cmovne rax,rbp
   14002bb27:	mov    rbx,rax
   14002bb2a:	test   rax,rax
   14002bb2d:	jne    0x14002baf0
   14002bb2f:	mov    rbp,QWORD PTR [rsp+0x30]
   14002bb34:	mov    rsi,QWORD PTR [rsp+0x38]
   14002bb39:	mov    rbx,QWORD PTR [rsp+0x40]
   14002bb3e:	add    rsp,0x20
   14002bb42:	pop    rdi
   14002bb43:	ret    
   14002bb44:	int3   
   14002bb45:	int3   
   14002bb46:	int3   
   14002bb47:	int3   
   14002bb48:	int3   
   14002bb49:	int3   
   14002bb4a:	int3   
   14002bb4b:	int3   
   14002bb4c:	int3   
   14002bb4d:	int3   
   14002bb4e:	int3   
   14002bb4f:	int3   
   14002bb50:	mov    QWORD PTR [rsp+0x8],rbx
   14002bb55:	mov    QWORD PTR [rsp+0x10],rsi
   14002bb5a:	push   rdi
   14002bb5b:	sub    rsp,0x30
   14002bb5f:	mov    rbx,QWORD PTR [rdx+0x10]
   14002bb63:	mov    rdi,QWORD PTR [rdx+0x18]
   14002bb67:	mov    rsi,rdx
   14002bb6a:	call   QWORD PTR [rip+0x11760]        # 0x14003d2d0
   14002bb70:	mov    rcx,QWORD PTR [rbx+0x10]
   14002bb74:	mov    r9,QWORD PTR [rdi+0x10]
   14002bb78:	mov    QWORD PTR [rsp+0x20],rcx
   14002bb7d:	lea    rdx,[rip+0x1575c]        # 0x1400412e0
   14002bb84:	lea    rcx,[rax+0x60]
   14002bb88:	mov    r8,rsi
   14002bb8b:	call   QWORD PTR [rip+0x1172f]        # 0x14003d2c0
   14002bb91:	mov    rbx,QWORD PTR [rsp+0x40]
   14002bb96:	mov    rsi,QWORD PTR [rsp+0x48]
   14002bb9b:	xor    eax,eax
   14002bb9d:	add    rsp,0x30
   14002bba1:	pop    rdi
   14002bba2:	ret    
   14002bba3:	int3   
   14002bba4:	int3   
   14002bba5:	int3   
   14002bba6:	int3   
   14002bba7:	int3   
   14002bba8:	int3   
   14002bba9:	int3   
   14002bbaa:	int3   
   14002bbab:	int3   
   14002bbac:	int3   
   14002bbad:	int3   
   14002bbae:	int3   
   14002bbaf:	int3   
   14002bbb0:	rex push rbx
   14002bbb2:	sub    rsp,0x20
   14002bbb6:	mov    rax,QWORD PTR [rip+0x28303]        # 0x140053ec0
   14002bbbd:	mov    rbx,rcx
   14002bbc0:	test   rax,rax
   14002bbc3:	jne    0x14002bbdf
   14002bbc5:	mov    rdx,QWORD PTR [rip+0x25e9c]        # 0x140051a68
   14002bbcc:	lea    rcx,[rip+0x25c2d]        # 0x140051800
   14002bbd3:	call   0x14002c900
   14002bbd8:	mov    QWORD PTR [rip+0x282e1],rax        # 0x140053ec0
   14002bbdf:	test   rbx,rbx
   14002bbe2:	jne    0x14002bbec
   14002bbe4:	xor    eax,eax
   14002bbe6:	add    rsp,0x20
   14002bbea:	pop    rbx
   14002bbeb:	ret    
   14002bbec:	lea    rdx,[rbx-0x14]
   14002bbf0:	mov    r8d,0x4
   14002bbf6:	mov    rcx,rax
   14002bbf9:	mov    QWORD PTR [rsp+0x30],rdi
   14002bbfe:	call   QWORD PTR [rax]
   14002bc00:	mov    rdi,rax
   14002bc03:	test   rax,rax
   14002bc06:	je     0x14002bc1a
   14002bc08:	inc    DWORD PTR [rax+0x10]
   14002bc0b:	mov    rdi,QWORD PTR [rsp+0x30]
   14002bc10:	lea    rax,[rax+0x14]
   14002bc14:	add    rsp,0x20
   14002bc18:	pop    rbx
   14002bc19:	ret    
   14002bc1a:	or     rcx,0xffffffffffffffff
   14002bc1e:	xchg   ax,ax
   14002bc20:	inc    rcx
   14002bc23:	cmp    BYTE PTR [rbx+rcx*1],0x0
   14002bc27:	jne    0x14002bc20
   14002bc29:	add    rcx,0x18
   14002bc2d:	call   QWORD PTR [rip+0x11535]        # 0x14003d168
   14002bc33:	mov    rcx,rax
   14002bc36:	mov    rdi,rax
   14002bc39:	sub    rcx,rbx
   14002bc3c:	mov    DWORD PTR [rax+0x10],0x1
   14002bc43:	nop    DWORD PTR [rax+0x0]
   14002bc47:	nop    WORD PTR [rax+rax*1+0x0]
   14002bc50:	movzx  eax,BYTE PTR [rbx]
   14002bc53:	lea    rbx,[rbx+0x1]
   14002bc57:	mov    BYTE PTR [rcx+rbx*1+0x13],al
   14002bc5b:	test   al,al
   14002bc5d:	jne    0x14002bc50
   14002bc5f:	mov    rax,QWORD PTR [rip+0x2825a]        # 0x140053ec0
   14002bc66:	mov    r8d,0x1
   14002bc6c:	mov    rdx,rdi
   14002bc6f:	mov    rcx,rax
   14002bc72:	call   QWORD PTR [rax]
   14002bc74:	lea    rax,[rdi+0x14]
   14002bc78:	mov    rdi,QWORD PTR [rsp+0x30]
   14002bc7d:	add    rsp,0x20
   14002bc81:	pop    rbx
   14002bc82:	ret    
   14002bc83:	int3   
   14002bc84:	int3   
   14002bc85:	int3   
   14002bc86:	int3   
   14002bc87:	int3   
   14002bc88:	int3   
   14002bc89:	int3   
   14002bc8a:	int3   
   14002bc8b:	int3   
   14002bc8c:	int3   
   14002bc8d:	int3   
   14002bc8e:	int3   
   14002bc8f:	int3   
   14002bc90:	rex push rdi
   14002bc92:	sub    rsp,0x20
   14002bc96:	mov    rax,QWORD PTR [rip+0x28223]        # 0x140053ec0
   14002bc9d:	mov    rdi,rcx
   14002bca0:	test   rax,rax
   14002bca3:	je     0x14002bd14
   14002bca5:	test   rcx,rcx
   14002bca8:	je     0x14002bd14
   14002bcaa:	lea    rdx,[rcx-0x14]
   14002bcae:	mov    r8d,0x4
   14002bcb4:	mov    rcx,rax
   14002bcb7:	mov    QWORD PTR [rsp+0x30],rbx
   14002bcbc:	call   QWORD PTR [rax]
   14002bcbe:	mov    rbx,rax
   14002bcc1:	test   rax,rax
   14002bcc4:	je     0x14002bcf5
   14002bcc6:	dec    DWORD PTR [rax+0x10]
   14002bcc9:	jne    0x14002bd0f
   14002bccb:	mov    r9,QWORD PTR [rip+0x281ee]        # 0x140053ec0
   14002bcd2:	mov    r8d,0x2
   14002bcd8:	mov    rdx,rax
   14002bcdb:	mov    rcx,r9
   14002bcde:	call   QWORD PTR [r9]
   14002bce1:	mov    rcx,rbx
   14002bce4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002bce9:	add    rsp,0x20
   14002bced:	pop    rdi
   14002bcee:	rex.W jmp QWORD PTR [rip+0x115ab]        # 0x14003d2a0
   14002bcf5:	call   QWORD PTR [rip+0x115d5]        # 0x14003d2d0
   14002bcfb:	lea    rdx,[rip+0x15606]        # 0x140041308
   14002bd02:	mov    r8,rdi
   14002bd05:	lea    rcx,[rax+0x60]
   14002bd09:	call   QWORD PTR [rip+0x115b1]        # 0x14003d2c0
   14002bd0f:	mov    rbx,QWORD PTR [rsp+0x30]
   14002bd14:	add    rsp,0x20
   14002bd18:	pop    rdi
   14002bd19:	ret    
   14002bd1a:	int3   
   14002bd1b:	int3   
   14002bd1c:	int3   
   14002bd1d:	int3   
   14002bd1e:	int3   
   14002bd1f:	int3   
   14002bd20:	sub    rsp,0x28
   14002bd24:	mov    rdx,QWORD PTR [rip+0x25d3d]        # 0x140051a68
   14002bd2b:	lea    rcx,[rip+0x25ace]        # 0x140051800
   14002bd32:	call   0x14002c900
   14002bd37:	mov    QWORD PTR [rip+0x28182],rax        # 0x140053ec0
   14002bd3e:	add    rsp,0x28
   14002bd42:	ret    
   14002bd43:	int3   
   14002bd44:	int3   
   14002bd45:	int3   
   14002bd46:	int3   
   14002bd47:	int3   
   14002bd48:	int3   
   14002bd49:	int3   
   14002bd4a:	int3   
   14002bd4b:	int3   
   14002bd4c:	int3   
   14002bd4d:	int3   
   14002bd4e:	int3   
   14002bd4f:	int3   
   14002bd50:	mov    QWORD PTR [rsp+0x8],rcx
   14002bd55:	mov    QWORD PTR [rsp+0x10],rdx
   14002bd5a:	mov    QWORD PTR [rsp+0x18],r8
   14002bd5f:	mov    QWORD PTR [rsp+0x20],r9
   14002bd64:	push   rbx
   14002bd65:	sub    rsp,0x20
   14002bd69:	lea    rax,[rsp+0x38]
   14002bd6e:	mov    rbx,QWORD PTR [rax]
   14002bd71:	movzx  eax,WORD PTR [rip+0x29538]        # 0x1400552b0
   14002bd78:	movzx  ecx,ax
   14002bd7b:	inc    ax
   14002bd7e:	mov    WORD PTR [rip+0x2952b],ax        # 0x1400552b0
   14002bd85:	test   cx,cx
   14002bd88:	jne    0x14002bddc
   14002bd8a:	call   QWORD PTR [rip+0x11540]        # 0x14003d2d0
   14002bd90:	lea    rdx,[rip+0x15659]        # 0x1400413f0
   14002bd97:	lea    rcx,[rax+0x60]
   14002bd9b:	call   QWORD PTR [rip+0x1151f]        # 0x14003d2c0
   14002bda1:	call   QWORD PTR [rip+0x11529]        # 0x14003d2d0
   14002bda7:	mov    rdx,QWORD PTR [rsp+0x30]
   14002bdac:	lea    rcx,[rax+0x60]
   14002bdb0:	mov    r8,rbx
   14002bdb3:	call   QWORD PTR [rip+0x11507]        # 0x14003d2c0
   14002bdb9:	call   QWORD PTR [rip+0x11511]        # 0x14003d2d0
   14002bdbf:	mov    r8d,DWORD PTR [rip+0x28122]        # 0x140053ee8
   14002bdc6:	lea    rcx,[rax+0x60]
   14002bdca:	lea    rdx,[rip+0x1562f]        # 0x140041400
   14002bdd1:	call   QWORD PTR [rip+0x114e9]        # 0x14003d2c0
   14002bdd7:	call   0x14002c180
   14002bddc:	add    rsp,0x20
   14002bde0:	pop    rbx
   14002bde1:	ret    
   14002bde2:	int3   
   14002bde3:	int3   
   14002bde4:	int3   
   14002bde5:	int3   
   14002bde6:	int3   
   14002bde7:	int3   
   14002bde8:	int3   
   14002bde9:	int3   
   14002bdea:	int3   
   14002bdeb:	int3   
   14002bdec:	int3   
   14002bded:	int3   
   14002bdee:	int3   
   14002bdef:	int3   
   14002bdf0:	rex push rbx
   14002bdf2:	sub    rsp,0x20
   14002bdf6:	cmp    BYTE PTR [rip+0x294b5],0x0        # 0x1400552b2
   14002bdfd:	je     0x14002be10
   14002bdff:	mov    BYTE PTR [rip+0x294ac],0x0        # 0x1400552b2
   14002be06:	or     rax,0xffffffffffffffff
   14002be0a:	add    rsp,0x20
   14002be0e:	pop    rbx
   14002be0f:	ret    
   14002be10:	mov    rax,QWORD PTR [rip+0x280c1]        # 0x140053ed8
   14002be17:	test   rax,rax
   14002be1a:	je     0x14002be21
   14002be1c:	cmp    BYTE PTR [rax],0x0
   14002be1f:	jne    0x14002be36
   14002be21:	call   0x14002c2c0
   14002be26:	mov    QWORD PTR [rip+0x280ab],rax        # 0x140053ed8
   14002be2d:	test   rax,rax
   14002be30:	je     0x14002bf93
   14002be36:	mov    rcx,rax
   14002be39:	call   0x14002c690
   14002be3e:	mov    QWORD PTR [rip+0x28093],rax        # 0x140053ed8
   14002be45:	cmp    BYTE PTR [rax],0x0
   14002be48:	je     0x14002be17
   14002be4a:	cmp    BYTE PTR [rax],0x22
   14002be4d:	mov    QWORD PTR [rsp+0x30],rsi
   14002be52:	mov    rsi,QWORD PTR [rip+0x28087]        # 0x140053ee0
   14002be59:	jne    0x14002be84
   14002be5b:	mov    rdx,rsi
   14002be5e:	mov    rcx,rax
   14002be61:	call   0x14002c470
   14002be66:	mov    QWORD PTR [rip+0x2806b],rax        # 0x140053ed8
   14002be6d:	mov    QWORD PTR [rip+0x293ec],rsi        # 0x140055260
   14002be74:	mov    eax,0x107
   14002be79:	mov    rsi,QWORD PTR [rsp+0x30]
   14002be7e:	add    rsp,0x20
   14002be82:	pop    rbx
   14002be83:	ret    
   14002be84:	mov    rdx,QWORD PTR [rip+0x29415]        # 0x1400552a0
   14002be8b:	test   rdx,rdx
   14002be8e:	je     0x14002bee7
   14002be90:	or     rbx,0xffffffffffffffff
   14002be94:	mov    r8,rbx
   14002be97:	nop    WORD PTR [rax+rax*1+0x0]
   14002bea0:	inc    r8
   14002bea3:	cmp    BYTE PTR [rdx+r8*1],0x0
   14002bea8:	jne    0x14002bea0
   14002beaa:	mov    rcx,rax
   14002bead:	call   QWORD PTR [rip+0x111ad]        # 0x14003d060
   14002beb3:	test   eax,eax
   14002beb5:	jne    0x14002bee0
   14002beb7:	mov    rax,QWORD PTR [rip+0x293e2]        # 0x1400552a0
   14002bebe:	xchg   ax,ax
   14002bec0:	inc    rbx
   14002bec3:	cmp    BYTE PTR [rax+rbx*1],0x0
   14002bec7:	jne    0x14002bec0
   14002bec9:	add    QWORD PTR [rip+0x28008],rbx        # 0x140053ed8
   14002bed0:	mov    rsi,QWORD PTR [rsp+0x30]
   14002bed5:	mov    eax,0x106
   14002beda:	add    rsp,0x20
   14002bede:	pop    rbx
   14002bedf:	ret    
   14002bee0:	mov    rax,QWORD PTR [rip+0x27ff1]        # 0x140053ed8
   14002bee7:	mov    rdx,rsi
   14002beea:	mov    rcx,rax
   14002beed:	call   0x14002c500
   14002bef2:	test   rax,rax
   14002bef5:	jne    0x14002be66
   14002befb:	mov    rax,QWORD PTR [rip+0x27fd6]        # 0x140053ed8
   14002bf02:	movsx  ecx,BYTE PTR [rax]
   14002bf05:	call   QWORD PTR [rip+0x11285]        # 0x14003d190
   14002bf0b:	mov    rbx,QWORD PTR [rip+0x27fc6]        # 0x140053ed8
   14002bf12:	test   eax,eax
   14002bf14:	je     0x14002bf35
   14002bf16:	movzx  eax,BYTE PTR [rbx]
   14002bf19:	cmp    al,0x5f
   14002bf1b:	je     0x14002bf35
   14002bf1d:	mov    rsi,QWORD PTR [rsp+0x30]
   14002bf22:	inc    rbx
   14002bf25:	movsx  eax,al
   14002bf28:	mov    QWORD PTR [rip+0x27fa9],rbx        # 0x140053ed8
   14002bf2f:	add    rsp,0x20
   14002bf33:	pop    rbx
   14002bf34:	ret    
   14002bf35:	mov    QWORD PTR [rsp+0x38],rdi
   14002bf3a:	mov    rdi,rsi
   14002bf3d:	test   rbx,rbx
   14002bf40:	je     0x14002bf71
   14002bf42:	movsx  ecx,BYTE PTR [rbx]
   14002bf45:	call   QWORD PTR [rip+0x11185]        # 0x14003d0d0
   14002bf4b:	test   eax,eax
   14002bf4d:	jne    0x14002bf60
   14002bf4f:	movzx  eax,BYTE PTR [rbx]
   14002bf52:	cmp    al,0x5f
   14002bf54:	je     0x14002bf60
   14002bf56:	movsx  eax,al
   14002bf59:	cmp    eax,0x80
   14002bf5e:	jb     0x14002bf6e
   14002bf60:	movzx  eax,BYTE PTR [rbx]
   14002bf63:	inc    rdi
   14002bf66:	inc    rbx
   14002bf69:	mov    BYTE PTR [rdi-0x1],al
   14002bf6c:	jmp    0x14002bf42
   14002bf6e:	mov    BYTE PTR [rdi],0x0
   14002bf71:	mov    rcx,rsi
   14002bf74:	mov    QWORD PTR [rip+0x27f5d],rbx        # 0x140053ed8
   14002bf7b:	call   0x14002c060
   14002bf80:	mov    rdi,QWORD PTR [rsp+0x38]
   14002bf85:	cmp    eax,0xffffffff
   14002bf88:	jne    0x14002be79
   14002bf8e:	jmp    0x14002be6d
   14002bf93:	cmp    BYTE PTR [rip+0x27f30],0x0        # 0x140053eca
   14002bf9a:	je     0x14002bfbd
   14002bf9c:	movzx  ebx,BYTE PTR [rip+0x27f28]        # 0x140053ecb
   14002bfa3:	call   QWORD PTR [rip+0x11327]        # 0x14003d2d0
   14002bfa9:	lea    rdx,[rip+0x153f0]        # 0x1400413a0
   14002bfb0:	lea    rcx,[rax+0x60]
   14002bfb4:	mov    r8d,ebx
   14002bfb7:	call   QWORD PTR [rip+0x11303]        # 0x14003d2c0
   14002bfbd:	or     rax,0xffffffffffffffff
   14002bfc1:	add    rsp,0x20
   14002bfc5:	pop    rbx
   14002bfc6:	ret    
   14002bfc7:	int3   
   14002bfc8:	int3   
   14002bfc9:	int3   
   14002bfca:	int3   
   14002bfcb:	int3   
   14002bfcc:	int3   
   14002bfcd:	int3   
   14002bfce:	int3   
   14002bfcf:	int3   
   14002bfd0:	mov    QWORD PTR [rsp+0x8],rbx
   14002bfd5:	mov    QWORD PTR [rsp+0x10],rsi
   14002bfda:	push   rdi
   14002bfdb:	sub    rsp,0x20
   14002bfdf:	mov    rbx,QWORD PTR [rip+0x292c2]        # 0x1400552a8
   14002bfe6:	mov    rdi,rdx
   14002bfe9:	mov    rsi,rcx
   14002bfec:	mov    QWORD PTR [rip+0x27edd],rcx        # 0x140053ed0
   14002bff3:	mov    QWORD PTR [rip+0x27ef6],rdx        # 0x140053ef0
   14002bffa:	mov    QWORD PTR [rip+0x27ed3],0x0        # 0x140053ed8
   14002c005:	test   rbx,rbx
   14002c008:	jne    0x14002c043
   14002c00a:	lea    edx,[rbx+0x1]
   14002c00d:	mov    ecx,0x200
   14002c012:	mov    DWORD PTR [rip+0x27eb0],0x200        # 0x140053ecc
   14002c01c:	call   QWORD PTR [rip+0x11046]        # 0x14003d068
   14002c022:	mov    edx,0x1
   14002c027:	mov    ecx,0x200
   14002c02c:	mov    rbx,rax
   14002c02f:	mov    QWORD PTR [rip+0x29272],rax        # 0x1400552a8
   14002c036:	call   QWORD PTR [rip+0x1102c]        # 0x14003d068
   14002c03c:	mov    QWORD PTR [rip+0x27e9d],rax        # 0x140053ee0
   14002c043:	mov    r8,rsi
   14002c046:	xor    edx,edx
   14002c048:	mov    rcx,rbx
   14002c04b:	mov    rax,rdi
   14002c04e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c053:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c058:	add    rsp,0x20
   14002c05c:	pop    rdi
   14002c05d:	rex.W jmp rax
   14002c060:	mov    QWORD PTR [rsp+0x10],rbx
   14002c065:	mov    QWORD PTR [rsp+0x18],rbp
   14002c06a:	mov    QWORD PTR [rsp+0x20],rsi
   14002c06f:	push   r14
   14002c071:	sub    rsp,0x20
   14002c075:	movzx  ebx,BYTE PTR [rcx]
   14002c078:	xor    eax,eax
   14002c07a:	mov    rsi,rcx
   14002c07d:	mov    WORD PTR [rip+0x27e44],ax        # 0x140053ec8
   14002c084:	lea    rbp,[rip+0xfffffffffffd3f75]        # 0x140000000
   14002c08b:	test   bl,bl
   14002c08d:	je     0x14002c154
   14002c093:	or     r14d,0xffffffff
   14002c097:	mov    QWORD PTR [rsp+0x30],rdi
   14002c09c:	nop    DWORD PTR [rax+0x0]
   14002c0a0:	lea    rsi,[rsi+0x1]
   14002c0a4:	test   ax,ax
   14002c0a7:	js     0x14002c13a
   14002c0ad:	movsx  edi,bl
   14002c0b0:	mov    ecx,edi
   14002c0b2:	call   QWORD PTR [rip+0x11068]        # 0x14003d120
   14002c0b8:	mov    ecx,edi
   14002c0ba:	test   eax,eax
   14002c0bc:	je     0x14002c0c8
   14002c0be:	call   QWORD PTR [rip+0x11064]        # 0x14003d128
   14002c0c4:	mov    ebx,eax
   14002c0c6:	jmp    0x14002c0d2
   14002c0c8:	call   QWORD PTR [rip+0x110ba]        # 0x14003d188
   14002c0ce:	test   eax,eax
   14002c0d0:	je     0x14002c12f
   14002c0d2:	movsx  rax,WORD PTR [rip+0x27dee]        # 0x140053ec8
   14002c0da:	lea    rcx,[rax*8+0x0]
   14002c0e2:	movsx  rax,bl
   14002c0e6:	mov    eax,DWORD PTR [rbp+rax*4+0x516bc]
   14002c0ed:	test   DWORD PTR [rcx+rbp*1+0x518b4],eax
   14002c0f4:	je     0x14002c12f
   14002c0f6:	movsx  rax,WORD PTR [rcx+rbp*1+0x518b2]
   14002c0ff:	movsx  edx,bl
   14002c102:	cmp    WORD PTR [rbp+rax*4+0x519c0],dx
   14002c10a:	je     0x14002c121
   14002c10c:	nop    DWORD PTR [rax+0x0]
   14002c110:	inc    ax
   14002c113:	movsx  rcx,ax
   14002c117:	cmp    WORD PTR [rbp+rcx*4+0x519c0],dx
   14002c11f:	jne    0x14002c110
   14002c121:	movsx  rcx,ax
   14002c125:	movzx  eax,WORD PTR [rbp+rcx*4+0x519c2]
   14002c12d:	jmp    0x14002c133
   14002c12f:	movzx  eax,r14w
   14002c133:	mov    WORD PTR [rip+0x27d8e],ax        # 0x140053ec8
   14002c13a:	movzx  ebx,BYTE PTR [rsi]
   14002c13d:	test   bl,bl
   14002c13f:	jne    0x14002c0a0
   14002c145:	mov    rdi,QWORD PTR [rsp+0x30]
   14002c14a:	test   ax,ax
   14002c14d:	jns    0x14002c154
   14002c14f:	mov    eax,r14d
   14002c152:	jmp    0x14002c160
   14002c154:	movsx  rax,ax
   14002c158:	movsx  eax,WORD PTR [rbp+rax*8+0x518b0]
   14002c160:	mov    rbx,QWORD PTR [rsp+0x38]
   14002c165:	mov    rbp,QWORD PTR [rsp+0x40]
   14002c16a:	mov    rsi,QWORD PTR [rsp+0x48]
   14002c16f:	add    rsp,0x20
   14002c173:	pop    r14
   14002c175:	ret    
   14002c176:	int3   
   14002c177:	int3   
   14002c178:	int3   
   14002c179:	int3   
   14002c17a:	int3   
   14002c17b:	int3   
   14002c17c:	int3   
   14002c17d:	int3   
   14002c17e:	int3   
   14002c17f:	int3   
   14002c180:	sub    rsp,0x28
   14002c184:	cmp    QWORD PTR [rip+0x27d4c],0x0        # 0x140053ed8
   14002c18c:	je     0x14002c2ac
   14002c192:	mov    QWORD PTR [rsp+0x30],rbx
   14002c197:	mov    QWORD PTR [rsp+0x38],rbp
   14002c19c:	mov    QWORD PTR [rsp+0x40],rsi
   14002c1a1:	mov    QWORD PTR [rsp+0x20],rdi
   14002c1a6:	call   QWORD PTR [rip+0x11124]        # 0x14003d2d0
   14002c1ac:	lea    rdx,[rip+0x1521d]        # 0x1400413d0
   14002c1b3:	lea    rcx,[rax+0x60]
   14002c1b7:	call   QWORD PTR [rip+0x11103]        # 0x14003d2c0
   14002c1bd:	mov    rdi,QWORD PTR [rip+0x27d14]        # 0x140053ed8
   14002c1c4:	mov    rbx,QWORD PTR [rip+0x290dd]        # 0x1400552a8
   14002c1cb:	dec    rdi
   14002c1ce:	cmp    rdi,rbx
   14002c1d1:	jbe    0x14002c1ef
   14002c1d3:	movsx  ecx,BYTE PTR [rdi]
   14002c1d6:	call   QWORD PTR [rip+0x10ebc]        # 0x14003d098
   14002c1dc:	mov    rbx,QWORD PTR [rip+0x290c5]        # 0x1400552a8
   14002c1e3:	test   eax,eax
   14002c1e5:	jne    0x14002c1ef
   14002c1e7:	dec    rdi
   14002c1ea:	cmp    rdi,rbx
   14002c1ed:	ja     0x14002c1d3
   14002c1ef:	xor    esi,esi
   14002c1f1:	mov    rbp,rdi
   14002c1f4:	sub    rbp,rbx
   14002c1f7:	cmp    rbx,rdi
   14002c1fa:	mov    rdi,QWORD PTR [rsp+0x20]
   14002c1ff:	cmova  rbp,rsi
   14002c203:	test   rbp,rbp
   14002c206:	je     0x14002c226
   14002c208:	call   QWORD PTR [rip+0x110c2]        # 0x14003d2d0
   14002c20e:	movsx  ecx,BYTE PTR [rbx]
   14002c211:	lea    rdx,[rax+0x60]
   14002c215:	call   QWORD PTR [rip+0x10f1d]        # 0x14003d138
   14002c21b:	inc    rsi
   14002c21e:	inc    rbx
   14002c221:	cmp    rsi,rbp
   14002c224:	jb     0x14002c208
   14002c226:	call   QWORD PTR [rip+0x110a4]        # 0x14003d2d0
   14002c22c:	lea    rcx,[rip+0x151a9]        # 0x1400413dc
   14002c233:	lea    rdx,[rax+0x60]
   14002c237:	call   QWORD PTR [rip+0x10f03]        # 0x14003d140
   14002c23d:	cmp    rbx,QWORD PTR [rip+0x27c94]        # 0x140053ed8
   14002c244:	mov    rsi,QWORD PTR [rsp+0x40]
   14002c249:	mov    rbp,QWORD PTR [rsp+0x38]
   14002c24e:	jae    0x14002c26f
   14002c250:	call   QWORD PTR [rip+0x1107a]        # 0x14003d2d0
   14002c256:	movsx  ecx,BYTE PTR [rbx]
   14002c259:	lea    rdx,[rax+0x60]
   14002c25d:	call   QWORD PTR [rip+0x10ed5]        # 0x14003d138
   14002c263:	inc    rbx
   14002c266:	cmp    rbx,QWORD PTR [rip+0x27c6b]        # 0x140053ed8
   14002c26d:	jb     0x14002c250
   14002c26f:	call   QWORD PTR [rip+0x1105b]        # 0x14003d2d0
   14002c275:	lea    rcx,[rip+0x15168]        # 0x1400413e4
   14002c27c:	lea    rdx,[rax+0x60]
   14002c280:	call   QWORD PTR [rip+0x10eba]        # 0x14003d140
   14002c286:	call   QWORD PTR [rip+0x11044]        # 0x14003d2d0
   14002c28c:	mov    rcx,QWORD PTR [rip+0x27c45]        # 0x140053ed8
   14002c293:	lea    rdx,[rax+0x60]
   14002c297:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c29c:	add    rsp,0x28
   14002c2a0:	rex.W jmp QWORD PTR [rip+0x10e99]        # 0x14003d140
   14002c2a7:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c2ac:	add    rsp,0x28
   14002c2b0:	ret    
   14002c2b1:	int3   
   14002c2b2:	int3   
   14002c2b3:	int3   
   14002c2b4:	int3   
   14002c2b5:	int3   
   14002c2b6:	int3   
   14002c2b7:	int3   
   14002c2b8:	int3   
   14002c2b9:	int3   
   14002c2ba:	int3   
   14002c2bb:	int3   
   14002c2bc:	int3   
   14002c2bd:	int3   
   14002c2be:	int3   
   14002c2bf:	int3   
   14002c2c0:	mov    QWORD PTR [rsp+0x8],rbx
   14002c2c5:	mov    QWORD PTR [rsp+0x10],rsi
   14002c2ca:	push   rdi
   14002c2cb:	sub    rsp,0x20
   14002c2cf:	xor    esi,esi
   14002c2d1:	nop    DWORD PTR [rax+0x0]
   14002c2d5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002c2e0:	mov    edi,DWORD PTR [rip+0x27be6]        # 0x140053ecc
   14002c2e6:	lea    eax,[rsi+0x80]
   14002c2ec:	cmp    eax,edi
   14002c2ee:	jl     0x14002c32d
   14002c2f0:	mov    rcx,QWORD PTR [rip+0x28fb1]        # 0x1400552a8
   14002c2f7:	add    edi,0x200
   14002c2fd:	movsxd rbx,edi
   14002c300:	mov    DWORD PTR [rip+0x27bc6],edi        # 0x140053ecc
   14002c306:	mov    rdx,rbx
   14002c309:	call   QWORD PTR [rip+0x10d99]        # 0x14003d0a8
   14002c30f:	mov    rcx,QWORD PTR [rip+0x27bca]        # 0x140053ee0
   14002c316:	mov    rdx,rbx
   14002c319:	mov    QWORD PTR [rip+0x28f88],rax        # 0x1400552a8
   14002c320:	call   QWORD PTR [rip+0x10d82]        # 0x14003d0a8
   14002c326:	mov    QWORD PTR [rip+0x27bb3],rax        # 0x140053ee0
   14002c32d:	mov    rax,QWORD PTR [rip+0x28f74]        # 0x1400552a8
   14002c334:	mov    r8,QWORD PTR [rip+0x27b95]        # 0x140053ed0
   14002c33b:	sub    edi,esi
   14002c33d:	inc    rax
   14002c340:	movsxd rcx,esi
   14002c343:	lea    edx,[rdi-0x1]
   14002c346:	add    rcx,rax
   14002c349:	call   QWORD PTR [rip+0x27ba1]        # 0x140053ef0
   14002c34f:	mov    rbx,rax
   14002c352:	test   rax,rax
   14002c355:	je     0x14002c3d4
   14002c357:	or     rcx,0xffffffffffffffff
   14002c35b:	nop    DWORD PTR [rax+rax*1+0x0]
   14002c360:	inc    rcx
   14002c363:	cmp    BYTE PTR [rax+rcx*1],0x0
   14002c367:	jne    0x14002c360
   14002c369:	movsxd rdx,ecx
   14002c36c:	cmp    BYTE PTR [rdx+rax*1-0x1],0xa
   14002c371:	jne    0x14002c3c4
   14002c373:	cmp    BYTE PTR [rax],0x23
   14002c376:	jne    0x14002c3a8
   14002c378:	test   esi,esi
   14002c37a:	jne    0x14002c3a8
   14002c37c:	lea    rcx,[rax+0x1]
   14002c380:	lea    r8,[rip+0x27b61]        # 0x140053ee8
   14002c387:	lea    rdx,[rip+0x11206]        # 0x14003d594
   14002c38e:	call   QWORD PTR [rip+0x10f24]        # 0x14003d2b8
   14002c394:	test   eax,eax
   14002c396:	jne    0x14002c39e
   14002c398:	inc    DWORD PTR [rip+0x27b4a]        # 0x140053ee8
   14002c39e:	mov    BYTE PTR [rbx],0x0
   14002c3a1:	mov    ecx,0x1
   14002c3a6:	jmp    0x14002c3c6
   14002c3a8:	inc    DWORD PTR [rip+0x27b3a]        # 0x140053ee8
   14002c3ae:	cmp    ecx,0x1
   14002c3b1:	jle    0x14002c3c4
   14002c3b3:	cmp    BYTE PTR [rdx+rax*1-0x2],0x5c
   14002c3b8:	jne    0x14002c3c4
   14002c3ba:	sub    ecx,0x2
   14002c3bd:	movsxd rax,ecx
   14002c3c0:	mov    BYTE PTR [rax+rbx*1],0x0
   14002c3c4:	add    esi,ecx
   14002c3c6:	movsxd rax,ecx
   14002c3c9:	cmp    BYTE PTR [rax+rbx*1-0x1],0xa
   14002c3ce:	jne    0x14002c2e0
   14002c3d4:	test   esi,esi
   14002c3d6:	jle    0x14002c3f2
   14002c3d8:	mov    rax,QWORD PTR [rip+0x28ec9]        # 0x1400552a8
   14002c3df:	inc    rax
   14002c3e2:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c3e7:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c3ec:	add    rsp,0x20
   14002c3f0:	pop    rdi
   14002c3f1:	ret    
   14002c3f2:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c3f7:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c3fc:	xor    eax,eax
   14002c3fe:	add    rsp,0x20
   14002c402:	pop    rdi
   14002c403:	ret    
   14002c404:	int3   
   14002c405:	int3   
   14002c406:	int3   
   14002c407:	int3   
   14002c408:	int3   
   14002c409:	int3   
   14002c40a:	int3   
   14002c40b:	int3   
   14002c40c:	int3   
   14002c40d:	int3   
   14002c40e:	int3   
   14002c40f:	int3   
   14002c410:	rex push rbx
   14002c412:	sub    rsp,0x20
   14002c416:	call   0x14002bdf0
   14002c41b:	mov    ebx,eax
   14002c41d:	call   QWORD PTR [rip+0x10ead]        # 0x14003d2d0
   14002c423:	lea    rdx,[rip+0x14f4e]        # 0x140041378
   14002c42a:	lea    rcx,[rax+0x60]
   14002c42e:	mov    r8d,ebx
   14002c431:	call   QWORD PTR [rip+0x10e89]        # 0x14003d2c0
   14002c437:	cmp    ebx,0x107
   14002c43d:	jne    0x14002c45d
   14002c43f:	call   QWORD PTR [rip+0x10e8b]        # 0x14003d2d0
   14002c445:	mov    r8,QWORD PTR [rip+0x28e14]        # 0x140055260
   14002c44c:	lea    rdx,[rip+0x14f35]        # 0x140041388
   14002c453:	lea    rcx,[rax+0x60]
   14002c457:	call   QWORD PTR [rip+0x10e63]        # 0x14003d2c0
   14002c45d:	mov    eax,ebx
   14002c45f:	add    rsp,0x20
   14002c463:	pop    rbx
   14002c464:	ret    
   14002c465:	int3   
   14002c466:	int3   
   14002c467:	int3   
   14002c468:	int3   
   14002c469:	int3   
   14002c46a:	int3   
   14002c46b:	int3   
   14002c46c:	int3   
   14002c46d:	int3   
   14002c46e:	int3   
   14002c46f:	int3   
   14002c470:	mov    QWORD PTR [rsp+0x8],rbx
   14002c475:	push   rdi
   14002c476:	sub    rsp,0x20
   14002c47a:	movzx  eax,BYTE PTR [rcx+0x1]
   14002c47e:	lea    rbx,[rcx+0x1]
   14002c482:	mov    rdi,rdx
   14002c485:	movzx  edx,BYTE PTR [rcx]
   14002c488:	test   al,al
   14002c48a:	je     0x14002c4c4
   14002c48c:	nop    DWORD PTR [rax+0x0]
   14002c490:	cmp    al,dl
   14002c492:	je     0x14002c4e8
   14002c494:	cmp    al,0x5c
   14002c496:	jne    0x14002c4b1
   14002c498:	movzx  ecx,BYTE PTR [rbx+0x1]
   14002c49c:	lea    rax,[rbx+0x1]
   14002c4a0:	cmp    cl,dl
   14002c4a2:	je     0x14002c4ae
   14002c4a4:	cmp    cl,0x5c
   14002c4a7:	jne    0x14002c4b1
   14002c4a9:	mov    BYTE PTR [rdi],cl
   14002c4ab:	inc    rdi
   14002c4ae:	mov    rbx,rax
   14002c4b1:	movzx  eax,BYTE PTR [rbx]
   14002c4b4:	inc    rbx
   14002c4b7:	inc    rdi
   14002c4ba:	mov    BYTE PTR [rdi-0x1],al
   14002c4bd:	movzx  eax,BYTE PTR [rbx]
   14002c4c0:	test   al,al
   14002c4c2:	jne    0x14002c490
   14002c4c4:	lea    rdx,[rip+0x10f4d]        # 0x14003d418
   14002c4cb:	lea    rcx,[rip+0x14e86]        # 0x140041358
   14002c4d2:	call   0x14002bd50
   14002c4d7:	mov    rax,rbx
   14002c4da:	mov    BYTE PTR [rdi],0x0
   14002c4dd:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c4e2:	add    rsp,0x20
   14002c4e6:	pop    rdi
   14002c4e7:	ret    
   14002c4e8:	cmp    BYTE PTR [rbx],0x0
   14002c4eb:	je     0x14002c4c4
   14002c4ed:	lea    rax,[rbx+0x1]
   14002c4f1:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c4f6:	mov    BYTE PTR [rdi],0x0
   14002c4f9:	add    rsp,0x20
   14002c4fd:	pop    rdi
   14002c4fe:	ret    
   14002c4ff:	int3   
   14002c500:	mov    QWORD PTR [rsp+0x8],rbx
   14002c505:	mov    QWORD PTR [rsp+0x10],rbp
   14002c50a:	mov    QWORD PTR [rsp+0x18],rsi
   14002c50f:	mov    QWORD PTR [rsp+0x20],rdi
   14002c514:	push   r14
   14002c516:	sub    rsp,0x20
   14002c51a:	xor    r14d,r14d
   14002c51d:	xor    esi,esi
   14002c51f:	cmp    BYTE PTR [rcx],0x2d
   14002c522:	mov    rdi,rdx
   14002c525:	mov    rbp,rcx
   14002c528:	mov    rbx,rcx
   14002c52b:	jne    0x14002c537
   14002c52d:	mov    BYTE PTR [rdx],0x2d
   14002c530:	inc    rdi
   14002c533:	lea    rbx,[rcx+0x1]
   14002c537:	cmp    BYTE PTR [rbx],0x2e
   14002c53a:	jne    0x14002c54b
   14002c53c:	mov    BYTE PTR [rdi],0x2e
   14002c53f:	inc    rdi
   14002c542:	mov    r14d,0x1
   14002c548:	inc    rbx
   14002c54b:	movsx  ecx,BYTE PTR [rbx]
   14002c54e:	call   QWORD PTR [rip+0x10bac]        # 0x14003d100
   14002c554:	test   eax,eax
   14002c556:	je     0x14002c579
   14002c558:	mov    esi,0x1
   14002c55d:	nop    DWORD PTR [rax]
   14002c560:	movzx  eax,BYTE PTR [rbx]
   14002c563:	inc    rbx
   14002c566:	inc    rdi
   14002c569:	mov    BYTE PTR [rdi-0x1],al
   14002c56c:	movsx  ecx,BYTE PTR [rbx]
   14002c56f:	call   QWORD PTR [rip+0x10b8b]        # 0x14003d100
   14002c575:	test   eax,eax
   14002c577:	jne    0x14002c560
   14002c579:	cmp    BYTE PTR [rbx],0x2e
   14002c57c:	jne    0x14002c5b9
   14002c57e:	test   r14d,r14d
   14002c581:	jne    0x14002c5b9
   14002c583:	mov    BYTE PTR [rdi],0x2e
   14002c586:	movsx  ecx,BYTE PTR [rbx+0x1]
   14002c58a:	inc    rbx
   14002c58d:	inc    rdi
   14002c590:	call   QWORD PTR [rip+0x10b6a]        # 0x14003d100
   14002c596:	test   eax,eax
   14002c598:	je     0x14002c5b9
   14002c59a:	lea    esi,[r14+0x1]
   14002c59e:	xchg   ax,ax
   14002c5a0:	movzx  eax,BYTE PTR [rbx]
   14002c5a3:	inc    rbx
   14002c5a6:	inc    rdi
   14002c5a9:	mov    BYTE PTR [rdi-0x1],al
   14002c5ac:	movsx  ecx,BYTE PTR [rbx]
   14002c5af:	call   QWORD PTR [rip+0x10b4b]        # 0x14003d100
   14002c5b5:	test   eax,eax
   14002c5b7:	jne    0x14002c5a0
   14002c5b9:	mov    BYTE PTR [rdi],0x0
   14002c5bc:	test   esi,esi
   14002c5be:	je     0x14002c604
   14002c5c0:	movzx  eax,BYTE PTR [rbx]
   14002c5c3:	test   al,al
   14002c5c5:	je     0x14002c5ff
   14002c5c7:	movsx  ecx,al
   14002c5ca:	call   QWORD PTR [rip+0x10bb0]        # 0x14003d180
   14002c5d0:	test   eax,eax
   14002c5d2:	jne    0x14002c5d9
   14002c5d4:	cmp    BYTE PTR [rbx],0x5f
   14002c5d7:	jne    0x14002c5ff
   14002c5d9:	lea    rcx,[rip+0x14d40]        # 0x140041320
   14002c5e0:	mov    rdx,rbp
   14002c5e3:	call   0x14002bd50
   14002c5e8:	call   QWORD PTR [rip+0x10ce2]        # 0x14003d2d0
   14002c5ee:	lea    rdx,[rip+0x14d43]        # 0x140041338
   14002c5f5:	lea    rcx,[rax+0x60]
   14002c5f9:	call   QWORD PTR [rip+0x10cc1]        # 0x14003d2c0
   14002c5ff:	mov    rax,rbx
   14002c602:	jmp    0x14002c606
   14002c604:	xor    eax,eax
   14002c606:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c60b:	mov    rbp,QWORD PTR [rsp+0x38]
   14002c610:	mov    rsi,QWORD PTR [rsp+0x40]
   14002c615:	mov    rdi,QWORD PTR [rsp+0x48]
   14002c61a:	add    rsp,0x20
   14002c61e:	pop    r14
   14002c620:	ret    
   14002c621:	int3   
   14002c622:	int3   
   14002c623:	int3   
   14002c624:	int3   
   14002c625:	int3   
   14002c626:	int3   
   14002c627:	int3   
   14002c628:	int3   
   14002c629:	int3   
   14002c62a:	int3   
   14002c62b:	int3   
   14002c62c:	int3   
   14002c62d:	int3   
   14002c62e:	int3   
   14002c62f:	int3   
   14002c630:	mov    QWORD PTR [rsp+0x8],rbx
   14002c635:	push   rdi
   14002c636:	sub    rsp,0x20
   14002c63a:	mov    rdi,rdx
   14002c63d:	mov    rbx,rcx
   14002c640:	test   rcx,rcx
   14002c643:	jne    0x14002c652
   14002c645:	xor    eax,eax
   14002c647:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c64c:	add    rsp,0x20
   14002c650:	pop    rdi
   14002c651:	ret    
   14002c652:	movsx  ecx,BYTE PTR [rbx]
   14002c655:	call   QWORD PTR [rip+0x10a75]        # 0x14003d0d0
   14002c65b:	test   eax,eax
   14002c65d:	jne    0x14002c670
   14002c65f:	movzx  eax,BYTE PTR [rbx]
   14002c662:	cmp    al,0x5f
   14002c664:	je     0x14002c670
   14002c666:	movsx  eax,al
   14002c669:	cmp    eax,0x80
   14002c66e:	jb     0x14002c67e
   14002c670:	movzx  eax,BYTE PTR [rbx]
   14002c673:	inc    rdi
   14002c676:	inc    rbx
   14002c679:	mov    BYTE PTR [rdi-0x1],al
   14002c67c:	jmp    0x14002c652
   14002c67e:	mov    rax,rbx
   14002c681:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c686:	mov    BYTE PTR [rdi],0x0
   14002c689:	add    rsp,0x20
   14002c68d:	pop    rdi
   14002c68e:	ret    
   14002c68f:	int3   
   14002c690:	rex push rbx
   14002c692:	sub    rsp,0x20
   14002c696:	mov    rbx,rcx
   14002c699:	nop    DWORD PTR [rax+0x0]
   14002c6a0:	movsx  ecx,BYTE PTR [rbx]
   14002c6a3:	call   QWORD PTR [rip+0x109ef]        # 0x14003d098
   14002c6a9:	test   eax,eax
   14002c6ab:	je     0x14002c6c1
   14002c6ad:	nop    DWORD PTR [rax]
   14002c6b0:	movsx  ecx,BYTE PTR [rbx+0x1]
   14002c6b4:	inc    rbx
   14002c6b7:	call   QWORD PTR [rip+0x109db]        # 0x14003d098
   14002c6bd:	test   eax,eax
   14002c6bf:	jne    0x14002c6b0
   14002c6c1:	cmp    BYTE PTR [rip+0x27802],0x0        # 0x140053eca
   14002c6c8:	je     0x14002c707
   14002c6ca:	nop    WORD PTR [rax+rax*1+0x0]
   14002c6d0:	movzx  eax,BYTE PTR [rbx]
   14002c6d3:	test   al,al
   14002c6d5:	je     0x14002c707
   14002c6d7:	cmp    al,0x2a
   14002c6d9:	je     0x14002c6e8
   14002c6db:	movzx  eax,BYTE PTR [rbx+0x1]
   14002c6df:	inc    rbx
   14002c6e2:	test   al,al
   14002c6e4:	jne    0x14002c6d7
   14002c6e6:	jmp    0x14002c6d0
   14002c6e8:	cmp    BYTE PTR [rbx],0x0
   14002c6eb:	je     0x14002c6d0
   14002c6ed:	cmp    BYTE PTR [rbx+0x1],0x2f
   14002c6f1:	lea    rax,[rbx+0x1]
   14002c6f5:	je     0x14002c6fc
   14002c6f7:	mov    rbx,rax
   14002c6fa:	jmp    0x14002c6d0
   14002c6fc:	mov    BYTE PTR [rip+0x277c7],0x0        # 0x140053eca
   14002c703:	add    rbx,0x2
   14002c707:	movzx  eax,BYTE PTR [rbx]
   14002c70a:	cmp    al,0x2f
   14002c70c:	jne    0x14002c734
   14002c70e:	movzx  eax,BYTE PTR [rbx+0x1]
   14002c712:	cmp    al,0x2f
   14002c714:	je     0x14002c753
   14002c716:	cmp    al,0x2a
   14002c718:	jne    0x14002c760
   14002c71a:	movzx  eax,BYTE PTR [rip+0x277c7]        # 0x140053ee8
   14002c721:	mov    BYTE PTR [rip+0x277a2],0x1        # 0x140053eca
   14002c728:	add    rbx,0x2
   14002c72c:	mov    BYTE PTR [rip+0x27799],al        # 0x140053ecb
   14002c732:	jmp    0x14002c741
   14002c734:	movsx  ecx,al
   14002c737:	call   QWORD PTR [rip+0x1095b]        # 0x14003d098
   14002c73d:	test   eax,eax
   14002c73f:	je     0x14002c760
   14002c741:	cmp    BYTE PTR [rbx],0x0
   14002c744:	jne    0x14002c6a0
   14002c74a:	mov    rax,rbx
   14002c74d:	add    rsp,0x20
   14002c751:	pop    rbx
   14002c752:	ret    
   14002c753:	cmp    BYTE PTR [rbx],0x0
   14002c756:	je     0x14002c760
   14002c758:	inc    rbx
   14002c75b:	cmp    BYTE PTR [rbx],0x0
   14002c75e:	jne    0x14002c758
   14002c760:	mov    rax,rbx
   14002c763:	add    rsp,0x20
   14002c767:	pop    rbx
   14002c768:	ret    
   14002c769:	int3   
   14002c76a:	int3   
   14002c76b:	int3   
   14002c76c:	int3   
   14002c76d:	int3   
   14002c76e:	int3   
   14002c76f:	int3   
   14002c770:	rex push rbx
   14002c772:	sub    rsp,0x20
   14002c776:	mov    rax,QWORD PTR [rcx+0x10]
   14002c77a:	mov    rbx,rcx
   14002c77d:	test   DWORD PTR [rax],0x1000
   14002c783:	je     0x14002c78c
   14002c785:	xor    edx,edx
   14002c787:	call   0x14002d9b0
   14002c78c:	mov    r8,QWORD PTR [rbx+0x10]
   14002c790:	cmp    DWORD PTR [r8+0x1c],0x0
   14002c795:	jge    0x14002c80d
   14002c797:	mov    eax,DWORD PTR [r8]
   14002c79a:	test   al,0xc
   14002c79c:	je     0x14002c7e3
   14002c79e:	mov    r9,QWORD PTR [r8+0x8]
   14002c7a2:	test   r9,r9
   14002c7a5:	je     0x14002c7d0
   14002c7a7:	mov    rcx,QWORD PTR [r9+0x8]
   14002c7ab:	call   0x14002c820
   14002c7b0:	mov    rcx,QWORD PTR [r9]
   14002c7b3:	mov    edx,eax
   14002c7b5:	call   0x14002c820
   14002c7ba:	lea    ecx,[rax+0x1]
   14002c7bd:	add    ecx,edx
   14002c7bf:	mov    DWORD PTR [r8+0x1c],ecx
   14002c7c3:	mov    rax,QWORD PTR [rbx+0x10]
   14002c7c7:	mov    eax,DWORD PTR [rax+0x1c]
   14002c7ca:	add    rsp,0x20
   14002c7ce:	pop    rbx
   14002c7cf:	ret    
   14002c7d0:	xor    ecx,ecx
   14002c7d2:	mov    DWORD PTR [r8+0x1c],ecx
   14002c7d6:	mov    rax,QWORD PTR [rbx+0x10]
   14002c7da:	mov    eax,DWORD PTR [rax+0x1c]
   14002c7dd:	add    rsp,0x20
   14002c7e1:	pop    rbx
   14002c7e2:	ret    
   14002c7e3:	test   al,0x70
   14002c7e5:	je     0x14002c80d
   14002c7e7:	mov    rax,QWORD PTR [r8+0x10]
   14002c7eb:	xor    ecx,ecx
   14002c7ed:	test   rax,rax
   14002c7f0:	je     0x14002c7d2
   14002c7f2:	mov    rax,QWORD PTR [rax]
   14002c7f5:	inc    ecx
   14002c7f7:	test   rax,rax
   14002c7fa:	jne    0x14002c7f2
   14002c7fc:	mov    DWORD PTR [r8+0x1c],ecx
   14002c800:	mov    rax,QWORD PTR [rbx+0x10]
   14002c804:	mov    eax,DWORD PTR [rax+0x1c]
   14002c807:	add    rsp,0x20
   14002c80b:	pop    rbx
   14002c80c:	ret    
   14002c80d:	mov    eax,DWORD PTR [r8+0x1c]
   14002c811:	add    rsp,0x20
   14002c815:	pop    rbx
   14002c816:	ret    
   14002c817:	int3   
   14002c818:	int3   
   14002c819:	int3   
   14002c81a:	int3   
   14002c81b:	int3   
   14002c81c:	int3   
   14002c81d:	int3   
   14002c81e:	int3   
   14002c81f:	int3   
   14002c820:	rex push rdi
   14002c822:	sub    rsp,0x20
   14002c826:	mov    rdi,rcx
   14002c829:	test   rcx,rcx
   14002c82c:	je     0x14002c855
   14002c82e:	mov    rcx,QWORD PTR [rcx+0x8]
   14002c832:	mov    QWORD PTR [rsp+0x30],rbx
   14002c837:	call   0x14002c820
   14002c83c:	mov    rcx,QWORD PTR [rdi]
   14002c83f:	mov    ebx,eax
   14002c841:	call   0x14002c820
   14002c846:	inc    eax
   14002c848:	add    eax,ebx
   14002c84a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c84f:	add    rsp,0x20
   14002c853:	pop    rdi
   14002c854:	ret    
   14002c855:	xor    eax,eax
   14002c857:	add    rsp,0x20
   14002c85b:	pop    rdi
   14002c85c:	ret    
   14002c85d:	int3   
   14002c85e:	int3   
   14002c85f:	int3   
   14002c860:	rex push rbx
   14002c862:	sub    rsp,0x20
   14002c866:	cmp    DWORD PTR [rcx+0x2c],0x0
   14002c86a:	mov    rbx,rcx
   14002c86d:	jle    0x14002c878
   14002c86f:	or     eax,0xffffffff
   14002c872:	add    rsp,0x20
   14002c876:	pop    rbx
   14002c877:	ret    
   14002c878:	cmp    QWORD PTR [rcx+0x30],0x0
   14002c87d:	je     0x14002c886
   14002c87f:	xor    edx,edx
   14002c881:	call   0x14002d6a0
   14002c886:	mov    r9,QWORD PTR [rbx+0x8]
   14002c88a:	mov    rax,QWORD PTR [r9+0x38]
   14002c88e:	test   rax,rax
   14002c891:	je     0x14002c8a3
   14002c893:	xor    r8d,r8d
   14002c896:	mov    rcx,rbx
   14002c899:	lea    edx,[r8+0x2]
   14002c89d:	call   rax
   14002c89f:	test   eax,eax
   14002c8a1:	js     0x14002c86f
   14002c8a3:	mov    rax,QWORD PTR [rbx+0x20]
   14002c8a7:	xor    edx,edx
   14002c8a9:	mov    rcx,rbx
   14002c8ac:	lea    r8d,[rdx+0x40]
   14002c8b0:	call   QWORD PTR [rax]
   14002c8b2:	mov    rcx,rbx
   14002c8b5:	call   0x14002c770
   14002c8ba:	test   eax,eax
   14002c8bc:	jg     0x14002c86f
   14002c8be:	mov    rdx,QWORD PTR [rbx+0x10]
   14002c8c2:	cmp    DWORD PTR [rdx+0x18],0x0
   14002c8c6:	jle    0x14002c8d9
   14002c8c8:	mov    r9,QWORD PTR [rbx+0x8]
   14002c8cc:	mov    rdx,QWORD PTR [rdx+0x10]
   14002c8d0:	xor    r8d,r8d
   14002c8d3:	mov    rcx,rbx
   14002c8d6:	call   QWORD PTR [rbx+0x18]
   14002c8d9:	mov    r9,QWORD PTR [rbx+0x8]
   14002c8dd:	mov    rdx,QWORD PTR [rbx+0x10]
   14002c8e1:	xor    r8d,r8d
   14002c8e4:	mov    rcx,rbx
   14002c8e7:	call   QWORD PTR [rbx+0x18]
   14002c8ea:	mov    rcx,rbx
   14002c8ed:	call   0x14003b88a
   14002c8f2:	xor    eax,eax
   14002c8f4:	add    rsp,0x20
   14002c8f8:	pop    rbx
   14002c8f9:	ret    
   14002c8fa:	int3   
   14002c8fb:	int3   
   14002c8fc:	int3   
   14002c8fd:	int3   
   14002c8fe:	int3   
   14002c8ff:	int3   
   14002c900:	mov    QWORD PTR [rsp+0x20],rsi
   14002c905:	push   rdi
   14002c906:	sub    rsp,0x20
   14002c90a:	mov    rdi,rdx
   14002c90d:	mov    rsi,rcx
   14002c910:	test   rcx,rcx
   14002c913:	je     0x14002ca2b
   14002c919:	test   rdx,rdx
   14002c91c:	je     0x14002ca2b
   14002c922:	mov    ecx,0x40
   14002c927:	mov    QWORD PTR [rsp+0x38],rbx
   14002c92c:	call   0x14003b890
   14002c931:	mov    rbx,rax
   14002c934:	test   rax,rax
   14002c937:	jne    0x14002c949
   14002c939:	mov    rbx,QWORD PTR [rsp+0x38]
   14002c93e:	mov    rsi,QWORD PTR [rsp+0x48]
   14002c943:	add    rsp,0x20
   14002c947:	pop    rdi
   14002c948:	ret    
   14002c949:	mov    QWORD PTR [rsp+0x40],rbp
   14002c94e:	xor    ebp,ebp
   14002c950:	xor    r8d,r8d
   14002c953:	mov    rdx,rsi
   14002c956:	mov    rcx,rax
   14002c959:	mov    QWORD PTR [rax],rbp
   14002c95c:	mov    QWORD PTR [rax+0x20],rbp
   14002c960:	mov    QWORD PTR [rax+0x8],rbp
   14002c964:	call   0x14002d3c0
   14002c969:	mov    DWORD PTR [rbx+0x2c],ebp
   14002c96c:	mov    QWORD PTR [rbx+0x38],rbp
   14002c970:	mov    QWORD PTR [rbx+0x30],rbp
   14002c974:	mov    rax,QWORD PTR [rsi+0x38]
   14002c978:	test   rax,rax
   14002c97b:	je     0x14002c9c8
   14002c97d:	lea    r8,[rsp+0x30]
   14002c982:	lea    edx,[rbp+0x1]
   14002c985:	mov    r9,rsi
   14002c988:	mov    rcx,rbx
   14002c98b:	mov    QWORD PTR [rsp+0x30],rbp
   14002c990:	call   rax
   14002c992:	test   eax,eax
   14002c994:	je     0x14002c9c8
   14002c996:	js     0x14002c9a9
   14002c998:	mov    rcx,QWORD PTR [rsp+0x30]
   14002c99d:	test   rcx,rcx
   14002c9a0:	je     0x14002c9a9
   14002c9a2:	mov    eax,DWORD PTR [rdi+0x8]
   14002c9a5:	test   DWORD PTR [rcx],eax
   14002c9a7:	jne    0x14002ca18
   14002c9a9:	mov    rcx,rbx
   14002c9ac:	call   0x14003b88a
   14002c9b1:	xor    eax,eax
   14002c9b3:	mov    rbp,QWORD PTR [rsp+0x40]
   14002c9b8:	mov    rbx,QWORD PTR [rsp+0x38]
   14002c9bd:	mov    rsi,QWORD PTR [rsp+0x48]
   14002c9c2:	add    rsp,0x20
   14002c9c6:	pop    rdi
   14002c9c7:	ret    
   14002c9c8:	xor    edx,edx
   14002c9ca:	mov    r9,rsi
   14002c9cd:	mov    rcx,rbx
   14002c9d0:	lea    r8d,[rdx+0x28]
   14002c9d4:	call   QWORD PTR [rbx+0x18]
   14002c9d7:	mov    rcx,rax
   14002c9da:	mov    QWORD PTR [rsp+0x30],rax
   14002c9df:	test   rax,rax
   14002c9e2:	je     0x14002c9a9
   14002c9e4:	mov    eax,DWORD PTR [rdi+0x8]
   14002c9e7:	mov    DWORD PTR [rcx],eax
   14002c9e9:	mov    rax,QWORD PTR [rsp+0x30]
   14002c9ee:	mov    QWORD PTR [rax+0x8],rbp
   14002c9f2:	mov    rax,QWORD PTR [rsp+0x30]
   14002c9f7:	mov    QWORD PTR [rax+0x10],rbp
   14002c9fb:	mov    rax,QWORD PTR [rsp+0x30]
   14002ca00:	mov    DWORD PTR [rax+0x20],ebp
   14002ca03:	mov    rax,QWORD PTR [rsp+0x30]
   14002ca08:	mov    DWORD PTR [rax+0x1c],ebp
   14002ca0b:	mov    rax,QWORD PTR [rsp+0x30]
   14002ca10:	mov    DWORD PTR [rax+0x18],ebp
   14002ca13:	mov    rcx,QWORD PTR [rsp+0x30]
   14002ca18:	mov    QWORD PTR [rbx+0x10],rcx
   14002ca1c:	mov    rax,QWORD PTR [rdi]
   14002ca1f:	mov    QWORD PTR [rbx+0x20],rdi
   14002ca23:	mov    QWORD PTR [rbx],rax
   14002ca26:	mov    rax,rbx
   14002ca29:	jmp    0x14002c9b3
   14002ca2b:	xor    eax,eax
   14002ca2d:	mov    rsi,QWORD PTR [rsp+0x48]
   14002ca32:	add    rsp,0x20
   14002ca36:	pop    rdi
   14002ca37:	ret    
   14002ca38:	int3   
   14002ca39:	int3   
   14002ca3a:	int3   
   14002ca3b:	int3   
   14002ca3c:	int3   
   14002ca3d:	int3   
   14002ca3e:	int3   
   14002ca3f:	int3   
   14002ca40:	mov    DWORD PTR [rsp+0x18],r8d
   14002ca45:	push   rbx
   14002ca46:	push   rbp
   14002ca47:	push   rdi
   14002ca48:	push   r12
   14002ca4a:	push   r13
   14002ca4c:	push   r14
   14002ca4e:	push   r15
   14002ca50:	sub    rsp,0x50
   14002ca54:	mov    rax,QWORD PTR [rcx+0x10]
   14002ca58:	xor    r10d,r10d
   14002ca5b:	mov    edi,r8d
   14002ca5e:	test   DWORD PTR [rax],0x1000
   14002ca64:	mov    r12,rdx
   14002ca67:	mov    r14,rcx
   14002ca6a:	mov    QWORD PTR [rsp+0xa8],r10
   14002ca72:	je     0x14002ca7e
   14002ca74:	xor    edx,edx
   14002ca76:	call   0x14002d9b0
   14002ca7b:	xor    r10d,r10d
   14002ca7e:	mov    r13,QWORD PTR [r14+0x8]
   14002ca82:	mov    rbx,QWORD PTR [r14+0x10]
   14002ca86:	mov    r11,QWORD PTR [r13+0x20]
   14002ca8a:	movsxd r15,DWORD PTR [r13+0x4]
   14002ca8e:	movsxd rbp,DWORD PTR [r13+0x8]
   14002ca92:	mov    rbx,QWORD PTR [rbx+0x8]
   14002ca96:	mov    QWORD PTR [rsp+0x28],r11
   14002ca9b:	test   r12,r12
   14002ca9e:	jne    0x14002cbe1
   14002caa4:	test   rbx,rbx
   14002caa7:	je     0x14002cb51
   14002caad:	test   edi,0x1c0
   14002cab3:	je     0x14002cb51
   14002cab9:	test   dil,0x40
   14002cabd:	je     0x14002cb63
   14002cac3:	cmp    QWORD PTR [r13+0x18],r12
   14002cac7:	jne    0x14002cad0
   14002cac9:	test   ebp,ebp
   14002cacb:	jns    0x14002cb3a
   14002cacd:	nop    DWORD PTR [rax]
   14002cad0:	mov    rcx,QWORD PTR [rbx+0x8]
   14002cad4:	test   rcx,rcx
   14002cad7:	je     0x14002caf6
   14002cad9:	nop    DWORD PTR [rax+0x0]
   14002cae0:	mov    rax,QWORD PTR [rcx]
   14002cae3:	mov    QWORD PTR [rbx+0x8],rax
   14002cae7:	mov    QWORD PTR [rcx],rbx
   14002caea:	mov    rbx,rcx
   14002caed:	mov    rcx,QWORD PTR [rcx+0x8]
   14002caf1:	test   rcx,rcx
   14002caf4:	jne    0x14002cae0
   14002caf6:	mov    r9,QWORD PTR [r13+0x18]
   14002cafa:	mov    rdi,QWORD PTR [rbx]
   14002cafd:	test   r9,r9
   14002cb00:	je     0x14002cb1b
   14002cb02:	test   ebp,ebp
   14002cb04:	jns    0x14002cb0c
   14002cb06:	mov    rdx,QWORD PTR [rbx+0x10]
   14002cb0a:	jmp    0x14002cb12
   14002cb0c:	mov    rdx,rbx
   14002cb0f:	sub    rdx,rbp
   14002cb12:	mov    r8,r13
   14002cb15:	mov    rcx,r14
   14002cb18:	call   r9
   14002cb1b:	cmp    DWORD PTR [r13+0x8],0x0
   14002cb20:	jge    0x14002cb32
   14002cb22:	mov    r9,r13
   14002cb25:	xor    r8d,r8d
   14002cb28:	mov    rdx,rbx
   14002cb2b:	mov    rcx,r14
   14002cb2e:	call   QWORD PTR [r14+0x18]
   14002cb32:	mov    rbx,rdi
   14002cb35:	test   rdi,rdi
   14002cb38:	jne    0x14002cad0
   14002cb3a:	mov    rax,QWORD PTR [r14+0x10]
   14002cb3e:	mov    DWORD PTR [rax+0x1c],0x0
   14002cb45:	mov    rax,QWORD PTR [r14+0x10]
   14002cb49:	mov    QWORD PTR [rax+0x8],0x0
   14002cb51:	xor    eax,eax
   14002cb53:	add    rsp,0x50
   14002cb57:	pop    r15
   14002cb59:	pop    r14
   14002cb5b:	pop    r13
   14002cb5d:	pop    r12
   14002cb5f:	pop    rdi
   14002cb60:	pop    rbp
   14002cb61:	pop    rbx
   14002cb62:	ret    
   14002cb63:	bt     edi,0x8
   14002cb67:	jae    0x14002cb89
   14002cb69:	mov    rcx,QWORD PTR [rbx]
   14002cb6c:	test   rcx,rcx
   14002cb6f:	je     0x14002cba8
   14002cb71:	mov    rax,QWORD PTR [rcx+0x8]
   14002cb75:	mov    QWORD PTR [rbx],rax
   14002cb78:	mov    QWORD PTR [rcx+0x8],rbx
   14002cb7c:	mov    rbx,rcx
   14002cb7f:	mov    rcx,QWORD PTR [rcx]
   14002cb82:	test   rcx,rcx
   14002cb85:	jne    0x14002cb71
   14002cb87:	jmp    0x14002cba8
   14002cb89:	mov    rcx,QWORD PTR [rbx+0x8]
   14002cb8d:	test   rcx,rcx
   14002cb90:	je     0x14002cba8
   14002cb92:	mov    rax,QWORD PTR [rcx]
   14002cb95:	mov    QWORD PTR [rbx+0x8],rax
   14002cb99:	mov    QWORD PTR [rcx],rbx
   14002cb9c:	mov    rbx,rcx
   14002cb9f:	mov    rcx,QWORD PTR [rcx+0x8]
   14002cba3:	test   rcx,rcx
   14002cba6:	jne    0x14002cb92
   14002cba8:	mov    rax,QWORD PTR [r14+0x10]
   14002cbac:	mov    QWORD PTR [rax+0x8],rbx
   14002cbb0:	test   ebp,ebp
   14002cbb2:	jns    0x14002cbcb
   14002cbb4:	mov    rbx,QWORD PTR [rbx+0x10]
   14002cbb8:	mov    rax,rbx
   14002cbbb:	add    rsp,0x50
   14002cbbf:	pop    r15
   14002cbc1:	pop    r14
   14002cbc3:	pop    r13
   14002cbc5:	pop    r12
   14002cbc7:	pop    rdi
   14002cbc8:	pop    rbp
   14002cbc9:	pop    rbx
   14002cbca:	ret    
   14002cbcb:	sub    rbx,rbp
   14002cbce:	mov    rax,rbx
   14002cbd1:	add    rsp,0x50
   14002cbd5:	pop    r15
   14002cbd7:	pop    r14
   14002cbd9:	pop    r13
   14002cbdb:	pop    r12
   14002cbdd:	pop    rdi
   14002cbde:	pop    rbp
   14002cbdf:	pop    rbx
   14002cbe0:	ret    
   14002cbe1:	movsxd r8,DWORD PTR [r13+0x0]
   14002cbe5:	lea    r9,[rsp+0x30]
   14002cbea:	lea    rdx,[rsp+0x30]
   14002cbef:	mov    QWORD PTR [rsp+0x48],rsi
   14002cbf4:	mov    QWORD PTR [rsp+0x90],r9
   14002cbfc:	mov    QWORD PTR [rsp+0x98],rdx
   14002cc04:	mov    QWORD PTR [rsp+0x20],r8
   14002cc09:	test   edi,0xa05
   14002cc0f:	je     0x14002cc43
   14002cc11:	bt     edi,0x9
   14002cc15:	jae    0x14002cc1c
   14002cc17:	mov    rsi,r12
   14002cc1a:	jmp    0x14002cc2b
   14002cc1c:	test   r15d,r15d
   14002cc1f:	jns    0x14002cc27
   14002cc21:	mov    rsi,QWORD PTR [r8+r12*1]
   14002cc25:	jmp    0x14002cc2b
   14002cc27:	lea    rsi,[r8+r12*1]
   14002cc2b:	test   rbx,rbx
   14002cc2e:	jne    0x14002ccb2
   14002cc34:	lea    rcx,[rsp+0x30]
   14002cc39:	lea    rax,[rsp+0x30]
   14002cc3e:	jmp    0x14002d110
   14002cc43:	test   dil,0x20
   14002cc47:	je     0x14002cc85
   14002cc49:	mov    rdx,r12
   14002cc4c:	mov    QWORD PTR [rsp+0xa8],rdx
   14002cc54:	test   ebp,ebp
   14002cc56:	jns    0x14002cc5f
   14002cc58:	mov    r12,QWORD PTR [r12+0x10]
   14002cc5d:	jmp    0x14002cc62
   14002cc5f:	sub    r12,rbp
   14002cc62:	test   r15d,r15d
   14002cc65:	jns    0x14002cc6d
   14002cc67:	mov    rsi,QWORD PTR [r8+r12*1]
   14002cc6b:	jmp    0x14002cc71
   14002cc6d:	lea    rsi,[r8+r12*1]
   14002cc71:	test   rbx,rbx
   14002cc74:	jne    0x14002ccb2
   14002cc76:	lea    rcx,[rsp+0x30]
   14002cc7b:	lea    rax,[rsp+0x30]
   14002cc80:	jmp    0x14002d118
   14002cc85:	test   rbx,rbx
   14002cc88:	je     0x14002cc34
   14002cc8a:	test   ebp,ebp
   14002cc8c:	jns    0x14002cc94
   14002cc8e:	mov    rcx,QWORD PTR [rbx+0x10]
   14002cc92:	jmp    0x14002cc9a
   14002cc94:	mov    rcx,rbx
   14002cc97:	sub    rcx,rbp
   14002cc9a:	cmp    rcx,r12
   14002cc9d:	je     0x14002cf2e
   14002cca3:	test   r15d,r15d
   14002cca6:	jns    0x14002ccae
   14002cca8:	mov    rsi,QWORD PTR [r8+r12*1]
   14002ccac:	jmp    0x14002ccb2
   14002ccae:	lea    rsi,[r8+r12*1]
   14002ccb2:	test   ebp,ebp
   14002ccb4:	jns    0x14002ccbc
   14002ccb6:	mov    rdx,QWORD PTR [rbx+0x10]
   14002ccba:	jmp    0x14002ccc2
   14002ccbc:	mov    rdx,rbx
   14002ccbf:	sub    rdx,rbp
   14002ccc2:	test   r15d,r15d
   14002ccc5:	jns    0x14002cccd
   14002ccc7:	mov    rdx,QWORD PTR [r8+rdx*1]
   14002cccb:	jmp    0x14002ccd0
   14002cccd:	add    rdx,r8
   14002ccd0:	test   r11,r11
   14002ccd3:	je     0x14002cce6
   14002ccd5:	mov    r8,rdx
   14002ccd8:	mov    r9,r13
   14002ccdb:	mov    rcx,r14
   14002ccde:	mov    rdx,rsi
   14002cce1:	call   r11
   14002cce4:	jmp    0x14002cd17
   14002cce6:	test   r15d,r15d
   14002cce9:	jg     0x14002cd0c
   14002cceb:	mov    rax,rsi
   14002ccee:	sub    rdx,rsi
   14002ccf1:	movzx  ecx,BYTE PTR [rax]
   14002ccf4:	cmp    cl,BYTE PTR [rax+rdx*1]
   14002ccf7:	jne    0x14002cd05
   14002ccf9:	inc    rax
   14002ccfc:	test   cl,cl
   14002ccfe:	jne    0x14002ccf1
   14002cd00:	mov    eax,r10d
   14002cd03:	jmp    0x14002cd29
   14002cd05:	sbb    eax,eax
   14002cd07:	or     eax,0x1
   14002cd0a:	jmp    0x14002cd29
   14002cd0c:	mov    r8,r15
   14002cd0f:	mov    rcx,rsi
   14002cd12:	call   0x14003bcc0
   14002cd17:	mov    r11,QWORD PTR [rsp+0x28]
   14002cd1c:	mov    r9,QWORD PTR [rsp+0x90]
   14002cd24:	mov    r8,QWORD PTR [rsp+0x20]
   14002cd29:	test   eax,eax
   14002cd2b:	je     0x14002cf1f
   14002cd31:	jns    0x14002ce15
   14002cd37:	mov    rdi,QWORD PTR [rbx+0x8]
   14002cd3b:	test   rdi,rdi
   14002cd3e:	je     0x14002cf7b
   14002cd44:	test   ebp,ebp
   14002cd46:	jns    0x14002cd4e
   14002cd48:	mov    rdx,QWORD PTR [rdi+0x10]
   14002cd4c:	jmp    0x14002cd54
   14002cd4e:	mov    rdx,rdi
   14002cd51:	sub    rdx,rbp
   14002cd54:	test   r15d,r15d
   14002cd57:	jns    0x14002cd5f
   14002cd59:	mov    rdx,QWORD PTR [r8+rdx*1]
   14002cd5d:	jmp    0x14002cd62
   14002cd5f:	add    rdx,r8
   14002cd62:	test   r11,r11
   14002cd65:	je     0x14002cd78
   14002cd67:	mov    r8,rdx
   14002cd6a:	mov    r9,r13
   14002cd6d:	mov    rcx,r14
   14002cd70:	mov    rdx,rsi
   14002cd73:	call   r11
   14002cd76:	jmp    0x14002cda8
   14002cd78:	test   r15d,r15d
   14002cd7b:	jg     0x14002cd9d
   14002cd7d:	mov    rax,rsi
   14002cd80:	sub    rdx,rsi
   14002cd83:	movzx  ecx,BYTE PTR [rax]
   14002cd86:	cmp    cl,BYTE PTR [rax+rdx*1]
   14002cd89:	jne    0x14002cd96
   14002cd8b:	inc    rax
   14002cd8e:	test   cl,cl
   14002cd90:	jne    0x14002cd83
   14002cd92:	xor    eax,eax
   14002cd94:	jmp    0x14002cdb2
   14002cd96:	sbb    eax,eax
   14002cd98:	or     eax,0x1
   14002cd9b:	jmp    0x14002cdb2
   14002cd9d:	mov    r8,r15
   14002cda0:	mov    rcx,rsi
   14002cda3:	call   0x14003bcc0
   14002cda8:	mov    r11,QWORD PTR [rsp+0x28]
   14002cdad:	mov    r8,QWORD PTR [rsp+0x20]
   14002cdb2:	test   eax,eax
   14002cdb4:	jns    0x14002cdd1
   14002cdb6:	mov    rax,QWORD PTR [rdi]
   14002cdb9:	mov    rcx,QWORD PTR [rsp+0x90]
   14002cdc1:	mov    QWORD PTR [rbx+0x8],rax
   14002cdc5:	mov    QWORD PTR [rdi],rbx
   14002cdc8:	mov    QWORD PTR [rcx+0x8],rdi
   14002cdcc:	jmp    0x14002cef2
   14002cdd1:	je     0x14002cf12
   14002cdd7:	mov    rax,QWORD PTR [rsp+0x98]
   14002cddf:	mov    rcx,QWORD PTR [rsp+0x90]
   14002cde7:	mov    r9,rbx
   14002cdea:	mov    QWORD PTR [rax],rdi
   14002cded:	mov    QWORD PTR [rsp+0x90],rbx
   14002cdf5:	mov    QWORD PTR [rcx+0x8],rbx
   14002cdf9:	mov    rbx,QWORD PTR [rdi]
   14002cdfc:	mov    QWORD PTR [rsp+0x98],rdi
   14002ce04:	test   rbx,rbx
   14002ce07:	je     0x14002d0ef
   14002ce0d:	xor    r10d,r10d
   14002ce10:	jmp    0x14002ccb2
   14002ce15:	mov    rdi,QWORD PTR [rbx]
   14002ce18:	test   rdi,rdi
   14002ce1b:	je     0x14002cfa1
   14002ce21:	test   ebp,ebp
   14002ce23:	jns    0x14002ce2b
   14002ce25:	mov    rdx,QWORD PTR [rdi+0x10]
   14002ce29:	jmp    0x14002ce31
   14002ce2b:	mov    rdx,rdi
   14002ce2e:	sub    rdx,rbp
   14002ce31:	test   r15d,r15d
   14002ce34:	jns    0x14002ce3c
   14002ce36:	mov    rdx,QWORD PTR [r8+rdx*1]
   14002ce3a:	jmp    0x14002ce3f
   14002ce3c:	add    rdx,r8
   14002ce3f:	test   r11,r11
   14002ce42:	je     0x14002ce55
   14002ce44:	mov    r8,rdx
   14002ce47:	mov    r9,r13
   14002ce4a:	mov    rcx,r14
   14002ce4d:	mov    rdx,rsi
   14002ce50:	call   r11
   14002ce53:	jmp    0x14002ce85
   14002ce55:	test   r15d,r15d
   14002ce58:	jg     0x14002ce7a
   14002ce5a:	mov    rax,rsi
   14002ce5d:	sub    rdx,rsi
   14002ce60:	movzx  ecx,BYTE PTR [rax]
   14002ce63:	cmp    cl,BYTE PTR [rax+rdx*1]
   14002ce66:	jne    0x14002ce73
   14002ce68:	inc    rax
   14002ce6b:	test   cl,cl
   14002ce6d:	jne    0x14002ce60
   14002ce6f:	xor    eax,eax
   14002ce71:	jmp    0x14002ce8f
   14002ce73:	sbb    eax,eax
   14002ce75:	or     eax,0x1
   14002ce78:	jmp    0x14002ce8f
   14002ce7a:	mov    r8,r15
   14002ce7d:	mov    rcx,rsi
   14002ce80:	call   0x14003bcc0
   14002ce85:	mov    r11,QWORD PTR [rsp+0x28]
   14002ce8a:	mov    r8,QWORD PTR [rsp+0x20]
   14002ce8f:	test   eax,eax
   14002ce91:	jle    0x14002cecd
   14002ce93:	mov    rax,QWORD PTR [rdi+0x8]
   14002ce97:	mov    QWORD PTR [rbx],rax
   14002ce9a:	mov    rax,QWORD PTR [rsp+0x98]
   14002cea2:	mov    QWORD PTR [rdi+0x8],rbx
   14002cea6:	mov    QWORD PTR [rax],rdi
   14002cea9:	mov    rbx,QWORD PTR [rdi]
   14002ceac:	mov    QWORD PTR [rsp+0x98],rdi
   14002ceb4:	test   rbx,rbx
   14002ceb7:	je     0x14002d0f4
   14002cebd:	mov    r9,QWORD PTR [rsp+0x90]
   14002cec5:	xor    r10d,r10d
   14002cec8:	jmp    0x14002ccb2
   14002cecd:	je     0x14002cf91
   14002ced3:	mov    rax,QWORD PTR [rsp+0x98]
   14002cedb:	mov    rcx,QWORD PTR [rsp+0x90]
   14002cee3:	mov    QWORD PTR [rsp+0x98],rbx
   14002ceeb:	mov    QWORD PTR [rcx+0x8],rdi
   14002ceef:	mov    QWORD PTR [rax],rbx
   14002cef2:	mov    rbx,QWORD PTR [rdi+0x8]
   14002cef6:	mov    QWORD PTR [rsp+0x90],rdi
   14002cefe:	mov    r9,rdi
   14002cf01:	test   rbx,rbx
   14002cf04:	je     0x14002d0fe
   14002cf0a:	xor    r10d,r10d
   14002cf0d:	jmp    0x14002ccb2
   14002cf12:	mov    rax,QWORD PTR [rdi]
   14002cf15:	mov    QWORD PTR [rbx+0x8],rax
   14002cf19:	mov    QWORD PTR [rdi],rbx
   14002cf1c:	mov    rbx,rdi
   14002cf1f:	mov    edi,DWORD PTR [rsp+0xa0]
   14002cf26:	mov    rdx,QWORD PTR [rsp+0x98]
   14002cf2e:	mov    rcx,QWORD PTR [rsp+0x90]
   14002cf36:	test   rbx,rbx
   14002cf39:	je     0x14002d108
   14002cf3f:	mov    rax,QWORD PTR [rbx+0x8]
   14002cf43:	mov    esi,edi
   14002cf45:	mov    QWORD PTR [rdx],rax
   14002cf48:	mov    rax,QWORD PTR [rbx]
   14002cf4b:	mov    QWORD PTR [rcx+0x8],rax
   14002cf4f:	and    esi,0x204
   14002cf55:	jne    0x14002d2b5
   14002cf5b:	test   dil,0x8
   14002cf5f:	je     0x14002cfc5
   14002cf61:	mov    rax,QWORD PTR [rsp+0x30]
   14002cf66:	mov    QWORD PTR [rbx],0x0
   14002cf6d:	mov    QWORD PTR [rsp+0x30],rbx
   14002cf72:	mov    QWORD PTR [rbx+0x8],rax
   14002cf76:	jmp    0x14002d22c
   14002cf7b:	mov    QWORD PTR [r9+0x8],rbx
   14002cf7f:	mov    rcx,rbx
   14002cf82:	mov    QWORD PTR [rsp+0x90],rbx
   14002cf8a:	xor    ebx,ebx
   14002cf8c:	jmp    0x14002d101
   14002cf91:	mov    rax,QWORD PTR [rdi+0x8]
   14002cf95:	mov    QWORD PTR [rbx],rax
   14002cf98:	mov    QWORD PTR [rdi+0x8],rbx
   14002cf9c:	jmp    0x14002cf1c
   14002cfa1:	mov    rax,QWORD PTR [rsp+0x98]
   14002cfa9:	mov    rcx,QWORD PTR [rsp+0x90]
   14002cfb1:	mov    edi,DWORD PTR [rsp+0xa0]
   14002cfb8:	mov    QWORD PTR [rax],rbx
   14002cfbb:	mov    rax,rbx
   14002cfbe:	xor    ebx,ebx
   14002cfc0:	jmp    0x14002d110
   14002cfc5:	test   dil,0x10
   14002cfc9:	je     0x14002cfe5
   14002cfcb:	mov    rax,QWORD PTR [rsp+0x38]
   14002cfd0:	mov    QWORD PTR [rbx+0x8],0x0
   14002cfd8:	mov    QWORD PTR [rsp+0x38],rbx
   14002cfdd:	mov    QWORD PTR [rbx],rax
   14002cfe0:	jmp    0x14002d266
   14002cfe5:	test   edi,0x1002
   14002cfeb:	je     0x14002d04d
   14002cfed:	test   ebp,ebp
   14002cfef:	jns    0x14002cff7
   14002cff1:	mov    r12,QWORD PTR [rbx+0x10]
   14002cff5:	jmp    0x14002cffd
   14002cff7:	mov    r12,rbx
   14002cffa:	sub    r12,rbp
   14002cffd:	mov    rax,QWORD PTR [r13+0x18]
   14002d001:	test   rax,rax
   14002d004:	je     0x14002d017
   14002d006:	test   dil,0x2
   14002d00a:	je     0x14002d017
   14002d00c:	mov    r8,r13
   14002d00f:	mov    rdx,r12
   14002d012:	mov    rcx,r14
   14002d015:	call   rax
   14002d017:	cmp    DWORD PTR [r13+0x8],0x0
   14002d01c:	jge    0x14002d02e
   14002d01e:	mov    r9,r13
   14002d021:	xor    r8d,r8d
   14002d024:	mov    rdx,rbx
   14002d027:	mov    rcx,r14
   14002d02a:	call   QWORD PTR [r14+0x18]
   14002d02e:	mov    rax,QWORD PTR [r14+0x10]
   14002d032:	xor    ebx,ebx
   14002d034:	dec    DWORD PTR [rax+0x1c]
   14002d037:	jns    0x14002d1ca
   14002d03d:	mov    rax,QWORD PTR [r14+0x10]
   14002d041:	mov    DWORD PTR [rax+0x1c],0xffffffff
   14002d048:	jmp    0x14002d1ca
   14002d04d:	test   edi,0x801
   14002d053:	je     0x14002d07d
   14002d055:	mov    rax,QWORD PTR [r14+0x20]
   14002d059:	test   BYTE PTR [rax+0x8],0x4
   14002d05d:	jne    0x14002d2b5
   14002d063:	mov    rax,QWORD PTR [rsp+0x38]
   14002d068:	mov    QWORD PTR [rbx+0x8],0x0
   14002d070:	mov    QWORD PTR [rsp+0x38],rbx
   14002d075:	mov    QWORD PTR [rbx],rax
   14002d078:	jmp    0x14002d141
   14002d07d:	test   dil,0x20
   14002d081:	je     0x14002d0e8
   14002d083:	mov    rax,QWORD PTR [r14+0x20]
   14002d087:	test   BYTE PTR [rax+0x8],0x4
   14002d08b:	je     0x14002d0c6
   14002d08d:	mov    rax,QWORD PTR [r13+0x18]
   14002d091:	test   rax,rax
   14002d094:	je     0x14002d0a1
   14002d096:	mov    r8,r13
   14002d099:	mov    rdx,r12
   14002d09c:	mov    rcx,r14
   14002d09f:	call   rax
   14002d0a1:	cmp    DWORD PTR [r13+0x8],0x0
   14002d0a6:	jge    0x14002d2b5
   14002d0ac:	mov    rdx,QWORD PTR [rsp+0xa8]
   14002d0b4:	mov    r9,r13
   14002d0b7:	xor    r8d,r8d
   14002d0ba:	mov    rcx,r14
   14002d0bd:	call   QWORD PTR [r14+0x18]
   14002d0c1:	jmp    0x14002d2b5
   14002d0c6:	mov    rcx,QWORD PTR [rsp+0xa8]
   14002d0ce:	mov    rax,QWORD PTR [rsp+0x38]
   14002d0d3:	mov    QWORD PTR [rcx+0x8],0x0
   14002d0db:	mov    QWORD PTR [rcx],rax
   14002d0de:	mov    QWORD PTR [rsp+0x38],rcx
   14002d0e3:	jmp    0x14002d2ae
   14002d0e8:	xor    eax,eax
   14002d0ea:	jmp    0x14002d211
   14002d0ef:	mov    rcx,r9
   14002d0f2:	jmp    0x14002d101
   14002d0f4:	mov    rcx,QWORD PTR [rsp+0x90]
   14002d0fc:	jmp    0x14002d101
   14002d0fe:	mov    rcx,rdi
   14002d101:	mov    edi,DWORD PTR [rsp+0xa0]
   14002d108:	mov    rax,QWORD PTR [rsp+0x98]
   14002d110:	mov    rdx,QWORD PTR [rsp+0xa8]
   14002d118:	mov    esi,edi
   14002d11a:	mov    QWORD PTR [rcx+0x8],0x0
   14002d122:	mov    QWORD PTR [rax],0x0
   14002d129:	and    esi,0x204
   14002d12f:	jne    0x14002d1c8
   14002d135:	test   edi,0x801
   14002d13b:	je     0x14002d226
   14002d141:	mov    rax,QWORD PTR [r13+0x10]
   14002d145:	test   rax,rax
   14002d148:	je     0x14002d15e
   14002d14a:	test   dil,0x1
   14002d14e:	je     0x14002d15e
   14002d150:	mov    r8,r13
   14002d153:	mov    rdx,r12
   14002d156:	mov    rcx,r14
   14002d159:	call   rax
   14002d15b:	mov    r12,rax
   14002d15e:	test   r12,r12
   14002d161:	je     0x14002d16b
   14002d163:	test   ebp,ebp
   14002d165:	js     0x14002d189
   14002d167:	lea    rbx,[r12+rbp*1]
   14002d16b:	test   rbx,rbx
   14002d16e:	je     0x14002d1c8
   14002d170:	mov    rcx,QWORD PTR [r14+0x10]
   14002d174:	mov    eax,DWORD PTR [rcx+0x1c]
   14002d177:	test   eax,eax
   14002d179:	js     0x14002d2b5
   14002d17f:	inc    eax
   14002d181:	mov    DWORD PTR [rcx+0x1c],eax
   14002d184:	jmp    0x14002d2b5
   14002d189:	xor    edx,edx
   14002d18b:	mov    r9,r13
   14002d18e:	mov    rcx,r14
   14002d191:	lea    r8d,[rdx+0x18]
   14002d195:	call   QWORD PTR [r14+0x18]
   14002d199:	mov    rbx,rax
   14002d19c:	test   rax,rax
   14002d19f:	je     0x14002d1a7
   14002d1a1:	mov    QWORD PTR [rax+0x10],r12
   14002d1a5:	jmp    0x14002d16b
   14002d1a7:	cmp    QWORD PTR [r13+0x10],0x0
   14002d1ac:	je     0x14002d1c8
   14002d1ae:	mov    rax,QWORD PTR [r13+0x18]
   14002d1b2:	test   rax,rax
   14002d1b5:	je     0x14002d1c8
   14002d1b7:	test   dil,0x1
   14002d1bb:	je     0x14002d1c8
   14002d1bd:	mov    r8,r13
   14002d1c0:	mov    rdx,r12
   14002d1c3:	mov    rcx,r14
   14002d1c6:	call   rax
   14002d1c8:	xor    ebx,ebx
   14002d1ca:	mov    rax,QWORD PTR [rsp+0x90]
   14002d1d2:	mov    rcx,QWORD PTR [rax+0x8]
   14002d1d6:	test   rcx,rcx
   14002d1d9:	je     0x14002d1ec
   14002d1db:	nop    DWORD PTR [rax+rax*1+0x0]
   14002d1e0:	mov    rax,rcx
   14002d1e3:	mov    rcx,QWORD PTR [rcx+0x8]
   14002d1e7:	test   rcx,rcx
   14002d1ea:	jne    0x14002d1e0
   14002d1ec:	mov    rcx,QWORD PTR [rsp+0x30]
   14002d1f1:	test   BYTE PTR [rsp+0xa0],0x2
   14002d1f9:	mov    QWORD PTR [rax+0x8],rcx
   14002d1fd:	mov    rdx,QWORD PTR [r14+0x10]
   14002d201:	mov    rcx,QWORD PTR [rsp+0x38]
   14002d206:	mov    QWORD PTR [rdx+0x8],rcx
   14002d20a:	cmovne rbx,r12
   14002d20e:	mov    rax,rbx
   14002d211:	mov    rsi,QWORD PTR [rsp+0x48]
   14002d216:	add    rsp,0x50
   14002d21a:	pop    r15
   14002d21c:	pop    r14
   14002d21e:	pop    r13
   14002d220:	pop    r12
   14002d222:	pop    rdi
   14002d223:	pop    rbp
   14002d224:	pop    rbx
   14002d225:	ret    
   14002d226:	test   dil,0x8
   14002d22a:	je     0x14002d260
   14002d22c:	mov    rbx,QWORD PTR [rsp+0x38]
   14002d231:	test   rbx,rbx
   14002d234:	je     0x14002d1c8
   14002d236:	mov    rcx,QWORD PTR [rbx+0x8]
   14002d23a:	test   rcx,rcx
   14002d23d:	je     0x14002d256
   14002d23f:	nop
   14002d240:	mov    rax,QWORD PTR [rcx]
   14002d243:	mov    QWORD PTR [rbx+0x8],rax
   14002d247:	mov    QWORD PTR [rcx],rbx
   14002d24a:	mov    rbx,rcx
   14002d24d:	mov    rcx,QWORD PTR [rcx+0x8]
   14002d251:	test   rcx,rcx
   14002d254:	jne    0x14002d240
   14002d256:	mov    rax,QWORD PTR [rbx]
   14002d259:	mov    QWORD PTR [rsp+0x38],rax
   14002d25e:	jmp    0x14002d2b5
   14002d260:	test   dil,0x10
   14002d264:	je     0x14002d2a1
   14002d266:	mov    rdi,QWORD PTR [rsp+0x30]
   14002d26b:	mov    rbx,rdi
   14002d26e:	test   rdi,rdi
   14002d271:	je     0x14002d1c8
   14002d277:	mov    rcx,QWORD PTR [rdi]
   14002d27a:	test   rcx,rcx
   14002d27d:	je     0x14002d296
   14002d27f:	nop
   14002d280:	mov    rax,QWORD PTR [rcx+0x8]
   14002d284:	mov    QWORD PTR [rbx],rax
   14002d287:	mov    QWORD PTR [rcx+0x8],rbx
   14002d28b:	mov    rbx,rcx
   14002d28e:	mov    rcx,QWORD PTR [rcx]
   14002d291:	test   rcx,rcx
   14002d294:	jne    0x14002d280
   14002d296:	mov    rax,QWORD PTR [rbx+0x8]
   14002d29a:	mov    QWORD PTR [rsp+0x30],rax
   14002d29f:	jmp    0x14002d2b5
   14002d2a1:	test   dil,0x20
   14002d2a5:	je     0x14002d3b3
   14002d2ab:	mov    rbx,rdx
   14002d2ae:	mov    rax,QWORD PTR [r14+0x10]
   14002d2b2:	inc    DWORD PTR [rax+0x1c]
   14002d2b5:	mov    rax,QWORD PTR [rsp+0x30]
   14002d2ba:	mov    QWORD PTR [rbx+0x8],rax
   14002d2be:	mov    rax,QWORD PTR [rsp+0x38]
   14002d2c3:	mov    QWORD PTR [rbx],rax
   14002d2c6:	mov    rax,QWORD PTR [r14+0x20]
   14002d2ca:	test   BYTE PTR [rax+0x8],0x8
   14002d2ce:	je     0x14002d396
   14002d2d4:	test   esi,esi
   14002d2d6:	je     0x14002d396
   14002d2dc:	test   ebp,ebp
   14002d2de:	jns    0x14002d2e6
   14002d2e0:	mov    rsi,QWORD PTR [rbx+0x10]
   14002d2e4:	jmp    0x14002d2ec
   14002d2e6:	mov    rsi,rbx
   14002d2e9:	sub    rsi,rbp
   14002d2ec:	mov    r12,QWORD PTR [rsp+0x20]
   14002d2f1:	test   r15d,r15d
   14002d2f4:	jns    0x14002d2fc
   14002d2f6:	mov    rsi,QWORD PTR [r12+rsi*1]
   14002d2fa:	jmp    0x14002d2ff
   14002d2fc:	add    rsi,r12
   14002d2ff:	mov    rdi,QWORD PTR [rsp+0x30]
   14002d304:	test   rdi,rdi
   14002d307:	je     0x14002d396
   14002d30d:	nop    DWORD PTR [rax]
   14002d310:	test   ebp,ebp
   14002d312:	jns    0x14002d31a
   14002d314:	mov    rdx,QWORD PTR [rdi+0x10]
   14002d318:	jmp    0x14002d320
   14002d31a:	mov    rdx,rdi
   14002d31d:	sub    rdx,rbp
   14002d320:	test   r15d,r15d
   14002d323:	jns    0x14002d32b
   14002d325:	mov    rdx,QWORD PTR [r12+rdx*1]
   14002d329:	jmp    0x14002d32e
   14002d32b:	add    rdx,r12
   14002d32e:	mov    rax,QWORD PTR [rsp+0x28]
   14002d333:	test   rax,rax
   14002d336:	je     0x14002d348
   14002d338:	mov    r8,rdx
   14002d33b:	mov    r9,r13
   14002d33e:	mov    rcx,r14
   14002d341:	mov    rdx,rsi
   14002d344:	call   rax
   14002d346:	jmp    0x14002d378
   14002d348:	test   r15d,r15d
   14002d34b:	jg     0x14002d36d
   14002d34d:	mov    rax,rsi
   14002d350:	sub    rdx,rsi
   14002d353:	movzx  ecx,BYTE PTR [rax]
   14002d356:	cmp    cl,BYTE PTR [rax+rdx*1]
   14002d359:	jne    0x14002d366
   14002d35b:	inc    rax
   14002d35e:	test   cl,cl
   14002d360:	jne    0x14002d353
   14002d362:	xor    eax,eax
   14002d364:	jmp    0x14002d378
   14002d366:	sbb    eax,eax
   14002d368:	or     eax,0x1
   14002d36b:	jmp    0x14002d378
   14002d36d:	mov    r8,r15
   14002d370:	mov    rcx,rsi
   14002d373:	call   0x14003bcc0
   14002d378:	test   eax,eax
   14002d37a:	jne    0x14002d396
   14002d37c:	mov    rax,QWORD PTR [rdi]
   14002d37f:	mov    QWORD PTR [rbx+0x8],rax
   14002d383:	mov    QWORD PTR [rdi],rbx
   14002d386:	mov    rbx,rdi
   14002d389:	mov    rdi,QWORD PTR [rdi+0x8]
   14002d38d:	test   rdi,rdi
   14002d390:	jne    0x14002d310
   14002d396:	mov    rax,QWORD PTR [r14+0x10]
   14002d39a:	mov    QWORD PTR [rax+0x8],rbx
   14002d39e:	test   ebp,ebp
   14002d3a0:	jns    0x14002d3ab
   14002d3a2:	mov    rbx,QWORD PTR [rbx+0x10]
   14002d3a6:	jmp    0x14002d20e
   14002d3ab:	sub    rbx,rbp
   14002d3ae:	jmp    0x14002d20e
   14002d3b3:	xor    ebx,ebx
   14002d3b5:	mov    r12d,ebx
   14002d3b8:	jmp    0x14002d1ca
   14002d3bd:	int3   
   14002d3be:	int3   
   14002d3bf:	int3   
   14002d3c0:	mov    QWORD PTR [rsp+0x20],rbx
   14002d3c5:	push   rsi
   14002d3c6:	push   r14
   14002d3c8:	push   r15
   14002d3ca:	sub    rsp,0x20
   14002d3ce:	mov    r15,QWORD PTR [rcx+0x8]
   14002d3d2:	mov    r14d,r8d
   14002d3d5:	mov    rbx,rdx
   14002d3d8:	mov    rsi,rcx
   14002d3db:	test   r15,r15
   14002d3de:	jne    0x14002d410
   14002d3e0:	mov    QWORD PTR [rcx+0x8],rdx
   14002d3e4:	mov    rax,QWORD PTR [rdx+0x30]
   14002d3e8:	mov    QWORD PTR [rcx+0x18],rax
   14002d3ec:	test   rax,rax
   14002d3ef:	lea    rcx,[rip+0x1da]        # 0x14002d5d0
   14002d3f6:	cmove  rax,rcx
   14002d3fa:	mov    QWORD PTR [rsi+0x18],rax
   14002d3fe:	mov    rax,rdx
   14002d401:	mov    rbx,QWORD PTR [rsp+0x58]
   14002d406:	add    rsp,0x20
   14002d40a:	pop    r15
   14002d40c:	pop    r14
   14002d40e:	pop    rsi
   14002d40f:	ret    
   14002d410:	test   rdx,rdx
   14002d413:	jne    0x14002d427
   14002d415:	mov    rax,r15
   14002d418:	mov    rbx,QWORD PTR [rsp+0x58]
   14002d41d:	add    rsp,0x20
   14002d421:	pop    r15
   14002d423:	pop    r14
   14002d425:	pop    rsi
   14002d426:	ret    
   14002d427:	mov    rax,QWORD PTR [rcx+0x20]
   14002d42b:	mov    QWORD PTR [rsp+0x50],r12
   14002d430:	mov    r12,QWORD PTR [rax]
   14002d433:	mov    rax,QWORD PTR [rcx+0x10]
   14002d437:	test   DWORD PTR [rax],0x1000
   14002d43d:	je     0x14002d446
   14002d43f:	xor    edx,edx
   14002d441:	call   0x14002d9b0
   14002d446:	mov    rax,QWORD PTR [r15+0x38]
   14002d44a:	test   rax,rax
   14002d44d:	je     0x14002d46a
   14002d44f:	mov    r9,r15
   14002d452:	mov    r8,rbx
   14002d455:	mov    edx,0x3
   14002d45a:	mov    rcx,rsi
   14002d45d:	call   rax
   14002d45f:	test   eax,eax
   14002d461:	jns    0x14002d46a
   14002d463:	xor    eax,eax
   14002d465:	jmp    0x14002d5b2
   14002d46a:	mov    QWORD PTR [rsi+0x8],rbx
   14002d46e:	mov    rax,QWORD PTR [rbx+0x30]
   14002d472:	lea    rcx,[rip+0x157]        # 0x14002d5d0
   14002d479:	test   rax,rax
   14002d47c:	cmove  rax,rcx
   14002d480:	mov    QWORD PTR [rsi+0x18],rax
   14002d484:	mov    rax,QWORD PTR [rsi+0x10]
   14002d488:	mov    ecx,DWORD PTR [rax]
   14002d48a:	test   cl,0x70
   14002d48d:	jne    0x14002d5af
   14002d493:	test   cl,0x2
   14002d496:	je     0x14002d49e
   14002d498:	test   r14b,0x2
   14002d49c:	jmp    0x14002d4ad
   14002d49e:	test   cl,0x3
   14002d4a1:	je     0x14002d4a9
   14002d4a3:	test   r14b,0x2
   14002d4a7:	je     0x14002d4b3
   14002d4a9:	test   r14b,0x1
   14002d4ad:	jne    0x14002d5af
   14002d4b3:	mov    rcx,rsi
   14002d4b6:	mov    QWORD PTR [rsp+0x48],rdi
   14002d4bb:	call   0x14002daf0
   14002d4c0:	mov    rcx,QWORD PTR [rsi+0x10]
   14002d4c4:	xor    r9d,r9d
   14002d4c7:	and    DWORD PTR [rcx],0xffffefff
   14002d4cd:	mov    rcx,QWORD PTR [rsi+0x10]
   14002d4d1:	mov    rdi,rax
   14002d4d4:	mov    QWORD PTR [rcx+0x8],r9
   14002d4d8:	mov    rcx,QWORD PTR [rsi+0x10]
   14002d4dc:	mov    DWORD PTR [rcx+0x1c],r9d
   14002d4e0:	mov    rax,QWORD PTR [rsi+0x10]
   14002d4e4:	test   BYTE PTR [rax],0x3
   14002d4e7:	je     0x14002d52f
   14002d4e9:	mov    rdx,QWORD PTR [rax+0x10]
   14002d4ed:	movsxd rcx,DWORD PTR [rax+0x18]
   14002d4f1:	lea    rax,[rdx+rcx*8]
   14002d4f5:	mov    ecx,r9d
   14002d4f8:	mov    r8,rax
   14002d4fb:	sub    r8,rdx
   14002d4fe:	add    r8,0x7
   14002d502:	shr    r8,0x3
   14002d506:	cmp    rdx,rax
   14002d509:	cmova  r8,r9
   14002d50d:	test   r8,r8
   14002d510:	je     0x14002d52f
   14002d512:	nop    DWORD PTR [rax+0x0]
   14002d516:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002d520:	inc    rcx
   14002d523:	mov    QWORD PTR [rdx],r9
   14002d526:	lea    rdx,[rdx+0x8]
   14002d52a:	cmp    rcx,r8
   14002d52d:	jb     0x14002d520
   14002d52f:	test   rdi,rdi
   14002d532:	je     0x14002d5aa
   14002d534:	mov    QWORD PTR [rsp+0x40],rbp
   14002d539:	and    r14d,0x2
   14002d53d:	nop    DWORD PTR [rax]
   14002d540:	mov    rbp,QWORD PTR [rdi]
   14002d543:	test   r14d,r14d
   14002d546:	jne    0x14002d58e
   14002d548:	movsxd rax,DWORD PTR [rbx+0x8]
   14002d54c:	test   eax,eax
   14002d54e:	jns    0x14002d556
   14002d550:	mov    rdx,QWORD PTR [rdi+0x10]
   14002d554:	jmp    0x14002d55c
   14002d556:	mov    rdx,rdi
   14002d559:	sub    rdx,rax
   14002d55c:	mov    r8d,DWORD PTR [rbx+0x4]
   14002d560:	movsxd rax,DWORD PTR [rbx]
   14002d563:	test   r8d,r8d
   14002d566:	jns    0x14002d56e
   14002d568:	mov    rdx,QWORD PTR [rax+rdx*1]
   14002d56c:	jmp    0x14002d571
   14002d56e:	add    rdx,rax
   14002d571:	mov    rax,QWORD PTR [rbx+0x28]
   14002d575:	test   rax,rax
   14002d578:	je     0x14002d584
   14002d57a:	mov    r8,rbx
   14002d57d:	mov    rcx,rsi
   14002d580:	call   rax
   14002d582:	jmp    0x14002d58b
   14002d584:	xor    ecx,ecx
   14002d586:	call   0x14002dc20
   14002d58b:	mov    DWORD PTR [rdi+0x8],eax
   14002d58e:	mov    r8d,0x20
   14002d594:	mov    rdx,rdi
   14002d597:	mov    rcx,rsi
   14002d59a:	call   r12
   14002d59d:	mov    rdi,rbp
   14002d5a0:	test   rbp,rbp
   14002d5a3:	jne    0x14002d540
   14002d5a5:	mov    rbp,QWORD PTR [rsp+0x40]
   14002d5aa:	mov    rdi,QWORD PTR [rsp+0x48]
   14002d5af:	mov    rax,r15
   14002d5b2:	mov    r12,QWORD PTR [rsp+0x50]
   14002d5b7:	mov    rbx,QWORD PTR [rsp+0x58]
   14002d5bc:	add    rsp,0x20
   14002d5c0:	pop    r15
   14002d5c2:	pop    r14
   14002d5c4:	pop    rsi
   14002d5c5:	ret    
   14002d5c6:	int3   
   14002d5c7:	int3   
   14002d5c8:	int3   
   14002d5c9:	int3   
   14002d5ca:	int3   
   14002d5cb:	int3   
   14002d5cc:	int3   
   14002d5cd:	int3   
   14002d5ce:	int3   
   14002d5cf:	int3   
   14002d5d0:	sub    rsp,0x28
   14002d5d4:	mov    rax,rdx
   14002d5d7:	test   rdx,rdx
   14002d5da:	je     0x14002d5ff
   14002d5dc:	test   r8,r8
   14002d5df:	jne    0x14002d5f0
   14002d5e1:	mov    rcx,rdx
   14002d5e4:	call   0x14003b88a
   14002d5e9:	xor    eax,eax
   14002d5eb:	add    rsp,0x28
   14002d5ef:	ret    
   14002d5f0:	mov    rdx,r8
   14002d5f3:	mov    rcx,rax
   14002d5f6:	add    rsp,0x28
   14002d5fa:	jmp    0x14003b956
   14002d5ff:	test   r8,r8
   14002d602:	je     0x14002d5e9
   14002d604:	mov    rcx,r8
   14002d607:	add    rsp,0x28
   14002d60b:	jmp    0x14003b890
   14002d610:	mov    QWORD PTR [rsp+0x8],rbx
   14002d615:	mov    QWORD PTR [rsp+0x10],rbp
   14002d61a:	mov    QWORD PTR [rsp+0x18],rsi
   14002d61f:	push   rdi
   14002d620:	push   r14
   14002d622:	push   r15
   14002d624:	sub    rsp,0x20
   14002d628:	mov    r14,r8
   14002d62b:	mov    r15,rdx
   14002d62e:	xor    edx,edx
   14002d630:	mov    r8d,0x80
   14002d636:	mov    rbp,rcx
   14002d639:	call   QWORD PTR [rcx]
   14002d63b:	mov    rsi,rax
   14002d63e:	test   rax,rax
   14002d641:	je     0x14002d685
   14002d643:	nop    DWORD PTR [rax+0x0]
   14002d647:	nop    WORD PTR [rax+rax*1+0x0]
   14002d650:	mov    rdi,QWORD PTR [rbp+0x38]
   14002d654:	mov    r8d,0x8
   14002d65a:	mov    rdx,rsi
   14002d65d:	test   rdi,rdi
   14002d660:	mov    rcx,rbp
   14002d663:	cmove  rdi,rbp
   14002d667:	call   QWORD PTR [rbp+0x0]
   14002d66a:	mov    r8,r14
   14002d66d:	mov    rdx,rsi
   14002d670:	mov    rcx,rdi
   14002d673:	mov    rbx,rax
   14002d676:	call   r15
   14002d679:	test   eax,eax
   14002d67b:	js     0x14002d687
   14002d67d:	mov    rsi,rbx
   14002d680:	test   rbx,rbx
   14002d683:	jne    0x14002d650
   14002d685:	xor    eax,eax
   14002d687:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d68c:	mov    rbp,QWORD PTR [rsp+0x48]
   14002d691:	mov    rsi,QWORD PTR [rsp+0x50]
   14002d696:	add    rsp,0x20
   14002d69a:	pop    r15
   14002d69c:	pop    r14
   14002d69e:	pop    rdi
   14002d69f:	ret    
   14002d6a0:	mov    QWORD PTR [rsp+0x8],rbx
   14002d6a5:	push   rdi
   14002d6a6:	sub    rsp,0x20
   14002d6aa:	mov    rax,QWORD PTR [rcx+0x10]
   14002d6ae:	mov    rdi,rdx
   14002d6b1:	mov    rbx,rcx
   14002d6b4:	test   DWORD PTR [rax],0x1000
   14002d6ba:	je     0x14002d6c3
   14002d6bc:	xor    edx,edx
   14002d6be:	call   0x14002d9b0
   14002d6c3:	test   rdi,rdi
   14002d6c6:	je     0x14002d6de
   14002d6c8:	mov    rax,QWORD PTR [rdi+0x10]
   14002d6cc:	test   DWORD PTR [rax],0x1000
   14002d6d2:	je     0x14002d6de
   14002d6d4:	xor    edx,edx
   14002d6d6:	mov    rcx,rdi
   14002d6d9:	call   0x14002d9b0
   14002d6de:	mov    rax,rdi
   14002d6e1:	test   rdi,rdi
   14002d6e4:	je     0x14002d6f4
   14002d6e6:	cmp    rax,rbx
   14002d6e9:	je     0x14002d724
   14002d6eb:	mov    rax,QWORD PTR [rax+0x30]
   14002d6ef:	test   rax,rax
   14002d6f2:	jne    0x14002d6e6
   14002d6f4:	mov    rax,QWORD PTR [rbx+0x30]
   14002d6f8:	test   rax,rax
   14002d6fb:	je     0x14002d700
   14002d6fd:	dec    DWORD PTR [rax+0x2c]
   14002d700:	xor    ecx,ecx
   14002d702:	mov    QWORD PTR [rbx+0x38],rcx
   14002d706:	mov    QWORD PTR [rbx+0x30],rcx
   14002d70a:	test   rdi,rdi
   14002d70d:	jne    0x14002d731
   14002d70f:	mov    rcx,QWORD PTR [rbx+0x20]
   14002d713:	mov    rdx,QWORD PTR [rcx]
   14002d716:	mov    QWORD PTR [rbx],rdx
   14002d719:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d71e:	add    rsp,0x20
   14002d722:	pop    rdi
   14002d723:	ret    
   14002d724:	xor    eax,eax
   14002d726:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d72b:	add    rsp,0x20
   14002d72f:	pop    rdi
   14002d730:	ret    
   14002d731:	lea    rax,[rip+0x18]        # 0x14002d750
   14002d738:	mov    QWORD PTR [rbx+0x30],rdi
   14002d73c:	mov    QWORD PTR [rbx],rax
   14002d73f:	inc    DWORD PTR [rdi+0x2c]
   14002d742:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d747:	mov    rax,rdi
   14002d74a:	add    rsp,0x20
   14002d74e:	pop    rdi
   14002d74f:	ret    
   14002d750:	rex push rdi
   14002d752:	push   r12
   14002d754:	push   r15
   14002d756:	sub    rsp,0x20
   14002d75a:	mov    r12d,r8d
   14002d75d:	mov    rdi,rdx
   14002d760:	mov    r15,rcx
   14002d763:	test   r8b,0x63
   14002d767:	je     0x14002d779
   14002d769:	mov    rax,QWORD PTR [rcx+0x20]
   14002d76d:	add    rsp,0x20
   14002d771:	pop    r15
   14002d773:	pop    r12
   14002d775:	pop    rdi
   14002d776:	rex.W jmp QWORD PTR [rax]
   14002d779:	test   rdx,rdx
   14002d77c:	jne    0x14002d793
   14002d77e:	test   r8d,0x180
   14002d785:	jne    0x14002d793
   14002d787:	xor    eax,eax
   14002d789:	add    rsp,0x20
   14002d78d:	pop    r15
   14002d78f:	pop    r12
   14002d791:	pop    rdi
   14002d792:	ret    
   14002d793:	mov    QWORD PTR [rsp+0x40],rbx
   14002d798:	test   r8d,0x384
   14002d79f:	je     0x14002d7f3
   14002d7a1:	mov    rbx,rcx
   14002d7a4:	test   rcx,rcx
   14002d7a7:	je     0x14002d850
   14002d7ad:	nop    DWORD PTR [rax]
   14002d7b0:	mov    rax,QWORD PTR [rbx+0x20]
   14002d7b4:	mov    r8d,r12d
   14002d7b7:	mov    rdx,rdi
   14002d7ba:	mov    rcx,rbx
   14002d7bd:	call   QWORD PTR [rax]
   14002d7bf:	test   rax,rax
   14002d7c2:	jne    0x14002d7e0
   14002d7c4:	mov    rbx,QWORD PTR [rbx+0x30]
   14002d7c8:	test   rbx,rbx
   14002d7cb:	jne    0x14002d7b0
   14002d7cd:	mov    QWORD PTR [r15+0x38],rbx
   14002d7d1:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d7d6:	add    rsp,0x20
   14002d7da:	pop    r15
   14002d7dc:	pop    r12
   14002d7de:	pop    rdi
   14002d7df:	ret    
   14002d7e0:	mov    QWORD PTR [r15+0x38],rbx
   14002d7e4:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d7e9:	add    rsp,0x20
   14002d7ed:	pop    r15
   14002d7ef:	pop    r12
   14002d7f1:	pop    rdi
   14002d7f2:	ret    
   14002d7f3:	mov    rdx,QWORD PTR [rcx+0x38]
   14002d7f7:	test   rdx,rdx
   14002d7fa:	je     0x14002d823
   14002d7fc:	mov    rax,QWORD PTR [rdx+0x10]
   14002d800:	mov    rcx,QWORD PTR [rax+0x8]
   14002d804:	test   rcx,rcx
   14002d807:	je     0x14002d823
   14002d809:	mov    rax,QWORD PTR [rdx+0x8]
   14002d80d:	movsxd rdx,DWORD PTR [rax+0x8]
   14002d811:	test   edx,edx
   14002d813:	jns    0x14002d81b
   14002d815:	mov    rcx,QWORD PTR [rcx+0x10]
   14002d819:	jmp    0x14002d81e
   14002d81b:	sub    rcx,rdx
   14002d81e:	cmp    rdi,rcx
   14002d821:	je     0x14002d86d
   14002d823:	mov    rbx,r15
   14002d826:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002d830:	mov    rax,QWORD PTR [rbx+0x20]
   14002d834:	mov    r8d,0x4
   14002d83a:	mov    rdx,rdi
   14002d83d:	mov    rcx,rbx
   14002d840:	call   QWORD PTR [rax]
   14002d842:	test   rax,rax
   14002d845:	jne    0x14002d869
   14002d847:	mov    rbx,QWORD PTR [rbx+0x30]
   14002d84b:	test   rbx,rbx
   14002d84e:	jne    0x14002d830
   14002d850:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d855:	mov    QWORD PTR [r15+0x38],0x0
   14002d85d:	xor    eax,eax
   14002d85f:	add    rsp,0x20
   14002d863:	pop    r15
   14002d865:	pop    r12
   14002d867:	pop    rdi
   14002d868:	ret    
   14002d869:	mov    QWORD PTR [r15+0x38],rbx
   14002d86d:	mov    QWORD PTR [rsp+0x48],rbp
   14002d872:	mov    QWORD PTR [rsp+0x50],rsi
   14002d877:	mov    rsi,QWORD PTR [r15+0x38]
   14002d87b:	mov    rax,QWORD PTR [rsi+0x20]
   14002d87f:	mov    QWORD PTR [rsp+0x58],r14
   14002d884:	mov    r8d,r12d
   14002d887:	mov    rdx,rdi
   14002d88a:	mov    rcx,rsi
   14002d88d:	call   QWORD PTR [rax]
   14002d88f:	mov    r14,rax
   14002d892:	test   rax,rax
   14002d895:	je     0x14002d94b
   14002d89b:	nop    DWORD PTR [rax+rax*1+0x0]
   14002d8a0:	mov    rax,QWORD PTR [rsi+0x20]
   14002d8a4:	mov    rdi,QWORD PTR [rsi+0x8]
   14002d8a8:	test   BYTE PTR [rax+0x8],0x3
   14002d8ac:	je     0x14002d8b8
   14002d8ae:	mov    rax,QWORD PTR [rsi+0x10]
   14002d8b2:	mov    rbp,QWORD PTR [rax+0x8]
   14002d8b6:	jmp    0x14002d8ba
   14002d8b8:	xor    ebp,ebp
   14002d8ba:	mov    rbx,r15
   14002d8bd:	nop    DWORD PTR [rax]
   14002d8c0:	cmp    rbx,rsi
   14002d8c3:	je     0x14002d97d
   14002d8c9:	test   rbp,rbp
   14002d8cc:	je     0x14002d913
   14002d8ce:	mov    r9,QWORD PTR [rbx+0x20]
   14002d8d2:	test   BYTE PTR [r9+0x8],0x3
   14002d8d7:	je     0x14002d913
   14002d8d9:	mov    rcx,QWORD PTR [rbx+0x8]
   14002d8dd:	cmp    rdi,rcx
   14002d8e0:	je     0x14002d902
   14002d8e2:	mov    eax,DWORD PTR [rcx]
   14002d8e4:	cmp    DWORD PTR [rdi],eax
   14002d8e6:	jne    0x14002d913
   14002d8e8:	mov    eax,DWORD PTR [rcx+0x4]
   14002d8eb:	cmp    DWORD PTR [rdi+0x4],eax
   14002d8ee:	jne    0x14002d913
   14002d8f0:	mov    eax,DWORD PTR [rcx+0x8]
   14002d8f3:	cmp    DWORD PTR [rdi+0x8],eax
   14002d8f6:	jne    0x14002d913
   14002d8f8:	mov    rax,QWORD PTR [rcx+0x28]
   14002d8fc:	cmp    QWORD PTR [rdi+0x28],rax
   14002d900:	jne    0x14002d913
   14002d902:	mov    r8d,0x400
   14002d908:	mov    rdx,rbp
   14002d90b:	mov    rcx,rbx
   14002d90e:	call   QWORD PTR [r9]
   14002d911:	jmp    0x14002d925
   14002d913:	mov    rax,QWORD PTR [rbx+0x20]
   14002d917:	mov    r8d,0x4
   14002d91d:	mov    rdx,r14
   14002d920:	mov    rcx,rbx
   14002d923:	call   QWORD PTR [rax]
   14002d925:	test   rax,rax
   14002d928:	jne    0x14002d930
   14002d92a:	mov    rbx,QWORD PTR [rbx+0x30]
   14002d92e:	jmp    0x14002d8c0
   14002d930:	mov    rax,QWORD PTR [rsi+0x20]
   14002d934:	mov    r8d,r12d
   14002d937:	mov    rdx,r14
   14002d93a:	mov    rcx,rsi
   14002d93d:	call   QWORD PTR [rax]
   14002d93f:	mov    r14,rax
   14002d942:	test   rax,rax
   14002d945:	jne    0x14002d8a0
   14002d94b:	mov    rsi,QWORD PTR [rsi+0x30]
   14002d94f:	mov    QWORD PTR [r15+0x38],rsi
   14002d953:	test   rsi,rsi
   14002d956:	je     0x14002d982
   14002d958:	mov    rax,QWORD PTR [rsi+0x20]
   14002d95c:	xor    edx,edx
   14002d95e:	mov    rcx,rsi
   14002d961:	test   r12b,0x8
   14002d965:	je     0x14002d972
   14002d967:	mov    r8d,0x80
   14002d96d:	jmp    0x14002d88d
   14002d972:	mov    r8d,0x100
   14002d978:	jmp    0x14002d88d
   14002d97d:	mov    rax,r14
   14002d980:	jmp    0x14002d984
   14002d982:	xor    eax,eax
   14002d984:	mov    rsi,QWORD PTR [rsp+0x50]
   14002d989:	mov    rbp,QWORD PTR [rsp+0x48]
   14002d98e:	mov    r14,QWORD PTR [rsp+0x58]
   14002d993:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d998:	add    rsp,0x20
   14002d99c:	pop    r15
   14002d99e:	pop    r12
   14002d9a0:	pop    rdi
   14002d9a1:	ret    
   14002d9a2:	int3   
   14002d9a3:	int3   
   14002d9a4:	int3   
   14002d9a5:	int3   
   14002d9a6:	int3   
   14002d9a7:	int3   
   14002d9a8:	int3   
   14002d9a9:	int3   
   14002d9aa:	int3   
   14002d9ab:	int3   
   14002d9ac:	int3   
   14002d9ad:	int3   
   14002d9ae:	int3   
   14002d9af:	int3   
   14002d9b0:	mov    QWORD PTR [rsp+0x10],rsi
   14002d9b5:	push   rdi
   14002d9b6:	sub    rsp,0x20
   14002d9ba:	mov    rax,QWORD PTR [rcx+0x20]
   14002d9be:	mov    rdi,rcx
   14002d9c1:	xor    r11d,r11d
   14002d9c4:	mov    rsi,QWORD PTR [rax]
   14002d9c7:	mov    rax,QWORD PTR [rcx+0x10]
   14002d9cb:	mov    r8d,DWORD PTR [rax]
   14002d9ce:	mov    ecx,r8d
   14002d9d1:	and    ecx,0x1000
   14002d9d7:	test   rdx,rdx
   14002d9da:	jne    0x14002d9f4
   14002d9dc:	test   ecx,ecx
   14002d9de:	jne    0x14002d9ee
   14002d9e0:	or     eax,0xffffffff
   14002d9e3:	mov    rsi,QWORD PTR [rsp+0x38]
   14002d9e8:	add    rsp,0x20
   14002d9ec:	pop    rdi
   14002d9ed:	ret    
   14002d9ee:	mov    rdx,QWORD PTR [rax+0x8]
   14002d9f2:	jmp    0x14002d9fd
   14002d9f4:	cmp    DWORD PTR [rax+0x1c],r11d
   14002d9f8:	jne    0x14002d9e0
   14002d9fa:	mov    ecx,r11d
   14002d9fd:	btr    r8d,0xc
   14002da02:	mov    DWORD PTR [rax],r8d
   14002da05:	mov    rax,QWORD PTR [rdi+0x10]
   14002da09:	mov    r8d,DWORD PTR [rax]
   14002da0c:	test   r8b,0x3
   14002da10:	je     0x14002dab8
   14002da16:	mov    QWORD PTR [rax+0x8],r11
   14002da1a:	mov    rax,QWORD PTR [rdi+0x10]
   14002da1e:	test   ecx,ecx
   14002da20:	je     0x14002da7a
   14002da22:	mov    r8,QWORD PTR [rax+0x10]
   14002da26:	movsxd rax,DWORD PTR [rax+0x18]
   14002da2a:	mov    r9,r11
   14002da2d:	lea    rcx,[r8+rax*8]
   14002da31:	mov    r10,rcx
   14002da34:	sub    r10,r8
   14002da37:	add    r10,0x7
   14002da3b:	shr    r10,0x3
   14002da3f:	cmp    r8,rcx
   14002da42:	cmova  r10,r11
   14002da46:	test   r10,r10
   14002da49:	je     0x14002dadf
   14002da4f:	nop
   14002da50:	mov    rax,QWORD PTR [r8]
   14002da53:	test   rax,rax
   14002da56:	je     0x14002da61
   14002da58:	mov    QWORD PTR [r8],rdx
   14002da5b:	mov    rdx,QWORD PTR [rax]
   14002da5e:	mov    QWORD PTR [rax],r11
   14002da61:	inc    r9
   14002da64:	add    r8,0x8
   14002da68:	cmp    r9,r10
   14002da6b:	jb     0x14002da50
   14002da6d:	xor    eax,eax
   14002da6f:	mov    rsi,QWORD PTR [rsp+0x38]
   14002da74:	add    rsp,0x20
   14002da78:	pop    rdi
   14002da79:	ret    
   14002da7a:	mov    DWORD PTR [rax+0x1c],r11d
   14002da7e:	test   rdx,rdx
   14002da81:	je     0x14002dadf
   14002da83:	mov    QWORD PTR [rsp+0x30],rbx
   14002da88:	nop    DWORD PTR [rax+rax*1+0x0]
   14002da90:	mov    rbx,QWORD PTR [rdx]
   14002da93:	mov    r8d,0x20
   14002da99:	mov    rcx,rdi
   14002da9c:	call   rsi
   14002da9e:	mov    rdx,rbx
   14002daa1:	test   rbx,rbx
   14002daa4:	jne    0x14002da90
   14002daa6:	mov    rbx,QWORD PTR [rsp+0x30]
   14002daab:	xor    eax,eax
   14002daad:	mov    rsi,QWORD PTR [rsp+0x38]
   14002dab2:	add    rsp,0x20
   14002dab6:	pop    rdi
   14002dab7:	ret    
   14002dab8:	test   r8b,0xc
   14002dabc:	je     0x14002dac4
   14002dabe:	mov    QWORD PTR [rax+0x8],rdx
   14002dac2:	jmp    0x14002dad0
   14002dac4:	mov    QWORD PTR [rax+0x8],r11
   14002dac8:	mov    rax,QWORD PTR [rdi+0x10]
   14002dacc:	mov    QWORD PTR [rax+0x10],rdx
   14002dad0:	test   ecx,ecx
   14002dad2:	jne    0x14002dadf
   14002dad4:	mov    rax,QWORD PTR [rdi+0x10]
   14002dad8:	mov    DWORD PTR [rax+0x1c],0xffffffff
   14002dadf:	xor    eax,eax
   14002dae1:	mov    rsi,QWORD PTR [rsp+0x38]
   14002dae6:	add    rsp,0x20
   14002daea:	pop    rdi
   14002daeb:	ret    
   14002daec:	int3   
   14002daed:	int3   
   14002daee:	int3   
   14002daef:	int3   
   14002daf0:	mov    QWORD PTR [rsp+0x8],rbx
   14002daf5:	mov    rax,QWORD PTR [rcx+0x10]
   14002daf9:	mov    rbx,rcx
   14002dafc:	mov    r8d,DWORD PTR [rax]
   14002daff:	bt     r8d,0xc
   14002db04:	jae    0x14002db10
   14002db06:	mov    rax,QWORD PTR [rax+0x8]
   14002db0a:	mov    rbx,QWORD PTR [rsp+0x8]
   14002db0f:	ret    
   14002db10:	xor    edx,edx
   14002db12:	mov    r10d,edx
   14002db15:	test   r8b,0x3
   14002db19:	je     0x14002db8c
   14002db1b:	mov    r8,QWORD PTR [rax+0x10]
   14002db1f:	movsxd rax,DWORD PTR [rax+0x18]
   14002db23:	mov    r9d,edx
   14002db26:	lea    rcx,[r8+rax*8]
   14002db2a:	mov    r11,rcx
   14002db2d:	sub    r11,r8
   14002db30:	add    r11,0x7
   14002db34:	shr    r11,0x3
   14002db38:	cmp    r8,rcx
   14002db3b:	cmova  r11,rdx
   14002db3f:	test   r11,r11
   14002db42:	je     0x14002dc04
   14002db48:	mov    rax,QWORD PTR [r8]
   14002db4b:	test   rax,rax
   14002db4e:	je     0x14002db7e
   14002db50:	test   rdx,rdx
   14002db53:	je     0x14002db5a
   14002db55:	mov    QWORD PTR [rdx],rax
   14002db58:	jmp    0x14002db60
   14002db5a:	mov    rdx,rax
   14002db5d:	mov    r10,rax
   14002db60:	mov    rax,QWORD PTR [rdx]
   14002db63:	test   rax,rax
   14002db66:	je     0x14002db7b
   14002db68:	nop    DWORD PTR [rax+rax*1+0x0]
   14002db70:	mov    rdx,rax
   14002db73:	mov    rax,QWORD PTR [rax]
   14002db76:	test   rax,rax
   14002db79:	jne    0x14002db70
   14002db7b:	mov    QWORD PTR [r8],rdx
   14002db7e:	inc    r9
   14002db81:	add    r8,0x8
   14002db85:	cmp    r9,r11
   14002db88:	jb     0x14002db48
   14002db8a:	jmp    0x14002dc04
   14002db8c:	test   r8b,0x70
   14002db90:	je     0x14002db98
   14002db92:	mov    r10,QWORD PTR [rax+0x10]
   14002db96:	jmp    0x14002dc04
   14002db98:	mov    r8,QWORD PTR [rax+0x8]
   14002db9c:	test   r8,r8
   14002db9f:	je     0x14002dc04
   14002dba1:	mov    rcx,QWORD PTR [r8+0x8]
   14002dba5:	test   rcx,rcx
   14002dba8:	je     0x14002dbc6
   14002dbaa:	nop    WORD PTR [rax+rax*1+0x0]
   14002dbb0:	mov    rax,QWORD PTR [rcx]
   14002dbb3:	mov    QWORD PTR [r8+0x8],rax
   14002dbb7:	mov    QWORD PTR [rcx],r8
   14002dbba:	mov    r8,rcx
   14002dbbd:	mov    rcx,QWORD PTR [rcx+0x8]
   14002dbc1:	test   rcx,rcx
   14002dbc4:	jne    0x14002dbb0
   14002dbc6:	mov    rdx,QWORD PTR [r8]
   14002dbc9:	mov    r10,r8
   14002dbcc:	test   rdx,rdx
   14002dbcf:	je     0x14002dc04
   14002dbd1:	mov    rax,QWORD PTR [rdx+0x8]
   14002dbd5:	test   rax,rax
   14002dbd8:	je     0x14002dbf9
   14002dbda:	nop    WORD PTR [rax+rax*1+0x0]
   14002dbe0:	mov    rcx,QWORD PTR [rax]
   14002dbe3:	mov    QWORD PTR [rdx+0x8],rcx
   14002dbe7:	mov    QWORD PTR [rax],rdx
   14002dbea:	mov    rdx,rax
   14002dbed:	mov    rax,QWORD PTR [rax+0x8]
   14002dbf1:	test   rax,rax
   14002dbf4:	jne    0x14002dbe0
   14002dbf6:	mov    QWORD PTR [r8],rdx
   14002dbf9:	mov    r8,rdx
   14002dbfc:	mov    rdx,QWORD PTR [rdx]
   14002dbff:	test   rdx,rdx
   14002dc02:	jne    0x14002dbd1
   14002dc04:	mov    rcx,QWORD PTR [rbx+0x10]
   14002dc08:	mov    rax,r10
   14002dc0b:	mov    QWORD PTR [rcx+0x8],r10
   14002dc0f:	mov    rcx,QWORD PTR [rbx+0x10]
   14002dc13:	mov    rbx,QWORD PTR [rsp+0x8]
   14002dc18:	or     DWORD PTR [rcx],0x1000
   14002dc1e:	ret    
   14002dc1f:	int3   
   14002dc20:	test   r8d,r8d
   14002dc23:	jg     0x14002dc4b
   14002dc25:	movzx  eax,BYTE PTR [rdx]
   14002dc28:	test   eax,eax
   14002dc2a:	je     0x14002dc8a
   14002dc2c:	nop    DWORD PTR [rax+0x0]
   14002dc30:	movzx  eax,al
   14002dc33:	imul   ecx,ecx,0x11
   14002dc36:	lea    rdx,[rdx+0x1]
   14002dc3a:	add    eax,0x17cfb
   14002dc3f:	add    ecx,eax
   14002dc41:	movzx  eax,BYTE PTR [rdx]
   14002dc44:	test   eax,eax
   14002dc46:	jne    0x14002dc30
   14002dc48:	mov    eax,ecx
   14002dc4a:	ret    
   14002dc4b:	movsxd rax,r8d
   14002dc4e:	xor    r8d,r8d
   14002dc51:	add    rax,rdx
   14002dc54:	mov    r9,rax
   14002dc57:	sub    r9,rdx
   14002dc5a:	cmp    rdx,rax
   14002dc5d:	cmova  r9,r8
   14002dc61:	test   r9,r9
   14002dc64:	je     0x14002dc8a
   14002dc66:	mov    r8,rdx
   14002dc69:	neg    r8
   14002dc6c:	nop    DWORD PTR [rax+0x0]
   14002dc70:	movzx  eax,BYTE PTR [rdx]
   14002dc73:	imul   ecx,ecx,0x11
   14002dc76:	lea    rdx,[rdx+0x1]
   14002dc7a:	add    eax,0x17cfb
   14002dc7f:	add    ecx,eax
   14002dc81:	lea    rax,[r8+rdx*1]
   14002dc85:	cmp    rax,r9
   14002dc88:	jb     0x14002dc70
   14002dc8a:	mov    eax,ecx
   14002dc8c:	ret    
   14002dc8d:	int3   
   14002dc8e:	int3   
   14002dc8f:	int3   
   14002dc90:	mov    QWORD PTR [rsp+0x8],rbx
   14002dc95:	push   rdi
   14002dc96:	sub    rsp,0x30
   14002dc9a:	mov    rax,QWORD PTR [rsp+0x68]
   14002dc9f:	mov    rdi,rdx
   14002dca2:	lea    rdx,[rip+0x137bf]        # 0x140041468
   14002dca9:	mov    rcx,rax
   14002dcac:	mov    rbx,r9
   14002dcaf:	mov    QWORD PTR [rip+0x2627a],r8        # 0x140053f30
   14002dcb6:	shr    rcx,0x20
   14002dcba:	mov    DWORD PTR [rip+0x26258],0x0        # 0x140053f1c
   14002dcc4:	imul   ecx,eax
   14002dcc7:	mov    DWORD PTR [rip+0x2624b],ecx        # 0x140053f18
   14002dccd:	mov    rcx,QWORD PTR [rip+0x2781c]        # 0x1400554f0
   14002dcd4:	call   QWORD PTR [rip+0xf5e6]        # 0x14003d2c0
   14002dcda:	mov    r8,QWORD PTR [rsp+0x60]
   14002dcdf:	mov    rcx,QWORD PTR [rip+0x2780a]        # 0x1400554f0
   14002dce6:	mov    rax,QWORD PTR [r8+0x10]
   14002dcea:	mov    r9,QWORD PTR [r8+0x8]
   14002dcee:	mov    r8,QWORD PTR [r8]
   14002dcf1:	lea    rdx,[rip+0x13788]        # 0x140041480
   14002dcf8:	mov    QWORD PTR [rsp+0x20],rax
   14002dcfd:	call   QWORD PTR [rip+0xf5bd]        # 0x14003d2c0
   14002dd03:	mov    rcx,QWORD PTR [rip+0x277e6]        # 0x1400554f0
   14002dd0a:	lea    rdx,[rip+0x13797]        # 0x1400414a8
   14002dd11:	mov    r8,rbx
   14002dd14:	call   QWORD PTR [rip+0xf5a6]        # 0x14003d2c0
   14002dd1a:	mov    r8,QWORD PTR [rdi+0x10]
   14002dd1e:	mov    rcx,QWORD PTR [rip+0x277cb]        # 0x1400554f0
   14002dd25:	lea    rdx,[rip+0x1378c]        # 0x1400414b8
   14002dd2c:	call   QWORD PTR [rip+0xf58e]        # 0x14003d2c0
   14002dd32:	mov    rcx,QWORD PTR [rip+0x277b7]        # 0x1400554f0
   14002dd39:	lea    rdx,[rip+0x13788]        # 0x1400414c8
   14002dd40:	call   QWORD PTR [rip+0xf57a]        # 0x14003d2c0
   14002dd46:	mov    rbx,QWORD PTR [rsp+0x40]
   14002dd4b:	add    rsp,0x30
   14002dd4f:	pop    rdi
   14002dd50:	ret    
   14002dd51:	int3   
   14002dd52:	int3   
   14002dd53:	int3   
   14002dd54:	int3   
   14002dd55:	int3   
   14002dd56:	int3   
   14002dd57:	int3   
   14002dd58:	int3   
   14002dd59:	int3   
   14002dd5a:	int3   
   14002dd5b:	int3   
   14002dd5c:	int3   
   14002dd5d:	int3   
   14002dd5e:	int3   
   14002dd5f:	int3   
   14002dd60:	sub    rsp,0x28
   14002dd64:	mov    rcx,QWORD PTR [rip+0x27785]        # 0x1400554f0
   14002dd6b:	lea    rdx,[rip+0x1376e]        # 0x1400414e0
   14002dd72:	call   QWORD PTR [rip+0xf548]        # 0x14003d2c0
   14002dd78:	mov    r8d,DWORD PTR [rip+0x2619d]        # 0x140053f1c
   14002dd7f:	mov    rcx,QWORD PTR [rip+0x2776a]        # 0x1400554f0
   14002dd86:	lea    rdx,[rip+0x13763]        # 0x1400414f0
   14002dd8d:	call   QWORD PTR [rip+0xf52d]        # 0x14003d2c0
   14002dd93:	mov    rcx,QWORD PTR [rip+0x27756]        # 0x1400554f0
   14002dd9a:	lea    rdx,[rip+0x1375f]        # 0x140041500
   14002dda1:	call   QWORD PTR [rip+0xf519]        # 0x14003d2c0
   14002dda7:	mov    rcx,QWORD PTR [rip+0x27742]        # 0x1400554f0
   14002ddae:	lea    rdx,[rip+0x1375b]        # 0x140041510
   14002ddb5:	add    rsp,0x28
   14002ddb9:	rex.W jmp QWORD PTR [rip+0xf500]        # 0x14003d2c0
   14002ddc0:	sub    rsp,0x28
   14002ddc4:	lea    r8,[rip+0xf64d]        # 0x14003d418
   14002ddcb:	call   0x14001c3e0
   14002ddd0:	cmp    BYTE PTR [rax],0x0
   14002ddd3:	je     0x14002ddf1
   14002ddd5:	mov    rcx,QWORD PTR [rip+0x27714]        # 0x1400554f0
   14002dddc:	lea    rdx,[rip+0x13739]        # 0x14004151c
   14002dde3:	mov    r8,rax
   14002dde6:	add    rsp,0x28
   14002ddea:	rex.W jmp QWORD PTR [rip+0xf4cf]        # 0x14003d2c0
   14002ddf1:	add    rsp,0x28
   14002ddf5:	ret    
   14002ddf6:	int3   
   14002ddf7:	int3   
   14002ddf8:	int3   
   14002ddf9:	int3   
   14002ddfa:	int3   
   14002ddfb:	int3   
   14002ddfc:	int3   
   14002ddfd:	int3   
   14002ddfe:	int3   
   14002ddff:	int3   
   14002de00:	rex push rbx
   14002de02:	sub    rsp,0x30
   14002de06:	cmp    DWORD PTR [rip+0x23dbb],0x0        # 0x140051bc8
   14002de0d:	movups xmm0,XMMWORD PTR [rdx]
   14002de10:	mov    rbx,rcx
   14002de13:	movups XMMWORD PTR [rip+0x26106],xmm0        # 0x140053f20
   14002de1a:	je     0x14002dee9
   14002de20:	mov    r10d,DWORD PTR [rdx+0xc]
   14002de24:	mov    eax,DWORD PTR [rdx+0x8]
   14002de27:	mov    r9d,DWORD PTR [rdx+0x4]
   14002de2b:	mov    r8d,DWORD PTR [rdx]
   14002de2e:	mov    rcx,QWORD PTR [rip+0x276bb]        # 0x1400554f0
   14002de35:	inc    r10d
   14002de38:	inc    eax
   14002de3a:	mov    DWORD PTR [rsp+0x28],r10d
   14002de3f:	lea    rdx,[rip+0x136e2]        # 0x140041528
   14002de46:	dec    r9d
   14002de49:	dec    r8d
   14002de4c:	mov    DWORD PTR [rsp+0x20],eax
   14002de50:	call   QWORD PTR [rip+0xf46a]        # 0x14003d2c0
   14002de56:	lea    rdx,[rip+0x10833]        # 0x14003e690
   14002de5d:	mov    rcx,rbx
   14002de60:	call   0x140027500
   14002de65:	lea    r8,[rip+0xf5ac]        # 0x14003d418
   14002de6c:	mov    rcx,rbx
   14002de6f:	mov    rdx,rax
   14002de72:	call   0x14001c3e0
   14002de77:	cmp    BYTE PTR [rax],0x0
   14002de7a:	je     0x14002de93
   14002de7c:	mov    rcx,QWORD PTR [rip+0x2766d]        # 0x1400554f0
   14002de83:	lea    rdx,[rip+0x13692]        # 0x14004151c
   14002de8a:	mov    r8,rax
   14002de8d:	call   QWORD PTR [rip+0xf42d]        # 0x14003d2c0
   14002de93:	mov    rcx,QWORD PTR [rip+0x27656]        # 0x1400554f0
   14002de9a:	lea    rdx,[rip+0x136a7]        # 0x140041548
   14002dea1:	call   QWORD PTR [rip+0xf419]        # 0x14003d2c0
   14002dea7:	call   0x14002ec80
   14002deac:	lea    rdx,[rip+0x136ad]        # 0x140041560
   14002deb3:	mov    rcx,rbx
   14002deb6:	call   0x1400275b0
   14002debb:	test   rax,rax
   14002debe:	je     0x14002dee9
   14002dec0:	or     rcx,0xffffffffffffffff
   14002dec4:	inc    rcx
   14002dec7:	cmp    BYTE PTR [rax+rcx*1],0x0
   14002decb:	jne    0x14002dec4
   14002decd:	test   rcx,rcx
   14002ded0:	je     0x14002dee9
   14002ded2:	mov    rcx,QWORD PTR [rip+0x27617]        # 0x1400554f0
   14002ded9:	lea    rdx,[rip+0x13688]        # 0x140041568
   14002dee0:	mov    r8,rax
   14002dee3:	call   QWORD PTR [rip+0xf3d7]        # 0x14003d2c0
   14002dee9:	cmp    BYTE PTR [rbx+0x92],0x0
   14002def0:	je     0x14002df16
   14002def2:	cmp    BYTE PTR [rip+0x26007],0x0        # 0x140053f00
   14002def9:	jne    0x14002df16
   14002defb:	mov    rcx,QWORD PTR [rip+0x275ee]        # 0x1400554f0
   14002df02:	lea    rdx,[rip+0x13697]        # 0x1400415a0
   14002df09:	call   QWORD PTR [rip+0xf3b1]        # 0x14003d2c0
   14002df0f:	mov    BYTE PTR [rip+0x25fea],0x1        # 0x140053f00
   14002df16:	add    rsp,0x30
   14002df1a:	pop    rbx
   14002df1b:	ret    
   14002df1c:	int3   
   14002df1d:	int3   
   14002df1e:	int3   
   14002df1f:	int3   
   14002df20:	mov    DWORD PTR [rip+0x23c9e],0x0        # 0x140051bc8
   14002df2a:	ret    
   14002df2b:	int3   
   14002df2c:	int3   
   14002df2d:	int3   
   14002df2e:	int3   
   14002df2f:	int3   
   14002df30:	mov    QWORD PTR [rsp+0x8],rbx
   14002df35:	mov    QWORD PTR [rsp+0x10],rdx
   14002df3a:	push   rdi
   14002df3b:	sub    rsp,0x40
   14002df3f:	mov    rdx,QWORD PTR [rip+0x25fda]        # 0x140053f20
   14002df46:	mov    rcx,QWORD PTR [rip+0x25fdb]        # 0x140053f28
   14002df4d:	inc    DWORD PTR [rip+0x25fc9]        # 0x140053f1c
   14002df53:	movaps XMMWORD PTR [rsp+0x30],xmm6
   14002df58:	movaps xmm6,xmm2
   14002df5b:	mov    edi,r9d
   14002df5e:	call   0x14001d0b0
   14002df63:	mov    r8d,DWORD PTR [rip+0x25fb2]        # 0x140053f1c
   14002df6a:	mov    rcx,QWORD PTR [rip+0x2757f]        # 0x1400554f0
   14002df71:	lea    rdx,[rip+0x13638]        # 0x1400415b0
   14002df78:	mov    r9d,r8d
   14002df7b:	mov    rbx,rax
   14002df7e:	mov    QWORD PTR [rsp+0x60],rax
   14002df83:	call   QWORD PTR [rip+0xf337]        # 0x14003d2c0
   14002df89:	mov    ecx,DWORD PTR [rip+0x25f9d]        # 0x140053f2c
   14002df8f:	mov    eax,DWORD PTR [rip+0x25f93]        # 0x140053f28
   14002df95:	mov    r9d,DWORD PTR [rip+0x25f88]        # 0x140053f24
   14002df9c:	mov    r8d,DWORD PTR [rip+0x25f7d]        # 0x140053f20
   14002dfa3:	inc    ecx
   14002dfa5:	inc    eax
   14002dfa7:	mov    DWORD PTR [rsp+0x28],ecx
   14002dfab:	mov    rcx,QWORD PTR [rip+0x2753e]        # 0x1400554f0
   14002dfb2:	lea    rdx,[rip+0x1360f]        # 0x1400415c8
   14002dfb9:	mov    DWORD PTR [rsp+0x20],eax
   14002dfbd:	call   QWORD PTR [rip+0xf2fd]        # 0x14003d2c0
   14002dfc3:	mov    rcx,QWORD PTR [rip+0x27526]        # 0x1400554f0
   14002dfca:	lea    rax,[rip+0x1361f]        # 0x1400415f0
   14002dfd1:	lea    r8,[rip+0x13628]        # 0x140041600
   14002dfd8:	test   edi,edi
   14002dfda:	lea    rdx,[rip+0x1362f]        # 0x140041610
   14002dfe1:	cmovne r8,rax
   14002dfe5:	call   QWORD PTR [rip+0xf2d5]        # 0x14003d2c0
   14002dfeb:	mov    eax,DWORD PTR [rsp+0x64]
   14002dfef:	mov    r9d,DWORD PTR [rip+0x25f2e]        # 0x140053f24
   14002dff6:	mov    r8d,DWORD PTR [rip+0x25f23]        # 0x140053f20
   14002dffd:	add    eax,0x2
   14002e000:	lea    ecx,[rbx+0x2]
   14002e003:	mov    DWORD PTR [rsp+0x28],eax
   14002e007:	mov    DWORD PTR [rsp+0x20],ecx
   14002e00b:	mov    rcx,QWORD PTR [rip+0x274de]        # 0x1400554f0
   14002e012:	dec    r9d
   14002e015:	lea    rdx,[rip+0x13614]        # 0x140041630
   14002e01c:	dec    r8d
   14002e01f:	call   QWORD PTR [rip+0xf29b]        # 0x14003d2c0
   14002e025:	mov    r9d,DWORD PTR [rip+0x25ef8]        # 0x140053f24
   14002e02c:	mov    r8d,DWORD PTR [rip+0x25eed]        # 0x140053f20
   14002e033:	mov    rcx,QWORD PTR [rip+0x274b6]        # 0x1400554f0
   14002e03a:	lea    rdx,[rip+0x13617]        # 0x140041658
   14002e041:	call   QWORD PTR [rip+0xf279]        # 0x14003d2c0
   14002e047:	test   edi,edi
   14002e049:	je     0x14002e074
   14002e04b:	mov    r8d,DWORD PTR [rip+0x25ed6]        # 0x140053f28
   14002e052:	mov    rcx,QWORD PTR [rip+0x27497]        # 0x1400554f0
   14002e059:	lea    rdx,[rip+0x13610]        # 0x140041670
   14002e060:	sub    r8d,DWORD PTR [rip+0x25eb9]        # 0x140053f20
   14002e067:	xor    r9d,r9d
   14002e06a:	mov    DWORD PTR [rsp+0x20],edi
   14002e06e:	call   QWORD PTR [rip+0xf24c]        # 0x14003d2c0
   14002e074:	mov    eax,DWORD PTR [rip+0x25e9e]        # 0x140053f18
   14002e07a:	mov    r9d,DWORD PTR [rsp+0x5c]
   14002e07f:	mov    r8d,DWORD PTR [rsp+0x58]
   14002e084:	mov    rcx,QWORD PTR [rip+0x27465]        # 0x1400554f0
   14002e08b:	lea    rdx,[rip+0x13606]        # 0x140041698
   14002e092:	mov    DWORD PTR [rsp+0x20],eax
   14002e096:	call   QWORD PTR [rip+0xf224]        # 0x14003d2c0
   14002e09c:	test   edi,edi
   14002e09e:	je     0x14002e0b4
   14002e0a0:	mov    rcx,QWORD PTR [rip+0x27449]        # 0x1400554f0
   14002e0a7:	lea    rdx,[rip+0x13602]        # 0x1400416b0
   14002e0ae:	call   QWORD PTR [rip+0xf20c]        # 0x14003d2c0
   14002e0b4:	ucomisd xmm6,QWORD PTR [rip+0xf324]        # 0x14003d3e0
   14002e0bc:	jp     0x14002e0c0
   14002e0be:	je     0x14002e0dc
   14002e0c0:	mov    rcx,QWORD PTR [rip+0x27429]        # 0x1400554f0
   14002e0c7:	movaps xmm2,xmm6
   14002e0ca:	lea    rdx,[rip+0x135ef]        # 0x1400416c0
   14002e0d1:	movq   r8,xmm2
   14002e0d6:	call   QWORD PTR [rip+0xf1e4]        # 0x14003d2c0
   14002e0dc:	mov    r9d,DWORD PTR [rsp+0x74]
   14002e0e1:	mov    r8d,DWORD PTR [rsp+0x70]
   14002e0e6:	mov    rcx,QWORD PTR [rip+0x27403]        # 0x1400554f0
   14002e0ed:	lea    rdx,[rip+0x135dc]        # 0x1400416d0
   14002e0f4:	mov    DWORD PTR [rsp+0x20],edi
   14002e0f8:	call   QWORD PTR [rip+0xf1c2]        # 0x14003d2c0
   14002e0fe:	mov    eax,DWORD PTR [rip+0x25e10]        # 0x140053f14
   14002e104:	test   eax,eax
   14002e106:	je     0x14002e128
   14002e108:	lea    rdx,[rip+0x135e1]        # 0x1400416f0
   14002e10f:	lea    rcx,[rip+0x1364a]        # 0x140041760
   14002e116:	mov    r8d,0x93
   14002e11c:	call   QWORD PTR [rip+0xef6e]        # 0x14003d090
   14002e122:	mov    eax,DWORD PTR [rip+0x25dec]        # 0x140053f14
   14002e128:	lea    rdx,[rip+0x25e11]        # 0x140053f40
   14002e12f:	lea    rcx,[rip+0xf2e2]        # 0x14003d418
   14002e136:	cdqe   
   14002e138:	shl    rax,0x5
   14002e13c:	cmp    DWORD PTR [rip+0x273b5],0x1a        # 0x1400554f8
   14002e143:	mov    QWORD PTR [rax+rdx*1+0x8],rcx
   14002e148:	mov    QWORD PTR [rax+rdx*1],rcx
   14002e14c:	mov    QWORD PTR [rax+rdx*1+0x10],rcx
   14002e151:	mov    QWORD PTR [rax+rdx*1+0x18],0x0
   14002e15a:	jne    0x14002e1ef
   14002e160:	mov    rax,QWORD PTR [rip+0x25dc1]        # 0x140053f28
   14002e167:	cmp    eax,0xca8
   14002e16c:	jge    0x14002e17c
   14002e16e:	mov    ecx,DWORD PTR [rip+0x25db8]        # 0x140053f2c
   14002e174:	cmp    ecx,0xca8
   14002e17a:	jl     0x14002e1c0
   14002e17c:	call   QWORD PTR [rip+0xf14e]        # 0x14003d2d0
   14002e182:	mov    ecx,DWORD PTR [rip+0x25da4]        # 0x140053f2c
   14002e188:	mov    r9d,DWORD PTR [rip+0x25d99]        # 0x140053f28
   14002e18f:	mov    r8,QWORD PTR [rip+0x2732a]        # 0x1400554c0
   14002e196:	mov    DWORD PTR [rsp+0x28],0xca8
   14002e19e:	mov    DWORD PTR [rsp+0x20],ecx
   14002e1a2:	lea    rcx,[rax+0x60]
   14002e1a6:	lea    rdx,[rip+0x135c3]        # 0x140041770
   14002e1ad:	call   QWORD PTR [rip+0xf10d]        # 0x14003d2c0
   14002e1b3:	mov    ecx,DWORD PTR [rip+0x25d73]        # 0x140053f2c
   14002e1b9:	mov    rax,QWORD PTR [rip+0x25d68]        # 0x140053f28
   14002e1c0:	mov    r9d,DWORD PTR [rip+0x25d5d]        # 0x140053f24
   14002e1c7:	mov    r8d,DWORD PTR [rip+0x25d52]        # 0x140053f20
   14002e1ce:	lea    edx,[rax+0x1]
   14002e1d1:	inc    ecx
   14002e1d3:	mov    DWORD PTR [rsp+0x28],ecx
   14002e1d7:	mov    rcx,QWORD PTR [rip+0x27312]        # 0x1400554f0
   14002e1de:	mov    DWORD PTR [rsp+0x20],edx
   14002e1e2:	lea    rdx,[rip+0x135f7]        # 0x1400417e0
   14002e1e9:	call   QWORD PTR [rip+0xf0d1]        # 0x14003d2c0
   14002e1ef:	mov    rbx,QWORD PTR [rsp+0x50]
   14002e1f4:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14002e1f9:	add    rsp,0x40
   14002e1fd:	pop    rdi
   14002e1fe:	ret    
   14002e1ff:	int3   
   14002e200:	sub    rsp,0x28
   14002e204:	mov    rcx,QWORD PTR [rip+0x272e5]        # 0x1400554f0
   14002e20b:	lea    rdx,[rip+0x135fe]        # 0x140041810
   14002e212:	call   QWORD PTR [rip+0xf0a8]        # 0x14003d2c0
   14002e218:	mov    rcx,QWORD PTR [rip+0x272d1]        # 0x1400554f0
   14002e21f:	lea    rdx,[rip+0x13602]        # 0x140041828
   14002e226:	call   QWORD PTR [rip+0xf094]        # 0x14003d2c0
   14002e22c:	mov    r8d,DWORD PTR [rip+0x25ce9]        # 0x140053f1c
   14002e233:	mov    rcx,QWORD PTR [rip+0x272b6]        # 0x1400554f0
   14002e23a:	lea    rdx,[rip+0x135ff]        # 0x140041840
   14002e241:	call   QWORD PTR [rip+0xf079]        # 0x14003d2c0
   14002e247:	cmp    DWORD PTR [rip+0x25cc6],0x0        # 0x140053f14
   14002e24e:	je     0x14002e26f
   14002e250:	lea    rdx,[rip+0x13499]        # 0x1400416f0
   14002e257:	lea    rcx,[rip+0x13502]        # 0x140041760
   14002e25e:	mov    r8d,0xa9
   14002e264:	add    rsp,0x28
   14002e268:	rex.W jmp QWORD PTR [rip+0xee21]        # 0x14003d090
   14002e26f:	add    rsp,0x28
   14002e273:	ret    
   14002e274:	int3   
   14002e275:	int3   
   14002e276:	int3   
   14002e277:	int3   
   14002e278:	int3   
   14002e279:	int3   
   14002e27a:	int3   
   14002e27b:	int3   
   14002e27c:	int3   
   14002e27d:	int3   
   14002e27e:	int3   
   14002e27f:	int3   
   14002e280:	rex push rbx
   14002e282:	sub    rsp,0x20
   14002e286:	mov    r8,QWORD PTR [rcx+0x10]
   14002e28a:	mov    rbx,rcx
   14002e28d:	mov    rcx,QWORD PTR [rip+0x2725c]        # 0x1400554f0
   14002e294:	lea    rdx,[rip+0x13281]        # 0x14004151c
   14002e29b:	call   QWORD PTR [rip+0xf01f]        # 0x14003d2c0
   14002e2a1:	mov    rcx,rbx
   14002e2a4:	add    rsp,0x20
   14002e2a8:	pop    rbx
   14002e2a9:	jmp    0x140034cc0
   14002e2ae:	int3   
   14002e2af:	int3   
   14002e2b0:	ret    0x0
   14002e2b3:	int3   
   14002e2b4:	int3   
   14002e2b5:	int3   
   14002e2b6:	int3   
   14002e2b7:	int3   
   14002e2b8:	int3   
   14002e2b9:	int3   
   14002e2ba:	int3   
   14002e2bb:	int3   
   14002e2bc:	int3   
   14002e2bd:	int3   
   14002e2be:	int3   
   14002e2bf:	int3   
   14002e2c0:	ret    0x0
   14002e2c3:	int3   
   14002e2c4:	int3   
   14002e2c5:	int3   
   14002e2c6:	int3   
   14002e2c7:	int3   
   14002e2c8:	int3   
   14002e2c9:	int3   
   14002e2ca:	int3   
   14002e2cb:	int3   
   14002e2cc:	int3   
   14002e2cd:	int3   
   14002e2ce:	int3   
   14002e2cf:	int3   
   14002e2d0:	ret    0x0
   14002e2d3:	int3   
   14002e2d4:	int3   
   14002e2d5:	int3   
   14002e2d6:	int3   
   14002e2d7:	int3   
   14002e2d8:	int3   
   14002e2d9:	int3   
   14002e2da:	int3   
   14002e2db:	int3   
   14002e2dc:	int3   
   14002e2dd:	int3   
   14002e2de:	int3   
   14002e2df:	int3   
   14002e2e0:	ret    0x0
   14002e2e3:	int3   
   14002e2e4:	int3   
   14002e2e5:	int3   
   14002e2e6:	int3   
   14002e2e7:	int3   
   14002e2e8:	int3   
   14002e2e9:	int3   
   14002e2ea:	int3   
   14002e2eb:	int3   
   14002e2ec:	int3   
   14002e2ed:	int3   
   14002e2ee:	int3   
   14002e2ef:	int3   
   14002e2f0:	ret    0x0
   14002e2f3:	int3   
   14002e2f4:	int3   
   14002e2f5:	int3   
   14002e2f6:	int3   
   14002e2f7:	int3   
   14002e2f8:	int3   
   14002e2f9:	int3   
   14002e2fa:	int3   
   14002e2fb:	int3   
   14002e2fc:	int3   
   14002e2fd:	int3   
   14002e2fe:	int3   
   14002e2ff:	int3   
   14002e300:	rex push rbx
   14002e302:	sub    rsp,0x20
   14002e306:	mov    r8,QWORD PTR [rcx+0x10]
   14002e30a:	mov    rbx,rcx
   14002e30d:	mov    rcx,QWORD PTR [rip+0x271dc]        # 0x1400554f0
   14002e314:	lea    rdx,[rip+0x1353d]        # 0x140041858
   14002e31b:	call   QWORD PTR [rip+0xef9f]        # 0x14003d2c0
   14002e321:	mov    rdx,QWORD PTR [rip+0x27090]        # 0x1400553b8
   14002e328:	lea    r8,[rip+0xf0e9]        # 0x14003d418
   14002e32f:	mov    rcx,rbx
   14002e332:	call   0x14001c3e0
   14002e337:	cmp    BYTE PTR [rax],0x0
   14002e33a:	je     0x14002e353
   14002e33c:	mov    rcx,QWORD PTR [rip+0x271ad]        # 0x1400554f0
   14002e343:	lea    rdx,[rip+0x131d2]        # 0x14004151c
   14002e34a:	mov    r8,rax
   14002e34d:	call   QWORD PTR [rip+0xef6d]        # 0x14003d2c0
   14002e353:	mov    rcx,rbx
   14002e356:	add    rsp,0x20
   14002e35a:	pop    rbx
   14002e35b:	jmp    0x140035460
   14002e360:	ret    0x0
   14002e363:	int3   
   14002e364:	int3   
   14002e365:	int3   
   14002e366:	int3   
   14002e367:	int3   
   14002e368:	int3   
   14002e369:	int3   
   14002e36a:	int3   
   14002e36b:	int3   
   14002e36c:	int3   
   14002e36d:	int3   
   14002e36e:	int3   
   14002e36f:	int3   
   14002e370:	rex push rbx
   14002e372:	sub    rsp,0x20
   14002e376:	mov    r9,QWORD PTR [rcx+0x10]
   14002e37a:	mov    r8,QWORD PTR [rcx+0x18]
   14002e37e:	mov    rbx,rcx
   14002e381:	mov    rcx,QWORD PTR [rip+0x27168]        # 0x1400554f0
   14002e388:	mov    r9,QWORD PTR [r9+0x10]
   14002e38c:	mov    r8,QWORD PTR [r8+0x10]
   14002e390:	lea    rdx,[rip+0x134c9]        # 0x140041860
   14002e397:	call   QWORD PTR [rip+0xef23]        # 0x14003d2c0
   14002e39d:	mov    rdx,QWORD PTR [rip+0x26f84]        # 0x140055328
   14002e3a4:	lea    r8,[rip+0xf06d]        # 0x14003d418
   14002e3ab:	mov    rcx,rbx
   14002e3ae:	call   0x14001c3e0
   14002e3b3:	cmp    BYTE PTR [rax],0x0
   14002e3b6:	je     0x14002e3cf
   14002e3b8:	mov    rcx,QWORD PTR [rip+0x27131]        # 0x1400554f0
   14002e3bf:	lea    rdx,[rip+0x13156]        # 0x14004151c
   14002e3c6:	mov    r8,rax
   14002e3c9:	call   QWORD PTR [rip+0xeef1]        # 0x14003d2c0
   14002e3cf:	mov    rcx,rbx
   14002e3d2:	add    rsp,0x20
   14002e3d6:	pop    rbx
   14002e3d7:	jmp    0x140034de0
   14002e3dc:	int3   
   14002e3dd:	int3   
   14002e3de:	int3   
   14002e3df:	int3   
   14002e3e0:	ret    0x0
   14002e3e3:	int3   
   14002e3e4:	int3   
   14002e3e5:	int3   
   14002e3e6:	int3   
   14002e3e7:	int3   
   14002e3e8:	int3   
   14002e3e9:	int3   
   14002e3ea:	int3   
   14002e3eb:	int3   
   14002e3ec:	int3   
   14002e3ed:	int3   
   14002e3ee:	int3   
   14002e3ef:	int3   
   14002e3f0:	sub    rsp,0x28
   14002e3f4:	mov    rcx,QWORD PTR [rip+0x270f5]        # 0x1400554f0
   14002e3fb:	lea    rdx,[rip+0x1346e]        # 0x140041870
   14002e402:	call   QWORD PTR [rip+0xeeb8]        # 0x14003d2c0
   14002e408:	mov    eax,DWORD PTR [rip+0x25b06]        # 0x140053f14
   14002e40e:	cmp    eax,0x7
   14002e411:	jne    0x14002e42f
   14002e413:	call   QWORD PTR [rip+0xeeb7]        # 0x14003d2d0
   14002e419:	lea    rdx,[rip+0x13468]        # 0x140041888
   14002e420:	lea    rcx,[rax+0x60]
   14002e424:	add    rsp,0x28
   14002e428:	rex.W jmp QWORD PTR [rip+0xee91]        # 0x14003d2c0
   14002e42f:	inc    eax
   14002e431:	lea    rdx,[rip+0x25b08]        # 0x140053f40
   14002e438:	movsxd rcx,eax
   14002e43b:	mov    DWORD PTR [rip+0x25ad3],eax        # 0x140053f14
   14002e441:	mov    rax,rcx
   14002e444:	shl    rax,0x5
   14002e448:	shl    rcx,0x5
   14002e44c:	movups xmm0,XMMWORD PTR [rax+rdx*1-0x20]
   14002e451:	movups XMMWORD PTR [rcx+rdx*1],xmm0
   14002e455:	movups xmm1,XMMWORD PTR [rax+rdx*1-0x10]
   14002e45a:	movups XMMWORD PTR [rcx+rdx*1+0x10],xmm1
   14002e45f:	add    rsp,0x28
   14002e463:	ret    
   14002e464:	int3   
   14002e465:	int3   
   14002e466:	int3   
   14002e467:	int3   
   14002e468:	int3   
   14002e469:	int3   
   14002e46a:	int3   
   14002e46b:	int3   
   14002e46c:	int3   
   14002e46d:	int3   
   14002e46e:	int3   
   14002e46f:	int3   
   14002e470:	sub    rsp,0x28
   14002e474:	mov    eax,DWORD PTR [rip+0x25a9a]        # 0x140053f14
   14002e47a:	test   eax,eax
   14002e47c:	jne    0x14002e497
   14002e47e:	call   QWORD PTR [rip+0xee4c]        # 0x14003d2d0
   14002e484:	lea    rdx,[rip+0x1341d]        # 0x1400418a8
   14002e48b:	lea    rcx,[rax+0x60]
   14002e48f:	call   QWORD PTR [rip+0xee2b]        # 0x14003d2c0
   14002e495:	jmp    0x14002e49f
   14002e497:	dec    eax
   14002e499:	mov    DWORD PTR [rip+0x25a75],eax        # 0x140053f14
   14002e49f:	mov    rcx,QWORD PTR [rip+0x2704a]        # 0x1400554f0
   14002e4a6:	lea    rdx,[rip+0x1341b]        # 0x1400418c8
   14002e4ad:	add    rsp,0x28
   14002e4b1:	rex.W jmp QWORD PTR [rip+0xee08]        # 0x14003d2c0
   14002e4b8:	int3   
   14002e4b9:	int3   
   14002e4ba:	int3   
   14002e4bb:	int3   
   14002e4bc:	int3   
   14002e4bd:	int3   
   14002e4be:	int3   
   14002e4bf:	int3   
   14002e4c0:	mov    QWORD PTR [rsp+0x8],rbx
   14002e4c5:	push   rdi
   14002e4c6:	sub    rsp,0x30
   14002e4ca:	movsxd r9,DWORD PTR [rip+0x25a43]        # 0x140053f14
   14002e4d1:	lea    rdi,[rip+0x25a68]        # 0x140053f40
   14002e4d8:	mov    r8,rcx
   14002e4db:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14002e4e0:	movaps xmm6,xmm1
   14002e4e3:	shl    r9,0x5
   14002e4e7:	mov    rbx,rcx
   14002e4ea:	mov    rax,QWORD PTR [r9+rdi*1+0x10]
   14002e4ef:	sub    r8,rax
   14002e4f2:	movzx  edx,BYTE PTR [rax]
   14002e4f5:	movzx  ecx,BYTE PTR [rax+r8*1]
   14002e4fa:	sub    edx,ecx
   14002e4fc:	jne    0x14002e505
   14002e4fe:	inc    rax
   14002e501:	test   ecx,ecx
   14002e503:	jne    0x14002e4f2
   14002e505:	test   edx,edx
   14002e507:	jne    0x14002e514
   14002e509:	ucomisd xmm1,QWORD PTR [r9+rdi*1+0x18]
   14002e510:	jp     0x14002e514
   14002e512:	je     0x14002e549
   14002e514:	mov    rcx,QWORD PTR [rip+0x26fd5]        # 0x1400554f0
   14002e51b:	movaps xmm2,xmm1
   14002e51e:	lea    rdx,[rip+0x133b3]        # 0x1400418d8
   14002e525:	mov    r9,rbx
   14002e528:	movq   r8,xmm2
   14002e52d:	call   QWORD PTR [rip+0xed8d]        # 0x14003d2c0
   14002e533:	movsxd rax,DWORD PTR [rip+0x259da]        # 0x140053f14
   14002e53a:	shl    rax,0x5
   14002e53e:	mov    QWORD PTR [rax+rdi*1+0x10],rbx
   14002e543:	movsd  QWORD PTR [rax+rdi*1+0x18],xmm6
   14002e549:	mov    rbx,QWORD PTR [rsp+0x40]
   14002e54e:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14002e553:	add    rsp,0x30
   14002e557:	pop    rdi
   14002e558:	ret    
   14002e559:	int3   
   14002e55a:	int3   
   14002e55b:	int3   
   14002e55c:	int3   
   14002e55d:	int3   
   14002e55e:	int3   
   14002e55f:	int3   
   14002e560:	mov    QWORD PTR [rsp+0x8],rbx
   14002e565:	push   rdi
   14002e566:	sub    rsp,0x20
   14002e56a:	movsxd rdx,DWORD PTR [rip+0x259a3]        # 0x140053f14
   14002e571:	lea    rdi,[rip+0x259c8]        # 0x140053f40
   14002e578:	mov    rbx,rcx
   14002e57b:	shl    rdx,0x5
   14002e57f:	mov    rax,rcx
   14002e582:	mov    r9,QWORD PTR [rdx+rdi*1]
   14002e586:	sub    r9,rcx
   14002e589:	nop    DWORD PTR [rax+0x0]
   14002e590:	movzx  r8d,BYTE PTR [rax]
   14002e594:	movzx  edx,BYTE PTR [rax+r9*1]
   14002e599:	sub    r8d,edx
   14002e59c:	jne    0x14002e5a5
   14002e59e:	inc    rax
   14002e5a1:	test   edx,edx
   14002e5a3:	jne    0x14002e590
   14002e5a5:	test   r8d,r8d
   14002e5a8:	je     0x14002e5be
   14002e5aa:	call   0x14002f090
   14002e5af:	movsxd rax,DWORD PTR [rip+0x2595e]        # 0x140053f14
   14002e5b6:	shl    rax,0x5
   14002e5ba:	mov    QWORD PTR [rax+rdi*1],rbx
   14002e5be:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e5c3:	add    rsp,0x20
   14002e5c7:	pop    rdi
   14002e5c8:	ret    
   14002e5c9:	int3   
   14002e5ca:	int3   
   14002e5cb:	int3   
   14002e5cc:	int3   
   14002e5cd:	int3   
   14002e5ce:	int3   
   14002e5cf:	int3   
   14002e5d0:	movsxd rax,DWORD PTR [rip+0x2593d]        # 0x140053f14
   14002e5d7:	lea    rdx,[rip+0x2596a]        # 0x140053f48
   14002e5de:	shl    rax,0x5
   14002e5e2:	mov    QWORD PTR [rax+rdx*1],rcx
   14002e5e6:	ret    
   14002e5e7:	int3   
   14002e5e8:	int3   
   14002e5e9:	int3   
   14002e5ea:	int3   
   14002e5eb:	int3   
   14002e5ec:	int3   
   14002e5ed:	int3   
   14002e5ee:	int3   
   14002e5ef:	int3   
   14002e5f0:	mov    QWORD PTR [rsp+0x8],rbx
   14002e5f5:	mov    QWORD PTR [rsp+0x10],rsi
   14002e5fa:	push   rdi
   14002e5fb:	sub    rsp,0x20
   14002e5ff:	mov    rdi,QWORD PTR [rcx]
   14002e602:	mov    rsi,rcx
   14002e605:	mov    rbx,rdi
   14002e608:	test   rdi,rdi
   14002e60b:	je     0x14002e682
   14002e60d:	nop    DWORD PTR [rax]
   14002e610:	cmp    BYTE PTR [rdi],0x0
   14002e613:	lea    rsi,[rsi+0x8]
   14002e617:	je     0x14002e628
   14002e619:	nop    DWORD PTR [rax+0x0]
   14002e620:	inc    rbx
   14002e623:	cmp    BYTE PTR [rbx],0x0
   14002e626:	jne    0x14002e620
   14002e628:	inc    rbx
   14002e62b:	cmp    BYTE PTR [rbx],0x0
   14002e62e:	je     0x14002e660
   14002e630:	mov    rcx,QWORD PTR [rip+0x26eb9]        # 0x1400554f0
   14002e637:	lea    rdx,[rip+0x132ca]        # 0x140041908
   14002e63e:	mov    r8,rbx
   14002e641:	call   QWORD PTR [rip+0xec79]        # 0x14003d2c0
   14002e647:	cmp    BYTE PTR [rbx],0x0
   14002e64a:	je     0x14002e658
   14002e64c:	nop    DWORD PTR [rax+0x0]
   14002e650:	inc    rbx
   14002e653:	cmp    BYTE PTR [rbx],0x0
   14002e656:	jne    0x14002e650
   14002e658:	inc    rbx
   14002e65b:	cmp    BYTE PTR [rbx],0x0
   14002e65e:	jne    0x14002e630
   14002e660:	mov    rcx,QWORD PTR [rip+0x26e89]        # 0x1400554f0
   14002e667:	lea    rdx,[rip+0x1329e]        # 0x14004190c
   14002e66e:	mov    r8,rdi
   14002e671:	call   QWORD PTR [rip+0xec49]        # 0x14003d2c0
   14002e677:	mov    rdi,QWORD PTR [rsi]
   14002e67a:	mov    rbx,rdi
   14002e67d:	test   rdi,rdi
   14002e680:	jne    0x14002e610
   14002e682:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e687:	mov    rsi,QWORD PTR [rsp+0x38]
   14002e68c:	add    rsp,0x20
   14002e690:	pop    rdi
   14002e691:	ret    
   14002e692:	int3   
   14002e693:	int3   
   14002e694:	int3   
   14002e695:	int3   
   14002e696:	int3   
   14002e697:	int3   
   14002e698:	int3   
   14002e699:	int3   
   14002e69a:	int3   
   14002e69b:	int3   
   14002e69c:	int3   
   14002e69d:	int3   
   14002e69e:	int3   
   14002e69f:	int3   
   14002e6a0:	mov    QWORD PTR [rsp+0x8],rcx
   14002e6a5:	push   rbx
   14002e6a6:	sub    rsp,0x50
   14002e6aa:	movzx  eax,BYTE PTR [rdx+0xa]
   14002e6ae:	movaps XMMWORD PTR [rsp+0x40],xmm6
   14002e6b3:	mov    rbx,rdx
   14002e6b6:	cmp    al,0x6c
   14002e6b8:	je     0x14002e6d2
   14002e6ba:	cmp    al,0x72
   14002e6bc:	je     0x14002e6c8
   14002e6be:	movsd  xmm6,QWORD PTR [rip+0xfd3a]        # 0x14003e400
   14002e6c6:	jmp    0x14002e6d5
   14002e6c8:	movsd  xmm6,QWORD PTR [rip+0xf018]        # 0x14003d6e8
   14002e6d0:	jmp    0x14002e6d5
   14002e6d2:	xorps  xmm6,xmm6
   14002e6d5:	mov    rcx,QWORD PTR [rdx]
   14002e6d8:	call   0x14002f100
   14002e6dd:	movsx  ecx,WORD PTR [rbx+0x8]
   14002e6e1:	mov    r9d,DWORD PTR [rsp+0x64]
   14002e6e6:	mov    r8d,DWORD PTR [rsp+0x60]
   14002e6eb:	mov    QWORD PTR [rsp+0x30],rax
   14002e6f0:	lea    rdx,[rip+0x13219]        # 0x140041910
   14002e6f7:	movsd  QWORD PTR [rsp+0x28],xmm6
   14002e6fd:	mov    DWORD PTR [rsp+0x20],ecx
   14002e701:	mov    rcx,QWORD PTR [rip+0x26de8]        # 0x1400554f0
   14002e708:	call   QWORD PTR [rip+0xebb2]        # 0x14003d2c0
   14002e70e:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   14002e713:	add    rsp,0x50
   14002e717:	pop    rbx
   14002e718:	ret    
   14002e719:	int3   
   14002e71a:	int3   
   14002e71b:	int3   
   14002e71c:	int3   
   14002e71d:	int3   
   14002e71e:	int3   
   14002e71f:	int3   
   14002e720:	mov    QWORD PTR [rsp+0x8],rbx
   14002e725:	push   rdi
   14002e726:	sub    rsp,0x40
   14002e72a:	movsxd rdi,edx
   14002e72d:	mov    rbx,rcx
   14002e730:	test   r8d,r8d
   14002e733:	jne    0x14002e73a
   14002e735:	test   r9d,r9d
   14002e738:	je     0x14002e751
   14002e73a:	call   QWORD PTR [rip+0xeb90]        # 0x14003d2d0
   14002e740:	lea    rdx,[rip+0x131f1]        # 0x140041938
   14002e747:	lea    rcx,[rax+0x60]
   14002e74b:	call   QWORD PTR [rip+0xeb6f]        # 0x14003d2c0
   14002e751:	mov    r9d,DWORD PTR [rbx+0x4]
   14002e755:	mov    r8d,DWORD PTR [rbx]
   14002e758:	mov    rdx,QWORD PTR [rip+0x23481]        # 0x140051be0
   14002e75f:	mov    rcx,QWORD PTR [rip+0x26d8a]        # 0x1400554f0
   14002e766:	call   QWORD PTR [rip+0xeb54]        # 0x14003d2c0
   14002e76c:	mov    rcx,rdi
   14002e76f:	cmp    rdi,0x1
   14002e773:	jle    0x14002e7d3
   14002e775:	add    rcx,0xfffffffffffffffe
   14002e779:	movabs rax,0xaaaaaaaaaaaaaaab
   14002e783:	add    rbx,0x14
   14002e787:	mul    rcx
   14002e78a:	mov    rdi,rdx
   14002e78d:	shr    rdi,1
   14002e790:	inc    rdi
   14002e793:	mov    eax,DWORD PTR [rbx+0x8]
   14002e796:	mov    r9d,DWORD PTR [rbx-0x8]
   14002e79a:	mov    r8d,DWORD PTR [rbx-0xc]
   14002e79e:	mov    rcx,QWORD PTR [rip+0x26d4b]        # 0x1400554f0
   14002e7a5:	mov    DWORD PTR [rsp+0x38],eax
   14002e7a9:	mov    eax,DWORD PTR [rbx+0x4]
   14002e7ac:	mov    DWORD PTR [rsp+0x30],eax
   14002e7b0:	mov    eax,DWORD PTR [rbx]
   14002e7b2:	lea    rdx,[rip+0x1319f]        # 0x140041958
   14002e7b9:	mov    DWORD PTR [rsp+0x28],eax
   14002e7bd:	mov    eax,DWORD PTR [rbx-0x4]
   14002e7c0:	mov    DWORD PTR [rsp+0x20],eax
   14002e7c4:	call   QWORD PTR [rip+0xeaf6]        # 0x14003d2c0
   14002e7ca:	lea    rbx,[rbx+0x18]
   14002e7ce:	dec    rdi
   14002e7d1:	jne    0x14002e793
   14002e7d3:	mov    rdx,QWORD PTR [rip+0x233fe]        # 0x140051bd8
   14002e7da:	mov    rcx,QWORD PTR [rip+0x26d0f]        # 0x1400554f0
   14002e7e1:	mov    rbx,QWORD PTR [rsp+0x50]
   14002e7e6:	add    rsp,0x40
   14002e7ea:	pop    rdi
   14002e7eb:	rex.W jmp QWORD PTR [rip+0xeace]        # 0x14003d2c0
   14002e7f2:	int3   
   14002e7f3:	int3   
   14002e7f4:	int3   
   14002e7f5:	int3   
   14002e7f6:	int3   
   14002e7f7:	int3   
   14002e7f8:	int3   
   14002e7f9:	int3   
   14002e7fa:	int3   
   14002e7fb:	int3   
   14002e7fc:	int3   
   14002e7fd:	int3   
   14002e7fe:	int3   
   14002e7ff:	int3   
   14002e800:	mov    QWORD PTR [rsp+0x18],rbx
   14002e805:	mov    QWORD PTR [rsp+0x20],rbp
   14002e80a:	push   rsi
   14002e80b:	sub    rsp,0x50
   14002e80f:	mov    rsi,rcx
   14002e812:	movsxd rbp,edx
   14002e815:	mov    ebx,0x1
   14002e81a:	test   r8d,r8d
   14002e81d:	je     0x14002e967
   14002e823:	movsxd rcx,DWORD PTR [rip+0x256ea]        # 0x140053f14
   14002e82a:	mov    QWORD PTR [rsp+0x60],rdi
   14002e82f:	mov    QWORD PTR [rsp+0x68],r14
   14002e834:	shl    rcx,0x5
   14002e838:	lea    r14,[rip+0xfffffffffffd17c1]        # 0x140000000
   14002e83f:	mov    rcx,QWORD PTR [rcx+r14*1+0x53f48]
   14002e847:	call   0x14002f090
   14002e84c:	mov    r9d,DWORD PTR [rsi+0x4]
   14002e850:	mov    r8d,DWORD PTR [rsi]
   14002e853:	mov    rdx,QWORD PTR [rip+0x23386]        # 0x140051be0
   14002e85a:	mov    rcx,QWORD PTR [rip+0x26c8f]        # 0x1400554f0
   14002e861:	call   QWORD PTR [rip+0xea59]        # 0x14003d2c0
   14002e867:	mov    edi,ebx
   14002e869:	cmp    rbx,rbp
   14002e86c:	jge    0x14002e895
   14002e86e:	xchg   ax,ax
   14002e870:	mov    r9d,DWORD PTR [rsi+rdi*8+0x4]
   14002e875:	mov    r8d,DWORD PTR [rsi+rdi*8]
   14002e879:	mov    rcx,QWORD PTR [rip+0x26c70]        # 0x1400554f0
   14002e880:	lea    rdx,[rip+0x130f1]        # 0x140041978
   14002e887:	call   QWORD PTR [rip+0xea33]        # 0x14003d2c0
   14002e88d:	inc    rdi
   14002e890:	cmp    rdi,rbp
   14002e893:	jl     0x14002e870
   14002e895:	mov    rcx,QWORD PTR [rip+0x26c54]        # 0x1400554f0
   14002e89c:	lea    rdx,[rip+0x130e5]        # 0x140041988
   14002e8a3:	call   QWORD PTR [rip+0xea17]        # 0x14003d2c0
   14002e8a9:	mov    rdx,QWORD PTR [rip+0x23320]        # 0x140051bd0
   14002e8b0:	mov    rcx,QWORD PTR [rip+0x26c39]        # 0x1400554f0
   14002e8b7:	call   QWORD PTR [rip+0xea03]        # 0x14003d2c0
   14002e8bd:	movsxd rcx,DWORD PTR [rip+0x25650]        # 0x140053f14
   14002e8c4:	lea    rdx,[rsp+0x30]
   14002e8c9:	shl    rcx,0x5
   14002e8cd:	xor    r8d,r8d
   14002e8d0:	mov    rcx,QWORD PTR [rcx+r14*1+0x53f40]
   14002e8d8:	call   0x140026220
   14002e8dd:	movsxd rax,DWORD PTR [rip+0x26bfc]        # 0x1400554e0
   14002e8e4:	mov    rcx,QWORD PTR [rip+0x26c05]        # 0x1400554f0
   14002e8eb:	movsd  xmm3,QWORD PTR [rsp+0x38]
   14002e8f1:	movsd  xmm2,QWORD PTR [rsp+0x30]
   14002e8f7:	movsd  xmm0,QWORD PTR [rsp+0x40]
   14002e8fd:	movq   r9,xmm3
   14002e902:	movq   r8,xmm2
   14002e907:	mov    rax,QWORD PTR [r14+rax*8+0x51aa0]
   14002e90f:	lea    rdx,[rip+0x12fda]        # 0x1400418f0
   14002e916:	mov    QWORD PTR [rsp+0x28],rax
   14002e91b:	movsd  QWORD PTR [rsp+0x20],xmm0
   14002e921:	call   QWORD PTR [rip+0xe999]        # 0x14003d2c0
   14002e927:	movsxd rax,DWORD PTR [rip+0x255e6]        # 0x140053f14
   14002e92e:	mov    rdi,QWORD PTR [rsp+0x60]
   14002e933:	shl    rax,0x5
   14002e937:	mov    rcx,QWORD PTR [rax+r14*1+0x53f48]
   14002e93f:	mov    r8,QWORD PTR [rax+r14*1+0x53f40]
   14002e947:	mov    r14,QWORD PTR [rsp+0x68]
   14002e94c:	sub    r8,rcx
   14002e94f:	nop
   14002e950:	movzx  edx,BYTE PTR [rcx]
   14002e953:	movzx  eax,BYTE PTR [rcx+r8*1]
   14002e958:	sub    edx,eax
   14002e95a:	jne    0x14002e963
   14002e95c:	inc    rcx
   14002e95f:	test   eax,eax
   14002e961:	jne    0x14002e950
   14002e963:	test   edx,edx
   14002e965:	je     0x14002e9dd
   14002e967:	mov    r9d,DWORD PTR [rsi+0x4]
   14002e96b:	mov    r8d,DWORD PTR [rsi]
   14002e96e:	mov    rdx,QWORD PTR [rip+0x2326b]        # 0x140051be0
   14002e975:	mov    rcx,QWORD PTR [rip+0x26b74]        # 0x1400554f0
   14002e97c:	call   QWORD PTR [rip+0xe93e]        # 0x14003d2c0
   14002e982:	cmp    rbx,rbp
   14002e985:	jge    0x14002e9b5
   14002e987:	nop    WORD PTR [rax+rax*1+0x0]
   14002e990:	mov    r9d,DWORD PTR [rsi+rbx*8+0x4]
   14002e995:	mov    r8d,DWORD PTR [rsi+rbx*8]
   14002e999:	mov    rcx,QWORD PTR [rip+0x26b50]        # 0x1400554f0
   14002e9a0:	lea    rdx,[rip+0x12fd1]        # 0x140041978
   14002e9a7:	call   QWORD PTR [rip+0xe913]        # 0x14003d2c0
   14002e9ad:	inc    rbx
   14002e9b0:	cmp    rbx,rbp
   14002e9b3:	jl     0x14002e990
   14002e9b5:	mov    rcx,QWORD PTR [rip+0x26b34]        # 0x1400554f0
   14002e9bc:	lea    rdx,[rip+0x12fc5]        # 0x140041988
   14002e9c3:	call   QWORD PTR [rip+0xe8f7]        # 0x14003d2c0
   14002e9c9:	mov    rdx,QWORD PTR [rip+0x23208]        # 0x140051bd8
   14002e9d0:	mov    rcx,QWORD PTR [rip+0x26b19]        # 0x1400554f0
   14002e9d7:	call   QWORD PTR [rip+0xe8e3]        # 0x14003d2c0
   14002e9dd:	mov    rbx,QWORD PTR [rsp+0x70]
   14002e9e2:	mov    rbp,QWORD PTR [rsp+0x78]
   14002e9e7:	add    rsp,0x50
   14002e9eb:	pop    rsi
   14002e9ec:	ret    
   14002e9ed:	int3   
   14002e9ee:	int3   
   14002e9ef:	int3   
   14002e9f0:	mov    QWORD PTR [rsp+0x18],rbx
   14002e9f5:	mov    QWORD PTR [rsp+0x8],rcx
   14002e9fa:	push   rdi
   14002e9fb:	sub    rsp,0x30
   14002e9ff:	mov    ebx,r8d
   14002ea02:	mov    edi,edx
   14002ea04:	test   r9d,r9d
   14002ea07:	je     0x14002eabf
   14002ea0d:	movsxd rcx,DWORD PTR [rip+0x25500]        # 0x140053f14
   14002ea14:	mov    QWORD PTR [rsp+0x48],rsi
   14002ea19:	lea    rsi,[rip+0x25520]        # 0x140053f40
   14002ea20:	shl    rcx,0x5
   14002ea24:	mov    rcx,QWORD PTR [rcx+rsi*1+0x8]
   14002ea29:	call   0x14002f090
   14002ea2e:	mov    r9d,DWORD PTR [rsp+0x44]
   14002ea33:	mov    r8d,DWORD PTR [rsp+0x40]
   14002ea38:	mov    rcx,QWORD PTR [rip+0x26ab1]        # 0x1400554f0
   14002ea3f:	lea    rdx,[rip+0x12f52]        # 0x140041998
   14002ea46:	mov    DWORD PTR [rsp+0x28],ebx
   14002ea4a:	mov    DWORD PTR [rsp+0x20],edi
   14002ea4e:	call   QWORD PTR [rip+0xe86c]        # 0x14003d2c0
   14002ea54:	mov    rdx,QWORD PTR [rip+0x23175]        # 0x140051bd0
   14002ea5b:	mov    rcx,QWORD PTR [rip+0x26a8e]        # 0x1400554f0
   14002ea62:	call   QWORD PTR [rip+0xe858]        # 0x14003d2c0
   14002ea68:	movsxd rcx,DWORD PTR [rip+0x254a5]        # 0x140053f14
   14002ea6f:	shl    rcx,0x5
   14002ea73:	mov    rcx,QWORD PTR [rcx+rsi*1]
   14002ea77:	call   0x14002f090
   14002ea7c:	movsxd rcx,DWORD PTR [rip+0x25491]        # 0x140053f14
   14002ea83:	shl    rcx,0x5
   14002ea87:	mov    rax,QWORD PTR [rcx+rsi*1+0x8]
   14002ea8c:	mov    r9,QWORD PTR [rcx+rsi*1]
   14002ea90:	mov    rsi,QWORD PTR [rsp+0x48]
   14002ea95:	sub    r9,rax
   14002ea98:	nop    DWORD PTR [rax+rax*1+0x0]
   14002eaa0:	movzx  r8d,BYTE PTR [rax]
   14002eaa4:	movzx  ecx,BYTE PTR [rax+r9*1]
   14002eaa9:	sub    r8d,ecx
   14002eaac:	jne    0x14002eab5
   14002eaae:	inc    rax
   14002eab1:	test   ecx,ecx
   14002eab3:	jne    0x14002eaa0
   14002eab5:	test   r8d,r8d
   14002eab8:	je     0x14002eaf7
   14002eaba:	mov    rcx,QWORD PTR [rsp+0x40]
   14002eabf:	mov    r9d,DWORD PTR [rsp+0x44]
   14002eac4:	mov    r8d,ecx
   14002eac7:	mov    rcx,QWORD PTR [rip+0x26a22]        # 0x1400554f0
   14002eace:	lea    rdx,[rip+0x12ec3]        # 0x140041998
   14002ead5:	mov    DWORD PTR [rsp+0x28],ebx
   14002ead9:	mov    DWORD PTR [rsp+0x20],edi
   14002eadd:	call   QWORD PTR [rip+0xe7dd]        # 0x14003d2c0
   14002eae3:	mov    rdx,QWORD PTR [rip+0x230ee]        # 0x140051bd8
   14002eaea:	mov    rcx,QWORD PTR [rip+0x269ff]        # 0x1400554f0
   14002eaf1:	call   QWORD PTR [rip+0xe7c9]        # 0x14003d2c0
   14002eaf7:	mov    rbx,QWORD PTR [rsp+0x50]
   14002eafc:	add    rsp,0x30
   14002eb00:	pop    rdi
   14002eb01:	ret    
   14002eb02:	int3   
   14002eb03:	int3   
   14002eb04:	int3   
   14002eb05:	int3   
   14002eb06:	int3   
   14002eb07:	int3   
   14002eb08:	int3   
   14002eb09:	int3   
   14002eb0a:	int3   
   14002eb0b:	int3   
   14002eb0c:	int3   
   14002eb0d:	int3   
   14002eb0e:	int3   
   14002eb0f:	int3   
   14002eb10:	mov    QWORD PTR [rsp+0x8],rbx
   14002eb15:	mov    QWORD PTR [rsp+0x10],rsi
   14002eb1a:	push   rdi
   14002eb1b:	sub    rsp,0x20
   14002eb1f:	mov    r9d,DWORD PTR [rcx+0x4]
   14002eb23:	mov    r8d,DWORD PTR [rcx]
   14002eb26:	movsxd rdi,edx
   14002eb29:	mov    rdx,QWORD PTR [rip+0x230b0]        # 0x140051be0
   14002eb30:	mov    rsi,rcx
   14002eb33:	mov    rcx,QWORD PTR [rip+0x269b6]        # 0x1400554f0
   14002eb3a:	call   QWORD PTR [rip+0xe780]        # 0x14003d2c0
   14002eb40:	mov    ebx,0x1
   14002eb45:	cmp    rbx,rdi
   14002eb48:	jge    0x14002eb75
   14002eb4a:	nop    WORD PTR [rax+rax*1+0x0]
   14002eb50:	mov    r9d,DWORD PTR [rsi+rbx*8+0x4]
   14002eb55:	mov    r8d,DWORD PTR [rsi+rbx*8]
   14002eb59:	mov    rcx,QWORD PTR [rip+0x26990]        # 0x1400554f0
   14002eb60:	lea    rdx,[rip+0x12e11]        # 0x140041978
   14002eb67:	call   QWORD PTR [rip+0xe753]        # 0x14003d2c0
   14002eb6d:	inc    rbx
   14002eb70:	cmp    rbx,rdi
   14002eb73:	jl     0x14002eb50
   14002eb75:	mov    rdx,QWORD PTR [rip+0x2305c]        # 0x140051bd8
   14002eb7c:	mov    rcx,QWORD PTR [rip+0x2696d]        # 0x1400554f0
   14002eb83:	mov    rbx,QWORD PTR [rsp+0x30]
   14002eb88:	mov    rsi,QWORD PTR [rsp+0x38]
   14002eb8d:	add    rsp,0x20
   14002eb91:	pop    rdi
   14002eb92:	rex.W jmp QWORD PTR [rip+0xe727]        # 0x14003d2c0
   14002eb99:	int3   
   14002eb9a:	int3   
   14002eb9b:	int3   
   14002eb9c:	int3   
   14002eb9d:	int3   
   14002eb9e:	int3   
   14002eb9f:	int3   
   14002eba0:	mov    QWORD PTR [rsp+0x8],rbx
   14002eba5:	mov    QWORD PTR [rsp+0x10],rbp
   14002ebaa:	mov    QWORD PTR [rsp+0x18],rsi
   14002ebaf:	push   rdi
   14002ebb0:	push   r14
   14002ebb2:	push   r15
   14002ebb4:	sub    rsp,0x30
   14002ebb8:	mov    r15,rcx
   14002ebbb:	mov    rcx,QWORD PTR [rip+0x2692e]        # 0x1400554f0
   14002ebc2:	mov    rdi,rdx
   14002ebc5:	lea    rdx,[rip+0x12de8]        # 0x1400419b4
   14002ebcc:	mov    r14d,r9d
   14002ebcf:	movsxd rbp,r8d
   14002ebd2:	call   QWORD PTR [rip+0xe6e8]        # 0x14003d2c0
   14002ebd8:	xor    ebx,ebx
   14002ebda:	test   ebp,ebp
   14002ebdc:	jle    0x14002ec05
   14002ebde:	xchg   ax,ax
   14002ebe0:	mov    r9d,DWORD PTR [rdi+rbx*8+0x4]
   14002ebe5:	mov    r8d,DWORD PTR [rdi+rbx*8]
   14002ebe9:	mov    rcx,QWORD PTR [rip+0x26900]        # 0x1400554f0
   14002ebf0:	lea    rdx,[rip+0x12dc1]        # 0x1400419b8
   14002ebf7:	call   QWORD PTR [rip+0xe6c3]        # 0x14003d2c0
   14002ebfd:	inc    rbx
   14002ec00:	cmp    rbx,rbp
   14002ec03:	jl     0x14002ebe0
   14002ec05:	mov    r9d,DWORD PTR [rdi+0x4]
   14002ec09:	mov    r8d,DWORD PTR [rdi]
   14002ec0c:	mov    rcx,QWORD PTR [rip+0x268dd]        # 0x1400554f0
   14002ec13:	lea    rdx,[rip+0x12d9e]        # 0x1400419b8
   14002ec1a:	call   QWORD PTR [rip+0xe6a0]        # 0x14003d2c0
   14002ec20:	mov    rcx,QWORD PTR [rip+0x268c9]        # 0x1400554f0
   14002ec27:	lea    rax,[rip+0xf1aa]        # 0x14003ddd8
   14002ec2e:	test   r14d,r14d
   14002ec31:	lea    r9,[rip+0xf1a8]        # 0x14003dde0
   14002ec38:	lea    rdx,[rip+0x12d81]        # 0x1400419c0
   14002ec3f:	mov    r8d,ebp
   14002ec42:	cmovne r9,rax
   14002ec46:	mov    QWORD PTR [rsp+0x20],r15
   14002ec4b:	call   QWORD PTR [rip+0xe66f]        # 0x14003d2c0
   14002ec51:	mov    rbx,QWORD PTR [rsp+0x50]
   14002ec56:	mov    rbp,QWORD PTR [rsp+0x58]
   14002ec5b:	mov    rsi,QWORD PTR [rsp+0x60]
   14002ec60:	add    rsp,0x30
   14002ec64:	pop    r15
   14002ec66:	pop    r14
   14002ec68:	pop    rdi
   14002ec69:	ret    
   14002ec6a:	int3   
   14002ec6b:	int3   
   14002ec6c:	int3   
   14002ec6d:	int3   
   14002ec6e:	int3   
   14002ec6f:	int3   
   14002ec70:	mov    DWORD PTR [rip+0x22f4e],0x1        # 0x140051bc8
   14002ec7a:	ret    
   14002ec7b:	int3   
   14002ec7c:	int3   
   14002ec7d:	int3   
   14002ec7e:	int3   
   14002ec7f:	int3   
   14002ec80:	rex push rdi
   14002ec82:	sub    rsp,0x20
   14002ec86:	xor    edi,edi
   14002ec88:	cmp    DWORD PTR [rip+0x252aa],edi        # 0x140053f38
   14002ec8e:	jle    0x14002ed5a
   14002ec94:	mov    QWORD PTR [rsp+0x30],rbx
   14002ec99:	mov    QWORD PTR [rsp+0x38],rsi
   14002ec9e:	lea    rsi,[rip+0x2539b]        # 0x140054040
   14002eca5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002ecb0:	mov    rcx,QWORD PTR [rip+0x26839]        # 0x1400554f0
   14002ecb7:	lea    rdx,[rip+0x12dfa]        # 0x140041ab8
   14002ecbe:	mov    r8d,edi
   14002ecc1:	call   QWORD PTR [rip+0xe5f9]        # 0x14003d2c0
   14002ecc7:	mov    rbx,QWORD PTR [rsi]
   14002ecca:	movzx  eax,BYTE PTR [rbx]
   14002eccd:	test   al,al
   14002eccf:	je     0x14002ed11
   14002ecd1:	cmp    al,0x25
   14002ecd3:	jne    0x14002ecf0
   14002ecd5:	cmp    BYTE PTR [rbx+0x1],al
   14002ecd8:	jne    0x14002ecf0
   14002ecda:	nop    WORD PTR [rax+rax*1+0x0]
   14002ece0:	movzx  eax,BYTE PTR [rbx]
   14002ece3:	inc    rbx
   14002ece6:	cmp    al,0xa
   14002ece8:	jne    0x14002ece0
   14002ecea:	jmp    0x14002ed0a
   14002ecec:	nop    DWORD PTR [rax+0x0]
   14002ecf0:	movsx  ecx,BYTE PTR [rbx]
   14002ecf3:	mov    rdx,QWORD PTR [rip+0x267f6]        # 0x1400554f0
   14002ecfa:	call   QWORD PTR [rip+0xe438]        # 0x14003d138
   14002ed00:	movzx  eax,BYTE PTR [rbx]
   14002ed03:	inc    rbx
   14002ed06:	cmp    al,0xa
   14002ed08:	jne    0x14002ecf0
   14002ed0a:	movzx  eax,BYTE PTR [rbx]
   14002ed0d:	test   al,al
   14002ed0f:	jne    0x14002ecd1
   14002ed11:	mov    rcx,QWORD PTR [rsi]
   14002ed14:	call   QWORD PTR [rip+0xe586]        # 0x14003d2a0
   14002ed1a:	mov    rcx,QWORD PTR [rip+0x267cf]        # 0x1400554f0
   14002ed21:	lea    rdx,[rip+0x12da8]        # 0x140041ad0
   14002ed28:	call   QWORD PTR [rip+0xe592]        # 0x14003d2c0
   14002ed2e:	inc    edi
   14002ed30:	add    rsi,0x8
   14002ed34:	cmp    edi,DWORD PTR [rip+0x251fe]        # 0x140053f38
   14002ed3a:	jl     0x14002ecb0
   14002ed40:	mov    rsi,QWORD PTR [rsp+0x38]
   14002ed45:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ed4a:	mov    DWORD PTR [rip+0x251e4],0x0        # 0x140053f38
   14002ed54:	add    rsp,0x20
   14002ed58:	pop    rdi
   14002ed59:	ret    
   14002ed5a:	mov    DWORD PTR [rip+0x251d8],edi        # 0x140053f38
   14002ed60:	add    rsp,0x20
   14002ed64:	pop    rdi
   14002ed65:	ret    
   14002ed66:	int3   
   14002ed67:	int3   
   14002ed68:	int3   
   14002ed69:	int3   
   14002ed6a:	int3   
   14002ed6b:	int3   
   14002ed6c:	int3   
   14002ed6d:	int3   
   14002ed6e:	int3   
   14002ed6f:	int3   
   14002ed70:	mov    rcx,QWORD PTR [rcx+0x30]
   14002ed74:	test   rcx,rcx
   14002ed77:	je     0x14002ed80
   14002ed79:	rex.W jmp QWORD PTR [rip+0xe520]        # 0x14003d2a0
   14002ed80:	ret    
   14002ed81:	int3   
   14002ed82:	int3   
   14002ed83:	int3   
   14002ed84:	int3   
   14002ed85:	int3   
   14002ed86:	int3   
   14002ed87:	int3   
   14002ed88:	int3   
   14002ed89:	int3   
   14002ed8a:	int3   
   14002ed8b:	int3   
   14002ed8c:	int3   
   14002ed8d:	int3   
   14002ed8e:	int3   
   14002ed8f:	int3   
   14002ed90:	mov    QWORD PTR [rsp+0x8],rbx
   14002ed95:	push   rdi
   14002ed96:	sub    rsp,0x30
   14002ed9a:	mov    rdi,QWORD PTR [rcx+0x30]
   14002ed9e:	mov    rbx,rcx
   14002eda1:	test   rdi,rdi
   14002eda4:	je     0x14002edfe
   14002eda6:	mov    rax,QWORD PTR [rip+0x2673b]        # 0x1400554e8
   14002edad:	call   QWORD PTR [rax+0x68]
   14002edb0:	mov    rax,QWORD PTR [rip+0x26731]        # 0x1400554e8
   14002edb7:	call   QWORD PTR [rax+0x88]
   14002edbd:	mov    r9d,DWORD PTR [rbx+0x3c]
   14002edc1:	mov    r8d,DWORD PTR [rbx+0x38]
   14002edc5:	mov    eax,DWORD PTR [rdi]
   14002edc7:	add    r9d,DWORD PTR [rdi+0x8]
   14002edcb:	add    r8d,DWORD PTR [rdi+0x4]
   14002edcf:	mov    rcx,QWORD PTR [rip+0x2671a]        # 0x1400554f0
   14002edd6:	lea    rdx,[rip+0x12cb3]        # 0x140041a90
   14002eddd:	mov    DWORD PTR [rsp+0x20],eax
   14002ede1:	call   QWORD PTR [rip+0xe4d9]        # 0x14003d2c0
   14002ede7:	mov    rax,QWORD PTR [rip+0x266fa]        # 0x1400554e8
   14002edee:	call   QWORD PTR [rax+0x90]
   14002edf4:	mov    rax,QWORD PTR [rip+0x266ed]        # 0x1400554e8
   14002edfb:	call   QWORD PTR [rax+0x70]
   14002edfe:	mov    rbx,QWORD PTR [rsp+0x40]
   14002ee03:	add    rsp,0x30
   14002ee07:	pop    rdi
   14002ee08:	ret    
   14002ee09:	int3   
   14002ee0a:	int3   
   14002ee0b:	int3   
   14002ee0c:	int3   
   14002ee0d:	int3   
   14002ee0e:	int3   
   14002ee0f:	int3   
   14002ee10:	rex push rbx
   14002ee12:	push   rbp
   14002ee13:	sub    rsp,0x278
   14002ee1a:	lea    rdx,[rip+0x10037]        # 0x14003ee58
   14002ee21:	mov    rbp,rcx
   14002ee24:	call   0x1400275b0
   14002ee29:	mov    rbx,rax
   14002ee2c:	test   rax,rax
   14002ee2f:	je     0x14002f054
   14002ee35:	cmp    BYTE PTR [rax],0x0
   14002ee38:	je     0x14002f054
   14002ee3e:	lea    rdx,[rip+0xf767]        # 0x14003e5ac
   14002ee45:	mov    rcx,rax
   14002ee48:	mov    QWORD PTR [rsp+0x290],rsi
   14002ee50:	call   QWORD PTR [rip+0xe282]        # 0x14003d0d8
   14002ee56:	mov    rsi,rax
   14002ee59:	test   rax,rax
   14002ee5c:	je     0x14002f034
   14002ee62:	lea    rcx,[rsp+0x70]
   14002ee67:	mov    r8,rax
   14002ee6a:	mov    edx,0x200
   14002ee6f:	call   QWORD PTR [rip+0xe2bb]        # 0x14003d130
   14002ee75:	test   rax,rax
   14002ee78:	je     0x14002eed6
   14002ee7a:	nop    WORD PTR [rax+rax*1+0x0]
   14002ee80:	lea    rax,[rsp+0x2a8]
   14002ee88:	lea    r9,[rsp+0x30]
   14002ee8d:	lea    r8,[rsp+0x2a0]
   14002ee95:	mov    QWORD PTR [rsp+0x28],rax
   14002ee9a:	lea    rax,[rsp+0x298]
   14002eea2:	lea    rdx,[rip+0x12b27]        # 0x1400419d0
   14002eea9:	lea    rcx,[rsp+0x70]
   14002eeae:	mov    QWORD PTR [rsp+0x20],rax
   14002eeb3:	call   QWORD PTR [rip+0xe3ff]        # 0x14003d2b8
   14002eeb9:	cmp    eax,0x4
   14002eebc:	je     0x14002ef09
   14002eebe:	lea    rcx,[rsp+0x70]
   14002eec3:	mov    r8,rsi
   14002eec6:	mov    edx,0x200
   14002eecb:	call   QWORD PTR [rip+0xe25f]        # 0x14003d130
   14002eed1:	test   rax,rax
   14002eed4:	jne    0x14002ee80
   14002eed6:	call   QWORD PTR [rip+0xe3f4]        # 0x14003d2d0
   14002eedc:	mov    r8,QWORD PTR [rip+0x265dd]        # 0x1400554c0
   14002eee3:	mov    r9,rbx
   14002eee6:	lea    rcx,[rax+0x60]
   14002eeea:	lea    rdx,[rip+0x12aff]        # 0x1400419f0
   14002eef1:	call   QWORD PTR [rip+0xe3c9]        # 0x14003d2c0
   14002eef7:	mov    rsi,QWORD PTR [rsp+0x290]
   14002eeff:	add    rsp,0x278
   14002ef06:	pop    rbp
   14002ef07:	pop    rbx
   14002ef08:	ret    
   14002ef09:	mov    eax,DWORD PTR [rsp+0x298]
   14002ef10:	mov    rcx,rsi
   14002ef13:	mov    QWORD PTR [rsp+0x270],rdi
   14002ef1b:	sub    eax,DWORD PTR [rsp+0x2a0]
   14002ef22:	movd   xmm0,eax
   14002ef26:	mov    eax,DWORD PTR [rsp+0x2a8]
   14002ef2d:	sub    eax,DWORD PTR [rsp+0x30]
   14002ef31:	cvtdq2pd xmm0,xmm0
   14002ef35:	divsd  xmm0,QWORD PTR [rip+0xe54b]        # 0x14003d488
   14002ef3d:	movsd  QWORD PTR [rbp+0x40],xmm0
   14002ef42:	movd   xmm0,eax
   14002ef46:	cvtdq2pd xmm0,xmm0
   14002ef4a:	divsd  xmm0,QWORD PTR [rip+0xe536]        # 0x14003d488
   14002ef52:	movsd  QWORD PTR [rbp+0x48],xmm0
   14002ef57:	call   QWORD PTR [rip+0xe38b]        # 0x14003d2e8
   14002ef5d:	lea    rdx,[rsp+0x38]
   14002ef62:	mov    ecx,eax
   14002ef64:	call   QWORD PTR [rip+0xe24e]        # 0x14003d1b8
   14002ef6a:	movsxd rax,DWORD PTR [rip+0x24fc7]        # 0x140053f38
   14002ef71:	mov    ecx,0xc
   14002ef76:	mov    rdi,rax
   14002ef79:	inc    eax
   14002ef7b:	mov    DWORD PTR [rip+0x24fb7],eax        # 0x140053f38
   14002ef81:	call   0x14001d2c0
   14002ef86:	mov    QWORD PTR [rbp+0x30],rax
   14002ef8a:	mov    DWORD PTR [rax],edi
   14002ef8c:	mov    ecx,DWORD PTR [rsp+0x2a0]
   14002ef93:	mov    r8,rax
   14002ef96:	mov    eax,DWORD PTR [rsp+0x298]
   14002ef9d:	sub    eax,ecx
   14002ef9f:	neg    ecx
   14002efa1:	cdq    
   14002efa2:	sub    eax,edx
   14002efa4:	sar    eax,1
   14002efa6:	sub    ecx,eax
   14002efa8:	mov    DWORD PTR [r8+0x4],ecx
   14002efac:	mov    ecx,DWORD PTR [rsp+0x30]
   14002efb0:	mov    eax,DWORD PTR [rsp+0x2a8]
   14002efb7:	sub    eax,ecx
   14002efb9:	neg    ecx
   14002efbb:	cdq    
   14002efbc:	sub    eax,edx
   14002efbe:	sar    eax,1
   14002efc0:	sub    ecx,eax
   14002efc2:	mov    DWORD PTR [r8+0x8],ecx
   14002efc6:	mov    eax,DWORD PTR [rsp+0x4c]
   14002efca:	inc    eax
   14002efcc:	movsxd rcx,eax
   14002efcf:	call   QWORD PTR [rip+0xe193]        # 0x14003d168
   14002efd5:	xor    r8d,r8d
   14002efd8:	xor    edx,edx
   14002efda:	mov    rbx,rax
   14002efdd:	lea    rax,[rip+0x2505c]        # 0x140054040
   14002efe4:	mov    rcx,rsi
   14002efe7:	mov    QWORD PTR [rax+rdi*8],rbx
   14002efeb:	call   QWORD PTR [rip+0xe1bf]        # 0x14003d1b0
   14002eff1:	movsxd rdx,DWORD PTR [rsp+0x4c]
   14002eff6:	mov    r9,rsi
   14002eff9:	mov    r8d,0x1
   14002efff:	mov    rcx,rbx
   14002f002:	call   QWORD PTR [rip+0xe1a0]        # 0x14003d1a8
   14002f008:	movsxd rcx,DWORD PTR [rsp+0x4c]
   14002f00d:	mov    BYTE PTR [rcx+rbx*1],0x0
   14002f011:	mov    rcx,rsi
   14002f014:	call   QWORD PTR [rip+0xe186]        # 0x14003d1a0
   14002f01a:	mov    rdi,QWORD PTR [rsp+0x270]
   14002f022:	mov    rsi,QWORD PTR [rsp+0x290]
   14002f02a:	add    rsp,0x278
   14002f031:	pop    rbp
   14002f032:	pop    rbx
   14002f033:	ret    
   14002f034:	call   QWORD PTR [rip+0xe296]        # 0x14003d2d0
   14002f03a:	mov    r8,QWORD PTR [rip+0x2647f]        # 0x1400554c0
   14002f041:	mov    r9,rbx
   14002f044:	lea    rcx,[rax+0x60]
   14002f048:	lea    rdx,[rip+0x129d9]        # 0x140041a28
   14002f04f:	jmp    0x14002eef1
   14002f054:	call   QWORD PTR [rip+0xe276]        # 0x14003d2d0
   14002f05a:	mov    r9,QWORD PTR [rbp+0x10]
   14002f05e:	mov    r8,QWORD PTR [rip+0x2645b]        # 0x1400554c0
   14002f065:	lea    rcx,[rax+0x60]
   14002f069:	lea    rdx,[rip+0x129e8]        # 0x140041a58
   14002f070:	call   QWORD PTR [rip+0xe24a]        # 0x14003d2c0
   14002f076:	add    rsp,0x278
   14002f07d:	pop    rbp
   14002f07e:	pop    rbx
   14002f07f:	ret    
   14002f080:	rex.W jmp QWORD PTR [rip+0xe131]        # 0x14003d1b8
   14002f087:	int3   
   14002f088:	int3   
   14002f089:	int3   
   14002f08a:	int3   
   14002f08b:	int3   
   14002f08c:	int3   
   14002f08d:	int3   
   14002f08e:	int3   
   14002f08f:	int3   
   14002f090:	sub    rsp,0x58
   14002f094:	lea    rdx,[rsp+0x30]
   14002f099:	xor    r8d,r8d
   14002f09c:	call   0x140026220
   14002f0a1:	movsxd rax,DWORD PTR [rip+0x26438]        # 0x1400554e0
   14002f0a8:	lea    rcx,[rip+0x229f1]        # 0x140051aa0
   14002f0af:	movsd  xmm3,QWORD PTR [rsp+0x38]
   14002f0b5:	movsd  xmm2,QWORD PTR [rsp+0x30]
   14002f0bb:	movsd  xmm0,QWORD PTR [rsp+0x40]
   14002f0c1:	movq   r9,xmm3
   14002f0c6:	movq   r8,xmm2
   14002f0cb:	mov    rax,QWORD PTR [rcx+rax*8]
   14002f0cf:	mov    rcx,QWORD PTR [rip+0x2641a]        # 0x1400554f0
   14002f0d6:	lea    rdx,[rip+0x12813]        # 0x1400418f0
   14002f0dd:	mov    QWORD PTR [rsp+0x28],rax
   14002f0e2:	movsd  QWORD PTR [rsp+0x20],xmm0
   14002f0e8:	call   QWORD PTR [rip+0xe1d2]        # 0x14003d2c0
   14002f0ee:	add    rsp,0x58
   14002f0f2:	ret    
   14002f0f3:	int3   
   14002f0f4:	int3   
   14002f0f5:	int3   
   14002f0f6:	int3   
   14002f0f7:	int3   
   14002f0f8:	int3   
   14002f0f9:	int3   
   14002f0fa:	int3   
   14002f0fb:	int3   
   14002f0fc:	int3   
   14002f0fd:	int3   
   14002f0fe:	int3   
   14002f0ff:	int3   
   14002f100:	mov    QWORD PTR [rsp+0x8],rbx
   14002f105:	mov    QWORD PTR [rsp+0x10],rsi
   14002f10a:	push   rdi
   14002f10b:	sub    rsp,0x20
   14002f10f:	mov    r8,QWORD PTR [rip+0x24df2]        # 0x140053f08
   14002f116:	mov    rdi,rcx
   14002f119:	test   r8,r8
   14002f11c:	jne    0x14002f13d
   14002f11e:	mov    esi,0x40
   14002f123:	mov    ecx,esi
   14002f125:	mov    DWORD PTR [rip+0x24de5],esi        # 0x140053f10
   14002f12b:	call   QWORD PTR [rip+0xe037]        # 0x14003d168
   14002f131:	mov    r8,rax
   14002f134:	mov    QWORD PTR [rip+0x24dcd],rax        # 0x140053f08
   14002f13b:	jmp    0x14002f143
   14002f13d:	mov    esi,DWORD PTR [rip+0x24dcd]        # 0x140053f10
   14002f143:	mov    BYTE PTR [r8],0x28
   14002f147:	cmp    BYTE PTR [rdi],0x0
   14002f14a:	lea    rax,[r8+0x1]
   14002f14e:	mov    ebx,0x1
   14002f153:	je     0x14002f1af
   14002f155:	lea    ecx,[rsi-0x8]
   14002f158:	cmp    ebx,ecx
   14002f15a:	jle    0x14002f17d
   14002f15c:	lea    eax,[rsi+rsi*1]
   14002f15f:	mov    rcx,r8
   14002f162:	movsxd rsi,eax
   14002f165:	mov    rdx,rsi
   14002f168:	mov    DWORD PTR [rip+0x24da2],esi        # 0x140053f10
   14002f16e:	call   QWORD PTR [rip+0xdf34]        # 0x14003d0a8
   14002f174:	mov    r8,rax
   14002f177:	movsxd rax,ebx
   14002f17a:	add    rax,r8
   14002f17d:	movzx  edx,BYTE PTR [rdi]
   14002f180:	lea    ecx,[rdx-0x28]
   14002f183:	cmp    cl,0x1
   14002f186:	jbe    0x14002f18d
   14002f188:	cmp    dl,0x5c
   14002f18b:	jne    0x14002f195
   14002f18d:	mov    BYTE PTR [rax],0x5c
   14002f190:	inc    rax
   14002f193:	inc    ebx
   14002f195:	movzx  ecx,BYTE PTR [rdi]
   14002f198:	inc    rdi
   14002f19b:	inc    rax
   14002f19e:	mov    BYTE PTR [rax-0x1],cl
   14002f1a1:	inc    ebx
   14002f1a3:	cmp    BYTE PTR [rdi],0x0
   14002f1a6:	jne    0x14002f155
   14002f1a8:	mov    QWORD PTR [rip+0x24d59],r8        # 0x140053f08
   14002f1af:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f1b4:	mov    rsi,QWORD PTR [rsp+0x38]
   14002f1b9:	mov    WORD PTR [rax],0x29
   14002f1be:	mov    rax,r8
   14002f1c1:	add    rsp,0x20
   14002f1c5:	pop    rdi
   14002f1c6:	ret    
   14002f1c7:	int3   
   14002f1c8:	int3   
   14002f1c9:	int3   
   14002f1ca:	int3   
   14002f1cb:	int3   
   14002f1cc:	int3   
   14002f1cd:	int3   
   14002f1ce:	int3   
   14002f1cf:	int3   
   14002f1d0:	ret    0x0
   14002f1d3:	int3   
   14002f1d4:	int3   
   14002f1d5:	int3   
   14002f1d6:	int3   
   14002f1d7:	int3   
   14002f1d8:	int3   
   14002f1d9:	int3   
   14002f1da:	int3   
   14002f1db:	int3   
   14002f1dc:	int3   
   14002f1dd:	int3   
   14002f1de:	int3   
   14002f1df:	int3   
   14002f1e0:	mov    rax,QWORD PTR [rsp+0x30]
   14002f1e5:	mov    rcx,rax
   14002f1e8:	shr    rcx,0x20
   14002f1ec:	imul   ecx,eax
   14002f1ef:	cmp    DWORD PTR [rip+0x26302],0x3        # 0x1400554f8
   14002f1f6:	mov    DWORD PTR [rip+0x24f68],ecx        # 0x140054164
   14002f1fc:	jne    0x14002f21b
   14002f1fe:	mov    rax,QWORD PTR [rip+0x22e3b]        # 0x140052040
   14002f205:	mov    QWORD PTR [rip+0x24f94],rax        # 0x1400541a0
   14002f20c:	mov    rax,QWORD PTR [rip+0x22e35]        # 0x140052048
   14002f213:	mov    QWORD PTR [rip+0x24f8e],rax        # 0x1400541a8
   14002f21a:	ret    
   14002f21b:	mov    rax,QWORD PTR [rip+0x22e0e]        # 0x140052030
   14002f222:	mov    QWORD PTR [rip+0x24f77],rax        # 0x1400541a0
   14002f229:	mov    rax,QWORD PTR [rip+0x22e08]        # 0x140052038
   14002f230:	mov    QWORD PTR [rip+0x24f71],rax        # 0x1400541a8
   14002f237:	ret    
   14002f238:	int3   
   14002f239:	int3   
   14002f23a:	int3   
   14002f23b:	int3   
   14002f23c:	int3   
   14002f23d:	int3   
   14002f23e:	int3   
   14002f23f:	int3   
   14002f240:	ret    0x0
   14002f243:	int3   
   14002f244:	int3   
   14002f245:	int3   
   14002f246:	int3   
   14002f247:	int3   
   14002f248:	int3   
   14002f249:	int3   
   14002f24a:	int3   
   14002f24b:	int3   
   14002f24c:	int3   
   14002f24d:	int3   
   14002f24e:	int3   
   14002f24f:	int3   
   14002f250:	movups xmm0,XMMWORD PTR [rdx]
   14002f253:	mov    DWORD PTR [rip+0x24f3e],r8d        # 0x140054198
   14002f25a:	movups XMMWORD PTR [rip+0x24f1f],xmm0        # 0x140054180
   14002f261:	ret    
   14002f262:	int3   
   14002f263:	int3   
   14002f264:	int3   
   14002f265:	int3   
   14002f266:	int3   
   14002f267:	int3   
   14002f268:	int3   
   14002f269:	int3   
   14002f26a:	int3   
   14002f26b:	int3   
   14002f26c:	int3   
   14002f26d:	int3   
   14002f26e:	int3   
   14002f26f:	int3   
   14002f270:	ret    0x0
   14002f273:	int3   
   14002f274:	int3   
   14002f275:	int3   
   14002f276:	int3   
   14002f277:	int3   
   14002f278:	int3   
   14002f279:	int3   
   14002f27a:	int3   
   14002f27b:	int3   
   14002f27c:	int3   
   14002f27d:	int3   
   14002f27e:	int3   
   14002f27f:	int3   
   14002f280:	mov    rax,rsp
   14002f283:	mov    QWORD PTR [rax+0x8],rbx
   14002f287:	mov    QWORD PTR [rax+0x18],rsi
   14002f28b:	mov    QWORD PTR [rax+0x10],rdx
   14002f28f:	push   rdi
   14002f290:	sub    rsp,0x90
   14002f297:	mov    rcx,QWORD PTR [rip+0x24f02]        # 0x1400541a0
   14002f29e:	movaps XMMWORD PTR [rax-0x18],xmm6
   14002f2a2:	movsd  QWORD PTR [rip+0x24ebe],xmm2        # 0x140054168
   14002f2aa:	mov    esi,r9d
   14002f2ad:	movaps xmm6,xmm2
   14002f2b0:	mov    DWORD PTR [rip+0x24ee2],0x0        # 0x14005419c
   14002f2ba:	call   0x140030d70
   14002f2bf:	mov    r8,QWORD PTR [rip+0x22d8a]        # 0x140052050
   14002f2c6:	lea    rdx,[rip+0x12a4b]        # 0x140041d18
   14002f2cd:	lea    rcx,[rsp+0x40]
   14002f2d2:	mov    r9,r8
   14002f2d5:	call   QWORD PTR [rip+0xddd5]        # 0x14003d0b0
   14002f2db:	cmp    BYTE PTR [rsp+0x40],0x0
   14002f2e0:	lea    rbx,[rsp+0x40]
   14002f2e5:	je     0x14002f2ef
   14002f2e7:	inc    rbx
   14002f2ea:	cmp    BYTE PTR [rbx],0x0
   14002f2ed:	jne    0x14002f2e7
   14002f2ef:	mov    ecx,DWORD PTR [rip+0x24ea7]        # 0x14005419c
   14002f2f5:	lea    rax,[rsp+0x40]
   14002f2fa:	mov    edi,ebx
   14002f2fc:	sub    edi,eax
   14002f2fe:	add    ecx,edi
   14002f300:	cmp    ecx,0x50
   14002f303:	jle    0x14002f323
   14002f305:	mov    rdx,QWORD PTR [rip+0x261e4]        # 0x1400554f0
   14002f30c:	lea    rcx,[rip+0xe865]        # 0x14003db78
   14002f313:	call   QWORD PTR [rip+0xde27]        # 0x14003d140
   14002f319:	mov    DWORD PTR [rip+0x24e79],0x0        # 0x14005419c
   14002f323:	mov    rdx,QWORD PTR [rip+0x261c6]        # 0x1400554f0
   14002f32a:	lea    rcx,[rsp+0x40]
   14002f32f:	call   QWORD PTR [rip+0xde0b]        # 0x14003d140
   14002f335:	test   edi,edi
   14002f337:	jle    0x14002f34b
   14002f339:	cmp    BYTE PTR [rbx-0x1],0xa
   14002f33d:	jne    0x14002f34b
   14002f33f:	mov    DWORD PTR [rip+0x24e53],0x0        # 0x14005419c
   14002f349:	jmp    0x14002f351
   14002f34b:	add    DWORD PTR [rip+0x24e4b],edi        # 0x14005419c
   14002f351:	call   0x140030870
   14002f356:	cmp    DWORD PTR [rip+0x24e07],0x1        # 0x140054164
   14002f35d:	jle    0x14002f41d
   14002f363:	mov    rcx,QWORD PTR [rip+0x24e96]        # 0x140054200
   14002f36a:	call   0x140030b20
   14002f36f:	mov    rcx,QWORD PTR [rip+0x24e8a]        # 0x140054200
   14002f376:	mov    QWORD PTR [rax+0x30],rcx
   14002f37a:	lea    rcx,[rip+0x22cff]        # 0x140052080
   14002f381:	mov    QWORD PTR [rip+0x24e78],rax        # 0x140054200
   14002f388:	call   0x140030fe0
   14002f38d:	cmp    esi,0x5a
   14002f390:	jne    0x14002f3b5
   14002f392:	mov    r8,QWORD PTR [rip+0x22cb7]        # 0x140052050
   14002f399:	lea    rdx,[rip+0x12988]        # 0x140041d28
   14002f3a0:	lea    rcx,[rsp+0x40]
   14002f3a5:	call   QWORD PTR [rip+0xdd05]        # 0x14003d0b0
   14002f3ab:	lea    rcx,[rsp+0x40]
   14002f3b0:	call   0x140030d70
   14002f3b5:	mov    r8,QWORD PTR [rip+0x22c94]        # 0x140052050
   14002f3bc:	mov    eax,DWORD PTR [rsp+0xac]
   14002f3c3:	mov    r9d,DWORD PTR [rsp+0xa8]
   14002f3cb:	mov    QWORD PTR [rsp+0x28],r8
   14002f3d0:	lea    rdx,[rip+0x12961]        # 0x140041d38
   14002f3d7:	lea    rcx,[rsp+0x40]
   14002f3dc:	mov    DWORD PTR [rsp+0x20],eax
   14002f3e0:	call   QWORD PTR [rip+0xdcca]        # 0x14003d0b0
   14002f3e6:	lea    rcx,[rsp+0x40]
   14002f3eb:	call   0x140030d70
   14002f3f0:	cmp    esi,0x5a
   14002f3f3:	jne    0x14002f418
   14002f3f5:	mov    r8,QWORD PTR [rip+0x22c54]        # 0x140052050
   14002f3fc:	lea    rdx,[rip+0x1294d]        # 0x140041d50
   14002f403:	lea    rcx,[rsp+0x40]
   14002f408:	call   QWORD PTR [rip+0xdca2]        # 0x14003d0b0
   14002f40e:	lea    rcx,[rsp+0x40]
   14002f413:	call   0x140030d70
   14002f418:	call   0x140030f00
   14002f41d:	cmp    esi,0x5a
   14002f420:	jne    0x14002f4c0
   14002f426:	mov    r8,QWORD PTR [rip+0x22c23]        # 0x140052050
   14002f42d:	lea    rdx,[rip+0x128f4]        # 0x140041d28
   14002f434:	lea    rcx,[rsp+0x40]
   14002f439:	call   QWORD PTR [rip+0xdc71]        # 0x14003d0b0
   14002f43f:	lea    rcx,[rsp+0x40]
   14002f444:	call   0x140030d70
   14002f449:	mov    edx,DWORD PTR [rip+0x24d49]        # 0x140054198
   14002f44f:	mov    ecx,DWORD PTR [rip+0x24d2f]        # 0x140054184
   14002f455:	movd   xmm1,DWORD PTR [rsp+0xc4]
   14002f45e:	movd   xmm0,ecx
   14002f462:	cvtdq2pd xmm1,xmm1
   14002f466:	mov    r9d,DWORD PTR [rip+0x24d1f]        # 0x14005418c
   14002f46d:	mov    r8d,edx
   14002f470:	mulsd  xmm1,xmm6
   14002f474:	sub    r8d,DWORD PTR [rip+0x24d0d]        # 0x140054188
   14002f47b:	add    r9d,0xffffffef
   14002f47f:	cvtdq2pd xmm0,xmm0
   14002f483:	addsd  xmm1,xmm0
   14002f487:	sub    r8d,0x13
   14002f48b:	sub    edx,DWORD PTR [rip+0x24cef]        # 0x140054180
   14002f491:	movd   xmm0,DWORD PTR [rsp+0xc0]
   14002f49a:	subsd  xmm1,QWORD PTR [rip+0x12ad6]        # 0x140041f78
   14002f4a2:	cvtdq2pd xmm0,xmm0
   14002f4a6:	lea    r11d,[rdx-0x11]
   14002f4aa:	mulsd  xmm0,xmm6
   14002f4ae:	cvttsd2si eax,xmm1
   14002f4b2:	movd   xmm1,edx
   14002f4b6:	cvtdq2pd xmm1,xmm1
   14002f4ba:	subsd  xmm1,xmm0
   14002f4be:	jmp    0x14002f52c
   14002f4c0:	mov    ecx,DWORD PTR [rip+0x24cba]        # 0x140054180
   14002f4c6:	mov    edx,DWORD PTR [rip+0x24cb8]        # 0x140054184
   14002f4cc:	movd   xmm1,DWORD PTR [rsp+0xc0]
   14002f4d5:	mov    r9d,DWORD PTR [rip+0x24cac]        # 0x140054188
   14002f4dc:	mov    r11d,DWORD PTR [rip+0x24ca9]        # 0x14005418c
   14002f4e3:	movd   xmm0,ecx
   14002f4e7:	cvtdq2pd xmm1,xmm1
   14002f4eb:	mulsd  xmm1,xmm6
   14002f4ef:	add    r9d,0xffffffef
   14002f4f3:	lea    r8d,[rdx-0x13]
   14002f4f7:	cvtdq2pd xmm0,xmm0
   14002f4fb:	addsd  xmm1,xmm0
   14002f4ff:	add    r11d,0xffffffef
   14002f503:	movd   xmm0,edx
   14002f507:	subsd  xmm1,QWORD PTR [rip+0x12a69]        # 0x140041f78
   14002f50f:	cvttsd2si eax,xmm1
   14002f513:	cvtdq2pd xmm0,xmm0
   14002f517:	movd   xmm1,DWORD PTR [rsp+0xc4]
   14002f520:	cvtdq2pd xmm1,xmm1
   14002f524:	mulsd  xmm1,xmm6
   14002f528:	addsd  xmm1,xmm0
   14002f52c:	movsd  xmm2,QWORD PTR [rip+0x12a3c]        # 0x140041f70
   14002f534:	subsd  xmm1,QWORD PTR [rip+0x12a3c]        # 0x140041f78
   14002f53c:	lea    r10d,[rcx-0x13]
   14002f540:	movd   xmm0,r11d
   14002f545:	mov    DWORD PTR [rip+0x24c2d],eax        # 0x140054178
   14002f54b:	cvtdq2pd xmm0,xmm0
   14002f54f:	cvttsd2si eax,xmm1
   14002f553:	movd   xmm1,r8d
   14002f558:	mulsd  xmm0,xmm2
   14002f55c:	mov    DWORD PTR [rip+0x24c1a],eax        # 0x14005417c
   14002f562:	mov    rax,QWORD PTR [rip+0x22ae7]        # 0x140052050
   14002f569:	mov    QWORD PTR [rsp+0x30],rax
   14002f56e:	cvttsd2si edx,xmm0
   14002f572:	cvtdq2pd xmm1,xmm1
   14002f576:	movd   xmm0,r9d
   14002f57b:	mulsd  xmm1,xmm2
   14002f57f:	mov    DWORD PTR [rsp+0x28],edx
   14002f583:	lea    rdx,[rip+0x127ce]        # 0x140041d58
   14002f58a:	cvtdq2pd xmm0,xmm0
   14002f58e:	cvttsd2si r9d,xmm1
   14002f593:	mulsd  xmm0,xmm2
   14002f597:	cvttsd2si ecx,xmm0
   14002f59b:	movd   xmm0,r10d
   14002f5a0:	cvtdq2pd xmm0,xmm0
   14002f5a4:	mov    DWORD PTR [rsp+0x20],ecx
   14002f5a8:	lea    rcx,[rsp+0x40]
   14002f5ad:	mulsd  xmm0,xmm2
   14002f5b1:	cvttsd2si r8d,xmm0
   14002f5b6:	call   QWORD PTR [rip+0xdaf4]        # 0x14003d0b0
   14002f5bc:	movaps xmm1,xmm6
   14002f5bf:	movaps xmm0,xmm6
   14002f5c2:	call   0x140030700
   14002f5c7:	lea    r11,[rsp+0x90]
   14002f5cf:	mov    rbx,QWORD PTR [r11+0x10]
   14002f5d3:	mov    rsi,QWORD PTR [r11+0x20]
   14002f5d7:	movaps xmm6,XMMWORD PTR [r11-0x10]
   14002f5dc:	mov    rsp,r11
   14002f5df:	pop    rdi
   14002f5e0:	ret    
   14002f5e1:	int3   
   14002f5e2:	int3   
   14002f5e3:	int3   
   14002f5e4:	int3   
   14002f5e5:	int3   
   14002f5e6:	int3   
   14002f5e7:	int3   
   14002f5e8:	int3   
   14002f5e9:	int3   
   14002f5ea:	int3   
   14002f5eb:	int3   
   14002f5ec:	int3   
   14002f5ed:	int3   
   14002f5ee:	int3   
   14002f5ef:	int3   
   14002f5f0:	mov    QWORD PTR [rsp+0x8],rbx
   14002f5f5:	push   rdi
   14002f5f6:	sub    rsp,0x40
   14002f5fa:	mov    r8,QWORD PTR [rip+0x22a4f]        # 0x140052050
   14002f601:	lea    rdx,[rip+0x12768]        # 0x140041d70
   14002f608:	lea    rcx,[rsp+0x20]
   14002f60d:	mov    r9,r8
   14002f610:	call   QWORD PTR [rip+0xda9a]        # 0x14003d0b0
   14002f616:	cmp    BYTE PTR [rsp+0x20],0x0
   14002f61b:	lea    rbx,[rsp+0x20]
   14002f620:	je     0x14002f62a
   14002f622:	inc    rbx
   14002f625:	cmp    BYTE PTR [rbx],0x0
   14002f628:	jne    0x14002f622
   14002f62a:	mov    ecx,DWORD PTR [rip+0x24b6c]        # 0x14005419c
   14002f630:	lea    rax,[rsp+0x20]
   14002f635:	mov    edi,ebx
   14002f637:	sub    edi,eax
   14002f639:	add    ecx,edi
   14002f63b:	cmp    ecx,0x50
   14002f63e:	jle    0x14002f65e
   14002f640:	mov    rdx,QWORD PTR [rip+0x25ea9]        # 0x1400554f0
   14002f647:	lea    rcx,[rip+0xe52a]        # 0x14003db78
   14002f64e:	call   QWORD PTR [rip+0xdaec]        # 0x14003d140
   14002f654:	mov    DWORD PTR [rip+0x24b3e],0x0        # 0x14005419c
   14002f65e:	mov    rdx,QWORD PTR [rip+0x25e8b]        # 0x1400554f0
   14002f665:	lea    rcx,[rsp+0x20]
   14002f66a:	call   QWORD PTR [rip+0xdad0]        # 0x14003d140
   14002f670:	test   edi,edi
   14002f672:	jle    0x14002f686
   14002f674:	cmp    BYTE PTR [rbx-0x1],0xa
   14002f678:	jne    0x14002f686
   14002f67a:	mov    DWORD PTR [rip+0x24b18],0x0        # 0x14005419c
   14002f684:	jmp    0x14002f68c
   14002f686:	add    DWORD PTR [rip+0x24b10],edi        # 0x14005419c
   14002f68c:	mov    rcx,QWORD PTR [rip+0x24b15]        # 0x1400541a8
   14002f693:	call   0x140030d70
   14002f698:	call   0x140030610
   14002f69d:	mov    rbx,QWORD PTR [rsp+0x50]
   14002f6a2:	add    rsp,0x40
   14002f6a6:	pop    rdi
   14002f6a7:	ret    
   14002f6a8:	int3   
   14002f6a9:	int3   
   14002f6aa:	int3   
   14002f6ab:	int3   
   14002f6ac:	int3   
   14002f6ad:	int3   
   14002f6ae:	int3   
   14002f6af:	int3   
   14002f6b0:	ret    0x0
   14002f6b3:	int3   
   14002f6b4:	int3   
   14002f6b5:	int3   
   14002f6b6:	int3   
   14002f6b7:	int3   
   14002f6b8:	int3   
   14002f6b9:	int3   
   14002f6ba:	int3   
   14002f6bb:	int3   
   14002f6bc:	int3   
   14002f6bd:	int3   
   14002f6be:	int3   
   14002f6bf:	int3   
   14002f6c0:	ret    0x0
   14002f6c3:	int3   
   14002f6c4:	int3   
   14002f6c5:	int3   
   14002f6c6:	int3   
   14002f6c7:	int3   
   14002f6c8:	int3   
   14002f6c9:	int3   
   14002f6ca:	int3   
   14002f6cb:	int3   
   14002f6cc:	int3   
   14002f6cd:	int3   
   14002f6ce:	int3   
   14002f6cf:	int3   
   14002f6d0:	ret    0x0
   14002f6d3:	int3   
   14002f6d4:	int3   
   14002f6d5:	int3   
   14002f6d6:	int3   
   14002f6d7:	int3   
   14002f6d8:	int3   
   14002f6d9:	int3   
   14002f6da:	int3   
   14002f6db:	int3   
   14002f6dc:	int3   
   14002f6dd:	int3   
   14002f6de:	int3   
   14002f6df:	int3   
   14002f6e0:	ret    0x0
   14002f6e3:	int3   
   14002f6e4:	int3   
   14002f6e5:	int3   
   14002f6e6:	int3   
   14002f6e7:	int3   
   14002f6e8:	int3   
   14002f6e9:	int3   
   14002f6ea:	int3   
   14002f6eb:	int3   
   14002f6ec:	int3   
   14002f6ed:	int3   
   14002f6ee:	int3   
   14002f6ef:	int3   
   14002f6f0:	ret    0x0
   14002f6f3:	int3   
   14002f6f4:	int3   
   14002f6f5:	int3   
   14002f6f6:	int3   
   14002f6f7:	int3   
   14002f6f8:	int3   
   14002f6f9:	int3   
   14002f6fa:	int3   
   14002f6fb:	int3   
   14002f6fc:	int3   
   14002f6fd:	int3   
   14002f6fe:	int3   
   14002f6ff:	int3   
   14002f700:	ret    0x0
   14002f703:	int3   
   14002f704:	int3   
   14002f705:	int3   
   14002f706:	int3   
   14002f707:	int3   
   14002f708:	int3   
   14002f709:	int3   
   14002f70a:	int3   
   14002f70b:	int3   
   14002f70c:	int3   
   14002f70d:	int3   
   14002f70e:	int3   
   14002f70f:	int3   
   14002f710:	ret    0x0
   14002f713:	int3   
   14002f714:	int3   
   14002f715:	int3   
   14002f716:	int3   
   14002f717:	int3   
   14002f718:	int3   
   14002f719:	int3   
   14002f71a:	int3   
   14002f71b:	int3   
   14002f71c:	int3   
   14002f71d:	int3   
   14002f71e:	int3   
   14002f71f:	int3   
   14002f720:	ret    0x0
   14002f723:	int3   
   14002f724:	int3   
   14002f725:	int3   
   14002f726:	int3   
   14002f727:	int3   
   14002f728:	int3   
   14002f729:	int3   
   14002f72a:	int3   
   14002f72b:	int3   
   14002f72c:	int3   
   14002f72d:	int3   
   14002f72e:	int3   
   14002f72f:	int3   
   14002f730:	ret    0x0
   14002f733:	int3   
   14002f734:	int3   
   14002f735:	int3   
   14002f736:	int3   
   14002f737:	int3   
   14002f738:	int3   
   14002f739:	int3   
   14002f73a:	int3   
   14002f73b:	int3   
   14002f73c:	int3   
   14002f73d:	int3   
   14002f73e:	int3   
   14002f73f:	int3   
   14002f740:	ret    0x0
   14002f743:	int3   
   14002f744:	int3   
   14002f745:	int3   
   14002f746:	int3   
   14002f747:	int3   
   14002f748:	int3   
   14002f749:	int3   
   14002f74a:	int3   
   14002f74b:	int3   
   14002f74c:	int3   
   14002f74d:	int3   
   14002f74e:	int3   
   14002f74f:	int3   
   14002f750:	sub    rsp,0x28
   14002f754:	mov    rcx,QWORD PTR [rip+0x24aa5]        # 0x140054200
   14002f75b:	call   0x140030b20
   14002f760:	mov    rcx,QWORD PTR [rip+0x24a99]        # 0x140054200
   14002f767:	mov    QWORD PTR [rax+0x30],rcx
   14002f76b:	mov    QWORD PTR [rip+0x24a8e],rax        # 0x140054200
   14002f772:	add    rsp,0x28
   14002f776:	ret    
   14002f777:	int3   
   14002f778:	int3   
   14002f779:	int3   
   14002f77a:	int3   
   14002f77b:	int3   
   14002f77c:	int3   
   14002f77d:	int3   
   14002f77e:	int3   
   14002f77f:	int3   
   14002f780:	jmp    0x140030f00
   14002f785:	int3   
   14002f786:	int3   
   14002f787:	int3   
   14002f788:	int3   
   14002f789:	int3   
   14002f78a:	int3   
   14002f78b:	int3   
   14002f78c:	int3   
   14002f78d:	int3   
   14002f78e:	int3   
   14002f78f:	int3   
   14002f790:	sub    rsp,0x58
   14002f794:	lea    r8,[rsp+0x20]
   14002f799:	movaps XMMWORD PTR [rsp+0x40],xmm6
   14002f79e:	movaps xmm6,xmm1
   14002f7a1:	call   0x140030c20
   14002f7a6:	lea    rcx,[rsp+0x20]
   14002f7ab:	call   0x140030fe0
   14002f7b0:	movsd  QWORD PTR [rip+0x249b8],xmm6        # 0x140054170
   14002f7b8:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   14002f7bd:	add    rsp,0x58
   14002f7c1:	ret    
   14002f7c2:	int3   
   14002f7c3:	int3   
   14002f7c4:	int3   
   14002f7c5:	int3   
   14002f7c6:	int3   
   14002f7c7:	int3   
   14002f7c8:	int3   
   14002f7c9:	int3   
   14002f7ca:	int3   
   14002f7cb:	int3   
   14002f7cc:	int3   
   14002f7cd:	int3   
   14002f7ce:	int3   
   14002f7cf:	int3   
   14002f7d0:	sub    rsp,0x48
   14002f7d4:	lea    rdx,[rsp+0x20]
   14002f7d9:	mov    r8d,0x1
   14002f7df:	call   0x140026220
   14002f7e4:	lea    rcx,[rsp+0x20]
   14002f7e9:	call   0x140031280
   14002f7ee:	add    rsp,0x48
   14002f7f2:	ret    
   14002f7f3:	int3   
   14002f7f4:	int3   
   14002f7f5:	int3   
   14002f7f6:	int3   
   14002f7f7:	int3   
   14002f7f8:	int3   
   14002f7f9:	int3   
   14002f7fa:	int3   
   14002f7fb:	int3   
   14002f7fc:	int3   
   14002f7fd:	int3   
   14002f7fe:	int3   
   14002f7ff:	int3   
   14002f800:	rex push rbx
   14002f802:	push   rsi
   14002f803:	sub    rsp,0x38
   14002f807:	mov    rbx,QWORD PTR [rcx]
   14002f80a:	mov    rsi,rcx
   14002f80d:	test   rbx,rbx
   14002f810:	je     0x14002fa4d
   14002f816:	mov    QWORD PTR [rsp+0x58],rbp
   14002f81b:	mov    QWORD PTR [rsp+0x68],r12
   14002f820:	mov    QWORD PTR [rsp+0x30],r13
   14002f825:	mov    QWORD PTR [rsp+0x28],r14
   14002f82a:	mov    QWORD PTR [rsp+0x20],r15
   14002f82f:	xor    ebp,ebp
   14002f831:	lea    r15,[rip+0x12548]        # 0x140041d80
   14002f838:	mov    QWORD PTR [rsp+0x60],rdi
   14002f83d:	lea    r14,[rip+0xecb8]        # 0x14003e4fc
   14002f844:	lea    r12,[rip+0x1253d]        # 0x140041d88
   14002f84b:	lea    r13,[rip+0xf1e2]        # 0x14003ea34
   14002f852:	lea    rdx,[rip+0x12537]        # 0x140041d90
   14002f859:	lea    r8,[rip+0xf1c0]        # 0x14003ea20
   14002f860:	lea    rsi,[rsi+0x8]
   14002f864:	mov    rcx,rbp
   14002f867:	nop    WORD PTR [rax+rax*1+0x0]
   14002f870:	movzx  eax,BYTE PTR [rbx+rcx*1]
   14002f874:	inc    rcx
   14002f877:	cmp    al,BYTE PTR [r14+rcx*1-0x1]
   14002f87c:	jne    0x14002f890
   14002f87e:	cmp    rcx,0x6
   14002f882:	jne    0x14002f870
   14002f884:	xor    ecx,ecx
   14002f886:	call   0x140031500
   14002f88b:	jmp    0x14002fa15
   14002f890:	mov    rcx,rbp
   14002f893:	movzx  eax,BYTE PTR [rbx+rcx*1]
   14002f897:	inc    rcx
   14002f89a:	cmp    al,BYTE PTR [r15+rcx*1-0x1]
   14002f89f:	jne    0x14002f94f
   14002f8a5:	cmp    rcx,0x7
   14002f8a9:	jne    0x14002f893
   14002f8ab:	mov    rax,QWORD PTR [rip+0x2494e]        # 0x140054200
   14002f8b2:	mov    r9,QWORD PTR [rip+0x22797]        # 0x140052050
   14002f8b9:	lea    r8,[rip+0x1241c]        # 0x140041cdc
   14002f8c0:	lea    rdx,[rip+0x12419]        # 0x140041ce0
   14002f8c7:	lea    rcx,[rsp+0x50]
   14002f8cc:	mov    DWORD PTR [rax+0x4],0x2
   14002f8d3:	call   QWORD PTR [rip+0xd7d7]        # 0x14003d0b0
   14002f8d9:	lea    rbx,[rsp+0x50]
   14002f8de:	cmp    BYTE PTR [rsp+0x50],bpl
   14002f8e3:	je     0x14002f8ed
   14002f8e5:	inc    rbx
   14002f8e8:	cmp    BYTE PTR [rbx],bpl
   14002f8eb:	jne    0x14002f8e5
   14002f8ed:	mov    ecx,DWORD PTR [rip+0x248a9]        # 0x14005419c
   14002f8f3:	lea    rax,[rsp+0x50]
   14002f8f8:	mov    edi,ebx
   14002f8fa:	sub    edi,eax
   14002f8fc:	add    ecx,edi
   14002f8fe:	cmp    ecx,0x50
   14002f901:	jle    0x14002f91d
   14002f903:	mov    rdx,QWORD PTR [rip+0x25be6]        # 0x1400554f0
   14002f90a:	lea    rcx,[rip+0xe267]        # 0x14003db78
   14002f911:	call   QWORD PTR [rip+0xd829]        # 0x14003d140
   14002f917:	mov    DWORD PTR [rip+0x2487f],ebp        # 0x14005419c
   14002f91d:	mov    rdx,QWORD PTR [rip+0x25bcc]        # 0x1400554f0
   14002f924:	lea    rcx,[rsp+0x50]
   14002f929:	call   QWORD PTR [rip+0xd811]        # 0x14003d140
   14002f92f:	test   edi,edi
   14002f931:	jle    0x14002f944
   14002f933:	cmp    BYTE PTR [rbx-0x1],0xa
   14002f937:	jne    0x14002f944
   14002f939:	mov    DWORD PTR [rip+0x2485d],ebp        # 0x14005419c
   14002f93f:	jmp    0x14002fa15
   14002f944:	add    DWORD PTR [rip+0x24852],edi        # 0x14005419c
   14002f94a:	jmp    0x14002fa15
   14002f94f:	mov    rcx,rbp
   14002f952:	movzx  eax,BYTE PTR [rbx+rcx*1]
   14002f956:	inc    rcx
   14002f959:	cmp    al,BYTE PTR [r12+rcx*1-0x1]
   14002f95e:	jne    0x14002f975
   14002f960:	cmp    rcx,0x7
   14002f964:	jne    0x14002f952
   14002f966:	mov    ecx,0x1
   14002f96b:	call   0x140031500
   14002f970:	jmp    0x14002fa15
   14002f975:	mov    rcx,rbp
   14002f978:	nop    DWORD PTR [rax+rax*1+0x0]
   14002f980:	movzx  eax,BYTE PTR [rbx+rcx*1]
   14002f984:	inc    rcx
   14002f987:	cmp    al,BYTE PTR [r13+rcx*1-0x1]
   14002f98c:	jne    0x14002f9a7
   14002f98e:	cmp    rcx,0x6
   14002f992:	jne    0x14002f980
   14002f994:	mov    rax,QWORD PTR [rip+0x24865]        # 0x140054200
   14002f99b:	mov    DWORD PTR [rax+0x4],0x3
   14002f9a2:	jmp    0x14002fa23
   14002f9a7:	mov    rcx,rbp
   14002f9aa:	nop    WORD PTR [rax+rax*1+0x0]
   14002f9b0:	movzx  eax,BYTE PTR [rbx+rcx*1]
   14002f9b4:	inc    rcx
   14002f9b7:	cmp    al,BYTE PTR [rdx+rcx*1-0x1]
   14002f9bb:	jne    0x14002f9cf
   14002f9bd:	cmp    rcx,0x5
   14002f9c1:	jne    0x14002f9b0
   14002f9c3:	mov    ecx,0x1
   14002f9c8:	call   0x140031410
   14002f9cd:	jmp    0x14002fa15
   14002f9cf:	mov    rcx,rbp
   14002f9d2:	movzx  eax,BYTE PTR [rbx+rcx*1]
   14002f9d6:	inc    rcx
   14002f9d9:	cmp    al,BYTE PTR [r8+rcx*1-0x1]
   14002f9de:	jne    0x14002f9e8
   14002f9e0:	cmp    rcx,0x7
   14002f9e4:	jne    0x14002f9d2
   14002f9e6:	jmp    0x14002fa23
   14002f9e8:	lea    rdx,[rip+0x123a9]        # 0x140041d98
   14002f9ef:	mov    rcx,rbx
   14002f9f2:	call   0x14003bc96
   14002f9f7:	test   eax,eax
   14002f9f9:	je     0x14002fa15
   14002f9fb:	call   QWORD PTR [rip+0xd8cf]        # 0x14003d2d0
   14002fa01:	lea    rdx,[rip+0x123a0]        # 0x140041da8
   14002fa08:	mov    r8,rbx
   14002fa0b:	lea    rcx,[rax+0x60]
   14002fa0f:	call   QWORD PTR [rip+0xd8ab]        # 0x14003d2c0
   14002fa15:	lea    rdx,[rip+0x12374]        # 0x140041d90
   14002fa1c:	lea    r8,[rip+0xeffd]        # 0x14003ea20
   14002fa23:	mov    rbx,QWORD PTR [rsi]
   14002fa26:	test   rbx,rbx
   14002fa29:	jne    0x14002f860
   14002fa2f:	mov    r15,QWORD PTR [rsp+0x20]
   14002fa34:	mov    r14,QWORD PTR [rsp+0x28]
   14002fa39:	mov    r13,QWORD PTR [rsp+0x30]
   14002fa3e:	mov    r12,QWORD PTR [rsp+0x68]
   14002fa43:	mov    rdi,QWORD PTR [rsp+0x60]
   14002fa48:	mov    rbp,QWORD PTR [rsp+0x58]
   14002fa4d:	add    rsp,0x38
   14002fa51:	pop    rsi
   14002fa52:	pop    rbx
   14002fa53:	ret    
   14002fa54:	int3   
   14002fa55:	int3   
   14002fa56:	int3   
   14002fa57:	int3   
   14002fa58:	int3   
   14002fa59:	int3   
   14002fa5a:	int3   
   14002fa5b:	int3   
   14002fa5c:	int3   
   14002fa5d:	int3   
   14002fa5e:	int3   
   14002fa5f:	int3   
   14002fa60:	rex push rbx
   14002fa62:	sub    rsp,0xb0
   14002fa69:	mov    rax,QWORD PTR [rip+0x24790]        # 0x140054200
   14002fa70:	mov    rbx,QWORD PTR [rdx]
   14002fa73:	cmp    DWORD PTR [rax+0x4],0x3
   14002fa77:	je     0x14002fad4
   14002fa79:	movsd  xmm0,QWORD PTR [rip+0x246ef]        # 0x140054170
   14002fa81:	mov    rax,rcx
   14002fa84:	mov    r8d,ecx
   14002fa87:	shr    rax,0x20
   14002fa8b:	lea    rdx,[rip+0x1234e]        # 0x140041de0
   14002fa92:	lea    rcx,[rsp+0x30]
   14002fa97:	mulsd  xmm0,QWORD PTR [rip+0x124c9]        # 0x140041f68
   14002fa9f:	movd   xmm1,eax
   14002faa3:	mov    rax,QWORD PTR [rip+0x225a6]        # 0x140052050
   14002faaa:	mov    QWORD PTR [rsp+0x20],rax
   14002faaf:	cvtdq2pd xmm1,xmm1
   14002fab3:	subsd  xmm1,xmm0
   14002fab7:	cvttsd2si r9d,xmm1
   14002fabc:	call   QWORD PTR [rip+0xd5ee]        # 0x14003d0b0
   14002fac2:	lea    rcx,[rsp+0x30]
   14002fac7:	call   0x140030d70
   14002facc:	mov    rcx,rbx
   14002facf:	call   0x140030e20
   14002fad4:	add    rsp,0xb0
   14002fadb:	pop    rbx
   14002fadc:	ret    
   14002fadd:	int3   
   14002fade:	int3   
   14002fadf:	int3   
   14002fae0:	mov    QWORD PTR [rsp+0x8],rbx
   14002fae5:	push   rdi
   14002fae6:	sub    rsp,0x80
   14002faed:	movsxd rdi,edx
   14002faf0:	mov    rbx,rcx
   14002faf3:	test   r8d,r8d
   14002faf6:	jne    0x14002fafd
   14002faf8:	test   r9d,r9d
   14002fafb:	je     0x14002fb14
   14002fafd:	call   QWORD PTR [rip+0xd7cd]        # 0x14003d2d0
   14002fb03:	lea    rdx,[rip+0x122ee]        # 0x140041df8
   14002fb0a:	lea    rcx,[rax+0x60]
   14002fb0e:	call   QWORD PTR [rip+0xd7ac]        # 0x14003d2c0
   14002fb14:	mov    rax,QWORD PTR [rip+0x246e5]        # 0x140054200
   14002fb1b:	cmp    DWORD PTR [rax+0x4],0x3
   14002fb1f:	je     0x14002fcb9
   14002fb25:	mov    rax,QWORD PTR [rip+0x22524]        # 0x140052050
   14002fb2c:	mov    r9d,DWORD PTR [rbx+0x4]
   14002fb30:	mov    r8d,DWORD PTR [rbx]
   14002fb33:	lea    rdx,[rip+0x122de]        # 0x140041e18
   14002fb3a:	lea    rcx,[rsp+0x40]
   14002fb3f:	mov    QWORD PTR [rsp+0x20],rax
   14002fb44:	call   QWORD PTR [rip+0xd566]        # 0x14003d0b0
   14002fb4a:	lea    rcx,[rsp+0x40]
   14002fb4f:	call   0x140030d70
   14002fb54:	mov    DWORD PTR [rip+0x246aa],0x1        # 0x140054208
   14002fb5e:	mov    rcx,rdi
   14002fb61:	cmp    rdi,0x1
   14002fb65:	jle    0x14002fc17
   14002fb6b:	add    rcx,0xfffffffffffffffe
   14002fb6f:	movabs rax,0xaaaaaaaaaaaaaaab
   14002fb79:	movaps XMMWORD PTR [rsp+0x70],xmm6
   14002fb7e:	add    rbx,0x14
   14002fb82:	movaps XMMWORD PTR [rsp+0x60],xmm7
   14002fb87:	mul    rcx
   14002fb8a:	mov    rdi,rdx
   14002fb8d:	shr    rdi,1
   14002fb90:	inc    rdi
   14002fb93:	nop    DWORD PTR [rax+0x0]
   14002fb97:	nop    WORD PTR [rax+rax*1+0x0]
   14002fba0:	movd   xmm4,DWORD PTR [rbx+0x8]
   14002fba5:	movd   xmm5,DWORD PTR [rbx+0x4]
   14002fbaa:	movd   xmm6,DWORD PTR [rbx]
   14002fbae:	cvtdq2pd xmm4,xmm4
   14002fbb2:	cvtdq2pd xmm5,xmm5
   14002fbb6:	cvtdq2pd xmm6,xmm6
   14002fbba:	movd   xmm7,DWORD PTR [rbx-0x4]
   14002fbbf:	movd   xmm3,DWORD PTR [rbx-0x8]
   14002fbc4:	movd   xmm2,DWORD PTR [rbx-0xc]
   14002fbc9:	movsd  QWORD PTR [rsp+0x38],xmm4
   14002fbcf:	movsd  QWORD PTR [rsp+0x30],xmm5
   14002fbd5:	cvtdq2pd xmm7,xmm7
   14002fbd9:	movd   xmm1,DWORD PTR [rbx-0x10]
   14002fbde:	movd   xmm0,DWORD PTR [rbx-0x14]
   14002fbe3:	cvtdq2pd xmm3,xmm3
   14002fbe7:	cvtdq2pd xmm2,xmm2
   14002fbeb:	cvtdq2pd xmm1,xmm1
   14002fbef:	cvtdq2pd xmm0,xmm0
   14002fbf3:	movsd  QWORD PTR [rsp+0x28],xmm6
   14002fbf9:	movsd  QWORD PTR [rsp+0x20],xmm7
   14002fbff:	call   0x140030330
   14002fc04:	lea    rbx,[rbx+0x18]
   14002fc08:	dec    rdi
   14002fc0b:	jne    0x14002fba0
   14002fc0d:	movaps xmm7,XMMWORD PTR [rsp+0x60]
   14002fc12:	movaps xmm6,XMMWORD PTR [rsp+0x70]
   14002fc17:	mov    r8,QWORD PTR [rip+0x22432]        # 0x140052050
   14002fc1e:	lea    rdx,[rip+0x12203]        # 0x140041e28
   14002fc25:	lea    rcx,[rsp+0x40]
   14002fc2a:	mov    r9,r8
   14002fc2d:	call   QWORD PTR [rip+0xd47d]        # 0x14003d0b0
   14002fc33:	cmp    BYTE PTR [rsp+0x40],0x0
   14002fc38:	lea    rbx,[rsp+0x40]
   14002fc3d:	je     0x14002fc48
   14002fc3f:	nop
   14002fc40:	inc    rbx
   14002fc43:	cmp    BYTE PTR [rbx],0x0
   14002fc46:	jne    0x14002fc40
   14002fc48:	mov    ecx,DWORD PTR [rip+0x2454e]        # 0x14005419c
   14002fc4e:	lea    rax,[rsp+0x40]
   14002fc53:	mov    edi,ebx
   14002fc55:	sub    edi,eax
   14002fc57:	add    ecx,edi
   14002fc59:	cmp    ecx,0x50
   14002fc5c:	jle    0x14002fc7c
   14002fc5e:	mov    rdx,QWORD PTR [rip+0x2588b]        # 0x1400554f0
   14002fc65:	lea    rcx,[rip+0xdf0c]        # 0x14003db78
   14002fc6c:	call   QWORD PTR [rip+0xd4ce]        # 0x14003d140
   14002fc72:	mov    DWORD PTR [rip+0x24520],0x0        # 0x14005419c
   14002fc7c:	mov    rdx,QWORD PTR [rip+0x2586d]        # 0x1400554f0
   14002fc83:	lea    rcx,[rsp+0x40]
   14002fc88:	call   QWORD PTR [rip+0xd4b2]        # 0x14003d140
   14002fc8e:	test   edi,edi
   14002fc90:	jle    0x14002fcb3
   14002fc92:	cmp    BYTE PTR [rbx-0x1],0xa
   14002fc96:	jne    0x14002fcb3
   14002fc98:	mov    DWORD PTR [rip+0x244fa],0x0        # 0x14005419c
   14002fca2:	mov    rbx,QWORD PTR [rsp+0x90]
   14002fcaa:	add    rsp,0x80
   14002fcb1:	pop    rdi
   14002fcb2:	ret    
   14002fcb3:	add    DWORD PTR [rip+0x244e3],edi        # 0x14005419c
   14002fcb9:	mov    rbx,QWORD PTR [rsp+0x90]
   14002fcc1:	add    rsp,0x80
   14002fcc8:	pop    rdi
   14002fcc9:	ret    
   14002fcca:	int3   
   14002fccb:	int3   
   14002fccc:	int3   
   14002fccd:	int3   
   14002fcce:	int3   
   14002fccf:	int3   
   14002fcd0:	mov    r11,rsp
   14002fcd3:	push   r12
   14002fcd5:	push   r14
   14002fcd7:	push   r15
   14002fcd9:	sub    rsp,0xa0
   14002fce0:	mov    rax,QWORD PTR [rip+0x24519]        # 0x140054200
   14002fce7:	mov    r12d,r8d
   14002fcea:	movsxd r15,edx
   14002fced:	cmp    DWORD PTR [rax+0x4],0x3
   14002fcf1:	mov    r14,rcx
   14002fcf4:	je     0x14002ffac
   14002fcfa:	mov    rax,QWORD PTR [rip+0x2234f]        # 0x140052050
   14002fd01:	mov    r9d,DWORD PTR [rcx+0x4]
   14002fd05:	mov    r8d,DWORD PTR [rcx]
   14002fd08:	mov    QWORD PTR [r11+0x8],rbx
   14002fd0c:	mov    QWORD PTR [r11+0x10],rbp
   14002fd10:	mov    QWORD PTR [r11+0x18],rsi
   14002fd14:	mov    QWORD PTR [rsp+0x28],rax
   14002fd19:	mov    QWORD PTR [r11-0x20],rdi
   14002fd1d:	lea    rdx,[rip+0x1210c]        # 0x140041e30
   14002fd24:	lea    rcx,[r11-0x68]
   14002fd28:	mov    QWORD PTR [rsp+0x20],rax
   14002fd2d:	mov    QWORD PTR [r11-0x28],r13
   14002fd31:	call   QWORD PTR [rip+0xd379]        # 0x14003d0b0
   14002fd37:	lea    rcx,[rsp+0x50]
   14002fd3c:	call   0x140030d70
   14002fd41:	lea    eax,[r15-0x1]
   14002fd45:	mov    esi,0x1
   14002fd4a:	movsxd rbp,eax
   14002fd4d:	xor    r13d,r13d
   14002fd50:	cmp    rsi,rbp
   14002fd53:	jge    0x14002fdf7
   14002fd59:	nop    DWORD PTR [rax+0x0]
   14002fd60:	mov    r9d,DWORD PTR [r14+rsi*8+0x4]
   14002fd65:	mov    r8d,DWORD PTR [r14+rsi*8]
   14002fd69:	lea    rdx,[rip+0x120d4]        # 0x140041e44
   14002fd70:	lea    rcx,[rsp+0x50]
   14002fd75:	call   QWORD PTR [rip+0xd335]        # 0x14003d0b0
   14002fd7b:	lea    rbx,[rsp+0x50]
   14002fd80:	cmp    BYTE PTR [rsp+0x50],r13b
   14002fd85:	je     0x14002fd8f
   14002fd87:	inc    rbx
   14002fd8a:	cmp    BYTE PTR [rbx],r13b
   14002fd8d:	jne    0x14002fd87
   14002fd8f:	mov    ecx,DWORD PTR [rip+0x24407]        # 0x14005419c
   14002fd95:	lea    rax,[rsp+0x50]
   14002fd9a:	mov    edi,ebx
   14002fd9c:	sub    edi,eax
   14002fd9e:	add    ecx,edi
   14002fda0:	cmp    ecx,0x50
   14002fda3:	jle    0x14002fdc0
   14002fda5:	mov    rdx,QWORD PTR [rip+0x25744]        # 0x1400554f0
   14002fdac:	lea    rcx,[rip+0xddc5]        # 0x14003db78
   14002fdb3:	call   QWORD PTR [rip+0xd387]        # 0x14003d140
   14002fdb9:	mov    DWORD PTR [rip+0x243dc],r13d        # 0x14005419c
   14002fdc0:	mov    rdx,QWORD PTR [rip+0x25729]        # 0x1400554f0
   14002fdc7:	lea    rcx,[rsp+0x50]
   14002fdcc:	call   QWORD PTR [rip+0xd36e]        # 0x14003d140
   14002fdd2:	test   edi,edi
   14002fdd4:	jle    0x14002fde5
   14002fdd6:	cmp    BYTE PTR [rbx-0x1],0xa
   14002fdda:	jne    0x14002fde5
   14002fddc:	mov    DWORD PTR [rip+0x243b9],r13d        # 0x14005419c
   14002fde3:	jmp    0x14002fdeb
   14002fde5:	add    DWORD PTR [rip+0x243b1],edi        # 0x14005419c
   14002fdeb:	inc    rsi
   14002fdee:	cmp    rsi,rbp
   14002fdf1:	jl     0x14002fd60
   14002fdf7:	mov    rax,QWORD PTR [rip+0x22252]        # 0x140052050
   14002fdfe:	mov    r9d,DWORD PTR [r14+r15*8-0x4]
   14002fe03:	mov    r8d,DWORD PTR [r14+r15*8-0x8]
   14002fe08:	lea    rcx,[r14+r15*8]
   14002fe0c:	mov    QWORD PTR [rsp+0x30],rax
   14002fe11:	mov    QWORD PTR [rsp+0x28],rax
   14002fe16:	lea    rcx,[rsp+0x50]
   14002fe1b:	lea    rdx,[rip+0x1202e]        # 0x140041e50
   14002fe22:	mov    QWORD PTR [rsp+0x20],rax
   14002fe27:	call   QWORD PTR [rip+0xd283]        # 0x14003d0b0
   14002fe2d:	mov    rsi,QWORD PTR [rsp+0xd0]
   14002fe35:	mov    rbp,QWORD PTR [rsp+0xc8]
   14002fe3d:	lea    rbx,[rsp+0x50]
   14002fe42:	cmp    BYTE PTR [rsp+0x50],r13b
   14002fe47:	je     0x14002fe58
   14002fe49:	nop    DWORD PTR [rax+0x0]
   14002fe50:	inc    rbx
   14002fe53:	cmp    BYTE PTR [rbx],r13b
   14002fe56:	jne    0x14002fe50
   14002fe58:	mov    ecx,DWORD PTR [rip+0x2433e]        # 0x14005419c
   14002fe5e:	lea    rax,[rsp+0x50]
   14002fe63:	mov    edi,ebx
   14002fe65:	sub    edi,eax
   14002fe67:	add    ecx,edi
   14002fe69:	cmp    ecx,0x50
   14002fe6c:	jle    0x14002fe89
   14002fe6e:	mov    rdx,QWORD PTR [rip+0x2567b]        # 0x1400554f0
   14002fe75:	lea    rcx,[rip+0xdcfc]        # 0x14003db78
   14002fe7c:	call   QWORD PTR [rip+0xd2be]        # 0x14003d140
   14002fe82:	mov    DWORD PTR [rip+0x24313],r13d        # 0x14005419c
   14002fe89:	mov    rdx,QWORD PTR [rip+0x25660]        # 0x1400554f0
   14002fe90:	lea    rcx,[rsp+0x50]
   14002fe95:	call   QWORD PTR [rip+0xd2a5]        # 0x14003d140
   14002fe9b:	test   edi,edi
   14002fe9d:	jle    0x14002feae
   14002fe9f:	cmp    BYTE PTR [rbx-0x1],0xa
   14002fea3:	jne    0x14002feae
   14002fea5:	mov    DWORD PTR [rip+0x242f0],r13d        # 0x14005419c
   14002feac:	jmp    0x14002feb4
   14002feae:	add    DWORD PTR [rip+0x242e8],edi        # 0x14005419c
   14002feb4:	mov    r8,QWORD PTR [rip+0x22195]        # 0x140052050
   14002febb:	lea    rcx,[rsp+0x50]
   14002fec0:	test   r12d,r12d
   14002fec3:	je     0x14002ff13
   14002fec5:	mov    eax,DWORD PTR [rip+0x242c5]        # 0x140054190
   14002fecb:	mov    r9,r8
   14002fece:	cmp    eax,0x1
   14002fed1:	jne    0x14002feec
   14002fed3:	mov    QWORD PTR [rsp+0x28],r8
   14002fed8:	lea    rdx,[rip+0x11f89]        # 0x140041e68
   14002fedf:	mov    QWORD PTR [rsp+0x20],r8
   14002fee4:	call   QWORD PTR [rip+0xd1c6]        # 0x14003d0b0
   14002feea:	jmp    0x14002ff20
   14002feec:	mov    QWORD PTR [rsp+0x40],r8
   14002fef1:	mov    QWORD PTR [rsp+0x38],r8
   14002fef6:	mov    DWORD PTR [rsp+0x30],eax
   14002fefa:	mov    QWORD PTR [rsp+0x28],r8
   14002feff:	lea    rdx,[rip+0x11f7a]        # 0x140041e80
   14002ff06:	mov    QWORD PTR [rsp+0x20],r8
   14002ff0b:	call   QWORD PTR [rip+0xd19f]        # 0x14003d0b0
   14002ff11:	jmp    0x14002ff20
   14002ff13:	lea    rdx,[rip+0x11f86]        # 0x140041ea0
   14002ff1a:	call   QWORD PTR [rip+0xd190]        # 0x14003d0b0
   14002ff20:	lea    rbx,[rsp+0x50]
   14002ff25:	cmp    BYTE PTR [rsp+0x50],r13b
   14002ff2a:	je     0x14002ff38
   14002ff2c:	nop    DWORD PTR [rax+0x0]
   14002ff30:	inc    rbx
   14002ff33:	cmp    BYTE PTR [rbx],r13b
   14002ff36:	jne    0x14002ff30
   14002ff38:	mov    edx,DWORD PTR [rip+0x2425e]        # 0x14005419c
   14002ff3e:	lea    rax,[rsp+0x50]
   14002ff43:	mov    edi,ebx
   14002ff45:	sub    edi,eax
   14002ff47:	add    edx,edi
   14002ff49:	cmp    edx,0x50
   14002ff4c:	jle    0x14002ff69
   14002ff4e:	mov    rdx,QWORD PTR [rip+0x2559b]        # 0x1400554f0
   14002ff55:	lea    rcx,[rip+0xdc1c]        # 0x14003db78
   14002ff5c:	call   QWORD PTR [rip+0xd1de]        # 0x14003d140
   14002ff62:	mov    DWORD PTR [rip+0x24233],r13d        # 0x14005419c
   14002ff69:	mov    rdx,QWORD PTR [rip+0x25580]        # 0x1400554f0
   14002ff70:	lea    rcx,[rsp+0x50]
   14002ff75:	call   QWORD PTR [rip+0xd1c5]        # 0x14003d140
   14002ff7b:	test   edi,edi
   14002ff7d:	jle    0x14002ff8e
   14002ff7f:	cmp    BYTE PTR [rbx-0x1],0xa
   14002ff83:	jne    0x14002ff8e
   14002ff85:	mov    DWORD PTR [rip+0x24210],r13d        # 0x14005419c
   14002ff8c:	jmp    0x14002ff94
   14002ff8e:	add    DWORD PTR [rip+0x24208],edi        # 0x14005419c
   14002ff94:	mov    rdi,QWORD PTR [rsp+0x98]
   14002ff9c:	mov    rbx,QWORD PTR [rsp+0xc0]
   14002ffa4:	mov    r13,QWORD PTR [rsp+0x90]
   14002ffac:	add    rsp,0xa0
   14002ffb3:	pop    r15
   14002ffb5:	pop    r14
   14002ffb7:	pop    r12
   14002ffb9:	ret    
   14002ffba:	int3   
   14002ffbb:	int3   
   14002ffbc:	int3   
   14002ffbd:	int3   
   14002ffbe:	int3   
   14002ffbf:	int3   
   14002ffc0:	mov    QWORD PTR [rsp+0x8],rbx
   14002ffc5:	mov    QWORD PTR [rsp+0x10],rsi
   14002ffca:	push   rdi
   14002ffcb:	sub    rsp,0xd0
   14002ffd2:	mov    rax,QWORD PTR [rip+0x24227]        # 0x140054200
   14002ffd9:	mov    ebx,r9d
   14002ffdc:	mov    edi,r8d
   14002ffdf:	cmp    DWORD PTR [rax+0x4],0x3
   14002ffe3:	mov    esi,edx
   14002ffe5:	je     0x1400300c7
   14002ffeb:	mov    rax,QWORD PTR [rip+0x2205e]        # 0x140052050
   14002fff2:	mov    r9,rcx
   14002fff5:	mov    r8d,ecx
   14002fff8:	lea    rdx,[rip+0x11de1]        # 0x140041de0
   14002ffff:	lea    rcx,[rsp+0x50]
   140030004:	shr    r9,0x20
   140030008:	mov    QWORD PTR [rsp+0x20],rax
   14003000d:	call   QWORD PTR [rip+0xd09d]        # 0x14003d0b0
   140030013:	lea    rcx,[rsp+0x50]
   140030018:	call   0x140030d70
   14003001d:	movd   xmm1,edi
   140030021:	movd   xmm0,esi
   140030025:	cvtdq2pd xmm1,xmm1
   140030029:	cvtdq2pd xmm0,xmm0
   14003002d:	mulsd  xmm1,QWORD PTR [rip+0x24133]        # 0x140054168
   140030035:	mulsd  xmm0,QWORD PTR [rip+0x2412b]        # 0x140054168
   14003003d:	call   0x140030700
   140030042:	mov    r8,QWORD PTR [rip+0x22007]        # 0x140052050
   140030049:	lea    rcx,[rsp+0x50]
   14003004e:	test   ebx,ebx
   140030050:	je     0x1400300a0
   140030052:	mov    eax,DWORD PTR [rip+0x24138]        # 0x140054190
   140030058:	mov    r9,r8
   14003005b:	cmp    eax,0x1
   14003005e:	jne    0x140030079
   140030060:	mov    QWORD PTR [rsp+0x28],r8
   140030065:	lea    rdx,[rip+0x11e3c]        # 0x140041ea8
   14003006c:	mov    QWORD PTR [rsp+0x20],r8
   140030071:	call   QWORD PTR [rip+0xd039]        # 0x14003d0b0
   140030077:	jmp    0x1400300ad
   140030079:	mov    QWORD PTR [rsp+0x40],r8
   14003007e:	mov    QWORD PTR [rsp+0x38],r8
   140030083:	mov    DWORD PTR [rsp+0x30],eax
   140030087:	mov    QWORD PTR [rsp+0x28],r8
   14003008c:	lea    rdx,[rip+0x11e3d]        # 0x140041ed0
   140030093:	mov    QWORD PTR [rsp+0x20],r8
   140030098:	call   QWORD PTR [rip+0xd012]        # 0x14003d0b0
   14003009e:	jmp    0x1400300ad
   1400300a0:	lea    rdx,[rip+0x11e59]        # 0x140041f00
   1400300a7:	call   QWORD PTR [rip+0xd003]        # 0x14003d0b0
   1400300ad:	lea    rcx,[rsp+0x50]
   1400300b2:	call   0x140030d70
   1400300b7:	movsd  xmm0,QWORD PTR [rip+0x240a9]        # 0x140054168
   1400300bf:	movaps xmm1,xmm0
   1400300c2:	call   0x140030700
   1400300c7:	lea    r11,[rsp+0xd0]
   1400300cf:	mov    rbx,QWORD PTR [r11+0x10]
   1400300d3:	mov    rsi,QWORD PTR [r11+0x18]
   1400300d7:	mov    rsp,r11
   1400300da:	pop    rdi
   1400300db:	ret    
   1400300dc:	int3   
   1400300dd:	int3   
   1400300de:	int3   
   1400300df:	int3   
   1400300e0:	mov    r11,rsp
   1400300e3:	push   r14
   1400300e5:	push   r15
   1400300e7:	sub    rsp,0x78
   1400300eb:	mov    rax,QWORD PTR [rip+0x2410e]        # 0x140054200
   1400300f2:	movsxd r15,edx
   1400300f5:	mov    r14,rcx
   1400300f8:	cmp    DWORD PTR [rax+0x4],0x3
   1400300fc:	je     0x1400302bd
   140030102:	mov    rax,QWORD PTR [rip+0x21f47]        # 0x140052050
   140030109:	mov    r9d,DWORD PTR [rcx+0x4]
   14003010d:	mov    r8d,DWORD PTR [rcx]
   140030110:	mov    QWORD PTR [r11+0x8],rbx
   140030114:	mov    QWORD PTR [r11+0x10],rbp
   140030118:	mov    QWORD PTR [r11+0x18],rsi
   14003011c:	mov    QWORD PTR [r11+0x20],rdi
   140030120:	lea    rdx,[rip+0x11cf1]        # 0x140041e18
   140030127:	lea    rcx,[r11-0x58]
   14003012b:	mov    QWORD PTR [r11-0x68],rax
   14003012f:	mov    QWORD PTR [r11-0x18],r12
   140030133:	call   QWORD PTR [rip+0xcf77]        # 0x14003d0b0
   140030139:	lea    rcx,[rsp+0x30]
   14003013e:	call   0x140030d70
   140030143:	lea    eax,[r15-0x1]
   140030147:	mov    esi,0x1
   14003014c:	movsxd rbp,eax
   14003014f:	xor    r12d,r12d
   140030152:	cmp    rsi,rbp
   140030155:	jge    0x1400301f7
   14003015b:	nop    DWORD PTR [rax+rax*1+0x0]
   140030160:	mov    r9d,DWORD PTR [r14+rsi*8+0x4]
   140030165:	mov    r8d,DWORD PTR [r14+rsi*8]
   140030169:	lea    rdx,[rip+0x11cd4]        # 0x140041e44
   140030170:	lea    rcx,[rsp+0x30]
   140030175:	call   QWORD PTR [rip+0xcf35]        # 0x14003d0b0
   14003017b:	lea    rbx,[rsp+0x30]
   140030180:	cmp    BYTE PTR [rsp+0x30],r12b
   140030185:	je     0x14003018f
   140030187:	inc    rbx
   14003018a:	cmp    BYTE PTR [rbx],r12b
   14003018d:	jne    0x140030187
   14003018f:	mov    ecx,DWORD PTR [rip+0x24007]        # 0x14005419c
   140030195:	lea    rax,[rsp+0x30]
   14003019a:	mov    edi,ebx
   14003019c:	sub    edi,eax
   14003019e:	add    ecx,edi
   1400301a0:	cmp    ecx,0x50
   1400301a3:	jle    0x1400301c0
   1400301a5:	mov    rdx,QWORD PTR [rip+0x25344]        # 0x1400554f0
   1400301ac:	lea    rcx,[rip+0xd9c5]        # 0x14003db78
   1400301b3:	call   QWORD PTR [rip+0xcf87]        # 0x14003d140
   1400301b9:	mov    DWORD PTR [rip+0x23fdc],r12d        # 0x14005419c
   1400301c0:	mov    rdx,QWORD PTR [rip+0x25329]        # 0x1400554f0
   1400301c7:	lea    rcx,[rsp+0x30]
   1400301cc:	call   QWORD PTR [rip+0xcf6e]        # 0x14003d140
   1400301d2:	test   edi,edi
   1400301d4:	jle    0x1400301e5
   1400301d6:	cmp    BYTE PTR [rbx-0x1],0xa
   1400301da:	jne    0x1400301e5
   1400301dc:	mov    DWORD PTR [rip+0x23fb9],r12d        # 0x14005419c
   1400301e3:	jmp    0x1400301eb
   1400301e5:	add    DWORD PTR [rip+0x23fb1],edi        # 0x14005419c
   1400301eb:	inc    rsi
   1400301ee:	cmp    rsi,rbp
   1400301f1:	jl     0x140030160
   1400301f7:	mov    rax,QWORD PTR [rip+0x21e52]        # 0x140052050
   1400301fe:	mov    r9d,DWORD PTR [r14+r15*8-0x4]
   140030203:	mov    r8d,DWORD PTR [r14+r15*8-0x8]
   140030208:	lea    rcx,[r14+r15*8]
   14003020c:	mov    QWORD PTR [rsp+0x28],rax
   140030211:	lea    rdx,[rip+0x11cf8]        # 0x140041f10
   140030218:	lea    rcx,[rsp+0x30]
   14003021d:	mov    QWORD PTR [rsp+0x20],rax
   140030222:	call   QWORD PTR [rip+0xce88]        # 0x14003d0b0
   140030228:	mov    rsi,QWORD PTR [rsp+0xa0]
   140030230:	mov    rbp,QWORD PTR [rsp+0x98]
   140030238:	lea    rbx,[rsp+0x30]
   14003023d:	cmp    BYTE PTR [rsp+0x30],r12b
   140030242:	je     0x14003024c
   140030244:	inc    rbx
   140030247:	cmp    BYTE PTR [rbx],r12b
   14003024a:	jne    0x140030244
   14003024c:	mov    edx,DWORD PTR [rip+0x23f4a]        # 0x14005419c
   140030252:	lea    rax,[rsp+0x30]
   140030257:	mov    edi,ebx
   140030259:	sub    edi,eax
   14003025b:	add    edx,edi
   14003025d:	cmp    edx,0x50
   140030260:	jle    0x14003027d
   140030262:	mov    rdx,QWORD PTR [rip+0x25287]        # 0x1400554f0
   140030269:	lea    rcx,[rip+0xd908]        # 0x14003db78
   140030270:	call   QWORD PTR [rip+0xceca]        # 0x14003d140
   140030276:	mov    DWORD PTR [rip+0x23f1f],r12d        # 0x14005419c
   14003027d:	mov    rdx,QWORD PTR [rip+0x2526c]        # 0x1400554f0
   140030284:	lea    rcx,[rsp+0x30]
   140030289:	call   QWORD PTR [rip+0xceb1]        # 0x14003d140
   14003028f:	test   edi,edi
   140030291:	jle    0x1400302a2
   140030293:	cmp    BYTE PTR [rbx-0x1],0xa
   140030297:	jne    0x1400302a2
   140030299:	mov    DWORD PTR [rip+0x23efc],r12d        # 0x14005419c
   1400302a0:	jmp    0x1400302a8
   1400302a2:	add    DWORD PTR [rip+0x23ef4],edi        # 0x14005419c
   1400302a8:	mov    rdi,QWORD PTR [rsp+0xa8]
   1400302b0:	mov    rbx,QWORD PTR [rsp+0x90]
   1400302b8:	mov    r12,QWORD PTR [rsp+0x70]
   1400302bd:	add    rsp,0x78
   1400302c1:	pop    r15
   1400302c3:	pop    r14
   1400302c5:	ret    
   1400302c6:	int3   
   1400302c7:	int3   
   1400302c8:	int3   
   1400302c9:	int3   
   1400302ca:	int3   
   1400302cb:	int3   
   1400302cc:	int3   
   1400302cd:	int3   
   1400302ce:	int3   
   1400302cf:	int3   
   1400302d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400302d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400302da:	push   rdi
   1400302db:	sub    rsp,0x20
   1400302df:	cmp    BYTE PTR [rip+0x21d42],0x0        # 0x140052028
   1400302e6:	mov    ebx,r9d
   1400302e9:	mov    edi,r8d
   1400302ec:	mov    rsi,rdx
   1400302ef:	je     0x14003030f
   1400302f1:	call   QWORD PTR [rip+0xcfd9]        # 0x14003d2d0
   1400302f7:	lea    rdx,[rip+0x11c22]        # 0x140041f20
   1400302fe:	lea    rcx,[rax+0x60]
   140030302:	call   QWORD PTR [rip+0xcfb8]        # 0x14003d2c0
   140030308:	mov    BYTE PTR [rip+0x21d19],0x0        # 0x140052028
   14003030f:	mov    r8d,ebx
   140030312:	mov    edx,edi
   140030314:	mov    rcx,rsi
   140030317:	mov    rbx,QWORD PTR [rsp+0x30]
   14003031c:	mov    rsi,QWORD PTR [rsp+0x38]
   140030321:	add    rsp,0x20
   140030325:	pop    rdi
   140030326:	jmp    0x14002fcd0
   14003032b:	int3   
   14003032c:	int3   
   14003032d:	int3   
   14003032e:	int3   
   14003032f:	int3   
   140030330:	mov    rax,rsp
   140030333:	movsd  QWORD PTR [rax+0x10],xmm1
   140030338:	movsd  QWORD PTR [rax+0x8],xmm0
   14003033d:	sub    rsp,0x128
   140030344:	movaps XMMWORD PTR [rax-0x18],xmm6
   140030348:	movaps XMMWORD PTR [rax-0x28],xmm7
   14003034c:	movaps XMMWORD PTR [rax-0x58],xmm10
   140030351:	movsd  xmm10,QWORD PTR [rsp+0x168]
   14003035b:	movaps xmm6,xmm1
   14003035e:	movaps xmm7,xmm0
   140030361:	movsd  QWORD PTR [rsp+0x38],xmm10
   140030368:	movaps XMMWORD PTR [rax-0x68],xmm11
   14003036d:	movaps XMMWORD PTR [rax-0x78],xmm12
   140030372:	movaps XMMWORD PTR [rax-0x88],xmm13
   14003037a:	movsd  xmm11,QWORD PTR [rsp+0x160]
   140030384:	movaps xmm12,xmm3
   140030388:	movaps xmm13,xmm2
   14003038c:	movaps XMMWORD PTR [rax-0x98],xmm14
   140030394:	movsd  xmm14,QWORD PTR [rsp+0x158]
   14003039e:	movaps XMMWORD PTR [rax-0xa8],xmm15
   1400303a6:	movsd  xmm15,QWORD PTR [rsp+0x150]
   1400303b0:	movsd  QWORD PTR [rsp+0x30],xmm11
   1400303b7:	movsd  QWORD PTR [rsp+0x28],xmm14
   1400303be:	movsd  QWORD PTR [rsp+0x20],xmm15
   1400303c5:	call   0x1400309e0
   1400303ca:	test   eax,eax
   1400303cc:	je     0x140030428
   1400303ce:	cmp    DWORD PTR [rip+0x23e33],0x0        # 0x140054208
   1400303d5:	lea    rcx,[rsp+0x40]
   1400303da:	cvttsd2si r9d,xmm10
   1400303df:	cvttsd2si r8d,xmm11
   1400303e4:	je     0x14003040c
   1400303e6:	lea    rdx,[rip+0xe05f]        # 0x14003e44c
   1400303ed:	call   QWORD PTR [rip+0xccbd]        # 0x14003d0b0
   1400303f3:	lea    rcx,[rsp+0x40]
   1400303f8:	mov    DWORD PTR [rip+0x23e06],0x0        # 0x140054208
   140030402:	call   0x140030d70
   140030407:	jmp    0x1400305a7
   14003040c:	lea    rdx,[rip+0x119d9]        # 0x140041dec
   140030413:	call   QWORD PTR [rip+0xcc97]        # 0x14003d0b0
   140030419:	lea    rcx,[rsp+0x40]
   14003041e:	call   0x140030d70
   140030423:	jmp    0x1400305a7
   140030428:	movsd  xmm2,QWORD PTR [rip+0x11b30]        # 0x140041f60
   140030430:	movsd  xmm1,QWORD PTR [rsp+0x130]
   140030439:	movsd  xmm5,QWORD PTR [rsp+0x138]
   140030442:	movaps XMMWORD PTR [rsp+0xf0],xmm8
   14003044b:	movaps XMMWORD PTR [rsp+0xe0],xmm9
   140030454:	movaps xmm0,xmm6
   140030457:	addsd  xmm1,xmm15
   14003045c:	movaps xmm4,xmm6
   14003045f:	movsd  xmm6,QWORD PTR [rip+0xcf71]        # 0x14003d3d8
   140030467:	addsd  xmm0,xmm10
   14003046c:	addsd  xmm4,xmm14
   140030471:	mulsd  xmm0,xmm2
   140030475:	movaps xmm9,xmm12
   140030479:	movaps xmm8,xmm13
   14003047d:	movaps xmm3,xmm5
   140030480:	addsd  xmm9,xmm14
   140030485:	addsd  xmm8,xmm15
   14003048a:	addsd  xmm3,xmm12
   14003048f:	mulsd  xmm9,QWORD PTR [rip+0xd0b8]        # 0x14003d550
   140030498:	mulsd  xmm8,QWORD PTR [rip+0xd0af]        # 0x14003d550
   1400304a1:	mulsd  xmm3,xmm6
   1400304a5:	mulsd  xmm9,xmm2
   1400304aa:	mulsd  xmm8,xmm2
   1400304af:	addsd  xmm9,xmm0
   1400304b4:	movaps xmm0,xmm7
   1400304b7:	movsd  xmm7,QWORD PTR [rip+0xd381]        # 0x14003d840
   1400304bf:	mulsd  xmm1,xmm7
   1400304c3:	mulsd  xmm4,xmm7
   1400304c7:	addsd  xmm0,xmm11
   1400304cc:	movsd  QWORD PTR [rsp+0x38],xmm9
   1400304d3:	mulsd  xmm0,xmm2
   1400304d7:	addsd  xmm8,xmm0
   1400304dc:	movaps xmm0,xmm12
   1400304e0:	mulsd  xmm0,xmm6
   1400304e4:	addsd  xmm4,xmm0
   1400304e8:	movaps xmm0,xmm13
   1400304ec:	movsd  QWORD PTR [rsp+0x30],xmm8
   1400304f3:	mulsd  xmm0,xmm6
   1400304f7:	addsd  xmm1,xmm0
   1400304fb:	movsd  xmm0,QWORD PTR [rsp+0x130]
   140030504:	movsd  QWORD PTR [rsp+0x28],xmm4
   14003050a:	movaps xmm2,xmm0
   14003050d:	addsd  xmm2,xmm13
   140030512:	movsd  QWORD PTR [rsp+0x20],xmm1
   140030518:	movaps xmm1,xmm5
   14003051b:	mulsd  xmm2,xmm6
   14003051f:	call   0x140030330
   140030524:	movaps xmm3,xmm14
   140030528:	movaps xmm2,xmm15
   14003052c:	mulsd  xmm14,xmm6
   140030531:	mulsd  xmm15,xmm6
   140030536:	addsd  xmm3,xmm10
   14003053b:	addsd  xmm2,xmm11
   140030540:	movsd  QWORD PTR [rsp+0x38],xmm10
   140030547:	mulsd  xmm3,xmm6
   14003054b:	mulsd  xmm2,xmm6
   14003054f:	addsd  xmm12,xmm10
   140030554:	addsd  xmm13,xmm11
   140030559:	movsd  QWORD PTR [rsp+0x30],xmm11
   140030560:	mulsd  xmm12,xmm7
   140030565:	mulsd  xmm13,xmm7
   14003056a:	movsd  QWORD PTR [rsp+0x28],xmm3
   140030570:	movsd  QWORD PTR [rsp+0x20],xmm2
   140030576:	addsd  xmm12,xmm14
   14003057b:	addsd  xmm13,xmm15
   140030580:	movaps xmm3,xmm12
   140030584:	movaps xmm1,xmm9
   140030588:	movaps xmm2,xmm13
   14003058c:	movaps xmm0,xmm8
   140030590:	call   0x140030330
   140030595:	movaps xmm9,XMMWORD PTR [rsp+0xe0]
   14003059e:	movaps xmm8,XMMWORD PTR [rsp+0xf0]
   1400305a7:	lea    r11,[rsp+0x128]
   1400305af:	movaps xmm6,XMMWORD PTR [r11-0x18]
   1400305b4:	movaps xmm7,XMMWORD PTR [r11-0x28]
   1400305b9:	movaps xmm10,XMMWORD PTR [r11-0x58]
   1400305be:	movaps xmm11,XMMWORD PTR [r11-0x68]
   1400305c3:	movaps xmm12,XMMWORD PTR [r11-0x78]
   1400305c8:	movaps xmm13,XMMWORD PTR [r11-0x88]
   1400305d0:	movaps xmm14,XMMWORD PTR [r11-0x98]
   1400305d8:	movaps xmm15,XMMWORD PTR [r11-0xa8]
   1400305e0:	mov    rsp,r11
   1400305e3:	ret    
   1400305e4:	int3   
   1400305e5:	int3   
   1400305e6:	int3   
   1400305e7:	int3   
   1400305e8:	int3   
   1400305e9:	int3   
   1400305ea:	int3   
   1400305eb:	int3   
   1400305ec:	int3   
   1400305ed:	int3   
   1400305ee:	int3   
   1400305ef:	int3   
   1400305f0:	sub    rsp,0x28
   1400305f4:	mov    rcx,QWORD PTR [rip+0x23bfd]        # 0x1400541f8
   1400305fb:	call   QWORD PTR [rip+0xcc9f]        # 0x14003d2a0
   140030601:	mov    DWORD PTR [rip+0x23b89],0x0        # 0x140054194
   14003060b:	add    rsp,0x28
   14003060f:	ret    
   140030610:	rex push rbx
   140030612:	sub    rsp,0x20
   140030616:	mov    rcx,QWORD PTR [rip+0x23be3]        # 0x140054200
   14003061d:	test   rcx,rcx
   140030620:	je     0x140030634
   140030622:	mov    rbx,QWORD PTR [rcx+0x30]
   140030626:	call   QWORD PTR [rip+0xcc74]        # 0x14003d2a0
   14003062c:	mov    rcx,rbx
   14003062f:	test   rbx,rbx
   140030632:	jne    0x140030622
   140030634:	movups xmm1,XMMWORD PTR [rip+0x23b05]        # 0x140054140
   14003063b:	movups xmm0,XMMWORD PTR [rip+0x23b0e]        # 0x140054150
   140030642:	mov    rcx,QWORD PTR [rip+0x23baf]        # 0x1400541f8
   140030649:	xor    ebx,ebx
   14003064b:	mov    DWORD PTR [rip+0x23b9b],0x1        # 0x1400541f0
   140030655:	mov    QWORD PTR [rip+0x23ba4],rbx        # 0x140054200
   14003065c:	movups XMMWORD PTR [rip+0x23b4d],xmm1        # 0x1400541b0
   140030663:	movups XMMWORD PTR [rip+0x23b56],xmm0        # 0x1400541c0
   14003066a:	movups XMMWORD PTR [rip+0x23b5f],xmm1        # 0x1400541d0
   140030671:	movups XMMWORD PTR [rip+0x23b68],xmm0        # 0x1400541e0
   140030678:	call   QWORD PTR [rip+0xcc22]        # 0x14003d2a0
   14003067e:	mov    DWORD PTR [rip+0x23b10],ebx        # 0x140054194
   140030684:	add    rsp,0x20
   140030688:	pop    rbx
   140030689:	ret    
   14003068a:	int3   
   14003068b:	int3   
   14003068c:	int3   
   14003068d:	int3   
   14003068e:	int3   
   14003068f:	int3   
   140030690:	movzx  eax,BYTE PTR [rdx]
   140030693:	cmp    BYTE PTR [rcx],al
   140030695:	jne    0x1400306af
   140030697:	movzx  eax,BYTE PTR [rdx+0x1]
   14003069b:	cmp    BYTE PTR [rcx+0x1],al
   14003069e:	jne    0x1400306af
   1400306a0:	movzx  eax,BYTE PTR [rdx+0x2]
   1400306a4:	cmp    BYTE PTR [rcx+0x2],al
   1400306a7:	jne    0x1400306af
   1400306a9:	mov    eax,0x1
   1400306ae:	ret    
   1400306af:	xor    eax,eax
   1400306b1:	ret    
   1400306b2:	int3   
   1400306b3:	int3   
   1400306b4:	int3   
   1400306b5:	int3   
   1400306b6:	int3   
   1400306b7:	int3   
   1400306b8:	int3   
   1400306b9:	int3   
   1400306ba:	int3   
   1400306bb:	int3   
   1400306bc:	int3   
   1400306bd:	int3   
   1400306be:	int3   
   1400306bf:	int3   
   1400306c0:	mov    eax,DWORD PTR [rdx+0x8]
   1400306c3:	cmp    DWORD PTR [rcx+0x8],eax
   1400306c6:	jne    0x1400306fa
   1400306c8:	mov    eax,DWORD PTR [rdx+0x4]
   1400306cb:	cmp    DWORD PTR [rcx+0x4],eax
   1400306ce:	jne    0x1400306fa
   1400306d0:	mov    eax,DWORD PTR [rdx+0xc]
   1400306d3:	cmp    DWORD PTR [rcx+0xc],eax
   1400306d6:	jne    0x1400306fa
   1400306d8:	mov    eax,DWORD PTR [rdx+0x10]
   1400306db:	cmp    DWORD PTR [rcx+0x10],eax
   1400306de:	jne    0x1400306fa
   1400306e0:	movsd  xmm0,QWORD PTR [rcx+0x18]
   1400306e5:	ucomisd xmm0,QWORD PTR [rdx+0x18]
   1400306ea:	jp     0x1400306fa
   1400306ec:	jne    0x1400306fa
   1400306ee:	mov    eax,DWORD PTR [rdx]
   1400306f0:	cmp    DWORD PTR [rcx],eax
   1400306f2:	jne    0x1400306fa
   1400306f4:	mov    eax,0x1
   1400306f9:	ret    
   1400306fa:	xor    eax,eax
   1400306fc:	ret    
   1400306fd:	int3   
   1400306fe:	int3   
   1400306ff:	int3   
   140030700:	mov    QWORD PTR [rsp+0x8],rbx
   140030705:	push   rdi
   140030706:	sub    rsp,0x80
   14003070d:	mov    eax,DWORD PTR [rip+0x23a69]        # 0x14005417c
   140030713:	movaps xmm3,xmm0
   140030716:	movaps xmm5,xmm1
   140030719:	neg    eax
   14003071b:	lea    rdx,[rip+0x115d6]        # 0x140041cf8
   140030722:	lea    rcx,[rsp+0x40]
   140030727:	mulsd  xmm3,QWORD PTR [rip+0x11841]        # 0x140041f70
   14003072f:	mulsd  xmm5,QWORD PTR [rip+0x11839]        # 0x140041f70
   140030737:	movd   xmm4,eax
   14003073b:	mov    eax,DWORD PTR [rip+0x23a37]        # 0x140054178
   140030741:	neg    eax
   140030743:	movq   r9,xmm3
   140030748:	cvtdq2pd xmm4,xmm4
   14003074c:	movd   xmm2,eax
   140030750:	mov    rax,QWORD PTR [rip+0x218f9]        # 0x140052050
   140030757:	mov    QWORD PTR [rsp+0x30],rax
   14003075c:	divsd  xmm4,xmm1
   140030760:	movsd  QWORD PTR [rsp+0x28],xmm5
   140030766:	cvtdq2pd xmm2,xmm2
   14003076a:	divsd  xmm2,xmm0
   14003076e:	movsd  QWORD PTR [rsp+0x20],xmm4
   140030774:	movq   r8,xmm2
   140030779:	call   QWORD PTR [rip+0xc931]        # 0x14003d0b0
   14003077f:	cmp    BYTE PTR [rsp+0x40],0x0
   140030784:	lea    rbx,[rsp+0x40]
   140030789:	je     0x140030798
   14003078b:	nop    DWORD PTR [rax+rax*1+0x0]
   140030790:	inc    rbx
   140030793:	cmp    BYTE PTR [rbx],0x0
   140030796:	jne    0x140030790
   140030798:	mov    ecx,DWORD PTR [rip+0x239fe]        # 0x14005419c
   14003079e:	lea    rax,[rsp+0x40]
   1400307a3:	mov    edi,ebx
   1400307a5:	sub    edi,eax
   1400307a7:	add    ecx,edi
   1400307a9:	cmp    ecx,0x50
   1400307ac:	jle    0x1400307cc
   1400307ae:	mov    rdx,QWORD PTR [rip+0x24d3b]        # 0x1400554f0
   1400307b5:	lea    rcx,[rip+0xd3bc]        # 0x14003db78
   1400307bc:	call   QWORD PTR [rip+0xc97e]        # 0x14003d140
   1400307c2:	mov    DWORD PTR [rip+0x239d0],0x0        # 0x14005419c
   1400307cc:	mov    rdx,QWORD PTR [rip+0x24d1d]        # 0x1400554f0
   1400307d3:	lea    rcx,[rsp+0x40]
   1400307d8:	call   QWORD PTR [rip+0xc962]        # 0x14003d140
   1400307de:	test   edi,edi
   1400307e0:	jle    0x140030803
   1400307e2:	cmp    BYTE PTR [rbx-0x1],0xa
   1400307e6:	jne    0x140030803
   1400307e8:	mov    DWORD PTR [rip+0x239aa],0x0        # 0x14005419c
   1400307f2:	mov    rbx,QWORD PTR [rsp+0x90]
   1400307fa:	add    rsp,0x80
   140030801:	pop    rdi
   140030802:	ret    
   140030803:	add    DWORD PTR [rip+0x23993],edi        # 0x14005419c
   140030809:	mov    rbx,QWORD PTR [rsp+0x90]
   140030811:	add    rsp,0x80
   140030818:	pop    rdi
   140030819:	ret    
   14003081a:	int3   
   14003081b:	int3   
   14003081c:	int3   
   14003081d:	int3   
   14003081e:	int3   
   14003081f:	int3   
   140030820:	sub    rsp,0x28
   140030824:	mov    ecx,0x60
   140030829:	call   QWORD PTR [rip+0xc939]        # 0x14003d168
   14003082f:	movzx  ecx,WORD PTR [rip+0x2186a]        # 0x1400520a0
   140030836:	mov    DWORD PTR [rip+0x23954],0x2        # 0x140054194
   140030840:	mov    WORD PTR [rax],cx
   140030843:	movzx  ecx,BYTE PTR [rip+0x21858]        # 0x1400520a2
   14003084a:	mov    QWORD PTR [rip+0x239a7],rax        # 0x1400541f8
   140030851:	mov    BYTE PTR [rax+0x2],cl
   140030854:	movzx  ecx,WORD PTR [rip+0x23905]        # 0x140054160
   14003085b:	mov    WORD PTR [rax+0x3],cx
   14003085f:	movzx  ecx,BYTE PTR [rip+0x238fc]        # 0x140054162
   140030866:	mov    BYTE PTR [rax+0x5],cl
   140030869:	add    rsp,0x28
   14003086d:	ret    
   14003086e:	int3   
   14003086f:	int3   
   140030870:	mov    QWORD PTR [rsp+0x8],rbx
   140030875:	mov    QWORD PTR [rsp+0x10],rsi
   14003087a:	push   rdi
   14003087b:	sub    rsp,0x50
   14003087f:	mov    ecx,0x38
   140030884:	call   QWORD PTR [rip+0xc8de]        # 0x14003d168
   14003088a:	movzx  ecx,WORD PTR [rip+0x238cf]        # 0x140054160
   140030891:	mov    r8,QWORD PTR [rip+0x217b8]        # 0x140052050
   140030898:	movsd  xmm3,QWORD PTR [rip+0x116b0]        # 0x140041f50
   1400308a0:	movq   r9,xmm3
   1400308a5:	mov    WORD PTR [rax+0x8],cx
   1400308a9:	movzx  ecx,BYTE PTR [rip+0x238b2]        # 0x140054162
   1400308b0:	xor    esi,esi
   1400308b2:	mov    BYTE PTR [rax+0xa],cl
   1400308b5:	mov    QWORD PTR [rax],rsi
   1400308b8:	lea    rdx,[rip+0x11429]        # 0x140041ce8
   1400308bf:	movups xmm0,XMMWORD PTR [rip+0x2179a]        # 0x140052060
   1400308c6:	lea    rcx,[rsp+0x30]
   1400308cb:	mov    QWORD PTR [rip+0x2392e],rax        # 0x140054200
   1400308d2:	mov    QWORD PTR [rsp+0x20],r8
   1400308d7:	movups XMMWORD PTR [rax+0x10],xmm0
   1400308db:	movups xmm1,XMMWORD PTR [rip+0x2178e]        # 0x140052070
   1400308e2:	mov    QWORD PTR [rax+0x30],rsi
   1400308e6:	movups XMMWORD PTR [rax+0x20],xmm1
   1400308ea:	call   QWORD PTR [rip+0xc7c0]        # 0x14003d0b0
   1400308f0:	lea    rbx,[rsp+0x30]
   1400308f5:	cmp    BYTE PTR [rsp+0x30],sil
   1400308fa:	je     0x140030908
   1400308fc:	nop    DWORD PTR [rax+0x0]
   140030900:	inc    rbx
   140030903:	cmp    BYTE PTR [rbx],sil
   140030906:	jne    0x140030900
   140030908:	mov    ecx,DWORD PTR [rip+0x2388e]        # 0x14005419c
   14003090e:	lea    rax,[rsp+0x30]
   140030913:	mov    edi,ebx
   140030915:	sub    edi,eax
   140030917:	add    ecx,edi
   140030919:	cmp    ecx,0x50
   14003091c:	jle    0x140030938
   14003091e:	mov    rdx,QWORD PTR [rip+0x24bcb]        # 0x1400554f0
   140030925:	lea    rcx,[rip+0xd24c]        # 0x14003db78
   14003092c:	call   QWORD PTR [rip+0xc80e]        # 0x14003d140
   140030932:	mov    DWORD PTR [rip+0x23864],esi        # 0x14005419c
   140030938:	mov    rdx,QWORD PTR [rip+0x24bb1]        # 0x1400554f0
   14003093f:	lea    rcx,[rsp+0x30]
   140030944:	call   QWORD PTR [rip+0xc7f6]        # 0x14003d140
   14003094a:	test   edi,edi
   14003094c:	jle    0x14003095c
   14003094e:	cmp    BYTE PTR [rbx-0x1],0xa
   140030952:	jne    0x14003095c
   140030954:	mov    DWORD PTR [rip+0x23842],esi        # 0x14005419c
   14003095a:	jmp    0x140030962
   14003095c:	add    DWORD PTR [rip+0x2383a],edi        # 0x14005419c
   140030962:	lea    rcx,[rip+0x216f7]        # 0x140052060
   140030969:	mov    DWORD PTR [rip+0x2387d],0x1        # 0x1400541f0
   140030973:	call   0x140030fe0
   140030978:	mov    ecx,0x60
   14003097d:	mov    DWORD PTR [rip+0x23809],0x1        # 0x140054190
   140030987:	call   QWORD PTR [rip+0xc7db]        # 0x14003d168
   14003098d:	movzx  ecx,WORD PTR [rip+0x2170c]        # 0x1400520a0
   140030994:	mov    rbx,QWORD PTR [rsp+0x60]
   140030999:	mov    rsi,QWORD PTR [rsp+0x68]
   14003099e:	mov    WORD PTR [rax],cx
   1400309a1:	movzx  ecx,BYTE PTR [rip+0x216fa]        # 0x1400520a2
   1400309a8:	mov    BYTE PTR [rax+0x2],cl
   1400309ab:	movzx  ecx,WORD PTR [rip+0x237ae]        # 0x140054160
   1400309b2:	mov    QWORD PTR [rip+0x2383f],rax        # 0x1400541f8
   1400309b9:	mov    WORD PTR [rax+0x3],cx
   1400309bd:	movzx  ecx,BYTE PTR [rip+0x2379e]        # 0x140054162
   1400309c4:	mov    DWORD PTR [rip+0x237c6],0x2        # 0x140054194
   1400309ce:	mov    BYTE PTR [rax+0x5],cl
   1400309d1:	add    rsp,0x50
   1400309d5:	pop    rdi
   1400309d6:	ret    
   1400309d7:	int3   
   1400309d8:	int3   
   1400309d9:	int3   
   1400309da:	int3   
   1400309db:	int3   
   1400309dc:	int3   
   1400309dd:	int3   
   1400309de:	int3   
   1400309df:	int3   
   1400309e0:	sub    rsp,0x88
   1400309e7:	movaps XMMWORD PTR [rsp+0x70],xmm6
   1400309ec:	movaps XMMWORD PTR [rsp+0x60],xmm7
   1400309f1:	movsd  xmm7,QWORD PTR [rsp+0xc8]
   1400309fa:	subsd  xmm7,xmm1
   1400309fe:	movaps xmm6,xmm3
   140030a01:	movaps XMMWORD PTR [rsp+0x50],xmm8
   140030a07:	movaps XMMWORD PTR [rsp+0x40],xmm9
   140030a0d:	movaps XMMWORD PTR [rsp+0x30],xmm10
   140030a13:	movsd  xmm8,QWORD PTR [rsp+0xc0]
   140030a1d:	movaps xmm4,xmm7
   140030a20:	movaps xmm9,xmm2
   140030a24:	mulsd  xmm4,xmm7
   140030a28:	movaps XMMWORD PTR [rsp+0x20],xmm11
   140030a2e:	subsd  xmm8,xmm0
   140030a33:	movaps xmm11,xmm0
   140030a37:	movaps xmm10,xmm1
   140030a3b:	movaps xmm0,xmm8
   140030a3f:	mulsd  xmm0,xmm8
   140030a44:	addsd  xmm0,xmm4
   140030a48:	call   0x14003b8ae
   140030a4d:	xorps  xmm1,xmm1
   140030a50:	ucomisd xmm0,xmm1
   140030a54:	jp     0x140030a5f
   140030a56:	jne    0x140030a5f
   140030a58:	mov    eax,0x1
   140030a5d:	jmp    0x140030ad4
   140030a5f:	movsd  xmm3,QWORD PTR [rip+0xc979]        # 0x14003d3e0
   140030a67:	subsd  xmm6,xmm10
   140030a6c:	divsd  xmm7,xmm0
   140030a70:	subsd  xmm9,xmm11
   140030a75:	divsd  xmm8,xmm0
   140030a7a:	mulsd  xmm9,xmm7
   140030a7f:	mulsd  xmm6,xmm8
   140030a84:	subsd  xmm6,xmm9
   140030a89:	comisd xmm6,xmm3
   140030a8d:	ja     0x140030ad2
   140030a8f:	movsd  xmm2,QWORD PTR [rip+0xcc51]        # 0x14003d6e8
   140030a97:	comisd xmm2,xmm6
   140030a9b:	ja     0x140030ad2
   140030a9d:	movsd  xmm1,QWORD PTR [rsp+0xb8]
   140030aa6:	movsd  xmm0,QWORD PTR [rsp+0xb0]
   140030aaf:	subsd  xmm1,xmm10
   140030ab4:	subsd  xmm0,xmm11
   140030ab9:	mulsd  xmm1,xmm8
   140030abe:	mulsd  xmm0,xmm7
   140030ac2:	subsd  xmm1,xmm0
   140030ac6:	comisd xmm3,xmm1
   140030aca:	jb     0x140030ad2
   140030acc:	comisd xmm1,xmm2
   140030ad0:	jae    0x140030a58
   140030ad2:	xor    eax,eax
   140030ad4:	movaps xmm6,XMMWORD PTR [rsp+0x70]
   140030ad9:	movaps xmm7,XMMWORD PTR [rsp+0x60]
   140030ade:	movaps xmm8,XMMWORD PTR [rsp+0x50]
   140030ae4:	movaps xmm9,XMMWORD PTR [rsp+0x40]
   140030aea:	movaps xmm10,XMMWORD PTR [rsp+0x30]
   140030af0:	movaps xmm11,XMMWORD PTR [rsp+0x20]
   140030af6:	add    rsp,0x88
   140030afd:	ret    
   140030afe:	int3   
   140030aff:	int3   
   140030b00:	mov    rcx,QWORD PTR [rip+0x236f9]        # 0x140054200
   140030b07:	xor    eax,eax
   140030b09:	cmp    DWORD PTR [rcx+0x4],0x3
   140030b0d:	sete   al
   140030b10:	ret    
   140030b11:	int3   
   140030b12:	int3   
   140030b13:	int3   
   140030b14:	int3   
   140030b15:	int3   
   140030b16:	int3   
   140030b17:	int3   
   140030b18:	int3   
   140030b19:	int3   
   140030b1a:	int3   
   140030b1b:	int3   
   140030b1c:	int3   
   140030b1d:	int3   
   140030b1e:	int3   
   140030b1f:	int3   
   140030b20:	rex push rbx
   140030b22:	sub    rsp,0x20
   140030b26:	mov    rbx,rcx
   140030b29:	mov    ecx,0x38
   140030b2e:	call   QWORD PTR [rip+0xc634]        # 0x14003d168
   140030b34:	xor    ecx,ecx
   140030b36:	mov    rdx,rax
   140030b39:	test   rbx,rbx
   140030b3c:	je     0x140030b5e
   140030b3e:	movups xmm0,XMMWORD PTR [rbx]
   140030b41:	movups xmm1,XMMWORD PTR [rbx+0x10]
   140030b45:	movups XMMWORD PTR [rax],xmm0
   140030b48:	movups xmm0,XMMWORD PTR [rbx+0x20]
   140030b4c:	movups XMMWORD PTR [rax+0x10],xmm1
   140030b50:	movups XMMWORD PTR [rax+0x20],xmm0
   140030b54:	mov    QWORD PTR [rax+0x30],rcx
   140030b58:	add    rsp,0x20
   140030b5c:	pop    rbx
   140030b5d:	ret    
   140030b5e:	movups xmm0,XMMWORD PTR [rip+0x214fb]        # 0x140052060
   140030b65:	movups xmm1,XMMWORD PTR [rip+0x21504]        # 0x140052070
   140030b6c:	mov    QWORD PTR [rax],rcx
   140030b6f:	movzx  eax,WORD PTR [rip+0x235ea]        # 0x140054160
   140030b76:	mov    QWORD PTR [rdx+0x30],rcx
   140030b7a:	mov    WORD PTR [rdx+0x8],ax
   140030b7e:	movzx  eax,BYTE PTR [rip+0x235dd]        # 0x140054162
   140030b85:	movups XMMWORD PTR [rdx+0x10],xmm0
   140030b89:	movups XMMWORD PTR [rdx+0x20],xmm1
   140030b8d:	mov    BYTE PTR [rdx+0xa],al
   140030b90:	mov    rax,rdx
   140030b93:	add    rsp,0x20
   140030b97:	pop    rbx
   140030b98:	ret    
   140030b99:	int3   
   140030b9a:	int3   
   140030b9b:	int3   
   140030b9c:	int3   
   140030b9d:	int3   
   140030b9e:	int3   
   140030b9f:	int3   
   140030ba0:	mov    QWORD PTR [rsp+0x10],rbx
   140030ba5:	mov    QWORD PTR [rsp+0x18],rsi
   140030baa:	push   rdi
   140030bab:	sub    rsp,0x20
   140030baf:	movzx  ebx,BYTE PTR [rcx]
   140030bb2:	mov    rdi,rdx
   140030bb5:	mov    rsi,rcx
   140030bb8:	test   bl,bl
   140030bba:	je     0x140030c0d
   140030bbc:	mov    QWORD PTR [rsp+0x30],rbp
   140030bc1:	movsx  ebp,bl
   140030bc4:	lea    rsi,[rsi+0x1]
   140030bc8:	mov    ecx,ebp
   140030bca:	call   QWORD PTR [rip+0xc500]        # 0x14003d0d0
   140030bd0:	test   eax,eax
   140030bd2:	je     0x140030bef
   140030bd4:	mov    ecx,ebp
   140030bd6:	call   QWORD PTR [rip+0xc544]        # 0x14003d120
   140030bdc:	test   eax,eax
   140030bde:	je     0x140030bea
   140030be0:	mov    ecx,ebp
   140030be2:	call   QWORD PTR [rip+0xc540]        # 0x14003d128
   140030be8:	mov    ebx,eax
   140030bea:	mov    BYTE PTR [rdi],bl
   140030bec:	inc    rdi
   140030bef:	movzx  ebx,BYTE PTR [rsi]
   140030bf2:	test   bl,bl
   140030bf4:	jne    0x140030bc1
   140030bf6:	mov    BYTE PTR [rdi],bl
   140030bf8:	mov    rbp,QWORD PTR [rsp+0x30]
   140030bfd:	mov    rbx,QWORD PTR [rsp+0x38]
   140030c02:	mov    rsi,QWORD PTR [rsp+0x40]
   140030c07:	add    rsp,0x20
   140030c0b:	pop    rdi
   140030c0c:	ret    
   140030c0d:	mov    rsi,QWORD PTR [rsp+0x40]
   140030c12:	mov    BYTE PTR [rdx],bl
   140030c14:	mov    rbx,QWORD PTR [rsp+0x38]
   140030c19:	add    rsp,0x20
   140030c1d:	pop    rdi
   140030c1e:	ret    
   140030c1f:	int3   
   140030c20:	mov    rax,rsp
   140030c23:	push   r15
   140030c25:	sub    rsp,0xb0
   140030c2c:	movaps XMMWORD PTR [rax-0x18],xmm6
   140030c30:	mov    QWORD PTR [rax+0x8],rbx
   140030c34:	movzx  ebx,BYTE PTR [rcx]
   140030c37:	mov    QWORD PTR [rax+0x18],rdi
   140030c3b:	mov    QWORD PTR [rax+0x20],r14
   140030c3f:	mov    r15,r8
   140030c42:	movaps xmm6,xmm1
   140030c45:	mov    r14,rcx
   140030c48:	lea    rdi,[rsp+0x20]
   140030c4d:	test   bl,bl
   140030c4f:	je     0x140030c9e
   140030c51:	mov    QWORD PTR [rax+0x10],rsi
   140030c55:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140030c60:	movsx  esi,bl
   140030c63:	lea    r14,[r14+0x1]
   140030c67:	mov    ecx,esi
   140030c69:	call   QWORD PTR [rip+0xc461]        # 0x14003d0d0
   140030c6f:	test   eax,eax
   140030c71:	je     0x140030c8e
   140030c73:	mov    ecx,esi
   140030c75:	call   QWORD PTR [rip+0xc4a5]        # 0x14003d120
   140030c7b:	test   eax,eax
   140030c7d:	je     0x140030c89
   140030c7f:	mov    ecx,esi
   140030c81:	call   QWORD PTR [rip+0xc4a1]        # 0x14003d128
   140030c87:	mov    ebx,eax
   140030c89:	mov    BYTE PTR [rdi],bl
   140030c8b:	inc    rdi
   140030c8e:	movzx  ebx,BYTE PTR [r14]
   140030c92:	test   bl,bl
   140030c94:	jne    0x140030c60
   140030c96:	mov    rsi,QWORD PTR [rsp+0xc8]
   140030c9e:	mov    r14,QWORD PTR [rsp+0xd8]
   140030ca6:	mov    BYTE PTR [rdi],bl
   140030ca8:	mov    rdi,QWORD PTR [rsp+0xd0]
   140030cb0:	mov    rbx,QWORD PTR [rsp+0xc0]
   140030cb8:	lea    r9,[rip+0x20f41]        # 0x140051c00
   140030cbf:	xor    r10d,r10d
   140030cc2:	mov    r8,QWORD PTR [r9]
   140030cc5:	lea    rax,[rsp+0x20]
   140030cca:	sub    r8,rax
   140030ccd:	nop    DWORD PTR [rax]
   140030cd0:	movzx  edx,BYTE PTR [rax]
   140030cd3:	movzx  ecx,BYTE PTR [rax+r8*1]
   140030cd8:	sub    edx,ecx
   140030cda:	jne    0x140030ce3
   140030cdc:	inc    rax
   140030cdf:	test   ecx,ecx
   140030ce1:	jne    0x140030cd0
   140030ce3:	test   edx,edx
   140030ce5:	je     0x140030cf7
   140030ce7:	inc    r10d
   140030cea:	add    r9,0x28
   140030cee:	movsxd rax,r10d
   140030cf1:	cmp    rax,0x13
   140030cf5:	jb     0x140030cc2
   140030cf7:	mov    eax,DWORD PTR [r9+0x8]
   140030cfb:	mov    DWORD PTR [r15],eax
   140030cfe:	mov    eax,DWORD PTR [r9+0x1c]
   140030d02:	mov    DWORD PTR [r15+0x10],eax
   140030d06:	mov    eax,DWORD PTR [r9+0x20]
   140030d0a:	mov    DWORD PTR [r15+0xc],eax
   140030d0e:	mov    eax,DWORD PTR [r9+0x18]
   140030d12:	mov    DWORD PTR [r15+0x8],eax
   140030d16:	cmp    QWORD PTR [r9+0x10],0x0
   140030d1b:	je     0x140030d49
   140030d1d:	mov    DWORD PTR [r15+0x4],0x0
   140030d25:	mov    rax,QWORD PTR [r9+0x10]
   140030d29:	movsd  xmm0,QWORD PTR [rax]
   140030d2d:	divsd  xmm0,xmm6
   140030d31:	movsd  QWORD PTR [r15+0x18],xmm0
   140030d37:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
   140030d3f:	add    rsp,0xb0
   140030d46:	pop    r15
   140030d48:	ret    
   140030d49:	movsd  QWORD PTR [r15+0x18],xmm6
   140030d4f:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
   140030d57:	mov    DWORD PTR [r15+0x4],0x1
   140030d5f:	add    rsp,0xb0
   140030d66:	pop    r15
   140030d68:	ret    
   140030d69:	int3   
   140030d6a:	int3   
   140030d6b:	int3   
   140030d6c:	int3   
   140030d6d:	int3   
   140030d6e:	int3   
   140030d6f:	int3   
   140030d70:	mov    QWORD PTR [rsp+0x8],rbx
   140030d75:	mov    QWORD PTR [rsp+0x10],rsi
   140030d7a:	push   rdi
   140030d7b:	sub    rsp,0x20
   140030d7f:	cmp    BYTE PTR [rcx],0x0
   140030d82:	mov    rdi,rcx
   140030d85:	mov    rbx,rcx
   140030d88:	je     0x140030d98
   140030d8a:	nop    WORD PTR [rax+rax*1+0x0]
   140030d90:	inc    rbx
   140030d93:	cmp    BYTE PTR [rbx],0x0
   140030d96:	jne    0x140030d90
   140030d98:	mov    esi,ebx
   140030d9a:	sub    esi,ecx
   140030d9c:	mov    ecx,DWORD PTR [rip+0x233fa]        # 0x14005419c
   140030da2:	add    ecx,esi
   140030da4:	cmp    ecx,0x50
   140030da7:	jle    0x140030dc7
   140030da9:	mov    rdx,QWORD PTR [rip+0x24740]        # 0x1400554f0
   140030db0:	lea    rcx,[rip+0xcdc1]        # 0x14003db78
   140030db7:	call   QWORD PTR [rip+0xc383]        # 0x14003d140
   140030dbd:	mov    DWORD PTR [rip+0x233d5],0x0        # 0x14005419c
   140030dc7:	mov    rdx,QWORD PTR [rip+0x24722]        # 0x1400554f0
   140030dce:	mov    rcx,rdi
   140030dd1:	call   QWORD PTR [rip+0xc369]        # 0x14003d140
   140030dd7:	test   esi,esi
   140030dd9:	jle    0x140030dfb
   140030ddb:	cmp    BYTE PTR [rbx-0x1],0xa
   140030ddf:	jne    0x140030dfb
   140030de1:	mov    DWORD PTR [rip+0x233b1],0x0        # 0x14005419c
   140030deb:	mov    rbx,QWORD PTR [rsp+0x30]
   140030df0:	mov    rsi,QWORD PTR [rsp+0x38]
   140030df5:	add    rsp,0x20
   140030df9:	pop    rdi
   140030dfa:	ret    
   140030dfb:	add    DWORD PTR [rip+0x2339b],esi        # 0x14005419c
   140030e01:	mov    rbx,QWORD PTR [rsp+0x30]
   140030e06:	mov    rsi,QWORD PTR [rsp+0x38]
   140030e0b:	add    rsp,0x20
   140030e0f:	pop    rdi
   140030e10:	ret    
   140030e11:	int3   
   140030e12:	int3   
   140030e13:	int3   
   140030e14:	int3   
   140030e15:	int3   
   140030e16:	int3   
   140030e17:	int3   
   140030e18:	int3   
   140030e19:	int3   
   140030e1a:	int3   
   140030e1b:	int3   
   140030e1c:	int3   
   140030e1d:	int3   
   140030e1e:	int3   
   140030e1f:	int3   
   140030e20:	mov    QWORD PTR [rsp+0x8],rbx
   140030e25:	push   rdi
   140030e26:	sub    rsp,0x40
   140030e2a:	mov    r8,QWORD PTR [rip+0x2121f]        # 0x140052050
   140030e31:	mov    rdi,rcx
   140030e34:	mov    rbx,rcx
   140030e37:	lea    rcx,[rsp+0x20]
   140030e3c:	lea    rdx,[rip+0x10df9]        # 0x140041c3c
   140030e43:	call   QWORD PTR [rip+0xc267]        # 0x14003d0b0
   140030e49:	cmp    BYTE PTR [rbx],0x0
   140030e4c:	je     0x140030e58
   140030e4e:	xchg   ax,ax
   140030e50:	inc    rbx
   140030e53:	cmp    BYTE PTR [rbx],0x0
   140030e56:	jne    0x140030e50
   140030e58:	mov    r8,QWORD PTR [rip+0x211f9]        # 0x140052058
   140030e5f:	or     rdx,0xffffffffffffffff
   140030e63:	mov    rcx,rdx
   140030e66:	inc    rcx
   140030e69:	cmp    BYTE PTR [r8+rcx*1],0x0
   140030e6e:	jne    0x140030e66
   140030e70:	lea    rax,[rsp+0x20]
   140030e75:	inc    rdx
   140030e78:	cmp    BYTE PTR [rax+rdx*1],0x0
   140030e7c:	jne    0x140030e75
   140030e7e:	mov    eax,DWORD PTR [rip+0x23318]        # 0x14005419c
   140030e84:	add    ecx,ebx
   140030e86:	sub    eax,edi
   140030e88:	add    ecx,edx
   140030e8a:	add    eax,ecx
   140030e8c:	cmp    eax,0x50
   140030e8f:	jle    0x140030eac
   140030e91:	mov    rdx,QWORD PTR [rip+0x24658]        # 0x1400554f0
   140030e98:	lea    rcx,[rip+0xccd9]        # 0x14003db78
   140030e9f:	call   QWORD PTR [rip+0xc29b]        # 0x14003d140
   140030ea5:	mov    r8,QWORD PTR [rip+0x211ac]        # 0x140052058
   140030eac:	mov    rdx,QWORD PTR [rip+0x2463d]        # 0x1400554f0
   140030eb3:	mov    rcx,r8
   140030eb6:	call   QWORD PTR [rip+0xc284]        # 0x14003d140
   140030ebc:	mov    rdx,QWORD PTR [rip+0x2462d]        # 0x1400554f0
   140030ec3:	mov    rcx,rdi
   140030ec6:	call   QWORD PTR [rip+0xc274]        # 0x14003d140
   140030ecc:	mov    rdx,QWORD PTR [rip+0x2461d]        # 0x1400554f0
   140030ed3:	lea    rcx,[rsp+0x20]
   140030ed8:	call   QWORD PTR [rip+0xc262]        # 0x14003d140
   140030ede:	mov    rbx,QWORD PTR [rsp+0x50]
   140030ee3:	mov    DWORD PTR [rip+0x232af],0x0        # 0x14005419c
   140030eed:	add    rsp,0x40
   140030ef1:	pop    rdi
   140030ef2:	ret    
   140030ef3:	int3   
   140030ef4:	int3   
   140030ef5:	int3   
   140030ef6:	int3   
   140030ef7:	int3   
   140030ef8:	int3   
   140030ef9:	int3   
   140030efa:	int3   
   140030efb:	int3   
   140030efc:	int3   
   140030efd:	int3   
   140030efe:	int3   
   140030eff:	int3   
   140030f00:	mov    QWORD PTR [rsp+0x8],rbx
   140030f05:	push   rdi
   140030f06:	sub    rsp,0x20
   140030f0a:	mov    rbx,QWORD PTR [rip+0x232ef]        # 0x140054200
   140030f11:	mov    rdi,QWORD PTR [rbx+0x30]
   140030f15:	mov    ecx,DWORD PTR [rdi]
   140030f17:	cmp    DWORD PTR [rbx],ecx
   140030f19:	je     0x140030f20
   140030f1b:	call   0x140031410
   140030f20:	mov    ecx,DWORD PTR [rdi+0x4]
   140030f23:	cmp    DWORD PTR [rbx+0x4],ecx
   140030f26:	je     0x140030f2d
   140030f28:	call   0x140031500
   140030f2d:	movzx  eax,BYTE PTR [rdi+0x8]
   140030f31:	lea    rcx,[rdi+0x8]
   140030f35:	cmp    BYTE PTR [rbx+0x8],al
   140030f38:	jne    0x140030f4c
   140030f3a:	movzx  eax,BYTE PTR [rcx+0x1]
   140030f3e:	cmp    BYTE PTR [rbx+0x9],al
   140030f41:	jne    0x140030f4c
   140030f43:	movzx  eax,BYTE PTR [rcx+0x2]
   140030f47:	cmp    BYTE PTR [rbx+0xa],al
   140030f4a:	je     0x140030f51
   140030f4c:	call   0x140031280
   140030f51:	mov    eax,DWORD PTR [rdi+0x18]
   140030f54:	lea    rcx,[rdi+0x10]
   140030f58:	cmp    DWORD PTR [rbx+0x18],eax
   140030f5b:	jne    0x140030f8a
   140030f5d:	mov    eax,DWORD PTR [rcx+0x4]
   140030f60:	cmp    DWORD PTR [rbx+0x14],eax
   140030f63:	jne    0x140030f8a
   140030f65:	mov    eax,DWORD PTR [rcx+0xc]
   140030f68:	cmp    DWORD PTR [rbx+0x1c],eax
   140030f6b:	jne    0x140030f8a
   140030f6d:	mov    eax,DWORD PTR [rcx+0x10]
   140030f70:	cmp    DWORD PTR [rbx+0x20],eax
   140030f73:	jne    0x140030f8a
   140030f75:	movsd  xmm0,QWORD PTR [rbx+0x28]
   140030f7a:	ucomisd xmm0,QWORD PTR [rcx+0x18]
   140030f7f:	jp     0x140030f8a
   140030f81:	jne    0x140030f8a
   140030f83:	mov    eax,DWORD PTR [rcx]
   140030f85:	cmp    DWORD PTR [rbx+0x10],eax
   140030f88:	je     0x140030f8f
   140030f8a:	call   0x140030fe0
   140030f8f:	mov    rcx,rbx
   140030f92:	call   QWORD PTR [rip+0xc308]        # 0x14003d2a0
   140030f98:	mov    rbx,QWORD PTR [rsp+0x30]
   140030f9d:	mov    QWORD PTR [rip+0x2325c],rdi        # 0x140054200
   140030fa4:	add    rsp,0x20
   140030fa8:	pop    rdi
   140030fa9:	ret    
   140030faa:	int3   
   140030fab:	int3   
   140030fac:	int3   
   140030fad:	int3   
   140030fae:	int3   
   140030faf:	int3   
   140030fb0:	sub    rsp,0x28
   140030fb4:	mov    rcx,QWORD PTR [rip+0x23245]        # 0x140054200
   140030fbb:	call   0x140030b20
   140030fc0:	mov    rcx,QWORD PTR [rip+0x23239]        # 0x140054200
   140030fc7:	mov    QWORD PTR [rax+0x30],rcx
   140030fcb:	mov    QWORD PTR [rip+0x2322e],rax        # 0x140054200
   140030fd2:	add    rsp,0x28
   140030fd6:	ret    
   140030fd7:	int3   
   140030fd8:	int3   
   140030fd9:	int3   
   140030fda:	int3   
   140030fdb:	int3   
   140030fdc:	int3   
   140030fdd:	int3   
   140030fde:	int3   
   140030fdf:	int3   
   140030fe0:	mov    QWORD PTR [rsp+0x18],rbx
   140030fe5:	push   rbp
   140030fe6:	sub    rsp,0xd0
   140030fed:	movsxd r8,DWORD PTR [rip+0x231fc]        # 0x1400541f0
   140030ff4:	mov    rbx,rcx
   140030ff7:	lea    rbp,[rip+0x231b2]        # 0x1400541b0
   140030ffe:	mov    edx,DWORD PTR [rbx+0x8]
   140031001:	mov    rcx,r8
   140031004:	shl    rcx,0x5
   140031008:	add    rcx,rbp
   14003100b:	cmp    edx,DWORD PTR [rcx+0x8]
   14003100e:	jne    0x140031040
   140031010:	mov    eax,DWORD PTR [rcx+0x4]
   140031013:	cmp    DWORD PTR [rbx+0x4],eax
   140031016:	jne    0x140031040
   140031018:	mov    eax,DWORD PTR [rcx+0xc]
   14003101b:	cmp    DWORD PTR [rbx+0xc],eax
   14003101e:	jne    0x140031040
   140031020:	mov    eax,DWORD PTR [rcx+0x10]
   140031023:	cmp    DWORD PTR [rbx+0x10],eax
   140031026:	jne    0x140031040
   140031028:	movsd  xmm0,QWORD PTR [rbx+0x18]
   14003102d:	ucomisd xmm0,QWORD PTR [rcx+0x18]
   140031032:	jp     0x140031040
   140031034:	jne    0x140031040
   140031036:	mov    eax,DWORD PTR [rcx]
   140031038:	cmp    DWORD PTR [rbx],eax
   14003103a:	je     0x1400311a4
   140031040:	mov    QWORD PTR [rsp+0xe0],rsi
   140031048:	xor    esi,esi
   14003104a:	test   r8d,r8d
   14003104d:	sete   sil
   140031051:	mov    QWORD PTR [rsp+0xe8],rdi
   140031059:	movsxd rdi,esi
   14003105c:	shl    rdi,0x5
   140031060:	cmp    edx,DWORD PTR [rdi+rbp*1+0x8]
   140031064:	jne    0x14003109b
   140031066:	mov    eax,DWORD PTR [rdi+rbp*1+0x4]
   14003106a:	cmp    DWORD PTR [rbx+0x4],eax
   14003106d:	jne    0x14003109b
   14003106f:	mov    eax,DWORD PTR [rdi+rbp*1+0xc]
   140031073:	cmp    DWORD PTR [rbx+0xc],eax
   140031076:	jne    0x14003109b
   140031078:	mov    eax,DWORD PTR [rdi+rbp*1+0x10]
   14003107c:	cmp    DWORD PTR [rbx+0x10],eax
   14003107f:	jne    0x14003109b
   140031081:	movsd  xmm0,QWORD PTR [rbx+0x18]
   140031086:	ucomisd xmm0,QWORD PTR [rdi+rbp*1+0x18]
   14003108c:	jp     0x14003109b
   14003108e:	jne    0x14003109b
   140031090:	mov    eax,DWORD PTR [rdi+rbp*1]
   140031093:	cmp    DWORD PTR [rbx],eax
   140031095:	je     0x140031131
   14003109b:	cmp    DWORD PTR [rbx+0x4],0x0
   14003109f:	mov    r9d,DWORD PTR [rbx]
   1400310a2:	lea    rax,[rip+0x10bb7]        # 0x140041c60
   1400310a9:	lea    r8,[rip+0x10bb4]        # 0x140041c64
   1400310b0:	lea    rcx,[rsp+0x50]
   1400310b5:	je     0x1400310e3
   1400310b7:	movsd  xmm0,QWORD PTR [rip+0x230a9]        # 0x140054168
   1400310bf:	test   esi,esi
   1400310c1:	cmovne r8,rax
   1400310c5:	mov    rax,QWORD PTR [rip+0x20f84]        # 0x140052050
   1400310cc:	mov    QWORD PTR [rsp+0x40],rax
   1400310d1:	mov    DWORD PTR [rsp+0x38],edx
   1400310d5:	lea    rdx,[rip+0x10b8c]        # 0x140041c68
   1400310dc:	mulsd  xmm0,QWORD PTR [rbx+0x18]
   1400310e1:	jmp    0x14003110d
   1400310e3:	movsd  xmm0,QWORD PTR [rbx+0x18]
   1400310e8:	test   esi,esi
   1400310ea:	cmovne r8,rax
   1400310ee:	mov    rax,QWORD PTR [rip+0x20f5b]        # 0x140052050
   1400310f5:	mov    QWORD PTR [rsp+0x40],rax
   1400310fa:	mov    DWORD PTR [rsp+0x38],edx
   1400310fe:	lea    rdx,[rip+0x10b8b]        # 0x140041c90
   140031105:	divsd  xmm0,QWORD PTR [rip+0x2305b]        # 0x140054168
   14003110d:	mov    eax,DWORD PTR [rbx+0xc]
   140031110:	mov    DWORD PTR [rsp+0x30],eax
   140031114:	mov    eax,DWORD PTR [rbx+0x10]
   140031117:	mov    DWORD PTR [rsp+0x28],eax
   14003111b:	movsd  QWORD PTR [rsp+0x20],xmm0
   140031121:	call   QWORD PTR [rip+0xbf89]        # 0x14003d0b0
   140031127:	lea    rcx,[rsp+0x50]
   14003112c:	call   0x140030d70
   140031131:	mov    r9,QWORD PTR [rip+0x20f18]        # 0x140052050
   140031138:	lea    rax,[rip+0x10b75]        # 0x140041cb4
   14003113f:	lea    r8,[rip+0x10b72]        # 0x140041cb8
   140031146:	test   esi,esi
   140031148:	lea    rdx,[rip+0x10b6d]        # 0x140041cbc
   14003114f:	lea    rcx,[rsp+0x50]
   140031154:	cmovne r8,rax
   140031158:	call   QWORD PTR [rip+0xbf52]        # 0x14003d0b0
   14003115e:	lea    rcx,[rsp+0x50]
   140031163:	call   0x140030d70
   140031168:	mov    rax,QWORD PTR [rip+0x23091]        # 0x140054200
   14003116f:	mov    DWORD PTR [rip+0x2307b],esi        # 0x1400541f0
   140031175:	movups xmm0,XMMWORD PTR [rbx]
   140031178:	movups XMMWORD PTR [rdi+rbp*1],xmm0
   14003117c:	movups xmm1,XMMWORD PTR [rbx+0x10]
   140031180:	mov    rsi,QWORD PTR [rsp+0xe0]
   140031188:	movups XMMWORD PTR [rdi+rbp*1+0x10],xmm1
   14003118d:	movups xmm0,XMMWORD PTR [rbx]
   140031190:	mov    rdi,QWORD PTR [rsp+0xe8]
   140031198:	movups XMMWORD PTR [rax+0x10],xmm0
   14003119c:	movups xmm1,XMMWORD PTR [rbx+0x10]
   1400311a0:	movups XMMWORD PTR [rax+0x20],xmm1
   1400311a4:	mov    rbx,QWORD PTR [rsp+0xf0]
   1400311ac:	add    rsp,0xd0
   1400311b3:	pop    rbp
   1400311b4:	ret    
   1400311b5:	int3   
   1400311b6:	int3   
   1400311b7:	int3   
   1400311b8:	int3   
   1400311b9:	int3   
   1400311ba:	int3   
   1400311bb:	int3   
   1400311bc:	int3   
   1400311bd:	int3   
   1400311be:	int3   
   1400311bf:	int3   
   1400311c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400311c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400311ca:	push   rdi
   1400311cb:	sub    rsp,0x40
   1400311cf:	mov    r9,QWORD PTR [rip+0x20e7a]        # 0x140052050
   1400311d6:	mov    esi,ecx
   1400311d8:	mov    r8d,ecx
   1400311db:	lea    rcx,[rsp+0x20]
   1400311e0:	lea    rdx,[rip+0x10a5d]        # 0x140041c44
   1400311e7:	call   QWORD PTR [rip+0xbec3]        # 0x14003d0b0
   1400311ed:	cmp    BYTE PTR [rsp+0x20],0x0
   1400311f2:	lea    rbx,[rsp+0x20]
   1400311f7:	je     0x140031208
   1400311f9:	nop    DWORD PTR [rax+0x0]
   140031200:	inc    rbx
   140031203:	cmp    BYTE PTR [rbx],0x0
   140031206:	jne    0x140031200
   140031208:	mov    ecx,DWORD PTR [rip+0x22f8e]        # 0x14005419c
   14003120e:	lea    rax,[rsp+0x20]
   140031213:	mov    edi,ebx
   140031215:	sub    edi,eax
   140031217:	add    ecx,edi
   140031219:	cmp    ecx,0x50
   14003121c:	jle    0x14003123c
   14003121e:	mov    rdx,QWORD PTR [rip+0x242cb]        # 0x1400554f0
   140031225:	lea    rcx,[rip+0xc94c]        # 0x14003db78
   14003122c:	call   QWORD PTR [rip+0xbf0e]        # 0x14003d140
   140031232:	mov    DWORD PTR [rip+0x22f60],0x0        # 0x14005419c
   14003123c:	mov    rdx,QWORD PTR [rip+0x242ad]        # 0x1400554f0
   140031243:	lea    rcx,[rsp+0x20]
   140031248:	call   QWORD PTR [rip+0xbef2]        # 0x14003d140
   14003124e:	test   edi,edi
   140031250:	jle    0x140031264
   140031252:	cmp    BYTE PTR [rbx-0x1],0xa
   140031256:	jne    0x140031264
   140031258:	mov    DWORD PTR [rip+0x22f3a],0x0        # 0x14005419c
   140031262:	jmp    0x14003126a
   140031264:	add    DWORD PTR [rip+0x22f32],edi        # 0x14005419c
   14003126a:	mov    rbx,QWORD PTR [rsp+0x50]
   14003126f:	mov    DWORD PTR [rip+0x22f1b],esi        # 0x140054190
   140031275:	mov    rsi,QWORD PTR [rsp+0x58]
   14003127a:	add    rsp,0x40
   14003127e:	pop    rdi
   14003127f:	ret    
   140031280:	rex push rsi
   140031282:	sub    rsp,0x60
   140031286:	mov    rsi,rcx
   140031289:	mov    rcx,QWORD PTR [rip+0x22f70]        # 0x140054200
   140031290:	movzx  r8d,BYTE PTR [rsi]
   140031294:	cmp    r8b,BYTE PTR [rcx+0x8]
   140031298:	jne    0x1400312b0
   14003129a:	movzx  eax,BYTE PTR [rcx+0x9]
   14003129e:	cmp    BYTE PTR [rsi+0x1],al
   1400312a1:	jne    0x1400312b0
   1400312a3:	movzx  eax,BYTE PTR [rcx+0xa]
   1400312a7:	cmp    BYTE PTR [rsi+0x2],al
   1400312aa:	je     0x14003140a
   1400312b0:	mov    edx,DWORD PTR [rip+0x22ede]        # 0x140054194
   1400312b6:	mov    QWORD PTR [rsp+0x80],rdi
   1400312be:	xor    edi,edi
   1400312c0:	test   edx,edx
   1400312c2:	jle    0x1400312f1
   1400312c4:	mov    rax,QWORD PTR [rip+0x22f2d]        # 0x1400541f8
   1400312cb:	add    rax,0x2
   1400312cf:	nop
   1400312d0:	cmp    r8b,BYTE PTR [rax-0x2]
   1400312d4:	jne    0x1400312e7
   1400312d6:	movzx  ecx,BYTE PTR [rax-0x1]
   1400312da:	cmp    BYTE PTR [rsi+0x1],cl
   1400312dd:	jne    0x1400312e7
   1400312df:	movzx  ecx,BYTE PTR [rax]
   1400312e2:	cmp    BYTE PTR [rsi+0x2],cl
   1400312e5:	je     0x1400312f1
   1400312e7:	inc    edi
   1400312e9:	add    rax,0x3
   1400312ed:	cmp    edi,edx
   1400312ef:	jl     0x1400312d0
   1400312f1:	cmp    edi,edx
   1400312f3:	jne    0x1400313e6
   1400312f9:	mov    QWORD PTR [rsp+0x70],rbx
   1400312fe:	mov    QWORD PTR [rsp+0x78],rbp
   140031303:	cmp    edx,0x20
   140031306:	jne    0x14003130c
   140031308:	dec    edi
   14003130a:	jmp    0x140031314
   14003130c:	inc    edx
   14003130e:	mov    DWORD PTR [rip+0x22e80],edx        # 0x140054194
   140031314:	movzx  ecx,BYTE PTR [rsi+0x2]
   140031318:	movzx  edx,BYTE PTR [rsi+0x1]
   14003131c:	mov    rax,QWORD PTR [rip+0x20d2d]        # 0x140052050
   140031323:	mov    QWORD PTR [rsp+0x30],rax
   140031328:	mov    DWORD PTR [rsp+0x28],ecx
   14003132c:	mov    DWORD PTR [rsp+0x20],edx
   140031330:	movzx  r9d,r8b
   140031334:	lea    rdx,[rip+0x10915]        # 0x140041c50
   14003133b:	lea    rcx,[rsp+0x40]
   140031340:	mov    r8d,edi
   140031343:	call   QWORD PTR [rip+0xbd67]        # 0x14003d0b0
   140031349:	mov    rax,QWORD PTR [rip+0x22ea8]        # 0x1400541f8
   140031350:	movsxd rdx,edi
   140031353:	lea    rcx,[rax+rdx*2]
   140031357:	movzx  eax,WORD PTR [rsi]
   14003135a:	lea    rbx,[rsp+0x40]
   14003135f:	mov    WORD PTR [rdx+rcx*1],ax
   140031363:	movzx  eax,BYTE PTR [rsi+0x2]
   140031367:	mov    BYTE PTR [rdx+rcx*1+0x2],al
   14003136b:	cmp    BYTE PTR [rsp+0x40],0x0
   140031370:	je     0x14003137a
   140031372:	inc    rbx
   140031375:	cmp    BYTE PTR [rbx],0x0
   140031378:	jne    0x140031372
   14003137a:	mov    ecx,DWORD PTR [rip+0x22e1c]        # 0x14005419c
   140031380:	lea    rax,[rsp+0x40]
   140031385:	mov    ebp,ebx
   140031387:	sub    ebp,eax
   140031389:	add    ecx,ebp
   14003138b:	cmp    ecx,0x50
   14003138e:	jle    0x1400313ae
   140031390:	mov    rdx,QWORD PTR [rip+0x24159]        # 0x1400554f0
   140031397:	lea    rcx,[rip+0xc7da]        # 0x14003db78
   14003139e:	call   QWORD PTR [rip+0xbd9c]        # 0x14003d140
   1400313a4:	mov    DWORD PTR [rip+0x22dee],0x0        # 0x14005419c
   1400313ae:	mov    rdx,QWORD PTR [rip+0x2413b]        # 0x1400554f0
   1400313b5:	lea    rcx,[rsp+0x40]
   1400313ba:	call   QWORD PTR [rip+0xbd80]        # 0x14003d140
   1400313c0:	test   ebp,ebp
   1400313c2:	jle    0x1400313d6
   1400313c4:	cmp    BYTE PTR [rbx-0x1],0xa
   1400313c8:	jne    0x1400313d6
   1400313ca:	mov    DWORD PTR [rip+0x22dc8],0x0        # 0x14005419c
   1400313d4:	jmp    0x1400313dc
   1400313d6:	add    DWORD PTR [rip+0x22dc0],ebp        # 0x14005419c
   1400313dc:	mov    rbx,QWORD PTR [rsp+0x70]
   1400313e1:	mov    rbp,QWORD PTR [rsp+0x78]
   1400313e6:	mov    ecx,edi
   1400313e8:	call   0x1400311c0
   1400313ed:	movzx  eax,WORD PTR [rsi]
   1400313f0:	mov    rcx,QWORD PTR [rip+0x22e09]        # 0x140054200
   1400313f7:	mov    rdi,QWORD PTR [rsp+0x80]
   1400313ff:	mov    WORD PTR [rcx+0x8],ax
   140031403:	movzx  eax,BYTE PTR [rsi+0x2]
   140031407:	mov    BYTE PTR [rcx+0xa],al
   14003140a:	add    rsp,0x60
   14003140e:	pop    rsi
   14003140f:	ret    
   140031410:	mov    QWORD PTR [rsp+0x8],rbx
   140031415:	push   rdi
   140031416:	sub    rsp,0x40
   14003141a:	mov    r9,QWORD PTR [rip+0x20c2f]        # 0x140052050
   140031421:	test   ecx,ecx
   140031423:	lea    rdx,[rip+0x1089e]        # 0x140041cc8
   14003142a:	lea    rcx,[rsp+0x20]
   14003142f:	je     0x140031453
   140031431:	movsd  xmm2,QWORD PTR [rip+0x10b1f]        # 0x140041f58
   140031439:	movq   r8,xmm2
   14003143e:	call   QWORD PTR [rip+0xbc6c]        # 0x14003d0b0
   140031444:	mov    rax,QWORD PTR [rip+0x22db5]        # 0x140054200
   14003144b:	mov    DWORD PTR [rax],0x1
   140031451:	jmp    0x140031473
   140031453:	movsd  xmm2,QWORD PTR [rip+0x10af5]        # 0x140041f50
   14003145b:	movq   r8,xmm2
   140031460:	call   QWORD PTR [rip+0xbc4a]        # 0x14003d0b0
   140031466:	mov    rax,QWORD PTR [rip+0x22d93]        # 0x140054200
   14003146d:	mov    DWORD PTR [rax],0x0
   140031473:	cmp    BYTE PTR [rsp+0x20],0x0
   140031478:	lea    rbx,[rsp+0x20]
   14003147d:	je     0x140031488
   14003147f:	nop
   140031480:	inc    rbx
   140031483:	cmp    BYTE PTR [rbx],0x0
   140031486:	jne    0x140031480
   140031488:	mov    ecx,DWORD PTR [rip+0x22d0e]        # 0x14005419c
   14003148e:	lea    rax,[rsp+0x20]
   140031493:	mov    edi,ebx
   140031495:	sub    edi,eax
   140031497:	add    ecx,edi
   140031499:	cmp    ecx,0x50
   14003149c:	jle    0x1400314bc
   14003149e:	mov    rdx,QWORD PTR [rip+0x2404b]        # 0x1400554f0
   1400314a5:	lea    rcx,[rip+0xc6cc]        # 0x14003db78
   1400314ac:	call   QWORD PTR [rip+0xbc8e]        # 0x14003d140
   1400314b2:	mov    DWORD PTR [rip+0x22ce0],0x0        # 0x14005419c
   1400314bc:	mov    rdx,QWORD PTR [rip+0x2402d]        # 0x1400554f0
   1400314c3:	lea    rcx,[rsp+0x20]
   1400314c8:	call   QWORD PTR [rip+0xbc72]        # 0x14003d140
   1400314ce:	test   edi,edi
   1400314d0:	jle    0x1400314ed
   1400314d2:	cmp    BYTE PTR [rbx-0x1],0xa
   1400314d6:	jne    0x1400314ed
   1400314d8:	mov    DWORD PTR [rip+0x22cba],0x0        # 0x14005419c
   1400314e2:	mov    rbx,QWORD PTR [rsp+0x50]
   1400314e7:	add    rsp,0x40
   1400314eb:	pop    rdi
   1400314ec:	ret    
   1400314ed:	add    DWORD PTR [rip+0x22ca9],edi        # 0x14005419c
   1400314f3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400314f8:	add    rsp,0x40
   1400314fc:	pop    rdi
   1400314fd:	ret    
   1400314fe:	int3   
   1400314ff:	int3   
   140031500:	sub    rsp,0x28
   140031504:	mov    rax,QWORD PTR [rip+0x22cf5]        # 0x140054200
   14003150b:	mov    DWORD PTR [rax+0x4],ecx
   14003150e:	test   ecx,ecx
   140031510:	je     0x140031530
   140031512:	dec    ecx
   140031514:	je     0x140031527
   140031516:	dec    ecx
   140031518:	jne    0x1400315e7
   14003151e:	lea    r8,[rip+0x107b7]        # 0x140041cdc
   140031525:	jmp    0x140031537
   140031527:	lea    r8,[rip+0x107aa]        # 0x140041cd8
   14003152e:	jmp    0x140031537
   140031530:	lea    r8,[rip+0x1079d]        # 0x140041cd4
   140031537:	mov    r9,QWORD PTR [rip+0x20b12]        # 0x140052050
   14003153e:	lea    rdx,[rip+0x1079b]        # 0x140041ce0
   140031545:	lea    rcx,[rsp+0x38]
   14003154a:	mov    QWORD PTR [rsp+0x30],rbx
   14003154f:	mov    QWORD PTR [rsp+0x20],rdi
   140031554:	call   QWORD PTR [rip+0xbb56]        # 0x14003d0b0
   14003155a:	cmp    BYTE PTR [rsp+0x38],0x0
   14003155f:	lea    rbx,[rsp+0x38]
   140031564:	je     0x14003156e
   140031566:	inc    rbx
   140031569:	cmp    BYTE PTR [rbx],0x0
   14003156c:	jne    0x140031566
   14003156e:	mov    ecx,DWORD PTR [rip+0x22c28]        # 0x14005419c
   140031574:	lea    rax,[rsp+0x38]
   140031579:	mov    edi,ebx
   14003157b:	sub    edi,eax
   14003157d:	add    ecx,edi
   14003157f:	cmp    ecx,0x50
   140031582:	jle    0x1400315a2
   140031584:	mov    rdx,QWORD PTR [rip+0x23f65]        # 0x1400554f0
   14003158b:	lea    rcx,[rip+0xc5e6]        # 0x14003db78
   140031592:	call   QWORD PTR [rip+0xbba8]        # 0x14003d140
   140031598:	mov    DWORD PTR [rip+0x22bfa],0x0        # 0x14005419c
   1400315a2:	mov    rdx,QWORD PTR [rip+0x23f47]        # 0x1400554f0
   1400315a9:	lea    rcx,[rsp+0x38]
   1400315ae:	call   QWORD PTR [rip+0xbb8c]        # 0x14003d140
   1400315b4:	test   edi,edi
   1400315b6:	jle    0x1400315d7
   1400315b8:	cmp    BYTE PTR [rbx-0x1],0xa
   1400315bc:	jne    0x1400315d7
   1400315be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400315c3:	mov    rdi,QWORD PTR [rsp+0x20]
   1400315c8:	mov    DWORD PTR [rip+0x22bca],0x0        # 0x14005419c
   1400315d2:	add    rsp,0x28
   1400315d6:	ret    
   1400315d7:	add    DWORD PTR [rip+0x22bbf],edi        # 0x14005419c
   1400315dd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400315e2:	mov    rdi,QWORD PTR [rsp+0x20]
   1400315e7:	add    rsp,0x28
   1400315eb:	ret    
   1400315ec:	int3   
   1400315ed:	int3   
   1400315ee:	int3   
   1400315ef:	int3   
   1400315f0:	mov    rcx,QWORD PTR [rip+0x23ef9]        # 0x1400554f0
   1400315f7:	lea    rdx,[rip+0x1110a]        # 0x140042708
   1400315fe:	rex.W jmp QWORD PTR [rip+0xbcbb]        # 0x14003d2c0
   140031605:	int3   
   140031606:	int3   
   140031607:	int3   
   140031608:	int3   
   140031609:	int3   
   14003160a:	int3   
   14003160b:	int3   
   14003160c:	int3   
   14003160d:	int3   
   14003160e:	int3   
   14003160f:	int3   
   140031610:	rex push rbx
   140031612:	sub    rsp,0x30
   140031616:	cmp    DWORD PTR [rip+0x20c4b],0x0        # 0x140052268
   14003161d:	movups xmm0,XMMWORD PTR [rdx]
   140031620:	mov    rbx,rcx
   140031623:	movups XMMWORD PTR [rip+0x22c06],xmm0        # 0x140054230
   14003162a:	je     0x1400316f1
   140031630:	mov    rdx,QWORD PTR [rip+0x22bf9]        # 0x140054230
   140031637:	mov    r8,QWORD PTR [rip+0x22bfa]        # 0x140054238
   14003163e:	mov    r9,r8
   140031641:	sub    r8d,edx
   140031644:	mov    rax,rdx
   140031647:	shr    r9,0x20
   14003164b:	shr    rax,0x20
   14003164f:	mov    ecx,r9d
   140031652:	sub    ecx,eax
   140031654:	mov    DWORD PTR [rsp+0x28],ecx
   140031658:	mov    rcx,QWORD PTR [rip+0x23e91]        # 0x1400554f0
   14003165f:	mov    DWORD PTR [rsp+0x20],r8d
   140031664:	mov    r8d,edx
   140031667:	lea    rdx,[rip+0x110b2]        # 0x140042720
   14003166e:	call   QWORD PTR [rip+0xbc4c]        # 0x14003d2c0
   140031674:	lea    rax,[rip+0x10921]        # 0x140041f9c
   14003167b:	lea    rdx,[rip+0xd00e]        # 0x14003e690
   140031682:	mov    rcx,rbx
   140031685:	mov    QWORD PTR [rip+0x22bbc],rax        # 0x140054248
   14003168c:	mov    DWORD PTR [rip+0x22b96],0x0        # 0x14005422c
   140031696:	mov    BYTE PTR [rip+0x22ba3],0x0        # 0x140054240
   14003169d:	mov    BYTE PTR [rip+0x22bac],0x0        # 0x140054250
   1400316a4:	mov    WORD PTR [rip+0x22ba5],0xf00        # 0x140054252
   1400316ad:	mov    BYTE PTR [rip+0x22ba0],0x1        # 0x140054254
   1400316b4:	call   0x140027500
   1400316b9:	lea    r8,[rip+0xbd58]        # 0x14003d418
   1400316c0:	mov    rdx,rax
   1400316c3:	mov    rcx,rbx
   1400316c6:	call   0x14001c3e0
   1400316cb:	cmp    BYTE PTR [rax],0x0
   1400316ce:	je     0x1400316e7
   1400316d0:	mov    rcx,QWORD PTR [rip+0x23e19]        # 0x1400554f0
   1400316d7:	lea    rdx,[rip+0x1099e]        # 0x14004207c
   1400316de:	mov    r8,rax
   1400316e1:	call   QWORD PTR [rip+0xbbd9]        # 0x14003d2c0
   1400316e7:	mov    DWORD PTR [rip+0x20b77],0x0        # 0x140052268
   1400316f1:	add    rsp,0x30
   1400316f5:	pop    rbx
   1400316f6:	ret    
   1400316f7:	int3   
   1400316f8:	int3   
   1400316f9:	int3   
   1400316fa:	int3   
   1400316fb:	int3   
   1400316fc:	int3   
   1400316fd:	int3   
   1400316fe:	int3   
   1400316ff:	int3   
   140031700:	ret    0x0
   140031703:	int3   
   140031704:	int3   
   140031705:	int3   
   140031706:	int3   
   140031707:	int3   
   140031708:	int3   
   140031709:	int3   
   14003170a:	int3   
   14003170b:	int3   
   14003170c:	int3   
   14003170d:	int3   
   14003170e:	int3   
   14003170f:	int3   
   140031710:	sub    rsp,0x28
   140031714:	mov    rcx,QWORD PTR [rip+0x23dd5]        # 0x1400554f0
   14003171b:	movsd  QWORD PTR [rip+0x22afd],xmm2        # 0x140054220
   140031723:	mulsd  xmm2,QWORD PTR [rip+0xd13d]        # 0x14003e868
   14003172b:	lea    rdx,[rip+0x1100e]        # 0x140042740
   140031732:	mov    DWORD PTR [rip+0x22aef],r9d        # 0x140054228
   140031739:	movq   r8,xmm2
   14003173e:	call   QWORD PTR [rip+0xbb7c]        # 0x14003d2c0
   140031744:	add    rsp,0x28
   140031748:	ret    
   140031749:	int3   
   14003174a:	int3   
   14003174b:	int3   
   14003174c:	int3   
   14003174d:	int3   
   14003174e:	int3   
   14003174f:	int3   
   140031750:	ret    0x0
   140031753:	int3   
   140031754:	int3   
   140031755:	int3   
   140031756:	int3   
   140031757:	int3   
   140031758:	int3   
   140031759:	int3   
   14003175a:	int3   
   14003175b:	int3   
   14003175c:	int3   
   14003175d:	int3   
   14003175e:	int3   
   14003175f:	int3   
   140031760:	ret    0x0
   140031763:	int3   
   140031764:	int3   
   140031765:	int3   
   140031766:	int3   
   140031767:	int3   
   140031768:	int3   
   140031769:	int3   
   14003176a:	int3   
   14003176b:	int3   
   14003176c:	int3   
   14003176d:	int3   
   14003176e:	int3   
   14003176f:	int3   
   140031770:	ret    0x0
   140031773:	int3   
   140031774:	int3   
   140031775:	int3   
   140031776:	int3   
   140031777:	int3   
   140031778:	int3   
   140031779:	int3   
   14003177a:	int3   
   14003177b:	int3   
   14003177c:	int3   
   14003177d:	int3   
   14003177e:	int3   
   14003177f:	int3   
   140031780:	ret    0x0
   140031783:	int3   
   140031784:	int3   
   140031785:	int3   
   140031786:	int3   
   140031787:	int3   
   140031788:	int3   
   140031789:	int3   
   14003178a:	int3   
   14003178b:	int3   
   14003178c:	int3   
   14003178d:	int3   
   14003178e:	int3   
   14003178f:	int3   
   140031790:	ret    0x0
   140031793:	int3   
   140031794:	int3   
   140031795:	int3   
   140031796:	int3   
   140031797:	int3   
   140031798:	int3   
   140031799:	int3   
   14003179a:	int3   
   14003179b:	int3   
   14003179c:	int3   
   14003179d:	int3   
   14003179e:	int3   
   14003179f:	int3   
   1400317a0:	ret    0x0
   1400317a3:	int3   
   1400317a4:	int3   
   1400317a5:	int3   
   1400317a6:	int3   
   1400317a7:	int3   
   1400317a8:	int3   
   1400317a9:	int3   
   1400317aa:	int3   
   1400317ab:	int3   
   1400317ac:	int3   
   1400317ad:	int3   
   1400317ae:	int3   
   1400317af:	int3   
   1400317b0:	ret    0x0
   1400317b3:	int3   
   1400317b4:	int3   
   1400317b5:	int3   
   1400317b6:	int3   
   1400317b7:	int3   
   1400317b8:	int3   
   1400317b9:	int3   
   1400317ba:	int3   
   1400317bb:	int3   
   1400317bc:	int3   
   1400317bd:	int3   
   1400317be:	int3   
   1400317bf:	int3   
   1400317c0:	rex push rbx
   1400317c2:	sub    rsp,0x20
   1400317c6:	mov    r8,QWORD PTR [rcx+0x10]
   1400317ca:	mov    rbx,rcx
   1400317cd:	mov    rcx,QWORD PTR [rip+0x23d1c]        # 0x1400554f0
   1400317d4:	lea    rdx,[rip+0x108a1]        # 0x14004207c
   1400317db:	call   QWORD PTR [rip+0xbadf]        # 0x14003d2c0
   1400317e1:	mov    rdx,QWORD PTR [rip+0x23bd0]        # 0x1400553b8
   1400317e8:	lea    r8,[rip+0xbc29]        # 0x14003d418
   1400317ef:	mov    rcx,rbx
   1400317f2:	call   0x14001c3e0
   1400317f7:	cmp    BYTE PTR [rax],0x0
   1400317fa:	je     0x140031819
   1400317fc:	mov    rcx,QWORD PTR [rip+0x23ced]        # 0x1400554f0
   140031803:	lea    rdx,[rip+0x10872]        # 0x14004207c
   14003180a:	mov    r8,rax
   14003180d:	add    rsp,0x20
   140031811:	pop    rbx
   140031812:	rex.W jmp QWORD PTR [rip+0xbaa7]        # 0x14003d2c0
   140031819:	add    rsp,0x20
   14003181d:	pop    rbx
   14003181e:	ret    
   14003181f:	int3   
   140031820:	ret    0x0
   140031823:	int3   
   140031824:	int3   
   140031825:	int3   
   140031826:	int3   
   140031827:	int3   
   140031828:	int3   
   140031829:	int3   
   14003182a:	int3   
   14003182b:	int3   
   14003182c:	int3   
   14003182d:	int3   
   14003182e:	int3   
   14003182f:	int3   
   140031830:	rex push rbx
   140031832:	sub    rsp,0x20
   140031836:	mov    r9,QWORD PTR [rcx+0x10]
   14003183a:	mov    r8,QWORD PTR [rcx+0x18]
   14003183e:	mov    rbx,rcx
   140031841:	mov    rcx,QWORD PTR [rip+0x23ca8]        # 0x1400554f0
   140031848:	mov    r9,QWORD PTR [r9+0x10]
   14003184c:	mov    r8,QWORD PTR [r8+0x10]
   140031850:	lea    rdx,[rip+0x10f39]        # 0x140042790
   140031857:	call   QWORD PTR [rip+0xba63]        # 0x14003d2c0
   14003185d:	mov    rdx,QWORD PTR [rip+0x23ac4]        # 0x140055328
   140031864:	lea    r8,[rip+0xbbad]        # 0x14003d418
   14003186b:	mov    rcx,rbx
   14003186e:	call   0x14001c3e0
   140031873:	cmp    BYTE PTR [rax],0x0
   140031876:	je     0x140031895
   140031878:	mov    rcx,QWORD PTR [rip+0x23c71]        # 0x1400554f0
   14003187f:	lea    rdx,[rip+0x107f6]        # 0x14004207c
   140031886:	mov    r8,rax
   140031889:	add    rsp,0x20
   14003188d:	pop    rbx
   14003188e:	rex.W jmp QWORD PTR [rip+0xba2b]        # 0x14003d2c0
   140031895:	add    rsp,0x20
   140031899:	pop    rbx
   14003189a:	ret    
   14003189b:	int3   
   14003189c:	int3   
   14003189d:	int3   
   14003189e:	int3   
   14003189f:	int3   
   1400318a0:	ret    0x0
   1400318a3:	int3   
   1400318a4:	int3   
   1400318a5:	int3   
   1400318a6:	int3   
   1400318a7:	int3   
   1400318a8:	int3   
   1400318a9:	int3   
   1400318aa:	int3   
   1400318ab:	int3   
   1400318ac:	int3   
   1400318ad:	int3   
   1400318ae:	int3   
   1400318af:	int3   
   1400318b0:	sub    rsp,0x28
   1400318b4:	mov    edx,DWORD PTR [rip+0x22972]        # 0x14005422c
   1400318ba:	lea    eax,[rdx+0x1]
   1400318bd:	cmp    eax,0x4
   1400318c0:	jl     0x1400318e2
   1400318c2:	lea    rdx,[rip+0x10ed7]        # 0x1400427a0
   1400318c9:	lea    rcx,[rip+0x10f48]        # 0x140042818
   1400318d0:	mov    r8d,0x16d
   1400318d6:	call   QWORD PTR [rip+0xb7b4]        # 0x14003d090
   1400318dc:	mov    edx,DWORD PTR [rip+0x2294a]        # 0x14005422c
   1400318e2:	lea    r8,[rip+0x22957]        # 0x140054240
   1400318e9:	movsxd rcx,edx
   1400318ec:	mov    rax,rcx
   1400318ef:	shl    rcx,0x5
   1400318f3:	shl    rax,0x5
   1400318f7:	inc    edx
   1400318f9:	mov    DWORD PTR [rip+0x2292d],edx        # 0x14005422c
   1400318ff:	movups xmm0,XMMWORD PTR [rax+r8*1]
   140031904:	movups XMMWORD PTR [rcx+r8*1+0x20],xmm0
   14003190a:	movups xmm1,XMMWORD PTR [rax+r8*1+0x10]
   140031910:	movups XMMWORD PTR [rcx+r8*1+0x30],xmm1
   140031916:	add    rsp,0x28
   14003191a:	ret    
   14003191b:	int3   
   14003191c:	int3   
   14003191d:	int3   
   14003191e:	int3   
   14003191f:	int3   
   140031920:	mov    QWORD PTR [rsp+0x8],rbx
   140031925:	mov    QWORD PTR [rsp+0x10],rsi
   14003192a:	push   rdi
   14003192b:	sub    rsp,0x30
   14003192f:	mov    ecx,DWORD PTR [rip+0x228f7]        # 0x14005422c
   140031935:	lea    edi,[rcx-0x1]
   140031938:	test   ecx,ecx
   14003193a:	jg     0x14003195c
   14003193c:	lea    rdx,[rip+0x10e5d]        # 0x1400427a0
   140031943:	lea    rcx,[rip+0x10ef6]        # 0x140042840
   14003194a:	mov    r8d,0x176
   140031950:	call   QWORD PTR [rip+0xb73a]        # 0x14003d090
   140031956:	mov    ecx,DWORD PTR [rip+0x228d0]        # 0x14005422c
   14003195c:	lea    rsi,[rip+0xfffffffffffce69d]        # 0x140000000
   140031963:	movsxd rax,edi
   140031966:	shl    rax,0x5
   14003196a:	lea    rbx,[rsi+0x54240]
   140031971:	add    rbx,rax
   140031974:	movsxd rax,ecx
   140031977:	movsx  rdx,BYTE PTR [rbx]
   14003197b:	shl    rax,0x5
   14003197f:	movsx  eax,BYTE PTR [rax+rsi*1+0x54240]
   140031987:	cmp    eax,edx
   140031989:	je     0x1400319c4
   14003198b:	mov    rcx,QWORD PTR [rip+0x23b5e]        # 0x1400554f0
   140031992:	cmp    edx,0x8
   140031995:	jg     0x1400319a9
   140031997:	mov    r8d,edx
   14003199a:	lea    rdx,[rip+0x1068f]        # 0x140042030
   1400319a1:	call   QWORD PTR [rip+0xb919]        # 0x14003d2c0
   1400319a7:	jmp    0x1400319be
   1400319a9:	mov    r8,QWORD PTR [rsi+rdx*8+0x52280]
   1400319b1:	lea    rdx,[rip+0x10690]        # 0x140042048
   1400319b8:	call   QWORD PTR [rip+0xb902]        # 0x14003d2c0
   1400319be:	mov    ecx,DWORD PTR [rip+0x22868]        # 0x14005422c
   1400319c4:	movsxd rax,ecx
   1400319c7:	shl    rax,0x5
   1400319cb:	cmp    BYTE PTR [rax+rsi*1+0x54251],0x0
   1400319d3:	je     0x1400319e3
   1400319d5:	mov    rcx,rbx
   1400319d8:	call   0x140032f20
   1400319dd:	mov    ecx,DWORD PTR [rip+0x22849]        # 0x14005422c
   1400319e3:	movsxd rax,ecx
   1400319e6:	shl    rax,0x5
   1400319ea:	cmp    BYTE PTR [rax+rsi*1+0x54255],0x0
   1400319f2:	je     0x140031a1a
   1400319f4:	movsx  eax,BYTE PTR [rbx+0x14]
   1400319f8:	movsx  r9d,BYTE PTR [rbx+0x13]
   1400319fd:	movsx  r8d,BYTE PTR [rbx+0x12]
   140031a02:	mov    rcx,QWORD PTR [rip+0x23ae7]        # 0x1400554f0
   140031a09:	lea    rdx,[rip+0x10648]        # 0x140042058
   140031a10:	mov    DWORD PTR [rsp+0x20],eax
   140031a14:	call   QWORD PTR [rip+0xb8a6]        # 0x14003d2c0
   140031a1a:	mov    rbx,QWORD PTR [rsp+0x40]
   140031a1f:	mov    rsi,QWORD PTR [rsp+0x48]
   140031a24:	mov    DWORD PTR [rip+0x22802],edi        # 0x14005422c
   140031a2a:	add    rsp,0x30
   140031a2e:	pop    rdi
   140031a2f:	ret    
   140031a30:	mov    QWORD PTR [rsp+0x8],rbx
   140031a35:	mov    QWORD PTR [rsp+0x10],rbp
   140031a3a:	mov    QWORD PTR [rsp+0x18],rsi
   140031a3f:	push   rdi
   140031a40:	sub    rsp,0x30
   140031a44:	movsxd rbx,DWORD PTR [rip+0x227e1]        # 0x14005422c
   140031a4b:	lea    rbp,[rip+0x227ee]        # 0x140054240
   140031a52:	shl    rbx,0x5
   140031a56:	add    rbx,rbp
   140031a59:	movsd  QWORD PTR [rbx+0x18],xmm1
   140031a5e:	mov    BYTE PTR [rbx+0x11],0x1
   140031a62:	call   QWORD PTR [rip+0xb878]        # 0x14003d2e0
   140031a68:	mov    rcx,rax
   140031a6b:	mov    edx,0x2d
   140031a70:	mov    rsi,rax
   140031a73:	call   QWORD PTR [rip+0xb697]        # 0x14003d110
   140031a79:	mov    rdi,rax
   140031a7c:	test   rax,rax
   140031a7f:	je     0x140031ab6
   140031a81:	lea    rdx,[rip+0x10dc8]        # 0x140042850
   140031a88:	lea    rcx,[rax+0x1]
   140031a8c:	mov    BYTE PTR [rax],0x0
   140031a8f:	call   0x14001ca70
   140031a94:	test   eax,eax
   140031a96:	jne    0x140031a9e
   140031a98:	mov    BYTE PTR [rbx+0x10],0x2
   140031a9c:	jmp    0x140031ab6
   140031a9e:	lea    rdx,[rip+0x102eb]        # 0x140041d90
   140031aa5:	lea    rcx,[rdi+0x1]
   140031aa9:	call   0x14001ca70
   140031aae:	test   eax,eax
   140031ab0:	jne    0x140031ab6
   140031ab2:	mov    BYTE PTR [rbx+0x10],0x1
   140031ab6:	movsxd r8,DWORD PTR [rip+0x2276f]        # 0x14005422c
   140031abd:	mov    QWORD PTR [rbx+0x8],rsi
   140031ac1:	lea    rdx,[rip+0x10510]        # 0x140041fd8
   140031ac8:	shl    r8,0x5
   140031acc:	mov    r9,rdx
   140031acf:	movsx  ecx,BYTE PTR [r8+rbp*1+0x10]
   140031ad5:	dec    ecx
   140031ad7:	je     0x140031ae6
   140031ad9:	dec    ecx
   140031adb:	jne    0x140031aed
   140031add:	lea    rdx,[rip+0x10504]        # 0x140041fe8
   140031ae4:	jmp    0x140031aed
   140031ae6:	lea    r9,[rip+0x104f3]        # 0x140041fe0
   140031aed:	movsd  xmm3,QWORD PTR [rip+0x2272b]        # 0x140054220
   140031af5:	mov    rcx,QWORD PTR [rip+0x239f4]        # 0x1400554f0
   140031afc:	mov    QWORD PTR [rsp+0x28],rdx
   140031b01:	mov    QWORD PTR [rsp+0x20],r9
   140031b06:	lea    rdx,[rip+0x104e3]        # 0x140041ff0
   140031b0d:	mulsd  xmm3,QWORD PTR [r8+rbp*1+0x18]
   140031b14:	mov    r8,QWORD PTR [r8+rbp*1+0x8]
   140031b19:	movq   r9,xmm3
   140031b1e:	call   QWORD PTR [rip+0xb79c]        # 0x14003d2c0
   140031b24:	mov    rbx,QWORD PTR [rsp+0x40]
   140031b29:	mov    rbp,QWORD PTR [rsp+0x48]
   140031b2e:	mov    rsi,QWORD PTR [rsp+0x50]
   140031b33:	add    rsp,0x30
   140031b37:	pop    rdi
   140031b38:	ret    
   140031b39:	int3   
   140031b3a:	int3   
   140031b3b:	int3   
   140031b3c:	int3   
   140031b3d:	int3   
   140031b3e:	int3   
   140031b3f:	int3   
   140031b40:	mov    QWORD PTR [rsp+0x8],rbx
   140031b45:	mov    QWORD PTR [rsp+0x10],rsi
   140031b4a:	mov    QWORD PTR [rsp+0x18],rdi
   140031b4f:	push   r14
   140031b51:	sub    rsp,0x20
   140031b55:	mov    rsi,rcx
   140031b58:	call   0x140026140
   140031b5d:	xor    ebx,ebx
   140031b5f:	cmp    QWORD PTR [rip+0x2054a],rbx        # 0x1400520b0
   140031b66:	mov    rdi,rax
   140031b69:	je     0x140031b93
   140031b6b:	lea    r14,[rip+0x2053e]        # 0x1400520b0
   140031b72:	mov    rcx,r14
   140031b75:	mov    rcx,QWORD PTR [rcx]
   140031b78:	mov    rdx,rdi
   140031b7b:	call   0x14001ca70
   140031b80:	test   eax,eax
   140031b82:	je     0x140031bc3
   140031b84:	inc    ebx
   140031b86:	movsxd rax,ebx
   140031b89:	lea    rcx,[r14+rax*8]
   140031b8d:	cmp    QWORD PTR [rcx],0x0
   140031b91:	jne    0x140031b75
   140031b93:	call   QWORD PTR [rip+0xb737]        # 0x14003d2d0
   140031b99:	mov    r8,rsi
   140031b9c:	lea    rdx,[rip+0x10cb5]        # 0x140042858
   140031ba3:	lea    rcx,[rax+0x60]
   140031ba7:	call   QWORD PTR [rip+0xb713]        # 0x14003d2c0
   140031bad:	mov    rbx,QWORD PTR [rsp+0x30]
   140031bb2:	mov    rsi,QWORD PTR [rsp+0x38]
   140031bb7:	mov    rdi,QWORD PTR [rsp+0x40]
   140031bbc:	add    rsp,0x20
   140031bc0:	pop    r14
   140031bc2:	ret    
   140031bc3:	movsxd rax,DWORD PTR [rip+0x22662]        # 0x14005422c
   140031bca:	lea    rcx,[rip+0xfffffffffffce42f]        # 0x140000000
   140031bd1:	shl    rax,0x5
   140031bd5:	mov    BYTE PTR [rax+rcx*1+0x54240],bl
   140031bdc:	cmp    ebx,0x8
   140031bdf:	jg     0x140031bfa
   140031be1:	mov    rcx,QWORD PTR [rip+0x23908]        # 0x1400554f0
   140031be8:	lea    rdx,[rip+0x10441]        # 0x140042030
   140031bef:	mov    r8d,ebx
   140031bf2:	call   QWORD PTR [rip+0xb6c8]        # 0x14003d2c0
   140031bf8:	jmp    0x140031bad
   140031bfa:	movsxd r8,ebx
   140031bfd:	lea    rdx,[rip+0x10444]        # 0x140042048
   140031c04:	mov    r8,QWORD PTR [rcx+r8*8+0x52280]
   140031c0c:	mov    rcx,QWORD PTR [rip+0x238dd]        # 0x1400554f0
   140031c13:	jmp    0x140031ba7
   140031c15:	int3   
   140031c16:	int3   
   140031c17:	int3   
   140031c18:	int3   
   140031c19:	int3   
   140031c1a:	int3   
   140031c1b:	int3   
   140031c1c:	int3   
   140031c1d:	int3   
   140031c1e:	int3   
   140031c1f:	int3   
   140031c20:	mov    r11,rsp
   140031c23:	push   rdi
   140031c24:	sub    rsp,0x50
   140031c28:	movsxd rdi,DWORD PTR [rip+0x225fd]        # 0x14005422c
   140031c2f:	mov    QWORD PTR [r11+0x8],rbx
   140031c33:	mov    rbx,QWORD PTR [rcx]
   140031c36:	shl    rdi,0x5
   140031c3a:	lea    rax,[rip+0x225ff]        # 0x140054240
   140031c41:	mov    QWORD PTR [r11+0x18],rsi
   140031c45:	add    rdi,rax
   140031c48:	mov    rsi,rcx
   140031c4b:	test   rbx,rbx
   140031c4e:	je     0x140031dbc
   140031c54:	mov    QWORD PTR [r11+0x10],rbp
   140031c58:	mov    QWORD PTR [r11-0x10],r12
   140031c5c:	mov    QWORD PTR [r11-0x18],r13
   140031c60:	mov    QWORD PTR [r11-0x20],r14
   140031c64:	mov    QWORD PTR [r11-0x28],r15
   140031c68:	lea    rbp,[rip+0xc88d]        # 0x14003e4fc
   140031c6f:	lea    r15,[rip+0x10112]        # 0x140041d88
   140031c76:	lea    r14,[rip+0x10103]        # 0x140041d80
   140031c7d:	lea    r12,[rip+0xcdb0]        # 0x14003ea34
   140031c84:	lea    r13,[rip+0x10105]        # 0x140041d90
   140031c8b:	lea    rdx,[rip+0xcd8e]        # 0x14003ea20
   140031c92:	lea    rsi,[rsi+0x8]
   140031c96:	xor    ecx,ecx
   140031c98:	nop    DWORD PTR [rax+rax*1+0x0]
   140031ca0:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140031ca4:	inc    rcx
   140031ca7:	cmp    al,BYTE PTR [rcx+rbp*1-0x1]
   140031cab:	jne    0x140031cbc
   140031cad:	cmp    rcx,0x6
   140031cb1:	jne    0x140031ca0
   140031cb3:	mov    BYTE PTR [rdi+0x12],0x0
   140031cb7:	jmp    0x140031d93
   140031cbc:	xor    ecx,ecx
   140031cbe:	xchg   ax,ax
   140031cc0:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140031cc4:	inc    rcx
   140031cc7:	cmp    al,BYTE PTR [r14+rcx*1-0x1]
   140031ccc:	jne    0x140031cdd
   140031cce:	cmp    rcx,0x7
   140031cd2:	jne    0x140031cc0
   140031cd4:	mov    BYTE PTR [rdi+0x12],0xb
   140031cd8:	jmp    0x140031d93
   140031cdd:	xor    ecx,ecx
   140031cdf:	nop
   140031ce0:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140031ce4:	inc    rcx
   140031ce7:	cmp    al,BYTE PTR [r15+rcx*1-0x1]
   140031cec:	jne    0x140031cfd
   140031cee:	cmp    rcx,0x7
   140031cf2:	jne    0x140031ce0
   140031cf4:	mov    BYTE PTR [rdi+0x12],0x4
   140031cf8:	jmp    0x140031d93
   140031cfd:	xor    ecx,ecx
   140031cff:	nop
   140031d00:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140031d04:	inc    rcx
   140031d07:	cmp    al,BYTE PTR [r12+rcx*1-0x1]
   140031d0c:	jne    0x140031d1a
   140031d0e:	cmp    rcx,0x6
   140031d12:	jne    0x140031d00
   140031d14:	mov    BYTE PTR [rdi+0x12],0xf
   140031d18:	jmp    0x140031d93
   140031d1a:	xor    ecx,ecx
   140031d1c:	nop    DWORD PTR [rax+0x0]
   140031d20:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140031d24:	inc    rcx
   140031d27:	cmp    al,BYTE PTR [r13+rcx*1-0x1]
   140031d2c:	jne    0x140031d3a
   140031d2e:	cmp    rcx,0x5
   140031d32:	jne    0x140031d20
   140031d34:	mov    BYTE PTR [rdi+0x14],0x3
   140031d38:	jmp    0x140031d93
   140031d3a:	xor    ecx,ecx
   140031d3c:	nop    DWORD PTR [rax+0x0]
   140031d40:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140031d44:	inc    rcx
   140031d47:	cmp    al,BYTE PTR [rdx+rcx*1-0x1]
   140031d4b:	jne    0x140031d59
   140031d4d:	cmp    rcx,0x7
   140031d51:	jne    0x140031d40
   140031d53:	mov    BYTE PTR [rdi+0x13],0x0
   140031d57:	jmp    0x140031d93
   140031d59:	lea    rdx,[rip+0x10038]        # 0x140041d98
   140031d60:	mov    rcx,rbx
   140031d63:	call   0x14003bc96
   140031d68:	test   eax,eax
   140031d6a:	jne    0x140031d72
   140031d6c:	mov    BYTE PTR [rdi+0x13],0xf
   140031d70:	jmp    0x140031d8c
   140031d72:	call   QWORD PTR [rip+0xb558]        # 0x14003d2d0
   140031d78:	lea    rdx,[rip+0x10af9]        # 0x140042878
   140031d7f:	mov    r8,rbx
   140031d82:	lea    rcx,[rax+0x60]
   140031d86:	call   QWORD PTR [rip+0xb534]        # 0x14003d2c0
   140031d8c:	lea    rdx,[rip+0xcc8d]        # 0x14003ea20
   140031d93:	mov    BYTE PTR [rdi+0x15],0x1
   140031d97:	mov    rbx,QWORD PTR [rsi]
   140031d9a:	test   rbx,rbx
   140031d9d:	jne    0x140031c92
   140031da3:	mov    r15,QWORD PTR [rsp+0x30]
   140031da8:	mov    r14,QWORD PTR [rsp+0x38]
   140031dad:	mov    r13,QWORD PTR [rsp+0x40]
   140031db2:	mov    r12,QWORD PTR [rsp+0x48]
   140031db7:	mov    rbp,QWORD PTR [rsp+0x68]
   140031dbc:	cmp    BYTE PTR [rdi+0x15],0x0
   140031dc0:	mov    rsi,QWORD PTR [rsp+0x70]
   140031dc5:	mov    rbx,QWORD PTR [rsp+0x60]
   140031dca:	je     0x140031df2
   140031dcc:	movsx  eax,BYTE PTR [rdi+0x14]
   140031dd0:	movsx  r9d,BYTE PTR [rdi+0x13]
   140031dd5:	movsx  r8d,BYTE PTR [rdi+0x12]
   140031dda:	mov    rcx,QWORD PTR [rip+0x2370f]        # 0x1400554f0
   140031de1:	lea    rdx,[rip+0x10270]        # 0x140042058
   140031de8:	mov    DWORD PTR [rsp+0x20],eax
   140031dec:	call   QWORD PTR [rip+0xb4ce]        # 0x14003d2c0
   140031df2:	add    rsp,0x50
   140031df6:	pop    rdi
   140031df7:	ret    
   140031df8:	int3   
   140031df9:	int3   
   140031dfa:	int3   
   140031dfb:	int3   
   140031dfc:	int3   
   140031dfd:	int3   
   140031dfe:	int3   
   140031dff:	int3   
   140031e00:	rex push rbx
   140031e02:	sub    rsp,0x40
   140031e06:	movsxd rax,DWORD PTR [rip+0x2241f]        # 0x14005422c
   140031e0d:	mov    rbx,QWORD PTR [rdx]
   140031e10:	movd   xmm0,ecx
   140031e14:	shr    rcx,0x20
   140031e18:	shl    rax,0x5
   140031e1c:	cvtdq2pd xmm0,xmm0
   140031e20:	movd   xmm1,ecx
   140031e24:	movsd  QWORD PTR [rsp+0x30],xmm0
   140031e2a:	lea    rcx,[rip+0x22427]        # 0x140054258
   140031e31:	movsd  xmm0,QWORD PTR [rax+rcx*1]
   140031e36:	movzx  eax,BYTE PTR [rdx+0xa]
   140031e3a:	cvtdq2pd xmm1,xmm1
   140031e3e:	mulsd  xmm0,QWORD PTR [rip+0xb592]        # 0x14003d3d8
   140031e46:	subsd  xmm1,xmm0
   140031e4a:	addsd  xmm1,QWORD PTR [rip+0xb88e]        # 0x14003d6e0
   140031e52:	movsd  QWORD PTR [rsp+0x38],xmm1
   140031e58:	cmp    al,0x6c
   140031e5a:	je     0x140031e72
   140031e5c:	lea    rcx,[rip+0x10a55]        # 0x1400428b8
   140031e63:	lea    rdx,[rip+0x10a46]        # 0x1400428b0
   140031e6a:	cmp    al,0x72
   140031e6c:	cmove  rcx,rdx
   140031e70:	jmp    0x140031e79
   140031e72:	lea    rcx,[rip+0x10a2f]        # 0x1400428a8
   140031e79:	movss  xmm0,DWORD PTR [rsp+0x30]
   140031e7f:	movsd  xmm3,QWORD PTR [rip+0x22399]        # 0x140054220
   140031e87:	movss  xmm1,DWORD PTR [rsp+0x34]
   140031e8d:	mov    r8d,DWORD PTR [rip+0x22394]        # 0x140054228
   140031e94:	unpcklps xmm0,xmm1
   140031e97:	movss  xmm2,DWORD PTR [rsp+0x3c]
   140031e9d:	movaps xmm4,xmm3
   140031ea0:	mulsd  xmm4,xmm0
   140031ea4:	movss  xmm0,DWORD PTR [rsp+0x38]
   140031eaa:	unpcklps xmm0,xmm2
   140031ead:	mulsd  xmm3,xmm0
   140031eb1:	test   r8d,r8d
   140031eb4:	jne    0x140031edc
   140031eb6:	mov    eax,DWORD PTR [rip+0x22380]        # 0x14005423c
   140031ebc:	movsd  QWORD PTR [rsp+0x30],xmm4
   140031ec2:	sub    eax,DWORD PTR [rip+0x2236c]        # 0x140054234
   140031ec8:	movd   xmm0,eax
   140031ecc:	cvtdq2pd xmm0,xmm0
   140031ed0:	subsd  xmm0,xmm3
   140031ed4:	movsd  QWORD PTR [rsp+0x38],xmm0
   140031eda:	jmp    0x140031f00
   140031edc:	mov    eax,DWORD PTR [rip+0x22356]        # 0x140054238
   140031ee2:	movsd  QWORD PTR [rsp+0x38],xmm4
   140031ee8:	sub    eax,DWORD PTR [rip+0x22342]        # 0x140054230
   140031eee:	movd   xmm0,eax
   140031ef2:	cvtdq2pd xmm0,xmm0
   140031ef6:	subsd  xmm0,xmm3
   140031efa:	movsd  QWORD PTR [rsp+0x30],xmm0
   140031f00:	movss  xmm2,DWORD PTR [rsp+0x34]
   140031f06:	movss  xmm3,DWORD PTR [rsp+0x30]
   140031f0c:	movss  xmm0,DWORD PTR [rsp+0x3c]
   140031f12:	mov    QWORD PTR [rsp+0x28],rcx
   140031f17:	mov    rcx,QWORD PTR [rip+0x235d2]        # 0x1400554f0
   140031f1e:	lea    rdx,[rip+0x1099b]        # 0x1400428c0
   140031f25:	unpcklps xmm3,xmm2
   140031f28:	movss  xmm1,DWORD PTR [rsp+0x38]
   140031f2e:	movq   r9,xmm3
   140031f33:	unpcklps xmm1,xmm0
   140031f36:	movsd  QWORD PTR [rsp+0x20],xmm1
   140031f3c:	call   QWORD PTR [rip+0xb37e]        # 0x14003d2c0
   140031f42:	mov    rcx,rbx
   140031f45:	call   0x140032f90
   140031f4a:	mov    rcx,QWORD PTR [rip+0x2359f]        # 0x1400554f0
   140031f51:	lea    rdx,[rip+0x109a8]        # 0x140042900
   140031f58:	mov    r8,rax
   140031f5b:	call   QWORD PTR [rip+0xb35f]        # 0x14003d2c0
   140031f61:	add    rsp,0x40
   140031f65:	pop    rbx
   140031f66:	ret    
   140031f67:	int3   
   140031f68:	int3   
   140031f69:	int3   
   140031f6a:	int3   
   140031f6b:	int3   
   140031f6c:	int3   
   140031f6d:	int3   
   140031f6e:	int3   
   140031f6f:	int3   
   140031f70:	mov    QWORD PTR [rsp+0x8],rbx
   140031f75:	push   rdi
   140031f76:	sub    rsp,0x20
   140031f7a:	mov    rdi,rcx
   140031f7d:	mov    rcx,QWORD PTR [rip+0x2356c]        # 0x1400554f0
   140031f84:	mov    ebx,edx
   140031f86:	lea    rdx,[rip+0x1098b]        # 0x140042918
   140031f8d:	call   QWORD PTR [rip+0xb32d]        # 0x14003d2c0
   140031f93:	mov    edx,ebx
   140031f95:	mov    rcx,rdi
   140031f98:	call   0x140033130
   140031f9d:	mov    rcx,QWORD PTR [rip+0x2354c]        # 0x1400554f0
   140031fa4:	lea    rdx,[rip+0x109a5]        # 0x140042950
   140031fab:	mov    rbx,QWORD PTR [rsp+0x30]
   140031fb0:	add    rsp,0x20
   140031fb4:	pop    rdi
   140031fb5:	rex.W jmp QWORD PTR [rip+0xb304]        # 0x14003d2c0
   140031fbc:	int3   
   140031fbd:	int3   
   140031fbe:	int3   
   140031fbf:	int3   
   140031fc0:	mov    QWORD PTR [rsp+0x8],rbx
   140031fc5:	push   rdi
   140031fc6:	sub    rsp,0x20
   140031fca:	mov    eax,r8d
   140031fcd:	mov    r8,QWORD PTR [rip+0x202a4]        # 0x140052278
   140031fd4:	mov    rdi,rcx
   140031fd7:	mov    rcx,QWORD PTR [rip+0x23512]        # 0x1400554f0
   140031fde:	test   eax,eax
   140031fe0:	mov    ebx,edx
   140031fe2:	cmovne r8,QWORD PTR [rip+0x20286]        # 0x140052270
   140031fea:	lea    rdx,[rip+0x10967]        # 0x140042958
   140031ff1:	call   QWORD PTR [rip+0xb2c9]        # 0x14003d2c0
   140031ff7:	mov    edx,ebx
   140031ff9:	mov    rcx,rdi
   140031ffc:	call   0x140033130
   140032001:	mov    rcx,QWORD PTR [rip+0x234e8]        # 0x1400554f0
   140032008:	lea    rdx,[rip+0x10941]        # 0x140042950
   14003200f:	mov    rbx,QWORD PTR [rsp+0x30]
   140032014:	add    rsp,0x20
   140032018:	pop    rdi
   140032019:	rex.W jmp QWORD PTR [rip+0xb2a0]        # 0x14003d2c0
   140032020:	sub    rsp,0x58
   140032024:	mov    eax,ecx
   140032026:	shr    rcx,0x20
   14003202a:	add    ecx,r8d
   14003202d:	sub    eax,edx
   14003202f:	movd   xmm0,eax
   140032033:	cvtdq2pd xmm0,xmm0
   140032037:	movsd  QWORD PTR [rsp+0x40],xmm0
   14003203d:	movd   xmm0,ecx
   140032041:	mov    ecx,DWORD PTR [rip+0x221e1]        # 0x140054228
   140032047:	cvtdq2pd xmm0,xmm0
   14003204b:	movsd  QWORD PTR [rsp+0x48],xmm0
   140032051:	test   ecx,ecx
   140032053:	je     0x14003205d
   140032055:	mov    eax,edx
   140032057:	mov    edx,r8d
   14003205a:	mov    r8d,eax
   14003205d:	movss  xmm1,DWORD PTR [rsp+0x44]
   140032063:	movss  xmm0,DWORD PTR [rsp+0x40]
   140032069:	movsd  xmm5,QWORD PTR [rip+0x221af]        # 0x140054220
   140032071:	unpcklps xmm0,xmm1
   140032074:	movaps xmm1,xmm5
   140032077:	movss  xmm2,DWORD PTR [rsp+0x4c]
   14003207d:	movaps xmm3,xmm5
   140032080:	mulsd  xmm3,xmm0
   140032084:	movss  xmm0,DWORD PTR [rsp+0x48]
   14003208a:	unpcklps xmm0,xmm2
   14003208d:	mulsd  xmm1,xmm0
   140032091:	test   ecx,ecx
   140032093:	jne    0x1400320bb
   140032095:	mov    eax,DWORD PTR [rip+0x221a1]        # 0x14005423c
   14003209b:	movsd  QWORD PTR [rsp+0x40],xmm3
   1400320a1:	sub    eax,DWORD PTR [rip+0x2218d]        # 0x140054234
   1400320a7:	movd   xmm0,eax
   1400320ab:	cvtdq2pd xmm0,xmm0
   1400320af:	subsd  xmm0,xmm1
   1400320b3:	movsd  QWORD PTR [rsp+0x48],xmm0
   1400320b9:	jmp    0x1400320df
   1400320bb:	mov    eax,DWORD PTR [rip+0x22177]        # 0x140054238
   1400320c1:	movsd  QWORD PTR [rsp+0x48],xmm3
   1400320c7:	sub    eax,DWORD PTR [rip+0x22163]        # 0x140054230
   1400320cd:	movd   xmm0,eax
   1400320d1:	cvtdq2pd xmm0,xmm0
   1400320d5:	subsd  xmm0,xmm1
   1400320d9:	movsd  QWORD PTR [rsp+0x40],xmm0
   1400320df:	movss  xmm4,DWORD PTR [rsp+0x44]
   1400320e5:	movss  xmm3,DWORD PTR [rsp+0x40]
   1400320eb:	movss  xmm2,DWORD PTR [rsp+0x4c]
   1400320f1:	mov    rcx,QWORD PTR [rip+0x233f8]        # 0x1400554f0
   1400320f8:	lea    eax,[r8+r8*1]
   1400320fc:	mov    r8,QWORD PTR [rip+0x20175]        # 0x140052278
   140032103:	unpcklps xmm3,xmm4
   140032106:	movd   xmm1,eax
   14003210a:	lea    eax,[rdx+rdx*1]
   14003210d:	test   r9d,r9d
   140032110:	lea    rdx,[rip+0x10851]        # 0x140042968
   140032117:	movq   r9,xmm3
   14003211c:	cvtdq2pd xmm1,xmm1
   140032120:	cmovne r8,QWORD PTR [rip+0x20148]        # 0x140052270
   140032128:	movd   xmm0,eax
   14003212c:	mulsd  xmm1,xmm5
   140032130:	movsd  QWORD PTR [rsp+0x30],xmm1
   140032136:	cvtdq2pd xmm0,xmm0
   14003213a:	mulsd  xmm0,xmm5
   14003213e:	movsd  QWORD PTR [rsp+0x28],xmm0
   140032144:	movss  xmm0,DWORD PTR [rsp+0x48]
   14003214a:	unpcklps xmm0,xmm2
   14003214d:	movsd  QWORD PTR [rsp+0x20],xmm0
   140032153:	call   QWORD PTR [rip+0xb167]        # 0x14003d2c0
   140032159:	add    rsp,0x58
   14003215d:	ret    
   14003215e:	int3   
   14003215f:	int3   
   140032160:	mov    QWORD PTR [rsp+0x8],rbx
   140032165:	push   rdi
   140032166:	sub    rsp,0x20
   14003216a:	mov    rdi,rcx
   14003216d:	mov    rcx,QWORD PTR [rip+0x2337c]        # 0x1400554f0
   140032174:	mov    ebx,edx
   140032176:	lea    rdx,[rip+0x1081b]        # 0x140042998
   14003217d:	call   QWORD PTR [rip+0xb13d]        # 0x14003d2c0
   140032183:	mov    edx,ebx
   140032185:	mov    rcx,rdi
   140032188:	call   0x140033130
   14003218d:	mov    rcx,QWORD PTR [rip+0x2335c]        # 0x1400554f0
   140032194:	lea    rdx,[rip+0x107b5]        # 0x140042950
   14003219b:	mov    rbx,QWORD PTR [rsp+0x30]
   1400321a0:	add    rsp,0x20
   1400321a4:	pop    rdi
   1400321a5:	rex.W jmp QWORD PTR [rip+0xb114]        # 0x14003d2c0
   1400321ac:	int3   
   1400321ad:	int3   
   1400321ae:	int3   
   1400321af:	int3   
   1400321b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400321b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400321ba:	push   rdi
   1400321bb:	sub    rsp,0x20
   1400321bf:	cmp    BYTE PTR [rip+0x1ff8a],0x0        # 0x140052150
   1400321c6:	mov    ebx,r9d
   1400321c9:	mov    edi,r8d
   1400321cc:	mov    rsi,rdx
   1400321cf:	je     0x1400321ef
   1400321d1:	call   QWORD PTR [rip+0xb0f9]        # 0x14003d2d0
   1400321d7:	lea    rdx,[rip+0xfd42]        # 0x140041f20
   1400321de:	lea    rcx,[rax+0x60]
   1400321e2:	call   QWORD PTR [rip+0xb0d8]        # 0x14003d2c0
   1400321e8:	mov    BYTE PTR [rip+0x1ff61],0x0        # 0x140052150
   1400321ef:	mov    r8,QWORD PTR [rip+0x20082]        # 0x140052278
   1400321f6:	mov    rcx,QWORD PTR [rip+0x232f3]        # 0x1400554f0
   1400321fd:	test   ebx,ebx
   1400321ff:	cmovne r8,QWORD PTR [rip+0x20069]        # 0x140052270
   140032207:	lea    rdx,[rip+0x1074a]        # 0x140042958
   14003220e:	call   QWORD PTR [rip+0xb0ac]        # 0x14003d2c0
   140032214:	mov    edx,edi
   140032216:	mov    rcx,rsi
   140032219:	call   0x140033130
   14003221e:	mov    rcx,QWORD PTR [rip+0x232cb]        # 0x1400554f0
   140032225:	lea    rdx,[rip+0x10724]        # 0x140042950
   14003222c:	mov    rbx,QWORD PTR [rsp+0x30]
   140032231:	mov    rsi,QWORD PTR [rsp+0x38]
   140032236:	add    rsp,0x20
   14003223a:	pop    rdi
   14003223b:	rex.W jmp QWORD PTR [rip+0xb07e]        # 0x14003d2c0
   140032242:	int3   
   140032243:	int3   
   140032244:	int3   
   140032245:	int3   
   140032246:	int3   
   140032247:	int3   
   140032248:	int3   
   140032249:	int3   
   14003224a:	int3   
   14003224b:	int3   
   14003224c:	int3   
   14003224d:	int3   
   14003224e:	int3   
   14003224f:	int3   
   140032250:	mov    DWORD PTR [rip+0x2000e],0x1        # 0x140052268
   14003225a:	ret    
   14003225b:	int3   
   14003225c:	int3   
   14003225d:	int3   
   14003225e:	int3   
   14003225f:	int3   
   140032260:	mov    QWORD PTR [rsp+0x8],rbx
   140032265:	push   rdi
   140032266:	sub    rsp,0x30
   14003226a:	mov    rax,QWORD PTR [rsp+0x68]
   14003226f:	mov    r8,QWORD PTR [rsp+0x60]
   140032274:	mov    rbx,r9
   140032277:	mov    r9,QWORD PTR [r8+0x8]
   14003227b:	mov    rcx,rax
   14003227e:	mov    rdi,rdx
   140032281:	shr    rcx,0x20
   140032285:	lea    rdx,[rip+0xfdfc]        # 0x140042088
   14003228c:	imul   ecx,eax
   14003228f:	mov    rax,QWORD PTR [r8+0x10]
   140032293:	mov    r8,QWORD PTR [r8]
   140032296:	mov    DWORD PTR [rip+0x21f80],ecx        # 0x14005421c
   14003229c:	mov    rcx,QWORD PTR [rip+0x2324d]        # 0x1400554f0
   1400322a3:	mov    QWORD PTR [rsp+0x20],rax
   1400322a8:	call   QWORD PTR [rip+0xb012]        # 0x14003d2c0
   1400322ae:	mov    rcx,QWORD PTR [rip+0x2323b]        # 0x1400554f0
   1400322b5:	lea    rdx,[rip+0xfe04]        # 0x1400420c0
   1400322bc:	mov    r8,rbx
   1400322bf:	call   QWORD PTR [rip+0xaffb]        # 0x14003d2c0
   1400322c5:	mov    r8,QWORD PTR [rdi+0x10]
   1400322c9:	mov    rcx,QWORD PTR [rip+0x23220]        # 0x1400554f0
   1400322d0:	lea    rdx,[rip+0xfdf9]        # 0x1400420d0
   1400322d7:	call   QWORD PTR [rip+0xafe3]        # 0x14003d2c0
   1400322dd:	mov    r8d,DWORD PTR [rip+0x21f38]        # 0x14005421c
   1400322e4:	mov    rcx,QWORD PTR [rip+0x23205]        # 0x1400554f0
   1400322eb:	lea    rdx,[rip+0xfdee]        # 0x1400420e0
   1400322f2:	call   QWORD PTR [rip+0xafc8]        # 0x14003d2c0
   1400322f8:	mov    rcx,QWORD PTR [rip+0x231f1]        # 0x1400554f0
   1400322ff:	lea    rdx,[rip+0xfdea]        # 0x1400420f0
   140032306:	call   QWORD PTR [rip+0xafb4]        # 0x14003d2c0
   14003230c:	mov    rcx,QWORD PTR [rip+0x231dd]        # 0x1400554f0
   140032313:	lea    rdx,[rip+0xfde6]        # 0x140042100
   14003231a:	call   QWORD PTR [rip+0xafa0]        # 0x14003d2c0
   140032320:	mov    rcx,QWORD PTR [rip+0x231c9]        # 0x1400554f0
   140032327:	lea    rdx,[rip+0xfde2]        # 0x140042110
   14003232e:	call   QWORD PTR [rip+0xaf8c]        # 0x14003d2c0
   140032334:	mov    rcx,QWORD PTR [rip+0x231b5]        # 0x1400554f0
   14003233b:	lea    rdx,[rip+0xfdde]        # 0x140042120
   140032342:	call   QWORD PTR [rip+0xaf78]        # 0x14003d2c0
   140032348:	mov    rcx,QWORD PTR [rip+0x231a1]        # 0x1400554f0
   14003234f:	lea    rdx,[rip+0xfde2]        # 0x140042138
   140032356:	call   QWORD PTR [rip+0xaf64]        # 0x14003d2c0
   14003235c:	mov    rcx,QWORD PTR [rip+0x2318d]        # 0x1400554f0
   140032363:	lea    rdx,[rip+0xfdee]        # 0x140042158
   14003236a:	call   QWORD PTR [rip+0xaf50]        # 0x14003d2c0
   140032370:	mov    rcx,QWORD PTR [rip+0x23179]        # 0x1400554f0
   140032377:	lea    rdx,[rip+0xfdfa]        # 0x140042178
   14003237e:	call   QWORD PTR [rip+0xaf3c]        # 0x14003d2c0
   140032384:	mov    rcx,QWORD PTR [rip+0x23165]        # 0x1400554f0
   14003238b:	lea    rdx,[rip+0xfe06]        # 0x140042198
   140032392:	call   QWORD PTR [rip+0xaf28]        # 0x14003d2c0
   140032398:	mov    rcx,QWORD PTR [rip+0x23151]        # 0x1400554f0
   14003239f:	lea    rdx,[rip+0xfe12]        # 0x1400421b8
   1400323a6:	call   QWORD PTR [rip+0xaf14]        # 0x14003d2c0
   1400323ac:	mov    rcx,QWORD PTR [rip+0x2313d]        # 0x1400554f0
   1400323b3:	lea    rdx,[rip+0xfe26]        # 0x1400421e0
   1400323ba:	call   QWORD PTR [rip+0xaf00]        # 0x14003d2c0
   1400323c0:	mov    rcx,QWORD PTR [rip+0x23129]        # 0x1400554f0
   1400323c7:	lea    rdx,[rip+0xfe3a]        # 0x140042208
   1400323ce:	call   QWORD PTR [rip+0xaeec]        # 0x14003d2c0
   1400323d4:	mov    rcx,QWORD PTR [rip+0x23115]        # 0x1400554f0
   1400323db:	lea    rdx,[rip+0xfd2e]        # 0x140042110
   1400323e2:	call   QWORD PTR [rip+0xaed8]        # 0x14003d2c0
   1400323e8:	mov    rcx,QWORD PTR [rip+0x23101]        # 0x1400554f0
   1400323ef:	lea    rdx,[rip+0xfe2a]        # 0x140042220
   1400323f6:	call   QWORD PTR [rip+0xaec4]        # 0x14003d2c0
   1400323fc:	mov    rcx,QWORD PTR [rip+0x230ed]        # 0x1400554f0
   140032403:	lea    rdx,[rip+0xfd2e]        # 0x140042138
   14003240a:	call   QWORD PTR [rip+0xaeb0]        # 0x14003d2c0
   140032410:	mov    rcx,QWORD PTR [rip+0x230d9]        # 0x1400554f0
   140032417:	lea    rdx,[rip+0xfd3a]        # 0x140042158
   14003241e:	call   QWORD PTR [rip+0xae9c]        # 0x14003d2c0
   140032424:	mov    rcx,QWORD PTR [rip+0x230c5]        # 0x1400554f0
   14003242b:	lea    rdx,[rip+0xfd46]        # 0x140042178
   140032432:	call   QWORD PTR [rip+0xae88]        # 0x14003d2c0
   140032438:	mov    rcx,QWORD PTR [rip+0x230b1]        # 0x1400554f0
   14003243f:	lea    rdx,[rip+0xfdf2]        # 0x140042238
   140032446:	call   QWORD PTR [rip+0xae74]        # 0x14003d2c0
   14003244c:	mov    rcx,QWORD PTR [rip+0x2309d]        # 0x1400554f0
   140032453:	lea    rdx,[rip+0xfdfe]        # 0x140042258
   14003245a:	call   QWORD PTR [rip+0xae60]        # 0x14003d2c0
   140032460:	mov    rcx,QWORD PTR [rip+0x23089]        # 0x1400554f0
   140032467:	lea    rdx,[rip+0xfd72]        # 0x1400421e0
   14003246e:	call   QWORD PTR [rip+0xae4c]        # 0x14003d2c0
   140032474:	mov    rcx,QWORD PTR [rip+0x23075]        # 0x1400554f0
   14003247b:	lea    rdx,[rip+0xfd86]        # 0x140042208
   140032482:	call   QWORD PTR [rip+0xae38]        # 0x14003d2c0
   140032488:	mov    rcx,QWORD PTR [rip+0x23061]        # 0x1400554f0
   14003248f:	lea    rdx,[rip+0xfc7a]        # 0x140042110
   140032496:	call   QWORD PTR [rip+0xae24]        # 0x14003d2c0
   14003249c:	mov    rcx,QWORD PTR [rip+0x2304d]        # 0x1400554f0
   1400324a3:	lea    rdx,[rip+0xfdd6]        # 0x140042280
   1400324aa:	call   QWORD PTR [rip+0xae10]        # 0x14003d2c0
   1400324b0:	mov    rcx,QWORD PTR [rip+0x23039]        # 0x1400554f0
   1400324b7:	lea    rdx,[rip+0xfc7a]        # 0x140042138
   1400324be:	call   QWORD PTR [rip+0xadfc]        # 0x14003d2c0
   1400324c4:	mov    rcx,QWORD PTR [rip+0x23025]        # 0x1400554f0
   1400324cb:	lea    rdx,[rip+0xfdc6]        # 0x140042298
   1400324d2:	call   QWORD PTR [rip+0xade8]        # 0x14003d2c0
   1400324d8:	mov    rcx,QWORD PTR [rip+0x23011]        # 0x1400554f0
   1400324df:	lea    rdx,[rip+0xfdd2]        # 0x1400422b8
   1400324e6:	call   QWORD PTR [rip+0xadd4]        # 0x14003d2c0
   1400324ec:	mov    rcx,QWORD PTR [rip+0x22ffd]        # 0x1400554f0
   1400324f3:	lea    rdx,[rip+0xfd3e]        # 0x140042238
   1400324fa:	call   QWORD PTR [rip+0xadc0]        # 0x14003d2c0
   140032500:	mov    rcx,QWORD PTR [rip+0x22fe9]        # 0x1400554f0
   140032507:	lea    rdx,[rip+0xfdca]        # 0x1400422d8
   14003250e:	call   QWORD PTR [rip+0xadac]        # 0x14003d2c0
   140032514:	mov    rcx,QWORD PTR [rip+0x22fd5]        # 0x1400554f0
   14003251b:	lea    rdx,[rip+0xfcbe]        # 0x1400421e0
   140032522:	call   QWORD PTR [rip+0xad98]        # 0x14003d2c0
   140032528:	mov    rcx,QWORD PTR [rip+0x22fc1]        # 0x1400554f0
   14003252f:	lea    rdx,[rip+0xfcd2]        # 0x140042208
   140032536:	call   QWORD PTR [rip+0xad84]        # 0x14003d2c0
   14003253c:	mov    rcx,QWORD PTR [rip+0x22fad]        # 0x1400554f0
   140032543:	lea    rdx,[rip+0xfbc6]        # 0x140042110
   14003254a:	call   QWORD PTR [rip+0xad70]        # 0x14003d2c0
   140032550:	mov    rcx,QWORD PTR [rip+0x22f99]        # 0x1400554f0
   140032557:	lea    rdx,[rip+0xfd9a]        # 0x1400422f8
   14003255e:	call   QWORD PTR [rip+0xad5c]        # 0x14003d2c0
   140032564:	mov    rcx,QWORD PTR [rip+0x22f85]        # 0x1400554f0
   14003256b:	lea    rdx,[rip+0xfd9e]        # 0x140042310
   140032572:	call   QWORD PTR [rip+0xad48]        # 0x14003d2c0
   140032578:	mov    rcx,QWORD PTR [rip+0x22f71]        # 0x1400554f0
   14003257f:	lea    rdx,[rip+0xfbd2]        # 0x140042158
   140032586:	call   QWORD PTR [rip+0xad34]        # 0x14003d2c0
   14003258c:	mov    rcx,QWORD PTR [rip+0x22f5d]        # 0x1400554f0
   140032593:	lea    rdx,[rip+0xfd1e]        # 0x1400422b8
   14003259a:	call   QWORD PTR [rip+0xad20]        # 0x14003d2c0
   1400325a0:	mov    rcx,QWORD PTR [rip+0x22f49]        # 0x1400554f0
   1400325a7:	lea    rdx,[rip+0xfc8a]        # 0x140042238
   1400325ae:	call   QWORD PTR [rip+0xad0c]        # 0x14003d2c0
   1400325b4:	mov    rcx,QWORD PTR [rip+0x22f35]        # 0x1400554f0
   1400325bb:	lea    rdx,[rip+0xfd6e]        # 0x140042330
   1400325c2:	call   QWORD PTR [rip+0xacf8]        # 0x14003d2c0
   1400325c8:	mov    rcx,QWORD PTR [rip+0x22f21]        # 0x1400554f0
   1400325cf:	lea    rdx,[rip+0xfc0a]        # 0x1400421e0
   1400325d6:	call   QWORD PTR [rip+0xace4]        # 0x14003d2c0
   1400325dc:	mov    rcx,QWORD PTR [rip+0x22f0d]        # 0x1400554f0
   1400325e3:	lea    rdx,[rip+0xfc1e]        # 0x140042208
   1400325ea:	call   QWORD PTR [rip+0xacd0]        # 0x14003d2c0
   1400325f0:	mov    rcx,QWORD PTR [rip+0x22ef9]        # 0x1400554f0
   1400325f7:	lea    rdx,[rip+0xfb12]        # 0x140042110
   1400325fe:	call   QWORD PTR [rip+0xacbc]        # 0x14003d2c0
   140032604:	mov    rcx,QWORD PTR [rip+0x22ee5]        # 0x1400554f0
   14003260b:	lea    rdx,[rip+0xfd46]        # 0x140042358
   140032612:	call   QWORD PTR [rip+0xaca8]        # 0x14003d2c0
   140032618:	mov    rcx,QWORD PTR [rip+0x22ed1]        # 0x1400554f0
   14003261f:	lea    rdx,[rip+0xfcea]        # 0x140042310
   140032626:	call   QWORD PTR [rip+0xac94]        # 0x14003d2c0
   14003262c:	mov    rcx,QWORD PTR [rip+0x22ebd]        # 0x1400554f0
   140032633:	lea    rdx,[rip+0xfc5e]        # 0x140042298
   14003263a:	call   QWORD PTR [rip+0xac80]        # 0x14003d2c0
   140032640:	mov    rcx,QWORD PTR [rip+0x22ea9]        # 0x1400554f0
   140032647:	lea    rdx,[rip+0xfb2a]        # 0x140042178
   14003264e:	call   QWORD PTR [rip+0xac6c]        # 0x14003d2c0
   140032654:	mov    rcx,QWORD PTR [rip+0x22e95]        # 0x1400554f0
   14003265b:	lea    rdx,[rip+0xfbd6]        # 0x140042238
   140032662:	call   QWORD PTR [rip+0xac58]        # 0x14003d2c0
   140032668:	mov    rcx,QWORD PTR [rip+0x22e81]        # 0x1400554f0
   14003266f:	lea    rdx,[rip+0xfcfa]        # 0x140042370
   140032676:	call   QWORD PTR [rip+0xac44]        # 0x14003d2c0
   14003267c:	mov    rcx,QWORD PTR [rip+0x22e6d]        # 0x1400554f0
   140032683:	lea    rdx,[rip+0xfb56]        # 0x1400421e0
   14003268a:	call   QWORD PTR [rip+0xac30]        # 0x14003d2c0
   140032690:	mov    rcx,QWORD PTR [rip+0x22e59]        # 0x1400554f0
   140032697:	lea    rdx,[rip+0xfb6a]        # 0x140042208
   14003269e:	call   QWORD PTR [rip+0xac1c]        # 0x14003d2c0
   1400326a4:	mov    rcx,QWORD PTR [rip+0x22e45]        # 0x1400554f0
   1400326ab:	lea    rdx,[rip+0xfa5e]        # 0x140042110
   1400326b2:	call   QWORD PTR [rip+0xac08]        # 0x14003d2c0
   1400326b8:	mov    rcx,QWORD PTR [rip+0x22e31]        # 0x1400554f0
   1400326bf:	lea    rdx,[rip+0xfcca]        # 0x140042390
   1400326c6:	call   QWORD PTR [rip+0xabf4]        # 0x14003d2c0
   1400326cc:	mov    rcx,QWORD PTR [rip+0x22e1d]        # 0x1400554f0
   1400326d3:	lea    rdx,[rip+0xfc36]        # 0x140042310
   1400326da:	call   QWORD PTR [rip+0xabe0]        # 0x14003d2c0
   1400326e0:	mov    rcx,QWORD PTR [rip+0x22e09]        # 0x1400554f0
   1400326e7:	lea    rdx,[rip+0xfa6a]        # 0x140042158
   1400326ee:	call   QWORD PTR [rip+0xabcc]        # 0x14003d2c0
   1400326f4:	mov    rcx,QWORD PTR [rip+0x22df5]        # 0x1400554f0
   1400326fb:	lea    rdx,[rip+0xfa76]        # 0x140042178
   140032702:	call   QWORD PTR [rip+0xabb8]        # 0x14003d2c0
   140032708:	mov    rcx,QWORD PTR [rip+0x22de1]        # 0x1400554f0
   14003270f:	lea    rdx,[rip+0xfb22]        # 0x140042238
   140032716:	call   QWORD PTR [rip+0xaba4]        # 0x14003d2c0
   14003271c:	mov    rcx,QWORD PTR [rip+0x22dcd]        # 0x1400554f0
   140032723:	lea    rdx,[rip+0xfc7e]        # 0x1400423a8
   14003272a:	call   QWORD PTR [rip+0xab90]        # 0x14003d2c0
   140032730:	mov    rcx,QWORD PTR [rip+0x22db9]        # 0x1400554f0
   140032737:	lea    rdx,[rip+0xfaa2]        # 0x1400421e0
   14003273e:	call   QWORD PTR [rip+0xab7c]        # 0x14003d2c0
   140032744:	mov    rcx,QWORD PTR [rip+0x22da5]        # 0x1400554f0
   14003274b:	lea    rdx,[rip+0xfab6]        # 0x140042208
   140032752:	call   QWORD PTR [rip+0xab68]        # 0x14003d2c0
   140032758:	mov    rcx,QWORD PTR [rip+0x22d91]        # 0x1400554f0
   14003275f:	lea    rdx,[rip+0xf9aa]        # 0x140042110
   140032766:	call   QWORD PTR [rip+0xab54]        # 0x14003d2c0
   14003276c:	mov    rcx,QWORD PTR [rip+0x22d7d]        # 0x1400554f0
   140032773:	lea    rdx,[rip+0xfc4e]        # 0x1400423c8
   14003277a:	call   QWORD PTR [rip+0xab40]        # 0x14003d2c0
   140032780:	mov    rcx,QWORD PTR [rip+0x22d69]        # 0x1400554f0
   140032787:	lea    rdx,[rip+0xf9aa]        # 0x140042138
   14003278e:	call   QWORD PTR [rip+0xab2c]        # 0x14003d2c0
   140032794:	mov    rcx,QWORD PTR [rip+0x22d55]        # 0x1400554f0
   14003279b:	lea    rdx,[rip+0xfaf6]        # 0x140042298
   1400327a2:	call   QWORD PTR [rip+0xab18]        # 0x14003d2c0
   1400327a8:	mov    rcx,QWORD PTR [rip+0x22d41]        # 0x1400554f0
   1400327af:	lea    rdx,[rip+0xf9c2]        # 0x140042178
   1400327b6:	call   QWORD PTR [rip+0xab04]        # 0x14003d2c0
   1400327bc:	mov    rcx,QWORD PTR [rip+0x22d2d]        # 0x1400554f0
   1400327c3:	lea    rdx,[rip+0xfa6e]        # 0x140042238
   1400327ca:	call   QWORD PTR [rip+0xaaf0]        # 0x14003d2c0
   1400327d0:	mov    rcx,QWORD PTR [rip+0x22d19]        # 0x1400554f0
   1400327d7:	lea    rdx,[rip+0xfc02]        # 0x1400423e0
   1400327de:	call   QWORD PTR [rip+0xaadc]        # 0x14003d2c0
   1400327e4:	mov    rcx,QWORD PTR [rip+0x22d05]        # 0x1400554f0
   1400327eb:	lea    rdx,[rip+0xf9ee]        # 0x1400421e0
   1400327f2:	call   QWORD PTR [rip+0xaac8]        # 0x14003d2c0
   1400327f8:	mov    rcx,QWORD PTR [rip+0x22cf1]        # 0x1400554f0
   1400327ff:	lea    rdx,[rip+0xfa02]        # 0x140042208
   140032806:	call   QWORD PTR [rip+0xaab4]        # 0x14003d2c0
   14003280c:	mov    rcx,QWORD PTR [rip+0x22cdd]        # 0x1400554f0
   140032813:	lea    rdx,[rip+0xf8f6]        # 0x140042110
   14003281a:	call   QWORD PTR [rip+0xaaa0]        # 0x14003d2c0
   140032820:	mov    rcx,QWORD PTR [rip+0x22cc9]        # 0x1400554f0
   140032827:	lea    rdx,[rip+0xfbda]        # 0x140042408
   14003282e:	call   QWORD PTR [rip+0xaa8c]        # 0x14003d2c0
   140032834:	mov    rcx,QWORD PTR [rip+0x22cb5]        # 0x1400554f0
   14003283b:	lea    rdx,[rip+0xf8f6]        # 0x140042138
   140032842:	call   QWORD PTR [rip+0xaa78]        # 0x14003d2c0
   140032848:	mov    rcx,QWORD PTR [rip+0x22ca1]        # 0x1400554f0
   14003284f:	lea    rdx,[rip+0xf902]        # 0x140042158
   140032856:	call   QWORD PTR [rip+0xaa64]        # 0x14003d2c0
   14003285c:	mov    rcx,QWORD PTR [rip+0x22c8d]        # 0x1400554f0
   140032863:	lea    rdx,[rip+0xfa4e]        # 0x1400422b8
   14003286a:	call   QWORD PTR [rip+0xaa50]        # 0x14003d2c0
   140032870:	mov    rcx,QWORD PTR [rip+0x22c79]        # 0x1400554f0
   140032877:	lea    rdx,[rip+0xf9ba]        # 0x140042238
   14003287e:	call   QWORD PTR [rip+0xaa3c]        # 0x14003d2c0
   140032884:	mov    rcx,QWORD PTR [rip+0x22c65]        # 0x1400554f0
   14003288b:	lea    rdx,[rip+0xfb8e]        # 0x140042420
   140032892:	call   QWORD PTR [rip+0xaa28]        # 0x14003d2c0
   140032898:	mov    rcx,QWORD PTR [rip+0x22c51]        # 0x1400554f0
   14003289f:	lea    rdx,[rip+0xf93a]        # 0x1400421e0
   1400328a6:	call   QWORD PTR [rip+0xaa14]        # 0x14003d2c0
   1400328ac:	mov    rcx,QWORD PTR [rip+0x22c3d]        # 0x1400554f0
   1400328b3:	lea    rdx,[rip+0xf94e]        # 0x140042208
   1400328ba:	call   QWORD PTR [rip+0xaa00]        # 0x14003d2c0
   1400328c0:	mov    rcx,QWORD PTR [rip+0x22c29]        # 0x1400554f0
   1400328c7:	lea    rdx,[rip+0xf842]        # 0x140042110
   1400328ce:	call   QWORD PTR [rip+0xa9ec]        # 0x14003d2c0
   1400328d4:	mov    rcx,QWORD PTR [rip+0x22c15]        # 0x1400554f0
   1400328db:	lea    rdx,[rip+0xfb66]        # 0x140042448
   1400328e2:	call   QWORD PTR [rip+0xa9d8]        # 0x14003d2c0
   1400328e8:	mov    rcx,QWORD PTR [rip+0x22c01]        # 0x1400554f0
   1400328ef:	lea    rdx,[rip+0xfa1a]        # 0x140042310
   1400328f6:	call   QWORD PTR [rip+0xa9c4]        # 0x14003d2c0
   1400328fc:	mov    rcx,QWORD PTR [rip+0x22bed]        # 0x1400554f0
   140032903:	lea    rdx,[rip+0xf84e]        # 0x140042158
   14003290a:	call   QWORD PTR [rip+0xa9b0]        # 0x14003d2c0
   140032910:	mov    rcx,QWORD PTR [rip+0x22bd9]        # 0x1400554f0
   140032917:	lea    rdx,[rip+0xfb4a]        # 0x140042468
   14003291e:	call   QWORD PTR [rip+0xa99c]        # 0x14003d2c0
   140032924:	mov    rcx,QWORD PTR [rip+0x22bc5]        # 0x1400554f0
   14003292b:	lea    rdx,[rip+0xf906]        # 0x140042238
   140032932:	call   QWORD PTR [rip+0xa988]        # 0x14003d2c0
   140032938:	mov    rcx,QWORD PTR [rip+0x22bb1]        # 0x1400554f0
   14003293f:	lea    rdx,[rip+0xf8c2]        # 0x140042208
   140032946:	call   QWORD PTR [rip+0xa974]        # 0x14003d2c0
   14003294c:	mov    rcx,QWORD PTR [rip+0x22b9d]        # 0x1400554f0
   140032953:	lea    rdx,[rip+0xf7b6]        # 0x140042110
   14003295a:	call   QWORD PTR [rip+0xa960]        # 0x14003d2c0
   140032960:	mov    rcx,QWORD PTR [rip+0x22b89]        # 0x1400554f0
   140032967:	lea    rdx,[rip+0xfb1a]        # 0x140042488
   14003296e:	call   QWORD PTR [rip+0xa94c]        # 0x14003d2c0
   140032974:	mov    rcx,QWORD PTR [rip+0x22b75]        # 0x1400554f0
   14003297b:	lea    rdx,[rip+0xf7b6]        # 0x140042138
   140032982:	call   QWORD PTR [rip+0xa938]        # 0x14003d2c0
   140032988:	mov    rcx,QWORD PTR [rip+0x22b61]        # 0x1400554f0
   14003298f:	lea    rdx,[rip+0xf902]        # 0x140042298
   140032996:	call   QWORD PTR [rip+0xa924]        # 0x14003d2c0
   14003299c:	mov    rcx,QWORD PTR [rip+0x22b4d]        # 0x1400554f0
   1400329a3:	lea    rdx,[rip+0xf7ce]        # 0x140042178
   1400329aa:	call   QWORD PTR [rip+0xa910]        # 0x14003d2c0
   1400329b0:	mov    rcx,QWORD PTR [rip+0x22b39]        # 0x1400554f0
   1400329b7:	lea    rdx,[rip+0xfae2]        # 0x1400424a0
   1400329be:	call   QWORD PTR [rip+0xa8fc]        # 0x14003d2c0
   1400329c4:	mov    rcx,QWORD PTR [rip+0x22b25]        # 0x1400554f0
   1400329cb:	lea    rdx,[rip+0xf836]        # 0x140042208
   1400329d2:	call   QWORD PTR [rip+0xa8e8]        # 0x14003d2c0
   1400329d8:	mov    rcx,QWORD PTR [rip+0x22b11]        # 0x1400554f0
   1400329df:	lea    rdx,[rip+0xf72a]        # 0x140042110
   1400329e6:	call   QWORD PTR [rip+0xa8d4]        # 0x14003d2c0
   1400329ec:	mov    rcx,QWORD PTR [rip+0x22afd]        # 0x1400554f0
   1400329f3:	lea    rdx,[rip+0xfac6]        # 0x1400424c0
   1400329fa:	call   QWORD PTR [rip+0xa8c0]        # 0x14003d2c0
   140032a00:	mov    rcx,QWORD PTR [rip+0x22ae9]        # 0x1400554f0
   140032a07:	lea    rdx,[rip+0xf72a]        # 0x140042138
   140032a0e:	call   QWORD PTR [rip+0xa8ac]        # 0x14003d2c0
   140032a14:	mov    rcx,QWORD PTR [rip+0x22ad5]        # 0x1400554f0
   140032a1b:	lea    rdx,[rip+0xfab6]        # 0x1400424d8
   140032a22:	call   QWORD PTR [rip+0xa898]        # 0x14003d2c0
   140032a28:	mov    rcx,QWORD PTR [rip+0x22ac1]        # 0x1400554f0
   140032a2f:	lea    rdx,[rip+0xf882]        # 0x1400422b8
   140032a36:	call   QWORD PTR [rip+0xa884]        # 0x14003d2c0
   140032a3c:	mov    rcx,QWORD PTR [rip+0x22aad]        # 0x1400554f0
   140032a43:	lea    rdx,[rip+0xfaae]        # 0x1400424f8
   140032a4a:	call   QWORD PTR [rip+0xa870]        # 0x14003d2c0
   140032a50:	mov    rcx,QWORD PTR [rip+0x22a99]        # 0x1400554f0
   140032a57:	lea    rdx,[rip+0xf7aa]        # 0x140042208
   140032a5e:	call   QWORD PTR [rip+0xa85c]        # 0x14003d2c0
   140032a64:	mov    rcx,QWORD PTR [rip+0x22a85]        # 0x1400554f0
   140032a6b:	lea    rdx,[rip+0xf69e]        # 0x140042110
   140032a72:	call   QWORD PTR [rip+0xa848]        # 0x14003d2c0
   140032a78:	mov    rcx,QWORD PTR [rip+0x22a71]        # 0x1400554f0
   140032a7f:	lea    rdx,[rip+0xfa92]        # 0x140042518
   140032a86:	call   QWORD PTR [rip+0xa834]        # 0x14003d2c0
   140032a8c:	mov    rcx,QWORD PTR [rip+0x22a5d]        # 0x1400554f0
   140032a93:	lea    rdx,[rip+0xf69e]        # 0x140042138
   140032a9a:	call   QWORD PTR [rip+0xa820]        # 0x14003d2c0
   140032aa0:	mov    rcx,QWORD PTR [rip+0x22a49]        # 0x1400554f0
   140032aa7:	lea    rdx,[rip+0xfa82]        # 0x140042530
   140032aae:	call   QWORD PTR [rip+0xa80c]        # 0x14003d2c0
   140032ab4:	mov    rcx,QWORD PTR [rip+0x22a35]        # 0x1400554f0
   140032abb:	lea    rdx,[rip+0xf6b6]        # 0x140042178
   140032ac2:	call   QWORD PTR [rip+0xa7f8]        # 0x14003d2c0
   140032ac8:	mov    rcx,QWORD PTR [rip+0x22a21]        # 0x1400554f0
   140032acf:	lea    rdx,[rip+0xf762]        # 0x140042238
   140032ad6:	call   QWORD PTR [rip+0xa7e4]        # 0x14003d2c0
   140032adc:	mov    rcx,QWORD PTR [rip+0x22a0d]        # 0x1400554f0
   140032ae3:	lea    rdx,[rip+0xf71e]        # 0x140042208
   140032aea:	call   QWORD PTR [rip+0xa7d0]        # 0x14003d2c0
   140032af0:	mov    rcx,QWORD PTR [rip+0x229f9]        # 0x1400554f0
   140032af7:	lea    rdx,[rip+0xf612]        # 0x140042110
   140032afe:	call   QWORD PTR [rip+0xa7bc]        # 0x14003d2c0
   140032b04:	mov    rcx,QWORD PTR [rip+0x229e5]        # 0x1400554f0
   140032b0b:	lea    rdx,[rip+0xfa3e]        # 0x140042550
   140032b12:	call   QWORD PTR [rip+0xa7a8]        # 0x14003d2c0
   140032b18:	mov    rcx,QWORD PTR [rip+0x229d1]        # 0x1400554f0
   140032b1f:	lea    rdx,[rip+0xfa4a]        # 0x140042570
   140032b26:	call   QWORD PTR [rip+0xa794]        # 0x14003d2c0
   140032b2c:	mov    rcx,QWORD PTR [rip+0x229bd]        # 0x1400554f0
   140032b33:	lea    rdx,[rip+0xf75e]        # 0x140042298
   140032b3a:	call   QWORD PTR [rip+0xa780]        # 0x14003d2c0
   140032b40:	mov    rcx,QWORD PTR [rip+0x229a9]        # 0x1400554f0
   140032b47:	lea    rdx,[rip+0xf62a]        # 0x140042178
   140032b4e:	call   QWORD PTR [rip+0xa76c]        # 0x14003d2c0
   140032b54:	mov    rcx,QWORD PTR [rip+0x22995]        # 0x1400554f0
   140032b5b:	lea    rdx,[rip+0xf6d6]        # 0x140042238
   140032b62:	call   QWORD PTR [rip+0xa758]        # 0x14003d2c0
   140032b68:	mov    rcx,QWORD PTR [rip+0x22981]        # 0x1400554f0
   140032b6f:	lea    rdx,[rip+0xf692]        # 0x140042208
   140032b76:	call   QWORD PTR [rip+0xa744]        # 0x14003d2c0
   140032b7c:	mov    rcx,QWORD PTR [rip+0x2296d]        # 0x1400554f0
   140032b83:	lea    rdx,[rip+0xf586]        # 0x140042110
   140032b8a:	call   QWORD PTR [rip+0xa730]        # 0x14003d2c0
   140032b90:	mov    rcx,QWORD PTR [rip+0x22959]        # 0x1400554f0
   140032b97:	lea    rdx,[rip+0xf9f2]        # 0x140042590
   140032b9e:	call   QWORD PTR [rip+0xa71c]        # 0x14003d2c0
   140032ba4:	mov    rcx,QWORD PTR [rip+0x22945]        # 0x1400554f0
   140032bab:	lea    rdx,[rip+0xf586]        # 0x140042138
   140032bb2:	call   QWORD PTR [rip+0xa708]        # 0x14003d2c0
   140032bb8:	mov    rcx,QWORD PTR [rip+0x22931]        # 0x1400554f0
   140032bbf:	lea    rdx,[rip+0xf592]        # 0x140042158
   140032bc6:	call   QWORD PTR [rip+0xa6f4]        # 0x14003d2c0
   140032bcc:	mov    rcx,QWORD PTR [rip+0x2291d]        # 0x1400554f0
   140032bd3:	lea    rdx,[rip+0xf59e]        # 0x140042178
   140032bda:	call   QWORD PTR [rip+0xa6e0]        # 0x14003d2c0
   140032be0:	mov    rcx,QWORD PTR [rip+0x22909]        # 0x1400554f0
   140032be7:	lea    rdx,[rip+0xf9ba]        # 0x1400425a8
   140032bee:	call   QWORD PTR [rip+0xa6cc]        # 0x14003d2c0
   140032bf4:	mov    rcx,QWORD PTR [rip+0x228f5]        # 0x1400554f0
   140032bfb:	lea    rdx,[rip+0xf606]        # 0x140042208
   140032c02:	call   QWORD PTR [rip+0xa6b8]        # 0x14003d2c0
   140032c08:	mov    rcx,QWORD PTR [rip+0x228e1]        # 0x1400554f0
   140032c0f:	lea    rdx,[rip+0xf4fa]        # 0x140042110
   140032c16:	call   QWORD PTR [rip+0xa6a4]        # 0x14003d2c0
   140032c1c:	mov    rcx,QWORD PTR [rip+0x228cd]        # 0x1400554f0
   140032c23:	lea    rdx,[rip+0xf99e]        # 0x1400425c8
   140032c2a:	call   QWORD PTR [rip+0xa690]        # 0x14003d2c0
   140032c30:	mov    rcx,QWORD PTR [rip+0x228b9]        # 0x1400554f0
   140032c37:	lea    rdx,[rip+0xf4fa]        # 0x140042138
   140032c3e:	call   QWORD PTR [rip+0xa67c]        # 0x14003d2c0
   140032c44:	mov    rcx,QWORD PTR [rip+0x228a5]        # 0x1400554f0
   140032c4b:	lea    rdx,[rip+0xf506]        # 0x140042158
   140032c52:	call   QWORD PTR [rip+0xa668]        # 0x14003d2c0
   140032c58:	mov    rcx,QWORD PTR [rip+0x22891]        # 0x1400554f0
   140032c5f:	lea    rdx,[rip+0xf512]        # 0x140042178
   140032c66:	call   QWORD PTR [rip+0xa654]        # 0x14003d2c0
   140032c6c:	mov    rcx,QWORD PTR [rip+0x2287d]        # 0x1400554f0
   140032c73:	lea    rdx,[rip+0xf96e]        # 0x1400425e8
   140032c7a:	call   QWORD PTR [rip+0xa640]        # 0x14003d2c0
   140032c80:	mov    rcx,QWORD PTR [rip+0x22869]        # 0x1400554f0
   140032c87:	lea    rdx,[rip+0xf57a]        # 0x140042208
   140032c8e:	call   QWORD PTR [rip+0xa62c]        # 0x14003d2c0
   140032c94:	mov    rcx,QWORD PTR [rip+0x22855]        # 0x1400554f0
   140032c9b:	lea    rdx,[rip+0xf46e]        # 0x140042110
   140032ca2:	call   QWORD PTR [rip+0xa618]        # 0x14003d2c0
   140032ca8:	mov    rcx,QWORD PTR [rip+0x22841]        # 0x1400554f0
   140032caf:	lea    rdx,[rip+0xf952]        # 0x140042608
   140032cb6:	call   QWORD PTR [rip+0xa604]        # 0x14003d2c0
   140032cbc:	mov    rcx,QWORD PTR [rip+0x2282d]        # 0x1400554f0
   140032cc3:	lea    rdx,[rip+0xf95e]        # 0x140042628
   140032cca:	call   QWORD PTR [rip+0xa5f0]        # 0x14003d2c0
   140032cd0:	mov    rcx,QWORD PTR [rip+0x22819]        # 0x1400554f0
   140032cd7:	lea    rdx,[rip+0xf96a]        # 0x140042648
   140032cde:	call   QWORD PTR [rip+0xa5dc]        # 0x14003d2c0
   140032ce4:	mov    rcx,QWORD PTR [rip+0x22805]        # 0x1400554f0
   140032ceb:	lea    rdx,[rip+0xf486]        # 0x140042178
   140032cf2:	call   QWORD PTR [rip+0xa5c8]        # 0x14003d2c0
   140032cf8:	mov    rcx,QWORD PTR [rip+0x227f1]        # 0x1400554f0
   140032cff:	lea    rdx,[rip+0xf532]        # 0x140042238
   140032d06:	call   QWORD PTR [rip+0xa5b4]        # 0x14003d2c0
   140032d0c:	mov    rcx,QWORD PTR [rip+0x227dd]        # 0x1400554f0
   140032d13:	lea    rdx,[rip+0xf4ee]        # 0x140042208
   140032d1a:	call   QWORD PTR [rip+0xa5a0]        # 0x14003d2c0
   140032d20:	mov    rcx,QWORD PTR [rip+0x227c9]        # 0x1400554f0
   140032d27:	lea    rdx,[rip+0xf3e2]        # 0x140042110
   140032d2e:	call   QWORD PTR [rip+0xa58c]        # 0x14003d2c0
   140032d34:	mov    rcx,QWORD PTR [rip+0x227b5]        # 0x1400554f0
   140032d3b:	lea    rdx,[rip+0xf926]        # 0x140042668
   140032d42:	call   QWORD PTR [rip+0xa578]        # 0x14003d2c0
   140032d48:	mov    rcx,QWORD PTR [rip+0x227a1]        # 0x1400554f0
   140032d4f:	lea    rdx,[rip+0xf3e2]        # 0x140042138
   140032d56:	call   QWORD PTR [rip+0xa564]        # 0x14003d2c0
   140032d5c:	mov    rcx,QWORD PTR [rip+0x2278d]        # 0x1400554f0
   140032d63:	lea    rdx,[rip+0xf7c6]        # 0x140042530
   140032d6a:	call   QWORD PTR [rip+0xa550]        # 0x14003d2c0
   140032d70:	mov    rcx,QWORD PTR [rip+0x22779]        # 0x1400554f0
   140032d77:	lea    rdx,[rip+0xf90a]        # 0x140042688
   140032d7e:	call   QWORD PTR [rip+0xa53c]        # 0x14003d2c0
   140032d84:	mov    rcx,QWORD PTR [rip+0x22765]        # 0x1400554f0
   140032d8b:	lea    rdx,[rip+0xf4a6]        # 0x140042238
   140032d92:	call   QWORD PTR [rip+0xa528]        # 0x14003d2c0
   140032d98:	mov    rcx,QWORD PTR [rip+0x22751]        # 0x1400554f0
   140032d9f:	lea    rdx,[rip+0xf462]        # 0x140042208
   140032da6:	call   QWORD PTR [rip+0xa514]        # 0x14003d2c0
   140032dac:	mov    rcx,QWORD PTR [rip+0x2273d]        # 0x1400554f0
   140032db3:	lea    rdx,[rip+0xf356]        # 0x140042110
   140032dba:	call   QWORD PTR [rip+0xa500]        # 0x14003d2c0
   140032dc0:	mov    rcx,QWORD PTR [rip+0x22729]        # 0x1400554f0
   140032dc7:	lea    rdx,[rip+0xf8da]        # 0x1400426a8
   140032dce:	call   QWORD PTR [rip+0xa4ec]        # 0x14003d2c0
   140032dd4:	mov    rcx,QWORD PTR [rip+0x22715]        # 0x1400554f0
   140032ddb:	lea    rdx,[rip+0xf8e6]        # 0x1400426c8
   140032de2:	call   QWORD PTR [rip+0xa4d8]        # 0x14003d2c0
   140032de8:	mov    rcx,QWORD PTR [rip+0x22701]        # 0x1400554f0
   140032def:	lea    rdx,[rip+0xf362]        # 0x140042158
   140032df6:	call   QWORD PTR [rip+0xa4c4]        # 0x14003d2c0
   140032dfc:	mov    rcx,QWORD PTR [rip+0x226ed]        # 0x1400554f0
   140032e03:	lea    rdx,[rip+0xf4ae]        # 0x1400422b8
   140032e0a:	call   QWORD PTR [rip+0xa4b0]        # 0x14003d2c0
   140032e10:	mov    rcx,QWORD PTR [rip+0x226d9]        # 0x1400554f0
   140032e17:	lea    rdx,[rip+0xf41a]        # 0x140042238
   140032e1e:	call   QWORD PTR [rip+0xa49c]        # 0x14003d2c0
   140032e24:	mov    rcx,QWORD PTR [rip+0x226c5]        # 0x1400554f0
   140032e2b:	lea    rdx,[rip+0xf3d6]        # 0x140042208
   140032e32:	call   QWORD PTR [rip+0xa488]        # 0x14003d2c0
   140032e38:	mov    rcx,QWORD PTR [rip+0x226b1]        # 0x1400554f0
   140032e3f:	lea    rdx,[rip+0xf8a2]        # 0x1400426e8
   140032e46:	call   QWORD PTR [rip+0xa474]        # 0x14003d2c0
   140032e4c:	mov    rbx,QWORD PTR [rsp+0x40]
   140032e51:	add    rsp,0x30
   140032e55:	pop    rdi
   140032e56:	ret    
   140032e57:	int3   
   140032e58:	int3   
   140032e59:	int3   
   140032e5a:	int3   
   140032e5b:	int3   
   140032e5c:	int3   
   140032e5d:	int3   
   140032e5e:	int3   
   140032e5f:	int3   
   140032e60:	lea    rax,[rip+0xf135]        # 0x140041f9c
   140032e67:	mov    DWORD PTR [rip+0x213bb],0x0        # 0x14005422c
   140032e71:	mov    BYTE PTR [rip+0x213c8],0x0        # 0x140054240
   140032e78:	mov    BYTE PTR [rip+0x213d1],0x0        # 0x140054250
   140032e7f:	mov    WORD PTR [rip+0x213ca],0xf00        # 0x140054252
   140032e88:	mov    BYTE PTR [rip+0x213c5],0x1        # 0x140054254
   140032e8f:	mov    QWORD PTR [rip+0x213b2],rax        # 0x140054248
   140032e96:	ret    
   140032e97:	int3   
   140032e98:	int3   
   140032e99:	int3   
   140032e9a:	int3   
   140032e9b:	int3   
   140032e9c:	int3   
   140032e9d:	int3   
   140032e9e:	int3   
   140032e9f:	int3   
   140032ea0:	cmp    ecx,0x8
   140032ea3:	jg     0x140032ebd
   140032ea5:	mov    r8d,ecx
   140032ea8:	mov    rcx,QWORD PTR [rip+0x22641]        # 0x1400554f0
   140032eaf:	lea    rdx,[rip+0xf17a]        # 0x140042030
   140032eb6:	rex.W jmp QWORD PTR [rip+0xa403]        # 0x14003d2c0
   140032ebd:	movsxd r8,ecx
   140032ec0:	mov    rcx,QWORD PTR [rip+0x22629]        # 0x1400554f0
   140032ec7:	lea    rax,[rip+0x1f3b2]        # 0x140052280
   140032ece:	mov    r8,QWORD PTR [rax+r8*8]
   140032ed2:	lea    rdx,[rip+0xf16f]        # 0x140042048
   140032ed9:	rex.W jmp QWORD PTR [rip+0xa3e0]        # 0x14003d2c0
   140032ee0:	sub    rsp,0x28
   140032ee4:	lea    r8,[rip+0xa52d]        # 0x14003d418
   140032eeb:	call   0x14001c3e0
   140032ef0:	cmp    BYTE PTR [rax],0x0
   140032ef3:	je     0x140032f11
   140032ef5:	mov    rcx,QWORD PTR [rip+0x225f4]        # 0x1400554f0
   140032efc:	lea    rdx,[rip+0xf179]        # 0x14004207c
   140032f03:	mov    r8,rax
   140032f06:	add    rsp,0x28
   140032f0a:	rex.W jmp QWORD PTR [rip+0xa3af]        # 0x14003d2c0
   140032f11:	add    rsp,0x28
   140032f15:	ret    
   140032f16:	int3   
   140032f17:	int3   
   140032f18:	int3   
   140032f19:	int3   
   140032f1a:	int3   
   140032f1b:	int3   
   140032f1c:	int3   
   140032f1d:	int3   
   140032f1e:	int3   
   140032f1f:	int3   
   140032f20:	sub    rsp,0x38
   140032f24:	movsx  edx,BYTE PTR [rcx+0x10]
   140032f28:	lea    r8,[rip+0xf0a9]        # 0x140041fd8
   140032f2f:	mov    r9,r8
   140032f32:	dec    edx
   140032f34:	je     0x140032f43
   140032f36:	dec    edx
   140032f38:	jne    0x140032f4a
   140032f3a:	lea    r8,[rip+0xf0a7]        # 0x140041fe8
   140032f41:	jmp    0x140032f4a
   140032f43:	lea    r9,[rip+0xf096]        # 0x140041fe0
   140032f4a:	movsd  xmm3,QWORD PTR [rip+0x212ce]        # 0x140054220
   140032f52:	mov    QWORD PTR [rsp+0x28],r8
   140032f57:	mov    r8,QWORD PTR [rcx+0x8]
   140032f5b:	mov    QWORD PTR [rsp+0x20],r9
   140032f60:	lea    rdx,[rip+0xf089]        # 0x140041ff0
   140032f67:	mulsd  xmm3,QWORD PTR [rcx+0x18]
   140032f6c:	mov    rcx,QWORD PTR [rip+0x2257d]        # 0x1400554f0
   140032f73:	movq   r9,xmm3
   140032f78:	call   QWORD PTR [rip+0xa342]        # 0x14003d2c0
   140032f7e:	add    rsp,0x38
   140032f82:	ret    
   140032f83:	int3   
   140032f84:	int3   
   140032f85:	int3   
   140032f86:	int3   
   140032f87:	int3   
   140032f88:	int3   
   140032f89:	int3   
   140032f8a:	int3   
   140032f8b:	int3   
   140032f8c:	int3   
   140032f8d:	int3   
   140032f8e:	int3   
   140032f8f:	int3   
   140032f90:	mov    QWORD PTR [rsp+0x10],rbx
   140032f95:	mov    QWORD PTR [rsp+0x18],rsi
   140032f9a:	push   rdi
   140032f9b:	sub    rsp,0x20
   140032f9f:	mov    r8,QWORD PTR [rip+0x2126a]        # 0x140054210
   140032fa6:	xor    ebx,ebx
   140032fa8:	mov    rdi,rcx
   140032fab:	test   r8,r8
   140032fae:	jne    0x140032fcf
   140032fb0:	mov    esi,0x40
   140032fb5:	mov    ecx,esi
   140032fb7:	mov    DWORD PTR [rip+0x2125b],esi        # 0x140054218
   140032fbd:	call   QWORD PTR [rip+0xa1a5]        # 0x14003d168
   140032fc3:	mov    r8,rax
   140032fc6:	mov    QWORD PTR [rip+0x21243],rax        # 0x140054210
   140032fcd:	jmp    0x140032fd5
   140032fcf:	mov    esi,DWORD PTR [rip+0x21243]        # 0x140054218
   140032fd5:	mov    rax,r8
   140032fd8:	cmp    BYTE PTR [rdi],bl
   140032fda:	je     0x140033077
   140032fe0:	mov    QWORD PTR [rsp+0x30],rbp
   140032fe5:	movabs rbp,0x220000000800001
   140032fef:	nop
   140032ff0:	lea    ecx,[rsi-0x8]
   140032ff3:	cmp    ebx,ecx
   140032ff5:	jle    0x140033018
   140032ff7:	lea    eax,[rsi+rsi*1]
   140032ffa:	mov    rcx,r8
   140032ffd:	movsxd rsi,eax
   140033000:	mov    rdx,rsi
   140033003:	mov    DWORD PTR [rip+0x2120f],esi        # 0x140054218
   140033009:	call   QWORD PTR [rip+0xa099]        # 0x14003d0a8
   14003300f:	mov    r8,rax
   140033012:	movsxd rax,ebx
   140033015:	add    rax,r8
   140033018:	movzx  edx,BYTE PTR [rdi]
   14003301b:	movzx  ecx,dl
   14003301e:	cmp    dl,0x9
   140033021:	je     0x14003303e
   140033023:	sub    cl,0x27
   140033026:	cmp    cl,0x39
   140033029:	ja     0x140033035
   14003302b:	bt     rbp,rcx
   14003302f:	jae    0x140033035
   140033031:	test   dl,dl
   140033033:	jne    0x140033040
   140033035:	mov    BYTE PTR [rax],dl
   140033037:	inc    rax
   14003303a:	inc    ebx
   14003303c:	jmp    0x14003304d
   14003303e:	mov    dl,0x74
   140033040:	mov    BYTE PTR [rax],0x5c
   140033043:	mov    BYTE PTR [rax+0x1],dl
   140033046:	add    rax,0x2
   14003304a:	add    ebx,0x2
   14003304d:	inc    rdi
   140033050:	cmp    BYTE PTR [rdi],0x0
   140033053:	jne    0x140032ff0
   140033055:	mov    rbp,QWORD PTR [rsp+0x30]
   14003305a:	mov    BYTE PTR [rax],0x0
   14003305d:	mov    QWORD PTR [rip+0x211ac],r8        # 0x140054210
   140033064:	mov    rax,r8
   140033067:	mov    rbx,QWORD PTR [rsp+0x38]
   14003306c:	mov    rsi,QWORD PTR [rsp+0x40]
   140033071:	add    rsp,0x20
   140033075:	pop    rdi
   140033076:	ret    
   140033077:	mov    rsi,QWORD PTR [rsp+0x40]
   14003307c:	mov    BYTE PTR [r8],bl
   14003307f:	mov    rbx,QWORD PTR [rsp+0x38]
   140033084:	add    rsp,0x20
   140033088:	pop    rdi
   140033089:	ret    
   14003308a:	int3   
   14003308b:	int3   
   14003308c:	int3   
   14003308d:	int3   
   14003308e:	int3   
   14003308f:	int3   
   140033090:	sub    rsp,0x38
   140033094:	movsx  eax,BYTE PTR [rcx+0x14]
   140033098:	movsx  r9d,BYTE PTR [rcx+0x13]
   14003309d:	movsx  r8d,BYTE PTR [rcx+0x12]
   1400330a2:	mov    rcx,QWORD PTR [rip+0x22447]        # 0x1400554f0
   1400330a9:	lea    rdx,[rip+0xefa8]        # 0x140042058
   1400330b0:	mov    DWORD PTR [rsp+0x20],eax
   1400330b4:	call   QWORD PTR [rip+0xa206]        # 0x14003d2c0
   1400330ba:	add    rsp,0x38
   1400330be:	ret    
   1400330bf:	int3   
   1400330c0:	cmp    DWORD PTR [rip+0x21161],0x0        # 0x140054228
   1400330c7:	movsd  xmm1,QWORD PTR [rip+0x21151]        # 0x140054220
   1400330cf:	movaps xmm2,xmm1
   1400330d2:	mulsd  xmm1,QWORD PTR [rdx+0x8]
   1400330d7:	mulsd  xmm2,QWORD PTR [rdx]
   1400330db:	jne    0x140033102
   1400330dd:	mov    eax,DWORD PTR [rip+0x21159]        # 0x14005423c
   1400330e3:	movsd  QWORD PTR [rcx],xmm2
   1400330e7:	sub    eax,DWORD PTR [rip+0x21147]        # 0x140054234
   1400330ed:	movd   xmm0,eax
   1400330f1:	mov    rax,rcx
   1400330f4:	cvtdq2pd xmm0,xmm0
   1400330f8:	subsd  xmm0,xmm1
   1400330fc:	movsd  QWORD PTR [rcx+0x8],xmm0
   140033101:	ret    
   140033102:	mov    eax,DWORD PTR [rip+0x21130]        # 0x140054238
   140033108:	movsd  QWORD PTR [rcx+0x8],xmm2
   14003310d:	sub    eax,DWORD PTR [rip+0x2111d]        # 0x140054230
   140033113:	movd   xmm0,eax
   140033117:	mov    rax,rcx
   14003311a:	cvtdq2pd xmm0,xmm0
   14003311e:	subsd  xmm0,xmm1
   140033122:	movsd  QWORD PTR [rcx],xmm0
   140033126:	ret    
   140033127:	int3   
   140033128:	int3   
   140033129:	int3   
   14003312a:	int3   
   14003312b:	int3   
   14003312c:	int3   
   14003312d:	int3   
   14003312e:	int3   
   14003312f:	int3   
   140033130:	mov    QWORD PTR [rsp+0x8],rbx
   140033135:	mov    QWORD PTR [rsp+0x10],rsi
   14003313a:	push   rdi
   14003313b:	sub    rsp,0x40
   14003313f:	movsxd rbx,edx
   140033142:	mov    rsi,rcx
   140033145:	mov    rcx,QWORD PTR [rip+0x223a4]        # 0x1400554f0
   14003314c:	lea    rdx,[rip+0xee55]        # 0x140041fa8
   140033153:	mov    r8d,ebx
   140033156:	call   QWORD PTR [rip+0xa164]        # 0x14003d2c0
   14003315c:	xor    edi,edi
   14003315e:	test   rbx,rbx
   140033161:	jle    0x14003325b
   140033167:	nop    WORD PTR [rax+rax*1+0x0]
   140033170:	cmp    DWORD PTR [rip+0x210b1],0x0        # 0x140054228
   140033177:	movsd  xmm3,QWORD PTR [rip+0x210a1]        # 0x140054220
   14003317f:	movd   xmm0,DWORD PTR [rsi+rdi*8]
   140033184:	movd   xmm1,DWORD PTR [rsi+rdi*8+0x4]
   14003318a:	movaps xmm4,xmm3
   14003318d:	cvtdq2pd xmm0,xmm0
   140033191:	movsd  QWORD PTR [rsp+0x30],xmm0
   140033197:	movss  xmm0,DWORD PTR [rsp+0x30]
   14003319d:	movss  xmm2,DWORD PTR [rsp+0x34]
   1400331a3:	unpcklps xmm0,xmm2
   1400331a6:	mulsd  xmm4,xmm0
   1400331aa:	cvtdq2pd xmm1,xmm1
   1400331ae:	movsd  QWORD PTR [rsp+0x38],xmm1
   1400331b4:	movss  xmm0,DWORD PTR [rsp+0x38]
   1400331ba:	movss  xmm1,DWORD PTR [rsp+0x3c]
   1400331c0:	unpcklps xmm0,xmm1
   1400331c3:	mulsd  xmm3,xmm0
   1400331c7:	jne    0x1400331ef
   1400331c9:	mov    eax,DWORD PTR [rip+0x2106d]        # 0x14005423c
   1400331cf:	movsd  QWORD PTR [rsp+0x20],xmm4
   1400331d5:	sub    eax,DWORD PTR [rip+0x21059]        # 0x140054234
   1400331db:	movd   xmm0,eax
   1400331df:	cvtdq2pd xmm0,xmm0
   1400331e3:	subsd  xmm0,xmm3
   1400331e7:	movsd  QWORD PTR [rsp+0x28],xmm0
   1400331ed:	jmp    0x140033213
   1400331ef:	mov    eax,DWORD PTR [rip+0x21043]        # 0x140054238
   1400331f5:	movsd  QWORD PTR [rsp+0x28],xmm4
   1400331fb:	sub    eax,DWORD PTR [rip+0x2102f]        # 0x140054230
   140033201:	movd   xmm0,eax
   140033205:	cvtdq2pd xmm0,xmm0
   140033209:	subsd  xmm0,xmm3
   14003320d:	movsd  QWORD PTR [rsp+0x20],xmm0
   140033213:	movss  xmm1,DWORD PTR [rsp+0x24]
   140033219:	movss  xmm0,DWORD PTR [rsp+0x2c]
   14003321f:	movss  xmm3,DWORD PTR [rsp+0x28]
   140033225:	mov    rcx,QWORD PTR [rip+0x222c4]        # 0x1400554f0
   14003322c:	lea    rdx,[rip+0xed8d]        # 0x140041fc0
   140033233:	unpcklps xmm3,xmm0
   140033236:	movss  xmm2,DWORD PTR [rsp+0x20]
   14003323c:	movq   r9,xmm3
   140033241:	unpcklps xmm2,xmm1
   140033244:	movq   r8,xmm2
   140033249:	call   QWORD PTR [rip+0xa071]        # 0x14003d2c0
   14003324f:	inc    rdi
   140033252:	cmp    rdi,rbx
   140033255:	jl     0x140033170
   14003325b:	mov    rbx,QWORD PTR [rsp+0x50]
   140033260:	mov    rsi,QWORD PTR [rsp+0x58]
   140033265:	add    rsp,0x40
   140033269:	pop    rdi
   14003326a:	ret    
   14003326b:	int3   
   14003326c:	int3   
   14003326d:	int3   
   14003326e:	int3   
   14003326f:	int3   
   140033270:	sub    rsp,0x28
   140033274:	mov    rcx,QWORD PTR [rip+0x22275]        # 0x1400554f0
   14003327b:	lea    rdx,[rip+0x1050a]        # 0x14004378c
   140033282:	call   QWORD PTR [rip+0xa038]        # 0x14003d2c0
   140033288:	cmp    DWORD PTR [rip+0x2103d],0x0        # 0x1400542cc
   14003328f:	lea    rax,[rip+0xf71e]        # 0x1400429b4
   140033296:	mov    QWORD PTR [rip+0x1f193],rax        # 0x140052430
   14003329d:	je     0x1400332be
   14003329f:	lea    rdx,[rip+0x104fa]        # 0x1400437a0
   1400332a6:	lea    rcx,[rip+0xe4b3]        # 0x140041760
   1400332ad:	mov    r8d,0xf2
   1400332b3:	add    rsp,0x28
   1400332b7:	rex.W jmp QWORD PTR [rip+0x9dd2]        # 0x14003d090
   1400332be:	add    rsp,0x28
   1400332c2:	ret    
   1400332c3:	int3   
   1400332c4:	int3   
   1400332c5:	int3   
   1400332c6:	int3   
   1400332c7:	int3   
   1400332c8:	int3   
   1400332c9:	int3   
   1400332ca:	int3   
   1400332cb:	int3   
   1400332cc:	int3   
   1400332cd:	int3   
   1400332ce:	int3   
   1400332cf:	int3   
   1400332d0:	ret    0x0
   1400332d3:	int3   
   1400332d4:	int3   
   1400332d5:	int3   
   1400332d6:	int3   
   1400332d7:	int3   
   1400332d8:	int3   
   1400332d9:	int3   
   1400332da:	int3   
   1400332db:	int3   
   1400332dc:	int3   
   1400332dd:	int3   
   1400332de:	int3   
   1400332df:	int3   
   1400332e0:	ret    0x0
   1400332e3:	int3   
   1400332e4:	int3   
   1400332e5:	int3   
   1400332e6:	int3   
   1400332e7:	int3   
   1400332e8:	int3   
   1400332e9:	int3   
   1400332ea:	int3   
   1400332eb:	int3   
   1400332ec:	int3   
   1400332ed:	int3   
   1400332ee:	int3   
   1400332ef:	int3   
   1400332f0:	ret    0x0
   1400332f3:	int3   
   1400332f4:	int3   
   1400332f5:	int3   
   1400332f6:	int3   
   1400332f7:	int3   
   1400332f8:	int3   
   1400332f9:	int3   
   1400332fa:	int3   
   1400332fb:	int3   
   1400332fc:	int3   
   1400332fd:	int3   
   1400332fe:	int3   
   1400332ff:	int3   
   140033300:	ret    0x0
   140033303:	int3   
   140033304:	int3   
   140033305:	int3   
   140033306:	int3   
   140033307:	int3   
   140033308:	int3   
   140033309:	int3   
   14003330a:	int3   
   14003330b:	int3   
   14003330c:	int3   
   14003330d:	int3   
   14003330e:	int3   
   14003330f:	int3   
   140033310:	ret    0x0
   140033313:	int3   
   140033314:	int3   
   140033315:	int3   
   140033316:	int3   
   140033317:	int3   
   140033318:	int3   
   140033319:	int3   
   14003331a:	int3   
   14003331b:	int3   
   14003331c:	int3   
   14003331d:	int3   
   14003331e:	int3   
   14003331f:	int3   
   140033320:	ret    0x0
   140033323:	int3   
   140033324:	int3   
   140033325:	int3   
   140033326:	int3   
   140033327:	int3   
   140033328:	int3   
   140033329:	int3   
   14003332a:	int3   
   14003332b:	int3   
   14003332c:	int3   
   14003332d:	int3   
   14003332e:	int3   
   14003332f:	int3   
   140033330:	mov    r9,QWORD PTR [rcx+0x10]
   140033334:	mov    r8,QWORD PTR [rip+0x1f0f5]        # 0x140052430
   14003333b:	mov    rcx,QWORD PTR [rip+0x221ae]        # 0x1400554f0
   140033342:	lea    rdx,[rip+0x104cb]        # 0x140043814
   140033349:	rex.W jmp QWORD PTR [rip+0x9f70]        # 0x14003d2c0
   140033350:	ret    0x0
   140033353:	int3   
   140033354:	int3   
   140033355:	int3   
   140033356:	int3   
   140033357:	int3   
   140033358:	int3   
   140033359:	int3   
   14003335a:	int3   
   14003335b:	int3   
   14003335c:	int3   
   14003335d:	int3   
   14003335e:	int3   
   14003335f:	int3   
   140033360:	sub    rsp,0x38
   140033364:	mov    rax,QWORD PTR [rcx+0x10]
   140033368:	mov    r9,QWORD PTR [rcx+0x18]
   14003336c:	mov    r8,QWORD PTR [rip+0x1f0bd]        # 0x140052430
   140033373:	mov    rax,QWORD PTR [rax+0x10]
   140033377:	mov    r9,QWORD PTR [r9+0x10]
   14003337b:	mov    rcx,QWORD PTR [rip+0x2216e]        # 0x1400554f0
   140033382:	lea    rdx,[rip+0x10497]        # 0x140043820
   140033389:	mov    QWORD PTR [rsp+0x20],rax
   14003338e:	call   QWORD PTR [rip+0x9f2c]        # 0x14003d2c0
   140033394:	add    rsp,0x38
   140033398:	ret    
   140033399:	int3   
   14003339a:	int3   
   14003339b:	int3   
   14003339c:	int3   
   14003339d:	int3   
   14003339e:	int3   
   14003339f:	int3   
   1400333a0:	ret    0x0
   1400333a3:	int3   
   1400333a4:	int3   
   1400333a5:	int3   
   1400333a6:	int3   
   1400333a7:	int3   
   1400333a8:	int3   
   1400333a9:	int3   
   1400333aa:	int3   
   1400333ab:	int3   
   1400333ac:	int3   
   1400333ad:	int3   
   1400333ae:	int3   
   1400333af:	int3   
   1400333b0:	sub    rsp,0x28
   1400333b4:	mov    rcx,QWORD PTR [rip+0x22135]        # 0x1400554f0
   1400333bb:	lea    rdx,[rip+0xde7e]        # 0x140041240
   1400333c2:	call   QWORD PTR [rip+0x9ef8]        # 0x14003d2c0
   1400333c8:	mov    r8d,DWORD PTR [rip+0x20efd]        # 0x1400542cc
   1400333cf:	cmp    r8d,0x7
   1400333d3:	jne    0x1400333ff
   1400333d5:	call   QWORD PTR [rip+0x9ef5]        # 0x14003d2d0
   1400333db:	lea    r9,[rip+0x1044e]        # 0x140043830
   1400333e2:	lea    r8,[rip+0x1f04f]        # 0x140052438
   1400333e9:	lea    rcx,[rax+0x60]
   1400333ed:	lea    rdx,[rip+0xf87c]        # 0x140042c70
   1400333f4:	add    rsp,0x28
   1400333f8:	rex.W jmp QWORD PTR [rip+0x9ec1]        # 0x14003d2c0
   1400333ff:	lea    rdx,[rip+0x20efa]        # 0x140054300
   140033406:	inc    r8d
   140033409:	movsxd rax,r8d
   14003340c:	mov    DWORD PTR [rip+0x20eb9],r8d        # 0x1400542cc
   140033413:	lea    rcx,[rax+rax*2]
   140033417:	lea    rax,[rax+rax*2]
   14003341b:	movups xmm0,XMMWORD PTR [rdx+rcx*8-0x18]
   140033420:	movups XMMWORD PTR [rdx+rax*8],xmm0
   140033424:	movsd  xmm1,QWORD PTR [rdx+rcx*8-0x8]
   14003342a:	mov    rcx,QWORD PTR [rip+0x220bf]        # 0x1400554f0
   140033431:	movsd  QWORD PTR [rdx+rax*8+0x10],xmm1
   140033437:	lea    rdx,[rip+0x10402]        # 0x140043840
   14003343e:	add    rsp,0x28
   140033442:	rex.W jmp QWORD PTR [rip+0x9e77]        # 0x14003d2c0
   140033449:	int3   
   14003344a:	int3   
   14003344b:	int3   
   14003344c:	int3   
   14003344d:	int3   
   14003344e:	int3   
   14003344f:	int3   
   140033450:	sub    rsp,0x28
   140033454:	mov    eax,DWORD PTR [rip+0x20e72]        # 0x1400542cc
   14003345a:	test   eax,eax
   14003345c:	jne    0x140033488
   14003345e:	call   QWORD PTR [rip+0x9e6c]        # 0x14003d2d0
   140033464:	lea    r9,[rip+0x103ed]        # 0x140043858
   14003346b:	lea    r8,[rip+0x1efc6]        # 0x140052438
   140033472:	lea    rcx,[rax+0x60]
   140033476:	lea    rdx,[rip+0xf7f3]        # 0x140042c70
   14003347d:	add    rsp,0x28
   140033481:	rex.W jmp QWORD PTR [rip+0x9e38]        # 0x14003d2c0
   140033488:	mov    rcx,QWORD PTR [rip+0x22061]        # 0x1400554f0
   14003348f:	dec    eax
   140033491:	lea    rdx,[rip+0xddc0]        # 0x140041258
   140033498:	mov    QWORD PTR [rsp+0x20],rbx
   14003349d:	mov    DWORD PTR [rip+0x20e29],eax        # 0x1400542cc
   1400334a3:	call   QWORD PTR [rip+0x9e17]        # 0x14003d2c0
   1400334a9:	movsxd r10,DWORD PTR [rip+0x20e1c]        # 0x1400542cc
   1400334b0:	lea    rbx,[rip+0x20e49]        # 0x140054300
   1400334b7:	lea    rax,[r10+r10*2]
   1400334bb:	mov    rdx,QWORD PTR [rbx+rax*8+0x20]
   1400334c0:	test   rdx,rdx
   1400334c3:	je     0x14003351d
   1400334c5:	lea    rax,[r10+r10*2]
   1400334c9:	mov    rcx,QWORD PTR [rbx+rax*8+0x8]
   1400334ce:	test   rcx,rcx
   1400334d1:	je     0x1400334fa
   1400334d3:	mov    r9,rcx
   1400334d6:	sub    r9,rdx
   1400334d9:	nop    DWORD PTR [rax+0x0]
   1400334e0:	movzx  r8d,BYTE PTR [rdx]
   1400334e4:	movzx  eax,BYTE PTR [rdx+r9*1]
   1400334e9:	sub    r8d,eax
   1400334ec:	jne    0x1400334f5
   1400334ee:	inc    rdx
   1400334f1:	test   eax,eax
   1400334f3:	jne    0x1400334e0
   1400334f5:	test   r8d,r8d
   1400334f8:	je     0x14003351d
   1400334fa:	call   0x140034830
   1400334ff:	mov    rcx,QWORD PTR [rip+0x21fea]        # 0x1400554f0
   140033506:	lea    rdx,[rip+0x1035b]        # 0x140043868
   14003350d:	mov    r8,rax
   140033510:	call   QWORD PTR [rip+0x9daa]        # 0x14003d2c0
   140033516:	mov    r10d,DWORD PTR [rip+0x20daf]        # 0x1400542cc
   14003351d:	movsxd rcx,r10d
   140033520:	lea    rax,[rcx+rcx*2]
   140033524:	movsd  xmm1,QWORD PTR [rbx+rax*8+0x10]
   14003352a:	lea    rax,[rcx+rcx*2]
   14003352e:	movsd  xmm0,QWORD PTR [rbx+rax*8+0x28]
   140033534:	mov    rbx,QWORD PTR [rsp+0x20]
   140033539:	ucomisd xmm0,xmm1
   14003353d:	jp     0x140033541
   14003353f:	je     0x14003357b
   140033541:	mulsd  xmm1,QWORD PTR [rip+0x20d9f]        # 0x1400542e8
   140033549:	movsd  xmm3,QWORD PTR [rip+0x20d9f]        # 0x1400542f0
   140033551:	mov    rcx,QWORD PTR [rip+0x21f98]        # 0x1400554f0
   140033558:	mov    eax,0x1
   14003355d:	lea    rdx,[rip+0x1030c]        # 0x140043870
   140033564:	movq   r9,xmm3
   140033569:	cvttsd2si r8d,xmm1
   14003356e:	cmp    r8d,eax
   140033571:	cmovl  r8d,eax
   140033575:	call   QWORD PTR [rip+0x9d45]        # 0x14003d2c0
   14003357b:	mov    rcx,QWORD PTR [rip+0x21f6e]        # 0x1400554f0
   140033582:	lea    rdx,[rip+0x102ff]        # 0x140043888
   140033589:	add    rsp,0x28
   14003358d:	rex.W jmp QWORD PTR [rip+0x9d2c]        # 0x14003d2c0
   140033594:	int3   
   140033595:	int3   
   140033596:	int3   
   140033597:	int3   
   140033598:	int3   
   140033599:	int3   
   14003359a:	int3   
   14003359b:	int3   
   14003359c:	int3   
   14003359d:	int3   
   14003359e:	int3   
   14003359f:	int3   
   1400335a0:	rex push rbx
   1400335a2:	sub    rsp,0x30
   1400335a6:	movaps XMMWORD PTR [rsp+0x20],xmm6
   1400335ab:	mov    r9,rcx
   1400335ae:	lea    rbx,[rip+0x20d4b]        # 0x140054300
   1400335b5:	movaps xmm6,xmm1
   1400335b8:	test   rcx,rcx
   1400335bb:	je     0x14003361b
   1400335bd:	movsxd rax,DWORD PTR [rip+0x20d08]        # 0x1400542cc
   1400335c4:	lea    r10,[rax+rax*2]
   1400335c8:	mov    rax,QWORD PTR [rbx+r10*8+0x8]
   1400335cd:	test   rax,rax
   1400335d0:	je     0x1400335f7
   1400335d2:	mov    r8,rcx
   1400335d5:	sub    r8,rax
   1400335d8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400335e0:	movzx  edx,BYTE PTR [rax]
   1400335e3:	movzx  ecx,BYTE PTR [rax+r8*1]
   1400335e8:	sub    edx,ecx
   1400335ea:	jne    0x1400335f3
   1400335ec:	inc    rax
   1400335ef:	test   ecx,ecx
   1400335f1:	jne    0x1400335e0
   1400335f3:	test   edx,edx
   1400335f5:	je     0x14003361b
   1400335f7:	mov    rcx,r9
   1400335fa:	mov    QWORD PTR [rbx+r10*8+0x8],r9
   1400335ff:	call   0x140034830
   140033604:	mov    rcx,QWORD PTR [rip+0x21ee5]        # 0x1400554f0
   14003360b:	lea    rdx,[rip+0x10256]        # 0x140043868
   140033612:	mov    r8,rax
   140033615:	call   QWORD PTR [rip+0x9ca5]        # 0x14003d2c0
   14003361b:	movsxd rax,DWORD PTR [rip+0x20caa]        # 0x1400542cc
   140033622:	lea    rcx,[rax+rax*2]
   140033626:	ucomisd xmm6,QWORD PTR [rbx+rcx*8+0x10]
   14003362c:	jp     0x140033630
   14003362e:	je     0x140033674
   140033630:	movsd  xmm0,QWORD PTR [rip+0x20cb0]        # 0x1400542e8
   140033638:	movsd  xmm3,QWORD PTR [rip+0x20cb0]        # 0x1400542f0
   140033640:	mov    eax,0x1
   140033645:	lea    rdx,[rip+0x10224]        # 0x140043870
   14003364c:	mulsd  xmm0,xmm6
   140033650:	movsd  QWORD PTR [rbx+rcx*8+0x10],xmm6
   140033656:	movq   r9,xmm3
   14003365b:	cvttsd2si r8d,xmm0
   140033660:	mov    rcx,QWORD PTR [rip+0x21e89]        # 0x1400554f0
   140033667:	cmp    r8d,eax
   14003366a:	cmovl  r8d,eax
   14003366e:	call   QWORD PTR [rip+0x9c4c]        # 0x14003d2c0
   140033674:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140033679:	add    rsp,0x30
   14003367d:	pop    rbx
   14003367e:	ret    
   14003367f:	int3   
   140033680:	mov    rax,rsp
   140033683:	mov    QWORD PTR [rax+0x10],rbx
   140033687:	mov    QWORD PTR [rax+0x18],rsi
   14003368b:	mov    QWORD PTR [rax+0x8],rcx
   14003368f:	push   rdi
   140033690:	sub    rsp,0x80
   140033697:	movaps XMMWORD PTR [rax-0x18],xmm6
   14003369b:	movaps XMMWORD PTR [rax-0x28],xmm7
   14003369f:	movaps XMMWORD PTR [rax-0x38],xmm8
   1400336a4:	lea    rsi,[rip+0x20c55]        # 0x140054300
   1400336ab:	xor    ebx,ebx
   1400336ad:	mov    rdi,rdx
   1400336b0:	movaps XMMWORD PTR [rax-0x48],xmm9
   1400336b5:	movsxd rax,DWORD PTR [rip+0x20c10]        # 0x1400542cc
   1400336bc:	lea    rcx,[rax+rax*2]
   1400336c0:	movzx  eax,BYTE PTR [rdx+0xa]
   1400336c4:	movsd  xmm6,QWORD PTR [rsi+rcx*8+0x10]
   1400336ca:	cmp    al,0x6c
   1400336cc:	je     0x1400336ed
   1400336ce:	cmp    al,0x72
   1400336d0:	movsx  eax,WORD PTR [rdx+0x8]
   1400336d4:	je     0x1400336e6
   1400336d6:	cdq    
   1400336d7:	sub    eax,edx
   1400336d9:	sar    eax,1
   1400336db:	neg    eax
   1400336dd:	add    DWORD PTR [rsp+0x90],eax
   1400336e4:	jmp    0x1400336ed
   1400336e6:	sub    DWORD PTR [rsp+0x90],eax
   1400336ed:	mov    rdx,QWORD PTR [rsp+0x90]
   1400336f5:	lea    rcx,[rsp+0x30]
   1400336fa:	call   0x14001bc30
   1400336ff:	movsxd rdx,DWORD PTR [rip+0x20bc6]        # 0x1400542cc
   140033706:	movaps xmm1,xmm6
   140033709:	lea    rcx,[rdx+rdx*2]
   14003370d:	divsd  xmm1,QWORD PTR [rip+0x103a3]        # 0x140043ab8
   140033715:	movups xmm0,XMMWORD PTR [rax]
   140033718:	movsx  eax,WORD PTR [rdi+0x8]
   14003371c:	movups xmm8,xmm0
   140033720:	movups XMMWORD PTR [rsp+0x30],xmm0
   140033725:	movsd  xmm9,QWORD PTR [rsp+0x30]
   14003372c:	movd   xmm0,eax
   140033730:	unpckhpd xmm8,xmm8
   140033735:	cvtdq2pd xmm0,xmm0
   140033739:	addsd  xmm8,xmm1
   14003373e:	movsd  xmm1,QWORD PTR [rsi+rcx*8+0x10]
   140033744:	divsd  xmm0,QWORD PTR [rip+0x10364]        # 0x140043ab0
   14003374c:	addsd  xmm9,xmm0
   140033751:	xorps  xmm0,xmm0
   140033754:	ucomisd xmm1,xmm0
   140033758:	jp     0x1400337a3
   14003375a:	jne    0x1400337a3
   14003375c:	mov    rcx,QWORD PTR [rsi+rcx*8+0x8]
   140033761:	movaps xmm1,xmm6
   140033764:	call   0x1400335a0
   140033769:	movsxd rdx,DWORD PTR [rip+0x20b5c]        # 0x1400542cc
   140033770:	movsx  rax,dx
   140033774:	movzx  ebx,dx
   140033777:	lea    rcx,[rax+rax*2]
   14003377b:	movsd  QWORD PTR [rsi+rcx*8+0x10],xmm6
   140033781:	test   dx,dx
   140033784:	je     0x1400337a3
   140033786:	data16 nop WORD PTR [rax+rax*1+0x0]
   140033790:	dec    bx
   140033793:	movsx  rax,bx
   140033797:	lea    rcx,[rax+rax*2]
   14003379b:	movsd  QWORD PTR [rsi+rcx*8+0x10],xmm6
   1400337a1:	jne    0x140033790
   1400337a3:	movsxd rax,edx
   1400337a6:	lea    rcx,[rax+rax*2]
   1400337aa:	ucomisd xmm6,QWORD PTR [rsi+rcx*8+0x10]
   1400337b0:	jp     0x1400337b4
   1400337b2:	je     0x1400337d6
   1400337b4:	mov    ebx,0x1
   1400337b9:	call   0x1400333b0
   1400337be:	movsxd rax,DWORD PTR [rip+0x20b07]        # 0x1400542cc
   1400337c5:	movaps xmm1,xmm6
   1400337c8:	lea    rcx,[rax+rax*2]
   1400337cc:	mov    rcx,QWORD PTR [rsi+rcx*8-0x10]
   1400337d1:	call   0x1400335a0
   1400337d6:	movsd  xmm7,QWORD PTR [rip+0x20b0a]        # 0x1400542e8
   1400337de:	mov    rcx,QWORD PTR [rdi]
   1400337e1:	movaps xmm6,xmm7
   1400337e4:	mulsd  xmm7,xmm9
   1400337e9:	mulsd  xmm6,xmm8
   1400337ee:	call   0x140034740
   1400337f3:	mov    rcx,QWORD PTR [rip+0x21cf6]        # 0x1400554f0
   1400337fa:	movaps xmm3,xmm7
   1400337fd:	lea    rdx,[rip+0x100ac]        # 0x1400438b0
   140033804:	mov    r8,rax
   140033807:	movsd  QWORD PTR [rsp+0x20],xmm6
   14003380d:	movq   r9,xmm3
   140033812:	call   QWORD PTR [rip+0x9aa8]        # 0x14003d2c0
   140033818:	test   bx,bx
   14003381b:	je     0x140033822
   14003381d:	call   0x140033450
   140033822:	movaps xmm6,XMMWORD PTR [rsp+0x70]
   140033827:	movaps xmm7,XMMWORD PTR [rsp+0x60]
   14003382c:	lea    r11,[rsp+0x80]
   140033834:	mov    rbx,QWORD PTR [r11+0x18]
   140033838:	mov    rsi,QWORD PTR [r11+0x20]
   14003383c:	movaps xmm8,XMMWORD PTR [r11-0x30]
   140033841:	movaps xmm9,XMMWORD PTR [r11-0x40]
   140033846:	mov    rsp,r11
   140033849:	pop    rdi
   14003384a:	ret    
   14003384b:	int3   
   14003384c:	int3   
   14003384d:	int3   
   14003384e:	int3   
   14003384f:	int3   
   140033850:	sub    rsp,0x48
   140033854:	movsxd rax,DWORD PTR [rip+0x20a71]        # 0x1400542cc
   14003385b:	xor    r8d,r8d
   14003385e:	lea    rdx,[rax+rax*2]
   140033862:	lea    rax,[rip+0x20a97]        # 0x140054300
   140033869:	mov    QWORD PTR [rax+rdx*8],rcx
   14003386d:	lea    rdx,[rsp+0x20]
   140033872:	call   0x140026220
   140033877:	mov    rcx,QWORD PTR [rip+0x21c72]        # 0x1400554f0
   14003387e:	lea    rdx,[rip+0x10043]        # 0x1400438c8
   140033885:	movsd  xmm2,QWORD PTR [rsp+0x30]
   14003388b:	movq   r8,xmm2
   140033890:	call   QWORD PTR [rip+0x9a2a]        # 0x14003d2c0
   140033896:	add    rsp,0x48
   14003389a:	ret    
   14003389b:	int3   
   14003389c:	int3   
   14003389d:	int3   
   14003389e:	int3   
   14003389f:	int3   
   1400338a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400338a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400338aa:	mov    QWORD PTR [rsp+0x18],rdi
   1400338af:	push   r14
   1400338b1:	sub    rsp,0x220
   1400338b8:	mov    r8d,DWORD PTR [rip+0x20a0d]        # 0x1400542cc
   1400338bf:	mov    r14,rcx
   1400338c2:	mov    rcx,QWORD PTR [rip+0x21c27]        # 0x1400554f0
   1400338c9:	lea    rdx,[rip+0x10008]        # 0x1400438d8
   1400338d0:	xor    sil,sil
   1400338d3:	mov    BYTE PTR [rsp+0x20],sil
   1400338d8:	call   QWORD PTR [rip+0x99e2]        # 0x14003d2c0
   1400338de:	mov    rdi,QWORD PTR [r14]
   1400338e1:	mov    rbx,rdi
   1400338e4:	test   rdi,rdi
   1400338e7:	je     0x1400339b5
   1400338ed:	nop    DWORD PTR [rax]
   1400338f0:	cmp    BYTE PTR [rdi],0x0
   1400338f3:	lea    r14,[r14+0x8]
   1400338f7:	je     0x140033908
   1400338f9:	nop    DWORD PTR [rax+0x0]
   140033900:	inc    rbx
   140033903:	cmp    BYTE PTR [rbx],0x0
   140033906:	jne    0x140033900
   140033908:	inc    rbx
   14003390b:	cmp    BYTE PTR [rbx],0x0
   14003390e:	je     0x14003398c
   140033910:	lea    rdx,[rip+0xffd9]        # 0x1400438f0
   140033917:	mov    rcx,rdi
   14003391a:	call   0x14003bc96
   14003391f:	test   eax,eax
   140033921:	jne    0x14003395b
   140033923:	mov    rcx,rbx
   140033926:	call   QWORD PTR [rip+0x9894]        # 0x14003d1c0
   14003392c:	lea    rdx,[rip+0xffcd]        # 0x140043900
   140033933:	lea    rcx,[rsp+0x20]
   140033938:	movsd  xmm3,QWORD PTR [rip+0x209b0]        # 0x1400542f0
   140033940:	divsd  xmm3,QWORD PTR [rip+0x209a0]        # 0x1400542e8
   140033948:	mov    r8d,eax
   14003394b:	movq   r9,xmm3
   140033950:	call   QWORD PTR [rip+0x975a]        # 0x14003d0b0
   140033956:	mov    sil,0x1
   140033959:	jmp    0x140033972
   14003395b:	mov    rcx,QWORD PTR [rip+0x21b8e]        # 0x1400554f0
   140033962:	lea    rdx,[rip+0xabcb]        # 0x14003e534
   140033969:	mov    r8,rbx
   14003396c:	call   QWORD PTR [rip+0x994e]        # 0x14003d2c0
   140033972:	cmp    BYTE PTR [rbx],0x0
   140033975:	je     0x14003397f
   140033977:	inc    rbx
   14003397a:	cmp    BYTE PTR [rbx],0x0
   14003397d:	jne    0x140033977
   14003397f:	inc    rbx
   140033982:	cmp    BYTE PTR [rbx],0x0
   140033985:	jne    0x140033910
   140033987:	test   sil,sil
   14003398a:	jne    0x1400339a3
   14003398c:	mov    rcx,QWORD PTR [rip+0x21b5d]        # 0x1400554f0
   140033993:	lea    rdx,[rip+0xab9a]        # 0x14003e534
   14003399a:	mov    r8,rdi
   14003399d:	call   QWORD PTR [rip+0x991d]        # 0x14003d2c0
   1400339a3:	mov    rdi,QWORD PTR [r14]
   1400339a6:	xor    sil,sil
   1400339a9:	mov    rbx,rdi
   1400339ac:	test   rdi,rdi
   1400339af:	jne    0x1400338f0
   1400339b5:	mov    rcx,QWORD PTR [rip+0x21b34]        # 0x1400554f0
   1400339bc:	lea    rdx,[rip+0xff81]        # 0x140043944
   1400339c3:	call   QWORD PTR [rip+0x98f7]        # 0x14003d2c0
   1400339c9:	mov    rcx,QWORD PTR [rip+0x21b20]        # 0x1400554f0
   1400339d0:	lea    r8,[rsp+0x20]
   1400339d5:	lea    rdx,[rip+0xaae0]        # 0x14003e4bc
   1400339dc:	call   QWORD PTR [rip+0x98de]        # 0x14003d2c0
   1400339e2:	lea    r11,[rsp+0x220]
   1400339ea:	mov    rbx,QWORD PTR [r11+0x10]
   1400339ee:	mov    rsi,QWORD PTR [r11+0x18]
   1400339f2:	mov    rdi,QWORD PTR [r11+0x20]
   1400339f6:	mov    rsp,r11
   1400339f9:	pop    r14
   1400339fb:	ret    
   1400339fc:	int3   
   1400339fd:	int3   
   1400339fe:	int3   
   1400339ff:	int3   
   140033a00:	mov    QWORD PTR [rsp+0x8],rbx
   140033a05:	mov    QWORD PTR [rsp+0x10],rsi
   140033a0a:	push   rdi
   140033a0b:	sub    rsp,0x50
   140033a0f:	mov    edi,edx
   140033a11:	mov    rdx,rcx
   140033a14:	lea    rcx,[rsp+0x40]
   140033a19:	mov    esi,r9d
   140033a1c:	mov    ebx,r8d
   140033a1f:	call   0x14001bc30
   140033a24:	movsd  xmm3,QWORD PTR [rip+0x208bc]        # 0x1400542e8
   140033a2c:	mov    r8d,DWORD PTR [rip+0x20899]        # 0x1400542cc
   140033a33:	mov    rcx,QWORD PTR [rip+0x21ab6]        # 0x1400554f0
   140033a3a:	movaps xmm5,xmm3
   140033a3d:	movaps xmm4,xmm3
   140033a40:	movups xmm1,XMMWORD PTR [rax]
   140033a43:	mulsd  xmm5,QWORD PTR [rax+0x8]
   140033a48:	lea    eax,[rbx+rbx*1]
   140033a4b:	test   esi,esi
   140033a4d:	lea    r9,[rip+0x99c4]        # 0x14003d418
   140033a54:	movsd  QWORD PTR [rsp+0x38],xmm5
   140033a5a:	mulsd  xmm4,xmm1
   140033a5e:	lea    rdx,[rip+0xfef3]        # 0x140043958
   140033a65:	movd   xmm2,eax
   140033a69:	movsd  QWORD PTR [rsp+0x30],xmm4
   140033a6f:	lea    eax,[rdi+rdi*1]
   140033a72:	cvtdq2pd xmm2,xmm2
   140033a76:	movd   xmm1,eax
   140033a7a:	lea    rax,[rip+0xfecb]        # 0x14004394c
   140033a81:	cmovne r9,rax
   140033a85:	divsd  xmm2,QWORD PTR [rip+0x99fb]        # 0x14003d488
   140033a8d:	cvtdq2pd xmm1,xmm1
   140033a91:	divsd  xmm1,QWORD PTR [rip+0x99ef]        # 0x14003d488
   140033a99:	mulsd  xmm2,xmm3
   140033a9d:	movsd  QWORD PTR [rsp+0x28],xmm2
   140033aa3:	mulsd  xmm1,xmm3
   140033aa7:	movsd  QWORD PTR [rsp+0x20],xmm1
   140033aad:	call   QWORD PTR [rip+0x980d]        # 0x14003d2c0
   140033ab3:	mov    rbx,QWORD PTR [rsp+0x60]
   140033ab8:	mov    rsi,QWORD PTR [rsp+0x68]
   140033abd:	add    rsp,0x50
   140033ac1:	pop    rdi
   140033ac2:	ret    
   140033ac3:	int3   
   140033ac4:	int3   
   140033ac5:	int3   
   140033ac6:	int3   
   140033ac7:	int3   
   140033ac8:	int3   
   140033ac9:	int3   
   140033aca:	int3   
   140033acb:	int3   
   140033acc:	int3   
   140033acd:	int3   
   140033ace:	int3   
   140033acf:	int3   
   140033ad0:	mov    QWORD PTR [rsp+0x8],rbx
   140033ad5:	mov    QWORD PTR [rsp+0x10],rsi
   140033ada:	push   rdi
   140033adb:	sub    rsp,0xa0
   140033ae2:	mov    esi,r8d
   140033ae5:	mov    edi,edx
   140033ae7:	mov    rbx,rcx
   140033aea:	cmp    edx,0x4
   140033aed:	jne    0x140033c7d
   140033af3:	mov    ecx,DWORD PTR [rcx]
   140033af5:	mov    r9d,DWORD PTR [rbx+0x8]
   140033af9:	cmp    ecx,r9d
   140033afc:	jne    0x140033b16
   140033afe:	mov    eax,DWORD PTR [rbx+0x1c]
   140033b01:	cmp    DWORD PTR [rbx+0x4],eax
   140033b04:	jne    0x140033b16
   140033b06:	mov    eax,DWORD PTR [rbx+0x14]
   140033b09:	cmp    DWORD PTR [rbx+0xc],eax
   140033b0c:	jne    0x140033b16
   140033b0e:	mov    eax,DWORD PTR [rbx+0x18]
   140033b11:	cmp    DWORD PTR [rbx+0x10],eax
   140033b14:	je     0x140033b41
   140033b16:	mov    eax,DWORD PTR [rbx+0xc]
   140033b19:	cmp    DWORD PTR [rbx+0x4],eax
   140033b1c:	jne    0x140033c7d
   140033b22:	cmp    ecx,DWORD PTR [rbx+0x18]
   140033b25:	jne    0x140033c7d
   140033b2b:	cmp    r9d,DWORD PTR [rbx+0x10]
   140033b2f:	jne    0x140033c7d
   140033b35:	mov    eax,DWORD PTR [rbx+0x1c]
   140033b38:	cmp    DWORD PTR [rbx+0x14],eax
   140033b3b:	jne    0x140033c7d
   140033b41:	mov    rdx,QWORD PTR [rbx]
   140033b44:	lea    rcx,[rsp+0x50]
   140033b49:	movaps XMMWORD PTR [rsp+0x90],xmm6
   140033b51:	movaps XMMWORD PTR [rsp+0x80],xmm7
   140033b59:	call   0x14001bc30
   140033b5e:	mov    rdx,QWORD PTR [rbx+0x10]
   140033b62:	lea    rcx,[rsp+0x40]
   140033b67:	movups xmm0,XMMWORD PTR [rax]
   140033b6a:	movups XMMWORD PTR [rsp+0x50],xmm0
   140033b6f:	call   0x14001bc30
   140033b74:	movups xmm0,XMMWORD PTR [rax]
   140033b77:	movups XMMWORD PTR [rsp+0x40],xmm0
   140033b7c:	test   esi,esi
   140033b7e:	je     0x140033bc2
   140033b80:	movsxd rax,DWORD PTR [rip+0x20745]        # 0x1400542cc
   140033b87:	lea    rdx,[rsp+0x60]
   140033b8c:	xor    r8d,r8d
   140033b8f:	lea    rcx,[rax+rax*2]
   140033b93:	lea    rax,[rip+0x20766]        # 0x140054300
   140033b9a:	mov    rcx,QWORD PTR [rax+rcx*8]
   140033b9e:	call   0x140026220
   140033ba3:	mov    rcx,QWORD PTR [rip+0x21946]        # 0x1400554f0
   140033baa:	lea    rdx,[rip+0xfd17]        # 0x1400438c8
   140033bb1:	movsd  xmm2,QWORD PTR [rsp+0x70]
   140033bb7:	movq   r8,xmm2
   140033bbc:	call   QWORD PTR [rip+0x96fe]        # 0x14003d2c0
   140033bc2:	movsd  xmm3,QWORD PTR [rip+0x2071e]        # 0x1400542e8
   140033bca:	movsd  xmm5,QWORD PTR [rsp+0x50]
   140033bd0:	movsd  xmm7,QWORD PTR [rsp+0x58]
   140033bd6:	mov    r8d,DWORD PTR [rip+0x206ef]        # 0x1400542cc
   140033bdd:	mov    rcx,QWORD PTR [rip+0x2190c]        # 0x1400554f0
   140033be4:	lea    rax,[rip+0xfd61]        # 0x14004394c
   140033beb:	test   esi,esi
   140033bed:	lea    r9,[rip+0x9824]        # 0x14003d418
   140033bf4:	lea    rdx,[rip+0xfdf5]        # 0x1400439f0
   140033bfb:	movsd  xmm4,QWORD PTR [rsp+0x40]
   140033c01:	movsd  xmm6,QWORD PTR [rsp+0x48]
   140033c07:	addsd  xmm4,xmm5
   140033c0b:	subsd  xmm5,QWORD PTR [rsp+0x40]
   140033c11:	addsd  xmm6,xmm7
   140033c15:	cmovne r9,rax
   140033c19:	mulsd  xmm6,xmm3
   140033c1d:	mulsd  xmm4,xmm3
   140033c21:	andps  xmm5,XMMWORD PTR [rip+0x9938]        # 0x14003d560
   140033c28:	mulsd  xmm4,QWORD PTR [rip+0x97a8]        # 0x14003d3d8
   140033c30:	mulsd  xmm6,QWORD PTR [rip+0x97a0]        # 0x14003d3d8
   140033c38:	subsd  xmm7,QWORD PTR [rsp+0x48]
   140033c3e:	movsd  QWORD PTR [rsp+0x38],xmm6
   140033c44:	movsd  QWORD PTR [rsp+0x30],xmm4
   140033c4a:	andps  xmm7,XMMWORD PTR [rip+0x990f]        # 0x14003d560
   140033c51:	mulsd  xmm5,xmm3
   140033c55:	mulsd  xmm7,xmm3
   140033c59:	movsd  QWORD PTR [rsp+0x28],xmm7
   140033c5f:	movsd  QWORD PTR [rsp+0x20],xmm5
   140033c65:	call   QWORD PTR [rip+0x9655]        # 0x14003d2c0
   140033c6b:	movaps xmm7,XMMWORD PTR [rsp+0x80]
   140033c73:	movaps xmm6,XMMWORD PTR [rsp+0x90]
   140033c7b:	jmp    0x140033cca
   140033c7d:	cmp    DWORD PTR [rip+0x1e7a8],0x0        # 0x14005242c
   140033c84:	je     0x140033cba
   140033c86:	test   r8d,r8d
   140033c89:	je     0x140033cba
   140033c8b:	call   QWORD PTR [rip+0x963f]        # 0x14003d2d0
   140033c91:	lea    r9,[rip+0xfd88]        # 0x140043a20
   140033c98:	lea    r8,[rip+0x1e799]        # 0x140052438
   140033c9f:	lea    rcx,[rax+0x60]
   140033ca3:	lea    rdx,[rip+0xefa6]        # 0x140042c50
   140033caa:	call   QWORD PTR [rip+0x9610]        # 0x14003d2c0
   140033cb0:	mov    DWORD PTR [rip+0x1e772],0x0        # 0x14005242c
   140033cba:	mov    r8d,0x1
   140033cc0:	mov    edx,edi
   140033cc2:	mov    rcx,rbx
   140033cc5:	call   0x1400348f0
   140033cca:	lea    r11,[rsp+0xa0]
   140033cd2:	mov    rbx,QWORD PTR [r11+0x10]
   140033cd6:	mov    rsi,QWORD PTR [r11+0x18]
   140033cda:	mov    rsp,r11
   140033cdd:	pop    rdi
   140033cde:	ret    
   140033cdf:	int3   
   140033ce0:	xor    r8d,r8d
   140033ce3:	jmp    0x1400348f0
   140033ce8:	int3   
   140033ce9:	int3   
   140033cea:	int3   
   140033ceb:	int3   
   140033cec:	int3   
   140033ced:	int3   
   140033cee:	int3   
   140033cef:	int3   
   140033cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140033cf5:	mov    QWORD PTR [rsp+0x10],rbp
   140033cfa:	mov    QWORD PTR [rsp+0x18],rsi
   140033cff:	push   rdi
   140033d00:	sub    rsp,0x20
   140033d04:	mov    edi,r8d
   140033d07:	mov    rbp,rcx
   140033d0a:	mov    r8,rcx
   140033d0d:	mov    rcx,QWORD PTR [rip+0x217dc]        # 0x1400554f0
   140033d14:	mov    rsi,rdx
   140033d17:	lea    rdx,[rip+0xfd12]        # 0x140043a30
   140033d1e:	mov    ebx,r9d
   140033d21:	call   QWORD PTR [rip+0x9599]        # 0x14003d2c0
   140033d27:	mov    r8d,ebx
   140033d2a:	mov    edx,edi
   140033d2c:	mov    rcx,rsi
   140033d2f:	call   0x140033ad0
   140033d34:	mov    rcx,QWORD PTR [rip+0x217b5]        # 0x1400554f0
   140033d3b:	lea    rdx,[rip+0xfcfe]        # 0x140043a40
   140033d42:	mov    r8,rbp
   140033d45:	mov    rbx,QWORD PTR [rsp+0x30]
   140033d4a:	mov    rbp,QWORD PTR [rsp+0x38]
   140033d4f:	mov    rsi,QWORD PTR [rsp+0x40]
   140033d54:	add    rsp,0x20
   140033d58:	pop    rdi
   140033d59:	rex.W jmp QWORD PTR [rip+0x9560]        # 0x14003d2c0
   140033d60:	mov    rax,rsp
   140033d63:	push   rbp
   140033d64:	push   r15
   140033d66:	lea    rbp,[rax-0x58]
   140033d6a:	sub    rsp,0x148
   140033d71:	mov    QWORD PTR [rax-0x18],r12
   140033d75:	mov    QWORD PTR [rax-0x20],r13
   140033d79:	mov    QWORD PTR [rax-0x28],r14
   140033d7d:	mov    r13,rcx
   140033d80:	mov    r12d,edx
   140033d83:	test   r8d,r8d
   140033d86:	jne    0x140033d8d
   140033d88:	test   r9d,r9d
   140033d8b:	je     0x140033db2
   140033d8d:	call   QWORD PTR [rip+0x953d]        # 0x14003d2d0
   140033d93:	lea    r9,[rip+0xfcae]        # 0x140043a48
   140033d9a:	lea    r8,[rip+0x1e697]        # 0x140052438
   140033da1:	lea    rcx,[rax+0x60]
   140033da5:	lea    rdx,[rip+0xeec4]        # 0x140042c70
   140033dac:	call   QWORD PTR [rip+0x950e]        # 0x14003d2c0
   140033db2:	mov    rdx,QWORD PTR [r13+0x0]
   140033db6:	lea    rcx,[rsp+0x30]
   140033dbb:	mov    QWORD PTR [rsp+0x160],rbx
   140033dc3:	call   0x14001bc30
   140033dc8:	xor    r15d,r15d
   140033dcb:	xor    r14d,r14d
   140033dce:	movups xmm0,XMMWORD PTR [rax]
   140033dd1:	movaps XMMWORD PTR [rsp+0x70],xmm0
   140033dd6:	cmp    r12d,0x3
   140033dda:	jle    0x140033fb8
   140033de0:	mov    QWORD PTR [rsp+0x168],rsi
   140033de8:	mov    QWORD PTR [rsp+0x170],rdi
   140033df0:	lea    rbx,[r13+0x8]
   140033df4:	movsxd rax,r14d
   140033df7:	movaps XMMWORD PTR [rsp+0x40],xmm0
   140033dfc:	lea    rdi,[rsp+0x50]
   140033e01:	mov    esi,0x3
   140033e06:	lea    rbx,[rbx+rax*8]
   140033e0a:	nop    WORD PTR [rax+rax*1+0x0]
   140033e10:	mov    rdx,QWORD PTR [rbx]
   140033e13:	lea    rcx,[rbp-0x70]
   140033e17:	call   0x14001bc30
   140033e1c:	lea    rdi,[rdi+0x10]
   140033e20:	lea    rbx,[rbx+0x8]
   140033e24:	movups xmm0,XMMWORD PTR [rax]
   140033e27:	movups XMMWORD PTR [rdi-0x10],xmm0
   140033e2b:	dec    rsi
   140033e2e:	jne    0x140033e10
   140033e30:	xor    edi,edi
   140033e32:	xorps  xmm3,xmm3
   140033e35:	lea    r8d,[rsi+0x3]
   140033e39:	lea    rdx,[rsp+0x40]
   140033e3e:	lea    rcx,[rbp-0x80]
   140033e42:	mov    QWORD PTR [rsp+0x28],rdi
   140033e47:	mov    QWORD PTR [rsp+0x20],rdi
   140033e4c:	call   0x14001abf0
   140033e51:	movups xmm0,XMMWORD PTR [rax]
   140033e54:	movups XMMWORD PTR [rsp+0x30],xmm0
   140033e59:	test   r14d,r14d
   140033e5c:	jne    0x140033ec2
   140033e5e:	movss  xmm1,DWORD PTR [rsp+0x3c]
   140033e64:	movsd  xmm2,QWORD PTR [rip+0x2047c]        # 0x1400542e8
   140033e6c:	movss  xmm0,DWORD PTR [rsp+0x38]
   140033e72:	lea    rdx,[rip+0xee27]        # 0x140042ca0
   140033e79:	lea    rcx,[rbp-0x50]
   140033e7d:	unpcklps xmm0,xmm1
   140033e80:	movss  xmm1,DWORD PTR [rsp+0x30]
   140033e86:	movss  xmm4,DWORD PTR [rsp+0x34]
   140033e8c:	movaps xmm3,xmm2
   140033e8f:	mulsd  xmm3,xmm0
   140033e93:	unpcklps xmm1,xmm4
   140033e96:	mulsd  xmm2,xmm1
   140033e9a:	movq   r9,xmm3
   140033e9f:	movq   r8,xmm2
   140033ea4:	call   QWORD PTR [rip+0x9206]        # 0x14003d0b0
   140033eaa:	mov    rcx,QWORD PTR [rip+0x2163f]        # 0x1400554f0
   140033eb1:	lea    r8,[rbp-0x50]
   140033eb5:	lea    rdx,[rip+0xfbb4]        # 0x140043a70
   140033ebc:	call   QWORD PTR [rip+0x93fe]        # 0x14003d2c0
   140033ec2:	mov    eax,DWORD PTR [rip+0x1e560]        # 0x140052428
   140033ec8:	mov    ebx,0x1
   140033ecd:	cmp    eax,ebx
   140033ecf:	jl     0x140033f91
   140033ed5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140033ee0:	movd   xmm3,ebx
   140033ee4:	movd   xmm0,eax
   140033ee8:	lea    rdx,[rsp+0x40]
   140033eed:	lea    rcx,[rbp-0x60]
   140033ef1:	mov    r8d,0x3
   140033ef7:	mov    QWORD PTR [rsp+0x28],rdi
   140033efc:	mov    QWORD PTR [rsp+0x20],rdi
   140033f01:	cvtdq2pd xmm3,xmm3
   140033f05:	cvtdq2pd xmm0,xmm0
   140033f09:	divsd  xmm3,xmm0
   140033f0d:	call   0x14001abf0
   140033f12:	movsd  xmm2,QWORD PTR [rip+0x203ce]        # 0x1400542e8
   140033f1a:	lea    rdx,[rip+0xed7f]        # 0x140042ca0
   140033f21:	movaps xmm3,xmm2
   140033f24:	lea    rcx,[rbp-0x50]
   140033f28:	inc    r15d
   140033f2b:	movups xmm0,XMMWORD PTR [rax]
   140033f2e:	movups xmm5,xmm0
   140033f31:	movaps xmm4,xmm0
   140033f34:	movaps xmm1,xmm0
   140033f37:	shufps xmm1,xmm0,0xff
   140033f3b:	shufps xmm4,xmm0,0x55
   140033f3f:	movss  xmm0,DWORD PTR [rax+0x8]
   140033f44:	unpcklps xmm0,xmm1
   140033f47:	movss  xmm1,xmm5
   140033f4b:	unpcklps xmm1,xmm4
   140033f4e:	mulsd  xmm3,xmm0
   140033f52:	mulsd  xmm2,xmm1
   140033f56:	movq   r9,xmm3
   140033f5b:	movq   r8,xmm2
   140033f60:	call   QWORD PTR [rip+0x914a]        # 0x14003d0b0
   140033f66:	mov    rcx,QWORD PTR [rip+0x21583]        # 0x1400554f0
   140033f6d:	lea    r9,[rbp-0x50]
   140033f71:	lea    rdx,[rip+0xfa18]        # 0x140043990
   140033f78:	mov    r8d,r15d
   140033f7b:	call   QWORD PTR [rip+0x933f]        # 0x14003d2c0
   140033f81:	mov    eax,DWORD PTR [rip+0x1e4a1]        # 0x140052428
   140033f87:	inc    ebx
   140033f89:	cmp    ebx,eax
   140033f8b:	jle    0x140033ee0
   140033f91:	add    r14d,0x3
   140033f95:	lea    eax,[r14+0x3]
   140033f99:	cmp    eax,r12d
   140033f9c:	jge    0x140033fa8
   140033f9e:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140033fa3:	jmp    0x140033df0
   140033fa8:	mov    rsi,QWORD PTR [rsp+0x168]
   140033fb0:	mov    rdi,QWORD PTR [rsp+0x170]
   140033fb8:	mov    r14,QWORD PTR [rsp+0x130]
   140033fc0:	mov    r13,QWORD PTR [rsp+0x138]
   140033fc8:	mov    r12,QWORD PTR [rsp+0x140]
   140033fd0:	cmp    r15d,0x2
   140033fd4:	jl     0x140034012
   140033fd6:	mov    ebx,0x2
   140033fdb:	nop    DWORD PTR [rax+rax*1+0x0]
   140033fe0:	mov    r9d,DWORD PTR [rip+0x202e5]        # 0x1400542cc
   140033fe7:	mov    rcx,QWORD PTR [rip+0x21502]        # 0x1400554f0
   140033fee:	lea    eax,[rbx-0x1]
   140033ff1:	lea    r8d,[rbx-0x2]
   140033ff5:	lea    rdx,[rip+0xfa7c]        # 0x140043a78
   140033ffc:	mov    DWORD PTR [rsp+0x28],ebx
   140034000:	mov    DWORD PTR [rsp+0x20],eax
   140034004:	call   QWORD PTR [rip+0x92b6]        # 0x14003d2c0
   14003400a:	add    ebx,0x2
   14003400d:	cmp    ebx,r15d
   140034010:	jle    0x140033fe0
   140034012:	mov    rbx,QWORD PTR [rsp+0x160]
   14003401a:	add    rsp,0x148
   140034021:	pop    r15
   140034023:	pop    rbp
   140034024:	ret    
   140034025:	int3   
   140034026:	int3   
   140034027:	int3   
   140034028:	int3   
   140034029:	int3   
   14003402a:	int3   
   14003402b:	int3   
   14003402c:	int3   
   14003402d:	int3   
   14003402e:	int3   
   14003402f:	int3   
   140034030:	sub    rsp,0x28
   140034034:	lea    r8,[rip+0x93dd]        # 0x14003d418
   14003403b:	call   0x14001c3e0
   140034040:	cmp    BYTE PTR [rax],0x0
   140034043:	je     0x140034061
   140034045:	mov    rcx,QWORD PTR [rip+0x214a4]        # 0x1400554f0
   14003404c:	lea    rdx,[rip+0xfa55]        # 0x140043aa8
   140034053:	mov    r8,rax
   140034056:	add    rsp,0x28
   14003405a:	rex.W jmp QWORD PTR [rip+0x925f]        # 0x14003d2c0
   140034061:	add    rsp,0x28
   140034065:	ret    
   140034066:	int3   
   140034067:	int3   
   140034068:	int3   
   140034069:	int3   
   14003406a:	int3   
   14003406b:	int3   
   14003406c:	int3   
   14003406d:	int3   
   14003406e:	int3   
   14003406f:	int3   
   140034070:	mov    DWORD PTR [rip+0x1e3b2],0x1        # 0x14005242c
   14003407a:	ret    
   14003407b:	int3   
   14003407c:	int3   
   14003407d:	int3   
   14003407e:	int3   
   14003407f:	int3   
   140034080:	mov    QWORD PTR [rsp+0x8],rbx
   140034085:	push   rdi
   140034086:	sub    rsp,0x30
   14003408a:	cmp    DWORD PTR [rip+0x1e39b],0x0        # 0x14005242c
   140034091:	mov    rbx,r9
   140034094:	mov    rdi,rdx
   140034097:	je     0x1400340dc
   140034099:	mov    rax,QWORD PTR [rsp+0x68]
   14003409e:	mov    rcx,rax
   1400340a1:	shr    rcx,0x20
   1400340a5:	imul   ecx,eax
   1400340a8:	cmp    ecx,0x1
   1400340ab:	jle    0x1400340dc
   1400340ad:	call   QWORD PTR [rip+0x921d]        # 0x14003d2d0
   1400340b3:	lea    r9,[rip+0xebf6]        # 0x140042cb0
   1400340ba:	lea    r8,[rip+0x1e377]        # 0x140052438
   1400340c1:	lea    rcx,[rax+0x60]
   1400340c5:	lea    rdx,[rip+0xeb84]        # 0x140042c50
   1400340cc:	call   QWORD PTR [rip+0x91ee]        # 0x14003d2c0
   1400340d2:	mov    DWORD PTR [rip+0x1e350],0x0        # 0x14005242c
   1400340dc:	mov    r9,QWORD PTR [rsp+0x60]
   1400340e1:	mov    r8,QWORD PTR [rip+0x1e348]        # 0x140052430
   1400340e8:	mov    rcx,QWORD PTR [rip+0x21401]        # 0x1400554f0
   1400340ef:	mov    rax,QWORD PTR [r9+0x10]
   1400340f3:	lea    rdx,[rip+0xebc6]        # 0x140042cc0
   1400340fa:	mov    QWORD PTR [rsp+0x28],rax
   1400340ff:	mov    rax,QWORD PTR [r9+0x8]
   140034103:	mov    r9,QWORD PTR [r9]
   140034106:	mov    QWORD PTR [rsp+0x20],rax
   14003410b:	call   QWORD PTR [rip+0x91af]        # 0x14003d2c0
   140034111:	mov    r8,QWORD PTR [rip+0x1e318]        # 0x140052430
   140034118:	mov    rcx,QWORD PTR [rip+0x213d1]        # 0x1400554f0
   14003411f:	lea    rdx,[rip+0xebba]        # 0x140042ce0
   140034126:	mov    r9,rbx
   140034129:	call   QWORD PTR [rip+0x9191]        # 0x14003d2c0
   14003412f:	mov    r9,QWORD PTR [rdi+0x10]
   140034133:	mov    r8,QWORD PTR [rip+0x1e2f6]        # 0x140052430
   14003413a:	mov    rcx,QWORD PTR [rip+0x213af]        # 0x1400554f0
   140034141:	lea    rdx,[rip+0xeba8]        # 0x140042cf0
   140034148:	call   QWORD PTR [rip+0x9172]        # 0x14003d2c0
   14003414e:	mov    rbx,QWORD PTR [rsp+0x40]
   140034153:	add    rsp,0x30
   140034157:	pop    rdi
   140034158:	ret    
   140034159:	int3   
   14003415a:	int3   
   14003415b:	int3   
   14003415c:	int3   
   14003415d:	int3   
   14003415e:	int3   
   14003415f:	int3   
   140034160:	ret    0x0
   140034163:	int3   
   140034164:	int3   
   140034165:	int3   
   140034166:	int3   
   140034167:	int3   
   140034168:	int3   
   140034169:	int3   
   14003416a:	int3   
   14003416b:	int3   
   14003416c:	int3   
   14003416d:	int3   
   14003416e:	int3   
   14003416f:	int3   
   140034170:	sub    rsp,0x28
   140034174:	movups xmm0,XMMWORD PTR [rdx]
   140034177:	mov    r8,QWORD PTR [rip+0x1e2b2]        # 0x140052430
   14003417e:	mov    rcx,QWORD PTR [rip+0x2136b]        # 0x1400554f0
   140034185:	lea    rdx,[rip+0xeb74]        # 0x140042d00
   14003418c:	movups XMMWORD PTR [rip+0x2013d],xmm0        # 0x1400542d0
   140034193:	call   QWORD PTR [rip+0x9127]        # 0x14003d2c0
   140034199:	add    rsp,0x28
   14003419d:	ret    
   14003419e:	int3   
   14003419f:	int3   
   1400341a0:	mov    r8,QWORD PTR [rip+0x1e289]        # 0x140052430
   1400341a7:	mov    rcx,QWORD PTR [rip+0x21342]        # 0x1400554f0
   1400341ae:	lea    rdx,[rip+0xeb83]        # 0x140042d38
   1400341b5:	rex.W jmp QWORD PTR [rip+0x9104]        # 0x14003d2c0
   1400341bc:	int3   
   1400341bd:	int3   
   1400341be:	int3   
   1400341bf:	int3   
   1400341c0:	rex push rbx
   1400341c2:	sub    rsp,0x50
   1400341c6:	cmp    DWORD PTR [rip+0x1e25f],0x0        # 0x14005242c
   1400341cd:	movaps XMMWORD PTR [rsp+0x40],xmm6
   1400341d2:	movaps XMMWORD PTR [rsp+0x30],xmm7
   1400341d7:	mov    ebx,r9d
   1400341da:	movaps XMMWORD PTR [rsp+0x20],xmm8
   1400341e0:	movaps xmm8,xmm2
   1400341e4:	je     0x14003421e
   1400341e6:	test   ebx,ebx
   1400341e8:	je     0x14003421e
   1400341ea:	cmp    ebx,0x5a
   1400341ed:	je     0x14003421e
   1400341ef:	call   QWORD PTR [rip+0x90db]        # 0x14003d2d0
   1400341f5:	lea    r9,[rip+0xeb74]        # 0x140042d70
   1400341fc:	lea    r8,[rip+0x1e235]        # 0x140052438
   140034203:	lea    rcx,[rax+0x60]
   140034207:	lea    rdx,[rip+0xea42]        # 0x140042c50
   14003420e:	call   QWORD PTR [rip+0x90ac]        # 0x14003d2c0
   140034214:	mov    DWORD PTR [rip+0x1e20e],0x0        # 0x14005242c
   14003421e:	movd   xmm7,DWORD PTR [rip+0x200b6]        # 0x1400542dc
   140034226:	movd   xmm0,DWORD PTR [rip+0x200a6]        # 0x1400542d4
   14003422e:	movd   xmm6,DWORD PTR [rip+0x200a2]        # 0x1400542d8
   140034236:	movsd  QWORD PTR [rip+0x200a9],xmm8        # 0x1400542e8
   14003423f:	mov    DWORD PTR [rip+0x2009b],ebx        # 0x1400542e0
   140034245:	cvtdq2pd xmm0,xmm0
   140034249:	cvtdq2pd xmm7,xmm7
   14003424d:	cvtdq2pd xmm6,xmm6
   140034251:	subsd  xmm7,xmm0
   140034255:	movd   xmm0,DWORD PTR [rip+0x20073]        # 0x1400542d0
   14003425d:	cvtdq2pd xmm0,xmm0
   140034261:	divsd  xmm7,QWORD PTR [rip+0x921f]        # 0x14003d488
   140034269:	subsd  xmm6,xmm0
   14003426d:	divsd  xmm6,QWORD PTR [rip+0x9213]        # 0x14003d488
   140034275:	cmp    ebx,0x5a
   140034278:	jne    0x140034283
   14003427a:	movaps xmm0,xmm6
   14003427d:	movaps xmm6,xmm7
   140034280:	movaps xmm7,xmm0
   140034283:	mov    rcx,QWORD PTR [rip+0x21266]        # 0x1400554f0
   14003428a:	movaps xmm3,xmm7
   14003428d:	movaps xmm2,xmm6
   140034290:	lea    rdx,[rip+0xeae9]        # 0x140042d80
   140034297:	movq   r9,xmm3
   14003429c:	movq   r8,xmm2
   1400342a1:	call   QWORD PTR [rip+0x9019]        # 0x14003d2c0
   1400342a7:	mov    rcx,QWORD PTR [rip+0x21242]        # 0x1400554f0
   1400342ae:	lea    r8,[rip+0xeadb]        # 0x140042d90
   1400342b5:	lea    rdx,[rip+0xeae4]        # 0x140042da0
   1400342bc:	mov    QWORD PTR [rip+0x1e16d],r8        # 0x140052430
   1400342c3:	call   QWORD PTR [rip+0x8ff7]        # 0x14003d2c0
   1400342c9:	xorps  xmm0,xmm0
   1400342cc:	comisd xmm6,xmm0
   1400342d0:	jbe    0x1400342f8
   1400342d2:	movaps xmm0,xmm6
   1400342d5:	call   0x14003bcea
   1400342da:	movsd  xmm2,QWORD PTR [rip+0x926e]        # 0x14003d550
   1400342e2:	cvttsd2si eax,xmm0
   1400342e6:	movd   xmm1,eax
   1400342ea:	cvtdq2pd xmm1,xmm1
   1400342ee:	subsd  xmm2,xmm1
   1400342f2:	addsd  xmm0,xmm2
   1400342f6:	jmp    0x140034300
   1400342f8:	movsd  xmm0,QWORD PTR [rip+0x9250]        # 0x14003d550
   140034300:	movaps xmm1,xmm0
   140034303:	movsd  xmm0,QWORD PTR [rip+0x9715]        # 0x14003da20
   14003430b:	call   0x14003bb2a
   140034310:	mov    rcx,QWORD PTR [rip+0x211d9]        # 0x1400554f0
   140034317:	lea    rdx,[rip+0xeb32]        # 0x140042e50
   14003431e:	movaps xmm3,xmm0
   140034321:	movaps xmm2,xmm0
   140034324:	movsd  QWORD PTR [rip+0x1ffc4],xmm0        # 0x1400542f0
   14003432c:	movq   r9,xmm3
   140034331:	movq   r8,xmm2
   140034336:	call   QWORD PTR [rip+0x8f84]        # 0x14003d2c0
   14003433c:	mov    r8,QWORD PTR [rip+0x1e0ed]        # 0x140052430
   140034343:	mov    rcx,QWORD PTR [rip+0x211a6]        # 0x1400554f0
   14003434a:	lea    rdx,[rip+0xeb27]        # 0x140042e78
   140034351:	call   QWORD PTR [rip+0x8f69]        # 0x14003d2c0
   140034357:	mov    r8,QWORD PTR [rip+0x1e0d2]        # 0x140052430
   14003435e:	mov    rcx,QWORD PTR [rip+0x2118b]        # 0x1400554f0
   140034365:	lea    rdx,[rip+0xeb4c]        # 0x140042eb8
   14003436c:	call   QWORD PTR [rip+0x8f4e]        # 0x14003d2c0
   140034372:	mov    r8,QWORD PTR [rip+0x1e0b7]        # 0x140052430
   140034379:	mov    rcx,QWORD PTR [rip+0x21170]        # 0x1400554f0
   140034380:	lea    rdx,[rip+0xeb71]        # 0x140042ef8
   140034387:	call   QWORD PTR [rip+0x8f33]        # 0x14003d2c0
   14003438d:	mov    r8,QWORD PTR [rip+0x1e09c]        # 0x140052430
   140034394:	mov    rcx,QWORD PTR [rip+0x21155]        # 0x1400554f0
   14003439b:	lea    rdx,[rip+0xeb8e]        # 0x140042f30
   1400343a2:	call   QWORD PTR [rip+0x8f18]        # 0x14003d2c0
   1400343a8:	mov    r8,QWORD PTR [rip+0x1e081]        # 0x140052430
   1400343af:	mov    rcx,QWORD PTR [rip+0x2113a]        # 0x1400554f0
   1400343b6:	lea    rdx,[rip+0xeb9b]        # 0x140042f58
   1400343bd:	call   QWORD PTR [rip+0x8efd]        # 0x14003d2c0
   1400343c3:	mov    r8,QWORD PTR [rip+0x1e066]        # 0x140052430
   1400343ca:	mov    rcx,QWORD PTR [rip+0x2111f]        # 0x1400554f0
   1400343d1:	lea    rdx,[rip+0xebb8]        # 0x140042f90
   1400343d8:	call   QWORD PTR [rip+0x8ee2]        # 0x14003d2c0
   1400343de:	mov    r8,QWORD PTR [rip+0x1e04b]        # 0x140052430
   1400343e5:	mov    rcx,QWORD PTR [rip+0x21104]        # 0x1400554f0
   1400343ec:	lea    rdx,[rip+0xebdd]        # 0x140042fd0
   1400343f3:	call   QWORD PTR [rip+0x8ec7]        # 0x14003d2c0
   1400343f9:	mov    r8,QWORD PTR [rip+0x1e030]        # 0x140052430
   140034400:	mov    rcx,QWORD PTR [rip+0x210e9]        # 0x1400554f0
   140034407:	lea    rdx,[rip+0xec32]        # 0x140043040
   14003440e:	call   QWORD PTR [rip+0x8eac]        # 0x14003d2c0
   140034414:	mov    r8,QWORD PTR [rip+0x1e015]        # 0x140052430
   14003441b:	mov    rcx,QWORD PTR [rip+0x210ce]        # 0x1400554f0
   140034422:	lea    rdx,[rip+0xec77]        # 0x1400430a0
   140034429:	call   QWORD PTR [rip+0x8e91]        # 0x14003d2c0
   14003442f:	mov    r8,QWORD PTR [rip+0x1dffa]        # 0x140052430
   140034436:	mov    rcx,QWORD PTR [rip+0x210b3]        # 0x1400554f0
   14003443d:	lea    rdx,[rip+0xec9c]        # 0x1400430e0
   140034444:	call   QWORD PTR [rip+0x8e76]        # 0x14003d2c0
   14003444a:	mov    r8,QWORD PTR [rip+0x1dfdf]        # 0x140052430
   140034451:	mov    rcx,QWORD PTR [rip+0x21098]        # 0x1400554f0
   140034458:	lea    rdx,[rip+0xecc9]        # 0x140043128
   14003445f:	call   QWORD PTR [rip+0x8e5b]        # 0x14003d2c0
   140034465:	mov    rcx,QWORD PTR [rip+0x21084]        # 0x1400554f0
   14003446c:	lea    rdx,[rip+0xecdd]        # 0x140043150
   140034473:	call   QWORD PTR [rip+0x8e47]        # 0x14003d2c0
   140034479:	mov    r8,QWORD PTR [rip+0x1dfb0]        # 0x140052430
   140034480:	mov    rcx,QWORD PTR [rip+0x21069]        # 0x1400554f0
   140034487:	lea    rdx,[rip+0xed42]        # 0x1400431d0
   14003448e:	call   QWORD PTR [rip+0x8e2c]        # 0x14003d2c0
   140034494:	mov    r8,QWORD PTR [rip+0x1df95]        # 0x140052430
   14003449b:	mov    rcx,QWORD PTR [rip+0x2104e]        # 0x1400554f0
   1400344a2:	lea    rdx,[rip+0xed47]        # 0x1400431f0
   1400344a9:	call   QWORD PTR [rip+0x8e11]        # 0x14003d2c0
   1400344af:	mov    rcx,QWORD PTR [rip+0x2103a]        # 0x1400554f0
   1400344b6:	lea    rdx,[rip+0xed63]        # 0x140043220
   1400344bd:	call   QWORD PTR [rip+0x8dfd]        # 0x14003d2c0
   1400344c3:	mov    r8,QWORD PTR [rip+0x1df66]        # 0x140052430
   1400344ca:	mov    rcx,QWORD PTR [rip+0x2101f]        # 0x1400554f0
   1400344d1:	lea    rdx,[rip+0xeda8]        # 0x140043280
   1400344d8:	call   QWORD PTR [rip+0x8de2]        # 0x14003d2c0
   1400344de:	mov    r8,QWORD PTR [rip+0x1df4b]        # 0x140052430
   1400344e5:	mov    rcx,QWORD PTR [rip+0x21004]        # 0x1400554f0
   1400344ec:	lea    rdx,[rip+0xedcd]        # 0x1400432c0
   1400344f3:	call   QWORD PTR [rip+0x8dc7]        # 0x14003d2c0
   1400344f9:	mov    r8,QWORD PTR [rip+0x1df30]        # 0x140052430
   140034500:	mov    rcx,QWORD PTR [rip+0x20fe9]        # 0x1400554f0
   140034507:	lea    rdx,[rip+0xee12]        # 0x140043320
   14003450e:	call   QWORD PTR [rip+0x8dac]        # 0x14003d2c0
   140034514:	mov    rcx,QWORD PTR [rip+0x20fd5]        # 0x1400554f0
   14003451b:	lea    rdx,[rip+0xee4e]        # 0x140043370
   140034522:	call   QWORD PTR [rip+0x8d98]        # 0x14003d2c0
   140034528:	mov    r8,QWORD PTR [rip+0x1df01]        # 0x140052430
   14003452f:	mov    rcx,QWORD PTR [rip+0x20fba]        # 0x1400554f0
   140034536:	lea    rdx,[rip+0xee93]        # 0x1400433d0
   14003453d:	call   QWORD PTR [rip+0x8d7d]        # 0x14003d2c0
   140034543:	mov    r8,QWORD PTR [rip+0x1dee6]        # 0x140052430
   14003454a:	mov    rcx,QWORD PTR [rip+0x20f9f]        # 0x1400554f0
   140034551:	lea    rdx,[rip+0xeee8]        # 0x140043440
   140034558:	call   QWORD PTR [rip+0x8d62]        # 0x14003d2c0
   14003455e:	mov    r8,QWORD PTR [rip+0x1decb]        # 0x140052430
   140034565:	mov    rcx,QWORD PTR [rip+0x20f84]        # 0x1400554f0
   14003456c:	lea    rdx,[rip+0xef1d]        # 0x140043490
   140034573:	call   QWORD PTR [rip+0x8d47]        # 0x14003d2c0
   140034579:	mov    r8,QWORD PTR [rip+0x1deb0]        # 0x140052430
   140034580:	mov    rcx,QWORD PTR [rip+0x20f69]        # 0x1400554f0
   140034587:	lea    rdx,[rip+0xef32]        # 0x1400434c0
   14003458e:	call   QWORD PTR [rip+0x8d2c]        # 0x14003d2c0
   140034594:	mov    r8,QWORD PTR [rip+0x1de95]        # 0x140052430
   14003459b:	mov    rcx,QWORD PTR [rip+0x20f4e]        # 0x1400554f0
   1400345a2:	lea    rdx,[rip+0xef7f]        # 0x140043528
   1400345a9:	call   QWORD PTR [rip+0x8d11]        # 0x14003d2c0
   1400345af:	mov    r8,QWORD PTR [rip+0x1de7a]        # 0x140052430
   1400345b6:	mov    rcx,QWORD PTR [rip+0x20f33]        # 0x1400554f0
   1400345bd:	lea    rdx,[rip+0xef9c]        # 0x140043560
   1400345c4:	call   QWORD PTR [rip+0x8cf6]        # 0x14003d2c0
   1400345ca:	mov    rcx,QWORD PTR [rip+0x20f1f]        # 0x1400554f0
   1400345d1:	lea    rdx,[rip+0xefe8]        # 0x1400435c0
   1400345d8:	call   QWORD PTR [rip+0x8ce2]        # 0x14003d2c0
   1400345de:	mov    r8,QWORD PTR [rip+0x1de4b]        # 0x140052430
   1400345e5:	mov    rcx,QWORD PTR [rip+0x20f04]        # 0x1400554f0
   1400345ec:	lea    rdx,[rip+0xeffd]        # 0x1400435f0
   1400345f3:	call   QWORD PTR [rip+0x8cc7]        # 0x14003d2c0
   1400345f9:	mov    r8,QWORD PTR [rip+0x1de30]        # 0x140052430
   140034600:	mov    rcx,QWORD PTR [rip+0x20ee9]        # 0x1400554f0
   140034607:	lea    rdx,[rip+0xf042]        # 0x140043650
   14003460e:	call   QWORD PTR [rip+0x8cac]        # 0x14003d2c0
   140034614:	mov    r8,QWORD PTR [rip+0x1de15]        # 0x140052430
   14003461b:	mov    rcx,QWORD PTR [rip+0x20ece]        # 0x1400554f0
   140034622:	lea    rdx,[rip+0xf097]        # 0x1400436c0
   140034629:	call   QWORD PTR [rip+0x8c91]        # 0x14003d2c0
   14003462f:	mov    rcx,QWORD PTR [rip+0x20eba]        # 0x1400554f0
   140034636:	lea    rdx,[rip+0xf0c3]        # 0x140043700
   14003463d:	movaps xmm3,xmm6
   140034640:	movaps xmm2,xmm7
   140034643:	movq   r9,xmm3
   140034648:	movq   r8,xmm2
   14003464d:	call   QWORD PTR [rip+0x8c6d]        # 0x14003d2c0
   140034653:	mov    rcx,QWORD PTR [rip+0x20e96]        # 0x1400554f0
   14003465a:	lea    rdx,[rip+0xf0bf]        # 0x140043720
   140034661:	call   QWORD PTR [rip+0x8c59]        # 0x14003d2c0
   140034667:	mov    rcx,QWORD PTR [rip+0x20e82]        # 0x1400554f0
   14003466e:	lea    rdx,[rip+0xf0bb]        # 0x140043730
   140034675:	call   QWORD PTR [rip+0x8c45]        # 0x14003d2c0
   14003467b:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   140034680:	movaps xmm7,XMMWORD PTR [rsp+0x30]
   140034685:	movaps xmm8,XMMWORD PTR [rsp+0x20]
   14003468b:	add    rsp,0x50
   14003468f:	pop    rbx
   140034690:	ret    
   140034691:	int3   
   140034692:	int3   
   140034693:	int3   
   140034694:	int3   
   140034695:	int3   
   140034696:	int3   
   140034697:	int3   
   140034698:	int3   
   140034699:	int3   
   14003469a:	int3   
   14003469b:	int3   
   14003469c:	int3   
   14003469d:	int3   
   14003469e:	int3   
   14003469f:	int3   
   1400346a0:	rex push rbx
   1400346a2:	sub    rsp,0x30
   1400346a6:	mov    rbx,rcx
   1400346a9:	lea    rcx,[rsp+0x20]
   1400346ae:	call   0x14001bc30
   1400346b3:	lea    rdx,[rip+0xe5e6]        # 0x140042ca0
   1400346ba:	mov    rcx,rbx
   1400346bd:	movsd  xmm2,QWORD PTR [rip+0x1fc23]        # 0x1400542e8
   1400346c5:	movaps xmm3,xmm2
   1400346c8:	movups xmm1,XMMWORD PTR [rax]
   1400346cb:	movaps xmm0,xmm1
   1400346ce:	mulsd  xmm2,xmm1
   1400346d2:	unpckhpd xmm0,xmm1
   1400346d6:	mulsd  xmm3,xmm0
   1400346da:	movq   r8,xmm2
   1400346df:	movq   r9,xmm3
   1400346e4:	call   QWORD PTR [rip+0x89c6]        # 0x14003d0b0
   1400346ea:	mov    rax,rbx
   1400346ed:	add    rsp,0x30
   1400346f1:	pop    rbx
   1400346f2:	ret    
   1400346f3:	int3   
   1400346f4:	int3   
   1400346f5:	int3   
   1400346f6:	int3   
   1400346f7:	int3   
   1400346f8:	int3   
   1400346f9:	int3   
   1400346fa:	int3   
   1400346fb:	int3   
   1400346fc:	int3   
   1400346fd:	int3   
   1400346fe:	int3   
   1400346ff:	int3   
   140034700:	rex push rbx
   140034702:	sub    rsp,0x20
   140034706:	movsd  xmm2,QWORD PTR [rip+0x1fbda]        # 0x1400542e8
   14003470e:	mov    rbx,rcx
   140034711:	movaps xmm3,xmm2
   140034714:	mulsd  xmm2,QWORD PTR [rdx]
   140034718:	mulsd  xmm3,QWORD PTR [rdx+0x8]
   14003471d:	movq   r8,xmm2
   140034722:	lea    rdx,[rip+0xe577]        # 0x140042ca0
   140034729:	movq   r9,xmm3
   14003472e:	call   QWORD PTR [rip+0x897c]        # 0x14003d0b0
   140034734:	mov    rax,rbx
   140034737:	add    rsp,0x20
   14003473b:	pop    rbx
   14003473c:	ret    
   14003473d:	int3   
   14003473e:	int3   
   14003473f:	int3   
   140034740:	mov    QWORD PTR [rsp+0x8],rbx
   140034745:	mov    QWORD PTR [rsp+0x10],rsi
   14003474a:	push   rdi
   14003474b:	sub    rsp,0x20
   14003474f:	mov    r8,QWORD PTR [rip+0x1fb6a]        # 0x1400542c0
   140034756:	xor    edi,edi
   140034758:	mov    rbx,rcx
   14003475b:	test   r8,r8
   14003475e:	jne    0x14003477f
   140034760:	mov    esi,0x40
   140034765:	mov    ecx,esi
   140034767:	mov    DWORD PTR [rip+0x1fb5b],esi        # 0x1400542c8
   14003476d:	call   QWORD PTR [rip+0x89f5]        # 0x14003d168
   140034773:	mov    r8,rax
   140034776:	mov    QWORD PTR [rip+0x1fb43],rax        # 0x1400542c0
   14003477d:	jmp    0x140034785
   14003477f:	mov    esi,DWORD PTR [rip+0x1fb43]        # 0x1400542c8
   140034785:	mov    rcx,r8
   140034788:	cmp    BYTE PTR [rbx],dil
   14003478b:	je     0x140034813
   140034791:	lea    eax,[rsi-0x8]
   140034794:	cmp    edi,eax
   140034796:	jle    0x1400347b9
   140034798:	lea    eax,[rsi+rsi*1]
   14003479b:	mov    rcx,r8
   14003479e:	movsxd rsi,eax
   1400347a1:	mov    rdx,rsi
   1400347a4:	mov    DWORD PTR [rip+0x1fb1e],esi        # 0x1400542c8
   1400347aa:	call   QWORD PTR [rip+0x88f8]        # 0x14003d0a8
   1400347b0:	movsxd rcx,edi
   1400347b3:	mov    r8,rax
   1400347b6:	add    rcx,rax
   1400347b9:	movzx  eax,BYTE PTR [rbx]
   1400347bc:	cmp    al,0xd
   1400347be:	jne    0x1400347c5
   1400347c0:	inc    rbx
   1400347c3:	jmp    0x1400347f1
   1400347c5:	cmp    al,0x5c
   1400347c7:	jne    0x1400347e7
   1400347c9:	mov    eax,DWORD PTR [rip+0xf0d5]        # 0x1400438a4
   1400347cf:	add    rcx,0x4
   1400347d3:	add    edi,0x4
   1400347d6:	mov    DWORD PTR [rcx-0x4],eax
   1400347d9:	movzx  eax,BYTE PTR [rip+0xf0c8]        # 0x1400438a8
   1400347e0:	inc    rbx
   1400347e3:	mov    BYTE PTR [rcx],al
   1400347e5:	jmp    0x1400347f1
   1400347e7:	mov    BYTE PTR [rcx],al
   1400347e9:	inc    rcx
   1400347ec:	inc    rbx
   1400347ef:	inc    edi
   1400347f1:	cmp    BYTE PTR [rbx],0x0
   1400347f4:	jne    0x140034791
   1400347f6:	mov    QWORD PTR [rip+0x1fac3],r8        # 0x1400542c0
   1400347fd:	mov    BYTE PTR [rcx],0x0
   140034800:	mov    rax,r8
   140034803:	mov    rbx,QWORD PTR [rsp+0x30]
   140034808:	mov    rsi,QWORD PTR [rsp+0x38]
   14003480d:	add    rsp,0x20
   140034811:	pop    rdi
   140034812:	ret    
   140034813:	mov    rbx,QWORD PTR [rsp+0x30]
   140034818:	mov    rsi,QWORD PTR [rsp+0x38]
   14003481d:	mov    BYTE PTR [r8],dil
   140034820:	mov    rax,r8
   140034823:	add    rsp,0x20
   140034827:	pop    rdi
   140034828:	ret    
   140034829:	int3   
   14003482a:	int3   
   14003482b:	int3   
   14003482c:	int3   
   14003482d:	int3   
   14003482e:	int3   
   14003482f:	int3   
   140034830:	rex push rbx
   140034832:	sub    rsp,0x20
   140034836:	mov    rdx,QWORD PTR [rip+0x1dc1b]        # 0x140052458
   14003483d:	mov    rbx,rcx
   140034840:	lea    r9,[rip+0x1dc09]        # 0x140052450
   140034847:	test   rdx,rdx
   14003484a:	je     0x140034884
   14003484c:	nop    DWORD PTR [rax+0x0]
   140034850:	mov    r8,rbx
   140034853:	sub    r8,rdx
   140034856:	data16 nop WORD PTR [rax+rax*1+0x0]
   140034860:	movzx  ecx,BYTE PTR [rdx]
   140034863:	movzx  eax,BYTE PTR [rdx+r8*1]
   140034868:	sub    ecx,eax
   14003486a:	jne    0x140034873
   14003486c:	inc    rdx
   14003486f:	test   eax,eax
   140034871:	jne    0x140034860
   140034873:	test   ecx,ecx
   140034875:	je     0x140034884
   140034877:	mov    rdx,QWORD PTR [r9+0x18]
   14003487b:	add    r9,0x10
   14003487f:	test   rdx,rdx
   140034882:	jne    0x140034850
   140034884:	cmp    QWORD PTR [r9+0x8],0x0
   140034889:	je     0x140034894
   14003488b:	mov    rax,r9
   14003488e:	add    rsp,0x20
   140034892:	pop    rbx
   140034893:	ret    
   140034894:	call   QWORD PTR [rip+0x8a36]        # 0x14003d2d0
   14003489a:	lea    r8,[rip+0x1db97]        # 0x140052438
   1400348a1:	lea    rdx,[rip+0xe3d8]        # 0x140042c80
   1400348a8:	lea    rcx,[rax+0x60]
   1400348ac:	mov    r9,rbx
   1400348af:	call   QWORD PTR [rip+0x8a0b]        # 0x14003d2c0
   1400348b5:	mov    edx,0x2d
   1400348ba:	mov    rcx,rbx
   1400348bd:	call   QWORD PTR [rip+0x8905]        # 0x14003d1c8
   1400348c3:	test   rax,rax
   1400348c6:	je     0x1400348d8
   1400348c8:	mov    rcx,rbx
   1400348cb:	mov    BYTE PTR [rax],0x0
   1400348ce:	add    rsp,0x20
   1400348d2:	pop    rbx
   1400348d3:	jmp    0x140034830
   1400348d8:	lea    rax,[rip+0xe3bd]        # 0x140042c9c
   1400348df:	add    rsp,0x20
   1400348e3:	pop    rbx
   1400348e4:	ret    
   1400348e5:	int3   
   1400348e6:	int3   
   1400348e7:	int3   
   1400348e8:	int3   
   1400348e9:	int3   
   1400348ea:	int3   
   1400348eb:	int3   
   1400348ec:	int3   
   1400348ed:	int3   
   1400348ee:	int3   
   1400348ef:	int3   
   1400348f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400348f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400348fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400348ff:	push   rdi
   140034900:	sub    rsp,0xc0
   140034907:	xor    ebx,ebx
   140034909:	mov    ebp,r8d
   14003490c:	mov    edi,edx
   14003490e:	mov    rsi,rcx
   140034911:	test   edx,edx
   140034913:	jle    0x14003498c
   140034915:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140034920:	mov    rdx,QWORD PTR [rsi]
   140034923:	lea    rcx,[rsp+0x30]
   140034928:	call   0x14001bc30
   14003492d:	lea    rdx,[rip+0xe36c]        # 0x140042ca0
   140034934:	lea    rcx,[rsp+0x40]
   140034939:	movsd  xmm2,QWORD PTR [rip+0x1f9a7]        # 0x1400542e8
   140034941:	movaps xmm3,xmm2
   140034944:	movups xmm1,XMMWORD PTR [rax]
   140034947:	movaps xmm0,xmm1
   14003494a:	mulsd  xmm2,xmm1
   14003494e:	unpckhpd xmm0,xmm1
   140034952:	mulsd  xmm3,xmm0
   140034956:	movq   r8,xmm2
   14003495b:	movq   r9,xmm3
   140034960:	call   QWORD PTR [rip+0x874a]        # 0x14003d0b0
   140034966:	mov    rcx,QWORD PTR [rip+0x20b83]        # 0x1400554f0
   14003496d:	lea    r9,[rsp+0x40]
   140034972:	lea    rdx,[rip+0xf017]        # 0x140043990
   140034979:	mov    r8d,ebx
   14003497c:	call   QWORD PTR [rip+0x893e]        # 0x14003d2c0
   140034982:	inc    ebx
   140034984:	lea    rsi,[rsi+0x8]
   140034988:	cmp    ebx,edi
   14003498a:	jl     0x140034920
   14003498c:	cmp    edi,0x1
   14003498f:	jle    0x1400349c9
   140034991:	mov    ebx,0x1
   140034996:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400349a0:	mov    r9d,DWORD PTR [rip+0x1f925]        # 0x1400542cc
   1400349a7:	mov    rcx,QWORD PTR [rip+0x20b42]        # 0x1400554f0
   1400349ae:	lea    r8d,[rbx-0x1]
   1400349b2:	lea    rdx,[rip+0xefe7]        # 0x1400439a0
   1400349b9:	mov    DWORD PTR [rsp+0x20],ebx
   1400349bd:	call   QWORD PTR [rip+0x88fd]        # 0x14003d2c0
   1400349c3:	inc    ebx
   1400349c5:	cmp    ebx,edi
   1400349c7:	jl     0x1400349a0
   1400349c9:	test   ebp,ebp
   1400349cb:	je     0x1400349ec
   1400349cd:	mov    r9d,DWORD PTR [rip+0x1f8f8]        # 0x1400542cc
   1400349d4:	mov    rcx,QWORD PTR [rip+0x20b15]        # 0x1400554f0
   1400349db:	lea    r8d,[rdi-0x1]
   1400349df:	lea    rdx,[rip+0xefe2]        # 0x1400439c8
   1400349e6:	call   QWORD PTR [rip+0x88d4]        # 0x14003d2c0
   1400349ec:	lea    r11,[rsp+0xc0]
   1400349f4:	mov    rbx,QWORD PTR [r11+0x10]
   1400349f8:	mov    rbp,QWORD PTR [r11+0x18]
   1400349fc:	mov    rsi,QWORD PTR [r11+0x20]
   140034a00:	mov    rsp,r11
   140034a03:	pop    rdi
   140034a04:	ret    
   140034a05:	int3   
   140034a06:	int3   
   140034a07:	int3   
   140034a08:	int3   
   140034a09:	int3   
   140034a0a:	int3   
   140034a0b:	int3   
   140034a0c:	int3   
   140034a0d:	int3   
   140034a0e:	int3   
   140034a0f:	int3   
   140034a10:	rex push rbx
   140034a12:	sub    rsp,0x20
   140034a16:	mov    rbx,rcx
   140034a19:	call   QWORD PTR [rip+0x88b1]        # 0x14003d2d0
   140034a1f:	lea    r8,[rip+0x1da12]        # 0x140052438
   140034a26:	lea    rdx,[rip+0xe223]        # 0x140042c50
   140034a2d:	lea    rcx,[rax+0x60]
   140034a31:	mov    r9,rbx
   140034a34:	add    rsp,0x20
   140034a38:	pop    rbx
   140034a39:	rex.W jmp QWORD PTR [rip+0x8880]        # 0x14003d2c0
   140034a40:	rex push rbx
   140034a42:	sub    rsp,0x20
   140034a46:	mov    rbx,rcx
   140034a49:	call   QWORD PTR [rip+0x8881]        # 0x14003d2d0
   140034a4f:	lea    r8,[rip+0x1d9e2]        # 0x140052438
   140034a56:	lea    rdx,[rip+0xe213]        # 0x140042c70
   140034a5d:	lea    rcx,[rax+0x60]
   140034a61:	mov    r9,rbx
   140034a64:	add    rsp,0x20
   140034a68:	pop    rbx
   140034a69:	rex.W jmp QWORD PTR [rip+0x8850]        # 0x14003d2c0
   140034a70:	ret    0x0
   140034a73:	int3   
   140034a74:	int3   
   140034a75:	int3   
   140034a76:	int3   
   140034a77:	int3   
   140034a78:	int3   
   140034a79:	int3   
   140034a7a:	int3   
   140034a7b:	int3   
   140034a7c:	int3   
   140034a7d:	int3   
   140034a7e:	int3   
   140034a7f:	int3   
   140034a80:	ret    0x0
   140034a83:	int3   
   140034a84:	int3   
   140034a85:	int3   
   140034a86:	int3   
   140034a87:	int3   
   140034a88:	int3   
   140034a89:	int3   
   140034a8a:	int3   
   140034a8b:	int3   
   140034a8c:	int3   
   140034a8d:	int3   
   140034a8e:	int3   
   140034a8f:	int3   
   140034a90:	ret    0x0
   140034a93:	int3   
   140034a94:	int3   
   140034a95:	int3   
   140034a96:	int3   
   140034a97:	int3   
   140034a98:	int3   
   140034a99:	int3   
   140034a9a:	int3   
   140034a9b:	int3   
   140034a9c:	int3   
   140034a9d:	int3   
   140034a9e:	int3   
   140034a9f:	int3   
   140034aa0:	ret    0x0
   140034aa3:	int3   
   140034aa4:	int3   
   140034aa5:	int3   
   140034aa6:	int3   
   140034aa7:	int3   
   140034aa8:	int3   
   140034aa9:	int3   
   140034aaa:	int3   
   140034aab:	int3   
   140034aac:	int3   
   140034aad:	int3   
   140034aae:	int3   
   140034aaf:	int3   
   140034ab0:	ret    0x0
   140034ab3:	int3   
   140034ab4:	int3   
   140034ab5:	int3   
   140034ab6:	int3   
   140034ab7:	int3   
   140034ab8:	int3   
   140034ab9:	int3   
   140034aba:	int3   
   140034abb:	int3   
   140034abc:	int3   
   140034abd:	int3   
   140034abe:	int3   
   140034abf:	int3   
   140034ac0:	ret    0x0
   140034ac3:	int3   
   140034ac4:	int3   
   140034ac5:	int3   
   140034ac6:	int3   
   140034ac7:	int3   
   140034ac8:	int3   
   140034ac9:	int3   
   140034aca:	int3   
   140034acb:	int3   
   140034acc:	int3   
   140034acd:	int3   
   140034ace:	int3   
   140034acf:	int3   
   140034ad0:	ret    0x0
   140034ad3:	int3   
   140034ad4:	int3   
   140034ad5:	int3   
   140034ad6:	int3   
   140034ad7:	int3   
   140034ad8:	int3   
   140034ad9:	int3   
   140034ada:	int3   
   140034adb:	int3   
   140034adc:	int3   
   140034add:	int3   
   140034ade:	int3   
   140034adf:	int3   
   140034ae0:	ret    0x0
   140034ae3:	int3   
   140034ae4:	int3   
   140034ae5:	int3   
   140034ae6:	int3   
   140034ae7:	int3   
   140034ae8:	int3   
   140034ae9:	int3   
   140034aea:	int3   
   140034aeb:	int3   
   140034aec:	int3   
   140034aed:	int3   
   140034aee:	int3   
   140034aef:	int3   
   140034af0:	ret    0x0
   140034af3:	int3   
   140034af4:	int3   
   140034af5:	int3   
   140034af6:	int3   
   140034af7:	int3   
   140034af8:	int3   
   140034af9:	int3   
   140034afa:	int3   
   140034afb:	int3   
   140034afc:	int3   
   140034afd:	int3   
   140034afe:	int3   
   140034aff:	int3   
   140034b00:	ret    0x0
   140034b03:	int3   
   140034b04:	int3   
   140034b05:	int3   
   140034b06:	int3   
   140034b07:	int3   
   140034b08:	int3   
   140034b09:	int3   
   140034b0a:	int3   
   140034b0b:	int3   
   140034b0c:	int3   
   140034b0d:	int3   
   140034b0e:	int3   
   140034b0f:	int3   
   140034b10:	ret    0x0
   140034b13:	int3   
   140034b14:	int3   
   140034b15:	int3   
   140034b16:	int3   
   140034b17:	int3   
   140034b18:	int3   
   140034b19:	int3   
   140034b1a:	int3   
   140034b1b:	int3   
   140034b1c:	int3   
   140034b1d:	int3   
   140034b1e:	int3   
   140034b1f:	int3   
   140034b20:	ret    0x0
   140034b23:	int3   
   140034b24:	int3   
   140034b25:	int3   
   140034b26:	int3   
   140034b27:	int3   
   140034b28:	int3   
   140034b29:	int3   
   140034b2a:	int3   
   140034b2b:	int3   
   140034b2c:	int3   
   140034b2d:	int3   
   140034b2e:	int3   
   140034b2f:	int3   
   140034b30:	ret    0x0
   140034b33:	int3   
   140034b34:	int3   
   140034b35:	int3   
   140034b36:	int3   
   140034b37:	int3   
   140034b38:	int3   
   140034b39:	int3   
   140034b3a:	int3   
   140034b3b:	int3   
   140034b3c:	int3   
   140034b3d:	int3   
   140034b3e:	int3   
   140034b3f:	int3   
   140034b40:	ret    0x0
   140034b43:	int3   
   140034b44:	int3   
   140034b45:	int3   
   140034b46:	int3   
   140034b47:	int3   
   140034b48:	int3   
   140034b49:	int3   
   140034b4a:	int3   
   140034b4b:	int3   
   140034b4c:	int3   
   140034b4d:	int3   
   140034b4e:	int3   
   140034b4f:	int3   
   140034b50:	ret    0x0
   140034b53:	int3   
   140034b54:	int3   
   140034b55:	int3   
   140034b56:	int3   
   140034b57:	int3   
   140034b58:	int3   
   140034b59:	int3   
   140034b5a:	int3   
   140034b5b:	int3   
   140034b5c:	int3   
   140034b5d:	int3   
   140034b5e:	int3   
   140034b5f:	int3   
   140034b60:	ret    0x0
   140034b63:	int3   
   140034b64:	int3   
   140034b65:	int3   
   140034b66:	int3   
   140034b67:	int3   
   140034b68:	int3   
   140034b69:	int3   
   140034b6a:	int3   
   140034b6b:	int3   
   140034b6c:	int3   
   140034b6d:	int3   
   140034b6e:	int3   
   140034b6f:	int3   
   140034b70:	ret    0x0
   140034b73:	int3   
   140034b74:	int3   
   140034b75:	int3   
   140034b76:	int3   
   140034b77:	int3   
   140034b78:	int3   
   140034b79:	int3   
   140034b7a:	int3   
   140034b7b:	int3   
   140034b7c:	int3   
   140034b7d:	int3   
   140034b7e:	int3   
   140034b7f:	int3   
   140034b80:	sub    rsp,0x28
   140034b84:	mov    edx,DWORD PTR [rip+0x1f8b6]        # 0x140054440
   140034b8a:	lea    eax,[rdx+0x1]
   140034b8d:	cmp    eax,0x4
   140034b90:	jl     0x140034bb2
   140034b92:	lea    rdx,[rip+0xf087]        # 0x140043c20
   140034b99:	lea    rcx,[rip+0xdc78]        # 0x140042818
   140034ba0:	mov    r8d,0x19b
   140034ba6:	call   QWORD PTR [rip+0x84e4]        # 0x14003d090
   140034bac:	mov    edx,DWORD PTR [rip+0x1f88e]        # 0x140054440
   140034bb2:	lea    r8,[rip+0x1f807]        # 0x1400543c0
   140034bb9:	movsxd rcx,edx
   140034bbc:	mov    rax,rcx
   140034bbf:	shl    rcx,0x5
   140034bc3:	shl    rax,0x5
   140034bc7:	inc    edx
   140034bc9:	mov    DWORD PTR [rip+0x1f871],edx        # 0x140054440
   140034bcf:	movups xmm0,XMMWORD PTR [rax+r8*1]
   140034bd4:	movups XMMWORD PTR [rcx+r8*1+0x20],xmm0
   140034bda:	movups xmm1,XMMWORD PTR [rax+r8*1+0x10]
   140034be0:	movups XMMWORD PTR [rcx+r8*1+0x30],xmm1
   140034be6:	add    rsp,0x28
   140034bea:	ret    
   140034beb:	int3   
   140034bec:	int3   
   140034bed:	int3   
   140034bee:	int3   
   140034bef:	int3   
   140034bf0:	rex push rbx
   140034bf2:	sub    rsp,0x20
   140034bf6:	mov    eax,DWORD PTR [rip+0x1f844]        # 0x140054440
   140034bfc:	lea    ebx,[rax-0x1]
   140034bff:	test   eax,eax
   140034c01:	jg     0x140034c1d
   140034c03:	lea    rdx,[rip+0xf016]        # 0x140043c20
   140034c0a:	lea    rcx,[rip+0xdc2f]        # 0x140042840
   140034c11:	mov    r8d,0x1a4
   140034c17:	call   QWORD PTR [rip+0x8473]        # 0x14003d090
   140034c1d:	mov    DWORD PTR [rip+0x1f81d],ebx        # 0x140054440
   140034c23:	add    rsp,0x20
   140034c27:	pop    rbx
   140034c28:	ret    
   140034c29:	int3   
   140034c2a:	int3   
   140034c2b:	int3   
   140034c2c:	int3   
   140034c2d:	int3   
   140034c2e:	int3   
   140034c2f:	int3   
   140034c30:	ret    0x0
   140034c33:	int3   
   140034c34:	int3   
   140034c35:	int3   
   140034c36:	int3   
   140034c37:	int3   
   140034c38:	int3   
   140034c39:	int3   
   140034c3a:	int3   
   140034c3b:	int3   
   140034c3c:	int3   
   140034c3d:	int3   
   140034c3e:	int3   
   140034c3f:	int3   
   140034c40:	ret    0x0
   140034c43:	int3   
   140034c44:	int3   
   140034c45:	int3   
   140034c46:	int3   
   140034c47:	int3   
   140034c48:	int3   
   140034c49:	int3   
   140034c4a:	int3   
   140034c4b:	int3   
   140034c4c:	int3   
   140034c4d:	int3   
   140034c4e:	int3   
   140034c4f:	int3   
   140034c50:	ret    0x0
   140034c53:	int3   
   140034c54:	int3   
   140034c55:	int3   
   140034c56:	int3   
   140034c57:	int3   
   140034c58:	int3   
   140034c59:	int3   
   140034c5a:	int3   
   140034c5b:	int3   
   140034c5c:	int3   
   140034c5d:	int3   
   140034c5e:	int3   
   140034c5f:	int3   
   140034c60:	ret    0x0
   140034c63:	int3   
   140034c64:	int3   
   140034c65:	int3   
   140034c66:	int3   
   140034c67:	int3   
   140034c68:	int3   
   140034c69:	int3   
   140034c6a:	int3   
   140034c6b:	int3   
   140034c6c:	int3   
   140034c6d:	int3   
   140034c6e:	int3   
   140034c6f:	int3   
   140034c70:	ret    0x0
   140034c73:	int3   
   140034c74:	int3   
   140034c75:	int3   
   140034c76:	int3   
   140034c77:	int3   
   140034c78:	int3   
   140034c79:	int3   
   140034c7a:	int3   
   140034c7b:	int3   
   140034c7c:	int3   
   140034c7d:	int3   
   140034c7e:	int3   
   140034c7f:	int3   
   140034c80:	ret    0x0
   140034c83:	int3   
   140034c84:	int3   
   140034c85:	int3   
   140034c86:	int3   
   140034c87:	int3   
   140034c88:	int3   
   140034c89:	int3   
   140034c8a:	int3   
   140034c8b:	int3   
   140034c8c:	int3   
   140034c8d:	int3   
   140034c8e:	int3   
   140034c8f:	int3   
   140034c90:	ret    0x0
   140034c93:	int3   
   140034c94:	int3   
   140034c95:	int3   
   140034c96:	int3   
   140034c97:	int3   
   140034c98:	int3   
   140034c99:	int3   
   140034c9a:	int3   
   140034c9b:	int3   
   140034c9c:	int3   
   140034c9d:	int3   
   140034c9e:	int3   
   140034c9f:	int3   
   140034ca0:	ret    0x0
   140034ca3:	int3   
   140034ca4:	int3   
   140034ca5:	int3   
   140034ca6:	int3   
   140034ca7:	int3   
   140034ca8:	int3   
   140034ca9:	int3   
   140034caa:	int3   
   140034cab:	int3   
   140034cac:	int3   
   140034cad:	int3   
   140034cae:	int3   
   140034caf:	int3   
   140034cb0:	ret    0x0
   140034cb3:	int3   
   140034cb4:	int3   
   140034cb5:	int3   
   140034cb6:	int3   
   140034cb7:	int3   
   140034cb8:	int3   
   140034cb9:	int3   
   140034cba:	int3   
   140034cbb:	int3   
   140034cbc:	int3   
   140034cbd:	int3   
   140034cbe:	int3   
   140034cbf:	int3   
   140034cc0:	rex push rdi
   140034cc2:	sub    rsp,0x60
   140034cc6:	lea    rdx,[rip+0xc893]        # 0x140041560
   140034ccd:	mov    rdi,rcx
   140034cd0:	call   0x1400275b0
   140034cd5:	test   rax,rax
   140034cd8:	je     0x140034dcf
   140034cde:	or     rdx,0xffffffffffffffff
   140034ce2:	inc    rdx
   140034ce5:	cmp    BYTE PTR [rax+rdx*1],0x0
   140034ce9:	jne    0x140034ce2
   140034ceb:	test   rdx,rdx
   140034cee:	je     0x140034dcf
   140034cf4:	movd   xmm0,DWORD PTR [rdi+0x60]
   140034cf9:	movd   xmm1,DWORD PTR [rdi+0x64]
   140034cfe:	mov    rdx,rdi
   140034d01:	mov    rcx,rax
   140034d04:	mov    QWORD PTR [rsp+0x70],rbx
   140034d09:	cvtdq2pd xmm0,xmm0
   140034d0d:	cvtdq2pd xmm1,xmm1
   140034d11:	movsd  QWORD PTR [rsp+0x40],xmm0
   140034d17:	movsd  QWORD PTR [rsp+0x48],xmm1
   140034d1d:	movd   xmm0,DWORD PTR [rdi+0x68]
   140034d22:	movd   xmm1,DWORD PTR [rdi+0x6c]
   140034d27:	cvtdq2pd xmm0,xmm0
   140034d2b:	cvtdq2pd xmm1,xmm1
   140034d2f:	movsd  QWORD PTR [rsp+0x30],xmm0
   140034d35:	movsd  QWORD PTR [rsp+0x38],xmm1
   140034d3b:	call   0x14001cdb0
   140034d40:	lea    rdx,[rsp+0x50]
   140034d45:	lea    rcx,[rsp+0x30]
   140034d4a:	movss  xmm0,DWORD PTR [rsp+0x30]
   140034d50:	movss  xmm1,DWORD PTR [rsp+0x34]
   140034d56:	mov    rbx,rax
   140034d59:	mov    rax,QWORD PTR [rdi+0x58]
   140034d5d:	movss  DWORD PTR [rsp+0x50],xmm0
   140034d63:	movss  xmm0,DWORD PTR [rsp+0x38]
   140034d69:	movss  DWORD PTR [rsp+0x54],xmm1
   140034d6f:	mov    r9,QWORD PTR [rax]
   140034d72:	mov    r8,rbx
   140034d75:	mov    QWORD PTR [rsp+0x20],r9
   140034d7a:	movss  xmm1,DWORD PTR [rsp+0x3c]
   140034d80:	movss  DWORD PTR [rsp+0x58],xmm0
   140034d86:	movss  xmm0,DWORD PTR [rsp+0x40]
   140034d8c:	movss  DWORD PTR [rsp+0x5c],xmm1
   140034d92:	movss  xmm1,DWORD PTR [rsp+0x44]
   140034d98:	movss  DWORD PTR [rsp+0x30],xmm0
   140034d9e:	movss  xmm0,DWORD PTR [rsp+0x48]
   140034da4:	movss  DWORD PTR [rsp+0x34],xmm1
   140034daa:	movss  xmm1,DWORD PTR [rsp+0x4c]
   140034db0:	movss  DWORD PTR [rsp+0x38],xmm0
   140034db6:	movss  DWORD PTR [rsp+0x3c],xmm1
   140034dbc:	call   0x1400357c0
   140034dc1:	mov    rcx,rbx
   140034dc4:	call   QWORD PTR [rip+0x84d6]        # 0x14003d2a0
   140034dca:	mov    rbx,QWORD PTR [rsp+0x70]
   140034dcf:	add    rsp,0x60
   140034dd3:	pop    rdi
   140034dd4:	ret    
   140034dd5:	int3   
   140034dd6:	int3   
   140034dd7:	int3   
   140034dd8:	int3   
   140034dd9:	int3   
   140034dda:	int3   
   140034ddb:	int3   
   140034ddc:	int3   
   140034ddd:	int3   
   140034dde:	int3   
   140034ddf:	int3   
   140034de0:	mov    rax,rsp
   140034de3:	push   rbp
   140034de4:	push   rbx
   140034de5:	push   rsi
   140034de6:	push   rdi
   140034de7:	push   r12
   140034de9:	push   r13
   140034deb:	push   r14
   140034ded:	push   r15
   140034def:	lea    rbp,[rax-0x5f]
   140034df3:	sub    rsp,0xf8
   140034dfa:	mov    r13,QWORD PTR [rcx+0x60]
   140034dfe:	xor    esi,esi
   140034e00:	movaps XMMWORD PTR [rax-0x58],xmm6
   140034e04:	movaps XMMWORD PTR [rax-0x68],xmm7
   140034e08:	mov    rbx,rcx
   140034e0b:	lea    r12,[rip+0x8606]        # 0x14003d418
   140034e12:	mov    QWORD PTR [rbp+0x67],rsi
   140034e16:	mov    QWORD PTR [rbp+0x7f],rsi
   140034e1a:	mov    QWORD PTR [rbp-0x61],rsi
   140034e1e:	mov    QWORD PTR [rbp-0x59],rsi
   140034e22:	mov    QWORD PTR [rbp-0x49],rsi
   140034e26:	mov    QWORD PTR [rbp-0x69],rsi
   140034e2a:	mov    QWORD PTR [rbp-0x51],rsi
   140034e2e:	mov    QWORD PTR [rsp+0x50],r13
   140034e33:	test   r13,r13
   140034e36:	je     0x140034e3e
   140034e38:	mov    r13,QWORD PTR [r13+0x0]
   140034e3c:	jmp    0x140034e41
   140034e3e:	mov    r13,r12
   140034e41:	lea    rdx,[rip+0xc718]        # 0x140041560
   140034e48:	call   0x1400275b0
   140034e4d:	mov    rdi,rax
   140034e50:	test   rax,rax
   140034e53:	je     0x140034e9c
   140034e55:	cmp    BYTE PTR [rax],sil
   140034e58:	je     0x140034e9c
   140034e5a:	mov    rdx,rbx
   140034e5d:	mov    rcx,rax
   140034e60:	call   0x14001cb40
   140034e65:	lea    rdx,[rip+0xed7c]        # 0x140043be8
   140034e6c:	mov    rcx,rbx
   140034e6f:	mov    rdi,rax
   140034e72:	mov    QWORD PTR [rbp+0x7f],rax
   140034e76:	call   0x1400275b0
   140034e7b:	test   rax,rax
   140034e7e:	je     0x140034e99
   140034e80:	cmp    BYTE PTR [rax],sil
   140034e83:	je     0x140034e99
   140034e85:	mov    rdx,rbx
   140034e88:	mov    rcx,rax
   140034e8b:	call   0x14001cb40
   140034e90:	mov    r12,rax
   140034e93:	mov    QWORD PTR [rbp-0x49],rax
   140034e97:	jmp    0x140034e9c
   140034e99:	mov    r12,r13
   140034e9c:	mov    rax,QWORD PTR [rbx+0x70]
   140034ea0:	mov    QWORD PTR [rbp-0x11],rax
   140034ea4:	test   rax,rax
   140034ea7:	je     0x140034eae
   140034ea9:	mov    r14,QWORD PTR [rax]
   140034eac:	jmp    0x140034eb1
   140034eae:	mov    r14,r13
   140034eb1:	lea    rdx,[rip+0xed38]        # 0x140043bf0
   140034eb8:	mov    rcx,rbx
   140034ebb:	mov    QWORD PTR [rbp+0x77],r14
   140034ebf:	call   0x1400275b0
   140034ec4:	mov    r15,rax
   140034ec7:	test   rax,rax
   140034eca:	je     0x140034f15
   140034ecc:	cmp    BYTE PTR [rax],sil
   140034ecf:	je     0x140034f15
   140034ed1:	mov    rdx,rbx
   140034ed4:	mov    rcx,rax
   140034ed7:	call   0x14001cb40
   140034edc:	lea    rdx,[rip+0xed15]        # 0x140043bf8
   140034ee3:	mov    rcx,rbx
   140034ee6:	mov    r15,rax
   140034ee9:	mov    QWORD PTR [rbp-0x59],rax
   140034eed:	call   0x1400275b0
   140034ef2:	test   rax,rax
   140034ef5:	je     0x140034f10
   140034ef7:	cmp    BYTE PTR [rax],sil
   140034efa:	je     0x140034f10
   140034efc:	mov    rdx,rbx
   140034eff:	mov    rcx,rax
   140034f02:	call   0x14001cb40
   140034f07:	mov    rsi,rax
   140034f0a:	mov    QWORD PTR [rbp-0x69],rax
   140034f0e:	jmp    0x140034f20
   140034f10:	mov    rsi,r14
   140034f13:	jmp    0x140034f20
   140034f15:	test   rdi,rdi
   140034f18:	je     0x140034f20
   140034f1a:	mov    r15,rdi
   140034f1d:	mov    rsi,r12
   140034f20:	mov    rax,QWORD PTR [rbx+0x68]
   140034f24:	mov    QWORD PTR [rbp-0x19],rax
   140034f28:	test   rax,rax
   140034f2b:	je     0x140034f36
   140034f2d:	mov    rax,QWORD PTR [rax]
   140034f30:	mov    QWORD PTR [rbp+0x6f],rax
   140034f34:	jmp    0x140034f3a
   140034f36:	mov    QWORD PTR [rbp+0x6f],r13
   140034f3a:	lea    rdx,[rip+0xecc7]        # 0x140043c08
   140034f41:	mov    rcx,rbx
   140034f44:	call   0x1400275b0
   140034f49:	mov    r14,rax
   140034f4c:	test   rax,rax
   140034f4f:	je     0x140034fa0
   140034f51:	cmp    BYTE PTR [rax],0x0
   140034f54:	je     0x140034fa0
   140034f56:	mov    rdx,rbx
   140034f59:	mov    rcx,rax
   140034f5c:	call   0x14001cb40
   140034f61:	lea    rdx,[rip+0xeca8]        # 0x140043c10
   140034f68:	mov    rcx,rbx
   140034f6b:	mov    r14,rax
   140034f6e:	mov    QWORD PTR [rbp-0x61],rax
   140034f72:	call   0x1400275b0
   140034f77:	test   rax,rax
   140034f7a:	je     0x140034f96
   140034f7c:	cmp    BYTE PTR [rax],0x0
   140034f7f:	je     0x140034f96
   140034f81:	mov    rdx,rbx
   140034f84:	mov    rcx,rax
   140034f87:	call   0x14001cb40
   140034f8c:	mov    QWORD PTR [rbp+0x67],rax
   140034f90:	mov    QWORD PTR [rbp-0x51],rax
   140034f94:	jmp    0x140034fac
   140034f96:	mov    rax,QWORD PTR [rbp+0x6f]
   140034f9a:	mov    QWORD PTR [rbp+0x67],rax
   140034f9e:	jmp    0x140034fac
   140034fa0:	test   rdi,rdi
   140034fa3:	je     0x140034fac
   140034fa5:	mov    r14,rdi
   140034fa8:	mov    QWORD PTR [rbp+0x67],r12
   140034fac:	mov    rax,QWORD PTR [rsp+0x50]
   140034fb1:	movsd  xmm6,QWORD PTR [rip+0xecdf]        # 0x140043c98
   140034fb9:	movsd  xmm7,QWORD PTR [rip+0x8417]        # 0x14003d3d8
   140034fc1:	test   rax,rax
   140034fc4:	je     0x1400350a1
   140034fca:	test   rdi,rdi
   140034fcd:	je     0x1400350a1
   140034fd3:	movd   xmm3,DWORD PTR [rax+0x30]
   140034fd8:	movsd  xmm4,QWORD PTR [rax+0x20]
   140034fdd:	movd   xmm1,DWORD PTR [rax+0x34]
   140034fe2:	movsd  xmm2,QWORD PTR [rax+0x28]
   140034fe7:	lea    rdx,[rbp-0x79]
   140034feb:	lea    rcx,[rsp+0x40]
   140034ff0:	mov    r9,r13
   140034ff3:	mov    r8,rdi
   140034ff6:	mov    QWORD PTR [rsp+0x20],r12
   140034ffb:	cvtdq2pd xmm1,xmm1
   140034fff:	mulsd  xmm4,xmm6
   140035003:	cvtdq2pd xmm3,xmm3
   140035007:	mulsd  xmm4,xmm7
   14003500b:	mulsd  xmm2,xmm6
   14003500f:	mulsd  xmm2,xmm7
   140035013:	movaps xmm0,xmm3
   140035016:	subsd  xmm0,xmm4
   14003501a:	addsd  xmm4,xmm3
   14003501e:	movsd  QWORD PTR [rsp+0x30],xmm0
   140035024:	movaps xmm0,xmm1
   140035027:	movsd  QWORD PTR [rsp+0x50],xmm4
   14003502d:	subsd  xmm0,xmm2
   140035031:	addsd  xmm2,xmm1
   140035035:	movss  xmm1,DWORD PTR [rsp+0x54]
   14003503b:	movsd  QWORD PTR [rsp+0x38],xmm0
   140035041:	movss  xmm0,DWORD PTR [rsp+0x50]
   140035047:	movss  DWORD PTR [rbp-0x75],xmm1
   14003504c:	movss  DWORD PTR [rbp-0x79],xmm0
   140035051:	movsd  QWORD PTR [rsp+0x58],xmm2
   140035057:	movss  xmm1,DWORD PTR [rbp-0x7d]
   14003505c:	movss  xmm0,DWORD PTR [rsp+0x58]
   140035062:	movss  DWORD PTR [rbp-0x6d],xmm1
   140035067:	movss  xmm1,DWORD PTR [rsp+0x34]
   14003506d:	movss  DWORD PTR [rbp-0x71],xmm0
   140035072:	movss  xmm0,DWORD PTR [rsp+0x30]
   140035078:	movss  DWORD PTR [rsp+0x44],xmm1
   14003507e:	movss  xmm1,DWORD PTR [rsp+0x3c]
   140035084:	movss  DWORD PTR [rsp+0x40],xmm0
   14003508a:	movss  xmm0,DWORD PTR [rsp+0x38]
   140035090:	movss  DWORD PTR [rsp+0x48],xmm0
   140035096:	movss  DWORD PTR [rsp+0x4c],xmm1
   14003509c:	call   0x1400357c0
   1400350a1:	mov    rax,QWORD PTR [rbp-0x11]
   1400350a5:	test   rax,rax
   1400350a8:	je     0x14003518b
   1400350ae:	test   rdi,rdi
   1400350b1:	jne    0x1400350bc
   1400350b3:	test   r15,r15
   1400350b6:	je     0x14003518b
   1400350bc:	movd   xmm3,DWORD PTR [rax+0x30]
   1400350c1:	movsd  xmm4,QWORD PTR [rax+0x20]
   1400350c6:	movd   xmm1,DWORD PTR [rax+0x34]
   1400350cb:	movsd  xmm2,QWORD PTR [rax+0x28]
   1400350d0:	mov    r9,QWORD PTR [rbp+0x77]
   1400350d4:	lea    rdx,[rsp+0x40]
   1400350d9:	lea    rcx,[rbp-0x79]
   1400350dd:	mov    r8,r15
   1400350e0:	mov    QWORD PTR [rsp+0x20],rsi
   1400350e5:	cvtdq2pd xmm1,xmm1
   1400350e9:	mulsd  xmm4,xmm6
   1400350ed:	cvtdq2pd xmm3,xmm3
   1400350f1:	mulsd  xmm4,xmm7
   1400350f5:	mulsd  xmm2,xmm6
   1400350f9:	mulsd  xmm2,xmm7
   1400350fd:	movaps xmm0,xmm3
   140035100:	subsd  xmm0,xmm4
   140035104:	addsd  xmm4,xmm3
   140035108:	movsd  QWORD PTR [rsp+0x30],xmm0
   14003510e:	movaps xmm0,xmm1
   140035111:	movsd  QWORD PTR [rsp+0x50],xmm4
   140035117:	subsd  xmm0,xmm2
   14003511b:	addsd  xmm2,xmm1
   14003511f:	movss  xmm1,DWORD PTR [rsp+0x54]
   140035125:	movsd  QWORD PTR [rsp+0x38],xmm0
   14003512b:	movss  xmm0,DWORD PTR [rsp+0x50]
   140035131:	movss  DWORD PTR [rsp+0x44],xmm1
   140035137:	movss  DWORD PTR [rsp+0x40],xmm0
   14003513d:	movsd  QWORD PTR [rsp+0x58],xmm2
   140035143:	movss  xmm1,DWORD PTR [rbp-0x7d]
   140035148:	movss  xmm0,DWORD PTR [rsp+0x58]
   14003514e:	movss  DWORD PTR [rsp+0x4c],xmm1
   140035154:	movss  xmm1,DWORD PTR [rsp+0x34]
   14003515a:	movss  DWORD PTR [rsp+0x48],xmm0
   140035160:	movss  xmm0,DWORD PTR [rsp+0x30]
   140035166:	movss  DWORD PTR [rbp-0x75],xmm1
   14003516b:	movss  xmm1,DWORD PTR [rsp+0x3c]
   140035171:	movss  DWORD PTR [rbp-0x79],xmm0
   140035176:	movss  xmm0,DWORD PTR [rsp+0x38]
   14003517c:	movss  DWORD PTR [rbp-0x71],xmm0
   140035181:	movss  DWORD PTR [rbp-0x6d],xmm1
   140035186:	call   0x1400357c0
   14003518b:	mov    rax,QWORD PTR [rbp-0x19]
   14003518f:	test   rax,rax
   140035192:	je     0x14003527e
   140035198:	test   rdi,rdi
   14003519b:	jne    0x1400351a6
   14003519d:	test   r14,r14
   1400351a0:	je     0x14003527e
   1400351a6:	movd   xmm3,DWORD PTR [rax+0x30]
   1400351ab:	movsd  xmm4,QWORD PTR [rax+0x20]
   1400351b0:	movd   xmm1,DWORD PTR [rax+0x34]
   1400351b5:	movsd  xmm2,QWORD PTR [rax+0x28]
   1400351ba:	mov    r13,QWORD PTR [rbp+0x6f]
   1400351be:	mov    r12,QWORD PTR [rbp+0x67]
   1400351c2:	lea    rdx,[rsp+0x40]
   1400351c7:	lea    rcx,[rbp-0x79]
   1400351cb:	mov    r8,r14
   1400351ce:	cvtdq2pd xmm1,xmm1
   1400351d2:	mulsd  xmm4,xmm6
   1400351d6:	cvtdq2pd xmm3,xmm3
   1400351da:	mulsd  xmm4,xmm7
   1400351de:	mulsd  xmm2,xmm6
   1400351e2:	mov    r9,r13
   1400351e5:	mov    QWORD PTR [rsp+0x20],r12
   1400351ea:	mulsd  xmm2,xmm7
   1400351ee:	movaps xmm0,xmm3
   1400351f1:	subsd  xmm0,xmm4
   1400351f5:	addsd  xmm4,xmm3
   1400351f9:	movsd  QWORD PTR [rsp+0x30],xmm0
   1400351ff:	movaps xmm0,xmm1
   140035202:	movsd  QWORD PTR [rsp+0x50],xmm4
   140035208:	subsd  xmm0,xmm2
   14003520c:	addsd  xmm2,xmm1
   140035210:	movss  xmm1,DWORD PTR [rsp+0x54]
   140035216:	movsd  QWORD PTR [rsp+0x38],xmm0
   14003521c:	movss  xmm0,DWORD PTR [rsp+0x50]
   140035222:	movss  DWORD PTR [rsp+0x44],xmm1
   140035228:	movss  DWORD PTR [rsp+0x40],xmm0
   14003522e:	movsd  QWORD PTR [rsp+0x58],xmm2
   140035234:	movss  xmm1,DWORD PTR [rbp-0x7d]
   140035239:	movss  xmm0,DWORD PTR [rsp+0x58]
   14003523f:	movss  DWORD PTR [rsp+0x4c],xmm1
   140035245:	movss  xmm1,DWORD PTR [rsp+0x34]
   14003524b:	movss  DWORD PTR [rsp+0x48],xmm0
   140035251:	movss  xmm0,DWORD PTR [rsp+0x30]
   140035257:	movss  DWORD PTR [rbp-0x75],xmm1
   14003525c:	movss  xmm1,DWORD PTR [rsp+0x3c]
   140035262:	movss  DWORD PTR [rbp-0x79],xmm0
   140035267:	movss  xmm0,DWORD PTR [rsp+0x38]
   14003526d:	movss  DWORD PTR [rbp-0x71],xmm0
   140035272:	movss  DWORD PTR [rbp-0x6d],xmm1
   140035277:	call   0x1400357c0
   14003527c:	jmp    0x140035286
   14003527e:	mov    r13,QWORD PTR [rbp+0x6f]
   140035282:	mov    r12,QWORD PTR [rbp+0x67]
   140035286:	mov    rax,QWORD PTR [rbx+0x28]
   14003528a:	test   rax,rax
   14003528d:	je     0x140035324
   140035293:	test   rdi,rdi
   140035296:	jne    0x1400352a1
   140035298:	test   r15,r15
   14003529b:	je     0x140035324
   1400352a1:	mov    rax,QWORD PTR [rax]
   1400352a4:	movups xmm0,XMMWORD PTR [rax]
   1400352a7:	movups xmm1,XMMWORD PTR [rax+0x10]
   1400352ab:	movups xmm2,xmm0
   1400352ae:	movups XMMWORD PTR [rbp-0x41],xmm0
   1400352b2:	movsd  xmm0,QWORD PTR [rax+0x20]
   1400352b7:	psrldq xmm2,0x8
   1400352bc:	movsd  QWORD PTR [rbp-0x21],xmm0
   1400352c1:	movups XMMWORD PTR [rbp-0x31],xmm1
   1400352c5:	movq   rax,xmm2
   1400352ca:	shr    rax,0x20
   1400352ce:	test   eax,eax
   1400352d0:	je     0x1400352e5
   1400352d2:	mov    rax,QWORD PTR [rbp-0x31]
   1400352d6:	movd   xmm1,DWORD PTR [rbp-0x29]
   1400352db:	shr    rax,0x20
   1400352df:	movd   xmm0,eax
   1400352e3:	jmp    0x1400352f2
   1400352e5:	mov    rax,QWORD PTR [rbp-0x41]
   1400352e9:	movd   xmm0,DWORD PTR [rax]
   1400352ed:	movd   xmm1,DWORD PTR [rax+0x4]
   1400352f2:	mov    r8,QWORD PTR [rbp+0x77]
   1400352f6:	cvtdq2pd xmm0,xmm0
   1400352fa:	cvtdq2pd xmm1,xmm1
   1400352fe:	lea    rcx,[rsp+0x40]
   140035303:	mov    r9,rsi
   140035306:	mov    rdx,r15
   140035309:	movsd  QWORD PTR [rsp+0x38],xmm1
   14003530f:	movsd  QWORD PTR [rsp+0x30],xmm0
   140035315:	movups xmm0,XMMWORD PTR [rsp+0x30]
   14003531a:	movaps XMMWORD PTR [rsp+0x40],xmm0
   14003531f:	call   0x140035710
   140035324:	mov    rdx,QWORD PTR [rbx+0x28]
   140035328:	test   rdx,rdx
   14003532b:	je     0x1400353c7
   140035331:	test   rdi,rdi
   140035334:	jne    0x14003533f
   140035336:	test   r14,r14
   140035339:	je     0x1400353c7
   14003533f:	movsxd rax,DWORD PTR [rdx+0x8]
   140035343:	lea    rcx,[rax+rax*4]
   140035347:	mov    rax,QWORD PTR [rdx]
   14003534a:	movups xmm0,XMMWORD PTR [rax+rcx*8-0x28]
   14003534f:	movups xmm1,XMMWORD PTR [rax+rcx*8-0x18]
   140035354:	movups XMMWORD PTR [rbp-0x41],xmm0
   140035358:	movsd  xmm0,QWORD PTR [rax+rcx*8-0x8]
   14003535e:	movups XMMWORD PTR [rbp-0x31],xmm1
   140035362:	movd   eax,xmm1
   140035366:	movsd  QWORD PTR [rbp-0x21],xmm0
   14003536b:	test   eax,eax
   14003536d:	je     0x140035382
   14003536f:	mov    rax,QWORD PTR [rbp-0x29]
   140035373:	movd   xmm1,DWORD PTR [rbp-0x21]
   140035378:	shr    rax,0x20
   14003537c:	movd   xmm0,eax
   140035380:	jmp    0x140035396
   140035382:	movsxd rcx,DWORD PTR [rbp-0x39]
   140035386:	mov    rax,QWORD PTR [rbp-0x41]
   14003538a:	movd   xmm0,DWORD PTR [rax+rcx*8-0x8]
   140035390:	movd   xmm1,DWORD PTR [rax+rcx*8-0x4]
   140035396:	cvtdq2pd xmm0,xmm0
   14003539a:	cvtdq2pd xmm1,xmm1
   14003539e:	lea    rcx,[rsp+0x40]
   1400353a3:	mov    r9,r12
   1400353a6:	mov    r8,r13
   1400353a9:	mov    rdx,r14
   1400353ac:	movsd  QWORD PTR [rsp+0x38],xmm1
   1400353b2:	movsd  QWORD PTR [rsp+0x30],xmm0
   1400353b8:	movups xmm0,XMMWORD PTR [rsp+0x30]
   1400353bd:	movaps XMMWORD PTR [rsp+0x40],xmm0
   1400353c2:	call   0x140035710
   1400353c7:	mov    rax,QWORD PTR [rbp+0x7f]
   1400353cb:	test   rax,rax
   1400353ce:	je     0x1400353d9
   1400353d0:	mov    rcx,rax
   1400353d3:	call   QWORD PTR [rip+0x7ec7]        # 0x14003d2a0
   1400353d9:	mov    rax,QWORD PTR [rbp-0x59]
   1400353dd:	test   rax,rax
   1400353e0:	je     0x1400353eb
   1400353e2:	mov    rcx,rax
   1400353e5:	call   QWORD PTR [rip+0x7eb5]        # 0x14003d2a0
   1400353eb:	mov    rax,QWORD PTR [rbp-0x61]
   1400353ef:	test   rax,rax
   1400353f2:	je     0x1400353fd
   1400353f4:	mov    rcx,rax
   1400353f7:	call   QWORD PTR [rip+0x7ea3]        # 0x14003d2a0
   1400353fd:	mov    rax,QWORD PTR [rbp-0x49]
   140035401:	test   rax,rax
   140035404:	je     0x14003540f
   140035406:	mov    rcx,rax
   140035409:	call   QWORD PTR [rip+0x7e91]        # 0x14003d2a0
   14003540f:	mov    rax,QWORD PTR [rbp-0x69]
   140035413:	test   rax,rax
   140035416:	je     0x140035421
   140035418:	mov    rcx,rax
   14003541b:	call   QWORD PTR [rip+0x7e7f]        # 0x14003d2a0
   140035421:	mov    rax,QWORD PTR [rbp-0x51]
   140035425:	test   rax,rax
   140035428:	je     0x140035433
   14003542a:	mov    rcx,rax
   14003542d:	call   QWORD PTR [rip+0x7e6d]        # 0x14003d2a0
   140035433:	movaps xmm6,XMMWORD PTR [rsp+0xe0]
   14003543b:	movaps xmm7,XMMWORD PTR [rsp+0xd0]
   140035443:	add    rsp,0xf8
   14003544a:	pop    r15
   14003544c:	pop    r14
   14003544e:	pop    r13
   140035450:	pop    r12
   140035452:	pop    rdi
   140035453:	pop    rsi
   140035454:	pop    rbx
   140035455:	pop    rbp
   140035456:	ret    
   140035457:	int3   
   140035458:	int3   
   140035459:	int3   
   14003545a:	int3   
   14003545b:	int3   
   14003545c:	int3   
   14003545d:	int3   
   14003545e:	int3   
   14003545f:	int3   
   140035460:	mov    QWORD PTR [rsp+0x10],rbx
   140035465:	push   rdi
   140035466:	sub    rsp,0x60
   14003546a:	lea    rdx,[rip+0xc0ef]        # 0x140041560
   140035471:	mov    rbx,rcx
   140035474:	xor    edi,edi
   140035476:	call   0x1400275b0
   14003547b:	mov    r9,rax
   14003547e:	test   rax,rax
   140035481:	je     0x140035575
   140035487:	cmp    BYTE PTR [rax],dil
   14003548a:	je     0x140035575
   140035490:	mov    edx,DWORD PTR [rbx+0x38]
   140035493:	mov    ecx,DWORD PTR [rbx+0x3c]
   140035496:	mov    eax,DWORD PTR [rbx+0x50]
   140035499:	sub    edx,DWORD PTR [rbx+0x54]
   14003549c:	mov    QWORD PTR [rsp+0x70],rsi
   1400354a1:	movd   xmm0,edx
   1400354a5:	cdq    
   1400354a6:	sub    eax,edx
   1400354a8:	mov    rdx,rbx
   1400354ab:	sar    eax,1
   1400354ad:	sub    ecx,eax
   1400354af:	add    eax,DWORD PTR [rbx+0x3c]
   1400354b2:	cvtdq2pd xmm0,xmm0
   1400354b6:	movsd  QWORD PTR [rsp+0x40],xmm0
   1400354bc:	movd   xmm0,ecx
   1400354c0:	mov    ecx,DWORD PTR [rbx+0x58]
   1400354c3:	add    ecx,DWORD PTR [rbx+0x38]
   1400354c6:	movd   xmm1,eax
   1400354ca:	cvtdq2pd xmm0,xmm0
   1400354ce:	movsd  QWORD PTR [rsp+0x48],xmm0
   1400354d4:	movd   xmm0,ecx
   1400354d8:	cvtdq2pd xmm1,xmm1
   1400354dc:	mov    rcx,r9
   1400354df:	movsd  QWORD PTR [rsp+0x38],xmm1
   1400354e5:	cvtdq2pd xmm0,xmm0
   1400354e9:	movsd  QWORD PTR [rsp+0x30],xmm0
   1400354ef:	call   0x14001ceb0
   1400354f4:	lea    rdx,[rip+0xe6ed]        # 0x140043be8
   1400354fb:	mov    rcx,rbx
   1400354fe:	mov    rsi,rax
   140035501:	call   0x1400275b0
   140035506:	test   rax,rax
   140035509:	je     0x140035520
   14003550b:	cmp    BYTE PTR [rax],dil
   14003550e:	je     0x140035520
   140035510:	mov    rdx,rbx
   140035513:	mov    rcx,rax
   140035516:	call   0x14001ceb0
   14003551b:	mov    rdi,rax
   14003551e:	jmp    0x140035527
   140035520:	mov    rax,QWORD PTR [rbx+0x60]
   140035524:	mov    rax,QWORD PTR [rax]
   140035527:	movups xmm0,XMMWORD PTR [rsp+0x30]
   14003552c:	mov    r9,QWORD PTR [rbx+0x60]
   140035530:	lea    rdx,[rsp+0x50]
   140035535:	mov    r9,QWORD PTR [r9]
   140035538:	lea    rcx,[rsp+0x30]
   14003553d:	mov    r8,rsi
   140035540:	movaps XMMWORD PTR [rsp+0x50],xmm0
   140035545:	movups xmm0,XMMWORD PTR [rsp+0x40]
   14003554a:	mov    QWORD PTR [rsp+0x20],rax
   14003554f:	movaps XMMWORD PTR [rsp+0x30],xmm0
   140035554:	call   0x1400357c0
   140035559:	test   rdi,rdi
   14003555c:	je     0x140035567
   14003555e:	mov    rcx,rdi
   140035561:	call   QWORD PTR [rip+0x7d39]        # 0x14003d2a0
   140035567:	mov    rcx,rsi
   14003556a:	call   QWORD PTR [rip+0x7d30]        # 0x14003d2a0
   140035570:	mov    rsi,QWORD PTR [rsp+0x70]
   140035575:	mov    rbx,QWORD PTR [rsp+0x78]
   14003557a:	add    rsp,0x60
   14003557e:	pop    rdi
   14003557f:	ret    
   140035580:	mov    DWORD PTR [rip+0x1d1fe],0x1        # 0x140052788
   14003558a:	ret    
   14003558b:	int3   
   14003558c:	int3   
   14003558d:	int3   
   14003558e:	int3   
   14003558f:	int3   
   140035590:	sub    rsp,0x28
   140035594:	cmp    DWORD PTR [rip+0x1ff5d],0x11        # 0x1400554f8
   14003559b:	jne    0x1400355b1
   14003559d:	mov    rcx,QWORD PTR [rip+0x1ff4c]        # 0x1400554f0
   1400355a4:	lea    rdx,[rip+0xe62d]        # 0x140043bd8
   1400355ab:	call   QWORD PTR [rip+0x7d0f]        # 0x14003d2c0
   1400355b1:	add    rsp,0x28
   1400355b5:	ret    
   1400355b6:	int3   
   1400355b7:	int3   
   1400355b8:	int3   
   1400355b9:	int3   
   1400355ba:	int3   
   1400355bb:	int3   
   1400355bc:	int3   
   1400355bd:	int3   
   1400355be:	int3   
   1400355bf:	int3   
   1400355c0:	ret    0x0
   1400355c3:	int3   
   1400355c4:	int3   
   1400355c5:	int3   
   1400355c6:	int3   
   1400355c7:	int3   
   1400355c8:	int3   
   1400355c9:	int3   
   1400355ca:	int3   
   1400355cb:	int3   
   1400355cc:	int3   
   1400355cd:	int3   
   1400355ce:	int3   
   1400355cf:	int3   
   1400355d0:	sub    rsp,0x38
   1400355d4:	movups xmm0,XMMWORD PTR [rdx]
   1400355d7:	lea    rdx,[rsp+0x20]
   1400355dc:	movaps XMMWORD PTR [rsp+0x20],xmm0
   1400355e1:	call   0x140034a80
   1400355e6:	cmp    DWORD PTR [rip+0x1d19b],0x0        # 0x140052788
   1400355ed:	je     0x140035627
   1400355ef:	xor    ecx,ecx
   1400355f1:	lea    rax,[rip+0xc9a4]        # 0x140041f9c
   1400355f8:	mov    WORD PTR [rip+0x1edd1],0xf00        # 0x1400543d2
   140035601:	mov    QWORD PTR [rip+0x1edc0],rax        # 0x1400543c8
   140035608:	mov    DWORD PTR [rip+0x1ee32],ecx        # 0x140054440
   14003560e:	mov    BYTE PTR [rip+0x1edac],cl        # 0x1400543c0
   140035614:	mov    BYTE PTR [rip+0x1edb6],cl        # 0x1400543d0
   14003561a:	mov    BYTE PTR [rip+0x1edb3],0x1        # 0x1400543d4
   140035621:	mov    DWORD PTR [rip+0x1d161],ecx        # 0x140052788
   140035627:	add    rsp,0x38
   14003562b:	ret    
   14003562c:	int3   
   14003562d:	int3   
   14003562e:	int3   
   14003562f:	int3   
   140035630:	ret    0x0
   140035633:	int3   
   140035634:	int3   
   140035635:	int3   
   140035636:	int3   
   140035637:	int3   
   140035638:	int3   
   140035639:	int3   
   14003563a:	int3   
   14003563b:	int3   
   14003563c:	int3   
   14003563d:	int3   
   14003563e:	int3   
   14003563f:	int3   
   140035640:	sub    rsp,0x58
   140035644:	mov    r8,QWORD PTR [rip+0x1ee1d]        # 0x140054468
   14003564b:	test   r8,r8
   14003564e:	je     0x14003569c
   140035650:	movups xmm0,XMMWORD PTR [rip+0x1ee01]        # 0x140054458
   140035657:	movups xmm1,XMMWORD PTR [rip+0x1edea]        # 0x140054448
   14003565e:	mov    r9,QWORD PTR [rip+0x1ee0b]        # 0x140054470
   140035665:	lea    rax,[rip+0x7dac]        # 0x14003d418
   14003566c:	lea    rdx,[rsp+0x30]
   140035671:	lea    rcx,[rsp+0x40]
   140035676:	movaps XMMWORD PTR [rsp+0x30],xmm0
   14003567b:	movaps XMMWORD PTR [rsp+0x40],xmm1
   140035680:	mov    QWORD PTR [rsp+0x20],rax
   140035685:	call   0x1400357c0
   14003568a:	mov    rcx,QWORD PTR [rip+0x1edd7]        # 0x140054468
   140035691:	add    rsp,0x58
   140035695:	rex.W jmp QWORD PTR [rip+0x7c04]        # 0x14003d2a0
   14003569c:	add    rsp,0x58
   1400356a0:	ret    
   1400356a1:	int3   
   1400356a2:	int3   
   1400356a3:	int3   
   1400356a4:	int3   
   1400356a5:	int3   
   1400356a6:	int3   
   1400356a7:	int3   
   1400356a8:	int3   
   1400356a9:	int3   
   1400356aa:	int3   
   1400356ab:	int3   
   1400356ac:	int3   
   1400356ad:	int3   
   1400356ae:	int3   
   1400356af:	int3   
   1400356b0:	lea    rax,[rip+0xc8e5]        # 0x140041f9c
   1400356b7:	mov    DWORD PTR [rip+0x1ed7f],0x0        # 0x140054440
   1400356c1:	mov    BYTE PTR [rip+0x1ecf8],0x0        # 0x1400543c0
   1400356c8:	mov    BYTE PTR [rip+0x1ed01],0x0        # 0x1400543d0
   1400356cf:	mov    WORD PTR [rip+0x1ecfa],0xf00        # 0x1400543d2
   1400356d8:	mov    BYTE PTR [rip+0x1ecf5],0x1        # 0x1400543d4
   1400356df:	mov    QWORD PTR [rip+0x1ece2],rax        # 0x1400543c8
   1400356e6:	ret    
   1400356e7:	int3   
   1400356e8:	int3   
   1400356e9:	int3   
   1400356ea:	int3   
   1400356eb:	int3   
   1400356ec:	int3   
   1400356ed:	int3   
   1400356ee:	int3   
   1400356ef:	int3   
   1400356f0:	ret    0x0
   1400356f3:	int3   
   1400356f4:	int3   
   1400356f5:	int3   
   1400356f6:	int3   
   1400356f7:	int3   
   1400356f8:	int3   
   1400356f9:	int3   
   1400356fa:	int3   
   1400356fb:	int3   
   1400356fc:	int3   
   1400356fd:	int3   
   1400356fe:	int3   
   1400356ff:	int3   
   140035700:	ret    0x0
   140035703:	int3   
   140035704:	int3   
   140035705:	int3   
   140035706:	int3   
   140035707:	int3   
   140035708:	int3   
   140035709:	int3   
   14003570a:	int3   
   14003570b:	int3   
   14003570c:	int3   
   14003570d:	int3   
   14003570e:	int3   
   14003570f:	int3   
   140035710:	mov    rax,rsp
   140035713:	sub    rsp,0x68
   140035717:	movsd  xmm2,QWORD PTR [rip+0x7e31]        # 0x14003d550
   14003571f:	movsd  xmm1,QWORD PTR [rcx+0x8]
   140035724:	movsd  xmm3,QWORD PTR [rcx]
   140035728:	mov    QWORD PTR [rax-0x48],r9
   14003572c:	mov    r9,r8
   14003572f:	mov    r8,rdx
   140035732:	lea    rdx,[rax-0x18]
   140035736:	lea    rcx,[rax-0x38]
   14003573a:	movaps xmm0,xmm3
   14003573d:	addsd  xmm3,xmm2
   140035741:	subsd  xmm0,xmm2
   140035745:	movsd  QWORD PTR [rax-0x38],xmm3
   14003574a:	movsd  QWORD PTR [rax-0x28],xmm0
   14003574f:	movaps xmm0,xmm1
   140035752:	addsd  xmm1,xmm2
   140035756:	movsd  QWORD PTR [rax-0x30],xmm1
   14003575b:	movss  xmm1,DWORD PTR [rax-0x34]
   140035760:	subsd  xmm0,xmm2
   140035764:	movsd  QWORD PTR [rax-0x20],xmm0
   140035769:	movss  xmm0,DWORD PTR [rax-0x38]
   14003576e:	movss  DWORD PTR [rax-0x14],xmm1
   140035773:	movss  xmm1,DWORD PTR [rax-0x2c]
   140035778:	movss  DWORD PTR [rax-0x18],xmm0
   14003577d:	movss  xmm0,DWORD PTR [rax-0x30]
   140035782:	movss  DWORD PTR [rax-0x10],xmm0
   140035787:	movss  xmm0,DWORD PTR [rax-0x28]
   14003578c:	movss  DWORD PTR [rax-0xc],xmm1
   140035791:	movss  xmm1,DWORD PTR [rax-0x24]
   140035796:	movss  DWORD PTR [rax-0x38],xmm0
   14003579b:	movss  xmm0,DWORD PTR [rax-0x20]
   1400357a0:	movss  DWORD PTR [rax-0x34],xmm1
   1400357a5:	movss  xmm1,DWORD PTR [rax-0x1c]
   1400357aa:	movss  DWORD PTR [rax-0x30],xmm0
   1400357af:	movss  DWORD PTR [rax-0x2c],xmm1
   1400357b4:	call   0x1400357c0
   1400357b9:	add    rsp,0x68
   1400357bd:	ret    
   1400357be:	int3   
   1400357bf:	int3   
   1400357c0:	test   r8,r8
   1400357c3:	je     0x140035bc6
   1400357c9:	mov    rax,rsp
   1400357cc:	mov    QWORD PTR [rax+0x18],rbx
   1400357d0:	mov    QWORD PTR [rax+0x20],rsi
   1400357d4:	push   rdi
   1400357d5:	sub    rsp,0xb0
   1400357dc:	cmp    BYTE PTR [r8],0x0
   1400357e0:	mov    rdi,r9
   1400357e3:	mov    rbx,r8
   1400357e6:	mov    rsi,rdx
   1400357e9:	je     0x140035bb2
   1400357ef:	mov    r10d,DWORD PTR [rip+0x1fd02]        # 0x1400554f8
   1400357f6:	movups xmm0,XMMWORD PTR [rcx]
   1400357f9:	movaps XMMWORD PTR [rax-0x18],xmm6
   1400357fd:	movaps XMMWORD PTR [rax-0x28],xmm7
   140035801:	movaps XMMWORD PTR [rax-0x38],xmm8
   140035806:	movaps XMMWORD PTR [rax-0x48],xmm9
   14003580b:	lea    eax,[r10-0x10]
   14003580f:	cmp    eax,0x2
   140035812:	jbe    0x14003581e
   140035814:	movups XMMWORD PTR [rsp+0x40],xmm0
   140035819:	movups xmm0,XMMWORD PTR [rdx]
   14003581c:	jmp    0x14003585b
   14003581e:	lea    rdx,[rsp+0x50]
   140035823:	lea    rcx,[rsp+0x40]
   140035828:	movaps XMMWORD PTR [rsp+0x50],xmm0
   14003582d:	call   0x140034af0
   140035832:	lea    rdx,[rsp+0x50]
   140035837:	lea    rcx,[rsp+0x60]
   14003583c:	movups xmm0,XMMWORD PTR [rax]
   14003583f:	movups XMMWORD PTR [rsp+0x40],xmm0
   140035844:	movups xmm0,XMMWORD PTR [rsi]
   140035847:	movaps XMMWORD PTR [rsp+0x50],xmm0
   14003584c:	call   0x140034af0
   140035851:	mov    r10d,DWORD PTR [rip+0x1fca0]        # 0x1400554f8
   140035858:	movups xmm0,XMMWORD PTR [rax]
   14003585b:	movsd  xmm8,QWORD PTR [rsp+0x40]
   140035862:	movups XMMWORD PTR [rsp+0x50],xmm0
   140035867:	movsd  xmm7,QWORD PTR [rsp+0x50]
   14003586d:	comisd xmm8,xmm7
   140035872:	jbe    0x14003587f
   140035874:	movaps xmm0,xmm7
   140035877:	movaps xmm7,xmm8
   14003587b:	movaps xmm8,xmm0
   14003587f:	movsd  xmm9,QWORD PTR [rsp+0x48]
   140035886:	movsd  xmm6,QWORD PTR [rsp+0x58]
   14003588c:	comisd xmm9,xmm6
   140035891:	jbe    0x14003589e
   140035893:	movaps xmm0,xmm6
   140035896:	movaps xmm6,xmm9
   14003589a:	movaps xmm9,xmm0
   14003589e:	cmp    r10d,0x11
   1400358a2:	jne    0x140035933
   1400358a8:	movsd  xmm0,QWORD PTR [rip+0x7b28]        # 0x14003d3d8
   1400358b0:	xorps  xmm1,xmm1
   1400358b3:	comisd xmm6,xmm1
   1400358b7:	jb     0x1400358bf
   1400358b9:	addsd  xmm6,xmm0
   1400358bd:	jmp    0x1400358c3
   1400358bf:	subsd  xmm6,xmm0
   1400358c3:	comisd xmm7,xmm1
   1400358c7:	cvttsd2si edx,xmm6
   1400358cb:	jb     0x1400358d3
   1400358cd:	addsd  xmm7,xmm0
   1400358d1:	jmp    0x1400358d7
   1400358d3:	subsd  xmm7,xmm0
   1400358d7:	comisd xmm9,xmm1
   1400358dc:	cvttsd2si ecx,xmm7
   1400358e0:	jb     0x1400358e9
   1400358e2:	addsd  xmm9,xmm0
   1400358e7:	jmp    0x1400358ee
   1400358e9:	subsd  xmm9,xmm0
   1400358ee:	comisd xmm8,xmm1
   1400358f3:	cvttsd2si eax,xmm9
   1400358f8:	jb     0x140035901
   1400358fa:	addsd  xmm8,xmm0
   1400358ff:	jmp    0x140035906
   140035901:	subsd  xmm8,xmm0
   140035906:	mov    DWORD PTR [rsp+0x30],edx
   14003590a:	mov    DWORD PTR [rsp+0x28],ecx
   14003590e:	mov    rcx,QWORD PTR [rip+0x1fbdb]        # 0x1400554f0
   140035915:	cvttsd2si r9d,xmm8
   14003591a:	lea    rdx,[rip+0xe19f]        # 0x140043ac0
   140035921:	mov    r8,rbx
   140035924:	mov    DWORD PTR [rsp+0x20],eax
   140035928:	call   QWORD PTR [rip+0x7992]        # 0x14003d2c0
   14003592e:	jmp    0x140035b93
   140035933:	cmp    r10d,0x10
   140035937:	jne    0x1400359cb
   14003593d:	movsd  xmm0,QWORD PTR [rip+0x7a93]        # 0x14003d3d8
   140035945:	xorps  xmm1,xmm1
   140035948:	comisd xmm6,xmm1
   14003594c:	jb     0x140035954
   14003594e:	addsd  xmm6,xmm0
   140035952:	jmp    0x140035958
   140035954:	subsd  xmm6,xmm0
   140035958:	comisd xmm7,xmm1
   14003595c:	cvttsd2si ecx,xmm6
   140035960:	jb     0x140035968
   140035962:	addsd  xmm7,xmm0
   140035966:	jmp    0x14003596c
   140035968:	subsd  xmm7,xmm0
   14003596c:	comisd xmm9,xmm1
   140035971:	cvttsd2si eax,xmm7
   140035975:	jb     0x14003597e
   140035977:	addsd  xmm9,xmm0
   14003597c:	jmp    0x140035983
   14003597e:	subsd  xmm9,xmm0
   140035983:	comisd xmm8,xmm1
   140035988:	cvttsd2si r9d,xmm9
   14003598d:	jb     0x140035996
   14003598f:	addsd  xmm8,xmm0
   140035994:	jmp    0x14003599b
   140035996:	subsd  xmm8,xmm0
   14003599b:	mov    QWORD PTR [rsp+0x38],rdi
   1400359a0:	mov    QWORD PTR [rsp+0x30],rbx
   1400359a5:	mov    DWORD PTR [rsp+0x28],ecx
   1400359a9:	cvttsd2si r8d,xmm8
   1400359ae:	mov    rcx,QWORD PTR [rip+0x1fb3b]        # 0x1400554f0
   1400359b5:	lea    rdx,[rip+0xe11c]        # 0x140043ad8
   1400359bc:	mov    DWORD PTR [rsp+0x20],eax
   1400359c0:	call   QWORD PTR [rip+0x78fa]        # 0x14003d2c0
   1400359c6:	jmp    0x140035b93
   1400359cb:	cmp    r10d,0x12
   1400359cf:	jne    0x140035acf
   1400359d5:	mov    rcx,rbx
   1400359d8:	call   0x14001d160
   1400359dd:	mov    rcx,QWORD PTR [rip+0x1fb0c]        # 0x1400554f0
   1400359e4:	lea    rdx,[rip+0xe115]        # 0x140043b00
   1400359eb:	mov    r8,rax
   1400359ee:	call   QWORD PTR [rip+0x78cc]        # 0x14003d2c0
   1400359f4:	mov    rcx,QWORD PTR [rsp+0xe0]
   1400359fc:	test   rcx,rcx
   1400359ff:	je     0x140035a22
   140035a01:	cmp    BYTE PTR [rcx],0x0
   140035a04:	je     0x140035a22
   140035a06:	call   0x14001d160
   140035a0b:	mov    rcx,QWORD PTR [rip+0x1fade]        # 0x1400554f0
   140035a12:	lea    rdx,[rip+0xe107]        # 0x140043b20
   140035a19:	mov    r8,rax
   140035a1c:	call   QWORD PTR [rip+0x789e]        # 0x14003d2c0
   140035a22:	test   rdi,rdi
   140035a25:	je     0x140035a4b
   140035a27:	cmp    BYTE PTR [rdi],0x0
   140035a2a:	je     0x140035a4b
   140035a2c:	mov    rcx,rdi
   140035a2f:	call   0x14001d160
   140035a34:	mov    rcx,QWORD PTR [rip+0x1fab5]        # 0x1400554f0
   140035a3b:	lea    rdx,[rip+0xe0ee]        # 0x140043b30
   140035a42:	mov    r8,rax
   140035a45:	call   QWORD PTR [rip+0x7875]        # 0x14003d2c0
   140035a4b:	movsd  xmm0,QWORD PTR [rip+0x7985]        # 0x14003d3d8
   140035a53:	xorps  xmm1,xmm1
   140035a56:	comisd xmm6,xmm1
   140035a5a:	jb     0x140035a62
   140035a5c:	addsd  xmm6,xmm0
   140035a60:	jmp    0x140035a66
   140035a62:	subsd  xmm6,xmm0
   140035a66:	comisd xmm7,xmm1
   140035a6a:	cvttsd2si ecx,xmm6
   140035a6e:	jb     0x140035a76
   140035a70:	addsd  xmm7,xmm0
   140035a74:	jmp    0x140035a7a
   140035a76:	subsd  xmm7,xmm0
   140035a7a:	comisd xmm9,xmm1
   140035a7f:	cvttsd2si eax,xmm7
   140035a83:	jb     0x140035a8c
   140035a85:	addsd  xmm9,xmm0
   140035a8a:	jmp    0x140035a91
   140035a8c:	subsd  xmm9,xmm0
   140035a91:	comisd xmm8,xmm1
   140035a96:	cvttsd2si r9d,xmm9
   140035a9b:	jb     0x140035aa4
   140035a9d:	addsd  xmm8,xmm0
   140035aa2:	jmp    0x140035aa9
   140035aa4:	subsd  xmm8,xmm0
   140035aa9:	mov    DWORD PTR [rsp+0x28],ecx
   140035aad:	mov    rcx,QWORD PTR [rip+0x1fa3c]        # 0x1400554f0
   140035ab4:	cvttsd2si r8d,xmm8
   140035ab9:	lea    rdx,[rip+0xe080]        # 0x140043b40
   140035ac0:	mov    DWORD PTR [rsp+0x20],eax
   140035ac4:	call   QWORD PTR [rip+0x77f6]        # 0x14003d2c0
   140035aca:	jmp    0x140035b93
   140035acf:	cmp    r10d,0x1
   140035ad3:	je     0x140035adf
   140035ad5:	cmp    r10d,0x1a
   140035ad9:	jne    0x140035b93
   140035adf:	movsd  xmm0,QWORD PTR [rip+0x78f1]        # 0x14003d3d8
   140035ae7:	xorps  xmm1,xmm1
   140035aea:	mov    QWORD PTR [rsp+0xc0],rbp
   140035af2:	comisd xmm6,xmm1
   140035af6:	mov    QWORD PTR [rsp+0xc8],r14
   140035afe:	jb     0x140035b06
   140035b00:	addsd  xmm6,xmm0
   140035b04:	jmp    0x140035b0a
   140035b06:	subsd  xmm6,xmm0
   140035b0a:	comisd xmm7,xmm1
   140035b0e:	cvttsd2si r14d,xmm6
   140035b13:	jb     0x140035b1b
   140035b15:	addsd  xmm7,xmm0
   140035b19:	jmp    0x140035b1f
   140035b1b:	subsd  xmm7,xmm0
   140035b1f:	comisd xmm9,xmm1
   140035b24:	cvttsd2si ebp,xmm7
   140035b28:	jb     0x140035b31
   140035b2a:	addsd  xmm9,xmm0
   140035b2f:	jmp    0x140035b36
   140035b31:	subsd  xmm9,xmm0
   140035b36:	comisd xmm8,xmm1
   140035b3b:	cvttsd2si esi,xmm9
   140035b40:	jb     0x140035b49
   140035b42:	addsd  xmm8,xmm0
   140035b47:	jmp    0x140035b4e
   140035b49:	subsd  xmm8,xmm0
   140035b4e:	mov    rcx,rbx
   140035b51:	cvttsd2si edi,xmm8
   140035b56:	call   0x14002f100
   140035b5b:	mov    rcx,QWORD PTR [rip+0x1f98e]        # 0x1400554f0
   140035b62:	lea    rdx,[rip+0xdff7]        # 0x140043b60
   140035b69:	mov    QWORD PTR [rsp+0x30],rax
   140035b6e:	mov    r9d,esi
   140035b71:	mov    r8d,edi
   140035b74:	mov    DWORD PTR [rsp+0x28],r14d
   140035b79:	mov    DWORD PTR [rsp+0x20],ebp
   140035b7d:	call   QWORD PTR [rip+0x773d]        # 0x14003d2c0
   140035b83:	mov    r14,QWORD PTR [rsp+0xc8]
   140035b8b:	mov    rbp,QWORD PTR [rsp+0xc0]
   140035b93:	movaps xmm8,XMMWORD PTR [rsp+0x80]
   140035b9c:	movaps xmm7,XMMWORD PTR [rsp+0x90]
   140035ba4:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
   140035bac:	movaps xmm9,XMMWORD PTR [rsp+0x70]
   140035bb2:	lea    r11,[rsp+0xb0]
   140035bba:	mov    rbx,QWORD PTR [r11+0x20]
   140035bbe:	mov    rsi,QWORD PTR [r11+0x28]
   140035bc2:	mov    rsp,r11
   140035bc5:	pop    rdi
   140035bc6:	ret    
   140035bc7:	int3   
   140035bc8:	int3   
   140035bc9:	int3   
   140035bca:	int3   
   140035bcb:	int3   
   140035bcc:	int3   
   140035bcd:	int3   
   140035bce:	int3   
   140035bcf:	int3   
   140035bd0:	ret    0x0
   140035bd3:	int3   
   140035bd4:	int3   
   140035bd5:	int3   
   140035bd6:	int3   
   140035bd7:	int3   
   140035bd8:	int3   
   140035bd9:	int3   
   140035bda:	int3   
   140035bdb:	int3   
   140035bdc:	int3   
   140035bdd:	int3   
   140035bde:	int3   
   140035bdf:	int3   
   140035be0:	ret    0x0
   140035be3:	int3   
   140035be4:	int3   
   140035be5:	int3   
   140035be6:	int3   
   140035be7:	int3   
   140035be8:	int3   
   140035be9:	int3   
   140035bea:	int3   
   140035beb:	int3   
   140035bec:	int3   
   140035bed:	int3   
   140035bee:	int3   
   140035bef:	int3   
   140035bf0:	ret    0x0
   140035bf3:	int3   
   140035bf4:	int3   
   140035bf5:	int3   
   140035bf6:	int3   
   140035bf7:	int3   
   140035bf8:	int3   
   140035bf9:	int3   
   140035bfa:	int3   
   140035bfb:	int3   
   140035bfc:	int3   
   140035bfd:	int3   
   140035bfe:	int3   
   140035bff:	int3   
   140035c00:	ret    0x0
   140035c03:	int3   
   140035c04:	int3   
   140035c05:	int3   
   140035c06:	int3   
   140035c07:	int3   
   140035c08:	int3   
   140035c09:	int3   
   140035c0a:	int3   
   140035c0b:	int3   
   140035c0c:	int3   
   140035c0d:	int3   
   140035c0e:	int3   
   140035c0f:	int3   
   140035c10:	ret    0x0
   140035c13:	int3   
   140035c14:	int3   
   140035c15:	int3   
   140035c16:	int3   
   140035c17:	int3   
   140035c18:	int3   
   140035c19:	int3   
   140035c1a:	int3   
   140035c1b:	int3   
   140035c1c:	int3   
   140035c1d:	int3   
   140035c1e:	int3   
   140035c1f:	int3   
   140035c20:	ret    0x0
   140035c23:	int3   
   140035c24:	int3   
   140035c25:	int3   
   140035c26:	int3   
   140035c27:	int3   
   140035c28:	int3   
   140035c29:	int3   
   140035c2a:	int3   
   140035c2b:	int3   
   140035c2c:	int3   
   140035c2d:	int3   
   140035c2e:	int3   
   140035c2f:	int3   
   140035c30:	ret    0x0
   140035c33:	int3   
   140035c34:	int3   
   140035c35:	int3   
   140035c36:	int3   
   140035c37:	int3   
   140035c38:	int3   
   140035c39:	int3   
   140035c3a:	int3   
   140035c3b:	int3   
   140035c3c:	int3   
   140035c3d:	int3   
   140035c3e:	int3   
   140035c3f:	int3   
   140035c40:	ret    0x0
   140035c43:	int3   
   140035c44:	int3   
   140035c45:	int3   
   140035c46:	int3   
   140035c47:	int3   
   140035c48:	int3   
   140035c49:	int3   
   140035c4a:	int3   
   140035c4b:	int3   
   140035c4c:	int3   
   140035c4d:	int3   
   140035c4e:	int3   
   140035c4f:	int3   
   140035c50:	ret    0x0
   140035c53:	int3   
   140035c54:	int3   
   140035c55:	int3   
   140035c56:	int3   
   140035c57:	int3   
   140035c58:	int3   
   140035c59:	int3   
   140035c5a:	int3   
   140035c5b:	int3   
   140035c5c:	int3   
   140035c5d:	int3   
   140035c5e:	int3   
   140035c5f:	int3   
   140035c60:	ret    0x0
   140035c63:	int3   
   140035c64:	int3   
   140035c65:	int3   
   140035c66:	int3   
   140035c67:	int3   
   140035c68:	int3   
   140035c69:	int3   
   140035c6a:	int3   
   140035c6b:	int3   
   140035c6c:	int3   
   140035c6d:	int3   
   140035c6e:	int3   
   140035c6f:	int3   
   140035c70:	ret    0x0
   140035c73:	int3   
   140035c74:	int3   
   140035c75:	int3   
   140035c76:	int3   
   140035c77:	int3   
   140035c78:	int3   
   140035c79:	int3   
   140035c7a:	int3   
   140035c7b:	int3   
   140035c7c:	int3   
   140035c7d:	int3   
   140035c7e:	int3   
   140035c7f:	int3   
   140035c80:	mov    QWORD PTR [rip+0x1e801],rcx        # 0x140054488
   140035c87:	mov    rcx,QWORD PTR [rip+0x1f862]        # 0x1400554f0
   140035c8e:	lea    rdx,[rip+0xe0db]        # 0x140043d70
   140035c95:	rex.W jmp QWORD PTR [rip+0x7624]        # 0x14003d2c0
   140035c9c:	int3   
   140035c9d:	int3   
   140035c9e:	int3   
   140035c9f:	int3   
   140035ca0:	mov    rcx,QWORD PTR [rip+0x1f849]        # 0x1400554f0
   140035ca7:	lea    rdx,[rip+0xe0ba]        # 0x140043d68
   140035cae:	rex.W jmp QWORD PTR [rip+0x760b]        # 0x14003d2c0
   140035cb5:	int3   
   140035cb6:	int3   
   140035cb7:	int3   
   140035cb8:	int3   
   140035cb9:	int3   
   140035cba:	int3   
   140035cbb:	int3   
   140035cbc:	int3   
   140035cbd:	int3   
   140035cbe:	int3   
   140035cbf:	int3   
   140035cc0:	sub    rsp,0x28
   140035cc4:	mov    edx,DWORD PTR [rip+0x1e7ba]        # 0x140054484
   140035cca:	lea    eax,[rdx+0x1]
   140035ccd:	cmp    eax,0x4
   140035cd0:	jl     0x140035cf2
   140035cd2:	lea    rdx,[rip+0xe0b7]        # 0x140043d90
   140035cd9:	lea    rcx,[rip+0xcb38]        # 0x140042818
   140035ce0:	mov    r8d,0x123
   140035ce6:	call   QWORD PTR [rip+0x73a4]        # 0x14003d090
   140035cec:	mov    edx,DWORD PTR [rip+0x1e792]        # 0x140054484
   140035cf2:	lea    r8,[rip+0x1e797]        # 0x140054490
   140035cf9:	movsxd rax,edx
   140035cfc:	lea    rcx,[rax+rax*4]
   140035d00:	lea    rax,[rax+rax*4]
   140035d04:	add    rcx,rcx
   140035d07:	add    rax,rax
   140035d0a:	inc    edx
   140035d0c:	mov    DWORD PTR [rip+0x1e772],edx        # 0x140054484
   140035d12:	movups xmm0,XMMWORD PTR [r8+rcx*8]
   140035d17:	movups XMMWORD PTR [r8+rax*8+0x50],xmm0
   140035d1d:	movups xmm1,XMMWORD PTR [r8+rcx*8+0x10]
   140035d23:	movups XMMWORD PTR [r8+rax*8+0x60],xmm1
   140035d29:	movups xmm0,XMMWORD PTR [r8+rcx*8+0x20]
   140035d2f:	movups XMMWORD PTR [r8+rax*8+0x70],xmm0
   140035d35:	movups xmm1,XMMWORD PTR [r8+rcx*8+0x30]
   140035d3b:	movups XMMWORD PTR [r8+rax*8+0x80],xmm1
   140035d44:	movups xmm0,XMMWORD PTR [r8+rcx*8+0x40]
   140035d4a:	movups XMMWORD PTR [r8+rax*8+0x90],xmm0
   140035d53:	add    rsp,0x28
   140035d57:	ret    
   140035d58:	int3   
   140035d59:	int3   
   140035d5a:	int3   
   140035d5b:	int3   
   140035d5c:	int3   
   140035d5d:	int3   
   140035d5e:	int3   
   140035d5f:	int3   
   140035d60:	rex push rbx
   140035d62:	sub    rsp,0x20
   140035d66:	mov    eax,DWORD PTR [rip+0x1e718]        # 0x140054484
   140035d6c:	lea    ebx,[rax-0x1]
   140035d6f:	test   eax,eax
   140035d71:	jg     0x140035d8d
   140035d73:	lea    rdx,[rip+0xe016]        # 0x140043d90
   140035d7a:	lea    rcx,[rip+0xcabf]        # 0x140042840
   140035d81:	mov    r8d,0x12c
   140035d87:	call   QWORD PTR [rip+0x7303]        # 0x14003d090
   140035d8d:	mov    DWORD PTR [rip+0x1e6f1],ebx        # 0x140054484
   140035d93:	add    rsp,0x20
   140035d97:	pop    rbx
   140035d98:	ret    
   140035d99:	int3   
   140035d9a:	int3   
   140035d9b:	int3   
   140035d9c:	int3   
   140035d9d:	int3   
   140035d9e:	int3   
   140035d9f:	int3   
   140035da0:	mov    QWORD PTR [rsp+0x8],rbx
   140035da5:	mov    QWORD PTR [rsp+0x10],rsi
   140035daa:	push   rdi
   140035dab:	sub    rsp,0x20
   140035daf:	movsxd rax,DWORD PTR [rip+0x1e6ce]        # 0x140054484
   140035db6:	lea    rbx,[rax+rax*4]
   140035dba:	lea    rax,[rip+0x1e6cf]        # 0x140054490
   140035dc1:	shl    rbx,0x4
   140035dc5:	add    rbx,rax
   140035dc8:	movsd  QWORD PTR [rbx+0x48],xmm1
   140035dcd:	mov    BYTE PTR [rbx+0x21],0x1
   140035dd1:	call   QWORD PTR [rip+0x7509]        # 0x14003d2e0
   140035dd7:	mov    rcx,rax
   140035dda:	mov    edx,0x2d
   140035ddf:	mov    rdi,rax
   140035de2:	call   QWORD PTR [rip+0x7328]        # 0x14003d110
   140035de8:	mov    rsi,rax
   140035deb:	test   rax,rax
   140035dee:	je     0x140035e0b
   140035df0:	lea    rdx,[rip+0xca59]        # 0x140042850
   140035df7:	lea    rcx,[rax+0x1]
   140035dfb:	mov    BYTE PTR [rax],0x0
   140035dfe:	call   0x14001ca70
   140035e03:	test   eax,eax
   140035e05:	jne    0x140035e1f
   140035e07:	mov    BYTE PTR [rbx+0x20],0x2
   140035e0b:	mov    QWORD PTR [rbx+0x18],rdi
   140035e0f:	mov    rbx,QWORD PTR [rsp+0x30]
   140035e14:	mov    rsi,QWORD PTR [rsp+0x38]
   140035e19:	add    rsp,0x20
   140035e1d:	pop    rdi
   140035e1e:	ret    
   140035e1f:	lea    rdx,[rip+0xbf6a]        # 0x140041d90
   140035e26:	lea    rcx,[rsi+0x1]
   140035e2a:	call   0x14001ca70
   140035e2f:	mov    QWORD PTR [rbx+0x18],rdi
   140035e33:	test   eax,eax
   140035e35:	jne    0x140035e0f
   140035e37:	mov    rsi,QWORD PTR [rsp+0x38]
   140035e3c:	mov    BYTE PTR [rbx+0x20],0x1
   140035e40:	mov    rbx,QWORD PTR [rsp+0x30]
   140035e45:	add    rsp,0x20
   140035e49:	pop    rdi
   140035e4a:	ret    
   140035e4b:	int3   
   140035e4c:	int3   
   140035e4d:	int3   
   140035e4e:	int3   
   140035e4f:	int3   
   140035e50:	rex push rbx
   140035e52:	push   rsi
   140035e53:	push   rdi
   140035e54:	sub    rsp,0x30
   140035e58:	movsxd rax,DWORD PTR [rip+0x1e625]        # 0x140054484
   140035e5f:	mov    rbx,QWORD PTR [rcx]
   140035e62:	mov    rsi,rcx
   140035e65:	lea    rdi,[rax+rax*4]
   140035e69:	lea    rax,[rip+0x1e620]        # 0x140054490
   140035e70:	shl    rdi,0x4
   140035e74:	add    rdi,rax
   140035e77:	test   rbx,rbx
   140035e7a:	je     0x140035fe8
   140035e80:	mov    QWORD PTR [rsp+0x50],rbp
   140035e85:	mov    QWORD PTR [rsp+0x58],r12
   140035e8a:	mov    QWORD PTR [rsp+0x60],r13
   140035e8f:	mov    QWORD PTR [rsp+0x28],r14
   140035e94:	mov    QWORD PTR [rsp+0x20],r15
   140035e99:	lea    rbp,[rip+0x865c]        # 0x14003e4fc
   140035ea0:	lea    r15,[rip+0xbee1]        # 0x140041d88
   140035ea7:	lea    r14,[rip+0xbed2]        # 0x140041d80
   140035eae:	lea    r12,[rip+0xbedb]        # 0x140041d90
   140035eb5:	lea    r13,[rip+0x8b78]        # 0x14003ea34
   140035ebc:	lea    rdx,[rip+0x8b5d]        # 0x14003ea20
   140035ec3:	lea    rsi,[rsi+0x8]
   140035ec7:	xor    ecx,ecx
   140035ec9:	nop    DWORD PTR [rax+0x0]
   140035ed0:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140035ed4:	inc    rcx
   140035ed7:	cmp    al,BYTE PTR [rcx+rbp*1-0x1]
   140035edb:	jne    0x140035eec
   140035edd:	cmp    rcx,0x6
   140035ee1:	jne    0x140035ed0
   140035ee3:	mov    BYTE PTR [rdi+0x40],0x0
   140035ee7:	jmp    0x140035fc3
   140035eec:	xor    ecx,ecx
   140035eee:	xchg   ax,ax
   140035ef0:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140035ef4:	inc    rcx
   140035ef7:	cmp    al,BYTE PTR [r14+rcx*1-0x1]
   140035efc:	jne    0x140035f0d
   140035efe:	cmp    rcx,0x7
   140035f02:	jne    0x140035ef0
   140035f04:	mov    BYTE PTR [rdi+0x40],0xb
   140035f08:	jmp    0x140035fc3
   140035f0d:	xor    ecx,ecx
   140035f0f:	nop
   140035f10:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140035f14:	inc    rcx
   140035f17:	cmp    al,BYTE PTR [r15+rcx*1-0x1]
   140035f1c:	jne    0x140035f2d
   140035f1e:	cmp    rcx,0x7
   140035f22:	jne    0x140035f10
   140035f24:	mov    BYTE PTR [rdi+0x40],0x4
   140035f28:	jmp    0x140035fc3
   140035f2d:	xor    ecx,ecx
   140035f2f:	nop
   140035f30:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140035f34:	inc    rcx
   140035f37:	cmp    al,BYTE PTR [r12+rcx*1-0x1]
   140035f3c:	jne    0x140035f4a
   140035f3e:	cmp    rcx,0x5
   140035f42:	jne    0x140035f30
   140035f44:	mov    BYTE PTR [rdi+0x42],0x3
   140035f48:	jmp    0x140035fc3
   140035f4a:	xor    ecx,ecx
   140035f4c:	nop    DWORD PTR [rax+0x0]
   140035f50:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140035f54:	inc    rcx
   140035f57:	cmp    al,BYTE PTR [r13+rcx*1-0x1]
   140035f5c:	jne    0x140035f6a
   140035f5e:	cmp    rcx,0x6
   140035f62:	jne    0x140035f50
   140035f64:	mov    BYTE PTR [rdi+0x40],0xf
   140035f68:	jmp    0x140035fc3
   140035f6a:	xor    ecx,ecx
   140035f6c:	nop    DWORD PTR [rax+0x0]
   140035f70:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140035f74:	inc    rcx
   140035f77:	cmp    al,BYTE PTR [rdx+rcx*1-0x1]
   140035f7b:	jne    0x140035f89
   140035f7d:	cmp    rcx,0x7
   140035f81:	jne    0x140035f70
   140035f83:	mov    BYTE PTR [rdi+0x41],0x0
   140035f87:	jmp    0x140035fc3
   140035f89:	lea    rdx,[rip+0xbe08]        # 0x140041d98
   140035f90:	mov    rcx,rbx
   140035f93:	call   0x14003bc96
   140035f98:	test   eax,eax
   140035f9a:	jne    0x140035fa2
   140035f9c:	mov    BYTE PTR [rdi+0x41],0xf
   140035fa0:	jmp    0x140035fbc
   140035fa2:	call   QWORD PTR [rip+0x7328]        # 0x14003d2d0
   140035fa8:	lea    rdx,[rip+0xde59]        # 0x140043e08
   140035faf:	mov    r8,rbx
   140035fb2:	lea    rcx,[rax+0x60]
   140035fb6:	call   QWORD PTR [rip+0x7304]        # 0x14003d2c0
   140035fbc:	lea    rdx,[rip+0x8a5d]        # 0x14003ea20
   140035fc3:	mov    rbx,QWORD PTR [rsi]
   140035fc6:	test   rbx,rbx
   140035fc9:	jne    0x140035ec3
   140035fcf:	mov    r15,QWORD PTR [rsp+0x20]
   140035fd4:	mov    r14,QWORD PTR [rsp+0x28]
   140035fd9:	mov    r13,QWORD PTR [rsp+0x60]
   140035fde:	mov    r12,QWORD PTR [rsp+0x58]
   140035fe3:	mov    rbp,QWORD PTR [rsp+0x50]
   140035fe8:	add    rsp,0x30
   140035fec:	pop    rdi
   140035fed:	pop    rsi
   140035fee:	pop    rbx
   140035fef:	ret    
   140035ff0:	ret    0x0
   140035ff3:	int3   
   140035ff4:	int3   
   140035ff5:	int3   
   140035ff6:	int3   
   140035ff7:	int3   
   140035ff8:	int3   
   140035ff9:	int3   
   140035ffa:	int3   
   140035ffb:	int3   
   140035ffc:	int3   
   140035ffd:	int3   
   140035ffe:	int3   
   140035fff:	int3   
   140036000:	rex push rbp
   140036002:	push   rbx
   140036003:	push   rsi
   140036004:	push   r12
   140036006:	push   r13
   140036008:	lea    rbp,[rsp-0x37]
   14003600d:	sub    rsp,0x100
   140036014:	cmp    DWORD PTR [rip+0x1f4c5],0x2        # 0x1400554e0
   14003601b:	movsxd r12,edx
   14003601e:	mov    rsi,rcx
   140036021:	je     0x14003603d
   140036023:	lea    rdx,[rip+0xdd66]        # 0x140043d90
   14003602a:	lea    rcx,[rip+0xde0f]        # 0x140043e40
   140036031:	mov    r8d,0x17c
   140036037:	call   QWORD PTR [rip+0x7053]        # 0x14003d090
   14003603d:	movsxd rax,DWORD PTR [rip+0x1e440]        # 0x140054484
   140036044:	lea    rbx,[rip+0x1e445]        # 0x140054490
   14003604b:	lea    r13,[rax+rax*4]
   14003604f:	shl    r13,0x4
   140036053:	add    r13,rbx
   140036056:	cmp    BYTE PTR [r13+0x40],0xf
   14003605b:	je     0x14003645a
   140036061:	mov    rcx,QWORD PTR [rip+0x1e420]        # 0x140054488
   140036068:	mov    rdx,QWORD PTR [rip+0x1f339]        # 0x1400553a8
   14003606f:	movsd  xmm3,QWORD PTR [rip+0xdef1]        # 0x140043f68
   140036077:	mov    rcx,QWORD PTR [rcx+0x18]
   14003607b:	xorps  xmm2,xmm2
   14003607e:	movaps XMMWORD PTR [rsp+0xf0],xmm6
   140036086:	movaps XMMWORD PTR [rsp+0xe0],xmm7
   14003608e:	call   0x14001c2e0
   140036093:	mov    rcx,QWORD PTR [rip+0x1e3ee]        # 0x140054488
   14003609a:	mov    rdx,QWORD PTR [rip+0x1f307]        # 0x1400553a8
   1400360a1:	movsd  xmm3,QWORD PTR [rip+0xdec7]        # 0x140043f70
   1400360a9:	xorps  xmm2,xmm2
   1400360ac:	movaps xmm6,xmm0
   1400360af:	mov    rcx,QWORD PTR [rcx+0x10]
   1400360b3:	call   0x14001c2e0
   1400360b8:	mov    rcx,QWORD PTR [rip+0x1f431]        # 0x1400554f0
   1400360bf:	lea    rdx,[rip+0xdd92]        # 0x140043e58
   1400360c6:	movaps xmm7,xmm0
   1400360c9:	call   QWORD PTR [rip+0x71f1]        # 0x14003d2c0
   1400360cf:	mov    rcx,QWORD PTR [rip+0x1f41a]        # 0x1400554f0
   1400360d6:	lea    rdx,[rip+0xdd9b]        # 0x140043e78
   1400360dd:	call   QWORD PTR [rip+0x71dd]        # 0x14003d2c0
   1400360e3:	movd   xmm1,DWORD PTR [rsi]
   1400360e7:	movd   xmm2,DWORD PTR [rsi+0x4]
   1400360ec:	cvtdq2pd xmm1,xmm1
   1400360f0:	cvtdq2pd xmm2,xmm2
   1400360f4:	movsd  QWORD PTR [rbp-0x19],xmm1
   1400360f9:	movsd  QWORD PTR [rbp-0x11],xmm2
   1400360fe:	cmp    r12d,0x3
   140036102:	jle    0x140036320
   140036108:	mov    QWORD PTR [rsp+0x130],rdi
   140036110:	mov    QWORD PTR [rsp+0x138],r14
   140036118:	mov    QWORD PTR [rsp+0x140],r15
   140036120:	movaps XMMWORD PTR [rsp+0xd0],xmm8
   140036129:	movsd  xmm8,QWORD PTR [rip+0x72a6]        # 0x14003d3d8
   140036132:	movaps XMMWORD PTR [rsp+0xc0],xmm9
   14003613b:	movsd  xmm9,QWORD PTR [rip+0x78dc]        # 0x14003da20
   140036144:	mov    r14d,0x3
   14003614a:	lea    rdi,[rsi+0x10]
   14003614e:	xor    edx,edx
   140036150:	movaps xmm0,XMMWORD PTR [rbp-0x19]
   140036154:	movd   xmm1,DWORD PTR [rdi-0x8]
   140036159:	mov    ebx,edx
   14003615b:	cvtdq2pd xmm1,xmm1
   14003615f:	movaps XMMWORD PTR [rbp-0x49],xmm0
   140036163:	movd   xmm0,DWORD PTR [rdi-0x4]
   140036168:	movsd  QWORD PTR [rbp-0x39],xmm1
   14003616d:	movd   xmm1,DWORD PTR [rdi]
   140036171:	cvtdq2pd xmm0,xmm0
   140036175:	movsd  QWORD PTR [rbp-0x31],xmm0
   14003617a:	movd   xmm0,DWORD PTR [rdi+0x4]
   14003617f:	cvtdq2pd xmm1,xmm1
   140036183:	cvtdq2pd xmm0,xmm0
   140036187:	movsd  QWORD PTR [rbp-0x29],xmm1
   14003618c:	movd   xmm1,DWORD PTR [rdi+0x8]
   140036191:	movsd  QWORD PTR [rbp-0x21],xmm0
   140036196:	cvtdq2pd xmm1,xmm1
   14003619a:	movd   xmm0,DWORD PTR [rdi+0xc]
   14003619f:	cvtdq2pd xmm0,xmm0
   1400361a3:	movsd  QWORD PTR [rbp-0x19],xmm1
   1400361a8:	movsd  QWORD PTR [rbp-0x11],xmm0
   1400361ad:	nop    DWORD PTR [rax]
   1400361b0:	movd   xmm3,ebx
   1400361b4:	mov    QWORD PTR [rsp+0x28],rdx
   1400361b9:	mov    QWORD PTR [rsp+0x20],rdx
   1400361be:	lea    rdx,[rbp-0x49]
   1400361c2:	lea    rcx,[rbp-0x59]
   1400361c6:	mov    r8d,0x3
   1400361cc:	cvtdq2pd xmm3,xmm3
   1400361d0:	divsd  xmm3,xmm9
   1400361d5:	call   0x14001abf0
   1400361da:	ucomisd xmm6,xmm7
   1400361de:	mov    rcx,QWORD PTR [rsi]
   1400361e1:	movups xmm0,XMMWORD PTR [rax]
   1400361e4:	movups xmm2,xmm0
   1400361e7:	movups XMMWORD PTR [rbp-0x69],xmm0
   1400361eb:	movss  xmm0,DWORD PTR [rax+0x4]
   1400361f0:	mov    rax,QWORD PTR [rsi+r12*8-0x8]
   1400361f5:	movaps xmm1,xmm2
   1400361f8:	shufps xmm1,xmm2,0xaa
   1400361fc:	movss  DWORD PTR [rbp-0x79],xmm2
   140036201:	movss  DWORD PTR [rbp-0x75],xmm0
   140036206:	movss  DWORD PTR [rbp-0x71],xmm1
   14003620b:	shufps xmm2,xmm2,0xff
   14003620f:	movss  DWORD PTR [rbp-0x6d],xmm2
   140036214:	jp     0x140036220
   140036216:	jne    0x140036220
   140036218:	movaps xmm2,xmm6
   14003621b:	jmp    0x1400362a0
   140036220:	mov    rdx,QWORD PTR [rip+0x1e261]        # 0x140054488
   140036227:	mov    r9,QWORD PTR [rdx+0x18]
   14003622b:	mov    rdx,QWORD PTR [rdx+0x10]
   14003622f:	mov    r8d,DWORD PTR [rdx+0x128]
   140036236:	cmp    DWORD PTR [r9+0x128],r8d
   14003623d:	je     0x140036260
   14003623f:	shr    rax,0x20
   140036243:	shr    rcx,0x20
   140036247:	cmp    eax,ecx
   140036249:	jne    0x140036259
   14003624b:	movaps xmm2,xmm7
   14003624e:	addsd  xmm2,xmm6
   140036252:	mulsd  xmm2,xmm8
   140036257:	jmp    0x1400362a0
   140036259:	movsd  xmm2,QWORD PTR [rbp-0x71]
   14003625e:	jmp    0x140036277
   140036260:	cmp    eax,ecx
   140036262:	jne    0x140036272
   140036264:	movaps xmm2,xmm7
   140036267:	addsd  xmm2,xmm6
   14003626b:	mulsd  xmm2,xmm8
   140036270:	jmp    0x1400362a0
   140036272:	movsd  xmm2,QWORD PTR [rbp-0x79]
   140036277:	movd   xmm0,ecx
   14003627b:	sub    eax,ecx
   14003627d:	movaps xmm1,xmm7
   140036280:	subsd  xmm1,xmm6
   140036284:	cvtdq2pd xmm0,xmm0
   140036288:	subsd  xmm2,xmm0
   14003628c:	movd   xmm0,eax
   140036290:	mulsd  xmm2,xmm1
   140036294:	cvtdq2pd xmm0,xmm0
   140036298:	divsd  xmm2,xmm0
   14003629c:	addsd  xmm2,xmm6
   1400362a0:	movsd  xmm3,QWORD PTR [rbp-0x61]
   1400362a5:	mov    rcx,QWORD PTR [rip+0x1f244]        # 0x1400554f0
   1400362ac:	movsd  QWORD PTR [rsp+0x20],xmm2
   1400362b2:	lea    rdx,[rip+0xdbcf]        # 0x140043e88
   1400362b9:	movsd  xmm2,QWORD PTR [rbp-0x69]
   1400362be:	movq   r9,xmm3
   1400362c3:	movq   r8,xmm2
   1400362c8:	call   QWORD PTR [rip+0x6ff2]        # 0x14003d2c0
   1400362ce:	inc    ebx
   1400362d0:	mov    edx,0x0
   1400362d5:	cmp    ebx,0xa
   1400362d8:	jle    0x1400361b0
   1400362de:	add    r14d,0x3
   1400362e2:	add    rdi,0x18
   1400362e6:	cmp    r14d,r12d
   1400362e9:	jl     0x140036150
   1400362ef:	movaps xmm9,XMMWORD PTR [rsp+0xc0]
   1400362f8:	movaps xmm8,XMMWORD PTR [rsp+0xd0]
   140036301:	mov    r15,QWORD PTR [rsp+0x140]
   140036309:	mov    r14,QWORD PTR [rsp+0x138]
   140036311:	mov    rdi,QWORD PTR [rsp+0x130]
   140036319:	lea    rbx,[rip+0x1e170]        # 0x140054490
   140036320:	mov    rcx,QWORD PTR [rip+0x1f1c9]        # 0x1400554f0
   140036327:	lea    rdx,[rip+0xdb6a]        # 0x140043e98
   14003632e:	call   QWORD PTR [rip+0x6f8c]        # 0x14003d2c0
   140036334:	movsx  r8d,BYTE PTR [r13+0x42]
   140036339:	mov    rcx,QWORD PTR [rip+0x1f1b0]        # 0x1400554f0
   140036340:	mov    eax,r8d
   140036343:	lea    rdx,[rip+0xdb56]        # 0x140043ea0
   14003634a:	mov    r9d,r8d
   14003634d:	neg    eax
   14003634f:	mov    DWORD PTR [rsp+0x48],eax
   140036353:	mov    DWORD PTR [rsp+0x40],r8d
   140036358:	mov    DWORD PTR [rsp+0x38],eax
   14003635c:	mov    DWORD PTR [rsp+0x30],eax
   140036360:	mov    DWORD PTR [rsp+0x28],r8d
   140036365:	mov    DWORD PTR [rsp+0x20],eax
   140036369:	call   QWORD PTR [rip+0x6f51]        # 0x14003d2c0
   14003636f:	mov    rcx,QWORD PTR [rip+0x1f17a]        # 0x1400554f0
   140036376:	lea    rdx,[rip+0xaedb]        # 0x140041258
   14003637d:	call   QWORD PTR [rip+0x6f3d]        # 0x14003d2c0
   140036383:	mov    rax,QWORD PTR [rip+0x1e0fe]        # 0x140054488
   14003638a:	mov    rcx,QWORD PTR [rip+0x1f15f]        # 0x1400554f0
   140036391:	mov    r8d,DWORD PTR [rax+0x20]
   140036395:	lea    rdx,[rip+0xdb34]        # 0x140043ed0
   14003639c:	call   QWORD PTR [rip+0x6f1e]        # 0x14003d2c0
   1400363a2:	mov    rcx,QWORD PTR [rip+0x1f147]        # 0x1400554f0
   1400363a9:	lea    rdx,[rip+0xdb48]        # 0x140043ef8
   1400363b0:	call   QWORD PTR [rip+0x6f0a]        # 0x14003d2c0
   1400363b6:	mov    rcx,QWORD PTR [rip+0x1f133]        # 0x1400554f0
   1400363bd:	lea    rdx,[rip+0xdb4c]        # 0x140043f10
   1400363c4:	call   QWORD PTR [rip+0x6ef6]        # 0x14003d2c0
   1400363ca:	movsxd rax,DWORD PTR [rip+0x1e0b3]        # 0x140054484
   1400363d1:	lea    rdx,[rip+0xdb58]        # 0x140043f30
   1400363d8:	lea    rcx,[rax+rax*4]
   1400363dc:	add    rcx,rcx
   1400363df:	movsd  xmm3,QWORD PTR [rbx+rcx*8+0x30]
   1400363e5:	movsd  xmm2,QWORD PTR [rbx+rcx*8+0x28]
   1400363eb:	movsd  xmm0,QWORD PTR [rbx+rcx*8+0x38]
   1400363f1:	mov    rcx,QWORD PTR [rip+0x1f0f8]        # 0x1400554f0
   1400363f8:	movq   r9,xmm3
   1400363fd:	movq   r8,xmm2
   140036402:	movsd  QWORD PTR [rsp+0x20],xmm0
   140036408:	call   QWORD PTR [rip+0x6eb2]        # 0x14003d2c0
   14003640e:	mov    rcx,QWORD PTR [rip+0x1f0db]        # 0x1400554f0
   140036415:	lea    rdx,[rip+0xdb34]        # 0x140043f50
   14003641c:	call   QWORD PTR [rip+0x6e9e]        # 0x14003d2c0
   140036422:	mov    rcx,QWORD PTR [rip+0x1f0c7]        # 0x1400554f0
   140036429:	lea    rdx,[rip+0xdb28]        # 0x140043f58
   140036430:	call   QWORD PTR [rip+0x6e8a]        # 0x14003d2c0
   140036436:	mov    rcx,QWORD PTR [rip+0x1f0b3]        # 0x1400554f0
   14003643d:	lea    rdx,[rip+0xae14]        # 0x140041258
   140036444:	call   QWORD PTR [rip+0x6e76]        # 0x14003d2c0
   14003644a:	movaps xmm7,XMMWORD PTR [rsp+0xe0]
   140036452:	movaps xmm6,XMMWORD PTR [rsp+0xf0]
   14003645a:	add    rsp,0x100
   140036461:	pop    r13
   140036463:	pop    r12
   140036465:	pop    rsi
   140036466:	pop    rbx
   140036467:	pop    rbp
   140036468:	ret    
   140036469:	int3   
   14003646a:	int3   
   14003646b:	int3   
   14003646c:	int3   
   14003646d:	int3   
   14003646e:	int3   
   14003646f:	int3   
   140036470:	ret    0x0
   140036473:	int3   
   140036474:	int3   
   140036475:	int3   
   140036476:	int3   
   140036477:	int3   
   140036478:	int3   
   140036479:	int3   
   14003647a:	int3   
   14003647b:	int3   
   14003647c:	int3   
   14003647d:	int3   
   14003647e:	int3   
   14003647f:	int3   
   140036480:	ret    0x0
   140036483:	int3   
   140036484:	int3   
   140036485:	int3   
   140036486:	int3   
   140036487:	int3   
   140036488:	int3   
   140036489:	int3   
   14003648a:	int3   
   14003648b:	int3   
   14003648c:	int3   
   14003648d:	int3   
   14003648e:	int3   
   14003648f:	int3   
   140036490:	ret    0x0
   140036493:	int3   
   140036494:	int3   
   140036495:	int3   
   140036496:	int3   
   140036497:	int3   
   140036498:	int3   
   140036499:	int3   
   14003649a:	int3   
   14003649b:	int3   
   14003649c:	int3   
   14003649d:	int3   
   14003649e:	int3   
   14003649f:	int3   
   1400364a0:	ret    0x0
   1400364a3:	int3   
   1400364a4:	int3   
   1400364a5:	int3   
   1400364a6:	int3   
   1400364a7:	int3   
   1400364a8:	int3   
   1400364a9:	int3   
   1400364aa:	int3   
   1400364ab:	int3   
   1400364ac:	int3   
   1400364ad:	int3   
   1400364ae:	int3   
   1400364af:	int3   
   1400364b0:	movsxd rax,DWORD PTR [rip+0x1dfcd]        # 0x140054484
   1400364b7:	lea    rdx,[rax+rax*4]
   1400364bb:	lea    rax,[rip+0x1dfd6]        # 0x140054498
   1400364c2:	add    rdx,rdx
   1400364c5:	mov    QWORD PTR [rax+rdx*8],rcx
   1400364c9:	ret    
   1400364ca:	int3   
   1400364cb:	int3   
   1400364cc:	int3   
   1400364cd:	int3   
   1400364ce:	int3   
   1400364cf:	int3   
   1400364d0:	movsxd rax,DWORD PTR [rip+0x1dfad]        # 0x140054484
   1400364d7:	lea    rdx,[rax+rax*4]
   1400364db:	lea    rax,[rip+0x1dfbe]        # 0x1400544a0
   1400364e2:	add    rdx,rdx
   1400364e5:	mov    QWORD PTR [rax+rdx*8],rcx
   1400364e9:	ret    
   1400364ea:	int3   
   1400364eb:	int3   
   1400364ec:	int3   
   1400364ed:	int3   
   1400364ee:	int3   
   1400364ef:	int3   
   1400364f0:	ret    0x0
   1400364f3:	int3   
   1400364f4:	int3   
   1400364f5:	int3   
   1400364f6:	int3   
   1400364f7:	int3   
   1400364f8:	int3   
   1400364f9:	int3   
   1400364fa:	int3   
   1400364fb:	int3   
   1400364fc:	int3   
   1400364fd:	int3   
   1400364fe:	int3   
   1400364ff:	int3   
   140036500:	sub    rsp,0x28
   140036504:	mov    rcx,QWORD PTR [rip+0x1efe5]        # 0x1400554f0
   14003650b:	lea    rdx,[rip+0xd78e]        # 0x140043ca0
   140036512:	call   QWORD PTR [rip+0x6da8]        # 0x14003d2c0
   140036518:	add    rsp,0x28
   14003651c:	ret    
   14003651d:	int3   
   14003651e:	int3   
   14003651f:	int3   
   140036520:	ret    0x0
   140036523:	int3   
   140036524:	int3   
   140036525:	int3   
   140036526:	int3   
   140036527:	int3   
   140036528:	int3   
   140036529:	int3   
   14003652a:	int3   
   14003652b:	int3   
   14003652c:	int3   
   14003652d:	int3   
   14003652e:	int3   
   14003652f:	int3   
   140036530:	rex push rbx
   140036532:	sub    rsp,0x40
   140036536:	mov    rcx,QWORD PTR [rip+0x1efb3]        # 0x1400554f0
   14003653d:	mov    rbx,rdx
   140036540:	lea    rdx,[rip+0xd771]        # 0x140043cb8
   140036547:	movaps XMMWORD PTR [rsp+0x30],xmm6
   14003654c:	mov    DWORD PTR [rip+0x1df2a],0x0        # 0x140054480
   140036556:	call   QWORD PTR [rip+0x6d64]        # 0x14003d2c0
   14003655c:	mov    eax,DWORD PTR [rbx+0xc]
   14003655f:	movsd  xmm6,QWORD PTR [rip+0xd9f9]        # 0x140043f60
   140036567:	add    eax,DWORD PTR [rbx+0x4]
   14003656a:	mov    rcx,QWORD PTR [rip+0x1ef7f]        # 0x1400554f0
   140036571:	lea    rdx,[rip+0xd758]        # 0x140043cd0
   140036578:	movd   xmm3,eax
   14003657c:	mov    eax,DWORD PTR [rbx+0x8]
   14003657f:	add    eax,DWORD PTR [rbx]
   140036581:	cvtdq2pd xmm3,xmm3
   140036585:	mulsd  xmm3,xmm6
   140036589:	mulsd  xmm3,QWORD PTR [rip+0x6e47]        # 0x14003d3d8
   140036591:	movd   xmm2,eax
   140036595:	movq   r9,xmm3
   14003659a:	cvtdq2pd xmm2,xmm2
   14003659e:	mulsd  xmm2,xmm6
   1400365a2:	mulsd  xmm2,QWORD PTR [rip+0x6e2e]        # 0x14003d3d8
   1400365aa:	movq   r8,xmm2
   1400365af:	call   QWORD PTR [rip+0x6d0b]        # 0x14003d2c0
   1400365b5:	mov    rcx,QWORD PTR [rip+0x1ef34]        # 0x1400554f0
   1400365bc:	lea    rdx,[rip+0xd735]        # 0x140043cf8
   1400365c3:	call   QWORD PTR [rip+0x6cf7]        # 0x14003d2c0
   1400365c9:	mov    rcx,QWORD PTR [rip+0x1ef20]        # 0x1400554f0
   1400365d0:	lea    rdx,[rip+0xd731]        # 0x140043d08
   1400365d7:	movaps xmm3,xmm6
   1400365da:	movaps xmm2,xmm6
   1400365dd:	movsd  QWORD PTR [rsp+0x20],xmm6
   1400365e3:	movq   r9,xmm3
   1400365e8:	movq   r8,xmm2
   1400365ed:	call   QWORD PTR [rip+0x6ccd]        # 0x14003d2c0
   1400365f3:	mov    rcx,QWORD PTR [rip+0x1eef6]        # 0x1400554f0
   1400365fa:	lea    rdx,[rip+0xd727]        # 0x140043d28
   140036601:	call   QWORD PTR [rip+0x6cb9]        # 0x14003d2c0
   140036607:	lea    rax,[rip+0xa136]        # 0x140040744
   14003660e:	mov    DWORD PTR [rip+0x1de6c],0x0        # 0x140054484
   140036618:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14003661d:	mov    QWORD PTR [rip+0x1de7c],rax        # 0x1400544a0
   140036624:	lea    rax,[rip+0xd70d]        # 0x140043d38
   14003662b:	mov    BYTE PTR [rip+0x1de7e],0x0        # 0x1400544b0
   140036632:	mov    WORD PTR [rip+0x1de95],0xf00        # 0x1400544d0
   14003663b:	mov    BYTE PTR [rip+0x1de90],0x1        # 0x1400544d2
   140036642:	mov    QWORD PTR [rip+0x1de5f],rax        # 0x1400544a8
   140036649:	add    rsp,0x40
   14003664d:	pop    rbx
   14003664e:	ret    
   14003664f:	int3   
   140036650:	sub    rsp,0x28
   140036654:	cmp    DWORD PTR [rip+0x1de25],0x0        # 0x140054480
   14003665b:	jne    0x140036671
   14003665d:	mov    rcx,QWORD PTR [rip+0x1ee8c]        # 0x1400554f0
   140036664:	lea    rdx,[rip+0xd6d5]        # 0x140043d40
   14003666b:	call   QWORD PTR [rip+0x6c4f]        # 0x14003d2c0
   140036671:	mov    rcx,QWORD PTR [rip+0x1ee78]        # 0x1400554f0
   140036678:	lea    rdx,[rip+0xd6e1]        # 0x140043d60
   14003667f:	call   QWORD PTR [rip+0x6c3b]        # 0x14003d2c0
   140036685:	mov    rcx,QWORD PTR [rip+0x1ee64]        # 0x1400554f0
   14003668c:	lea    rdx,[rip+0xd6d5]        # 0x140043d68
   140036693:	add    rsp,0x28
   140036697:	rex.W jmp QWORD PTR [rip+0x6c22]        # 0x14003d2c0
   14003669e:	int3   
   14003669f:	int3   
   1400366a0:	movsd  xmm4,QWORD PTR [rsp+0x28]
   1400366a6:	movaps xmm3,xmm2
   1400366a9:	mov    r10,rcx
   1400366ac:	ucomisd xmm2,xmm4
   1400366b0:	jp     0x1400366b8
   1400366b2:	je     0x14003675d
   1400366b8:	mov    rax,QWORD PTR [rip+0x1ddc9]        # 0x140054488
   1400366bf:	mov    r8,QWORD PTR [rax+0x18]
   1400366c3:	mov    rax,QWORD PTR [rax+0x10]
   1400366c7:	mov    ecx,DWORD PTR [rax+0x128]
   1400366cd:	cmp    DWORD PTR [r8+0x128],ecx
   1400366d4:	je     0x140036718
   1400366d6:	shr    r9,0x20
   1400366da:	shr    rdx,0x20
   1400366de:	cmp    r9d,edx
   1400366e1:	je     0x14003671d
   1400366e3:	movsd  xmm1,QWORD PTR [r10+0x8]
   1400366e9:	movd   xmm0,edx
   1400366ed:	sub    r9d,edx
   1400366f0:	subsd  xmm4,xmm2
   1400366f4:	cvtdq2pd xmm0,xmm0
   1400366f8:	subsd  xmm1,xmm0
   1400366fc:	movd   xmm0,r9d
   140036701:	mulsd  xmm1,xmm4
   140036705:	cvtdq2pd xmm0,xmm0
   140036709:	divsd  xmm1,xmm0
   14003670d:	addsd  xmm1,xmm2
   140036711:	movaps xmm3,xmm1
   140036714:	movaps xmm0,xmm1
   140036717:	ret    
   140036718:	cmp    r9d,edx
   14003671b:	jne    0x14003672d
   14003671d:	addsd  xmm3,xmm4
   140036721:	mulsd  xmm3,QWORD PTR [rip+0x6caf]        # 0x14003d3d8
   140036729:	movaps xmm0,xmm3
   14003672c:	ret    
   14003672d:	movsd  xmm2,QWORD PTR [r10]
   140036732:	subsd  xmm4,xmm3
   140036736:	movd   xmm0,edx
   14003673a:	sub    r9d,edx
   14003673d:	movd   xmm1,r9d
   140036742:	cvtdq2pd xmm0,xmm0
   140036746:	subsd  xmm2,xmm0
   14003674a:	cvtdq2pd xmm1,xmm1
   14003674e:	mulsd  xmm2,xmm4
   140036752:	divsd  xmm2,xmm1
   140036756:	addsd  xmm2,xmm3
   14003675a:	movaps xmm3,xmm2
   14003675d:	movaps xmm0,xmm3
   140036760:	ret    
   140036761:	int3   
   140036762:	int3   
   140036763:	int3   
   140036764:	int3   
   140036765:	int3   
   140036766:	int3   
   140036767:	int3   
   140036768:	int3   
   140036769:	int3   
   14003676a:	int3   
   14003676b:	int3   
   14003676c:	int3   
   14003676d:	int3   
   14003676e:	int3   
   14003676f:	int3   
   140036770:	ret    0x0
   140036773:	int3   
   140036774:	int3   
   140036775:	int3   
   140036776:	int3   
   140036777:	int3   
   140036778:	int3   
   140036779:	int3   
   14003677a:	int3   
   14003677b:	int3   
   14003677c:	int3   
   14003677d:	int3   
   14003677e:	int3   
   14003677f:	int3   
   140036780:	mov    DWORD PTR [rip+0x1c3c6],0x1        # 0x140052b50
   14003678a:	ret    
   14003678b:	int3   
   14003678c:	int3   
   14003678d:	int3   
   14003678e:	int3   
   14003678f:	int3   
   140036790:	sub    rsp,0x28
   140036794:	lea    r8,[rip+0x6c7d]        # 0x14003d418
   14003679b:	call   0x14001c3e0
   1400367a0:	cmp    BYTE PTR [rax],0x0
   1400367a3:	je     0x1400367c1
   1400367a5:	mov    rcx,QWORD PTR [rip+0x1ed44]        # 0x1400554f0
   1400367ac:	lea    rdx,[rip+0xd85d]        # 0x140044010
   1400367b3:	mov    r8,rax
   1400367b6:	add    rsp,0x28
   1400367ba:	rex.W jmp QWORD PTR [rip+0x6aff]        # 0x14003d2c0
   1400367c1:	add    rsp,0x28
   1400367c5:	ret    
   1400367c6:	int3   
   1400367c7:	int3   
   1400367c8:	int3   
   1400367c9:	int3   
   1400367ca:	int3   
   1400367cb:	int3   
   1400367cc:	int3   
   1400367cd:	int3   
   1400367ce:	int3   
   1400367cf:	int3   
   1400367d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400367d5:	push   rdi
   1400367d6:	sub    rsp,0x40
   1400367da:	lea    rcx,[rsp+0x30]
   1400367df:	call   QWORD PTR [rip+0x68e3]        # 0x14003d0c8
   1400367e5:	lea    rcx,[rsp+0x30]
   1400367ea:	call   QWORD PTR [rip+0x69f0]        # 0x14003d1e0
   1400367f0:	mov    ecx,0xc8
   1400367f5:	mov    rbx,rax
   1400367f8:	call   QWORD PTR [rip+0x696a]        # 0x14003d168
   1400367fe:	lea    r8,[rip+0xd813]        # 0x140044018
   140036805:	mov    r9,rbx
   140036808:	mov    edx,0xc8
   14003680d:	mov    rcx,rax
   140036810:	mov    rdi,rax
   140036813:	call   QWORD PTR [rip+0x69bf]        # 0x14003d1d8
   140036819:	mov    rcx,QWORD PTR [rsp+0x78]
   14003681e:	mov    r8,QWORD PTR [rsp+0x70]
   140036823:	mov    QWORD PTR [rip+0x1ddb6],rcx        # 0x1400545e0
   14003682a:	mov    QWORD PTR [rsp+0x28],rdi
   14003682f:	mov    rcx,QWORD PTR [r8+0x10]
   140036833:	mov    r9,QWORD PTR [r8+0x8]
   140036837:	mov    r8,QWORD PTR [r8]
   14003683a:	mov    QWORD PTR [rsp+0x20],rcx
   14003683f:	mov    rcx,QWORD PTR [rip+0x1ecaa]        # 0x1400554f0
   140036846:	lea    rdx,[rip+0xd7e3]        # 0x140044030
   14003684d:	call   QWORD PTR [rip+0x6a6d]        # 0x14003d2c0
   140036853:	mov    rcx,rdi
   140036856:	call   QWORD PTR [rip+0x6a44]        # 0x14003d2a0
   14003685c:	mov    rbx,QWORD PTR [rsp+0x50]
   140036861:	add    rsp,0x40
   140036865:	pop    rdi
   140036866:	ret    
   140036867:	int3   
   140036868:	int3   
   140036869:	int3   
   14003686a:	int3   
   14003686b:	int3   
   14003686c:	int3   
   14003686d:	int3   
   14003686e:	int3   
   14003686f:	int3   
   140036870:	ret    0x0
   140036873:	int3   
   140036874:	int3   
   140036875:	int3   
   140036876:	int3   
   140036877:	int3   
   140036878:	int3   
   140036879:	int3   
   14003687a:	int3   
   14003687b:	int3   
   14003687c:	int3   
   14003687d:	int3   
   14003687e:	int3   
   14003687f:	int3   
   140036880:	rex push rbx
   140036882:	sub    rsp,0x20
   140036886:	cmp    DWORD PTR [rip+0x1c2c3],0x0        # 0x140052b50
   14003688d:	mov    rbx,rcx
   140036890:	je     0x14003691a
   140036896:	lea    rax,[rip+0xb6ff]        # 0x140041f9c
   14003689d:	mov    QWORD PTR [rsp+0x30],rdi
   1400368a2:	xor    edi,edi
   1400368a4:	lea    rdx,[rip+0x7de5]        # 0x14003e690
   1400368ab:	mov    WORD PTR [rip+0x1dd56],0x1        # 0x14005460a
   1400368b4:	mov    BYTE PTR [rip+0x1dd51],0x1        # 0x14005460c
   1400368bb:	mov    QWORD PTR [rip+0x1dd3e],rax        # 0x140054600
   1400368c2:	mov    DWORD PTR [rip+0x1ddc8],edi        # 0x140054690
   1400368c8:	mov    QWORD PTR [rip+0x1dd25],rdi        # 0x1400545f4
   1400368cf:	mov    DWORD PTR [rip+0x1dd1b],edi        # 0x1400545f0
   1400368d5:	mov    BYTE PTR [rip+0x1dd2c],dil        # 0x140054608
   1400368dc:	call   0x140027500
   1400368e1:	lea    r8,[rip+0x6b30]        # 0x14003d418
   1400368e8:	mov    rcx,rbx
   1400368eb:	mov    rdx,rax
   1400368ee:	call   0x14001c3e0
   1400368f3:	cmp    BYTE PTR [rax],dil
   1400368f6:	je     0x14003690f
   1400368f8:	mov    rcx,QWORD PTR [rip+0x1ebf1]        # 0x1400554f0
   1400368ff:	lea    rdx,[rip+0xd70a]        # 0x140044010
   140036906:	mov    r8,rax
   140036909:	call   QWORD PTR [rip+0x69b1]        # 0x14003d2c0
   14003690f:	mov    DWORD PTR [rip+0x1c23b],edi        # 0x140052b50
   140036915:	mov    rdi,QWORD PTR [rsp+0x30]
   14003691a:	add    rsp,0x20
   14003691e:	pop    rbx
   14003691f:	ret    
   140036920:	ret    0x0
   140036923:	int3   
   140036924:	int3   
   140036925:	int3   
   140036926:	int3   
   140036927:	int3   
   140036928:	int3   
   140036929:	int3   
   14003692a:	int3   
   14003692b:	int3   
   14003692c:	int3   
   14003692d:	int3   
   14003692e:	int3   
   14003692f:	int3   
   140036930:	sub    rsp,0x38
   140036934:	mov    rax,QWORD PTR [rip+0x1dca5]        # 0x1400545e0
   14003693b:	mov    rcx,rdx
   14003693e:	mov    DWORD PTR [rip+0x1dc97],r9d        # 0x1400545dc
   140036945:	movaps xmm0,xmm2
   140036948:	movsd  QWORD PTR [rsp+0x28],xmm2
   14003694e:	movsd  QWORD PTR [rip+0x1dc92],xmm2        # 0x1400545e8
   140036956:	mov    r9d,DWORD PTR [rip+0x1dc87]        # 0x1400545e4
   14003695d:	shr    rcx,0x20
   140036961:	lea    r8d,[rdx+0x1]
   140036965:	mulsd  xmm0,QWORD PTR [rip+0xde0b]        # 0x140044778
   14003696d:	movsd  QWORD PTR [rsp+0x20],xmm0
   140036973:	imul   ecx,eax
   140036976:	add    r8d,ecx
   140036979:	mov    rcx,QWORD PTR [rip+0x1eb70]        # 0x1400554f0
   140036980:	imul   r9d,eax
   140036984:	lea    rdx,[rip+0xd725]        # 0x1400440b0
   14003698b:	call   QWORD PTR [rip+0x692f]        # 0x14003d2c0
   140036991:	add    rsp,0x38
   140036995:	ret    
   140036996:	int3   
   140036997:	int3   
   140036998:	int3   
   140036999:	int3   
   14003699a:	int3   
   14003699b:	int3   
   14003699c:	int3   
   14003699d:	int3   
   14003699e:	int3   
   14003699f:	int3   
   1400369a0:	ret    0x0
   1400369a3:	int3   
   1400369a4:	int3   
   1400369a5:	int3   
   1400369a6:	int3   
   1400369a7:	int3   
   1400369a8:	int3   
   1400369a9:	int3   
   1400369aa:	int3   
   1400369ab:	int3   
   1400369ac:	int3   
   1400369ad:	int3   
   1400369ae:	int3   
   1400369af:	int3   
   1400369b0:	ret    0x0
   1400369b3:	int3   
   1400369b4:	int3   
   1400369b5:	int3   
   1400369b6:	int3   
   1400369b7:	int3   
   1400369b8:	int3   
   1400369b9:	int3   
   1400369ba:	int3   
   1400369bb:	int3   
   1400369bc:	int3   
   1400369bd:	int3   
   1400369be:	int3   
   1400369bf:	int3   
   1400369c0:	ret    0x0
   1400369c3:	int3   
   1400369c4:	int3   
   1400369c5:	int3   
   1400369c6:	int3   
   1400369c7:	int3   
   1400369c8:	int3   
   1400369c9:	int3   
   1400369ca:	int3   
   1400369cb:	int3   
   1400369cc:	int3   
   1400369cd:	int3   
   1400369ce:	int3   
   1400369cf:	int3   
   1400369d0:	mov    rcx,QWORD PTR [rip+0x1eb19]        # 0x1400554f0
   1400369d7:	lea    rdx,[rip+0xd872]        # 0x140044250
   1400369de:	rex.W jmp QWORD PTR [rip+0x68db]        # 0x14003d2c0
   1400369e5:	int3   
   1400369e6:	int3   
   1400369e7:	int3   
   1400369e8:	int3   
   1400369e9:	int3   
   1400369ea:	int3   
   1400369eb:	int3   
   1400369ec:	int3   
   1400369ed:	int3   
   1400369ee:	int3   
   1400369ef:	int3   
   1400369f0:	mov    rcx,QWORD PTR [rip+0x1eaf9]        # 0x1400554f0
   1400369f7:	lea    rdx,[rip+0xd85e]        # 0x14004425c
   1400369fe:	rex.W jmp QWORD PTR [rip+0x68bb]        # 0x14003d2c0
   140036a05:	int3   
   140036a06:	int3   
   140036a07:	int3   
   140036a08:	int3   
   140036a09:	int3   
   140036a0a:	int3   
   140036a0b:	int3   
   140036a0c:	int3   
   140036a0d:	int3   
   140036a0e:	int3   
   140036a0f:	int3   
   140036a10:	mov    rcx,QWORD PTR [rip+0x1ead9]        # 0x1400554f0
   140036a17:	lea    rdx,[rip+0xd842]        # 0x140044260
   140036a1e:	rex.W jmp QWORD PTR [rip+0x689b]        # 0x14003d2c0
   140036a25:	int3   
   140036a26:	int3   
   140036a27:	int3   
   140036a28:	int3   
   140036a29:	int3   
   140036a2a:	int3   
   140036a2b:	int3   
   140036a2c:	int3   
   140036a2d:	int3   
   140036a2e:	int3   
   140036a2f:	int3   
   140036a30:	mov    rcx,QWORD PTR [rip+0x1eab9]        # 0x1400554f0
   140036a37:	lea    rdx,[rip+0xd832]        # 0x140044270
   140036a3e:	rex.W jmp QWORD PTR [rip+0x687b]        # 0x14003d2c0
   140036a45:	int3   
   140036a46:	int3   
   140036a47:	int3   
   140036a48:	int3   
   140036a49:	int3   
   140036a4a:	int3   
   140036a4b:	int3   
   140036a4c:	int3   
   140036a4d:	int3   
   140036a4e:	int3   
   140036a4f:	int3   
   140036a50:	sub    rsp,0x38
   140036a54:	mov    r8,QWORD PTR [rip+0x1c065]        # 0x140052ac0
   140036a5b:	mov    r11,rcx
   140036a5e:	lea    r10,[rip+0x1c05b]        # 0x140052ac0
   140036a65:	test   r8,r8
   140036a68:	je     0x140036ab4
   140036a6a:	mov    rax,QWORD PTR [rcx+0x28]
   140036a6e:	mov    r9,QWORD PTR [rax]
   140036a71:	nop    DWORD PTR [rax+0x0]
   140036a75:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140036a80:	mov    rax,r9
   140036a83:	sub    r8,r9
   140036a86:	data16 nop WORD PTR [rax+rax*1+0x0]
   140036a90:	movzx  edx,BYTE PTR [rax]
   140036a93:	movzx  ecx,BYTE PTR [rax+r8*1]
   140036a98:	sub    edx,ecx
   140036a9a:	jne    0x140036aa3
   140036a9c:	inc    rax
   140036a9f:	test   ecx,ecx
   140036aa1:	jne    0x140036a90
   140036aa3:	test   edx,edx
   140036aa5:	je     0x140036ab4
   140036aa7:	mov    r8,QWORD PTR [r10+0x10]
   140036aab:	add    r10,0x10
   140036aaf:	test   r8,r8
   140036ab2:	jne    0x140036a80
   140036ab4:	mov    r9d,DWORD PTR [r11+0x18]
   140036ab8:	mov    rax,QWORD PTR [r10+0x8]
   140036abc:	mov    rcx,QWORD PTR [rip+0x1ea2d]        # 0x1400554f0
   140036ac3:	lea    r8d,[r9+0x1]
   140036ac7:	lea    rdx,[rip+0xd7b2]        # 0x140044280
   140036ace:	mov    QWORD PTR [rsp+0x20],rax
   140036ad3:	call   QWORD PTR [rip+0x67e7]        # 0x14003d2c0
   140036ad9:	add    rsp,0x38
   140036add:	ret    
   140036ade:	int3   
   140036adf:	int3   
   140036ae0:	mov    rcx,QWORD PTR [rip+0x1ea09]        # 0x1400554f0
   140036ae7:	lea    rdx,[rip+0xd7c6]        # 0x1400442b4
   140036aee:	rex.W jmp QWORD PTR [rip+0x67cb]        # 0x14003d2c0
   140036af5:	int3   
   140036af6:	int3   
   140036af7:	int3   
   140036af8:	int3   
   140036af9:	int3   
   140036afa:	int3   
   140036afb:	int3   
   140036afc:	int3   
   140036afd:	int3   
   140036afe:	int3   
   140036aff:	int3   
   140036b00:	sub    rsp,0x38
   140036b04:	mov    rax,QWORD PTR [rcx+0x10]
   140036b08:	mov    r9d,DWORD PTR [rcx+0x20]
   140036b0c:	mov    edx,DWORD PTR [rax+0x18]
   140036b0f:	mov    rax,QWORD PTR [rcx+0x18]
   140036b13:	lea    r8d,[r9+0x1]
   140036b17:	mov    ecx,DWORD PTR [rax+0x18]
   140036b1a:	inc    edx
   140036b1c:	inc    ecx
   140036b1e:	mov    DWORD PTR [rsp+0x28],edx
   140036b22:	lea    rdx,[rip+0xd797]        # 0x1400442c0
   140036b29:	mov    DWORD PTR [rsp+0x20],ecx
   140036b2d:	mov    rcx,QWORD PTR [rip+0x1e9bc]        # 0x1400554f0
   140036b34:	call   QWORD PTR [rip+0x6786]        # 0x14003d2c0
   140036b3a:	add    rsp,0x38
   140036b3e:	ret    
   140036b3f:	int3   
   140036b40:	mov    rcx,QWORD PTR [rip+0x1e9a9]        # 0x1400554f0
   140036b47:	lea    rdx,[rip+0xd766]        # 0x1400442b4
   140036b4e:	rex.W jmp QWORD PTR [rip+0x676b]        # 0x14003d2c0
   140036b55:	int3   
   140036b56:	int3   
   140036b57:	int3   
   140036b58:	int3   
   140036b59:	int3   
   140036b5a:	int3   
   140036b5b:	int3   
   140036b5c:	int3   
   140036b5d:	int3   
   140036b5e:	int3   
   140036b5f:	int3   
   140036b60:	sub    rsp,0x28
   140036b64:	mov    edx,DWORD PTR [rip+0x1db26]        # 0x140054690
   140036b6a:	lea    eax,[rdx+0x1]
   140036b6d:	cmp    eax,0x4
   140036b70:	jl     0x140036b92
   140036b72:	lea    rdx,[rip+0xd7c7]        # 0x140044340
   140036b79:	lea    rcx,[rip+0xbc98]        # 0x140042818
   140036b80:	mov    r8d,0x17c
   140036b86:	call   QWORD PTR [rip+0x6504]        # 0x14003d090
   140036b8c:	mov    edx,DWORD PTR [rip+0x1dafe]        # 0x140054690
   140036b92:	lea    r8,[rip+0x1da57]        # 0x1400545f0
   140036b99:	movsxd rax,edx
   140036b9c:	inc    edx
   140036b9e:	lea    rcx,[rax+rax*4]
   140036ba2:	lea    rax,[rax+rax*4]
   140036ba6:	mov    DWORD PTR [rip+0x1dae4],edx        # 0x140054690
   140036bac:	movups xmm0,XMMWORD PTR [r8+rcx*8]
   140036bb1:	movups XMMWORD PTR [r8+rax*8+0x28],xmm0
   140036bb7:	movups xmm1,XMMWORD PTR [r8+rcx*8+0x10]
   140036bbd:	movups XMMWORD PTR [r8+rax*8+0x38],xmm1
   140036bc3:	movsd  xmm0,QWORD PTR [r8+rcx*8+0x20]
   140036bca:	movsd  QWORD PTR [r8+rax*8+0x48],xmm0
   140036bd1:	add    rsp,0x28
   140036bd5:	ret    
   140036bd6:	int3   
   140036bd7:	int3   
   140036bd8:	int3   
   140036bd9:	int3   
   140036bda:	int3   
   140036bdb:	int3   
   140036bdc:	int3   
   140036bdd:	int3   
   140036bde:	int3   
   140036bdf:	int3   
   140036be0:	rex push rbx
   140036be2:	sub    rsp,0x20
   140036be6:	mov    eax,DWORD PTR [rip+0x1daa4]        # 0x140054690
   140036bec:	lea    ebx,[rax-0x1]
   140036bef:	test   eax,eax
   140036bf1:	jg     0x140036c0d
   140036bf3:	lea    rdx,[rip+0xd746]        # 0x140044340
   140036bfa:	lea    rcx,[rip+0xbc3f]        # 0x140042840
   140036c01:	mov    r8d,0x186
   140036c07:	call   QWORD PTR [rip+0x6483]        # 0x14003d090
   140036c0d:	mov    DWORD PTR [rip+0x1da7d],ebx        # 0x140054690
   140036c13:	add    rsp,0x20
   140036c17:	pop    rbx
   140036c18:	ret    
   140036c19:	int3   
   140036c1a:	int3   
   140036c1b:	int3   
   140036c1c:	int3   
   140036c1d:	int3   
   140036c1e:	int3   
   140036c1f:	int3   
   140036c20:	mov    QWORD PTR [rsp+0x8],rbx
   140036c25:	mov    QWORD PTR [rsp+0x10],rbp
   140036c2a:	mov    QWORD PTR [rsp+0x18],rsi
   140036c2f:	push   rdi
   140036c30:	sub    rsp,0x20
   140036c34:	movsxd rax,DWORD PTR [rip+0x1da55]        # 0x140054690
   140036c3b:	lea    rbp,[rip+0x1d9ae]        # 0x1400545f0
   140036c42:	lea    rbx,[rax+rax*4]
   140036c46:	movsd  QWORD PTR [rbp+rbx*8+0x20],xmm1
   140036c4c:	mov    BYTE PTR [rbp+rbx*8+0x19],0x1
   140036c51:	call   QWORD PTR [rip+0x6689]        # 0x14003d2e0
   140036c57:	mov    rcx,rax
   140036c5a:	mov    edx,0x2d
   140036c5f:	mov    rdi,rax
   140036c62:	call   QWORD PTR [rip+0x64a8]        # 0x14003d110
   140036c68:	mov    rsi,rax
   140036c6b:	test   rax,rax
   140036c6e:	je     0x140036c8c
   140036c70:	lea    rdx,[rip+0xbbd9]        # 0x140042850
   140036c77:	lea    rcx,[rax+0x1]
   140036c7b:	mov    BYTE PTR [rax],0x0
   140036c7e:	call   0x14001ca70
   140036c83:	test   eax,eax
   140036c85:	jne    0x140036ca6
   140036c87:	mov    BYTE PTR [rbp+rbx*8+0x18],0x2
   140036c8c:	mov    QWORD PTR [rbp+rbx*8+0x10],rdi
   140036c91:	mov    rbx,QWORD PTR [rsp+0x30]
   140036c96:	mov    rbp,QWORD PTR [rsp+0x38]
   140036c9b:	mov    rsi,QWORD PTR [rsp+0x40]
   140036ca0:	add    rsp,0x20
   140036ca4:	pop    rdi
   140036ca5:	ret    
   140036ca6:	lea    rdx,[rip+0xb0e3]        # 0x140041d90
   140036cad:	lea    rcx,[rsi+0x1]
   140036cb1:	call   0x14001ca70
   140036cb6:	mov    QWORD PTR [rbp+rbx*8+0x10],rdi
   140036cbb:	test   eax,eax
   140036cbd:	jne    0x140036c91
   140036cbf:	mov    BYTE PTR [rbp+rbx*8+0x18],0x1
   140036cc4:	jmp    0x140036c91
   140036cc6:	int3   
   140036cc7:	int3   
   140036cc8:	int3   
   140036cc9:	int3   
   140036cca:	int3   
   140036ccb:	int3   
   140036ccc:	int3   
   140036ccd:	int3   
   140036cce:	int3   
   140036ccf:	int3   
   140036cd0:	rex push rbx
   140036cd2:	sub    rsp,0x40
   140036cd6:	movsxd rax,DWORD PTR [rip+0x1d9b3]        # 0x140054690
   140036cdd:	mov    r8d,0x2
   140036ce3:	lea    rdx,[rax+rax*4]
   140036ce7:	lea    rax,[rip+0x1d902]        # 0x1400545f0
   140036cee:	lea    rbx,[rax+rdx*8]
   140036cf2:	lea    rdx,[rsp+0x20]
   140036cf7:	call   0x140026220
   140036cfc:	mov    eax,DWORD PTR [rsp+0x20]
   140036d00:	mov    DWORD PTR [rbx],eax
   140036d02:	mov    eax,DWORD PTR [rsp+0x24]
   140036d06:	mov    DWORD PTR [rbx+0x4],eax
   140036d09:	mov    eax,DWORD PTR [rsp+0x28]
   140036d0d:	mov    DWORD PTR [rbx+0x8],eax
   140036d10:	add    rsp,0x40
   140036d14:	pop    rbx
   140036d15:	ret    
   140036d16:	int3   
   140036d17:	int3   
   140036d18:	int3   
   140036d19:	int3   
   140036d1a:	int3   
   140036d1b:	int3   
   140036d1c:	int3   
   140036d1d:	int3   
   140036d1e:	int3   
   140036d1f:	int3   
   140036d20:	rex push rbx
   140036d22:	push   rsi
   140036d23:	push   rdi
   140036d24:	sub    rsp,0x30
   140036d28:	movsxd rax,DWORD PTR [rip+0x1d961]        # 0x140054690
   140036d2f:	mov    rbx,QWORD PTR [rcx]
   140036d32:	mov    rsi,rcx
   140036d35:	lea    rdx,[rax+rax*4]
   140036d39:	lea    rax,[rip+0x1d8b0]        # 0x1400545f0
   140036d40:	lea    rdi,[rax+rdx*8]
   140036d44:	test   rbx,rbx
   140036d47:	je     0x140036ebb
   140036d4d:	mov    QWORD PTR [rsp+0x50],rbp
   140036d52:	mov    QWORD PTR [rsp+0x58],r12
   140036d57:	mov    QWORD PTR [rsp+0x60],r13
   140036d5c:	mov    QWORD PTR [rsp+0x28],r14
   140036d61:	mov    QWORD PTR [rsp+0x20],r15
   140036d66:	lea    rbp,[rip+0x778f]        # 0x14003e4fc
   140036d6d:	lea    r15,[rip+0xb014]        # 0x140041d88
   140036d74:	lea    r14,[rip+0xb005]        # 0x140041d80
   140036d7b:	lea    r12,[rip+0x7cb2]        # 0x14003ea34
   140036d82:	lea    r13,[rip+0xb007]        # 0x140041d90
   140036d89:	lea    rdx,[rip+0x7c90]        # 0x14003ea20
   140036d90:	lea    rsi,[rsi+0x8]
   140036d94:	xor    ecx,ecx
   140036d96:	data16 nop WORD PTR [rax+rax*1+0x0]
   140036da0:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140036da4:	inc    rcx
   140036da7:	cmp    al,BYTE PTR [rcx+rbp*1-0x1]
   140036dab:	jne    0x140036dbc
   140036dad:	cmp    rcx,0x6
   140036db1:	jne    0x140036da0
   140036db3:	mov    BYTE PTR [rdi+0x1a],0x1
   140036db7:	jmp    0x140036e92
   140036dbc:	xor    ecx,ecx
   140036dbe:	xchg   ax,ax
   140036dc0:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140036dc4:	inc    rcx
   140036dc7:	cmp    al,BYTE PTR [r14+rcx*1-0x1]
   140036dcc:	jne    0x140036ddd
   140036dce:	cmp    rcx,0x7
   140036dd2:	jne    0x140036dc0
   140036dd4:	mov    BYTE PTR [rdi+0x1a],0x3
   140036dd8:	jmp    0x140036e92
   140036ddd:	xor    ecx,ecx
   140036ddf:	nop
   140036de0:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140036de4:	inc    rcx
   140036de7:	cmp    al,BYTE PTR [r15+rcx*1-0x1]
   140036dec:	jne    0x140036dfd
   140036dee:	cmp    rcx,0x7
   140036df2:	jne    0x140036de0
   140036df4:	mov    BYTE PTR [rdi+0x1a],0x2
   140036df8:	jmp    0x140036e92
   140036dfd:	xor    ecx,ecx
   140036dff:	nop
   140036e00:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140036e04:	inc    rcx
   140036e07:	cmp    al,BYTE PTR [r12+rcx*1-0x1]
   140036e0c:	jne    0x140036e1a
   140036e0e:	cmp    rcx,0x6
   140036e12:	jne    0x140036e00
   140036e14:	mov    BYTE PTR [rdi+0x1a],0x0
   140036e18:	jmp    0x140036e92
   140036e1a:	xor    ecx,ecx
   140036e1c:	nop    DWORD PTR [rax+0x0]
   140036e20:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140036e24:	inc    rcx
   140036e27:	cmp    al,BYTE PTR [r13+rcx*1-0x1]
   140036e2c:	jne    0x140036e3a
   140036e2e:	cmp    rcx,0x5
   140036e32:	jne    0x140036e20
   140036e34:	mov    BYTE PTR [rdi+0x1c],0x3
   140036e38:	jmp    0x140036e92
   140036e3a:	xor    ecx,ecx
   140036e3c:	nop    DWORD PTR [rax+0x0]
   140036e40:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140036e44:	inc    rcx
   140036e47:	cmp    al,BYTE PTR [rdx+rcx*1-0x1]
   140036e4b:	jne    0x140036e59
   140036e4d:	cmp    rcx,0x7
   140036e51:	jne    0x140036e40
   140036e53:	mov    BYTE PTR [rdi+0x1b],0x1
   140036e57:	jmp    0x140036e92
   140036e59:	lea    rdx,[rip+0xaf38]        # 0x140041d98
   140036e60:	mov    rcx,rbx
   140036e63:	call   0x14003bc96
   140036e68:	test   eax,eax
   140036e6a:	jne    0x140036e71
   140036e6c:	mov    BYTE PTR [rdi+0x1b],al
   140036e6f:	jmp    0x140036e8b
   140036e71:	call   QWORD PTR [rip+0x6459]        # 0x14003d2d0
   140036e77:	lea    rdx,[rip+0xd65a]        # 0x1400444d8
   140036e7e:	mov    r8,rbx
   140036e81:	lea    rcx,[rax+0x60]
   140036e85:	call   QWORD PTR [rip+0x6435]        # 0x14003d2c0
   140036e8b:	lea    rdx,[rip+0x7b8e]        # 0x14003ea20
   140036e92:	mov    BYTE PTR [rdi+0x1d],0x1
   140036e96:	mov    rbx,QWORD PTR [rsi]
   140036e99:	test   rbx,rbx
   140036e9c:	jne    0x140036d90
   140036ea2:	mov    r15,QWORD PTR [rsp+0x20]
   140036ea7:	mov    r14,QWORD PTR [rsp+0x28]
   140036eac:	mov    r13,QWORD PTR [rsp+0x60]
   140036eb1:	mov    r12,QWORD PTR [rsp+0x58]
   140036eb6:	mov    rbp,QWORD PTR [rsp+0x50]
   140036ebb:	add    rsp,0x30
   140036ebf:	pop    rdi
   140036ec0:	pop    rsi
   140036ec1:	pop    rbx
   140036ec2:	ret    
   140036ec3:	int3   
   140036ec4:	int3   
   140036ec5:	int3   
   140036ec6:	int3   
   140036ec7:	int3   
   140036ec8:	int3   
   140036ec9:	int3   
   140036eca:	int3   
   140036ecb:	int3   
   140036ecc:	int3   
   140036ecd:	int3   
   140036ece:	int3   
   140036ecf:	int3   
   140036ed0:	sub    rsp,0x38
   140036ed4:	movsxd rax,DWORD PTR [rip+0x1d7b5]        # 0x140054690
   140036edb:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140036ee0:	movsd  xmm6,QWORD PTR [rip+0x1d700]        # 0x1400545e8
   140036ee8:	lea    rcx,[rax+rax*4]
   140036eec:	lea    rax,[rip+0x1d6fd]        # 0x1400545f0
   140036ef3:	cmp    BYTE PTR [rax+rcx*8+0x1a],0x0
   140036ef8:	mulsd  xmm6,QWORD PTR [rax+rcx*8+0x20]
   140036efe:	je     0x140036f4b
   140036f00:	cmp    DWORD PTR [rip+0x1e5d9],0x2        # 0x1400554e0
   140036f07:	mov    rcx,QWORD PTR [rdx]
   140036f0a:	jne    0x140036f1a
   140036f0c:	call   0x140037e20
   140036f11:	lea    rdx,[rip+0xd5f8]        # 0x140044510
   140036f18:	jmp    0x140036f26
   140036f1a:	call   0x140037e20
   140036f1f:	lea    rdx,[rip+0xd6ca]        # 0x1400445f0
   140036f26:	mulsd  xmm6,QWORD PTR [rip+0x67b2]        # 0x14003d6e0
   140036f2e:	mov    rcx,QWORD PTR [rip+0x1e5bb]        # 0x1400554f0
   140036f35:	mov    r9,rax
   140036f38:	subsd  xmm6,QWORD PTR [rip+0x82c8]        # 0x14003f208
   140036f40:	cvttsd2si r8d,xmm6
   140036f45:	call   QWORD PTR [rip+0x6375]        # 0x14003d2c0
   140036f4b:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140036f50:	add    rsp,0x38
   140036f54:	ret    
   140036f55:	int3   
   140036f56:	int3   
   140036f57:	int3   
   140036f58:	int3   
   140036f59:	int3   
   140036f5a:	int3   
   140036f5b:	int3   
   140036f5c:	int3   
   140036f5d:	int3   
   140036f5e:	int3   
   140036f5f:	int3   
   140036f60:	rex push rbx
   140036f62:	sub    rsp,0x20
   140036f66:	mov    ebx,r9d
   140036f69:	test   r8d,r8d
   140036f6c:	je     0x140036fab
   140036f6e:	add    edx,0xfffffffe
   140036f71:	xor    r8d,r8d
   140036f74:	call   0x140037a00
   140036f79:	mov    rcx,QWORD PTR [rip+0x1e570]        # 0x1400554f0
   140036f80:	lea    rdx,[rip+0xd721]        # 0x1400446a8
   140036f87:	call   QWORD PTR [rip+0x6333]        # 0x14003d2c0
   140036f8d:	call   0x140037f20
   140036f92:	lea    rax,[rip+0xd41b]        # 0x1400443b4
   140036f99:	lea    r8,[rip+0xd418]        # 0x1400443b8
   140036fa0:	test   ebx,ebx
   140036fa2:	mov    r9,rax
   140036fa5:	cmovne r8,rax
   140036fa9:	jmp    0x140036fe9
   140036fab:	lea    r8d,[rdx-0x1]
   140036faf:	mov    edx,0x1
   140036fb4:	call   0x140037a00
   140036fb9:	mov    rcx,QWORD PTR [rip+0x1e530]        # 0x1400554f0
   140036fc0:	lea    rdx,[rip+0xd6e1]        # 0x1400446a8
   140036fc7:	call   QWORD PTR [rip+0x62f3]        # 0x14003d2c0
   140036fcd:	call   0x140037f20
   140036fd2:	lea    r8,[rip+0xd3df]        # 0x1400443b8
   140036fd9:	lea    rax,[rip+0xd3d4]        # 0x1400443b4
   140036fe0:	mov    r9,r8
   140036fe3:	test   ebx,ebx
   140036fe5:	cmovne r9,rax
   140036fe9:	mov    rcx,QWORD PTR [rip+0x1e500]        # 0x1400554f0
   140036ff0:	lea    rdx,[rip+0xd6c9]        # 0x1400446c0
   140036ff7:	add    rsp,0x20
   140036ffb:	pop    rbx
   140036ffc:	rex.W jmp QWORD PTR [rip+0x62bd]        # 0x14003d2c0
   140037003:	int3   
   140037004:	int3   
   140037005:	int3   
   140037006:	int3   
   140037007:	int3   
   140037008:	int3   
   140037009:	int3   
   14003700a:	int3   
   14003700b:	int3   
   14003700c:	int3   
   14003700d:	int3   
   14003700e:	int3   
   14003700f:	int3   
   140037010:	mov    rax,rsp
   140037013:	mov    QWORD PTR [rax+0x8],rbx
   140037017:	push   rbp
   140037018:	lea    rbp,[rax-0x5f]
   14003701c:	sub    rsp,0xc0
   140037023:	movd   xmm1,DWORD PTR [rcx]
   140037027:	xorps  xmm0,xmm0
   14003702a:	mov    r9d,edx
   14003702d:	lea    r8,[rcx+0x4]
   140037031:	xor    edx,edx
   140037033:	movaps XMMWORD PTR [rax-0x18],xmm6
   140037037:	mov    r10,rcx
   14003703a:	movups XMMWORD PTR [rbp-0x9],xmm0
   14003703e:	movsd  xmm4,QWORD PTR [rbp-0x1]
   140037043:	movsd  xmm5,QWORD PTR [rbp-0x9]
   140037048:	movd   xmm0,DWORD PTR [r8]
   14003704d:	movaps XMMWORD PTR [rax-0x28],xmm7
   140037051:	cvtdq2pd xmm1,xmm1
   140037055:	cvtdq2pd xmm0,xmm0
   140037059:	movsd  QWORD PTR [rbp+0xf],xmm0
   14003705e:	movsd  QWORD PTR [rbp-0x11],xmm0
   140037063:	movaps xmm3,xmm0
   140037066:	movsd  QWORD PTR [rbp+0x7],xmm1
   14003706b:	movsd  QWORD PTR [rbp-0x19],xmm1
   140037070:	movaps xmm2,xmm1
   140037073:	cmp    r9d,0x4
   140037077:	jl     0x1400371ec
   14003707d:	lea    eax,[r9-0x4]
   140037081:	shr    eax,0x2
   140037084:	inc    eax
   140037086:	mov    ecx,eax
   140037088:	lea    edx,[rax*4+0x0]
   14003708f:	nop
   140037090:	movd   xmm7,DWORD PTR [r8-0x4]
   140037096:	movd   xmm6,DWORD PTR [r8]
   14003709b:	cvtdq2pd xmm7,xmm7
   14003709f:	cvtdq2pd xmm6,xmm6
   1400370a3:	comisd xmm2,xmm7
   1400370a7:	addsd  xmm5,xmm7
   1400370ab:	addsd  xmm4,xmm6
   1400370af:	ja     0x1400370b9
   1400370b1:	movsd  QWORD PTR [rbp-0x19],xmm7
   1400370b6:	movaps xmm2,xmm7
   1400370b9:	comisd xmm3,xmm6
   1400370bd:	ja     0x1400370c7
   1400370bf:	movsd  QWORD PTR [rbp-0x11],xmm6
   1400370c4:	movaps xmm3,xmm6
   1400370c7:	comisd xmm7,xmm1
   1400370cb:	ja     0x1400370d5
   1400370cd:	movsd  QWORD PTR [rbp+0x7],xmm7
   1400370d2:	movaps xmm1,xmm7
   1400370d5:	comisd xmm6,xmm0
   1400370d9:	ja     0x1400370e3
   1400370db:	movsd  QWORD PTR [rbp+0xf],xmm6
   1400370e0:	movaps xmm0,xmm6
   1400370e3:	movd   xmm7,DWORD PTR [r8+0x4]
   1400370e9:	movd   xmm6,DWORD PTR [r8+0x8]
   1400370ef:	cvtdq2pd xmm7,xmm7
   1400370f3:	cvtdq2pd xmm6,xmm6
   1400370f7:	comisd xmm2,xmm7
   1400370fb:	addsd  xmm5,xmm7
   1400370ff:	addsd  xmm4,xmm6
   140037103:	ja     0x14003710d
   140037105:	movsd  QWORD PTR [rbp-0x19],xmm7
   14003710a:	movaps xmm2,xmm7
   14003710d:	comisd xmm3,xmm6
   140037111:	ja     0x14003711b
   140037113:	movsd  QWORD PTR [rbp-0x11],xmm6
   140037118:	movaps xmm3,xmm6
   14003711b:	comisd xmm7,xmm1
   14003711f:	ja     0x140037129
   140037121:	movsd  QWORD PTR [rbp+0x7],xmm7
   140037126:	movaps xmm1,xmm7
   140037129:	comisd xmm6,xmm0
   14003712d:	ja     0x140037137
   14003712f:	movsd  QWORD PTR [rbp+0xf],xmm6
   140037134:	movaps xmm0,xmm6
   140037137:	movd   xmm7,DWORD PTR [r8+0xc]
   14003713d:	movd   xmm6,DWORD PTR [r8+0x10]
   140037143:	cvtdq2pd xmm7,xmm7
   140037147:	cvtdq2pd xmm6,xmm6
   14003714b:	comisd xmm2,xmm7
   14003714f:	addsd  xmm5,xmm7
   140037153:	addsd  xmm4,xmm6
   140037157:	ja     0x140037161
   140037159:	movsd  QWORD PTR [rbp-0x19],xmm7
   14003715e:	movaps xmm2,xmm7
   140037161:	comisd xmm3,xmm6
   140037165:	ja     0x14003716f
   140037167:	movsd  QWORD PTR [rbp-0x11],xmm6
   14003716c:	movaps xmm3,xmm6
   14003716f:	comisd xmm7,xmm1
   140037173:	ja     0x14003717d
   140037175:	movsd  QWORD PTR [rbp+0x7],xmm7
   14003717a:	movaps xmm1,xmm7
   14003717d:	comisd xmm6,xmm0
   140037181:	ja     0x14003718b
   140037183:	movsd  QWORD PTR [rbp+0xf],xmm6
   140037188:	movaps xmm0,xmm6
   14003718b:	movd   xmm7,DWORD PTR [r8+0x14]
   140037191:	movd   xmm6,DWORD PTR [r8+0x18]
   140037197:	cvtdq2pd xmm7,xmm7
   14003719b:	cvtdq2pd xmm6,xmm6
   14003719f:	comisd xmm2,xmm7
   1400371a3:	addsd  xmm5,xmm7
   1400371a7:	addsd  xmm4,xmm6
   1400371ab:	ja     0x1400371b5
   1400371ad:	movsd  QWORD PTR [rbp-0x19],xmm7
   1400371b2:	movaps xmm2,xmm7
   1400371b5:	comisd xmm3,xmm6
   1400371b9:	ja     0x1400371c3
   1400371bb:	movsd  QWORD PTR [rbp-0x11],xmm6
   1400371c0:	movaps xmm3,xmm6
   1400371c3:	comisd xmm7,xmm1
   1400371c7:	ja     0x1400371d1
   1400371c9:	movsd  QWORD PTR [rbp+0x7],xmm7
   1400371ce:	movaps xmm1,xmm7
   1400371d1:	comisd xmm6,xmm0
   1400371d5:	ja     0x1400371df
   1400371d7:	movsd  QWORD PTR [rbp+0xf],xmm6
   1400371dc:	movaps xmm0,xmm6
   1400371df:	add    r8,0x20
   1400371e3:	dec    rcx
   1400371e6:	jne    0x140037090
   1400371ec:	cmp    edx,r9d
   1400371ef:	jge    0x14003725d
   1400371f1:	movsxd rax,edx
   1400371f4:	lea    rcx,[r10+0x4]
   1400371f8:	lea    rcx,[rcx+rax*8]
   1400371fc:	mov    eax,r9d
   1400371ff:	sub    eax,edx
   140037201:	mov    edx,eax
   140037203:	movd   xmm7,DWORD PTR [rcx-0x4]
   140037208:	movd   xmm6,DWORD PTR [rcx]
   14003720c:	cvtdq2pd xmm7,xmm7
   140037210:	cvtdq2pd xmm6,xmm6
   140037214:	comisd xmm2,xmm7
   140037218:	addsd  xmm5,xmm7
   14003721c:	addsd  xmm4,xmm6
   140037220:	ja     0x140037225
   140037222:	movaps xmm2,xmm7
   140037225:	comisd xmm3,xmm6
   140037229:	ja     0x14003722e
   14003722b:	movaps xmm3,xmm6
   14003722e:	comisd xmm7,xmm1
   140037232:	ja     0x140037237
   140037234:	movaps xmm1,xmm7
   140037237:	comisd xmm6,xmm0
   14003723b:	ja     0x140037240
   14003723d:	movaps xmm0,xmm6
   140037240:	add    rcx,0x8
   140037244:	dec    rdx
   140037247:	jne    0x140037203
   140037249:	movsd  QWORD PTR [rbp+0xf],xmm0
   14003724e:	movsd  QWORD PTR [rbp+0x7],xmm1
   140037253:	movsd  QWORD PTR [rbp-0x19],xmm2
   140037258:	movsd  QWORD PTR [rbp-0x11],xmm3
   14003725d:	mov    eax,DWORD PTR [rip+0x1d379]        # 0x1400545dc
   140037263:	movaps xmm7,XMMWORD PTR [rsp+0xa0]
   14003726b:	movaps xmm6,XMMWORD PTR [rsp+0xb0]
   140037273:	movd   xmm0,r9d
   140037278:	cvtdq2pd xmm0,xmm0
   14003727c:	divsd  xmm5,xmm0
   140037280:	divsd  xmm4,xmm0
   140037284:	movsd  QWORD PTR [rbp-0x9],xmm5
   140037289:	movss  xmm0,DWORD PTR [rbp-0x9]
   14003728e:	movss  xmm1,DWORD PTR [rbp-0x5]
   140037293:	movsd  QWORD PTR [rbp-0x1],xmm4
   140037298:	movss  DWORD PTR [rbp+0x17],xmm0
   14003729d:	movss  xmm0,DWORD PTR [rbp-0x1]
   1400372a2:	movss  DWORD PTR [rbp+0x1b],xmm1
   1400372a7:	movss  xmm1,DWORD PTR [rbp+0x3]
   1400372ac:	movss  DWORD PTR [rbp+0x1f],xmm0
   1400372b1:	movss  DWORD PTR [rbp+0x23],xmm1
   1400372b6:	test   eax,eax
   1400372b8:	jne    0x1400372c4
   1400372ba:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   1400372be:	movups XMMWORD PTR [rbp+0x27],xmm0
   1400372c2:	jmp    0x1400372d8
   1400372c4:	movsd  xmm0,QWORD PTR [rbp+0x1f]
   1400372c9:	movsd  xmm1,QWORD PTR [rbp+0x17]
   1400372ce:	movsd  QWORD PTR [rbp+0x27],xmm0
   1400372d3:	movsd  QWORD PTR [rbp+0x2f],xmm1
   1400372d8:	movups xmm0,XMMWORD PTR [rbp+0x27]
   1400372dc:	movups XMMWORD PTR [rbp-0x9],xmm0
   1400372e0:	movups xmm0,XMMWORD PTR [rbp-0x19]
   1400372e4:	movaps XMMWORD PTR [rbp+0x27],xmm0
   1400372e8:	test   eax,eax
   1400372ea:	jne    0x1400372f2
   1400372ec:	movups XMMWORD PTR [rbp+0x17],xmm0
   1400372f0:	jmp    0x140037306
   1400372f2:	movsd  xmm0,QWORD PTR [rbp+0x2f]
   1400372f7:	movsd  xmm1,QWORD PTR [rbp+0x27]
   1400372fc:	movsd  QWORD PTR [rbp+0x17],xmm0
   140037301:	movsd  QWORD PTR [rbp+0x1f],xmm1
   140037306:	movups xmm0,XMMWORD PTR [rbp+0x17]
   14003730a:	movups XMMWORD PTR [rbp-0x19],xmm0
   14003730e:	movups xmm0,XMMWORD PTR [rbp+0x7]
   140037312:	movaps XMMWORD PTR [rbp+0x27],xmm0
   140037316:	test   eax,eax
   140037318:	jne    0x140037320
   14003731a:	movups XMMWORD PTR [rbp+0x17],xmm0
   14003731e:	jmp    0x140037334
   140037320:	movsd  xmm0,QWORD PTR [rbp+0x2f]
   140037325:	movsd  xmm1,QWORD PTR [rbp+0x27]
   14003732a:	movsd  QWORD PTR [rbp+0x17],xmm0
   14003732f:	movsd  QWORD PTR [rbp+0x1f],xmm1
   140037334:	movss  xmm0,DWORD PTR [rbp+0x23]
   140037339:	movss  xmm3,DWORD PTR [rbp+0x1b]
   14003733e:	movsd  xmm2,QWORD PTR [rbp-0x19]
   140037343:	mov    rcx,QWORD PTR [rip+0x1e1a6]        # 0x1400554f0
   14003734a:	lea    rdx,[rip+0xd3ef]        # 0x140044740
   140037351:	movss  xmm1,DWORD PTR [rbp+0x1f]
   140037356:	movsd  xmm4,QWORD PTR [rbp-0x11]
   14003735b:	unpcklps xmm1,xmm0
   14003735e:	movss  xmm0,DWORD PTR [rbp+0x17]
   140037363:	subsd  xmm4,xmm1
   140037367:	unpcklps xmm0,xmm3
   14003736a:	movsd  xmm3,QWORD PTR [rbp-0x1]
   14003736f:	subsd  xmm2,xmm0
   140037373:	movsd  QWORD PTR [rsp+0x28],xmm4
   140037379:	movq   r9,xmm3
   14003737e:	movsd  QWORD PTR [rsp+0x20],xmm2
   140037384:	movsd  xmm2,QWORD PTR [rbp-0x9]
   140037389:	movq   r8,xmm2
   14003738e:	call   QWORD PTR [rip+0x5f2c]        # 0x14003d2c0
   140037394:	mov    rcx,QWORD PTR [rip+0x1e155]        # 0x1400554f0
   14003739b:	lea    rdx,[rip+0xd0de]        # 0x140044480
   1400373a2:	call   QWORD PTR [rip+0x5f18]        # 0x14003d2c0
   1400373a8:	movsxd rax,DWORD PTR [rip+0x1d2e1]        # 0x140054690
   1400373af:	lea    rbx,[rip+0x1d23a]        # 0x1400545f0
   1400373b6:	lea    rcx,[rax+rax*4]
   1400373ba:	lea    r11,[rip+0xcff3]        # 0x1400443b4
   1400373c1:	lea    r8,[rip+0xcff0]        # 0x1400443b8
   1400373c8:	mov    edx,DWORD PTR [rbx+rcx*8+0x8]
   1400373cc:	mov    r10d,DWORD PTR [rbx+rcx*8+0x4]
   1400373d1:	movsx  eax,BYTE PTR [rbx+rcx*8+0x1c]
   1400373d6:	mov    r9d,DWORD PTR [rbx+rcx*8]
   1400373da:	cmp    BYTE PTR [rbx+rcx*8+0x1b],0x0
   1400373df:	mov    rcx,QWORD PTR [rip+0x1e10a]        # 0x1400554f0
   1400373e6:	mov    DWORD PTR [rsp+0x48],eax
   1400373ea:	mov    DWORD PTR [rsp+0x40],edx
   1400373ee:	mov    DWORD PTR [rsp+0x38],r10d
   1400373f3:	mov    DWORD PTR [rsp+0x30],r9d
   1400373f8:	mov    DWORD PTR [rsp+0x28],edx
   1400373fc:	lea    rdx,[rip+0xcfbd]        # 0x1400443c0
   140037403:	cmovne r8,r11
   140037407:	mov    DWORD PTR [rsp+0x20],r10d
   14003740c:	call   QWORD PTR [rip+0x5eae]        # 0x14003d2c0
   140037412:	mov    rcx,QWORD PTR [rip+0x1e0d7]        # 0x1400554f0
   140037419:	lea    rdx,[rip+0xd088]        # 0x1400444a8
   140037420:	mov    rbx,QWORD PTR [rsp+0xd0]
   140037428:	add    rsp,0xc0
   14003742f:	pop    rbp
   140037430:	rex.W jmp QWORD PTR [rip+0x5e89]        # 0x14003d2c0
   140037437:	int3   
   140037438:	int3   
   140037439:	int3   
   14003743a:	int3   
   14003743b:	int3   
   14003743c:	int3   
   14003743d:	int3   
   14003743e:	int3   
   14003743f:	int3   
   140037440:	mov    rax,rsp
   140037443:	sub    rsp,0x58
   140037447:	movd   xmm0,ecx
   14003744b:	shr    rcx,0x20
   14003744f:	cmp    DWORD PTR [rip+0x1d186],0x0        # 0x1400545dc
   140037456:	cvtdq2pd xmm0,xmm0
   14003745a:	movsd  QWORD PTR [rax-0x18],xmm0
   14003745f:	movss  xmm1,DWORD PTR [rax-0x18]
   140037464:	movd   xmm0,ecx
   140037468:	movss  DWORD PTR [rax-0x28],xmm1
   14003746d:	cvtdq2pd xmm0,xmm0
   140037471:	movsd  QWORD PTR [rax-0x10],xmm0
   140037476:	movss  xmm0,DWORD PTR [rax-0x14]
   14003747b:	movss  xmm1,DWORD PTR [rax-0x10]
   140037480:	movss  DWORD PTR [rax-0x24],xmm0
   140037485:	movss  xmm0,DWORD PTR [rax-0xc]
   14003748a:	movss  DWORD PTR [rax-0x20],xmm1
   14003748f:	movss  DWORD PTR [rax-0x1c],xmm0
   140037494:	jne    0x1400374a0
   140037496:	movaps xmm0,XMMWORD PTR [rax-0x28]
   14003749a:	movups XMMWORD PTR [rax-0x18],xmm0
   14003749e:	jmp    0x1400374b8
   1400374a0:	movsd  xmm0,QWORD PTR [rsp+0x38]
   1400374a6:	movsd  xmm1,QWORD PTR [rsp+0x30]
   1400374ac:	movsd  QWORD PTR [rsp+0x40],xmm0
   1400374b2:	movsd  QWORD PTR [rsp+0x48],xmm1
   1400374b8:	movss  xmm2,DWORD PTR [rsp+0x4c]
   1400374be:	movss  xmm3,DWORD PTR [rsp+0x48]
   1400374c4:	movss  xmm4,DWORD PTR [rsp+0x44]
   1400374ca:	mov    rcx,QWORD PTR [rip+0x1e01f]        # 0x1400554f0
   1400374d1:	lea    eax,[r8+r8*1]
   1400374d5:	unpcklps xmm3,xmm2
   1400374d8:	movd   xmm1,eax
   1400374dc:	lea    eax,[rdx+rdx*1]
   1400374df:	lea    rdx,[rip+0xd25a]        # 0x140044740
   1400374e6:	movss  xmm2,DWORD PTR [rsp+0x40]
   1400374ec:	movd   xmm0,eax
   1400374f0:	movq   r9,xmm3
   1400374f5:	cvtdq2pd xmm1,xmm1
   1400374f9:	unpcklps xmm2,xmm4
   1400374fc:	movsd  QWORD PTR [rsp+0x28],xmm1
   140037502:	cvtdq2pd xmm0,xmm0
   140037506:	movq   r8,xmm2
   14003750b:	movsd  QWORD PTR [rsp+0x20],xmm0
   140037511:	call   QWORD PTR [rip+0x5da9]        # 0x14003d2c0
   140037517:	mov    rcx,QWORD PTR [rip+0x1dfd2]        # 0x1400554f0
   14003751e:	lea    rdx,[rip+0xcf5b]        # 0x140044480
   140037525:	call   QWORD PTR [rip+0x5d95]        # 0x14003d2c0
   14003752b:	call   0x140037f20
   140037530:	mov    rcx,QWORD PTR [rip+0x1dfb9]        # 0x1400554f0
   140037537:	lea    rdx,[rip+0xcf6a]        # 0x1400444a8
   14003753e:	call   QWORD PTR [rip+0x5d7c]        # 0x14003d2c0
   140037544:	add    rsp,0x58
   140037548:	ret    
   140037549:	int3   
   14003754a:	int3   
   14003754b:	int3   
   14003754c:	int3   
   14003754d:	int3   
   14003754e:	int3   
   14003754f:	int3   
   140037550:	sub    rsp,0x28
   140037554:	call   0x140037d00
   140037559:	mov    rcx,QWORD PTR [rip+0x1df90]        # 0x1400554f0
   140037560:	lea    rdx,[rip+0xd201]        # 0x140044768
   140037567:	call   QWORD PTR [rip+0x5d53]        # 0x14003d2c0
   14003756d:	add    rsp,0x28
   140037571:	jmp    0x140037f20
   140037576:	int3   
   140037577:	int3   
   140037578:	int3   
   140037579:	int3   
   14003757a:	int3   
   14003757b:	int3   
   14003757c:	int3   
   14003757d:	int3   
   14003757e:	int3   
   14003757f:	int3   
   140037580:	mov    rax,rsp
   140037583:	mov    QWORD PTR [rax+0x8],rbx
   140037587:	push   rbp
   140037588:	lea    rbp,[rax-0x5f]
   14003758c:	sub    rsp,0xc0
   140037593:	movd   xmm1,DWORD PTR [rdx]
   140037597:	xorps  xmm0,xmm0
   14003759a:	mov    r9d,r8d
   14003759d:	lea    rcx,[rdx+0x4]
   1400375a1:	xor    r8d,r8d
   1400375a4:	movaps XMMWORD PTR [rax-0x18],xmm6
   1400375a8:	mov    r10,rdx
   1400375ab:	movups XMMWORD PTR [rbp-0x9],xmm0
   1400375af:	movsd  xmm4,QWORD PTR [rbp-0x1]
   1400375b4:	movsd  xmm5,QWORD PTR [rbp-0x9]
   1400375b9:	movd   xmm0,DWORD PTR [rcx]
   1400375bd:	movaps XMMWORD PTR [rax-0x28],xmm7
   1400375c1:	cvtdq2pd xmm1,xmm1
   1400375c5:	cvtdq2pd xmm0,xmm0
   1400375c9:	movsd  QWORD PTR [rbp+0xf],xmm0
   1400375ce:	movsd  QWORD PTR [rbp-0x11],xmm0
   1400375d3:	movaps xmm3,xmm0
   1400375d6:	movsd  QWORD PTR [rbp+0x7],xmm1
   1400375db:	movsd  QWORD PTR [rbp-0x19],xmm1
   1400375e0:	movaps xmm2,xmm1
   1400375e3:	cmp    r9d,0x4
   1400375e7:	jl     0x140037754
   1400375ed:	lea    eax,[r9-0x4]
   1400375f1:	shr    eax,0x2
   1400375f4:	inc    eax
   1400375f6:	mov    edx,eax
   1400375f8:	lea    r8d,[rax*4+0x0]
   140037600:	movd   xmm7,DWORD PTR [rcx-0x4]
   140037605:	movd   xmm6,DWORD PTR [rcx]
   140037609:	cvtdq2pd xmm7,xmm7
   14003760d:	cvtdq2pd xmm6,xmm6
   140037611:	comisd xmm2,xmm7
   140037615:	addsd  xmm5,xmm7
   140037619:	addsd  xmm4,xmm6
   14003761d:	ja     0x140037627
   14003761f:	movsd  QWORD PTR [rbp-0x19],xmm7
   140037624:	movaps xmm2,xmm7
   140037627:	comisd xmm3,xmm6
   14003762b:	ja     0x140037635
   14003762d:	movsd  QWORD PTR [rbp-0x11],xmm6
   140037632:	movaps xmm3,xmm6
   140037635:	comisd xmm7,xmm1
   140037639:	ja     0x140037643
   14003763b:	movsd  QWORD PTR [rbp+0x7],xmm7
   140037640:	movaps xmm1,xmm7
   140037643:	comisd xmm6,xmm0
   140037647:	ja     0x140037651
   140037649:	movsd  QWORD PTR [rbp+0xf],xmm6
   14003764e:	movaps xmm0,xmm6
   140037651:	movd   xmm7,DWORD PTR [rcx+0x4]
   140037656:	movd   xmm6,DWORD PTR [rcx+0x8]
   14003765b:	cvtdq2pd xmm7,xmm7
   14003765f:	cvtdq2pd xmm6,xmm6
   140037663:	comisd xmm2,xmm7
   140037667:	addsd  xmm5,xmm7
   14003766b:	addsd  xmm4,xmm6
   14003766f:	ja     0x140037679
   140037671:	movsd  QWORD PTR [rbp-0x19],xmm7
   140037676:	movaps xmm2,xmm7
   140037679:	comisd xmm3,xmm6
   14003767d:	ja     0x140037687
   14003767f:	movsd  QWORD PTR [rbp-0x11],xmm6
   140037684:	movaps xmm3,xmm6
   140037687:	comisd xmm7,xmm1
   14003768b:	ja     0x140037695
   14003768d:	movsd  QWORD PTR [rbp+0x7],xmm7
   140037692:	movaps xmm1,xmm7
   140037695:	comisd xmm6,xmm0
   140037699:	ja     0x1400376a3
   14003769b:	movsd  QWORD PTR [rbp+0xf],xmm6
   1400376a0:	movaps xmm0,xmm6
   1400376a3:	movd   xmm7,DWORD PTR [rcx+0xc]
   1400376a8:	movd   xmm6,DWORD PTR [rcx+0x10]
   1400376ad:	cvtdq2pd xmm7,xmm7
   1400376b1:	cvtdq2pd xmm6,xmm6
   1400376b5:	comisd xmm2,xmm7
   1400376b9:	addsd  xmm5,xmm7
   1400376bd:	addsd  xmm4,xmm6
   1400376c1:	ja     0x1400376cb
   1400376c3:	movsd  QWORD PTR [rbp-0x19],xmm7
   1400376c8:	movaps xmm2,xmm7
   1400376cb:	comisd xmm3,xmm6
   1400376cf:	ja     0x1400376d9
   1400376d1:	movsd  QWORD PTR [rbp-0x11],xmm6
   1400376d6:	movaps xmm3,xmm6
   1400376d9:	comisd xmm7,xmm1
   1400376dd:	ja     0x1400376e7
   1400376df:	movsd  QWORD PTR [rbp+0x7],xmm7
   1400376e4:	movaps xmm1,xmm7
   1400376e7:	comisd xmm6,xmm0
   1400376eb:	ja     0x1400376f5
   1400376ed:	movsd  QWORD PTR [rbp+0xf],xmm6
   1400376f2:	movaps xmm0,xmm6
   1400376f5:	movd   xmm7,DWORD PTR [rcx+0x14]
   1400376fa:	movd   xmm6,DWORD PTR [rcx+0x18]
   1400376ff:	cvtdq2pd xmm7,xmm7
   140037703:	cvtdq2pd xmm6,xmm6
   140037707:	comisd xmm2,xmm7
   14003770b:	addsd  xmm5,xmm7
   14003770f:	addsd  xmm4,xmm6
   140037713:	ja     0x14003771d
   140037715:	movsd  QWORD PTR [rbp-0x19],xmm7
   14003771a:	movaps xmm2,xmm7
   14003771d:	comisd xmm3,xmm6
   140037721:	ja     0x14003772b
   140037723:	movsd  QWORD PTR [rbp-0x11],xmm6
   140037728:	movaps xmm3,xmm6
   14003772b:	comisd xmm7,xmm1
   14003772f:	ja     0x140037739
   140037731:	movsd  QWORD PTR [rbp+0x7],xmm7
   140037736:	movaps xmm1,xmm7
   140037739:	comisd xmm6,xmm0
   14003773d:	ja     0x140037747
   14003773f:	movsd  QWORD PTR [rbp+0xf],xmm6
   140037744:	movaps xmm0,xmm6
   140037747:	add    rcx,0x20
   14003774b:	dec    rdx
   14003774e:	jne    0x140037600
   140037754:	cmp    r8d,r9d
   140037757:	jge    0x1400377c4
   140037759:	lea    rcx,[r10+0x4]
   14003775d:	movsxd rax,r8d
   140037760:	mov    edx,r9d
   140037763:	lea    rcx,[rcx+rax*8]
   140037767:	sub    edx,r8d
   14003776a:	movd   xmm7,DWORD PTR [rcx-0x4]
   14003776f:	movd   xmm6,DWORD PTR [rcx]
   140037773:	cvtdq2pd xmm7,xmm7
   140037777:	cvtdq2pd xmm6,xmm6
   14003777b:	comisd xmm2,xmm7
   14003777f:	addsd  xmm5,xmm7
   140037783:	addsd  xmm4,xmm6
   140037787:	ja     0x14003778c
   140037789:	movaps xmm2,xmm7
   14003778c:	comisd xmm3,xmm6
   140037790:	ja     0x140037795
   140037792:	movaps xmm3,xmm6
   140037795:	comisd xmm7,xmm1
   140037799:	ja     0x14003779e
   14003779b:	movaps xmm1,xmm7
   14003779e:	comisd xmm6,xmm0
   1400377a2:	ja     0x1400377a7
   1400377a4:	movaps xmm0,xmm6
   1400377a7:	add    rcx,0x8
   1400377ab:	dec    rdx
   1400377ae:	jne    0x14003776a
   1400377b0:	movsd  QWORD PTR [rbp+0xf],xmm0
   1400377b5:	movsd  QWORD PTR [rbp+0x7],xmm1
   1400377ba:	movsd  QWORD PTR [rbp-0x19],xmm2
   1400377bf:	movsd  QWORD PTR [rbp-0x11],xmm3
   1400377c4:	mov    eax,DWORD PTR [rip+0x1ce12]        # 0x1400545dc
   1400377ca:	movaps xmm7,XMMWORD PTR [rsp+0xa0]
   1400377d2:	movaps xmm6,XMMWORD PTR [rsp+0xb0]
   1400377da:	movd   xmm0,r9d
   1400377df:	cvtdq2pd xmm0,xmm0
   1400377e3:	divsd  xmm5,xmm0
   1400377e7:	divsd  xmm4,xmm0
   1400377eb:	movsd  QWORD PTR [rbp-0x9],xmm5
   1400377f0:	movss  xmm0,DWORD PTR [rbp-0x9]
   1400377f5:	movss  xmm1,DWORD PTR [rbp-0x5]
   1400377fa:	movsd  QWORD PTR [rbp-0x1],xmm4
   1400377ff:	movss  DWORD PTR [rbp+0x17],xmm0
   140037804:	movss  xmm0,DWORD PTR [rbp-0x1]
   140037809:	movss  DWORD PTR [rbp+0x1b],xmm1
   14003780e:	movss  xmm1,DWORD PTR [rbp+0x3]
   140037813:	movss  DWORD PTR [rbp+0x1f],xmm0
   140037818:	movss  DWORD PTR [rbp+0x23],xmm1
   14003781d:	test   eax,eax
   14003781f:	jne    0x14003782b
   140037821:	movaps xmm0,XMMWORD PTR [rbp+0x17]
   140037825:	movups XMMWORD PTR [rbp+0x27],xmm0
   140037829:	jmp    0x14003783f
   14003782b:	movsd  xmm0,QWORD PTR [rbp+0x1f]
   140037830:	movsd  xmm1,QWORD PTR [rbp+0x17]
   140037835:	movsd  QWORD PTR [rbp+0x27],xmm0
   14003783a:	movsd  QWORD PTR [rbp+0x2f],xmm1
   14003783f:	movups xmm0,XMMWORD PTR [rbp+0x27]
   140037843:	movups XMMWORD PTR [rbp-0x9],xmm0
   140037847:	movups xmm0,XMMWORD PTR [rbp-0x19]
   14003784b:	movaps XMMWORD PTR [rbp+0x27],xmm0
   14003784f:	test   eax,eax
   140037851:	jne    0x140037859
   140037853:	movups XMMWORD PTR [rbp+0x17],xmm0
   140037857:	jmp    0x14003786d
   140037859:	movsd  xmm0,QWORD PTR [rbp+0x2f]
   14003785e:	movsd  xmm1,QWORD PTR [rbp+0x27]
   140037863:	movsd  QWORD PTR [rbp+0x17],xmm0
   140037868:	movsd  QWORD PTR [rbp+0x1f],xmm1
   14003786d:	movups xmm0,XMMWORD PTR [rbp+0x17]
   140037871:	movups XMMWORD PTR [rbp-0x19],xmm0
   140037875:	movups xmm0,XMMWORD PTR [rbp+0x7]
   140037879:	movaps XMMWORD PTR [rbp+0x27],xmm0
   14003787d:	test   eax,eax
   14003787f:	jne    0x140037887
   140037881:	movups XMMWORD PTR [rbp+0x17],xmm0
   140037885:	jmp    0x14003789b
   140037887:	movsd  xmm0,QWORD PTR [rbp+0x2f]
   14003788c:	movsd  xmm1,QWORD PTR [rbp+0x27]
   140037891:	movsd  QWORD PTR [rbp+0x17],xmm0
   140037896:	movsd  QWORD PTR [rbp+0x1f],xmm1
   14003789b:	movss  xmm0,DWORD PTR [rbp+0x23]
   1400378a0:	movss  xmm3,DWORD PTR [rbp+0x1b]
   1400378a5:	movsd  xmm2,QWORD PTR [rbp-0x19]
   1400378aa:	mov    rcx,QWORD PTR [rip+0x1dc3f]        # 0x1400554f0
   1400378b1:	lea    rdx,[rip+0xce88]        # 0x140044740
   1400378b8:	movss  xmm1,DWORD PTR [rbp+0x1f]
   1400378bd:	movsd  xmm4,QWORD PTR [rbp-0x11]
   1400378c2:	unpcklps xmm1,xmm0
   1400378c5:	movss  xmm0,DWORD PTR [rbp+0x17]
   1400378ca:	subsd  xmm4,xmm1
   1400378ce:	unpcklps xmm0,xmm3
   1400378d1:	movsd  xmm3,QWORD PTR [rbp-0x1]
   1400378d6:	subsd  xmm2,xmm0
   1400378da:	movsd  QWORD PTR [rsp+0x28],xmm4
   1400378e0:	movq   r9,xmm3
   1400378e5:	movsd  QWORD PTR [rsp+0x20],xmm2
   1400378eb:	movsd  xmm2,QWORD PTR [rbp-0x9]
   1400378f0:	movq   r8,xmm2
   1400378f5:	call   QWORD PTR [rip+0x59c5]        # 0x14003d2c0
   1400378fb:	mov    rcx,QWORD PTR [rip+0x1dbee]        # 0x1400554f0
   140037902:	lea    rdx,[rip+0xcb77]        # 0x140044480
   140037909:	call   QWORD PTR [rip+0x59b1]        # 0x14003d2c0
   14003790f:	movsxd rax,DWORD PTR [rip+0x1cd7a]        # 0x140054690
   140037916:	lea    rbx,[rip+0x1ccd3]        # 0x1400545f0
   14003791d:	lea    rcx,[rax+rax*4]
   140037921:	lea    r11,[rip+0xca8c]        # 0x1400443b4
   140037928:	lea    r8,[rip+0xca89]        # 0x1400443b8
   14003792f:	mov    edx,DWORD PTR [rbx+rcx*8+0x8]
   140037933:	mov    r10d,DWORD PTR [rbx+rcx*8+0x4]
   140037938:	movsx  eax,BYTE PTR [rbx+rcx*8+0x1c]
   14003793d:	mov    r9d,DWORD PTR [rbx+rcx*8]
   140037941:	cmp    BYTE PTR [rbx+rcx*8+0x1b],0x0
   140037946:	mov    rcx,QWORD PTR [rip+0x1dba3]        # 0x1400554f0
   14003794d:	mov    DWORD PTR [rsp+0x48],eax
   140037951:	mov    DWORD PTR [rsp+0x40],edx
   140037955:	mov    DWORD PTR [rsp+0x38],r10d
   14003795a:	mov    DWORD PTR [rsp+0x30],r9d
   14003795f:	mov    DWORD PTR [rsp+0x28],edx
   140037963:	lea    rdx,[rip+0xca56]        # 0x1400443c0
   14003796a:	cmovne r8,r11
   14003796e:	mov    DWORD PTR [rsp+0x20],r10d
   140037973:	call   QWORD PTR [rip+0x5947]        # 0x14003d2c0
   140037979:	mov    rcx,QWORD PTR [rip+0x1db70]        # 0x1400554f0
   140037980:	lea    rdx,[rip+0xcb21]        # 0x1400444a8
   140037987:	mov    rbx,QWORD PTR [rsp+0xd0]
   14003798f:	add    rsp,0xc0
   140037996:	pop    rbp
   140037997:	rex.W jmp QWORD PTR [rip+0x5922]        # 0x14003d2c0
   14003799e:	int3   
   14003799f:	int3   
   1400379a0:	xor    eax,eax
   1400379a2:	mov    BYTE PTR [rip+0x1cc5f],0x0        # 0x140054608
   1400379a9:	mov    WORD PTR [rip+0x1cc58],0x1        # 0x14005460a
   1400379b2:	mov    DWORD PTR [rip+0x1ccd8],eax        # 0x140054690
   1400379b8:	mov    QWORD PTR [rip+0x1cc35],rax        # 0x1400545f4
   1400379bf:	mov    DWORD PTR [rip+0x1cc2b],eax        # 0x1400545f0
   1400379c5:	lea    rax,[rip+0xa5d0]        # 0x140041f9c
   1400379cc:	mov    BYTE PTR [rip+0x1cc39],0x1        # 0x14005460c
   1400379d3:	mov    QWORD PTR [rip+0x1cc26],rax        # 0x140054600
   1400379da:	ret    
   1400379db:	int3   
   1400379dc:	int3   
   1400379dd:	int3   
   1400379de:	int3   
   1400379df:	int3   
   1400379e0:	rex.W jmp QWORD PTR [rip+0x57f9]        # 0x14003d1e0
   1400379e7:	int3   
   1400379e8:	int3   
   1400379e9:	int3   
   1400379ea:	int3   
   1400379eb:	int3   
   1400379ec:	int3   
   1400379ed:	int3   
   1400379ee:	int3   
   1400379ef:	int3   
   1400379f0:	rex.W jmp QWORD PTR [rip+0x56d1]        # 0x14003d0c8
   1400379f7:	int3   
   1400379f8:	int3   
   1400379f9:	int3   
   1400379fa:	int3   
   1400379fb:	int3   
   1400379fc:	int3   
   1400379fd:	int3   
   1400379fe:	int3   
   1400379ff:	int3   
   140037a00:	mov    QWORD PTR [rsp+0x8],rbx
   140037a05:	mov    QWORD PTR [rsp+0x10],rsi
   140037a0a:	mov    QWORD PTR [rsp+0x18],rdi
   140037a0f:	push   rbp
   140037a10:	push   r12
   140037a12:	push   r13
   140037a14:	push   r14
   140037a16:	push   r15
   140037a18:	mov    rbp,rsp
   140037a1b:	sub    rsp,0x80
   140037a22:	movsxd r14,edx
   140037a25:	or     eax,0xffffffff
   140037a28:	mov    rbx,rcx
   140037a2b:	mov    rcx,QWORD PTR [rip+0x1dabe]        # 0x1400554f0
   140037a32:	xor    edi,edi
   140037a34:	cmp    r14d,r8d
   140037a37:	mov    r15d,0x1
   140037a3d:	lea    rdx,[rip+0xc5a4]        # 0x140043fe8
   140037a44:	mov    r13d,r8d
   140037a47:	mov    r12d,r15d
   140037a4a:	mov    esi,edi
   140037a4c:	cmovg  r12d,eax
   140037a50:	call   QWORD PTR [rip+0x586a]        # 0x14003d2c0
   140037a56:	cmp    r14d,r13d
   140037a59:	je     0x140037c3d
   140037a5f:	movsxd rax,r12d
   140037a62:	lea    rbx,[rbx+r14*8]
   140037a66:	movaps XMMWORD PTR [rsp+0x70],xmm6
   140037a6b:	movsd  xmm6,QWORD PTR [rip+0x5965]        # 0x14003d3d8
   140037a73:	lea    rax,[rax*8+0x0]
   140037a7b:	add    rbx,0x8
   140037a7f:	mov    QWORD PTR [rbp+0x48],rax
   140037a83:	nop    DWORD PTR [rax+0x0]
   140037a87:	nop    WORD PTR [rax+rax*1+0x0]
   140037a90:	mov    eax,0x55555556
   140037a95:	mov    ecx,r15d
   140037a98:	imul   r15d
   140037a9b:	mov    eax,edx
   140037a9d:	shr    eax,0x1f
   140037aa0:	add    edx,eax
   140037aa2:	lea    eax,[rdx+rdx*2]
   140037aa5:	sub    ecx,eax
   140037aa7:	je     0x140037b82
   140037aad:	dec    ecx
   140037aaf:	je     0x140037b77
   140037ab5:	dec    ecx
   140037ab7:	jne    0x140037c25
   140037abd:	mov    eax,DWORD PTR [rbx-0x8]
   140037ac0:	cmp    eax,edi
   140037ac2:	jne    0x140037b0a
   140037ac4:	cmp    DWORD PTR [rbx-0x4],esi
   140037ac7:	jne    0x140037b0a
   140037ac9:	mov    ecx,DWORD PTR [rbx-0x18]
   140037acc:	cmp    ecx,edi
   140037ace:	jne    0x140037ad5
   140037ad0:	cmp    DWORD PTR [rbx-0x14],esi
   140037ad3:	je     0x140037ade
   140037ad5:	cmp    DWORD PTR [rbx],edi
   140037ad7:	jne    0x140037aee
   140037ad9:	cmp    DWORD PTR [rbx+0x4],esi
   140037adc:	jne    0x140037aee
   140037ade:	mov    eax,DWORD PTR [rbx]
   140037ae0:	add    eax,ecx
   140037ae2:	movd   xmm0,eax
   140037ae6:	mov    eax,DWORD PTR [rbx-0x14]
   140037ae9:	add    eax,DWORD PTR [rbx+0x4]
   140037aec:	jmp    0x140037b15
   140037aee:	movd   xmm0,edi
   140037af2:	movd   xmm1,esi
   140037af6:	cvtdq2pd xmm0,xmm0
   140037afa:	cvtdq2pd xmm1,xmm1
   140037afe:	movsd  QWORD PTR [rbp-0x60],xmm0
   140037b03:	movsd  QWORD PTR [rbp-0x58],xmm1
   140037b08:	jmp    0x140037b33
   140037b0a:	add    eax,edi
   140037b0c:	movd   xmm0,eax
   140037b10:	mov    eax,DWORD PTR [rbx-0x4]
   140037b13:	add    eax,esi
   140037b15:	cvtdq2pd xmm0,xmm0
   140037b19:	mulsd  xmm0,xmm6
   140037b1d:	movsd  QWORD PTR [rbp-0x60],xmm0
   140037b22:	movd   xmm0,eax
   140037b26:	cvtdq2pd xmm0,xmm0
   140037b2a:	mulsd  xmm0,xmm6
   140037b2e:	movsd  QWORD PTR [rbp-0x58],xmm0
   140037b33:	cmp    DWORD PTR [rip+0x1caa2],0x0        # 0x1400545dc
   140037b3a:	movups xmm0,XMMWORD PTR [rbp-0x60]
   140037b3e:	movaps XMMWORD PTR [rbp-0x50],xmm0
   140037b42:	jne    0x140037b4a
   140037b44:	movups XMMWORD PTR [rbp-0x40],xmm0
   140037b48:	jmp    0x140037b5e
   140037b4a:	movsd  xmm0,QWORD PTR [rbp-0x48]
   140037b4f:	movsd  xmm1,QWORD PTR [rbp-0x50]
   140037b54:	movsd  QWORD PTR [rbp-0x40],xmm0
   140037b59:	movsd  QWORD PTR [rbp-0x38],xmm1
   140037b5e:	movss  xmm1,DWORD PTR [rbp-0x3c]
   140037b63:	movss  xmm0,DWORD PTR [rbp-0x34]
   140037b68:	movss  xmm3,DWORD PTR [rbp-0x38]
   140037b6d:	movss  xmm2,DWORD PTR [rbp-0x40]
   140037b72:	jmp    0x140037c01
   140037b77:	mov    edi,DWORD PTR [rbx-0x8]
   140037b7a:	mov    esi,DWORD PTR [rbx-0x4]
   140037b7d:	jmp    0x140037c25
   140037b82:	cmp    DWORD PTR [rip+0x1ca53],0x0        # 0x1400545dc
   140037b89:	movd   xmm0,DWORD PTR [rbx-0x8]
   140037b8e:	movd   xmm1,DWORD PTR [rbx-0x4]
   140037b93:	cvtdq2pd xmm0,xmm0
   140037b97:	cvtdq2pd xmm1,xmm1
   140037b9b:	movsd  QWORD PTR [rbp-0x60],xmm0
   140037ba0:	movss  xmm0,DWORD PTR [rbp-0x60]
   140037ba5:	movsd  QWORD PTR [rbp-0x58],xmm1
   140037baa:	movss  xmm1,DWORD PTR [rbp-0x5c]
   140037baf:	movss  DWORD PTR [rbp-0x30],xmm0
   140037bb4:	movss  xmm0,DWORD PTR [rbp-0x58]
   140037bb9:	movss  DWORD PTR [rbp-0x2c],xmm1
   140037bbe:	movss  xmm1,DWORD PTR [rbp-0x54]
   140037bc3:	movss  DWORD PTR [rbp-0x28],xmm0
   140037bc8:	movss  DWORD PTR [rbp-0x24],xmm1
   140037bcd:	jne    0x140037bd9
   140037bcf:	movaps xmm0,XMMWORD PTR [rbp-0x30]
   140037bd3:	movups XMMWORD PTR [rbp-0x20],xmm0
   140037bd7:	jmp    0x140037bed
   140037bd9:	movsd  xmm0,QWORD PTR [rbp-0x28]
   140037bde:	movsd  xmm1,QWORD PTR [rbp-0x30]
   140037be3:	movsd  QWORD PTR [rbp-0x20],xmm0
   140037be8:	movsd  QWORD PTR [rbp-0x18],xmm1
   140037bed:	movss  xmm1,DWORD PTR [rbp-0x1c]
   140037bf2:	movss  xmm0,DWORD PTR [rbp-0x14]
   140037bf7:	movss  xmm3,DWORD PTR [rbp-0x18]
   140037bfc:	movss  xmm2,DWORD PTR [rbp-0x20]
   140037c01:	mov    rcx,QWORD PTR [rip+0x1d8e8]        # 0x1400554f0
   140037c08:	unpcklps xmm3,xmm0
   140037c0b:	unpcklps xmm2,xmm1
   140037c0e:	lea    rdx,[rip+0xc3e3]        # 0x140043ff8
   140037c15:	movq   r9,xmm3
   140037c1a:	movq   r8,xmm2
   140037c1f:	call   QWORD PTR [rip+0x569b]        # 0x14003d2c0
   140037c25:	add    rbx,QWORD PTR [rbp+0x48]
   140037c29:	add    r14d,r12d
   140037c2c:	inc    r15d
   140037c2f:	cmp    r14d,r13d
   140037c32:	jne    0x140037a90
   140037c38:	movaps xmm6,XMMWORD PTR [rsp+0x70]
   140037c3d:	mov    rcx,QWORD PTR [rip+0x1d8ac]        # 0x1400554f0
   140037c44:	lea    rdx,[rip+0xc3bd]        # 0x140044008
   140037c4b:	lea    r11,[rsp+0x80]
   140037c53:	mov    rbx,QWORD PTR [r11+0x30]
   140037c57:	mov    rsi,QWORD PTR [r11+0x38]
   140037c5b:	mov    rdi,QWORD PTR [r11+0x40]
   140037c5f:	mov    rsp,r11
   140037c62:	pop    r15
   140037c64:	pop    r14
   140037c66:	pop    r13
   140037c68:	pop    r12
   140037c6a:	pop    rbp
   140037c6b:	rex.W jmp QWORD PTR [rip+0x564e]        # 0x14003d2c0
   140037c72:	int3   
   140037c73:	int3   
   140037c74:	int3   
   140037c75:	int3   
   140037c76:	int3   
   140037c77:	int3   
   140037c78:	int3   
   140037c79:	int3   
   140037c7a:	int3   
   140037c7b:	int3   
   140037c7c:	int3   
   140037c7d:	int3   
   140037c7e:	int3   
   140037c7f:	int3   
   140037c80:	ret    0x0
   140037c83:	int3   
   140037c84:	int3   
   140037c85:	int3   
   140037c86:	int3   
   140037c87:	int3   
   140037c88:	int3   
   140037c89:	int3   
   140037c8a:	int3   
   140037c8b:	int3   
   140037c8c:	int3   
   140037c8d:	int3   
   140037c8e:	int3   
   140037c8f:	int3   
   140037c90:	sub    rsp,0x28
   140037c94:	mov    rcx,QWORD PTR [rip+0x1d855]        # 0x1400554f0
   140037c9b:	lea    rdx,[rip+0xc7de]        # 0x140044480
   140037ca2:	call   QWORD PTR [rip+0x5618]        # 0x14003d2c0
   140037ca8:	call   0x140037f20
   140037cad:	mov    rcx,QWORD PTR [rip+0x1d83c]        # 0x1400554f0
   140037cb4:	lea    rdx,[rip+0xc7ed]        # 0x1400444a8
   140037cbb:	add    rsp,0x28
   140037cbf:	rex.W jmp QWORD PTR [rip+0x55fa]        # 0x14003d2c0
   140037cc6:	int3   
   140037cc7:	int3   
   140037cc8:	int3   
   140037cc9:	int3   
   140037cca:	int3   
   140037ccb:	int3   
   140037ccc:	int3   
   140037ccd:	int3   
   140037cce:	int3   
   140037ccf:	int3   
   140037cd0:	cmp    DWORD PTR [rip+0x1c905],0x0        # 0x1400545dc
   140037cd7:	jne    0x140037ceb
   140037cd9:	mov    rax,QWORD PTR [rdx]
   140037cdc:	mov    QWORD PTR [rcx],rax
   140037cdf:	mov    rax,QWORD PTR [rdx+0x8]
   140037ce3:	mov    QWORD PTR [rcx+0x8],rax
   140037ce7:	mov    rax,rcx
   140037cea:	ret    
   140037ceb:	mov    rax,QWORD PTR [rdx+0x8]
   140037cef:	mov    QWORD PTR [rcx],rax
   140037cf2:	mov    rax,QWORD PTR [rdx]
   140037cf5:	mov    QWORD PTR [rcx+0x8],rax
   140037cf9:	mov    rax,rcx
   140037cfc:	ret    
   140037cfd:	int3   
   140037cfe:	int3   
   140037cff:	int3   
   140037d00:	mov    QWORD PTR [rsp+0x8],rbx
   140037d05:	mov    QWORD PTR [rsp+0x10],rsi
   140037d0a:	push   rdi
   140037d0b:	sub    rsp,0x50
   140037d0f:	mov    rsi,rcx
   140037d12:	mov    rcx,QWORD PTR [rip+0x1d7d7]        # 0x1400554f0
   140037d19:	movsxd rbx,edx
   140037d1c:	lea    rdx,[rip+0xc2c5]        # 0x140043fe8
   140037d23:	call   QWORD PTR [rip+0x5597]        # 0x14003d2c0
   140037d29:	xor    edi,edi
   140037d2b:	test   rbx,rbx
   140037d2e:	jle    0x140037df8
   140037d34:	cmp    DWORD PTR [rip+0x1c8a1],0x0        # 0x1400545dc
   140037d3b:	movd   xmm0,DWORD PTR [rsi+rdi*8]
   140037d40:	movd   xmm1,DWORD PTR [rsi+rdi*8+0x4]
   140037d46:	cvtdq2pd xmm0,xmm0
   140037d4a:	cvtdq2pd xmm1,xmm1
   140037d4e:	movsd  QWORD PTR [rsp+0x40],xmm0
   140037d54:	movss  xmm0,DWORD PTR [rsp+0x40]
   140037d5a:	movsd  QWORD PTR [rsp+0x48],xmm1
   140037d60:	movss  xmm1,DWORD PTR [rsp+0x44]
   140037d66:	movss  DWORD PTR [rsp+0x20],xmm0
   140037d6c:	movss  xmm0,DWORD PTR [rsp+0x48]
   140037d72:	movss  DWORD PTR [rsp+0x24],xmm1
   140037d78:	movss  xmm1,DWORD PTR [rsp+0x4c]
   140037d7e:	movss  DWORD PTR [rsp+0x28],xmm0
   140037d84:	movss  DWORD PTR [rsp+0x2c],xmm1
   140037d8a:	jne    0x140037d98
   140037d8c:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140037d91:	movups XMMWORD PTR [rsp+0x30],xmm0
   140037d96:	jmp    0x140037db0
   140037d98:	movsd  xmm0,QWORD PTR [rsp+0x28]
   140037d9e:	movsd  xmm1,QWORD PTR [rsp+0x20]
   140037da4:	movsd  QWORD PTR [rsp+0x30],xmm0
   140037daa:	movsd  QWORD PTR [rsp+0x38],xmm1
   140037db0:	movss  xmm1,DWORD PTR [rsp+0x34]
   140037db6:	movss  xmm0,DWORD PTR [rsp+0x3c]
   140037dbc:	movss  xmm3,DWORD PTR [rsp+0x38]
   140037dc2:	mov    rcx,QWORD PTR [rip+0x1d727]        # 0x1400554f0
   140037dc9:	lea    rdx,[rip+0xc228]        # 0x140043ff8
   140037dd0:	unpcklps xmm3,xmm0
   140037dd3:	movss  xmm2,DWORD PTR [rsp+0x30]
   140037dd9:	movq   r9,xmm3
   140037dde:	unpcklps xmm2,xmm1
   140037de1:	movq   r8,xmm2
   140037de6:	call   QWORD PTR [rip+0x54d4]        # 0x14003d2c0
   140037dec:	inc    rdi
   140037def:	cmp    rdi,rbx
   140037df2:	jl     0x140037d34
   140037df8:	mov    rcx,QWORD PTR [rip+0x1d6f1]        # 0x1400554f0
   140037dff:	lea    rdx,[rip+0xc202]        # 0x140044008
   140037e06:	mov    rbx,QWORD PTR [rsp+0x60]
   140037e0b:	mov    rsi,QWORD PTR [rsp+0x68]
   140037e10:	add    rsp,0x50
   140037e14:	pop    rdi
   140037e15:	rex.W jmp QWORD PTR [rip+0x54a4]        # 0x14003d2c0
   140037e1c:	int3   
   140037e1d:	int3   
   140037e1e:	int3   
   140037e1f:	int3   
   140037e20:	mov    QWORD PTR [rsp+0x10],rbx
   140037e25:	mov    QWORD PTR [rsp+0x18],rsi
   140037e2a:	push   rdi
   140037e2b:	sub    rsp,0x20
   140037e2f:	mov    r8,QWORD PTR [rip+0x1c79a]        # 0x1400545d0
   140037e36:	xor    ebx,ebx
   140037e38:	mov    rdi,rcx
   140037e3b:	test   r8,r8
   140037e3e:	jne    0x140037e5f
   140037e40:	mov    esi,0x40
   140037e45:	mov    ecx,esi
   140037e47:	mov    DWORD PTR [rip+0x1c78b],esi        # 0x1400545d8
   140037e4d:	call   QWORD PTR [rip+0x5315]        # 0x14003d168
   140037e53:	mov    r8,rax
   140037e56:	mov    QWORD PTR [rip+0x1c773],rax        # 0x1400545d0
   140037e5d:	jmp    0x140037e65
   140037e5f:	mov    esi,DWORD PTR [rip+0x1c773]        # 0x1400545d8
   140037e65:	mov    rax,r8
   140037e68:	cmp    BYTE PTR [rdi],bl
   140037e6a:	je     0x140037f07
   140037e70:	mov    QWORD PTR [rsp+0x30],rbp
   140037e75:	movabs rbp,0x280000001
   140037e7f:	nop
   140037e80:	lea    ecx,[rsi-0x8]
   140037e83:	cmp    ebx,ecx
   140037e85:	jle    0x140037ea8
   140037e87:	lea    eax,[rsi+rsi*1]
   140037e8a:	mov    rcx,r8
   140037e8d:	movsxd rsi,eax
   140037e90:	mov    rdx,rsi
   140037e93:	mov    DWORD PTR [rip+0x1c73f],esi        # 0x1400545d8
   140037e99:	call   QWORD PTR [rip+0x5209]        # 0x14003d0a8
   140037e9f:	mov    r8,rax
   140037ea2:	movsxd rax,ebx
   140037ea5:	add    rax,r8
   140037ea8:	movzx  edx,BYTE PTR [rdi]
   140037eab:	movzx  ecx,dl
   140037eae:	cmp    dl,0x9
   140037eb1:	je     0x140037ece
   140037eb3:	sub    cl,0x5c
   140037eb6:	cmp    cl,0x21
   140037eb9:	ja     0x140037ec5
   140037ebb:	bt     rbp,rcx
   140037ebf:	jae    0x140037ec5
   140037ec1:	test   dl,dl
   140037ec3:	jne    0x140037ed0
   140037ec5:	mov    BYTE PTR [rax],dl
   140037ec7:	inc    rax
   140037eca:	inc    ebx
   140037ecc:	jmp    0x140037edd
   140037ece:	mov    dl,0x74
   140037ed0:	mov    BYTE PTR [rax],0x5c
   140037ed3:	mov    BYTE PTR [rax+0x1],dl
   140037ed6:	add    rax,0x2
   140037eda:	add    ebx,0x2
   140037edd:	inc    rdi
   140037ee0:	cmp    BYTE PTR [rdi],0x0
   140037ee3:	jne    0x140037e80
   140037ee5:	mov    rbp,QWORD PTR [rsp+0x30]
   140037eea:	mov    BYTE PTR [rax],0x0
   140037eed:	mov    QWORD PTR [rip+0x1c6dc],r8        # 0x1400545d0
   140037ef4:	mov    rax,r8
   140037ef7:	mov    rbx,QWORD PTR [rsp+0x38]
   140037efc:	mov    rsi,QWORD PTR [rsp+0x40]
   140037f01:	add    rsp,0x20
   140037f05:	pop    rdi
   140037f06:	ret    
   140037f07:	mov    rsi,QWORD PTR [rsp+0x40]
   140037f0c:	mov    BYTE PTR [r8],bl
   140037f0f:	mov    rbx,QWORD PTR [rsp+0x38]
   140037f14:	add    rsp,0x20
   140037f18:	pop    rdi
   140037f19:	ret    
   140037f1a:	int3   
   140037f1b:	int3   
   140037f1c:	int3   
   140037f1d:	int3   
   140037f1e:	int3   
   140037f1f:	int3   
   140037f20:	rex push rbx
   140037f22:	sub    rsp,0x50
   140037f26:	movsxd rax,DWORD PTR [rip+0x1c763]        # 0x140054690
   140037f2d:	lea    r11,[rip+0x1c6bc]        # 0x1400545f0
   140037f34:	lea    rbx,[rip+0xc479]        # 0x1400443b4
   140037f3b:	lea    rcx,[rax+rax*4]
   140037f3f:	lea    r8,[rip+0xc472]        # 0x1400443b8
   140037f46:	mov    edx,DWORD PTR [r11+rcx*8+0x8]
   140037f4b:	mov    r10d,DWORD PTR [r11+rcx*8+0x4]
   140037f50:	movsx  eax,BYTE PTR [r11+rcx*8+0x1c]
   140037f56:	mov    r9d,DWORD PTR [r11+rcx*8]
   140037f5a:	cmp    BYTE PTR [r11+rcx*8+0x1b],0x0
   140037f60:	mov    rcx,QWORD PTR [rip+0x1d589]        # 0x1400554f0
   140037f67:	mov    DWORD PTR [rsp+0x48],eax
   140037f6b:	mov    DWORD PTR [rsp+0x40],edx
   140037f6f:	mov    DWORD PTR [rsp+0x38],r10d
   140037f74:	mov    DWORD PTR [rsp+0x30],r9d
   140037f79:	mov    DWORD PTR [rsp+0x28],edx
   140037f7d:	lea    rdx,[rip+0xc43c]        # 0x1400443c0
   140037f84:	cmovne r8,rbx
   140037f88:	mov    DWORD PTR [rsp+0x20],r10d
   140037f8d:	call   QWORD PTR [rip+0x532d]        # 0x14003d2c0
   140037f93:	add    rsp,0x50
   140037f97:	pop    rbx
   140037f98:	ret    
   140037f99:	int3   
   140037f9a:	int3   
   140037f9b:	int3   
   140037f9c:	int3   
   140037f9d:	int3   
   140037f9e:	int3   
   140037f9f:	int3   
   140037fa0:	sub    rsp,0x28
   140037fa4:	mov    rcx,QWORD PTR [rip+0x1d545]        # 0x1400554f0
   140037fab:	lea    rdx,[rip+0xc88e]        # 0x140044840
   140037fb2:	call   QWORD PTR [rip+0x5308]        # 0x14003d2c0
   140037fb8:	mov    rcx,QWORD PTR [rip+0x1d531]        # 0x1400554f0
   140037fbf:	lea    rdx,[rip+0xc89e]        # 0x140044864
   140037fc6:	add    rsp,0x28
   140037fca:	rex.W jmp QWORD PTR [rip+0x52ef]        # 0x14003d2c0
   140037fd1:	int3   
   140037fd2:	int3   
   140037fd3:	int3   
   140037fd4:	int3   
   140037fd5:	int3   
   140037fd6:	int3   
   140037fd7:	int3   
   140037fd8:	int3   
   140037fd9:	int3   
   140037fda:	int3   
   140037fdb:	int3   
   140037fdc:	int3   
   140037fdd:	int3   
   140037fde:	int3   
   140037fdf:	int3   
   140037fe0:	sub    rsp,0x28
   140037fe4:	lea    r8,[rip+0x542d]        # 0x14003d418
   140037feb:	call   0x14001c3e0
   140037ff0:	cmp    BYTE PTR [rax],0x0
   140037ff3:	je     0x140038011
   140037ff5:	mov    rcx,QWORD PTR [rip+0x1d4f4]        # 0x1400554f0
   140037ffc:	lea    rdx,[rip+0x9519]        # 0x14004151c
   140038003:	mov    r8,rax
   140038006:	add    rsp,0x28
   14003800a:	rex.W jmp QWORD PTR [rip+0x52af]        # 0x14003d2c0
   140038011:	add    rsp,0x28
   140038015:	ret    
   140038016:	int3   
   140038017:	int3   
   140038018:	int3   
   140038019:	int3   
   14003801a:	int3   
   14003801b:	int3   
   14003801c:	int3   
   14003801d:	int3   
   14003801e:	int3   
   14003801f:	int3   
   140038020:	rex push rbx
   140038022:	sub    rsp,0x30
   140038026:	cmp    DWORD PTR [rip+0x1ad6b],0x0        # 0x140052d98
   14003802d:	mov    rbx,rcx
   140038030:	je     0x1400380a9
   140038032:	mov    r8d,DWORD PTR [rdx+0xc]
   140038036:	mov    eax,DWORD PTR [rdx+0x8]
   140038039:	mov    r9d,DWORD PTR [rdx+0x4]
   14003803d:	mov    rcx,QWORD PTR [rip+0x1d4ac]        # 0x1400554f0
   140038044:	inc    r8d
   140038047:	inc    eax
   140038049:	mov    DWORD PTR [rsp+0x28],r8d
   14003804e:	mov    r8d,DWORD PTR [rdx]
   140038051:	lea    rdx,[rip+0xc818]        # 0x140044870
   140038058:	mov    DWORD PTR [rsp+0x20],eax
   14003805c:	call   QWORD PTR [rip+0x525e]        # 0x14003d2c0
   140038062:	lea    rdx,[rip+0x6627]        # 0x14003e690
   140038069:	mov    rcx,rbx
   14003806c:	call   0x140027500
   140038071:	lea    r8,[rip+0x53a0]        # 0x14003d418
   140038078:	mov    rcx,rbx
   14003807b:	mov    rdx,rax
   14003807e:	call   0x14001c3e0
   140038083:	cmp    BYTE PTR [rax],0x0
   140038086:	je     0x14003809f
   140038088:	mov    rcx,QWORD PTR [rip+0x1d461]        # 0x1400554f0
   14003808f:	lea    rdx,[rip+0x9486]        # 0x14004151c
   140038096:	mov    r8,rax
   140038099:	call   QWORD PTR [rip+0x5221]        # 0x14003d2c0
   14003809f:	mov    DWORD PTR [rip+0x1acef],0x0        # 0x140052d98
   1400380a9:	add    rsp,0x30
   1400380ad:	pop    rbx
   1400380ae:	ret    
   1400380af:	int3   
   1400380b0:	ret    0x0
   1400380b3:	int3   
   1400380b4:	int3   
   1400380b5:	int3   
   1400380b6:	int3   
   1400380b7:	int3   
   1400380b8:	int3   
   1400380b9:	int3   
   1400380ba:	int3   
   1400380bb:	int3   
   1400380bc:	int3   
   1400380bd:	int3   
   1400380be:	int3   
   1400380bf:	int3   
   1400380c0:	sub    rsp,0x28
   1400380c4:	mov    eax,DWORD PTR [rip+0x1c5e2]        # 0x1400546ac
   1400380ca:	test   eax,eax
   1400380cc:	je     0x1400380ee
   1400380ce:	lea    rdx,[rip+0xc7bb]        # 0x140044890
   1400380d5:	lea    rcx,[rip+0x9684]        # 0x140041760
   1400380dc:	mov    r8d,0x68
   1400380e2:	call   QWORD PTR [rip+0x4fa8]        # 0x14003d090
   1400380e8:	mov    eax,DWORD PTR [rip+0x1c5be]        # 0x1400546ac
   1400380ee:	cdqe   
   1400380f0:	lea    rdx,[rip+0x1c5b9]        # 0x1400546b0
   1400380f7:	lea    rcx,[rax+rax*2]
   1400380fb:	lea    rax,[rip+0x5316]        # 0x14003d418
   140038102:	mov    QWORD PTR [rdx+rcx*8+0x8],rax
   140038107:	lea    rax,[rip+0x63e6]        # 0x14003e4f4
   14003810e:	mov    QWORD PTR [rdx+rcx*8],rax
   140038112:	mov    QWORD PTR [rdx+rcx*8+0x10],0x0
   14003811b:	add    rsp,0x28
   14003811f:	ret    
   140038120:	ret    0x0
   140038123:	int3   
   140038124:	int3   
   140038125:	int3   
   140038126:	int3   
   140038127:	int3   
   140038128:	int3   
   140038129:	int3   
   14003812a:	int3   
   14003812b:	int3   
   14003812c:	int3   
   14003812d:	int3   
   14003812e:	int3   
   14003812f:	int3   
   140038130:	ret    0x0
   140038133:	int3   
   140038134:	int3   
   140038135:	int3   
   140038136:	int3   
   140038137:	int3   
   140038138:	int3   
   140038139:	int3   
   14003813a:	int3   
   14003813b:	int3   
   14003813c:	int3   
   14003813d:	int3   
   14003813e:	int3   
   14003813f:	int3   
   140038140:	ret    0x0
   140038143:	int3   
   140038144:	int3   
   140038145:	int3   
   140038146:	int3   
   140038147:	int3   
   140038148:	int3   
   140038149:	int3   
   14003814a:	int3   
   14003814b:	int3   
   14003814c:	int3   
   14003814d:	int3   
   14003814e:	int3   
   14003814f:	int3   
   140038150:	ret    0x0
   140038153:	int3   
   140038154:	int3   
   140038155:	int3   
   140038156:	int3   
   140038157:	int3   
   140038158:	int3   
   140038159:	int3   
   14003815a:	int3   
   14003815b:	int3   
   14003815c:	int3   
   14003815d:	int3   
   14003815e:	int3   
   14003815f:	int3   
   140038160:	ret    0x0
   140038163:	int3   
   140038164:	int3   
   140038165:	int3   
   140038166:	int3   
   140038167:	int3   
   140038168:	int3   
   140038169:	int3   
   14003816a:	int3   
   14003816b:	int3   
   14003816c:	int3   
   14003816d:	int3   
   14003816e:	int3   
   14003816f:	int3   
   140038170:	ret    0x0
   140038173:	int3   
   140038174:	int3   
   140038175:	int3   
   140038176:	int3   
   140038177:	int3   
   140038178:	int3   
   140038179:	int3   
   14003817a:	int3   
   14003817b:	int3   
   14003817c:	int3   
   14003817d:	int3   
   14003817e:	int3   
   14003817f:	int3   
   140038180:	ret    0x0
   140038183:	int3   
   140038184:	int3   
   140038185:	int3   
   140038186:	int3   
   140038187:	int3   
   140038188:	int3   
   140038189:	int3   
   14003818a:	int3   
   14003818b:	int3   
   14003818c:	int3   
   14003818d:	int3   
   14003818e:	int3   
   14003818f:	int3   
   140038190:	rex push rbx
   140038192:	sub    rsp,0x20
   140038196:	mov    r8,QWORD PTR [rcx+0x10]
   14003819a:	mov    rbx,rcx
   14003819d:	mov    rcx,QWORD PTR [rip+0x1d34c]        # 0x1400554f0
   1400381a4:	lea    rdx,[rip+0xc755]        # 0x140044900
   1400381ab:	call   QWORD PTR [rip+0x510f]        # 0x14003d2c0
   1400381b1:	mov    rdx,QWORD PTR [rip+0x1d200]        # 0x1400553b8
   1400381b8:	lea    r8,[rip+0x5259]        # 0x14003d418
   1400381bf:	mov    rcx,rbx
   1400381c2:	call   0x14001c3e0
   1400381c7:	cmp    BYTE PTR [rax],0x0
   1400381ca:	je     0x1400381e9
   1400381cc:	mov    rcx,QWORD PTR [rip+0x1d31d]        # 0x1400554f0
   1400381d3:	lea    rdx,[rip+0x9342]        # 0x14004151c
   1400381da:	mov    r8,rax
   1400381dd:	add    rsp,0x20
   1400381e1:	pop    rbx
   1400381e2:	rex.W jmp QWORD PTR [rip+0x50d7]        # 0x14003d2c0
   1400381e9:	add    rsp,0x20
   1400381ed:	pop    rbx
   1400381ee:	ret    
   1400381ef:	int3   
   1400381f0:	ret    0x0
   1400381f3:	int3   
   1400381f4:	int3   
   1400381f5:	int3   
   1400381f6:	int3   
   1400381f7:	int3   
   1400381f8:	int3   
   1400381f9:	int3   
   1400381fa:	int3   
   1400381fb:	int3   
   1400381fc:	int3   
   1400381fd:	int3   
   1400381fe:	int3   
   1400381ff:	int3   
   140038200:	rex push rbx
   140038202:	sub    rsp,0x20
   140038206:	mov    r9,QWORD PTR [rcx+0x10]
   14003820a:	mov    r8,QWORD PTR [rcx+0x18]
   14003820e:	mov    rbx,rcx
   140038211:	mov    rcx,QWORD PTR [rip+0x1d2d8]        # 0x1400554f0
   140038218:	mov    r9,QWORD PTR [r9+0x10]
   14003821c:	mov    r8,QWORD PTR [r8+0x10]
   140038220:	lea    rdx,[rip+0xc6f1]        # 0x140044918
   140038227:	call   QWORD PTR [rip+0x5093]        # 0x14003d2c0
   14003822d:	mov    rdx,QWORD PTR [rip+0x1d0f4]        # 0x140055328
   140038234:	lea    r8,[rip+0x51dd]        # 0x14003d418
   14003823b:	mov    rcx,rbx
   14003823e:	call   0x14001c3e0
   140038243:	cmp    BYTE PTR [rax],0x0
   140038246:	je     0x140038265
   140038248:	mov    rcx,QWORD PTR [rip+0x1d2a1]        # 0x1400554f0
   14003824f:	lea    rdx,[rip+0x92c6]        # 0x14004151c
   140038256:	mov    r8,rax
   140038259:	add    rsp,0x20
   14003825d:	pop    rbx
   14003825e:	rex.W jmp QWORD PTR [rip+0x505b]        # 0x14003d2c0
   140038265:	add    rsp,0x20
   140038269:	pop    rbx
   14003826a:	ret    
   14003826b:	int3   
   14003826c:	int3   
   14003826d:	int3   
   14003826e:	int3   
   14003826f:	int3   
   140038270:	ret    0x0
   140038273:	int3   
   140038274:	int3   
   140038275:	int3   
   140038276:	int3   
   140038277:	int3   
   140038278:	int3   
   140038279:	int3   
   14003827a:	int3   
   14003827b:	int3   
   14003827c:	int3   
   14003827d:	int3   
   14003827e:	int3   
   14003827f:	int3   
   140038280:	sub    rsp,0x28
   140038284:	mov    eax,DWORD PTR [rip+0x1c422]        # 0x1400546ac
   14003828a:	cmp    eax,0x1f
   14003828d:	jne    0x1400382ab
   14003828f:	call   QWORD PTR [rip+0x503b]        # 0x14003d2d0
   140038295:	lea    rdx,[rip+0xc69c]        # 0x140044938
   14003829c:	lea    rcx,[rax+0x60]
   1400382a0:	add    rsp,0x28
   1400382a4:	rex.W jmp QWORD PTR [rip+0x5015]        # 0x14003d2c0
   1400382ab:	lea    rdx,[rip+0x1c3fe]        # 0x1400546b0
   1400382b2:	inc    eax
   1400382b4:	mov    DWORD PTR [rip+0x1c3f2],eax        # 0x1400546ac
   1400382ba:	cdqe   
   1400382bc:	lea    rcx,[rax+rax*2]
   1400382c0:	lea    rax,[rax+rax*2]
   1400382c4:	movups xmm0,XMMWORD PTR [rdx+rcx*8-0x18]
   1400382c9:	movups XMMWORD PTR [rdx+rax*8],xmm0
   1400382cd:	movsd  xmm1,QWORD PTR [rdx+rcx*8-0x8]
   1400382d3:	movsd  QWORD PTR [rdx+rax*8+0x10],xmm1
   1400382d9:	add    rsp,0x28
   1400382dd:	ret    
   1400382de:	int3   
   1400382df:	int3   
   1400382e0:	sub    rsp,0x28
   1400382e4:	mov    eax,DWORD PTR [rip+0x1c3c2]        # 0x1400546ac
   1400382ea:	test   eax,eax
   1400382ec:	jne    0x14003830a
   1400382ee:	call   QWORD PTR [rip+0x4fdc]        # 0x14003d2d0
   1400382f4:	lea    rdx,[rip+0xc65d]        # 0x140044958
   1400382fb:	lea    rcx,[rax+0x60]
   1400382ff:	add    rsp,0x28
   140038303:	rex.W jmp QWORD PTR [rip+0x4fb6]        # 0x14003d2c0
   14003830a:	dec    eax
   14003830c:	mov    DWORD PTR [rip+0x1c39a],eax        # 0x1400546ac
   140038312:	add    rsp,0x28
   140038316:	ret    
   140038317:	int3   
   140038318:	int3   
   140038319:	int3   
   14003831a:	int3   
   14003831b:	int3   
   14003831c:	int3   
   14003831d:	int3   
   14003831e:	int3   
   14003831f:	int3   
   140038320:	mov    QWORD PTR [rsp+0x8],rbx
   140038325:	push   rdi
   140038326:	sub    rsp,0x30
   14003832a:	movsxd rax,DWORD PTR [rip+0x1c37b]        # 0x1400546ac
   140038331:	lea    rdi,[rip+0x1c378]        # 0x1400546b0
   140038338:	mov    r8,rcx
   14003833b:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140038340:	movaps xmm6,xmm1
   140038343:	lea    r9,[rax+rax*2]
   140038347:	mov    rbx,rcx
   14003834a:	mov    rax,QWORD PTR [rdi+r9*8+0x8]
   14003834f:	sub    r8,rax
   140038352:	movzx  edx,BYTE PTR [rax]
   140038355:	movzx  ecx,BYTE PTR [rax+r8*1]
   14003835a:	sub    edx,ecx
   14003835c:	jne    0x140038365
   14003835e:	inc    rax
   140038361:	test   ecx,ecx
   140038363:	jne    0x140038352
   140038365:	test   edx,edx
   140038367:	jne    0x140038374
   140038369:	ucomisd xmm1,QWORD PTR [rdi+r9*8+0x10]
   140038370:	jp     0x140038374
   140038372:	je     0x1400383a9
   140038374:	mov    rcx,QWORD PTR [rip+0x1d175]        # 0x1400554f0
   14003837b:	movaps xmm2,xmm1
   14003837e:	lea    rdx,[rip+0xc5f3]        # 0x140044978
   140038385:	mov    r9,rbx
   140038388:	movq   r8,xmm2
   14003838d:	call   QWORD PTR [rip+0x4f2d]        # 0x14003d2c0
   140038393:	movsxd rax,DWORD PTR [rip+0x1c312]        # 0x1400546ac
   14003839a:	lea    rcx,[rax+rax*2]
   14003839e:	mov    QWORD PTR [rdi+rcx*8+0x8],rbx
   1400383a3:	movsd  QWORD PTR [rdi+rcx*8+0x10],xmm6
   1400383a9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400383ae:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   1400383b3:	add    rsp,0x30
   1400383b7:	pop    rdi
   1400383b8:	ret    
   1400383b9:	int3   
   1400383ba:	int3   
   1400383bb:	int3   
   1400383bc:	int3   
   1400383bd:	int3   
   1400383be:	int3   
   1400383bf:	int3   
   1400383c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400383c5:	push   rdi
   1400383c6:	sub    rsp,0x50
   1400383ca:	movsxd r9,DWORD PTR [rip+0x1c2db]        # 0x1400546ac
   1400383d1:	lea    rdi,[rip+0xfffffffffffc7c28]        # 0x140000000
   1400383d8:	mov    rbx,rcx
   1400383db:	lea    rdx,[r9+r9*2]
   1400383df:	mov    rax,rcx
   1400383e2:	mov    r8,QWORD PTR [rdi+rdx*8+0x546b0]
   1400383ea:	sub    r8,rcx
   1400383ed:	nop    DWORD PTR [rax]
   1400383f0:	movzx  edx,BYTE PTR [rax]
   1400383f3:	movzx  ecx,BYTE PTR [rax+r8*1]
   1400383f8:	sub    edx,ecx
   1400383fa:	jne    0x140038403
   1400383fc:	inc    rax
   1400383ff:	test   ecx,ecx
   140038401:	jne    0x1400383f0
   140038403:	test   edx,edx
   140038405:	je     0x140038468
   140038407:	lea    rdx,[rsp+0x30]
   14003840c:	xor    r8d,r8d
   14003840f:	mov    rcx,rbx
   140038412:	call   0x140026220
   140038417:	movsxd rax,DWORD PTR [rip+0x1d0c2]        # 0x1400554e0
   14003841e:	mov    rcx,QWORD PTR [rip+0x1d0cb]        # 0x1400554f0
   140038425:	movsd  xmm3,QWORD PTR [rsp+0x38]
   14003842b:	movsd  xmm2,QWORD PTR [rsp+0x30]
   140038431:	movsd  xmm0,QWORD PTR [rsp+0x40]
   140038437:	movq   r9,xmm3
   14003843c:	movq   r8,xmm2
   140038441:	mov    rax,QWORD PTR [rdi+rax*8+0x52c70]
   140038449:	lea    rdx,[rip+0xc550]        # 0x1400449a0
   140038450:	mov    QWORD PTR [rsp+0x28],rax
   140038455:	movsd  QWORD PTR [rsp+0x20],xmm0
   14003845b:	call   QWORD PTR [rip+0x4e5f]        # 0x14003d2c0
   140038461:	mov    r9d,DWORD PTR [rip+0x1c244]        # 0x1400546ac
   140038468:	movsxd rax,r9d
   14003846b:	lea    rcx,[rax+rax*2]
   14003846f:	mov    QWORD PTR [rdi+rcx*8+0x546b0],rbx
   140038477:	mov    rbx,QWORD PTR [rsp+0x60]
   14003847c:	add    rsp,0x50
   140038480:	pop    rdi
   140038481:	ret    
   140038482:	int3   
   140038483:	int3   
   140038484:	int3   
   140038485:	int3   
   140038486:	int3   
   140038487:	int3   
   140038488:	int3   
   140038489:	int3   
   14003848a:	int3   
   14003848b:	int3   
   14003848c:	int3   
   14003848d:	int3   
   14003848e:	int3   
   14003848f:	int3   
   140038490:	mov    QWORD PTR [rsp+0x8],rbx
   140038495:	mov    QWORD PTR [rsp+0x10],rsi
   14003849a:	push   rdi
   14003849b:	sub    rsp,0x20
   14003849f:	mov    rdi,QWORD PTR [rcx]
   1400384a2:	mov    rsi,rcx
   1400384a5:	mov    rbx,rdi
   1400384a8:	test   rdi,rdi
   1400384ab:	je     0x140038522
   1400384ad:	nop    DWORD PTR [rax]
   1400384b0:	cmp    BYTE PTR [rdi],0x0
   1400384b3:	lea    rsi,[rsi+0x8]
   1400384b7:	je     0x1400384c8
   1400384b9:	nop    DWORD PTR [rax+0x0]
   1400384c0:	inc    rbx
   1400384c3:	cmp    BYTE PTR [rbx],0x0
   1400384c6:	jne    0x1400384c0
   1400384c8:	inc    rbx
   1400384cb:	cmp    BYTE PTR [rbx],0x0
   1400384ce:	je     0x140038500
   1400384d0:	mov    rcx,QWORD PTR [rip+0x1d019]        # 0x1400554f0
   1400384d7:	lea    rdx,[rip+0xc4f2]        # 0x1400449d0
   1400384de:	mov    r8,rbx
   1400384e1:	call   QWORD PTR [rip+0x4dd9]        # 0x14003d2c0
   1400384e7:	cmp    BYTE PTR [rbx],0x0
   1400384ea:	je     0x1400384f8
   1400384ec:	nop    DWORD PTR [rax+0x0]
   1400384f0:	inc    rbx
   1400384f3:	cmp    BYTE PTR [rbx],0x0
   1400384f6:	jne    0x1400384f0
   1400384f8:	inc    rbx
   1400384fb:	cmp    BYTE PTR [rbx],0x0
   1400384fe:	jne    0x1400384d0
   140038500:	mov    rcx,QWORD PTR [rip+0x1cfe9]        # 0x1400554f0
   140038507:	lea    rdx,[rip+0xc4da]        # 0x1400449e8
   14003850e:	mov    r8,rdi
   140038511:	call   QWORD PTR [rip+0x4da9]        # 0x14003d2c0
   140038517:	mov    rdi,QWORD PTR [rsi]
   14003851a:	mov    rbx,rdi
   14003851d:	test   rdi,rdi
   140038520:	jne    0x1400384b0
   140038522:	mov    rbx,QWORD PTR [rsp+0x30]
   140038527:	mov    rsi,QWORD PTR [rsp+0x38]
   14003852c:	add    rsp,0x20
   140038530:	pop    rdi
   140038531:	ret    
   140038532:	int3   
   140038533:	int3   
   140038534:	int3   
   140038535:	int3   
   140038536:	int3   
   140038537:	int3   
   140038538:	int3   
   140038539:	int3   
   14003853a:	int3   
   14003853b:	int3   
   14003853c:	int3   
   14003853d:	int3   
   14003853e:	int3   
   14003853f:	int3   
   140038540:	mov    QWORD PTR [rsp+0x10],rbx
   140038545:	mov    QWORD PTR [rsp+0x18],rsi
   14003854a:	mov    QWORD PTR [rsp+0x8],rcx
   14003854f:	push   rdi
   140038550:	sub    rsp,0x30
   140038554:	movsxd rax,DWORD PTR [rip+0x1c151]        # 0x1400546ac
   14003855b:	mov    rbx,rcx
   14003855e:	mov    rcx,QWORD PTR [rdx]
   140038561:	lea    rsi,[rip+0x1c148]        # 0x1400546b0
   140038568:	shr    rbx,0x20
   14003856c:	lea    rdi,[rax+rax*2]
   140038570:	call   0x140038aa0
   140038575:	mov    r9d,DWORD PTR [rsp+0x40]
   14003857a:	mov    rcx,QWORD PTR [rip+0x1cf6f]        # 0x1400554f0
   140038581:	mov    r8,rax
   140038584:	mov    rax,QWORD PTR [rsi+rdi*8]
   140038588:	lea    rdx,[rip+0xc471]        # 0x140044a00
   14003858f:	mov    QWORD PTR [rsp+0x28],rax
   140038594:	mov    DWORD PTR [rsp+0x20],ebx
   140038598:	call   QWORD PTR [rip+0x4d22]        # 0x14003d2c0
   14003859e:	mov    rbx,QWORD PTR [rsp+0x48]
   1400385a3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400385a8:	add    rsp,0x30
   1400385ac:	pop    rdi
   1400385ad:	ret    
   1400385ae:	int3   
   1400385af:	int3   
   1400385b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400385b5:	push   rdi
   1400385b6:	sub    rsp,0x40
   1400385ba:	movsxd rdi,edx
   1400385bd:	mov    rbx,rcx
   1400385c0:	test   r8d,r8d
   1400385c3:	jne    0x1400385ca
   1400385c5:	test   r9d,r9d
   1400385c8:	je     0x1400385e1
   1400385ca:	call   QWORD PTR [rip+0x4d00]        # 0x14003d2d0
   1400385d0:	lea    rdx,[rip+0xc459]        # 0x140044a30
   1400385d7:	lea    rcx,[rax+0x60]
   1400385db:	call   QWORD PTR [rip+0x4cdf]        # 0x14003d2c0
   1400385e1:	mov    r9d,DWORD PTR [rbx+0x4]
   1400385e5:	mov    r8d,DWORD PTR [rbx]
   1400385e8:	mov    rcx,QWORD PTR [rip+0x1cf01]        # 0x1400554f0
   1400385ef:	lea    rdx,[rip+0xc45a]        # 0x140044a50
   1400385f6:	call   QWORD PTR [rip+0x4cc4]        # 0x14003d2c0
   1400385fc:	mov    rcx,rdi
   1400385ff:	cmp    rdi,0x1
   140038603:	jle    0x140038663
   140038605:	add    rcx,0xfffffffffffffffe
   140038609:	movabs rax,0xaaaaaaaaaaaaaaab
   140038613:	add    rbx,0x14
   140038617:	mul    rcx
   14003861a:	mov    rdi,rdx
   14003861d:	shr    rdi,1
   140038620:	inc    rdi
   140038623:	mov    eax,DWORD PTR [rbx+0x8]
   140038626:	mov    r9d,DWORD PTR [rbx-0x8]
   14003862a:	mov    r8d,DWORD PTR [rbx-0xc]
   14003862e:	mov    rcx,QWORD PTR [rip+0x1cebb]        # 0x1400554f0
   140038635:	mov    DWORD PTR [rsp+0x38],eax
   140038639:	mov    eax,DWORD PTR [rbx+0x4]
   14003863c:	mov    DWORD PTR [rsp+0x30],eax
   140038640:	mov    eax,DWORD PTR [rbx]
   140038642:	lea    rdx,[rip+0xc41f]        # 0x140044a68
   140038649:	mov    DWORD PTR [rsp+0x28],eax
   14003864d:	mov    eax,DWORD PTR [rbx-0x4]
   140038650:	mov    DWORD PTR [rsp+0x20],eax
   140038654:	call   QWORD PTR [rip+0x4c66]        # 0x14003d2c0
   14003865a:	lea    rbx,[rbx+0x18]
   14003865e:	dec    rdi
   140038661:	jne    0x140038623
   140038663:	movsxd rax,DWORD PTR [rip+0x1c042]        # 0x1400546ac
   14003866a:	mov    rcx,QWORD PTR [rip+0x1ce7f]        # 0x1400554f0
   140038671:	lea    rdx,[rip+0xc428]        # 0x140044aa0
   140038678:	lea    r8,[rax+rax*2]
   14003867c:	lea    rax,[rip+0x1c02d]        # 0x1400546b0
   140038683:	mov    r8,QWORD PTR [rax+r8*8]
   140038687:	mov    rbx,QWORD PTR [rsp+0x50]
   14003868c:	add    rsp,0x40
   140038690:	pop    rdi
   140038691:	rex.W jmp QWORD PTR [rip+0x4c28]        # 0x14003d2c0
   140038698:	int3   
   140038699:	int3   
   14003869a:	int3   
   14003869b:	int3   
   14003869c:	int3   
   14003869d:	int3   
   14003869e:	int3   
   14003869f:	int3   
   1400386a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400386a5:	mov    QWORD PTR [rsp+0x18],rbp
   1400386aa:	mov    QWORD PTR [rsp+0x20],rsi
   1400386af:	push   r14
   1400386b1:	sub    rsp,0x20
   1400386b5:	mov    rsi,rcx
   1400386b8:	movsxd rbp,edx
   1400386bb:	mov    ebx,0x1
   1400386c0:	lea    r14,[rip+0x1bfe9]        # 0x1400546b0
   1400386c7:	test   r8d,r8d
   1400386ca:	je     0x14003874d
   1400386d0:	mov    r9d,DWORD PTR [rcx+0x4]
   1400386d4:	mov    r8d,DWORD PTR [rcx]
   1400386d7:	mov    rcx,QWORD PTR [rip+0x1ce12]        # 0x1400554f0
   1400386de:	lea    rdx,[rip+0xc3cb]        # 0x140044ab0
   1400386e5:	mov    QWORD PTR [rsp+0x30],rdi
   1400386ea:	call   QWORD PTR [rip+0x4bd0]        # 0x14003d2c0
   1400386f0:	mov    edi,ebx
   1400386f2:	cmp    rbx,rbp
   1400386f5:	jge    0x140038725
   1400386f7:	nop    WORD PTR [rax+rax*1+0x0]
   140038700:	mov    r9d,DWORD PTR [rsi+rdi*8+0x4]
   140038705:	mov    r8d,DWORD PTR [rsi+rdi*8]
   140038709:	mov    rcx,QWORD PTR [rip+0x1cde0]        # 0x1400554f0
   140038710:	lea    rdx,[rip+0xc3b1]        # 0x140044ac8
   140038717:	call   QWORD PTR [rip+0x4ba3]        # 0x14003d2c0
   14003871d:	inc    rdi
   140038720:	cmp    rdi,rbp
   140038723:	jl     0x140038700
   140038725:	movsxd rax,DWORD PTR [rip+0x1bf80]        # 0x1400546ac
   14003872c:	mov    rcx,QWORD PTR [rip+0x1cdbd]        # 0x1400554f0
   140038733:	lea    rdx,[rip+0xc3a6]        # 0x140044ae0
   14003873a:	lea    r8,[rax+rax*2]
   14003873e:	mov    r8,QWORD PTR [r14+r8*8]
   140038742:	call   QWORD PTR [rip+0x4b78]        # 0x14003d2c0
   140038748:	mov    rdi,QWORD PTR [rsp+0x30]
   14003874d:	mov    r9d,DWORD PTR [rsi+0x4]
   140038751:	mov    r8d,DWORD PTR [rsi]
   140038754:	mov    rcx,QWORD PTR [rip+0x1cd95]        # 0x1400554f0
   14003875b:	lea    rdx,[rip+0xc39e]        # 0x140044b00
   140038762:	call   QWORD PTR [rip+0x4b58]        # 0x14003d2c0
   140038768:	cmp    rbx,rbp
   14003876b:	jge    0x140038795
   14003876d:	nop    DWORD PTR [rax]
   140038770:	mov    r9d,DWORD PTR [rsi+rbx*8+0x4]
   140038775:	mov    r8d,DWORD PTR [rsi+rbx*8]
   140038779:	mov    rcx,QWORD PTR [rip+0x1cd70]        # 0x1400554f0
   140038780:	lea    rdx,[rip+0xc341]        # 0x140044ac8
   140038787:	call   QWORD PTR [rip+0x4b33]        # 0x14003d2c0
   14003878d:	inc    rbx
   140038790:	cmp    rbx,rbp
   140038793:	jl     0x140038770
   140038795:	movsxd rax,DWORD PTR [rip+0x1bf10]        # 0x1400546ac
   14003879c:	mov    rcx,QWORD PTR [rip+0x1cd4d]        # 0x1400554f0
   1400387a3:	lea    rdx,[rip+0xc336]        # 0x140044ae0
   1400387aa:	lea    r8,[rax+rax*2]
   1400387ae:	mov    r8,QWORD PTR [r14+r8*8]
   1400387b2:	mov    rbx,QWORD PTR [rsp+0x38]
   1400387b7:	mov    rbp,QWORD PTR [rsp+0x40]
   1400387bc:	mov    rsi,QWORD PTR [rsp+0x48]
   1400387c1:	add    rsp,0x20
   1400387c5:	pop    r14
   1400387c7:	rex.W jmp QWORD PTR [rip+0x4af2]        # 0x14003d2c0
   1400387ce:	int3   
   1400387cf:	int3   
   1400387d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400387d5:	mov    QWORD PTR [rsp+0x8],rcx
   1400387da:	push   rdi
   1400387db:	sub    rsp,0x40
   1400387df:	mov    ebx,r8d
   1400387e2:	mov    edi,edx
   1400387e4:	test   r9d,r9d
   1400387e7:	je     0x140038835
   1400387e9:	movsxd rax,DWORD PTR [rip+0x1bebc]        # 0x1400546ac
   1400387f0:	mov    r10,rcx
   1400387f3:	lea    rdx,[rip+0x1beb6]        # 0x1400546b0
   1400387fa:	lea    rax,[rax+rax*2]
   1400387fe:	shr    r10,0x20
   140038802:	lea    r9d,[r8+r8*1]
   140038806:	mov    rax,QWORD PTR [rdx+rax*8]
   14003880a:	lea    r8d,[rdi+rdi*1]
   14003880e:	lea    rdx,[rip+0xc30b]        # 0x140044b20
   140038815:	mov    QWORD PTR [rsp+0x30],rax
   14003881a:	mov    DWORD PTR [rsp+0x28],r10d
   14003881f:	mov    DWORD PTR [rsp+0x20],ecx
   140038823:	mov    rcx,QWORD PTR [rip+0x1ccc6]        # 0x1400554f0
   14003882a:	call   QWORD PTR [rip+0x4a90]        # 0x14003d2c0
   140038830:	mov    rcx,QWORD PTR [rsp+0x50]
   140038835:	mov    eax,DWORD PTR [rsp+0x54]
   140038839:	lea    r9d,[rbx+rbx*1]
   14003883d:	lea    r8d,[rdi+rdi*1]
   140038841:	mov    DWORD PTR [rsp+0x28],eax
   140038845:	mov    DWORD PTR [rsp+0x20],ecx
   140038849:	mov    rcx,QWORD PTR [rip+0x1cca0]        # 0x1400554f0
   140038850:	lea    rdx,[rip+0xc319]        # 0x140044b70
   140038857:	call   QWORD PTR [rip+0x4a63]        # 0x14003d2c0
   14003885d:	mov    rbx,QWORD PTR [rsp+0x58]
   140038862:	add    rsp,0x40
   140038866:	pop    rdi
   140038867:	ret    
   140038868:	int3   
   140038869:	int3   
   14003886a:	int3   
   14003886b:	int3   
   14003886c:	int3   
   14003886d:	int3   
   14003886e:	int3   
   14003886f:	int3   
   140038870:	mov    QWORD PTR [rsp+0x8],rbx
   140038875:	mov    QWORD PTR [rsp+0x10],rsi
   14003887a:	push   rdi
   14003887b:	sub    rsp,0x20
   14003887f:	mov    r9d,DWORD PTR [rcx+0x4]
   140038883:	mov    r8d,DWORD PTR [rcx]
   140038886:	mov    rsi,rcx
   140038889:	mov    rcx,QWORD PTR [rip+0x1cc60]        # 0x1400554f0
   140038890:	movsxd rbx,edx
   140038893:	lea    rdx,[rip+0xc1b6]        # 0x140044a50
   14003889a:	call   QWORD PTR [rip+0x4a20]        # 0x14003d2c0
   1400388a0:	mov    edi,0x1
   1400388a5:	cmp    rdi,rbx
   1400388a8:	jge    0x1400388d5
   1400388aa:	nop    WORD PTR [rax+rax*1+0x0]
   1400388b0:	mov    r9d,DWORD PTR [rsi+rdi*8+0x4]
   1400388b5:	mov    r8d,DWORD PTR [rsi+rdi*8]
   1400388b9:	mov    rcx,QWORD PTR [rip+0x1cc30]        # 0x1400554f0
   1400388c0:	lea    rdx,[rip+0xc201]        # 0x140044ac8
   1400388c7:	call   QWORD PTR [rip+0x49f3]        # 0x14003d2c0
   1400388cd:	inc    rdi
   1400388d0:	cmp    rdi,rbx
   1400388d3:	jl     0x1400388b0
   1400388d5:	movsxd rax,DWORD PTR [rip+0x1bdd0]        # 0x1400546ac
   1400388dc:	mov    rcx,QWORD PTR [rip+0x1cc0d]        # 0x1400554f0
   1400388e3:	lea    rdx,[rip+0xc1b6]        # 0x140044aa0
   1400388ea:	lea    r8,[rax+rax*2]
   1400388ee:	lea    rax,[rip+0x1bdbb]        # 0x1400546b0
   1400388f5:	mov    r8,QWORD PTR [rax+r8*8]
   1400388f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400388fe:	mov    rsi,QWORD PTR [rsp+0x38]
   140038903:	add    rsp,0x20
   140038907:	pop    rdi
   140038908:	rex.W jmp QWORD PTR [rip+0x49b1]        # 0x14003d2c0
   14003890f:	int3   
   140038910:	mov    QWORD PTR [rsp+0x8],rbx
   140038915:	mov    QWORD PTR [rsp+0x10],rbp
   14003891a:	mov    QWORD PTR [rsp+0x18],rsi
   14003891f:	push   rdi
   140038920:	push   r14
   140038922:	push   r15
   140038924:	sub    rsp,0x30
   140038928:	mov    r15,rcx
   14003892b:	mov    rcx,QWORD PTR [rip+0x1cbbe]        # 0x1400554f0
   140038932:	mov    rdi,rdx
   140038935:	lea    rdx,[rip+0xc274]        # 0x140044bb0
   14003893c:	mov    r14d,r9d
   14003893f:	movsxd rbp,r8d
   140038942:	call   QWORD PTR [rip+0x4978]        # 0x14003d2c0
   140038948:	xor    ebx,ebx
   14003894a:	test   ebp,ebp
   14003894c:	jle    0x140038975
   14003894e:	xchg   ax,ax
   140038950:	mov    r9d,DWORD PTR [rdi+rbx*8+0x4]
   140038955:	mov    r8d,DWORD PTR [rdi+rbx*8]
   140038959:	mov    rcx,QWORD PTR [rip+0x1cb90]        # 0x1400554f0
   140038960:	lea    rdx,[rip+0x9051]        # 0x1400419b8
   140038967:	call   QWORD PTR [rip+0x4953]        # 0x14003d2c0
   14003896d:	inc    rbx
   140038970:	cmp    rbx,rbp
   140038973:	jl     0x140038950
   140038975:	mov    r9d,DWORD PTR [rdi+0x4]
   140038979:	mov    r8d,DWORD PTR [rdi]
   14003897c:	mov    rcx,QWORD PTR [rip+0x1cb6d]        # 0x1400554f0
   140038983:	lea    rdx,[rip+0x902e]        # 0x1400419b8
   14003898a:	call   QWORD PTR [rip+0x4930]        # 0x14003d2c0
   140038990:	mov    rcx,QWORD PTR [rip+0x1cb59]        # 0x1400554f0
   140038997:	lea    rax,[rip+0x543a]        # 0x14003ddd8
   14003899e:	test   r14d,r14d
   1400389a1:	lea    r9,[rip+0x5438]        # 0x14003dde0
   1400389a8:	lea    rdx,[rip+0xc219]        # 0x140044bc8
   1400389af:	mov    r8d,ebp
   1400389b2:	cmovne r9,rax
   1400389b6:	mov    QWORD PTR [rsp+0x20],r15
   1400389bb:	call   QWORD PTR [rip+0x48ff]        # 0x14003d2c0
   1400389c1:	mov    rbx,QWORD PTR [rsp+0x50]
   1400389c6:	mov    rbp,QWORD PTR [rsp+0x58]
   1400389cb:	mov    rsi,QWORD PTR [rsp+0x60]
   1400389d0:	add    rsp,0x30
   1400389d4:	pop    r15
   1400389d6:	pop    r14
   1400389d8:	pop    rdi
   1400389d9:	ret    
   1400389da:	int3   
   1400389db:	int3   
   1400389dc:	int3   
   1400389dd:	int3   
   1400389de:	int3   
   1400389df:	int3   
   1400389e0:	mov    DWORD PTR [rip+0x1a3ae],0x1        # 0x140052d98
   1400389ea:	ret    
   1400389eb:	int3   
   1400389ec:	int3   
   1400389ed:	int3   
   1400389ee:	int3   
   1400389ef:	int3   
   1400389f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400389f5:	push   rdi
   1400389f6:	sub    rsp,0x30
   1400389fa:	mov    rcx,QWORD PTR [rip+0x1caef]        # 0x1400554f0
   140038a01:	mov    rdi,rdx
   140038a04:	lea    rdx,[rip+0xbd75]        # 0x140044780
   140038a0b:	mov    rbx,r9
   140038a0e:	call   QWORD PTR [rip+0x48ac]        # 0x14003d2c0
   140038a14:	mov    r8,QWORD PTR [rsp+0x60]
   140038a19:	mov    rax,QWORD PTR [r8+0x10]
   140038a1d:	mov    r9,QWORD PTR [r8+0x8]
   140038a21:	mov    rcx,QWORD PTR [rip+0x1cac8]        # 0x1400554f0
   140038a28:	mov    r8,QWORD PTR [r8]
   140038a2b:	lea    rdx,[rip+0xbd6e]        # 0x1400447a0
   140038a32:	mov    QWORD PTR [rsp+0x20],rax
   140038a37:	call   QWORD PTR [rip+0x4883]        # 0x14003d2c0
   140038a3d:	mov    rcx,QWORD PTR [rip+0x1caac]        # 0x1400554f0
   140038a44:	lea    rdx,[rip+0xbd85]        # 0x1400447d0
   140038a4b:	mov    r8,rbx
   140038a4e:	call   QWORD PTR [rip+0x486c]        # 0x14003d2c0
   140038a54:	mov    r8,QWORD PTR [rdi+0x10]
   140038a58:	mov    rcx,QWORD PTR [rip+0x1ca91]        # 0x1400554f0
   140038a5f:	lea    rdx,[rip+0xbd82]        # 0x1400447e8
   140038a66:	call   QWORD PTR [rip+0x4854]        # 0x14003d2c0
   140038a6c:	mov    rcx,QWORD PTR [rip+0x1ca7d]        # 0x1400554f0
   140038a73:	lea    rdx,[rip+0xbd7e]        # 0x1400447f8
   140038a7a:	call   QWORD PTR [rip+0x4840]        # 0x14003d2c0
   140038a80:	mov    rcx,QWORD PTR [rip+0x1ca69]        # 0x1400554f0
   140038a87:	lea    rdx,[rip+0xbdaa]        # 0x140044838
   140038a8e:	call   QWORD PTR [rip+0x482c]        # 0x14003d2c0
   140038a94:	mov    rbx,QWORD PTR [rsp+0x40]
   140038a99:	add    rsp,0x30
   140038a9d:	pop    rdi
   140038a9e:	ret    
   140038a9f:	int3   
   140038aa0:	mov    QWORD PTR [rsp+0x8],rbx
   140038aa5:	mov    QWORD PTR [rsp+0x10],rsi
   140038aaa:	push   rdi
   140038aab:	sub    rsp,0x20
   140038aaf:	mov    r8,QWORD PTR [rip+0x1bbea]        # 0x1400546a0
   140038ab6:	xor    ebx,ebx
   140038ab8:	mov    rdi,rcx
   140038abb:	test   r8,r8
   140038abe:	jne    0x140038adf
   140038ac0:	mov    esi,0x40
   140038ac5:	mov    ecx,esi
   140038ac7:	mov    DWORD PTR [rip+0x1bbdb],esi        # 0x1400546a8
   140038acd:	call   QWORD PTR [rip+0x4695]        # 0x14003d168
   140038ad3:	mov    r8,rax
   140038ad6:	mov    QWORD PTR [rip+0x1bbc3],rax        # 0x1400546a0
   140038add:	jmp    0x140038ae5
   140038adf:	mov    esi,DWORD PTR [rip+0x1bbc3]        # 0x1400546a8
   140038ae5:	mov    rax,r8
   140038ae8:	cmp    BYTE PTR [rdi],bl
   140038aea:	je     0x140038b5b
   140038aec:	nop    DWORD PTR [rax+0x0]
   140038af0:	lea    ecx,[rsi-0x8]
   140038af3:	cmp    ebx,ecx
   140038af5:	jle    0x140038b18
   140038af7:	lea    eax,[rsi+rsi*1]
   140038afa:	mov    rcx,r8
   140038afd:	movsxd rsi,eax
   140038b00:	mov    rdx,rsi
   140038b03:	mov    DWORD PTR [rip+0x1bb9f],esi        # 0x1400546a8
   140038b09:	call   QWORD PTR [rip+0x4599]        # 0x14003d0a8
   140038b0f:	mov    r8,rax
   140038b12:	movsxd rax,ebx
   140038b15:	add    rax,r8
   140038b18:	movzx  ecx,BYTE PTR [rdi]
   140038b1b:	sub    cl,0x28
   140038b1e:	cmp    cl,0x1
   140038b21:	ja     0x140038b2b
   140038b23:	mov    BYTE PTR [rax],0x5c
   140038b26:	inc    rax
   140038b29:	inc    ebx
   140038b2b:	movzx  ecx,BYTE PTR [rdi]
   140038b2e:	inc    rdi
   140038b31:	inc    rax
   140038b34:	mov    BYTE PTR [rax-0x1],cl
   140038b37:	inc    ebx
   140038b39:	cmp    BYTE PTR [rdi],0x0
   140038b3c:	jne    0x140038af0
   140038b3e:	mov    BYTE PTR [rax],0x0
   140038b41:	mov    QWORD PTR [rip+0x1bb58],r8        # 0x1400546a0
   140038b48:	mov    rax,r8
   140038b4b:	mov    rbx,QWORD PTR [rsp+0x30]
   140038b50:	mov    rsi,QWORD PTR [rsp+0x38]
   140038b55:	add    rsp,0x20
   140038b59:	pop    rdi
   140038b5a:	ret    
   140038b5b:	mov    rsi,QWORD PTR [rsp+0x38]
   140038b60:	mov    BYTE PTR [r8],bl
   140038b63:	mov    rbx,QWORD PTR [rsp+0x30]
   140038b68:	add    rsp,0x20
   140038b6c:	pop    rdi
   140038b6d:	ret    
   140038b6e:	int3   
   140038b6f:	int3   
   140038b70:	ret    0x0
   140038b73:	int3   
   140038b74:	int3   
   140038b75:	int3   
   140038b76:	int3   
   140038b77:	int3   
   140038b78:	int3   
   140038b79:	int3   
   140038b7a:	int3   
   140038b7b:	int3   
   140038b7c:	int3   
   140038b7d:	int3   
   140038b7e:	int3   
   140038b7f:	int3   
   140038b80:	ret    0x0
   140038b83:	int3   
   140038b84:	int3   
   140038b85:	int3   
   140038b86:	int3   
   140038b87:	int3   
   140038b88:	int3   
   140038b89:	int3   
   140038b8a:	int3   
   140038b8b:	int3   
   140038b8c:	int3   
   140038b8d:	int3   
   140038b8e:	int3   
   140038b8f:	int3   
   140038b90:	ret    0x0
   140038b93:	int3   
   140038b94:	int3   
   140038b95:	int3   
   140038b96:	int3   
   140038b97:	int3   
   140038b98:	int3   
   140038b99:	int3   
   140038b9a:	int3   
   140038b9b:	int3   
   140038b9c:	int3   
   140038b9d:	int3   
   140038b9e:	int3   
   140038b9f:	int3   
   140038ba0:	rex push rbx
   140038ba2:	sub    rsp,0x20
   140038ba6:	mov    r8,QWORD PTR [rcx+0x10]
   140038baa:	mov    rbx,rcx
   140038bad:	mov    rcx,QWORD PTR [rip+0x1c93c]        # 0x1400554f0
   140038bb4:	lea    rdx,[rip+0x94c1]        # 0x14004207c
   140038bbb:	call   QWORD PTR [rip+0x46ff]        # 0x14003d2c0
   140038bc1:	mov    rdx,QWORD PTR [rip+0x1c7f0]        # 0x1400553b8
   140038bc8:	lea    r8,[rip+0x4849]        # 0x14003d418
   140038bcf:	mov    rcx,rbx
   140038bd2:	call   0x14001c3e0
   140038bd7:	cmp    BYTE PTR [rax],0x0
   140038bda:	je     0x140038bf9
   140038bdc:	mov    rcx,QWORD PTR [rip+0x1c90d]        # 0x1400554f0
   140038be3:	lea    rdx,[rip+0x9492]        # 0x14004207c
   140038bea:	mov    r8,rax
   140038bed:	add    rsp,0x20
   140038bf1:	pop    rbx
   140038bf2:	rex.W jmp QWORD PTR [rip+0x46c7]        # 0x14003d2c0
   140038bf9:	add    rsp,0x20
   140038bfd:	pop    rbx
   140038bfe:	ret    
   140038bff:	int3   
   140038c00:	ret    0x0
   140038c03:	int3   
   140038c04:	int3   
   140038c05:	int3   
   140038c06:	int3   
   140038c07:	int3   
   140038c08:	int3   
   140038c09:	int3   
   140038c0a:	int3   
   140038c0b:	int3   
   140038c0c:	int3   
   140038c0d:	int3   
   140038c0e:	int3   
   140038c0f:	int3   
   140038c10:	rex push rbx
   140038c12:	sub    rsp,0x20
   140038c16:	mov    r9,QWORD PTR [rcx+0x10]
   140038c1a:	mov    r8,QWORD PTR [rcx+0x18]
   140038c1e:	mov    rbx,rcx
   140038c21:	mov    rcx,QWORD PTR [rip+0x1c8c8]        # 0x1400554f0
   140038c28:	mov    r9,QWORD PTR [r9+0x10]
   140038c2c:	mov    r8,QWORD PTR [r8+0x10]
   140038c30:	lea    rdx,[rip+0x9b59]        # 0x140042790
   140038c37:	call   QWORD PTR [rip+0x4683]        # 0x14003d2c0
   140038c3d:	mov    rdx,QWORD PTR [rip+0x1c6e4]        # 0x140055328
   140038c44:	lea    r8,[rip+0x47cd]        # 0x14003d418
   140038c4b:	mov    rcx,rbx
   140038c4e:	call   0x14001c3e0
   140038c53:	cmp    BYTE PTR [rax],0x0
   140038c56:	je     0x140038c75
   140038c58:	mov    rcx,QWORD PTR [rip+0x1c891]        # 0x1400554f0
   140038c5f:	lea    rdx,[rip+0x9416]        # 0x14004207c
   140038c66:	mov    r8,rax
   140038c69:	add    rsp,0x20
   140038c6d:	pop    rbx
   140038c6e:	rex.W jmp QWORD PTR [rip+0x464b]        # 0x14003d2c0
   140038c75:	add    rsp,0x20
   140038c79:	pop    rbx
   140038c7a:	ret    
   140038c7b:	int3   
   140038c7c:	int3   
   140038c7d:	int3   
   140038c7e:	int3   
   140038c7f:	int3   
   140038c80:	ret    0x0
   140038c83:	int3   
   140038c84:	int3   
   140038c85:	int3   
   140038c86:	int3   
   140038c87:	int3   
   140038c88:	int3   
   140038c89:	int3   
   140038c8a:	int3   
   140038c8b:	int3   
   140038c8c:	int3   
   140038c8d:	int3   
   140038c8e:	int3   
   140038c8f:	int3   
   140038c90:	sub    rsp,0x28
   140038c94:	mov    edx,DWORD PTR [rip+0x1bde6]        # 0x140054a80
   140038c9a:	lea    eax,[rdx+0x1]
   140038c9d:	cmp    eax,0x4
   140038ca0:	jl     0x140038cc2
   140038ca2:	lea    rdx,[rip+0xbfd7]        # 0x140044c80
   140038ca9:	lea    rcx,[rip+0x9b68]        # 0x140042818
   140038cb0:	mov    r8d,0xfb
   140038cb6:	call   QWORD PTR [rip+0x43d4]        # 0x14003d090
   140038cbc:	mov    edx,DWORD PTR [rip+0x1bdbe]        # 0x140054a80
   140038cc2:	lea    r8,[rip+0x1bd17]        # 0x1400549e0
   140038cc9:	movsxd rax,edx
   140038ccc:	inc    edx
   140038cce:	lea    rcx,[rax+rax*4]
   140038cd2:	lea    rax,[rax+rax*4]
   140038cd6:	mov    DWORD PTR [rip+0x1bda4],edx        # 0x140054a80
   140038cdc:	movups xmm0,XMMWORD PTR [r8+rcx*8]
   140038ce1:	movups XMMWORD PTR [r8+rax*8+0x28],xmm0
   140038ce7:	movups xmm1,XMMWORD PTR [r8+rcx*8+0x10]
   140038ced:	movups XMMWORD PTR [r8+rax*8+0x38],xmm1
   140038cf3:	movsd  xmm0,QWORD PTR [r8+rcx*8+0x20]
   140038cfa:	movsd  QWORD PTR [r8+rax*8+0x48],xmm0
   140038d01:	add    rsp,0x28
   140038d05:	ret    
   140038d06:	int3   
   140038d07:	int3   
   140038d08:	int3   
   140038d09:	int3   
   140038d0a:	int3   
   140038d0b:	int3   
   140038d0c:	int3   
   140038d0d:	int3   
   140038d0e:	int3   
   140038d0f:	int3   
   140038d10:	rex push rbx
   140038d12:	sub    rsp,0x20
   140038d16:	mov    eax,DWORD PTR [rip+0x1bd64]        # 0x140054a80
   140038d1c:	lea    ebx,[rax-0x1]
   140038d1f:	test   eax,eax
   140038d21:	jg     0x140038d3d
   140038d23:	lea    rdx,[rip+0xbf56]        # 0x140044c80
   140038d2a:	lea    rcx,[rip+0x9b0f]        # 0x140042840
   140038d31:	mov    r8d,0x104
   140038d37:	call   QWORD PTR [rip+0x4353]        # 0x14003d090
   140038d3d:	mov    DWORD PTR [rip+0x1bd3d],ebx        # 0x140054a80
   140038d43:	add    rsp,0x20
   140038d47:	pop    rbx
   140038d48:	ret    
   140038d49:	int3   
   140038d4a:	int3   
   140038d4b:	int3   
   140038d4c:	int3   
   140038d4d:	int3   
   140038d4e:	int3   
   140038d4f:	int3   
   140038d50:	mov    QWORD PTR [rsp+0x8],rbx
   140038d55:	mov    QWORD PTR [rsp+0x10],rbp
   140038d5a:	mov    QWORD PTR [rsp+0x18],rsi
   140038d5f:	push   rdi
   140038d60:	sub    rsp,0x20
   140038d64:	movsxd rax,DWORD PTR [rip+0x1bd15]        # 0x140054a80
   140038d6b:	lea    rbp,[rip+0x1bc6e]        # 0x1400549e0
   140038d72:	lea    rbx,[rax+rax*4]
   140038d76:	movsd  QWORD PTR [rbp+rbx*8+0x18],xmm1
   140038d7c:	mov    BYTE PTR [rbp+rbx*8+0x11],0x1
   140038d81:	call   QWORD PTR [rip+0x4559]        # 0x14003d2e0
   140038d87:	mov    rcx,rax
   140038d8a:	mov    edx,0x2d
   140038d8f:	mov    rdi,rax
   140038d92:	call   QWORD PTR [rip+0x4378]        # 0x14003d110
   140038d98:	mov    rsi,rax
   140038d9b:	test   rax,rax
   140038d9e:	je     0x140038dbc
   140038da0:	lea    rdx,[rip+0x9aa9]        # 0x140042850
   140038da7:	lea    rcx,[rax+0x1]
   140038dab:	mov    BYTE PTR [rax],0x0
   140038dae:	call   0x14001ca70
   140038db3:	test   eax,eax
   140038db5:	jne    0x140038dd6
   140038db7:	mov    BYTE PTR [rbp+rbx*8+0x10],0x2
   140038dbc:	mov    QWORD PTR [rbp+rbx*8+0x8],rdi
   140038dc1:	mov    rbx,QWORD PTR [rsp+0x30]
   140038dc6:	mov    rbp,QWORD PTR [rsp+0x38]
   140038dcb:	mov    rsi,QWORD PTR [rsp+0x40]
   140038dd0:	add    rsp,0x20
   140038dd4:	pop    rdi
   140038dd5:	ret    
   140038dd6:	lea    rdx,[rip+0x8fb3]        # 0x140041d90
   140038ddd:	lea    rcx,[rsi+0x1]
   140038de1:	call   0x14001ca70
   140038de6:	mov    QWORD PTR [rbp+rbx*8+0x8],rdi
   140038deb:	test   eax,eax
   140038ded:	jne    0x140038dc1
   140038def:	mov    BYTE PTR [rbp+rbx*8+0x10],0x1
   140038df4:	jmp    0x140038dc1
   140038df6:	int3   
   140038df7:	int3   
   140038df8:	int3   
   140038df9:	int3   
   140038dfa:	int3   
   140038dfb:	int3   
   140038dfc:	int3   
   140038dfd:	int3   
   140038dfe:	int3   
   140038dff:	int3   
   140038e00:	sub    rsp,0x28
   140038e04:	call   0x140039aa0
   140038e09:	movsxd rcx,DWORD PTR [rip+0x1bc70]        # 0x140054a80
   140038e10:	lea    rdx,[rcx+rcx*4]
   140038e14:	lea    rcx,[rip+0x1bbc5]        # 0x1400549e0
   140038e1b:	mov    BYTE PTR [rcx+rdx*8],al
   140038e1e:	add    rsp,0x28
   140038e22:	ret    
   140038e23:	int3   
   140038e24:	int3   
   140038e25:	int3   
   140038e26:	int3   
   140038e27:	int3   
   140038e28:	int3   
   140038e29:	int3   
   140038e2a:	int3   
   140038e2b:	int3   
   140038e2c:	int3   
   140038e2d:	int3   
   140038e2e:	int3   
   140038e2f:	int3   
   140038e30:	sub    rsp,0x28
   140038e34:	call   0x140039aa0
   140038e39:	movsxd rcx,DWORD PTR [rip+0x1bc40]        # 0x140054a80
   140038e40:	lea    rdx,[rcx+rcx*4]
   140038e44:	lea    rcx,[rip+0x1bb96]        # 0x1400549e1
   140038e4b:	mov    BYTE PTR [rcx+rdx*8],al
   140038e4e:	add    rsp,0x28
   140038e52:	ret    
   140038e53:	int3   
   140038e54:	int3   
   140038e55:	int3   
   140038e56:	int3   
   140038e57:	int3   
   140038e58:	int3   
   140038e59:	int3   
   140038e5a:	int3   
   140038e5b:	int3   
   140038e5c:	int3   
   140038e5d:	int3   
   140038e5e:	int3   
   140038e5f:	int3   
   140038e60:	rex push rbx
   140038e62:	push   rbp
   140038e63:	push   rsi
   140038e64:	push   rdi
   140038e65:	sub    rsp,0x28
   140038e69:	movsxd rax,DWORD PTR [rip+0x1bc10]        # 0x140054a80
   140038e70:	mov    rbx,QWORD PTR [rcx]
   140038e73:	mov    rsi,rcx
   140038e76:	lea    rdi,[rax+rax*4]
   140038e7a:	lea    rbp,[rip+0x1bb5f]        # 0x1400549e0
   140038e81:	test   rbx,rbx
   140038e84:	je     0x14003905d
   140038e8a:	mov    QWORD PTR [rsp+0x50],r12
   140038e8f:	mov    QWORD PTR [rsp+0x58],r13
   140038e94:	mov    QWORD PTR [rsp+0x60],r14
   140038e99:	mov    QWORD PTR [rsp+0x20],r15
   140038e9e:	xor    r14d,r14d
   140038ea1:	lea    r12,[rip+0x8ed8]        # 0x140041d80
   140038ea8:	lea    r15,[rip+0x564d]        # 0x14003e4fc
   140038eaf:	movabs r10,0x4010000000000000
   140038eb9:	lea    r13,[rip+0x8ec8]        # 0x140041d88
   140038ec0:	movabs r11,0x4008000000000000
   140038eca:	lea    rdx,[rip+0x5b63]        # 0x14003ea34
   140038ed1:	lea    r8,[rip+0x8eb8]        # 0x140041d90
   140038ed8:	lea    r9,[rip+0x5b41]        # 0x14003ea20
   140038edf:	nop
   140038ee0:	lea    rsi,[rsi+0x8]
   140038ee4:	mov    rcx,r14
   140038ee7:	nop    WORD PTR [rax+rax*1+0x0]
   140038ef0:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140038ef4:	inc    rcx
   140038ef7:	cmp    al,BYTE PTR [r15+rcx*1-0x1]
   140038efc:	jne    0x140038f13
   140038efe:	cmp    rcx,0x6
   140038f02:	jne    0x140038ef0
   140038f04:	mov    BYTE PTR [rbp+rdi*8+0x12],r14b
   140038f09:	mov    QWORD PTR [rbp+rdi*8+0x20],r14
   140038f0e:	jmp    0x140039038
   140038f13:	mov    rcx,r14
   140038f16:	data16 nop WORD PTR [rax+rax*1+0x0]
   140038f20:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140038f24:	inc    rcx
   140038f27:	cmp    al,BYTE PTR [r12+rcx*1-0x1]
   140038f2c:	jne    0x140038f43
   140038f2e:	cmp    rcx,0x7
   140038f32:	jne    0x140038f20
   140038f34:	mov    BYTE PTR [rbp+rdi*8+0x12],0x1
   140038f39:	mov    QWORD PTR [rbp+rdi*8+0x20],r10
   140038f3e:	jmp    0x140039038
   140038f43:	mov    rcx,r14
   140038f46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140038f50:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140038f54:	inc    rcx
   140038f57:	cmp    al,BYTE PTR [r13+rcx*1-0x1]
   140038f5c:	jne    0x140038f73
   140038f5e:	cmp    rcx,0x7
   140038f62:	jne    0x140038f50
   140038f64:	mov    BYTE PTR [rbp+rdi*8+0x12],0x2
   140038f69:	mov    QWORD PTR [rbp+rdi*8+0x20],r11
   140038f6e:	jmp    0x140039038
   140038f73:	mov    rcx,r14
   140038f76:	data16 nop WORD PTR [rax+rax*1+0x0]
   140038f80:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140038f84:	inc    rcx
   140038f87:	cmp    al,BYTE PTR [rdx+rcx*1-0x1]
   140038f8b:	jne    0x140038f9d
   140038f8d:	cmp    rcx,0x6
   140038f91:	jne    0x140038f80
   140038f93:	mov    BYTE PTR [rbp+rdi*8+0x12],0xf
   140038f98:	jmp    0x140039038
   140038f9d:	mov    rcx,r14
   140038fa0:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140038fa4:	inc    rcx
   140038fa7:	cmp    al,BYTE PTR [r8+rcx*1-0x1]
   140038fac:	jne    0x140038fbb
   140038fae:	cmp    rcx,0x5
   140038fb2:	jne    0x140038fa0
   140038fb4:	mov    BYTE PTR [rbp+rdi*8+0x14],0x3
   140038fb9:	jmp    0x140039038
   140038fbb:	mov    rcx,r14
   140038fbe:	xchg   ax,ax
   140038fc0:	movzx  eax,BYTE PTR [rbx+rcx*1]
   140038fc4:	inc    rcx
   140038fc7:	cmp    al,BYTE PTR [r9+rcx*1-0x1]
   140038fcc:	jne    0x140038fdb
   140038fce:	cmp    rcx,0x7
   140038fd2:	jne    0x140038fc0
   140038fd4:	mov    BYTE PTR [rbp+rdi*8+0x13],r14b
   140038fd9:	jmp    0x140039038
   140038fdb:	lea    rdx,[rip+0x8db6]        # 0x140041d98
   140038fe2:	mov    rcx,rbx
   140038fe5:	call   0x14003bc96
   140038fea:	test   eax,eax
   140038fec:	jne    0x140038ff5
   140038fee:	mov    BYTE PTR [rbp+rdi*8+0x13],0xf
   140038ff3:	jmp    0x14003900f
   140038ff5:	call   QWORD PTR [rip+0x42d5]        # 0x14003d2d0
   140038ffb:	lea    rdx,[rip+0xbd0e]        # 0x140044d10
   140039002:	mov    r8,rbx
   140039005:	lea    rcx,[rax+0x60]
   140039009:	call   QWORD PTR [rip+0x42b1]        # 0x14003d2c0
   14003900f:	movabs r11,0x4008000000000000
   140039019:	movabs r10,0x4010000000000000
   140039023:	lea    r9,[rip+0x59f6]        # 0x14003ea20
   14003902a:	lea    r8,[rip+0x8d5f]        # 0x140041d90
   140039031:	lea    rdx,[rip+0x59fc]        # 0x14003ea34
   140039038:	mov    BYTE PTR [rbp+rdi*8+0x15],0x1
   14003903d:	mov    rbx,QWORD PTR [rsi]
   140039040:	test   rbx,rbx
   140039043:	jne    0x140038ee0
   140039049:	mov    r15,QWORD PTR [rsp+0x20]
   14003904e:	mov    r14,QWORD PTR [rsp+0x60]
   140039053:	mov    r13,QWORD PTR [rsp+0x58]
   140039058:	mov    r12,QWORD PTR [rsp+0x50]
   14003905d:	add    rsp,0x28
   140039061:	pop    rdi
   140039062:	pop    rsi
   140039063:	pop    rbp
   140039064:	pop    rbx
   140039065:	ret    
   140039066:	int3   
   140039067:	int3   
   140039068:	int3   
   140039069:	int3   
   14003906a:	int3   
   14003906b:	int3   
   14003906c:	int3   
   14003906d:	int3   
   14003906e:	int3   
   14003906f:	int3   
   140039070:	mov    rax,rsp
   140039073:	mov    QWORD PTR [rax+0x8],rbx
   140039077:	push   rsi
   140039078:	sub    rsp,0xb0
   14003907f:	cmp    DWORD PTR [rip+0x1b93e],0x0        # 0x1400549c4
   140039086:	movaps XMMWORD PTR [rax-0x18],xmm6
   14003908a:	movsd  xmm6,QWORD PTR [rip+0x1b936]        # 0x1400549c8
   140039092:	movaps XMMWORD PTR [rax-0x28],xmm7
   140039096:	movaps XMMWORD PTR [rax-0x38],xmm8
   14003909b:	movsxd rax,DWORD PTR [rip+0x1b9de]        # 0x140054a80
   1400390a2:	mov    r9,rdx
   1400390a5:	lea    r8,[rax+rax*4]
   1400390a9:	lea    rax,[rip+0x1b930]        # 0x1400549e0
   1400390b0:	xorps  xmm8,xmm8
   1400390b4:	movzx  esi,BYTE PTR [rax+r8*8]
   1400390b9:	mulsd  xmm6,QWORD PTR [rax+r8*8+0x18]
   1400390c0:	mulsd  xmm6,QWORD PTR [rip+0x43c0]        # 0x14003d488
   1400390c8:	divsd  xmm6,QWORD PTR [rip+0xbd58]        # 0x140044e28
   1400390d0:	je     0x1400390dc
   1400390d2:	movsd  xmm7,QWORD PTR [rip+0x610e]        # 0x14003f1e8
   1400390da:	jmp    0x1400390e0
   1400390dc:	movaps xmm7,xmm8
   1400390e0:	movzx  eax,BYTE PTR [rdx+0xa]
   1400390e4:	xor    ebx,ebx
   1400390e6:	cmp    al,0x6c
   1400390e8:	je     0x1400390f1
   1400390ea:	cmp    al,0x72
   1400390ec:	sete   bl
   1400390ef:	inc    ebx
   1400390f1:	mov    DWORD PTR [rsp+0xc8],ecx
   1400390f8:	shr    rcx,0x20
   1400390fc:	mov    DWORD PTR [rsp+0xcc],ecx
   140039103:	mov    rcx,QWORD PTR [rsp+0xc8]
   14003910b:	call   0x140039ce0
   140039110:	mov    rcx,QWORD PTR [r9]
   140039113:	mov    QWORD PTR [rsp+0xc8],rax
   14003911b:	call   0x140039bb0
   140039120:	mov    rcx,QWORD PTR [rip+0x1c3c9]        # 0x1400554f0
   140039127:	mov    QWORD PTR [rsp+0x78],rax
   14003912c:	mov    eax,DWORD PTR [rsp+0xcc]
   140039133:	lea    rdx,[rip+0xbc06]        # 0x140044d40
   14003913a:	mov    DWORD PTR [rsp+0x70],eax
   14003913e:	mov    eax,DWORD PTR [rsp+0xc8]
   140039145:	mov    r9d,ebx
   140039148:	mov    DWORD PTR [rsp+0x68],eax
   14003914c:	mov    r8d,0x4
   140039152:	movups XMMWORD PTR [rsp+0x58],xmm8
   140039158:	mov    DWORD PTR [rsp+0x50],0x0
   140039160:	movsd  QWORD PTR [rsp+0x48],xmm7
   140039166:	movsd  QWORD PTR [rsp+0x40],xmm6
   14003916c:	mov    DWORD PTR [rsp+0x38],0x0
   140039174:	mov    DWORD PTR [rsp+0x30],0x0
   14003917c:	mov    DWORD PTR [rsp+0x28],0x0
   140039184:	mov    DWORD PTR [rsp+0x20],esi
   140039188:	call   QWORD PTR [rip+0x4132]        # 0x14003d2c0
   14003918e:	lea    r11,[rsp+0xb0]
   140039196:	mov    rbx,QWORD PTR [r11+0x10]
   14003919a:	movaps xmm6,XMMWORD PTR [r11-0x10]
   14003919f:	movaps xmm7,XMMWORD PTR [r11-0x20]
   1400391a4:	movaps xmm8,XMMWORD PTR [r11-0x30]
   1400391a9:	mov    rsp,r11
   1400391ac:	pop    rsi
   1400391ad:	ret    
   1400391ae:	int3   
   1400391af:	int3   
   1400391b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400391b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400391ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400391bf:	push   rdi
   1400391c0:	sub    rsp,0x80
   1400391c7:	movsxd rax,DWORD PTR [rip+0x1b8b2]        # 0x140054a80
   1400391ce:	mov    DWORD PTR [rsp+0x78],edx
   1400391d2:	xor    edi,edi
   1400391d4:	mov    DWORD PTR [rsp+0x70],edi
   1400391d8:	mov    DWORD PTR [rsp+0x68],edi
   1400391dc:	mov    DWORD PTR [rsp+0x60],edi
   1400391e0:	lea    r8,[rax+rax*4]
   1400391e4:	mov    rbx,rcx
   1400391e7:	lea    rcx,[rip+0x1b7f2]        # 0x1400549e0
   1400391ee:	movsx  r9d,BYTE PTR [rcx+r8*8+0x12]
   1400391f4:	movzx  eax,BYTE PTR [rcx+r8*8]
   1400391f9:	mov    esi,edx
   1400391fb:	movsd  xmm0,QWORD PTR [rcx+r8*8+0x20]
   140039202:	movsd  QWORD PTR [rsp+0x58],xmm0
   140039208:	mov    rcx,QWORD PTR [rip+0x1c2e1]        # 0x1400554f0
   14003920f:	mov    DWORD PTR [rsp+0x50],0xffffffff
   140039217:	mov    DWORD PTR [rsp+0x48],edi
   14003921b:	mov    DWORD PTR [rsp+0x40],edi
   14003921f:	mov    DWORD PTR [rsp+0x38],edi
   140039223:	mov    DWORD PTR [rsp+0x30],eax
   140039227:	mov    ebp,0x1
   14003922c:	lea    r8d,[rdi+0x3]
   140039230:	lea    rdx,[rip+0xbb41]        # 0x140044d78
   140039237:	mov    DWORD PTR [rsp+0x28],ebp
   14003923b:	mov    DWORD PTR [rsp+0x20],r9d
   140039240:	lea    r9d,[rdi+0x4]
   140039244:	call   QWORD PTR [rip+0x4076]        # 0x14003d2c0
   14003924a:	xor    r8d,r8d
   14003924d:	mov    edx,esi
   14003924f:	mov    rcx,rbx
   140039252:	call   0x140039d60
   140039257:	test   esi,esi
   140039259:	jle    0x140039289
   14003925b:	lea    ebx,[rsi-0x1]
   14003925e:	xchg   ax,ax
   140039260:	mov    rcx,QWORD PTR [rip+0x1c289]        # 0x1400554f0
   140039267:	mov    eax,edi
   140039269:	or     r8d,0xffffffff
   14003926d:	cdq    
   14003926e:	idiv   ebx
   140039270:	test   edx,edx
   140039272:	lea    rdx,[rip+0x52b7]        # 0x14003e530
   140039279:	cmovne r8d,ebp
   14003927d:	call   QWORD PTR [rip+0x403d]        # 0x14003d2c0
   140039283:	inc    edi
   140039285:	cmp    edi,esi
   140039287:	jl     0x140039260
   140039289:	mov    rcx,QWORD PTR [rip+0x1c260]        # 0x1400554f0
   140039290:	lea    rdx,[rip+0x48e1]        # 0x14003db78
   140039297:	lea    r11,[rsp+0x80]
   14003929f:	mov    rbx,QWORD PTR [r11+0x10]
   1400392a3:	mov    rbp,QWORD PTR [r11+0x18]
   1400392a7:	mov    rsi,QWORD PTR [r11+0x20]
   1400392ab:	mov    rsp,r11
   1400392ae:	pop    rdi
   1400392af:	rex.W jmp QWORD PTR [rip+0x400a]        # 0x14003d2c0
   1400392b6:	int3   
   1400392b7:	int3   
   1400392b8:	int3   
   1400392b9:	int3   
   1400392ba:	int3   
   1400392bb:	int3   
   1400392bc:	int3   
   1400392bd:	int3   
   1400392be:	int3   
   1400392bf:	int3   
   1400392c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400392c5:	push   rdi
   1400392c6:	sub    rsp,0x90
   1400392cd:	movsxd rax,DWORD PTR [rip+0x1b7ac]        # 0x140054a80
   1400392d4:	lea    r11,[rip+0x1b705]        # 0x1400549e0
   1400392db:	mov    rdi,rcx
   1400392de:	lea    r10,[rax+rax*4]
   1400392e2:	lea    eax,[rdx+0x1]
   1400392e5:	or     r9d,0xffffffff
   1400392e9:	mov    DWORD PTR [rsp+0x88],eax
   1400392f0:	test   r8d,r8d
   1400392f3:	movzx  r8d,BYTE PTR [r11+r10*8+0x1]
   1400392f9:	movsd  xmm0,QWORD PTR [r11+r10*8+0x20]
   140039300:	mov    ecx,0x14
   140039305:	mov    ebx,edx
   140039307:	movsx  edx,BYTE PTR [r11+r10*8+0x12]
   14003930d:	cmovne r9d,ecx
   140039311:	movzx  ecx,BYTE PTR [r11+r10*8]
   140039316:	xor    eax,eax
   140039318:	mov    DWORD PTR [rsp+0x80],eax
   14003931f:	mov    DWORD PTR [rsp+0x78],eax
   140039323:	mov    DWORD PTR [rsp+0x70],eax
   140039327:	mov    DWORD PTR [rsp+0x68],eax
   14003932b:	mov    DWORD PTR [rsp+0x60],eax
   14003932f:	movsd  QWORD PTR [rsp+0x58],xmm0
   140039335:	mov    DWORD PTR [rsp+0x50],r9d
   14003933a:	mov    DWORD PTR [rsp+0x48],eax
   14003933e:	mov    DWORD PTR [rsp+0x40],eax
   140039342:	mov    DWORD PTR [rsp+0x38],r8d
   140039347:	mov    DWORD PTR [rsp+0x30],ecx
   14003934b:	mov    rcx,QWORD PTR [rip+0x1c19e]        # 0x1400554f0
   140039352:	mov    DWORD PTR [rsp+0x28],0x1
   14003935a:	mov    DWORD PTR [rsp+0x20],edx
   14003935e:	lea    rdx,[rip+0xba43]        # 0x140044da8
   140039365:	lea    r9d,[rax+0x3]
   140039369:	lea    r8d,[rax+0x2]
   14003936d:	call   QWORD PTR [rip+0x3f4d]        # 0x14003d2c0
   140039373:	mov    r8d,0x1
   140039379:	mov    edx,ebx
   14003937b:	mov    rcx,rdi
   14003937e:	mov    rbx,QWORD PTR [rsp+0xa0]
   140039386:	add    rsp,0x90
   14003938d:	pop    rdi
   14003938e:	jmp    0x140039d60
   140039393:	int3   
   140039394:	int3   
   140039395:	int3   
   140039396:	int3   
   140039397:	int3   
   140039398:	int3   
   140039399:	int3   
   14003939a:	int3   
   14003939b:	int3   
   14003939c:	int3   
   14003939d:	int3   
   14003939e:	int3   
   14003939f:	int3   
   1400393a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400393a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400393aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400393af:	mov    QWORD PTR [rsp+0x20],rdi
   1400393b4:	push   r14
   1400393b6:	sub    rsp,0xb0
   1400393bd:	movsxd rax,DWORD PTR [rip+0x1b6bc]        # 0x140054a80
   1400393c4:	movsd  xmm2,QWORD PTR [rip+0x1b5fc]        # 0x1400549c8
   1400393cc:	or     edi,0xffffffff
   1400393cf:	lea    r10,[rax+rax*4]
   1400393d3:	test   r9d,r9d
   1400393d6:	mov    ebx,edx
   1400393d8:	lea    rdx,[rip+0x1b601]        # 0x1400549e0
   1400393df:	mov    eax,0x14
   1400393e4:	mov    r11d,r8d
   1400393e7:	movsx  esi,BYTE PTR [rdx+r10*8+0x12]
   1400393ed:	movzx  ebp,BYTE PTR [rdx+r10*8]
   1400393f2:	movzx  r14d,BYTE PTR [rdx+r10*8+0x1]
   1400393f8:	movsd  xmm3,QWORD PTR [rdx+r10*8+0x20]
   1400393ff:	cmovne edi,eax
   140039402:	cmp    DWORD PTR [rip+0x1b5bb],0x0        # 0x1400549c4
   140039409:	jne    0x140039445
   14003940b:	mov    eax,DWORD PTR [rip+0x1b5cb]        # 0x1400549dc
   140039411:	movd   xmm0,ecx
   140039415:	shr    rcx,0x20
   140039419:	add    eax,eax
   14003941b:	sub    eax,ecx
   14003941d:	movd   xmm1,ebx
   140039421:	cvtdq2pd xmm0,xmm0
   140039425:	mulsd  xmm0,xmm2
   140039429:	cvttsd2si edx,xmm0
   14003942d:	movd   xmm0,eax
   140039431:	cvtdq2pd xmm0,xmm0
   140039435:	mulsd  xmm0,xmm2
   140039439:	cvttsd2si r8d,xmm0
   14003943e:	movd   xmm0,r11d
   140039443:	jmp    0x140039480
   140039445:	mov    eax,DWORD PTR [rip+0x1b58d]        # 0x1400549d8
   14003944b:	mov    rdx,rcx
   14003944e:	movd   xmm1,r11d
   140039453:	shr    rdx,0x20
   140039457:	add    eax,eax
   140039459:	sub    eax,edx
   14003945b:	movd   xmm0,eax
   14003945f:	cvtdq2pd xmm0,xmm0
   140039463:	mulsd  xmm0,xmm2
   140039467:	cvttsd2si edx,xmm0
   14003946b:	movd   xmm0,ecx
   14003946f:	cvtdq2pd xmm0,xmm0
   140039473:	mulsd  xmm0,xmm2
   140039477:	cvttsd2si r8d,xmm0
   14003947c:	movd   xmm0,ebx
   140039480:	cvtdq2pd xmm0,xmm0
   140039484:	cvtdq2pd xmm1,xmm1
   140039488:	mulsd  xmm0,xmm2
   14003948c:	mulsd  xmm1,xmm2
   140039490:	cvttsd2si r10d,xmm0
   140039495:	cvttsd2si r9d,xmm1
   14003949a:	xorps  xmm0,xmm0
   14003949d:	lea    ecx,[r9+rdx*1]
   1400394a1:	lea    eax,[r10+r8*1]
   1400394a5:	mov    DWORD PTR [rsp+0xa8],eax
   1400394ac:	mov    DWORD PTR [rsp+0xa0],ecx
   1400394b3:	mov    rcx,QWORD PTR [rip+0x1c036]        # 0x1400554f0
   1400394ba:	mov    DWORD PTR [rsp+0x98],r8d
   1400394c2:	mov    DWORD PTR [rsp+0x90],edx
   1400394c9:	mov    DWORD PTR [rsp+0x88],r10d
   1400394d1:	mov    DWORD PTR [rsp+0x80],r9d
   1400394d9:	mov    DWORD PTR [rsp+0x78],r8d
   1400394de:	mov    DWORD PTR [rsp+0x70],edx
   1400394e2:	movsd  QWORD PTR [rsp+0x68],xmm0
   1400394e8:	xor    eax,eax
   1400394ea:	mov    r9d,0x1
   1400394f0:	lea    rdx,[rip+0xb8e9]        # 0x140044de0
   1400394f7:	mov    DWORD PTR [rsp+0x60],eax
   1400394fb:	mov    r8d,r9d
   1400394fe:	movsd  QWORD PTR [rsp+0x58],xmm3
   140039504:	mov    DWORD PTR [rsp+0x50],edi
   140039508:	mov    DWORD PTR [rsp+0x48],eax
   14003950c:	mov    DWORD PTR [rsp+0x40],eax
   140039510:	mov    DWORD PTR [rsp+0x38],r14d
   140039515:	mov    DWORD PTR [rsp+0x30],ebp
   140039519:	mov    DWORD PTR [rsp+0x28],0x1
   140039521:	mov    DWORD PTR [rsp+0x20],esi
   140039525:	call   QWORD PTR [rip+0x3d95]        # 0x14003d2c0
   14003952b:	lea    r11,[rsp+0xb0]
   140039533:	mov    rbx,QWORD PTR [r11+0x10]
   140039537:	mov    rbp,QWORD PTR [r11+0x18]
   14003953b:	mov    rsi,QWORD PTR [r11+0x20]
   14003953f:	mov    rdi,QWORD PTR [r11+0x28]
   140039543:	mov    rsp,r11
   140039546:	pop    r14
   140039548:	ret    
   140039549:	int3   
   14003954a:	int3   
   14003954b:	int3   
   14003954c:	int3   
   14003954d:	int3   
   14003954e:	int3   
   14003954f:	int3   
   140039550:	mov    r11,rsp
   140039553:	mov    QWORD PTR [r11+0x8],rbx
   140039557:	push   rdi
   140039558:	sub    rsp,0x90
   14003955f:	movsxd rax,DWORD PTR [rip+0x1b51a]        # 0x140054a80
   140039566:	mov    ebx,edx
   140039568:	lea    rdx,[rip+0x1b471]        # 0x1400549e0
   14003956f:	mov    DWORD PTR [r11-0x10],ebx
   140039573:	lea    r8,[rax+rax*4]
   140039577:	mov    rdi,rcx
   14003957a:	movzx  eax,BYTE PTR [rdx+r8*8]
   14003957f:	movsx  r10d,BYTE PTR [rdx+r8*8+0x12]
   140039585:	xor    ecx,ecx
   140039587:	movsd  xmm0,QWORD PTR [rdx+r8*8+0x20]
   14003958e:	mov    DWORD PTR [r11-0x18],ecx
   140039592:	mov    DWORD PTR [rsp+0x78],ecx
   140039596:	mov    DWORD PTR [rsp+0x70],ecx
   14003959a:	mov    DWORD PTR [rsp+0x68],ecx
   14003959e:	mov    DWORD PTR [rsp+0x60],ecx
   1400395a2:	lea    r9d,[rcx+0x1]
   1400395a6:	movsd  QWORD PTR [rsp+0x58],xmm0
   1400395ac:	mov    DWORD PTR [rsp+0x50],ecx
   1400395b0:	mov    DWORD PTR [rsp+0x48],ecx
   1400395b4:	mov    DWORD PTR [rsp+0x40],ecx
   1400395b8:	mov    DWORD PTR [rsp+0x38],ecx
   1400395bc:	mov    DWORD PTR [rsp+0x30],eax
   1400395c0:	lea    r8d,[rcx+0x2]
   1400395c4:	mov    rcx,QWORD PTR [rip+0x1bf25]        # 0x1400554f0
   1400395cb:	lea    rdx,[rip+0xb7d6]        # 0x140044da8
   1400395d2:	mov    DWORD PTR [rsp+0x28],0x1
   1400395da:	mov    DWORD PTR [r11-0x78],r10d
   1400395de:	call   QWORD PTR [rip+0x3cdc]        # 0x14003d2c0
   1400395e4:	xor    r8d,r8d
   1400395e7:	mov    edx,ebx
   1400395e9:	mov    rcx,rdi
   1400395ec:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400395f4:	add    rsp,0x90
   1400395fb:	pop    rdi
   1400395fc:	jmp    0x140039d60
   140039601:	int3   
   140039602:	int3   
   140039603:	int3   
   140039604:	int3   
   140039605:	int3   
   140039606:	int3   
   140039607:	int3   
   140039608:	int3   
   140039609:	int3   
   14003960a:	int3   
   14003960b:	int3   
   14003960c:	int3   
   14003960d:	int3   
   14003960e:	int3   
   14003960f:	int3   
   140039610:	mov    QWORD PTR [rsp+0x8],rbx
   140039615:	mov    QWORD PTR [rsp+0x10],rsi
   14003961a:	push   rdi
   14003961b:	sub    rsp,0x20
   14003961f:	cmp    BYTE PTR [rip+0x197c2],0x0        # 0x140052de8
   140039626:	mov    ebx,r9d
   140039629:	mov    edi,r8d
   14003962c:	mov    rsi,rdx
   14003962f:	je     0x14003964f
   140039631:	call   QWORD PTR [rip+0x3c99]        # 0x14003d2d0
   140039637:	lea    rdx,[rip+0x88e2]        # 0x140041f20
   14003963e:	lea    rcx,[rax+0x60]
   140039642:	call   QWORD PTR [rip+0x3c78]        # 0x14003d2c0
   140039648:	mov    BYTE PTR [rip+0x19799],0x0        # 0x140052de8
   14003964f:	mov    r8d,ebx
   140039652:	mov    edx,edi
   140039654:	mov    rcx,rsi
   140039657:	mov    rbx,QWORD PTR [rsp+0x30]
   14003965c:	mov    rsi,QWORD PTR [rsp+0x38]
   140039661:	add    rsp,0x20
   140039665:	pop    rdi
   140039666:	jmp    0x1400392c0
   14003966b:	int3   
   14003966c:	int3   
   14003966d:	int3   
   14003966e:	int3   
   14003966f:	int3   
   140039670:	mov    DWORD PTR [rip+0x1987e],0x1        # 0x140052ef8
   14003967a:	ret    
   14003967b:	int3   
   14003967c:	int3   
   14003967d:	int3   
   14003967e:	int3   
   14003967f:	int3   
   140039680:	mov    QWORD PTR [rsp+0x8],rbx
   140039685:	push   rdi
   140039686:	sub    rsp,0x30
   14003968a:	mov    rax,QWORD PTR [rsp+0x68]
   14003968f:	mov    rdi,rdx
   140039692:	lea    rdx,[rip+0xb54f]        # 0x140044be8
   140039699:	mov    rcx,rax
   14003969c:	mov    rbx,r9
   14003969f:	shr    rcx,0x20
   1400396a3:	imul   ecx,eax
   1400396a6:	mov    DWORD PTR [rip+0x1b314],ecx        # 0x1400549c0
   1400396ac:	mov    rcx,QWORD PTR [rip+0x1be3d]        # 0x1400554f0
   1400396b3:	call   QWORD PTR [rip+0x3c07]        # 0x14003d2c0
   1400396b9:	mov    rcx,QWORD PTR [rip+0x1be30]        # 0x1400554f0
   1400396c0:	lea    rdx,[rip+0xb531]        # 0x140044bf8
   1400396c7:	call   QWORD PTR [rip+0x3bf3]        # 0x14003d2c0
   1400396cd:	mov    rcx,QWORD PTR [rip+0x1be1c]        # 0x1400554f0
   1400396d4:	lea    rdx,[rip+0xb52d]        # 0x140044c08
   1400396db:	call   QWORD PTR [rip+0x3bdf]        # 0x14003d2c0
   1400396e1:	mov    rcx,QWORD PTR [rip+0x1be08]        # 0x1400554f0
   1400396e8:	lea    rdx,[rip+0xb521]        # 0x140044c10
   1400396ef:	call   QWORD PTR [rip+0x3bcb]        # 0x14003d2c0
   1400396f5:	mov    rcx,QWORD PTR [rip+0x1bdf4]        # 0x1400554f0
   1400396fc:	lea    rdx,[rip+0xb515]        # 0x140044c18
   140039703:	call   QWORD PTR [rip+0x3bb7]        # 0x14003d2c0
   140039709:	mov    rcx,QWORD PTR [rip+0x1bde0]        # 0x1400554f0
   140039710:	lea    rdx,[rip+0xb509]        # 0x140044c20
   140039717:	call   QWORD PTR [rip+0x3ba3]        # 0x14003d2c0
   14003971d:	mov    rcx,QWORD PTR [rip+0x1bdcc]        # 0x1400554f0
   140039724:	lea    rdx,[rip+0xb4fd]        # 0x140044c28
   14003972b:	call   QWORD PTR [rip+0x3b8f]        # 0x14003d2c0
   140039731:	mov    rcx,QWORD PTR [rip+0x1bdb8]        # 0x1400554f0
   140039738:	lea    rdx,[rip+0xb4f1]        # 0x140044c30
   14003973f:	call   QWORD PTR [rip+0x3b7b]        # 0x14003d2c0
   140039745:	mov    rcx,QWORD PTR [rip+0x1bda4]        # 0x1400554f0
   14003974c:	lea    rdx,[rip+0xb4e5]        # 0x140044c38
   140039753:	call   QWORD PTR [rip+0x3b67]        # 0x14003d2c0
   140039759:	mov    r8,QWORD PTR [rsp+0x60]
   14003975e:	mov    rcx,QWORD PTR [rip+0x1bd8b]        # 0x1400554f0
   140039765:	mov    rax,QWORD PTR [r8+0x10]
   140039769:	mov    r9,QWORD PTR [r8+0x8]
   14003976d:	mov    r8,QWORD PTR [r8]
   140039770:	lea    rdx,[rip+0xb4c9]        # 0x140044c40
   140039777:	mov    QWORD PTR [rsp+0x20],rax
   14003977c:	call   QWORD PTR [rip+0x3b3e]        # 0x14003d2c0
   140039782:	mov    rcx,QWORD PTR [rip+0x1bd67]        # 0x1400554f0
   140039789:	lea    rdx,[rip+0x8930]        # 0x1400420c0
   140039790:	mov    r8,rbx
   140039793:	call   QWORD PTR [rip+0x3b27]        # 0x14003d2c0
   140039799:	mov    r8,QWORD PTR [rdi+0x10]
   14003979d:	mov    rcx,QWORD PTR [rip+0x1bd4c]        # 0x1400554f0
   1400397a4:	lea    rdx,[rip+0x8925]        # 0x1400420d0
   1400397ab:	call   QWORD PTR [rip+0x3b0f]        # 0x14003d2c0
   1400397b1:	mov    r8d,DWORD PTR [rip+0x1b208]        # 0x1400549c0
   1400397b8:	mov    rcx,QWORD PTR [rip+0x1bd31]        # 0x1400554f0
   1400397bf:	lea    rdx,[rip+0x891a]        # 0x1400420e0
   1400397c6:	call   QWORD PTR [rip+0x3af4]        # 0x14003d2c0
   1400397cc:	mov    rbx,QWORD PTR [rsp+0x40]
   1400397d1:	add    rsp,0x30
   1400397d5:	pop    rdi
   1400397d6:	ret    
   1400397d7:	int3   
   1400397d8:	int3   
   1400397d9:	int3   
   1400397da:	int3   
   1400397db:	int3   
   1400397dc:	int3   
   1400397dd:	int3   
   1400397de:	int3   
   1400397df:	int3   
   1400397e0:	mov    rcx,QWORD PTR [rip+0x1bd09]        # 0x1400554f0
   1400397e7:	lea    rdx,[rip+0xb47a]        # 0x140044c68
   1400397ee:	rex.W jmp QWORD PTR [rip+0x3acb]        # 0x14003d2c0
   1400397f5:	int3   
   1400397f6:	int3   
   1400397f7:	int3   
   1400397f8:	int3   
   1400397f9:	int3   
   1400397fa:	int3   
   1400397fb:	int3   
   1400397fc:	int3   
   1400397fd:	int3   
   1400397fe:	int3   
   1400397ff:	int3   
   140039800:	rex push rbx
   140039802:	sub    rsp,0x20
   140039806:	cmp    DWORD PTR [rip+0x196eb],0x0        # 0x140052ef8
   14003980d:	movups xmm0,XMMWORD PTR [rdx]
   140039810:	mov    rbx,rcx
   140039813:	movups XMMWORD PTR [rip+0x1b1b6],xmm0        # 0x1400549d0
   14003981a:	je     0x1400398a7
   140039820:	lea    rax,[rip+0x5021]        # 0x14003e848
   140039827:	xorps  xmm0,xmm0
   14003982a:	lea    rdx,[rip+0x4e5f]        # 0x14003e690
   140039831:	mov    DWORD PTR [rip+0x1b245],0x0        # 0x140054a80
   14003983b:	mov    WORD PTR [rip+0x1b19c],0x0        # 0x1400549e0
   140039844:	mov    BYTE PTR [rip+0x1b1a5],0x0        # 0x1400549f0
   14003984b:	movsd  QWORD PTR [rip+0x1b1ad],xmm0        # 0x140054a00
   140039853:	mov    QWORD PTR [rip+0x1b18e],rax        # 0x1400549e8
   14003985a:	mov    WORD PTR [rip+0x1b18f],0xf00        # 0x1400549f2
   140039863:	mov    BYTE PTR [rip+0x1b18a],0x1        # 0x1400549f4
   14003986a:	call   0x140027500
   14003986f:	lea    r8,[rip+0x3ba2]        # 0x14003d418
   140039876:	mov    rcx,rbx
   140039879:	mov    rdx,rax
   14003987c:	call   0x14001c3e0
   140039881:	cmp    BYTE PTR [rax],0x0
   140039884:	je     0x14003989d
   140039886:	mov    rcx,QWORD PTR [rip+0x1bc63]        # 0x1400554f0
   14003988d:	lea    rdx,[rip+0x87e8]        # 0x14004207c
   140039894:	mov    r8,rax
   140039897:	call   QWORD PTR [rip+0x3a23]        # 0x14003d2c0
   14003989d:	mov    DWORD PTR [rip+0x19651],0x0        # 0x140052ef8
   1400398a7:	add    rsp,0x20
   1400398ab:	pop    rbx
   1400398ac:	ret    
   1400398ad:	int3   
   1400398ae:	int3   
   1400398af:	int3   
   1400398b0:	ret    0x0
   1400398b3:	int3   
   1400398b4:	int3   
   1400398b5:	int3   
   1400398b6:	int3   
   1400398b7:	int3   
   1400398b8:	int3   
   1400398b9:	int3   
   1400398ba:	int3   
   1400398bb:	int3   
   1400398bc:	int3   
   1400398bd:	int3   
   1400398be:	int3   
   1400398bf:	int3   
   1400398c0:	mulsd  xmm2,QWORD PTR [rip+0xb560]        # 0x140044e28
   1400398c8:	mov    DWORD PTR [rip+0x1b0f5],r9d        # 0x1400549c4
   1400398cf:	divsd  xmm2,QWORD PTR [rip+0x3bb1]        # 0x14003d488
   1400398d7:	movsd  QWORD PTR [rip+0x1b0e9],xmm2        # 0x1400549c8
   1400398df:	ret    
   1400398e0:	ret    0x0
   1400398e3:	int3   
   1400398e4:	int3   
   1400398e5:	int3   
   1400398e6:	int3   
   1400398e7:	int3   
   1400398e8:	int3   
   1400398e9:	int3   
   1400398ea:	int3   
   1400398eb:	int3   
   1400398ec:	int3   
   1400398ed:	int3   
   1400398ee:	int3   
   1400398ef:	int3   
   1400398f0:	ret    0x0
   1400398f3:	int3   
   1400398f4:	int3   
   1400398f5:	int3   
   1400398f6:	int3   
   1400398f7:	int3   
   1400398f8:	int3   
   1400398f9:	int3   
   1400398fa:	int3   
   1400398fb:	int3   
   1400398fc:	int3   
   1400398fd:	int3   
   1400398fe:	int3   
   1400398ff:	int3   
   140039900:	ret    0x0
   140039903:	int3   
   140039904:	int3   
   140039905:	int3   
   140039906:	int3   
   140039907:	int3   
   140039908:	int3   
   140039909:	int3   
   14003990a:	int3   
   14003990b:	int3   
   14003990c:	int3   
   14003990d:	int3   
   14003990e:	int3   
   14003990f:	int3   
   140039910:	ret    0x0
   140039913:	int3   
   140039914:	int3   
   140039915:	int3   
   140039916:	int3   
   140039917:	int3   
   140039918:	int3   
   140039919:	int3   
   14003991a:	int3   
   14003991b:	int3   
   14003991c:	int3   
   14003991d:	int3   
   14003991e:	int3   
   14003991f:	int3   
   140039920:	mov    QWORD PTR [rsp+0x8],rbx
   140039925:	mov    QWORD PTR [rsp+0x10],rbp
   14003992a:	mov    QWORD PTR [rsp+0x18],rsi
   14003992f:	mov    QWORD PTR [rsp+0x20],rdi
   140039934:	push   r14
   140039936:	push   r15
   140039938:	mov    r10d,DWORD PTR [rip+0x1b07d]        # 0x1400549bc
   14003993f:	xor    eax,eax
   140039941:	or     ebx,0xffffffff
   140039944:	mov    edi,r9d
   140039947:	mov    esi,r8d
   14003994a:	mov    ebp,edx
   14003994c:	mov    r14,rcx
   14003994f:	mov    r11d,0x2fa03
   140039955:	mov    DWORD PTR [rcx],eax
   140039957:	lea    r15,[rip+0xfffffffffffc66a2]        # 0x140000000
   14003995e:	test   r10d,r10d
   140039961:	jle    0x1400399b2
   140039963:	mov    r9d,eax
   140039966:	movsx  ecx,WORD PTR [r9+r15*1+0x54c90]
   14003996f:	movsx  r8d,WORD PTR [r9+r15*1+0x54e90]
   140039978:	movsx  edx,WORD PTR [r9+r15*1+0x54a90]
   140039981:	sub    r8d,edi
   140039984:	sub    ecx,esi
   140039986:	sub    edx,ebp
   140039988:	imul   r8d,r8d
   14003998c:	imul   ecx,ecx
   14003998f:	imul   edx,edx
   140039992:	add    r8d,ecx
   140039995:	add    r8d,edx
   140039998:	cmp    r8d,r11d
   14003999b:	jge    0x1400399a7
   14003999d:	test   r8d,r8d
   1400399a0:	je     0x1400399f0
   1400399a2:	mov    r11d,r8d
   1400399a5:	mov    ebx,eax
   1400399a7:	inc    eax
   1400399a9:	add    r9,0x2
   1400399ad:	cmp    eax,r10d
   1400399b0:	jl     0x140039966
   1400399b2:	mov    ecx,r10d
   1400399b5:	inc    r10d
   1400399b8:	mov    DWORD PTR [rip+0x1affd],r10d        # 0x1400549bc
   1400399bf:	cmp    ecx,0x100
   1400399c5:	jne    0x1400399cb
   1400399c7:	mov    eax,ebx
   1400399c9:	jmp    0x1400399f0
   1400399cb:	movsxd rcx,eax
   1400399ce:	mov    DWORD PTR [r14],0x1
   1400399d5:	mov    WORD PTR [r15+rcx*2+0x54a90],bp
   1400399de:	mov    WORD PTR [r15+rcx*2+0x54c90],si
   1400399e7:	mov    WORD PTR [r15+rcx*2+0x54e90],di
   1400399f0:	mov    rbx,QWORD PTR [rsp+0x18]
   1400399f5:	mov    rbp,QWORD PTR [rsp+0x20]
   1400399fa:	mov    rsi,QWORD PTR [rsp+0x28]
   1400399ff:	mov    rdi,QWORD PTR [rsp+0x30]
   140039a04:	pop    r15
   140039a06:	pop    r14
   140039a08:	ret    
   140039a09:	int3   
   140039a0a:	int3   
   140039a0b:	int3   
   140039a0c:	int3   
   140039a0d:	int3   
   140039a0e:	int3   
   140039a0f:	int3   
   140039a10:	sub    rsp,0x48
   140039a14:	mov    DWORD PTR [rsp+0x30],r9d
   140039a19:	mov    DWORD PTR [rsp+0x28],r8d
   140039a1e:	mov    r9d,ecx
   140039a21:	mov    rcx,QWORD PTR [rip+0x1bac8]        # 0x1400554f0
   140039a28:	mov    DWORD PTR [rsp+0x20],edx
   140039a2c:	lea    rdx,[rip+0xb2c5]        # 0x140044cf8
   140039a33:	xor    r8d,r8d
   140039a36:	call   QWORD PTR [rip+0x3884]        # 0x14003d2c0
   140039a3c:	add    rsp,0x48
   140039a40:	ret    
   140039a41:	int3   
   140039a42:	int3   
   140039a43:	int3   
   140039a44:	int3   
   140039a45:	int3   
   140039a46:	int3   
   140039a47:	int3   
   140039a48:	int3   
   140039a49:	int3   
   140039a4a:	int3   
   140039a4b:	int3   
   140039a4c:	int3   
   140039a4d:	int3   
   140039a4e:	int3   
   140039a4f:	int3   
   140039a50:	sub    rsp,0x28
   140039a54:	lea    r8,[rip+0x39bd]        # 0x14003d418
   140039a5b:	call   0x14001c3e0
   140039a60:	cmp    BYTE PTR [rax],0x0
   140039a63:	je     0x140039a81
   140039a65:	mov    rcx,QWORD PTR [rip+0x1ba84]        # 0x1400554f0
   140039a6c:	lea    rdx,[rip+0x8609]        # 0x14004207c
   140039a73:	mov    r8,rax
   140039a76:	add    rsp,0x28
   140039a7a:	rex.W jmp QWORD PTR [rip+0x383f]        # 0x14003d2c0
   140039a81:	add    rsp,0x28
   140039a85:	ret    
   140039a86:	int3   
   140039a87:	int3   
   140039a88:	int3   
   140039a89:	int3   
   140039a8a:	int3   
   140039a8b:	int3   
   140039a8c:	int3   
   140039a8d:	int3   
   140039a8e:	int3   
   140039a8f:	int3   
   140039a90:	ret    0x0
   140039a93:	int3   
   140039a94:	int3   
   140039a95:	int3   
   140039a96:	int3   
   140039a97:	int3   
   140039a98:	int3   
   140039a99:	int3   
   140039a9a:	int3   
   140039a9b:	int3   
   140039a9c:	int3   
   140039a9d:	int3   
   140039a9e:	int3   
   140039a9f:	int3   
   140039aa0:	rex push rbx
   140039aa2:	sub    rsp,0x60
   140039aa6:	mov    rbx,rcx
   140039aa9:	call   0x140026140
   140039aae:	mov    rdx,QWORD PTR [rip+0x192eb]        # 0x140052da0
   140039ab5:	xor    r9b,r9b
   140039ab8:	mov    r10,rax
   140039abb:	test   rdx,rdx
   140039abe:	je     0x140039b0b
   140039ac0:	lea    r11,[rip+0x192d9]        # 0x140052da0
   140039ac7:	nop    WORD PTR [rax+rax*1+0x0]
   140039ad0:	mov    r8,r10
   140039ad3:	sub    r8,rdx
   140039ad6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140039ae0:	movzx  ecx,BYTE PTR [rdx]
   140039ae3:	movzx  eax,BYTE PTR [rdx+r8*1]
   140039ae8:	sub    ecx,eax
   140039aea:	jne    0x140039af3
   140039aec:	inc    rdx
   140039aef:	test   eax,eax
   140039af1:	jne    0x140039ae0
   140039af3:	test   ecx,ecx
   140039af5:	je     0x140039ba5
   140039afb:	inc    r9b
   140039afe:	movzx  eax,r9b
   140039b02:	mov    rdx,QWORD PTR [r11+rax*8]
   140039b06:	test   rdx,rdx
   140039b09:	jne    0x140039ad0
   140039b0b:	mov    QWORD PTR [rsp+0x70],rbp
   140039b10:	lea    rdx,[rsp+0x40]
   140039b15:	mov    r8d,0x1
   140039b1b:	mov    rcx,rbx
   140039b1e:	mov    QWORD PTR [rsp+0x80],rsi
   140039b26:	mov    QWORD PTR [rsp+0x88],rdi
   140039b2e:	call   0x140026220
   140039b33:	movzx  edi,BYTE PTR [rsp+0x42]
   140039b38:	movzx  esi,BYTE PTR [rsp+0x41]
   140039b3d:	movzx  ebp,BYTE PTR [rsp+0x40]
   140039b42:	lea    rcx,[rsp+0x78]
   140039b47:	mov    r9d,edi
   140039b4a:	mov    r8d,esi
   140039b4d:	mov    edx,ebp
   140039b4f:	call   0x140039920
   140039b54:	mov    ebx,eax
   140039b56:	add    bl,0x20
   140039b59:	cmp    DWORD PTR [rsp+0x78],0x0
   140039b5e:	je     0x140039b87
   140039b60:	mov    rcx,QWORD PTR [rip+0x1b989]        # 0x1400554f0
   140039b67:	mov    DWORD PTR [rsp+0x30],edi
   140039b6b:	lea    rdx,[rip+0xb186]        # 0x140044cf8
   140039b72:	movzx  r9d,bl
   140039b76:	xor    r8d,r8d
   140039b79:	mov    DWORD PTR [rsp+0x28],esi
   140039b7d:	mov    DWORD PTR [rsp+0x20],ebp
   140039b81:	call   QWORD PTR [rip+0x3739]        # 0x14003d2c0
   140039b87:	mov    rdi,QWORD PTR [rsp+0x88]
   140039b8f:	mov    rsi,QWORD PTR [rsp+0x80]
   140039b97:	mov    rbp,QWORD PTR [rsp+0x70]
   140039b9c:	movzx  eax,bl
   140039b9f:	add    rsp,0x60
   140039ba3:	pop    rbx
   140039ba4:	ret    
   140039ba5:	movzx  eax,r9b
   140039ba9:	add    rsp,0x60
   140039bad:	pop    rbx
   140039bae:	ret    
   140039baf:	int3   
   140039bb0:	mov    QWORD PTR [rsp+0x10],rbx
   140039bb5:	mov    QWORD PTR [rsp+0x18],rsi
   140039bba:	push   rdi
   140039bbb:	sub    rsp,0x20
   140039bbf:	mov    r8,QWORD PTR [rip+0x1adea]        # 0x1400549b0
   140039bc6:	xor    ebx,ebx
   140039bc8:	mov    rdi,rcx
   140039bcb:	test   r8,r8
   140039bce:	jne    0x140039bef
   140039bd0:	mov    esi,0x40
   140039bd5:	mov    ecx,esi
   140039bd7:	mov    DWORD PTR [rip+0x1addb],esi        # 0x1400549b8
   140039bdd:	call   QWORD PTR [rip+0x3585]        # 0x14003d168
   140039be3:	mov    r8,rax
   140039be6:	mov    QWORD PTR [rip+0x1adc3],rax        # 0x1400549b0
   140039bed:	jmp    0x140039bf5
   140039bef:	mov    esi,DWORD PTR [rip+0x1adc3]        # 0x1400549b8
   140039bf5:	mov    rax,r8
   140039bf8:	cmp    BYTE PTR [rdi],bl
   140039bfa:	je     0x140039c97
   140039c00:	mov    QWORD PTR [rsp+0x30],rbp
   140039c05:	movabs rbp,0x220000000800001
   140039c0f:	nop
   140039c10:	lea    ecx,[rsi-0x8]
   140039c13:	cmp    ebx,ecx
   140039c15:	jle    0x140039c38
   140039c17:	lea    eax,[rsi+rsi*1]
   140039c1a:	mov    rcx,r8
   140039c1d:	movsxd rsi,eax
   140039c20:	mov    rdx,rsi
   140039c23:	mov    DWORD PTR [rip+0x1ad8f],esi        # 0x1400549b8
   140039c29:	call   QWORD PTR [rip+0x3479]        # 0x14003d0a8
   140039c2f:	mov    r8,rax
   140039c32:	movsxd rax,ebx
   140039c35:	add    rax,r8
   140039c38:	movzx  edx,BYTE PTR [rdi]
   140039c3b:	movzx  ecx,dl
   140039c3e:	cmp    dl,0x9
   140039c41:	je     0x140039c5e
   140039c43:	sub    cl,0x27
   140039c46:	cmp    cl,0x39
   140039c49:	ja     0x140039c55
   140039c4b:	bt     rbp,rcx
   140039c4f:	jae    0x140039c55
   140039c51:	test   dl,dl
   140039c53:	jne    0x140039c60
   140039c55:	mov    BYTE PTR [rax],dl
   140039c57:	inc    rax
   140039c5a:	inc    ebx
   140039c5c:	jmp    0x140039c6d
   140039c5e:	mov    dl,0x74
   140039c60:	mov    BYTE PTR [rax],0x5c
   140039c63:	mov    BYTE PTR [rax+0x1],dl
   140039c66:	add    rax,0x2
   140039c6a:	add    ebx,0x2
   140039c6d:	inc    rdi
   140039c70:	cmp    BYTE PTR [rdi],0x0
   140039c73:	jne    0x140039c10
   140039c75:	mov    rbp,QWORD PTR [rsp+0x30]
   140039c7a:	mov    BYTE PTR [rax],0x0
   140039c7d:	mov    QWORD PTR [rip+0x1ad2c],r8        # 0x1400549b0
   140039c84:	mov    rax,r8
   140039c87:	mov    rbx,QWORD PTR [rsp+0x38]
   140039c8c:	mov    rsi,QWORD PTR [rsp+0x40]
   140039c91:	add    rsp,0x20
   140039c95:	pop    rdi
   140039c96:	ret    
   140039c97:	mov    rsi,QWORD PTR [rsp+0x40]
   140039c9c:	mov    BYTE PTR [r8],bl
   140039c9f:	mov    rbx,QWORD PTR [rsp+0x38]
   140039ca4:	add    rsp,0x20
   140039ca8:	pop    rdi
   140039ca9:	ret    
   140039caa:	int3   
   140039cab:	int3   
   140039cac:	int3   
   140039cad:	int3   
   140039cae:	int3   
   140039caf:	int3   
   140039cb0:	ret    0x0
   140039cb3:	int3   
   140039cb4:	int3   
   140039cb5:	int3   
   140039cb6:	int3   
   140039cb7:	int3   
   140039cb8:	int3   
   140039cb9:	int3   
   140039cba:	int3   
   140039cbb:	int3   
   140039cbc:	int3   
   140039cbd:	int3   
   140039cbe:	int3   
   140039cbf:	int3   
   140039cc0:	movsd  xmm1,QWORD PTR [rip+0x1ad00]        # 0x1400549c8
   140039cc8:	mulsd  xmm1,xmm0
   140039ccc:	mulsd  xmm1,QWORD PTR [rip+0x37b4]        # 0x14003d488
   140039cd4:	divsd  xmm1,QWORD PTR [rip+0xb14c]        # 0x140044e28
   140039cdc:	movaps xmm0,xmm1
   140039cdf:	ret    
   140039ce0:	cmp    DWORD PTR [rip+0x1acdd],0x0        # 0x1400549c4
   140039ce7:	jne    0x140039d15
   140039ce9:	movd   xmm0,ecx
   140039ced:	shr    rcx,0x20
   140039cf1:	cvtdq2pd xmm0,xmm0
   140039cf5:	mulsd  xmm0,QWORD PTR [rip+0x1accb]        # 0x1400549c8
   140039cfd:	cvttsd2si eax,xmm0
   140039d01:	mov    DWORD PTR [rsp+0x10],eax
   140039d05:	mov    eax,DWORD PTR [rip+0x1acd1]        # 0x1400549dc
   140039d0b:	add    eax,eax
   140039d0d:	sub    eax,ecx
   140039d0f:	movd   xmm0,eax
   140039d13:	jmp    0x140039d42
   140039d15:	mov    eax,DWORD PTR [rip+0x1acbd]        # 0x1400549d8
   140039d1b:	mov    rdx,rcx
   140039d1e:	add    eax,eax
   140039d20:	shr    rdx,0x20
   140039d24:	sub    eax,edx
   140039d26:	movd   xmm0,eax
   140039d2a:	cvtdq2pd xmm0,xmm0
   140039d2e:	mulsd  xmm0,QWORD PTR [rip+0x1ac92]        # 0x1400549c8
   140039d36:	cvttsd2si eax,xmm0
   140039d3a:	movd   xmm0,ecx
   140039d3e:	mov    DWORD PTR [rsp+0x10],eax
   140039d42:	cvtdq2pd xmm0,xmm0
   140039d46:	mulsd  xmm0,QWORD PTR [rip+0x1ac7a]        # 0x1400549c8
   140039d4e:	cvttsd2si eax,xmm0
   140039d52:	mov    DWORD PTR [rsp+0x14],eax
   140039d56:	mov    rax,QWORD PTR [rsp+0x10]
   140039d5b:	ret    
   140039d5c:	int3   
   140039d5d:	int3   
   140039d5e:	int3   
   140039d5f:	int3   
   140039d60:	mov    QWORD PTR [rsp+0x8],rbx
   140039d65:	mov    QWORD PTR [rsp+0x10],rbp
   140039d6a:	mov    QWORD PTR [rsp+0x18],rsi
   140039d6f:	push   rdi
   140039d70:	sub    rsp,0x20
   140039d74:	xor    ebx,ebx
   140039d76:	mov    ebp,r8d
   140039d79:	mov    rdi,rcx
   140039d7c:	movsxd rsi,edx
   140039d7f:	test   edx,edx
   140039d81:	jle    0x140039e2a
   140039d87:	nop    WORD PTR [rax+rax*1+0x0]
   140039d90:	cmp    DWORD PTR [rip+0x1ac2d],0x0        # 0x1400549c4
   140039d97:	mov    ecx,DWORD PTR [rdi+rbx*8]
   140039d9a:	mov    edx,DWORD PTR [rdi+rbx*8+0x4]
   140039d9e:	jne    0x140039dc5
   140039da0:	mov    eax,DWORD PTR [rip+0x1ac36]        # 0x1400549dc
   140039da6:	movd   xmm0,ecx
   140039daa:	add    eax,eax
   140039dac:	sub    eax,edx
   140039dae:	cvtdq2pd xmm0,xmm0
   140039db2:	mulsd  xmm0,QWORD PTR [rip+0x1ac0e]        # 0x1400549c8
   140039dba:	cvttsd2si r8d,xmm0
   140039dbf:	movd   xmm0,eax
   140039dc3:	jmp    0x140039de8
   140039dc5:	mov    eax,DWORD PTR [rip+0x1ac0d]        # 0x1400549d8
   140039dcb:	add    eax,eax
   140039dcd:	sub    eax,edx
   140039dcf:	movd   xmm0,eax
   140039dd3:	cvtdq2pd xmm0,xmm0
   140039dd7:	mulsd  xmm0,QWORD PTR [rip+0x1abe9]        # 0x1400549c8
   140039ddf:	cvttsd2si r8d,xmm0
   140039de4:	movd   xmm0,ecx
   140039de8:	mov    rcx,QWORD PTR [rip+0x1b701]        # 0x1400554f0
   140039def:	cvtdq2pd xmm0,xmm0
   140039df3:	mov    DWORD PTR [rsp+0x48],r8d
   140039df8:	lea    rdx,[rip+0xade1]        # 0x140044be0
   140039dff:	mulsd  xmm0,QWORD PTR [rip+0x1abc1]        # 0x1400549c8
   140039e07:	cvttsd2si eax,xmm0
   140039e0b:	mov    DWORD PTR [rsp+0x4c],eax
   140039e0f:	mov    r9,QWORD PTR [rsp+0x48]
   140039e14:	shr    r9,0x20
   140039e18:	call   QWORD PTR [rip+0x34a2]        # 0x14003d2c0
   140039e1e:	inc    rbx
   140039e21:	cmp    rbx,rsi
   140039e24:	jl     0x140039d90
   140039e2a:	test   ebp,ebp
   140039e2c:	je     0x140039ebe
   140039e32:	cmp    DWORD PTR [rip+0x1ab8b],0x0        # 0x1400549c4
   140039e39:	mov    ecx,DWORD PTR [rdi]
   140039e3b:	mov    edx,DWORD PTR [rdi+0x4]
   140039e3e:	jne    0x140039e65
   140039e40:	mov    eax,DWORD PTR [rip+0x1ab96]        # 0x1400549dc
   140039e46:	movd   xmm0,ecx
   140039e4a:	add    eax,eax
   140039e4c:	sub    eax,edx
   140039e4e:	cvtdq2pd xmm0,xmm0
   140039e52:	mulsd  xmm0,QWORD PTR [rip+0x1ab6e]        # 0x1400549c8
   140039e5a:	cvttsd2si r8d,xmm0
   140039e5f:	movd   xmm0,eax
   140039e63:	jmp    0x140039e88
   140039e65:	mov    eax,DWORD PTR [rip+0x1ab6d]        # 0x1400549d8
   140039e6b:	add    eax,eax
   140039e6d:	sub    eax,edx
   140039e6f:	movd   xmm0,eax
   140039e73:	cvtdq2pd xmm0,xmm0
   140039e77:	mulsd  xmm0,QWORD PTR [rip+0x1ab49]        # 0x1400549c8
   140039e7f:	cvttsd2si r8d,xmm0
   140039e84:	movd   xmm0,ecx
   140039e88:	mov    rcx,QWORD PTR [rip+0x1b661]        # 0x1400554f0
   140039e8f:	cvtdq2pd xmm0,xmm0
   140039e93:	mov    DWORD PTR [rsp+0x48],r8d
   140039e98:	lea    rdx,[rip+0xad41]        # 0x140044be0
   140039e9f:	mulsd  xmm0,QWORD PTR [rip+0x1ab21]        # 0x1400549c8
   140039ea7:	cvttsd2si eax,xmm0
   140039eab:	mov    DWORD PTR [rsp+0x4c],eax
   140039eaf:	mov    r9,QWORD PTR [rsp+0x48]
   140039eb4:	shr    r9,0x20
   140039eb8:	call   QWORD PTR [rip+0x3402]        # 0x14003d2c0
   140039ebe:	mov    rcx,QWORD PTR [rip+0x1b62b]        # 0x1400554f0
   140039ec5:	lea    rdx,[rip+0x3cac]        # 0x14003db78
   140039ecc:	mov    rbx,QWORD PTR [rsp+0x30]
   140039ed1:	mov    rbp,QWORD PTR [rsp+0x38]
   140039ed6:	mov    rsi,QWORD PTR [rsp+0x40]
   140039edb:	add    rsp,0x20
   140039edf:	pop    rdi
   140039ee0:	rex.W jmp QWORD PTR [rip+0x33d9]        # 0x14003d2c0
   140039ee7:	int3   
   140039ee8:	int3   
   140039ee9:	int3   
   140039eea:	int3   
   140039eeb:	int3   
   140039eec:	int3   
   140039eed:	int3   
   140039eee:	int3   
   140039eef:	int3   
   140039ef0:	lea    rax,[rip+0x4951]        # 0x14003e848
   140039ef7:	xorps  xmm0,xmm0
   140039efa:	mov    DWORD PTR [rip+0x1ab7c],0x0        # 0x140054a80
   140039f04:	mov    WORD PTR [rip+0x1aad3],0x0        # 0x1400549e0
   140039f0d:	mov    BYTE PTR [rip+0x1aadc],0x0        # 0x1400549f0
   140039f14:	mov    WORD PTR [rip+0x1aad5],0xf00        # 0x1400549f2
   140039f1d:	movsd  QWORD PTR [rip+0x1aadb],xmm0        # 0x140054a00
   140039f25:	mov    QWORD PTR [rip+0x1aabc],rax        # 0x1400549e8
   140039f2c:	mov    BYTE PTR [rip+0x1aac1],0x1        # 0x1400549f4
   140039f33:	ret    
   140039f34:	int3   
   140039f35:	int3   
   140039f36:	int3   
   140039f37:	int3   
   140039f38:	int3   
   140039f39:	int3   
   140039f3a:	int3   
   140039f3b:	int3   
   140039f3c:	int3   
   140039f3d:	int3   
   140039f3e:	int3   
   140039f3f:	int3   
   140039f40:	mov    QWORD PTR [rsp+0x8],rbx
   140039f45:	push   rdi
   140039f46:	sub    rsp,0x20
   140039f4a:	cmp    DWORD PTR [rip+0x1b5a7],0x18        # 0x1400554f8
   140039f51:	mov    rdi,r9
   140039f54:	mov    rbx,rdx
   140039f57:	jne    0x140039f7c
   140039f59:	call   QWORD PTR [rip+0x3371]        # 0x14003d2d0
   140039f5f:	lea    rdx,[rip+0xb03a]        # 0x140044fa0
   140039f66:	lea    rcx,[rax+0x60]
   140039f6a:	call   QWORD PTR [rip+0x3350]        # 0x14003d2c0
   140039f70:	mov    ecx,0x1
   140039f75:	call   QWORD PTR [rip+0x30fd]        # 0x14003d078
   140039f7b:	int3   
   140039f7c:	mov    rax,QWORD PTR [rsp+0x58]
   140039f81:	mov    ecx,DWORD PTR [rsp+0x5c]
   140039f85:	mov    QWORD PTR [rip+0x1b10c],rax        # 0x140055098
   140039f8c:	imul   ecx,eax
   140039f8f:	mov    DWORD PTR [rip+0x1b0fb],ecx        # 0x140055090
   140039f95:	lea    rcx,[rip+0xb044]        # 0x140044fe0
   140039f9c:	call   0x14003b540
   140039fa1:	lea    rdx,[rip+0xb070]        # 0x140045018
   140039fa8:	mov    rcx,rbx
   140039fab:	call   0x1400275b0
   140039fb0:	test   rax,rax
   140039fb3:	je     0x140039fdd
   140039fb5:	or     rcx,0xffffffffffffffff
   140039fb9:	nop    DWORD PTR [rax+0x0]
   140039fc0:	inc    rcx
   140039fc3:	cmp    BYTE PTR [rax+rcx*1],0x0
   140039fc7:	jne    0x140039fc0
   140039fc9:	test   rcx,rcx
   140039fcc:	je     0x140039fdd
   140039fce:	lea    rcx,[rip+0xb053]        # 0x140045028
   140039fd5:	mov    rdx,rax
   140039fd8:	call   0x14003b540
   140039fdd:	lea    rcx,[rip+0xb074]        # 0x140045058
   140039fe4:	call   0x14003b540
   140039fe9:	lea    rcx,[rip+0xb098]        # 0x140045088
   140039ff0:	call   0x14003b540
   140039ff5:	lea    rdx,[rip+0x7564]        # 0x140041560
   140039ffc:	mov    rcx,rbx
   140039fff:	call   0x140027500
   14003a004:	test   rax,rax
   14003a007:	jne    0x14003a03a
   14003a009:	mov    rcx,QWORD PTR [rbx+0x48]
   14003a00d:	lea    rdx,[rip+0x754c]        # 0x140041560
   14003a014:	mov    rcx,QWORD PTR [rcx]
   14003a017:	call   0x140027500
   14003a01c:	test   rax,rax
   14003a01f:	jne    0x14003a03a
   14003a021:	mov    rcx,QWORD PTR [rbx+0x48]
   14003a025:	lea    rdx,[rip+0x7534]        # 0x140041560
   14003a02c:	mov    rcx,QWORD PTR [rcx+0x8]
   14003a030:	call   0x140027500
   14003a035:	test   rax,rax
   14003a038:	je     0x14003a046
   14003a03a:	lea    rcx,[rip+0xb08f]        # 0x1400450d0
   14003a041:	call   0x14003b540
   14003a046:	mov    r9,QWORD PTR [rip+0x1b4a3]        # 0x1400554f0
   14003a04d:	mov    edx,0x1
   14003a052:	lea    rcx,[rip+0x88f7]        # 0x140042950
   14003a059:	lea    r8d,[rdx+0x1]
   14003a05d:	call   QWORD PTR [rip+0x3185]        # 0x14003d1e8
   14003a063:	mov    rdx,QWORD PTR [rsp+0x50]
   14003a068:	lea    rcx,[rip+0xb0b1]        # 0x140045120
   14003a06f:	mov    r9,QWORD PTR [rdx+0x10]
   14003a073:	mov    r8,QWORD PTR [rdx+0x8]
   14003a077:	mov    rdx,QWORD PTR [rdx]
   14003a07a:	call   0x14003b540
   14003a07f:	mov    r9d,DWORD PTR [rip+0x1b00a]        # 0x140055090
   14003a086:	mov    r8,QWORD PTR [rbx+0x10]
   14003a08a:	lea    rcx,[rip+0xb0b7]        # 0x140045148
   14003a091:	mov    rdx,rdi
   14003a094:	call   0x14003b540
   14003a099:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a09e:	add    rsp,0x20
   14003a0a2:	pop    rdi
   14003a0a3:	ret    
   14003a0a4:	int3   
   14003a0a5:	int3   
   14003a0a6:	int3   
   14003a0a7:	int3   
   14003a0a8:	int3   
   14003a0a9:	int3   
   14003a0aa:	int3   
   14003a0ab:	int3   
   14003a0ac:	int3   
   14003a0ad:	int3   
   14003a0ae:	int3   
   14003a0af:	int3   
   14003a0b0:	ret    0x0
   14003a0b3:	int3   
   14003a0b4:	int3   
   14003a0b5:	int3   
   14003a0b6:	int3   
   14003a0b7:	int3   
   14003a0b8:	int3   
   14003a0b9:	int3   
   14003a0ba:	int3   
   14003a0bb:	int3   
   14003a0bc:	int3   
   14003a0bd:	int3   
   14003a0be:	int3   
   14003a0bf:	int3   
   14003a0c0:	mov    QWORD PTR [rsp+0x8],rbx
   14003a0c5:	mov    QWORD PTR [rsp+0x10],rsi
   14003a0ca:	push   rdi
   14003a0cb:	sub    rsp,0x20
   14003a0cf:	movsd  xmm2,QWORD PTR [rip+0xb4c1]        # 0x140045598
   14003a0d7:	mov    r9,QWORD PTR [rcx+0x50]
   14003a0db:	mov    eax,DWORD PTR [rdx+0x8]
   14003a0de:	mov    r10d,DWORD PTR [r9+0x18]
   14003a0e2:	mov    rbx,rcx
   14003a0e5:	mov    ecx,DWORD PTR [r9+0x1c]
   14003a0e9:	lea    r8d,[rax+r10*2]
   14003a0ed:	xor    edi,edi
   14003a0ef:	lea    eax,[rcx+rcx*1]
   14003a0f2:	movd   xmm1,r10d
   14003a0f7:	sub    eax,DWORD PTR [rdx+0x4]
   14003a0fa:	sub    r8d,DWORD PTR [rdx]
   14003a0fd:	mov    QWORD PTR [rip+0x1afb4],rdi        # 0x1400550b8
   14003a104:	cvtdq2pd xmm1,xmm1
   14003a108:	mulsd  xmm1,xmm2
   14003a10c:	movsd  QWORD PTR [rip+0x1af94],xmm1        # 0x1400550a8
   14003a114:	add    eax,DWORD PTR [rdx+0xc]
   14003a117:	cmp    DWORD PTR [rip+0x18efb],edi        # 0x140053018
   14003a11d:	movd   xmm0,r8d
   14003a122:	cvtdq2pd xmm0,xmm0
   14003a126:	mov    r11d,edi
   14003a129:	mulsd  xmm0,xmm2
   14003a12d:	cvttsd2si esi,xmm0
   14003a131:	movd   xmm0,eax
   14003a135:	cvtdq2pd xmm0,xmm0
   14003a139:	mov    DWORD PTR [rip+0x1af81],esi        # 0x1400550c0
   14003a13f:	mulsd  xmm0,xmm2
   14003a143:	cvttsd2si eax,xmm0
   14003a147:	movd   xmm0,ecx
   14003a14b:	cvtdq2pd xmm0,xmm0
   14003a14f:	mov    DWORD PTR [rip+0x1af6f],eax        # 0x1400550c4
   14003a155:	mulsd  xmm0,xmm2
   14003a159:	movsd  QWORD PTR [rip+0x1af4f],xmm0        # 0x1400550b0
   14003a161:	je     0x14003a1f7
   14003a167:	movsd  xmm0,QWORD PTR [rip+0x46f9]        # 0x14003e868
   14003a16f:	lea    rax,[rip+0x437e]        # 0x14003e4f4
   14003a176:	lea    rdx,[rip+0x4513]        # 0x14003e690
   14003a17d:	mov    QWORD PTR [rip+0x1af5c],rax        # 0x1400550e0
   14003a184:	lea    rax,[rip+0x328d]        # 0x14003d418
   14003a18b:	mov    rcx,rbx
   14003a18e:	movsd  QWORD PTR [rip+0x1af6a],xmm0        # 0x140055100
   14003a196:	mov    QWORD PTR [rip+0x1af4b],rax        # 0x1400550e8
   14003a19d:	lea    rax,[rip+0x46a4]        # 0x14003e848
   14003a1a4:	mov    DWORD PTR [rip+0x1afd6],edi        # 0x140055180
   14003a1aa:	mov    BYTE PTR [rip+0x1af47],dil        # 0x1400550f8
   14003a1b1:	mov    WORD PTR [rip+0x1af40],0xf00        # 0x1400550fa
   14003a1ba:	mov    BYTE PTR [rip+0x1af3b],0x1        # 0x1400550fc
   14003a1c1:	mov    QWORD PTR [rip+0x1af28],rax        # 0x1400550f0
   14003a1c8:	call   0x140027500
   14003a1cd:	mov    rcx,rbx
   14003a1d0:	mov    rdx,rax
   14003a1d3:	call   0x14003b250
   14003a1d8:	mov    eax,DWORD PTR [rip+0x1aee6]        # 0x1400550c4
   14003a1de:	mov    esi,DWORD PTR [rip+0x1aedc]        # 0x1400550c0
   14003a1e4:	mov    r11d,DWORD PTR [rip+0x1aecd]        # 0x1400550b8
   14003a1eb:	mov    DWORD PTR [rip+0x18e27],edi        # 0x140053018
   14003a1f1:	mov    edi,DWORD PTR [rip+0x1aec5]        # 0x1400550bc
   14003a1f7:	lea    r8d,[rax+0x2]
   14003a1fb:	lea    edx,[r11+0x2]
   14003a1ff:	lea    rcx,[rip+0xaf72]        # 0x140045178
   14003a206:	add    r8d,edi
   14003a209:	add    edx,esi
   14003a20b:	call   0x14003b540
   14003a210:	mov    r9,QWORD PTR [rip+0x1b2d9]        # 0x1400554f0
   14003a217:	mov    edx,0x1
   14003a21c:	lea    r8d,[rdx+0x22]
   14003a220:	lea    rcx,[rip+0xaf79]        # 0x1400451a0
   14003a227:	call   QWORD PTR [rip+0x2fbb]        # 0x14003d1e8
   14003a22d:	lea    rdx,[rip+0x732c]        # 0x140041560
   14003a234:	mov    rcx,rbx
   14003a237:	call   0x140027500
   14003a23c:	test   rax,rax
   14003a23f:	jne    0x14003a272
   14003a241:	mov    rcx,QWORD PTR [rbx+0x48]
   14003a245:	lea    rdx,[rip+0x7314]        # 0x140041560
   14003a24c:	mov    rcx,QWORD PTR [rcx]
   14003a24f:	call   0x140027500
   14003a254:	test   rax,rax
   14003a257:	jne    0x14003a272
   14003a259:	mov    rcx,QWORD PTR [rbx+0x48]
   14003a25d:	lea    rdx,[rip+0x72fc]        # 0x140041560
   14003a264:	mov    rcx,QWORD PTR [rcx+0x8]
   14003a268:	call   0x140027500
   14003a26d:	test   rax,rax
   14003a270:	je     0x14003a28f
   14003a272:	mov    r9,QWORD PTR [rip+0x1b277]        # 0x1400554f0
   14003a279:	mov    edx,0x1
   14003a27e:	lea    rcx,[rip+0xaf43]        # 0x1400451c8
   14003a285:	lea    r8d,[rdx+0x2a]
   14003a289:	call   QWORD PTR [rip+0x2f59]        # 0x14003d1e8
   14003a28f:	mov    r9,QWORD PTR [rip+0x1b25a]        # 0x1400554f0
   14003a296:	mov    edx,0x1
   14003a29b:	lea    rcx,[rip+0x86ae]        # 0x140042950
   14003a2a2:	lea    r8d,[rdx+0x1]
   14003a2a6:	call   QWORD PTR [rip+0x2f3c]        # 0x14003d1e8
   14003a2ac:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a2b1:	mov    rsi,QWORD PTR [rsp+0x38]
   14003a2b6:	add    rsp,0x20
   14003a2ba:	pop    rdi
   14003a2bb:	ret    
   14003a2bc:	int3   
   14003a2bd:	int3   
   14003a2be:	int3   
   14003a2bf:	int3   
   14003a2c0:	ret    0x0
   14003a2c3:	int3   
   14003a2c4:	int3   
   14003a2c5:	int3   
   14003a2c6:	int3   
   14003a2c7:	int3   
   14003a2c8:	int3   
   14003a2c9:	int3   
   14003a2ca:	int3   
   14003a2cb:	int3   
   14003a2cc:	int3   
   14003a2cd:	int3   
   14003a2ce:	int3   
   14003a2cf:	int3   
   14003a2d0:	rex push rbx
   14003a2d2:	sub    rsp,0x20
   14003a2d6:	movsxd rdx,DWORD PTR [rip+0x1b203]        # 0x1400554e0
   14003a2dd:	mulsd  xmm2,QWORD PTR [rip+0xb2b3]        # 0x140045598
   14003a2e5:	lea    rax,[rip+0x18d34]        # 0x140053020
   14003a2ec:	mov    rdx,QWORD PTR [rax+rdx*8]
   14003a2f0:	mov    rbx,rcx
   14003a2f3:	lea    rcx,[rip+0xaefe]        # 0x1400451f8
   14003a2fa:	movsd  QWORD PTR [rip+0x1ad9e],xmm2        # 0x1400550a0
   14003a302:	mov    DWORD PTR [rip+0x1ad8b],r9d        # 0x140055094
   14003a309:	call   0x14003b540
   14003a30e:	mov    rdx,QWORD PTR [rip+0x1addb]        # 0x1400550f0
   14003a315:	movsd  xmm2,QWORD PTR [rip+0x1ade3]        # 0x140055100
   14003a31d:	mulsd  xmm2,QWORD PTR [rip+0x1ad7b]        # 0x1400550a0
   14003a325:	lea    rcx,[rip+0xaeec]        # 0x140045218
   14003a32c:	movq   r8,xmm2
   14003a331:	call   0x14003b540
   14003a336:	mov    rcx,QWORD PTR [rbx+0x10]
   14003a33a:	call   0x14001d160
   14003a33f:	lea    rcx,[rip+0xaf02]        # 0x140045248
   14003a346:	mov    rdx,rax
   14003a349:	call   0x14003b540
   14003a34e:	lea    rdx,[rip+0x720b]        # 0x140041560
   14003a355:	mov    rcx,rbx
   14003a358:	call   0x1400275b0
   14003a35d:	test   rax,rax
   14003a360:	je     0x14003a3b2
   14003a362:	or     rcx,0xffffffffffffffff
   14003a366:	inc    rcx
   14003a369:	cmp    BYTE PTR [rax+rcx*1],0x0
   14003a36d:	jne    0x14003a366
   14003a36f:	test   rcx,rcx
   14003a372:	je     0x14003a3b2
   14003a374:	mov    rdx,rbx
   14003a377:	mov    rcx,rax
   14003a37a:	mov    DWORD PTR [rip+0x1ad4c],0x1        # 0x1400550d0
   14003a384:	call   0x14001cdb0
   14003a389:	mov    rcx,rax
   14003a38c:	mov    rbx,rax
   14003a38f:	call   0x14001d160
   14003a394:	lea    rcx,[rip+0xaec5]        # 0x140045260
   14003a39b:	mov    rdx,rax
   14003a39e:	call   0x14003b540
   14003a3a3:	mov    rcx,rbx
   14003a3a6:	call   QWORD PTR [rip+0x2ef4]        # 0x14003d2a0
   14003a3ac:	add    rsp,0x20
   14003a3b0:	pop    rbx
   14003a3b1:	ret    
   14003a3b2:	mov    DWORD PTR [rip+0x1ad14],0x0        # 0x1400550d0
   14003a3bc:	add    rsp,0x20
   14003a3c0:	pop    rbx
   14003a3c1:	ret    
   14003a3c2:	int3   
   14003a3c3:	int3   
   14003a3c4:	int3   
   14003a3c5:	int3   
   14003a3c6:	int3   
   14003a3c7:	int3   
   14003a3c8:	int3   
   14003a3c9:	int3   
   14003a3ca:	int3   
   14003a3cb:	int3   
   14003a3cc:	int3   
   14003a3cd:	int3   
   14003a3ce:	int3   
   14003a3cf:	int3   
   14003a3d0:	sub    rsp,0x28
   14003a3d4:	cmp    DWORD PTR [rip+0x1acf5],0x0        # 0x1400550d0
   14003a3db:	je     0x14003a3f3
   14003a3dd:	lea    rcx,[rip+0xae94]        # 0x140045278
   14003a3e4:	call   0x14003b540
   14003a3e9:	mov    DWORD PTR [rip+0x1ace1],0x0        # 0x1400550d4
   14003a3f3:	mov    r9,QWORD PTR [rip+0x1b0f6]        # 0x1400554f0
   14003a3fa:	mov    edx,0x1
   14003a3ff:	lea    rcx,[rip+0xae7a]        # 0x140045280
   14003a406:	lea    r8d,[rdx+0xa]
   14003a40a:	add    rsp,0x28
   14003a40e:	rex.W jmp QWORD PTR [rip+0x2dd3]        # 0x14003d1e8
   14003a415:	int3   
   14003a416:	int3   
   14003a417:	int3   
   14003a418:	int3   
   14003a419:	int3   
   14003a41a:	int3   
   14003a41b:	int3   
   14003a41c:	int3   
   14003a41d:	int3   
   14003a41e:	int3   
   14003a41f:	int3   
   14003a420:	rex push rbx
   14003a422:	sub    rsp,0x20
   14003a426:	mov    rax,QWORD PTR [rcx+0x40]
   14003a42a:	movsxd rdx,DWORD PTR [rip+0x1b0af]        # 0x1400554e0
   14003a431:	mov    rbx,rcx
   14003a434:	mov    r8d,DWORD PTR [rax+0x18]
   14003a438:	lea    rcx,[rip+0x18be1]        # 0x140053020
   14003a43f:	mov    rdx,QWORD PTR [rcx+rdx*8]
   14003a443:	lea    rcx,[rip+0xae46]        # 0x140045290
   14003a44a:	call   0x14003b540
   14003a44f:	mov    rcx,QWORD PTR [rbx+0x10]
   14003a453:	call   0x14001d160
   14003a458:	lea    rcx,[rip+0xade9]        # 0x140045248
   14003a45f:	mov    rdx,rax
   14003a462:	call   0x14003b540
   14003a467:	lea    rdx,[rip+0x70f2]        # 0x140041560
   14003a46e:	mov    rcx,rbx
   14003a471:	call   0x1400275b0
   14003a476:	test   rax,rax
   14003a479:	je     0x14003a4cc
   14003a47b:	or     rcx,0xffffffffffffffff
   14003a47f:	nop
   14003a480:	inc    rcx
   14003a483:	cmp    BYTE PTR [rax+rcx*1],0x0
   14003a487:	jne    0x14003a480
   14003a489:	test   rcx,rcx
   14003a48c:	je     0x14003a4cc
   14003a48e:	mov    rdx,rbx
   14003a491:	mov    rcx,rax
   14003a494:	mov    DWORD PTR [rip+0x1ac36],0x1        # 0x1400550d4
   14003a49e:	call   0x14001cdb0
   14003a4a3:	mov    rcx,rax
   14003a4a6:	mov    rbx,rax
   14003a4a9:	call   0x14001d160
   14003a4ae:	lea    rcx,[rip+0xadab]        # 0x140045260
   14003a4b5:	mov    rdx,rax
   14003a4b8:	call   0x14003b540
   14003a4bd:	mov    rcx,rbx
   14003a4c0:	add    rsp,0x20
   14003a4c4:	pop    rbx
   14003a4c5:	rex.W jmp QWORD PTR [rip+0x2dd4]        # 0x14003d2a0
   14003a4cc:	mov    DWORD PTR [rip+0x1abfe],0x0        # 0x1400550d4
   14003a4d6:	add    rsp,0x20
   14003a4da:	pop    rbx
   14003a4db:	ret    
   14003a4dc:	int3   
   14003a4dd:	int3   
   14003a4de:	int3   
   14003a4df:	int3   
   14003a4e0:	sub    rsp,0x28
   14003a4e4:	cmp    DWORD PTR [rip+0x1abe9],0x0        # 0x1400550d4
   14003a4eb:	je     0x14003a503
   14003a4ed:	lea    rcx,[rip+0xad84]        # 0x140045278
   14003a4f4:	call   0x14003b540
   14003a4f9:	mov    DWORD PTR [rip+0x1abd1],0x0        # 0x1400550d4
   14003a503:	lea    rcx,[rip+0xada6]        # 0x1400452b0
   14003a50a:	add    rsp,0x28
   14003a50e:	jmp    0x14003b540
   14003a513:	int3   
   14003a514:	int3   
   14003a515:	int3   
   14003a516:	int3   
   14003a517:	int3   
   14003a518:	int3   
   14003a519:	int3   
   14003a51a:	int3   
   14003a51b:	int3   
   14003a51c:	int3   
   14003a51d:	int3   
   14003a51e:	int3   
   14003a51f:	int3   
   14003a520:	ret    0x0
   14003a523:	int3   
   14003a524:	int3   
   14003a525:	int3   
   14003a526:	int3   
   14003a527:	int3   
   14003a528:	int3   
   14003a529:	int3   
   14003a52a:	int3   
   14003a52b:	int3   
   14003a52c:	int3   
   14003a52d:	int3   
   14003a52e:	int3   
   14003a52f:	int3   
   14003a530:	ret    0x0
   14003a533:	int3   
   14003a534:	int3   
   14003a535:	int3   
   14003a536:	int3   
   14003a537:	int3   
   14003a538:	int3   
   14003a539:	int3   
   14003a53a:	int3   
   14003a53b:	int3   
   14003a53c:	int3   
   14003a53d:	int3   
   14003a53e:	int3   
   14003a53f:	int3   
   14003a540:	ret    0x0
   14003a543:	int3   
   14003a544:	int3   
   14003a545:	int3   
   14003a546:	int3   
   14003a547:	int3   
   14003a548:	int3   
   14003a549:	int3   
   14003a54a:	int3   
   14003a54b:	int3   
   14003a54c:	int3   
   14003a54d:	int3   
   14003a54e:	int3   
   14003a54f:	int3   
   14003a550:	ret    0x0
   14003a553:	int3   
   14003a554:	int3   
   14003a555:	int3   
   14003a556:	int3   
   14003a557:	int3   
   14003a558:	int3   
   14003a559:	int3   
   14003a55a:	int3   
   14003a55b:	int3   
   14003a55c:	int3   
   14003a55d:	int3   
   14003a55e:	int3   
   14003a55f:	int3   
   14003a560:	rex push rbx
   14003a562:	sub    rsp,0x20
   14003a566:	movsxd rdx,DWORD PTR [rip+0x1af73]        # 0x1400554e0
   14003a56d:	mov    r8d,DWORD PTR [rcx+0x18]
   14003a571:	lea    rax,[rip+0x18aa8]        # 0x140053020
   14003a578:	mov    rdx,QWORD PTR [rax+rdx*8]
   14003a57c:	mov    rbx,rcx
   14003a57f:	mov    QWORD PTR [rip+0x1ab42],rcx        # 0x1400550c8
   14003a586:	lea    rcx,[rip+0xad2b]        # 0x1400452b8
   14003a58d:	call   0x14003b540
   14003a592:	mov    rcx,QWORD PTR [rbx+0x10]
   14003a596:	call   0x14001d160
   14003a59b:	lea    rcx,[rip+0xaca6]        # 0x140045248
   14003a5a2:	mov    rdx,rax
   14003a5a5:	call   0x14003b540
   14003a5aa:	lea    rdx,[rip+0x6faf]        # 0x140041560
   14003a5b1:	mov    rcx,rbx
   14003a5b4:	call   0x1400275b0
   14003a5b9:	test   rax,rax
   14003a5bc:	je     0x14003a60e
   14003a5be:	or     rcx,0xffffffffffffffff
   14003a5c2:	inc    rcx
   14003a5c5:	cmp    BYTE PTR [rax+rcx*1],0x0
   14003a5c9:	jne    0x14003a5c2
   14003a5cb:	test   rcx,rcx
   14003a5ce:	je     0x14003a60e
   14003a5d0:	mov    rdx,rbx
   14003a5d3:	mov    rcx,rax
   14003a5d6:	mov    DWORD PTR [rip+0x1aaf8],0x1        # 0x1400550d8
   14003a5e0:	call   0x14001ceb0
   14003a5e5:	mov    rcx,rax
   14003a5e8:	mov    rbx,rax
   14003a5eb:	call   0x14001d160
   14003a5f0:	lea    rcx,[rip+0xac69]        # 0x140045260
   14003a5f7:	mov    rdx,rax
   14003a5fa:	call   0x14003b540
   14003a5ff:	mov    rcx,rbx
   14003a602:	add    rsp,0x20
   14003a606:	pop    rbx
   14003a607:	rex.W jmp QWORD PTR [rip+0x2c92]        # 0x14003d2a0
   14003a60e:	mov    DWORD PTR [rip+0x1aac0],0x0        # 0x1400550d8
   14003a618:	add    rsp,0x20
   14003a61c:	pop    rbx
   14003a61d:	ret    
   14003a61e:	int3   
   14003a61f:	int3   
   14003a620:	sub    rsp,0x28
   14003a624:	cmp    DWORD PTR [rip+0x1aaad],0x0        # 0x1400550d8
   14003a62b:	je     0x14003a643
   14003a62d:	lea    rcx,[rip+0xac44]        # 0x140045278
   14003a634:	call   0x14003b540
   14003a639:	mov    DWORD PTR [rip+0x1aa95],0x0        # 0x1400550d8
   14003a643:	lea    rcx,[rip+0xac66]        # 0x1400452b0
   14003a64a:	add    rsp,0x28
   14003a64e:	jmp    0x14003b540
   14003a653:	int3   
   14003a654:	int3   
   14003a655:	int3   
   14003a656:	int3   
   14003a657:	int3   
   14003a658:	int3   
   14003a659:	int3   
   14003a65a:	int3   
   14003a65b:	int3   
   14003a65c:	int3   
   14003a65d:	int3   
   14003a65e:	int3   
   14003a65f:	int3   
   14003a660:	mov    QWORD PTR [rsp+0x8],rbx
   14003a665:	push   rdi
   14003a666:	sub    rsp,0x20
   14003a66a:	movsxd rdx,DWORD PTR [rip+0x1ae6f]        # 0x1400554e0
   14003a671:	mov    r8d,DWORD PTR [rcx+0x20]
   14003a675:	lea    rax,[rip+0x189a4]        # 0x140053020
   14003a67c:	mov    rdx,QWORD PTR [rax+rdx*8]
   14003a680:	mov    rdi,rcx
   14003a683:	lea    rcx,[rip+0xac4e]        # 0x1400452d8
   14003a68a:	call   0x14003b540
   14003a68f:	mov    rcx,QWORD PTR [rdi+0x18]
   14003a693:	lea    rbx,[rip+0xac5a]        # 0x1400452f4
   14003a69a:	mov    rax,QWORD PTR [rcx+0x20]
   14003a69e:	mov    rcx,QWORD PTR [rcx+0x10]
   14003a6a2:	mov    rdx,QWORD PTR [rax+0x38]
   14003a6a6:	lea    rax,[rip+0x429f]        # 0x14003e94c
   14003a6ad:	test   BYTE PTR [rdx],0x10
   14003a6b0:	cmove  rbx,rax
   14003a6b4:	call   0x14001d160
   14003a6b9:	lea    rcx,[rip+0xac40]        # 0x140045300
   14003a6c0:	mov    rdx,rax
   14003a6c3:	mov    r8,rbx
   14003a6c6:	call   0x14003b540
   14003a6cb:	mov    rcx,QWORD PTR [rdi+0x10]
   14003a6cf:	mov    rcx,QWORD PTR [rcx+0x10]
   14003a6d3:	call   0x14001d160
   14003a6d8:	lea    rcx,[rip+0xac31]        # 0x140045310
   14003a6df:	mov    rdx,rax
   14003a6e2:	call   0x14003b540
   14003a6e7:	lea    rdx,[rip+0x6e72]        # 0x140041560
   14003a6ee:	mov    rcx,rdi
   14003a6f1:	call   0x1400275b0
   14003a6f6:	test   rax,rax
   14003a6f9:	je     0x14003a751
   14003a6fb:	or     rcx,0xffffffffffffffff
   14003a6ff:	nop
   14003a700:	inc    rcx
   14003a703:	cmp    BYTE PTR [rax+rcx*1],0x0
   14003a707:	jne    0x14003a700
   14003a709:	test   rcx,rcx
   14003a70c:	je     0x14003a751
   14003a70e:	mov    rdx,rdi
   14003a711:	mov    rcx,rax
   14003a714:	mov    DWORD PTR [rip+0x1a9be],0x1        # 0x1400550dc
   14003a71e:	call   0x14001cb40
   14003a723:	mov    rcx,rax
   14003a726:	mov    rbx,rax
   14003a729:	call   0x14001d160
   14003a72e:	lea    rcx,[rip+0xab2b]        # 0x140045260
   14003a735:	mov    rdx,rax
   14003a738:	call   0x14003b540
   14003a73d:	mov    rcx,rbx
   14003a740:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a745:	add    rsp,0x20
   14003a749:	pop    rdi
   14003a74a:	rex.W jmp QWORD PTR [rip+0x2b4f]        # 0x14003d2a0
   14003a751:	mov    DWORD PTR [rip+0x1a981],0x0        # 0x1400550dc
   14003a75b:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a760:	add    rsp,0x20
   14003a764:	pop    rdi
   14003a765:	ret    
   14003a766:	int3   
   14003a767:	int3   
   14003a768:	int3   
   14003a769:	int3   
   14003a76a:	int3   
   14003a76b:	int3   
   14003a76c:	int3   
   14003a76d:	int3   
   14003a76e:	int3   
   14003a76f:	int3   
   14003a770:	sub    rsp,0x28
   14003a774:	cmp    DWORD PTR [rip+0x1a961],0x0        # 0x1400550dc
   14003a77b:	je     0x14003a793
   14003a77d:	lea    rcx,[rip+0xaaf4]        # 0x140045278
   14003a784:	call   0x14003b540
   14003a789:	mov    DWORD PTR [rip+0x1a949],0x0        # 0x1400550dc
   14003a793:	lea    rcx,[rip+0xab16]        # 0x1400452b0
   14003a79a:	add    rsp,0x28
   14003a79e:	jmp    0x14003b540
   14003a7a3:	int3   
   14003a7a4:	int3   
   14003a7a5:	int3   
   14003a7a6:	int3   
   14003a7a7:	int3   
   14003a7a8:	int3   
   14003a7a9:	int3   
   14003a7aa:	int3   
   14003a7ab:	int3   
   14003a7ac:	int3   
   14003a7ad:	int3   
   14003a7ae:	int3   
   14003a7af:	int3   
   14003a7b0:	sub    rsp,0x28
   14003a7b4:	mov    edx,DWORD PTR [rip+0x1a9c6]        # 0x140055180
   14003a7ba:	lea    eax,[rdx+0x1]
   14003a7bd:	cmp    eax,0x4
   14003a7c0:	jl     0x14003a7e2
   14003a7c2:	lea    rdx,[rip+0xab57]        # 0x140045320
   14003a7c9:	lea    rcx,[rip+0x8048]        # 0x140042818
   14003a7d0:	mov    r8d,0x23c
   14003a7d6:	call   QWORD PTR [rip+0x28b4]        # 0x14003d090
   14003a7dc:	mov    edx,DWORD PTR [rip+0x1a99e]        # 0x140055180
   14003a7e2:	lea    r8,[rip+0x1a8f7]        # 0x1400550e0
   14003a7e9:	movsxd rax,edx
   14003a7ec:	inc    edx
   14003a7ee:	lea    rcx,[rax+rax*4]
   14003a7f2:	lea    rax,[rax+rax*4]
   14003a7f6:	mov    DWORD PTR [rip+0x1a984],edx        # 0x140055180
   14003a7fc:	movups xmm0,XMMWORD PTR [r8+rcx*8]
   14003a801:	movups XMMWORD PTR [r8+rax*8+0x28],xmm0
   14003a807:	movups xmm1,XMMWORD PTR [r8+rcx*8+0x10]
   14003a80d:	movups XMMWORD PTR [r8+rax*8+0x38],xmm1
   14003a813:	movsd  xmm0,QWORD PTR [r8+rcx*8+0x20]
   14003a81a:	movsd  QWORD PTR [r8+rax*8+0x48],xmm0
   14003a821:	add    rsp,0x28
   14003a825:	ret    
   14003a826:	int3   
   14003a827:	int3   
   14003a828:	int3   
   14003a829:	int3   
   14003a82a:	int3   
   14003a82b:	int3   
   14003a82c:	int3   
   14003a82d:	int3   
   14003a82e:	int3   
   14003a82f:	int3   
   14003a830:	rex push rbx
   14003a832:	sub    rsp,0x20
   14003a836:	mov    eax,DWORD PTR [rip+0x1a944]        # 0x140055180
   14003a83c:	lea    ebx,[rax-0x1]
   14003a83f:	test   eax,eax
   14003a841:	jg     0x14003a85d
   14003a843:	lea    rdx,[rip+0xaad6]        # 0x140045320
   14003a84a:	lea    rcx,[rip+0x7fef]        # 0x140042840
   14003a851:	mov    r8d,0x245
   14003a857:	call   QWORD PTR [rip+0x2833]        # 0x14003d090
   14003a85d:	mov    DWORD PTR [rip+0x1a91d],ebx        # 0x140055180
   14003a863:	add    rsp,0x20
   14003a867:	pop    rbx
   14003a868:	ret    
   14003a869:	int3   
   14003a86a:	int3   
   14003a86b:	int3   
   14003a86c:	int3   
   14003a86d:	int3   
   14003a86e:	int3   
   14003a86f:	int3   
   14003a870:	mov    QWORD PTR [rsp+0x8],rbx
   14003a875:	push   rdi
   14003a876:	sub    rsp,0x20
   14003a87a:	movsxd rax,DWORD PTR [rip+0x1a8ff]        # 0x140055180
   14003a881:	lea    rdi,[rip+0x1a858]        # 0x1400550e0
   14003a888:	lea    rbx,[rax+rax*4]
   14003a88c:	movsd  QWORD PTR [rdi+rbx*8+0x20],xmm1
   14003a892:	mov    BYTE PTR [rdi+rbx*8+0x19],0x1
   14003a897:	call   QWORD PTR [rip+0x2a43]        # 0x14003d2e0
   14003a89d:	mov    QWORD PTR [rdi+rbx*8+0x10],rax
   14003a8a2:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a8a7:	add    rsp,0x20
   14003a8ab:	pop    rdi
   14003a8ac:	ret    
   14003a8ad:	int3   
   14003a8ae:	int3   
   14003a8af:	int3   
   14003a8b0:	movsxd rax,DWORD PTR [rip+0x1a8c9]        # 0x140055180
   14003a8b7:	lea    rdx,[rax+rax*4]
   14003a8bb:	lea    rax,[rip+0x1a81e]        # 0x1400550e0
   14003a8c2:	mov    QWORD PTR [rax+rdx*8],rcx
   14003a8c6:	ret    
   14003a8c7:	int3   
   14003a8c8:	int3   
   14003a8c9:	int3   
   14003a8ca:	int3   
   14003a8cb:	int3   
   14003a8cc:	int3   
   14003a8cd:	int3   
   14003a8ce:	int3   
   14003a8cf:	int3   
   14003a8d0:	movsxd rax,DWORD PTR [rip+0x1a8a9]        # 0x140055180
   14003a8d7:	lea    rdx,[rax+rax*4]
   14003a8db:	lea    rax,[rip+0x1a806]        # 0x1400550e8
   14003a8e2:	mov    QWORD PTR [rax+rdx*8],rcx
   14003a8e6:	ret    
   14003a8e7:	int3   
   14003a8e8:	int3   
   14003a8e9:	int3   
   14003a8ea:	int3   
   14003a8eb:	int3   
   14003a8ec:	int3   
   14003a8ed:	int3   
   14003a8ee:	int3   
   14003a8ef:	int3   
   14003a8f0:	rex push rbx
   14003a8f2:	push   rsi
   14003a8f3:	push   rdi
   14003a8f4:	push   r14
   14003a8f6:	sub    rsp,0x28
   14003a8fa:	movsxd rax,DWORD PTR [rip+0x1a87f]        # 0x140055180
   14003a901:	mov    rbx,QWORD PTR [rcx]
   14003a904:	mov    r14,rcx
   14003a907:	lea    rdx,[rax+rax*4]
   14003a90b:	lea    rax,[rip+0x1a7ce]        # 0x1400550e0
   14003a912:	mov    rdi,rbx
   14003a915:	lea    rsi,[rax+rdx*8]
   14003a919:	test   rbx,rbx
   14003a91c:	je     0x14003aac1
   14003a922:	mov    QWORD PTR [rsp+0x50],rbp
   14003a927:	mov    QWORD PTR [rsp+0x58],r12
   14003a92c:	mov    QWORD PTR [rsp+0x60],r13
   14003a931:	mov    QWORD PTR [rsp+0x20],r15
   14003a936:	lea    r12,[rip+0x7443]        # 0x140041d80
   14003a93d:	lea    r13,[rip+0x7444]        # 0x140041d88
   14003a944:	lea    r15,[rip+0x3bb1]        # 0x14003e4fc
   14003a94b:	lea    rdx,[rip+0x40e2]        # 0x14003ea34
   14003a952:	lea    r8,[rip+0x7437]        # 0x140041d90
   14003a959:	lea    rbp,[rip+0x40c0]        # 0x14003ea20
   14003a960:	lea    r14,[r14+0x8]
   14003a964:	xor    ecx,ecx
   14003a966:	data16 nop WORD PTR [rax+rax*1+0x0]
   14003a970:	movzx  eax,BYTE PTR [rbx+rcx*1]
   14003a974:	inc    rcx
   14003a977:	cmp    al,BYTE PTR [r15+rcx*1-0x1]
   14003a97c:	jne    0x14003a98d
   14003a97e:	cmp    rcx,0x6
   14003a982:	jne    0x14003a970
   14003a984:	mov    BYTE PTR [rsi+0x1a],0x0
   14003a988:	jmp    0x14003aa9a
   14003a98d:	xor    ecx,ecx
   14003a98f:	nop
   14003a990:	movzx  eax,BYTE PTR [rbx+rcx*1]
   14003a994:	inc    rcx
   14003a997:	cmp    al,BYTE PTR [r12+rcx*1-0x1]
   14003a99c:	jne    0x14003a9ad
   14003a99e:	cmp    rcx,0x7
   14003a9a2:	jne    0x14003a990
   14003a9a4:	mov    BYTE PTR [rsi+0x1a],0xb
   14003a9a8:	jmp    0x14003aa9a
   14003a9ad:	xor    ecx,ecx
   14003a9af:	nop
   14003a9b0:	movzx  eax,BYTE PTR [rbx+rcx*1]
   14003a9b4:	inc    rcx
   14003a9b7:	cmp    al,BYTE PTR [r13+rcx*1-0x1]
   14003a9bc:	jne    0x14003a9cd
   14003a9be:	cmp    rcx,0x7
   14003a9c2:	jne    0x14003a9b0
   14003a9c4:	mov    BYTE PTR [rsi+0x1a],0x4
   14003a9c8:	jmp    0x14003aa9a
   14003a9cd:	xor    ecx,ecx
   14003a9cf:	nop
   14003a9d0:	movzx  eax,BYTE PTR [rbx+rcx*1]
   14003a9d4:	inc    rcx
   14003a9d7:	cmp    al,BYTE PTR [rdx+rcx*1-0x1]
   14003a9db:	jne    0x14003a9ec
   14003a9dd:	cmp    rcx,0x6
   14003a9e1:	jne    0x14003a9d0
   14003a9e3:	mov    BYTE PTR [rsi+0x1a],0xf
   14003a9e7:	jmp    0x14003aa9a
   14003a9ec:	xor    ecx,ecx
   14003a9ee:	xchg   ax,ax
   14003a9f0:	movzx  eax,BYTE PTR [rbx+rcx*1]
   14003a9f4:	inc    rcx
   14003a9f7:	cmp    al,BYTE PTR [r8+rcx*1-0x1]
   14003a9fc:	jne    0x14003aa0d
   14003a9fe:	cmp    rcx,0x5
   14003aa02:	jne    0x14003a9f0
   14003aa04:	mov    BYTE PTR [rsi+0x1c],0x3
   14003aa08:	jmp    0x14003aa9a
   14003aa0d:	lea    rdx,[rip+0x8edc]        # 0x1400438f0
   14003aa14:	mov    rcx,rbx
   14003aa17:	call   0x14003bc96
   14003aa1c:	test   eax,eax
   14003aa1e:	jne    0x14003aa3b
   14003aa20:	cmp    BYTE PTR [rbx],al
   14003aa22:	je     0x14003aa2c
   14003aa24:	inc    rdi
   14003aa27:	cmp    BYTE PTR [rdi],0x0
   14003aa2a:	jne    0x14003aa24
   14003aa2c:	lea    rcx,[rdi+0x1]
   14003aa30:	call   QWORD PTR [rip+0x278a]        # 0x14003d1c0
   14003aa36:	mov    BYTE PTR [rsi+0x1c],al
   14003aa39:	jmp    0x14003aa8c
   14003aa3b:	xor    eax,eax
   14003aa3d:	nop    DWORD PTR [rax]
   14003aa40:	movzx  ecx,BYTE PTR [rbx+rax*1]
   14003aa44:	inc    rax
   14003aa47:	cmp    cl,BYTE PTR [rax+rbp*1-0x1]
   14003aa4b:	jne    0x14003aa59
   14003aa4d:	cmp    rax,0x7
   14003aa51:	jne    0x14003aa40
   14003aa53:	mov    BYTE PTR [rsi+0x1b],0x0
   14003aa57:	jmp    0x14003aa8c
   14003aa59:	lea    rdx,[rip+0x7338]        # 0x140041d98
   14003aa60:	mov    rcx,rbx
   14003aa63:	call   0x14003bc96
   14003aa68:	test   eax,eax
   14003aa6a:	jne    0x14003aa72
   14003aa6c:	mov    BYTE PTR [rsi+0x1b],0xf
   14003aa70:	jmp    0x14003aa8c
   14003aa72:	call   QWORD PTR [rip+0x2858]        # 0x14003d2d0
   14003aa78:	lea    rdx,[rip+0xa919]        # 0x140045398
   14003aa7f:	mov    r8,rbx
   14003aa82:	lea    rcx,[rax+0x60]
   14003aa86:	call   QWORD PTR [rip+0x2834]        # 0x14003d2c0
   14003aa8c:	lea    r8,[rip+0x72fd]        # 0x140041d90
   14003aa93:	lea    rdx,[rip+0x3f9a]        # 0x14003ea34
   14003aa9a:	mov    BYTE PTR [rsi+0x1d],0x1
   14003aa9e:	mov    rbx,QWORD PTR [r14]
   14003aaa1:	mov    rdi,rbx
   14003aaa4:	test   rbx,rbx
   14003aaa7:	jne    0x14003a960
   14003aaad:	mov    r15,QWORD PTR [rsp+0x20]
   14003aab2:	mov    r13,QWORD PTR [rsp+0x60]
   14003aab7:	mov    r12,QWORD PTR [rsp+0x58]
   14003aabc:	mov    rbp,QWORD PTR [rsp+0x50]
   14003aac1:	add    rsp,0x28
   14003aac5:	pop    r14
   14003aac7:	pop    rdi
   14003aac8:	pop    rsi
   14003aac9:	pop    rbx
   14003aaca:	ret    
   14003aacb:	int3   
   14003aacc:	int3   
   14003aacd:	int3   
   14003aace:	int3   
   14003aacf:	int3   
   14003aad0:	mov    QWORD PTR [rsp+0x8],rcx
   14003aad5:	push   rbx
   14003aad6:	push   rsi
   14003aad7:	push   rdi
   14003aad8:	sub    rsp,0x20
   14003aadc:	mov    rcx,QWORD PTR [rdx]
   14003aadf:	mov    rbx,rdx
   14003aae2:	call   0x14001d160
   14003aae7:	or     rdi,0xffffffffffffffff
   14003aaeb:	mov    rsi,rax
   14003aaee:	mov    rcx,rdi
   14003aaf1:	inc    rcx
   14003aaf4:	cmp    BYTE PTR [rax+rcx*1],0x0
   14003aaf8:	jne    0x14003aaf1
   14003aafa:	test   rcx,rcx
   14003aafd:	je     0x14003ac03
   14003ab03:	movsxd rax,DWORD PTR [rip+0x1a676]        # 0x140055180
   14003ab0a:	mov    QWORD PTR [rsp+0x50],r14
   14003ab0f:	lea    rcx,[rax+rax*4]
   14003ab13:	lea    rax,[rip+0x1a5c6]        # 0x1400550e0
   14003ab1a:	cmp    BYTE PTR [rax+rcx*8+0x1a],0xf
   14003ab1f:	lea    r14,[rax+rcx*8]
   14003ab23:	je     0x14003abfe
   14003ab29:	movzx  eax,BYTE PTR [rbx+0xa]
   14003ab2d:	cmp    al,0x6c
   14003ab2f:	je     0x14003ab47
   14003ab31:	lea    rdx,[rip+0xa894]        # 0x1400453cc
   14003ab38:	lea    rcx,[rip+0xa889]        # 0x1400453c8
   14003ab3f:	cmp    al,0x72
   14003ab41:	cmove  rdx,rcx
   14003ab45:	jmp    0x14003ab4e
   14003ab47:	lea    rdx,[rip+0x2fda]        # 0x14003db28
   14003ab4e:	mov    rcx,QWORD PTR [rsp+0x40]
   14003ab53:	call   0x14003b7b0
   14003ab58:	lea    rcx,[rip+0xa879]        # 0x1400453d8
   14003ab5f:	mov    rbx,rax
   14003ab62:	mov    QWORD PTR [rsp+0x48],rax
   14003ab67:	call   0x14003b540
   14003ab6c:	cmp    DWORD PTR [rip+0x1a521],0x0        # 0x140055094
   14003ab73:	je     0x14003ab88
   14003ab75:	mov    r8d,DWORD PTR [rsp+0x4c]
   14003ab7a:	lea    rcx,[rip+0xa86f]        # 0x1400453f0
   14003ab81:	mov    edx,ebx
   14003ab83:	call   0x14003b540
   14003ab88:	mov    r8d,DWORD PTR [rsp+0x4c]
   14003ab8d:	lea    rcx,[rip+0xa87c]        # 0x140045410
   14003ab94:	mov    edx,ebx
   14003ab96:	call   0x14003b540
   14003ab9b:	mov    rcx,r14
   14003ab9e:	call   0x14003b2e0
   14003aba3:	mov    r9,QWORD PTR [rip+0x1a946]        # 0x1400554f0
   14003abaa:	mov    edx,0x1
   14003abaf:	lea    rcx,[rip+0xa86a]        # 0x140045420
   14003abb6:	mov    r8d,edx
   14003abb9:	call   QWORD PTR [rip+0x2629]        # 0x14003d1e8
   14003abbf:	nop
   14003abc0:	inc    rdi
   14003abc3:	cmp    BYTE PTR [rsi+rdi*1],0x0
   14003abc7:	jne    0x14003abc0
   14003abc9:	mov    r9,QWORD PTR [rip+0x1a920]        # 0x1400554f0
   14003abd0:	mov    r8d,edi
   14003abd3:	mov    edx,0x1
   14003abd8:	mov    rcx,rsi
   14003abdb:	call   QWORD PTR [rip+0x2607]        # 0x14003d1e8
   14003abe1:	mov    r9,QWORD PTR [rip+0x1a908]        # 0x1400554f0
   14003abe8:	mov    edx,0x1
   14003abed:	lea    r8d,[rdx+0x7]
   14003abf1:	lea    rcx,[rip+0xa830]        # 0x140045428
   14003abf8:	call   QWORD PTR [rip+0x25ea]        # 0x14003d1e8
   14003abfe:	mov    r14,QWORD PTR [rsp+0x50]
   14003ac03:	add    rsp,0x20
   14003ac07:	pop    rdi
   14003ac08:	pop    rsi
   14003ac09:	pop    rbx
   14003ac0a:	ret    
   14003ac0b:	int3   
   14003ac0c:	int3   
   14003ac0d:	int3   
   14003ac0e:	int3   
   14003ac0f:	int3   
   14003ac10:	mov    QWORD PTR [rsp+0x8],rbx
   14003ac15:	mov    QWORD PTR [rsp+0x10],rsi
   14003ac1a:	mov    QWORD PTR [rsp+0x18],rdi
   14003ac1f:	push   r14
   14003ac21:	sub    rsp,0x30
   14003ac25:	movsxd rax,DWORD PTR [rip+0x1a554]        # 0x140055180
   14003ac2c:	lea    r14,[rip+0x1a4ad]        # 0x1400550e0
   14003ac33:	mov    esi,r9d
   14003ac36:	lea    r10,[rax+rax*4]
   14003ac3a:	mov    ebx,r8d
   14003ac3d:	mov    edi,edx
   14003ac3f:	cmp    BYTE PTR [r14+r10*8+0x1a],0xf
   14003ac45:	je     0x14003ace3
   14003ac4b:	mov    DWORD PTR [rsp+0x20],ecx
   14003ac4f:	shr    rcx,0x20
   14003ac53:	mov    DWORD PTR [rsp+0x24],ecx
   14003ac57:	mov    rcx,QWORD PTR [rsp+0x20]
   14003ac5c:	call   0x14003b7b0
   14003ac61:	lea    rcx,[rip+0xa7d0]        # 0x140045438
   14003ac68:	mov    QWORD PTR [rsp+0x20],rax
   14003ac6d:	mov    edx,DWORD PTR [rsp+0x20]
   14003ac71:	shr    rax,0x20
   14003ac75:	mov    r8d,eax
   14003ac78:	call   0x14003b540
   14003ac7d:	cmp    DWORD PTR [rip+0x1a410],0x0        # 0x140055094
   14003ac84:	je     0x14003ac8c
   14003ac86:	mov    eax,edi
   14003ac88:	mov    edi,ebx
   14003ac8a:	mov    ebx,eax
   14003ac8c:	movd   xmm0,edi
   14003ac90:	lea    rcx,[rip+0xa7c1]        # 0x140045458
   14003ac97:	cvtdq2pd xmm0,xmm0
   14003ac9b:	mulsd  xmm0,QWORD PTR [rip+0x1a3fd]        # 0x1400550a0
   14003aca3:	cvttsd2si edx,xmm0
   14003aca7:	movd   xmm0,ebx
   14003acab:	cvtdq2pd xmm0,xmm0
   14003acaf:	mulsd  xmm0,QWORD PTR [rip+0x1a3e9]        # 0x1400550a0
   14003acb7:	cvttsd2si r8d,xmm0
   14003acbc:	call   0x14003b540
   14003acc1:	movsxd rax,DWORD PTR [rip+0x1a4b8]        # 0x140055180
   14003acc8:	mov    edx,esi
   14003acca:	lea    rcx,[rax+rax*4]
   14003acce:	lea    rcx,[r14+rcx*8]
   14003acd2:	call   0x14003b480
   14003acd7:	lea    rcx,[rip+0xa78e]        # 0x14004546c
   14003acde:	call   0x14003b540
   14003ace3:	mov    rbx,QWORD PTR [rsp+0x40]
   14003ace8:	mov    rsi,QWORD PTR [rsp+0x48]
   14003aced:	mov    rdi,QWORD PTR [rsp+0x50]
   14003acf2:	add    rsp,0x30
   14003acf6:	pop    r14
   14003acf8:	ret    
   14003acf9:	int3   
   14003acfa:	int3   
   14003acfb:	int3   
   14003acfc:	int3   
   14003acfd:	int3   
   14003acfe:	int3   
   14003acff:	int3   
   14003ad00:	mov    QWORD PTR [rsp+0x8],rbx
   14003ad05:	mov    QWORD PTR [rsp+0x10],rsi
   14003ad0a:	push   rdi
   14003ad0b:	sub    rsp,0x20
   14003ad0f:	movsxd rax,DWORD PTR [rip+0x1a46a]        # 0x140055180
   14003ad16:	lea    rbx,[rip+0x1a3c3]        # 0x1400550e0
   14003ad1d:	mov    edi,edx
   14003ad1f:	lea    r8,[rax+rax*4]
   14003ad23:	mov    rsi,rcx
   14003ad26:	cmp    BYTE PTR [rbx+r8*8+0x1a],0xf
   14003ad2c:	je     0x14003ae1c
   14003ad32:	mov    r9,QWORD PTR [rip+0x1a7b7]        # 0x1400554f0
   14003ad39:	mov    edx,0x1
   14003ad3e:	lea    rcx,[rip+0xa72b]        # 0x140045470
   14003ad45:	lea    r8d,[rdx+0x4]
   14003ad49:	call   QWORD PTR [rip+0x2499]        # 0x14003d1e8
   14003ad4f:	movsxd rax,DWORD PTR [rip+0x1a42a]        # 0x140055180
   14003ad56:	lea    rcx,[rax+rax*4]
   14003ad5a:	lea    rbx,[rbx+rcx*8]
   14003ad5e:	lea    rcx,[rip+0xa19b]        # 0x140044f00
   14003ad65:	call   0x14003b540
   14003ad6a:	lea    rcx,[rip+0xa1cf]        # 0x140044f40
   14003ad71:	call   0x14003b540
   14003ad76:	mov    rcx,QWORD PTR [rbx]
   14003ad79:	call   0x14003b5a0
   14003ad7e:	lea    rcx,[rip+0xa1cb]        # 0x140044f50
   14003ad85:	mov    rdx,rax
   14003ad88:	call   0x14003b540
   14003ad8d:	movzx  eax,BYTE PTR [rbx+0x1c]
   14003ad91:	cmp    al,0x1
   14003ad93:	je     0x14003ada4
   14003ad95:	lea    rcx,[rip+0xa1c4]        # 0x140044f60
   14003ad9c:	movsx  edx,al
   14003ad9f:	call   0x14003b540
   14003ada4:	movzx  eax,BYTE PTR [rbx+0x1a]
   14003ada8:	cmp    al,0xb
   14003adaa:	jne    0x14003adb5
   14003adac:	mov    rdx,QWORD PTR [rip+0x18255]        # 0x140053008
   14003adb3:	jmp    0x14003adc0
   14003adb5:	cmp    al,0x4
   14003adb7:	jne    0x14003adcc
   14003adb9:	mov    rdx,QWORD PTR [rip+0x18250]        # 0x140053010
   14003adc0:	lea    rcx,[rip+0xa1b1]        # 0x140044f78
   14003adc7:	call   0x14003b540
   14003adcc:	lea    rcx,[rip+0xa169]        # 0x140044f3c
   14003add3:	call   0x14003b540
   14003add8:	mov    r9,QWORD PTR [rip+0x1a711]        # 0x1400554f0
   14003addf:	mov    edx,0x1
   14003ade4:	lea    r8d,[rdx+0x3]
   14003ade8:	lea    rcx,[rip+0xa689]        # 0x140045478
   14003adef:	call   QWORD PTR [rip+0x23f3]        # 0x14003d1e8
   14003adf5:	mov    edx,edi
   14003adf7:	mov    rcx,rsi
   14003adfa:	call   0x14003b680
   14003adff:	mov    r9,QWORD PTR [rip+0x1a6ea]        # 0x1400554f0
   14003ae06:	mov    edx,0x1
   14003ae0b:	lea    r8d,[rdx+0x3]
   14003ae0f:	lea    rcx,[rip+0xa66a]        # 0x140045480
   14003ae16:	call   QWORD PTR [rip+0x23cc]        # 0x14003d1e8
   14003ae1c:	mov    rbx,QWORD PTR [rsp+0x30]
   14003ae21:	mov    rsi,QWORD PTR [rsp+0x38]
   14003ae26:	add    rsp,0x20
   14003ae2a:	pop    rdi
   14003ae2b:	ret    
   14003ae2c:	int3   
   14003ae2d:	int3   
   14003ae2e:	int3   
   14003ae2f:	int3   
   14003ae30:	mov    QWORD PTR [rsp+0x8],rbx
   14003ae35:	mov    QWORD PTR [rsp+0x10],rsi
   14003ae3a:	mov    QWORD PTR [rsp+0x18],rdi
   14003ae3f:	push   r14
   14003ae41:	sub    rsp,0x20
   14003ae45:	movsxd rax,DWORD PTR [rip+0x1a334]        # 0x140055180
   14003ae4c:	lea    r14,[rip+0x1a28d]        # 0x1400550e0
   14003ae53:	mov    ebx,r8d
   14003ae56:	lea    r9,[rax+rax*4]
   14003ae5a:	mov    edi,edx
   14003ae5c:	mov    rsi,rcx
   14003ae5f:	cmp    BYTE PTR [r14+r9*8+0x1a],0xf
   14003ae65:	je     0x14003aeef
   14003ae6b:	lea    rcx,[rip+0xa616]        # 0x140045488
   14003ae72:	call   0x14003b540
   14003ae77:	movsxd rax,DWORD PTR [rip+0x1a302]        # 0x140055180
   14003ae7e:	mov    edx,ebx
   14003ae80:	lea    r8,[rax+rax*4]
   14003ae84:	lea    rcx,[r14+r8*8]
   14003ae88:	call   0x14003b480
   14003ae8d:	lea    rcx,[rip+0xa604]        # 0x140045498
   14003ae94:	call   0x14003b540
   14003ae99:	test   edi,edi
   14003ae9b:	jle    0x14003aec6
   14003ae9d:	mov    rbx,rsi
   14003aea0:	mov    rcx,QWORD PTR [rbx]
   14003aea3:	call   0x14003b7b0
   14003aea8:	lea    rcx,[rip+0xa5f5]        # 0x1400454a4
   14003aeaf:	mov    r8,rax
   14003aeb2:	mov    edx,eax
   14003aeb4:	shr    r8,0x20
   14003aeb8:	call   0x14003b540
   14003aebd:	lea    rbx,[rbx+0x8]
   14003aec1:	dec    rdi
   14003aec4:	jne    0x14003aea0
   14003aec6:	mov    rcx,QWORD PTR [rsi]
   14003aec9:	call   0x14003b7b0
   14003aece:	lea    rcx,[rip+0x3577]        # 0x14003e44c
   14003aed5:	mov    r8,rax
   14003aed8:	mov    edx,eax
   14003aeda:	shr    r8,0x20
   14003aede:	call   0x14003b540
   14003aee3:	lea    rcx,[rip+0xa596]        # 0x140045480
   14003aeea:	call   0x14003b540
   14003aeef:	mov    rbx,QWORD PTR [rsp+0x30]
   14003aef4:	mov    rsi,QWORD PTR [rsp+0x38]
   14003aef9:	mov    rdi,QWORD PTR [rsp+0x40]
   14003aefe:	add    rsp,0x20
   14003af02:	pop    r14
   14003af04:	ret    
   14003af05:	int3   
   14003af06:	int3   
   14003af07:	int3   
   14003af08:	int3   
   14003af09:	int3   
   14003af0a:	int3   
   14003af0b:	int3   
   14003af0c:	int3   
   14003af0d:	int3   
   14003af0e:	int3   
   14003af0f:	int3   
   14003af10:	mov    QWORD PTR [rsp+0x8],rbx
   14003af15:	mov    QWORD PTR [rsp+0x10],rsi
   14003af1a:	push   rdi
   14003af1b:	sub    rsp,0x20
   14003af1f:	movsxd rax,DWORD PTR [rip+0x1a25a]        # 0x140055180
   14003af26:	lea    rsi,[rip+0x1a1b3]        # 0x1400550e0
   14003af2d:	mov    edi,edx
   14003af2f:	lea    r8,[rax+rax*4]
   14003af33:	mov    rbx,rcx
   14003af36:	cmp    BYTE PTR [rsi+r8*8+0x1a],0xf
   14003af3c:	je     0x14003b019
   14003af42:	lea    rcx,[rip+0xa567]        # 0x1400454b0
   14003af49:	call   0x14003b540
   14003af4e:	movsxd rax,DWORD PTR [rip+0x1a22b]        # 0x140055180
   14003af55:	lea    rcx,[rip+0x9fa4]        # 0x140044f00
   14003af5c:	lea    r8,[rax+rax*4]
   14003af60:	lea    rsi,[rsi+r8*8]
   14003af64:	call   0x14003b540
   14003af69:	lea    rcx,[rip+0x9fd0]        # 0x140044f40
   14003af70:	call   0x14003b540
   14003af75:	mov    rcx,QWORD PTR [rsi]
   14003af78:	call   0x14003b5a0
   14003af7d:	lea    rcx,[rip+0x9fcc]        # 0x140044f50
   14003af84:	mov    rdx,rax
   14003af87:	call   0x14003b540
   14003af8c:	movzx  eax,BYTE PTR [rsi+0x1c]
   14003af90:	cmp    al,0x1
   14003af92:	je     0x14003afa3
   14003af94:	lea    rcx,[rip+0x9fc5]        # 0x140044f60
   14003af9b:	movsx  edx,al
   14003af9e:	call   0x14003b540
   14003afa3:	movzx  eax,BYTE PTR [rsi+0x1a]
   14003afa7:	cmp    al,0xb
   14003afa9:	jne    0x14003afb4
   14003afab:	mov    rdx,QWORD PTR [rip+0x18056]        # 0x140053008
   14003afb2:	jmp    0x14003afbf
   14003afb4:	cmp    al,0x4
   14003afb6:	jne    0x14003afcb
   14003afb8:	mov    rdx,QWORD PTR [rip+0x18051]        # 0x140053010
   14003afbf:	lea    rcx,[rip+0x9fb2]        # 0x140044f78
   14003afc6:	call   0x14003b540
   14003afcb:	lea    rcx,[rip+0x9f6a]        # 0x140044f3c
   14003afd2:	call   0x14003b540
   14003afd7:	lea    rcx,[rip+0xa4ba]        # 0x140045498
   14003afde:	call   0x14003b540
   14003afe3:	test   edi,edi
   14003afe5:	jle    0x14003b00d
   14003afe7:	mov    rcx,QWORD PTR [rbx]
   14003afea:	call   0x14003b7b0
   14003afef:	lea    rcx,[rip+0xa4ae]        # 0x1400454a4
   14003aff6:	mov    r8,rax
   14003aff9:	mov    edx,eax
   14003affb:	shr    r8,0x20
   14003afff:	call   0x14003b540
   14003b004:	lea    rbx,[rbx+0x8]
   14003b008:	dec    rdi
   14003b00b:	jne    0x14003afe7
   14003b00d:	lea    rcx,[rip+0xa46c]        # 0x140045480
   14003b014:	call   0x14003b540
   14003b019:	mov    rbx,QWORD PTR [rsp+0x30]
   14003b01e:	mov    rsi,QWORD PTR [rsp+0x38]
   14003b023:	add    rsp,0x20
   14003b027:	pop    rdi
   14003b028:	ret    
   14003b029:	int3   
   14003b02a:	int3   
   14003b02b:	int3   
   14003b02c:	int3   
   14003b02d:	int3   
   14003b02e:	int3   
   14003b02f:	int3   
   14003b030:	mov    QWORD PTR [rsp+0x20],rbx
   14003b035:	push   rsi
   14003b036:	push   rdi
   14003b037:	push   r12
   14003b039:	sub    rsp,0x40
   14003b03d:	movsxd rax,DWORD PTR [rip+0x1a13c]        # 0x140055180
   14003b044:	mov    ebx,r9d
   14003b047:	mov    edi,r8d
   14003b04a:	lea    r10,[rax+rax*4]
   14003b04e:	lea    rax,[rip+0x1a0a5]        # 0x1400550fa
   14003b055:	mov    rsi,rdx
   14003b058:	cmp    BYTE PTR [rax+r10*8],0xf
   14003b05d:	mov    r12,rcx
   14003b060:	je     0x14003b1c4
   14003b066:	mov    rcx,QWORD PTR [rip+0x1a05b]        # 0x1400550c8
   14003b06d:	lea    rdx,[rip+0x3de4]        # 0x14003ee58
   14003b074:	mov    QWORD PTR [rsp+0x68],r14
   14003b079:	call   0x1400275b0
   14003b07e:	mov    r14,rax
   14003b081:	test   rax,rax
   14003b084:	jne    0x14003b098
   14003b086:	mov    r8d,ebx
   14003b089:	mov    edx,edi
   14003b08b:	mov    rcx,rsi
   14003b08e:	call   0x14003ae30
   14003b093:	jmp    0x14003b1bf
   14003b098:	mov    rcx,QWORD PTR [rip+0x1a029]        # 0x1400550c8
   14003b09f:	movsd  xmm2,QWORD PTR [rip+0x19ff9]        # 0x1400550a0
   14003b0a7:	movsd  xmm1,QWORD PTR [rip+0x2329]        # 0x14003d3d8
   14003b0af:	xorps  xmm3,xmm3
   14003b0b2:	mov    QWORD PTR [rsp+0x60],rbp
   14003b0b7:	mov    QWORD PTR [rsp+0x70],r15
   14003b0bc:	mov    eax,DWORD PTR [rcx+0x58]
   14003b0bf:	add    eax,DWORD PTR [rcx+0x54]
   14003b0c2:	movd   xmm0,eax
   14003b0c6:	cvtdq2pd xmm0,xmm0
   14003b0ca:	mulsd  xmm0,xmm2
   14003b0ce:	comisd xmm0,xmm3
   14003b0d2:	jb     0x14003b0da
   14003b0d4:	addsd  xmm0,xmm1
   14003b0d8:	jmp    0x14003b0de
   14003b0da:	subsd  xmm0,xmm1
   14003b0de:	cvttsd2si r15d,xmm0
   14003b0e3:	movd   xmm0,DWORD PTR [rcx+0x50]
   14003b0e8:	cvtdq2pd xmm0,xmm0
   14003b0ec:	mulsd  xmm0,xmm2
   14003b0f0:	comisd xmm0,xmm3
   14003b0f4:	jb     0x14003b0fc
   14003b0f6:	addsd  xmm0,xmm1
   14003b0fa:	jmp    0x14003b100
   14003b0fc:	subsd  xmm0,xmm1
   14003b100:	lea    rcx,[rip+0xa3b9]        # 0x1400454c0
   14003b107:	mov    rdx,r12
   14003b10a:	cvttsd2si ebp,xmm0
   14003b10e:	call   0x14003b540
   14003b113:	lea    rcx,[rip+0xa3c6]        # 0x1400454e0
   14003b11a:	call   0x14003b540
   14003b11f:	test   edi,edi
   14003b121:	jle    0x14003b14c
   14003b123:	mov    rbx,rsi
   14003b126:	mov    rcx,QWORD PTR [rbx]
   14003b129:	call   0x14003b7b0
   14003b12e:	lea    rcx,[rip+0xa36f]        # 0x1400454a4
   14003b135:	mov    r8,rax
   14003b138:	mov    edx,eax
   14003b13a:	shr    r8,0x20
   14003b13e:	call   0x14003b540
   14003b143:	lea    rbx,[rbx+0x8]
   14003b147:	dec    rdi
   14003b14a:	jne    0x14003b126
   14003b14c:	mov    rcx,QWORD PTR [rsi]
   14003b14f:	call   0x14003b7b0
   14003b154:	lea    rcx,[rip+0xa349]        # 0x1400454a4
   14003b15b:	mov    r8,rax
   14003b15e:	mov    edx,eax
   14003b160:	shr    r8,0x20
   14003b164:	call   0x14003b540
   14003b169:	lea    rcx,[rip+0xa388]        # 0x1400454f8
   14003b170:	call   0x14003b540
   14003b175:	mov    r10,QWORD PTR [rip+0x19f4c]        # 0x1400550c8
   14003b17c:	mov    QWORD PTR [rsp+0x30],r12
   14003b181:	mov    ecx,DWORD PTR [r10+0x3c]
   14003b185:	mov    eax,DWORD PTR [r10+0x50]
   14003b189:	mov    r9d,ebp
   14003b18c:	cdq    
   14003b18d:	mov    r8d,r15d
   14003b190:	sub    eax,edx
   14003b192:	mov    rdx,r14
   14003b195:	sar    eax,1
   14003b197:	sub    ecx,eax
   14003b199:	mov    eax,DWORD PTR [r10+0x38]
   14003b19d:	sub    eax,DWORD PTR [r10+0x54]
   14003b1a1:	mov    DWORD PTR [rsp+0x28],ecx
   14003b1a5:	lea    rcx,[rip+0xa364]        # 0x140045510
   14003b1ac:	mov    DWORD PTR [rsp+0x20],eax
   14003b1b0:	call   0x14003b540
   14003b1b5:	mov    r15,QWORD PTR [rsp+0x70]
   14003b1ba:	mov    rbp,QWORD PTR [rsp+0x60]
   14003b1bf:	mov    r14,QWORD PTR [rsp+0x68]
   14003b1c4:	mov    rbx,QWORD PTR [rsp+0x78]
   14003b1c9:	add    rsp,0x40
   14003b1cd:	pop    r12
   14003b1cf:	pop    rdi
   14003b1d0:	pop    rsi
   14003b1d1:	ret    
   14003b1d2:	int3   
   14003b1d3:	int3   
   14003b1d4:	int3   
   14003b1d5:	int3   
   14003b1d6:	int3   
   14003b1d7:	int3   
   14003b1d8:	int3   
   14003b1d9:	int3   
   14003b1da:	int3   
   14003b1db:	int3   
   14003b1dc:	int3   
   14003b1dd:	int3   
   14003b1de:	int3   
   14003b1df:	int3   
   14003b1e0:	mov    DWORD PTR [rip+0x17e2e],0x1        # 0x140053018
   14003b1ea:	ret    
   14003b1eb:	int3   
   14003b1ec:	int3   
   14003b1ed:	int3   
   14003b1ee:	int3   
   14003b1ef:	int3   
   14003b1f0:	movsd  xmm0,QWORD PTR [rip+0x3670]        # 0x14003e868
   14003b1f8:	lea    rax,[rip+0x32f5]        # 0x14003e4f4
   14003b1ff:	mov    DWORD PTR [rip+0x19f77],0x0        # 0x140055180
   14003b209:	mov    QWORD PTR [rip+0x19ed0],rax        # 0x1400550e0
   14003b210:	lea    rax,[rip+0x2201]        # 0x14003d418
   14003b217:	mov    BYTE PTR [rip+0x19eda],0x0        # 0x1400550f8
   14003b21e:	movsd  QWORD PTR [rip+0x19eda],xmm0        # 0x140055100
   14003b226:	mov    QWORD PTR [rip+0x19ebb],rax        # 0x1400550e8
   14003b22d:	lea    rax,[rip+0x3614]        # 0x14003e848
   14003b234:	mov    WORD PTR [rip+0x19ebd],0xf00        # 0x1400550fa
   14003b23d:	mov    QWORD PTR [rip+0x19eac],rax        # 0x1400550f0
   14003b244:	mov    BYTE PTR [rip+0x19eb1],0x1        # 0x1400550fc
   14003b24b:	ret    
   14003b24c:	int3   
   14003b24d:	int3   
   14003b24e:	int3   
   14003b24f:	int3   
   14003b250:	rex push rbx
   14003b252:	sub    rsp,0x20
   14003b256:	lea    r8,[rip+0x21bb]        # 0x14003d418
   14003b25d:	call   0x14001c3e0
   14003b262:	mov    rbx,rax
   14003b265:	cmp    BYTE PTR [rax],0x0
   14003b268:	je     0x14003b2d4
   14003b26a:	mov    r9,QWORD PTR [rip+0x1a27f]        # 0x1400554f0
   14003b271:	mov    edx,0x1
   14003b276:	lea    rcx,[rip+0x9d13]        # 0x140044f90
   14003b27d:	lea    r8d,[rdx+0x4]
   14003b281:	call   QWORD PTR [rip+0x1f61]        # 0x14003d1e8
   14003b287:	or     rcx,0xffffffffffffffff
   14003b28b:	nop    DWORD PTR [rax+rax*1+0x0]
   14003b290:	inc    rcx
   14003b293:	cmp    BYTE PTR [rbx+rcx*1],0x0
   14003b297:	jne    0x14003b290
   14003b299:	mov    r9,QWORD PTR [rip+0x1a250]        # 0x1400554f0
   14003b2a0:	mov    r8d,ecx
   14003b2a3:	mov    edx,0x1
   14003b2a8:	mov    rcx,rbx
   14003b2ab:	call   QWORD PTR [rip+0x1f37]        # 0x14003d1e8
   14003b2b1:	mov    r9,QWORD PTR [rip+0x1a238]        # 0x1400554f0
   14003b2b8:	mov    edx,0x1
   14003b2bd:	lea    r8d,[rdx+0x4]
   14003b2c1:	lea    rcx,[rip+0x9cd0]        # 0x140044f98
   14003b2c8:	add    rsp,0x20
   14003b2cc:	pop    rbx
   14003b2cd:	rex.W jmp QWORD PTR [rip+0x1f14]        # 0x14003d1e8
   14003b2d4:	add    rsp,0x20
   14003b2d8:	pop    rbx
   14003b2d9:	ret    
   14003b2da:	int3   
   14003b2db:	int3   
   14003b2dc:	int3   
   14003b2dd:	int3   
   14003b2de:	int3   
   14003b2df:	int3   
   14003b2e0:	mov    QWORD PTR [rsp+0x8],rbx
   14003b2e5:	mov    QWORD PTR [rsp+0x10],rsi
   14003b2ea:	push   rdi
   14003b2eb:	sub    rsp,0x220
   14003b2f2:	movzx  eax,BYTE PTR [rip+0x9c0f]        # 0x140044f08
   14003b2f9:	movsd  xmm0,QWORD PTR [rip+0x9bff]        # 0x140044f00
   14003b301:	mov    rsi,rcx
   14003b304:	mov    rcx,QWORD PTR [rcx+0x10]
   14003b308:	lea    rdx,[rip+0x3539]        # 0x14003e848
   14003b30f:	xor    edi,edi
   14003b311:	movsd  QWORD PTR [rsp+0x20],xmm0
   14003b317:	mov    BYTE PTR [rsp+0x28],al
   14003b31b:	call   0x14001ca70
   14003b320:	or     rbx,0xffffffffffffffff
   14003b324:	test   eax,eax
   14003b326:	je     0x14003b357
   14003b328:	lea    rcx,[rsp+0x20]
   14003b32d:	mov    rax,rbx
   14003b330:	inc    rax
   14003b333:	cmp    BYTE PTR [rcx+rax*1],dil
   14003b337:	jne    0x14003b330
   14003b339:	mov    r8,QWORD PTR [rsi+0x10]
   14003b33d:	lea    rcx,[rsp+0x20]
   14003b342:	lea    rdx,[rip+0x9bc7]        # 0x140044f10
   14003b349:	add    rcx,rax
   14003b34c:	call   QWORD PTR [rip+0x1d5e]        # 0x14003d0b0
   14003b352:	mov    edi,0x1
   14003b357:	movsd  xmm2,QWORD PTR [rsi+0x20]
   14003b35c:	ucomisd xmm2,QWORD PTR [rip+0x19d9c]        # 0x140055100
   14003b364:	jp     0x14003b368
   14003b366:	je     0x14003b395
   14003b368:	lea    rcx,[rsp+0x20]
   14003b36d:	mov    rax,rbx
   14003b370:	inc    rax
   14003b373:	cmp    BYTE PTR [rcx+rax*1],0x0
   14003b377:	jne    0x14003b370
   14003b379:	lea    rcx,[rsp+0x20]
   14003b37e:	movq   r8,xmm2
   14003b383:	lea    rdx,[rip+0x9b96]        # 0x140044f20
   14003b38a:	add    rcx,rax
   14003b38d:	call   QWORD PTR [rip+0x1d1d]        # 0x14003d0b0
   14003b393:	inc    edi
   14003b395:	mov    rcx,QWORD PTR [rsi]
   14003b398:	call   0x14003b5a0
   14003b39d:	lea    rdx,[rip+0x3150]        # 0x14003e4f4
   14003b3a4:	mov    rcx,rax
   14003b3a7:	mov    rsi,rax
   14003b3aa:	call   0x14001ca70
   14003b3af:	test   eax,eax
   14003b3b1:	je     0x14003b3e3
   14003b3b3:	lea    rax,[rsp+0x20]
   14003b3b8:	mov    rcx,rbx
   14003b3bb:	nop    DWORD PTR [rax+rax*1+0x0]
   14003b3c0:	inc    rcx
   14003b3c3:	cmp    BYTE PTR [rax+rcx*1],0x0
   14003b3c7:	jne    0x14003b3c0
   14003b3c9:	lea    rdx,[rsp+0x20]
   14003b3ce:	mov    r8,rsi
   14003b3d1:	add    rcx,rdx
   14003b3d4:	lea    rdx,[rip+0x9b55]        # 0x140044f30
   14003b3db:	call   QWORD PTR [rip+0x1ccf]        # 0x14003d0b0
   14003b3e1:	inc    edi
   14003b3e3:	test   edi,edi
   14003b3e5:	je     0x14003b433
   14003b3e7:	lea    rcx,[rsp+0x20]
   14003b3ec:	dec    rcx
   14003b3ef:	nop
   14003b3f0:	cmp    BYTE PTR [rcx+0x1],0x0
   14003b3f4:	lea    rcx,[rcx+0x1]
   14003b3f8:	jne    0x14003b3f0
   14003b3fa:	movzx  eax,WORD PTR [rip+0x9b3b]        # 0x140044f3c
   14003b401:	mov    WORD PTR [rcx],ax
   14003b404:	lea    rax,[rsp+0x20]
   14003b409:	nop    DWORD PTR [rax+0x0]
   14003b410:	inc    rbx
   14003b413:	cmp    BYTE PTR [rax+rbx*1],0x0
   14003b417:	jne    0x14003b410
   14003b419:	mov    r9,QWORD PTR [rip+0x1a0d0]        # 0x1400554f0
   14003b420:	lea    rcx,[rsp+0x20]
   14003b425:	mov    r8d,ebx
   14003b428:	mov    edx,0x1
   14003b42d:	call   QWORD PTR [rip+0x1db5]        # 0x14003d1e8
   14003b433:	lea    r11,[rsp+0x220]
   14003b43b:	mov    rbx,QWORD PTR [r11+0x10]
   14003b43f:	mov    rsi,QWORD PTR [r11+0x18]
   14003b443:	mov    rsp,r11
   14003b446:	pop    rdi
   14003b447:	ret    
   14003b448:	int3   
   14003b449:	int3   
   14003b44a:	int3   
   14003b44b:	int3   
   14003b44c:	int3   
   14003b44d:	int3   
   14003b44e:	int3   
   14003b44f:	int3   
   14003b450:	or     rax,0xffffffffffffffff
   14003b454:	inc    rax
   14003b457:	cmp    BYTE PTR [rcx+rax*1],0x0
   14003b45b:	jne    0x14003b454
   14003b45d:	mov    r9,QWORD PTR [rip+0x1a08c]        # 0x1400554f0
   14003b464:	mov    r8d,eax
   14003b467:	mov    edx,0x1
   14003b46c:	rex.W jmp QWORD PTR [rip+0x1d75]        # 0x14003d1e8
   14003b473:	int3   
   14003b474:	int3   
   14003b475:	int3   
   14003b476:	int3   
   14003b477:	int3   
   14003b478:	int3   
   14003b479:	int3   
   14003b47a:	int3   
   14003b47b:	int3   
   14003b47c:	int3   
   14003b47d:	int3   
   14003b47e:	int3   
   14003b47f:	int3   
   14003b480:	mov    QWORD PTR [rsp+0x8],rbx
   14003b485:	push   rdi
   14003b486:	sub    rsp,0x20
   14003b48a:	mov    rdi,rcx
   14003b48d:	lea    rcx,[rip+0x9a6c]        # 0x140044f00
   14003b494:	mov    ebx,edx
   14003b496:	call   0x14003b540
   14003b49b:	test   ebx,ebx
   14003b49d:	je     0x14003b4b9
   14003b49f:	mov    rcx,QWORD PTR [rdi+0x8]
   14003b4a3:	call   0x14003b5a0
   14003b4a8:	lea    rcx,[rip+0x9a81]        # 0x140044f30
   14003b4af:	mov    rdx,rax
   14003b4b2:	call   0x14003b540
   14003b4b7:	jmp    0x14003b4c5
   14003b4b9:	lea    rcx,[rip+0x9a80]        # 0x140044f40
   14003b4c0:	call   0x14003b540
   14003b4c5:	mov    rcx,QWORD PTR [rdi]
   14003b4c8:	call   0x14003b5a0
   14003b4cd:	lea    rcx,[rip+0x9a7c]        # 0x140044f50
   14003b4d4:	mov    rdx,rax
   14003b4d7:	call   0x14003b540
   14003b4dc:	movzx  eax,BYTE PTR [rdi+0x1c]
   14003b4e0:	cmp    al,0x1
   14003b4e2:	je     0x14003b4f3
   14003b4e4:	lea    rcx,[rip+0x9a75]        # 0x140044f60
   14003b4eb:	movsx  edx,al
   14003b4ee:	call   0x14003b540
   14003b4f3:	movzx  eax,BYTE PTR [rdi+0x1a]
   14003b4f7:	cmp    al,0xb
   14003b4f9:	jne    0x14003b504
   14003b4fb:	mov    rdx,QWORD PTR [rip+0x17b06]        # 0x140053008
   14003b502:	jmp    0x14003b50f
   14003b504:	cmp    al,0x4
   14003b506:	jne    0x14003b51b
   14003b508:	mov    rdx,QWORD PTR [rip+0x17b01]        # 0x140053010
   14003b50f:	lea    rcx,[rip+0x9a62]        # 0x140044f78
   14003b516:	call   0x14003b540
   14003b51b:	lea    rcx,[rip+0x9a1a]        # 0x140044f3c
   14003b522:	mov    rbx,QWORD PTR [rsp+0x30]
   14003b527:	add    rsp,0x20
   14003b52b:	pop    rdi
   14003b52c:	jmp    0x14003b540
   14003b531:	int3   
   14003b532:	int3   
   14003b533:	int3   
   14003b534:	int3   
   14003b535:	int3   
   14003b536:	int3   
   14003b537:	int3   
   14003b538:	int3   
   14003b539:	int3   
   14003b53a:	int3   
   14003b53b:	int3   
   14003b53c:	int3   
   14003b53d:	int3   
   14003b53e:	int3   
   14003b53f:	int3   
   14003b540:	mov    rax,rsp
   14003b543:	mov    QWORD PTR [rax+0x8],rcx
   14003b547:	mov    QWORD PTR [rax+0x10],rdx
   14003b54b:	mov    QWORD PTR [rax+0x18],r8
   14003b54f:	mov    QWORD PTR [rax+0x20],r9
   14003b553:	sub    rsp,0x228
   14003b55a:	mov    rdx,rcx
   14003b55d:	lea    r8,[rax+0x10]
   14003b561:	lea    rcx,[rsp+0x20]
   14003b566:	call   QWORD PTR [rip+0x1c84]        # 0x14003d1f0
   14003b56c:	lea    rcx,[rsp+0x20]
   14003b571:	or     rax,0xffffffffffffffff
   14003b575:	inc    rax
   14003b578:	cmp    BYTE PTR [rcx+rax*1],0x0
   14003b57c:	jne    0x14003b575
   14003b57e:	mov    r9,QWORD PTR [rip+0x19f6b]        # 0x1400554f0
   14003b585:	lea    rcx,[rsp+0x20]
   14003b58a:	mov    r8d,eax
   14003b58d:	mov    edx,0x1
   14003b592:	call   QWORD PTR [rip+0x1c50]        # 0x14003d1e8
   14003b598:	add    rsp,0x228
   14003b59f:	ret    
   14003b5a0:	rex push rbx
   14003b5a2:	sub    rsp,0x50
   14003b5a6:	mov    rbx,rcx
   14003b5a9:	call   0x140026140
   14003b5ae:	mov    r8,QWORD PTR [rip+0x17a8b]        # 0x140053040
   14003b5b5:	mov    r10,rax
   14003b5b8:	lea    r9,[rip+0x17a81]        # 0x140053040
   14003b5bf:	test   r8,r8
   14003b5c2:	je     0x14003b604
   14003b5c4:	nop    DWORD PTR [rax+0x0]
   14003b5c8:	nop    DWORD PTR [rax+rax*1+0x0]
   14003b5d0:	mov    rdx,r10
   14003b5d3:	sub    r8,r10
   14003b5d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14003b5e0:	movzx  ecx,BYTE PTR [rdx]
   14003b5e3:	movzx  eax,BYTE PTR [rdx+r8*1]
   14003b5e8:	sub    ecx,eax
   14003b5ea:	jne    0x14003b5f3
   14003b5ec:	inc    rdx
   14003b5ef:	test   eax,eax
   14003b5f1:	jne    0x14003b5e0
   14003b5f3:	test   ecx,ecx
   14003b5f5:	je     0x14003b624
   14003b5f7:	mov    r8,QWORD PTR [r9+0x8]
   14003b5fb:	add    r9,0x8
   14003b5ff:	test   r8,r8
   14003b602:	jne    0x14003b5d0
   14003b604:	lea    rdx,[rip+0x98d5]        # 0x140044ee0
   14003b60b:	mov    rcx,r10
   14003b60e:	call   0x14003bc96
   14003b613:	test   eax,eax
   14003b615:	jne    0x14003b633
   14003b617:	lea    rax,[rip+0x2f46]        # 0x14003e564
   14003b61e:	add    rsp,0x50
   14003b622:	pop    rbx
   14003b623:	ret    
   14003b624:	cmp    QWORD PTR [r9],0x0
   14003b628:	je     0x14003b604
   14003b62a:	mov    rax,r10
   14003b62d:	add    rsp,0x50
   14003b631:	pop    rbx
   14003b632:	ret    
   14003b633:	lea    rdx,[rsp+0x30]
   14003b638:	mov    r8d,0x1
   14003b63e:	mov    rcx,rbx
   14003b641:	call   0x140026220
   14003b646:	movzx  eax,BYTE PTR [rsp+0x32]
   14003b64b:	movzx  r9d,BYTE PTR [rsp+0x31]
   14003b651:	movzx  r8d,BYTE PTR [rsp+0x30]
   14003b657:	lea    rdx,[rip+0x9892]        # 0x140044ef0
   14003b65e:	lea    rcx,[rip+0x19b2b]        # 0x140055190
   14003b665:	mov    DWORD PTR [rsp+0x20],eax
   14003b669:	call   QWORD PTR [rip+0x1a41]        # 0x14003d0b0
   14003b66f:	lea    rax,[rip+0x19b1a]        # 0x140055190
   14003b676:	add    rsp,0x50
   14003b67a:	pop    rbx
   14003b67b:	ret    
   14003b67c:	int3   
   14003b67d:	int3   
   14003b67e:	int3   
   14003b67f:	int3   
   14003b680:	test   edx,edx
   14003b682:	jle    0x14003b7ae
   14003b688:	mov    QWORD PTR [rsp+0x10],rbx
   14003b68d:	mov    QWORD PTR [rsp+0x20],rsi
   14003b692:	push   rdi
   14003b693:	sub    rsp,0x20
   14003b697:	mov    QWORD PTR [rsp+0x30],rbp
   14003b69c:	mov    rdi,rcx
   14003b69f:	lea    r10,[rip+0x9826]        # 0x140044ecc
   14003b6a6:	lea    rbp,[rip+0x2e7f]        # 0x14003e52c
   14003b6ad:	xor    ebx,ebx
   14003b6af:	movsxd rsi,edx
   14003b6b2:	nop    DWORD PTR [rax+0x0]
   14003b6b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14003b6c0:	cmp    DWORD PTR [rip+0x199cd],0x0        # 0x140055094
   14003b6c7:	mov    ecx,DWORD PTR [rdi+rbx*8]
   14003b6ca:	mov    edx,DWORD PTR [rdi+rbx*8+0x4]
   14003b6ce:	jne    0x14003b6fe
   14003b6d0:	movd   xmm0,DWORD PTR [rip+0x199e0]        # 0x1400550b8
   14003b6d8:	movd   xmm1,ecx
   14003b6dc:	cvtdq2pd xmm0,xmm0
   14003b6e0:	cvtdq2pd xmm1,xmm1
   14003b6e4:	mulsd  xmm1,QWORD PTR [rip+0x199b4]        # 0x1400550a0
   14003b6ec:	addsd  xmm1,xmm0
   14003b6f0:	movd   xmm0,edx
   14003b6f4:	addsd  xmm1,QWORD PTR [rip+0x199ac]        # 0x1400550a8
   14003b6fc:	jmp    0x14003b72e
   14003b6fe:	mov    eax,DWORD PTR [rip+0x199bc]        # 0x1400550c0
   14003b704:	movd   xmm0,edx
   14003b708:	dec    eax
   14003b70a:	movd   xmm1,eax
   14003b70e:	cvtdq2pd xmm0,xmm0
   14003b712:	mulsd  xmm0,QWORD PTR [rip+0x19986]        # 0x1400550a0
   14003b71a:	cvtdq2pd xmm1,xmm1
   14003b71e:	subsd  xmm1,xmm0
   14003b722:	movd   xmm0,ecx
   14003b726:	subsd  xmm1,QWORD PTR [rip+0x1997a]        # 0x1400550a8
   14003b72e:	mov    eax,DWORD PTR [rip+0x19990]        # 0x1400550c4
   14003b734:	cvttsd2si r8d,xmm1
   14003b739:	cvtdq2pd xmm0,xmm0
   14003b73d:	dec    eax
   14003b73f:	lea    rcx,[rip+0x978a]        # 0x140044ed0
   14003b746:	mov    rdx,r10
   14003b749:	mov    DWORD PTR [rsp+0x40],r8d
   14003b74e:	mulsd  xmm0,QWORD PTR [rip+0x1994a]        # 0x1400550a0
   14003b756:	movd   xmm1,eax
   14003b75a:	cvtdq2pd xmm1,xmm1
   14003b75e:	subsd  xmm1,xmm0
   14003b762:	subsd  xmm1,QWORD PTR [rip+0x19946]        # 0x1400550b0
   14003b76a:	cvttsd2si eax,xmm1
   14003b76e:	mov    DWORD PTR [rsp+0x44],eax
   14003b772:	mov    r9,QWORD PTR [rsp+0x40]
   14003b777:	shr    r9,0x20
   14003b77b:	call   0x14003b540
   14003b780:	test   rbx,rbx
   14003b783:	lea    r10,[rip+0x974e]        # 0x140044ed8
   14003b78a:	cmovne r10,rbp
   14003b78e:	inc    rbx
   14003b791:	cmp    rbx,rsi
   14003b794:	jl     0x14003b6c0
   14003b79a:	mov    rbp,QWORD PTR [rsp+0x30]
   14003b79f:	mov    rbx,QWORD PTR [rsp+0x38]
   14003b7a4:	mov    rsi,QWORD PTR [rsp+0x48]
   14003b7a9:	add    rsp,0x20
   14003b7ad:	pop    rdi
   14003b7ae:	ret    
   14003b7af:	int3   
   14003b7b0:	cmp    DWORD PTR [rip+0x198dd],0x0        # 0x140055094
   14003b7b7:	jne    0x14003b7f7
   14003b7b9:	movd   xmm0,DWORD PTR [rip+0x198f7]        # 0x1400550b8
   14003b7c1:	movd   xmm1,ecx
   14003b7c5:	cvtdq2pd xmm0,xmm0
   14003b7c9:	cvtdq2pd xmm1,xmm1
   14003b7cd:	mulsd  xmm1,QWORD PTR [rip+0x198cb]        # 0x1400550a0
   14003b7d5:	addsd  xmm1,xmm0
   14003b7d9:	addsd  xmm1,QWORD PTR [rip+0x198c7]        # 0x1400550a8
   14003b7e1:	cvttsd2si eax,xmm1
   14003b7e5:	mov    DWORD PTR [rsp+0x10],eax
   14003b7e9:	mov    eax,DWORD PTR [rip+0x198d5]        # 0x1400550c4
   14003b7ef:	dec    eax
   14003b7f1:	shr    rcx,0x20
   14003b7f5:	jmp    0x14003b83a
   14003b7f7:	mov    eax,DWORD PTR [rip+0x198c3]        # 0x1400550c0
   14003b7fd:	dec    eax
   14003b7ff:	movd   xmm1,eax
   14003b803:	mov    rax,rcx
   14003b806:	shr    rax,0x20
   14003b80a:	movd   xmm0,eax
   14003b80e:	cvtdq2pd xmm1,xmm1
   14003b812:	cvtdq2pd xmm0,xmm0
   14003b816:	mulsd  xmm0,QWORD PTR [rip+0x19882]        # 0x1400550a0
   14003b81e:	subsd  xmm1,xmm0
   14003b822:	subsd  xmm1,QWORD PTR [rip+0x1987e]        # 0x1400550a8
   14003b82a:	cvttsd2si eax,xmm1
   14003b82e:	mov    DWORD PTR [rsp+0x10],eax
   14003b832:	mov    eax,DWORD PTR [rip+0x1988c]        # 0x1400550c4
   14003b838:	dec    eax
   14003b83a:	movd   xmm1,eax
   14003b83e:	movd   xmm0,ecx
   14003b842:	cvtdq2pd xmm1,xmm1
   14003b846:	cvtdq2pd xmm0,xmm0
   14003b84a:	mulsd  xmm0,QWORD PTR [rip+0x1984e]        # 0x1400550a0
   14003b852:	subsd  xmm1,xmm0
   14003b856:	subsd  xmm1,QWORD PTR [rip+0x19852]        # 0x1400550b0
   14003b85e:	cvttsd2si eax,xmm1
   14003b862:	mov    DWORD PTR [rsp+0x14],eax
   14003b866:	mov    rax,QWORD PTR [rsp+0x10]
   14003b86b:	ret    
   14003b86c:	jmp    QWORD PTR [rip+0x1a5e]        # 0x14003d2d0
   14003b872:	jmp    QWORD PTR [rip+0x1a48]        # 0x14003d2c0
   14003b878:	jmp    QWORD PTR [rip+0x1a3a]        # 0x14003d2b8
   14003b87e:	jmp    QWORD PTR [rip+0x1a2c]        # 0x14003d2b0
   14003b884:	jmp    QWORD PTR [rip+0x1a1e]        # 0x14003d2a8
   14003b88a:	jmp    QWORD PTR [rip+0x1a10]        # 0x14003d2a0
   14003b890:	jmp    QWORD PTR [rip+0x18d2]        # 0x14003d168
   14003b896:	jmp    QWORD PTR [rip+0x179c]        # 0x14003d038
   14003b89c:	jmp    QWORD PTR [rip+0x179e]        # 0x14003d040
   14003b8a2:	jmp    QWORD PTR [rip+0x17a0]        # 0x14003d048
   14003b8a8:	jmp    QWORD PTR [rip+0x17a2]        # 0x14003d050
   14003b8ae:	jmp    QWORD PTR [rip+0x17a4]        # 0x14003d058
   14003b8b4:	jmp    QWORD PTR [rip+0x17a6]        # 0x14003d060
   14003b8ba:	jmp    QWORD PTR [rip+0x17a8]        # 0x14003d068
   14003b8c0:	jmp    QWORD PTR [rip+0x17aa]        # 0x14003d070
   14003b8c6:	jmp    QWORD PTR [rip+0x17ac]        # 0x14003d078
   14003b8cc:	jmp    QWORD PTR [rip+0x17ae]        # 0x14003d080
   14003b8d2:	int3   
   14003b8d3:	int3   
   14003b8d4:	int3   
   14003b8d5:	int3   
   14003b8d6:	int3   
   14003b8d7:	int3   
   14003b8d8:	int3   
   14003b8d9:	int3   
   14003b8da:	int3   
   14003b8db:	int3   
   14003b8dc:	int3   
   14003b8dd:	int3   
   14003b8de:	int3   
   14003b8df:	int3   
   14003b8e0:	int3   
   14003b8e1:	int3   
   14003b8e2:	int3   
   14003b8e3:	int3   
   14003b8e4:	int3   
   14003b8e5:	int3   
   14003b8e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14003b8f0:	sub    rsp,0x10
   14003b8f4:	mov    QWORD PTR [rsp],r10
   14003b8f8:	mov    QWORD PTR [rsp+0x8],r11
   14003b8fd:	xor    r11,r11
   14003b900:	lea    r10,[rsp+0x18]
   14003b905:	sub    r10,rax
   14003b908:	cmovb  r10,r11
   14003b90c:	mov    r11,QWORD PTR gs:0x10
   14003b915:	cmp    r10,r11
   14003b918:	jae    0x14003b930
   14003b91a:	and    r10w,0xf000
   14003b920:	lea    r11,[r11-0x1000]
   14003b927:	mov    BYTE PTR [r11],0x0
   14003b92b:	cmp    r10,r11
   14003b92e:	jne    0x14003b920
   14003b930:	mov    r10,QWORD PTR [rsp]
   14003b934:	mov    r11,QWORD PTR [rsp+0x8]
   14003b939:	add    rsp,0x10
   14003b93d:	ret    
   14003b93e:	jmp    QWORD PTR [rip+0x1744]        # 0x14003d088
   14003b944:	jmp    QWORD PTR [rip+0x1746]        # 0x14003d090
   14003b94a:	jmp    QWORD PTR [rip+0x1748]        # 0x14003d098
   14003b950:	jmp    QWORD PTR [rip+0x174a]        # 0x14003d0a0
   14003b956:	jmp    QWORD PTR [rip+0x174c]        # 0x14003d0a8
   14003b95c:	jmp    QWORD PTR [rip+0x174e]        # 0x14003d0b0
   14003b962:	jmp    QWORD PTR [rip+0x1750]        # 0x14003d0b8
   14003b968:	jmp    QWORD PTR [rip+0x1752]        # 0x14003d0c0
   14003b96e:	jmp    QWORD PTR [rip+0x1754]        # 0x14003d0c8
   14003b974:	mov    QWORD PTR [rsp+0x8],rbx
   14003b979:	mov    QWORD PTR [rsp+0x10],rbp
   14003b97e:	mov    QWORD PTR [rsp+0x18],rsi
   14003b983:	push   rdi
   14003b984:	sub    rsp,0x10
   14003b988:	xor    ecx,ecx
   14003b98a:	xor    eax,eax
   14003b98c:	xor    edi,edi
   14003b98e:	cpuid  
   14003b990:	mov    DWORD PTR [rip+0x17b5a],0x2        # 0x1400534f4
   14003b99a:	mov    DWORD PTR [rip+0x17b4c],0x1        # 0x1400534f0
   14003b9a4:	mov    r11d,ebx
   14003b9a7:	mov    ebx,ecx
   14003b9a9:	mov    r8d,edx
   14003b9ac:	xor    ebx,0x6c65746e
   14003b9b2:	mov    r9d,edx
   14003b9b5:	mov    edx,r11d
   14003b9b8:	xor    r8d,0x49656e69
   14003b9bf:	xor    edx,0x756e6547
   14003b9c5:	mov    ebp,eax
   14003b9c7:	or     r8d,ebx
   14003b9ca:	lea    eax,[rdi+0x1]
   14003b9cd:	or     r8d,edx
   14003b9d0:	sete   r10b
   14003b9d4:	xor    r11d,0x68747541
   14003b9db:	xor    r9d,0x69746e65
   14003b9e2:	or     r11d,r9d
   14003b9e5:	xor    ecx,0x444d4163
   14003b9eb:	or     r11d,ecx
   14003b9ee:	sete   sil
   14003b9f2:	xor    ecx,ecx
   14003b9f4:	cpuid  
   14003b9f6:	mov    r11d,ecx
   14003b9f9:	mov    r9d,eax
   14003b9fc:	mov    DWORD PTR [rsp+0x4],ebx
   14003ba00:	mov    DWORD PTR [rsp+0xc],edx
   14003ba04:	test   r10b,r10b
   14003ba07:	je     0x14003ba58
   14003ba09:	mov    edx,eax
   14003ba0b:	and    edx,0xfff3ff0
   14003ba11:	cmp    edx,0x106c0
   14003ba17:	je     0x14003ba44
   14003ba19:	cmp    edx,0x20660
   14003ba1f:	je     0x14003ba44
   14003ba21:	cmp    edx,0x20670
   14003ba27:	je     0x14003ba44
   14003ba29:	add    edx,0xfffcf9b0
   14003ba2f:	cmp    edx,0x20
   14003ba32:	ja     0x14003ba58
   14003ba34:	movabs rcx,0x100010001
   14003ba3e:	bt     rcx,rdx
   14003ba42:	jae    0x14003ba58
   14003ba44:	mov    r8d,DWORD PTR [rip+0x197c5]        # 0x140055210
   14003ba4b:	or     r8d,0x1
   14003ba4f:	mov    DWORD PTR [rip+0x197ba],r8d        # 0x140055210
   14003ba56:	jmp    0x14003ba5f
   14003ba58:	mov    r8d,DWORD PTR [rip+0x197b1]        # 0x140055210
   14003ba5f:	test   sil,sil
   14003ba62:	je     0x14003ba7f
   14003ba64:	and    r9d,0xff00f00
   14003ba6b:	cmp    r9d,0x600f00
   14003ba72:	jl     0x14003ba7f
   14003ba74:	or     r8d,0x4
   14003ba78:	mov    DWORD PTR [rip+0x19791],r8d        # 0x140055210
   14003ba7f:	mov    eax,0x7
   14003ba84:	cmp    ebp,eax
   14003ba86:	jl     0x14003baaa
   14003ba88:	xor    ecx,ecx
   14003ba8a:	cpuid  
   14003ba8c:	mov    edi,ebx
   14003ba8e:	mov    DWORD PTR [rsp],eax
   14003ba91:	mov    DWORD PTR [rsp+0x8],ecx
   14003ba95:	mov    DWORD PTR [rsp+0xc],edx
   14003ba99:	bt     ebx,0x9
   14003ba9d:	jae    0x14003baaa
   14003ba9f:	or     r8d,0x2
   14003baa3:	mov    DWORD PTR [rip+0x19766],r8d        # 0x140055210
   14003baaa:	bt     r11d,0x14
   14003baaf:	jae    0x14003bb01
   14003bab1:	mov    DWORD PTR [rip+0x17a35],0x2        # 0x1400534f0
   14003babb:	mov    DWORD PTR [rip+0x17a2f],0x6        # 0x1400534f4
   14003bac5:	bt     r11d,0x1b
   14003baca:	jae    0x14003bb01
   14003bacc:	bt     r11d,0x1c
   14003bad1:	jae    0x14003bb01
   14003bad3:	mov    DWORD PTR [rip+0x17a13],0x3        # 0x1400534f0
   14003badd:	mov    DWORD PTR [rip+0x17a0d],0xe        # 0x1400534f4
   14003bae7:	test   dil,0x20
   14003baeb:	je     0x14003bb01
   14003baed:	mov    DWORD PTR [rip+0x179f9],0x5        # 0x1400534f0
   14003baf7:	mov    DWORD PTR [rip+0x179f3],0x2e        # 0x1400534f4
   14003bb01:	mov    rbx,QWORD PTR [rsp+0x20]
   14003bb06:	mov    rbp,QWORD PTR [rsp+0x28]
   14003bb0b:	mov    rsi,QWORD PTR [rsp+0x30]
   14003bb10:	xor    eax,eax
   14003bb12:	add    rsp,0x10
   14003bb16:	pop    rdi
   14003bb17:	ret    
   14003bb18:	jmp    QWORD PTR [rip+0x15b2]        # 0x14003d0d0
   14003bb1e:	jmp    QWORD PTR [rip+0x15b4]        # 0x14003d0d8
   14003bb24:	jmp    QWORD PTR [rip+0x15b6]        # 0x14003d0e0
   14003bb2a:	jmp    QWORD PTR [rip+0x15c0]        # 0x14003d0f0
   14003bb30:	jmp    QWORD PTR [rip+0x15c2]        # 0x14003d0f8
   14003bb36:	jmp    QWORD PTR [rip+0x15c4]        # 0x14003d100
   14003bb3c:	jmp    QWORD PTR [rip+0x15c6]        # 0x14003d108
   14003bb42:	jmp    QWORD PTR [rip+0x15c8]        # 0x14003d110
   14003bb48:	jmp    QWORD PTR [rip+0x15ca]        # 0x14003d118
   14003bb4e:	jmp    QWORD PTR [rip+0x15cc]        # 0x14003d120
   14003bb54:	jmp    QWORD PTR [rip+0x15ce]        # 0x14003d128
   14003bb5a:	jmp    QWORD PTR [rip+0x15d0]        # 0x14003d130
   14003bb60:	jmp    QWORD PTR [rip+0x15d2]        # 0x14003d138
   14003bb66:	jmp    QWORD PTR [rip+0x15d4]        # 0x14003d140
   14003bb6c:	rex push rbx
   14003bb6e:	sub    rsp,0x20
   14003bb72:	cmp    QWORD PTR [rip+0x19a6e],0x0        # 0x1400555e8
   14003bb7a:	jne    0x14003bbb2
   14003bb7c:	mov    edx,0x8
   14003bb81:	lea    ecx,[rdx+0x18]
   14003bb84:	call   QWORD PTR [rip+0x167e]        # 0x14003d208
   14003bb8a:	mov    rcx,rax
   14003bb8d:	mov    rbx,rax
   14003bb90:	call   QWORD PTR [rip+0x148a]        # 0x14003d020
   14003bb96:	mov    QWORD PTR [rip+0x19a4b],rax        # 0x1400555e8
   14003bb9d:	mov    QWORD PTR [rip+0x19a3c],rax        # 0x1400555e0
   14003bba4:	test   rbx,rbx
   14003bba7:	jne    0x14003bbae
   14003bba9:	lea    eax,[rbx+0x18]
   14003bbac:	jmp    0x14003bbb4
   14003bbae:	and    QWORD PTR [rbx],0x0
   14003bbb2:	xor    eax,eax
   14003bbb4:	add    rsp,0x20
   14003bbb8:	pop    rbx
   14003bbb9:	ret    
   14003bbba:	int3   
   14003bbbb:	int3   
   14003bbbc:	rex push rbx
   14003bbbe:	sub    rsp,0x20
   14003bbc2:	mov    rbx,rcx
   14003bbc5:	mov    rcx,QWORD PTR [rip+0x19a1c]        # 0x1400555e8
   14003bbcc:	call   QWORD PTR [rip+0x1446]        # 0x14003d018
   14003bbd2:	mov    QWORD PTR [rsp+0x38],rax
   14003bbd7:	cmp    rax,0xffffffffffffffff
   14003bbdb:	jne    0x14003bbe8
   14003bbdd:	mov    rcx,rbx
   14003bbe0:	call   QWORD PTR [rip+0x163a]        # 0x14003d220
   14003bbe6:	jmp    0x14003bc66
   14003bbe8:	mov    ecx,0x8
   14003bbed:	call   0x14003c016
   14003bbf2:	nop
   14003bbf3:	mov    rcx,QWORD PTR [rip+0x199ee]        # 0x1400555e8
   14003bbfa:	call   QWORD PTR [rip+0x1418]        # 0x14003d018
   14003bc00:	mov    QWORD PTR [rsp+0x38],rax
   14003bc05:	mov    rcx,QWORD PTR [rip+0x199d4]        # 0x1400555e0
   14003bc0c:	call   QWORD PTR [rip+0x1406]        # 0x14003d018
   14003bc12:	mov    QWORD PTR [rsp+0x40],rax
   14003bc17:	mov    rcx,rbx
   14003bc1a:	call   QWORD PTR [rip+0x1400]        # 0x14003d020
   14003bc20:	mov    rcx,rax
   14003bc23:	lea    r8,[rsp+0x40]
   14003bc28:	lea    rdx,[rsp+0x38]
   14003bc2d:	call   0x14003c028
   14003bc32:	mov    rbx,rax
   14003bc35:	mov    rcx,QWORD PTR [rsp+0x38]
   14003bc3a:	call   QWORD PTR [rip+0x13e0]        # 0x14003d020
   14003bc40:	mov    QWORD PTR [rip+0x199a1],rax        # 0x1400555e8
   14003bc47:	mov    rcx,QWORD PTR [rsp+0x40]
   14003bc4c:	call   QWORD PTR [rip+0x13ce]        # 0x14003d020
   14003bc52:	mov    QWORD PTR [rip+0x19987],rax        # 0x1400555e0
   14003bc59:	mov    ecx,0x8
   14003bc5e:	call   0x14003c01c
   14003bc63:	mov    rax,rbx
   14003bc66:	add    rsp,0x20
   14003bc6a:	pop    rbx
   14003bc6b:	ret    
   14003bc6c:	sub    rsp,0x28
   14003bc70:	call   0x14003bbbc
   14003bc75:	neg    rax
   14003bc78:	sbb    eax,eax
   14003bc7a:	neg    eax
   14003bc7c:	dec    eax
   14003bc7e:	add    rsp,0x28
   14003bc82:	ret    
   14003bc83:	int3   
   14003bc84:	jmp    QWORD PTR [rip+0x14be]        # 0x14003d148
   14003bc8a:	jmp    QWORD PTR [rip+0x14c0]        # 0x14003d150
   14003bc90:	jmp    QWORD PTR [rip+0x14c2]        # 0x14003d158
   14003bc96:	jmp    QWORD PTR [rip+0x14c4]        # 0x14003d160
   14003bc9c:	jmp    QWORD PTR [rip+0x1626]        # 0x14003d2c8
   14003bca2:	jmp    QWORD PTR [rip+0x14c8]        # 0x14003d170
   14003bca8:	jmp    QWORD PTR [rip+0x14ca]        # 0x14003d178
   14003bcae:	jmp    QWORD PTR [rip+0x14cc]        # 0x14003d180
   14003bcb4:	jmp    QWORD PTR [rip+0x14ce]        # 0x14003d188
   14003bcba:	jmp    QWORD PTR [rip+0x14d0]        # 0x14003d190
   14003bcc0:	jmp    QWORD PTR [rip+0x14d2]        # 0x14003d198
   14003bcc6:	jmp    QWORD PTR [rip+0x14d4]        # 0x14003d1a0
   14003bccc:	jmp    QWORD PTR [rip+0x14d6]        # 0x14003d1a8
   14003bcd2:	jmp    QWORD PTR [rip+0x14d8]        # 0x14003d1b0
   14003bcd8:	jmp    QWORD PTR [rip+0x14da]        # 0x14003d1b8
   14003bcde:	jmp    QWORD PTR [rip+0x14dc]        # 0x14003d1c0
   14003bce4:	jmp    QWORD PTR [rip+0x14de]        # 0x14003d1c8
   14003bcea:	jmp    QWORD PTR [rip+0x14e0]        # 0x14003d1d0
   14003bcf0:	jmp    QWORD PTR [rip+0x14e2]        # 0x14003d1d8
   14003bcf6:	jmp    QWORD PTR [rip+0x14e4]        # 0x14003d1e0
   14003bcfc:	jmp    QWORD PTR [rip+0x14e6]        # 0x14003d1e8
   14003bd02:	jmp    QWORD PTR [rip+0x14e8]        # 0x14003d1f0
   14003bd08:	sub    rsp,0x28
   14003bd0c:	mov    eax,0x5a4d
   14003bd11:	cmp    WORD PTR [rip+0xfffffffffffc42e8],ax        # 0x140000000
   14003bd18:	je     0x14003bd1e
   14003bd1a:	xor    ecx,ecx
   14003bd1c:	jmp    0x14003bd56
   14003bd1e:	movsxd rax,DWORD PTR [rip+0xfffffffffffc4317]        # 0x14000003c
   14003bd25:	lea    rcx,[rip+0xfffffffffffc42d4]        # 0x140000000
   14003bd2c:	add    rax,rcx
   14003bd2f:	cmp    DWORD PTR [rax],0x4550
   14003bd35:	jne    0x14003bd1a
   14003bd37:	mov    ecx,0x20b
   14003bd3c:	cmp    WORD PTR [rax+0x18],cx
   14003bd40:	jne    0x14003bd1a
   14003bd42:	xor    ecx,ecx
   14003bd44:	cmp    DWORD PTR [rax+0x84],0xe
   14003bd4b:	jbe    0x14003bd56
   14003bd4d:	cmp    DWORD PTR [rax+0xf8],ecx
   14003bd53:	setne  cl
   14003bd56:	mov    DWORD PTR [rip+0x194c4],ecx        # 0x140055220
   14003bd5c:	mov    ecx,0x1
   14003bd61:	call   QWORD PTR [rip+0x14d9]        # 0x14003d240
   14003bd67:	or     rcx,0xffffffffffffffff
   14003bd6b:	call   QWORD PTR [rip+0x12af]        # 0x14003d020
   14003bd71:	mov    rcx,QWORD PTR [rip+0x1508]        # 0x14003d280
   14003bd78:	mov    QWORD PTR [rip+0x19861],rax        # 0x1400555e0
   14003bd7f:	mov    QWORD PTR [rip+0x19862],rax        # 0x1400555e8
   14003bd86:	mov    eax,DWORD PTR [rip+0x194c0]        # 0x14005524c
   14003bd8c:	mov    DWORD PTR [rcx],eax
   14003bd8e:	mov    rdx,QWORD PTR [rip+0x14f3]        # 0x14003d288
   14003bd95:	mov    eax,DWORD PTR [rip+0x194a5]        # 0x140055240
   14003bd9b:	mov    DWORD PTR [rdx],eax
   14003bd9d:	call   0x14003c22c
   14003bda2:	call   0x14003c090
   14003bda7:	cmp    DWORD PTR [rip+0x1774a],0x0        # 0x1400534f8
   14003bdae:	jne    0x14003bdbd
   14003bdb0:	lea    rcx,[rip+0x471]        # 0x14003c228
   14003bdb7:	call   QWORD PTR [rip+0x14a3]        # 0x14003d260
   14003bdbd:	cmp    DWORD PTR [rip+0x17738],0xffffffff        # 0x1400534fc
   14003bdc4:	jne    0x14003bdcf
   14003bdc6:	or     ecx,0xffffffff
   14003bdc9:	call   QWORD PTR [rip+0x1489]        # 0x14003d258
   14003bdcf:	xor    eax,eax
   14003bdd1:	add    rsp,0x28
   14003bdd5:	ret    
   14003bdd6:	int3   
   14003bdd7:	int3   
   14003bdd8:	sub    rsp,0x38
   14003bddc:	lea    rcx,[rip+0x481]        # 0x14003c264
   14003bde3:	call   0x14003bc6c
   14003bde8:	mov    eax,DWORD PTR [rip+0x1945a]        # 0x140055248
   14003bdee:	mov    r9d,DWORD PTR [rip+0x1944f]        # 0x140055244
   14003bdf5:	mov    DWORD PTR [rip+0x19441],eax        # 0x14005523c
   14003bdfb:	lea    rax,[rip+0x1943a]        # 0x14005523c
   14003be02:	lea    r8,[rip+0x19427]        # 0x140055230
   14003be09:	lea    rdx,[rip+0x19418]        # 0x140055228
   14003be10:	lea    rcx,[rip+0x1940d]        # 0x140055224
   14003be17:	mov    QWORD PTR [rsp+0x20],rax
   14003be1c:	call   QWORD PTR [rip+0x1416]        # 0x14003d238
   14003be22:	mov    DWORD PTR [rip+0x19410],eax        # 0x140055238
   14003be28:	test   eax,eax
   14003be2a:	jns    0x14003be36
   14003be2c:	mov    ecx,0x8
   14003be31:	call   0x14003c08a
   14003be36:	add    rsp,0x38
   14003be3a:	ret    
   14003be3b:	int3   
   14003be3c:	mov    rax,QWORD PTR gs:0x30
   14003be45:	ret    
   14003be46:	int3   
   14003be47:	int3   
   14003be48:	rex push rdi
   14003be4a:	sub    rsp,0x20
   14003be4e:	mov    rax,QWORD PTR gs:0x30
   14003be57:	mov    rcx,QWORD PTR [rax+0x8]
   14003be5b:	xor    edi,edi
   14003be5d:	xor    eax,eax
   14003be5f:	lock cmpxchg QWORD PTR [rip+0x19760],rcx        # 0x1400555c8
   14003be68:	je     0x14003be78
   14003be6a:	cmp    rax,rcx
   14003be6d:	jne    0x14003be76
   14003be6f:	mov    edi,0x1
   14003be74:	jmp    0x14003be78
   14003be76:	jmp    0x14003be5d
   14003be78:	mov    eax,DWORD PTR [rip+0x19752]        # 0x1400555d0
   14003be7e:	cmp    eax,0x1
   14003be81:	jne    0x14003be8d
   14003be83:	lea    ecx,[rax+0x1e]
   14003be86:	call   0x14003c08a
   14003be8b:	jmp    0x14003becc
   14003be8d:	mov    eax,DWORD PTR [rip+0x1973d]        # 0x1400555d0
   14003be93:	test   eax,eax
   14003be95:	jne    0x14003bec2
   14003be97:	mov    DWORD PTR [rip+0x1972f],0x1        # 0x1400555d0
   14003bea1:	lea    rdx,[rip+0x1490]        # 0x14003d338
   14003bea8:	lea    rcx,[rip+0x1461]        # 0x14003d310
   14003beaf:	call   0x14003c2a8
   14003beb4:	test   eax,eax
   14003beb6:	je     0x14003becc
   14003beb8:	mov    eax,0xff
   14003bebd:	jmp    0x14003bfb2
   14003bec2:	mov    DWORD PTR [rip+0x1934c],0x1        # 0x140055218
   14003becc:	mov    eax,DWORD PTR [rip+0x196fe]        # 0x1400555d0
   14003bed2:	cmp    eax,0x1
   14003bed5:	jne    0x14003bef4
   14003bed7:	lea    rdx,[rip+0x142a]        # 0x14003d308
   14003bede:	lea    rcx,[rip+0x1413]        # 0x14003d2f8
   14003bee5:	call   0x14003c2ae
   14003beea:	mov    DWORD PTR [rip+0x196dc],0x2        # 0x1400555d0
   14003bef4:	test   edi,edi
   14003bef6:	jne    0x14003bf01
   14003bef8:	xor    eax,eax
   14003befa:	xchg   QWORD PTR [rip+0x196c7],rax        # 0x1400555c8
   14003bf01:	cmp    QWORD PTR [rip+0x196cf],0x0        # 0x1400555d8
   14003bf09:	je     0x14003bf2d
   14003bf0b:	lea    rcx,[rip+0x196c6]        # 0x1400555d8
   14003bf12:	call   0x14003c0f0
   14003bf17:	test   eax,eax
   14003bf19:	je     0x14003bf2d
   14003bf1b:	xor    r8d,r8d
   14003bf1e:	lea    edx,[r8+0x2]
   14003bf22:	xor    ecx,ecx
   14003bf24:	mov    rax,QWORD PTR [rip+0x196ad]        # 0x1400555d8
   14003bf2b:	call   rax
   14003bf2d:	mov    rcx,QWORD PTR [rip+0x192fc]        # 0x140055230
   14003bf34:	mov    rax,QWORD PTR [rip+0x133d]        # 0x14003d278
   14003bf3b:	mov    QWORD PTR [rax],rcx
   14003bf3e:	mov    r8,QWORD PTR [rip+0x192eb]        # 0x140055230
   14003bf45:	mov    rdx,QWORD PTR [rip+0x192dc]        # 0x140055228
   14003bf4c:	mov    ecx,DWORD PTR [rip+0x192d2]        # 0x140055224
   14003bf52:	call   0x140001000
   14003bf57:	mov    DWORD PTR [rip+0x192bf],eax        # 0x14005521c
   14003bf5d:	cmp    DWORD PTR [rip+0x192bc],0x0        # 0x140055220
   14003bf64:	jne    0x14003bf6e
   14003bf66:	mov    ecx,eax
   14003bf68:	call   QWORD PTR [rip+0x110a]        # 0x14003d078
   14003bf6e:	cmp    DWORD PTR [rip+0x192a3],0x0        # 0x140055218
   14003bf75:	jne    0x14003bf83
   14003bf77:	call   QWORD PTR [rip+0x12d3]        # 0x14003d250
   14003bf7d:	mov    eax,DWORD PTR [rip+0x19299]        # 0x14005521c
   14003bf83:	jmp    0x14003bfb2
   14003bf85:	mov    DWORD PTR [rip+0x19291],eax        # 0x14005521c
   14003bf8b:	cmp    DWORD PTR [rip+0x1928e],0x0        # 0x140055220
   14003bf92:	jne    0x14003bf9d
   14003bf94:	mov    ecx,eax
   14003bf96:	call   QWORD PTR [rip+0x12ac]        # 0x14003d248
   14003bf9c:	int3   
   14003bf9d:	cmp    DWORD PTR [rip+0x19274],0x0        # 0x140055218
   14003bfa4:	jne    0x14003bfb2
   14003bfa6:	call   QWORD PTR [rip+0x12a4]        # 0x14003d250
   14003bfac:	mov    eax,DWORD PTR [rip+0x1926a]        # 0x14005521c
   14003bfb2:	add    rsp,0x20
   14003bfb6:	pop    rdi
   14003bfb7:	ret    
   14003bfb8:	mov    eax,0x5a4d
   14003bfbd:	cmp    WORD PTR [rip+0xfffffffffffc403c],ax        # 0x140000000
   14003bfc4:	je     0x14003bfc9
   14003bfc6:	xor    eax,eax
   14003bfc8:	ret    
   14003bfc9:	movsxd rcx,DWORD PTR [rip+0xfffffffffffc406c]        # 0x14000003c
   14003bfd0:	lea    rax,[rip+0xfffffffffffc4029]        # 0x140000000
   14003bfd7:	add    rcx,rax
   14003bfda:	cmp    DWORD PTR [rcx],0x4550
   14003bfe0:	jne    0x14003bfc6
   14003bfe2:	mov    eax,0x20b
   14003bfe7:	cmp    WORD PTR [rcx+0x18],ax
   14003bfeb:	jne    0x14003bfc6
   14003bfed:	xor    eax,eax
   14003bfef:	cmp    DWORD PTR [rcx+0x84],0xe
   14003bff6:	jbe    0x14003c001
   14003bff8:	cmp    DWORD PTR [rcx+0xf8],eax
   14003bffe:	setne  al
   14003c001:	ret    
   14003c002:	int3   
   14003c003:	int3   
   14003c004:	sub    rsp,0x28
   14003c008:	call   0x14003c17c
   14003c00d:	add    rsp,0x28
   14003c011:	jmp    0x14003be48
   14003c016:	jmp    QWORD PTR [rip+0x11dc]        # 0x14003d1f8
   14003c01c:	jmp    QWORD PTR [rip+0x11de]        # 0x14003d200
   14003c022:	jmp    QWORD PTR [rip+0x11e0]        # 0x14003d208
   14003c028:	jmp    QWORD PTR [rip+0x11e2]        # 0x14003d210
   14003c02e:	jmp    QWORD PTR [rip+0x11e4]        # 0x14003d218
   14003c034:	sub    rsp,0x28
   14003c038:	mov    rax,QWORD PTR [rcx]
   14003c03b:	cmp    DWORD PTR [rax],0xe06d7363
   14003c041:	jne    0x14003c05f
   14003c043:	cmp    DWORD PTR [rax+0x18],0x4
   14003c047:	jne    0x14003c05f
   14003c049:	mov    ecx,DWORD PTR [rax+0x20]
   14003c04c:	lea    eax,[rcx-0x19930520]
   14003c052:	cmp    eax,0x2
   14003c055:	jbe    0x14003c066
   14003c057:	cmp    ecx,0x1994000
   14003c05d:	je     0x14003c066
   14003c05f:	xor    eax,eax
   14003c061:	add    rsp,0x28
   14003c065:	ret    
   14003c066:	call   0x14003c2b4
   14003c06b:	int3   
   14003c06c:	sub    rsp,0x28
   14003c070:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x14003c034
   14003c077:	call   0x14003c2ba
   14003c07c:	xor    eax,eax
   14003c07e:	add    rsp,0x28
   14003c082:	ret    
   14003c083:	int3   
   14003c084:	jmp    QWORD PTR [rip+0x119e]        # 0x14003d228
   14003c08a:	jmp    QWORD PTR [rip+0x11a0]        # 0x14003d230
   14003c090:	xor    eax,eax
   14003c092:	ret    
   14003c093:	int3   
   14003c094:	jmp    QWORD PTR [rip+0x119e]        # 0x14003d238
   14003c09a:	jmp    QWORD PTR [rip+0x11a0]        # 0x14003d240
   14003c0a0:	movsxd r8,DWORD PTR [rcx+0x3c]
   14003c0a4:	xor    r9d,r9d
   14003c0a7:	mov    r10,rdx
   14003c0aa:	add    r8,rcx
   14003c0ad:	movzx  eax,WORD PTR [r8+0x14]
   14003c0b2:	movzx  r11d,WORD PTR [r8+0x6]
   14003c0b7:	add    rax,0x18
   14003c0bb:	add    rax,r8
   14003c0be:	test   r11d,r11d
   14003c0c1:	je     0x14003c0e1
   14003c0c3:	mov    edx,DWORD PTR [rax+0xc]
   14003c0c6:	cmp    r10,rdx
   14003c0c9:	jb     0x14003c0d5
   14003c0cb:	mov    ecx,DWORD PTR [rax+0x8]
   14003c0ce:	add    ecx,edx
   14003c0d0:	cmp    r10,rcx
   14003c0d3:	jb     0x14003c0e3
   14003c0d5:	inc    r9d
   14003c0d8:	add    rax,0x28
   14003c0dc:	cmp    r9d,r11d
   14003c0df:	jb     0x14003c0c3
   14003c0e1:	xor    eax,eax
   14003c0e3:	ret    
   14003c0e4:	int3   
   14003c0e5:	int3   
   14003c0e6:	int3   
   14003c0e7:	int3   
   14003c0e8:	int3   
   14003c0e9:	int3   
   14003c0ea:	int3   
   14003c0eb:	int3   
   14003c0ec:	int3   
   14003c0ed:	int3   
   14003c0ee:	int3   
   14003c0ef:	int3   
   14003c0f0:	mov    QWORD PTR [rsp+0x8],rbx
   14003c0f5:	push   rdi
   14003c0f6:	sub    rsp,0x20
   14003c0fa:	mov    rbx,rcx
   14003c0fd:	lea    rdi,[rip+0xfffffffffffc3efc]        # 0x140000000
   14003c104:	mov    rcx,rdi
   14003c107:	call   0x14003c140
   14003c10c:	test   eax,eax
   14003c10e:	je     0x14003c132
   14003c110:	sub    rbx,rdi
   14003c113:	mov    rdx,rbx
   14003c116:	mov    rcx,rdi
   14003c119:	call   0x14003c0a0
   14003c11e:	test   rax,rax
   14003c121:	je     0x14003c132
   14003c123:	mov    eax,DWORD PTR [rax+0x24]
   14003c126:	shr    eax,0x1f
   14003c129:	not    eax
   14003c12b:	and    eax,0x1
   14003c12e:	jmp    0x14003c132
   14003c130:	xor    eax,eax
   14003c132:	mov    rbx,QWORD PTR [rsp+0x30]
   14003c137:	add    rsp,0x20
   14003c13b:	pop    rdi
   14003c13c:	ret    
   14003c13d:	int3   
   14003c13e:	int3   
   14003c13f:	int3   
   14003c140:	mov    rax,rcx
   14003c143:	mov    ecx,0x5a4d
   14003c148:	cmp    WORD PTR [rax],cx
   14003c14b:	je     0x14003c150
   14003c14d:	xor    eax,eax
   14003c14f:	ret    
   14003c150:	movsxd rcx,DWORD PTR [rax+0x3c]
   14003c154:	add    rcx,rax
   14003c157:	xor    eax,eax
   14003c159:	cmp    DWORD PTR [rcx],0x4550
   14003c15f:	jne    0x14003c16d
   14003c161:	mov    edx,0x20b
   14003c166:	cmp    WORD PTR [rcx+0x18],dx
   14003c16a:	sete   al
   14003c16d:	ret    
   14003c16e:	jmp    QWORD PTR [rip+0x10d4]        # 0x14003d248
   14003c174:	jmp    QWORD PTR [rip+0x10d6]        # 0x14003d250
   14003c17a:	int3   
   14003c17b:	int3   
   14003c17c:	mov    QWORD PTR [rsp+0x20],rbx
   14003c181:	push   rbp
   14003c182:	mov    rbp,rsp
   14003c185:	sub    rsp,0x20
   14003c189:	mov    rax,QWORD PTR [rip+0x17378]        # 0x140053508
   14003c190:	and    QWORD PTR [rbp+0x18],0x0
   14003c195:	movabs rbx,0x2b992ddfa232
   14003c19f:	cmp    rax,rbx
   14003c1a2:	jne    0x14003c213
   14003c1a4:	lea    rcx,[rbp+0x18]
   14003c1a8:	call   QWORD PTR [rip+0xe7a]        # 0x14003d028
   14003c1ae:	mov    rax,QWORD PTR [rbp+0x18]
   14003c1b2:	mov    QWORD PTR [rbp+0x10],rax
   14003c1b6:	call   QWORD PTR [rip+0xe44]        # 0x14003d000
   14003c1bc:	mov    eax,eax
   14003c1be:	xor    QWORD PTR [rbp+0x10],rax
   14003c1c2:	call   QWORD PTR [rip+0xe40]        # 0x14003d008
   14003c1c8:	lea    rcx,[rbp+0x20]
   14003c1cc:	mov    eax,eax
   14003c1ce:	xor    QWORD PTR [rbp+0x10],rax
   14003c1d2:	call   QWORD PTR [rip+0xe38]        # 0x14003d010
   14003c1d8:	mov    eax,DWORD PTR [rbp+0x20]
   14003c1db:	shl    rax,0x20
   14003c1df:	lea    rcx,[rbp+0x10]
   14003c1e3:	xor    rax,QWORD PTR [rbp+0x20]
   14003c1e7:	xor    rax,QWORD PTR [rbp+0x10]
   14003c1eb:	xor    rax,rcx
   14003c1ee:	movabs rcx,0xffffffffffff
   14003c1f8:	and    rax,rcx
   14003c1fb:	movabs rcx,0x2b992ddfa233
   14003c205:	cmp    rax,rbx
   14003c208:	cmove  rax,rcx
   14003c20c:	mov    QWORD PTR [rip+0x172f5],rax        # 0x140053508
   14003c213:	mov    rbx,QWORD PTR [rsp+0x48]
   14003c218:	not    rax
   14003c21b:	mov    QWORD PTR [rip+0x172ee],rax        # 0x140053510
   14003c222:	add    rsp,0x20
   14003c226:	pop    rbp
   14003c227:	ret    
   14003c228:	xor    eax,eax
   14003c22a:	ret    
   14003c22b:	int3   
   14003c22c:	mov    QWORD PTR [rsp+0x8],rbx
   14003c231:	push   rdi
   14003c232:	sub    rsp,0x20
   14003c236:	lea    rbx,[rip+0x945b]        # 0x140045698
   14003c23d:	lea    rdi,[rip+0x9454]        # 0x140045698
   14003c244:	jmp    0x14003c254
   14003c246:	mov    rax,QWORD PTR [rbx]
   14003c249:	test   rax,rax
   14003c24c:	je     0x14003c250
   14003c24e:	call   rax
   14003c250:	add    rbx,0x8
   14003c254:	cmp    rbx,rdi
   14003c257:	jb     0x14003c246
   14003c259:	mov    rbx,QWORD PTR [rsp+0x30]
   14003c25e:	add    rsp,0x20
   14003c262:	pop    rdi
   14003c263:	ret    
   14003c264:	mov    QWORD PTR [rsp+0x8],rbx
   14003c269:	push   rdi
   14003c26a:	sub    rsp,0x20
   14003c26e:	lea    rbx,[rip+0x9433]        # 0x1400456a8
   14003c275:	lea    rdi,[rip+0x942c]        # 0x1400456a8
   14003c27c:	jmp    0x14003c28c
   14003c27e:	mov    rax,QWORD PTR [rbx]
   14003c281:	test   rax,rax
   14003c284:	je     0x14003c288
   14003c286:	call   rax
   14003c288:	add    rbx,0x8
   14003c28c:	cmp    rbx,rdi
   14003c28f:	jb     0x14003c27e
   14003c291:	mov    rbx,QWORD PTR [rsp+0x30]
   14003c296:	add    rsp,0x20
   14003c29a:	pop    rdi
   14003c29b:	ret    
   14003c29c:	jmp    QWORD PTR [rip+0xfb6]        # 0x14003d258
   14003c2a2:	jmp    QWORD PTR [rip+0xfb8]        # 0x14003d260
   14003c2a8:	jmp    QWORD PTR [rip+0xfba]        # 0x14003d268
   14003c2ae:	jmp    QWORD PTR [rip+0xfbc]        # 0x14003d270
   14003c2b4:	jmp    QWORD PTR [rip+0xfd6]        # 0x14003d290
   14003c2ba:	jmp    QWORD PTR [rip+0xfd8]        # 0x14003d298
   14003c2c0:	jmp    QWORD PTR [rip+0xd5a]        # 0x14003d020
   14003c2c6:	jmp    QWORD PTR [rip+0xd4c]        # 0x14003d018
   14003c2cc:	jmp    QWORD PTR [rip+0xd3e]        # 0x14003d010
   14003c2d2:	jmp    QWORD PTR [rip+0xd30]        # 0x14003d008
   14003c2d8:	jmp    QWORD PTR [rip+0xd22]        # 0x14003d000
   14003c2de:	jmp    QWORD PTR [rip+0xd44]        # 0x14003d028
   14003c2e4:	jmp    QWORD PTR [rip+0xfee]        # 0x14003d2d8
   14003c2ea:	jmp    QWORD PTR [rip+0xff0]        # 0x14003d2e0
   14003c2f0:	jmp    QWORD PTR [rip+0xff2]        # 0x14003d2e8
   14003c2f6:	int3   
   14003c2f7:	int3   
   14003c2f8:	int3   
   14003c2f9:	int3   
   14003c2fa:	int3   
   14003c2fb:	int3   
   14003c2fc:	int3   
   14003c2fd:	int3   
   14003c2fe:	int3   
   14003c2ff:	int3   
   14003c300:	rex push rbp
   14003c302:	sub    rsp,0x20
   14003c306:	mov    rbp,rdx
   14003c309:	mov    ecx,0x8
   14003c30e:	call   0x14003c01c
   14003c313:	nop
   14003c314:	add    rsp,0x20
   14003c318:	pop    rbp
   14003c319:	ret    
   14003c31a:	int3   
   14003c31b:	rex push rbp
   14003c31d:	sub    rsp,0x20
   14003c321:	mov    rbp,rdx
   14003c324:	mov    rax,QWORD PTR [rcx]
   14003c327:	mov    rdx,rcx
   14003c32a:	mov    ecx,DWORD PTR [rax]
   14003c32c:	call   0x14003c084
   14003c331:	nop
   14003c332:	add    rsp,0x20
   14003c336:	pop    rbp
   14003c337:	ret    
   14003c338:	int3   
   14003c339:	int3   
   14003c33a:	int3   
   14003c33b:	int3   
   14003c33c:	int3   
   14003c33d:	int3   
   14003c33e:	int3   
   14003c33f:	int3   
   14003c340:	rex push rbp
   14003c342:	sub    rsp,0x20
   14003c346:	mov    rbp,rdx
   14003c349:	mov    rax,QWORD PTR [rcx]
   14003c34c:	xor    ecx,ecx
   14003c34e:	cmp    DWORD PTR [rax],0xc0000005
   14003c354:	sete   cl
   14003c357:	mov    eax,ecx
   14003c359:	add    rsp,0x20
   14003c35d:	pop    rbp
   14003c35e:	ret    
   14003c35f:	int3   

Disassembly of section .rdata:

000000014003d000 <.rdata>:
   14003d000:	shl    BYTE PTR [rbx+0x4],0x0
   14003d007:	add    BYTE PTR [rdx+0x4b3],ch
   14003d00d:	add    BYTE PTR [rax],al
   14003d00f:	add    BYTE PTR [rax+0x4b3],dl
   14003d015:	add    BYTE PTR [rax],al
   14003d017:	add    BYTE PTR [rax+0x4b3],al
   14003d01d:	add    BYTE PTR [rax],al
   14003d01f:	add    BYTE PTR [rax-0x4d],dh
   14003d022:	add    al,0x0
   14003d024:	add    BYTE PTR [rax],al
   14003d026:	add    BYTE PTR [rax],al
   14003d028:	(bad)  
   14003d029:	mov    bl,0x4
	...
   14003d037:	add    BYTE PTR [rax],dl
   14003d039:	mov    al,0x4
   14003d03b:	add    BYTE PTR [rax],al
   14003d03d:	add    BYTE PTR [rax],al
   14003d03f:	add    BYTE PTR [rdx],bl
   14003d041:	mov    al,0x4
   14003d043:	add    BYTE PTR [rax],al
   14003d045:	add    BYTE PTR [rax],al
   14003d047:	add    BYTE PTR [rdx],ah
   14003d049:	mov    al,0x4
   14003d04b:	add    BYTE PTR [rax],al
   14003d04d:	add    BYTE PTR [rax],al
   14003d04f:	add    BYTE PTR [rdx],ch
   14003d051:	mov    al,0x4
   14003d053:	add    BYTE PTR [rax],al
   14003d055:	add    BYTE PTR [rax],al
   14003d057:	add    BYTE PTR [rdx],dh
   14003d059:	mov    al,0x4
   14003d05b:	add    BYTE PTR [rax],al
   14003d05d:	add    BYTE PTR [rax],al
   14003d05f:	add    BYTE PTR [rdx],bh
   14003d061:	mov    al,0x4
   14003d063:	add    BYTE PTR [rax],al
   14003d065:	add    BYTE PTR [rax],al
   14003d067:	add    BYTE PTR [rax+rsi*4+0x4],al
   14003d06b:	add    BYTE PTR [rax],al
   14003d06d:	add    BYTE PTR [rax],al
   14003d06f:	add    BYTE PTR [rsi-0x50],cl
   14003d072:	add    al,0x0
   14003d074:	add    BYTE PTR [rax],al
   14003d076:	add    BYTE PTR [rax],al
   14003d078:	pop    rax
   14003d079:	mov    al,0x4
   14003d07b:	add    BYTE PTR [rax],al
   14003d07d:	add    BYTE PTR [rax],al
   14003d07f:	add    BYTE PTR [rax-0x50],ah
   14003d082:	add    al,0x0
   14003d084:	add    BYTE PTR [rax],al
   14003d086:	add    BYTE PTR [rax],al
   14003d088:	push   0xffffffffffffffb0
   14003d08a:	add    al,0x0
   14003d08c:	add    BYTE PTR [rax],al
   14003d08e:	add    BYTE PTR [rax],al
   14003d090:	jb     0x14003d042
   14003d092:	add    al,0x0
   14003d094:	add    BYTE PTR [rax],al
   14003d096:	add    BYTE PTR [rax],al
   14003d098:	jle    0x14003d04a
   14003d09a:	add    al,0x0
   14003d09c:	add    BYTE PTR [rax],al
   14003d09e:	add    BYTE PTR [rax],al
   14003d0a0:	mov    BYTE PTR [rax+0x4],dh
   14003d0a6:	add    BYTE PTR [rax],al
   14003d0a8:	nop
   14003d0a9:	mov    al,0x4
   14003d0ab:	add    BYTE PTR [rax],al
   14003d0ad:	add    BYTE PTR [rax],al
   14003d0af:	add    BYTE PTR [rdx+0x4b0],bl
   14003d0b5:	add    BYTE PTR [rax],al
   14003d0b7:	add    BYTE PTR [rax+rsi*4+0x4],ah
   14003d0be:	add    BYTE PTR [rax],al
   14003d0c0:	lods   al,BYTE PTR ds:[rsi]
   14003d0c1:	mov    al,0x4
   14003d0c3:	add    BYTE PTR [rax],al
   14003d0c5:	add    BYTE PTR [rax],al
   14003d0c7:	add    BYTE PTR [rax+rsi*4+0x4],dh
   14003d0ce:	add    BYTE PTR [rax],al
   14003d0d0:	mov    esi,0x4b0
   14003d0d5:	add    BYTE PTR [rax],al
   14003d0d7:	add    al,cl
   14003d0d9:	mov    al,0x4
   14003d0db:	add    BYTE PTR [rax],al
   14003d0dd:	add    BYTE PTR [rax],al
   14003d0df:	add    al,dl
   14003d0e1:	mov    al,0x4
   14003d0e3:	add    BYTE PTR [rax],al
   14003d0e5:	add    BYTE PTR [rax],al
   14003d0e7:	add    dl,bl
   14003d0e9:	mov    al,0x4
   14003d0eb:	add    BYTE PTR [rax],al
   14003d0ed:	add    BYTE PTR [rax],al
   14003d0ef:	add    dl,ah
   14003d0f1:	mov    al,0x4
   14003d0f3:	add    BYTE PTR [rax],al
   14003d0f5:	add    BYTE PTR [rax],al
   14003d0f7:	add    al,ch
   14003d0f9:	mov    al,0x4
   14003d0fb:	add    BYTE PTR [rax],al
   14003d0fd:	add    BYTE PTR [rax],al
   14003d0ff:	add    dl,dh
   14003d101:	mov    al,0x4
   14003d103:	add    BYTE PTR [rax],al
   14003d105:	add    BYTE PTR [rax],al
   14003d107:	add    ah,bh
   14003d109:	mov    al,0x4
   14003d10b:	add    BYTE PTR [rax],al
   14003d10d:	add    BYTE PTR [rax],al
   14003d10f:	add    BYTE PTR [rsi],al
   14003d111:	mov    cl,0x4
   14003d113:	add    BYTE PTR [rax],al
   14003d115:	add    BYTE PTR [rax],al
   14003d117:	add    BYTE PTR [rax],dl
   14003d119:	mov    cl,0x4
   14003d11b:	add    BYTE PTR [rax],al
   14003d11d:	add    BYTE PTR [rax],al
   14003d11f:	add    BYTE PTR [rdx],bl
   14003d121:	mov    cl,0x4
   14003d123:	add    BYTE PTR [rax],al
   14003d125:	add    BYTE PTR [rax],al
   14003d127:	add    BYTE PTR [rcx+rsi*4],ah
   14003d12a:	add    al,0x0
   14003d12c:	add    BYTE PTR [rax],al
   14003d12e:	add    BYTE PTR [rax],al
   14003d130:	cs mov cl,0x4
   14003d133:	add    BYTE PTR [rax],al
   14003d135:	add    BYTE PTR [rax],al
   14003d137:	add    BYTE PTR [rsi],dh
   14003d139:	mov    cl,0x4
   14003d13b:	add    BYTE PTR [rax],al
   14003d13d:	add    BYTE PTR [rax],al
   14003d13f:	add    BYTE PTR [rsi],bh
   14003d141:	mov    cl,0x4
   14003d143:	add    BYTE PTR [rax],al
   14003d145:	add    BYTE PTR [rax],al
   14003d147:	add    BYTE PTR [rsi-0x4f],al
   14003d14a:	add    al,0x0
   14003d14c:	add    BYTE PTR [rax],al
   14003d14e:	add    BYTE PTR [rax],al
   14003d150:	push   rax
   14003d151:	mov    cl,0x4
   14003d153:	add    BYTE PTR [rax],al
   14003d155:	add    BYTE PTR [rax],al
   14003d157:	add    BYTE PTR [rax-0x4f],bl
   14003d15a:	add    al,0x0
   14003d15c:	add    BYTE PTR [rax],al
   14003d15e:	add    BYTE PTR [rax],al
   14003d160:	(bad)
   14003d165:	add    BYTE PTR [rax],al
   14003d167:	add    BYTE PTR [rsi],al
   14003d169:	mov    al,0x4
   14003d16b:	add    BYTE PTR [rax],al
   14003d16d:	add    BYTE PTR [rax],al
   14003d16f:	add    BYTE PTR [rsi-0x4f],dh
   14003d172:	add    al,0x0
   14003d174:	add    BYTE PTR [rax],al
   14003d176:	add    BYTE PTR [rax],al
   14003d178:	xor    BYTE PTR [rcx+0x4],0x0
   14003d17f:	add    BYTE PTR [rax+0x4b1],cl
   14003d185:	add    BYTE PTR [rax],al
   14003d187:	add    BYTE PTR [rdx+0x4b1],dl
   14003d18d:	add    BYTE PTR [rax],al
   14003d18f:	add    BYTE PTR [rcx+rsi*4+0x4],bl
   14003d196:	add    BYTE PTR [rax],al
   14003d198:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003d199:	mov    cl,0x4
   14003d19b:	add    BYTE PTR [rax],al
   14003d19d:	add    BYTE PTR [rax],al
   14003d19f:	add    BYTE PTR [rax+0x4b1],dh
   14003d1a5:	add    BYTE PTR [rax],al
   14003d1a7:	add    BYTE PTR [rdx+0x4b1],bh
   14003d1ad:	add    BYTE PTR [rax],al
   14003d1af:	add    dl,al
   14003d1b1:	mov    cl,0x4
   14003d1b3:	add    BYTE PTR [rax],al
   14003d1b5:	add    BYTE PTR [rax],al
   14003d1b7:	add    dl,cl
   14003d1b9:	mov    cl,0x4
   14003d1bb:	add    BYTE PTR [rax],al
   14003d1bd:	add    BYTE PTR [rax],al
   14003d1bf:	add    al,bl
   14003d1c1:	mov    cl,0x4
   14003d1c3:	add    BYTE PTR [rax],al
   14003d1c5:	add    BYTE PTR [rax],al
   14003d1c7:	add    al,ah
   14003d1c9:	mov    cl,0x4
   14003d1cb:	add    BYTE PTR [rax],al
   14003d1cd:	add    BYTE PTR [rax],al
   14003d1cf:	add    dl,ch
   14003d1d1:	mov    cl,0x4
   14003d1d3:	add    BYTE PTR [rax],al
   14003d1d5:	add    BYTE PTR [rax],al
   14003d1d7:	add    dl,dh
   14003d1d9:	mov    cl,0x4
   14003d1db:	add    BYTE PTR [rax],al
   14003d1dd:	add    BYTE PTR [rax],al
   14003d1df:	add    dh,bh
   14003d1e1:	mov    cl,0x4
   14003d1e3:	add    BYTE PTR [rax],al
   14003d1e5:	add    BYTE PTR [rax],al
   14003d1e7:	add    BYTE PTR [rsi],cl
   14003d1e9:	mov    dl,0x4
   14003d1eb:	add    BYTE PTR [rax],al
   14003d1ed:	add    BYTE PTR [rax],al
   14003d1ef:	add    BYTE PTR [rax],bl
   14003d1f1:	mov    dl,0x4
   14003d1f3:	add    BYTE PTR [rax],al
   14003d1f5:	add    BYTE PTR [rax],al
   14003d1f7:	add    BYTE PTR [rdx],dh
   14003d1f9:	mov    dl,0x4
   14003d1fb:	add    BYTE PTR [rax],al
   14003d1fd:	add    BYTE PTR [rax],al
   14003d1ff:	add    BYTE PTR [rdx],bh
   14003d201:	mov    dl,0x4
   14003d203:	add    BYTE PTR [rax],al
   14003d205:	add    BYTE PTR [rax],al
   14003d207:	add    BYTE PTR [rdx+rsi*4+0x4],al
   14003d20b:	add    BYTE PTR [rax],al
   14003d20d:	add    BYTE PTR [rax],al
   14003d20f:	add    BYTE PTR [rdx-0x4e],dl
   14003d212:	add    al,0x0
   14003d214:	add    BYTE PTR [rax],al
   14003d216:	add    BYTE PTR [rax],al
   14003d218:	(bad)  
   14003d219:	mov    dl,0x4
   14003d21b:	add    BYTE PTR [rax],al
   14003d21d:	add    BYTE PTR [rax],al
   14003d21f:	add    BYTE PTR [rax-0x4e],bh
   14003d222:	add    al,0x0
   14003d224:	add    BYTE PTR [rax],al
   14003d226:	add    BYTE PTR [rax],al
   14003d228:	(bad)  
   14003d229:	mov    dl,0x4
   14003d22b:	add    BYTE PTR [rax],al
   14003d22d:	add    BYTE PTR [rax],al
   14003d22f:	add    BYTE PTR [rax+0x4b2],dl
   14003d235:	add    BYTE PTR [rax],al
   14003d237:	add    BYTE PTR [rsi+0x4b2],bl
   14003d23d:	add    BYTE PTR [rax],al
   14003d23f:	add    BYTE PTR [rsi+0x4b2],ch
   14003d245:	add    BYTE PTR [rax],al
   14003d247:	add    al,al
   14003d249:	mov    dl,0x4
   14003d24b:	add    BYTE PTR [rax],al
   14003d24d:	add    BYTE PTR [rax],al
   14003d24f:	add    al,cl
   14003d251:	mov    dl,0x4
   14003d253:	add    BYTE PTR [rax],al
   14003d255:	add    BYTE PTR [rax],al
   14003d257:	add    dl,dl
   14003d259:	mov    dl,0x4
   14003d25b:	add    BYTE PTR [rax],al
   14003d25d:	add    BYTE PTR [rax],al
   14003d25f:	add    al,ch
   14003d261:	mov    dl,0x4
   14003d263:	add    BYTE PTR [rax],al
   14003d265:	add    BYTE PTR [rax],al
   14003d267:	add    ah,bh
   14003d269:	mov    dl,0x4
   14003d26b:	add    BYTE PTR [rax],al
   14003d26d:	add    BYTE PTR [rax],al
   14003d26f:	add    BYTE PTR [rdx],cl
   14003d271:	mov    bl,0x4
   14003d273:	add    BYTE PTR [rax],al
   14003d275:	add    BYTE PTR [rax],al
   14003d277:	add    BYTE PTR [rsi],dl
   14003d279:	mov    bl,0x4
   14003d27b:	add    BYTE PTR [rax],al
   14003d27d:	add    BYTE PTR [rax],al
   14003d27f:	add    BYTE PTR [rdx],ah
   14003d281:	mov    bl,0x4
   14003d283:	add    BYTE PTR [rax],al
   14003d285:	add    BYTE PTR [rax],al
   14003d287:	add    BYTE PTR [rbx+rsi*4],ch
   14003d28a:	add    al,0x0
   14003d28c:	add    BYTE PTR [rax],al
   14003d28e:	add    BYTE PTR [rax],al
   14003d290:	cmp    BYTE PTR [rbx+0x4],dh
   14003d296:	add    BYTE PTR [rax],al
   14003d298:	rex.WR mov bl,0x4
   14003d29b:	add    BYTE PTR [rax],al
   14003d29d:	add    BYTE PTR [rax],al
   14003d29f:	add    dh,bh
   14003d2a1:	scas   eax,DWORD PTR es:[rdi]
   14003d2a2:	add    al,0x0
   14003d2a4:	add    BYTE PTR [rax],al
   14003d2a6:	add    BYTE PTR [rax],al
   14003d2a8:	clc    
   14003d2a9:	scas   eax,DWORD PTR es:[rdi]
   14003d2aa:	add    al,0x0
   14003d2ac:	add    BYTE PTR [rax],al
   14003d2ae:	add    BYTE PTR [rax],al
   14003d2b0:	repnz scas eax,DWORD PTR es:[rdi]
   14003d2b2:	add    al,0x0
   14003d2b4:	add    BYTE PTR [rax],al
   14003d2b6:	add    BYTE PTR [rax],al
   14003d2b8:	call   0x14003d76c
   14003d2bd:	add    BYTE PTR [rax],al
   14003d2bf:	add    dh,bl
   14003d2c1:	scas   eax,DWORD PTR es:[rdi]
   14003d2c2:	add    al,0x0
   14003d2c4:	add    BYTE PTR [rax],al
   14003d2c6:	add    BYTE PTR [rax],al
   14003d2c8:	ins    BYTE PTR es:[rdi],dx
   14003d2c9:	mov    cl,0x4
   14003d2cb:	add    BYTE PTR [rax],al
   14003d2cd:	add    BYTE PTR [rax],al
   14003d2cf:	add    al,dl
   14003d2d1:	scas   eax,DWORD PTR es:[rdi]
   14003d2d2:	add    al,0x0
   14003d2d4:	add    BYTE PTR [rax],al
   14003d2d6:	add    BYTE PTR [rax],al
   14003d2d8:	(bad)  
   14003d2d9:	mov    bl,0x4
   14003d2db:	add    BYTE PTR [rax],al
   14003d2dd:	add    BYTE PTR [rax],al
   14003d2df:	add    BYTE PTR [rax],cl
   14003d2e1:	mov    ah,0x4
   14003d2e3:	add    BYTE PTR [rax],al
   14003d2e5:	add    BYTE PTR [rax],al
   14003d2e7:	add    BYTE PTR [rdx],dl
   14003d2e9:	mov    ah,0x4
	...
   14003d2ff:	add    al,bl
   14003d301:	mov    ebp,0x14003
	...
   14003d316:	add    BYTE PTR [rax],al
   14003d318:	or     BYTE PTR [rbp+0x14003],bh
   14003d31e:	add    BYTE PTR [rax],al
   14003d320:	je     0x14003d2db
   14003d322:	add    eax,DWORD PTR [rax+0x1]
   14003d325:	add    BYTE PTR [rax],al
   14003d327:	add    BYTE PTR [rbx+rdi*4+0x3],ch
   14003d32b:	rex add DWORD PTR [rax],eax
   14003d32e:	add    BYTE PTR [rax],al
   14003d330:	ins    BYTE PTR es:[rdi],dx
   14003d331:	rol    BYTE PTR [rbx],0x40
   14003d334:	add    DWORD PTR [rax],eax
	...
   14003d342:	add    BYTE PTR [rax],al
   14003d344:	cmp    al,0xbe
   14003d346:	enter  0x57,0x0
   14003d34a:	add    BYTE PTR [rax],al
   14003d34c:	add    al,BYTE PTR [rax]
   14003d34e:	add    BYTE PTR [rax],al
   14003d350:	rex.W add BYTE PTR [rax],al
   14003d353:	add    BYTE PTR [rax],dh
   14003d355:	push   rsi
   14003d356:	add    al,0x0
   14003d358:	xor    BYTE PTR [rsi],bh
   14003d35a:	add    al,0x0
   14003d35c:	add    BYTE PTR [rax],al
   14003d35e:	add    BYTE PTR [rax],al
   14003d360:	cmp    al,0xbe
   14003d362:	enter  0x57,0x0
   14003d366:	add    BYTE PTR [rax],al
   14003d368:	or     al,0x0
   14003d36a:	add    BYTE PTR [rax],al
   14003d36c:	adc    al,0x0
   14003d36e:	add    BYTE PTR [rax],al
   14003d370:	js     0x14003d3c8
   14003d372:	add    al,0x0
   14003d374:	js     0x14003d3b4
   14003d376:	add    al,0x0
   14003d378:	je     0x14003d3f1
   14003d37a:	outs   dx,DWORD PTR ds:[rsi]
   14003d37b:	jo     0x14003d3e6
   14003d37d:	add    BYTE PTR [rax],al
   14003d37f:	add    BYTE PTR [rcx],dh
   14003d381:	cmp    BYTE PTR cs:[rsi],ch
   14003d384:	xor    DWORD PTR [rax],esi
   14003d386:	add    BYTE PTR [rax],al
   14003d388:	xor    DWORD PTR [rcx],esi
   14003d38a:	(bad)  
   14003d38b:	xor    dh,BYTE PTR [rsi]
   14003d38d:	(bad)  
   14003d38e:	xor    BYTE PTR [rdx],dh
	...
   14003d398:	jb     0x14003d3fb
   14003d39a:	outs   dx,BYTE PTR ds:[rsi]
   14003d39b:	imul   esi,DWORD PTR [rbx+0x65],0x70
   14003d39f:	add    BYTE PTR [rip+0x666c],ah        # 0x140043a11
   14003d3a5:	add    BYTE PTR [rax],al
   14003d3a7:	add    BYTE PTR [rdx+0x61],dl
   14003d3aa:	outs   dx,BYTE PTR ds:[rsi]
   14003d3ab:	imul   esp,DWORD PTR [rax],0x73
   14003d3ae:	gs jo  0x14003d412
   14003d3b1:	jb     0x14003d414
   14003d3b3:	je     0x14003d41e
   14003d3b5:	outs   dx,DWORD PTR ds:[rsi]
   14003d3b6:	outs   dx,BYTE PTR ds:[rsi]
   14003d3b7:	and    BYTE PTR [rip+0xa662520],bh        # 0x14a69f8dd
   14003d3bd:	add    BYTE PTR [rax],al
   14003d3bf:	add    BYTE PTR [rbx+0x65],al
   14003d3c2:	outs   dx,BYTE PTR ds:[rsi]
   14003d3c3:	je     0x14003d42a
   14003d3c5:	jb     0x14003d3e7
   14003d3c7:	cmp    eax,0xa732520
   14003d3cc:	add    BYTE PTR [rax],al
   14003d3ce:	add    BYTE PTR [rax],al
   14003d3d0:	jnp    0x14003d3e6
   14003d3d2:	scas   al,BYTE PTR es:[rdi]
   14003d3d3:	rex.RXB loope 0x14003d450
   14003d3d6:	xchg   esp,eax
   14003d3d7:	(bad)  
   14003d3d8:	add    BYTE PTR [rax],al
   14003d3da:	add    BYTE PTR [rax],al
   14003d3dc:	add    BYTE PTR [rax],al
   14003d3de:	loopne 0x14003d41f
   14003d3e0:	add    BYTE PTR [rax],al
   14003d3e2:	add    BYTE PTR [rax],al
   14003d3e4:	add    BYTE PTR [rax],al
   14003d3e6:	lock (bad) 
   14003d3e8:	je     0x14003d44b
   14003d3ea:	imul   ebp,DWORD PTR [rax+rsi*2+0x6f],0x7472
   14003d3f2:	add    BYTE PTR [rax],al
   14003d3f4:	add    BYTE PTR [rax],al
   14003d3f6:	add    BYTE PTR [rax],al
   14003d3f8:	push   0x70646165
   14003d3fd:	outs   dx,DWORD PTR ds:[rsi]
   14003d3fe:	jb     0x14003d474
   14003d400:	add    BYTE PTR [rax],al
   14003d402:	add    BYTE PTR [rax],al
   14003d404:	ins    BYTE PTR es:[rdi],dx
   14003d405:	(bad)  
   14003d406:	(bad)  
   14003d407:	gs ins BYTE PTR es:[rdi],dx
   14003d409:	add    BYTE PTR [rax],al
   14003d40b:	add    BYTE PTR [rax],al
   14003d40d:	add    BYTE PTR [rax],al
   14003d40f:	add    BYTE PTR [rdx+0x61],dh
   14003d412:	outs   dx,BYTE PTR ds:[rsi]
   14003d413:	imul   esp,DWORD PTR [rcx+rbp*2+0x72],0x0
   14003d418:	add    BYTE PTR [rax],al
   14003d41a:	add    BYTE PTR [rax],al
   14003d41c:	imul   ebp,DWORD PTR fs:[rbp+0x0],0x746e6563
   14003d424:	gs jb  0x14003d427
   14003d427:	add    BYTE PTR [rdi+0x61],dl
   14003d42a:	jb     0x14003d49a
   14003d42c:	imul   ebp,DWORD PTR [rsi+0x67],0x7073203a
   14003d433:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14003d437:	imul   esp,DWORD PTR [rbp+0x64],0x6e656320
   14003d43e:	je     0x14003d4a5
   14003d440:	jb     0x14003d462
   14003d442:	outs   dx,BYTE PTR ds:[rsi]
   14003d443:	outs   dx,DWORD PTR ds:[rsi]
   14003d444:	fs and BYTE PTR gs:[rdx],ah
   14003d448:	and    eax,0x77202273
   14003d44d:	(bad)  
   14003d44e:	jae    0x14003d470
   14003d450:	outs   dx,BYTE PTR ds:[rsi]
   14003d451:	outs   dx,DWORD PTR ds:[rsi]
   14003d452:	je     0x14003d474
   14003d454:	outs   dx,WORD PTR ds:[rsi]
   14003d456:	jne    0x14003d4c6
   14003d458:	fs add BYTE PTR cs:[rax],al
   14003d45c:	add    BYTE PTR [rax],al
   14003d45e:	add    BYTE PTR [rax],al
   14003d460:	push   rbp
   14003d461:	jae    0x14003d4cc
   14003d463:	outs   dx,BYTE PTR ds:[rsi]
   14003d464:	and    BYTE PTR [ebp+eiz*2+0x66],ah
   14003d469:	(bad)  
   14003d46a:	jne    0x14003d4d8
   14003d46c:	je     0x14003d48e
   14003d46e:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003d471:	movsxd esi,DWORD PTR [rbp+0x6c]
   14003d474:	(bad)  
   14003d475:	je     0x14003d4e0
   14003d477:	outs   dx,DWORD PTR ds:[rsi]
   14003d478:	outs   dx,BYTE PTR ds:[rsi]
   14003d479:	and    BYTE PTR [rsi+0x6f],ah
   14003d47c:	jb     0x14003d49e
   14003d47e:	movsxd esp,DWORD PTR [rbp+0x6e]
   14003d481:	je     0x14003d4e8
   14003d483:	jb     0x14003d48f
	...
   14003d48d:	add    BYTE PTR [rdx+0x40],dl
   14003d490:	jbe    0x14003d501
   14003d492:	jb     0x14003d503
   14003d494:	pop    rdi
   14003d495:	ins    DWORD PTR es:[rdi],dx
   14003d496:	(bad)  
   14003d497:	jb     0x14003d500
   14003d499:	imul   ebp,DWORD PTR [rsi+0x0],0x706573
   14003d4a0:	outs   dx,DWORD PTR ds:[rsi]
   14003d4a1:	jbe    0x14003d508
   14003d4a3:	jb     0x14003d511
   14003d4a5:	(bad)  
   14003d4a6:	jo     0x14003d4c8
   14003d4a8:	pop    rbx
   14003d4a9:	and    eax,0x3a205d64
   14003d4ae:	and    BYTE PTR [rip+0xa64],ah        # 0x14003df18
   14003d4b4:	add    BYTE PTR [rax],al
   14003d4b6:	add    BYTE PTR [rax],al
   14003d4b8:	rex.WRX jne 0x14003d528
   14003d4bb:	(bad)  
   14003d4bc:	gs jb  0x14003d4df
   14003d4bf:	outs   dx,DWORD PTR ds:[rsi]
   14003d4c0:	data16 and BYTE PTR [rcx+0x74],ch
   14003d4c4:	gs jb  0x14003d528
   14003d4c7:	je     0x14003d532
   14003d4c9:	outs   dx,DWORD PTR ds:[rsi]
   14003d4ca:	outs   dx,BYTE PTR ds:[rsi]
   14003d4cb:	jae    0x14003d4ed
   14003d4cd:	cmp    eax,0xa642520
   14003d4d2:	add    BYTE PTR [rax],al
   14003d4d4:	add    BYTE PTR [rax],al
   14003d4d6:	add    BYTE PTR [rax],al
   14003d4d8:	rex.WRX jne 0x14003d548
   14003d4db:	(bad)  
   14003d4dc:	gs jb  0x14003d4ff
   14003d4df:	outs   dx,DWORD PTR ds:[rsi]
   14003d4e0:	data16 and BYTE PTR [rcx+0x6e],ch
   14003d4e4:	movsxd esi,DWORD PTR [rdx+0x65]
   14003d4e7:	(bad)  
   14003d4e8:	jae    0x14003d54f
   14003d4ea:	jae    0x14003d50c
   14003d4ec:	cmp    eax,0xa642520
   14003d4f1:	add    BYTE PTR [rax],al
   14003d4f3:	add    BYTE PTR [rax],al
   14003d4f5:	add    BYTE PTR [rax],al
   14003d4f7:	add    BYTE PTR [rsi+0x6f],ch
   14003d4fa:	jb     0x14003d569
   14003d4fc:	(bad)  
   14003d4fd:	ins    BYTE PTR es:[rdi],dx
   14003d4fe:	imul   edi,DWORD PTR [rdx+0x65],0x0
   14003d505:	add    BYTE PTR [rax],al
   14003d507:	add    BYTE PTR [rdi+0x76],ch
   14003d50a:	gs jb  0x14003d579
   14003d50d:	(bad)  
   14003d50e:	jo     0x14003d510
   14003d510:	jae    0x14003d575
   14003d512:	(bad)  
   14003d513:	ins    BYTE PTR es:[rdi],dx
   14003d514:	add    BYTE PTR gs:[rax],al
   14003d517:	add    BYTE PTR [rbx+0x63],dh
   14003d51a:	(bad)  
   14003d51b:	ins    BYTE PTR es:[rdi],dx
   14003d51c:	imul   ebp,DWORD PTR [rsi+0x67],0x726f5600
   14003d523:	outs   dx,DWORD PTR ds:[rsi]
   14003d524:	outs   dx,BYTE PTR ds:[rsi]
   14003d525:	outs   dx,DWORD PTR ds:[rsi]
   14003d526:	imul   eax,DWORD PTR [rax],0x756a6441
   14003d52c:	jae    0x14003d5a2
   14003d52e:	imul   ebp,DWORD PTR [rsi+0x67],0x646f6e20
   14003d535:	gs jae 0x14003d558
   14003d538:	jne    0x14003d5ad
   14003d53a:	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
   14003d541:	add    BYTE PTR [rax],al
   14003d543:	add    BYTE PTR [rax],al
   14003d545:	add    BYTE PTR [rax],al
   14003d547:	add    BYTE PTR [rcx],ch
   14003d549:	pop    rsp
   14003d54a:	pop    rdx
   14003d54c:	cmc    
   14003d54d:	sub    al,dh
   14003d54f:	(bad)  
   14003d550:	add    BYTE PTR [rax],al
   14003d552:	add    BYTE PTR [rax],al
   14003d554:	add    BYTE PTR [rax],al
   14003d556:	or     BYTE PTR [rax+0x0],al
   14003d559:	add    BYTE PTR [rax],al
   14003d55b:	add    BYTE PTR [rax],al
   14003d55d:	add    BYTE PTR [rax],al
   14003d55f:	add    bh,bh
   14003d561:	(bad)  
   14003d562:	(bad)  
   14003d563:	(bad)  
   14003d564:	(bad)  
   14003d565:	(bad)  
   14003d566:	(bad)  
   14003d567:	jg     0x14003d568
   14003d569:	(bad)  
   14003d56a:	(bad)  
   14003d56b:	(bad)  
   14003d56c:	(bad)  
   14003d56d:	(bad)  
   14003d56e:	(bad)  
   14003d56f:	jg     0x14003d571
   14003d571:	add    BYTE PTR [rax],al
   14003d573:	add    BYTE PTR [rax],al
   14003d575:	add    BYTE PTR [rax],al
   14003d577:	add    BYTE PTR [rax],0x0
   14003d57a:	add    BYTE PTR [rax],al
   14003d57c:	add    BYTE PTR [rax],al
   14003d57e:	add    BYTE PTR [rax+0x61656e5f],al
   14003d584:	je     0x14003d5f5
   14003d586:	pop    rdi
   14003d587:	movsxd esp,DWORD PTR [rbx+0x0]
   14003d58a:	add    BYTE PTR [rax],al
   14003d58c:	jo     0x14003d5ef
   14003d58e:	movsxd ebp,DWORD PTR [rbx+0x0]
   14003d591:	add    BYTE PTR [rax],al
   14003d593:	add    BYTE PTR [rip+0x6d000064],ah        # 0x1ad03d5fd
   14003d599:	outs   dx,DWORD PTR ds:[rsi]
   14003d59a:	fs gs ins BYTE PTR es:[rdi],dx
   14003d59d:	add    BYTE PTR [rax],al
   14003d59f:	add    BYTE PTR [rbx+0x69],ah
   14003d5a2:	jb     0x14003d607
   14003d5a4:	jne    0x14003d60f
   14003d5a6:	je     0x14003d5a8
	...
   14003d5b0:	push   rdi
   14003d5b1:	(bad)  
   14003d5b2:	jb     0x14003d622
   14003d5b4:	imul   ebp,DWORD PTR [rsi+0x67],0x7267203a
   14003d5bb:	(bad)  
   14003d5bc:	jo     0x14003d626
   14003d5be:	and    BYTE PTR [rip+0x73692073],ah        # 0x1b36cf637
   14003d5c4:	and    BYTE PTR [rcx+rbp*2+0x73],ah
   14003d5c8:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003d5cb:	outs   dx,BYTE PTR ds:[rsi]
   14003d5cc:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14003d5d1:	and    BYTE PTR cs:[rcx+0x6e],cl
   14003d5d5:	and    BYTE PTR [rax+rbp*2+0x69],dh
   14003d5d9:	jae    0x14003d5fb
   14003d5db:	movsxd esp,DWORD PTR [rcx+0x73]
   14003d5de:	gs sub al,0x20
   14003d5e1:	je     0x14003d64b
   14003d5e3:	and    BYTE PTR gs:[rbx+0x69],ah
   14003d5e7:	jb     0x14003d64c
   14003d5e9:	jne    0x14003d654
   14003d5eb:	je     0x14003d60d
   14003d5ed:	ins    DWORD PTR es:[rdi],dx
   14003d5ee:	outs   dx,DWORD PTR ds:[rsi]
   14003d5ef:	fs gs ins BYTE PTR es:[rdi],dx
   14003d5f2:	or     al,BYTE PTR [rax]
	...
   14003d600:	imul   esi,DWORD PTR [rbx+0x20],0x65646e75
   14003d607:	imul   bp,WORD PTR [rsi+0x65],0x2064
   14003d60d:	(bad)  
   14003d60e:	outs   dx,BYTE PTR ds:[rsi]
   14003d60f:	and    BYTE PTR fs:[rsi+0x65],ch
   14003d613:	(bad)  
   14003d614:	je     0x14003d685
   14003d616:	and    BYTE PTR [rcx+0x73],ch
   14003d619:	and    BYTE PTR [rdx+0x65],dh
   14003d61c:	jbe    0x14003d683
   14003d61e:	jb     0x14003d694
   14003d620:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
   14003d627:	je     0x14003d691
   14003d629:	and    BYTE PTR gs:[rbx+0x68],dh
   14003d62d:	outs   dx,DWORD PTR ds:[rsi]
   14003d62e:	jb     0x14003d6a4
   14003d630:	gs jae 0x14003d6a7
   14003d633:	and    BYTE PTR [rax+0x61],dh
   14003d636:	je     0x14003d6a0
   14003d638:	and    BYTE PTR [rbp+0x6f],ch
   14003d63b:	fs gs ins BYTE PTR es:[rdi],dx
   14003d63e:	or     al,BYTE PTR cs:[rax]
	...
   14003d64d:	add    BYTE PTR [rax],al
   14003d64f:	add    BYTE PTR [rcx+0x6c],al
   14003d652:	je     0x14003d6b9
   14003d654:	jb     0x14003d6c4
   14003d656:	(bad)  
   14003d657:	je     0x14003d6c2
   14003d659:	jbe    0x14003d6c0
   14003d65b:	ins    BYTE PTR es:[rdi],dx
   14003d65c:	jns    0x14003d68a
   14003d65e:	and    BYTE PTR [rbx+0x6f],ah
   14003d661:	outs   dx,BYTE PTR ds:[rsi]
   14003d662:	jae    0x14003d6cd
   14003d664:	fs gs jb 0x14003d688
   14003d668:	jb     0x14003d6df
   14003d66a:	outs   dx,BYTE PTR ds:[rsi]
   14003d66b:	outs   dx,BYTE PTR ds:[rsi]
   14003d66c:	imul   ebp,DWORD PTR [rsi+0x67],0x61656e20
   14003d673:	je     0x14003d6e4
   14003d675:	and    BYTE PTR [rbp+0x73],dh
   14003d678:	imul   ebp,DWORD PTR [rsi+0x67],0x70472d20
   14003d67f:	(bad)  
   14003d680:	movsxd ebp,DWORD PTR [rbx+0x3d]
   14003d683:	je     0x14003d6f7
   14003d685:	jne    0x14003d6ec
   14003d687:	and    BYTE PTR [rdi+0x72],ch
   14003d68a:	and    BYTE PTR [rbp+riz*2+0x63],ah
   14003d68e:	outs   dx,DWORD PTR ds:[rsi]
   14003d68f:	ins    DWORD PTR es:[rdi],dx
   14003d690:	jo     0x14003d701
   14003d692:	jae    0x14003d6fd
   14003d694:	outs   dx,BYTE PTR ds:[rsi]
   14003d695:	or     al,BYTE PTR [eax]
   14003d698:	je     0x14003d702
   14003d69a:	and    BYTE PTR gs:[rdi+0x72],ah
   14003d69e:	(bad)  
   14003d69f:	jo     0x14003d709
   14003d6a1:	and    BYTE PTR [rcx+0x6e],ch
   14003d6a4:	je     0x14003d715
   14003d6a6:	and    BYTE PTR [rbx+0x6f],ah
   14003d6a9:	outs   dx,BYTE PTR ds:[rsi]
   14003d6aa:	outs   dx,BYTE PTR ds:[rsi]
   14003d6ab:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14003d6b0:	and    BYTE PTR [rbx+0x6f],ah
   14003d6b3:	ins    DWORD PTR es:[rdi],dx
   14003d6b4:	jo     0x14003d725
   14003d6b6:	outs   dx,BYTE PTR ds:[rsi]
   14003d6b7:	outs   dx,BYTE PTR gs:[rsi]
   14003d6b9:	je     0x14003d72e
   14003d6bb:	or     al,BYTE PTR cs:[rax]
   14003d6be:	add    BYTE PTR [rax],al
   14003d6c0:	rex.XB (bad) 
   14003d6c2:	ins    BYTE PTR es:[rdi],dx
   14003d6c3:	movsxd esi,DWORD PTR [rbp+0x6c]
   14003d6c6:	(bad)  
   14003d6c7:	je     0x14003d732
   14003d6c9:	outs   dx,BYTE PTR ds:[rsi]
   14003d6ca:	and    BYTE PTR [ebx+0x69],ah
   14003d6ce:	jb     0x14003d733
   14003d6d0:	jne    0x14003d73b
   14003d6d2:	je     0x14003d6f4
   14003d6d4:	ins    DWORD PTR es:[rdi],dx
   14003d6d5:	outs   dx,DWORD PTR ds:[rsi]
   14003d6d6:	fs gs ins BYTE PTR es:[rdi],dx
   14003d6d9:	or     al,BYTE PTR [rax]
	...
   14003d6e7:	add    BYTE PTR [rax],al
   14003d6ea:	add    BYTE PTR [rax],al
   14003d6ec:	add    BYTE PTR [rax],al
   14003d6ee:	lock mov edi,0x255b2020
   14003d6f4:	jo     0x14003d753
   14003d6f6:	and    BYTE PTR [rip+0x70252070],ah        # 0x1b028f76c
   14003d6fc:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a428f766
   14003d702:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a428f76c
   14003d708:	and    BYTE PTR [rip+0xa66],ah        # 0x14003e174
   14003d70e:	add    BYTE PTR [rax],al
   14003d710:	pop    rbx
   14003d711:	and    eax,0xa5d64
   14003d716:	add    BYTE PTR [rax],al
   14003d718:	or     ch,BYTE PTR [rdx]
   14003d71a:	sub    al,BYTE PTR [rbp+0x52]
   14003d71d:	push   rdx
   14003d71e:	rex.WRXB push r10
   14003d720:	sub    ch,BYTE PTR [rdx]
   14003d722:	or     ah,BYTE PTR [rax]
   14003d724:	jne    0x14003d799
   14003d726:	imul   ebp,DWORD PTR [rsi+0x67],0x6f6f7420
   14003d72d:	and    BYTE PTR [rbp+0x61],ch
   14003d730:	outs   dx,BYTE PTR ds:[rsi]
   14003d731:	jns    0x14003d753
   14003d733:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
   14003d73a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14003d73e:	outs   dx,BYTE PTR ds:[rsi]
   14003d73f:	jae    0x14003d74b
   14003d741:	add    BYTE PTR [rax],al
   14003d743:	add    BYTE PTR [rax],al
   14003d745:	add    BYTE PTR [rax],al
   14003d747:	add    BYTE PTR [rcx+0x6e],cl
   14003d74a:	jae    0x14003d7c1
   14003d74c:	data16 imul sp,WORD PTR [rbx+0x69],0x6e65
   14003d753:	je     0x14003d775
   14003d755:	ins    DWORD PTR es:[rdi],dx
   14003d756:	gs ins DWORD PTR es:[rdi],dx
   14003d758:	outs   dx,DWORD PTR ds:[rsi]
   14003d759:	jb     0x14003d7d4
   14003d75b:	or     al,BYTE PTR [rax]
   14003d75d:	add    BYTE PTR [rax],al
   14003d75f:	add    BYTE PTR [rcx+0x6c],ch
   14003d762:	ins    BYTE PTR es:[rdi],dx
   14003d763:	sub    eax,0x646e6f63
   14003d768:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0xa64656e
	...
   14003d778:	mov    ebx,0xdfd9d7bd
   14003d77d:	jl     0x14003d75a
   14003d77f:	cmp    eax,0xd9d7bdbb
   14003d784:	fistp  QWORD PTR [rbx+rbx*8-0x43]
   14003d788:	or     ch,BYTE PTR [rcx+0x6e]
   14003d78b:	je     0x14003d7f2
   14003d78d:	jb     0x14003d802
   14003d78f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003d794:	outs   dx,BYTE PTR ds:[rsi]
   14003d795:	and    BYTE PTR [rip+0x74612064],ah        # 0x1b464f7ff
   14003d79b:	and    BYTE PTR [rip+0x2066332e],ah        # 0x1606a0acf
   14003d7a1:	and    eax,0xa66332e
   14003d7a6:	add    BYTE PTR [rax],al
   14003d7a8:	jae    0x14003d80f
   14003d7aa:	and    esi,DWORD PTR [ecx]
   14003d7ad:	and    BYTE PTR [rdx],bh
   14003d7af:	and    BYTE PTR [rax],ch
   14003d7b1:	and    eax,0x2c66332e
   14003d7b6:	and    BYTE PTR [rip+0x2966332e],ah        # 0x1696a0aea
   14003d7bc:	and    BYTE PTR [rax],ch
   14003d7be:	and    eax,0x2c66332e
   14003d7c3:	and    BYTE PTR [rip+0x2966332e],ah        # 0x1696a0af7
   14003d7c9:	or     al,BYTE PTR [rax]
   14003d7cb:	add    BYTE PTR [rax],al
   14003d7cd:	add    BYTE PTR [rax],al
   14003d7cf:	add    BYTE PTR [rbx+0x65],dh
   14003d7d2:	and    esi,DWORD PTR [edx]
   14003d7d5:	and    BYTE PTR [rdx],bh
   14003d7d7:	and    BYTE PTR [rax],ch
   14003d7d9:	and    eax,0x2c66332e
   14003d7de:	and    BYTE PTR [rip+0x2966332e],ah        # 0x1696a0b12
   14003d7e4:	and    BYTE PTR [rax],ch
   14003d7e6:	and    eax,0x2c66332e
   14003d7eb:	and    BYTE PTR [rip+0x2966332e],ah        # 0x1696a0b1f
   14003d7f1:	or     al,BYTE PTR [rax]
   14003d7f3:	add    BYTE PTR [rax],al
   14003d7f5:	add    BYTE PTR [rax],al
   14003d7f7:	add    BYTE PTR [rbx+0x61],dh
   14003d7fa:	ins    DWORD PTR es:[rdi],dx
   14003d7fb:	jo     0x14003d869
   14003d7fd:	gs jo  0x14003d86f
   14003d800:	imul   ebp,DWORD PTR [rsi+0x74],0x73
   14003d807:	add    BYTE PTR [rdx+0x6f],ah
   14003d80a:	js     0x14003d80c
   14003d80c:	add    BYTE PTR [rax],al
   14003d80e:	add    BYTE PTR [rax],al
   14003d810:	jo     0x14003d881
   14003d812:	ins    BYTE PTR es:[rdi],dx
   14003d813:	jns    0x14003d87c
   14003d815:	outs   dx,DWORD PTR ds:[rsi]
   14003d816:	outs   dx,BYTE PTR ds:[rsi]
   14003d817:	add    BYTE PTR [rbp+0x61],ch
   14003d81a:	imul   esp,DWORD PTR [rbp+0x50],0x6f
   14003d81e:	ins    BYTE PTR es:[rdi],dx
   14003d81f:	jns    0x14003d85b
   14003d821:	and    BYTE PTR [rbp+0x6e],dh
   14003d824:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14003d828:	outs   dx,BYTE PTR ds:[rsi]
   14003d829:	and    BYTE PTR [rbx+0x68],dh
   14003d82c:	(bad)  
   14003d82d:	jo     0x14003d894
   14003d82f:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14003d833:	and    BYTE PTR gs:[rip+0xa73],ah        # 0x14003e2ad
	...
   14003d846:	sar    BYTE PTR [rdi],1
   14003d848:	sbb    BYTE PTR [rip+0x21fb5444],ch        # 0x161ff2c92
   14003d84e:	or     DWORD PTR [rax+0x63],eax
   14003d851:	add    BYTE PTR [rdx],bh
   14003d853:	add    BYTE PTR [rax+rax*1+0x74],bl
   14003d857:	add    BYTE PTR [rbp+0x0],ah
   14003d85a:	ins    DWORD PTR es:[rdi],dx
   14003d85b:	add    BYTE PTR [rax+0x0],dh
   14003d85e:	pop    rsp
   14003d85f:	add    BYTE PTR [rdx+0x0],ah
   14003d862:	(bad)  
   14003d863:	add    BYTE PTR [rax+rax*1+0x73],dh
   14003d867:	add    BYTE PTR [rbp+0x0],ah
   14003d86a:	jb     0x14003d86c
   14003d86c:	jbe    0x14003d86e
   14003d86e:	add    BYTE PTR gs:[rax+rax*1+0x77],bl
   14003d873:	add    BYTE PTR [rcx+0x0],ch
   14003d876:	outs   dx,BYTE PTR ds:[rsi]
   14003d877:	add    BYTE PTR [rsi],dh
   14003d879:	add    BYTE PTR [rax+rax*1],dh
   14003d87c:	pop    rsp
   14003d87d:	add    BYTE PTR [rdi+0x0],ah
   14003d880:	jb     0x14003d882
   14003d882:	(bad)  
   14003d883:	add    BYTE PTR [rax+0x0],dh
   14003d886:	push   0x69007600
   14003d88b:	add    BYTE PTR [rdx+0x0],bh
   14003d88e:	pop    rsp
   14003d88f:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14003d893:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14003d897:	add    BYTE PTR [rbp+0x0],ah
   14003d89a:	(bad)  
   14003d89b:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14003d89f:	add    BYTE PTR [rax+rax*1+0x6e],bl
   14003d8a3:	add    BYTE PTR [rbp+0x0],ah
   14003d8a6:	(bad)  
   14003d8a7:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14003d8ab:	add    BYTE PTR [rdi+0x0],ah
   14003d8ae:	add    BYTE PTR gs:[rsi+0x0],ch
   14003d8b2:	pop    rsp
   14003d8b3:	add    BYTE PTR [rsi+0x0],ch
   14003d8b6:	add    BYTE PTR gs:[rcx+0x0],ah
   14003d8ba:	je     0x14003d8bc
   14003d8bc:	outs   dx,DWORD PTR ds:[rsi]
   14003d8bd:	add    BYTE PTR [rbx+0x0],dh
   14003d8c0:	jo     0x14003d8c2
   14003d8c2:	ins    BYTE PTR es:[rdi],dx
   14003d8c3:	add    BYTE PTR [rcx+0x0],ch
   14003d8c6:	outs   dx,BYTE PTR ds:[rsi]
   14003d8c7:	add    BYTE PTR [rbp+0x0],ah
   14003d8ca:	jae    0x14003d8cc
   14003d8cc:	add    BYTE PTR cs:[rbx+0x0],ah
	...
   14003d8d8:	(bad)  
   14003d8d9:	add    BYTE PTR [rax],ah
   14003d8db:	add    BYTE PTR [rip+0x20003d00],bh        # 0x1600415e1
   14003d8e1:	add    BYTE PTR [rsi+0x0],ch
   14003d8e4:	add    BYTE PTR [rax],al
   14003d8e6:	add    BYTE PTR [rax],al
   14003d8e8:	jae    0x14003d916
   14003d8ea:	and    eax,0x252c666c
   14003d8ef:	ins    BYTE PTR es:[rdi],dx
   14003d8f0:	and    ax,0x6e
   14003d8f4:	add    BYTE PTR [rax],al
   14003d8f6:	add    BYTE PTR [rax],al
   14003d8f8:	gs sub al,0x25
   14003d8fb:	ins    BYTE PTR es:[rdi],dx
   14003d8fc:	data16 sub al,0x25
   14003d8ff:	ins    BYTE PTR es:[rdi],dx
   14003d900:	and    ax,0x6e
   14003d904:	add    BYTE PTR [rax],al
   14003d906:	add    BYTE PTR [rax],al
   14003d908:	and    eax,0x252c666c
   14003d90d:	ins    BYTE PTR es:[rdi],dx
   14003d90e:	and    ax,0x6e
   14003d912:	add    BYTE PTR [rax],al
   14003d914:	add    BYTE PTR [rax],al
   14003d916:	add    BYTE PTR [rax],al
   14003d918:	jae    0x14003d98a
   14003d91a:	ins    BYTE PTR es:[rdi],dx
   14003d91b:	imul   ebp,DWORD PTR [rsi+0x65],0x6f6e0073
   14003d922:	fs gs jae 0x14003d946
   14003d926:	je     0x14003d997
   14003d928:	jne    0x14003d98d
   14003d92a:	push   0x66202d20
   14003d92f:	(bad)  
   14003d930:	ins    BYTE PTR es:[rdi],dx
   14003d931:	ins    BYTE PTR es:[rdi],dx
   14003d932:	imul   ebp,DWORD PTR [rsi+0x67],0x63616220
   14003d939:	imul   esp,DWORD PTR [rax],0x74
   14003d93c:	outs   dx,DWORD PTR ds:[rsi]
   14003d93d:	and    BYTE PTR [rbx+0x74],dh
   14003d940:	jb     0x14003d9a3
   14003d942:	imul   esp,DWORD PTR [rdi+0x68],0x696c2074
   14003d949:	outs   dx,BYTE PTR ds:[rsi]
   14003d94a:	and    BYTE PTR gs:[rbp+0x64],ah
   14003d94e:	addr32 gs jae 0x14003d95c
   14003d952:	add    BYTE PTR [rax],al
   14003d954:	add    BYTE PTR [rax],al
   14003d956:	add    BYTE PTR [rax],al
   14003d958:	ins    BYTE PTR es:[rdi],dx
   14003d959:	imul   ebp,DWORD PTR [rsi+0x65],0x67657320
   14003d960:	ins    DWORD PTR es:[rdi],dx
   14003d961:	outs   dx,BYTE PTR gs:[rsi]
   14003d963:	je     0x14003d9d8
   14003d965:	add    BYTE PTR [rax],al
   14003d967:	add    BYTE PTR [rbx+0x72],al
   14003d96a:	gs (bad) 
   14003d96c:	je     0x14003d9d7
   14003d96e:	outs   dx,BYTE PTR ds:[rsi]
   14003d96f:	and    BYTE PTR [ebp+0x64],ah
   14003d973:	addr32 gs jae 0x14003d997
   14003d977:	jne    0x14003d9ec
   14003d979:	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
   14003d980:	add    BYTE PTR [rax],al
   14003d982:	add    BYTE PTR [rax],al
   14003d984:	jo     0x14003d9f5
   14003d986:	jae    0x14003d988
   14003d988:	jae    0x14003d9fa
   14003d98a:	ins    BYTE PTR es:[rdi],dx
   14003d98b:	imul   ebp,DWORD PTR [rsi+0x65],0x20732520
   14003d992:	and    eax,0xa73
   14003d997:	add    BYTE PTR [rdx+0x61],dh
   14003d99a:	je     0x14003da05
   14003d99c:	outs   dx,DWORD PTR ds:[rsi]
   14003d99d:	add    BYTE PTR [rax],al
   14003d99f:	add    BYTE PTR [rdi+0x0],ah
   14003d9a2:	sub    eax,0x75003e00
   14003d9a7:	add    BYTE PTR [rsi],ch
   14003d9a9:	add    BYTE PTR [rdx+0x0],ah
   14003d9ac:	(bad)  
   14003d9ad:	add    BYTE PTR [rsi],ch
   14003d9af:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14003d9b3:	add    BYTE PTR [rsi],ch
   14003d9b5:	add    BYTE PTR [rax+0x0],bh
   14003d9b8:	and    BYTE PTR [rax],al
   14003d9ba:	cmp    eax,0x20003d00
   14003d9bf:	add    BYTE PTR [rax],dh
   14003d9c1:	add    BYTE PTR [rax],al
   14003d9c3:	add    BYTE PTR [rax],al
   14003d9c5:	add    BYTE PTR [rax],al
   14003d9c7:	add    BYTE PTR [rdi+0x0],ah
   14003d9ca:	sub    eax,0x75003e00
   14003d9cf:	add    BYTE PTR [rsi],ch
   14003d9d1:	add    BYTE PTR [rdx+0x0],ah
   14003d9d4:	(bad)  
   14003d9d5:	add    BYTE PTR [rsi],ch
   14003d9d7:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14003d9db:	add    BYTE PTR [rsi],ch
   14003d9dd:	add    BYTE PTR [rcx+0x0],bh
   14003d9e0:	and    BYTE PTR [rax],al
   14003d9e2:	cmp    eax,0x20003d00
   14003d9e7:	add    BYTE PTR [rax],dh
   14003d9e9:	add    BYTE PTR [rax],al
   14003d9eb:	add    BYTE PTR [rsi+0x69],ah
   14003d9ee:	ins    BYTE PTR es:[rdi],dx
   14003d9ef:	ins    BYTE PTR es:[rdi],dx
	...
   14003d9f8:	jnp    0x14003da0e
   14003d9fa:	scas   al,BYTE PTR es:[rdi]
   14003d9fb:	rex.RXB loope 0x14003da78
   14003d9fe:	test   BYTE PTR [rdi],bh
   14003da00:	(bad)  
   14003da01:	cdq    
   14003da02:	cdq    
   14003da03:	cdq    
   14003da04:	cdq    
   14003da05:	cdq    
   14003da06:	mov    ecx,0xeb851f3f
   14003da0b:	push   rcx
   14003da0c:	mov    eax,0xcd3fe51e
   14003da11:	int3   
   14003da12:	int3   
   14003da13:	int3   
   14003da14:	int3   
   14003da15:	int3   
   14003da16:	in     al,dx
   14003da17:	(bad)  
   14003da18:	sbb    BYTE PTR [rip+0x21fb5444],ch        # 0x161ff2e62
   14003da1e:	sbb    DWORD PTR [rax+0x0],eax
   14003da21:	add    BYTE PTR [rax],al
   14003da23:	add    BYTE PTR [rax],al
   14003da25:	add    BYTE PTR [rax+rax*2],ah
   14003da28:	add    BYTE PTR [rax],al
   14003da2a:	add    BYTE PTR [rax],al
   14003da2c:	add    BYTE PTR [rax+0x4066],al
   14003da32:	add    BYTE PTR [rax],al
   14003da34:	add    BYTE PTR [rax],al
   14003da36:	cmp    eax,eax
   14003da38:	add    BYTE PTR [rax],al
   14003da3a:	add    BYTE PTR [rax],al
   14003da3c:	add    BYTE PTR [rax+0x2a0ac066],al
   14003da42:	sub    ch,BYTE PTR [rdx]
   14003da44:	rex.RB push r10
   14003da46:	push   rdx
   14003da47:	rex.WRXB push r10
   14003da49:	sub    ch,BYTE PTR [rdx]
   14003da4b:	sub    cl,BYTE PTR [rdx]
   14003da4d:	and    BYTE PTR [rdx+rsi*2+0x79],dh
   14003da51:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
   14003da58:	fs gs ins BYTE PTR es:[rdi],dx
   14003da5b:	gs je  0x14003dac3
   14003da5e:	and    BYTE PTR [rcx+0x20],ah
   14003da61:	outs   dx,BYTE PTR ds:[rsi]
   14003da62:	outs   dx,DWORD PTR ds:[rsi]
   14003da63:	outs   dx,BYTE PTR ds:[rsi]
   14003da64:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14003da68:	or     al,BYTE PTR gs:[rax]
   14003da6b:	add    BYTE PTR [rax],al
   14003da6d:	add    BYTE PTR [rax],al
   14003da6f:	add    BYTE PTR [rbx+0x63],dl
   14003da72:	(bad)  
   14003da73:	outs   dx,BYTE PTR ds:[rsi]
   14003da74:	outs   dx,BYTE PTR ds:[rsi]
   14003da75:	imul   ebp,DWORD PTR [rsi+0x67],0x61726720
   14003da7c:	jo     0x14003dae6
   14003da7e:	and    BYTE PTR [rip+0xa73],ah        # 0x14003e4f7
   14003da84:	add    BYTE PTR [rax],al
   14003da86:	add    BYTE PTR [rax],al
   14003da88:	ins    DWORD PTR es:[rdi],dx
   14003da89:	(bad)  
   14003da8a:	js     0x14003daf5
   14003da8c:	je     0x14003daf3
   14003da8e:	jb     0x14003da90
   14003da90:	rex.R (bad) 
   14003da92:	ins    DWORD PTR es:[rdi],dx
   14003da93:	jo     0x14003dafe
   14003da95:	outs   dx,BYTE PTR ds:[rsi]
   14003da96:	add    BYTE PTR [ebp+eiz*2+0x6e],ch
   14003da9b:	add    BYTE PTR [rax],al
   14003da9d:	add    BYTE PTR [rax],al
   14003da9f:	add    BYTE PTR [rsi+0x65],ch
   14003daa2:	(bad)  
   14003daa3:	je     0x14003db14
   14003daa5:	cmp    ah,BYTE PTR [rax]
   14003daa7:	(bad)
   14003daac:	fs and BYTE PTR gs:[ebp+eiz*2+0x6e],ch
   14003dab3:	and    BYTE PTR [rip+0x6e692066],ah        # 0x1ae6cfb1f
   14003dab9:	and    BYTE PTR [rip+0x67692073],ah        # 0x1a76cfb32
   14003dabf:	outs   dx,BYTE PTR ds:[rsi]
   14003dac0:	outs   dx,DWORD PTR ds:[rsi]
   14003dac1:	jb     0x14003db28
   14003dac3:	or     al,BYTE PTR fs:[rax]
   14003dac6:	add    BYTE PTR [rax],al
   14003dac8:	and    eax,0x252c666c
   14003dacd:	ins    BYTE PTR es:[rdi],dx
   14003dace:	and    ax,0x63
   14003dad2:	add    BYTE PTR [rax],al
   14003dad4:	add    BYTE PTR [rax],al
   14003dad6:	add    BYTE PTR [rax],al
   14003dad8:	outs   dx,BYTE PTR ds:[rsi]
   14003dad9:	outs   dx,DWORD PTR ds:[rsi]
   14003dada:	fs and BYTE PTR gs:[rip+0x70202c73],ah        # 0x1b0240755
   14003dae2:	outs   dx,DWORD PTR ds:[rsi]
   14003dae3:	jae    0x14003db4e
   14003dae5:	je     0x14003db50
   14003dae7:	outs   dx,DWORD PTR ds:[rsi]
   14003dae8:	outs   dx,BYTE PTR ds:[rsi]
   14003dae9:	and    BYTE PTR [rip+0x65202c73],ah        # 0x1a5240762
   14003daef:	js     0x14003db61
   14003daf1:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14003daf6:	and    BYTE PTR [rdi+rsi*2+0x6f],dh
   14003dafa:	and    BYTE PTR [rdi+rbp*2+0x75],ah
   14003dafe:	(bad)  
   14003daff:	ins    BYTE PTR es:[rdi],dx
   14003db00:	gs jae 0x14003db0d
   14003db03:	add    BYTE PTR [rax],al
   14003db05:	add    BYTE PTR [rax],al
   14003db07:	add    BYTE PTR [rbx+0x65],dl
   14003db0a:	je     0x14003db80
   14003db0c:	imul   ebp,DWORD PTR [rsi+0x67],0x696e6920
   14003db13:	je     0x14003db7e
   14003db15:	(bad)  
   14003db16:	ins    BYTE PTR es:[rdi],dx
   14003db17:	and    BYTE PTR [rax+0x6f],dh
   14003db1a:	jae    0x14003db85
   14003db1c:	je     0x14003db87
   14003db1e:	outs   dx,DWORD PTR ds:[rsi]
   14003db1f:	outs   dx,BYTE PTR ds:[rsi]
   14003db20:	jae    0x14003db2c
   14003db22:	add    BYTE PTR [rax],al
   14003db24:	jo     0x14003db8f
   14003db26:	outs   dx,BYTE PTR ds:[rsi]
   14003db27:	add    BYTE PTR [rbx+0x74],dh
   14003db2a:	(bad)  
   14003db2b:	jb     0x14003dba1
   14003db2d:	add    BYTE PTR [rax],al
   14003db2f:	add    BYTE PTR [rdx+0x65],dh
   14003db32:	addr32 jne 0x14003dba1
   14003db35:	(bad)  
   14003db36:	jb     0x14003db38
   14003db38:	and    eax,0x75
   14003db3d:	add    BYTE PTR [rax],al
   14003db3f:	add    BYTE PTR [rbx+0x65],dl
   14003db42:	je     0x14003dbb8
   14003db44:	imul   ebp,DWORD PTR [rsi+0x67],0x20707520
   14003db4b:	jae    0x14003dbbd
   14003db4d:	jb     0x14003dbb8
   14003db4f:	outs   dx,BYTE PTR ds:[rsi]
   14003db50:	and    BYTE PTR [ebp+0x6f],ch
   14003db54:	fs gs ins BYTE PTR es:[rdi],dx
   14003db57:	or     al,BYTE PTR [rax]
   14003db59:	add    BYTE PTR [rax],al
   14003db5b:	add    BYTE PTR [rax],al
   14003db5d:	add    BYTE PTR [rax],al
   14003db5f:	add    BYTE PTR [rbx+0x6f],dl
   14003db62:	ins    BYTE PTR es:[rdi],dx
   14003db63:	jbe    0x14003dbce
   14003db65:	outs   dx,BYTE PTR ds:[rsi]
   14003db66:	and    BYTE PTR [ebp+0x6f],ch
   14003db6a:	fs gs ins BYTE PTR es:[rdi],dx
   14003db6d:	or     al,BYTE PTR [rax]
   14003db6f:	add    BYTE PTR [rip+0x2066332e],ah        # 0x1606a0ea3
   14003db75:	add    BYTE PTR [rax],al
   14003db77:	add    BYTE PTR [rdx],cl
   14003db79:	add    BYTE PTR [rax],al
   14003db7b:	add    BYTE PTR [rax],al
   14003db7d:	add    BYTE PTR [rax],al
   14003db7f:	add    BYTE PTR [rip+0x2e252073],ah        # 0x16e28fbf8
   14003db85:	xor    esp,DWORD PTR [rsi+0xa]
	...
   14003db90:	movsxd eax,DWORD PTR [rax]
   14003db92:	cmp    al,BYTE PTR [rax]
   14003db94:	pop    rsp
   14003db95:	add    BYTE PTR [rax+rax*1+0x65],dh
   14003db99:	add    BYTE PTR [rbp+0x0],ch
   14003db9c:	jo     0x14003db9e
   14003db9e:	pop    rsp
   14003db9f:	add    BYTE PTR [rdx+0x0],ah
   14003dba2:	(bad)  
   14003dba3:	add    BYTE PTR [rax+rax*1+0x73],dh
   14003dba7:	add    BYTE PTR [rbp+0x0],ah
   14003dbaa:	jb     0x14003dbac
   14003dbac:	jbe    0x14003dbae
   14003dbae:	add    BYTE PTR gs:[rax+rax*1+0x77],bl
   14003dbb3:	add    BYTE PTR [rcx+0x0],ch
   14003dbb6:	outs   dx,BYTE PTR ds:[rsi]
   14003dbb7:	add    BYTE PTR [rsi],dh
   14003dbb9:	add    BYTE PTR [rax+rax*1],dh
   14003dbbc:	pop    rsp
   14003dbbd:	add    BYTE PTR [rdi+0x0],ah
   14003dbc0:	jb     0x14003dbc2
   14003dbc2:	(bad)  
   14003dbc3:	add    BYTE PTR [rax+0x0],dh
   14003dbc6:	push   0x69007600
   14003dbcb:	add    BYTE PTR [rdx+0x0],bh
   14003dbce:	pop    rsp
   14003dbcf:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14003dbd3:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14003dbd7:	add    BYTE PTR [rbp+0x0],ah
   14003dbda:	(bad)  
   14003dbdb:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14003dbdf:	add    BYTE PTR [rax+rax*1+0x6e],bl
   14003dbe3:	add    BYTE PTR [rbp+0x0],ah
   14003dbe6:	(bad)  
   14003dbe7:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14003dbeb:	add    BYTE PTR [rdi+0x0],ah
   14003dbee:	add    BYTE PTR gs:[rsi+0x0],ch
   14003dbf2:	pop    rsp
   14003dbf3:	add    BYTE PTR [rbx+0x0],dh
   14003dbf6:	je     0x14003dbf8
   14003dbf8:	jne    0x14003dbfa
   14003dbfa:	data16 add BYTE PTR [rsi+0x0],ah
   14003dbfe:	add    BYTE PTR cs:[rbx+0x0],ah
   14003dc02:	add    BYTE PTR [rax],al
   14003dc04:	add    BYTE PTR [rax],al
   14003dc06:	add    BYTE PTR [rax],al
   14003dc08:	jbe    0x14003dc0a
   14003dc0a:	sub    eax,0x75003e00
   14003dc0f:	add    BYTE PTR [rsi],ch
   14003dc11:	add    BYTE PTR [rax+0x0],ch
   14003dc14:	add    BYTE PTR gs:[rcx+0x0],ah
   14003dc18:	jo     0x14003dc1a
   14003dc1a:	imul   eax,DWORD PTR [rax],0x64006e
   14003dc20:	add    BYTE PTR gs:[rax+0x0],bh
   14003dc24:	and    BYTE PTR [rax],al
   14003dc26:	cmp    al,0x0
   14003dc28:	and    BYTE PTR [rax],al
   14003dc2a:	xor    BYTE PTR [rax],al
   14003dc2c:	add    BYTE PTR [rax],al
   14003dc2e:	add    BYTE PTR [rax],al
   14003dc30:	rex.XB (bad) 
   14003dc32:	ins    BYTE PTR es:[rdi],dx
   14003dc33:	movsxd esi,DWORD PTR [rbp+0x6c]
   14003dc36:	(bad)  
   14003dc37:	je     0x14003dca2
   14003dc39:	outs   dx,BYTE PTR ds:[rsi]
   14003dc3a:	and    BYTE PTR [ebx+0x68],dh
   14003dc3e:	outs   dx,DWORD PTR ds:[rsi]
   14003dc3f:	jb     0x14003dcb5
   14003dc41:	gs jae 0x14003dcb8
   14003dc44:	and    BYTE PTR [rax+0x61],dh
   14003dc47:	je     0x14003dcb1
   14003dc49:	jae    0x14003dc55
   14003dc4b:	add    BYTE PTR [rax],al
   14003dc4d:	add    BYTE PTR [rax],al
   14003dc4f:	add    BYTE PTR [rcx+0x74],ch
   14003dc52:	gs jb  0x14003dcb6
   14003dc55:	je     0x14003dcc0
   14003dc57:	outs   dx,DWORD PTR ds:[rsi]
   14003dc58:	outs   dx,BYTE PTR ds:[rsi]
   14003dc59:	jae    0x14003dc7b
   14003dc5b:	cmp    eax,0x20642520
   14003dc60:	imul   bp,WORD PTR [rsi+0x61],0x206c
   14003dc66:	and    BYTE PTR gs:[rip+0xa662520],bh        # 0x14a6a018d
   14003dc6d:	add    BYTE PTR [rax],al
   14003dc6f:	add    BYTE PTR [rsi+0x147ae147],ch
   14003dc75:	scas   al,BYTE PTR es:[rdi]
   14003dc76:	out    dx,eax
   14003dc77:	(bad)  
   14003dc78:	add    BYTE PTR [rax],al
   14003dc7a:	add    BYTE PTR [rax],al
   14003dc7c:	sar    bh,0xdf
   14003dc7f:	rex je 0x14003dcea
   14003dc82:	imul   esi,DWORD PTR [rbx+0x20],0x7478656e
   14003dc89:	and    BYTE PTR [rax+0x72],dh
   14003dc8c:	gs jbe 0x14003dcaf
   14003dc8f:	jo     0x14003dd00
   14003dc91:	imul   ebp,DWORD PTR [rsi+0x74],0xa
   14003dc98:	and    eax,0x20206433
   14003dc9d:	and    eax,0x20206433
   14003dca2:	and    eax,0x20206433
   14003dca7:	and    BYTE PTR [rax],ah
   14003dca9:	sub    BYTE PTR [rip+0x66252c66],ah        # 0x1a6290915
   14003dcaf:	sub    DWORD PTR [rdx],ecx
   14003dcb1:	add    BYTE PTR [rax],al
   14003dcb3:	add    BYTE PTR [rdx],cl
   14003dcb5:	or     al,BYTE PTR [rax]
   14003dcb7:	add    BYTE PTR [rip+0x66312e34],ah        # 0x1a6350af1
   14003dcbd:	and    BYTE PTR [rax],al
   14003dcbf:	add    BYTE PTR [rcx+rbp*2+0x73],ah
   14003dcc3:	movsxd esp,DWORD PTR [rax]
   14003dcc5:	cmp    eax,0x20662520
   14003dcca:	sub    BYTE PTR [rax],ah
   14003dccc:	cmp    al,0x20
   14003dcce:	xor    BYTE PTR [rcx],ch
   14003dcd0:	or     al,BYTE PTR [rax]
   14003dcd2:	add    BYTE PTR [rax],al
   14003dcd4:	add    BYTE PTR [rax],al
   14003dcd6:	add    BYTE PTR [rax],al
   14003dcd8:	push   rax
   14003dcd9:	(bad)  
   14003dcda:	movsxd ebp,DWORD PTR [rbx+0x69]
   14003dcdd:	outs   dx,BYTE PTR ds:[rsi]
   14003dcde:	cmp    ah,BYTE PTR [eax]
   14003dce1:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14003dce4:	jo     0x14003dd5b
   14003dce6:	je     0x14003dd4d
   14003dce8:	and    BYTE PTR [rdi+0x72],ah
   14003dceb:	imul   esp,DWORD PTR [rax+riz*1+0x73],0xa657a69
   14003dcf3:	add    BYTE PTR [rax],al
   14003dcf5:	add    BYTE PTR [rax],al
   14003dcf7:	add    BYTE PTR [rcx+0x20],ah
   14003dcfa:	and    eax,0x20622066
   14003dcff:	and    eax,0x20632066
   14003dd04:	and    eax,0x20642066
   14003dd09:	and    eax,0x20722066
   14003dd0e:	and    eax,0xa66
   14003dd13:	add    BYTE PTR [rax],al
   14003dd15:	add    BYTE PTR [rax],al
   14003dd17:	add    BYTE PTR [rdx+0x6f],dh
   14003dd1a:	outs   dx,DWORD PTR ds:[rsi]
   14003dd1b:	je     0x14003dd3d
   14003dd1d:	and    eax,0x25282064
   14003dd22:	sub    WORD PTR [rax],sp
   14003dd25:	and    eax,0x25282064
   14003dd2a:	sub    WORD PTR [rdx],cx
   14003dd2d:	add    BYTE PTR [rax],al
   14003dd2f:	add    BYTE PTR [rax],ah
   14003dd31:	jb     0x14003dd64
   14003dd33:	and    BYTE PTR [rip+0x32722066],ah        # 0x17275fd9f
   14003dd39:	and    BYTE PTR [rip+0xa66],ah        # 0x14003e7a5
   14003dd3f:	add    BYTE PTR [rip+0x6f6e2073],ah        # 0x1af71fdb8
   14003dd45:	and    BYTE PTR cs:[rbx+0x65],ah
   14003dd49:	ins    BYTE PTR es:[rdi],dx
   14003dd4a:	ins    BYTE PTR es:[rdi],dx
   14003dd4b:	jae    0x14003dd6d
   14003dd4d:	and    eax,0x20572064
   14003dd52:	and    eax,0x20482064
   14003dd57:	and    eax,0xa64
   14003dd5c:	add    BYTE PTR [rax],al
   14003dd5e:	add    BYTE PTR [rax],al
   14003dd60:	and    BYTE PTR [rax],ah
   14003dd62:	and    eax,0x64252064
   14003dd67:	and    BYTE PTR [rbx+0x65],ah
   14003dd6a:	ins    BYTE PTR es:[rdi],dx
   14003dd6b:	ins    BYTE PTR es:[rdi],dx
   14003dd6c:	or     al,BYTE PTR [rax]
   14003dd6e:	add    BYTE PTR [rax],al
   14003dd70:	movsxd esp,DWORD PTR [rbx+0x20]
   14003dd73:	sub    BYTE PTR [rip+0x65632064],ah        # 0x1a566fddd
   14003dd79:	ins    BYTE PTR es:[rdi],dx
   14003dd7a:	ins    BYTE PTR es:[rdi],dx
   14003dd7b:	jae    0x14003dda6
   14003dd7d:	and    BYTE PTR [rcx+0x74],ah
   14003dd80:	and    BYTE PTR [rax],ch
   14003dd82:	and    eax,0x64252c64
   14003dd87:	sub    DWORD PTR [rdx],ecx
   14003dd89:	add    BYTE PTR [rax],al
   14003dd8b:	add    BYTE PTR [rax],al
   14003dd8d:	add    BYTE PTR [rax],al
   14003dd8f:	add    BYTE PTR [rdx+0x62],ah
   14003dd92:	pop    rbx
   14003dd93:	and    eax,0x25205d73
   14003dd98:	and    BYTE PTR fs:[rip+0x64252064],ah        # 0x1a428fe03
   14003dd9f:	and    BYTE PTR [rip+0xa64],ah        # 0x14003e809
   14003dda5:	add    BYTE PTR [rax],al
   14003dda7:	add    BYTE PTR [rax+0x6f],dh
   14003ddaa:	jae    0x14003de07
   14003ddac:	and    eax,0x25205d64
   14003ddb1:	and    BYTE PTR fs:[rip+0xa64],ah        # 0x14003e81c
   14003ddb8:	add    BYTE PTR [rax],al
   14003ddba:	add    BYTE PTR [rax],al
   14003ddbc:	add    BYTE PTR [rax],al
   14003ddbe:	adc    BYTE PTR [rax+0x0],al
   14003ddc1:	add    BYTE PTR [rax],al
   14003ddc3:	add    BYTE PTR [rcx],al
   14003ddc5:	add    BYTE PTR [rax],al
   14003ddc7:	add    BYTE PTR [rdx],al
   14003ddc9:	add    BYTE PTR [rax],al
   14003ddcb:	add    BYTE PTR [rbx],al
   14003ddcd:	add    BYTE PTR [rax],al
   14003ddcf:	add    BYTE PTR [rdi+0x63],bl
   14003ddd2:	movsxd ebx,DWORD PTR [rdi+0x0]
   14003ddd5:	add    BYTE PTR [rax],al
   14003ddd7:	add    BYTE PTR [rdx+rsi*2+0x75],dh
   14003dddb:	add    BYTE PTR gs:[rax],al
   14003ddde:	add    BYTE PTR [rax],al
   14003dde0:	data16 (bad) 
   14003dde2:	ins    BYTE PTR es:[rdi],dx
   14003dde3:	jae    0x14003de4a
	...
   14003dded:	add    BYTE PTR [rax],al
   14003ddef:	add    BYTE PTR [rsi+0x61],ch
   14003ddf2:	je     0x14003de14
   14003ddf4:	pop    rbx
   14003ddf5:	outs   dx,DWORD PTR ds:[rsi]
   14003ddf6:	jo     0x14003de6c
   14003ddf8:	jae    0x14003de57
   14003ddfa:	and    BYTE PTR [rsi+0x69],ah
   14003ddfd:	ins    BYTE PTR es:[rdi],dx
   14003ddfe:	gs jae 0x14003de0b
   14003de01:	and    BYTE PTR [rax],ah
   14003de03:	sub    eax,0x20202070
   14003de08:	and    BYTE PTR [rax],ah
   14003de0a:	and    BYTE PTR [rax],ah
   14003de0c:	and    BYTE PTR [rax],ah
   14003de0e:	sub    eax,0x6f70202d
   14003de13:	jae    0x14003de89
   14003de15:	jae    0x14003de7a
   14003de17:	jb     0x14003de82
   14003de19:	jo     0x14003de8f
   14003de1b:	and    BYTE PTR [rdi+0x75],ch
   14003de1e:	je     0x14003de90
   14003de20:	jne    0x14003de96
   14003de22:	or     ah,BYTE PTR [rax]
   14003de24:	and    BYTE PTR [rip+0x5d6e5b76],ch        # 0x19d7239a0
   14003de2a:	and    BYTE PTR [rax],ah
   14003de2c:	and    BYTE PTR [rax],ah
   14003de2e:	and    BYTE PTR [rax],ah
   14003de30:	sub    eax,0x6576202d
   14003de35:	jb     0x14003de99
   14003de37:	outs   dx,DWORD PTR ds:[rsi]
   14003de38:	jae    0x14003de9f
   14003de3a:	and    BYTE PTR [rbp+0x6f],ch
   14003de3d:	fs or  ah,BYTE PTR gs:[rax]
   14003de41:	and    BYTE PTR [rip+0x2020203f],ch        # 0x16023fe86
   14003de47:	and    BYTE PTR [rax],ah
   14003de49:	and    BYTE PTR [rax],ah
   14003de4b:	and    BYTE PTR [rax],ah
   14003de4d:	sub    eax,0x7270202d
   14003de52:	imul   ebp,DWORD PTR [rsi+0x74],0x61737520
   14003de59:	or     ah,BYTE PTR gs:[eax]
   14003de5d:	and    BYTE PTR [rip+0x20202043],ch        # 0x16023fea6
   14003de63:	and    BYTE PTR [rax],ah
   14003de65:	and    BYTE PTR [rax],ah
   14003de67:	and    BYTE PTR [rax],ah
   14003de69:	sub    eax,0x7375202d
   14003de6e:	and    BYTE PTR gs:[rbx+0x6f],ah
   14003de72:	outs   dx,BYTE PTR ds:[rsi]
   14003de73:	outs   dx,BYTE PTR ds:[rsi]
   14003de74:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14003de79:	and    BYTE PTR [rbx+0x6f],ah
   14003de7c:	ins    DWORD PTR es:[rdi],dx
   14003de7d:	jo     0x14003deee
   14003de7f:	outs   dx,BYTE PTR ds:[rsi]
   14003de80:	outs   dx,BYTE PTR gs:[rsi]
   14003de82:	je     0x14003def7
   14003de84:	or     ah,BYTE PTR [rax]
   14003de86:	and    BYTE PTR [rip+0x20202053],ch        # 0x16023fedf
   14003de8c:	and    BYTE PTR [rax],ah
   14003de8e:	and    BYTE PTR [rax],ah
   14003de90:	and    BYTE PTR [rax],ah
   14003de92:	sub    eax,0x6973202d
   14003de97:	outs   dx,BYTE PTR ds:[rsi]
   14003de98:	je     0x14003deff
   14003de9a:	jb     0x14003debc
   14003de9c:	ins    DWORD PTR es:[rdi],dx
   14003de9d:	outs   dx,DWORD PTR ds:[rsi]
   14003de9e:	fs or  ah,BYTE PTR gs:[rax]
   14003dea2:	and    BYTE PTR [rip+0x20202047],ch        # 0x16023feef
   14003dea8:	and    BYTE PTR [rax],ah
   14003deaa:	and    BYTE PTR [rax],ah
   14003deac:	and    BYTE PTR [rax],ah
   14003deae:	sub    eax,0x7375202d
   14003deb3:	and    BYTE PTR gs:[rdi+0x72],ah
   14003deb7:	imul   esp,DWORD PTR [rdx+rcx*1+0x20],0x5b412d20
   14003debf:	jae    0x14003df1e
   14003dec1:	and    BYTE PTR [rax],ah
   14003dec3:	and    BYTE PTR [rax],ah
   14003dec5:	and    BYTE PTR [rax],ah
   14003dec7:	sub    eax,0x6461202d
   14003decc:	and    BYTE PTR fs:[rcx+0x72],ah
   14003ded0:	jb     0x14003df41
   14003ded2:	ja     0x14003df47
   14003ded4:	and    BYTE PTR [rdi+0x6e],ch
   14003ded7:	and    BYTE PTR [rcx+rbp*2+0x67],ah
   14003dedb:	jb     0x14003df3e
   14003dedd:	jo     0x14003df47
   14003dedf:	jae    0x14003df0d
   14003dee1:	and    BYTE PTR [rbx+0x63],dh
   14003dee4:	(bad)  
   14003dee5:	ins    BYTE PTR es:[rdi],dx
   14003dee6:	gs and BYTE PTR fs:[rdx+0x79],ah
   14003deeb:	and    BYTE PTR [rbx+0xa],dh
   14003deee:	and    BYTE PTR [rax],ah
   14003def0:	sub    eax,0x65682068
   14003def5:	imul   esp,DWORD PTR [rdi+0x68],0x20202074
   14003defc:	and    BYTE PTR [rax],ah
   14003defe:	and    BYTE PTR [rax],ah
   14003df00:	sub    BYTE PTR [rip+0x200a2964],ah        # 0x1600e086a
   14003df06:	and    BYTE PTR [rip+0x756f206f],ch        # 0x1b572ff7b
   14003df0c:	je     0x14003df74
   14003df0e:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x20202020
   14003df16:	and    BYTE PTR [rax],ch
   14003df18:	cmp    al,0x73
   14003df1a:	je     0x14003df80
   14003df1c:	outs   dx,DWORD PTR ds:[rsi]
   14003df1d:	jne    0x14003df93
   14003df1f:	sub    DWORD PTR ds:[rdx],ecx
   14003df22:	and    BYTE PTR [rax],ah
   14003df24:	sub    eax,0x69772077
   14003df29:	fs je  0x14003df94
   14003df2c:	and    BYTE PTR [rax],ah
   14003df2e:	and    BYTE PTR [rax],ah
   14003df30:	and    BYTE PTR [rax],ah
   14003df32:	and    BYTE PTR [rax],ah
   14003df34:	sub    BYTE PTR [rip+0x200a2964],ah        # 0x1600e089e
   14003df3a:	and    BYTE PTR [rip+0x74732078],ch        # 0x1b476ffb8
   14003df40:	jb     0x14003dfa7
   14003df42:	je     0x14003dfa7
   14003df44:	push   0x2d20200a
   14003df49:	imul   esp,DWORD PTR [rax],0x6c
   14003df4c:	outs   dx,BYTE PTR gs:[rsi]
   14003df4e:	or     ah,BYTE PTR [rax]
   14003df50:	and    BYTE PTR [rip+0x7469206e],ch        # 0x1b46cffc4
   14003df56:	gs jb  0x14003dfba
   14003df59:	je     0x14003dfc4
   14003df5b:	outs   dx,DWORD PTR ds:[rsi]
   14003df5c:	outs   dx,BYTE PTR ds:[rsi]
   14003df5d:	jae    0x14003df7f
   14003df5f:	and    BYTE PTR [rax],ah
   14003df61:	sub    BYTE PTR [rip+0x770a2964],ah        # 0x1b70e08cb
   14003df67:	push   0x20657265
   14003df6c:	and    BYTE PTR fs:[rcx+0x73],ch
   14003df70:	and    BYTE PTR [rcx+rbp*2+0x73],ah
   14003df74:	je     0x14003dfd7
   14003df76:	outs   dx,BYTE PTR ds:[rsi]
   14003df77:	movsxd esp,DWORD PTR [rbp+0x20]
   14003df7a:	(bad)  
   14003df7b:	gs je  0x14003dff5
   14003df7e:	gs outs dx,BYTE PTR gs:[rsi]
   14003df81:	and    BYTE PTR [rax+0x6f],dh
   14003df84:	imul   ebp,DWORD PTR [rsi+0x74],0x6e612073
   14003df8b:	and    BYTE PTR fs:[rax+riz*1+0x69],dh
   14003df90:	jae    0x14003dfb2
   14003df92:	movsxd esi,DWORD PTR [rbp+0x72]
   14003df95:	jb     0x14003dffc
   14003df97:	outs   dx,BYTE PTR ds:[rsi]
   14003df98:	je     0x14003dfba
   14003df9a:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6f697461
   14003dfa2:	outs   dx,BYTE PTR ds:[rsi]
   14003dfa3:	or     al,BYTE PTR [rax]
   14003dfa5:	add    BYTE PTR [rax],al
   14003dfa7:	add    BYTE PTR [rdi+0x0],dh
   14003dfaa:	add    BYTE PTR [rax],al
   14003dfac:	add    BYTE PTR [rax],al
   14003dfae:	add    BYTE PTR [rax],al
   14003dfb0:	outs   dx,BYTE PTR ds:[rsi]
   14003dfb1:	(bad)  
   14003dfb2:	je     0x14003dfee
   14003dfb4:	and    BYTE PTR [rdi+0x70],ch
   14003dfb7:	je     0x14003e022
   14003dfb9:	outs   dx,DWORD PTR ds:[rsi]
   14003dfba:	outs   dx,BYTE PTR ds:[rsi]
   14003dfbb:	and    BYTE PTR [rip+0x75206325],ch        # 0x1b52442e6
   14003dfc1:	outs   dx,BYTE PTR ds:[rsi]
   14003dfc2:	jb     0x14003e029
   14003dfc4:	movsxd ebp,DWORD PTR [rdi+0x67]
   14003dfc7:	outs   dx,BYTE PTR ds:[rsi]
   14003dfc8:	imul   edi,DWORD PTR [rdx+0x65],0xa64
   14003dfcf:	add    BYTE PTR [rbx+0x6f],al
   14003dfd2:	outs   dx,BYTE PTR ds:[rsi]
   14003dfd3:	outs   dx,BYTE PTR ds:[rsi]
   14003dfd4:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14003dfd9:	and    BYTE PTR [rbx+0x6f],ah
   14003dfdc:	ins    DWORD PTR es:[rdi],dx
   14003dfdd:	jo     0x14003e04e
   14003dfdf:	outs   dx,BYTE PTR ds:[rsi]
   14003dfe0:	outs   dx,BYTE PTR gs:[rsi]
   14003dfe2:	je     0x14003e057
   14003dfe4:	and    BYTE PTR [rax],ch
   14003dfe6:	rex.XB sub DWORD PTR [r8],esp
   14003dfe9:	cmp    ah,BYTE PTR [rax]
   14003dfeb:	and    eax,0xa73
   14003dff0:	push   rbx
   14003dff1:	imul   ebp,DWORD PTR [rsi+0x74],0x6d207265
   14003dff8:	outs   dx,DWORD PTR ds:[rsi]
   14003dff9:	fs and BYTE PTR gs:[rax],ch
   14003dffd:	push   rbx
   14003dffe:	sub    DWORD PTR [rax],esp
   14003e000:	cmp    ah,BYTE PTR [rax]
   14003e002:	and    eax,0xa73
   14003e007:	add    BYTE PTR [rdi+0x72],al
   14003e00a:	imul   esp,DWORD PTR [rax+riz*1+0x6d],0x2065646f
   14003e012:	sub    BYTE PTR [rdi+0x29],al
   14003e015:	and    BYTE PTR [rdx],bh
   14003e017:	and    BYTE PTR [rip+0xa73],ah        # 0x14003ea90
   14003e01d:	add    BYTE PTR [rax],al
   14003e01f:	add    BYTE PTR [rsi+0x65],dl
   14003e022:	jb     0x14003e086
   14003e024:	outs   dx,DWORD PTR ds:[rsi]
   14003e025:	jae    0x14003e08c
   14003e027:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14003e02b:	gs ins BYTE PTR es:[rdi],dx
   14003e02d:	and    BYTE PTR [rax],ch
   14003e02f:	jbe    0x14003e05a
   14003e031:	and    BYTE PTR [rdx],bh
   14003e033:	and    BYTE PTR [rip+0x57000a64],ah        # 0x19703ea9d
   14003e039:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x29772820
   14003e041:	and    BYTE PTR [rdx],bh
   14003e043:	and    BYTE PTR [rip+0x48202c66],ah        # 0x188240caf
   14003e049:	imul   esp,DWORD PTR gs:[rdi+0x68],0x68282074
   14003e051:	sub    DWORD PTR [rax],esp
   14003e053:	cmp    ah,BYTE PTR [rax]
   14003e055:	and    eax,0x49202c66
   14003e05a:	je     0x14003e0c1
   14003e05c:	jb     0x14003e0bf
   14003e05e:	je     0x14003e0c9
   14003e060:	outs   dx,DWORD PTR ds:[rsi]
   14003e061:	outs   dx,BYTE PTR ds:[rsi]
   14003e062:	jae    0x14003e084
   14003e064:	sub    BYTE PTR [rsi+0x29],ch
   14003e067:	and    BYTE PTR [rdx],bh
   14003e069:	and    eax,0xa64
   14003e06e:	add    BYTE PTR [rax],al
   14003e070:	rex.WRX jne 0x14003e0e0
   14003e073:	rex.WB je 0x14003e0db
   14003e076:	jb     0x14003e0eb
   14003e078:	and    BYTE PTR [rip+0x2064],ah        # 0x1400400e2
   14003e07e:	add    BYTE PTR [rax],al
   14003e080:	push   rdi
   14003e081:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x20672520
   14003e089:	rex.W
   14003e08a:	imul   esp,DWORD PTR gs:[rdi+0x68],0x67252074
   14003e092:	or     al,BYTE PTR [rax]
   14003e094:	add    BYTE PTR [rax],al
   14003e096:	add    BYTE PTR [rax],al
   14003e098:	rex.XB
   14003e099:	gs ins BYTE PTR es:[rdi],dx
   14003e09b:	ins    BYTE PTR es:[rdi],dx
   14003e09c:	push   rdi
   14003e09d:	and    BYTE PTR [rip+0x65432067],ah        # 0x1a547010a
   14003e0a3:	ins    BYTE PTR es:[rdi],dx
   14003e0a4:	ins    BYTE PTR es:[rdi],dx
   14003e0a5:	rex.W and BYTE PTR [rip+0xa67],spl        # 0x14003eb13
   14003e0ac:	add    BYTE PTR [rax],al
   14003e0ae:	add    BYTE PTR [rax],al
   14003e0b0:	push   rdx
   14003e0b1:	(bad)  
   14003e0b2:	imul   esi,DWORD PTR fs:[rbp+0x73],0x67252032
   14003e0ba:	and    BYTE PTR [rbx+0x70],dl
   14003e0bd:	jb     0x14003e128
   14003e0bf:	outs   dx,BYTE PTR ds:[rsi]
   14003e0c0:	and    BYTE PTR [eip+0x30542067],ah        # 0x17058012e
   14003e0c7:	and    BYTE PTR [rip+0xa67],ah        # 0x14003eb34
   14003e0cd:	add    BYTE PTR [rax],al
   14003e0cf:	add    BYTE PTR [rcx+0x6e],ch
   14003e0d2:	imul   esi,DWORD PTR [rsi+rdx*2+0x61],0x7365756c
   14003e0da:	cmp    ah,BYTE PTR [rax]
   14003e0dc:	push   rdi
   14003e0dd:	and    BYTE PTR [rip+0x20482067],ah        # 0x1604c014a
   14003e0e3:	and    eax,0x204b2067
   14003e0e8:	and    eax,0x30542067
   14003e0ed:	and    BYTE PTR [rip+0xa67],ah        # 0x14003eb5a
	...
   14003e0fb:	add    BYTE PTR [rax],al
   14003e0fd:	add    BYTE PTR [rdx],ah
   14003e0ff:	rex movsxd esp,DWORD PTR [rcx+0x6e]
   14003e103:	outs   dx,BYTE PTR ds:[rsi]
   14003e104:	outs   dx,DWORD PTR ds:[rsi]
   14003e105:	je     0x14003e127
   14003e107:	ins    DWORD PTR es:[rdi],dx
   14003e108:	(bad)  
   14003e109:	ins    BYTE PTR es:[rdi],dx
   14003e10a:	ins    BYTE PTR es:[rdi],dx
   14003e10b:	outs   dx,DWORD PTR ds:[rsi]
   14003e10c:	movsxd esp,DWORD PTR [rax]
   14003e10e:	outs   dx,DWORD PTR ds:[rsi]
   14003e10f:	jo     0x14003e184
   14003e111:	add    BYTE PTR [rax],al
   14003e113:	add    BYTE PTR [rax],al
   14003e115:	add    BYTE PTR [rax],al
   14003e117:	add    BYTE PTR [rbx+0x3a],ah
   14003e11a:	pop    rsp
   14003e11b:	je     0x14003e182
   14003e11d:	ins    DWORD PTR es:[rdi],dx
   14003e11e:	jo     0x14003e17c
   14003e120:	(bad)
   14003e125:	jb     0x14003e19d
   14003e127:	gs pop rsp
   14003e129:	ja     0x14003e194
   14003e12b:	outs   dx,BYTE PTR ds:[rsi]
   14003e12c:	ss xor al,0x5c
   14003e12f:	addr32 jb 0x14003e193
   14003e132:	jo     0x14003e19c
   14003e134:	jbe    0x14003e19f
   14003e136:	jp     0x14003e194
   14003e138:	jo     0x14003e19b
   14003e13a:	je     0x14003e1a4
   14003e13c:	jo     0x14003e1aa
   14003e13e:	(bad)  
   14003e13f:	outs   dx,BYTE PTR ds:[rsi]
   14003e140:	pop    rsp
   14003e141:	jb     0x14003e1b2
   14003e143:	jne    0x14003e1b9
   14003e145:	gs movsxd eax,DWORD PTR cs:[rax]
   14003e149:	add    BYTE PTR [rax],al
   14003e14b:	add    BYTE PTR [rax],al
   14003e14d:	add    BYTE PTR [rax],al
   14003e14f:	add    BYTE PTR [rcx+rbp*2+0x62],ch
   14003e153:	jo     0x14003e1b6
   14003e155:	je     0x14003e1bf
   14003e157:	(bad)  
   14003e158:	and    eax,0x64253a73
   14003e15d:	cmp    ah,BYTE PTR [rax]
   14003e15f:	and    eax,0xa73
   14003e164:	add    BYTE PTR [rax],al
   14003e166:	add    BYTE PTR [rax],al
   14003e168:	movsxd esp,DWORD PTR [rcx+0x6e]
   14003e16b:	outs   dx,BYTE PTR ds:[rsi]
   14003e16c:	outs   dx,DWORD PTR ds:[rsi]
   14003e16d:	je     0x14003e18f
   14003e16f:	jb     0x14003e1d6
   14003e171:	(bad)  
   14003e172:	ins    BYTE PTR es:[rdi],dx
   14003e173:	ins    BYTE PTR es:[rdi],dx
   14003e174:	outs   dx,DWORD PTR ds:[rsi]
   14003e175:	movsxd esp,DWORD PTR [rax]
   14003e177:	outs   dx,DWORD PTR ds:[rsi]
   14003e178:	jo     0x14003e1ed
   14003e17a:	add    BYTE PTR [rax],al
   14003e17c:	add    BYTE PTR [rax],al
   14003e17e:	add    BYTE PTR [rax],al
   14003e180:	(bad)  
   14003e181:	in     eax,dx
   14003e182:	mov    ch,0xa0
   14003e184:	test   esi,0xa9fc3eb0
   14003e18a:	icebp  
   14003e18b:	ror    BYTE PTR [rbp+0x62],cl
   14003e18e:	push   rax
   14003e18f:	(bad)  
   14003e190:	push   rbp
   14003e191:	push   rbp
   14003e192:	push   rbp
   14003e193:	push   rbp
   14003e194:	push   rbp
   14003e195:	push   rbp
   14003e196:	(bad)  
   14003e197:	(bad)  
   14003e198:	jmp    0x13deb02a8
   14003e19d:	(bad)  
   14003e19e:	out    dx,eax
   14003e19f:	(bad)  
   14003e1a0:	add    BYTE PTR [rax],al
   14003e1a2:	add    BYTE PTR [rax],al
   14003e1a4:	add    BYTE PTR [rax],al
   14003e1a6:	sbb    BYTE PTR [rax+0x73],al
   14003e1a9:	outs   dx,DWORD PTR ds:[rsi]
   14003e1aa:	jne    0x14003e21e
   14003e1ac:	movsxd esp,DWORD PTR [rbp+0x20]
   14003e1af:	jo     0x14003e220
   14003e1b1:	imul   ebp,DWORD PTR [rsi+0x74],0x746f6e20
   14003e1b8:	and    BYTE PTR [rcx+0x6e],ch
   14003e1bb:	and    BYTE PTR [rcx+0x6e],ah
   14003e1be:	jns    0x14003e1e0
   14003e1c0:	je     0x14003e234
   14003e1c2:	imul   esp,DWORD PTR [rcx+0x6e],0x656c67
   14003e1c9:	add    BYTE PTR [rax],al
   14003e1cb:	add    BYTE PTR [rax],al
   14003e1cd:	add    BYTE PTR [rax],al
   14003e1cf:	add    BYTE PTR [rbx+0x3a],ah
   14003e1d2:	pop    rsp
   14003e1d3:	je     0x14003e23a
   14003e1d5:	ins    DWORD PTR es:[rdi],dx
   14003e1d6:	jo     0x14003e234
   14003e1d8:	(bad)
   14003e1dd:	jb     0x14003e255
   14003e1df:	gs pop rsp
   14003e1e1:	ja     0x14003e24c
   14003e1e3:	outs   dx,BYTE PTR ds:[rsi]
   14003e1e4:	ss xor al,0x5c
   14003e1e7:	addr32 jb 0x14003e24b
   14003e1ea:	jo     0x14003e254
   14003e1ec:	jbe    0x14003e257
   14003e1ee:	jp     0x14003e24c
   14003e1f0:	jo     0x14003e253
   14003e1f2:	je     0x14003e25c
   14003e1f4:	jo     0x14003e262
   14003e1f6:	(bad)  
   14003e1f7:	outs   dx,BYTE PTR ds:[rsi]
   14003e1f8:	pop    rsp
   14003e1f9:	jae    0x14003e263
   14003e1fb:	outs   dx,DWORD PTR ds:[rsi]
   14003e1fc:	jb     0x14003e272
   14003e1fe:	gs jae 0x14003e275
   14003e201:	movsxd eax,DWORD PTR cs:[rax]
   14003e204:	add    BYTE PTR [rax],al
   14003e206:	add    BYTE PTR [rax],al
   14003e208:	fs gs jae 0x14003e280
   14003e20c:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
   14003e213:	and    BYTE PTR [rax+0x6f],dh
   14003e216:	imul   ebp,DWORD PTR [rsi+0x74],0x746f6e20
   14003e21d:	and    BYTE PTR [rcx+0x6e],ch
   14003e220:	and    BYTE PTR [rcx+0x6e],ah
   14003e223:	jns    0x14003e245
   14003e225:	je     0x14003e299
   14003e227:	imul   esp,DWORD PTR [rcx+0x6e],0x656c67
   14003e22e:	add    BYTE PTR [rax],al
   14003e230:	movsxd esp,DWORD PTR [rcx+0x6e]
   14003e233:	outs   dx,BYTE PTR ds:[rsi]
   14003e234:	outs   dx,DWORD PTR ds:[rsi]
   14003e235:	je     0x14003e257
   14003e237:	imul   bp,WORD PTR [rsi+0x64],0x7420
   14003e23d:	jb     0x14003e2a8
   14003e23f:	(bad)  
   14003e240:	outs   dx,BYTE PTR ds:[rsi]
   14003e241:	ins    BYTE PTR es:[edi],dx
   14003e243:	and    BYTE PTR gs:[rax+0x61],dh
   14003e247:	je     0x14003e2b1
   14003e249:	add    BYTE PTR [rax],al
   14003e24b:	add    BYTE PTR [rax],al
   14003e24d:	add    BYTE PTR [rax],al
   14003e24f:	add    BYTE PTR [rbx+0x61],ah
   14003e252:	outs   dx,BYTE PTR ds:[rsi]
   14003e253:	outs   dx,BYTE PTR ds:[rsi]
   14003e254:	outs   dx,DWORD PTR ds:[rsi]
   14003e255:	je     0x14003e277
   14003e257:	ins    DWORD PTR es:[rdi],dx
   14003e258:	(bad)  
   14003e259:	ins    BYTE PTR es:[rdi],dx
   14003e25a:	ins    BYTE PTR es:[rdi],dx
   14003e25b:	outs   dx,DWORD PTR ds:[rsi]
   14003e25c:	movsxd esp,DWORD PTR [rax]
   14003e25e:	jo     0x14003e2ce
   14003e260:	ins    BYTE PTR es:[rdi],dx
   14003e261:	jae    0x14003e263
   14003e263:	add    BYTE PTR [rax],al
   14003e265:	add    BYTE PTR [rax],al
   14003e267:	add    BYTE PTR [rbx+0x61],ah
   14003e26a:	outs   dx,BYTE PTR ds:[rsi]
   14003e26b:	outs   dx,BYTE PTR ds:[rsi]
   14003e26c:	outs   dx,DWORD PTR ds:[rsi]
   14003e26d:	je     0x14003e28f
   14003e26f:	ins    DWORD PTR es:[rdi],dx
   14003e270:	(bad)  
   14003e271:	ins    BYTE PTR es:[rdi],dx
   14003e272:	ins    BYTE PTR es:[rdi],dx
   14003e273:	outs   dx,DWORD PTR ds:[rsi]
   14003e274:	movsxd esp,DWORD PTR [rax]
   14003e276:	jo     0x14003e2e6
   14003e278:	ins    BYTE PTR es:[rdi],dx
   14003e279:	jo     0x14003e2ee
   14003e27b:	add    BYTE PTR [rax],al
   14003e27d:	add    BYTE PTR [rax],al
   14003e27f:	add    BYTE PTR [rbx+0x61],ah
   14003e282:	outs   dx,BYTE PTR ds:[rsi]
   14003e283:	outs   dx,BYTE PTR ds:[rsi]
   14003e284:	outs   dx,DWORD PTR ds:[rsi]
   14003e285:	je     0x14003e2a7
   14003e287:	jb     0x14003e2ee
   14003e289:	(bad)  
   14003e28a:	ins    BYTE PTR es:[rdi],dx
   14003e28b:	ins    BYTE PTR es:[rdi],dx
   14003e28c:	outs   dx,DWORD PTR ds:[rsi]
   14003e28d:	movsxd esp,DWORD PTR [rax]
   14003e28f:	jo     0x14003e2ff
   14003e291:	ins    BYTE PTR es:[rdi],dx
   14003e292:	jae    0x14003e294
   14003e294:	add    BYTE PTR [rax],al
   14003e296:	add    BYTE PTR [rax],al
   14003e298:	movsxd esp,DWORD PTR [rcx+0x6e]
   14003e29b:	outs   dx,BYTE PTR ds:[rsi]
   14003e29c:	outs   dx,DWORD PTR ds:[rsi]
   14003e29d:	je     0x14003e2bf
   14003e29f:	jb     0x14003e306
   14003e2a1:	(bad)  
   14003e2a2:	ins    BYTE PTR es:[rdi],dx
   14003e2a3:	ins    BYTE PTR es:[rdi],dx
   14003e2a4:	outs   dx,DWORD PTR ds:[rsi]
   14003e2a5:	movsxd esp,DWORD PTR [rax]
   14003e2a7:	jo     0x14003e317
   14003e2a9:	ins    BYTE PTR es:[rdi],dx
   14003e2aa:	jo     0x14003e31f
   14003e2ac:	add    BYTE PTR [rax],al
   14003e2ae:	add    BYTE PTR [rax],al
   14003e2b0:	movsxd esp,DWORD PTR [rcx+0x6e]
   14003e2b3:	outs   dx,BYTE PTR ds:[rsi]
   14003e2b4:	outs   dx,DWORD PTR ds:[rsi]
   14003e2b5:	je     0x14003e2d7
   14003e2b7:	ins    DWORD PTR es:[rdi],dx
   14003e2b8:	(bad)  
   14003e2b9:	ins    BYTE PTR es:[rdi],dx
   14003e2ba:	ins    BYTE PTR es:[rdi],dx
   14003e2bb:	outs   dx,DWORD PTR ds:[rsi]
   14003e2bc:	movsxd esp,DWORD PTR [rax]
   14003e2be:	je     0x14003e332
   14003e2c0:	imul   esi,DWORD PTR [rbx+0x0],0x0
   14003e2c7:	add    BYTE PTR [rbx+0x61],ah
   14003e2ca:	outs   dx,BYTE PTR ds:[rsi]
   14003e2cb:	outs   dx,BYTE PTR ds:[rsi]
   14003e2cc:	outs   dx,DWORD PTR ds:[rsi]
   14003e2cd:	je     0x14003e2ef
   14003e2cf:	jb     0x14003e336
   14003e2d1:	(bad)  
   14003e2d2:	ins    BYTE PTR es:[rdi],dx
   14003e2d3:	ins    BYTE PTR es:[rdi],dx
   14003e2d4:	outs   dx,DWORD PTR ds:[rsi]
   14003e2d5:	movsxd esp,DWORD PTR [rax]
   14003e2d7:	je     0x14003e34b
   14003e2d9:	imul   esi,DWORD PTR [rbx+0x0],0x0
   14003e2e0:	movsxd esp,DWORD PTR [rcx+0x6e]
   14003e2e3:	outs   dx,BYTE PTR ds:[rsi]
   14003e2e4:	outs   dx,DWORD PTR ds:[rsi]
   14003e2e5:	je     0x14003e307
   14003e2e7:	ins    DWORD PTR es:[rdi],dx
   14003e2e8:	(bad)  
   14003e2e9:	ins    BYTE PTR es:[rdi],dx
   14003e2ea:	ins    BYTE PTR es:[rdi],dx
   14003e2eb:	outs   dx,DWORD PTR ds:[rsi]
   14003e2ec:	movsxd esp,DWORD PTR [rax]
   14003e2ee:	fs jno 0x14003e31f
   14003e2f1:	jo     0x14003e361
   14003e2f3:	ins    BYTE PTR es:[rdi],dx
   14003e2f4:	jae    0x14003e2f6
   14003e2f6:	add    BYTE PTR [rax],al
   14003e2f8:	movsxd esp,DWORD PTR [rcx+0x6e]
   14003e2fb:	outs   dx,BYTE PTR ds:[rsi]
   14003e2fc:	outs   dx,DWORD PTR ds:[rsi]
   14003e2fd:	je     0x14003e31f
   14003e2ff:	jb     0x14003e366
   14003e301:	(bad)  
   14003e302:	ins    BYTE PTR es:[rdi],dx
   14003e303:	ins    BYTE PTR es:[rdi],dx
   14003e304:	outs   dx,DWORD PTR ds:[rsi]
   14003e305:	movsxd esp,DWORD PTR [rax]
   14003e307:	fs jno 0x14003e338
   14003e30a:	jo     0x14003e37a
   14003e30c:	ins    BYTE PTR es:[rdi],dx
   14003e30d:	jae    0x14003e30f
   14003e30f:	add    BYTE PTR [rip+0xffffffffe2eb1c43],ch        # 0x122eeff58
   14003e315:	sbb    bh,BYTE PTR ss:[rdi]
   14003e318:	sub    eax,0xe2eb1c43
   14003e31d:	sbb    bh,BYTE PTR ss:[rdi+0x3a0063]
   14003e324:	pop    rsp
   14003e325:	add    BYTE PTR [rax+rax*1+0x65],dh
   14003e329:	add    BYTE PTR [rbp+0x0],ch
   14003e32c:	jo     0x14003e32e
   14003e32e:	pop    rsp
   14003e32f:	add    BYTE PTR [rdx+0x0],ah
   14003e332:	(bad)  
   14003e333:	add    BYTE PTR [rax+rax*1+0x73],dh
   14003e337:	add    BYTE PTR [rbp+0x0],ah
   14003e33a:	jb     0x14003e33c
   14003e33c:	jbe    0x14003e33e
   14003e33e:	add    BYTE PTR gs:[rax+rax*1+0x77],bl
   14003e343:	add    BYTE PTR [rcx+0x0],ch
   14003e346:	outs   dx,BYTE PTR ds:[rsi]
   14003e347:	add    BYTE PTR [rsi],dh
   14003e349:	add    BYTE PTR [rax+rax*1],dh
   14003e34c:	pop    rsp
   14003e34d:	add    BYTE PTR [rdi+0x0],ah
   14003e350:	jb     0x14003e352
   14003e352:	(bad)  
   14003e353:	add    BYTE PTR [rax+0x0],dh
   14003e356:	push   0x69007600
   14003e35b:	add    BYTE PTR [rdx+0x0],bh
   14003e35e:	pop    rsp
   14003e35f:	add    BYTE PTR [rax+0x0],dh
   14003e362:	(bad)  
   14003e363:	add    BYTE PTR [rax+rax*1+0x68],dh
   14003e367:	add    BYTE PTR [rax+0x0],dh
   14003e36a:	ins    BYTE PTR es:[rdi],dx
   14003e36b:	add    BYTE PTR [rcx+0x0],ah
   14003e36e:	outs   dx,BYTE PTR ds:[rsi]
   14003e36f:	add    BYTE PTR [rax+rax*1+0x63],bl
   14003e373:	add    BYTE PTR [rsi+0x0],dh
   14003e376:	je     0x14003e378
   14003e378:	add    BYTE PTR cs:[rbx+0x0],ah
   14003e37c:	add    BYTE PTR [rax],al
   14003e37e:	add    BYTE PTR [rax],al
   14003e380:	push   0x0
   14003e382:	and    BYTE PTR [rax],al
   14003e384:	cmp    eax,0x20003d00
   14003e389:	add    BYTE PTR [rax],dh
   14003e38b:	add    BYTE PTR [rax],al
   14003e38d:	add    BYTE PTR [rax],al
   14003e38f:	add    BYTE PTR [rbx+0x0],ah
   14003e392:	cmp    al,BYTE PTR [rax]
   14003e394:	pop    rsp
   14003e395:	add    BYTE PTR [rax+rax*1+0x65],dh
   14003e399:	add    BYTE PTR [rbp+0x0],ch
   14003e39c:	jo     0x14003e39e
   14003e39e:	pop    rsp
   14003e39f:	add    BYTE PTR [rdx+0x0],ah
   14003e3a2:	(bad)  
   14003e3a3:	add    BYTE PTR [rax+rax*1+0x73],dh
   14003e3a7:	add    BYTE PTR [rbp+0x0],ah
   14003e3aa:	jb     0x14003e3ac
   14003e3ac:	jbe    0x14003e3ae
   14003e3ae:	add    BYTE PTR gs:[rax+rax*1+0x77],bl
   14003e3b3:	add    BYTE PTR [rcx+0x0],ch
   14003e3b6:	outs   dx,BYTE PTR ds:[rsi]
   14003e3b7:	add    BYTE PTR [rsi],dh
   14003e3b9:	add    BYTE PTR [rax+rax*1],dh
   14003e3bc:	pop    rsp
   14003e3bd:	add    BYTE PTR [rdi+0x0],ah
   14003e3c0:	jb     0x14003e3c2
   14003e3c2:	(bad)  
   14003e3c3:	add    BYTE PTR [rax+0x0],dh
   14003e3c6:	push   0x69007600
   14003e3cb:	add    BYTE PTR [rdx+0x0],bh
   14003e3ce:	pop    rsp
   14003e3cf:	add    BYTE PTR [rax+0x0],dh
   14003e3d2:	(bad)  
   14003e3d3:	add    BYTE PTR [rax+rax*1+0x68],dh
   14003e3d7:	add    BYTE PTR [rax+0x0],dh
   14003e3da:	ins    BYTE PTR es:[rdi],dx
   14003e3db:	add    BYTE PTR [rcx+0x0],ah
   14003e3de:	outs   dx,BYTE PTR ds:[rsi]
   14003e3df:	add    BYTE PTR [rax+rax*1+0x75],bl
   14003e3e3:	add    BYTE PTR [rax+rax*1+0x69],dh
   14003e3e7:	add    BYTE PTR [rax+rax*1+0x2e],ch
   14003e3eb:	add    BYTE PTR [rbx+0x0],ah
   14003e3ee:	add    BYTE PTR [rax],al
   14003e3f0:	scas   rax,QWORD PTR es:[rdi]
   14003e3f2:	mov    esp,0x7ad7f29a
   14003e3f7:	ds scas rax,QWORD PTR es:[rdi]
   14003e3fa:	mov    esp,0x7ad7f29a
   14003e3ff:	mov    esi,0x0
   14003e404:	add    BYTE PTR [rax],al
   14003e406:	loopne 0x14003e3c7
   14003e408:	add    BYTE PTR [rax],al
   14003e40a:	add    BYTE PTR [rax],al
   14003e40c:	add    BYTE PTR [rax],al
   14003e40e:	add    al,al
   14003e410:	ins    DWORD PTR es:[rdi],dx
   14003e411:	(bad)  
   14003e412:	jb     0x14003e47b
   14003e414:	imul   ebp,DWORD PTR [rsi+0x0],0x666c2500
   14003e41b:	sub    al,0x25
   14003e41d:	ins    BYTE PTR es:[rdi],dx
   14003e41e:	data16 add BYTE PTR [rip+0x64252c64],ah        # 0x1a4291089
   14003e425:	sub    al,0x25
   14003e427:	fs sub al,0x25
   14003e42a:	and    BYTE PTR fs:[rax],al
   14003e42d:	add    BYTE PTR [rax],al
   14003e42f:	add    BYTE PTR [rdx+0x65],dh
   14003e432:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   14003e436:	add    BYTE PTR [rax],al
   14003e438:	ja     0x14003e4a3
   14003e43a:	fs je  0x14003e4a5
   14003e43d:	add    BYTE PTR [rax],al
   14003e43f:	add    BYTE PTR [rax+0x65],ch
   14003e442:	imul   esp,DWORD PTR [rdi+0x68],0x6c000074
   14003e449:	jo     0x14003e44b
   14003e44b:	add    BYTE PTR [rip+0x64252c64],ah        # 0x1a42910b5
   14003e451:	add    BYTE PTR [rax],al
   14003e453:	add    BYTE PTR [rdx+0x62],ah
   14003e456:	add    BYTE PTR [rax],al
   14003e458:	and    eax,0x66322e
   14003e45d:	add    BYTE PTR [rax],al
   14003e45f:	add    BYTE PTR [rdx+0x65],dh
   14003e462:	movsxd ebp,DWORD PTR [rdi+0x72]
   14003e465:	add    BYTE PTR fs:[rax],al
   14003e468:	and    eax,0x2066332e
   14003e46d:	and    eax,0x66332e
   14003e472:	add    BYTE PTR [rax],al
   14003e474:	add    BYTE PTR [rax],al
   14003e476:	add    BYTE PTR [rax],al
   14003e478:	ins    BYTE PTR es:[rdi],dx
   14003e479:	outs   dx,DWORD PTR ds:[rsi]
   14003e47a:	jae    0x14003e4f0
   14003e47c:	and    BYTE PTR [rbx+0x70],dh
   14003e47f:	ins    BYTE PTR es:[rdi],dx
   14003e480:	imul   ebp,DWORD PTR [rsi+0x65],0x20666f20
   14003e487:	and    eax,0x73252073
   14003e48c:	or     al,BYTE PTR [rax]
   14003e48e:	add    BYTE PTR [rax],al
   14003e490:	jae    0x14003e4be
   14003e492:	and    eax,0x64252c64
   14003e497:	and    BYTE PTR [rax],al
   14003e499:	add    BYTE PTR [rax],al
   14003e49b:	add    BYTE PTR [rax],al
   14003e49d:	add    BYTE PTR [rax],al
   14003e49f:	add    BYTE PTR [rbp+0x2c],ah
   14003e4a2:	and    eax,0x64252c64
   14003e4a7:	and    BYTE PTR [rax],al
   14003e4a9:	add    BYTE PTR [rax],al
   14003e4ab:	add    BYTE PTR [rax],al
   14003e4ad:	add    BYTE PTR [rax],al
   14003e4af:	add    BYTE PTR [rip+0x64252c64],ah        # 0x1a4291119
   14003e4b5:	sub    al,0x25
   14003e4b7:	fs sub al,0x25
   14003e4ba:	add    BYTE PTR fs:[rip+0x25000073],ah        # 0x16503e534
   14003e4c1:	movsxd esp,DWORD PTR [rip+0x73]        # 0x14003e53a
   14003e4c7:	add    BYTE PTR [rdi+0x72],ah
   14003e4ca:	(bad)  
   14003e4cb:	jo     0x14003e535
   14003e4cd:	and    BYTE PTR [rip+0x66332e],ah        # 0x1406a1801
   14003e4d3:	add    BYTE PTR [rax],al
   14003e4d5:	add    BYTE PTR [rax],al
   14003e4d7:	add    BYTE PTR [rsi+0x6f],ch
   14003e4da:	fs and BYTE PTR gs:[rip+0x2073],ah        # 0x140040555
   14003e4e2:	add    BYTE PTR [rax],al
   14003e4e4:	add    BYTE PTR [rax],al
   14003e4e6:	add    BYTE PTR [rax],al
   14003e4e8:	ins    BYTE PTR es:[rdi],dx
   14003e4e9:	imul   esp,DWORD PTR [rdi+0x68],0x65726774
   14003e4f0:	jns    0x14003e4f2
   14003e4f2:	add    BYTE PTR [rax],al
   14003e4f4:	(bad)  
   14003e4f5:	ins    BYTE PTR es:[rdi],dx
   14003e4f6:	(bad)  
   14003e4f7:	movsxd ebp,DWORD PTR [rbx+0x0]
   14003e4fa:	add    BYTE PTR [rax],al
   14003e4fc:	jae    0x14003e56d
   14003e4fe:	ins    BYTE PTR es:[rdi],dx
   14003e4ff:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x0
   14003e507:	add    BYTE PTR [rax],ah
   14003e509:	and    eax,0x2066332e
   14003e50e:	and    eax,0x2066332e
   14003e513:	and    eax,0x73252073
   14003e518:	and    BYTE PTR [rip+0x73252073],ah        # 0x1b3290591
   14003e51e:	and    BYTE PTR [rip+0xa73],ah        # 0x14003ef97
   14003e524:	gs fs and BYTE PTR gs:[eax],al
   14003e52a:	add    BYTE PTR [rax],al
   14003e52c:	and    BYTE PTR [rax],al
   14003e52e:	add    BYTE PTR [rax],al
   14003e530:	and    BYTE PTR [rip+0x25200064],ah        # 0x16523e59a
   14003e536:	jae    0x14003e538
   14003e538:	and    BYTE PTR [rip+0x73252073],ah        # 0x1b32905b1
   14003e53e:	or     al,BYTE PTR [rax]
   14003e540:	jae    0x14003e5b6
   14003e542:	outs   dx,DWORD PTR ds:[rsi]
   14003e543:	jo     0x14003e54f
   14003e545:	add    BYTE PTR [rax],al
   14003e547:	add    BYTE PTR [rax],ah
   14003e549:	and    eax,0x2066332e
   14003e54e:	and    eax,0x66332e
   14003e553:	add    BYTE PTR [rdi+rbp*2+0x63],ch
   14003e557:	(bad)  
   14003e558:	ins    BYTE PTR es:[rdi],dx
   14003e559:	add    BYTE PTR [rax],al
   14003e55b:	add    BYTE PTR [rdi+0x6c],ah
   14003e55e:	outs   dx,DWORD PTR ds:[rsi]
   14003e55f:	(bad)
   14003e564:	outs   dx,BYTE PTR ds:[rsi]
   14003e565:	outs   dx,DWORD PTR ds:[rsi]
   14003e566:	outs   dx,BYTE PTR ds:[rsi]
   14003e567:	add    BYTE PTR gs:[rax],al
   14003e56a:	add    BYTE PTR [rax],al
   14003e56c:	add    BYTE PTR [rax],al
   14003e56e:	add    BYTE PTR [rax],al
   14003e570:	and    eax,0x65762073
   14003e575:	jb     0x14003e5ea
   14003e577:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
   14003e57e:	sub    BYTE PTR [rip+0xa2973],ah        # 0x1400e0ef7
   14003e584:	add    BYTE PTR [rax],al
   14003e586:	add    BYTE PTR [rax],al
   14003e588:	and    eax,0x6f203a73
   14003e58d:	jo     0x14003e603
   14003e58f:	imul   ebp,DWORD PTR [rdi+0x6e],0x63252d20
   14003e596:	and    BYTE PTR [rbp+0x6e],dh
   14003e599:	jb     0x14003e600
   14003e59b:	movsxd ebp,DWORD PTR [rdi+0x67]
   14003e59e:	outs   dx,BYTE PTR ds:[rsi]
   14003e59f:	imul   edi,DWORD PTR [rdx+0x65],0xa64
   14003e5a6:	add    BYTE PTR [rax],al
   14003e5a8:	pop    rsp
   14003e5a9:	rex.WRX add BYTE PTR [rax],r8b
   14003e5ac:	jb     0x14003e5ae
   14003e5ae:	add    BYTE PTR [rax],al
   14003e5b0:	and    eax,0x63203a73
   14003e5b5:	(bad)  
   14003e5b6:	outs   dx,BYTE PTR ds:[rsi]
   14003e5b7:	(bad)  
   14003e5b8:	je     0x14003e5da
   14003e5ba:	outs   dx,DWORD PTR ds:[rsi]
   14003e5bb:	jo     0x14003e622
   14003e5bd:	outs   dx,BYTE PTR ds:[rsi]
   14003e5be:	and    BYTE PTR [rip+0xa73],ah        # 0x14003f037
   14003e5c4:	jae    0x14003e62e
   14003e5c6:	(bad)  
   14003e5c7:	jo     0x14003e62e
   14003e5c9:	add    BYTE PTR [rax],al
   14003e5cb:	add    BYTE PTR [rbx+0x6f],ah
   14003e5ce:	ins    BYTE PTR es:[rdi],dx
   14003e5cf:	outs   dx,DWORD PTR ds:[rsi]
   14003e5d0:	jb     0x14003e5d2
   14003e5d2:	add    BYTE PTR [rax],al
   14003e5d4:	add    BYTE PTR [rax],al
   14003e5d6:	add    BYTE PTR [rax],al
   14003e5d8:	imul   bp,WORD PTR [rsp+rbp*2+0x63],0x6c6f
   14003e5df:	outs   dx,DWORD PTR ds:[rsi]
   14003e5e0:	jb     0x14003e5e2
   14003e5e2:	add    BYTE PTR [rax],al
   14003e5e4:	jae    0x14003e65a
   14003e5e6:	jns    0x14003e654
   14003e5e8:	add    BYTE PTR gs:[rax],al
   14003e5eb:	add    BYTE PTR [rax],al
   14003e5ed:	add    BYTE PTR [rax],al
   14003e5ef:	add    BYTE PTR [rsi+0x6f],ah
   14003e5f2:	outs   dx,BYTE PTR ds:[rsi]
   14003e5f3:	je     0x14003e668
   14003e5f5:	imul   edi,DWORD PTR [rdx+0x65],0x0
   14003e5fc:	add    BYTE PTR [rax],al
   14003e5fe:	add    BYTE PTR [rax],al
   14003e600:	outs   dx,WORD PTR ds:[rsi]
   14003e602:	outs   dx,BYTE PTR ds:[rsi]
   14003e603:	je     0x14003e673
   14003e605:	(bad)  
   14003e606:	ins    DWORD PTR es:[rdi],dx
   14003e607:	add    BYTE PTR gs:[rax],al
   14003e60a:	add    BYTE PTR [rax],al
   14003e60c:	add    BYTE PTR [rax],al
   14003e60e:	add    BYTE PTR [rax],al
   14003e610:	outs   dx,WORD PTR ds:[rsi]
   14003e612:	outs   dx,BYTE PTR ds:[rsi]
   14003e613:	je     0x14003e678
   14003e615:	outs   dx,DWORD PTR ds:[rsi]
   14003e616:	ins    BYTE PTR es:[rdi],dx
   14003e617:	outs   dx,DWORD PTR ds:[rsi]
   14003e618:	jb     0x14003e61a
   14003e61a:	add    BYTE PTR [rax],al
   14003e61c:	add    BYTE PTR [rax],al
   14003e61e:	add    BYTE PTR [rax],al
   14003e620:	jae    0x14003e68a
   14003e622:	outs   dx,DWORD PTR ds:[rsi]
   14003e623:	ja     0x14003e687
   14003e625:	outs   dx,DWORD PTR ds:[rsi]
   14003e626:	js     0x14003e68d
   14003e628:	jae    0x14003e62a
   14003e62a:	add    BYTE PTR [rax],al
   14003e62c:	jae    0x14003e697
   14003e62e:	fs gs jae 0x14003e632
   14003e632:	add    BYTE PTR [rax],al
   14003e634:	add    BYTE PTR [rax],al
   14003e636:	add    BYTE PTR [rax],al
   14003e638:	jo     0x14003e69f
   14003e63a:	jb     0x14003e6a5
   14003e63c:	jo     0x14003e6a6
   14003e63e:	gs jb  0x14003e6aa
   14003e641:	gs jae 0x14003e644
   14003e644:	jae    0x14003e6b1
   14003e646:	gs ja  0x14003e649
   14003e649:	add    BYTE PTR [rax],al
   14003e64b:	add    BYTE PTR [rax],al
   14003e64d:	add    BYTE PTR [rax],al
   14003e64f:	add    BYTE PTR [rdi+0x72],ch
   14003e652:	imul   esp,DWORD PTR [rbp+0x6e],0x69746174
   14003e659:	outs   dx,DWORD PTR ds:[rsi]
   14003e65a:	outs   dx,BYTE PTR ds:[rsi]
   14003e65b:	add    BYTE PTR [rax],al
   14003e65d:	add    BYTE PTR [rax],al
   14003e65f:	add    BYTE PTR [rcx+rbp*2+0x73],ah
   14003e663:	je     0x14003e6d4
   14003e665:	jb     0x14003e6db
   14003e667:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14003e66e:	add    BYTE PTR [rax],al
   14003e670:	imul   di,WORD PTR [rax+0x65],0x7364
   14003e676:	imul   edi,DWORD PTR [rdx+0x65],0x6c000000
   14003e67d:	(bad)  
   14003e67e:	jns    0x14003e6e5
   14003e680:	jb     0x14003e682
   14003e682:	add    BYTE PTR [rax],al
   14003e684:	addr32 jb 0x14003e6f6
   14003e687:	jne    0x14003e6f9
   14003e689:	add    BYTE PTR [rax],al
   14003e68b:	add    BYTE PTR [rax],al
   14003e68d:	add    BYTE PTR [rax],al
   14003e68f:	add    BYTE PTR [rbx+0x6f],ah
   14003e692:	ins    DWORD PTR es:[rdi],dx
   14003e693:	ins    DWORD PTR es:[rdi],dx
   14003e694:	outs   dx,BYTE PTR gs:[rsi]
   14003e696:	je     0x14003e698
   14003e698:	jbe    0x14003e6ff
   14003e69a:	jb     0x14003e710
   14003e69c:	imul   esp,DWORD PTR [rbx+0x65],0x73
   14003e6a3:	add    BYTE PTR [rdx+0x0],bh
   14003e6a6:	add    BYTE PTR [rax],al
   14003e6a8:	ja     0x14003e70f
   14003e6aa:	imul   esp,DWORD PTR [rdi+0x68],0x6c000074
   14003e6b1:	(bad)  
   14003e6b2:	(bad)  
   14003e6b3:	gs ins BYTE PTR es:[rdi],dx
   14003e6b5:	data16 ins BYTE PTR es:[rdi],dx
   14003e6b7:	outs   dx,DWORD PTR ds:[rsi]
   14003e6b8:	(bad)  
   14003e6b9:	je     0x14003e6bb
   14003e6bb:	add    BYTE PTR [rcx+rbp*2+0x72],ah
   14003e6bf:	add    BYTE PTR [rcx+0x72],ah
   14003e6c2:	jb     0x14003e733
   14003e6c4:	ja     0x14003e72e
   14003e6c6:	gs (bad) 
   14003e6c8:	add    BYTE PTR fs:[rax],al
   14003e6cb:	add    BYTE PTR [rax],al
   14003e6cd:	add    BYTE PTR [rax],al
   14003e6cf:	add    BYTE PTR [rcx+0x72],ah
   14003e6d2:	jb     0x14003e743
   14003e6d4:	ja     0x14003e74a
   14003e6d6:	(bad)  
   14003e6d7:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x0
   14003e6df:	add    BYTE PTR [rax+0x65],ch
   14003e6e2:	(bad)  
   14003e6e3:	fs ins BYTE PTR es:[rdi],dx
   14003e6e5:	(bad)  
   14003e6e6:	(bad)  
   14003e6e7:	gs ins BYTE PTR es:[rdi],dx
   14003e6e9:	add    BYTE PTR [rax],al
   14003e6eb:	add    BYTE PTR [rax],al
   14003e6ed:	add    BYTE PTR [rax],al
   14003e6ef:	add    BYTE PTR [rcx+riz*2+0x69],dh
   14003e6f3:	ins    BYTE PTR es:[rdi],dx
   14003e6f4:	ins    BYTE PTR es:[rdi],dx
   14003e6f5:	(bad)  
   14003e6f6:	(bad)  
   14003e6f7:	gs ins BYTE PTR es:[rdi],dx
   14003e6f9:	add    BYTE PTR [rax],al
   14003e6fb:	add    BYTE PTR [rax],al
   14003e6fd:	add    BYTE PTR [rax],al
   14003e6ff:	add    BYTE PTR [rcx+riz*2+0x62],ch
   14003e703:	gs ins BYTE PTR es:[rdi],dx
   14003e705:	outs   dx,WORD PTR ds:[rsi]
   14003e707:	outs   dx,BYTE PTR ds:[rsi]
   14003e708:	je     0x14003e77d
   14003e70a:	imul   edi,DWORD PTR [rdx+0x65],0x6c000000
   14003e711:	(bad)  
   14003e712:	(bad)  
   14003e713:	gs ins BYTE PTR es:[rdi],dx
   14003e715:	outs   dx,WORD PTR ds:[rsi]
   14003e717:	outs   dx,BYTE PTR ds:[rsi]
   14003e718:	je     0x14003e788
   14003e71a:	(bad)  
   14003e71b:	ins    DWORD PTR es:[rdi],dx
   14003e71c:	add    BYTE PTR gs:[rax],al
   14003e71f:	add    BYTE PTR [rcx+riz*2+0x62],ch
   14003e723:	gs ins BYTE PTR es:[rdi],dx
   14003e725:	outs   dx,WORD PTR ds:[rsi]
   14003e727:	outs   dx,BYTE PTR ds:[rsi]
   14003e728:	je     0x14003e78d
   14003e72a:	outs   dx,DWORD PTR ds:[rsi]
   14003e72b:	ins    BYTE PTR es:[rdi],dx
   14003e72c:	outs   dx,DWORD PTR ds:[rsi]
   14003e72d:	jb     0x14003e72f
   14003e72f:	add    BYTE PTR [rcx+riz*2+0x62],ch
   14003e733:	gs ins BYTE PTR es:[rdi],dx
   14003e735:	imul   esi,DWORD PTR fs:[rbx+0x74],0x65636e61
   14003e73d:	add    BYTE PTR [rax],al
   14003e73f:	add    BYTE PTR [rcx+riz*2+0x62],ch
   14003e743:	gs ins BYTE PTR es:[rdi],dx
   14003e745:	(bad)  
   14003e746:	outs   dx,BYTE PTR ds:[rsi]
   14003e747:	ins    BYTE PTR es:[edi],dx
   14003e749:	add    BYTE PTR gs:[rax],al
   14003e74c:	ins    DWORD PTR es:[rdi],dx
   14003e74d:	imul   ebp,DWORD PTR [rsi+0x6c],0x6e65
   14003e754:	add    BYTE PTR [rax],al
   14003e756:	add    BYTE PTR [rax],al
   14003e758:	fs movsxd ebp,DWORD PTR gs:[rdi+0x72]
   14003e75d:	(bad)  
   14003e75e:	je     0x14003e7c5
	...
   14003e768:	(bad)  
   14003e769:	jb     0x14003e7dd
   14003e76b:	outs   dx,DWORD PTR ds:[rsi]
   14003e76c:	ja     0x14003e7e1
   14003e76e:	imul   edi,DWORD PTR [rdx+0x65],0x0
   14003e775:	add    BYTE PTR [rax],al
   14003e777:	add    BYTE PTR [rbx+0x6f],ah
   14003e77a:	outs   dx,BYTE PTR ds:[rsi]
   14003e77b:	jae    0x14003e7f1
   14003e77d:	jb     0x14003e7e0
   14003e77f:	imul   ebp,DWORD PTR [rsi+0x74],0x0
   14003e786:	add    BYTE PTR [rax],al
   14003e788:	je     0x14003e7eb
   14003e78a:	imul   ebp,DWORD PTR [rbx+riz*2+0x6c],0x7069
   14003e792:	add    BYTE PTR [rax],al
   14003e794:	add    BYTE PTR [rax],al
   14003e796:	add    BYTE PTR [rax],al
   14003e798:	push   0x63646165
   14003e79d:	ins    BYTE PTR es:[rdi],dx
   14003e79e:	imul   esi,DWORD PTR [rax+0x0],0x0
   14003e7a5:	add    BYTE PTR [rax],al
   14003e7a7:	add    BYTE PTR [rsi+0x6f],ah
   14003e7aa:	outs   dx,BYTE PTR ds:[rsi]
   14003e7ab:	je     0x14003e81d
   14003e7ad:	(bad)  
   14003e7ae:	je     0x14003e818
	...
   14003e7b8:	rex.R
   14003e7b9:	rex.WRXB push r12
   14003e7bb:	rex.RX
   14003e7bc:	rex.WRXB
   14003e7bd:	rex.WRX push rsp
   14003e7bf:	push   rax
   14003e7c0:	push   r12
   14003e7c2:	rex.W add BYTE PTR [rax],al
   14003e7c5:	add    BYTE PTR [rax],al
   14003e7c7:	add    BYTE PTR [rdi+0x44],al
   14003e7ca:	rex.RX
   14003e7cb:	rex.WRXB
   14003e7cc:	rex.WRX push rsp
   14003e7ce:	push   rax
   14003e7cf:	push   r12
   14003e7d1:	cmp    rax,0x0
   14003e7d7:	add    BYTE PTR [rcx+0x75],dh
   14003e7da:	(bad)  
   14003e7db:	outs   dx,BYTE PTR ds:[rsi]
   14003e7dc:	je     0x14003e853
   14003e7de:	ins    DWORD PTR es:[rdi],dx
   14003e7df:	add    BYTE PTR [rdx+rdx*2+0x0],cl
   14003e7e3:	add    BYTE PTR [rax],al
   14003e7e5:	add    BYTE PTR [rax],al
   14003e7e7:	add    BYTE PTR [rsi+0x6f],ch
   14003e7ea:	fs gs jae 0x14003e853
   14003e7ee:	jo     0x14003e7f0
   14003e7f0:	gs jno 0x14003e868
   14003e7f3:	(bad)  
   14003e7f4:	ins    BYTE PTR es:[rdi],dx
   14003e7f5:	ins    BYTE PTR es:[rdi],dx
   14003e7f6:	jns    0x14003e7f8
   14003e7f8:	jae    0x14003e863
   14003e7fa:	jp     0x14003e861
   14003e7fc:	add    BYTE PTR [rax],al
   14003e7fe:	add    BYTE PTR [rax],al
   14003e800:	jo     0x14003e863
   14003e802:	add    BYTE PTR gs:[eax],al
   14003e806:	add    BYTE PTR [rax],al
   14003e808:	gs jo  0x14003e87e
   14003e80b:	imul   ebp,DWORD PTR [rdi+rbp*2+0x6e],0x646f6e00
   14003e813:	gs data16 (bad) 
   14003e816:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003e81a:	add    BYTE PTR [rax],al
   14003e81c:	jb     0x14003e88d
   14003e81e:	je     0x14003e881
   14003e820:	je     0x14003e887
   14003e822:	add    BYTE PTR [rax],al
   14003e824:	add    BYTE PTR [rax],al
   14003e826:	add    BYTE PTR [rax],al
   14003e828:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x73]
   14003e82c:	je     0x14003e893
   14003e82e:	jb     0x14003e8a2
   14003e830:	(bad)  
   14003e831:	outs   dx,BYTE PTR ds:[rsi]
   14003e832:	imul   eax,DWORD PTR [rax],0x0
   14003e835:	add    BYTE PTR [rax],al
   14003e837:	add    BYTE PTR [rbx+0x6f],ah
   14003e83a:	outs   dx,BYTE PTR ds:[rsi]
   14003e83b:	movsxd esp,DWORD PTR [rbp+0x6e]
   14003e83e:	je     0x14003e8b2
   14003e840:	(bad)  
   14003e841:	je     0x14003e8a8
   14003e843:	add    BYTE PTR [rax],al
   14003e845:	add    BYTE PTR [rax],al
   14003e847:	add    BYTE PTR [rcx+rbp*2+0x6d],dl
   14003e84b:	gs jae 0x14003e87b
   14003e84e:	push   rdx
   14003e84f:	outs   dx,DWORD PTR ds:[rsi]
   14003e850:	ins    DWORD PTR es:[rdi],dx
   14003e851:	(bad)  
   14003e852:	outs   dx,BYTE PTR ds:[rsi]
   14003e853:	add    BYTE PTR [rax],al
   14003e855:	add    BYTE PTR [rax],al
   14003e857:	add    BYTE PTR [rcx+riz*2+0x62],ch
   14003e85b:	gs ins BYTE PTR es:[rdi],dx
   14003e85d:	ins    BYTE PTR es:[rdi],dx
   14003e85e:	outs   dx,DWORD PTR ds:[rsi]
   14003e85f:	movsxd eax,DWORD PTR [rax]
	...
   14003e86d:	add    BYTE PTR [rax+rax*2],ch
   14003e870:	sbb    ebp,DWORD PTR [rcx+0x57]
   14003e873:	rex.XB mov r8d,0x6f479e17
   14003e879:	jne    0x14003e8ef
   14003e87b:	and    BYTE PTR [rdi+0x66],ch
   14003e87e:	and    BYTE PTR [rbp+0x65],ch
   14003e881:	ins    DWORD PTR es:[rdi],dx
   14003e882:	outs   dx,DWORD PTR ds:[rsi]
   14003e883:	jb     0x14003e8fe
   14003e885:	or     al,BYTE PTR [rax]
	...
   14003e88f:	add    BYTE PTR [rbx+0x0],ah
   14003e892:	cmp    al,BYTE PTR [rax]
   14003e894:	pop    rsp
   14003e895:	add    BYTE PTR [rax+rax*1+0x65],dh
   14003e899:	add    BYTE PTR [rbp+0x0],ch
   14003e89c:	jo     0x14003e89e
   14003e89e:	pop    rsp
   14003e89f:	add    BYTE PTR [rdx+0x0],ah
   14003e8a2:	(bad)  
   14003e8a3:	add    BYTE PTR [rax+rax*1+0x73],dh
   14003e8a7:	add    BYTE PTR [rbp+0x0],ah
   14003e8aa:	jb     0x14003e8ac
   14003e8ac:	jbe    0x14003e8ae
   14003e8ae:	add    BYTE PTR gs:[rax+rax*1+0x77],bl
   14003e8b3:	add    BYTE PTR [rcx+0x0],ch
   14003e8b6:	outs   dx,BYTE PTR ds:[rsi]
   14003e8b7:	add    BYTE PTR [rsi],dh
   14003e8b9:	add    BYTE PTR [rax+rax*1],dh
   14003e8bc:	pop    rsp
   14003e8bd:	add    BYTE PTR [rdi+0x0],ah
   14003e8c0:	jb     0x14003e8c2
   14003e8c2:	(bad)  
   14003e8c3:	add    BYTE PTR [rax+0x0],dh
   14003e8c6:	push   0x69007600
   14003e8cb:	add    BYTE PTR [rdx+0x0],bh
   14003e8ce:	pop    rsp
   14003e8cf:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14003e8d3:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14003e8d7:	add    BYTE PTR [rbp+0x0],ah
   14003e8da:	(bad)  
   14003e8db:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14003e8df:	add    BYTE PTR [rax+rax*1+0x63],bl
   14003e8e3:	add    BYTE PTR [rdi+0x0],ch
   14003e8e6:	ins    DWORD PTR es:[rdi],dx
   14003e8e7:	add    BYTE PTR [rbp+0x0],ch
   14003e8ea:	outs   dx,DWORD PTR ds:[rsi]
   14003e8eb:	add    BYTE PTR [rsi+0x0],ch
   14003e8ee:	pop    rsp
   14003e8ef:	add    BYTE PTR [rbp+0x0],dh
   14003e8f2:	je     0x14003e8f4
   14003e8f4:	imul   eax,DWORD PTR [rax],0x73006c
   14003e8fa:	add    BYTE PTR cs:[rbx+0x0],ah
   14003e8fe:	add    BYTE PTR [rax],al
   14003e900:	jne    0x14003e902
   14003e902:	sub    eax,0x75003e00
   14003e907:	add    BYTE PTR [rsi],ch
   14003e909:	add    BYTE PTR [rbp+0x0],dl
   14003e90c:	rex.RX add BYTE PTR [rdi+0x0],r11b
   14003e910:	jae    0x14003e912
   14003e912:	imul   eax,DWORD PTR [rax],0x65007a
   14003e918:	and    BYTE PTR [rax],al
   14003e91a:	cmp    eax,0x20003d00
   14003e91f:	add    BYTE PTR [rcx],dh
   14003e921:	add    BYTE PTR [rax],al
   14003e923:	add    BYTE PTR [rax],al
   14003e925:	add    BYTE PTR [rax],al
   14003e927:	add    BYTE PTR [rbp+0x0],dh
   14003e92a:	and    BYTE PTR [rax],al
   14003e92c:	cmp    eax,0x20003d00
   14003e931:	add    BYTE PTR [rbp+0x0],dl
   14003e934:	rex.RX add BYTE PTR [rdi+0x0],r11b
   14003e938:	data16 add BYTE PTR [rcx+0x0],ch
   14003e93c:	outs   dx,BYTE PTR ds:[rsi]
   14003e93d:	add    BYTE PTR [rax+rax*1+0x28],ah
   14003e941:	add    BYTE PTR [rbp+0x0],dh
   14003e944:	sub    DWORD PTR [rax],eax
   14003e946:	add    BYTE PTR [rax],al
   14003e948:	sub    eax,0x2d00003e
   14003e94d:	sub    eax,0x6c260000
   14003e952:	je     0x14003e98f
   14003e954:	add    BYTE PTR [rax],al
   14003e956:	add    BYTE PTR [rax],al
   14003e958:	es addr32 je 0x14003e997
   14003e95c:	add    BYTE PTR [rax],al
   14003e95e:	add    BYTE PTR [rax],al
   14003e960:	es (bad) 
   14003e962:	ins    DWORD PTR es:[rdi],dx
   14003e963:	jo     0x14003e9a0
   14003e965:	add    BYTE PTR [rax],al
   14003e967:	add    BYTE PTR [rdx+0x69],al
   14003e96a:	ins    BYTE PTR es:[rdi],dx
   14003e96b:	ins    BYTE PTR es:[rdi],dx
   14003e96c:	and    BYTE PTR [rdi+0x61],al
   14003e96f:	je     0x14003e9d6
   14003e971:	jae    0x14003e973
   14003e973:	add    BYTE PTR [rax],al
   14003e975:	add    BYTE PTR [rax],al
   14003e977:	add    BYTE PTR [rdi+0x61],dh
   14003e97a:	jb     0x14003e9ea
   14003e97c:	imul   ebp,DWORD PTR [rsi+0x67],0x6163203a
   14003e983:	outs   dx,BYTE PTR ds:[rsi]
   14003e984:	(bad)  
   14003e985:	je     0x14003e9a7
   14003e987:	outs   dx,DWORD PTR ds:[rsi]
   14003e988:	jo     0x14003e9ef
   14003e98a:	outs   dx,BYTE PTR ds:[rsi]
   14003e98b:	and    BYTE PTR [rcx+rbp*2+0x62],ch
   14003e98f:	jb     0x14003e9f2
   14003e991:	jb     0x14003ea0c
   14003e993:	and    BYTE PTR [rsi+0x69],ah
   14003e996:	ins    BYTE PTR es:[rdi],dx
   14003e997:	and    BYTE PTR gs:[rip+0xa73],ah        # 0x14003f411
   14003e99e:	add    BYTE PTR [rax],al
   14003e9a0:	imul   eax,DWORD PTR [rax],0x3c0020
   14003e9a6:	and    BYTE PTR [rax],al
   14003e9a8:	(bad)  
   14003e9a9:	add    BYTE PTR [rdx+0x0],bh
   14003e9ac:	add    BYTE PTR cs:[rbx+0x0],dh
   14003e9b0:	imul   eax,DWORD PTR [rax],0x65007a
   14003e9b6:	add    BYTE PTR [rax],al
   14003e9b8:	gs ins BYTE PTR es:[rdi],dx
   14003e9ba:	ins    BYTE PTR es:[rdi],dx
   14003e9bb:	imul   esi,DWORD PTR [rax+0x73],0x65
   14003e9c2:	add    BYTE PTR [rax],al
   14003e9c4:	add    BYTE PTR [rax],al
   14003e9c6:	call   0x14003ea0a
   14003e9cb:	add    BYTE PTR [rax],al
   14003e9cd:	add    BYTE PTR [rsi],ah
   14003e9cf:	mov    cl,0xa1
   14003e9d2:	(bad)  
   14003e9d3:	sub    dl,bl
   14003e9d5:	(bad)  
   14003e9d6:	rol    BYTE PTR [rdi+0x0],cl
	...
   14003e9e5:	add    al,dh
   14003e9e7:	(bad)  
   14003e9e8:	add    BYTE PTR [rax],al
   14003e9ea:	add    BYTE PTR [rax],al
   14003e9ec:	add    BYTE PTR [rax],al
   14003e9ee:	lock (bad) 
   14003e9f0:	outs   dx,DWORD PTR fs:[rsi]
   14003e9f2:	je     0x14003e9f4
   14003e9f4:	movsxd esp,DWORD PTR [rcx+0x6e]
   14003e9f7:	outs   dx,DWORD PTR ds:[rsi]
   14003e9f8:	outs   dx,BYTE PTR ds:[rsi]
   14003e9f9:	add    BYTE PTR [rax],al
   14003e9fb:	add    BYTE PTR [rax+0x6c],dh
   14003e9fe:	(bad)  
   14003e9ff:	imul   ebp,DWORD PTR [rsi+0x0],0x0
   14003ea06:	add    BYTE PTR [rax],al
   14003ea08:	jo     0x14003ea76
   14003ea0a:	(bad)  
   14003ea0b:	imul   ebp,DWORD PTR [rsi+0x2d],0x747865
   14003ea12:	add    BYTE PTR [rax],al
   14003ea14:	add    BYTE PTR [rax],al
   14003ea16:	add    BYTE PTR [rax],al
   14003ea18:	(bad)  
   14003ea19:	movsxd ebp,DWORD PTR [edi+0x6c]
   14003ea1d:	outs   dx,DWORD PTR ds:[rsi]
   14003ea1e:	jb     0x14003ea20
   14003ea20:	imul   bp,WORD PTR [rsp+rbp*2+0x65],0x64
   14003ea27:	add    BYTE PTR [rax+0x65],dh
   14003ea2a:	outs   dx,BYTE PTR ds:[rsi]
   14003ea2b:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14003ea2e:	outs   dx,DWORD PTR ds:[rsi]
   14003ea2f:	jb     0x14003ea31
   14003ea31:	add    BYTE PTR [rax],al
   14003ea33:	add    BYTE PTR [rcx+0x6e],ch
   14003ea36:	jbe    0x14003eaa1
   14003ea38:	jae    0x14003ea3a
   14003ea3a:	add    BYTE PTR [rax],al
   14003ea3c:	add    BYTE PTR [rax],al
   14003ea3e:	add    BYTE PTR [rax],al
   14003ea40:	jo     0x14003eaa3
   14003ea42:	gs imul esi,DWORD PTR fs:[edx+0x0],0x6e726177
   14003ea4c:	imul   ebp,DWORD PTR [rsi+0x67],0x6170202c
   14003ea53:	gs imul esi,DWORD PTR fs:[edx+0x3d],0x69207325
   14003ea5d:	outs   dx,BYTE PTR ds:[esi]
   14003ea5f:	outs   dx,DWORD PTR ds:[rsi]
   14003ea60:	jb     0x14003eac7
   14003ea62:	or     al,BYTE PTR fs:[rax]
   14003ea65:	add    BYTE PTR [rax],al
   14003ea67:	add    BYTE PTR [rcx+0x6c],ah
   14003ea6a:	ins    BYTE PTR es:[rdi],dx
   14003ea6b:	add    BYTE PTR [rax],al
   14003ea6d:	add    BYTE PTR [rax],al
   14003ea6f:	add    BYTE PTR [rbx+0x0],ah
   14003ea72:	cmp    al,BYTE PTR [rax]
   14003ea74:	pop    rsp
   14003ea75:	add    BYTE PTR [rax+rax*1+0x65],dh
   14003ea79:	add    BYTE PTR [rbp+0x0],ch
   14003ea7c:	jo     0x14003ea7e
   14003ea7e:	pop    rsp
   14003ea7f:	add    BYTE PTR [rdx+0x0],ah
   14003ea82:	(bad)  
   14003ea83:	add    BYTE PTR [rax+rax*1+0x73],dh
   14003ea87:	add    BYTE PTR [rbp+0x0],ah
   14003ea8a:	jb     0x14003ea8c
   14003ea8c:	jbe    0x14003ea8e
   14003ea8e:	add    BYTE PTR gs:[rax+rax*1+0x77],bl
   14003ea93:	add    BYTE PTR [rcx+0x0],ch
   14003ea96:	outs   dx,BYTE PTR ds:[rsi]
   14003ea97:	add    BYTE PTR [rsi],dh
   14003ea99:	add    BYTE PTR [rax+rax*1],dh
   14003ea9c:	pop    rsp
   14003ea9d:	add    BYTE PTR [rdi+0x0],ah
   14003eaa0:	jb     0x14003eaa2
   14003eaa2:	(bad)  
   14003eaa3:	add    BYTE PTR [rax+0x0],dh
   14003eaa6:	push   0x69007600
   14003eaab:	add    BYTE PTR [rdx+0x0],bh
   14003eaae:	pop    rsp
   14003eaaf:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14003eab3:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14003eab7:	add    BYTE PTR [rbp+0x0],ah
   14003eaba:	(bad)  
   14003eabb:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14003eabf:	add    BYTE PTR [rax+rax*1+0x63],bl
   14003eac3:	add    BYTE PTR [rdi+0x0],ch
   14003eac6:	ins    DWORD PTR es:[rdi],dx
   14003eac7:	add    BYTE PTR [rbp+0x0],ch
   14003eaca:	outs   dx,DWORD PTR ds:[rsi]
   14003eacb:	add    BYTE PTR [rsi+0x0],ch
   14003eace:	pop    rsp
   14003eacf:	add    BYTE PTR [rbp+0x0],ah
   14003ead2:	ins    DWORD PTR es:[rdi],dx
   14003ead3:	add    BYTE PTR [rcx+0x0],ch
   14003ead6:	je     0x14003ead8
   14003ead8:	add    BYTE PTR cs:[rbx+0x0],ah
   14003eadc:	add    BYTE PTR [rax],al
   14003eade:	add    BYTE PTR [rax],al
   14003eae0:	sub    BYTE PTR [rax],al
   14003eae2:	add    BYTE PTR [eip+0x75003e00],ch        # 0x1b50428e9
   14003eae9:	add    BYTE PTR [rsi],ch
   14003eaeb:	add    BYTE PTR [rdx+0x0],ah
   14003eaee:	(bad)  
   14003eaef:	add    BYTE PTR [rsi],ch
   14003eaf1:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14003eaf5:	add    BYTE PTR [rsi],ch
   14003eaf7:	add    BYTE PTR [rax+0x0],bh
   14003eafa:	and    BYTE PTR [rax],al
   14003eafc:	cmp    eax,0x20003d00
   14003eb01:	add    BYTE PTR [rax],dh
   14003eb03:	add    BYTE PTR [rcx],ch
   14003eb05:	add    BYTE PTR [rax],ah
   14003eb07:	add    BYTE PTR [rsi],ah
   14003eb09:	add    BYTE PTR [rsi],ah
   14003eb0b:	add    BYTE PTR [rax],ah
   14003eb0d:	add    BYTE PTR [rax],ch
   14003eb0f:	add    BYTE PTR [rdi+0x0],ah
   14003eb12:	sub    eax,0x75003e00
   14003eb17:	add    BYTE PTR [rsi],ch
   14003eb19:	add    BYTE PTR [rdx+0x0],ah
   14003eb1c:	(bad)  
   14003eb1d:	add    BYTE PTR [rsi],ch
   14003eb1f:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14003eb23:	add    BYTE PTR [rsi],ch
   14003eb25:	add    BYTE PTR [rcx+0x0],bh
   14003eb28:	and    BYTE PTR [rax],al
   14003eb2a:	cmp    eax,0x20003d00
   14003eb2f:	add    BYTE PTR [rax],dh
   14003eb31:	add    BYTE PTR [rcx],ch
   14003eb33:	add    BYTE PTR [rax],al
   14003eb35:	add    BYTE PTR [rax],al
   14003eb37:	add    BYTE PTR [rcx+riz*2+0x79],ch
   14003eb3b:	gs jb  0x14003ebb1
   14003eb3e:	add    BYTE PTR [rax],al
   14003eb40:	jae    0x14003eba7
   14003eb42:	je     0x14003ebb0
   14003eb44:	(bad)  
   14003eb45:	jns    0x14003ebac
   14003eb47:	jb     0x14003eb6e
   14003eb49:	movsxd esp,DWORD PTR [rip+0x25632564]        # 0x1656710b3
   14003eb4f:	fs and eax,0x63
   14003eb55:	add    BYTE PTR [rax],al
   14003eb57:	add    BYTE PTR [rsi+0x65],ch
   14003eb5a:	jae    0x14003ebd0
   14003eb5c:	imul   ebp,DWORD PTR [rsi+0x67],0x746f6e20
   14003eb63:	and    BYTE PTR [rcx+0x6c],ah
   14003eb66:	ins    BYTE PTR es:[rdi],dx
   14003eb67:	outs   dx,DWORD PTR ds:[rsi]
   14003eb68:	ja     0x14003ebcf
   14003eb6a:	and    BYTE PTR fs:[rcx+0x6e],ch
   14003eb6e:	and    BYTE PTR [rbx+0x74],dh
   14003eb71:	jns    0x14003ebdf
   14003eb73:	cmp    ah,BYTE PTR gs:[rax]
   14003eb76:	and    eax,0xa73
   14003eb7b:	add    BYTE PTR [rax],al
   14003eb7d:	add    BYTE PTR [rax],al
   14003eb7f:	add    BYTE PTR [rbp+0x6e],dh
   14003eb82:	ins    DWORD PTR es:[rdi],dx
   14003eb83:	(bad)  
   14003eb84:	je     0x14003ebe9
   14003eb86:	push   0x27206465
   14003eb8b:	sub    DWORD PTR [rdi],esp
   14003eb8d:	and    BYTE PTR [rcx+0x6e],ch
   14003eb90:	and    BYTE PTR [rbx+0x74],dh
   14003eb93:	jns    0x14003ec01
   14003eb95:	cmp    ah,BYTE PTR gs:[rax]
   14003eb98:	and    eax,0xa73
   14003eb9d:	add    BYTE PTR [rax],al
   14003eb9f:	add    BYTE PTR [rdi+0x61],dl
   14003eba2:	jb     0x14003ec12
   14003eba4:	imul   ebp,DWORD PTR [rsi+0x67],0x7274203a
   14003ebab:	jne    0x14003ec1b
   14003ebad:	movsxd esp,DWORD PTR [rcx+0x74]
   14003ebb0:	imul   ebp,DWORD PTR [rsi+0x67],0x79747320
   14003ebb7:	ins    BYTE PTR es:[rdi],dx
   14003ebb8:	and    BYTE PTR gs:[rdi],ah
   14003ebbb:	and    eax,0xa2773
   14003ebc0:	jne    0x14003ec30
   14003ebc2:	ins    DWORD PTR es:[rdi],dx
   14003ebc3:	(bad)  
   14003ebc4:	je     0x14003ec29
   14003ebc6:	push   0x27206465
   14003ebcb:	sub    BYTE PTR [rdi],ah
   14003ebcd:	and    BYTE PTR [rcx+0x6e],ch
   14003ebd0:	and    BYTE PTR [rbx+0x74],dh
   14003ebd3:	jns    0x14003ec41
   14003ebd5:	cmp    ah,BYTE PTR gs:[rax]
   14003ebd8:	and    eax,0xa73
   14003ebdd:	add    BYTE PTR [rax],al
   14003ebdf:	add    BYTE PTR [rdi+0x61],dh
   14003ebe2:	jb     0x14003ec52
   14003ebe4:	imul   ebp,DWORD PTR [rsi+0x67],0x616c202c
   14003ebeb:	outs   dx,BYTE PTR ds:[rsi]
   14003ebec:	addr32 jne 0x14003ec50
   14003ebef:	and    BYTE PTR gs:[eip+0x6f6e2073],ah        # 0x1af720c6a
   14003ebf7:	je     0x14003ec19
   14003ebf9:	jb     0x14003ec60
   14003ebfb:	movsxd ebp,DWORD PTR [rdi+0x67]
   14003ebfe:	outs   dx,BYTE PTR ds:[rsi]
   14003ebff:	imul   edi,DWORD PTR [rdx+0x65],0x75202c64
   14003ec06:	jae    0x14003ec6d
   14003ec08:	and    BYTE PTR [rdi+0x6e],ch
   14003ec0b:	and    BYTE PTR gs:[rdi+0x66],ch
   14003ec0f:	cmp    cl,BYTE PTR [rdx]
   14003ec11:	add    BYTE PTR [rax],al
   14003ec13:	add    BYTE PTR [rdi+0x62],dh
   14003ec16:	add    BYTE PTR [rax],al
   14003ec18:	xor    esi,DWORD PTR [rbx]
   14003ec1a:	xor    esi,DWORD PTR [rbx]
   14003ec1c:	xor    esi,DWORD PTR [rbx]
   14003ec1e:	repz (bad) 
   14003ec20:	js     0x14003ec84
   14003ec22:	ins    DWORD PTR es:[rdi],dx
   14003ec23:	outs   dx,DWORD PTR ds:[rsi]
   14003ec24:	jb     0x14003ec8b
   14003ec26:	cmp    ah,BYTE PTR [rax]
   14003ec28:	outs   dx,DWORD PTR ds:[rsi]
   14003ec29:	jne    0x14003ec9f
   14003ec2b:	and    BYTE PTR [rdi+0x66],ch
   14003ec2e:	and    BYTE PTR [rbp+0x65],ch
   14003ec31:	ins    DWORD PTR es:[rdi],dx
   14003ec32:	outs   dx,DWORD PTR ds:[rsi]
   14003ec33:	jb     0x14003ecae
   14003ec35:	or     al,BYTE PTR [rax]
   14003ec37:	add    BYTE PTR [rbx+0x69],ah
   14003ec3a:	jb     0x14003ec9f
   14003ec3c:	ins    BYTE PTR es:[rdi],dx
   14003ec3d:	add    BYTE PTR gs:[rax],al
   14003ec40:	jo     0x14003ecb1
   14003ec42:	imul   ebp,DWORD PTR [rsi+0x74],0x65000000
   14003ec49:	addr32 add BYTE PTR [eax],al
   14003ec4d:	add    BYTE PTR [rax],al
   14003ec4f:	add    BYTE PTR [rdx+rsi*2+0x69],dh
   14003ec53:	(bad)  
   14003ec54:	outs   dx,BYTE PTR ds:[rsi]
   14003ec55:	ins    BYTE PTR es:[edi],dx
   14003ec57:	add    BYTE PTR gs:[rax],al
   14003ec5a:	add    BYTE PTR [rax],al
   14003ec5c:	add    BYTE PTR [rax],al
   14003ec5e:	add    BYTE PTR [rax],al
   14003ec60:	jo     0x14003ecce
   14003ec62:	(bad)  
   14003ec63:	imul   ebp,DWORD PTR [rsi+0x74],0x747865
   14003ec6a:	add    BYTE PTR [rax],al
   14003ec6c:	add    BYTE PTR [rax],al
   14003ec6e:	add    BYTE PTR [rax],al
   14003ec70:	imul   esp,DWORD PTR fs:[rcx+0x6d],0x646e6f
   14003ec78:	je     0x14003ecec
   14003ec7a:	(bad)  
   14003ec7b:	jo     0x14003ece2
   14003ec7d:	jp     0x14003ece8
   14003ec7f:	jne    0x14003ecee
   14003ec81:	add    BYTE PTR [rax],al
   14003ec83:	add    BYTE PTR [rax],al
   14003ec85:	add    BYTE PTR [rax],al
   14003ec87:	add    BYTE PTR [rax+0x61],dh
   14003ec8a:	jb     0x14003eced
   14003ec8c:	ins    BYTE PTR es:[rdi],dx
   14003ec8d:	ins    BYTE PTR es:[rdi],dx
   14003ec8e:	gs ins BYTE PTR es:[rdi],dx
   14003ec90:	outs   dx,DWORD PTR ds:[rsi]
   14003ec91:	addr32 jb 0x14003ecf5
   14003ec94:	ins    DWORD PTR es:[rdi],dx
   14003ec95:	add    BYTE PTR [rax],al
   14003ec97:	add    BYTE PTR [rax+0x6f],ch
   14003ec9a:	jne    0x14003ed0f
   14003ec9c:	add    BYTE PTR gs:[rax],al
   14003ec9f:	add    BYTE PTR [rax+0x65],ch
   14003eca2:	js     0x14003ed05
   14003eca4:	outs   dx,DWORD PTR ds:[esi]
   14003eca6:	outs   dx,BYTE PTR ds:[rsi]
   14003eca7:	add    BYTE PTR [rdi+0x63],ch
   14003ecaa:	je     0x14003ed0d
   14003ecac:	outs   dx,DWORD PTR ds:[esi]
   14003ecae:	outs   dx,BYTE PTR ds:[rsi]
   14003ecaf:	add    BYTE PTR [rdi+rbp*2+0x75],ah
   14003ecb3:	(bad)  
   14003ecb4:	ins    BYTE PTR es:[rdi],dx
   14003ecb5:	movsxd ebp,DWORD PTR gs:[rcx+0x72]
   14003ecb9:	movsxd ebp,DWORD PTR [rbp+riz*2+0x0]
   14003ecbd:	add    BYTE PTR [rax],al
   14003ecbf:	add    BYTE PTR [rdi+rbp*2+0x75],ah
   14003ecc3:	(bad)  
   14003ecc4:	ins    BYTE PTR es:[rdi],dx
   14003ecc5:	outs   dx,DWORD PTR gs:[rsi]
   14003ecc7:	movsxd esi,DWORD PTR [rcx+riz*2+0x67]
   14003eccb:	outs   dx,DWORD PTR ds:[rsi]
   14003eccc:	outs   dx,BYTE PTR ds:[rsi]
   14003eccd:	add    BYTE PTR [rax],al
   14003eccf:	add    BYTE PTR [rdx+rsi*2+0x69],dh
   14003ecd3:	jo     0x14003ed41
   14003ecd5:	outs   dx,DWORD PTR gs:[rsi]
   14003ecd7:	movsxd esi,DWORD PTR [rcx+riz*2+0x67]
   14003ecdb:	outs   dx,DWORD PTR ds:[rsi]
   14003ecdc:	outs   dx,BYTE PTR ds:[rsi]
   14003ecdd:	add    BYTE PTR [rax],al
   14003ecdf:	add    BYTE PTR [rcx+0x6e],ch
   14003ece2:	jbe    0x14003ed58
   14003ece4:	jb     0x14003ed4f
   14003ece6:	(bad)  
   14003ece7:	outs   dx,BYTE PTR ds:[rsi]
   14003ece8:	ins    BYTE PTR es:[edi],dx
   14003ecea:	add    BYTE PTR gs:[rax],al
   14003eced:	add    BYTE PTR [rax],al
   14003ecef:	add    BYTE PTR [rcx+0x6e],ch
   14003ecf2:	jbe    0x14003ed68
   14003ecf4:	jb     0x14003ed57
   14003ecf6:	jo     0x14003ed5d
   14003ecf8:	jp     0x14003ed63
   14003ecfa:	jne    0x14003ed69
   14003ecfc:	add    BYTE PTR [rax],al
   14003ecfe:	add    BYTE PTR [rax],al
   14003ed00:	imul   ebp,DWORD PTR [rsi+0x76],0x73756f68
   14003ed07:	add    BYTE PTR gs:[rax],al
   14003ed0a:	add    BYTE PTR [rax],al
   14003ed0c:	add    BYTE PTR [rax],al
   14003ed0e:	add    BYTE PTR [rax],al
   14003ed10:	rex.WRB
   14003ed11:	imul   esp,DWORD PTR fs:[rcx+0x6d],0x646e6f
   14003ed19:	add    BYTE PTR [rax],al
   14003ed1b:	add    BYTE PTR [rax],al
   14003ed1d:	add    BYTE PTR [rax],al
   14003ed1f:	add    BYTE PTR [rbp+0x73],cl
   14003ed22:	jno    0x14003ed99
   14003ed24:	(bad)  
   14003ed25:	jb     0x14003ed8c
   14003ed27:	add    BYTE PTR [rbp+0x63],cl
   14003ed2a:	imul   esi,DWORD PTR [rdx+0x63],0x4d00656c
   14003ed31:	jb     0x14003ed98
   14003ed33:	movsxd ebp,DWORD PTR [rdi+0x72]
   14003ed36:	add    BYTE PTR fs:[rbp+0x70],ah
   14003ed3a:	jae    0x14003eda2
   14003ed3c:	add    BYTE PTR [rax],al
   14003ed3e:	add    BYTE PTR [rax],al
   14003ed40:	imul   bp,WORD PTR [rsp+rbp*2+0x65],0x64
   14003ed47:	add    BYTE PTR [rsi+0x0],ch
   14003ed4a:	add    BYTE PTR [rax],al
   14003ed4c:	outs   dx,BYTE PTR ds:[rsi]
   14003ed4d:	add    BYTE PTR gs:[rax],al
   14003ed50:	add    BYTE PTR gs:[rax],al
   14003ed53:	add    BYTE PTR [rbx+0x65],dh
   14003ed56:	add    BYTE PTR [rax],al
   14003ed58:	jae    0x14003ed5a
   14003ed5a:	add    BYTE PTR [rax],al
   14003ed5c:	jae    0x14003edd5
   14003ed5e:	add    BYTE PTR [rax],al
   14003ed60:	outs   dx,BYTE PTR ds:[rsi]
   14003ed61:	ja     0x14003ed63
   14003ed63:	add    BYTE PTR [rax],al
   14003ed65:	add    BYTE PTR [rax],al
   14003ed67:	add    BYTE PTR [rdi+0x61],dh
   14003ed6a:	jb     0x14003edda
   14003ed6c:	imul   ebp,DWORD PTR [rsi+0x67],0x6f6e203a
   14003ed73:	fs and BYTE PTR gs:[rip+0x70202c73],ah        # 0x1b02419ee
   14003ed7b:	outs   dx,DWORD PTR ds:[rsi]
   14003ed7c:	jb     0x14003edf2
   14003ed7e:	and    BYTE PTR [rip+0x6e752073],ah        # 0x1ae790df7
   14003ed84:	jb     0x14003edeb
   14003ed86:	movsxd ebp,DWORD PTR [rdi+0x67]
   14003ed89:	outs   dx,BYTE PTR ds:[rsi]
   14003ed8a:	imul   edi,DWORD PTR [rdx+0x65],0x63000a64
   14003ed91:	add    BYTE PTR [rdx],bh
   14003ed93:	add    BYTE PTR [rax+rax*1+0x74],bl
   14003ed97:	add    BYTE PTR [rbp+0x0],ah
   14003ed9a:	ins    DWORD PTR es:[rdi],dx
   14003ed9b:	add    BYTE PTR [rax+0x0],dh
   14003ed9e:	pop    rsp
   14003ed9f:	add    BYTE PTR [rdx+0x0],ah
   14003eda2:	(bad)  
   14003eda3:	add    BYTE PTR [rax+rax*1+0x73],dh
   14003eda7:	add    BYTE PTR [rbp+0x0],ah
   14003edaa:	jb     0x14003edac
   14003edac:	jbe    0x14003edae
   14003edae:	add    BYTE PTR gs:[rax+rax*1+0x77],bl
   14003edb3:	add    BYTE PTR [rcx+0x0],ch
   14003edb6:	outs   dx,BYTE PTR ds:[rsi]
   14003edb7:	add    BYTE PTR [rsi],dh
   14003edb9:	add    BYTE PTR [rax+rax*1],dh
   14003edbc:	pop    rsp
   14003edbd:	add    BYTE PTR [rdi+0x0],ah
   14003edc0:	jb     0x14003edc2
   14003edc2:	(bad)  
   14003edc3:	add    BYTE PTR [rax+0x0],dh
   14003edc6:	push   0x69007600
   14003edcb:	add    BYTE PTR [rdx+0x0],bh
   14003edce:	pop    rsp
   14003edcf:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14003edd3:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14003edd7:	add    BYTE PTR [rbp+0x0],ah
   14003edda:	(bad)  
   14003eddb:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14003eddf:	add    BYTE PTR [rax+rax*1+0x63],bl
   14003ede3:	add    BYTE PTR [rdi+0x0],ch
   14003ede6:	ins    DWORD PTR es:[rdi],dx
   14003ede7:	add    BYTE PTR [rbp+0x0],ch
   14003edea:	outs   dx,DWORD PTR ds:[rsi]
   14003edeb:	add    BYTE PTR [rsi+0x0],ch
   14003edee:	pop    rsp
   14003edef:	add    BYTE PTR [rbx+0x0],dh
   14003edf2:	push   0x70006100
   14003edf7:	add    BYTE PTR [rbp+0x0],ah
   14003edfa:	jae    0x14003edfc
   14003edfc:	add    BYTE PTR cs:[rbx+0x0],ah
	...
   14003ee08:	jo     0x14003ee0a
   14003ee0a:	outs   dx,DWORD PTR ds:[rsi]
   14003ee0b:	add    BYTE PTR [rcx+0x0],ch
   14003ee0e:	outs   dx,BYTE PTR ds:[rsi]
   14003ee0f:	add    BYTE PTR [rax+rax*1+0x5f],dh
   14003ee13:	add    BYTE PTR [rax+rax*1+0x65],ah
   14003ee17:	add    BYTE PTR [rbx+0x0],dh
   14003ee1a:	movsxd eax,DWORD PTR [rax]
   14003ee1c:	add    BYTE PTR [rax],al
   14003ee1e:	add    BYTE PTR [rax],al
   14003ee20:	and    eax,0x77203a73
   14003ee25:	(bad)  
   14003ee26:	jb     0x14003ee96
   14003ee28:	imul   ebp,DWORD PTR [rsi+0x67],0x6f6e202c
   14003ee2f:	fs and BYTE PTR gs:[rdi],ah
   14003ee33:	and    eax,0x73202773
   14003ee38:	imul   edi,DWORD PTR [rdx+0x65],0x6f6f7420
   14003ee3f:	and    BYTE PTR [rbx+0x6d],dh
   14003ee42:	(bad)  
   14003ee43:	ins    BYTE PTR es:[rdi],dx
   14003ee44:	ins    BYTE PTR es:[rdi],dx
   14003ee45:	and    BYTE PTR [rsi+0x6f],ah
   14003ee48:	jb     0x14003ee6a
   14003ee4a:	ins    BYTE PTR es:[rdi],dx
   14003ee4b:	(bad)  
   14003ee4c:	(bad)  
   14003ee4d:	gs ins BYTE PTR es:[rdi],dx
   14003ee4f:	or     al,BYTE PTR [rax]
   14003ee51:	add    BYTE PTR [rax],al
   14003ee53:	add    BYTE PTR [rax],al
   14003ee55:	add    BYTE PTR [rax],al
   14003ee57:	add    BYTE PTR [rbx+0x68],dh
   14003ee5a:	(bad)  
   14003ee5b:	jo     0x14003eec2
   14003ee5d:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x0
   14003ee64:	add    BYTE PTR [rax],al
   14003ee66:	add    BYTE PTR [rax],al
   14003ee68:	jb     0x14003eed9
   14003ee6a:	jne    0x14003eeda
   14003ee6c:	fs gs add BYTE PTR fs:[rcx+rbp*2+0x61],ah
   14003ee73:	outs   dx,DWORD PTR ds:[esi]
   14003ee75:	outs   dx,BYTE PTR ds:[rsi]
   14003ee76:	(bad)  
   14003ee77:	ins    BYTE PTR es:[rdi],dx
   14003ee78:	jae    0x14003ee7a
   14003ee7a:	add    BYTE PTR [rax],al
   14003ee7c:	add    BYTE PTR [rax],al
   14003ee7e:	add    BYTE PTR [rax],al
   14003ee80:	je     0x14003eef1
   14003ee82:	jo     0x14003eef0
   14003ee84:	(bad)  
   14003ee85:	(bad)  
   14003ee86:	gs ins BYTE PTR es:[rdi],dx
	...
   14003ee90:	(bad)  
   14003ee91:	outs   dx,DWORD PTR ds:[rsi]
   14003ee92:	je     0x14003ef08
   14003ee94:	outs   dx,DWORD PTR ds:[rsi]
   14003ee95:	ins    DWORD PTR es:[rdi],dx
   14003ee96:	ins    BYTE PTR es:[rdi],dx
   14003ee97:	(bad)  
   14003ee98:	(bad)  
   14003ee99:	gs ins BYTE PTR es:[rdi],dx
   14003ee9b:	add    BYTE PTR [rax],al
   14003ee9d:	add    BYTE PTR [rax],al
   14003ee9f:	add    BYTE PTR [rdx+0x61],ah
   14003eea2:	and    BYTE PTR fs:[rcx+riz*2+0x62],ch
   14003eea7:	gs ins BYTE PTR es:[rdi],dx
   14003eea9:	and    BYTE PTR [rsi+0x6f],ah
   14003eeac:	jb     0x14003ef1b
   14003eeae:	(bad)  
   14003eeaf:	je     0x14003eed1
   14003eeb1:	and    eax,0xa73
   14003eeb6:	add    BYTE PTR [rax],al
   14003eeb8:	ja     0x14003ef1b
   14003eeba:	jb     0x14003ef2a
   14003eebc:	imul   ebp,DWORD PTR [rsi+0x67],0x7375203a
   14003eec3:	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
   14003eeca:	outs   dx,WORD PTR ds:[rsi]
   14003eecc:	jb     0x14003eeee
   14003eece:	jne    0x14003ef3e
   14003eed0:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14003eed4:	outs   dx,BYTE PTR ds:[rsi]
   14003eed5:	and    BYTE PTR [rbx+0x68],dh
   14003eed8:	(bad)  
   14003eed9:	jo     0x14003ef40
   14003eedb:	and    BYTE PTR [rip+0xfffffffff1000a73],ah        # 0x13103f954
   14003eee1:	push   0xfffffffff8b588e3
   14003eee6:	in     al,0x3e
   14003eee8:	sbb    al,0xc7
   14003eeea:	jno    0x14003ef08
   14003eeec:	(bad)  
   14003eeed:	jno    0x14003ee9b
   14003eeef:	(bad)  
   14003eef0:	jl     0x14003ef53
   14003eef2:	xor    dl,BYTE PTR [rbp+0x30]
   14003eef5:	sub    ah,ch
   14003eef7:	(bad)  
   14003eef8:	(bad)  
   14003eef9:	cdq    
   14003eefa:	cdq    
   14003eefb:	cdq    
   14003eefc:	cdq    
   14003eefd:	cdq    
   14003eefe:	jmp    0x14003ef42
   14003ef03:	add    BYTE PTR [rax],al
   14003ef05:	add    BYTE PTR [rax],ch
   14003ef07:	add    BYTE PTR [rax],al
   14003ef0a:	add    BYTE PTR [rax],al
   14003ef0c:	add    BYTE PTR [rax],al
   14003ef0e:	xor    BYTE PTR [rax+0x0],al
   14003ef11:	add    BYTE PTR [rax],al
   14003ef13:	add    BYTE PTR [rax],al
   14003ef15:	add    al,dh
   14003ef17:	rex.XB xor esi,DWORD PTR [r11]
   14003ef1a:	xor    esi,DWORD PTR [rbx]
   14003ef1c:	xor    esi,DWORD PTR [rbx]
   14003ef1e:	repz mov edi,0x0
   14003ef24:	add    BYTE PTR [rax],al
   14003ef26:	pop    rcx
   14003ef27:	rol    BYTE PTR [rax],0x0
   14003ef2a:	add    BYTE PTR [rax],al
   14003ef2c:	add    BYTE PTR [rax+0x6f6cc076],al
   14003ef32:	jae    0x14003efa8
   14003ef34:	and    BYTE PTR [rip+0x73252073],ah        # 0x1b3290fad
   14003ef3a:	and    BYTE PTR [rbp+0x64],ah
   14003ef3d:	or     al,BYTE PTR gs:[eax]
	...
   14003ef4d:	add    BYTE PTR [rax],al
   14003ef4f:	add    BYTE PTR [rdi],ch
   14003ef51:	jo     0x14003efb4
   14003ef53:	je     0x14003efbd
   14003ef55:	(bad)  
   14003ef56:	outs   dx,DWORD PTR ds:[rsi]
   14003ef57:	js     0x14003ef79
   14003ef59:	jnp    0x14003ef7b
   14003ef5b:	(bad)  
   14003ef5c:	pop    rax
   14003ef5d:	and    BYTE PTR [rbp+0x78],ah
   14003ef60:	movsxd ebp,DWORD PTR [rax+0x20]
   14003ef63:	outs   dx,BYTE PTR ds:[rsi]
   14003ef64:	and    BYTE PTR gs:[eip+0x75732064],ah        # 0x1b5770fd0
   14003ef6c:	(bad)  
   14003ef6d:	and    BYTE PTR [rbp+riz*2+0x66],ah
   14003ef71:	and    BYTE PTR [rdi],ch
   14003ef73:	pop    rcx
   14003ef74:	and    BYTE PTR [rbp+0x78],ah
   14003ef77:	movsxd ebp,DWORD PTR [rax+0x20]
   14003ef7a:	and    eax,0x75732064
   14003ef7f:	(bad)  
   14003ef80:	and    BYTE PTR [rbp+riz*2+0x66],ah
   14003ef84:	and    BYTE PTR [rdi],ch
   14003ef86:	js     0x14003efa8
   14003ef88:	gs js  0x14003efee
   14003ef8b:	push   0x67656e20
   14003ef90:	and    BYTE PTR [rip+0x75732064],ah        # 0x1b5770ffa
   14003ef96:	(bad)  
   14003ef97:	and    BYTE PTR [rbp+riz*2+0x66],ah
   14003ef9b:	and    BYTE PTR [rdi],ch
   14003ef9d:	jns    0x14003efbf
   14003ef9f:	gs js  0x14003f005
   14003efa2:	push   0x20642520
   14003efa7:	jae    0x14003f01e
   14003efa9:	(bad)  
   14003efaa:	and    BYTE PTR [rbp+riz*2+0x66],ah
   14003efae:	and    BYTE PTR [rsi+0x65],ch
   14003efb1:	ja     0x14003f023
   14003efb3:	(bad)  
   14003efb4:	je     0x14003f01e
   14003efb6:	and    BYTE PTR [rax+0x20],bh
   14003efb9:	jns    0x14003efdb
   14003efbb:	ins    DWORD PTR es:[rdi],dx
   14003efbc:	outs   dx,DWORD PTR ds:[rsi]
   14003efbd:	jbe    0x14003f024
   14003efbf:	je     0x14003f030
   14003efc1:	and    BYTE PTR [rax+0x20],bl
   14003efc4:	jns    0x14003efe6
   14003efc6:	ins    BYTE PTR es:[rdi],dx
   14003efc7:	imul   ebp,DWORD PTR [rsi+0x65],0x58206f74
   14003efce:	and    BYTE PTR [rcx+0x20],bl
   14003efd1:	ins    BYTE PTR es:[rdi],dx
   14003efd2:	imul   ebp,DWORD PTR [rsi+0x65],0x78206f74
   14003efd9:	and    BYTE PTR [rcx+0x20],bl
   14003efdc:	ins    BYTE PTR es:[rdi],dx
   14003efdd:	imul   ebp,DWORD PTR [rsi+0x65],0x63206f74
   14003efe4:	ins    BYTE PTR es:[rdi],dx
   14003efe5:	outs   dx,DWORD PTR ds:[rsi]
   14003efe6:	jae    0x14003f04d
   14003efe8:	jo     0x14003f04b
   14003efea:	je     0x14003f054
   14003efec:	and    BYTE PTR [rbx+0x74],dh
   14003efef:	jb     0x14003f060
   14003eff1:	imul   esp,DWORD PTR [rbp+0x20],0x7d
   14003eff5:	and    BYTE PTR [rbp+riz*2+0x66],ah
   14003eff9:	or     al,BYTE PTR [rax]
   14003effb:	add    BYTE PTR [rax],al
   14003effd:	add    BYTE PTR [rax],al
   14003efff:	add    BYTE PTR [rdi],ch
   14003f001:	jo     0x14003f064
   14003f003:	je     0x14003f06d
   14003f005:	(bad)  
   14003f006:	outs   dx,DWORD PTR ds:[rsi]
   14003f007:	js     0x14003f029
   14003f009:	jnp    0x14003f02b
   14003f00b:	(bad)  
   14003f00c:	pop    rcx
   14003f00d:	and    BYTE PTR [rbp+0x78],ah
   14003f010:	movsxd ebp,DWORD PTR [rax+0x20]
   14003f013:	and    eax,0x75732064
   14003f018:	(bad)  
   14003f019:	and    BYTE PTR [rbp+riz*2+0x66],ah
   14003f01d:	and    BYTE PTR [rdi],ch
   14003f01f:	pop    rax
   14003f020:	and    BYTE PTR [rbp+0x78],ah
   14003f023:	movsxd ebp,DWORD PTR [rax+0x20]
   14003f026:	and    eax,0x75732064
   14003f02b:	(bad)  
   14003f02c:	and    BYTE PTR [rbp+riz*2+0x66],ah
   14003f030:	and    BYTE PTR [rdi],ch
   14003f032:	jns    0x14003f054
   14003f034:	gs js  0x14003f09a
   14003f037:	push   0x20642520
   14003f03c:	jae    0x14003f0b3
   14003f03e:	(bad)  
   14003f03f:	and    BYTE PTR [rbp+riz*2+0x66],ah
   14003f043:	and    BYTE PTR [rdi],ch
   14003f045:	js     0x14003f067
   14003f047:	gs js  0x14003f0ad
   14003f04a:	push   0x20642520
   14003f04f:	jae    0x14003f0c6
   14003f051:	(bad)  
   14003f052:	and    BYTE PTR [rbp+riz*2+0x66],ah
   14003f056:	and    BYTE PTR [rsi+0x65],ch
   14003f059:	ja     0x14003f0cb
   14003f05b:	(bad)  
   14003f05c:	je     0x14003f0c6
   14003f05e:	and    BYTE PTR [rax+0x20],bh
   14003f061:	jns    0x14003f083
   14003f063:	ins    DWORD PTR es:[rdi],dx
   14003f064:	outs   dx,DWORD PTR ds:[rsi]
   14003f065:	jbe    0x14003f0cc
   14003f067:	je     0x14003f0d8
   14003f069:	and    BYTE PTR [rax+0x20],bl
   14003f06c:	jns    0x14003f08e
   14003f06e:	ins    BYTE PTR es:[rdi],dx
   14003f06f:	imul   ebp,DWORD PTR [rsi+0x65],0x58206f74
   14003f076:	and    BYTE PTR [rcx+0x20],bl
   14003f079:	ins    BYTE PTR es:[rdi],dx
   14003f07a:	imul   ebp,DWORD PTR [rsi+0x65],0x78206f74
   14003f081:	and    BYTE PTR [rcx+0x20],bl
   14003f084:	ins    BYTE PTR es:[rdi],dx
   14003f085:	imul   ebp,DWORD PTR [rsi+0x65],0x63206f74
   14003f08c:	ins    BYTE PTR es:[rdi],dx
   14003f08d:	outs   dx,DWORD PTR ds:[rsi]
   14003f08e:	jae    0x14003f0f5
   14003f090:	jo     0x14003f0f3
   14003f092:	je     0x14003f0fc
   14003f094:	and    BYTE PTR [rbx+0x74],dh
   14003f097:	jb     0x14003f108
   14003f099:	imul   esp,DWORD PTR [rbp+0x20],0x7d
   14003f09d:	and    BYTE PTR [rbp+riz*2+0x66],ah
   14003f0a1:	or     al,BYTE PTR [rax]
   14003f0a3:	add    BYTE PTR [rax],al
   14003f0a5:	add    BYTE PTR [rax],al
   14003f0a7:	add    BYTE PTR [rcx+riz*2+0x62],ch
   14003f0ab:	gs ins BYTE PTR es:[rdi],dx
   14003f0ad:	push   0x75
   14003f0af:	jae    0x14003f125
   14003f0b1:	add    BYTE PTR [rax],al
   14003f0b3:	add    BYTE PTR [rbx+0x6f],dh
   14003f0b6:	ins    BYTE PTR es:[rdi],dx
   14003f0b7:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x0
   14003f0bf:	add    BYTE PTR [rsi+0x6f],ah
   14003f0c2:	jb     0x14003f13b
   14003f0c4:	(bad)  
   14003f0c5:	jb     0x14003f12b
   14003f0c7:	add    BYTE PTR [rdx+0x61],ah
   14003f0ca:	movsxd ebp,DWORD PTR [rbx+0x0]
   14003f0cd:	add    BYTE PTR [rax],al
   14003f0cf:	add    BYTE PTR [rdx+0x6f],ah
   14003f0d2:	je     0x14003f13c
   14003f0d4:	add    BYTE PTR [rax],al
   14003f0d6:	add    BYTE PTR [rax],al
   14003f0d8:	outs   dx,BYTE PTR ds:[rsi]
   14003f0d9:	outs   dx,DWORD PTR ds:[rsi]
   14003f0da:	jb     0x14003f149
   14003f0dc:	(bad)  
   14003f0dd:	ins    BYTE PTR es:[rdi],dx
   14003f0de:	add    BYTE PTR [rax],al
   14003f0e0:	imul   ebp,DWORD PTR [rsi+0x76],0x6f646f00
   14003f0e7:	je     0x14003f0e9
   14003f0e9:	add    BYTE PTR [rax],al
   14003f0eb:	add    BYTE PTR [rcx+0x6e],ch
   14003f0ee:	jbe    0x14003f154
   14003f0f0:	outs   dx,DWORD PTR ds:[rsi]
   14003f0f1:	je     0x14003f0f3
   14003f0f3:	add    BYTE PTR [rax],al
   14003f0f5:	add    BYTE PTR [rax],al
   14003f0f7:	add    BYTE PTR [rcx+0x6e],ch
   14003f0fa:	jbe    0x14003f16b
   14003f0fc:	outs   dx,DWORD PTR fs:[rsi]
   14003f0fe:	je     0x14003f100
   14003f100:	je     0x14003f167
   14003f102:	add    BYTE PTR gs:[rbp+0x6d],ah
   14003f106:	jo     0x14003f17c
   14003f108:	jns    0x14003f10a
   14003f10a:	add    BYTE PTR [rax],al
   14003f10c:	add    BYTE PTR [rax],al
   14003f10e:	add    BYTE PTR [rax],al
   14003f110:	imul   ebp,DWORD PTR [rsi+0x76],0x74706d65
   14003f117:	jns    0x14003f119
   14003f119:	add    BYTE PTR [rax],al
   14003f11b:	add    BYTE PTR [rdi+0x70],ch
   14003f11e:	outs   dx,BYTE PTR gs:[rsi]
	...
   14003f128:	push   0x6f666c61
   14003f12d:	jo     0x14003f194
   14003f12f:	outs   dx,BYTE PTR ds:[rsi]
	...
   14003f138:	outs   dx,DWORD PTR ds:[rsi]
   14003f139:	imul   esp,DWORD PTR fs:[rcx+0x6d],0x646e6f
   14003f141:	add    BYTE PTR [rax],al
   14003f143:	add    BYTE PTR [rax],al
   14003f145:	add    BYTE PTR [rax],al
   14003f147:	add    BYTE PTR [rbp+0x64],ah
   14003f14a:	imul   esp,DWORD PTR [rcx+0x6d],0x646e6f
   14003f151:	add    BYTE PTR [rax],al
   14003f153:	add    BYTE PTR [rdi+0x62],ch
   14003f156:	outs   dx,DWORD PTR ds:[rsi]
   14003f157:	js     0x14003f159
   14003f159:	add    BYTE PTR [rax],al
   14003f15b:	add    BYTE PTR [rbx+0x72],ah
   14003f15e:	outs   dx,DWORD PTR ds:[rsi]
   14003f15f:	ja     0x14003f161
	...
   14003f16d:	add    BYTE PTR [rax],al
   14003f16f:	add    BYTE PTR [rbx+0x0],ah
   14003f172:	cmp    al,BYTE PTR [rax]
   14003f174:	pop    rsp
   14003f175:	add    BYTE PTR [rax+rax*1+0x65],dh
   14003f179:	add    BYTE PTR [rbp+0x0],ch
   14003f17c:	jo     0x14003f17e
   14003f17e:	pop    rsp
   14003f17f:	add    BYTE PTR [rdx+0x0],ah
   14003f182:	(bad)  
   14003f183:	add    BYTE PTR [rax+rax*1+0x73],dh
   14003f187:	add    BYTE PTR [rbp+0x0],ah
   14003f18a:	jb     0x14003f18c
   14003f18c:	jbe    0x14003f18e
   14003f18e:	add    BYTE PTR gs:[rax+rax*1+0x77],bl
   14003f193:	add    BYTE PTR [rcx+0x0],ch
   14003f196:	outs   dx,BYTE PTR ds:[rsi]
   14003f197:	add    BYTE PTR [rsi],dh
   14003f199:	add    BYTE PTR [rax+rax*1],dh
   14003f19c:	pop    rsp
   14003f19d:	add    BYTE PTR [rdi+0x0],ah
   14003f1a0:	jb     0x14003f1a2
   14003f1a2:	(bad)  
   14003f1a3:	add    BYTE PTR [rax+0x0],dh
   14003f1a6:	push   0x69007600
   14003f1ab:	add    BYTE PTR [rdx+0x0],bh
   14003f1ae:	pop    rsp
   14003f1af:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14003f1b3:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14003f1b7:	add    BYTE PTR [rbp+0x0],ah
   14003f1ba:	(bad)  
   14003f1bb:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14003f1bf:	add    BYTE PTR [rax+rax*1+0x63],bl
   14003f1c3:	add    BYTE PTR [rdi+0x0],ch
   14003f1c6:	ins    DWORD PTR es:[rdi],dx
   14003f1c7:	add    BYTE PTR [rbp+0x0],ch
   14003f1ca:	outs   dx,DWORD PTR ds:[rsi]
   14003f1cb:	add    BYTE PTR [rsi+0x0],ch
   14003f1ce:	pop    rsp
   14003f1cf:	add    BYTE PTR [rcx+0x0],ah
   14003f1d2:	jb     0x14003f1d4
   14003f1d4:	jb     0x14003f1d6
   14003f1d6:	outs   dx,DWORD PTR ds:[rsi]
   14003f1d7:	add    BYTE PTR [rdi+0x0],dh
   14003f1da:	jae    0x14003f1dc
   14003f1dc:	add    BYTE PTR cs:[rbx+0x0],ah
   14003f1e0:	add    BYTE PTR [rax],al
   14003f1e2:	add    BYTE PTR [rax],al
   14003f1e4:	xor    BYTE PTR [rax],al
   14003f1e6:	add    BYTE PTR [rax],al
   14003f1e8:	sbb    BYTE PTR [rip+0x21fb5444],ch        # 0x161ff4632
   14003f1ee:	stc    
   14003f1ef:	(bad)  
   14003f1f0:	add    BYTE PTR [rax],al
   14003f1f2:	add    BYTE PTR [rax],al
   14003f1f4:	add    BYTE PTR [rax],al
   14003f1f6:	add    al,0x40
   14003f1f8:	stos   DWORD PTR es:[rdi],eax
   14003f1f9:	stos   BYTE PTR es:[rdi],al
   14003f1fa:	stos   BYTE PTR es:[rdi],al
   14003f1fb:	stos   BYTE PTR es:[rdi],al
   14003f1fc:	stos   BYTE PTR es:[rdi],al
   14003f1fd:	stos   BYTE PTR es:[rdi],al
   14003f1fe:	or     al,BYTE PTR [rax+0x0]
   14003f201:	add    BYTE PTR [rax],al
   14003f203:	add    BYTE PTR [rax],al
   14003f205:	add    BYTE PTR [rax+rax*2],dl
   14003f208:	add    BYTE PTR [rax],al
   14003f20a:	add    BYTE PTR [rax],al
   14003f20c:	add    BYTE PTR [rax],al
   14003f20e:	and    BYTE PTR [rax+0x63],al
   14003f211:	outs   dx,DWORD PTR ds:[rsi]
   14003f212:	jne    0x14003f286
   14003f214:	add    BYTE PTR [rax],al
   14003f216:	add    BYTE PTR [rax],al
   14003f218:	(bad)  
   14003f219:	jb     0x14003f284
   14003f21b:	(bad)  
   14003f21c:	ins    BYTE PTR es:[rdi],dx
   14003f21d:	add    BYTE PTR [rax],al
   14003f21f:	add    BYTE PTR [rdi+0x72],ah
   14003f222:	(bad)  
   14003f223:	jns    0x14003f258
   14003f225:	xor    DWORD PTR [rax],eax
   14003f227:	add    BYTE PTR [rdi+0x72],ah
   14003f22a:	(bad)  
   14003f22b:	jns    0x14003f260
   14003f22d:	xor    al,BYTE PTR [rax]
   14003f22f:	add    BYTE PTR [rdi+0x72],ah
   14003f232:	(bad)  
   14003f233:	jns    0x14003f268
   14003f235:	xor    eax,DWORD PTR [rax]
   14003f237:	add    BYTE PTR [rdi+0x72],ah
   14003f23a:	(bad)  
   14003f23b:	jns    0x14003f270
   14003f23d:	xor    al,0x0
   14003f23f:	add    BYTE PTR [rdi+0x72],ah
   14003f242:	(bad)  
   14003f243:	jns    0x14003f278
   14003f245:	xor    eax,0x72670000
   14003f24a:	(bad)  
   14003f24b:	jns    0x14003f280
   14003f24d:	add    BYTE PTR ss:[rax],al
   14003f250:	addr32 jb 0x14003f2b4
   14003f253:	jns    0x14003f288
   14003f255:	(bad)  
   14003f256:	add    BYTE PTR [rax],al
   14003f258:	addr32 jb 0x14003f2bc
   14003f25b:	jns    0x14003f290
   14003f25d:	cmp    BYTE PTR [rax],al
   14003f25f:	add    BYTE PTR [rdi+0x72],ah
   14003f262:	(bad)  
   14003f263:	jns    0x14003f298
   14003f265:	cmp    DWORD PTR [rax],eax
   14003f267:	add    BYTE PTR [rdi+0x72],ah
   14003f26a:	(bad)  
   14003f26b:	jns    0x14003f2a1
   14003f26d:	add    BYTE PTR [rax],al
   14003f26f:	add    BYTE PTR [rdi+0x72],ah
   14003f272:	(bad)  
   14003f273:	jns    0x14003f2a9
   14003f275:	xor    BYTE PTR [rax],al
   14003f277:	add    BYTE PTR [rdi+0x72],ah
   14003f27a:	(bad)  
   14003f27b:	jns    0x14003f2b1
   14003f27d:	xor    DWORD PTR [rax],eax
   14003f27f:	add    BYTE PTR [rdi+0x72],ah
   14003f282:	(bad)  
   14003f283:	jns    0x14003f2b9
   14003f285:	xor    al,BYTE PTR [rax]
   14003f287:	add    BYTE PTR [rdi+0x72],ah
   14003f28a:	(bad)  
   14003f28b:	jns    0x14003f2c1
   14003f28d:	xor    eax,DWORD PTR [rax]
   14003f28f:	add    BYTE PTR [rdi+0x72],ah
   14003f292:	(bad)  
   14003f293:	jns    0x14003f2c9
   14003f295:	xor    al,0x0
   14003f297:	add    BYTE PTR [rdi+0x72],ah
   14003f29a:	(bad)  
   14003f29b:	jns    0x14003f2d1
   14003f29d:	xor    eax,0x72670000
   14003f2a2:	(bad)  
   14003f2a3:	jns    0x14003f2d9
   14003f2a5:	add    BYTE PTR ss:[rax],al
   14003f2a8:	addr32 jb 0x14003f30c
   14003f2ab:	jns    0x14003f2e1
   14003f2ad:	(bad)  
   14003f2ae:	add    BYTE PTR [rax],al
   14003f2b0:	addr32 jb 0x14003f314
   14003f2b3:	jns    0x14003f2e9
   14003f2b5:	cmp    BYTE PTR [rax],al
   14003f2b7:	add    BYTE PTR [rdi+0x72],ah
   14003f2ba:	(bad)  
   14003f2bb:	jns    0x14003f2f1
   14003f2bd:	cmp    DWORD PTR [rax],eax
   14003f2bf:	add    BYTE PTR [rdi+0x72],ah
   14003f2c2:	(bad)  
   14003f2c3:	jns    0x14003f2fa
   14003f2c5:	add    BYTE PTR [rax],al
   14003f2c7:	add    BYTE PTR [rdi+0x72],ah
   14003f2ca:	(bad)  
   14003f2cb:	jns    0x14003f302
   14003f2cd:	xor    BYTE PTR [rax],al
   14003f2cf:	add    BYTE PTR [rdi+0x72],ah
   14003f2d2:	(bad)  
   14003f2d3:	jns    0x14003f30a
   14003f2d5:	xor    DWORD PTR [rax],eax
   14003f2d7:	add    BYTE PTR [rdi+0x72],ah
   14003f2da:	(bad)  
   14003f2db:	jns    0x14003f312
   14003f2dd:	xor    al,BYTE PTR [rax]
   14003f2df:	add    BYTE PTR [rdi+0x72],ah
   14003f2e2:	(bad)  
   14003f2e3:	jns    0x14003f31a
   14003f2e5:	xor    eax,DWORD PTR [rax]
   14003f2e7:	add    BYTE PTR [rdi+0x72],ah
   14003f2ea:	(bad)  
   14003f2eb:	jns    0x14003f322
   14003f2ed:	xor    al,0x0
   14003f2ef:	add    BYTE PTR [rdi+0x72],ah
   14003f2f2:	(bad)  
   14003f2f3:	jns    0x14003f32a
   14003f2f5:	xor    eax,0x72670000
   14003f2fa:	(bad)  
   14003f2fb:	jns    0x14003f332
   14003f2fd:	add    BYTE PTR ss:[rax],al
   14003f300:	addr32 jb 0x14003f364
   14003f303:	jns    0x14003f33a
   14003f305:	(bad)  
   14003f306:	add    BYTE PTR [rax],al
   14003f308:	addr32 jb 0x14003f36c
   14003f30b:	jns    0x14003f342
   14003f30d:	cmp    BYTE PTR [rax],al
   14003f30f:	add    BYTE PTR [rdi+0x72],ah
   14003f312:	(bad)  
   14003f313:	jns    0x14003f34a
   14003f315:	cmp    DWORD PTR [rax],eax
   14003f317:	add    BYTE PTR [rdi+0x72],ah
   14003f31a:	(bad)  
   14003f31b:	jns    0x14003f353
   14003f31d:	add    BYTE PTR [rax],al
   14003f31f:	add    BYTE PTR [rdi+0x72],ah
   14003f322:	(bad)  
   14003f323:	jns    0x14003f35b
   14003f325:	xor    BYTE PTR [rax],al
   14003f327:	add    BYTE PTR [rdi+0x72],ah
   14003f32a:	(bad)  
   14003f32b:	jns    0x14003f363
   14003f32d:	xor    DWORD PTR [rax],eax
   14003f32f:	add    BYTE PTR [rdi+0x72],ah
   14003f332:	(bad)  
   14003f333:	jns    0x14003f36b
   14003f335:	xor    al,BYTE PTR [rax]
   14003f337:	add    BYTE PTR [rdi+0x72],ah
   14003f33a:	(bad)  
   14003f33b:	jns    0x14003f373
   14003f33d:	xor    eax,DWORD PTR [rax]
   14003f33f:	add    BYTE PTR [rdi+0x72],ah
   14003f342:	(bad)  
   14003f343:	jns    0x14003f37b
   14003f345:	xor    al,0x0
   14003f347:	add    BYTE PTR [rdi+0x72],ah
   14003f34a:	(bad)  
   14003f34b:	jns    0x14003f383
   14003f34d:	xor    eax,0x72670000
   14003f352:	(bad)  
   14003f353:	jns    0x14003f38b
   14003f355:	add    BYTE PTR ss:[rax],al
   14003f358:	addr32 jb 0x14003f3bc
   14003f35b:	jns    0x14003f393
   14003f35d:	(bad)  
   14003f35e:	add    BYTE PTR [rax],al
   14003f360:	addr32 jb 0x14003f3c4
   14003f363:	jns    0x14003f39b
   14003f365:	cmp    BYTE PTR [rax],al
   14003f367:	add    BYTE PTR [rdi+0x72],ah
   14003f36a:	(bad)  
   14003f36b:	jns    0x14003f3a3
   14003f36d:	cmp    DWORD PTR [rax],eax
   14003f36f:	add    BYTE PTR [rdi+0x72],ah
   14003f372:	(bad)  
   14003f373:	jns    0x14003f3ac
   14003f375:	add    BYTE PTR [rax],al
   14003f377:	add    BYTE PTR [rdi+0x72],ah
   14003f37a:	(bad)  
   14003f37b:	jns    0x14003f3b4
   14003f37d:	xor    BYTE PTR [rax],al
   14003f37f:	add    BYTE PTR [rdi+0x72],ah
   14003f382:	(bad)  
   14003f383:	jns    0x14003f3bc
   14003f385:	xor    DWORD PTR [rax],eax
   14003f387:	add    BYTE PTR [rdi+0x72],ah
   14003f38a:	(bad)  
   14003f38b:	jns    0x14003f3c4
   14003f38d:	xor    al,BYTE PTR [rax]
   14003f38f:	add    BYTE PTR [rdi+0x72],ah
   14003f392:	(bad)  
   14003f393:	jns    0x14003f3cc
   14003f395:	xor    eax,DWORD PTR [rax]
   14003f397:	add    BYTE PTR [rdi+0x72],ah
   14003f39a:	(bad)  
   14003f39b:	jns    0x14003f3d4
   14003f39d:	xor    al,0x0
   14003f39f:	add    BYTE PTR [rdi+0x72],ah
   14003f3a2:	(bad)  
   14003f3a3:	jns    0x14003f3dc
   14003f3a5:	xor    eax,0x72670000
   14003f3aa:	(bad)  
   14003f3ab:	jns    0x14003f3e4
   14003f3ad:	add    BYTE PTR ss:[rax],al
   14003f3b0:	addr32 jb 0x14003f414
   14003f3b3:	jns    0x14003f3ec
   14003f3b5:	(bad)  
   14003f3b6:	add    BYTE PTR [rax],al
   14003f3b8:	addr32 jb 0x14003f41c
   14003f3bb:	jns    0x14003f3f4
   14003f3bd:	cmp    BYTE PTR [rax],al
   14003f3bf:	add    BYTE PTR [rdi+0x72],ah
   14003f3c2:	(bad)  
   14003f3c3:	jns    0x14003f3fc
   14003f3c5:	cmp    DWORD PTR [rax],eax
   14003f3c7:	add    BYTE PTR [rdi+0x72],ah
   14003f3ca:	(bad)  
   14003f3cb:	jns    0x14003f405
   14003f3cd:	add    BYTE PTR [rax],al
   14003f3cf:	add    BYTE PTR [rdi+0x72],ah
   14003f3d2:	(bad)  
   14003f3d3:	jns    0x14003f40d
   14003f3d5:	xor    BYTE PTR [rax],al
   14003f3d7:	add    BYTE PTR [rdi+0x72],ah
   14003f3da:	(bad)  
   14003f3db:	jns    0x14003f415
   14003f3dd:	xor    DWORD PTR [rax],eax
   14003f3df:	add    BYTE PTR [rdi+0x72],ah
   14003f3e2:	(bad)  
   14003f3e3:	jns    0x14003f41d
   14003f3e5:	xor    al,BYTE PTR [rax]
   14003f3e7:	add    BYTE PTR [rdi+0x72],ah
   14003f3ea:	(bad)  
   14003f3eb:	jns    0x14003f425
   14003f3ed:	xor    eax,DWORD PTR [rax]
   14003f3ef:	add    BYTE PTR [rdi+0x72],ah
   14003f3f2:	(bad)  
   14003f3f3:	jns    0x14003f42d
   14003f3f5:	xor    al,0x0
   14003f3f7:	add    BYTE PTR [rdi+0x72],ah
   14003f3fa:	(bad)  
   14003f3fb:	jns    0x14003f435
   14003f3fd:	xor    eax,0x72670000
   14003f402:	(bad)  
   14003f403:	jns    0x14003f43d
   14003f405:	add    BYTE PTR ss:[rax],al
   14003f408:	addr32 jb 0x14003f46c
   14003f40b:	jns    0x14003f445
   14003f40d:	(bad)  
   14003f40e:	add    BYTE PTR [rax],al
   14003f410:	addr32 jb 0x14003f474
   14003f413:	jns    0x14003f44d
   14003f415:	cmp    BYTE PTR [rax],al
   14003f417:	add    BYTE PTR [rdi+0x72],ah
   14003f41a:	(bad)  
   14003f41b:	jns    0x14003f455
   14003f41d:	cmp    DWORD PTR [rax],eax
   14003f41f:	add    BYTE PTR [rdi+0x72],ah
   14003f422:	(bad)  
   14003f423:	jns    0x14003f45e
   14003f425:	add    BYTE PTR [rax],al
   14003f427:	add    BYTE PTR [rdi+0x72],ah
   14003f42a:	(bad)  
   14003f42b:	jns    0x14003f466
   14003f42d:	xor    BYTE PTR [rax],al
   14003f42f:	add    BYTE PTR [rdi+0x72],ah
   14003f432:	(bad)  
   14003f433:	jns    0x14003f46e
   14003f435:	xor    DWORD PTR [rax],eax
   14003f437:	add    BYTE PTR [rdi+0x72],ah
   14003f43a:	(bad)  
   14003f43b:	jns    0x14003f476
   14003f43d:	xor    al,BYTE PTR [rax]
   14003f43f:	add    BYTE PTR [rdi+0x72],ah
   14003f442:	(bad)  
   14003f443:	jns    0x14003f47e
   14003f445:	xor    eax,DWORD PTR [rax]
   14003f447:	add    BYTE PTR [rdi+0x72],ah
   14003f44a:	(bad)  
   14003f44b:	jns    0x14003f486
   14003f44d:	xor    al,0x0
   14003f44f:	add    BYTE PTR [rdi+0x72],ah
   14003f452:	(bad)  
   14003f453:	jns    0x14003f48e
   14003f455:	xor    eax,0x72670000
   14003f45a:	(bad)  
   14003f45b:	jns    0x14003f496
   14003f45d:	add    BYTE PTR ss:[rax],al
   14003f460:	addr32 jb 0x14003f4c4
   14003f463:	jns    0x14003f49e
   14003f465:	(bad)  
   14003f466:	add    BYTE PTR [rax],al
   14003f468:	addr32 jb 0x14003f4cc
   14003f46b:	jns    0x14003f4a6
   14003f46d:	cmp    BYTE PTR [rax],al
   14003f46f:	add    BYTE PTR [rdi+0x72],ah
   14003f472:	(bad)  
   14003f473:	jns    0x14003f4ae
   14003f475:	cmp    DWORD PTR [rax],eax
   14003f477:	add    BYTE PTR [rdi+0x72],ah
   14003f47a:	gs outs dx,BYTE PTR gs:[rsi]
   14003f47d:	add    BYTE PTR [rax],al
   14003f47f:	add    BYTE PTR [rdi+0x72],ah
   14003f482:	gs outs dx,BYTE PTR gs:[rsi]
   14003f485:	xor    DWORD PTR [rax],eax
   14003f487:	add    BYTE PTR [rdi+0x72],ah
   14003f48a:	gs outs dx,BYTE PTR gs:[rsi]
   14003f48d:	xor    al,BYTE PTR [rax]
   14003f48f:	add    BYTE PTR [rdi+0x72],ah
   14003f492:	gs outs dx,BYTE PTR gs:[rsi]
   14003f495:	xor    eax,DWORD PTR [rax]
   14003f497:	add    BYTE PTR [rdi+0x72],ah
   14003f49a:	gs outs dx,BYTE PTR gs:[rsi]
   14003f49d:	xor    al,0x0
   14003f49f:	add    BYTE PTR [rdi+0x72],ah
   14003f4a2:	gs outs dx,BYTE PTR gs:[rsi]
   14003f4a5:	jns    0x14003f50c
   14003f4a7:	ins    BYTE PTR es:[rdi],dx
   14003f4a8:	ins    BYTE PTR es:[rdi],dx
   14003f4a9:	outs   dx,DWORD PTR ds:[rsi]
   14003f4aa:	ja     0x14003f4ac
   14003f4ac:	addr32 jb 0x14003f514
   14003f4af:	jns    0x14003f4b1
   14003f4b1:	add    BYTE PTR [rax],al
   14003f4b3:	add    BYTE PTR [rdi+0x72],ah
   14003f4b6:	gs jns 0x14003f4e9
   14003f4b9:	add    BYTE PTR [rax],al
   14003f4bb:	add    BYTE PTR [rdi+0x72],ah
   14003f4be:	gs jns 0x14003f4f2
   14003f4c1:	add    BYTE PTR [rax],al
   14003f4c3:	add    BYTE PTR [rdi+0x72],ah
   14003f4c6:	gs jns 0x14003f4fa
   14003f4c9:	xor    BYTE PTR [rax],al
   14003f4cb:	add    BYTE PTR [rax],al
   14003f4cd:	add    BYTE PTR [rax],al
   14003f4cf:	add    BYTE PTR [rdi+0x72],ah
   14003f4d2:	gs jns 0x14003f506
   14003f4d5:	xor    BYTE PTR [rax],dh
   14003f4d7:	add    BYTE PTR [rdi+0x72],ah
   14003f4da:	gs jns 0x14003f50e
   14003f4dd:	xor    DWORD PTR [rax],eax
   14003f4df:	add    BYTE PTR [rdi+0x72],ah
   14003f4e2:	gs jns 0x14003f516
   14003f4e5:	xor    al,BYTE PTR [rax]
   14003f4e7:	add    BYTE PTR [rdi+0x72],ah
   14003f4ea:	gs jns 0x14003f51e
   14003f4ed:	xor    eax,DWORD PTR [rax]
   14003f4ef:	add    BYTE PTR [rdi+0x72],ah
   14003f4f2:	gs jns 0x14003f526
   14003f4f5:	xor    al,0x0
   14003f4f7:	add    BYTE PTR [rdi+0x72],ah
   14003f4fa:	gs jns 0x14003f52e
   14003f4fd:	xor    eax,0x72670000
   14003f502:	gs jns 0x14003f536
   14003f505:	add    BYTE PTR ss:[rax],al
   14003f508:	addr32 jb 0x14003f570
   14003f50b:	jns    0x14003f53e
   14003f50d:	(bad)  
   14003f50e:	add    BYTE PTR [rax],al
   14003f510:	addr32 jb 0x14003f578
   14003f513:	jns    0x14003f546
   14003f515:	cmp    BYTE PTR [rax],al
   14003f517:	add    BYTE PTR [rdi+0x72],ah
   14003f51a:	gs jns 0x14003f54e
   14003f51d:	cmp    DWORD PTR [rax],eax
   14003f51f:	add    BYTE PTR [rdi+0x72],ah
   14003f522:	gs jns 0x14003f557
   14003f525:	add    BYTE PTR [rax],al
   14003f527:	add    BYTE PTR [rdi+0x72],ah
   14003f52a:	gs jns 0x14003f55f
   14003f52d:	xor    BYTE PTR [rax],al
   14003f52f:	add    BYTE PTR [rdi+0x72],ah
   14003f532:	gs jns 0x14003f567
   14003f535:	xor    DWORD PTR [rax],eax
   14003f537:	add    BYTE PTR [rdi+0x72],ah
   14003f53a:	gs jns 0x14003f56f
   14003f53d:	xor    al,BYTE PTR [rax]
   14003f53f:	add    BYTE PTR [rdi+0x72],ah
   14003f542:	gs jns 0x14003f577
   14003f545:	xor    eax,DWORD PTR [rax]
   14003f547:	add    BYTE PTR [rdi+0x72],ah
   14003f54a:	gs jns 0x14003f57f
   14003f54d:	xor    al,0x0
   14003f54f:	add    BYTE PTR [rdi+0x72],ah
   14003f552:	gs jns 0x14003f587
   14003f555:	xor    eax,0x72670000
   14003f55a:	gs jns 0x14003f58f
   14003f55d:	add    BYTE PTR ss:[rax],al
   14003f560:	addr32 jb 0x14003f5c8
   14003f563:	jns    0x14003f597
   14003f565:	(bad)  
   14003f566:	add    BYTE PTR [rax],al
   14003f568:	addr32 jb 0x14003f5d0
   14003f56b:	jns    0x14003f59f
   14003f56d:	cmp    BYTE PTR [rax],al
   14003f56f:	add    BYTE PTR [rdi+0x72],ah
   14003f572:	gs jns 0x14003f5a7
   14003f575:	cmp    DWORD PTR [rax],eax
   14003f577:	add    BYTE PTR [rdi+0x72],ah
   14003f57a:	gs jns 0x14003f5b0
   14003f57d:	add    BYTE PTR [rax],al
   14003f57f:	add    BYTE PTR [rdi+0x72],ah
   14003f582:	gs jns 0x14003f5b8
   14003f585:	xor    BYTE PTR [rax],al
   14003f587:	add    BYTE PTR [rdi+0x72],ah
   14003f58a:	gs jns 0x14003f5c0
   14003f58d:	xor    DWORD PTR [rax],eax
   14003f58f:	add    BYTE PTR [rdi+0x72],ah
   14003f592:	gs jns 0x14003f5c8
   14003f595:	xor    al,BYTE PTR [rax]
   14003f597:	add    BYTE PTR [rdi+0x72],ah
   14003f59a:	gs jns 0x14003f5d0
   14003f59d:	xor    eax,DWORD PTR [rax]
   14003f59f:	add    BYTE PTR [rdi+0x72],ah
   14003f5a2:	gs jns 0x14003f5d8
   14003f5a5:	xor    al,0x0
   14003f5a7:	add    BYTE PTR [rdi+0x72],ah
   14003f5aa:	gs jns 0x14003f5e0
   14003f5ad:	xor    eax,0x72670000
   14003f5b2:	gs jns 0x14003f5e8
   14003f5b5:	add    BYTE PTR ss:[rax],al
   14003f5b8:	addr32 jb 0x14003f620
   14003f5bb:	jns    0x14003f5f0
   14003f5bd:	(bad)  
   14003f5be:	add    BYTE PTR [rax],al
   14003f5c0:	addr32 jb 0x14003f628
   14003f5c3:	jns    0x14003f5f8
   14003f5c5:	cmp    BYTE PTR [rax],al
   14003f5c7:	add    BYTE PTR [rdi+0x72],ah
   14003f5ca:	gs jns 0x14003f600
   14003f5cd:	cmp    DWORD PTR [rax],eax
   14003f5cf:	add    BYTE PTR [rdi+0x72],ah
   14003f5d2:	gs jns 0x14003f609
   14003f5d5:	add    BYTE PTR [rax],al
   14003f5d7:	add    BYTE PTR [rdi+0x72],ah
   14003f5da:	gs jns 0x14003f611
   14003f5dd:	xor    BYTE PTR [rax],al
   14003f5df:	add    BYTE PTR [rdi+0x72],ah
   14003f5e2:	gs jns 0x14003f619
   14003f5e5:	xor    DWORD PTR [rax],eax
   14003f5e7:	add    BYTE PTR [rdi+0x72],ah
   14003f5ea:	gs jns 0x14003f621
   14003f5ed:	xor    al,BYTE PTR [rax]
   14003f5ef:	add    BYTE PTR [rdi+0x72],ah
   14003f5f2:	gs jns 0x14003f629
   14003f5f5:	xor    eax,DWORD PTR [rax]
   14003f5f7:	add    BYTE PTR [rdi+0x72],ah
   14003f5fa:	gs jns 0x14003f631
   14003f5fd:	xor    al,0x0
   14003f5ff:	add    BYTE PTR [rdi+0x72],ah
   14003f602:	gs jns 0x14003f639
   14003f605:	xor    eax,0x72670000
   14003f60a:	gs jns 0x14003f641
   14003f60d:	add    BYTE PTR ss:[rax],al
   14003f610:	addr32 jb 0x14003f678
   14003f613:	jns    0x14003f649
   14003f615:	(bad)  
   14003f616:	add    BYTE PTR [rax],al
   14003f618:	addr32 jb 0x14003f680
   14003f61b:	jns    0x14003f651
   14003f61d:	cmp    BYTE PTR [rax],al
   14003f61f:	add    BYTE PTR [rdi+0x72],ah
   14003f622:	gs jns 0x14003f659
   14003f625:	cmp    DWORD PTR [rax],eax
   14003f627:	add    BYTE PTR [rdi+0x72],ah
   14003f62a:	gs jns 0x14003f662
   14003f62d:	add    BYTE PTR [rax],al
   14003f62f:	add    BYTE PTR [rdi+0x72],ah
   14003f632:	gs jns 0x14003f66a
   14003f635:	xor    BYTE PTR [rax],al
   14003f637:	add    BYTE PTR [rdi+0x72],ah
   14003f63a:	gs jns 0x14003f672
   14003f63d:	xor    DWORD PTR [rax],eax
   14003f63f:	add    BYTE PTR [rdi+0x72],ah
   14003f642:	gs jns 0x14003f67a
   14003f645:	xor    al,BYTE PTR [rax]
   14003f647:	add    BYTE PTR [rdi+0x72],ah
   14003f64a:	gs jns 0x14003f682
   14003f64d:	xor    eax,DWORD PTR [rax]
   14003f64f:	add    BYTE PTR [rdi+0x72],ah
   14003f652:	gs jns 0x14003f68a
   14003f655:	xor    al,0x0
   14003f657:	add    BYTE PTR [rdi+0x72],ah
   14003f65a:	gs jns 0x14003f692
   14003f65d:	xor    eax,0x72670000
   14003f662:	gs jns 0x14003f69a
   14003f665:	add    BYTE PTR ss:[rax],al
   14003f668:	addr32 jb 0x14003f6d0
   14003f66b:	jns    0x14003f6a2
   14003f66d:	(bad)  
   14003f66e:	add    BYTE PTR [rax],al
   14003f670:	addr32 jb 0x14003f6d8
   14003f673:	jns    0x14003f6aa
   14003f675:	cmp    BYTE PTR [rax],al
   14003f677:	add    BYTE PTR [rdi+0x72],ah
   14003f67a:	gs jns 0x14003f6b2
   14003f67d:	cmp    DWORD PTR [rax],eax
   14003f67f:	add    BYTE PTR [rdi+0x72],ah
   14003f682:	gs jns 0x14003f6bb
   14003f685:	add    BYTE PTR [rax],al
   14003f687:	add    BYTE PTR [rdi+0x72],ah
   14003f68a:	gs jns 0x14003f6c3
   14003f68d:	xor    BYTE PTR [rax],al
   14003f68f:	add    BYTE PTR [rdi+0x72],ah
   14003f692:	gs jns 0x14003f6cb
   14003f695:	xor    DWORD PTR [rax],eax
   14003f697:	add    BYTE PTR [rdi+0x72],ah
   14003f69a:	gs jns 0x14003f6d3
   14003f69d:	xor    al,BYTE PTR [rax]
   14003f69f:	add    BYTE PTR [rdi+0x72],ah
   14003f6a2:	gs jns 0x14003f6db
   14003f6a5:	xor    eax,DWORD PTR [rax]
   14003f6a7:	add    BYTE PTR [rdi+0x72],ah
   14003f6aa:	gs jns 0x14003f6e3
   14003f6ad:	xor    al,0x0
   14003f6af:	add    BYTE PTR [rdi+0x72],ah
   14003f6b2:	gs jns 0x14003f6eb
   14003f6b5:	xor    eax,0x72670000
   14003f6ba:	gs jns 0x14003f6f3
   14003f6bd:	add    BYTE PTR ss:[rax],al
   14003f6c0:	addr32 jb 0x14003f728
   14003f6c3:	jns    0x14003f6fb
   14003f6c5:	(bad)  
   14003f6c6:	add    BYTE PTR [rax],al
   14003f6c8:	addr32 jb 0x14003f730
   14003f6cb:	jns    0x14003f703
   14003f6cd:	cmp    BYTE PTR [rax],al
   14003f6cf:	add    BYTE PTR [rdi+0x72],ah
   14003f6d2:	gs jns 0x14003f70b
   14003f6d5:	cmp    DWORD PTR [rax],eax
   14003f6d7:	add    BYTE PTR [rdi+0x72],ah
   14003f6da:	gs jns 0x14003f714
   14003f6dd:	add    BYTE PTR [rax],al
   14003f6df:	add    BYTE PTR [rdi+0x72],ah
   14003f6e2:	gs jns 0x14003f71c
   14003f6e5:	xor    BYTE PTR [rax],al
   14003f6e7:	add    BYTE PTR [rdi+0x72],ah
   14003f6ea:	gs jns 0x14003f724
   14003f6ed:	xor    DWORD PTR [rax],eax
   14003f6ef:	add    BYTE PTR [rdi+0x72],ah
   14003f6f2:	gs jns 0x14003f72c
   14003f6f5:	xor    al,BYTE PTR [rax]
   14003f6f7:	add    BYTE PTR [rdi+0x72],ah
   14003f6fa:	gs jns 0x14003f734
   14003f6fd:	xor    eax,DWORD PTR [rax]
   14003f6ff:	add    BYTE PTR [rdi+0x72],ah
   14003f702:	gs jns 0x14003f73c
   14003f705:	xor    al,0x0
   14003f707:	add    BYTE PTR [rdi+0x72],ah
   14003f70a:	gs jns 0x14003f744
   14003f70d:	xor    eax,0x72670000
   14003f712:	gs jns 0x14003f74c
   14003f715:	add    BYTE PTR ss:[rax],al
   14003f718:	addr32 jb 0x14003f780
   14003f71b:	jns    0x14003f754
   14003f71d:	(bad)  
   14003f71e:	add    BYTE PTR [rax],al
   14003f720:	addr32 jb 0x14003f788
   14003f723:	jns    0x14003f75c
   14003f725:	cmp    BYTE PTR [rax],al
   14003f727:	add    BYTE PTR [rdi+0x72],ah
   14003f72a:	gs jns 0x14003f764
   14003f72d:	cmp    DWORD PTR [rax],eax
   14003f72f:	add    BYTE PTR [rdi+0x72],ah
   14003f732:	gs jns 0x14003f76d
   14003f735:	add    BYTE PTR [rax],al
   14003f737:	add    BYTE PTR [rdi+0x72],ah
   14003f73a:	gs jns 0x14003f775
   14003f73d:	xor    BYTE PTR [rax],al
   14003f73f:	add    BYTE PTR [rdi+0x72],ah
   14003f742:	gs jns 0x14003f77d
   14003f745:	xor    DWORD PTR [rax],eax
   14003f747:	add    BYTE PTR [rdi+0x72],ah
   14003f74a:	gs jns 0x14003f785
   14003f74d:	xor    al,BYTE PTR [rax]
   14003f74f:	add    BYTE PTR [rdi+0x72],ah
   14003f752:	gs jns 0x14003f78d
   14003f755:	xor    eax,DWORD PTR [rax]
   14003f757:	add    BYTE PTR [rdi+0x72],ah
   14003f75a:	gs jns 0x14003f795
   14003f75d:	xor    al,0x0
   14003f75f:	add    BYTE PTR [rdi+0x72],ah
   14003f762:	gs jns 0x14003f79d
   14003f765:	xor    eax,0x72670000
   14003f76a:	gs jns 0x14003f7a5
   14003f76d:	add    BYTE PTR ss:[rax],al
   14003f770:	addr32 jb 0x14003f7d8
   14003f773:	jns    0x14003f7ad
   14003f775:	(bad)  
   14003f776:	add    BYTE PTR [rax],al
   14003f778:	addr32 jb 0x14003f7e0
   14003f77b:	jns    0x14003f7b5
   14003f77d:	cmp    BYTE PTR [rax],al
   14003f77f:	add    BYTE PTR [rdi+0x72],ah
   14003f782:	gs jns 0x14003f7bd
   14003f785:	cmp    DWORD PTR [rax],eax
   14003f787:	add    BYTE PTR [rdi+0x72],ah
   14003f78a:	gs jns 0x14003f7c6
   14003f78d:	add    BYTE PTR [rax],al
   14003f78f:	add    BYTE PTR [rdi+0x72],ah
   14003f792:	gs jns 0x14003f7ce
   14003f795:	xor    BYTE PTR [rax],al
   14003f797:	add    BYTE PTR [rdi+0x72],ah
   14003f79a:	gs jns 0x14003f7d6
   14003f79d:	xor    DWORD PTR [rax],eax
   14003f79f:	add    BYTE PTR [rdi+0x72],ah
   14003f7a2:	gs jns 0x14003f7de
   14003f7a5:	xor    al,BYTE PTR [rax]
   14003f7a7:	add    BYTE PTR [rdi+0x72],ah
   14003f7aa:	gs jns 0x14003f7e6
   14003f7ad:	xor    eax,DWORD PTR [rax]
   14003f7af:	add    BYTE PTR [rdi+0x72],ah
   14003f7b2:	gs jns 0x14003f7ee
   14003f7b5:	xor    al,0x0
   14003f7b7:	add    BYTE PTR [rdi+0x72],ah
   14003f7ba:	gs jns 0x14003f7f6
   14003f7bd:	xor    eax,0x72670000
   14003f7c2:	gs jns 0x14003f7fe
   14003f7c5:	add    BYTE PTR ss:[rax],al
   14003f7c8:	addr32 jb 0x14003f830
   14003f7cb:	jns    0x14003f806
   14003f7cd:	(bad)  
   14003f7ce:	add    BYTE PTR [rax],al
   14003f7d0:	addr32 jb 0x14003f838
   14003f7d3:	jns    0x14003f80e
   14003f7d5:	cmp    BYTE PTR [rax],al
   14003f7d7:	add    BYTE PTR [rdi+0x72],ah
   14003f7da:	gs jns 0x14003f816
   14003f7dd:	cmp    DWORD PTR [rax],eax
   14003f7df:	add    BYTE PTR [rax+0x6f],ch
   14003f7e2:	outs   dx,BYTE PTR ds:[rsi]
   14003f7e3:	gs jns 0x14003f84a
   14003f7e6:	gs ja  0x14003f7e9
   14003f7e9:	add    BYTE PTR [rax],al
   14003f7eb:	add    BYTE PTR [rax],al
   14003f7ed:	add    BYTE PTR [rax],al
   14003f7ef:	add    BYTE PTR [rax+0x6f],ch
   14003f7f2:	outs   dx,BYTE PTR ds:[rsi]
   14003f7f3:	gs jns 0x14003f85a
   14003f7f6:	gs ja  0x14003f82a
   14003f7f9:	add    BYTE PTR [rax],al
   14003f7fb:	add    BYTE PTR [rax],al
   14003f7fd:	add    BYTE PTR [rax],al
   14003f7ff:	add    BYTE PTR [rax+0x6f],ch
   14003f802:	outs   dx,BYTE PTR ds:[rsi]
   14003f803:	gs jns 0x14003f86a
   14003f806:	gs ja  0x14003f83b
   14003f809:	add    BYTE PTR [rax],al
   14003f80b:	add    BYTE PTR [rax],al
   14003f80d:	add    BYTE PTR [rax],al
   14003f80f:	add    BYTE PTR [rax+0x6f],ch
   14003f812:	outs   dx,BYTE PTR ds:[rsi]
   14003f813:	gs jns 0x14003f87a
   14003f816:	gs ja  0x14003f84c
   14003f819:	add    BYTE PTR [rax],al
   14003f81b:	add    BYTE PTR [rax],al
   14003f81d:	add    BYTE PTR [rax],al
   14003f81f:	add    BYTE PTR [rax+0x6f],ch
   14003f822:	outs   dx,BYTE PTR ds:[rsi]
   14003f823:	gs jns 0x14003f88a
   14003f826:	gs ja  0x14003f85d
   14003f829:	add    BYTE PTR [rax],al
   14003f82b:	add    BYTE PTR [rax],al
   14003f82d:	add    BYTE PTR [rax],al
   14003f82f:	add    BYTE PTR [rax+0x6f],ch
   14003f832:	je     0x14003f8a4
   14003f834:	imul   ebp,DWORD PTR [rsi+0x6b],0x746f6800
   14003f83b:	jo     0x14003f8a6
   14003f83d:	outs   dx,BYTE PTR ds:[rsi]
   14003f83e:	imul   esi,DWORD PTR [rcx],0x0
   14003f841:	add    BYTE PTR [rax],al
   14003f843:	add    BYTE PTR [rax],al
   14003f845:	add    BYTE PTR [rax],al
   14003f847:	add    BYTE PTR [rax+0x6f],ch
   14003f84a:	je     0x14003f8bc
   14003f84c:	imul   ebp,DWORD PTR [rsi+0x6b],0x32
   14003f853:	add    BYTE PTR [rax],al
   14003f855:	add    BYTE PTR [rax],al
   14003f857:	add    BYTE PTR [rax+0x6f],ch
   14003f85a:	je     0x14003f8cc
   14003f85c:	imul   ebp,DWORD PTR [rsi+0x6b],0x33
   14003f863:	add    BYTE PTR [rax],al
   14003f865:	add    BYTE PTR [rax],al
   14003f867:	add    BYTE PTR [rax+0x6f],ch
   14003f86a:	je     0x14003f8dc
   14003f86c:	imul   ebp,DWORD PTR [rsi+0x6b],0x34
   14003f873:	add    BYTE PTR [rax],al
   14003f875:	add    BYTE PTR [rax],al
   14003f877:	add    BYTE PTR [rcx+0x6e],ch
   14003f87a:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x646572
   14003f882:	add    BYTE PTR [rax],al
   14003f884:	add    BYTE PTR [rax],al
   14003f886:	add    BYTE PTR [rax],al
   14003f888:	imul   ebp,DWORD PTR [rsi+0x64],0x726e6169
   14003f88f:	gs xor DWORD PTR fs:[rax],eax
   14003f893:	add    BYTE PTR [rax],al
   14003f895:	add    BYTE PTR [rax],al
   14003f897:	add    BYTE PTR [rcx+0x6e],ch
   14003f89a:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x32646572
   14003f8a2:	add    BYTE PTR [rax],al
   14003f8a4:	add    BYTE PTR [rax],al
   14003f8a6:	add    BYTE PTR [rax],al
   14003f8a8:	imul   ebp,DWORD PTR [rsi+0x64],0x726e6169
   14003f8af:	gs xor eax,DWORD PTR fs:[rax]
   14003f8b3:	add    BYTE PTR [rax],al
   14003f8b5:	add    BYTE PTR [rax],al
   14003f8b7:	add    BYTE PTR [rcx+0x6e],ch
   14003f8ba:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x34646572
   14003f8c2:	add    BYTE PTR [rax],al
   14003f8c4:	imul   ebp,DWORD PTR [rsi+0x64],0x6f6769
   14003f8cb:	add    BYTE PTR [rcx+0x76],ch
   14003f8ce:	outs   dx,DWORD PTR ds:[rsi]
   14003f8cf:	jb     0x14003f94a
   14003f8d1:	add    BYTE PTR [rax],al
   14003f8d3:	add    BYTE PTR [rcx+0x76],ch
   14003f8d6:	outs   dx,DWORD PTR ds:[rsi]
   14003f8d7:	jb     0x14003f952
   14003f8d9:	xor    DWORD PTR [rax],eax
   14003f8db:	add    BYTE PTR [rcx+0x76],ch
   14003f8de:	outs   dx,DWORD PTR ds:[rsi]
   14003f8df:	jb     0x14003f95a
   14003f8e1:	xor    al,BYTE PTR [rax]
   14003f8e3:	add    BYTE PTR [rcx+0x76],ch
   14003f8e6:	outs   dx,DWORD PTR ds:[rsi]
   14003f8e7:	jb     0x14003f962
   14003f8e9:	xor    eax,DWORD PTR [rax]
   14003f8eb:	add    BYTE PTR [rcx+0x76],ch
   14003f8ee:	outs   dx,DWORD PTR ds:[rsi]
   14003f8ef:	jb     0x14003f96a
   14003f8f1:	xor    al,0x0
   14003f8f3:	add    BYTE PTR [rbx+0x68],ch
   14003f8f6:	(bad)  
   14003f8f7:	imul   ebp,DWORD PTR [rcx+0x0],0x0
   14003f8fb:	add    BYTE PTR [rbx+0x68],ch
   14003f8fe:	(bad)  
   14003f8ff:	imul   ebp,DWORD PTR [rcx+0x31],0x0
   14003f903:	add    BYTE PTR [rbx+0x68],ch
   14003f906:	(bad)  
   14003f907:	imul   ebp,DWORD PTR [rcx+0x32],0x0
   14003f90b:	add    BYTE PTR [rbx+0x68],ch
   14003f90e:	(bad)  
   14003f90f:	imul   ebp,DWORD PTR [rcx+0x33],0x0
   14003f913:	add    BYTE PTR [rbx+0x68],ch
   14003f916:	(bad)  
   14003f917:	imul   ebp,DWORD PTR [rcx+0x34],0x0
   14003f91b:	add    BYTE PTR [rax],al
   14003f91d:	add    BYTE PTR [rax],al
   14003f91f:	add    BYTE PTR [rcx+riz*2+0x76],ch
   14003f923:	outs   dx,BYTE PTR gs:[rsi]
   14003f925:	fs gs jb 0x14003f929
   14003f929:	add    BYTE PTR [rax],al
   14003f92b:	add    BYTE PTR [rax],al
   14003f92d:	add    BYTE PTR [rax],al
   14003f92f:	add    BYTE PTR [rcx+riz*2+0x76],ch
   14003f933:	outs   dx,BYTE PTR gs:[rsi]
   14003f935:	fs gs jb 0x14003f99b
   14003f939:	ins    BYTE PTR es:[rdi],dx
   14003f93a:	jne    0x14003f9af
   14003f93c:	push   0x6c000000
   14003f941:	(bad)  
   14003f942:	jbe    0x14003f9a9
   14003f944:	outs   dx,BYTE PTR ds:[rsi]
   14003f945:	fs gs jb 0x14003f9ab
   14003f949:	ins    BYTE PTR es:[rdi],dx
   14003f94a:	jne    0x14003f9bf
   14003f94c:	push   0x6c000031
   14003f951:	(bad)  
   14003f952:	jbe    0x14003f9b9
   14003f954:	outs   dx,BYTE PTR ds:[rsi]
   14003f955:	fs gs jb 0x14003f9bb
   14003f959:	ins    BYTE PTR es:[rdi],dx
   14003f95a:	jne    0x14003f9cf
   14003f95c:	push   0x6c000032
   14003f961:	(bad)  
   14003f962:	jbe    0x14003f9c9
   14003f964:	outs   dx,BYTE PTR ds:[rsi]
   14003f965:	fs gs jb 0x14003f9cb
   14003f969:	ins    BYTE PTR es:[rdi],dx
   14003f96a:	jne    0x14003f9df
   14003f96c:	push   0x6c000033
   14003f971:	(bad)  
   14003f972:	jbe    0x14003f9d9
   14003f974:	outs   dx,BYTE PTR ds:[rsi]
   14003f975:	fs gs jb 0x14003f9db
   14003f979:	ins    BYTE PTR es:[rdi],dx
   14003f97a:	jne    0x14003f9ef
   14003f97c:	push   0x6c000034
   14003f981:	(bad)  
   14003f982:	ja     0x14003f9f2
   14003f984:	addr32 jb 0x14003f9ec
   14003f987:	outs   dx,BYTE PTR gs:[rsi]
   14003f989:	add    BYTE PTR [rax],al
   14003f98b:	add    BYTE PTR [rax],al
   14003f98d:	add    BYTE PTR [rax],al
   14003f98f:	add    BYTE PTR [rbp+riz*2+0x6d],ch
   14003f993:	outs   dx,DWORD PTR ds:[rsi]
   14003f994:	outs   dx,BYTE PTR ds:[rsi]
   14003f995:	movsxd ebp,DWORD PTR [rax+0x69]
   14003f998:	data16 outs dx,WORD PTR ds:[rsi]
   14003f99b:	outs   dx,BYTE PTR ds:[rsi]
   14003f99c:	add    BYTE PTR [rax],al
   14003f99e:	add    BYTE PTR [rax],al
   14003f9a0:	ins    BYTE PTR es:[rdi],dx
   14003f9a1:	gs ins DWORD PTR es:[rdi],dx
   14003f9a3:	outs   dx,DWORD PTR ds:[rsi]
   14003f9a4:	outs   dx,BYTE PTR ds:[rsi]
   14003f9a5:	movsxd ebp,DWORD PTR [rax+0x69]
   14003f9a8:	data16 outs dx,WORD PTR ds:[rsi]
   14003f9ab:	outs   dx,BYTE PTR ds:[rsi]
   14003f9ac:	xor    DWORD PTR [rax],eax
   14003f9ae:	add    BYTE PTR [rax],al
   14003f9b0:	ins    BYTE PTR es:[rdi],dx
   14003f9b1:	gs ins DWORD PTR es:[rdi],dx
   14003f9b3:	outs   dx,DWORD PTR ds:[rsi]
   14003f9b4:	outs   dx,BYTE PTR ds:[rsi]
   14003f9b5:	movsxd ebp,DWORD PTR [rax+0x69]
   14003f9b8:	data16 outs dx,WORD PTR ds:[rsi]
   14003f9bb:	outs   dx,BYTE PTR ds:[rsi]
   14003f9bc:	xor    al,BYTE PTR [rax]
   14003f9be:	add    BYTE PTR [rax],al
   14003f9c0:	ins    BYTE PTR es:[rdi],dx
   14003f9c1:	gs ins DWORD PTR es:[rdi],dx
   14003f9c3:	outs   dx,DWORD PTR ds:[rsi]
   14003f9c4:	outs   dx,BYTE PTR ds:[rsi]
   14003f9c5:	movsxd ebp,DWORD PTR [rax+0x69]
   14003f9c8:	data16 outs dx,WORD PTR ds:[rsi]
   14003f9cb:	outs   dx,BYTE PTR ds:[rsi]
   14003f9cc:	xor    eax,DWORD PTR [rax]
   14003f9ce:	add    BYTE PTR [rax],al
   14003f9d0:	ins    BYTE PTR es:[rdi],dx
   14003f9d1:	gs ins DWORD PTR es:[rdi],dx
   14003f9d3:	outs   dx,DWORD PTR ds:[rsi]
   14003f9d4:	outs   dx,BYTE PTR ds:[rsi]
   14003f9d5:	movsxd ebp,DWORD PTR [rax+0x69]
   14003f9d8:	data16 outs dx,WORD PTR ds:[rsi]
   14003f9db:	outs   dx,BYTE PTR ds:[rsi]
   14003f9dc:	xor    al,0x0
   14003f9de:	add    BYTE PTR [rax],al
   14003f9e0:	ins    BYTE PTR es:[rdi],dx
   14003f9e1:	imul   esp,DWORD PTR [rdi+0x68],0x756c6274
   14003f9e8:	add    BYTE PTR gs:[rax],al
   14003f9eb:	add    BYTE PTR [rax],al
   14003f9ed:	add    BYTE PTR [rax],al
   14003f9ef:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003f9f3:	push   0x756c6274
   14003f9f8:	xor    DWORD PTR gs:[rax],eax
   14003f9fb:	add    BYTE PTR [rax],al
   14003f9fd:	add    BYTE PTR [rax],al
   14003f9ff:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fa03:	push   0x756c6274
   14003fa08:	xor    al,BYTE PTR gs:[rax]
   14003fa0b:	add    BYTE PTR [rax],al
   14003fa0d:	add    BYTE PTR [rax],al
   14003fa0f:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fa13:	push   0x756c6274
   14003fa18:	xor    eax,DWORD PTR gs:[rax]
   14003fa1b:	add    BYTE PTR [rax],al
   14003fa1d:	add    BYTE PTR [rax],al
   14003fa1f:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fa23:	push   0x756c6274
   14003fa28:	gs xor al,0x0
   14003fa2b:	add    BYTE PTR [rax],al
   14003fa2d:	add    BYTE PTR [rax],al
   14003fa2f:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fa33:	push   0x726f6374
   14003fa38:	(bad)  
   14003fa39:	ins    BYTE PTR es:[rdi],dx
   14003fa3a:	add    BYTE PTR [rax],al
   14003fa3c:	add    BYTE PTR [rax],al
   14003fa3e:	add    BYTE PTR [rax],al
   14003fa40:	ins    BYTE PTR es:[rdi],dx
   14003fa41:	imul   esp,DWORD PTR [rdi+0x68],0x61796374
   14003fa48:	outs   dx,BYTE PTR ds:[rsi]
   14003fa49:	add    BYTE PTR [rax],al
   14003fa4b:	add    BYTE PTR [rax],al
   14003fa4d:	add    BYTE PTR [rax],al
   14003fa4f:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fa53:	push   0x61796374
   14003fa58:	outs   dx,BYTE PTR ds:[rsi]
   14003fa59:	xor    DWORD PTR [rax],eax
   14003fa5b:	add    BYTE PTR [rax],al
   14003fa5d:	add    BYTE PTR [rax],al
   14003fa5f:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fa63:	push   0x61796374
   14003fa68:	outs   dx,BYTE PTR ds:[rsi]
   14003fa69:	xor    al,BYTE PTR [rax]
   14003fa6b:	add    BYTE PTR [rax],al
   14003fa6d:	add    BYTE PTR [rax],al
   14003fa6f:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fa73:	push   0x61796374
   14003fa78:	outs   dx,BYTE PTR ds:[rsi]
   14003fa79:	xor    eax,DWORD PTR [rax]
   14003fa7b:	add    BYTE PTR [rax],al
   14003fa7d:	add    BYTE PTR [rax],al
   14003fa7f:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fa83:	push   0x61796374
   14003fa88:	outs   dx,BYTE PTR ds:[rsi]
   14003fa89:	xor    al,0x0
   14003fa8b:	add    BYTE PTR [rax],al
   14003fa8d:	add    BYTE PTR [rax],al
   14003fa8f:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fa93:	push   0x6c6f6774
   14003fa98:	fs outs dx,BYTE PTR gs:[rsi]
   14003fa9b:	jb     0x14003fb0c
   14003fa9d:	add    BYTE PTR fs:[rax],al
   14003faa0:	ins    BYTE PTR es:[rdi],dx
   14003faa1:	imul   esp,DWORD PTR [rdi+0x68],0x6c6f6774
   14003faa8:	fs outs dx,BYTE PTR gs:[rsi]
   14003faab:	jb     0x14003fb1c
   14003faad:	xor    DWORD PTR fs:[rax],eax
   14003fab0:	ins    BYTE PTR es:[rdi],dx
   14003fab1:	imul   esp,DWORD PTR [rdi+0x68],0x6c6f6774
   14003fab8:	fs outs dx,BYTE PTR gs:[rsi]
   14003fabb:	jb     0x14003fb2c
   14003fabd:	xor    al,BYTE PTR fs:[rax]
   14003fac0:	ins    BYTE PTR es:[rdi],dx
   14003fac1:	imul   esp,DWORD PTR [rdi+0x68],0x6c6f6774
   14003fac8:	fs outs dx,BYTE PTR gs:[rsi]
   14003facb:	jb     0x14003fb3c
   14003facd:	xor    eax,DWORD PTR fs:[rax]
   14003fad0:	ins    BYTE PTR es:[rdi],dx
   14003fad1:	imul   esp,DWORD PTR [rdi+0x68],0x6c6f6774
   14003fad8:	fs outs dx,BYTE PTR gs:[rsi]
   14003fadb:	jb     0x14003fb4c
   14003fadd:	fs xor al,0x0
   14003fae0:	ins    BYTE PTR es:[rdi],dx
   14003fae1:	imul   esp,DWORD PTR [rdi+0x68],0x6c6f6774
   14003fae8:	fs outs dx,BYTE PTR gs:[rsi]
   14003faeb:	jb     0x14003fb5c
   14003faed:	fs jns 0x14003fb55
   14003faf0:	ins    BYTE PTR es:[rdi],dx
   14003faf1:	ins    BYTE PTR es:[rdi],dx
   14003faf2:	outs   dx,DWORD PTR ds:[rsi]
   14003faf3:	ja     0x14003faf5
   14003faf5:	add    BYTE PTR [rax],al
   14003faf7:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fafb:	push   0x61726774
   14003fb00:	jns    0x14003fb02
   14003fb02:	add    BYTE PTR [rax],al
   14003fb04:	add    BYTE PTR [rax],al
   14003fb06:	add    BYTE PTR [rax],al
   14003fb08:	ins    BYTE PTR es:[rdi],dx
   14003fb09:	imul   esp,DWORD PTR [rdi+0x68],0x6e697074
   14003fb10:	imul   eax,DWORD PTR [rax],0x0
   14003fb13:	add    BYTE PTR [rax],al
   14003fb15:	add    BYTE PTR [rax],al
   14003fb17:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fb1b:	push   0x6e697074
   14003fb20:	imul   esi,DWORD PTR [rcx],0x0
   14003fb23:	add    BYTE PTR [rax],al
   14003fb25:	add    BYTE PTR [rax],al
   14003fb27:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fb2b:	push   0x6e697074
   14003fb30:	imul   esi,DWORD PTR [rdx],0x0
   14003fb33:	add    BYTE PTR [rax],al
   14003fb35:	add    BYTE PTR [rax],al
   14003fb37:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fb3b:	push   0x6e697074
   14003fb40:	imul   esi,DWORD PTR [rbx],0x0
   14003fb43:	add    BYTE PTR [rax],al
   14003fb45:	add    BYTE PTR [rax],al
   14003fb47:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fb4b:	push   0x6e697074
   14003fb50:	imul   esi,DWORD PTR [rax+rax*1],0x0
   14003fb54:	add    BYTE PTR [rax],al
   14003fb56:	add    BYTE PTR [rax],al
   14003fb58:	ins    BYTE PTR es:[rdi],dx
   14003fb59:	imul   esp,DWORD PTR [rdi+0x68],0x6c617374
   14003fb60:	ins    DWORD PTR es:[rdi],dx
   14003fb61:	outs   dx,DWORD PTR ds:[rsi]
   14003fb62:	outs   dx,BYTE PTR ds:[rsi]
   14003fb63:	add    BYTE PTR [rax],al
   14003fb65:	add    BYTE PTR [rax],al
   14003fb67:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fb6b:	push   0x6c617374
   14003fb70:	ins    DWORD PTR es:[rdi],dx
   14003fb71:	outs   dx,DWORD PTR ds:[rsi]
   14003fb72:	outs   dx,BYTE PTR ds:[rsi]
   14003fb73:	xor    DWORD PTR [rax],eax
   14003fb75:	add    BYTE PTR [rax],al
   14003fb77:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fb7b:	push   0x6c617374
   14003fb80:	ins    DWORD PTR es:[rdi],dx
   14003fb81:	outs   dx,DWORD PTR ds:[rsi]
   14003fb82:	outs   dx,BYTE PTR ds:[rsi]
   14003fb83:	xor    al,BYTE PTR [rax]
   14003fb85:	add    BYTE PTR [rax],al
   14003fb87:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fb8b:	push   0x6c617374
   14003fb90:	ins    DWORD PTR es:[rdi],dx
   14003fb91:	outs   dx,DWORD PTR ds:[rsi]
   14003fb92:	outs   dx,BYTE PTR ds:[rsi]
   14003fb93:	xor    eax,DWORD PTR [rax]
   14003fb95:	add    BYTE PTR [rax],al
   14003fb97:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fb9b:	push   0x6c617374
   14003fba0:	ins    DWORD PTR es:[rdi],dx
   14003fba1:	outs   dx,DWORD PTR ds:[rsi]
   14003fba2:	outs   dx,BYTE PTR ds:[rsi]
   14003fba3:	xor    al,0x0
   14003fba5:	add    BYTE PTR [rax],al
   14003fba7:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fbab:	push   0x61657374
   14003fbb0:	addr32 jb 0x14003fc18
   14003fbb3:	outs   dx,BYTE PTR gs:[rsi]
   14003fbb5:	add    BYTE PTR [rax],al
   14003fbb7:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fbbb:	push   0x796b7374
   14003fbc0:	(bad)  
   14003fbc1:	ins    BYTE PTR es:[rdi],dx
   14003fbc2:	jne    0x14003fc29
   14003fbc4:	add    BYTE PTR [rax],al
   14003fbc6:	add    BYTE PTR [rax],al
   14003fbc8:	ins    BYTE PTR es:[rdi],dx
   14003fbc9:	imul   esp,DWORD PTR [rdi+0x68],0x796b7374
   14003fbd0:	(bad)  
   14003fbd1:	ins    BYTE PTR es:[rdi],dx
   14003fbd2:	jne    0x14003fc39
   14003fbd4:	xor    DWORD PTR [rax],eax
   14003fbd6:	add    BYTE PTR [rax],al
   14003fbd8:	ins    BYTE PTR es:[rdi],dx
   14003fbd9:	imul   esp,DWORD PTR [rdi+0x68],0x796b7374
   14003fbe0:	(bad)  
   14003fbe1:	ins    BYTE PTR es:[rdi],dx
   14003fbe2:	jne    0x14003fc49
   14003fbe4:	xor    al,BYTE PTR [rax]
   14003fbe6:	add    BYTE PTR [rax],al
   14003fbe8:	ins    BYTE PTR es:[rdi],dx
   14003fbe9:	imul   esp,DWORD PTR [rdi+0x68],0x796b7374
   14003fbf0:	(bad)  
   14003fbf1:	ins    BYTE PTR es:[rdi],dx
   14003fbf2:	jne    0x14003fc59
   14003fbf4:	xor    eax,DWORD PTR [rax]
   14003fbf6:	add    BYTE PTR [rax],al
   14003fbf8:	ins    BYTE PTR es:[rdi],dx
   14003fbf9:	imul   esp,DWORD PTR [rdi+0x68],0x796b7374
   14003fc00:	(bad)  
   14003fc01:	ins    BYTE PTR es:[rdi],dx
   14003fc02:	jne    0x14003fc69
   14003fc04:	xor    al,0x0
   14003fc06:	add    BYTE PTR [rax],al
   14003fc08:	ins    BYTE PTR es:[rdi],dx
   14003fc09:	imul   esp,DWORD PTR [rdi+0x68],0x616c7374
   14003fc10:	je     0x14003fc77
   14003fc12:	(bad)  
   14003fc13:	ins    BYTE PTR es:[rdi],dx
   14003fc14:	jne    0x14003fc7b
   14003fc16:	add    BYTE PTR [rax],al
   14003fc18:	ins    BYTE PTR es:[rdi],dx
   14003fc19:	imul   esp,DWORD PTR [rdi+0x68],0x616c7374
   14003fc20:	je     0x14003fc87
   14003fc22:	addr32 jb 0x14003fc86
   14003fc25:	jns    0x14003fc27
   14003fc27:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fc2b:	push   0x616c7374
   14003fc30:	je     0x14003fc97
   14003fc32:	addr32 jb 0x14003fc9a
   14003fc35:	jns    0x14003fc37
   14003fc37:	add    BYTE PTR [rcx+rbp*2+0x67],ch
   14003fc3b:	push   0x65747374
   14003fc40:	gs ins BYTE PTR es:[rdi],dx
   14003fc42:	(bad)  
   14003fc43:	ins    BYTE PTR es:[rdi],dx
   14003fc44:	jne    0x14003fcab
   14003fc46:	add    BYTE PTR [rax],al
   14003fc48:	ins    BYTE PTR es:[rdi],dx
   14003fc49:	imul   esp,DWORD PTR [rdi+0x68],0x65747374
   14003fc50:	gs ins BYTE PTR es:[rdi],dx
   14003fc52:	(bad)  
   14003fc53:	ins    BYTE PTR es:[rdi],dx
   14003fc54:	jne    0x14003fcbb
   14003fc56:	xor    DWORD PTR [rax],eax
   14003fc58:	ins    BYTE PTR es:[rdi],dx
   14003fc59:	imul   esp,DWORD PTR [rdi+0x68],0x65747374
   14003fc60:	gs ins BYTE PTR es:[rdi],dx
   14003fc62:	(bad)  
   14003fc63:	ins    BYTE PTR es:[rdi],dx
   14003fc64:	jne    0x14003fccb
   14003fc66:	xor    al,BYTE PTR [rax]
   14003fc68:	ins    BYTE PTR es:[rdi],dx
   14003fc69:	imul   esp,DWORD PTR [rdi+0x68],0x65747374
   14003fc70:	gs ins BYTE PTR es:[rdi],dx
   14003fc72:	(bad)  
   14003fc73:	ins    BYTE PTR es:[rdi],dx
   14003fc74:	jne    0x14003fcdb
   14003fc76:	xor    eax,DWORD PTR [rax]
   14003fc78:	ins    BYTE PTR es:[rdi],dx
   14003fc79:	imul   esp,DWORD PTR [rdi+0x68],0x65747374
   14003fc80:	gs ins BYTE PTR es:[rdi],dx
   14003fc82:	(bad)  
   14003fc83:	ins    BYTE PTR es:[rdi],dx
   14003fc84:	jne    0x14003fceb
   14003fc86:	xor    al,0x0
   14003fc88:	ins    BYTE PTR es:[rdi],dx
   14003fc89:	imul   esp,DWORD PTR [rdi+0x68],0x6c657974
   14003fc90:	ins    BYTE PTR es:[rdi],dx
   14003fc91:	outs   dx,DWORD PTR ds:[rsi]
   14003fc92:	ja     0x14003fc94
   14003fc94:	add    BYTE PTR [rax],al
   14003fc96:	add    BYTE PTR [rax],al
   14003fc98:	ins    BYTE PTR es:[rdi],dx
   14003fc99:	imul   esp,DWORD PTR [rdi+0x68],0x6c657974
   14003fca0:	ins    BYTE PTR es:[rdi],dx
   14003fca1:	outs   dx,DWORD PTR ds:[rsi]
   14003fca2:	ja     0x14003fcd5
   14003fca4:	add    BYTE PTR [rax],al
   14003fca6:	add    BYTE PTR [rax],al
   14003fca8:	ins    BYTE PTR es:[rdi],dx
   14003fca9:	imul   esp,DWORD PTR [rdi+0x68],0x6c657974
   14003fcb0:	ins    BYTE PTR es:[rdi],dx
   14003fcb1:	outs   dx,DWORD PTR ds:[rsi]
   14003fcb2:	ja     0x14003fce6
   14003fcb4:	add    BYTE PTR [rax],al
   14003fcb6:	add    BYTE PTR [rax],al
   14003fcb8:	ins    BYTE PTR es:[rdi],dx
   14003fcb9:	imul   esp,DWORD PTR [rdi+0x68],0x6c657974
   14003fcc0:	ins    BYTE PTR es:[rdi],dx
   14003fcc1:	outs   dx,DWORD PTR ds:[rsi]
   14003fcc2:	ja     0x14003fcf7
   14003fcc4:	add    BYTE PTR [rax],al
   14003fcc6:	add    BYTE PTR [rax],al
   14003fcc8:	ins    BYTE PTR es:[rdi],dx
   14003fcc9:	imul   esp,DWORD PTR [rdi+0x68],0x6c657974
   14003fcd0:	ins    BYTE PTR es:[rdi],dx
   14003fcd1:	outs   dx,DWORD PTR ds:[rsi]
   14003fcd2:	ja     0x14003fd08
   14003fcd4:	add    BYTE PTR [rax],al
   14003fcd6:	add    BYTE PTR [rax],al
   14003fcd8:	ins    BYTE PTR es:[rdi],dx
   14003fcd9:	imul   ebp,DWORD PTR [rbp+0x65],0x65657267
   14003fce0:	outs   dx,BYTE PTR ds:[rsi]
   14003fce1:	add    BYTE PTR [rax],al
   14003fce3:	add    BYTE PTR [rcx+rbp*2+0x6e],ch
   14003fce7:	outs   dx,BYTE PTR gs:[rsi]
   14003fce9:	add    BYTE PTR [rax],al
   14003fceb:	add    BYTE PTR [rax],al
   14003fced:	add    BYTE PTR [rax],al
   14003fcef:	add    BYTE PTR [rbp+0x61],ch
   14003fcf2:	outs   dx,BYTE PTR gs:[esi]
   14003fcf5:	je     0x14003fd58
   14003fcf7:	add    BYTE PTR [rbp+0x61],ch
   14003fcfa:	outs   dx,BYTE PTR gs:[esi]
   14003fcfd:	je     0x14003fd60
   14003fcff:	xor    DWORD PTR [rax],eax
   14003fd01:	add    BYTE PTR [rax],al
   14003fd03:	add    BYTE PTR [rax],al
   14003fd05:	add    BYTE PTR [rax],al
   14003fd07:	add    BYTE PTR [rbp+0x61],ch
   14003fd0a:	outs   dx,BYTE PTR gs:[esi]
   14003fd0d:	je     0x14003fd70
   14003fd0f:	xor    al,BYTE PTR [rax]
   14003fd11:	add    BYTE PTR [rax],al
   14003fd13:	add    BYTE PTR [rax],al
   14003fd15:	add    BYTE PTR [rax],al
   14003fd17:	add    BYTE PTR [rbp+0x61],ch
   14003fd1a:	outs   dx,BYTE PTR gs:[esi]
   14003fd1d:	je     0x14003fd80
   14003fd1f:	xor    eax,DWORD PTR [rax]
   14003fd21:	add    BYTE PTR [rax],al
   14003fd23:	add    BYTE PTR [rax],al
   14003fd25:	add    BYTE PTR [rax],al
   14003fd27:	add    BYTE PTR [rbp+0x61],ch
   14003fd2a:	outs   dx,BYTE PTR gs:[esi]
   14003fd2d:	je     0x14003fd90
   14003fd2f:	xor    al,0x0
   14003fd31:	add    BYTE PTR [rax],al
   14003fd33:	add    BYTE PTR [rbp+0x61],ch
   14003fd36:	jb     0x14003fda7
   14003fd38:	outs   dx,DWORD PTR ds:[rsi]
   14003fd39:	outs   dx,BYTE PTR ds:[rsi]
   14003fd3a:	add    BYTE PTR [rax],al
   14003fd3c:	add    BYTE PTR [rax],al
   14003fd3e:	add    BYTE PTR [rax],al
   14003fd40:	ins    DWORD PTR es:[rdi],dx
   14003fd41:	(bad)  
   14003fd42:	jb     0x14003fdb3
   14003fd44:	outs   dx,DWORD PTR ds:[rsi]
   14003fd45:	outs   dx,BYTE PTR ds:[rsi]
   14003fd46:	xor    DWORD PTR [rax],eax
   14003fd48:	ins    DWORD PTR es:[rdi],dx
   14003fd49:	(bad)  
   14003fd4a:	jb     0x14003fdbb
   14003fd4c:	outs   dx,DWORD PTR ds:[rsi]
   14003fd4d:	outs   dx,BYTE PTR ds:[rsi]
   14003fd4e:	xor    al,BYTE PTR [rax]
   14003fd50:	ins    DWORD PTR es:[rdi],dx
   14003fd51:	(bad)  
   14003fd52:	jb     0x14003fdc3
   14003fd54:	outs   dx,DWORD PTR ds:[rsi]
   14003fd55:	outs   dx,BYTE PTR ds:[rsi]
   14003fd56:	xor    eax,DWORD PTR [rax]
   14003fd58:	ins    DWORD PTR es:[rdi],dx
   14003fd59:	(bad)  
   14003fd5a:	jb     0x14003fdcb
   14003fd5c:	outs   dx,DWORD PTR ds:[rsi]
   14003fd5d:	outs   dx,BYTE PTR ds:[rsi]
   14003fd5e:	xor    al,0x0
   14003fd60:	ins    DWORD PTR es:[rdi],dx
   14003fd61:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x61757161
   14003fd6a:	ins    DWORD PTR es:[rdi],dx
   14003fd6b:	(bad)  
   14003fd6c:	jb     0x14003fdd7
   14003fd6e:	outs   dx,BYTE PTR ds:[rsi]
   14003fd6f:	add    BYTE PTR gs:[rax],al
   14003fd72:	add    BYTE PTR [rax],al
   14003fd74:	add    BYTE PTR [rax],al
   14003fd76:	add    BYTE PTR [rax],al
   14003fd78:	ins    DWORD PTR es:[rdi],dx
   14003fd79:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x65756c62
   14003fd82:	add    BYTE PTR [rax],al
   14003fd84:	add    BYTE PTR [rax],al
   14003fd86:	add    BYTE PTR [rax],al
   14003fd88:	ins    DWORD PTR es:[rdi],dx
   14003fd89:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x6863726f
   14003fd92:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x656d0000
   14003fd9a:	imul   esi,DWORD PTR fs:[rbp+0x6d],0x6863726f
   14003fda2:	imul   esp,DWORD PTR [rcx+rsi*1+0x0],0x656d0000
   14003fdaa:	imul   esi,DWORD PTR fs:[rbp+0x6d],0x6863726f
   14003fdb2:	imul   esp,DWORD PTR [rdx+rsi*1+0x0],0x656d0000
   14003fdba:	imul   esi,DWORD PTR fs:[rbp+0x6d],0x6863726f
   14003fdc2:	imul   esp,DWORD PTR [rbx+rsi*1+0x0],0x656d0000
   14003fdca:	imul   esi,DWORD PTR fs:[rbp+0x6d],0x6863726f
   14003fdd2:	imul   esp,DWORD PTR [rsp+rsi*1+0x0],0x656d0000
   14003fdda:	imul   esi,DWORD PTR fs:[rbp+0x6d],0x70727570
   14003fde2:	ins    BYTE PTR es:[rdi],dx
   14003fde3:	add    BYTE PTR gs:[rax],al
   14003fde6:	add    BYTE PTR [rax],al
   14003fde8:	ins    DWORD PTR es:[rdi],dx
   14003fde9:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x70727570
   14003fdf2:	ins    BYTE PTR es:[rdi],dx
   14003fdf3:	xor    DWORD PTR gs:[rax],eax
   14003fdf6:	add    BYTE PTR [rax],al
   14003fdf8:	ins    DWORD PTR es:[rdi],dx
   14003fdf9:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x70727570
   14003fe02:	ins    BYTE PTR es:[rdi],dx
   14003fe03:	xor    al,BYTE PTR gs:[rax]
   14003fe06:	add    BYTE PTR [rax],al
   14003fe08:	ins    DWORD PTR es:[rdi],dx
   14003fe09:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x70727570
   14003fe12:	ins    BYTE PTR es:[rdi],dx
   14003fe13:	xor    eax,DWORD PTR gs:[rax]
   14003fe16:	add    BYTE PTR [rax],al
   14003fe18:	ins    DWORD PTR es:[rdi],dx
   14003fe19:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x70727570
   14003fe22:	ins    BYTE PTR es:[rdi],dx
   14003fe23:	gs xor al,0x0
   14003fe26:	add    BYTE PTR [rax],al
   14003fe28:	ins    DWORD PTR es:[rdi],dx
   14003fe29:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x67616573
   14003fe32:	jb     0x14003fe99
   14003fe34:	outs   dx,BYTE PTR gs:[rsi]
   14003fe36:	add    BYTE PTR [rax],al
   14003fe38:	ins    DWORD PTR es:[rdi],dx
   14003fe39:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x74616c73
   14003fe42:	gs (bad) 
   14003fe44:	ins    BYTE PTR es:[rdi],dx
   14003fe45:	jne    0x14003feac
   14003fe47:	add    BYTE PTR [rbp+0x65],ch
   14003fe4a:	imul   esi,DWORD PTR fs:[rbp+0x6d],0x69727073
   14003fe52:	outs   dx,BYTE PTR ds:[rsi]
   14003fe53:	addr32 addr32 jb 0x14003febc
   14003fe57:	outs   dx,BYTE PTR gs:[rsi]
   14003fe59:	add    BYTE PTR [rax],al
   14003fe5b:	add    BYTE PTR [rax],al
   14003fe5d:	add    BYTE PTR [rax],al
   14003fe5f:	add    BYTE PTR [rbp+0x65],ch
   14003fe62:	imul   esi,DWORD PTR fs:[rbp+0x6d],0x71727574
   14003fe6a:	jne    0x14003fedb
   14003fe6c:	imul   esi,DWORD PTR [rbx+0x65],0x64656d00
   14003fe73:	imul   esi,DWORD PTR [rbp+0x6d],0x6c6f6976
   14003fe7a:	gs je  0x14003feef
   14003fe7d:	gs add BYTE PTR fs:[rbp+0x69],ch
   14003fe82:	outs   dx,BYTE PTR fs:[rsi]
   14003fe84:	imul   esp,DWORD PTR [rdi+0x68],0x756c6274
   14003fe8b:	add    BYTE PTR gs:[rax],al
   14003fe8e:	add    BYTE PTR [rax],al
   14003fe90:	ins    DWORD PTR es:[rdi],dx
   14003fe91:	imul   ebp,DWORD PTR [rsi+0x74],0x61657263
   14003fe98:	ins    DWORD PTR es:[rdi],dx
   14003fe99:	add    BYTE PTR [rax],al
   14003fe9b:	add    BYTE PTR [rax],al
   14003fe9d:	add    BYTE PTR [rax],al
   14003fe9f:	add    BYTE PTR [rbp+0x69],ch
   14003fea2:	jae    0x14003ff18
   14003fea4:	jns    0x14003ff18
   14003fea6:	outs   dx,DWORD PTR ds:[rsi]
   14003fea7:	jae    0x14003ff0e
   14003fea9:	add    BYTE PTR [rax],al
   14003feab:	add    BYTE PTR [rax],al
   14003fead:	add    BYTE PTR [rax],al
   14003feaf:	add    BYTE PTR [rbp+0x69],ch
   14003feb2:	jae    0x14003ff28
   14003feb4:	jns    0x14003ff28
   14003feb6:	outs   dx,DWORD PTR ds:[rsi]
   14003feb7:	jae    0x14003ff1e
   14003feb9:	xor    DWORD PTR [rax],eax
   14003febb:	add    BYTE PTR [rax],al
   14003febd:	add    BYTE PTR [rax],al
   14003febf:	add    BYTE PTR [rbp+0x69],ch
   14003fec2:	jae    0x14003ff38
   14003fec4:	jns    0x14003ff38
   14003fec6:	outs   dx,DWORD PTR ds:[rsi]
   14003fec7:	jae    0x14003ff2e
   14003fec9:	xor    al,BYTE PTR [rax]
   14003fecb:	add    BYTE PTR [rax],al
   14003fecd:	add    BYTE PTR [rax],al
   14003fecf:	add    BYTE PTR [rbp+0x69],ch
   14003fed2:	jae    0x14003ff48
   14003fed4:	jns    0x14003ff48
   14003fed6:	outs   dx,DWORD PTR ds:[rsi]
   14003fed7:	jae    0x14003ff3e
   14003fed9:	xor    eax,DWORD PTR [rax]
   14003fedb:	add    BYTE PTR [rax],al
   14003fedd:	add    BYTE PTR [rax],al
   14003fedf:	add    BYTE PTR [rbp+0x69],ch
   14003fee2:	jae    0x14003ff58
   14003fee4:	jns    0x14003ff58
   14003fee6:	outs   dx,DWORD PTR ds:[rsi]
   14003fee7:	jae    0x14003ff4e
   14003fee9:	xor    al,0x0
   14003feeb:	add    BYTE PTR [rax],al
   14003feed:	add    BYTE PTR [rax],al
   14003feef:	add    BYTE PTR [rbp+0x6f],ch
   14003fef2:	movsxd esp,DWORD PTR [rbx+0x61]
   14003fef5:	jae    0x14003ff60
   14003fef7:	outs   dx,BYTE PTR ds:[rsi]
	...
   14003ff00:	outs   dx,BYTE PTR ds:[rsi]
   14003ff01:	(bad)  
   14003ff02:	jbe    0x14003ff65
   14003ff04:	push   0x6f
   14003ff06:	ja     0x14003ff70
   14003ff08:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x0
   14003ff10:	outs   dx,BYTE PTR ds:[rsi]
   14003ff11:	(bad)  
   14003ff12:	jbe    0x14003ff75
   14003ff14:	push   0x6f
   14003ff16:	ja     0x14003ff80
   14003ff18:	imul   esi,DWORD PTR [rbp+riz*2+0x31],0x0
   14003ff20:	outs   dx,BYTE PTR ds:[rsi]
   14003ff21:	(bad)  
   14003ff22:	jbe    0x14003ff85
   14003ff24:	push   0x6f
   14003ff26:	ja     0x14003ff90
   14003ff28:	imul   esi,DWORD PTR [rbp+riz*2+0x32],0x0
   14003ff30:	outs   dx,BYTE PTR ds:[rsi]
   14003ff31:	(bad)  
   14003ff32:	jbe    0x14003ff95
   14003ff34:	push   0x6f
   14003ff36:	ja     0x14003ffa0
   14003ff38:	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x0
   14003ff40:	outs   dx,BYTE PTR ds:[rsi]
   14003ff41:	(bad)  
   14003ff42:	jbe    0x14003ffa5
   14003ff44:	push   0x6f
   14003ff46:	ja     0x14003ffb0
   14003ff48:	imul   esi,DWORD PTR [rbp+riz*2+0x34],0x0
   14003ff50:	outs   dx,BYTE PTR ds:[rsi]
   14003ff51:	(bad)  
   14003ff52:	jbe    0x14003ffcd
   14003ff54:	add    BYTE PTR [rax],al
   14003ff56:	add    BYTE PTR [rax],al
   14003ff58:	outs   dx,BYTE PTR ds:[rsi]
   14003ff59:	(bad)  
   14003ff5a:	jbe    0x14003ffd5
   14003ff5c:	(bad)  
   14003ff5d:	ins    BYTE PTR es:[rdi],dx
   14003ff5e:	jne    0x14003ffc5
	...
   14003ff68:	outs   dx,DWORD PTR ds:[rsi]
   14003ff69:	ins    BYTE PTR es:[rdi],dx
   14003ff6a:	fs ins BYTE PTR es:[rdi],dx
   14003ff6c:	(bad)  
   14003ff6d:	movsxd esp,DWORD PTR [rbp+0x0]
   14003ff70:	outs   dx,DWORD PTR ds:[rsi]
   14003ff71:	ins    BYTE PTR es:[rdi],dx
   14003ff72:	imul   esi,DWORD PTR [rsi+0x65],0x62617264
   14003ff79:	add    BYTE PTR [rax],al
   14003ff7b:	add    BYTE PTR [rax],al
   14003ff7d:	add    BYTE PTR [rax],al
   14003ff7f:	add    BYTE PTR [rdi+0x6c],ch
   14003ff82:	imul   esi,DWORD PTR [rsi+0x65],0x62617264
   14003ff89:	xor    DWORD PTR [rax],eax
   14003ff8b:	add    BYTE PTR [rax],al
   14003ff8d:	add    BYTE PTR [rax],al
   14003ff8f:	add    BYTE PTR [rdi+0x6c],ch
   14003ff92:	imul   esi,DWORD PTR [rsi+0x65],0x62617264
   14003ff99:	xor    al,BYTE PTR [rax]
   14003ff9b:	add    BYTE PTR [rax],al
   14003ff9d:	add    BYTE PTR [rax],al
   14003ff9f:	add    BYTE PTR [rdi+0x6c],ch
   14003ffa2:	imul   esi,DWORD PTR [rsi+0x65],0x62617264
   14003ffa9:	xor    eax,DWORD PTR [rax]
   14003ffab:	add    BYTE PTR [rax],al
   14003ffad:	add    BYTE PTR [rax],al
   14003ffaf:	add    BYTE PTR [rdi+0x6c],ch
   14003ffb2:	imul   esi,DWORD PTR [rsi+0x65],0x62617264
   14003ffb9:	xor    al,0x0
   14003ffbb:	add    BYTE PTR [rdi+0x72],ch
   14003ffbe:	(bad)  
   14003ffbf:	outs   dx,BYTE PTR ds:[rsi]
   14003ffc0:	add    BYTE PTR gs:[eax],al
   14003ffc4:	add    BYTE PTR [rax],al
   14003ffc6:	add    BYTE PTR [rax],al
   14003ffc8:	outs   dx,DWORD PTR ds:[rsi]
   14003ffc9:	jb     0x14004002c
   14003ffcb:	outs   dx,BYTE PTR ds:[rsi]
   14003ffcc:	xor    DWORD PTR gs:[eax],eax
   14003ffd0:	outs   dx,DWORD PTR ds:[rsi]
   14003ffd1:	jb     0x140040034
   14003ffd3:	outs   dx,BYTE PTR ds:[rsi]
   14003ffd4:	xor    al,BYTE PTR gs:[eax]
   14003ffd8:	outs   dx,DWORD PTR ds:[rsi]
   14003ffd9:	jb     0x14004003c
   14003ffdb:	outs   dx,BYTE PTR ds:[rsi]
   14003ffdc:	xor    eax,DWORD PTR gs:[eax]
   14003ffe0:	outs   dx,DWORD PTR ds:[rsi]
   14003ffe1:	jb     0x140040044
   14003ffe3:	outs   dx,BYTE PTR ds:[rsi]
   14003ffe4:	addr32 gs xor al,0x0
   14003ffe8:	outs   dx,DWORD PTR ds:[rsi]
   14003ffe9:	jb     0x14004004c
   14003ffeb:	outs   dx,BYTE PTR ds:[rsi]
   14003ffec:	addr32 gs jb 0x140040055
   14003fff0:	add    BYTE PTR fs:[rax],al
   14003fff3:	add    BYTE PTR [rax],al
   14003fff5:	add    BYTE PTR [rax],al
   14003fff7:	add    BYTE PTR [rdi+0x72],ch
   14003fffa:	(bad)  
   14003fffb:	outs   dx,BYTE PTR ds:[rsi]
   14003fffc:	addr32 gs jb 0x140040065
   140040000:	xor    DWORD PTR fs:[rax],eax
   140040003:	add    BYTE PTR [rax],al
   140040005:	add    BYTE PTR [rax],al
   140040007:	add    BYTE PTR [rdi+0x72],ch
   14004000a:	(bad)  
   14004000b:	outs   dx,BYTE PTR ds:[rsi]
   14004000c:	addr32 gs jb 0x140040075
   140040010:	xor    al,BYTE PTR fs:[rax]
   140040013:	add    BYTE PTR [rax],al
   140040015:	add    BYTE PTR [rax],al
   140040017:	add    BYTE PTR [rdi+0x72],ch
   14004001a:	(bad)  
   14004001b:	outs   dx,BYTE PTR ds:[rsi]
   14004001c:	addr32 gs jb 0x140040085
   140040020:	xor    eax,DWORD PTR fs:[rax]
   140040023:	add    BYTE PTR [rax],al
   140040025:	add    BYTE PTR [rax],al
   140040027:	add    BYTE PTR [rdi+0x72],ch
   14004002a:	(bad)  
   14004002b:	outs   dx,BYTE PTR ds:[rsi]
   14004002c:	addr32 gs jb 0x140040095
   140040030:	fs xor al,0x0
   140040033:	add    BYTE PTR [rdi+0x72],ch
   140040036:	movsxd ebp,DWORD PTR [rax+0x69]
   140040039:	add    BYTE PTR fs:[rax],al
   14004003c:	add    BYTE PTR [rax],al
   14004003e:	add    BYTE PTR [rax],al
   140040040:	outs   dx,DWORD PTR ds:[rsi]
   140040041:	jb     0x1400400a6
   140040043:	push   0x316469
   140040048:	outs   dx,DWORD PTR ds:[rsi]
   140040049:	jb     0x1400400ae
   14004004b:	push   0x326469
   140040050:	outs   dx,DWORD PTR ds:[rsi]
   140040051:	jb     0x1400400b6
   140040053:	push   0x336469
   140040058:	outs   dx,DWORD PTR ds:[rsi]
   140040059:	jb     0x1400400be
   14004005b:	push   0x346469
   140040060:	jo     0x1400400c3
   140040062:	ins    BYTE PTR es:[rdi],dx
   140040063:	outs   dx,DWORD PTR gs:[esi]
   140040066:	ins    BYTE PTR es:[rdi],dx
   140040067:	fs outs dx,BYTE PTR gs:[rsi]
   14004006a:	jb     0x1400400db
   14004006c:	add    BYTE PTR fs:[rax],al
   14004006f:	add    BYTE PTR [rax+0x61],dh
   140040072:	ins    BYTE PTR es:[rdi],dx
   140040073:	gs addr32 jb 0x1400400dc
   140040077:	outs   dx,BYTE PTR gs:[rsi]
   140040079:	add    BYTE PTR [rax],al
   14004007b:	add    BYTE PTR [rax],al
   14004007d:	add    BYTE PTR [rax],al
   14004007f:	add    BYTE PTR [rax+0x61],dh
   140040082:	ins    BYTE PTR es:[rdi],dx
   140040083:	gs addr32 jb 0x1400400ec
   140040087:	outs   dx,BYTE PTR gs:[rsi]
   140040089:	xor    DWORD PTR [rax],eax
   14004008b:	add    BYTE PTR [rax],al
   14004008d:	add    BYTE PTR [rax],al
   14004008f:	add    BYTE PTR [rax+0x61],dh
   140040092:	ins    BYTE PTR es:[rdi],dx
   140040093:	gs addr32 jb 0x1400400fc
   140040097:	outs   dx,BYTE PTR gs:[rsi]
   140040099:	xor    al,BYTE PTR [rax]
   14004009b:	add    BYTE PTR [rax],al
   14004009d:	add    BYTE PTR [rax],al
   14004009f:	add    BYTE PTR [rax+0x61],dh
   1400400a2:	ins    BYTE PTR es:[rdi],dx
   1400400a3:	gs addr32 jb 0x14004010c
   1400400a7:	outs   dx,BYTE PTR gs:[rsi]
   1400400a9:	xor    eax,DWORD PTR [rax]
   1400400ab:	add    BYTE PTR [rax],al
   1400400ad:	add    BYTE PTR [rax],al
   1400400af:	add    BYTE PTR [rax+0x61],dh
   1400400b2:	ins    BYTE PTR es:[rdi],dx
   1400400b3:	gs addr32 jb 0x14004011c
   1400400b7:	outs   dx,BYTE PTR gs:[rsi]
   1400400b9:	xor    al,0x0
   1400400bb:	add    BYTE PTR [rax],al
   1400400bd:	add    BYTE PTR [rax],al
   1400400bf:	add    BYTE PTR [rax+0x61],dh
   1400400c2:	ins    BYTE PTR es:[rdi],dx
   1400400c3:	gs je  0x14004013b
   1400400c6:	jb     0x140040139
   1400400c8:	jne    0x140040139
   1400400ca:	imul   esi,DWORD PTR [rbx+0x65],0x70000000
   1400400d1:	(bad)  
   1400400d2:	ins    BYTE PTR es:[rdi],dx
   1400400d3:	gs je  0x14004014b
   1400400d6:	jb     0x140040149
   1400400d8:	jne    0x140040149
   1400400da:	imul   esi,DWORD PTR [rbx+0x65],0x70000031
   1400400e1:	(bad)  
   1400400e2:	ins    BYTE PTR es:[rdi],dx
   1400400e3:	gs je  0x14004015b
   1400400e6:	jb     0x140040159
   1400400e8:	jne    0x140040159
   1400400ea:	imul   esi,DWORD PTR [rbx+0x65],0x70000032
   1400400f1:	(bad)  
   1400400f2:	ins    BYTE PTR es:[rdi],dx
   1400400f3:	gs je  0x14004016b
   1400400f6:	jb     0x140040169
   1400400f8:	jne    0x140040169
   1400400fa:	imul   esi,DWORD PTR [rbx+0x65],0x70000033
   140040101:	(bad)  
   140040102:	ins    BYTE PTR es:[rdi],dx
   140040103:	gs je  0x14004017b
   140040106:	jb     0x140040179
   140040108:	jne    0x140040179
   14004010a:	imul   esi,DWORD PTR [rbx+0x65],0x70000034
   140040111:	(bad)  
   140040112:	ins    BYTE PTR es:[rdi],dx
   140040113:	gs jbe 0x14004017f
   140040116:	outs   dx,DWORD PTR ds:[rsi]
   140040117:	ins    BYTE PTR es:[rdi],dx
   140040118:	gs je  0x14004018d
   14004011b:	gs add BYTE PTR fs:[rax],al
   14004011f:	add    BYTE PTR [rax+0x61],dh
   140040122:	ins    BYTE PTR es:[rdi],dx
   140040123:	gs jbe 0x14004018f
   140040126:	outs   dx,DWORD PTR ds:[rsi]
   140040127:	ins    BYTE PTR es:[rdi],dx
   140040128:	gs je  0x14004019d
   14004012b:	gs xor DWORD PTR fs:[rax],eax
   14004012f:	add    BYTE PTR [rax+0x61],dh
   140040132:	ins    BYTE PTR es:[rdi],dx
   140040133:	gs jbe 0x14004019f
   140040136:	outs   dx,DWORD PTR ds:[rsi]
   140040137:	ins    BYTE PTR es:[rdi],dx
   140040138:	gs je  0x1400401ad
   14004013b:	gs xor al,BYTE PTR fs:[rax]
   14004013f:	add    BYTE PTR [rax+0x61],dh
   140040142:	ins    BYTE PTR es:[rdi],dx
   140040143:	gs jbe 0x1400401af
   140040146:	outs   dx,DWORD PTR ds:[rsi]
   140040147:	ins    BYTE PTR es:[rdi],dx
   140040148:	gs je  0x1400401bd
   14004014b:	gs xor eax,DWORD PTR fs:[rax]
   14004014f:	add    BYTE PTR [rax+0x61],dh
   140040152:	ins    BYTE PTR es:[rdi],dx
   140040153:	gs jbe 0x1400401bf
   140040156:	outs   dx,DWORD PTR ds:[rsi]
   140040157:	ins    BYTE PTR es:[rdi],dx
   140040158:	gs je  0x1400401cd
   14004015b:	gs fs xor al,0x0
   14004015f:	add    BYTE PTR [rax+0x61],dh
   140040162:	jo     0x1400401c5
   140040164:	jns    0x1400401c7
   140040166:	ja     0x1400401d0
   140040168:	imul   esi,DWORD PTR [rax+0x0],0x0
   14004016f:	add    BYTE PTR [rax+0x65],dh
   140040172:	(bad)  
   140040173:	movsxd ebp,DWORD PTR [rax+0x70]
   140040176:	jne    0x1400401de
   140040178:	data16 add BYTE PTR [rax],al
   14004017b:	add    BYTE PTR [rax],al
   14004017d:	add    BYTE PTR [rax],al
   14004017f:	add    BYTE PTR [rax+0x65],dh
   140040182:	(bad)  
   140040183:	movsxd ebp,DWORD PTR [rax+0x70]
   140040186:	jne    0x1400401ee
   140040188:	xor    WORD PTR [rax],ax
   14004018b:	add    BYTE PTR [rax],al
   14004018d:	add    BYTE PTR [rax],al
   14004018f:	add    BYTE PTR [rax+0x65],dh
   140040192:	(bad)  
   140040193:	movsxd ebp,DWORD PTR [rax+0x70]
   140040196:	jne    0x1400401fe
   140040198:	data16 xor al,BYTE PTR [rax]
   14004019b:	add    BYTE PTR [rax],al
   14004019d:	add    BYTE PTR [rax],al
   14004019f:	add    BYTE PTR [rax+0x65],dh
   1400401a2:	(bad)  
   1400401a3:	movsxd ebp,DWORD PTR [rax+0x70]
   1400401a6:	jne    0x14004020e
   1400401a8:	xor    ax,WORD PTR [rax]
   1400401ab:	add    BYTE PTR [rax],al
   1400401ad:	add    BYTE PTR [rax],al
   1400401af:	add    BYTE PTR [rax+0x65],dh
   1400401b2:	(bad)  
   1400401b3:	movsxd ebp,DWORD PTR [rax+0x70]
   1400401b6:	jne    0x14004021e
   1400401b8:	data16 xor al,0x0
   1400401bb:	add    BYTE PTR [rax+0x65],dh
   1400401be:	jb     0x140040235
   1400401c0:	add    BYTE PTR [rax],al
   1400401c2:	add    BYTE PTR [rax],al
   1400401c4:	jo     0x14004022f
   1400401c6:	outs   dx,BYTE PTR ds:[rsi]
   1400401c7:	imul   eax,DWORD PTR [rax],0x0
   1400401ca:	add    BYTE PTR [rax],al
   1400401cc:	jo     0x140040237
   1400401ce:	outs   dx,BYTE PTR ds:[rsi]
   1400401cf:	imul   esi,DWORD PTR [rcx],0x0
   1400401d2:	add    BYTE PTR [rax],al
   1400401d4:	jo     0x14004023f
   1400401d6:	outs   dx,BYTE PTR ds:[rsi]
   1400401d7:	imul   esi,DWORD PTR [rdx],0x0
   1400401da:	add    BYTE PTR [rax],al
   1400401dc:	jo     0x140040247
   1400401de:	outs   dx,BYTE PTR ds:[rsi]
   1400401df:	imul   esi,DWORD PTR [rbx],0x0
   1400401e2:	add    BYTE PTR [rax],al
   1400401e4:	jo     0x14004024f
   1400401e6:	outs   dx,BYTE PTR ds:[rsi]
   1400401e7:	imul   esi,DWORD PTR [rax+rax*1],0x0
   1400401eb:	add    BYTE PTR [rax+0x6c],dh
   1400401ee:	jne    0x14004025d
   1400401f0:	add    BYTE PTR [rax],al
   1400401f2:	add    BYTE PTR [rax],al
   1400401f4:	jo     0x140040262
   1400401f6:	jne    0x140040265
   1400401f8:	xor    DWORD PTR [rax],eax
   1400401fa:	add    BYTE PTR [rax],al
   1400401fc:	jo     0x14004026a
   1400401fe:	jne    0x14004026d
   140040200:	xor    al,BYTE PTR [rax]
   140040202:	add    BYTE PTR [rax],al
   140040204:	jo     0x140040272
   140040206:	jne    0x140040275
   140040208:	xor    eax,DWORD PTR [rax]
   14004020a:	add    BYTE PTR [rax],al
   14004020c:	jo     0x14004027a
   14004020e:	jne    0x14004027d
   140040210:	xor    al,0x0
   140040212:	add    BYTE PTR [rax],al
   140040214:	add    BYTE PTR [rax],al
   140040216:	add    BYTE PTR [rax],al
   140040218:	jo     0x140040289
   14004021a:	ja     0x140040280
   14004021c:	gs jb  0x140040281
   14004021f:	ins    BYTE PTR es:[rdi],dx
   140040220:	jne    0x140040287
   140040222:	add    BYTE PTR [rax],al
   140040224:	jo     0x14004029b
   140040226:	jb     0x140040298
   140040228:	ins    BYTE PTR es:[rdi],dx
   140040229:	add    BYTE PTR gs:[rax],al
   14004022c:	add    BYTE PTR [rax],al
   14004022e:	add    BYTE PTR [rax],al
   140040230:	jo     0x1400402a7
   140040232:	jb     0x1400402a4
   140040234:	ins    BYTE PTR es:[rdi],dx
   140040235:	xor    DWORD PTR gs:[rax],eax
   140040238:	jo     0x1400402af
   14004023a:	jb     0x1400402ac
   14004023c:	ins    BYTE PTR es:[rdi],dx
   14004023d:	xor    al,BYTE PTR gs:[rax]
   140040240:	jo     0x1400402b7
   140040242:	jb     0x1400402b4
   140040244:	ins    BYTE PTR es:[rdi],dx
   140040245:	xor    eax,DWORD PTR gs:[rax]
   140040248:	jo     0x1400402bf
   14004024a:	jb     0x1400402bc
   14004024c:	ins    BYTE PTR es:[rdi],dx
   14004024d:	gs xor al,0x0
   140040250:	jb     0x1400402b7
   140040252:	add    BYTE PTR fs:[rdx+0x65],dh
   140040256:	xor    DWORD PTR fs:[rax],eax
   140040259:	add    BYTE PTR [rax],al
   14004025b:	add    BYTE PTR [rdx+0x65],dh
   14004025e:	xor    al,BYTE PTR fs:[rax]
   140040261:	add    BYTE PTR [rax],al
   140040263:	add    BYTE PTR [rdx+0x65],dh
   140040266:	xor    eax,DWORD PTR fs:[rax]
   140040269:	add    BYTE PTR [rax],al
   14004026b:	add    BYTE PTR [rdx+0x65],dh
   14004026e:	fs xor al,0x0
   140040271:	add    BYTE PTR [rax],al
   140040273:	add    BYTE PTR [rax],al
   140040275:	add    BYTE PTR [rax],al
   140040277:	add    BYTE PTR [rdx+0x6f],dh
   14004027a:	jae    0x1400402f5
   14004027c:	(bad)
   140040281:	add    BYTE PTR [rax],al
   140040283:	add    BYTE PTR [rax],al
   140040285:	add    BYTE PTR [rax],al
   140040287:	add    BYTE PTR [rdx+0x6f],dh
   14004028a:	jae    0x140040305
   14004028c:	(bad)
   140040291:	xor    DWORD PTR [rax],eax
   140040293:	add    BYTE PTR [rax],al
   140040295:	add    BYTE PTR [rax],al
   140040297:	add    BYTE PTR [rdx+0x6f],dh
   14004029a:	jae    0x140040315
   14004029c:	(bad)
   1400402a1:	xor    al,BYTE PTR [rax]
   1400402a3:	add    BYTE PTR [rax],al
   1400402a5:	add    BYTE PTR [rax],al
   1400402a7:	add    BYTE PTR [rdx+0x6f],dh
   1400402aa:	jae    0x140040325
   1400402ac:	(bad)
   1400402b1:	xor    eax,DWORD PTR [rax]
   1400402b3:	add    BYTE PTR [rax],al
   1400402b5:	add    BYTE PTR [rax],al
   1400402b7:	add    BYTE PTR [rdx+0x6f],dh
   1400402ba:	jae    0x140040335
   1400402bc:	(bad)
   1400402c1:	xor    al,0x0
   1400402c3:	add    BYTE PTR [rax],al
   1400402c5:	add    BYTE PTR [rax],al
   1400402c7:	add    BYTE PTR [rdx+0x6f],dh
   1400402ca:	jns    0x14004032d
   1400402cc:	ins    BYTE PTR es:[rdi],dx
   1400402cd:	(bad)  
   1400402ce:	ins    BYTE PTR es:[rdi],dx
   1400402cf:	jne    0x140040336
   1400402d1:	add    BYTE PTR [rax],al
   1400402d3:	add    BYTE PTR [rax],al
   1400402d5:	add    BYTE PTR [rax],al
   1400402d7:	add    BYTE PTR [rdx+0x6f],dh
   1400402da:	jns    0x14004033d
   1400402dc:	ins    BYTE PTR es:[rdi],dx
   1400402dd:	(bad)  
   1400402de:	ins    BYTE PTR es:[rdi],dx
   1400402df:	jne    0x140040346
   1400402e1:	xor    DWORD PTR [rax],eax
   1400402e3:	add    BYTE PTR [rax],al
   1400402e5:	add    BYTE PTR [rax],al
   1400402e7:	add    BYTE PTR [rdx+0x6f],dh
   1400402ea:	jns    0x14004034d
   1400402ec:	ins    BYTE PTR es:[rdi],dx
   1400402ed:	(bad)  
   1400402ee:	ins    BYTE PTR es:[rdi],dx
   1400402ef:	jne    0x140040356
   1400402f1:	xor    al,BYTE PTR [rax]
   1400402f3:	add    BYTE PTR [rax],al
   1400402f5:	add    BYTE PTR [rax],al
   1400402f7:	add    BYTE PTR [rdx+0x6f],dh
   1400402fa:	jns    0x14004035d
   1400402fc:	ins    BYTE PTR es:[rdi],dx
   1400402fd:	(bad)  
   1400402fe:	ins    BYTE PTR es:[rdi],dx
   1400402ff:	jne    0x140040366
   140040301:	xor    eax,DWORD PTR [rax]
   140040303:	add    BYTE PTR [rax],al
   140040305:	add    BYTE PTR [rax],al
   140040307:	add    BYTE PTR [rdx+0x6f],dh
   14004030a:	jns    0x14004036d
   14004030c:	ins    BYTE PTR es:[rdi],dx
   14004030d:	(bad)  
   14004030e:	ins    BYTE PTR es:[rdi],dx
   14004030f:	jne    0x140040376
   140040311:	xor    al,0x0
   140040313:	add    BYTE PTR [rax],al
   140040315:	add    BYTE PTR [rax],al
   140040317:	add    BYTE PTR [rbx+0x61],dh
   14004031a:	fs fs ins BYTE PTR es:[rdi],dx
   14004031d:	(bad)
   140040323:	add    BYTE PTR [rbx+0x61],dh
   140040326:	ins    BYTE PTR es:[rdi],dx
   140040327:	ins    DWORD PTR es:[rdi],dx
   140040328:	outs   dx,DWORD PTR ds:[rsi]
   140040329:	outs   dx,BYTE PTR ds:[rsi]
   14004032a:	add    BYTE PTR [rax],al
   14004032c:	add    BYTE PTR [rax],al
   14004032e:	add    BYTE PTR [rax],al
   140040330:	jae    0x140040393
   140040332:	ins    BYTE PTR es:[rdi],dx
   140040333:	ins    DWORD PTR es:[rdi],dx
   140040334:	outs   dx,DWORD PTR ds:[rsi]
   140040335:	outs   dx,BYTE PTR ds:[rsi]
   140040336:	xor    DWORD PTR [rax],eax
   140040338:	jae    0x14004039b
   14004033a:	ins    BYTE PTR es:[rdi],dx
   14004033b:	ins    DWORD PTR es:[rdi],dx
   14004033c:	outs   dx,DWORD PTR ds:[rsi]
   14004033d:	outs   dx,BYTE PTR ds:[rsi]
   14004033e:	xor    al,BYTE PTR [rax]
   140040340:	jae    0x1400403a3
   140040342:	ins    BYTE PTR es:[rdi],dx
   140040343:	ins    DWORD PTR es:[rdi],dx
   140040344:	outs   dx,DWORD PTR ds:[rsi]
   140040345:	outs   dx,BYTE PTR ds:[rsi]
   140040346:	xor    eax,DWORD PTR [rax]
   140040348:	jae    0x1400403ab
   14004034a:	ins    BYTE PTR es:[rdi],dx
   14004034b:	ins    DWORD PTR es:[rdi],dx
   14004034c:	outs   dx,DWORD PTR ds:[rsi]
   14004034d:	outs   dx,BYTE PTR ds:[rsi]
   14004034e:	xor    al,0x0
   140040350:	jae    0x1400403b3
   140040352:	outs   dx,BYTE PTR ds:[rsi]
   140040353:	fs jns 0x1400403b8
   140040356:	jb     0x1400403c7
   140040358:	ja     0x1400403c8
   14004035a:	add    BYTE PTR [rax],al
   14004035c:	add    BYTE PTR [rax],al
   14004035e:	add    BYTE PTR [rax],al
   140040360:	jae    0x1400403c7
   140040362:	(bad)  
   140040363:	addr32 jb 0x1400403cb
   140040366:	outs   dx,BYTE PTR gs:[rsi]
	...
   140040370:	jae    0x1400403d7
   140040372:	(bad)  
   140040373:	addr32 jb 0x1400403db
   140040376:	outs   dx,BYTE PTR gs:[rsi]
   140040378:	xor    DWORD PTR [rax],eax
   14004037a:	add    BYTE PTR [rax],al
   14004037c:	add    BYTE PTR [rax],al
   14004037e:	add    BYTE PTR [rax],al
   140040380:	jae    0x1400403e7
   140040382:	(bad)  
   140040383:	addr32 jb 0x1400403eb
   140040386:	outs   dx,BYTE PTR gs:[rsi]
   140040388:	xor    al,BYTE PTR [rax]
   14004038a:	add    BYTE PTR [rax],al
   14004038c:	add    BYTE PTR [rax],al
   14004038e:	add    BYTE PTR [rax],al
   140040390:	jae    0x1400403f7
   140040392:	(bad)  
   140040393:	addr32 jb 0x1400403fb
   140040396:	outs   dx,BYTE PTR gs:[rsi]
   140040398:	xor    eax,DWORD PTR [rax]
   14004039a:	add    BYTE PTR [rax],al
   14004039c:	add    BYTE PTR [rax],al
   14004039e:	add    BYTE PTR [rax],al
   1400403a0:	jae    0x140040407
   1400403a2:	(bad)  
   1400403a3:	addr32 jb 0x14004040b
   1400403a6:	outs   dx,BYTE PTR gs:[rsi]
   1400403a8:	xor    al,0x0
   1400403aa:	add    BYTE PTR [rax],al
   1400403ac:	add    BYTE PTR [rax],al
   1400403ae:	add    BYTE PTR [rax],al
   1400403b0:	jae    0x140040417
   1400403b2:	(bad)  
   1400403b3:	jae    0x14004041d
   1400403b5:	gs ins BYTE PTR es:[rdi],dx
   1400403b7:	ins    BYTE PTR es:[rdi],dx
	...
   1400403c0:	jae    0x140040427
   1400403c2:	(bad)  
   1400403c3:	jae    0x14004042d
   1400403c5:	gs ins BYTE PTR es:[rdi],dx
   1400403c7:	ins    BYTE PTR es:[rdi],dx
   1400403c8:	xor    DWORD PTR [rax],eax
   1400403ca:	add    BYTE PTR [rax],al
   1400403cc:	add    BYTE PTR [rax],al
   1400403ce:	add    BYTE PTR [rax],al
   1400403d0:	jae    0x140040437
   1400403d2:	(bad)  
   1400403d3:	jae    0x14004043d
   1400403d5:	gs ins BYTE PTR es:[rdi],dx
   1400403d7:	ins    BYTE PTR es:[rdi],dx
   1400403d8:	xor    al,BYTE PTR [rax]
   1400403da:	add    BYTE PTR [rax],al
   1400403dc:	add    BYTE PTR [rax],al
   1400403de:	add    BYTE PTR [rax],al
   1400403e0:	jae    0x140040447
   1400403e2:	(bad)  
   1400403e3:	jae    0x14004044d
   1400403e5:	gs ins BYTE PTR es:[rdi],dx
   1400403e7:	ins    BYTE PTR es:[rdi],dx
   1400403e8:	xor    eax,DWORD PTR [rax]
   1400403ea:	add    BYTE PTR [rax],al
   1400403ec:	add    BYTE PTR [rax],al
   1400403ee:	add    BYTE PTR [rax],al
   1400403f0:	jae    0x140040457
   1400403f2:	(bad)  
   1400403f3:	jae    0x14004045d
   1400403f5:	gs ins BYTE PTR es:[rdi],dx
   1400403f7:	ins    BYTE PTR es:[rdi],dx
   1400403f8:	xor    al,0x0
   1400403fa:	add    BYTE PTR [rax],al
   1400403fc:	jae    0x140040467
   1400403fe:	outs   dx,BYTE PTR gs:[rsi]
   140040400:	outs   dx,BYTE PTR ds:[rsi]
   140040401:	(bad)  
   140040402:	add    BYTE PTR [rax],al
   140040404:	add    BYTE PTR [rax],al
   140040406:	add    BYTE PTR [rax],al
   140040408:	jae    0x140040473
   14004040a:	outs   dx,BYTE PTR gs:[rsi]
   14004040c:	outs   dx,BYTE PTR ds:[rsi]
   14004040d:	(bad)  
   14004040e:	xor    DWORD PTR [rax],eax
   140040410:	jae    0x14004047b
   140040412:	outs   dx,BYTE PTR gs:[rsi]
   140040414:	outs   dx,BYTE PTR ds:[rsi]
   140040415:	(bad)  
   140040416:	xor    al,BYTE PTR [rax]
   140040418:	jae    0x140040483
   14004041a:	outs   dx,BYTE PTR gs:[rsi]
   14004041c:	outs   dx,BYTE PTR ds:[rsi]
   14004041d:	(bad)  
   14004041e:	xor    eax,DWORD PTR [rax]
   140040420:	jae    0x14004048b
   140040422:	outs   dx,BYTE PTR gs:[rsi]
   140040424:	outs   dx,BYTE PTR ds:[rsi]
   140040425:	(bad)  
   140040426:	xor    al,0x0
   140040428:	jae    0x140040495
   14004042a:	jns    0x14004048e
   14004042c:	ins    BYTE PTR es:[rdi],dx
   14004042d:	jne    0x140040494
   14004042f:	add    BYTE PTR [rbx+0x6b],dh
   140040432:	jns    0x140040496
   140040434:	ins    BYTE PTR es:[rdi],dx
   140040435:	jne    0x14004049c
   140040437:	xor    DWORD PTR [rax],eax
   140040439:	add    BYTE PTR [rax],al
   14004043b:	add    BYTE PTR [rax],al
   14004043d:	add    BYTE PTR [rax],al
   14004043f:	add    BYTE PTR [rbx+0x6b],dh
   140040442:	jns    0x1400404a6
   140040444:	ins    BYTE PTR es:[rdi],dx
   140040445:	jne    0x1400404ac
   140040447:	xor    al,BYTE PTR [rax]
   140040449:	add    BYTE PTR [rax],al
   14004044b:	add    BYTE PTR [rax],al
   14004044d:	add    BYTE PTR [rax],al
   14004044f:	add    BYTE PTR [rbx+0x6b],dh
   140040452:	jns    0x1400404b6
   140040454:	ins    BYTE PTR es:[rdi],dx
   140040455:	jne    0x1400404bc
   140040457:	xor    eax,DWORD PTR [rax]
   140040459:	add    BYTE PTR [rax],al
   14004045b:	add    BYTE PTR [rax],al
   14004045d:	add    BYTE PTR [rax],al
   14004045f:	add    BYTE PTR [rbx+0x6b],dh
   140040462:	jns    0x1400404c6
   140040464:	ins    BYTE PTR es:[rdi],dx
   140040465:	jne    0x1400404cc
   140040467:	xor    al,0x0
   140040469:	add    BYTE PTR [rax],al
   14004046b:	add    BYTE PTR [rax],al
   14004046d:	add    BYTE PTR [rax],al
   14004046f:	add    BYTE PTR [rbx+0x6c],dh
   140040472:	(bad)  
   140040473:	je     0x1400404da
   140040475:	(bad)  
   140040476:	ins    BYTE PTR es:[rdi],dx
   140040477:	jne    0x1400404de
   140040479:	add    BYTE PTR [rax],al
   14004047b:	add    BYTE PTR [rax],al
   14004047d:	add    BYTE PTR [rax],al
   14004047f:	add    BYTE PTR [rbx+0x6c],dh
   140040482:	(bad)  
   140040483:	je     0x1400404ea
   140040485:	(bad)  
   140040486:	ins    BYTE PTR es:[rdi],dx
   140040487:	jne    0x1400404ee
   140040489:	xor    DWORD PTR [rax],eax
   14004048b:	add    BYTE PTR [rax],al
   14004048d:	add    BYTE PTR [rax],al
   14004048f:	add    BYTE PTR [rbx+0x6c],dh
   140040492:	(bad)  
   140040493:	je     0x1400404fa
   140040495:	(bad)  
   140040496:	ins    BYTE PTR es:[rdi],dx
   140040497:	jne    0x1400404fe
   140040499:	xor    al,BYTE PTR [rax]
   14004049b:	add    BYTE PTR [rax],al
   14004049d:	add    BYTE PTR [rax],al
   14004049f:	add    BYTE PTR [rbx+0x6c],dh
   1400404a2:	(bad)  
   1400404a3:	je     0x14004050a
   1400404a5:	(bad)  
   1400404a6:	ins    BYTE PTR es:[rdi],dx
   1400404a7:	jne    0x14004050e
   1400404a9:	xor    eax,DWORD PTR [rax]
   1400404ab:	add    BYTE PTR [rax],al
   1400404ad:	add    BYTE PTR [rax],al
   1400404af:	add    BYTE PTR [rbx+0x6c],dh
   1400404b2:	(bad)  
   1400404b3:	je     0x14004051a
   1400404b5:	(bad)  
   1400404b6:	ins    BYTE PTR es:[rdi],dx
   1400404b7:	jne    0x14004051e
   1400404b9:	xor    al,0x0
   1400404bb:	add    BYTE PTR [rax],al
   1400404bd:	add    BYTE PTR [rax],al
   1400404bf:	add    BYTE PTR [rbx+0x6c],dh
   1400404c2:	(bad)  
   1400404c3:	je     0x14004052a
   1400404c5:	addr32 jb 0x140040529
   1400404c8:	jns    0x1400404ca
   1400404ca:	add    BYTE PTR [rax],al
   1400404cc:	add    BYTE PTR [rax],al
   1400404ce:	add    BYTE PTR [rax],al
   1400404d0:	jae    0x14004053e
   1400404d2:	(bad)  
   1400404d3:	je     0x14004053a
   1400404d5:	addr32 jb 0x140040539
   1400404d8:	jns    0x14004050b
   1400404da:	add    BYTE PTR [rax],al
   1400404dc:	add    BYTE PTR [rax],al
   1400404de:	add    BYTE PTR [rax],al
   1400404e0:	jae    0x14004054e
   1400404e2:	(bad)  
   1400404e3:	je     0x14004054a
   1400404e5:	addr32 jb 0x140040549
   1400404e8:	jns    0x14004051c
   1400404ea:	add    BYTE PTR [rax],al
   1400404ec:	add    BYTE PTR [rax],al
   1400404ee:	add    BYTE PTR [rax],al
   1400404f0:	jae    0x14004055e
   1400404f2:	(bad)  
   1400404f3:	je     0x14004055a
   1400404f5:	addr32 jb 0x140040559
   1400404f8:	jns    0x14004052d
   1400404fa:	add    BYTE PTR [rax],al
   1400404fc:	add    BYTE PTR [rax],al
   1400404fe:	add    BYTE PTR [rax],al
   140040500:	jae    0x14004056e
   140040502:	(bad)  
   140040503:	je     0x14004056a
   140040505:	addr32 jb 0x140040569
   140040508:	jns    0x14004053e
   14004050a:	add    BYTE PTR [rax],al
   14004050c:	add    BYTE PTR [rax],al
   14004050e:	add    BYTE PTR [rax],al
   140040510:	jae    0x14004057e
   140040512:	(bad)  
   140040513:	je     0x14004057a
   140040515:	addr32 jb 0x14004057d
   140040518:	jns    0x14004051a
   14004051a:	add    BYTE PTR [rax],al
   14004051c:	jae    0x14004058c
   14004051e:	outs   dx,DWORD PTR ds:[rsi]
   14004051f:	ja     0x140040521
   140040521:	add    BYTE PTR [rax],al
   140040523:	add    BYTE PTR [rbx+0x6e],dh
   140040526:	outs   dx,DWORD PTR ds:[rsi]
   140040527:	ja     0x14004055a
   140040529:	add    BYTE PTR [rax],al
   14004052b:	add    BYTE PTR [rbx+0x6e],dh
   14004052e:	outs   dx,DWORD PTR ds:[rsi]
   14004052f:	ja     0x140040563
   140040531:	add    BYTE PTR [rax],al
   140040533:	add    BYTE PTR [rbx+0x6e],dh
   140040536:	outs   dx,DWORD PTR ds:[rsi]
   140040537:	ja     0x14004056c
   140040539:	add    BYTE PTR [rax],al
   14004053b:	add    BYTE PTR [rbx+0x6e],dh
   14004053e:	outs   dx,DWORD PTR ds:[rsi]
   14004053f:	ja     0x140040575
   140040541:	add    BYTE PTR [rax],al
   140040543:	add    BYTE PTR [rax],al
   140040545:	add    BYTE PTR [rax],al
   140040547:	add    BYTE PTR [rbx+0x70],dh
   14004054a:	jb     0x1400405b5
   14004054c:	outs   dx,BYTE PTR ds:[rsi]
   14004054d:	addr32 addr32 jb 0x1400405b6
   140040551:	outs   dx,BYTE PTR gs:[rsi]
   140040553:	add    BYTE PTR [rax],al
   140040555:	add    BYTE PTR [rax],al
   140040557:	add    BYTE PTR [rbx+0x70],dh
   14004055a:	jb     0x1400405c5
   14004055c:	outs   dx,BYTE PTR ds:[rsi]
   14004055d:	addr32 addr32 jb 0x1400405c6
   140040561:	outs   dx,BYTE PTR gs:[rsi]
   140040563:	xor    DWORD PTR [rax],eax
   140040565:	add    BYTE PTR [rax],al
   140040567:	add    BYTE PTR [rbx+0x70],dh
   14004056a:	jb     0x1400405d5
   14004056c:	outs   dx,BYTE PTR ds:[rsi]
   14004056d:	addr32 addr32 jb 0x1400405d6
   140040571:	outs   dx,BYTE PTR gs:[rsi]
   140040573:	xor    al,BYTE PTR [rax]
   140040575:	add    BYTE PTR [rax],al
   140040577:	add    BYTE PTR [rbx+0x70],dh
   14004057a:	jb     0x1400405e5
   14004057c:	outs   dx,BYTE PTR ds:[rsi]
   14004057d:	addr32 addr32 jb 0x1400405e6
   140040581:	outs   dx,BYTE PTR gs:[rsi]
   140040583:	xor    eax,DWORD PTR [rax]
   140040585:	add    BYTE PTR [rax],al
   140040587:	add    BYTE PTR [rbx+0x70],dh
   14004058a:	jb     0x1400405f5
   14004058c:	outs   dx,BYTE PTR ds:[rsi]
   14004058d:	addr32 addr32 jb 0x1400405f6
   140040591:	outs   dx,BYTE PTR gs:[rsi]
   140040593:	xor    al,0x0
   140040595:	add    BYTE PTR [rax],al
   140040597:	add    BYTE PTR [rbx+0x74],dh
   14004059a:	gs gs ins BYTE PTR es:[rdi],dx
   14004059d:	(bad)  
   14004059e:	ins    BYTE PTR es:[rdi],dx
   14004059f:	jne    0x140040606
   1400405a1:	add    BYTE PTR [rax],al
   1400405a3:	add    BYTE PTR [rax],al
   1400405a5:	add    BYTE PTR [rax],al
   1400405a7:	add    BYTE PTR [rbx+0x74],dh
   1400405aa:	gs gs ins BYTE PTR es:[rdi],dx
   1400405ad:	(bad)  
   1400405ae:	ins    BYTE PTR es:[rdi],dx
   1400405af:	jne    0x140040616
   1400405b1:	xor    DWORD PTR [rax],eax
   1400405b3:	add    BYTE PTR [rax],al
   1400405b5:	add    BYTE PTR [rax],al
   1400405b7:	add    BYTE PTR [rbx+0x74],dh
   1400405ba:	gs gs ins BYTE PTR es:[rdi],dx
   1400405bd:	(bad)  
   1400405be:	ins    BYTE PTR es:[rdi],dx
   1400405bf:	jne    0x140040626
   1400405c1:	xor    al,BYTE PTR [rax]
   1400405c3:	add    BYTE PTR [rax],al
   1400405c5:	add    BYTE PTR [rax],al
   1400405c7:	add    BYTE PTR [rbx+0x74],dh
   1400405ca:	gs gs ins BYTE PTR es:[rdi],dx
   1400405cd:	(bad)  
   1400405ce:	ins    BYTE PTR es:[rdi],dx
   1400405cf:	jne    0x140040636
   1400405d1:	xor    eax,DWORD PTR [rax]
   1400405d3:	add    BYTE PTR [rax],al
   1400405d5:	add    BYTE PTR [rax],al
   1400405d7:	add    BYTE PTR [rbx+0x74],dh
   1400405da:	gs gs ins BYTE PTR es:[rdi],dx
   1400405dd:	(bad)  
   1400405de:	ins    BYTE PTR es:[rdi],dx
   1400405df:	jne    0x140040646
   1400405e1:	xor    al,0x0
   1400405e3:	add    BYTE PTR [rcx+riz*2+0x6e],dh
   1400405e7:	add    BYTE PTR [rcx+riz*2+0x6e],dh
   1400405eb:	xor    DWORD PTR [rax],eax
   1400405ed:	add    BYTE PTR [rax],al
   1400405ef:	add    BYTE PTR [rcx+riz*2+0x6e],dh
   1400405f3:	xor    al,BYTE PTR [rax]
   1400405f5:	add    BYTE PTR [rax],al
   1400405f7:	add    BYTE PTR [rcx+riz*2+0x6e],dh
   1400405fb:	xor    eax,DWORD PTR [rax]
   1400405fd:	add    BYTE PTR [rax],al
   1400405ff:	add    BYTE PTR [rcx+riz*2+0x6e],dh
   140040603:	xor    al,0x0
   140040605:	add    BYTE PTR [rax],al
   140040607:	add    BYTE PTR [rax+rbp*2+0x69],dh
   14004060b:	jae    0x140040681
   14004060d:	ins    BYTE PTR es:[rdi],dx
   14004060e:	add    BYTE PTR gs:[rax+rbp*2+0x69],dh
   140040613:	jae    0x140040689
   140040615:	ins    BYTE PTR es:[rdi],dx
   140040616:	xor    DWORD PTR gs:[rax],eax
   140040619:	add    BYTE PTR [rax],al
   14004061b:	add    BYTE PTR [rax],al
   14004061d:	add    BYTE PTR [rax],al
   14004061f:	add    BYTE PTR [rax+rbp*2+0x69],dh
   140040623:	jae    0x140040699
   140040625:	ins    BYTE PTR es:[rdi],dx
   140040626:	xor    al,BYTE PTR gs:[rax]
   140040629:	add    BYTE PTR [rax],al
   14004062b:	add    BYTE PTR [rax],al
   14004062d:	add    BYTE PTR [rax],al
   14004062f:	add    BYTE PTR [rax+rbp*2+0x69],dh
   140040633:	jae    0x1400406a9
   140040635:	ins    BYTE PTR es:[rdi],dx
   140040636:	xor    eax,DWORD PTR gs:[rax]
   140040639:	add    BYTE PTR [rax],al
   14004063b:	add    BYTE PTR [rax],al
   14004063d:	add    BYTE PTR [rax],al
   14004063f:	add    BYTE PTR [rax+rbp*2+0x69],dh
   140040643:	jae    0x1400406b9
   140040645:	ins    BYTE PTR es:[rdi],dx
   140040646:	gs xor al,0x0
   140040649:	add    BYTE PTR [rax],al
   14004064b:	add    BYTE PTR [rdi+rbp*2+0x6d],dh
   14004064f:	(bad)  
   140040650:	je     0x1400406c1
   140040652:	add    BYTE PTR [rax],al
   140040654:	add    BYTE PTR [rax],al
   140040656:	add    BYTE PTR [rax],al
   140040658:	je     0x1400406c9
   14004065a:	ins    DWORD PTR es:[rdi],dx
   14004065b:	(bad)  
   14004065c:	je     0x1400406cd
   14004065e:	xor    DWORD PTR [rax],eax
   140040660:	je     0x1400406d1
   140040662:	ins    DWORD PTR es:[rdi],dx
   140040663:	(bad)  
   140040664:	je     0x1400406d5
   140040666:	xor    al,BYTE PTR [rax]
   140040668:	je     0x1400406d9
   14004066a:	ins    DWORD PTR es:[rdi],dx
   14004066b:	(bad)  
   14004066c:	je     0x1400406dd
   14004066e:	xor    eax,DWORD PTR [rax]
   140040670:	je     0x1400406e1
   140040672:	ins    DWORD PTR es:[rdi],dx
   140040673:	(bad)  
   140040674:	je     0x1400406e5
   140040676:	xor    al,0x0
   140040678:	je     0x1400406ef
   14004067a:	jb     0x1400406ed
   14004067c:	jne    0x1400406ed
   14004067e:	imul   esi,DWORD PTR [rbx+0x65],0x0
   140040685:	add    BYTE PTR [rax],al
   140040687:	add    BYTE PTR [rbp+rsi*2+0x72],dh
   14004068b:	jno    0x140040702
   14004068d:	outs   dx,DWORD PTR ds:[rsi]
   14004068e:	imul   esi,DWORD PTR [rbx+0x65],0x31
   140040695:	add    BYTE PTR [rax],al
   140040697:	add    BYTE PTR [rbp+rsi*2+0x72],dh
   14004069b:	jno    0x140040712
   14004069d:	outs   dx,DWORD PTR ds:[rsi]
   14004069e:	imul   esi,DWORD PTR [rbx+0x65],0x32
   1400406a5:	add    BYTE PTR [rax],al
   1400406a7:	add    BYTE PTR [rbp+rsi*2+0x72],dh
   1400406ab:	jno    0x140040722
   1400406ad:	outs   dx,DWORD PTR ds:[rsi]
   1400406ae:	imul   esi,DWORD PTR [rbx+0x65],0x33
   1400406b5:	add    BYTE PTR [rax],al
   1400406b7:	add    BYTE PTR [rbp+rsi*2+0x72],dh
   1400406bb:	jno    0x140040732
   1400406bd:	outs   dx,DWORD PTR ds:[rsi]
   1400406be:	imul   esi,DWORD PTR [rbx+0x65],0x76000034
   1400406c5:	imul   ebp,DWORD PTR [rdi+0x6c],0x7465
   1400406cc:	add    BYTE PTR [rax],al
   1400406ce:	add    BYTE PTR [rax],al
   1400406d0:	jbe    0x14004073b
   1400406d2:	outs   dx,DWORD PTR ds:[rsi]
   1400406d3:	ins    BYTE PTR es:[rdi],dx
   1400406d4:	gs je  0x140040749
   1400406d7:	gs add BYTE PTR fs:[rax],al
   1400406db:	add    BYTE PTR [rax],al
   1400406dd:	add    BYTE PTR [rax],al
   1400406df:	add    BYTE PTR [rsi+0x69],dh
   1400406e2:	outs   dx,DWORD PTR ds:[rsi]
   1400406e3:	ins    BYTE PTR es:[rdi],dx
   1400406e4:	gs je  0x140040759
   1400406e7:	gs xor DWORD PTR fs:[rax],eax
   1400406eb:	add    BYTE PTR [rax],al
   1400406ed:	add    BYTE PTR [rax],al
   1400406ef:	add    BYTE PTR [rsi+0x69],dh
   1400406f2:	outs   dx,DWORD PTR ds:[rsi]
   1400406f3:	ins    BYTE PTR es:[rdi],dx
   1400406f4:	gs je  0x140040769
   1400406f7:	gs xor al,BYTE PTR fs:[rax]
   1400406fb:	add    BYTE PTR [rax],al
   1400406fd:	add    BYTE PTR [rax],al
   1400406ff:	add    BYTE PTR [rsi+0x69],dh
   140040702:	outs   dx,DWORD PTR ds:[rsi]
   140040703:	ins    BYTE PTR es:[rdi],dx
   140040704:	gs je  0x140040779
   140040707:	gs xor eax,DWORD PTR fs:[rax]
   14004070b:	add    BYTE PTR [rax],al
   14004070d:	add    BYTE PTR [rax],al
   14004070f:	add    BYTE PTR [rsi+0x69],dh
   140040712:	outs   dx,DWORD PTR ds:[rsi]
   140040713:	ins    BYTE PTR es:[rdi],dx
   140040714:	gs je  0x140040789
   140040717:	gs fs xor al,0x0
   14004071b:	add    BYTE PTR [rdi+0x68],dh
   14004071e:	gs (bad) 
   140040720:	je     0x140040722
   140040722:	add    BYTE PTR [rax],al
   140040724:	ja     0x14004078e
   140040726:	gs (bad) 
   140040728:	je     0x14004075b
   14004072a:	add    BYTE PTR [rax],al
   14004072c:	ja     0x140040796
   14004072e:	gs (bad) 
   140040730:	je     0x140040764
   140040732:	add    BYTE PTR [rax],al
   140040734:	ja     0x14004079e
   140040736:	gs (bad) 
   140040738:	je     0x14004076d
   14004073a:	add    BYTE PTR [rax],al
   14004073c:	ja     0x1400407a6
   14004073e:	gs (bad) 
   140040740:	je     0x140040776
   140040742:	add    BYTE PTR [rax],al
   140040744:	ja     0x1400407ae
   140040746:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x0
   14004074e:	add    BYTE PTR [rax],al
   140040750:	ja     0x1400407ba
   140040752:	imul   esi,DWORD PTR [rbp+riz*2+0x73],0x656b6f6d
   14004075a:	add    BYTE PTR [rax],al
   14004075c:	jns    0x1400407c3
   14004075e:	ins    BYTE PTR es:[rdi],dx
   14004075f:	ins    BYTE PTR es:[rdi],dx
   140040760:	outs   dx,DWORD PTR ds:[rsi]
   140040761:	ja     0x140040763
   140040763:	add    BYTE PTR [rax],al
   140040765:	add    BYTE PTR [rax],al
   140040767:	add    BYTE PTR [rcx+0x65],bh
   14004076a:	ins    BYTE PTR es:[rdi],dx
   14004076b:	ins    BYTE PTR es:[rdi],dx
   14004076c:	outs   dx,DWORD PTR ds:[rsi]
   14004076d:	ja     0x1400407a0
   14004076f:	add    BYTE PTR [rcx+0x65],bh
   140040772:	ins    BYTE PTR es:[rdi],dx
   140040773:	ins    BYTE PTR es:[rdi],dx
   140040774:	outs   dx,DWORD PTR ds:[rsi]
   140040775:	ja     0x1400407a9
   140040777:	add    BYTE PTR [rcx+0x65],bh
   14004077a:	ins    BYTE PTR es:[rdi],dx
   14004077b:	ins    BYTE PTR es:[rdi],dx
   14004077c:	outs   dx,DWORD PTR ds:[rsi]
   14004077d:	ja     0x1400407b2
   14004077f:	add    BYTE PTR [rcx+0x65],bh
   140040782:	ins    BYTE PTR es:[rdi],dx
   140040783:	ins    BYTE PTR es:[rdi],dx
   140040784:	outs   dx,DWORD PTR ds:[rsi]
   140040785:	ja     0x1400407bb
   140040787:	add    BYTE PTR [rcx+0x65],bh
   14004078a:	ins    BYTE PTR es:[rdi],dx
   14004078b:	ins    BYTE PTR es:[rdi],dx
   14004078c:	outs   dx,DWORD PTR ds:[rsi]
   14004078d:	ja     0x1400407f6
   14004078f:	jb     0x1400407f6
   140040791:	outs   dx,BYTE PTR gs:[rsi]
   140040793:	add    BYTE PTR [rax],al
   140040795:	add    BYTE PTR [rax],al
   140040797:	add    BYTE PTR [rcx+0x6c],ah
   14004079a:	imul   esp,DWORD PTR [rbx+0x65],0x65756c62
   1400407a1:	add    BYTE PTR [rax],al
   1400407a3:	add    BYTE PTR [rax],al
   1400407a5:	add    BYTE PTR [rax],al
   1400407a7:	add    BYTE PTR [rcx+0x6e],ah
   1400407aa:	je     0x140040815
   1400407ac:	jno    0x140040823
   1400407ae:	gs ja  0x140040819
   1400407b1:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x61000000
   1400407b9:	outs   dx,BYTE PTR ds:[rsi]
   1400407ba:	je     0x140040825
   1400407bc:	jno    0x140040833
   1400407be:	gs ja  0x140040829
   1400407c1:	imul   esi,DWORD PTR [rbp+riz*2+0x31],0x61000000
   1400407c9:	outs   dx,BYTE PTR ds:[rsi]
   1400407ca:	je     0x140040835
   1400407cc:	jno    0x140040843
   1400407ce:	gs ja  0x140040839
   1400407d1:	imul   esi,DWORD PTR [rbp+riz*2+0x32],0x61000000
   1400407d9:	outs   dx,BYTE PTR ds:[rsi]
   1400407da:	je     0x140040845
   1400407dc:	jno    0x140040853
   1400407de:	gs ja  0x140040849
   1400407e1:	imul   esi,DWORD PTR [rbp+riz*2+0x33],0x61000000
   1400407e9:	outs   dx,BYTE PTR ds:[rsi]
   1400407ea:	je     0x140040855
   1400407ec:	jno    0x140040863
   1400407ee:	gs ja  0x140040859
   1400407f1:	imul   esi,DWORD PTR [rbp+riz*2+0x34],0x61000000
   1400407f9:	jno    0x140040870
   1400407fb:	(bad)  
   1400407fc:	ins    DWORD PTR es:[rdi],dx
   1400407fd:	(bad)  
   1400407fe:	jb     0x140040869
   140040800:	outs   dx,BYTE PTR ds:[rsi]
   140040801:	add    BYTE PTR gs:[rax],al
   140040804:	add    BYTE PTR [rax],al
   140040806:	add    BYTE PTR [rax],al
   140040808:	(bad)  
   140040809:	jno    0x140040880
   14004080b:	(bad)  
   14004080c:	ins    DWORD PTR es:[rdi],dx
   14004080d:	(bad)  
   14004080e:	jb     0x140040879
   140040810:	outs   dx,BYTE PTR ds:[rsi]
   140040811:	xor    DWORD PTR gs:[rax],eax
   140040814:	add    BYTE PTR [rax],al
   140040816:	add    BYTE PTR [rax],al
   140040818:	(bad)  
   140040819:	jno    0x140040890
   14004081b:	(bad)  
   14004081c:	ins    DWORD PTR es:[rdi],dx
   14004081d:	(bad)  
   14004081e:	jb     0x140040889
   140040820:	outs   dx,BYTE PTR ds:[rsi]
   140040821:	xor    al,BYTE PTR gs:[rax]
   140040824:	add    BYTE PTR [rax],al
   140040826:	add    BYTE PTR [rax],al
   140040828:	(bad)  
   140040829:	jno    0x1400408a0
   14004082b:	(bad)  
   14004082c:	ins    DWORD PTR es:[rdi],dx
   14004082d:	(bad)  
   14004082e:	jb     0x140040899
   140040830:	outs   dx,BYTE PTR ds:[rsi]
   140040831:	xor    eax,DWORD PTR gs:[rax]
   140040834:	add    BYTE PTR [rax],al
   140040836:	add    BYTE PTR [rax],al
   140040838:	(bad)  
   140040839:	jno    0x1400408b0
   14004083b:	(bad)  
   14004083c:	ins    DWORD PTR es:[rdi],dx
   14004083d:	(bad)  
   14004083e:	jb     0x1400408a9
   140040840:	outs   dx,BYTE PTR ds:[rsi]
   140040841:	gs xor al,0x0
   140040844:	(bad)  
   140040845:	jp     0x1400408bc
   140040847:	jb     0x1400408ae
   140040849:	add    BYTE PTR [rax],al
   14004084b:	add    BYTE PTR [rcx+0x7a],ah
   14004084e:	jne    0x1400408c2
   140040850:	xor    DWORD PTR gs:[rax],eax
   140040853:	add    BYTE PTR [rcx+0x7a],ah
   140040856:	jne    0x1400408ca
   140040858:	xor    al,BYTE PTR gs:[rax]
   14004085b:	add    BYTE PTR [rcx+0x7a],ah
   14004085e:	jne    0x1400408d2
   140040860:	xor    eax,DWORD PTR gs:[rax]
   140040863:	add    BYTE PTR [rcx+0x7a],ah
   140040866:	jne    0x1400408da
   140040868:	gs xor al,0x0
   14004086b:	add    BYTE PTR [rdx+0x65],ah
   14004086e:	imul   esp,DWORD PTR [rdi+0x65],0x62000000
   140040875:	imul   esi,DWORD PTR [rbx+0x71],0x6575
   14004087c:	add    BYTE PTR [rax],al
   14004087e:	add    BYTE PTR [rax],al
   140040880:	(bad)  
   140040881:	imul   esi,DWORD PTR [rbx+0x71],0x316575
   140040888:	(bad)  
   140040889:	imul   esi,DWORD PTR [rbx+0x71],0x326575
   140040890:	(bad)  
   140040891:	imul   esi,DWORD PTR [rbx+0x71],0x336575
   140040898:	(bad)  
   140040899:	imul   esi,DWORD PTR [rbx+0x71],0x346575
   1400408a0:	(bad)  
   1400408a1:	ins    BYTE PTR es:[rdi],dx
   1400408a2:	(bad)  
   1400408a3:	outs   dx,BYTE PTR ds:[rsi]
   1400408a4:	movsxd ebp,DWORD PTR [rax+0x65]
   1400408a7:	fs (bad) 
   1400408a9:	ins    BYTE PTR es:[rdi],dx
   1400408aa:	ins    DWORD PTR es:[rdi],dx
   1400408ab:	outs   dx,DWORD PTR ds:[rsi]
   1400408ac:	outs   dx,BYTE PTR ds:[rsi]
   1400408ad:	add    BYTE PTR fs:[rax],al
   1400408b0:	(bad)  
   1400408b1:	ins    BYTE PTR es:[rdi],dx
   1400408b2:	jne    0x140040919
   1400408b4:	add    BYTE PTR [rax],al
   1400408b6:	add    BYTE PTR [rax],al
   1400408b8:	(bad)  
   1400408b9:	ins    BYTE PTR es:[rdi],dx
   1400408ba:	jne    0x140040921
   1400408bc:	xor    DWORD PTR [rax],eax
   1400408be:	add    BYTE PTR [rax],al
   1400408c0:	(bad)  
   1400408c1:	ins    BYTE PTR es:[rdi],dx
   1400408c2:	jne    0x140040929
   1400408c4:	xor    al,BYTE PTR [rax]
   1400408c6:	add    BYTE PTR [rax],al
   1400408c8:	(bad)  
   1400408c9:	ins    BYTE PTR es:[rdi],dx
   1400408ca:	jne    0x140040931
   1400408cc:	xor    eax,DWORD PTR [rax]
   1400408ce:	add    BYTE PTR [rax],al
   1400408d0:	(bad)  
   1400408d1:	ins    BYTE PTR es:[rdi],dx
   1400408d2:	jne    0x140040939
   1400408d4:	xor    al,0x0
   1400408d6:	add    BYTE PTR [rax],al
   1400408d8:	(bad)  
   1400408d9:	ins    BYTE PTR es:[rdi],dx
   1400408da:	jne    0x140040941
   1400408dc:	jbe    0x140040947
   1400408de:	outs   dx,DWORD PTR ds:[rsi]
   1400408df:	ins    BYTE PTR es:[rdi],dx
   1400408e0:	gs je  0x1400408e3
   1400408e3:	add    BYTE PTR [rdx+0x72],ah
   1400408e6:	outs   dx,DWORD PTR ds:[rsi]
   1400408e7:	ja     0x140040957
   1400408e9:	add    BYTE PTR [rax],al
   1400408eb:	add    BYTE PTR [rdx+0x72],ah
   1400408ee:	outs   dx,DWORD PTR ds:[rsi]
   1400408ef:	ja     0x14004095f
   1400408f1:	xor    DWORD PTR [rax],eax
   1400408f3:	add    BYTE PTR [rdx+0x72],ah
   1400408f6:	outs   dx,DWORD PTR ds:[rsi]
   1400408f7:	ja     0x140040967
   1400408f9:	xor    al,BYTE PTR [rax]
   1400408fb:	add    BYTE PTR [rdx+0x72],ah
   1400408fe:	outs   dx,DWORD PTR ds:[rsi]
   1400408ff:	ja     0x14004096f
   140040901:	xor    eax,DWORD PTR [rax]
   140040903:	add    BYTE PTR [rdx+0x72],ah
   140040906:	outs   dx,DWORD PTR ds:[rsi]
   140040907:	ja     0x140040977
   140040909:	xor    al,0x0
   14004090b:	add    BYTE PTR [rax],al
   14004090d:	add    BYTE PTR [rax],al
   14004090f:	add    BYTE PTR [rdx+0x75],ah
   140040912:	jb     0x140040980
   140040914:	jns    0x14004098d
   140040916:	outs   dx,DWORD PTR ds:[rsi]
   140040917:	outs   dx,DWORD PTR ds:[rsi]
   140040918:	add    BYTE PTR fs:[rax],al
   14004091b:	add    BYTE PTR [rax],al
   14004091d:	add    BYTE PTR [rax],al
   14004091f:	add    BYTE PTR [rdx+0x75],ah
   140040922:	jb     0x140040990
   140040924:	jns    0x14004099d
   140040926:	outs   dx,DWORD PTR ds:[rsi]
   140040927:	outs   dx,DWORD PTR ds:[rsi]
   140040928:	xor    DWORD PTR fs:[rax],eax
   14004092b:	add    BYTE PTR [rax],al
   14004092d:	add    BYTE PTR [rax],al
   14004092f:	add    BYTE PTR [rdx+0x75],ah
   140040932:	jb     0x1400409a0
   140040934:	jns    0x1400409ad
   140040936:	outs   dx,DWORD PTR ds:[rsi]
   140040937:	outs   dx,DWORD PTR ds:[rsi]
   140040938:	xor    al,BYTE PTR fs:[rax]
   14004093b:	add    BYTE PTR [rax],al
   14004093d:	add    BYTE PTR [rax],al
   14004093f:	add    BYTE PTR [rdx+0x75],ah
   140040942:	jb     0x1400409b0
   140040944:	jns    0x1400409bd
   140040946:	outs   dx,DWORD PTR ds:[rsi]
   140040947:	outs   dx,DWORD PTR ds:[rsi]
   140040948:	xor    eax,DWORD PTR fs:[rax]
   14004094b:	add    BYTE PTR [rax],al
   14004094d:	add    BYTE PTR [rax],al
   14004094f:	add    BYTE PTR [rdx+0x75],ah
   140040952:	jb     0x1400409c0
   140040954:	jns    0x1400409cd
   140040956:	outs   dx,DWORD PTR ds:[rsi]
   140040957:	outs   dx,DWORD PTR ds:[rsi]
   140040958:	fs xor al,0x0
   14004095b:	add    BYTE PTR [rax],al
   14004095d:	add    BYTE PTR [rax],al
   14004095f:	add    BYTE PTR [rbx+0x61],ah
   140040962:	fs gs je 0x1400409c8
   140040966:	ins    BYTE PTR es:[rdi],dx
   140040967:	jne    0x1400409ce
   140040969:	add    BYTE PTR [rax],al
   14004096b:	add    BYTE PTR [rax],al
   14004096d:	add    BYTE PTR [rax],al
   14004096f:	add    BYTE PTR [rbx+0x61],ah
   140040972:	fs gs je 0x1400409d8
   140040976:	ins    BYTE PTR es:[rdi],dx
   140040977:	jne    0x1400409de
   140040979:	xor    DWORD PTR [rax],eax
   14004097b:	add    BYTE PTR [rax],al
   14004097d:	add    BYTE PTR [rax],al
   14004097f:	add    BYTE PTR [rbx+0x61],ah
   140040982:	fs gs je 0x1400409e8
   140040986:	ins    BYTE PTR es:[rdi],dx
   140040987:	jne    0x1400409ee
   140040989:	xor    al,BYTE PTR [rax]
   14004098b:	add    BYTE PTR [rax],al
   14004098d:	add    BYTE PTR [rax],al
   14004098f:	add    BYTE PTR [rbx+0x61],ah
   140040992:	fs gs je 0x1400409f8
   140040996:	ins    BYTE PTR es:[rdi],dx
   140040997:	jne    0x1400409fe
   140040999:	xor    eax,DWORD PTR [rax]
   14004099b:	add    BYTE PTR [rax],al
   14004099d:	add    BYTE PTR [rax],al
   14004099f:	add    BYTE PTR [rbx+0x61],ah
   1400409a2:	fs gs je 0x140040a08
   1400409a6:	ins    BYTE PTR es:[rdi],dx
   1400409a7:	jne    0x140040a0e
   1400409a9:	xor    al,0x0
   1400409ab:	add    BYTE PTR [rax],al
   1400409ad:	add    BYTE PTR [rax],al
   1400409af:	add    BYTE PTR [rbx+0x68],ah
   1400409b2:	(bad)  
   1400409b3:	jb     0x140040a29
   1400409b5:	jb     0x140040a1c
   1400409b7:	jne    0x140040a2c
   1400409b9:	add    BYTE PTR gs:[rax],al
   1400409bc:	add    BYTE PTR [rax],al
   1400409be:	add    BYTE PTR [rax],al
   1400409c0:	movsxd ebp,DWORD PTR [rax+0x61]
   1400409c3:	jb     0x140040a39
   1400409c5:	jb     0x140040a2c
   1400409c7:	jne    0x140040a3c
   1400409c9:	xor    DWORD PTR gs:[rax],eax
   1400409cc:	add    BYTE PTR [rax],al
   1400409ce:	add    BYTE PTR [rax],al
   1400409d0:	movsxd ebp,DWORD PTR [rax+0x61]
   1400409d3:	jb     0x140040a49
   1400409d5:	jb     0x140040a3c
   1400409d7:	jne    0x140040a4c
   1400409d9:	xor    al,BYTE PTR gs:[rax]
   1400409dc:	add    BYTE PTR [rax],al
   1400409de:	add    BYTE PTR [rax],al
   1400409e0:	movsxd ebp,DWORD PTR [rax+0x61]
   1400409e3:	jb     0x140040a59
   1400409e5:	jb     0x140040a4c
   1400409e7:	jne    0x140040a5c
   1400409e9:	xor    eax,DWORD PTR gs:[rax]
   1400409ec:	add    BYTE PTR [rax],al
   1400409ee:	add    BYTE PTR [rax],al
   1400409f0:	movsxd ebp,DWORD PTR [rax+0x61]
   1400409f3:	jb     0x140040a69
   1400409f5:	jb     0x140040a5c
   1400409f7:	jne    0x140040a6c
   1400409f9:	gs xor al,0x0
   1400409fc:	add    BYTE PTR [rax],al
   1400409fe:	add    BYTE PTR [rax],al
   140040a00:	movsxd ebp,DWORD PTR [rax+0x6f]
   140040a03:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140040a06:	(bad)  
   140040a07:	je     0x140040a6e
   140040a09:	add    BYTE PTR [rax],al
   140040a0b:	add    BYTE PTR [rax],al
   140040a0d:	add    BYTE PTR [rax],al
   140040a0f:	add    BYTE PTR [rbx+0x68],ah
   140040a12:	outs   dx,DWORD PTR ds:[rsi]
   140040a13:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140040a16:	(bad)  
   140040a17:	je     0x140040a7e
   140040a19:	xor    DWORD PTR [rax],eax
   140040a1b:	add    BYTE PTR [rax],al
   140040a1d:	add    BYTE PTR [rax],al
   140040a1f:	add    BYTE PTR [rbx+0x68],ah
   140040a22:	outs   dx,DWORD PTR ds:[rsi]
   140040a23:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140040a26:	(bad)  
   140040a27:	je     0x140040a8e
   140040a29:	xor    al,BYTE PTR [rax]
   140040a2b:	add    BYTE PTR [rax],al
   140040a2d:	add    BYTE PTR [rax],al
   140040a2f:	add    BYTE PTR [rbx+0x68],ah
   140040a32:	outs   dx,DWORD PTR ds:[rsi]
   140040a33:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140040a36:	(bad)  
   140040a37:	je     0x140040a9e
   140040a39:	xor    eax,DWORD PTR [rax]
   140040a3b:	add    BYTE PTR [rax],al
   140040a3d:	add    BYTE PTR [rax],al
   140040a3f:	add    BYTE PTR [rbx+0x68],ah
   140040a42:	outs   dx,DWORD PTR ds:[rsi]
   140040a43:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140040a46:	(bad)  
   140040a47:	je     0x140040aae
   140040a49:	xor    al,0x0
   140040a4b:	add    BYTE PTR [rbx+0x6f],ah
   140040a4e:	jb     0x140040ab1
   140040a50:	ins    BYTE PTR es:[rdi],dx
   140040a51:	add    BYTE PTR [rax],al
   140040a53:	add    BYTE PTR [rbx+0x6f],ah
   140040a56:	jb     0x140040ab9
   140040a58:	ins    BYTE PTR es:[rdi],dx
   140040a59:	xor    DWORD PTR [rax],eax
   140040a5b:	add    BYTE PTR [rbx+0x6f],ah
   140040a5e:	jb     0x140040ac1
   140040a60:	ins    BYTE PTR es:[rdi],dx
   140040a61:	xor    al,BYTE PTR [rax]
   140040a63:	add    BYTE PTR [rbx+0x6f],ah
   140040a66:	jb     0x140040ac9
   140040a68:	ins    BYTE PTR es:[rdi],dx
   140040a69:	xor    eax,DWORD PTR [rax]
   140040a6b:	add    BYTE PTR [rbx+0x6f],ah
   140040a6e:	jb     0x140040ad1
   140040a70:	ins    BYTE PTR es:[rdi],dx
   140040a71:	xor    al,0x0
   140040a73:	add    BYTE PTR [rax],al
   140040a75:	add    BYTE PTR [rax],al
   140040a77:	add    BYTE PTR [rbx+0x6f],ah
   140040a7a:	jb     0x140040aea
   140040a7c:	data16 ins BYTE PTR es:[rdi],dx
   140040a7e:	outs   dx,DWORD PTR ds:[rsi]
   140040a7f:	ja     0x140040ae6
   140040a81:	jb     0x140040ae5
   140040a83:	ins    BYTE PTR es:[rdi],dx
   140040a84:	jne    0x140040aeb
   140040a86:	add    BYTE PTR [rax],al
   140040a88:	movsxd ebp,DWORD PTR [rdi+0x72]
   140040a8b:	outs   dx,BYTE PTR ds:[rsi]
   140040a8c:	jae    0x140040af7
   140040a8e:	ins    BYTE PTR es:[rdi],dx
   140040a8f:	imul   eax,DWORD PTR [rax],0x0
   140040a92:	add    BYTE PTR [rax],al
   140040a94:	add    BYTE PTR [rax],al
   140040a96:	add    BYTE PTR [rax],al
   140040a98:	movsxd ebp,DWORD PTR [rdi+0x72]
   140040a9b:	outs   dx,BYTE PTR ds:[rsi]
   140040a9c:	jae    0x140040b07
   140040a9e:	ins    BYTE PTR es:[rdi],dx
   140040a9f:	imul   esi,DWORD PTR [rcx],0x0
   140040aa2:	add    BYTE PTR [rax],al
   140040aa4:	add    BYTE PTR [rax],al
   140040aa6:	add    BYTE PTR [rax],al
   140040aa8:	movsxd ebp,DWORD PTR [rdi+0x72]
   140040aab:	outs   dx,BYTE PTR ds:[rsi]
   140040aac:	jae    0x140040b17
   140040aae:	ins    BYTE PTR es:[rdi],dx
   140040aaf:	imul   esi,DWORD PTR [rdx],0x0
   140040ab2:	add    BYTE PTR [rax],al
   140040ab4:	add    BYTE PTR [rax],al
   140040ab6:	add    BYTE PTR [rax],al
   140040ab8:	movsxd ebp,DWORD PTR [rdi+0x72]
   140040abb:	outs   dx,BYTE PTR ds:[rsi]
   140040abc:	jae    0x140040b27
   140040abe:	ins    BYTE PTR es:[rdi],dx
   140040abf:	imul   esi,DWORD PTR [rbx],0x0
   140040ac2:	add    BYTE PTR [rax],al
   140040ac4:	add    BYTE PTR [rax],al
   140040ac6:	add    BYTE PTR [rax],al
   140040ac8:	movsxd ebp,DWORD PTR [rdi+0x72]
   140040acb:	outs   dx,BYTE PTR ds:[rsi]
   140040acc:	jae    0x140040b37
   140040ace:	ins    BYTE PTR es:[rdi],dx
   140040acf:	imul   esi,DWORD PTR [rax+rax*1],0x0
   140040ad3:	add    BYTE PTR [rax],al
   140040ad5:	add    BYTE PTR [rax],al
   140040ad7:	add    BYTE PTR [rbx+0x72],ah
   140040ada:	imul   ebp,DWORD PTR [rbp+0x73],0x63006e6f
   140040ae1:	jns    0x140040b44
   140040ae3:	outs   dx,BYTE PTR ds:[rsi]
   140040ae4:	add    BYTE PTR [rax],al
   140040ae6:	add    BYTE PTR [rax],al
   140040ae8:	movsxd edi,DWORD PTR [rcx+0x61]
   140040aeb:	outs   dx,BYTE PTR ds:[rsi]
   140040aec:	xor    DWORD PTR [rax],eax
   140040aee:	add    BYTE PTR [rax],al
   140040af0:	movsxd edi,DWORD PTR [rcx+0x61]
   140040af3:	outs   dx,BYTE PTR ds:[rsi]
   140040af4:	xor    al,BYTE PTR [rax]
   140040af6:	add    BYTE PTR [rax],al
   140040af8:	movsxd edi,DWORD PTR [rcx+0x61]
   140040afb:	outs   dx,BYTE PTR ds:[rsi]
   140040afc:	xor    eax,DWORD PTR [rax]
   140040afe:	add    BYTE PTR [rax],al
   140040b00:	movsxd edi,DWORD PTR [rcx+0x61]
   140040b03:	outs   dx,BYTE PTR ds:[rsi]
   140040b04:	xor    al,0x0
   140040b06:	add    BYTE PTR [rax],al
   140040b08:	fs (bad) 
   140040b0a:	jb     0x140040b77
   140040b0c:	outs   dx,DWORD PTR ds:[esi]
   140040b0e:	ins    BYTE PTR es:[rdi],dx
   140040b0f:	fs outs dx,BYTE PTR gs:[rsi]
   140040b12:	jb     0x140040b83
   140040b14:	add    BYTE PTR fs:[rax],al
   140040b17:	add    BYTE PTR [rcx+riz*2+0x72],ah
   140040b1b:	imul   esp,DWORD PTR [rdi+0x6f],0x6c
   140040b1f:	fs outs dx,BYTE PTR gs:[rsi]
   140040b22:	jb     0x140040b93
   140040b24:	xor    DWORD PTR fs:[rax],eax
   140040b27:	add    BYTE PTR [rcx+riz*2+0x72],ah
   140040b2b:	imul   esp,DWORD PTR [rdi+0x6f],0x6c
   140040b2f:	fs outs dx,BYTE PTR gs:[rsi]
   140040b32:	jb     0x140040ba3
   140040b34:	xor    al,BYTE PTR fs:[rax]
   140040b37:	add    BYTE PTR [rcx+riz*2+0x72],ah
   140040b3b:	imul   esp,DWORD PTR [rdi+0x6f],0x6c
   140040b3f:	fs outs dx,BYTE PTR gs:[rsi]
   140040b42:	jb     0x140040bb3
   140040b44:	xor    eax,DWORD PTR fs:[rax]
   140040b47:	add    BYTE PTR [rcx+riz*2+0x72],ah
   140040b4b:	imul   esp,DWORD PTR [rdi+0x6f],0x6c
   140040b4f:	fs outs dx,BYTE PTR gs:[rsi]
   140040b52:	jb     0x140040bc3
   140040b54:	fs xor al,0x0
   140040b57:	add    BYTE PTR [rcx+riz*2+0x72],ah
   140040b5b:	imul   esp,DWORD PTR [rdi+0x72],0x65
   140040b5f:	outs   dx,BYTE PTR gs:[rsi]
   140040b61:	add    BYTE PTR [rax],al
   140040b63:	add    BYTE PTR [rax],al
   140040b65:	add    BYTE PTR [rax],al
   140040b67:	add    BYTE PTR [rcx+riz*2+0x72],ah
   140040b6b:	imul   ebp,DWORD PTR [rbx+0x68],0x61
   140040b6f:	imul   ebp,DWORD PTR [rcx+0x0],0x0
   140040b73:	add    BYTE PTR [rax],al
   140040b75:	add    BYTE PTR [rax],al
   140040b77:	add    BYTE PTR [rcx+riz*2+0x72],ah
   140040b7b:	imul   ebp,DWORD PTR [rdi+0x6c],0x69
   140040b7f:	jbe    0x140040be6
   140040b81:	addr32 jb 0x140040be9
   140040b84:	outs   dx,BYTE PTR gs:[rsi]
   140040b86:	add    BYTE PTR [rax],al
   140040b88:	fs (bad) 
   140040b8a:	jb     0x140040bf7
   140040b8c:	outs   dx,DWORD PTR ds:[rsi]
   140040b8d:	ins    BYTE PTR es:[rdi],dx
   140040b8e:	imul   esi,DWORD PTR [rsi+0x65],0x65657267
   140040b95:	outs   dx,BYTE PTR ds:[rsi]
   140040b96:	xor    DWORD PTR [rax],eax
   140040b98:	fs (bad) 
   140040b9a:	jb     0x140040c07
   140040b9c:	outs   dx,DWORD PTR ds:[rsi]
   140040b9d:	ins    BYTE PTR es:[rdi],dx
   140040b9e:	imul   esi,DWORD PTR [rsi+0x65],0x65657267
   140040ba5:	outs   dx,BYTE PTR ds:[rsi]
   140040ba6:	xor    al,BYTE PTR [rax]
   140040ba8:	fs (bad) 
   140040baa:	jb     0x140040c17
   140040bac:	outs   dx,DWORD PTR ds:[rsi]
   140040bad:	ins    BYTE PTR es:[rdi],dx
   140040bae:	imul   esi,DWORD PTR [rsi+0x65],0x65657267
   140040bb5:	outs   dx,BYTE PTR ds:[rsi]
   140040bb6:	xor    eax,DWORD PTR [rax]
   140040bb8:	fs (bad) 
   140040bba:	jb     0x140040c27
   140040bbc:	outs   dx,DWORD PTR ds:[rsi]
   140040bbd:	ins    BYTE PTR es:[rdi],dx
   140040bbe:	imul   esi,DWORD PTR [rsi+0x65],0x65657267
   140040bc5:	outs   dx,BYTE PTR ds:[rsi]
   140040bc6:	xor    al,0x0
   140040bc8:	fs (bad) 
   140040bca:	jb     0x140040c37
   140040bcc:	outs   dx,DWORD PTR ds:[rsi]
   140040bcd:	jb     0x140040c30
   140040bcf:	outs   dx,BYTE PTR ds:[rsi]
   140040bd0:	add    BYTE PTR gs:[eax],al
   140040bd4:	add    BYTE PTR [rax],al
   140040bd6:	add    BYTE PTR [rax],al
   140040bd8:	fs (bad) 
   140040bda:	jb     0x140040c47
   140040bdc:	outs   dx,DWORD PTR ds:[rsi]
   140040bdd:	jb     0x140040c40
   140040bdf:	outs   dx,BYTE PTR ds:[rsi]
   140040be0:	xor    DWORD PTR gs:[eax],eax
   140040be4:	add    BYTE PTR [rax],al
   140040be6:	add    BYTE PTR [rax],al
   140040be8:	fs (bad) 
   140040bea:	jb     0x140040c57
   140040bec:	outs   dx,DWORD PTR ds:[rsi]
   140040bed:	jb     0x140040c50
   140040bef:	outs   dx,BYTE PTR ds:[rsi]
   140040bf0:	xor    al,BYTE PTR gs:[eax]
   140040bf4:	add    BYTE PTR [rax],al
   140040bf6:	add    BYTE PTR [rax],al
   140040bf8:	fs (bad) 
   140040bfa:	jb     0x140040c67
   140040bfc:	outs   dx,DWORD PTR ds:[rsi]
   140040bfd:	jb     0x140040c60
   140040bff:	outs   dx,BYTE PTR ds:[rsi]
   140040c00:	xor    eax,DWORD PTR gs:[eax]
   140040c04:	add    BYTE PTR [rax],al
   140040c06:	add    BYTE PTR [rax],al
   140040c08:	fs (bad) 
   140040c0a:	jb     0x140040c77
   140040c0c:	outs   dx,DWORD PTR ds:[rsi]
   140040c0d:	jb     0x140040c70
   140040c0f:	outs   dx,BYTE PTR ds:[rsi]
   140040c10:	addr32 gs xor al,0x0
   140040c14:	add    BYTE PTR [rax],al
   140040c16:	add    BYTE PTR [rax],al
   140040c18:	fs (bad) 
   140040c1a:	jb     0x140040c87
   140040c1c:	outs   dx,DWORD PTR ds:[rsi]
   140040c1d:	jb     0x140040c82
   140040c1f:	push   0x6469
   140040c24:	add    BYTE PTR [rax],al
   140040c26:	add    BYTE PTR [rax],al
   140040c28:	fs (bad) 
   140040c2a:	jb     0x140040c97
   140040c2c:	outs   dx,DWORD PTR ds:[rsi]
   140040c2d:	jb     0x140040c92
   140040c2f:	push   0x316469
   140040c34:	add    BYTE PTR [rax],al
   140040c36:	add    BYTE PTR [rax],al
   140040c38:	fs (bad) 
   140040c3a:	jb     0x140040ca7
   140040c3c:	outs   dx,DWORD PTR ds:[rsi]
   140040c3d:	jb     0x140040ca2
   140040c3f:	push   0x326469
   140040c44:	add    BYTE PTR [rax],al
   140040c46:	add    BYTE PTR [rax],al
   140040c48:	fs (bad) 
   140040c4a:	jb     0x140040cb7
   140040c4c:	outs   dx,DWORD PTR ds:[rsi]
   140040c4d:	jb     0x140040cb2
   140040c4f:	push   0x336469
   140040c54:	add    BYTE PTR [rax],al
   140040c56:	add    BYTE PTR [rax],al
   140040c58:	fs (bad) 
   140040c5a:	jb     0x140040cc7
   140040c5c:	outs   dx,DWORD PTR ds:[rsi]
   140040c5d:	jb     0x140040cc2
   140040c5f:	push   0x346469
   140040c64:	add    BYTE PTR [rax],al
   140040c66:	add    BYTE PTR [rax],al
   140040c68:	fs (bad) 
   140040c6a:	jb     0x140040cd7
   140040c6c:	jae    0x140040ccf
   140040c6e:	ins    BYTE PTR es:[rdi],dx
   140040c6f:	ins    DWORD PTR es:[rdi],dx
   140040c70:	outs   dx,DWORD PTR ds:[rsi]
   140040c71:	outs   dx,BYTE PTR ds:[rsi]
   140040c72:	add    BYTE PTR [rax],al
   140040c74:	add    BYTE PTR [rax],al
   140040c76:	add    BYTE PTR [rax],al
   140040c78:	fs (bad) 
   140040c7a:	jb     0x140040ce7
   140040c7c:	jae    0x140040ce3
   140040c7e:	(bad)  
   140040c7f:	addr32 jb 0x140040ce7
   140040c82:	outs   dx,BYTE PTR gs:[rsi]
   140040c84:	add    BYTE PTR [rax],al
   140040c86:	add    BYTE PTR [rax],al
   140040c88:	fs (bad) 
   140040c8a:	jb     0x140040cf7
   140040c8c:	jae    0x140040cf3
   140040c8e:	(bad)  
   140040c8f:	addr32 jb 0x140040cf7
   140040c92:	outs   dx,BYTE PTR gs:[rsi]
   140040c94:	xor    DWORD PTR [rax],eax
   140040c96:	add    BYTE PTR [rax],al
   140040c98:	fs (bad) 
   140040c9a:	jb     0x140040d07
   140040c9c:	jae    0x140040d03
   140040c9e:	(bad)  
   140040c9f:	addr32 jb 0x140040d07
   140040ca2:	outs   dx,BYTE PTR gs:[rsi]
   140040ca4:	xor    al,BYTE PTR [rax]
   140040ca6:	add    BYTE PTR [rax],al
   140040ca8:	fs (bad) 
   140040caa:	jb     0x140040d17
   140040cac:	jae    0x140040d13
   140040cae:	(bad)  
   140040caf:	addr32 jb 0x140040d17
   140040cb2:	outs   dx,BYTE PTR gs:[rsi]
   140040cb4:	xor    eax,DWORD PTR [rax]
   140040cb6:	add    BYTE PTR [rax],al
   140040cb8:	fs (bad) 
   140040cba:	jb     0x140040d27
   140040cbc:	jae    0x140040d23
   140040cbe:	(bad)  
   140040cbf:	addr32 jb 0x140040d27
   140040cc2:	outs   dx,BYTE PTR gs:[rsi]
   140040cc4:	xor    al,0x0
   140040cc6:	add    BYTE PTR [rax],al
   140040cc8:	fs (bad) 
   140040cca:	jb     0x140040d37
   140040ccc:	jae    0x140040d3a
   140040cce:	(bad)  
   140040ccf:	je     0x140040d36
   140040cd1:	(bad)  
   140040cd2:	ins    BYTE PTR es:[rdi],dx
   140040cd3:	jne    0x140040d3a
   140040cd5:	add    BYTE PTR [rax],al
   140040cd7:	add    BYTE PTR [rcx+riz*2+0x72],ah
   140040cdb:	imul   esi,DWORD PTR [rbx+0x6c],0x61
   140040cdf:	je     0x140040d46
   140040ce1:	addr32 jb 0x140040d45
   140040ce4:	jns    0x140040ce6
   140040ce6:	add    BYTE PTR [rax],al
   140040ce8:	fs (bad) 
   140040cea:	jb     0x140040d57
   140040cec:	jae    0x140040d5a
   140040cee:	(bad)  
   140040cef:	je     0x140040d56
   140040cf1:	addr32 jb 0x140040d55
   140040cf4:	jns    0x140040d27
   140040cf6:	add    BYTE PTR [rax],al
   140040cf8:	fs (bad) 
   140040cfa:	jb     0x140040d67
   140040cfc:	jae    0x140040d6a
   140040cfe:	(bad)  
   140040cff:	je     0x140040d66
   140040d01:	addr32 jb 0x140040d65
   140040d04:	jns    0x140040d38
   140040d06:	add    BYTE PTR [rax],al
   140040d08:	fs (bad) 
   140040d0a:	jb     0x140040d77
   140040d0c:	jae    0x140040d7a
   140040d0e:	(bad)  
   140040d0f:	je     0x140040d76
   140040d11:	addr32 jb 0x140040d75
   140040d14:	jns    0x140040d49
   140040d16:	add    BYTE PTR [rax],al
   140040d18:	fs (bad) 
   140040d1a:	jb     0x140040d87
   140040d1c:	jae    0x140040d8a
   140040d1e:	(bad)  
   140040d1f:	je     0x140040d86
   140040d21:	addr32 jb 0x140040d85
   140040d24:	jns    0x140040d5a
   140040d26:	add    BYTE PTR [rax],al
   140040d28:	fs (bad) 
   140040d2a:	jb     0x140040d97
   140040d2c:	jae    0x140040d9a
   140040d2e:	(bad)  
   140040d2f:	je     0x140040d96
   140040d31:	addr32 jb 0x140040d99
   140040d34:	jns    0x140040d36
   140040d36:	add    BYTE PTR [rax],al
   140040d38:	fs (bad) 
   140040d3a:	jb     0x140040da7
   140040d3c:	je     0x140040db3
   140040d3e:	jb     0x140040db1
   140040d40:	jne    0x140040db1
   140040d42:	imul   esi,DWORD PTR [rbx+0x65],0x64000000
   140040d49:	(bad)  
   140040d4a:	jb     0x140040db7
   140040d4c:	jbe    0x140040db7
   140040d4e:	outs   dx,DWORD PTR ds:[rsi]
   140040d4f:	ins    BYTE PTR es:[rdi],dx
   140040d50:	gs je  0x140040d53
   140040d53:	add    BYTE PTR [rax],al
   140040d55:	add    BYTE PTR [rax],al
   140040d57:	add    BYTE PTR [rbp+riz*2+0x65],ah
   140040d5b:	jo     0x140040dcd
   140040d5d:	imul   ebp,DWORD PTR [rsi+0x6b],0x0
   140040d64:	add    BYTE PTR [rax],al
   140040d66:	add    BYTE PTR [rax],al
   140040d68:	fs gs gs jo 0x140040ddd
   140040d6d:	imul   ebp,DWORD PTR [rsi+0x6b],0x31
   140040d74:	add    BYTE PTR [rax],al
   140040d76:	add    BYTE PTR [rax],al
   140040d78:	fs gs gs jo 0x140040ded
   140040d7d:	imul   ebp,DWORD PTR [rsi+0x6b],0x32
   140040d84:	add    BYTE PTR [rax],al
   140040d86:	add    BYTE PTR [rax],al
   140040d88:	fs gs gs jo 0x140040dfd
   140040d8d:	imul   ebp,DWORD PTR [rsi+0x6b],0x33
   140040d94:	add    BYTE PTR [rax],al
   140040d96:	add    BYTE PTR [rax],al
   140040d98:	fs gs gs jo 0x140040e0d
   140040d9d:	imul   ebp,DWORD PTR [rsi+0x6b],0x34
   140040da4:	add    BYTE PTR [rax],al
   140040da6:	add    BYTE PTR [rax],al
   140040da8:	fs gs gs jo 0x140040e20
   140040dad:	imul   edi,DWORD PTR [rcx+0x62],0x6c
   140040db1:	jne    0x140040e18
   140040db3:	add    BYTE PTR [rax],al
   140040db5:	add    BYTE PTR [rax],al
   140040db7:	add    BYTE PTR [rbp+riz*2+0x65],ah
   140040dbb:	jo     0x140040e30
   140040dbd:	imul   edi,DWORD PTR [rcx+0x62],0x6c
   140040dc1:	jne    0x140040e28
   140040dc3:	xor    DWORD PTR [rax],eax
   140040dc5:	add    BYTE PTR [rax],al
   140040dc7:	add    BYTE PTR [rbp+riz*2+0x65],ah
   140040dcb:	jo     0x140040e40
   140040dcd:	imul   edi,DWORD PTR [rcx+0x62],0x6c
   140040dd1:	jne    0x140040e38
   140040dd3:	xor    al,BYTE PTR [rax]
   140040dd5:	add    BYTE PTR [rax],al
   140040dd7:	add    BYTE PTR [rbp+riz*2+0x65],ah
   140040ddb:	jo     0x140040e50
   140040ddd:	imul   edi,DWORD PTR [rcx+0x62],0x6c
   140040de1:	jne    0x140040e48
   140040de3:	xor    eax,DWORD PTR [rax]
   140040de5:	add    BYTE PTR [rax],al
   140040de7:	add    BYTE PTR [rbp+riz*2+0x65],ah
   140040deb:	jo     0x140040e60
   140040ded:	imul   edi,DWORD PTR [rcx+0x62],0x6c
   140040df1:	jne    0x140040e58
   140040df3:	xor    al,0x0
   140040df5:	add    BYTE PTR [rax],al
   140040df7:	add    BYTE PTR [rcx+rbp*2+0x6d],ah
   140040dfb:	addr32 jb 0x140040e5f
   140040dfe:	jns    0x140040e00
   140040e00:	imul   ebp,DWORD PTR fs:[rbp+0x67],0x796572
   140040e08:	outs   dx,DWORD PTR fs:[rsi]
   140040e0a:	fs addr32 gs jb 0x140040e71
   140040e0f:	ins    BYTE PTR es:[rdi],dx
   140040e10:	jne    0x140040e77
   140040e12:	add    BYTE PTR [rax],al
   140040e14:	add    BYTE PTR [rax],al
   140040e16:	add    BYTE PTR [rax],al
   140040e18:	outs   dx,DWORD PTR fs:[rsi]
   140040e1a:	fs addr32 gs jb 0x140040e81
   140040e1f:	ins    BYTE PTR es:[rdi],dx
   140040e20:	jne    0x140040e87
   140040e22:	xor    DWORD PTR [rax],eax
   140040e24:	add    BYTE PTR [rax],al
   140040e26:	add    BYTE PTR [rax],al
   140040e28:	outs   dx,DWORD PTR fs:[rsi]
   140040e2a:	fs addr32 gs jb 0x140040e91
   140040e2f:	ins    BYTE PTR es:[rdi],dx
   140040e30:	jne    0x140040e97
   140040e32:	xor    al,BYTE PTR [rax]
   140040e34:	add    BYTE PTR [rax],al
   140040e36:	add    BYTE PTR [rax],al
   140040e38:	outs   dx,DWORD PTR fs:[rsi]
   140040e3a:	fs addr32 gs jb 0x140040ea1
   140040e3f:	ins    BYTE PTR es:[rdi],dx
   140040e40:	jne    0x140040ea7
   140040e42:	xor    eax,DWORD PTR [rax]
   140040e44:	add    BYTE PTR [rax],al
   140040e46:	add    BYTE PTR [rax],al
   140040e48:	outs   dx,DWORD PTR fs:[rsi]
   140040e4a:	fs addr32 gs jb 0x140040eb1
   140040e4f:	ins    BYTE PTR es:[rdi],dx
   140040e50:	jne    0x140040eb7
   140040e52:	xor    al,0x0
   140040e54:	add    BYTE PTR [rax],al
   140040e56:	add    BYTE PTR [rax],al
   140040e58:	imul   si,WORD PTR [rdx+0x65],0x7262
   140040e5e:	imul   esp,DWORD PTR [rbx+0x6b],0x0
   140040e65:	add    BYTE PTR [rax],al
   140040e67:	add    BYTE PTR [rsi+0x69],ah
   140040e6a:	jb     0x140040ed1
   140040e6c:	(bad)  
   140040e6e:	imul   esp,DWORD PTR [rbx+0x6b],0x31
   140040e75:	add    BYTE PTR [rax],al
   140040e77:	add    BYTE PTR [rsi+0x69],ah
   140040e7a:	jb     0x140040ee1
   140040e7c:	(bad)  
   140040e7e:	imul   esp,DWORD PTR [rbx+0x6b],0x32
   140040e85:	add    BYTE PTR [rax],al
   140040e87:	add    BYTE PTR [rsi+0x69],ah
   140040e8a:	jb     0x140040ef1
   140040e8c:	(bad)  
   140040e8e:	imul   esp,DWORD PTR [rbx+0x6b],0x33
   140040e95:	add    BYTE PTR [rax],al
   140040e97:	add    BYTE PTR [rsi+0x69],ah
   140040e9a:	jb     0x140040f01
   140040e9c:	(bad)  
   140040e9e:	imul   esp,DWORD PTR [rbx+0x6b],0x34
   140040ea5:	add    BYTE PTR [rax],al
   140040ea7:	add    BYTE PTR [rsi+0x6c],ah
   140040eaa:	outs   dx,DWORD PTR ds:[rsi]
   140040eab:	jb     0x140040f0e
   140040ead:	ins    BYTE PTR es:[rdi],dx
   140040eae:	ja     0x140040f18
   140040eb0:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x0
   140040eb8:	outs   dx,WORD PTR ds:[rsi]
   140040eba:	jb     0x140040f21
   140040ebc:	jae    0x140040f32
   140040ebe:	addr32 jb 0x140040f26
   140040ec1:	outs   dx,BYTE PTR gs:[rsi]
   140040ec3:	add    BYTE PTR [rax],al
   140040ec5:	add    BYTE PTR [rax],al
   140040ec7:	add    BYTE PTR [rdi+0x61],ah
   140040eca:	imul   ebp,DWORD PTR [rsi+0x73],0x6f726f62
   140040ed1:	add    BYTE PTR [rax],al
   140040ed3:	add    BYTE PTR [rax],al
   140040ed5:	add    BYTE PTR [rax],al
   140040ed7:	add    BYTE PTR [rdi+0x68],ah
   140040eda:	outs   dx,DWORD PTR ds:[rsi]
   140040edb:	jae    0x140040f51
   140040edd:	ja     0x140040f47
   140040edf:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6c6f6700
   140040ee7:	add    BYTE PTR fs:[rax],al
   140040eea:	add    BYTE PTR [rax],al
   140040eec:	outs   dx,DWORD PTR ds:[esi]
   140040eee:	ins    BYTE PTR es:[rdi],dx
   140040eef:	xor    DWORD PTR fs:[rax],eax
   140040ef2:	add    BYTE PTR [rax],al
   140040ef4:	outs   dx,DWORD PTR ds:[esi]
   140040ef6:	ins    BYTE PTR es:[rdi],dx
   140040ef7:	xor    al,BYTE PTR fs:[rax]
   140040efa:	add    BYTE PTR [rax],al
   140040efc:	outs   dx,DWORD PTR ds:[esi]
   140040efe:	ins    BYTE PTR es:[rdi],dx
   140040eff:	xor    eax,DWORD PTR fs:[rax]
   140040f02:	add    BYTE PTR [rax],al
   140040f04:	outs   dx,DWORD PTR ds:[esi]
   140040f06:	ins    BYTE PTR es:[rdi],dx
   140040f07:	fs xor al,0x0
   140040f0a:	add    BYTE PTR [rax],al
   140040f0c:	add    BYTE PTR [rax],al
   140040f0e:	add    BYTE PTR [rax],al
   140040f10:	outs   dx,DWORD PTR ds:[esi]
   140040f12:	ins    BYTE PTR es:[rdi],dx
   140040f13:	fs outs dx,BYTE PTR gs:[rsi]
   140040f16:	jb     0x140040f87
   140040f18:	add    BYTE PTR fs:[rax],al
   140040f1b:	add    BYTE PTR [rax],al
   140040f1d:	add    BYTE PTR [rax],al
   140040f1f:	add    BYTE PTR [rdi+0x6f],ah
   140040f22:	ins    BYTE PTR es:[rdi],dx
   140040f23:	fs outs dx,BYTE PTR gs:[rsi]
   140040f26:	jb     0x140040f97
   140040f28:	xor    DWORD PTR fs:[rax],eax
   140040f2b:	add    BYTE PTR [rax],al
   140040f2d:	add    BYTE PTR [rax],al
   140040f2f:	add    BYTE PTR [rdi+0x6f],ah
   140040f32:	ins    BYTE PTR es:[rdi],dx
   140040f33:	fs outs dx,BYTE PTR gs:[rsi]
   140040f36:	jb     0x140040fa7
   140040f38:	xor    al,BYTE PTR fs:[rax]
   140040f3b:	add    BYTE PTR [rax],al
   140040f3d:	add    BYTE PTR [rax],al
   140040f3f:	add    BYTE PTR [rdi+0x6f],ah
   140040f42:	ins    BYTE PTR es:[rdi],dx
   140040f43:	fs outs dx,BYTE PTR gs:[rsi]
   140040f46:	jb     0x140040fb7
   140040f48:	xor    eax,DWORD PTR fs:[rax]
   140040f4b:	add    BYTE PTR [rax],al
   140040f4d:	add    BYTE PTR [rax],al
   140040f4f:	add    BYTE PTR [rdi+0x6f],ah
   140040f52:	ins    BYTE PTR es:[rdi],dx
   140040f53:	fs outs dx,BYTE PTR gs:[rsi]
   140040f56:	jb     0x140040fc7
   140040f58:	fs xor al,0x0
   140040f5b:	add    BYTE PTR [rdi+0x72],ah
   140040f5e:	(bad)  
   140040f5f:	jns    0x140040f61
   140040f61:	add    BYTE PTR [rax],al
   140040f63:	add    BYTE PTR [rdi+0x72],ah
   140040f66:	(bad)  
   140040f67:	jns    0x140040f99
   140040f69:	add    BYTE PTR [rax],al
   140040f6b:	add    BYTE PTR [rdi+0x72],ah
   140040f6e:	(bad)  
   140040f6f:	jns    0x140040fa2
   140040f71:	add    BYTE PTR [rax],al
   140040f73:	add    BYTE PTR [rdi+0x72],ah
   140040f76:	(bad)  
   140040f77:	jns    0x140040faa
   140040f79:	xor    BYTE PTR [rax],al
   140040f7b:	add    BYTE PTR [rax],al
   140040f7d:	add    BYTE PTR [rax],al
   140040f7f:	add    BYTE PTR [rdi+0x72],ah
   140040f82:	(bad)  
   140040f83:	jns    0x140040fb6
   140040f85:	xor    BYTE PTR [rax],dh
   140040f87:	add    BYTE PTR [rdi+0x72],ah
   140040f8a:	(bad)  
   140040f8b:	jns    0x140040fbe
   140040f8d:	xor    DWORD PTR [rax],eax
   140040f8f:	add    BYTE PTR [rdi+0x72],ah
   140040f92:	(bad)  
   140040f93:	jns    0x140040fc6
   140040f95:	xor    al,BYTE PTR [rax]
   140040f97:	add    BYTE PTR [rdi+0x72],ah
   140040f9a:	(bad)  
   140040f9b:	jns    0x140040fce
   140040f9d:	xor    eax,DWORD PTR [rax]
   140040f9f:	add    BYTE PTR [rdi+0x72],ah
   140040fa2:	(bad)  
   140040fa3:	jns    0x140040fd6
   140040fa5:	xor    al,0x0
   140040fa7:	add    BYTE PTR [rdi+0x72],ah
   140040faa:	(bad)  
   140040fab:	jns    0x140040fde
   140040fad:	xor    eax,0x72670000
   140040fb2:	(bad)  
   140040fb3:	jns    0x140040fe6
   140040fb5:	add    BYTE PTR ss:[rax],al
   140040fb8:	addr32 jb 0x14004101c
   140040fbb:	jns    0x140040fee
   140040fbd:	(bad)  
   140040fbe:	add    BYTE PTR [rax],al
   140040fc0:	addr32 jb 0x140041024
   140040fc3:	jns    0x140040ff6
   140040fc5:	cmp    BYTE PTR [rax],al
   140040fc7:	add    BYTE PTR [rdi+0x72],ah
   140040fca:	(bad)  
   140040fcb:	jns    0x140040ffe
   140040fcd:	cmp    DWORD PTR [rax],eax
   140040fcf:	add    BYTE PTR [rdi+0x72],ah
   140040fd2:	(bad)  
   140040fd3:	jns    0x140041007
   140040fd5:	add    BYTE PTR [rax],al
   140040fd7:	add    BYTE PTR [rdi+0x72],ah
   140040fda:	(bad)  
   140040fdb:	jns    0x14004100f
   140040fdd:	xor    BYTE PTR [rax],al
   140040fdf:	add    BYTE PTR [rdi+0x72],ah
   140040fe2:	(bad)  
   140040fe3:	jns    0x140041017
   140040fe5:	xor    DWORD PTR [rax],eax
   140040fe7:	add    BYTE PTR [rdi+0x72],ah
   140040fea:	(bad)  
   140040feb:	jns    0x14004101f
   140040fed:	xor    al,BYTE PTR [rax]
   140040fef:	add    BYTE PTR [rdi+0x72],ah
   140040ff2:	(bad)  
   140040ff3:	jns    0x140041027
   140040ff5:	xor    eax,DWORD PTR [rax]
   140040ff7:	add    BYTE PTR [rdi+0x72],ah
   140040ffa:	(bad)  
   140040ffb:	jns    0x14004102f
   140040ffd:	xor    al,0x0
   140040fff:	add    BYTE PTR [rdi+0x72],ah
   140041002:	(bad)  
   140041003:	jns    0x140041037
   140041005:	xor    eax,0x72670000
   14004100a:	(bad)  
   14004100b:	jns    0x14004103f
   14004100d:	add    BYTE PTR ss:[rax],al
   140041010:	addr32 jb 0x140041074
   140041013:	jns    0x140041047
   140041015:	(bad)  
   140041016:	add    BYTE PTR [rax],al
   140041018:	addr32 jb 0x14004107c
   14004101b:	jns    0x14004104f
   14004101d:	cmp    BYTE PTR [rax],al
   14004101f:	add    BYTE PTR [rdi+0x72],ah
   140041022:	(bad)  
   140041023:	jns    0x140041057
   140041025:	cmp    DWORD PTR [rax],eax
   140041027:	add    BYTE PTR [rdi+0x72],ah
   14004102a:	(bad)  
   14004102b:	jns    0x140041060
   14004102d:	add    BYTE PTR [rax],al
   14004102f:	add    BYTE PTR [rdi+0x72],ah
   140041032:	(bad)  
   140041033:	jns    0x140041068
   140041035:	xor    BYTE PTR [rax],al
   140041037:	add    BYTE PTR [rdi+0x61],dl
   14004103a:	jb     0x1400410aa
   14004103c:	imul   ebp,DWORD PTR [rsi+0x67],0x6f63203a
   140041043:	ins    BYTE PTR es:[rdi],dx
   140041044:	outs   dx,DWORD PTR ds:[rsi]
   140041045:	jb     0x140041067
   140041047:	jbe    0x1400410aa
   140041049:	ins    BYTE PTR es:[rdi],dx
   14004104a:	jne    0x1400410b1
   14004104c:	and    BYTE PTR [rdi],ah
   14004104e:	and    eax,0x74202773
   140041053:	jb     0x1400410ca
   140041055:	outs   dx,BYTE PTR ds:[rsi]
   140041056:	movsxd esp,DWORD PTR [rcx+0x74]
   140041059:	gs or  al,BYTE PTR fs:[rax]
   14004105d:	add    BYTE PTR [rax],al
   14004105f:	add    BYTE PTR [rbx],ah
   140041061:	and    eax,0x32257832
   140041066:	js     0x14004108d
   140041068:	xor    bh,BYTE PTR [rax+0x25]
   14004106b:	xor    bh,BYTE PTR [rax+0x0]
   14004106e:	add    BYTE PTR [rax],al
   140041070:	and    eax,0x6c25666c
   140041075:	and    ax,0x666c
   140041079:	add    BYTE PTR [rax],al
   14004107b:	add    BYTE PTR [rax],al
   14004107d:	add    BYTE PTR [rax],al
   14004107f:	add    BYTE PTR [rdi+0x61],dl
   140041082:	jb     0x1400410f2
   140041084:	imul   ebp,DWORD PTR [rsi+0x67],0x7325203a
   14004108b:	and    BYTE PTR [rcx+0x73],ch
   14004108e:	and    BYTE PTR [rsi+0x6f],ch
   140041091:	je     0x1400410b3
   140041093:	(bad)  
   140041094:	and    BYTE PTR [rbx+0x6e],ch
   140041097:	outs   dx,DWORD PTR ds:[rsi]
   140041098:	ja     0x140041108
   14004109a:	and    BYTE PTR [rbx+0x6f],ah
   14004109d:	ins    BYTE PTR es:[rdi],dx
   14004109e:	outs   dx,DWORD PTR ds:[rsi]
   14004109f:	jb     0x1400410cf
   1400410a1:	and    BYTE PTR [rbp+0x73],dl
   1400410a4:	imul   ebp,DWORD PTR [rsi+0x67],0x616c6220
   1400410ab:	movsxd ebp,DWORD PTR [rbx+0x2e]
   1400410ae:	or     al,BYTE PTR [rax]
   1400410b0:	add    BYTE PTR [rax],al
   1400410b2:	add    BYTE PTR [rax],al
   1400410b4:	add    BYTE PTR [rax],al
   1400410b6:	rex.WRX
   1400410b7:	add    BYTE PTR [rax],al
   1400410ba:	add    BYTE PTR [rax],al
   1400410bc:	add    al,ah
   1400410be:	outs   dx,DWORD PTR ds:[rsi]
   1400410bf:	add    BYTE PTR [rax],al
   1400410c2:	add    BYTE PTR [rax],al
   1400410c4:	add    BYTE PTR [rax+0x4076],al
   1400410ca:	add    BYTE PTR [rax],al
   1400410cc:	loopne 0x1400410cd
   1400410ce:	out    dx,eax
   1400410cf:	rex and eax,0x73252073
   1400410d5:	and    BYTE PTR [rip+0xa73],ah        # 0x140041b4e
   1400410db:	add    BYTE PTR [rax],al
   1400410dd:	add    BYTE PTR [rax],al
   1400410df:	add    BYTE PTR [rip+0x616d2073],ah        # 0x1a1713158
   1400410e5:	jns    0x140041107
   1400410e7:	outs   dx,BYTE PTR ds:[rsi]
   1400410e8:	outs   dx,DWORD PTR ds:[rsi]
   1400410e9:	je     0x14004110b
   1400410eb:	(bad)  
   1400410ec:	and    BYTE PTR gs:[rdx+0x65],dh
   1400410f0:	fs imul bp,WORD PTR gs:[rsi+0x65],0x64
   1400410f8:	push   rax
   1400410f9:	jb     0x14004116a
   1400410fb:	je     0x14004116c
   1400410fd:	rex.RXB jb 0x140041161
   140041100:	jo     0x14004116a
   140041102:	add    BYTE PTR [rax],al
   140041104:	imul   esp,DWORD PTR [rbp+0x79],0x0
   140041108:	(bad)  
   140041109:	imul   ebp,DWORD PTR [esi+0x69],0x20292874
   140041111:	movsxd esp,DWORD PTR [rcx+0x6c]
   140041114:	ins    BYTE PTR es:[rdi],dx
   140041115:	gs and BYTE PTR fs:[rbp+0x75],ch
   14004111a:	ins    BYTE PTR es:[rdi],dx
   14004111b:	je     0x140041186
   14004111d:	jo     0x14004118b
   14004111f:	jns    0x140041141
   140041121:	ja     0x14004118c
   140041123:	je     0x14004118d
   140041125:	and    BYTE PTR [rcx+0x6e],ch
   140041128:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14004112b:	jae    0x140041196
   14004112d:	jae    0x1400411a3
   14004112f:	outs   dx,BYTE PTR gs:[rsi]
   140041131:	je     0x140041153
   140041133:	(bad)  
   140041134:	jb     0x14004119d
   140041136:	jae    0x140041142
	...
   140041140:	rex.RXB jae 0x1400411b7
   140041143:	(bad)  
   140041144:	movsxd ebp,DWORD PTR [rbx+0x20]
   140041147:	jne    0x1400411b7
   140041149:	fs gs jb 0x1400411b3
   14004114d:	ins    BYTE PTR es:[rdi],dx
   14004114e:	outs   dx,DWORD PTR ds:[rsi]
   14004114f:	ja     0x140041171
   140041151:	imul   ebp,DWORD PTR [rsi+0x20],0x70617267
   140041158:	push   0x72617020
   14004115d:	jae    0x1400411c4
   14004115f:	jb     0x14004116b
   140041161:	add    BYTE PTR [rax],al
   140041163:	add    BYTE PTR [rax],al
   140041165:	add    BYTE PTR [rax],al
   140041167:	add    BYTE PTR [rdi+0x61],bl
   14004116a:	outs   dx,BYTE PTR ds:[rsi]
   14004116b:	outs   dx,DWORD PTR ds:[rsi]
   14004116c:	outs   dx,BYTE PTR ds:[rsi]
   14004116d:	jns    0x1400411dc
   14004116f:	outs   dx,DWORD PTR ds:[rsi]
   140041170:	jne    0x1400411e5
   140041172:	pop    rdi
   140041173:	and    eax,0x64
   140041178:	jo     0x1400411db
   14004117a:	jb     0x1400411ef
   14004117c:	gs jb  0x14004119f
   14004117f:	jae    0x1400411f5
   140041181:	(bad)  
   140041182:	movsxd ebp,DWORD PTR [rbx+0x20]
   140041185:	outs   dx,DWORD PTR ds:[rsi]
   140041186:	jbe    0x1400411ed
   140041188:	jb     0x1400411f0
   14004118a:	ins    BYTE PTR es:[rdi],dx
   14004118b:	outs   dx,DWORD PTR ds:[rsi]
   14004118c:	ja     0x14004118e
   14004118e:	add    BYTE PTR [rax],al
   140041190:	jae    0x14004120b
   140041192:	outs   dx,BYTE PTR ds:[rsi]
   140041193:	je     0x1400411f6
   140041195:	js     0x1400411b7
   140041197:	gs jb  0x14004120c
   14004119a:	outs   dx,DWORD PTR ds:[rsi]
   14004119b:	jb     0x1400411c9
   14004119d:	and    BYTE PTR [rbx+0x74],dh
   1400411a0:	(bad)  
   1400411a1:	je     0x140041208
   1400411a3:	ins    DWORD PTR es:[rdi],dx
   1400411a4:	outs   dx,BYTE PTR gs:[rsi]
   1400411a6:	je     0x1400411c8
   1400411a8:	jae    0x140041215
   1400411aa:	imul   esi,DWORD PTR [rax+0x70],0x3a006465
   1400411b1:	add    BYTE PTR [rax],al
   1400411b3:	add    BYTE PTR [rax],al
   1400411b5:	add    BYTE PTR [rax],al
   1400411b7:	add    BYTE PTR [rdx],bh
   1400411b9:	sub    BYTE PTR [rip+0x73252c73],ah        # 0x1b3293e32
   1400411bf:	sub    DWORD PTR [rax],eax
   1400411c1:	add    BYTE PTR [rax],al
   1400411c3:	add    BYTE PTR [rax+0x25],al
   1400411c6:	jae    0x1400411c8
   1400411c8:	jo     0x14004122b
   1400411ca:	jb     0x14004123f
   1400411cc:	and    BYTE PTR gs:[rbp+0x72],ah
   1400411d0:	jb     0x140041241
   1400411d2:	jb     0x1400411d4
   1400411d4:	and    ah,BYTE PTR [rdx]
   1400411d6:	add    BYTE PTR [rax],al
   1400411d8:	or     DWORD PTR [rip+0x5b2073],esp        # 0x1405f3251
   1400411de:	add    BYTE PTR [rax],al
   1400411e0:	sub    al,0x20
   1400411e2:	add    BYTE PTR [rax],al
   1400411e4:	and    eax,0x73253d73
   1400411e9:	add    BYTE PTR [rax],al
   1400411eb:	add    BYTE PTR [rbp+0x3b],bl
   1400411ee:	or     al,BYTE PTR [rax]
   1400411f0:	and    eax,0x255b2073
   1400411f5:	jae    0x1400411f7
   1400411f7:	add    BYTE PTR [rip+0x3b5d7325],bh        # 0x17b618522
   1400411fd:	or     al,BYTE PTR [rax]
   1400411ff:	add    BYTE PTR [rax],ah
   140041201:	pop    rbx
   140041202:	add    BYTE PTR [rax],al
   140041204:	and    eax,0x3b003d73
   140041209:	or     al,BYTE PTR [rax]
   14004120b:	add    BYTE PTR [rip+0xa3b73],ah        # 0x1400e4d84
   140041211:	add    BYTE PTR [rax],al
   140041213:	add    BYTE PTR [rax],ah
   140041215:	and    eax,0x2073
   14004121a:	add    BYTE PTR [rax],al
   14004121c:	add    BYTE PTR [rax],al
   14004121e:	add    BYTE PTR [rax],al
   140041220:	pop    rdi
   140041221:	(bad)  
   140041222:	outs   dx,BYTE PTR ds:[rsi]
   140041223:	outs   dx,DWORD PTR ds:[rsi]
   140041224:	outs   dx,BYTE PTR ds:[rsi]
   140041225:	jns    0x140041294
   140041227:	outs   dx,DWORD PTR ds:[rsi]
   140041228:	jne    0x14004129d
   14004122a:	add    BYTE PTR [rax],al
   14004122c:	add    BYTE PTR [rax],al
   14004122e:	add    BYTE PTR [rax],al
   140041230:	jae    0x1400412a7
   140041232:	(bad)  
   140041233:	addr32 jb 0x140041297
   140041236:	jo     0x1400412a0
   140041238:	and    BYTE PTR [rip+0xa7b2073],ah        # 0x14a7f32b1
   14004123e:	add    BYTE PTR [rax],al
   140041240:	jnp    0x14004124c
   140041242:	add    BYTE PTR [rax],al
   140041244:	add    BYTE PTR [rax],al
   140041246:	add    BYTE PTR [rax],al
   140041248:	jae    0x1400412bf
   14004124a:	(bad)  
   14004124b:	addr32 jb 0x1400412af
   14004124e:	jo     0x1400412b8
   140041250:	and    BYTE PTR [rip+0xa3b73],ah        # 0x1400e4dc9
   140041256:	add    BYTE PTR [rax],al
   140041258:	jge    0x140041264
   14004125a:	add    BYTE PTR [rax],al
   14004125c:	add    BYTE PTR [rax],al
   14004125e:	add    BYTE PTR [rax],al
   140041260:	jae    0x1400412d6
   140041262:	jb     0x1400412cd
   140041264:	movsxd esi,DWORD PTR [rax+riz*1+0x0]
   140041268:	imul   esp,DWORD PTR fs:[rdi+0x72],0x687061
   140041270:	addr32 jb 0x1400412d4
   140041273:	jo     0x1400412dd
   140041275:	add    BYTE PTR [rax],al
   140041277:	add    BYTE PTR [rip+0x20732573],ah        # 0x1607737f0
   14004127d:	and    eax,0xa7b2073
   140041282:	add    BYTE PTR [rax],al
   140041284:	outs   dx,BYTE PTR ds:[rsi]
   140041285:	outs   dx,DWORD PTR ds:[rsi]
   140041286:	fs add BYTE PTR gs:[rax],al
   14004128a:	add    BYTE PTR [rax],al
   14004128c:	gs fs add BYTE PTR gs:[eax],al
   140041292:	add    BYTE PTR [rax],al
   140041294:	add    DWORD PTR [rax+0x72],esi
   140041297:	outs   dx,DWORD PTR ds:[rsi]
   140041298:	je     0x140041309
   14004129a:	add    BYTE PTR [rax],al
   14004129c:	add    BYTE PTR [rax],al
   14004129e:	add    BYTE PTR [rax],al
   1400412a0:	ins    BYTE PTR es:[rdi],dx
   1400412a1:	imul   esp,DWORD PTR [rdx+0x61],0x61662067
   1400412a8:	je     0x14004130b
   1400412aa:	ins    BYTE PTR es:[rdi],dx
   1400412ab:	and    BYTE PTR [rbp+0x72],ah
   1400412ae:	jb     0x14004131f
   1400412b0:	jb     0x1400412d2
   1400412b2:	sub    eax,0x6761202d
   1400412b7:	imul   ebp,DWORD PTR [rsi+0x69],0x20292874
   1400412be:	ja     0x140041321
   1400412c0:	jae    0x1400412e2
   1400412c2:	outs   dx,BYTE PTR ds:[rsi]
   1400412c3:	outs   dx,DWORD PTR ds:[rsi]
   1400412c4:	je     0x1400412e6
   1400412c6:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400412c9:	ins    BYTE PTR es:[rdi],dx
   1400412ca:	gs or  al,BYTE PTR fs:[rax]
   1400412ce:	add    BYTE PTR [rax],al
   1400412d0:	(bad)  
   1400412d1:	addr32 jne 0x140041347
   1400412d4:	gs jb  0x14004133e
   1400412d7:	jb     0x14004133a
   1400412d9:	jo     0x140041343
   1400412db:	add    BYTE PTR [rax],al
   1400412dd:	add    BYTE PTR [rax],al
   1400412df:	add    BYTE PTR [rcx],cl
   1400412e1:	and    eax,0x73252070
   1400412e6:	sub    al,0x25
   1400412e8:	jae    0x1400412f4
   1400412ea:	add    BYTE PTR [rax],al
   1400412ec:	add    BYTE PTR [rax],al
   1400412ee:	add    BYTE PTR [rax],al
   1400412f0:	cs cs cs ja 0x140041356
   1400412f5:	jae    0x140041317
   1400412f7:	outs   dx,BYTE PTR ds:[rsi]
   1400412f8:	outs   dx,DWORD PTR ds:[rsi]
   1400412f9:	je     0x14004131b
   1400412fb:	outs   dx,WORD PTR ds:[rsi]
   1400412fd:	jne    0x14004136d
   1400412ff:	or     al,BYTE PTR fs:[rax]
   140041302:	add    BYTE PTR [rax],al
   140041304:	add    BYTE PTR [rax],al
   140041306:	add    BYTE PTR [rax],al
   140041308:	(bad)  
   140041309:	addr32 jae 0x140041380
   14004130c:	jb     0x140041374
   14004130e:	jb     0x140041375
   140041310:	and    BYTE PTR gs:[rdi+rbp*2+0x73],ch
   140041315:	je     0x140041337
   140041317:	and    eax,0xa73
   14004131c:	add    BYTE PTR [rax],al
   14004131e:	add    BYTE PTR [rax],al
   140041320:	(bad)
   140041325:	and    BYTE PTR [rsi+0x6f],ah
   140041328:	jb     0x140041397
   14004132a:	gs and BYTE PTR fs:[rsi+0x75],ch
   14004132f:	ins    DWORD PTR es:[rdi],dx
   140041330:	(bad)  
   140041331:	gs jb  0x140041354
   140041334:	and    eax,0x53000073
   140041339:	jo     0x1400413a7
   14004133b:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x6f746e69
   140041343:	and    BYTE PTR [rdi+rsi*2+0x6f],dh
   140041347:	and    BYTE PTR [rsi+0x61],ch
   14004134a:	ins    DWORD PTR es:[rdi],dx
   14004134b:	and    BYTE PTR gs:[rdi+rbp*2+0x6b],dh
   140041350:	outs   dx,BYTE PTR gs:[rsi]
   140041352:	jae    0x14004135e
   140041354:	add    BYTE PTR [rax],al
   140041356:	add    BYTE PTR [rax],al
   140041358:	jae    0x1400413ce
   14004135a:	jb     0x1400413c5
   14004135c:	outs   dx,BYTE PTR ds:[rsi]
   14004135d:	and    BYTE PTR [edx+0x61],dh
   140041361:	outs   dx,BYTE PTR ds:[rsi]
   140041362:	and    BYTE PTR [rax+0x61],dh
   140041365:	jae    0x1400413db
   140041367:	and    BYTE PTR [rbp+0x6e],ah
   14004136a:	and    BYTE PTR fs:[rdi+0x66],ch
   14004136e:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   140041372:	add    BYTE PTR gs:[rax],al
   140041375:	add    BYTE PTR [rax],al
   140041377:	add    BYTE PTR [rdx+0x65],dh
   14004137a:	je     0x1400413f1
   14004137c:	jb     0x1400413ec
   14004137e:	imul   ebp,DWORD PTR [rsi+0x67],0xa642520
   140041385:	add    BYTE PTR [rax],al
   140041387:	add    BYTE PTR [rbx+0x74],dh
   14004138a:	jb     0x1400413f5
   14004138c:	outs   dx,BYTE PTR ds:[rsi]
   14004138d:	and    BYTE PTR [esi+0x61],dh
   140041391:	ins    BYTE PTR es:[rdi],dx
   140041392:	and    BYTE PTR [rcx+0x73],ch
   140041395:	and    BYTE PTR [rip+0xa73],ah        # 0x140041e0e
   14004139b:	add    BYTE PTR [rax],al
   14004139d:	add    BYTE PTR [rax],al
   14004139f:	add    BYTE PTR [rdi+0x61],dh
   1400413a2:	jb     0x140041412
   1400413a4:	imul   ebp,DWORD PTR [rsi+0x67],0x6f6e202c
   1400413ab:	outs   dx,BYTE PTR ds:[rsi]
   1400413ac:	je     0x140041413
   1400413ae:	jb     0x14004141d
   1400413b0:	imul   ebp,DWORD PTR [rsi+0x61],0x20646574
   1400413b7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400413ba:	ins    DWORD PTR es:[rdi],dx
   1400413bb:	outs   dx,BYTE PTR gs:[rsi]
   1400413bd:	je     0x1400413df
   1400413bf:	imul   ebp,DWORD PTR [rsi+0x20],0x656e696c
   1400413c6:	and    BYTE PTR [rip+0xa64],ah        # 0x140041e30
   1400413cc:	add    BYTE PTR [rax],al
   1400413ce:	add    BYTE PTR [rax],al
   1400413d0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400413d3:	je     0x14004143a
   1400413d5:	js     0x14004144b
   1400413d7:	cmp    ah,BYTE PTR [rax]
   1400413d9:	add    BYTE PTR [rax],al
   1400413db:	add    BYTE PTR [rax],ah
   1400413dd:	ds ds and BYTE PTR ds:[rax],al
   1400413e2:	add    BYTE PTR [rax],al
   1400413e4:	and    BYTE PTR [rsp+rdi*1],bh
   1400413e7:	cmp    al,0x20
   1400413e9:	add    BYTE PTR [rax],al
   1400413eb:	add    BYTE PTR [rax],al
   1400413ed:	add    BYTE PTR [rax],al
   1400413ef:	add    BYTE PTR [rdi+0x72],ah
   1400413f2:	(bad)  
   1400413f3:	jo     0x14004145d
   1400413f5:	and    BYTE PTR [rax+0x61],dh
   1400413f8:	jb     0x14004146d
   1400413fa:	gs jb  0x140041437
   1400413fd:	and    BYTE PTR [rax],al
   1400413ff:	add    BYTE PTR [rax],ah
   140041401:	outs   dx,BYTE PTR ds:[rsi]
   140041402:	gs (bad) 
   140041404:	jb     0x140041426
   140041406:	ins    BYTE PTR es:[rdi],dx
   140041407:	imul   ebp,DWORD PTR [rsi+0x65],0xa642520
   14004140e:	add    BYTE PTR [rax],al
   140041410:	or     al,BYTE PTR [rax+0x28]
   140041413:	and    ebp,DWORD PTR [rcx]
   140041415:	movsxd esp,DWORD PTR [rsp+rsi*2+0x20]
   140041419:	sub    BYTE PTR [rcx+0x54],al
   14004141c:	es push rsp
   14004141e:	and    BYTE PTR [rcx+riz*2+0x62],cl
   140041422:	jae    0x140041444
   140041424:	sub    eax,0x76706b20
   140041429:	sub    DWORD PTR [rax],esp
   14004142b:	xor    DWORD PTR [rcx],edi
   14004142d:	cmp    DWORD PTR [rcx],edi
   14004142f:	sub    eax,0x302d3131
   140041434:	xor    DWORD PTR [rax],eax
   140041436:	or     al,BYTE PTR [rax]
   140041438:	jae    0x14004149f
   14004143a:	je     0x1400414a4
   14004143c:	jae    0x1400414a0
   14004143e:	add    BYTE PTR [rax],al
   140041440:	imul   bp,WORD PTR [rsp+rbp*2+0xa],0x0
   140041447:	add    BYTE PTR [rbx+0x74],dh
   14004144a:	jb     0x1400414bb
   14004144c:	imul   esp,DWORD PTR [rbp+0xa],0x0
   140041450:	outs   dx,BYTE PTR ds:[rsi]
   140041451:	gs ja  0x1400414c4
   140041454:	(bad)  
   140041455:	je     0x1400414bf
   140041457:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a42934c1
   14004145d:	and    BYTE PTR [rbp+0x6f],ch
   140041460:	jbe    0x1400414c7
   140041462:	je     0x1400414d3
   140041464:	or     al,BYTE PTR [rax]
   140041466:	add    BYTE PTR [rax],al
   140041468:	and    eax,0x53502125
   14004146d:	sub    eax,0x626f6441
   140041472:	gs sub eax,0xa302e32
	...
   140041480:	and    eax,0x43252525
   140041485:	jb     0x1400414ec
   140041487:	(bad)  
   140041488:	je     0x1400414f9
   14004148a:	jb     0x1400414c6
   14004148c:	and    BYTE PTR [rip+0x65762073],ah        # 0x1a57a3505
   140041492:	jb     0x140041507
   140041494:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
   14004149b:	sub    BYTE PTR [rip+0xa2973],ah        # 0x1400e3e14
   1400414a1:	add    BYTE PTR [rax],al
   1400414a3:	add    BYTE PTR [rax],al
   1400414a5:	add    BYTE PTR [rax],al
   1400414a7:	add    BYTE PTR [rip+0x46252525],ah        # 0x1862939d2
   1400414ad:	outs   dx,DWORD PTR ds:[rsi]
   1400414ae:	jb     0x1400414ea
   1400414b0:	and    BYTE PTR [rip+0xa73],ah        # 0x140041f29
   1400414b6:	add    BYTE PTR [rax],al
   1400414b8:	and    eax,0x54252525
   1400414bd:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x7325203a
   1400414c5:	or     al,BYTE PTR [rax]
   1400414c7:	add    BYTE PTR [rip+0x50252525],ah        # 0x1902939f2
   1400414cd:	(bad)  
   1400414ce:	addr32 gs jae 0x14004150c
   1400414d2:	and    BYTE PTR [rax],ch
   1400414d4:	(bad)  
   1400414d5:	je     0x14004153c
   1400414d7:	outs   dx,BYTE PTR ds:[rsi]
   1400414d8:	sub    DWORD PTR fs:[rdx],ecx
   1400414db:	add    BYTE PTR [rax],al
   1400414dd:	add    BYTE PTR [rax],al
   1400414df:	add    BYTE PTR [rip+0x54252525],ah        # 0x194293a0a
   1400414e5:	jb     0x140041548
   1400414e7:	imul   ebp,DWORD PTR [rbp+riz*2+0x72],0xa
   1400414ef:	add    BYTE PTR [rip+0x50252525],ah        # 0x190293a1a
   1400414f5:	(bad)  
   1400414f6:	addr32 gs jae 0x140041534
   1400414fa:	and    BYTE PTR [rip+0xa64],ah        # 0x140041f64
   140041500:	outs   dx,BYTE PTR gs:[rsi]
   140041502:	or     dh,BYTE PTR fs:[rdx+0x65]
   140041506:	jae    0x14004157c
   140041508:	outs   dx,DWORD PTR ds:[rsi]
   140041509:	jb     0x140041570
   14004150b:	or     al,BYTE PTR [rax]
   14004150d:	add    BYTE PTR [rax],al
   14004150f:	add    BYTE PTR [rip+0x45252525],ah        # 0x185293a3a
   140041515:	rex.WRXB
   140041516:	rex.RX or r8b,BYTE PTR [rax]
   140041519:	add    BYTE PTR [rax],al
   14004151b:	add    BYTE PTR [rip+0x73252025],ah        # 0x1b3293546
   140041521:	or     al,BYTE PTR [rax]
   140041523:	add    BYTE PTR [rax],al
   140041525:	add    BYTE PTR [rax],al
   140041527:	add    BYTE PTR [rip+0x42252525],ah        # 0x182293a52
   14004152d:	outs   dx,DWORD PTR ds:[rsi]
   14004152e:	jne    0x14004159e
   140041530:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x3a786f42
   140041538:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a42935a2
   14004153e:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a42935a8
   140041544:	or     al,BYTE PTR [rax]
   140041546:	add    BYTE PTR [rax],al
   140041548:	and    eax,0x45252525
   14004154d:	outs   dx,BYTE PTR ds:[rsi]
   14004154e:	rex.XB outs dx,DWORD PTR fs:[rsi]
   140041551:	ins    DWORD PTR es:[rdi],dx
   140041552:	ins    DWORD PTR es:[rdi],dx
   140041553:	outs   dx,BYTE PTR gs:[rsi]
   140041555:	je     0x1400415ca
   140041557:	or     dh,BYTE PTR [rbx+0x61]
   14004155a:	jbe    0x1400415c1
   14004155c:	or     al,BYTE PTR [rax]
   14004155e:	add    BYTE PTR [rax],al
   140041560:	push   rbp
   140041561:	push   rdx
   140041562:	rex.WR add BYTE PTR [rax],r8b
   140041565:	add    BYTE PTR [rax],al
   140041567:	add    BYTE PTR [rbx+0x20],bl
   14004156a:	jnp    0x1400415af
   14004156c:	(bad)  
   14004156d:	je     0x1400415d0
   14004156f:	ins    BYTE PTR es:[rdi],dx
   140041570:	outs   dx,DWORD PTR ds:[rsi]
   140041571:	addr32 jge 0x140041594
   140041574:	cmp    al,0x3c
   140041576:	and    BYTE PTR [rdi],ch
   140041578:	push   rbp
   140041579:	push   rdx
   14004157a:	rex.WB and BYTE PTR [r12+rdi*1],dil
   14004157e:	and    BYTE PTR [rdi],ch
   140041580:	rex.X (bad) 
   140041582:	jae    0x1400415e9
   140041584:	and    BYTE PTR [rax],ch
   140041586:	and    eax,0x3e202973
   14004158b:	and    BYTE PTR ds:[rsi],bh
   14004158e:	or     ch,BYTE PTR ds:[rdi]
   140041591:	push   rax
   140041592:	push   rbp
   140041593:	push   rsp
   140041594:	and    BYTE PTR [rax+0x64],dh
   140041597:	ins    WORD PTR es:[rdi],dx
   140041599:	(bad)  
   14004159a:	jb     0x140041607
   14004159c:	or     al,BYTE PTR [rax]
   14004159e:	add    BYTE PTR [rax],al
   1400415a0:	jae    0x140041607
   1400415a2:	je     0x140041619
   1400415a4:	jo     0x1400415f2
   1400415a6:	(bad)  
   1400415a7:	je     0x140041612
   1400415a9:	outs   dx,BYTE PTR ds:[rsi]
   1400415aa:	xor    DWORD PTR [rdx],ecx
   1400415ac:	add    BYTE PTR [rax],al
   1400415ae:	add    BYTE PTR [rax],al
   1400415b0:	and    eax,0x50252525
   1400415b5:	(bad)  
   1400415b6:	cmp    ah,BYTE PTR gs:[eax]
   1400415ba:	and    eax,0x64252064
   1400415bf:	or     al,BYTE PTR [rax]
   1400415c1:	add    BYTE PTR [rax],al
   1400415c3:	add    BYTE PTR [rax],al
   1400415c5:	add    BYTE PTR [rax],al
   1400415c7:	add    BYTE PTR [rip+0x50252525],ah        # 0x190293af2
   1400415cd:	(bad)  
   1400415ce:	rex.X outs dx,DWORD PTR gs:[esi]
   1400415d2:	jne    0x140041642
   1400415d4:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x3a786f42
   1400415dc:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4293646
   1400415e2:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a429364c
   1400415e8:	or     al,BYTE PTR [rax]
   1400415ea:	add    BYTE PTR [rax],al
   1400415ec:	add    BYTE PTR [rax],al
   1400415ee:	add    BYTE PTR [rax],al
   1400415f0:	rex.WR (bad) 
   1400415f2:	outs   dx,BYTE PTR ds:[rsi]
   1400415f3:	fs jae 0x140041659
   1400415f6:	(bad)  
   1400415f7:	jo     0x14004165e
   1400415f9:	add    BYTE PTR [rax],al
   1400415fb:	add    BYTE PTR [rax],al
   1400415fd:	add    BYTE PTR [rax],al
   1400415ff:	add    BYTE PTR [rax+0x6f],dl
   140041602:	jb     0x140041678
   140041604:	jb     0x140041667
   140041606:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x0
   14004160e:	add    BYTE PTR [rax],al
   140041610:	and    eax,0x50252525
   140041615:	(bad)  
   140041616:	addr32 gs rex.WRXB jb 0x140041684
   14004161b:	outs   dx,BYTE PTR gs:[rsi]
   14004161d:	je     0x140041680
   14004161f:	je     0x14004168a
   140041621:	outs   dx,DWORD PTR ds:[rsi]
   140041622:	outs   dx,BYTE PTR ds:[rsi]
   140041623:	cmp    ah,BYTE PTR [rax]
   140041625:	and    eax,0xa73
   14004162a:	add    BYTE PTR [rax],al
   14004162c:	add    BYTE PTR [rax],al
   14004162e:	add    BYTE PTR [rax],al
   140041630:	addr32 jae 0x140041694
   140041633:	jbe    0x14004169a
   140041635:	or     ah,BYTE PTR [rip+0x64252064]        # 0x1a429369f
   14004163b:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a42936a5
   140041641:	and    BYTE PTR [rdx+0x6f],ah
   140041644:	js     0x1400416b6
   140041646:	jb     0x1400416b1
   140041648:	ins    DWORD PTR es:[rdi],dx
   140041649:	and    BYTE PTR [rbx+0x6c],ah
   14004164c:	imul   esi,DWORD PTR [rax+0x20],0x7077656e
   140041653:	(bad)  
   140041654:	je     0x1400416be
   140041656:	or     al,BYTE PTR [rax]
   140041658:	and    eax,0x64252064
   14004165d:	and    BYTE PTR [rdx+rsi*2+0x61],dh
   140041661:	outs   dx,BYTE PTR ds:[rsi]
   140041662:	jae    0x1400416d0
   140041664:	(bad)  
   140041665:	je     0x1400416cc
   140041667:	or     al,BYTE PTR [rax]
   140041669:	add    BYTE PTR [rax],al
   14004166b:	add    BYTE PTR [rax],al
   14004166d:	add    BYTE PTR [rax],al
   14004166f:	add    BYTE PTR [rdi+0x73],ah
   140041672:	(bad)  
   140041673:	jbe    0x1400416da
   140041675:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a42936df
   14004167b:	and    BYTE PTR [rdx+rsi*2+0x61],dh
   14004167f:	outs   dx,BYTE PTR ds:[rsi]
   140041680:	jae    0x1400416ee
   140041682:	(bad)  
   140041683:	je     0x1400416ea
   140041685:	and    BYTE PTR [rip+0x6f722064],ah        # 0x1af7636ef
   14004168b:	je     0x1400416ee
   14004168d:	je     0x1400416f4
   14004168f:	or     al,BYTE PTR [rax]
   140041691:	add    BYTE PTR [rax],al
   140041693:	add    BYTE PTR [rax],al
   140041695:	add    BYTE PTR [rax],al
   140041697:	add    BYTE PTR [rip+0x64252064],ah        # 0x1a4293701
   14004169d:	and    BYTE PTR [rip+0x65622064],ah        # 0x1a5663707
   1400416a3:	imul   ebp,DWORD PTR [esi+0x70],0xa656761
   1400416ab:	add    BYTE PTR [rax],al
   1400416ad:	add    BYTE PTR [rax],al
   1400416af:	add    BYTE PTR [rdi+0x72],ah
   1400416b2:	gs jae 0x140041729
   1400416b5:	outs   dx,DWORD PTR ds:[rsi]
   1400416b6:	jb     0x14004171d
   1400416b8:	or     al,BYTE PTR [rax]
   1400416ba:	add    BYTE PTR [rax],al
   1400416bc:	add    BYTE PTR [rax],al
   1400416be:	add    BYTE PTR [rax],al
   1400416c0:	and    eax,0x2066342e
   1400416c5:	jae    0x14004172c
   1400416c7:	je     0x140041728
   1400416c9:	jae    0x14004172e
   1400416cb:	(bad)  
   1400416cc:	ins    BYTE PTR es:[rdi],dx
   1400416cd:	or     al,BYTE PTR gs:[rax]
   1400416d0:	and    eax,0x64252064
   1400416d5:	and    BYTE PTR [rdx+rsi*2+0x61],dh
   1400416d9:	outs   dx,BYTE PTR ds:[rsi]
   1400416da:	jae    0x140041748
   1400416dc:	(bad)  
   1400416dd:	je     0x140041744
   1400416df:	and    BYTE PTR [rip+0x6f722064],ah        # 0x1af763749
   1400416e5:	je     0x140041748
   1400416e7:	je     0x14004174e
   1400416e9:	or     al,BYTE PTR [rax]
   1400416eb:	add    BYTE PTR [rax],al
   1400416ed:	add    BYTE PTR [rax],al
   1400416ef:	add    BYTE PTR [rbx+0x0],ah
   1400416f2:	cmp    al,BYTE PTR [rax]
   1400416f4:	pop    rsp
   1400416f5:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400416f9:	add    BYTE PTR [rbp+0x0],ch
   1400416fc:	jo     0x1400416fe
   1400416fe:	pop    rsp
   1400416ff:	add    BYTE PTR [rdx+0x0],ah
   140041702:	(bad)  
   140041703:	add    BYTE PTR [rax+rax*1+0x73],dh
   140041707:	add    BYTE PTR [rbp+0x0],ah
   14004170a:	jb     0x14004170c
   14004170c:	jbe    0x14004170e
   14004170e:	add    BYTE PTR gs:[rax+rax*1+0x77],bl
   140041713:	add    BYTE PTR [rcx+0x0],ch
   140041716:	outs   dx,BYTE PTR ds:[rsi]
   140041717:	add    BYTE PTR [rsi],dh
   140041719:	add    BYTE PTR [rax+rax*1],dh
   14004171c:	pop    rsp
   14004171d:	add    BYTE PTR [rdi+0x0],ah
   140041720:	jb     0x140041722
   140041722:	(bad)  
   140041723:	add    BYTE PTR [rax+0x0],dh
   140041726:	push   0x69007600
   14004172b:	add    BYTE PTR [rdx+0x0],bh
   14004172e:	pop    rsp
   14004172f:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140041733:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140041737:	add    BYTE PTR [rbp+0x0],ah
   14004173a:	(bad)  
   14004173b:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14004173f:	add    BYTE PTR [rax+rax*1+0x63],bl
   140041743:	add    BYTE PTR [rdi+0x0],ch
   140041746:	ins    DWORD PTR es:[rdi],dx
   140041747:	add    BYTE PTR [rbp+0x0],ch
   14004174a:	outs   dx,DWORD PTR ds:[rsi]
   14004174b:	add    BYTE PTR [rsi+0x0],ch
   14004174e:	pop    rsp
   14004174f:	add    BYTE PTR [rax+0x0],dh
   140041752:	jae    0x140041754
   140041754:	add    BYTE PTR [ebp+0x0],ah
   140041758:	outs   dx,BYTE PTR ds:[rsi]
   140041759:	add    BYTE PTR [rsi],ch
   14004175b:	add    BYTE PTR [rbx+0x0],ah
   14004175e:	add    BYTE PTR [rax],al
   140041760:	push   rbx
   140041761:	add    BYTE PTR [rax+0x0],dl
   140041764:	and    BYTE PTR [rax],al
   140041766:	cmp    eax,0x20003d00
   14004176b:	add    BYTE PTR [rax],dh
   14004176d:	add    BYTE PTR [rax],al
   14004176f:	add    BYTE PTR [rip+0x77203a73],ah        # 0x1b72451e8
   140041775:	(bad)  
   140041776:	jb     0x1400417e6
   140041778:	imul   ebp,DWORD PTR [rsi+0x67],0x6163202c
   14004177f:	outs   dx,BYTE PTR ds:[rsi]
   140041780:	jbe    0x1400417e3
   140041782:	jae    0x1400417a4
   140041784:	jae    0x1400417ef
   140041786:	jp     0x1400417ed
   140041788:	and    BYTE PTR [rax],ch
   14004178a:	and    eax,0x64252c64
   14004178f:	sub    DWORD PTR [rax],esp
   140041791:	gs js  0x1400417f7
   140041794:	gs gs fs jae 0x1400417b9
   140041799:	push   rax
   14004179a:	rex.R
   14004179b:	and    BYTE PTR [rcx+r13*2+0x6d],r13b
   1400417a0:	imul   esi,DWORD PTR [rax+riz*1+0x28],0xa296425
   1400417a8:	or     DWORD PTR [rax],ebp
   1400417aa:	jae    0x140041821
   1400417ac:	addr32 addr32 gs jae 0x140041825
   1400417b1:	and    BYTE PTR [rbx+0x65],dh
   1400417b4:	je     0x14004182a
   1400417b6:	imul   ebp,DWORD PTR [rsi+0x67],0x62206120
   1400417bd:	outs   dx,DWORD PTR ds:[rsi]
   1400417be:	jne    0x14004182e
   1400417c0:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x786f6220
   1400417c8:	and    BYTE PTR [rbx+0x69],dh
   1400417cb:	jp     0x140041832
   1400417cd:	sub    al,0x20
   1400417cf:	jae    0x140041836
   1400417d1:	and    BYTE PTR gs:[rdi+rbp*2+0x74],ah
   1400417d6:	sub    BYTE PTR [rcx],dh
   1400417d8:	sub    DWORD PTR [rcx],ebp
   1400417da:	or     al,BYTE PTR [rax]
   1400417dc:	add    BYTE PTR [rax],al
   1400417de:	add    BYTE PTR [rax],al
   1400417e0:	pop    rbx
   1400417e1:	and    BYTE PTR [rdi],ch
   1400417e3:	rex.XB jb 0x140041855
   1400417e6:	jo     0x14004182a
   1400417e8:	outs   dx,DWORD PTR ds:[rsi]
   1400417e9:	js     0x14004180b
   1400417eb:	pop    rbx
   1400417ec:	and    eax,0x64252064
   1400417f1:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a429385b
   1400417f7:	pop    rbp
   1400417f8:	and    BYTE PTR [rdi],ch
   1400417fa:	push   rax
   1400417fb:	rex.B
   1400417fc:	rex.RXB
   1400417fd:	rex.RB push r11
   1400417ff:	and    BYTE PTR [rax+0x64],dh
   140041802:	ins    WORD PTR es:[rdi],dx
   140041804:	(bad)  
   140041805:	jb     0x140041872
   140041807:	or     al,BYTE PTR [rax]
   140041809:	add    BYTE PTR [rax],al
   14004180b:	add    BYTE PTR [rax],al
   14004180d:	add    BYTE PTR [rax],al
   14004180f:	add    BYTE PTR [rbp+0x6e],ah
   140041812:	fs jo  0x140041876
   140041815:	or     ah,BYTE PTR gs:[edi+0x72]
   14004181a:	gs jae 0x140041891
   14004181d:	outs   dx,DWORD PTR ds:[rsi]
   14004181e:	jb     0x140041885
   140041820:	or     al,BYTE PTR [rax]
   140041822:	add    BYTE PTR [rax],al
   140041824:	add    BYTE PTR [rax],al
   140041826:	add    BYTE PTR [rax],al
   140041828:	and    eax,0x50252525
   14004182d:	(bad)  
   14004182e:	addr32 gs push rsp
   140041831:	jb     0x140041894
   140041833:	imul   ebp,DWORD PTR [rbp+riz*2+0x72],0xa
   14004183b:	add    BYTE PTR [rax],al
   14004183d:	add    BYTE PTR [rax],al
   14004183f:	add    BYTE PTR [rip+0x45252525],ah        # 0x185293d6a
   140041845:	outs   dx,BYTE PTR ds:[rsi]
   140041846:	fs push rax
   140041848:	(bad)  
   140041849:	cmp    ah,BYTE PTR gs:[eax]
   14004184d:	and    eax,0xa64
   140041852:	add    BYTE PTR [rax],al
   140041854:	add    BYTE PTR [rax],al
   140041856:	add    BYTE PTR [rax],al
   140041858:	or     ah,BYTE PTR [rip+0x73250925]        # 0x1b3292183
   14004185e:	or     al,BYTE PTR [rax]
   140041860:	or     ah,BYTE PTR [rip+0x73250925]        # 0x1b329218b
   140041866:	and    BYTE PTR [rip+0x7325203e],ch        # 0x1b32938aa
   14004186c:	or     al,BYTE PTR [rax]
   14004186e:	add    BYTE PTR [rax],al
   140041870:	addr32 jae 0x1400418d4
   140041873:	jbe    0x1400418da
   140041875:	and    BYTE PTR [rcx],dh
   140041877:	xor    BYTE PTR [rax],ah
   140041879:	imul   esp,DWORD PTR fs:[rbx+0x74],0x67656220
   140041881:	imul   ebp,DWORD PTR [rsi+0xa],0x0
   140041888:	ja     0x1400418eb
   14004188a:	jb     0x1400418fa
   14004188c:	imul   ebp,DWORD PTR [rsi+0x67],0x7370203a
   140041893:	outs   dx,BYTE PTR gs:[esi]
   140041896:	and    BYTE PTR [rbx+0x74],dh
   140041899:	imul   esp,DWORD PTR [rax],0x6f
   14004189c:	jbe    0x140041904
   14004189e:	ins    BYTE PTR es:[rdi],dx
   14004189f:	or     al,BYTE PTR [rax]
   1400418a1:	add    BYTE PTR [rax],al
   1400418a3:	add    BYTE PTR [rax],al
   1400418a5:	add    BYTE PTR [rax],al
   1400418a7:	add    BYTE PTR [rdi+0x61],dh
   1400418aa:	jb     0x14004191a
   1400418ac:	imul   ebp,DWORD PTR [rsi+0x67],0x7370203a
   1400418b3:	outs   dx,BYTE PTR gs:[esi]
   1400418b6:	and    BYTE PTR [rbx+0x74],dh
   1400418b9:	imul   esp,DWORD PTR [rax],0x75
   1400418bc:	outs   dx,BYTE PTR ds:[rsi]
   1400418bd:	fs data16 ins BYTE PTR es:[rdi],dx
   1400418c0:	or     al,BYTE PTR [rax]
   1400418c2:	add    BYTE PTR [rax],al
   1400418c4:	add    BYTE PTR [rax],al
   1400418c6:	add    BYTE PTR [rax],al
   1400418c8:	outs   dx,BYTE PTR gs:[rsi]
   1400418ca:	and    BYTE PTR fs:[rdi+0x72],ah
   1400418ce:	gs jae 0x140041945
   1400418d1:	outs   dx,DWORD PTR ds:[rsi]
   1400418d2:	jb     0x140041939
   1400418d4:	or     al,BYTE PTR [rax]
   1400418d6:	add    BYTE PTR [rax],al
   1400418d8:	and    eax,0x2066322e
   1400418dd:	(bad)  
   1400418de:	and    eax,0x65732073
   1400418e3:	je     0x140041944
   1400418e5:	outs   dx,WORD PTR ds:[rsi]
   1400418e7:	outs   dx,BYTE PTR ds:[rsi]
   1400418e8:	je     0x1400418f4
   1400418ea:	add    BYTE PTR [rax],al
   1400418ec:	add    BYTE PTR [rax],al
   1400418ee:	add    BYTE PTR [rax],al
   1400418f0:	and    eax,0x2066332e
   1400418f5:	and    eax,0x2066332e
   1400418fa:	and    eax,0x2066332e
   1400418ff:	and    eax,0x6c6f6373
   140041904:	outs   dx,DWORD PTR ds:[rsi]
   140041905:	jb     0x140041911
   140041907:	add    BYTE PTR [rip+0x25002073],ah        # 0x165043980
   14004190d:	jae    0x140041919
   14004190f:	add    BYTE PTR [rip+0x64252064],ah        # 0x1a4293979
   140041915:	and    BYTE PTR [rbp+0x6f],ch
   140041918:	jbe    0x14004197f
   14004191a:	je     0x14004198b
   14004191c:	and    BYTE PTR [rip+0x2e252064],ah        # 0x16e293986
   140041922:	xor    DWORD PTR [rsi+0x20],esp
   140041925:	and    eax,0x6c612073
   14004192a:	imul   esp,DWORD PTR [rdi+0x6e],0x65746465
   140041931:	js     0x1400419a7
   140041933:	or     al,BYTE PTR [rax]
   140041935:	add    BYTE PTR [rax],al
   140041937:	add    BYTE PTR [rax+0x73],dh
   14004193a:	pop    rdi
   14004193b:	(bad)  
   14004193c:	gs jp  0x1400419a8
   14004193f:	gs jb  0x140041962
   140041942:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
   14004194a:	(bad)  
   14004194b:	jb     0x1400419bf
   14004194d:	outs   dx,DWORD PTR ds:[rsi]
   14004194e:	ja     0x140041970
   140041950:	(bad)  
   140041951:	jb     0x1400419ba
   140041953:	jae    0x14004195f
   140041955:	add    BYTE PTR [rax],al
   140041957:	add    BYTE PTR [rip+0x64252064],ah        # 0x1a42939c1
   14004195d:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a42939c7
   140041963:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a42939cd
   140041969:	and    BYTE PTR [rbx+0x75],ah
   14004196c:	jb     0x1400419e4
   14004196e:	gs je  0x1400419e0
   140041971:	or     al,BYTE PTR [rax]
   140041973:	add    BYTE PTR [rax],al
   140041975:	add    BYTE PTR [rax],al
   140041977:	add    BYTE PTR [rip+0x64252064],ah        # 0x1a42939e1
   14004197d:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   140041981:	gs je  0x1400419f3
   140041984:	or     al,BYTE PTR [rax]
   140041986:	add    BYTE PTR [rax],al
   140041988:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   14004198c:	gs jo  0x1400419f0
   14004198f:	je     0x1400419f9
   140041991:	or     al,BYTE PTR [rax]
   140041993:	add    BYTE PTR [rax],al
   140041995:	add    BYTE PTR [rax],al
   140041997:	add    BYTE PTR [rip+0x64252064],ah        # 0x1a4293a01
   14004199d:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4293a07
   1400419a3:	and    BYTE PTR [rbp+0x6c],ah
   1400419a6:	ins    BYTE PTR es:[rdi],dx
   1400419a7:	imul   esi,DWORD PTR [rax+0x73],0x61705f65
   1400419ae:	je     0x140041a18
   1400419b0:	or     al,BYTE PTR [rax]
   1400419b2:	add    BYTE PTR [rax],al
   1400419b4:	pop    rbx
   1400419b5:	and    BYTE PTR [rax],al
   1400419b7:	add    BYTE PTR [rip+0x64252064],ah        # 0x1a4293a21
   1400419bd:	and    BYTE PTR [rax],al
   1400419bf:	add    BYTE PTR [rbp+0x20],bl
   1400419c2:	and    BYTE PTR [rip+0x73252064],ah        # 0x1b3293a2c
   1400419c8:	and    BYTE PTR [rip+0xa73],ah        # 0x140042441
   1400419ce:	add    BYTE PTR [rax],al
   1400419d0:	and    eax,0x42252525
   1400419d5:	outs   dx,DWORD PTR ds:[rsi]
   1400419d6:	jne    0x140041a46
   1400419d8:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x3a786f42
   1400419e0:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4293a4a
   1400419e6:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4293a50
   1400419ec:	add    BYTE PTR [rax],al
   1400419ee:	add    BYTE PTR [rax],al
   1400419f0:	and    eax,0x77203a73
   1400419f5:	(bad)  
   1400419f6:	jb     0x140041a66
   1400419f8:	imul   ebp,DWORD PTR [rsi+0x67],0x6f42202c
   1400419ff:	jne    0x140041a6f
   140041a01:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20786f42
   140041a09:	outs   dx,BYTE PTR ds:[rsi]
   140041a0a:	outs   dx,DWORD PTR ds:[rsi]
   140041a0b:	je     0x140041a2d
   140041a0d:	outs   dx,WORD PTR ds:[rsi]
   140041a0f:	jne    0x140041a7f
   140041a11:	and    BYTE PTR fs:[rcx+0x6e],ch
   140041a15:	and    BYTE PTR [rbp+0x70],ah
   140041a18:	jae    0x140041a80
   140041a1a:	and    BYTE PTR [rsi+0x69],ah
   140041a1d:	ins    BYTE PTR es:[rdi],dx
   140041a1e:	and    BYTE PTR gs:[rip+0xa73],ah        # 0x140042498
   140041a25:	add    BYTE PTR [rax],al
   140041a27:	add    BYTE PTR [rax],ah
   140041a29:	and    eax,0x77203a73
   140041a2e:	(bad)  
   140041a2f:	jb     0x140041a9f
   140041a31:	imul   ebp,DWORD PTR [rsi+0x67],0x6f63202c
   140041a38:	jne    0x140041aa6
   140041a3a:	outs   dx,BYTE PTR fs:[rsi]
   140041a3c:	(bad)  
   140041a3d:	je     0x140041a5f
   140041a3f:	outs   dx,DWORD PTR ds:[rsi]
   140041a40:	jo     0x140041aa7
   140041a42:	outs   dx,BYTE PTR ds:[rsi]
   140041a43:	and    BYTE PTR [rbp+0x70],ah
   140041a46:	jae    0x140041aae
   140041a48:	and    BYTE PTR [rsi+0x69],ah
   140041a4b:	ins    BYTE PTR es:[rdi],dx
   140041a4c:	and    BYTE PTR gs:[rip+0xa73],ah        # 0x1400424c6
   140041a53:	add    BYTE PTR [rax],al
   140041a55:	add    BYTE PTR [rax],al
   140041a57:	add    BYTE PTR [rip+0x77203a73],ah        # 0x1b72454d0
   140041a5d:	(bad)  
   140041a5e:	jb     0x140041ace
   140041a60:	imul   ebp,DWORD PTR [rsi+0x67],0x6873202c
   140041a67:	(bad)  
   140041a68:	jo     0x140041acf
   140041a6a:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f6e
   140041a71:	je     0x140041a93
   140041a73:	jae    0x140041ada
   140041a75:	je     0x140041a97
   140041a77:	outs   dx,WORD PTR ds:[rsi]
   140041a79:	jb     0x140041a9b
   140041a7b:	gs jo  0x140041af1
   140041a7e:	data16 and BYTE PTR [rsi+0x6f],ch
   140041a82:	fs and BYTE PTR gs:[rip+0xa73],ah        # 0x1400424fd
   140041a8a:	add    BYTE PTR [rax],al
   140041a8c:	add    BYTE PTR [rax],al
   140041a8e:	add    BYTE PTR [rax],al
   140041a90:	and    eax,0x64252064
   140041a95:	and    BYTE PTR [rdx+rsi*2+0x61],dh
   140041a99:	outs   dx,BYTE PTR ds:[rsi]
   140041a9a:	jae    0x140041b08
   140041a9c:	(bad)  
   140041a9d:	je     0x140041b04
   140041a9f:	and    BYTE PTR [rsi+0x65],ch
   140041aa2:	ja     0x140041b14
   140041aa4:	(bad)  
   140041aa5:	je     0x140041b0f
   140041aa7:	and    BYTE PTR [rbp+0x73],dh
   140041aaa:	gs jb  0x140041b0c
   140041aad:	jae    0x140041b17
   140041aaf:	(bad)  
   140041ab0:	jo     0x140041b17
   140041ab2:	pop    rdi
   140041ab3:	and    eax,0xa64
   140041ab8:	(bad)  
   140041ab9:	jne    0x140041b2e
   140041abb:	gs jb  0x140041b1d
   140041abe:	jae    0x140041b28
   140041ac0:	(bad)  
   140041ac1:	jo     0x140041b28
   140041ac3:	pop    rdi
   140041ac4:	and    eax,0x7b2064
   140041ac9:	add    BYTE PTR [rax],al
   140041acb:	add    BYTE PTR [rax],al
   140041acd:	add    BYTE PTR [rax],al
   140041acf:	add    BYTE PTR [rbp+0x20],bh
   140041ad2:	(bad)  
   140041ad3:	imul   ebp,DWORD PTR [rsi+0x64],0x66656420
   140041ada:	or     al,BYTE PTR [rax]
   140041adc:	add    BYTE PTR [rax],al
   140041ade:	add    BYTE PTR [rax],al
   140041ae0:	je     0x140041b4b
   140041ae2:	ins    DWORD PTR es:[rdi],dx
   140041ae3:	gs jae 0x140041b58
   140041ae6:	outs   dx,DWORD PTR ds:[rsi]
   140041ae7:	ins    DWORD PTR es:[rdi],dx
   140041ae8:	(bad)  
   140041ae9:	outs   dx,BYTE PTR ds:[rsi]
   140041aea:	add    BYTE PTR [rax],al
   140041aec:	add    BYTE PTR [rax],al
   140041aee:	add    BYTE PTR [rax],al
   140041af0:	je     0x140041b5b
   140041af2:	ins    DWORD PTR es:[rdi],dx
   140041af3:	gs jae 0x140041b58
   140041af6:	outs   dx,DWORD PTR ds:[rsi]
   140041af7:	ins    BYTE PTR es:[rdi],dx
   140041af8:	add    BYTE PTR fs:[rax],al
   140041afb:	add    BYTE PTR [rax],al
   140041afd:	add    BYTE PTR [rax],al
   140041aff:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
   140041b03:	gs jae 0x140041b6f
   140041b06:	je     0x140041b69
   140041b08:	ins    BYTE PTR es:[rdi],dx
   140041b09:	imul   esp,DWORD PTR [rbx+0x0],0x0
   140041b10:	je     0x140041b7b
   140041b12:	ins    DWORD PTR es:[rdi],dx
   140041b13:	gs jae 0x140041b78
   140041b16:	outs   dx,DWORD PTR ds:[rsi]
   140041b17:	ins    BYTE PTR es:[rdi],dx
   140041b18:	imul   esi,DWORD PTR fs:[rcx+riz*2+0x6c],0x68006369
   140041b21:	gs ins BYTE PTR es:[rdi],dx
   140041b23:	jbe    0x140041b8a
   140041b25:	je     0x140041b90
   140041b27:	movsxd esp,DWORD PTR [rcx+0x0]
   140041b2a:	add    BYTE PTR [rax],al
   140041b2c:	add    BYTE PTR [rax],al
   140041b2e:	add    BYTE PTR [rax],al
   140041b30:	push   0x65766c65
   140041b35:	je     0x140041ba0
   140041b37:	movsxd esp,DWORD PTR [rcx+0x62]
   140041b3a:	outs   dx,DWORD PTR ds:[rsi]
   140041b3b:	ins    BYTE PTR es:[rdi],dx
   140041b3c:	add    BYTE PTR fs:[rax],al
   140041b3f:	add    BYTE PTR [rax+0x65],ch
   140041b42:	ins    BYTE PTR es:[rdi],dx
   140041b43:	jbe    0x140041baa
   140041b45:	je     0x140041bb0
   140041b47:	movsxd esp,DWORD PTR [rcx+0x6f]
   140041b4a:	(bad)  
   140041b4b:	ins    BYTE PTR es:[rdi],dx
   140041b4c:	imul   esi,DWORD PTR [rcx+0x75],0x65
   140041b53:	add    BYTE PTR [rax],al
   140041b55:	add    BYTE PTR [rax],al
   140041b57:	add    BYTE PTR [rax+0x65],ch
   140041b5a:	ins    BYTE PTR es:[rdi],dx
   140041b5b:	jbe    0x140041bc2
   140041b5d:	je     0x140041bc8
   140041b5f:	movsxd esp,DWORD PTR [rcx+0x62]
   140041b62:	outs   dx,DWORD PTR ds:[rsi]
   140041b63:	ins    BYTE PTR es:[rdi],dx
   140041b64:	outs   dx,DWORD PTR fs:[rsi]
   140041b66:	(bad)  
   140041b67:	ins    BYTE PTR es:[rdi],dx
   140041b68:	imul   esi,DWORD PTR [rcx+0x75],0x65
   140041b6f:	add    BYTE PTR [rbx+0x6f],ah
   140041b72:	jne    0x140041be6
   140041b74:	imul   esp,DWORD PTR [rbp+0x72],0x756f6300
   140041b7b:	jb     0x140041be6
   140041b7d:	gs jb  0x140041be2
   140041b80:	outs   dx,DWORD PTR ds:[rsi]
   140041b81:	ins    BYTE PTR es:[rdi],dx
   140041b82:	add    BYTE PTR fs:[rax],al
   140041b85:	add    BYTE PTR [rax],al
   140041b87:	add    BYTE PTR [rbx+0x6f],ah
   140041b8a:	jne    0x140041bfe
   140041b8c:	imul   esp,DWORD PTR [rbp+0x72],0x696c626f
   140041b93:	jno    0x140041c0a
   140041b95:	add    BYTE PTR gs:[rax],al
   140041b98:	movsxd ebp,DWORD PTR [rdi+0x75]
   140041b9b:	jb     0x140041c06
   140041b9d:	gs jb  0x140041c02
   140041ba0:	outs   dx,DWORD PTR ds:[rsi]
   140041ba1:	ins    BYTE PTR es:[rdi],dx
   140041ba2:	outs   dx,DWORD PTR fs:[rsi]
   140041ba4:	(bad)  
   140041ba5:	ins    BYTE PTR es:[rdi],dx
   140041ba6:	imul   esi,DWORD PTR [rcx+0x75],0x65
   140041bad:	add    BYTE PTR [rax],al
   140041baf:	add    BYTE PTR [rax+0x61],dh
   140041bb2:	ins    BYTE PTR es:[rdi],dx
   140041bb3:	(bad)  
   140041bb4:	je     0x140041c1f
   140041bb6:	outs   dx,BYTE PTR ds:[rsi]
   140041bb7:	outs   dx,DWORD PTR ds:[rsi]
   140041bb8:	jb     0x140041c29
   140041bba:	ins    DWORD PTR es:[rdi],dx
   140041bbb:	(bad)  
   140041bbc:	outs   dx,BYTE PTR ds:[rsi]
   140041bbd:	add    BYTE PTR [rax],al
   140041bbf:	add    BYTE PTR [rax+0x61],dh
   140041bc2:	ins    BYTE PTR es:[rdi],dx
   140041bc3:	(bad)  
   140041bc4:	je     0x140041c2f
   140041bc6:	outs   dx,BYTE PTR ds:[rsi]
   140041bc7:	outs   dx,DWORD PTR ds:[rsi]
   140041bc8:	(bad)  
   140041bc9:	outs   dx,DWORD PTR ds:[rsi]
   140041bca:	ins    BYTE PTR es:[rdi],dx
   140041bcb:	add    BYTE PTR fs:[rax],al
   140041bce:	add    BYTE PTR [rax],al
   140041bd0:	jo     0x140041c33
   140041bd2:	ins    BYTE PTR es:[rdi],dx
   140041bd3:	(bad)  
   140041bd4:	je     0x140041c3f
   140041bd6:	outs   dx,BYTE PTR ds:[rsi]
   140041bd7:	outs   dx,DWORD PTR ds:[rsi]
   140041bd8:	imul   esi,DWORD PTR [rcx+riz*2+0x6c],0x6369
   140041be0:	jo     0x140041c43
   140041be2:	ins    BYTE PTR es:[rdi],dx
   140041be3:	(bad)  
   140041be4:	je     0x140041c4f
   140041be6:	outs   dx,BYTE PTR ds:[rsi]
   140041be7:	outs   dx,DWORD PTR ds:[rsi]
   140041be8:	(bad)  
   140041be9:	outs   dx,DWORD PTR ds:[rsi]
   140041bea:	ins    BYTE PTR es:[rdi],dx
   140041beb:	imul   esi,DWORD PTR fs:[rcx+riz*2+0x6c],0x6369
   140041bf4:	add    BYTE PTR [rax],al
   140041bf6:	add    BYTE PTR [rax],al
   140041bf8:	jae    0x140041c6e
   140041bfa:	imul   esp,DWORD PTR [rbx+0x6b],0x73007763
   140041c01:	je     0x140041c6c
   140041c03:	movsxd ebp,DWORD PTR [rbx+0x0]
   140041c06:	add    BYTE PTR [rax],al
   140041c08:	jp     0x140041c6b
   140041c0a:	jo     0x140041c72
   140041c0c:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x73746162
   140041c14:	add    BYTE PTR [rax],al
   140041c16:	add    BYTE PTR [rax],al
   140041c18:	jae    0x140041c93
   140041c1a:	ins    DWORD PTR es:[rdi],dx
   140041c1b:	(bad)  
   140041c1c:	outs   dx,DWORD PTR ds:[rsi]
   140041c1d:	ins    BYTE PTR es:[rdi],dx
   140041c1e:	add    BYTE PTR [rax],al
   140041c20:	sbb    eax,DWORD PTR [rbp+0xa]
   140041c23:	sbb    esp,DWORD PTR [rip+0xa423025]        # 0x14a464c4e
   140041c29:	add    BYTE PTR [rax],al
   140041c2b:	add    BYTE PTR [rbx],bl
   140041c2d:	and    eax,0xa413025
   140041c32:	add    BYTE PTR [rax],al
   140041c34:	cmp    eax,DWORD PTR [rax]
   140041c36:	add    BYTE PTR [rax],al
   140041c38:	rex.WR
   140041c39:	rex.X add BYTE PTR [rax],al
   140041c3c:	add    esp,DWORD PTR [rip+0xa73]        # 0x1400426b5
   140041c42:	add    BYTE PTR [rax],al
   140041c44:	push   rbx
   140041c45:	push   rax
   140041c46:	and    eax,0x732564
   140041c4b:	add    BYTE PTR [rax],al
   140041c4d:	add    BYTE PTR [rax],al
   140041c4f:	add    BYTE PTR [rax+0x43],dl
   140041c52:	and    eax,0x64252c64
   140041c57:	sub    al,0x25
   140041c59:	fs sub al,0x25
   140041c5c:	fs and eax,0x44410073
   140041c62:	add    BYTE PTR [rax],al
   140041c64:	push   rbx
   140041c65:	add    BYTE PTR [rax],r8b
   140041c68:	and    eax,0x252c3173
   140041c6d:	fs sub al,0x32
   140041c70:	sub    al,0x31
   140041c72:	sub    al,0x34
   140041c74:	sub    al,0x25
   140041c76:	xor    DWORD PTR cs:[rsi+0x2c],esp
   140041c7a:	xor    eax,0x2c64252c
   140041c7f:	ss sub al,0x25
   140041c82:	fs sub al,0x37
   140041c85:	sub    al,0x25
   140041c87:	fs and eax,0x73
   140041c8d:	add    BYTE PTR [rax],al
   140041c8f:	add    BYTE PTR [rip+0x252c3173],ah        # 0x165304e08
   140041c95:	fs sub al,0x32
   140041c98:	sub    al,0x30
   140041c9a:	sub    al,0x33
   140041c9c:	sub    al,0x25
   140041c9e:	xor    DWORD PTR cs:[rsi+0x2c],esp
   140041ca2:	xor    eax,0x2c64252c
   140041ca7:	ss sub al,0x25
   140041caa:	fs sub al,0x37
   140041cad:	sub    al,0x25
   140041caf:	fs and eax,0x53000073
   140041cb5:	add    BYTE PTR [r8],al
   140041cb8:	push   rbx
   140041cb9:	push   rbx
   140041cba:	add    BYTE PTR [rax],al
   140041cbc:	and    eax,0xa732573
   140041cc1:	add    BYTE PTR [rax],al
   140041cc3:	add    BYTE PTR [rax],al
   140041cc5:	add    BYTE PTR [rax],al
   140041cc7:	add    BYTE PTR [rax+0x57],dl
   140041cca:	and    eax,0x2566332e
   140041ccf:	jae    0x140041cdb
   140041cd1:	add    BYTE PTR [rax],al
   140041cd3:	add    BYTE PTR [rsp+rdx*2+0x0],cl
   140041cd7:	add    BYTE PTR [rsp+rdx*2+0x31],cl
   140041cdb:	add    BYTE PTR [rsp+rdx*2+0x32],cl
   140041cdf:	add    BYTE PTR [rip+0x732573],ah        # 0x140774258
   140041ce5:	add    BYTE PTR [rax],al
   140041ce7:	add    BYTE PTR [rbx+0x50],dl
   140041cea:	xor    DWORD PTR [rip+0x25575073],esp        # 0x1655b6d63
   140041cf0:	xor    esp,DWORD PTR cs:[rsi+0x25]
   140041cf4:	jae    0x140041d00
   140041cf6:	add    BYTE PTR [rax],al
   140041cf8:	push   rbx
   140041cf9:	rex.XB and eax,0x2c66342e
   140041cff:	and    eax,0x2c66342e
   140041d04:	and    eax,0x2c66342e
   140041d09:	and    eax,0x2c66342e
   140041d0e:	xor    ah,BYTE PTR [rip+0xa73]        # 0x140042787
   140041d14:	add    BYTE PTR [rax],al
   140041d16:	add    BYTE PTR [rax],al
   140041d18:	rex.X push rax
   140041d1a:	and    eax,0x254e4973
   140041d1f:	jae    0x140041d21
   140041d21:	add    BYTE PTR [rax],al
   140041d23:	add    BYTE PTR [rax],al
   140041d25:	add    BYTE PTR [rax],al
   140041d27:	add    BYTE PTR [rdx+0x4f],dl
   140041d2a:	cmp    DWORD PTR [rax],esi
   140041d2c:	rex.WB push r8
   140041d2e:	and    eax,0x73
   140041d33:	add    BYTE PTR [rax],al
   140041d35:	add    BYTE PTR [rax],al
   140041d37:	add    BYTE PTR [rax+0x41],dl
   140041d3a:	xor    BYTE PTR [rax+rsi*1],ch
   140041d3d:	and    eax,0x28424c73
   140041d42:	and    eax,0x64252c64
   140041d47:	sub    DWORD PTR [rbx],eax
   140041d49:	and    eax,0xa73
   140041d4e:	add    BYTE PTR [rax],al
   140041d50:	push   rdx
   140041d51:	rex.WRXB
   140041d52:	rex.WB push r8
   140041d54:	and    eax,0x49000073
   140041d59:	push   rdi
   140041d5a:	and    eax,0x64252c64
   140041d5f:	sub    al,0x25
   140041d61:	fs sub al,0x25
   140041d64:	fs and eax,0xa73
   140041d6a:	add    BYTE PTR [rax],al
   140041d6c:	add    BYTE PTR [rax],al
   140041d6e:	add    BYTE PTR [rax],al
   140041d70:	push   rax
   140041d71:	push   rbp
   140041d72:	and    eax,0x30505373
   140041d77:	and    eax,0x3b475073
   140041d7c:	or     al,BYTE PTR [rax]
   140041d7e:	add    BYTE PTR [rax],al
   140041d80:	fs (bad) 
   140041d82:	jae    0x140041dec
   140041d84:	gs add BYTE PTR fs:[rax],al
   140041d88:	outs   dx,DWORD PTR fs:[rsi]
   140041d8a:	je     0x140041e00
   140041d8c:	gs add BYTE PTR fs:[rax],al
   140041d90:	(bad)  
   140041d91:	outs   dx,DWORD PTR ds:[rsi]
   140041d92:	ins    BYTE PTR es:[rdi],dx
   140041d93:	add    BYTE PTR fs:[rax],al
   140041d96:	add    BYTE PTR [rax],al
   140041d98:	jne    0x140041e08
   140041d9a:	imul   bp,WORD PTR [rsp+rbp*2+0x65],0x64
   140041da1:	add    BYTE PTR [rax],al
   140041da3:	add    BYTE PTR [rax],al
   140041da5:	add    BYTE PTR [rax],al
   140041da7:	add    BYTE PTR [rax+0x70],ch
   140041daa:	ins    BYTE PTR es:[edi],dx
   140041dac:	pop    rdi
   140041dad:	jae    0x140041e14
   140041daf:	je     0x140041e10
   140041db1:	jae    0x140041e27
   140041db3:	jns    0x140041e21
   140041db5:	cmp    ah,BYTE PTR gs:[rax]
   140041db8:	jne    0x140041e28
   140041dba:	jae    0x140041e31
   140041dbc:	jo     0x140041e2e
   140041dbe:	outs   dx,DWORD PTR ds:[rsi]
   140041dbf:	jb     0x140041e35
   140041dc1:	gs and BYTE PTR fs:[rbx+0x74],dh
   140041dc6:	jns    0x140041e34
   140041dc8:	and    BYTE PTR gs:[rip+0x202d2073],ah        # 0x160313e42
   140041dcf:	imul   esp,DWORD PTR [rdi+0x6e],0x6e69726f
   140041dd6:	or     al,BYTE PTR [eax]
   140041dd9:	add    BYTE PTR [rax],al
   140041ddb:	add    BYTE PTR [rax],al
   140041ddd:	add    BYTE PTR [rax],al
   140041ddf:	add    BYTE PTR [rax+0x41],dl
   140041de2:	and    eax,0x64252c64
   140041de7:	and    eax,0x73
   140041dec:	sub    al,0x25
   140041dee:	fs sub al,0x25
   140041df1:	add    BYTE PTR fs:[rax],al
   140041df4:	add    BYTE PTR [rax],al
   140041df6:	add    BYTE PTR [rax],al
   140041df8:	push   0x5f6c6770
   140041dfd:	(bad)  
   140041dfe:	gs jp  0x140041e6a
   140041e01:	gs jb  0x140041e24
   140041e04:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
   140041e0c:	(bad)  
   140041e0d:	jb     0x140041e81
   140041e0f:	outs   dx,DWORD PTR ds:[rsi]
   140041e10:	ja     0x140041e32
   140041e12:	(bad)  
   140041e13:	jb     0x140041e7c
   140041e15:	jae    0x140041e21
   140041e17:	add    BYTE PTR [rax+0x41],dl
   140041e1a:	and    eax,0x64252c64
   140041e1f:	and    eax,0x445073
   140041e24:	add    BYTE PTR [rax],al
   140041e26:	add    BYTE PTR [rax],al
   140041e28:	and    eax,0x25555073
   140041e2d:	jae    0x140041e39
   140041e2f:	add    BYTE PTR [rax+0x41],dl
   140041e32:	and    eax,0x64252c64
   140041e37:	and    eax,0x304d5073
   140041e3c:	and    eax,0x445073
   140041e41:	add    BYTE PTR [rax],al
   140041e43:	add    BYTE PTR [rip+0x64252c64],ah        # 0x1a4294aad
   140041e49:	sub    al,0x0
   140041e4b:	add    BYTE PTR [rax],al
   140041e4d:	add    BYTE PTR [rax],al
   140041e4f:	add    BYTE PTR [rip+0x64252c64],ah        # 0x1a4294ab9
   140041e55:	and    eax,0x324d5073
   140041e5a:	and    eax,0x25555073
   140041e5f:	jae    0x140041e61
   140041e61:	add    BYTE PTR [rax],al
   140041e63:	add    BYTE PTR [rax],al
   140041e65:	add    BYTE PTR [rax],al
   140041e67:	add    BYTE PTR [rsi+0x50],al
   140041e6a:	and    eax,0x25544c73
   140041e6f:	jae    0x140041eb6
   140041e71:	push   rax
   140041e72:	and    eax,0x39544c73
   140041e77:	cmp    DWORD PTR [rip+0xa73],esp        # 0x1400428f0
   140041e7d:	add    BYTE PTR [rax],al
   140041e7f:	add    BYTE PTR [rsi+0x50],al
   140041e82:	and    eax,0x31505373
   140041e87:	and    eax,0x25544c73
   140041e8c:	jae    0x140041ed3
   140041e8e:	push   rax
   140041e8f:	and    eax,0x25505373
   140041e94:	fs and eax,0x39544c73
   140041e9a:	cmp    DWORD PTR [rip+0xa73],esp        # 0x140042913
   140041ea0:	rex.RB push r8
   140041ea2:	and    eax,0xa73
   140041ea7:	add    BYTE PTR [rdi+0x47],dl
   140041eaa:	xor    DWORD PTR [rax+rsi*1],ebp
   140041ead:	sub    al,0x33
   140041eaf:	xor    BYTE PTR ss:[rip+0x25544c73],ah        # 0x165586b29
   140041eb6:	jae    0x140041efd
   140041eb8:	push   rdi
   140041eb9:	xor    DWORD PTR [rax+rsi*1],ebp
   140041ebc:	sub    al,0x33
   140041ebe:	xor    BYTE PTR ss:[rip+0x39544c73],ah        # 0x179586b38
   140041ec5:	cmp    DWORD PTR [rip+0x73],esp        # 0x140041f3e
   140041ecb:	add    BYTE PTR [rax],al
   140041ecd:	add    BYTE PTR [rax],al
   140041ecf:	add    BYTE PTR [rdi+0x47],dl
   140041ed2:	xor    DWORD PTR [rax+rsi*1],ebp
   140041ed5:	sub    al,0x33
   140041ed7:	xor    BYTE PTR ss:[rip+0x31505373],ah        # 0x171547251
   140041ede:	and    eax,0x25544c73
   140041ee3:	jae    0x140041f2a
   140041ee5:	push   rdi
   140041ee6:	xor    DWORD PTR [rax+rsi*1],ebp
   140041ee9:	sub    al,0x33
   140041eeb:	xor    BYTE PTR ss:[rip+0x25505373],ah        # 0x165547265
   140041ef2:	fs and eax,0x39544c73
   140041ef8:	cmp    DWORD PTR [rip+0x73],esp        # 0x140041f71
   140041efe:	add    BYTE PTR [rax],al
   140041f00:	rex.RB push r15
   140041f02:	xor    DWORD PTR [rax+rsi*1],ebp
   140041f05:	sub    al,0x33
   140041f07:	xor    BYTE PTR ss:[rip+0x73],ah        # 0x140041f81
   140041f0e:	add    BYTE PTR [rax],al
   140041f10:	and    eax,0x64252c64
   140041f15:	and    eax,0x25555073
   140041f1a:	jae    0x140041f26
   140041f1c:	add    BYTE PTR [rax],al
   140041f1e:	add    BYTE PTR [rax],al
   140041f20:	movsxd esi,DWORD PTR [rbp+0x73]
   140041f23:	je     0x140041f94
   140041f25:	ins    DWORD PTR es:[rdi],dx
   140041f26:	and    BYTE PTR [rbx+0x68],dh
   140041f29:	(bad)  
   140041f2a:	jo     0x140041f91
   140041f2c:	jae    0x140041f4e
   140041f2e:	outs   dx,BYTE PTR ds:[rsi]
   140041f2f:	outs   dx,DWORD PTR ds:[rsi]
   140041f30:	je     0x140041f52
   140041f32:	(bad)  
   140041f33:	jbe    0x140041f96
   140041f35:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7720656c
   140041f3d:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x73696874
   140041f45:	and    BYTE PTR [rdx+rsi*2+0x69],ah
   140041f49:	jbe    0x140041fb0
   140041f4b:	jb     0x140041f57
   140041f4d:	add    BYTE PTR [rax],al
   140041f4f:	add    BYTE PTR [rax+rdi*2+0x7a],ch
   140041f53:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140041f54:	sub    al,0x43
   140041f56:	mov    WORD PTR [rdi],?
   140041f58:	ins    BYTE PTR es:[rdi],dx
   140041f59:	js     0x140041fd5
   140041f5b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140041f5c:	sub    al,0x43
   140041f5e:	pushf  
   140041f5f:	(bad)  
   140041f60:	add    BYTE PTR [rax],al
   140041f62:	add    BYTE PTR [rax],al
   140041f64:	add    BYTE PTR [rax],al
   140041f66:	sar    BYTE PTR [rdi],0x33
   140041f69:	xor    esi,DWORD PTR [rbx]
   140041f6b:	xor    esi,DWORD PTR [rbx]
   140041f6d:	xor    edx,ebx
   140041f6f:	(bad)  
   140041f70:	rex.RX mov sil,0xf3
   140041f73:	std    
   140041f74:	(bad)  
   140041f75:	cmp    BYTE PTR [rax+rax*2],ch
   140041f78:	add    BYTE PTR [rax],al
   140041f7a:	add    BYTE PTR [rax],al
   140041f7c:	add    BYTE PTR [rax],al
   140041f7e:	xor    al,BYTE PTR [rax+0x3c]
   140041f81:	imul   r13d,DWORD PTR [rsp+r13*2+0x20],0x3e33
   140041f8a:	add    BYTE PTR [rax],al
   140041f8c:	add    BYTE PTR [rax],al
   140041f8e:	add    BYTE PTR [rax],al
   140041f90:	cmp    al,0x46
   140041f92:	imul   ebp,DWORD PTR [rsp+rbp*2+0x20],0x3e3531
   140041f9a:	add    BYTE PTR [rax],al
   140041f9c:	push   rsp
   140041f9d:	imul   ebp,DWORD PTR [rbp+0x65],0x73
   140041fa4:	add    BYTE PTR [rax],al
   140041fa6:	add    BYTE PTR [rax],al
   140041fa8:	and    BYTE PTR [rsi+rcx*2],bh
   140041fab:	jne    0x14004201a
   140041fad:	push   rax
   140041fae:	outs   dx,DWORD PTR ds:[rsi]
   140041faf:	imul   ebp,DWORD PTR [rsi+0x74],0x64252073
   140041fb6:	or     al,BYTE PTR ds:[rax]
   140041fb9:	add    BYTE PTR [rax],al
   140041fbb:	add    BYTE PTR [rax],al
   140041fbd:	add    BYTE PTR [rax],al
   140041fbf:	add    BYTE PTR [rax],ah
   140041fc1:	cmp    al,0x50
   140041fc3:	outs   dx,DWORD PTR ds:[rsi]
   140041fc4:	imul   ebp,DWORD PTR [rsi+0x74],0x322e2520
   140041fcb:	data16 and BYTE PTR [rip+0x3e66322e],ah        # 0x17e6a5200
   140041fd2:	or     al,BYTE PTR [rax]
   140041fd4:	add    BYTE PTR [rax],al
   140041fd6:	add    BYTE PTR [rax],al
   140041fd8:	push   rdx
   140041fd9:	gs addr32 jne 0x140042049
   140041fdd:	(bad)  
   140041fde:	jb     0x140041fe0
   140041fe0:	rex.X outs dx,DWORD PTR ds:[rsi]
   140041fe2:	ins    BYTE PTR es:[rdi],dx
   140041fe3:	add    BYTE PTR fs:[rax],al
   140041fe6:	add    BYTE PTR [rax],al
   140041fe8:	rex.WB je 0x14004204c
   140041feb:	ins    BYTE PTR es:[rdi],dx
   140041fec:	imul   esp,DWORD PTR [rbx+0x0],0x6f463c00
   140041ff3:	outs   dx,BYTE PTR ds:[rsi]
   140041ff4:	je     0x140042016
   140041ff6:	cmp    al,0x46
   140041ff8:	rex.RX (bad) 
   140041ffa:	ins    DWORD PTR es:[rdi],dx
   140041ffb:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x27732560
   140042003:	and    BYTE PTR ds:[rsi+rax*2],bh
   140042007:	push   rbx
   140042008:	imul   edi,DWORD PTR [rdx+0x65],0x312e2520
   14004200f:	data16 and BYTE PTR [rax+0x74],dh
   140042013:	and    BYTE PTR ds:[rsi+rax*2],bh
   140042017:	push   rdi
   140042018:	imul   esp,DWORD PTR gs:[rdi+0x68],0x73252074
   140042020:	and    BYTE PTR ds:[rsi+rax*2],bh
   140042024:	rex.B outs dx,BYTE PTR ds:[rsi]
   140042026:	ins    BYTE PTR es:[edi],dx
   140042028:	and    BYTE PTR gs:[rip+0xa3e3e73],ah        # 0x14a425ea2
   14004202f:	add    BYTE PTR [rbx+rdx*2],bh
   140042032:	gs jo  0x140042096
   140042035:	jb     0x140042098
   140042037:	je     0x1400420a2
   140042039:	outs   dx,DWORD PTR ds:[rsi]
   14004203a:	outs   dx,BYTE PTR ds:[rsi]
   14004203b:	and    BYTE PTR [rip+0xa3e64],ah        # 0x1400e5ea5
   140042041:	add    BYTE PTR [rax],al
   140042043:	add    BYTE PTR [rax],al
   140042045:	add    BYTE PTR [rax],al
   140042047:	add    BYTE PTR [rdi+rcx*2],bh
   14004204a:	(bad)
   14004204f:	jb     0x140042071
   140042051:	(bad)  
   140042052:	and    eax,0xa3e2773
   140042057:	add    BYTE PTR [rax+rdx*2],bh
   14004205a:	outs   dx,BYTE PTR gs:[rsi]
   14004205c:	and    BYTE PTR [rip+0x3c203e64],ah        # 0x17c245ec6
   140042062:	imul   r13d,DWORD PTR [rsp+r13*2+0x20],0x203e6425
   14004206b:	cmp    al,0x50
   14004206d:	outs   dx,BYTE PTR gs:[rsi]
   14004206f:	push   rdi
   140042070:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x3e642520
   140042078:	or     al,BYTE PTR [rax]
   14004207a:	add    BYTE PTR [rax],al
   14004207c:	and    esp,DWORD PTR [rax]
   14004207e:	and    eax,0xa73
   140042083:	add    BYTE PTR [rax],al
   140042085:	add    BYTE PTR [rax],al
   140042087:	add    BYTE PTR [rcx*2+0x69464649],bh
   14004208e:	ins    BYTE PTR es:[rdi],dx
   14004208f:	and    BYTE PTR gs:[rbx],dh
   140042092:	xor    BYTE PTR cs:[rax],dh
   140042095:	and    BYTE PTR ds:[rbx],ah
   140042098:	and    BYTE PTR [rdi+0x65],al
   14004209b:	outs   dx,BYTE PTR ds:[rsi]
   14004209c:	gs jb  0x140042100
   14004209f:	je     0x140042106
   1400420a1:	and    BYTE PTR fs:[rdx+0x79],ah
   1400420a5:	and    BYTE PTR [rip+0x65762073],ah        # 0x1a57a411e
   1400420ab:	jb     0x140042120
   1400420ad:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
   1400420b4:	sub    BYTE PTR [rip+0xa2973],ah        # 0x1400e4a2d
   1400420ba:	add    BYTE PTR [rax],al
   1400420bc:	add    BYTE PTR [rax],al
   1400420be:	add    BYTE PTR [rax],al
   1400420c0:	and    esp,DWORD PTR [rax]
   1400420c2:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1400420c4:	jb     0x140042100
   1400420c6:	and    BYTE PTR [rip+0xa73],ah        # 0x140042b3f
   1400420cc:	add    BYTE PTR [rax],al
   1400420ce:	add    BYTE PTR [rax],al
   1400420d0:	and    esp,DWORD PTR [rax]
   1400420d2:	push   rsp
   1400420d3:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x7325203a
   1400420db:	or     al,BYTE PTR [rax]
   1400420dd:	add    BYTE PTR [rax],al
   1400420df:	add    BYTE PTR [rbx],ah
   1400420e1:	and    BYTE PTR [rax+0x61],dl
   1400420e4:	addr32 gs jae 0x140042122
   1400420e8:	and    BYTE PTR [rip+0xa64],ah        # 0x140042b52
   1400420ee:	add    BYTE PTR [rax],al
   1400420f0:	cmp    al,0x55
   1400420f2:	outs   dx,BYTE PTR ds:[rsi]
   1400420f3:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x3e747055
   1400420fb:	or     al,BYTE PTR [rax]
   1400420fd:	add    BYTE PTR [rax],al
   1400420ff:	add    BYTE PTR [rbx+rax*2],bh
   140042102:	outs   dx,DWORD PTR ds:[rsi]
   140042103:	ins    BYTE PTR es:[rdi],dx
   140042104:	outs   dx,DWORD PTR ds:[rsi]
   140042105:	jb     0x14004214a
   140042107:	(bad)  
   140042108:	je     0x14004216b
   14004210a:	ins    BYTE PTR es:[rdi],dx
   14004210b:	outs   dx,DWORD PTR ds:[rsi]
   14004210c:	and    BYTE PTR [edx],cl
   14004210f:	add    BYTE PTR [rax],ah
   140042111:	cmp    al,0x43
   140042113:	outs   dx,DWORD PTR ds:[rsi]
   140042114:	ins    BYTE PTR es:[rdi],dx
   140042115:	outs   dx,DWORD PTR ds:[rsi]
   140042116:	jb     0x140042138
   140042118:	or     al,BYTE PTR [rax]
   14004211a:	add    BYTE PTR [rax],al
   14004211c:	add    BYTE PTR [rax],al
   14004211e:	add    BYTE PTR [rax],al
   140042120:	and    BYTE PTR [rax],ah
   140042122:	cmp    al,0x43
   140042124:	outs   dx,DWORD PTR ds:[rsi]
   140042125:	ins    BYTE PTR es:[rdi],dx
   140042126:	outs   dx,DWORD PTR ds:[rsi]
   140042127:	jb     0x14004217d
   140042129:	(bad)  
   14004212a:	and    BYTE PTR [eax+0x42],ah
   14004212e:	ins    BYTE PTR es:[rdi],dx
   14004212f:	(bad)  
   140042130:	movsxd ebp,DWORD PTR [rbx+0x27]
   140042133:	or     al,BYTE PTR ds:[rax]
   140042136:	add    BYTE PTR [rax],al
   140042138:	and    BYTE PTR [rax],ah
   14004213a:	cmp    al,0x43
   14004213c:	outs   dx,DWORD PTR ds:[rsi]
   14004213d:	ins    BYTE PTR es:[rdi],dx
   14004213e:	outs   dx,DWORD PTR ds:[rsi]
   14004213f:	jb     0x140042184
   140042141:	jns    0x1400421a4
   140042143:	outs   dx,BYTE PTR ds:[rsi]
   140042144:	and    BYTE PTR [rax],ah
   140042146:	xor    BYTE PTR [rsi],ch
   140042148:	xor    BYTE PTR [rax],dh
   14004214a:	xor    BYTE PTR [rax],dh
   14004214c:	xor    BYTE PTR [rax],dh
   14004214e:	or     al,BYTE PTR ds:[rax]
   140042151:	add    BYTE PTR [rax],al
   140042153:	add    BYTE PTR [rax],al
   140042155:	add    BYTE PTR [rax],al
   140042157:	add    BYTE PTR [rax],ah
   140042159:	and    BYTE PTR [rbx+rax*2],bh
   14004215c:	outs   dx,DWORD PTR ds:[rsi]
   14004215d:	ins    BYTE PTR es:[rdi],dx
   14004215e:	outs   dx,DWORD PTR ds:[rsi]
   14004215f:	jb     0x1400421ae
   140042161:	(bad)  
   140042162:	outs   dx,BYTE PTR gs:[esi]
   140042165:	je     0x1400421c8
   140042167:	and    BYTE PTR [rax],ah
   140042169:	xor    BYTE PTR [rsi],ch
   14004216b:	xor    BYTE PTR [rax],dh
   14004216d:	xor    BYTE PTR [rax],dh
   14004216f:	xor    BYTE PTR [rax],dh
   140042171:	or     al,BYTE PTR ds:[rax]
   140042174:	add    BYTE PTR [rax],al
   140042176:	add    BYTE PTR [rax],al
   140042178:	and    BYTE PTR [rax],ah
   14004217a:	cmp    al,0x43
   14004217c:	outs   dx,DWORD PTR ds:[rsi]
   14004217d:	ins    BYTE PTR es:[rdi],dx
   14004217e:	outs   dx,DWORD PTR ds:[rsi]
   14004217f:	jb     0x1400421da
   140042181:	gs ins BYTE PTR es:[rdi],dx
   140042183:	ins    BYTE PTR es:[rdi],dx
   140042184:	outs   dx,DWORD PTR ds:[rsi]
   140042185:	ja     0x1400421a7
   140042187:	and    BYTE PTR [rax],dh
   140042189:	xor    BYTE PTR cs:[rax],dh
   14004218c:	xor    BYTE PTR [rax],dh
   14004218e:	xor    BYTE PTR [rax],dh
   140042190:	or     al,BYTE PTR ds:[rax]
   140042193:	add    BYTE PTR [rax],al
   140042195:	add    BYTE PTR [rax],al
   140042197:	add    BYTE PTR [rax],ah
   140042199:	and    BYTE PTR [rbx+rax*2],bh
   14004219c:	outs   dx,DWORD PTR ds:[rsi]
   14004219d:	ins    BYTE PTR es:[rdi],dx
   14004219e:	outs   dx,DWORD PTR ds:[rsi]
   14004219f:	jb     0x1400421e3
   1400421a1:	ins    BYTE PTR es:[rdi],dx
   1400421a2:	(bad)  
   1400421a3:	movsxd ebp,DWORD PTR [rbx+0x20]
   1400421a6:	and    BYTE PTR [rcx],dh
   1400421a8:	xor    BYTE PTR [rax],dh
   1400421aa:	xor    BYTE PTR cs:[rax],dh
   1400421ad:	xor    BYTE PTR [rax],dh
   1400421af:	xor    BYTE PTR [rax],dh
   1400421b1:	or     al,BYTE PTR ds:[rax]
   1400421b4:	add    BYTE PTR [rax],al
   1400421b6:	add    BYTE PTR [rax],al
   1400421b8:	and    BYTE PTR [rax],ah
   1400421ba:	cmp    al,0x43
   1400421bc:	outs   dx,DWORD PTR ds:[rsi]
   1400421bd:	ins    BYTE PTR es:[rdi],dx
   1400421be:	outs   dx,DWORD PTR ds:[rsi]
   1400421bf:	jb     0x140042202
   1400421c1:	je     0x140042237
   1400421c3:	jb     0x14004222e
   1400421c5:	(bad)  
   1400421c6:	jne    0x14004223c
   1400421c8:	and    BYTE PTR gs:[rbx+0x6f],al
   1400421cc:	ins    BYTE PTR es:[rdi],dx
   1400421cd:	outs   dx,DWORD PTR ds:[rsi]
   1400421ce:	jb     0x140042219
   1400421d0:	jae    0x140042214
   1400421d2:	ins    BYTE PTR es:[rdi],dx
   1400421d3:	(bad)  
   1400421d4:	movsxd ebp,DWORD PTR [rbx+0x3e]
   1400421d7:	or     al,BYTE PTR [rax]
   1400421d9:	add    BYTE PTR [rax],al
   1400421db:	add    BYTE PTR [rax],al
   1400421dd:	add    BYTE PTR [rax],al
   1400421df:	add    BYTE PTR [rax],ah
   1400421e1:	and    BYTE PTR [rbx+rax*2],bh
   1400421e4:	outs   dx,DWORD PTR ds:[rsi]
   1400421e5:	ins    BYTE PTR es:[rdi],dx
   1400421e6:	outs   dx,DWORD PTR ds:[rsi]
   1400421e7:	jb     0x14004222a
   1400421e9:	je     0x14004225f
   1400421eb:	jb     0x140042256
   1400421ed:	(bad)  
   1400421ee:	jne    0x140042264
   1400421f0:	and    BYTE PTR gs:[rbx+0x6f],al
   1400421f4:	ins    BYTE PTR es:[rdi],dx
   1400421f5:	outs   dx,DWORD PTR ds:[rsi]
   1400421f6:	jb     0x140042241
   1400421f8:	jae    0x14004224c
   1400421fa:	gs jae 0x140042262
   1400421fd:	jb     0x140042275
   1400421ff:	gs fs or al,BYTE PTR ds:[rax]
   140042204:	add    BYTE PTR [rax],al
   140042206:	add    BYTE PTR [rax],al
   140042208:	and    BYTE PTR [rsi],bh
   14004220a:	and    BYTE PTR [rbx],ah
   14004220c:	and    BYTE PTR [rbp+0x6e],ah
   14004220f:	and    BYTE PTR fs:[rdi+0x66],ch
   140042213:	and    BYTE PTR [rbx+0x6f],al
   140042216:	ins    BYTE PTR es:[rdi],dx
   140042217:	outs   dx,DWORD PTR ds:[rsi]
   140042218:	jb     0x140042224
   14004221a:	add    BYTE PTR [rax],al
   14004221c:	add    BYTE PTR [rax],al
   14004221e:	add    BYTE PTR [rax],al
   140042220:	and    BYTE PTR [rax],ah
   140042222:	cmp    al,0x43
   140042224:	outs   dx,DWORD PTR ds:[rsi]
   140042225:	ins    BYTE PTR es:[rdi],dx
   140042226:	outs   dx,DWORD PTR ds:[rsi]
   140042227:	jb     0x14004227d
   140042229:	(bad)  
   14004222a:	and    BYTE PTR [eax+0x57],ah
   14004222e:	push   0x27657469
   140042233:	or     al,BYTE PTR ds:[rax]
   140042236:	add    BYTE PTR [rax],al
   140042238:	and    BYTE PTR [rax],ah
   14004223a:	cmp    al,0x43
   14004223c:	outs   dx,DWORD PTR ds:[rsi]
   14004223d:	ins    BYTE PTR es:[rdi],dx
   14004223e:	outs   dx,DWORD PTR ds:[rsi]
   14004223f:	jb     0x140042283
   140042241:	ins    BYTE PTR es:[rdi],dx
   140042242:	(bad)  
   140042243:	movsxd ebp,DWORD PTR [rbx+0x20]
   140042246:	and    BYTE PTR [rax],dh
   140042248:	xor    BYTE PTR cs:[rax],dh
   14004224b:	xor    BYTE PTR [rax],dh
   14004224d:	xor    BYTE PTR [rax],dh
   14004224f:	or     al,BYTE PTR ds:[rax]
   140042252:	add    BYTE PTR [rax],al
   140042254:	add    BYTE PTR [rax],al
   140042256:	add    BYTE PTR [rax],al
   140042258:	and    BYTE PTR [rax],ah
   14004225a:	cmp    al,0x43
   14004225c:	outs   dx,DWORD PTR ds:[rsi]
   14004225d:	ins    BYTE PTR es:[rdi],dx
   14004225e:	outs   dx,DWORD PTR ds:[rsi]
   14004225f:	jb     0x1400422a2
   140042261:	je     0x1400422d7
   140042263:	jb     0x1400422ce
   140042265:	(bad)  
   140042266:	jne    0x1400422dc
   140042268:	and    BYTE PTR gs:[rbx+0x6f],al
   14004226c:	ins    BYTE PTR es:[rdi],dx
   14004226d:	outs   dx,DWORD PTR ds:[rsi]
   14004226e:	jb     0x1400422b9
   140042270:	jae    0x1400422c9
   140042272:	push   0x3e657469
   140042277:	or     al,BYTE PTR [rax]
   140042279:	add    BYTE PTR [rax],al
   14004227b:	add    BYTE PTR [rax],al
   14004227d:	add    BYTE PTR [rax],al
   14004227f:	add    BYTE PTR [rax],ah
   140042281:	and    BYTE PTR [rbx+rax*2],bh
   140042284:	outs   dx,DWORD PTR ds:[rsi]
   140042285:	ins    BYTE PTR es:[rdi],dx
   140042286:	outs   dx,DWORD PTR ds:[rsi]
   140042287:	jb     0x1400422dd
   140042289:	(bad)  
   14004228a:	and    BYTE PTR [eax+0x52],ah
   14004228e:	gs fs (bad) 
   140042291:	or     al,BYTE PTR ds:[rax]
   140042294:	add    BYTE PTR [rax],al
   140042296:	add    BYTE PTR [rax],al
   140042298:	and    BYTE PTR [rax],ah
   14004229a:	cmp    al,0x43
   14004229c:	outs   dx,DWORD PTR ds:[rsi]
   14004229d:	ins    BYTE PTR es:[rdi],dx
   14004229e:	outs   dx,DWORD PTR ds:[rsi]
   14004229f:	jb     0x1400422ee
   1400422a1:	(bad)  
   1400422a2:	outs   dx,BYTE PTR gs:[esi]
   1400422a5:	je     0x140042308
   1400422a7:	and    BYTE PTR [rax],ah
   1400422a9:	xor    DWORD PTR [rax],esi
   1400422ab:	xor    BYTE PTR [rsi],ch
   1400422ad:	xor    BYTE PTR [rax],dh
   1400422af:	xor    BYTE PTR [rax],dh
   1400422b1:	xor    BYTE PTR [rax],dh
   1400422b3:	or     al,BYTE PTR ds:[rax]
   1400422b6:	add    BYTE PTR [rax],al
   1400422b8:	and    BYTE PTR [rax],ah
   1400422ba:	cmp    al,0x43
   1400422bc:	outs   dx,DWORD PTR ds:[rsi]
   1400422bd:	ins    BYTE PTR es:[rdi],dx
   1400422be:	outs   dx,DWORD PTR ds:[rsi]
   1400422bf:	jb     0x14004231a
   1400422c1:	gs ins BYTE PTR es:[rdi],dx
   1400422c3:	ins    BYTE PTR es:[rdi],dx
   1400422c4:	outs   dx,DWORD PTR ds:[rsi]
   1400422c5:	ja     0x1400422e7
   1400422c7:	and    BYTE PTR [rcx],dh
   1400422c9:	xor    BYTE PTR [rax],dh
   1400422cb:	xor    BYTE PTR cs:[rax],dh
   1400422ce:	xor    BYTE PTR [rax],dh
   1400422d0:	xor    BYTE PTR [rax],dh
   1400422d2:	or     al,BYTE PTR ds:[rax]
   1400422d5:	add    BYTE PTR [rax],al
   1400422d7:	add    BYTE PTR [rax],ah
   1400422d9:	and    BYTE PTR [rbx+rax*2],bh
   1400422dc:	outs   dx,DWORD PTR ds:[rsi]
   1400422dd:	ins    BYTE PTR es:[rdi],dx
   1400422de:	outs   dx,DWORD PTR ds:[rsi]
   1400422df:	jb     0x140042322
   1400422e1:	je     0x140042357
   1400422e3:	jb     0x14004234e
   1400422e5:	(bad)  
   1400422e6:	jne    0x14004235c
   1400422e8:	and    BYTE PTR gs:[rbx+0x6f],al
   1400422ec:	ins    BYTE PTR es:[rdi],dx
   1400422ed:	outs   dx,DWORD PTR ds:[rsi]
   1400422ee:	jb     0x140042339
   1400422f0:	jae    0x140042344
   1400422f2:	gs fs or al,BYTE PTR ds:[rax]
   1400422f7:	add    BYTE PTR [rax],ah
   1400422f9:	and    BYTE PTR [rbx+rax*2],bh
   1400422fc:	outs   dx,DWORD PTR ds:[rsi]
   1400422fd:	ins    BYTE PTR es:[rdi],dx
   1400422fe:	outs   dx,DWORD PTR ds:[rsi]
   1400422ff:	jb     0x140042355
   140042301:	(bad)  
   140042302:	and    BYTE PTR [eax+0x47],ah
   140042306:	jb     0x14004236d
   140042308:	outs   dx,BYTE PTR gs:[rsi]
   14004230a:	(bad)  
   14004230b:	or     al,BYTE PTR ds:[rax]
   14004230e:	add    BYTE PTR [rax],al
   140042310:	and    BYTE PTR [rax],ah
   140042312:	cmp    al,0x43
   140042314:	outs   dx,DWORD PTR ds:[rsi]
   140042315:	ins    BYTE PTR es:[rdi],dx
   140042316:	outs   dx,DWORD PTR ds:[rsi]
   140042317:	jb     0x14004235c
   140042319:	jns    0x14004237c
   14004231b:	outs   dx,BYTE PTR ds:[rsi]
   14004231c:	and    BYTE PTR [rax],ah
   14004231e:	xor    DWORD PTR [rax],esi
   140042320:	xor    BYTE PTR [rsi],ch
   140042322:	xor    BYTE PTR [rax],dh
   140042324:	xor    BYTE PTR [rax],dh
   140042326:	xor    BYTE PTR [rax],dh
   140042328:	or     al,BYTE PTR ds:[rax]
   14004232b:	add    BYTE PTR [rax],al
   14004232d:	add    BYTE PTR [rax],al
   14004232f:	add    BYTE PTR [rax],ah
   140042331:	and    BYTE PTR [rbx+rax*2],bh
   140042334:	outs   dx,DWORD PTR ds:[rsi]
   140042335:	ins    BYTE PTR es:[rdi],dx
   140042336:	outs   dx,DWORD PTR ds:[rsi]
   140042337:	jb     0x14004237a
   140042339:	je     0x1400423af
   14004233b:	jb     0x1400423a6
   14004233d:	(bad)  
   14004233e:	jne    0x1400423b4
   140042340:	and    BYTE PTR gs:[rbx+0x6f],al
   140042344:	ins    BYTE PTR es:[rdi],dx
   140042345:	outs   dx,DWORD PTR ds:[rsi]
   140042346:	jb     0x140042391
   140042348:	jae    0x140042391
   14004234a:	jb     0x1400423b1
   14004234c:	outs   dx,BYTE PTR gs:[rsi]
   14004234e:	or     al,BYTE PTR ds:[rax]
   140042351:	add    BYTE PTR [rax],al
   140042353:	add    BYTE PTR [rax],al
   140042355:	add    BYTE PTR [rax],al
   140042357:	add    BYTE PTR [rax],ah
   140042359:	and    BYTE PTR [rbx+rax*2],bh
   14004235c:	outs   dx,DWORD PTR ds:[rsi]
   14004235d:	ins    BYTE PTR es:[rdi],dx
   14004235e:	outs   dx,DWORD PTR ds:[rsi]
   14004235f:	jb     0x1400423b5
   140042361:	(bad)  
   140042362:	and    BYTE PTR [eax+0x42],ah
   140042366:	ins    BYTE PTR es:[rdi],dx
   140042367:	jne    0x1400423ce
   140042369:	(bad)  
   14004236a:	or     al,BYTE PTR ds:[rax]
   14004236d:	add    BYTE PTR [rax],al
   14004236f:	add    BYTE PTR [rax],ah
   140042371:	and    BYTE PTR [rbx+rax*2],bh
   140042374:	outs   dx,DWORD PTR ds:[rsi]
   140042375:	ins    BYTE PTR es:[rdi],dx
   140042376:	outs   dx,DWORD PTR ds:[rsi]
   140042377:	jb     0x1400423ba
   140042379:	je     0x1400423ef
   14004237b:	jb     0x1400423e6
   14004237d:	(bad)  
   14004237e:	jne    0x1400423f4
   140042380:	and    BYTE PTR gs:[rbx+0x6f],al
   140042384:	ins    BYTE PTR es:[rdi],dx
   140042385:	outs   dx,DWORD PTR ds:[rsi]
   140042386:	jb     0x1400423d1
   140042388:	jae    0x1400423cc
   14004238a:	ins    BYTE PTR es:[rdi],dx
   14004238b:	jne    0x1400423f2
   14004238d:	or     al,BYTE PTR ds:[rax]
   140042390:	and    BYTE PTR [rax],ah
   140042392:	cmp    al,0x43
   140042394:	outs   dx,DWORD PTR ds:[rsi]
   140042395:	ins    BYTE PTR es:[rdi],dx
   140042396:	outs   dx,DWORD PTR ds:[rsi]
   140042397:	jb     0x1400423ed
   140042399:	(bad)  
   14004239a:	and    BYTE PTR [eax+0x43],ah
   14004239e:	jns    0x140042401
   1400423a0:	outs   dx,BYTE PTR ds:[rsi]
   1400423a1:	(bad)  
   1400423a2:	or     al,BYTE PTR ds:[rax]
   1400423a5:	add    BYTE PTR [rax],al
   1400423a7:	add    BYTE PTR [rax],ah
   1400423a9:	and    BYTE PTR [rbx+rax*2],bh
   1400423ac:	outs   dx,DWORD PTR ds:[rsi]
   1400423ad:	ins    BYTE PTR es:[rdi],dx
   1400423ae:	outs   dx,DWORD PTR ds:[rsi]
   1400423af:	jb     0x1400423f2
   1400423b1:	je     0x140042427
   1400423b3:	jb     0x14004241e
   1400423b5:	(bad)  
   1400423b6:	jne    0x14004242c
   1400423b8:	and    BYTE PTR gs:[rbx+0x6f],al
   1400423bc:	ins    BYTE PTR es:[rdi],dx
   1400423bd:	outs   dx,DWORD PTR ds:[rsi]
   1400423be:	jb     0x140042409
   1400423c0:	jae    0x140042405
   1400423c2:	jns    0x140042425
   1400423c4:	outs   dx,BYTE PTR ds:[rsi]
   1400423c5:	or     al,BYTE PTR ds:[rax]
   1400423c8:	and    BYTE PTR [rax],ah
   1400423ca:	cmp    al,0x43
   1400423cc:	outs   dx,DWORD PTR ds:[rsi]
   1400423cd:	ins    BYTE PTR es:[rdi],dx
   1400423ce:	outs   dx,DWORD PTR ds:[rsi]
   1400423cf:	jb     0x140042425
   1400423d1:	(bad)  
   1400423d2:	and    BYTE PTR [eax+0x4d],ah
   1400423d6:	(bad)  
   1400423d7:	outs   dx,BYTE PTR gs:[esi]
   1400423da:	je     0x14004243d
   1400423dc:	(bad)  
   1400423dd:	or     al,BYTE PTR ds:[rax]
   1400423e0:	and    BYTE PTR [rax],ah
   1400423e2:	cmp    al,0x43
   1400423e4:	outs   dx,DWORD PTR ds:[rsi]
   1400423e5:	ins    BYTE PTR es:[rdi],dx
   1400423e6:	outs   dx,DWORD PTR ds:[rsi]
   1400423e7:	jb     0x14004242a
   1400423e9:	je     0x14004245f
   1400423eb:	jb     0x140042456
   1400423ed:	(bad)  
   1400423ee:	jne    0x140042464
   1400423f0:	and    BYTE PTR gs:[rbx+0x6f],al
   1400423f4:	ins    BYTE PTR es:[rdi],dx
   1400423f5:	outs   dx,DWORD PTR ds:[rsi]
   1400423f6:	jb     0x140042441
   1400423f8:	jae    0x140042447
   1400423fa:	(bad)  
   1400423fb:	outs   dx,BYTE PTR gs:[esi]
   1400423fe:	je     0x140042461
   140042400:	or     al,BYTE PTR ds:[rax]
   140042403:	add    BYTE PTR [rax],al
   140042405:	add    BYTE PTR [rax],al
   140042407:	add    BYTE PTR [rax],ah
   140042409:	and    BYTE PTR [rbx+rax*2],bh
   14004240c:	outs   dx,DWORD PTR ds:[rsi]
   14004240d:	ins    BYTE PTR es:[rdi],dx
   14004240e:	outs   dx,DWORD PTR ds:[rsi]
   14004240f:	jb     0x140042465
   140042411:	(bad)  
   140042412:	and    BYTE PTR [eax+0x59],ah
   140042416:	gs ins BYTE PTR es:[rdi],dx
   140042418:	ins    BYTE PTR es:[rdi],dx
   140042419:	outs   dx,DWORD PTR ds:[rsi]
   14004241a:	ja     0x140042443
   14004241c:	or     al,BYTE PTR ds:[rax]
   14004241f:	add    BYTE PTR [rax],ah
   140042421:	and    BYTE PTR [rbx+rax*2],bh
   140042424:	outs   dx,DWORD PTR ds:[rsi]
   140042425:	ins    BYTE PTR es:[rdi],dx
   140042426:	outs   dx,DWORD PTR ds:[rsi]
   140042427:	jb     0x14004246a
   140042429:	je     0x14004249f
   14004242b:	jb     0x140042496
   14004242d:	(bad)  
   14004242e:	jne    0x1400424a4
   140042430:	and    BYTE PTR gs:[rbx+0x6f],al
   140042434:	ins    BYTE PTR es:[rdi],dx
   140042435:	outs   dx,DWORD PTR ds:[rsi]
   140042436:	jb     0x140042481
   140042438:	jae    0x140042493
   14004243a:	gs ins BYTE PTR es:[rdi],dx
   14004243c:	ins    BYTE PTR es:[rdi],dx
   14004243d:	outs   dx,DWORD PTR ds:[rsi]
   14004243e:	ja     0x14004247e
   140042440:	or     al,BYTE PTR [rax]
   140042442:	add    BYTE PTR [rax],al
   140042444:	add    BYTE PTR [rax],al
   140042446:	add    BYTE PTR [rax],al
   140042448:	and    BYTE PTR [rax],ah
   14004244a:	cmp    al,0x43
   14004244c:	outs   dx,DWORD PTR ds:[rsi]
   14004244d:	ins    BYTE PTR es:[rdi],dx
   14004244e:	outs   dx,DWORD PTR ds:[rsi]
   14004244f:	jb     0x1400424a5
   140042451:	(bad)  
   140042452:	and    BYTE PTR [eax+0x61],ah
   140042456:	jno    0x1400424cd
   140042458:	(bad)  
   140042459:	ins    DWORD PTR es:[rdi],dx
   14004245a:	(bad)  
   14004245b:	jb     0x1400424c6
   14004245d:	outs   dx,BYTE PTR ds:[rsi]
   14004245e:	gs (bad) 
   140042460:	or     al,BYTE PTR ds:[rax]
   140042463:	add    BYTE PTR [rax],al
   140042465:	add    BYTE PTR [rax],al
   140042467:	add    BYTE PTR [rax],ah
   140042469:	and    BYTE PTR [rbx+rax*2],bh
   14004246c:	outs   dx,DWORD PTR ds:[rsi]
   14004246d:	ins    BYTE PTR es:[rdi],dx
   14004246e:	outs   dx,DWORD PTR ds:[rsi]
   14004246f:	jb     0x1400424ca
   140042471:	gs ins BYTE PTR es:[rdi],dx
   140042473:	ins    BYTE PTR es:[rdi],dx
   140042474:	outs   dx,DWORD PTR ds:[rsi]
   140042475:	ja     0x140042497
   140042477:	and    BYTE PTR [rcx],dh
   140042479:	cmp    BYTE PTR [rsi],ch
   14004247b:	xor    BYTE PTR [rax],dh
   14004247d:	xor    BYTE PTR [rax],dh
   14004247f:	xor    BYTE PTR [rax],dh
   140042481:	or     al,BYTE PTR ds:[rax]
   140042484:	add    BYTE PTR [rax],al
   140042486:	add    BYTE PTR [rax],al
   140042488:	and    BYTE PTR [rax],ah
   14004248a:	cmp    al,0x43
   14004248c:	outs   dx,DWORD PTR ds:[rsi]
   14004248d:	ins    BYTE PTR es:[rdi],dx
   14004248e:	outs   dx,DWORD PTR ds:[rsi]
   14004248f:	jb     0x1400424e5
   140042491:	(bad)  
   140042492:	and    BYTE PTR [eax+0x70],ah
   140042496:	ins    BYTE PTR es:[rdi],dx
   140042497:	jne    0x140042506
   140042499:	(bad)  
   14004249a:	or     al,BYTE PTR ds:[rax]
   14004249d:	add    BYTE PTR [rax],al
   14004249f:	add    BYTE PTR [rax],ah
   1400424a1:	and    BYTE PTR [rbx+rax*2],bh
   1400424a4:	outs   dx,DWORD PTR ds:[rsi]
   1400424a5:	ins    BYTE PTR es:[rdi],dx
   1400424a6:	outs   dx,DWORD PTR ds:[rsi]
   1400424a7:	jb     0x1400424eb
   1400424a9:	ins    BYTE PTR es:[rdi],dx
   1400424aa:	(bad)  
   1400424ab:	movsxd ebp,DWORD PTR [rbx+0x20]
   1400424ae:	and    BYTE PTR [rbx],dh
   1400424b0:	xor    ebp,DWORD PTR [rsi]
   1400424b2:	xor    BYTE PTR [rax],dh
   1400424b4:	xor    BYTE PTR [rax],dh
   1400424b6:	xor    BYTE PTR [rax],dh
   1400424b8:	or     al,BYTE PTR ds:[rax]
   1400424bb:	add    BYTE PTR [rax],al
   1400424bd:	add    BYTE PTR [rax],al
   1400424bf:	add    BYTE PTR [rax],ah
   1400424c1:	and    BYTE PTR [rbx+rax*2],bh
   1400424c4:	outs   dx,DWORD PTR ds:[rsi]
   1400424c5:	ins    BYTE PTR es:[rdi],dx
   1400424c6:	outs   dx,DWORD PTR ds:[rsi]
   1400424c7:	jb     0x14004251d
   1400424c9:	(bad)  
   1400424ca:	and    BYTE PTR [eax+0x70],ah
   1400424ce:	gs jb  0x140042546
   1400424d1:	(bad)  
   1400424d2:	or     al,BYTE PTR ds:[rax]
   1400424d5:	add    BYTE PTR [rax],al
   1400424d7:	add    BYTE PTR [rax],ah
   1400424d9:	and    BYTE PTR [rbx+rax*2],bh
   1400424dc:	outs   dx,DWORD PTR ds:[rsi]
   1400424dd:	ins    BYTE PTR es:[rdi],dx
   1400424de:	outs   dx,DWORD PTR ds:[rsi]
   1400424df:	jb     0x14004252e
   1400424e1:	(bad)  
   1400424e2:	outs   dx,BYTE PTR gs:[esi]
   1400424e5:	je     0x140042548
   1400424e7:	and    BYTE PTR [rax],ah
   1400424e9:	xor    dh,BYTE PTR [rsi+rbp*1]
   1400424ec:	xor    BYTE PTR [rax],dh
   1400424ee:	xor    BYTE PTR [rax],dh
   1400424f0:	xor    BYTE PTR [rax],dh
   1400424f2:	or     al,BYTE PTR ds:[rax]
   1400424f5:	add    BYTE PTR [rax],al
   1400424f7:	add    BYTE PTR [rax],ah
   1400424f9:	and    BYTE PTR [rbx+rax*2],bh
   1400424fc:	outs   dx,DWORD PTR ds:[rsi]
   1400424fd:	ins    BYTE PTR es:[rdi],dx
   1400424fe:	outs   dx,DWORD PTR ds:[rsi]
   1400424ff:	jb     0x140042543
   140042501:	ins    BYTE PTR es:[rdi],dx
   140042502:	(bad)  
   140042503:	movsxd ebp,DWORD PTR [rbx+0x20]
   140042506:	and    BYTE PTR [rbx],dh
   140042508:	xor    ch,BYTE PTR [rsi]
   14004250a:	xor    BYTE PTR [rax],dh
   14004250c:	xor    BYTE PTR [rax],dh
   14004250e:	xor    BYTE PTR [rax],dh
   140042510:	or     al,BYTE PTR ds:[rax]
   140042513:	add    BYTE PTR [rax],al
   140042515:	add    BYTE PTR [rax],al
   140042517:	add    BYTE PTR [rax],ah
   140042519:	and    BYTE PTR [rbx+rax*2],bh
   14004251c:	outs   dx,DWORD PTR ds:[rsi]
   14004251d:	ins    BYTE PTR es:[rdi],dx
   14004251e:	outs   dx,DWORD PTR ds:[rsi]
   14004251f:	jb     0x140042575
   140042521:	(bad)  
   140042522:	and    BYTE PTR [eax+0x70],ah
   140042526:	imul   ebp,DWORD PTR [rsi+0x6b],0xa3e27
   14004252d:	add    BYTE PTR [rax],al
   14004252f:	add    BYTE PTR [rax],ah
   140042531:	and    BYTE PTR [rbx+rax*2],bh
   140042534:	outs   dx,DWORD PTR ds:[rsi]
   140042535:	ins    BYTE PTR es:[rdi],dx
   140042536:	outs   dx,DWORD PTR ds:[rsi]
   140042537:	jb     0x140042586
   140042539:	(bad)  
   14004253a:	outs   dx,BYTE PTR gs:[esi]
   14004253d:	je     0x1400425a0
   14004253f:	and    BYTE PTR [rax],ah
   140042541:	xor    eax,0x30302e30
   140042546:	xor    BYTE PTR [rax],dh
   140042548:	xor    BYTE PTR [rax],dh
   14004254a:	or     al,BYTE PTR ds:[rax]
   14004254d:	add    BYTE PTR [rax],al
   14004254f:	add    BYTE PTR [rax],ah
   140042551:	and    BYTE PTR [rbx+rax*2],bh
   140042554:	outs   dx,DWORD PTR ds:[rsi]
   140042555:	ins    BYTE PTR es:[rdi],dx
   140042556:	outs   dx,DWORD PTR ds:[rsi]
   140042557:	jb     0x1400425ad
   140042559:	(bad)  
   14004255a:	and    BYTE PTR [eax+0x6d],ah
   14004255e:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0x70727570
   140042567:	ins    BYTE PTR es:[rdi],dx
   140042568:	gs (bad) 
   14004256a:	or     al,BYTE PTR ds:[rax]
   14004256d:	add    BYTE PTR [rax],al
   14004256f:	add    BYTE PTR [rax],ah
   140042571:	and    BYTE PTR [rbx+rax*2],bh
   140042574:	outs   dx,DWORD PTR ds:[rsi]
   140042575:	ins    BYTE PTR es:[rdi],dx
   140042576:	outs   dx,DWORD PTR ds:[rsi]
   140042577:	jb     0x1400425bc
   140042579:	jns    0x1400425dc
   14004257b:	outs   dx,BYTE PTR ds:[rsi]
   14004257c:	and    BYTE PTR [rax],ah
   14004257e:	xor    al,0x30
   140042580:	xor    BYTE PTR cs:[rax],dh
   140042583:	xor    BYTE PTR [rax],dh
   140042585:	xor    BYTE PTR [rax],dh
   140042587:	or     al,BYTE PTR ds:[rax]
   14004258a:	add    BYTE PTR [rax],al
   14004258c:	add    BYTE PTR [rax],al
   14004258e:	add    BYTE PTR [rax],al
   140042590:	and    BYTE PTR [rax],ah
   140042592:	cmp    al,0x43
   140042594:	outs   dx,DWORD PTR ds:[rsi]
   140042595:	ins    BYTE PTR es:[rdi],dx
   140042596:	outs   dx,DWORD PTR ds:[rsi]
   140042597:	jb     0x1400425ed
   140042599:	(bad)  
   14004259a:	and    BYTE PTR [eax+0x67],ah
   14004259e:	jb     0x140042605
   1400425a0:	jns    0x1400425c9
   1400425a2:	or     al,BYTE PTR ds:[rax]
   1400425a5:	add    BYTE PTR [rax],al
   1400425a7:	add    BYTE PTR [rax],ah
   1400425a9:	and    BYTE PTR [rbx+rax*2],bh
   1400425ac:	outs   dx,DWORD PTR ds:[rsi]
   1400425ad:	ins    BYTE PTR es:[rdi],dx
   1400425ae:	outs   dx,DWORD PTR ds:[rsi]
   1400425af:	jb     0x1400425f3
   1400425b1:	ins    BYTE PTR es:[rdi],dx
   1400425b2:	(bad)  
   1400425b3:	movsxd ebp,DWORD PTR [rbx+0x20]
   1400425b6:	and    BYTE PTR [rip+0x30302e30],dh        # 0x1703453ec
   1400425bc:	xor    BYTE PTR [rax],dh
   1400425be:	xor    BYTE PTR [rax],dh
   1400425c0:	or     al,BYTE PTR ds:[rax]
   1400425c3:	add    BYTE PTR [rax],al
   1400425c5:	add    BYTE PTR [rax],al
   1400425c7:	add    BYTE PTR [rax],ah
   1400425c9:	and    BYTE PTR [rbx+rax*2],bh
   1400425cc:	outs   dx,DWORD PTR ds:[rsi]
   1400425cd:	ins    BYTE PTR es:[rdi],dx
   1400425ce:	outs   dx,DWORD PTR ds:[rsi]
   1400425cf:	jb     0x140042625
   1400425d1:	(bad)  
   1400425d2:	and    BYTE PTR [eax+0x6c],ah
   1400425d6:	imul   esp,DWORD PTR [rdi+0x68],0x65726774
   1400425dd:	jns    0x140042606
   1400425df:	or     al,BYTE PTR ds:[rax]
   1400425e2:	add    BYTE PTR [rax],al
   1400425e4:	add    BYTE PTR [rax],al
   1400425e6:	add    BYTE PTR [rax],al
   1400425e8:	and    BYTE PTR [rax],ah
   1400425ea:	cmp    al,0x43
   1400425ec:	outs   dx,DWORD PTR ds:[rsi]
   1400425ed:	ins    BYTE PTR es:[rdi],dx
   1400425ee:	outs   dx,DWORD PTR ds:[rsi]
   1400425ef:	jb     0x140042633
   1400425f1:	ins    BYTE PTR es:[rdi],dx
   1400425f2:	(bad)  
   1400425f3:	movsxd ebp,DWORD PTR [rbx+0x20]
   1400425f6:	and    BYTE PTR [rdx],dh
   1400425f8:	xor    eax,0x3030302e
   1400425fd:	xor    BYTE PTR [rax],dh
   1400425ff:	xor    BYTE PTR [rsi],bh
   140042601:	or     al,BYTE PTR [rax]
   140042603:	add    BYTE PTR [rax],al
   140042605:	add    BYTE PTR [rax],al
   140042607:	add    BYTE PTR [rax],ah
   140042609:	and    BYTE PTR [rbx+rax*2],bh
   14004260c:	outs   dx,DWORD PTR ds:[rsi]
   14004260d:	ins    BYTE PTR es:[rdi],dx
   14004260e:	outs   dx,DWORD PTR ds:[rsi]
   14004260f:	jb     0x140042665
   140042611:	(bad)  
   140042612:	and    BYTE PTR [eax+0x6c],ah
   140042616:	imul   esp,DWORD PTR [rdi+0x68],0x796b7374
   14004261d:	(bad)  
   14004261e:	ins    BYTE PTR es:[rdi],dx
   14004261f:	jne    0x140042686
   140042621:	(bad)  
   140042622:	or     al,BYTE PTR ds:[rax]
   140042625:	add    BYTE PTR [rax],al
   140042627:	add    BYTE PTR [rax],ah
   140042629:	and    BYTE PTR [rbx+rax*2],bh
   14004262c:	outs   dx,DWORD PTR ds:[rsi]
   14004262d:	ins    BYTE PTR es:[rdi],dx
   14004262e:	outs   dx,DWORD PTR ds:[rsi]
   14004262f:	jb     0x140042674
   140042631:	jns    0x140042694
   140042633:	outs   dx,BYTE PTR ds:[rsi]
   140042634:	and    BYTE PTR [rax],ah
   140042636:	xor    edi,DWORD PTR [rax]
   140042638:	xor    BYTE PTR cs:[rax],dh
   14004263b:	xor    BYTE PTR [rax],dh
   14004263d:	xor    BYTE PTR [rax],dh
   14004263f:	or     al,BYTE PTR ds:[rax]
   140042642:	add    BYTE PTR [rax],al
   140042644:	add    BYTE PTR [rax],al
   140042646:	add    BYTE PTR [rax],al
   140042648:	and    BYTE PTR [rax],ah
   14004264a:	cmp    al,0x43
   14004264c:	outs   dx,DWORD PTR ds:[rsi]
   14004264d:	ins    BYTE PTR es:[rdi],dx
   14004264e:	outs   dx,DWORD PTR ds:[rsi]
   14004264f:	jb     0x14004269e
   140042651:	(bad)  
   140042652:	outs   dx,BYTE PTR gs:[esi]
   140042655:	je     0x1400426b8
   140042657:	and    BYTE PTR [rax],ah
   140042659:	xor    esi,DWORD PTR [rbx]
   14004265b:	xor    BYTE PTR cs:[rax],dh
   14004265e:	xor    BYTE PTR [rax],dh
   140042660:	xor    BYTE PTR [rax],dh
   140042662:	or     al,BYTE PTR ds:[rax]
   140042665:	add    BYTE PTR [rax],al
   140042667:	add    BYTE PTR [rax],ah
   140042669:	and    BYTE PTR [rbx+rax*2],bh
   14004266c:	outs   dx,DWORD PTR ds:[rsi]
   14004266d:	ins    BYTE PTR es:[rdi],dx
   14004266e:	outs   dx,DWORD PTR ds:[rsi]
   14004266f:	jb     0x1400426c5
   140042671:	(bad)  
   140042672:	and    BYTE PTR [eax+0x6c],ah
   140042676:	imul   esp,DWORD PTR [rdi+0x68],0x726f6374
   14004267d:	(bad)  
   14004267e:	ins    BYTE PTR es:[rdi],dx
   14004267f:	(bad)  
   140042680:	or     al,BYTE PTR ds:[rax]
   140042683:	add    BYTE PTR [rax],al
   140042685:	add    BYTE PTR [rax],al
   140042687:	add    BYTE PTR [rax],ah
   140042689:	and    BYTE PTR [rbx+rax*2],bh
   14004268c:	outs   dx,DWORD PTR ds:[rsi]
   14004268d:	ins    BYTE PTR es:[rdi],dx
   14004268e:	outs   dx,DWORD PTR ds:[rsi]
   14004268f:	jb     0x1400426ea
   140042691:	gs ins BYTE PTR es:[rdi],dx
   140042693:	ins    BYTE PTR es:[rdi],dx
   140042694:	outs   dx,DWORD PTR ds:[rsi]
   140042695:	ja     0x1400426b7
   140042697:	and    BYTE PTR [rsi],dh
   140042699:	xor    BYTE PTR [rsi],ch
   14004269b:	xor    BYTE PTR [rax],dh
   14004269d:	xor    BYTE PTR [rax],dh
   14004269f:	xor    BYTE PTR [rax],dh
   1400426a1:	or     al,BYTE PTR ds:[rax]
   1400426a4:	add    BYTE PTR [rax],al
   1400426a6:	add    BYTE PTR [rax],al
   1400426a8:	and    BYTE PTR [rax],ah
   1400426aa:	cmp    al,0x43
   1400426ac:	outs   dx,DWORD PTR ds:[rsi]
   1400426ad:	ins    BYTE PTR es:[rdi],dx
   1400426ae:	outs   dx,DWORD PTR ds:[rsi]
   1400426af:	jb     0x140042705
   1400426b1:	(bad)  
   1400426b2:	and    BYTE PTR [eax+0x79],ah
   1400426b6:	gs ins BYTE PTR es:[rdi],dx
   1400426b8:	ins    BYTE PTR es:[rdi],dx
   1400426b9:	outs   dx,DWORD PTR ds:[rsi]
   1400426ba:	ja     0x140042723
   1400426bc:	jb     0x140042723
   1400426be:	outs   dx,BYTE PTR gs:[rsi]
   1400426c0:	(bad)  
   1400426c1:	or     al,BYTE PTR ds:[rax]
   1400426c4:	add    BYTE PTR [rax],al
   1400426c6:	add    BYTE PTR [rax],al
   1400426c8:	and    BYTE PTR [rax],ah
   1400426ca:	cmp    al,0x43
   1400426cc:	outs   dx,DWORD PTR ds:[rsi]
   1400426cd:	ins    BYTE PTR es:[rdi],dx
   1400426ce:	outs   dx,DWORD PTR ds:[rsi]
   1400426cf:	jb     0x140042714
   1400426d1:	jns    0x140042734
   1400426d3:	outs   dx,BYTE PTR ds:[rsi]
   1400426d4:	and    BYTE PTR [rax],ah
   1400426d6:	xor    esi,DWORD PTR [rcx]
   1400426d8:	xor    BYTE PTR cs:[rax],dh
   1400426db:	xor    BYTE PTR [rax],dh
   1400426dd:	xor    BYTE PTR [rax],dh
   1400426df:	or     al,BYTE PTR ds:[rax]
   1400426e2:	add    BYTE PTR [rax],al
   1400426e4:	add    BYTE PTR [rax],al
   1400426e6:	add    BYTE PTR [rax],al
   1400426e8:	and    BYTE PTR ds:[rbx],ah
   1400426eb:	and    BYTE PTR [rbp+0x6e],ah
   1400426ee:	and    BYTE PTR fs:[rdi+0x66],ch
   1400426f2:	and    BYTE PTR [rbx+0x6f],al
   1400426f5:	ins    BYTE PTR es:[rdi],dx
   1400426f6:	outs   dx,DWORD PTR ds:[rsi]
   1400426f7:	jb     0x14004273c
   1400426f9:	(bad)  
   1400426fa:	je     0x14004275d
   1400426fc:	ins    BYTE PTR es:[rdi],dx
   1400426fd:	outs   dx,DWORD PTR ds:[rsi]
   1400426fe:	or     al,BYTE PTR [eax]
   140042701:	add    BYTE PTR [rax],al
   140042703:	add    BYTE PTR [rax],al
   140042705:	add    BYTE PTR [rax],al
   140042707:	add    BYTE PTR [rbx],ah
   140042709:	and    BYTE PTR [rbp+0x6e],ah
   14004270c:	and    BYTE PTR fs:[rdi+0x66],ch
   140042710:	and    BYTE PTR [rbp+0x49],cl
   140042713:	rex.RX
   140042714:	imul   r13d,DWORD PTR [rbp+r12*2+0xa],0x0
   14004271d:	add    BYTE PTR [rax],al
   14004271f:	add    BYTE PTR [rdx+rax*2],bh
   140042722:	push   rdx
   140042723:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x25]
   140042728:	and    BYTE PTR fs:[rip+0x64252064],ah        # 0x1a4294793
   14004272f:	and    BYTE PTR [rip+0xa3e64],ah        # 0x1400e6599
	...
   14004273d:	add    BYTE PTR [rax],al
   14004273f:	add    BYTE PTR [rax],ah
   140042741:	cmp    al,0x41
   140042743:	jb     0x1400427b7
   140042745:	outs   dx,DWORD PTR ds:[rsi]
   140042746:	ja     0x14004279b
   140042748:	je     0x1400427c3
   14004274a:	ins    BYTE PTR es:[rdi],dx
   14004274b:	and    BYTE PTR gs:[rsp+rdx*2],bh
   14004274f:	imul   esi,DWORD PTR [rax+0x41],0x656c676e
   140042756:	and    BYTE PTR [rcx],dh
   140042758:	xor    eax,0x423c203e
   14004275d:	(bad)  
   14004275e:	jae    0x1400427c5
   140042760:	rex.B outs dx,BYTE PTR ds:[rsi]
   140042762:	ins    BYTE PTR es:[edi],dx
   140042764:	and    BYTE PTR gs:[rcx],bh
   140042767:	xor    BYTE PTR [rsi],bh
   140042769:	and    BYTE PTR [rsp+rcx*2],bh
   14004276c:	outs   dx,BYTE PTR gs:[rsi]
   14004276e:	addr32 je 0x1400427d9
   140042771:	and    BYTE PTR [rip+0x3e66312e],ah        # 0x17e6a58a5
   140042777:	and    BYTE PTR [rax+rcx*2],bh
   14004277a:	gs (bad) 
   14004277c:	fs push rsp
   14004277e:	jns    0x1400427f0
   140042780:	and    BYTE PTR gs:[rsi+0x69],al
   140042784:	ins    BYTE PTR es:[rdi],dx
   140042785:	ins    BYTE PTR es:[rdi],dx
   140042786:	gs fs ds or al,BYTE PTR ds:[rax]
   14004278c:	add    BYTE PTR [rax],al
   14004278e:	add    BYTE PTR [rax],al
   140042790:	and    esp,DWORD PTR [rax]
   140042792:	and    eax,0x3e2d2073
   140042797:	and    BYTE PTR [rip+0xa73],ah        # 0x140043210
   14004279d:	add    BYTE PTR [rax],al
   14004279f:	add    BYTE PTR [rbx+0x0],ah
   1400427a2:	cmp    al,BYTE PTR [rax]
   1400427a4:	pop    rsp
   1400427a5:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400427a9:	add    BYTE PTR [rbp+0x0],ch
   1400427ac:	jo     0x1400427ae
   1400427ae:	pop    rsp
   1400427af:	add    BYTE PTR [rdx+0x0],ah
   1400427b2:	(bad)  
   1400427b3:	add    BYTE PTR [rax+rax*1+0x73],dh
   1400427b7:	add    BYTE PTR [rbp+0x0],ah
   1400427ba:	jb     0x1400427bc
   1400427bc:	jbe    0x1400427be
   1400427be:	add    BYTE PTR gs:[rax+rax*1+0x77],bl
   1400427c3:	add    BYTE PTR [rcx+0x0],ch
   1400427c6:	outs   dx,BYTE PTR ds:[rsi]
   1400427c7:	add    BYTE PTR [rsi],dh
   1400427c9:	add    BYTE PTR [rax+rax*1],dh
   1400427cc:	pop    rsp
   1400427cd:	add    BYTE PTR [rdi+0x0],ah
   1400427d0:	jb     0x1400427d2
   1400427d2:	(bad)  
   1400427d3:	add    BYTE PTR [rax+0x0],dh
   1400427d6:	push   0x69007600
   1400427db:	add    BYTE PTR [rdx+0x0],bh
   1400427de:	pop    rsp
   1400427df:	add    BYTE PTR [rax+rax*1+0x6f],ah
   1400427e3:	add    BYTE PTR [rax+rax*1+0x6e],dh
   1400427e7:	add    BYTE PTR [rbp+0x0],ah
   1400427ea:	(bad)  
   1400427eb:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400427ef:	add    BYTE PTR [rax+rax*1+0x63],bl
   1400427f3:	add    BYTE PTR [rdi+0x0],ch
   1400427f6:	ins    DWORD PTR es:[rdi],dx
   1400427f7:	add    BYTE PTR [rbp+0x0],ch
   1400427fa:	outs   dx,DWORD PTR ds:[rsi]
   1400427fb:	add    BYTE PTR [rsi+0x0],ch
   1400427fe:	pop    rsp
   1400427ff:	add    BYTE PTR [rbp+0x0],ch
   140042802:	imul   eax,DWORD PTR [rax],0x670066
   140042808:	add    BYTE PTR gs:[rsi+0x0],ch
   14004280c:	add    BYTE PTR cs:[rbx+0x0],ah
	...
   140042818:	push   rbx
   140042819:	add    BYTE PTR [rax+0x0],dl
   14004281c:	and    BYTE PTR [rax],al
   14004281e:	sub    eax,DWORD PTR [rax]
   140042820:	and    BYTE PTR [rax],al
   140042822:	xor    DWORD PTR [rax],eax
   140042824:	and    BYTE PTR [rax],al
   140042826:	cmp    al,0x0
   140042828:	and    BYTE PTR [rax],al
   14004282a:	rex.WRB add BYTE PTR [r9+0x0],r8b
   14004282e:	pop    rax
   14004282f:	add    BYTE PTR [rsi+0x0],cl
   140042832:	add    BYTE PTR [r11+0x0],r10b
   140042836:	push   rsp
	...
   14004283f:	add    BYTE PTR [rbx+0x0],dl
   140042842:	push   rax
   140042843:	add    BYTE PTR [rax],ah
   140042845:	add    BYTE PTR [rsi],bh
   140042847:	add    BYTE PTR [rax],ah
   140042849:	add    BYTE PTR [rax],dh
   14004284b:	add    BYTE PTR [rax],al
   14004284d:	add    BYTE PTR [rax],al
   14004284f:	add    BYTE PTR [rcx+0x74],ch
   140042852:	(bad)  
   140042853:	ins    BYTE PTR es:[rdi],dx
   140042854:	imul   esp,DWORD PTR [rbx+0x0],0x6c6f6300
   14004285b:	outs   dx,DWORD PTR ds:[rsi]
   14004285c:	jb     0x14004287e
   14004285e:	and    eax,0x6f6e2073
   140042863:	je     0x140042885
   140042865:	jae    0x1400428dc
   140042867:	jo     0x1400428d9
   140042869:	outs   dx,DWORD PTR ds:[rsi]
   14004286a:	jb     0x1400428e0
   14004286c:	gs and BYTE PTR fs:[rcx+0x6e],ch
   140042871:	and    BYTE PTR [rbp+0x49],cl
   140042874:	rex.RX or r8b,BYTE PTR [rax]
   140042877:	add    BYTE PTR [rbp+0x69],ch
   14004287a:	pop    di
   14004287c:	jae    0x1400428e3
   14004287e:	je     0x1400428df
   140042880:	jae    0x1400428f6
   140042882:	jns    0x1400428f0
   140042884:	cmp    ah,BYTE PTR gs:[rax]
   140042887:	jne    0x1400428f7
   140042889:	jae    0x140042900
   14004288b:	jo     0x1400428fd
   14004288d:	outs   dx,DWORD PTR ds:[rsi]
   14004288e:	jb     0x140042904
   140042890:	gs and BYTE PTR fs:[rbx+0x74],dh
   140042895:	jns    0x140042903
   140042897:	and    BYTE PTR gs:[rip+0x202d2073],ah        # 0x160314911
   14004289e:	imul   esp,DWORD PTR [rdi+0x6e],0x6e69726f
   1400428a5:	or     al,BYTE PTR [eax]
   1400428a8:	rex.WR
   1400428a9:	gs data16 je 0x1400428ad
   1400428ad:	add    BYTE PTR [rax],al
   1400428af:	add    BYTE PTR [rdx+0x69],dl
   1400428b2:	addr32 push 0x74
   1400428b8:	rex.XB
   1400428b9:	outs   dx,BYTE PTR gs:[rsi]
   1400428bb:	je     0x140042922
   1400428bd:	jb     0x1400428bf
   1400428bf:	add    BYTE PTR [rsp+rdx*2],bh
   1400428c2:	gs js  0x140042939
   1400428c5:	imul   r13,QWORD PTR [rsi+0x65],0x6e413c20
   1400428cd:	ins    BYTE PTR es:[edi],dx
   1400428cf:	and    BYTE PTR gs:[rip+0x3c203e64],ah        # 0x17c24673a
   1400428d6:	push   rsp
   1400428d7:	rex.WR
   1400428d8:	rex.WRXB jb 0x140042944
   1400428db:	imul   ebp,DWORD PTR [esi+0x20],0x66322e25
   1400428e3:	and    BYTE PTR [rip+0x3e66322e],ah        # 0x17e6a5b17
   1400428e9:	and    BYTE PTR [rsp+rdx*2],bh
   1400428ec:	rex.WR
   1400428ed:	rex.B ins BYTE PTR es:[rdi],dx
   1400428ef:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
   1400428f6:	and    BYTE PTR [rip+0x3e73],ah        # 0x14004676f
   1400428fc:	add    BYTE PTR [rax],al
   1400428fe:	add    BYTE PTR [rax],al
   140042900:	and    BYTE PTR [rbx+rdx*2],bh
   140042903:	je     0x140042977
   140042905:	imul   ebp,DWORD PTR [rsi+0x67],0x73256020
   14004290c:	(bad)  
   14004290d:	ds or  al,BYTE PTR ds:[rax]
   140042911:	add    BYTE PTR [rax],al
   140042913:	add    BYTE PTR [rax],al
   140042915:	add    BYTE PTR [rax],al
   140042917:	add    BYTE PTR [rax+rdx*2],bh
   14004291a:	outs   dx,DWORD PTR ds:[rsi]
   14004291b:	ins    BYTE PTR es:[rdi],dx
   14004291c:	jns    0x14004296a
   14004291e:	imul   ebp,DWORD PTR [rsi+0x65],0x69463c20
   140042925:	ins    BYTE PTR es:[rdi],dx
   140042926:	ins    BYTE PTR es:[rdi],dx
   140042927:	and    BYTE PTR [rcx],dh
   140042929:	xor    eax,0x533c203e
   14004292e:	ins    DWORD PTR es:[rdi],dx
   14004292f:	outs   dx,DWORD PTR ds:[rsi]
   140042930:	outs   dx,DWORD PTR ds:[rsi]
   140042931:	je     0x14004299b
   140042933:	gs and BYTE PTR fs:[rcx+0x65],bl
   140042938:	jae    0x140042978
   14004293a:	and    BYTE PTR [rax+rcx*2],bh
   14004293d:	gs (bad) 
   14004293f:	fs rex.XB (bad) 
   140042942:	jo     0x140042964
   140042944:	push   rbx
   140042945:	jno    0x1400429bc
   140042947:	(bad)  
   140042948:	jb     0x1400429af
   14004294a:	or     al,BYTE PTR ds:[rax]
   14004294d:	add    BYTE PTR [rax],al
   14004294f:	add    BYTE PTR [rsi],bh
   140042951:	or     al,BYTE PTR [rax]
   140042953:	add    BYTE PTR [rax],al
   140042955:	add    BYTE PTR [rax],al
   140042957:	add    BYTE PTR [rax+rdx*2],bh
   14004295a:	outs   dx,DWORD PTR ds:[rsi]
   14004295b:	ins    BYTE PTR es:[rdi],dx
   14004295c:	jns    0x1400429c5
   14004295e:	outs   dx,DWORD PTR ds:[rsi]
   14004295f:	outs   dx,BYTE PTR ds:[rsi]
   140042960:	and    BYTE PTR [rip+0xa73],ah        # 0x1400433d9
   140042966:	add    BYTE PTR [rax],al
   140042968:	cmp    al,0x45
   14004296a:	ins    BYTE PTR es:[rdi],dx
   14004296b:	ins    BYTE PTR es:[rdi],dx
   14004296c:	imul   esi,DWORD PTR [rax+0x73],0x73252065
   140042973:	and    BYTE PTR [rdx+rax*2],bh
   140042976:	push   rdx
   140042977:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x25]
   14004297c:	xor    ah,BYTE PTR cs:[rsi+0x20]
   140042980:	and    eax,0x2066322e
   140042985:	and    eax,0x2066312e
   14004298a:	and    eax,0x3e66312e
   14004298f:	or     al,BYTE PTR ds:[rax]
   140042992:	add    BYTE PTR [rax],al
   140042994:	add    BYTE PTR [rax],al
   140042996:	add    BYTE PTR [rax],al
   140042998:	cmp    al,0x50
   14004299a:	outs   dx,DWORD PTR ds:[rsi]
   14004299b:	ins    BYTE PTR es:[rdi],dx
   14004299c:	jns    0x1400429ea
   14004299e:	imul   ebp,DWORD PTR [rsi+0x65],0x65483c20
   1400429a5:	(bad)  
   1400429a6:	fs rex.XB (bad) 
   1400429a9:	jo     0x1400429cb
   1400429ab:	push   rbx
   1400429ac:	jno    0x140042a23
   1400429ae:	(bad)  
   1400429af:	jb     0x140042a16
   1400429b1:	or     al,BYTE PTR ds:[rax]
   1400429b4:	cs pop rsp
   1400429b6:	and    ah,BYTE PTR [rax]
	...
   1400429c0:	rex.B jbe 0x140042a24
   1400429c3:	outs   dx,BYTE PTR ds:[rsi]
   1400429c4:	je     0x140042a0d
   1400429c6:	(bad)  
   1400429c7:	jb     0x140042a2d
   1400429c9:	gs sub eax,0x696d6544
   1400429cf:	add    BYTE PTR [rcx+0x76],al
   1400429d2:	(bad)  
   1400429d3:	outs   dx,BYTE PTR ds:[rsi]
   1400429d4:	je     0x140042a1d
   1400429d6:	(bad)  
   1400429d7:	jb     0x140042a3d
   1400429d9:	gs sub eax,0x6b6f6f42
   1400429df:	rex.WRXB (bad) 
   1400429e1:	ins    BYTE PTR es:[rdi],dx
   1400429e2:	imul   esi,DWORD PTR [rcx+0x75],0x41000065
   1400429e9:	jbe    0x140042a4c
   1400429eb:	outs   dx,BYTE PTR ds:[rsi]
   1400429ec:	je     0x140042a35
   1400429ee:	(bad)  
   1400429ef:	jb     0x140042a55
   1400429f1:	gs sub eax,0x6b6f6f42
   1400429f7:	add    BYTE PTR [rcx+0x76],al
   1400429fa:	(bad)  
   1400429fb:	outs   dx,BYTE PTR ds:[rsi]
   1400429fc:	je     0x140042a45
   1400429fe:	(bad)  
   1400429ff:	jb     0x140042a65
   140042a01:	gs sub eax,0x696d6544
   140042a07:	rex.WRXB (bad) 
   140042a09:	ins    BYTE PTR es:[rdi],dx
   140042a0a:	imul   esi,DWORD PTR [rcx+0x75],0x54000065
   140042a11:	imul   ebp,DWORD PTR [rbp+0x65],0x6f422d73
   140042a18:	ins    BYTE PTR es:[rdi],dx
   140042a19:	add    BYTE PTR fs:[rax],al
   140042a1c:	add    BYTE PTR [rax],al
   140042a1e:	add    BYTE PTR [rax],al
   140042a20:	push   rsp
   140042a21:	imul   ebp,DWORD PTR [rbp+0x65],0x6f422d73
   140042a28:	ins    BYTE PTR es:[rdi],dx
   140042a29:	fs rex.WB je 0x140042a8e
   140042a2d:	ins    BYTE PTR es:[rdi],dx
   140042a2e:	imul   esp,DWORD PTR [rbx+0x0],0x0
   140042a35:	add    BYTE PTR [rax],al
   140042a37:	add    BYTE PTR [rbx+0x6f],al
   140042a3a:	jne    0x140042aae
   140042a3c:	imul   esp,DWORD PTR [rbp+0x72],0x6c6f422d
   140042a43:	add    BYTE PTR fs:[rax],al
   140042a46:	add    BYTE PTR [rax],al
   140042a48:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140042a4a:	jne    0x140042abe
   140042a4c:	imul   esp,DWORD PTR [rbp+0x72],0x756f4300
   140042a53:	jb     0x140042abe
   140042a55:	gs jb  0x140042a85
   140042a58:	rex.X outs dx,DWORD PTR ds:[rsi]
   140042a5a:	ins    BYTE PTR es:[rdi],dx
   140042a5b:	fs rex.WRXB (bad) 
   140042a5e:	ins    BYTE PTR es:[rdi],dx
   140042a5f:	imul   esi,DWORD PTR [rcx+0x75],0x65
   140042a66:	add    BYTE PTR [rax],al
   140042a68:	rex.W
   140042a69:	gs ins BYTE PTR es:[rdi],dx
   140042a6b:	jbe    0x140042ad2
   140042a6d:	je     0x140042ad8
   140042a6f:	movsxd esp,DWORD PTR [rcx+0x0]
   140042a72:	add    BYTE PTR [rax],al
   140042a74:	add    BYTE PTR [rax],al
   140042a76:	add    BYTE PTR [rax],al
   140042a78:	rex.W
   140042a79:	gs ins BYTE PTR es:[rdi],dx
   140042a7b:	jbe    0x140042ae2
   140042a7d:	je     0x140042ae8
   140042a7f:	movsxd esp,DWORD PTR [rcx+0x2d]
   140042a82:	rex.X outs dx,DWORD PTR ds:[rsi]
   140042a84:	ins    BYTE PTR es:[rdi],dx
   140042a85:	add    BYTE PTR fs:[rax],al
   140042a88:	rex.W
   140042a89:	gs ins BYTE PTR es:[rdi],dx
   140042a8b:	jbe    0x140042af2
   140042a8d:	je     0x140042af8
   140042a8f:	movsxd esp,DWORD PTR [rcx+0x2d]
   140042a92:	rex.WRXB (bad) 
   140042a94:	ins    BYTE PTR es:[rdi],dx
   140042a95:	imul   esi,DWORD PTR [rcx+0x75],0x65
   140042a9c:	add    BYTE PTR [rax],al
   140042a9e:	add    BYTE PTR [rax],al
   140042aa0:	rex.W
   140042aa1:	gs ins BYTE PTR es:[rdi],dx
   140042aa3:	jbe    0x140042b0a
   140042aa5:	je     0x140042b10
   140042aa7:	movsxd esp,DWORD PTR [rcx+0x2d]
   140042aaa:	rex.X outs dx,DWORD PTR ds:[rsi]
   140042aac:	ins    BYTE PTR es:[rdi],dx
   140042aad:	fs rex.WRXB (bad) 
   140042ab0:	ins    BYTE PTR es:[rdi],dx
   140042ab1:	imul   esi,DWORD PTR [rcx+0x75],0x65
   140042ab8:	rex.W
   140042ab9:	gs ins BYTE PTR es:[rdi],dx
   140042abb:	jbe    0x140042b22
   140042abd:	je     0x140042b28
   140042abf:	movsxd esp,DWORD PTR [rcx+0x2d]
   140042ac2:	rex.WRX (bad) 
   140042ac4:	jb     0x140042b38
   140042ac6:	outs   dx,DWORD PTR ds:[rsi]
   140042ac7:	ja     0x140042af6
   140042ac9:	rex.X outs dx,DWORD PTR ds:[rsi]
   140042acb:	ins    BYTE PTR es:[rdi],dx
   140042acc:	add    BYTE PTR fs:[rax],al
   140042acf:	add    BYTE PTR [rax+0x65],cl
   140042ad2:	ins    BYTE PTR es:[rdi],dx
   140042ad3:	jbe    0x140042b3a
   140042ad5:	je     0x140042b40
   140042ad7:	movsxd esp,DWORD PTR [rcx+0x2d]
   140042ada:	rex.WRX (bad) 
   140042adc:	jb     0x140042b50
   140042ade:	outs   dx,DWORD PTR ds:[rsi]
   140042adf:	ja     0x140042b0e
   140042ae1:	rex.WRXB (bad) 
   140042ae3:	ins    BYTE PTR es:[rdi],dx
   140042ae4:	imul   esi,DWORD PTR [rcx+0x75],0x65
   140042aeb:	add    BYTE PTR [rax],al
   140042aed:	add    BYTE PTR [rax],al
   140042aef:	add    BYTE PTR [rax+0x65],cl
   140042af2:	ins    BYTE PTR es:[rdi],dx
   140042af3:	jbe    0x140042b5a
   140042af5:	je     0x140042b60
   140042af7:	movsxd esp,DWORD PTR [rcx+0x2d]
   140042afa:	rex.WRX (bad) 
   140042afc:	jb     0x140042b70
   140042afe:	outs   dx,DWORD PTR ds:[rsi]
   140042aff:	ja     0x140042b01
   140042b01:	add    BYTE PTR [rax],al
   140042b03:	add    BYTE PTR [rax],al
   140042b05:	add    BYTE PTR [rax],al
   140042b07:	add    BYTE PTR [rax+0x65],cl
   140042b0a:	ins    BYTE PTR es:[rdi],dx
   140042b0b:	jbe    0x140042b72
   140042b0d:	je     0x140042b78
   140042b0f:	movsxd esp,DWORD PTR [rcx+0x2d]
   140042b12:	rex.WRX (bad) 
   140042b14:	jb     0x140042b88
   140042b16:	outs   dx,DWORD PTR ds:[rsi]
   140042b17:	ja     0x140042b46
   140042b19:	rex.X outs dx,DWORD PTR ds:[rsi]
   140042b1b:	ins    BYTE PTR es:[rdi],dx
   140042b1c:	fs rex.WRXB (bad) 
   140042b1f:	ins    BYTE PTR es:[rdi],dx
   140042b20:	imul   esi,DWORD PTR [rcx+0x75],0x65
   140042b27:	add    BYTE PTR [rcx+rbp*2+0x6d],dl
   140042b2b:	gs jae 0x140042b5b
   140042b2e:	rex.WB je 0x140042b92
   140042b31:	ins    BYTE PTR es:[rdi],dx
   140042b32:	imul   esp,DWORD PTR [rbx+0x0],0x42000000
   140042b39:	outs   dx,DWORD PTR ds:[rsi]
   140042b3a:	outs   dx,DWORD PTR ds:[rsi]
   140042b3b:	imul   ebp,DWORD PTR [rbp+0x61],0x6e
   140042b3f:	sub    eax,0x696d6544
   140042b44:	add    BYTE PTR [rax],al
   140042b46:	add    BYTE PTR [rax],al
   140042b48:	rex.X outs dx,DWORD PTR ds:[rsi]
   140042b4a:	outs   dx,DWORD PTR ds:[rsi]
   140042b4b:	imul   ebp,DWORD PTR [rbp+0x61],0x6e
   140042b4f:	sub    eax,0x6867694c
   140042b54:	je     0x140042b9f
   140042b56:	je     0x140042bb9
   140042b58:	ins    BYTE PTR es:[rdi],dx
   140042b59:	imul   esp,DWORD PTR [rbx+0x0],0x0
   140042b60:	rex.X outs dx,DWORD PTR ds:[rsi]
   140042b62:	outs   dx,DWORD PTR ds:[rsi]
   140042b63:	imul   ebp,DWORD PTR [rbp+0x61],0x6e
   140042b67:	sub    eax,0x6867694c
   140042b6c:	je     0x140042b6e
   140042b6e:	add    BYTE PTR [rax],al
   140042b70:	rex.X outs dx,DWORD PTR ds:[rsi]
   140042b72:	outs   dx,DWORD PTR ds:[rsi]
   140042b73:	imul   ebp,DWORD PTR [rbp+0x61],0x6e
   140042b77:	sub    eax,0x696d6544
   140042b7c:	rex.WB je 0x140042be0
   140042b7f:	ins    BYTE PTR es:[rdi],dx
   140042b80:	imul   esp,DWORD PTR [rbx+0x0],0x0
   140042b87:	add    BYTE PTR [rsi+0x65],cl
   140042b8a:	ja     0x140042bcf
   140042b8c:	outs   dx,BYTE PTR gs:[rsi]
   140042b8e:	je     0x140042c05
   140042b90:	jb     0x140042c0b
   140042b92:	push   rbx
   140042b93:	movsxd ebp,DWORD PTR [rax+0x6c]
   140042b96:	(bad)  
   140042b97:	imul   ebp,DWORD PTR [rip+0x646c6f42],0x0        # 0x1a4709ae0
   140042b9e:	add    BYTE PTR [rax],al
   140042ba0:	rex.WRX
   140042ba1:	gs ja  0x140042be7
   140042ba4:	outs   dx,BYTE PTR gs:[rsi]
   140042ba6:	je     0x140042c1d
   140042ba8:	jb     0x140042c23
   140042baa:	push   rbx
   140042bab:	movsxd ebp,DWORD PTR [rax+0x6c]
   140042bae:	(bad)  
   140042baf:	imul   ebp,DWORD PTR [rip+0x6c617449],0x69        # 0x1ac659fff
   140042bb6:	movsxd eax,DWORD PTR [rax]
   140042bb8:	rex.WRX
   140042bb9:	gs ja  0x140042bff
   140042bbc:	outs   dx,BYTE PTR gs:[rsi]
   140042bbe:	je     0x140042c35
   140042bc0:	jb     0x140042c3b
   140042bc2:	push   rbx
   140042bc3:	movsxd ebp,DWORD PTR [rax+0x6c]
   140042bc6:	(bad)  
   140042bc7:	imul   ebp,DWORD PTR [rip+0x616d6f52],0x6e        # 0x1a1719b20
   140042bce:	add    BYTE PTR [rax],al
   140042bd0:	rex.WRX
   140042bd1:	gs ja  0x140042c17
   140042bd4:	outs   dx,BYTE PTR gs:[rsi]
   140042bd6:	je     0x140042c4d
   140042bd8:	jb     0x140042c53
   140042bda:	push   rbx
   140042bdb:	movsxd ebp,DWORD PTR [rax+0x6c]
   140042bde:	(bad)  
   140042bdf:	imul   ebp,DWORD PTR [rip+0x646c6f42],0x49        # 0x1a4709b28
   140042be6:	je     0x140042c49
   140042be8:	ins    BYTE PTR es:[rdi],dx
   140042be9:	imul   esp,DWORD PTR [rbx+0x0],0x0
   140042bf0:	push   rax
   140042bf1:	(bad)  
   140042bf2:	ins    BYTE PTR es:[rdi],dx
   140042bf3:	(bad)  
   140042bf4:	je     0x140042c5f
   140042bf6:	outs   dx,BYTE PTR ds:[rsi]
   140042bf7:	outs   dx,DWORD PTR ds:[rsi]
   140042bf8:	sub    eax,0x616d6f52
   140042bfd:	outs   dx,BYTE PTR ds:[rsi]
   140042bfe:	add    BYTE PTR [rax],al
   140042c00:	push   rax
   140042c01:	(bad)  
   140042c02:	ins    BYTE PTR es:[rdi],dx
   140042c03:	(bad)  
   140042c04:	je     0x140042c6f
   140042c06:	outs   dx,BYTE PTR ds:[rsi]
   140042c07:	outs   dx,DWORD PTR ds:[rsi]
   140042c08:	sub    eax,0x646c6f42
   140042c0d:	add    BYTE PTR [rax],al
   140042c0f:	add    BYTE PTR [rax+0x61],dl
   140042c12:	ins    BYTE PTR es:[rdi],dx
   140042c13:	(bad)  
   140042c14:	je     0x140042c7f
   140042c16:	outs   dx,BYTE PTR ds:[rsi]
   140042c17:	outs   dx,DWORD PTR ds:[rsi]
   140042c18:	sub    eax,0x6c617449
   140042c1d:	imul   esp,DWORD PTR [rbx+0x0],0x616c6150
   140042c24:	je     0x140042c8f
   140042c26:	outs   dx,BYTE PTR ds:[rsi]
   140042c27:	outs   dx,DWORD PTR ds:[rsi]
   140042c28:	sub    eax,0x646c6f42
   140042c2d:	rex.WB je 0x140042c91
   140042c30:	ins    BYTE PTR es:[rdi],dx
   140042c31:	imul   esp,DWORD PTR [rbx+0x0],0x626d7953
   140042c38:	outs   dx,DWORD PTR ds:[rsi]
   140042c39:	ins    BYTE PTR es:[rdi],dx
   140042c3a:	add    BYTE PTR [rax],al
   140042c3c:	add    BYTE PTR [rax],al
   140042c3e:	add    BYTE PTR [rax],al
   140042c40:	pop    rdx
   140042c41:	(bad)  
   140042c42:	jo     0x140042caa
   140042c44:	imul   r13d,DWORD PTR [rsi+0x67],0x73746162
   140042c4c:	add    BYTE PTR [rax],al
   140042c4e:	add    BYTE PTR [rax],al
   140042c50:	ja     0x140042cb3
   140042c52:	jb     0x140042cc2
   140042c54:	imul   ebp,DWORD PTR [rsi+0x67],0x25202d20
   140042c5b:	jae    0x140042c82
   140042c5d:	jae    0x140042c7f
   140042c5f:	jne    0x140042ccf
   140042c61:	jae    0x140042cd8
   140042c63:	jo     0x140042cd5
   140042c65:	outs   dx,DWORD PTR ds:[rsi]
   140042c66:	jb     0x140042cdc
   140042c68:	gs or  al,BYTE PTR fs:[rax]
   140042c6c:	add    BYTE PTR [rax],al
   140042c6e:	add    BYTE PTR [rax],al
   140042c70:	and    eax,0x20732573
   140042c75:	ja     0x140042cd8
   140042c77:	jb     0x140042ce7
   140042c79:	imul   ebp,DWORD PTR [rsi+0x67],0xa
   140042c80:	and    eax,0x20732573
   140042c85:	imul   esi,DWORD PTR [rbx+0x20],0x20746f6e
   140042c8c:	(bad)  
   140042c8d:	and    BYTE PTR [rdx+rsi*2+0x6f],dh
   140042c91:	data16 data16 and BYTE PTR [rsi+0x6f],ah
   140042c96:	outs   dx,BYTE PTR ds:[rsi]
   140042c97:	je     0x140042ca3
   140042c99:	add    BYTE PTR [rax],al
   140042c9b:	add    BYTE PTR [rdx+0x0],dl
   140042c9e:	add    BYTE PTR [rax],al
   140042ca0:	sub    BYTE PTR [rip+0x2c66352e],ah        # 0x16c6a61d4
   140042ca6:	and    eax,0x2966352e
   140042cab:	add    BYTE PTR [rax],al
   140042cad:	add    BYTE PTR [rax],al
   140042caf:	add    BYTE PTR [rax+0x61],dh
   140042cb2:	imul   ebp,DWORD PTR [esi+0x61],0x6e6f6974
   140042cba:	add    BYTE PTR [rax],al
   140042cbc:	add    BYTE PTR [rax],al
   140042cbe:	add    BYTE PTR [rax],al
   140042cc0:	and    eax,0x72432073
   140042cc5:	gs (bad) 
   140042cc7:	je     0x140042d38
   140042cc9:	jb     0x140042d05
   140042ccb:	and    BYTE PTR [rip+0x65762073],ah        # 0x1a57a4d44
   140042cd1:	jb     0x140042d46
   140042cd3:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
   140042cda:	sub    BYTE PTR [rip+0xa2973],ah        # 0x1400e5653
   140042ce0:	and    eax,0x6f462073
   140042ce5:	jb     0x140042d21
   140042ce7:	and    BYTE PTR [rip+0xa73],ah        # 0x140043760
   140042ced:	add    BYTE PTR [rax],al
   140042cef:	add    BYTE PTR [rip+0x69542073],ah        # 0x1a9584d68
   140042cf5:	je     0x140042d63
   140042cf7:	cmp    ah,BYTE PTR gs:[rax]
   140042cfa:	and    eax,0xa73
   140042cff:	add    BYTE PTR [rip+0x61732073],ah        # 0x1a1774d78
   140042d05:	jbe    0x140042d6c
   140042d07:	and    BYTE PTR [rax+0x6f],dh
   140042d0a:	imul   ebp,DWORD PTR [rsi+0x74],0x7a697320
   140042d11:	and    BYTE PTR gs:[rcx+0x6e],ah
   140042d15:	and    BYTE PTR fs:[rsi+0x6f],ah
   140042d19:	outs   dx,BYTE PTR ds:[rsi]
   140042d1a:	je     0x140042d26
   140042d1c:	outs   dx,BYTE PTR cs:[rsi]
   140042d1e:	jb     0x140042d40
   140042d20:	cs push rbx
   140042d22:	and    BYTE PTR [rsi+rbp*2+0x28],bl
   140042d26:	cs jae 0x140042d33
   140042d29:	outs   dx,BYTE PTR cs:[rsi]
   140042d2b:	jb     0x140042d4d
   140042d2d:	rex.R
   140042d2e:	and    BYTE PTR [rsi+r13*2+0x28],r11b
   140042d33:	data16 or al,BYTE PTR cs:[rax]
   140042d37:	add    BYTE PTR [rip+0x65722073],ah        # 0x1a5764db0
   140042d3d:	jae    0x140042db3
   140042d3f:	outs   dx,DWORD PTR ds:[rsi]
   140042d40:	jb     0x140042da7
   140042d42:	and    BYTE PTR [rax+0x6f],dh
   140042d45:	imul   ebp,DWORD PTR [rsi+0x74],0x7a697320
   140042d4c:	and    BYTE PTR gs:[rcx+0x6e],ah
   140042d50:	and    BYTE PTR fs:[rsi+0x6f],ah
   140042d54:	outs   dx,BYTE PTR ds:[rsi]
   140042d55:	je     0x140042d61
   140042d57:	cs jo  0x140042dcd
   140042d5a:	and    BYTE PTR [rsi+rbp*2+0x28],bl
   140042d5e:	cs push rbx
   140042d60:	or     ch,BYTE PTR [rsi]
   140042d62:	data16 je 0x140042d85
   140042d65:	pop    rsp
   140042d66:	outs   dx,BYTE PTR ds:[rsi]
   140042d67:	sub    BYTE PTR [rsi+rax*2+0xa],al
   140042d6b:	add    BYTE PTR [rax],al
   140042d6d:	add    BYTE PTR [rax],al
   140042d6f:	add    BYTE PTR [rdx+0x6f],dh
   140042d72:	je     0x140042dd5
   140042d74:	je     0x140042ddf
   140042d76:	outs   dx,DWORD PTR ds:[rsi]
   140042d77:	outs   dx,BYTE PTR ds:[rsi]
	...
   140042d80:	cs push rax
   140042d82:	push   rbx
   140042d83:	and    BYTE PTR [rip+0x2066352e],ah        # 0x1606a62b7
   140042d89:	and    eax,0xa66352e
   140042d8e:	add    BYTE PTR [rax],al
   140042d90:	and    eax,DWORD PTR [rax]
	...
   140042d9e:	add    BYTE PTR [rax],al
   140042da0:	and    eax,0x6f742073
   140042da5:	and    BYTE PTR [rbx+0x68],ah
   140042da8:	(bad)  
   140042da9:	outs   dx,BYTE PTR ds:[rsi]
   140042daa:	and    BYTE PTR gs:[edx+esi*2+0x61],ah
   140042db0:	ja     0x140042e1b
   140042db2:	outs   dx,BYTE PTR ds:[rsi]
   140042db3:	and    BYTE PTR [ebx+0x69],dh
   140042db7:	jp     0x140042e1e
   140042db9:	sub    al,0x20
   140042dbb:	ins    DWORD PTR es:[rdi],dx
   140042dbc:	jne    0x140042e2a
   140042dbe:	je     0x140042e29
   140042dc0:	jo     0x140042e2e
   140042dc2:	jns    0x140042de4
   140042dc4:	je     0x140042e2e
   140042dc6:	and    BYTE PTR gs:[rdi+0x69],dh
   140042dca:	fs je  0x140042e35
   140042dcd:	and    BYTE PTR [rcx+0x6e],ah
   140042dd0:	and    BYTE PTR fs:[rax+0x65],ch
   140042dd4:	imul   esp,DWORD PTR [rdi+0x68],0x6e6f2074
   140042ddb:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140042ddf:	and    BYTE PTR [rsi],ch
   140042de1:	push   rax
   140042de2:	push   rbx
   140042de3:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   140042de7:	and    BYTE PTR gs:[rcx+0x62],ah
   140042deb:	outs   dx,DWORD PTR ds:[rsi]
   140042dec:	jbe    0x140042e53
   140042dee:	and    BYTE PTR [rcx+0x6e],ah
   140042df1:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
   140042df6:	and    BYTE PTR [rsi+0x75],ch
   140042df9:	ins    DWORD PTR es:[rdi],dx
   140042dfa:	(bad)  
   140042dfb:	gs jb  0x140042e1e
   140042dfe:	outs   dx,DWORD PTR ds:[rsi]
   140042dff:	outs   dx,BYTE PTR ds:[rsi]
   140042e00:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140042e04:	and    BYTE PTR [rdi+rsi*2+0x6f],dh
   140042e08:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   140042e0c:	gs jae 0x140042e2f
   140042e0f:	(bad)  
   140042e10:	gs ins BYTE PTR es:[rdi],dx
   140042e12:	outs   dx,DWORD PTR ds:[rsi]
   140042e13:	ja     0x140042e35
   140042e15:	sub    BYTE PTR [rdx+0x6f],dh
   140042e18:	jne    0x140042e88
   140042e1a:	fs gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   140042e21:	je     0x140042e8b
   140042e23:	and    BYTE PTR gs:[rsi+0x65],ch
   140042e27:	(bad)  
   140042e28:	jb     0x140042e8f
   140042e2a:	jae    0x140042ea0
   140042e2c:	and    BYTE PTR [rcx+0x6e],ch
   140042e2f:	je     0x140042e96
   140042e31:	addr32 gs jb 0x140042e5e
   140042e35:	and    BYTE PTR [rdx+0x79],ah
   140042e38:	and    BYTE PTR [rcx+0x20],ah
   140042e3b:	jae    0x140042ea0
   140042e3d:	(bad)  
   140042e3e:	ins    BYTE PTR es:[rdi],dx
   140042e3f:	and    BYTE PTR gs:[rsi+0x61],ah
   140042e43:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140042e47:	or     al,BYTE PTR [rax]
   140042e49:	add    BYTE PTR [rax],al
   140042e4b:	add    BYTE PTR [rax],al
   140042e4d:	add    BYTE PTR [rax],al
   140042e4f:	add    BYTE PTR [rsi],ch
   140042e51:	outs   dx,BYTE PTR ds:[rsi]
   140042e52:	jb     0x140042e74
   140042e54:	push   rbx
   140042e55:	rex.RX and BYTE PTR [rip+0xa66302e],r12b        # 0x14a6a5e8a
   140042e5c:	jae    0x140042ec1
   140042e5e:	(bad)  
   140042e5f:	ins    BYTE PTR es:[rdi],dx
   140042e60:	gs je  0x140042ecb
   140042e63:	imul   esp,DWORD PTR [rbx+0x6b],0x7373656e
   140042e6a:	and    BYTE PTR [rip+0x302e2520],bh        # 0x170325390
   140042e70:	data16 or al,BYTE PTR [rax]
   140042e73:	add    BYTE PTR [rax],al
   140042e75:	add    BYTE PTR [rax],al
   140042e77:	add    BYTE PTR [rip+0x6f642073],ah        # 0x1af684ef0
   140042e7d:	outs   dx,BYTE PTR ds:[rsi]
   140042e7e:	(bad)  
   140042e7f:	je     0x140042ea1
   140042e81:	movsxd ebp,DWORD PTR [rax+0x61]
   140042e84:	outs   dx,BYTE PTR ds:[rsi]
   140042e85:	and    BYTE PTR gs:[ecx+0x6e],ah
   140042e8a:	jns    0x140042f00
   140042e8c:	push   0x20676e69
   140042e91:	(bad)  
   140042e92:	gs ins BYTE PTR es:[rdi],dx
   140042e94:	outs   dx,DWORD PTR ds:[rsi]
   140042e95:	ja     0x140042eb7
   140042e97:	je     0x140042f01
   140042e99:	imul   esi,DWORD PTR [rbx+0x20],0x656e696c
   140042ea0:	and    BYTE PTR [rcx+0x6e],ch
   140042ea3:	and    BYTE PTR [rax+rbp*2+0x69],dh
   140042ea7:	jae    0x140042ec9
   140042ea9:	fs jb  0x140042f0d
   140042eac:	ja     0x140042f17
   140042eae:	outs   dx,BYTE PTR ds:[rsi]
   140042eaf:	or     al,BYTE PTR [eax]
   140042eb2:	add    BYTE PTR [rax],al
   140042eb4:	add    BYTE PTR [rax],al
   140042eb6:	add    BYTE PTR [rax],al
   140042eb8:	and    eax,0x6f6e2073
   140042ebd:	outs   dx,BYTE PTR ds:[rsi]
   140042ebe:	sub    eax,0x61746166
   140042ec3:	ins    BYTE PTR es:[rdi],dx
   140042ec4:	and    BYTE PTR [rdx+0x75],dh
   140042ec7:	outs   dx,BYTE PTR ds:[rsi]
   140042ec8:	sub    eax,0x656d6974
   140042ecd:	and    BYTE PTR [rax+0x69],dh
   140042ed0:	movsxd esp,DWORD PTR [rax]
   140042ed2:	jbe    0x140042f39
   140042ed4:	jb     0x140042f49
   140042ed6:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656420
   140042edd:	gs jb  0x140042f4d
   140042ee0:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
   140042ee7:	sub    al,0x20
   140042ee9:	jbe    0x140042f50
   140042eeb:	jb     0x140042f60
   140042eed:	imul   ebp,DWORD PTR [rdi+0x6e],0xa3220
   140042ef4:	add    BYTE PTR [rax],al
   140042ef6:	add    BYTE PTR [rax],al
   140042ef8:	(bad)  
   140042ef9:	outs   dx,DWORD PTR ds:[rsi]
   140042efa:	js     0x140042f6e
   140042efc:	(bad)  
   140042efd:	fs cmp eax,0x20302e32
   140042f03:	and    eax,0x69772073
   140042f08:	ins    BYTE PTR es:[rdi],dx
   140042f09:	ins    BYTE PTR es:[rdi],dx
   140042f0a:	and    BYTE PTR [rdx+0x65],ah
   140042f0d:	and    BYTE PTR [rdx+0x65],dh
   140042f10:	jae    0x140042f77
   140042f12:	je     0x140042f34
   140042f14:	je     0x140042f85
   140042f16:	and    BYTE PTR [rax],dh
   140042f18:	xor    BYTE PTR cs:[rax],ah
   140042f1b:	(bad)  
   140042f1c:	jns    0x140042f3e
   140042f1e:	addr32 jo 0x140042f8a
   140042f21:	movsxd esp,DWORD PTR [rax]
   140042f23:	outs   dx,DWORD PTR ds:[rsi]
   140042f24:	outs   dx,BYTE PTR ds:[rsi]
   140042f25:	ins    BYTE PTR es:[rdi],dx
   140042f26:	jns    0x140042f32
	...
   140042f30:	jae    0x140042f95
   140042f32:	(bad)  
   140042f33:	ins    BYTE PTR es:[rdi],dx
   140042f34:	gs cmp eax,0x20302e31
   140042f3a:	and    eax,0x65722073
   140042f3f:	jno    0x140042fb6
   140042f41:	imul   esi,DWORD PTR [rdx+0x65],0x6f662064
   140042f48:	jb     0x140042f6a
   140042f4a:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140042f4d:	jo     0x140042fb0
   140042f4f:	jb     0x140042fba
   140042f51:	jae    0x140042fc2
   140042f53:	outs   dx,BYTE PTR ds:[rsi]
   140042f54:	jae    0x140042f60
   140042f56:	add    BYTE PTR [rax],al
   140042f58:	and    eax,0x6f622073
   140042f5d:	js     0x140042fd1
   140042f5f:	(bad)  
   140042f60:	and    BYTE PTR fs:[rcx+0x73],ch
   140042f64:	and    BYTE PTR [rsi+0x6f],ch
   140042f67:	ja     0x140042f89
   140042f69:	xor    BYTE PTR [rsi],ch
   140042f6b:	xor    BYTE PTR [rax],ah
   140042f6d:	imul   ebp,DWORD PTR [rsi+0x20],0x63697067
   140042f74:	sub    al,0x20
   140042f76:	gs ins BYTE PTR es:[rdi],dx
   140042f78:	jae    0x140042fdf
   140042f7a:	and    BYTE PTR [rcx+0x74],ch
   140042f7d:	and    BYTE PTR [rdx+0x65],dh
   140042f80:	ins    DWORD PTR es:[rdi],dx
   140042f81:	(bad)  
   140042f82:	imul   ebp,DWORD PTR [rsi+0x73],0x302e3220
   140042f89:	or     al,BYTE PTR [rax]
   140042f8b:	add    BYTE PTR [rax],al
   140042f8d:	add    BYTE PTR [rax],al
   140042f8f:	add    BYTE PTR [rip+0x61642073],ah        # 0x1a1685008
   140042f95:	jae    0x140042fff
   140042f97:	ja     0x140043002
   140042f99:	and    BYTE PTR fs:[rcx+0x73],ch
   140042f9d:	and    BYTE PTR [rax],dh
   140042f9f:	xor    DWORD PTR cs:[rax],esp
   140042fa2:	imul   ebp,DWORD PTR [rsi+0x20],0x68743031
   140042fa9:	and    BYTE PTR [rbp+0x64],al
   140042fac:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x30202c6e
   140042fb4:	xor    BYTE PTR cs:[rip+0x206e6920],dh        # 0x1607298db
   140042fbb:	rex.R push rdi
   140042fbd:	rex.X and BYTE PTR [rdx],sil
   140042fc0:	and    BYTE PTR [rcx+0x6e],ah
   140042fc3:	and    BYTE PTR fs:[rcx+0x6e],ch
   140042fc7:	and    BYTE PTR [rdi+0x70],ah
   140042fca:	imul   esp,DWORD PTR [rbx+0xa],0x25000000
   140042fd1:	jae    0x140042ff3
   140042fd3:	imul   bp,WORD PTR [rsp+rbp*2+0x76],0x6c61
   140042fda:	and    BYTE PTR [rcx+0x73],ch
   140042fdd:	and    BYTE PTR [rax],dh
   140042fdf:	xor    esp,DWORD PTR cs:[rax]
   140042fe2:	imul   ebp,DWORD PTR [rsi+0x20],0x68743031
   140042fe9:	and    BYTE PTR [rbp+0x64],al
   140042fec:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x6628206e
   140042ff4:	imul   ebp,DWORD PTR [rsp+rbp*2+0x20],0x656d2030
   140042ffc:	(bad)  
   140042ffd:	outs   dx,BYTE PTR ds:[rsi]
   140042ffe:	jae    0x140043020
   140043000:	(bad)  
   140043001:	ins    BYTE PTR es:[rdi],dx
   140043002:	(bad)  
   140043003:	movsxd ebp,DWORD PTR [rbx+0x29]
   140043006:	sub    al,0x20
   140043008:	xor    BYTE PTR [rsi],ch
   14004300a:	xor    eax,0x206e6920
   14004300f:	addr32 jo 0x14004307b
   140043012:	movsxd esp,DWORD PTR [rax]
   140043014:	sub    BYTE PTR [rsi+0x69],ah
   140043017:	ins    BYTE PTR es:[rdi],dx
   140043018:	ins    BYTE PTR es:[rdi],dx
   140043019:	and    BYTE PTR [rax],dh
   14004301b:	and    BYTE PTR [rbp+0x65],ch
   14004301e:	(bad)  
   14004301f:	outs   dx,BYTE PTR ds:[rsi]
   140043020:	jae    0x140043042
   140043022:	ja     0x14004308c
   140043024:	imul   esi,DWORD PTR [rbp+riz*2+0x29],0x6e75202c
   14004302c:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
   140043034:	imul   ebp,DWORD PTR [rsi+0x20],0x20425744
   14004303b:	xor    cl,BYTE PTR [rdx]
   14004303d:	add    BYTE PTR [rax],al
   14004303f:	add    BYTE PTR [rip+0x69662073],ah        # 0x1a96a50b8
   140043045:	ins    BYTE PTR es:[rdi],dx
   140043046:	ins    BYTE PTR es:[rdi],dx
   140043047:	and    BYTE PTR [rax+0x61],ch
   14004304a:	jae    0x14004306c
   14004304c:	outs   dx,BYTE PTR ds:[rsi]
   14004304d:	outs   dx,DWORD PTR ds:[rsi]
   14004304e:	and    BYTE PTR [rbp+0x65],ch
   140043051:	(bad)  
   140043052:	outs   dx,BYTE PTR ds:[rsi]
   140043053:	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
   14004305a:	rex.R push rdi
   14004305c:	rex.X and BYTE PTR [rdx],sil
   14004305f:	sub    al,0x20
   140043061:	addr32 jo 0x1400430cd
   140043064:	movsxd esp,DWORD PTR [rax]
   140043066:	movsxd esp,DWORD PTR [rcx+0x6e]
   140043069:	and    BYTE PTR [rbp+0x73],dh
   14004306c:	and    BYTE PTR gs:[rsi+0x69],ah
   140043070:	ins    BYTE PTR es:[rdi],dx
   140043071:	ins    BYTE PTR es:[rdi],dx
   140043072:	and    BYTE PTR [rdi+0x72],ch
   140043075:	and    BYTE PTR [rsi+0x69],ah
   140043078:	ins    BYTE PTR es:[rdi],dx
   140043079:	ins    BYTE PTR es:[rdi],dx
   14004307a:	gs fs sub al,0x20
   14004307e:	xor    DWORD PTR [rax],esi
   140043080:	je     0x1400430ea
   140043082:	and    BYTE PTR [rbp+0x64],al
   140043085:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x7375206e
   14004308d:	gs jae 0x1400430b0
   140043090:	imul   bp,WORD PTR [rsp+rbp*2+0x20],0x6e6f
   140043097:	ins    BYTE PTR es:[rdi],dx
   140043098:	jns    0x1400430a4
   14004309a:	add    BYTE PTR [rax],al
   14004309c:	add    BYTE PTR [rax],al
   14004309e:	add    BYTE PTR [rax],al
   1400430a0:	and    eax,0x57442073
   1400430a5:	rex.X and BYTE PTR [rdx],sil
   1400430a8:	and    BYTE PTR [rdi+rbp*2+0x65],ah
   1400430ac:	jae    0x14004311c
   1400430ae:	(bad)  
   1400430af:	je     0x1400430d1
   1400430b1:	jne    0x140043126
   1400430b3:	and    BYTE PTR gs:[rsi+0x69],ah
   1400430b7:	ins    BYTE PTR es:[rdi],dx
   1400430b8:	ins    BYTE PTR es:[rdi],dx
   1400430b9:	and    BYTE PTR [rcx+0x6e],ah
   1400430bc:	and    BYTE PTR fs:[rdi+rbp*2+0x65],ah
   1400430c1:	jae    0x140043131
   1400430c3:	(bad)  
   1400430c4:	je     0x1400430e6
   1400430c6:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6620
   1400430ce:	imul   ebp,DWORD PTR [rsp+rbp*2+0x76],0xa6c61
	...
   1400430de:	add    BYTE PTR [rax],al
   1400430e0:	and    eax,0x65722073
   1400430e5:	jae    0x14004314c
   1400430e7:	je     0x140043109
   1400430e9:	ja     0x14004315a
   1400430eb:	jb     0x140043158
   1400430ed:	jae    0x14004310f
   1400430ef:	imul   ebp,DWORD PTR [rsi+0x20],0x63697067
   1400430f6:	and    BYTE PTR [rcx+0x6e],ah
   1400430f9:	and    BYTE PTR fs:[rcx],dh
   1400430fc:	xor    BYTE PTR [rax+rbp*2+0x20],dh
   140043100:	gs imul esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x62202c6e
   14004310a:	jne    0x140043180
   14004310c:	and    BYTE PTR [rcx+0x73],ch
   14004310f:	outs   dx,BYTE PTR ds:[rsi]
   140043110:	(bad)  
   140043111:	je     0x140043133
   140043113:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
   14004311b:	imul   ebp,DWORD PTR [rsi+0x20],0x20425744
   140043122:	xor    cl,BYTE PTR [rdx]
   140043124:	add    BYTE PTR [rax],al
   140043126:	add    BYTE PTR [rax],al
   140043128:	and    eax,0x57442073
   14004312d:	rex.X and BYTE PTR [rdx],sil
   140043130:	and    BYTE PTR [rbx+0x6f],ah
   140043133:	ins    DWORD PTR es:[rdi],dx
   140043134:	jo     0x140043197
   140043136:	je     0x1400431a1
   140043138:	(bad)  
   140043139:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x65642079
   140043141:	imul   bp,WORD PTR [rsi+0x69],0x6974
   140043147:	outs   dx,DWORD PTR ds:[rsi]
   140043148:	outs   dx,BYTE PTR ds:[rsi]
   140043149:	jae    0x140043155
   14004314b:	add    BYTE PTR [rax],al
   14004314d:	add    BYTE PTR [rax],al
   14004314f:	add    BYTE PTR [rcx+0x66],ch
   140043152:	and    BYTE PTR [rdx+0x6f],ah
   140043155:	js     0x1400431c9
   140043157:	(bad)  
   140043158:	and    BYTE PTR fs:[rsi],bh
   14004315b:	and    BYTE PTR [rcx],dh
   14004315d:	xor    BYTE PTR cs:[rax],ah
   140043160:	es and BYTE PTR es:[rcx+riz*2+0x73],ah
   140043166:	push   0x20646977
   14004316b:	cmp    al,0x20
   14004316d:	xor    BYTE PTR [rsi],ch
   14004316f:	xor    BYTE PTR [rdi],dh
   140043171:	xor    eax,0x65687420
   140043176:	outs   dx,BYTE PTR ds:[rsi]
   140043177:	and    BYTE PTR [rax+0xa],bl
   14004317a:	or     DWORD PTR [rsi+0x69],esp
   14004317d:	ins    BYTE PTR es:[rdi],dx
   14004317e:	ins    BYTE PTR es:[rdi],dx
   14004317f:	jbe    0x1400431e2
   140043181:	ins    BYTE PTR es:[rdi],dx
   140043182:	and    BYTE PTR [rip+0xa3b3120],bh        # 0x14a3f62a8
   140043188:	or     DWORD PTR [rbp+riz*2+0x66],esp
   14004318c:	imul   ebp,DWORD PTR [rsi+0x65],0x6c696620
   140043193:	ins    BYTE PTR es:[rdi],dx
   140043194:	and    BYTE PTR [rcx+0x20],bl
   140043197:	pop    rcx
   140043198:	cmp    ecx,DWORD PTR [rdx]
   14004319a:	or     DWORD PTR [rbp+riz*2+0x66],esp
   14004319e:	imul   ebp,DWORD PTR [rsi+0x65],0x6c6f7320
   1400431a5:	imul   esp,DWORD PTR [rax+riz*1+0x59],0xa3b5920
   1400431ad:	or     DWORD PTR [rbp+riz*2+0x66],esp
   1400431b1:	imul   ebp,DWORD PTR [rsi+0x65],0x73657220
   1400431b8:	gs je  0x1400431db
   1400431bb:	pop    rcx
   1400431bc:	and    BYTE PTR [rbx+0x63],dh
   1400431bf:	(bad)  
   1400431c0:	ins    BYTE PTR es:[rdi],dx
   1400431c1:	gs cmp eax,0x20302e31
   1400431c7:	pop    rcx
   1400431c8:	cmp    ecx,DWORD PTR [rdx]
   1400431ca:	pop    rax
   1400431cb:	or     al,BYTE PTR [rax]
   1400431cd:	add    BYTE PTR [rax],al
   1400431cf:	add    BYTE PTR [rdx+0x65],dh
   1400431d2:	jae    0x140043239
   1400431d4:	je     0x1400431f6
   1400431d6:	and    eax,0x65732073
   1400431db:	je     0x1400431fd
   1400431dd:	je     0x14004324e
   1400431df:	and    BYTE PTR [rbx+0x6e],ch
   1400431e2:	outs   dx,DWORD PTR ds:[rsi]
   1400431e3:	ja     0x140043253
   1400431e5:	and    BYTE PTR [rbx+0x74],dh
   1400431e8:	(bad)  
   1400431e9:	je     0x140043250
   1400431eb:	or     al,BYTE PTR [rax]
   1400431ed:	add    BYTE PTR [rax],al
   1400431ef:	add    BYTE PTR [rip+0x4e472073],ah        # 0x18e4b5268
   1400431f5:	push   rbp
   1400431f6:	and    BYTE PTR [rax+0x69],dh
   1400431f9:	movsxd esp,DWORD PTR [rax]
   1400431fb:	jbe    0x140043270
   1400431fd:	and    BYTE PTR cs:[rcx],dh
   140043200:	xor    BYTE PTR [rax+rbp*2+0x20],dh
   140043204:	rex.RB
   140043205:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x5c64206e
   14004320e:	sub    BYTE PTR [rbp+0x27],ah
   140043211:	je     0x140043278
   140043213:	outs   dx,BYTE PTR ds:[rsi]
   140043214:	je     0x14004327b
   140043216:	or     al,BYTE PTR [rax]
	...
   140043220:	imul   esp,DWORD PTR [rsi+0x20],0x6c6c6966
   140043227:	jbe    0x14004328a
   140043229:	ins    BYTE PTR es:[rdi],dx
   14004322a:	and    BYTE PTR [rsi],bh
   14004322c:	and    BYTE PTR [rax],dh
   14004322e:	cs xor al,0x20
   140043231:	je     0x14004329b
   140043233:	outs   dx,BYTE PTR gs:[rsi]
   140043235:	and    BYTE PTR [rax+0xa],bl
   140043238:	or     DWORD PTR [rbp+riz*2+0x66],esp
   14004323c:	imul   ebp,DWORD PTR [rsi+0x65],0x74657320
   140043243:	imul   bp,WORD PTR [rsp+rbp*2+0x76],0x6c61
   14004324a:	and    BYTE PTR [rcx+0x20],bl
   14004324d:	imul   bp,WORD PTR [rsp+rbp*2+0x76],0x6c61
   140043254:	and    BYTE PTR [rip+0x2d203120],bh        # 0x16d24637a
   14004325a:	and    BYTE PTR [rcx+0x3b],bl
   14004325d:	or     cl,BYTE PTR [rcx]
   14004325f:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6220
   140043267:	outs   dx,DWORD PTR ds:[rsi]
   140043268:	ins    BYTE PTR es:[rdi],dx
   140043269:	and    BYTE PTR fs:[rcx+0x20],bl
   14004326d:	je     0x1400432d7
   14004326f:	imul   esp,DWORD PTR [rbx+0x6b],0x7373656e
   140043276:	and    BYTE PTR [rdx],dh
   140043278:	and    BYTE PTR [rcx+0x3b],bl
   14004327b:	or     al,BYTE PTR [rax]
   14004327d:	add    BYTE PTR [rax],al
   14004327f:	add    BYTE PTR [rcx],cl
   140043281:	and    eax,0x66692073
   140043286:	and    BYTE PTR [rcx+0x6f],bh
   140043289:	jne    0x1400432ab
   14004328b:	jne    0x140043300
   14004328d:	and    BYTE PTR gs:[rdi+0x70],ah
   140043291:	imul   esp,DWORD PTR [rbx+0x20],0x20646e61
   140043298:	imul   esi,DWORD PTR [rax+riz*1+0x62],0x73667261
   1400432a0:	and    BYTE PTR [rdi+0x6e],ch
   1400432a3:	and    BYTE PTR [rbp+0x6e],ah
   1400432a6:	movsxd ebp,DWORD PTR [rdi+0x75]
   1400432a9:	outs   dx,BYTE PTR ds:[rsi]
   1400432aa:	je     0x140043311
   1400432ac:	jb     0x140043317
   1400432ae:	outs   dx,BYTE PTR ds:[rsi]
   1400432af:	and    BYTE PTR [edx],ah
   1400432b2:	jae    0x140043323
   1400432b4:	ins    BYTE PTR es:[rdi],dx
   1400432b5:	imul   esp,DWORD PTR [rdx+riz*1+0x2c],0xa
   1400432bd:	add    BYTE PTR [rax],al
   1400432bf:	add    BYTE PTR [rcx],cl
   1400432c1:	and    eax,0x6e690973
   1400432c6:	jae    0x14004333c
   1400432c8:	(bad)  
   1400432c9:	ins    BYTE PTR es:[rdi],dx
   1400432ca:	ins    BYTE PTR es:[rdi],dx
   1400432cb:	and    BYTE PTR [rcx+0x20],ah
   1400432ce:	ins    DWORD PTR es:[rdi],dx
   1400432cf:	outs   dx,DWORD PTR ds:[rsi]
   1400432d0:	jb     0x140043337
   1400432d2:	and    BYTE PTR [rdx+0x65],dh
   1400432d5:	movsxd esp,DWORD PTR [rbp+0x6e]
   1400432d8:	je     0x1400432fa
   1400432da:	jbe    0x140043341
   1400432dc:	jb     0x140043351
   1400432de:	imul   ebp,DWORD PTR [rdi+0x6e],0x20666f20
   1400432e5:	addr32 jo 0x140043351
   1400432e8:	movsxd esp,DWORD PTR [rax]
   1400432ea:	outs   dx,DWORD PTR ds:[rsi]
   1400432eb:	jb     0x14004330d
   1400432ed:	jae    0x140043366
   1400432ef:	imul   esi,DWORD PTR [rbx+riz*2+0x68],0x206f7420
   1400432f7:	rex.R push rdi
   1400432f9:	rex.X and BYTE PTR [rdi+0x72],bpl
   1400432fd:	and    BYTE PTR [rcx],dh
   1400432ff:	xor    BYTE PTR [rax+rbp*2+0x20],dh
   140043303:	rex.RB
   140043304:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x6970206e
   14004330d:	movsxd edi,DWORD PTR [rbx]
   14004330f:	or     al,BYTE PTR [rax]
	...
   14004331d:	add    BYTE PTR [rax],al
   14004331f:	add    BYTE PTR [rcx],cl
   140043321:	and    eax,0x6f730973
   140043326:	jb     0x14004339a
   140043328:	jns    0x140043356
   14004332a:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14004332e:	and    BYTE PTR [rdi+0x72],ah
   140043331:	outs   dx,DWORD PTR ds:[rsi]
   140043332:	data16 data16 and BYTE PTR [rsi+0x6f],ah
   140043337:	ins    BYTE PTR es:[rdi],dx
   140043338:	imul   esi,DWORD PTR [rbx+0x20],0x63
   14004333c:	push   0x65676e61
   140043341:	and    BYTE PTR fs:[rdi+0x70],ah
   140043345:	imul   esp,DWORD PTR [rbx+0x3b],0x6e657320
   14004334c:	and    BYTE PTR fs:[rcx+0x6e],ah
   140043350:	jns    0x140043372
   140043352:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140043355:	jo     0x1400433c3
   140043357:	(bad)  
   140043358:	imul   ebp,DWORD PTR [rsi+0x74],0x206f7420
   14004335f:	je     0x1400433c9
   140043361:	gs ins DWORD PTR es:[rdi],dx
   140043363:	cmp    ecx,DWORD PTR [rdx]
	...
   14004336d:	add    BYTE PTR [rax],al
   14004336f:	add    BYTE PTR [rax+0x20],bl
   140043372:	gs ins BYTE PTR es:[rdi],dx
   140043374:	jae    0x1400433db
   140043376:	and    BYTE PTR [rdx+0xa],bl
   140043379:	or     DWORD PTR [rbp+riz*2+0x66],esp
   14004337d:	imul   ebp,DWORD PTR [rsi+0x65],0x74657320
   140043384:	imul   bp,WORD PTR [rsp+rbp*2+0x76],0x6c61
   14004338b:	and    BYTE PTR [rcx+0x20],bl
   14004338e:	imul   bp,WORD PTR [rsp+rbp*2+0x76],0x6c61
   140043395:	and    BYTE PTR [rip+0xa3b5920],bh        # 0x14a3f8cbb
   14004339b:	or     DWORD PTR [rbp+riz*2+0x66],esp
   14004339f:	imul   ebp,DWORD PTR [rsi+0x65],0x6c6f6220
   1400433a6:	and    BYTE PTR fs:[rcx+0x20],bl
   1400433aa:	pop    rcx
   1400433ab:	cmp    ecx,DWORD PTR [rdx]
   1400433ad:	or     DWORD PTR [rbp+riz*2+0x66],esp
   1400433b1:	imul   ebp,DWORD PTR [rsi+0x65],0x6c696620
   1400433b8:	ins    BYTE PTR es:[rdi],dx
   1400433b9:	gs and BYTE PTR fs:[rcx+0x20],bl
   1400433be:	imul   bp,WORD PTR [rsp+rbp*2+0x20],0x3b59
   1400433c5:	or     bl,BYTE PTR [rdx+0xa]
	...
   1400433d0:	and    eax,0x72612073
   1400433d5:	jb     0x140043446
   1400433d7:	ja     0x140043441
   1400433d9:	gs (bad) 
   1400433db:	and    BYTE PTR fs:[rax+0x61],ch
   1400433df:	jae    0x140043401
   1400433e1:	outs   dx,BYTE PTR ds:[rsi]
   1400433e2:	outs   dx,DWORD PTR ds:[rsi]
   1400433e3:	and    BYTE PTR [rbp+0x65],ch
   1400433e6:	(bad)  
   1400433e7:	outs   dx,BYTE PTR ds:[rsi]
   1400433e8:	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
   1400433ef:	rex.R push rdi
   1400433f1:	rex.X and BYTE PTR [rdx],sil
   1400433f4:	sub    al,0x20
   1400433f6:	(bad)  
   1400433f7:	jb     0x14004346b
   1400433f9:	outs   dx,DWORD PTR ds:[rsi]
   1400433fa:	ja     0x140043464
   1400433fc:	gs (bad) 
   1400433fe:	and    BYTE PTR fs:[rip+0x6d203720],bh        # 0x1ad246b25
   140043405:	(bad)  
   140043406:	imul   esp,DWORD PTR [rbp+0x73],0x20
   14004340a:	imul   bp,WORD PTR [rsp+rbp*2+0x65],0x2064
   140043411:	(bad)  
   140043412:	jb     0x140043486
   140043414:	outs   dx,DWORD PTR ds:[rsi]
   140043415:	ja     0x14004347f
   140043417:	gs (bad) 
   140043419:	fs jae 0x14004343c
   14004341c:	imul   ebp,DWORD PTR [rsi+0x20],0x63697067
   140043423:	and    BYTE PTR [rcx+0x6e],ah
   140043426:	and    BYTE PTR fs:[rcx+0x6e],ch
   14004342a:	and    BYTE PTR [rcx],dh
   14004342c:	xor    BYTE PTR [rax+rbp*2+0x20],dh
   140043430:	rex.RB
   140043431:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0xa6e
   14004343a:	add    BYTE PTR [rax],al
   14004343c:	add    BYTE PTR [rax],al
   14004343e:	add    BYTE PTR [rax],al
   140043440:	and    eax,0x72612073
   140043445:	jb     0x1400434b6
   140043447:	ja     0x1400434b1
   140043449:	gs (bad) 
   14004344b:	and    BYTE PTR fs:[rcx+0x73],ch
   14004344f:	and    BYTE PTR [rbp+0x6e],dh
   140043452:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
   14004345a:	imul   ebp,DWORD PTR [rsi+0x20],0x20425744
   140043461:	xor    ch,BYTE PTR [rax+riz*1]
   140043464:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14004346b:	ins    BYTE PTR es:[rdi],dx
   14004346c:	jns    0x14004348e
   14004346e:	xor    DWORD PTR [rax],esp
   140043470:	imul   ebp,DWORD PTR [rsi+0x20],0x63697067
   140043477:	sub    al,0x20
   140043479:	xor    ah,BYTE PTR [rax]
   14004347b:	imul   ebp,DWORD PTR [rsi+0x20],0x68743031
   140043482:	and    BYTE PTR [rbp+0x64],al
   140043485:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0xa6e
   14004348d:	add    BYTE PTR [rax],al
   14004348f:	add    BYTE PTR [rcx+0x72],ah
   140043492:	jb     0x140043503
   140043494:	ja     0x1400434fe
   140043496:	gs (bad) 
   140043498:	and    BYTE PTR fs:[rip+0x25203720],bh        # 0x165246bbf
   14004349f:	jae    0x1400434c1
   1400434a1:	outs   dx,BYTE PTR ds:[rsi]
   1400434a2:	outs   dx,DWORD PTR ds:[rsi]
   1400434a3:	je     0x1400434c5
   1400434a5:	jne    0x14004351a
   1400434a7:	gs and BYTE PTR fs:[rdx+0x79],ah
   1400434ac:	and    BYTE PTR [rdi+0x72],ah
   1400434af:	(bad)  
   1400434b0:	jo     0x14004351a
   1400434b2:	jbe    0x14004351d
   1400434b4:	jp     0x1400434c0
	...
   1400434be:	add    BYTE PTR [rax],al
   1400434c0:	and    eax,0x4e472073
   1400434c5:	push   rbp
   1400434c6:	and    BYTE PTR [rax+0x69],dh
   1400434c9:	movsxd esp,DWORD PTR [rax]
   1400434cb:	jae    0x140043542
   1400434cd:	jo     0x14004353f
   1400434cf:	outs   dx,DWORD PTR ds:[rsi]
   1400434d0:	jb     0x140043546
   1400434d2:	jae    0x1400434f4
   1400434d4:	(bad)  
   1400434d5:	and    BYTE PTR [rdx+0x6f],ah
   1400434d8:	js     0x14004354c
   1400434da:	(bad)  
   1400434db:	and    BYTE PTR fs:[rsi+0x61],dh
   1400434df:	jb     0x14004354a
   1400434e1:	(bad)  
   1400434e2:	(bad)  
   1400434e3:	ins    BYTE PTR es:[rdi],dx
   1400434e4:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   1400434e9:	fs jb  0x14004354d
   1400434ec:	ja     0x14004350e
   1400434ee:	(bad)  
   1400434ef:	outs   dx,DWORD PTR ds:[rsi]
   1400434f0:	js     0x140043557
   1400434f2:	jae    0x140043514
   1400434f4:	ja     0x14004355f
   1400434f6:	je     0x140043560
   1400434f8:	and    BYTE PTR [rdx+0x6f],dh
   1400434fb:	jne    0x14004356b
   1400434fd:	fs gs and BYTE PTR fs:[rbx+0x6f],ah
   140043503:	jb     0x140043573
   140043505:	gs jb  0x14004357b
   140043508:	cmp    esp,DWORD PTR [rax]
   14004350a:	rex.R push rdi
   14004350c:	rex.X and BYTE PTR [rcx+0x6e],spl
   140043510:	and    BYTE PTR fs:[rcx],dh
   140043513:	xor    BYTE PTR [rax+rbp*2+0x20],dh
   140043517:	rex.RB
   140043518:	fs and BYTE PTR cs:[rdi+rbp*2+0x20],ah
   14004351e:	outs   dx,BYTE PTR ds:[rsi]
   14004351f:	outs   dx,DWORD PTR ds:[rsi]
   140043520:	je     0x14004352c
   140043522:	add    BYTE PTR [rax],al
   140043524:	add    BYTE PTR [rax],al
   140043526:	add    BYTE PTR [rax],al
   140043528:	(bad)  
   140043529:	outs   dx,DWORD PTR ds:[rsi]
   14004352a:	js     0x14004359e
   14004352c:	(bad)  
   14004352d:	and    BYTE PTR fs:[rip+0x25203020],bh        # 0x165246554
   140043534:	jae    0x140043556
   140043536:	outs   dx,BYTE PTR ds:[rsi]
   140043537:	outs   dx,DWORD PTR ds:[rsi]
   140043538:	and    BYTE PTR [rdx+0x6f],dh
   14004353b:	jne    0x1400435ab
   14004353d:	fs gs and BYTE PTR fs:[rbx+0x6f],ah
   140043543:	jb     0x1400435b3
   140043545:	gs jb  0x1400435bb
   140043548:	and    BYTE PTR [rcx+0x6e],ch
   14004354b:	and    BYTE PTR [rdi+0x72],ah
   14004354e:	(bad)  
   14004354f:	jo     0x1400435b9
   140043551:	jbe    0x1400435bc
   140043553:	jp     0x14004355f
	...
   14004355d:	add    BYTE PTR [rax],al
   14004355f:	add    BYTE PTR [rip+0x4e472073],ah        # 0x18e4b55d8
   140043565:	push   rbp
   140043566:	and    BYTE PTR [rax+0x69],dh
   140043569:	movsxd esp,DWORD PTR [rax]
   14004356b:	jae    0x1400435e2
   14004356d:	jo     0x1400435df
   14004356f:	outs   dx,DWORD PTR ds:[rsi]
   140043570:	jb     0x1400435e6
   140043572:	jae    0x140043594
   140043574:	(bad)  
   140043575:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   140043579:	gs je  0x1400435e4
   14004357c:	imul   esp,DWORD PTR [rbx+0x6b],0x72617620
   140043583:	imul   esp,DWORD PTR [rcx+0x62],0x7420656c
   14004358a:	outs   dx,DWORD PTR ds:[rsi]
   14004358b:	and    BYTE PTR [rbx+0x65],dh
   14004358e:	je     0x1400435b0
   140043590:	ins    BYTE PTR es:[rdi],dx
   140043591:	imul   ebp,DWORD PTR [rsi+0x65],0x69687420
   140043598:	movsxd ebp,DWORD PTR [rbx+0x6e]
   14004359b:	gs jae 0x140043611
   14004359e:	cmp    esp,DWORD PTR [rax]
   1400435a0:	rex.R push rdi
   1400435a2:	rex.X and BYTE PTR [rcx+0x6e],spl
   1400435a6:	and    BYTE PTR fs:[rcx],dh
   1400435a9:	xor    BYTE PTR [rax+rbp*2+0x20],dh
   1400435ad:	rex.RB
   1400435ae:	fs and BYTE PTR cs:[rdi+rbp*2+0x20],ah
   1400435b4:	outs   dx,BYTE PTR ds:[rsi]
   1400435b5:	outs   dx,DWORD PTR ds:[rsi]
   1400435b6:	je     0x1400435c2
	...
   1400435c0:	ins    BYTE PTR es:[rdi],dx
   1400435c1:	imul   ebp,DWORD PTR [rsi+0x65],0x63696874
   1400435c8:	imul   esp,DWORD PTR [rax],0x3d
   1400435cb:	and    BYTE PTR [rax],dh
   1400435cd:	cmp    esp,DWORD PTR [rax]
   1400435cf:	outs   dx,DWORD PTR ds:[rsi]
   1400435d0:	ins    BYTE PTR es:[rdi],dx
   1400435d1:	fs ins BYTE PTR es:[rdi],dx
   1400435d3:	imul   ebp,DWORD PTR [rsi+0x65],0x63696874
   1400435da:	imul   esp,DWORD PTR [rax],0x3d
   1400435dd:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   1400435e1:	gs je  0x14004364c
   1400435e4:	imul   esp,DWORD PTR [rbx+0x6b],0xa
   1400435eb:	add    BYTE PTR [rax],al
   1400435ed:	add    BYTE PTR [rax],al
   1400435ef:	add    BYTE PTR [rip+0x502e2073],ah        # 0x190325668
   1400435f5:	push   rbx
   1400435f6:	and    BYTE PTR [rdi+0x2f],dh
   1400435f9:	outs   dx,DWORD PTR ds:[rsi]
   1400435fa:	and    BYTE PTR [rcx+0x72],ah
   1400435fd:	addr32 jae 0x140043620
   140043600:	movsxd esp,DWORD PTR [rcx+0x75]
   140043603:	jae    0x14004366a
   140043605:	jae    0x140043627
   140043607:	rex.RXB
   140043608:	rex.WRX push rbp
   14004360a:	and    BYTE PTR [rax+0x69],dh
   14004360d:	movsxd esp,DWORD PTR [rax]
   14004360f:	je     0x140043680
   140043611:	and    BYTE PTR [rbx+0x63],dh
   140043614:	(bad)  
   140043615:	ins    BYTE PTR es:[rdi],dx
   140043616:	and    BYTE PTR gs:[rdx+rsi*2+0x61],ah
   14004361b:	ja     0x140043686
   14004361d:	outs   dx,BYTE PTR ds:[rsi]
   14004361e:	and    BYTE PTR [edi+ebp*2+0x20],dh
   140043623:	imul   si,WORD PTR [rax+riz*1+0x38],0x352e
   14004362a:	js     0x14004365d
   14004362c:	xor    DWORD PTR [rax],esp
   14004362e:	jo     0x140043691
   140043630:	jo     0x140043697
   140043632:	jb     0x14004366f
   140043634:	and    BYTE PTR [rdi+rdx*2+0x42],al
   140043638:	and    BYTE PTR [rdi+rbp*2+0x65],ah
   14004363c:	jae    0x14004365e
   14004363e:	outs   dx,BYTE PTR ds:[rsi]
   14004363f:	outs   dx,DWORD PTR ds:[rsi]
   140043640:	je     0x14004364c
	...
   14004364e:	add    BYTE PTR [rax],al
   140043650:	and    eax,0x616d2073
   140043655:	js     0x1400436c7
   140043657:	jae    0x1400436c1
   140043659:	je     0x14004367b
   14004365b:	(bad)  
   14004365c:	outs   dx,BYTE PTR ds:[rsi]
   14004365d:	and    BYTE PTR fs:[rbp+0x61],ch
   140043661:	js     0x1400436d3
   140043663:	jae    0x1400436dc
   140043665:	imul   esp,DWORD PTR [rax+riz*1+0x68],0x20657661
   14004366d:	outs   dx,BYTE PTR ds:[rsi]
   14004366e:	outs   dx,DWORD PTR ds:[rsi]
   14004366f:	and    BYTE PTR [rbp+0x65],ch
   140043672:	(bad)  
   140043673:	outs   dx,BYTE PTR ds:[rsi]
   140043674:	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
   14004367b:	rex.R push rdi
   14004367d:	rex.X and BYTE PTR [rdx],sil
   140043680:	xor    BYTE PTR cs:[rax+riz*1],ch
   140043684:	jae    0x1400436eb
   140043686:	je     0x1400436a8
   140043688:	jo     0x1400436eb
   14004368a:	and    BYTE PTR gs:[edx+0x6f],ah
   14004368f:	jne    0x1400436ff
   140043691:	fs (bad) 
   140043693:	jb     0x1400436fe
   140043695:	gs jae 0x1400436b8
   140043698:	imul   ebp,DWORD PTR [rsi+0x20],0x63697067
   14004369f:	and    BYTE PTR [rcx+0x6e],ah
   1400436a2:	and    BYTE PTR fs:[rcx+0x6e],ch
   1400436a6:	and    BYTE PTR [rcx],dh
   1400436a8:	xor    BYTE PTR [rax+rbp*2+0x20],dh
   1400436ac:	rex.RB
   1400436ad:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0xa6e
	...
   1400436be:	add    BYTE PTR [rax],al
   1400436c0:	and    eax,0x616d2073
   1400436c5:	js     0x140043737
   1400436c7:	jae    0x140043731
   1400436c9:	je     0x1400436eb
   1400436cb:	(bad)  
   1400436cc:	outs   dx,BYTE PTR ds:[rsi]
   1400436cd:	and    BYTE PTR fs:[rbp+0x61],ch
   1400436d1:	js     0x140043743
   1400436d3:	jae    0x14004374c
   1400436d5:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x70206572
   1400436dd:	jb     0x140043744
   1400436df:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
   1400436e7:	je     0x140043758
   1400436e9:	and    BYTE PTR [rcx],dh
   1400436eb:	xor    DWORD PTR [rsi],ebp
   1400436ed:	xor    BYTE PTR [rax],ah
   1400436ef:	(bad)  
   1400436f0:	outs   dx,BYTE PTR ds:[rsi]
   1400436f1:	and    BYTE PTR fs:[rax],bh
   1400436f4:	cs xor eax,0x206e6920
   1400436fa:	addr32 jo 0x140043766
   1400436fd:	movsxd ecx,DWORD PTR [rdx]
   1400436ff:	add    BYTE PTR [rbp+0x61],ch
   140043702:	js     0x140043774
   140043704:	jae    0x14004376e
   140043706:	je     0x140043728
   140043708:	cmp    eax,0xa662520
   14004370d:	ins    DWORD PTR es:[rdi],dx
   14004370e:	(bad)  
   14004370f:	js     0x140043781
   140043711:	jae    0x14004378a
   140043713:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa662520
   14004371b:	add    BYTE PTR [rax],al
   14004371d:	add    BYTE PTR [rax],al
   14004371f:	add    BYTE PTR [rdi+rbp*2+0x74],al
   140043723:	cmp    ah,BYTE PTR [rax]
   140043725:	pop    rbx
   140043726:	or     al,BYTE PTR [rax]
	...
   140043730:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6120
   140043738:	je     0x1400437ae
   14004373a:	jb     0x1400437af
   14004373c:	xor    BYTE PTR [rax],ah
   14004373e:	and    eax,0x25252025
   140043743:	cmp    esp,DWORD PTR [rax]
   140043745:	fs imul bp,WORD PTR gs:[rsi+0x65],0x7520
   14004374d:	outs   dx,BYTE PTR ds:[rsi]
   14004374e:	imul   bp,WORD PTR [rsp+rbp*2+0x65],0x2064
   140043755:	and    eax,0x25252025
   14004375a:	cmp    esp,DWORD PTR [rax]
   14004375c:	fs imul bp,WORD PTR gs:[rsi+0x65],0x7220
   140043764:	outs   dx,DWORD PTR ds:[rsi]
   140043765:	jne    0x1400437d5
   140043767:	fs gs and BYTE PTR fs:[rip+0x25252025],ah        # 0x165295795
   140043770:	cmp    esp,DWORD PTR [rax]
   140043772:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6420
   14004377a:	imul   esp,DWORD PTR [rcx+0x67],0x6c616e6f
   140043781:	jae    0x1400437a3
   140043783:	and    eax,0x25252025
   140043788:	or     al,BYTE PTR [rax]
   14004378a:	add    BYTE PTR [rax],al
   14004378c:	pop    rbp
   14004378d:	or     ch,BYTE PTR [rsi]
   14004378f:	push   rax
   140043790:	or     r8b,BYTE PTR [r8]
	...
   14004379f:	add    BYTE PTR [rbx+0x0],ah
   1400437a2:	cmp    al,BYTE PTR [rax]
   1400437a4:	pop    rsp
   1400437a5:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400437a9:	add    BYTE PTR [rbp+0x0],ch
   1400437ac:	jo     0x1400437ae
   1400437ae:	pop    rsp
   1400437af:	add    BYTE PTR [rdx+0x0],ah
   1400437b2:	(bad)  
   1400437b3:	add    BYTE PTR [rax+rax*1+0x73],dh
   1400437b7:	add    BYTE PTR [rbp+0x0],ah
   1400437ba:	jb     0x1400437bc
   1400437bc:	jbe    0x1400437be
   1400437be:	add    BYTE PTR gs:[rax+rax*1+0x77],bl
   1400437c3:	add    BYTE PTR [rcx+0x0],ch
   1400437c6:	outs   dx,BYTE PTR ds:[rsi]
   1400437c7:	add    BYTE PTR [rsi],dh
   1400437c9:	add    BYTE PTR [rax+rax*1],dh
   1400437cc:	pop    rsp
   1400437cd:	add    BYTE PTR [rdi+0x0],ah
   1400437d0:	jb     0x1400437d2
   1400437d2:	(bad)  
   1400437d3:	add    BYTE PTR [rax+0x0],dh
   1400437d6:	push   0x69007600
   1400437db:	add    BYTE PTR [rdx+0x0],bh
   1400437de:	pop    rsp
   1400437df:	add    BYTE PTR [rax+rax*1+0x6f],ah
   1400437e3:	add    BYTE PTR [rax+rax*1+0x6e],dh
   1400437e7:	add    BYTE PTR [rbp+0x0],ah
   1400437ea:	(bad)  
   1400437eb:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400437ef:	add    BYTE PTR [rax+rax*1+0x63],bl
   1400437f3:	add    BYTE PTR [rdi+0x0],ch
   1400437f6:	ins    DWORD PTR es:[rdi],dx
   1400437f7:	add    BYTE PTR [rbp+0x0],ch
   1400437fa:	outs   dx,DWORD PTR ds:[rsi]
   1400437fb:	add    BYTE PTR [rsi+0x0],ch
   1400437fe:	pop    rsp
   1400437ff:	add    BYTE PTR [rax+0x0],dh
   140043802:	imul   eax,DWORD PTR [rax],0x670063
   140043808:	add    BYTE PTR gs:[rsi+0x0],ch
   14004380c:	add    BYTE PTR cs:[rbx+0x0],ah
   140043810:	add    BYTE PTR [rax],al
   140043812:	add    BYTE PTR [rax],al
   140043814:	and    eax,0x73250973
   140043819:	or     al,BYTE PTR [rax]
   14004381b:	add    BYTE PTR [rax],al
   14004381d:	add    BYTE PTR [rax],al
   14004381f:	add    BYTE PTR [rip+0x73250973],ah        # 0x1b3294198
   140043825:	and    BYTE PTR [rip+0x7325203e],ch        # 0x1b3295869
   14004382b:	or     al,BYTE PTR [rax]
   14004382d:	add    BYTE PTR [rax],al
   14004382f:	add    BYTE PTR [rbx+0x74],dh
   140043832:	imul   esp,DWORD PTR [rax],0x6f
   140043835:	jbe    0x14004389d
   140043837:	ins    BYTE PTR es:[rdi],dx
	...
   140043840:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6120
   140043848:	je     0x1400438be
   14004384a:	jb     0x1400438bf
   14004384c:	and    eax,0x25252064
   140043851:	and    BYTE PTR [rip+0xa25],ah        # 0x14004427c
   140043857:	add    BYTE PTR [rbx+0x74],dh
   14004385a:	imul   esp,DWORD PTR [rax],0x75
   14004385d:	outs   dx,BYTE PTR ds:[rsi]
   14004385e:	fs data16 ins BYTE PTR es:[rdi],dx
   140043861:	add    BYTE PTR [rax],al
   140043863:	add    BYTE PTR [rax],al
   140043865:	add    BYTE PTR [rax],al
   140043867:	add    BYTE PTR [rsi],ch
   140043869:	data16 je 0x14004388c
   14004386c:	and    eax,0x2e000a73
   140043871:	jo     0x1400438e6
   140043873:	and    BYTE PTR [rip+0x6e5c2a64],ah        # 0x1ae6062dd
   140043879:	sub    BYTE PTR [rbx+0x46],dl
   14004387c:	jne    0x1400438ad
   14004387e:	and    eax,0x7566302e
   140043883:	or     al,BYTE PTR [rax]
   140043885:	add    BYTE PTR [rax],al
   140043887:	add    BYTE PTR [rcx+rbp*2+0x6e],ch
   14004388b:	gs je  0x1400438f6
   14004388e:	imul   esp,DWORD PTR [rbx+0x6b],0x6f203d20
   140043895:	ins    BYTE PTR es:[rdi],dx
   140043896:	fs ins BYTE PTR es:[rdi],dx
   140043898:	imul   ebp,DWORD PTR [rsi+0x65],0x63696874
   14004389f:	imul   ecx,DWORD PTR [rdx],0x0
   1400438a2:	add    BYTE PTR [rax],al
   1400438a4:	pop    rsp
   1400438a5:	sub    BYTE PTR [rdx+0x73],dh
	...
   1400438b0:	and    ah,BYTE PTR [rip+0x61202273]        # 0x1a1245b29
   1400438b6:	je     0x1400438d8
   1400438b8:	sub    BYTE PTR [rip+0x2c66352e],ah        # 0x16c6a6dec
   1400438be:	and    eax,0x2966352e
   1400438c3:	cmp    ecx,DWORD PTR [rdx]
   1400438c5:	add    BYTE PTR [rax],al
   1400438c7:	add    BYTE PTR [rbx+0x65],dh
   1400438ca:	je     0x140043932
   1400438cc:	imul   ebp,DWORD PTR [rsp+rbp*2+0x76],0x25206c61
   1400438d4:	data16 or al,BYTE PTR [rax]
   1400438d7:	add    BYTE PTR [rbp+riz*2+0x66],ah
   1400438db:	imul   ebp,DWORD PTR [rsi+0x65],0x74746120
   1400438e2:	jb     0x140043957
   1400438e4:	and    eax,0x25252064
   1400438e9:	add    BYTE PTR [rax],al
   1400438eb:	add    BYTE PTR [rax],al
   1400438ed:	add    BYTE PTR [rax],al
   1400438ef:	add    BYTE PTR [rbx+0x65],dh
   1400438f2:	je     0x140043960
   1400438f4:	imul   ebp,DWORD PTR [rsi+0x65],0x74646977
   1400438fb:	push   0x0
   140043900:	outs   dx,DWORD PTR ds:[rsi]
   140043901:	ins    BYTE PTR es:[rdi],dx
   140043902:	fs ins BYTE PTR es:[rdi],dx
   140043904:	imul   ebp,DWORD PTR [rsi+0x65],0x63696874
   14004390b:	imul   esp,DWORD PTR [rax],0x3d
   14004390e:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   140043912:	gs je  0x14004397d
   140043915:	imul   esp,DWORD PTR [rbx+0x6b],0x6e696c3b
   14004391c:	gs je  0x140043987
   14004391f:	imul   esp,DWORD PTR [rbx+0x6b],0x25203d20
   140043926:	ins    BYTE PTR es:[rdi],dx
   140043927:	and    BYTE PTR fs:[rdx],ch
   14004392a:	and    BYTE PTR [rbx+0x63],dh
   14004392d:	(bad)  
   14004392e:	ins    BYTE PTR es:[rdi],dx
   14004392f:	gs je  0x14004399a
   140043932:	imul   esp,DWORD PTR [rbx+0x6b],0x7373656e
   140043939:	and    BYTE PTR [rdi],ch
   14004393b:	and    BYTE PTR [rip+0xa66302e],ah        # 0x14a6a696f
   140043941:	add    BYTE PTR [rax],al
   140043943:	add    BYTE PTR [rax],ah
   140043945:	and    eax,0xa25
   14004394a:	add    BYTE PTR [rax],al
   14004394c:	imul   bp,WORD PTR [rsp+rbp*2+0x20],0x0
   140043953:	add    BYTE PTR [rax],al
   140043955:	add    BYTE PTR [rax],al
   140043957:	add    BYTE PTR [rbp+0x6c],ah
   14004395a:	ins    BYTE PTR es:[rdi],dx
   14004395b:	imul   esi,DWORD PTR [rax+0x73],0x74612065
   140043962:	je     0x1400439d6
   140043964:	jae    0x14004398b
   140043966:	and    BYTE PTR fs:[rip+0x64697773],ah        # 0x1a46db0e0
   14004396d:	and    BYTE PTR [rip+0x2066352e],ah        # 0x1606a6ea1
   140043973:	push   0x2e252074
   140043978:	xor    eax,0x74612066
   14004397d:	and    BYTE PTR [rax],ch
   14004397f:	and    eax,0x2c66352e
   140043984:	and    eax,0x2966352e
   140043989:	cmp    ecx,DWORD PTR [rdx]
   14004398b:	add    BYTE PTR [rax],al
   14004398d:	add    BYTE PTR [rax],al
   14004398f:	add    BYTE PTR [rax+0x25],dl
   140043992:	cmp    ah,BYTE PTR fs:[rax]
   140043995:	and    eax,0xa73
   14004399a:	add    BYTE PTR [rax],al
   14004399c:	add    BYTE PTR [rax],al
   14004399e:	add    BYTE PTR [rax],al
   1400439a0:	ins    DWORD PTR es:[rdi],dx
   1400439a1:	outs   dx,DWORD PTR ds:[rsi]
   1400439a2:	jbe    0x140043a09
   1400439a4:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   1400439a8:	push   rax
   1400439a9:	and    eax,0x6c203b64
   1400439ae:	imul   ebp,DWORD PTR [rsi+0x65],0x74746120
   1400439b5:	jb     0x140043a2a
   1400439b7:	and    eax,0x6f742064
   1400439bc:	and    BYTE PTR [rax+0x25],dl
   1400439bf:	or     al,BYTE PTR fs:[rax]
   1400439c2:	add    BYTE PTR [rax],al
   1400439c4:	add    BYTE PTR [rax],al
   1400439c6:	add    BYTE PTR [rax],al
   1400439c8:	ins    DWORD PTR es:[rdi],dx
   1400439c9:	outs   dx,DWORD PTR ds:[rsi]
   1400439ca:	jbe    0x140043a31
   1400439cc:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   1400439d0:	push   rax
   1400439d1:	and    eax,0x6c203b64
   1400439d6:	imul   ebp,DWORD PTR [rsi+0x65],0x74746120
   1400439dd:	jb     0x140043a52
   1400439df:	and    eax,0x6f742064
   1400439e4:	and    BYTE PTR [rax+0x30],dl
   1400439e7:	or     al,BYTE PTR [rax]
   1400439e9:	add    BYTE PTR [rax],al
   1400439eb:	add    BYTE PTR [rax],al
   1400439ed:	add    BYTE PTR [rax],al
   1400439ef:	add    BYTE PTR [rdx+0x6f],ah
   1400439f2:	js     0x140043a14
   1400439f4:	(bad)  
   1400439f5:	je     0x140043a6b
   1400439f7:	jb     0x140043a6c
   1400439f9:	and    eax,0x73252064
   1400439fe:	ja     0x140043a69
   140043a00:	and    BYTE PTR fs:[rip+0x2066352e],ah        # 0x1606a6f35
   140043a07:	push   0x2e252074
   140043a0c:	xor    eax,0x74612066
   140043a11:	and    BYTE PTR [rax],ch
   140043a13:	and    eax,0x2c66352e
   140043a18:	and    eax,0x2966352e
   140043a1d:	cmp    ecx,DWORD PTR [rdx]
   140043a1f:	add    BYTE PTR [rbx+0x68],dh
   140043a22:	(bad)  
   140043a23:	jo     0x140043a8a
   140043a25:	and    BYTE PTR [rsi+0x69],ah
   140043a28:	ins    BYTE PTR es:[rdi],dx
   140043a29:	ins    BYTE PTR es:[rdi],dx
   140043a2a:	add    BYTE PTR [rax],al
   140043a2c:	add    BYTE PTR [rax],al
   140043a2e:	add    BYTE PTR [rax],al
   140043a30:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2520
   140043a38:	jae    0x140043a5a
   140043a3a:	jnp    0x140043a46
   140043a3c:	add    BYTE PTR [rax],al
   140043a3e:	add    BYTE PTR [rax],al
   140043a40:	jge    0x140043a4c
   140043a42:	and    eax,0xa73
   140043a47:	add    BYTE PTR [rsi+0x6f],ch
   140043a4a:	je     0x140043a6c
   140043a4c:	jae    0x140043ac3
   140043a4e:	jo     0x140043ac0
   140043a50:	outs   dx,DWORD PTR ds:[rsi]
   140043a51:	jae    0x140043ab8
   140043a53:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
   140043a58:	(bad)  
   140043a59:	and    BYTE PTR gs:[rbp+0x61],ch
   140043a5d:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
   140043a61:	and    BYTE PTR [rcx+0x72],ah
   140043a64:	jb     0x140043ad5
   140043a66:	ja     0x140043adb
   140043a68:	and    BYTE PTR [rax+0x65],ch
   140043a6b:	jb     0x140043ad2
   140043a6d:	and    DWORD PTR [rax],eax
   140043a6f:	add    BYTE PTR [rax+0x30],dl
   140043a72:	cmp    ah,BYTE PTR [rax]
   140043a74:	and    eax,0x6d000a73
   140043a79:	outs   dx,DWORD PTR ds:[rsi]
   140043a7a:	jbe    0x140043ae1
   140043a7c:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   140043a80:	push   rax
   140043a81:	and    eax,0x6c203b64
   140043a86:	imul   ebp,DWORD PTR [rsi+0x65],0x74746120
   140043a8d:	jb     0x140043b02
   140043a8f:	and    eax,0x6f742064
   140043a94:	and    BYTE PTR [rax+0x25],dl
   140043a97:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
   140043a9c:	outs   dx,BYTE PTR ds:[rsi]
   140043a9d:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   140043aa1:	push   rax
   140043aa2:	and    eax,0xa64
   140043aa7:	add    BYTE PTR [rdi],ah
   140043aa9:	pop    rsp
   140043aaa:	and    ah,BYTE PTR [rax]
   140043aac:	and    eax,0xa73
   140043ab1:	add    BYTE PTR [rax],al
   140043ab3:	add    BYTE PTR [rax],al
   140043ab5:	add    BYTE PTR [rdx+0x40],ah
   140043ab8:	add    BYTE PTR [rax],al
   140043aba:	add    BYTE PTR [rax],al
   140043abc:	add    BYTE PTR [rax],al
   140043abe:	imul   eax,DWORD PTR [rax+0x72],0x65
   140043ac2:	movsxd esi,DWORD PTR [rax+riz*1+0x25]
   140043ac6:	jae    0x140043ae8
   140043ac8:	and    eax,0x64252c64
   140043acd:	and    BYTE PTR [rip+0x64252c64],ah        # 0x1a4296737
   140043ad3:	or     al,BYTE PTR [rax]
   140043ad5:	add    BYTE PTR [rax],al
   140043ad7:	add    BYTE PTR [rdx+0x65],dh
   140043ada:	movsxd esi,DWORD PTR [rcx+riz*2+0x6e]
   140043ade:	ins    BYTE PTR es:[edi],dx
   140043ae0:	and    BYTE PTR gs:[rax],ch
   140043ae3:	and    eax,0x64252c64
   140043ae8:	sub    DWORD PTR [rax],esp
   140043aea:	sub    BYTE PTR [rip+0x64252c64],ah        # 0x1a4296754
   140043af0:	sub    DWORD PTR [rax],esp
   140043af2:	and    eax,0x73252073
   140043af7:	or     al,BYTE PTR [rax]
   140043af9:	add    BYTE PTR [rax],al
   140043afb:	add    BYTE PTR [rax],al
   140043afd:	add    BYTE PTR [rax],al
   140043aff:	add    BYTE PTR [rcx+riz*2],bh
   140043b02:	jb     0x140043b69
   140043b04:	(bad)  
   140043b05:	and    BYTE PTR [rbx+0x68],dh
   140043b08:	(bad)  
   140043b09:	jo     0x140043b70
   140043b0b:	cmp    eax,0x63657222
   140043b10:	je     0x140043b34
   140043b12:	and    BYTE PTR [rax+0x72],ch
   140043b15:	gs cmp ax,0x2522
   140043b1a:	jae    0x140043b3e
   140043b1c:	add    BYTE PTR [rax],al
   140043b1e:	add    BYTE PTR [rax],al
   140043b20:	and    BYTE PTR [rcx+rbp*2+0x74],dh
   140043b24:	ins    BYTE PTR es:[rdi],dx
   140043b25:	gs cmp eax,0x22732522
   140043b2b:	add    BYTE PTR [rax],al
   140043b2d:	add    BYTE PTR [rax],al
   140043b2f:	add    BYTE PTR [rax],ah
   140043b31:	(bad)  
   140043b32:	ins    BYTE PTR es:[rdi],dx
   140043b33:	je     0x140043b72
   140043b35:	and    ah,BYTE PTR [rip+0x2273]        # 0x140045dae
   140043b3b:	add    BYTE PTR [rax],al
   140043b3d:	add    BYTE PTR [rax],al
   140043b3f:	add    BYTE PTR [rax],ah
   140043b41:	movsxd ebp,DWORD PTR [rdi+0x6f]
   140043b44:	jb     0x140043baa
   140043b46:	jae    0x140043b85
   140043b48:	and    ah,BYTE PTR [rip+0x64252c64]        # 0x1a42967b2
   140043b4e:	sub    al,0x25
   140043b50:	fs sub al,0x25
   140043b53:	and    bh,BYTE PTR fs:[rsi]
   140043b56:	or     al,BYTE PTR [rax]
	...
   140043b60:	pop    rbx
   140043b61:	and    BYTE PTR [rdi],ch
   140043b63:	push   rdx
   140043b64:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x5b]
   140043b69:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4295bd3
   140043b6f:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4295bd9
   140043b75:	and    BYTE PTR [rbp+0xa],bl
   140043b78:	and    BYTE PTR [rax],ah
   140043b7a:	(bad)  
   140043b7b:	rex.X outs dx,DWORD PTR ds:[rsi]
   140043b7d:	jb     0x140043be3
   140043b7f:	gs jb  0x140043ba2
   140043b82:	pop    rbx
   140043b83:	and    BYTE PTR [rax],dh
   140043b85:	and    BYTE PTR [rax],dh
   140043b87:	and    BYTE PTR [rax],dh
   140043b89:	and    BYTE PTR [rbp+0xa],bl
   140043b8c:	and    BYTE PTR [rax],ah
   140043b8e:	(bad)  
   140043b8f:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   140043b94:	outs   dx,BYTE PTR ds:[rsi]
   140043b95:	and    BYTE PTR [rsp+rdi*1],bh
   140043b98:	and    BYTE PTR [rdi],ch
   140043b9a:	push   rbx
   140043b9b:	jne    0x140043bff
   140043b9d:	je     0x140043c18
   140043b9f:	jo     0x140043c06
   140043ba1:	and    BYTE PTR [rdi],ch
   140043ba3:	push   rbp
   140043ba4:	push   rdx
   140043ba5:	rex.WB and BYTE PTR [r15],bpl
   140043ba8:	push   rbp
   140043ba9:	push   rdx
   140043baa:	rex.WB and BYTE PTR [rip+0x3e3e2073],spl        # 0x17e425c24
   140043bb1:	or     ah,BYTE PTR [rax]
   140043bb3:	and    BYTE PTR [rdi],ch
   140043bb5:	push   rbx
   140043bb6:	jne    0x140043c1a
   140043bb8:	je     0x140043c33
   140043bba:	jo     0x140043c21
   140043bbc:	and    BYTE PTR [rdi],ch
   140043bbe:	imul   r13,QWORD PTR [rsi+0x6b],0x4e412f0a
   140043bc6:	rex.WRX and BYTE PTR [rax+0x64],r14b
   140043bca:	ins    WORD PTR es:[rdi],dx
   140043bcc:	(bad)  
   140043bcd:	jb     0x140043c3a
   140043bcf:	or     al,BYTE PTR [rax]
   140043bd1:	add    BYTE PTR [rax],al
   140043bd3:	add    BYTE PTR [rax],al
   140043bd5:	add    BYTE PTR [rax],al
   140043bd7:	add    BYTE PTR [rdx+0x61],ah
   140043bda:	jae    0x140043c41
   140043bdc:	and    BYTE PTR [rdx+0x65],dh
   140043bdf:	data16 gs jb 0x140043c48
   140043be3:	jb     0x140043bef
   140043be5:	add    BYTE PTR [rax],al
   140043be7:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   140043beb:	ins    BYTE PTR es:[rdi],dx
   140043bec:	je     0x140043c57
   140043bee:	jo     0x140043bf0
   140043bf0:	je     0x140043c53
   140043bf2:	imul   ebp,DWORD PTR [rbp+rdx*2+0x52],0x6174004c
   140043bfa:	imul   ebp,DWORD PTR [rsp+rsi*2+0x6f],0x69746c6f
   140043c02:	jo     0x140043c04
   140043c04:	add    BYTE PTR [rax],al
   140043c06:	add    BYTE PTR [rax],al
   140043c08:	push   0x55646165
   140043c0d:	push   rdx
   140043c0e:	rex.WR add BYTE PTR [rax+0x65],r13b
   140043c12:	(bad)  
   140043c13:	fs je  0x140043c85
   140043c16:	outs   dx,DWORD PTR ds:[rsi]
   140043c17:	ins    BYTE PTR es:[rdi],dx
   140043c18:	je     0x140043c83
   140043c1a:	jo     0x140043c1c
   140043c1c:	add    BYTE PTR [rax],al
   140043c1e:	add    BYTE PTR [rax],al
   140043c20:	movsxd eax,DWORD PTR [rax]
   140043c22:	cmp    al,BYTE PTR [rax]
   140043c24:	pop    rsp
   140043c25:	add    BYTE PTR [rax+rax*1+0x65],dh
   140043c29:	add    BYTE PTR [rbp+0x0],ch
   140043c2c:	jo     0x140043c2e
   140043c2e:	pop    rsp
   140043c2f:	add    BYTE PTR [rdx+0x0],ah
   140043c32:	(bad)  
   140043c33:	add    BYTE PTR [rax+rax*1+0x73],dh
   140043c37:	add    BYTE PTR [rbp+0x0],ah
   140043c3a:	jb     0x140043c3c
   140043c3c:	jbe    0x140043c3e
   140043c3e:	add    BYTE PTR gs:[rax+rax*1+0x77],bl
   140043c43:	add    BYTE PTR [rcx+0x0],ch
   140043c46:	outs   dx,BYTE PTR ds:[rsi]
   140043c47:	add    BYTE PTR [rsi],dh
   140043c49:	add    BYTE PTR [rax+rax*1],dh
   140043c4c:	pop    rsp
   140043c4d:	add    BYTE PTR [rdi+0x0],ah
   140043c50:	jb     0x140043c52
   140043c52:	(bad)  
   140043c53:	add    BYTE PTR [rax+0x0],dh
   140043c56:	push   0x69007600
   140043c5b:	add    BYTE PTR [rdx+0x0],bh
   140043c5e:	pop    rsp
   140043c5f:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140043c63:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140043c67:	add    BYTE PTR [rbp+0x0],ah
   140043c6a:	(bad)  
   140043c6b:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140043c6f:	add    BYTE PTR [rax+rax*1+0x63],bl
   140043c73:	add    BYTE PTR [rdi+0x0],ch
   140043c76:	ins    DWORD PTR es:[rdi],dx
   140043c77:	add    BYTE PTR [rbp+0x0],ch
   140043c7a:	outs   dx,DWORD PTR ds:[rsi]
   140043c7b:	add    BYTE PTR [rsi+0x0],ch
   140043c7e:	pop    rsp
   140043c7f:	add    BYTE PTR [rbp+0x0],ch
   140043c82:	(bad)  
   140043c83:	add    BYTE PTR [rax+0x0],dh
   140043c86:	add    BYTE PTR [ebp+0x0],ah
   140043c8a:	outs   dx,BYTE PTR ds:[rsi]
   140043c8b:	add    BYTE PTR [rsi],ch
   140043c8d:	add    BYTE PTR [rbx+0x0],ah
	...
   140043c9c:	add    BYTE PTR [rax],al
   140043c9e:	push   rax
   140043c9f:	rex and edx,DWORD PTR [rsi+0x52]
   140043ca3:	rex.WRB
   140043ca4:	rex.WR and BYTE PTR [rsi+0x32],r10b
   140043ca8:	xor    BYTE PTR cs:[rax],ah
   140043cab:	jne    0x140043d21
   140043cad:	data16 cmp BYTE PTR [rdx],cl
	...
   140043cb8:	rex.RXB jb 0x140043d2a
   140043cbb:	jne    0x140043d2d
   140043cbd:	and    BYTE PTR [rbx+0x20],bh
   140043cc0:	movsxd ebp,DWORD PTR [rax+0x69]
   140043cc3:	ins    BYTE PTR es:[rdi],dx
   140043cc4:	fs jb  0x140043d2c
   140043cc7:	outs   dx,BYTE PTR ds:[rsi]
   140043cc8:	and    BYTE PTR [rbx+0xa],bl
   140043ccb:	add    BYTE PTR [rax],al
   140043ccd:	add    BYTE PTR [rax],al
   140043ccf:	add    BYTE PTR [rax],ah
   140043cd1:	and    BYTE PTR [rsi+0x69],dl
   140043cd4:	gs ja  0x140043d47
   140043cd7:	outs   dx,DWORD PTR ds:[rsi]
   140043cd8:	imul   ebp,DWORD PTR [rsi+0x74],0x6f707b20
   140043cdf:	jae    0x140043d4a
   140043ce1:	je     0x140043d4c
   140043ce3:	outs   dx,DWORD PTR ds:[rsi]
   140043ce4:	outs   dx,BYTE PTR ds:[rsi]
   140043ce5:	and    BYTE PTR [rip+0x2066332e],ah        # 0x1606a7019
   140043ceb:	and    eax,0x2066332e
   140043cf0:	xor    DWORD PTR [rax],esi
   140043cf2:	jge    0x140043cfe
   140043cf4:	add    BYTE PTR [rax],al
   140043cf6:	add    BYTE PTR [rax],al
   140043cf8:	and    BYTE PTR [rax],ah
   140043cfa:	push   rsp
   140043cfb:	jb     0x140043d5e
   140043cfd:	outs   dx,BYTE PTR ds:[rsi]
   140043cfe:	jae    0x140043d66
   140043d00:	outs   dx,DWORD PTR ds:[rsi]
   140043d01:	jb     0x140043d70
   140043d03:	and    BYTE PTR [rbx+0xa],bh
   140043d06:	add    BYTE PTR [rax],al
   140043d08:	and    BYTE PTR [rax],ah
   140043d0a:	and    BYTE PTR [rax],ah
   140043d0c:	jae    0x140043d71
   140043d0e:	(bad)  
   140043d0f:	ins    BYTE PTR es:[rdi],dx
   140043d10:	and    BYTE PTR gs:[rip+0x2066332e],ah        # 0x1606a7045
   140043d17:	and    eax,0x2066332e
   140043d1c:	and    eax,0xa66332e
   140043d21:	add    BYTE PTR [rax],al
   140043d23:	add    BYTE PTR [rax],al
   140043d25:	add    BYTE PTR [rax],al
   140043d27:	add    BYTE PTR [rax],ah
   140043d29:	and    BYTE PTR [rax],ah
   140043d2b:	and    BYTE PTR [rbx+0x68],ah
   140043d2e:	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x5b206e65
   140043d36:	or     al,BYTE PTR [rax]
   140043d38:	je     0x140043da3
   140043d3a:	ins    DWORD PTR es:[rdi],dx
   140043d3b:	gs jae 0x140043d3e
   140043d3e:	add    BYTE PTR [rax],al
   140043d40:	and    BYTE PTR [rdx+0x61],al
   140043d43:	movsxd ebp,DWORD PTR [rbx+0x67]
   140043d46:	jb     0x140043db7
   140043d48:	jne    0x140043db8
   140043d4a:	and    BYTE PTR fs:[rbx+0x20],bh
   140043d4e:	jae    0x140043dbb
   140043d50:	jns    0x140043d95
   140043d52:	outs   dx,DWORD PTR ds:[rsi]
   140043d53:	ins    BYTE PTR es:[rdi],dx
   140043d54:	outs   dx,DWORD PTR ds:[rsi]
   140043d55:	jb     0x140043d77
   140043d57:	xor    DWORD PTR [rax],esp
   140043d59:	xor    DWORD PTR [rax],esp
   140043d5b:	xor    DWORD PTR [rax],esp
   140043d5d:	jge    0x140043d69
   140043d5f:	add    BYTE PTR [rax],ah
   140043d61:	and    BYTE PTR [rbp+0x20],bl
   140043d64:	jge    0x140043d70
   140043d66:	add    BYTE PTR [rax],al
   140043d68:	pop    rbp
   140043d69:	and    BYTE PTR [rbp+0xa],bh
   140043d6c:	add    BYTE PTR [rax],al
   140043d6e:	add    BYTE PTR [rax],al
   140043d70:	and    BYTE PTR [rdi+0x72],al
   140043d73:	outs   dx,DWORD PTR ds:[rsi]
   140043d74:	jne    0x140043de6
   140043d76:	and    BYTE PTR [rbx+0x20],bh
   140043d79:	movsxd ebp,DWORD PTR [rax+0x69]
   140043d7c:	ins    BYTE PTR es:[rdi],dx
   140043d7d:	fs jb  0x140043de5
   140043d80:	outs   dx,BYTE PTR ds:[rsi]
   140043d81:	and    BYTE PTR [rbx+0xa],bl
	...
   140043d90:	movsxd eax,DWORD PTR [rax]
   140043d92:	cmp    al,BYTE PTR [rax]
   140043d94:	pop    rsp
   140043d95:	add    BYTE PTR [rax+rax*1+0x65],dh
   140043d99:	add    BYTE PTR [rbp+0x0],ch
   140043d9c:	jo     0x140043d9e
   140043d9e:	pop    rsp
   140043d9f:	add    BYTE PTR [rdx+0x0],ah
   140043da2:	(bad)  
   140043da3:	add    BYTE PTR [rax+rax*1+0x73],dh
   140043da7:	add    BYTE PTR [rbp+0x0],ah
   140043daa:	jb     0x140043dac
   140043dac:	jbe    0x140043dae
   140043dae:	add    BYTE PTR gs:[rax+rax*1+0x77],bl
   140043db3:	add    BYTE PTR [rcx+0x0],ch
   140043db6:	outs   dx,BYTE PTR ds:[rsi]
   140043db7:	add    BYTE PTR [rsi],dh
   140043db9:	add    BYTE PTR [rax+rax*1],dh
   140043dbc:	pop    rsp
   140043dbd:	add    BYTE PTR [rdi+0x0],ah
   140043dc0:	jb     0x140043dc2
   140043dc2:	(bad)  
   140043dc3:	add    BYTE PTR [rax+0x0],dh
   140043dc6:	push   0x69007600
   140043dcb:	add    BYTE PTR [rdx+0x0],bh
   140043dce:	pop    rsp
   140043dcf:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140043dd3:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140043dd7:	add    BYTE PTR [rbp+0x0],ah
   140043dda:	(bad)  
   140043ddb:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140043ddf:	add    BYTE PTR [rax+rax*1+0x63],bl
   140043de3:	add    BYTE PTR [rdi+0x0],ch
   140043de6:	ins    DWORD PTR es:[rdi],dx
   140043de7:	add    BYTE PTR [rbp+0x0],ch
   140043dea:	outs   dx,DWORD PTR ds:[rsi]
   140043deb:	add    BYTE PTR [rsi+0x0],ch
   140043dee:	pop    rsp
   140043def:	add    BYTE PTR [rsi+0x0],dh
   140043df2:	jb     0x140043df4
   140043df4:	ins    DWORD PTR es:[rdi],dx
   140043df5:	add    BYTE PTR [rax+rax*1+0x67],ch
   140043df9:	add    BYTE PTR [rbp+0x0],ah
   140043dfc:	outs   dx,BYTE PTR ds:[rsi]
   140043dfd:	add    BYTE PTR [rsi],ch
   140043dff:	add    BYTE PTR [rbx+0x0],ah
   140043e02:	add    BYTE PTR [rax],al
   140043e04:	add    BYTE PTR [rax],al
   140043e06:	add    BYTE PTR [rax],al
   140043e08:	jbe    0x140043e7c
   140043e0a:	ins    DWORD PTR es:[rdi],dx
   140043e0b:	ins    BYTE PTR es:[rdi],dx
   140043e0c:	pop    rdi
   140043e0d:	jae    0x140043e74
   140043e0f:	je     0x140043e70
   140043e11:	jae    0x140043e87
   140043e13:	jns    0x140043e81
   140043e15:	cmp    ah,BYTE PTR gs:[rax]
   140043e18:	jne    0x140043e88
   140043e1a:	jae    0x140043e91
   140043e1c:	jo     0x140043e8e
   140043e1e:	outs   dx,DWORD PTR ds:[rsi]
   140043e1f:	jb     0x140043e95
   140043e21:	gs and BYTE PTR fs:[rbx+0x74],dh
   140043e26:	jns    0x140043e94
   140043e28:	and    BYTE PTR gs:[rip+0x202d2073],ah        # 0x160315ea2
   140043e2f:	imul   esp,DWORD PTR [rdi+0x6e],0x6e69726f
   140043e36:	or     al,BYTE PTR [eax]
   140043e39:	add    BYTE PTR [rax],al
   140043e3b:	add    BYTE PTR [rax],al
   140043e3d:	add    BYTE PTR [rax],al
   140043e3f:	add    BYTE PTR [rdi+0x0],cl
   140043e42:	(bad)  
   140043e43:	add    BYTE PTR [rdx+0x0],ch
   140043e46:	and    BYTE PTR [rax],al
   140043e48:	cmp    eax,0x20003d00
   140043e4d:	add    BYTE PTR [rbp+0x0],al
   140043e50:	add    BYTE PTR [rdi+0x0],r8b
   140043e54:	add    BYTE PTR [r8],r8b
   140043e57:	add    BYTE PTR [rbx+0x68],dl
   140043e5a:	(bad)  
   140043e5b:	jo     0x140043ec2
   140043e5d:	and    BYTE PTR [rbx+0x20],bh
   140043e60:	outs   dx,DWORD PTR gs:[esi]
   140043e63:	ins    DWORD PTR es:[rdi],dx
   140043e64:	gs je  0x140043ed9
   140043e67:	jns    0x140043e89
   140043e69:	rex.RB js 0x140043ee0
   140043e6c:	jb     0x140043ee3
   140043e6e:	jae    0x140043ed9
   140043e70:	outs   dx,DWORD PTR ds:[rsi]
   140043e71:	outs   dx,BYTE PTR ds:[rsi]
   140043e72:	and    BYTE PTR [rax],ah
   140043e74:	jnp    0x140043e80
   140043e76:	add    BYTE PTR [rax],al
   140043e78:	and    BYTE PTR [rax],ah
   140043e7a:	jae    0x140043eec
   140043e7c:	imul   ebp,DWORD PTR [rsi+0x65],0x5b20
   140043e83:	add    BYTE PTR [rax],al
   140043e85:	add    BYTE PTR [rax],al
   140043e87:	add    BYTE PTR [rax],ah
   140043e89:	and    eax,0x2066332e
   140043e8e:	and    eax,0x2066332e
   140043e93:	and    eax,0x66332e
   140043e98:	and    BYTE PTR [rbp+0xa],bl
   140043e9b:	add    BYTE PTR [rax],al
   140043e9d:	add    BYTE PTR [rax],al
   140043e9f:	add    BYTE PTR [rax],ah
   140043ea1:	and    BYTE PTR [rbx+0x72],ah
   140043ea4:	outs   dx,DWORD PTR ds:[rsi]
   140043ea5:	jae    0x140043f1a
   140043ea7:	push   rbx
   140043ea8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140043ead:	outs   dx,BYTE PTR ds:[rsi]
   140043eae:	and    BYTE PTR [rbx+0x20],bl
   140043eb1:	and    eax,0x64252064
   140043eb6:	sub    al,0x20
   140043eb8:	and    eax,0x64252064
   140043ebd:	sub    al,0x20
   140043ebf:	and    eax,0x64252064
   140043ec4:	sub    al,0x20
   140043ec6:	and    eax,0x64252064
   140043ecb:	and    BYTE PTR [rbp+0xa],bl
   140043ece:	add    BYTE PTR [rax],al
   140043ed0:	and    BYTE PTR [rcx+0x70],ah
   140043ed3:	jo     0x140043f3a
   140043ed5:	(bad)  
   140043ed6:	jb     0x140043f39
   140043ed8:	outs   dx,BYTE PTR ds:[rsi]
   140043ed9:	movsxd esp,DWORD PTR [rbp+0x20]
   140043edc:	rex.R
   140043edd:	rex.RB
   140043ede:	rex.RX and BYTE PTR [rbp+0x25],r8b
   140043ee2:	and    BYTE PTR fs:[rcx+0x70],al
   140043ee6:	jo     0x140043f4d
   140043ee8:	(bad)  
   140043ee9:	jb     0x140043f4c
   140043eeb:	outs   dx,BYTE PTR ds:[rsi]
   140043eec:	movsxd esp,DWORD PTR [rbp+0x20]
   140043eef:	jnp    0x140043efb
   140043ef1:	add    BYTE PTR [rax],al
   140043ef3:	add    BYTE PTR [rax],al
   140043ef5:	add    BYTE PTR [rax],al
   140043ef7:	add    BYTE PTR [rax],ah
   140043ef9:	and    BYTE PTR [rax],ah
   140043efb:	ins    DWORD PTR es:[rdi],dx
   140043efc:	(bad)  
   140043efd:	je     0x140043f64
   140043eff:	jb     0x140043f6a
   140043f01:	(bad)  
   140043f02:	ins    BYTE PTR es:[rdi],dx
   140043f03:	and    BYTE PTR [rbp+0x61],cl
   140043f06:	je     0x140043f6d
   140043f08:	jb     0x140043f73
   140043f0a:	(bad)  
   140043f0b:	ins    BYTE PTR es:[rdi],dx
   140043f0c:	and    BYTE PTR [rbx+0xa],bh
   140043f0f:	add    BYTE PTR [rax],ah
   140043f11:	and    BYTE PTR [rax],ah
   140043f13:	(bad)  
   140043f14:	ins    DWORD PTR es:[rdi],dx
   140043f15:	(bad)  
   140043f16:	imul   esp,DWORD PTR [rbp+0x6e],0x746e4974
   140043f1d:	outs   dx,BYTE PTR gs:[rsi]
   140043f1f:	jae    0x140043f8a
   140043f21:	je     0x140043f9c
   140043f23:	and    BYTE PTR [rax],dh
   140043f25:	xor    esi,DWORD PTR cs:[rbx]
   140043f28:	or     al,BYTE PTR [rax]
   140043f2a:	add    BYTE PTR [rax],al
   140043f2c:	add    BYTE PTR [rax],al
   140043f2e:	add    BYTE PTR [rax],al
   140043f30:	and    BYTE PTR [rax],ah
   140043f32:	and    BYTE PTR [rcx+rbp*2+0x66],ah
   140043f36:	data16 jne 0x140043fac
   140043f39:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140043f3c:	ins    BYTE PTR es:[rdi],dx
   140043f3d:	outs   dx,DWORD PTR ds:[rsi]
   140043f3e:	jb     0x140043f60
   140043f40:	and    eax,0x2066332e
   140043f45:	and    eax,0x2066332e
   140043f4a:	and    eax,0xa66332e
   140043f4f:	add    BYTE PTR [rax],ah
   140043f51:	and    BYTE PTR [rax],ah
   140043f53:	jge    0x140043f5f
   140043f55:	add    BYTE PTR [rax],al
   140043f57:	add    BYTE PTR [rax],ah
   140043f59:	jge    0x140043f65
   140043f5b:	add    BYTE PTR [rax],al
   140043f5d:	add    BYTE PTR [rax],al
   140043f5f:	add    dl,dh
   140043f61:	mov    al,0x50
   140043f63:	imul   ebx,DWORD PTR [rdx+0x3f9c77],0x0
   140043f6a:	add    BYTE PTR [rax],al
   140043f6c:	add    BYTE PTR [rax-0x71],al
   140043f6f:	rol    BYTE PTR [rax],0x0
   140043f72:	add    BYTE PTR [rax],al
   140043f74:	rcl    BYTE PTR [rdx],1
   140043f76:	movsxd eax,ecx
   140043f78:	and    dl,BYTE PTR [rdx+0x65]
   140043f7b:	movsxd esi,DWORD PTR [rcx+riz*2+0x6e]
   140043f7f:	ins    BYTE PTR es:[edi],dx
   140043f81:	and    al,BYTE PTR gs:[rax]
   140043f84:	add    BYTE PTR [rax],al
   140043f86:	add    BYTE PTR [rax],al
   140043f88:	and    al,BYTE PTR [rbp+0x6c]
   140043f8b:	ins    BYTE PTR es:[rdi],dx
   140043f8c:	imul   esi,DWORD PTR [rax+0x73],0x2265
   140043f93:	add    BYTE PTR [rax],al
   140043f95:	add    BYTE PTR [rax],al
   140043f97:	add    BYTE PTR [rdx],ah
   140043f99:	push   rsp
   140043f9a:	jb     0x140044005
   140043f9c:	(bad)  
   140043f9d:	outs   dx,BYTE PTR ds:[rsi]
   140043f9e:	ins    BYTE PTR es:[edi],dx
   140043fa0:	and    al,BYTE PTR gs:[rax]
   140043fa3:	add    BYTE PTR [rax],al
   140043fa5:	add    BYTE PTR [rax],al
   140043fa7:	add    BYTE PTR [rdx],ah
   140043fa9:	imul   r12d,DWORD PTR [rcx+0x6d],0x22646e6f
   140043fb1:	add    BYTE PTR [rax],al
   140043fb3:	add    BYTE PTR [rax],al
   140043fb5:	add    BYTE PTR [rax],al
   140043fb7:	add    BYTE PTR [rdx],ah
   140043fb9:	push   rsp
   140043fba:	jb     0x14004401d
   140043fbc:	jo     0x140044023
   140043fbe:	jp     0x14004402f
   140043fc0:	imul   esp,DWORD PTR [rdx+riz*1+0x0],0x0
   140043fc8:	and    dl,BYTE PTR [rax+0x61]
   140043fcb:	jb     0x14004402e
   140043fcd:	ins    BYTE PTR es:[rdi],dx
   140043fce:	ins    BYTE PTR es:[rdi],dx
   140043fcf:	gs ins BYTE PTR es:[rdi],dx
   140043fd1:	outs   dx,DWORD PTR ds:[rsi]
   140043fd2:	addr32 jb 0x140044036
   140043fd5:	ins    DWORD PTR es:[rdi],dx
   140043fd6:	and    al,BYTE PTR [rax]
   140043fd8:	and    cl,BYTE PTR [rax+0x65]
   140043fdb:	js     0x14004403e
   140043fdd:	outs   dx,DWORD PTR ds:[esi]
   140043fdf:	outs   dx,BYTE PTR ds:[rsi]
   140043fe0:	and    al,BYTE PTR [rax]
   140043fe2:	add    BYTE PTR [rax],al
   140043fe4:	add    BYTE PTR [rax],al
   140043fe6:	add    BYTE PTR [rax],al
   140043fe8:	and    BYTE PTR [rax],ah
   140043fea:	and    BYTE PTR [rax],ah
   140043fec:	sub    BYTE PTR [rax+0x6f],dh
   140043fef:	imul   ebp,DWORD PTR [rsi+0x74],0xa73
   140043ff6:	add    BYTE PTR [rax],al
   140043ff8:	and    BYTE PTR [rax],ah
   140043ffa:	and    BYTE PTR [rax],ah
   140043ffc:	and    BYTE PTR [rax],ah
   140043ffe:	sub    BYTE PTR [rip+0x67252067],ah        # 0x1a729606b
   140044004:	sub    DWORD PTR [rdx],ecx
   140044006:	add    BYTE PTR [rax],al
   140044008:	and    BYTE PTR [rax],ah
   14004400a:	and    BYTE PTR [rax],ah
   14004400c:	sub    DWORD PTR [rdx],ecx
   14004400e:	add    BYTE PTR [rax],al
   140044010:	cmp    esp,DWORD PTR [rax]
   140044012:	and    eax,0xa73
   140044017:	add    BYTE PTR [rip+0x62252061],ah        # 0x1a229607e
   14004401d:	and    BYTE PTR [rip+0x48252065],ah        # 0x188296088
   140044023:	cmp    ah,BYTE PTR [rip+0x53253a4d]        # 0x193297a76
   140044029:	and    BYTE PTR [rip+0x5925205a],ah        # 0x199296089
   14004402f:	add    BYTE PTR [rbx],bh
   140044031:	and    BYTE PTR [rsi+0x69],dl
   140044034:	jae    0x1400440ab
   140044036:	(bad)  
   140044037:	ins    BYTE PTR es:[rdi],dx
   140044038:	and    BYTE PTR [rax+rbp*2+0x6f],dl
   14004403c:	jne    0x1400440a5
   14004403e:	push   0x2e312074
   140044043:	xor    BYTE PTR [rdx],cl
   140044045:	or     ch,BYTE PTR [rax]
   140044047:	push   0x65646165
   14004404c:	jb     0x140044058
   14004404e:	and    BYTE PTR [rax],ah
   140044050:	sub    BYTE PTR [rax+0x72],dh
   140044053:	outs   dx,DWORD PTR ds:[rsi]
   140044054:	addr32 jb 0x1400440b8
   140044057:	ins    DWORD PTR es:[rdi],dx
   140044058:	and    BYTE PTR [rdx],ah
   14004405a:	and    eax,0xa292273
   14004405f:	and    BYTE PTR [rax],ah
   140044061:	sub    BYTE PTR [rsi+0x65],dh
   140044064:	jb     0x1400440d9
   140044066:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252220
   14004406d:	and    ch,BYTE PTR [rcx]
   14004406f:	or     ah,BYTE PTR [rax]
   140044071:	and    BYTE PTR [rax],ch
   140044073:	(bad)  
   140044074:	jne    0x1400440df
   140044076:	ins    BYTE PTR es:[rdi],dx
   140044077:	fs rex.R (bad) 
   14004407a:	je     0x1400440e1
   14004407c:	and    BYTE PTR [rdx],ah
   14004407e:	and    eax,0xa292273
   140044083:	and    BYTE PTR [rax],ah
   140044085:	sub    BYTE PTR [rdi+0x72],dh
   140044088:	imul   esi,DWORD PTR [rbp+riz*2+0x44],0x20657461
   140044090:	and    ah,BYTE PTR [rip+0xa292273]        # 0x14a2d6309
   140044096:	and    BYTE PTR [rax],ah
   140044098:	sub    BYTE PTR [rdi+rbp*2+0x63],ah
   14004409c:	jne    0x14004410b
   14004409e:	outs   dx,BYTE PTR gs:[rsi]
   1400440a0:	je     0x1400440f2
   1400440a2:	(bad)  
   1400440a3:	je     0x14004410d
   1400440a5:	and    BYTE PTR [rdx],ah
   1400440a7:	and    ch,BYTE PTR [rcx]
   1400440a9:	or     ch,BYTE PTR [rcx]
   1400440ab:	or     cl,BYTE PTR [rdx]
   1400440ad:	add    BYTE PTR [rax],al
   1400440af:	add    BYTE PTR [rax],ch
   1400440b1:	outs   dx,DWORD PTR fs:[rsi]
   1400440b3:	movsxd esi,DWORD PTR [rbp+0x6d]
   1400440b6:	outs   dx,BYTE PTR gs:[rsi]
   1400440b8:	je     0x1400440c4
   1400440ba:	and    BYTE PTR [rax],ah
   1400440bc:	sub    BYTE PTR [rax+0x61],dh
   1400440bf:	ins    BYTE PTR es:[rdi],dx
   1400440c0:	gs je  0x140044137
   1400440c3:	and    BYTE PTR gs:[rsi+0x29],al
   1400440c7:	or     ah,BYTE PTR [rax]
   1400440c9:	and    BYTE PTR [rax],ch
   1400440cb:	ins    BYTE PTR es:[rdi],dx
   1400440cc:	(bad)  
   1400440cd:	jns    0x14004413e
   1400440cf:	jne    0x140044145
   1400440d1:	or     ah,BYTE PTR [rax]
   1400440d3:	and    BYTE PTR [rax],ah
   1400440d5:	and    BYTE PTR [rax],ch
   1400440d7:	jo     0x14004413a
   1400440d9:	and    BYTE PTR gs:[edx],ah
   1400440dd:	rex.WR
   1400440de:	gs je  0x140044155
   1400440e1:	gs jb  0x140044106
   1400440e4:	sub    DWORD PTR [rdx],ecx
   1400440e6:	and    BYTE PTR [rax],ah
   1400440e8:	and    BYTE PTR [rax],ah
   1400440ea:	sub    BYTE PTR [rbp+0x6e],dh
   1400440ed:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x636e4922
   1400440f5:	push   0x29227365
   1400440fa:	or     ah,BYTE PTR [rax]
   1400440fc:	and    BYTE PTR [rax],ah
   1400440fe:	and    BYTE PTR [rax],ch
   140044100:	outs   dx,DWORD PTR ds:[rsi]
   140044101:	jb     0x14004416c
   140044103:	outs   dx,BYTE PTR gs:[rsi]
   140044105:	je     0x140044168
   140044107:	je     0x140044172
   140044109:	outs   dx,DWORD PTR ds:[rsi]
   14004410a:	outs   dx,BYTE PTR ds:[rsi]
   14004410b:	and    BYTE PTR [rdx],ah
   14004410d:	jo     0x14004417e
   14004410f:	jb     0x140044185
   140044111:	jb     0x140044174
   140044113:	imul   esi,DWORD PTR [rdx+riz*1+0x29],0x2020200a
   14004411b:	and    BYTE PTR [rax],ch
   14004411d:	outs   dx,BYTE PTR ds:[rsi]
   14004411e:	jne    0x14004418d
   140044120:	(bad)  
   140044121:	gs jb  0x140044173
   140044124:	push   ax
   140044126:	(bad)  
   140044127:	addr32 gs jae 0x14004414b
   14004412b:	and    eax,0x64252064
   140044130:	sub    DWORD PTR [rdx],ecx
   140044132:	and    BYTE PTR [rax],ah
   140044134:	and    BYTE PTR [rax],ah
   140044136:	sub    BYTE PTR [rbx+0x63],dh
   140044139:	(bad)  
   14004413a:	ins    BYTE PTR es:[rdi],dx
   14004413b:	and    BYTE PTR gs:[rip+0x200a2967],ah        # 0x1600e6aa9
   140044142:	and    BYTE PTR [rax],ah
   140044144:	and    BYTE PTR [rax],ch
   140044146:	ins    DWORD PTR es:[rdi],dx
   140044147:	(bad)  
   140044148:	jb     0x1400441b1
   14004414a:	imul   ebp,DWORD PTR [rsi+0x73],0x20383120
   140044151:	xor    DWORD PTR [rax],edi
   140044153:	and    BYTE PTR [rcx],dh
   140044155:	cmp    BYTE PTR [rax],ah
   140044157:	xor    DWORD PTR [rax],edi
   140044159:	sub    DWORD PTR [rdx],ecx
   14004415b:	and    BYTE PTR [rax],ah
   14004415d:	sub    DWORD PTR [rdx],ecx
   14004415f:	sub    DWORD PTR [rdx],ecx
   140044161:	or     ch,BYTE PTR [rax]
   140044163:	jbe    0x1400441ce
   140044165:	gs ja  0x1400441db
   140044168:	or     ah,BYTE PTR [rax]
   14004416a:	and    BYTE PTR [rax],ch
   14004416c:	jbe    0x1400441d7
   14004416e:	gs ja  0x14004417b
   140044171:	and    BYTE PTR [rax],ah
   140044173:	and    BYTE PTR [rax],ah
   140044175:	sub    BYTE PTR [rdi+rbp*2+0x63],ch
   140044179:	(bad)  
   14004417a:	je     0x1400441e5
   14004417c:	outs   dx,DWORD PTR ds:[rsi]
   14004417d:	outs   dx,BYTE PTR ds:[rsi]
   14004417e:	and    BYTE PTR [rdx],dh
   140044180:	cmp    DWORD PTR ss:[rax],esp
   140044183:	xor    al,0x39
   140044185:	sub    DWORD PTR [rdx],ecx
   140044187:	and    BYTE PTR [rax],ah
   140044189:	and    BYTE PTR [rax],ah
   14004418b:	sub    BYTE PTR [rbx+0x69],dh
   14004418e:	jp     0x1400441f5
   140044190:	and    BYTE PTR [rsi],dh
   140044192:	xor    esi,DWORD PTR [rdx]
   140044194:	and    BYTE PTR [rdi],dh
   140044196:	xor    dh,BYTE PTR [rbx]
   140044198:	sub    DWORD PTR [rdx],ecx
   14004419a:	and    BYTE PTR [rax],ah
   14004419c:	and    BYTE PTR [rax],ah
   14004419e:	sub    BYTE PTR [rdx+0x6f],bh
   1400441a1:	outs   dx,DWORD PTR ds:[rsi]
   1400441a2:	ins    DWORD PTR es:[rdi],dx
   1400441a3:	and    BYTE PTR [rip+0x200a2967],ah        # 0x1600e6b10
   1400441a9:	and    BYTE PTR [rax],ah
   1400441ab:	and    BYTE PTR [rax],ch
   1400441ad:	outs   dx,DWORD PTR fs:[rsi]
   1400441af:	movsxd esi,DWORD PTR [rbp+0x6d]
   1400441b2:	outs   dx,BYTE PTR gs:[rsi]
   1400441b4:	je     0x140044202
   1400441b6:	outs   dx,DWORD PTR ds:[rsi]
   1400441b7:	movsxd esp,DWORD PTR [rcx+0x74]
   1400441ba:	imul   ebp,DWORD PTR [rdi+0x6e],0x31203020
   1400441c1:	xor    DWORD PTR [rcx],edi
   1400441c3:	sub    DWORD PTR [rdx],ecx
   1400441c5:	and    BYTE PTR [rax],ah
   1400441c7:	and    BYTE PTR [rax],ah
   1400441c9:	sub    BYTE PTR [rdi+0x72],ah
   1400441cc:	imul   esp,DWORD PTR [rbx+rdx*2+0x6e],0x54207061
   1400441d4:	sub    DWORD PTR [rdx],ecx
   1400441d6:	and    BYTE PTR [rax],ah
   1400441d8:	and    BYTE PTR [rax],ah
   1400441da:	sub    BYTE PTR [rdi+0x72],ah
   1400441dd:	imul   esp,DWORD PTR [rsi+rdx*2+0x69],0x69626973
   1400441e5:	ins    BYTE PTR es:[rdi],dx
   1400441e6:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x200a2946
   1400441ee:	and    BYTE PTR [rax],ah
   1400441f0:	and    BYTE PTR [rax],ch
   1400441f2:	addr32 jb 0x14004425e
   1400441f5:	fs push rbx
   1400441f7:	jo     0x14004425a
   1400441f9:	movsxd ebp,DWORD PTR [rcx+0x6e]
   1400441fc:	and    BYTE PTR [ecx],bh
   1400441ff:	sub    DWORD PTR [rdx],ecx
   140044201:	and    BYTE PTR [rax],ah
   140044203:	and    BYTE PTR [rax],ah
   140044205:	sub    BYTE PTR [rax+0x61],dh
   140044208:	addr32 gs rex.X jb 0x140044272
   14004420d:	(bad)  
   14004420e:	imul   esi,DWORD PTR [rbx+0x20],0x54
   140044212:	sub    DWORD PTR [rdx],ecx
   140044214:	and    BYTE PTR [rax],ah
   140044216:	and    BYTE PTR [rax],ah
   140044218:	sub    BYTE PTR [rdi+rbp*2+0x6f],dh
   14004421c:	ins    BYTE PTR es:[rdi],dx
   14004421d:	push   rsi
   14004421e:	imul   esi,DWORD PTR [rbx+0x69],0x696c6962
   140044225:	je     0x1400442a0
   140044227:	and    BYTE PTR [rcx+rbp*1+0xa],dl
   14004422b:	and    BYTE PTR [rax],ah
   14004422d:	and    BYTE PTR [rax],ah
   14004422f:	sub    BYTE PTR [rdx+0x75],dh
   140044232:	ins    BYTE PTR es:[rdi],dx
   140044233:	gs jb  0x14004428c
   140044236:	imul   esi,DWORD PTR [rbx+0x69],0x696c6962
   14004423d:	je     0x1400442b8
   14004423f:	and    BYTE PTR [rcx+rbp*1+0xa],dl
   140044243:	and    BYTE PTR [rax],ah
   140044245:	sub    DWORD PTR [rdx],ecx
   140044247:	sub    DWORD PTR [rdx],ecx
   140044249:	or     al,BYTE PTR [rax]
   14004424b:	add    BYTE PTR [rax],al
   14004424d:	add    BYTE PTR [rax],al
   14004424f:	add    BYTE PTR [rax],ch
   140044251:	jae    0x1400442bb
   140044253:	(bad)  
   140044254:	jo     0x1400442bb
   140044256:	jae    0x140044262
   140044258:	add    BYTE PTR [rax],al
   14004425a:	add    BYTE PTR [rax],al
   14004425c:	sub    DWORD PTR [rdx],ecx
   14004425e:	or     al,BYTE PTR [rax]
   140044260:	sub    BYTE PTR [rbx+0x6f],ah
   140044263:	outs   dx,BYTE PTR ds:[rsi]
   140044264:	outs   dx,BYTE PTR ds:[rsi]
   140044265:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004426a:	outs   dx,BYTE PTR ds:[rsi]
   14004426b:	jae    0x140044277
   14004426d:	add    BYTE PTR [rax],al
   14004426f:	add    BYTE PTR [rcx],ch
   140044271:	or     cl,BYTE PTR [rdx]
   140044273:	sub    BYTE PTR [rdi+0x72],ah
   140044276:	outs   dx,DWORD PTR ds:[rsi]
   140044277:	jne    0x1400442e9
   140044279:	jae    0x140044285
   14004427b:	sub    DWORD PTR [rdx],ecx
   14004427d:	add    BYTE PTR [rax],al
   14004427f:	add    BYTE PTR [rax],ah
   140044281:	and    BYTE PTR [rax],ch
   140044283:	jae    0x1400442ed
   140044285:	(bad)  
   140044286:	jo     0x1400442ed
   140044288:	or     ah,BYTE PTR [rax]
   14004428a:	and    BYTE PTR [rax],ah
   14004428c:	and    BYTE PTR [rax],ch
   14004428e:	imul   esp,DWORD PTR [rax+riz*1+0x25],0x200a2964
   140044296:	and    BYTE PTR [rax],ah
   140044298:	and    BYTE PTR [rax],ch
   14004429a:	ins    BYTE PTR es:[rdi],dx
   14004429b:	(bad)  
   14004429c:	jns    0x140044303
   14004429e:	jb     0x1400442c0
   1400442a0:	and    eax,0x200a2964
   1400442a5:	and    BYTE PTR [rax],ah
   1400442a7:	and    BYTE PTR [rax],ch
   1400442a9:	je     0x140044324
   1400442ab:	jo     0x140044312
   1400442ad:	and    BYTE PTR [rip+0xa2973],ah        # 0x1400e6c26
   1400442b3:	add    BYTE PTR [rax],ah
   1400442b5:	and    BYTE PTR [rcx],ch
   1400442b7:	or     al,BYTE PTR [rax]
   1400442b9:	add    BYTE PTR [rax],al
   1400442bb:	add    BYTE PTR [rax],al
   1400442bd:	add    BYTE PTR [rax],al
   1400442bf:	add    BYTE PTR [rax],ah
   1400442c1:	and    BYTE PTR [rax],ch
   1400442c3:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400442c6:	outs   dx,BYTE PTR ds:[rsi]
   1400442c7:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400442cc:	outs   dx,BYTE PTR ds:[rsi]
   1400442cd:	or     ah,BYTE PTR [rax]
   1400442cf:	and    BYTE PTR [rax],ah
   1400442d1:	and    BYTE PTR [rax],ch
   1400442d3:	imul   esp,DWORD PTR [rax+riz*1+0x25],0x200a2964
   1400442db:	and    BYTE PTR [rax],ah
   1400442dd:	and    BYTE PTR [rax],ch
   1400442df:	ins    BYTE PTR es:[rdi],dx
   1400442e0:	(bad)  
   1400442e1:	jns    0x140044348
   1400442e3:	jb     0x140044305
   1400442e5:	and    eax,0x200a2964
   1400442ea:	and    BYTE PTR [rax],ah
   1400442ec:	and    BYTE PTR [rax],ch
   1400442ee:	jb     0x14004435f
   1400442f0:	je     0x140044353
   1400442f2:	je     0x14004435d
   1400442f4:	outs   dx,DWORD PTR ds:[rsi]
   1400442f5:	outs   dx,BYTE PTR ds:[rsi]
   1400442f6:	and    BYTE PTR [rax],dh
   1400442f8:	sub    DWORD PTR [rdx],ecx
   1400442fa:	and    BYTE PTR [rax],ah
   1400442fc:	and    BYTE PTR [rax],ah
   1400442fe:	sub    BYTE PTR [rbp+riz*2+0x78],dh
   140044302:	je     0x140044356
   140044304:	outs   dx,DWORD PTR ds:[rsi]
   140044305:	je     0x140044368
   140044307:	je     0x140044372
   140044309:	outs   dx,DWORD PTR ds:[rsi]
   14004430a:	outs   dx,BYTE PTR ds:[rsi]
   14004430b:	and    BYTE PTR [rax],dh
   14004430d:	sub    DWORD PTR [rdx],ecx
   14004430f:	and    BYTE PTR [rax],ah
   140044311:	and    BYTE PTR [rax],ah
   140044313:	sub    BYTE PTR [rdi+rbp*2+0x63],ch
   140044317:	imul   esp,DWORD PTR [rbp+0x64],0x20
   14004431b:	rex.RX sub DWORD PTR [rdx],r9d
   14004431e:	and    BYTE PTR [rax],ah
   140044320:	and    BYTE PTR [rax],ah
   140044322:	sub    BYTE PTR [rbx+0x74],dh
   140044325:	(bad)  
   140044326:	jb     0x14004439c
   140044328:	and    BYTE PTR [rip+0x200a2964],ah        # 0x1600e6c92
   14004432e:	and    BYTE PTR [rax],ah
   140044330:	and    BYTE PTR [rax],ch
   140044332:	outs   dx,BYTE PTR gs:[rsi]
   140044334:	and    BYTE PTR fs:[rip+0xa2964],ah        # 0x1400e6c9f
   14004433b:	add    BYTE PTR [rax],al
   14004433d:	add    BYTE PTR [rax],al
   14004433f:	add    BYTE PTR [rbx+0x0],ah
   140044342:	cmp    al,BYTE PTR [rax]
   140044344:	pop    rsp
   140044345:	add    BYTE PTR [rax+rax*1+0x65],dh
   140044349:	add    BYTE PTR [rbp+0x0],ch
   14004434c:	jo     0x14004434e
   14004434e:	pop    rsp
   14004434f:	add    BYTE PTR [rdx+0x0],ah
   140044352:	(bad)  
   140044353:	add    BYTE PTR [rax+rax*1+0x73],dh
   140044357:	add    BYTE PTR [rbp+0x0],ah
   14004435a:	jb     0x14004435c
   14004435c:	jbe    0x14004435e
   14004435e:	add    BYTE PTR gs:[rax+rax*1+0x77],bl
   140044363:	add    BYTE PTR [rcx+0x0],ch
   140044366:	outs   dx,BYTE PTR ds:[rsi]
   140044367:	add    BYTE PTR [rsi],dh
   140044369:	add    BYTE PTR [rax+rax*1],dh
   14004436c:	pop    rsp
   14004436d:	add    BYTE PTR [rdi+0x0],ah
   140044370:	jb     0x140044372
   140044372:	(bad)  
   140044373:	add    BYTE PTR [rax+0x0],dh
   140044376:	push   0x69007600
   14004437b:	add    BYTE PTR [rdx+0x0],bh
   14004437e:	pop    rsp
   14004437f:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140044383:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140044387:	add    BYTE PTR [rbp+0x0],ah
   14004438a:	(bad)  
   14004438b:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14004438f:	add    BYTE PTR [rax+rax*1+0x63],bl
   140044393:	add    BYTE PTR [rdi+0x0],ch
   140044396:	ins    DWORD PTR es:[rdi],dx
   140044397:	add    BYTE PTR [rbp+0x0],ch
   14004439a:	outs   dx,DWORD PTR ds:[rsi]
   14004439b:	add    BYTE PTR [rsi+0x0],ch
   14004439e:	pop    rsp
   14004439f:	add    BYTE PTR [rsi+0x0],dh
   1400443a2:	je     0x1400443a4
   1400443a4:	js     0x1400443a6
   1400443a6:	add    BYTE PTR [ebp+0x0],ah
   1400443aa:	outs   dx,BYTE PTR ds:[rsi]
   1400443ab:	add    BYTE PTR [rsi],ch
   1400443ad:	add    BYTE PTR [rbx+0x0],ah
   1400443b0:	add    BYTE PTR [rax],al
   1400443b2:	add    BYTE PTR [rax],al
   1400443b4:	push   rsp
   1400443b5:	add    BYTE PTR [rax],al
   1400443b7:	add    BYTE PTR [rsi+0x0],al
   1400443ba:	add    BYTE PTR [rax],al
   1400443bc:	add    BYTE PTR [rax],al
   1400443be:	add    BYTE PTR [rax],al
   1400443c0:	and    BYTE PTR [rax],ah
   1400443c2:	and    BYTE PTR [rax],ah
   1400443c4:	sub    BYTE PTR [rbx+0x74],dh
   1400443c7:	jns    0x140044435
   1400443c9:	or     ah,BYTE PTR gs:[rax]
   1400443cc:	and    BYTE PTR [rax],ah
   1400443ce:	and    BYTE PTR [rax],ah
   1400443d0:	and    BYTE PTR [rax],ch
   1400443d2:	imul   bp,WORD PTR [rsp+rbp*2+0x65],0x2064
   1400443d9:	and    eax,0x200a2973
   1400443de:	and    BYTE PTR [rax],ah
   1400443e0:	and    BYTE PTR [rax],ah
   1400443e2:	and    BYTE PTR [rax],ch
   1400443e4:	imul   bp,WORD PTR [rsp+rbp*2+0x43],0x6c6f
   1400443eb:	outs   dx,DWORD PTR ds:[rsi]
   1400443ec:	jb     0x14004440e
   1400443ee:	and    eax,0x64252064
   1400443f3:	and    BYTE PTR [rip+0x200a2964],ah        # 0x1600e6d5d
   1400443f9:	and    BYTE PTR [rax],ah
   1400443fb:	and    BYTE PTR [rax],ah
   1400443fd:	and    BYTE PTR [rax],ch
   1400443ff:	jae    0x140044475
   140044401:	jb     0x140044472
   140044403:	imul   esp,DWORD PTR [rbp+0x64],0x20
   140044407:	push   rsp
   140044408:	sub    DWORD PTR [rdx],ecx
   14004440a:	and    BYTE PTR [rax],ah
   14004440c:	and    BYTE PTR [rax],ah
   14004440e:	and    BYTE PTR [rax],ah
   140044410:	sub    BYTE PTR [rbx+0x74],dh
   140044413:	jb     0x140044484
   140044415:	imul   esp,DWORD PTR [rbp+0x43],0x6f
   140044419:	ins    BYTE PTR es:[rdi],dx
   14004441a:	outs   dx,DWORD PTR ds:[rsi]
   14004441b:	jb     0x14004443d
   14004441d:	and    eax,0x64252064
   140044422:	and    BYTE PTR [rip+0x200a2964],ah        # 0x1600e6d8c
   140044428:	and    BYTE PTR [rax],ah
   14004442a:	and    BYTE PTR [rax],ah
   14004442c:	and    BYTE PTR [rax],ch
   14004442e:	ins    BYTE PTR es:[rdi],dx
   14004442f:	imul   ebp,DWORD PTR [rsi+0x65],0x74646957
   140044436:	push   0x29642520
   14004443b:	or     ah,BYTE PTR [rax]
   14004443d:	and    BYTE PTR [rax],ah
   14004443f:	and    BYTE PTR [rax],ah
   140044441:	and    BYTE PTR [rax],ch
   140044443:	jae    0x1400444ad
   140044445:	(bad)  
   140044446:	outs   dx,DWORD PTR fs:[rsi]
   140044448:	ja     0x1400444af
   14004444a:	and    BYTE PTR fs:[rsi+0x29],al
   14004444e:	or     ah,BYTE PTR [rax]
   140044450:	and    BYTE PTR [rax],ah
   140044452:	and    BYTE PTR [rax],ah
   140044454:	and    BYTE PTR [rax],ch
   140044456:	jae    0x1400444c0
   140044458:	(bad)  
   140044459:	outs   dx,DWORD PTR fs:[rsi]
   14004445b:	ja     0x1400444a0
   14004445d:	outs   dx,DWORD PTR ds:[rsi]
   14004445e:	ins    BYTE PTR es:[rdi],dx
   14004445f:	outs   dx,DWORD PTR ds:[rsi]
   140044460:	jb     0x140044482
   140044462:	xor    edi,DWORD PTR [rcx]
   140044464:	xor    esi,DWORD PTR [rdx]
   140044466:	xor    DWORD PTR [rax],esp
   140044468:	xor    edi,DWORD PTR [rcx]
   14004446a:	xor    esi,DWORD PTR [rdx]
   14004446c:	xor    DWORD PTR [rax],esp
   14004446e:	xor    edi,DWORD PTR [rcx]
   140044470:	xor    esi,DWORD PTR [rdx]
   140044472:	xor    DWORD PTR [rcx],ebp
   140044474:	or     ah,BYTE PTR [rax]
   140044476:	and    BYTE PTR [rax],ah
   140044478:	and    BYTE PTR [rcx],ch
   14004447a:	or     al,BYTE PTR [rax]
   14004447c:	add    BYTE PTR [rax],al
   14004447e:	add    BYTE PTR [rax],al
   140044480:	and    BYTE PTR [rax],ah
   140044482:	and    BYTE PTR [rax],ah
   140044484:	sub    BYTE PTR [rdx+0x6f],dh
   140044487:	je     0x1400444ea
   140044489:	je     0x1400444f4
   14004448b:	outs   dx,DWORD PTR ds:[rsi]
   14004448c:	outs   dx,BYTE PTR ds:[rsi]
   14004448d:	and    BYTE PTR [rax],dh
   14004448f:	sub    DWORD PTR [rdx],ecx
   140044491:	and    BYTE PTR [rax],ah
   140044493:	and    BYTE PTR [rax],ah
   140044495:	sub    BYTE PTR [rdi+rbp*2+0x63],ch
   140044499:	imul   esp,DWORD PTR [rbp+0x64],0x20
   14004449d:	rex.RX sub DWORD PTR [rdx],r9d
	...
   1400444a8:	and    BYTE PTR [rax],ah
   1400444aa:	and    BYTE PTR [rax],ah
   1400444ac:	sub    BYTE PTR [rsi+0x6c],ah
   1400444af:	imul   esi,DWORD PTR [rax+0x48],0x7a69726f
   1400444b6:	outs   dx,DWORD PTR ds:[rsi]
   1400444b7:	outs   dx,BYTE PTR ds:[rsi]
   1400444b8:	je     0x14004451b
   1400444ba:	ins    BYTE PTR es:[rdi],dx
   1400444bb:	and    BYTE PTR [rsi+0x29],al
   1400444be:	or     ah,BYTE PTR [rax]
   1400444c0:	and    BYTE PTR [rax],ah
   1400444c2:	and    BYTE PTR [rax],ch
   1400444c4:	data16 ins BYTE PTR es:[rdi],dx
   1400444c6:	imul   esi,DWORD PTR [rax+0x56],0x69747265
   1400444cd:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400444d0:	and    BYTE PTR [rsi+0x29],al
   1400444d3:	or     al,BYTE PTR [rax]
   1400444d5:	add    BYTE PTR [rax],al
   1400444d7:	add    BYTE PTR [rsi+0x74],dh
   1400444da:	js     0x14004453b
   1400444dc:	jae    0x140044543
   1400444de:	je     0x14004453f
   1400444e0:	jae    0x140044556
   1400444e2:	jns    0x140044550
   1400444e4:	cmp    ah,BYTE PTR gs:[rax]
   1400444e7:	jne    0x140044557
   1400444e9:	jae    0x140044560
   1400444eb:	jo     0x14004455d
   1400444ed:	outs   dx,DWORD PTR ds:[rsi]
   1400444ee:	jb     0x140044564
   1400444f0:	gs and BYTE PTR fs:[rbx+0x74],dh
   1400444f5:	jns    0x140044563
   1400444f7:	and    BYTE PTR gs:[rip+0x202d2073],ah        # 0x160316571
   1400444fe:	imul   esp,DWORD PTR [rdi+0x6e],0x6e69726f
   140044505:	or     al,BYTE PTR [eax]
	...
   140044510:	and    BYTE PTR [rax],ah
   140044512:	and    BYTE PTR [rax],ah
   140044514:	sub    BYTE PTR [rbx+0x68],dh
   140044517:	outs   dx,DWORD PTR ds:[rsi]
   140044518:	ja     0x14004456e
   14004451a:	gs js  0x140044591
   14004451d:	and    BYTE PTR [rcx+rbp*1+0xa],dl
   140044521:	and    BYTE PTR [rax],ah
   140044523:	and    BYTE PTR [rax],ah
   140044525:	sub    BYTE PTR [rbp+riz*2+0x78],dh
   140044529:	je     0x14004456f
   14004452b:	imul   esi,DWORD PTR [rbx+0x74],0x65636e61
   140044532:	push   rax
   140044533:	gs jb  0x140044599
   140044536:	outs   dx,BYTE PTR gs:[rsi]
   140044538:	je     0x14004459b
   14004453a:	and    BYTE PTR gs:[eax],dh
   14004453e:	cs xor eax,0x20200a29
   140044544:	and    BYTE PTR [rax],ah
   140044546:	sub    BYTE PTR [rbp+riz*2+0x78],dh
   14004454a:	je     0x1400445a3
   14004454c:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x29323720
   140044554:	or     ah,BYTE PTR [rax]
   140044556:	and    BYTE PTR [rax],ah
   140044558:	and    BYTE PTR [rax],ch
   14004455a:	je     0x1400445c1
   14004455c:	js     0x1400445d2
   14004455e:	rex.WRXB
   14004455f:	data16 data16 jae 0x1400445c8
   140044563:	je     0x140044585
   140044565:	xor    BYTE PTR [rcx],ch
   140044567:	or     ah,BYTE PTR [rax]
   140044569:	and    BYTE PTR [rax],ah
   14004456b:	and    BYTE PTR [rax],ch
   14004456d:	jb     0x1400445e3
   14004456f:	push   sp
   140044571:	gs js  0x1400445e8
   140044574:	jnp    0x1400445d2
   140044576:	jb     0x1400445ec
   140044578:	xor    WORD PTR [rcx+riz*2+0x6e],bx
   14004457d:	jae    0x1400445e8
   14004457f:	pop    rsp
   140044580:	fs data16 data16 xor BYTE PTR gs:[rdx],cl
   140044586:	jnp    0x1400445e4
   140044588:	outs   dx,WORD PTR ds:[rsi]
   14004458a:	outs   dx,BYTE PTR ds:[rsi]
   14004458b:	je     0x140044601
   14004458d:	(bad)  
   14004458e:	ins    BYTE PTR es:[rdi],dx
   14004458f:	jnp    0x1400445ed
   140044591:	data16 xor BYTE PTR [rsi+riz*2+0x6e],bl
   140044596:	imul   ebp,DWORD PTR [rax+riz*1+0x68],0x65766c65
   14004459e:	je     0x140044609
   1400445a0:	movsxd esp,DWORD PTR [rcx+0x20]
   1400445a3:	ins    DWORD PTR es:[rdi],dx
   1400445a4:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0xa7d7d3b
   1400445ad:	jnp    0x14004460b
   1400445af:	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400445b2:	outs   dx,DWORD PTR ds:[rsi]
   1400445b3:	jb     0x140044629
   1400445b5:	(bad)  
   1400445b6:	ins    BYTE PTR es:[rdi],dx
   1400445b7:	pop    rsp
   1400445b8:	jb     0x14004461f
   1400445ba:	xor    BYTE PTR fs:[rdi+riz*2+0x72],bl
   1400445bf:	gs outs dx,BYTE PTR gs:[rsi]
   1400445c2:	xor    BYTE PTR [rdx+riz*2+0x6c],bl
   1400445c6:	jne    0x14004462d
   1400445c8:	xor    BYTE PTR [rbx],bh
   1400445ca:	jge    0x1400445d6
   1400445cc:	pop    rsp
   1400445cd:	movsxd esp,DWORD PTR [rsi+0x30]
   1400445d0:	pop    rsp
   1400445d1:	jo     0x14004463f
   1400445d3:	(bad)  
   1400445d4:	imul   ebp,DWORD PTR [rsi+0x5c],0x64726170
   1400445db:	and    BYTE PTR [rbx+0x5c],bh
   1400445de:	data16 jae 0x140044606
   1400445e1:	and    BYTE PTR fs:[rip+0x297d7d73],ah        # 0x16981c35b
   1400445e8:	or     al,BYTE PTR [rax]
   1400445ea:	add    BYTE PTR [rax],al
   1400445ec:	add    BYTE PTR [rax],al
   1400445ee:	add    BYTE PTR [rax],al
   1400445f0:	and    BYTE PTR [rax],ah
   1400445f2:	and    BYTE PTR [rax],ah
   1400445f4:	sub    BYTE PTR [rbx+0x68],dh
   1400445f7:	outs   dx,DWORD PTR ds:[rsi]
   1400445f8:	ja     0x14004464e
   1400445fa:	gs js  0x140044671
   1400445fd:	and    BYTE PTR [rcx+rbp*1+0xa],dl
   140044601:	and    BYTE PTR [rax],ah
   140044603:	and    BYTE PTR [rax],ah
   140044605:	sub    BYTE PTR [rbp+riz*2+0x78],dh
   140044609:	je     0x140044661
   14004460b:	gs jb  0x140044682
   14004460e:	imul   esp,DWORD PTR [rbx+0x61],0x696c416c
   140044615:	outs   dx,BYTE PTR ds:[esi]
   140044617:	ins    DWORD PTR es:[rdi],dx
   140044618:	outs   dx,BYTE PTR gs:[rsi]
   14004461a:	je     0x14004463c
   14004461c:	and    ch,BYTE PTR [rbp+riz*2+0x66]
   140044620:	je     0x140044644
   140044622:	sub    DWORD PTR [rdx],ecx
   140044624:	and    BYTE PTR [rax],ah
   140044626:	and    BYTE PTR [rax],ah
   140044628:	sub    BYTE PTR [rdx+0x74],dh
   14004462b:	push   sp
   14004462d:	gs js  0x1400446a4
   140044630:	jnp    0x14004468e
   140044632:	jb     0x1400446a8
   140044634:	xor    WORD PTR [rcx+riz*2+0x6e],bx
   140044639:	jae    0x1400446a4
   14004463b:	pop    rsp
   14004463c:	fs data16 data16 xor BYTE PTR gs:[rdx],cl
   140044642:	jnp    0x1400446a0
   140044644:	outs   dx,WORD PTR ds:[rsi]
   140044646:	outs   dx,BYTE PTR ds:[rsi]
   140044647:	je     0x1400446bd
   140044649:	(bad)  
   14004464a:	ins    BYTE PTR es:[rdi],dx
   14004464b:	jnp    0x1400446a9
   14004464d:	data16 xor BYTE PTR [rsi+riz*2+0x6e],bl
   140044652:	imul   ebp,DWORD PTR [rax+riz*1+0x68],0x65766c65
   14004465a:	je     0x1400446c5
   14004465c:	movsxd esp,DWORD PTR [rcx+0x20]
   14004465f:	ins    DWORD PTR es:[rdi],dx
   140044660:	gs imul esi,DWORD PTR fs:[rbp+0x6d],0xa7d7d3b
   140044669:	jnp    0x1400446c7
   14004466b:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14004466e:	outs   dx,DWORD PTR ds:[rsi]
   14004466f:	jb     0x1400446e5
   140044671:	(bad)  
   140044672:	ins    BYTE PTR es:[rdi],dx
   140044673:	pop    rsp
   140044674:	jb     0x1400446db
   140044676:	xor    BYTE PTR fs:[rdi+riz*2+0x72],bl
   14004467b:	gs outs dx,BYTE PTR gs:[rsi]
   14004467e:	xor    BYTE PTR [rdx+riz*2+0x6c],bl
   140044682:	jne    0x1400446e9
   140044684:	xor    BYTE PTR [rbx],bh
   140044686:	jge    0x140044692
   140044688:	pop    rsp
   140044689:	movsxd esp,DWORD PTR [rsi+0x30]
   14004468c:	pop    rsp
   14004468d:	jo     0x1400446fb
   14004468f:	(bad)  
   140044690:	imul   ebp,DWORD PTR [rsi+0x5c],0x64726170
   140044697:	and    BYTE PTR [rbx+0x5c],bh
   14004469a:	data16 jae 0x1400446c2
   14004469d:	and    BYTE PTR fs:[rip+0x297d7d73],ah        # 0x16981c417
   1400446a4:	or     al,BYTE PTR [rax]
   1400446a6:	add    BYTE PTR [rax],al
   1400446a8:	and    BYTE PTR [rax],ah
   1400446aa:	and    BYTE PTR [rax],ah
   1400446ac:	sub    BYTE PTR [rbx+0x75],ah
   1400446af:	jb     0x140044727
   1400446b1:	gs and BYTE PTR fs:[rcx+rbp*1+0xa],dl
	...
   1400446bf:	add    BYTE PTR [rax],ah
   1400446c1:	and    BYTE PTR [rax],ah
   1400446c3:	and    BYTE PTR [rax],ch
   1400446c5:	fs jb  0x140044729
   1400446c8:	ja     0x14004471d
   1400446ca:	je     0x14004472d
   1400446cc:	jb     0x140044742
   1400446ce:	rex.B jb 0x140044743
   1400446d1:	outs   dx,DWORD PTR ds:[rsi]
   1400446d2:	ja     0x14004473c
   1400446d4:	gs (bad) 
   1400446d6:	and    BYTE PTR fs:[rip+0x200a2973],ah        # 0x1600e7050
   1400446dd:	and    BYTE PTR [rax],ah
   1400446df:	and    BYTE PTR [rax],ch
   1400446e1:	fs jb  0x140044745
   1400446e4:	ja     0x14004472b
   1400446e6:	outs   dx,BYTE PTR ds:[rsi]
   1400446e7:	fs rex.B jb 0x14004475d
   1400446eb:	outs   dx,DWORD PTR ds:[rsi]
   1400446ec:	ja     0x140044756
   1400446ee:	gs (bad) 
   1400446f0:	and    BYTE PTR fs:[rip+0x200a2973],ah        # 0x1600e706a
   1400446f7:	and    BYTE PTR [rax],ah
   1400446f9:	and    BYTE PTR [rax],ch
   1400446fb:	jae    0x140044771
   1400446fd:	(bad)  
   1400446fe:	jb     0x140044774
   140044700:	rex.B jb 0x140044775
   140044703:	outs   dx,DWORD PTR ds:[rsi]
   140044704:	ja     0x14004476e
   140044706:	gs (bad) 
   140044708:	and    BYTE PTR fs:[rdx],ah
   14004470b:	push   rbx
   14004470c:	je     0x14004476f
   14004470e:	outs   dx,BYTE PTR ds:[rsi]
   14004470f:	fs (bad) 
   140044711:	jb     0x140044777
   140044713:	rex.B jb 0x140044788
   140044716:	outs   dx,DWORD PTR ds:[rsi]
   140044717:	ja     0x14004473b
   140044719:	sub    DWORD PTR [rdx],ecx
   14004471b:	and    BYTE PTR [rax],ah
   14004471d:	and    BYTE PTR [rax],ah
   14004471f:	sub    BYTE PTR [rbp+0x6e],ah
   140044722:	fs rex.B jb 0x140044798
   140044726:	outs   dx,DWORD PTR ds:[rsi]
   140044727:	ja     0x140044791
   140044729:	gs (bad) 
   14004472b:	and    BYTE PTR fs:[rdx],ah
   14004472e:	push   rbx
   14004472f:	je     0x140044792
   140044731:	outs   dx,BYTE PTR ds:[rsi]
   140044732:	fs (bad) 
   140044734:	jb     0x14004479a
   140044736:	rex.B jb 0x1400447ab
   140044739:	outs   dx,DWORD PTR ds:[rsi]
   14004473a:	ja     0x14004475e
   14004473c:	sub    DWORD PTR [rdx],ecx
   14004473e:	add    BYTE PTR [rax],al
   140044740:	and    BYTE PTR [rax],ah
   140044742:	and    BYTE PTR [rax],ah
   140044744:	sub    BYTE PTR [rdi+rbp*2+0x63],ch
   140044748:	(bad)  
   140044749:	je     0x1400447b4
   14004474b:	outs   dx,DWORD PTR ds:[rsi]
   14004474c:	outs   dx,BYTE PTR ds:[rsi]
   14004474d:	and    BYTE PTR [rip+0x67252067],ah        # 0x1a72967ba
   140044753:	sub    DWORD PTR [rdx],ecx
   140044755:	and    BYTE PTR [rax],ah
   140044757:	and    BYTE PTR [rax],ah
   140044759:	sub    BYTE PTR [rbx+0x69],dh
   14004475c:	jp     0x1400447c3
   14004475e:	and    BYTE PTR [rip+0x67252067],ah        # 0x1a72967cb
   140044764:	sub    DWORD PTR [rdx],ecx
   140044766:	add    BYTE PTR [rax],al
   140044768:	and    BYTE PTR [rax],ah
   14004476a:	and    BYTE PTR [rax],ah
   14004476c:	sub    BYTE PTR [rbx+0x75],ah
   14004476f:	jb     0x1400447e7
   140044771:	gs and BYTE PTR fs:[rsi+0x29],al
   140044776:	or     al,BYTE PTR [rax]
   140044778:	add    BYTE PTR [rax],al
   14004477a:	add    BYTE PTR [rax],al
   14004477c:	add    BYTE PTR [rax],al
   14004477e:	pop    rcx
   14004477f:	rex and eax,0x2d2d2d25
   140044785:	and    BYTE PTR [rdi+0x72],ah
   140044788:	(bad)  
   140044789:	jo     0x1400447f3
   14004478b:	jbe    0x1400447f6
   14004478d:	jp     0x1400447af
   14004478f:	rex.WRB
   140044790:	gs je  0x1400447f4
   140044793:	push   rax
   140044794:	outs   dx,DWORD PTR ds:[rsi]
   140044795:	jae    0x14004480b
   140044797:	and    BYTE PTR [rcx+0x6e],ch
   14004479a:	jo     0x140044811
   14004479c:	je     0x1400447a8
   14004479e:	add    BYTE PTR [rax],al
   1400447a0:	and    eax,0x72432025
   1400447a5:	gs (bad) 
   1400447a7:	je     0x14004480e
   1400447a9:	and    BYTE PTR fs:[rdx+0x79],ah
   1400447ad:	and    BYTE PTR [rax+0x72],dh
   1400447b0:	outs   dx,DWORD PTR ds:[rsi]
   1400447b1:	addr32 jb 0x140044815
   1400447b4:	ins    DWORD PTR es:[rdi],dx
   1400447b5:	cmp    ah,BYTE PTR [rax]
   1400447b7:	and    eax,0x65762073
   1400447bc:	jb     0x140044831
   1400447be:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
   1400447c5:	sub    BYTE PTR [rip+0xa2973],ah        # 0x1400e713e
   1400447cb:	add    BYTE PTR [rax],al
   1400447cd:	add    BYTE PTR [rax],al
   1400447cf:	add    BYTE PTR [rip+0x6f462025],ah        # 0x1af4a67fa
   1400447d5:	jb     0x1400447f7
   1400447d7:	jne    0x14004484c
   1400447d9:	gs jb  0x140044816
   1400447dc:	and    BYTE PTR [rip+0xa73],ah        # 0x140045255
   1400447e2:	add    BYTE PTR [rax],al
   1400447e4:	add    BYTE PTR [rax],al
   1400447e6:	add    BYTE PTR [rax],al
   1400447e8:	and    eax,0x69542025
   1400447ed:	je     0x14004485b
   1400447ef:	cmp    ah,BYTE PTR gs:[rax]
   1400447f2:	and    eax,0xa73
   1400447f7:	add    BYTE PTR [rip+0x50202025],ah        # 0x190246822
   1400447fd:	jne    0x140044873
   1400447ff:	and    BYTE PTR [rax+rbp*2+0x69],dh
   140044803:	jae    0x140044825
   140044805:	(bad)  
   140044806:	gs je  0x140044880
   140044809:	gs outs dx,BYTE PTR gs:[rsi]
   14004480c:	and    BYTE PTR [rdx+0x65],ah
   14004480f:	imul   ebp,DWORD PTR [esi+0x66],0x61206769
   140044817:	outs   dx,BYTE PTR ds:[rsi]
   140044818:	and    BYTE PTR fs:[rbp+0x6e],ah
   14004481c:	imul   sp,WORD PTR fs:[rdi+0x2e],0x2020
   140044823:	push   rbx
   140044824:	gs and BYTE PTR gs:[rcx],dh
   140044828:	jae    0x14004489e
   14004482a:	pop    rdi
   14004482b:	jb     0x140044892
   14004482d:	(bad)  
   14004482e:	fs cs ins DWORD PTR es:[rdi],dx
   140044831:	jo     0x140044861
   140044833:	or     al,BYTE PTR [rax]
   140044835:	add    BYTE PTR [rax],al
   140044837:	add    BYTE PTR [rip+0xa2025],ah        # 0x1400e6862
   14004483d:	add    BYTE PTR [rax],al
   14004483f:	add    BYTE PTR [rip+0x45202025],ah        # 0x18524686a
   140044845:	outs   dx,BYTE PTR ds:[rsi]
   140044846:	and    BYTE PTR fs:[rdi+0x66],ch
   14004484a:	and    BYTE PTR [rdi+0x72],ah
   14004484d:	(bad)  
   14004484e:	jo     0x1400448b8
   140044850:	jbe    0x1400448bb
   140044852:	jp     0x140044874
   140044854:	rex.WRB
   140044855:	gs je  0x1400448b9
   140044858:	push   rax
   140044859:	outs   dx,DWORD PTR ds:[rsi]
   14004485a:	jae    0x1400448d0
   14004485c:	and    BYTE PTR [rcx+0x6e],ch
   14004485f:	jo     0x1400448d6
   140044861:	je     0x14004486d
   140044863:	add    BYTE PTR [rip+0xa202025],ah        # 0x14a24688e
   140044869:	add    BYTE PTR [rax],al
   14004486b:	add    BYTE PTR [rax],al
   14004486d:	add    BYTE PTR [rax],al
   14004486f:	add    BYTE PTR [rip+0x6f422025],ah        # 0x1af46689a
   140044875:	jne    0x1400448e5
   140044877:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x3a786f42
   14004487f:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a42968e9
   140044885:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a42968ef
   14004488b:	or     al,BYTE PTR [rax]
   14004488d:	add    BYTE PTR [rax],al
   14004488f:	add    BYTE PTR [rbx+0x0],ah
   140044892:	cmp    al,BYTE PTR [rax]
   140044894:	pop    rsp
   140044895:	add    BYTE PTR [rax+rax*1+0x65],dh
   140044899:	add    BYTE PTR [rbp+0x0],ch
   14004489c:	jo     0x14004489e
   14004489e:	pop    rsp
   14004489f:	add    BYTE PTR [rdx+0x0],ah
   1400448a2:	(bad)  
   1400448a3:	add    BYTE PTR [rax+rax*1+0x73],dh
   1400448a7:	add    BYTE PTR [rbp+0x0],ah
   1400448aa:	jb     0x1400448ac
   1400448ac:	jbe    0x1400448ae
   1400448ae:	add    BYTE PTR gs:[rax+rax*1+0x77],bl
   1400448b3:	add    BYTE PTR [rcx+0x0],ch
   1400448b6:	outs   dx,BYTE PTR ds:[rsi]
   1400448b7:	add    BYTE PTR [rsi],dh
   1400448b9:	add    BYTE PTR [rax+rax*1],dh
   1400448bc:	pop    rsp
   1400448bd:	add    BYTE PTR [rdi+0x0],ah
   1400448c0:	jb     0x1400448c2
   1400448c2:	(bad)  
   1400448c3:	add    BYTE PTR [rax+0x0],dh
   1400448c6:	push   0x69007600
   1400448cb:	add    BYTE PTR [rdx+0x0],bh
   1400448ce:	pop    rsp
   1400448cf:	add    BYTE PTR [rax+rax*1+0x6f],ah
   1400448d3:	add    BYTE PTR [rax+rax*1+0x6e],dh
   1400448d7:	add    BYTE PTR [rbp+0x0],ah
   1400448da:	(bad)  
   1400448db:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400448df:	add    BYTE PTR [rax+rax*1+0x63],bl
   1400448e3:	add    BYTE PTR [rdi+0x0],ch
   1400448e6:	ins    DWORD PTR es:[rdi],dx
   1400448e7:	add    BYTE PTR [rbp+0x0],ch
   1400448ea:	outs   dx,DWORD PTR ds:[rsi]
   1400448eb:	add    BYTE PTR [rsi+0x0],ch
   1400448ee:	pop    rsp
   1400448ef:	add    BYTE PTR [rbp+0x0],ch
   1400448f2:	jo     0x1400448f4
   1400448f4:	add    BYTE PTR [ebp+0x0],ah
   1400448f8:	outs   dx,BYTE PTR ds:[rsi]
   1400448f9:	add    BYTE PTR [rsi],ch
   1400448fb:	add    BYTE PTR [rbx+0x0],ah
   1400448fe:	add    BYTE PTR [rax],al
   140044900:	and    eax,0x56472025
   140044905:	and    BYTE PTR [rsi+0x6f],ch
   140044908:	fs cmp ah,BYTE PTR gs:[rax]
   14004490c:	or     ah,BYTE PTR [rip+0x25202025]        # 0x165246937
   140044912:	jae    0x14004491e
   140044914:	add    BYTE PTR [rax],al
   140044916:	add    BYTE PTR [rax],al
   140044918:	and    eax,0x56472025
   14004491d:	and    BYTE PTR [rbp+0x64],ah
   140044920:	cmp    ah,BYTE PTR gs:[eax]
   140044924:	or     ah,BYTE PTR [rip+0x25202025]        # 0x16524694f
   14004492a:	jae    0x14004494c
   14004492c:	sub    eax,0x7325203e
   140044931:	or     al,BYTE PTR [rax]
   140044933:	add    BYTE PTR [rax],al
   140044935:	add    BYTE PTR [rax],al
   140044937:	add    BYTE PTR [rdi+0x61],dh
   14004493a:	jb     0x1400449aa
   14004493c:	imul   ebp,DWORD PTR [rsi+0x67],0x706d203a
   140044943:	outs   dx,BYTE PTR gs:[esi]
   140044946:	and    BYTE PTR [rbx+0x74],dh
   140044949:	(bad)  
   14004494a:	movsxd ebp,DWORD PTR [rbx+0x20]
   14004494d:	outs   dx,DWORD PTR ds:[rsi]
   14004494e:	jbe    0x1400449b5
   140044950:	jb     0x1400449b8
   140044952:	ins    BYTE PTR es:[rdi],dx
   140044953:	outs   dx,DWORD PTR ds:[rsi]
   140044954:	ja     0x140044960
   140044956:	add    BYTE PTR [rax],al
   140044958:	ja     0x1400449bb
   14004495a:	jb     0x1400449ca
   14004495c:	imul   ebp,DWORD PTR [rsi+0x67],0x706d203a
   140044963:	outs   dx,BYTE PTR gs:[esi]
   140044966:	and    BYTE PTR [rbx+0x74],dh
   140044969:	(bad)  
   14004496a:	movsxd ebp,DWORD PTR [rbx+0x20]
   14004496d:	jne    0x1400449dd
   14004496f:	fs gs jb 0x1400449d9
   140044973:	ins    BYTE PTR es:[rdi],dx
   140044974:	outs   dx,DWORD PTR ds:[rsi]
   140044975:	ja     0x140044981
   140044977:	add    BYTE PTR [rip+0x56472025],ah        # 0x1964b69a2
   14004497d:	and    BYTE PTR [rbx+0x65],dh
   140044980:	je     0x1400449a2
   140044982:	outs   dx,WORD PTR ds:[rsi]
   140044984:	outs   dx,BYTE PTR ds:[rsi]
   140044985:	je     0x1400449c1
   140044987:	and    BYTE PTR [rip+0x2066322e],ah        # 0x1606a7bbb
   14004498d:	(bad)  
   14004498e:	and    eax,0x67692073
   140044993:	outs   dx,BYTE PTR ds:[rsi]
   140044994:	outs   dx,DWORD PTR ds:[rsi]
   140044995:	jb     0x1400449fc
   140044997:	or     al,BYTE PTR fs:[rax]
   14004499a:	add    BYTE PTR [rax],al
   14004499c:	add    BYTE PTR [rax],al
   14004499e:	add    BYTE PTR [rax],al
   1400449a0:	and    eax,0x56472025
   1400449a5:	and    BYTE PTR [rbx+0x65],dh
   1400449a8:	je     0x1400449ca
   1400449aa:	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400449ad:	outs   dx,DWORD PTR ds:[rsi]
   1400449ae:	jb     0x1400449ea
   1400449b0:	and    BYTE PTR [rip+0x2066332e],ah        # 0x1606a7ce4
   1400449b6:	and    eax,0x2066332e
   1400449bb:	and    eax,0x2066332e
   1400449c0:	and    eax,0x6c6f6373
   1400449c5:	outs   dx,DWORD PTR ds:[rsi]
   1400449c6:	jb     0x1400449d2
	...
   1400449d0:	and    eax,0x56472025
   1400449d5:	and    BYTE PTR [rbx+0x65],dh
   1400449d8:	je     0x1400449fa
   1400449da:	jae    0x140044a50
   1400449dc:	jns    0x140044a4a
   1400449de:	cmp    ah,BYTE PTR gs:[rax]
   1400449e1:	and    eax,0xa2073
   1400449e6:	add    BYTE PTR [rax],al
   1400449e8:	and    eax,0x56472025
   1400449ed:	and    BYTE PTR [rbx+0x65],dh
   1400449f0:	je     0x140044a12
   1400449f2:	jae    0x140044a68
   1400449f4:	jns    0x140044a62
   1400449f6:	cmp    bh,BYTE PTR gs:[rdx]
   1400449f9:	and    BYTE PTR [rip+0xa73],ah        # 0x140045472
   1400449ff:	add    BYTE PTR [rcx+riz*2+0x62],ch
   140044a03:	gs ins BYTE PTR es:[rdi],dx
   140044a05:	sub    BYTE PTR [rdx+0x74],ah
   140044a08:	gs js  0x140044a2b
   140044a0b:	and    eax,0x74652073
   140044a10:	gs js  0x140044a3f
   140044a13:	sub    BYTE PTR [rip+0x2c706264],ah        # 0x16c74ac7d
   140044a19:	and    eax,0x29706264
   140044a1e:	sub    DWORD PTR [rax],esp
   140044a20:	ja     0x140044a8b
   140044a22:	je     0x140044a8c
   140044a24:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140044a27:	outs   dx,DWORD PTR ds:[rsi]
   140044a28:	jb     0x140044a4a
   140044a2a:	and    eax,0xa3b73
   140044a2f:	add    BYTE PTR [rax],ah
   140044a31:	ins    DWORD PTR es:[rdi],dx
   140044a32:	jo     0x140044a93
   140044a34:	(bad)  
   140044a35:	gs jp  0x140044aa1
   140044a38:	gs jb  0x140044a5b
   140044a3b:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
   140044a43:	(bad)  
   140044a44:	jb     0x140044ab8
   140044a46:	outs   dx,DWORD PTR ds:[rsi]
   140044a47:	ja     0x140044a69
   140044a49:	(bad)  
   140044a4a:	jb     0x140044ab3
   140044a4c:	jae    0x140044a58
   140044a4e:	add    BYTE PTR [rax],al
   140044a50:	fs jb  0x140044ab4
   140044a53:	ja     0x140044a75
   140044a55:	sub    BYTE PTR [rip+0x2c706264],ah        # 0x16c74acbf
   140044a5b:	and    eax,0x29706264
   140044a60:	and    BYTE PTR [rax],al
   140044a62:	add    BYTE PTR [rax],al
   140044a64:	add    BYTE PTR [rax],al
   140044a66:	add    BYTE PTR [rax],al
   140044a68:	or     ah,BYTE PTR [rax]
   140044a6a:	and    BYTE PTR [rsi],ch
   140044a6c:	movsxd ebp,DWORD PTR cs:[rdi+0x6e]
   140044a70:	je     0x140044ae4
   140044a72:	outs   dx,DWORD PTR ds:[rsi]
   140044a73:	ins    BYTE PTR es:[rdi],dx
   140044a74:	jae    0x140044a96
   140044a76:	sub    BYTE PTR [rip+0x2c706264],ah        # 0x16c74ace0
   140044a7c:	and    eax,0x29706264
   140044a81:	and    BYTE PTR [rcx+0x6e],ah
   140044a84:	and    BYTE PTR fs:[rax],ch
   140044a87:	and    eax,0x2c706264
   140044a8c:	and    eax,0x29706264
   140044a91:	cs and BYTE PTR cs:[rax],ch
   140044a95:	and    eax,0x2c706264
   140044a9a:	and    eax,0x29706264
   140044a9f:	add    BYTE PTR [rax],ah
   140044aa1:	ja     0x140044b0c
   140044aa3:	je     0x140044b0d
   140044aa5:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140044aa8:	outs   dx,DWORD PTR ds:[rsi]
   140044aa9:	jb     0x140044acb
   140044aab:	and    eax,0xa3b73
   140044ab0:	and    BYTE PTR [rax],ah
   140044ab2:	imul   bp,WORD PTR [rsp+rbp*2+0x20],0x2528
   140044ab9:	fs (bad) 
   140044abb:	jo     0x140044ae9
   140044abd:	and    eax,0x29706264
   140044ac2:	add    BYTE PTR [rax],al
   140044ac4:	add    BYTE PTR [rax],al
   140044ac6:	add    BYTE PTR [rax],al
   140044ac8:	or     ah,BYTE PTR [rax]
   140044aca:	and    BYTE PTR [rip+0x6425282d],ch        # 0x1a42972fd
   140044ad0:	(bad)  
   140044ad1:	jo     0x140044aff
   140044ad3:	and    eax,0x29706264
	...
   140044ae0:	or     ah,BYTE PTR [rax]
   140044ae2:	and    BYTE PTR [rip+0x6379632d],ch        # 0x1a37dae15
   140044ae8:	ins    BYTE PTR es:[rdi],dx
   140044ae9:	and    BYTE PTR gs:[rdi+0x69],dh
   140044aed:	je     0x140044b57
   140044aef:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140044af2:	outs   dx,DWORD PTR ds:[rsi]
   140044af3:	jb     0x140044b15
   140044af5:	and    eax,0xa3b73
   140044afa:	add    BYTE PTR [rax],al
   140044afc:	add    BYTE PTR [rax],al
   140044afe:	add    BYTE PTR [rax],al
   140044b00:	fs jb  0x140044b64
   140044b03:	ja     0x140044b25
   140044b05:	sub    BYTE PTR [rip+0x2c706264],ah        # 0x16c74ad6f
   140044b0b:	and    eax,0x29706264
   140044b10:	and    BYTE PTR [rax],ah
	...
   140044b1e:	add    BYTE PTR [rax],al
   140044b20:	and    BYTE PTR [rax],ah
   140044b22:	imul   bp,WORD PTR [rsp+rbp*2+0x20],0x7566
   140044b29:	ins    BYTE PTR es:[rdi],dx
   140044b2a:	ins    BYTE PTR es:[rdi],dx
   140044b2b:	movsxd ebp,DWORD PTR [rcx+0x72]
   140044b2e:	movsxd ebp,DWORD PTR [rbp+riz*2+0x20]
   140044b32:	js     0x140044ba7
   140044b34:	movsxd esp,DWORD PTR [rcx+0x6c]
   140044b37:	gs and BYTE PTR fs:[rip+0x20706264],ah        # 0x16074ada3
   140044b3f:	jns    0x140044bb4
   140044b41:	movsxd esp,DWORD PTR [rcx+0x6c]
   140044b44:	gs and BYTE PTR fs:[rip+0x20706264],ah        # 0x16074adb0
   140044b4c:	jae    0x140044bb6
   140044b4e:	imul   esp,DWORD PTR [rsi+0x74],0x28206465
   140044b55:	and    eax,0x2c706264
   140044b5a:	and    eax,0x29706264
   140044b5f:	and    BYTE PTR [rdi+0x69],dh
   140044b62:	je     0x140044bcc
   140044b64:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140044b67:	outs   dx,DWORD PTR ds:[rsi]
   140044b68:	jb     0x140044b8a
   140044b6a:	and    eax,0xa3b73
   140044b6f:	add    BYTE PTR [rdx+rsi*2+0x61],ah
   140044b73:	ja     0x140044b95
   140044b75:	data16 jne 0x140044be4
   140044b78:	ins    BYTE PTR es:[rdi],dx
   140044b79:	movsxd ebp,DWORD PTR [rcx+0x72]
   140044b7c:	movsxd ebp,DWORD PTR [rbp+riz*2+0x20]
   140044b80:	js     0x140044bf5
   140044b82:	movsxd esp,DWORD PTR [rcx+0x6c]
   140044b85:	gs and BYTE PTR fs:[rip+0x20706264],ah        # 0x16074adf1
   140044b8d:	jns    0x140044c02
   140044b8f:	movsxd esp,DWORD PTR [rcx+0x6c]
   140044b92:	gs and BYTE PTR fs:[rip+0x20706264],ah        # 0x16074adfe
   140044b9a:	jae    0x140044c04
   140044b9c:	imul   esp,DWORD PTR [rsi+0x74],0x28206465
   140044ba3:	and    eax,0x2c706264
   140044ba8:	and    eax,0x29706264
   140044bad:	cmp    ecx,DWORD PTR [rdx]
   140044baf:	add    BYTE PTR [rip+0x20564725],ah        # 0x1605a92da
   140044bb5:	push   rbp
   140044bb6:	push   rbx
   140044bb7:	rex.RB push r10
   140044bb9:	and    BYTE PTR [rbx+0x48],dl
   140044bbc:	push   r8
   140044bbe:	and    BYTE PTR [r11+0x20],r11b
   140044bc2:	add    BYTE PTR [rax],al
   140044bc4:	add    BYTE PTR [rax],al
   140044bc6:	add    BYTE PTR [rax],al
   140044bc8:	pop    rbp
   140044bc9:	and    BYTE PTR [rax],ah
   140044bcb:	and    eax,0x73252064
   140044bd0:	and    BYTE PTR [rip+0x67692073],ah        # 0x1a76d6c49
   140044bd6:	outs   dx,BYTE PTR ds:[rsi]
   140044bd7:	outs   dx,DWORD PTR ds:[rsi]
   140044bd8:	jb     0x140044c3f
   140044bda:	or     al,BYTE PTR fs:[rax]
   140044bdd:	add    BYTE PTR [rax],al
   140044bdf:	add    BYTE PTR [rax],ah
   140044be1:	and    eax,0x64252064
   140044be6:	add    BYTE PTR [rax],al
   140044be8:	and    eax,DWORD PTR [rsi+0x49]
   140044beb:	rex.RXB and BYTE PTR [r11],r14b
   140044bee:	xor    cl,BYTE PTR cs:[rdx]
   140044bf1:	add    BYTE PTR [rax],al
   140044bf3:	add    BYTE PTR [rax],al
   140044bf5:	add    BYTE PTR [rax],al
   140044bf7:	add    BYTE PTR [rax+0x6f],dl
   140044bfa:	jb     0x140044c70
   140044bfc:	jb     0x140044c5f
   140044bfe:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x0
   140044c06:	add    BYTE PTR [rax],al
   140044c08:	rex.XB
   140044c09:	outs   dx,BYTE PTR gs:[rsi]
   140044c0b:	je     0x140044c72
   140044c0d:	jb     0x140044c19
   140044c0f:	add    BYTE PTR [rbp+0x65],cl
   140044c12:	je     0x140044c86
   140044c14:	imul   esp,DWORD PTR [rbx+0xa],0xa344100
   140044c1b:	add    BYTE PTR [rax],al
   140044c1d:	add    BYTE PTR [rax],al
   140044c1f:	add    BYTE PTR [rcx],dh
   140044c21:	xor    BYTE PTR [rax],dh
   140044c23:	xor    BYTE PTR cs:[rax],dh
   140044c26:	or     al,BYTE PTR [rax]
   140044c28:	push   rbx
   140044c29:	imul   ebp,DWORD PTR [rsi+0x67],0xa656c
   140044c30:	sub    eax,0xa32
   140044c35:	add    BYTE PTR [rax],al
   140044c37:	add    BYTE PTR [rcx],dh
   140044c39:	xor    dh,BYTE PTR [rax]
   140044c3b:	xor    BYTE PTR [rax],ah
   140044c3d:	xor    cl,BYTE PTR [rdx]
   140044c3f:	add    BYTE PTR [rbx],ah
   140044c41:	and    BYTE PTR [rdi+0x65],al
   140044c44:	outs   dx,BYTE PTR ds:[rsi]
   140044c45:	gs jb  0x140044ca9
   140044c48:	je     0x140044caf
   140044c4a:	and    BYTE PTR fs:[rdx+0x79],ah
   140044c4e:	and    BYTE PTR [rip+0x65762073],ah        # 0x1a57a6cc7
   140044c54:	jb     0x140044cc9
   140044c56:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
   140044c5d:	sub    BYTE PTR [rip+0xa2973],ah        # 0x1400e75d6
   140044c63:	add    BYTE PTR [rax],al
   140044c65:	add    BYTE PTR [rax],al
   140044c67:	add    BYTE PTR [rbx],ah
   140044c69:	and    BYTE PTR [rbp+0x6e],ah
   140044c6c:	and    BYTE PTR fs:[rdi+0x66],ch
   140044c70:	and    BYTE PTR [rsi+0x49],al
   140044c73:	rex.RXB and BYTE PTR [r14+0x69],r12b
   140044c77:	ins    BYTE PTR es:[rdi],dx
   140044c78:	or     al,BYTE PTR gs:[rax]
   140044c7b:	add    BYTE PTR [rax],al
   140044c7d:	add    BYTE PTR [rax],al
   140044c7f:	add    BYTE PTR [rbx+0x0],ah
   140044c82:	cmp    al,BYTE PTR [rax]
   140044c84:	pop    rsp
   140044c85:	add    BYTE PTR [rax+rax*1+0x65],dh
   140044c89:	add    BYTE PTR [rbp+0x0],ch
   140044c8c:	jo     0x140044c8e
   140044c8e:	pop    rsp
   140044c8f:	add    BYTE PTR [rdx+0x0],ah
   140044c92:	(bad)  
   140044c93:	add    BYTE PTR [rax+rax*1+0x73],dh
   140044c97:	add    BYTE PTR [rbp+0x0],ah
   140044c9a:	jb     0x140044c9c
   140044c9c:	jbe    0x140044c9e
   140044c9e:	add    BYTE PTR gs:[rax+rax*1+0x77],bl
   140044ca3:	add    BYTE PTR [rcx+0x0],ch
   140044ca6:	outs   dx,BYTE PTR ds:[rsi]
   140044ca7:	add    BYTE PTR [rsi],dh
   140044ca9:	add    BYTE PTR [rax+rax*1],dh
   140044cac:	pop    rsp
   140044cad:	add    BYTE PTR [rdi+0x0],ah
   140044cb0:	jb     0x140044cb2
   140044cb2:	(bad)  
   140044cb3:	add    BYTE PTR [rax+0x0],dh
   140044cb6:	push   0x69007600
   140044cbb:	add    BYTE PTR [rdx+0x0],bh
   140044cbe:	pop    rsp
   140044cbf:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140044cc3:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140044cc7:	add    BYTE PTR [rbp+0x0],ah
   140044cca:	(bad)  
   140044ccb:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140044ccf:	add    BYTE PTR [rax+rax*1+0x63],bl
   140044cd3:	add    BYTE PTR [rdi+0x0],ch
   140044cd6:	ins    DWORD PTR es:[rdi],dx
   140044cd7:	add    BYTE PTR [rbp+0x0],ch
   140044cda:	outs   dx,DWORD PTR ds:[rsi]
   140044cdb:	add    BYTE PTR [rsi+0x0],ch
   140044cde:	pop    rsp
   140044cdf:	add    BYTE PTR [rsi+0x0],ah
   140044ce2:	imul   eax,DWORD PTR [rax],0x670067
   140044ce8:	add    BYTE PTR gs:[rsi+0x0],ch
   140044cec:	add    BYTE PTR cs:[rbx+0x0],ah
	...
   140044cf8:	and    eax,0x64252064
   140044cfd:	and    BYTE PTR [rbx],ah
   140044cff:	and    eax,0x25783230
   140044d04:	xor    BYTE PTR [rdx],dh
   140044d06:	js     0x140044d2d
   140044d08:	xor    BYTE PTR [rdx],dh
   140044d0a:	js     0x140044d16
   140044d0c:	add    BYTE PTR [rax],al
   140044d0e:	add    BYTE PTR [rax],al
   140044d10:	imul   sp,WORD PTR [rdi+0x5f],0x6573
   140044d16:	je     0x140044d77
   140044d18:	jae    0x140044d8e
   140044d1a:	jns    0x140044d88
   140044d1c:	cmp    ah,BYTE PTR gs:[rax]
   140044d1f:	jne    0x140044d8f
   140044d21:	jae    0x140044d98
   140044d23:	jo     0x140044d95
   140044d25:	outs   dx,DWORD PTR ds:[rsi]
   140044d26:	jb     0x140044d9c
   140044d28:	gs and BYTE PTR fs:[rbx+0x74],dh
   140044d2d:	jns    0x140044d9b
   140044d2f:	and    BYTE PTR gs:[rip+0x202d2073],ah        # 0x160316da9
   140044d36:	imul   esp,DWORD PTR [rdi+0x6e],0x6e69726f
   140044d3d:	or     al,BYTE PTR [eax]
   140044d40:	and    eax,0x64252064
   140044d45:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4296daf
   140044d4b:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4296db5
   140044d51:	and    BYTE PTR [rip+0x2066312e],ah        # 0x1606a7e85
   140044d57:	and    eax,0x2066342e
   140044d5c:	and    eax,0x2e252064
   140044d61:	xor    DWORD PTR [rsi+0x20],esp
   140044d64:	and    eax,0x2066312e
   140044d69:	and    eax,0x64252064
   140044d6e:	and    BYTE PTR [rip+0x30305c73],ah        # 0x17034a9e7
   140044d74:	xor    DWORD PTR [rdx],ecx
   140044d76:	add    BYTE PTR [rax],al
   140044d78:	and    eax,0x64252064
   140044d7d:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4296de7
   140044d83:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4296ded
   140044d89:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4296df3
   140044d8f:	and    BYTE PTR [rip+0x2e252064],ah        # 0x16e296df9
   140044d95:	xor    DWORD PTR [rsi+0x20],esp
   140044d98:	and    eax,0x64252064
   140044d9d:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4296e07
   140044da3:	or     al,BYTE PTR [rax]
   140044da5:	add    BYTE PTR [rax],al
   140044da7:	add    BYTE PTR [rip+0x64252064],ah        # 0x1a4296e11
   140044dad:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4296e17
   140044db3:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4296e1d
   140044db9:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4296e23
   140044dbf:	and    BYTE PTR [rip+0x2e252064],ah        # 0x16e296e29
   140044dc5:	xor    DWORD PTR [rsi+0x20],esp
   140044dc8:	and    eax,0x64252064
   140044dcd:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4296e37
   140044dd3:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4296e3d
   140044dd9:	or     al,BYTE PTR [rax]
   140044ddb:	add    BYTE PTR [rax],al
   140044ddd:	add    BYTE PTR [rax],al
   140044ddf:	add    BYTE PTR [rip+0x64252064],ah        # 0x1a4296e49
   140044de5:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4296e4f
   140044deb:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4296e55
   140044df1:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4296e5b
   140044df7:	and    BYTE PTR [rip+0x2e252064],ah        # 0x16e296e61
   140044dfd:	xor    esp,DWORD PTR [rsi+0x20]
   140044e00:	and    eax,0x2e252064
   140044e05:	xor    al,0x66
   140044e07:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4296e71
   140044e0d:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4296e77
   140044e13:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4296e7d
   140044e19:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a4296e83
   140044e1f:	or     al,BYTE PTR [rax]
	...
   140044e2d:	rcl    BYTE PTR [rdx+0x6d696c40],0x65
   140044e34:	add    BYTE PTR [rax],al
   140044e36:	add    BYTE PTR [rax],al
   140044e38:	outs   dx,DWORD PTR ds:[rsi]
   140044e39:	ins    BYTE PTR es:[rdi],dx
   140044e3a:	imul   esi,DWORD PTR [rsi+0x65],0x73000000
   140044e41:	imul   ebp,DWORD PTR [rsi+rsi*2+0x65],0x74000072
   140044e49:	gs (bad) 
   140044e4b:	ins    BYTE PTR es:[rdi],dx
   140044e4c:	add    BYTE PTR [rax],al
   140044e4e:	add    BYTE PTR [rax],al
   140044e50:	xor    eax,0x3100322c
   140044e55:	sub    al,0x35
   140044e57:	add    BYTE PTR [rcx+0x71],ah
   140044e5a:	jne    0x140044ebd
   140044e5c:	add    BYTE PTR [rax],al
   140044e5e:	add    BYTE PTR [rax],al
   140044e60:	fs (bad) 
   140044e62:	jb     0x140044ecf
   140044e64:	(bad)  
   140044e65:	ins    BYTE PTR es:[rdi],dx
   140044e66:	jne    0x140044ecd
	...
   140044e70:	fs (bad) 
   140044e72:	jb     0x140044edf
   140044e74:	movsxd edi,DWORD PTR [rcx+0x61]
   140044e77:	outs   dx,BYTE PTR ds:[rsi]
	...
   140044e80:	fs (bad) 
   140044e82:	jb     0x140044eef
   140044e84:	addr32 jb 0x140044ee8
   140044e87:	jns    0x140044e89
   140044e89:	add    BYTE PTR [rax],al
   140044e8b:	add    BYTE PTR [rax],al
   140044e8d:	add    BYTE PTR [rax],al
   140044e8f:	add    BYTE PTR [rcx+riz*2+0x72],ah
   140044e93:	imul   esp,DWORD PTR [rdi+0x72],0x65
   140044e97:	jns    0x140044e99
   140044e99:	add    BYTE PTR [rax],al
   140044e9b:	add    BYTE PTR [rax],al
   140044e9d:	add    BYTE PTR [rax],al
   140044e9f:	add    BYTE PTR [rcx+riz*2+0x72],ah
   140044ea3:	imul   ebp,DWORD PTR [rbp+0x61],0x67
   140044ea7:	outs   dx,BYTE PTR gs:[rsi]
   140044ea9:	je     0x140044f0c
   140044eab:	add    BYTE PTR [rax],al
   140044ead:	add    BYTE PTR [rax],al
   140044eaf:	add    BYTE PTR [rcx+riz*2+0x72],ah
   140044eb3:	imul   esi,DWORD PTR [rdx+0x65],0x64
   140044eb7:	add    BYTE PTR [rsi+0x75],ah
   140044eba:	movsxd ebp,DWORD PTR [rax+0x73]
   140044ebd:	imul   esp,DWORD PTR [rcx+0x0],0x6867696c
   140044ec4:	je     0x140044f2d
   140044ec6:	jb     0x140044f2d
   140044ec8:	outs   dx,BYTE PTR gs:[rsi]
   140044eca:	add    BYTE PTR [rax],al
   140044ecc:	rex.WRB add BYTE PTR [r8],r8b
   140044ecf:	add    BYTE PTR [rip+0x2c642573],ah        # 0x16c687448
   140044ed5:	and    eax,0x430064
   140044eda:	add    BYTE PTR [rax],al
   140044edc:	add    BYTE PTR [rax],al
   140044ede:	add    BYTE PTR [rax],al
   140044ee0:	je     0x140044f54
   140044ee2:	(bad)  
   140044ee3:	outs   dx,BYTE PTR ds:[rsi]
   140044ee4:	jae    0x140044f56
   140044ee6:	(bad)  
   140044ee7:	jb     0x140044f4e
   140044ee9:	outs   dx,BYTE PTR ds:[rsi]
   140044eea:	je     0x140044eec
   140044eec:	add    BYTE PTR [rax],al
   140044eee:	add    BYTE PTR [rax],al
   140044ef0:	and    esp,DWORD PTR [rip+0x25783230]        # 0x1657c8126
   140044ef6:	xor    BYTE PTR [rdx],dh
   140044ef8:	js     0x140044f1f
   140044efa:	xor    BYTE PTR [rdx],dh
   140044efc:	js     0x140044efe
   140044efe:	add    BYTE PTR [rax],al
   140044f00:	and    BYTE PTR [rbx+0x74],dh
   140044f03:	jns    0x140044f71
   140044f05:	gs cmp eax,0x22
   140044f0b:	add    BYTE PTR [rax],al
   140044f0d:	add    BYTE PTR [rax],al
   140044f0f:	add    BYTE PTR [rsi+0x6f],ah
   140044f12:	outs   dx,BYTE PTR ds:[rsi]
   140044f13:	je     0x140044f42
   140044f15:	data16 (bad) 
   140044f17:	ins    DWORD PTR es:[rdi],dx
   140044f18:	imul   ebp,DWORD PTR [rcx+rdi*2+0x3a],0x3b7325
   140044f20:	outs   dx,WORD PTR ds:[rsi]
   140044f22:	outs   dx,BYTE PTR ds:[rsi]
   140044f23:	je     0x140044f52
   140044f25:	jae    0x140044f90
   140044f27:	jp     0x140044f8e
   140044f29:	cmp    ah,BYTE PTR [rip+0x3b66322e]        # 0x17b6a815d
   140044f2f:	add    BYTE PTR [rsi+0x69],ah
   140044f32:	ins    BYTE PTR es:[rdi],dx
   140044f33:	ins    BYTE PTR es:[rdi],dx
   140044f34:	cmp    ah,BYTE PTR [rip+0x3b73]        # 0x140048aad
   140044f3a:	add    BYTE PTR [rax],al
   140044f3c:	and    al,BYTE PTR [rax]
   140044f3e:	add    BYTE PTR [rax],al
   140044f40:	imul   bp,WORD PTR [rsp+rbp*2+0x3a],0x6f6e
   140044f47:	outs   dx,BYTE PTR ds:[rsi]
   140044f48:	cmp    eax,DWORD PTR gs:[rax]
   140044f4b:	add    BYTE PTR [rax],al
   140044f4d:	add    BYTE PTR [rax],al
   140044f4f:	add    BYTE PTR [rbx+0x74],dh
   140044f52:	jb     0x140044fc3
   140044f54:	imul   esp,DWORD PTR [rbp+0x3a],0x25
   140044f58:	jae    0x140044f95
   140044f5a:	add    BYTE PTR [rax],al
   140044f5c:	add    BYTE PTR [rax],al
   140044f5e:	add    BYTE PTR [rax],al
   140044f60:	jae    0x140044fd6
   140044f62:	jb     0x140044fd3
   140044f64:	imul   esp,DWORD PTR [rbp+0x2d],0x77
   140044f68:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x3b64253a
	...
   140044f78:	jae    0x140044fee
   140044f7a:	jb     0x140044feb
   140044f7c:	imul   esp,DWORD PTR [rbp+0x2d],0x64
   140044f80:	(bad)  
   140044f81:	jae    0x140044feb
   140044f83:	(bad)  
   140044f84:	jb     0x140044ff8
   140044f86:	(bad)  
   140044f87:	jns    0x140044fc3
   140044f89:	and    eax,0x3b73
   140044f8e:	add    BYTE PTR [rax],al
   140044f90:	cmp    al,0x21
   140044f92:	sub    eax,0x202d
   140044f97:	add    BYTE PTR [rax],ah
   140044f99:	sub    eax,0xa3e2d
   140044f9e:	add    BYTE PTR [rax],al
   140044fa0:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140044fa2:	and    BYTE PTR [rbx+0x75],dh
   140044fa5:	jo     0x140045017
   140044fa7:	outs   dx,DWORD PTR ds:[rsi]
   140044fa8:	jb     0x14004501e
   140044faa:	and    BYTE PTR [rsi+0x6f],ah
   140044fad:	jb     0x140044fcf
   140044faf:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140044fb2:	jo     0x140045026
   140044fb4:	gs jae 0x14004502a
   140044fb7:	gs and BYTE PTR fs:[rdi+0x75],ch
   140044fbc:	je     0x14004502e
   140044fbe:	jne    0x140045034
   140044fc0:	and    BYTE PTR cs:[rsi+0x6f],cl
   140044fc4:	je     0x140044fe6
   140044fc6:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140044fc9:	jo     0x140045034
   140044fcb:	ins    BYTE PTR es:[rdi],dx
   140044fcc:	gs and BYTE PTR fs:[rdi+0x69],dh
   140044fd1:	je     0x14004503b
   140044fd3:	and    BYTE PTR [rdx+0x6c],bh
   140044fd6:	imul   esp,DWORD PTR [rdx+0x2e],0xa
   140044fdd:	add    BYTE PTR [rax],al
   140044fdf:	add    BYTE PTR [rdi+rdi*1],bh
   140044fe2:	js     0x140045051
   140044fe4:	ins    BYTE PTR es:[rdi],dx
   140044fe5:	and    BYTE PTR [rsi+0x65],dh
   140044fe8:	jb     0x14004505d
   140044fea:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140044ff1:	xor    BYTE PTR [rdx],ah
   140044ff3:	and    BYTE PTR [rbp+0x6e],ah
   140044ff6:	movsxd ebp,DWORD PTR [rdi+0x64]
   140044ff9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140045000:	rex.RX sub eax,0x73202238
   140045006:	je     0x140045069
   140045008:	outs   dx,BYTE PTR ds:[rsi]
   140045009:	fs (bad) 
   14004500b:	ins    BYTE PTR es:[rdi],dx
   14004500c:	outs   dx,DWORD PTR ds:[rsi]
   14004500d:	outs   dx,BYTE PTR ds:[rsi]
   14004500e:	gs cmp eax,0x226f6e22
   140045014:	(bad)  
   140045015:	or     al,BYTE PTR ds:[rax]
   140045018:	jae    0x14004508e
   14004501a:	jns    0x140045088
   14004501c:	gs jae 0x140045087
   14004501f:	gs gs je 0x140045023
   140045023:	add    BYTE PTR [rax],al
   140045025:	add    BYTE PTR [rax],al
   140045027:	add    BYTE PTR [rdi+rdi*1],bh
   14004502a:	js     0x140045099
   14004502c:	ins    BYTE PTR es:[rdi],dx
   14004502d:	sub    eax,0x6c797473
   140045032:	gs jae 0x14004509d
   140045035:	gs gs je 0x140045059
   140045039:	push   0x3d666572
   14004503e:	and    ah,BYTE PTR [rip+0x74202273]        # 0x1b42472b7
   140045044:	jns    0x1400450b6
   140045046:	gs cmp eax,0x78657422
   14004504c:	je     0x14004507d
   14004504e:	movsxd esi,DWORD PTR [rbx+0x73]
   140045051:	and    bh,BYTE PTR [rdi]
   140045053:	or     al,BYTE PTR ds:[rax]
   140045056:	add    BYTE PTR [rax],al
   140045058:	cmp    al,0x21
   14004505a:	rex.R
   14004505b:	rex.WRXB
   14004505c:	rex.XB push r12
   14004505e:	pop    rcx
   14004505f:	push   rax
   140045060:	and    BYTE PTR [r11+0x76],r14b
   140045064:	and    BYTE PTR [eax+0x55],dl
   140045068:	rex.X
   140045069:	rex.WR
   14004506a:	rex.WB
   14004506b:	rex.XB and BYTE PTR [r10],spl
   14004506e:	sub    eax,0x33572f2f
   140045073:	rex.XB (bad) 
   140045075:	(bad)  
   140045076:	rex.R push rsp
   140045078:	and    BYTE PTR [rbx+0x56],r10b
   14004507c:	rex.RXB and BYTE PTR [r9],r14b
   14004507f:	xor    BYTE PTR cs:[rdi],ch
   140045082:	(bad)  
   140045083:	rex.RB
   140045084:	rex.WRX and r9b,BYTE PTR [rdx]
   140045087:	add    BYTE PTR [rax],ah
   140045089:	and    ch,BYTE PTR [rax+0x74]
   14004508c:	je     0x1400450fe
   14004508e:	cmp    ch,BYTE PTR [rdi]
   140045090:	(bad)  
   140045091:	ja     0x14004510a
   140045093:	ja     0x1400450c3
   140045095:	ja     0x1400450ca
   140045097:	outs   dx,DWORD PTR cs:[rsi]
   140045099:	jb     0x140045102
   14004509b:	(bad)  
   14004509c:	push   rsp
   14004509d:	push   rdx
   14004509e:	(bad)  
   14004509f:	xor    dh,BYTE PTR [rax]
   1400450a1:	xor    BYTE PTR [rcx],dh
   1400450a3:	(bad)  
   1400450a4:	push   rdx
   1400450a5:	rex.RB
   1400450a6:	rex.XB sub eax,0x2d475653
   1400450ac:	xor    dh,BYTE PTR [rax]
   1400450ae:	xor    BYTE PTR [rcx],dh
   1400450b0:	xor    BYTE PTR [rcx],bh
   1400450b2:	xor    BYTE PTR [rdi+rbp*1],dh
   1400450b5:	rex.R push rsp
   1400450b7:	rex.R (bad) 
   1400450b9:	jae    0x140045131
   1400450bb:	xor    DWORD PTR [eax],esi
   1400450be:	cs fs je 0x140045126
   1400450c2:	and    al,BYTE PTR [rax]
	...
   1400450d0:	and    BYTE PTR [rbx+0xa],bl
   1400450d3:	and    BYTE PTR [rcx+riz*1],bh
   1400450d6:	push   r12
   1400450d8:	push   rsp
   1400450d9:	rex.WR
   1400450da:	rex.WB push r11
   1400450dc:	push   rsp
   1400450dd:	and    BYTE PTR [rbx+0x76],dh
   1400450e0:	and    BYTE PTR [eax+0x6d],bh
   1400450e4:	ins    BYTE PTR es:[rdi],dx
   1400450e5:	outs   dx,BYTE PTR ds:[rsi]
   1400450e6:	jae    0x140045122
   1400450e8:	js     0x140045156
   1400450ea:	imul   ebp,DWORD PTR [rsi+0x6b],0x41444320
   1400450f1:	push   rsp
   1400450f2:	and    BYTE PTR [r11],spl
   1400450f5:	rex.RX
   1400450f6:	rex.WB pop r8
   1400450f8:	rex.RB
   1400450f9:	and    BYTE PTR [rdx],r12b
   1400450fc:	push   0x3a707474
   140045101:	(bad)  
   140045102:	(bad)  
   140045103:	ja     0x14004517c
   140045105:	ja     0x140045135
   140045107:	ja     0x14004513c
   140045109:	outs   dx,DWORD PTR cs:[rsi]
   14004510b:	jb     0x140045174
   14004510d:	(bad)  
   14004510e:	xor    DWORD PTR [rcx],edi
   140045110:	cmp    DWORD PTR [rcx],edi
   140045112:	(bad)  
   140045113:	js     0x140045181
   140045115:	imul   ebp,DWORD PTR [rsi+0x6b],0x5d0a3e22
   14004511c:	add    BYTE PTR [rax],al
   14004511e:	add    BYTE PTR [rax],al
   140045120:	cmp    al,0x21
   140045122:	sub    eax,0x6547202d
   140045127:	outs   dx,BYTE PTR ds:[rsi]
   140045128:	gs jb  0x14004518c
   14004512b:	je     0x140045192
   14004512d:	and    BYTE PTR fs:[rdx+0x79],ah
   140045131:	and    BYTE PTR [rip+0x65762073],ah        # 0x1a57a71aa
   140045137:	jb     0x1400451ac
   140045139:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
   140045140:	sub    BYTE PTR [rip+0xa2973],ah        # 0x1400e7ab9
   140045146:	add    BYTE PTR [rax],al
   140045148:	and    BYTE PTR [rax],ah
   14004514a:	and    BYTE PTR [rax],ah
   14004514c:	and    BYTE PTR [rsi+0x6f],al
   14004514f:	jb     0x140045171
   140045151:	jne    0x1400451c6
   140045153:	gs jb  0x140045190
   140045156:	and    BYTE PTR [rip+0x20202073],ah        # 0x1602471cf
   14004515c:	push   rsp
   14004515d:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x7325203a
   140045165:	and    BYTE PTR [rax],ah
   140045167:	and    BYTE PTR [rax],ah
   140045169:	push   rax
   14004516a:	(bad)  
   14004516b:	addr32 gs jae 0x1400451a9
   14004516f:	and    BYTE PTR [rip+0x2d2d2064],ah        # 0x16d3171d9
   140045175:	or     al,BYTE PTR ds:[rax]
   140045178:	cmp    al,0x73
   14004517a:	jbe    0x1400451e3
   14004517c:	and    BYTE PTR [rdi+0x69],dh
   14004517f:	fs je  0x1400451ea
   140045182:	cmp    eax,0x70642522
   140045187:	js     0x1400451ab
   140045189:	and    BYTE PTR [rax+0x65],ch
   14004518c:	imul   esp,DWORD PTR [rdi+0x68],0x25223d74
   140045193:	fs jo  0x14004520e
   140045196:	and    cl,BYTE PTR [rdx]
	...
   1400451a0:	and    BYTE PTR [rax+0x6d],bh
   1400451a3:	ins    BYTE PTR es:[rdi],dx
   1400451a4:	outs   dx,BYTE PTR ds:[rsi]
   1400451a5:	jae    0x1400451e4
   1400451a7:	and    ch,BYTE PTR [rax+0x74]
   1400451aa:	je     0x14004521c
   1400451ac:	cmp    ch,BYTE PTR [rdi]
   1400451ae:	(bad)  
   1400451af:	ja     0x140045228
   1400451b1:	ja     0x1400451e1
   1400451b3:	ja     0x1400451e8
   1400451b5:	outs   dx,DWORD PTR cs:[rsi]
   1400451b7:	jb     0x140045220
   1400451b9:	(bad)  
   1400451ba:	xor    dh,BYTE PTR [rax]
   1400451bc:	xor    BYTE PTR [rax],dh
   1400451be:	(bad)  
   1400451bf:	jae    0x140045237
   1400451c1:	and    al,BYTE PTR [eax]
   1400451c4:	add    BYTE PTR [rax],al
   1400451c6:	add    BYTE PTR [rax],al
   1400451c8:	and    BYTE PTR [rax+0x6d],bh
   1400451cb:	ins    BYTE PTR es:[rdi],dx
   1400451cc:	outs   dx,BYTE PTR ds:[rsi]
   1400451cd:	jae    0x140045209
   1400451cf:	js     0x14004523d
   1400451d1:	imul   ebp,DWORD PTR [rsi+0x6b],0x7468223d
   1400451d8:	je     0x14004524a
   1400451da:	cmp    ch,BYTE PTR [rdi]
   1400451dc:	(bad)  
   1400451dd:	ja     0x140045256
   1400451df:	ja     0x14004520f
   1400451e1:	ja     0x140045216
   1400451e3:	outs   dx,DWORD PTR cs:[rsi]
   1400451e5:	jb     0x14004524e
   1400451e7:	(bad)  
   1400451e8:	xor    DWORD PTR [rcx],edi
   1400451ea:	cmp    DWORD PTR [rcx],edi
   1400451ec:	(bad)  
   1400451ed:	js     0x14004525b
   1400451ef:	imul   ebp,DWORD PTR [rsi+0x6b],0x22
   1400451f6:	add    BYTE PTR [rax],al
   1400451f8:	cmp    al,0x67
   1400451fa:	and    BYTE PTR [rcx+0x64],ch
   1400451fd:	cmp    eax,0x30732522
   140045202:	and    ah,BYTE PTR [rax]
   140045204:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   140045208:	jae    0x140045247
   14004520a:	and    ah,BYTE PTR [rdi+0x72]
   14004520d:	(bad)  
   14004520e:	jo     0x140045278
   140045210:	and    al,BYTE PTR [rax]
   140045212:	add    BYTE PTR [rax],al
   140045214:	add    BYTE PTR [rax],al
   140045216:	add    BYTE PTR [rax],al
   140045218:	and    BYTE PTR [rbx+0x74],dh
   14004521b:	jns    0x140045289
   14004521d:	gs cmp eax,0x6e6f6622
   140045223:	je     0x140045252
   140045225:	data16 (bad) 
   140045227:	ins    DWORD PTR es:[rdi],dx
   140045228:	imul   ebp,DWORD PTR [rcx+rdi*2+0x3a],0x663b7325
   140045230:	outs   dx,DWORD PTR ds:[rsi]
   140045231:	outs   dx,BYTE PTR ds:[rsi]
   140045232:	je     0x140045261
   140045234:	jae    0x14004529f
   140045236:	jp     0x14004529d
   140045238:	cmp    ah,BYTE PTR [rip+0x3b66322e]        # 0x17b6a846c
   14004523e:	and    bh,BYTE PTR [rsi]
   140045240:	or     al,BYTE PTR [rax]
   140045242:	add    BYTE PTR [rax],al
   140045244:	add    BYTE PTR [rax],al
   140045246:	add    BYTE PTR [rax],al
   140045248:	cmp    al,0x74
   14004524a:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x3c73253e
   140045252:	(bad)  
   140045253:	je     0x1400452be
   140045255:	je     0x1400452c3
   140045257:	gs or  al,BYTE PTR ds:[rax]
   14004525b:	add    BYTE PTR [rax],al
   14004525d:	add    BYTE PTR [rax],al
   14004525f:	add    BYTE PTR [rcx+riz*2],bh
   140045262:	and    BYTE PTR [rax+0x6c],bh
   140045265:	imul   ebp,DWORD PTR [rsi+0x6b],0x6572683a
   14004526c:	cmp    ax,0x2522
   140045270:	jae    0x140045294
   140045272:	or     al,BYTE PTR ds:[rax]
   140045275:	add    BYTE PTR [rax],al
   140045277:	add    BYTE PTR [rdi+rbp*1],bh
   14004527a:	(bad)  
   14004527b:	add    BYTE PTR ds:[rax],al
   14004527e:	add    BYTE PTR [rax],al
   140045280:	cmp    al,0x2f
   140045282:	addr32 ds cmp al,0x2f
   140045286:	jae    0x1400452fe
   140045288:	or     al,BYTE PTR ds:[eax]
   14004528c:	add    BYTE PTR [rax],al
   14004528e:	add    BYTE PTR [rax],al
   140045290:	cmp    al,0x67
   140045292:	and    BYTE PTR [rcx+0x64],ch
   140045295:	cmp    eax,0x25732522
   14004529a:	ins    BYTE PTR es:[rdi],dx
   14004529b:	and    ah,BYTE PTR fs:[rax]
   14004529e:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   1400452a2:	jae    0x1400452e1
   1400452a4:	and    ah,BYTE PTR [rbx+0x6c]
   1400452a7:	jne    0x14004531c
   1400452a9:	je     0x140045310
   1400452ab:	jb     0x1400452cf
   1400452ad:	add    BYTE PTR ds:[rax],al
   1400452b0:	cmp    al,0x2f
   1400452b2:	or     al,BYTE PTR ds:[eax]
   1400452b6:	add    BYTE PTR [rax],al
   1400452b8:	cmp    al,0x67
   1400452ba:	and    BYTE PTR [rcx+0x64],ch
   1400452bd:	cmp    eax,0x25732522
   1400452c2:	ins    BYTE PTR es:[rdi],dx
   1400452c3:	and    ah,BYTE PTR fs:[rax]
   1400452c6:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   1400452ca:	jae    0x140045309
   1400452cc:	and    ch,BYTE PTR [rsi+0x6f]
   1400452cf:	fs and bh,BYTE PTR gs:[rsi]
   1400452d3:	add    BYTE PTR [rax],al
   1400452d5:	add    BYTE PTR [rax],al
   1400452d7:	add    BYTE PTR [rdi+riz*2],bh
   1400452da:	and    BYTE PTR [rcx+0x64],ch
   1400452dd:	cmp    eax,0x25732522
   1400452e2:	ins    BYTE PTR es:[rdi],dx
   1400452e3:	and    ah,BYTE PTR fs:[rax]
   1400452e6:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   1400452ea:	jae    0x140045329
   1400452ec:	and    ah,BYTE PTR [rbp+0x64]
   1400452ef:	and    bh,BYTE PTR gs:[esi]
   1400452f3:	add    BYTE PTR [rip+0x3b746726],ch        # 0x17b78ba1f
   1400452f9:	add    BYTE PTR [rax],al
   1400452fb:	add    BYTE PTR [rax],al
   1400452fd:	add    BYTE PTR [rax],al
   1400452ff:	add    BYTE PTR [rsp+rsi*2],bh
   140045302:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x2573253e
   14004530a:	jae    0x14004530c
   14004530c:	add    BYTE PTR [rax],al
   14004530e:	add    BYTE PTR [rax],al
   140045310:	and    eax,0x742f3c73
   140045315:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0xa3e
   14004531d:	add    BYTE PTR [rax],al
   14004531f:	add    BYTE PTR [rbx+0x0],ah
   140045322:	cmp    al,BYTE PTR [rax]
   140045324:	pop    rsp
   140045325:	add    BYTE PTR [rax+rax*1+0x65],dh
   140045329:	add    BYTE PTR [rbp+0x0],ch
   14004532c:	jo     0x14004532e
   14004532e:	pop    rsp
   14004532f:	add    BYTE PTR [rdx+0x0],ah
   140045332:	(bad)  
   140045333:	add    BYTE PTR [rax+rax*1+0x73],dh
   140045337:	add    BYTE PTR [rbp+0x0],ah
   14004533a:	jb     0x14004533c
   14004533c:	jbe    0x14004533e
   14004533e:	add    BYTE PTR gs:[rax+rax*1+0x77],bl
   140045343:	add    BYTE PTR [rcx+0x0],ch
   140045346:	outs   dx,BYTE PTR ds:[rsi]
   140045347:	add    BYTE PTR [rsi],dh
   140045349:	add    BYTE PTR [rax+rax*1],dh
   14004534c:	pop    rsp
   14004534d:	add    BYTE PTR [rdi+0x0],ah
   140045350:	jb     0x140045352
   140045352:	(bad)  
   140045353:	add    BYTE PTR [rax+0x0],dh
   140045356:	push   0x69007600
   14004535b:	add    BYTE PTR [rdx+0x0],bh
   14004535e:	pop    rsp
   14004535f:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140045363:	add    BYTE PTR [rax+rax*1+0x6e],dh
   140045367:	add    BYTE PTR [rbp+0x0],ah
   14004536a:	(bad)  
   14004536b:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14004536f:	add    BYTE PTR [rax+rax*1+0x63],bl
   140045373:	add    BYTE PTR [rdi+0x0],ch
   140045376:	ins    DWORD PTR es:[rdi],dx
   140045377:	add    BYTE PTR [rbp+0x0],ch
   14004537a:	outs   dx,DWORD PTR ds:[rsi]
   14004537b:	add    BYTE PTR [rsi+0x0],ch
   14004537e:	pop    rsp
   14004537f:	add    BYTE PTR [rbx+0x0],dh
   140045382:	jbe    0x140045384
   140045384:	add    BYTE PTR [edi+0x0],ah
   140045388:	add    BYTE PTR gs:[rsi+0x0],ch
   14004538c:	add    BYTE PTR cs:[rbx+0x0],ah
	...
   140045398:	jae    0x140045410
   14004539a:	addr32 pop rdi
   14004539c:	jae    0x140045403
   14004539e:	je     0x1400453ff
   1400453a0:	jae    0x140045416
   1400453a2:	jns    0x140045410
   1400453a4:	cmp    ah,BYTE PTR gs:[rax]
   1400453a7:	jne    0x140045417
   1400453a9:	jae    0x140045420
   1400453ab:	jo     0x14004541d
   1400453ad:	outs   dx,DWORD PTR ds:[rsi]
   1400453ae:	jb     0x140045424
   1400453b0:	gs and BYTE PTR fs:[rbx+0x74],dh
   1400453b5:	jns    0x140045423
   1400453b7:	and    BYTE PTR gs:[rip+0x202d2073],ah        # 0x160317431
   1400453be:	imul   esp,DWORD PTR [rdi+0x6e],0x6e69726f
   1400453c5:	or     al,BYTE PTR [eax]
   1400453c8:	outs   dx,BYTE PTR gs:[rsi]
   1400453ca:	add    BYTE PTR fs:[rbp+0x69],ch
   1400453ce:	fs fs ins BYTE PTR es:[rdi],dx
   1400453d1:	add    BYTE PTR gs:[rax],al
   1400453d4:	add    BYTE PTR [rax],al
   1400453d6:	add    BYTE PTR [rax],al
   1400453d8:	cmp    al,0x74
   1400453da:	gs js  0x140045451
   1400453dd:	and    BYTE PTR [rbp+riz*2+0x78],dh
   1400453e1:	je     0x140045410
   1400453e3:	(bad)  
   1400453e4:	outs   dx,BYTE PTR ds:[rsi]
   1400453e5:	movsxd ebp,DWORD PTR [rax+0x6f]
   1400453e8:	jb     0x140045427
   1400453ea:	and    ah,BYTE PTR [rip+0x202273]        # 0x140247663
   1400453f0:	je     0x140045464
   1400453f2:	(bad)  
   1400453f3:	outs   dx,BYTE PTR ds:[rsi]
   1400453f4:	jae    0x14004545c
   1400453f6:	outs   dx,DWORD PTR ds:[rsi]
   1400453f7:	jb     0x140045466
   1400453f9:	cmp    eax,0x746f7222
   1400453fe:	(bad)  
   1400453ff:	je     0x140045466
   140045401:	sub    BYTE PTR [rip+0x25203039],ch        # 0x165248440
   140045407:	and    BYTE PTR fs:[rip+0x20222964],ah        # 0x160267d72
   14004540e:	add    BYTE PTR [rax],al
   140045410:	js     0x14004544f
   140045412:	and    ah,BYTE PTR [rip+0x79202264]        # 0x1b924767c
   140045418:	cmp    eax,0x22642522
   14004541d:	add    BYTE PTR [rax],al
   14004541f:	add    BYTE PTR [rsi],bh
   140045421:	add    BYTE PTR [rax],al
   140045423:	add    BYTE PTR [rax],al
   140045425:	add    BYTE PTR [rax],al
   140045427:	add    BYTE PTR [rdi+rbp*1],bh
   14004542a:	je     0x140045491
   14004542c:	js     0x1400454a2
   14004542e:	or     al,BYTE PTR ds:[rax]
   140045431:	add    BYTE PTR [rax],al
   140045433:	add    BYTE PTR [rax],al
   140045435:	add    BYTE PTR [rax],al
   140045437:	add    BYTE PTR [riz*2+0x70696c6c],bh
   14004543e:	jae    0x1400454a5
   140045440:	and    BYTE PTR [rbx+0x78],ah
   140045443:	cmp    eax,0x22642522
   140045448:	and    BYTE PTR [rbx+0x79],ah
   14004544b:	cmp    eax,0x22642522
	...
   140045458:	and    BYTE PTR [rdx+0x78],dh
   14004545b:	cmp    eax,0x22642522
   140045460:	and    BYTE PTR [rdx+0x79],dh
   140045463:	cmp    eax,0x22642522
   140045468:	add    BYTE PTR [rax],al
   14004546a:	add    BYTE PTR [rax],al
   14004546c:	(bad)  
   14004546d:	or     al,BYTE PTR ds:[rax]
   140045470:	cmp    al,0x70
   140045472:	(bad)  
   140045473:	je     0x1400454dd
   140045475:	add    BYTE PTR [rax],al
   140045477:	add    BYTE PTR [rax],ah
   140045479:	fs cmp eax,0x22
   14004547f:	add    BYTE PTR [rdx],ah
   140045481:	(bad)  
   140045482:	or     al,BYTE PTR ds:[rax]
   140045485:	add    BYTE PTR [rax],al
   140045487:	add    BYTE PTR [rax+rsi*2],bh
   14004548a:	outs   dx,DWORD PTR ds:[rsi]
   14004548b:	ins    BYTE PTR es:[rdi],dx
   14004548c:	jns    0x1400454f5
   14004548e:	outs   dx,DWORD PTR ds:[rsi]
   14004548f:	outs   dx,BYTE PTR ds:[rsi]
	...
   140045498:	and    BYTE PTR [rax+0x6f],dh
   14004549b:	imul   ebp,DWORD PTR [rsi+0x74],0x223d73
   1400454a2:	add    BYTE PTR [rax],al
   1400454a4:	and    eax,0x64252c64
   1400454a9:	and    BYTE PTR [rax],al
   1400454ab:	add    BYTE PTR [rax],al
   1400454ad:	add    BYTE PTR [rax],al
   1400454af:	add    BYTE PTR [rax+rsi*2],bh
   1400454b2:	outs   dx,DWORD PTR ds:[rsi]
   1400454b3:	ins    BYTE PTR es:[rdi],dx
   1400454b4:	jns    0x140045522
   1400454b6:	imul   ebp,DWORD PTR [rsi+0x65],0x0
   1400454bd:	add    BYTE PTR [rax],al
   1400454bf:	add    BYTE PTR [rbx+riz*2],bh
   1400454c2:	ins    BYTE PTR es:[rdi],dx
   1400454c3:	imul   esi,DWORD PTR [rax+0x50],0x20687461
   1400454ca:	imul   esp,DWORD PTR [rbp+rdi*1+0x22],0x6170796d
   1400454d2:	je     0x14004553c
   1400454d4:	and    eax,0xa3e2273
   1400454d9:	add    BYTE PTR [rax],al
   1400454db:	add    BYTE PTR [rax],al
   1400454dd:	add    BYTE PTR [rax],al
   1400454df:	add    BYTE PTR [rax+rsi*2],bh
   1400454e2:	outs   dx,DWORD PTR ds:[rsi]
   1400454e3:	ins    BYTE PTR es:[rdi],dx
   1400454e4:	jns    0x14004554d
   1400454e6:	outs   dx,DWORD PTR ds:[rsi]
   1400454e7:	outs   dx,BYTE PTR ds:[rsi]
   1400454e8:	and    BYTE PTR [rax+0x6f],dh
   1400454eb:	imul   ebp,DWORD PTR [rsi+0x74],0x223d73
   1400454f2:	add    BYTE PTR [rax],al
   1400454f4:	add    BYTE PTR [rax],al
   1400454f6:	add    BYTE PTR [rax],al
   1400454f8:	and    ch,BYTE PTR [rdi]
   1400454fa:	or     bh,BYTE PTR ds:[rdi+rbp*1]
   1400454fe:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x70]
   140045502:	push   rax
   140045503:	(bad)  
   140045504:	je     0x14004556e
   140045506:	or     al,BYTE PTR ds:[rax]
   140045509:	add    BYTE PTR [rax],al
   14004550b:	add    BYTE PTR [rax],al
   14004550d:	add    BYTE PTR [rax],al
   14004550f:	add    BYTE PTR [rcx+rbp*2],bh
   140045512:	ins    DWORD PTR es:[rdi],dx
   140045513:	(bad)  
   140045514:	and    BYTE PTR gs:[eax+0x6c],bh
   140045519:	imul   ebp,DWORD PTR [rsi+0x6b],0x6572683a
   140045520:	cmp    ax,0x2522
   140045524:	jae    0x140045548
   140045526:	and    BYTE PTR [rdi+0x69],dh
   140045529:	fs je  0x140045594
   14004552c:	cmp    eax,0x70642522
   140045531:	js     0x140045555
   140045533:	and    BYTE PTR [rax+0x65],ch
   140045536:	imul   esp,DWORD PTR [rdi+0x68],0x25223d74
   14004553d:	fs jo  0x1400455b8
   140045540:	and    ah,BYTE PTR [rax]
   140045542:	jo     0x1400455b6
   140045544:	gs jae 0x1400455ac
   140045547:	jb     0x1400455bf
   140045549:	gs rex.B jae 0x1400455bd
   14004554d:	movsxd esi,DWORD PTR gs:[rdx+rdx*2+0x61]
   140045552:	je     0x1400455bd
   140045554:	outs   dx,DWORD PTR ds:[rsi]
   140045555:	cmp    eax,0x694d7822
   14004555a:	fs pop rcx
   14004555c:	imul   r12,QWORD PTR [r8+riz*1+0x6d],0x22746565
   140045565:	and    BYTE PTR [rax+0x3d],bh
   140045568:	and    ah,BYTE PTR [rip+0x79202264]        # 0x1b92477d2
   14004556e:	cmp    eax,0x22642522
   140045573:	and    BYTE PTR [rbx+0x6c],ah
   140045576:	imul   esi,DWORD PTR [rax+0x2d],0x68746170
   14004557d:	cmp    eax,0x6c727522
   140045582:	sub    BYTE PTR [rbx],ah
   140045584:	ins    DWORD PTR es:[rdi],dx
   140045585:	jns    0x1400455f7
   140045587:	(bad)  
   140045588:	je     0x1400455f2
   14004558a:	and    eax,0x2f222973
   14004558f:	or     al,BYTE PTR ds:[rax]
   140045592:	add    BYTE PTR [rax],al
   140045594:	add    BYTE PTR [rax],al
   140045596:	add    BYTE PTR [rax],al
   140045598:	push   rbp
   140045599:	push   rbp
   14004559a:	push   rbp
   14004559b:	push   rbp
   14004559c:	push   rbp
   14004559d:	push   rbp
   14004559e:	cmc    
   14004559f:	(bad)  
   1400455a0:	add    BYTE PTR [rax],al
   1400455a2:	add    BYTE PTR [rax],al
   1400455a4:	add    DWORD PTR [rax],eax
   1400455a6:	add    BYTE PTR [rax],al
   1400455a8:	add    al,BYTE PTR [rax]
   1400455aa:	add    BYTE PTR [rax],al
   1400455ac:	add    eax,DWORD PTR [rax]
   1400455ae:	add    BYTE PTR [rax],al
   1400455b0:	add    al,0x0
	...
   1400455be:	add    BYTE PTR [rax],al
   1400455c0:	jo     0x1400455c2
	...
   140045616:	add    BYTE PTR [rax],al
   140045618:	or     BYTE PTR [rip+0x14005],dh        # 0x140059623
	...
   14004562e:	add    BYTE PTR [rax],al
   140045630:	push   rdx
   140045631:	push   rbx
   140045632:	rex.R push rbx
   140045634:	(bad)  
   140045635:	cli    
   140045636:	rex.XB xor esp,DWORD PTR [r14-0xe]
   14004563a:	mov    esi,0x974fa048
   14004563f:	xor    cl,BYTE PTR [rax+0x72]
   140045642:	pop    rdx
   140045643:	scas   al,BYTE PTR es:[rdi]
   140045644:	add    DWORD PTR [rax],eax
   140045646:	add    BYTE PTR [rax],al
   140045648:	cmp    bl,BYTE PTR [r12+r10*2+0x45]
   14004564d:	rex.WRB push r8
   14004564f:	pop    rsp
   140045650:	(bad)
   140045655:	jb     0x1400456cd
   140045657:	gs pop rsp
   140045659:	ja     0x1400456c4
   14004565b:	outs   dx,BYTE PTR ds:[rsi]
   14004565c:	ss xor al,0x5c
   14004565f:	addr32 jb 0x1400456c3
   140045662:	jo     0x1400456cc
   140045664:	jbe    0x1400456cf
   140045666:	jp     0x1400456c4
   140045668:	(bad)  
   140045669:	imul   ebp,DWORD PTR [rsi+0x5c],0x7774776d
   140045670:	outs   dx,DWORD PTR ds:[rsi]
   140045671:	jo     0x1400456dc
   140045673:	cs jo  0x1400456da
   140045676:	(bad)  
   140045677:	add    BYTE PTR [rax],al
   140045679:	add    BYTE PTR [rax],al
   14004567b:	add    BYTE PTR [rdx+0x0],ah
   14004567e:	add    BYTE PTR [rax],al
   140045680:	adc    eax,DWORD PTR [rax]
	...
   1400456ae:	add    BYTE PTR [rax],al
   1400456b0:	add    DWORD PTR [rcx+rax*1],eax
   1400456b3:	add    BYTE PTR [rdx+rax*2],al
   1400456b6:	add    BYTE PTR [rax],al
   1400456b8:	add    DWORD PTR [rdi],ecx
   1400456ba:	(bad)  
   1400456bb:	add    BYTE PTR [rdi],cl
   1400456bd:	push   rsp
   1400456be:	or     BYTE PTR [rax],al
   1400456c0:	sysenter 
   1400456c2:	(bad)  
   1400456c3:	add    BYTE PTR [rdi],cl
   1400456c5:	xor    cl,BYTE PTR [rbx]
   1400456c7:	(bad)  
   1400456c8:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b40956d0
   1400456ce:	(bad)  
   1400456cf:	add    BYTE PTR [rax-0x38fffff0],al
   1400456d5:	adc    BYTE PTR [rax],al
   1400456d7:	add    BYTE PTR [rax+0x21000456],bh
   1400456dd:	add    BYTE PTR [rax],al
   1400456df:	add    BYTE PTR [rax-0x38fffff0],al
   1400456e5:	adc    BYTE PTR [rax],al
   1400456e7:	add    BYTE PTR [rax+0x1000456],bh
   1400456ed:	sbb    DWORD PTR [rax],ecx
   1400456ef:	add    BYTE PTR [rcx],bl
   1400456f1:	or     DWORD PTR fs:[rax],eax
   1400456f4:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400456f8:	sbb    DWORD PTR [rsi+rax*1],esi
   1400456fb:	add    BYTE PTR [rcx],bl
   1400456fd:	xor    dl,BYTE PTR [rip+0x8140170]        # 0x148185873
   140045703:	add    BYTE PTR [rsp+riz*2],dl
   140045706:	or     BYTE PTR [rax],al
   140045708:	adc    al,0x54
   14004570a:	(bad)  
   14004570b:	add    BYTE PTR [rsp+rsi*1],dl
   14004570e:	(bad)  
   14004570f:	add    BYTE PTR [rdx+rsi*1],dl
   140045712:	adc    BYTE PTR [rax+0x1],dh
   140045715:	clts   
   140045717:	add    BYTE PTR [rdi],cl
   140045719:	or     DWORD PTR fs:[rax],eax
   14004571c:	andps  xmm1,XMMWORD PTR [rax]
   14004571f:	add    BYTE PTR [rdi],cl
   140045721:	xor    cl,BYTE PTR [rbx]
   140045723:	jo     0x140045746
   140045725:	or     al,BYTE PTR [rax+rax*1]
   140045728:	or     ah,ah
   14004572a:	(bad)  
   14004572b:	add    BYTE PTR [rip+0x20000634],al        # 0x160045d65
   140045731:	adc    eax,DWORD PTR [rax]
   140045733:	add    BYTE PTR [rax+0x13],dl
   140045736:	add    BYTE PTR [rax],al
   140045738:	adc    al,0x57
   14004573a:	add    al,0x0
   14004573c:	and    DWORD PTR [rax],eax
   14004573e:	add    BYTE PTR [rax],al
   140045740:	and    BYTE PTR [rbx],dl
   140045742:	add    BYTE PTR [rax],al
   140045744:	push   rax
   140045745:	adc    eax,DWORD PTR [rax]
   140045747:	add    BYTE PTR [rdi+rdx*2],dl
   14004574a:	add    al,0x0
   14004574c:	add    DWORD PTR [rax],edx
   14004574e:	(bad)  
   14004574f:	add    BYTE PTR [rax],dl
   140045751:	or     DWORD PTR fs:[rax],eax
   140045754:	adc    BYTE PTR [rax+rcx*1+0x0],dl
   140045758:	adc    BYTE PTR [rdx],dh
   14004575a:	or     al,0xe0
   14004575c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4095764
   140045762:	(bad)  
   140045763:	add    BYTE PTR [rax],al
   140045765:	adc    al,BYTE PTR [rax]
   140045767:	add    BYTE PTR [rbx],bh
   140045769:	adc    al,BYTE PTR [rax]
   14004576b:	add    BYTE PTR [rdi+rdx*2+0x4],cl
   14004576f:	add    BYTE PTR [rcx],ah
   140045771:	add    eax,0x34050002
   140045776:	(bad)  
   140045777:	add    BYTE PTR [rbx],bh
   140045779:	adc    al,BYTE PTR [rax]
   14004577b:	add    BYTE PTR [rbp+0x12],cl
   14004577e:	add    BYTE PTR [rax],al
   140045780:	pop    rsp
   140045781:	push   rdi
   140045782:	add    al,0x0
   140045784:	and    DWORD PTR [rax],eax
   140045786:	add    BYTE PTR [rax],al
   140045788:	cmp    edx,DWORD PTR [rdx]
   14004578a:	add    BYTE PTR [rax],al
   14004578c:	rex.WRB adc r8b,BYTE PTR [r8]
   14004578f:	add    BYTE PTR [rdi+rdx*2+0x4],bl
   140045793:	add    BYTE PTR [rcx],ah
   140045795:	add    BYTE PTR [rax],al
   140045797:	add    BYTE PTR [rax],al
   140045799:	adc    al,BYTE PTR [rax]
   14004579b:	add    BYTE PTR [rbx],bh
   14004579d:	adc    al,BYTE PTR [rax]
   14004579f:	add    BYTE PTR [rdi+rdx*2+0x4],cl
   1400457a3:	add    BYTE PTR [rcx],al
   1400457a5:	sbb    DWORD PTR [rax],ecx
   1400457a7:	add    BYTE PTR [rcx],bl
   1400457a9:	or     DWORD PTR fs:[rax],eax
   1400457ac:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400457b0:	sbb    DWORD PTR [rsi+rax*1],esi
   1400457b3:	add    BYTE PTR [rcx],bl
   1400457b5:	xor    dl,BYTE PTR [rip+0x40a0170]        # 0x1440e592b
   1400457bb:	add    BYTE PTR [rdx],cl
   1400457bd:	xor    al,0x6
   1400457bf:	add    BYTE PTR [rdx],cl
   1400457c1:	xor    al,BYTE PTR [rsi]
   1400457c3:	jo     0x1400457c6
   1400457c5:	(bad)  
   1400457c6:	add    al,BYTE PTR [rax]
   1400457c8:	(bad)  
   1400457c9:	xor    al,BYTE PTR [rdx]
   1400457cb:	xor    BYTE PTR [rcx],al
   1400457cd:	sbb    BYTE PTR [rax],cl
   1400457cf:	add    BYTE PTR [rax],bl
   1400457d1:	push   0x640f0002
   1400457d6:	or     DWORD PTR [rax],eax
   1400457d8:	sysenter 
   1400457da:	or     BYTE PTR [rax],al
   1400457dc:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400457df:	jo     0x1400457e2
   1400457e1:	sbb    eax,0x781d000a
   1400457e6:	add    al,BYTE PTR [rax]
   1400457e8:	sbb    BYTE PTR [rax+0x3],ch
   1400457eb:	add    BYTE PTR [rdi],cl
   1400457ed:	or     eax,DWORD PTR fs:[rax]
   1400457f0:	sysenter 
   1400457f2:	or     al,BYTE PTR [rax]
   1400457f4:	(bad)  
   1400457f6:	or     esi,DWORD PTR [rax+0x1]
   1400457f9:	or     al,BYTE PTR [rax+rax*1]
   1400457fc:	or     dh,BYTE PTR [rcx+rcx*1]
   1400457ff:	add    BYTE PTR [rdx],cl
   140045801:	push   rdx
   140045802:	(bad)  
   140045803:	jo     0x140045826
   140045805:	add    eax,0x68050002
   14004580a:	add    al,BYTE PTR [rax]
   14004580c:	push   rax
   14004580d:	adc    al,0x0
   14004580f:	add    ah,dh
   140045811:	adc    al,0x0
   140045813:	add    al,bh
   140045815:	push   rdi
   140045816:	add    al,0x0
   140045818:	and    DWORD PTR [rax],eax
   14004581a:	add    BYTE PTR [rax],al
   14004581c:	push   rax
   14004581d:	adc    al,0x0
   14004581f:	add    ah,dh
   140045821:	adc    al,0x0
   140045823:	add    al,bh
   140045825:	push   rdi
   140045826:	add    al,0x0
   140045828:	add    DWORD PTR [rcx],ecx
   14004582a:	add    eax,0x5620900
   14004582f:	jo     0x140045835
   140045831:	(bad)  
   140045832:	add    edx,DWORD PTR [rax+0x2]
   140045835:	xor    BYTE PTR [rax],al
   140045837:	add    BYTE PTR [rcx],ah
   140045839:	add    eax,0xe4050002
   14004583e:	(bad)  
   140045840:	mov    al,0x1f
   140045842:	add    BYTE PTR [rax],al
   140045844:	mov    cl,0x20
   140045846:	add    BYTE PTR [rax],al
   140045848:	sub    BYTE PTR [rax+0x4],bl
   14004584b:	add    BYTE PTR [rcx],ah
   14004584d:	add    eax,0xd4050002
   140045852:	(bad)  
   140045853:	add    BYTE PTR [rcx-0x18ffffe0],dh
   140045859:	and    BYTE PTR [rax],al
   14004585b:	add    BYTE PTR [rax],bh
   14004585d:	pop    rax
   14004585e:	add    al,0x0
   140045860:	and    DWORD PTR [rdx],ecx
   140045862:	add    al,0x0
   140045864:	or     dh,ah
   140045866:	(bad)  
   140045867:	add    BYTE PTR [rip+0xffffffffe7000dc4],al        # 0x127046631
   14004586d:	and    BYTE PTR [rax],al
   14004586f:	add    bl,dh
   140045871:	and    BYTE PTR [rax],al
   140045873:	add    BYTE PTR [rax+rbx*2+0x4],cl
   140045877:	add    BYTE PTR [rcx],ah
   140045879:	add    BYTE PTR [rax],al
   14004587b:	add    bh,ah
   14004587d:	and    BYTE PTR [rax],al
   14004587f:	add    bl,dh
   140045881:	and    BYTE PTR [rax],al
   140045883:	add    BYTE PTR [rax+rbx*2+0x4],cl
   140045887:	add    BYTE PTR [rcx],ah
   140045889:	add    BYTE PTR [rax],al
   14004588b:	add    BYTE PTR [rcx-0x18ffffe0],dh
   140045891:	and    BYTE PTR [rax],al
   140045893:	add    BYTE PTR [rax],bh
   140045895:	pop    rax
   140045896:	add    al,0x0
   140045898:	and    DWORD PTR [rax],eax
   14004589a:	add    BYTE PTR [rax],al
   14004589c:	mov    al,0x1f
   14004589e:	add    BYTE PTR [rax],al
   1400458a0:	mov    cl,0x20
   1400458a2:	add    BYTE PTR [rax],al
   1400458a4:	sub    BYTE PTR [rax+0x4],bl
   1400458a7:	add    BYTE PTR [rcx],al
   1400458a9:	or     BYTE PTR [rbx],al
   1400458ab:	add    BYTE PTR [rax],cl
   1400458ad:	rex.X add al,0xf0
   1400458b0:	add    ah,al
   1400458b2:	add    BYTE PTR [rax],al
   1400458b4:	and    DWORD PTR [rcx],ebx
   1400458b6:	or     al,BYTE PTR [rax]
   1400458b8:	sbb    esp,eax
   1400458ba:	add    al,0x0
   1400458bc:	adc    al,0x74
   1400458be:	or     eax,DWORD PTR [rax]
   1400458c0:	pcmpgtb mm1,QWORD PTR [rdx]
   1400458c3:	add    BYTE PTR [rdx],cl
   1400458c5:	push   rsp
   1400458c6:	or     DWORD PTR [rax],eax
   1400458c8:	add    eax,0x40000834
   1400458cd:	sbb    DWORD PTR [rax],eax
   1400458cf:	add    BYTE PTR [rcx+rbx*1+0x0],bl
   1400458d3:	add    BYTE PTR [rax+0x21000458],ch
   1400458d9:	add    BYTE PTR [rax],al
   1400458db:	add    BYTE PTR [rax+0x19],al
   1400458de:	add    BYTE PTR [rax],al
   1400458e0:	pop    rsp
   1400458e1:	sbb    DWORD PTR [rax],eax
   1400458e3:	add    BYTE PTR [rax+0x1000458],ch
   1400458e9:	(bad)  
   1400458ea:	add    al,BYTE PTR [rax]
   1400458ec:	(bad)  
   1400458ed:	xor    al,BYTE PTR [rdx]
   1400458ef:	xor    BYTE PTR [rcx],al
   1400458f1:	(bad)  
   1400458f3:	add    BYTE PTR [rdi],cl
   1400458f5:	xor    al,0xa
   1400458f7:	add    BYTE PTR [rdi],cl
   1400458f9:	jb     0x140045906
   1400458fb:	jo     0x1400458fe
   1400458fd:	or     al,BYTE PTR [rax+rax*1]
   140045900:	or     dh,BYTE PTR [rdx+rcx*1]
   140045903:	add    BYTE PTR [rdx],cl
   140045905:	jb     0x14004590d
   140045907:	jo     0x14004590a
   140045909:	clts   
   14004590b:	add    BYTE PTR [rdi],cl
   14004590d:	fs or  eax,0xc340f00
   140045913:	add    BYTE PTR [rdi],cl
   140045915:	xchg   edx,eax
   140045916:	or     esi,DWORD PTR [rax+0x21]
   140045919:	and    al,BYTE PTR [rsi]
   14004591b:	add    BYTE PTR [rdx],ah
   14004591d:	mov    BYTE PTR [rdx],al
   14004591f:	add    BYTE PTR [rdx],dl
   140045921:	js     0x140045926
   140045923:	add    BYTE PTR [rip+0xffffffff90000468],al        # 0xd0045d91
   140045929:	sbb    eax,0x1dd00000
   14004592e:	add    BYTE PTR [rax],al
   140045930:	or     BYTE PTR [rcx+0x4],bl
   140045933:	add    BYTE PTR [rcx],ah
   140045935:	add    BYTE PTR [rax],al
   140045937:	add    BYTE PTR [rax-0x2fffffe3],dl
   14004593d:	sbb    eax,0x59080000
   140045942:	add    al,0x0
   140045944:	add    DWORD PTR [rdx],ecx
   140045946:	add    al,0x0
   140045948:	or     dh,BYTE PTR [rsi+rax*1]
   14004594b:	add    BYTE PTR [rdx],cl
   14004594d:	xor    al,BYTE PTR [rsi]
   14004594f:	jo     0x140045952
   140045951:	(bad)  
   140045952:	add    al,BYTE PTR [rax]
   140045954:	(bad)  
   140045955:	xor    al,BYTE PTR [rdx]
   140045957:	xor    BYTE PTR [rcx],ah
   140045959:	add    eax,0x64050002
   14004595e:	(bad)  
   14004595f:	add    BYTE PTR [rax-0x6dffffe5],al
   140045965:	sbb    eax,DWORD PTR [rax]
   140045967:	add    BYTE PTR [rax+0x59],dl
   14004596a:	add    al,0x0
   14004596c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4095974
   140045972:	(bad)  
   140045973:	add    BYTE PTR [rdx-0x61ffffe5],dl
   140045979:	sbb    eax,DWORD PTR [rax]
   14004597b:	add    BYTE PTR [rax+0x59],bl
   14004597e:	add    al,0x0
   140045980:	and    DWORD PTR [rax],eax
   140045982:	add    BYTE PTR [rax],al
   140045984:	xchg   edx,eax
   140045985:	sbb    eax,DWORD PTR [rax]
   140045987:	add    BYTE PTR [rsi+0x5800001b],bl
   14004598d:	pop    rcx
   14004598e:	add    al,0x0
   140045990:	and    DWORD PTR [rax],eax
   140045992:	add    BYTE PTR [rax],al
   140045994:	sbb    BYTE PTR [rbx],0x0
   140045997:	add    BYTE PTR [rdx+0x5000001b],dl
   14004599d:	pop    rcx
   14004599e:	add    al,0x0
   1400459a0:	add    DWORD PTR [rsi],eax
   1400459a2:	add    al,BYTE PTR [rax]
   1400459a4:	(bad)  
   1400459a5:	xor    al,BYTE PTR [rdx]
   1400459a7:	xor    BYTE PTR [rcx],al
   1400459a9:	(bad)  
   1400459aa:	add    al,BYTE PTR [rax]
   1400459ac:	(bad)  
   1400459ad:	xor    al,BYTE PTR [rdx]
   1400459af:	xor    BYTE PTR [rcx],al
   1400459b1:	adc    al,0x8
   1400459b3:	add    BYTE PTR [rsp+riz*2],dl
   1400459b6:	or     BYTE PTR [rax],al
   1400459b8:	adc    al,0x54
   1400459ba:	(bad)  
   1400459bb:	add    BYTE PTR [rsp+rsi*1],dl
   1400459be:	(bad)  
   1400459bf:	add    BYTE PTR [rdx+rsi*1],dl
   1400459c2:	adc    BYTE PTR [rax+0x1],dh
   1400459c5:	or     al,BYTE PTR [rax+rax*1]
   1400459c8:	or     dh,BYTE PTR [rsi+rax*1]
   1400459cb:	add    BYTE PTR [rdx],cl
   1400459cd:	xor    al,BYTE PTR [rsi]
   1400459cf:	jo     0x1400459d2
   1400459d1:	sub    BYTE PTR [rcx],cl
   1400459d3:	add    BYTE PTR [rax],ch
   1400459d5:	cwde   
   1400459d6:	add    al,BYTE PTR [rax]
   1400459d8:	and    cl,BYTE PTR [rax+0x781c0003]
   1400459de:	add    al,0x0
   1400459e0:	(bad)  
   1400459e1:	push   0xffffffffc2040005
   1400459e6:	add    BYTE PTR [rax],al
   1400459e8:	add    DWORD PTR [rdx],ebx
   1400459ea:	or     al,BYTE PTR [rax]
   1400459ec:	sbb    dh,BYTE PTR [rcx+rcx*1+0x0]
   1400459f0:	sbb    ah,BYTE PTR [rax+rcx*1+0x0]
   1400459f4:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   1400459f8:	sbb    dh,BYTE PTR [rsi+rax*1]
   1400459fb:	add    BYTE PTR [rdx],bl
   1400459fd:	xor    dl,BYTE PTR [rsi]
   1400459ff:	loopne 0x140045a02
   140045a01:	or     al,BYTE PTR [rax+rax*1]
   140045a04:	or     dh,BYTE PTR [rsi+rax*1]
   140045a07:	add    BYTE PTR [rdx],cl
   140045a09:	xor    al,BYTE PTR [rsi]
   140045a0b:	jo     0x140045a0e
   140045a0d:	add    al,0x1
   140045a0f:	add    BYTE PTR [rdx+rax*2],al
   140045a12:	add    BYTE PTR [rax],al
   140045a14:	add    DWORD PTR [rax],ecx
   140045a16:	add    eax,DWORD PTR [rax]
   140045a18:	or     BYTE PTR [rdx+0x6002f004],al
   140045a1e:	add    BYTE PTR [rax],al
   140045a20:	and    DWORD PTR [rip+0x54050002],eax        # 0x194095a28
   140045a26:	or     eax,0x296000
   140045a2b:	add    BYTE PTR [rdi+0x29],dh
   140045a2e:	add    BYTE PTR [rax],al
   140045a30:	adc    al,0x5a
   140045a32:	add    al,0x0
   140045a34:	and    DWORD PTR [rdi],ecx
   140045a36:	(bad)  
   140045a37:	add    BYTE PTR [rdi],cl
   140045a39:	in     al,0x8
   140045a3b:	add    BYTE PTR [rdx],cl
   140045a3d:	je     0x140045a4d
   140045a3f:	add    BYTE PTR [rip+0x77000c34],al        # 0x1b7046679
   140045a45:	sub    DWORD PTR [rax],eax
   140045a47:	add    BYTE PTR [rbx+0x20000029],bh
   140045a4d:	pop    rdx
   140045a4e:	add    al,0x0
   140045a50:	and    DWORD PTR [rax],eax
   140045a52:	add    BYTE PTR [rax],al
   140045a54:	ja     0x140045a7f
   140045a56:	add    BYTE PTR [rax],al
   140045a58:	mov    ebx,0x20000029
   140045a5d:	pop    rdx
   140045a5e:	add    al,0x0
   140045a60:	and    DWORD PTR [rax],eax
   140045a62:	add    BYTE PTR [rax],al
   140045a64:	(bad)  
   140045a65:	sub    DWORD PTR [rax],eax
   140045a67:	add    BYTE PTR [rdi+0x29],dh
   140045a6a:	add    BYTE PTR [rax],al
   140045a6c:	adc    al,0x5a
   140045a6e:	add    al,0x0
   140045a70:	add    DWORD PTR [rax],esp
   140045a72:	add    eax,DWORD PTR [rax]
   140045a74:	and    BYTE PTR [rax+0x0],ch
   140045a77:	add    BYTE PTR [rdx+riz*1],al
   140045a7a:	add    BYTE PTR [rax],al
   140045a7c:	add    DWORD PTR [rbx],ebx
   140045a7e:	(bad)  
   140045a7f:	add    BYTE PTR [rbx],bl
   140045a81:	js     0x140045a8c
   140045a83:	add    BYTE PTR [rsi],dl
   140045a85:	push   0x10a000a
   140045a8a:	(bad)  
   140045a8b:	add    BYTE PTR [rcx],ah
   140045a8d:	pop    rbx
   140045a8e:	(bad)  
   140045a8f:	add    BYTE PTR [rbx-0x18],bl
   140045a92:	add    al,BYTE PTR [rax]
   140045a94:	sub    al,bl
   140045a96:	add    eax,DWORD PTR [rax]
   140045a98:	and    cl,al
   140045a9a:	add    al,0x0
   140045a9c:	sbb    eax,0x180005b8
   140045aa1:	test   al,0x6
   140045aa3:	add    BYTE PTR [rdx],cl
   140045aa5:	cwde   
   140045aa6:	(bad)  
   140045aa7:	add    BYTE PTR [rip+0x888],al        # 0x140046335
   140045aad:	(bad)  
   140045aae:	add    BYTE PTR [rax],al
   140045ab0:	xor    al,0x2f
   140045ab2:	add    BYTE PTR [rax],al
   140045ab4:	jl     0x140045b10
   140045ab6:	add    al,0x0
   140045ab8:	and    DWORD PTR [rax],eax
   140045aba:	add    BYTE PTR [rax],al
   140045abc:	add    BYTE PTR [rdi],ch
   140045abe:	add    BYTE PTR [rax],al
   140045ac0:	xor    al,0x2f
   140045ac2:	add    BYTE PTR [rax],al
   140045ac4:	jl     0x140045b20
   140045ac6:	add    al,0x0
   140045ac8:	add    DWORD PTR [rdi+0x14],eax
   140045acb:	add    BYTE PTR [rdi-0x68],al
   140045ace:	add    al,BYTE PTR [rax]
   140045ad0:	mov    BYTE PTR ds:[rbx],al
   140045ad3:	add    BYTE PTR [rax+rdi*2],ch
   140045ad6:	add    al,0x0
   140045ad8:	sub    BYTE PTR [rax+0x5],ch
   140045adb:	add    BYTE PTR [rip+0x1d001374],bl        # 0x15d046e55
   140045ae1:	adc    al,BYTE PTR fs:[rax]
   140045ae4:	sbb    eax,0x1d001154
   140045ae9:	xor    al,0x10
   140045aeb:	add    BYTE PTR [rip+0x17f019b2],bl        # 0x157f474a3
   140045af1:	loopne 0x140045b08
   140045af3:	rol    BYTE PTR [rcx],1
   140045af5:	(bad)  
   140045af6:	add    al,BYTE PTR [rax]
   140045af8:	(bad)  
   140045af9:	xor    al,BYTE PTR [rdx]
   140045afb:	xor    BYTE PTR [rcx],al
   140045afd:	adc    eax,0x74150008
   140045b02:	or     DWORD PTR [rax],eax
   140045b04:	adc    eax,0x15000864
   140045b09:	push   rsp
   140045b0a:	(bad)  
   140045b0b:	add    BYTE PTR [rip+0x21e01132],dl        # 0x161e46c43
   140045b11:	add    eax,0x34050002
   140045b16:	(bad)  
   140045b17:	add    BYTE PTR [rax-0x32ffffca],al
   140045b1d:	add    BYTE PTR ss:[rax],al
   140045b20:	cld    
   140045b21:	pop    rdx
   140045b22:	add    al,0x0
   140045b24:	and    DWORD PTR [rax],eax
   140045b26:	add    BYTE PTR [rax],al
   140045b28:	xor    BYTE PTR [rsi],0x0
   140045b2b:	add    ch,cl
   140045b2d:	add    BYTE PTR ss:[rax],al
   140045b30:	cld    
   140045b31:	pop    rdx
   140045b32:	add    al,0x0
   140045b34:	add    DWORD PTR [rsi],eax
   140045b36:	add    al,BYTE PTR [rax]
   140045b38:	(bad)  
   140045b39:	rol    BYTE PTR [rdx],cl
   140045b3b:	xor    BYTE PTR [rcx],ah
   140045b3d:	sbb    BYTE PTR [rsi],al
   140045b3f:	add    BYTE PTR [rax],bl
   140045b41:	mov    BYTE PTR [rax+rax*1],al
   140045b44:	or     bh,BYTE PTR [rax+0x5]
   140045b47:	add    BYTE PTR [rip+0xffffffffe0000668],al        # 0x1200461b5
   140045b4d:	xor    al,BYTE PTR [rax]
   140045b4f:	add    BYTE PTR [rcx],ah
   140045b51:	xor    eax,DWORD PTR [rax]
   140045b53:	add    BYTE PTR [rbx+rbx*2],dh
   140045b56:	add    al,0x0
   140045b58:	and    DWORD PTR [rax],eax
   140045b5a:	add    BYTE PTR [rax],al
   140045b5c:	loopne 0x140045b90
   140045b5e:	add    BYTE PTR [rax],al
   140045b60:	and    DWORD PTR [rbx],esi
   140045b62:	add    BYTE PTR [rax],al
   140045b64:	xor    al,0x5b
   140045b66:	add    al,0x0
   140045b68:	add    DWORD PTR [rsi],eax
   140045b6a:	add    al,BYTE PTR [rax]
   140045b6c:	(bad)  
   140045b6d:	jb     0x140045b71
   140045b6f:	jo     0x140045b92
   140045b71:	adc    al,BYTE PTR [rsi]
   140045b73:	add    BYTE PTR [rdx],dl
   140045b75:	js     0x140045b79
   140045b77:	add    BYTE PTR [rip+0x5000368],cl        # 0x145045ee5
   140045b7d:	xor    al,0xa
   140045b7f:	add    al,al
   140045b81:	xor    BYTE PTR [rax],al
   140045b83:	add    ch,ah
   140045b85:	xor    BYTE PTR [rax],al
   140045b87:	add    BYTE PTR [rax+0x5b],ch
   140045b8a:	add    al,0x0
   140045b8c:	and    DWORD PTR [rax],eax
   140045b8e:	add    BYTE PTR [rax],al
   140045b90:	shl    BYTE PTR [rax],0x0
   140045b93:	add    ch,ah
   140045b95:	xor    BYTE PTR [rax],al
   140045b97:	add    BYTE PTR [rax+0x5b],ch
   140045b9a:	add    al,0x0
   140045b9c:	add    DWORD PTR [rcx+rax*1],eax
   140045b9f:	add    BYTE PTR [rdx+rax*2],al
   140045ba2:	add    BYTE PTR [rax],al
   140045ba4:	add    DWORD PTR [rdi],edx
   140045ba6:	add    eax,0x781700
   140045bab:	add    BYTE PTR [rbx],dl
   140045bad:	push   0x42040001
   140045bb2:	add    BYTE PTR [rax],al
   140045bb4:	add    DWORD PTR [rsi],ecx
   140045bb6:	add    eax,DWORD PTR [rax]
   140045bb8:	(bad)  
   140045bb9:	push   0x22040000
   140045bbe:	add    BYTE PTR [rax],al
   140045bc0:	add    DWORD PTR [rdx+0xd],eax
   140045bc3:	add    BYTE PTR [rdx-0x28],al
   140045bc6:	add    BYTE PTR [rax],al
   140045bc8:	cmp    eax,0x250001a8
   140045bcd:	cwde   
   140045bce:	add    al,BYTE PTR [rax]
   140045bd0:	(bad)  
   140045bd1:	mov    BYTE PTR [rbx],al
   140045bd3:	add    BYTE PTR [rcx],bl
   140045bd5:	js     0x140045bdb
   140045bd7:	add    BYTE PTR [rax+rbp*2],dl
   140045bda:	add    eax,0xc20400
   140045bdf:	add    BYTE PTR [rcx],al
   140045be1:	or     al,BYTE PTR [rax+rax*1]
   140045be4:	or     dh,BYTE PTR [rdx+rcx*1]
   140045be7:	add    BYTE PTR [rdx],cl
   140045be9:	jb     0x140045bf1
   140045beb:	jo     0x140045bee
   140045bed:	or     BYTE PTR [rbx],al
   140045bef:	add    BYTE PTR [rax],cl
   140045bf1:	rex.X add al,0xf0
   140045bf4:	add    ah,al
   140045bf6:	add    BYTE PTR [rax],al
   140045bf8:	and    DWORD PTR [rcx],ebx
   140045bfa:	or     al,BYTE PTR [rax]
   140045bfc:	sbb    esp,eax
   140045bfe:	add    al,0x0
   140045c00:	adc    al,0x74
   140045c02:	or     eax,DWORD PTR [rax]
   140045c04:	pcmpgtb mm1,QWORD PTR [rdx]
   140045c07:	add    BYTE PTR [rdx],cl
   140045c09:	push   rsp
   140045c0a:	or     DWORD PTR [rax],eax
   140045c0c:	add    eax,0x60000834
   140045c11:	cmp    eax,DWORD PTR [rax]
   140045c13:	add    BYTE PTR [rbx+rdi*1+0x0],bh
   140045c17:	add    ah,ch
   140045c19:	pop    rbx
   140045c1a:	add    al,0x0
   140045c1c:	and    DWORD PTR [rax],eax
   140045c1e:	add    BYTE PTR [rax],al
   140045c20:	(bad)  
   140045c21:	cmp    eax,DWORD PTR [rax]
   140045c23:	add    BYTE PTR [rbx+rdi*1+0x0],bh
   140045c27:	add    ah,ch
   140045c29:	pop    rbx
   140045c2a:	add    al,0x0
   140045c2c:	add    DWORD PTR [rsi],eax
   140045c2e:	add    al,BYTE PTR [rax]
   140045c30:	(bad)  
   140045c31:	xor    al,BYTE PTR [rdx]
   140045c33:	xor    BYTE PTR [rcx],al
   140045c35:	adc    al,0x8
   140045c37:	add    BYTE PTR [rsp+riz*2],dl
   140045c3a:	or     DWORD PTR [rax],eax
   140045c3c:	adc    al,0x54
   140045c3e:	or     BYTE PTR [rax],al
   140045c40:	adc    al,0x34
   140045c42:	(bad)  
   140045c43:	add    BYTE PTR [rdx+rsi*1],dl
   140045c46:	adc    BYTE PTR [rax+0x21],dh
   140045c49:	add    eax,0xe4050002
   140045c4e:	(bad)  
   140045c4f:	add    al,dh
   140045c51:	cmp    al,0x0
   140045c53:	add    BYTE PTR [rcx+0x3d],dl
   140045c56:	add    BYTE PTR [rax],al
   140045c58:	xor    al,0x5c
   140045c5a:	add    al,0x0
   140045c5c:	and    DWORD PTR [rax],eax
   140045c5e:	add    BYTE PTR [rax],al
   140045c60:	lock cmp al,0x0
   140045c63:	add    BYTE PTR [rcx+0x3d],dl
   140045c66:	add    BYTE PTR [rax],al
   140045c68:	xor    al,0x5c
   140045c6a:	add    al,0x0
   140045c6c:	add    DWORD PTR [rdx],ecx
   140045c6e:	add    al,0x0
   140045c70:	or     dh,BYTE PTR [rsi+rax*1]
   140045c73:	add    BYTE PTR [rdx],cl
   140045c75:	xor    al,BYTE PTR [rsi]
   140045c77:	jo     0x140045c7a
   140045c79:	(bad)  
   140045c7a:	add    al,BYTE PTR [rax]
   140045c7c:	(bad)  
   140045c7d:	xor    al,BYTE PTR [rdx]
   140045c7f:	xor    BYTE PTR [rcx],ah
   140045c81:	add    eax,0x64050002
   140045c86:	(bad)  
   140045c87:	add    BYTE PTR [rax+0x3e],al
   140045c8a:	add    BYTE PTR [rax],al
   140045c8c:	push   rdx
   140045c8d:	add    BYTE PTR ds:[rax],al
   140045c90:	js     0x140045cee
   140045c92:	add    al,0x0
   140045c94:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4095c9c
   140045c9a:	(bad)  
   140045c9b:	add    BYTE PTR [rdx+0x3e],dl
   140045c9e:	add    BYTE PTR [rax],al
   140045ca0:	pop    rsi
   140045ca1:	add    BYTE PTR ds:[rax],al
   140045ca4:	sbb    BYTE PTR [rsp+rax*1+0x0],0x21
   140045ca9:	add    BYTE PTR [rax],al
   140045cab:	add    BYTE PTR [rdx+0x3e],dl
   140045cae:	add    BYTE PTR [rax],al
   140045cb0:	pop    rsi
   140045cb1:	add    BYTE PTR ds:[rax],al
   140045cb4:	sbb    BYTE PTR [rsp+rax*1+0x0],0x21
   140045cb9:	add    BYTE PTR [rax],al
   140045cbb:	add    BYTE PTR [rax+0x3e],al
   140045cbe:	add    BYTE PTR [rax],al
   140045cc0:	push   rdx
   140045cc1:	add    BYTE PTR ds:[rax],al
   140045cc4:	js     0x140045d22
   140045cc6:	add    al,0x0
   140045cc8:	add    DWORD PTR [rdx],ebx
   140045cca:	or     DWORD PTR [rax],eax
   140045ccc:	sbb    ch,BYTE PTR [rax+0x9]
   140045ccf:	add    BYTE PTR [rdx],dl
   140045cd1:	push   rsp
   140045cd2:	sbb    BYTE PTR [rax],al
   140045cd4:	adc    dh,BYTE PTR [rdi+rdx*1]
   140045cd7:	add    BYTE PTR [rdx],dl
   140045cd9:	add    DWORD PTR [rax+rax*1],edx
   140045cdc:	or     esp,DWORD PTR [rax+0x0]
   140045cdf:	add    BYTE PTR [rcx],ah
   140045ce1:	(bad)  
   140045ce2:	add    al,0x0
   140045ce4:	(bad)  
   140045ce5:	mov    BYTE PTR [rdi],al
   140045ce7:	add    BYTE PTR [rax],cl
   140045ce9:	js     0x140045cf3
   140045ceb:	add    BYTE PTR [rax-0x29ffffc1],ah
   140045cf1:	(bad)  
   140045cf2:	add    BYTE PTR [rax],al
   140045cf4:	enter  0x45c,0x0
   140045cf8:	and    DWORD PTR [rax],eax
   140045cfa:	add    BYTE PTR [rax],al
   140045cfc:	movabs al,ds:0xc800003fd600003f
   140045d05:	pop    rsp
   140045d06:	add    al,0x0
   140045d08:	and    DWORD PTR [rax],ecx
   140045d0a:	add    al,BYTE PTR [rax]
   140045d0c:	or     BYTE PTR [rsi+rdx*1+0x0],dh
   140045d10:	lea    eax,[rax+0x0]
   140045d13:	add    BYTE PTR [rcx-0x7ffffc0],ch
   140045d19:	pop    rsp
   140045d1a:	add    al,0x0
   140045d1c:	and    DWORD PTR [rax],eax
   140045d1e:	add    BYTE PTR [rax],al
   140045d20:	lea    eax,[rax+0x0]
   140045d23:	add    BYTE PTR [rcx-0x7ffffc0],ch
   140045d29:	pop    rsp
   140045d2a:	add    al,0x0
   140045d2c:	add    DWORD PTR [rsi],eax
   140045d2e:	add    al,BYTE PTR [rax]
   140045d30:	(bad)  
   140045d31:	xor    al,BYTE PTR [rdx]
   140045d33:	xor    BYTE PTR [rcx],al
   140045d35:	or     al,BYTE PTR [rax+rax*1]
   140045d38:	or     dh,BYTE PTR [rsi+rax*1]
   140045d3b:	add    BYTE PTR [rdx],cl
   140045d3d:	xor    al,BYTE PTR [rsi]
   140045d3f:	jo     0x140045d42
   140045d41:	(bad)  
   140045d42:	add    eax,DWORD PTR [rax]
   140045d44:	(bad)  
   140045d45:	(bad)  
   140045d46:	add    esp,DWORD PTR [rax+0x2]
   140045d49:	push   rax
   140045d4a:	add    BYTE PTR [rax],al
   140045d4c:	and    DWORD PTR [rdx],ecx
   140045d4e:	add    al,0x0
   140045d50:	or     dh,BYTE PTR [rsi+rcx*1+0x0]
   140045d54:	add    eax,0xd34
   140045d59:	rex.X add BYTE PTR [rax],al
   140045d5c:	mov    ecx,0x40000042
   140045d61:	pop    rbp
   140045d62:	add    al,0x0
   140045d64:	and    DWORD PTR [rdx],ecx
   140045d66:	add    al,0x0
   140045d68:	or     dh,ah
   140045d6a:	(bad)  
   140045d6b:	add    BYTE PTR [rip+0xffffffffb90008d4],al        # 0xf9046645
   140045d71:	rex.X add BYTE PTR [rax],al
   140045d74:	xor    DWORD PTR [rbx+0x0],eax
   140045d77:	add    BYTE PTR [rbp+rbx*2+0x4],cl
   140045d7b:	add    BYTE PTR [rcx],ah
   140045d7d:	or     al,BYTE PTR [rax+rax*1]
   140045d80:	or     ah,ah
   140045d82:	(bad)  
   140045d83:	add    BYTE PTR [rip+0x31000fc4],al        # 0x171046d4d
   140045d89:	rex.XB add BYTE PTR [r8],al
   140045d8c:	lea    eax,[rbx+0x0]
   140045d8f:	add    BYTE PTR [rbp+rbx*2+0x4],ah
   140045d93:	add    BYTE PTR [rcx],ah
   140045d95:	add    BYTE PTR [rax],al
   140045d97:	add    BYTE PTR [rcx],dh
   140045d99:	rex.XB add BYTE PTR [r8],al
   140045d9c:	lea    eax,[rbx+0x0]
   140045d9f:	add    BYTE PTR [rbp+rbx*2+0x4],ah
   140045da3:	add    BYTE PTR [rcx],ah
   140045da5:	add    BYTE PTR [rax],al
   140045da7:	add    BYTE PTR [rcx+0x31000042],bh
   140045dad:	rex.XB add BYTE PTR [r8],al
   140045db0:	rex.WR pop rbp
   140045db2:	add    al,0x0
   140045db4:	and    DWORD PTR [rax],eax
   140045db6:	add    BYTE PTR [rax],al
   140045db8:	add    BYTE PTR [rdx+0x0],al
   140045dbb:	add    BYTE PTR [rcx+0x40000042],bh
   140045dc1:	pop    rbp
   140045dc2:	add    al,0x0
   140045dc4:	add    DWORD PTR [rbp+rcx*1+0x0],eax
   140045dc8:	rex.R hlt 
   140045dca:	add    al,0x0
   140045dcc:	(bad)  
   140045dcd:	in     al,0x5
   140045dcf:	add    BYTE PTR [rdx],dh
   140045dd1:	(bad)  
   140045dd2:	or     eax,0xc742d00
   140045dd7:	add    BYTE PTR [rax],ch
   140045dd9:	or     al,BYTE PTR fs:[rax]
   140045ddc:	or     esp,DWORD PTR [rdx+0x7]
   140045ddf:	push   rax
   140045de0:	(bad)  
   140045de1:	xor    BYTE PTR [rax],al
   140045de3:	add    BYTE PTR [rcx],ah
   140045de5:	add    eax,0xd4050002
   140045dea:	(bad)  
   140045deb:	add    al,ah
   140045ded:	add    BYTE PTR [r8],r8b
   140045df0:	xor    DWORD PTR [rsi+0x0],eax
   140045df3:	add    ah,al
   140045df5:	pop    rbp
   140045df6:	add    al,0x0
   140045df8:	and    DWORD PTR [rax],eax
   140045dfa:	add    BYTE PTR [rax],al
   140045dfc:	loopne 0x140045e43
   140045dfe:	add    BYTE PTR [rax],al
   140045e00:	xor    DWORD PTR [rsi+0x0],eax
   140045e03:	add    ah,al
   140045e05:	pop    rbp
   140045e06:	add    al,0x0
   140045e08:	add    DWORD PTR [rcx+rax*1],eax
   140045e0b:	add    BYTE PTR [rdx+rax*2],al
   140045e0e:	add    BYTE PTR [rax],al
   140045e10:	add    DWORD PTR [rip+0xfffffffff20d0002],ecx        # 0x132115e18
   140045e16:	(bad)  
   140045e17:	xor    BYTE PTR [rcx],ah
   140045e19:	push   rbp
   140045e1a:	adc    BYTE PTR [rax],al
   140045e1c:	push   rbp
   140045e1d:	hlt    
   140045e1e:	or     al,BYTE PTR [rax]
   140045e20:	push   rax
   140045e21:	in     al,0xb
   140045e23:	add    BYTE PTR [rbx-0x2c],cl
   140045e26:	or     al,0x0
   140045e28:	rex.RX je 0x140045e39
   140045e2b:	add    BYTE PTR [rcx+0x54],al
   140045e2e:	adc    al,BYTE PTR [rax]
   140045e30:	punpckhbw mm0,QWORD PTR [rax+rax*1]
   140045e34:	or     al,ah
   140045e36:	or     eax,0xf640500
   140045e3b:	add    BYTE PTR [rax+0x48],dh
   140045e3e:	add    BYTE PTR [rax],al
   140045e40:	jge    0x140045e8a
   140045e42:	add    BYTE PTR [rax],al
   140045e44:	adc    BYTE PTR [rsi+0x4],bl
   140045e47:	add    BYTE PTR [rcx],ah
   140045e49:	add    BYTE PTR [rax],al
   140045e4b:	add    BYTE PTR [rax+0x48],dh
   140045e4e:	add    BYTE PTR [rax],al
   140045e50:	jge    0x140045e9a
   140045e52:	add    BYTE PTR [rax],al
   140045e54:	adc    BYTE PTR [rsi+0x4],bl
   140045e57:	add    BYTE PTR [rcx],al
   140045e59:	adc    cl,BYTE PTR [rax]
   140045e5b:	add    BYTE PTR [rdx],dl
   140045e5d:	push   rsp
   140045e5e:	or     eax,0xc341200
   140045e63:	add    BYTE PTR [rdx],dl
   140045e65:	push   rdx
   140045e66:	(bad)  
   140045e67:	loopne 0x140045e75
   140045e69:	jo     0x140045e76
   140045e6b:	(bad)  
   140045e6c:	and    DWORD PTR [rip+0x68050002],eax        # 0x1a8095e74
   140045e72:	add    al,BYTE PTR [rax]
   140045e74:	loopne 0x140045ec1
   140045e76:	add    BYTE PTR [rax],al
   140045e78:	rex.WX
   140045e79:	rex.WR add BYTE PTR [rax],r8b
   140045e7c:	pop    rax
   140045e7d:	pop    rsi
   140045e7e:	add    al,0x0
   140045e80:	and    DWORD PTR [rax],eax
   140045e82:	add    BYTE PTR [rax],al
   140045e84:	loopne 0x140045ed1
   140045e86:	add    BYTE PTR [rax],al
   140045e88:	rex.WX
   140045e89:	rex.WR add BYTE PTR [rax],r8b
   140045e8c:	pop    rax
   140045e8d:	pop    rsi
   140045e8e:	add    al,0x0
   140045e90:	and    DWORD PTR [rdx],ecx
   140045e92:	add    al,0x0
   140045e94:	or     dh,ah
   140045e96:	or     eax,DWORD PTR [rax]
   140045e98:	add    eax,0xe3000ac4
   140045e9d:	rex.WR add BYTE PTR [rax],r8b
   140045ea0:	(bad)  
   140045ea1:	rex.WRB add BYTE PTR [r8],r8b
   140045ea4:	sbb    BYTE PTR [rsi+0x4],0x0
   140045ea8:	and    DWORD PTR [rax],eax
   140045eaa:	add    BYTE PTR [rax],al
   140045eac:	jrcxz  0x140045efa
   140045eae:	add    BYTE PTR [rax],al
   140045eb0:	(bad)  
   140045eb1:	rex.WRB add BYTE PTR [r8],r8b
   140045eb4:	sbb    BYTE PTR [rsi+0x4],0x0
   140045eb8:	add    DWORD PTR [rsi],eax
   140045eba:	add    al,BYTE PTR [rax]
   140045ebc:	(bad)  
   140045ebd:	xor    al,BYTE PTR [rdx]
   140045ebf:	xor    BYTE PTR [rcx],al
   140045ec1:	(bad)  
   140045ec2:	add    al,BYTE PTR [rax]
   140045ec4:	(bad)  
   140045ec5:	xor    al,BYTE PTR [rdx]
   140045ec7:	xor    BYTE PTR [rcx],ah
   140045ec9:	add    eax,0x74050002
   140045ece:	(bad)  
   140045ecf:	add    BYTE PTR [rax],al
   140045ed1:	push   rax
   140045ed2:	add    BYTE PTR [rax],al
   140045ed4:	(bad)  
   140045ed5:	push   rax
   140045ed6:	add    BYTE PTR [rax],al
   140045ed8:	rcr    BYTE PTR [rsi+0x4],0x0
   140045edc:	and    DWORD PTR [rax],eax
   140045ede:	add    BYTE PTR [rax],al
   140045ee0:	add    BYTE PTR [rax+0x0],dl
   140045ee3:	add    BYTE PTR [rdi],bl
   140045ee5:	push   rax
   140045ee6:	add    BYTE PTR [rax],al
   140045ee8:	rcr    BYTE PTR [rsi+0x4],0x0
   140045eec:	add    DWORD PTR [rcx],ebx
   140045eee:	(bad)  
   140045eef:	add    BYTE PTR [rcx],bl
   140045ef1:	push   0x340a0002
   140045ef6:	or     BYTE PTR [rax],al
   140045ef8:	or     dl,BYTE PTR [rdx+0x6]
   140045efb:	jo     0x140045efe
   140045efd:	add    al,0x1
   140045eff:	add    BYTE PTR [rdx+riz*4],al
   140045f02:	add    BYTE PTR [rax],al
   140045f04:	add    DWORD PTR [rsi],eax
   140045f06:	add    al,BYTE PTR [rax]
   140045f08:	(bad)  
   140045f09:	xchg   edx,eax
   140045f0a:	add    dh,BYTE PTR [rax+0x21]
   140045f0d:	or     al,BYTE PTR [rax+rax*1]
   140045f10:	or     ah,BYTE PTR [rbp+rcx*1+0x0]
   140045f14:	add    eax,0xc0000c34
   140045f19:	push   rax
   140045f1a:	add    BYTE PTR [rax],al
   140045f1c:	(bad)  
   140045f1d:	push   rax
   140045f1e:	add    BYTE PTR [rax],al
   140045f20:	add    al,0x5f
   140045f22:	add    al,0x0
   140045f24:	and    DWORD PTR [rax],eax
   140045f26:	add    BYTE PTR [rax],al
   140045f28:	rcl    BYTE PTR [rax+0x0],0x0
   140045f2c:	(bad)  
   140045f2d:	push   rax
   140045f2e:	add    BYTE PTR [rax],al
   140045f30:	add    al,0x5f
   140045f32:	add    al,0x0
   140045f34:	add    DWORD PTR [rax],edx
   140045f36:	add    eax,DWORD PTR [rax]
   140045f38:	adc    BYTE PTR [rax+0x0],ch
   140045f3b:	add    BYTE PTR [rdx+riz*1],al
   140045f3e:	add    BYTE PTR [rax],al
   140045f40:	add    DWORD PTR [rcx+rax*1],eax
   140045f43:	add    BYTE PTR [rdx+riz*2],al
   140045f46:	add    BYTE PTR [rax],al
   140045f48:	add    DWORD PTR [rbx-0x7774fff5],ecx
   140045f4e:	(bad)  
   140045f4f:	add    BYTE PTR [rbp+0x7d000878],al
   140045f55:	push   0x34120009
   140045f5a:	(bad)  
   140045f5b:	add    BYTE PTR [rdx],dl
   140045f5d:	add    DWORD PTR [rax+rax*1],edx
   140045f60:	(bad)  
   140045f61:	push   rax
   140045f62:	add    BYTE PTR [rax],al
   140045f64:	add    DWORD PTR [rax+rcx*1],edx
   140045f67:	add    BYTE PTR [rsp+riz*2],dl
   140045f6a:	(bad)  
   140045f6b:	add    BYTE PTR [rsp+rdx*2],dl
   140045f6e:	or     eax,0xc341400
   140045f73:	add    BYTE PTR [rdx+rdx*4],dl
   140045f76:	adc    BYTE PTR [rax+0x1],dh
   140045f79:	clts   
   140045f7b:	add    BYTE PTR [rdi],cl
   140045f7d:	fs (bad) 
   140045f7f:	add    BYTE PTR [rdi],cl
   140045f81:	xor    al,0x6
   140045f83:	add    BYTE PTR [rdi],cl
   140045f85:	xor    cl,BYTE PTR [rbx]
   140045f87:	jo     0x140045f8a
   140045f89:	add    al,0x1
   140045f8b:	add    BYTE PTR [rdx+rax*2],al
   140045f8e:	add    BYTE PTR [rax],al
   140045f90:	add    DWORD PTR [rdx],ecx
   140045f92:	add    al,0x0
   140045f94:	or     ah,BYTE PTR [rdi+rax*1+0x0]
   140045f98:	or     dh,BYTE PTR [rdx]
   140045f9a:	(bad)  
   140045f9b:	jo     0x140045fbe
   140045f9d:	add    eax,0x34050002
   140045fa2:	(bad)  
   140045fa3:	add    BYTE PTR [rax+0x5a],dh
   140045fa6:	add    BYTE PTR [rax],al
   140045fa8:	ficomp WORD PTR [rdx+0x0]
   140045fab:	add    BYTE PTR [rax+0x2100045f],dl
   140045fb1:	add    BYTE PTR [rax],al
   140045fb3:	add    BYTE PTR [rax+0x5a],dh
   140045fb6:	add    BYTE PTR [rax],al
   140045fb8:	ficomp WORD PTR [rdx+0x0]
   140045fbb:	add    BYTE PTR [rax+0x100045f],dl
   140045fc1:	or     al,BYTE PTR es:[rax]
   140045fc4:	es xor al,0x18
   140045fc7:	add    BYTE PTR [rsi],ah
   140045fc9:	repnz (bad) 
   140045fcb:	lock sbb eax,0x19d01be0
   140045fd1:	rcl    BYTE PTR [rdi],0x70
   140045fd4:	(bad)  
   140045fd5:	(bad)  
   140045fd6:	adc    eax,0x1040150
   140045fdb:	add    BYTE PTR [rdx+rax*2],al
   140045fde:	add    BYTE PTR [rax],al
   140045fe0:	add    DWORD PTR [rdx],ecx
   140045fe2:	add    al,0x0
   140045fe4:	or     dh,BYTE PTR [rsi+rax*1]
   140045fe7:	add    BYTE PTR [rdx],cl
   140045fe9:	xor    al,BYTE PTR [rsi]
   140045feb:	jo     0x140045fee
   140045fed:	add    r8d,DWORD PTR [rax]
   140045ff0:	rex.R push 0xffffffff82040003
   140045ff6:	add    BYTE PTR [rax],al
   140045ff8:	add    DWORD PTR [rdi],ecx
   140045ffa:	(bad)  
   140045ffb:	add    BYTE PTR [rdi],cl
   140045ffd:	fs (bad) 
   140045fff:	add    BYTE PTR [rdi],cl
   140046001:	xor    al,0x6
   140046003:	add    BYTE PTR [rdi],cl
   140046005:	xor    cl,BYTE PTR [rbx]
   140046007:	jo     0x14004600a
   140046009:	(bad)  
   14004600a:	or     BYTE PTR [rax],al
   14004600c:	(bad)  
   14004600d:	cwde   
   14004600e:	add    al,BYTE PTR [rax]
   140046010:	sbb    BYTE PTR [rax+0x780b0003],cl
   140046016:	add    al,0x0
   140046018:	(bad)  
   140046019:	xchg   edx,eax
   14004601a:	add    dh,BYTE PTR [rax]
   14004601c:	add    DWORD PTR [rsi],eax
   14004601e:	add    al,BYTE PTR [rax]
   140046020:	(bad)  
   140046021:	xor    al,BYTE PTR [rdx]
   140046023:	jo     0x140046026
   140046025:	add    al,0x1
   140046027:	add    BYTE PTR [rdx+rax*2],al
   14004602a:	add    BYTE PTR [rax],al
   14004602c:	and    DWORD PTR [rcx],ecx
   14004602e:	add    al,0x0
   140046030:	or     DWORD PTR [rax+0x0],edi
   140046033:	add    BYTE PTR [rip+0xffffffff90000168],al        # 0xd00461a1
   140046039:	outs   dx,DWORD PTR ds:[rsi]
   14004603a:	add    BYTE PTR [rax],al
   14004603c:	(bad)  [rdi+0x0]
   14004603f:	add    BYTE PTR [rax+riz*2],ah
   140046042:	add    al,0x0
   140046044:	and    DWORD PTR [rax],eax
   140046046:	add    BYTE PTR [rax],al
   140046048:	nop
   140046049:	outs   dx,DWORD PTR ds:[rsi]
   14004604a:	add    BYTE PTR [rax],al
   14004604c:	(bad)  [rdi+0x0]
   14004604f:	add    BYTE PTR [rax+riz*2],ah
   140046052:	add    al,0x0
   140046054:	add    DWORD PTR [rcx+rax*1],eax
   140046057:	add    BYTE PTR [rdx+rax*4],al
   14004605a:	add    BYTE PTR [rax],al
   14004605c:	and    DWORD PTR [rdx],ecx
   14004605e:	add    al,0x0
   140046060:	or     bh,BYTE PTR [rax+0x2]
   140046063:	add    BYTE PTR [rip+0x40000368],al        # 0x1800463d1
   140046069:	outs   dx,BYTE PTR ds:[rsi]
   14004606a:	add    BYTE PTR [rax],al
   14004606c:	stos   DWORD PTR es:[rdi],eax
   14004606d:	outs   dx,BYTE PTR ds:[rsi]
   14004606e:	add    BYTE PTR [rax],al
   140046070:	push   rsp
   140046071:	(bad)  
   140046072:	add    al,0x0
   140046074:	and    DWORD PTR [rax],eax
   140046076:	add    al,0x0
   140046078:	add    BYTE PTR [rax+0x2],bh
   14004607b:	add    BYTE PTR [rax],al
   14004607d:	push   0x6e400003
   140046082:	add    BYTE PTR [rax],al
   140046084:	stos   DWORD PTR es:[rdi],eax
   140046085:	outs   dx,BYTE PTR ds:[rsi]
   140046086:	add    BYTE PTR [rax],al
   140046088:	push   rsp
   140046089:	(bad)  
   14004608a:	add    al,0x0
   14004608c:	add    DWORD PTR [rdx],ecx
   14004608e:	add    al,0x0
   140046090:	or     dh,BYTE PTR [rsi+rax*1]
   140046093:	add    BYTE PTR [rdx],cl
   140046095:	xor    al,BYTE PTR [rsi]
   140046097:	jo     0x14004609a
   140046099:	or     eax,0x920d0004
   14004609e:	or     eax,esp
   1400460a0:	(bad)  
   1400460a1:	push   rax
   1400460a2:	(bad)  
   1400460a3:	xor    BYTE PTR [rcx],ah
   1400460a5:	adc    eax,DWORD PTR [rsi]
   1400460a7:	add    BYTE PTR [rbx],dl
   1400460a9:	hlt    
   1400460aa:	add    eax,0x8740a00
   1400460af:	add    BYTE PTR [rip+0x50000964],al        # 0x190046a19
   1400460b5:	imul   eax,DWORD PTR [rax],0x0
   1400460b8:	jb     0x140046125
   1400460ba:	add    BYTE PTR [rax],al
   1400460bc:	cwde   
   1400460bd:	(bad)  
   1400460be:	add    al,0x0
   1400460c0:	and    DWORD PTR [rdx],ecx
   1400460c2:	add    al,0x0
   1400460c4:	or     dl,ah
   1400460c6:	(bad)  
   1400460c7:	add    BYTE PTR [rip+0x720007c4],al        # 0x1b2046891
   1400460cd:	imul   eax,DWORD PTR [rax],0x0
   1400460d0:	adc    BYTE PTR [rax+rax*1+0x0],ch
   1400460d4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400460d5:	(bad)  
   1400460d6:	add    al,0x0
   1400460d8:	and    DWORD PTR [rax],eax
   1400460da:	add    BYTE PTR [rax],al
   1400460dc:	jb     0x140046149
   1400460de:	add    BYTE PTR [rax],al
   1400460e0:	adc    BYTE PTR [rax+rax*1+0x0],ch
   1400460e4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400460e5:	(bad)  
   1400460e6:	add    al,0x0
   1400460e8:	and    DWORD PTR [rax],eax
   1400460ea:	add    al,0x0
   1400460ec:	add    ah,dl
   1400460ee:	(bad)  
   1400460ef:	add    BYTE PTR [rax],al
   1400460f1:	(bad)  
   1400460f2:	(bad)  
   1400460f3:	add    BYTE PTR [rdx+0x6b],dh
   1400460f6:	add    BYTE PTR [rax],al
   1400460f8:	adc    BYTE PTR [rax+rax*1+0x0],ch
   1400460fc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400460fd:	(bad)  
   1400460fe:	add    al,0x0
   140046100:	and    DWORD PTR [rax],eax
   140046102:	add    BYTE PTR [rax],al
   140046104:	jb     0x140046171
   140046106:	add    BYTE PTR [rax],al
   140046108:	adc    BYTE PTR [rax+rax*1+0x0],ch
   14004610c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004610d:	(bad)  
   14004610e:	add    al,0x0
   140046110:	and    DWORD PTR [rax],eax
   140046112:	add    BYTE PTR [rax],al
   140046114:	push   rax
   140046115:	imul   eax,DWORD PTR [rax],0x0
   140046118:	jb     0x140046185
   14004611a:	add    BYTE PTR [rax],al
   14004611c:	cwde   
   14004611d:	(bad)  
   14004611e:	add    al,0x0
   140046120:	add    DWORD PTR [rcx+rax*1],eax
   140046123:	add    BYTE PTR [rdx+rax*2],al
   140046126:	add    BYTE PTR [rax],al
   140046128:	add    DWORD PTR [rip+0x742d000d],ebp        # 0x1b431613b
   14004612e:	jns    0x14004611a
   140046130:	sub    eax,0x2dea7764
   140046135:	xor    al,0x76
   140046137:	(bad)  
   140046138:	sub    eax,0x18ea7001
   14004613d:	lock (bad) 
   14004613f:	loopne 0x140046155
   140046141:	rcl    BYTE PTR [rdx],1
   140046143:	rcl    BYTE PTR [rax],0x50
   140046146:	add    BYTE PTR [rax],al
   140046148:	add    DWORD PTR [rsi],eax
   14004614a:	add    al,BYTE PTR [rax]
   14004614c:	(bad)  
   14004614d:	xor    al,BYTE PTR [rdx]
   14004614f:	xor    BYTE PTR [rcx],al
   140046151:	sbb    ecx,DWORD PTR [rcx]
   140046153:	add    BYTE PTR [rbx],bl
   140046155:	je     0x140046171
   140046157:	add    BYTE PTR [rbx],bl
   140046159:	xor    al,0x19
   14004615b:	add    BYTE PTR [rbx],bl
   14004615d:	add    DWORD PTR [rax+rax*1],edx
   140046160:	(bad)  
   140046162:	or     eax,0x500be0
   140046167:	add    BYTE PTR [rcx],ah
   140046169:	or     BYTE PTR [rdx],al
   14004616b:	add    BYTE PTR [rax],cl
   14004616d:	sbb    BYTE PTR fs:[rax],al
   140046170:	loopne 0x1400460f4
   140046172:	add    BYTE PTR [rax],al
   140046174:	mov    al,BYTE PTR [rax+rax*1+0x4615000]
   14004617b:	add    BYTE PTR [rcx],ah
   14004617d:	add    BYTE PTR [rax],al
   14004617f:	add    al,ah
   140046181:	(bad)  
   140046182:	add    BYTE PTR [rax],al
   140046184:	mov    al,BYTE PTR [rax+rax*1+0x4615000]
   14004618b:	add    BYTE PTR [rcx],al
   14004618d:	sbb    ecx,DWORD PTR [rdx]
   14004618f:	add    BYTE PTR [rbx],bl
   140046191:	push   0x54120002
   140046196:	or     al,0x0
   140046198:	adc    dh,BYTE PTR [rdx+rcx*1]
   14004619b:	add    BYTE PTR [rdx],dl
   14004619d:	push   rdx
   14004619e:	(bad)  
   14004619f:	loopne 0x1400461ad
   1400461a1:	jo     0x1400461ae
   1400461a3:	(bad)  
   1400461a4:	add    DWORD PTR [rbx],edx
   1400461a6:	or     BYTE PTR [rax],al
   1400461a8:	adc    edx,DWORD PTR [rsp+rdx*1+0x0]
   1400461ac:	adc    esi,DWORD PTR [rbx+rdx*1]
   1400461af:	add    BYTE PTR [rbx],dl
   1400461b1:	ror    BYTE PTR [rdi],cl
   1400461b3:	lock or eax,0x21700be0
   1400461b9:	rex.X or al,0x0
   1400461bc:	rex.X test al,0x2
   1400461bf:	add    BYTE PTR [rcx],ch
   1400461c1:	cwde   
   1400461c2:	add    eax,DWORD PTR [rax]
   1400461c4:	and    ecx,DWORD PTR [rax+0x78120004]
   1400461ca:	add    eax,0x6680d00
   1400461cf:	add    BYTE PTR [rax],cl
   1400461d1:	adc    al,BYTE PTR fs:[rax]
   1400461d4:	cmp    BYTE PTR [rcx+0x0],0x0
   1400461d8:	(bad)  
   1400461d9:	jns    0x1400461db
   1400461db:	add    BYTE PTR [rcx+riz*2+0x210004],ah
   1400461e2:	add    BYTE PTR [rax],al
   1400461e4:	cmp    BYTE PTR [rcx+0x0],0x0
   1400461e8:	(bad)  
   1400461e9:	jns    0x1400461eb
   1400461eb:	add    BYTE PTR [rcx+riz*2+0x35010004],ah
   1400461f2:	(bad)  
   1400461f3:	add    BYTE PTR [rip+0x31000c78],dh        # 0x171046e71
   1400461f9:	push   0x12a000d
   1400461fe:	sbb    eax,0x1df01f00
   140046203:	loopne 0x140046220
   140046205:	rcr    BYTE PTR [rcx],1
   140046207:	rcl    BYTE PTR [rdi],0x70
   14004620a:	(bad)  
   14004620b:	(bad)  
   14004620c:	adc    eax,0x1501430
   140046211:	sbb    cl,BYTE PTR [rdx]
   140046213:	add    BYTE PTR [rdx],bl
   140046215:	js     0x14004621a
   140046217:	add    BYTE PTR [rip+0x10000468],dl        # 0x150046685
   14004621d:	lldt   WORD PTR fs:[rax]
   140046221:	push   rsp
   140046222:	(bad)  
   140046223:	add    BYTE PTR [rax],dl
   140046225:	xchg   edx,eax
   140046226:	or     al,0xe0
   140046228:	and    DWORD PTR [rdi],edx
   14004622a:	add    al,0x0
   14004622c:	(bad)  
   14004622d:	je     0x14004623c
   14004622f:	add    BYTE PTR [rip+0xc34],al        # 0x140046e69
   140046235:	jnp    0x140046237
   140046237:	add    BYTE PTR [rdx],bl
   140046239:	jnp    0x14004623b
   14004623b:	add    BYTE PTR [rax],dl
   14004623d:	(bad)  
   14004623e:	add    al,0x0
   140046240:	and    DWORD PTR [rsi],eax
   140046242:	add    al,BYTE PTR [rax]
   140046244:	(bad)  
   140046245:	mov    BYTE PTR [rdx],al
   140046247:	add    BYTE PTR [rdx],bl
   140046249:	jnp    0x14004624b
   14004624b:	add    BYTE PTR [rbp+0x7c],bl
   14004624e:	add    BYTE PTR [rax],al
   140046250:	sub    BYTE PTR [rdx+0x4],ah
   140046253:	add    BYTE PTR [rcx],ah
   140046255:	add    BYTE PTR [rdx],al
   140046257:	add    BYTE PTR [rax],al
   140046259:	mov    BYTE PTR [rdx],al
   14004625b:	add    BYTE PTR [rax],al
   14004625d:	jnp    0x14004625f
   14004625f:	add    BYTE PTR [rdx],bl
   140046261:	jnp    0x140046263
   140046263:	add    BYTE PTR [rax],dl
   140046265:	(bad)  
   140046266:	add    al,0x0
   140046268:	add    DWORD PTR [rax],ebx
   14004626a:	or     DWORD PTR [rax],eax
   14004626c:	sbb    dl,ah
   14004626e:	adc    eax,esi
   140046270:	pavgb  mm1,QWORD PTR [rip+0x9c00bd0]        # 0x149c46e47
   140046277:	jo     0x140046281
   140046279:	(bad)  
   14004627a:	(bad)  
   14004627b:	xor    BYTE PTR [rsi],al
   14004627d:	push   rax
   14004627e:	add    BYTE PTR [rax],al
   140046280:	add    DWORD PTR [rsi],edx
   140046282:	(bad)  
   140046283:	add    BYTE PTR [rsi],dl
   140046285:	(bad)  
   140046286:	(bad)  
   140046288:	or     eax,0x9d00be0
   14004628d:	rol    BYTE PTR [rdi],0x60
   140046290:	(bad)  
   140046291:	push   rax
   140046292:	add    BYTE PTR [rax],al
   140046294:	and    DWORD PTR [rax],ecx
   140046296:	add    al,BYTE PTR [rax]
   140046298:	or     BYTE PTR [rbx+rdx*1],dh
   14004629b:	add    BYTE PTR [rax-0x51ffff74],dl
   1400462a1:	mov    WORD PTR [rax],es
   1400462a3:	add    BYTE PTR [rax+0x21000462],al
   1400462a9:	add    eax,0x74050002
   1400462ae:	or     BYTE PTR [rax],al
   1400462b0:	scas   al,BYTE PTR es:[rdi]
   1400462b1:	mov    WORD PTR [rax],es
   1400462b3:	add    cl,bh
   1400462b5:	mov    WORD PTR [rax],es
   1400462b7:	add    BYTE PTR [rdx+riz*2+0x210004],dl
   1400462be:	add    BYTE PTR [rax],al
   1400462c0:	scas   al,BYTE PTR es:[rdi]
   1400462c1:	mov    WORD PTR [rax],es
   1400462c3:	add    cl,bh
   1400462c5:	mov    WORD PTR [rax],es
   1400462c7:	add    BYTE PTR [rdx+riz*2+0x210004],dl
   1400462ce:	add    BYTE PTR [rax],al
   1400462d0:	nop
   1400462d1:	mov    WORD PTR [rax],es
   1400462d3:	add    BYTE PTR [rsi-0x7fffff74],ch
   1400462d9:	(bad)  
   1400462da:	add    al,0x0
   1400462dc:	add    DWORD PTR [rdi],edx
   1400462de:	(bad)  
   1400462df:	add    BYTE PTR [rdi],dl
   1400462e1:	add    DWORD PTR [rcx],edi
   1400462e3:	add    BYTE PTR [rcx],cl
   1400462e5:	loopne 0x1400462ee
   1400462e7:	rol    BYTE PTR [rip+0x21500430],1        # 0x16154671d
   1400462ed:	or     BYTE PTR [rax+rax*1],al
   1400462f0:	or     BYTE PTR [rdi+rdi*1+0x0],dh
   1400462f4:	add    al,0x64
   1400462f6:	ds add al,dh
   1400462f9:	nop
   1400462fa:	add    BYTE PTR [rax],al
   1400462fc:	sub    BYTE PTR [rcx+0x62dc0000],dl
   140046302:	add    al,0x0
   140046304:	and    DWORD PTR [rbx+0x18],edx
   140046307:	add    BYTE PTR [rbx-0x8],dl
   14004630a:	adc    al,BYTE PTR [rax]
   14004630c:	rex.WXB call 0x118476325
   140046312:	adc    al,0x0
   140046314:	cmp    ecx,eax
   140046316:	adc    eax,0x16b83300
   14004631b:	add    BYTE PTR [rbx],ch
   14004631d:	test   al,0x17
   14004631f:	add    BYTE PTR [rsi],ah
   140046321:	cwde   
   140046322:	sbb    BYTE PTR [rax],al
   140046324:	(bad)  
   140046325:	mov    BYTE PTR [rcx],bl
   140046327:	add    BYTE PTR [rcx],bl
   140046329:	js     0x140046345
   14004632b:	add    BYTE PTR [rax+rbp*2],dl
   14004632e:	sbb    eax,DWORD PTR [rax]
   140046330:	or     ah,dh
   140046332:	cmp    BYTE PTR [rax],al
   140046334:	add    al,0xc4
   140046336:	add    BYTE PTR [rax],bpl
   140046339:	xchg   ecx,eax
   14004633a:	add    BYTE PTR [rax],al
   14004633c:	xor    BYTE PTR [rcx+0x62ec0000],dl
   140046342:	add    al,0x0
   140046344:	and    DWORD PTR [rax],eax
   140046346:	add    al,0x0
   140046348:	add    BYTE PTR [rax+0x68000019],cl
   14004634e:	sbb    eax,DWORD PTR [rax]
   140046350:	sub    BYTE PTR [rcx-0x6ed00000],dl
   140046356:	add    BYTE PTR [rax],al
   140046358:	in     al,dx
   140046359:	(bad)  
   14004635a:	add    al,0x0
   14004635c:	and    DWORD PTR [rax],eax
   14004635e:	add    BYTE PTR [rax],al
   140046360:	lock nop
   140046362:	add    BYTE PTR [rax],al
   140046364:	sub    BYTE PTR [rcx+0x62dc0000],dl
   14004636a:	add    al,0x0
   14004636c:	add    DWORD PTR [rsi],eax
   14004636e:	add    al,BYTE PTR [rax]
   140046370:	(bad)  
   140046371:	mov    dl,0x2
   140046373:	xor    BYTE PTR [rcx],ah
   140046375:	adc    BYTE PTR [rax+rax*1],al
   140046378:	adc    BYTE PTR [rax+0x4],bh
   14004637b:	add    BYTE PTR [rip+0x30000568],al        # 0x1700468e9
   140046381:	(bad)  
   140046382:	add    BYTE PTR [rax],al
   140046384:	(bad)  
   140046385:	(bad)  
   140046386:	add    BYTE PTR [rax],al
   140046388:	ins    BYTE PTR es:[rdi],dx
   140046389:	movsxd eax,DWORD PTR [rax+rax*1]
   14004638c:	and    DWORD PTR [rax],eax
   14004638e:	add    BYTE PTR [rax],al
   140046390:	xor    BYTE PTR [rdx-0x659f0000],bl
   140046396:	add    BYTE PTR [rax],al
   140046398:	ins    BYTE PTR es:[rdi],dx
   140046399:	movsxd eax,DWORD PTR [rax+rax*1]
   14004639c:	add    DWORD PTR [rip+0x11d0005],ebx        # 0x1412163a7
   1400463a2:	rex.W add BYTE PTR [rdi],cl
   1400463a5:	loopne 0x1400463b4
   1400463a7:	jo     0x1400463b5
   1400463a9:	push   rax
   1400463aa:	add    BYTE PTR [rax],al
   1400463ac:	and    DWORD PTR [rbp-0x474affe4],esi
   1400463b2:	sbb    eax,DWORD PTR [rax]
   1400463b4:	lods   al,BYTE PTR ds:[rsi]
   1400463b5:	test   al,0x1c
   1400463b7:	add    BYTE PTR [rsi-0x72ffe178],dl
   1400463bd:	push   0x34850020
   1400463c2:	rex.RXB add BYTE PTR [r10-0x8],r9b
   1400463c6:	(bad)  
   1400463c7:	add    BYTE PTR [rdx-0x28],al
   1400463ca:	sbb    DWORD PTR [rax],eax
   1400463cc:	sub    eax,0x25001ac8
   1400463d1:	cwde   
   1400463d2:	sbb    eax,0x1f781d00
   1400463d7:	add    BYTE PTR [rax],dl
   1400463d9:	hlt    
   1400463da:	add    BYTE PTR [r12+r10*8],cl
   1400463de:	add    BYTE PTR [rax],r9b
   1400463e1:	(bad)  
   1400463e2:	add    BYTE PTR [r12+riz*2],r8b
   1400463e6:	rex.RX add BYTE PTR [rax],r8b
   1400463e9:	fwait
   1400463ea:	add    BYTE PTR [rax],al
   1400463ec:	sbb    eax,0x9c00009b
   1400463f1:	movsxd eax,DWORD PTR [rax+rax*1]
   1400463f4:	and    DWORD PTR [rcx],ecx
   1400463f6:	add    al,BYTE PTR [rax]
   1400463f8:	or     eax,ebp
   1400463fa:	sbb    BYTE PTR [rax],al
   1400463fc:	sbb    eax,0x5800009b
   140046401:	lahf   
   140046402:	add    BYTE PTR [rax],al
   140046404:	lods   al,BYTE PTR ds:[rsi]
   140046405:	movsxd eax,DWORD PTR [rax+rax*1]
   140046408:	and    DWORD PTR [rax],eax
   14004640a:	add    BYTE PTR [rax],al
   14004640c:	sbb    eax,0x5800009b
   140046411:	lahf   
   140046412:	add    BYTE PTR [rax],al
   140046414:	lods   al,BYTE PTR ds:[rsi]
   140046415:	movsxd eax,DWORD PTR [rax+rax*1]
   140046418:	and    DWORD PTR [rax],eax
   14004641a:	add    al,BYTE PTR [rax]
   14004641c:	add    al,ch
   14004641e:	sbb    BYTE PTR [rax],al
   140046420:	sbb    eax,0x5800009b
   140046425:	lahf   
   140046426:	add    BYTE PTR [rax],al
   140046428:	lods   al,BYTE PTR ds:[rsi]
   140046429:	movsxd eax,DWORD PTR [rax+rax*1]
   14004642c:	and    DWORD PTR [rax],eax
   14004642e:	add    al,BYTE PTR [rax]
   140046430:	add    BYTE PTR [rdi+rax*2],dh
   140046433:	add    BYTE PTR [rax],al
   140046435:	fwait
   140046436:	add    BYTE PTR [rax],al
   140046438:	sbb    eax,0x9c00009b
   14004643d:	movsxd eax,DWORD PTR [rax+rax*1]
   140046440:	add    DWORD PTR [rax],edx
   140046442:	add    eax,0x18011000
   140046447:	add    BYTE PTR [rax+rsi*2],al
   14004644a:	add    esp,DWORD PTR [rax+0x2]
   14004644d:	push   rax
   14004644e:	add    BYTE PTR [rax],al
   140046450:	and    DWORD PTR [rdx],esi
   140046452:	or     al,0x0
   140046454:	xor    bl,BYTE PTR [rax-0x77d6fff8]
   14004645a:	or     DWORD PTR [rax],eax
   14004645c:	and    BYTE PTR [rax+0xa],bh
   14004645f:	add    BYTE PTR [rax],bl
   140046461:	push   0xffffffffe410000b
   140046466:	(bad)  
   140046467:	add    BYTE PTR [rax],cl
   140046469:	xor    al,0x1d
   14004646b:	add    BYTE PTR [rax-0x1effff6b],dh
   140046471:	xchg   ebp,eax
   140046472:	add    BYTE PTR [rax],al
   140046474:	rex
   140046475:	fs add al,0x0
   140046478:	and    DWORD PTR [rax],eax
   14004647a:	add    al,0x0
   14004647c:	add    BYTE PTR [rax+0xb],ch
   14004647f:	add    BYTE PTR [rax],al
   140046481:	in     al,0x1e
   140046483:	add    BYTE PTR [rax-0x1effff6b],dh
   140046489:	xchg   ebp,eax
   14004648a:	add    BYTE PTR [rax],al
   14004648c:	rex
   14004648d:	fs add al,0x0
   140046490:	add    DWORD PTR [rdi],ecx
   140046492:	(bad)  
   140046493:	add    BYTE PTR [rdi],cl
   140046495:	or     eax,DWORD PTR fs:[rax]
   140046498:	sysenter 
   14004649a:	or     al,BYTE PTR [rax]
   14004649c:	(bad)  
   14004649e:	or     esi,DWORD PTR [rax+0x21]
   1400464a1:	adc    eax,DWORD PTR [rax+rax*1]
   1400464a4:	adc    edi,DWORD PTR [rax+0x2]
   1400464a7:	add    BYTE PTR [rip+0xffffffffe0000368],al        # 0x120046815
   1400464ad:	mov    es,WORD PTR [rax]
   1400464af:	add    BYTE PTR [rdx-0x71],ah
   1400464b2:	add    BYTE PTR [rax],al
   1400464b4:	nop
   1400464b5:	fs add al,0x0
   1400464b8:	and    DWORD PTR [rax],eax
   1400464ba:	add    al,0x0
   1400464bc:	add    BYTE PTR [rax+0x2],bh
   1400464bf:	add    BYTE PTR [rax],al
   1400464c1:	push   0xffffffff8ee00003
   1400464c6:	add    BYTE PTR [rax],al
   1400464c8:	(bad)  
   1400464c9:	pop    QWORD PTR [rax]
   1400464cb:	add    BYTE PTR [rax+0x21000464],dl
   1400464d1:	add    BYTE PTR [rax],al
   1400464d3:	add    al,ah
   1400464d5:	mov    es,WORD PTR [rax]
   1400464d7:	add    BYTE PTR [rdx-0x71],ah
   1400464da:	add    BYTE PTR [rax],al
   1400464dc:	nop
   1400464dd:	fs add al,0x0
   1400464e0:	add    DWORD PTR [rcx+rax*1],eax
   1400464e3:	add    BYTE PTR [rdx+rax*2],al
   1400464e6:	add    BYTE PTR [rax],al
   1400464e8:	add    DWORD PTR [rdx],ecx
   1400464ea:	add    al,0x0
   1400464ec:	or     dh,BYTE PTR [rsi+rax*1]
   1400464ef:	add    BYTE PTR [rdx],cl
   1400464f1:	xor    al,BYTE PTR [rsi]
   1400464f3:	jo     0x1400464f6
   1400464f5:	adc    DWORD PTR [rbx],eax
   1400464f7:	add    BYTE PTR [rcx],dl
   1400464f9:	movabs ds:0x16210000600bf00d,al
   140046502:	or     al,BYTE PTR [rax]
   140046504:	(bad)  
   140046505:	in     al,0x6
   140046507:	add    BYTE PTR [rax],dl
   140046509:	(bad)  
   14004650a:	(bad)  
   14004650b:	add    BYTE PTR [rsp+rax*8],cl
   14004650e:	or     BYTE PTR [rax],al
   140046510:	or     BYTE PTR [rcx+rcx*1+0x0],dh
   140046514:	add    al,0x34
   140046516:	(bad)  
   140046517:	add    BYTE PTR [rax],al
   140046519:	mov    al,BYTE PTR [rax]
   14004651b:	add    BYTE PTR [rcx],dl
   14004651d:	mov    al,BYTE PTR [rax]
   14004651f:	add    ah,dh
   140046521:	fs add al,0x0
   140046524:	and    DWORD PTR [rip+0x54050002],eax        # 0x19409652c
   14004652a:	or     al,BYTE PTR [rax]
   14004652c:	adc    DWORD PTR [rdx-0x757b0000],ecx
   140046532:	add    BYTE PTR [rax],al
   140046534:	add    BYTE PTR [rbp+0x4],ah
   140046537:	add    BYTE PTR [rcx],ah
   140046539:	add    BYTE PTR [rax],al
   14004653b:	add    BYTE PTR [rcx],dl
   14004653d:	mov    al,BYTE PTR [rax]
   14004653f:	add    BYTE PTR [rbp+0x8a],al
   140046545:	gs add al,0x0
   140046548:	and    DWORD PTR [rax],eax
   14004654a:	add    BYTE PTR [rax],al
   14004654c:	add    BYTE PTR [rdx-0x75ef0000],cl
   140046552:	add    BYTE PTR [rax],al
   140046554:	hlt    
   140046555:	fs add al,0x0
   140046558:	add    DWORD PTR [rdx],ecx
   14004655a:	add    al,0x0
   14004655c:	or     dh,BYTE PTR [rsi+rax*1]
   14004655f:	add    BYTE PTR [rdx],cl
   140046561:	xor    al,BYTE PTR [rsi]
   140046563:	jo     0x140046566
   140046565:	(bad)  
   140046566:	add    eax,0x10e21700
   14004656b:	lock (bad) 
   14004656d:	loopne 0x14004657b
   14004656f:	xor    BYTE PTR [rbx],cl
   140046571:	push   rax
   140046572:	add    BYTE PTR [rax],al
   140046574:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b409657c
   14004657a:	(bad)  
   14004657b:	add    al,al
   14004657d:	test   al,0x0
   14004657f:	add    BYTE PTR [rax],al
   140046581:	test   eax,0x65640000
   140046586:	add    al,0x0
   140046588:	and    DWORD PTR [rax],ebp
   14004658a:	(bad)  
   14004658b:	add    BYTE PTR [rax],ch
   14004658d:	(bad)  
   14004658e:	or     al,0x0
   140046590:	(bad)  
   140046591:	fs (bad) 
   140046593:	add    BYTE PTR [rax],al
   140046595:	je     0x1400465a5
   140046597:	add    al,al
   140046599:	test   al,0x0
   14004659b:	add    BYTE PTR [rax],al
   14004659d:	test   eax,0x65640000
   1400465a2:	add    al,0x0
   1400465a4:	and    DWORD PTR [rip+0xffffffffc4050002],eax        # 0x1040965ac
   1400465aa:	or     eax,0xa92300
   1400465af:	add    BYTE PTR [rsi],bh
   1400465b1:	stos   BYTE PTR es:[rdi],al
   1400465b2:	add    BYTE PTR [rax],al
   1400465b4:	mov    BYTE PTR [rbp+0x4],ah
   1400465b7:	add    BYTE PTR [rcx],ah
   1400465b9:	add    BYTE PTR [rax],al
   1400465bb:	add    BYTE PTR [rbx],ah
   1400465bd:	test   eax,0xaa3e0000
   1400465c2:	add    BYTE PTR [rax],al
   1400465c4:	mov    BYTE PTR [rbp+0x4],ah
   1400465c7:	add    BYTE PTR [rcx],ah
   1400465c9:	add    BYTE PTR [rax],cl
   1400465cb:	add    BYTE PTR [rax],al
   1400465cd:	(bad)  
   1400465ce:	or     al,0x0
   1400465d0:	add    ah,al
   1400465d2:	or     eax,0xe740000
   1400465d7:	add    BYTE PTR [rax],al
   1400465d9:	fs (bad) 
   1400465db:	add    al,al
   1400465dd:	test   al,0x0
   1400465df:	add    BYTE PTR [rax],al
   1400465e1:	test   eax,0x65640000
   1400465e6:	add    al,0x0
   1400465e8:	and    DWORD PTR [rax],eax
   1400465ea:	(bad)  
   1400465eb:	add    BYTE PTR [rax],al
   1400465ed:	(bad)  
   1400465ee:	or     al,0x0
   1400465f0:	add    BYTE PTR [rsi+rcx*1+0x0],dh
   1400465f4:	add    BYTE PTR [rsi+rdx*1+0x0],ah
   1400465f8:	shr    BYTE PTR [rax-0x57000000],0x0
   1400465ff:	add    BYTE PTR [rbp+riz*2+0x4],ah
   140046603:	add    BYTE PTR [rcx],al
   140046605:	adc    cl,BYTE PTR [rax]
   140046607:	add    BYTE PTR [rdx],dl
   140046609:	push   rsp
   14004660a:	(bad)  
   14004660b:	add    BYTE PTR [rdx],dl
   14004660d:	xor    al,0xd
   14004660f:	add    BYTE PTR [rdx],dl
   140046611:	jb     0x140046621
   140046613:	loopne 0x140046621
   140046615:	jo     0x140046622
   140046617:	(bad)  
   140046618:	add    DWORD PTR [rax],ebp
   14004661a:	or     BYTE PTR [rax],al
   14004661c:	sub    BYTE PTR [rax+0x2],bh
   14004661f:	add    BYTE PTR [rax+rbp*2],dl
   140046622:	add    eax,DWORD PTR [rax]
   140046624:	or     ah,BYTE PTR [rbx+rcx*1+0x0]
   140046628:	or     dh,BYTE PTR [rdx+0x6]
   14004662b:	jo     0x14004664e
   14004662d:	add    eax,0x34050002
   140046632:	or     al,BYTE PTR [rax]
   140046634:	(bad)  
   140046635:	cdq    
   140046636:	add    BYTE PTR [rax],al
   140046638:	ficomp DWORD PTR [rcx+0x66180000]
   14004663e:	add    al,0x0
   140046640:	and    DWORD PTR [rax],eax
   140046642:	add    BYTE PTR [rax],al
   140046644:	(bad)  
   140046645:	cdq    
   140046646:	add    BYTE PTR [rax],al
   140046648:	ficomp DWORD PTR [rcx+0x66180000]
   14004664e:	add    al,0x0
   140046650:	add    DWORD PTR [rbx],edx
   140046652:	or     BYTE PTR [rax],al
   140046654:	adc    esi,DWORD PTR [rdx-0x1ff20ff1]
   14004665a:	or     eax,eax
   14004665c:	or     DWORD PTR [rax+0x8],esi
   14004665f:	(bad)  
   140046660:	(bad)  
   140046661:	push   rax
   140046662:	(bad)  
   140046663:	xor    BYTE PTR [rcx],ah
   140046665:	or     eax,0x680d0004
   14004666a:	add    eax,0x14d40800
   14004666f:	add    BYTE PTR [rax-0x55],dh
   140046672:	add    BYTE PTR [rax],al
   140046674:	add    al,0xac
   140046676:	add    BYTE PTR [rax],al
   140046678:	push   rax
   140046679:	data16 add al,0x0
   14004667c:	and    DWORD PTR [rax],eax
   14004667e:	add    BYTE PTR [rax],al
   140046680:	jo     0x14004662d
   140046682:	add    BYTE PTR [rax],al
   140046684:	add    al,0xac
   140046686:	add    BYTE PTR [rax],al
   140046688:	push   rax
   140046689:	data16 add al,0x0
   14004668c:	and    DWORD PTR [rax],eax
   14004668e:	add    al,0x0
   140046690:	add    BYTE PTR [rax+0x5],ch
   140046693:	add    BYTE PTR [rax],al
   140046695:	(bad)  
   140046696:	adc    al,0x0
   140046698:	jo     0x140046645
   14004669a:	add    BYTE PTR [rax],al
   14004669c:	add    al,0xac
   14004669e:	add    BYTE PTR [rax],al
   1400466a0:	push   rax
   1400466a1:	data16 add al,0x0
   1400466a4:	add    DWORD PTR [rsi],ebx
   1400466a6:	or     BYTE PTR [rax],al
   1400466a8:	(bad)  
   1400466a9:	mov    BYTE PTR [rax+rax*1],al
   1400466ac:	adc    edi,DWORD PTR [rax+0x5]
   1400466af:	add    BYTE PTR [rdx],cl
   1400466b1:	xor    al,0x10
   1400466b3:	add    BYTE PTR [rdx],cl
   1400466b5:	rol    BYTE PTR [rsi],cl
   1400466b7:	jo     0x1400466da
   1400466b9:	add    eax,0x68050002
   1400466be:	(bad)  
   1400466bf:	add    BYTE PTR [rax-0x52],ah
   1400466c2:	add    BYTE PTR [rax],al
   1400466c4:	fisubr WORD PTR [rsi+0x66a40000]
   1400466ca:	add    al,0x0
   1400466cc:	and    DWORD PTR [rax],eax
   1400466ce:	add    BYTE PTR [rax],al
   1400466d0:	(bad)  
   1400466d1:	scas   al,BYTE PTR es:[rdi]
   1400466d2:	add    BYTE PTR [rax],al
   1400466d4:	fisubr WORD PTR [rsi+0x66a40000]
   1400466da:	add    al,0x0
   1400466dc:	and    DWORD PTR [rax],eax
   1400466de:	add    al,BYTE PTR [rax]
   1400466e0:	add    BYTE PTR [rax+0x6],ch
   1400466e3:	add    BYTE PTR [rax-0x52],ah
   1400466e6:	add    BYTE PTR [rax],al
   1400466e8:	fisubr WORD PTR [rsi+0x66a40000]
   1400466ee:	add    al,0x0
   1400466f0:	add    DWORD PTR [rbp+0x6495000d],edx
   1400466f6:	(bad)  
   1400466f7:	add    BYTE PTR [rax+0x21000e54],dl
   1400466fd:	push   0x62120002
   140046702:	(bad)  
   140046703:	lock or al,0xe0
   140046706:	or     dl,al
   140046708:	or     al,al
   14004670a:	(bad)  
   14004670b:	jo     0x140046712
   14004670d:	xor    BYTE PTR [rax],al
   14004670f:	add    BYTE PTR [rcx],al
   140046711:	adc    DWORD PTR [rdi],eax
   140046713:	add    BYTE PTR [rcx],dl
   140046715:	je     0x14004671c
   140046717:	add    BYTE PTR [rcx],dl
   140046719:	fs add al,0x0
   14004671c:	adc    DWORD PTR [rbx+rax*1],esi
   14004671f:	add    BYTE PTR [rcx],dl
   140046721:	loopne 0x140046723
   140046723:	add    BYTE PTR [rcx],ah
   140046725:	add    eax,0x54050002
   14004672a:	add    al,BYTE PTR [rax]
   14004672c:	movabs al,ds:0x100000b7b60000b6
   140046735:	addr32 add al,0x0
   140046738:	and    DWORD PTR [rax],eax
   14004673a:	add    BYTE PTR [rax],al
   14004673c:	movabs al,ds:0x100000b7b60000b6
   140046745:	addr32 add al,0x0
   140046748:	add    DWORD PTR [rsi],eax
   14004674a:	add    al,BYTE PTR [rax]
   14004674c:	(bad)  
   14004674d:	push   rdx
   14004674e:	add    dh,BYTE PTR [rax+0x21]
   140046751:	or     al,BYTE PTR [rax+rax*1]
   140046754:	or     ah,BYTE PTR [rdx+rcx*1+0x0]
   140046758:	add    eax,0x40000954
   14004675d:	mov    esi,0xbe5f0000
   140046762:	add    BYTE PTR [rax],al
   140046764:	rex.W
   140046765:	addr32 add al,0x0
   140046768:	and    DWORD PTR [rdx],ecx
   14004676a:	add    al,0x0
   14004676c:	or     ah,ah
   14004676e:	or     eax,DWORD PTR [rax]
   140046770:	add    eax,0x5f000834
   140046775:	mov    esi,0xbe830000
   14004677a:	add    BYTE PTR [rax],al
   14004677c:	push   rax
   14004677d:	addr32 add al,0x0
   140046780:	and    DWORD PTR [rax],eax
   140046782:	add    BYTE PTR [rax],al
   140046784:	pop    rdi
   140046785:	mov    esi,0xbe830000
   14004678a:	add    BYTE PTR [rax],al
   14004678c:	push   rax
   14004678d:	addr32 add al,0x0
   140046790:	and    DWORD PTR [rax],eax
   140046792:	add    al,BYTE PTR [rax]
   140046794:	add    BYTE PTR [rdx+rcx*1+0x0],ah
   140046798:	rex mov esi,0xbe5f0000
   14004679e:	add    BYTE PTR [rax],al
   1400467a0:	rex.W
   1400467a1:	addr32 add al,0x0
   1400467a4:	and    DWORD PTR [rax],eax
   1400467a6:	add    al,BYTE PTR [rax]
   1400467a8:	add    BYTE PTR [rdx+rcx*1+0x0],ah
   1400467ac:	rex mov esi,0xbe5f0000
   1400467b2:	add    BYTE PTR [rax],al
   1400467b4:	rex.W
   1400467b5:	addr32 add al,0x0
   1400467b8:	and    DWORD PTR [rip+0x68050002],eax        # 0x1a80967c0
   1400467be:	add    al,BYTE PTR [rax]
   1400467c0:	cdq    
   1400467c1:	mov    edi,0xbfcf0000
   1400467c6:	add    BYTE PTR [rax],al
   1400467c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400467c9:	addr32 add al,0x0
   1400467cc:	and    DWORD PTR [rax],eax
   1400467ce:	add    BYTE PTR [rax],al
   1400467d0:	cdq    
   1400467d1:	mov    edi,0xbfcf0000
   1400467d6:	add    BYTE PTR [rax],al
   1400467d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400467d9:	addr32 add al,0x0
   1400467dc:	add    DWORD PTR [rsi],ecx
   1400467de:	add    eax,0x18010e00
   1400467e3:	add    BYTE PTR [rdi],al
   1400467e5:	lock add eax,0x300470
   1400467eb:	add    BYTE PTR [rcx],ah
   1400467ed:	or     al,0x6
   1400467ef:	add    BYTE PTR [rsp+rdx*8],cl
   1400467f2:	(bad)  
   1400467f3:	add    BYTE PTR [rax],cl
   1400467f5:	(bad)  
   1400467f6:	(bad)  
   1400467f7:	add    BYTE PTR [rsp+riz*2],al
   1400467fa:	(bad)  
   1400467fb:	add    al,dh
   1400467fd:	mov    eax,0xb9040000
   140046802:	add    BYTE PTR [rax],al
   140046804:	fsub   QWORD PTR [rdi+0x4]
   140046807:	add    BYTE PTR [rcx],ah
   140046809:	sub    BYTE PTR [rax],cl
   14004680b:	add    BYTE PTR [rax],ch
   14004680d:	in     al,0x16
   14004680f:	add    BYTE PTR [rax],bl
   140046811:	js     0x14004681c
   140046813:	add    BYTE PTR [rax],dl
   140046815:	push   0x5408000a
   14004681a:	sbb    eax,0xb90400
   14004681f:	add    BYTE PTR [rcx+rdi*4+0x67ec0000],bl
   140046826:	add    al,0x0
   140046828:	and    DWORD PTR [rax],eax
   14004682a:	add    BYTE PTR [rax],al
   14004682c:	add    al,0xb9
   14004682e:	add    BYTE PTR [rax],al
   140046830:	pushf  
   140046831:	mov    ecx,0x67ec0000
   140046836:	add    al,0x0
   140046838:	and    DWORD PTR [rax],eax
   14004683a:	add    BYTE PTR [rax],al
   14004683c:	lock mov eax,0xb9040000
   140046842:	add    BYTE PTR [rax],al
   140046844:	fsub   QWORD PTR [rdi+0x4]
   140046847:	add    BYTE PTR [rcx],al
   140046849:	pop    rsp
   14004684a:	or     eax,0x12c45c00
   14004684f:	add    BYTE PTR [rsp+rsi*2+0x13],dl
   140046853:	add    BYTE PTR [rsp+rsi*1+0x1b],cl
   140046857:	add    BYTE PTR [rax],dl
   140046859:	add    DWORD PTR [rax+rax*1],edx
   14004685c:	or     eax,esi
   14004685e:	(bad)  
   14004685f:	loopne 0x140046866
   140046861:	rol    BYTE PTR [rbx],1
   140046863:	(bad)  
   140046864:	add    dl,BYTE PTR [rax+0x0]
   140046867:	add    BYTE PTR [rcx],ah
   140046869:	(bad)  
   14004686b:	add    BYTE PTR [rdi],cl
   14004686d:	js     0x140046876
   14004686f:	add    BYTE PTR [rax],cl
   140046871:	push   0xffffffffc1000008
   140046876:	add    BYTE PTR [rax],al
   140046878:	rol    DWORD PTR gs:[rax],0x0
   14004687c:	rex.W push 0x210004
   140046882:	add    BYTE PTR [rax],al
   140046884:	add    cl,al
   140046886:	add    BYTE PTR [rax],al
   140046888:	rol    DWORD PTR gs:[rax],0x0
   14004688c:	rex.W push 0x1f010004
   140046892:	add    eax,0x6881f00
   140046897:	add    BYTE PTR [rbx],dl
   140046899:	add    DWORD PTR [rdx],ebx
   14004689b:	add    BYTE PTR [rax+rsi*2],cl
   14004689e:	add    BYTE PTR [rax],al
   1400468a0:	and    DWORD PTR [rdx+rax*1],eax
   1400468a3:	add    BYTE PTR [rsp+riz*2],al
   1400468a6:	(bad)  
   1400468a7:	add    BYTE PTR [rax-0x3b],ah
   1400468aa:	add    BYTE PTR [rax],al
   1400468ac:	pop    rbp
   1400468ae:	add    BYTE PTR [rax],al
   1400468b0:	nop
   1400468b1:	push   0x54210004
   1400468b6:	adc    al,0x0
   1400468b8:	push   rsp
   1400468b9:	test   al,0x4
   1400468bb:	add    BYTE PTR [rax+rbx*4],dh
   1400468be:	add    eax,0x7782e00
   1400468c3:	add    BYTE PTR [rcx],ch
   1400468c5:	push   0xfffffffff41e0008
   1400468ca:	adc    eax,DWORD PTR [rax]
   1400468cc:	sbb    ah,ah
   1400468ce:	adc    al,0x0
   1400468d0:	(bad)  
   1400468d1:	(bad)  
   1400468d2:	adc    eax,0x16c41200
   1400468d7:	add    BYTE PTR [rsi],cl
   1400468d9:	push   rsp
   1400468da:	sbb    BYTE PTR [rax],al
   1400468dc:	add    al,0x34
   1400468de:	sbb    DWORD PTR [rax],eax
   1400468e0:	pop    rbp
   1400468e2:	add    BYTE PTR [rax],al
   1400468e4:	mov    ah,0xc5
   1400468e6:	add    BYTE PTR [rax],al
   1400468e8:	movabs al,ds:0x8f00000021000468
   1400468f1:	(bad)
   1400468f4:	mov    ah,0xc5
   1400468f6:	add    BYTE PTR [rax],al
   1400468f8:	movabs al,ds:0x6000000021000468
   140046901:	(bad)
   140046904:	pop    rbp
   140046906:	add    BYTE PTR [rax],al
   140046908:	nop
   140046909:	push   0x9010004
   14004690e:	add    eax,DWORD PTR [rax]
   140046910:	or     DWORD PTR [rax+0x2],ebp
   140046913:	add    BYTE PTR [rdx+riz*2],al
   140046916:	add    BYTE PTR [rax],al
   140046918:	add    DWORD PTR [rcx+rax*1],eax
   14004691b:	add    BYTE PTR [rdx+rax*2],al
   14004691e:	add    BYTE PTR [rax],al
   140046920:	add    DWORD PTR [rbx],ecx
   140046922:	add    eax,0x4640b00
   140046927:	add    BYTE PTR [rbx],cl
   140046929:	xor    al,0x3
   14004692b:	add    BYTE PTR [rbx],cl
   14004692d:	jo     0x14004692f
   14004692f:	add    BYTE PTR [rcx],ah
   140046931:	add    eax,0x54050002
   140046936:	add    al,BYTE PTR [rax]
   140046938:	or     cl,0x0
   14004693b:	add    BYTE PTR [rax+0x200000c9],dh
   140046941:	imul   eax,DWORD PTR [rax+rax*1],0x21
   140046948:	or     cl,0x0
   14004694b:	add    BYTE PTR [rax+0x200000c9],dh
   140046951:	imul   eax,DWORD PTR [rax+rax*1],0xe5501
   140046958:	push   rbp
   140046959:	mov    BYTE PTR [rax+rax*1],al
   14004695c:	rex.WRXB js 0x140046964
   14004695f:	add    BYTE PTR [rax+0x68],al
   140046962:	(bad)  
   140046963:	add    BYTE PTR [rdx],dl
   140046965:	push   rsp
   140046966:	adc    al,0x0
   140046968:	adc    dh,BYTE PTR [rbx+rdx*1]
   14004696b:	add    BYTE PTR [rdx],dl
   14004696d:	ror    BYTE PTR [rsi],cl
   14004696f:	loopne 0x14004697d
   140046971:	jo     0x14004697e
   140046973:	(bad)  
   140046974:	add    DWORD PTR [rdx],ecx
   140046976:	add    al,0x0
   140046978:	or     dh,BYTE PTR [rbx+rcx*1]
   14004697b:	add    BYTE PTR [rdx],cl
   14004697d:	jb     0x140046985
   14004697f:	(bad)  
   140046980:	and    DWORD PTR [rsi],edx
   140046982:	(bad)  
   140046983:	add    BYTE PTR [rsi],dl
   140046985:	js     0x140046989
   140046987:	add    BYTE PTR [rdx],cl
   140046989:	push   0x74050003
   14004698e:	or     al,BYTE PTR [rax]
   140046990:	lock int3 
   140046992:	add    BYTE PTR [rax],al
   140046994:	or     cl,ch
   140046996:	add    BYTE PTR [rax],al
   140046998:	je     0x140046a03
   14004699a:	add    al,0x0
   14004699c:	and    DWORD PTR [rax],eax
   14004699e:	add    BYTE PTR [rax],al
   1400469a0:	lock int3 
   1400469a2:	add    BYTE PTR [rax],al
   1400469a4:	or     cl,ch
   1400469a6:	add    BYTE PTR [rax],al
   1400469a8:	je     0x140046a13
   1400469aa:	add    al,0x0
   1400469ac:	add    DWORD PTR [rdi],ecx
   1400469ae:	add    al,0x0
   1400469b0:	lss    ecx,FWORD PTR [rbx]
   1400469b3:	ror    BYTE PTR [rcx],1
   1400469b5:	rol    BYTE PTR [rdi],0x60
   1400469b8:	and    DWORD PTR [rax],ebx
   1400469ba:	or     al,BYTE PTR [rax]
   1400469bc:	sbb    ah,dh
   1400469be:	or     al,BYTE PTR [rax]
   1400469c0:	adc    ah,ah
   1400469c2:	or     eax,DWORD PTR [rax]
   1400469c4:	or     al,0x74
   1400469c6:	adc    eax,DWORD PTR [rax]
   1400469c8:	or     BYTE PTR [rdx+rdx*1+0x0],dl
   1400469cc:	add    al,0x34
   1400469ce:	adc    BYTE PTR [rax],al
   1400469d0:	mov    al,0xcd
   1400469d2:	add    BYTE PTR [rax],al
   1400469d4:	mov    edi,0xac0000cd
   1400469d9:	imul   eax,DWORD PTR [rax+rax*1],0x20521
   1400469e0:	add    eax,0xbf000468
   1400469e5:	int    0x0
   1400469e7:	add    BYTE PTR [rbp-0x31],ah
   1400469ea:	add    BYTE PTR [rax],al
   1400469ec:	mov    eax,0x21000469
   1400469f1:	adc    eax,DWORD PTR [rax+rax*1]
   1400469f4:	adc    ecx,DWORD PTR [rax+0x78050002]
   1400469fa:	add    eax,DWORD PTR [rax]
   1400469fc:	gs iret 
   1400469fe:	add    BYTE PTR [rax],al
   140046a00:	mov    bh,cl
   140046a02:	add    BYTE PTR [rax],al
   140046a04:	fsubr  QWORD PTR [rcx+0x4]
   140046a07:	add    BYTE PTR [rcx],ah
   140046a09:	add    BYTE PTR [rax],al
   140046a0b:	add    BYTE PTR [rbp-0x31],ah
   140046a0e:	add    BYTE PTR [rax],al
   140046a10:	mov    bh,cl
   140046a12:	add    BYTE PTR [rax],al
   140046a14:	fsubr  QWORD PTR [rcx+0x4]
   140046a17:	add    BYTE PTR [rcx],ah
   140046a19:	add    BYTE PTR [rdx],al
   140046a1b:	add    BYTE PTR [rax],al
   140046a1d:	push   0xffffffffcdb00004
   140046a22:	add    BYTE PTR [rax],al
   140046a24:	mov    edi,0xac0000cd
   140046a29:	imul   eax,DWORD PTR [rax+rax*1],0x32301
   140046a30:	and    esi,DWORD PTR [rsp+rax*1]
   140046a33:	add    BYTE PTR [rdx+rax*2],al
   140046a36:	add    BYTE PTR [rax],al
   140046a38:	add    DWORD PTR [rsi],eax
   140046a3a:	add    al,BYTE PTR [rax]
   140046a3c:	(bad)  
   140046a3d:	xor    al,BYTE PTR [rdx]
   140046a3f:	xor    BYTE PTR [rcx],al
   140046a41:	clts   
   140046a43:	add    BYTE PTR [rdi],cl
   140046a45:	js     0x140046a49
   140046a47:	add    BYTE PTR [rdx],cl
   140046a49:	xor    al,0x8
   140046a4b:	add    BYTE PTR [rdx],cl
   140046a4d:	push   rdx
   140046a4e:	(bad)  
   140046a4f:	jo     0x140046a52
   140046a51:	clts   
   140046a53:	add    BYTE PTR [rdi],cl
   140046a55:	fs (bad) 
   140046a57:	add    BYTE PTR [rdi],cl
   140046a59:	xor    al,0x6
   140046a5b:	add    BYTE PTR [rdi],cl
   140046a5d:	xor    cl,BYTE PTR [rbx]
   140046a5f:	jo     0x140046a62
   140046a61:	sbb    al,0xa
   140046a63:	add    BYTE PTR [rax+rbx*4],bl
   140046a66:	add    al,BYTE PTR [rax]
   140046a68:	lss    ecx,FWORD PTR [rbx]
   140046a6b:	lock or eax,edx
   140046a6e:	(bad)  
   140046a6f:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143646ee6
   140046a76:	add    dh,BYTE PTR [rax]
   140046a78:	and    DWORD PTR [rdx],edi
   140046a7a:	(bad)  
   140046a7b:	add    BYTE PTR [rdx],bh
   140046a7d:	in     al,0x16
   140046a7f:	add    BYTE PTR [rbx],cl
   140046a81:	mov    BYTE PTR [rbx],al
   140046a83:	add    BYTE PTR [rip+0x10000478],al        # 0x150046f01
   140046a89:	fadd   DWORD PTR [rax]
   140046a8b:	add    BYTE PTR [rax],dh
   140046a8d:	fadd   DWORD PTR [rax]
   140046a8f:	add    BYTE PTR [rax+0x6a],ah
   140046a92:	add    al,0x0
   140046a94:	and    DWORD PTR [rip+0x68050002],eax        # 0x1a8096a9c
   140046a9a:	add    eax,0xd83000
   140046a9f:	add    BYTE PTR [rdx+rbx*8],dl
   140046aa2:	add    BYTE PTR [rax],al
   140046aa4:	js     0x140046b10
   140046aa6:	add    al,0x0
   140046aa8:	and    DWORD PTR [rax],eax
   140046aaa:	add    BYTE PTR [rax],al
   140046aac:	xor    al,bl
   140046aae:	add    BYTE PTR [rax],al
   140046ab0:	adc    al,0xda
   140046ab2:	add    BYTE PTR [rax],al
   140046ab4:	js     0x140046b20
   140046ab6:	add    al,0x0
   140046ab8:	and    DWORD PTR [rax],eax
   140046aba:	add    al,BYTE PTR [rax]
   140046abc:	add    ah,ah
   140046abe:	(bad)  
   140046abf:	add    BYTE PTR [rax],dl
   140046ac1:	fadd   DWORD PTR [rax]
   140046ac3:	add    BYTE PTR [rax],dh
   140046ac5:	fadd   DWORD PTR [rax]
   140046ac7:	add    BYTE PTR [rax+0x6a],ah
   140046aca:	add    al,0x0
   140046acc:	add    DWORD PTR [rsi],eax
   140046ace:	add    al,BYTE PTR [rax]
   140046ad0:	(bad)  
   140046ad1:	xor    al,BYTE PTR [rdx]
   140046ad3:	jo     0x140046af6
   140046ad5:	add    eax,0x34050002
   140046ada:	(bad)  
   140046adb:	add    al,ah
   140046add:	enter  0x0,0xff
   140046ae1:	enter  0x0,0xcc
   140046ae5:	push   0x4
   140046ae7:	add    BYTE PTR [rcx],ah
   140046ae9:	add    BYTE PTR [rax],al
   140046aeb:	add    al,ah
   140046aed:	enter  0x0,0xff
   140046af1:	enter  0x0,0xcc
   140046af5:	push   0x4
   140046af7:	add    BYTE PTR [rcx],al
   140046af9:	clts   
   140046afb:	add    BYTE PTR [rdi],cl
   140046afd:	or     BYTE PTR fs:[rax],al
   140046b00:	sysenter 
   140046b02:	(bad)  
   140046b03:	add    BYTE PTR [rdi],cl
   140046b05:	xor    cl,BYTE PTR [rbx]
   140046b07:	jo     0x140046b2a
   140046b09:	add    eax,0x54050002
   140046b0e:	(bad)  
   140046b0f:	add    BYTE PTR [rax-0x11ffff24],dl
   140046b15:	fadd   QWORD PTR [rax]
   140046b17:	add    al,bh
   140046b19:	push   0x4
   140046b1b:	add    BYTE PTR [rcx],ah
   140046b1d:	add    BYTE PTR [rax],al
   140046b1f:	add    BYTE PTR [rax-0x11ffff24],dl
   140046b25:	fadd   QWORD PTR [rax]
   140046b27:	add    al,bh
   140046b29:	push   0x4
   140046b2b:	add    BYTE PTR [rcx],al
   140046b2d:	or     al,BYTE PTR [rax+rax*1]
   140046b30:	or     dh,BYTE PTR [rsi+rax*1]
   140046b33:	add    BYTE PTR [rdx],cl
   140046b35:	xor    al,BYTE PTR [rsi]
   140046b37:	jo     0x140046b3a
   140046b39:	cmp    DWORD PTR [rax],ecx
   140046b3b:	add    BYTE PTR [rcx],bh
   140046b3d:	or     al,BYTE PTR fs:[rax]
   140046b40:	(bad)  
   140046b41:	xor    al,0x9
   140046b43:	add    BYTE PTR [rdx],cl
   140046b45:	push   rsp
   140046b46:	or     eax,DWORD PTR [rax]
   140046b48:	or     dl,BYTE PTR [rdx+0x6]
   140046b4b:	jo     0x140046b4e
   140046b4d:	sbb    cl,BYTE PTR [rax]
   140046b4f:	add    BYTE PTR [rdx],bl
   140046b51:	or     DWORD PTR fs:[rax],eax
   140046b54:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   140046b58:	sbb    dh,BYTE PTR [rsi+rax*1]
   140046b5b:	add    BYTE PTR [rdx],bl
   140046b5d:	xor    dl,BYTE PTR [rsi]
   140046b5f:	jo     0x140046b62
   140046b61:	(bad)  
   140046b62:	add    al,BYTE PTR [rax]
   140046b64:	(bad)  
   140046b65:	xor    al,BYTE PTR [rdx]
   140046b67:	xor    BYTE PTR [rcx],al
   140046b69:	add    al,0x1
   140046b6b:	add    BYTE PTR [rdx+rax*2],al
   140046b6e:	add    BYTE PTR [rax],al
   140046b70:	add    DWORD PTR [rdx],edx
   140046b72:	(bad)  
   140046b73:	add    BYTE PTR [rdx],dl
   140046b75:	jb     0x140046b85
   140046b77:	lock or al,0xe0
   140046b7a:	or     dl,al
   140046b7c:	or     BYTE PTR [rax+0x7],dh
   140046b7f:	xor    BYTE PTR [rcx],ah
   140046b81:	adc    al,0x6
   140046b83:	add    BYTE PTR [rsp+rax*8],dl
   140046b86:	(bad)  
   140046b87:	add    BYTE PTR [rdx],cl
   140046b89:	fs (bad) 
   140046b8b:	add    BYTE PTR [rip+0xfffffffff0000f54],al        # 0x130047ae5
   140046b91:	rol    DWORD PTR [rax],1
   140046b93:	add    BYTE PTR [rdx],dh
   140046b95:	rol    BYTE PTR [rax],cl
   140046b97:	add    BYTE PTR [rax+0x6b],dh
   140046b9a:	add    al,0x0
   140046b9c:	and    DWORD PTR [rax],eax
   140046b9e:	add    BYTE PTR [rax],al
   140046ba0:	lock rol DWORD PTR [rax],1
   140046ba3:	add    BYTE PTR [rdx],dh
   140046ba5:	rol    BYTE PTR [rax],cl
   140046ba7:	add    BYTE PTR [rax+0x6b],dh
   140046baa:	add    al,0x0
   140046bac:	add    DWORD PTR [rsi],eax
   140046bae:	add    al,BYTE PTR [rax]
   140046bb0:	(bad)  
   140046bb1:	xor    al,BYTE PTR [rdx]
   140046bb3:	loopne 0x140046bd6
   140046bb5:	clts   
   140046bb7:	add    BYTE PTR [rdi],cl
   140046bb9:	je     0x140046bc3
   140046bbb:	add    BYTE PTR [rdx],cl
   140046bbd:	fs (bad) 
   140046bbf:	add    BYTE PTR [rip+0x20000634],al        # 0x1600471f9
   140046bc5:	enter  0x0,0x31
   140046bc9:	enter  0x0,0xac
   140046bcd:	imul   eax,DWORD PTR [rax+rax*1],0x21
   140046bd1:	add    BYTE PTR [rax],al
   140046bd3:	add    BYTE PTR [rax],ah
   140046bd5:	enter  0x0,0x31
   140046bd9:	enter  0x0,0xac
   140046bdd:	imul   eax,DWORD PTR [rax+rax*1],0x1
   140046be1:	sbb    cl,BYTE PTR [rdx]
   140046be3:	add    BYTE PTR [rdx],bl
   140046be5:	je     0x140046bf0
   140046be7:	add    BYTE PTR [rdx],bl
   140046be9:	or     BYTE PTR fs:[rax],al
   140046bec:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   140046bf0:	sbb    dh,BYTE PTR [rsi+rax*1]
   140046bf3:	add    BYTE PTR [rdx],bl
   140046bf5:	xor    dl,BYTE PTR [rsi]
   140046bf7:	loopne 0x140046bfa
   140046bf9:	or     DWORD PTR [rax+rax*1],eax
   140046bfc:	or     DWORD PTR [rdx],esi
   140046bfe:	add    eax,0x25003e0
   140046c03:	xor    BYTE PTR [rcx],ah
   140046c05:	clts   
   140046c07:	add    BYTE PTR [rdi],cl
   140046c09:	hlt    
   140046c0a:	or     eax,DWORD PTR [rax]
   140046c0c:	or     dh,BYTE PTR [rdx+rcx*1+0x0]
   140046c10:	add    eax,0xa0000864
   140046c15:	rol    DWORD PTR [rax],cl
   140046c17:	add    BYTE PTR [rbx-0x7ffff2d],bh
   140046c1d:	imul   eax,DWORD PTR [rax+rax*1],0x21
   140046c21:	add    BYTE PTR [rax],al
   140046c23:	add    BYTE PTR [rax-0x44ffff2d],ah
   140046c29:	rol    DWORD PTR [rax],cl
   140046c2b:	add    al,bh
   140046c2d:	imul   eax,DWORD PTR [rax+rax*1],0x1
   140046c31:	clts   
   140046c33:	add    BYTE PTR [rdi],cl
   140046c35:	repnz or al,dl
   140046c38:	(bad)  
   140046c39:	rol    BYTE PTR [rax+rsi*2],0x3
   140046c3d:	(bad)  
   140046c3e:	add    dh,BYTE PTR [rax]
   140046c40:	and    DWORD PTR [rip+0x681d0008],ebx        # 0x1a8216c4e
   140046c46:	(bad)  
   140046c47:	add    BYTE PTR [rax],bl
   140046c49:	hlt    
   140046c4a:	sbb    DWORD PTR [rax],eax
   140046c4c:	adc    ah,ah
   140046c4e:	sbb    BYTE PTR [rax],al
   140046c50:	or     BYTE PTR [rdi+rdx*1+0x0],dl
   140046c54:	and    al,0x0
   140046c57:	add    ch,ch
   140046c59:	loopne 0x140046c5b
   140046c5b:	add    BYTE PTR [rax],dh
   140046c5d:	ins    BYTE PTR es:[rdi],dx
   140046c5e:	add    al,0x0
   140046c60:	and    DWORD PTR [rax],eax
   140046c62:	add    BYTE PTR [rax],al
   140046c64:	and    al,0x0
   140046c67:	add    ch,ch
   140046c69:	loopne 0x140046c6b
   140046c6b:	add    BYTE PTR [rax],dh
   140046c6d:	ins    BYTE PTR es:[rdi],dx
   140046c6e:	add    al,0x0
   140046c70:	add    DWORD PTR [rax],ebx
   140046c72:	or     al,BYTE PTR [rax]
   140046c74:	sbb    BYTE PTR [rsp+rcx*1+0x0],ah
   140046c78:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   140046c7c:	sbb    BYTE PTR [rdx+rcx*1],dh
   140046c7f:	add    BYTE PTR [rax],bl
   140046c81:	push   rdx
   140046c82:	adc    al,0xf0
   140046c84:	adc    ah,al
   140046c86:	adc    BYTE PTR [rax+0x1],dh
   140046c89:	cmp    eax,0x543d0009
   140046c8e:	adc    DWORD PTR [rax],eax
   140046c90:	xor    eax,0x11001734
   140046c95:	add    DWORD PTR [rdx],edx
   140046c97:	add    BYTE PTR [rdx],cl
   140046c99:	lock or al,dl
   140046c9c:	(bad)  
   140046c9d:	jo     0x140046c9f
   140046c9f:	add    BYTE PTR [rcx],ah
   140046ca1:	adc    al,0x6
   140046ca3:	add    BYTE PTR [rsp+riz*8],dl
   140046ca6:	(bad)  
   140046ca7:	add    BYTE PTR [rdi],cl
   140046ca9:	(bad)  
   140046caa:	str    WORD PTR [rax]
   140046cad:	adc    BYTE PTR fs:[rax],al
   140046cb0:	and    ah,dh
   140046cb2:	add    BYTE PTR [rax],al
   140046cb4:	pop    rbp
   140046cb5:	hlt    
   140046cb6:	add    BYTE PTR [rax],al
   140046cb8:	mov    BYTE PTR [rsp+rax*1+0x0],ch
   140046cbc:	and    DWORD PTR [rip+0x68050002],eax        # 0x1a8096cc4
   140046cc2:	(bad)  
   140046cc3:	add    BYTE PTR [rbp-0xc],bl
   140046cc6:	add    BYTE PTR [rax],al
   140046cc8:	jno    0x140046cbe
   140046cca:	add    BYTE PTR [rax],al
   140046ccc:	movabs al,ds:0x5d0000002100046c
   140046cd5:	hlt    
   140046cd6:	add    BYTE PTR [rax],al
   140046cd8:	jno    0x140046cce
   140046cda:	add    BYTE PTR [rax],al
   140046cdc:	movabs al,ds:0x2002100046c
   140046ce5:	in     al,0xe
   140046ce7:	add    BYTE PTR [rax],ah
   140046ce9:	hlt    
   140046cea:	add    BYTE PTR [rax],al
   140046cec:	pop    rbp
   140046ced:	hlt    
   140046cee:	add    BYTE PTR [rax],al
   140046cf0:	mov    BYTE PTR [rsp+rax*1+0x0],ch
   140046cf4:	and    DWORD PTR [rax],eax
   140046cf6:	add    BYTE PTR [rax],al
   140046cf8:	and    ah,dh
   140046cfa:	add    BYTE PTR [rax],al
   140046cfc:	pop    rbp
   140046cfd:	hlt    
   140046cfe:	add    BYTE PTR [rax],al
   140046d00:	mov    BYTE PTR [rsp+rax*1+0x0],ch
   140046d04:	add    DWORD PTR [rsi],ebp
   140046d06:	add    al,0x0
   140046d08:	cs (bad) 
   140046d0a:	or     al,0x0
   140046d0c:	(bad)  
   140046d0d:	repnz (bad) 
   140046d0f:	shl    BYTE PTR [rcx],0x31
   140046d12:	adc    al,BYTE PTR [rax]
   140046d14:	xor    DWORD PTR [rax+0x782b0002],ecx
   140046d1a:	add    eax,DWORD PTR [rax]
   140046d1c:	es push 0xfffffffff4210004
   140046d22:	or     al,BYTE PTR [rax]
   140046d24:	sbb    al,0xe4
   140046d26:	or     eax,DWORD PTR [rax]
   140046d28:	(bad)  
   140046d29:	je     0x140046d38
   140046d2b:	add    BYTE PTR [rdx],dl
   140046d2d:	fs (bad) 
   140046d2f:	add    BYTE PTR [rip+0x8000f54],cl        # 0x148047c89
   140046d35:	xor    al,0x12
   140046d37:	add    BYTE PTR [rax-0x26ffff08],ah
   140046d3d:	clc    
   140046d3e:	add    BYTE PTR [rax],al
   140046d40:	add    al,0x6d
   140046d42:	add    al,0x0
   140046d44:	and    DWORD PTR [rax],eax
   140046d46:	add    BYTE PTR [rax],al
   140046d48:	movabs al,ds:0x40000f8d90000f8
   140046d51:	ins    DWORD PTR es:[rdi],dx
   140046d52:	add    al,0x0
   140046d54:	add    DWORD PTR [rdx],ebx
   140046d56:	or     al,BYTE PTR [rax]
   140046d58:	sbb    dh,BYTE PTR [rbx+rcx*1+0x0]
   140046d5c:	sbb    ah,BYTE PTR [rdx+rcx*1+0x0]
   140046d60:	sbb    dl,BYTE PTR [rcx+rcx*1+0x0]
   140046d64:	sbb    dh,BYTE PTR [rax+rcx*1]
   140046d67:	add    BYTE PTR [rdx],bl
   140046d69:	push   rdx
   140046d6a:	(bad)  
   140046d6b:	loopne 0x140046d6e
   140046d6d:	or     al,BYTE PTR [rax+rax*1]
   140046d70:	or     dh,BYTE PTR [rax+rcx*1]
   140046d73:	add    BYTE PTR [rdx],cl
   140046d75:	push   rdx
   140046d76:	(bad)  
   140046d77:	jo     0x140046d7a
   140046d79:	cmp    DWORD PTR [rip+0x4c83900],ecx        # 0x144cca67f
   140046d7f:	add    BYTE PTR [rip+0x18000798],bl        # 0x15804751d
   140046d85:	mov    BYTE PTR [rax],cl
   140046d87:	add    BYTE PTR [rbx],dl
   140046d89:	push   0x340f000a
   140046d8e:	sbb    BYTE PTR [rax],al
   140046d90:	lgdt   [rsi]
   140046d93:	add    BYTE PTR [rax],cl
   140046d95:	jo     0x140046d97
   140046d97:	add    BYTE PTR [rcx],ah
   140046d99:	(bad)  
   140046d9a:	(bad)  
   140046d9b:	add    BYTE PTR [rdi],dl
   140046d9d:	mov    eax,0xa8110005
   140046da2:	(bad)  
   140046da3:	add    BYTE PTR [rax],cl
   140046da5:	js     0x140046db0
   140046da7:	add    BYTE PTR [rax-0x6effff1b],dl
   140046dad:	out    0x0,eax
   140046daf:	add    BYTE PTR [rax+0x6d],bh
   140046db2:	add    al,0x0
   140046db4:	add    DWORD PTR [rsp+rcx*1],ebx
   140046db7:	add    BYTE PTR [rsp+riz*2],bl
   140046dba:	(bad)  
   140046dbb:	add    BYTE PTR [rsp+rdx*2],bl
   140046dbe:	or     eax,0xc341c00
   140046dc3:	add    BYTE PTR [rdx+rdx*2],bl
   140046dc6:	sbb    al,dh
   140046dc8:	(bad)  
   140046dc9:	loopne 0x140046ddf
   140046dcb:	rcl    BYTE PTR [rdx],1
   140046dcd:	rcl    BYTE PTR [rax],0x70
   140046dd0:	add    DWORD PTR [rip+0x11d0004],ebx        # 0x141216dda
   140046dd6:	adc    eax,DWORD PTR [rax]
   140046dd8:	adc    dl,al
   140046dda:	adc    BYTE PTR [rax+0x21],dl
   140046ddd:	add    al,0x2
   140046ddf:	add    BYTE PTR [rsp+rsi*8],al
   140046de2:	(bad)  
   140046de3:	add    BYTE PTR [rax-0x16],al
   140046de6:	add    BYTE PTR [rax],al
   140046de8:	jo     0x140046dd4
   140046dea:	add    BYTE PTR [rax],al
   140046dec:	shr    BYTE PTR [rbp+0x4],1
   140046def:	add    BYTE PTR [rcx],ah
   140046df1:	sbb    cl,BYTE PTR [rdx]
   140046df3:	add    BYTE PTR [rdx],bl
   140046df5:	in     al,0xf
   140046df7:	add    BYTE PTR [rsi],dl
   140046df9:	(bad)  
   140046dfa:	adc    BYTE PTR [rax],al
   140046dfc:	pcmpeqb mm2,QWORD PTR [rcx]
   140046dff:	add    BYTE PTR [rax],cl
   140046e01:	adc    al,BYTE PTR fs:[rax]
   140046e04:	add    al,0x34
   140046e06:	sbb    DWORD PTR [rax],eax
   140046e08:	jo     0x140046df4
   140046e0a:	add    BYTE PTR [rax],al
   140046e0c:	test   edx,ebp
   140046e0e:	add    BYTE PTR [rax],al
   140046e10:	fsubr  QWORD PTR [rbp+0x4]
   140046e13:	add    BYTE PTR [rcx],ah
   140046e15:	add    BYTE PTR [rax],al
   140046e17:	add    BYTE PTR [rax-0x16],dh
   140046e1a:	add    BYTE PTR [rax],al
   140046e1c:	test   edx,ebp
   140046e1e:	add    BYTE PTR [rax],al
   140046e20:	fsubr  QWORD PTR [rbp+0x4]
   140046e23:	add    BYTE PTR [rcx],ah
   140046e25:	add    BYTE PTR [rax],al
   140046e27:	add    BYTE PTR [rax-0x16],al
   140046e2a:	add    BYTE PTR [rax],al
   140046e2c:	jo     0x140046e18
   140046e2e:	add    BYTE PTR [rax],al
   140046e30:	shr    BYTE PTR [rbp+0x4],1
   140046e33:	add    BYTE PTR [rcx],al
   140046e35:	sbb    eax,0xc21d0009
   140046e3a:	(bad)  
   140046e3b:	lock adc al,0xe0
   140046e3e:	adc    dl,al
   140046e40:	adc    al,al
   140046e42:	(bad)  
   140046e43:	jo     0x140046e52
   140046e45:	(bad)  
   140046e46:	or     al,0x30
   140046e48:	or     edx,DWORD PTR [rax+0x0]
   140046e4b:	add    BYTE PTR [rcx],al
   140046e4d:	(bad)  
   140046e4e:	or     al,BYTE PTR [rax]
   140046e50:	(bad)  
   140046e51:	push   rsp
   140046e52:	lldt   WORD PTR [rsi]
   140046e55:	xor    al,0xd
   140046e57:	add    BYTE PTR [rsi],dl
   140046e59:	push   rdx
   140046e5a:	adc    dh,al
   140046e5c:	adc    al,ah
   140046e5e:	(bad)  
   140046e5f:	ror    BYTE PTR [rax+rsi*2],1
   140046e62:	or     esp,DWORD PTR [rax+0x21]
   140046e65:	add    eax,0xc4050002
   140046e6a:	or     al,0x0
   140046e6c:	(bad)  
   140046e6d:	in     al,dx
   140046e6e:	add    BYTE PTR [rax],al
   140046e70:	ret    
   140046e71:	in     al,dx
   140046e72:	add    BYTE PTR [rax],al
   140046e74:	rex.WR outs dx,BYTE PTR ds:[rsi]
   140046e76:	add    al,0x0
   140046e78:	and    DWORD PTR [rax],eax
   140046e7a:	add    BYTE PTR [rax],al
   140046e7c:	(bad)  
   140046e7d:	in     al,dx
   140046e7e:	add    BYTE PTR [rax],al
   140046e80:	ret    
   140046e81:	in     al,dx
   140046e82:	add    BYTE PTR [rax],al
   140046e84:	rex.WR outs dx,BYTE PTR ds:[rsi]
   140046e86:	add    al,0x0
   140046e88:	add    DWORD PTR [rdi+rax*1+0xec49400],edx
   140046e8f:	add    BYTE PTR [rbx],cl
   140046e91:	(bad)  
   140046e92:	(bad)  
   140046e93:	lock add eax,0x25003e0
   140046e99:	xor    BYTE PTR [rax],al
   140046e9b:	add    BYTE PTR [rcx],ah
   140046e9d:	(bad)  
   140046e9e:	(bad)  
   140046e9f:	add    BYTE PTR [rsi],bl
   140046ea1:	(bad)  
   140046ea2:	(bad)  
   140046ea3:	add    BYTE PTR [rdx],cl
   140046ea5:	je     0x140046eb4
   140046ea7:	add    BYTE PTR [rip+0x10000c64],al        # 0x150047b11
   140046ead:	icebp  
   140046eae:	add    BYTE PTR [rax],al
   140046eb0:	shl    cl,1
   140046eb2:	add    BYTE PTR [rax],al
   140046eb4:	mov    BYTE PTR [rsi+0x4],ch
   140046eb7:	add    BYTE PTR [rcx],ah
   140046eb9:	add    BYTE PTR [rax],al
   140046ebb:	add    BYTE PTR [rax],dl
   140046ebd:	icebp  
   140046ebe:	add    BYTE PTR [rax],al
   140046ec0:	shl    cl,1
   140046ec2:	add    BYTE PTR [rax],al
   140046ec4:	mov    BYTE PTR [rsi+0x4],ch
   140046ec7:	add    BYTE PTR [rcx],al
   140046ec9:	add    al,0x1
   140046ecb:	add    BYTE PTR [rdx+riz*2],al
   140046ece:	add    BYTE PTR [rax],al
   140046ed0:	add    DWORD PTR [rdx],ecx
   140046ed2:	add    al,BYTE PTR [rax]
   140046ed4:	or     dh,BYTE PTR [rdx]
   140046ed6:	(bad)  
   140046ed7:	xor    BYTE PTR [rcx],al
   140046ed9:	(bad)  
   140046eda:	add    al,BYTE PTR [rax]
   140046edc:	(bad)  
   140046edd:	xor    al,BYTE PTR [rdx]
   140046edf:	xor    BYTE PTR [rcx],al
   140046ee1:	add    al,0x1
   140046ee3:	add    BYTE PTR [rdx+rax*4],al
   140046ee6:	add    BYTE PTR [rax],al
   140046ee8:	add    DWORD PTR [rdi],ecx
   140046eea:	(bad)  
   140046eeb:	add    BYTE PTR [rdi],cl
   140046eed:	fs (bad) 
   140046eef:	add    BYTE PTR [rdi],cl
   140046ef1:	xor    al,0x6
   140046ef3:	add    BYTE PTR [rdi],cl
   140046ef5:	xor    cl,BYTE PTR [rbx]
   140046ef7:	jo     0x140046efa
   140046ef9:	or     DWORD PTR [rcx],eax
   140046efb:	add    BYTE PTR [rcx],cl
   140046efd:	rex.X add BYTE PTR [rax],al
   140046f00:	add    DWORD PTR [rip+0x540d0006],ecx        # 0x194116f0c
   140046f06:	or     al,BYTE PTR [rax]
   140046f08:	or     eax,0x7e00932
   140046f0d:	jo     0x140046f15
   140046f0f:	(bad)  
   140046f10:	and    DWORD PTR [rip+0x34050002],eax        # 0x174096f18
   140046f16:	or     BYTE PTR [rax],al
   140046f18:	and    bh,bh
   140046f1a:	add    BYTE PTR [rax],al
   140046f1c:	mov    bh,bh
   140046f1e:	add    BYTE PTR [rax],al
   140046f20:	add    BYTE PTR [rdi+0x4],ch
   140046f23:	add    BYTE PTR [rcx],ah
   140046f25:	add    BYTE PTR [rax],al
   140046f27:	add    BYTE PTR [rax],ah
   140046f29:	inc    DWORD PTR [rax]
   140046f2b:	add    BYTE PTR [rax+0xff],cl
   140046f31:	outs   dx,DWORD PTR ds:[rsi]
   140046f32:	add    al,0x0
   140046f34:	add    DWORD PTR [rbx+rcx*1],ebx
   140046f37:	add    BYTE PTR [rsp+rsi*1],bl
   140046f3a:	sbb    al,0x0
   140046f3c:	sbb    al,0x1
   140046f3e:	adc    al,0x0
   140046f40:	adc    eax,0x11e013f0
   140046f45:	ror    BYTE PTR [rdi],1
   140046f47:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b647bbe
   140046f4e:	add    BYTE PTR [rax],al
   140046f50:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b4196f5e
   140046f56:	or     DWORD PTR [rax],eax
   140046f58:	adc    eax,0x15000864
   140046f5d:	push   rsp
   140046f5e:	(bad)  
   140046f5f:	add    BYTE PTR [rip+0x21e01132],dl        # 0x161e48097
   140046f65:	add    eax,0x34050002
   140046f6a:	(bad)  
   140046f6b:	add    BYTE PTR [rax+0x0],dl
   140046f6e:	add    DWORD PTR [rax],eax
   140046f70:	jnp    0x140046f72
   140046f72:	add    DWORD PTR [rax],eax
   140046f74:	push   rax
   140046f75:	outs   dx,DWORD PTR ds:[rsi]
   140046f76:	add    al,0x0
   140046f78:	and    DWORD PTR [rax],eax
   140046f7a:	add    BYTE PTR [rax],al
   140046f7c:	push   rax
   140046f7d:	add    BYTE PTR [rcx],al
   140046f7f:	add    BYTE PTR [rbx+0x0],bh
   140046f82:	add    DWORD PTR [rax],eax
   140046f84:	push   rax
   140046f85:	outs   dx,DWORD PTR ds:[rsi]
   140046f86:	add    al,0x0
   140046f88:	add    DWORD PTR [rcx],ebx
   140046f8a:	or     BYTE PTR [rax],al
   140046f8c:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140046f90:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140046f94:	sbb    DWORD PTR [rsi+rax*1],esi
   140046f97:	add    BYTE PTR [rcx],bl
   140046f99:	xor    dl,BYTE PTR [rip+0x2060170]        # 0x1420a710f
   140046f9f:	add    BYTE PTR [rsi],al
   140046fa1:	xor    al,BYTE PTR [rdx]
   140046fa3:	xor    BYTE PTR [rcx],al
   140046fa5:	pop    rax
   140046fa6:	(bad)  
   140046fa7:	add    BYTE PTR [rax+0x68],bl
   140046faa:	add    al,BYTE PTR [rax]
   140046fac:	rex.WRXB (bad) 
   140046fae:	or     al,0x0
   140046fb0:	rex.RXB je 0x140046fbe
   140046fb3:	add    BYTE PTR [rsi],bh
   140046fb5:	or     al,BYTE PTR fs:[rax]
   140046fb8:	(bad)  
   140046fb9:	xor    al,0xd
   140046fbb:	add    BYTE PTR [rsi],cl
   140046fbd:	push   rdx
   140046fbe:	or     dh,al
   140046fc0:	or     al,ah
   140046fc2:	(bad)  
   140046fc3:	push   rax
   140046fc4:	add    DWORD PTR [rsi],eax
   140046fc6:	add    al,BYTE PTR [rax]
   140046fc8:	(bad)  
   140046fc9:	push   rdx
   140046fca:	add    dh,BYTE PTR [rax]
   140046fcc:	add    DWORD PTR [rsi],eax
   140046fce:	add    al,BYTE PTR [rax]
   140046fd0:	(bad)  
   140046fd1:	xor    al,BYTE PTR [rdx]
   140046fd3:	xor    BYTE PTR [rcx],al
   140046fd5:	add    al,0x1
   140046fd7:	add    BYTE PTR [rdx+rax*2],al
   140046fda:	add    BYTE PTR [rax],al
   140046fdc:	add    DWORD PTR [rcx+rax*1],eax
   140046fdf:	add    BYTE PTR [rdx+riz*2],al
   140046fe2:	add    BYTE PTR [rax],al
   140046fe4:	add    DWORD PTR [rcx],ecx
   140046fe6:	add    eax,DWORD PTR [rax]
   140046fe8:	or     DWORD PTR [rax+0x3],ebp
   140046feb:	add    BYTE PTR [rdx+rax*4],al
   140046fee:	add    BYTE PTR [rax],al
   140046ff0:	add    DWORD PTR [rcx],edi
   140046ff2:	adc    BYTE PTR [rax],al
   140046ff4:	cmp    DWORD PTR [rax+0x78330005],ecx
   140046ffa:	(bad)  
   140046ffb:	add    BYTE PTR [rdx],ch
   140046ffd:	push   0x741e0007
   140047002:	(bad)  
   140047003:	add    BYTE PTR [rsi],bl
   140047005:	fs adc eax,0x14341e00
   14004700b:	add    BYTE PTR [rsi],bl
   14004700d:	repnz adc al,0xf0
   140047010:	adc    ah,al
   140047012:	adc    BYTE PTR [rax+0x1],dl
   140047015:	mov    ebp,0x88bd000d
   14004701a:	adc    al,0x0
   14004701c:	test   eax,0x9a001578
   140047021:	push   0x64920016
   140047026:	(bad)  
   140047027:	add    BYTE PTR [rdx],ah
   140047029:	add    DWORD PTR [rax],esi
   14004702b:	add    BYTE PTR [rsi],dl
   14004702d:	jo     0x140047044
   14004702f:	xor    BYTE PTR [rax+rdx*2],dl
   140047032:	add    BYTE PTR [rax],al
   140047034:	and    DWORD PTR [rdx-0x745fff2],edi
   14004703a:	or     eax,0xee88000
   14004703f:	add    BYTE PTR [rbx-0x28],cl
   140047042:	sldt   WORD PTR [rdx-0x38]
   140047046:	adc    BYTE PTR [rax],al
   140047048:	cmp    DWORD PTR [rax-0x57edffef],edi
   14004704e:	adc    al,BYTE PTR [rax]
   140047050:	or     DWORD PTR [rax+0x12c00013],ebx
   140047056:	add    DWORD PTR [rax],eax
   140047058:	adc    DWORD PTR [rdi],0x70140001
   14004705e:	add    al,0x0
   140047060:	and    DWORD PTR [rax],eax
   140047062:	add    BYTE PTR [rax],al
   140047064:	rcl    BYTE PTR [rdx],0x1
   140047067:	add    BYTE PTR [rcx+0x14000117],al
   14004706d:	jo     0x140047073
   14004706f:	add    BYTE PTR [rcx],al
   140047071:	sub    DWORD PTR [rdi],ecx
   140047073:	add    BYTE PTR [rcx],ch
   140047075:	cwde   
   140047076:	or     eax,DWORD PTR [rax]
   140047078:	and    al,0x88
   14004707a:	or     al,0x0
   14004707c:	(bad)  
   14004707d:	js     0x14004708c
   14004707f:	add    BYTE PTR [rbx],bl
   140047081:	je     0x1400470a5
   140047083:	add    BYTE PTR [rbx],bl
   140047085:	and    DWORD PTR fs:[rax],eax
   140047088:	sbb    esi,DWORD PTR [rax+riz*1]
   14004708b:	add    BYTE PTR [rbx],bl
   14004708d:	add    DWORD PTR [rsi],ebx
   14004708f:	add    BYTE PTR [rax],dl
   140047091:	push   rax
   140047092:	add    BYTE PTR [rax],al
   140047094:	and    DWORD PTR [rdi],esp
   140047096:	or     al,BYTE PTR [rax]
   140047098:	(bad)  
   140047099:	call   0x1182570a4
   14004709e:	(bad)  
   14004709f:	add    BYTE PTR [rdi],cl
   1400470a1:	enter  0x8,0xa
   1400470a5:	mov    eax,0xa8050009
   1400470aa:	or     al,BYTE PTR [rax]
   1400470ac:	ror    BYTE PTR [rip+0xe0e0001],1        # 0x14e1270b3
   1400470b2:	add    DWORD PTR [rax],eax
   1400470b4:	jo     0x140047126
   1400470b6:	add    al,0x0
   1400470b8:	and    DWORD PTR [rsi],eax
   1400470ba:	add    al,BYTE PTR [rax]
   1400470bc:	(bad)  
   1400470bd:	clc    
   1400470be:	add    eax,0x10e0e00
   1400470c3:	add    BYTE PTR [rip+0xffffffff9400010e],dh        # 0xd40471d7
   1400470c9:	jo     0x1400470cf
   1400470cb:	add    BYTE PTR [rcx],ah
   1400470cd:	add    al,0x2
   1400470cf:	add    BYTE PTR [rax+rbp*2],al
   1400470d2:	(bad)  
   1400470d3:	add    BYTE PTR [rip+0x4f00010e],dh        # 0x18f0471e7
   1400470d9:	(bad)  
   1400470da:	add    DWORD PTR [rax],eax
   1400470dc:	mov    eax,0x21000470
   1400470e1:	add    BYTE PTR [rax],al
   1400470e3:	add    BYTE PTR [rip+0x4f00010e],dh        # 0x18f0471f7
   1400470e9:	(bad)  
   1400470ea:	add    DWORD PTR [rax],eax
   1400470ec:	mov    eax,0x21000470
   1400470f1:	add    BYTE PTR [rax],al
   1400470f3:	add    BYTE PTR [rsi],cl
   1400470f5:	(bad)  
   1400470f6:	add    DWORD PTR [rax],eax
   1400470f8:	xor    eax,0x9400010e
   1400470fd:	jo     0x140047103
   1400470ff:	add    BYTE PTR [rcx],ah
   140047101:	add    BYTE PTR [rax],al
   140047103:	add    al,dl
   140047105:	or     eax,0xe0e0001
   14004710a:	add    DWORD PTR [rax],eax
   14004710c:	jo     0x14004717e
   14004710e:	add    al,0x0
   140047110:	add    DWORD PTR [rdx+0x21],ebx
   140047113:	add    BYTE PTR [rdx-0x8],bl
   140047116:	(bad)  
   140047117:	add    BYTE PTR [rax+rbp*8+0x7],dl
   14004711b:	add    BYTE PTR [rsi-0x28],cl
   14004711e:	or     BYTE PTR [rax],al
   140047120:	rex.RX enter 0x9,0x3e
   140047125:	mov    eax,0xa836000a
   14004712a:	or     eax,DWORD PTR [rax]
   14004712c:	xor    DWORD PTR [rax-0x77d3fff4],ebx
   140047132:	or     eax,0xe782700
   140047137:	add    BYTE PTR [rbx],ah
   140047139:	push   0x641f000f
   14004713e:	sub    DWORD PTR [rax],eax
   140047140:	(bad)  
   140047141:	push   rsp
   140047142:	(bad)  
   140047143:	add    BYTE PTR [rdi],bl
   140047145:	xor    al,0x26
   140047147:	add    BYTE PTR [rdi],bl
   140047149:	add    DWORD PTR [rax],esp
   14004714b:	add    BYTE PTR [rax],bl
   14004714d:	lock (bad) 
   14004714f:	loopne 0x140047165
   140047151:	rcl    BYTE PTR [rdx],1
   140047153:	rcl    BYTE PTR [rax],0x70
   140047156:	add    BYTE PTR [rax],al
   140047158:	add    DWORD PTR [rdx+0x1d],edx
   14004715b:	add    BYTE PTR [rdx-0x8],dl
   14004715e:	(bad)  
   14004715f:	add    BYTE PTR [rax+rbp*8+0x7],cl
   140047163:	add    BYTE PTR [rsi-0x28],al
   140047166:	or     BYTE PTR [rax],al
   140047168:	ds enter 0x9,0x39
   14004716d:	mov    eax,0xa834000a
   140047172:	or     eax,DWORD PTR [rax]
   140047174:	(bad)  
   140047175:	cwde   
   140047176:	or     al,0x0
   140047178:	and    al,0x88
   14004717a:	or     eax,0xe781f00
   14004717f:	add    BYTE PTR [rbx],bl
   140047181:	push   0x6417000f
   140047186:	and    al,0x0
   140047188:	(bad)  
   140047189:	push   rsp
   14004718a:	and    eax,DWORD PTR [rax]
   14004718c:	(bad)  
   14004718d:	xor    al,0x22
   14004718f:	add    BYTE PTR [rdi],dl
   140047191:	add    DWORD PTR [rax],esp
   140047193:	add    BYTE PTR [rax],dl
   140047195:	jo     0x140047197
   140047197:	add    BYTE PTR [rcx],al
   140047199:	ins    BYTE PTR es:[rdi],dx
   14004719a:	sbb    eax,DWORD PTR [rax]
   14004719c:	ins    BYTE PTR es:[rdi],dx
   14004719d:	fmul   DWORD PTR [rax]
   14004719f:	add    BYTE PTR [rax+rcx*8+0x9],ah
   1400471a3:	add    BYTE PTR [rbx-0x48],cl
   1400471a6:	or     al,BYTE PTR [rax]
   1400471a8:	rex.RX test al,0xb
   1400471ab:	add    BYTE PTR [rcx-0x68],al
   1400471ae:	or     al,0x0
   1400471b0:	sub    al,0x88
   1400471b2:	or     eax,0xe782700
   1400471b7:	add    BYTE PTR [rbx],ah
   1400471b9:	push   0x741f000f
   1400471be:	(bad)  
   1400471bf:	add    BYTE PTR [rdi],bl
   1400471c1:	fs add BYTE PTR es:[rdi],bl
   1400471c5:	xor    al,0x25
   1400471c7:	add    BYTE PTR [rdi],bl
   1400471c9:	add    DWORD PTR [rax],esp
   1400471cb:	add    BYTE PTR [rax+rsi*8],dl
   1400471ce:	adc    ah,al
   1400471d0:	adc    BYTE PTR [rax+0x0],dl
   1400471d3:	add    BYTE PTR [rcx],ah
   1400471d5:	add    al,0x2
   1400471d7:	add    BYTE PTR [rsp+rax*8],al
   1400471da:	and    al,0x0
   1400471dc:	movabs al,ds:0x9800012254000121
   1400471e5:	jno    0x1400471eb
   1400471e7:	add    BYTE PTR [rcx],ah
   1400471e9:	add    BYTE PTR [rdx],al
   1400471eb:	add    BYTE PTR [rax],al
   1400471ed:	(bad)  
   1400471ee:	and    al,0x0
   1400471f0:	movabs al,ds:0x9800012254000121
   1400471f9:	jno    0x1400471ff
   1400471fb:	add    BYTE PTR [rcx],ah
   1400471fd:	add    BYTE PTR [rdx],al
   1400471ff:	add    BYTE PTR [rax],al
   140047201:	(bad)  
   140047202:	and    al,0x0
   140047204:	movabs al,ds:0x9800012254000121
   14004720d:	jno    0x140047213
   14004720f:	add    BYTE PTR [rcx],ah
   140047211:	add    BYTE PTR [rdx],al
   140047213:	add    BYTE PTR [rax],al
   140047215:	(bad)  
   140047216:	and    al,0x0
   140047218:	movabs al,ds:0x9800012254000121
   140047221:	jno    0x140047227
   140047223:	add    BYTE PTR [rcx],ah
   140047225:	add    BYTE PTR [rax],al
   140047227:	add    BYTE PTR [rax+0x54000121],ah
   14004722d:	and    al,BYTE PTR [rcx]
   14004722f:	add    BYTE PTR [rax+0x21000471],bl
   140047235:	(bad)  
   140047236:	add    al,BYTE PTR [rax]
   140047238:	(bad)  
   140047239:	call   0x166427245
   14004723e:	add    DWORD PTR [rax],eax
   140047240:	imul   ebp,DWORD PTR [rdx],0x72240001
   140047246:	add    al,0x0
   140047248:	and    DWORD PTR [rax],eax
   14004724a:	add    BYTE PTR [rax],al
   14004724c:	ds add DWORD PTR es:[rax],eax
   140047250:	imul   ebp,DWORD PTR [rdx],0x72240001
   140047256:	add    al,0x0
   140047258:	and    DWORD PTR [rax],eax
   14004725a:	add    al,BYTE PTR [rax]
   14004725c:	add    al,ch
   14004725e:	(bad)  
   14004725f:	add    BYTE PTR [rsi],bh
   140047261:	add    DWORD PTR es:[rax],eax
   140047264:	imul   ebp,DWORD PTR [rdx],0x72240001
   14004726a:	add    al,0x0
   14004726c:	add    DWORD PTR [rbx],esp
   14004726e:	add    eax,0x782300
   140047273:	add    BYTE PTR [rsi],dl
   140047275:	push   0x42040001
   14004727a:	add    BYTE PTR [rax],al
   14004727c:	add    DWORD PTR [rax],ebx
   14004727e:	or     BYTE PTR [rax],al
   140047280:	sbb    BYTE PTR [rax+0x2],bh
   140047283:	add    BYTE PTR [rdi],cl
   140047285:	push   0x340a0003
   14004728a:	or     al,BYTE PTR [rax]
   14004728c:	or     dh,BYTE PTR [rdx+0x6]
   14004728f:	jo     0x140047292
   140047291:	(bad)  
   140047292:	add    al,BYTE PTR [rax]
   140047294:	(bad)  
   140047295:	push   rdx
   140047296:	add    dh,BYTE PTR [rax]
   140047298:	add    DWORD PTR [rbx],ebx
   14004729a:	or     BYTE PTR [rax],al
   14004729c:	sbb    ebp,DWORD PTR [rax+0x74110002]
   1400472a2:	adc    eax,DWORD PTR [rax]
   1400472a4:	adc    DWORD PTR [rdx+rdx*1+0x0],esp
   1400472a8:	adc    edx,edx
   1400472aa:	or     eax,0x20421e0
   1400472af:	add    BYTE PTR [rsp+rsi*1],al
   1400472b2:	adc    BYTE PTR [rax],al
   1400472b4:	adc    BYTE PTR [rbx],cl
   1400472b6:	add    DWORD PTR [rax],eax
   1400472b8:	(bad)  
   1400472b9:	or     eax,DWORD PTR [rcx]
   1400472bb:	add    BYTE PTR [rax+0x21000472],bl
   1400472c1:	and    cl,BYTE PTR [rdx]
   1400472c3:	add    BYTE PTR [rdx],ah
   1400472c5:	cwde   
   1400472c6:	add    eax,DWORD PTR [rax]
   1400472c8:	sbb    eax,0xe000488
   1400472cd:	js     0x1400472d4
   1400472cf:	add    BYTE PTR [rcx],cl
   1400472d1:	push   0x54040006
   1400472d6:	adc    DWORD PTR [rax],eax
   1400472d8:	(bad)  
   1400472d9:	or     eax,DWORD PTR [rcx]
   1400472db:	add    BYTE PTR [rbx+rcx*1+0x1],cl
   1400472df:	add    BYTE PTR [rdx+rsi*2+0x210004],ch
   1400472e6:	add    BYTE PTR [rax],al
   1400472e8:	(bad)  
   1400472e9:	or     eax,DWORD PTR [rcx]
   1400472eb:	add    BYTE PTR [rbx+rcx*1+0x1],cl
   1400472ef:	add    BYTE PTR [rdx+rsi*2+0x210004],ch
   1400472f6:	add    BYTE PTR [rax],al
   1400472f8:	adc    BYTE PTR [rbx],cl
   1400472fa:	add    DWORD PTR [rax],eax
   1400472fc:	(bad)  
   1400472fd:	or     eax,DWORD PTR [rcx]
   1400472ff:	add    BYTE PTR [rax+0x1000472],bl
   140047305:	adc    BYTE PTR [rsi],al
   140047307:	add    BYTE PTR [rax],dl
   140047309:	fs or  eax,0xc341000
   14004730f:	add    BYTE PTR [rax],dl
   140047311:	xchg   edx,eax
   140047312:	or     al,0x70
   140047314:	add    DWORD PTR [rip+0x62150007],edx        # 0x1a2197321
   14004731a:	adc    eax,edx
   14004731c:	xadd   BYTE PTR [rip+0xb600c70],cl        # 0x14b647f93
   140047323:	push   rax
   140047324:	or     dh,BYTE PTR [rax]
   140047326:	add    BYTE PTR [rax],al
   140047328:	and    DWORD PTR [rdx],ecx
   14004732a:	add    al,0x0
   14004732c:	or     dh,ah
   14004732e:	(bad)  
   14004732f:	add    BYTE PTR [rip+0x20000ee4],al        # 0x160048219
   140047335:	xor    al,BYTE PTR [rcx]
   140047337:	add    bh,dl
   140047339:	xor    al,BYTE PTR [rcx]
   14004733b:	add    BYTE PTR [rbx+rsi*2],dl
   14004733e:	add    al,0x0
   140047340:	and    DWORD PTR [rax],eax
   140047342:	add    BYTE PTR [rax],al
   140047344:	and    BYTE PTR [rdx],dh
   140047346:	add    DWORD PTR [rax],eax
   140047348:	xlat   BYTE PTR ds:[rbx]
   140047349:	xor    al,BYTE PTR [rcx]
   14004734b:	add    BYTE PTR [rbx+rsi*2],dl
   14004734e:	add    al,0x0
   140047350:	add    DWORD PTR [rax],ebp
   140047352:	or     al,BYTE PTR [rax]
   140047354:	sub    BYTE PTR [rax+0x8],ch
   140047357:	add    BYTE PTR [rdx],bl
   140047359:	add    DWORD PTR [rip+0x11f01300],edx        # 0x151f4865f
   14004735f:	ror    BYTE PTR [rdi],1
   140047361:	ror    BYTE PTR [rip+0xb600c70],0x30        # 0x14b647fd8
   140047368:	and    DWORD PTR [rsi],edx
   14004736a:	add    al,0x0
   14004736c:	(bad)  
   14004736d:	in     al,0x13
   14004736f:	add    BYTE PTR [rax],cl
   140047371:	push   rsp
   140047372:	adc    al,0x0
   140047374:	add    BYTE PTR [rcx+rax*1],dh
   140047377:	add    BYTE PTR [rdi+0x35],ah
   14004737a:	add    DWORD PTR [rax],eax
   14004737c:	push   rax
   14004737d:	jae    0x140047383
   14004737f:	add    BYTE PTR [rcx],al
   140047381:	sbb    BYTE PTR [rdx],cl
   140047383:	add    BYTE PTR [rax],bl
   140047385:	or     al,BYTE PTR fs:[rax]
   140047388:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14004738c:	sbb    BYTE PTR [rax+rcx*1],dh
   14004738f:	add    BYTE PTR [rax],bl
   140047391:	xor    dl,BYTE PTR [rax+rsi*8]
   140047394:	adc    ah,al
   140047396:	adc    BYTE PTR [rax+0x1],dh
   140047399:	adc    eax,0x42150007
   14004739e:	adc    eax,esi
   1400473a0:	pavgb  mm1,QWORD PTR [rip+0xa600bc0]        # 0x14a647f67
   1400473a7:	push   rax
   1400473a8:	or     DWORD PTR [rax],esi
   1400473aa:	add    BYTE PTR [rax],al
   1400473ac:	and    DWORD PTR [rdx],ecx
   1400473ae:	add    al,0x0
   1400473b0:	or     dl,ah
   1400473b2:	add    al,0x0
   1400473b4:	add    eax,0xf74
   1400473b9:	add    QWORD PTR [rax],rax
   1400473bc:	sbb    BYTE PTR [rcx+0x1],cl
   1400473bf:	add    BYTE PTR [rax+0x21000473],bl
   1400473c5:	add    BYTE PTR [rax],al
   1400473c7:	add    BYTE PTR [rax],al
   1400473c9:	add    QWORD PTR [rax],rax
   1400473cc:	sbb    BYTE PTR [rcx+0x1],cl
   1400473cf:	add    BYTE PTR [rax+0x21000473],bl
   1400473d5:	add    BYTE PTR [rax+rax*1],al
   1400473d8:	add    ah,dl
   1400473da:	add    al,0x0
   1400473dc:	add    BYTE PTR [rdi+rcx*1+0x0],dh
   1400473e0:	add    BYTE PTR [rax+0x1],cl
   1400473e3:	add    BYTE PTR [rax],bl
   1400473e5:	add    QWORD PTR [r8],rax
   1400473e8:	cwde   
   1400473e9:	jae    0x1400473ef
   1400473eb:	add    BYTE PTR [rcx],al
   1400473ed:	clts   
   1400473ef:	add    BYTE PTR [rdi],cl
   1400473f1:	fs (bad) 
   1400473f3:	add    BYTE PTR [rdi],cl
   1400473f5:	xor    al,0x6
   1400473f7:	add    BYTE PTR [rdi],cl
   1400473f9:	xor    cl,BYTE PTR [rbx]
   1400473fb:	jo     0x1400473fe
   1400473fd:	or     al,BYTE PTR [rax+rax*1]
   140047400:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   140047404:	add    eax,0x1000134
   140047409:	or     al,BYTE PTR [rax+rax*1]
   14004740c:	or     dl,BYTE PTR [rax+rcx*1+0x0]
   140047410:	or     dh,BYTE PTR [rdx]
   140047412:	(bad)  
   140047413:	(bad)  
   140047414:	and    DWORD PTR [rdx],ecx
   140047416:	add    al,0x0
   140047418:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   14004741c:	add    eax,0x10000634
   140047421:	rex.WXB add QWORD PTR [r8],rax
   140047424:	pop    rax
   140047425:	rex.WXB add QWORD PTR [r8],rax
   140047428:	or     BYTE PTR [rsp+rax*1+0x0],dh
   14004742c:	and    DWORD PTR [rax],eax
   14004742e:	add    al,0x0
   140047430:	add    BYTE PTR [rdi+rax*1+0x0],dh
   140047434:	add    BYTE PTR [rsi+rax*1],dh
   140047437:	add    BYTE PTR [rax],dl
   140047439:	rex.WXB add QWORD PTR [r8],rax
   14004743c:	pop    rax
   14004743d:	rex.WXB add QWORD PTR [r8],rax
   140047440:	or     BYTE PTR [rsp+rax*1+0x0],dh
   140047444:	add    DWORD PTR [rdi],esp
   140047446:	(bad)  
   140047447:	add    BYTE PTR [rdi],ah
   140047449:	js     0x14004744b
   14004744b:	add    BYTE PTR [rax],ah
   14004744d:	push   0x32060001
   140047452:	add    dh,BYTE PTR [rax]
   140047454:	add    DWORD PTR [rcx],esi
   140047456:	(bad)  
   140047457:	add    BYTE PTR [rcx],dh
   140047459:	test   al,0x2
   14004745b:	add    BYTE PTR [rbx],ch
   14004745d:	cwde   
   14004745e:	add    eax,DWORD PTR [rax]
   140047460:	and    eax,0x1f000488
   140047465:	js     0x14004746c
   140047467:	add    BYTE PTR [rdi],cl
   140047469:	str    WORD PTR fs:[rdi]
   14004746d:	xor    al,0xe
   14004746f:	add    BYTE PTR [rdi],cl
   140047471:	mov    dl,0xb
   140047473:	jo     0x140047476
   140047475:	xor    al,0x9
   140047477:	add    BYTE PTR [rax+rbx*4],dh
   14004747a:	add    BYTE PTR [rax],al
   14004747c:	and    DWORD PTR [rax+0x781b0001],ecx
   140047482:	add    al,BYTE PTR [rax]
   140047484:	(bad)  
   140047485:	push   0xffffffff82040003
   14004748a:	add    BYTE PTR [rax],al
   14004748c:	add    DWORD PTR [rbx],ebx
   14004748e:	add    eax,0x781b00
   140047493:	add    BYTE PTR [rbx],dl
   140047495:	push   0x42040001
   14004749a:	add    BYTE PTR [rax],al
   14004749c:	add    DWORD PTR [rsi],eax
   14004749e:	add    al,BYTE PTR [rax]
   1400474a0:	(bad)  
   1400474a1:	push   rdx
   1400474a2:	add    dh,BYTE PTR [rax]
   1400474a4:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b40974ac
   1400474aa:	or     BYTE PTR [rax],al
   1400474ac:	movabs al,ds:0x9c000143bc000143
   1400474b5:	je     0x1400474bb
   1400474b7:	add    BYTE PTR [rcx],ah
   1400474b9:	add    BYTE PTR [rax],al
   1400474bb:	add    BYTE PTR [rax-0x43fffebd],ah
   1400474c1:	rex.XB add DWORD PTR [r8],eax
   1400474c4:	pushf  
   1400474c5:	je     0x1400474cb
   1400474c7:	add    BYTE PTR [rcx],al
   1400474c9:	(bad)  
   1400474ca:	add    al,BYTE PTR [rax]
   1400474cc:	(bad)  
   1400474cd:	push   rdx
   1400474ce:	add    dh,BYTE PTR [rax]
   1400474d0:	add    DWORD PTR [rsi],eax
   1400474d2:	add    al,BYTE PTR [rax]
   1400474d4:	(bad)  
   1400474d5:	push   rdx
   1400474d6:	add    dh,BYTE PTR [rax]
   1400474d8:	add    DWORD PTR [rsi],eax
   1400474da:	add    al,BYTE PTR [rax]
   1400474dc:	(bad)  
   1400474dd:	push   rdx
   1400474de:	add    dh,BYTE PTR [rax]
   1400474e0:	add    DWORD PTR [rcx],esp
   1400474e2:	or     BYTE PTR [rax],al
   1400474e4:	and    DWORD PTR [rax+0x3],edi
   1400474e7:	add    BYTE PTR [rax+rbp*2],bl
   1400474ea:	add    al,0x0
   1400474ec:	or     eax,0xd000c34
   1400474f1:	xchg   edx,eax
   1400474f2:	(bad)  
   1400474f3:	push   rax
   1400474f4:	add    DWORD PTR [rsi],esi
   1400474f6:	adc    BYTE PTR [rax],al
   1400474f8:	mov    BYTE PTR ss:[rip+0x16782c00],dl        # 0x1567ca0ff
   1400474ff:	add    BYTE PTR [rax],ch
   140047501:	push   0x1210017
   140047506:	xor    DWORD PTR [rax],eax
   140047508:	adc    esi,eax
   14004750a:	adc    eax,esp
   14004750c:	(bad)  
   14004750e:	or     eax,0xa700bc0
   140047513:	(bad)  
   140047514:	or     DWORD PTR [rax],esi
   140047516:	or     BYTE PTR [rax+0x21],dl
   140047519:	rex.R (bad) 
   14004751b:	add    BYTE PTR [rax+rdi*8+0xe],al
   14004751f:	add    BYTE PTR [rbx],bh
   140047521:	call   0x118367535
   140047526:	adc    BYTE PTR [rax],al
   140047528:	and    al,0xc8
   14004752a:	adc    DWORD PTR [rax],eax
   14004752c:	sbb    edi,DWORD PTR [rax-0x57edffee]
   140047532:	adc    eax,DWORD PTR [rax]
   140047534:	or     DWORD PTR [rax+0x61a00014],ebx
   14004753a:	add    DWORD PTR [rax],eax
   14004753c:	movabs al,ds:0x21000474f4000162
   140047545:	add    BYTE PTR [rax],al
   140047547:	add    BYTE PTR [rax-0x5ffffe9f],ah
   14004754d:	(bad)  
   14004754f:	add    ah,dh
   140047551:	je     0x140047557
   140047553:	add    BYTE PTR [rcx],ah
   140047555:	add    BYTE PTR [rsi],cl
   140047557:	add    BYTE PTR [rax],al
   140047559:	clc    
   14004755a:	(bad)  
   14004755b:	add    BYTE PTR [rax],al
   14004755d:	call   0x118047571
   140047562:	adc    BYTE PTR [rax],al
   140047564:	add    al,cl
   140047566:	adc    DWORD PTR [rax],eax
   140047568:	add    BYTE PTR [rax-0x57ffffee],bh
   14004756e:	adc    eax,DWORD PTR [rax]
   140047570:	add    BYTE PTR [rax+0x61a00014],bl
   140047576:	add    DWORD PTR [rax],eax
   140047578:	movabs al,ds:0x1000474f4000162
   140047581:	and    DWORD PTR [rdx],ecx
   140047583:	add    BYTE PTR [rcx],ah
   140047585:	xor    al,0x17
   140047587:	add    BYTE PTR [rcx],ah
   140047589:	mov    dl,0x1a
   14004758b:	lock sbb al,ah
   14004758e:	(bad)  
   14004758f:	rcl    BYTE PTR [rax+rax*8],1
   140047592:	adc    dh,BYTE PTR [rax+0x11]
   140047595:	(bad)  
   140047596:	adc    BYTE PTR [rax+0x1],dl
   140047599:	(bad)  
   14004759a:	add    al,BYTE PTR [rax]
   14004759c:	(bad)  
   14004759d:	xor    al,BYTE PTR [rdx]
   14004759f:	xor    BYTE PTR [rcx],al
   1400475a1:	adc    ecx,DWORD PTR [rax]
   1400475a3:	add    BYTE PTR [rbx],dl
   1400475a5:	or     eax,DWORD PTR fs:[rax]
   1400475a8:	adc    edx,DWORD PTR [rdx+rcx*1+0x0]
   1400475ac:	adc    esi,DWORD PTR [rdx]
   1400475ae:	(bad)  
   1400475b0:	or     eax,0x21700be0
   1400475b5:	add    eax,0x34050002
   1400475ba:	or     BYTE PTR [rax],al
   1400475bc:	xor    BYTE PTR [rsi+0x1],cl
   1400475bf:	add    BYTE PTR [rbp+0x4e],al
   1400475c2:	add    DWORD PTR [rax],eax
   1400475c4:	movabs al,ds:0x500020521000475
   1400475cd:	(bad)  
   1400475ce:	or     DWORD PTR [rax],eax
   1400475d0:	rex.RB
   1400475d1:	rex.WRX add QWORD PTR [rax],r8
   1400475d4:	rex.WRX add QWORD PTR [eax],r8
   1400475d8:	mov    ah,0x75
   1400475da:	add    al,0x0
   1400475dc:	and    DWORD PTR [rax],eax
   1400475de:	add    BYTE PTR [rax],al
   1400475e0:	rex.RB
   1400475e1:	rex.WRX add QWORD PTR [rax],r8
   1400475e4:	rex.WRX add QWORD PTR [eax],r8
   1400475e8:	mov    ah,0x75
   1400475ea:	add    al,0x0
   1400475ec:	and    DWORD PTR [rax],eax
   1400475ee:	add    BYTE PTR [rax],al
   1400475f0:	xor    BYTE PTR [rsi+0x1],cl
   1400475f3:	add    BYTE PTR [rbp+0x4e],al
   1400475f6:	add    DWORD PTR [rax],eax
   1400475f8:	movabs al,ds:0x1600041601000475
   140047601:	push   0x12060000
   140047606:	add    dh,BYTE PTR [rax]
   140047608:	add    DWORD PTR [rbx+0x16],esp
   14004760b:	add    BYTE PTR [rbx-0x8],ah
   14004760e:	(bad)  
   14004760f:	add    BYTE PTR [rbx],bh
   140047611:	call   0x11837761e
   140047616:	or     DWORD PTR [rax],eax
   140047618:	sub    ecx,eax
   14004761a:	or     al,BYTE PTR [rax]
   14004761c:	es mov eax,0xa821000b
   140047622:	or     al,0x0
   140047624:	sbb    al,0x98
   140047626:	or     eax,0xe881700
   14004762b:	add    BYTE PTR [rdx],dl
   14004762d:	js     0x14004763e
   14004762f:	add    BYTE PTR [rsi],cl
   140047631:	push   0x10a0010
   140047636:	and    eax,DWORD PTR [rax]
   140047638:	add    DWORD PTR [rbx+0x1f],edi
   14004763b:	add    BYTE PTR [rbx-0x8],bh
   14004763e:	adc    eax,DWORD PTR [rax]
   140047640:	jae    0x14004762a
   140047642:	adc    al,0x0
   140047644:	imul   ebx,eax,0x15
   140047647:	add    BYTE PTR [rbx-0x38],ah
   14004764a:	(bad)  
   14004764b:	add    BYTE PTR [rbx-0x48],bl
   14004764e:	(bad)  
   14004764f:	add    BYTE PTR [rsi-0x58],dl
   140047652:	sbb    BYTE PTR [rax],al
   140047654:	rex.X cwde 
   140047656:	sbb    DWORD PTR [rax],eax
   140047658:	cmp    eax,0x38001a88
   14004765d:	js     0x14004767a
   14004765f:	add    BYTE PTR [rax+rbp*2],dh
   140047662:	sbb    al,0x0
   140047664:	and    al,ah
   140047666:	add    BYTE PTR [r10],spl
   140047669:	je     0x1400476ab
   14004766b:	add    BYTE PTR [rdx],ah
   14004766d:	xor    al,0x3f
   14004766f:	add    BYTE PTR [rdx],ah
   140047671:	add    DWORD PTR [rdx],edi
   140047673:	add    BYTE PTR [rax+rsi*8],dl
   140047676:	adc    ah,al
   140047678:	adc    BYTE PTR [rax+0x0],dl
   14004767b:	add    BYTE PTR [rcx],ah
   14004767d:	or     BYTE PTR [rdx],al
   14004767f:	add    BYTE PTR [rax],cl
   140047681:	fs add BYTE PTR ds:[rax],dl
   140047685:	rex.WRXB add QWORD PTR [r8],r8
   140047688:	int3   
   140047689:	push   rbx
   14004768a:	add    DWORD PTR [rax],eax
   14004768c:	cmp    BYTE PTR [rsi+0x4],dh
   14004768f:	add    BYTE PTR [rcx],ah
   140047691:	add    BYTE PTR [rax],al
   140047693:	add    BYTE PTR [rax],dl
   140047695:	rex.WRXB add QWORD PTR [r8],r8
   140047698:	int3   
   140047699:	push   rbx
   14004769a:	add    DWORD PTR [rax],eax
   14004769c:	cmp    BYTE PTR [rsi+0x4],dh
   14004769f:	add    BYTE PTR [rcx],ah
   1400476a1:	add    BYTE PTR [rdx],al
   1400476a3:	add    BYTE PTR [rax],al
   1400476a5:	fs add BYTE PTR ds:[rax],dl
   1400476a9:	rex.WRXB add QWORD PTR [r8],r8
   1400476ac:	int3   
   1400476ad:	push   rbx
   1400476ae:	add    DWORD PTR [rax],eax
   1400476b0:	cmp    BYTE PTR [rsi+0x4],dh
   1400476b3:	add    BYTE PTR [rcx],al
   1400476b5:	adc    al,BYTE PTR [rdi]
   1400476b7:	add    BYTE PTR [rdx],dl
   1400476b9:	add    DWORD PTR [rsi],edx
   1400476bb:	add    BYTE PTR [rbx],cl
   1400476bd:	lock or eax,esp
   1400476c0:	(bad)  
   1400476c1:	rol    BYTE PTR [rip+0x500460],0x0        # 0x140547b28
   1400476c8:	and    DWORD PTR [rsi],edx
   1400476ca:	or     al,BYTE PTR [rax]
   1400476cc:	(bad)  
   1400476cd:	js     0x1400476d7
   1400476cf:	add    BYTE PTR [rcx],dl
   1400476d1:	push   0xffffffffd40c0009
   1400476d6:	adc    al,0x0
   1400476d8:	or     BYTE PTR [rbp+rdx*1+0x0],dh
   1400476dc:	add    al,0x34
   1400476de:	sbb    eax,0x154b000
   1400476e3:	add    bh,ah
   1400476e5:	push   rsp
   1400476e6:	add    DWORD PTR [rax],eax
   1400476e8:	mov    ah,0x76
   1400476ea:	add    al,0x0
   1400476ec:	and    DWORD PTR [rax],eax
   1400476ee:	add    BYTE PTR [rax],al
   1400476f0:	mov    al,0x54
   1400476f2:	add    DWORD PTR [rax],eax
   1400476f4:	out    0x54,eax
   1400476f6:	add    DWORD PTR [rax],eax
   1400476f8:	mov    ah,0x76
   1400476fa:	add    al,0x0
   1400476fc:	add    DWORD PTR [rax+rcx*1],edx
   1400476ff:	add    BYTE PTR [rsp+riz*2],dl
   140047702:	(bad)  
   140047703:	add    BYTE PTR [rsp+rdx*2],dl
   140047706:	or     eax,0xc341400
   14004770b:	add    BYTE PTR [rdx+rdx*4],dl
   14004770e:	adc    BYTE PTR [rax+0x1],dh
   140047711:	adc    BYTE PTR [rax],cl
   140047713:	add    BYTE PTR [rax],dl
   140047715:	xor    al,0xd
   140047717:	add    BYTE PTR [rax],dl
   140047719:	xor    cl,BYTE PTR [rax+rsi*8]
   14004771c:	or     ah,al
   14004771e:	or     BYTE PTR [rax+0x7],dh
   140047721:	(bad)  
   140047722:	(bad)  
   140047723:	push   rax
   140047724:	and    DWORD PTR [rdx],edx
   140047726:	add    al,0x0
   140047728:	adc    dl,ah
   14004772a:	or     eax,DWORD PTR [rax]
   14004772c:	add    eax,0xc0000ac4
   140047731:	imul   eax,DWORD PTR [rcx],0x0
   140047734:	lods   eax,DWORD PTR ds:[rsi]
   140047735:	ins    BYTE PTR es:[rdi],dx
   140047736:	add    DWORD PTR [rax],eax
   140047738:	adc    BYTE PTR [rdi+0x4],dh
   14004773b:	add    BYTE PTR [rcx],ah
   14004773d:	add    BYTE PTR [rax],al
   14004773f:	add    al,al
   140047741:	imul   eax,DWORD PTR [rcx],0x0
   140047744:	lods   eax,DWORD PTR ds:[rsi]
   140047745:	ins    BYTE PTR es:[rdi],dx
   140047746:	add    DWORD PTR [rax],eax
   140047748:	adc    BYTE PTR [rdi+0x4],dh
   14004774b:	add    BYTE PTR [rcx],al
   14004774d:	(bad)  
   14004774e:	add    al,BYTE PTR [rax]
   140047750:	(bad)  
   140047751:	xor    al,BYTE PTR [rdx]
   140047753:	xor    BYTE PTR [rcx],al
   140047755:	sbb    al,0xc
   140047757:	add    BYTE PTR [rsp+riz*2],bl
   14004775a:	adc    al,0x0
   14004775c:	sbb    al,0x54
   14004775e:	adc    eax,DWORD PTR [rax]
   140047760:	sbb    al,0x34
   140047762:	adc    al,BYTE PTR [rax]
   140047764:	sbb    al,0xb2
   140047766:	sbb    al,dh
   140047768:	(bad)  
   140047769:	loopne 0x14004777f
   14004776b:	rcl    BYTE PTR [rdx],1
   14004776d:	rcl    BYTE PTR [rax],0x70
   140047770:	add    DWORD PTR [rdi],ecx
   140047772:	(bad)  
   140047773:	add    BYTE PTR [rdi],cl
   140047775:	fs (bad) 
   140047777:	add    BYTE PTR [rdi],cl
   140047779:	xor    al,0x6
   14004777b:	add    BYTE PTR [rdi],cl
   14004777d:	xor    cl,BYTE PTR [rbx]
   14004777f:	jo     0x140047782
   140047781:	jb     0x14004778f
   140047783:	add    BYTE PTR [rdx-0x3c],dh
   140047786:	adc    BYTE PTR [rax],al
   140047788:	sbb    edx,DWORD PTR [rbx+rdx*1+0x0]
   14004778c:	sbb    esi,DWORD PTR [rdx+rdx*1]
   14004778f:	add    BYTE PTR [rbx],bl
   140047791:	xchg   edx,eax
   140047792:	(bad)  
   140047793:	lock adc eax,0x11d013e0
   140047799:	jo     0x1400477ab
   14004779b:	(bad)  
   14004779c:	add    DWORD PTR [rsi],edx
   14004779e:	or     BYTE PTR [rax],al
   1400477a0:	(bad)  
   1400477a1:	xor    dl,BYTE PTR [rdx]
   1400477a3:	lock adc al,ah
   1400477a6:	(bad)  
   1400477a7:	ror    BYTE PTR [rax+rsi*2],0xb
   1400477ab:	(bad)  
   1400477ac:	or     dl,BYTE PTR [rax+0x9]
   1400477af:	xor    BYTE PTR [rcx],ah
   1400477b1:	add    eax,0xd4050002
   1400477b6:	(bad)  
   1400477b8:	xor    BYTE PTR [rcx+rax*1+0x0],dh
   1400477bc:	mov    esi,DWORD PTR [rbp+0x1]
   1400477bf:	add    BYTE PTR [rdi+rsi*2+0x210004],bl
   1400477c6:	add    BYTE PTR [rax],al
   1400477c8:	xor    BYTE PTR [rcx+rax*1+0x0],dh
   1400477cc:	mov    esi,DWORD PTR [rbp+0x1]
   1400477cf:	add    BYTE PTR [rdi+rsi*2+0x210004],bl
   1400477d6:	add    al,BYTE PTR [rax]
   1400477d8:	add    ah,dl
   1400477da:	(bad)  
   1400477dc:	xor    BYTE PTR [rcx+rax*1+0x0],dh
   1400477e0:	mov    esi,DWORD PTR [rbp+0x1]
   1400477e3:	add    BYTE PTR [rdi+rsi*2+0x31010004],bl
   1400477ea:	(bad)  
   1400477eb:	add    BYTE PTR [rcx],dh
   1400477ed:	test   al,0x2
   1400477ef:	add    BYTE PTR [rbx],ch
   1400477f1:	cwde   
   1400477f2:	add    eax,DWORD PTR [rax]
   1400477f4:	and    eax,0x1f000488
   1400477f9:	js     0x140047800
   1400477fb:	add    BYTE PTR [rdi],cl
   1400477fd:	str    WORD PTR fs:[rdi]
   140047801:	xor    al,0xe
   140047803:	add    BYTE PTR [rdi],cl
   140047805:	mov    dl,0xb
   140047807:	jo     0x14004780a
   140047809:	xor    al,0x9
   14004780b:	add    BYTE PTR [rax+rbx*4],dh
   14004780e:	add    BYTE PTR [rax],al
   140047810:	and    DWORD PTR [rax+0x781b0001],ecx
   140047816:	add    al,BYTE PTR [rax]
   140047818:	(bad)  
   140047819:	push   0xffffffff82040003
   14004781e:	add    BYTE PTR [rax],al
   140047820:	add    DWORD PTR [rcx],edx
   140047822:	add    eax,DWORD PTR [rax]
   140047824:	adc    edx,eax
   140047826:	or     eax,0x500c60
   14004782b:	add    BYTE PTR [rcx],ah
   14004782d:	or     al,BYTE PTR [rax+rax*1]
   140047830:	or     dh,BYTE PTR [rsp+rcx*1+0x0]
   140047834:	add    al,0x34
   140047836:	adc    BYTE PTR [rax],al
   140047838:	xor    BYTE PTR [rsi+0x1],0x0
   14004783c:	movabs al,ds:0x2100047820000176
   140047845:	add    BYTE PTR [rax],al
   140047847:	add    BYTE PTR [rax-0x5ffffe8a],al
   14004784d:	jbe    0x140047850
   14004784f:	add    BYTE PTR [rax],ah
   140047851:	js     0x140047857
   140047853:	add    BYTE PTR [rcx],al
   140047855:	(bad)  
   140047856:	or     al,BYTE PTR [rax]
   140047858:	(bad)  
   140047859:	xor    al,0xe
   14004785b:	add    BYTE PTR [rsi],bl
   14004785d:	push   rdx
   14004785e:	sbb    dh,al
   140047860:	sbb    al,ah
   140047862:	(bad)  
   140047863:	rcl    BYTE PTR [rax+rax*8],1
   140047866:	adc    dh,BYTE PTR [rax+0x11]
   140047869:	(bad)  
   14004786a:	adc    BYTE PTR [rax+0x1],dl
   14004786d:	clts   
   14004786f:	add    BYTE PTR [rdi],cl
   140047871:	fs (bad) 
   140047873:	add    BYTE PTR [rdi],cl
   140047875:	xor    al,0x6
   140047877:	add    BYTE PTR [rdi],cl
   140047879:	xor    cl,BYTE PTR [rbx]
   14004787b:	jo     0x14004787e
   14004787d:	and    BYTE PTR [rip+0x7782000],al        # 0x1477c9883
   140047883:	add    BYTE PTR [rcx],cl
   140047885:	add    DWORD PTR [rdx],edx
   140047887:	add    BYTE PTR [rdx],al
   140047889:	xor    BYTE PTR [rax],al
   14004788b:	add    BYTE PTR [rcx],ah
   14004788d:	xor    DWORD PTR [rax+rax*1],ecx
   140047890:	xor    eax,ecx
   140047892:	add    al,BYTE PTR [rax]
   140047894:	sub    BYTE PTR [rax-0x57ddfffd],bh
   14004789a:	add    al,0x0
   14004789c:	adc    al,0x98
   14004789e:	add    eax,0x6880e00
   1400478a3:	add    BYTE PTR [rax],cl
   1400478a5:	push   0x7b000008
   1400478aa:	add    DWORD PTR [rax],eax
   1400478ac:	rex.WRX jnp 0x1400478b0
   1400478af:	add    BYTE PTR [rax+rdi*2+0x4],bh
   1400478b3:	add    BYTE PTR [rcx],ah
   1400478b5:	add    BYTE PTR [rax],al
   1400478b7:	add    BYTE PTR [rax],al
   1400478b9:	jnp    0x1400478bc
   1400478bb:	add    BYTE PTR [rsi+0x7b],cl
   1400478be:	add    DWORD PTR [rax],eax
   1400478c0:	jl     0x14004793a
   1400478c2:	add    al,0x0
   1400478c4:	add    DWORD PTR [rsp+rax*1],ebx
   1400478c7:	add    BYTE PTR [rax+rbp*2],bl
   1400478ca:	add    al,BYTE PTR [rax]
   1400478cc:	(bad)  
   1400478cd:	push   rdx
   1400478ce:	add    dh,BYTE PTR [rax]
   1400478d0:	add    DWORD PTR [rbx],edx
   1400478d2:	or     BYTE PTR [rax],al
   1400478d4:	adc    esi,DWORD PTR [rax+rdx*1]
   1400478d7:	add    BYTE PTR [rbx],dl
   1400478d9:	jb     0x1400478e7
   1400478db:	loopne 0x1400478e7
   1400478dd:	ror    BYTE PTR [rax],1
   1400478df:	jo     0x1400478e8
   1400478e1:	(bad)  
   1400478e2:	(bad)  
   1400478e3:	push   rax
   1400478e4:	and    DWORD PTR [rip+0xfffffffff40d0004],ecx        # 0x1341178ee
   1400478ea:	sldt   WORD PTR [rip+0x30000ec4]        # 0x1700487b5
   1400478f1:	jle    0x1400478f4
   1400478f3:	add    BYTE PTR [rdi+0x7f],dl
   1400478f6:	add    DWORD PTR [rax],eax
   1400478f8:	sar    BYTE PTR [rax+0x4],1
   1400478fb:	add    BYTE PTR [rcx],al
   1400478fd:	sbb    DWORD PTR [rip+0xffffffff96011900],eax        # 0xd6059203
   140047903:	add    BYTE PTR [rdx],cl
   140047905:	loopne 0x14004790f
   140047907:	rol    BYTE PTR [rsi],1
   140047909:	push   rax
   14004790a:	add    BYTE PTR [rax],al
   14004790c:	and    DWORD PTR [rax+0x16],edi
   14004790f:	add    BYTE PTR [rax-0x48],bh
   140047912:	add    BYTE PTR [rdi-0x58],r13b
   140047916:	add    BYTE PTR [r14-0x68],r12b
   14004791a:	rex.RX add BYTE PTR [rax-0x78],r9b
   14004791e:	rex.RXB add BYTE PTR [r15],r15b
   140047921:	js     0x14004796b
   140047923:	add    BYTE PTR [rdi],dh
   140047925:	push   0xfffffffff4280049
   14004792a:	xchg   esp,eax
   14004792b:	add    BYTE PTR [rax],ah
   14004792d:	(bad)  
   14004792e:	xchg   ebp,eax
   14004792f:	add    BYTE PTR [rax],bl
   140047931:	je     0x1400478d0
   140047933:	add    BYTE PTR [rax],dl
   140047935:	fs pushf 
   140047937:	add    BYTE PTR [rax],cl
   140047939:	xor    al,0x9b
   14004793b:	add    BYTE PTR [rax],ah
   14004793d:	add    DWORD PTR [rcx],0x1832700
   140047943:	add    ah,bh
   140047945:	js     0x14004794b
   140047947:	add    BYTE PTR [rcx],ah
   140047949:	add    BYTE PTR [rax],al
   14004794b:	add    BYTE PTR [rax],ah
   14004794d:	add    DWORD PTR [rcx],0x1832700
   140047953:	add    ah,bh
   140047955:	js     0x14004795b
   140047957:	add    BYTE PTR [rcx],al
   140047959:	(bad)  
   14004795a:	add    al,BYTE PTR [rax]
   14004795c:	(bad)  
   14004795d:	xor    al,BYTE PTR [rdx]
   14004795f:	xor    BYTE PTR [rcx],al
   140047961:	(bad)  
   140047962:	add    al,BYTE PTR [rax]
   140047964:	(bad)  
   140047965:	xor    al,BYTE PTR [rdx]
   140047967:	xor    BYTE PTR [rcx],al
   140047969:	add    al,0x1
   14004796b:	add    BYTE PTR [rdx+rax*2],al
   14004796e:	add    BYTE PTR [rax],al
   140047970:	add    DWORD PTR [rdx],ecx
   140047972:	add    al,0x0
   140047974:	or     ah,BYTE PTR [rbp+rcx*1+0x0]
   140047978:	or     dl,BYTE PTR [rdx+0x5217006]
   14004797e:	add    al,BYTE PTR [rax]
   140047980:	add    eax,0x40000c34
   140047985:	lea    eax,[rcx]
   140047987:	add    BYTE PTR [rsi+0x7000018d],dl
   14004798d:	jns    0x140047993
   14004798f:	add    BYTE PTR [rcx],ah
   140047991:	add    BYTE PTR [rax],al
   140047993:	add    BYTE PTR [rax-0x73],al
   140047996:	add    DWORD PTR [rax],eax
   140047998:	xchg   esi,eax
   140047999:	lea    eax,[rcx]
   14004799b:	add    BYTE PTR [rax+0x79],dh
   14004799e:	add    al,0x0
   1400479a0:	add    DWORD PTR [rbx],esp
   1400479a2:	verr   WORD PTR [rbx]
   1400479a5:	push   0x641f0008
   1400479aa:	sbb    al,BYTE PTR [rax]
   1400479ac:	(bad)  
   1400479ad:	push   rsp
   1400479ae:	sbb    DWORD PTR [rax],eax
   1400479b0:	(bad)  
   1400479b1:	xor    al,0x18
   1400479b3:	add    BYTE PTR [rdi],bl
   1400479b5:	add    DWORD PTR [rdx],edx
   1400479b7:	add    BYTE PTR [rax],bl
   1400479b9:	lock (bad) 
   1400479bb:	loopne 0x1400479d1
   1400479bd:	rcl    BYTE PTR [rdx],1
   1400479bf:	rcl    BYTE PTR [rax],0x70
   1400479c2:	add    BYTE PTR [rax],al
   1400479c4:	add    DWORD PTR [rsi],ebx
   1400479c6:	or     eax,0x8681e00
   1400479cb:	add    BYTE PTR [rdx],bl
   1400479cd:	push   rsp
   1400479ce:	sbb    al,BYTE PTR [rax]
   1400479d0:	sbb    dh,BYTE PTR [rcx+rbx*1]
   1400479d3:	add    BYTE PTR [rdx],bl
   1400479d5:	add    DWORD PTR [rdx],edx
   1400479d7:	add    BYTE PTR [rbx],dl
   1400479d9:	lock adc eax,esp
   1400479dc:	xadd   BYTE PTR [rip+0x600c70],cl        # 0x140648653
   1400479e3:	add    BYTE PTR [rcx],ah
   1400479e5:	add    al,0x2
   1400479e7:	add    BYTE PTR [rsp+rdx*8],al
   1400479ea:	sbb    BYTE PTR [rax],al
   1400479ec:	rcl    BYTE PTR [rbx-0x6c0bffff],1
   1400479f2:	add    DWORD PTR [rax],eax
   1400479f4:	(bad)  
   1400479f5:	jns    0x1400479fb
   1400479f7:	add    BYTE PTR [rcx],ah
   1400479f9:	add    BYTE PTR [rax],al
   1400479fb:	add    al,dl
   1400479fd:	xchg   ebx,eax
   1400479fe:	add    DWORD PTR [rax],eax
   140047a00:	hlt    
   140047a01:	xchg   ebx,eax
   140047a02:	add    DWORD PTR [rax],eax
   140047a04:	(bad)  
   140047a05:	jns    0x140047a0b
   140047a07:	add    BYTE PTR [rcx],al
   140047a09:	(bad)  
   140047a0a:	(bad)  
   140047a0b:	add    BYTE PTR [rdi],dl
   140047a0d:	push   rsp
   140047a0e:	rex.WXB add BYTE PTR [r15],dl
   140047a11:	xor    al,0x49
   140047a13:	add    BYTE PTR [rdi],dl
   140047a15:	add    DWORD PTR [rsi+0x0],eax
   140047a18:	adc    BYTE PTR [rax+0x0],ah
   140047a1b:	add    BYTE PTR [rcx],ah
   140047a1d:	or     BYTE PTR [rdx],al
   140047a1f:	add    BYTE PTR [rax],cl
   140047a21:	je     0x140047a6b
   140047a23:	add    BYTE PTR [rax],ah
   140047a25:	mov    es,WORD PTR [rcx]
   140047a27:	add    BYTE PTR [rdx+0x800018e],ah
   140047a2d:	jp     0x140047a33
   140047a2f:	add    BYTE PTR [rcx],ah
   140047a31:	add    BYTE PTR [rax],al
   140047a33:	add    BYTE PTR [rax],ah
   140047a35:	mov    es,WORD PTR [rcx]
   140047a37:	add    BYTE PTR [rdx+0x800018e],ah
   140047a3d:	jp     0x140047a43
   140047a3f:	add    BYTE PTR [rcx],al
   140047a41:	clts   
   140047a43:	add    BYTE PTR [rdi],cl
   140047a45:	fs (bad) 
   140047a47:	add    BYTE PTR [rdi],cl
   140047a49:	xor    al,0x6
   140047a4b:	add    BYTE PTR [rdi],cl
   140047a4d:	xor    cl,BYTE PTR [rbx]
   140047a4f:	jo     0x140047a52
   140047a51:	(bad)  
   140047a52:	add    al,BYTE PTR [rax]
   140047a54:	(bad)  
   140047a55:	xor    al,BYTE PTR [rdx]
   140047a57:	xor    BYTE PTR [rcx],al
   140047a59:	(bad)  
   140047a5a:	add    al,BYTE PTR [rax]
   140047a5c:	(bad)  
   140047a5d:	xor    al,BYTE PTR [rdx]
   140047a5f:	xor    BYTE PTR [rcx],al
   140047a61:	clts   
   140047a63:	add    BYTE PTR [rdi],cl
   140047a65:	fs (bad) 
   140047a67:	add    BYTE PTR [rdi],cl
   140047a69:	xor    al,0x6
   140047a6b:	add    BYTE PTR [rdi],cl
   140047a6d:	xor    cl,BYTE PTR [rbx]
   140047a6f:	jo     0x140047a72
   140047a71:	or     al,BYTE PTR [rax+rax*1]
   140047a74:	or     dl,BYTE PTR [rsi+rcx*1+0x0]
   140047a78:	or     dl,BYTE PTR [rdx+0x5216006]
   140047a7e:	add    al,BYTE PTR [rax]
   140047a80:	add    eax,0x30000c34
   140047a85:	cdq    
   140047a86:	add    DWORD PTR [rax],eax
   140047a88:	push   rbp
   140047a89:	cdq    
   140047a8a:	add    DWORD PTR [rax],eax
   140047a8c:	jo     0x140047b08
   140047a8e:	add    al,0x0
   140047a90:	and    DWORD PTR [rdx],ecx
   140047a92:	add    al,0x0
   140047a94:	or     ch,BYTE PTR [rax+0x4]
   140047a97:	add    BYTE PTR [rip+0x55000d74],al        # 0x195048811
   140047a9d:	cdq    
   140047a9e:	add    DWORD PTR [rax],eax
   140047aa0:	fs cdq 
   140047aa2:	add    DWORD PTR [rax],eax
   140047aa4:	jl     0x140047b20
   140047aa6:	add    al,0x0
   140047aa8:	and    DWORD PTR [rax],eax
   140047aaa:	add    BYTE PTR [rax],al
   140047aac:	push   rbp
   140047aad:	cdq    
   140047aae:	add    DWORD PTR [rax],eax
   140047ab0:	fs cdq 
   140047ab2:	add    DWORD PTR [rax],eax
   140047ab4:	jl     0x140047b30
   140047ab6:	add    al,0x0
   140047ab8:	and    DWORD PTR [rax],eax
   140047aba:	add    al,BYTE PTR [rax]
   140047abc:	add    BYTE PTR [rsp+rcx*1],dh
   140047abf:	add    BYTE PTR [rax],dh
   140047ac1:	cdq    
   140047ac2:	add    DWORD PTR [rax],eax
   140047ac4:	push   rbp
   140047ac5:	cdq    
   140047ac6:	add    DWORD PTR [rax],eax
   140047ac8:	jo     0x140047b44
   140047aca:	add    al,0x0
   140047acc:	and    DWORD PTR [rax],eax
   140047ace:	add    BYTE PTR [rax],al
   140047ad0:	xor    BYTE PTR [rcx-0x66aaffff],bl
   140047ad6:	add    DWORD PTR [rax],eax
   140047ad8:	jo     0x140047b54
   140047ada:	add    al,0x0
   140047adc:	add    DWORD PTR [rsi],eax
   140047ade:	add    al,BYTE PTR [rax]
   140047ae0:	(bad)  
   140047ae1:	xor    al,BYTE PTR [rdx]
   140047ae3:	xor    BYTE PTR [rcx],al
   140047ae5:	fs (bad) 
   140047ae7:	add    BYTE PTR [rax+rbp*2+0x3],ah
   140047aeb:	add    BYTE PTR [rdi-0x1c],bl
   140047aee:	ltr    WORD PTR [rdx-0x3c]
   140047af2:	(bad)  
   140047af3:	add    BYTE PTR [rsi+0x54],cl
   140047af6:	or     eax,0xc344900
   140047afb:	add    BYTE PTR [rcx],cl
   140047afd:	jb     0x140047b04
   140047aff:	lock add esi,DWORD PTR [rax+0x2]
   140047b03:	(bad)  
   140047b04:	add    DWORD PTR [rcx+rax*1],eax
   140047b07:	add    BYTE PTR [rdx+rax*2],al
   140047b0a:	add    BYTE PTR [rax],al
   140047b0c:	add    DWORD PTR [rsi],eax
   140047b0e:	add    al,BYTE PTR [rax]
   140047b10:	(bad)  
   140047b11:	xor    al,BYTE PTR [rdx]
   140047b13:	xor    BYTE PTR [rcx],al
   140047b15:	(bad)  
   140047b16:	add    al,BYTE PTR [rax]
   140047b18:	(bad)  
   140047b19:	push   rdx
   140047b1a:	add    dh,BYTE PTR [rax]
   140047b1c:	add    DWORD PTR [rsi],eax
   140047b1e:	add    al,BYTE PTR [rax]
   140047b20:	(bad)  
   140047b21:	xor    al,BYTE PTR [rdx]
   140047b23:	xor    BYTE PTR [rcx],al
   140047b25:	clts   
   140047b27:	add    BYTE PTR [rdi],cl
   140047b29:	fs (bad) 
   140047b2b:	add    BYTE PTR [rdi],cl
   140047b2d:	xor    al,0x6
   140047b2f:	add    BYTE PTR [rdi],cl
   140047b31:	xor    cl,BYTE PTR [rbx]
   140047b33:	jo     0x140047b36
   140047b35:	or     al,BYTE PTR [rax+rax*1]
   140047b38:	or     dh,BYTE PTR [rdi+rcx*1]
   140047b3b:	add    BYTE PTR [rdx],cl
   140047b3d:	xchg   edx,eax
   140047b3e:	(bad)  
   140047b3f:	(bad)  
   140047b40:	and    DWORD PTR [rip+0xffffffff88150006],edx        # 0xc8197b4c
   140047b46:	add    al,BYTE PTR [rax]
   140047b48:	vmread QWORD PTR [rbx],rax
   140047b4b:	add    BYTE PTR [rip+0x50000e74],al        # 0x1900489c5
   140047b51:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140047b52:	add    DWORD PTR [rax],eax
   140047b54:	pop    rbp
   140047b55:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140047b56:	add    DWORD PTR [rax],eax
   140047b58:	xor    al,0x7b
   140047b5a:	add    al,0x0
   140047b5c:	and    DWORD PTR [rip+0x68050002],eax        # 0x1a8097b64
   140047b62:	add    al,0x0
   140047b64:	pop    rbp
   140047b65:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140047b66:	add    DWORD PTR [rax],eax
   140047b68:	(bad)  
   140047b69:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140047b6a:	add    DWORD PTR [rax],eax
   140047b6c:	rex jnp 0x140047b73
   140047b6f:	add    BYTE PTR [rcx],ah
   140047b71:	add    BYTE PTR [rdx],al
   140047b73:	add    BYTE PTR [rax],al
   140047b75:	push   0xffffffffa5500004
   140047b7a:	add    DWORD PTR [rax],eax
   140047b7c:	pop    rbp
   140047b7d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140047b7e:	add    DWORD PTR [rax],eax
   140047b80:	xor    al,0x7b
   140047b82:	add    al,0x0
   140047b84:	and    DWORD PTR [rax],eax
   140047b86:	add    BYTE PTR [rax],al
   140047b88:	push   rax
   140047b89:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140047b8a:	add    DWORD PTR [rax],eax
   140047b8c:	pop    rbp
   140047b8d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140047b8e:	add    DWORD PTR [rax],eax
   140047b90:	xor    al,0x7b
   140047b92:	add    al,0x0
   140047b94:	add    DWORD PTR [rbx+0x5],edx
   140047b97:	add    BYTE PTR [rbx+0x74],dl
   140047b9a:	add    al,0x0
   140047b9c:	rex.WRX xor al,0x6
   140047b9f:	add    BYTE PTR [rdx+rax*2],al
   140047ba2:	add    BYTE PTR [rax],al
   140047ba4:	add    DWORD PTR [rsi],eax
   140047ba6:	add    al,BYTE PTR [rax]
   140047ba8:	(bad)  
   140047ba9:	xor    al,BYTE PTR [rdx]
   140047bab:	xor    BYTE PTR [rcx],ah
   140047bad:	or     al,BYTE PTR [rax+rax*1]
   140047bb0:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   140047bb4:	add    eax,0xc0000664
   140047bb9:	stos   BYTE PTR es:[rdi],al
   140047bba:	add    DWORD PTR [rax],eax
   140047bbc:	(bad)  
   140047bbd:	stos   BYTE PTR es:[rdi],al
   140047bbe:	add    DWORD PTR [rax],eax
   140047bc0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140047bc1:	jnp    0x140047bc7
   140047bc3:	add    BYTE PTR [rcx],ah
   140047bc5:	add    BYTE PTR [rax],al
   140047bc7:	add    al,al
   140047bc9:	stos   BYTE PTR es:[rdi],al
   140047bca:	add    DWORD PTR [rax],eax
   140047bcc:	(bad)  
   140047bcd:	stos   BYTE PTR es:[rdi],al
   140047bce:	add    DWORD PTR [rax],eax
   140047bd0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140047bd1:	jnp    0x140047bd7
   140047bd3:	add    BYTE PTR [rcx],al
   140047bd5:	adc    DWORD PTR [rax+rax*1],eax
   140047bd8:	adc    DWORD PTR [rcx],eax
   140047bda:	pop    rbx
   140047bdb:	add    BYTE PTR [rdx],cl
   140047bdd:	loopne 0x140047be7
   140047bdf:	xor    BYTE PTR [rcx],ah
   140047be1:	or     eax,0x980d0006
   140047be6:	sub    BYTE PTR [rax],al
   140047be8:	or     BYTE PTR [rax+0x2a],bh
   140047beb:	add    BYTE PTR [rsp+rsi*2],al
   140047bee:	(bad)  
   140047bef:	add    al,dh
   140047bf1:	stos   DWORD PTR es:[rdi],eax
   140047bf2:	add    DWORD PTR [rax],eax
   140047bf4:	add    DWORD PTR [rcx+rax*1+0x47bd400],ebp
   140047bfb:	add    BYTE PTR [rcx],ah
   140047bfd:	rex.RX adc BYTE PTR [rax],r8b
   140047c00:	rex.RX test al,0x27
   140047c03:	add    BYTE PTR [rip+0x34002988],bh        # 0x17404a591
   140047c09:	push   0xfffffffff428002b
   140047c0e:	pop    rax
   140047c0f:	add    BYTE PTR [rax],ah
   140047c11:	(bad)  
   140047c12:	pop    rcx
   140047c13:	add    BYTE PTR [rax],bl
   140047c15:	(bad)  
   140047c16:	pop    rdx
   140047c17:	add    BYTE PTR [rax],dl
   140047c19:	fs (bad) 
   140047c1b:	add    BYTE PTR [rax],cl
   140047c1d:	push   rsp
   140047c1e:	pop    rdi
   140047c1f:	add    BYTE PTR [rcx],al
   140047c21:	lods   al,BYTE PTR ds:[rsi]
   140047c22:	add    DWORD PTR [rax],eax
   140047c24:	pop    rax
   140047c25:	lods   al,BYTE PTR ds:[rsi]
   140047c26:	add    DWORD PTR [rax],eax
   140047c28:	loopne 0x140047ca5
   140047c2a:	add    al,0x0
   140047c2c:	and    DWORD PTR [rax],eax
   140047c2e:	add    BYTE PTR [rax],al
   140047c30:	add    DWORD PTR [rcx+rax*1+0x1ac5800],ebp
   140047c37:	add    al,ah
   140047c39:	jnp    0x140047c3f
   140047c3b:	add    BYTE PTR [rcx],ah
   140047c3d:	add    BYTE PTR [rax],al
   140047c3f:	add    al,dh
   140047c41:	stos   DWORD PTR es:[rdi],eax
   140047c42:	add    DWORD PTR [rax],eax
   140047c44:	add    DWORD PTR [rcx+rax*1+0x47bd400],ebp
   140047c4b:	add    BYTE PTR [rcx],al
   140047c4d:	clts   
   140047c4f:	add    BYTE PTR [rdi],cl
   140047c51:	xor    al,0xb
   140047c53:	add    BYTE PTR [rdi],cl
   140047c55:	xor    cl,BYTE PTR [rbx]
   140047c57:	lock or eax,esp
   140047c5a:	(bad)  
   140047c5b:	shl    BYTE PTR [rcx],0xf
   140047c5e:	(bad)  
   140047c5f:	add    BYTE PTR [rdi],cl
   140047c61:	je     0x140047c6d
   140047c63:	add    BYTE PTR [rdx],cl
   140047c65:	or     DWORD PTR fs:[rax],eax
   140047c68:	add    eax,0x50000854
   140047c6d:	mov    ah,0x1
   140047c6f:	add    ah,bl
   140047c71:	mov    ah,0x1
   140047c73:	add    BYTE PTR [rsp+rdi*2+0x4],cl
   140047c77:	add    BYTE PTR [rcx],ah
   140047c79:	add    BYTE PTR [rax],al
   140047c7b:	add    BYTE PTR [rax-0x4c],dl
   140047c7e:	add    DWORD PTR [rax],eax
   140047c80:	fdiv   QWORD PTR [rcx+rax*1+0x47c4c00]
   140047c87:	add    BYTE PTR [rcx],al
   140047c89:	adc    al,0x8
   140047c8b:	add    BYTE PTR [rsp+riz*2],dl
   140047c8e:	or     al,BYTE PTR [rax]
   140047c90:	adc    al,0x54
   140047c92:	or     DWORD PTR [rax],eax
   140047c94:	adc    al,0x34
   140047c96:	or     BYTE PTR [rax],al
   140047c98:	adc    al,0x52
   140047c9a:	adc    BYTE PTR [rax+0x1],dh
   140047c9d:	adc    cl,BYTE PTR [rax]
   140047c9f:	add    BYTE PTR [rdx],dl
   140047ca1:	push   rsp
   140047ca2:	or     eax,0xc341200
   140047ca7:	add    BYTE PTR [rdx],dl
   140047ca9:	push   rdx
   140047caa:	(bad)  
   140047cab:	loopne 0x140047cb9
   140047cad:	jo     0x140047cba
   140047caf:	(bad)  
   140047cb0:	and    DWORD PTR [rip+0xfffffffff40d0004],ecx        # 0x134117cba
   140047cb6:	or     eax,DWORD PTR [rax]
   140047cb8:	add    eax,0xac4
   140047cbd:	mov    dh,0x1
   140047cbf:	add    BYTE PTR [rcx],bl
   140047cc1:	mov    dh,0x1
   140047cc3:	add    BYTE PTR [rsp+rdi*2+0x210004],bl
   140047cca:	add    BYTE PTR [rax],al
   140047ccc:	add    BYTE PTR [rsi-0x49e6ffff],dh
   140047cd2:	add    DWORD PTR [rax],eax
   140047cd4:	pushf  
   140047cd5:	jl     0x140047cdb
   140047cd7:	add    BYTE PTR [rcx],al
   140047cd9:	add    al,0x1
   140047cdb:	add    BYTE PTR [rdx+rax*2],al
   140047cde:	add    BYTE PTR [rax],al
   140047ce0:	add    DWORD PTR [rbx-0x774ffe8],ecx
   140047ce6:	or     DWORD PTR [rax],eax
   140047ce8:	movsxd ebp,eax
   140047cea:	or     al,BYTE PTR [rax]
   140047cec:	pop    rbx
   140047ced:	fmul   DWORD PTR [rbx]
   140047cef:	add    BYTE PTR [rbx-0x38],dl
   140047cf2:	or     al,0x0
   140047cf4:	rex.WXB movabs r8,0x9832000ea843000d
   140047cfe:	verw   WORD PTR [rip+0x28001088]        # 0x168048d8d
   140047d05:	js     0x140047d18
   140047d07:	add    BYTE PTR [rax+rbp*2],bl
   140047d0a:	adc    al,BYTE PTR [rax]
   140047d0c:	adc    al,0x1
   140047d0e:	sub    eax,DWORD PTR [rax]
   140047d10:	or     DWORD PTR [rax],esi
   140047d12:	or     BYTE PTR [rax+0x21],dl
   140047d15:	clts   
   140047d17:	add    BYTE PTR [rdi],cl
   140047d19:	in     al,0x27
   140047d1b:	add    BYTE PTR [rbx],cl
   140047d1d:	(bad)  
   140047d1e:	sub    BYTE PTR [rax],al
   140047d20:	add    al,0x64
   140047d22:	(bad)  
   140047d23:	add    al,dl
   140047d25:	mov    esp,0xbd5f0001
   140047d2a:	add    DWORD PTR [rax],eax
   140047d2c:	loopne 0x140047daa
   140047d2e:	add    al,0x0
   140047d30:	and    DWORD PTR [rdi],ecx
   140047d32:	(bad)  
   140047d33:	add    BYTE PTR [rdi],cl
   140047d35:	hlt    
   140047d36:	add    BYTE PTR es:[rax],cl
   140047d39:	(bad)  
   140047d3a:	sub    DWORD PTR [rax],eax
   140047d3c:	add    al,0x74
   140047d3e:	sub    al,BYTE PTR [rax]
   140047d40:	pop    rdi
   140047d41:	mov    ebp,0xbd950001
   140047d46:	add    DWORD PTR [rax],eax
   140047d48:	adc    al,0x7d
   140047d4a:	add    al,0x0
   140047d4c:	and    DWORD PTR [rax],eax
   140047d4e:	add    BYTE PTR [rax],al
   140047d50:	pop    rdi
   140047d51:	mov    ebp,0xbd950001
   140047d56:	add    DWORD PTR [rax],eax
   140047d58:	adc    al,0x7d
   140047d5a:	add    al,0x0
   140047d5c:	and    DWORD PTR [rax],eax
   140047d5e:	add    BYTE PTR [rax],al
   140047d60:	sar    BYTE PTR [rcx+rax*1+0x1bd5f00],1
   140047d67:	add    al,ah
   140047d69:	jl     0x140047d6f
   140047d6b:	add    BYTE PTR [rcx],al
   140047d6d:	or     al,BYTE PTR [rdx]
   140047d6f:	add    BYTE PTR [rdx],cl
   140047d71:	xor    al,BYTE PTR [rsi]
   140047d73:	xor    BYTE PTR [rcx],al
   140047d75:	(bad)  
   140047d76:	add    al,BYTE PTR [rax]
   140047d78:	(bad)  
   140047d79:	xor    al,BYTE PTR [rdx]
   140047d7b:	xor    BYTE PTR [rcx],al
   140047d7d:	add    al,0x1
   140047d7f:	add    BYTE PTR [rdx+rax*2],al
   140047d82:	add    BYTE PTR [rax],al
   140047d84:	add    DWORD PTR [rcx+rax*1],eax
   140047d87:	add    BYTE PTR [rdx+rax*2],al
   140047d8a:	add    BYTE PTR [rax],al
   140047d8c:	and    DWORD PTR [rip+0x34050002],eax        # 0x174097d94
   140047d92:	add    al,0x0
   140047d94:	(bad)  
   140047d95:	ret    0x1
   140047d98:	je     0x140047d5c
   140047d9a:	add    DWORD PTR [rax],eax
   140047d9c:	test   BYTE PTR [rbp+0x4],bh
   140047d9f:	add    BYTE PTR [rcx],ah
   140047da1:	add    BYTE PTR [rdx],al
   140047da3:	add    BYTE PTR [rax],al
   140047da5:	xor    al,0x4
   140047da7:	add    BYTE PTR [rax-0x3e],ah
   140047daa:	add    DWORD PTR [rax],eax
   140047dac:	je     0x140047d70
   140047dae:	add    DWORD PTR [rax],eax
   140047db0:	test   BYTE PTR [rbp+0x4],bh
   140047db3:	add    BYTE PTR [rcx],ah
   140047db5:	add    BYTE PTR [rdx],al
   140047db7:	add    BYTE PTR [rax],al
   140047db9:	xor    al,0x4
   140047dbb:	add    BYTE PTR [rax-0x3e],ah
   140047dbe:	add    DWORD PTR [rax],eax
   140047dc0:	je     0x140047d84
   140047dc2:	add    DWORD PTR [rax],eax
   140047dc4:	test   BYTE PTR [rbp+0x4],bh
   140047dc7:	add    BYTE PTR [rcx],al
   140047dc9:	(bad)  
   140047dca:	add    eax,0x2780e00
   140047dcf:	add    BYTE PTR [rcx],cl
   140047dd1:	push   0xffffffff82040003
   140047dd6:	add    BYTE PTR [rax],al
   140047dd8:	add    DWORD PTR [rdx],ecx
   140047dda:	add    al,0x0
   140047ddc:	or     dh,BYTE PTR [rsi+rax*1]
   140047ddf:	add    BYTE PTR [rdx],cl
   140047de1:	xor    al,BYTE PTR [rsi]
   140047de3:	jo     0x140047de6
   140047de5:	(bad)  
   140047de6:	add    al,BYTE PTR [rax]
   140047de8:	(bad)  
   140047de9:	xor    al,BYTE PTR [rdx]
   140047deb:	xor    BYTE PTR [rcx],al
   140047ded:	clts   
   140047def:	add    BYTE PTR [rdi],cl
   140047df1:	fs (bad) 
   140047df3:	add    BYTE PTR [rdi],cl
   140047df5:	xor    al,0x6
   140047df7:	add    BYTE PTR [rdi],cl
   140047df9:	xor    cl,BYTE PTR [rbx]
   140047dfb:	jo     0x140047dfe
   140047dfd:	adc    eax,0x74150008
   140047e02:	or     BYTE PTR [rax],al
   140047e04:	adc    eax,0x15000764
   140047e09:	xor    al,0x6
   140047e0b:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e48f43
   140047e11:	adc    ecx,DWORD PTR [rax]
   140047e13:	add    BYTE PTR [rbx],dl
   140047e15:	or     al,BYTE PTR fs:[rax]
   140047e18:	adc    esi,DWORD PTR [rcx+rcx*1]
   140047e1b:	add    BYTE PTR [rbx],dl
   140047e1d:	xor    cl,BYTE PTR [rdi]
   140047e1f:	lock or eax,0x21700be0
   140047e25:	add    eax,0x54050002
   140047e2a:	or     BYTE PTR [rax],al
   140047e2c:	rex retf 
   140047e2e:	add    DWORD PTR [rax],eax
   140047e30:	jg     0x140047dfd
   140047e32:	add    DWORD PTR [rax],eax
   140047e34:	adc    BYTE PTR [rsi+0x4],bh
   140047e37:	add    BYTE PTR [rcx],ah
   140047e39:	add    BYTE PTR [rax],al
   140047e3b:	add    BYTE PTR [rax-0x35],al
   140047e3e:	add    DWORD PTR [rax],eax
   140047e40:	jg     0x140047e0d
   140047e42:	add    DWORD PTR [rax],eax
   140047e44:	adc    BYTE PTR [rsi+0x4],bh
   140047e47:	add    BYTE PTR [rcx],al
   140047e49:	clts   
   140047e4b:	add    BYTE PTR [rdi],cl
   140047e4d:	fs (bad) 
   140047e4f:	add    BYTE PTR [rdi],cl
   140047e51:	xor    al,0x6
   140047e53:	add    BYTE PTR [rdi],cl
   140047e55:	xor    cl,BYTE PTR [rbx]
   140047e57:	jo     0x140047e5a
   140047e59:	and    DWORD PTR [rdx],ecx
   140047e5b:	add    BYTE PTR [rcx],ah
   140047e5d:	push   0x64140003
   140047e62:	or     al,0x0
   140047e64:	adc    al,0x54
   140047e66:	or     eax,DWORD PTR [rax]
   140047e68:	adc    al,0x34
   140047e6a:	or     al,BYTE PTR [rax]
   140047e6c:	adc    al,0x72
   140047e6e:	adc    BYTE PTR [rax+0x1],dh
   140047e71:	(bad)  
   140047e72:	add    al,BYTE PTR [rax]
   140047e74:	(bad)  
   140047e75:	xor    al,BYTE PTR [rdx]
   140047e77:	xor    BYTE PTR [rcx],al
   140047e79:	add    eax,0x34050002
   140047e7e:	add    DWORD PTR [rax],eax
   140047e80:	add    DWORD PTR [rcx+rax*1],eax
   140047e83:	add    BYTE PTR [rdx+rax*2],al
   140047e86:	add    BYTE PTR [rax],al
   140047e88:	add    DWORD PTR [rdi],edx
   140047e8a:	(bad)  
   140047e8b:	add    BYTE PTR [rdi],dl
   140047e8d:	fs (bad) 
   140047e8f:	add    BYTE PTR [rdi],dl
   140047e91:	xor    al,0x26
   140047e93:	add    BYTE PTR [rdi],dl
   140047e95:	add    DWORD PTR [rdx],esp
   140047e97:	add    BYTE PTR [rbx],cl
   140047e99:	push   rax
   140047e9a:	add    BYTE PTR [rax],al
   140047e9c:	and    DWORD PTR [rax+0x12],edx
   140047e9f:	add    BYTE PTR [rax-0x28],dl
   140047ea2:	or     DWORD PTR [rax],eax
   140047ea4:	rex.RXB enter 0xa,0x3e
   140047ea9:	mov    eax,0xa835000b
   140047eae:	or     al,0x0
   140047eb0:	sub    al,0x98
   140047eb2:	or     eax,0xe882300
   140047eb7:	add    BYTE PTR [rax],bl
   140047eb9:	js     0x140047eca
   140047ebb:	add    BYTE PTR [rax],dl
   140047ebd:	push   0x74080010
   140047ec2:	and    eax,0x1c6a000
   140047ec7:	add    BYTE PTR [rsi-0x39],ch
   140047eca:	add    DWORD PTR [rax],eax
   140047ecc:	mov    BYTE PTR [rsi+0x4],bh
   140047ecf:	add    BYTE PTR [rcx],ah
   140047ed1:	add    BYTE PTR [rax],dl
   140047ed3:	add    BYTE PTR [rax],al
   140047ed5:	fmul   DWORD PTR [rcx]
   140047ed7:	add    BYTE PTR [rax],al
   140047ed9:	enter  0xa,0x0
   140047edd:	mov    eax,0xa800000b
   140047ee2:	or     al,0x0
   140047ee4:	add    BYTE PTR [rax-0x77fffff3],bl
   140047eea:	(bad)  
   140047eeb:	add    BYTE PTR [rax],al
   140047eed:	js     0x140047efe
   140047eef:	add    BYTE PTR [rax],al
   140047ef1:	push   0xffffffffc6a00010
   140047ef6:	add    DWORD PTR [rax],eax
   140047ef8:	outs   dx,BYTE PTR ds:[rsi]
   140047ef9:	mov    DWORD PTR [rcx],0x47e8800
   140047eff:	add    BYTE PTR [rcx],ah
   140047f01:	add    BYTE PTR [rax],al
   140047f03:	add    BYTE PTR [rax+0x6e0001c6],ah
   140047f09:	mov    DWORD PTR [rcx],0x47e8800
   140047f0f:	add    BYTE PTR [rcx],al
   140047f11:	or     al,BYTE PTR [rax+rax*1]
   140047f14:	or     dh,BYTE PTR [rsi+rax*1]
   140047f17:	add    BYTE PTR [rdx],cl
   140047f19:	xor    al,BYTE PTR [rsi]
   140047f1b:	jo     0x140047f1e
   140047f1d:	clts   
   140047f1f:	add    BYTE PTR [rdi],cl
   140047f21:	fs (bad) 
   140047f23:	add    BYTE PTR [rdi],cl
   140047f25:	xor    al,0x6
   140047f27:	add    BYTE PTR [rdi],cl
   140047f29:	xor    cl,BYTE PTR [rbx]
   140047f2b:	jo     0x140047f2e
   140047f2d:	or     al,BYTE PTR [rax+rax*1]
   140047f30:	or     dh,BYTE PTR [rsi+rax*1]
   140047f33:	add    BYTE PTR [rdx],cl
   140047f35:	xor    al,BYTE PTR [rsi]
   140047f37:	jo     0x140047f3a
   140047f39:	adc    al,0x8
   140047f3b:	add    BYTE PTR [rsp+riz*2],dl
   140047f3e:	or     BYTE PTR [rax],al
   140047f40:	adc    al,0x54
   140047f42:	(bad)  
   140047f43:	add    BYTE PTR [rsp+rsi*1],dl
   140047f46:	(bad)  
   140047f47:	add    BYTE PTR [rdx+rsi*1],dl
   140047f4a:	adc    BYTE PTR [rax+0x1],dh
   140047f4d:	sbb    cl,BYTE PTR [rdx]
   140047f4f:	add    BYTE PTR [rdx],bl
   140047f51:	je     0x140047f5c
   140047f53:	add    BYTE PTR [rdx],bl
   140047f55:	or     BYTE PTR fs:[rax],al
   140047f58:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   140047f5c:	sbb    dh,BYTE PTR [rsi+rax*1]
   140047f5f:	add    BYTE PTR [rdx],bl
   140047f61:	xor    dl,BYTE PTR [rsi]
   140047f63:	loopne 0x140047f66
   140047f65:	sbb    BYTE PTR [rdx],cl
   140047f67:	add    BYTE PTR [rax],bl
   140047f69:	or     eax,DWORD PTR fs:[rax]
   140047f6c:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140047f70:	sbb    BYTE PTR [rax+rcx*1],dh
   140047f73:	add    BYTE PTR [rax],bl
   140047f75:	xor    dl,BYTE PTR [rax+rsi*8]
   140047f78:	adc    ah,al
   140047f7a:	adc    BYTE PTR [rax+0x1],dh
   140047f7d:	or     al,BYTE PTR [rax+rax*1]
   140047f80:	or     dh,BYTE PTR [rsi+rax*1]
   140047f83:	add    BYTE PTR [rdx],cl
   140047f85:	xor    al,BYTE PTR [rsi]
   140047f87:	jo     0x140047f8a
   140047f89:	sbb    cl,BYTE PTR [rdx]
   140047f8b:	add    BYTE PTR [rdx],bl
   140047f8d:	je     0x140047f98
   140047f8f:	add    BYTE PTR [rdx],bl
   140047f91:	or     BYTE PTR fs:[rax],al
   140047f94:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   140047f98:	sbb    dh,BYTE PTR [rsi+rax*1]
   140047f9b:	add    BYTE PTR [rdx],bl
   140047f9d:	xor    dl,BYTE PTR [rsi]
   140047f9f:	loopne 0x140047fa2
   140047fa1:	(bad)  
   140047fa2:	add    al,BYTE PTR [rax]
   140047fa4:	(bad)  
   140047fa5:	xor    al,BYTE PTR [rdx]
   140047fa7:	jo     0x140047fca
   140047fa9:	add    eax,0x34050002
   140047fae:	(bad)  
   140047faf:	add    BYTE PTR [rax-0x3bfffe2d],ah
   140047fb5:	rol    DWORD PTR [rcx],cl
   140047fb7:	add    BYTE PTR [rax+0x2100047f],ah
   140047fbd:	add    BYTE PTR [rdx],al
   140047fbf:	add    BYTE PTR [rax],al
   140047fc1:	xor    al,0x6
   140047fc3:	add    BYTE PTR [rax-0x3bfffe2d],ah
   140047fc9:	rol    DWORD PTR [rcx],cl
   140047fcb:	add    BYTE PTR [rax+0x100047f],ah
   140047fd1:	push   0xf
   140047fd3:	add    BYTE PTR [rdx-0xc],ch
   140047fd6:	adc    BYTE PTR [rax],al
   140047fd8:	pop    rdi
   140047fd9:	in     al,0x11
   140047fdb:	add    BYTE PTR [rdi+0x74],dl
   140047fde:	(bad)  
   140047fdf:	add    BYTE PTR [rdi+0x64],cl
   140047fe2:	(bad)  
   140047fe3:	add    BYTE PTR [rdi+0x54],al
   140047fe6:	adc    eax,0x14343f00
   140047feb:	add    BYTE PTR [rcx],cl
   140047fed:	add    DWORD PTR [rdx],edx
   140047fef:	add    BYTE PTR [rdx],al
   140047ff1:	rol    BYTE PTR [rax],1
   140047ff3:	add    BYTE PTR [rcx],al
   140047ff5:	(bad)  
   140047ff6:	add    al,BYTE PTR [rax]
   140047ff8:	(bad)  
   140047ff9:	xor    al,BYTE PTR [rdx]
   140047ffb:	jo     0x14004801e
   140047ffd:	add    eax,0x34050002
   140048002:	(bad)  
   140048003:	add    BYTE PTR [rax],dh
   140048005:	(bad)  
   140048006:	add    DWORD PTR [rax],eax
   140048008:	pop    rsi
   140048009:	(bad)  
   14004800a:	add    DWORD PTR [rax],eax
   14004800c:	hlt    
   14004800d:	jg     0x140048013
   14004800f:	add    BYTE PTR [rcx],ah
   140048011:	add    BYTE PTR [rdx],al
   140048013:	add    BYTE PTR [rax],al
   140048015:	xor    al,0x6
   140048017:	add    BYTE PTR [rax],dh
   140048019:	(bad)  
   14004801a:	add    DWORD PTR [rax],eax
   14004801c:	pop    rsi
   14004801d:	(bad)  
   14004801e:	add    DWORD PTR [rax],eax
   140048020:	hlt    
   140048021:	jg     0x140048027
   140048023:	add    BYTE PTR [rcx],al
   140048025:	clts   
   140048027:	add    BYTE PTR [rdi],cl
   140048029:	fs or  eax,0xc340f00
   14004802f:	add    BYTE PTR [rdi],cl
   140048031:	xchg   edx,eax
   140048032:	or     esi,DWORD PTR [rax+0x1]
   140048035:	adc    al,0x4
   140048037:	add    BYTE PTR [rsp+rsi*1],dl
   14004803a:	or     al,BYTE PTR [rax]
   14004803c:	adc    al,0x72
   14004803e:	adc    BYTE PTR [rax+0x1],dh
   140048041:	or     al,BYTE PTR [rdx]
   140048043:	add    BYTE PTR [rdx],cl
   140048045:	xchg   edx,eax
   140048046:	(bad)  
   140048047:	(bad)  
   140048048:	and    DWORD PTR [rcx],ebx
   14004804a:	(bad)  
   14004804b:	add    BYTE PTR [rcx],bl
   14004804d:	push   rsp
   14004804e:	or     DWORD PTR [rax],eax
   140048050:	or     dh,BYTE PTR [rax+rcx*1+0x0]
   140048054:	add    eax,0x80000e34
   140048059:	fadd   DWORD PTR [rcx]
   14004805b:	add    BYTE PTR [rsi+0x400001d8],bl
   140048061:	add    BYTE PTR [rax+rax*1],0x21
   140048065:	add    BYTE PTR [rax],al
   140048067:	add    BYTE PTR [rax-0x61fffe28],al
   14004806d:	fadd   DWORD PTR [rcx]
   14004806f:	add    BYTE PTR [rax-0x80],al
   140048072:	add    al,0x0
   140048074:	and    DWORD PTR [rax],eax
   140048076:	(bad)  
   140048077:	add    BYTE PTR [rax],al
   140048079:	je     0x140048083
   14004807b:	add    BYTE PTR [rax],al
   14004807d:	push   rsp
   14004807e:	or     DWORD PTR [rax],eax
   140048080:	add    BYTE PTR [rsi+rcx*1],dh
   140048083:	add    BYTE PTR [rax-0x61fffe28],al
   140048089:	fadd   DWORD PTR [rcx]
   14004808b:	add    BYTE PTR [rax-0x80],al
   14004808e:	add    al,0x0
   140048090:	add    DWORD PTR [rcx+rax*1],eax
   140048093:	add    BYTE PTR [rdx+rax*2],al
   140048096:	add    BYTE PTR [rax],al
   140048098:	add    DWORD PTR [rsi],ecx
   14004809a:	(bad)  
   14004809b:	add    BYTE PTR [rsi],cl
   14004809d:	add    DWORD PTR [rcx],edx
   14004809f:	add    BYTE PTR [rdi],al
   1400480a1:	lock add eax,0x25003d0
   1400480a7:	xor    BYTE PTR [rcx],ah
   1400480a9:	(bad)  
   1400480aa:	add    al,0x0
   1400480ac:	(bad)  
   1400480ad:	mov    BYTE PTR [rip+0x17740800],al        # 0x1577888b3
   1400480b3:	add    BYTE PTR [rax],dh
   1400480b5:	fild   DWORD PTR [rcx]
   1400480b7:	add    dh,dh
   1400480b9:	fild   DWORD PTR [rcx]
   1400480bb:	add    BYTE PTR [rax+0x21000480],bl
   1400480c1:	xor    cl,BYTE PTR [rdx]
   1400480c3:	add    BYTE PTR [rdx],dh
   1400480c5:	(bad)  
   1400480c6:	sbb    BYTE PTR [rax],al
   1400480c8:	sub    ah,BYTE PTR [rsi+rdx*1+0x0]
   1400480cc:	sbb    bh,BYTE PTR [rax+0x6]
   1400480cf:	add    BYTE PTR [rip+0x8000768],cl        # 0x14804883d
   1400480d5:	in     al,0x10
   1400480d7:	add    dh,dh
   1400480d9:	fild   DWORD PTR [rcx]
   1400480db:	add    BYTE PTR [rbp-0x57fffe24],dl
   1400480e1:	add    BYTE PTR [rax+rax*1],0x21
   1400480e5:	add    BYTE PTR [rax],al
   1400480e7:	add    dh,dh
   1400480e9:	fild   DWORD PTR [rcx]
   1400480eb:	add    BYTE PTR [rbp-0x57fffe24],dl
   1400480f1:	add    BYTE PTR [rax+rax*1],0x21
   1400480f5:	add    BYTE PTR [rax],al
   1400480f7:	add    BYTE PTR [rax],dh
   1400480f9:	fild   DWORD PTR [rcx]
   1400480fb:	add    dh,dh
   1400480fd:	fild   DWORD PTR [rcx]
   1400480ff:	add    BYTE PTR [rax+0x1000480],bl
   140048105:	(bad)  
   140048106:	or     eax,0x5d742700
   14004810b:	add    BYTE PTR [rdi],ah
   14004810d:	fs pop rbx
   14004810f:	add    BYTE PTR [rdi],ah
   140048111:	xor    al,0x5a
   140048113:	add    BYTE PTR [rdi],ah
   140048115:	add    DWORD PTR [rax+rax*1+0x18],edx
   140048119:	lock (bad) 
   14004811b:	loopne 0x140048131
   14004811d:	rcl    BYTE PTR [rdx],1
   14004811f:	rcl    BYTE PTR [rax],0x50
   140048122:	add    BYTE PTR [rax],al
   140048124:	add    DWORD PTR [rsi],eax
   140048126:	add    al,BYTE PTR [rax]
   140048128:	(bad)  
   140048129:	jb     0x14004812d
   14004812b:	xor    BYTE PTR [rcx],al
   14004812d:	(bad)  
   14004812e:	add    al,BYTE PTR [rax]
   140048130:	(bad)  
   140048131:	jb     0x140048135
   140048133:	(bad)  
   140048134:	and    DWORD PTR [rip+0xfffffffff42d000c],ebp        # 0x134318146
   14004813a:	add    al,0x0
   14004813c:	sub    ah,ah
   14004813e:	add    eax,0x6d42300
   140048143:	add    BYTE PTR [rbx],dl
   140048145:	(bad)  
   140048146:	(bad)  
   140048147:	add    BYTE PTR [rsi],cl
   140048149:	push   rsp
   14004814a:	or     al,0x0
   14004814c:	add    eax,0xc0000b34
   140048151:	out    0x1,al
   140048153:	add    ah,ah
   140048155:	out    0x1,al
   140048157:	add    BYTE PTR [rcx+rax*4],ch
   14004815a:	add    al,0x0
   14004815c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4098164
   140048162:	or     eax,0x1e6e400
   140048167:	add    BYTE PTR [rax+rbp*8],cl
   14004816a:	add    DWORD PTR [rax],eax
   14004816c:	xor    al,0x81
   14004816e:	add    al,0x0
   140048170:	and    DWORD PTR [rax],eax
   140048172:	add    BYTE PTR [rax],al
   140048174:	in     al,0xe6
   140048176:	add    DWORD PTR [rax],eax
   140048178:	or     al,0xe8
   14004817a:	add    DWORD PTR [rax],eax
   14004817c:	xor    al,0x81
   14004817e:	add    al,0x0
   140048180:	and    DWORD PTR [rax],eax
   140048182:	add    BYTE PTR [rax],al
   140048184:	shl    dh,0x1
   140048187:	add    ah,ah
   140048189:	out    0x1,al
   14004818b:	add    BYTE PTR [rcx+rax*4],ch
   14004818e:	add    al,0x0
   140048190:	add    DWORD PTR [rdi],eax
   140048192:	add    al,BYTE PTR [rax]
   140048194:	(bad)  
   140048195:	add    DWORD PTR [rbx+0x0],ecx
   140048198:	add    DWORD PTR [rsi],eax
   14004819a:	add    al,BYTE PTR [rax]
   14004819c:	(bad)  
   14004819d:	xor    al,BYTE PTR [rdx]
   14004819f:	xor    BYTE PTR [rcx],al
   1400481a1:	(bad)  
   1400481a2:	add    al,BYTE PTR [rax]
   1400481a4:	(bad)  
   1400481a5:	xor    al,BYTE PTR [rdx]
   1400481a7:	xor    BYTE PTR [rcx],al
   1400481a9:	(bad)  
   1400481aa:	add    al,BYTE PTR [rax]
   1400481ac:	(bad)  
   1400481ad:	xor    al,BYTE PTR [rdx]
   1400481af:	xor    BYTE PTR [rcx],al
   1400481b1:	(bad)  
   1400481b2:	add    al,BYTE PTR [rax]
   1400481b4:	(bad)  
   1400481b5:	xor    al,BYTE PTR [rdx]
   1400481b7:	xor    BYTE PTR [rcx],al
   1400481b9:	(bad)  
   1400481ba:	add    al,BYTE PTR [rax]
   1400481bc:	(bad)  
   1400481bd:	xor    al,BYTE PTR [rdx]
   1400481bf:	jo     0x1400481e2
   1400481c1:	add    eax,0x34050002
   1400481c6:	(bad)  
   1400481c7:	add    al,dh
   1400481c9:	jmp    0x1400481cc
   1400481cb:	add    BYTE PTR [rax],dh
   1400481cd:	in     al,dx
   1400481ce:	add    DWORD PTR [rax],eax
   1400481d0:	mov    eax,0x21000481
   1400481d5:	add    BYTE PTR [rdx],al
   1400481d7:	add    BYTE PTR [rax],al
   1400481d9:	xor    al,0x6
   1400481db:	add    al,dh
   1400481dd:	jmp    0x1400481e0
   1400481df:	add    BYTE PTR [rax],dh
   1400481e1:	in     al,dx
   1400481e2:	add    DWORD PTR [rax],eax
   1400481e4:	mov    eax,0x21000481
   1400481e9:	add    BYTE PTR [rdx],al
   1400481eb:	add    BYTE PTR [rax],al
   1400481ed:	xor    al,0x6
   1400481ef:	add    al,dh
   1400481f1:	jmp    0x1400481f4
   1400481f3:	add    BYTE PTR [rax],dh
   1400481f5:	in     al,dx
   1400481f6:	add    DWORD PTR [rax],eax
   1400481f8:	mov    eax,0x1000481
   1400481fd:	add    eax,0x34050002
   140048202:	add    DWORD PTR [rax],eax
   140048204:	add    DWORD PTR [rcx+rax*1],eax
   140048207:	add    BYTE PTR [rdx+rax*4],al
   14004820a:	add    BYTE PTR [rax],al
   14004820c:	add    DWORD PTR [rdx],ecx
   14004820e:	add    al,0x0
   140048210:	or     ah,BYTE PTR [rdi+rax*1+0x0]
   140048214:	or     dh,BYTE PTR [rdx]
   140048216:	(bad)  
   140048217:	jo     0x14004823a
   140048219:	add    eax,0x34050002
   14004821e:	(bad)  
   14004821f:	add    al,ah
   140048221:	in     eax,dx
   140048222:	add    DWORD PTR [rax],eax
   140048224:	sbb    ch,dh
   140048226:	add    DWORD PTR [rax],eax
   140048228:	or     al,0x82
   14004822a:	add    al,0x0
   14004822c:	and    DWORD PTR [rax],eax
   14004822e:	add    al,BYTE PTR [rax]
   140048230:	add    BYTE PTR [rsi+rax*1],dh
   140048233:	add    al,ah
   140048235:	in     eax,dx
   140048236:	add    DWORD PTR [rax],eax
   140048238:	sbb    ch,dh
   14004823a:	add    DWORD PTR [rax],eax
   14004823c:	or     al,0x82
   14004823e:	add    al,0x0
   140048240:	add    DWORD PTR [rcx],ecx
   140048242:	add    DWORD PTR [rax],eax
   140048244:	or     DWORD PTR [rdx+0x0],eax
   140048247:	add    BYTE PTR [rcx],al
   140048249:	or     al,BYTE PTR [rax+rax*1]
   14004824c:	or     dh,BYTE PTR [rsi+rax*1]
   14004824f:	add    BYTE PTR [rdx],cl
   140048251:	xor    al,BYTE PTR [rsi]
   140048253:	jo     0x140048256
   140048255:	(bad)  
   140048256:	or     eax,0x20641f00
   14004825b:	add    BYTE PTR [rdi],bl
   14004825d:	push   rsp
   14004825e:	(bad)  
   14004825f:	add    BYTE PTR [rdi],bl
   140048261:	xor    al,0x1e
   140048263:	add    BYTE PTR [rdi],bl
   140048265:	add    DWORD PTR [rax],ebx
   140048267:	add    BYTE PTR [rax],bl
   140048269:	lock (bad) 
   14004826b:	loopne 0x140048281
   14004826d:	rcl    BYTE PTR [rdx],1
   14004826f:	rcl    BYTE PTR [rax],0x70
   140048272:	add    BYTE PTR [rax],al
   140048274:	add    DWORD PTR [rdx],edx
   140048276:	(bad)  
   140048277:	add    BYTE PTR [rdx],dl
   140048279:	sbb    eax,DWORD PTR fs:[rax]
   14004827c:	adc    dh,BYTE PTR [rdx+rbx*1]
   14004827f:	add    BYTE PTR [rdx],dl
   140048281:	add    DWORD PTR [rax],ebx
   140048283:	add    BYTE PTR [rbx],cl
   140048285:	jo     0x140048287
   140048287:	add    BYTE PTR [rcx],al
   140048289:	sbb    al,0x8
   14004828b:	add    BYTE PTR [rax+rcx*4],bl
   14004828e:	add    al,0x0
   140048290:	adc    dh,dl
   140048292:	or     al,ah
   140048294:	(bad)  
   140048295:	rol    BYTE PTR [rax+riz*2],1
   140048298:	add    esi,DWORD PTR [rax]
   14004829a:	add    dl,BYTE PTR [rax+0x21]
   14004829d:	(bad)  
   14004829e:	(bad)  
   14004829f:	add    BYTE PTR [rsi],dl
   1400482a1:	hlt    
   1400482a2:	(bad)  
   1400482a3:	add    BYTE PTR [rip+0x8000fc4],cl        # 0x14804926d
   1400482a9:	je     0x1400482c3
   1400482ab:	add    BYTE PTR [rax-0x15fffe0b],dh
   1400482b1:	test   BYTE PTR [rcx],0x0
   1400482b4:	mov    BYTE PTR [rdx+0xa210004],al
   1400482ba:	add    al,0x0
   1400482bc:	or     bh,BYTE PTR [rax+0x5]
   1400482bf:	add    BYTE PTR [rip+0xffffffffea000668],al        # 0x12a04892d
   1400482c5:	test   BYTE PTR [rcx],0x0
   1400482c8:	sub    dh,bh
   1400482ca:	add    DWORD PTR [rax],eax
   1400482cc:	pushf  
   1400482cd:	(bad)  
   1400482ce:	add    al,0x0
   1400482d0:	and    DWORD PTR [rsi],eax
   1400482d2:	add    al,BYTE PTR [rax]
   1400482d4:	(bad)  
   1400482d5:	cwde   
   1400482d6:	add    eax,DWORD PTR [rax]
   1400482d8:	sub    dh,bh
   1400482da:	add    DWORD PTR [rax],eax
   1400482dc:	xor    al,0xf7
   1400482de:	add    DWORD PTR [rax],eax
   1400482e0:	mov    eax,0x21000482
   1400482e5:	add    BYTE PTR [rax],al
   1400482e7:	add    BYTE PTR [rdx],ch
   1400482e9:	test   DWORD PTR [rcx],0x1f73400
   1400482ef:	add    BYTE PTR [rax+0x21000482],bh
   1400482f5:	add    BYTE PTR [rax],al
   1400482f7:	add    dl,ch
   1400482f9:	test   BYTE PTR [rcx],0x0
   1400482fc:	sub    dh,bh
   1400482fe:	add    DWORD PTR [rax],eax
   140048300:	pushf  
   140048301:	(bad)  
   140048302:	add    al,0x0
   140048304:	add    DWORD PTR [rdi],ecx
   140048306:	add    al,0x0
   140048308:	sysenter 
   14004830a:	or     al,BYTE PTR [rax]
   14004830c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14004830f:	jo     0x140048312
   140048311:	or     al,BYTE PTR [rdx]
   140048313:	add    BYTE PTR [rdx],cl
   140048315:	xor    al,BYTE PTR [rsi]
   140048317:	jo     0x14004833a
   140048319:	add    eax,0x34050002
   14004831e:	(bad)  
   14004831f:	add    al,dh
   140048321:	cld    
   140048322:	add    DWORD PTR [rax],eax
   140048324:	add    al,0xfd
   140048326:	add    DWORD PTR [rax],eax
   140048328:	adc    BYTE PTR [rbx+0x210004],al
   14004832e:	add    BYTE PTR [rax],al
   140048330:	lock cld 
   140048332:	add    DWORD PTR [rax],eax
   140048334:	add    al,0xfd
   140048336:	add    DWORD PTR [rax],eax
   140048338:	adc    BYTE PTR [rbx+0xa010004],al
   14004833e:	add    al,0x0
   140048340:	or     dh,BYTE PTR [rsi+rax*1]
   140048343:	add    BYTE PTR [rdx],cl
   140048345:	xor    al,BYTE PTR [rsi]
   140048347:	jo     0x14004834a
   140048349:	or     al,BYTE PTR [rax+rax*1]
   14004834c:	or     dh,BYTE PTR [rsi+rax*1]
   14004834f:	add    BYTE PTR [rdx],cl
   140048351:	xor    al,BYTE PTR [rsi]
   140048353:	jo     0x140048356
   140048355:	adc    BYTE PTR [rsi],al
   140048357:	add    BYTE PTR [rax],dl
   140048359:	je     0x140048364
   14004835b:	add    BYTE PTR [rax],dl
   14004835d:	xor    al,0x8
   14004835f:	add    BYTE PTR [rax],dl
   140048361:	xor    cl,BYTE PTR [rax+riz*8]
   140048364:	and    DWORD PTR [rdx],ecx
   140048366:	add    al,0x0
   140048368:	or     ah,BYTE PTR [rdi+rax*1+0x0]
   14004836c:	add    eax,0xf0000654
   140048371:	sti    
   140048372:	add    DWORD PTR [rax],eax
   140048374:	pop    rbx
   140048375:	cld    
   140048376:	add    DWORD PTR [rax],eax
   140048378:	push   rsp
   140048379:	add    DWORD PTR [rax+rax*1],0x21
   14004837d:	add    BYTE PTR [rax],al
   14004837f:	add    al,dh
   140048381:	sti    
   140048382:	add    DWORD PTR [rax],eax
   140048384:	pop    rbx
   140048385:	cld    
   140048386:	add    DWORD PTR [rax],eax
   140048388:	push   rsp
   140048389:	add    DWORD PTR [rax+rax*1],0x1
   14004838d:	or     al,BYTE PTR [rax+rax*1]
   140048390:	or     dh,BYTE PTR [rsi+rax*1]
   140048393:	add    BYTE PTR [rdx],cl
   140048395:	xor    al,BYTE PTR [rsi]
   140048397:	jo     0x14004839a
   140048399:	adc    eax,0x74150008
   14004839e:	or     BYTE PTR [rax],al
   1400483a0:	adc    eax,0x15000764
   1400483a5:	xor    al,0x6
   1400483a7:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e494df
   1400483ad:	adc    al,0x8
   1400483af:	add    BYTE PTR [rsp+riz*2],dl
   1400483b2:	or     BYTE PTR [rax],al
   1400483b4:	adc    al,0x54
   1400483b6:	(bad)  
   1400483b7:	add    BYTE PTR [rsp+rsi*1],dl
   1400483ba:	(bad)  
   1400483bb:	add    BYTE PTR [rdx+rsi*1],dl
   1400483be:	adc    BYTE PTR [rax+0x1],dh
   1400483c1:	(bad)  
   1400483c2:	add    al,BYTE PTR [rax]
   1400483c4:	(bad)  
   1400483c5:	xor    al,BYTE PTR [rdx]
   1400483c7:	jo     0x1400483ea
   1400483c9:	add    eax,0x34050002
   1400483ce:	(bad)  
   1400483cf:	add    BYTE PTR [rax+0xb000224],dh
   1400483d5:	and    eax,0x83c00002
   1400483da:	add    al,0x0
   1400483dc:	and    DWORD PTR [rax],eax
   1400483de:	add    BYTE PTR [rax],al
   1400483e0:	mov    al,0x24
   1400483e2:	add    al,BYTE PTR [rax]
   1400483e4:	or     esp,DWORD PTR [rip+0xffffffff83c00002]        # 0xc3c483ec
   1400483ea:	add    al,0x0
   1400483ec:	and    DWORD PTR [rax],eax
   1400483ee:	add    al,BYTE PTR [rax]
   1400483f0:	add    BYTE PTR [rsi+rax*1],dh
   1400483f3:	add    BYTE PTR [rax+0xb000224],dh
   1400483f9:	and    eax,0x83c00002
   1400483fe:	add    al,0x0
   140048400:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a4098408
   140048406:	(bad)  
   140048407:	add    BYTE PTR [rsi+0x25],ch
   14004840a:	add    al,BYTE PTR [rax]
   14004840c:	jle    0x140048433
   14004840e:	add    al,BYTE PTR [rax]
   140048410:	in     al,dx
   140048411:	add    DWORD PTR [rax+rax*1],0x21
   140048415:	add    BYTE PTR [rax],al
   140048417:	add    BYTE PTR [rsi+0x25],ch
   14004841a:	add    al,BYTE PTR [rax]
   14004841c:	jle    0x140048443
   14004841e:	add    al,BYTE PTR [rax]
   140048420:	in     al,dx
   140048421:	add    DWORD PTR [rax+rax*1],0x1
   140048425:	or     al,BYTE PTR [rax+rax*1]
   140048428:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   14004842c:	add    eax,0x1000134
   140048431:	adc    eax,0x74150008
   140048436:	or     DWORD PTR [rax],eax
   140048438:	adc    eax,0x15000864
   14004843d:	push   rsp
   14004843e:	(bad)  
   14004843f:	add    BYTE PTR [rip+0x21e01132],dl        # 0x161e49577
   140048445:	add    eax,0x34050002
   14004844a:	(bad)  
   14004844b:	add    BYTE PTR [rax+0x2b],ah
   14004844e:	add    al,BYTE PTR [rax]
   140048450:	xchg   esi,eax
   140048451:	sub    eax,DWORD PTR [rdx]
   140048453:	add    BYTE PTR [rax],dh
   140048455:	test   BYTE PTR [rax+rax*1],al
   140048458:	and    DWORD PTR [rax],eax
   14004845a:	add    BYTE PTR [rax],al
   14004845c:	(bad)  
   14004845d:	sub    eax,DWORD PTR [rdx]
   14004845f:	add    BYTE PTR [rsi+0x3000022b],dl
   140048465:	test   BYTE PTR [rax+rax*1],al
   140048468:	add    DWORD PTR [rdx],ecx
   14004846a:	add    al,0x0
   14004846c:	or     dh,BYTE PTR [rcx+rcx*1]
   14004846f:	add    BYTE PTR [rdx],cl
   140048471:	push   rdx
   140048472:	(bad)  
   140048473:	jo     0x140048476
   140048475:	(bad)  
   140048476:	add    al,BYTE PTR [rax]
   140048478:	(bad)  
   140048479:	xor    al,BYTE PTR [rdx]
   14004847b:	xor    BYTE PTR [rcx],al
   14004847d:	(bad)  
   14004847e:	or     BYTE PTR [rax],al
   140048480:	(bad)  
   140048481:	add    DWORD PTR [rcx],ebx
   140048483:	add    BYTE PTR [rax],bl
   140048485:	lock (bad) 
   140048487:	loopne 0x14004849d
   140048489:	rcl    BYTE PTR [rdx],1
   14004848b:	jo     0x14004849e
   14004848d:	(bad)  
   14004848e:	adc    BYTE PTR [rax],dh
   140048490:	and    DWORD PTR [rax],ecx
   140048492:	add    al,0x0
   140048494:	or     ah,al
   140048496:	sbb    BYTE PTR [rax],al
   140048498:	add    al,0x54
   14004849a:	and    DWORD PTR [rax],eax
   14004849c:	adc    BYTE PTR [rdx+rax*1],dh
   14004849f:	add    BYTE PTR [rdi],ch
   1400484a1:	xor    al,0x2
   1400484a3:	add    BYTE PTR [rsp+rax*4+0x4],bh
   1400484a7:	add    BYTE PTR [rcx],ah
   1400484a9:	rex.XB or al,BYTE PTR [r8]
   1400484ac:	rex.XB test al,0x7
   1400484af:	add    BYTE PTR [rip+0x19000898],bh        # 0x159048d4d
   1400484b5:	mov    BYTE PTR [rcx],cl
   1400484b7:	add    BYTE PTR [rax],dl
   1400484b9:	js     0x1400484c5
   1400484bb:	add    BYTE PTR [rax],cl
   1400484bd:	push   0x342f000b
   1400484c2:	add    al,BYTE PTR [rax]
   1400484c4:	jg     0x1400484fa
   1400484c6:	add    al,BYTE PTR [rax]
   1400484c8:	nop
   1400484c9:	test   BYTE PTR [rax+rax*1],al
   1400484cc:	and    DWORD PTR [rax],eax
   1400484ce:	add    BYTE PTR [rax],al
   1400484d0:	(bad)  
   1400484d1:	xor    al,0x2
   1400484d3:	add    BYTE PTR [rdi+0x34],bh
   1400484d6:	add    al,BYTE PTR [rax]
   1400484d8:	nop
   1400484d9:	test   BYTE PTR [rax+rax*1],al
   1400484dc:	and    DWORD PTR [rax],eax
   1400484de:	add    BYTE PTR [rax],al
   1400484e0:	adc    BYTE PTR [rdx+rax*1],dh
   1400484e3:	add    BYTE PTR [rdi],ch
   1400484e5:	xor    al,0x2
   1400484e7:	add    BYTE PTR [rsp+rax*4+0x4],bh
   1400484eb:	add    BYTE PTR [rcx],al
   1400484ed:	clts   
   1400484ef:	add    BYTE PTR [rdi],cl
   1400484f1:	push   0x340a0002
   1400484f6:	or     BYTE PTR [rax],al
   1400484f8:	or     dl,BYTE PTR [rdx+0x6]
   1400484fb:	jo     0x1400484fe
   1400484fd:	and    al,0xa
   1400484ff:	add    BYTE PTR [rax+rdi*2],ah
   140048502:	add    al,BYTE PTR [rax]
   140048504:	sbb    ebp,DWORD PTR [rax+0x3]
   140048507:	add    BYTE PTR [rdi],cl
   140048509:	or     eax,DWORD PTR fs:[rax]
   14004850c:	sysenter 
   14004850e:	or     al,BYTE PTR [rax]
   140048510:	(bad)  
   140048512:	or     esi,DWORD PTR [rax+0x1]
   140048515:	or     al,BYTE PTR [rax+rax*1]
   140048518:	or     dh,BYTE PTR [rsi+rax*1]
   14004851b:	add    BYTE PTR [rdx],cl
   14004851d:	xor    al,BYTE PTR [rsi]
   14004851f:	jo     0x140048522
   140048521:	push   0x1d
   140048523:	add    BYTE PTR [rdx-0x8],ch
   140048526:	or     al,BYTE PTR [rax]
   140048528:	(bad)  
   140048529:	call   0x1185e8539
   14004852e:	or     al,0x0
   140048530:	push   rdx
   140048531:	enter  0xd,0x4a
   140048535:	mov    eax,0xa842000e
   14004853a:	(bad)  
   14004853c:	cmp    bl,BYTE PTR [rax-0x77d5fff0]
   140048542:	adc    DWORD PTR [rax],eax
   140048544:	and    eax,0x21001278
   140048549:	push   0x11d0013
   14004854e:	sub    al,BYTE PTR [rax]
   140048550:	adc    eax,esi
   140048552:	(bad)  
   140048554:	or     eax,0xa700bc0
   140048559:	(bad)  
   14004855a:	or     DWORD PTR [rax],esi
   14004855c:	or     BYTE PTR [rax+0x0],dl
   14004855f:	add    BYTE PTR [rcx],ah
   140048561:	or     BYTE PTR [rdx],al
   140048563:	add    BYTE PTR [rax],cl
   140048565:	in     al,0x29
   140048567:	add    BYTE PTR [rax+0x770001ff],dl
   14004856d:	add    al,0x2
   14004856f:	add    BYTE PTR [rax],ah
   140048571:	test   DWORD PTR [rax+rax*1],eax
   140048574:	and    DWORD PTR [rax],eax
   140048576:	add    BYTE PTR [rax],al
   140048578:	nop
   140048579:	inc    DWORD PTR [rcx]
   14004857b:	add    BYTE PTR [rdi+0x4],dh
   14004857e:	add    al,BYTE PTR [rax]
   140048580:	and    BYTE PTR [rbp+0x6010004],al
   140048586:	add    al,BYTE PTR [rax]
   140048588:	(bad)  
   140048589:	xor    al,BYTE PTR [rdx]
   14004858b:	xor    BYTE PTR [rcx],al
   14004858d:	clts   
   14004858f:	add    BYTE PTR [rdi],cl
   140048591:	fs (bad) 
   140048593:	add    BYTE PTR [rdi],cl
   140048595:	xor    al,0x6
   140048597:	add    BYTE PTR [rdi],cl
   140048599:	xor    cl,BYTE PTR [rbx]
   14004859b:	jo     0x14004859e
   14004859d:	mov    al,0xf
   14004859f:	add    BYTE PTR [rax+0x2e002d74],dh
   1400485a5:	cwde   
   1400485a6:	adc    DWORD PTR [rax],eax
   1400485a8:	and    BYTE PTR [rax+0x781b0012],cl
   1400485ae:	adc    eax,DWORD PTR [rax]
   1400485b0:	(bad)  
   1400485b1:	push   0x34130014
   1400485b6:	(bad)  
   1400485b7:	add    BYTE PTR [rbx],dl
   1400485b9:	add    DWORD PTR [rdx],ebp
   1400485bb:	add    BYTE PTR [rax],cl
   1400485bd:	push   rax
   1400485be:	add    BYTE PTR [rax],al
   1400485c0:	and    DWORD PTR [rbp+0xe],ebp
   1400485c3:	add    BYTE PTR [rbp-0x8],ch
   1400485c6:	or     eax,DWORD PTR [rax]
   1400485c8:	rex.WRXB call 0x1184a85da
   1400485ce:	or     eax,0xec83d00
   1400485d3:	add    BYTE PTR [rax],ch
   1400485d5:	mov    eax,0xa816000f
   1400485da:	adc    BYTE PTR [rax],al
   1400485dc:	or     ah,ah
   1400485de:	add    BYTE PTR cs:[rax],dh
   1400485e1:	or     eax,0xf8d0002
   1400485e6:	add    al,BYTE PTR [rax]
   1400485e8:	pushf  
   1400485e9:	test   DWORD PTR [rax+rax*1],eax
   1400485ec:	and    DWORD PTR [rax],ecx
   1400485ee:	add    al,BYTE PTR [rax]
   1400485f0:	or     BYTE PTR [rsp+rbp*1+0x0],ah
   1400485f4:	lea    ecx,[rdi]
   1400485f6:	add    al,BYTE PTR [rax]
   1400485f8:	(bad)  
   1400485f9:	adc    al,BYTE PTR [rdx]
   1400485fb:	add    al,al
   1400485fd:	test   DWORD PTR [rax+rax*1],eax
   140048600:	and    DWORD PTR [rax],eax
   140048602:	add    BYTE PTR [rax],al
   140048604:	lea    ecx,[rdi]
   140048606:	add    al,BYTE PTR [rax]
   140048608:	(bad)  
   140048609:	adc    al,BYTE PTR [rdx]
   14004860b:	add    al,al
   14004860d:	test   DWORD PTR [rax+rax*1],eax
   140048610:	and    DWORD PTR [rax],eax
   140048612:	add    BYTE PTR [rax],al
   140048614:	xor    BYTE PTR [rip+0xf8d0002],cl        # 0x14f91861c
   14004861a:	add    al,BYTE PTR [rax]
   14004861c:	pushf  
   14004861d:	test   DWORD PTR [rax+rax*1],eax
   140048620:	and    DWORD PTR [rax],eax
   140048622:	adc    BYTE PTR [rax],al
   140048624:	add    al,bh
   140048626:	or     eax,DWORD PTR [rax]
   140048628:	add    al,ch
   14004862a:	or     al,0x0
   14004862c:	add    al,bl
   14004862e:	or     eax,0xec80000
   140048633:	add    BYTE PTR [rax],al
   140048635:	mov    eax,0xa800000f
   14004863a:	adc    BYTE PTR [rax],al
   14004863c:	add    ah,ah
   14004863e:	add    BYTE PTR cs:[rax],al
   140048641:	fs sub al,0x0
   140048644:	xor    BYTE PTR [rip+0xf8d0002],cl        # 0x14f91864c
   14004864a:	add    al,BYTE PTR [rax]
   14004864c:	pushf  
   14004864d:	test   DWORD PTR [rax+rax*1],eax
   140048650:	and    DWORD PTR [rax],eax
   140048652:	add    BYTE PTR [rax],al
   140048654:	xor    BYTE PTR [rip+0xf8d0002],cl        # 0x14f91865c
   14004865a:	add    al,BYTE PTR [rax]
   14004865c:	pushf  
   14004865d:	test   DWORD PTR [rax+rax*1],eax
   140048660:	add    DWORD PTR [rip+0x10d0004],ecx        # 0x14111866a
   140048666:	adc    eax,DWORD PTR [rax]
   140048668:	(bad)  
   140048669:	loopne 0x14004866f
   14004866b:	jo     0x14004868e
   14004866d:	and    dl,BYTE PTR [rax]
   14004866f:	add    BYTE PTR [rdx],ah
   140048671:	cwde   
   140048672:	add    eax,DWORD PTR [rax]
   140048674:	sbb    eax,0x18000488
   140048679:	hlt    
   14004867a:	(bad)  
   14004867b:	add    BYTE PTR [rsp+rdx*8],dl
   14004867e:	lldt   WORD PTR [rax]
   140048681:	(bad)  
   140048682:	adc    BYTE PTR [rax],al
   140048684:	or     al,0x64
   140048686:	adc    DWORD PTR [rax],eax
   140048688:	or     BYTE PTR [rdx+rdx*1+0x0],dl
   14004868c:	add    al,0x34
   14004868e:	sbb    BYTE PTR [rax],al
   140048690:	adc    BYTE PTR [rdx+rax*1],dl
   140048693:	add    BYTE PTR [rip+0x60000214],bl        # 0x1a00488ad
   140048699:	xchg   BYTE PTR [rax+rax*1],al
   14004869c:	and    DWORD PTR [rdx],edx
   14004869e:	add    al,0x0
   1400486a0:	adc    bh,BYTE PTR [rax+0x5]
   1400486a3:	add    BYTE PTR [rip+0x1d000668],al        # 0x15d048d11
   1400486a9:	adc    al,0x2
   1400486ab:	add    BYTE PTR [rax+0x6c000215],cl
   1400486b1:	xchg   BYTE PTR [rax+rax*1],al
   1400486b4:	and    DWORD PTR [rax],eax
   1400486b6:	add    BYTE PTR [rax],al
   1400486b8:	sbb    eax,0x88000214
   1400486bd:	adc    eax,0x866c0002
   1400486c2:	add    al,0x0
   1400486c4:	and    DWORD PTR [rax],eax
   1400486c6:	add    BYTE PTR [rax],al
   1400486c8:	adc    BYTE PTR [rdx+rax*1],dl
   1400486cb:	add    BYTE PTR [rip+0x60000214],bl        # 0x1a00488e5
   1400486d1:	xchg   BYTE PTR [rax+rax*1],al
   1400486d4:	add    DWORD PTR [rdi],ecx
   1400486d6:	(bad)  
   1400486d7:	add    BYTE PTR [rdi],cl
   1400486d9:	fs (bad) 
   1400486db:	add    BYTE PTR [rdi],cl
   1400486dd:	xor    al,0x6
   1400486df:	add    BYTE PTR [rdi],cl
   1400486e1:	xor    cl,BYTE PTR [rbx]
   1400486e3:	jo     0x1400486e6
   1400486e5:	and    BYTE PTR [rdx],cl
   1400486e7:	add    BYTE PTR [rax],ah
   1400486e9:	push   0x64140002
   1400486ee:	or     eax,DWORD PTR [rax]
   1400486f0:	adc    al,0x54
   1400486f2:	or     al,BYTE PTR [rax]
   1400486f4:	adc    al,0x34
   1400486f6:	or     DWORD PTR [rax],eax
   1400486f8:	adc    al,0x52
   1400486fa:	adc    BYTE PTR [rax+0x1],dh
   1400486fd:	clts   
   1400486ff:	add    BYTE PTR [rdi],cl
   140048701:	fs or  al,0x0
   140048704:	sysenter 
   140048706:	or     eax,DWORD PTR [rax]
   140048708:	(bad)  
   14004870a:	or     esi,DWORD PTR [rax+0x1]
   14004870d:	or     al,BYTE PTR [rax+rax*1]
   140048710:	or     dh,BYTE PTR [rsi+rax*1]
   140048713:	add    BYTE PTR [rdx],cl
   140048715:	xor    al,BYTE PTR [rsi]
   140048717:	jo     0x14004871a
   140048719:	(bad)  
   14004871a:	(bad)  
   14004871b:	add    BYTE PTR [rsi],cl
   14004871d:	xor    al,0x8
   14004871f:	add    BYTE PTR [rsi],cl
   140048721:	adc    cl,BYTE PTR [rdx]
   140048723:	lock or al,ah
   140048726:	(bad)  
   140048727:	push   rax
   140048728:	and    DWORD PTR [rdx],ecx
   14004872a:	add    al,0x0
   14004872c:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   140048730:	add    eax,0xd0000664
   140048735:	(bad)  
   140048736:	add    al,BYTE PTR [rax]
   140048738:	adc    ah,BYTE PTR [rax]
   14004873a:	add    al,BYTE PTR [rax]
   14004873c:	sbb    BYTE PTR [rdi+0x210004],al
   140048742:	add    BYTE PTR [rax],al
   140048744:	rcr    BYTE PTR [rdi],1
   140048746:	add    al,BYTE PTR [rax]
   140048748:	adc    ah,BYTE PTR [rax]
   14004874a:	add    al,BYTE PTR [rax]
   14004874c:	sbb    BYTE PTR [rdi+0x19010004],al
   140048752:	or     al,BYTE PTR [rax]
   140048754:	sbb    DWORD PTR [rbp+rcx*1+0x0],esi
   140048758:	sbb    DWORD PTR [rsp+rcx*1+0x0],esp
   14004875c:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   140048760:	sbb    DWORD PTR [rdx+rcx*1],esi
   140048763:	add    BYTE PTR [rcx],bl
   140048765:	jb     0x14004877c
   140048767:	loopne 0x14004876a
   140048769:	add    al,0x1
   14004876b:	add    BYTE PTR [rdx+rax*2],al
   14004876e:	add    BYTE PTR [rax],al
   140048770:	add    DWORD PTR [rcx+rax*1],eax
   140048773:	add    BYTE PTR [rdx+rax*2],al
   140048776:	add    BYTE PTR [rax],al
   140048778:	add    DWORD PTR [rsi],eax
   14004877a:	add    al,BYTE PTR [rax]
   14004877c:	(bad)  
   14004877d:	xor    al,BYTE PTR [rdx]
   14004877f:	xor    BYTE PTR [rcx],al
   140048781:	(bad)  
   140048782:	add    al,BYTE PTR [rax]
   140048784:	(bad)  
   140048785:	push   rdx
   140048786:	add    dh,BYTE PTR [rax]
   140048788:	and    DWORD PTR [rip+0x54050002],eax        # 0x194098790
   14004878e:	or     BYTE PTR [rax],al
   140048790:	loopne 0x1400487cc
   140048792:	add    al,BYTE PTR [rax]
   140048794:	hlt    
   140048795:	cmp    al,BYTE PTR [rdx]
   140048797:	add    BYTE PTR [rax+0x21000487],al
   14004879d:	add    eax,0x64050002
   1400487a2:	or     DWORD PTR [rax],eax
   1400487a4:	hlt    
   1400487a5:	cmp    al,BYTE PTR [rdx]
   1400487a7:	add    BYTE PTR [rsi],cl
   1400487a9:	cmp    eax,DWORD PTR [rdx]
   1400487ab:	add    BYTE PTR [rax+0x21000487],cl
   1400487b1:	clts   
   1400487b3:	add    BYTE PTR [rdi],cl
   1400487b5:	hlt    
   1400487b6:	add    al,0x0
   1400487b8:	or     ah,ah
   1400487ba:	add    eax,0xa740500
   1400487bf:	add    BYTE PTR [rsi],cl
   1400487c1:	cmp    eax,DWORD PTR [rdx]
   1400487c3:	add    BYTE PTR [rdi],dh
   1400487c5:	cmp    eax,DWORD PTR [rdx]
   1400487c7:	add    BYTE PTR [rdi+rax*4+0x210004],bl
   1400487ce:	add    BYTE PTR [rax],al
   1400487d0:	(bad)  
   1400487d1:	cmp    eax,DWORD PTR [rdx]
   1400487d3:	add    BYTE PTR [rdi],dh
   1400487d5:	cmp    eax,DWORD PTR [rdx]
   1400487d7:	add    BYTE PTR [rdi+rax*4+0x210004],bl
   1400487de:	add    BYTE PTR [rax],al
   1400487e0:	hlt    
   1400487e1:	cmp    al,BYTE PTR [rdx]
   1400487e3:	add    BYTE PTR [rsi],cl
   1400487e5:	cmp    eax,DWORD PTR [rdx]
   1400487e7:	add    BYTE PTR [rax+0x21000487],cl
   1400487ed:	add    BYTE PTR [rax],al
   1400487ef:	add    al,ah
   1400487f1:	cmp    al,BYTE PTR [rdx]
   1400487f3:	add    ah,dh
   1400487f5:	cmp    al,BYTE PTR [rdx]
   1400487f7:	add    BYTE PTR [rax+0x1000487],al
   1400487fd:	sbb    eax,0x681d0008
   140048802:	add    eax,DWORD PTR [rax]
   140048804:	pcmpgtb mm1,QWORD PTR [rax+rax*1]
   140048808:	sysenter 
   14004880a:	or     eax,DWORD PTR [rax]
   14004880c:	(bad)  
   14004880e:	or     esi,DWORD PTR [rax+0x1]
   140048811:	(bad)  
   140048812:	(bad)  
   140048813:	add    BYTE PTR [rsi],bl
   140048815:	add    DWORD PTR [rip+0x16701700],ebx        # 0x156749f1b
   14004881b:	(bad)  
   14004881c:	adc    eax,0x1301450
   140048821:	rex.XB or BYTE PTR [r8],al
   140048824:	rex.XB
   140048825:	fs (bad) 
   140048827:	add    BYTE PTR [rsi],bh
   140048829:	push   rsp
   14004882a:	(bad)  
   14004882b:	add    BYTE PTR [rdi],dh
   14004882d:	xor    al,0xd
   14004882f:	add    BYTE PTR [rdx],cl
   140048831:	jb     0x140048839
   140048833:	jo     0x140048836
   140048835:	or     al,BYTE PTR [rdx]
   140048837:	add    BYTE PTR [rdx],cl
   140048839:	push   rdx
   14004883a:	(bad)  
   14004883b:	xor    BYTE PTR [rcx],ah
   14004883d:	add    eax,0x68050002
   140048842:	add    al,BYTE PTR [rax]
   140048844:	adc    BYTE PTR [rbx],dh
   140048846:	add    al,BYTE PTR [rax]
   140048848:	xor    r8d,DWORD PTR [r10]
   14004884b:	add    BYTE PTR [rax+rcx*4],dh
   14004884e:	add    al,0x0
   140048850:	and    DWORD PTR [rdi],ecx
   140048852:	(bad)  
   140048853:	add    BYTE PTR [rdi],cl
   140048855:	je     0x140048862
   140048857:	add    BYTE PTR [rdx],cl
   140048859:	or     al,BYTE PTR fs:[rax]
   14004885c:	add    eax,0x45000854
   140048861:	xor    eax,DWORD PTR [rdx]
   140048863:	add    BYTE PTR [rbp+0x33],ch
   140048866:	add    al,BYTE PTR [rax]
   140048868:	cmp    al,0x88
   14004886a:	add    al,0x0
   14004886c:	and    DWORD PTR [rax],eax
   14004886e:	add    BYTE PTR [rax],al
   140048870:	xor    r8d,DWORD PTR [r10]
   140048873:	add    BYTE PTR [rbp+0x33],ch
   140048876:	add    al,BYTE PTR [rax]
   140048878:	cmp    al,0x88
   14004887a:	add    al,0x0
   14004887c:	and    DWORD PTR [rax],eax
   14004887e:	add    BYTE PTR [rax],al
   140048880:	adc    BYTE PTR [rbx],dh
   140048882:	add    al,BYTE PTR [rax]
   140048884:	xor    r8d,DWORD PTR [r10]
   140048887:	add    BYTE PTR [rax+rcx*4],dh
   14004888a:	add    al,0x0
   14004888c:	add    DWORD PTR [rdi],ecx
   14004888e:	add    al,0x0
   140048890:	pcmpgtb mm1,QWORD PTR [rax]
   140048893:	add    BYTE PTR [rdi],cl
   140048895:	xor    cl,BYTE PTR [rbx]
   140048897:	jo     0x1400488ba
   140048899:	add    eax,0x34050002
   14004889e:	(bad)  
   14004889f:	add    BYTE PTR [rax],dh
   1400488a1:	xor    al,BYTE PTR [rdx]
   1400488a3:	add    BYTE PTR [rax+0x32],dh
   1400488a6:	add    al,BYTE PTR [rax]
   1400488a8:	mov    WORD PTR [rax+0x210004],cs
   1400488ae:	add    BYTE PTR [rax],al
   1400488b0:	xor    BYTE PTR [rdx],dh
   1400488b2:	add    al,BYTE PTR [rax]
   1400488b4:	jo     0x1400488e8
   1400488b6:	add    al,BYTE PTR [rax]
   1400488b8:	mov    WORD PTR [rax+0xa010004],cs
   1400488be:	add    al,0x0
   1400488c0:	or     dl,BYTE PTR [rax+rcx*1+0x0]
   1400488c4:	or     dh,BYTE PTR [rdx]
   1400488c6:	(bad)  
   1400488c7:	(bad)  
   1400488c8:	and    DWORD PTR [rcx],edx
   1400488ca:	add    al,0x0
   1400488cc:	adc    DWORD PTR [rdi+rax*1+0x0],esi
   1400488d0:	add    eax,0x60000634
   1400488d5:	sub    al,0x2
   1400488d7:	add    BYTE PTR [rdi-0x43fffdd4],ah
   1400488dd:	mov    BYTE PTR [rax+rax*1],al
   1400488e0:	and    DWORD PTR [rax],eax
   1400488e2:	add    al,BYTE PTR [rax]
   1400488e4:	add    BYTE PTR [rsi+rax*1],dh
   1400488e7:	add    BYTE PTR [rax+0x2c],ah
   1400488ea:	add    al,BYTE PTR [rax]
   1400488ec:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400488ed:	sub    al,0x2
   1400488ef:	add    BYTE PTR [rax+rcx*4+0xf010004],bh
   1400488f6:	(bad)  
   1400488f7:	add    BYTE PTR [rdi],cl
   1400488f9:	or     al,BYTE PTR fs:[rax]
   1400488fc:	andps  xmm1,XMMWORD PTR [rcx]
   1400488ff:	add    BYTE PTR [rdi],cl
   140048901:	push   rdx
   140048902:	or     esi,DWORD PTR [rax+0x21]
   140048905:	add    eax,0x34050002
   14004890a:	or     BYTE PTR [rax],al
   14004890c:	and    BYTE PTR [rax],ch
   14004890e:	add    al,BYTE PTR [rax]
   140048910:	scas   eax,DWORD PTR es:[rdi]
   140048911:	sub    BYTE PTR [rdx],al
   140048913:	add    ah,dh
   140048915:	mov    BYTE PTR [rax+rax*1],al
   140048918:	and    DWORD PTR [rax],eax
   14004891a:	add    BYTE PTR [rax],al
   14004891c:	and    BYTE PTR [rax],ch
   14004891e:	add    al,BYTE PTR [rax]
   140048920:	scas   eax,DWORD PTR es:[rdi]
   140048921:	sub    BYTE PTR [rdx],al
   140048923:	add    ah,dh
   140048925:	mov    BYTE PTR [rax+rax*1],al
   140048928:	add    DWORD PTR [rsi],eax
   14004892a:	add    al,BYTE PTR [rax]
   14004892c:	(bad)  
   14004892d:	xor    al,BYTE PTR [rdx]
   14004892f:	jo     0x140048952
   140048931:	add    eax,0x34050002
   140048936:	(bad)  
   140048937:	add    BYTE PTR [rax+0x3c],al
   14004893a:	add    al,BYTE PTR [rax]
   14004893c:	gs cmp al,0x2
   14004893f:	add    BYTE PTR [rax],ch
   140048941:	mov    DWORD PTR [rax+rax*1],eax
   140048944:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a409894c
   14004894a:	(bad)  
   14004894b:	add    BYTE PTR [rbp+0x3c],ah
   14004894e:	add    al,BYTE PTR [rax]
   140048950:	push   0x3c
   140048952:	add    al,BYTE PTR [rax]
   140048954:	xor    BYTE PTR [rcx+0x210004],cl
   14004895a:	add    BYTE PTR [rax],al
   14004895c:	gs cmp al,0x2
   14004895f:	add    BYTE PTR [rdx+0x3c],ch
   140048962:	add    al,BYTE PTR [rax]
   140048964:	xor    BYTE PTR [rcx+0x210004],cl
   14004896a:	add    BYTE PTR [rax],al
   14004896c:	cmp    al,0x2
   14004896f:	add    BYTE PTR [rbp+0x3c],ah
   140048972:	add    al,BYTE PTR [rax]
   140048974:	sub    BYTE PTR [rcx+0xa010004],cl
   14004897a:	add    al,0x0
   14004897c:	or     dh,BYTE PTR [rax+rcx*1]
   14004897f:	add    BYTE PTR [rdx],cl
   140048981:	push   rdx
   140048982:	(bad)  
   140048983:	jo     0x140048986
   140048985:	or     eax,DWORD PTR [rax+rax*1]
   140048988:	or     edx,DWORD PTR [rdx+0x30037004]
   14004898e:	add    dl,BYTE PTR [rax+0x21]
   140048991:	or     BYTE PTR [rdx],al
   140048993:	add    BYTE PTR [rax],cl
   140048995:	in     al,0x10
   140048997:	add    BYTE PTR [rax],dh
   140048999:	(bad)  
   14004899a:	add    al,BYTE PTR [rax]
   14004899c:	popf   
   14004899d:	(bad)  
   14004899e:	add    al,BYTE PTR [rax]
   1400489a0:	test   BYTE PTR [rcx+0x5210004],cl
   1400489a6:	add    al,BYTE PTR [rax]
   1400489a8:	add    eax,0x9d000f64
   1400489ad:	(bad)  
   1400489ae:	add    al,BYTE PTR [rax]
   1400489b0:	mov    dl,0x3f
   1400489b2:	add    al,BYTE PTR [rax]
   1400489b4:	nop
   1400489b5:	mov    DWORD PTR [rax+rax*1],eax
   1400489b8:	and    DWORD PTR [rax],eax
   1400489ba:	add    BYTE PTR [rax],al
   1400489bc:	popf   
   1400489bd:	(bad)  
   1400489be:	add    al,BYTE PTR [rax]
   1400489c0:	mov    dl,0x3f
   1400489c2:	add    al,BYTE PTR [rax]
   1400489c4:	nop
   1400489c5:	mov    DWORD PTR [rax+rax*1],eax
   1400489c8:	and    DWORD PTR [rax],eax
   1400489ca:	add    BYTE PTR [rax],al
   1400489cc:	xor    BYTE PTR [rdi],bh
   1400489ce:	add    al,BYTE PTR [rax]
   1400489d0:	popf   
   1400489d1:	(bad)  
   1400489d2:	add    al,BYTE PTR [rax]
   1400489d4:	test   BYTE PTR [rcx+0x15010004],cl
   1400489da:	or     BYTE PTR [rax],al
   1400489dc:	adc    eax,0x150009e4
   1400489e1:	je     0x1400489eb
   1400489e3:	add    BYTE PTR [rip+0x15000764],dl        # 0x15504914d
   1400489e9:	xor    dl,BYTE PTR [rcx]
   1400489eb:	lock add DWORD PTR [rdx],ecx
   1400489ee:	add    al,0x0
   1400489f0:	or     dh,BYTE PTR [rbx+rcx*1]
   1400489f3:	add    BYTE PTR [rdx],cl
   1400489f5:	push   rdx
   1400489f6:	(bad)  
   1400489f7:	jo     0x140048a1a
   1400489f9:	add    eax,0x64050002
   1400489fe:	or     al,BYTE PTR [rax]
   140048a00:	add    BYTE PTR [rdx+rax*1+0x0],0x6e
   140048a05:	add    r8b,BYTE PTR [r8]
   140048a08:	in     al,dx
   140048a09:	mov    DWORD PTR [rax+rax*1],eax
   140048a0c:	and    DWORD PTR [rax],eax
   140048a0e:	add    BYTE PTR [rax],al
   140048a10:	add    BYTE PTR [rdx+rax*1+0x0],0x6e
   140048a15:	add    r8b,BYTE PTR [r8]
   140048a18:	in     al,dx
   140048a19:	mov    DWORD PTR [rax+rax*1],eax
   140048a1c:	add    DWORD PTR [rsi],ecx
   140048a1e:	add    al,0x0
   140048a20:	(bad)  
   140048a21:	jb     0x140048a2a
   140048a23:	(bad)  
   140048a24:	(bad)  
   140048a25:	xor    BYTE PTR [rip+0x2052150],al        # 0x14209ab7b
   140048a2b:	add    BYTE PTR [rip+0x40000e74],al        # 0x1800498a5
   140048a31:	rex.RX add r8b,BYTE PTR [rax]
   140048a34:	or     al,0x48
   140048a36:	add    al,BYTE PTR [rax]
   140048a38:	sbb    al,0x8a
   140048a3a:	add    al,0x0
   140048a3c:	and    DWORD PTR [rax],eax
   140048a3e:	add    BYTE PTR [rax],al
   140048a40:	rex
   140048a41:	rex.RX add r8b,BYTE PTR [rax]
   140048a44:	or     al,0x48
   140048a46:	add    al,BYTE PTR [rax]
   140048a48:	sbb    al,0x8a
   140048a4a:	add    al,0x0
   140048a4c:	add    DWORD PTR [rdx],ecx
   140048a4e:	add    al,0x0
   140048a50:	or     dh,BYTE PTR [rbx+rcx*1]
   140048a53:	add    BYTE PTR [rdx],cl
   140048a55:	push   rdx
   140048a56:	(bad)  
   140048a57:	jo     0x140048a7a
   140048a59:	add    eax,0x64050002
   140048a5e:	or     al,BYTE PTR [rax]
   140048a60:	and    BYTE PTR [rbx+0x2],al
   140048a63:	add    BYTE PTR [rbx],bh
   140048a65:	add    r8b,BYTE PTR [rax]
   140048a68:	rex.WR mov r8b,BYTE PTR [rax+rax*1]
   140048a6c:	and    DWORD PTR [rax],eax
   140048a6e:	add    BYTE PTR [rax],al
   140048a70:	and    BYTE PTR [rbx+0x2],al
   140048a73:	add    BYTE PTR [rbx],bh
   140048a75:	add    r8b,BYTE PTR [rax]
   140048a78:	rex.WR mov r8b,BYTE PTR [rax+rax*1]
   140048a7c:	add    DWORD PTR [rdi],ecx
   140048a7e:	(bad)  
   140048a7f:	add    BYTE PTR [rdi],cl
   140048a81:	or     DWORD PTR fs:[rax],eax
   140048a84:	andps  xmm1,XMMWORD PTR [rax]
   140048a87:	add    BYTE PTR [rdi],cl
   140048a89:	xor    cl,BYTE PTR [rbx]
   140048a8b:	jo     0x140048aae
   140048a8d:	add    eax,0x34050002
   140048a92:	(bad)  
   140048a93:	add    BYTE PTR [rax+0x48],dl
   140048a96:	add    al,BYTE PTR [rax]
   140048a98:	jbe    0x140048ae2
   140048a9a:	add    al,BYTE PTR [rax]
   140048a9c:	jl     0x140048a28
   140048a9e:	add    al,0x0
   140048aa0:	and    DWORD PTR [rax],eax
   140048aa2:	add    BYTE PTR [rax],al
   140048aa4:	push   rax
   140048aa5:	rex.W add al,BYTE PTR [rax]
   140048aa8:	jbe    0x140048af2
   140048aaa:	add    al,BYTE PTR [rax]
   140048aac:	jl     0x140048a38
   140048aae:	add    al,0x0
   140048ab0:	add    DWORD PTR [rsi],eax
   140048ab2:	add    al,BYTE PTR [rax]
   140048ab4:	(bad)  
   140048ab5:	push   rdx
   140048ab6:	add    dh,BYTE PTR [rax]
   140048ab8:	add    DWORD PTR [rcx],ebx
   140048aba:	or     al,BYTE PTR [rax]
   140048abc:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140048ac0:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140048ac4:	sbb    DWORD PTR [rax+rcx*1],esi
   140048ac7:	add    BYTE PTR [rcx],bl
   140048ac9:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e49ebf
   140048acf:	rol    BYTE PTR [rcx],0x36
   140048ad2:	(bad)  
   140048ad4:	ss call 0x1182d8ade
   140048ada:	add    eax,0x9982300
   140048adf:	add    BYTE PTR [rsi],bl
   140048ae1:	mov    BYTE PTR [rdx],cl
   140048ae3:	add    BYTE PTR [rcx],bl
   140048ae5:	xor    al,0x20
   140048ae7:	add    BYTE PTR [rcx],bl
   140048ae9:	add    DWORD PTR [rdx],ebx
   140048aeb:	add    BYTE PTR [rsi],cl
   140048aed:	jo     0x140048afc
   140048aef:	(bad)  
   140048af0:	or     al,0x50
   140048af2:	add    BYTE PTR [rax],al
   140048af4:	and    DWORD PTR [rip+0xffffffffc825000a],esp        # 0x108298b04
   140048afa:	(bad)  
   140048afb:	add    BYTE PTR [rdi],bl
   140048afd:	mov    eax,0xa81a0007
   140048b02:	or     BYTE PTR [rax],al
   140048b04:	or     BYTE PTR [rax+0xb],bh
   140048b07:	add    BYTE PTR [rax+rbp*2],al
   140048b0a:	or     al,0x0
   140048b0c:	mov    al,0x54
   140048b0e:	add    al,BYTE PTR [rax]
   140048b10:	out    0x54,al
   140048b12:	add    al,BYTE PTR [rax]
   140048b14:	ror    BYTE PTR [rdx+0x210004],1
   140048b1a:	add    BYTE PTR [rax],al
   140048b1c:	mov    al,0x54
   140048b1e:	add    al,BYTE PTR [rax]
   140048b20:	out    0x54,al
   140048b22:	add    al,BYTE PTR [rax]
   140048b24:	ror    BYTE PTR [rdx+0x8210004],1
   140048b2a:	add    al,BYTE PTR [rax]
   140048b2c:	or     ah,ah
   140048b2e:	(bad)  
   140048b2f:	add    BYTE PTR [rsi],ch
   140048b31:	pop    rdi
   140048b32:	add    al,BYTE PTR [rax]
   140048b34:	(bad)  
   140048b35:	pop    rdi
   140048b36:	add    al,BYTE PTR [rax]
   140048b38:	sbb    BYTE PTR [rbx+0x210004],cl
   140048b3e:	add    BYTE PTR [rax],al
   140048b40:	cs pop rdi
   140048b42:	add    al,BYTE PTR [rax]
   140048b44:	(bad)  
   140048b45:	pop    rdi
   140048b46:	add    al,BYTE PTR [rax]
   140048b48:	sbb    BYTE PTR [rbx+0x6010004],cl
   140048b4e:	add    al,BYTE PTR [rax]
   140048b50:	(bad)  
   140048b51:	xor    al,BYTE PTR [rdx]
   140048b53:	xor    BYTE PTR [rcx],al
   140048b55:	rex.RX adc r8d,DWORD PTR [rax]
   140048b58:	rex.RX enter 0xc,0x3e
   140048b5d:	test   al,0xe
   140048b5f:	add    BYTE PTR [rsi],ah
   140048b61:	mov    BYTE PTR [rax],dl
   140048b63:	add    BYTE PTR [rcx],ah
   140048b65:	js     0x140048b78
   140048b67:	add    BYTE PTR [rip+0x19001268],bl        # 0x159049dd5
   140048b6d:	xor    al,0x2e
   140048b6f:	add    BYTE PTR [rcx],bl
   140048b71:	add    DWORD PTR [rsi],esp
   140048b73:	add    BYTE PTR [rsi],cl
   140048b75:	lock or al,0xd0
   140048b78:	or     dh,BYTE PTR [rax+0x9]
   140048b7b:	(bad)  
   140048b7c:	or     BYTE PTR [rax+0x0],dl
   140048b7f:	add    BYTE PTR [rcx],ah
   140048b81:	(bad)  
   140048b82:	or     BYTE PTR [rax],al
   140048b84:	(bad)  
   140048b85:	mov    eax,0x9817000d
   140048b8a:	str    WORD PTR [rax]
   140048b8d:	in     al,0x2d
   140048b8f:	add    BYTE PTR [rsp+rax*8],al
   140048b92:	sub    al,0x0
   140048b94:	push   rax
   140048b95:	rex.WB add al,BYTE PTR [r8]
   140048b98:	xchg   esi,eax
   140048b99:	rex.WB add al,BYTE PTR [r8]
   140048b9c:	push   rsp
   140048b9d:	mov    eax,DWORD PTR [rax+rax*1]
   140048ba0:	and    DWORD PTR [rax],eax
   140048ba2:	add    al,0x0
   140048ba4:	add    BYTE PTR [rax-0x67fffff3],bh
   140048baa:	lldt   WORD PTR [rax+0x49]
   140048bae:	add    al,BYTE PTR [rax]
   140048bb0:	xchg   esi,eax
   140048bb1:	rex.WB add al,BYTE PTR [r8]
   140048bb4:	push   rsp
   140048bb5:	mov    eax,DWORD PTR [rax+rax*1]
   140048bb8:	and    DWORD PTR [rax],eax
   140048bba:	add    al,BYTE PTR [rax]
   140048bbc:	add    BYTE PTR [rax+0x4950000d],bh
   140048bc2:	add    al,BYTE PTR [rax]
   140048bc4:	xchg   esi,eax
   140048bc5:	rex.WB add al,BYTE PTR [r8]
   140048bc8:	push   rsp
   140048bc9:	mov    eax,DWORD PTR [rax+rax*1]
   140048bcc:	add    DWORD PTR [rsi+0x13],eax
   140048bcf:	add    BYTE PTR [rsi-0x38],al
   140048bd2:	or     al,0x0
   140048bd4:	ds test al,0xe
   140048bd7:	add    BYTE PTR [rsi],ah
   140048bd9:	mov    BYTE PTR [rax],dl
   140048bdb:	add    BYTE PTR [rcx],ah
   140048bdd:	js     0x140048bf0
   140048bdf:	add    BYTE PTR [rip+0x19001268],bl        # 0x159049e4d
   140048be5:	xor    al,0x2e
   140048be7:	add    BYTE PTR [rcx],bl
   140048be9:	add    DWORD PTR [rsi],esp
   140048beb:	add    BYTE PTR [rsi],cl
   140048bed:	lock or al,0xd0
   140048bf0:	or     dh,BYTE PTR [rax+0x9]
   140048bf3:	(bad)  
   140048bf4:	or     BYTE PTR [rax+0x0],dl
   140048bf7:	add    BYTE PTR [rcx],ah
   140048bf9:	(bad)  
   140048bfa:	or     BYTE PTR [rax],al
   140048bfc:	(bad)  
   140048bfd:	mov    eax,0x9817000d
   140048c02:	str    WORD PTR [rax]
   140048c05:	in     al,0x2d
   140048c07:	add    BYTE PTR [rsp+rax*8],al
   140048c0a:	sub    al,0x0
   140048c0c:	add    BYTE PTR [rsi+0x2],cl
   140048c0f:	add    BYTE PTR [rsi+0x4e],al
   140048c12:	add    al,BYTE PTR [rax]
   140048c14:	int3   
   140048c15:	mov    eax,DWORD PTR [rax+rax*1]
   140048c18:	and    DWORD PTR [rax],eax
   140048c1a:	add    al,0x0
   140048c1c:	add    BYTE PTR [rax-0x67fffff3],bh
   140048c22:	sldt   WORD PTR [rax]
   140048c25:	rex.WRX add r8b,BYTE PTR [rax]
   140048c28:	rex.RX
   140048c29:	rex.WRX add r8b,BYTE PTR [rax]
   140048c2c:	int3   
   140048c2d:	mov    eax,DWORD PTR [rax+rax*1]
   140048c30:	and    DWORD PTR [rax],eax
   140048c32:	add    al,BYTE PTR [rax]
   140048c34:	add    BYTE PTR [rax+0x4e00000d],bh
   140048c3a:	add    al,BYTE PTR [rax]
   140048c3c:	rex.RX
   140048c3d:	rex.WRX add r8b,BYTE PTR [rax]
   140048c40:	int3   
   140048c41:	mov    eax,DWORD PTR [rax+rax*1]
   140048c44:	add    DWORD PTR [rdx],ebp
   140048c46:	or     BYTE PTR [rax],al
   140048c48:	sub    bh,BYTE PTR [rax+0x2]
   140048c4b:	add    BYTE PTR [rip+0xa000368],dl        # 0x14a048fb9
   140048c51:	xor    al,0xb
   140048c53:	add    BYTE PTR [rdx],cl
   140048c55:	jb     0x140048c5d
   140048c57:	jo     0x140048c5a
   140048c59:	adc    ecx,DWORD PTR [rax]
   140048c5b:	add    BYTE PTR [rbx],dl
   140048c5d:	or     al,BYTE PTR fs:[rax]
   140048c60:	adc    esi,DWORD PTR [rcx+rcx*1]
   140048c63:	add    BYTE PTR [rbx],dl
   140048c65:	xor    cl,BYTE PTR [rdi]
   140048c67:	lock or eax,0x21700be0
   140048c6d:	add    eax,0x54050002
   140048c72:	or     BYTE PTR [rax],al
   140048c74:	rex (bad) 
   140048c76:	add    al,BYTE PTR [rax]
   140048c78:	ins    DWORD PTR es:[rdi],dx
   140048c79:	(bad)  
   140048c7a:	add    al,BYTE PTR [rax]
   140048c7c:	pop    rax
   140048c7d:	mov    WORD PTR [rax+rax*1],es
   140048c80:	and    DWORD PTR [rax],eax
   140048c82:	add    BYTE PTR [rax],al
   140048c84:	rex (bad) 
   140048c86:	add    al,BYTE PTR [rax]
   140048c88:	ins    DWORD PTR es:[rdi],dx
   140048c89:	(bad)  
   140048c8a:	add    al,BYTE PTR [rax]
   140048c8c:	pop    rax
   140048c8d:	mov    WORD PTR [rax+rax*1],es
   140048c90:	add    DWORD PTR [rip+0x1150008],edx        # 0x141198c9e
   140048c96:	(bad)  
   140048c97:	add    BYTE PTR [rcx],cl
   140048c99:	loopne 0x140048ca2
   140048c9b:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143649112
   140048ca2:	add    dl,BYTE PTR [rax+0x21]
   140048ca5:	or     BYTE PTR [rdx],al
   140048ca7:	add    BYTE PTR [rax],cl
   140048ca9:	push   0x6220000e
   140048cae:	add    al,BYTE PTR [rax]
   140048cb0:	(bad)  
   140048cb1:	add    al,BYTE PTR fs:[rax]
   140048cb4:	nop
   140048cb5:	mov    WORD PTR [rax+rax*1],es
   140048cb8:	and    DWORD PTR [rax],ecx
   140048cba:	add    al,BYTE PTR [rax]
   140048cbc:	or     ah,dh
   140048cbe:	(bad)  
   140048cbf:	add    BYTE PTR [rdx-0x5dfffd9c],al
   140048cc5:	add    al,BYTE PTR fs:[rax]
   140048cc8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140048cc9:	mov    WORD PTR [rax+rax*1],es
   140048ccc:	and    DWORD PTR [rax],eax
   140048cce:	add    BYTE PTR [rax],al
   140048cd0:	(bad)  
   140048cd1:	add    al,BYTE PTR fs:[rax]
   140048cd4:	movabs ds:0x2100048ca4000264,al
   140048cdd:	add    BYTE PTR [rax],al
   140048cdf:	add    BYTE PTR [rax],ah
   140048ce1:	(bad)  
   140048ce3:	add    BYTE PTR [rdx-0x6ffffd9c],al
   140048ce9:	mov    WORD PTR [rax+rax*1],es
   140048cec:	add    DWORD PTR [rbx],ecx
   140048cee:	add    eax,DWORD PTR [rax]
   140048cf0:	or     ebp,DWORD PTR [rax+0x0]
   140048cf3:	add    BYTE PTR [rdx+riz*1],al
   140048cf6:	add    BYTE PTR [rax],al
   140048cf8:	add    DWORD PTR [rdx],esi
   140048cfa:	(bad)  
   140048cfb:	add    BYTE PTR [rdx],dh
   140048cfd:	js     0x140048d02
   140048cff:	add    BYTE PTR [rip+0xd0000a8],dl        # 0x14d048dad
   140048d05:	push   0xffffffffa2040004
   140048d0a:	add    BYTE PTR [rax],al
   140048d0c:	and    DWORD PTR [rsp+rax*1],ecx
   140048d0f:	add    BYTE PTR [rax+rbx*4],cl
   140048d12:	add    DWORD PTR [rax],eax
   140048d14:	(bad)  
   140048d15:	mov    BYTE PTR [rdx],al
   140048d17:	add    BYTE PTR [rax],dl
   140048d19:	ins    BYTE PTR es:[rdi],dx
   140048d1a:	add    al,BYTE PTR [rax]
   140048d1c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140048d1d:	ins    BYTE PTR es:[rdi],dx
   140048d1e:	add    al,BYTE PTR [rax]
   140048d20:	clc    
   140048d21:	mov    WORD PTR [rax+rax*1],es
   140048d24:	and    DWORD PTR [rax],eax
   140048d26:	add    BYTE PTR [rax],al
   140048d28:	adc    BYTE PTR [rdx+rax*1+0x0],ch
   140048d2c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140048d2d:	ins    BYTE PTR es:[rdi],dx
   140048d2e:	add    al,BYTE PTR [rax]
   140048d30:	clc    
   140048d31:	mov    WORD PTR [rax+rax*1],es
   140048d34:	add    DWORD PTR [rsi],eax
   140048d36:	add    al,BYTE PTR [rax]
   140048d38:	(bad)  
   140048d39:	xor    al,BYTE PTR [rdx]
   140048d3b:	xor    BYTE PTR [rcx],al
   140048d3d:	or     al,BYTE PTR [rax+rax*1]
   140048d40:	or     dh,BYTE PTR [rsi+rax*1]
   140048d43:	add    BYTE PTR [rdx],cl
   140048d45:	xor    al,BYTE PTR [rsi]
   140048d47:	jo     0x140048d4a
   140048d49:	or     DWORD PTR [rdx],eax
   140048d4b:	add    BYTE PTR [rcx],cl
   140048d4d:	xor    al,BYTE PTR [rip+0x2052170]        # 0x14209aec3
   140048d53:	add    BYTE PTR [rip+0x40000634],al        # 0x18004938d
   140048d59:	ja     0x140048d5d
   140048d5b:	add    BYTE PTR [rax+0x77],dl
   140048d5e:	add    al,BYTE PTR [rax]
   140048d60:	lea    rax,[rax+rax*1]
   140048d64:	and    DWORD PTR [rax],eax
   140048d66:	add    BYTE PTR [rax],al
   140048d68:	rex ja 0x140048d6d
   140048d6b:	add    BYTE PTR [rax+0x77],dl
   140048d6e:	add    al,BYTE PTR [rax]
   140048d70:	lea    rax,[rax+rax*1]
   140048d74:	add    DWORD PTR [rcx+rax*1],eax
   140048d77:	add    BYTE PTR [rdx+rax*2],al
   140048d7a:	add    BYTE PTR [rax],al
   140048d7c:	add    DWORD PTR [rcx+rax*1],eax
   140048d7f:	add    BYTE PTR [rdx+rax*2],al
   140048d82:	add    BYTE PTR [rax],al
   140048d84:	add    DWORD PTR [rdx],ecx
   140048d86:	add    al,0x0
   140048d88:	or     dh,BYTE PTR [rsi+rax*1]
   140048d8b:	add    BYTE PTR [rdx],cl
   140048d8d:	xor    al,BYTE PTR [rsi]
   140048d8f:	jo     0x140048d92
   140048d91:	adc    al,0x8
   140048d93:	add    BYTE PTR [rsp+riz*2],dl
   140048d96:	or     BYTE PTR [rax],al
   140048d98:	adc    al,0x54
   140048d9a:	(bad)  
   140048d9b:	add    BYTE PTR [rsp+rsi*1],dl
   140048d9e:	(bad)  
   140048d9f:	add    BYTE PTR [rdx+rsi*1],dl
   140048da2:	adc    BYTE PTR [rax+0x1],dh
   140048da5:	or     eax,0x320d0006
   140048daa:	or     eax,esi
   140048dac:	(bad)  
   140048dad:	rol    BYTE PTR [rip+0x26003c0],1        # 0x142649173
   140048db3:	push   rax
   140048db4:	and    DWORD PTR [rdi],ecx
   140048db6:	(bad)  
   140048db7:	add    BYTE PTR [rdi],cl
   140048db9:	in     al,0xc
   140048dbb:	add    BYTE PTR [rdx],cl
   140048dbd:	je     0x140048dca
   140048dbf:	add    BYTE PTR [rip+0xffffffff80000a34],al        # 0xc00497f9
   140048dc5:	jae    0x140048dc9
   140048dc7:	add    BYTE PTR [rbp-0x5bfffd8d],ch
   140048dcd:	lea    eax,[rax+rax*1]
   140048dd0:	and    DWORD PTR [rax],eax
   140048dd2:	add    BYTE PTR [rax],al
   140048dd4:	xor    BYTE PTR [rbx+0x2],0x0
   140048dd8:	lods   eax,DWORD PTR ds:[rsi]
   140048dd9:	jae    0x140048ddd
   140048ddb:	add    BYTE PTR [rbp+rcx*4+0xa010004],ah
   140048de2:	add    al,0x0
   140048de4:	or     dh,BYTE PTR [rdi+rax*1]
   140048de7:	add    BYTE PTR [rdx],cl
   140048de9:	xor    al,BYTE PTR [rsi]
   140048deb:	(bad)  
   140048dec:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4098df4
   140048df2:	(bad)  
   140048df3:	add    al,ah
   140048df5:	jno    0x140048df9
   140048df7:	add    BYTE PTR [rdi],al
   140048df9:	jb     0x140048dfd
   140048dfb:	add    al,ah
   140048dfd:	lea    eax,[rax+rax*1]
   140048e00:	and    DWORD PTR [rax],eax
   140048e02:	add    BYTE PTR [rax],al
   140048e04:	loopne 0x140048e77
   140048e06:	add    al,BYTE PTR [rax]
   140048e08:	(bad)  
   140048e09:	jb     0x140048e0d
   140048e0b:	add    al,ah
   140048e0d:	lea    eax,[rax+rax*1]
   140048e10:	add    DWORD PTR [rdi],ecx
   140048e12:	(bad)  
   140048e13:	add    BYTE PTR [rdi],cl
   140048e15:	fs (bad) 
   140048e17:	add    BYTE PTR [rdi],cl
   140048e19:	xor    al,0x6
   140048e1b:	add    BYTE PTR [rdi],cl
   140048e1d:	xor    cl,BYTE PTR [rbx]
   140048e1f:	jo     0x140048e22
   140048e21:	or     eax,DWORD PTR [rax+rax*1]
   140048e24:	or     edx,DWORD PTR [rcx+rcx*1+0x0]
   140048e28:	or     esi,DWORD PTR [rdx]
   140048e2a:	(bad)  
   140048e2b:	loopne 0x140048e4e
   140048e2d:	add    eax,0x64050002
   140048e32:	(bad)  
   140048e33:	add    BYTE PTR [rax+0x6f],dh
   140048e36:	add    al,BYTE PTR [rax]
   140048e38:	xchg   edx,eax
   140048e39:	outs   dx,DWORD PTR ds:[rsi]
   140048e3a:	add    al,BYTE PTR [rax]
   140048e3c:	and    BYTE PTR [rsi+0xa210004],cl
   140048e42:	add    al,0x0
   140048e44:	or     dh,BYTE PTR [rax+rcx*1+0x0]
   140048e48:	add    eax,0x92000634
   140048e4d:	outs   dx,DWORD PTR ds:[rsi]
   140048e4e:	add    al,BYTE PTR [rax]
   140048e50:	test   al,0x6f
   140048e52:	add    al,BYTE PTR [rax]
   140048e54:	sub    al,0x8e
   140048e56:	add    al,0x0
   140048e58:	and    DWORD PTR [rax],eax
   140048e5a:	add    BYTE PTR [rax],al
   140048e5c:	xchg   edx,eax
   140048e5d:	outs   dx,DWORD PTR ds:[rsi]
   140048e5e:	add    al,BYTE PTR [rax]
   140048e60:	test   al,0x6f
   140048e62:	add    al,BYTE PTR [rax]
   140048e64:	sub    al,0x8e
   140048e66:	add    al,0x0
   140048e68:	and    DWORD PTR [rax],eax
   140048e6a:	add    BYTE PTR [rax],al
   140048e6c:	jo     0x140048edd
   140048e6e:	add    al,BYTE PTR [rax]
   140048e70:	xchg   edx,eax
   140048e71:	outs   dx,DWORD PTR ds:[rsi]
   140048e72:	add    al,BYTE PTR [rax]
   140048e74:	and    BYTE PTR [rsi-0x7dfefffc],cl
   140048e7a:	or     al,BYTE PTR [rax]
   140048e7c:	(bad)  
   140048e7d:	in     al,0x9
   140048e7f:	add    BYTE PTR [rbp+0x64],bh
   140048e82:	or     BYTE PTR [rax],al
   140048e84:	or     eax,0xd000a34
   140048e89:	xor    cl,BYTE PTR [rcx]
   140048e8b:	lock (bad) 
   140048e8d:	jo     0x140048e95
   140048e8f:	push   rax
   140048e90:	add    esp,eax
   140048e92:	or     al,BYTE PTR [rax]
   140048e94:	(bad)  
   140048e95:	in     al,0x8
   140048e97:	add    BYTE PTR [rdx],dl
   140048e99:	push   rsp
   140048e9a:	or     al,BYTE PTR [rax]
   140048e9c:	adc    dh,BYTE PTR [rcx+rcx*1]
   140048e9f:	add    BYTE PTR [rdx],dl
   140048ea1:	xor    cl,BYTE PTR [rsi]
   140048ea3:	lock or al,0x70
   140048ea6:	or     esp,DWORD PTR [rax+0x1]
   140048ea9:	adc    al,0x8
   140048eab:	add    BYTE PTR [rsp+riz*2],dl
   140048eae:	or     al,BYTE PTR [rax]
   140048eb0:	adc    al,0x54
   140048eb2:	or     DWORD PTR [rax],eax
   140048eb4:	adc    al,0x34
   140048eb6:	or     BYTE PTR [rax],al
   140048eb8:	adc    al,0x52
   140048eba:	adc    BYTE PTR [rax+0x1],dh
   140048ebd:	(bad)  
   140048ebe:	add    al,BYTE PTR [rax]
   140048ec0:	(bad)  
   140048ec1:	xor    al,BYTE PTR [rdx]
   140048ec3:	xor    BYTE PTR [rcx],al
   140048ec5:	(bad)  
   140048ec6:	add    al,BYTE PTR [rax]
   140048ec8:	(bad)  
   140048ec9:	xor    al,BYTE PTR [rdx]
   140048ecb:	xor    BYTE PTR [rcx],al
   140048ecd:	and    cl,BYTE PTR [rdx]
   140048ecf:	add    BYTE PTR [rdx],ah
   140048ed1:	add    DWORD PTR [rip+0xbf00d02],eax        # 0x14bf49bd9
   140048ed7:	loopne 0x140048ee2
   140048ed9:	rol    BYTE PTR [rdi],1
   140048edb:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143649352
   140048ee2:	add    dl,BYTE PTR [rax+0x21]
   140048ee5:	or     BYTE PTR [rdx],al
   140048ee7:	add    BYTE PTR [rax],cl
   140048ee9:	push   0x7a200101
   140048eee:	add    al,BYTE PTR [rax]
   140048ef0:	(bad)  
   140048ef1:	jp     0x140048ef5
   140048ef3:	add    ah,cl
   140048ef5:	mov    es,WORD PTR [rax+rax*1]
   140048ef8:	and    DWORD PTR [rax],eax
   140048efa:	add    BYTE PTR [rax],al
   140048efc:	and    BYTE PTR [rdx+0x2],bh
   140048eff:	add    BYTE PTR [rcx+0x7a],ah
   140048f02:	add    al,BYTE PTR [rax]
   140048f04:	int3   
   140048f05:	mov    es,WORD PTR [rax+rax*1]
   140048f08:	add    DWORD PTR [rcx+rax*1],eax
   140048f0b:	add    BYTE PTR [rdx+rax*2],al
   140048f0e:	add    BYTE PTR [rax],al
   140048f10:	add    DWORD PTR [rsi],eax
   140048f12:	add    al,BYTE PTR [rax]
   140048f14:	(bad)  
   140048f15:	xor    al,BYTE PTR [rdx]
   140048f17:	xor    BYTE PTR [rcx],al
   140048f19:	add    al,0x1
   140048f1b:	add    BYTE PTR [rdx+rax*2],al
   140048f1e:	add    BYTE PTR [rax],al
   140048f20:	add    DWORD PTR [rcx+rax*1],eax
   140048f23:	add    BYTE PTR [rdx+rax*2],al
   140048f26:	add    BYTE PTR [rax],al
   140048f28:	add    DWORD PTR [rdi],eax
   140048f2a:	add    al,BYTE PTR [rax]
   140048f2c:	(bad)  
   140048f2d:	add    DWORD PTR [rip+0x40a0100],edx        # 0x1440e9033
   140048f33:	add    BYTE PTR [rdx],cl
   140048f35:	xor    al,0x6
   140048f37:	add    BYTE PTR [rdx],cl
   140048f39:	xor    al,BYTE PTR [rsi]
   140048f3b:	jo     0x140048f3e
   140048f3d:	or     al,BYTE PTR [rax+rax*1]
   140048f40:	or     dh,BYTE PTR [rsi+rax*1]
   140048f43:	add    BYTE PTR [rdx],cl
   140048f45:	xor    al,BYTE PTR [rsi]
   140048f47:	jo     0x140048f4a
   140048f49:	(bad)  
   140048f4a:	add    DWORD PTR [rax],eax
   140048f4c:	(bad)  
   140048f4d:	movabs ds:0x7417000617210000,al
   140048f56:	or     BYTE PTR [rax],al
   140048f58:	or     BYTE PTR [rcx+rcx*1+0x0],ah
   140048f5c:	add    al,0x34
   140048f5e:	(bad)  
   140048f5f:	add    BYTE PTR [rax],dh
   140048f61:	mov    BYTE PTR [rdx],al
   140048f63:	add    BYTE PTR [rdi],dh
   140048f65:	mov    BYTE PTR [rdx],al
   140048f67:	add    BYTE PTR [rax-0x71],cl
   140048f6a:	add    al,0x0
   140048f6c:	and    DWORD PTR [rdx+rcx*1],edx
   140048f6f:	add    BYTE PTR [rsp+rsi*8],dl
   140048f72:	add    al,0x0
   140048f74:	adc    ah,ah
   140048f76:	add    eax,0x6d40c00
   140048f7b:	add    BYTE PTR [rax],cl
   140048f7d:	(bad)  
   140048f7e:	(bad)  
   140048f7f:	add    BYTE PTR [rsp+rdx*2],al
   140048f82:	or     al,BYTE PTR [rax]
   140048f84:	(bad)  
   140048f85:	mov    BYTE PTR [rdx],al
   140048f87:	add    BYTE PTR [rax+rcx*4+0x2],ah
   140048f8b:	add    BYTE PTR [rax-0x71],dl
   140048f8e:	add    al,0x0
   140048f90:	and    DWORD PTR [rax],eax
   140048f92:	add    BYTE PTR [rax],al
   140048f94:	(bad)  
   140048f95:	mov    BYTE PTR [rdx],al
   140048f97:	add    BYTE PTR [rax+rcx*4+0x2],ah
   140048f9b:	add    BYTE PTR [rax-0x71],dl
   140048f9e:	add    al,0x0
   140048fa0:	and    DWORD PTR [rax],eax
   140048fa2:	add    BYTE PTR [rax],al
   140048fa4:	xor    BYTE PTR [rax-0x77c8fffe],cl
   140048faa:	add    al,BYTE PTR [rax]
   140048fac:	rex.W pop QWORD PTR [rax+rax*1]
   140048fb0:	add    DWORD PTR [rdi],ecx
   140048fb2:	(bad)  
   140048fb3:	add    BYTE PTR [rdi],cl
   140048fb5:	fs (bad) 
   140048fb7:	add    BYTE PTR [rdi],cl
   140048fb9:	xor    al,0x6
   140048fbb:	add    BYTE PTR [rdi],cl
   140048fbd:	xor    cl,BYTE PTR [rbx]
   140048fbf:	jo     0x140048fc2
   140048fc1:	adc    DWORD PTR [rax],ecx
   140048fc3:	add    BYTE PTR [rcx],dl
   140048fc5:	push   rsp
   140048fc6:	or     al,0x0
   140048fc8:	adc    DWORD PTR [rdx],esi
   140048fca:	or     eax,0x9e00bf0
   140048fcf:	rol    BYTE PTR [rdi],1
   140048fd1:	jo     0x140048fd9
   140048fd3:	(bad)  
   140048fd4:	and    DWORD PTR [rip+0x34050002],eax        # 0x174098fdc
   140048fda:	or     al,BYTE PTR [rax]
   140048fdc:	rex mov WORD PTR [rdx],es
   140048fdf:	add    BYTE PTR [rsi-0x3ffffd74],al
   140048fe5:	pop    QWORD PTR [rax+rax*1]
   140048fe8:	and    DWORD PTR [rip+0xffffffffc4050002],eax        # 0x104098ff0
   140048fee:	or     eax,DWORD PTR [rax]
   140048ff0:	xchg   BYTE PTR [rdx+rax*1+0x28c9800],cl
   140048ff7:	add    ah,dl
   140048ff9:	pop    QWORD PTR [rax+rax*1]
   140048ffc:	and    DWORD PTR [rax],eax
   140048ffe:	add    BYTE PTR [rax],al
   140049000:	xchg   BYTE PTR [rdx+rax*1+0x28c9800],cl
   140049007:	add    ah,dl
   140049009:	pop    QWORD PTR [rax+rax*1]
   14004900c:	and    DWORD PTR [rax],eax
   14004900e:	add    BYTE PTR [rax],al
   140049010:	rex mov WORD PTR [rdx],es
   140049013:	add    BYTE PTR [rsi-0x3ffffd74],al
   140049019:	pop    QWORD PTR [rax+rax*1]
   14004901c:	add    DWORD PTR [rcx+rax*1],eax
   14004901f:	add    BYTE PTR [rdx+rax*2],al
   140049022:	add    BYTE PTR [rax],al
   140049024:	add    DWORD PTR [rcx+rax*1],eax
   140049027:	add    BYTE PTR [rdx+rax*2],al
   14004902a:	add    BYTE PTR [rax],al
   14004902c:	add    DWORD PTR [rcx+rax*1],eax
   14004902f:	add    BYTE PTR [rdx+rax*2],al
   140049032:	add    BYTE PTR [rax],al
   140049034:	add    DWORD PTR [rdx],ebx
   140049036:	or     al,BYTE PTR [rax]
   140049038:	sbb    dh,BYTE PTR [rbx+rcx*1+0x0]
   14004903c:	sbb    ah,BYTE PTR [rdx+rcx*1+0x0]
   140049040:	sbb    dl,BYTE PTR [rcx+rcx*1+0x0]
   140049044:	sbb    dh,BYTE PTR [rax+rcx*1]
   140049047:	add    BYTE PTR [rdx],bl
   140049049:	push   rdx
   14004904a:	(bad)  
   14004904b:	loopne 0x14004904e
   14004904d:	sbb    ecx,DWORD PTR [rdx]
   14004904f:	add    BYTE PTR [rbx],bl
   140049051:	push   rsp
   140049052:	or     eax,0xc341b00
   140049057:	add    BYTE PTR [rbx],bl
   140049059:	xor    dl,BYTE PTR [rdi]
   14004905b:	loopne 0x140049072
   14004905d:	rcl    BYTE PTR [rbx],1
   14004905f:	rcl    BYTE PTR [rcx],0x70
   140049062:	adc    BYTE PTR [rax+0x21],ah
   140049065:	add    eax,0xf4050002
   14004906a:	or     al,BYTE PTR [rax]
   14004906c:	nop
   14004906d:	lea    eax,[rdx]
   14004906f:	add    BYTE PTR [rdx-0x72],dl
   140049072:	add    al,BYTE PTR [rax]
   140049074:	rex.WR xchg rax,rax
   140049076:	add    al,0x0
   140049078:	and    DWORD PTR [rax],eax
   14004907a:	add    BYTE PTR [rax],al
   14004907c:	nop
   14004907d:	lea    eax,[rdx]
   14004907f:	add    BYTE PTR [rdx-0x72],dl
   140049082:	add    al,BYTE PTR [rax]
   140049084:	rex.WR xchg rax,rax
   140049086:	add    al,0x0
   140049088:	add    DWORD PTR [rbx],edx
   14004908a:	or     BYTE PTR [rax],al
   14004908c:	adc    edx,DWORD PTR [rdx+0xf]
   14004908f:	lock or eax,0x9d00be0
   140049095:	jo     0x14004909f
   140049097:	(bad)  
   140049098:	(bad)  
   140049099:	push   rax
   14004909a:	(bad)  
   14004909b:	xor    BYTE PTR [rcx],ah
   14004909d:	add    eax,0xc4050002
   1400490a2:	verr   ax
   1400490a5:	nop
   1400490a6:	add    al,BYTE PTR [rax]
   1400490a8:	cmp    al,0x91
   1400490aa:	add    al,BYTE PTR [rax]
   1400490ac:	mov    BYTE PTR [rax+0x210004],dl
   1400490b2:	add    BYTE PTR [rax],al
   1400490b4:	loopne 0x140049046
   1400490b6:	add    al,BYTE PTR [rax]
   1400490b8:	cmp    al,0x91
   1400490ba:	add    al,BYTE PTR [rax]
   1400490bc:	mov    BYTE PTR [rax+0xe010004],dl
   1400490c2:	add    al,0x0
   1400490c4:	(bad)  
   1400490c5:	xor    al,0x6
   1400490c7:	add    BYTE PTR [rsi],cl
   1400490c9:	xor    cl,BYTE PTR [rdx]
   1400490cb:	jo     0x1400490ce
   1400490cd:	(bad)  
   1400490ce:	add    al,BYTE PTR [rax]
   1400490d0:	(bad)  
   1400490d1:	xor    al,BYTE PTR [rdx]
   1400490d3:	xor    BYTE PTR [rcx],al
   1400490d5:	(bad)  
   1400490d6:	add    al,BYTE PTR [rax]
   1400490d8:	(bad)  
   1400490d9:	xor    al,BYTE PTR [rdx]
   1400490db:	xor    BYTE PTR [rcx],al
   1400490dd:	or     eax,0x340d0006
   1400490e2:	or     eax,DWORD PTR [rax]
   1400490e4:	or     eax,0x7f00932
   1400490e9:	(bad)  
   1400490ea:	(bad)  
   1400490eb:	push   rax
   1400490ec:	and    DWORD PTR [rdx],edx
   1400490ee:	(bad)  
   1400490ef:	add    BYTE PTR [rdx],dl
   1400490f1:	je     0x1400490fb
   1400490f3:	add    BYTE PTR [rdx],cl
   1400490f5:	in     al,0xa
   1400490f7:	add    BYTE PTR [rip+0xffffffffa00009c4],al        # 0xe0049ac1
   1400490fd:	xchg   esi,eax
   1400490fe:	add    al,BYTE PTR [rax]
   140049100:	enter  0x296,0x0
   140049104:	fcom   QWORD PTR [rax+0x210004]
   14004910a:	add    BYTE PTR [rax],al
   14004910c:	movabs al,ds:0xdc000296c8000296
   140049115:	nop
   140049116:	add    al,0x0
   140049118:	add    DWORD PTR [rdi],edx
   14004911a:	(bad)  
   14004911b:	add    BYTE PTR [rdi],dl
   14004911d:	rex.X adc esi,eax
   140049120:	adc    eax,edx
   140049122:	xadd   BYTE PTR [rip+0xb500c60],cl        # 0x14b549d89
   140049129:	xor    BYTE PTR [rax],al
   14004912b:	add    BYTE PTR [rcx],ah
   14004912d:	or     al,BYTE PTR [rax+rax*1]
   140049130:	or     ah,ah
   140049132:	add    al,0x0
   140049134:	add    eax,0xa0000c74
   140049139:	xchg   edi,eax
   14004913a:	add    al,BYTE PTR [rax]
   14004913c:	ficom  WORD PTR [rdi-0x6ee7fffe]
   140049142:	add    al,0x0
   140049144:	and    DWORD PTR [rax],eax
   140049146:	add    BYTE PTR [rax],al
   140049148:	movabs al,ds:0x18000297de000297
   140049151:	xchg   ecx,eax
   140049152:	add    al,0x0
   140049154:	add    DWORD PTR [rdi],ecx
   140049156:	(bad)  
   140049157:	add    BYTE PTR [rdi],cl
   140049159:	fs (bad) 
   14004915b:	add    BYTE PTR [rdi],cl
   14004915d:	xor    al,0x6
   14004915f:	add    BYTE PTR [rdi],cl
   140049161:	xor    cl,BYTE PTR [rbx]
   140049163:	jo     0x140049166
   140049165:	clts   
   140049167:	add    BYTE PTR [rdi],cl
   140049169:	fs (bad) 
   14004916b:	add    BYTE PTR [rdi],cl
   14004916d:	xor    al,0x6
   14004916f:	add    BYTE PTR [rdi],cl
   140049171:	xor    cl,BYTE PTR [rbx]
   140049173:	jo     0x140049176
   140049175:	adc    DWORD PTR [rsi],eax
   140049177:	add    BYTE PTR [rcx],dl
   140049179:	xor    al,0x10
   14004917b:	add    BYTE PTR [rcx],dl
   14004917d:	mov    dl,0xd
   14004917f:	jo     0x14004918d
   140049181:	(bad)  
   140049182:	or     edx,DWORD PTR [rax+0x1]
   140049185:	add    al,0x1
   140049187:	add    BYTE PTR [rdx+rax*2],al
   14004918a:	add    BYTE PTR [rax],al
   14004918c:	add    DWORD PTR [rdx],ecx
   14004918e:	add    al,0x0
   140049190:	or     dh,BYTE PTR [rsi+rax*1]
   140049193:	add    BYTE PTR [rdx],cl
   140049195:	xor    al,BYTE PTR [rsi]
   140049197:	jo     0x14004919a
   140049199:	(bad)  
   14004919a:	add    al,BYTE PTR [rax]
   14004919c:	(bad)  
   14004919d:	xor    al,BYTE PTR [rdx]
   14004919f:	xor    BYTE PTR [rcx],al
   1400491a1:	adc    al,0x8
   1400491a3:	add    BYTE PTR [rsp+riz*2],dl
   1400491a6:	or     BYTE PTR [rax],al
   1400491a8:	adc    al,0x54
   1400491aa:	(bad)  
   1400491ab:	add    BYTE PTR [rsp+rsi*1],dl
   1400491ae:	(bad)  
   1400491af:	add    BYTE PTR [rdx+rsi*1],dl
   1400491b2:	adc    BYTE PTR [rax+0x1],dh
   1400491b5:	(bad)  
   1400491b6:	add    al,BYTE PTR [rax]
   1400491b8:	(bad)  
   1400491b9:	xor    al,BYTE PTR [rdx]
   1400491bb:	xor    BYTE PTR [rcx],al
   1400491bd:	or     BYTE PTR [rcx],al
   1400491bf:	add    BYTE PTR [rax],cl
   1400491c1:	rex.X add BYTE PTR [rax],al
   1400491c4:	add    DWORD PTR [rax],ebx
   1400491c6:	or     al,BYTE PTR [rax]
   1400491c8:	sbb    BYTE PTR [rbx+rcx*1+0x0],ah
   1400491cc:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   1400491d0:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400491d3:	add    BYTE PTR [rax],bl
   1400491d5:	xor    dl,BYTE PTR [rax+riz*8]
   1400491d8:	adc    dl,al
   1400491da:	adc    BYTE PTR [rax+0x21],dh
   1400491dd:	add    eax,0xf4050002
   1400491e2:	or     BYTE PTR [rax],al
   1400491e4:	nop
   1400491e5:	movabs ds:0x91c40002a4260002,eax
   1400491ee:	add    al,0x0
   1400491f0:	and    DWORD PTR [rax],eax
   1400491f2:	add    BYTE PTR [rax],al
   1400491f4:	nop
   1400491f5:	movabs ds:0x91c40002a4260002,eax
   1400491fe:	add    al,0x0
   140049200:	add    DWORD PTR [rsp+rax*1],ecx
   140049203:	add    BYTE PTR [rdx+rsi*1],cl
   140049206:	or     BYTE PTR [rax+0x7],dh
   140049209:	(bad)  
   14004920a:	(bad)  
   14004920b:	xor    BYTE PTR [rcx],ah
   14004920d:	add    eax,0x54050002
   140049212:	or     DWORD PTR [rax],eax
   140049214:	loopne 0x1400491b6
   140049216:	add    al,BYTE PTR [rax]
   140049218:	in     al,dx
   140049219:	movabs al,ds:0x21000492000002
   140049222:	add    BYTE PTR [rax],al
   140049224:	loopne 0x1400491c6
   140049226:	add    al,BYTE PTR [rax]
   140049228:	in     al,dx
   140049229:	movabs al,ds:0x601000492000002
   140049232:	add    al,BYTE PTR [rax]
   140049234:	(bad)  
   140049235:	xor    al,BYTE PTR [rdx]
   140049237:	jo     0x14004925a
   140049239:	or     al,BYTE PTR [rax+rax*1]
   14004923c:	or     ah,BYTE PTR [rdi+rax*1+0x0]
   140049240:	add    eax,0x50000634
   140049245:	movabs ds:0x92300002a2900002,al
   14004924e:	add    al,0x0
   140049250:	and    DWORD PTR [rax],eax
   140049252:	add    BYTE PTR [rax],al
   140049254:	push   rax
   140049255:	movabs ds:0x92300002a2900002,al
   14004925e:	add    al,0x0
   140049260:	add    DWORD PTR [rdx],ecx
   140049262:	add    al,0x0
   140049264:	or     dh,BYTE PTR [rax+rcx*1]
   140049267:	add    BYTE PTR [rdx],cl
   140049269:	xor    al,BYTE PTR [rsi]
   14004926b:	(bad)  
   14004926c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4099274
   140049272:	(bad)  
   140049273:	add    al,dh
   140049275:	movabs ds:0x92600002a33b0002,al
   14004927e:	add    al,0x0
   140049280:	and    DWORD PTR [rax],eax
   140049282:	add    BYTE PTR [rax],al
   140049284:	lock movabs ds:0x92600002a33b0002,al
   14004928e:	add    al,0x0
   140049290:	add    DWORD PTR [rdi],ecx
   140049292:	(bad)  
   140049293:	add    BYTE PTR [rdi],cl
   140049295:	fs (bad) 
   140049297:	add    BYTE PTR [rdi],cl
   140049299:	xor    al,0x6
   14004929b:	add    BYTE PTR [rdi],cl
   14004929d:	xor    cl,BYTE PTR [rbx]
   14004929f:	jo     0x1400492a2
   1400492a1:	adc    al,0x8
   1400492a3:	add    BYTE PTR [rsp+riz*2],dl
   1400492a6:	or     BYTE PTR [rax],al
   1400492a8:	adc    al,0x54
   1400492aa:	(bad)  
   1400492ab:	add    BYTE PTR [rsp+rsi*1],dl
   1400492ae:	(bad)  
   1400492af:	add    BYTE PTR [rdx+rsi*1],dl
   1400492b2:	adc    BYTE PTR [rax+0x1],dh
   1400492b5:	add    al,0x1
   1400492b7:	add    BYTE PTR [rdx+rax*2],al
   1400492ba:	add    BYTE PTR [rax],al
   1400492bc:	add    DWORD PTR [rip+0x52150004],edx        # 0x1921992c6
   1400492c2:	adc    DWORD PTR [rax+0x10],esi
   1400492c5:	(bad)  
   1400492c6:	(bad)  
   1400492c8:	and    DWORD PTR [rip+0x34050002],eax        # 0x1740992d0
   1400492ce:	add    eax,0x2a8b000
   1400492d3:	add    dh,bl
   1400492d5:	test   al,0x2
   1400492d7:	add    BYTE PTR [rdx+rdx*4+0x210004],bh
   1400492de:	add    BYTE PTR [rax],al
   1400492e0:	mov    al,0xa8
   1400492e2:	add    al,BYTE PTR [rax]
   1400492e4:	fisubr WORD PTR [rax-0x6d43fffe]
   1400492ea:	add    al,0x0
   1400492ec:	add    DWORD PTR [rcx+rax*1],eax
   1400492ef:	add    BYTE PTR [rdx+rax*2],al
   1400492f2:	add    BYTE PTR [rax],al
   1400492f4:	and    DWORD PTR [rdx],ebx
   1400492f6:	(bad)  
   1400492f7:	add    BYTE PTR [rdx],bl
   1400492f9:	je     0x1400492ff
   1400492fb:	add    BYTE PTR [rip+0x5000764],dl        # 0x145049a65
   140049301:	xor    al,0x6
   140049303:	add    BYTE PTR [rax-0x54],al
   140049306:	add    al,BYTE PTR [rax]
   140049308:	imul   ebp,DWORD PTR [rdx+rax*1+0x492ec00],0x2100
   140049313:	add    BYTE PTR [rax-0x54],al
   140049316:	add    al,BYTE PTR [rax]
   140049318:	imul   ebp,DWORD PTR [rdx+rax*1+0x492ec00],0x40a0100
   140049323:	add    BYTE PTR [rdx],cl
   140049325:	push   rsp
   140049326:	or     BYTE PTR [rax],al
   140049328:	or     dh,BYTE PTR [rdx]
   14004932a:	(bad)  
   14004932b:	(bad)  
   14004932c:	and    DWORD PTR [rdx],ecx
   14004932e:	add    al,0x0
   140049330:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   140049334:	add    eax,0x40000634
   140049339:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004933a:	add    al,BYTE PTR [rax]
   14004933c:	push   0xffffffffffffffa6
   14004933e:	add    al,BYTE PTR [rax]
   140049340:	and    BYTE PTR [rbx+0x210004],dl
   140049346:	add    BYTE PTR [rax],al
   140049348:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004934a:	add    al,BYTE PTR [rax]
   14004934c:	push   0xffffffffffffffa6
   14004934e:	add    al,BYTE PTR [rax]
   140049350:	and    BYTE PTR [rbx+0x6010004],dl
   140049356:	add    al,BYTE PTR [rax]
   140049358:	(bad)  
   140049359:	xor    al,BYTE PTR [rdx]
   14004935b:	xor    BYTE PTR [rcx],al
   14004935d:	add    eax,0x34050002
   140049362:	add    DWORD PTR [rax],eax
   140049364:	add    DWORD PTR [rax+rcx*1],edx
   140049367:	add    BYTE PTR [rsp+riz*2],dl
   14004936a:	or     BYTE PTR [rax],al
   14004936c:	adc    al,0x54
   14004936e:	(bad)  
   14004936f:	add    BYTE PTR [rsp+rsi*1],dl
   140049372:	(bad)  
   140049373:	add    BYTE PTR [rdx+rsi*1],dl
   140049376:	adc    BYTE PTR [rax+0x1],dh
   140049379:	(bad)  
   14004937a:	add    al,BYTE PTR [rax]
   14004937c:	(bad)  
   14004937d:	xor    al,BYTE PTR [rdx]
   14004937f:	xor    BYTE PTR [rcx],al
   140049381:	sbb    cl,BYTE PTR [rdx]
   140049383:	add    BYTE PTR [rdx],bl
   140049385:	je     0x140049390
   140049387:	add    BYTE PTR [rdx],bl
   140049389:	or     BYTE PTR fs:[rax],al
   14004938c:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   140049390:	sbb    dh,BYTE PTR [rsi+rax*1]
   140049393:	add    BYTE PTR [rdx],bl
   140049395:	xor    dl,BYTE PTR [rsi]
   140049397:	loopne 0x14004939a
   140049399:	push   rsi
   14004939a:	or     BYTE PTR [rax],al
   14004939c:	push   rsi
   14004939d:	xor    al,0x6
   14004939f:	add    BYTE PTR [rax],dl
   1400493a1:	je     0x1400493ac
   1400493a3:	add    BYTE PTR [rax],dl
   1400493a5:	or     BYTE PTR fs:[rax],al
   1400493a8:	adc    BYTE PTR [rdx],dh
   1400493aa:	or     al,0xf0
   1400493ac:	and    DWORD PTR [rip+0xffffffffe4050002],eax        # 0x1240993b4
   1400493b2:	(bad)  
   1400493b3:	add    al,al
   1400493b5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400493b6:	add    al,BYTE PTR [rax]
   1400493b8:	(bad)  
   1400493b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400493ba:	add    al,BYTE PTR [rax]
   1400493bc:	cwde   
   1400493bd:	xchg   ebx,eax
   1400493be:	add    al,0x0
   1400493c0:	and    DWORD PTR [rax],eax
   1400493c2:	add    BYTE PTR [rax],al
   1400493c4:	shl    BYTE PTR [rsi-0x58e9fffe],0x2
   1400493cb:	add    BYTE PTR [rax+0x1000493],bl
   1400493d1:	clts   
   1400493d3:	add    BYTE PTR [rdi],cl
   1400493d5:	or     BYTE PTR fs:[rax],al
   1400493d8:	andps  xmm0,XMMWORD PTR [rdi]
   1400493db:	add    BYTE PTR [rdi],cl
   1400493dd:	xor    cl,BYTE PTR [rbx]
   1400493df:	jo     0x140049402
   1400493e1:	add    eax,0x34050002
   1400493e6:	(bad)  
   1400493e7:	add    BYTE PTR [rax-0x21fffd4f],dl
   1400493ed:	mov    cl,0x2
   1400493ef:	add    al,dl
   1400493f1:	xchg   ebx,eax
   1400493f2:	add    al,0x0
   1400493f4:	and    DWORD PTR [rax],eax
   1400493f6:	add    al,BYTE PTR [rax]
   1400493f8:	add    BYTE PTR [rsi+rax*1],dh
   1400493fb:	add    BYTE PTR [rax-0x21fffd4f],dl
   140049401:	mov    cl,0x2
   140049403:	add    al,dl
   140049405:	xchg   ebx,eax
   140049406:	add    al,0x0
   140049408:	add    DWORD PTR [rdi],ecx
   14004940a:	(bad)  
   14004940b:	add    BYTE PTR [rdi],cl
   14004940d:	fs (bad) 
   14004940f:	add    BYTE PTR [rdi],cl
   140049411:	xor    al,0x6
   140049413:	add    BYTE PTR [rdi],cl
   140049415:	xor    cl,BYTE PTR [rbx]
   140049417:	jo     0x14004941a
   140049419:	sbb    ecx,DWORD PTR [rbx]
   14004941b:	add    BYTE PTR [rbx],bl
   14004941d:	sbb    al,BYTE PTR fs:[rax]
   140049420:	sbb    edx,DWORD PTR [rcx+rbx*1+0x0]
   140049424:	sbb    esi,DWORD PTR [rax+rbx*1]
   140049427:	add    BYTE PTR [rbx],bl
   140049429:	add    DWORD PTR [rax+rax*1],edx
   14004942c:	adc    al,0xf0
   14004942e:	adc    ah,al
   140049430:	adc    BYTE PTR [rax+0x0],dh
   140049433:	add    BYTE PTR [rcx],al
   140049435:	or     al,BYTE PTR [rax+rax*1]
   140049438:	or     dh,BYTE PTR [rsp+rcx*1]
   14004943b:	add    BYTE PTR [rdx],cl
   14004943d:	xchg   edx,eax
   14004943e:	(bad)  
   14004943f:	jo     0x140049442
   140049441:	or     al,BYTE PTR [rax+rax*1]
   140049444:	or     dh,BYTE PTR [rsi+rax*1]
   140049447:	add    BYTE PTR [rdx],cl
   140049449:	xor    al,BYTE PTR [rsi]
   14004944b:	jo     0x14004944e
   14004944d:	clts   
   14004944f:	add    BYTE PTR [rdi],cl
   140049451:	fs (bad) 
   140049453:	add    BYTE PTR [rdi],cl
   140049455:	xor    al,0x6
   140049457:	add    BYTE PTR [rdi],cl
   140049459:	xor    cl,BYTE PTR [rbx]
   14004945b:	jo     0x14004945e
   14004945d:	or     al,BYTE PTR [rax+rax*1]
   140049460:	or     dh,BYTE PTR [rsp+rcx*1]
   140049463:	add    BYTE PTR [rdx],cl
   140049465:	xchg   edx,eax
   140049466:	(bad)  
   140049467:	jo     0x14004946a
   140049469:	(bad)  
   14004946a:	add    al,BYTE PTR [rax]
   14004946c:	(bad)  
   14004946d:	xor    al,BYTE PTR [rdx]
   14004946f:	xor    BYTE PTR [rcx],al
   140049471:	or     al,BYTE PTR [rax+rax*1]
   140049474:	or     dh,BYTE PTR [rsp+rcx*1]
   140049477:	add    BYTE PTR [rdx],cl
   140049479:	xchg   edx,eax
   14004947a:	(bad)  
   14004947b:	jo     0x14004947e
   14004947d:	(bad)  
   14004947e:	add    al,BYTE PTR [rax]
   140049480:	(bad)  
   140049481:	xor    al,BYTE PTR [rdx]
   140049483:	xor    BYTE PTR [rcx],al
   140049485:	sbb    BYTE PTR [rdx],cl
   140049487:	add    BYTE PTR [rax],bl
   140049489:	or     eax,DWORD PTR fs:[rax]
   14004948c:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140049490:	sbb    BYTE PTR [rcx+rcx*1],dh
   140049493:	add    BYTE PTR [rax],bl
   140049495:	xor    dl,BYTE PTR [rax+riz*8]
   140049498:	adc    dl,al
   14004949a:	adc    BYTE PTR [rax+0x21],dh
   14004949d:	add    eax,0xf4050002
   1400494a2:	or     BYTE PTR [rax],al
   1400494a4:	mov    spl,0x2
   1400494a7:	add    ch,cl
   1400494a9:	mov    ah,0x2
   1400494ab:	add    BYTE PTR [rsp+rdx*4+0x210004],al
   1400494b2:	add    BYTE PTR [rax],al
   1400494b4:	mov    spl,0x2
   1400494b7:	add    ch,cl
   1400494b9:	mov    ah,0x2
   1400494bb:	add    BYTE PTR [rsp+rdx*4+0xb010004],al
   1400494c2:	add    eax,DWORD PTR [rax]
   1400494c4:	or     eax,DWORD PTR [rdx+0x7]
   1400494c7:	jo     0x1400494cf
   1400494c9:	push   rax
   1400494ca:	add    BYTE PTR [rax],al
   1400494cc:	and    DWORD PTR [rip+0x34050002],eax        # 0x1740994d4
   1400494d2:	or     DWORD PTR [rax],eax
   1400494d4:	(bad)  
   1400494d5:	mov    dl,0x2
   1400494d7:	add    bl,al
   1400494d9:	mov    dl,0x2
   1400494db:	add    al,al
   1400494dd:	xchg   esp,eax
   1400494de:	add    al,0x0
   1400494e0:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a40994e8
   1400494e6:	add    al,0x0
   1400494e8:	ret    
   1400494e9:	mov    dl,0x2
   1400494eb:	add    dh,ah
   1400494ed:	mov    dl,0x2
   1400494ef:	add    ah,cl
   1400494f1:	xchg   esp,eax
   1400494f2:	add    al,0x0
   1400494f4:	and    DWORD PTR [rax],eax
   1400494f6:	add    BYTE PTR [rax],al
   1400494f8:	ret    
   1400494f9:	mov    dl,0x2
   1400494fb:	add    dh,ah
   1400494fd:	mov    dl,0x2
   1400494ff:	add    ah,cl
   140049501:	xchg   esp,eax
   140049502:	add    al,0x0
   140049504:	and    DWORD PTR [rax],eax
   140049506:	add    BYTE PTR [rax],al
   140049508:	(bad)  
   140049509:	mov    dl,0x2
   14004950b:	add    bl,al
   14004950d:	mov    dl,0x2
   14004950f:	add    al,al
   140049511:	xchg   esp,eax
   140049512:	add    al,0x0
   140049514:	add    DWORD PTR [rdi],ecx
   140049516:	(bad)  
   140049517:	add    BYTE PTR [rdi],cl
   140049519:	fs (bad) 
   14004951b:	add    BYTE PTR [rdi],cl
   14004951d:	xor    al,0x6
   14004951f:	add    BYTE PTR [rdi],cl
   140049521:	xor    cl,BYTE PTR [rbx]
   140049523:	jo     0x140049526
   140049525:	or     al,BYTE PTR [rax+rax*1]
   140049528:	or     dh,BYTE PTR [rax+rcx*1]
   14004952b:	add    BYTE PTR [rdx],cl
   14004952d:	xor    al,BYTE PTR [rsi]
   14004952f:	jo     0x140049552
   140049531:	add    eax,0x64050002
   140049536:	(bad)  
   140049537:	add    BYTE PTR [rax],ah
   140049539:	mov    edx,0xbac80002
   14004953e:	add    al,BYTE PTR [rax]
   140049540:	and    al,0x95
   140049542:	add    al,0x0
   140049544:	and    DWORD PTR [rip+0x54050002],eax        # 0x19409954c
   14004954a:	(bad)  
   14004954b:	add    al,cl
   14004954d:	mov    edx,0xbae10002
   140049552:	add    al,BYTE PTR [rax]
   140049554:	xor    BYTE PTR [rbp+0x210004],dl
   14004955a:	add    BYTE PTR [rax],al
   14004955c:	enter  0x2ba,0x0
   140049560:	loope  0x14004951c
   140049562:	add    al,BYTE PTR [rax]
   140049564:	xor    BYTE PTR [rbp+0x210004],dl
   14004956a:	add    BYTE PTR [rax],al
   14004956c:	and    BYTE PTR [rdx-0x4537fffe],bh
   140049572:	add    al,BYTE PTR [rax]
   140049574:	and    al,0x95
   140049576:	add    al,0x0
   140049578:	add    DWORD PTR [rdi],ecx
   14004957a:	(bad)  
   14004957b:	add    BYTE PTR [rdi],cl
   14004957d:	or     DWORD PTR fs:[rax],eax
   140049580:	sysenter 
   140049582:	or     BYTE PTR [rax],al
   140049584:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140049587:	jo     0x14004958a
   140049589:	(bad)  
   14004958a:	add    al,BYTE PTR [rax]
   14004958c:	(bad)  
   14004958d:	xor    al,BYTE PTR [rdx]
   14004958f:	xor    BYTE PTR [rcx],ah
   140049591:	add    eax,0x74050002
   140049596:	(bad)  
   140049597:	add    BYTE PTR [rax-0x6fffd45],dh
   14004959d:	mov    ebx,0x95880002
   1400495a2:	add    al,0x0
   1400495a4:	and    DWORD PTR [rax],eax
   1400495a6:	add    al,BYTE PTR [rax]
   1400495a8:	add    BYTE PTR [rsi+rax*1+0x0],dh
   1400495ac:	mov    al,0xbb
   1400495ae:	add    al,BYTE PTR [rax]
   1400495b0:	stc    
   1400495b1:	mov    ebx,0x95880002
   1400495b6:	add    al,0x0
   1400495b8:	add    DWORD PTR [rsi],eax
   1400495ba:	add    al,BYTE PTR [rax]
   1400495bc:	(bad)  
   1400495bd:	xor    al,BYTE PTR [rdx]
   1400495bf:	jo     0x1400495e2
   1400495c1:	add    eax,0x34050002
   1400495c6:	(bad)  
   1400495c7:	add    BYTE PTR [rax-0x48fffd44],dl
   1400495cd:	mov    esp,0x95b80002
   1400495d2:	add    al,0x0
   1400495d4:	and    DWORD PTR [rax],eax
   1400495d6:	add    al,BYTE PTR [rax]
   1400495d8:	add    BYTE PTR [rsi+rax*1],dh
   1400495db:	add    BYTE PTR [rax-0x48fffd44],dl
   1400495e1:	mov    esp,0x95b80002
   1400495e6:	add    al,0x0
   1400495e8:	and    DWORD PTR [rax],eax
   1400495ea:	add    BYTE PTR [rax],al
   1400495ec:	nop
   1400495ed:	mov    esp,0xbcb70002
   1400495f2:	add    al,BYTE PTR [rax]
   1400495f4:	mov    eax,0x1000495
   1400495f9:	add    al,0x1
   1400495fb:	add    BYTE PTR [rdx+rax*2],al
   1400495fe:	add    BYTE PTR [rax],al
   140049600:	add    DWORD PTR [rcx],ebx
   140049602:	add    al,BYTE PTR [rax]
   140049604:	sbb    DWORD PTR [rdx],esi
   140049606:	adc    eax,0x2060130
   14004960b:	add    BYTE PTR [rsi],al
   14004960d:	xor    al,BYTE PTR [rdx]
   14004960f:	xor    BYTE PTR [rcx],ah
   140049611:	add    eax,0x64050002
   140049616:	(bad)  
   140049617:	add    al,dh
   140049619:	mov    ebp,0xbe4d0002
   14004961e:	add    al,BYTE PTR [rax]
   140049620:	or     BYTE PTR [rsi+0x210004],dl
   140049626:	add    al,BYTE PTR [rax]
   140049628:	add    BYTE PTR [rsi+rax*1+0x0],ah
   14004962c:	lock mov ebp,0xbe4d0002
   140049632:	add    al,BYTE PTR [rax]
   140049634:	or     BYTE PTR [rsi+0x210004],dl
   14004963a:	add    al,BYTE PTR [rax]
   14004963c:	add    BYTE PTR [rsi+rax*1+0x0],ah
   140049640:	lock mov ebp,0xbe4d0002
   140049646:	add    al,BYTE PTR [rax]
   140049648:	or     BYTE PTR [rsi+0x5210004],dl
   14004964e:	add    al,BYTE PTR [rax]
   140049650:	add    eax,0x8e000774
   140049655:	mov    edi,0xbf930002
   14004965a:	add    al,BYTE PTR [rax]
   14004965c:	(bad)  
   14004965d:	xchg   esi,eax
   14004965e:	add    al,0x0
   140049660:	and    DWORD PTR [rax],eax
   140049662:	add    al,BYTE PTR [rax]
   140049664:	add    BYTE PTR [rsi+rax*1+0x0],ah
   140049668:	lock mov ebp,0xbe4d0002
   14004966e:	add    al,BYTE PTR [rax]
   140049670:	or     BYTE PTR [rsi+0x210004],dl
   140049676:	add    BYTE PTR [rax],al
   140049678:	lock mov ebp,0xbe4d0002
   14004967e:	add    al,BYTE PTR [rax]
   140049680:	or     BYTE PTR [rsi+0xf010004],dl
   140049686:	(bad)  
   140049687:	add    BYTE PTR [rdi],cl
   140049689:	fs (bad) 
   14004968b:	add    BYTE PTR [rdi],cl
   14004968d:	xor    al,0x6
   14004968f:	add    BYTE PTR [rdi],cl
   140049691:	xor    cl,BYTE PTR [rbx]
   140049693:	jo     0x140049696
   140049695:	adc    eax,0x64150008
   14004969a:	or     DWORD PTR [rax],eax
   14004969c:	adc    eax,0x15000854
   1400496a1:	xor    al,0x7
   1400496a3:	add    BYTE PTR [rip+0x21e01132],dl        # 0x161e4a7db
   1400496a9:	add    eax,0x74050002
   1400496ae:	(bad)  
   1400496af:	add    BYTE PTR [rax-0x40],ah
   1400496b2:	add    al,BYTE PTR [rax]
   1400496b4:	xchg   edi,eax
   1400496b5:	rol    BYTE PTR [rdx],0x0
   1400496b8:	xchg   esp,eax
   1400496b9:	xchg   esi,eax
   1400496ba:	add    al,0x0
   1400496bc:	and    DWORD PTR [rax],eax
   1400496be:	add    BYTE PTR [rax],al
   1400496c0:	(bad)  
   1400496c1:	rol    BYTE PTR [rdx],0x0
   1400496c4:	xchg   edi,eax
   1400496c5:	rol    BYTE PTR [rdx],0x0
   1400496c8:	xchg   esp,eax
   1400496c9:	xchg   esi,eax
   1400496ca:	add    al,0x0
   1400496cc:	add    DWORD PTR [rsi],eax
   1400496ce:	add    al,BYTE PTR [rax]
   1400496d0:	(bad)  
   1400496d1:	xor    al,BYTE PTR [rdx]
   1400496d3:	xor    BYTE PTR [rcx],al
   1400496d5:	or     al,BYTE PTR [rax+rax*1]
   1400496d8:	or     dh,BYTE PTR [rsi+rax*1]
   1400496db:	add    BYTE PTR [rdx],cl
   1400496dd:	xor    al,BYTE PTR [rsi]
   1400496df:	jo     0x1400496e2
   1400496e1:	sbb    cl,BYTE PTR [rdx]
   1400496e3:	add    BYTE PTR [rdx],bl
   1400496e5:	je     0x1400496f0
   1400496e7:	add    BYTE PTR [rdx],bl
   1400496e9:	or     BYTE PTR fs:[rax],al
   1400496ec:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   1400496f0:	sbb    dh,BYTE PTR [rsi+rax*1]
   1400496f3:	add    BYTE PTR [rdx],bl
   1400496f5:	xor    dl,BYTE PTR [rsi]
   1400496f7:	loopne 0x1400496fa
   1400496f9:	or     al,BYTE PTR [rax+rax*1]
   1400496fc:	or     dh,BYTE PTR [rsi+rax*1]
   1400496ff:	add    BYTE PTR [rdx],cl
   140049701:	xor    al,BYTE PTR [rsi]
   140049703:	jo     0x140049706
   140049705:	(bad)  
   140049706:	add    al,BYTE PTR [rax]
   140049708:	(bad)  
   140049709:	xor    al,BYTE PTR [rdx]
   14004970b:	xor    BYTE PTR [rcx],al
   14004970d:	clts   
   14004970f:	add    BYTE PTR [rdi],cl
   140049711:	fs (bad) 
   140049713:	add    BYTE PTR [rdi],cl
   140049715:	xor    al,0x6
   140049717:	add    BYTE PTR [rdi],cl
   140049719:	xor    cl,BYTE PTR [rbx]
   14004971b:	jo     0x14004971e
   14004971d:	add    al,0x1
   14004971f:	add    BYTE PTR [rdx+rax*2],al
   140049722:	add    BYTE PTR [rax],al
   140049724:	and    DWORD PTR [rip+0x34050002],eax        # 0x17409972c
   14004972a:	(bad)  
   14004972b:	add    BYTE PTR [rax-0x6dfffd3f],al
   140049731:	rol    DWORD PTR [rdx],0x0
   140049734:	sbb    al,0x97
   140049736:	add    al,0x0
   140049738:	and    DWORD PTR [rdx],ecx
   14004973a:	add    al,0x0
   14004973c:	or     ah,BYTE PTR [rax+rcx*1+0x0]
   140049740:	add    eax,0x92000754
   140049745:	rol    DWORD PTR [rdx],0x0
   140049748:	xchg   edi,eax
   140049749:	rol    DWORD PTR [rdx],0x0
   14004974c:	and    al,0x97
   14004974e:	add    al,0x0
   140049750:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4099758
   140049756:	add    al,0x0
   140049758:	xchg   edi,eax
   140049759:	rol    DWORD PTR [rdx],0x0
   14004975c:	movabs eax,ds:0x21000497380002c1
   140049765:	add    BYTE PTR [rax],al
   140049767:	add    BYTE PTR [rdi-0x5efffd3f],dl
   14004976d:	rol    DWORD PTR [rdx],0x0
   140049770:	cmp    BYTE PTR [rdi+0x210004],dl
   140049776:	add    BYTE PTR [rax],al
   140049778:	xchg   edx,eax
   140049779:	rol    DWORD PTR [rdx],0x0
   14004977c:	xchg   edi,eax
   14004977d:	rol    DWORD PTR [rdx],0x0
   140049780:	and    al,0x97
   140049782:	add    al,0x0
   140049784:	and    DWORD PTR [rax],eax
   140049786:	add    BYTE PTR [rax],al
   140049788:	add    cl,0x2
   14004978b:	add    BYTE PTR [rdx+0x1c0002c1],dl
   140049791:	xchg   edi,eax
   140049792:	add    al,0x0
   140049794:	and    DWORD PTR [rax],eax
   140049796:	add    BYTE PTR [rax],al
   140049798:	add    cl,0x2
   14004979b:	add    BYTE PTR [rdx+0x1c0002c1],dl
   1400497a1:	xchg   edi,eax
   1400497a2:	add    al,0x0
   1400497a4:	add    DWORD PTR [rsi],eax
   1400497a6:	add    al,BYTE PTR [rax]
   1400497a8:	(bad)  
   1400497a9:	xor    al,BYTE PTR [rdx]
   1400497ab:	xor    BYTE PTR [rcx],al
   1400497ad:	(bad)  
   1400497ae:	add    al,BYTE PTR [rax]
   1400497b0:	(bad)  
   1400497b1:	xor    al,BYTE PTR [rdx]
   1400497b3:	jo     0x1400497d6
   1400497b5:	add    eax,0x34050002
   1400497ba:	(bad)  
   1400497bb:	add    BYTE PTR [rax],ah
   1400497bd:	enter  0x2,0x32
   1400497c1:	enter  0x2,0xac
   1400497c5:	xchg   edi,eax
   1400497c6:	add    al,0x0
   1400497c8:	and    DWORD PTR [rax],eax
   1400497ca:	add    BYTE PTR [rax],al
   1400497cc:	and    al,cl
   1400497ce:	add    al,BYTE PTR [rax]
   1400497d0:	xor    cl,al
   1400497d2:	add    al,BYTE PTR [rax]
   1400497d4:	lods   al,BYTE PTR ds:[rsi]
   1400497d5:	xchg   edi,eax
   1400497d6:	add    al,0x0
   1400497d8:	add    DWORD PTR [rsi],eax
   1400497da:	add    al,BYTE PTR [rax]
   1400497dc:	(bad)  
   1400497dd:	xor    al,BYTE PTR [rdx]
   1400497df:	xor    BYTE PTR [rcx],al
   1400497e1:	or     al,BYTE PTR [rax+rax*1]
   1400497e4:	or     ah,BYTE PTR [rcx+rcx*1+0x0]
   1400497e8:	or     dh,BYTE PTR [rdx]
   1400497ea:	(bad)  
   1400497eb:	jo     0x14004980e
   1400497ed:	add    eax,0x34050002
   1400497f2:	(bad)  
   1400497f3:	add    BYTE PTR [rax],al
   1400497f5:	leave  
   1400497f6:	add    al,BYTE PTR [rax]
   1400497f8:	(bad)  
   1400497f9:	leave  
   1400497fa:	add    al,BYTE PTR [rax]
   1400497fc:	loopne 0x140049795
   1400497fe:	add    al,0x0
   140049800:	and    DWORD PTR [rip+0x54050004],eax        # 0x19409980a
   140049806:	or     BYTE PTR [rax],al
   140049808:	add    BYTE PTR [rdi+rax*1],dh
   14004980b:	add    BYTE PTR [rax],al
   14004980d:	leave  
   14004980e:	add    al,BYTE PTR [rax]
   140049810:	(bad)  
   140049811:	leave  
   140049812:	add    al,BYTE PTR [rax]
   140049814:	loopne 0x1400497ad
   140049816:	add    al,0x0
   140049818:	and    DWORD PTR [rax],eax
   14004981a:	add    al,0x0
   14004981c:	add    BYTE PTR [rax+rcx*1+0x0],dl
   140049820:	add    BYTE PTR [rdi+rax*1],dh
   140049823:	add    BYTE PTR [rax],al
   140049825:	leave  
   140049826:	add    al,BYTE PTR [rax]
   140049828:	(bad)  
   140049829:	leave  
   14004982a:	add    al,BYTE PTR [rax]
   14004982c:	loopne 0x1400497c5
   14004982e:	add    al,0x0
   140049830:	and    DWORD PTR [rax],eax
   140049832:	add    BYTE PTR [rax],al
   140049834:	add    cl,cl
   140049836:	add    al,BYTE PTR [rax]
   140049838:	(bad)  
   140049839:	leave  
   14004983a:	add    al,BYTE PTR [rax]
   14004983c:	loopne 0x1400497d5
   14004983e:	add    al,0x0
   140049840:	add    DWORD PTR [rax+rcx*1],edx
   140049843:	add    BYTE PTR [rdx+rdx*4],dl
   140049846:	adc    al,dh
   140049848:	(bad)  
   140049849:	loopne 0x140049857
   14004984b:	ror    BYTE PTR [rdx],1
   14004984d:	ror    BYTE PTR [rax],0x70
   140049850:	(bad)  
   140049851:	push   rax
   140049852:	(bad)  
   140049853:	xor    BYTE PTR [rcx],ah
   140049855:	add    eax,0x64050002
   14004985a:	or     DWORD PTR [rax],eax
   14004985c:	rex retf 0x2
   140049860:	out    dx,eax
   140049861:	retf   
   140049862:	add    al,BYTE PTR [rax]
   140049864:	rex cwde 
   140049866:	add    al,0x0
   140049868:	and    DWORD PTR [rax],eax
   14004986a:	add    al,BYTE PTR [rax]
   14004986c:	add    BYTE PTR [rcx+rcx*1+0x0],ah
   140049870:	rex retf 0x2
   140049874:	out    dx,eax
   140049875:	retf   
   140049876:	add    al,BYTE PTR [rax]
   140049878:	rex cwde 
   14004987a:	add    al,0x0
   14004987c:	add    DWORD PTR [rax+0x8],esi
   14004987f:	add    BYTE PTR [rax-0x3c],dh
   140049882:	or     al,BYTE PTR [rax]
   140049884:	(bad)  
   140049885:	xor    al,0xb
   140049887:	add    BYTE PTR [rsi],cl
   140049889:	xor    cl,BYTE PTR [rdx]
   14004988b:	lock or al,ah
   14004988e:	(bad)  
   14004988f:	(bad)  
   140049890:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4099898
   140049896:	or     DWORD PTR [rax],eax
   140049898:	rcl    bl,0x2
   14004989b:	add    BYTE PTR [rsi+0x7c0002d4],dh
   1400498a1:	cwde   
   1400498a2:	add    al,0x0
   1400498a4:	and    DWORD PTR [rip+0x54050002],eax        # 0x1940998ac
   1400498aa:	or     BYTE PTR [rax],al
   1400498ac:	mov    dh,0xd4
   1400498ae:	add    al,BYTE PTR [rax]
   1400498b0:	xor    al,0xd5
   1400498b2:	add    al,BYTE PTR [rax]
   1400498b4:	nop
   1400498b5:	cwde   
   1400498b6:	add    al,0x0
   1400498b8:	and    DWORD PTR [rax],eax
   1400498ba:	add    BYTE PTR [rax],al
   1400498bc:	mov    dh,0xd4
   1400498be:	add    al,BYTE PTR [rax]
   1400498c0:	xor    al,0xd5
   1400498c2:	add    al,BYTE PTR [rax]
   1400498c4:	nop
   1400498c5:	cwde   
   1400498c6:	add    al,0x0
   1400498c8:	and    DWORD PTR [rax],eax
   1400498ca:	add    BYTE PTR [rax],al
   1400498cc:	rcl    bl,0x2
   1400498cf:	add    BYTE PTR [rsi+0x7c0002d4],dh
   1400498d5:	cwde   
   1400498d6:	add    al,0x0
   1400498d8:	add    DWORD PTR [rcx+rax*1],eax
   1400498db:	add    BYTE PTR [rdx+rax*2],al
   1400498de:	add    BYTE PTR [rax],al
   1400498e0:	add    DWORD PTR [rax],ebx
   1400498e2:	or     al,BYTE PTR [rax]
   1400498e4:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   1400498e8:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   1400498ec:	sbb    BYTE PTR [rax+rcx*1],dh
   1400498ef:	add    BYTE PTR [rax],bl
   1400498f1:	xor    dl,BYTE PTR [rax+rsi*8]
   1400498f4:	adc    ah,al
   1400498f6:	adc    BYTE PTR [rax+0x1],dh
   1400498f9:	or     al,BYTE PTR [rax+rax*1]
   1400498fc:	or     dh,BYTE PTR [rsi+rax*1]
   1400498ff:	add    BYTE PTR [rdx],cl
   140049901:	xor    al,BYTE PTR [rsi]
   140049903:	jo     0x140049906
   140049905:	or     al,BYTE PTR [rax+rax*1]
   140049908:	or     dh,BYTE PTR [rdx]
   14004990a:	(bad)  
   14004990b:	lock add al,0xc0
   14004990e:	add    dh,BYTE PTR [rax+0x21]
   140049911:	add    eax,0x34050002
   140049916:	or     BYTE PTR [rax],al
   140049918:	push   rax
   140049919:	xlat   BYTE PTR ds:[rbx]
   14004991a:	add    al,BYTE PTR [rax]
   14004991c:	xchg   ebx,eax
   14004991d:	xlat   BYTE PTR ds:[rbx]
   14004991e:	add    al,BYTE PTR [rax]
   140049920:	add    al,0x99
   140049922:	add    al,0x0
   140049924:	and    DWORD PTR [rax],eax
   140049926:	add    al,BYTE PTR [rax]
   140049928:	add    BYTE PTR [rax+rcx*1],dh
   14004992b:	add    BYTE PTR [rax-0x29],dl
   14004992e:	add    al,BYTE PTR [rax]
   140049930:	xchg   ebx,eax
   140049931:	xlat   BYTE PTR ds:[rbx]
   140049932:	add    al,BYTE PTR [rax]
   140049934:	add    al,0x99
   140049936:	add    al,0x0
   140049938:	and    DWORD PTR [rax],eax
   14004993a:	add    al,BYTE PTR [rax]
   14004993c:	add    BYTE PTR [rax+rcx*1],dh
   14004993f:	add    BYTE PTR [rax-0x29],dl
   140049942:	add    al,BYTE PTR [rax]
   140049944:	xchg   ebx,eax
   140049945:	xlat   BYTE PTR ds:[rbx]
   140049946:	add    al,BYTE PTR [rax]
   140049948:	add    al,0x99
   14004994a:	add    al,0x0
   14004994c:	and    DWORD PTR [rbx],ebx
   14004994e:	or     BYTE PTR [rax],al
   140049950:	sbb    esp,esp
   140049952:	or     eax,DWORD PTR [rax]
   140049954:	(bad)  
   140049955:	or     al,BYTE PTR fs:[rax]
   140049958:	or     DWORD PTR [rcx+rcx*1+0x0],edx
   14004995c:	add    BYTE PTR [rax+rcx*1],dh
   14004995f:	add    BYTE PTR [rax-0x29],dl
   140049962:	add    al,BYTE PTR [rax]
   140049964:	xchg   ebx,eax
   140049965:	xlat   BYTE PTR ds:[rbx]
   140049966:	add    al,BYTE PTR [rax]
   140049968:	add    al,0x99
   14004996a:	add    al,0x0
   14004996c:	add    DWORD PTR [rdx],ecx
   14004996e:	add    al,0x0
   140049970:	or     ah,BYTE PTR [rdi+rax*1+0x0]
   140049974:	or     dh,BYTE PTR [rdx]
   140049976:	(bad)  
   140049977:	jo     0x14004999a
   140049979:	add    eax,0x34050002
   14004997e:	(bad)  
   14004997f:	add    BYTE PTR [rax-0x7cfffd27],dh
   140049985:	fiadd  DWORD PTR [rdx]
   140049987:	add    BYTE PTR [rcx+rbx*4+0x4],ch
   14004998b:	add    BYTE PTR [rcx],ah
   14004998d:	add    BYTE PTR [rax],al
   14004998f:	add    BYTE PTR [rax-0x7cfffd27],dh
   140049995:	fiadd  DWORD PTR [rdx]
   140049997:	add    BYTE PTR [rcx+rbx*4+0x4],ch
   14004999b:	add    BYTE PTR [rcx],al
   14004999d:	add    eax,0x34050002
   1400499a2:	add    DWORD PTR [rax],eax
   1400499a4:	add    DWORD PTR [rsi],eax
   1400499a6:	add    al,BYTE PTR [rax]
   1400499a8:	(bad)  
   1400499a9:	xor    al,BYTE PTR [rdx]
   1400499ab:	jo     0x1400499ce
   1400499ad:	or     al,BYTE PTR [rax+rax*1]
   1400499b0:	or     ah,BYTE PTR [rdi+rax*1+0x0]
   1400499b4:	add    eax,0x80000634
   1400499b9:	in     al,dx
   1400499ba:	add    al,BYTE PTR [rax]
   1400499bc:	xchg   esp,eax
   1400499bd:	in     al,dx
   1400499be:	add    al,BYTE PTR [rax]
   1400499c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400499c1:	cdq    
   1400499c2:	add    al,0x0
   1400499c4:	and    DWORD PTR [rax],eax
   1400499c6:	add    BYTE PTR [rax],al
   1400499c8:	sub    ah,0x2
   1400499cb:	add    BYTE PTR [rsp+rbp*8-0x665bfffe],dl
   1400499d2:	add    al,0x0
   1400499d4:	add    DWORD PTR [rdx],ecx
   1400499d6:	add    al,0x0
   1400499d8:	or     dh,BYTE PTR [rax+rcx*1]
   1400499db:	add    BYTE PTR [rdx],cl
   1400499dd:	push   rdx
   1400499de:	(bad)  
   1400499df:	jo     0x1400499e2
   1400499e1:	or     al,BYTE PTR [rax+rax*1]
   1400499e4:	or     al,BYTE PTR [rcx]
   1400499e6:	rex.WRXB add BYTE PTR [r11],r8b
   1400499e9:	push   rax
   1400499ea:	add    dh,BYTE PTR [rax]
   1400499ec:	and    DWORD PTR [rax],ecx
   1400499ee:	add    al,BYTE PTR [rax]
   1400499f0:	or     BYTE PTR [rdx+rdx*2+0x0],ah
   1400499f4:	adc    dh,ch
   1400499f6:	add    al,BYTE PTR [rax]
   1400499f8:	rex.W out dx,al
   1400499fa:	add    al,BYTE PTR [rax]
   1400499fc:	loopne 0x140049997
   1400499fe:	add    al,0x0
   140049a00:	and    DWORD PTR [rdx],edx
   140049a02:	add    al,0x0
   140049a04:	adc    dh,BYTE PTR [rsi+rcx*2+0x0]
   140049a08:	add    BYTE PTR [rdx+rdx*2+0x0],ah
   140049a0c:	adc    dh,ch
   140049a0e:	add    al,BYTE PTR [rax]
   140049a10:	rex.W out dx,al
   140049a12:	add    al,BYTE PTR [rax]
   140049a14:	loopne 0x1400499af
   140049a16:	add    al,0x0
   140049a18:	and    DWORD PTR [rax],eax
   140049a1a:	add    al,BYTE PTR [rax]
   140049a1c:	add    BYTE PTR [rdx+rdx*2+0x0],ah
   140049a20:	adc    dh,ch
   140049a22:	add    al,BYTE PTR [rax]
   140049a24:	rex.W out dx,al
   140049a26:	add    al,BYTE PTR [rax]
   140049a28:	loopne 0x1400499c3
   140049a2a:	add    al,0x0
   140049a2c:	and    DWORD PTR [rax],eax
   140049a2e:	add    BYTE PTR [rax],al
   140049a30:	adc    dh,ch
   140049a32:	add    al,BYTE PTR [rax]
   140049a34:	rex.W out dx,al
   140049a36:	add    al,BYTE PTR [rax]
   140049a38:	loopne 0x1400499d3
   140049a3a:	add    al,0x0
   140049a3c:	add    DWORD PTR [rdi],ecx
   140049a3e:	(bad)  
   140049a3f:	add    BYTE PTR [rdi],cl
   140049a41:	fs (bad) 
   140049a43:	add    BYTE PTR [rdi],cl
   140049a45:	xor    al,0x6
   140049a47:	add    BYTE PTR [rdi],cl
   140049a49:	xor    cl,BYTE PTR [rbx]
   140049a4b:	jo     0x140049a4e
   140049a4d:	or     al,BYTE PTR [rax+rax*1]
   140049a50:	or     dh,BYTE PTR [rax+rcx*1]
   140049a53:	add    BYTE PTR [rdx],cl
   140049a55:	push   rdx
   140049a56:	(bad)  
   140049a57:	jo     0x140049a5a
   140049a59:	add    al,0x1
   140049a5b:	add    BYTE PTR [rdx+rax*2],al
   140049a5e:	add    BYTE PTR [rax],al
   140049a60:	add    DWORD PTR [rcx+rax*1],eax
   140049a63:	add    BYTE PTR [rdx+rax*2],al
   140049a66:	add    BYTE PTR [rax],al
   140049a68:	add    DWORD PTR [rsi],eax
   140049a6a:	add    al,BYTE PTR [rax]
   140049a6c:	(bad)  
   140049a6d:	push   rdx
   140049a6e:	add    dh,BYTE PTR [rax]
   140049a70:	add    DWORD PTR [rax],ebp
   140049a72:	(bad)  
   140049a73:	add    BYTE PTR [rax],ch
   140049a75:	push   0x340f0003
   140049a7a:	or     al,BYTE PTR [rax]
   140049a7c:	(bad)  
   140049a7e:	or     esi,DWORD PTR [rax+0x1]
   140049a81:	add    al,0x1
   140049a83:	add    BYTE PTR [rdx+rax*2],al
   140049a86:	add    BYTE PTR [rax],al
   140049a88:	add    DWORD PTR [rsi],eax
   140049a8a:	add    al,BYTE PTR [rax]
   140049a8c:	(bad)  
   140049a8d:	xor    al,BYTE PTR [rdx]
   140049a8f:	xor    BYTE PTR [rcx],al
   140049a91:	(bad)  
   140049a92:	add    al,BYTE PTR [rax]
   140049a94:	(bad)  
   140049a95:	xor    al,BYTE PTR [rdx]
   140049a97:	xor    BYTE PTR [rcx],al
   140049a99:	(bad)  
   140049a9a:	add    al,BYTE PTR [rax]
   140049a9c:	(bad)  
   140049a9d:	xor    al,BYTE PTR [rdx]
   140049a9f:	xor    BYTE PTR [rcx],al
   140049aa1:	add    al,0x1
   140049aa3:	add    BYTE PTR [rdx+rax*2],al
   140049aa6:	add    BYTE PTR [rax],al
   140049aa8:	add    DWORD PTR [rcx+rax*1],eax
   140049aab:	add    BYTE PTR [rdx+rax*2],al
   140049aae:	add    BYTE PTR [rax],al
   140049ab0:	add    DWORD PTR [rax],esp
   140049ab2:	(bad)  
   140049ab3:	add    BYTE PTR [rax],ah
   140049ab5:	push   0x340a0002
   140049aba:	or     BYTE PTR [rax],al
   140049abc:	or     dl,BYTE PTR [rdx+0x6]
   140049abf:	jo     0x140049ac2
   140049ac1:	add    al,0x1
   140049ac3:	add    BYTE PTR [rdx+riz*4],al
   140049ac6:	add    BYTE PTR [rax],al
   140049ac8:	add    DWORD PTR [rdx],ecx
   140049aca:	add    al,0x0
   140049acc:	or     dh,BYTE PTR [rsi+rax*1]
   140049acf:	add    BYTE PTR [rdx],cl
   140049ad1:	xor    al,BYTE PTR [rsi]
   140049ad3:	jo     0x140049ad6
   140049ad5:	clts   
   140049ad7:	add    BYTE PTR [rdi],cl
   140049ad9:	fs (bad) 
   140049adb:	add    BYTE PTR [rdi],cl
   140049add:	xor    al,0x6
   140049adf:	add    BYTE PTR [rdi],cl
   140049ae1:	xor    cl,BYTE PTR [rbx]
   140049ae3:	jo     0x140049ae6
   140049ae5:	adc    eax,DWORD PTR [rax+rax*1]
   140049ae8:	adc    ebp,DWORD PTR [rax+0x4]
   140049aeb:	add    BYTE PTR [rdx],cl
   140049aed:	xchg   edx,eax
   140049aee:	(bad)  
   140049aef:	xor    BYTE PTR [rcx],al
   140049af1:	or     al,BYTE PTR [rax+rax*1]
   140049af4:	or     dh,BYTE PTR [rdx+rcx*1]
   140049af7:	add    BYTE PTR [rdx],cl
   140049af9:	jb     0x140049b01
   140049afb:	jo     0x140049afe
   140049afd:	clts   
   140049aff:	add    BYTE PTR [rdi],cl
   140049b01:	push   rsp
   140049b02:	str    WORD PTR [rdi]
   140049b05:	xor    al,0xe
   140049b07:	add    BYTE PTR [rdi],cl
   140049b09:	xchg   edx,eax
   140049b0a:	or     esp,DWORD PTR [rax+0x21]
   140049b0d:	or     al,BYTE PTR [rax+rax*1]
   140049b10:	or     ah,ah
   140049b12:	or     eax,0xc740500
   140049b17:	add    BYTE PTR [rax],al
   140049b19:	call   0x1282e9b20
   140049b1e:	add    al,BYTE PTR [rax]
   140049b20:	cld    
   140049b21:	(bad)  
   140049b22:	add    al,0x0
   140049b24:	and    DWORD PTR [rax],eax
   140049b26:	add    BYTE PTR [rax],al
   140049b28:	add    al,ch
   140049b2a:	add    al,BYTE PTR [rax]
   140049b2c:	sub    ch,al
   140049b2e:	add    al,BYTE PTR [rax]
   140049b30:	cld    
   140049b31:	(bad)  
   140049b32:	add    al,0x0
   140049b34:	add    DWORD PTR [rdi],ecx
   140049b36:	add    al,0x0
   140049b38:	sysenter 
   140049b3a:	or     al,BYTE PTR [rax]
   140049b3c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140049b3f:	jo     0x140049b62
   140049b41:	add    eax,0x64050002
   140049b46:	or     DWORD PTR [rax],eax
   140049b48:	lock jmp 0x12a189b50
   140049b4e:	add    al,BYTE PTR [rax]
   140049b50:	xor    al,0x9b
   140049b52:	add    al,0x0
   140049b54:	and    DWORD PTR [rax],eax
   140049b56:	add    BYTE PTR [rax],al
   140049b58:	lock jmp 0x12a189b60
   140049b5e:	add    al,BYTE PTR [rax]
   140049b60:	xor    al,0x9b
   140049b62:	add    al,0x0
   140049b64:	add    DWORD PTR [rdi],ecx
   140049b66:	(bad)  
   140049b67:	add    BYTE PTR [rdi],cl
   140049b69:	fs (bad) 
   140049b6b:	add    BYTE PTR [rdi],cl
   140049b6d:	xor    al,0x6
   140049b6f:	add    BYTE PTR [rdi],cl
   140049b71:	xor    cl,BYTE PTR [rbx]
   140049b73:	jo     0x140049b76
   140049b75:	sbb    BYTE PTR [rdx],cl
   140049b77:	add    BYTE PTR [rax],bl
   140049b79:	fs or  al,0x0
   140049b7c:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   140049b80:	sbb    BYTE PTR [rdx+rcx*1],dh
   140049b83:	add    BYTE PTR [rax],bl
   140049b85:	push   rdx
   140049b86:	adc    al,0xf0
   140049b88:	adc    ah,al
   140049b8a:	adc    BYTE PTR [rax+0x1],dh
   140049b8d:	clts   
   140049b8f:	add    BYTE PTR [rdi],cl
   140049b91:	fs (bad) 
   140049b93:	add    BYTE PTR [rdi],cl
   140049b95:	xor    al,0x6
   140049b97:	add    BYTE PTR [rdi],cl
   140049b99:	xor    cl,BYTE PTR [rbx]
   140049b9b:	jo     0x140049b9e
   140049b9d:	or     al,BYTE PTR [rax+rax*1]
   140049ba0:	or     dh,BYTE PTR [rdx+rcx*1]
   140049ba3:	add    BYTE PTR [rdx],cl
   140049ba5:	jb     0x140049bad
   140049ba7:	jo     0x140049baa
   140049ba9:	clts   
   140049bab:	add    BYTE PTR [rdi],cl
   140049bad:	or     eax,DWORD PTR fs:[rax]
   140049bb0:	sysenter 
   140049bb2:	or     al,BYTE PTR [rax]
   140049bb4:	(bad)  
   140049bb6:	or     esi,DWORD PTR [rax+0x1]
   140049bb9:	(bad)  
   140049bba:	add    al,BYTE PTR [rax]
   140049bbc:	(bad)  
   140049bbd:	mov    dl,0x2
   140049bbf:	(bad)  
   140049bc0:	and    DWORD PTR [rax],ecx
   140049bc2:	add    al,BYTE PTR [rax]
   140049bc4:	or     BYTE PTR [rax+rdx*1+0x0],dh
   140049bc8:	adc    BYTE PTR [rdx],0x3
   140049bcb:	add    BYTE PTR [rsi-0x47fffcee],dh
   140049bd1:	fwait
   140049bd2:	add    al,0x0
   140049bd4:	and    DWORD PTR [rdx],ecx
   140049bd6:	add    al,0x0
   140049bd8:	or     dl,BYTE PTR [rdi+rcx*1+0x0]
   140049bdc:	add    eax,0xb6000e34
   140049be1:	adc    al,BYTE PTR [rbx]
   140049be3:	add    cl,bh
   140049be5:	adc    al,BYTE PTR [rbx]
   140049be7:	add    al,al
   140049be9:	fwait
   140049bea:	add    al,0x0
   140049bec:	and    DWORD PTR [rax],eax
   140049bee:	add    BYTE PTR [rax],al
   140049bf0:	mov    dh,0x12
   140049bf2:	add    eax,DWORD PTR [rax]
   140049bf4:	stc    
   140049bf5:	adc    al,BYTE PTR [rbx]
   140049bf7:	add    al,al
   140049bf9:	fwait
   140049bfa:	add    al,0x0
   140049bfc:	and    DWORD PTR [rax],eax
   140049bfe:	add    BYTE PTR [rax],al
   140049c00:	adc    BYTE PTR [rdx],0x3
   140049c03:	add    BYTE PTR [rsi-0x47fffcee],dh
   140049c09:	fwait
   140049c0a:	add    al,0x0
   140049c0c:	add    DWORD PTR [rcx+rax*1],eax
   140049c0f:	add    BYTE PTR [rdx+rax*2],al
   140049c12:	add    BYTE PTR [rax],al
   140049c14:	add    DWORD PTR [rcx+rax*1],eax
   140049c17:	add    BYTE PTR [rdx+rax*2],al
   140049c1a:	add    BYTE PTR [rax],al
   140049c1c:	add    DWORD PTR [rip+0x340d0005],ecx        # 0x174119c27
   140049c22:	(bad)  
   140049c23:	add    BYTE PTR [rip+0x6001a01],cl        # 0x14604b62a
   140049c29:	push   rax
   140049c2a:	add    BYTE PTR [rax],al
   140049c2c:	and    DWORD PTR [rcx],ebx
   140049c2e:	add    al,0x0
   140049c30:	sbb    DWORD PTR [rbp+rbx*1+0x0],esi
   140049c34:	or     BYTE PTR [rsp+rbx*1+0x0],ah
   140049c38:	loopne 0x140049c49
   140049c3a:	add    eax,DWORD PTR [rax]
   140049c3c:	adc    BYTE PTR [rbx],al
   140049c3f:	add    BYTE PTR [rsp+rbx*4],bl
   140049c42:	add    al,0x0
   140049c44:	and    DWORD PTR [rax],eax
   140049c46:	add    BYTE PTR [rax],al
   140049c48:	loopne 0x140049c59
   140049c4a:	add    eax,DWORD PTR [rax]
   140049c4c:	adc    BYTE PTR [rbx],al
   140049c4f:	add    BYTE PTR [rsp+rbx*4],bl
   140049c52:	add    al,0x0
   140049c54:	add    DWORD PTR [rdx],ecx
   140049c56:	add    al,0x0
   140049c58:	or     dh,BYTE PTR [rdx+rcx*1]
   140049c5b:	add    BYTE PTR [rdx],cl
   140049c5d:	jb     0x140049c65
   140049c5f:	jo     0x140049c62
   140049c61:	add    al,0x1
   140049c63:	add    BYTE PTR [rdx+rax*2],al
   140049c66:	add    BYTE PTR [rax],al
   140049c68:	and    DWORD PTR [rdx],ecx
   140049c6a:	add    al,0x0
   140049c6c:	or     dh,BYTE PTR [rsp+rax*1+0x0]
   140049c70:	add    eax,0x634
   140049c75:	adc    eax,0x154a0003
   140049c7a:	add    eax,DWORD PTR [rax]
   140049c7c:	(bad)  
   140049c7d:	pushf  
   140049c7e:	add    al,0x0
   140049c80:	and    DWORD PTR [rax],eax
   140049c82:	add    al,0x0
   140049c84:	add    BYTE PTR [rsp+rax*1+0x0],dh
   140049c88:	add    BYTE PTR [rsi+rax*1],dh
   140049c8b:	add    BYTE PTR [rax],al
   140049c8d:	adc    eax,0x154a0003
   140049c92:	add    eax,DWORD PTR [rax]
   140049c94:	(bad)  
   140049c95:	pushf  
   140049c96:	add    al,0x0
   140049c98:	and    DWORD PTR [rax],eax
   140049c9a:	add    BYTE PTR [rax],al
   140049c9c:	add    BYTE PTR [rip+0x154a0003],dl        # 0x1554e9ca5
   140049ca2:	add    eax,DWORD PTR [rax]
   140049ca4:	(bad)  
   140049ca5:	pushf  
   140049ca6:	add    al,0x0
   140049ca8:	add    DWORD PTR [rsi],eax
   140049caa:	add    al,BYTE PTR [rax]
   140049cac:	(bad)  
   140049cad:	xor    al,BYTE PTR [rdx]
   140049caf:	xor    BYTE PTR [rcx],al
   140049cb1:	clts   
   140049cb3:	add    BYTE PTR [rdi],cl
   140049cb5:	fs or  eax,0xc340f00
   140049cbb:	add    BYTE PTR [rdi],cl
   140049cbd:	xchg   edx,eax
   140049cbe:	or     esi,DWORD PTR [rax+0x1]
   140049cc1:	(bad)  
   140049cc2:	add    al,BYTE PTR [rax]
   140049cc4:	(bad)  
   140049cc5:	xor    al,BYTE PTR [rdx]
   140049cc7:	xor    BYTE PTR [rcx],al
   140049cc9:	add    al,0x1
   140049ccb:	add    BYTE PTR [rdx+rax*2],al
   140049cce:	add    BYTE PTR [rax],al
   140049cd0:	add    DWORD PTR [rdx],ecx
   140049cd2:	add    al,0x0
   140049cd4:	or     dh,BYTE PTR [rsi+rax*1]
   140049cd7:	add    BYTE PTR [rdx],cl
   140049cd9:	xor    al,BYTE PTR [rsi]
   140049cdb:	jo     0x140049cde
   140049cdd:	or     eax,0x340d0004
   140049ce2:	adc    al,BYTE PTR [rax]
   140049ce4:	or     eax,0x17006f2
   140049ce9:	and    cl,BYTE PTR [rcx]
   140049ceb:	add    BYTE PTR [rdx],ah
   140049ced:	push   0x64170008
   140049cf2:	(bad)  
   140049cf3:	add    BYTE PTR [rdi],dl
   140049cf5:	xor    al,0x14
   140049cf7:	add    BYTE PTR [rdi],dl
   140049cf9:	add    DWORD PTR [rdx],edx
   140049cfb:	add    BYTE PTR [rax],dl
   140049cfd:	jo     0x140049cff
   140049cff:	add    BYTE PTR [rcx],al
   140049d01:	or     al,BYTE PTR [rax+rax*1]
   140049d04:	or     dh,BYTE PTR [rdx+rcx*1]
   140049d07:	add    BYTE PTR [rdx],cl
   140049d09:	jb     0x140049d11
   140049d0b:	jo     0x140049d0e
   140049d0d:	add    al,0x1
   140049d0f:	add    BYTE PTR [rdx+rax*2],al
   140049d12:	add    BYTE PTR [rax],al
   140049d14:	add    DWORD PTR [rdi],ecx
   140049d16:	(bad)  
   140049d17:	add    BYTE PTR [rdi],cl
   140049d19:	or     BYTE PTR fs:[rax],al
   140049d1c:	sysenter 
   140049d1e:	(bad)  
   140049d1f:	add    BYTE PTR [rdi],cl
   140049d21:	xor    cl,BYTE PTR [rbx]
   140049d23:	jo     0x140049d46
   140049d25:	add    eax,0x54050002
   140049d2a:	(bad)  
   140049d2b:	add    BYTE PTR [rax-0x43fffcf5],ah
   140049d31:	or     eax,DWORD PTR [rbx]
   140049d33:	add    BYTE PTR [rbx*4+0x210004],dl
   140049d3a:	add    BYTE PTR [rax],al
   140049d3c:	movabs al,ds:0x1400030bbc00030b
   140049d45:	popf   
   140049d46:	add    al,0x0
   140049d48:	add    DWORD PTR [rax],edx
   140049d4a:	add    eax,0xa681000
   140049d4f:	add    BYTE PTR [rcx+rax*1],cl
   140049d52:	(bad)  
   140049d53:	add    BYTE PTR [rip+0x210000f0],al        # 0x161049e49
   140049d59:	clts   
   140049d5b:	add    BYTE PTR [rdi],cl
   140049d5d:	in     al,0x1b
   140049d5f:	add    BYTE PTR [rbx],cl
   140049d61:	je     0x140049d7d
   140049d63:	add    BYTE PTR [rsp+rsi*1],al
   140049d66:	sbb    BYTE PTR [rax],al
   140049d68:	and    BYTE PTR [rbx+rax*1],cl
   140049d6b:	add    BYTE PTR [rax],dh
   140049d6d:	or     al,0x3
   140049d6f:	add    BYTE PTR [rax-0x63],cl
   140049d72:	add    al,0x0
   140049d74:	and    DWORD PTR [rdx+rax*1],eax
   140049d77:	add    BYTE PTR [rsp+riz*2],al
   140049d7a:	sbb    DWORD PTR [rax],eax
   140049d7c:	xor    BYTE PTR [rbx+rax*1],cl
   140049d7f:	add    BYTE PTR [rcx+0xc],dl
   140049d82:	add    eax,DWORD PTR [rax]
   140049d84:	pop    rax
   140049d85:	popf   
   140049d86:	add    al,0x0
   140049d88:	and    DWORD PTR [rax],eax
   140049d8a:	add    BYTE PTR [rax],al
   140049d8c:	xor    BYTE PTR [rbx+rax*1],cl
   140049d8f:	add    BYTE PTR [rcx+0xc],dl
   140049d92:	add    eax,DWORD PTR [rax]
   140049d94:	pop    rax
   140049d95:	popf   
   140049d96:	add    al,0x0
   140049d98:	and    DWORD PTR [rax],eax
   140049d9a:	add    BYTE PTR [rax],al
   140049d9c:	and    BYTE PTR [rbx+rax*1],cl
   140049d9f:	add    BYTE PTR [rax],dh
   140049da1:	or     al,0x3
   140049da3:	add    BYTE PTR [rax-0x63],cl
   140049da6:	add    al,0x0
   140049da8:	add    DWORD PTR [rsi],ecx
   140049daa:	add    eax,DWORD PTR [rax]
   140049dac:	(bad)  
   140049dad:	push   0xffffffffa2040004
   140049db2:	add    BYTE PTR [rax],al
   140049db4:	add    DWORD PTR [rcx+rax*1],eax
   140049db7:	add    BYTE PTR [rdx+rax*4],al
   140049dba:	add    BYTE PTR [rax],al
   140049dbc:	add    DWORD PTR [rdi],eax
   140049dbe:	add    eax,DWORD PTR [rax]
   140049dc0:	(bad)  
   140049dc1:	(bad)  
   140049dc3:	(bad)  
   140049dc4:	add    dh,BYTE PTR [rax]
   140049dc6:	add    BYTE PTR [rax],al
   140049dc8:	and    DWORD PTR [rdi],esp
   140049dca:	or     al,0x0
   140049dcc:	(bad)  
   140049dcd:	je     0x140049ddb
   140049dcf:	add    BYTE PTR [rcx],bl
   140049dd1:	hlt    
   140049dd2:	add    al,0x0
   140049dd4:	adc    al,0xe4
   140049dd6:	add    eax,0x6d40f00
   140049ddb:	add    BYTE PTR [rdx],cl
   140049ddd:	(bad)  
   140049dde:	or     eax,0xb540500
   140049de3:	add    BYTE PTR [rax],al
   140049de5:	clc    
   140049de6:	add    al,BYTE PTR [rax]
   140049de8:	(bad)  
   140049de9:	clc    
   140049dea:	add    al,BYTE PTR [rax]
   140049dec:	mov    esp,0x2100049d
   140049df1:	add    BYTE PTR [rax],al
   140049df3:	add    BYTE PTR [rax],al
   140049df5:	clc    
   140049df6:	add    al,BYTE PTR [rax]
   140049df8:	(bad)  
   140049df9:	clc    
   140049dfa:	add    al,BYTE PTR [rax]
   140049dfc:	mov    esp,0x100049d
   140049e01:	or     DWORD PTR [rbx],eax
   140049e03:	add    BYTE PTR [rcx],cl
   140049e05:	add    DWORD PTR [rsi],edx
   140049e07:	add    BYTE PTR [rdx],al
   140049e09:	xor    BYTE PTR [rax],al
   140049e0b:	add    BYTE PTR [rcx],al
   140049e0d:	rex.WRX (bad) 
   140049e0f:	add    BYTE PTR [rsi-0x48],cl
   140049e12:	add    al,BYTE PTR [rax]
   140049e14:	xor    ebp,DWORD PTR [rax-0x67d2fffd]
   140049e1a:	add    al,0x0
   140049e1c:	(bad)  
   140049e1d:	mov    BYTE PTR [rip+0x6781100],al        # 0x1467caf23
   140049e23:	add    BYTE PTR [rax+rbp*2],cl
   140049e26:	(bad)  
   140049e27:	add    BYTE PTR [rdi],al
   140049e29:	add    DWORD PTR [rcx],edx
   140049e2b:	add    BYTE PTR [rcx],al
   140049e2d:	jbe    0x140049e41
   140049e2f:	add    BYTE PTR [rsi-0x8],dh
   140049e32:	or     BYTE PTR [rax],al
   140049e34:	fs call 0x1184e9e43
   140049e3a:	or     al,BYTE PTR [rax]
   140049e3c:	rex.X enter 0xb,0x3d
   140049e41:	mov    eax,0xa821000c
   140049e46:	or     eax,0x10781c00
   140049e4b:	add    BYTE PTR [rax],bl
   140049e4d:	push   0x1140011
   140049e52:	and    eax,0x4122100
   140049e57:	add    BYTE PTR [rdx],dl
   140049e59:	cwde   
   140049e5a:	(bad)  
   140049e5b:	add    BYTE PTR [rcx],cl
   140049e5d:	mov    BYTE PTR [rdi],cl
   140049e5f:	add    BYTE PTR [rax],dh
   140049e61:	add    eax,DWORD PTR [rbx]
   140049e63:	add    BYTE PTR [rdx+0x4],al
   140049e66:	add    eax,DWORD PTR [rax]
   140049e68:	sub    al,0x9e
   140049e6a:	add    al,0x0
   140049e6c:	and    DWORD PTR [rax],eax
   140049e6e:	add    BYTE PTR [rax],al
   140049e70:	xor    BYTE PTR [rbx],al
   140049e72:	add    eax,DWORD PTR [rax]
   140049e74:	rex.X add al,0x3
   140049e77:	add    BYTE PTR [rsi+rbx*4],ch
   140049e7a:	add    al,0x0
   140049e7c:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x174119e86
   140049e82:	adc    al,BYTE PTR [rax]
   140049e84:	or     eax,0x217006f2
   140049e89:	(bad)  
   140049e8a:	add    al,0x0
   140049e8c:	(bad)  
   140049e8d:	js     0x140049e95
   140049e8f:	add    BYTE PTR [rip+0xffffffffe0000768],al        # 0x12004a5fd
   140049e95:	cli    
   140049e96:	add    al,BYTE PTR [rax]
   140049e98:	jns    0x140049e95
   140049e9a:	add    al,BYTE PTR [rax]
   140049e9c:	jl     0x140049e3c
   140049e9e:	add    al,0x0
   140049ea0:	and    DWORD PTR [rax],eax
   140049ea2:	add    BYTE PTR [rax],al
   140049ea4:	loopne 0x140049ea0
   140049ea6:	add    al,BYTE PTR [rax]
   140049ea8:	jns    0x140049ea5
   140049eaa:	add    al,BYTE PTR [rax]
   140049eac:	jl     0x140049e4c
   140049eae:	add    al,0x0
   140049eb0:	add    DWORD PTR [rax],edx
   140049eb2:	add    eax,0x14011000
   140049eb7:	add    BYTE PTR [rcx],cl
   140049eb9:	lock (bad) 
   140049ebb:	loopne 0x140049ec2
   140049ebd:	rol    BYTE PTR [rax],0x0
   140049ec0:	and    DWORD PTR [rdx+rax*1],eax
   140049ec3:	add    BYTE PTR [rsp+rsi*1],al
   140049ec6:	sbb    BYTE PTR [rax],al
   140049ec8:	sar    ah,1
   140049eca:	add    al,BYTE PTR [rax]
   140049ecc:	or     ch,bh
   140049ece:	add    al,BYTE PTR [rax]
   140049ed0:	mov    al,0x9e
   140049ed2:	add    al,0x0
   140049ed4:	and    DWORD PTR [rip+0xffffffffd4250008],esp        # 0x114299ee2
   140049eda:	adc    al,BYTE PTR [rax]
   140049edc:	adc    DWORD PTR [rbx+rdx*1+0x0],esi
   140049ee0:	or     BYTE PTR [rdx+rbx*1+0x0],ah
   140049ee4:	add    al,0x54
   140049ee6:	sbb    DWORD PTR [rax],eax
   140049ee8:	or     ch,bh
   140049eea:	add    al,BYTE PTR [rax]
   140049eec:	or     al,0xfd
   140049eee:	add    al,BYTE PTR [rax]
   140049ef0:	rcr    BYTE PTR [rsi+0x210004],0x4
   140049ef7:	add    BYTE PTR [rax],al
   140049ef9:	(bad)  
   140049efa:	adc    al,BYTE PTR [rax]
   140049efc:	add    BYTE PTR [rbx+rdx*1+0x0],dh
   140049f00:	or     ch,bh
   140049f02:	add    al,BYTE PTR [rax]
   140049f04:	or     al,0xfd
   140049f06:	add    al,BYTE PTR [rax]
   140049f08:	rcr    BYTE PTR [rsi+0x210004],0x0
   140049f0f:	add    al,dl
   140049f11:	cld    
   140049f12:	add    al,BYTE PTR [rax]
   140049f14:	or     ch,bh
   140049f16:	add    al,BYTE PTR [rax]
   140049f18:	mov    al,0x9e
   140049f1a:	add    al,0x0
   140049f1c:	add    DWORD PTR [rdx],edx
   140049f1e:	(bad)  
   140049f1f:	add    BYTE PTR [rdx],dl
   140049f21:	fs sbb eax,0x1c341200
   140049f27:	add    BYTE PTR [rdx],dl
   140049f29:	add    DWORD PTR [rdx],ebx
   140049f2b:	add    BYTE PTR [rbx],cl
   140049f2d:	jo     0x140049f2f
   140049f2f:	add    BYTE PTR [rcx],al
   140049f31:	or     eax,DWORD PTR [rbx]
   140049f33:	add    BYTE PTR [rbx],cl
   140049f35:	loop   0x140049f3e
   140049f37:	lock add eax,0x210000e0
   140049f3d:	add    al,0x2
   140049f3f:	add    BYTE PTR [rsp+rsi*1],al
   140049f42:	adc    al,BYTE PTR [rax]
   140049f44:	loopne 0x140049f46
   140049f46:	add    eax,DWORD PTR [rax]
   140049f48:	adc    BYTE PTR [rcx],al
   140049f4a:	add    eax,DWORD PTR [rax]
   140049f4c:	xor    BYTE PTR [rdi+0x1f210004],bl
   140049f52:	or     BYTE PTR [rax],al
   140049f54:	(bad)  
   140049f55:	(bad)  
   140049f56:	(bad)  
   140049f57:	add    BYTE PTR [rsp+rsi*2],cl
   140049f5a:	adc    eax,0x14640800
   140049f5f:	add    BYTE PTR [rsp+rdx*2],al
   140049f62:	adc    eax,DWORD PTR [rax]
   140049f64:	adc    BYTE PTR [rcx],al
   140049f66:	add    eax,DWORD PTR [rax]
   140049f68:	adc    al,0x1
   140049f6a:	add    eax,DWORD PTR [rax]
   140049f6c:	cmp    al,0x9f
   140049f6e:	add    al,0x0
   140049f70:	and    DWORD PTR [rax],eax
   140049f72:	add    al,0x0
   140049f74:	add    ah,al
   140049f76:	(bad)  
   140049f77:	add    BYTE PTR [rax],al
   140049f79:	je     0x140049f90
   140049f7b:	add    BYTE PTR [rax],dl
   140049f7d:	add    DWORD PTR [rbx],eax
   140049f7f:	add    BYTE PTR [rcx+rax*1],dl
   140049f82:	add    eax,DWORD PTR [rax]
   140049f84:	cmp    al,0x9f
   140049f86:	add    al,0x0
   140049f88:	and    DWORD PTR [rax],eax
   140049f8a:	add    BYTE PTR [rax],al
   140049f8c:	loopne 0x140049f8e
   140049f8e:	add    eax,DWORD PTR [rax]
   140049f90:	adc    BYTE PTR [rcx],al
   140049f92:	add    eax,DWORD PTR [rax]
   140049f94:	xor    BYTE PTR [rdi+0xf010004],bl
   140049f9a:	(bad)  
   140049f9b:	add    BYTE PTR [rdi],cl
   140049f9d:	fs (bad) 
   140049f9f:	add    BYTE PTR [rdi],cl
   140049fa1:	xor    al,0x6
   140049fa3:	add    BYTE PTR [rdi],cl
   140049fa5:	xor    cl,BYTE PTR [rbx]
   140049fa7:	jo     0x140049faa
   140049fa9:	clts   
   140049fab:	add    BYTE PTR [rdi],cl
   140049fad:	or     eax,DWORD PTR fs:[rax]
   140049fb0:	sysenter 
   140049fb2:	or     al,BYTE PTR [rax]
   140049fb4:	(bad)  
   140049fb6:	or     esi,DWORD PTR [rax+0x1]
   140049fb9:	add    al,0x1
   140049fbb:	add    BYTE PTR [rdx+riz*2],al
   140049fbe:	add    BYTE PTR [rax],al
   140049fc0:	add    DWORD PTR [rcx+rax*1],eax
   140049fc3:	add    BYTE PTR [rdx+riz*2],al
   140049fc6:	add    BYTE PTR [rax],al
   140049fc8:	add    DWORD PTR [rcx+rax*1],eax
   140049fcb:	add    BYTE PTR [rdx+rax*2],al
   140049fce:	add    BYTE PTR [rax],al
   140049fd0:	add    DWORD PTR [rdx],ecx
   140049fd2:	add    al,0x0
   140049fd4:	or     dh,BYTE PTR [rax+rcx*1]
   140049fd7:	add    BYTE PTR [rdx],cl
   140049fd9:	push   rdx
   140049fda:	(bad)  
   140049fdb:	jo     0x140049fde
   140049fdd:	(bad)  
   140049fde:	add    al,BYTE PTR [rax]
   140049fe0:	(bad)  
   140049fe1:	push   rdx
   140049fe2:	add    dh,BYTE PTR [rax]
   140049fe4:	add    DWORD PTR [rcx+rax*1],eax
   140049fe7:	add    BYTE PTR [rdx+rax*2],al
   140049fea:	add    BYTE PTR [rax],al
   140049fec:	add    DWORD PTR [rsi],eax
   140049fee:	add    al,BYTE PTR [rax]
   140049ff0:	(bad)  
   140049ff1:	xor    al,BYTE PTR [rdx]
   140049ff3:	xor    BYTE PTR [rcx],al
   140049ff5:	(bad)  
   140049ff6:	add    al,BYTE PTR [rax]
   140049ff8:	(bad)  
   140049ff9:	xor    al,BYTE PTR [rdx]
   140049ffb:	xor    BYTE PTR [rcx],al
   140049ffd:	add    al,0x1
   140049fff:	add    BYTE PTR [rdx+rax*2],al
   14004a002:	add    BYTE PTR [rax],al
   14004a004:	add    DWORD PTR [rdi],ecx
   14004a006:	(bad)  
   14004a007:	add    BYTE PTR [rdi],cl
   14004a009:	or     DWORD PTR fs:[rax],eax
   14004a00c:	sysenter 
   14004a00e:	or     BYTE PTR [rax],al
   14004a010:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14004a013:	jo     0x14004a016
   14004a015:	adc    al,0x8
   14004a017:	add    BYTE PTR [rsp+riz*2],dl
   14004a01a:	or     al,BYTE PTR [rax]
   14004a01c:	adc    al,0x54
   14004a01e:	or     DWORD PTR [rax],eax
   14004a020:	adc    al,0x34
   14004a022:	or     BYTE PTR [rax],al
   14004a024:	adc    al,0x52
   14004a026:	adc    BYTE PTR [rax+0x1],dh
   14004a029:	adc    eax,0x74150008
   14004a02e:	or     BYTE PTR [rax],al
   14004a030:	adc    eax,0x15000764
   14004a035:	xor    al,0x6
   14004a037:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e4b16f
   14004a03d:	or     BYTE PTR [rdx],al
   14004a03f:	add    BYTE PTR [rax],cl
   14004a041:	xchg   edx,eax
   14004a042:	add    al,0x70
   14004a044:	and    DWORD PTR [rsi],edx
   14004a046:	add    al,0x0
   14004a048:	(bad)  
   14004a049:	fs (bad) 
   14004a04b:	add    BYTE PTR [rsp+rsi*1],al
   14004a04e:	or     al,0x0
   14004a050:	and    BYTE PTR [rbx+rax*1],bl
   14004a053:	add    BYTE PTR [rdi],ch
   14004a055:	sbb    al,0x3
   14004a057:	add    BYTE PTR [rax+riz*4],bh
   14004a05a:	add    al,0x0
   14004a05c:	and    DWORD PTR [rdx+rcx*1],edx
   14004a05f:	add    BYTE PTR [rsp+rsi*8],dl
   14004a062:	(bad)  
   14004a063:	add    BYTE PTR [rax],dl
   14004a065:	in     al,0x7
   14004a067:	add    BYTE PTR [rsp+rdx*8],cl
   14004a06a:	or     BYTE PTR [rax],al
   14004a06c:	or     ah,al
   14004a06e:	or     DWORD PTR [rax],eax
   14004a070:	add    al,0x54
   14004a072:	or     eax,0x31c2f00
   14004a077:	add    BYTE PTR [rsp+rbx*1+0x3],dl
   14004a07b:	add    BYTE PTR [rax+riz*4+0x4],al
   14004a07f:	add    BYTE PTR [rcx],ah
   14004a081:	add    BYTE PTR [rax],al
   14004a083:	add    BYTE PTR [rdi],ch
   14004a085:	sbb    al,0x3
   14004a087:	add    BYTE PTR [rsp+rbx*1+0x3],dl
   14004a08b:	add    BYTE PTR [rax+riz*4+0x4],al
   14004a08f:	add    BYTE PTR [rcx],ah
   14004a091:	add    BYTE PTR [rax],al
   14004a093:	add    BYTE PTR [rax],ah
   14004a095:	sbb    al,0x3
   14004a097:	add    BYTE PTR [rdi],ch
   14004a099:	sbb    al,0x3
   14004a09b:	add    BYTE PTR [rax+riz*4],bh
   14004a09e:	add    al,0x0
   14004a0a0:	add    DWORD PTR [rdi],ecx
   14004a0a2:	(bad)  
   14004a0a3:	add    BYTE PTR [rdi],cl
   14004a0a5:	or     BYTE PTR fs:[rax],al
   14004a0a8:	sysenter 
   14004a0aa:	(bad)  
   14004a0ab:	add    BYTE PTR [rdi],cl
   14004a0ad:	xor    cl,BYTE PTR [rbx]
   14004a0af:	jo     0x14004a0d2
   14004a0b1:	add    eax,0x54050002
   14004a0b6:	(bad)  
   14004a0b7:	add    BYTE PTR [rax-0x1ffffcd1],dl
   14004a0bd:	(bad)  
   14004a0be:	add    eax,DWORD PTR [rax]
   14004a0c0:	movabs al,ds:0x90000000210004a0
   14004a0c9:	(bad)  
   14004a0ca:	add    eax,DWORD PTR [rax]
   14004a0cc:	loopne 0x14004a0fd
   14004a0ce:	add    eax,DWORD PTR [rax]
   14004a0d0:	movabs al,ds:0x6000206010004a0
   14004a0d9:	jb     0x14004a0dd
   14004a0db:	xor    BYTE PTR [rcx],al
   14004a0dd:	or     al,BYTE PTR [rax+rax*1]
   14004a0e0:	or     dh,BYTE PTR [rsi+rax*1]
   14004a0e3:	add    BYTE PTR [rdx],cl
   14004a0e5:	xor    al,BYTE PTR [rsi]
   14004a0e7:	jo     0x14004a0ea
   14004a0e9:	or     al,BYTE PTR [rax+rax*1]
   14004a0ec:	or     dh,BYTE PTR [rsi+rax*1]
   14004a0ef:	add    BYTE PTR [rdx],cl
   14004a0f1:	xor    al,BYTE PTR [rsi]
   14004a0f3:	jo     0x14004a0f6
   14004a0f5:	add    al,0x1
   14004a0f7:	add    BYTE PTR [rdx+riz*4],al
   14004a0fa:	add    BYTE PTR [rax],al
   14004a0fc:	add    DWORD PTR [rdx],ecx
   14004a0fe:	add    al,0x0
   14004a100:	or     dh,BYTE PTR [rsi+rax*1]
   14004a103:	add    BYTE PTR [rdx],cl
   14004a105:	xor    al,BYTE PTR [rsi]
   14004a107:	jo     0x14004a10a
   14004a109:	clts   
   14004a10b:	add    BYTE PTR [rdi],cl
   14004a10d:	fs (bad) 
   14004a10f:	add    BYTE PTR [rdi],cl
   14004a111:	xor    al,0x6
   14004a113:	add    BYTE PTR [rdi],cl
   14004a115:	xor    cl,BYTE PTR [rbx]
   14004a117:	jo     0x14004a11a
   14004a119:	(bad)  
   14004a11a:	add    al,BYTE PTR [rax]
   14004a11c:	(bad)  
   14004a11d:	xor    al,BYTE PTR [rdx]
   14004a11f:	xor    BYTE PTR [rcx],al
   14004a121:	(bad)  
   14004a122:	add    al,BYTE PTR [rax]
   14004a124:	(bad)  
   14004a125:	xor    al,BYTE PTR [rdx]
   14004a127:	xor    BYTE PTR [rcx],al
   14004a129:	(bad)  
   14004a12a:	add    al,BYTE PTR [rax]
   14004a12c:	(bad)  
   14004a12d:	xor    al,BYTE PTR [rdx]
   14004a12f:	xor    BYTE PTR [rcx],al
   14004a131:	(bad)  
   14004a132:	add    al,BYTE PTR [rax]
   14004a134:	(bad)  
   14004a135:	xor    al,BYTE PTR [rdx]
   14004a137:	xor    BYTE PTR [rcx],al
   14004a139:	(bad)  
   14004a13a:	add    al,BYTE PTR [rax]
   14004a13c:	(bad)  
   14004a13d:	push   rdx
   14004a13e:	add    dh,BYTE PTR [rax]
   14004a140:	add    DWORD PTR [rdx],ecx
   14004a142:	add    al,0x0
   14004a144:	or     dh,BYTE PTR [rax+rcx*1]
   14004a147:	add    BYTE PTR [rdx],cl
   14004a149:	push   rdx
   14004a14a:	(bad)  
   14004a14b:	jo     0x14004a14e
   14004a14d:	add    al,0x1
   14004a14f:	add    BYTE PTR [rdx+rax*2],al
   14004a152:	add    BYTE PTR [rax],al
   14004a154:	add    DWORD PTR [rax],esp
   14004a156:	or     BYTE PTR [rax],al
   14004a158:	and    BYTE PTR [rax+0x78170002],cl
   14004a15e:	add    eax,DWORD PTR [rax]
   14004a160:	adc    ch,BYTE PTR [rax+0x4]
   14004a163:	add    BYTE PTR [rsi],al
   14004a165:	xchg   edx,eax
   14004a166:	add    dh,BYTE PTR [rax]
   14004a168:	add    DWORD PTR [rcx+rax*1],eax
   14004a16b:	add    BYTE PTR [rdx+rax*2],al
   14004a16e:	add    BYTE PTR [rax],al
   14004a170:	add    DWORD PTR [rcx+rax*1],eax
   14004a173:	add    BYTE PTR [rdx+riz*2],al
   14004a176:	add    BYTE PTR [rax],al
   14004a178:	add    DWORD PTR [rcx+rax*1],eax
   14004a17b:	add    BYTE PTR [rdx+rax*2],al
   14004a17e:	add    BYTE PTR [rax],al
   14004a180:	add    DWORD PTR [rcx+rax*1],eax
   14004a183:	add    BYTE PTR [rdx+rax*2],al
   14004a186:	add    BYTE PTR [rax],al
   14004a188:	and    DWORD PTR [rip+0x34050002],eax        # 0x17409a190
   14004a18e:	add    al,0x0
   14004a190:	push   rax
   14004a191:	xor    al,0x3
   14004a193:	add    BYTE PTR [rax-0x7ffffccc],bl
   14004a199:	movabs eax,ds:0x3450000000210004
   14004a1a2:	add    eax,DWORD PTR [rax]
   14004a1a4:	cwde   
   14004a1a5:	xor    al,0x3
   14004a1a7:	add    BYTE PTR [rax+0x10004a1],al
   14004a1ad:	or     eax,DWORD PTR [rax+rax*1]
   14004a1b0:	or     ebp,DWORD PTR [rax+0x2]
   14004a1b3:	add    BYTE PTR [rsi],al
   14004a1b5:	push   rdx
   14004a1b6:	add    dh,BYTE PTR [rax]
   14004a1b8:	add    DWORD PTR [rdi],ecx
   14004a1ba:	(bad)  
   14004a1bb:	add    BYTE PTR [rdi],cl
   14004a1bd:	fs (bad) 
   14004a1bf:	add    BYTE PTR [rdi],cl
   14004a1c1:	xor    al,0x6
   14004a1c3:	add    BYTE PTR [rdi],cl
   14004a1c5:	xor    cl,BYTE PTR [rbx]
   14004a1c7:	jo     0x14004a1ca
   14004a1c9:	xor    eax,0x9835000e
   14004a1ce:	add    al,0x0
   14004a1d0:	and    al,0x88
   14004a1d2:	add    eax,0x6781f00
   14004a1d7:	add    BYTE PTR [rbx],bl
   14004a1d9:	push   0x64170007
   14004a1de:	adc    al,0x0
   14004a1e0:	(bad)  
   14004a1e1:	xor    al,0x13
   14004a1e3:	add    BYTE PTR [rdi],dl
   14004a1e5:	repnz adc BYTE PTR [rax+0x1],dh
   14004a1e9:	add    al,0x1
   14004a1eb:	add    BYTE PTR [rdx+rax*4],al
   14004a1ee:	add    BYTE PTR [rax],al
   14004a1f0:	add    DWORD PTR [rax],ebx
   14004a1f2:	or     DWORD PTR [rax],eax
   14004a1f4:	sbb    BYTE PTR [rax+rcx*2+0x0],dh
   14004a1f8:	sbb    BYTE PTR [rdi+rax*2+0x0],ah
   14004a1fc:	sbb    BYTE PTR [rsi+rax*2],dh
   14004a1ff:	add    BYTE PTR [rax],bl
   14004a201:	add    DWORD PTR [rax+rax*1+0x11],eax
   14004a205:	loopne 0x14004a207
   14004a207:	add    BYTE PTR [rcx],al
   14004a209:	clts   
   14004a20b:	add    BYTE PTR [rdi],cl
   14004a20d:	fs or  eax,0xc340f00
   14004a213:	add    BYTE PTR [rdi],cl
   14004a215:	xchg   edx,eax
   14004a216:	or     esi,DWORD PTR [rax+0x1]
   14004a219:	(bad)  
   14004a21a:	or     DWORD PTR [rax],eax
   14004a21c:	(bad)  
   14004a21d:	fs sbb al,0x0
   14004a220:	(bad)  
   14004a221:	push   rsp
   14004a222:	sbb    eax,DWORD PTR [rax]
   14004a224:	(bad)  
   14004a225:	xor    al,0x1a
   14004a227:	add    BYTE PTR [rdi],dl
   14004a229:	add    DWORD PTR [rax],ebx
   14004a22b:	add    BYTE PTR [rax],dl
   14004a22d:	jo     0x14004a22f
   14004a22f:	add    BYTE PTR [rcx],al
   14004a231:	adc    al,BYTE PTR [rdi]
   14004a233:	add    BYTE PTR [rdx],dl
   14004a235:	fs (bad) 
   14004a237:	add    BYTE PTR [rdx],dl
   14004a239:	xor    al,0x16
   14004a23b:	add    BYTE PTR [rdx],dl
   14004a23d:	add    DWORD PTR [rax+rax*1],edx
   14004a240:	or     esi,DWORD PTR [rax+0x0]
   14004a243:	add    BYTE PTR [rcx],ah
   14004a245:	adc    BYTE PTR [rax+rax*1],al
   14004a248:	adc    BYTE PTR [rax+0x8],bh
   14004a24b:	add    BYTE PTR [rax],cl
   14004a24d:	push   0x3ad00009
   14004a252:	add    eax,DWORD PTR [rax]
   14004a254:	cmp    rax,QWORD PTR [r11]
   14004a257:	add    BYTE PTR [rax],dh
   14004a259:	movabs ds:0x3ad0000000210004,al
   14004a262:	add    eax,DWORD PTR [rax]
   14004a264:	cmp    rax,QWORD PTR [r11]
   14004a267:	add    BYTE PTR [rax],dh
   14004a269:	movabs ds:0x6414000814010004,al
   14004a272:	or     BYTE PTR [rax],al
   14004a274:	adc    al,0x54
   14004a276:	(bad)  
   14004a277:	add    BYTE PTR [rsp+rsi*1],dl
   14004a27a:	(bad)  
   14004a27b:	add    BYTE PTR [rdx+rsi*1],dl
   14004a27e:	adc    BYTE PTR [rax+0x1],dh
   14004a281:	adc    DWORD PTR [rax+rax*1],eax
   14004a284:	adc    DWORD PTR [rcx],eax
   14004a286:	sub    DWORD PTR [rax],eax
   14004a288:	(bad)  
   14004a289:	lock add al,0x50
   14004a28c:	and    DWORD PTR [rdx+0x8],edx
   14004a28f:	add    BYTE PTR [rdx+0x34],dl
   14004a292:	sub    al,0x0
   14004a294:	or     al,0xe4
   14004a296:	add    BYTE PTR es:[rax],cl
   14004a299:	(bad)  
   14004a29a:	(bad)  
   14004a29b:	add    BYTE PTR [rsp+rax*8],al
   14004a29e:	sub    BYTE PTR [rax],al
   14004a2a0:	(bad)  
   14004a2a1:	cmp    eax,0x3d710003
   14004a2a6:	add    eax,DWORD PTR [rax]
   14004a2a8:	and    BYTE PTR [rdx+0x10210004],0x4
   14004a2af:	add    BYTE PTR [rax],dl
   14004a2b1:	je     0x14004a2e1
   14004a2b3:	add    BYTE PTR [rax],cl
   14004a2b5:	fs sub eax,0x33d7100
   14004a2bb:	add    al,ah
   14004a2bd:	cmp    eax,0xa28c0003
   14004a2c2:	add    al,0x0
   14004a2c4:	and    DWORD PTR [rax],eax
   14004a2c6:	add    BYTE PTR [rax],al
   14004a2c8:	jno    0x14004a307
   14004a2ca:	add    eax,DWORD PTR [rax]
   14004a2cc:	loopne 0x14004a30b
   14004a2ce:	add    eax,DWORD PTR [rax]
   14004a2d0:	mov    WORD PTR [rdx+0x210004],fs
   14004a2d6:	add    al,BYTE PTR [rax]
   14004a2d8:	add    BYTE PTR [rsp+rbp*1],dh
   14004a2db:	add    BYTE PTR [rax+0x3d],ah
   14004a2de:	add    eax,DWORD PTR [rax]
   14004a2e0:	jno    0x14004a31f
   14004a2e2:	add    eax,DWORD PTR [rax]
   14004a2e4:	and    BYTE PTR [rdx+0x4010004],0x1
   14004a2eb:	add    BYTE PTR [rdx+rax*2],al
   14004a2ee:	add    BYTE PTR [rax],al
   14004a2f0:	add    DWORD PTR [rsi],eax
   14004a2f2:	add    al,BYTE PTR [rax]
   14004a2f4:	(bad)  
   14004a2f5:	mov    dl,0x2
   14004a2f7:	jo     0x14004a31a
   14004a2f9:	add    eax,0x34050002
   14004a2fe:	(bad)  
   14004a2ff:	add    al,al
   14004a301:	add    r8,QWORD PTR [rax]
   14004a304:	add    al,0x4d
   14004a306:	add    eax,DWORD PTR [rax]
   14004a308:	lock movabs ds:0x4cc0000000210004,al
   14004a312:	add    eax,DWORD PTR [rax]
   14004a314:	add    al,0x4d
   14004a316:	add    eax,DWORD PTR [rax]
   14004a318:	lock movabs ds:0x7828000e28010004,al
   14004a322:	or     eax,0xe682400
   14004a327:	add    BYTE PTR [rdx],bl
   14004a329:	add    DWORD PTR [rdi],ebx
   14004a32b:	add    BYTE PTR [rdi],cl
   14004a32d:	lock or eax,0x9d00be0
   14004a333:	rol    BYTE PTR [rdi],0x70
   14004a336:	(bad)  
   14004a337:	(bad)  
   14004a338:	add    eax,0x1500430
   14004a33d:	or     al,BYTE PTR [rax+rax*1]
   14004a340:	or     dh,BYTE PTR [rdi+rcx*1]
   14004a343:	add    BYTE PTR [rdx],cl
   14004a345:	mov    dl,0x6
   14004a347:	jo     0x14004a36a
   14004a349:	add    eax,0x64050002
   14004a34e:	(bad)  
   14004a34f:	add    BYTE PTR [rax+0x54],ah
   14004a352:	add    eax,DWORD PTR [rax]
   14004a354:	pushf  
   14004a355:	push   rsp
   14004a356:	add    eax,DWORD PTR [rax]
   14004a358:	cmp    al,0xa3
   14004a35a:	add    al,0x0
   14004a35c:	and    DWORD PTR [rax],eax
   14004a35e:	add    BYTE PTR [rax],al
   14004a360:	(bad)  
   14004a361:	push   rsp
   14004a362:	add    eax,DWORD PTR [rax]
   14004a364:	pushf  
   14004a365:	push   rsp
   14004a366:	add    eax,DWORD PTR [rax]
   14004a368:	cmp    al,0xa3
   14004a36a:	add    al,0x0
   14004a36c:	add    DWORD PTR [rdi+rax*1],ebx
   14004a36f:	add    BYTE PTR [rsp+riz*2],bl
   14004a372:	sbb    eax,DWORD PTR [rax]
   14004a374:	sbb    al,0x34
   14004a376:	sbb    al,BYTE PTR [rax]
   14004a378:	sbb    al,0x1
   14004a37a:	(bad)  
   14004a37b:	add    BYTE PTR [rip+0x21000070],dl        # 0x16104a3f1
   14004a381:	adc    cl,BYTE PTR [rax]
   14004a383:	add    BYTE PTR [rdx],dl
   14004a385:	cwde   
   14004a386:	(bad)  
   14004a387:	add    BYTE PTR [rip+0x8000888],cl        # 0x14804ac15
   14004a38d:	js     0x14004a398
   14004a38f:	add    BYTE PTR [rax+rbp*2],al
   14004a392:	or     al,BYTE PTR [rax]
   14004a394:	rcl    BYTE PTR [rdi+0x3],0x0
   14004a398:	stc    
   14004a399:	push   rdi
   14004a39a:	add    eax,DWORD PTR [rax]
   14004a39c:	ins    BYTE PTR es:[rdi],dx
   14004a39d:	movabs ds:0xe414000414210004,eax
   14004a3a6:	sbb    DWORD PTR [rax],eax
   14004a3a8:	or     BYTE PTR [rax+rbx*1+0x0],dl
   14004a3ac:	stc    
   14004a3ad:	push   rdi
   14004a3ae:	add    eax,DWORD PTR [rax]
   14004a3b0:	(bad)  
   14004a3b1:	pop    rdx
   14004a3b2:	add    eax,DWORD PTR [rax]
   14004a3b4:	and    BYTE PTR [rbx+0x210004],0x0
   14004a3bb:	add    cl,bh
   14004a3bd:	push   rdi
   14004a3be:	add    eax,DWORD PTR [rax]
   14004a3c0:	(bad)  
   14004a3c1:	pop    rdx
   14004a3c2:	add    eax,DWORD PTR [rax]
   14004a3c4:	and    BYTE PTR [rbx+0x210004],0x0
   14004a3cb:	add    al,al
   14004a3cd:	push   rdi
   14004a3ce:	add    eax,DWORD PTR [rax]
   14004a3d0:	stc    
   14004a3d1:	push   rdi
   14004a3d2:	add    eax,DWORD PTR [rax]
   14004a3d4:	ins    BYTE PTR es:[rdi],dx
   14004a3d5:	movabs ds:0xc207000107010004,eax
   14004a3de:	add    BYTE PTR [rax],al
   14004a3e0:	add    DWORD PTR [rcx+rax*1],eax
   14004a3e3:	add    BYTE PTR [rdx+rax*2],al
   14004a3e6:	add    BYTE PTR [rax],al
   14004a3e8:	add    DWORD PTR [rcx+rax*1],eax
   14004a3eb:	add    BYTE PTR [rdx+riz*2],al
   14004a3ee:	add    BYTE PTR [rax],al
   14004a3f0:	add    DWORD PTR [rcx+rax*1],eax
   14004a3f3:	add    BYTE PTR [rdx+riz*4],al
   14004a3f6:	add    BYTE PTR [rax],al
   14004a3f8:	add    DWORD PTR [rcx+rax*1],eax
   14004a3fb:	add    BYTE PTR [rdx+rax*2],al
   14004a3fe:	add    BYTE PTR [rax],al
   14004a400:	add    DWORD PTR [rsi],eax
   14004a402:	add    al,BYTE PTR [rax]
   14004a404:	(bad)  
   14004a405:	xor    al,BYTE PTR [rdx]
   14004a407:	xor    BYTE PTR [rcx],al
   14004a409:	add    al,0x1
   14004a40b:	add    BYTE PTR [rdx+rax*2],al
   14004a40e:	add    BYTE PTR [rax],al
   14004a410:	add    DWORD PTR [rsp+rax*1],ebx
   14004a413:	add    BYTE PTR [rax+rbp*2],bl
   14004a416:	add    eax,DWORD PTR [rax]
   14004a418:	(bad)  
   14004a419:	jb     0x14004a41d
   14004a41b:	xor    BYTE PTR [rcx],al
   14004a41d:	add    al,0x1
   14004a41f:	add    BYTE PTR [rdx+rax*2],al
   14004a422:	add    BYTE PTR [rax],al
   14004a424:	add    DWORD PTR [rcx+rax*1],eax
   14004a427:	add    BYTE PTR [rdx+rax*2],al
   14004a42a:	add    BYTE PTR [rax],al
   14004a42c:	add    DWORD PTR [rsi],eax
   14004a42e:	add    al,BYTE PTR [rax]
   14004a430:	(bad)  
   14004a431:	xor    al,BYTE PTR [rdx]
   14004a433:	xor    BYTE PTR [rcx],al
   14004a435:	clts   
   14004a437:	add    BYTE PTR [rdi],cl
   14004a439:	fs (bad) 
   14004a43b:	add    BYTE PTR [rdi],cl
   14004a43d:	xor    al,0x6
   14004a43f:	add    BYTE PTR [rdi],cl
   14004a441:	xor    cl,BYTE PTR [rbx]
   14004a443:	jo     0x14004a446
   14004a445:	or     BYTE PTR [rax+rax*1],al
   14004a448:	or     BYTE PTR [rdx+0x4],dl
   14004a44b:	jo     0x14004a450
   14004a44d:	(bad)  
   14004a44e:	add    dh,BYTE PTR [rax]
   14004a450:	and    DWORD PTR [rcx],ebx
   14004a452:	or     al,BYTE PTR [rax]
   14004a454:	sbb    esp,esi
   14004a456:	add    al,0x0
   14004a458:	adc    al,0xe4
   14004a45a:	add    eax,0xcd40f00
   14004a45f:	add    BYTE PTR [rdx],cl
   14004a461:	(bad)  
   14004a462:	or     eax,DWORD PTR [rax]
   14004a464:	add    eax,0x50000a54
   14004a469:	pop    rsi
   14004a46a:	add    eax,DWORD PTR [rax]
   14004a46c:	sbb    BYTE PTR [rsi+0x3],0x0
   14004a470:	rex.R movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a472:	add    al,0x0
   14004a474:	and    DWORD PTR [rax],eax
   14004a476:	add    BYTE PTR [rax],al
   14004a478:	push   rax
   14004a479:	pop    rsi
   14004a47a:	add    eax,DWORD PTR [rax]
   14004a47c:	sbb    BYTE PTR [rsi+0x3],0x0
   14004a480:	rex.R movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a482:	add    al,0x0
   14004a484:	add    DWORD PTR [rdi+rax*1],edx
   14004a487:	add    BYTE PTR [rcx+rax*1],dl
   14004a48a:	and    BYTE PTR [rax],al
   14004a48c:	or     al,dl
   14004a48e:	(bad)  
   14004a48f:	rol    BYTE PTR [rax+riz*2],0x3
   14004a493:	xor    BYTE PTR [rdx],al
   14004a495:	push   rax
   14004a496:	add    BYTE PTR [rax],al
   14004a498:	and    DWORD PTR [rax],edx
   14004a49a:	add    al,0x0
   14004a49c:	adc    BYTE PTR [rax+0xe],bh
   14004a49f:	add    BYTE PTR [rax],cl
   14004a4a1:	push   0x6000000f
   14004a4a6:	add    eax,DWORD PTR [rax]
   14004a4a8:	jle    0x14004a50a
   14004a4aa:	add    eax,DWORD PTR [rax]
   14004a4ac:	test   BYTE PTR [rsp+rax*1+0xa332100],ah
   14004a4b3:	add    BYTE PTR [rbx],dh
   14004a4b5:	cwde   
   14004a4b6:	or     al,0x0
   14004a4b8:	and    DWORD PTR [rax-0xbe7fff3],ecx
   14004a4be:	sub    BYTE PTR [rax],al
   14004a4c0:	adc    ah,ah
   14004a4c2:	(bad)  
   14004a4c3:	add    BYTE PTR [rax],cl
   14004a4c5:	je     0x14004a4ed
   14004a4c7:	add    BYTE PTR [rsi+0x60],bh
   14004a4ca:	add    eax,DWORD PTR [rax]
   14004a4cc:	or     BYTE PTR [rcx+0x3],ah
   14004a4cf:	add    BYTE PTR [rax+0x210004a4],bl
   14004a4d5:	add    BYTE PTR [rax],al
   14004a4d7:	add    BYTE PTR [rsi+0x60],bh
   14004a4da:	add    eax,DWORD PTR [rax]
   14004a4dc:	or     BYTE PTR [rcx+0x3],ah
   14004a4df:	add    BYTE PTR [rax+0x210004a4],bl
   14004a4e5:	add    BYTE PTR [rax],al
   14004a4e7:	add    BYTE PTR [rax],al
   14004a4e9:	(bad)  
   14004a4ea:	add    eax,DWORD PTR [rax]
   14004a4ec:	jle    0x14004a54e
   14004a4ee:	add    eax,DWORD PTR [rax]
   14004a4f0:	test   BYTE PTR [rsp+rax*1+0x60f0100],ah
   14004a4f7:	add    BYTE PTR [rdi],cl
   14004a4f9:	fs or  eax,0xc340f00
   14004a4ff:	add    BYTE PTR [rdi],cl
   14004a501:	xchg   edx,eax
   14004a502:	or     esi,DWORD PTR [rax+0x1]
   14004a505:	and    cl,BYTE PTR [rax+rax*1]
   14004a508:	and    dh,BYTE PTR [rax+rbx*1+0x0]
   14004a50c:	and    ah,BYTE PTR [rdi+rdx*1+0x0]
   14004a510:	and    dh,BYTE PTR [rsi+rdx*1]
   14004a513:	add    BYTE PTR [rdx],ah
   14004a515:	repnz sbb al,dh
   14004a518:	(bad)  
   14004a519:	loopne 0x14004a52f
   14004a51b:	rcl    BYTE PTR [rdx],1
   14004a51d:	rcl    BYTE PTR [rax],0x50
   14004a520:	and    DWORD PTR [rip+0x68050002],eax        # 0x1a809a528
   14004a526:	(bad)  
   14004a527:	add    BYTE PTR [rax],al
   14004a529:	jp     0x14004a52e
   14004a52b:	add    BYTE PTR [rsi+0x7a],ah
   14004a52e:	add    eax,DWORD PTR [rax]
   14004a530:	add    al,0xa5
   14004a532:	add    al,0x0
   14004a534:	and    DWORD PTR [rax],eax
   14004a536:	add    BYTE PTR [rax],al
   14004a538:	add    BYTE PTR [rdx+0x3],bh
   14004a53b:	add    BYTE PTR [rsi+0x7a],ah
   14004a53e:	add    eax,DWORD PTR [rax]
   14004a540:	add    al,0xa5
   14004a542:	add    al,0x0
   14004a544:	add    DWORD PTR [rcx+rax*1],eax
   14004a547:	add    BYTE PTR [rdx+rax*2],al
   14004a54a:	add    BYTE PTR [rax],al
   14004a54c:	add    DWORD PTR [rdx],ecx
   14004a54e:	add    al,0x0
   14004a550:	or     dh,BYTE PTR [rdx+rcx*1]
   14004a553:	add    BYTE PTR [rdx],cl
   14004a555:	jb     0x14004a55d
   14004a557:	jo     0x14004a55a
   14004a559:	(bad)  
   14004a55a:	add    al,BYTE PTR [rax]
   14004a55c:	(bad)  
   14004a55d:	xor    al,BYTE PTR [rdx]
   14004a55f:	xor    BYTE PTR [rcx],ah
   14004a561:	add    eax,0x74050002
   14004a566:	(bad)  
   14004a567:	add    BYTE PTR [rax-0x62fffc98],al
   14004a56d:	push   0xffffffffa5580003
   14004a572:	add    al,0x0
   14004a574:	and    DWORD PTR [rax],eax
   14004a576:	add    BYTE PTR [rax],al
   14004a578:	sub    BYTE PTR [rax+0x3],0x0
   14004a57c:	popf   
   14004a57d:	push   0xffffffffa5580003
   14004a582:	add    al,0x0
   14004a584:	add    DWORD PTR [rcx+rax*1],eax
   14004a587:	add    BYTE PTR [rdx+riz*2],al
   14004a58a:	add    BYTE PTR [rax],al
   14004a58c:	add    DWORD PTR [rcx+rax*1],eax
   14004a58f:	add    BYTE PTR [rdx+riz*2],al
   14004a592:	add    BYTE PTR [rax],al
   14004a594:	add    DWORD PTR [rcx+rax*1],eax
   14004a597:	add    BYTE PTR [rdx+riz*2],al
   14004a59a:	add    BYTE PTR [rax],al
   14004a59c:	add    DWORD PTR [rcx+rax*1],eax
   14004a59f:	add    BYTE PTR [rdx+rax*2],al
   14004a5a2:	add    BYTE PTR [rax],al
   14004a5a4:	add    DWORD PTR [rsi],eax
   14004a5a6:	add    al,BYTE PTR [rax]
   14004a5a8:	(bad)  
   14004a5a9:	xor    al,BYTE PTR [rdx]
   14004a5ab:	xor    BYTE PTR [rcx],al
   14004a5ad:	adc    al,0x8
   14004a5af:	add    BYTE PTR [rsp+riz*2],dl
   14004a5b2:	or     BYTE PTR [rax],al
   14004a5b4:	adc    al,0x54
   14004a5b6:	(bad)  
   14004a5b7:	add    BYTE PTR [rsp+rsi*1],dl
   14004a5ba:	(bad)  
   14004a5bb:	add    BYTE PTR [rdx+rsi*1],dl
   14004a5be:	adc    BYTE PTR [rax+0x1],dh
   14004a5c1:	(bad)  
   14004a5c2:	add    al,BYTE PTR [rax]
   14004a5c4:	(bad)  
   14004a5c5:	xchg   edx,eax
   14004a5c6:	add    dh,BYTE PTR [rax]
   14004a5c8:	add    DWORD PTR [rcx+rax*1],eax
   14004a5cb:	add    BYTE PTR [rdx+rax*2],al
   14004a5ce:	add    BYTE PTR [rax],al
   14004a5d0:	add    DWORD PTR [rsi],eax
   14004a5d2:	add    al,BYTE PTR [rax]
   14004a5d4:	(bad)  
   14004a5d5:	jb     0x14004a5d9
   14004a5d7:	xor    BYTE PTR [rcx],al
   14004a5d9:	or     BYTE PTR [rax+rax*1],al
   14004a5dc:	or     BYTE PTR [rdx+0x4],dl
   14004a5df:	jo     0x14004a5e4
   14004a5e1:	(bad)  
   14004a5e2:	add    dh,BYTE PTR [rax]
   14004a5e4:	and    DWORD PTR [rcx],ebx
   14004a5e6:	or     al,BYTE PTR [rax]
   14004a5e8:	sbb    esp,esi
   14004a5ea:	add    al,0x0
   14004a5ec:	adc    al,0xe4
   14004a5ee:	add    eax,0xcd40f00
   14004a5f3:	add    BYTE PTR [rdx],cl
   14004a5f5:	(bad)  
   14004a5f6:	or     eax,DWORD PTR [rax]
   14004a5f8:	add    eax,0x20000a54
   14004a5fd:	ins    DWORD PTR es:[rdi],dx
   14004a5fe:	add    eax,DWORD PTR [rax]
   14004a600:	rex.WRB ins DWORD PTR es:[rdi],dx
   14004a602:	add    eax,DWORD PTR [rax]
   14004a604:	fsub   DWORD PTR [rbp+0x210004]
   14004a60a:	add    BYTE PTR [rax],al
   14004a60c:	and    BYTE PTR [rbp+0x3],ch
   14004a60f:	add    BYTE PTR [rbp+0x6d],cl
   14004a612:	add    eax,DWORD PTR [rax]
   14004a614:	fsub   DWORD PTR [rbp+0xf010004]
   14004a61a:	(bad)  
   14004a61b:	add    BYTE PTR [rdi],cl
   14004a61d:	or     BYTE PTR fs:[rax],al
   14004a620:	sysenter 
   14004a622:	(bad)  
   14004a623:	add    BYTE PTR [rdi],cl
   14004a625:	xor    cl,BYTE PTR [rbx]
   14004a627:	jo     0x14004a64a
   14004a629:	add    eax,0x54050002
   14004a62e:	(bad)  
   14004a62f:	add    BYTE PTR [rax],ah
   14004a631:	jle    0x14004a636
   14004a633:	add    BYTE PTR [rax+0x7e],dh
   14004a636:	add    eax,DWORD PTR [rax]
   14004a638:	sbb    BYTE PTR [rsi+0x210004],ah
   14004a63e:	add    BYTE PTR [rax],al
   14004a640:	and    BYTE PTR [rsi+0x3],bh
   14004a643:	add    BYTE PTR [rax+0x7e],dh
   14004a646:	add    eax,DWORD PTR [rax]
   14004a648:	sbb    BYTE PTR [rsi+0x10010004],ah
   14004a64e:	add    eax,DWORD PTR [rax]
   14004a650:	adc    BYTE PTR [rax+0x2],ch
   14004a653:	add    BYTE PTR [rdx+riz*2],al
   14004a656:	add    BYTE PTR [rax],al
   14004a658:	add    DWORD PTR [rsi],eax
   14004a65a:	add    al,BYTE PTR [rax]
   14004a65c:	(bad)  
   14004a65d:	xor    al,BYTE PTR [rdx]
   14004a65f:	xor    BYTE PTR [rcx],al
   14004a661:	adc    eax,DWORD PTR [rip+0x1a341300]        # 0x15a38b967
   14004a667:	add    BYTE PTR [rbx],dl
   14004a669:	add    DWORD PTR [rax],ebx
   14004a66b:	add    BYTE PTR [rax],cl
   14004a66d:	push   rax
   14004a66e:	add    BYTE PTR [rax],al
   14004a670:	and    DWORD PTR [rsi],ebx
   14004a672:	add    al,0x0
   14004a674:	(bad)  
   14004a675:	js     0x14004a681
   14004a677:	add    BYTE PTR [rax+rbp*2],al
   14004a67a:	or     eax,DWORD PTR [rax]
   14004a67c:	adc    BYTE PTR [rax+0x3],dh
   14004a67f:	add    BYTE PTR [rbx],dh
   14004a681:	jo     0x14004a686
   14004a683:	add    BYTE PTR [rax-0x5a],ah
   14004a686:	add    al,0x0
   14004a688:	and    DWORD PTR [rax],eax
   14004a68a:	add    BYTE PTR [rax],al
   14004a68c:	adc    BYTE PTR [rax+0x3],dh
   14004a68f:	add    BYTE PTR [rbx],dh
   14004a691:	jo     0x14004a696
   14004a693:	add    BYTE PTR [rax-0x5a],ah
   14004a696:	add    al,0x0
   14004a698:	add    DWORD PTR [rdi],eax
   14004a69a:	add    DWORD PTR [rax],eax
   14004a69c:	(bad)  
   14004a69d:	movabs ds:0x4204000104010000,al
   14004a6a6:	add    BYTE PTR [rax],al
   14004a6a8:	add    DWORD PTR [rbx],edx
   14004a6aa:	add    eax,0x1a341300
   14004a6af:	add    BYTE PTR [rbx],dl
   14004a6b1:	add    DWORD PTR [rax],ebx
   14004a6b3:	add    BYTE PTR [rax],cl
   14004a6b5:	push   rax
   14004a6b6:	add    BYTE PTR [rax],al
   14004a6b8:	and    DWORD PTR [rip+0x781d0004],ebx        # 0x1b821a6c2
   14004a6be:	or     al,BYTE PTR [rax]
   14004a6c0:	add    al,0x68
   14004a6c2:	or     eax,DWORD PTR [rax]
   14004a6c4:	xor    BYTE PTR [rbp+0x3],0x0
   14004a6c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a6c9:	jne    0x14004a6ce
   14004a6cb:	add    BYTE PTR [rax+0x210004a6],ch
   14004a6d1:	add    BYTE PTR [rax],al
   14004a6d3:	add    BYTE PTR [rax-0x5bfffc8b],al
   14004a6d9:	jne    0x14004a6de
   14004a6db:	add    BYTE PTR [rax+0x10004a6],ch
   14004a6e1:	or     al,BYTE PTR [rax+rax*1]
   14004a6e4:	or     dh,BYTE PTR [rax+rcx*1]
   14004a6e7:	add    BYTE PTR [rdx],cl
   14004a6e9:	push   rdx
   14004a6ea:	(bad)  
   14004a6eb:	jo     0x14004a6ee
   14004a6ed:	add    al,0x1
   14004a6ef:	add    BYTE PTR [rdx+rax*2],al
   14004a6f2:	add    BYTE PTR [rax],al
   14004a6f4:	add    DWORD PTR [rcx+rax*1],eax
   14004a6f7:	add    BYTE PTR [rdx+rax*2],al
   14004a6fa:	add    BYTE PTR [rax],al
   14004a6fc:	add    DWORD PTR [rsi],eax
   14004a6fe:	add    al,BYTE PTR [rax]
   14004a700:	(bad)  
   14004a701:	push   rdx
   14004a702:	add    dh,BYTE PTR [rax]
   14004a704:	add    DWORD PTR [rcx+rax*1],eax
   14004a707:	add    BYTE PTR [rdx+rax*2],al
   14004a70a:	add    BYTE PTR [rax],al
   14004a70c:	add    DWORD PTR [rsi],eax
   14004a70e:	add    al,BYTE PTR [rax]
   14004a710:	(bad)  
   14004a711:	xor    al,BYTE PTR [rdx]
   14004a713:	xor    BYTE PTR [rcx],al
   14004a715:	(bad)  
   14004a716:	add    al,BYTE PTR [rax]
   14004a718:	(bad)  
   14004a719:	xor    al,BYTE PTR [rdx]
   14004a71b:	xor    BYTE PTR [rcx],al
   14004a71d:	add    al,0x1
   14004a71f:	add    BYTE PTR [rdx+rax*2],al
   14004a722:	add    BYTE PTR [rax],al
   14004a724:	add    DWORD PTR [rcx+rax*1],eax
   14004a727:	add    BYTE PTR [rdx+rax*2],al
   14004a72a:	add    BYTE PTR [rax],al
   14004a72c:	add    DWORD PTR [rax],esp
   14004a72e:	(bad)  
   14004a72f:	add    BYTE PTR [rax],ah
   14004a731:	push   0x340a0002
   14004a736:	or     BYTE PTR [rax],al
   14004a738:	or     dl,BYTE PTR [rdx+0x6]
   14004a73b:	jo     0x14004a73e
   14004a73d:	or     al,BYTE PTR [rax+rax*1]
   14004a740:	or     dh,BYTE PTR [rsp+rcx*1]
   14004a743:	add    BYTE PTR [rdx],cl
   14004a745:	xchg   edx,eax
   14004a746:	(bad)  
   14004a747:	jo     0x14004a74a
   14004a749:	clts   
   14004a74b:	add    BYTE PTR [rdi],cl
   14004a74d:	fs (bad) 
   14004a74f:	add    BYTE PTR [rdi],cl
   14004a751:	xor    al,0x6
   14004a753:	add    BYTE PTR [rdi],cl
   14004a755:	xor    cl,BYTE PTR [rbx]
   14004a757:	jo     0x14004a75a
   14004a759:	clts   
   14004a75b:	add    BYTE PTR [rdi],cl
   14004a75d:	fs (bad) 
   14004a75f:	add    BYTE PTR [rdi],cl
   14004a761:	xor    al,0x6
   14004a763:	add    BYTE PTR [rdi],cl
   14004a765:	xor    cl,BYTE PTR [rbx]
   14004a767:	jo     0x14004a76a
   14004a769:	adc    al,0x6
   14004a76b:	add    BYTE PTR [rsp+riz*2],dl
   14004a76e:	or     al,BYTE PTR [rax]
   14004a770:	adc    al,0x34
   14004a772:	or     DWORD PTR [rax],eax
   14004a774:	adc    al,0x52
   14004a776:	adc    BYTE PTR [rax+0x1],dh
   14004a779:	or     al,BYTE PTR [rax+rax*1]
   14004a77c:	or     dh,BYTE PTR [rdx+rcx*1]
   14004a77f:	add    BYTE PTR [rdx],cl
   14004a781:	jb     0x14004a789
   14004a783:	jo     0x14004a786
   14004a785:	adc    eax,0x64150008
   14004a78a:	or     DWORD PTR [rax],eax
   14004a78c:	adc    eax,0x15000854
   14004a791:	xor    al,0x7
   14004a793:	add    BYTE PTR [rip+0x21e01132],dl        # 0x161e4b8cb
   14004a799:	add    eax,0x74050002
   14004a79e:	(bad)  
   14004a79f:	add    BYTE PTR [rax-0x1afffc7a],ah
   14004a7a5:	xchg   BYTE PTR [rbx],al
   14004a7a7:	add    BYTE PTR [rdi+riz*4+0x210004],al
   14004a7ae:	add    BYTE PTR [rax],al
   14004a7b0:	movabs al,ds:0x84000386e5000386
   14004a7b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004a7ba:	add    al,0x0
   14004a7bc:	add    DWORD PTR [rdi],ecx
   14004a7be:	add    al,0x0
   14004a7c0:	sysenter 
   14004a7c2:	or     eax,DWORD PTR [rax]
   14004a7c4:	(bad)  
   14004a7c6:	or     esi,DWORD PTR [rax+0x1]
   14004a7c9:	clts   
   14004a7cb:	add    BYTE PTR [rdi],cl
   14004a7cd:	fs (bad) 
   14004a7cf:	add    BYTE PTR [rdi],cl
   14004a7d1:	xor    al,0x6
   14004a7d3:	add    BYTE PTR [rdi],cl
   14004a7d5:	xor    cl,BYTE PTR [rbx]
   14004a7d7:	jo     0x14004a7da
   14004a7d9:	sbb    BYTE PTR [rdx],cl
   14004a7db:	add    BYTE PTR [rax],bl
   14004a7dd:	fs or  al,0x0
   14004a7e0:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   14004a7e4:	sbb    BYTE PTR [rdx+rcx*1],dh
   14004a7e7:	add    BYTE PTR [rax],bl
   14004a7e9:	push   rdx
   14004a7ea:	adc    al,0xf0
   14004a7ec:	adc    ah,al
   14004a7ee:	adc    BYTE PTR [rax+0x1],dh
   14004a7f1:	sbb    BYTE PTR [rdx],cl
   14004a7f3:	add    BYTE PTR [rax],bl
   14004a7f5:	je     0x14004a7fd
   14004a7f7:	add    BYTE PTR [rax],bl
   14004a7f9:	fs add eax,0x4541800
   14004a7ff:	add    BYTE PTR [rax],bl
   14004a801:	xor    al,0x3
   14004a803:	add    BYTE PTR [rax],bl
   14004a805:	lock (bad) 
   14004a807:	loopne 0x14004a80a
   14004a809:	adc    al,0x8
   14004a80b:	add    BYTE PTR [rsp+riz*2],dl
   14004a80e:	or     BYTE PTR [rax],al
   14004a810:	adc    al,0x54
   14004a812:	(bad)  
   14004a813:	add    BYTE PTR [rsp+rsi*1],dl
   14004a816:	(bad)  
   14004a817:	add    BYTE PTR [rdx+rsi*1],dl
   14004a81a:	adc    BYTE PTR [rax+0x1],dh
   14004a81d:	add    al,0x1
   14004a81f:	add    BYTE PTR [rdx+rax*2],al
   14004a822:	add    BYTE PTR [rax],al
   14004a824:	add    DWORD PTR [rdx],ecx
   14004a826:	add    al,0x0
   14004a828:	or     dh,BYTE PTR [rax+rcx*1]
   14004a82b:	add    BYTE PTR [rdx],cl
   14004a82d:	push   rdx
   14004a82e:	(bad)  
   14004a82f:	jo     0x14004a832
   14004a831:	(bad)  
   14004a832:	add    al,BYTE PTR [rax]
   14004a834:	(bad)  
   14004a835:	xor    al,BYTE PTR [rdx]
   14004a837:	xor    BYTE PTR [rcx],al
   14004a839:	(bad)  
   14004a83a:	add    al,BYTE PTR [rax]
   14004a83c:	(bad)  
   14004a83d:	xor    al,BYTE PTR [rdx]
   14004a83f:	xor    BYTE PTR [rcx],al
   14004a841:	(bad)  
   14004a842:	add    al,BYTE PTR [rax]
   14004a844:	(bad)  
   14004a845:	xor    al,BYTE PTR [rdx]
   14004a847:	xor    BYTE PTR [rcx],al
   14004a849:	add    al,0x1
   14004a84b:	add    BYTE PTR [rdx+rax*2],al
   14004a84e:	add    BYTE PTR [rax],al
   14004a850:	add    DWORD PTR [rsi],eax
   14004a852:	add    al,BYTE PTR [rax]
   14004a854:	(bad)  
   14004a855:	xor    al,BYTE PTR [rdx]
   14004a857:	xor    BYTE PTR [rcx],al
   14004a859:	adc    al,0x8
   14004a85b:	add    BYTE PTR [rsp+riz*2],dl
   14004a85e:	or     BYTE PTR [rax],al
   14004a860:	adc    al,0x54
   14004a862:	(bad)  
   14004a863:	add    BYTE PTR [rsp+rsi*1],dl
   14004a866:	(bad)  
   14004a867:	add    BYTE PTR [rdx+rsi*1],dl
   14004a86a:	adc    BYTE PTR [rax+0x1],dh
   14004a86d:	add    al,0x1
   14004a86f:	add    BYTE PTR [rdx+rax*4],al
   14004a872:	add    BYTE PTR [rax],al
   14004a874:	add    DWORD PTR [rsi],eax
   14004a876:	add    al,BYTE PTR [rax]
   14004a878:	(bad)  
   14004a879:	mov    dl,0x2
   14004a87b:	xor    BYTE PTR [rcx],ah
   14004a87d:	and    eax,DWORD PTR [rsi]
   14004a87f:	add    BYTE PTR [rbx],ah
   14004a881:	je     0x14004a894
   14004a883:	add    BYTE PTR [rbx],bl
   14004a885:	adc    BYTE PTR fs:[rax],al
   14004a888:	add    eax,0xa0000e54
   14004a88d:	(bad)  
   14004a88e:	add    eax,DWORD PTR [rax]
   14004a890:	or     ebx,DWORD PTR [rbx-0x578bfffd]
   14004a896:	add    al,0x0
   14004a898:	and    DWORD PTR [rax],eax
   14004a89a:	add    BYTE PTR [rax],al
   14004a89c:	movabs al,ds:0x7400039b0b00039a
   14004a8a5:	test   al,0x4
   14004a8a7:	add    BYTE PTR [rcx],al
   14004a8a9:	add    al,0x1
   14004a8ab:	add    BYTE PTR [rdx+rax*2],al
   14004a8ae:	add    BYTE PTR [rax],al
   14004a8b0:	add    DWORD PTR [rcx+rax*1],eax
   14004a8b3:	add    BYTE PTR [rdx+rax*2],al
   14004a8b6:	add    BYTE PTR [rax],al
   14004a8b8:	add    DWORD PTR [rcx],ecx
   14004a8ba:	add    eax,0x5420900
   14004a8bf:	jo     0x14004a8c5
   14004a8c1:	(bad)  
   14004a8c2:	add    edx,DWORD PTR [rax+0x2]
   14004a8c5:	xor    BYTE PTR [rax],al
   14004a8c7:	add    BYTE PTR [rcx],ah
   14004a8c9:	adc    al,0x8
   14004a8cb:	add    BYTE PTR [rsp+rsi*8],dl
   14004a8ce:	add    al,0x0
   14004a8d0:	pmulhuw mm1,QWORD PTR [rax+rax*1]
   14004a8d4:	or     dl,ah
   14004a8d6:	or     eax,DWORD PTR [rax]
   14004a8d8:	add    eax,0x60000ac4
   14004a8dd:	mov    es,WORD PTR [rbx]
   14004a8df:	add    BYTE PTR [rdx-0x47fffc72],cl
   14004a8e5:	test   al,0x4
   14004a8e7:	add    BYTE PTR [rcx],ah
   14004a8e9:	add    BYTE PTR [rax],al
   14004a8eb:	add    BYTE PTR [rax-0x72],ah
   14004a8ee:	add    eax,DWORD PTR [rax]
   14004a8f0:	mov    cl,BYTE PTR [rsi-0x5747fffd]
   14004a8f6:	add    al,0x0
   14004a8f8:	add    DWORD PTR [rdi],ecx
   14004a8fa:	(bad)  
   14004a8fb:	add    BYTE PTR [rdi],cl
   14004a8fd:	or     BYTE PTR fs:[rax],al
   14004a900:	sysenter 
   14004a902:	(bad)  
   14004a903:	add    BYTE PTR [rdi],cl
   14004a905:	xor    cl,BYTE PTR [rbx]
   14004a907:	jo     0x14004a92a
   14004a909:	add    eax,0x54050002
   14004a90e:	(bad)  
   14004a90f:	add    BYTE PTR [rax+0x39b],dh
   14004a915:	pushf  
   14004a916:	add    eax,DWORD PTR [rax]
   14004a918:	clc    
   14004a919:	test   al,0x4
   14004a91b:	add    BYTE PTR [rcx],ah
   14004a91d:	add    BYTE PTR [rax],al
   14004a91f:	add    BYTE PTR [rax+0x39b],dh
   14004a925:	pushf  
   14004a926:	add    eax,DWORD PTR [rax]
   14004a928:	clc    
   14004a929:	test   al,0x4
   14004a92b:	add    BYTE PTR [rcx],al
   14004a92d:	sub    ecx,DWORD PTR [rbx]
   14004a92f:	add    BYTE PTR [rbx],ch
   14004a931:	mov    BYTE PTR [rax],cl
   14004a933:	add    BYTE PTR [rsi],ah
   14004a935:	js     0x14004a940
   14004a937:	add    BYTE PTR [rdx],bl
   14004a939:	push   0x340f000a
   14004a93e:	sbb    BYTE PTR [rax],al
   14004a940:	lgdt   [rsi]
   14004a943:	add    BYTE PTR [rax],cl
   14004a945:	(bad)  
   14004a946:	add    BYTE PTR [rax],al
   14004a948:	add    DWORD PTR [rdi],edx
   14004a94a:	or     BYTE PTR [rax],al
   14004a94c:	(bad)  
   14004a94d:	fs adc al,0x0
   14004a950:	(bad)  
   14004a951:	push   rsp
   14004a952:	adc    eax,DWORD PTR [rax]
   14004a954:	(bad)  
   14004a955:	xor    al,0x12
   14004a957:	add    BYTE PTR [rdi],dl
   14004a959:	repnz adc BYTE PTR [rax+0x1],dh
   14004a95d:	or     eax,0x340d0005
   14004a962:	adc    al,0x0
   14004a964:	or     eax,0x6001201
   14004a969:	jo     0x14004a96b
   14004a96b:	add    BYTE PTR [rcx],al
   14004a96d:	sbb    eax,0x741d000b
   14004a972:	sbb    eax,DWORD PTR [rax]
   14004a974:	sbb    eax,0x1d001a64
   14004a979:	push   rsp
   14004a97a:	sbb    DWORD PTR [rax],eax
   14004a97c:	sbb    eax,0x1d001834
   14004a981:	add    DWORD PTR [rsi],edx
   14004a983:	add    BYTE PTR [rsi],dl
   14004a985:	loopne 0x14004a987
   14004a987:	add    BYTE PTR [rcx],al
   14004a989:	syscall 
   14004a98b:	add    BYTE PTR [rdi],cl
   14004a98d:	xor    al,0x14
   14004a98f:	add    BYTE PTR [rdi],cl
   14004a991:	add    DWORD PTR [rdx],edx
   14004a993:	add    BYTE PTR [rax],cl
   14004a995:	jo     0x14004a997
   14004a997:	add    BYTE PTR [rcx],al
   14004a999:	clts   
   14004a99b:	add    BYTE PTR [rdi],cl
   14004a99d:	fs (bad) 
   14004a99f:	add    BYTE PTR [rdi],cl
   14004a9a1:	xor    al,0x6
   14004a9a3:	add    BYTE PTR [rdi],cl
   14004a9a5:	xor    cl,BYTE PTR [rbx]
   14004a9a7:	jo     0x14004a9aa
   14004a9a9:	sbb    al,BYTE PTR [rdx]
   14004a9ab:	add    BYTE PTR [rdx],bl
   14004a9ad:	add    DWORD PTR [rbp+0x0],eax
   14004a9b0:	add    DWORD PTR [rdi],edx
   14004a9b2:	(bad)  
   14004a9b3:	add    BYTE PTR [rdi],dl
   14004a9b5:	or     DWORD PTR fs:[rax],eax
   14004a9b8:	(bad)  
   14004a9b9:	xor    al,0x7
   14004a9bb:	add    BYTE PTR [rdi],dl
   14004a9bd:	xor    dl,BYTE PTR [rbx]
   14004a9bf:	jo     0x14004a9e2
   14004a9c1:	add    eax,0x54050002
   14004a9c6:	(bad)  
   14004a9c7:	add    BYTE PTR [rax-0x68fffc4a],al
   14004a9cd:	mov    dh,0x3
   14004a9cf:	add    BYTE PTR [rax+0x210004a9],dh
   14004a9d5:	add    BYTE PTR [rax],al
   14004a9d7:	add    BYTE PTR [rax-0x68fffc4a],al
   14004a9dd:	mov    dh,0x3
   14004a9df:	add    BYTE PTR [rax+0x10004a9],dh
   14004a9e5:	(bad)  
   14004a9e6:	add    al,BYTE PTR [rax]
   14004a9e8:	(bad)  
   14004a9e9:	xchg   edx,eax
   14004a9ea:	add    dh,BYTE PTR [rax]
   14004a9ec:	add    DWORD PTR [rdx],edx
   14004a9ee:	(bad)  
   14004a9ef:	add    BYTE PTR [rdx],dl
   14004a9f1:	rex.RXB add BYTE PTR fs:[r10],r10b
   14004a9f5:	xor    al,0x46
   14004a9f7:	add    BYTE PTR [rdx],dl
   14004a9f9:	add    DWORD PTR [rax+rax*1+0xb],eax
   14004a9fd:	jo     0x14004a9ff
   14004a9ff:	add    BYTE PTR [rcx],al
   14004aa01:	or     al,BYTE PTR [rax+rax*1]
   14004aa04:	or     dh,BYTE PTR [rsi+rax*1]
   14004aa07:	add    BYTE PTR [rdx],cl
   14004aa09:	xor    al,BYTE PTR [rsi]
   14004aa0b:	jo     0x14004aa0e
   14004aa0d:	(bad)  
   14004aa0e:	add    al,BYTE PTR [rax]
   14004aa10:	(bad)  
   14004aa11:	xor    al,BYTE PTR [rdx]
   14004aa13:	xor    BYTE PTR [rcx],al
   14004aa15:	or     al,BYTE PTR [rax+rax*1]
   14004aa18:	or     dh,BYTE PTR [rsi+rax*1]
   14004aa1b:	add    BYTE PTR [rdx],cl
   14004aa1d:	xor    al,BYTE PTR [rsi]
   14004aa1f:	jo     0x14004aa22
   14004aa21:	clts   
   14004aa23:	add    BYTE PTR [rdi],cl
   14004aa25:	fs (bad) 
   14004aa27:	add    BYTE PTR [rdi],cl
   14004aa29:	xor    al,0x6
   14004aa2b:	add    BYTE PTR [rdi],cl
   14004aa2d:	xor    cl,BYTE PTR [rbx]
   14004aa2f:	jo     0x14004aa32
   14004aa31:	(bad)  
   14004aa32:	add    al,BYTE PTR [rax]
   14004aa34:	(bad)  
   14004aa35:	xor    al,BYTE PTR [rdx]
   14004aa37:	xor    BYTE PTR [rcx],al
   14004aa39:	add    al,0x1
   14004aa3b:	add    BYTE PTR [rdx+rax*2],al
   14004aa3e:	add    BYTE PTR [rax],al
   14004aa40:	add    DWORD PTR [rsi],eax
   14004aa42:	add    al,BYTE PTR [rax]
   14004aa44:	(bad)  
   14004aa45:	xor    al,BYTE PTR [rdx]
   14004aa47:	xor    BYTE PTR [rcx],al
   14004aa49:	add    al,0x1
   14004aa4b:	add    BYTE PTR [rdx+rax*2],al
   14004aa4e:	add    BYTE PTR [rax],al
   14004aa50:	add    DWORD PTR [rsi],eax
   14004aa52:	add    al,BYTE PTR [rax]
   14004aa54:	(bad)  
   14004aa55:	xor    al,BYTE PTR [rdx]
   14004aa57:	xor    BYTE PTR [rcx],al
   14004aa59:	add    al,0x1
   14004aa5b:	add    BYTE PTR [rdx+rax*2],al
   14004aa5e:	add    BYTE PTR [rax],al
   14004aa60:	add    DWORD PTR [rdx],ecx
   14004aa62:	add    al,0x0
   14004aa64:	or     dh,BYTE PTR [rsi+rax*1]
   14004aa67:	add    BYTE PTR [rdx],cl
   14004aa69:	xor    al,BYTE PTR [rsi]
   14004aa6b:	jo     0x14004aa6e
   14004aa6d:	add    al,0x1
   14004aa6f:	add    BYTE PTR [rdx+rax*2],al
   14004aa72:	add    BYTE PTR [rax],al
   14004aa74:	add    DWORD PTR [rcx+rax*1],eax
   14004aa77:	add    BYTE PTR [rdx+rax*2],al
   14004aa7a:	add    BYTE PTR [rax],al
   14004aa7c:	add    DWORD PTR [rsi],eax
   14004aa7e:	add    al,BYTE PTR [rax]
   14004aa80:	(bad)  
   14004aa81:	xor    al,BYTE PTR [rdx]
   14004aa83:	xor    BYTE PTR [rcx],al
   14004aa85:	or     al,BYTE PTR [rax+rax*1]
   14004aa88:	or     dh,BYTE PTR [rsi+rax*1]
   14004aa8b:	add    BYTE PTR [rdx],cl
   14004aa8d:	xor    al,BYTE PTR [rsi]
   14004aa8f:	jo     0x14004aa92
   14004aa91:	or     al,BYTE PTR [rip+0x6420a00]        # 0x14646b497
   14004aa97:	loopne 0x14004aa9d
   14004aa99:	jo     0x14004aa9e
   14004aa9b:	(bad)  
   14004aa9c:	add    dh,BYTE PTR [rax]
   14004aa9e:	add    BYTE PTR [rax],al
   14004aaa0:	and    DWORD PTR [rax+rcx*1],edx
   14004aaa3:	add    BYTE PTR [rsp+rsi*8],dl
   14004aaa6:	add    al,0x0
   14004aaa8:	paddq  mm1,QWORD PTR [rax+rax*1]
   14004aaac:	or     al,ah
   14004aaae:	or     eax,DWORD PTR [rax]
   14004aab0:	add    eax,0xf0000a54
   14004aab5:	test   al,0x3
   14004aab7:	add    BYTE PTR [rdx],ah
   14004aab9:	test   eax,0xaa900003
   14004aabe:	add    al,0x0
   14004aac0:	and    DWORD PTR [rax],eax
   14004aac2:	add    BYTE PTR [rax],al
   14004aac4:	lock test al,0x3
   14004aac7:	add    BYTE PTR [rdx],ah
   14004aac9:	test   eax,0xaa900003
   14004aace:	add    al,0x0
   14004aad0:	add    DWORD PTR [rsp+rax*1],ecx
   14004aad3:	add    BYTE PTR [rdx+rsi*1],cl
   14004aad6:	or     BYTE PTR [rax+0x7],dh
   14004aad9:	(bad)  
   14004aada:	(bad)  
   14004aadb:	xor    BYTE PTR [rcx],ah
   14004aadd:	add    eax,0xe4050002
   14004aae2:	or     al,BYTE PTR [rax]
   14004aae4:	shr    BYTE PTR [rdx-0x54f5fffd],1
   14004aaea:	add    eax,DWORD PTR [rax]
   14004aaec:	shr    BYTE PTR [rdx+0x210004],1
   14004aaf2:	add    BYTE PTR [rax],al
   14004aaf4:	shr    BYTE PTR [rdx-0x54f5fffd],1
   14004aafa:	add    eax,DWORD PTR [rax]
   14004aafc:	shr    BYTE PTR [rdx+0x15010004],1
   14004ab02:	or     BYTE PTR [rax],al
   14004ab04:	adc    eax,0x15000a74
   14004ab09:	or     DWORD PTR fs:[rax],eax
   14004ab0c:	adc    eax,0x15000834
   14004ab11:	push   rdx
   14004ab12:	adc    eax,esp
   14004ab14:	add    DWORD PTR [rdi],ecx
   14004ab16:	(bad)  
   14004ab17:	add    BYTE PTR [rdi],cl
   14004ab19:	fs (bad) 
   14004ab1b:	add    BYTE PTR [rdi],cl
   14004ab1d:	xor    al,0x6
   14004ab1f:	add    BYTE PTR [rdi],cl
   14004ab21:	xor    cl,BYTE PTR [rbx]
   14004ab23:	jo     0x14004ab26
   14004ab25:	adc    eax,0x74150008
   14004ab2a:	or     BYTE PTR [rax],al
   14004ab2c:	adc    eax,0x15000764
   14004ab31:	xor    al,0x6
   14004ab33:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e4bc6b
   14004ab39:	clts   
   14004ab3b:	add    BYTE PTR [rdi],cl
   14004ab3d:	fs (bad) 
   14004ab3f:	add    BYTE PTR [rdi],cl
   14004ab41:	xor    al,0x6
   14004ab43:	add    BYTE PTR [rdi],cl
   14004ab45:	xor    cl,BYTE PTR [rbx]
   14004ab47:	jo     0x14004ab4a
   14004ab49:	or     eax,0x340d0006
   14004ab4e:	str    WORD PTR [rip+0x7c00972]        # 0x147c4b4c7
   14004ab55:	jo     0x14004ab5d
   14004ab57:	(bad)  
   14004ab58:	and    DWORD PTR [rip+0xffffffffe4050002],eax        # 0x12409ab60
   14004ab5e:	or     eax,0x3b03000
   14004ab63:	add    BYTE PTR [rax+rsi*4+0x3],dh
   14004ab67:	add    BYTE PTR [rax-0x55],cl
   14004ab6a:	add    al,0x0
   14004ab6c:	and    DWORD PTR [rdx],ecx
   14004ab6e:	add    al,0x0
   14004ab70:	or     dh,ah
   14004ab72:	(bad)  
   14004ab73:	add    BYTE PTR [rip+0x74000c54],al        # 0x1b404b7cd
   14004ab79:	mov    al,0x3
   14004ab7b:	add    BYTE PTR [rdx+0x580003b0],dh
   14004ab81:	stos   DWORD PTR es:[rdi],eax
   14004ab82:	add    al,0x0
   14004ab84:	and    DWORD PTR [rax],eax
   14004ab86:	add    BYTE PTR [rax],al
   14004ab88:	je     0x14004ab3a
   14004ab8a:	add    eax,DWORD PTR [rax]
   14004ab8c:	mov    dl,0xb0
   14004ab8e:	add    eax,DWORD PTR [rax]
   14004ab90:	pop    rax
   14004ab91:	stos   DWORD PTR es:[rdi],eax
   14004ab92:	add    al,0x0
   14004ab94:	and    DWORD PTR [rax],eax
   14004ab96:	add    BYTE PTR [rax],al
   14004ab98:	xor    BYTE PTR [rax-0x4f8bfffd],dh
   14004ab9e:	add    eax,DWORD PTR [rax]
   14004aba0:	stos   QWORD PTR es:[rdi],rax
   14004aba2:	add    al,0x0
   14004aba4:	add    BYTE PTR [rax],al
   14004aba6:	add    BYTE PTR [rax],al
   14004aba8:	add    DWORD PTR [rcx+rax*1],eax
   14004abab:	add    BYTE PTR [rdx+rdx*1],al
   14004abae:	add    BYTE PTR [rax],al
   14004abb0:	add    DWORD PTR [rax+rcx*1],edx
   14004abb3:	add    BYTE PTR [rsp+riz*2],dl
   14004abb6:	(bad)  
   14004abb7:	add    BYTE PTR [rsp+rdx*2],dl
   14004abba:	add    eax,0x4341400
   14004abbf:	add    BYTE PTR [rdx+rdx*1],dl
   14004abc2:	adc    BYTE PTR [rax+0x1],dh
   14004abc5:	add    al,0x1
   14004abc7:	add    BYTE PTR [rdx+rax*2],al
   14004abca:	add    BYTE PTR [rax],al
   14004abcc:	adc    DWORD PTR [rsi],eax
   14004abce:	add    al,BYTE PTR [rax]
   14004abd0:	(bad)  
   14004abd1:	xor    al,BYTE PTR [rdx]
   14004abd3:	xor    BYTE PTR [rsi],ch
   14004abd5:	rol    BYTE PTR [rbx],0x0
   14004abd8:	add    DWORD PTR [rax],eax
   14004abda:	add    BYTE PTR [rax],al
   14004abdc:	repz mov ebx,0xbc590003
   14004abe2:	add    eax,DWORD PTR [rax]
   14004abe4:	add    bl,al
   14004abe6:	add    eax,DWORD PTR [rax]
   14004abe8:	add    BYTE PTR [rax],al
   14004abea:	add    BYTE PTR [rax],al
   14004abec:	add    DWORD PTR [rsi],eax
   14004abee:	add    al,BYTE PTR [rax]
   14004abf0:	(bad)  
   14004abf1:	xor    al,BYTE PTR [rdx]
   14004abf3:	push   rax
   14004abf4:	add    DWORD PTR [rsi],eax
   14004abf6:	add    al,BYTE PTR [rax]
   14004abf8:	(bad)  
   14004abf9:	xor    al,BYTE PTR [rdx]
   14004abfb:	xor    BYTE PTR [rcx],al
   14004abfd:	add    al,0x1
   14004abff:	add    BYTE PTR [rdx+rax*2],al
   14004ac02:	add    BYTE PTR [rax],al
   14004ac04:	add    DWORD PTR [rcx+rax*1],eax
   14004ac07:	add    BYTE PTR [rdx+riz*2],al
   14004ac0a:	add    BYTE PTR [rax],al
   14004ac0c:	or     DWORD PTR [rsi],eax
   14004ac0e:	add    al,BYTE PTR [rax]
   14004ac10:	(bad)  
   14004ac11:	xor    al,BYTE PTR [rdx]
   14004ac13:	jo     0x14004ac43
   14004ac15:	rol    BYTE PTR [rbx],0x0
   14004ac18:	add    DWORD PTR [rax],eax
   14004ac1a:	add    BYTE PTR [rax],al
   14004ac1c:	rex.WRX movabs rsi,0xc31b0003bf850003
   14004ac26:	add    eax,DWORD PTR [rax]
   14004ac28:	test   DWORD PTR [rdi+0x6010003],edi
   14004ac2e:	add    al,BYTE PTR [rax]
   14004ac30:	(bad)  
   14004ac31:	xor    al,BYTE PTR [rdx]
   14004ac33:	push   rax
   14004ac34:	add    DWORD PTR [rcx+rax*1],eax
   14004ac37:	add    BYTE PTR [rdx+rax*2],al
   14004ac3a:	add    BYTE PTR [rax],al
   14004ac3c:	add    DWORD PTR [rcx+rax*1],eax
   14004ac3f:	add    BYTE PTR [rdx+rax*2],al
   14004ac42:	add    BYTE PTR [rax],al
   14004ac44:	add    DWORD PTR [rcx+rax*1],eax
   14004ac47:	add    BYTE PTR [rdx+rax*2],al
   14004ac4a:	add    BYTE PTR [rax],al
   14004ac4c:	or     DWORD PTR [rdx],ecx
   14004ac4e:	add    al,0x0
   14004ac50:	or     dh,BYTE PTR [rsi+rax*1]
   14004ac53:	add    BYTE PTR [rdx],cl
   14004ac55:	xor    al,BYTE PTR [rsi]
   14004ac57:	jo     0x14004ac87
   14004ac59:	rol    BYTE PTR [rbx],0x0
   14004ac5c:	add    DWORD PTR [rax],eax
   14004ac5e:	add    BYTE PTR [rax],al
   14004ac60:	std    
   14004ac61:	rol    BYTE PTR [rbx],0x0
   14004ac64:	xor    cl,al
   14004ac66:	add    eax,DWORD PTR [rax]
   14004ac68:	rex ret 
   14004ac6a:	add    eax,DWORD PTR [rax]
   14004ac6c:	xor    cl,al
   14004ac6e:	add    eax,DWORD PTR [rax]
   14004ac70:	add    DWORD PTR [rsi],eax
   14004ac72:	add    al,BYTE PTR [rax]
   14004ac74:	(bad)  
   14004ac75:	xor    al,BYTE PTR [rdx]
   14004ac77:	push   rax
   14004ac78:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x17411ac82
   14004ac7e:	or     DWORD PTR [rax],eax
   14004ac80:	or     eax,0x1500632
   14004ac85:	or     al,BYTE PTR [rax+rax*1]
   14004ac88:	or     dh,BYTE PTR [rsi+rax*1]
   14004ac8b:	add    BYTE PTR [rdx],cl
   14004ac8d:	xor    al,BYTE PTR [rsi]
   14004ac8f:	jo     0x14004ac92
   14004ac91:	or     al,BYTE PTR [rax+rax*1]
   14004ac94:	or     dh,BYTE PTR [rsi+rax*1]
   14004ac97:	add    BYTE PTR [rdx],cl
   14004ac99:	xor    al,BYTE PTR [rsi]
   14004ac9b:	jo     0x14004acad
   14004ac9d:	lods   eax,DWORD PTR ds:[rsi]
   14004ac9e:	add    al,0x0
	...
   14004aca8:	and    al,0xb2
   14004acaa:	add    al,0x0
   14004acac:	cmp    al,dl
   14004acae:	add    eax,DWORD PTR [rax]
   14004acb0:	fsubr  DWORD PTR [rsp+rax*1+0x0]
   14004acb7:	add    BYTE PTR [rax],al
   14004acb9:	add    BYTE PTR [rax],al
   14004acbb:	add    al,dh
   14004acbd:	mov    bl,0x4
   14004acbf:	add    BYTE PTR [rax],al
   14004acc1:	rol    BYTE PTR [rbx],1
	...
   14004acd7:	add    al,al
   14004acd9:	mov    bl,0x4
   14004acdb:	add    BYTE PTR [rax],al
   14004acdd:	add    BYTE PTR [rax],al
   14004acdf:	add    BYTE PTR [rdx+0x4b3],ch
   14004ace5:	add    BYTE PTR [rax],al
   14004ace7:	add    BYTE PTR [rax+0x4b3],dl
   14004aced:	add    BYTE PTR [rax],al
   14004acef:	add    BYTE PTR [rax+0x4b3],al
   14004acf5:	add    BYTE PTR [rax],al
   14004acf7:	add    BYTE PTR [rax-0x4d],dh
   14004acfa:	add    al,0x0
   14004acfc:	add    BYTE PTR [rax],al
   14004acfe:	add    BYTE PTR [rax],al
   14004ad00:	(bad)  
   14004ad01:	mov    bl,0x4
	...
   14004ad0f:	add    BYTE PTR [rax],dl
   14004ad11:	mov    al,0x4
   14004ad13:	add    BYTE PTR [rax],al
   14004ad15:	add    BYTE PTR [rax],al
   14004ad17:	add    BYTE PTR [rdx],bl
   14004ad19:	mov    al,0x4
   14004ad1b:	add    BYTE PTR [rax],al
   14004ad1d:	add    BYTE PTR [rax],al
   14004ad1f:	add    BYTE PTR [rdx],ah
   14004ad21:	mov    al,0x4
   14004ad23:	add    BYTE PTR [rax],al
   14004ad25:	add    BYTE PTR [rax],al
   14004ad27:	add    BYTE PTR [rdx],ch
   14004ad29:	mov    al,0x4
   14004ad2b:	add    BYTE PTR [rax],al
   14004ad2d:	add    BYTE PTR [rax],al
   14004ad2f:	add    BYTE PTR [rdx],dh
   14004ad31:	mov    al,0x4
   14004ad33:	add    BYTE PTR [rax],al
   14004ad35:	add    BYTE PTR [rax],al
   14004ad37:	add    BYTE PTR [rdx],bh
   14004ad39:	mov    al,0x4
   14004ad3b:	add    BYTE PTR [rax],al
   14004ad3d:	add    BYTE PTR [rax],al
   14004ad3f:	add    BYTE PTR [rax+rsi*4+0x4],al
   14004ad43:	add    BYTE PTR [rax],al
   14004ad45:	add    BYTE PTR [rax],al
   14004ad47:	add    BYTE PTR [rsi-0x50],cl
   14004ad4a:	add    al,0x0
   14004ad4c:	add    BYTE PTR [rax],al
   14004ad4e:	add    BYTE PTR [rax],al
   14004ad50:	pop    rax
   14004ad51:	mov    al,0x4
   14004ad53:	add    BYTE PTR [rax],al
   14004ad55:	add    BYTE PTR [rax],al
   14004ad57:	add    BYTE PTR [rax-0x50],ah
   14004ad5a:	add    al,0x0
   14004ad5c:	add    BYTE PTR [rax],al
   14004ad5e:	add    BYTE PTR [rax],al
   14004ad60:	push   0xffffffffffffffb0
   14004ad62:	add    al,0x0
   14004ad64:	add    BYTE PTR [rax],al
   14004ad66:	add    BYTE PTR [rax],al
   14004ad68:	jb     0x14004ad1a
   14004ad6a:	add    al,0x0
   14004ad6c:	add    BYTE PTR [rax],al
   14004ad6e:	add    BYTE PTR [rax],al
   14004ad70:	jle    0x14004ad22
   14004ad72:	add    al,0x0
   14004ad74:	add    BYTE PTR [rax],al
   14004ad76:	add    BYTE PTR [rax],al
   14004ad78:	mov    BYTE PTR [rax+0x4],dh
   14004ad7e:	add    BYTE PTR [rax],al
   14004ad80:	nop
   14004ad81:	mov    al,0x4
   14004ad83:	add    BYTE PTR [rax],al
   14004ad85:	add    BYTE PTR [rax],al
   14004ad87:	add    BYTE PTR [rdx+0x4b0],bl
   14004ad8d:	add    BYTE PTR [rax],al
   14004ad8f:	add    BYTE PTR [rax+rsi*4+0x4],ah
   14004ad96:	add    BYTE PTR [rax],al
   14004ad98:	lods   al,BYTE PTR ds:[rsi]
   14004ad99:	mov    al,0x4
   14004ad9b:	add    BYTE PTR [rax],al
   14004ad9d:	add    BYTE PTR [rax],al
   14004ad9f:	add    BYTE PTR [rax+rsi*4+0x4],dh
   14004ada6:	add    BYTE PTR [rax],al
   14004ada8:	mov    esi,0x4b0
   14004adad:	add    BYTE PTR [rax],al
   14004adaf:	add    al,cl
   14004adb1:	mov    al,0x4
   14004adb3:	add    BYTE PTR [rax],al
   14004adb5:	add    BYTE PTR [rax],al
   14004adb7:	add    al,dl
   14004adb9:	mov    al,0x4
   14004adbb:	add    BYTE PTR [rax],al
   14004adbd:	add    BYTE PTR [rax],al
   14004adbf:	add    dl,bl
   14004adc1:	mov    al,0x4
   14004adc3:	add    BYTE PTR [rax],al
   14004adc5:	add    BYTE PTR [rax],al
   14004adc7:	add    dl,ah
   14004adc9:	mov    al,0x4
   14004adcb:	add    BYTE PTR [rax],al
   14004adcd:	add    BYTE PTR [rax],al
   14004adcf:	add    al,ch
   14004add1:	mov    al,0x4
   14004add3:	add    BYTE PTR [rax],al
   14004add5:	add    BYTE PTR [rax],al
   14004add7:	add    dl,dh
   14004add9:	mov    al,0x4
   14004addb:	add    BYTE PTR [rax],al
   14004addd:	add    BYTE PTR [rax],al
   14004addf:	add    ah,bh
   14004ade1:	mov    al,0x4
   14004ade3:	add    BYTE PTR [rax],al
   14004ade5:	add    BYTE PTR [rax],al
   14004ade7:	add    BYTE PTR [rsi],al
   14004ade9:	mov    cl,0x4
   14004adeb:	add    BYTE PTR [rax],al
   14004aded:	add    BYTE PTR [rax],al
   14004adef:	add    BYTE PTR [rax],dl
   14004adf1:	mov    cl,0x4
   14004adf3:	add    BYTE PTR [rax],al
   14004adf5:	add    BYTE PTR [rax],al
   14004adf7:	add    BYTE PTR [rdx],bl
   14004adf9:	mov    cl,0x4
   14004adfb:	add    BYTE PTR [rax],al
   14004adfd:	add    BYTE PTR [rax],al
   14004adff:	add    BYTE PTR [rcx+rsi*4],ah
   14004ae02:	add    al,0x0
   14004ae04:	add    BYTE PTR [rax],al
   14004ae06:	add    BYTE PTR [rax],al
   14004ae08:	cs mov cl,0x4
   14004ae0b:	add    BYTE PTR [rax],al
   14004ae0d:	add    BYTE PTR [rax],al
   14004ae0f:	add    BYTE PTR [rsi],dh
   14004ae11:	mov    cl,0x4
   14004ae13:	add    BYTE PTR [rax],al
   14004ae15:	add    BYTE PTR [rax],al
   14004ae17:	add    BYTE PTR [rsi],bh
   14004ae19:	mov    cl,0x4
   14004ae1b:	add    BYTE PTR [rax],al
   14004ae1d:	add    BYTE PTR [rax],al
   14004ae1f:	add    BYTE PTR [rsi-0x4f],al
   14004ae22:	add    al,0x0
   14004ae24:	add    BYTE PTR [rax],al
   14004ae26:	add    BYTE PTR [rax],al
   14004ae28:	push   rax
   14004ae29:	mov    cl,0x4
   14004ae2b:	add    BYTE PTR [rax],al
   14004ae2d:	add    BYTE PTR [rax],al
   14004ae2f:	add    BYTE PTR [rax-0x4f],bl
   14004ae32:	add    al,0x0
   14004ae34:	add    BYTE PTR [rax],al
   14004ae36:	add    BYTE PTR [rax],al
   14004ae38:	(bad)
   14004ae3d:	add    BYTE PTR [rax],al
   14004ae3f:	add    BYTE PTR [rsi],al
   14004ae41:	mov    al,0x4
   14004ae43:	add    BYTE PTR [rax],al
   14004ae45:	add    BYTE PTR [rax],al
   14004ae47:	add    BYTE PTR [rsi-0x4f],dh
   14004ae4a:	add    al,0x0
   14004ae4c:	add    BYTE PTR [rax],al
   14004ae4e:	add    BYTE PTR [rax],al
   14004ae50:	xor    BYTE PTR [rcx+0x4],0x0
   14004ae57:	add    BYTE PTR [rax+0x4b1],cl
   14004ae5d:	add    BYTE PTR [rax],al
   14004ae5f:	add    BYTE PTR [rdx+0x4b1],dl
   14004ae65:	add    BYTE PTR [rax],al
   14004ae67:	add    BYTE PTR [rcx+rsi*4+0x4],bl
   14004ae6e:	add    BYTE PTR [rax],al
   14004ae70:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004ae71:	mov    cl,0x4
   14004ae73:	add    BYTE PTR [rax],al
   14004ae75:	add    BYTE PTR [rax],al
   14004ae77:	add    BYTE PTR [rax+0x4b1],dh
   14004ae7d:	add    BYTE PTR [rax],al
   14004ae7f:	add    BYTE PTR [rdx+0x4b1],bh
   14004ae85:	add    BYTE PTR [rax],al
   14004ae87:	add    dl,al
   14004ae89:	mov    cl,0x4
   14004ae8b:	add    BYTE PTR [rax],al
   14004ae8d:	add    BYTE PTR [rax],al
   14004ae8f:	add    dl,cl
   14004ae91:	mov    cl,0x4
   14004ae93:	add    BYTE PTR [rax],al
   14004ae95:	add    BYTE PTR [rax],al
   14004ae97:	add    al,bl
   14004ae99:	mov    cl,0x4
   14004ae9b:	add    BYTE PTR [rax],al
   14004ae9d:	add    BYTE PTR [rax],al
   14004ae9f:	add    al,ah
   14004aea1:	mov    cl,0x4
   14004aea3:	add    BYTE PTR [rax],al
   14004aea5:	add    BYTE PTR [rax],al
   14004aea7:	add    dl,ch
   14004aea9:	mov    cl,0x4
   14004aeab:	add    BYTE PTR [rax],al
   14004aead:	add    BYTE PTR [rax],al
   14004aeaf:	add    dl,dh
   14004aeb1:	mov    cl,0x4
   14004aeb3:	add    BYTE PTR [rax],al
   14004aeb5:	add    BYTE PTR [rax],al
   14004aeb7:	add    dh,bh
   14004aeb9:	mov    cl,0x4
   14004aebb:	add    BYTE PTR [rax],al
   14004aebd:	add    BYTE PTR [rax],al
   14004aebf:	add    BYTE PTR [rsi],cl
   14004aec1:	mov    dl,0x4
   14004aec3:	add    BYTE PTR [rax],al
   14004aec5:	add    BYTE PTR [rax],al
   14004aec7:	add    BYTE PTR [rax],bl
   14004aec9:	mov    dl,0x4
   14004aecb:	add    BYTE PTR [rax],al
   14004aecd:	add    BYTE PTR [rax],al
   14004aecf:	add    BYTE PTR [rdx],dh
   14004aed1:	mov    dl,0x4
   14004aed3:	add    BYTE PTR [rax],al
   14004aed5:	add    BYTE PTR [rax],al
   14004aed7:	add    BYTE PTR [rdx],bh
   14004aed9:	mov    dl,0x4
   14004aedb:	add    BYTE PTR [rax],al
   14004aedd:	add    BYTE PTR [rax],al
   14004aedf:	add    BYTE PTR [rdx+rsi*4+0x4],al
   14004aee3:	add    BYTE PTR [rax],al
   14004aee5:	add    BYTE PTR [rax],al
   14004aee7:	add    BYTE PTR [rdx-0x4e],dl
   14004aeea:	add    al,0x0
   14004aeec:	add    BYTE PTR [rax],al
   14004aeee:	add    BYTE PTR [rax],al
   14004aef0:	(bad)  
   14004aef1:	mov    dl,0x4
   14004aef3:	add    BYTE PTR [rax],al
   14004aef5:	add    BYTE PTR [rax],al
   14004aef7:	add    BYTE PTR [rax-0x4e],bh
   14004aefa:	add    al,0x0
   14004aefc:	add    BYTE PTR [rax],al
   14004aefe:	add    BYTE PTR [rax],al
   14004af00:	(bad)  
   14004af01:	mov    dl,0x4
   14004af03:	add    BYTE PTR [rax],al
   14004af05:	add    BYTE PTR [rax],al
   14004af07:	add    BYTE PTR [rax+0x4b2],dl
   14004af0d:	add    BYTE PTR [rax],al
   14004af0f:	add    BYTE PTR [rsi+0x4b2],bl
   14004af15:	add    BYTE PTR [rax],al
   14004af17:	add    BYTE PTR [rsi+0x4b2],ch
   14004af1d:	add    BYTE PTR [rax],al
   14004af1f:	add    al,al
   14004af21:	mov    dl,0x4
   14004af23:	add    BYTE PTR [rax],al
   14004af25:	add    BYTE PTR [rax],al
   14004af27:	add    al,cl
   14004af29:	mov    dl,0x4
   14004af2b:	add    BYTE PTR [rax],al
   14004af2d:	add    BYTE PTR [rax],al
   14004af2f:	add    dl,dl
   14004af31:	mov    dl,0x4
   14004af33:	add    BYTE PTR [rax],al
   14004af35:	add    BYTE PTR [rax],al
   14004af37:	add    al,ch
   14004af39:	mov    dl,0x4
   14004af3b:	add    BYTE PTR [rax],al
   14004af3d:	add    BYTE PTR [rax],al
   14004af3f:	add    ah,bh
   14004af41:	mov    dl,0x4
   14004af43:	add    BYTE PTR [rax],al
   14004af45:	add    BYTE PTR [rax],al
   14004af47:	add    BYTE PTR [rdx],cl
   14004af49:	mov    bl,0x4
   14004af4b:	add    BYTE PTR [rax],al
   14004af4d:	add    BYTE PTR [rax],al
   14004af4f:	add    BYTE PTR [rsi],dl
   14004af51:	mov    bl,0x4
   14004af53:	add    BYTE PTR [rax],al
   14004af55:	add    BYTE PTR [rax],al
   14004af57:	add    BYTE PTR [rdx],ah
   14004af59:	mov    bl,0x4
   14004af5b:	add    BYTE PTR [rax],al
   14004af5d:	add    BYTE PTR [rax],al
   14004af5f:	add    BYTE PTR [rbx+rsi*4],ch
   14004af62:	add    al,0x0
   14004af64:	add    BYTE PTR [rax],al
   14004af66:	add    BYTE PTR [rax],al
   14004af68:	cmp    BYTE PTR [rbx+0x4],dh
   14004af6e:	add    BYTE PTR [rax],al
   14004af70:	rex.WR mov bl,0x4
   14004af73:	add    BYTE PTR [rax],al
   14004af75:	add    BYTE PTR [rax],al
   14004af77:	add    dh,bh
   14004af79:	scas   eax,DWORD PTR es:[rdi]
   14004af7a:	add    al,0x0
   14004af7c:	add    BYTE PTR [rax],al
   14004af7e:	add    BYTE PTR [rax],al
   14004af80:	clc    
   14004af81:	scas   eax,DWORD PTR es:[rdi]
   14004af82:	add    al,0x0
   14004af84:	add    BYTE PTR [rax],al
   14004af86:	add    BYTE PTR [rax],al
   14004af88:	repnz scas eax,DWORD PTR es:[rdi]
   14004af8a:	add    al,0x0
   14004af8c:	add    BYTE PTR [rax],al
   14004af8e:	add    BYTE PTR [rax],al
   14004af90:	call   0x14004b444
   14004af95:	add    BYTE PTR [rax],al
   14004af97:	add    dh,bl
   14004af99:	scas   eax,DWORD PTR es:[rdi]
   14004af9a:	add    al,0x0
   14004af9c:	add    BYTE PTR [rax],al
   14004af9e:	add    BYTE PTR [rax],al
   14004afa0:	ins    BYTE PTR es:[rdi],dx
   14004afa1:	mov    cl,0x4
   14004afa3:	add    BYTE PTR [rax],al
   14004afa5:	add    BYTE PTR [rax],al
   14004afa7:	add    al,dl
   14004afa9:	scas   eax,DWORD PTR es:[rdi]
   14004afaa:	add    al,0x0
   14004afac:	add    BYTE PTR [rax],al
   14004afae:	add    BYTE PTR [rax],al
   14004afb0:	(bad)  
   14004afb1:	mov    bl,0x4
   14004afb3:	add    BYTE PTR [rax],al
   14004afb5:	add    BYTE PTR [rax],al
   14004afb7:	add    BYTE PTR [rax],cl
   14004afb9:	mov    ah,0x4
   14004afbb:	add    BYTE PTR [rax],al
   14004afbd:	add    BYTE PTR [rax],al
   14004afbf:	add    BYTE PTR [rdx],dl
   14004afc1:	mov    ah,0x4
	...
   14004afcf:	add    BYTE PTR [rcx+0x695f5f01],ch
   14004afd5:	outs   dx,DWORD PTR ds:[rsi]
   14004afd6:	(bad)  
   14004afd7:	pop    rdi
   14004afd8:	data16 jne 0x14004b049
   14004afdb:	movsxd eax,DWORD PTR [rax]
   14004afdd:	add    BYTE PTR [rax+0x6],cl
   14004afe0:	data16 jo 0x14004b055
   14004afe3:	imul   ebp,DWORD PTR [rsi+0x74],0x7000066
   14004afea:	jae    0x14004b05f
   14004afec:	movsxd esp,DWORD PTR [rcx+0x6e]
   14004afef:	data16 add BYTE PTR [rax],al
   14004aff2:	cmc    
   14004aff3:	add    eax,0x736f63
   14004aff8:	test   DWORD PTR [rsi],0x6e6973
   14004affe:	push   rax
   14004afff:	(bad)  
   14004b000:	data16 jb 0x14004b068
   14004b003:	add    BYTE PTR gs:[rax],al
   14004b006:	stos   BYTE PTR es:[rdi],al
   14004b007:	(bad)  
   14004b008:	ins    DWORD PTR es:[rdi],dx
   14004b009:	(bad)  
   14004b00a:	ins    BYTE PTR es:[rdi],dx
   14004b00b:	ins    BYTE PTR es:[rdi],dx
   14004b00c:	outs   dx,DWORD PTR ds:[rsi]
   14004b00d:	movsxd eax,DWORD PTR [rax]
   14004b00f:	add    BYTE PTR [rcx+0x6d656d06],bh
   14004b015:	jae    0x14004b07c
   14004b017:	je     0x14004b019
   14004b019:	add    BYTE PTR [rbp+0x6f746105],dh
   14004b01f:	data16 add BYTE PTR [rax],al
   14004b022:	(bad)  
   14004b023:	(bad)  
   14004b024:	jno    0x14004b099
   14004b026:	outs   dx,DWORD PTR ds:[rsi]
   14004b027:	jb     0x14004b09d
   14004b029:	add    BYTE PTR [rsi+0x61746105],ch
   14004b02f:	outs   dx,BYTE PTR ds:[rsi]
   14004b030:	xor    al,BYTE PTR [rax]
   14004b032:	std    
   14004b033:	(bad)  
   14004b034:	jae    0x14004b0a7
   14004b036:	jb     0x14004b0ac
   14004b038:	add    BYTE PTR [rax],al
   14004b03a:	adc    BYTE PTR [rdi],al
   14004b03c:	jae    0x14004b0b2
   14004b03e:	jb     0x14004b0ae
   14004b040:	movsxd ebp,DWORD PTR [rbp+0x70]
   14004b043:	add    ch,al
   14004b045:	add    eax,0x6c6c6163
   14004b04a:	outs   dx,DWORD PTR ds:[rsi]
   14004b04b:	movsxd eax,DWORD PTR [rax]
   14004b04d:	add    dh,cl
   14004b04f:	(bad)  
   14004b050:	jo     0x14004b0c4
   14004b052:	imul   ebp,DWORD PTR [rsi+0x74],0x18000066
   14004b059:	(bad)  
   14004b05a:	gs js  0x14004b0c6
   14004b05d:	je     0x14004b05f
   14004b05f:	add    BYTE PTR [rbp+0x6d656d06],dh
   14004b065:	movsxd esi,DWORD PTR [rax+0x79]
   14004b068:	add    BYTE PTR [rax],al
   14004b06a:	mov    dh,0x5
   14004b06c:	(bad)  
   14004b06d:	je     0x14004b0de
   14004b06f:	imul   eax,DWORD PTR [rax],0x5f050900
   14004b075:	ja     0x14004b0d8
   14004b077:	jae    0x14004b0ec
   14004b079:	gs jb  0x14004b0f0
   14004b07c:	add    BYTE PTR [rax],al
   14004b07e:	jbe    0x14004b086
   14004b080:	imul   esi,DWORD PTR [rbx+0x73],0x65636170
   14004b087:	add    BYTE PTR [rdi+0x6f626105],bl
   14004b08d:	jb     0x14004b103
   14004b08f:	add    dl,bl
   14004b091:	(bad)  
   14004b092:	jb     0x14004b0f9
   14004b094:	(bad)  
   14004b095:	ins    BYTE PTR es:[rdi],dx
   14004b096:	ins    BYTE PTR es:[rdi],dx
   14004b097:	outs   dx,DWORD PTR ds:[rsi]
   14004b098:	movsxd eax,DWORD PTR [rax]
   14004b09a:	sti    
   14004b09b:	(bad)  
   14004b09c:	jae    0x14004b10e
   14004b09e:	jb     0x14004b109
   14004b0a0:	outs   dx,BYTE PTR ds:[rsi]
   14004b0a1:	je     0x14004b109
   14004b0a3:	add    al,bl
   14004b0a5:	(bad)  
   14004b0a6:	jb     0x14004b109
   14004b0a8:	outs   dx,BYTE PTR ds:[rsi]
   14004b0a9:	add    BYTE PTR fs:[rax],al
   14004b0ac:	inc    DWORD PTR [rsi]
   14004b0ae:	jae    0x14004b122
   14004b0b0:	(bad)  
   14004b0b1:	outs   dx,BYTE PTR ds:[rsi]
   14004b0b2:	add    BYTE PTR fs:[rbx+0x69745f04],ch
   14004b0b9:	ins    DWORD PTR es:[rdi],dx
   14004b0ba:	gs ss xor al,0x0
   14004b0be:	ins    BYTE PTR es:[rdi],dx
   14004b0bf:	(bad)  
   14004b0c0:	imul   esi,DWORD PTR [rbx+0x61],0x6d756e6c
   14004b0c7:	add    BYTE PTR [rsi+0x6],al
   14004b0ca:	outs   dx,WORD PTR ds:[rsi]
   14004b0cc:	jo     0x14004b133
   14004b0ce:	outs   dx,BYTE PTR ds:[rsi]
   14004b0cf:	add    bl,cl
   14004b0d1:	(bad)  
   14004b0d2:	jo     0x14004b139
   14004b0d4:	jb     0x14004b148
   14004b0d6:	outs   dx,DWORD PTR ds:[rsi]
   14004b0d7:	jb     0x14004b0d9
   14004b0d9:	add    BYTE PTR [rbp+0x1],cl
   14004b0dc:	pop    rdi
   14004b0dd:	rex.W push rbp
   14004b0df:	rex.RXB
   14004b0e0:	add    r12b,r9b
   14004b0e3:	(bad)  
   14004b0e4:	jo     0x14004b155
   14004b0e6:	ja     0x14004b0e8
   14004b0e8:	xor    eax,DWORD PTR [rsi]
   14004b0ea:	data16 data16 ins BYTE PTR es:[rdi],dx
   14004b0ed:	jne    0x14004b162
   14004b0ef:	push   0x6700000
   14004b0f4:	imul   esi,DWORD PTR [rbx+0x64],0x74696769
   14004b0fb:	add    BYTE PTR [rax+0x6],ah
   14004b0fe:	addr32 gs je 0x14004b167
   14004b102:	outs   dx,BYTE PTR ds:[rsi]
   14004b103:	jbe    0x14004b105
   14004b105:	add    BYTE PTR [rdi+rax*1],al
   14004b108:	jae    0x14004b17e
   14004b10a:	jb     0x14004b16f
   14004b10c:	push   0x17000072
   14004b111:	(bad)  
   14004b112:	jae    0x14004b188
   14004b114:	jb     0x14004b189
   14004b116:	je     0x14004b18a
   14004b118:	add    BYTE PTR [rax],al
   14004b11a:	ja     0x14004b122
   14004b11c:	imul   esi,DWORD PTR [rbx+0x75],0x72657070
   14004b123:	add    BYTE PTR [rbx],dh
   14004b125:	(bad)  
   14004b126:	je     0x14004b197
   14004b128:	ins    BYTE PTR es:[rdi],dx
   14004b129:	outs   dx,DWORD PTR ds:[rsi]
   14004b12a:	ja     0x14004b191
   14004b12c:	jb     0x14004b12e
   14004b12e:	ss (bad) 
   14004b130:	data16 addr32 gs je 0x14004b1a8
   14004b135:	add    BYTE PTR [rdx+0x6],cl
   14004b138:	data16 jo 0x14004b1b0
   14004b13b:	je     0x14004b1a0
   14004b13d:	add    BYTE PTR [rbx+0x6],cl
   14004b140:	data16 jo 0x14004b1b8
   14004b143:	je     0x14004b1b8
   14004b145:	add    BYTE PTR [rbx],bl
   14004b147:	(bad)  
   14004b148:	jae    0x14004b1be
   14004b14a:	jb     0x14004b1c0
   14004b14c:	outs   dx,DWORD PTR ds:[rsi]
   14004b14d:	imul   eax,DWORD PTR [rax],0x0
   14004b150:	fiadd  WORD PTR [rip+0x6c696563]        # 0x1ac6e16b9
   14004b156:	add    BYTE PTR [rax],al
   14004b158:	fiadd  DWORD PTR [rdx]
   14004b15a:	pop    rdi
   14004b15b:	push   0x746f7079
   14004b160:	add    BYTE PTR [rax],al
   14004b162:	add    eax,0x72747307
   14004b167:	movsxd ebp,DWORD PTR [rbp+0x70]
   14004b16a:	add    BYTE PTR [rax],al
   14004b16c:	mov    ecx,0x65736205
   14004b171:	(bad)  
   14004b172:	jb     0x14004b1d7
   14004b174:	push   0x66062d00
   14004b179:	gs jb  0x14004b1ee
   14004b17c:	outs   dx,DWORD PTR ds:[rsi]
   14004b17d:	jb     0x14004b17f
   14004b17f:	add    al,dl
   14004b181:	(bad)  
   14004b182:	jo     0x14004b1f9
   14004b184:	je     0x14004b1e9
   14004b186:	add    BYTE PTR [rax],al
   14004b188:	ins    DWORD PTR es:[rdi],dx
   14004b189:	(bad)  
   14004b18a:	imul   esi,DWORD PTR [rbx+0x61],0x6168706c
   14004b191:	add    BYTE PTR [rbx+0x6],dh
   14004b194:	imul   esi,DWORD PTR [rbx+0x6c],0x7265776f
   14004b19b:	add    BYTE PTR [rbp+0x6],dh
   14004b19e:	imul   esi,DWORD PTR [rbx+0x70],0x74636e75
   14004b1a5:	add    BYTE PTR [rsi+rax*1+0x636d656d],dh
   14004b1ac:	ins    DWORD PTR es:[rdi],dx
   14004b1ad:	jo     0x14004b1af
   14004b1af:	add    BYTE PTR [rdx],ah
   14004b1b1:	(bad)  
   14004b1b2:	movsxd bp,DWORD PTR [rdi+rbp*2+0x73]
   14004b1b7:	add    BYTE PTR gs:[rax],al
   14004b1ba:	rex.WRX (bad) 
   14004b1bc:	data16 jb 0x14004b224
   14004b1bf:	(bad)  
   14004b1c0:	add    BYTE PTR fs:[rsi+0x6],dl
   14004b1c4:	data16 jae 0x14004b22c
   14004b1c7:	imul   eax,DWORD PTR gs:[rax],0xffffff93
   14004b1cb:	add    bl,BYTE PTR [rdi+0x66]
   14004b1ce:	jae    0x14004b244
   14004b1d0:	(bad)  
   14004b1d1:	je     0x14004b209
   14004b1d3:	xor    al,0x69
   14004b1d5:	xor    esi,DWORD PTR [rdx]
   14004b1d7:	add    BYTE PTR [rdi+0x6f746105],dh
   14004b1dd:	ins    BYTE PTR es:[rdi],dx
   14004b1de:	add    BYTE PTR [rax],al
   14004b1e0:	adc    eax,0x72747307
   14004b1e5:	jb     0x14004b24a
   14004b1e7:	push   0x6970072
   14004b1ec:	ins    BYTE PTR es:[rdi],dx
   14004b1ed:	outs   dx,DWORD PTR ds:[rsi]
   14004b1ee:	xor    DWORD PTR [eax],esi
   14004b1f1:	add    BYTE PTR [rdi+rax*1],cl
   14004b1f4:	jae    0x14004b26a
   14004b1f6:	jb     0x14004b25e
   14004b1f8:	je     0x14004b263
   14004b1fa:	ins    DWORD PTR es:[rdi],dx
   14004b1fb:	add    BYTE PTR gs:[rax],al
   14004b1fe:	pop    rcx
   14004b1ff:	add    ebx,DWORD PTR [rdi+0x6c]
   14004b202:	outs   dx,DWORD PTR ds:[rsi]
   14004b203:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004b206:	je     0x14004b271
   14004b208:	ins    DWORD PTR es:[rdi],dx
   14004b209:	gs ss xor al,0x0
   14004b20d:	add    BYTE PTR [rbx+0x6],bl
   14004b210:	data16 ja 0x14004b285
   14004b213:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x76074900
   14004b21b:	jae    0x14004b28d
   14004b21d:	jb     0x14004b288
   14004b21f:	outs   dx,BYTE PTR ds:[rsi]
   14004b220:	je     0x14004b288
   14004b222:	add    BYTE PTR [rax],al
   14004b224:	rex.WRB push r11
   14004b226:	push   rsi
   14004b227:	rex.XB push r10
   14004b229:	xor    DWORD PTR [rdx],esi
   14004b22b:	xor    BYTE PTR [rsi],ch
   14004b22d:	fs ins BYTE PTR es:[rdi],dx
   14004b22f:	ins    BYTE PTR es:[rdi],dx
   14004b230:	add    BYTE PTR [rax],al
   14004b232:	pop    rbx
   14004b233:	add    ebx,DWORD PTR [rdi+0x6c]
   14004b236:	outs   dx,DWORD PTR ds:[rsi]
   14004b237:	movsxd ebp,DWORD PTR [rbx+0x0]
   14004b23a:	mov    DWORD PTR [rdi+rbx*2],0x6f6c6e75
   14004b241:	movsxd ebp,DWORD PTR [rbx+0x0]
   14004b244:	or     DWORD PTR [rdx],eax
   14004b246:	pop    rdi
   14004b247:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004b24a:	ins    BYTE PTR es:[rdi],dx
   14004b24b:	outs   dx,DWORD PTR ds:[rsi]
   14004b24c:	movsxd ebx,DWORD PTR [rdi+0x63]
   14004b24f:	jb     0x14004b2c5
   14004b251:	add    BYTE PTR [rdi+0x645f5f01],bl
   14004b257:	ins    BYTE PTR es:[rdi],dx
   14004b258:	ins    BYTE PTR es:[rdi],dx
   14004b259:	outs   dx,DWORD PTR ds:[rsi]
   14004b25a:	outs   dx,BYTE PTR ds:[rsi]
   14004b25b:	gs js  0x14004b2c7
   14004b25e:	je     0x14004b260
   14004b260:	pop    rsp
   14004b261:	add    DWORD PTR [rdi+0x5f],ebx
   14004b264:	rex.XB pop r15
   14004b266:	jae    0x14004b2d8
   14004b268:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14004b26c:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14004b273:	ins    BYTE PTR es:[rdi],dx
   14004b274:	gs jb  0x14004b277
   14004b277:	add    BYTE PTR [rdx],al
   14004b279:	add    al,0x5f
   14004b27b:	outs   dx,DWORD PTR ds:[rsi]
   14004b27c:	outs   dx,BYTE PTR ds:[rsi]
   14004b27d:	gs js  0x14004b2e9
   14004b280:	je     0x14004b282
   14004b282:	pop    rax
   14004b283:	add    DWORD PTR [rdi+0x58],ebx
   14004b286:	movsxd esi,DWORD PTR [rax+0x74]
   14004b289:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x1f20072
   14004b292:	pop    rdi
   14004b293:	(bad)  
   14004b294:	ins    DWORD PTR es:[rdi],dx
   14004b295:	jae    0x14004b2fe
   14004b297:	pop    rdi
   14004b298:	gs js  0x14004b304
   14004b29b:	je     0x14004b29d
   14004b29d:	add    BYTE PTR [rdi+0x675f5f01],ah
   14004b2a3:	gs je  0x14004b313
   14004b2a6:	(bad)  
   14004b2a7:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14004b2ae:	(bad)  
   14004b2af:	add    DWORD PTR [rdi+0x5f],ebx
   14004b2b2:	jae    0x14004b319
   14004b2b4:	je     0x14004b315
   14004b2b6:	(bad)  
   14004b2b7:	jo     0x14004b329
   14004b2b9:	pop    rdi
   14004b2ba:	je     0x14004b335
   14004b2bc:	jo     0x14004b323
   14004b2be:	add    BYTE PTR [rax],al
   14004b2c0:	pop    rax
   14004b2c1:	add    bl,BYTE PTR [rdi+0x65]
   14004b2c4:	js     0x14004b32f
   14004b2c6:	je     0x14004b2c8
   14004b2c8:	or     al,BYTE PTR [rdx]
   14004b2ca:	pop    rdi
   14004b2cb:	movsxd esp,DWORD PTR [rbp+0x78]
   14004b2ce:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x635f021a
   14004b2d6:	outs   dx,DWORD PTR ds:[rsi]
   14004b2d7:	outs   dx,BYTE PTR ds:[rsi]
   14004b2d8:	imul   sp,WORD PTR [rdi+0x74],0x7268
   14004b2de:	gs (bad) 
   14004b2e0:	fs ins BYTE PTR es:[rdi],dx
   14004b2e2:	outs   dx,DWORD PTR ds:[rsi]
   14004b2e3:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004b2e6:	gs add al,dl
   14004b2e9:	add    DWORD PTR [rdi+0x5f],ebx
   14004b2ec:	jae    0x14004b353
   14004b2ee:	je     0x14004b365
   14004b2f0:	jae    0x14004b357
   14004b2f2:	jb     0x14004b361
   14004b2f4:	(bad)  
   14004b2f5:	je     0x14004b35f
   14004b2f7:	gs jb  0x14004b36c
   14004b2fa:	add    BYTE PTR [rax],al
   14004b2fc:	loop   0x14004b300
   14004b2fe:	pop    rdi
   14004b2ff:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14004b306:	ins    DWORD PTR es:[rdi],dx
   14004b307:	pop    rdi
   14004b308:	gs add cl,ah
   14004b30b:	add    bl,BYTE PTR [rdi+0x69]
   14004b30e:	outs   dx,BYTE PTR ds:[rsi]
   14004b30f:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0xa8006d72
   14004b317:	add    DWORD PTR [rdi+0x5f],ebx
   14004b31a:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
   14004b321:	add    BYTE PTR [rax+0x2],bh
   14004b324:	pop    rdi
   14004b325:	ins    WORD PTR es:[rdi],dx
   14004b327:	outs   dx,DWORD PTR ds:[rsi]
   14004b328:	fs add BYTE PTR gs:[rax],al
   14004b32c:	sbb    DWORD PTR [rdx],eax
   14004b32e:	pop    rdi
   14004b32f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14004b332:	ins    DWORD PTR es:[rdi],dx
   14004b333:	outs   dx,DWORD PTR ds:[rsi]
   14004b334:	fs add BYTE PTR gs:[rax],al
   14004b338:	xor    eax,DWORD PTR [rcx]
   14004b33a:	(bad)  
   14004b33b:	je     0x14004b3a2
   14004b33d:	jb     0x14004b3ac
   14004b33f:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14004b346:	pop    rcx
   14004b347:	pop    r8
   14004b349:	pop    rax
   14004b34a:	pop    rdx
   14004b34b:	add    BYTE PTR [rcx+0x635f5f01],bl
   14004b351:	jb     0x14004b3c7
   14004b353:	push   rbx
   14004b354:	gs je  0x14004b3ac
   14004b357:	outs   dx,BYTE PTR ds:[rsi]
   14004b358:	push   0x6c646e61
   14004b35d:	gs fs rex.RB js 0x14004b3c5
   14004b362:	gs jo  0x14004b3d9
   14004b365:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14004b36c:	gs jb  0x14004b36f
   14004b36f:	add    BYTE PTR [rip+0x636e4501],ah        # 0x1a372f876
   14004b375:	outs   dx,DWORD PTR ds:[rsi]
   14004b376:	fs gs push rax
   14004b379:	outs   dx,DWORD PTR ds:[rsi]
   14004b37a:	imul   ebp,DWORD PTR [rsi+0x74],0xff007265
   14004b381:	add    BYTE PTR [rbp+riz*2+0x63],al
   14004b385:	outs   dx,DWORD PTR ds:[rsi]
   14004b386:	fs gs push rax
   14004b389:	outs   dx,DWORD PTR ds:[rsi]
   14004b38a:	imul   ebp,DWORD PTR [rsi+0x74],0x30007265
   14004b391:	add    al,0x51
   14004b393:	jne    0x14004b3fa
   14004b395:	jb     0x14004b410
   14004b397:	push   rax
   14004b398:	gs jb  0x14004b401
   14004b39b:	outs   dx,DWORD PTR ds:[rsi]
   14004b39c:	jb     0x14004b40b
   14004b39e:	(bad)  
   14004b39f:	outs   dx,BYTE PTR ds:[rsi]
   14004b3a0:	movsxd esp,DWORD PTR [rbp+0x43]
   14004b3a3:	outs   dx,DWORD PTR ds:[rsi]
   14004b3a4:	jne    0x14004b414
   14004b3a6:	je     0x14004b40d
   14004b3a8:	jb     0x14004b3aa
   14004b3aa:	adc    BYTE PTR [rdx],al
   14004b3ac:	rex.RXB
   14004b3ad:	gs je  0x14004b3f3
   14004b3b0:	jne    0x14004b424
   14004b3b2:	jb     0x14004b419
   14004b3b4:	outs   dx,BYTE PTR ds:[rsi]
   14004b3b5:	je     0x14004b407
   14004b3b7:	jb     0x14004b428
   14004b3b9:	movsxd esp,DWORD PTR [rbp+0x73]
   14004b3bc:	jae    0x14004b407
   14004b3be:	add    BYTE PTR fs:[rdx+rax*1],dl
   14004b3c2:	rex.RXB
   14004b3c3:	gs je  0x14004b409
   14004b3c6:	jne    0x14004b43a
   14004b3c8:	jb     0x14004b42f
   14004b3ca:	outs   dx,BYTE PTR ds:[rsi]
   14004b3cb:	je     0x14004b421
   14004b3cd:	push   0x64616572
   14004b3d2:	rex.WB
   14004b3d3:	add    BYTE PTR fs:[rax],al
   14004b3d6:	fld    QWORD PTR [rdx]
   14004b3d8:	rex.RXB
   14004b3d9:	gs je  0x14004b42f
   14004b3dc:	jns    0x14004b451
   14004b3de:	je     0x14004b445
   14004b3e0:	ins    DWORD PTR es:[rdi],dx
   14004b3e1:	push   rsp
   14004b3e2:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14004b3e9:	ins    BYTE PTR es:[rdi],dx
   14004b3ea:	gs push rsp
   14004b3ec:	imul   ebp,DWORD PTR [rbp+0x65],0x52454b00
   14004b3f3:	rex.WRX
   14004b3f4:	rex.RB
   14004b3f5:	xor    r14,QWORD PTR [rdx]
   14004b3f8:	cs fs ins BYTE PTR es:[rdi],dx
   14004b3fb:	ins    BYTE PTR es:[rdi],dx
   14004b3fc:	add    BYTE PTR [rax],al
   14004b3fe:	adc    DWORD PTR [rdi+rbx*2],eax
   14004b401:	jo     0x14004b478
   14004b403:	je     0x14004b46a
   14004b405:	outs   dx,BYTE PTR ds:[rsi]
   14004b406:	jbe    0x14004b408
   14004b408:	jno    0x14004b40e
   14004b40a:	pop    rdi
   14004b40b:	jae    0x14004b481
   14004b40d:	jb     0x14004b473
   14004b40f:	jne    0x14004b481
   14004b411:	add    BYTE PTR [rdx+0x2],ch
   14004b414:	pop    rdi
   14004b415:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f

Disassembly of section .data:

000000014004c000 <.data>:
   14004c000:	js     0x14004bfd5
   14004c002:	add    eax,DWORD PTR [rax+0x1]
   14004c005:	add    BYTE PTR [rax],al
   14004c007:	add    BYTE PTR [rax+0x14003d3],al
   14004c00d:	add    BYTE PTR [rax],al
   14004c00f:	add    BYTE PTR [rax+0x14003d3],cl
   14004c015:	add    BYTE PTR [rax],al
   14004c017:	add    BYTE PTR [rdx-0x66666667],bl
   14004c01d:	cdq    
   14004c01e:	test   eax,0x99999a3f
   14004c023:	cdq    
   14004c024:	cdq    
   14004c025:	cdq    
   14004c026:	test   eax,0xc71c723f
   14004c02b:	jno    0x14004c049
   14004c02d:	(bad)  
   14004c02e:	mov    cl,0x3f
   14004c030:	(bad)  
   14004c031:	(bad)  
   14004c032:	(bad)  
   14004c033:	inc    DWORD PTR [rax]
   14004c035:	add    BYTE PTR [rax],al
   14004c037:	add    BYTE PTR [rax+0x14003d5],al
   14004c03d:	add    BYTE PTR [rax],al
   14004c03f:	add    BYTE PTR [rax],dl
   14004c041:	add    BYTE PTR [rax],al
   14004c043:	add    BYTE PTR [rax],cl
	...
   14004c05d:	add    BYTE PTR [rax],al
   14004c05f:	add    BYTE PTR [rax-0x6],ah
   14004c062:	add    BYTE PTR [rax+0x1],al
	...
   14004c085:	add    al,dh
   14004c087:	(bad)  
   14004c088:	fcomp  st(5)
   14004c08a:	add    eax,DWORD PTR [rax+0x1]
   14004c08d:	add    BYTE PTR [rax],al
   14004c08f:	add    al,ah
   14004c091:	fld    QWORD PTR [rbx]
   14004c093:	rex add DWORD PTR [rax],eax
   14004c096:	add    BYTE PTR [rax],al
   14004c098:	lock fld QWORD PTR [rbx]
   14004c09b:	rex add DWORD PTR [rax],eax
   14004c09e:	add    BYTE PTR [rax],al
   14004c0a0:	call   0x12804c0a8
   14004c0a5:	add    eax,DWORD PTR [rax]
   14004c0a7:	add    BYTE PTR [rax],ch
   14004c0a9:	add    BYTE PTR [rax],al
   14004c0ab:	add    BYTE PTR [rax],al
   14004c0ad:	add    BYTE PTR [rax],al
   14004c0af:	add    BYTE PTR [rbx],dh
   14004c0b1:	xor    esi,DWORD PTR [rbx]
   14004c0b3:	xor    esi,DWORD PTR [rbx]
   14004c0b5:	xor    esi,ebx
   14004c0b7:	(bad)  
   14004c0b8:	add    BYTE PTR [rax],al
   14004c0ba:	sar    bh,0xff
   14004c0bd:	(bad)  
   14004c0be:	fild   WORD PTR [rcx+0x54]
   14004c0c1:	in     eax,0x3
   14004c0c3:	rex add DWORD PTR [rax],eax
   14004c0c6:	add    BYTE PTR [rax],al
   14004c0c8:	pop    rsp
   14004c0c9:	in     eax,0x3
   14004c0cb:	rex add DWORD PTR [rax],eax
   14004c0ce:	add    BYTE PTR [rax],al
   14004c0d0:	fs in  eax,0x3
   14004c0d3:	rex add DWORD PTR [rax],eax
	...
   14004c0de:	add    BYTE PTR [rax],al
   14004c0e0:	add    BYTE PTR fs:[rax],al
   14004c0e3:	add    BYTE PTR [rbp+0x0],ah
   14004c0e6:	add    BYTE PTR [rax],al
   14004c0e8:	data16 add BYTE PTR [rax],al
   14004c0eb:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004c0ef:	add    BYTE PTR [rcx],al
   14004c0f1:	add    BYTE PTR [rax],al
   14004c0f3:	add    BYTE PTR [rdx],bh
   14004c0f5:	or     DWORD PTR [rax],esp
	...
   14004c107:	add    al,dh
   14004c109:	jmp    0x140060111
	...
   14004c11e:	add    BYTE PTR [rax],al
   14004c120:	hlt    
   14004c121:	jmp    0x140060129
   14004c126:	add    BYTE PTR [rax],al
   14004c128:	sbb    DWORD PTR [rax],eax
	...
   14004c136:	add    BYTE PTR [rax],al
   14004c138:	cld    
   14004c139:	jmp    0x140060141
   14004c13e:	add    BYTE PTR [rax],al
   14004c140:	(bad)  
	...
   14004c14d:	add    BYTE PTR [rax],al
   14004c14f:	add    BYTE PTR [rax],cl
   14004c151:	(bad)  
   14004c152:	add    eax,DWORD PTR [rax+0x1]
   14004c155:	add    BYTE PTR [rax],al
   14004c157:	add    BYTE PTR [rdi],al
	...
   14004c17d:	add    BYTE PTR [rax],al
   14004c17f:	add    BYTE PTR [rax-0x13],al
   14004c182:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c18d:	add    BYTE PTR [rax],al
   14004c18f:	add    BYTE PTR [rax-0x13],cl
   14004c192:	add    eax,DWORD PTR [rax+0x1]
   14004c195:	add    BYTE PTR [rax],al
   14004c197:	add    BYTE PTR [rbp+rbp*8+0x3],cl
   14004c19b:	rex add DWORD PTR [rax],eax
   14004c19e:	add    BYTE PTR [rax],al
   14004c1a0:	push   rax
   14004c1a1:	in     eax,dx
   14004c1a2:	add    eax,DWORD PTR [rax+0x1]
   14004c1a5:	add    BYTE PTR [rax],al
   14004c1a7:	add    BYTE PTR [rbp+rbp*8+0x3],dl
   14004c1ab:	rex add DWORD PTR [rax],eax
   14004c1ae:	add    BYTE PTR [rax],al
   14004c1b0:	pop    rax
   14004c1b1:	in     eax,dx
   14004c1b2:	add    eax,DWORD PTR [rax+0x1]
   14004c1b5:	add    BYTE PTR [rax],al
   14004c1b7:	add    BYTE PTR [rbp+rbp*8+0x3],bl
   14004c1bb:	rex add DWORD PTR [rax],eax
   14004c1be:	add    BYTE PTR [rax],al
   14004c1c0:	test   al,0xdf
   14004c1c2:	add    eax,DWORD PTR [rax+0x1]
   14004c1c5:	add    BYTE PTR [rax],al
   14004c1c7:	add    BYTE PTR [rax-0x13],ah
   14004c1ca:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c1d9:	add    DWORD PTR [rcx],eax
   14004c1db:	add    DWORD PTR [rcx],eax
   14004c1dd:	add    BYTE PTR [rcx],al
   14004c1df:	inc    DWORD PTR [rax]
   14004c1e1:	(bad)  
   14004c1e2:	(bad)  
   14004c1e3:	(bad)  
   14004c1e4:	inc    DWORD PTR [rax]
   14004c1e6:	inc    DWORD PTR [rcx]
	...
   14004c1f4:	add    BYTE PTR [rax],al
   14004c1f6:	lock mov edi,0x0
	...
   14004c204:	add    DWORD PTR [rax],eax
	...
   14004c23a:	add    BYTE PTR [rax],al
   14004c23c:	add    DWORD PTR [rax],eax
   14004c23e:	add    BYTE PTR [rax],al
   14004c240:	add    DWORD PTR [rax],eax
	...
   14004c26e:	add    BYTE PTR [rax],al
   14004c270:	add    DWORD PTR [rax],eax
   14004c272:	add    BYTE PTR [rax],al
   14004c274:	add    DWORD PTR [rax],eax
   14004c276:	add    BYTE PTR [rax],al
   14004c278:	add    DWORD PTR [rax],eax
	...
   14004c2aa:	add    BYTE PTR [rax],al
   14004c2ac:	add    DWORD PTR [rax],eax
   14004c2ae:	add    BYTE PTR [rax],al
   14004c2b0:	add    DWORD PTR [rax],eax
	...
   14004c2be:	add    BYTE PTR [rax],al
   14004c2c0:	xor    esi,DWORD PTR [rbx]
   14004c2c2:	xor    esi,DWORD PTR [rbx]
   14004c2c4:	xor    esi,DWORD PTR [rbx]
   14004c2c6:	sar    DWORD PTR [rdi+0x0],cl
	...
   14004c2e4:	add    DWORD PTR [rax],eax
   14004c2e6:	add    BYTE PTR [rax],al
   14004c2e8:	add    eax,DWORD PTR [rax]
	...
   14004c31a:	add    BYTE PTR [rax],al
   14004c31c:	add    DWORD PTR [rax],eax
   14004c31e:	add    BYTE PTR [rax],al
   14004c320:	add    al,0x0
	...
   14004c356:	add    BYTE PTR [rax],al
   14004c358:	add    al,0x0
	...
   14004c38a:	add    BYTE PTR [rax],al
   14004c38c:	add    DWORD PTR [rax],eax
   14004c38e:	add    BYTE PTR [rax],al
   14004c390:	add    al,0x0
	...
   14004c39a:	add    BYTE PTR [rax],al
   14004c39c:	add    BYTE PTR [rax+0x4046],al
	...
   14004c3c2:	add    BYTE PTR [rax],al
   14004c3c4:	add    DWORD PTR [rax],eax
   14004c3c6:	add    BYTE PTR [rax],al
   14004c3c8:	add    al,0x0
	...
   14004c3d6:	add    BYTE PTR [rax],al
   14004c3d8:	(bad)  
   14004c3d9:	cdq    
   14004c3da:	cdq    
   14004c3db:	cdq    
   14004c3dc:	cdq    
   14004c3dd:	cdq    
   14004c3de:	fnstcw WORD PTR [rdi+0x0]
	...
   14004c3fc:	add    DWORD PTR [rax],eax
   14004c3fe:	add    BYTE PTR [rax],al
   14004c400:	add    al,0x0
	...
   14004c416:	add    BYTE PTR [rax],al
   14004c418:	xor    esi,DWORD PTR [rbx]
   14004c41a:	xor    esi,DWORD PTR [rbx]
   14004c41c:	xor    esi,DWORD PTR [rbx]
   14004c41e:	jrcxz  0x14004c45f
	...
   14004c434:	add    DWORD PTR [rax],eax
   14004c436:	add    BYTE PTR [rax],al
   14004c438:	add    eax,0x0
	...
   14004c445:	add    BYTE PTR [rax],al
   14004c447:	add    BYTE PTR [rbx+0x14],bh
   14004c44a:	scas   al,BYTE PTR es:[rdi]
   14004c44b:	rex.RXB loope 0x14004c4c8
   14004c44e:	in     al,0xbf
	...
   14004c46c:	add    DWORD PTR [rax],eax
   14004c46e:	add    BYTE PTR [rax],al
   14004c470:	(bad)  
	...
   14004c4a1:	add    BYTE PTR [rax],al
   14004c4a3:	add    BYTE PTR [rcx],al
   14004c4a5:	add    BYTE PTR [rax],al
   14004c4a7:	add    BYTE PTR [rax],cl
	...
   14004c4d5:	add    BYTE PTR [rax],al
   14004c4d7:	add    BYTE PTR [rcx],al
   14004c4d9:	add    BYTE PTR [rax],al
   14004c4db:	add    BYTE PTR [rdx],al
   14004c4dd:	add    BYTE PTR [rax],al
   14004c4df:	add    BYTE PTR [rcx],al
	...
   14004c511:	add    BYTE PTR [rax],al
   14004c513:	add    BYTE PTR [rcx],al
   14004c515:	add    BYTE PTR [rax],al
   14004c517:	add    BYTE PTR [rbx],al
	...
   14004c525:	and    BYTE PTR [rsi+0x40],0x0
	...
   14004c549:	add    BYTE PTR [rax],al
   14004c54b:	add    BYTE PTR [rcx],al
   14004c54d:	add    BYTE PTR [rax],al
   14004c54f:	add    BYTE PTR [rax+rax*1],al
	...
   14004c55a:	add    BYTE PTR [rax],al
   14004c55c:	add    BYTE PTR [rax-0x6665bf9a],al
   14004c562:	cdq    
   14004c563:	cdq    
   14004c564:	cdq    
   14004c565:	cdq    
   14004c566:	fnstcw WORD PTR [rdi+0x0]
	...
   14004c584:	add    DWORD PTR [rax],eax
   14004c586:	add    BYTE PTR [rax],al
   14004c588:	add    eax,0x0
	...
   14004c595:	and    BYTE PTR [rsi+0x40],0x7b
   14004c599:	adc    al,0xae
   14004c59b:	rex.RXB loope 0x14004c618
   14004c59e:	in     al,0xbf
	...
   14004c5bc:	add    al,BYTE PTR [rax]
   14004c5be:	add    BYTE PTR [rax],al
   14004c5c0:	or     BYTE PTR [rax],al
	...
   14004c5f2:	add    BYTE PTR [rax],al
   14004c5f4:	add    eax,DWORD PTR [rax]
   14004c5f6:	add    BYTE PTR [rax],al
   14004c5f8:	or     BYTE PTR [rax],al
	...
   14004c62a:	add    BYTE PTR [rax],al
   14004c62c:	add    DWORD PTR [rax],eax
   14004c62e:	add    BYTE PTR [rax],al
   14004c630:	add    al,0x0
	...
   14004c63a:	add    BYTE PTR [rax],al
   14004c63c:	add    BYTE PTR [rax+0x4046],al
	...
   14004c64e:	add    BYTE PTR [rax],al
   14004c650:	or     al,0x0
	...
   14004c65e:	add    BYTE PTR [rax],al
   14004c660:	add    DWORD PTR [rax],eax
   14004c662:	add    BYTE PTR [rax],al
   14004c664:	add    DWORD PTR [rax],eax
   14004c666:	add    BYTE PTR [rax],al
   14004c668:	add    al,0x0
	...
   14004c686:	add    BYTE PTR [rax],al
   14004c688:	add    al,0x0
	...
   14004c696:	add    BYTE PTR [rax],al
   14004c698:	add    DWORD PTR [rax],eax
   14004c69a:	add    BYTE PTR [rax],al
   14004c69c:	add    DWORD PTR [rax],eax
   14004c69e:	add    BYTE PTR [rax],al
   14004c6a0:	add    DWORD PTR [rax],eax
	...
   14004c6be:	add    BYTE PTR [rax],al
   14004c6c0:	or     al,0x0
	...
   14004c6ce:	add    BYTE PTR [rax],al
   14004c6d0:	or     al,bl
   14004c6d2:	add    eax,DWORD PTR [rax+0x1]
   14004c6d5:	add    BYTE PTR [rax],al
   14004c6d7:	add    BYTE PTR [rax+0x14001ff],dl
   14004c6dd:	add    BYTE PTR [rax],al
   14004c6df:	add    al,dl
   14004c6e1:	or     eax,DWORD PTR [rdx]
   14004c6e3:	rex add DWORD PTR [rax],eax
   14004c6e6:	add    BYTE PTR [rax],al
   14004c6e8:	add    BYTE PTR [rdx+rax*1],cl
   14004c6eb:	rex add DWORD PTR [rax],eax
   14004c6ee:	add    BYTE PTR [rax],al
   14004c6f0:	xor    BYTE PTR [rip+0x14002],cl        # 0x1400606f8
	...
   14004c6fe:	add    BYTE PTR [rax],al
   14004c700:	adc    BYTE PTR [rdx+rax*1],dl
   14004c703:	rex add DWORD PTR [rax],eax
   14004c706:	add    BYTE PTR [rax],al
   14004c708:	sbb    bl,al
   14004c70a:	add    al,0x40
   14004c70c:	add    DWORD PTR [rax],eax
	...
   14004c716:	add    BYTE PTR [rax],al
   14004c718:	adc    al,bl
   14004c71a:	add    eax,DWORD PTR [rax+0x1]
   14004c71d:	add    BYTE PTR [rax],al
   14004c71f:	add    BYTE PTR [rax+0x14001ff],dl
   14004c725:	add    BYTE PTR [rax],al
   14004c727:	add    al,dl
   14004c729:	or     eax,DWORD PTR [rdx]
   14004c72b:	rex add DWORD PTR [rax],eax
   14004c72e:	add    BYTE PTR [rax],al
   14004c730:	add    BYTE PTR [rdx+rax*1],cl
   14004c733:	rex add DWORD PTR [rax],eax
   14004c736:	add    BYTE PTR [rax],al
   14004c738:	xor    BYTE PTR [rip+0x14002],cl        # 0x140060740
	...
   14004c746:	add    BYTE PTR [rax],al
   14004c748:	adc    BYTE PTR [rdx+rax*1],dl
   14004c74b:	rex add DWORD PTR [rax],eax
   14004c74e:	add    BYTE PTR [rax],al
   14004c750:	add    dl,al
   14004c752:	add    al,0x40
   14004c754:	add    DWORD PTR [rax],eax
	...
   14004c75e:	add    BYTE PTR [rax],al
   14004c760:	mov    eax,0x14003e9
   14004c765:	add    BYTE PTR [rax],al
   14004c767:	add    BYTE PTR [rax+0x14001ff],dl
   14004c76d:	add    BYTE PTR [rax],al
   14004c76f:	add    al,dl
   14004c771:	or     eax,DWORD PTR [rdx]
   14004c773:	rex add DWORD PTR [rax],eax
   14004c776:	add    BYTE PTR [rax],al
   14004c778:	add    BYTE PTR [rdx+rax*1],cl
   14004c77b:	rex add DWORD PTR [rax],eax
   14004c77e:	add    BYTE PTR [rax],al
   14004c780:	xor    BYTE PTR [rip+0x14002],cl        # 0x140060788
	...
   14004c78e:	add    BYTE PTR [rax],al
   14004c790:	adc    BYTE PTR [rdx+rax*1],dl
   14004c793:	rex add DWORD PTR [rax],eax
   14004c796:	add    BYTE PTR [rax],al
   14004c798:	cmp    dl,al
   14004c79a:	add    al,0x40
   14004c79c:	add    DWORD PTR [rax],eax
	...
   14004c7a6:	add    BYTE PTR [rax],al
   14004c7a8:	cmp    ah,ch
   14004c7aa:	add    eax,DWORD PTR [rax+0x1]
   14004c7ad:	add    BYTE PTR [rax],al
   14004c7af:	add    BYTE PTR [rax+0x14001ff],dl
   14004c7b5:	add    BYTE PTR [rax],al
   14004c7b7:	add    al,dl
   14004c7b9:	or     eax,DWORD PTR [rdx]
   14004c7bb:	rex add DWORD PTR [rax],eax
   14004c7be:	add    BYTE PTR [rax],al
   14004c7c0:	add    BYTE PTR [rdx+rax*1],cl
   14004c7c3:	rex add DWORD PTR [rax],eax
   14004c7c6:	add    BYTE PTR [rax],al
   14004c7c8:	xor    BYTE PTR [rip+0x14002],cl        # 0x1400607d0
	...
   14004c7d6:	add    BYTE PTR [rax],al
   14004c7d8:	adc    BYTE PTR [rdx+rax*1],dl
   14004c7db:	rex add DWORD PTR [rax],eax
   14004c7de:	add    BYTE PTR [rax],al
   14004c7e0:	jo     0x14004c7a4
   14004c7e2:	add    al,0x40
   14004c7e4:	add    DWORD PTR [rax],eax
	...
   14004c7ee:	add    BYTE PTR [rax],al
   14004c7f0:	in     al,dx
   14004c7f2:	add    eax,DWORD PTR [rax+0x1]
   14004c7f5:	add    BYTE PTR [rax],al
   14004c7f7:	add    al,dh
   14004c7f9:	sbb    DWORD PTR [rdx],eax
   14004c7fb:	rex add DWORD PTR [rax],eax
   14004c7fe:	add    BYTE PTR [rax],al
   14004c800:	ror    BYTE PTR [rbx],1
   14004c802:	add    al,BYTE PTR [rax+0x1]
   14004c805:	add    BYTE PTR [rax],al
   14004c807:	add    BYTE PTR [rax],al
   14004c809:	or     al,0x2
   14004c80b:	rex add DWORD PTR [rax],eax
   14004c80e:	add    BYTE PTR [rax],al
   14004c810:	xor    BYTE PTR [rip+0x14002],cl        # 0x140060818
	...
   14004c81e:	add    BYTE PTR [rax],al
   14004c820:	adc    BYTE PTR [rdx+rax*1],dl
   14004c823:	rex add DWORD PTR [rax],eax
   14004c826:	add    BYTE PTR [rax],al
   14004c828:	jo     0x14004c7ec
   14004c82a:	add    al,0x40
   14004c82c:	add    DWORD PTR [rax],eax
	...
   14004c836:	add    BYTE PTR [rax],al
   14004c838:	rex.W in al,dx
   14004c83a:	add    eax,DWORD PTR [rax+0x1]
   14004c83d:	add    BYTE PTR [rax],al
   14004c83f:	add    BYTE PTR [rax+0x14001ff],dl
   14004c845:	add    BYTE PTR [rax],al
   14004c847:	add    al,dl
   14004c849:	or     eax,DWORD PTR [rdx]
   14004c84b:	rex add DWORD PTR [rax],eax
   14004c84e:	add    BYTE PTR [rax],al
   14004c850:	add    BYTE PTR [rdx+rax*1],cl
   14004c853:	rex add DWORD PTR [rax],eax
   14004c856:	add    BYTE PTR [rax],al
   14004c858:	xor    BYTE PTR [rip+0x14002],cl        # 0x140060860
	...
   14004c866:	add    BYTE PTR [rax],al
   14004c868:	adc    BYTE PTR [rdx+rax*1],dl
   14004c86b:	rex add DWORD PTR [rax],eax
   14004c86e:	add    BYTE PTR [rax],al
   14004c870:	test   al,0xc2
   14004c872:	add    al,0x40
   14004c874:	add    DWORD PTR [rax],eax
	...
   14004c87e:	add    BYTE PTR [rax],al
   14004c880:	push   rax
   14004c881:	in     al,dx
   14004c882:	add    eax,DWORD PTR [rax+0x1]
   14004c885:	add    BYTE PTR [rax],al
   14004c887:	add    BYTE PTR [rax+0x14001ff],dl
   14004c88d:	add    BYTE PTR [rax],al
   14004c88f:	add    al,dl
   14004c891:	or     eax,DWORD PTR [rdx]
   14004c893:	rex add DWORD PTR [rax],eax
   14004c896:	add    BYTE PTR [rax],al
   14004c898:	add    BYTE PTR [rdx+rax*1],cl
   14004c89b:	rex add DWORD PTR [rax],eax
   14004c89e:	add    BYTE PTR [rax],al
   14004c8a0:	xor    BYTE PTR [rip+0x14002],cl        # 0x1400608a8
	...
   14004c8ae:	add    BYTE PTR [rax],al
   14004c8b0:	adc    BYTE PTR [rdx+rax*1],dl
   14004c8b3:	rex add DWORD PTR [rax],eax
   14004c8b6:	add    BYTE PTR [rax],al
   14004c8b8:	loopne 0x14004c87c
   14004c8ba:	add    al,0x40
   14004c8bc:	add    DWORD PTR [rax],eax
	...
   14004c8c6:	add    BYTE PTR [rax],al
   14004c8c8:	(bad)  
   14004c8c9:	in     al,dx
   14004c8ca:	add    eax,DWORD PTR [rax+0x1]
   14004c8cd:	add    BYTE PTR [rax],al
   14004c8cf:	add    BYTE PTR [rax+0x14001ff],dl
   14004c8d5:	add    BYTE PTR [rax],al
   14004c8d7:	add    al,dl
   14004c8d9:	or     eax,DWORD PTR [rdx]
   14004c8db:	rex add DWORD PTR [rax],eax
   14004c8de:	add    BYTE PTR [rax],al
   14004c8e0:	add    BYTE PTR [rdx+rax*1],cl
   14004c8e3:	rex add DWORD PTR [rax],eax
   14004c8e6:	add    BYTE PTR [rax],al
   14004c8e8:	xor    BYTE PTR [rip+0x14002],cl        # 0x1400608f0
	...
   14004c8f6:	add    BYTE PTR [rax],al
   14004c8f8:	adc    BYTE PTR [rdx+rax*1],dl
   14004c8fb:	rex add DWORD PTR [rax],eax
   14004c8fe:	add    BYTE PTR [rax],al
   14004c900:	push   rax
   14004c901:	ret    
   14004c902:	add    al,0x40
   14004c904:	add    DWORD PTR [rax],eax
	...
   14004c90e:	add    BYTE PTR [rax],al
   14004c910:	jo     0x14004c8fe
   14004c912:	add    eax,DWORD PTR [rax+0x1]
   14004c915:	add    BYTE PTR [rax],al
   14004c917:	add    BYTE PTR [rax+0x14001ff],dl
   14004c91d:	add    BYTE PTR [rax],al
   14004c91f:	add    al,dl
   14004c921:	or     eax,DWORD PTR [rdx]
   14004c923:	rex add DWORD PTR [rax],eax
   14004c926:	add    BYTE PTR [rax],al
   14004c928:	add    BYTE PTR [rdx+rax*1],cl
   14004c92b:	rex add DWORD PTR [rax],eax
   14004c92e:	add    BYTE PTR [rax],al
   14004c930:	xor    BYTE PTR [rip+0x14002],cl        # 0x140060938
	...
   14004c93e:	add    BYTE PTR [rax],al
   14004c940:	adc    BYTE PTR [rdx+rax*1],dl
   14004c943:	rex add DWORD PTR [rax],eax
   14004c946:	add    BYTE PTR [rax],al
   14004c948:	mov    bl,al
   14004c94a:	add    al,0x40
   14004c94c:	add    DWORD PTR [rax],eax
	...
   14004c956:	add    BYTE PTR [rax],al
   14004c958:	js     0x14004c946
   14004c95a:	add    eax,DWORD PTR [rax+0x1]
   14004c95d:	add    BYTE PTR [rax],al
   14004c95f:	add    BYTE PTR [rax+0x14001ff],dl
   14004c965:	add    BYTE PTR [rax],al
   14004c967:	add    al,dl
   14004c969:	or     eax,DWORD PTR [rdx]
   14004c96b:	rex add DWORD PTR [rax],eax
   14004c96e:	add    BYTE PTR [rax],al
   14004c970:	add    BYTE PTR [rdx+rax*1],cl
   14004c973:	rex add DWORD PTR [rax],eax
   14004c976:	add    BYTE PTR [rax],al
   14004c978:	xor    BYTE PTR [rip+0x14002],cl        # 0x140060980
	...
   14004c986:	add    BYTE PTR [rax],al
   14004c988:	adc    BYTE PTR [rdx+rax*1],dl
   14004c98b:	rex add DWORD PTR [rax],eax
   14004c98e:	add    BYTE PTR [rax],al
   14004c990:	rol    bl,0x4
   14004c993:	rex add DWORD PTR [rax],eax
	...
   14004c99e:	add    BYTE PTR [rax],al
   14004c9a0:	mov    ah,ch
   14004c9a2:	add    eax,DWORD PTR [rax+0x1]
   14004c9a5:	add    BYTE PTR [rax],al
   14004c9a7:	add    BYTE PTR [rax+0x14001ff],dl
   14004c9ad:	add    BYTE PTR [rax],al
   14004c9af:	add    al,dl
   14004c9b1:	or     eax,DWORD PTR [rdx]
   14004c9b3:	rex add DWORD PTR [rax],eax
   14004c9b6:	add    BYTE PTR [rax],al
   14004c9b8:	add    BYTE PTR [rdx+rax*1],cl
   14004c9bb:	rex add DWORD PTR [rax],eax
   14004c9be:	add    BYTE PTR [rax],al
   14004c9c0:	xor    BYTE PTR [rip+0x14002],cl        # 0x1400609c8
	...
   14004c9ce:	add    BYTE PTR [rax],al
   14004c9d0:	adc    BYTE PTR [rdx+rax*1],dl
   14004c9d3:	rex add DWORD PTR [rax],eax
   14004c9d6:	add    BYTE PTR [rax],al
   14004c9d8:	clc    
   14004c9d9:	ret    
   14004c9da:	add    al,0x40
   14004c9dc:	add    DWORD PTR [rax],eax
	...
   14004c9e6:	add    BYTE PTR [rax],al
   14004c9e8:	cwde   
   14004c9e9:	in     al,dx
   14004c9ea:	add    eax,DWORD PTR [rax+0x1]
   14004c9ed:	add    BYTE PTR [rax],al
   14004c9ef:	add    BYTE PTR [rax+0x14001ff],dl
   14004c9f5:	add    BYTE PTR [rax],al
   14004c9f7:	add    al,dl
   14004c9f9:	or     eax,DWORD PTR [rdx]
   14004c9fb:	rex add DWORD PTR [rax],eax
   14004c9fe:	add    BYTE PTR [rax],al
   14004ca00:	add    BYTE PTR [rdx+rax*1],cl
   14004ca03:	rex add DWORD PTR [rax],eax
   14004ca06:	add    BYTE PTR [rax],al
   14004ca08:	xor    BYTE PTR [rip+0x14002],cl        # 0x140060a10
	...
   14004ca16:	add    BYTE PTR [rax],al
   14004ca18:	adc    BYTE PTR [rdx+rax*1],dl
   14004ca1b:	rex add DWORD PTR [rax],eax
   14004ca1e:	add    BYTE PTR [rax],al
   14004ca20:	xor    ah,al
   14004ca22:	add    al,0x40
   14004ca24:	add    DWORD PTR [rax],eax
	...
   14004ca2e:	add    BYTE PTR [rax],al
   14004ca30:	movabs al,ds:0x90000000014003ec
   14004ca39:	inc    DWORD PTR [rcx]
   14004ca3b:	rex add DWORD PTR [rax],eax
   14004ca3e:	add    BYTE PTR [rax],al
   14004ca40:	ror    BYTE PTR [rbx],1
   14004ca42:	add    al,BYTE PTR [rax+0x1]
   14004ca45:	add    BYTE PTR [rax],al
   14004ca47:	add    BYTE PTR [rax],al
   14004ca49:	or     al,0x2
   14004ca4b:	rex add DWORD PTR [rax],eax
   14004ca4e:	add    BYTE PTR [rax],al
   14004ca50:	xor    BYTE PTR [rip+0x14002],cl        # 0x140060a58
	...
   14004ca5e:	add    BYTE PTR [rax],al
   14004ca60:	adc    BYTE PTR [rdx+rax*1],dl
   14004ca63:	rex add DWORD PTR [rax],eax
   14004ca66:	add    BYTE PTR [rax],al
   14004ca68:	push   0x14004c4
	...
   14004ca75:	add    BYTE PTR [rax],al
   14004ca77:	add    BYTE PTR [rax+0x14003ec],ch
   14004ca7d:	add    BYTE PTR [rax],al
   14004ca7f:	add    BYTE PTR [rax+0x14001ff],dl
   14004ca85:	add    BYTE PTR [rax],al
   14004ca87:	add    al,dl
   14004ca89:	or     eax,DWORD PTR [rdx]
   14004ca8b:	rex add DWORD PTR [rax],eax
   14004ca8e:	add    BYTE PTR [rax],al
   14004ca90:	add    BYTE PTR [rdx+rax*1],cl
   14004ca93:	rex add DWORD PTR [rax],eax
   14004ca96:	add    BYTE PTR [rax],al
   14004ca98:	xor    BYTE PTR [rip+0x14002],cl        # 0x140060aa0
	...
   14004caa6:	add    BYTE PTR [rax],al
   14004caa8:	adc    BYTE PTR [rdx+rax*1],dl
   14004caab:	rex add DWORD PTR [rax],eax
   14004caae:	add    BYTE PTR [rax],al
   14004cab0:	movabs al,ds:0x14004c4
   14004cab9:	add    BYTE PTR [rax],al
   14004cabb:	add    BYTE PTR [rax],al
   14004cabd:	add    BYTE PTR [rax],al
   14004cabf:	add    BYTE PTR [rax+0x14003ec],dh
   14004cac5:	add    BYTE PTR [rax],al
   14004cac7:	add    BYTE PTR [rax+0x14001ff],dl
   14004cacd:	add    BYTE PTR [rax],al
   14004cacf:	add    al,dl
   14004cad1:	or     eax,DWORD PTR [rdx]
   14004cad3:	rex add DWORD PTR [rax],eax
   14004cad6:	add    BYTE PTR [rax],al
   14004cad8:	add    BYTE PTR [rdx+rax*1],cl
   14004cadb:	rex add DWORD PTR [rax],eax
   14004cade:	add    BYTE PTR [rax],al
   14004cae0:	xor    BYTE PTR [rip+0x14002],cl        # 0x140060ae8
	...
   14004caee:	add    BYTE PTR [rax],al
   14004caf0:	adc    BYTE PTR [rdx+rax*1],dl
   14004caf3:	rex add DWORD PTR [rax],eax
   14004caf6:	add    BYTE PTR [rax],al
   14004caf8:	fadd   st,st(4)
   14004cafa:	add    al,0x40
   14004cafc:	add    DWORD PTR [rax],eax
	...
   14004cb06:	add    BYTE PTR [rax],al
   14004cb08:	shr    ah,0x3
   14004cb0b:	rex add DWORD PTR [rax],eax
   14004cb0e:	add    BYTE PTR [rax],al
   14004cb10:	nop
   14004cb11:	inc    DWORD PTR [rcx]
   14004cb13:	rex add DWORD PTR [rax],eax
   14004cb16:	add    BYTE PTR [rax],al
   14004cb18:	ror    BYTE PTR [rbx],1
   14004cb1a:	add    al,BYTE PTR [rax+0x1]
   14004cb1d:	add    BYTE PTR [rax],al
   14004cb1f:	add    BYTE PTR [rax],al
   14004cb21:	or     al,0x2
   14004cb23:	rex add DWORD PTR [rax],eax
   14004cb26:	add    BYTE PTR [rax],al
   14004cb28:	xor    BYTE PTR [rip+0x14002],cl        # 0x140060b30
	...
   14004cb36:	add    BYTE PTR [rax],al
   14004cb38:	adc    BYTE PTR [rdx+rax*1],dl
   14004cb3b:	rex add DWORD PTR [rax],eax
   14004cb3e:	add    BYTE PTR [rax],al
   14004cb40:	mov    eax,0x14004c5
	...
   14004cb4d:	add    BYTE PTR [rax],al
   14004cb4f:	add    al,dl
   14004cb51:	in     al,dx
   14004cb52:	add    eax,DWORD PTR [rax+0x1]
   14004cb55:	add    BYTE PTR [rax],al
   14004cb57:	add    BYTE PTR [rax+0x14001ff],dl
   14004cb5d:	add    BYTE PTR [rax],al
   14004cb5f:	add    al,dl
   14004cb61:	or     eax,DWORD PTR [rdx]
   14004cb63:	rex add DWORD PTR [rax],eax
   14004cb66:	add    BYTE PTR [rax],al
   14004cb68:	add    BYTE PTR [rdx+rax*1],cl
   14004cb6b:	rex add DWORD PTR [rax],eax
   14004cb6e:	add    BYTE PTR [rax],al
   14004cb70:	xor    BYTE PTR [rip+0x14002],cl        # 0x140060b78
	...
   14004cb7e:	add    BYTE PTR [rax],al
   14004cb80:	adc    BYTE PTR [rdx+rax*1],dl
   14004cb83:	rex add DWORD PTR [rax],eax
   14004cb86:	add    BYTE PTR [rax],al
   14004cb88:	(bad)
   14004cb8c:	add    DWORD PTR [rax],eax
	...
   14004cb96:	add    BYTE PTR [rax],al
   14004cb98:	loopne 0x14004cb86
   14004cb9a:	add    eax,DWORD PTR [rax+0x1]
   14004cb9d:	add    BYTE PTR [rax],al
   14004cb9f:	add    BYTE PTR [rax+0x14001ff],dl
   14004cba5:	add    BYTE PTR [rax],al
   14004cba7:	add    al,dl
   14004cba9:	or     eax,DWORD PTR [rdx]
   14004cbab:	rex add DWORD PTR [rax],eax
   14004cbae:	add    BYTE PTR [rax],al
   14004cbb0:	add    BYTE PTR [rdx+rax*1],cl
   14004cbb3:	rex add DWORD PTR [rax],eax
   14004cbb6:	add    BYTE PTR [rax],al
   14004cbb8:	xor    BYTE PTR [rip+0x14002],cl        # 0x140060bc0
	...
   14004cbc6:	add    BYTE PTR [rax],al
   14004cbc8:	adc    BYTE PTR [rdx+rax*1],dl
   14004cbcb:	rex add DWORD PTR [rax],eax
   14004cbce:	add    BYTE PTR [rax],al
   14004cbd0:	adc    ch,al
   14004cbd2:	add    al,0x40
   14004cbd4:	add    DWORD PTR [rax],eax
	...
   14004cbde:	add    BYTE PTR [rax],al
   14004cbe0:	lock in al,dx
   14004cbe2:	add    eax,DWORD PTR [rax+0x1]
   14004cbe5:	add    BYTE PTR [rax],al
   14004cbe7:	add    BYTE PTR [rax+0x14001ff],dl
   14004cbed:	add    BYTE PTR [rax],al
   14004cbef:	add    al,dl
   14004cbf1:	or     eax,DWORD PTR [rdx]
   14004cbf3:	rex add DWORD PTR [rax],eax
   14004cbf6:	add    BYTE PTR [rax],al
   14004cbf8:	add    BYTE PTR [rdx+rax*1],cl
   14004cbfb:	rex add DWORD PTR [rax],eax
   14004cbfe:	add    BYTE PTR [rax],al
   14004cc00:	xor    BYTE PTR [rip+0x14002],cl        # 0x140060c08
	...
   14004cc0e:	add    BYTE PTR [rax],al
   14004cc10:	adc    BYTE PTR [rdx+rax*1],dl
   14004cc13:	rex add DWORD PTR [rax],eax
   14004cc16:	add    BYTE PTR [rax],al
   14004cc18:	(bad)
   14004cc1c:	add    DWORD PTR [rax],eax
	...
   14004cc26:	add    BYTE PTR [rax],al
   14004cc28:	add    ch,ch
   14004cc2a:	add    eax,DWORD PTR [rax+0x1]
   14004cc2d:	add    BYTE PTR [rax],al
   14004cc2f:	add    BYTE PTR [rax+0x14001ff],dl
   14004cc35:	add    BYTE PTR [rax],al
   14004cc37:	add    al,dl
   14004cc39:	or     eax,DWORD PTR [rdx]
   14004cc3b:	rex add DWORD PTR [rax],eax
   14004cc3e:	add    BYTE PTR [rax],al
   14004cc40:	add    BYTE PTR [rdx+rax*1],cl
   14004cc43:	rex add DWORD PTR [rax],eax
   14004cc46:	add    BYTE PTR [rax],al
   14004cc48:	xor    BYTE PTR [rip+0x14002],cl        # 0x140060c50
	...
   14004cc56:	add    BYTE PTR [rax],al
   14004cc58:	adc    BYTE PTR [rdx+rax*1],dl
   14004cc5b:	rex add DWORD PTR [rax],eax
   14004cc5e:	add    BYTE PTR [rax],al
   14004cc60:	add    ch,0x4
   14004cc63:	rex add DWORD PTR [rax],eax
	...
   14004cc6e:	add    BYTE PTR [rax],al
   14004cc70:	adc    ch,ch
   14004cc72:	add    eax,DWORD PTR [rax+0x1]
   14004cc75:	add    BYTE PTR [rax],al
   14004cc77:	add    BYTE PTR [rax+0x14001ff],dl
   14004cc7d:	add    BYTE PTR [rax],al
   14004cc7f:	add    al,dl
   14004cc81:	or     eax,DWORD PTR [rdx]
   14004cc83:	rex add DWORD PTR [rax],eax
   14004cc86:	add    BYTE PTR [rax],al
   14004cc88:	add    BYTE PTR [rdx+rax*1],cl
   14004cc8b:	rex add DWORD PTR [rax],eax
   14004cc8e:	add    BYTE PTR [rax],al
   14004cc90:	xor    BYTE PTR [rip+0x14002],cl        # 0x140060c98
	...
   14004cc9e:	add    BYTE PTR [rax],al
   14004cca0:	adc    BYTE PTR [rdx+rax*1],dl
   14004cca3:	rex add DWORD PTR [rax],eax
   14004cca6:	add    BYTE PTR [rax],al
   14004cca8:	sub    dh,al
   14004ccaa:	add    al,0x40
   14004ccac:	add    DWORD PTR [rax],eax
	...
   14004ccb6:	add    BYTE PTR [rax],al
   14004ccb8:	and    ch,ch
   14004ccba:	add    eax,DWORD PTR [rax+0x1]
   14004ccbd:	add    BYTE PTR [rax],al
   14004ccbf:	add    BYTE PTR [rax+0x14001ff],dl
   14004ccc5:	add    BYTE PTR [rax],al
   14004ccc7:	add    al,dl
   14004ccc9:	or     eax,DWORD PTR [rdx]
   14004cccb:	rex add DWORD PTR [rax],eax
   14004ccce:	add    BYTE PTR [rax],al
   14004ccd0:	add    BYTE PTR [rdx+rax*1],cl
   14004ccd3:	rex add DWORD PTR [rax],eax
   14004ccd6:	add    BYTE PTR [rax],al
   14004ccd8:	xor    BYTE PTR [rip+0x14002],cl        # 0x140060ce0
	...
   14004cce6:	add    BYTE PTR [rax],al
   14004cce8:	adc    BYTE PTR [rdx+rax*1],dl
   14004cceb:	rex add DWORD PTR [rax],eax
   14004ccee:	add    BYTE PTR [rax],al
   14004ccf0:	(bad)  
   14004ccf1:	mov    BYTE PTR [rax+rax*2],0x1
	...
   14004ccfd:	add    BYTE PTR [rax],al
   14004ccff:	add    BYTE PTR [rax],ch
   14004cd01:	in     eax,dx
   14004cd02:	add    eax,DWORD PTR [rax+0x1]
   14004cd05:	add    BYTE PTR [rax],al
   14004cd07:	add    BYTE PTR [rax+0x14001ff],dl
   14004cd0d:	add    BYTE PTR [rax],al
   14004cd0f:	add    al,dl
   14004cd11:	or     eax,DWORD PTR [rdx]
   14004cd13:	rex add DWORD PTR [rax],eax
   14004cd16:	add    BYTE PTR [rax],al
   14004cd18:	add    BYTE PTR [rdx+rax*1],cl
   14004cd1b:	rex add DWORD PTR [rax],eax
   14004cd1e:	add    BYTE PTR [rax],al
   14004cd20:	xor    BYTE PTR [rip+0x14002],cl        # 0x140060d28
	...
   14004cd2e:	add    BYTE PTR [rax],al
   14004cd30:	adc    BYTE PTR [rdx+rax*1],dl
   14004cd33:	rex add DWORD PTR [rax],eax
   14004cd36:	add    BYTE PTR [rax],al
   14004cd38:	cwde   
   14004cd39:	mov    BYTE PTR [rax+rax*2],0x1
	...
   14004cd45:	add    BYTE PTR [rax],al
   14004cd47:	add    BYTE PTR [rax-0x1c],ah
   14004cd4a:	add    eax,DWORD PTR [rax+0x1]
   14004cd4d:	add    BYTE PTR [rax],al
   14004cd4f:	add    BYTE PTR [rax+0x1b],dh
   14004cd52:	add    al,BYTE PTR [rax+0x1]
   14004cd55:	add    BYTE PTR [rax],al
   14004cd57:	add    BYTE PTR [rax],ah
   14004cd59:	sbb    eax,0x14002
   14004cd5e:	add    BYTE PTR [rax],al
   14004cd60:	xor    BYTE PTR [rip+0x14002],bl        # 0x140060d68
   14004cd66:	add    BYTE PTR [rax],al
   14004cd68:	sbb    BYTE PTR [rsi],0x2
   14004cd6b:	rex add DWORD PTR [rax],eax
   14004cd6e:	add    BYTE PTR [rax],al
   14004cd70:	rcr    BYTE PTR [rdi],1
   14004cd72:	add    al,BYTE PTR [rax+0x1]
   14004cd75:	add    BYTE PTR [rax],al
   14004cd77:	add    BYTE PTR [rax],dh
   14004cd79:	and    DWORD PTR [rdx],eax
   14004cd7b:	rex add DWORD PTR [rax],eax
	...
   14004cd8e:	add    BYTE PTR [rax],al
   14004cd90:	xor    ch,ch
   14004cd92:	add    eax,DWORD PTR [rax+0x1]
   14004cd95:	add    BYTE PTR [rax],al
   14004cd97:	add    BYTE PTR [rax+0x1b],dh
   14004cd9a:	add    al,BYTE PTR [rax+0x1]
   14004cd9d:	add    BYTE PTR [rax],al
   14004cd9f:	add    BYTE PTR [rax],ah
   14004cda1:	sbb    eax,0x14002
   14004cda6:	add    BYTE PTR [rax],al
   14004cda8:	xor    BYTE PTR [rip+0x14002],bl        # 0x140060db0
   14004cdae:	add    BYTE PTR [rax],al
   14004cdb0:	sbb    BYTE PTR [rsi],0x2
   14004cdb3:	rex add DWORD PTR [rax],eax
   14004cdb6:	add    BYTE PTR [rax],al
   14004cdb8:	rcr    BYTE PTR [rdi],1
   14004cdba:	add    al,BYTE PTR [rax+0x1]
   14004cdbd:	add    BYTE PTR [rax],al
   14004cdbf:	add    BYTE PTR [rax],dh
   14004cdc1:	and    DWORD PTR [rdx],eax
   14004cdc3:	rex add DWORD PTR [rax],eax
	...
   14004cdd6:	add    BYTE PTR [rax],al
   14004cdd8:	cmp    ch,ch
   14004cdda:	add    eax,DWORD PTR [rax+0x1]
   14004cddd:	add    BYTE PTR [rax],al
   14004cddf:	add    BYTE PTR [rax],dl
   14004cde1:	out    dx,al
   14004cde2:	add    al,BYTE PTR [rax+0x1]
   14004cde5:	add    BYTE PTR [rax],al
   14004cde7:	add    BYTE PTR [rax-0x13],dh
   14004cdea:	add    al,BYTE PTR [rax+0x1]
   14004cded:	add    BYTE PTR [rax],al
   14004cdef:	add    BYTE PTR [rax],al
   14004cdf1:	or     al,0x2
   14004cdf3:	rex add DWORD PTR [rax],eax
   14004cdf6:	add    BYTE PTR [rax],al
   14004cdf8:	mov    al,0x22
   14004cdfa:	add    al,BYTE PTR [rax+0x1]
	...
   14004ce05:	add    BYTE PTR [rax],al
   14004ce07:	add    BYTE PTR [rax+0x14002ed],dl
	...
   14004ce6d:	add    BYTE PTR [rax],al
   14004ce6f:	add    BYTE PTR [rax+rsi*8+0x14003],dh
	...
   14004ce7e:	add    BYTE PTR [rax],al
   14004ce80:	shl    al,0x3
   14004ce83:	rex add DWORD PTR [rax],eax
   14004ce86:	add    BYTE PTR [rax],al
   14004ce88:	enter  0x3f0,0x40
   14004ce8c:	add    DWORD PTR [rax],eax
   14004ce8e:	add    BYTE PTR [rax],al
   14004ce90:	shl    al,1
   14004ce92:	add    eax,DWORD PTR [rax+0x1]
   14004ce95:	add    BYTE PTR [rax],al
   14004ce97:	add    BYTE PTR [rbp+riz*8+0x3],ah
   14004ce9b:	rex add DWORD PTR [rax],eax
	...
   14004ceaa:	add    BYTE PTR [rax],al
   14004ceac:	add    DWORD PTR [rax],eax
   14004ceae:	add    BYTE PTR [rax],al
   14004ceb0:	add    DWORD PTR [rax],eax
   14004ceb2:	add    BYTE PTR [rax],al
   14004ceb4:	add    BYTE PTR [rax],al
   14004ceb6:	add    BYTE PTR [rax],al
   14004ceb8:	add    DWORD PTR [rax],eax
   14004ceba:	add    BYTE PTR [rax],al
   14004cebc:	add    BYTE PTR [rax],al
   14004cebe:	add    BYTE PTR [rax],al
   14004cec0:	add    DWORD PTR [rax],eax
	...
   14004cece:	add    BYTE PTR [rax],al
   14004ced0:	fs in  eax,0x3
   14004ced3:	rex add DWORD PTR [rax],eax
   14004ced6:	add    BYTE PTR [rax],al
   14004ced8:	fdiv   st,st(0)
   14004ceda:	add    eax,DWORD PTR [rax+0x1]
   14004cedd:	add    BYTE PTR [rax],al
   14004cedf:	add    al,ah
   14004cee1:	lock add eax,DWORD PTR [rax+0x1]
   14004cee5:	add    BYTE PTR [rax],al
   14004cee7:	add    al,dh
   14004cee9:	jmp    0x140060ef1
   14004ceee:	add    BYTE PTR [rax],al
   14004cef0:	in     al,0xf0
   14004cef2:	add    eax,DWORD PTR [rax+0x1]
   14004cef5:	add    BYTE PTR [rax],al
   14004cef7:	add    ah,ch
   14004cef9:	lock add eax,DWORD PTR [rax+0x1]
   14004cefd:	add    BYTE PTR [rax],al
   14004ceff:	add    al,bh
   14004cf01:	lock add eax,DWORD PTR [rax+0x1]
   14004cf05:	add    BYTE PTR [rax],al
   14004cf07:	add    BYTE PTR [rax],al
   14004cf09:	icebp  
   14004cf0a:	add    eax,DWORD PTR [rax+0x1]
   14004cf0d:	add    BYTE PTR [rax],al
   14004cf0f:	add    BYTE PTR [rcx+rsi*8],al
   14004cf12:	add    eax,DWORD PTR [rax+0x1]
   14004cf15:	add    BYTE PTR [rax],al
   14004cf17:	add    BYTE PTR [rax],dl
   14004cf19:	icebp  
   14004cf1a:	add    eax,DWORD PTR [rax+0x1]
   14004cf1d:	add    BYTE PTR [rax],al
   14004cf1f:	add    BYTE PTR [rcx+rsi*8],bl
   14004cf22:	add    eax,DWORD PTR [rax+0x1]
   14004cf25:	add    BYTE PTR [rax],al
   14004cf27:	add    BYTE PTR [rax],ch
   14004cf29:	icebp  
   14004cf2a:	add    eax,DWORD PTR [rax+0x1]
   14004cf2d:	add    BYTE PTR [rax],al
   14004cf2f:	add    BYTE PTR [rax-0x14],dh
   14004cf32:	add    eax,DWORD PTR [rax+0x1]
   14004cf35:	add    BYTE PTR [rax],al
   14004cf37:	add    BYTE PTR [rax],bh
   14004cf39:	icebp  
   14004cf3a:	add    eax,DWORD PTR [rax+0x1]
   14004cf3d:	add    BYTE PTR [rax],al
   14004cf3f:	add    BYTE PTR [rax-0xf],cl
   14004cf42:	add    eax,DWORD PTR [rax+0x1]
   14004cf45:	add    BYTE PTR [rax],al
   14004cf47:	add    BYTE PTR [rax],cl
   14004cf49:	fadd   DWORD PTR [rbx]
   14004cf4b:	rex add DWORD PTR [rax],eax
   14004cf4e:	add    BYTE PTR [rax],al
   14004cf50:	push   rsp
   14004cf51:	icebp  
   14004cf52:	add    eax,DWORD PTR [rax+0x1]
   14004cf55:	add    BYTE PTR [rax],al
   14004cf57:	add    BYTE PTR [rcx+rsi*8+0x3],bl
   14004cf5b:	rex add DWORD PTR [rax],eax
	...
   14004cf72:	add    BYTE PTR [rax],al
   14004cf74:	add    DWORD PTR [rax],eax
   14004cf76:	add    BYTE PTR [rax],al
   14004cf78:	add    al,BYTE PTR [rax]
   14004cf7a:	add    BYTE PTR [rax],al
   14004cf7c:	add    al,0x0
   14004cf7e:	add    BYTE PTR [rax],al
   14004cf80:	or     al,0x0
   14004cf82:	add    BYTE PTR [rax],al
   14004cf84:	(bad)  
   14004cf85:	add    BYTE PTR [rax],al
   14004cf87:	add    BYTE PTR [rsi],cl
   14004cf89:	add    BYTE PTR [rax],al
   14004cf8b:	add    BYTE PTR [rax],dl
   14004cf8d:	add    BYTE PTR [rax],al
   14004cf8f:	add    BYTE PTR [rcx],cl
   14004cf91:	add    BYTE PTR [rax],al
   14004cf93:	add    BYTE PTR [rdx],cl
   14004cf95:	add    BYTE PTR [rax],al
   14004cf97:	add    BYTE PTR [rax],ah
   14004cf99:	add    BYTE PTR [rax],al
   14004cf9b:	add    BYTE PTR [rax+0x0],al
   14004cf9e:	add    BYTE PTR [rax],al
   14004cfa0:	add    BYTE PTR [rax],0x0
   14004cfa3:	add    BYTE PTR [rax-0x78000000],cl
   14004cfa9:	add    BYTE PTR [rax],al
   14004cfab:	add    BYTE PTR [rax],al
   14004cfad:	add    DWORD PTR [rax],eax
   14004cfaf:	add    BYTE PTR [rax],cl
   14004cfb1:	add    DWORD PTR [rax],eax
   14004cfb3:	add    BYTE PTR [rax],al
   14004cfb5:	add    al,BYTE PTR [rax]
	...
   14004cfc3:	add    BYTE PTR [rdx],cl
   14004cfc5:	add    BYTE PTR [rax],al
   14004cfc7:	add    BYTE PTR [rax],cl
   14004cfc9:	add    BYTE PTR [rax],al
   14004cfcb:	add    BYTE PTR [rsi],al
   14004cfcd:	add    BYTE PTR [rax],al
   14004cfcf:	add    BYTE PTR [rsi],al
   14004cfd1:	add    BYTE PTR [rax],al
   14004cfd3:	add    BYTE PTR [rsi],cl
   14004cfd5:	add    BYTE PTR [rax],al
   14004cfd7:	add    BYTE PTR [rsi],cl
   14004cfd9:	add    BYTE PTR [rax],al
   14004cfdb:	add    BYTE PTR [rip+0xb000000],al        # 0x14b04cfe1
   14004cfe1:	add    BYTE PTR [rax],al
   14004cfe3:	add    BYTE PTR [rax],cl
	...
   14004cfed:	add    BYTE PTR [rax],al
   14004cfef:	add    BYTE PTR [rdx],cl
   14004cff1:	add    BYTE PTR [rax],al
   14004cff3:	add    BYTE PTR [rbx],cl
   14004cff5:	add    BYTE PTR [rax],al
   14004cff7:	add    BYTE PTR [rbx],cl
   14004cff9:	add    BYTE PTR [rax],al
   14004cffb:	add    BYTE PTR [rip+0x5000000],al        # 0x14504d001
   14004d001:	add    BYTE PTR [rax],al
   14004d003:	add    BYTE PTR [rdx],cl
	...
   14004d10d:	add    BYTE PTR [rax],al
   14004d10f:	add    BYTE PTR [rcx+0x6f],ch
   14004d112:	lock test ecx,ecx
   14004d115:	push   rsp
   14004d116:	(bad)  
   14004d117:	(bad)  
   14004d118:	cmp    al,0x4e
   14004d11a:	rcl    DWORD PTR [rcx+0x3fc3fe5c],1
   14004d120:	add    BYTE PTR [rax],al
   14004d122:	add    BYTE PTR [rax],al
   14004d124:	add    BYTE PTR [rax],al
   14004d126:	fdivr  DWORD PTR [rdi]
   14004d128:	add    BYTE PTR [rax],al
   14004d12a:	add    BYTE PTR [rax],al
   14004d12c:	add    BYTE PTR [rax],al
   14004d12e:	in     al,0x3f
   14004d130:	(bad)  
   14004d131:	push   rbx
   14004d132:	je     0x14004d158
   14004d134:	xchg   edi,eax
   14004d135:	jmp    rax
   14004d137:	(bad)  
   14004d138:	ficomp DWORD PTR [rbx]
   14004d13a:	jl     0x14004d19d
   14004d13c:	xor    dl,BYTE PTR [rbp-0x10]
   14004d13f:	(bad)  
   14004d140:	ficomp DWORD PTR [rbx]
   14004d142:	jl     0x14004d1a5
   14004d144:	xor    dl,BYTE PTR [rbp-0x12]
   14004d147:	(bad)  
   14004d148:	imul   ebp,DWORD PTR [rdi-0x10],0xc154c985
   14004d14f:	(bad)  
   14004d150:	xchg   edi,eax
   14004d151:	nop
   14004d152:	(bad)  
   14004d154:	ss stos DWORD PTR es:[rdi],eax
   14004d156:	(bad)  
   14004d157:	(bad)  
   14004d158:	xchg   edi,eax
   14004d159:	nop
   14004d15a:	(bad)  
   14004d15c:	ss stos DWORD PTR es:[rdi],eax
   14004d15e:	(bad)  
   14004d15f:	(bad)  
   14004d160:	loop   0x14004d1ba
   14004d162:	(bad)  
   14004d163:	mov    bh,0xd1
   14004d165:	add    dh,bl
   14004d167:	(bad)  
   14004d168:	ficomp DWORD PTR [rbx]
   14004d16a:	jl     0x14004d1cd
   14004d16c:	xor    dl,BYTE PTR [rbp-0x1a]
   14004d16f:	(bad)  
   14004d170:	imul   ebp,DWORD PTR [rdi-0x10],0xc954c985
   14004d177:	(bad)  
   14004d178:	loop   0x14004d1d2
   14004d17a:	(bad)  
   14004d17b:	mov    bh,0xd1
   14004d17d:	add    dh,dl
   14004d17f:	(bad)  
   14004d180:	rcr    esi,cl
   14004d182:	loopne 0x14004d18f
   14004d184:	xchg   ebx,eax
   14004d185:	test   eax,0x3fc2
   14004d18a:	add    BYTE PTR [rax],al
   14004d18c:	add    BYTE PTR [rax],al
   14004d18e:	fdivr  DWORD PTR [rdi]
   14004d190:	ficomp DWORD PTR [rbx]
   14004d192:	jl     0x14004d1f5
   14004d194:	xor    dl,BYTE PTR [rbp-0x1e]
   14004d197:	(bad)  
   14004d198:	loop   0x14004d1f2
   14004d19a:	(bad)  
   14004d19b:	mov    bh,0xd1
   14004d19d:	add    dh,dl
   14004d19f:	(bad)  
   14004d1a0:	mov    ch,0x37
   14004d1a2:	clc    
   14004d1a3:	ret    0xaa64
   14004d1a6:	loop   0x14004d1e7
   14004d1a8:	ficomp DWORD PTR [rbx]
   14004d1aa:	jl     0x14004d20d
   14004d1ac:	xor    dl,BYTE PTR [rbp-0x20]
   14004d1af:	(bad)  
   14004d1b0:	rex.WXB enter 0x3d07,0x9b
   14004d1b5:	push   rbp
   14004d1b6:	jrcxz  0x14004d1f7
   14004d1b8:	mov    ch,0x37
   14004d1ba:	clc    
   14004d1bb:	ret    0xaa64
   14004d1be:	loopne 0x14004d1ff
   14004d1c0:	add    BYTE PTR [rax],al
   14004d1c2:	add    BYTE PTR [rax],al
   14004d1c4:	add    BYTE PTR [rax],al
   14004d1c6:	loop   0x14004d207
   14004d1c8:	add    BYTE PTR [rax],al
   14004d1ca:	add    BYTE PTR [rax],al
   14004d1cc:	add    BYTE PTR [rax],al
   14004d1ce:	loop   0x14004d20f
   14004d1d0:	ficomp DWORD PTR [rbx]
   14004d1d2:	jl     0x14004d235
   14004d1d4:	xor    dl,BYTE PTR [rbp-0x20]
   14004d1d7:	(bad)  
   14004d1d8:	es in  al,0x83
   14004d1db:	sahf   
   14004d1dc:	int    0xaa
   14004d1de:	loope  0x14004d21f
   14004d1e0:	rcr    esi,cl
   14004d1e2:	loopne 0x14004d1ef
   14004d1e4:	xchg   ebx,eax
   14004d1e5:	test   eax,0x6f693fc2
   14004d1ea:	lock test ecx,ecx
   14004d1ed:	push   rsp
   14004d1ee:	leave  
   14004d1ef:	(bad)  
   14004d1f0:	mov    ch,0x37
   14004d1f2:	clc    
   14004d1f3:	ret    0xaa64
   14004d1f6:	out    0x3f,al
   14004d1f8:	mov    ch,0x37
   14004d1fa:	clc    
   14004d1fb:	ret    0xaa64
   14004d1fe:	out    0x3f,al
   14004d200:	mov    ch,0x37
   14004d202:	clc    
   14004d203:	ret    0xaa64
   14004d206:	out    0x3f,al
   14004d208:	xchg   edi,eax
   14004d209:	nop
   14004d20a:	(bad)  
   14004d20c:	ss stos DWORD PTR es:[rdi],eax
   14004d20e:	fidivr WORD PTR [rdi]
   14004d210:	in     eax,dx
   14004d211:	or     eax,0x2a9930be
   14004d216:	repnz (bad) 
   14004d218:	add    BYTE PTR [rax],al
   14004d21a:	add    BYTE PTR [rax],al
   14004d21c:	add    BYTE PTR [rax],al
   14004d21e:	out    dx,al
   14004d21f:	(bad)  
   14004d220:	add    BYTE PTR [rax],al
   14004d222:	add    BYTE PTR [rax],al
   14004d224:	add    BYTE PTR [rax],al
   14004d226:	(bad)  
   14004d227:	(bad)  
   14004d228:	rex.WXB enter 0x3d07,0x9b
   14004d22d:	push   rbp
   14004d22e:	jmp    0x1383c8772
   14004d233:	ret    0xaa64
   14004d236:	in     al,dx
   14004d237:	(bad)  
   14004d238:	ficomp DWORD PTR [rbx]
   14004d23a:	jl     0x14004d29d
   14004d23c:	xor    dl,BYTE PTR [rbp-0x18]
   14004d23f:	(bad)  
   14004d240:	rex.WXB enter 0x3d07,0x9b
   14004d245:	push   rbp
   14004d246:	in     eax,0x3f
   14004d248:	(bad)  
   14004d249:	push   rbx
   14004d24a:	je     0x14004d270
   14004d24c:	xchg   edi,eax
   14004d24d:	(bad)  
   14004d24e:	in     al,dx
   14004d24f:	(bad)  
   14004d250:	rex.WXB enter 0x3d07,0x9b
   14004d255:	push   rbp
   14004d256:	in     eax,dx
   14004d257:	(bad)  
   14004d258:	add    BYTE PTR [rax],al
   14004d25a:	add    BYTE PTR [rax],al
   14004d25c:	add    BYTE PTR [rax],al
   14004d25e:	fdivr  DWORD PTR [rdi]
   14004d260:	rex.WXB enter 0x3d07,0x9b
   14004d265:	push   rbp
   14004d266:	fistp  QWORD PTR [rdi]
   14004d268:	mov    ch,0x37
   14004d26a:	clc    
   14004d26b:	ret    0xaa64
   14004d26e:	out    dx,al
   14004d26f:	(bad)  
   14004d270:	ficomp DWORD PTR [rbx]
   14004d272:	jl     0x14004d2d5
   14004d274:	xor    dl,BYTE PTR [rbp-0x18]
   14004d277:	(bad)  
   14004d278:	in     eax,dx
   14004d279:	or     eax,0x2a9930be
   14004d27e:	repnz (bad) 
   14004d280:	rex.WXB enter 0x3d07,0x9b
   14004d285:	push   rbp
   14004d286:	out    dx,eax
   14004d287:	(bad)  
   14004d288:	add    BYTE PTR [rax],al
   14004d28a:	add    BYTE PTR [rax],al
   14004d28c:	add    BYTE PTR [rax],al
   14004d28e:	in     al,dx
   14004d28f:	(bad)  
   14004d290:	es in  al,0x83
   14004d293:	sahf   
   14004d294:	int    0xaa
   14004d296:	in     eax,0x3f
   14004d298:	add    BYTE PTR [rax],al
   14004d29a:	add    BYTE PTR [rax],al
   14004d29c:	add    BYTE PTR [rax],al
   14004d29e:	in     al,dx
   14004d29f:	(bad)  
   14004d2a0:	ficomp DWORD PTR [rbx]
   14004d2a2:	jl     0x14004d305
   14004d2a4:	xor    dl,BYTE PTR [rbp-0x14]
   14004d2a7:	(bad)  
   14004d2a8:	mov    ch,0x37
   14004d2aa:	clc    
   14004d2ab:	ret    0xaa64
   14004d2ae:	loop   0x14004d2ef
   14004d2b0:	es in  al,0x83
   14004d2b3:	sahf   
   14004d2b4:	int    0xaa
   14004d2b6:	out    0x3f,eax
   14004d2b8:	add    BYTE PTR [rax],al
   14004d2ba:	add    BYTE PTR [rax],al
   14004d2bc:	add    BYTE PTR [rax],al
   14004d2be:	out    dx,al
   14004d2bf:	(bad)  
   14004d2c0:	ficomp DWORD PTR [rbx]
   14004d2c2:	jl     0x14004d325
   14004d2c4:	xor    dl,BYTE PTR [rbp-0x12]
   14004d2c7:	(bad)  
   14004d2c8:	es in  al,0x83
   14004d2cb:	sahf   
   14004d2cc:	int    0xaa
   14004d2ce:	repz (bad) 
   14004d2d0:	es in  al,0x83
   14004d2d3:	sahf   
   14004d2d4:	int    0xaa
   14004d2d6:	in     eax,dx
   14004d2d7:	(bad)  
   14004d2d8:	es in  al,0x83
   14004d2db:	sahf   
   14004d2dc:	int    0xaa
   14004d2de:	in     eax,dx
   14004d2df:	(bad)  
   14004d2e0:	ficomp DWORD PTR [rbx]
   14004d2e2:	jl     0x14004d345
   14004d2e4:	xor    dl,BYTE PTR [rbp-0x18]
   14004d2e7:	(bad)  
   14004d2e8:	xchg   edi,eax
   14004d2e9:	nop
   14004d2ea:	(bad)  
   14004d2ec:	ss stos DWORD PTR es:[rdi],eax
   14004d2ee:	sar    BYTE PTR [rdi],cl
   14004d2f0:	add    BYTE PTR [rax],al
   14004d2f2:	add    BYTE PTR [rax],al
   14004d2f4:	add    BYTE PTR [rax],al
   14004d2f6:	fdivr  DWORD PTR [rdi]
   14004d2f8:	xchg   edi,eax
   14004d2f9:	nop
   14004d2fa:	(bad)  
   14004d2fc:	ss stos DWORD PTR es:[rdi],eax
   14004d2fe:	sar    BYTE PTR [rdi],cl
   14004d300:	ficomp DWORD PTR [rbx]
   14004d302:	jl     0x14004d365
   14004d304:	xor    dl,BYTE PTR [rbp-0x1e]
   14004d307:	(bad)  
   14004d308:	mov    ch,0x37
   14004d30a:	clc    
   14004d30b:	ret    0xaa64
   14004d30e:	out    0x3f,al
   14004d310:	(bad)  
   14004d311:	mov    cl,0x2e
   14004d313:	outs   dx,BYTE PTR ds:[rsi]
   14004d314:	movabs ds:0xcd9e83e4263fcc01,eax
   14004d31d:	stos   BYTE PTR es:[rdi],al
   14004d31e:	loope  0x14004d35f
   14004d320:	ficomp DWORD PTR [rbx]
   14004d322:	jl     0x14004d385
   14004d324:	xor    dl,BYTE PTR [rbp-0x1c]
   14004d327:	(bad)  
   14004d328:	add    BYTE PTR [rax],al
   14004d32a:	add    BYTE PTR [rax],al
   14004d32c:	add    BYTE PTR [rax],al
   14004d32e:	loopne 0x14004d36f
   14004d330:	add    BYTE PTR [rax],al
   14004d332:	add    BYTE PTR [rax],al
   14004d334:	add    BYTE PTR [rax],al
   14004d336:	in     al,0x3f
   14004d338:	ficomp DWORD PTR [rbx]
   14004d33a:	jl     0x14004d39d
   14004d33c:	xor    dl,BYTE PTR [rbp-0x20]
   14004d33f:	(bad)  
   14004d340:	(bad)  
   14004d341:	push   rbx
   14004d342:	je     0x14004d368
   14004d344:	xchg   edi,eax
   14004d345:	jmp    rax
   14004d347:	(bad)  
   14004d348:	rex.WXB enter 0x3d07,0x9b
   14004d34d:	push   rbp
   14004d34e:	jrcxz  0x14004d38f
   14004d350:	(bad)  
   14004d351:	push   rbx
   14004d352:	je     0x14004d378
   14004d354:	xchg   edi,eax
   14004d355:	jmp    rsp
   14004d357:	(bad)  
   14004d358:	xchg   edi,eax
   14004d359:	nop
   14004d35a:	(bad)  
   14004d35c:	ss stos DWORD PTR es:[rdi],eax
   14004d35e:	sar    BYTE PTR [rdi],cl
   14004d360:	add    BYTE PTR [rax],al
   14004d362:	add    BYTE PTR [rax],al
   14004d364:	add    BYTE PTR [rax],al
   14004d366:	fdivr  DWORD PTR [rdi]
   14004d368:	rex.WXB enter 0x3d07,0x9b
   14004d36d:	push   rbp
   14004d36e:	in     eax,0x3f
   14004d370:	rex.WXB enter 0x3d07,0x9b
   14004d375:	push   rbp
   14004d376:	sar    DWORD PTR [rdi],cl
   14004d378:	ficomp DWORD PTR [rbx]
   14004d37a:	jl     0x14004d3dd
   14004d37c:	xor    dl,BYTE PTR [rbp-0x10]
   14004d37f:	(bad)  
   14004d380:	rex.WXB enter 0x3d07,0x9b
   14004d385:	push   rbp
   14004d386:	in     eax,0x3f
   14004d388:	mov    ch,0x37
   14004d38a:	clc    
   14004d38b:	ret    0xaa64
   14004d38e:	loop   0x14004d3cf
   14004d390:	ficomp DWORD PTR [rbx]
   14004d392:	jl     0x14004d3f5
   14004d394:	xor    dl,BYTE PTR [rbp-0x1c]
   14004d397:	(bad)  
   14004d398:	add    BYTE PTR [rax],al
   14004d39a:	add    BYTE PTR [rax],al
   14004d39c:	add    BYTE PTR [rax],al
   14004d39e:	in     al,0x3f
   14004d3a0:	mov    ch,0x37
   14004d3a2:	clc    
   14004d3a3:	ret    0xaa64
   14004d3a6:	fdivr  QWORD PTR [rdi]
   14004d3a8:	xchg   edi,eax
   14004d3a9:	nop
   14004d3aa:	(bad)  
   14004d3ac:	ss stos DWORD PTR es:[rdi],eax
   14004d3ae:	fidivr DWORD PTR [rdi]
   14004d3b0:	xchg   edi,eax
   14004d3b1:	nop
   14004d3b2:	(bad)  
   14004d3b4:	ss stos DWORD PTR es:[rdi],eax
   14004d3b6:	(bad)  
   14004d3b7:	(bad)  
   14004d3b8:	rex.WXB enter 0x3d07,0x9b
   14004d3bd:	push   rbp
   14004d3be:	in     eax,0x3f
   14004d3c0:	mov    ch,0x37
   14004d3c2:	clc    
   14004d3c3:	ret    0xaa64
   14004d3c6:	in     al,0x3f
   14004d3c8:	add    BYTE PTR [rax],al
   14004d3ca:	add    BYTE PTR [rax],al
   14004d3cc:	add    BYTE PTR [rax],al
   14004d3ce:	out    dx,al
   14004d3cf:	(bad)  
   14004d3d0:	ficomp DWORD PTR [rbx]
   14004d3d2:	jl     0x14004d435
   14004d3d4:	xor    dl,BYTE PTR [rbp-0x1c]
   14004d3d7:	(bad)  
   14004d3d8:	(bad)  
   14004d3d9:	push   rbx
   14004d3da:	je     0x14004d400
   14004d3dc:	xchg   edi,eax
   14004d3dd:	jmp    rsp
   14004d3df:	(bad)  
   14004d3e0:	rex.WXB enter 0x3d07,0x9b
   14004d3e5:	push   rbp
   14004d3e6:	loope  0x14004d427
   14004d3e8:	rex.WXB enter 0x3d07,0x9b
   14004d3ed:	push   rbp
   14004d3ee:	xlat   BYTE PTR ds:[rbx]
   14004d3ef:	(bad)  
   14004d3f0:	add    BYTE PTR [rax],al
   14004d3f2:	add    BYTE PTR [rax],al
   14004d3f4:	add    BYTE PTR [rax],al
   14004d3f6:	mov    al,0x3f
   14004d3f8:	rex.WXB enter 0x3d07,0x9b
   14004d3fd:	push   rbp
   14004d3fe:	xlat   BYTE PTR ds:[rbx]
   14004d3ff:	(bad)  
   14004d400:	ficomp DWORD PTR [rbx]
   14004d402:	jl     0x14004d465
   14004d404:	xor    dl,BYTE PTR [rbp-0x1a]
   14004d407:	(bad)  
	...
   14004d518:	cmp    al,0x4e
   14004d51a:	rcl    DWORD PTR [rcx+0x3fc3fe5c],1
   14004d520:	add    BYTE PTR [rax],al
   14004d522:	add    BYTE PTR [rax],al
   14004d524:	add    BYTE PTR [rax],al
   14004d526:	loopne 0x14004d567
   14004d528:	jno    0x14004d4d6
   14004d52a:	mov    ebx,ebx
   14004d52c:	push   0xffffffffda3fe300
   14004d531:	sbb    edi,DWORD PTR [rcx+riz*2+0x32]
   14004d535:	push   rbp
   14004d536:	in     al,0x3f
   14004d538:	rex.WXB enter 0x3d07,0x9b
   14004d53d:	push   rbp
   14004d53e:	in     eax,0x3f
   14004d540:	add    BYTE PTR [rax],al
   14004d542:	add    BYTE PTR [rax],al
   14004d544:	add    BYTE PTR [rax],al
   14004d546:	mov    al,0x3f
   14004d548:	loop   0x14004d5a2
   14004d54a:	(bad)  
   14004d54b:	mov    bh,0xd1
   14004d54d:	add    dh,bl
   14004d54f:	(bad)  
   14004d550:	add    BYTE PTR [rax],al
   14004d552:	add    BYTE PTR [rax],al
   14004d554:	add    BYTE PTR [rax],al
   14004d556:	fdivr  DWORD PTR [rdi]
   14004d558:	es in  al,0x83
   14004d55b:	sahf   
   14004d55c:	int    0xaa
   14004d55e:	in     eax,dx
   14004d55f:	(bad)  
   14004d560:	add    BYTE PTR [rax],al
   14004d562:	add    BYTE PTR [rax],al
   14004d564:	add    BYTE PTR [rax],al
   14004d566:	fdivr  DWORD PTR [rdi]
   14004d568:	mov    ch,0x37
   14004d56a:	clc    
   14004d56b:	ret    0xaa64
   14004d56e:	loop   0x14004d5af
   14004d570:	mov    ch,0x37
   14004d572:	clc    
   14004d573:	ret    0xaa64
   14004d576:	out    0x3f,al
   14004d578:	loop   0x14004d5d2
   14004d57a:	(bad)  
   14004d57b:	mov    bh,0xd1
   14004d57d:	add    dh,dl
   14004d57f:	(bad)  
   14004d580:	es in  al,0x83
   14004d583:	sahf   
   14004d584:	int    0xaa
   14004d586:	in     eax,dx
   14004d587:	(bad)  
   14004d588:	mov    ch,0x37
   14004d58a:	clc    
   14004d58b:	ret    0xaa64
   14004d58e:	out    0x3f,al
   14004d590:	(bad)  
   14004d591:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d592:	call   0x11a0403df
   14004d597:	(bad)  
   14004d598:	ficomp DWORD PTR [rbx]
   14004d59a:	jl     0x14004d5fd
   14004d59c:	xor    dl,BYTE PTR [rbp-0x1a]
   14004d59f:	(bad)  
   14004d5a0:	xchg   edi,eax
   14004d5a1:	nop
   14004d5a2:	(bad)  
   14004d5a4:	ss stos DWORD PTR es:[rdi],eax
   14004d5a6:	(bad)  
   14004d5a7:	(bad)  
   14004d5a8:	add    BYTE PTR [rax],al
   14004d5aa:	add    BYTE PTR [rax],al
   14004d5ac:	add    BYTE PTR [rax],al
   14004d5ae:	(bad)  
   14004d5af:	(bad)  
   14004d5b0:	(bad)  
   14004d5b1:	mov    cl,0x2e
   14004d5b3:	outs   dx,BYTE PTR ds:[rsi]
   14004d5b4:	movabs ds:0x3fcc01,eax
   14004d5bd:	add    ah,ah
   14004d5bf:	(bad)  
   14004d5c0:	ficomp DWORD PTR [rbx]
   14004d5c2:	jl     0x14004d625
   14004d5c4:	xor    dl,BYTE PTR [rbp-0x1c]
   14004d5c7:	(bad)  
   14004d5c8:	imul   ebp,DWORD PTR [rdi-0x10],0xc154c985
   14004d5cf:	(bad)  
   14004d5d0:	imul   ebp,DWORD PTR [rdi-0x10],0xc954c985
   14004d5d7:	(bad)  
   14004d5d8:	(bad)  
   14004d5d9:	mov    cl,0x2e
   14004d5db:	outs   dx,BYTE PTR ds:[rsi]
   14004d5dc:	movabs ds:0x64c2f837b53fcc01,eax
   14004d5e5:	stos   BYTE PTR es:[rdi],al
   14004d5e6:	fdivr  DWORD PTR [rdi]
   14004d5e8:	mov    ch,0x37
   14004d5ea:	clc    
   14004d5eb:	ret    0xaa64
   14004d5ee:	loop   0x14004d62f
   14004d5f0:	mov    ch,0x37
   14004d5f2:	clc    
   14004d5f3:	ret    0xaa64
   14004d5f6:	in     al,dx
   14004d5f7:	(bad)  
   14004d5f8:	ficomp DWORD PTR [rbx]
   14004d5fa:	jl     0x14004d65d
   14004d5fc:	xor    dl,BYTE PTR [rbp-0x14]
   14004d5ff:	(bad)  
   14004d600:	mov    ch,0x37
   14004d602:	clc    
   14004d603:	ret    0xaa64
   14004d606:	out    dx,al
   14004d607:	(bad)  
   14004d608:	rex.WXB enter 0x3d07,0x9b
   14004d60d:	push   rbp
   14004d60e:	fistp  QWORD PTR [rdi]
   14004d610:	add    BYTE PTR [rax],al
   14004d612:	add    BYTE PTR [rax],al
   14004d614:	add    BYTE PTR [rax],al
   14004d616:	out    dx,al
   14004d617:	(bad)  
   14004d618:	add    BYTE PTR [rax],al
   14004d61a:	add    BYTE PTR [rax],al
   14004d61c:	add    BYTE PTR [rax],al
   14004d61e:	out    dx,al
   14004d61f:	(bad)  
   14004d620:	add    BYTE PTR [rax],al
   14004d622:	add    BYTE PTR [rax],al
   14004d624:	add    BYTE PTR [rax],al
   14004d626:	out    dx,al
   14004d627:	(bad)  
   14004d628:	ficomp DWORD PTR [rbx]
   14004d62a:	jl     0x14004d68d
   14004d62c:	xor    dl,BYTE PTR [rbp-0x12]
   14004d62f:	(bad)  
   14004d630:	add    BYTE PTR [rax],al
   14004d632:	add    BYTE PTR [rax],al
   14004d634:	add    BYTE PTR [rax],al
   14004d636:	out    dx,al
   14004d637:	(bad)  
   14004d638:	add    BYTE PTR [rax],al
   14004d63a:	add    BYTE PTR [rax],al
   14004d63c:	add    BYTE PTR [rax],al
   14004d63e:	out    dx,al
   14004d63f:	(bad)  
   14004d640:	adc    esi,edx
   14004d642:	rex.B iret 
   14004d644:	data16 (bad) 
   14004d646:	repnz (bad) 
   14004d648:	rex.WXB enter 0x3d07,0x9b
   14004d64d:	push   rbp
   14004d64e:	jmp    0x1bc20b092
   14004d653:	(bad)  
   14004d654:	xor    dl,BYTE PTR [rbp-0x18]
   14004d657:	(bad)  
   14004d658:	ficomp DWORD PTR [rbx]
   14004d65a:	jl     0x14004d6bd
   14004d65c:	xor    dl,BYTE PTR [rbp-0x18]
   14004d65f:	(bad)  
   14004d660:	ficomp DWORD PTR [rbx]
   14004d662:	jl     0x14004d6c5
   14004d664:	xor    dl,BYTE PTR [rbp-0x18]
   14004d667:	(bad)  
   14004d668:	ficomp DWORD PTR [rbx]
   14004d66a:	jl     0x14004d6cd
   14004d66c:	xor    dl,BYTE PTR [rbp-0x18]
   14004d66f:	(bad)  
   14004d670:	add    BYTE PTR [rax],al
   14004d672:	add    BYTE PTR [rax],al
   14004d674:	add    BYTE PTR [rax],al
   14004d676:	fdivr  DWORD PTR [rdi]
   14004d678:	add    BYTE PTR [rax],al
   14004d67a:	add    BYTE PTR [rax],al
   14004d67c:	add    BYTE PTR [rax],al
   14004d67e:	fdivr  DWORD PTR [rdi]
   14004d680:	add    BYTE PTR [rax],al
   14004d682:	add    BYTE PTR [rax],al
   14004d684:	add    BYTE PTR [rax],al
   14004d686:	fdivr  DWORD PTR [rdi]
   14004d688:	imul   ebp,DWORD PTR [rdi-0x10],0xd954c985
   14004d68f:	(bad)  
   14004d690:	mov    ch,0x37
   14004d692:	clc    
   14004d693:	ret    0xaa64
   14004d696:	in     al,dx
   14004d697:	(bad)  
   14004d698:	jno    0x14004d646
   14004d69a:	mov    ebx,ebx
   14004d69c:	push   0x3fef00
   14004d6a1:	add    BYTE PTR [rax],al
   14004d6a3:	add    BYTE PTR [rax],al
   14004d6a5:	add    ah,ch
   14004d6a7:	(bad)  
   14004d6a8:	add    BYTE PTR [rax],al
   14004d6aa:	add    BYTE PTR [rax],al
   14004d6ac:	add    BYTE PTR [rax],al
   14004d6ae:	in     al,dx
   14004d6af:	(bad)  
   14004d6b0:	add    BYTE PTR [rax],al
   14004d6b2:	add    BYTE PTR [rax],al
   14004d6b4:	add    BYTE PTR [rax],al
   14004d6b6:	in     al,dx
   14004d6b7:	(bad)  
   14004d6b8:	add    BYTE PTR [rax],al
   14004d6ba:	add    BYTE PTR [rax],al
   14004d6bc:	add    BYTE PTR [rax],al
   14004d6be:	in     al,dx
   14004d6bf:	(bad)  
   14004d6c0:	add    BYTE PTR [rax],al
   14004d6c2:	add    BYTE PTR [rax],al
   14004d6c4:	add    BYTE PTR [rax],al
   14004d6c6:	in     al,dx
   14004d6c7:	(bad)  
   14004d6c8:	(bad)  
   14004d6c9:	push   rbx
   14004d6ca:	je     0x14004d6f0
   14004d6cc:	xchg   edi,eax
   14004d6cd:	jmp    rax
   14004d6cf:	(bad)  
   14004d6d0:	add    BYTE PTR [rax],al
   14004d6d2:	add    BYTE PTR [rax],al
   14004d6d4:	add    BYTE PTR [rax],al
   14004d6d6:	in     al,dx
   14004d6d7:	(bad)  
   14004d6d8:	add    BYTE PTR [rax],al
   14004d6da:	add    BYTE PTR [rax],al
   14004d6dc:	add    BYTE PTR [rax],al
   14004d6de:	out    dx,al
   14004d6df:	(bad)  
   14004d6e0:	add    BYTE PTR [rax],al
   14004d6e2:	add    BYTE PTR [rax],al
   14004d6e4:	add    BYTE PTR [rax],al
   14004d6e6:	out    dx,al
   14004d6e7:	(bad)  
   14004d6e8:	add    BYTE PTR [rax],al
   14004d6ea:	add    BYTE PTR [rax],al
   14004d6ec:	add    BYTE PTR [rax],al
   14004d6ee:	out    dx,al
   14004d6ef:	(bad)  
   14004d6f0:	add    BYTE PTR [rax],al
   14004d6f2:	add    BYTE PTR [rax],al
   14004d6f4:	add    BYTE PTR [rax],al
   14004d6f6:	out    dx,al
   14004d6f7:	(bad)  
   14004d6f8:	es in  al,0x83
   14004d6fb:	sahf   
   14004d6fc:	int    0xaa
   14004d6fe:	in     eax,dx
   14004d6ff:	(bad)  
   14004d700:	es in  al,0x83
   14004d703:	sahf   
   14004d704:	int    0xaa
   14004d706:	in     eax,0x3f
   14004d708:	rex.WXB enter 0x3d07,0x9b
   14004d70d:	push   rbp
   14004d70e:	jrcxz  0x14004d74f
   14004d710:	es in  al,0x83
   14004d713:	sahf   
   14004d714:	int    0xaa
   14004d716:	loope  0x14004d757
   14004d718:	es in  al,0x83
   14004d71b:	sahf   
   14004d71c:	int    0xaa
   14004d71e:	loope  0x14004d75f
   14004d720:	es in  al,0x83
   14004d723:	sahf   
   14004d724:	int    0xaa
   14004d726:	loope  0x14004d767
   14004d728:	es in  al,0x83
   14004d72b:	sahf   
   14004d72c:	int    0xaa
   14004d72e:	loope  0x14004d76f
   14004d730:	rex.WXB enter 0x3d07,0x9b
   14004d735:	push   rbp
   14004d736:	loope  0x14004d777
   14004d738:	es in  al,0x83
   14004d73b:	sahf   
   14004d73c:	int    0xaa
   14004d73e:	loope  0x14004d77f
   14004d740:	es in  al,0x83
   14004d743:	sahf   
   14004d744:	int    0xaa
   14004d746:	jmp    0x14004d78a
   14004d74b:	add    BYTE PTR [rax],al
   14004d74d:	add    al,ah
   14004d74f:	(bad)  
   14004d750:	ficomp DWORD PTR [rbx]
   14004d752:	jl     0x14004d7b5
   14004d754:	xor    dl,BYTE PTR [rbp-0x20]
   14004d757:	(bad)  
   14004d758:	ficomp DWORD PTR [rbx]
   14004d75a:	jl     0x14004d7bd
   14004d75c:	xor    dl,BYTE PTR [rbp-0x20]
   14004d75f:	(bad)  
   14004d760:	ficomp DWORD PTR [rbx]
   14004d762:	jl     0x14004d7c5
   14004d764:	xor    dl,BYTE PTR [rbp-0x20]
   14004d767:	(bad)  
   14004d768:	add    BYTE PTR [rax],al
   14004d76a:	add    BYTE PTR [rax],al
   14004d76c:	add    BYTE PTR [rax],al
   14004d76e:	loopne 0x14004d7af
   14004d770:	add    BYTE PTR [rax],al
   14004d772:	add    BYTE PTR [rax],al
   14004d774:	add    BYTE PTR [rax],al
   14004d776:	(bad)  
   14004d777:	(bad)  
   14004d778:	add    BYTE PTR [rax],al
   14004d77a:	add    BYTE PTR [rax],al
   14004d77c:	add    BYTE PTR [rax],al
   14004d77e:	(bad)  
   14004d77f:	(bad)  
   14004d780:	add    BYTE PTR [rax],al
   14004d782:	add    BYTE PTR [rax],al
   14004d784:	add    BYTE PTR [rax],al
   14004d786:	fdivr  DWORD PTR [rdi]
   14004d788:	add    BYTE PTR [rax],al
   14004d78a:	add    BYTE PTR [rax],al
   14004d78c:	add    BYTE PTR [rax],al
   14004d78e:	fdivr  DWORD PTR [rdi]
   14004d790:	mov    ch,0x37
   14004d792:	clc    
   14004d793:	ret    0xaa64
   14004d796:	loop   0x14004d7d7
   14004d798:	rex.WXB enter 0x3d07,0x9b
   14004d79d:	push   rbp
   14004d79e:	in     eax,0x3f
   14004d7a0:	mov    ch,0x37
   14004d7a2:	clc    
   14004d7a3:	ret    0xaa64
   14004d7a6:	loop   0x14004d7e7
   14004d7a8:	mov    ch,0x37
   14004d7aa:	clc    
   14004d7ab:	ret    0xaa64
   14004d7ae:	loop   0x14004d7ef
   14004d7b0:	mov    ch,0x37
   14004d7b2:	clc    
   14004d7b3:	ret    0xaa64
   14004d7b6:	loop   0x14004d7f7
   14004d7b8:	mov    ch,0x37
   14004d7ba:	clc    
   14004d7bb:	ret    0xaa64
   14004d7be:	loop   0x14004d7ff
   14004d7c0:	mov    ch,0x37
   14004d7c2:	clc    
   14004d7c3:	ret    0xaa64
   14004d7c6:	loop   0x14004d807
   14004d7c8:	mov    ch,0x37
   14004d7ca:	clc    
   14004d7cb:	ret    0xaa64
   14004d7ce:	out    0x3f,al
   14004d7d0:	es in  al,0x83
   14004d7d3:	sahf   
   14004d7d4:	int    0xaa
   14004d7d6:	jrcxz  0x14004d817
   14004d7d8:	rex.WXB enter 0x3d07,0x9b
   14004d7dd:	push   rbp
   14004d7de:	in     eax,0x3f
   14004d7e0:	rex.WXB enter 0x3d07,0x9b
   14004d7e5:	push   rbp
   14004d7e6:	in     eax,0x3f
   14004d7e8:	rex.WXB enter 0x3d07,0x9b
   14004d7ed:	push   rbp
   14004d7ee:	in     eax,0x3f
   14004d7f0:	rex.WXB enter 0x3d07,0x9b
   14004d7f5:	push   rbp
   14004d7f6:	in     eax,0x3f
   14004d7f8:	(bad)  
   14004d7f9:	push   rbx
   14004d7fa:	je     0x14004d820
   14004d7fc:	xchg   edi,eax
   14004d7fd:	jmp    rsp
   14004d7ff:	(bad)  
   14004d800:	ficomp DWORD PTR [rbx]
   14004d802:	jl     0x14004d865
   14004d804:	xor    dl,BYTE PTR [rbp-0x1c]
   14004d807:	(bad)  
   14004d808:	(bad)  
   14004d809:	push   rbx
   14004d80a:	je     0x14004d830
   14004d80c:	xchg   edi,eax
   14004d80d:	jmp    rsp
   14004d80f:	(bad)  
	...
   14004d910:	es in  al,0x83
   14004d913:	sahf   
   14004d914:	int    0xaa
   14004d916:	jmp    0x15f26065a
   14004d91b:	hlt    
   14004d91c:	ins    BYTE PTR es:[rdi],dx
   14004d91d:	push   rsi
   14004d91e:	(bad)
   14004d921:	(bad)  
   14004d922:	clc    
   14004d923:	ret    0xaa64
   14004d926:	fdivr  QWORD PTR [rdi]
   14004d928:	rex.WXB enter 0x3d07,0x9b
   14004d92d:	push   rbp
   14004d92e:	loope  0x14004d96f
   14004d930:	ficomp DWORD PTR [rbx]
   14004d932:	jl     0x14004d995
   14004d934:	xor    dl,BYTE PTR [rbp-0x20]
   14004d937:	(bad)  
   14004d938:	add    BYTE PTR [rax],al
   14004d93a:	add    BYTE PTR [rax],al
   14004d93c:	add    BYTE PTR [rax],al
   14004d93e:	loop   0x14004d97f
   14004d940:	ficomp DWORD PTR [rbx]
   14004d942:	jl     0x14004d9a5
   14004d944:	xor    dl,BYTE PTR [rbp-0x20]
   14004d947:	(bad)  
   14004d948:	xchg   edi,eax
   14004d949:	nop
   14004d94a:	(bad)  
   14004d94c:	ss stos DWORD PTR es:[rdi],eax
   14004d94e:	(bad)  
   14004d94f:	(bad)  
   14004d950:	(bad)  
   14004d951:	mov    cl,0x2e
   14004d953:	outs   dx,BYTE PTR ds:[rsi]
   14004d954:	movabs ds:0xa36e2eb1c43fcc01,eax
   14004d95d:	add    esp,ecx
   14004d95f:	(bad)  
   14004d960:	add    BYTE PTR [rax],al
   14004d962:	add    BYTE PTR [rax],al
   14004d964:	add    BYTE PTR [rax],al
   14004d966:	loopne 0x14004d9a7
   14004d968:	es in  al,0x83
   14004d96b:	sahf   
   14004d96c:	int    0xaa
   14004d96e:	jrcxz  0x14004d9af
   14004d970:	imul   ebp,DWORD PTR [rdi-0x10],0xd154c985
   14004d977:	(bad)  
   14004d978:	add    BYTE PTR [rax],al
   14004d97a:	add    BYTE PTR [rax],al
   14004d97c:	add    BYTE PTR [rax],al
   14004d97e:	loop   0x14004d9bf
   14004d980:	rcr    esi,cl
   14004d982:	loopne 0x14004d98f
   14004d984:	xchg   ebx,eax
   14004d985:	test   eax,0x1bda3fca
   14004d98a:	jl     0x14004d9ed
   14004d98c:	xor    dl,BYTE PTR [rbp-0x20]
   14004d98f:	(bad)  
   14004d990:	ficomp DWORD PTR [rbx]
   14004d992:	jl     0x14004d9f5
   14004d994:	xor    dl,BYTE PTR [rbp-0x20]
   14004d997:	(bad)  
   14004d998:	add    BYTE PTR [rax],al
   14004d99a:	add    BYTE PTR [rax],al
   14004d99c:	add    BYTE PTR [rax],al
   14004d99e:	loopne 0x14004d9df
   14004d9a0:	(bad)  
   14004d9a1:	push   rbx
   14004d9a2:	je     0x14004d9c8
   14004d9a4:	xchg   edi,eax
   14004d9a5:	jmp    rax
   14004d9a7:	(bad)  
   14004d9a8:	rex.WXB enter 0x3d07,0x9b
   14004d9ad:	push   rbp
   14004d9ae:	loope  0x14004d9ef
   14004d9b0:	ficomp DWORD PTR [rbx]
   14004d9b2:	jl     0x14004da15
   14004d9b4:	xor    dl,BYTE PTR [rbp-0x20]
   14004d9b7:	(bad)  
   14004d9b8:	rex.WXB enter 0x3d07,0x9b
   14004d9bd:	push   rbp
   14004d9be:	loope  0x14004d9ff
   14004d9c0:	ficomp DWORD PTR [rbx]
   14004d9c2:	jl     0x14004da25
   14004d9c4:	xor    dl,BYTE PTR [rbp-0x20]
   14004d9c7:	(bad)  
   14004d9c8:	ficomp DWORD PTR [rbx]
   14004d9ca:	jl     0x14004da2d
   14004d9cc:	xor    dl,BYTE PTR [rbp-0x20]
   14004d9cf:	(bad)  
   14004d9d0:	add    BYTE PTR [rax],al
   14004d9d2:	add    BYTE PTR [rax],al
   14004d9d4:	add    BYTE PTR [rax],al
   14004d9d6:	loopne 0x14004da17
   14004d9d8:	ficomp DWORD PTR [rbx]
   14004d9da:	jl     0x14004da3d
   14004d9dc:	xor    dl,BYTE PTR [rbp-0x20]
   14004d9df:	(bad)  
   14004d9e0:	rcr    esi,cl
   14004d9e2:	loopne 0x14004d9ef
   14004d9e4:	xchg   ebx,eax
   14004d9e5:	test   eax,0xc84b3fca
   14004d9ea:	(bad)  
   14004d9eb:	cmp    eax,0x3fd3559b
   14004d9f0:	ficomp DWORD PTR [rbx]
   14004d9f2:	jl     0x14004da55
   14004d9f4:	xor    dl,BYTE PTR [rbp-0x1c]
   14004d9f7:	(bad)  
   14004d9f8:	es in  al,0x83
   14004d9fb:	sahf   
   14004d9fc:	int    0xaa
   14004d9fe:	in     eax,0x3f
   14004da00:	ficomp DWORD PTR [rbx]
   14004da02:	jl     0x14004da65
   14004da04:	xor    dl,BYTE PTR [rbp-0x1c]
   14004da07:	(bad)  
   14004da08:	xchg   edi,eax
   14004da09:	nop
   14004da0a:	(bad)  
   14004da0c:	ss stos DWORD PTR es:[rdi],eax
   14004da0e:	fidivr WORD PTR [rdi]
   14004da10:	add    BYTE PTR [rax],al
   14004da12:	add    BYTE PTR [rax],al
   14004da14:	add    BYTE PTR [rax],al
   14004da16:	loopne 0x14004da57
   14004da18:	rex.WXB enter 0x3d07,0x9b
   14004da1d:	push   rbp
   14004da1e:	jmp    0x147cd2562
   14004da23:	cmp    eax,0x3fe5559b
   14004da28:	mov    ch,0x37
   14004da2a:	clc    
   14004da2b:	ret    0xaa64
   14004da2e:	in     al,0x3f
   14004da30:	mov    ch,0x37
   14004da32:	clc    
   14004da33:	ret    0xaa64
   14004da36:	in     al,0x3f
   14004da38:	mov    ch,0x37
   14004da3a:	clc    
   14004da3b:	ret    0xaa64
   14004da3e:	in     al,0x3f
   14004da40:	ficomp DWORD PTR [rbx]
   14004da42:	jl     0x14004daa5
   14004da44:	xor    dl,BYTE PTR [rbp-0x1c]
   14004da47:	(bad)  
   14004da48:	es in  al,0x83
   14004da4b:	sahf   
   14004da4c:	int    0xaa
   14004da4e:	in     eax,0x3f
   14004da50:	rex.WXB enter 0x3d07,0x9b
   14004da55:	push   rbp
   14004da56:	in     eax,0x3f
   14004da58:	add    BYTE PTR [rax],al
   14004da5a:	add    BYTE PTR [rax],al
   14004da5c:	add    BYTE PTR [rax],al
   14004da5e:	loopne 0x14004da9f
   14004da60:	es in  al,0x83
   14004da63:	sahf   
   14004da64:	int    0xaa
   14004da66:	in     eax,0x3f
   14004da68:	mov    ch,0x37
   14004da6a:	clc    
   14004da6b:	ret    0xaa64
   14004da6e:	out    0x3f,al
   14004da70:	mov    ch,0x37
   14004da72:	clc    
   14004da73:	ret    0xaa64
   14004da76:	in     al,0x3f
   14004da78:	(bad)  
   14004da79:	push   rbx
   14004da7a:	je     0x14004daa0
   14004da7c:	xchg   edi,eax
   14004da7d:	(bad)  
   14004da7e:	call   0x147cd25c2
   14004da83:	cmp    eax,0x3fe7559b
   14004da88:	es in  al,0x83
   14004da8b:	sahf   
   14004da8c:	int    0xaa
   14004da8e:	in     eax,0x3f
   14004da90:	es in  al,0x83
   14004da93:	sahf   
   14004da94:	int    0xaa
   14004da96:	jrcxz  0x14004dad7
   14004da98:	es in  al,0x83
   14004da9b:	sahf   
   14004da9c:	int    0xaa
   14004da9e:	in     eax,0x3f
   14004daa0:	es in  al,0x83
   14004daa3:	sahf   
   14004daa4:	int    0xaa
   14004daa6:	out    0x3f,eax
   14004daa8:	add    BYTE PTR [rax],al
   14004daaa:	add    BYTE PTR [rax],al
   14004daac:	add    BYTE PTR [rax],al
   14004daae:	loop   0x14004daef
   14004dab0:	add    BYTE PTR [rax],al
   14004dab2:	add    BYTE PTR [rax],al
   14004dab4:	add    BYTE PTR [rax],al
   14004dab6:	in     al,0x3f
   14004dab8:	ficomp DWORD PTR [rbx]
   14004daba:	jl     0x14004db1d
   14004dabc:	xor    dl,BYTE PTR [rbp-0x1a]
   14004dabf:	(bad)  
   14004dac0:	(bad)  
   14004dac1:	push   rbx
   14004dac2:	je     0x14004dae8
   14004dac4:	xchg   edi,eax
   14004dac5:	(bad)  
   14004dac6:	call   0x1bc20b50a
   14004dacb:	(bad)  
   14004dacc:	xor    dl,BYTE PTR [rbp-0x18]
   14004dacf:	(bad)  
   14004dad0:	ficomp DWORD PTR [rbx]
   14004dad2:	jl     0x14004db35
   14004dad4:	xor    dl,BYTE PTR [rbp-0x1a]
   14004dad7:	(bad)  
   14004dad8:	rex.WXB enter 0x3d07,0x9b
   14004dadd:	push   rbp
   14004dade:	in     eax,0x3f
   14004dae0:	(bad)  
   14004dae1:	push   rbx
   14004dae2:	je     0x14004db08
   14004dae4:	xchg   edi,eax
   14004dae5:	jmp    rax
   14004dae7:	(bad)  
   14004dae8:	sub    eax,0x6cf41f21
   14004daed:	push   rsi
   14004daee:	int    0x3f
   14004daf0:	ficomp DWORD PTR [rbx]
   14004daf2:	jl     0x14004db55
   14004daf4:	xor    dl,BYTE PTR [rbp-0x20]
   14004daf7:	(bad)  
   14004daf8:	sub    eax,0x6cf41f21
   14004dafd:	push   rsi
   14004dafe:	int    0x3f
   14004db00:	ficomp DWORD PTR [rbx]
   14004db02:	jl     0x14004db65
   14004db04:	xor    dl,BYTE PTR [rbp-0x20]
   14004db07:	(bad)  
   14004db08:	es in  al,0x83
   14004db0b:	sahf   
   14004db0c:	int    0xaa
   14004db0e:	jmp    0x15f260852
   14004db13:	hlt    
   14004db14:	ins    BYTE PTR es:[rdi],dx
   14004db15:	push   rsi
   14004db16:	int    0x3f
   14004db18:	ficomp DWORD PTR [rbx]
   14004db1a:	jl     0x14004db7d
   14004db1c:	xor    dl,BYTE PTR [rbp-0x1c]
   14004db1f:	(bad)  
   14004db20:	ficomp DWORD PTR [rbx]
   14004db22:	jl     0x14004db85
   14004db24:	xor    dl,BYTE PTR [rbp-0x1a]
   14004db27:	(bad)  
   14004db28:	es in  al,0x83
   14004db2b:	sahf   
   14004db2c:	int    0xaa
   14004db2e:	jrcxz  0x14004db6f
   14004db30:	ficomp DWORD PTR [rbx]
   14004db32:	jl     0x14004db95
   14004db34:	xor    dl,BYTE PTR [rbp-0x1a]
   14004db37:	(bad)  
   14004db38:	es in  al,0x83
   14004db3b:	sahf   
   14004db3c:	int    0xaa
   14004db3e:	jrcxz  0x14004db7f
   14004db40:	mov    ch,0x37
   14004db42:	clc    
   14004db43:	ret    0xaa64
   14004db46:	loop   0x14004db87
   14004db48:	rex.WXB enter 0x3d07,0x9b
   14004db4d:	push   rbp
   14004db4e:	in     eax,0x3f
   14004db50:	add    BYTE PTR [rax],al
   14004db52:	add    BYTE PTR [rax],al
   14004db54:	add    BYTE PTR [rax],al
   14004db56:	out    0x3f,al
   14004db58:	add    BYTE PTR [rax],al
   14004db5a:	add    BYTE PTR [rax],al
   14004db5c:	add    BYTE PTR [rax],al
   14004db5e:	loop   0x14004db9f
   14004db60:	rex.WXB enter 0x3d07,0x9b
   14004db65:	push   rbp
   14004db66:	fstp   TBYTE PTR [rdi]
   14004db68:	ficomp DWORD PTR [rbx]
   14004db6a:	jl     0x14004dbcd
   14004db6c:	xor    dl,BYTE PTR [rbp-0x1c]
   14004db6f:	(bad)  
   14004db70:	add    BYTE PTR [rax],al
   14004db72:	add    BYTE PTR [rax],al
   14004db74:	add    BYTE PTR [rax],al
   14004db76:	loop   0x14004dbb7
   14004db78:	(bad)  
   14004db79:	push   rbx
   14004db7a:	je     0x14004dba0
   14004db7c:	xchg   edi,eax
   14004db7d:	(bad)  
   14004db7e:	call   0x1b4586ac2
   14004db83:	and    al,0x97
   14004db85:	jmp    rsp
   14004db87:	(bad)  
   14004db88:	es in  al,0x83
   14004db8b:	sahf   
   14004db8c:	int    0xaa
   14004db8e:	jrcxz  0x14004dbcf
   14004db90:	ficomp DWORD PTR [rbx]
   14004db92:	jl     0x14004dbf5
   14004db94:	xor    dl,BYTE PTR [rbp-0x1a]
   14004db97:	(bad)  
   14004db98:	ficomp DWORD PTR [rbx]
   14004db9a:	jl     0x14004dbfd
   14004db9c:	xor    dl,BYTE PTR [rbp-0x1a]
   14004db9f:	(bad)  
   14004dba0:	es in  al,0x83
   14004dba3:	sahf   
   14004dba4:	int    0xaa
   14004dba6:	jrcxz  0x14004dbe7
   14004dba8:	(bad)  
   14004dba9:	push   rbx
   14004dbaa:	je     0x14004dbd0
   14004dbac:	xchg   edi,eax
   14004dbad:	jmp    rax
   14004dbaf:	(bad)  
   14004dbb0:	es in  al,0x83
   14004dbb3:	sahf   
   14004dbb4:	int    0xaa
   14004dbb6:	jrcxz  0x14004dbf7
   14004dbb8:	rex.WXB enter 0x3d07,0x9b
   14004dbbd:	push   rbp
   14004dbbe:	in     eax,0x3f
   14004dbc0:	rex.WXB enter 0x3d07,0x9b
   14004dbc5:	push   rbp
   14004dbc6:	out    0x3f,eax
   14004dbc8:	rex.WXB enter 0x3d07,0x9b
   14004dbcd:	push   rbp
   14004dbce:	out    0x3f,eax
   14004dbd0:	add    BYTE PTR [rax],al
   14004dbd2:	add    BYTE PTR [rax],al
   14004dbd4:	add    BYTE PTR [rax],al
   14004dbd6:	out    0x3f,al
   14004dbd8:	add    BYTE PTR [rax],al
   14004dbda:	add    BYTE PTR [rax],al
   14004dbdc:	add    BYTE PTR [rax],al
   14004dbde:	out    0x3f,al
   14004dbe0:	ficomp DWORD PTR [rbx]
   14004dbe2:	jl     0x14004dc45
   14004dbe4:	xor    dl,BYTE PTR [rbp-0x20]
   14004dbe7:	(bad)  
   14004dbe8:	imul   ebp,DWORD PTR [rdi-0x10],0xd154c985
   14004dbef:	(bad)  
   14004dbf0:	add    BYTE PTR [rax],al
   14004dbf2:	add    BYTE PTR [rax],al
   14004dbf4:	add    BYTE PTR [rax],al
   14004dbf6:	mov    al,0x3f
   14004dbf8:	imul   ebp,DWORD PTR [rdi-0x10],0xd154c985
   14004dbff:	(bad)  
   14004dc00:	add    BYTE PTR [rax],al
   14004dc02:	add    BYTE PTR [rax],al
   14004dc04:	add    BYTE PTR [rax],al
   14004dc06:	loop   0x14004dc47
	...
   14004dd18:	xchg   edi,eax
   14004dd19:	nop
   14004dd1a:	(bad)  
   14004dd1c:	ss stos DWORD PTR es:[rdi],eax
   14004dd1e:	(bad)  
   14004dd1f:	(bad)  
   14004dd20:	xchg   edi,eax
   14004dd21:	nop
   14004dd22:	(bad)  
   14004dd24:	ss stos DWORD PTR es:[rdi],eax
   14004dd26:	fidivr WORD PTR [rdi]
   14004dd28:	add    BYTE PTR [rax],al
   14004dd2a:	add    BYTE PTR [rax],al
   14004dd2c:	add    BYTE PTR [rax],al
   14004dd2e:	in     al,0x3f
   14004dd30:	rex.WXB enter 0x3d07,0x9b
   14004dd35:	push   rbp
   14004dd36:	loope  0x14004dd77
   14004dd38:	es in  al,0x83
   14004dd3b:	sahf   
   14004dd3c:	int    0xaa
   14004dd3e:	in     eax,0x3f
   14004dd40:	add    BYTE PTR [rax],al
   14004dd42:	add    BYTE PTR [rax],al
   14004dd44:	add    BYTE PTR [rax],al
   14004dd46:	mov    al,0x3f
   14004dd48:	add    BYTE PTR [rax],al
   14004dd4a:	add    BYTE PTR [rax],al
   14004dd4c:	add    BYTE PTR [rax],al
   14004dd4e:	in     al,0x3f
   14004dd50:	imul   ebp,DWORD PTR [rdi-0x10],0xd954c985
   14004dd57:	(bad)  
   14004dd58:	es in  al,0x83
   14004dd5b:	sahf   
   14004dd5c:	int    0xaa
   14004dd5e:	jmp    0x14004dda2
   14004dd63:	add    BYTE PTR [rax],al
   14004dd65:	add    ah,bl
   14004dd67:	(bad)  
   14004dd68:	(bad)  
   14004dd69:	push   rbx
   14004dd6a:	je     0x14004dd90
   14004dd6c:	xchg   edi,eax
   14004dd6d:	jmp    rsp
   14004dd6f:	(bad)  
   14004dd70:	ficomp DWORD PTR [rbx]
   14004dd72:	jl     0x14004ddd5
   14004dd74:	xor    dl,BYTE PTR [rbp-0x1a]
   14004dd77:	(bad)  
   14004dd78:	add    BYTE PTR [rax],al
   14004dd7a:	add    BYTE PTR [rax],al
   14004dd7c:	add    BYTE PTR [rax],al
   14004dd7e:	loop   0x14004ddbf
   14004dd80:	es in  al,0x83
   14004dd83:	sahf   
   14004dd84:	int    0xaa
   14004dd86:	jmp    0x147cd28ca
   14004dd8b:	cmp    eax,0x3feb559b
   14004dd90:	rex.WXB enter 0x3d07,0x9b
   14004dd95:	push   rbp
   14004dd96:	xlat   BYTE PTR ds:[rbx]
   14004dd97:	(bad)  
   14004dd98:	add    BYTE PTR [rax],al
   14004dd9a:	add    BYTE PTR [rax],al
   14004dd9c:	add    BYTE PTR [rax],al
   14004dd9e:	in     al,0x3f
   14004dda0:	loop   0x14004ddfa
   14004dda2:	(bad)  
   14004dda3:	mov    bh,0xd1
   14004dda5:	add    dh,dl
   14004dda7:	(bad)  
   14004dda8:	mov    ch,0x37
   14004ddaa:	clc    
   14004ddab:	ret    0xaa64
   14004ddae:	(bad)  
   14004ddaf:	(bad)  
   14004ddb0:	sub    eax,0x6cf41f21
   14004ddb5:	push   rsi
   14004ddb6:	int    0x3f
   14004ddb8:	rex.WXB enter 0x3d07,0x9b
   14004ddbd:	push   rbp
   14004ddbe:	in     eax,0x3f
   14004ddc0:	mov    ch,0x37
   14004ddc2:	clc    
   14004ddc3:	ret    0xaa64
   14004ddc6:	loop   0x14004de07
   14004ddc8:	imul   ebp,DWORD PTR [rdi-0x10],0xc154c985
   14004ddcf:	(bad)  
   14004ddd0:	(bad)  
   14004ddd1:	mov    cl,0x2e
   14004ddd3:	outs   dx,BYTE PTR ds:[rsi]
   14004ddd4:	movabs ds:0x3fcc01,eax
   14004dddd:	add    ah,dl
   14004dddf:	(bad)  
   14004dde0:	rex.WXB enter 0x3d07,0x9b
   14004dde5:	push   rbp
   14004dde6:	fstp   TBYTE PTR [rdi]
   14004dde8:	(bad)  
   14004dde9:	push   rbx
   14004ddea:	je     0x14004de10
   14004ddec:	xchg   edi,eax
   14004dded:	jmp    rsp
   14004ddef:	(bad)  
   14004ddf0:	rex.WXB enter 0x3d07,0x9b
   14004ddf5:	push   rbp
   14004ddf6:	jmp    0xc3e9043a
   14004ddfb:	sahf   
   14004ddfc:	int    0xaa
   14004ddfe:	jmp    0x147cd2942
   14004de03:	cmp    eax,0x3fe9559b
   14004de08:	xchg   edi,eax
   14004de09:	nop
   14004de0a:	(bad)  
   14004de0c:	ss stos DWORD PTR es:[rdi],eax
   14004de0e:	fidivr WORD PTR [rdi]
   14004de10:	(bad)  
   14004de11:	push   rbx
   14004de12:	je     0x14004de38
   14004de14:	xchg   edi,eax
   14004de15:	(bad)  
   14004de16:	call   0x147cd295a
   14004de1b:	cmp    eax,0x3fe9559b
   14004de20:	(bad)  
   14004de21:	push   rbx
   14004de22:	je     0x14004de48
   14004de24:	xchg   edi,eax
   14004de25:	(bad)  
   14004de26:	call   0x147cd296a
   14004de2b:	cmp    eax,0x3fe9559b
   14004de30:	mov    ch,0x37
   14004de32:	clc    
   14004de33:	ret    0xaa64
   14004de36:	call   0x1b4586d7a
   14004de3b:	and    al,0x97
   14004de3d:	(bad)  
   14004de3e:	call   0x1b4586d82
   14004de43:	and    al,0x97
   14004de45:	(bad)  
   14004de46:	call   0x1383c938a
   14004de4b:	ret    0xaa64
   14004de4e:	in     al,0x3f
   14004de50:	mov    ch,0x37
   14004de52:	clc    
   14004de53:	ret    0xaa64
   14004de56:	in     al,0x3f
   14004de58:	mov    ch,0x37
   14004de5a:	clc    
   14004de5b:	ret    0xaa64
   14004de5e:	in     al,0x3f
   14004de60:	mov    ch,0x37
   14004de62:	clc    
   14004de63:	ret    0xaa64
   14004de66:	in     al,0x3f
   14004de68:	mov    ch,0x37
   14004de6a:	clc    
   14004de6b:	ret    0xaa64
   14004de6e:	in     al,0x3f
   14004de70:	add    BYTE PTR [rax],al
   14004de72:	add    BYTE PTR [rax],al
   14004de74:	add    BYTE PTR [rax],al
   14004de76:	loopne 0x14004deb7
   14004de78:	ficomp DWORD PTR [rbx]
   14004de7a:	jl     0x14004dedd
   14004de7c:	xor    dl,BYTE PTR [rbp-0x20]
   14004de7f:	(bad)  
   14004de80:	add    BYTE PTR [rax],al
   14004de82:	add    BYTE PTR [rax],al
   14004de84:	add    BYTE PTR [rax],al
   14004de86:	loopne 0x14004dec7
   14004de88:	add    BYTE PTR [rax],al
   14004de8a:	add    BYTE PTR [rax],al
   14004de8c:	add    BYTE PTR [rax],al
   14004de8e:	loopne 0x14004decf
   14004de90:	ficomp DWORD PTR [rbx]
   14004de92:	jl     0x14004def5
   14004de94:	xor    dl,BYTE PTR [rbp-0x1a]
   14004de97:	(bad)  
   14004de98:	jno    0x14004de46
   14004de9a:	mov    ebx,ebx
   14004de9c:	push   0x263fe700
   14004dea1:	in     al,0x83
   14004dea3:	sahf   
   14004dea4:	int    0xaa
   14004dea6:	in     eax,0x3f
   14004dea8:	es in  al,0x83
   14004deab:	sahf   
   14004deac:	int    0xaa
   14004deae:	in     eax,0x3f
   14004deb0:	es in  al,0x83
   14004deb3:	sahf   
   14004deb4:	int    0xaa
   14004deb6:	in     eax,0x3f
   14004deb8:	es in  al,0x83
   14004debb:	sahf   
   14004debc:	int    0xaa
   14004debe:	in     eax,0x3f
   14004dec0:	es in  al,0x83
   14004dec3:	sahf   
   14004dec4:	int    0xaa
   14004dec6:	in     eax,0x3f
   14004dec8:	mov    ch,0x37
   14004deca:	clc    
   14004decb:	ret    0xaa64
   14004dece:	fdivr  QWORD PTR [rdi]
   14004ded0:	add    BYTE PTR [rax],al
   14004ded2:	add    BYTE PTR [rax],al
   14004ded4:	add    BYTE PTR [rax],al
   14004ded6:	out    0x3f,al
   14004ded8:	add    BYTE PTR [rax],al
   14004deda:	add    BYTE PTR [rax],al
   14004dedc:	add    BYTE PTR [rax],al
   14004dede:	out    0x3f,al
   14004dee0:	ficomp DWORD PTR [rbx]
   14004dee2:	jl     0x14004df45
   14004dee4:	xor    dl,BYTE PTR [rbp-0x1a]
   14004dee7:	(bad)  
   14004dee8:	es in  al,0x83
   14004deeb:	sahf   
   14004deec:	int    0xaa
   14004deee:	in     eax,0x3f
   14004def0:	mov    ch,0x37
   14004def2:	clc    
   14004def3:	ret    0xaa64
   14004def6:	out    0x3f,al
   14004def8:	rex.WXB enter 0x3d07,0x9b
   14004defd:	push   rbp
   14004defe:	in     eax,0x3f
   14004df00:	es in  al,0x83
   14004df03:	sahf   
   14004df04:	int    0xaa
   14004df06:	jrcxz  0x14004df47
   14004df08:	es in  al,0x83
   14004df0b:	sahf   
   14004df0c:	int    0xaa
   14004df0e:	jrcxz  0x14004df4f
   14004df10:	ficomp DWORD PTR [rbx]
   14004df12:	jl     0x14004df75
   14004df14:	xor    dl,BYTE PTR [rbp-0x1c]
   14004df17:	(bad)  
   14004df18:	ficomp DWORD PTR [rbx]
   14004df1a:	jl     0x14004df7d
   14004df1c:	xor    dl,BYTE PTR [rbp-0x1c]
   14004df1f:	(bad)  
   14004df20:	ficomp DWORD PTR [rbx]
   14004df22:	jl     0x14004df85
   14004df24:	xor    dl,BYTE PTR [rbp-0x1c]
   14004df27:	(bad)  
   14004df28:	mov    ch,0x37
   14004df2a:	clc    
   14004df2b:	ret    0xaa64
   14004df2e:	in     al,0x3f
   14004df30:	ficomp DWORD PTR [rbx]
   14004df32:	jl     0x14004df95
   14004df34:	xor    dl,BYTE PTR [rbp-0x1c]
   14004df37:	(bad)  
   14004df38:	ficomp DWORD PTR [rbx]
   14004df3a:	jl     0x14004df9d
   14004df3c:	xor    dl,BYTE PTR [rbp-0x1c]
   14004df3f:	(bad)  
   14004df40:	mov    ch,0x37
   14004df42:	clc    
   14004df43:	ret    0xaa64
   14004df46:	call   0xc3e9058a
   14004df4b:	sahf   
   14004df4c:	int    0xaa
   14004df4e:	jrcxz  0x14004df8f
   14004df50:	es in  al,0x83
   14004df53:	sahf   
   14004df54:	int    0xaa
   14004df56:	jrcxz  0x14004df97
   14004df58:	es in  al,0x83
   14004df5b:	sahf   
   14004df5c:	int    0xaa
   14004df5e:	jrcxz  0x14004df9f
   14004df60:	es in  al,0x83
   14004df63:	sahf   
   14004df64:	int    0xaa
   14004df66:	jrcxz  0x14004dfa7
   14004df68:	add    BYTE PTR [rax],al
   14004df6a:	add    BYTE PTR [rax],al
   14004df6c:	add    BYTE PTR [rax],al
   14004df6e:	in     al,0x3f
   14004df70:	add    BYTE PTR [rax],al
   14004df72:	add    BYTE PTR [rax],al
   14004df74:	add    BYTE PTR [rax],al
   14004df76:	loop   0x14004dfb7
   14004df78:	ficomp DWORD PTR [rbx]
   14004df7a:	jl     0x14004dfdd
   14004df7c:	xor    dl,BYTE PTR [rbp-0x1e]
   14004df7f:	(bad)  
   14004df80:	add    BYTE PTR [rax],al
   14004df82:	add    BYTE PTR [rax],al
   14004df84:	add    BYTE PTR [rax],al
   14004df86:	loop   0x14004dfc7
   14004df88:	add    BYTE PTR [rax],al
   14004df8a:	add    BYTE PTR [rax],al
   14004df8c:	add    BYTE PTR [rax],al
   14004df8e:	loop   0x14004dfcf
   14004df90:	es in  al,0x83
   14004df93:	sahf   
   14004df94:	int    0xaa
   14004df96:	jrcxz  0x14004dfd7
   14004df98:	rex.WXB enter 0x3d07,0x9b
   14004df9d:	push   rbp
   14004df9e:	in     eax,0x3f
   14004dfa0:	es in  al,0x83
   14004dfa3:	sahf   
   14004dfa4:	int    0xaa
   14004dfa6:	jrcxz  0x14004dfe7
   14004dfa8:	es in  al,0x83
   14004dfab:	sahf   
   14004dfac:	int    0xaa
   14004dfae:	jrcxz  0x14004dfef
   14004dfb0:	es in  al,0x83
   14004dfb3:	sahf   
   14004dfb4:	int    0xaa
   14004dfb6:	jrcxz  0x14004dff7
   14004dfb8:	es in  al,0x83
   14004dfbb:	sahf   
   14004dfbc:	int    0xaa
   14004dfbe:	jrcxz  0x14004dfff
   14004dfc0:	es in  al,0x83
   14004dfc3:	sahf   
   14004dfc4:	int    0xaa
   14004dfc6:	jrcxz  0x14004e007
   14004dfc8:	es in  al,0x83
   14004dfcb:	sahf   
   14004dfcc:	int    0xaa
   14004dfce:	jrcxz  0x14004e00f
   14004dfd0:	(bad)  
   14004dfd1:	push   rbx
   14004dfd2:	je     0x14004dff8
   14004dfd4:	xchg   edi,eax
   14004dfd5:	jmp    rsp
   14004dfd7:	(bad)  
   14004dfd8:	rex.WXB enter 0x3d07,0x9b
   14004dfdd:	push   rbp
   14004dfde:	in     eax,0x3f
   14004dfe0:	rex.WXB enter 0x3d07,0x9b
   14004dfe5:	push   rbp
   14004dfe6:	in     eax,0x3f
   14004dfe8:	rex.WXB enter 0x3d07,0x9b
   14004dfed:	push   rbp
   14004dfee:	in     eax,0x3f
   14004dff0:	es in  al,0x83
   14004dff3:	sahf   
   14004dff4:	int    0xaa
   14004dff6:	in     eax,0x3f
   14004dff8:	es in  al,0x83
   14004dffb:	sahf   
   14004dffc:	int    0xaa
   14004dffe:	in     eax,0x3f
   14004e000:	ficomp DWORD PTR [rbx]
   14004e002:	jl     0x14004e065
   14004e004:	xor    dl,BYTE PTR [rbp-0x1a]
   14004e007:	(bad)  
   14004e008:	rex.WXB enter 0x3d07,0x9b
   14004e00d:	push   rbp
   14004e00e:	in     eax,0x3f
	...
   14004e114:	add    BYTE PTR [rax],al
   14004e116:	fdivr  DWORD PTR [rdi]
   14004e118:	rcr    esi,cl
   14004e11a:	loopne 0x14004e127
   14004e11c:	xchg   ebx,eax
   14004e11d:	test   eax,0x90973fc2
   14004e122:	(bad)  
   14004e124:	ss stos DWORD PTR es:[rdi],eax
   14004e126:	(bad)  
   14004e127:	(bad)  
   14004e128:	jno    0x14004e0d6
   14004e12a:	mov    ebx,ebx
   14004e12c:	push   0x3fe700
   14004e131:	add    BYTE PTR [rax],al
   14004e133:	add    BYTE PTR [rax],al
   14004e135:	add    ah,ah
   14004e137:	(bad)  
   14004e138:	(bad)  
   14004e139:	sub    DWORD PTR [rdx],edi
   14004e13b:	xchg   edx,eax
   14004e13c:	retf   
   14004e13d:	jg     0x14004e12f
   14004e13f:	(bad)  
   14004e140:	rex.WXB enter 0x3d07,0x9b
   14004e145:	push   rbp
   14004e146:	jmp    0x130744a8a
   14004e14b:	test   ecx,ecx
   14004e14d:	push   rsp
   14004e14e:	sar    DWORD PTR [rdi],0x0
   14004e151:	add    BYTE PTR [rax],al
   14004e153:	add    BYTE PTR [rax],al
   14004e155:	add    ah,dl
   14004e157:	(bad)  
   14004e158:	mov    ch,0x37
   14004e15a:	clc    
   14004e15b:	ret    0xaa64
   14004e15e:	(bad)  
   14004e15f:	(bad)  
   14004e160:	rex.WXB enter 0x3d07,0x9b
   14004e165:	push   rbp
   14004e166:	fstp   TBYTE PTR [rdi]
   14004e168:	mov    ch,0x37
   14004e16a:	clc    
   14004e16b:	ret    0xaa64
   14004e16e:	in     al,0x3f
   14004e170:	rcr    esi,cl
   14004e172:	loopne 0x14004e17f
   14004e174:	xchg   ebx,eax
   14004e175:	test   eax,0xc84b3fc2
   14004e17a:	(bad)  
   14004e17b:	cmp    eax,0x3fd7559b
   14004e180:	imul   ebp,DWORD PTR [rdi-0x10],0xc154c985
   14004e187:	(bad)  
   14004e188:	add    BYTE PTR [rax],al
   14004e18a:	add    BYTE PTR [rax],al
   14004e18c:	add    BYTE PTR [rax],al
   14004e18e:	fdivr  DWORD PTR [rdi]
   14004e190:	add    BYTE PTR [rax],al
   14004e192:	add    BYTE PTR [rax],al
   14004e194:	add    BYTE PTR [rax],al
   14004e196:	in     al,0x3f
   14004e198:	xchg   edi,eax
   14004e199:	nop
   14004e19a:	(bad)  
   14004e19c:	ss stos DWORD PTR es:[rdi],eax
   14004e19e:	(bad)  
   14004e19f:	(bad)  
   14004e1a0:	ficomp DWORD PTR [rbx]
   14004e1a2:	jl     0x14004e205
   14004e1a4:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e1a7:	(bad)  
   14004e1a8:	add    BYTE PTR [rax],al
   14004e1aa:	add    BYTE PTR [rax],al
   14004e1ac:	add    BYTE PTR [rax],al
   14004e1ae:	in     al,0x3f
   14004e1b0:	rex.WXB enter 0x3d07,0x9b
   14004e1b5:	push   rbp
   14004e1b6:	in     eax,0x3f
   14004e1b8:	ficomp DWORD PTR [rbx]
   14004e1ba:	jl     0x14004e21d
   14004e1bc:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e1bf:	(bad)  
   14004e1c0:	ficomp DWORD PTR [rbx]
   14004e1c2:	jl     0x14004e225
   14004e1c4:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e1c7:	(bad)  
   14004e1c8:	es in  al,0x83
   14004e1cb:	sahf   
   14004e1cc:	int    0xaa
   14004e1ce:	jrcxz  0x14004e20f
   14004e1d0:	add    BYTE PTR [rax],al
   14004e1d2:	add    BYTE PTR [rax],al
   14004e1d4:	add    BYTE PTR [rax],al
   14004e1d6:	in     al,0x3f
   14004e1d8:	ficomp DWORD PTR [rbx]
   14004e1da:	jl     0x14004e23d
   14004e1dc:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e1df:	(bad)  
   14004e1e0:	imul   ebp,DWORD PTR [rdi-0x10],0xc154c985
   14004e1e7:	(bad)  
   14004e1e8:	rcr    esi,cl
   14004e1ea:	loopne 0x14004e1f7
   14004e1ec:	xchg   ebx,eax
   14004e1ed:	test   eax,0x1bda3fc2
   14004e1f2:	jl     0x14004e255
   14004e1f4:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e1f7:	(bad)  
   14004e1f8:	ficomp DWORD PTR [rbx]
   14004e1fa:	jl     0x14004e25d
   14004e1fc:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e1ff:	(bad)  
   14004e200:	ficomp DWORD PTR [rbx]
   14004e202:	jl     0x14004e265
   14004e204:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e207:	(bad)  
   14004e208:	add    BYTE PTR [rax],al
   14004e20a:	add    BYTE PTR [rax],al
   14004e20c:	add    BYTE PTR [rax],al
   14004e20e:	in     al,0x3f
   14004e210:	es in  al,0x83
   14004e213:	sahf   
   14004e214:	int    0xaa
   14004e216:	repz (bad) 
   14004e218:	mov    ch,0x37
   14004e21a:	clc    
   14004e21b:	ret    0xaa64
   14004e21e:	in     al,dx
   14004e21f:	(bad)  
   14004e220:	rex.WXB enter 0x3d07,0x9b
   14004e225:	push   rbp
   14004e226:	out    0x3f,eax
   14004e228:	jno    0x14004e1d6
   14004e22a:	mov    ebx,ebx
   14004e22c:	push   0xffffffff8f3feb00
   14004e231:	push   rbx
   14004e232:	je     0x14004e258
   14004e234:	xchg   edi,eax
   14004e235:	(bad)  
   14004e236:	call   0x1383c977a
   14004e23b:	ret    0xaa64
   14004e23e:	out    0x3f,al
   14004e240:	mov    ch,0x37
   14004e242:	clc    
   14004e243:	ret    0xaa64
   14004e246:	in     al,0x3f
   14004e248:	ficomp DWORD PTR [rbx]
   14004e24a:	jl     0x14004e2ad
   14004e24c:	xor    dl,BYTE PTR [rbp-0x14]
   14004e24f:	(bad)  
   14004e250:	add    BYTE PTR [rax],al
   14004e252:	add    BYTE PTR [rax],al
   14004e254:	add    BYTE PTR [rax],al
   14004e256:	call   0x14004e29a
   14004e25b:	add    BYTE PTR [rax],al
   14004e25d:	add    al,al
   14004e25f:	(bad)  
   14004e260:	mov    ch,0x37
   14004e262:	clc    
   14004e263:	ret    0xaa64
   14004e266:	loopne 0x14004e2a7
   14004e268:	rex.WXB enter 0x3d07,0x9b
   14004e26d:	push   rbp
   14004e26e:	jmp    0xcbb153b2
   14004e273:	fld    TBYTE PTR [rax+0x0]
   14004e276:	jrcxz  0x14004e2b7
   14004e278:	rex.WXB enter 0x3d07,0x9b
   14004e27d:	push   rbp
   14004e27e:	in     eax,dx
   14004e27f:	(bad)  
   14004e280:	ficomp DWORD PTR [rbx]
   14004e282:	jl     0x14004e2e5
   14004e284:	xor    dl,BYTE PTR [rbp-0x18]
   14004e287:	(bad)  
   14004e288:	(bad)  
   14004e289:	push   rbx
   14004e28a:	je     0x14004e2b0
   14004e28c:	xchg   edi,eax
   14004e28d:	(bad)  
   14004e28e:	in     al,dx
   14004e28f:	(bad)  
   14004e290:	jno    0x14004e23e
   14004e292:	mov    ebx,ebx
   14004e294:	push   0x263fe700
   14004e299:	in     al,0x83
   14004e29b:	sahf   
   14004e29c:	int    0xaa
   14004e29e:	in     eax,dx
   14004e29f:	(bad)  
   14004e2a0:	jno    0x14004e24e
   14004e2a2:	mov    ebx,ebx
   14004e2a4:	push   0xffffffffda3feb00
   14004e2a9:	sbb    edi,DWORD PTR [rcx+riz*2+0x32]
   14004e2ad:	push   rbp
   14004e2ae:	call   0x1bc20bcf2
   14004e2b3:	(bad)  
   14004e2b4:	xor    dl,BYTE PTR [rbp-0x18]
   14004e2b7:	(bad)  
   14004e2b8:	add    BYTE PTR [rax],al
   14004e2ba:	add    BYTE PTR [rax],al
   14004e2bc:	add    BYTE PTR [rax],al
   14004e2be:	call   0x14004e302
   14004e2c3:	add    BYTE PTR [rax],al
   14004e2c5:	add    ah,ch
   14004e2c7:	(bad)  
   14004e2c8:	es in  al,0x83
   14004e2cb:	sahf   
   14004e2cc:	int    0xaa
   14004e2ce:	repz (bad) 
   14004e2d0:	add    BYTE PTR [rax],al
   14004e2d2:	add    BYTE PTR [rax],al
   14004e2d4:	add    BYTE PTR [rax],al
   14004e2d6:	in     al,dx
   14004e2d7:	(bad)  
   14004e2d8:	add    BYTE PTR [rax],al
   14004e2da:	add    BYTE PTR [rax],al
   14004e2dc:	add    BYTE PTR [rax],al
   14004e2de:	in     al,dx
   14004e2df:	(bad)  
   14004e2e0:	add    BYTE PTR [rax],al
   14004e2e2:	add    BYTE PTR [rax],al
   14004e2e4:	add    BYTE PTR [rax],al
   14004e2e6:	call   0x1383c982a
   14004e2eb:	ret    0xaa64
   14004e2ee:	sar    BYTE PTR [rdi],1
   14004e2f0:	add    BYTE PTR [rax],al
   14004e2f2:	add    BYTE PTR [rax],al
   14004e2f4:	add    BYTE PTR [rax],al
   14004e2f6:	fdivr  DWORD PTR [rdi]
   14004e2f8:	mov    ch,0x37
   14004e2fa:	clc    
   14004e2fb:	ret    0xaa64
   14004e2fe:	sar    BYTE PTR [rdi],1
   14004e300:	es in  al,0x83
   14004e303:	sahf   
   14004e304:	int    0xaa
   14004e306:	loope  0x14004e347
   14004e308:	rex.WXB enter 0x3d07,0x9b
   14004e30d:	push   rbp
   14004e30e:	jmp    0x14004e352
   14004e313:	add    BYTE PTR [rax],al
   14004e315:	add    al,dl
   14004e317:	(bad)  
   14004e318:	ficomp DWORD PTR [rbx]
   14004e31a:	jl     0x14004e37d
   14004e31c:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e31f:	(bad)  
   14004e320:	rex.WXB enter 0x3d07,0x9b
   14004e325:	push   rbp
   14004e326:	jrcxz  0x14004e367
   14004e328:	rex.WXB enter 0x3d07,0x9b
   14004e32d:	push   rbp
   14004e32e:	jrcxz  0x14004e36f
   14004e330:	rex.WXB enter 0x3d07,0x9b
   14004e335:	push   rbp
   14004e336:	jrcxz  0x14004e377
   14004e338:	ficomp DWORD PTR [rbx]
   14004e33a:	jl     0x14004e39d
   14004e33c:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e33f:	(bad)  
   14004e340:	(bad)  
   14004e341:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e342:	call   0x11a04118f
   14004e347:	(bad)  
   14004e348:	es in  al,0x83
   14004e34b:	sahf   
   14004e34c:	int    0xaa
   14004e34e:	jrcxz  0x14004e38f
   14004e350:	ficomp DWORD PTR [rbx]
   14004e352:	jl     0x14004e3b5
   14004e354:	xor    dl,BYTE PTR [rbp-0x1e]
   14004e357:	(bad)  
   14004e358:	add    BYTE PTR [rax],al
   14004e35a:	add    BYTE PTR [rax],al
   14004e35c:	add    BYTE PTR [rax],al
   14004e35e:	sar    BYTE PTR [rdi],0x1e
   14004e361:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e362:	call   0x1120411af
   14004e367:	(bad)  
   14004e368:	ficomp DWORD PTR [rbx]
   14004e36a:	jl     0x14004e3cd
   14004e36c:	xor    dl,BYTE PTR [rbp-0x1e]
   14004e36f:	(bad)  
   14004e370:	add    BYTE PTR [rax],al
   14004e372:	add    BYTE PTR [rax],al
   14004e374:	add    BYTE PTR [rax],al
   14004e376:	sar    BYTE PTR [rdi],0xda
   14004e379:	sbb    edi,DWORD PTR [rcx+riz*2+0x32]
   14004e37d:	push   rbp
   14004e37e:	out    dx,al
   14004e37f:	(bad)  
   14004e380:	ficomp DWORD PTR [rbx]
   14004e382:	jl     0x14004e3e5
   14004e384:	xor    dl,BYTE PTR [rbp-0x1e]
   14004e387:	(bad)  
   14004e388:	(bad)  
   14004e389:	push   rbx
   14004e38a:	je     0x14004e3b0
   14004e38c:	xchg   edi,eax
   14004e38d:	jmp    rsp
   14004e38f:	(bad)  
   14004e390:	rex.WXB enter 0x3d07,0x9b
   14004e395:	push   rbp
   14004e396:	jrcxz  0x14004e3d7
   14004e398:	rex.WXB enter 0x3d07,0x9b
   14004e39d:	push   rbp
   14004e39e:	jrcxz  0x14004e3df
   14004e3a0:	add    BYTE PTR [rax],al
   14004e3a2:	add    BYTE PTR [rax],al
   14004e3a4:	add    BYTE PTR [rax],al
   14004e3a6:	fdivr  DWORD PTR [rdi]
   14004e3a8:	mov    ch,0x37
   14004e3aa:	clc    
   14004e3ab:	ret    0xaa64
   14004e3ae:	loop   0x14004e3ef
   14004e3b0:	imul   ebp,DWORD PTR [rdi-0x10],0xd554c985
   14004e3b7:	(bad)  
   14004e3b8:	ficomp DWORD PTR [rbx]
   14004e3ba:	jl     0x14004e41d
   14004e3bc:	xor    dl,BYTE PTR [rbp-0x1e]
   14004e3bf:	(bad)  
   14004e3c0:	ficomp DWORD PTR [rbx]
   14004e3c2:	jl     0x14004e425
   14004e3c4:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e3c7:	(bad)  
   14004e3c8:	ficomp DWORD PTR [rbx]
   14004e3ca:	jl     0x14004e42d
   14004e3cc:	xor    dl,BYTE PTR [rbp-0x12]
   14004e3cf:	(bad)  
   14004e3d0:	mov    ch,0x37
   14004e3d2:	clc    
   14004e3d3:	ret    0xaa64
   14004e3d6:	in     al,0x3f
   14004e3d8:	ficomp DWORD PTR [rbx]
   14004e3da:	jl     0x14004e43d
   14004e3dc:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e3df:	(bad)  
   14004e3e0:	es in  al,0x83
   14004e3e3:	sahf   
   14004e3e4:	int    0xaa
   14004e3e6:	jrcxz  0x14004e427
   14004e3e8:	mov    ch,0x37
   14004e3ea:	clc    
   14004e3eb:	ret    0xaa64
   14004e3ee:	fdivr  DWORD PTR [rdi]
   14004e3f0:	pop    rbx
   14004e3f1:	rex.X
   14004e3f2:	ds call 0x17fbf90d1
   14004e3f8:	mov    ch,0x37
   14004e3fa:	clc    
   14004e3fb:	ret    0xaa64
   14004e3fe:	fdivr  DWORD PTR [rdi]
   14004e400:	rex.WXB enter 0x3d07,0x9b
   14004e405:	push   rbp
   14004e406:	in     eax,0x3f
	...
   14004e518:	imul   ebp,DWORD PTR [rdi-0x10],0xc154c985
   14004e51f:	(bad)  
   14004e520:	rex.WXB enter 0x3d07,0x9b
   14004e525:	push   rbp
   14004e526:	jrcxz  0x14004e567
   14004e528:	add    BYTE PTR [rax],al
   14004e52a:	add    BYTE PTR [rax],al
   14004e52c:	add    BYTE PTR [rax],al
   14004e52e:	out    0x3f,al
   14004e530:	ficomp DWORD PTR [rbx]
   14004e532:	jl     0x14004e595
   14004e534:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e537:	(bad)  
   14004e538:	es in  al,0x83
   14004e53b:	sahf   
   14004e53c:	int    0xaa
   14004e53e:	out    0x3f,eax
   14004e540:	pop    rbx
   14004e541:	rex.X
   14004e542:	ds call 0x17fbf9221
   14004e548:	ficomp DWORD PTR [rbx]
   14004e54a:	jl     0x14004e5ad
   14004e54c:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e54f:	(bad)  
   14004e550:	rex.WXB enter 0x3d07,0x9b
   14004e555:	push   rbp
   14004e556:	xlat   BYTE PTR ds:[rbx]
   14004e557:	(bad)  
   14004e558:	es in  al,0x83
   14004e55b:	sahf   
   14004e55c:	int    0xaa
   14004e55e:	out    dx,eax
   14004e55f:	(bad)  
   14004e560:	add    BYTE PTR [rax],al
   14004e562:	add    BYTE PTR [rax],al
   14004e564:	add    BYTE PTR [rax],al
   14004e566:	fdivr  QWORD PTR [rdi]
   14004e568:	add    BYTE PTR [rax],al
   14004e56a:	add    BYTE PTR [rax],al
   14004e56c:	add    BYTE PTR [rax],al
   14004e56e:	loop   0x14004e5af
   14004e570:	mov    ch,0x37
   14004e572:	clc    
   14004e573:	ret    0xaa64
   14004e576:	in     al,0x3f
   14004e578:	rex.WXB enter 0x3d07,0x9b
   14004e57d:	push   rbp
   14004e57e:	xlat   BYTE PTR ds:[rbx]
   14004e57f:	(bad)  
   14004e580:	es in  al,0x83
   14004e583:	sahf   
   14004e584:	int    0xaa
   14004e586:	out    dx,eax
   14004e587:	(bad)  
   14004e588:	rex.WXB enter 0x3d07,0x9b
   14004e58d:	push   rbp
   14004e58e:	jmp    0x147cd30d2
   14004e593:	cmp    eax,0x3fd7559b
   14004e598:	mov    ch,0x37
   14004e59a:	clc    
   14004e59b:	ret    0xaa64
   14004e59e:	in     al,0x3f
   14004e5a0:	xchg   edi,eax
   14004e5a1:	nop
   14004e5a2:	(bad)  
   14004e5a4:	ss stos DWORD PTR es:[rdi],eax
   14004e5a6:	fidivr DWORD PTR [rdi]
   14004e5a8:	(bad)  
   14004e5a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004e5aa:	call   0x11a0413f7
   14004e5af:	(bad)  
   14004e5b0:	xchg   edi,eax
   14004e5b1:	nop
   14004e5b2:	(bad)  
   14004e5b4:	ss stos DWORD PTR es:[rdi],eax
   14004e5b6:	(bad)  
   14004e5b7:	(bad)  
   14004e5b8:	ficomp DWORD PTR [rbx]
   14004e5ba:	jl     0x14004e61d
   14004e5bc:	xor    dl,BYTE PTR [rbp-0x1e]
   14004e5bf:	(bad)  
   14004e5c0:	rex.WXB enter 0x3d07,0x9b
   14004e5c5:	push   rbp
   14004e5c6:	out    0x3f,eax
   14004e5c8:	imul   ebp,DWORD PTR [rdi-0x10],0xc154c985
   14004e5cf:	(bad)  
   14004e5d0:	xchg   edi,eax
   14004e5d1:	nop
   14004e5d2:	(bad)  
   14004e5d4:	ss stos DWORD PTR es:[rdi],eax
   14004e5d6:	sar    BYTE PTR [rdi],cl
   14004e5d8:	add    BYTE PTR [rax],al
   14004e5da:	add    BYTE PTR [rax],al
   14004e5dc:	add    BYTE PTR [rax],al
   14004e5de:	sar    BYTE PTR [rdi],1
   14004e5e0:	add    BYTE PTR [rax],al
   14004e5e2:	add    BYTE PTR [rax],al
   14004e5e4:	add    BYTE PTR [rax],al
   14004e5e6:	fdivr  QWORD PTR [rdi]
   14004e5e8:	add    BYTE PTR [rax],al
   14004e5ea:	add    BYTE PTR [rax],al
   14004e5ec:	add    BYTE PTR [rax],al
   14004e5ee:	loop   0x14004e62f
   14004e5f0:	ficomp DWORD PTR [rbx]
   14004e5f2:	jl     0x14004e655
   14004e5f4:	xor    dl,BYTE PTR [rbp-0x10]
   14004e5f7:	(bad)  
   14004e5f8:	(bad)  
   14004e5f9:	sub    DWORD PTR [rdx],edi
   14004e5fb:	xchg   edx,eax
   14004e5fc:	retf   
   14004e5fd:	jg     0x14004e5ef
   14004e5ff:	(bad)  
   14004e600:	ficomp DWORD PTR [rbx]
   14004e602:	jl     0x14004e665
   14004e604:	xor    dl,BYTE PTR [rbp-0xf]
   14004e607:	(bad)  
   14004e608:	es in  al,0x83
   14004e60b:	sahf   
   14004e60c:	int    0xaa
   14004e60e:	jrcxz  0x14004e64f
   14004e610:	mov    ch,0x37
   14004e612:	clc    
   14004e613:	ret    0xaa64
   14004e616:	in     al,dx
   14004e617:	(bad)  
   14004e618:	mov    ch,0x37
   14004e61a:	clc    
   14004e61b:	ret    0xaa64
   14004e61e:	in     al,dx
   14004e61f:	(bad)  
   14004e620:	mov    ch,0x37
   14004e622:	clc    
   14004e623:	ret    0xaa64
   14004e626:	in     al,dx
   14004e627:	(bad)  
   14004e628:	mov    ch,0x37
   14004e62a:	clc    
   14004e62b:	ret    0xaa64
   14004e62e:	in     al,dx
   14004e62f:	(bad)  
   14004e630:	mov    ch,0x37
   14004e632:	clc    
   14004e633:	ret    0xaa64
   14004e636:	in     al,dx
   14004e637:	(bad)  
   14004e638:	mov    ch,0x37
   14004e63a:	clc    
   14004e63b:	ret    0xaa64
   14004e63e:	in     al,dx
   14004e63f:	(bad)  
   14004e640:	in     eax,dx
   14004e641:	or     eax,0x2a9930be
   14004e646:	hlt    
   14004e647:	(bad)  
   14004e648:	jno    0x14004e5f6
   14004e64a:	mov    ebx,ebx
   14004e64c:	push   0xffffffffb53feb00
   14004e651:	(bad)  
   14004e652:	clc    
   14004e653:	ret    0xaa64
   14004e656:	out    0x3f,al
   14004e658:	mov    ch,0x37
   14004e65a:	clc    
   14004e65b:	ret    0xaa64
   14004e65e:	out    0x3f,al
   14004e660:	mov    ch,0x37
   14004e662:	clc    
   14004e663:	ret    0xaa64
   14004e666:	out    0x3f,al
   14004e668:	jno    0x14004e616
   14004e66a:	mov    ebx,ebx
   14004e66c:	push   0x3fe700
   14004e671:	add    BYTE PTR [rax],al
   14004e673:	add    BYTE PTR [rax],al
   14004e675:	add    al,dl
   14004e677:	(bad)  
   14004e678:	xchg   edi,eax
   14004e679:	nop
   14004e67a:	(bad)  
   14004e67c:	ss stos DWORD PTR es:[rdi],eax
   14004e67e:	(bad)  
   14004e67f:	(bad)  
   14004e680:	rex.WXB enter 0x3d07,0x9b
   14004e685:	push   rbp
   14004e686:	fstp   TBYTE PTR [rdi]
   14004e688:	rex.WXB enter 0x3d07,0x9b
   14004e68d:	push   rbp
   14004e68e:	xlat   BYTE PTR ds:[rbx]
   14004e68f:	(bad)  
   14004e690:	ficomp DWORD PTR [rbx]
   14004e692:	jl     0x14004e6f5
   14004e694:	xor    dl,BYTE PTR [rbp-0x14]
   14004e697:	(bad)  
   14004e698:	ficomp DWORD PTR [rbx]
   14004e69a:	jl     0x14004e6fd
   14004e69c:	xor    dl,BYTE PTR [rbp-0x18]
   14004e69f:	(bad)  
   14004e6a0:	(bad)  
   14004e6a1:	push   rbx
   14004e6a2:	je     0x14004e6c8
   14004e6a4:	xchg   edi,eax
   14004e6a5:	(bad)  
   14004e6a6:	in     al,dx
   14004e6a7:	(bad)  
   14004e6a8:	(bad)  
   14004e6a9:	push   rbx
   14004e6aa:	je     0x14004e6d0
   14004e6ac:	xchg   edi,eax
   14004e6ad:	(bad)  
   14004e6ae:	in     al,dx
   14004e6af:	(bad)  
   14004e6b0:	(bad)  
   14004e6b1:	push   rbx
   14004e6b2:	je     0x14004e6d8
   14004e6b4:	xchg   edi,eax
   14004e6b5:	(bad)  
   14004e6b6:	in     al,dx
   14004e6b7:	(bad)  
   14004e6b8:	(bad)  
   14004e6b9:	push   rbx
   14004e6ba:	je     0x14004e6e0
   14004e6bc:	xchg   edi,eax
   14004e6bd:	(bad)  
   14004e6be:	in     al,dx
   14004e6bf:	(bad)  
   14004e6c0:	(bad)  
   14004e6c1:	push   rbx
   14004e6c2:	je     0x14004e6e8
   14004e6c4:	xchg   edi,eax
   14004e6c5:	(bad)  
   14004e6c6:	in     al,dx
   14004e6c7:	(bad)  
   14004e6c8:	ficomp DWORD PTR [rbx]
   14004e6ca:	jl     0x14004e72d
   14004e6cc:	xor    dl,BYTE PTR [rbp-0x1e]
   14004e6cf:	(bad)  
   14004e6d0:	add    BYTE PTR [rax],al
   14004e6d2:	add    BYTE PTR [rax],al
   14004e6d4:	add    BYTE PTR [rax],al
   14004e6d6:	out    dx,al
   14004e6d7:	(bad)  
   14004e6d8:	add    BYTE PTR [rax],al
   14004e6da:	add    BYTE PTR [rax],al
   14004e6dc:	add    BYTE PTR [rax],al
   14004e6de:	call   0x14004e722
   14004e6e3:	add    BYTE PTR [rax],al
   14004e6e5:	add    al,ch
   14004e6e7:	(bad)  
   14004e6e8:	add    BYTE PTR [rax],al
   14004e6ea:	add    BYTE PTR [rax],al
   14004e6ec:	add    BYTE PTR [rax],al
   14004e6ee:	call   0x14004e732
   14004e6f3:	add    BYTE PTR [rax],al
   14004e6f5:	add    al,ch
   14004e6f7:	(bad)  
   14004e6f8:	add    BYTE PTR [rax],al
   14004e6fa:	add    BYTE PTR [rax],al
   14004e6fc:	add    BYTE PTR [rax],al
   14004e6fe:	in     al,dx
   14004e6ff:	(bad)  
   14004e700:	jno    0x14004e6ae
   14004e702:	mov    ebx,ebx
   14004e704:	push   0x263fe700
   14004e709:	in     al,0x83
   14004e70b:	sahf   
   14004e70c:	int    0xaa
   14004e70e:	in     eax,0x3f
   14004e710:	ficomp DWORD PTR [rbx]
   14004e712:	jl     0x14004e775
   14004e714:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e717:	(bad)  
   14004e718:	ficomp DWORD PTR [rbx]
   14004e71a:	jl     0x14004e77d
   14004e71c:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e71f:	(bad)  
   14004e720:	ficomp DWORD PTR [rbx]
   14004e722:	jl     0x14004e785
   14004e724:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e727:	(bad)  
   14004e728:	ficomp DWORD PTR [rbx]
   14004e72a:	jl     0x14004e78d
   14004e72c:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e72f:	(bad)  
   14004e730:	ficomp DWORD PTR [rbx]
   14004e732:	jl     0x14004e795
   14004e734:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e737:	(bad)  
   14004e738:	ficomp DWORD PTR [rbx]
   14004e73a:	jl     0x14004e79d
   14004e73c:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e73f:	(bad)  
   14004e740:	cmp    esi,edx
   14004e742:	(bad)
   14004e745:	xor    cl,0x3f
   14004e748:	rex.WXB enter 0x3d07,0x9b
   14004e74d:	push   rbp
   14004e74e:	jrcxz  0x14004e78f
   14004e750:	ficomp DWORD PTR [rbx]
   14004e752:	jl     0x14004e7b5
   14004e754:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e757:	(bad)  
   14004e758:	ficomp DWORD PTR [rbx]
   14004e75a:	jl     0x14004e7bd
   14004e75c:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e75f:	(bad)  
   14004e760:	ficomp DWORD PTR [rbx]
   14004e762:	jl     0x14004e7c5
   14004e764:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e767:	(bad)  
   14004e768:	ficomp DWORD PTR [rbx]
   14004e76a:	jl     0x14004e7cd
   14004e76c:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e76f:	(bad)  
   14004e770:	xchg   edi,eax
   14004e771:	nop
   14004e772:	(bad)  
   14004e774:	ss stos DWORD PTR es:[rdi],eax
   14004e776:	(bad)  
   14004e777:	(bad)  
   14004e778:	add    BYTE PTR [rax],al
   14004e77a:	add    BYTE PTR [rax],al
   14004e77c:	add    BYTE PTR [rax],al
   14004e77e:	sar    BYTE PTR [rdi],1
   14004e780:	xchg   edi,eax
   14004e781:	nop
   14004e782:	(bad)  
   14004e784:	ss stos DWORD PTR es:[rdi],eax
   14004e786:	fidivr DWORD PTR [rdi]
   14004e788:	rex.WXB enter 0x3d07,0x9b
   14004e78d:	push   rbp
   14004e78e:	xlat   BYTE PTR ds:[rbx]
   14004e78f:	(bad)  
   14004e790:	mov    ch,0x37
   14004e792:	clc    
   14004e793:	ret    0xaa64
   14004e796:	in     al,0x3f
   14004e798:	ficomp DWORD PTR [rbx]
   14004e79a:	jl     0x14004e7fd
   14004e79c:	xor    dl,BYTE PTR [rbp-0x1e]
   14004e79f:	(bad)  
   14004e7a0:	(bad)  
   14004e7a1:	push   rbx
   14004e7a2:	je     0x14004e7c8
   14004e7a4:	xchg   edi,eax
   14004e7a5:	jmp    rsp
   14004e7a7:	(bad)  
   14004e7a8:	(bad)  
   14004e7a9:	push   rbx
   14004e7aa:	je     0x14004e7d0
   14004e7ac:	xchg   edi,eax
   14004e7ad:	jmp    rsp
   14004e7af:	(bad)  
   14004e7b0:	(bad)  
   14004e7b1:	push   rbx
   14004e7b2:	je     0x14004e7d8
   14004e7b4:	xchg   edi,eax
   14004e7b5:	jmp    rsp
   14004e7b7:	(bad)  
   14004e7b8:	mov    ch,0x37
   14004e7ba:	clc    
   14004e7bb:	ret    0xaa64
   14004e7be:	in     al,0x3f
   14004e7c0:	(bad)  
   14004e7c1:	push   rbx
   14004e7c2:	je     0x14004e7e8
   14004e7c4:	xchg   edi,eax
   14004e7c5:	jmp    rsp
   14004e7c7:	(bad)  
   14004e7c8:	ficomp DWORD PTR [rbx]
   14004e7ca:	jl     0x14004e82d
   14004e7cc:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e7cf:	(bad)  
   14004e7d0:	(bad)  
   14004e7d1:	push   rbx
   14004e7d2:	je     0x14004e7f8
   14004e7d4:	xchg   edi,eax
   14004e7d5:	jmp    rsp
   14004e7d7:	(bad)  
   14004e7d8:	ficomp DWORD PTR [rbx]
   14004e7da:	jl     0x14004e83d
   14004e7dc:	xor    dl,BYTE PTR [rbp-0x1e]
   14004e7df:	(bad)  
   14004e7e0:	ficomp DWORD PTR [rbx]
   14004e7e2:	jl     0x14004e845
   14004e7e4:	xor    dl,BYTE PTR [rbp-0x1e]
   14004e7e7:	(bad)  
   14004e7e8:	ficomp DWORD PTR [rbx]
   14004e7ea:	jl     0x14004e84d
   14004e7ec:	xor    dl,BYTE PTR [rbp-0x1e]
   14004e7ef:	(bad)  
   14004e7f0:	es in  al,0x83
   14004e7f3:	sahf   
   14004e7f4:	int    0xaa
   14004e7f6:	loope  0x14004e837
   14004e7f8:	ficomp DWORD PTR [rbx]
   14004e7fa:	jl     0x14004e85d
   14004e7fc:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e7ff:	(bad)  
   14004e800:	rex.WXB enter 0x3d07,0x9b
   14004e805:	push   rbp
   14004e806:	jrcxz  0x14004e847
   14004e808:	ficomp DWORD PTR [rbx]
   14004e80a:	jl     0x14004e86d
   14004e80c:	xor    dl,BYTE PTR [rbp-0x1c]
   14004e80f:	(bad)  
   14004e810:	cwde   
   14004e811:	(bad)  
   14004e812:	add    al,0x40
   14004e814:	add    DWORD PTR [rax],eax
   14004e816:	add    BYTE PTR [rax],al
   14004e818:	xchg   ebx,eax
   14004e819:	ud0    eax,DWORD PTR [rax]
   14004e81c:	add    BYTE PTR [rax],al
   14004e81e:	add    BYTE PTR [rax],al
   14004e820:	test   al,0x7
   14004e822:	add    al,0x40
   14004e824:	add    DWORD PTR [rax],eax
   14004e826:	add    BYTE PTR [rax],al
   14004e828:	sbb    BYTE PTR [rbx],ah
   14004e82a:	cli    
   14004e82b:	add    BYTE PTR [rax],al
   14004e82d:	add    BYTE PTR [rax],al
   14004e82f:	add    BYTE PTR [rax+0x1400407],bh
   14004e835:	add    BYTE PTR [rax],al
   14004e837:	add    BYTE PTR [rdi],dl
   14004e839:	and    al,0xff
   14004e83b:	add    BYTE PTR [rax],al
   14004e83d:	add    BYTE PTR [rax],al
   14004e83f:	add    al,cl
   14004e841:	(bad)  
   14004e842:	add    al,0x40
   14004e844:	add    DWORD PTR [rax],eax
   14004e846:	add    BYTE PTR [rax],al
   14004e848:	(bad)  
   14004e849:	and    al,0xee
   14004e84b:	add    BYTE PTR [rax],al
   14004e84d:	add    BYTE PTR [rax],al
   14004e84f:	add    al,bl
   14004e851:	(bad)  
   14004e852:	add    al,0x40
   14004e854:	add    DWORD PTR [rax],eax
   14004e856:	add    BYTE PTR [rax],al
   14004e858:	(bad)  
   14004e859:	and    al,0xcd
   14004e85b:	add    BYTE PTR [rax],al
   14004e85d:	add    BYTE PTR [rax],al
   14004e85f:	add    al,ch
   14004e861:	(bad)  
   14004e862:	add    al,0x40
   14004e864:	add    DWORD PTR [rax],eax
   14004e866:	add    BYTE PTR [rax],al
   14004e868:	sbb    BYTE PTR [rdx],ah
   14004e86a:	mov    eax,DWORD PTR [rax]
   14004e86c:	add    BYTE PTR [rax],al
   14004e86e:	add    BYTE PTR [rax],al
   14004e870:	clc    
   14004e871:	(bad)  
   14004e872:	add    al,0x40
   14004e874:	add    DWORD PTR [rax],eax
   14004e876:	add    BYTE PTR [rax],al
   14004e878:	jno    0x14004e7fa
   14004e87a:	inc    DWORD PTR [rax]
   14004e87c:	add    BYTE PTR [rax],al
   14004e87e:	add    BYTE PTR [rax],al
   14004e880:	or     BYTE PTR [rax],cl
   14004e882:	add    al,0x40
   14004e884:	add    DWORD PTR [rax],eax
   14004e886:	add    BYTE PTR [rax],al
   14004e888:	jno    0x14004e80a
   14004e88a:	inc    DWORD PTR [rax]
   14004e88c:	add    BYTE PTR [rax],al
   14004e88e:	add    BYTE PTR [rax],al
   14004e890:	sbb    BYTE PTR [rax],cl
   14004e892:	add    al,0x40
   14004e894:	add    DWORD PTR [rax],eax
   14004e896:	add    BYTE PTR [rax],al
   14004e898:	jno    0x14004e81a
   14004e89a:	out    dx,al
   14004e89b:	add    BYTE PTR [rax],al
   14004e89d:	add    BYTE PTR [rax],al
   14004e89f:	add    BYTE PTR [rax],ch
   14004e8a1:	or     BYTE PTR [rax+rax*2],al
   14004e8a4:	add    DWORD PTR [rax],eax
   14004e8a6:	add    BYTE PTR [rax],al
   14004e8a8:	jno    0x14004e82a
   14004e8aa:	int    0x0
   14004e8ac:	add    BYTE PTR [rax],al
   14004e8ae:	add    BYTE PTR [rax],al
   14004e8b0:	cmp    BYTE PTR [rax],cl
   14004e8b2:	add    al,0x40
   14004e8b4:	add    DWORD PTR [rax],eax
   14004e8b6:	add    BYTE PTR [rax],al
   14004e8b8:	jno    0x14004e83a
   14004e8ba:	mov    eax,DWORD PTR [rax]
   14004e8bc:	add    BYTE PTR [rax],al
   14004e8be:	add    BYTE PTR [rax],al
   14004e8c0:	or     BYTE PTR [rax+rax*2],r8b
   14004e8c4:	add    DWORD PTR [rax],eax
   14004e8c6:	add    BYTE PTR [rax],al
   14004e8c8:	jg     0x14004e8d9
   14004e8ca:	inc    DWORD PTR [rax]
   14004e8cc:	add    BYTE PTR [rax],al
   14004e8ce:	add    BYTE PTR [rax],al
   14004e8d0:	rex.WR or BYTE PTR [rax+rax*2],r8b
   14004e8d4:	add    DWORD PTR [rax],eax
   14004e8d6:	add    BYTE PTR [rax],al
   14004e8d8:	jg     0x14004e8e9
   14004e8da:	inc    DWORD PTR [rax]
   14004e8dc:	add    BYTE PTR [rax],al
   14004e8de:	add    BYTE PTR [rax],al
   14004e8e0:	push   rsp
   14004e8e1:	or     BYTE PTR [rax+rax*2],al
   14004e8e4:	add    DWORD PTR [rax],eax
   14004e8e6:	add    BYTE PTR [rax],al
   14004e8e8:	jg     0x14004e8f9
   14004e8ea:	out    dx,al
   14004e8eb:	add    BYTE PTR [rax],al
   14004e8ed:	add    BYTE PTR [rax],al
   14004e8ef:	add    BYTE PTR [rax+rcx*1+0x4],bl
   14004e8f3:	rex add DWORD PTR [rax],eax
   14004e8f6:	add    BYTE PTR [rax],al
   14004e8f8:	jg     0x14004e908
   14004e8fa:	int    0x0
   14004e8fc:	add    BYTE PTR [rax],al
   14004e8fe:	add    BYTE PTR [rax],al
   14004e900:	or     BYTE PTR fs:[rax+rax*2],al
   14004e904:	add    DWORD PTR [rax],eax
   14004e906:	add    BYTE PTR [rax],al
   14004e908:	jg     0x14004e918
   14004e90a:	mov    eax,DWORD PTR [rax]
   14004e90c:	add    BYTE PTR [rax],al
   14004e90e:	add    BYTE PTR [rax],al
   14004e910:	ins    BYTE PTR es:[rdi],dx
   14004e911:	or     BYTE PTR [rax+rax*2],al
   14004e914:	add    DWORD PTR [rax],eax
   14004e916:	add    BYTE PTR [rax],al
   14004e918:	sub    bl,BYTE PTR [rdx]
   14004e91a:	cmc    
   14004e91b:	add    BYTE PTR [rax],al
   14004e91d:	add    BYTE PTR [rax],al
   14004e91f:	add    BYTE PTR [rax+rcx*1+0x4],dh
   14004e923:	rex add DWORD PTR [rax],eax
   14004e926:	add    BYTE PTR [rax],al
   14004e928:	(bad)  
   14004e929:	cmp    bh,bh
   14004e92b:	add    BYTE PTR [rax],al
   14004e92d:	add    BYTE PTR [rax],al
   14004e92f:	add    BYTE PTR [rax+0x1400408],al
   14004e935:	add    BYTE PTR [rax],al
   14004e937:	add    BYTE PTR [rdi],dl
   14004e939:	cmp    bh,bh
   14004e93b:	add    BYTE PTR [rax],al
   14004e93d:	add    BYTE PTR [rax],al
   14004e93f:	add    BYTE PTR [rax+0x1400408],cl
   14004e945:	add    BYTE PTR [rax],al
   14004e947:	add    BYTE PTR [rdi],dl
   14004e949:	cmp    ch,dh
   14004e94b:	add    BYTE PTR [rax],al
   14004e94d:	add    BYTE PTR [rax],al
   14004e94f:	add    BYTE PTR [rax+0x1400408],dl
   14004e955:	add    BYTE PTR [rax],al
   14004e957:	add    BYTE PTR [rsi],dl
   14004e959:	cmp    cl,ch
   14004e95b:	add    BYTE PTR [rax],al
   14004e95d:	add    BYTE PTR [rax],al
   14004e95f:	add    BYTE PTR [rax+0x1400408],bl
   14004e965:	add    BYTE PTR [rax],al
   14004e967:	add    BYTE PTR [rdi],dl
   14004e969:	cmp    cl,BYTE PTR [rbx+0x0]
   14004e96f:	add    ah,dh
   14004e971:	in     al,0x3
   14004e973:	rex add DWORD PTR [rax],eax
	...
   14004e97e:	add    BYTE PTR [rax],al
   14004e980:	movabs al,ds:0x1900000001400408
   14004e989:	xor    edi,edi
   14004e98b:	add    BYTE PTR [rax],al
   14004e98d:	add    BYTE PTR [rax],al
   14004e98f:	add    BYTE PTR [rax+0x1400408],dh
   14004e995:	add    BYTE PTR [rax],al
   14004e997:	add    BYTE PTR [rdx+0xffff],ch
   14004e99d:	add    BYTE PTR [rax],al
   14004e99f:	add    BYTE PTR [rax+0x1400408],bh
   14004e9a5:	add    BYTE PTR [rax],al
   14004e9a7:	add    BYTE PTR [rdx+0xffff],ch
   14004e9ad:	add    BYTE PTR [rax],al
   14004e9af:	add    al,al
   14004e9b1:	or     BYTE PTR [rax+rax*2],al
   14004e9b4:	add    DWORD PTR [rax],eax
   14004e9b6:	add    BYTE PTR [rax],al
   14004e9b8:	stos   BYTE PTR es:[rdi],al
   14004e9b9:	(bad)  
   14004e9ba:	out    dx,al
   14004e9bb:	add    BYTE PTR [rax],al
   14004e9bd:	add    BYTE PTR [rax],al
   14004e9bf:	add    al,cl
   14004e9c1:	or     BYTE PTR [rax+rax*2],al
   14004e9c4:	add    DWORD PTR [rax],eax
   14004e9c6:	add    BYTE PTR [rax],al
   14004e9c8:	stos   BYTE PTR es:[rdi],al
   14004e9c9:	dec    ebp
   14004e9cb:	add    BYTE PTR [rax],al
   14004e9cd:	add    BYTE PTR [rax],al
   14004e9cf:	add    al,dl
   14004e9d1:	or     BYTE PTR [rax+rax*2],al
   14004e9d4:	add    DWORD PTR [rax],eax
   14004e9d6:	add    BYTE PTR [rax],al
   14004e9d8:	stos   BYTE PTR es:[rdi],al
   14004e9d9:	dec    DWORD PTR [rbx+0x0]
   14004e9df:	add    al,bl
   14004e9e1:	or     BYTE PTR [rax+rax*2],al
   14004e9e4:	add    DWORD PTR [rax],eax
   14004e9e6:	add    BYTE PTR [rax],al
   14004e9e8:	ror    dh,0xe2
   14004e9eb:	add    BYTE PTR [rax],al
   14004e9ed:	add    BYTE PTR [rax],al
   14004e9ef:	add    ah,ah
   14004e9f1:	or     BYTE PTR [rax+rax*2],al
   14004e9f4:	add    DWORD PTR [rax],eax
   14004e9f6:	add    BYTE PTR [rax],al
   14004e9f8:	add    BYTE PTR [rsi+0xa5],bh
   14004e9fe:	add    BYTE PTR [rax],al
   14004ea00:	in     al,dx
   14004ea01:	or     BYTE PTR [rax+rax*2],al
   14004ea04:	add    DWORD PTR [rax],eax
   14004ea06:	add    BYTE PTR [rax],al
   14004ea08:	add    BYTE PTR [rdi+0xff],bh
   14004ea0e:	add    BYTE PTR [rax],al
   14004ea10:	hlt    
   14004ea11:	or     BYTE PTR [rax+rax*2],al
   14004ea14:	add    DWORD PTR [rax],eax
   14004ea16:	add    BYTE PTR [rax],al
   14004ea18:	add    BYTE PTR [rdi+0xee],bh
   14004ea1e:	add    BYTE PTR [rax],al
   14004ea20:	cld    
   14004ea21:	or     BYTE PTR [rax+rax*2],al
   14004ea24:	add    DWORD PTR [rax],eax
   14004ea26:	add    BYTE PTR [rax],al
   14004ea28:	add    BYTE PTR [rdi+0xcd],bh
   14004ea2e:	add    BYTE PTR [rax],al
   14004ea30:	add    al,0x9
   14004ea32:	add    al,0x40
   14004ea34:	add    DWORD PTR [rax],eax
   14004ea36:	add    BYTE PTR [rax],al
   14004ea38:	add    BYTE PTR [rsi+0x8b],bh
   14004ea3e:	add    BYTE PTR [rax],al
   14004ea40:	adc    BYTE PTR [rcx],cl
   14004ea42:	add    al,0x40
   14004ea44:	add    DWORD PTR [rax],eax
   14004ea46:	add    BYTE PTR [rax],al
   14004ea48:	(bad)  
   14004ea49:	movsxd ebx,esi
   14004ea4b:	add    BYTE PTR [rax],al
   14004ea4d:	add    BYTE PTR [rax],al
   14004ea4f:	add    BYTE PTR [rax],ah
   14004ea51:	or     DWORD PTR [rax+rax*2],eax
   14004ea54:	add    DWORD PTR [rax],eax
   14004ea56:	add    BYTE PTR [rax],al
   14004ea58:	(bad)  
   14004ea59:	inc    DWORD PTR fs:[rax]
   14004ea5c:	add    BYTE PTR [rax],al
   14004ea5e:	add    BYTE PTR [rax],al
   14004ea60:	xor    BYTE PTR [rcx],cl
   14004ea62:	add    al,0x40
   14004ea64:	add    DWORD PTR [rax],eax
   14004ea66:	add    BYTE PTR [rax],al
   14004ea68:	(bad)  
   14004ea69:	movsxd ebp,esi
   14004ea6b:	add    BYTE PTR [rax],al
   14004ea6d:	add    BYTE PTR [rax],al
   14004ea6f:	add    BYTE PTR [rax+0x9],al
   14004ea72:	add    al,0x40
   14004ea74:	add    DWORD PTR [rax],eax
   14004ea76:	add    BYTE PTR [rax],al
   14004ea78:	(bad)  
   14004ea79:	movsxd ecx,ebp
   14004ea7b:	add    BYTE PTR [rax],al
   14004ea7d:	add    BYTE PTR [rax],al
   14004ea7f:	add    BYTE PTR [rax+0x9],dl
   14004ea82:	add    al,0x40
   14004ea84:	add    DWORD PTR [rax],eax
   14004ea86:	add    BYTE PTR [rax],al
   14004ea88:	(bad)  
   14004ea89:	movsxd ecx,DWORD PTR [rbx+0x0]
   14004ea8f:	add    BYTE PTR [rax+0x9],ah
   14004ea92:	add    al,0x40
   14004ea94:	add    DWORD PTR [rax],eax
   14004ea96:	add    BYTE PTR [rax],al
   14004ea98:	and    BYTE PTR [rdi-0x60],0x0
   14004ea9c:	add    BYTE PTR [rax],al
   14004ea9e:	add    BYTE PTR [rax],al
   14004eaa0:	jo     0x14004eaab
   14004eaa2:	add    al,0x40
   14004eaa4:	add    DWORD PTR [rax],eax
   14004eaa6:	add    BYTE PTR [rax],al
   14004eaa8:	and    DWORD PTR [rdi-0x1],0x0
   14004eaac:	add    BYTE PTR [rax],al
   14004eaae:	add    BYTE PTR [rax],al
   14004eab0:	or     BYTE PTR [rcx],0x4
   14004eab3:	rex add DWORD PTR [rax],eax
   14004eab6:	add    BYTE PTR [rax],al
   14004eab8:	and    DWORD PTR [rsi-0x12],0x0
   14004eabc:	add    BYTE PTR [rax],al
   14004eabe:	add    BYTE PTR [rax],al
   14004eac0:	nop
   14004eac1:	or     DWORD PTR [rax+rax*2],eax
   14004eac4:	add    DWORD PTR [rax],eax
   14004eac6:	add    BYTE PTR [rax],al
   14004eac8:	and    DWORD PTR [rdi-0x33],0x0
   14004eacc:	add    BYTE PTR [rax],al
   14004eace:	add    BYTE PTR [rax],al
   14004ead0:	movabs al,ds:0x8300000001400409
   14004ead9:	mov    ax,WORD PTR [rax]
   14004eadc:	add    BYTE PTR [rax],al
   14004eade:	add    BYTE PTR [rax],al
   14004eae0:	mov    al,0x9
   14004eae2:	add    al,0x40
   14004eae4:	add    DWORD PTR [rax],eax
   14004eae6:	add    BYTE PTR [rax],al
   14004eae8:	(bad)  
   14004eae9:	(bad)  
   14004eaea:	inc    DWORD PTR [rax]
   14004eaec:	add    BYTE PTR [rax],al
   14004eaee:	add    BYTE PTR [rax],al
   14004eaf0:	ror    BYTE PTR [rcx],0x4
   14004eaf3:	rex add DWORD PTR [rax],eax
   14004eaf6:	add    BYTE PTR [rax],al
   14004eaf8:	(bad)  
   14004eaf9:	(bad)  
   14004eafa:	inc    DWORD PTR [rax]
   14004eafc:	add    BYTE PTR [rax],al
   14004eafe:	add    BYTE PTR [rax],al
   14004eb00:	ror    BYTE PTR [rcx],1
   14004eb02:	add    al,0x40
   14004eb04:	add    DWORD PTR [rax],eax
   14004eb06:	add    BYTE PTR [rax],al
   14004eb08:	(bad)  
   14004eb09:	(bad)  
   14004eb0a:	out    dx,al
   14004eb0b:	add    BYTE PTR [rax],al
   14004eb0d:	add    BYTE PTR [rax],al
   14004eb0f:	add    al,ah
   14004eb11:	or     DWORD PTR [rax+rax*2],eax
   14004eb14:	add    DWORD PTR [rax],eax
   14004eb16:	add    BYTE PTR [rax],al
   14004eb18:	(bad)  
   14004eb19:	dec    ebp
   14004eb1b:	add    BYTE PTR [rax],al
   14004eb1d:	add    BYTE PTR [rax],al
   14004eb1f:	add    al,dh
   14004eb21:	or     DWORD PTR [rax+rax*2],eax
   14004eb24:	add    DWORD PTR [rax],eax
   14004eb26:	add    BYTE PTR [rax],al
   14004eb28:	(bad)  
   14004eb29:	dec    DWORD PTR [rbx+0x0]
   14004eb2f:	add    BYTE PTR [rax],al
   14004eb31:	or     al,BYTE PTR [rax+rax*2]
   14004eb34:	add    DWORD PTR [rax],eax
   14004eb36:	add    BYTE PTR [rax],al
   14004eb38:	adc    edx,ebx
   14004eb3a:	rol    BYTE PTR [rax],cl
   14004eb3c:	add    BYTE PTR [rax],al
   14004eb3e:	add    BYTE PTR [rax],al
   14004eb40:	adc    BYTE PTR [rdx],cl
   14004eb42:	add    al,0x40
   14004eb44:	add    DWORD PTR [rax],eax
   14004eb46:	add    BYTE PTR [rax],al
   14004eb48:	adc    ebx,ebx
   14004eb4a:	inc    DWORD PTR [rax]
   14004eb4c:	add    BYTE PTR [rax],al
   14004eb4e:	add    BYTE PTR [rax],al
   14004eb50:	and    BYTE PTR [rdx],cl
   14004eb52:	add    al,0x40
   14004eb54:	add    DWORD PTR [rax],eax
   14004eb56:	add    BYTE PTR [rax],al
   14004eb58:	adc    ebx,ebx
   14004eb5a:	out    dx,al
   14004eb5b:	add    BYTE PTR [rax],al
   14004eb5d:	add    BYTE PTR [rax],al
   14004eb5f:	add    BYTE PTR [rax],dh
   14004eb61:	or     al,BYTE PTR [rax+rax*2]
   14004eb64:	add    DWORD PTR [rax],eax
   14004eb66:	add    BYTE PTR [rax],al
   14004eb68:	adc    edx,ebx
   14004eb6a:	int    0x0
   14004eb6c:	add    BYTE PTR [rax],al
   14004eb6e:	add    BYTE PTR [rax],al
   14004eb70:	or     al,BYTE PTR [rax+rax*2]
   14004eb74:	add    DWORD PTR [rax],eax
   14004eb76:	add    BYTE PTR [rax],al
   14004eb78:	adc    esp,ebx
   14004eb7a:	mov    eax,DWORD PTR [rax]
   14004eb7c:	add    BYTE PTR [rax],al
   14004eb7e:	add    BYTE PTR [rax],al
   14004eb80:	rex.WR or r8b,BYTE PTR [rax+rax*2]
   14004eb84:	add    DWORD PTR [rax],eax
   14004eb86:	add    BYTE PTR [rax],al
   14004eb88:	or     ebp,DWORD PTR [rdi+0xff]
   14004eb8e:	add    BYTE PTR [rax],al
   14004eb90:	push   rsp
   14004eb91:	or     al,BYTE PTR [rax+rax*2]
   14004eb94:	add    DWORD PTR [rax],eax
   14004eb96:	add    BYTE PTR [rax],al
   14004eb98:	(bad)  
   14004eb99:	test   eax,0xff
   14004eb9e:	add    BYTE PTR [rax],al
   14004eba0:	pop    rsp
   14004eba1:	or     al,BYTE PTR [rax+rax*2]
   14004eba4:	add    DWORD PTR [rax],eax
   14004eba6:	add    BYTE PTR [rax],al
   14004eba8:	(bad)  
   14004eba9:	test   eax,0xee
   14004ebae:	add    BYTE PTR [rax],al
   14004ebb0:	or     al,BYTE PTR fs:[rax+rax*2]
   14004ebb4:	add    DWORD PTR [rax],eax
   14004ebb6:	add    BYTE PTR [rax],al
   14004ebb8:	(bad)  
   14004ebb9:	test   eax,0xcd
   14004ebbe:	add    BYTE PTR [rax],al
   14004ebc0:	ins    BYTE PTR es:[rdi],dx
   14004ebc1:	or     al,BYTE PTR [rax+rax*2]
   14004ebc4:	add    DWORD PTR [rax],eax
   14004ebc6:	add    BYTE PTR [rax],al
   14004ebc8:	(bad)  
   14004ebc9:	test   al,0x8b
   14004ebcb:	add    BYTE PTR [rax],al
   14004ebcd:	add    BYTE PTR [rax],al
   14004ebcf:	add    BYTE PTR [rax+0xa],bh
   14004ebd2:	add    al,0x40
   14004ebd4:	add    DWORD PTR [rax],eax
   14004ebd6:	add    BYTE PTR [rax],al
   14004ebd8:	(bad)  
   14004ebd9:	xchg   ebx,eax
   14004ebda:	in     eax,dx
   14004ebdb:	add    BYTE PTR [rax],al
   14004ebdd:	add    BYTE PTR [rax],al
   14004ebdf:	add    BYTE PTR [rax+0x140040a],cl
   14004ebe5:	add    BYTE PTR [rax],al
   14004ebe7:	add    BYTE PTR [rcx],ah
   14004ebe9:	and    bh,bh
   14004ebeb:	add    BYTE PTR [rax],al
   14004ebed:	add    BYTE PTR [rax],al
   14004ebef:	add    BYTE PTR [rax+0x140040a],bl
   14004ebf5:	add    BYTE PTR [rax],al
   14004ebf7:	add    BYTE PTR [rcx],ah
   14004ebf9:	and    bh,bh
   14004ebfb:	add    BYTE PTR [rax],al
   14004ebfd:	add    BYTE PTR [rax],al
   14004ebff:	add    BYTE PTR [rax+0x140040a],ch
   14004ec05:	add    BYTE PTR [rax],al
   14004ec07:	add    BYTE PTR [rdx],ah
   14004ec09:	and    ebp,esi
   14004ec0b:	add    BYTE PTR [rax],al
   14004ec0d:	add    BYTE PTR [rax],al
   14004ec0f:	add    BYTE PTR [rax+0x140040a],bh
   14004ec15:	add    BYTE PTR [rax],al
   14004ec17:	add    BYTE PTR [rdx],ah
   14004ec19:	and    cl,ch
   14004ec1b:	add    BYTE PTR [rax],al
   14004ec1d:	add    BYTE PTR [rax],al
   14004ec1f:	add    al,cl
   14004ec21:	or     al,BYTE PTR [rax+rax*2]
   14004ec24:	add    DWORD PTR [rax],eax
   14004ec26:	add    BYTE PTR [rax],al
   14004ec28:	and    esp,DWORD PTR [rdx]
   14004ec2a:	mov    eax,DWORD PTR [rax]
   14004ec2c:	add    BYTE PTR [rax],al
   14004ec2e:	add    BYTE PTR [rax],al
   14004ec30:	fmul   DWORD PTR [rdx]
   14004ec32:	add    al,0x40
   14004ec34:	add    DWORD PTR [rax],eax
   14004ec36:	add    BYTE PTR [rax],al
   14004ec38:	mul    bh
   14004ec3a:	fadd   QWORD PTR [rax]
   14004ec3c:	add    BYTE PTR [rax],al
   14004ec3e:	add    BYTE PTR [rax],al
   14004ec40:	loopne 0x14004ec4c
   14004ec42:	add    al,0x40
   14004ec44:	add    DWORD PTR [rax],eax
   14004ec46:	add    BYTE PTR [rax],al
   14004ec48:	jg     0x14004ec49
   14004ec4a:	inc    DWORD PTR [rax]
   14004ec4c:	add    BYTE PTR [rax],al
   14004ec4e:	add    BYTE PTR [rax],al
   14004ec50:	call   0x14144f05f
   14004ec55:	add    BYTE PTR [rax],al
   14004ec57:	add    BYTE PTR [rdi-0x1],bh
   14004ec5a:	inc    DWORD PTR [rax]
   14004ec5c:	add    BYTE PTR [rax],al
   14004ec5e:	add    BYTE PTR [rax],al
   14004ec60:	lock or al,BYTE PTR [rax+rax*2]
   14004ec64:	add    DWORD PTR [rax],eax
   14004ec66:	add    BYTE PTR [rax],al
   14004ec68:	jg     0x14004ec69
   14004ec6a:	out    dx,al
   14004ec6b:	add    BYTE PTR [rax],al
   14004ec6d:	add    BYTE PTR [rax],al
   14004ec6f:	add    al,bh
   14004ec71:	or     al,BYTE PTR [rax+rax*2]
   14004ec74:	add    DWORD PTR [rax],eax
   14004ec76:	add    BYTE PTR [rax],al
   14004ec78:	jg     0x14004ec79
   14004ec7a:	int    0x0
   14004ec7c:	add    BYTE PTR [rax],al
   14004ec7e:	add    BYTE PTR [rax],al
   14004ec80:	add    BYTE PTR [rbx],cl
   14004ec82:	add    al,0x40
   14004ec84:	add    DWORD PTR [rax],eax
   14004ec86:	add    BYTE PTR [rax],al
   14004ec88:	jg     0x14004ec89
   14004ec8a:	mov    eax,DWORD PTR [rax]
   14004ec8c:	add    BYTE PTR [rax],al
   14004ec8e:	add    BYTE PTR [rax],al
   14004ec90:	or     BYTE PTR [rbx],cl
   14004ec92:	add    al,0x40
   14004ec94:	add    DWORD PTR [rax],eax
   14004ec96:	add    BYTE PTR [rax],al
   14004ec98:	(bad)  
   14004ec99:	out    dx,eax
   14004ec9a:	mov    eax,0x0
   14004ec9f:	add    BYTE PTR [rax],bl
   14004eca1:	or     eax,DWORD PTR [rax+rax*2]
   14004eca4:	add    DWORD PTR [rax],eax
   14004eca6:	add    BYTE PTR [rax],al
   14004eca8:	(bad)  
   14004eca9:	lock inc DWORD PTR [rax]
   14004ecac:	add    BYTE PTR [rax],al
   14004ecae:	add    BYTE PTR [rax],al
   14004ecb0:	sub    BYTE PTR [rbx],cl
   14004ecb2:	add    al,0x40
   14004ecb4:	add    DWORD PTR [rax],eax
   14004ecb6:	add    BYTE PTR [rax],al
   14004ecb8:	(bad)  
   14004ecb9:	lock out dx,al
   14004ecbb:	add    BYTE PTR [rax],al
   14004ecbd:	add    BYTE PTR [rax],al
   14004ecbf:	add    BYTE PTR [rax],bh
   14004ecc1:	or     eax,DWORD PTR [rax+rax*2]
   14004ecc4:	add    DWORD PTR [rax],eax
   14004ecc6:	add    BYTE PTR [rax],al
   14004ecc8:	(bad)  
   14004ecc9:	lock int 0x0
   14004eccc:	add    BYTE PTR [rax],al
   14004ecce:	add    BYTE PTR [rax],al
   14004ecd0:	or     rax,QWORD PTR [rax+rax*2]
   14004ecd4:	add    DWORD PTR [rax],eax
   14004ecd6:	add    BYTE PTR [rax],al
   14004ecd8:	(bad)  
   14004ecd9:	lock mov eax,DWORD PTR [rax]
   14004ecdc:	add    BYTE PTR [rax],al
   14004ecde:	add    BYTE PTR [rax],al
   14004ece0:	pop    rax
   14004ece1:	or     eax,DWORD PTR [rax+rax*2]
   14004ece4:	add    DWORD PTR [rax],eax
   14004ece6:	add    BYTE PTR [rax],al
   14004ece8:	push   rbp
   14004ece9:	jmp    QWORD PTR [rax+rax*1+0x0]
   14004eced:	add    BYTE PTR [rax],al
   14004ecef:	add    BYTE PTR [rax+0xb],ch
   14004ecf2:	add    al,0x40
   14004ecf4:	add    DWORD PTR [rax],eax
   14004ecf6:	add    BYTE PTR [rax],al
   14004ecf8:	(bad)  
   14004ecf9:	outs   dx,BYTE PTR ds:[rsi]
   14004ecfa:	mov    ebp,0x0
   14004ecff:	add    BYTE PTR [rax+0xb],bh
   14004ed02:	add    al,0x40
   14004ed04:	add    DWORD PTR [rax],eax
   14004ed06:	add    BYTE PTR [rax],al
   14004ed08:	cmp    cl,BYTE PTR [rsi+0x6b]
   14004ed0e:	add    BYTE PTR [rax],al
   14004ed10:	mov    BYTE PTR [rbx],cl
   14004ed12:	add    al,0x40
   14004ed14:	add    DWORD PTR [rax],eax
   14004ed16:	add    BYTE PTR [rax],al
   14004ed18:	cmp    cl,BYTE PTR [rdi+0xff]
   14004ed1e:	add    BYTE PTR [rax],al
   14004ed20:	cwde   
   14004ed21:	or     eax,DWORD PTR [rax+rax*2]
   14004ed24:	add    DWORD PTR [rax],eax
   14004ed26:	add    BYTE PTR [rax],al
   14004ed28:	cmp    cl,BYTE PTR [rdi+0xee]
   14004ed2e:	add    BYTE PTR [rax],al
   14004ed30:	test   al,0xb
   14004ed32:	add    al,0x40
   14004ed34:	add    DWORD PTR [rax],eax
   14004ed36:	add    BYTE PTR [rax],al
   14004ed38:	cmp    cl,BYTE PTR [rdi+0xcd]
   14004ed3e:	add    BYTE PTR [rax],al
   14004ed40:	mov    eax,0x140040b
   14004ed45:	add    BYTE PTR [rax],al
   14004ed47:	add    BYTE PTR [rdx],bh
   14004ed49:	(bad)  
   14004ed4a:	mov    eax,DWORD PTR [rax]
   14004ed4c:	add    BYTE PTR [rax],al
   14004ed4e:	add    BYTE PTR [rax],al
   14004ed50:	enter  0x40b,0x40
   14004ed54:	add    DWORD PTR [rax],eax
   14004ed56:	add    BYTE PTR [rax],al
   14004ed58:	(bad)  
   14004ed59:	(bad)  
   14004ed5a:	inc    DWORD PTR [rax]
   14004ed5c:	add    BYTE PTR [rax],al
   14004ed5e:	add    BYTE PTR [rax],al
   14004ed60:	fmul   DWORD PTR [rbx]
   14004ed62:	add    al,0x40
   14004ed64:	add    DWORD PTR [rax],eax
   14004ed66:	add    BYTE PTR [rax],al
   14004ed68:	adc    eax,0xffff
   14004ed6d:	add    BYTE PTR [rax],al
   14004ed6f:	add    al,ch
   14004ed71:	or     eax,DWORD PTR [rax+rax*2]
   14004ed74:	add    DWORD PTR [rax],eax
   14004ed76:	add    BYTE PTR [rax],al
   14004ed78:	adc    eax,0xeeff
   14004ed7d:	add    BYTE PTR [rax],al
   14004ed7f:	add    al,bh
   14004ed81:	or     eax,DWORD PTR [rax+rax*2]
   14004ed84:	add    DWORD PTR [rax],eax
   14004ed86:	add    BYTE PTR [rax],al
   14004ed88:	adc    eax,0xcdff
   14004ed8d:	add    BYTE PTR [rax],al
   14004ed8f:	add    BYTE PTR [rax],cl
   14004ed91:	or     al,0x4
   14004ed93:	rex add DWORD PTR [rax],eax
   14004ed96:	add    BYTE PTR [rax],al
   14004ed98:	adc    eax,0x8bff
   14004ed9d:	add    BYTE PTR [rax],al
   14004ed9f:	add    BYTE PTR [rax],bl
   14004eda1:	or     al,0x4
   14004eda3:	rex add DWORD PTR [rax],eax
   14004eda6:	add    BYTE PTR [rax],al
   14004eda8:	mov    al,0xcc
   14004edab:	add    BYTE PTR [rax],al
   14004edad:	add    BYTE PTR [rax],al
   14004edaf:	add    BYTE PTR [rax],ch
   14004edb1:	or     al,0x4
   14004edb3:	rex add DWORD PTR [rax],eax
   14004edb6:	add    BYTE PTR [rax],al
   14004edb8:	mov    cl,0xff
   14004edbb:	add    BYTE PTR [rax],al
   14004edbd:	add    BYTE PTR [rax],al
   14004edbf:	add    BYTE PTR [rax],bh
   14004edc1:	or     al,0x4
   14004edc3:	rex add DWORD PTR [rax],eax
   14004edc6:	add    BYTE PTR [rax],al
   14004edc8:	mov    al,0xee
   14004edcb:	add    BYTE PTR [rax],al
   14004edcd:	add    BYTE PTR [rax],al
   14004edcf:	add    BYTE PTR [rax+0xc],cl
   14004edd2:	add    al,0x40
   14004edd4:	add    DWORD PTR [rax],eax
   14004edd6:	add    BYTE PTR [rax],al
   14004edd8:	mov    al,0xcd
   14004eddb:	add    BYTE PTR [rax],al
   14004eddd:	add    BYTE PTR [rax],al
   14004eddf:	add    BYTE PTR [rax+0xc],bl
   14004ede2:	add    al,0x40
   14004ede4:	add    DWORD PTR [rax],eax
   14004ede6:	add    BYTE PTR [rax],al
   14004ede8:	mov    al,0x8b
   14004edeb:	add    BYTE PTR [rax],al
   14004eded:	add    BYTE PTR [rax],al
   14004edef:	add    BYTE PTR [rax+0xc],ch
   14004edf2:	add    al,0x40
   14004edf4:	add    DWORD PTR [rax],eax
   14004edf6:	add    BYTE PTR [rax],al
   14004edf8:	or     bh,BYTE PTR [rcx-0x17]
   14004edfb:	add    BYTE PTR [rax],al
   14004edfd:	add    BYTE PTR [rax],al
   14004edff:	add    BYTE PTR [rax+0xc],bh
   14004ee02:	add    al,0x40
   14004ee04:	add    DWORD PTR [rax],eax
   14004ee06:	add    BYTE PTR [rax],al
   14004ee08:	push   rbp
   14004ee09:	cmp    eax,0xbc
   14004ee0e:	add    BYTE PTR [rax],al
   14004ee10:	mov    BYTE PTR [rsp+rax*1],cl
   14004ee13:	rex add DWORD PTR [rax],eax
   14004ee16:	add    BYTE PTR [rax],al
   14004ee18:	push   rbp
   14004ee19:	inc    DWORD PTR ds:[rax]
   14004ee1c:	add    BYTE PTR [rax],al
   14004ee1e:	add    BYTE PTR [rax],al
   14004ee20:	cwde   
   14004ee21:	or     al,0x4
   14004ee23:	rex add DWORD PTR [rax],eax
   14004ee26:	add    BYTE PTR [rax],al
   14004ee28:	push   rbp
   14004ee29:	ds out dx,al
   14004ee2b:	add    BYTE PTR [rax],al
   14004ee2d:	add    BYTE PTR [rax],al
   14004ee2f:	add    BYTE PTR [rax+0x140040c],ch
   14004ee35:	add    BYTE PTR [rax],al
   14004ee37:	add    BYTE PTR [rbp+0x3e],dl
   14004ee3a:	int    0x0
   14004ee3c:	add    BYTE PTR [rax],al
   14004ee3e:	add    BYTE PTR [rax],al
   14004ee40:	mov    eax,0x140040c
   14004ee45:	add    BYTE PTR [rax],al
   14004ee47:	add    BYTE PTR [rbp+0x3e],dl
   14004ee4a:	mov    eax,DWORD PTR [rax]
   14004ee4c:	add    BYTE PTR [rax],al
   14004ee4e:	add    BYTE PTR [rax],al
   14004ee50:	enter  0x40c,0x40
   14004ee54:	add    DWORD PTR [rax],eax
   14004ee56:	add    BYTE PTR [rax],al
   14004ee58:	scas   eax,DWORD PTR es:[rdi]
   14004ee59:	(bad)  
   14004ee5a:	mov    eax,DWORD PTR [rax]
   14004ee5c:	add    BYTE PTR [rax],al
   14004ee5e:	add    BYTE PTR [rax],al
   14004ee60:	fmul   DWORD PTR [rsp+rax*1]
   14004ee63:	rex add DWORD PTR [rax],eax
   14004ee66:	add    BYTE PTR [rax],al
   14004ee68:	jg     0x14004eed1
   14004ee6a:	rex.WRXB add BYTE PTR [r8],r8b
   14004ee6d:	add    BYTE PTR [rax],al
   14004ee6f:	add    al,ch
   14004ee71:	or     al,0x4
   14004ee73:	rex add DWORD PTR [rax],eax
   14004ee76:	add    BYTE PTR [rax],al
   14004ee78:	jg     0x14004eee2
   14004ee7a:	inc    DWORD PTR [rax]
   14004ee7c:	add    BYTE PTR [rax],al
   14004ee7e:	add    BYTE PTR [rax],al
   14004ee80:	clc    
   14004ee81:	or     al,0x4
   14004ee83:	rex add DWORD PTR [rax],eax
   14004ee86:	add    BYTE PTR [rax],al
   14004ee88:	jg     0x14004eef1
   14004ee8a:	out    dx,al
   14004ee8b:	add    BYTE PTR [rax],al
   14004ee8d:	add    BYTE PTR [rax],al
   14004ee8f:	add    BYTE PTR [rax],cl
   14004ee91:	or     eax,0x14004
   14004ee96:	add    BYTE PTR [rax],al
   14004ee98:	jg     0x14004ef02
   14004ee9a:	int    0x0
   14004ee9c:	add    BYTE PTR [rax],al
   14004ee9e:	add    BYTE PTR [rax],al
   14004eea0:	sbb    BYTE PTR [rip+0x14004],cl        # 0x140062eaa
   14004eea6:	add    BYTE PTR [rax],al
   14004eea8:	jg     0x14004ef12
   14004eeaa:	mov    eax,DWORD PTR [rax]
   14004eeac:	add    BYTE PTR [rax],al
   14004eeae:	add    BYTE PTR [rax],al
   14004eeb0:	sub    BYTE PTR [rip+0x14004],cl        # 0x140062eba
   14004eeb6:	add    BYTE PTR [rax],al
   14004eeb8:	jg     0x14004ef21
   14004eeba:	rex.WRXB add BYTE PTR [r8],r8b
   14004eebd:	add    BYTE PTR [rax],al
   14004eebf:	add    BYTE PTR [rax],bh
   14004eec1:	or     eax,0x14004
   14004eec6:	add    BYTE PTR [rax],al
   14004eec8:	cmp    bh,0xd1
   14004eecb:	add    BYTE PTR [rax],al
   14004eecd:	add    BYTE PTR [rax],al
   14004eecf:	add    BYTE PTR [rax+0xd],cl
   14004eed2:	add    al,0x40
   14004eed4:	add    DWORD PTR [rax],eax
   14004eed6:	add    BYTE PTR [rax],al
   14004eed8:	(bad)  
   14004eed9:	call   rbx
   14004eedb:	add    BYTE PTR [rax],al
   14004eedd:	add    BYTE PTR [rax],al
   14004eedf:	add    BYTE PTR [rax+0xd],bl
   14004eee2:	add    al,0x40
   14004eee4:	add    DWORD PTR [rax],eax
   14004eee6:	add    BYTE PTR [rax],al
   14004eee8:	call   0x14005eed8
   14004eeed:	add    BYTE PTR [rax],al
   14004eeef:	add    BYTE PTR [rax+0xd],ch
   14004eef2:	add    al,0x40
   14004eef4:	add    DWORD PTR [rax],eax
   14004eef6:	add    BYTE PTR [rax],al
   14004eef8:	call   0x14005eee8
   14004eefd:	add    BYTE PTR [rax],al
   14004eeff:	add    BYTE PTR [rax+0xd],bh
   14004ef02:	add    al,0x40
   14004ef04:	add    DWORD PTR [rax],eax
   14004ef06:	add    BYTE PTR [rax],al
   14004ef08:	call   0x14005ddf8
   14004ef0d:	add    BYTE PTR [rax],al
   14004ef0f:	add    BYTE PTR [rax+0x140040d],cl
   14004ef15:	add    BYTE PTR [rax],al
   14004ef17:	add    al,ch
   14004ef19:	jmp    0x14004eee8
   14004ef1b:	add    BYTE PTR [rax],al
   14004ef1d:	add    BYTE PTR [rax],al
   14004ef1f:	add    BYTE PTR [rax+0x140040d],bl
   14004ef25:	add    BYTE PTR [rax],al
   14004ef27:	add    bh,ah
   14004ef29:	in     al,dx
   14004ef2a:	mov    eax,DWORD PTR [rax]
   14004ef2c:	add    BYTE PTR [rax],al
   14004ef2e:	add    BYTE PTR [rax],al
   14004ef30:	test   al,0xd
   14004ef32:	add    al,0x40
   14004ef34:	add    DWORD PTR [rax],eax
   14004ef36:	add    BYTE PTR [rax],al
   14004ef38:	mov    bh,bh
   14004ef3a:	inc    DWORD PTR [rax]
   14004ef3c:	add    BYTE PTR [rax],al
   14004ef3e:	add    BYTE PTR [rax],al
   14004ef40:	mov    eax,0x140040d
   14004ef45:	add    BYTE PTR [rax],al
   14004ef47:	add    BYTE PTR [rdx+0xffff],cl
   14004ef4d:	add    BYTE PTR [rax],al
   14004ef4f:	add    al,cl
   14004ef51:	or     eax,0x14004
   14004ef56:	add    BYTE PTR [rax],al
   14004ef58:	mov    bh,bh
   14004ef5a:	out    dx,al
   14004ef5b:	add    BYTE PTR [rax],al
   14004ef5d:	add    BYTE PTR [rax],al
   14004ef5f:	add    al,bl
   14004ef61:	or     eax,0x14004
   14004ef66:	add    BYTE PTR [rax],al
   14004ef68:	mov    bh,bh
   14004ef6a:	int    0x0
   14004ef6c:	add    BYTE PTR [rax],al
   14004ef6e:	add    BYTE PTR [rax],al
   14004ef70:	call   0x14144f382
   14004ef75:	add    BYTE PTR [rax],al
   14004ef77:	add    BYTE PTR [rdx+0x8bff],cl
   14004ef7d:	add    BYTE PTR [rax],al
   14004ef7f:	add    al,bh
   14004ef81:	or     eax,0x14004
   14004ef86:	add    BYTE PTR [rax],al
   14004ef88:	add    BYTE PTR [rax],al
   14004ef8a:	imul   eax,DWORD PTR [rax],0x0
   14004ef90:	add    BYTE PTR [rsi],cl
   14004ef92:	add    al,0x40
   14004ef94:	add    DWORD PTR [rax],eax
   14004ef96:	add    BYTE PTR [rax],al
   14004ef98:	add    BYTE PTR [rax],al
   14004ef9a:	imul   eax,DWORD PTR [rax],0x0
   14004efa0:	or     BYTE PTR [rsi],cl
   14004efa2:	add    al,0x40
   14004efa4:	add    DWORD PTR [rax],eax
   14004efa6:	add    BYTE PTR [rax],al
   14004efa8:	xchg   esp,eax
   14004efa9:	loope  0x14004efaa
   14004efab:	add    BYTE PTR [rax],al
   14004efad:	add    BYTE PTR [rax],al
   14004efaf:	add    BYTE PTR [rax],bl
   14004efb1:	(bad)  
   14004efb2:	add    al,0x40
   14004efb4:	add    DWORD PTR [rax],eax
   14004efb6:	add    BYTE PTR [rax],al
   14004efb8:	xchg   esp,eax
   14004efb9:	loope  0x14004efba
   14004efbb:	add    BYTE PTR [rax],al
   14004efbd:	add    BYTE PTR [rax],al
   14004efbf:	add    BYTE PTR [rax],ch
   14004efc1:	(bad)  
   14004efc2:	add    al,0x40
   14004efc4:	add    DWORD PTR [rax],eax
   14004efc6:	add    BYTE PTR [rax],al
   14004efc8:	xchg   esp,eax
   14004efc9:	loope  0x14004efb9
   14004efcb:	add    BYTE PTR [rax],al
   14004efcd:	add    BYTE PTR [rax],al
   14004efcf:	add    BYTE PTR [rax],bh
   14004efd1:	(bad)  
   14004efd2:	add    al,0x40
   14004efd4:	add    DWORD PTR [rax],eax
   14004efd6:	add    BYTE PTR [rax],al
   14004efd8:	xchg   esp,eax
   14004efd9:	loope  0x14004efa8
   14004efdb:	add    BYTE PTR [rax],al
   14004efdd:	add    BYTE PTR [rax],al
   14004efdf:	add    BYTE PTR [rax+0xe],cl
   14004efe2:	add    al,0x40
   14004efe4:	add    DWORD PTR [rax],eax
   14004efe6:	add    BYTE PTR [rax],al
   14004efe8:	xchg   esp,eax
   14004efe9:	loope  0x14004ef76
   14004efeb:	add    BYTE PTR [rax],al
   14004efed:	add    BYTE PTR [rax],al
   14004efef:	add    BYTE PTR [rax+0xe],bl
   14004eff2:	add    al,0x40
   14004eff4:	add    DWORD PTR [rax],eax
   14004eff6:	add    BYTE PTR [rax],al
   14004eff8:	add    dh,cl
   14004effa:	mov    dl,0x0
   14004effc:	add    BYTE PTR [rax],al
   14004effe:	add    BYTE PTR [rax],al
   14004f000:	push   0x140040e
   14004f005:	add    BYTE PTR [rax],al
   14004f007:	add    BYTE PTR [rax],al
   14004f009:	iret   
   14004f00a:	inc    DWORD PTR [rax]
   14004f00c:	add    BYTE PTR [rax],al
   14004f00e:	add    BYTE PTR [rax],al
   14004f010:	js     0x14004f020
   14004f012:	add    al,0x40
   14004f014:	add    DWORD PTR [rax],eax
   14004f016:	add    BYTE PTR [rax],al
   14004f018:	add    bh,cl
   14004f01a:	out    dx,al
   14004f01b:	add    BYTE PTR [rax],al
   14004f01d:	add    BYTE PTR [rax],al
   14004f01f:	add    BYTE PTR [rax+0x140040e],cl
   14004f025:	add    BYTE PTR [rax],al
   14004f027:	add    BYTE PTR [rax],al
   14004f029:	iret   
   14004f02a:	int    0x0
   14004f02c:	add    BYTE PTR [rax],al
   14004f02e:	add    BYTE PTR [rax],al
   14004f030:	cwde   
   14004f031:	(bad)  
   14004f032:	add    al,0x40
   14004f034:	add    DWORD PTR [rax],eax
   14004f036:	add    BYTE PTR [rax],al
   14004f038:	add    bh,cl
   14004f03a:	mov    eax,DWORD PTR [rax]
   14004f03c:	add    BYTE PTR [rax],al
   14004f03e:	add    BYTE PTR [rax],al
   14004f040:	test   al,0xe
   14004f042:	add    al,0x40
   14004f044:	add    DWORD PTR [rax],eax
   14004f046:	add    BYTE PTR [rax],al
   14004f048:	sbb    al,0xf
   14004f04a:	inc    DWORD PTR [rax]
   14004f04c:	add    BYTE PTR [rax],al
   14004f04e:	add    BYTE PTR [rax],al
   14004f050:	mov    eax,0x140040e
   14004f055:	add    BYTE PTR [rax],al
   14004f057:	add    BYTE PTR [rbp-0x40],dl
   14004f05a:	mov    eax,DWORD PTR [rax]
   14004f05c:	add    BYTE PTR [rax],al
   14004f05e:	add    BYTE PTR [rax],al
   14004f060:	enter  0x40e,0x40
   14004f064:	add    DWORD PTR [rax],eax
   14004f066:	add    BYTE PTR [rax],al
   14004f068:	add    BYTE PTR [rax],al
   14004f06a:	fadd   QWORD PTR [rax]
   14004f06c:	add    BYTE PTR [rax],al
   14004f06e:	add    BYTE PTR [rax],al
   14004f070:	fmul   DWORD PTR [rsi]
   14004f072:	add    al,0x40
   14004f074:	add    DWORD PTR [rax],eax
   14004f076:	add    BYTE PTR [rax],al
   14004f078:	stos   BYTE PTR es:[rdi],al
   14004f079:	(bad)  
   14004f07a:	inc    DWORD PTR [rax]
   14004f07c:	add    BYTE PTR [rax],al
   14004f07e:	add    BYTE PTR [rax],al
   14004f080:	in     al,0xe
   14004f082:	add    al,0x40
   14004f084:	add    DWORD PTR [rax],eax
   14004f086:	add    BYTE PTR [rax],al
   14004f088:	and    edi,edi
   14004f08a:	inc    DWORD PTR [rax]
   14004f08c:	add    BYTE PTR [rax],al
   14004f08e:	add    BYTE PTR [rax],al
   14004f090:	in     al,dx
   14004f091:	(bad)  
   14004f092:	add    al,0x40
   14004f094:	add    DWORD PTR [rax],eax
   14004f096:	add    BYTE PTR [rax],al
   14004f098:	and    edi,edi
   14004f09a:	inc    DWORD PTR [rax]
   14004f09c:	add    BYTE PTR [rax],al
   14004f09e:	add    BYTE PTR [rax],al
   14004f0a0:	hlt    
   14004f0a1:	(bad)  
   14004f0a2:	add    al,0x40
   14004f0a4:	add    DWORD PTR [rax],eax
   14004f0a6:	add    BYTE PTR [rax],al
   14004f0a8:	and    edi,edi
   14004f0aa:	out    dx,al
   14004f0ab:	add    BYTE PTR [rax],al
   14004f0ad:	add    BYTE PTR [rax],al
   14004f0af:	add    ah,bh
   14004f0b1:	(bad)  
   14004f0b2:	add    al,0x40
   14004f0b4:	add    DWORD PTR [rax],eax
   14004f0b6:	add    BYTE PTR [rax],al
   14004f0b8:	and    edi,edi
   14004f0ba:	int    0x0
   14004f0bc:	add    BYTE PTR [rax],al
   14004f0be:	add    BYTE PTR [rax],al
   14004f0c0:	add    al,0xf
   14004f0c2:	add    al,0x40
   14004f0c4:	add    DWORD PTR [rax],eax
   14004f0c6:	add    BYTE PTR [rax],al
   14004f0c8:	and    edi,edi
   14004f0ca:	mov    eax,DWORD PTR [rax]
   14004f0cc:	add    BYTE PTR [rax],al
   14004f0ce:	add    BYTE PTR [rax],al
   14004f0d0:	adc    BYTE PTR [rdi],cl
   14004f0d2:	add    al,0x40
   14004f0d4:	add    DWORD PTR [rax],eax
   14004f0d6:	add    BYTE PTR [rax],al
   14004f0d8:	(bad)  
   14004f0d9:	(bad)  
   14004f0db:	add    BYTE PTR [rax],al
   14004f0dd:	add    BYTE PTR [rax],al
   14004f0df:	add    BYTE PTR [rax],ah
   14004f0e1:	(bad)  
   14004f0e3:	rex add DWORD PTR [rax],eax
   14004f0e6:	add    BYTE PTR [rax],al
   14004f0e8:	(bad)  
   14004f0e9:	(bad)  
   14004f0eb:	add    BYTE PTR [rax],al
   14004f0ed:	add    BYTE PTR [rax],al
   14004f0ef:	add    BYTE PTR [rax],dh
   14004f0f1:	(bad)  
   14004f0f3:	rex add DWORD PTR [rax],eax
   14004f0f6:	add    BYTE PTR [rax],al
   14004f0f8:	(bad)  
   14004f0f9:	(bad)  
   14004f0fb:	add    BYTE PTR [rax],al
   14004f0fd:	add    BYTE PTR [rax],al
   14004f0ff:	add    BYTE PTR [rax+0xf],al
   14004f102:	add    al,0x40
   14004f104:	add    DWORD PTR [rax],eax
   14004f106:	add    BYTE PTR [rax],al
   14004f108:	(bad)  
   14004f109:	fcmove st,st(5)
   14004f10b:	add    BYTE PTR [rax],al
   14004f10d:	add    BYTE PTR [rax],al
   14004f10f:	add    BYTE PTR [rax+0xf],dl
   14004f112:	add    al,0x40
   14004f114:	add    DWORD PTR [rax],eax
   14004f116:	add    BYTE PTR [rax],al
   14004f118:	(bad)  
   14004f119:	fimul  DWORD PTR [rbx+0x0]
   14004f11f:	add    BYTE PTR [rdi+rcx*1+0x4],bl
   14004f123:	rex add DWORD PTR [rax],eax
   14004f126:	add    BYTE PTR [rax],al
   14004f128:	add    BYTE PTR [rax],al
   14004f12a:	rol    BYTE PTR [rax],0x0
   14004f12d:	add    BYTE PTR [rax],al
   14004f12f:	add    BYTE PTR [rdi+rcx*1+0x4],ah
   14004f133:	rex add DWORD PTR [rax],eax
	...
   14004f13e:	add    BYTE PTR [rax],al
   14004f140:	ins    BYTE PTR es:[rdi],dx
   14004f141:	(bad)  
   14004f143:	rex add DWORD PTR [rax],eax
   14004f146:	add    BYTE PTR [rax],al
   14004f148:	add    BYTE PTR [rax],al
   14004f14a:	add    eax,DWORD PTR [rax]
   14004f14c:	add    BYTE PTR [rax],al
   14004f14e:	add    BYTE PTR [rax],al
   14004f150:	je     0x14004f161
   14004f152:	add    al,0x40
   14004f154:	add    DWORD PTR [rax],eax
   14004f156:	add    BYTE PTR [rax],al
   14004f158:	add    BYTE PTR [rax],al
   14004f15a:	sbb    al,BYTE PTR [rax]
   14004f15c:	add    BYTE PTR [rax],al
   14004f15e:	add    BYTE PTR [rax],al
   14004f160:	or     BYTE PTR [rdi],0x4
   14004f163:	rex add DWORD PTR [rax],eax
   14004f166:	add    BYTE PTR [rax],al
   14004f168:	add    BYTE PTR [rax],al
   14004f16a:	inc    DWORD PTR [rax]
   14004f16c:	add    BYTE PTR [rax],al
   14004f16e:	add    BYTE PTR [rax],al
   14004f170:	mov    BYTE PTR [rdi],cl
   14004f172:	add    al,0x40
   14004f174:	add    DWORD PTR [rax],eax
   14004f176:	add    BYTE PTR [rax],al
   14004f178:	add    BYTE PTR [rax],al
   14004f17a:	sbb    al,0x0
   14004f17c:	add    BYTE PTR [rax],al
   14004f17e:	add    BYTE PTR [rax],al
   14004f180:	nop
   14004f181:	(bad)  
   14004f183:	rex add DWORD PTR [rax],eax
   14004f186:	add    BYTE PTR [rax],al
   14004f188:	add    BYTE PTR [rax],al
   14004f18a:	(bad)  
   14004f18b:	add    BYTE PTR [rax],al
   14004f18d:	add    BYTE PTR [rax],al
   14004f18f:	add    BYTE PTR [rax+0x140040f],bl
   14004f195:	add    BYTE PTR [rax],al
   14004f197:	add    BYTE PTR [rax],al
   14004f199:	add    BYTE PTR [rcx],ah
   14004f19b:	add    BYTE PTR [rax],al
   14004f19d:	add    BYTE PTR [rax],al
   14004f19f:	add    BYTE PTR [rax+0x140040f],ah
   14004f1a5:	add    BYTE PTR [rax],al
   14004f1a7:	add    BYTE PTR [rax],al
   14004f1a9:	add    BYTE PTR [rax+rax*1],ah
   14004f1ac:	add    BYTE PTR [rax],al
   14004f1ae:	add    BYTE PTR [rax],al
   14004f1b0:	test   al,0xf
   14004f1b2:	add    al,0x40
   14004f1b4:	add    DWORD PTR [rax],eax
   14004f1b6:	add    BYTE PTR [rax],al
   14004f1b8:	add    BYTE PTR [rax],al
   14004f1ba:	add    BYTE PTR es:[rax],al
   14004f1bd:	add    BYTE PTR [rax],al
   14004f1bf:	add    BYTE PTR [rax+0x140040f],dh
   14004f1c5:	add    BYTE PTR [rax],al
   14004f1c7:	add    BYTE PTR [rax],al
   14004f1c9:	add    BYTE PTR [rcx],ch
   14004f1cb:	add    BYTE PTR [rax],al
   14004f1cd:	add    BYTE PTR [rax],al
   14004f1cf:	add    BYTE PTR [rax+0x140040f],bh
   14004f1d5:	add    BYTE PTR [rax],al
   14004f1d7:	add    BYTE PTR [rax],al
   14004f1d9:	add    BYTE PTR [rbx],ch
   14004f1db:	add    BYTE PTR [rax],al
   14004f1dd:	add    BYTE PTR [rax],al
   14004f1df:	add    al,al
   14004f1e1:	(bad)  
   14004f1e3:	rex add DWORD PTR [rax],eax
   14004f1e6:	add    BYTE PTR [rax],al
   14004f1e8:	add    BYTE PTR [rax],al
   14004f1ea:	add    BYTE PTR cs:[rax],al
   14004f1ed:	add    BYTE PTR [rax],al
   14004f1ef:	add    al,cl
   14004f1f1:	(bad)  
   14004f1f3:	rex add DWORD PTR [rax],eax
   14004f1f6:	add    BYTE PTR [rax],al
   14004f1f8:	add    BYTE PTR [rax],al
   14004f1fa:	xor    BYTE PTR [rax],al
   14004f1fc:	add    BYTE PTR [rax],al
   14004f1fe:	add    BYTE PTR [rax],al
   14004f200:	ror    BYTE PTR [rdi],1
   14004f202:	add    al,0x40
   14004f204:	add    DWORD PTR [rax],eax
   14004f206:	add    BYTE PTR [rax],al
   14004f208:	add    BYTE PTR [rax],al
   14004f20a:	add    eax,0x0
   14004f20f:	add    al,bl
   14004f211:	(bad)  
   14004f213:	rex add DWORD PTR [rax],eax
   14004f216:	add    BYTE PTR [rax],al
   14004f218:	add    BYTE PTR [rax],al
   14004f21a:	xor    eax,DWORD PTR [rax]
   14004f21c:	add    BYTE PTR [rax],al
   14004f21e:	add    BYTE PTR [rax],al
   14004f220:	loopne 0x14004f231
   14004f222:	add    al,0x40
   14004f224:	add    DWORD PTR [rax],eax
   14004f226:	add    BYTE PTR [rax],al
   14004f228:	add    BYTE PTR [rax],al
   14004f22a:	add    BYTE PTR ss:[rax],al
   14004f22d:	add    BYTE PTR [rax],al
   14004f22f:	add    al,ch
   14004f231:	(bad)  
   14004f233:	rex add DWORD PTR [rax],eax
   14004f236:	add    BYTE PTR [rax],al
   14004f238:	add    BYTE PTR [rax],al
   14004f23a:	cmp    BYTE PTR [rax],al
   14004f23c:	add    BYTE PTR [rax],al
   14004f23e:	add    BYTE PTR [rax],al
   14004f240:	lock (bad) 
   14004f243:	rex add DWORD PTR [rax],eax
   14004f246:	add    BYTE PTR [rax],al
   14004f248:	add    BYTE PTR [rax],al
   14004f24a:	cmp    eax,DWORD PTR [rax]
   14004f24c:	add    BYTE PTR [rax],al
   14004f24e:	add    BYTE PTR [rax],al
   14004f250:	clc    
   14004f251:	(bad)  
   14004f253:	rex add DWORD PTR [rax],eax
   14004f256:	add    BYTE PTR [rax],al
   14004f258:	add    BYTE PTR [rax],al
   14004f25a:	cmp    eax,0x0
   14004f25f:	add    BYTE PTR [rax],al
   14004f261:	adc    BYTE PTR [rax+rax*2],al
   14004f264:	add    DWORD PTR [rax],eax
   14004f266:	add    BYTE PTR [rax],al
   14004f268:	add    BYTE PTR [rax],al
   14004f26a:	add    BYTE PTR [rax],al
   14004f26d:	add    BYTE PTR [rax],al
   14004f26f:	add    BYTE PTR [rax],cl
   14004f271:	adc    BYTE PTR [rax+rax*2],al
   14004f274:	add    DWORD PTR [rax],eax
   14004f276:	add    BYTE PTR [rax],al
   14004f278:	add    BYTE PTR [rax],al
   14004f27a:	rex.X add BYTE PTR [rax],al
   14004f27d:	add    BYTE PTR [rax],al
   14004f27f:	add    BYTE PTR [rax],dl
   14004f281:	adc    BYTE PTR [rax+rax*2],al
   14004f284:	add    DWORD PTR [rax],eax
   14004f286:	add    BYTE PTR [rax],al
   14004f288:	add    BYTE PTR [rax],al
   14004f28a:	add    BYTE PTR [r8],r8b
   14004f28d:	add    BYTE PTR [rax],al
   14004f28f:	add    BYTE PTR [rax],bl
   14004f291:	adc    BYTE PTR [rax+rax*2],al
   14004f294:	add    DWORD PTR [rax],eax
   14004f296:	add    BYTE PTR [rax],al
   14004f298:	add    BYTE PTR [rax],al
   14004f29a:	rex.RXB add BYTE PTR [r8],r8b
   14004f29d:	add    BYTE PTR [rax],al
   14004f29f:	add    BYTE PTR [rax],ah
   14004f2a1:	adc    BYTE PTR [rax+rax*2],al
   14004f2a4:	add    DWORD PTR [rax],eax
   14004f2a6:	add    BYTE PTR [rax],al
   14004f2a8:	add    BYTE PTR [rax],al
   14004f2aa:	rex.WX add BYTE PTR [rax],al
   14004f2ad:	add    BYTE PTR [rax],al
   14004f2af:	add    BYTE PTR [rax],ch
   14004f2b1:	adc    BYTE PTR [rax+rax*2],al
   14004f2b4:	add    DWORD PTR [rax],eax
   14004f2b6:	add    BYTE PTR [rax],al
   14004f2b8:	add    BYTE PTR [rax],al
   14004f2ba:	or     BYTE PTR [rax],al
   14004f2bc:	add    BYTE PTR [rax],al
   14004f2be:	add    BYTE PTR [rax],al
   14004f2c0:	xor    BYTE PTR [rax],dl
   14004f2c2:	add    al,0x40
   14004f2c4:	add    DWORD PTR [rax],eax
   14004f2c6:	add    BYTE PTR [rax],al
   14004f2c8:	add    BYTE PTR [rax],al
   14004f2ca:	rex.WRB add BYTE PTR [r8],r8b
   14004f2cd:	add    BYTE PTR [rax],al
   14004f2cf:	add    BYTE PTR [rax],ah
   14004f2d1:	repnz add eax,DWORD PTR [rax+0x1]
   14004f2d5:	add    BYTE PTR [rax],al
   14004f2d7:	add    BYTE PTR [rax],al
   14004f2d9:	add    BYTE PTR [rdi+0x0],cl
   14004f2dc:	add    BYTE PTR [rax],al
   14004f2de:	add    BYTE PTR [rax],al
   14004f2e0:	sub    dl,dh
   14004f2e2:	add    eax,DWORD PTR [rax+0x1]
   14004f2e5:	add    BYTE PTR [rax],al
   14004f2e7:	add    BYTE PTR [rax],al
   14004f2e9:	add    BYTE PTR [rdx+0x0],dl
   14004f2ec:	add    BYTE PTR [rax],al
   14004f2ee:	add    BYTE PTR [rax],al
   14004f2f0:	xor    dl,dh
   14004f2f2:	add    eax,DWORD PTR [rax+0x1]
   14004f2f5:	add    BYTE PTR [rax],al
   14004f2f7:	add    BYTE PTR [rax],al
   14004f2f9:	add    BYTE PTR [rax+rax*1+0x0],dl
   14004f2fd:	add    BYTE PTR [rax],al
   14004f2ff:	add    BYTE PTR [rax],bh
   14004f301:	repnz add eax,DWORD PTR [rax+0x1]
   14004f305:	add    BYTE PTR [rax],al
   14004f307:	add    BYTE PTR [rax],al
   14004f309:	add    BYTE PTR [rdi+0x0],dl
   14004f30c:	add    BYTE PTR [rax],al
   14004f30e:	add    BYTE PTR [rax],al
   14004f310:	rex
   14004f311:	repnz add eax,DWORD PTR [rax+0x1]
   14004f315:	add    BYTE PTR [rax],al
   14004f317:	add    BYTE PTR [rax],al
   14004f319:	add    BYTE PTR [rcx+0x0],bl
   14004f31c:	add    BYTE PTR [rax],al
   14004f31e:	add    BYTE PTR [rax],al
   14004f320:	rex.W
   14004f321:	repnz add eax,DWORD PTR [rax+0x1]
   14004f325:	add    BYTE PTR [rax],al
   14004f327:	add    BYTE PTR [rax],al
   14004f329:	add    BYTE PTR [rax+rax*1+0x0],bl
   14004f32d:	add    BYTE PTR [rax],al
   14004f32f:	add    BYTE PTR [rax-0xe],dl
   14004f332:	add    eax,DWORD PTR [rax+0x1]
   14004f335:	add    BYTE PTR [rax],al
   14004f337:	add    BYTE PTR [rax],al
   14004f339:	add    BYTE PTR [rsi+0x0],bl
   14004f33c:	add    BYTE PTR [rax],al
   14004f33e:	add    BYTE PTR [rax],al
   14004f340:	pop    rax
   14004f341:	repnz add eax,DWORD PTR [rax+0x1]
   14004f345:	add    BYTE PTR [rax],al
   14004f347:	add    BYTE PTR [rax],al
   14004f349:	add    BYTE PTR [rcx+0x0],ah
   14004f34c:	add    BYTE PTR [rax],al
   14004f34e:	add    BYTE PTR [rax],al
   14004f350:	(bad)  
   14004f351:	repnz add eax,DWORD PTR [rax+0x1]
   14004f355:	add    BYTE PTR [rax],al
   14004f357:	add    BYTE PTR [rax],al
   14004f359:	add    BYTE PTR [rbx+0x0],ah
   14004f35c:	add    BYTE PTR [rax],al
   14004f35e:	add    BYTE PTR [rax],al
   14004f360:	push   0x14003f2
   14004f365:	add    BYTE PTR [rax],al
   14004f367:	add    BYTE PTR [rax],al
   14004f369:	add    BYTE PTR [rdx],cl
   14004f36b:	add    BYTE PTR [rax],al
   14004f36d:	add    BYTE PTR [rax],al
   14004f36f:	add    BYTE PTR [rax-0xe],dh
   14004f372:	add    eax,DWORD PTR [rax+0x1]
   14004f375:	add    BYTE PTR [rax],al
   14004f377:	add    BYTE PTR [rax],al
   14004f379:	add    BYTE PTR [rsi+0x0],ah
   14004f37c:	add    BYTE PTR [rax],al
   14004f37e:	add    BYTE PTR [rax],al
   14004f380:	js     0x14004f374
   14004f382:	add    eax,DWORD PTR [rax+0x1]
   14004f385:	add    BYTE PTR [rax],al
   14004f387:	add    BYTE PTR [rax],al
   14004f389:	add    BYTE PTR [rcx+0x0],ch
   14004f38c:	add    BYTE PTR [rax],al
   14004f38e:	add    BYTE PTR [rax],al
   14004f390:	xor    dl,0x3
   14004f393:	rex add DWORD PTR [rax],eax
   14004f396:	add    BYTE PTR [rax],al
   14004f398:	add    BYTE PTR [rax],al
   14004f39a:	imul   eax,DWORD PTR [rax],0x0
   14004f39d:	add    BYTE PTR [rax],al
   14004f39f:	add    BYTE PTR [rax+0x14003f2],cl
   14004f3a5:	add    BYTE PTR [rax],al
   14004f3a7:	add    BYTE PTR [rax],al
   14004f3a9:	add    BYTE PTR [rsi+0x0],ch
   14004f3ac:	add    BYTE PTR [rax],al
   14004f3ae:	add    BYTE PTR [rax],al
   14004f3b0:	nop
   14004f3b1:	repnz add eax,DWORD PTR [rax+0x1]
   14004f3b5:	add    BYTE PTR [rax],al
   14004f3b7:	add    BYTE PTR [rax],al
   14004f3b9:	add    BYTE PTR [rax+0x0],dh
   14004f3bc:	add    BYTE PTR [rax],al
   14004f3be:	add    BYTE PTR [rax],al
   14004f3c0:	cwde   
   14004f3c1:	repnz add eax,DWORD PTR [rax+0x1]
   14004f3c5:	add    BYTE PTR [rax],al
   14004f3c7:	add    BYTE PTR [rax],al
   14004f3c9:	add    BYTE PTR [rbx+0x0],dh
   14004f3cc:	add    BYTE PTR [rax],al
   14004f3ce:	add    BYTE PTR [rax],al
   14004f3d0:	movabs al,ds:0x14003f2
   14004f3d9:	add    BYTE PTR [rbp+0x0],dh
   14004f3dc:	add    BYTE PTR [rax],al
   14004f3de:	add    BYTE PTR [rax],al
   14004f3e0:	test   al,0xf2
   14004f3e2:	add    eax,DWORD PTR [rax+0x1]
   14004f3e5:	add    BYTE PTR [rax],al
   14004f3e7:	add    BYTE PTR [rax],al
   14004f3e9:	add    BYTE PTR [rax+0x0],bh
   14004f3ec:	add    BYTE PTR [rax],al
   14004f3ee:	add    BYTE PTR [rax],al
   14004f3f0:	mov    al,0xf2
   14004f3f2:	add    eax,DWORD PTR [rax+0x1]
   14004f3f5:	add    BYTE PTR [rax],al
   14004f3f7:	add    BYTE PTR [rax],al
   14004f3f9:	add    BYTE PTR [rdx+0x0],bh
   14004f3fc:	add    BYTE PTR [rax],al
   14004f3fe:	add    BYTE PTR [rax],al
   14004f400:	mov    eax,0x14003f2
   14004f405:	add    BYTE PTR [rax],al
   14004f407:	add    BYTE PTR [rax],al
   14004f409:	add    BYTE PTR [rbp+0x0],bh
   14004f40c:	add    BYTE PTR [rax],al
   14004f40e:	add    BYTE PTR [rax],al
   14004f410:	shl    dl,0x3
   14004f413:	rex add DWORD PTR [rax],eax
   14004f416:	add    BYTE PTR [rax],al
   14004f418:	add    BYTE PTR [rax],al
   14004f41a:	or     eax,0x0
   14004f41f:	add    al,cl
   14004f421:	repnz add eax,DWORD PTR [rax+0x1]
   14004f425:	add    BYTE PTR [rax],al
   14004f427:	add    BYTE PTR [rax],al
   14004f429:	add    BYTE PTR [rdi+0x0],bh
   14004f42c:	add    BYTE PTR [rax],al
   14004f42e:	add    BYTE PTR [rax],al
   14004f430:	shl    dl,1
   14004f432:	add    eax,DWORD PTR [rax+0x1]
   14004f435:	add    BYTE PTR [rax],al
   14004f437:	add    BYTE PTR [rax],al
   14004f439:	add    BYTE PTR [rdx+0x0],al
   14004f43f:	add    al,bl
   14004f441:	repnz add eax,DWORD PTR [rax+0x1]
   14004f445:	add    BYTE PTR [rax],al
   14004f447:	add    BYTE PTR [rax],al
   14004f449:	add    BYTE PTR [rbp+0x0],al
   14004f44f:	add    al,ah
   14004f451:	repnz add eax,DWORD PTR [rax+0x1]
   14004f455:	add    BYTE PTR [rax],al
   14004f457:	add    BYTE PTR [rax],al
   14004f459:	add    BYTE PTR [rdi+0x0],al
   14004f45f:	add    al,ch
   14004f461:	repnz add eax,DWORD PTR [rax+0x1]
   14004f465:	add    BYTE PTR [rax],al
   14004f467:	add    BYTE PTR [rax],al
   14004f469:	add    BYTE PTR [rdx+0x0],cl
   14004f46f:	add    al,dh
   14004f471:	repnz add eax,DWORD PTR [rax+0x1]
   14004f475:	add    BYTE PTR [rax],al
   14004f477:	add    BYTE PTR [rax],al
   14004f479:	add    BYTE PTR [rax+rax*1+0x0],cl
   14004f480:	clc    
   14004f481:	repnz add eax,DWORD PTR [rax+0x1]
   14004f485:	add    BYTE PTR [rax],al
   14004f487:	add    BYTE PTR [rax],al
   14004f489:	add    BYTE PTR [rdi+0x0],cl
   14004f48f:	add    BYTE PTR [rax],al
   14004f491:	repz add eax,DWORD PTR [rax+0x1]
   14004f495:	add    BYTE PTR [rax],al
   14004f497:	add    BYTE PTR [rax],al
   14004f499:	add    BYTE PTR [rcx+0x0],dl
   14004f49f:	add    BYTE PTR [rax],cl
   14004f4a1:	repz add eax,DWORD PTR [rax+0x1]
   14004f4a5:	add    BYTE PTR [rax],al
   14004f4a7:	add    BYTE PTR [rax],al
   14004f4a9:	add    BYTE PTR [rax+rax*1+0x0],dl
   14004f4b0:	adc    bl,dh
   14004f4b2:	add    eax,DWORD PTR [rax+0x1]
   14004f4b5:	add    BYTE PTR [rax],al
   14004f4b7:	add    BYTE PTR [rax],al
   14004f4b9:	add    BYTE PTR [rsi+0x0],dl
   14004f4bf:	add    BYTE PTR [rax],bl
   14004f4c1:	repz add eax,DWORD PTR [rax+0x1]
   14004f4c5:	add    BYTE PTR [rax],al
   14004f4c7:	add    BYTE PTR [rax],al
   14004f4c9:	add    BYTE PTR [rdi],cl
   14004f4cb:	add    BYTE PTR [rax],al
   14004f4cd:	add    BYTE PTR [rax],al
   14004f4cf:	add    BYTE PTR [rax],ah
   14004f4d1:	repz add eax,DWORD PTR [rax+0x1]
   14004f4d5:	add    BYTE PTR [rax],al
   14004f4d7:	add    BYTE PTR [rax],al
   14004f4d9:	add    BYTE PTR [rcx+0x0],bl
   14004f4df:	add    BYTE PTR [rax],ch
   14004f4e1:	repz add eax,DWORD PTR [rax+0x1]
   14004f4e5:	add    BYTE PTR [rax],al
   14004f4e7:	add    BYTE PTR [rax],al
   14004f4e9:	add    BYTE PTR [rax+rax*1+0x0],bl
   14004f4f0:	xor    bl,dh
   14004f4f2:	add    eax,DWORD PTR [rax+0x1]
   14004f4f5:	add    BYTE PTR [rax],al
   14004f4f7:	add    BYTE PTR [rax],al
   14004f4f9:	add    BYTE PTR [rsi+0x0],bl
   14004f4ff:	add    BYTE PTR [rax],bh
   14004f501:	repz add eax,DWORD PTR [rax+0x1]
   14004f505:	add    BYTE PTR [rax],al
   14004f507:	add    BYTE PTR [rax],al
   14004f509:	add    BYTE PTR [rcx+0x0],ah
   14004f50f:	add    BYTE PTR [rax-0xd],al
   14004f512:	add    eax,DWORD PTR [rax+0x1]
   14004f515:	add    BYTE PTR [rax],al
   14004f517:	add    BYTE PTR [rax],al
   14004f519:	add    BYTE PTR [rbx+0x0],ah
   14004f51f:	add    BYTE PTR [rax-0xd],cl
   14004f522:	add    eax,DWORD PTR [rax+0x1]
   14004f525:	add    BYTE PTR [rax],al
   14004f527:	add    BYTE PTR [rax],al
   14004f529:	add    BYTE PTR [rsi+0x0],ah
   14004f52f:	add    BYTE PTR [rax-0xd],dl
   14004f532:	add    eax,DWORD PTR [rax+0x1]
   14004f535:	add    BYTE PTR [rax],al
   14004f537:	add    BYTE PTR [rax],al
   14004f539:	add    BYTE PTR [rax+0x0],ch
   14004f53f:	add    BYTE PTR [rax-0xd],bl
   14004f542:	add    eax,DWORD PTR [rax+0x1]
   14004f545:	add    BYTE PTR [rax],al
   14004f547:	add    BYTE PTR [rax],al
   14004f549:	add    BYTE PTR [rbx+0x0],ch
   14004f54f:	add    BYTE PTR [rax-0xd],ah
   14004f552:	add    eax,DWORD PTR [rax+0x1]
   14004f555:	add    BYTE PTR [rax],al
   14004f557:	add    BYTE PTR [rax],al
   14004f559:	add    BYTE PTR [rbp+0x0],ch
   14004f55f:	add    BYTE PTR [rax-0xd],ch
   14004f562:	add    eax,DWORD PTR [rax+0x1]
   14004f565:	add    BYTE PTR [rax],al
   14004f567:	add    BYTE PTR [rax],al
   14004f569:	add    BYTE PTR [rax+0x0],dh
   14004f56f:	add    BYTE PTR [rax-0xd],dh
   14004f572:	add    eax,DWORD PTR [rax+0x1]
   14004f575:	add    BYTE PTR [rax],al
   14004f577:	add    BYTE PTR [rax],al
   14004f579:	add    BYTE PTR [rdx],dl
   14004f57b:	add    BYTE PTR [rax],al
   14004f57d:	add    BYTE PTR [rax],al
   14004f57f:	add    BYTE PTR [rax-0xd],bh
   14004f582:	add    eax,DWORD PTR [rax+0x1]
   14004f585:	add    BYTE PTR [rax],al
   14004f587:	add    BYTE PTR [rax],al
   14004f589:	add    BYTE PTR [rbx+0x0],dh
   14004f58f:	add    BYTE PTR [rax+0x14003f3],al
   14004f595:	add    BYTE PTR [rax],al
   14004f597:	add    BYTE PTR [rax],al
   14004f599:	add    BYTE PTR [rbp+0x0],dh
   14004f59f:	add    BYTE PTR [rax+0x14003f3],cl
   14004f5a5:	add    BYTE PTR [rax],al
   14004f5a7:	add    BYTE PTR [rax],al
   14004f5a9:	add    BYTE PTR [rax+0x0],bh
   14004f5af:	add    BYTE PTR [rax+0x14003f3],dl
   14004f5b5:	add    BYTE PTR [rax],al
   14004f5b7:	add    BYTE PTR [rax],al
   14004f5b9:	add    BYTE PTR [rdx+0x0],bh
   14004f5bf:	add    BYTE PTR [rax+0x14003f3],bl
   14004f5c5:	add    BYTE PTR [rax],al
   14004f5c7:	add    BYTE PTR [rax],al
   14004f5c9:	add    BYTE PTR [rbp+0x0],bh
   14004f5cf:	add    BYTE PTR [rax+0x14003f3],ah
   14004f5d5:	add    BYTE PTR [rax],al
   14004f5d7:	add    BYTE PTR [rax],al
   14004f5d9:	add    BYTE PTR [rdi+0x0],bh
   14004f5df:	add    BYTE PTR [rax+0x14003f3],ch
   14004f5e5:	add    BYTE PTR [rax],al
   14004f5e7:	add    BYTE PTR [rax],al
   14004f5e9:	add    dl,al
   14004f5eb:	add    BYTE PTR [rax],al
   14004f5ed:	add    BYTE PTR [rax],al
   14004f5ef:	add    BYTE PTR [rax+0x14003f3],dh
   14004f5f5:	add    BYTE PTR [rax],al
   14004f5f7:	add    BYTE PTR [rax],al
   14004f5f9:	add    ah,al
   14004f5fb:	add    BYTE PTR [rax],al
   14004f5fd:	add    BYTE PTR [rax],al
   14004f5ff:	add    BYTE PTR [rax+0x14003f3],bh
   14004f605:	add    BYTE PTR [rax],al
   14004f607:	add    BYTE PTR [rax],al
   14004f609:	add    bh,al
   14004f60b:	add    BYTE PTR [rax],al
   14004f60d:	add    BYTE PTR [rax],al
   14004f60f:	add    al,al
   14004f611:	repz add eax,DWORD PTR [rax+0x1]
   14004f615:	add    BYTE PTR [rax],al
   14004f617:	add    BYTE PTR [rax],al
   14004f619:	add    cl,cl
   14004f61b:	add    BYTE PTR [rax],al
   14004f61d:	add    BYTE PTR [rax],al
   14004f61f:	add    al,cl
   14004f621:	repz add eax,DWORD PTR [rax+0x1]
   14004f625:	add    BYTE PTR [rax],al
   14004f627:	add    BYTE PTR [rax],al
   14004f629:	add    BYTE PTR [rax+rax*1],dl
   14004f62c:	add    BYTE PTR [rax],al
   14004f62e:	add    BYTE PTR [rax],al
   14004f630:	shl    bl,1
   14004f632:	add    eax,DWORD PTR [rax+0x1]
   14004f635:	add    BYTE PTR [rax],al
   14004f637:	add    BYTE PTR [rax],al
   14004f639:	add    ah,cl
   14004f63b:	add    BYTE PTR [rax],al
   14004f63d:	add    BYTE PTR [rax],al
   14004f63f:	add    al,bl
   14004f641:	repz add eax,DWORD PTR [rax+0x1]
   14004f645:	add    BYTE PTR [rax],al
   14004f647:	add    BYTE PTR [rax],al
   14004f649:	add    bh,cl
   14004f64b:	add    BYTE PTR [rax],al
   14004f64d:	add    BYTE PTR [rax],al
   14004f64f:	add    al,ah
   14004f651:	repz add eax,DWORD PTR [rax+0x1]
   14004f655:	add    BYTE PTR [rax],al
   14004f657:	add    BYTE PTR [rax],al
   14004f659:	add    cl,dl
   14004f65b:	add    BYTE PTR [rax],al
   14004f65d:	add    BYTE PTR [rax],al
   14004f65f:	add    al,ch
   14004f661:	repz add eax,DWORD PTR [rax+0x1]
   14004f665:	add    BYTE PTR [rax],al
   14004f667:	add    BYTE PTR [rax],al
   14004f669:	add    ah,dl
   14004f66b:	add    BYTE PTR [rax],al
   14004f66d:	add    BYTE PTR [rax],al
   14004f66f:	add    al,dh
   14004f671:	repz add eax,DWORD PTR [rax+0x1]
   14004f675:	add    BYTE PTR [rax],al
   14004f677:	add    BYTE PTR [rax],al
   14004f679:	add    dh,dl
   14004f67b:	add    BYTE PTR [rax],al
   14004f67d:	add    BYTE PTR [rax],al
   14004f67f:	add    al,bh
   14004f681:	repz add eax,DWORD PTR [rax+0x1]
   14004f685:	add    BYTE PTR [rax],al
   14004f687:	add    BYTE PTR [rax],al
   14004f689:	add    cl,bl
   14004f68b:	add    BYTE PTR [rax],al
   14004f68d:	add    BYTE PTR [rax],al
   14004f68f:	add    BYTE PTR [rax],al
   14004f691:	hlt    
   14004f692:	add    eax,DWORD PTR [rax+0x1]
   14004f695:	add    BYTE PTR [rax],al
   14004f697:	add    BYTE PTR [rax],al
   14004f699:	add    bl,bl
   14004f69b:	add    BYTE PTR [rax],al
   14004f69d:	add    BYTE PTR [rax],al
   14004f69f:	add    BYTE PTR [rax],cl
   14004f6a1:	hlt    
   14004f6a2:	add    eax,DWORD PTR [rax+0x1]
   14004f6a5:	add    BYTE PTR [rax],al
   14004f6a7:	add    BYTE PTR [rax],al
   14004f6a9:	add    dh,bl
   14004f6ab:	add    BYTE PTR [rax],al
   14004f6ad:	add    BYTE PTR [rax],al
   14004f6af:	add    BYTE PTR [rax],dl
   14004f6b1:	hlt    
   14004f6b2:	add    eax,DWORD PTR [rax+0x1]
   14004f6b5:	add    BYTE PTR [rax],al
   14004f6b7:	add    BYTE PTR [rax],al
   14004f6b9:	add    al,ah
   14004f6bb:	add    BYTE PTR [rax],al
   14004f6bd:	add    BYTE PTR [rax],al
   14004f6bf:	add    BYTE PTR [rax],bl
   14004f6c1:	hlt    
   14004f6c2:	add    eax,DWORD PTR [rax+0x1]
   14004f6c5:	add    BYTE PTR [rax],al
   14004f6c7:	add    BYTE PTR [rax],al
   14004f6c9:	add    bl,ah
   14004f6cb:	add    BYTE PTR [rax],al
   14004f6cd:	add    BYTE PTR [rax],al
   14004f6cf:	add    BYTE PTR [rax],ah
   14004f6d1:	hlt    
   14004f6d2:	add    eax,DWORD PTR [rax+0x1]
   14004f6d5:	add    BYTE PTR [rax],al
   14004f6d7:	add    BYTE PTR [rax],al
   14004f6d9:	add    BYTE PTR [rdi],dl
   14004f6db:	add    BYTE PTR [rax],al
   14004f6dd:	add    BYTE PTR [rax],al
   14004f6df:	add    BYTE PTR [rax],ch
   14004f6e1:	hlt    
   14004f6e2:	add    eax,DWORD PTR [rax+0x1]
   14004f6e5:	add    BYTE PTR [rax],al
   14004f6e7:	add    BYTE PTR [rax],al
   14004f6e9:	add    ch,ah
   14004f6eb:	add    BYTE PTR [rax],al
   14004f6ed:	add    BYTE PTR [rax],al
   14004f6ef:	add    BYTE PTR [rax],dh
   14004f6f1:	hlt    
   14004f6f2:	add    eax,DWORD PTR [rax+0x1]
   14004f6f5:	add    BYTE PTR [rax],al
   14004f6f7:	add    BYTE PTR [rax],al
   14004f6f9:	add    al,ch
   14004f6fb:	add    BYTE PTR [rax],al
   14004f6fd:	add    BYTE PTR [rax],al
   14004f6ff:	add    BYTE PTR [rax],bh
   14004f701:	hlt    
   14004f702:	add    eax,DWORD PTR [rax+0x1]
   14004f705:	add    BYTE PTR [rax],al
   14004f707:	add    BYTE PTR [rax],al
   14004f709:	add    bl,ch
   14004f70b:	add    BYTE PTR [rax],al
   14004f70d:	add    BYTE PTR [rax],al
   14004f70f:	add    BYTE PTR [rax-0xc],al
   14004f712:	add    eax,DWORD PTR [rax+0x1]
   14004f715:	add    BYTE PTR [rax],al
   14004f717:	add    BYTE PTR [rax],al
   14004f719:	add    ch,ch
   14004f71b:	add    BYTE PTR [rax],al
   14004f71d:	add    BYTE PTR [rax],al
   14004f71f:	add    BYTE PTR [rax-0xc],cl
   14004f722:	add    eax,DWORD PTR [rax+0x1]
   14004f725:	add    BYTE PTR [rax],al
   14004f727:	add    BYTE PTR [rax],al
   14004f729:	add    al,dh
   14004f72b:	add    BYTE PTR [rax],al
   14004f72d:	add    BYTE PTR [rax],al
   14004f72f:	add    BYTE PTR [rax-0xc],dl
   14004f732:	add    eax,DWORD PTR [rax+0x1]
   14004f735:	add    BYTE PTR [rax],al
   14004f737:	add    BYTE PTR [rax],al
   14004f739:	add    dl,dh
   14004f73b:	add    BYTE PTR [rax],al
   14004f73d:	add    BYTE PTR [rax],al
   14004f73f:	add    BYTE PTR [rax-0xc],bl
   14004f742:	add    eax,DWORD PTR [rax+0x1]
   14004f745:	add    BYTE PTR [rax],al
   14004f747:	add    BYTE PTR [rax],al
   14004f749:	add    ch,dh
   14004f74b:	add    BYTE PTR [rax],al
   14004f74d:	add    BYTE PTR [rax],al
   14004f74f:	add    BYTE PTR [rax-0xc],ah
   14004f752:	add    eax,DWORD PTR [rax+0x1]
   14004f755:	add    BYTE PTR [rax],al
   14004f757:	add    BYTE PTR [rax],al
   14004f759:	add    bh,dh
   14004f75b:	add    BYTE PTR [rax],al
   14004f75d:	add    BYTE PTR [rax],al
   14004f75f:	add    BYTE PTR [rax-0xc],ch
   14004f762:	add    eax,DWORD PTR [rax+0x1]
   14004f765:	add    BYTE PTR [rax],al
   14004f767:	add    BYTE PTR [rax],al
   14004f769:	add    dl,bh
   14004f76b:	add    BYTE PTR [rax],al
   14004f76d:	add    BYTE PTR [rax],al
   14004f76f:	add    BYTE PTR [rax-0xc],dh
   14004f772:	add    eax,DWORD PTR [rax+0x1]
   14004f775:	add    BYTE PTR [rax],al
   14004f777:	add    BYTE PTR [rax],al
   14004f779:	add    ah,bh
   14004f77b:	add    BYTE PTR [rax],al
   14004f77d:	add    BYTE PTR [rax],al
   14004f77f:	add    BYTE PTR [rax-0xc],bh
   14004f782:	add    eax,DWORD PTR [rax+0x1]
   14004f785:	add    BYTE PTR [rax],al
   14004f787:	add    BYTE PTR [rbp-0x1],dl
   14004f78a:	inc    DWORD PTR [rax]
   14004f78c:	add    BYTE PTR [rax],al
   14004f78e:	add    BYTE PTR [rax],al
   14004f790:	xor    ah,0x3
   14004f793:	rex add DWORD PTR [rax],eax
   14004f796:	add    BYTE PTR [rax],al
   14004f798:	push   rbp
   14004f799:	(bad)  
   14004f79a:	inc    DWORD PTR [rax]
   14004f79c:	add    BYTE PTR [rax],al
   14004f79e:	add    BYTE PTR [rax],al
   14004f7a0:	mov    ah,dh
   14004f7a2:	add    eax,DWORD PTR [rax+0x1]
   14004f7a5:	add    BYTE PTR [rax],al
   14004f7a7:	add    BYTE PTR [rbp-0x1],dl
   14004f7aa:	out    dx,al
   14004f7ab:	add    BYTE PTR [rax],al
   14004f7ad:	add    BYTE PTR [rax],al
   14004f7af:	add    BYTE PTR [rax+0x14003f4],dl
   14004f7b5:	add    BYTE PTR [rax],al
   14004f7b7:	add    BYTE PTR [rbp-0x1],dl
   14004f7ba:	int    0x0
   14004f7bc:	add    BYTE PTR [rax],al
   14004f7be:	add    BYTE PTR [rax],al
   14004f7c0:	cwde   
   14004f7c1:	hlt    
   14004f7c2:	add    eax,DWORD PTR [rax+0x1]
   14004f7c5:	add    BYTE PTR [rax],al
   14004f7c7:	add    BYTE PTR [rbp-0x1],dl
   14004f7ca:	mov    eax,DWORD PTR [rax]
   14004f7cc:	add    BYTE PTR [rax],al
   14004f7ce:	add    BYTE PTR [rax],al
   14004f7d0:	movabs al,ds:0x3b000000014003f4
   14004f7d9:	sar    bh,1
   14004f7db:	add    BYTE PTR [rax],al
   14004f7dd:	add    BYTE PTR [rax],al
   14004f7df:	add    BYTE PTR [rsp+rsi*8+0x14003],ch
   14004f7e6:	add    BYTE PTR [rax],al
   14004f7e8:	add    BYTE PTR [rax],al
   14004f7ea:	rol    BYTE PTR [rax],0x0
   14004f7ed:	add    BYTE PTR [rax],al
   14004f7ef:	add    BYTE PTR [rsp+rsi*8+0x14003],dh
	...
   14004f7fe:	add    BYTE PTR [rax],al
   14004f800:	mov    esp,0x14003f4
   14004f805:	add    BYTE PTR [rax],al
   14004f807:	add    BYTE PTR [rax],al
   14004f809:	add    BYTE PTR [rbx],al
   14004f80b:	add    BYTE PTR [rax],al
   14004f80d:	add    BYTE PTR [rax],al
   14004f80f:	add    ah,al
   14004f811:	hlt    
   14004f812:	add    eax,DWORD PTR [rax+0x1]
   14004f815:	add    BYTE PTR [rax],al
   14004f817:	add    BYTE PTR [rax],al
   14004f819:	add    BYTE PTR [rdx],bl
   14004f81b:	add    BYTE PTR [rax],al
   14004f81d:	add    BYTE PTR [rax],al
   14004f81f:	add    al,dl
   14004f821:	hlt    
   14004f822:	add    eax,DWORD PTR [rax+0x1]
   14004f825:	add    BYTE PTR [rax],al
   14004f827:	add    BYTE PTR [rax],al
   14004f829:	add    bh,bh
   14004f82b:	add    BYTE PTR [rax],al
   14004f82d:	add    BYTE PTR [rax],al
   14004f82f:	add    al,bl
   14004f831:	hlt    
   14004f832:	add    eax,DWORD PTR [rax+0x1]
   14004f835:	add    BYTE PTR [rax],al
   14004f837:	add    BYTE PTR [rax],al
   14004f839:	add    BYTE PTR [rax+rax*1],bl
   14004f83c:	add    BYTE PTR [rax],al
   14004f83e:	add    BYTE PTR [rax],al
   14004f840:	loopne 0x14004f836
   14004f842:	add    eax,DWORD PTR [rax+0x1]
   14004f845:	add    BYTE PTR [rax],al
   14004f847:	add    BYTE PTR [rax],al
   14004f849:	add    BYTE PTR [rdi],bl
   14004f84b:	add    BYTE PTR [rax],al
   14004f84d:	add    BYTE PTR [rax],al
   14004f84f:	add    al,ch
   14004f851:	hlt    
   14004f852:	add    eax,DWORD PTR [rax+0x1]
   14004f855:	add    BYTE PTR [rax],al
   14004f857:	add    BYTE PTR [rax],al
   14004f859:	add    BYTE PTR [rcx],ah
   14004f85b:	add    BYTE PTR [rax],al
   14004f85d:	add    BYTE PTR [rax],al
   14004f85f:	add    al,dh
   14004f861:	hlt    
   14004f862:	add    eax,DWORD PTR [rax+0x1]
   14004f865:	add    BYTE PTR [rax],al
   14004f867:	add    BYTE PTR [rax],al
   14004f869:	add    BYTE PTR [rax+rax*1],ah
   14004f86c:	add    BYTE PTR [rax],al
   14004f86e:	add    BYTE PTR [rax],al
   14004f870:	clc    
   14004f871:	hlt    
   14004f872:	add    eax,DWORD PTR [rax+0x1]
   14004f875:	add    BYTE PTR [rax],al
   14004f877:	add    BYTE PTR [rax],al
   14004f879:	add    BYTE PTR [rsi],ah
   14004f87b:	add    BYTE PTR [rax],al
   14004f87d:	add    BYTE PTR [rax],al
   14004f87f:	add    BYTE PTR [rax],al
   14004f881:	cmc    
   14004f882:	add    eax,DWORD PTR [rax+0x1]
   14004f885:	add    BYTE PTR [rax],al
   14004f887:	add    BYTE PTR [rax],al
   14004f889:	add    BYTE PTR [rcx],ch
   14004f88b:	add    BYTE PTR [rax],al
   14004f88d:	add    BYTE PTR [rax],al
   14004f88f:	add    BYTE PTR [rax],cl
   14004f891:	cmc    
   14004f892:	add    eax,DWORD PTR [rax+0x1]
   14004f895:	add    BYTE PTR [rax],al
   14004f897:	add    BYTE PTR [rax],al
   14004f899:	add    BYTE PTR [rbx],ch
   14004f89b:	add    BYTE PTR [rax],al
   14004f89d:	add    BYTE PTR [rax],al
   14004f89f:	add    BYTE PTR [rax],dl
   14004f8a1:	cmc    
   14004f8a2:	add    eax,DWORD PTR [rax+0x1]
   14004f8a5:	add    BYTE PTR [rax],al
   14004f8a7:	add    BYTE PTR [rax],al
   14004f8a9:	add    BYTE PTR [rsi],ch
   14004f8ab:	add    BYTE PTR [rax],al
   14004f8ad:	add    BYTE PTR [rax],al
   14004f8af:	add    BYTE PTR [rax],bl
   14004f8b1:	cmc    
   14004f8b2:	add    eax,DWORD PTR [rax+0x1]
   14004f8b5:	add    BYTE PTR [rax],al
   14004f8b7:	add    BYTE PTR [rax],al
   14004f8b9:	add    BYTE PTR [rax],dh
   14004f8bb:	add    BYTE PTR [rax],al
   14004f8bd:	add    BYTE PTR [rax],al
   14004f8bf:	add    BYTE PTR [rax],ah
   14004f8c1:	cmc    
   14004f8c2:	add    eax,DWORD PTR [rax+0x1]
   14004f8c5:	add    BYTE PTR [rax],al
   14004f8c7:	add    BYTE PTR [rax],al
   14004f8c9:	add    BYTE PTR [rip+0x0],al        # 0x14004f8cf
   14004f8cf:	add    BYTE PTR [rax],ch
   14004f8d1:	cmc    
   14004f8d2:	add    eax,DWORD PTR [rax+0x1]
   14004f8d5:	add    BYTE PTR [rax],al
   14004f8d7:	add    BYTE PTR [rax],al
   14004f8d9:	add    BYTE PTR [rbx],dh
   14004f8db:	add    BYTE PTR [rax],al
   14004f8dd:	add    BYTE PTR [rax],al
   14004f8df:	add    BYTE PTR [rax],dh
   14004f8e1:	cmc    
   14004f8e2:	add    eax,DWORD PTR [rax+0x1]
   14004f8e5:	add    BYTE PTR [rax],al
   14004f8e7:	add    BYTE PTR [rax],al
   14004f8e9:	add    BYTE PTR [rsi],dh
   14004f8eb:	add    BYTE PTR [rax],al
   14004f8ed:	add    BYTE PTR [rax],al
   14004f8ef:	add    BYTE PTR [rax],bh
   14004f8f1:	cmc    
   14004f8f2:	add    eax,DWORD PTR [rax+0x1]
   14004f8f5:	add    BYTE PTR [rax],al
   14004f8f7:	add    BYTE PTR [rax],al
   14004f8f9:	add    BYTE PTR [rax],bh
   14004f8fb:	add    BYTE PTR [rax],al
   14004f8fd:	add    BYTE PTR [rax],al
   14004f8ff:	add    BYTE PTR [rax-0xb],al
   14004f902:	add    eax,DWORD PTR [rax+0x1]
   14004f905:	add    BYTE PTR [rax],al
   14004f907:	add    BYTE PTR [rax],al
   14004f909:	add    BYTE PTR [rbx],bh
   14004f90b:	add    BYTE PTR [rax],al
   14004f90d:	add    BYTE PTR [rax],al
   14004f90f:	add    BYTE PTR [rax-0xb],cl
   14004f912:	add    eax,DWORD PTR [rax+0x1]
   14004f915:	add    BYTE PTR [rax],al
   14004f917:	add    BYTE PTR [rax],al
   14004f919:	add    BYTE PTR [rip+0x0],bh        # 0x14004f91f
   14004f91f:	add    BYTE PTR [rax-0xb],dl
   14004f922:	add    eax,DWORD PTR [rax+0x1]
   14004f925:	add    BYTE PTR [rax],al
   14004f927:	add    BYTE PTR [rax],al
   14004f929:	add    BYTE PTR [rax+0x0],al
   14004f92c:	add    BYTE PTR [rax],al
   14004f92e:	add    BYTE PTR [rax],al
   14004f930:	pop    rax
   14004f931:	cmc    
   14004f932:	add    eax,DWORD PTR [rax+0x1]
   14004f935:	add    BYTE PTR [rax],al
   14004f937:	add    BYTE PTR [rax],al
   14004f939:	add    BYTE PTR [rdx+0x0],al
   14004f93c:	add    BYTE PTR [rax],al
   14004f93e:	add    BYTE PTR [rax],al
   14004f940:	(bad)  
   14004f941:	cmc    
   14004f942:	add    eax,DWORD PTR [rax+0x1]
   14004f945:	add    BYTE PTR [rax],al
   14004f947:	add    BYTE PTR [rax],al
   14004f949:	add    BYTE PTR [rbp+0x0],al
   14004f94c:	add    BYTE PTR [rax],al
   14004f94e:	add    BYTE PTR [rax],al
   14004f950:	push   0x14003f5
   14004f955:	add    BYTE PTR [rax],al
   14004f957:	add    BYTE PTR [rax],al
   14004f959:	add    BYTE PTR [rdi+0x0],al
   14004f95c:	add    BYTE PTR [rax],al
   14004f95e:	add    BYTE PTR [rax],al
   14004f960:	jo     0x14004f957
   14004f962:	add    eax,DWORD PTR [rax+0x1]
   14004f965:	add    BYTE PTR [rax],al
   14004f967:	add    BYTE PTR [rax],al
   14004f969:	add    BYTE PTR [rdx+0x0],cl
   14004f96c:	add    BYTE PTR [rax],al
   14004f96e:	add    BYTE PTR [rax],al
   14004f970:	js     0x14004f967
   14004f972:	add    eax,DWORD PTR [rax+0x1]
   14004f975:	add    BYTE PTR [rax],al
   14004f977:	add    BYTE PTR [rax],al
   14004f979:	add    BYTE PTR [rax],cl
   14004f97b:	add    BYTE PTR [rax],al
   14004f97d:	add    BYTE PTR [rax],al
   14004f97f:	add    BYTE PTR [rax+0x14003f5],al
   14004f985:	add    BYTE PTR [rax],al
   14004f987:	add    BYTE PTR [rax],al
   14004f989:	add    BYTE PTR [rbp+0x0],cl
   14004f98c:	add    BYTE PTR [rax],al
   14004f98e:	add    BYTE PTR [rax],al
   14004f990:	mov    ch,dh
   14004f992:	add    eax,DWORD PTR [rax+0x1]
   14004f995:	add    BYTE PTR [rax],al
   14004f997:	add    BYTE PTR [rax],al
   14004f999:	add    BYTE PTR [rdi+0x0],cl
   14004f99c:	add    BYTE PTR [rax],al
   14004f99e:	add    BYTE PTR [rax],al
   14004f9a0:	nop
   14004f9a1:	cmc    
   14004f9a2:	add    eax,DWORD PTR [rax+0x1]
   14004f9a5:	add    BYTE PTR [rax],al
   14004f9a7:	add    BYTE PTR [rax],al
   14004f9a9:	add    BYTE PTR [rdx+0x0],dl
   14004f9ac:	add    BYTE PTR [rax],al
   14004f9ae:	add    BYTE PTR [rax],al
   14004f9b0:	cwde   
   14004f9b1:	cmc    
   14004f9b2:	add    eax,DWORD PTR [rax+0x1]
   14004f9b5:	add    BYTE PTR [rax],al
   14004f9b7:	add    BYTE PTR [rax],al
   14004f9b9:	add    BYTE PTR [rax+rax*1+0x0],dl
   14004f9bd:	add    BYTE PTR [rax],al
   14004f9bf:	add    BYTE PTR [rax+0x14003f5],ah
   14004f9c5:	add    BYTE PTR [rax],al
   14004f9c7:	add    BYTE PTR [rax],al
   14004f9c9:	add    BYTE PTR [rdi+0x0],dl
   14004f9cc:	add    BYTE PTR [rax],al
   14004f9ce:	add    BYTE PTR [rax],al
   14004f9d0:	test   al,0xf5
   14004f9d2:	add    eax,DWORD PTR [rax+0x1]
   14004f9d5:	add    BYTE PTR [rax],al
   14004f9d7:	add    BYTE PTR [rax],al
   14004f9d9:	add    BYTE PTR [rcx+0x0],bl
   14004f9dc:	add    BYTE PTR [rax],al
   14004f9de:	add    BYTE PTR [rax],al
   14004f9e0:	mov    al,0xf5
   14004f9e2:	add    eax,DWORD PTR [rax+0x1]
   14004f9e5:	add    BYTE PTR [rax],al
   14004f9e7:	add    BYTE PTR [rax],al
   14004f9e9:	add    BYTE PTR [rax+rax*1+0x0],bl
   14004f9ed:	add    BYTE PTR [rax],al
   14004f9ef:	add    BYTE PTR [rax+0x14003f5],bh
   14004f9f5:	add    BYTE PTR [rax],al
   14004f9f7:	add    BYTE PTR [rax],al
   14004f9f9:	add    BYTE PTR [rsi+0x0],bl
   14004f9fc:	add    BYTE PTR [rax],al
   14004f9fe:	add    BYTE PTR [rax],al
   14004fa00:	shl    ch,0x3
   14004fa03:	rex add DWORD PTR [rax],eax
   14004fa06:	add    BYTE PTR [rax],al
   14004fa08:	add    BYTE PTR [rax],al
   14004fa0a:	(bad)  
   14004fa0b:	add    BYTE PTR [rax],al
   14004fa0d:	add    BYTE PTR [rax],al
   14004fa0f:	add    al,cl
   14004fa11:	cmc    
   14004fa12:	add    eax,DWORD PTR [rax+0x1]
   14004fa15:	add    BYTE PTR [rax],al
   14004fa17:	add    BYTE PTR [rax],al
   14004fa19:	add    BYTE PTR [rbx+0x0],ah
   14004fa1c:	add    BYTE PTR [rax],al
   14004fa1e:	add    BYTE PTR [rax],al
   14004fa20:	shl    ch,1
   14004fa22:	add    eax,DWORD PTR [rax+0x1]
   14004fa25:	add    BYTE PTR [rax],al
   14004fa27:	add    BYTE PTR [rax],al
   14004fa29:	add    BYTE PTR [rdx],cl
   14004fa2b:	add    BYTE PTR [rax],al
   14004fa2d:	add    BYTE PTR [rax],al
   14004fa2f:	add    al,bl
   14004fa31:	cmc    
   14004fa32:	add    eax,DWORD PTR [rax+0x1]
   14004fa35:	add    BYTE PTR [rax],al
   14004fa37:	add    BYTE PTR [rax],al
   14004fa39:	add    BYTE PTR [rsi+0x0],ah
   14004fa3c:	add    BYTE PTR [rax],al
   14004fa3e:	add    BYTE PTR [rax],al
   14004fa40:	loopne 0x14004fa37
   14004fa42:	add    eax,DWORD PTR [rax+0x1]
   14004fa45:	add    BYTE PTR [rax],al
   14004fa47:	add    BYTE PTR [rax],al
   14004fa49:	add    BYTE PTR [rcx+0x0],ch
   14004fa4c:	add    BYTE PTR [rax],al
   14004fa4e:	add    BYTE PTR [rax],al
   14004fa50:	call   0x14144fe4a
   14004fa55:	add    BYTE PTR [rax],al
   14004fa57:	add    BYTE PTR [rax],al
   14004fa59:	add    BYTE PTR [rbx+0x0],ch
   14004fa5c:	add    BYTE PTR [rax],al
   14004fa5e:	add    BYTE PTR [rax],al
   14004fa60:	lock cmc 
   14004fa62:	add    eax,DWORD PTR [rax+0x1]
   14004fa65:	add    BYTE PTR [rax],al
   14004fa67:	add    BYTE PTR [rax],al
   14004fa69:	add    BYTE PTR [rsi+0x0],ch
   14004fa6c:	add    BYTE PTR [rax],al
   14004fa6e:	add    BYTE PTR [rax],al
   14004fa70:	clc    
   14004fa71:	cmc    
   14004fa72:	add    eax,DWORD PTR [rax+0x1]
   14004fa75:	add    BYTE PTR [rax],al
   14004fa77:	add    BYTE PTR [rax],al
   14004fa79:	add    BYTE PTR [rax+0x0],dh
   14004fa7c:	add    BYTE PTR [rax],al
   14004fa7e:	add    BYTE PTR [rax],al
   14004fa80:	add    dh,dh
   14004fa82:	add    eax,DWORD PTR [rax+0x1]
   14004fa85:	add    BYTE PTR [rax],al
   14004fa87:	add    BYTE PTR [rax],al
   14004fa89:	add    BYTE PTR [rbx+0x0],dh
   14004fa8c:	add    BYTE PTR [rax],al
   14004fa8e:	add    BYTE PTR [rax],al
   14004fa90:	or     dh,dh
   14004fa92:	add    eax,DWORD PTR [rax+0x1]
   14004fa95:	add    BYTE PTR [rax],al
   14004fa97:	add    BYTE PTR [rax],al
   14004fa99:	add    BYTE PTR [rbp+0x0],dh
   14004fa9c:	add    BYTE PTR [rax],al
   14004fa9e:	add    BYTE PTR [rax],al
   14004faa0:	adc    dh,dh
   14004faa2:	add    eax,DWORD PTR [rax+0x1]
   14004faa5:	add    BYTE PTR [rax],al
   14004faa7:	add    BYTE PTR [rax],al
   14004faa9:	add    BYTE PTR [rax+0x0],bh
   14004faac:	add    BYTE PTR [rax],al
   14004faae:	add    BYTE PTR [rax],al
   14004fab0:	sbb    dh,dh
   14004fab2:	add    eax,DWORD PTR [rax+0x1]
   14004fab5:	add    BYTE PTR [rax],al
   14004fab7:	add    BYTE PTR [rax],al
   14004fab9:	add    BYTE PTR [rdx+0x0],bh
   14004fabc:	add    BYTE PTR [rax],al
   14004fabe:	add    BYTE PTR [rax],al
   14004fac0:	and    dh,dh
   14004fac2:	add    eax,DWORD PTR [rax+0x1]
   14004fac5:	add    BYTE PTR [rax],al
   14004fac7:	add    BYTE PTR [rax],al
   14004fac9:	add    BYTE PTR [rbp+0x0],bh
   14004facc:	add    BYTE PTR [rax],al
   14004face:	add    BYTE PTR [rax],al
   14004fad0:	sub    dh,dh
   14004fad2:	add    eax,DWORD PTR [rax+0x1]
   14004fad5:	add    BYTE PTR [rax],al
   14004fad7:	add    BYTE PTR [rax],al
   14004fad9:	add    BYTE PTR [rip+0x0],cl        # 0x14004fadf
   14004fadf:	add    BYTE PTR [rax],dh
   14004fae1:	test   BYTE PTR [rbx],0x40
   14004fae4:	add    DWORD PTR [rax],eax
   14004fae6:	add    BYTE PTR [rax],al
   14004fae8:	add    BYTE PTR [rax],al
   14004faea:	jg     0x14004faec
   14004faec:	add    BYTE PTR [rax],al
   14004faee:	add    BYTE PTR [rax],al
   14004faf0:	cmp    dh,dh
   14004faf2:	add    eax,DWORD PTR [rax+0x1]
   14004faf5:	add    BYTE PTR [rax],al
   14004faf7:	add    BYTE PTR [rax],al
   14004faf9:	add    BYTE PTR [rdx+0x0],al
   14004faff:	add    BYTE PTR [rax-0xa],al
   14004fb02:	add    eax,DWORD PTR [rax+0x1]
   14004fb05:	add    BYTE PTR [rax],al
   14004fb07:	add    BYTE PTR [rax],al
   14004fb09:	add    BYTE PTR [rbp+0x0],al
   14004fb0f:	add    BYTE PTR [rax-0xa],cl
   14004fb12:	add    eax,DWORD PTR [rax+0x1]
   14004fb15:	add    BYTE PTR [rax],al
   14004fb17:	add    BYTE PTR [rax],al
   14004fb19:	add    BYTE PTR [rdi+0x0],al
   14004fb1f:	add    BYTE PTR [rax-0xa],dl
   14004fb22:	add    eax,DWORD PTR [rax+0x1]
   14004fb25:	add    BYTE PTR [rax],al
   14004fb27:	add    BYTE PTR [rax],al
   14004fb29:	add    BYTE PTR [rdx+0x0],cl
   14004fb2f:	add    BYTE PTR [rax-0xa],bl
   14004fb32:	add    eax,DWORD PTR [rax+0x1]
   14004fb35:	add    BYTE PTR [rax],al
   14004fb37:	add    BYTE PTR [rax],al
   14004fb39:	add    BYTE PTR [rax+rax*1+0x0],cl
   14004fb40:	(bad)  
   14004fb41:	test   BYTE PTR [rbx],0x40
   14004fb44:	add    DWORD PTR [rax],eax
   14004fb46:	add    BYTE PTR [rax],al
   14004fb48:	add    BYTE PTR [rax],al
   14004fb4a:	pop    QWORD PTR [rax]
   14004fb4c:	add    BYTE PTR [rax],al
   14004fb4e:	add    BYTE PTR [rax],al
   14004fb50:	push   0x14003f6
   14004fb55:	add    BYTE PTR [rax],al
   14004fb57:	add    BYTE PTR [rax],al
   14004fb59:	add    BYTE PTR [rcx+0x0],dl
   14004fb5f:	add    BYTE PTR [rax-0xa],dh
   14004fb62:	add    eax,DWORD PTR [rax+0x1]
   14004fb65:	add    BYTE PTR [rax],al
   14004fb67:	add    BYTE PTR [rax],al
   14004fb69:	add    BYTE PTR [rax+rax*1+0x0],dl
   14004fb70:	js     0x14004fb68
   14004fb72:	add    eax,DWORD PTR [rax+0x1]
   14004fb75:	add    BYTE PTR [rax],al
   14004fb77:	add    BYTE PTR [rax],al
   14004fb79:	add    BYTE PTR [rsi+0x0],dl
   14004fb7f:	add    BYTE PTR [rax+0x14003f6],al
   14004fb85:	add    BYTE PTR [rax],al
   14004fb87:	add    BYTE PTR [rax],al
   14004fb89:	add    BYTE PTR [rdi],cl
   14004fb8b:	add    BYTE PTR [rax],al
   14004fb8d:	add    BYTE PTR [rax],al
   14004fb8f:	add    BYTE PTR [rax+0x14003f6],cl
   14004fb95:	add    BYTE PTR [rax],al
   14004fb97:	add    BYTE PTR [rax],al
   14004fb99:	add    BYTE PTR [rcx+0x0],bl
   14004fb9f:	add    BYTE PTR [rax+0x14003f6],dl
   14004fba5:	add    BYTE PTR [rax],al
   14004fba7:	add    BYTE PTR [rax],al
   14004fba9:	add    BYTE PTR [rax+rax*1+0x0],bl
   14004fbb0:	cwde   
   14004fbb1:	test   BYTE PTR [rbx],0x40
   14004fbb4:	add    DWORD PTR [rax],eax
   14004fbb6:	add    BYTE PTR [rax],al
   14004fbb8:	add    BYTE PTR [rax],al
   14004fbba:	sahf   
   14004fbbb:	add    BYTE PTR [rax],al
   14004fbbd:	add    BYTE PTR [rax],al
   14004fbbf:	add    BYTE PTR [rax+0x14003f6],ah
   14004fbc5:	add    BYTE PTR [rax],al
   14004fbc7:	add    BYTE PTR [rax],al
   14004fbc9:	add    BYTE PTR [rcx+0x0],ah
   14004fbcf:	add    BYTE PTR [rax+0x14003f6],ch
   14004fbd5:	add    BYTE PTR [rax],al
   14004fbd7:	add    BYTE PTR [rax],al
   14004fbd9:	add    BYTE PTR [rbx+0x0],ah
   14004fbdf:	add    BYTE PTR [rax+0x14003f6],dh
   14004fbe5:	add    BYTE PTR [rax],al
   14004fbe7:	add    BYTE PTR [rax],al
   14004fbe9:	add    BYTE PTR [rsi+0x0],ah
   14004fbef:	add    BYTE PTR [rax+0x14003f6],bh
   14004fbf5:	add    BYTE PTR [rax],al
   14004fbf7:	add    BYTE PTR [rax],al
   14004fbf9:	add    BYTE PTR [rax+0x0],ch
   14004fbff:	add    al,al
   14004fc01:	test   BYTE PTR [rbx],0x40
   14004fc04:	add    DWORD PTR [rax],eax
   14004fc06:	add    BYTE PTR [rax],al
   14004fc08:	add    BYTE PTR [rax],al
   14004fc0a:	stos   DWORD PTR es:[rdi],eax
   14004fc0b:	add    BYTE PTR [rax],al
   14004fc0d:	add    BYTE PTR [rax],al
   14004fc0f:	add    al,cl
   14004fc11:	test   BYTE PTR [rbx],0x40
   14004fc14:	add    DWORD PTR [rax],eax
   14004fc16:	add    BYTE PTR [rax],al
   14004fc18:	add    BYTE PTR [rax],al
   14004fc1a:	lods   eax,DWORD PTR ds:[rsi]
   14004fc1b:	add    BYTE PTR [rax],al
   14004fc1d:	add    BYTE PTR [rax],al
   14004fc1f:	add    al,dl
   14004fc21:	test   BYTE PTR [rbx],0x40
   14004fc24:	add    DWORD PTR [rax],eax
   14004fc26:	add    BYTE PTR [rax],al
   14004fc28:	add    BYTE PTR [rax],al
   14004fc2a:	mov    al,0x0
   14004fc2c:	add    BYTE PTR [rax],al
   14004fc2e:	add    BYTE PTR [rax],al
   14004fc30:	fdiv   st,st(6)
   14004fc32:	add    eax,DWORD PTR [rax+0x1]
   14004fc35:	add    BYTE PTR [rax],al
   14004fc37:	add    BYTE PTR [rax],al
   14004fc39:	add    BYTE PTR [rdx],dl
   14004fc3b:	add    BYTE PTR [rax],al
   14004fc3d:	add    BYTE PTR [rax],al
   14004fc3f:	add    al,ah
   14004fc41:	test   BYTE PTR [rbx],0x40
   14004fc44:	add    DWORD PTR [rax],eax
   14004fc46:	add    BYTE PTR [rax],al
   14004fc48:	add    BYTE PTR [rax],al
   14004fc4a:	mov    bl,0x0
   14004fc4c:	add    BYTE PTR [rax],al
   14004fc4e:	add    BYTE PTR [rax],al
   14004fc50:	call   0x14145004b
   14004fc55:	add    BYTE PTR [rax],al
   14004fc57:	add    BYTE PTR [rax],al
   14004fc59:	add    BYTE PTR [rbp+0x0],dh
   14004fc5f:	add    al,dh
   14004fc61:	test   BYTE PTR [rbx],0x40
   14004fc64:	add    DWORD PTR [rax],eax
   14004fc66:	add    BYTE PTR [rax],al
   14004fc68:	add    BYTE PTR [rax],al
   14004fc6a:	mov    eax,0x0
   14004fc6f:	add    al,bh
   14004fc71:	test   BYTE PTR [rbx],0x40
   14004fc74:	add    DWORD PTR [rax],eax
   14004fc76:	add    BYTE PTR [rax],al
   14004fc78:	add    BYTE PTR [rax],al
   14004fc7a:	mov    edx,0x0
   14004fc7f:	add    BYTE PTR [rax],al
   14004fc81:	test   DWORD PTR [rbx],0x140
   14004fc87:	add    BYTE PTR [rax],al
   14004fc89:	add    BYTE PTR [rbp+0x0],bh
   14004fc8f:	add    BYTE PTR [rax],cl
   14004fc91:	test   DWORD PTR [rbx],0x140
   14004fc97:	add    BYTE PTR [rax],al
   14004fc99:	add    BYTE PTR [rdi+0x0],bh
   14004fc9f:	add    BYTE PTR [rax],dl
   14004fca1:	test   DWORD PTR [rbx],0x140
   14004fca7:	add    BYTE PTR [rax],al
   14004fca9:	add    dl,al
   14004fcab:	add    BYTE PTR [rax],al
   14004fcad:	add    BYTE PTR [rax],al
   14004fcaf:	add    BYTE PTR [rax],bl
   14004fcb1:	test   DWORD PTR [rbx],0x140
   14004fcb7:	add    BYTE PTR [rax],al
   14004fcb9:	add    ah,al
   14004fcbb:	add    BYTE PTR [rax],al
   14004fcbd:	add    BYTE PTR [rax],al
   14004fcbf:	add    BYTE PTR [rax],ah
   14004fcc1:	test   DWORD PTR [rbx],0x140
   14004fcc7:	add    BYTE PTR [rax],al
   14004fcc9:	add    bh,al
   14004fccb:	add    BYTE PTR [rax],al
   14004fccd:	add    BYTE PTR [rax],al
   14004fccf:	add    BYTE PTR [rax],ch
   14004fcd1:	test   DWORD PTR [rbx],0x140
   14004fcd7:	add    BYTE PTR [rax],al
   14004fcd9:	add    cl,cl
   14004fcdb:	add    BYTE PTR [rax],al
   14004fcdd:	add    BYTE PTR [rax],al
   14004fcdf:	add    BYTE PTR [rax],dh
   14004fce1:	test   DWORD PTR [rbx],0x140
   14004fce7:	add    BYTE PTR [rax],al
   14004fce9:	add    BYTE PTR [rax+rax*1],dl
   14004fcec:	add    BYTE PTR [rax],al
   14004fcee:	add    BYTE PTR [rax],al
   14004fcf0:	cmp    bh,dh
   14004fcf2:	add    eax,DWORD PTR [rax+0x1]
   14004fcf5:	add    BYTE PTR [rax],al
   14004fcf7:	add    BYTE PTR [rax],al
   14004fcf9:	add    ah,cl
   14004fcfb:	add    BYTE PTR [rax],al
   14004fcfd:	add    BYTE PTR [rax],al
   14004fcff:	add    BYTE PTR [rax-0x9],al
   14004fd02:	add    eax,DWORD PTR [rax+0x1]
   14004fd05:	add    BYTE PTR [rax],al
   14004fd07:	add    BYTE PTR [rax],al
   14004fd09:	add    bh,cl
   14004fd0b:	add    BYTE PTR [rax],al
   14004fd0d:	add    BYTE PTR [rax],al
   14004fd0f:	add    BYTE PTR [rax-0x9],cl
   14004fd12:	add    eax,DWORD PTR [rax+0x1]
   14004fd15:	add    BYTE PTR [rax],al
   14004fd17:	add    BYTE PTR [rax],al
   14004fd19:	add    cl,dl
   14004fd1b:	add    BYTE PTR [rax],al
   14004fd1d:	add    BYTE PTR [rax],al
   14004fd1f:	add    BYTE PTR [rax-0x9],dl
   14004fd22:	add    eax,DWORD PTR [rax+0x1]
   14004fd25:	add    BYTE PTR [rax],al
   14004fd27:	add    BYTE PTR [rax],al
   14004fd29:	add    ah,dl
   14004fd2b:	add    BYTE PTR [rax],al
   14004fd2d:	add    BYTE PTR [rax],al
   14004fd2f:	add    BYTE PTR [rax-0x9],bl
   14004fd32:	add    eax,DWORD PTR [rax+0x1]
   14004fd35:	add    BYTE PTR [rax],al
   14004fd37:	add    BYTE PTR [rax],al
   14004fd39:	add    dh,dl
   14004fd3b:	add    BYTE PTR [rax],al
   14004fd3d:	add    BYTE PTR [rax],al
   14004fd3f:	add    BYTE PTR [rax-0x9],ah
   14004fd42:	add    eax,DWORD PTR [rax+0x1]
   14004fd45:	add    BYTE PTR [rax],al
   14004fd47:	add    BYTE PTR [rax],al
   14004fd49:	add    cl,bl
   14004fd4b:	add    BYTE PTR [rax],al
   14004fd4d:	add    BYTE PTR [rax],al
   14004fd4f:	add    BYTE PTR [rax-0x9],ch
   14004fd52:	add    eax,DWORD PTR [rax+0x1]
   14004fd55:	add    BYTE PTR [rax],al
   14004fd57:	add    BYTE PTR [rax],al
   14004fd59:	add    bl,bl
   14004fd5b:	add    BYTE PTR [rax],al
   14004fd5d:	add    BYTE PTR [rax],al
   14004fd5f:	add    BYTE PTR [rax-0x9],dh
   14004fd62:	add    eax,DWORD PTR [rax+0x1]
   14004fd65:	add    BYTE PTR [rax],al
   14004fd67:	add    BYTE PTR [rax],al
   14004fd69:	add    dh,bl
   14004fd6b:	add    BYTE PTR [rax],al
   14004fd6d:	add    BYTE PTR [rax],al
   14004fd6f:	add    BYTE PTR [rax-0x9],bh
   14004fd72:	add    eax,DWORD PTR [rax+0x1]
   14004fd75:	add    BYTE PTR [rax],al
   14004fd77:	add    BYTE PTR [rax],al
   14004fd79:	add    al,ah
   14004fd7b:	add    BYTE PTR [rax],al
   14004fd7d:	add    BYTE PTR [rax],al
   14004fd7f:	add    BYTE PTR [rax+0x14003f7],al
   14004fd85:	add    BYTE PTR [rax],al
   14004fd87:	add    BYTE PTR [rax],al
   14004fd89:	add    bl,ah
   14004fd8b:	add    BYTE PTR [rax],al
   14004fd8d:	add    BYTE PTR [rax],al
   14004fd8f:	add    BYTE PTR [rax+0x14003f7],cl
   14004fd95:	add    BYTE PTR [rax],al
   14004fd97:	add    BYTE PTR [rax],al
   14004fd99:	add    BYTE PTR [rdi],dl
   14004fd9b:	add    BYTE PTR [rax],al
   14004fd9d:	add    BYTE PTR [rax],al
   14004fd9f:	add    BYTE PTR [rax+0x14003f7],dl
   14004fda5:	add    BYTE PTR [rax],al
   14004fda7:	add    BYTE PTR [rax],al
   14004fda9:	add    ch,ah
   14004fdab:	add    BYTE PTR [rax],al
   14004fdad:	add    BYTE PTR [rax],al
   14004fdaf:	add    BYTE PTR [rax+0x14003f7],bl
   14004fdb5:	add    BYTE PTR [rax],al
   14004fdb7:	add    BYTE PTR [rax],al
   14004fdb9:	add    al,ch
   14004fdbb:	add    BYTE PTR [rax],al
   14004fdbd:	add    BYTE PTR [rax],al
   14004fdbf:	add    BYTE PTR [rax+0x14003f7],ah
   14004fdc5:	add    BYTE PTR [rax],al
   14004fdc7:	add    BYTE PTR [rax],al
   14004fdc9:	add    bl,ch
   14004fdcb:	add    BYTE PTR [rax],al
   14004fdcd:	add    BYTE PTR [rax],al
   14004fdcf:	add    BYTE PTR [rax+0x14003f7],ch
   14004fdd5:	add    BYTE PTR [rax],al
   14004fdd7:	add    BYTE PTR [rax],al
   14004fdd9:	add    ch,ch
   14004fddb:	add    BYTE PTR [rax],al
   14004fddd:	add    BYTE PTR [rax],al
   14004fddf:	add    BYTE PTR [rax+0x14003f7],dh
   14004fde5:	add    BYTE PTR [rax],al
   14004fde7:	add    BYTE PTR [rax],al
   14004fde9:	add    al,dh
   14004fdeb:	add    BYTE PTR [rax],al
   14004fded:	add    BYTE PTR [rax],al
   14004fdef:	add    BYTE PTR [rax+0x14003f7],bh
   14004fdf5:	add    BYTE PTR [rax],al
   14004fdf7:	add    BYTE PTR [rax],al
   14004fdf9:	add    dl,dh
   14004fdfb:	add    BYTE PTR [rax],al
   14004fdfd:	add    BYTE PTR [rax],al
   14004fdff:	add    al,al
   14004fe01:	test   DWORD PTR [rbx],0x140
   14004fe07:	add    BYTE PTR [rax],al
   14004fe09:	add    ch,dh
   14004fe0b:	add    BYTE PTR [rax],al
   14004fe0d:	add    BYTE PTR [rax],al
   14004fe0f:	add    al,cl
   14004fe11:	test   DWORD PTR [rbx],0x140
   14004fe17:	add    BYTE PTR [rax],al
   14004fe19:	add    bh,dh
   14004fe1b:	add    BYTE PTR [rax],al
   14004fe1d:	add    BYTE PTR [rax],al
   14004fe1f:	add    al,dl
   14004fe21:	test   DWORD PTR [rbx],0x140
   14004fe27:	add    BYTE PTR [rax],al
   14004fe29:	add    dl,bh
   14004fe2b:	add    BYTE PTR [rax],al
   14004fe2d:	add    BYTE PTR [rax],al
   14004fe2f:	add    al,bl
   14004fe31:	test   DWORD PTR [rbx],0x140
   14004fe37:	add    BYTE PTR [rax],al
   14004fe39:	add    ah,bh
   14004fe3b:	add    BYTE PTR [rax],al
   14004fe3d:	add    BYTE PTR [rax],al
   14004fe3f:	add    al,ah
   14004fe41:	test   DWORD PTR [rbx],0x140
   14004fe47:	add    BYTE PTR [rbp+0xf],dl
   14004fe4a:	inc    DWORD PTR [rax]
   14004fe4c:	add    BYTE PTR [rax],al
   14004fe4e:	add    BYTE PTR [rax],al
   14004fe50:	lock test DWORD PTR [rbx],0x140
   14004fe57:	add    BYTE PTR [rbp+0xf],dl
   14004fe5a:	inc    DWORD PTR [rax]
   14004fe5c:	add    BYTE PTR [rax],al
   14004fe5e:	add    BYTE PTR [rax],al
   14004fe60:	add    al,bh
   14004fe62:	add    eax,DWORD PTR [rax+0x1]
   14004fe65:	add    BYTE PTR [rax],al
   14004fe67:	add    BYTE PTR [rbp+0xf],dl
   14004fe6a:	out    dx,al
   14004fe6b:	add    BYTE PTR [rax],al
   14004fe6d:	add    BYTE PTR [rax],al
   14004fe6f:	add    BYTE PTR [rax],dl
   14004fe71:	clc    
   14004fe72:	add    eax,DWORD PTR [rax+0x1]
   14004fe75:	add    BYTE PTR [rax],al
   14004fe77:	add    BYTE PTR [rbp+0xe],dl
   14004fe7a:	int    0x0
   14004fe7c:	add    BYTE PTR [rax],al
   14004fe7e:	add    BYTE PTR [rax],al
   14004fe80:	and    al,bh
   14004fe82:	add    eax,DWORD PTR [rax+0x1]
   14004fe85:	add    BYTE PTR [rax],al
   14004fe87:	add    BYTE PTR [rbp+0xe],dl
   14004fe8a:	mov    eax,DWORD PTR [rax]
   14004fe8c:	add    BYTE PTR [rax],al
   14004fe8e:	add    BYTE PTR [rax],al
   14004fe90:	xor    al,bh
   14004fe92:	add    eax,DWORD PTR [rax+0x1]
   14004fe95:	add    BYTE PTR [rax],al
   14004fe97:	add    cl,ch
   14004fe99:	xchg   esi,eax
   14004fe9a:	inc    DWORD PTR [rax]
   14004fe9c:	add    BYTE PTR [rax],al
   14004fe9e:	add    BYTE PTR [rax],al
   14004fea0:	cmp    al,bh
   14004fea2:	add    eax,DWORD PTR [rax+0x1]
   14004fea5:	add    BYTE PTR [rax],al
   14004fea7:	add    dl,ch
   14004fea9:	xchg   ecx,eax
   14004feaa:	inc    DWORD PTR [rax]
   14004feac:	add    BYTE PTR [rax],al
   14004feae:	add    BYTE PTR [rax],al
   14004feb0:	rex.W clc 
   14004feb2:	add    eax,DWORD PTR [rax+0x1]
   14004feb5:	add    BYTE PTR [rax],al
   14004feb7:	add    bl,ch
   14004feb9:	(bad)  
   14004feba:	out    dx,al
   14004febb:	add    BYTE PTR [rax],al
   14004febd:	add    BYTE PTR [rax],al
   14004febf:	add    BYTE PTR [rax-0x8],bl
   14004fec2:	add    eax,DWORD PTR [rax+0x1]
   14004fec5:	add    BYTE PTR [rax],al
   14004fec7:	add    ah,ch
   14004fec9:	xchg   ebp,ecx
   14004fecb:	add    BYTE PTR [rax],al
   14004fecd:	add    BYTE PTR [rax],al
   14004fecf:	add    BYTE PTR [rax-0x8],ch
   14004fed2:	add    eax,DWORD PTR [rax+0x1]
   14004fed5:	add    BYTE PTR [rax],al
   14004fed7:	add    dl,ch
   14004fed9:	xchg   esp,eax
   14004feda:	mov    eax,DWORD PTR [rax]
   14004fedc:	add    BYTE PTR [rax],al
   14004fede:	add    BYTE PTR [rax],al
   14004fee0:	js     0x14004feda
   14004fee2:	add    eax,DWORD PTR [rax+0x1]
   14004fee5:	add    BYTE PTR [rax],al
   14004fee7:	add    BYTE PTR [rax],al
   14004fee9:	mov    ebp,cs
   14004feeb:	add    BYTE PTR [rax],al
   14004feed:	add    BYTE PTR [rax],al
   14004feef:	add    BYTE PTR [rax+0x14003f8],cl
   14004fef5:	add    BYTE PTR [rax],al
   14004fef7:	add    BYTE PTR [rax],al
   14004fef9:	xchg   esp,eax
   14004fefa:	inc    DWORD PTR [rax]
   14004fefc:	add    BYTE PTR [rax],al
   14004fefe:	add    BYTE PTR [rax],al
   14004ff00:	cwde   
   14004ff01:	clc    
   14004ff02:	add    eax,DWORD PTR [rax+0x1]
   14004ff05:	add    BYTE PTR [rax],al
   14004ff07:	add    BYTE PTR [rax],al
   14004ff09:	xchg   esp,eax
   14004ff0a:	out    dx,al
   14004ff0b:	add    BYTE PTR [rax],al
   14004ff0d:	add    BYTE PTR [rax],al
   14004ff0f:	add    BYTE PTR [rax+0x14003f8],ch
   14004ff15:	add    BYTE PTR [rax],al
   14004ff17:	add    BYTE PTR [rax],al
   14004ff19:	xchg   ebp,eax
   14004ff1a:	int    0x0
   14004ff1c:	add    BYTE PTR [rax],al
   14004ff1e:	add    BYTE PTR [rax],al
   14004ff20:	mov    eax,0x14003f8
   14004ff25:	add    BYTE PTR [rax],al
   14004ff27:	add    BYTE PTR [rax],al
   14004ff29:	xchg   esp,eax
   14004ff2a:	mov    eax,DWORD PTR [rax]
   14004ff2c:	add    BYTE PTR [rax],al
   14004ff2e:	add    BYTE PTR [rax],al
   14004ff30:	(bad)  
   14004ff31:	clc    
   14004ff32:	add    eax,DWORD PTR [rax+0x1]
   14004ff35:	add    BYTE PTR [rax],al
   14004ff37:	add    dl,al
   14004ff39:	inc    DWORD PTR [rdx+0x0]
   14004ff3f:	add    ah,cl
   14004ff41:	clc    
   14004ff42:	add    eax,DWORD PTR [rax+0x1]
   14004ff45:	add    BYTE PTR [rax],al
   14004ff47:	add    BYTE PTR [rdx],ch
   14004ff49:	ud0    eax,DWORD PTR [rax]
   14004ff4c:	add    BYTE PTR [rax],al
   14004ff4e:	add    BYTE PTR [rax],al
   14004ff50:	(bad)  
   14004ff51:	clc    
   14004ff52:	add    eax,DWORD PTR [rax+0x1]
   14004ff55:	add    BYTE PTR [rax],al
   14004ff57:	add    BYTE PTR [rdx],ch
   14004ff59:	ud0    eax,DWORD PTR [rax]
   14004ff5c:	add    BYTE PTR [rax],al
   14004ff5e:	add    BYTE PTR [rax],al
   14004ff60:	fdiv   st(0),st
   14004ff62:	add    eax,DWORD PTR [rax+0x1]
   14004ff65:	add    BYTE PTR [rax],al
   14004ff67:	add    BYTE PTR [rdx],ch
   14004ff69:	pmaxsw mm0,QWORD PTR [rax]
   14004ff6c:	add    BYTE PTR [rax],al
   14004ff6e:	add    BYTE PTR [rax],al
   14004ff70:	in     al,0xf8
   14004ff72:	add    eax,DWORD PTR [rax+0x1]
   14004ff75:	add    BYTE PTR [rax],al
   14004ff77:	add    BYTE PTR [rdx],ch
   14004ff79:	(bad)  
   14004ff7a:	int    0x0
   14004ff7c:	add    BYTE PTR [rax],al
   14004ff7e:	add    BYTE PTR [rax],al
   14004ff80:	in     al,dx
   14004ff81:	clc    
   14004ff82:	add    eax,DWORD PTR [rax+0x1]
   14004ff85:	add    BYTE PTR [rax],al
   14004ff87:	add    BYTE PTR [rdx],ch
   14004ff89:	(bad)  
   14004ff8a:	mov    eax,DWORD PTR [rax]
   14004ff8c:	add    BYTE PTR [rax],al
   14004ff8e:	add    BYTE PTR [rax],al
   14004ff90:	hlt    
   14004ff91:	clc    
   14004ff92:	add    eax,DWORD PTR [rax+0x1]
   14004ff95:	add    BYTE PTR [rax],al
   14004ff97:	add    BYTE PTR [rsi],ah
   14004ff99:	push   0xfffffffffffffff0
   14004ff9b:	add    BYTE PTR [rax],al
   14004ff9d:	add    BYTE PTR [rax],al
   14004ff9f:	add    ah,bh
   14004ffa1:	clc    
   14004ffa2:	add    eax,DWORD PTR [rax+0x1]
   14004ffa5:	add    BYTE PTR [rax],al
   14004ffa7:	add    BYTE PTR [rdi],ah
   14004ffa9:	jo     0x14004ffaa
   14004ffab:	add    BYTE PTR [rax],al
   14004ffad:	add    BYTE PTR [rax],al
   14004ffaf:	add    BYTE PTR [rcx+rdi*8],al
   14004ffb2:	add    eax,DWORD PTR [rax+0x1]
   14004ffb5:	add    BYTE PTR [rax],al
   14004ffb7:	add    BYTE PTR [rdi],ah
   14004ffb9:	jo     0x14004ffa9
   14004ffbb:	add    BYTE PTR [rax],al
   14004ffbd:	add    BYTE PTR [rax],al
   14004ffbf:	add    BYTE PTR [rcx+rdi*8],cl
   14004ffc2:	add    eax,DWORD PTR [rax+0x1]
   14004ffc5:	add    BYTE PTR [rax],al
   14004ffc7:	add    BYTE PTR [rdi],ah
   14004ffc9:	outs   dx,DWORD PTR ds:[rsi]
   14004ffca:	int    0x0
   14004ffcc:	add    BYTE PTR [rax],al
   14004ffce:	add    BYTE PTR [rax],al
   14004ffd0:	adc    al,0xf9
   14004ffd2:	add    eax,DWORD PTR [rax+0x1]
   14004ffd5:	add    BYTE PTR [rax],al
   14004ffd7:	add    BYTE PTR [rdi],ah
   14004ffd9:	outs   dx,DWORD PTR ds:[rsi]
   14004ffda:	mov    eax,DWORD PTR [rax]
   14004ffdc:	add    BYTE PTR [rax],al
   14004ffde:	add    BYTE PTR [rax],al
   14004ffe0:	and    cl,bh
   14004ffe2:	add    eax,DWORD PTR [rax+0x1]
   14004ffe5:	add    BYTE PTR [rax],al
   14004ffe7:	add    BYTE PTR [rdx+0xfa14],ch
   14004ffed:	add    BYTE PTR [rax],al
   14004ffef:	add    BYTE PTR [rax],dh
   14004fff1:	stc    
   14004fff2:	add    eax,DWORD PTR [rax+0x1]
   14004fff5:	add    BYTE PTR [rax],al
   14004fff7:	add    al,dh
   14004fff9:	ud0    eax,DWORD PTR [rax]
   14004fffc:	add    BYTE PTR [rax],al
   14004fffe:	add    BYTE PTR [rax],al
   140050000:	rex stc 
   140050002:	add    eax,DWORD PTR [rax+0x1]
   140050005:	add    BYTE PTR [rax],al
   140050007:	add    al,dh
   140050009:	ud0    eax,DWORD PTR [rax]
   14005000c:	add    BYTE PTR [rax],al
   14005000e:	add    BYTE PTR [rax],al
   140050010:	push   rax
   140050011:	stc    
   140050012:	add    eax,DWORD PTR [rax+0x1]
   140050015:	add    BYTE PTR [rax],al
   140050017:	add    bh,ch
   140050019:	pmaxsw mm0,QWORD PTR [rax]
   14005001c:	add    BYTE PTR [rax],al
   14005001e:	add    BYTE PTR [rax],al
   140050020:	(bad)  
   140050021:	stc    
   140050022:	add    eax,DWORD PTR [rax+0x1]
   140050025:	add    BYTE PTR [rax],al
   140050027:	add    al,dh
   140050029:	(bad)  
   14005002a:	int    0x0
   14005002c:	add    BYTE PTR [rax],al
   14005002e:	add    BYTE PTR [rax],al
   140050030:	jo     0x14005002b
   140050032:	add    eax,DWORD PTR [rax+0x1]
   140050035:	add    BYTE PTR [rax],al
   140050037:	add    bh,ch
   140050039:	(bad)  
   14005003a:	mov    eax,DWORD PTR [rax]
   14005003c:	add    BYTE PTR [rax],al
   14005003e:	add    BYTE PTR [rax],al
   140050040:	cmp    cl,0x3
   140050043:	rex add DWORD PTR [rax],eax
   140050046:	add    BYTE PTR [rax],al
   140050048:	rex (bad) 
   14005004a:	cld    
   14005004b:	add    BYTE PTR [rax],al
   14005004d:	add    BYTE PTR [rax],al
   14005004f:	add    BYTE PTR [rax+0x14003f9],dl
   140050055:	add    BYTE PTR [rax],al
   140050057:	add    BYTE PTR [rsi],ah
   140050059:	xor    edi,edi
   14005005b:	add    BYTE PTR [rax],al
   14005005d:	add    BYTE PTR [rax],al
   14005005f:	add    BYTE PTR [rax+0x14003f9],ah
   140050065:	add    BYTE PTR [rax],al
   140050067:	add    BYTE PTR [rsi],ah
   140050069:	xor    edi,edi
   14005006b:	add    BYTE PTR [rax],al
   14005006d:	add    BYTE PTR [rax],al
   14005006f:	add    BYTE PTR [rax+0x14003f9],dh
   140050075:	add    BYTE PTR [rax],al
   140050077:	add    BYTE PTR [rip+0xee32],ah        # 0x14005eeaf
   14005007d:	add    BYTE PTR [rax],al
   14005007f:	add    al,al
   140050081:	stc    
   140050082:	add    eax,DWORD PTR [rax+0x1]
   140050085:	add    BYTE PTR [rax],al
   140050087:	add    BYTE PTR [rsi],ah
   140050089:	xor    ebp,ecx
   14005008b:	add    BYTE PTR [rax],al
   14005008d:	add    BYTE PTR [rax],al
   14005008f:	add    al,dl
   140050091:	stc    
   140050092:	add    eax,DWORD PTR [rax+0x1]
   140050095:	add    BYTE PTR [rax],al
   140050097:	add    BYTE PTR [rdi],ah
   140050099:	xor    DWORD PTR [rbx+0x0],ecx
   14005009f:	add    al,ah
   1400500a1:	stc    
   1400500a2:	add    eax,DWORD PTR [rax+0x1]
   1400500a5:	add    BYTE PTR [rax],al
   1400500a7:	add    BYTE PTR [rcx+0xe63f],cl
   1400500ad:	add    BYTE PTR [rax],al
   1400500af:	add    al,dh
   1400500b1:	stc    
   1400500b2:	add    eax,DWORD PTR [rax+0x1]
   1400500b5:	add    BYTE PTR [rax],al
   1400500b7:	add    BYTE PTR [rdx+0xff40],cl
   1400500bd:	add    BYTE PTR [rax],al
   1400500bf:	add    BYTE PTR [rax],al
   1400500c1:	cli    
   1400500c2:	add    eax,DWORD PTR [rax+0x1]
   1400500c5:	add    BYTE PTR [rax],al
   1400500c7:	add    BYTE PTR [rdx+0xee40],cl
   1400500cd:	add    BYTE PTR [rax],al
   1400500cf:	add    BYTE PTR [rax],dl
   1400500d1:	cli    
   1400500d2:	add    eax,DWORD PTR [rax+0x1]
   1400500d5:	add    BYTE PTR [rax],al
   1400500d7:	add    BYTE PTR [rdx+0xcd3f],cl
   1400500dd:	add    BYTE PTR [rax],al
   1400500df:	add    BYTE PTR [rax],ah
   1400500e1:	cli    
   1400500e2:	add    eax,DWORD PTR [rax+0x1]
   1400500e5:	add    BYTE PTR [rax],al
   1400500e7:	add    BYTE PTR [rcx+0x8b40],cl
   1400500ed:	add    BYTE PTR [rax],al
   1400500ef:	add    BYTE PTR [rax],dh
   1400500f1:	cli    
   1400500f2:	add    eax,DWORD PTR [rax+0x1]
   1400500f5:	add    BYTE PTR [rax],al
   1400500f7:	add    BYTE PTR [rax],al
   1400500f9:	ja     0x1400500eb
   1400500fb:	add    BYTE PTR [rax],al
   1400500fd:	add    BYTE PTR [rax],al
   1400500ff:	add    BYTE PTR [rax-0x6],al
   140050102:	add    eax,DWORD PTR [rax+0x1]
   140050105:	add    BYTE PTR [rax],al
   140050107:	add    BYTE PTR [rdi+0x1f],bh
   14005010a:	inc    DWORD PTR [rax]
   14005010c:	add    BYTE PTR [rax],al
   14005010e:	add    BYTE PTR [rax],al
   140050110:	push   rax
   140050111:	cli    
   140050112:	add    eax,DWORD PTR [rax+0x1]
   140050115:	add    BYTE PTR [rax],al
   140050117:	add    BYTE PTR [rdi+0x1f],bh
   14005011a:	inc    DWORD PTR [rax]
   14005011c:	add    BYTE PTR [rax],al
   14005011e:	add    BYTE PTR [rax],al
   140050120:	(bad)  
   140050121:	cli    
   140050122:	add    eax,DWORD PTR [rax+0x1]
   140050125:	add    BYTE PTR [rax],al
   140050127:	add    BYTE PTR [rdi+0x1f],bh
   14005012a:	out    dx,al
   14005012b:	add    BYTE PTR [rax],al
   14005012d:	add    BYTE PTR [rax],al
   14005012f:	add    BYTE PTR [rax-0x6],dh
   140050132:	add    eax,DWORD PTR [rax+0x1]
   140050135:	add    BYTE PTR [rax],al
   140050137:	add    BYTE PTR [rdi+0x1f],bh
   14005013a:	int    0x0
   14005013c:	add    BYTE PTR [rax],al
   14005013e:	add    BYTE PTR [rax],al
   140050140:	cmp    dl,0x3
   140050143:	rex add DWORD PTR [rax],eax
   140050146:	add    BYTE PTR [rax],al
   140050148:	jg     0x140050169
   14005014a:	mov    eax,DWORD PTR [rax]
   14005014c:	add    BYTE PTR [rax],al
   14005014e:	add    BYTE PTR [rax],al
   140050150:	nop
   140050151:	cli    
   140050152:	add    eax,DWORD PTR [rax+0x1]
   140050155:	add    BYTE PTR [rax],al
   140050157:	add    BYTE PTR [rbx],ah
   140050159:	jae    0x140050149
   14005015b:	add    BYTE PTR [rax],al
   14005015d:	add    BYTE PTR [rax],al
   14005015f:	add    BYTE PTR [rax+0x14003fa],ah
   140050165:	add    BYTE PTR [rax],al
   140050167:	add    BYTE PTR [rbx],ah
   140050169:	je     0x14005016a
   14005016b:	add    BYTE PTR [rax],al
   14005016d:	add    BYTE PTR [rax],al
   14005016f:	add    BYTE PTR [rax+0x14003fa],dh
   140050175:	add    BYTE PTR [rax],al
   140050177:	add    BYTE PTR [rbx],ah
   140050179:	jae    0x140050169
   14005017b:	add    BYTE PTR [rax],al
   14005017d:	add    BYTE PTR [rax],al
   14005017f:	add    al,al
   140050181:	cli    
   140050182:	add    eax,DWORD PTR [rax+0x1]
   140050185:	add    BYTE PTR [rax],al
   140050187:	add    BYTE PTR [rbx],ah
   140050189:	jae    0x140050158
   14005018b:	add    BYTE PTR [rax],al
   14005018d:	add    BYTE PTR [rax],al
   14005018f:	add    al,dl
   140050191:	cli    
   140050192:	add    eax,DWORD PTR [rax+0x1]
   140050195:	add    BYTE PTR [rax],al
   140050197:	add    BYTE PTR [rbx],ah
   140050199:	jae    0x140050126
   14005019b:	add    BYTE PTR [rax],al
   14005019d:	add    BYTE PTR [rax],al
   14005019f:	add    al,ah
   1400501a1:	cli    
   1400501a2:	add    eax,DWORD PTR [rax+0x1]
   1400501a5:	add    BYTE PTR [rax],al
   1400501a7:	add    BYTE PTR [rdx],ch
   1400501a9:	sub    dl,bh
   1400501ab:	add    BYTE PTR [rax],al
   1400501ad:	add    BYTE PTR [rax],al
   1400501af:	add    al,bh
   1400501b1:	cli    
   1400501b2:	add    eax,DWORD PTR [rax+0x1]
   1400501b5:	add    BYTE PTR [rax],al
   1400501b7:	add    BYTE PTR [rax],al
   1400501b9:	add    bl,dl
   1400501bb:	add    BYTE PTR [rax],al
   1400501bd:	add    BYTE PTR [rax],al
   1400501bf:	add    al,ch
   1400501c1:	in     al,0x3
   1400501c3:	rex add DWORD PTR [rax],eax
   1400501c6:	add    BYTE PTR [rax],al
   1400501c8:	add    BYTE PTR [rax],al
   1400501ca:	rol    DWORD PTR [rax],cl
   1400501cc:	add    BYTE PTR [rax],al
   1400501ce:	add    BYTE PTR [rax],al
   1400501d0:	or     bl,bh
   1400501d2:	add    eax,DWORD PTR [rax+0x1]
   1400501d5:	add    BYTE PTR [rax],al
   1400501d7:	add    al,bh
   1400501d9:	inc    QWORD PTR [r8]
   1400501dc:	add    BYTE PTR [rax],al
   1400501de:	add    BYTE PTR [rax],al
   1400501e0:	sbb    bl,bh
   1400501e2:	add    eax,DWORD PTR [rax+0x1]
   1400501e5:	add    BYTE PTR [rax],al
   1400501e7:	add    cl,bh
   1400501e9:	push   rcx
   1400501ea:	inc    DWORD PTR [rax]
   1400501ec:	add    BYTE PTR [rax],al
   1400501ee:	add    BYTE PTR [rax],al
   1400501f0:	sub    bl,bh
   1400501f2:	add    eax,DWORD PTR [rax+0x1]
   1400501f5:	add    BYTE PTR [rax],al
   1400501f7:	add    al,bh
   1400501f9:	push   rcx
   1400501fa:	out    dx,al
   1400501fb:	add    BYTE PTR [rax],al
   1400501fd:	add    BYTE PTR [rax],al
   1400501ff:	add    BYTE PTR [rax],bh
   140050201:	sti    
   140050202:	add    eax,DWORD PTR [rax+0x1]
   140050205:	add    BYTE PTR [rax],al
   140050207:	add    cl,bh
   140050209:	push   rax
   14005020a:	int    0x0
   14005020c:	add    BYTE PTR [rax],al
   14005020e:	add    BYTE PTR [rax],al
   140050210:	rex.W sti 
   140050212:	add    eax,DWORD PTR [rax+0x1]
   140050215:	add    BYTE PTR [rax],al
   140050217:	add    cl,bh
   140050219:	push   rax
   14005021a:	mov    eax,DWORD PTR [rax]
   14005021c:	add    BYTE PTR [rax],al
   14005021e:	add    BYTE PTR [rax],al
   140050220:	pop    rax
   140050221:	sti    
   140050222:	add    eax,DWORD PTR [rax+0x1]
   140050225:	add    BYTE PTR [rax],al
   140050227:	add    BYTE PTR [rsp+rax*4],cl
   14005022a:	inc    DWORD PTR [rax]
   14005022c:	add    BYTE PTR [rax],al
   14005022e:	add    BYTE PTR [rax],al
   140050230:	push   0x14003fb
   140050235:	add    BYTE PTR [rax],al
   140050237:	add    BYTE PTR [rsp+rax*4],cl
   14005023a:	inc    DWORD PTR [rax]
   14005023c:	add    BYTE PTR [rax],al
   14005023e:	add    BYTE PTR [rax],al
   140050240:	js     0x14005023d
   140050242:	add    eax,DWORD PTR [rax+0x1]
   140050245:	add    BYTE PTR [rax],al
   140050247:	add    BYTE PTR [rbx],cl
   140050249:	test   dh,ch
   14005024b:	add    BYTE PTR [rax],al
   14005024d:	add    BYTE PTR [rax],al
   14005024f:	add    BYTE PTR [rax+0x14003fb],cl
   140050255:	add    BYTE PTR [rax],al
   140050257:	add    BYTE PTR [rax*4+0xcd],cl
   14005025e:	add    BYTE PTR [rax],al
   140050260:	cwde   
   140050261:	sti    
   140050262:	add    eax,DWORD PTR [rax+0x1]
   140050265:	add    BYTE PTR [rax],al
   140050267:	add    BYTE PTR [rax*4+0x8b],cl
   14005026e:	add    BYTE PTR [rax],al
   140050270:	test   al,0xfb
   140050272:	add    eax,DWORD PTR [rax+0x1]
   140050275:	add    BYTE PTR [rax],al
   140050277:	add    BYTE PTR [rbp-0x2f],bh
   14005027a:	mov    dl,0x0
   14005027c:	add    BYTE PTR [rax],al
   14005027e:	add    BYTE PTR [rax],al
   140050280:	mov    eax,0x14003fb
   140050285:	add    BYTE PTR [rax],al
   140050287:	add    BYTE PTR [rdi+0xfa75],cl
   14005028d:	add    BYTE PTR [rax],al
   14005028f:	add    al,cl
   140050291:	sti    
   140050292:	add    eax,DWORD PTR [rax+0x1]
   140050295:	add    BYTE PTR [rax],al
   140050297:	add    BYTE PTR [rdi+0xff4f],cl
   14005029d:	add    BYTE PTR [rax],al
   14005029f:	add    al,bl
   1400502a1:	sti    
   1400502a2:	add    eax,DWORD PTR [rax+0x1]
   1400502a5:	add    BYTE PTR [rax],al
   1400502a7:	add    BYTE PTR [rdi+0xee4f],cl
   1400502ad:	add    BYTE PTR [rax],al
   1400502af:	add    al,ch
   1400502b1:	sti    
   1400502b2:	add    eax,DWORD PTR [rax+0x1]
   1400502b5:	add    BYTE PTR [rax],al
   1400502b7:	add    BYTE PTR [rsi+0xcd4f],cl
   1400502bd:	add    BYTE PTR [rax],al
   1400502bf:	add    al,bh
   1400502c1:	sti    
   1400502c2:	add    eax,DWORD PTR [rax+0x1]
   1400502c5:	add    BYTE PTR [rax],al
   1400502c7:	add    BYTE PTR [rdi+0x8b4e],cl
   1400502cd:	add    BYTE PTR [rax],al
   1400502cf:	add    BYTE PTR [rax],cl
   1400502d1:	cld    
   1400502d2:	add    eax,DWORD PTR [rax+0x1]
   1400502d5:	add    BYTE PTR [rax],al
   1400502d7:	add    BYTE PTR [rdi+0xff8f],ch
   1400502dd:	add    BYTE PTR [rax],al
   1400502df:	add    BYTE PTR [rax],bl
   1400502e1:	cld    
   1400502e2:	add    eax,DWORD PTR [rax+0x1]
   1400502e5:	add    BYTE PTR [rax],al
   1400502e7:	add    BYTE PTR [rax+rdi*1+0x99],dl
   1400502ee:	add    BYTE PTR [rax],al
   1400502f0:	sub    ah,bh
   1400502f2:	add    eax,DWORD PTR [rax+0x1]
   1400502f5:	add    BYTE PTR [rax],al
   1400502f7:	add    BYTE PTR [rax+rdi*1+0x99],dl
   1400502fe:	add    BYTE PTR [rax],al
   140050300:	cmp    ah,bh
   140050302:	add    eax,DWORD PTR [rax+0x1]
   140050305:	add    BYTE PTR [rax],al
   140050307:	add    BYTE PTR [rdi+0xde34],dl
   14005030d:	add    BYTE PTR [rax],al
   14005030f:	add    BYTE PTR [rax-0x4],cl
   140050312:	add    eax,DWORD PTR [rax+0x1]
   140050315:	add    BYTE PTR [rax],al
   140050317:	add    BYTE PTR [rdi+0xff35],dl
   14005031d:	add    BYTE PTR [rax],al
   14005031f:	add    BYTE PTR [rax-0x4],bl
   140050322:	add    eax,DWORD PTR [rax+0x1]
   140050325:	add    BYTE PTR [rax],al
   140050327:	add    BYTE PTR [rdi+0xee35],dl
   14005032d:	add    BYTE PTR [rax],al
   14005032f:	add    BYTE PTR [rax-0x4],ch
   140050332:	add    eax,DWORD PTR [rax+0x1]
   140050335:	add    BYTE PTR [rax],al
   140050337:	add    BYTE PTR [rdi+0xcd35],dl
   14005033d:	add    BYTE PTR [rax],al
   14005033f:	add    BYTE PTR [rax-0x4],bh
   140050342:	add    eax,DWORD PTR [rax+0x1]
   140050345:	add    BYTE PTR [rax],al
   140050347:	add    BYTE PTR [rsi+0x8b35],dl
   14005034d:	add    BYTE PTR [rax],al
   14005034f:	add    BYTE PTR [rax+0x14003fc],cl
   140050355:	add    BYTE PTR [rax],al
   140050357:	add    BYTE PTR [rdx],ch
   140050359:	(bad)  
   14005035a:	inc    DWORD PTR [rax]
   14005035c:	add    BYTE PTR [rax],al
   14005035e:	add    BYTE PTR [rax],al
   140050360:	cwde   
   140050361:	cld    
   140050362:	add    eax,DWORD PTR [rax+0x1]
   140050365:	add    BYTE PTR [rax],al
   140050367:	add    BYTE PTR [rdx],ch
   140050369:	(bad)  
   14005036a:	inc    DWORD PTR [rax]
   14005036c:	add    BYTE PTR [rax],al
   14005036e:	add    BYTE PTR [rax],al
   140050370:	test   al,0xfc
   140050372:	add    eax,DWORD PTR [rax+0x1]
   140050375:	add    BYTE PTR [rax],al
   140050377:	add    BYTE PTR [rdx],ch
   140050379:	(bad)  
   14005037a:	out    dx,al
   14005037b:	add    BYTE PTR [rax],al
   14005037d:	add    BYTE PTR [rax],al
   14005037f:	add    BYTE PTR [rax+0x14003fc],bh
   140050385:	add    BYTE PTR [rax],al
   140050387:	add    BYTE PTR [rdx],ch
   140050389:	(bad)  
   14005038a:	int    0x0
   14005038c:	add    BYTE PTR [rax],al
   14005038e:	add    BYTE PTR [rax],al
   140050390:	enter  0x3fc,0x40
   140050394:	add    DWORD PTR [rax],eax
   140050396:	add    BYTE PTR [rax],al
   140050398:	sub    bl,BYTE PTR [rdi]
   14005039a:	mov    eax,DWORD PTR [rax]
   14005039c:	add    BYTE PTR [rax],al
   14005039e:	add    BYTE PTR [rax],al
   1400503a0:	fdivr  st,st(4)
   1400503a2:	add    eax,DWORD PTR [rax+0x1]
   1400503a5:	add    BYTE PTR [rax],al
   1400503a7:	add    BYTE PTR [rbp-0x40],dl
   1400503aa:	int    0x0
   1400503ac:	add    BYTE PTR [rax],al
   1400503ae:	add    BYTE PTR [rax],al
   1400503b0:	in     al,0xfc
   1400503b2:	add    eax,DWORD PTR [rax+0x1]
   1400503b5:	add    BYTE PTR [rax],al
   1400503b7:	add    BYTE PTR [rip+0xfa14],dl        # 0x14005fdd1
   1400503bd:	add    BYTE PTR [rax],al
   1400503bf:	add    al,dh
   1400503c1:	cld    
   1400503c2:	add    eax,DWORD PTR [rax+0x1]
   1400503c5:	add    BYTE PTR [rax],al
   1400503c7:	add    ah,dl
   1400503c9:	(bad)  
   1400503ca:	inc    DWORD PTR [rax]
   1400503cc:	add    BYTE PTR [rax],al
   1400503ce:	add    BYTE PTR [rax],al
   1400503d0:	clc    
   1400503d1:	cld    
   1400503d2:	add    eax,DWORD PTR [rax+0x1]
   1400503d5:	add    BYTE PTR [rax],al
   1400503d7:	add    ah,dl
   1400503d9:	(bad)  
   1400503da:	inc    DWORD PTR [rax]
   1400503dc:	add    BYTE PTR [rax],al
   1400503de:	add    BYTE PTR [rax],al
   1400503e0:	or     ch,bh
   1400503e2:	add    eax,DWORD PTR [rax+0x1]
   1400503e5:	add    BYTE PTR [rax],al
   1400503e7:	add    ah,dl
   1400503e9:	(bad)  
   1400503ea:	out    dx,al
   1400503eb:	add    BYTE PTR [rax],al
   1400503ed:	add    BYTE PTR [rax],al
   1400503ef:	add    BYTE PTR [rax],bl
   1400503f1:	std    
   1400503f2:	add    eax,DWORD PTR [rax+0x1]
   1400503f5:	add    BYTE PTR [rax],al
   1400503f7:	add    ah,dl
   1400503f9:	dec    ebp
   1400503fb:	add    BYTE PTR [rax],al
   1400503fd:	add    BYTE PTR [rax],al
   1400503ff:	add    BYTE PTR [rax],ch
   140050401:	std    
   140050402:	add    eax,DWORD PTR [rax+0x1]
   140050405:	add    BYTE PTR [rax],al
   140050407:	add    ah,dl
   140050409:	dec    DWORD PTR [rbx+0x0]
   14005040f:	add    BYTE PTR [rdi*8+0x14003],dh
   140050416:	add    BYTE PTR [rax],al
   140050418:	out    dx,eax
   140050419:	mov    ecx,0xb0
   14005041e:	add    BYTE PTR [rax],al
   140050420:	rex std 
   140050422:	add    eax,DWORD PTR [rax+0x1]
   140050425:	add    BYTE PTR [rax],al
   140050427:	add    ah,ah
   140050429:	retf   
   14005042a:	inc    DWORD PTR [rax]
   14005042c:	add    BYTE PTR [rax],al
   14005042e:	add    BYTE PTR [rax],al
   140050430:	rex.W std 
   140050432:	add    eax,DWORD PTR [rax+0x1]
   140050435:	add    BYTE PTR [rax],al
   140050437:	add    ah,ah
   140050439:	retf   
   14005043a:	out    dx,al
   14005043b:	add    BYTE PTR [rax],al
   14005043d:	add    BYTE PTR [rax],al
   14005043f:	add    BYTE PTR [rax-0x3],dl
   140050442:	add    eax,DWORD PTR [rax+0x1]
   140050445:	add    BYTE PTR [rax],al
   140050447:	add    ah,ah
   140050449:	int3   
   14005044a:	int    0x0
   14005044c:	add    BYTE PTR [rax],al
   14005044e:	add    BYTE PTR [rax],al
   140050450:	pop    rax
   140050451:	std    
   140050452:	add    eax,DWORD PTR [rax+0x1]
   140050455:	add    BYTE PTR [rax],al
   140050457:	add    ah,ah
   140050459:	retf   
   14005045a:	mov    eax,DWORD PTR [rax]
   14005045c:	add    BYTE PTR [rax],al
   14005045e:	add    BYTE PTR [rax],al
   140050460:	(bad)  
   140050461:	std    
   140050462:	add    eax,DWORD PTR [rax+0x1]
   140050465:	add    BYTE PTR [rax],al
   140050467:	add    BYTE PTR [rcx-0x80],dh
   14005046a:	int    0x0
   14005046c:	add    BYTE PTR [rax],al
   14005046e:	add    BYTE PTR [rax],al
   140050470:	js     0x14005046f
   140050472:	add    eax,DWORD PTR [rax+0x1]
   140050475:	add    BYTE PTR [rax],al
   140050477:	add    BYTE PTR [rdx+0xcdff],ch
   14005047d:	add    BYTE PTR [rax],al
   14005047f:	add    BYTE PTR [rax+0x14003fd],cl
   140050485:	add    BYTE PTR [rax],al
   140050487:	add    ah,cl
   140050489:	cwde   
   14005048a:	rol    DWORD PTR [rax],cl
   14005048c:	add    BYTE PTR [rax],al
   14005048e:	add    BYTE PTR [rax],al
   140050490:	cwde   
   140050491:	std    
   140050492:	add    eax,DWORD PTR [rax+0x1]
   140050495:	add    BYTE PTR [rax],al
   140050497:	add    bl,cl
   140050499:	cdq    
   14005049a:	inc    DWORD PTR [rax]
   14005049c:	add    BYTE PTR [rax],al
   14005049e:	add    BYTE PTR [rax],al
   1400504a0:	test   al,0xfd
   1400504a2:	add    eax,DWORD PTR [rax+0x1]
   1400504a5:	add    BYTE PTR [rax],al
   1400504a7:	add    bl,cl
   1400504a9:	cdq    
   1400504aa:	out    dx,al
   1400504ab:	add    BYTE PTR [rax],al
   1400504ad:	add    BYTE PTR [rax],al
   1400504af:	add    BYTE PTR [rax+0x14003fd],bh
   1400504b5:	add    BYTE PTR [rax],al
   1400504b7:	add    bl,cl
   1400504b9:	cdq    
   1400504ba:	int    0x0
   1400504bc:	add    BYTE PTR [rax],al
   1400504be:	add    BYTE PTR [rax],al
   1400504c0:	enter  0x3fd,0x40
   1400504c4:	add    DWORD PTR [rax],eax
   1400504c6:	add    BYTE PTR [rax],al
   1400504c8:	retf   
   1400504c9:	(bad)  
   1400504ca:	mov    eax,DWORD PTR [rax]
   1400504cc:	add    BYTE PTR [rax],al
   1400504ce:	add    BYTE PTR [rax],al
   1400504d0:	fdivr  st,st(5)
   1400504d2:	add    eax,DWORD PTR [rax+0x1]
   1400504d5:	add    BYTE PTR [rax],al
   1400504d7:	add    BYTE PTR [rdi+0xdb7c],dh
   1400504dd:	add    BYTE PTR [rax],al
   1400504df:	add    al,ch
   1400504e1:	std    
   1400504e2:	add    eax,DWORD PTR [rax+0x1]
   1400504e5:	add    BYTE PTR [rax],al
   1400504e7:	add    BYTE PTR [rdi+0xff7d],dh
   1400504ed:	add    BYTE PTR [rax],al
   1400504ef:	add    al,bh
   1400504f1:	std    
   1400504f2:	add    eax,DWORD PTR [rax+0x1]
   1400504f5:	add    BYTE PTR [rax],al
   1400504f7:	add    BYTE PTR [rdi+0xee7d],dh
   1400504fd:	add    BYTE PTR [rax],al
   1400504ff:	add    BYTE PTR [rax],cl
   140050501:	inc    BYTE PTR [rbx]
   140050503:	rex add DWORD PTR [rax],eax
   140050506:	add    BYTE PTR [rax],al
   140050508:	mov    bh,0x7d
   14005050a:	int    0x0
   14005050c:	add    BYTE PTR [rax],al
   14005050e:	add    BYTE PTR [rax],al
   140050510:	sbb    dh,bh
   140050512:	add    eax,DWORD PTR [rax+0x1]
   140050515:	add    BYTE PTR [rax],al
   140050517:	add    BYTE PTR [rdi+0x8b7c],dh
   14005051d:	add    BYTE PTR [rax],al
   14005051f:	add    BYTE PTR [rax],ch
   140050521:	inc    BYTE PTR [rbx]
   140050523:	rex add DWORD PTR [rax],eax
   140050526:	add    BYTE PTR [rax],al
   140050528:	addr32 test eax,0xb3
   14005052e:	add    BYTE PTR [rax],al
   140050530:	cmp    dh,bh
   140050532:	add    eax,DWORD PTR [rax+0x1]
   140050535:	add    BYTE PTR [rax],al
   140050537:	add    BYTE PTR [rax+0xee8f],dh
   14005053d:	add    BYTE PTR [rax],al
   14005053f:	add    BYTE PTR [rax-0x2],cl
   140050542:	add    eax,DWORD PTR [rax+0x1]
   140050545:	add    BYTE PTR [rax],al
   140050547:	add    BYTE PTR [rdi-0x1],ch
   14005054a:	cli    
   14005054b:	add    BYTE PTR [rax],al
   14005054d:	add    BYTE PTR [rax],al
   14005054f:	add    BYTE PTR [rax-0x2],ah
   140050552:	add    eax,DWORD PTR [rax+0x1]
   140050555:	add    BYTE PTR [rax],al
   140050557:	add    BYTE PTR [rbp-0x59],bh
   14005055a:	rol    DWORD PTR [rax],1
   14005055c:	add    BYTE PTR [rax],al
   14005055e:	add    BYTE PTR [rax],al
   140050560:	jo     0x140050560
   140050562:	add    eax,DWORD PTR [rax+0x1]
   140050565:	add    BYTE PTR [rax],al
   140050567:	add    ah,ah
   140050569:	in     al,0xc7
   14005056b:	add    BYTE PTR [rax],al
   14005056d:	add    BYTE PTR [rax],al
   14005056f:	add    BYTE PTR [rax+0x14003fe],al
   140050575:	add    BYTE PTR [rax],al
   140050577:	add    BYTE PTR [rdx+0x70c6],ch
   14005057d:	add    BYTE PTR [rax],al
   14005057f:	add    BYTE PTR [rax+0x14003fe],dl
   140050585:	add    BYTE PTR [rax],al
   140050587:	add    BYTE PTR [rdx+0x9],ch
   14005058a:	inc    DWORD PTR [rax]
   14005058c:	add    BYTE PTR [rax],al
   14005058e:	add    BYTE PTR [rax],al
   140050590:	movabs al,ds:0x4000000014003fe
   140050599:	(bad)  
   14005059a:	inc    DWORD PTR [rax]
   14005059c:	add    BYTE PTR [rax],al
   14005059e:	add    BYTE PTR [rax],al
   1400505a0:	mov    al,0xfe
   1400505a2:	add    eax,DWORD PTR [rax+0x1]
   1400505a5:	add    BYTE PTR [rax],al
   1400505a7:	add    BYTE PTR [rsi+rbx*1],al
   1400505aa:	inc    DWORD PTR [rax]
   1400505ac:	add    BYTE PTR [rax],al
   1400505ae:	add    BYTE PTR [rax],al
   1400505b0:	sar    dh,0x3
   1400505b3:	rex add DWORD PTR [rax],eax
   1400505b6:	add    BYTE PTR [rax],al
   1400505b8:	add    al,0x1e
   1400505ba:	out    dx,al
   1400505bb:	add    BYTE PTR [rax],al
   1400505bd:	add    BYTE PTR [rax],al
   1400505bf:	add    al,dl
   1400505c1:	inc    BYTE PTR [rbx]
   1400505c3:	rex add DWORD PTR [rax],eax
   1400505c6:	add    BYTE PTR [rax],al
   1400505c8:	add    ebx,DWORD PTR [rip+0xcd]        # 0x14005069b
   1400505ce:	add    BYTE PTR [rax],al
   1400505d0:	loopne 0x1400505d0
   1400505d2:	add    eax,DWORD PTR [rax+0x1]
   1400505d5:	add    BYTE PTR [rax],al
   1400505d7:	add    BYTE PTR [rip+0x8b1d],al        # 0x1400590fa
   1400505dd:	add    BYTE PTR [rax],al
   1400505df:	add    al,dh
   1400505e1:	inc    BYTE PTR [rbx]
   1400505e3:	rex add DWORD PTR [rax],eax
   1400505e6:	add    BYTE PTR [rax],al
   1400505e8:	sbb    cl,BYTE PTR [rcx-0x1]
   1400505eb:	add    BYTE PTR [rax],al
   1400505ed:	add    BYTE PTR [rax],al
   1400505ef:	add    BYTE PTR [rax],al
   1400505f1:	inc    DWORD PTR [rbx]
   1400505f3:	rex add DWORD PTR [rax],eax
   1400505f6:	add    BYTE PTR [rax],al
   1400505f8:	sbb    DWORD PTR [rcx-0x1],edx
   1400505fb:	add    BYTE PTR [rax],al
   1400505fd:	add    BYTE PTR [rax],al
   1400505ff:	add    BYTE PTR [rax],dl
   140050601:	inc    DWORD PTR [rbx]
   140050603:	rex add DWORD PTR [rax],eax
   140050606:	add    BYTE PTR [rax],al
   140050608:	sbb    DWORD PTR [rcx-0x1],edx
   14005060b:	add    BYTE PTR [rax],al
   14005060d:	add    BYTE PTR [rax],al
   14005060f:	add    BYTE PTR [rax],ah
   140050611:	inc    DWORD PTR [rbx]
   140050613:	rex add DWORD PTR [rax],eax
   140050616:	add    BYTE PTR [rax],al
   140050618:	sbb    DWORD PTR [rdx-0x12],edx
   14005061b:	add    BYTE PTR [rax],al
   14005061d:	add    BYTE PTR [rax],al
   14005061f:	add    BYTE PTR [rax],dh
   140050621:	inc    DWORD PTR [rbx]
   140050623:	rex add DWORD PTR [rax],eax
   140050626:	add    BYTE PTR [rax],al
   140050628:	sbb    DWORD PTR [rdx-0x33],edx
   14005062b:	add    BYTE PTR [rax],al
   14005062d:	add    BYTE PTR [rax],al
   14005062f:	add    BYTE PTR [rax-0x1],al
   140050632:	add    eax,DWORD PTR [rax+0x1]
   140050635:	add    BYTE PTR [rax],al
   140050637:	add    BYTE PTR [rcx],bl
   140050639:	push   rdx
   14005063a:	mov    eax,DWORD PTR [rax]
   14005063c:	add    BYTE PTR [rax],al
   14005063e:	add    BYTE PTR [rax],al
   140050640:	push   rax
   140050641:	inc    DWORD PTR [rbx]
   140050643:	rex add DWORD PTR [rax],eax
   140050646:	add    BYTE PTR [rax],al
   140050648:	stos   BYTE PTR es:[rdi],al
   140050649:	inc    DWORD PTR [rax+0x0]
   14005064f:	add    BYTE PTR [rax-0x1],bl
   140050652:	add    eax,DWORD PTR [rax+0x1]
   140050655:	add    BYTE PTR [rax],al
   140050657:	add    BYTE PTR [rdx+0x80ff],ch
   14005065d:	add    BYTE PTR [rax],al
   14005065f:	add    BYTE PTR [rax-0x1],ch
   140050662:	add    eax,DWORD PTR [rax+0x1]
   140050665:	add    BYTE PTR [rax],al
   140050667:	add    BYTE PTR [rbx],bl
   140050669:	(bad)  
   14005066a:	std    
   14005066b:	add    BYTE PTR [rax],al
   14005066d:	add    BYTE PTR [rax],al
   14005066f:	add    BYTE PTR [rax-0x1],dh
   140050672:	add    eax,DWORD PTR [rax+0x1]
   140050675:	add    BYTE PTR [rax],al
   140050677:	add    BYTE PTR [rax],bh
   140050679:	ror    BYTE PTR [rsi+0x0],0x0
   140050680:	cmp    bh,0x3
   140050683:	rex add DWORD PTR [rax],eax
   140050686:	add    BYTE PTR [rax],al
   140050688:	cmp    cl,al
   14005068a:	inc    DWORD PTR [rax]
   14005068c:	add    BYTE PTR [rax],al
   14005068e:	add    BYTE PTR [rax],al
   140050690:	nop
   140050691:	inc    DWORD PTR [rbx]
   140050693:	rex add DWORD PTR [rax],eax
   140050696:	add    BYTE PTR [rax],al
   140050698:	cmp    al,al
   14005069a:	out    dx,al
   14005069b:	add    BYTE PTR [rax],al
   14005069d:	add    BYTE PTR [rax],al
   14005069f:	add    BYTE PTR [rax+0x14003ff],ah
   1400506a5:	add    BYTE PTR [rax],al
   1400506a7:	add    BYTE PTR [rax],bh
   1400506a9:	ror    ch,0x0
   1400506ac:	add    BYTE PTR [rax],al
   1400506ae:	add    BYTE PTR [rax],al
   1400506b0:	mov    al,0xff
   1400506b2:	add    eax,DWORD PTR [rax+0x1]
   1400506b5:	add    BYTE PTR [rax],al
   1400506b7:	add    BYTE PTR [rax],bh
   1400506b9:	ror    BYTE PTR [rbx+0x0],0x0
   1400506c0:	mov    esp,0x14003ff
   1400506c5:	add    BYTE PTR [rax],al
   1400506c7:	add    BYTE PTR [rbx],bl
   1400506c9:	(bad)  
   1400506ca:	inc    DWORD PTR [rax]
   1400506cc:	add    BYTE PTR [rax],al
   1400506ce:	add    BYTE PTR [rax],al
   1400506d0:	enter  0x3ff,0x40
   1400506d4:	add    DWORD PTR [rax],eax
   1400506d6:	add    BYTE PTR [rax],al
   1400506d8:	sbb    edi,edi
   1400506da:	inc    DWORD PTR [rax]
   1400506dc:	add    BYTE PTR [rax],al
   1400506de:	add    BYTE PTR [rax],al
   1400506e0:	sar    bh,1
   1400506e2:	add    eax,DWORD PTR [rax+0x1]
   1400506e5:	add    BYTE PTR [rax],al
   1400506e7:	add    BYTE PTR [rbx],bl
   1400506e9:	(bad)  
   1400506ea:	out    dx,al
   1400506eb:	add    BYTE PTR [rax],al
   1400506ed:	add    BYTE PTR [rax],al
   1400506ef:	add    al,bl
   1400506f1:	inc    DWORD PTR [rbx]
   1400506f3:	rex add DWORD PTR [rax],eax
   1400506f6:	add    BYTE PTR [rax],al
   1400506f8:	sbb    edi,edi
   1400506fa:	int    0x0
   1400506fc:	add    BYTE PTR [rax],al
   1400506fe:	add    BYTE PTR [rax],al
   140050700:	loopne 0x140050701
   140050702:	add    eax,DWORD PTR [rax+0x1]
   140050705:	add    BYTE PTR [rax],al
   140050707:	add    BYTE PTR [rbx],bl
   140050709:	dec    DWORD PTR [rbx+0x0]
   14005070f:	add    al,ch
   140050711:	inc    DWORD PTR [rbx]
   140050713:	rex add DWORD PTR [rax],eax
   140050716:	add    BYTE PTR [rax],al
   140050718:	or     edi,edi
   14005071a:	inc    DWORD PTR [rax]
   14005071c:	add    BYTE PTR [rax],al
   14005071e:	add    BYTE PTR [rax],al
   140050720:	clc    
   140050721:	inc    DWORD PTR [rbx]
   140050723:	rex add DWORD PTR [rax],eax
   140050726:	add    BYTE PTR [rax],al
   140050728:	or     edi,edi
   14005072a:	inc    DWORD PTR [rax]
   14005072c:	add    BYTE PTR [rax],al
   14005072e:	add    BYTE PTR [rax],al
   140050730:	or     BYTE PTR [rax],al
   140050732:	add    al,0x40
   140050734:	add    DWORD PTR [rax],eax
   140050736:	add    BYTE PTR [rax],al
   140050738:	or     edi,edi
   14005073a:	out    dx,al
   14005073b:	add    BYTE PTR [rax],al
   14005073d:	add    BYTE PTR [rax],al
   14005073f:	add    BYTE PTR [rax],bl
   140050741:	add    BYTE PTR [rax+rax*2],al
   140050744:	add    DWORD PTR [rax],eax
   140050746:	add    BYTE PTR [rax],al
   140050748:	or     edi,edi
   14005074a:	int    0x0
   14005074c:	add    BYTE PTR [rax],al
   14005074e:	add    BYTE PTR [rax],al
   140050750:	sub    BYTE PTR [rax],al
   140050752:	add    al,0x40
   140050754:	add    DWORD PTR [rax],eax
   140050756:	add    BYTE PTR [rax],al
   140050758:	or     edi,edi
   14005075a:	mov    eax,DWORD PTR [rax]
   14005075c:	add    BYTE PTR [rax],al
   14005075e:	add    BYTE PTR [rax],al
   140050760:	xor    al,0x0
   140050762:	add    al,0x40
   140050764:	add    DWORD PTR [rax],eax
   140050766:	add    BYTE PTR [rax],al
   140050768:	(bad)  
   140050769:	jnp    0x140050745
   14005076b:	add    BYTE PTR [rax],al
   14005076d:	add    BYTE PTR [rax],al
   14005076f:	add    BYTE PTR [rax+0x0],al
   140050772:	add    al,0x40
   140050774:	add    DWORD PTR [rax],eax
   140050776:	add    BYTE PTR [rax],al
   140050778:	(bad)  
   140050779:	jl     0x14005077a
   14005077b:	add    BYTE PTR [rax],al
   14005077d:	add    BYTE PTR [rax],al
   14005077f:	add    BYTE PTR [rax+0x0],cl
   140050782:	add    al,0x40
   140050784:	add    DWORD PTR [rax],eax
   140050786:	add    BYTE PTR [rax],al
   140050788:	(bad)  
   140050789:	jl     0x140050779
   14005078b:	add    BYTE PTR [rax],al
   14005078d:	add    BYTE PTR [rax],al
   14005078f:	add    BYTE PTR [rax+0x0],dl
   140050792:	add    al,0x40
   140050794:	add    DWORD PTR [rax],eax
   140050796:	add    BYTE PTR [rax],al
   140050798:	(bad)  
   140050799:	jl     0x140050768
   14005079b:	add    BYTE PTR [rax],al
   14005079d:	add    BYTE PTR [rax],al
   14005079f:	add    BYTE PTR [rax+0x0],bl
   1400507a2:	add    al,0x40
   1400507a4:	add    DWORD PTR [rax],eax
   1400507a6:	add    BYTE PTR [rax],al
   1400507a8:	(bad)  
   1400507a9:	jl     0x140050736
   1400507ab:	add    BYTE PTR [rax],al
   1400507ad:	add    BYTE PTR [rax],al
   1400507af:	add    BYTE PTR [rax+0x0],ah
   1400507b2:	add    al,0x40
   1400507b4:	add    DWORD PTR [rax],eax
   1400507b6:	add    BYTE PTR [rax],al
   1400507b8:	es rex.W out dx,al
   1400507bb:	add    BYTE PTR [rax],al
   1400507bd:	add    BYTE PTR [rax],al
   1400507bf:	add    BYTE PTR [rax+0x0],dh
   1400507c2:	add    al,0x40
   1400507c4:	add    DWORD PTR [rax],eax
   1400507c6:	add    BYTE PTR [rax],al
   1400507c8:	push   rbp
   1400507c9:	fs sti 
   1400507cb:	add    BYTE PTR [rax],al
   1400507cd:	add    BYTE PTR [rax],al
   1400507cf:	add    BYTE PTR [rax+0x1400400],al
   1400507d5:	add    BYTE PTR [rax],al
   1400507d7:	add    BYTE PTR [rbp+0x65],dl
   1400507da:	inc    DWORD PTR [rax]
   1400507dc:	add    BYTE PTR [rax],al
   1400507de:	add    BYTE PTR [rax],al
   1400507e0:	nop
   1400507e1:	add    BYTE PTR [rax+rax*2],al
   1400507e4:	add    DWORD PTR [rax],eax
   1400507e6:	add    BYTE PTR [rax],al
   1400507e8:	push   rbp
   1400507e9:	fs out dx,al
   1400507eb:	add    BYTE PTR [rax],al
   1400507ed:	add    BYTE PTR [rax],al
   1400507ef:	add    BYTE PTR [rax+0x1400400],ah
   1400507f5:	add    BYTE PTR [rax],al
   1400507f7:	add    BYTE PTR [rbp+0x64],dl
   1400507fa:	int    0x0
   1400507fc:	add    BYTE PTR [rax],al
   1400507fe:	add    BYTE PTR [rax],al
   140050800:	mov    al,0x0
   140050802:	add    al,0x40
   140050804:	add    DWORD PTR [rax],eax
   140050806:	add    BYTE PTR [rax],al
   140050808:	push   rbp
   140050809:	mov    eax,DWORD PTR fs:[rax]
   14005080c:	add    BYTE PTR [rax],al
   14005080e:	add    BYTE PTR [rax],al
   140050810:	rol    BYTE PTR [rax],0x4
   140050813:	rex add DWORD PTR [rax],eax
   140050816:	add    BYTE PTR [rax],al
   140050818:	jg     0x14005085d
   14005081a:	out    dx,al
   14005081b:	add    BYTE PTR [rax],al
   14005081d:	add    BYTE PTR [rax],al
   14005081f:	add    al,dl
   140050821:	add    BYTE PTR [rax+rax*2],al
   140050824:	add    DWORD PTR [rax],eax
   140050826:	add    BYTE PTR [rax],al
   140050828:	jg     0x14005086e
   14005082a:	inc    DWORD PTR [rax]
   14005082c:	add    BYTE PTR [rax],al
   14005082e:	add    BYTE PTR [rax],al
   140050830:	loopne 0x140050832
   140050832:	add    al,0x40
   140050834:	add    DWORD PTR [rax],eax
   140050836:	add    BYTE PTR [rax],al
   140050838:	jg     0x14005087e
   14005083a:	out    dx,al
   14005083b:	add    BYTE PTR [rax],al
   14005083d:	add    BYTE PTR [rax],al
   14005083f:	add    al,dh
   140050841:	add    BYTE PTR [rax+rax*2],al
   140050844:	add    DWORD PTR [rax],eax
   140050846:	add    BYTE PTR [rax],al
   140050848:	jg     0x14005088e
   14005084a:	int    0x0
   14005084c:	add    BYTE PTR [rax],al
   14005084e:	add    BYTE PTR [rax],al
   140050850:	add    BYTE PTR [rcx],al
   140050852:	add    al,0x40
   140050854:	add    DWORD PTR [rax],eax
   140050856:	add    BYTE PTR [rax],al
   140050858:	jg     0x14005089d
   14005085a:	mov    eax,DWORD PTR [rax]
   14005085c:	add    BYTE PTR [rax],al
   14005085e:	add    BYTE PTR [rax],al
   140050860:	adc    BYTE PTR [rcx],al
   140050862:	add    al,0x40
   140050864:	add    DWORD PTR [rax],eax
   140050866:	add    BYTE PTR [rax],al
   140050868:	icebp  
   140050869:	jl     0x140050846
   14005086b:	add    BYTE PTR [rax],al
   14005086d:	add    BYTE PTR [rax],al
   14005086f:	add    BYTE PTR [rax],ah
   140050871:	add    DWORD PTR [rax+rax*2],eax
   140050874:	add    DWORD PTR [rax],eax
   140050876:	add    BYTE PTR [rax],al
   140050878:	icebp  
   140050879:	jge    0x14005087a
   14005087b:	add    BYTE PTR [rax],al
   14005087d:	add    BYTE PTR [rax],al
   14005087f:	add    BYTE PTR [rax],dh
   140050881:	add    DWORD PTR [rax+rax*2],eax
   140050884:	add    DWORD PTR [rax],eax
   140050886:	add    BYTE PTR [rax],al
   140050888:	icebp  
   140050889:	jge    0x140050879
   14005088b:	add    BYTE PTR [rax],al
   14005088d:	add    BYTE PTR [rax],al
   14005088f:	add    BYTE PTR [rax+0x1],al
   140050892:	add    al,0x40
   140050894:	add    DWORD PTR [rax],eax
   140050896:	add    BYTE PTR [rax],al
   140050898:	icebp  
   140050899:	jge    0x140050868
   14005089b:	add    BYTE PTR [rax],al
   14005089d:	add    BYTE PTR [rax],al
   14005089f:	add    BYTE PTR [rax+0x1],dl
   1400508a2:	add    al,0x40
   1400508a4:	add    DWORD PTR [rax],eax
   1400508a6:	add    BYTE PTR [rax],al
   1400508a8:	icebp  
   1400508a9:	jl     0x140050836
   1400508ab:	add    BYTE PTR [rax],al
   1400508ad:	add    BYTE PTR [rax],al
   1400508af:	add    BYTE PTR [rax+0x1],ah
   1400508b2:	add    al,0x40
   1400508b4:	add    DWORD PTR [rax],eax
   1400508b6:	add    BYTE PTR [rax],al
   1400508b8:	sbb    ch,BYTE PTR [rcx]
   1400508ba:	inc    DWORD PTR [rax]
   1400508bc:	add    BYTE PTR [rax],al
   1400508be:	add    BYTE PTR [rax],al
   1400508c0:	jo     0x1400508c3
   1400508c2:	add    al,0x40
   1400508c4:	add    DWORD PTR [rax],eax
   1400508c6:	add    BYTE PTR [rax],al
   1400508c8:	adc    al,0x46
   1400508ca:	inc    DWORD PTR [rax]
   1400508cc:	add    BYTE PTR [rax],al
   1400508ce:	add    BYTE PTR [rax],al
   1400508d0:	add    BYTE PTR [rcx],0x4
   1400508d3:	rex add DWORD PTR [rax],eax
   1400508d6:	add    BYTE PTR [rax],al
   1400508d8:	adc    al,0x46
   1400508da:	inc    DWORD PTR [rax]
   1400508dc:	add    BYTE PTR [rax],al
   1400508de:	add    BYTE PTR [rax],al
   1400508e0:	nop
   1400508e1:	add    DWORD PTR [rax+rax*2],eax
   1400508e4:	add    DWORD PTR [rax],eax
   1400508e6:	add    BYTE PTR [rax],al
   1400508e8:	adc    eax,DWORD PTR [rbp-0x12]
   1400508eb:	add    BYTE PTR [rax],al
   1400508ed:	add    BYTE PTR [rax],al
   1400508ef:	add    BYTE PTR [rax+0x1400401],ah
   1400508f5:	add    BYTE PTR [rax],al
   1400508f7:	add    BYTE PTR [rbx],dl
   1400508f9:	rex.RB int 0x0
   1400508fc:	add    BYTE PTR [rax],al
   1400508fe:	add    BYTE PTR [rax],al
   140050900:	mov    al,0x1
   140050902:	add    al,0x40
   140050904:	add    DWORD PTR [rax],eax
   140050906:	add    BYTE PTR [rax],al
   140050908:	adc    al,0x45
   14005090a:	mov    eax,DWORD PTR [rax]
   14005090c:	add    BYTE PTR [rax],al
   14005090e:	add    BYTE PTR [rax],al
   140050910:	mov    esp,0x1400401
   140050915:	add    BYTE PTR [rax],al
   140050917:	add    BYTE PTR [rax+rsi*4],dl
   14005091a:	int    0x0
   14005091c:	add    BYTE PTR [rax],al
   14005091e:	add    BYTE PTR [rax],al
   140050920:	(bad)
   140050924:	add    DWORD PTR [rax],eax
   140050926:	add    BYTE PTR [rax],al
   140050928:	idiv   DWORD PTR [rdi]
   14005092a:	inc    DWORD PTR [rax]
   14005092c:	add    BYTE PTR [rax],al
   14005092e:	add    BYTE PTR [rax],al
   140050930:	int3   
   140050931:	add    DWORD PTR [rax+rax*2],eax
   140050934:	add    DWORD PTR [rax],eax
   140050936:	add    BYTE PTR [rax],al
   140050938:	cmc    
   140050939:	inc    QWORD PTR [r8]
   14005093c:	add    BYTE PTR [rax],al
   14005093e:	add    BYTE PTR [rax],al
   140050940:	(bad)  
   140050941:	add    DWORD PTR [rax+rax*2],eax
   140050944:	add    DWORD PTR [rax],eax
   140050946:	add    BYTE PTR [rax],al
   140050948:	cmc    
   140050949:	rex.WB out dx,al
   14005094b:	add    BYTE PTR [rax],al
   14005094d:	add    BYTE PTR [rax],al
   14005094f:	add    ah,bl
   140050951:	add    DWORD PTR [rax+rax*2],eax
   140050954:	add    DWORD PTR [rax],eax
   140050956:	add    BYTE PTR [rax],al
   140050958:	cmc    
   140050959:	rex.WX int 0x0
   14005095c:	add    BYTE PTR [rax],al
   14005095e:	add    BYTE PTR [rax],al
   140050960:	in     al,0x1
   140050962:	add    al,0x40
   140050964:	add    DWORD PTR [rax],eax
   140050966:	add    BYTE PTR [rax],al
   140050968:	cmc    
   140050969:	mov    rax,QWORD PTR [r8]
   14005096c:	add    BYTE PTR [rax],al
   14005096e:	add    BYTE PTR [rax],al
   140050970:	in     al,dx
   140050971:	add    DWORD PTR [rax+rax*2],eax
   140050974:	add    DWORD PTR [rax],eax
   140050976:	add    BYTE PTR [rax],al
   140050978:	(bad)  
   140050979:	rex.RX fld QWORD PTR [rax]
   14005097c:	add    BYTE PTR [rax],al
   14005097e:	add    BYTE PTR [rax],al
   140050980:	hlt    
   140050981:	add    DWORD PTR [rax+rax*2],eax
   140050984:	add    DWORD PTR [rax],eax
   140050986:	add    BYTE PTR [rax],al
   140050988:	(bad)  
   140050989:	rex.R inc DWORD PTR [rax]
   14005098c:	add    BYTE PTR [rax],al
   14005098e:	add    BYTE PTR [rax],al
   140050990:	cld    
   140050991:	add    DWORD PTR [rax+rax*2],eax
   140050994:	add    DWORD PTR [rax],eax
   140050996:	add    BYTE PTR [rax],al
   140050998:	(bad)  
   140050999:	rex.R out dx,al
   14005099b:	add    BYTE PTR [rax],al
   14005099d:	add    BYTE PTR [rax],al
   14005099f:	add    BYTE PTR [rdx+rax*1],al
   1400509a2:	add    al,0x40
   1400509a4:	add    DWORD PTR [rax],eax
   1400509a6:	add    BYTE PTR [rax],al
   1400509a8:	(bad)  
   1400509a9:	rex.R int 0x0
   1400509ac:	add    BYTE PTR [rax],al
   1400509ae:	add    BYTE PTR [rax],al
   1400509b0:	or     al,0x2
   1400509b2:	add    al,0x40
   1400509b4:	add    DWORD PTR [rax],eax
   1400509b6:	add    BYTE PTR [rax],al
   1400509b8:	(bad)  
   1400509b9:	rex.XB mov eax,DWORD PTR [r8]
   1400509bc:	add    BYTE PTR [rax],al
   1400509be:	add    BYTE PTR [rax],al
   1400509c0:	sbb    BYTE PTR [rdx],al
   1400509c2:	add    al,0x40
   1400509c4:	add    DWORD PTR [rax],eax
   1400509c6:	add    BYTE PTR [rax],al
   1400509c8:	test   BYTE PTR [rbx],bh
   1400509ca:	out    0x0,al
   1400509cc:	add    BYTE PTR [rax],al
   1400509ce:	add    BYTE PTR [rax],al
   1400509d0:	and    al,0x2
   1400509d2:	add    al,0x40
   1400509d4:	add    DWORD PTR [rax],eax
   1400509d6:	add    BYTE PTR [rax],al
   1400509d8:	(bad)  
   1400509d9:	(bad)  
   1400509db:	add    BYTE PTR [rax],al
   1400509dd:	add    BYTE PTR [rax],al
   1400509df:	add    BYTE PTR [rax],dh
   1400509e1:	add    al,BYTE PTR [rax+rax*2]
   1400509e4:	add    DWORD PTR [rax],eax
   1400509e6:	add    BYTE PTR [rax],al
   1400509e8:	mov    edi,0xffcf
   1400509ed:	add    BYTE PTR [rax],al
   1400509ef:	add    BYTE PTR [rax],bh
   1400509f1:	add    al,BYTE PTR [rax+rax*2]
   1400509f4:	add    DWORD PTR [rax],eax
   1400509f6:	add    BYTE PTR [rax],al
   1400509f8:	ror    bh,0xee
   1400509fb:	add    BYTE PTR [rax],al
   1400509fd:	add    BYTE PTR [rax],al
   1400509ff:	add    BYTE PTR [rax+0x2],al
   140050a02:	add    al,0x40
   140050a04:	add    DWORD PTR [rax],eax
   140050a06:	add    BYTE PTR [rax],al
   140050a08:	ror    bh,0xcd
   140050a0b:	add    BYTE PTR [rax],al
   140050a0d:	add    BYTE PTR [rax],al
   140050a0f:	add    BYTE PTR [rax+0x2],cl
   140050a12:	add    al,0x40
   140050a14:	add    DWORD PTR [rax],eax
   140050a16:	add    BYTE PTR [rax],al
   140050a18:	ror    bh,0x8b
   140050a1b:	add    BYTE PTR [rax],al
   140050a1d:	add    BYTE PTR [rax],al
   140050a1f:	add    BYTE PTR [rax+0x2],dl
   140050a22:	add    al,0x40
   140050a24:	add    DWORD PTR [rax],eax
   140050a26:	add    BYTE PTR [rax],al
   140050a28:	add    bh,bh
   140050a2a:	inc    DWORD PTR [rax]
   140050a2c:	add    BYTE PTR [rax],al
   140050a2e:	add    BYTE PTR [rax],al
   140050a30:	push   rsp
   140050a31:	add    al,BYTE PTR [rax+rax*2]
   140050a34:	add    DWORD PTR [rax],eax
   140050a36:	add    BYTE PTR [rax],al
   140050a38:	add    bh,bh
   140050a3a:	inc    DWORD PTR [rax]
   140050a3c:	add    BYTE PTR [rax],al
   140050a3e:	add    BYTE PTR [rax],al
   140050a40:	pop    rsp
   140050a41:	add    al,BYTE PTR [rax+rax*2]
   140050a44:	add    DWORD PTR [rax],eax
   140050a46:	add    BYTE PTR [rax],al
   140050a48:	add    bh,bh
   140050a4a:	out    dx,al
   140050a4b:	add    BYTE PTR [rax],al
   140050a4d:	add    BYTE PTR [rax],al
   140050a4f:	add    BYTE PTR [rdx+rax*1+0x4],ah
   140050a53:	rex add DWORD PTR [rax],eax
   140050a56:	add    BYTE PTR [rax],al
   140050a58:	add    bh,bh
   140050a5a:	int    0x0
   140050a5c:	add    BYTE PTR [rax],al
   140050a5e:	add    BYTE PTR [rax],al
   140050a60:	ins    BYTE PTR es:[rdi],dx
   140050a61:	add    al,BYTE PTR [rax+rax*2]
   140050a64:	add    DWORD PTR [rax],eax
   140050a66:	add    BYTE PTR [rax],al
   140050a68:	add    bh,bh
   140050a6a:	mov    eax,DWORD PTR [rax]
   140050a6c:	add    BYTE PTR [rax],al
   140050a6e:	add    BYTE PTR [rax],al
   140050a70:	js     0x140050a74
   140050a72:	add    al,0x40
   140050a74:	add    DWORD PTR [rax],eax
   140050a76:	add    BYTE PTR [rax],al
   140050a78:	add    BYTE PTR [rip+0xbc],bh        # 0x140050b3a
   140050a7e:	add    BYTE PTR [rax],al
   140050a80:	mov    BYTE PTR [rdx],al
   140050a82:	add    al,0x40
   140050a84:	add    DWORD PTR [rax],eax
   140050a86:	add    BYTE PTR [rax],al
   140050a88:	add    BYTE PTR [rsi],bh
   140050a8a:	inc    DWORD PTR [rax]
   140050a8c:	add    BYTE PTR [rax],al
   140050a8e:	add    BYTE PTR [rax],al
   140050a90:	cwde   
   140050a91:	add    al,BYTE PTR [rax+rax*2]
   140050a94:	add    DWORD PTR [rax],eax
   140050a96:	add    BYTE PTR [rax],al
   140050a98:	add    BYTE PTR [rsi],bh
   140050a9a:	out    dx,al
   140050a9b:	add    BYTE PTR [rax],al
   140050a9d:	add    BYTE PTR [rax],al
   140050a9f:	add    BYTE PTR [rax+0x1400402],ch
   140050aa5:	add    BYTE PTR [rax],al
   140050aa7:	add    BYTE PTR [rax],al
   140050aa9:	ds int 0x0
   140050aac:	add    BYTE PTR [rax],al
   140050aae:	add    BYTE PTR [rax],al
   140050ab0:	mov    eax,0x1400402
   140050ab5:	add    BYTE PTR [rax],al
   140050ab7:	add    BYTE PTR [rax],al
   140050ab9:	mov    eax,DWORD PTR ds:[rax]
   140050abc:	add    BYTE PTR [rax],al
   140050abe:	add    BYTE PTR [rax],al
   140050ac0:	enter  0x402,0x40
   140050ac4:	add    DWORD PTR [rax],eax
   140050ac6:	add    BYTE PTR [rax],al
   140050ac8:	lahf   
   140050ac9:	mov    ch,0xe1
   140050acb:	add    BYTE PTR [rax],al
   140050acd:	add    BYTE PTR [rax],al
   140050acf:	add    al,bl
   140050ad1:	add    al,BYTE PTR [rax+rax*2]
   140050ad4:	add    DWORD PTR [rax],eax
   140050ad6:	add    BYTE PTR [rax],al
   140050ad8:	lahf   
   140050ad9:	mov    bh,0xff
   140050adb:	add    BYTE PTR [rax],al
   140050add:	add    BYTE PTR [rax],al
   140050adf:	add    al,ch
   140050ae1:	add    al,BYTE PTR [rax+rax*2]
   140050ae4:	add    DWORD PTR [rax],eax
   140050ae6:	add    BYTE PTR [rax],al
   140050ae8:	lahf   
   140050ae9:	mov    bh,0xee
   140050aeb:	add    BYTE PTR [rax],al
   140050aed:	add    BYTE PTR [rax],al
   140050aef:	add    al,bh
   140050af1:	add    al,BYTE PTR [rax+rax*2]
   140050af4:	add    DWORD PTR [rax],eax
   140050af6:	add    BYTE PTR [rax],al
   140050af8:	lahf   
   140050af9:	mov    dh,0xcd
   140050afb:	add    BYTE PTR [rax],al
   140050afd:	add    BYTE PTR [rax],al
   140050aff:	add    BYTE PTR [rax],cl
   140050b01:	add    eax,DWORD PTR [rax+rax*2]
   140050b04:	add    DWORD PTR [rax],eax
   140050b06:	add    BYTE PTR [rax],al
   140050b08:	lahf   
   140050b09:	mov    bh,0x8b
   140050b0b:	add    BYTE PTR [rax],al
   140050b0d:	add    BYTE PTR [rax],al
   140050b0f:	add    BYTE PTR [rax],bl
   140050b11:	add    eax,DWORD PTR [rax+rax*2]
   140050b14:	add    DWORD PTR [rax],eax
   140050b16:	add    BYTE PTR [rax],al
   140050b18:	adc    esp,ebx
   140050b1a:	mov    eax,DWORD PTR [rax]
   140050b1c:	add    BYTE PTR [rax],al
   140050b1e:	add    BYTE PTR [rax],al
   140050b20:	and    al,0x3
   140050b22:	add    al,0x40
   140050b24:	add    DWORD PTR [rax],eax
   140050b26:	add    BYTE PTR [rax],al
   140050b28:	add    al,0x8a
   140050b2a:	cli    
   140050b2b:	add    BYTE PTR [rax],al
   140050b2d:	add    BYTE PTR [rax],al
   140050b2f:	add    BYTE PTR [rax],dh
   140050b31:	add    eax,DWORD PTR [rax+rax*2]
   140050b34:	add    DWORD PTR [rax],eax
   140050b36:	add    BYTE PTR [rax],al
   140050b38:	or     DWORD PTR [rsi+0xff],edx
   140050b3e:	add    BYTE PTR [rax],al
   140050b40:	cmp    BYTE PTR [rbx],al
   140050b42:	add    al,0x40
   140050b44:	add    DWORD PTR [rax],eax
   140050b46:	add    BYTE PTR [rax],al
   140050b48:	or     DWORD PTR [rsi+0xee],edx
   140050b4e:	add    BYTE PTR [rax],al
   140050b50:	rex add eax,DWORD PTR [rax+rax*2]
   140050b54:	add    DWORD PTR [rax],eax
   140050b56:	add    BYTE PTR [rax],al
   140050b58:	or     DWORD PTR [rsi+0xcd],edx
   140050b5e:	add    BYTE PTR [rax],al
   140050b60:	add    rax,QWORD PTR [rax+rax*2]
   140050b64:	add    DWORD PTR [rax],eax
   140050b66:	add    BYTE PTR [rax],al
   140050b68:	or     DWORD PTR [rsi+0x8b],edx
   140050b6e:	add    BYTE PTR [rax],al
   140050b70:	push   rax
   140050b71:	add    eax,DWORD PTR [rax+rax*2]
   140050b74:	add    DWORD PTR [rax],eax
   140050b76:	add    BYTE PTR [rax],al
   140050b78:	adc    ebx,DWORD PTR [rdx+0xf4]
   140050b7e:	add    BYTE PTR [rax],al
   140050b80:	(bad)  
   140050b81:	add    eax,DWORD PTR [rax+rax*2]
   140050b84:	add    DWORD PTR [rax],eax
   140050b86:	add    BYTE PTR [rax],al
   140050b88:	stos   BYTE PTR es:[edi],al
   140050b8a:	mov    eax,DWORD PTR [rax]
   140050b8c:	add    BYTE PTR [rax],al
   140050b8e:	add    BYTE PTR [rax],al
   140050b90:	jo     0x140050b95
   140050b92:	add    al,0x40
   140050b94:	add    DWORD PTR [rax],eax
   140050b96:	add    BYTE PTR [rax],al
   140050b98:	stos   DWORD PTR es:[edi],eax
   140050b9a:	inc    DWORD PTR [rax]
   140050b9c:	add    BYTE PTR [rax],al
   140050b9e:	add    BYTE PTR [rax],al
   140050ba0:	add    BYTE PTR [rbx],0x4
   140050ba3:	rex add DWORD PTR [rax],eax
   140050ba6:	add    BYTE PTR [rax],al
   140050ba8:	stos   DWORD PTR es:[edi],eax
   140050baa:	out    dx,al
   140050bab:	add    BYTE PTR [rax],al
   140050bad:	add    BYTE PTR [rax],al
   140050baf:	add    BYTE PTR [rax+0x1400403],dl
   140050bb5:	add    BYTE PTR [rax],al
   140050bb7:	add    BYTE PTR [rdi-0x55],ah
   140050bba:	int    0x0
   140050bbc:	add    BYTE PTR [rax],al
   140050bbe:	add    BYTE PTR [rax],al
   140050bc0:	movabs al,ds:0x6700000001400403
   140050bc9:	stos   BYTE PTR es:[rdi],al
   140050bca:	mov    eax,DWORD PTR [rax]
   140050bcc:	add    BYTE PTR [rax],al
   140050bce:	add    BYTE PTR [rax],al
   140050bd0:	mov    al,0x3
   140050bd2:	add    al,0x40
   140050bd4:	add    DWORD PTR [rax],eax
   140050bd6:	add    BYTE PTR [rax],al
   140050bd8:	adc    DWORD PTR [rax],edx
   140050bda:	inc    DWORD PTR [rax]
   140050bdc:	add    BYTE PTR [rax],al
   140050bde:	add    BYTE PTR [rax],al
   140050be0:	rol    BYTE PTR [rbx],0x4
   140050be3:	rex add DWORD PTR [rax],eax
   140050be6:	add    BYTE PTR [rax],al
   140050be8:	adc    DWORD PTR [rax],edx
   140050bea:	inc    DWORD PTR [rax]
   140050bec:	add    BYTE PTR [rax],al
   140050bee:	add    BYTE PTR [rax],al
   140050bf0:	rol    BYTE PTR [rbx],1
   140050bf2:	add    al,0x40
   140050bf4:	add    DWORD PTR [rax],eax
   140050bf6:	add    BYTE PTR [rax],al
   140050bf8:	adc    dl,BYTE PTR [rcx]
   140050bfa:	out    dx,al
   140050bfb:	add    BYTE PTR [rax],al
   140050bfd:	add    BYTE PTR [rax],al
   140050bff:	add    al,ah
   140050c01:	add    eax,DWORD PTR [rax+rax*2]
   140050c04:	add    DWORD PTR [rax],eax
   140050c06:	add    BYTE PTR [rax],al
   140050c08:	adc    dl,BYTE PTR [rcx]
   140050c0a:	int    0x0
   140050c0c:	add    BYTE PTR [rax],al
   140050c0e:	add    BYTE PTR [rax],al
   140050c10:	lock add eax,DWORD PTR [rax+rax*2]
   140050c14:	add    DWORD PTR [rax],eax
   140050c16:	add    BYTE PTR [rax],al
   140050c18:	adc    dl,BYTE PTR [rax]
   140050c1a:	mov    eax,DWORD PTR [rax]
   140050c1c:	add    BYTE PTR [rax],al
   140050c1e:	add    BYTE PTR [rax],al
   140050c20:	cld    
   140050c21:	add    eax,DWORD PTR [rax+rax*2]
   140050c24:	add    DWORD PTR [rax],eax
   140050c26:	add    BYTE PTR [rax],al
   140050c28:	or     eax,0xa0b7
   140050c2d:	add    BYTE PTR [rax],al
   140050c2f:	add    BYTE PTR [rax],cl
   140050c31:	add    al,0x4
   140050c33:	rex add DWORD PTR [rax],eax
   140050c36:	add    BYTE PTR [rax],al
   140050c38:	or     eax,0xffb8
   140050c3d:	add    BYTE PTR [rax],al
   140050c3f:	add    BYTE PTR [rax],dl
   140050c41:	add    al,0x4
   140050c43:	rex add DWORD PTR [rax],eax
   140050c46:	add    BYTE PTR [rax],al
   140050c48:	or     eax,0xeeb8
   140050c4d:	add    BYTE PTR [rax],al
   140050c4f:	add    BYTE PTR [rax],bl
   140050c51:	add    al,0x4
   140050c53:	rex add DWORD PTR [rax],eax
   140050c56:	add    BYTE PTR [rax],al
   140050c58:	or     eax,0xcdb8
   140050c5d:	add    BYTE PTR [rax],al
   140050c5f:	add    BYTE PTR [rax],ah
   140050c61:	add    al,0x4
   140050c63:	rex add DWORD PTR [rax],eax
   140050c66:	add    BYTE PTR [rax],al
   140050c68:	or     eax,0x8bb9
   140050c6d:	add    BYTE PTR [rax],al
   140050c6f:	add    BYTE PTR [rax],ch
   140050c71:	add    al,0x4
   140050c73:	rex add DWORD PTR [rax],eax
   140050c76:	add    BYTE PTR [rax],al
   140050c78:	mov    ebp,DWORD PTR [rbx+rbp*8+0x0]
   140050c7c:	add    BYTE PTR [rax],al
   140050c7e:	add    BYTE PTR [rax],al
   140050c80:	xor    BYTE PTR [rsp+rax*1],al
   140050c83:	rex add DWORD PTR [rax],eax
   140050c86:	add    BYTE PTR [rax],al
   140050c88:	nop
   140050c89:	js     0x140050c8a
   140050c8b:	add    BYTE PTR [rax],al
   140050c8d:	add    BYTE PTR [rax],al
   140050c8f:	add    BYTE PTR [rax+0x4],al
   140050c92:	add    al,0x40
   140050c94:	add    DWORD PTR [rax],eax
   140050c96:	add    BYTE PTR [rax],al
   140050c98:	nop
   140050c99:	js     0x140050c89
   140050c9b:	add    BYTE PTR [rax],al
   140050c9d:	add    BYTE PTR [rax],al
   140050c9f:	add    BYTE PTR [rax+0x4],dl
   140050ca2:	add    al,0x40
   140050ca4:	add    DWORD PTR [rax],eax
   140050ca6:	add    BYTE PTR [rax],al
   140050ca8:	nop
   140050ca9:	js     0x140050c78
   140050cab:	add    BYTE PTR [rax],al
   140050cad:	add    BYTE PTR [rax],al
   140050caf:	add    BYTE PTR [rax+0x4],ah
   140050cb2:	add    al,0x40
   140050cb4:	add    DWORD PTR [rax],eax
   140050cb6:	add    BYTE PTR [rax],al
   140050cb8:	xchg   ecx,eax
   140050cb9:	ja     0x140050c46
   140050cbb:	add    BYTE PTR [rax],al
   140050cbd:	add    BYTE PTR [rax],al
   140050cbf:	add    BYTE PTR [rax+0x4],dh
   140050cc2:	add    al,0x40
   140050cc4:	add    DWORD PTR [rax],eax
   140050cc6:	add    BYTE PTR [rax],al
   140050cc8:	scas   eax,DWORD PTR es:[rdi]
   140050cc9:	(bad)  
   140050cca:	int    0x0
   140050ccc:	add    BYTE PTR [rax],al
   140050cce:	add    BYTE PTR [rax],al
   140050cd0:	add    BYTE PTR [rsp+rax*1],0x40
   140050cd4:	add    DWORD PTR [rax],eax
   140050cd6:	add    BYTE PTR [rax],al
   140050cd8:	scas   eax,DWORD PTR es:[rdi]
   140050cd9:	nop
   140050cda:	inc    DWORD PTR [rax]
   140050cdc:	add    BYTE PTR [rax],al
   140050cde:	add    BYTE PTR [rax],al
   140050ce0:	nop
   140050ce1:	add    al,0x4
   140050ce3:	rex add DWORD PTR [rax],eax
   140050ce6:	add    BYTE PTR [rax],al
   140050ce8:	scas   eax,DWORD PTR es:[rdi]
   140050ce9:	nop
   140050cea:	out    dx,al
   140050ceb:	add    BYTE PTR [rax],al
   140050ced:	add    BYTE PTR [rax],al
   140050cef:	add    BYTE PTR [rax+0x1400404],ah
   140050cf5:	add    BYTE PTR [rax],al
   140050cf7:	add    BYTE PTR [rdi+0xcd90],ch
   140050cfd:	add    BYTE PTR [rax],al
   140050cff:	add    BYTE PTR [rax+0x1400404],dh
   140050d05:	add    BYTE PTR [rax],al
   140050d07:	add    BYTE PTR [rdi+0x8b90],ch
   140050d0d:	add    BYTE PTR [rax],al
   140050d0f:	add    al,al
   140050d11:	add    al,0x4
   140050d13:	rex add DWORD PTR [rax],eax
   140050d16:	add    BYTE PTR [rax],al
   140050d18:	xchg   esp,eax
   140050d19:	cmp    BYTE PTR [rax+0x0],dl
   140050d1f:	add    al,dl
   140050d21:	add    al,0x4
   140050d23:	rex add DWORD PTR [rax],eax
   140050d26:	add    BYTE PTR [rax],al
   140050d28:	xchg   ebp,eax
   140050d29:	cmp    bh,bh
   140050d2b:	add    BYTE PTR [rax],al
   140050d2d:	add    BYTE PTR [rax],al
   140050d2f:	add    al,ah
   140050d31:	add    al,0x4
   140050d33:	rex add DWORD PTR [rax],eax
   140050d36:	add    BYTE PTR [rax],al
   140050d38:	xchg   ebp,eax
   140050d39:	cmp    dh,ch
   140050d3b:	add    BYTE PTR [rax],al
   140050d3d:	add    BYTE PTR [rax],al
   140050d3f:	add    al,dh
   140050d41:	add    al,0x4
   140050d43:	rex add DWORD PTR [rax],eax
   140050d46:	add    BYTE PTR [rax],al
   140050d48:	xchg   esp,eax
   140050d49:	cmp    ebp,ecx
   140050d4b:	add    BYTE PTR [rax],al
   140050d4d:	add    BYTE PTR [rax],al
   140050d4f:	add    BYTE PTR [rax],al
   140050d51:	add    eax,0x14004
   140050d56:	add    BYTE PTR [rax],al
   140050d58:	xchg   ebp,eax
   140050d59:	cmp    BYTE PTR [rbx+0x0],cl
   140050d5f:	add    BYTE PTR [rax],dl
   140050d61:	add    eax,0x14004
   140050d66:	add    BYTE PTR [rax],al
   140050d68:	xchg   esp,eax
   140050d69:	cmp    BYTE PTR [rax+0x0],dl
   140050d6f:	add    BYTE PTR [rax*1+0x14004],bl
   140050d76:	add    BYTE PTR [rax],al
   140050d78:	add    BYTE PTR [rip+0xff],al        # 0x140050e7d
   140050d7e:	add    BYTE PTR [rax],al
   140050d80:	and    al,0x5
   140050d82:	add    al,0x40
   140050d84:	add    DWORD PTR [rax],eax
   140050d86:	add    BYTE PTR [rax],al
   140050d88:	add    BYTE PTR [rip+0xff],al        # 0x140050e8d
   140050d8e:	add    BYTE PTR [rax],al
   140050d90:	sub    al,0x5
   140050d92:	add    al,0x40
   140050d94:	add    DWORD PTR [rax],eax
   140050d96:	add    BYTE PTR [rax],al
   140050d98:	add    BYTE PTR [rip+0xee],al        # 0x140050e8c
   140050d9e:	add    BYTE PTR [rax],al
   140050da0:	xor    al,0x5
   140050da2:	add    al,0x40
   140050da4:	add    DWORD PTR [rax],eax
   140050da6:	add    BYTE PTR [rax],al
   140050da8:	add    BYTE PTR [rcx*8+0x0],al
   140050daf:	add    BYTE PTR [rax*1+0x14004],bh
   140050db6:	add    BYTE PTR [rax],al
   140050db8:	add    BYTE PTR [rbx],al
   140050dba:	mov    eax,DWORD PTR [rax]
   140050dbc:	add    BYTE PTR [rax],al
   140050dbe:	add    BYTE PTR [rax],al
   140050dc0:	add    rax,0x14004
   140050dc6:	add    BYTE PTR [rax],al
   140050dc8:	push   0xffffffffffffffff
   140050dca:	inc    DWORD PTR [rax]
   140050dcc:	add    BYTE PTR [rax],al
   140050dce:	add    BYTE PTR [rax],al
   140050dd0:	pop    rax
   140050dd1:	add    eax,0x14004
   140050dd6:	add    BYTE PTR [rax],al
   140050dd8:	push   0xffffffffffffffff
   140050dda:	inc    DWORD PTR [rax]
   140050ddc:	add    BYTE PTR [rax],al
   140050dde:	add    BYTE PTR [rax],al
   140050de0:	push   0x1400405
   140050de5:	add    BYTE PTR [rax],al
   140050de7:	add    BYTE PTR [rdx-0x1],ch
   140050dea:	out    dx,al
   140050deb:	add    BYTE PTR [rax],al
   140050ded:	add    BYTE PTR [rax],al
   140050def:	add    BYTE PTR [rax+0x5],bh
   140050df2:	add    al,0x40
   140050df4:	add    DWORD PTR [rax],eax
   140050df6:	add    BYTE PTR [rax],al
   140050df8:	push   0xffffffffffffffff
   140050dfa:	int    0x0
   140050dfc:	add    BYTE PTR [rax],al
   140050dfe:	add    BYTE PTR [rax],al
   140050e00:	mov    BYTE PTR [rip+0x14004],al        # 0x140064e0a
   140050e06:	add    BYTE PTR [rax],al
   140050e08:	push   0xffffffffffffffff
   140050e0a:	mov    eax,DWORD PTR [rax]
   140050e0c:	add    BYTE PTR [rax],al
   140050e0e:	add    BYTE PTR [rax],al
   140050e10:	cwde   
   140050e11:	add    eax,0x14004
   140050e16:	add    BYTE PTR [rax],al
   140050e18:	xchg   edx,eax
   140050e19:	fwait
   140050e1a:	mov    ah,0x0
   140050e1c:	add    BYTE PTR [rax],al
   140050e1e:	add    BYTE PTR [rax],al
   140050e20:	test   al,0x5
   140050e22:	add    al,0x40
   140050e24:	add    DWORD PTR [rax],eax
   140050e26:	add    BYTE PTR [rax],al
   140050e28:	xchg   edx,eax
   140050e29:	pushf  
   140050e2a:	inc    DWORD PTR [rax]
   140050e2c:	add    BYTE PTR [rax],al
   140050e2e:	add    BYTE PTR [rax],al
   140050e30:	mov    eax,0x1400405
   140050e35:	add    BYTE PTR [rax],al
   140050e37:	add    BYTE PTR [rdx+0xee9c],dl
   140050e3d:	add    BYTE PTR [rax],al
   140050e3f:	add    al,cl
   140050e41:	add    eax,0x14004
   140050e46:	add    BYTE PTR [rax],al
   140050e48:	xchg   edx,eax
   140050e49:	pushf  
   140050e4a:	int    0x0
   140050e4c:	add    BYTE PTR [rax],al
   140050e4e:	add    BYTE PTR [rax],al
   140050e50:	fadd   DWORD PTR [rip+0x14004]        # 0x140064e5a
   140050e56:	add    BYTE PTR [rax],al
   140050e58:	xchg   ebx,eax
   140050e59:	fwait
   140050e5a:	mov    eax,DWORD PTR [rax]
   140050e5c:	add    BYTE PTR [rax],al
   140050e5e:	add    BYTE PTR [rax],al
   140050e60:	in     al,0x5
   140050e62:	add    al,0x40
   140050e64:	add    DWORD PTR [rax],eax
   140050e66:	add    BYTE PTR [rax],al
   140050e68:	sbb    BYTE PTR [rdx+rdx*8+0x0],dl
   140050e6c:	add    BYTE PTR [rax],al
   140050e6e:	add    BYTE PTR [rax],al
   140050e70:	call   0x14145127a
   140050e75:	add    BYTE PTR [rax],al
   140050e77:	add    BYTE PTR [rax+rsi*4],dl
   140050e7a:	inc    DWORD PTR [rax]
   140050e7c:	add    BYTE PTR [rax],al
   140050e7e:	add    BYTE PTR [rax],al
   140050e80:	lock add eax,0x14004
   140050e86:	add    BYTE PTR [rax],al
   140050e88:	adc    al,0xb0
   140050e8a:	out    dx,al
   140050e8b:	add    BYTE PTR [rax],al
   140050e8d:	add    BYTE PTR [rax],al
   140050e8f:	add    al,bh
   140050e91:	add    eax,0x14004
   140050e96:	add    BYTE PTR [rax],al
   140050e98:	adc    al,0xb0
   140050e9a:	int    0x0
   140050e9c:	add    BYTE PTR [rax],al
   140050e9e:	add    BYTE PTR [rax],al
   140050ea0:	add    BYTE PTR [rsi],al
   140050ea2:	add    al,0x40
   140050ea4:	add    DWORD PTR [rax],eax
   140050ea6:	add    BYTE PTR [rax],al
   140050ea8:	adc    al,0xb0
   140050eaa:	mov    eax,DWORD PTR [rax]
   140050eac:	add    BYTE PTR [rax],al
   140050eae:	add    BYTE PTR [rax],al
   140050eb0:	or     BYTE PTR [rsi],al
   140050eb2:	add    al,0x40
   140050eb4:	add    DWORD PTR [rax],eax
   140050eb6:	add    BYTE PTR [rax],al
   140050eb8:	(bad)  
   140050eb9:	sbb    eax,0xd8
   140050ebe:	add    BYTE PTR [rax],al
   140050ec0:	adc    BYTE PTR [rsi],al
   140050ec2:	add    al,0x40
   140050ec4:	add    DWORD PTR [rax],eax
   140050ec6:	add    BYTE PTR [rax],al
   140050ec8:	(bad)  
   140050ec9:	(bad)  
   140050eca:	inc    DWORD PTR [rax]
   140050ecc:	add    BYTE PTR [rax],al
   140050ece:	add    BYTE PTR [rax],al
   140050ed0:	and    BYTE PTR [rsi],al
   140050ed2:	add    al,0x40
   140050ed4:	add    DWORD PTR [rax],eax
   140050ed6:	add    BYTE PTR [rax],al
   140050ed8:	(bad)  
   140050ed9:	(bad)  
   140050eda:	out    dx,al
   140050edb:	add    BYTE PTR [rax],al
   140050edd:	add    BYTE PTR [rax],al
   140050edf:	add    BYTE PTR [rax],dh
   140050ee1:	(bad)  
   140050ee2:	add    al,0x40
   140050ee4:	add    DWORD PTR [rax],eax
   140050ee6:	add    BYTE PTR [rax],al
   140050ee8:	(bad)  
   140050ee9:	sbb    eax,0xcd
   140050eee:	add    BYTE PTR [rax],al
   140050ef0:	rex (bad) 
   140050ef2:	add    al,0x40
   140050ef4:	add    DWORD PTR [rax],eax
   140050ef6:	add    BYTE PTR [rax],al
   140050ef8:	(bad)  
   140050ef9:	sbb    eax,0x8b
   140050efe:	add    BYTE PTR [rax],al
   140050f00:	rex.WR (bad) 
   140050f02:	add    al,0x40
   140050f04:	add    DWORD PTR [rax],eax
   140050f06:	add    BYTE PTR [rax],al
   140050f08:	(bad)  
   140050f09:	mov    eax,0xff
   140050f0e:	add    BYTE PTR [rax],al
   140050f10:	pop    rax
   140050f11:	(bad)  
   140050f12:	add    al,0x40
   140050f14:	add    DWORD PTR [rax],eax
   140050f16:	add    BYTE PTR [rax],al
   140050f18:	(bad)  
   140050f19:	mov    eax,0xff
   140050f1e:	add    BYTE PTR [rax],al
   140050f20:	(bad)  
   140050f21:	(bad)  
   140050f22:	add    al,0x40
   140050f24:	add    DWORD PTR [rax],eax
   140050f26:	add    BYTE PTR [rax],al
   140050f28:	(bad)  
   140050f29:	mov    eax,0xee
   140050f2e:	add    BYTE PTR [rax],al
   140050f30:	push   0x1400406
   140050f35:	add    BYTE PTR [rax],al
   140050f37:	add    BYTE PTR [rsi],al
   140050f39:	mov    eax,0xcd
   140050f3e:	add    BYTE PTR [rax],al
   140050f40:	jo     0x140050f48
   140050f42:	add    al,0x40
   140050f44:	add    DWORD PTR [rax],eax
   140050f46:	add    BYTE PTR [rax],al
   140050f48:	(bad)  
   140050f49:	mov    ecx,0x8b
   140050f4e:	add    BYTE PTR [rax],al
   140050f50:	js     0x140050f58
   140050f52:	add    al,0x40
   140050f54:	add    DWORD PTR [rax],eax
   140050f56:	add    BYTE PTR [rax],al
   140050f58:	jnp    0x140050f10
   140050f5a:	loopne 0x140050f5c
   140050f5c:	add    BYTE PTR [rax],al
   140050f5e:	add    BYTE PTR [rax],al
   140050f60:	mov    BYTE PTR [rsi],al
   140050f62:	add    al,0x40
   140050f64:	add    DWORD PTR [rax],eax
   140050f66:	add    BYTE PTR [rax],al
   140050f68:	cmp    edi,0xff
   140050f6e:	add    BYTE PTR [rax],al
   140050f70:	cwde   
   140050f71:	(bad)  
   140050f72:	add    al,0x40
   140050f74:	add    DWORD PTR [rax],eax
   140050f76:	add    BYTE PTR [rax],al
   140050f78:	cmp    edi,0xee
   140050f7e:	add    BYTE PTR [rax],al
   140050f80:	test   al,0x6
   140050f82:	add    al,0x40
   140050f84:	add    DWORD PTR [rax],eax
   140050f86:	add    BYTE PTR [rax],al
   140050f88:	cmp    edi,0xcd
   140050f8e:	add    BYTE PTR [rax],al
   140050f90:	mov    eax,0x1400406
   140050f95:	add    BYTE PTR [rax],al
   140050f97:	add    BYTE PTR [rcx+0x8bff],al
   140050f9d:	add    BYTE PTR [rax],al
   140050f9f:	add    ah,al
   140050fa1:	(bad)  
   140050fa2:	add    al,0x40
   140050fa4:	add    DWORD PTR [rax],eax
   140050fa6:	add    BYTE PTR [rax],al
   140050fa8:	(bad)  
   140050fa9:	jae    0x140050f99
   140050fab:	add    BYTE PTR [rax],al
   140050fad:	add    BYTE PTR [rax],al
   140050faf:	add    al,dl
   140050fb1:	(bad)  
   140050fb2:	add    al,0x40
   140050fb4:	add    DWORD PTR [rax],eax
   140050fb6:	add    BYTE PTR [rax],al
   140050fb8:	jrcxz  0x140050f91
   140050fba:	rol    BYTE PTR [rax],1
   140050fbc:	add    BYTE PTR [rax],al
   140050fbe:	add    BYTE PTR [rax],al
   140050fc0:	loopne 0x140050fc8
   140050fc2:	add    al,0x40
   140050fc4:	add    DWORD PTR [rax],eax
   140050fc6:	add    BYTE PTR [rax],al
   140050fc8:	jmp    0x140050f8b
   140050fca:	inc    DWORD PTR [rax]
   140050fcc:	add    BYTE PTR [rax],al
   140050fce:	add    BYTE PTR [rax],al
   140050fd0:	lock (bad) 
   140050fd2:	add    al,0x40
   140050fd4:	add    DWORD PTR [rax],eax
   140050fd6:	add    BYTE PTR [rax],al
   140050fd8:	jmp    0x140050f9a
   140050fda:	out    dx,al
   140050fdb:	add    BYTE PTR [rax],al
   140050fdd:	add    BYTE PTR [rax],al
   140050fdf:	add    BYTE PTR [rax],al
   140050fe1:	(bad)  
   140050fe2:	add    al,0x40
   140050fe4:	add    DWORD PTR [rax],eax
   140050fe6:	add    BYTE PTR [rax],al
   140050fe8:	jmp    0x140050faa
   140050fea:	int    0x0
   140050fec:	add    BYTE PTR [rax],al
   140050fee:	add    BYTE PTR [rax],al
   140050ff0:	adc    BYTE PTR [rdi],al
   140050ff2:	add    al,0x40
   140050ff4:	add    DWORD PTR [rax],eax
   140050ff6:	add    BYTE PTR [rax],al
   140050ff8:	jmp    0x140050fba
   140050ffa:	mov    eax,DWORD PTR [rax]
   140050ffc:	add    BYTE PTR [rax],al
   140050ffe:	add    BYTE PTR [rax],al
   140051000:	sbb    al,0x7
   140051002:	add    al,0x40
   140051004:	add    DWORD PTR [rax],eax
   140051006:	add    BYTE PTR [rax],al
   140051008:	sbb    eax,DWORD PTR [rbp+rsi*8+0x0]
   14005100c:	add    BYTE PTR [rax],al
   14005100e:	add    BYTE PTR [rax],al
   140051010:	and    al,0x7
   140051012:	add    al,0x40
   140051014:	add    DWORD PTR [rax],eax
   140051016:	add    BYTE PTR [rax],al
   140051018:	sbb    eax,DWORD PTR [rbp-0x1]
   14005101b:	add    BYTE PTR [rax],al
   14005101d:	add    BYTE PTR [rax],al
   14005101f:	add    BYTE PTR [rdi+rax*1],ch
   140051022:	add    al,0x40
   140051024:	add    DWORD PTR [rax],eax
   140051026:	add    BYTE PTR [rax],al
   140051028:	sbb    eax,DWORD PTR [rsi+rbp*8+0x0]
   14005102c:	add    BYTE PTR [rax],al
   14005102e:	add    BYTE PTR [rax],al
   140051030:	xor    al,0x7
   140051032:	add    al,0x40
   140051034:	add    DWORD PTR [rax],eax
   140051036:	add    BYTE PTR [rax],al
   140051038:	sbb    eax,DWORD PTR [rbp+rcx*8+0x0]
   14005103c:	add    BYTE PTR [rax],al
   14005103e:	add    BYTE PTR [rax],al
   140051040:	cmp    al,0x7
   140051042:	add    al,0x40
   140051044:	add    DWORD PTR [rax],eax
   140051046:	add    BYTE PTR [rax],al
   140051048:	sbb    eax,DWORD PTR [rbx-0x75]
   14005104b:	add    BYTE PTR [rax],al
   14005104d:	add    BYTE PTR [rax],al
   14005104f:	add    BYTE PTR [rdi+rax*1+0x4],al
   140051053:	rex add DWORD PTR [rax],eax
   140051056:	add    BYTE PTR [rax],al
   140051058:	add    BYTE PTR [rax],al
   14005105a:	inc    DWORD PTR [rax]
   14005105c:	add    BYTE PTR [rax],al
   14005105e:	add    BYTE PTR [rax],al
   140051060:	push   rax
   140051061:	(bad)  
   140051062:	add    al,0x40
   140051064:	add    DWORD PTR [rax],eax
   140051066:	add    BYTE PTR [rax],al
   140051068:	add    BYTE PTR [rax],al
   14005106a:	cmc    
   14005106b:	add    BYTE PTR [rax],al
   14005106d:	add    BYTE PTR [rax],al
   14005106f:	add    BYTE PTR [rdi+rax*1+0x4],bl
   140051073:	rex add DWORD PTR [rax],eax
   140051076:	add    BYTE PTR [rax],al
   140051078:	sub    bh,bh
   14005107a:	inc    DWORD PTR [rax]
   14005107c:	add    BYTE PTR [rax],al
   14005107e:	add    BYTE PTR [rax],al
   140051080:	push   0x1400407
   140051085:	add    BYTE PTR [rax],al
   140051087:	add    BYTE PTR [rdx],ch
   140051089:	(bad)  
   14005108a:	inc    DWORD PTR [rax]
   14005108c:	add    BYTE PTR [rax],al
   14005108e:	add    BYTE PTR [rax],al
   140051090:	jo     0x140051099
   140051092:	add    al,0x40
   140051094:	add    DWORD PTR [rax],eax
   140051096:	add    BYTE PTR [rax],al
   140051098:	sub    bh,bh
   14005109a:	out    dx,al
   14005109b:	add    BYTE PTR [rax],al
   14005109d:	add    BYTE PTR [rax],al
   14005109f:	add    BYTE PTR [rax+0x7],bh
   1400510a2:	add    al,0x40
   1400510a4:	add    DWORD PTR [rax],eax
   1400510a6:	add    BYTE PTR [rax],al
   1400510a8:	sub    bh,bh
   1400510aa:	int    0x0
   1400510ac:	add    BYTE PTR [rax],al
   1400510ae:	add    BYTE PTR [rax],al
   1400510b0:	add    BYTE PTR [rdi],0x4
   1400510b3:	rex add DWORD PTR [rax],eax
   1400510b6:	add    BYTE PTR [rax],al
   1400510b8:	sub    bh,bh
   1400510ba:	mov    eax,DWORD PTR [rax]
   1400510bc:	add    BYTE PTR [rax],al
   1400510be:	add    BYTE PTR [rax],al
   1400510c0:	mov    BYTE PTR [rdi],al
   1400510c2:	add    al,0x40
   1400510c4:	add    DWORD PTR [rax],eax
   1400510c6:	add    BYTE PTR [rax],al
   1400510c8:	cmp    al,al
   1400510ca:	int    0x0
	...
   1400510d4:	(bad)  
   1400510d5:	(bad)  
   1400510d6:	(bad)  
   1400510d7:	(bad)  
   1400510d8:	(bad)  
   1400510d9:	(bad)  
   1400510da:	(bad)  
   1400510db:	inc    DWORD PTR [rax]
	...
   140051111:	add    al,BYTE PTR [rdx]
   140051113:	add    al,BYTE PTR [rdx]
   140051115:	add    al,BYTE PTR [rdx]
   140051117:	add    al,BYTE PTR [rdx]
   140051119:	add    al,BYTE PTR [rdx]
   14005111b:	add    al,BYTE PTR [rdx]
   14005111d:	add    al,BYTE PTR [rdx]
   14005111f:	add    al,BYTE PTR [rdx]
   140051121:	add    al,BYTE PTR [rdx]
   140051123:	add    al,BYTE PTR [rdx]
   140051125:	add    al,BYTE PTR [rdx]
   140051127:	add    al,BYTE PTR [rdx]
   140051129:	add    al,BYTE PTR [rdx]
   14005112b:	add    al,BYTE PTR [rdx]
   14005112d:	add    al,BYTE PTR [rdx]
   14005112f:	add    al,BYTE PTR [rdx]
   140051131:	add    al,BYTE PTR [rdx]
   140051133:	add    al,BYTE PTR [rdx]
   140051135:	add    al,BYTE PTR [rdx]
   140051137:	add    dl,BYTE PTR [rbx]
   140051139:	adc    al,0x2
   14005113b:	add    cl,BYTE PTR [rip+0x2020202]        # 0x142071343
   140051141:	add    al,BYTE PTR [rdx]
   140051143:	add    al,BYTE PTR [rdx]
   140051145:	add    al,BYTE PTR [rdx]
   140051147:	add    al,BYTE PTR [rdx]
   140051149:	add    dl,BYTE PTR [rdx]
   14005114b:	adc    DWORD PTR [rdx],eax
   14005114d:	adc    BYTE PTR [rdx],al
   14005114f:	add    dl,BYTE PTR [rip+0x2020202]        # 0x142071357
   140051155:	add    al,BYTE PTR [rdx]
   140051157:	add    al,BYTE PTR [rdx]
   140051159:	add    al,BYTE PTR [rdx]
   14005115b:	add    al,BYTE PTR [rdx]
   14005115d:	add    al,BYTE PTR [rdx]
   14005115f:	add    al,BYTE PTR [rdx]
   140051161:	add    al,BYTE PTR [rdx]
   140051163:	add    al,BYTE PTR [rdx]
   140051165:	add    al,BYTE PTR [rdx]
   140051167:	add    al,BYTE PTR [rdx]
   140051169:	add    al,BYTE PTR [rdx]
   14005116b:	(bad)  
   14005116c:	add    cl,BYTE PTR [rdi]
   14005116e:	add    al,BYTE PTR [rdx]
   140051170:	add    al,BYTE PTR [rdx]
   140051172:	add    al,BYTE PTR [rdx]
   140051174:	add    al,BYTE PTR [rdx]
   140051176:	add    al,BYTE PTR [rdx]
   140051178:	add    al,BYTE PTR [rdx]
   14005117a:	add    al,BYTE PTR [rdx]
   14005117c:	add    al,BYTE PTR [rdx]
   14005117e:	add    al,BYTE PTR [rdx]
   140051180:	add    al,BYTE PTR [rdx]
   140051182:	add    al,BYTE PTR [rdx]
   140051184:	add    al,BYTE PTR [rdx]
   140051186:	add    al,BYTE PTR [rdx]
   140051188:	add    al,BYTE PTR [rdx]
   14005118a:	add    cl,BYTE PTR [rbx]
   14005118c:	add    cl,BYTE PTR [rdx+rax*1]
   14005118f:	add    al,BYTE PTR [rdx]
   140051191:	add    al,BYTE PTR [rdx]
   140051193:	add    al,BYTE PTR [rdx]
   140051195:	add    al,BYTE PTR [rdx]
   140051197:	add    al,BYTE PTR [rdx]
   140051199:	add    al,BYTE PTR [rdx]
   14005119b:	add    al,BYTE PTR [rdx]
   14005119d:	add    al,BYTE PTR [rdx]
   14005119f:	add    al,BYTE PTR [rdx]
   1400511a1:	add    al,BYTE PTR [rdx]
   1400511a3:	add    al,BYTE PTR [rdx]
   1400511a5:	add    al,BYTE PTR [rdx]
   1400511a7:	add    al,BYTE PTR [rdx]
   1400511a9:	add    al,BYTE PTR [rdx]
   1400511ab:	add    al,BYTE PTR [rdx]
   1400511ad:	add    al,BYTE PTR [rdx]
   1400511af:	add    al,BYTE PTR [rdx]
   1400511b1:	add    al,BYTE PTR [rdx]
   1400511b3:	add    al,BYTE PTR [rdx]
   1400511b5:	add    al,BYTE PTR [rdx]
   1400511b7:	add    al,BYTE PTR [rdx]
   1400511b9:	add    al,BYTE PTR [rdx]
   1400511bb:	add    al,BYTE PTR [rdx]
   1400511bd:	add    al,BYTE PTR [rdx]
   1400511bf:	add    al,BYTE PTR [rdx]
   1400511c1:	add    al,BYTE PTR [rdx]
   1400511c3:	add    al,BYTE PTR [rdx]
   1400511c5:	add    al,BYTE PTR [rdx]
   1400511c7:	add    al,BYTE PTR [rdx]
   1400511c9:	add    al,BYTE PTR [rdx]
   1400511cb:	add    al,BYTE PTR [rdx]
   1400511cd:	add    al,BYTE PTR [rdx]
   1400511cf:	add    al,BYTE PTR [rdx]
   1400511d1:	add    al,BYTE PTR [rdx]
   1400511d3:	add    al,BYTE PTR [rdx]
   1400511d5:	add    al,BYTE PTR [rdx]
   1400511d7:	add    al,BYTE PTR [rdx]
   1400511d9:	add    al,BYTE PTR [rdx]
   1400511db:	add    al,BYTE PTR [rdx]
   1400511dd:	add    al,BYTE PTR [rdx]
   1400511df:	add    al,BYTE PTR [rdx]
   1400511e1:	add    al,BYTE PTR [rdx]
   1400511e3:	add    al,BYTE PTR [rdx]
   1400511e5:	add    al,BYTE PTR [rdx]
   1400511e7:	add    al,BYTE PTR [rdx]
   1400511e9:	add    al,BYTE PTR [rdx]
   1400511eb:	add    al,BYTE PTR [rdx]
   1400511ed:	add    al,BYTE PTR [rdx]
   1400511ef:	add    al,BYTE PTR [rdx]
   1400511f1:	add    al,BYTE PTR [rdx]
   1400511f3:	add    al,BYTE PTR [rdx]
   1400511f5:	add    al,BYTE PTR [rdx]
   1400511f7:	add    al,BYTE PTR [rdx]
   1400511f9:	add    al,BYTE PTR [rdx]
   1400511fb:	add    al,BYTE PTR [rdx]
   1400511fd:	add    al,BYTE PTR [rdx]
   1400511ff:	add    al,BYTE PTR [rdx]
   140051201:	add    al,BYTE PTR [rdx]
   140051203:	add    al,BYTE PTR [rdx]
   140051205:	add    al,BYTE PTR [rdx]
   140051207:	add    al,BYTE PTR [rdx]
   140051209:	add    al,BYTE PTR [rdx]
   14005120b:	add    al,BYTE PTR [rdx]
   14005120d:	add    al,BYTE PTR [rdx]
   14005120f:	add    al,BYTE PTR [rcx]
   140051211:	add    eax,DWORD PTR [rax*1+0x9080706]
   140051218:	or     al,BYTE PTR [rax]
	...
   140051222:	(bad)  
   140051223:	add    BYTE PTR [rsi],dl
   140051225:	add    BYTE PTR [rsi],dl
   140051227:	add    BYTE PTR [rsi],dl
   140051229:	add    BYTE PTR [rax],bl
   14005122b:	add    BYTE PTR [rax],bl
   14005122d:	add    BYTE PTR [rax],bl
   14005122f:	add    BYTE PTR [rax],bl
   140051231:	add    BYTE PTR [rcx],bl
   140051233:	add    BYTE PTR [rcx],bl
   140051235:	add    BYTE PTR [rcx],bl
   140051237:	add    BYTE PTR [rdx],bl
   140051239:	add    BYTE PTR [rdx],bl
   14005123b:	add    BYTE PTR [rbx],bl
   14005123d:	add    BYTE PTR [rbx],bl
   14005123f:	add    BYTE PTR [rax+rax*1],bl
   140051242:	sbb    eax,0x1e001d00
   140051247:	add    BYTE PTR [rdi],bl
   140051249:	add    BYTE PTR [rax],ah
   14005124b:	add    BYTE PTR [rax],ah
   14005124d:	add    BYTE PTR [rcx],ah
   14005124f:	add    BYTE PTR [rcx],ah
   140051251:	add    BYTE PTR [rdx],ah
   140051253:	add    BYTE PTR [rdx],ah
   140051255:	add    BYTE PTR [rbx],ah
   140051257:	add    BYTE PTR [rbx],ah
   140051259:	add    BYTE PTR [rbx],ah
   14005125b:	add    BYTE PTR [rax+rax*1],ah
   14005125e:	and    al,0x0
   140051260:	and    al,0x0
   140051262:	and    al,0x0
   140051264:	and    eax,0x26002500
   140051269:	add    BYTE PTR [rdi],ah
   14005126b:	add    BYTE PTR [rax],ch
   14005126d:	add    BYTE PTR [rax],ch
   14005126f:	add    BYTE PTR [rax],ch
   140051271:	add    BYTE PTR [rax],ch
   140051273:	add    BYTE PTR [rax],ch
   140051275:	add    BYTE PTR [rcx],ch
   140051277:	add    BYTE PTR [rdx],ch
   140051279:	add    BYTE PTR [rcx],ch
   14005127b:	add    BYTE PTR [rbx],ch
   14005127d:	add    BYTE PTR [rip+0x2f002c00],ch        # 0x16f053e83
   140051283:	add    BYTE PTR [rax],dh
   140051285:	add    BYTE PTR [rsi],ch
   140051287:	add    BYTE PTR [rcx],dh
   140051289:	add    BYTE PTR [rdx],dh
   14005128b:	add    BYTE PTR [rsi],ch
   14005128d:	add    BYTE PTR [rbx],dh
   14005128f:	add    BYTE PTR [rax+rax*1],dh
   140051292:	xor    eax,DWORD PTR [rax]
   140051294:	xor    eax,DWORD PTR [rax]
   140051296:	xor    eax,0x36003300
   14005129b:	add    BYTE PTR [rdi],dh
   14005129d:	add    BYTE PTR [rsi],dh
   14005129f:	add    BYTE PTR [rsi],dh
   1400512a1:	add    BYTE PTR [rax],bh
   1400512a3:	add    BYTE PTR [rcx],bh
	...
   1400512b1:	add    BYTE PTR [rax],al
   1400512b3:	add    BYTE PTR [rsi],al
   1400512b5:	add    BYTE PTR [rcx],al
   1400512b7:	add    BYTE PTR [rax],al
   1400512b9:	add    BYTE PTR [rcx],al
   1400512bb:	add    BYTE PTR [rdx],al
   1400512bd:	add    BYTE PTR [rcx],al
   1400512bf:	add    BYTE PTR [rdx],al
   1400512c1:	add    BYTE PTR [rcx],al
   1400512c3:	add    BYTE PTR [rcx],al
   1400512c5:	add    BYTE PTR [rcx],al
   1400512c7:	add    BYTE PTR [rbx],al
   1400512c9:	add    BYTE PTR [rax],al
   1400512cb:	add    BYTE PTR [rax],al
   1400512cd:	add    BYTE PTR [rcx],al
   1400512cf:	add    BYTE PTR [rbx],al
   1400512d1:	add    BYTE PTR [rdx],al
   1400512d3:	add    BYTE PTR [rax],al
   1400512d5:	add    BYTE PTR [rcx],al
   1400512d7:	add    BYTE PTR [rbx],al
   1400512d9:	add    BYTE PTR [rcx],al
   1400512db:	add    BYTE PTR [rcx],al
   1400512dd:	add    BYTE PTR [rcx],al
   1400512df:	add    BYTE PTR [rax],al
   1400512e1:	add    BYTE PTR [rcx],al
   1400512e3:	add    BYTE PTR [rdx],al
   1400512e5:	add    BYTE PTR [rcx],al
   1400512e7:	add    BYTE PTR [rdx],al
   1400512e9:	add    BYTE PTR [rcx],al
   1400512eb:	add    BYTE PTR [rcx],al
   1400512ed:	add    BYTE PTR [rcx],al
   1400512ef:	add    BYTE PTR [rcx],al
   1400512f1:	add    BYTE PTR [rcx],al
   1400512f3:	add    BYTE PTR [rdx],al
   1400512f5:	add    BYTE PTR [rcx],al
   1400512f7:	add    BYTE PTR [rdx],al
   1400512f9:	add    BYTE PTR [rcx],al
   1400512fb:	add    BYTE PTR [rax],al
   1400512fd:	add    BYTE PTR [rcx],al
   1400512ff:	add    BYTE PTR [rcx],al
   140051301:	add    BYTE PTR [rdx],al
   140051303:	add    BYTE PTR [rdx],al
   140051305:	add    BYTE PTR [rdx],al
   140051307:	add    BYTE PTR [rax],al
   140051309:	add    BYTE PTR [rdi],al
   14005130b:	add    BYTE PTR [rdx],al
   14005130d:	add    BYTE PTR [rax],al
   14005130f:	add    BYTE PTR [rbx],al
   140051311:	add    BYTE PTR [rax],al
   140051313:	add    BYTE PTR [rax],al
   140051315:	add    BYTE PTR [rip+0x0],al        # 0x14005131b
   14005131b:	add    BYTE PTR [rip+0x200],al        # 0x140051521
   140051321:	add    BYTE PTR [rax+rax*1],al
   140051324:	add    al,BYTE PTR [rax]
   140051326:	add    BYTE PTR [rax],al
   140051328:	add    al,0x0
   14005132a:	add    al,0x0
   14005132c:	add    BYTE PTR [rax],al
   14005132e:	add    al,0x0
   140051330:	add    DWORD PTR [rax],eax
   140051332:	add    al,BYTE PTR [rax]
   140051334:	add    DWORD PTR [rax],eax
	...
   140051342:	add    eax,DWORD PTR [rax]
   140051344:	add    eax,0x700
   140051349:	add    BYTE PTR [rax],al
   14005134b:	add    BYTE PTR [rsi],al
   14005134d:	add    BYTE PTR [rax],cl
   14005134f:	add    BYTE PTR [rdx+0x0],al
   140051352:	add    DWORD PTR [rax],eax
   140051354:	add    BYTE PTR [rax],al
   140051356:	add    BYTE PTR [rax],al
   140051358:	sbb    eax,0xa000900
   14005135d:	add    BYTE PTR [rbx],cl
   14005135f:	add    BYTE PTR [rax],al
   140051361:	add    BYTE PTR [rsi],bh
   140051363:	add    BYTE PTR [rax],al
   140051365:	add    BYTE PTR [rbx],ah
   140051367:	add    BYTE PTR [rax],al
   140051369:	add    BYTE PTR [rax],al
   14005136b:	add    BYTE PTR [rcx],bl
   14005136d:	add    BYTE PTR [rbx],bl
   14005136f:	add    BYTE PTR [rax],ah
   140051371:	add    BYTE PTR [rdi],ch
   140051373:	add    BYTE PTR [rsi],ah
   140051375:	add    BYTE PTR [rsi],bl
   140051377:	add    BYTE PTR [rdi],bl
   140051379:	add    BYTE PTR [rcx],ah
   14005137b:	add    BYTE PTR [rax+0x0],al
   14005137e:	and    eax,0x4100
   140051383:	add    BYTE PTR [rip+0x2002200],cl        # 0x142053589
   140051389:	add    BYTE PTR [rdx],bl
   14005138b:	add    BYTE PTR [rax+rax*1],bl
   14005138e:	adc    al,BYTE PTR [rax]
   140051390:	add    BYTE PTR [rax],al
   140051392:	add    BYTE PTR [rax],al
   140051394:	add    BYTE PTR [rax],al
   140051396:	and    al,0x0
   140051398:	(bad)  
   140051399:	add    BYTE PTR [rax],ch
	...
   1400513a3:	add    BYTE PTR [rax],al
   1400513a5:	add    BYTE PTR [rip+0x16000e00],dl        # 0x1560521ab
   1400513ab:	add    BYTE PTR [rbx],dl
   1400513ad:	add    BYTE PTR [rax],dh
   1400513af:	add    BYTE PTR [rax],al
   1400513b1:	add    BYTE PTR [rdx],dh
   1400513b3:	add    BYTE PTR [rax],al
   1400513b5:	add    BYTE PTR [rbx],ch
   1400513b7:	add    BYTE PTR [rsi],ch
   1400513b9:	add    BYTE PTR [rdx],ch
   1400513bb:	add    BYTE PTR [rcx],ch
   1400513bd:	add    BYTE PTR [rip+0x14000000],dh        # 0x1540513c3
   1400513c3:	add    BYTE PTR [rdi],bh
   1400513c5:	add    BYTE PTR [rax],dl
   1400513c7:	add    BYTE PTR [rdi],cl
   1400513c9:	add    BYTE PTR [rip+0x37001100],cl        # 0x1770524cf
   1400513cf:	add    BYTE PTR [rdx],bh
   1400513d1:	add    BYTE PTR [rip+0x2c001200],ah        # 0x16c0525d7
   1400513d7:	add    BYTE PTR [rdx],dl
   1400513d9:	add    BYTE PTR [rip+0xc00],bh        # 0x140051fdf
   1400513df:	add    BYTE PTR [rax],al
   1400513e1:	add    BYTE PTR [rbx],dh
   1400513e3:	add    BYTE PTR [rax],al
   1400513e5:	add    BYTE PTR [rsi],dh
   1400513e7:	add    BYTE PTR [rcx],bh
   1400513e9:	add    BYTE PTR [rax+rax*1],bh
   1400513ec:	add    BYTE PTR [rax],al
   1400513ee:	add    BYTE PTR [rax],al
   1400513f0:	sub    eax,0x0
	...
   1400513fd:	add    BYTE PTR [rax],al
   1400513ff:	add    BYTE PTR [rcx+0x0],bl
   140051402:	or     al,BYTE PTR [rax]
   140051404:	add    eax,0x32001200
   140051409:	add    BYTE PTR [rbp+0x0],al
   14005140c:	and    eax,DWORD PTR [rax]
   14005140e:	add    BYTE PTR ss:[rdi],dh
   140051411:	add    BYTE PTR [rbx],dl
   140051413:	add    BYTE PTR [rax+rax*1],dh
   140051416:	adc    al,0x0
   140051418:	adc    eax,0x17001600
   14005141d:	add    BYTE PTR [rax],bl
   14005141f:	add    BYTE PTR [rcx],bl
   140051421:	add    BYTE PTR [rdx],bl
   140051423:	add    BYTE PTR [rbx],ch
   140051425:	add    BYTE PTR [rax+rax*1],ch
   140051428:	push   rdx
   140051429:	add    BYTE PTR [rip+0x27001b00],ch        # 0x167052f2f
   14005142f:	add    BYTE PTR [rax+rax*1],bl
   140051432:	sub    BYTE PTR [rax],al
   140051434:	rex.WX add BYTE PTR [rsi],bpl
   140051437:	add    BYTE PTR [rax+rax*1+0x39],cl
   14005143b:	add    BYTE PTR [rdi+0x0],cl
   14005143e:	push   rax
   14005143f:	add    BYTE PTR [rip+0x1e002100],bl        # 0x15e053545
   140051445:	add    BYTE PTR [rdi],bl
	...
   14005144f:	add    BYTE PTR [rip+0x800000],al        # 0x140851455
   140051455:	add    BYTE PTR [rax],0x80
   140051458:	xor    eax,DWORD PTR [rax]
   14005145a:	(bad)  
   14005145b:	inc    DWORD PTR [rax]
   14005145d:	add    BYTE PTR [rax],0x80
   140051460:	add    BYTE PTR [rax+0x68000],al
   140051466:	or     eax,0x800000
   14005146b:	add    BYTE PTR [rax],0x80
   14005146e:	add    BYTE PTR [rax-0x7fff0002],al
   140051474:	(bad)  
   140051475:	add    BYTE PTR [rax],al
   140051477:	or     BYTE PTR [rsi],0x0
   14005147a:	add    BYTE PTR es:[rax],al
   14005147d:	or     BYTE PTR [rbx],0x0
   140051480:	add    BYTE PTR [rax+0x90020],al
   140051486:	add    BYTE PTR [rax+0x228000],al
   14005148c:	and    eax,DWORD PTR [rax]
   14005148e:	and    al,0x0
   140051490:	add    BYTE PTR [rax-0x1fff3],al
   140051496:	add    BYTE PTR [rax-0x7fff8000],al
   14005149c:	add    BYTE PTR [rax+0x308000],al
   1400514a2:	stc    
   1400514a3:	(bad)  
   1400514a4:	(bad)  
   1400514a5:	inc    DWORD PTR [rax]
   1400514a7:	and    BYTE PTR [rip+0x30002700],0x0        # 0x170053bae
   1400514ae:	or     eax,0x2ffffe00
   1400514b3:	add    BYTE PTR [rip+0x31800000],ch        # 0x1718514b9
   1400514b9:	add    BYTE PTR [rax+rax*1],ah
   1400514bc:	(bad)  
   1400514bd:	add    BYTE PTR [rax],al
   1400514bf:	adc    BYTE PTR [rsi],0x0
   1400514c2:	add    BYTE PTR [rax-0x7fff0002],al
   1400514c8:	add    BYTE PTR [rax-0x7fff8000],al
   1400514ce:	add    BYTE PTR [rax-0x7fffffcb],al
   1400514d4:	add    BYTE PTR [rax-0x7fff8000],al
   1400514da:	(bad)  
   1400514db:	inc    DWORD PTR [rax]
   1400514dd:	xor    BYTE PTR [rdi],0x0
   1400514e0:	cmp    al,BYTE PTR [rax]
   1400514e2:	add    BYTE PTR [rax-0x7fff8000],al
   1400514e8:	add    BYTE PTR [rax-0x7fff8000],al
   1400514ee:	xor    BYTE PTR [rax],al
   1400514f0:	xor    BYTE PTR [rax],al
   1400514f2:	add    BYTE PTR [rax-0x7fffffca],al
   1400514f8:	add    BYTE PTR [rax-0x18000],al
   1400514fe:	sub    DWORD PTR [rax],eax
   140051500:	add    BYTE PTR [rax+0x450044],al
   140051506:	add    BYTE PTR [rax+0x0],al
   14005150c:	add    BYTE PTR [rax],al
   14005150e:	add    BYTE PTR [rax],al
   140051510:	add    BYTE PTR [rax-0x7fff8000],al
   140051516:	add    BYTE PTR [rax-0x7fffffff],al
   14005151c:	adc    DWORD PTR [rax],eax
   14005151e:	add    BYTE PTR [rax-0x1e003d],al
   140051524:	add    BYTE PTR [rax-0x7fff001d],al
   14005152a:	xor    al,0x0
   14005152c:	add    BYTE PTR [rax+0x108000],al
   140051532:	add    BYTE PTR [rax+0x1d8000],al
   140051538:	add    BYTE PTR [rax-0x7fffffe1],al
   14005153e:	add    BYTE PTR [rax-0x7fff8000],al
   140051544:	add    BYTE PTR [rax-0x7fff8000],al
   14005154a:	sar    edi,cl
   14005154c:	add    BYTE PTR [rax+0x148000],al
   140051552:	add    BYTE PTR [rax-0x48000],al
	...
   140051560:	or     DWORD PTR [rax],eax
   140051562:	(bad)  
   140051563:	add    BYTE PTR [rax],cl
   140051565:	add    BYTE PTR [rbx],dh
   140051567:	add    BYTE PTR [rcx],dh
   140051569:	add    ah,bh
   14005156b:	inc    DWORD PTR [rcx]
   14005156d:	add    BYTE PTR [rax],cl
   14005156f:	add    BYTE PTR [rdx],al
   140051571:	add    BYTE PTR [rbx],al
   140051573:	add    BYTE PTR [rax+rax*1],al
   140051576:	and    BYTE PTR [rax],al
   140051578:	cmp    al,BYTE PTR [rax]
   14005157a:	push   rcx
   14005157b:	add    BYTE PTR [rax+rax*1],cl
   14005157e:	push   rbx
   14005157f:	add    BYTE PTR [rip+0x40000b00],cl        # 0x180052085
   140051585:	add    BYTE PTR [rsi],cl
   140051587:	add    BYTE PTR [rdi],cl
   140051589:	add    BYTE PTR [rdx],ah
   14005158b:	add    BYTE PTR [rax],cl
   14005158d:	add    BYTE PTR [rax],dl
   14005158f:	add    BYTE PTR [rcx],dl
   140051591:	add    al,ch
   140051593:	jmp    QWORD PTR [rax+rax*1]
   140051596:	sub    DWORD PTR [rax],eax
   140051598:	add    BYTE PTR es:[rip+0x8002a00],dh        # 0x148053f9f
   14005159f:	add    BYTE PTR [rax],dl
   1400515a1:	add    BYTE PTR [rcx],dl
   1400515a3:	add    BYTE PTR [rax+rax*1+0x55],dl
   1400515a7:	add    BYTE PTR [rbx],bh
   1400515a9:	add    BYTE PTR [rax+rax*1],bh
   1400515ac:	xor    eax,DWORD PTR [rax]
   1400515ae:	or     al,0x0
   1400515b0:	iret   
   1400515b1:	dec    DWORD PTR [rip+0x41ffcc00]        # 0x18204e1b7
   1400515b7:	add    BYTE PTR [rsi],cl
   1400515b9:	add    BYTE PTR [rdi],cl
   1400515bb:	add    BYTE PTR [rdi],ch
   1400515bd:	add    BYTE PTR [rax],cl
   1400515bf:	add    BYTE PTR [rax],dl
   1400515c1:	add    BYTE PTR [rcx],dl
   1400515c3:	add    cl,ch
   1400515c5:	dec    DWORD PTR [rcx+0x0]
   1400515c8:	xor    BYTE PTR [rax],al
   1400515ca:	rex.WXB add BYTE PTR [r14],al
   1400515cd:	add    BYTE PTR [rdi],al
   1400515cf:	add    BYTE PTR [rax],bh
   1400515d1:	add    BYTE PTR [rcx],ch
   1400515d3:	add    BYTE PTR [rdx],ch
   1400515d5:	add    BYTE PTR [rdx+0x0],al
   1400515d8:	rex.XB add BYTE PTR [r8+0x0],bl
   1400515dc:	add    al,r9b
   1400515df:	push   QWORD PTR [rip+0xffffffffc5004d00]        # 0x1050562e5
   1400515e5:	call   QWORD PTR [rsi+0x0]
   1400515e8:	pop    rdx
   1400515e9:	add    BYTE PTR [rbx+0x0],bl
   1400515ec:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   1400515f0:	rex.RXB add BYTE PTR [rip+0x3d003e00],r12b        # 0x17d0553f7
   1400515f7:	add    BYTE PTR [rax+0x0],cl
	...
   140051602:	push   rdi
	...
   14005160f:	add    BYTE PTR [rip+0x9002e00],al        # 0x149054415
   140051615:	add    BYTE PTR [rdx],ah
   140051617:	add    BYTE PTR [rcx],ah
   140051619:	add    BYTE PTR [rax],al
   14005161b:	add    BYTE PTR [rcx],al
   14005161d:	add    BYTE PTR [rcx],cl
   14005161f:	add    BYTE PTR [rbx],al
   140051621:	add    BYTE PTR [rax+rax*1],al
   140051624:	add    eax,0x13001000
   140051629:	add    BYTE PTR [rdx+0x0],cl
   14005162c:	add    DWORD PTR [rax],eax
   14005162e:	rex.WR add BYTE PTR [rbx],r8b
   140051631:	add    BYTE PTR [rbx],cl
   140051633:	add    BYTE PTR [rdi],ch
   140051635:	add    BYTE PTR [rsi],al
   140051637:	add    BYTE PTR [rdi],al
   140051639:	add    BYTE PTR [rsi],cl
   14005163b:	add    BYTE PTR [rcx],cl
   14005163d:	add    BYTE PTR [rdx],cl
   14005163f:	add    BYTE PTR [rbx],cl
   140051641:	add    BYTE PTR [rax+rax*1],cl
   140051644:	or     al,0x0
   140051646:	adc    al,BYTE PTR [rax]
   140051648:	adc    DWORD PTR [rax],eax
   14005164a:	and    al,BYTE PTR [rax]
   14005164c:	adc    eax,0xa000900
   140051651:	add    BYTE PTR [rbx],cl
   140051653:	add    BYTE PTR [rdi+0x0],cl
   140051656:	push   rax
   140051657:	add    BYTE PTR [rcx],ch
   140051659:	add    BYTE PTR [rdx],ch
   14005165b:	add    BYTE PTR [rbp+0x0],al
   14005165e:	add    DWORD PTR [rax],eax
   140051660:	or     BYTE PTR [rax],al
   140051662:	add    eax,DWORD PTR [rax]
   140051664:	or     BYTE PTR [rax],al
   140051666:	xor    BYTE PTR [rax],al
   140051668:	(bad)  
   140051669:	add    BYTE PTR [rdi],al
   14005166b:	add    BYTE PTR [rbx],cl
   14005166d:	add    BYTE PTR [rcx],cl
   14005166f:	add    BYTE PTR [rdx],cl
   140051671:	add    BYTE PTR [rbx],cl
   140051673:	add    BYTE PTR [rax+rax*1],cl
   140051676:	cmp    BYTE PTR [rax],al
   140051678:	adc    BYTE PTR [rax],al
   14005167a:	cmp    al,BYTE PTR [rax]
   14005167c:	add    eax,DWORD PTR [rax]
   14005167e:	add    al,0x0
   140051680:	or     BYTE PTR [rax],al
   140051682:	adc    al,BYTE PTR [rax]
   140051684:	adc    eax,0xf000c00
   140051689:	add    BYTE PTR [rax+rax*1],dl
   14005168c:	or     eax,0x45000800
   140051691:	add    BYTE PTR [rax+rax*1],cl
   140051694:	or     BYTE PTR [rax],al
   140051696:	or     eax,0x0
   14005169b:	add    BYTE PTR [rbp+0x0],al
   14005169e:	add    BYTE PTR ss:[rax],bh
   1400516a1:	add    BYTE PTR [rip+0x2c002d00],dl        # 0x16c0543a7
   1400516a7:	add    BYTE PTR [rax],bh
   1400516a9:	add    bh,bh
   1400516ab:	(bad)  
   1400516ac:	(bad)  
   1400516ad:	(bad)  
   1400516ae:	(bad)  
   1400516af:	(bad)  
   1400516b0:	(bad)  
   1400516b1:	call   QWORD PTR [rsi+0x0]
	...
   1400516c0:	and    BYTE PTR [rax],al
   1400516c2:	add    BYTE PTR [rax],al
   1400516c4:	add    al,0x0
   1400516c6:	add    BYTE PTR [rax],al
   1400516c8:	(bad)  
   1400516c9:	(bad)  
   1400516ca:	(bad)  
   1400516cb:	inc    DWORD PTR [rax]
	...
   1400516dd:	add    BYTE PTR [rax],al
   1400516df:	add    al,dh
   1400516e1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400516e2:	add    al,BYTE PTR [rax+0x1]
	...
   1400516fd:	add    BYTE PTR [rax],al
   1400516ff:	add    BYTE PTR [rax],dl
   140051701:	add    BYTE PTR [rax],al
   140051703:	add    bh,bh
   140051705:	(bad)  
   140051706:	(bad)  
   140051707:	(bad)  
   140051708:	(bad)  
   140051709:	(bad)  
   14005170a:	(bad)  
   14005170b:	inc    DWORD PTR [rax]
	...
   14005173d:	add    BYTE PTR [rax],al
   14005173f:	add    BYTE PTR [rax],bl
   140051741:	add    BYTE PTR [rax],al
   140051743:	add    BYTE PTR [rax+rax*1],al
   140051746:	add    BYTE PTR [rax],al
   140051748:	(bad)  
   140051749:	(bad)  
   14005174a:	(bad)  
   14005174b:	inc    DWORD PTR [rax]
	...
   14005175d:	add    BYTE PTR [rax],al
   14005175f:	add    al,dh
   140051761:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140051762:	add    al,BYTE PTR [rax+0x1]
	...
   140051785:	add    BYTE PTR [rax],al
   140051787:	add    bh,bh
   140051789:	(bad)  
   14005178a:	(bad)  
   14005178b:	inc    DWORD PTR [rax]
	...
   14005179d:	add    BYTE PTR [rax],al
   14005179f:	add    BYTE PTR [rax],ah
   1400517a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400517a2:	add    al,BYTE PTR [rax+0x1]
	...
   1400517c5:	add    BYTE PTR [rax],al
   1400517c7:	add    bh,bh
   1400517c9:	(bad)  
   1400517ca:	(bad)  
   1400517cb:	inc    DWORD PTR [rax]
	...
   1400517e1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400517e2:	add    al,BYTE PTR [rax+0x1]
	...
   1400517fd:	add    BYTE PTR [rax],al
   1400517ff:	add    BYTE PTR [rax+rax*1],dl
	...
   14005183e:	add    BYTE PTR [rax],al
   140051840:	add    DWORD PTR [rax],eax
   140051842:	add    BYTE PTR [rax],al
   140051844:	add    al,BYTE PTR [rax]
   140051846:	add    BYTE PTR [rax],al
   140051848:	add    al,0x0
   14005184a:	add    BYTE PTR [rax],al
   14005184c:	or     BYTE PTR [rax],al
   14005184e:	add    BYTE PTR [rax],al
   140051850:	adc    BYTE PTR [rax],al
   140051852:	add    BYTE PTR [rax],al
   140051854:	and    BYTE PTR [rax],al
   140051856:	add    BYTE PTR [rax],al
   140051858:	add    BYTE PTR [rax],al
   14005185b:	add    BYTE PTR [rax+0x0],al
   140051861:	add    DWORD PTR [rax],eax
   140051863:	add    BYTE PTR [rax],al
   140051865:	add    al,BYTE PTR [rax]
   140051867:	add    BYTE PTR [rax],al
   140051869:	add    al,0x0
   14005186b:	add    BYTE PTR [rax],al
   14005186d:	or     BYTE PTR [rax],al
   14005186f:	add    BYTE PTR [rax],al
   140051871:	adc    BYTE PTR [rax],al
   140051873:	add    BYTE PTR [rax],al
   140051875:	and    BYTE PTR [rax],al
   140051877:	add    BYTE PTR [rax],al
   140051879:	add    BYTE PTR [rax],al
   14005187c:	add    BYTE PTR [rax+0x0],al
   140051882:	add    DWORD PTR [rax],eax
   140051884:	add    BYTE PTR [rax],al
   140051886:	add    al,BYTE PTR [rax]
   140051888:	add    BYTE PTR [rax],al
   14005188a:	add    al,0x0
   14005188c:	add    BYTE PTR [rax],al
   14005188e:	or     BYTE PTR [rax],al
   140051890:	add    BYTE PTR [rax],al
   140051892:	adc    BYTE PTR [rax],al
   140051894:	add    BYTE PTR [rax],al
   140051896:	and    BYTE PTR [rax],al
   140051898:	add    BYTE PTR [rax],al
   14005189a:	add    BYTE PTR [rax],al
   14005189d:	add    BYTE PTR [rax+0x0],al
   1400518a3:	add    DWORD PTR [rax],eax
   1400518a5:	add    BYTE PTR [rax],al
   1400518a7:	add    al,BYTE PTR [rax]
   1400518a9:	add    BYTE PTR [rax],al
   1400518ab:	add    BYTE PTR [rax],al
   1400518ad:	add    BYTE PTR [rax],al
   1400518af:	add    bh,bh
   1400518b1:	inc    DWORD PTR [rax]
   1400518b3:	add    BYTE PTR [rax+0x20],bl
   1400518b6:	add    al,0x0
   1400518b8:	(bad)  
   1400518b9:	inc    DWORD PTR [rip+0x10000]        # 0x1400618bf
   1400518bf:	add    bh,bh
   1400518c1:	inc    DWORD PTR [rsi]
   1400518c3:	add    BYTE PTR [rax+0x0],al
   1400518c6:	add    BYTE PTR [rax],al
   1400518c8:	(bad)  
   1400518c9:	inc    DWORD PTR [rdi]
   1400518cb:	add    BYTE PTR [rax],al
   1400518cd:	add    BYTE PTR [rdx],al
   1400518cf:	add    bh,bh
   1400518d1:	dec    DWORD PTR [rax]
   1400518d3:	add    BYTE PTR [rcx],al
   1400518d5:	add    BYTE PTR [rax],al
   1400518d7:	add    bh,bh
   1400518d9:	dec    DWORD PTR [rcx]
   1400518db:	add    BYTE PTR [rax],al
   1400518dd:	add    BYTE PTR [rax],0x0
   1400518e0:	(bad)  
   1400518e1:	dec    DWORD PTR [rdx]
   1400518e3:	add    BYTE PTR [rax+0x2000000],al
   1400518e9:	add    DWORD PTR [rbx],ecx
   1400518eb:	add    BYTE PTR [rax],al
   1400518ed:	add    BYTE PTR [rax],al
   1400518ef:	add    bh,bh
   1400518f1:	dec    DWORD PTR [rbx]
   1400518f3:	add    BYTE PTR [rax],cl
   1400518f5:	add    BYTE PTR [rax],al
   1400518f7:	add    bh,bh
   1400518f9:	dec    DWORD PTR [rax+rax*1]
   1400518fc:	add    BYTE PTR [rax],al
   1400518ff:	add    bh,bh
   140051901:	dec    DWORD PTR [rip+0x1000]        # 0x140052907
   140051907:	add    BYTE PTR [rip+0xe01],al        # 0x14005270e
   14005190d:	add    BYTE PTR [rax],al
   14005190f:	add    bh,bh
   140051911:	dec    DWORD PTR [rsi]
   140051913:	add    BYTE PTR [rax],al
   140051915:	add    BYTE PTR [rdx],al
   140051917:	add    bh,bh
   140051919:	dec    DWORD PTR [rdi]
   14005191b:	add    BYTE PTR [rcx],al
   14005191d:	add    BYTE PTR [rax],al
   14005191f:	add    bh,bh
   140051921:	call   QWORD PTR [rax]
   140051923:	add    BYTE PTR [rax],al
   140051925:	add    BYTE PTR [rax],0x0
   140051928:	(bad)  
   140051929:	call   QWORD PTR [rcx]
   14005192b:	add    BYTE PTR [rax+0x1000000],al
   140051931:	add    DWORD PTR [rdx],edx
   140051933:	add    BYTE PTR [rax],al
   140051935:	add    BYTE PTR [rax],al
   140051937:	add    bh,bh
   140051939:	call   QWORD PTR [rdx]
   14005193b:	add    BYTE PTR [rax],al
   14005193d:	add    BYTE PTR [rax],al
   140051940:	(bad)  
   140051941:	call   QWORD PTR [rbx]
   140051943:	add    BYTE PTR [rax],cl
   140051945:	add    BYTE PTR [rax],al
   140051947:	add    bh,bh
   140051949:	call   QWORD PTR [rax+rax*1]
   14005194c:	adc    BYTE PTR [rax],al
   14005194e:	add    BYTE PTR [rax],al
   140051950:	add    al,0x1
   140051952:	adc    eax,0x0
   140051957:	add    bh,bh
   140051959:	call   QWORD PTR [rip+0x18000000]        # 0x15805195f
   14005195f:	add    bh,bh
   140051961:	call   QWORD PTR [rdi]
   140051963:	add    BYTE PTR [rax],al
   140051965:	add    BYTE PTR [rdx],al
   140051967:	add    bh,bh
   140051969:	call   FWORD PTR [rax]
   14005196b:	add    BYTE PTR [rax],al
   14005196d:	add    DWORD PTR [rax],eax
   14005196f:	add    bh,bh
   140051971:	call   FWORD PTR [rcx]
   140051973:	add    BYTE PTR [rax+rax*1],al
   140051976:	add    BYTE PTR [rax],al
   140051978:	(bad)  
   140051979:	call   FWORD PTR [rdx]
   14005197b:	add    BYTE PTR [rax],al
   14005197d:	add    BYTE PTR [rax],cl
   14005197f:	add    BYTE PTR [rbx],al
   140051981:	add    DWORD PTR [rbx],ebx
   140051983:	add    BYTE PTR [rax],al
   140051985:	add    BYTE PTR [rax],al
   140051987:	add    bh,bh
   140051989:	call   FWORD PTR [rbx]
   14005198b:	add    BYTE PTR [rdx],al
   14005198d:	add    BYTE PTR [rax],al
   14005198f:	add    bh,bh
   140051991:	call   FWORD PTR [rax+rax*1]
   140051994:	add    BYTE PTR [rax],al
   140051997:	add    bh,bh
   140051999:	call   FWORD PTR [rip+0x2000000]        # 0x14205199f
   14005199f:	add    bh,bh
   1400519a1:	call   FWORD PTR [rsi]
   1400519a3:	add    BYTE PTR [rcx],al
   1400519a5:	add    BYTE PTR [rax],al
   1400519a7:	add    bh,bh
   1400519a9:	call   FWORD PTR [rdi]
   1400519ab:	add    BYTE PTR [rax],al
   1400519ad:	add    BYTE PTR [rax],0x0
   1400519b0:	(bad)  
   1400519b1:	jmp    QWORD PTR [rax]
   1400519b3:	add    BYTE PTR [rax+0x8000000],al
   1400519b9:	add    DWORD PTR [rcx],esp
   1400519bb:	add    BYTE PTR [rax],al
   1400519bd:	add    BYTE PTR [rax],al
   1400519bf:	add    BYTE PTR [rbx+0x0],dh
   1400519c2:	adc    eax,0x8006500
   1400519c7:	add    BYTE PTR [rdi+0x0],ah
   1400519ca:	or     al,0x0
   1400519cc:	outs   dx,BYTE PTR ds:[rsi]
   1400519cd:	add    BYTE PTR [rcx],dl
   1400519cf:	add    BYTE PTR [rax+rax*1+0x1],ah
   1400519d3:	add    BYTE PTR [rcx+0x0],ch
   1400519d6:	add    al,BYTE PTR [rax]
   1400519d8:	add    BYTE PTR [ebx],al
   1400519db:	add    BYTE PTR [rdx+0x0],dh
   1400519de:	add    al,0x0
   1400519e0:	(bad)  
   1400519e1:	add    BYTE PTR [rip+0x6007000],al        # 0x1460589e7
   1400519e7:	add    BYTE PTR [rax+0x0],ch
   1400519ea:	(bad)  
   1400519eb:	add    BYTE PTR [rax+rax*1+0x9],ah
   1400519ef:	add    BYTE PTR [rdi+0x0],ah
   1400519f2:	or     al,BYTE PTR [rax]
   1400519f4:	add    BYTE PTR gs:[rbx],cl
   1400519f7:	add    BYTE PTR [rdx+0x0],dh
   1400519fa:	or     eax,0xe006100
   1400519ff:	add    BYTE PTR [rax+0x0],dh
   140051a02:	verw   WORD PTR [rax+0x0]
   140051a06:	adc    BYTE PTR [rax],al
   140051a08:	outs   dx,DWORD PTR ds:[rsi]
   140051a09:	add    BYTE PTR [rdx],dl
   140051a0b:	add    BYTE PTR [rax+rax*1+0x13],ah
   140051a0f:	add    BYTE PTR [rbp+0x0],ah
   140051a12:	adc    al,0x0
   140051a14:	je     0x140051a16
   140051a16:	(bad)  
   140051a17:	add    BYTE PTR [rbp+0x0],dh
   140051a1a:	sbb    eax,DWORD PTR [rax]
   140051a1c:	jb     0x140051a1e
   140051a1e:	(bad)  
   140051a1f:	add    BYTE PTR [rcx+0x0],ch
   140051a22:	sbb    BYTE PTR [rax],al
   140051a24:	movsxd eax,DWORD PTR [rax]
   140051a26:	sbb    DWORD PTR [rax],eax
   140051a28:	je     0x140051a2a
   140051a2a:	sbb    al,BYTE PTR [rax]
   140051a2c:	(bad)  
   140051a2d:	add    BYTE PTR [rax+rax*1],bl
   140051a30:	add    BYTE PTR [eip+0x1e007200],bl        # 0x15e058c37
   140051a37:	add    BYTE PTR [rcx+0x0],ah
   140051a3a:	(bad)  
   140051a3b:	add    BYTE PTR [rax+0x0],dh
   140051a3e:	and    BYTE PTR [rax],al
   140051a40:	push   0x2100
   140051a45:	add    BYTE PTR [rax],al
   140051a47:	add    BYTE PTR [rax],dl
   140051a49:	adc    al,0x4
   140051a4b:	rex add DWORD PTR [rax],eax
   140051a4e:	add    BYTE PTR [rax],al
   140051a50:	sbb    BYTE PTR [rdx],0x5
   140051a53:	rex add DWORD PTR [rax],eax
   140051a56:	add    BYTE PTR [rax],al
   140051a58:	nop
   140051a59:	sbb    al,BYTE PTR [rip+0x140]        # 0x140051b9f
   140051a5f:	add    BYTE PTR [rax+0x1a],dh
   140051a62:	add    eax,0x140
   140051a67:	add    BYTE PTR [rax+0x1a],dh
   140051a6a:	add    eax,0x140
   140051a6f:	add    BYTE PTR [rax-0x36],al
   140051a72:	add    al,BYTE PTR [rax+0x1]
   140051a75:	add    BYTE PTR [rax],al
   140051a77:	add    BYTE PTR [rax+rax*1],al
   140051a7a:	add    BYTE PTR [rax],al
   140051a7c:	add    BYTE PTR [rax],al
   140051a7e:	add    BYTE PTR [rax],al
   140051a80:	rex retf 0x4002
   140051a84:	add    DWORD PTR [rax],eax
   140051a86:	add    BYTE PTR [rax],al
   140051a88:	add    al,0x0
   140051a8a:	add    BYTE PTR [rax],al
   140051a8c:	add    BYTE PTR [rax],al
   140051a8e:	add    BYTE PTR [rax],al
   140051a90:	rex retf 0x4002
   140051a94:	add    DWORD PTR [rax],eax
   140051a96:	add    BYTE PTR [rax],al
   140051a98:	or     BYTE PTR [rax],al
   140051a9a:	add    BYTE PTR [rax],al
   140051a9c:	add    BYTE PTR [rax],al
   140051a9e:	add    BYTE PTR [rax],al
   140051aa0:	jo     0x140051ab4
   140051aa2:	add    al,0x40
   140051aa4:	add    DWORD PTR [rax],eax
   140051aa6:	add    BYTE PTR [rax],al
   140051aa8:	test   BYTE PTR [rdx],dl
   140051aaa:	add    al,0x40
   140051aac:	add    DWORD PTR [rax],eax
   140051aae:	add    BYTE PTR [rax],al
   140051ab0:	mov    WORD PTR [rdx],ss
   140051ab2:	add    al,0x40
   140051ab4:	add    DWORD PTR [rax],eax
   140051ab6:	add    BYTE PTR [rax],al
   140051ab8:	cmp    BYTE PTR [rsp+rax*1],dl
   140051abb:	rex add DWORD PTR [rax],eax
   140051abe:	add    BYTE PTR [rax],al
   140051ac0:	jo     0x140051aae
   140051ac2:	add    al,BYTE PTR [rax+0x1]
   140051ac5:	add    BYTE PTR [rax],al
   140051ac7:	add    BYTE PTR [rax+0x14002dc],dl
   140051acd:	add    BYTE PTR [rax],al
   140051acf:	add    BYTE PTR [rax-0x23],ah
   140051ad2:	add    al,BYTE PTR [rax+0x1]
   140051ad5:	add    BYTE PTR [rax],al
   140051ad7:	add    BYTE PTR [rax],al
   140051ad9:	fiadd  WORD PTR [rdx]
   140051adb:	rex add DWORD PTR [rax],eax
   140051ade:	add    BYTE PTR [rax],al
   140051ae0:	and    bh,bl
   140051ae2:	add    al,BYTE PTR [rax+0x1]
   140051ae5:	add    BYTE PTR [rax],al
   140051ae7:	add    BYTE PTR [rax],dh
   140051ae9:	fild   WORD PTR [rdx]
   140051aeb:	rex add DWORD PTR [rax],eax
   140051aee:	add    BYTE PTR [rax],al
   140051af0:	add    dl,ah
   140051af2:	add    al,BYTE PTR [rax+0x1]
   140051af5:	add    BYTE PTR [rax],al
   140051af7:	add    BYTE PTR [rax+0x14002e2],al
   140051afd:	add    BYTE PTR [rax],al
   140051aff:	add    BYTE PTR [rax+0x14002e2],dh
   140051b05:	add    BYTE PTR [rax],al
   140051b07:	add    al,al
   140051b09:	loop   0x140051b0d
   140051b0b:	rex add DWORD PTR [rax],eax
   140051b0e:	add    BYTE PTR [rax],al
   140051b10:	shl    dl,1
   140051b12:	add    al,BYTE PTR [rax+0x1]
   140051b15:	add    BYTE PTR [rax],al
   140051b17:	add    al,ah
   140051b19:	loop   0x140051b1d
   140051b1b:	rex add DWORD PTR [rax],eax
   140051b1e:	add    BYTE PTR [rax],al
   140051b20:	lock loop 0x140051b25
   140051b23:	rex add DWORD PTR [rax],eax
   140051b26:	add    BYTE PTR [rax],al
   140051b28:	add    bl,ah
   140051b2a:	add    al,BYTE PTR [rax+0x1]
   140051b2d:	add    BYTE PTR [rax],al
   140051b2f:	add    BYTE PTR [rax-0x1d],ah
   140051b32:	add    al,BYTE PTR [rax+0x1]
   140051b35:	add    BYTE PTR [rax],al
   140051b37:	add    BYTE PTR [rax-0x1d],dh
   140051b3a:	add    al,BYTE PTR [rax+0x1]
   140051b3d:	add    BYTE PTR [rax],al
   140051b3f:	add    al,ah
   140051b41:	jrcxz  0x140051b45
   140051b43:	rex add DWORD PTR [rax],eax
   140051b46:	add    BYTE PTR [rax],al
   140051b48:	lock jrcxz 0x140051b4d
   140051b4b:	rex add DWORD PTR [rax],eax
   140051b4e:	add    BYTE PTR [rax],al
   140051b50:	jo     0x140051b36
   140051b52:	add    al,BYTE PTR [rax+0x1]
   140051b55:	add    BYTE PTR [rax],al
   140051b57:	add    al,al
   140051b59:	in     al,0x2
   140051b5b:	rex add DWORD PTR [rax],eax
   140051b5e:	add    BYTE PTR [rax],al
   140051b60:	movabs al,ds:0x60000000014002e6
   140051b69:	in     eax,0x2
   140051b6b:	rex add DWORD PTR [rax],eax
   140051b6e:	add    BYTE PTR [rax],al
   140051b70:	shl    ch,1
   140051b72:	add    al,BYTE PTR [rax+0x1]
   140051b75:	add    BYTE PTR [rax],al
   140051b77:	add    al,dh
   140051b79:	in     eax,0x2
   140051b7b:	rex add DWORD PTR [rax],eax
   140051b7e:	add    BYTE PTR [rax],al
   140051b80:	lock jmp 0x140065b88
   140051b86:	add    BYTE PTR [rax],al
   140051b88:	add    al,ch
   140051b8a:	add    al,BYTE PTR [rax+0x1]
   140051b8d:	add    BYTE PTR [rax],al
   140051b8f:	add    BYTE PTR [rax],ah
   140051b91:	out    0x2,eax
   140051b93:	rex add DWORD PTR [rax],eax
   140051b96:	add    BYTE PTR [rax],al
   140051b98:	adc    bl,ch
   140051b9a:	add    al,BYTE PTR [rax+0x1]
	...
   140051ba5:	add    BYTE PTR [rax],al
   140051ba7:	add    BYTE PTR [rax+0x14002eb],ah
   140051bad:	add    BYTE PTR [rax],al
   140051baf:	add    al,al
   140051bb1:	fld    QWORD PTR [rdx]
   140051bb3:	rex add DWORD PTR [rax],eax
	...
   140051bc6:	add    BYTE PTR [rax],al
   140051bc8:	add    DWORD PTR [rax],eax
   140051bca:	add    BYTE PTR [rax],al
   140051bcc:	add    BYTE PTR [rax],al
   140051bce:	add    BYTE PTR [rax],al
   140051bd0:	adc    al,0x4
   140051bd3:	rex add DWORD PTR [rax],eax
   140051bd6:	add    BYTE PTR [rax],al
   140051bd8:	rex.W adc al,0x4
   140051bdb:	rex add DWORD PTR [rax],eax
   140051bde:	add    BYTE PTR [rax],al
   140051be0:	push   rax
   140051be1:	adc    al,0x4
   140051be3:	rex add DWORD PTR [rax],eax
	...
   140051bee:	add    BYTE PTR [rax],al
   140051bf0:	mov    BYTE PTR [rsi+0x77],al
   140051bf3:	adc    BYTE PTR [rbx],bh
   140051bf5:	mov    cl,0x5b
   140051bf7:	rex sti 
   140051bf9:	add    eax,0xb6db61bb
   140051bfe:	pop    rcx
   140051bff:	rex loopne 0x140051c1c
   140051c02:	add    al,0x40
   140051c04:	add    DWORD PTR [rax],eax
   140051c06:	add    BYTE PTR [rax],al
   140051c08:	adc    eax,0x1
	...
   140051c15:	add    BYTE PTR [rax],al
   140051c17:	add    BYTE PTR [rip+0x0],al        # 0x140051c1d
	...
   140051c25:	add    BYTE PTR [rax],al
   140051c27:	add    al,dh
   140051c29:	sbb    al,BYTE PTR [rax+rax*2]
   140051c2c:	add    DWORD PTR [rax],eax
   140051c2e:	add    BYTE PTR [rax],al
   140051c30:	adc    eax,0x1
	...
   140051c3d:	add    BYTE PTR [rax],al
   140051c3f:	add    BYTE PTR [rip+0x0],al        # 0x140051c45
   140051c45:	add    BYTE PTR [rax],al
   140051c47:	add    BYTE PTR [rbx],al
	...
   140051c51:	sbb    eax,DWORD PTR [rax+rax*2]
   140051c54:	add    DWORD PTR [rax],eax
   140051c56:	add    BYTE PTR [rax],al
   140051c58:	adc    eax,0x1
	...
   140051c65:	add    BYTE PTR [rax],al
   140051c67:	add    BYTE PTR [rip+0x1000000],al        # 0x141051c6d
	...
   140051c75:	add    BYTE PTR [rax],al
   140051c77:	add    BYTE PTR [rax],dl
   140051c79:	sbb    eax,DWORD PTR [rax+rax*2]
   140051c7c:	add    DWORD PTR [rax],eax
   140051c7e:	add    BYTE PTR [rax],al
   140051c80:	adc    eax,0x1
	...
   140051c8d:	add    BYTE PTR [rax],al
   140051c8f:	add    BYTE PTR [rip+0x1000000],al        # 0x141051c95
   140051c95:	add    BYTE PTR [rax],al
   140051c97:	add    BYTE PTR [rbx],al
   140051c99:	add    BYTE PTR [rax],al
   140051c9b:	add    BYTE PTR [rax],al
   140051c9d:	add    BYTE PTR [rax],al
   140051c9f:	add    BYTE PTR [rax],ah
   140051ca1:	sbb    eax,DWORD PTR [rax+rax*2]
   140051ca4:	add    DWORD PTR [rax],eax
   140051ca6:	add    BYTE PTR [rax],al
   140051ca8:	adc    eax,0x1
	...
   140051cb5:	add    BYTE PTR [rax],al
   140051cb7:	add    BYTE PTR [rax+rax*1],al
	...
   140051cc6:	add    BYTE PTR [rax],al
   140051cc8:	xor    BYTE PTR [rbx],bl
   140051cca:	add    al,0x40
   140051ccc:	add    DWORD PTR [rax],eax
   140051cce:	add    BYTE PTR [rax],al
   140051cd0:	adc    eax,0x1
	...
   140051cdd:	add    BYTE PTR [rax],al
   140051cdf:	add    BYTE PTR [rax+rax*1],al
   140051ce2:	add    BYTE PTR [rax],al
   140051ce4:	add    BYTE PTR [rax],al
   140051ce6:	add    BYTE PTR [rax],al
   140051ce8:	add    eax,DWORD PTR [rax]
   140051cea:	add    BYTE PTR [rax],al
   140051cec:	add    BYTE PTR [rax],al
   140051cee:	add    BYTE PTR [rax],al
   140051cf0:	rex sbb eax,DWORD PTR [rax+rax*2]
   140051cf4:	add    DWORD PTR [rax],eax
   140051cf6:	add    BYTE PTR [rax],al
   140051cf8:	adc    eax,0x1
	...
   140051d05:	add    BYTE PTR [rax],al
   140051d07:	add    BYTE PTR [rax+rax*1],al
   140051d0a:	add    BYTE PTR [rax],al
   140051d0c:	add    DWORD PTR [rax],eax
	...
   140051d16:	add    BYTE PTR [rax],al
   140051d18:	pop    rax
   140051d19:	sbb    eax,DWORD PTR [rax+rax*2]
   140051d1c:	add    DWORD PTR [rax],eax
   140051d1e:	add    BYTE PTR [rax],al
   140051d20:	adc    eax,0x1
	...
   140051d2d:	add    BYTE PTR [rax],al
   140051d2f:	add    BYTE PTR [rax+rax*1],al
   140051d32:	add    BYTE PTR [rax],al
   140051d34:	add    DWORD PTR [rax],eax
   140051d36:	add    BYTE PTR [rax],al
   140051d38:	add    eax,DWORD PTR [rax]
   140051d3a:	add    BYTE PTR [rax],al
   140051d3c:	add    BYTE PTR [rax],al
   140051d3e:	add    BYTE PTR [rax],al
   140051d40:	jo     0x140051d5d
   140051d42:	add    al,0x40
   140051d44:	add    DWORD PTR [rax],eax
   140051d46:	add    BYTE PTR [rax],al
   140051d48:	adc    eax,0x1
   140051d4d:	add    BYTE PTR [rax],al
   140051d4f:	add    al,dh
   140051d51:	sbb    eax,DWORD PTR [rip+0x140]        # 0x140051e97
   140051d57:	add    BYTE PTR [rbx],al
	...
   140051d65:	add    BYTE PTR [rax],al
   140051d67:	add    BYTE PTR [rax+0x1b],bh
   140051d6a:	add    al,0x40
   140051d6c:	add    DWORD PTR [rax],eax
   140051d6e:	add    BYTE PTR [rax],al
   140051d70:	adc    eax,0x1
   140051d75:	add    BYTE PTR [rax],al
   140051d77:	add    al,dh
   140051d79:	sbb    eax,DWORD PTR [rip+0x140]        # 0x140051ebf
   140051d7f:	add    BYTE PTR [rbx],al
   140051d81:	add    BYTE PTR [rax],al
   140051d83:	add    BYTE PTR [rax],al
   140051d85:	add    BYTE PTR [rax],al
   140051d87:	add    BYTE PTR [rbx],al
   140051d89:	add    BYTE PTR [rax],al
   140051d8b:	add    BYTE PTR [rax],al
   140051d8d:	add    BYTE PTR [rax],al
   140051d8f:	add    BYTE PTR [rax+0x140041b],cl
   140051d95:	add    BYTE PTR [rax],al
   140051d97:	add    BYTE PTR [rip+0x1],dl        # 0x140051d9e
   140051d9d:	add    BYTE PTR [rax],al
   140051d9f:	add    al,dh
   140051da1:	sbb    eax,DWORD PTR [rip+0x140]        # 0x140051ee7
   140051da7:	add    BYTE PTR [rbx],al
   140051da9:	add    BYTE PTR [rax],al
   140051dab:	add    BYTE PTR [rcx],al
	...
   140051db5:	add    BYTE PTR [rax],al
   140051db7:	add    BYTE PTR [rax+0x140041b],bl
   140051dbd:	add    BYTE PTR [rax],al
   140051dbf:	add    BYTE PTR [rip+0x1],dl        # 0x140051dc6
   140051dc5:	add    BYTE PTR [rax],al
   140051dc7:	add    al,dh
   140051dc9:	sbb    eax,DWORD PTR [rip+0x140]        # 0x140051f0f
   140051dcf:	add    BYTE PTR [rbx],al
   140051dd1:	add    BYTE PTR [rax],al
   140051dd3:	add    BYTE PTR [rcx],al
   140051dd5:	add    BYTE PTR [rax],al
   140051dd7:	add    BYTE PTR [rbx],al
   140051dd9:	add    BYTE PTR [rax],al
   140051ddb:	add    BYTE PTR [rax],al
   140051ddd:	add    BYTE PTR [rax],al
   140051ddf:	add    BYTE PTR [rax+0x140041b],dh
   140051de5:	add    BYTE PTR [rax],al
   140051de7:	add    BYTE PTR [rip+0x1],dl        # 0x140051dee
	...
   140051df5:	add    BYTE PTR [rax],al
   140051df7:	add    BYTE PTR [rdi],cl
	...
   140051e05:	add    BYTE PTR [rax],al
   140051e07:	add    al,al
   140051e09:	sbb    eax,DWORD PTR [rax+rax*2]
   140051e0c:	add    DWORD PTR [rax],eax
   140051e0e:	add    BYTE PTR [rax],al
   140051e10:	adc    eax,0x1
	...
   140051e1d:	add    BYTE PTR [rax],al
   140051e1f:	add    BYTE PTR [rdi],cl
   140051e21:	add    BYTE PTR [rax],al
   140051e23:	add    BYTE PTR [rax],al
   140051e25:	add    BYTE PTR [rax],al
   140051e27:	add    BYTE PTR [rbx],al
   140051e29:	add    BYTE PTR [rax],al
   140051e2b:	add    BYTE PTR [rax],al
   140051e2d:	add    BYTE PTR [rax],al
   140051e2f:	add    al,dl
   140051e31:	sbb    eax,DWORD PTR [rax+rax*2]
   140051e34:	add    DWORD PTR [rax],eax
   140051e36:	add    BYTE PTR [rax],al
   140051e38:	adc    eax,0x1
	...
   140051e45:	add    BYTE PTR [rax],al
   140051e47:	add    BYTE PTR [rdi],cl
   140051e49:	add    BYTE PTR [rax],al
   140051e4b:	add    BYTE PTR [rcx],al
	...
   140051e55:	add    BYTE PTR [rax],al
   140051e57:	add    al,ah
   140051e59:	sbb    eax,DWORD PTR [rax+rax*2]
   140051e5c:	add    DWORD PTR [rax],eax
   140051e5e:	add    BYTE PTR [rax],al
   140051e60:	adc    eax,0x1
	...
   140051e6d:	add    BYTE PTR [rax],al
   140051e6f:	add    BYTE PTR [rdi],cl
   140051e71:	add    BYTE PTR [rax],al
   140051e73:	add    BYTE PTR [rcx],al
   140051e75:	add    BYTE PTR [rax],al
   140051e77:	add    BYTE PTR [rbx],al
   140051e79:	add    BYTE PTR [rax],al
   140051e7b:	add    BYTE PTR [rax],al
   140051e7d:	add    BYTE PTR [rax],al
   140051e7f:	add    al,bh
   140051e81:	sbb    eax,DWORD PTR [rax+rax*2]
   140051e84:	add    DWORD PTR [rax],eax
   140051e86:	add    BYTE PTR [rax],al
   140051e88:	adc    eax,0x1
   140051e8d:	add    BYTE PTR [rax],al
   140051e8f:	add    al,bh
   140051e91:	sbb    eax,DWORD PTR [rip+0x140]        # 0x140051fd7
   140051e97:	add    BYTE PTR [rax],dh
	...
   140051ea9:	sbb    al,0x4
   140051eab:	rex add DWORD PTR [rax],eax
   140051eae:	add    BYTE PTR [rax],al
   140051eb0:	adc    eax,0x1
	...
   140051ebd:	add    BYTE PTR [rax],al
   140051ebf:	add    BYTE PTR [rax],dh
	...
   140051ecd:	add    BYTE PTR [rax],al
   140051ecf:	add    BYTE PTR [rax],cl
   140051ed1:	sbb    al,0x4
   140051ed3:	rex add DWORD PTR [rax],eax
   140051ed6:	add    BYTE PTR [rax],al
   140051ed8:	add    QWORD PTR [rax],r8
	...
   140051ee7:	add    BYTE PTR [rip+0x0],ch        # 0x140051eed
	...
   140051ef5:	add    BYTE PTR [rax],al
   140051ef7:	add    BYTE PTR [rax],bl
   140051ef9:	sbb    al,0x4
   140051efb:	rex add DWORD PTR [rax],eax
   140051efe:	add    BYTE PTR [rax],al
   140051f00:	lods   eax,DWORD PTR ds:[rsi]
	...
   140051f0d:	add    BYTE PTR [rax],al
   140051f0f:	add    BYTE PTR [rip+0x0],al        # 0x140051f15
	...
   140051f1d:	add    BYTE PTR [rax],al
   140051f1f:	add    al,dl
   140051f21:	icebp  
   140051f22:	add    al,BYTE PTR [rax+0x1]
   140051f25:	add    BYTE PTR [rax],al
   140051f27:	add    al,ah
   140051f29:	icebp  
   140051f2a:	add    al,BYTE PTR [rax+0x1]
   140051f2d:	add    BYTE PTR [rax],al
   140051f2f:	add    BYTE PTR [rax-0xe],al
   140051f32:	add    al,BYTE PTR [rax+0x1]
   140051f35:	add    BYTE PTR [rax],al
   140051f37:	add    BYTE PTR [rax-0xe],dl
   140051f3a:	add    al,BYTE PTR [rax+0x1]
   140051f3d:	add    BYTE PTR [rax],al
   140051f3f:	add    BYTE PTR [rax-0xe],dh
   140051f42:	add    al,BYTE PTR [rax+0x1]
   140051f45:	add    BYTE PTR [rax],al
   140051f47:	add    BYTE PTR [rax+0x14002f2],al
   140051f4d:	add    BYTE PTR [rax],al
   140051f4f:	add    al,dh
   140051f51:	cmc    
   140051f52:	add    al,BYTE PTR [rax+0x1]
   140051f55:	add    BYTE PTR [rax],al
   140051f57:	add    BYTE PTR [rax+0x14002f6],dh
   140051f5d:	add    BYTE PTR [rax],al
   140051f5f:	add    al,al
   140051f61:	test   BYTE PTR [rdx],0x40
   140051f64:	add    DWORD PTR [rax],eax
   140051f66:	add    BYTE PTR [rax],al
   140051f68:	shl    dh,1
   140051f6a:	add    al,BYTE PTR [rax+0x1]
   140051f6d:	add    BYTE PTR [rax],al
   140051f6f:	add    al,ah
   140051f71:	test   BYTE PTR [rdx],0x40
   140051f74:	add    DWORD PTR [rax],eax
   140051f76:	add    BYTE PTR [rax],al
   140051f78:	lock test BYTE PTR [rdx],0x40
   140051f7c:	add    DWORD PTR [rax],eax
   140051f7e:	add    BYTE PTR [rax],al
   140051f80:	add    bh,dh
   140051f82:	add    al,BYTE PTR [rax+0x1]
   140051f85:	add    BYTE PTR [rax],al
   140051f87:	add    BYTE PTR [rax],dl
   140051f89:	test   DWORD PTR [rdx],0x140
   140051f8f:	add    BYTE PTR [rax],ah
   140051f91:	test   DWORD PTR [rdx],0x140
   140051f97:	add    BYTE PTR [rax],dh
   140051f99:	test   DWORD PTR [rdx],0x140
   140051f9f:	add    BYTE PTR [rax-0x9],al
   140051fa2:	add    al,BYTE PTR [rax+0x1]
   140051fa5:	add    BYTE PTR [rax],al
   140051fa7:	add    BYTE PTR [rax-0x9],dl
   140051faa:	add    al,BYTE PTR [rax+0x1]
   140051fad:	add    BYTE PTR [rax],al
   140051faf:	add    BYTE PTR [rax+0x14002f7],al
   140051fb5:	add    BYTE PTR [rax],al
   140051fb7:	add    BYTE PTR [rax+0x14002f7],dl
   140051fbd:	add    BYTE PTR [rax],al
   140051fbf:	add    BYTE PTR [rax-0x6],ah
   140051fc2:	add    al,BYTE PTR [rax+0x1]
   140051fc5:	add    BYTE PTR [rax],al
   140051fc7:	add    al,dl
   140051fc9:	test   DWORD PTR [rdx],0x140
   140051fcf:	add    al,dl
   140051fd1:	test   DWORD PTR [rdx],0x140
   140051fd7:	add    BYTE PTR [rax],al
   140051fd9:	clc    
   140051fda:	add    al,BYTE PTR [rax+0x1]
   140051fdd:	add    BYTE PTR [rax],al
   140051fdf:	add    al,al
   140051fe1:	inc    DWORD PTR [rdx]
   140051fe3:	rex add DWORD PTR [rax],eax
   140051fe6:	add    BYTE PTR [rax],al
   140051fe8:	sar    ah,1
   140051fea:	add    al,BYTE PTR [rax+0x1]
   140051fed:	add    BYTE PTR [rax],al
   140051fef:	add    al,ah
   140051ff1:	cli    
   140051ff2:	add    al,BYTE PTR [rax+0x1]
   140051ff5:	add    BYTE PTR [rax],al
   140051ff7:	add    al,ah
   140051ff9:	add    BYTE PTR [rbx],al
   140051ffb:	rex add DWORD PTR [rax],eax
	...
   140052006:	add    BYTE PTR [rax],al
   140052008:	rol    BYTE PTR [rdx],1
   14005200a:	add    eax,DWORD PTR [rax+0x1]
	...
   140052025:	add    BYTE PTR [rax],al
   140052027:	add    BYTE PTR [rcx],al
   140052029:	add    BYTE PTR [rax],al
   14005202b:	add    BYTE PTR [rax],al
   14005202d:	add    BYTE PTR [rax],al
   14005202f:	add    BYTE PTR [rax],bl
   140052031:	(bad)  
   140052032:	add    eax,DWORD PTR [rax+0x1]
   140052035:	add    BYTE PTR [rax],al
   140052037:	add    BYTE PTR [rax],bl
   140052039:	(bad)  
   14005203a:	add    eax,DWORD PTR [rax+0x1]
   14005203d:	add    BYTE PTR [rax],al
   14005203f:	add    BYTE PTR [rax],ah
   140052041:	sbb    al,0x4
   140052043:	rex add DWORD PTR [rax],eax
   140052046:	add    BYTE PTR [rax],al
   140052048:	sub    al,0x1c
   14005204a:	add    al,0x40
   14005204c:	add    DWORD PTR [rax],eax
   14005204e:	add    BYTE PTR [rax],al
   140052050:	xor    al,0x1c
   140052052:	add    al,0x40
   140052054:	add    DWORD PTR [rax],eax
   140052056:	add    BYTE PTR [rax],al
   140052058:	cmp    BYTE PTR [rsp+rax*1],bl
   14005205b:	rex add DWORD PTR [rax],eax
   14005205e:	add    BYTE PTR [rax],al
   140052060:	adc    eax,0x1000001
   140052065:	add    BYTE PTR [rax],al
   140052067:	add    BYTE PTR [rip+0x0],al        # 0x14005206d
	...
   14005207d:	add    BYTE PTR [rax+rax*2],ch
   140052080:	adc    eax,0x1000001
   140052085:	add    BYTE PTR [rax],al
   140052087:	add    BYTE PTR [rip+0x0],al        # 0x14005208d
	...
   14005209d:	add    BYTE PTR [rax],ah
   14005209f:	rex (bad) 
   1400520a1:	(bad)  
   1400520a2:	inc    DWORD PTR [rax]
	...
   1400520b0:	hlt    
   1400520b1:	in     al,0x3
   1400520b3:	rex add DWORD PTR [rax],eax
   1400520b6:	add    BYTE PTR [rax],al
   1400520b8:	rex.R (bad) 
   1400520ba:	add    al,0x40
   1400520bc:	add    DWORD PTR [rax],eax
   1400520be:	add    BYTE PTR [rax],al
   1400520c0:	push   rax
   1400520c1:	add    al,BYTE PTR [rax+rax*2]
   1400520c4:	add    DWORD PTR [rax],eax
   1400520c6:	add    BYTE PTR [rax],al
   1400520c8:	js     0x1400520be
   1400520ca:	add    eax,DWORD PTR [rax+0x1]
   1400520cd:	add    BYTE PTR [rax],al
   1400520cf:	add    BYTE PTR [rax+0x1400408],dh
   1400520d5:	add    BYTE PTR [rax],al
   1400520d7:	add    al,ah
   1400520d9:	or     al,BYTE PTR [rax+rax*2]
   1400520dc:	add    DWORD PTR [rax],eax
   1400520de:	add    BYTE PTR [rax],al
   1400520e0:	lock cld 
   1400520e2:	add    eax,DWORD PTR [rax+0x1]
   1400520e5:	add    BYTE PTR [rax],al
   1400520e7:	add    BYTE PTR [rdi+rax*1+0x4],bl
   1400520eb:	rex add DWORD PTR [rax],eax
   1400520ee:	add    BYTE PTR [rax],al
   1400520f0:	nop
   1400520f1:	out    0x3,al
   1400520f3:	rex add DWORD PTR [rax],eax
   1400520f6:	add    BYTE PTR [rax],al
   1400520f8:	clc    
   1400520f9:	(bad)  
   1400520fa:	add    al,0x40
   1400520fc:	add    DWORD PTR [rax],eax
   1400520fe:	add    BYTE PTR [rax],al
   140052100:	in     al,dx
   140052101:	add    DWORD PTR [rax+rax*2],eax
   140052104:	add    DWORD PTR [rax],eax
   140052106:	add    BYTE PTR [rax],al
   140052108:	mov    esp,0x1400401
   14005210d:	add    BYTE PTR [rax],al
   14005210f:	add    ah,al
   140052111:	add    DWORD PTR [rax+rax*2],eax
   140052114:	add    DWORD PTR [rax],eax
   140052116:	add    BYTE PTR [rax],al
   140052118:	fdivr  st,st(5)
   14005211a:	add    eax,DWORD PTR [rax+0x1]
   14005211d:	add    BYTE PTR [rax],al
   14005211f:	add    BYTE PTR [rsp+rsi*8+0x14003],ch
   140052126:	add    BYTE PTR [rax],al
   140052128:	call   0x141452511
   14005212d:	add    BYTE PTR [rax],al
   14005212f:	add    BYTE PTR [rax+0x14003fb],bh
   140052135:	add    BYTE PTR [rax],al
   140052137:	add    BYTE PTR [rax],dh
   140052139:	cli    
   14005213a:	add    eax,DWORD PTR [rax+0x1]
   14005213d:	add    BYTE PTR [rax],al
   14005213f:	add    BYTE PTR [rax+0x1400407],cl
	...
   14005214d:	add    BYTE PTR [rax],al
   14005214f:	add    BYTE PTR [rcx],al
	...
   14005215d:	add    BYTE PTR [rax],al
   14005215f:	add    BYTE PTR [rax+0x22],dl
   140052162:	add    eax,DWORD PTR [rax+0x1]
   140052165:	add    BYTE PTR [rax],al
   140052167:	add    BYTE PTR [rax+0x22],ah
   14005216a:	add    eax,DWORD PTR [rax+0x1]
   14005216d:	add    BYTE PTR [rax],al
   14005216f:	add    al,dh
   140052171:	adc    eax,0x14003
   140052176:	add    BYTE PTR [rax],al
   140052178:	adc    BYTE PTR [rsi],dl
   14005217a:	add    eax,DWORD PTR [rax+0x1]
   14005217d:	add    BYTE PTR [rax],al
   14005217f:	add    BYTE PTR [rax],al
   140052181:	(bad)  
   140052182:	add    eax,DWORD PTR [rax+0x1]
   140052185:	add    BYTE PTR [rax],al
   140052187:	add    BYTE PTR [rax],dl
   140052189:	(bad)  
   14005218a:	add    eax,DWORD PTR [rax+0x1]
   14005218d:	add    BYTE PTR [rax],al
   14005218f:	add    BYTE PTR [rax+0x17],dl
   140052192:	add    eax,DWORD PTR [rax+0x1]
   140052195:	add    BYTE PTR [rax],al
   140052197:	add    BYTE PTR [rax+0x17],ah
   14005219a:	add    eax,DWORD PTR [rax+0x1]
   14005219d:	add    BYTE PTR [rax],al
   14005219f:	add    BYTE PTR [rax+0x17],dh
   1400521a2:	add    eax,DWORD PTR [rax+0x1]
   1400521a5:	add    BYTE PTR [rax],al
   1400521a7:	add    BYTE PTR [rax+0x1400317],al
   1400521ad:	add    BYTE PTR [rax],al
   1400521af:	add    BYTE PTR [rax+0x1400317],dl
   1400521b5:	add    BYTE PTR [rax],al
   1400521b7:	add    BYTE PTR [rax+0x1400317],ah
   1400521bd:	add    BYTE PTR [rax],al
   1400521bf:	add    BYTE PTR [rax+0x1400317],dh
   1400521c5:	add    BYTE PTR [rax],al
   1400521c7:	add    al,al
   1400521c9:	(bad)  
   1400521ca:	add    eax,DWORD PTR [rax+0x1]
   1400521cd:	add    BYTE PTR [rax],al
   1400521cf:	add    BYTE PTR [rax],ah
   1400521d1:	sbb    BYTE PTR [rbx],al
   1400521d3:	rex add DWORD PTR [rax],eax
   1400521d6:	add    BYTE PTR [rax],al
   1400521d8:	xor    BYTE PTR [rax],bl
   1400521da:	add    eax,DWORD PTR [rax+0x1]
   1400521dd:	add    BYTE PTR [rax],al
   1400521df:	add    BYTE PTR [rax+0x1400318],ah
   1400521e5:	add    BYTE PTR [rax],al
   1400521e7:	add    BYTE PTR [rax+0x1400318],dh
   1400521ed:	add    BYTE PTR [rax],al
   1400521ef:	add    BYTE PTR [rax],ah
   1400521f1:	sbb    DWORD PTR [rbx],eax
   1400521f3:	rex add DWORD PTR [rax],eax
   1400521f6:	add    BYTE PTR [rax],al
   1400521f8:	xor    BYTE PTR [rdx],bl
   1400521fa:	add    eax,DWORD PTR [rax+0x1]
   1400521fd:	add    BYTE PTR [rax],al
   1400521ff:	add    BYTE PTR [rax],al
   140052201:	(bad)  
   140052202:	add    eax,DWORD PTR [rax+0x1]
   140052205:	add    BYTE PTR [rax],al
   140052207:	add    BYTE PTR [rax+0x1b],al
   14005220a:	add    eax,DWORD PTR [rax+0x1]
   14005220d:	add    BYTE PTR [rax],al
   14005220f:	add    BYTE PTR [rax+0x1b],al
   140052212:	add    eax,DWORD PTR [rax+0x1]
   140052215:	add    BYTE PTR [rax],al
   140052217:	add    BYTE PTR [rax],ah
   140052219:	sbb    al,0x3
   14005221b:	rex add DWORD PTR [rax],eax
   14005221e:	add    BYTE PTR [rax],al
   140052220:	and    BYTE PTR [rax],ah
   140052222:	add    eax,DWORD PTR [rax+0x1]
   140052225:	add    BYTE PTR [rax],al
   140052227:	add    al,al
   140052229:	(bad)  
   14005222a:	add    eax,DWORD PTR [rax+0x1]
   14005222d:	add    BYTE PTR [rax],al
   14005222f:	add    BYTE PTR [rax+0x1f],dh
   140052232:	add    eax,DWORD PTR [rax+0x1]
   140052235:	add    BYTE PTR [rax],al
   140052237:	add    BYTE PTR [rax+0x21],ah
   14005223a:	add    eax,DWORD PTR [rax+0x1]
	...
   140052245:	add    BYTE PTR [rax],al
   140052247:	add    BYTE PTR [rax+0x1400321],dh
	...
   140052265:	add    BYTE PTR [rax],al
   140052267:	add    BYTE PTR [rcx],al
   140052269:	add    BYTE PTR [rax],al
   14005226b:	add    BYTE PTR [rax],al
   14005226d:	add    BYTE PTR [rax],al
   14005226f:	add    BYTE PTR [rax+0x140041f],al
   140052275:	add    BYTE PTR [rax],al
   140052277:	add    BYTE PTR [rax+0x140041f],dl
   14005227d:	add    BYTE PTR [rax],al
   14005227f:	add    ah,dh
   140052281:	in     al,0x3
   140052283:	rex add DWORD PTR [rax],eax
   140052286:	add    BYTE PTR [rax],al
   140052288:	rex.R (bad) 
   14005228a:	add    al,0x40
   14005228c:	add    DWORD PTR [rax],eax
   14005228e:	add    BYTE PTR [rax],al
   140052290:	push   rax
   140052291:	add    al,BYTE PTR [rax+rax*2]
   140052294:	add    DWORD PTR [rax],eax
   140052296:	add    BYTE PTR [rax],al
   140052298:	js     0x14005228e
   14005229a:	add    eax,DWORD PTR [rax+0x1]
   14005229d:	add    BYTE PTR [rax],al
   14005229f:	add    BYTE PTR [rax+0x1400408],dh
   1400522a5:	add    BYTE PTR [rax],al
   1400522a7:	add    al,ah
   1400522a9:	or     al,BYTE PTR [rax+rax*2]
   1400522ac:	add    DWORD PTR [rax],eax
   1400522ae:	add    BYTE PTR [rax],al
   1400522b0:	lock cld 
   1400522b2:	add    eax,DWORD PTR [rax+0x1]
   1400522b5:	add    BYTE PTR [rax],al
   1400522b7:	add    BYTE PTR [rdi+rax*1+0x4],bl
   1400522bb:	rex add DWORD PTR [rax],eax
   1400522be:	add    BYTE PTR [rax],al
   1400522c0:	nop
   1400522c1:	out    0x3,al
   1400522c3:	rex add DWORD PTR [rax],eax
   1400522c6:	add    BYTE PTR [rax],al
   1400522c8:	clc    
   1400522c9:	(bad)  
   1400522ca:	add    al,0x40
   1400522cc:	add    DWORD PTR [rax],eax
   1400522ce:	add    BYTE PTR [rax],al
   1400522d0:	in     al,dx
   1400522d1:	add    DWORD PTR [rax+rax*2],eax
   1400522d4:	add    DWORD PTR [rax],eax
   1400522d6:	add    BYTE PTR [rax],al
   1400522d8:	mov    esp,0x1400401
   1400522dd:	add    BYTE PTR [rax],al
   1400522df:	add    ah,al
   1400522e1:	add    DWORD PTR [rax+rax*2],eax
   1400522e4:	add    DWORD PTR [rax],eax
   1400522e6:	add    BYTE PTR [rax],al
   1400522e8:	fdivr  st,st(5)
   1400522ea:	add    eax,DWORD PTR [rax+0x1]
   1400522ed:	add    BYTE PTR [rax],al
   1400522ef:	add    BYTE PTR [rsp+rsi*8+0x14003],ch
   1400522f6:	add    BYTE PTR [rax],al
   1400522f8:	call   0x1414526e1
   1400522fd:	add    BYTE PTR [rax],al
   1400522ff:	add    BYTE PTR [rax+0x14003fb],bh
   140052305:	add    BYTE PTR [rax],al
   140052307:	add    BYTE PTR [rax],dh
   140052309:	cli    
   14005230a:	add    eax,DWORD PTR [rax+0x1]
   14005230d:	add    BYTE PTR [rax],al
   14005230f:	add    BYTE PTR [rax+0x1400407],cl
	...
   14005231d:	add    BYTE PTR [rax],al
   14005231f:	add    BYTE PTR [rax+0x40],dh
   140052322:	add    eax,DWORD PTR [rax+0x1]
   140052325:	add    BYTE PTR [rax],al
   140052327:	add    BYTE PTR [rax+0x1400340],al
   14005232d:	add    BYTE PTR [rax],al
   14005232f:	add    BYTE PTR [rax+0x41],ah
   140052332:	add    eax,DWORD PTR [rax+0x1]
   140052335:	add    BYTE PTR [rax],al
   140052337:	add    BYTE PTR [rax+0x41],dh
   14005233a:	add    eax,DWORD PTR [rax+0x1]
   14005233d:	add    BYTE PTR [rax],al
   14005233f:	add    BYTE PTR [rax+0x1400341],ah
   140052345:	add    BYTE PTR [rax],al
   140052347:	add    al,al
   140052349:	add    eax,DWORD PTR [r8+0x1]
   14005234d:	add    BYTE PTR [rax],al
   14005234f:	add    BYTE PTR [rax+0x32],dh
   140052352:	add    eax,DWORD PTR [rax+0x1]
   140052355:	add    BYTE PTR [rax],al
   140052357:	add    al,dl
   140052359:	xor    al,BYTE PTR [rbx]
   14005235b:	rex add DWORD PTR [rax],eax
   14005235e:	add    BYTE PTR [rax],al
   140052360:	loopne 0x140052394
   140052362:	add    eax,DWORD PTR [rax+0x1]
   140052365:	add    BYTE PTR [rax],al
   140052367:	add    al,dh
   140052369:	xor    al,BYTE PTR [rbx]
   14005236b:	rex add DWORD PTR [rax],eax
   14005236e:	add    BYTE PTR [rax],al
   140052370:	add    BYTE PTR [rbx],dh
   140052372:	add    eax,DWORD PTR [rax+0x1]
   140052375:	add    BYTE PTR [rax],al
   140052377:	add    BYTE PTR [rax],dl
   140052379:	xor    eax,DWORD PTR [rbx]
   14005237b:	rex add DWORD PTR [rax],eax
   14005237e:	add    BYTE PTR [rax],al
   140052380:	and    BYTE PTR [rbx],dh
   140052382:	add    eax,DWORD PTR [rax+0x1]
   140052385:	add    BYTE PTR [rax],al
   140052387:	add    BYTE PTR [rax],dh
   140052389:	xor    eax,DWORD PTR [rbx]
   14005238b:	rex add DWORD PTR [rax],eax
   14005238e:	add    BYTE PTR [rax],al
   140052390:	push   rax
   140052391:	xor    eax,DWORD PTR [rbx]
   140052393:	rex add DWORD PTR [rax],eax
   140052396:	add    BYTE PTR [rax],al
   140052398:	(bad)  
   140052399:	xor    eax,DWORD PTR [rbx]
   14005239b:	rex add DWORD PTR [rax],eax
   14005239e:	add    BYTE PTR [rax],al
   1400523a0:	movabs al,ds:0xb000000001400333
   1400523a9:	xor    eax,DWORD PTR [rbx]
   1400523ab:	rex add DWORD PTR [rax],eax
   1400523ae:	add    BYTE PTR [rax],al
   1400523b0:	push   rax
   1400523b1:	xor    al,0x3
   1400523b3:	rex add DWORD PTR [rax],eax
   1400523b6:	add    BYTE PTR [rax],al
   1400523b8:	movabs al,ds:0x8000000001400335
   1400523c1:	add    eax,DWORD PTR ss:[rax+0x1]
   1400523c5:	add    BYTE PTR [rax],al
   1400523c7:	add    BYTE PTR [rax+0x38],dl
   1400523ca:	add    eax,DWORD PTR [rax+0x1]
   1400523cd:	add    BYTE PTR [rax],al
   1400523cf:	add    BYTE PTR [rax+0x38],dl
   1400523d2:	add    eax,DWORD PTR [rax+0x1]
   1400523d5:	add    BYTE PTR [rax],al
   1400523d7:	add    BYTE PTR [rax+0x1400338],ah
   1400523dd:	add    BYTE PTR [rax],al
   1400523df:	add    BYTE PTR [rax],al
   1400523e1:	cmp    al,BYTE PTR [rbx]
   1400523e3:	rex add DWORD PTR [rax],eax
   1400523e6:	add    BYTE PTR [rax],al
   1400523e8:	sar    BYTE PTR [rdx],1
   1400523ea:	add    eax,DWORD PTR [rax+0x1]
   1400523ed:	add    BYTE PTR [rax],al
   1400523ef:	add    BYTE PTR [rax+0x3d],ah
   1400523f2:	add    eax,DWORD PTR [rax+0x1]
   1400523f5:	add    BYTE PTR [rax],al
   1400523f7:	add    al,ah
   1400523f9:	cmp    al,0x3
   1400523fb:	rex add DWORD PTR [rax],eax
	...
   140052406:	add    BYTE PTR [rax],al
   140052408:	lock cmp al,0x3
   14005240b:	rex add DWORD PTR [rax],eax
   14005240e:	add    BYTE PTR [rax],al
   140052410:	xor    BYTE PTR [rax+0x3],al
   140052413:	rex add DWORD PTR [rax],eax
	...
   140052426:	add    BYTE PTR [rax],al
   140052428:	or     al,BYTE PTR [rax]
   14005242a:	add    BYTE PTR [rax],al
   14005242c:	add    DWORD PTR [rax],eax
   14005242e:	add    BYTE PTR [rax],al
   140052430:	mov    ah,0x29
   140052432:	add    al,0x40
   140052434:	add    DWORD PTR [rax],eax
   140052436:	add    BYTE PTR [rax],al
   140052438:	outs   dx,DWORD PTR fs:[rsi]
   14005243a:	je     0x14005245c
   14005243c:	jo     0x1400524a7
   14005243e:	movsxd esp,DWORD PTR [rdi+0x65]
   140052441:	outs   dx,BYTE PTR ds:[rsi]
   140052442:	cmp    ah,BYTE PTR [rax]
	...
   140052450:	rex.B
   140052451:	rex.X add BYTE PTR [rax],al
   140052454:	add    BYTE PTR [rax],al
   140052456:	add    BYTE PTR [rax],al
   140052458:	shr    BYTE PTR [rcx],0x4
   14005245b:	rex add DWORD PTR [rax],eax
   14005245e:	add    BYTE PTR [rax],al
   140052460:	rex.B
   140052461:	rex.WB add BYTE PTR [r8],al
   140052464:	add    BYTE PTR [rax],al
   140052466:	add    BYTE PTR [rax],al
   140052468:	shr    BYTE PTR [rcx],1
   14005246a:	add    al,0x40
   14005246c:	add    DWORD PTR [rax],eax
   14005246e:	add    BYTE PTR [rax],al
   140052470:	push   r10
   140052472:	add    BYTE PTR [rax],al
   140052474:	add    BYTE PTR [rax],al
   140052476:	add    BYTE PTR [rax],al
   140052478:	call   0x1414528a6
   14005247d:	add    BYTE PTR [rax],al
   14005247f:	add    BYTE PTR [rcx+0x58],al
   140052482:	add    BYTE PTR [rax],al
   140052484:	add    BYTE PTR [rax],al
   140052486:	add    BYTE PTR [rax],al
   140052488:	clc    
   140052489:	sub    DWORD PTR [rax+rax*2],eax
   14005248c:	add    DWORD PTR [rax],eax
   14005248e:	add    BYTE PTR [rax],al
   140052490:	rex.X and BYTE PTR [rax],al
   140052493:	add    BYTE PTR [rax],al
   140052495:	add    BYTE PTR [rax],al
   140052497:	add    BYTE PTR [rax],dl
   140052499:	sub    al,BYTE PTR [rax+rax*2]
   14005249c:	add    DWORD PTR [rax],eax
   14005249e:	add    BYTE PTR [rax],al
   1400524a0:	rex.X
   1400524a1:	rex.WB add BYTE PTR [r8],al
   1400524a4:	add    BYTE PTR [rax],al
   1400524a6:	add    BYTE PTR [rax],al
   1400524a8:	and    BYTE PTR [rdx],ch
   1400524aa:	add    al,0x40
   1400524ac:	add    DWORD PTR [rax],eax
   1400524ae:	add    BYTE PTR [rax],al
   1400524b0:	rex.XB
   1400524b1:	rex.X add BYTE PTR [rax],al
   1400524b4:	add    BYTE PTR [rax],al
   1400524b6:	add    BYTE PTR [rax],al
   1400524b8:	cmp    BYTE PTR [rdx],ch
   1400524ba:	add    al,0x40
   1400524bc:	add    DWORD PTR [rax],eax
   1400524be:	add    BYTE PTR [rax],al
   1400524c0:	rex.XB
   1400524c1:	rex.WRXB add BYTE PTR [r8],r8b
   1400524c4:	add    BYTE PTR [rax],al
   1400524c6:	add    BYTE PTR [rax],al
   1400524c8:	rex.W sub al,BYTE PTR [rax+rax*2]
   1400524cc:	add    DWORD PTR [rax],eax
   1400524ce:	add    BYTE PTR [rax],al
   1400524d0:	rex.XB pop r8
   1400524d2:	add    BYTE PTR [rax],al
   1400524d4:	add    BYTE PTR [rax],al
   1400524d6:	add    BYTE PTR [rax],al
   1400524d8:	push   rax
   1400524d9:	sub    al,BYTE PTR [rax+rax*2]
   1400524dc:	add    DWORD PTR [rax],eax
   1400524de:	add    BYTE PTR [rax],al
   1400524e0:	rex.W and BYTE PTR [rax],al
   1400524e3:	add    BYTE PTR [rax],al
   1400524e5:	add    BYTE PTR [rax],al
   1400524e7:	add    BYTE PTR [rax+0x2a],ch
   1400524ea:	add    al,0x40
   1400524ec:	add    DWORD PTR [rax],eax
   1400524ee:	add    BYTE PTR [rax],al
   1400524f0:	rex.W
   1400524f1:	rex.X add BYTE PTR [rax],al
   1400524f4:	add    BYTE PTR [rax],al
   1400524f6:	add    BYTE PTR [rax],al
   1400524f8:	js     0x140052524
   1400524fa:	add    al,0x40
   1400524fc:	add    DWORD PTR [rax],eax
   1400524fe:	add    BYTE PTR [rax],al
   140052500:	rex.W
   140052501:	rex.WB add BYTE PTR [r8],al
   140052504:	add    BYTE PTR [rax],al
   140052506:	add    BYTE PTR [rax],al
   140052508:	mov    BYTE PTR [rdx],ch
   14005250a:	add    al,0x40
   14005250c:	add    DWORD PTR [rax],eax
   14005250e:	add    BYTE PTR [rax],al
   140052510:	rex.W pop rax
   140052512:	add    BYTE PTR [rax],al
   140052514:	add    BYTE PTR [rax],al
   140052516:	add    BYTE PTR [rax],al
   140052518:	movabs al,ds:0x480000000140042a
   140052521:	(bad)  
   140052522:	add    BYTE PTR [rax],al
   140052524:	add    BYTE PTR [rax],al
   140052526:	add    BYTE PTR [rax],al
   140052528:	mov    eax,0x140042a
   14005252d:	add    BYTE PTR [rax],al
   14005252f:	add    BYTE PTR [rax+0x69],cl
   140052532:	add    BYTE PTR [rax],al
   140052534:	add    BYTE PTR [rax],al
   140052536:	add    BYTE PTR [rax],al
   140052538:	shr    BYTE PTR [rdx],1
   14005253a:	add    al,0x40
   14005253c:	add    DWORD PTR [rax],eax
   14005253e:	add    BYTE PTR [rax],al
   140052540:	rex.W jb 0x140052543
   140052543:	add    BYTE PTR [rax],al
   140052545:	add    BYTE PTR [rax],al
   140052547:	add    al,dh
   140052549:	sub    al,BYTE PTR [rax+rax*2]
   14005254c:	add    DWORD PTR [rax],eax
   14005254e:	add    BYTE PTR [rax],al
   140052550:	rex.W js 0x140052553
   140052553:	add    BYTE PTR [rax],al
   140052555:	add    BYTE PTR [rax],al
   140052557:	add    BYTE PTR [rax],cl
   140052559:	sub    eax,DWORD PTR [rax+rax*2]
   14005255c:	add    DWORD PTR [rax],eax
   14005255e:	add    BYTE PTR [rax],al
   140052560:	rex.WB and BYTE PTR [r8],al
   140052563:	add    BYTE PTR [rax],al
   140052565:	add    BYTE PTR [rax],al
   140052567:	add    BYTE PTR [rax],ch
   140052569:	sub    eax,DWORD PTR [rax+rax*2]
   14005256c:	add    DWORD PTR [rax],eax
   14005256e:	add    BYTE PTR [rax],al
   140052570:	rex.WXB
   140052571:	rex.X add BYTE PTR [rax],al
   140052574:	add    BYTE PTR [rax],al
   140052576:	add    BYTE PTR [rax],al
   140052578:	cmp    BYTE PTR [rbx],ch
   14005257a:	add    al,0x40
   14005257c:	add    DWORD PTR [rax],eax
   14005257e:	add    BYTE PTR [rax],al
   140052580:	rex.WXB
   140052581:	rex.WB add BYTE PTR [r8],al
   140052584:	add    BYTE PTR [rax],al
   140052586:	add    BYTE PTR [rax],al
   140052588:	sub    rax,QWORD PTR [rax+rax*2]
   14005258c:	add    DWORD PTR [rax],eax
   14005258e:	add    BYTE PTR [rax],al
   140052590:	rex.WXB push r10
   140052592:	add    BYTE PTR [rax],al
   140052594:	add    BYTE PTR [rax],al
   140052596:	add    BYTE PTR [rax],al
   140052598:	(bad)  
   140052599:	sub    eax,DWORD PTR [rax+rax*2]
   14005259c:	add    DWORD PTR [rax],eax
   14005259e:	add    BYTE PTR [rax],al
   1400525a0:	rex.WXB pop r8
   1400525a2:	add    BYTE PTR [rax],al
   1400525a4:	add    BYTE PTR [rax],al
   1400525a6:	add    BYTE PTR [rax],al
   1400525a8:	jo     0x1400525d5
   1400525aa:	add    al,0x40
   1400525ac:	add    DWORD PTR [rax],eax
   1400525ae:	add    BYTE PTR [rax],al
   1400525b0:	rex.WRX
   1400525b1:	rex.X add BYTE PTR [rax],al
   1400525b4:	add    BYTE PTR [rax],al
   1400525b6:	add    BYTE PTR [rax],al
   1400525b8:	mov    BYTE PTR [rbx],ch
   1400525ba:	add    al,0x40
   1400525bc:	add    DWORD PTR [rax],eax
   1400525be:	add    BYTE PTR [rax],al
   1400525c0:	rex.WRX
   1400525c1:	rex.WB add BYTE PTR [r8],al
   1400525c4:	add    BYTE PTR [rax],al
   1400525c6:	add    BYTE PTR [rax],al
   1400525c8:	movabs al,ds:0x4e0000000140042b
   1400525d1:	push   rdx
   1400525d2:	add    BYTE PTR [rax],al
   1400525d4:	add    BYTE PTR [rax],al
   1400525d6:	add    BYTE PTR [rax],al
   1400525d8:	mov    eax,0x140042b
   1400525dd:	add    BYTE PTR [rax],al
   1400525df:	add    BYTE PTR [rsi+0x58],cl
   1400525e2:	add    BYTE PTR [rax],al
   1400525e4:	add    BYTE PTR [rax],al
   1400525e6:	add    BYTE PTR [rax],al
   1400525e8:	shr    BYTE PTR [rbx],1
   1400525ea:	add    al,0x40
   1400525ec:	add    DWORD PTR [rax],eax
   1400525ee:	add    BYTE PTR [rax],al
   1400525f0:	push   rax
   1400525f1:	add    BYTE PTR [r8],al
   1400525f4:	add    BYTE PTR [rax],al
   1400525f6:	add    BYTE PTR [rax],al
   1400525f8:	lock sub eax,DWORD PTR [rax+rax*2]
   1400525fc:	add    DWORD PTR [rax],eax
   1400525fe:	add    BYTE PTR [rax],al
   140052600:	push   rax
   140052601:	rex.X add BYTE PTR [rax],al
   140052604:	add    BYTE PTR [rax],al
   140052606:	add    BYTE PTR [rax],al
   140052608:	add    BYTE PTR [rsp+rax*1],ch
   14005260b:	rex add DWORD PTR [rax],eax
   14005260e:	add    BYTE PTR [rax],al
   140052610:	push   rax
   140052611:	rex.WB add BYTE PTR [r8],al
   140052614:	add    BYTE PTR [rax],al
   140052616:	add    BYTE PTR [rax],al
   140052618:	adc    BYTE PTR [rsp+rax*1],ch
   14005261b:	rex add DWORD PTR [rax],eax
   14005261e:	add    BYTE PTR [rax],al
   140052620:	push   rax
   140052621:	pop    rax
   140052622:	add    BYTE PTR [rax],al
   140052624:	add    BYTE PTR [rax],al
   140052626:	add    BYTE PTR [rax],al
   140052628:	and    BYTE PTR [rsp+rax*1],ch
   14005262b:	rex add DWORD PTR [rax],eax
   14005262e:	add    BYTE PTR [rax],al
   140052630:	push   rdx
   140052631:	and    BYTE PTR [rax],al
   140052633:	add    BYTE PTR [rax],al
   140052635:	add    BYTE PTR [rax],al
   140052637:	add    BYTE PTR [rax-0x18],cl
   14005263a:	add    eax,DWORD PTR [rax+0x1]
   14005263d:	add    BYTE PTR [rax],al
   14005263f:	add    BYTE PTR [rbx+0x20],dl
   140052642:	add    BYTE PTR [rax],al
   140052644:	add    BYTE PTR [rax],al
   140052646:	add    BYTE PTR [rax],al
   140052648:	xor    al,0x2c
   14005264a:	add    al,0x40
   14005264c:	add    DWORD PTR [rax],eax
   14005264e:	add    BYTE PTR [rax],al
   140052650:	pop    rdx
   140052651:	add    BYTE PTR [rax],r8b
   140052654:	add    BYTE PTR [rax],al
   140052656:	add    BYTE PTR [rax],al
   140052658:	sub    al,0x4
   14005265b:	rex add DWORD PTR [rax],eax
	...
   14005266e:	add    BYTE PTR [rax],al
   140052670:	add    DWORD PTR [rax],eax
	...
   14005267e:	add    BYTE PTR [rax],al
   140052680:	adc    BYTE PTR [rbp+0x3],0x40
   140052684:	add    DWORD PTR [rax],eax
   140052686:	add    BYTE PTR [rax],al
   140052688:	nop
   140052689:	push   rbp
   14005268a:	add    eax,DWORD PTR [rax+0x1]
   14005268d:	add    BYTE PTR [rax],al
   14005268f:	add    al,al
   140052691:	push   rbp
   140052692:	add    eax,DWORD PTR [rax+0x1]
   140052695:	add    BYTE PTR [rax],al
   140052697:	add    al,dl
   140052699:	push   rbp
   14005269a:	add    eax,DWORD PTR [rax+0x1]
   14005269d:	add    BYTE PTR [rax],al
   14005269f:	add    BYTE PTR [rax],al
   1400526a1:	rex.WXB add rax,QWORD PTR [r8+0x1]
   1400526a5:	add    BYTE PTR [rax],al
   1400526a7:	add    BYTE PTR [rax],dh
   1400526a9:	push   rsi
   1400526aa:	add    eax,DWORD PTR [rax+0x1]
   1400526ad:	add    BYTE PTR [rax],al
   1400526af:	add    BYTE PTR [rax+0x56],al
   1400526b2:	add    eax,DWORD PTR [rax+0x1]
   1400526b5:	add    BYTE PTR [rax],al
   1400526b7:	add    al,al
   1400526b9:	add    r8,QWORD PTR [rax+0x1]
   1400526bd:	add    BYTE PTR [rax],al
   1400526bf:	add    BYTE PTR [rax],dl
   1400526c1:	rex.WXB add rax,QWORD PTR [r8+0x1]
   1400526c5:	add    BYTE PTR [rax],al
   1400526c7:	add    BYTE PTR [rax],ah
   1400526c9:	rex.WXB add rax,QWORD PTR [r8+0x1]
   1400526cd:	add    BYTE PTR [rax],al
   1400526cf:	add    BYTE PTR [rax],dh
   1400526d1:	rex.WXB add rax,QWORD PTR [r8+0x1]
   1400526d5:	add    BYTE PTR [rax],al
   1400526d7:	add    BYTE PTR [rax+0x4b],al
   1400526da:	add    eax,DWORD PTR [rax+0x1]
   1400526dd:	add    BYTE PTR [rax],al
   1400526df:	add    BYTE PTR [rax+0x4b],dl
   1400526e2:	add    eax,DWORD PTR [rax+0x1]
   1400526e5:	add    BYTE PTR [rax],al
   1400526e7:	add    BYTE PTR [rax+0x54],ah
   1400526ea:	add    eax,DWORD PTR [rax+0x1]
   1400526ed:	add    BYTE PTR [rax],al
   1400526ef:	add    BYTE PTR [rax+0x4b],ah
   1400526f2:	add    eax,DWORD PTR [rax+0x1]
   1400526f5:	add    BYTE PTR [rax],al
   1400526f7:	add    al,ah
   1400526f9:	add    r8,QWORD PTR [r8+0x1]
   1400526fd:	add    BYTE PTR [rax],al
   1400526ff:	add    BYTE PTR [rax+0x4b],dh
   140052702:	add    eax,DWORD PTR [rax+0x1]
   140052705:	add    BYTE PTR [rax],al
   140052707:	add    BYTE PTR [rax+0x140034b],al
   14005270d:	add    BYTE PTR [rax],al
   14005270f:	add    al,dh
   140052711:	rex.WXB add rax,QWORD PTR [r8+0x1]
   140052715:	add    BYTE PTR [rax],al
   140052717:	add    BYTE PTR [rax],dh
   140052719:	add    r8,QWORD PTR [rax+0x1]
   14005271d:	add    BYTE PTR [rax],al
   14005271f:	add    BYTE PTR [rax+0x4c],ah
   140052722:	add    eax,DWORD PTR [rax+0x1]
   140052725:	add    BYTE PTR [rax],al
   140052727:	add    BYTE PTR [rax+0x4c],al
   14005272a:	add    eax,DWORD PTR [rax+0x1]
   14005272d:	add    BYTE PTR [rax],al
   14005272f:	add    BYTE PTR [rax+0x4c],al
   140052732:	add    eax,DWORD PTR [rax+0x1]
   140052735:	add    BYTE PTR [rax],al
   140052737:	add    BYTE PTR [rax+0x4c],dl
   14005273a:	add    eax,DWORD PTR [rax+0x1]
   14005273d:	add    BYTE PTR [rax],al
   14005273f:	add    BYTE PTR [rax+0x140034c],dl
   140052745:	add    BYTE PTR [rax],al
   140052747:	add    BYTE PTR [rax+0x140034c],al
   14005274d:	add    BYTE PTR [rax],al
   14005274f:	add    BYTE PTR [rax+0x4c],dh
   140052752:	add    eax,DWORD PTR [rax+0x1]
   140052755:	add    BYTE PTR [rax],al
   140052757:	add    BYTE PTR [rax+0x140034c],ah
	...
   140052765:	add    BYTE PTR [rax],al
   140052767:	add    BYTE PTR [rax+0x140034c],dh
	...
   140052775:	add    BYTE PTR [rax],al
   140052777:	add    al,dl
   140052779:	rex.WX add rax,QWORD PTR [rax+0x1]
	...
   140052785:	add    BYTE PTR [rax],al
   140052787:	add    BYTE PTR [rcx],al
   140052789:	add    BYTE PTR [rax],al
   14005278b:	add    BYTE PTR [rax],al
   14005278d:	add    BYTE PTR [rax],al
   14005278f:	add    BYTE PTR [rax+0x1400355],al
   140052795:	add    BYTE PTR [rax],al
   140052797:	add    BYTE PTR [rax+0x1400355],dl
   14005279d:	add    BYTE PTR [rax],al
   14005279f:	add    al,al
   1400527a1:	push   rbp
   1400527a2:	add    eax,DWORD PTR [rax+0x1]
   1400527a5:	add    BYTE PTR [rax],al
   1400527a7:	add    al,dl
   1400527a9:	push   rbp
   1400527aa:	add    eax,DWORD PTR [rax+0x1]
   1400527ad:	add    BYTE PTR [rax],al
   1400527af:	add    BYTE PTR [rax],al
   1400527b1:	rex.WXB add rax,QWORD PTR [r8+0x1]
   1400527b5:	add    BYTE PTR [rax],al
   1400527b7:	add    BYTE PTR [rax],dh
   1400527b9:	push   rsi
   1400527ba:	add    eax,DWORD PTR [rax+0x1]
   1400527bd:	add    BYTE PTR [rax],al
   1400527bf:	add    BYTE PTR [rax+0x56],al
   1400527c2:	add    eax,DWORD PTR [rax+0x1]
   1400527c5:	add    BYTE PTR [rax],al
   1400527c7:	add    al,al
   1400527c9:	add    r8,QWORD PTR [rax+0x1]
   1400527cd:	add    BYTE PTR [rax],al
   1400527cf:	add    BYTE PTR [rax],dl
   1400527d1:	rex.WXB add rax,QWORD PTR [r8+0x1]
   1400527d5:	add    BYTE PTR [rax],al
   1400527d7:	add    BYTE PTR [rax],ah
   1400527d9:	rex.WXB add rax,QWORD PTR [r8+0x1]
   1400527dd:	add    BYTE PTR [rax],al
   1400527df:	add    BYTE PTR [rax],dh
   1400527e1:	rex.WXB add rax,QWORD PTR [r8+0x1]
   1400527e5:	add    BYTE PTR [rax],al
   1400527e7:	add    BYTE PTR [rax+0x4b],al
   1400527ea:	add    eax,DWORD PTR [rax+0x1]
   1400527ed:	add    BYTE PTR [rax],al
   1400527ef:	add    BYTE PTR [rax+0x4b],dl
   1400527f2:	add    eax,DWORD PTR [rax+0x1]
   1400527f5:	add    BYTE PTR [rax],al
   1400527f7:	add    BYTE PTR [rax+0x54],ah
   1400527fa:	add    eax,DWORD PTR [rax+0x1]
   1400527fd:	add    BYTE PTR [rax],al
   1400527ff:	add    BYTE PTR [rax+0x4b],ah
   140052802:	add    eax,DWORD PTR [rax+0x1]
   140052805:	add    BYTE PTR [rax],al
   140052807:	add    al,ah
   140052809:	add    r8,QWORD PTR [r8+0x1]
   14005280d:	add    BYTE PTR [rax],al
   14005280f:	add    BYTE PTR [rax+0x4b],dh
   140052812:	add    eax,DWORD PTR [rax+0x1]
   140052815:	add    BYTE PTR [rax],al
   140052817:	add    BYTE PTR [rax+0x140034b],al
   14005281d:	add    BYTE PTR [rax],al
   14005281f:	add    al,dh
   140052821:	rex.WXB add rax,QWORD PTR [r8+0x1]
   140052825:	add    BYTE PTR [rax],al
   140052827:	add    BYTE PTR [rax],dh
   140052829:	add    r8,QWORD PTR [rax+0x1]
   14005282d:	add    BYTE PTR [rax],al
   14005282f:	add    BYTE PTR [rax+0x4c],ah
   140052832:	add    eax,DWORD PTR [rax+0x1]
   140052835:	add    BYTE PTR [rax],al
   140052837:	add    BYTE PTR [rax+0x4c],al
   14005283a:	add    eax,DWORD PTR [rax+0x1]
   14005283d:	add    BYTE PTR [rax],al
   14005283f:	add    BYTE PTR [rax+0x4c],al
   140052842:	add    eax,DWORD PTR [rax+0x1]
   140052845:	add    BYTE PTR [rax],al
   140052847:	add    BYTE PTR [rax+0x4c],dl
   14005284a:	add    eax,DWORD PTR [rax+0x1]
   14005284d:	add    BYTE PTR [rax],al
   14005284f:	add    BYTE PTR [rax+0x140034c],dl
   140052855:	add    BYTE PTR [rax],al
   140052857:	add    BYTE PTR [rax+0x140034c],al
   14005285d:	add    BYTE PTR [rax],al
   14005285f:	add    BYTE PTR [rax+0x4c],dh
   140052862:	add    eax,DWORD PTR [rax+0x1]
   140052865:	add    BYTE PTR [rax],al
   140052867:	add    BYTE PTR [rax+0x140034c],ah
	...
   140052875:	add    BYTE PTR [rax],al
   140052877:	add    BYTE PTR [rax+0x140034c],dh
	...
   140052885:	add    BYTE PTR [rax],al
   140052887:	add    al,dl
   140052889:	rex.WX add rax,QWORD PTR [rax+0x1]
	...
   14005289d:	add    BYTE PTR [rax],al
   14005289f:	add    BYTE PTR [rax+0x1400355],al
   1400528a5:	add    BYTE PTR [rax],al
   1400528a7:	add    BYTE PTR [rax+0x1400355],dl
   1400528ad:	add    BYTE PTR [rax],al
   1400528af:	add    al,al
   1400528b1:	push   rbp
   1400528b2:	add    eax,DWORD PTR [rax+0x1]
   1400528b5:	add    BYTE PTR [rax],al
   1400528b7:	add    al,dl
   1400528b9:	push   rbp
   1400528ba:	add    eax,DWORD PTR [rax+0x1]
   1400528bd:	add    BYTE PTR [rax],al
   1400528bf:	add    BYTE PTR [rax],al
   1400528c1:	rex.WXB add rax,QWORD PTR [r8+0x1]
   1400528c5:	add    BYTE PTR [rax],al
   1400528c7:	add    BYTE PTR [rax],dh
   1400528c9:	push   rsi
   1400528ca:	add    eax,DWORD PTR [rax+0x1]
   1400528cd:	add    BYTE PTR [rax],al
   1400528cf:	add    BYTE PTR [rax+0x56],al
   1400528d2:	add    eax,DWORD PTR [rax+0x1]
   1400528d5:	add    BYTE PTR [rax],al
   1400528d7:	add    al,al
   1400528d9:	add    r8,QWORD PTR [rax+0x1]
   1400528dd:	add    BYTE PTR [rax],al
   1400528df:	add    BYTE PTR [rax],dl
   1400528e1:	rex.WXB add rax,QWORD PTR [r8+0x1]
   1400528e5:	add    BYTE PTR [rax],al
   1400528e7:	add    BYTE PTR [rax],ah
   1400528e9:	rex.WXB add rax,QWORD PTR [r8+0x1]
   1400528ed:	add    BYTE PTR [rax],al
   1400528ef:	add    BYTE PTR [rax],dh
   1400528f1:	rex.WXB add rax,QWORD PTR [r8+0x1]
   1400528f5:	add    BYTE PTR [rax],al
   1400528f7:	add    BYTE PTR [rax+0x4b],al
   1400528fa:	add    eax,DWORD PTR [rax+0x1]
   1400528fd:	add    BYTE PTR [rax],al
   1400528ff:	add    BYTE PTR [rax+0x4b],dl
   140052902:	add    eax,DWORD PTR [rax+0x1]
   140052905:	add    BYTE PTR [rax],al
   140052907:	add    BYTE PTR [rax+0x54],ah
   14005290a:	add    eax,DWORD PTR [rax+0x1]
   14005290d:	add    BYTE PTR [rax],al
   14005290f:	add    BYTE PTR [rax+0x4b],ah
   140052912:	add    eax,DWORD PTR [rax+0x1]
   140052915:	add    BYTE PTR [rax],al
   140052917:	add    al,ah
   140052919:	add    r8,QWORD PTR [r8+0x1]
   14005291d:	add    BYTE PTR [rax],al
   14005291f:	add    BYTE PTR [rax+0x4b],dh
   140052922:	add    eax,DWORD PTR [rax+0x1]
   140052925:	add    BYTE PTR [rax],al
   140052927:	add    BYTE PTR [rax+0x140034b],al
   14005292d:	add    BYTE PTR [rax],al
   14005292f:	add    al,dh
   140052931:	rex.WXB add rax,QWORD PTR [r8+0x1]
   140052935:	add    BYTE PTR [rax],al
   140052937:	add    BYTE PTR [rax],dh
   140052939:	add    r8,QWORD PTR [rax+0x1]
   14005293d:	add    BYTE PTR [rax],al
   14005293f:	add    BYTE PTR [rax+0x4c],ah
   140052942:	add    eax,DWORD PTR [rax+0x1]
   140052945:	add    BYTE PTR [rax],al
   140052947:	add    BYTE PTR [rax+0x4c],al
   14005294a:	add    eax,DWORD PTR [rax+0x1]
   14005294d:	add    BYTE PTR [rax],al
   14005294f:	add    BYTE PTR [rax+0x4c],al
   140052952:	add    eax,DWORD PTR [rax+0x1]
   140052955:	add    BYTE PTR [rax],al
   140052957:	add    BYTE PTR [rax+0x4c],dl
   14005295a:	add    eax,DWORD PTR [rax+0x1]
   14005295d:	add    BYTE PTR [rax],al
   14005295f:	add    BYTE PTR [rax+0x140034c],dl
   140052965:	add    BYTE PTR [rax],al
   140052967:	add    BYTE PTR [rax+0x140034c],al
   14005296d:	add    BYTE PTR [rax],al
   14005296f:	add    BYTE PTR [rax+0x4c],dh
   140052972:	add    eax,DWORD PTR [rax+0x1]
   140052975:	add    BYTE PTR [rax],al
   140052977:	add    BYTE PTR [rax+0x140034c],ah
	...
   140052985:	add    BYTE PTR [rax],al
   140052987:	add    BYTE PTR [rax+0x140034c],dh
	...
   140052995:	add    BYTE PTR [rax],al
   140052997:	add    al,dl
   140052999:	rex.WX add rax,QWORD PTR [rax+0x1]
	...
   1400529ad:	add    BYTE PTR [rax],al
   1400529af:	add    al,dh
   1400529b1:	add    eax,DWORD PTR fs:[rax+0x1]
   1400529b5:	add    BYTE PTR [rax],al
   1400529b7:	add    BYTE PTR [rax],al
   1400529b9:	add    eax,DWORD PTR gs:[rax+0x1]
   1400529bd:	add    BYTE PTR [rax],al
   1400529bf:	add    BYTE PTR [rax],ah
   1400529c1:	add    eax,DWORD PTR gs:[rax+0x1]
   1400529c5:	add    BYTE PTR [rax],al
   1400529c7:	add    BYTE PTR [rax],dh
   1400529c9:	add    eax,DWORD PTR gs:[rax+0x1]
   1400529cd:	add    BYTE PTR [rax],al
   1400529cf:	add    BYTE PTR [rax+0x66],dl
   1400529d2:	add    eax,DWORD PTR [rax+0x1]
   1400529d5:	add    BYTE PTR [rax],al
   1400529d7:	add    al,ah
   1400529d9:	pop    rbx
   1400529da:	add    eax,DWORD PTR [rax+0x1]
   1400529dd:	add    BYTE PTR [rax],al
   1400529df:	add    al,dh
   1400529e1:	pop    rbx
   1400529e2:	add    eax,DWORD PTR [rax+0x1]
   1400529e5:	add    BYTE PTR [rax],al
   1400529e7:	add    BYTE PTR [rax],al
   1400529e9:	pop    rsp
   1400529ea:	add    eax,DWORD PTR [rax+0x1]
   1400529ed:	add    BYTE PTR [rax],al
   1400529ef:	add    BYTE PTR [rax],dl
   1400529f1:	pop    rsp
   1400529f2:	add    eax,DWORD PTR [rax+0x1]
   1400529f5:	add    BYTE PTR [rax],al
   1400529f7:	add    BYTE PTR [rax],ah
   1400529f9:	pop    rsp
   1400529fa:	add    eax,DWORD PTR [rax+0x1]
   1400529fd:	add    BYTE PTR [rax],al
   1400529ff:	add    BYTE PTR [rax],dh
   140052a01:	pop    rsp
   140052a02:	add    eax,DWORD PTR [rax+0x1]
   140052a05:	add    BYTE PTR [rax],al
   140052a07:	add    BYTE PTR [rax+0x5c],al
   140052a0a:	add    eax,DWORD PTR [rax+0x1]
   140052a0d:	add    BYTE PTR [rax],al
   140052a0f:	add    BYTE PTR [rax+0x5c],dl
   140052a12:	add    eax,DWORD PTR [rax+0x1]
   140052a15:	add    BYTE PTR [rax],al
   140052a17:	add    BYTE PTR [rax+0x5c],ah
   140052a1a:	add    eax,DWORD PTR [rax+0x1]
   140052a1d:	add    BYTE PTR [rax],al
   140052a1f:	add    BYTE PTR [rax+0x5c],dh
   140052a22:	add    eax,DWORD PTR [rax+0x1]
   140052a25:	add    BYTE PTR [rax],al
   140052a27:	add    BYTE PTR [rax+0x140035c],al
   140052a2d:	add    BYTE PTR [rax],al
   140052a2f:	add    BYTE PTR [rax+0x140035c],ah
   140052a35:	add    BYTE PTR [rax],al
   140052a37:	add    al,al
   140052a39:	pop    rsp
   140052a3a:	add    eax,DWORD PTR [rax+0x1]
   140052a3d:	add    BYTE PTR [rax],al
   140052a3f:	add    BYTE PTR [rax+0x5d],ah
   140052a42:	add    eax,DWORD PTR [rax+0x1]
   140052a45:	add    BYTE PTR [rax],al
   140052a47:	add    BYTE PTR [rax+0x140035d],ah
   140052a4d:	add    BYTE PTR [rax],al
   140052a4f:	add    al,dh
   140052a51:	pop    rdi
   140052a52:	add    eax,DWORD PTR [rax+0x1]
   140052a55:	add    BYTE PTR [rax],al
   140052a57:	add    BYTE PTR [rax+0x1400364],dh
   140052a5d:	add    BYTE PTR [rax],al
   140052a5f:	add    al,dl
   140052a61:	add    eax,DWORD PTR fs:[rax+0x1]
   140052a65:	add    BYTE PTR [rax],al
   140052a67:	add    BYTE PTR [rax+0x5e],dl
   140052a6a:	add    eax,DWORD PTR [rax+0x1]
   140052a6d:	add    BYTE PTR [rax],al
   140052a6f:	add    BYTE PTR [rax+0x1400364],al
   140052a75:	add    BYTE PTR [rax],al
   140052a77:	add    BYTE PTR [rax+0x64],dh
   140052a7a:	add    eax,DWORD PTR [rax+0x1]
   140052a7d:	add    BYTE PTR [rax],al
   140052a7f:	add    BYTE PTR [rax],al
   140052a81:	(bad)  
   140052a82:	add    eax,DWORD PTR [rax+0x1]
   140052a85:	add    BYTE PTR [rax],al
   140052a87:	add    BYTE PTR [rax+0x1400364],dl
	...
   140052a95:	add    BYTE PTR [rax],al
   140052a97:	add    BYTE PTR [rax+0x1400364],ah
	...
   140052aa5:	add    BYTE PTR [rax],al
   140052aa7:	add    al,dl
   140052aa9:	rex.WX add rax,QWORD PTR [rax+0x1]
	...
   140052abd:	add    BYTE PTR [rax],al
   140052abf:	add    BYTE PTR [rax],cl
   140052ac1:	fadd   DWORD PTR [rbx]
   140052ac3:	rex add DWORD PTR [rax],eax
   140052ac6:	add    BYTE PTR [rax],al
   140052ac8:	js     0x140052b09
   140052aca:	add    al,0x40
   140052acc:	add    DWORD PTR [rax],eax
   140052ace:	add    BYTE PTR [rax],al
   140052ad0:	mov    eax,0x14003e9
   140052ad5:	add    BYTE PTR [rax],al
   140052ad7:	add    BYTE PTR [rax+0x140043f],cl
   140052add:	add    BYTE PTR [rax],al
   140052adf:	add    BYTE PTR [rax],bh
   140052ae1:	in     al,dx
   140052ae2:	add    eax,DWORD PTR [rax+0x1]
   140052ae5:	add    BYTE PTR [rax],al
   140052ae7:	add    BYTE PTR [rax+0x140043f],cl
   140052aed:	add    BYTE PTR [rax],al
   140052aef:	add    BYTE PTR [rax-0x14],dl
   140052af2:	add    eax,DWORD PTR [rax+0x1]
   140052af5:	add    BYTE PTR [rax],al
   140052af7:	add    BYTE PTR [rax+0x140043f],bl
   140052afd:	add    BYTE PTR [rax],al
   140052aff:	add    BYTE PTR [rax-0x14],dh
   140052b02:	add    eax,DWORD PTR [rax+0x1]
   140052b05:	add    BYTE PTR [rax],al
   140052b07:	add    BYTE PTR [rax+0x140043f],ch
   140052b0d:	add    BYTE PTR [rax],al
   140052b0f:	add    BYTE PTR [rax-0x14],bh
   140052b12:	add    eax,DWORD PTR [rax+0x1]
   140052b15:	add    BYTE PTR [rax],al
   140052b17:	add    BYTE PTR [rax+0x140043f],bh
   140052b1d:	add    BYTE PTR [rax],al
   140052b1f:	add    BYTE PTR [rax+0x14003ec],cl
   140052b25:	add    BYTE PTR [rax],al
   140052b27:	add    al,cl
   140052b29:	(bad)  
   140052b2a:	add    al,0x40
   140052b2c:	add    DWORD PTR [rax],eax
   140052b2e:	add    BYTE PTR [rax],al
   140052b30:	movabs al,ds:0xd8000000014003ec
   140052b39:	(bad)  
   140052b3a:	add    al,0x40
   140052b3c:	add    DWORD PTR [rax],eax
	...
   140052b46:	add    BYTE PTR [rax],al
   140052b48:	mov    BYTE PTR [rdi],bh
   140052b4a:	add    al,0x40
   140052b4c:	add    DWORD PTR [rax],eax
   140052b4e:	add    BYTE PTR [rax],al
   140052b50:	add    DWORD PTR [rax],eax
	...
   140052b5e:	add    BYTE PTR [rax],al
   140052b60:	and    BYTE PTR [rdi+0x3],0x40
   140052b64:	add    DWORD PTR [rax],eax
   140052b66:	add    BYTE PTR [rax],al
   140052b68:	shl    BYTE PTR [rdi+0x3],1
   140052b6b:	rex add DWORD PTR [rax],eax
   140052b6e:	add    BYTE PTR [rax],al
   140052b70:	jo     0x140052bda
   140052b72:	add    eax,DWORD PTR [rax+0x1]
   140052b75:	add    BYTE PTR [rax],al
   140052b77:	add    BYTE PTR [rax+0x1400368],al
   140052b7d:	add    BYTE PTR [rax],al
   140052b7f:	add    BYTE PTR [rax],ah
   140052b81:	imul   eax,DWORD PTR [rbx],0x140
   140052b87:	add    BYTE PTR [rax],dh
   140052b89:	imul   eax,DWORD PTR [rbx],0x140
   140052b8f:	add    BYTE PTR [rax+0x1400369],ah
   140052b95:	add    BYTE PTR [rax],al
   140052b97:	add    BYTE PTR [rax+0x1400369],dh
   140052b9d:	add    BYTE PTR [rax],al
   140052b9f:	add    al,al
   140052ba1:	imul   eax,DWORD PTR [rbx],0x140
   140052ba7:	add    al,dl
   140052ba9:	imul   eax,DWORD PTR [rbx],0x140
   140052baf:	add    al,dh
   140052bb1:	imul   eax,DWORD PTR [rbx],0x140
   140052bb7:	add    BYTE PTR [rax],dl
   140052bb9:	push   0x3
   140052bbb:	rex add DWORD PTR [rax],eax
   140052bbe:	add    BYTE PTR [rax],al
   140052bc0:	xor    BYTE PTR [rdx+0x3],ch
   140052bc3:	rex add DWORD PTR [rax],eax
   140052bc6:	add    BYTE PTR [rax],al
   140052bc8:	push   rax
   140052bc9:	push   0x3
   140052bcb:	rex add DWORD PTR [rax],eax
   140052bce:	add    BYTE PTR [rax],al
   140052bd0:	loopne 0x140052c3c
   140052bd2:	add    eax,DWORD PTR [rax+0x1]
   140052bd5:	add    BYTE PTR [rax],al
   140052bd7:	add    BYTE PTR [rax],al
   140052bd9:	imul   eax,DWORD PTR [rbx],0x40
   140052bdc:	add    DWORD PTR [rax],eax
   140052bde:	add    BYTE PTR [rax],al
   140052be0:	rex imul eax,DWORD PTR [rbx],0x40
   140052be4:	add    DWORD PTR [rax],eax
   140052be6:	add    BYTE PTR [rax],al
   140052be8:	(bad)  
   140052be9:	imul   eax,DWORD PTR [rbx],0x40
   140052bec:	add    DWORD PTR [rax],eax
   140052bee:	add    BYTE PTR [rax],al
   140052bf0:	loopne 0x140052c5d
   140052bf2:	add    eax,DWORD PTR [rax+0x1]
   140052bf5:	add    BYTE PTR [rax],al
   140052bf7:	add    BYTE PTR [rax],ah
   140052bf9:	ins    BYTE PTR es:[rdi],dx
   140052bfa:	add    eax,DWORD PTR [rax+0x1]
   140052bfd:	add    BYTE PTR [rax],al
   140052bff:	add    al,dl
   140052c01:	outs   dx,BYTE PTR ds:[rsi]
   140052c02:	add    eax,DWORD PTR [rax+0x1]
   140052c05:	add    BYTE PTR [rax],al
   140052c07:	add    al,dl
   140052c09:	ins    BYTE PTR es:[rdi],dx
   140052c0a:	add    eax,DWORD PTR [rax+0x1]
   140052c0d:	add    BYTE PTR [rax],al
   140052c0f:	add    al,dl
   140052c11:	ins    BYTE PTR es:[rdi],dx
   140052c12:	add    eax,DWORD PTR [rax+0x1]
   140052c15:	add    BYTE PTR [rax],al
   140052c17:	add    BYTE PTR [rax],ah
   140052c19:	ins    DWORD PTR es:[rdi],dx
   140052c1a:	add    eax,DWORD PTR [rax+0x1]
   140052c1d:	add    BYTE PTR [rax],al
   140052c1f:	add    BYTE PTR [rax+0x74],al
   140052c22:	add    eax,DWORD PTR [rax+0x1]
   140052c25:	add    BYTE PTR [rax],al
   140052c27:	add    BYTE PTR [rax],dl
   140052c29:	jo     0x140052c2e
   140052c2b:	rex add DWORD PTR [rax],eax
   140052c2e:	add    BYTE PTR [rax],al
   140052c30:	(bad)  
   140052c31:	outs   dx,DWORD PTR ds:[rsi]
   140052c32:	add    eax,DWORD PTR [rax+0x1]
   140052c35:	add    BYTE PTR [rax],al
   140052c37:	add    BYTE PTR [rax+0x75],dl
   140052c3a:	add    eax,DWORD PTR [rax+0x1]
   140052c3d:	add    BYTE PTR [rax],al
   140052c3f:	add    BYTE PTR [rcx],al
   140052c41:	add    BYTE PTR [rax],al
   140052c43:	add    BYTE PTR [rax],al
   140052c45:	add    BYTE PTR [rax],al
   140052c47:	add    BYTE PTR [rax+0x1400375],al
   140052c4d:	add    BYTE PTR [rax],al
   140052c4f:	add    BYTE PTR [rax+0x1400367],dl
	...
   140052c6d:	add    BYTE PTR [rax],al
   140052c6f:	add    BYTE PTR [rax+0x12],dh
   140052c72:	add    al,0x40
   140052c74:	add    DWORD PTR [rax],eax
   140052c76:	add    BYTE PTR [rax],al
   140052c78:	test   BYTE PTR [rdx],dl
   140052c7a:	add    al,0x40
   140052c7c:	add    DWORD PTR [rax],eax
   140052c7e:	add    BYTE PTR [rax],al
   140052c80:	mov    WORD PTR [rdx],ss
   140052c82:	add    al,0x40
   140052c84:	add    DWORD PTR [rax],eax
   140052c86:	add    BYTE PTR [rax],al
   140052c88:	cmp    BYTE PTR [rsp+rax*1],dl
   140052c8b:	rex add DWORD PTR [rax],eax
   140052c8e:	add    BYTE PTR [rax],al
   140052c90:	loopne 0x140052c1b
   140052c92:	add    eax,DWORD PTR [rax+0x1]
   140052c95:	add    BYTE PTR [rax],al
   140052c97:	add    al,dh
   140052c99:	mov    DWORD PTR [rbx],eax
   140052c9b:	rex add DWORD PTR [rax],eax
   140052c9e:	add    BYTE PTR [rax],al
   140052ca0:	movabs al,ds:0x200000000140037f
   140052ca9:	add    BYTE PTR [rbx],0x40
   140052cac:	add    DWORD PTR [rax],eax
   140052cae:	add    BYTE PTR [rax],al
   140052cb0:	mov    al,0x80
   140052cb2:	add    eax,DWORD PTR [rax+0x1]
   140052cb5:	add    BYTE PTR [rax],al
   140052cb7:	add    al,al
   140052cb9:	add    BYTE PTR [rbx],0x40
   140052cbc:	add    DWORD PTR [rax],eax
   140052cbe:	add    BYTE PTR [rax],al
   140052cc0:	and    BYTE PTR [rcx+0x14003],al
   140052cc6:	add    BYTE PTR [rax],al
   140052cc8:	xor    BYTE PTR [rcx+0x14003],al
   140052cce:	add    BYTE PTR [rax],al
   140052cd0:	rex add DWORD PTR [rbx],0x140
   140052cd7:	add    BYTE PTR [rax-0x7f],dl
   140052cda:	add    eax,DWORD PTR [rax+0x1]
   140052cdd:	add    BYTE PTR [rax],al
   140052cdf:	add    BYTE PTR [rax-0x7f],ah
   140052ce2:	add    eax,DWORD PTR [rax+0x1]
   140052ce5:	add    BYTE PTR [rax],al
   140052ce7:	add    BYTE PTR [rax-0x7f],dh
   140052cea:	add    eax,DWORD PTR [rax+0x1]
   140052ced:	add    BYTE PTR [rax],al
   140052cef:	add    BYTE PTR [rax+0x1400381],al
   140052cf5:	add    BYTE PTR [rax],al
   140052cf7:	add    BYTE PTR [rax+0x1400381],dl
   140052cfd:	add    BYTE PTR [rax],al
   140052cff:	add    al,dh
   140052d01:	add    DWORD PTR [rbx],0x140
   140052d07:	add    BYTE PTR [rax],al
   140052d09:	(bad)  
   140052d0a:	add    eax,DWORD PTR [rax+0x1]
   140052d0d:	add    BYTE PTR [rax],al
   140052d0f:	add    BYTE PTR [rax-0x7e],dh
   140052d12:	add    eax,DWORD PTR [rax+0x1]
   140052d15:	add    BYTE PTR [rax],al
   140052d17:	add    BYTE PTR [rax+0x1400382],al
   140052d1d:	add    BYTE PTR [rax],al
   140052d1f:	add    al,ah
   140052d21:	(bad)  
   140052d22:	add    eax,DWORD PTR [rax+0x1]
   140052d25:	add    BYTE PTR [rax],al
   140052d27:	add    BYTE PTR [rax],ah
   140052d29:	add    DWORD PTR [rbx],0x40
   140052d2c:	add    DWORD PTR [rax],eax
   140052d2e:	add    BYTE PTR [rax],al
   140052d30:	rex test DWORD PTR [rbx],eax
   140052d33:	rex add DWORD PTR [rax],eax
   140052d36:	add    BYTE PTR [rax],al
   140052d38:	rol    BYTE PTR [rbx+0x14003],0x0
   140052d3f:	add    al,al
   140052d41:	add    DWORD PTR [rbx],0x40
   140052d44:	add    DWORD PTR [rax],eax
   140052d46:	add    BYTE PTR [rax],al
   140052d48:	nop
   140052d49:	test   BYTE PTR [rbx],al
   140052d4b:	rex add DWORD PTR [rax],eax
   140052d4e:	add    BYTE PTR [rax],al
   140052d50:	rol    BYTE PTR [rdi+0x14003],1
   140052d56:	add    BYTE PTR [rax],al
   140052d58:	movabs al,ds:0xb000000001400386
   140052d61:	test   DWORD PTR [rbx],eax
   140052d63:	rex add DWORD PTR [rax],eax
   140052d66:	add    BYTE PTR [rax],al
   140052d68:	jo     0x140052cf2
   140052d6a:	add    eax,DWORD PTR [rax+0x1]
	...
   140052d75:	add    BYTE PTR [rax],al
   140052d77:	add    BYTE PTR [rax],dl
   140052d79:	mov    DWORD PTR [rbx],eax
   140052d7b:	rex add DWORD PTR [rax],eax
   140052d7e:	add    BYTE PTR [rax],al
   140052d80:	loopne 0x140052e01
   140052d82:	add    eax,DWORD PTR [rax+0x1]
	...
   140052d95:	add    BYTE PTR [rax],al
   140052d97:	add    BYTE PTR [rcx],al
   140052d99:	add    BYTE PTR [rax],al
   140052d9b:	add    BYTE PTR [rax],al
   140052d9d:	add    BYTE PTR [rax],al
   140052d9f:	add    ah,dh
   140052da1:	in     al,0x3
   140052da3:	rex add DWORD PTR [rax],eax
   140052da6:	add    BYTE PTR [rax],al
   140052da8:	mov    al,0x8
   140052daa:	add    al,0x40
   140052dac:	add    DWORD PTR [rax],eax
   140052dae:	add    BYTE PTR [rax],al
   140052db0:	js     0x140052da6
   140052db2:	add    eax,DWORD PTR [rax+0x1]
   140052db5:	add    BYTE PTR [rax],al
   140052db7:	add    al,ah
   140052db9:	or     al,BYTE PTR [rax+rax*2]
   140052dbc:	add    DWORD PTR [rax],eax
   140052dbe:	add    BYTE PTR [rax],al
   140052dc0:	push   rax
   140052dc1:	add    al,BYTE PTR [rax+rax*2]
   140052dc4:	add    DWORD PTR [rax],eax
   140052dc6:	add    BYTE PTR [rax],al
   140052dc8:	lock cld 
   140052dca:	add    eax,DWORD PTR [rax+0x1]
   140052dcd:	add    BYTE PTR [rax],al
   140052dcf:	add    BYTE PTR [rdi+rax*1+0x4],bl
   140052dd3:	rex add DWORD PTR [rax],eax
   140052dd6:	add    BYTE PTR [rax],al
   140052dd8:	rex.R (bad) 
   140052dda:	add    al,0x40
   140052ddc:	add    DWORD PTR [rax],eax
	...
   140052de6:	add    BYTE PTR [rax],al
   140052de8:	add    DWORD PTR [rax],eax
   140052dea:	add    BYTE PTR [rax],al
   140052dec:	add    BYTE PTR [rax],al
   140052dee:	add    BYTE PTR [rax],al
   140052df0:	jo     0x140052d88
   140052df2:	add    eax,DWORD PTR [rax+0x1]
   140052df5:	add    BYTE PTR [rax],al
   140052df7:	add    BYTE PTR [rax+0x1400396],al
   140052dfd:	add    BYTE PTR [rax],al
   140052dff:	add    al,ah
   140052e01:	xchg   edi,eax
   140052e02:	add    eax,DWORD PTR [rax+0x1]
   140052e05:	add    BYTE PTR [rax],al
   140052e07:	add    BYTE PTR [rax],al
   140052e09:	cwde   
   140052e0a:	add    eax,DWORD PTR [rax+0x1]
   140052e0d:	add    BYTE PTR [rax],al
   140052e0f:	add    BYTE PTR [rax+0x1400398],dh
   140052e15:	add    BYTE PTR [rax],al
   140052e17:	add    al,al
   140052e19:	cwde   
   140052e1a:	add    eax,DWORD PTR [rax+0x1]
   140052e1d:	add    BYTE PTR [rax],al
   140052e1f:	add    al,ah
   140052e21:	cwde   
   140052e22:	add    eax,DWORD PTR [rax+0x1]
   140052e25:	add    BYTE PTR [rax],al
   140052e27:	add    al,dh
   140052e29:	cwde   
   140052e2a:	add    eax,DWORD PTR [rax+0x1]
   140052e2d:	add    BYTE PTR [rax],al
   140052e2f:	add    BYTE PTR [rax],al
   140052e31:	cdq    
   140052e32:	add    eax,DWORD PTR [rax+0x1]
   140052e35:	add    BYTE PTR [rax],al
   140052e37:	add    BYTE PTR [rax],dl
   140052e39:	cdq    
   140052e3a:	add    eax,DWORD PTR [rax+0x1]
   140052e3d:	add    BYTE PTR [rax],al
   140052e3f:	add    BYTE PTR [rax-0x75],dh
   140052e42:	add    eax,DWORD PTR [rax+0x1]
   140052e45:	add    BYTE PTR [rax],al
   140052e47:	add    BYTE PTR [rax+0x140038b],al
   140052e4d:	add    BYTE PTR [rax],al
   140052e4f:	add    BYTE PTR [rax+0x140038b],dl
   140052e55:	add    BYTE PTR [rax],al
   140052e57:	add    BYTE PTR [rax+0x140038b],ah
   140052e5d:	add    BYTE PTR [rax],al
   140052e5f:	add    BYTE PTR [rax],al
   140052e61:	mov    WORD PTR [rbx],es
   140052e63:	rex add DWORD PTR [rax],eax
   140052e66:	add    BYTE PTR [rax],al
   140052e68:	adc    BYTE PTR [rbx+rax*1+0x140],cl
   140052e6f:	add    BYTE PTR [rax+0x140038c],al
   140052e75:	add    BYTE PTR [rax],al
   140052e77:	add    BYTE PTR [rax+0x140038c],dl
   140052e7d:	add    BYTE PTR [rax],al
   140052e7f:	add    BYTE PTR [rax],dl
   140052e81:	lea    eax,[rbx]
   140052e83:	rex add DWORD PTR [rax],eax
   140052e86:	add    BYTE PTR [rax],al
   140052e88:	push   rax
   140052e89:	lea    eax,[rbx]
   140052e8b:	rex add DWORD PTR [rax],eax
   140052e8e:	add    BYTE PTR [rax],al
   140052e90:	jo     0x140052e22
   140052e92:	add    eax,DWORD PTR [rax+0x1]
   140052e95:	add    BYTE PTR [rax],al
   140052e97:	add    BYTE PTR [rax],al
   140052e99:	mov    es,WORD PTR [rbx]
   140052e9b:	rex add DWORD PTR [rax],eax
   140052e9e:	add    BYTE PTR [rax],al
   140052ea0:	xor    BYTE PTR [rsi+0x14003],cl
   140052ea6:	add    BYTE PTR [rax],al
   140052ea8:	(bad)  
   140052ea9:	mov    es,WORD PTR [rbx]
   140052eab:	rex add DWORD PTR [rax],eax
   140052eae:	add    BYTE PTR [rax],al
   140052eb0:	movabs al,ds:0xc000000001400393
   140052eb9:	xchg   edx,eax
   140052eba:	add    eax,DWORD PTR [rax+0x1]
   140052ebd:	add    BYTE PTR [rax],al
   140052ebf:	add    BYTE PTR [rax+0x1400391],dh
   140052ec5:	add    BYTE PTR [rax],al
   140052ec7:	add    BYTE PTR [rax-0x6b],dl
   140052eca:	add    eax,DWORD PTR [rax+0x1]
	...
   140052ed5:	add    BYTE PTR [rax],al
   140052ed7:	add    BYTE PTR [rax],dl
   140052ed9:	xchg   esi,eax
   140052eda:	add    eax,DWORD PTR [rax+0x1]
	...
   140052ef5:	add    BYTE PTR [rax],al
   140052ef7:	add    BYTE PTR [rcx],al
   140052ef9:	add    BYTE PTR [rax],al
   140052efb:	add    BYTE PTR [rax],al
   140052efd:	add    BYTE PTR [rax],al
   140052eff:	add    al,ah
   140052f01:	mov    cl,0x3
   140052f03:	rex add DWORD PTR [rax],eax
   140052f06:	add    BYTE PTR [rax],al
   140052f08:	rex lahf 
   140052f0a:	add    eax,DWORD PTR [rax+0x1]
   140052f0d:	add    BYTE PTR [rax],al
   140052f0f:	add    BYTE PTR [rax+0x14003a0],dh
   140052f15:	add    BYTE PTR [rax],al
   140052f17:	add    al,al
   140052f19:	movabs al,ds:0xa2c0000000014003
   140052f22:	add    eax,DWORD PTR [rax+0x1]
   140052f25:	add    BYTE PTR [rax],al
   140052f27:	add    al,dl
   140052f29:	movabs ds:0xa3d0000000014003,al
   140052f32:	add    eax,DWORD PTR [rax+0x1]
   140052f35:	add    BYTE PTR [rax],al
   140052f37:	add    BYTE PTR [rax],ah
   140052f39:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052f3a:	add    eax,DWORD PTR [rax+0x1]
   140052f3d:	add    BYTE PTR [rax],al
   140052f3f:	add    al,ah
   140052f41:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052f42:	add    eax,DWORD PTR [rax+0x1]
   140052f45:	add    BYTE PTR [rax],al
   140052f47:	add    BYTE PTR [rax],ah
   140052f49:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052f4a:	add    eax,DWORD PTR [rax+0x1]
   140052f4d:	add    BYTE PTR [rax],al
   140052f4f:	add    BYTE PTR [rax],dh
   140052f51:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052f52:	add    eax,DWORD PTR [rax+0x1]
   140052f55:	add    BYTE PTR [rax],al
   140052f57:	add    BYTE PTR [rax-0x5b],al
   140052f5a:	add    eax,DWORD PTR [rax+0x1]
   140052f5d:	add    BYTE PTR [rax],al
   140052f5f:	add    BYTE PTR [rax-0x5b],dl
   140052f62:	add    eax,DWORD PTR [rax+0x1]
   140052f65:	add    BYTE PTR [rax],al
   140052f67:	add    BYTE PTR [rax-0x5b],ah
   140052f6a:	add    eax,DWORD PTR [rax+0x1]
   140052f6d:	add    BYTE PTR [rax],al
   140052f6f:	add    BYTE PTR [rax],ah
   140052f71:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140052f72:	add    eax,DWORD PTR [rax+0x1]
   140052f75:	add    BYTE PTR [rax],al
   140052f77:	add    BYTE PTR [rax-0x5a],ah
   140052f7a:	add    eax,DWORD PTR [rax+0x1]
   140052f7d:	add    BYTE PTR [rax],al
   140052f7f:	add    BYTE PTR [rax-0x59],dh
   140052f82:	add    eax,DWORD PTR [rax+0x1]
   140052f85:	add    BYTE PTR [rax],al
   140052f87:	add    BYTE PTR [rax+0x14003a7],dh
   140052f8d:	add    BYTE PTR [rax],al
   140052f8f:	add    BYTE PTR [rax],dh
   140052f91:	test   al,0x3
   140052f93:	rex add DWORD PTR [rax],eax
   140052f96:	add    BYTE PTR [rax],al
   140052f98:	jo     0x140052f42
   140052f9a:	add    eax,DWORD PTR [rax+0x1]
   140052f9d:	add    BYTE PTR [rax],al
   140052f9f:	add    al,dl
   140052fa1:	stos   BYTE PTR es:[rdi],al
   140052fa2:	add    eax,DWORD PTR [rax+0x1]
   140052fa5:	add    BYTE PTR [rax],al
   140052fa7:	add    BYTE PTR [rax+0x14003a8],dh
   140052fad:	add    BYTE PTR [rax],al
   140052faf:	add    al,dl
   140052fb1:	test   al,0x3
   140052fb3:	rex add DWORD PTR [rax],eax
   140052fb6:	add    BYTE PTR [rax],al
   140052fb8:	lock test al,0x3
   140052fbb:	rex add DWORD PTR [rax],eax
   140052fbe:	add    BYTE PTR [rax],al
   140052fc0:	adc    BYTE PTR [rbx+rax*1+0x140],ch
   140052fc7:	add    BYTE PTR [rax],dh
   140052fc9:	scas   al,BYTE PTR es:[rdi]
   140052fca:	add    eax,DWORD PTR [rax+0x1]
   140052fcd:	add    BYTE PTR [rax],al
   140052fcf:	add    BYTE PTR [rax],al
   140052fd1:	lods   eax,DWORD PTR ds:[rsi]
   140052fd2:	add    eax,DWORD PTR [rax+0x1]
   140052fd5:	add    BYTE PTR [rax],al
   140052fd7:	add    BYTE PTR [rax],dl
   140052fd9:	scas   eax,DWORD PTR es:[rdi]
   140052fda:	add    eax,DWORD PTR [rax+0x1]
	...
   140052fe5:	add    BYTE PTR [rax],al
   140052fe7:	add    BYTE PTR [rax],dh
   140052fe9:	mov    al,0x3
   140052feb:	rex add DWORD PTR [rax],eax
	...
   140053006:	add    BYTE PTR [rax],al
   140053008:	push   rax
   140053009:	rex.WRX add al,0x40
   14005300c:	add    DWORD PTR [rax],eax
   14005300e:	add    BYTE PTR [rax],al
   140053010:	push   rsp
   140053011:	rex.WRX add al,0x40
   140053014:	add    DWORD PTR [rax],eax
   140053016:	add    BYTE PTR [rax],al
   140053018:	add    DWORD PTR [rax],eax
   14005301a:	add    BYTE PTR [rax],al
   14005301c:	add    BYTE PTR [rax],al
   14005301e:	add    BYTE PTR [rax],al
   140053020:	jo     0x140053034
   140053022:	add    al,0x40
   140053024:	add    DWORD PTR [rax],eax
   140053026:	add    BYTE PTR [rax],al
   140053028:	test   BYTE PTR [rdx],dl
   14005302a:	add    al,0x40
   14005302c:	add    DWORD PTR [rax],eax
   14005302e:	add    BYTE PTR [rax],al
   140053030:	mov    WORD PTR [rdx],ss
   140053032:	add    al,0x40
   140053034:	add    DWORD PTR [rax],eax
   140053036:	add    BYTE PTR [rax],al
   140053038:	jo     0x14005304c
   14005303a:	add    al,0x40
   14005303c:	add    DWORD PTR [rax],eax
   14005303e:	add    BYTE PTR [rax],al
   140053040:	cwde   
   140053041:	(bad)  
   140053042:	add    al,0x40
   140053044:	add    DWORD PTR [rax],eax
   140053046:	add    BYTE PTR [rax],al
   140053048:	test   al,0x7
   14005304a:	add    al,0x40
   14005304c:	add    DWORD PTR [rax],eax
   14005304e:	add    BYTE PTR [rax],al
   140053050:	pop    rax
   140053051:	rex.WRX add al,0x40
   140053054:	add    DWORD PTR [rax],eax
   140053056:	add    BYTE PTR [rax],al
   140053058:	clc    
   140053059:	(bad)  
   14005305a:	add    al,0x40
   14005305c:	add    DWORD PTR [rax],eax
   14005305e:	add    BYTE PTR [rax],al
   140053060:	or     BYTE PTR [rax+rax*2],r8b
   140053064:	add    DWORD PTR [rax],eax
   140053066:	add    BYTE PTR [rax],al
   140053068:	ins    BYTE PTR es:[rdi],dx
   140053069:	or     BYTE PTR [rax+rax*2],al
   14005306c:	add    DWORD PTR [rax],eax
   14005306e:	add    BYTE PTR [rax],al
   140053070:	je     0x14005307a
   140053072:	add    al,0x40
   140053074:	add    DWORD PTR [rax],eax
   140053076:	add    BYTE PTR [rax],al
   140053078:	hlt    
   140053079:	in     al,0x3
   14005307b:	rex add DWORD PTR [rax],eax
   14005307e:	add    BYTE PTR [rax],al
   140053080:	movabs al,ds:0xb000000001400408
   140053089:	or     BYTE PTR [rax+rax*2],al
   14005308c:	add    DWORD PTR [rax],eax
   14005308e:	add    BYTE PTR [rax],al
   140053090:	fmul   DWORD PTR [rax]
   140053092:	add    al,0x40
   140053094:	add    DWORD PTR [rax],eax
   140053096:	add    BYTE PTR [rax],al
   140053098:	in     al,0x8
   14005309a:	add    al,0x40
   14005309c:	add    DWORD PTR [rax],eax
   14005309e:	add    BYTE PTR [rax],al
   1400530a0:	adc    BYTE PTR [rcx],cl
   1400530a2:	add    al,0x40
   1400530a4:	add    DWORD PTR [rax],eax
   1400530a6:	add    BYTE PTR [rax],al
   1400530a8:	(bad)  
   1400530a9:	or     DWORD PTR [rax+rax*2],eax
   1400530ac:	add    DWORD PTR [rax],eax
   1400530ae:	add    BYTE PTR [rax],al
   1400530b0:	mov    al,0x9
   1400530b2:	add    al,0x40
   1400530b4:	add    DWORD PTR [rax],eax
   1400530b6:	add    BYTE PTR [rax],al
   1400530b8:	add    BYTE PTR [rdx],cl
   1400530ba:	add    al,0x40
   1400530bc:	add    DWORD PTR [rax],eax
   1400530be:	add    BYTE PTR [rax],al
   1400530c0:	rex.WR or r8b,BYTE PTR [rax+rax*2]
   1400530c4:	add    DWORD PTR [rax],eax
   1400530c6:	add    BYTE PTR [rax],al
   1400530c8:	js     0x1400530d4
   1400530ca:	add    al,0x40
   1400530cc:	add    DWORD PTR [rax],eax
   1400530ce:	add    BYTE PTR [rax],al
   1400530d0:	mov    BYTE PTR [rdx],cl
   1400530d2:	add    al,0x40
   1400530d4:	add    DWORD PTR [rax],eax
   1400530d6:	add    BYTE PTR [rax],al
   1400530d8:	fmul   DWORD PTR [rdx]
   1400530da:	add    al,0x40
   1400530dc:	add    DWORD PTR [rax],eax
   1400530de:	add    BYTE PTR [rax],al
   1400530e0:	loopne 0x1400530ec
   1400530e2:	add    al,0x40
   1400530e4:	add    DWORD PTR [rax],eax
   1400530e6:	add    BYTE PTR [rax],al
   1400530e8:	(bad)  
   1400530e9:	rex.WRX add al,0x40
   1400530ec:	add    DWORD PTR [rax],eax
   1400530ee:	add    BYTE PTR [rax],al
   1400530f0:	jo     0x140053140
   1400530f2:	add    al,0x40
   1400530f4:	add    DWORD PTR [rax],eax
   1400530f6:	add    BYTE PTR [rax],al
   1400530f8:	or     BYTE PTR [rbx],cl
   1400530fa:	add    al,0x40
   1400530fc:	add    DWORD PTR [rax],eax
   1400530fe:	add    BYTE PTR [rax],al
   140053100:	or     BYTE PTR [rsi+0x4],0x40
   140053104:	add    DWORD PTR [rax],eax
   140053106:	add    BYTE PTR [rax],al
   140053108:	pop    rax
   140053109:	or     eax,DWORD PTR [rax+rax*2]
   14005310c:	add    DWORD PTR [rax],eax
   14005310e:	add    BYTE PTR [rax],al
   140053110:	nop
   140053111:	rex.WRX add al,0x40
   140053114:	add    DWORD PTR [rax],eax
   140053116:	add    BYTE PTR [rax],al
   140053118:	push   0x140040b
   14005311d:	add    BYTE PTR [rax],al
   14005311f:	add    BYTE PTR [rax+0x140044e],ah
   140053125:	add    BYTE PTR [rax],al
   140053127:	add    BYTE PTR [rax+0xb],bh
   14005312a:	add    al,0x40
   14005312c:	add    DWORD PTR [rax],eax
   14005312e:	add    BYTE PTR [rax],al
   140053130:	enter  0x40b,0x40
   140053134:	add    DWORD PTR [rax],eax
   140053136:	add    BYTE PTR [rax],al
   140053138:	sbb    BYTE PTR [rsp+rax*1],cl
   14005313b:	rex add DWORD PTR [rax],eax
   14005313e:	add    BYTE PTR [rax],al
   140053140:	mov    al,0x4e
   140053142:	add    al,0x40
   140053144:	add    DWORD PTR [rax],eax
   140053146:	add    BYTE PTR [rax],al
   140053148:	push   0x140040c
   14005314d:	add    BYTE PTR [rax],al
   14005314f:	add    BYTE PTR [rax+0xc],bh
   140053152:	add    al,0x40
   140053154:	add    DWORD PTR [rax],eax
   140053156:	add    BYTE PTR [rax],al
   140053158:	enter  0x40c,0x40
   14005315c:	add    DWORD PTR [rax],eax
   14005315e:	add    BYTE PTR [rax],al
   140053160:	fmul   DWORD PTR [rsp+rax*1]
   140053163:	rex add DWORD PTR [rax],eax
   140053166:	add    BYTE PTR [rax],al
   140053168:	sub    BYTE PTR [rip+0x14004],cl        # 0x140067172
   14005316e:	add    BYTE PTR [rax],al
   140053170:	cmp    BYTE PTR [rip+0x14004],cl        # 0x14006717a
   140053176:	add    BYTE PTR [rax],al
   140053178:	or     rax,0x14004
   14005317e:	add    BYTE PTR [rax],al
   140053180:	pop    rax
   140053181:	or     eax,0x14004
   140053186:	add    BYTE PTR [rax],al
   140053188:	test   al,0xd
   14005318a:	add    al,0x40
   14005318c:	add    DWORD PTR [rax],eax
   14005318e:	add    BYTE PTR [rax],al
   140053190:	clc    
   140053191:	or     eax,0x14004
   140053196:	add    BYTE PTR [rax],al
   140053198:	add    BYTE PTR [rsi],cl
   14005319a:	add    al,0x40
   14005319c:	add    DWORD PTR [rax],eax
   14005319e:	add    BYTE PTR [rax],al
   1400531a0:	or     BYTE PTR [rsi],cl
   1400531a2:	add    al,0x40
   1400531a4:	add    DWORD PTR [rax],eax
   1400531a6:	add    BYTE PTR [rax],al
   1400531a8:	pop    rax
   1400531a9:	(bad)  
   1400531aa:	add    al,0x40
   1400531ac:	add    DWORD PTR [rax],eax
   1400531ae:	add    BYTE PTR [rax],al
   1400531b0:	test   al,0xe
   1400531b2:	add    al,0x40
   1400531b4:	add    DWORD PTR [rax],eax
   1400531b6:	add    BYTE PTR [rax],al
   1400531b8:	mov    eax,0x140040e
   1400531bd:	add    BYTE PTR [rax],al
   1400531bf:	add    BYTE PTR [rax+0x140044e],bh
   1400531c5:	add    BYTE PTR [rax],al
   1400531c7:	add    al,cl
   1400531c9:	(bad)  
   1400531ca:	add    al,0x40
   1400531cc:	add    DWORD PTR [rax],eax
   1400531ce:	add    BYTE PTR [rax],al
   1400531d0:	fmul   DWORD PTR [rsi]
   1400531d2:	add    al,0x40
   1400531d4:	add    DWORD PTR [rax],eax
   1400531d6:	add    BYTE PTR [rax],al
   1400531d8:	in     al,0xe
   1400531da:	add    al,0x40
   1400531dc:	add    DWORD PTR [rax],eax
   1400531de:	add    BYTE PTR [rax],al
   1400531e0:	adc    BYTE PTR [rdi],cl
   1400531e2:	add    al,0x40
   1400531e4:	add    DWORD PTR [rax],eax
   1400531e6:	add    BYTE PTR [rax],al
   1400531e8:	pop    rsp
   1400531e9:	(bad)  
   1400531eb:	rex add DWORD PTR [rax],eax
   1400531ee:	add    BYTE PTR [rax],al
   1400531f0:	js     0x1400531e6
   1400531f2:	add    eax,DWORD PTR [rax+0x1]
   1400531f5:	add    BYTE PTR [rax],al
   1400531f7:	add    BYTE PTR [rax+0x14003f4],ah
   1400531fd:	add    BYTE PTR [rax],al
   1400531ff:	add    BYTE PTR [rsp+rsi*8+0x14003],ch
   140053206:	add    BYTE PTR [rax],al
   140053208:	loopne 0x140053201
   14005320a:	add    eax,DWORD PTR [rax+0x1]
   14005320d:	add    BYTE PTR [rax],al
   14005320f:	add    BYTE PTR [rax],dh
   140053211:	clc    
   140053212:	add    eax,DWORD PTR [rax+0x1]
   140053215:	add    BYTE PTR [rax],al
   140053217:	add    BYTE PTR [rax-0x8],bh
   14005321a:	add    eax,DWORD PTR [rax+0x1]
   14005321d:	add    BYTE PTR [rax],al
   14005321f:	add    ah,al
   140053221:	clc    
   140053222:	add    eax,DWORD PTR [rax+0x1]
   140053225:	add    BYTE PTR [rax],al
   140053227:	add    ah,cl
   140053229:	clc    
   14005322a:	add    eax,DWORD PTR [rax+0x1]
   14005322d:	add    BYTE PTR [rax],al
   14005322f:	add    ah,dh
   140053231:	clc    
   140053232:	add    eax,DWORD PTR [rax+0x1]
   140053235:	add    BYTE PTR [rax],al
   140053237:	add    BYTE PTR [rax],ah
   140053239:	stc    
   14005323a:	add    eax,DWORD PTR [rax+0x1]
   14005323d:	add    BYTE PTR [rax],al
   14005323f:	add    BYTE PTR [rax],dh
   140053241:	stc    
   140053242:	add    eax,DWORD PTR [rax+0x1]
   140053245:	add    BYTE PTR [rax],al
   140053247:	add    BYTE PTR [rax+0x14003f9],al
   14005324d:	add    BYTE PTR [rax],al
   14005324f:	add    BYTE PTR [rax+0x14003f9],dl
   140053255:	add    BYTE PTR [rax],al
   140053257:	add    al,ah
   140053259:	stc    
   14005325a:	add    eax,DWORD PTR [rax+0x1]
   14005325d:	add    BYTE PTR [rax],al
   14005325f:	add    BYTE PTR [rax],dh
   140053261:	cli    
   140053262:	add    eax,DWORD PTR [rax+0x1]
   140053265:	add    BYTE PTR [rax],al
   140053267:	add    BYTE PTR [rax-0x6],al
   14005326a:	add    eax,DWORD PTR [rax+0x1]
   14005326d:	add    BYTE PTR [rax],al
   14005326f:	add    al,ah
   140053271:	cli    
   140053272:	add    eax,DWORD PTR [rax+0x1]
   140053275:	add    BYTE PTR [rax],al
   140053277:	add    al,bh
   140053279:	cli    
   14005327a:	add    eax,DWORD PTR [rax+0x1]
   14005327d:	add    BYTE PTR [rax],al
   14005327f:	add    al,al
   140053281:	rex.WRX add al,0x40
   140053284:	add    DWORD PTR [rax],eax
   140053286:	add    BYTE PTR [rax],al
   140053288:	call   0x141453671
   14005328d:	add    BYTE PTR [rax],al
   14005328f:	add    BYTE PTR [rax],cl
   140053291:	sti    
   140053292:	add    eax,DWORD PTR [rax+0x1]
   140053295:	add    BYTE PTR [rax],al
   140053297:	add    BYTE PTR [rax-0x5],bl
   14005329a:	add    eax,DWORD PTR [rax+0x1]
   14005329d:	add    BYTE PTR [rax],al
   14005329f:	add    BYTE PTR [rax+0x14003fb],ch
   1400532a5:	add    BYTE PTR [rax],al
   1400532a7:	add    BYTE PTR [rax+0x14003fb],bh
   1400532ad:	add    BYTE PTR [rax],al
   1400532af:	add    BYTE PTR [rax],bl
   1400532b1:	cld    
   1400532b2:	add    eax,DWORD PTR [rax+0x1]
   1400532b5:	add    BYTE PTR [rax],al
   1400532b7:	add    BYTE PTR [rax],ch
   1400532b9:	cld    
   1400532ba:	add    eax,DWORD PTR [rax+0x1]
   1400532bd:	add    BYTE PTR [rax],al
   1400532bf:	add    BYTE PTR [rax],bh
   1400532c1:	cld    
   1400532c2:	add    eax,DWORD PTR [rax+0x1]
   1400532c5:	add    BYTE PTR [rax],al
   1400532c7:	add    BYTE PTR [rax+0x14003fc],cl
   1400532cd:	add    BYTE PTR [rax],al
   1400532cf:	add    BYTE PTR [rax],dh
   1400532d1:	rex.WRX add al,0x40
   1400532d4:	add    DWORD PTR [rax],eax
   1400532d6:	add    BYTE PTR [rax],al
   1400532d8:	fdivr  st,st(4)
   1400532da:	add    eax,DWORD PTR [rax+0x1]
   1400532dd:	add    BYTE PTR [rax],al
   1400532df:	add    ah,ah
   1400532e1:	cld    
   1400532e2:	add    eax,DWORD PTR [rax+0x1]
   1400532e5:	add    BYTE PTR [rax],al
   1400532e7:	add    al,dh
   1400532e9:	cld    
   1400532ea:	add    eax,DWORD PTR [rax+0x1]
   1400532ed:	add    BYTE PTR [rax],al
   1400532ef:	add    BYTE PTR [rdi*8+0x14003],dh
   1400532f6:	add    BYTE PTR [rax],al
   1400532f8:	(bad)  
   1400532f9:	std    
   1400532fa:	add    eax,DWORD PTR [rax+0x1]
   1400532fd:	add    BYTE PTR [rax],al
   1400532ff:	add    BYTE PTR [rax-0x3],bh
   140053302:	add    eax,DWORD PTR [rax+0x1]
   140053305:	add    BYTE PTR [rax],al
   140053307:	add    BYTE PTR [rax+0x14003fd],cl
   14005330d:	add    BYTE PTR [rax],al
   14005330f:	add    al,bl
   140053311:	std    
   140053312:	add    eax,DWORD PTR [rax+0x1]
   140053315:	add    BYTE PTR [rax],al
   140053317:	add    BYTE PTR [rax],ch
   140053319:	inc    BYTE PTR [rbx]
   14005331b:	rex add DWORD PTR [rax],eax
   14005331e:	add    BYTE PTR [rax],al
   140053320:	cmp    dh,bh
   140053322:	add    eax,DWORD PTR [rax+0x1]
   140053325:	add    BYTE PTR [rax],al
   140053327:	add    BYTE PTR [rax-0x2],cl
   14005332a:	add    eax,DWORD PTR [rax+0x1]
   14005332d:	add    BYTE PTR [rax],al
   14005332f:	add    BYTE PTR [rax-0x2],ah
   140053332:	add    eax,DWORD PTR [rax+0x1]
   140053335:	add    BYTE PTR [rax],al
   140053337:	add    BYTE PTR [rax-0x2],dh
   14005333a:	add    eax,DWORD PTR [rax+0x1]
   14005333d:	add    BYTE PTR [rax],al
   14005333f:	add    BYTE PTR [rax+0x14003fe],al
   140053345:	add    BYTE PTR [rax],al
   140053347:	add    BYTE PTR [rax+0x14003fe],dl
   14005334d:	add    BYTE PTR [rax],al
   14005334f:	add    BYTE PTR [rax+0x14003fe],ah
   140053355:	add    BYTE PTR [rax],al
   140053357:	add    al,dh
   140053359:	inc    BYTE PTR [rbx]
   14005335b:	rex add DWORD PTR [rax],eax
   14005335e:	add    BYTE PTR [rax],al
   140053360:	add    bh,bh
   140053362:	add    eax,DWORD PTR [rax+0x1]
   140053365:	add    BYTE PTR [rax],al
   140053367:	add    BYTE PTR [rax-0x1],dl
   14005336a:	add    eax,DWORD PTR [rax+0x1]
   14005336d:	add    BYTE PTR [rax],al
   14005336f:	add    BYTE PTR [rax-0x1],ch
   140053372:	add    eax,DWORD PTR [rax+0x1]
   140053375:	add    BYTE PTR [rax],al
   140053377:	add    BYTE PTR [rax],bh
   140053379:	rex.WRX add al,0x40
   14005337c:	add    DWORD PTR [rax],eax
   14005337e:	add    BYTE PTR [rax],al
   140053380:	jo     0x140053381
   140053382:	add    eax,DWORD PTR [rax+0x1]
   140053385:	add    BYTE PTR [rax],al
   140053387:	add    BYTE PTR [rdi+rdi*8+0x14003],bh
   14005338e:	add    BYTE PTR [rax],al
   140053390:	call   0x141453794
   140053395:	add    BYTE PTR [rax],al
   140053397:	add    BYTE PTR [rax+rax*1],dh
   14005339a:	add    al,0x40
   14005339c:	add    DWORD PTR [rax],eax
   14005339e:	add    BYTE PTR [rax],al
   1400533a0:	(bad)  
   1400533a1:	add    BYTE PTR [rax+rax*2],al
   1400533a4:	add    DWORD PTR [rax],eax
   1400533a6:	add    BYTE PTR [rax],al
   1400533a8:	jo     0x1400533aa
   1400533aa:	add    al,0x40
   1400533ac:	add    DWORD PTR [rax],eax
   1400533ae:	add    BYTE PTR [rax],al
   1400533b0:	rol    BYTE PTR [rax],0x4
   1400533b3:	rex add DWORD PTR [rax],eax
   1400533b6:	add    BYTE PTR [rax],al
   1400533b8:	adc    BYTE PTR [rcx],al
   1400533ba:	add    al,0x40
   1400533bc:	add    DWORD PTR [rax],eax
   1400533be:	add    BYTE PTR [rax],al
   1400533c0:	(bad)  
   1400533c1:	add    DWORD PTR [rax+rax*2],eax
   1400533c4:	add    DWORD PTR [rax],eax
   1400533c6:	add    BYTE PTR [rax],al
   1400533c8:	jo     0x1400533cb
   1400533ca:	add    al,0x40
   1400533cc:	add    DWORD PTR [rax],eax
   1400533ce:	add    BYTE PTR [rax],al
   1400533d0:	mov    esp,0x1400401
   1400533d5:	add    BYTE PTR [rax],al
   1400533d7:	add    ah,al
   1400533d9:	add    DWORD PTR [rax+rax*2],eax
   1400533dc:	add    DWORD PTR [rax],eax
   1400533de:	add    BYTE PTR [rax],al
   1400533e0:	in     al,dx
   1400533e1:	add    DWORD PTR [rax+rax*2],eax
   1400533e4:	add    DWORD PTR [rax],eax
   1400533e6:	add    BYTE PTR [rax],al
   1400533e8:	sbb    BYTE PTR [rdx],al
   1400533ea:	add    al,0x40
   1400533ec:	add    DWORD PTR [rax],eax
   1400533ee:	add    BYTE PTR [rax],al
   1400533f0:	and    al,0x2
   1400533f2:	add    al,0x40
   1400533f4:	add    DWORD PTR [rax],eax
   1400533f6:	add    BYTE PTR [rax],al
   1400533f8:	push   rax
   1400533f9:	add    al,BYTE PTR [rax+rax*2]
   1400533fc:	add    DWORD PTR [rax],eax
   1400533fe:	add    BYTE PTR [rax],al
   140053400:	js     0x140053404
   140053402:	add    al,0x40
   140053404:	add    DWORD PTR [rax],eax
   140053406:	add    BYTE PTR [rax],al
   140053408:	enter  0x402,0x40
   14005340c:	add    DWORD PTR [rax],eax
   14005340e:	add    BYTE PTR [rax],al
   140053410:	sbb    BYTE PTR [rbx],al
   140053412:	add    al,0x40
   140053414:	add    DWORD PTR [rax],eax
   140053416:	add    BYTE PTR [rax],al
   140053418:	and    al,0x3
   14005341a:	add    al,0x40
   14005341c:	add    DWORD PTR [rax],eax
   14005341e:	add    BYTE PTR [rax],al
   140053420:	push   rax
   140053421:	add    eax,DWORD PTR [rax+rax*2]
   140053424:	add    DWORD PTR [rax],eax
   140053426:	add    BYTE PTR [rax],al
   140053428:	(bad)  
   140053429:	add    eax,DWORD PTR [rax+rax*2]
   14005342c:	add    DWORD PTR [rax],eax
   14005342e:	add    BYTE PTR [rax],al
   140053430:	mov    al,0x3
   140053432:	add    al,0x40
   140053434:	add    DWORD PTR [rax],eax
   140053436:	add    BYTE PTR [rax],al
   140053438:	cld    
   140053439:	add    eax,DWORD PTR [rax+rax*2]
   14005343c:	add    DWORD PTR [rax],eax
   14005343e:	add    BYTE PTR [rax],al
   140053440:	rex
   140053441:	rex.WRX add al,0x40
   140053444:	add    DWORD PTR [rax],eax
   140053446:	add    BYTE PTR [rax],al
   140053448:	sub    BYTE PTR [rsp+rax*1],al
   14005344b:	rex add DWORD PTR [rax],eax
   14005344e:	add    BYTE PTR [rax],al
   140053450:	jo     0x140053456
   140053452:	add    al,0x40
   140053454:	add    DWORD PTR [rax],eax
   140053456:	add    BYTE PTR [rax],al
   140053458:	rol    BYTE PTR [rsp+rax*1],0x40
   14005345c:	add    DWORD PTR [rax],eax
   14005345e:	add    BYTE PTR [rax],al
   140053460:	adc    BYTE PTR [rip+0x14004],al        # 0x14006746a
   140053466:	add    BYTE PTR [rax],al
   140053468:	sbb    al,0x5
   14005346a:	add    al,0x40
   14005346c:	add    DWORD PTR [rax],eax
   14005346e:	add    BYTE PTR [rax],al
   140053470:	add    rax,0x14004
   140053476:	add    BYTE PTR [rax],al
   140053478:	cwde   
   140053479:	add    eax,0x14004
   14005347e:	add    BYTE PTR [rax],al
   140053480:	in     al,0x5
   140053482:	add    al,0x40
   140053484:	add    DWORD PTR [rax],eax
   140053486:	add    BYTE PTR [rax],al
   140053488:	rex.W
   140053489:	rex.WRX add al,0x40
   14005348c:	add    DWORD PTR [rax],eax
   14005348e:	add    BYTE PTR [rax],al
   140053490:	or     BYTE PTR [rsi],al
   140053492:	add    al,0x40
   140053494:	add    DWORD PTR [rax],eax
   140053496:	add    BYTE PTR [rax],al
   140053498:	rex.WR (bad) 
   14005349a:	add    al,0x40
   14005349c:	add    DWORD PTR [rax],eax
   14005349e:	add    BYTE PTR [rax],al
   1400534a0:	js     0x1400534a8
   1400534a2:	add    al,0x40
   1400534a4:	add    DWORD PTR [rax],eax
   1400534a6:	add    BYTE PTR [rax],al
   1400534a8:	(bad)  
   1400534a9:	(bad)  
   1400534aa:	add    al,0x40
   1400534ac:	add    DWORD PTR [rax],eax
   1400534ae:	add    BYTE PTR [rax],al
   1400534b0:	sbb    al,0x7
   1400534b2:	add    al,0x40
   1400534b4:	add    DWORD PTR [rax],eax
   1400534b6:	add    BYTE PTR [rax],al
   1400534b8:	rex.R (bad) 
   1400534ba:	add    al,0x40
   1400534bc:	add    DWORD PTR [rax],eax
   1400534be:	add    BYTE PTR [rax],al
   1400534c0:	push   rax
   1400534c1:	(bad)  
   1400534c2:	add    al,0x40
   1400534c4:	add    DWORD PTR [rax],eax
   1400534c6:	add    BYTE PTR [rax],al
   1400534c8:	pop    rsp
   1400534c9:	(bad)  
   1400534ca:	add    al,0x40
   1400534cc:	add    DWORD PTR [rax],eax
   1400534ce:	add    BYTE PTR [rax],al
   1400534d0:	mov    BYTE PTR [rdi],al
   1400534d2:	add    al,0x40
   1400534d4:	add    DWORD PTR [rax],eax
	...
   1400534de:	add    BYTE PTR [rax],al
   1400534e0:	jne    0x14005347a
	...
   1400534ee:	add    BYTE PTR [rax],al
   1400534f0:	add    DWORD PTR [rax],eax
   1400534f2:	add    BYTE PTR [rax],al
   1400534f4:	add    al,BYTE PTR [rax]
   1400534f6:	add    BYTE PTR [rax],al
   1400534f8:	add    DWORD PTR [rax],eax
   1400534fa:	add    BYTE PTR [rax],al
   1400534fc:	(bad)  
   1400534fd:	(bad)  
   1400534fe:	(bad)  
   1400534ff:	(bad)  
   140053500:	(bad)  
   140053501:	(bad)  
   140053502:	(bad)  
   140053503:	inc    DWORD PTR [rax]
   140053505:	add    BYTE PTR [rax],al
   140053507:	add    BYTE PTR [rdx],dh
   140053509:	movabs ds:0x5dcd00002b992ddf,al
   140053512:	and    dl,dl
   140053514:	data16 (bad) 
   140053516:	(bad)  
   140053517:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140056000 <.pdata>:
   140056000:	add    BYTE PTR [rax],dl
   140056002:	add    BYTE PTR [rax],al
   140056004:	jae    0x140056016
   140056006:	add    BYTE PTR [rax],al
   140056008:	mov    al,0x56
   14005600a:	add    al,0x0
   14005600c:	adc    BYTE PTR [rax],0x0
   14005600f:	add    bh,al
   140056011:	adc    BYTE PTR [rax],al
   140056013:	add    BYTE PTR [rax-0x38fffbaa],bh
   140056019:	adc    BYTE PTR [rax],al
   14005601b:	add    BYTE PTR [rax+0x11],dh
   14005601e:	add    BYTE PTR [rax],al
   140056020:	enter  0x456,0x0
   140056024:	jo     0x140056037
   140056026:	add    BYTE PTR [rax],al
   140056028:	(bad)  
   140056029:	adc    DWORD PTR [rax],eax
   14005602b:	add    ah,bl
   14005602d:	push   rsi
   14005602e:	add    al,0x0
   140056030:	add    BYTE PTR [rdx],dl
   140056032:	add    BYTE PTR [rax],al
   140056034:	cmp    edx,DWORD PTR [rdx]
   140056036:	add    BYTE PTR [rax],al
   140056038:	rex.WR push rdi
   14005603a:	add    al,0x0
   14005603c:	cmp    edx,DWORD PTR [rdx]
   14005603e:	add    BYTE PTR [rax],al
   140056040:	rex.WRB adc r8b,BYTE PTR [r8]
   140056043:	add    BYTE PTR [rdi+rdx*2+0x4],bl
   140056047:	add    BYTE PTR [rbp+0x12],cl
   14005604a:	add    BYTE PTR [rax],al
   14005604c:	retf   0x12
   14005604f:	add    BYTE PTR [rax+0x57],dh
   140056052:	add    al,0x0
   140056054:	retf   0x12
   140056057:	add    al,ah
   140056059:	adc    al,BYTE PTR [rax]
   14005605b:	add    BYTE PTR [rdi+rdx*2+0x12e00004],al
   140056062:	add    BYTE PTR [rax],al
   140056064:	adc    edx,DWORD PTR [rbx]
   140056066:	add    BYTE PTR [rax],al
   140056068:	xchg   esp,eax
   140056069:	push   rdi
   14005606a:	add    al,0x0
   14005606c:	and    BYTE PTR [rbx],dl
   14005606e:	add    BYTE PTR [rax],al
   140056070:	push   rax
   140056071:	adc    eax,DWORD PTR [rax]
   140056073:	add    BYTE PTR [rdi+rdx*2],dl
   140056076:	add    al,0x0
   140056078:	push   rax
   140056079:	adc    eax,DWORD PTR [rax]
   14005607b:	add    bl,bl
   14005607d:	adc    eax,DWORD PTR [rax]
   14005607f:	add    BYTE PTR [rdi+rdx*2],ah
   140056082:	add    al,0x0
   140056084:	fist   DWORD PTR [rbx]
   140056086:	add    BYTE PTR [rax],al
   140056088:	jmp    0x14005609d
   14005608a:	add    BYTE PTR [rax],al
   14005608c:	cmp    al,0x57
   14005608e:	add    al,0x0
   140056090:	lock adc eax,DWORD PTR [rax]
   140056093:	add    BYTE PTR [rax+0x14],dl
   140056096:	add    BYTE PTR [rax],al
   140056098:	add    BYTE PTR [rdi+0x4],dl
   14005609b:	add    BYTE PTR [rax+0x14],dl
   14005609e:	add    BYTE PTR [rax],al
   1400560a0:	hlt    
   1400560a1:	adc    al,0x0
   1400560a3:	add    al,bh
   1400560a5:	push   rdi
   1400560a6:	add    al,0x0
   1400560a8:	hlt    
   1400560a9:	adc    al,0x0
   1400560ab:	add    BYTE PTR [rdx+0x15],ah
   1400560ae:	add    BYTE PTR [rax],al
   1400560b0:	add    al,0x58
   1400560b2:	add    al,0x0
   1400560b4:	(bad)  
   1400560b5:	adc    eax,0x156d0000
   1400560ba:	add    BYTE PTR [rax],al
   1400560bc:	sbb    BYTE PTR [rax+0x4],bl
   1400560bf:	add    BYTE PTR [rax+0x15],dh
   1400560c2:	add    BYTE PTR [rax],al
   1400560c4:	ss (bad) 
   1400560c6:	add    BYTE PTR [rax],al
   1400560c8:	loopne 0x140056121
   1400560ca:	add    al,0x0
   1400560cc:	rex (bad) 
   1400560ce:	add    BYTE PTR [rax],al
   1400560d0:	out    0x16,al
   1400560d2:	add    BYTE PTR [rax],al
   1400560d4:	int3   
   1400560d5:	push   rdi
   1400560d6:	add    al,0x0
   1400560d8:	lock (bad) 
   1400560da:	add    BYTE PTR [rax],al
   1400560dc:	sahf   
   1400560dd:	(bad)  
   1400560de:	add    BYTE PTR [rax],al
   1400560e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400560e1:	push   rdi
   1400560e2:	add    al,0x0
   1400560e4:	movabs al,ds:0xec00001828000017
   1400560ed:	push   rsi
   1400560ee:	add    al,0x0
   1400560f0:	xor    BYTE PTR [rax],bl
   1400560f2:	add    BYTE PTR [rax],al
   1400560f4:	cwde   
   1400560f5:	sbb    BYTE PTR [rax],al
   1400560f7:	add    BYTE PTR [rax-0x3ffffba9],bh
   1400560fd:	sbb    BYTE PTR [rax],al
   1400560ff:	add    BYTE PTR [rdx],bl
   140056101:	sbb    DWORD PTR [rax],eax
   140056103:	add    ah,al
   140056105:	push   rdi
   140056106:	add    al,0x0
   140056108:	rex sbb DWORD PTR [rax],eax
   14005610b:	add    BYTE PTR [rcx+rbx*1+0x0],bl
   14005610f:	add    BYTE PTR [rax+0x5c000458],ch
   140056115:	sbb    DWORD PTR [rax],eax
   140056117:	add    BYTE PTR [rdx-0x4bffffe6],al
   14005611d:	pop    rax
   14005611e:	add    al,0x0
   140056120:	(bad)  
   140056121:	sbb    al,BYTE PTR [rax]
   140056123:	add    BYTE PTR [rcx-0x27ffffe6],bh
   140056129:	pop    rax
   14005612a:	add    al,0x0
   14005612c:	rcr    BYTE PTR [rdx],0x0
   14005612f:	add    ch,ch
   140056131:	sbb    al,BYTE PTR [rax]
   140056133:	add    BYTE PTR [rax-0xffffba7],ah
   140056139:	sbb    al,BYTE PTR [rax]
   14005613b:	add    BYTE PTR [rip+0xffffffffa800001b],ch        # 0xe805615c
   140056141:	pop    rcx
   140056142:	add    al,0x0
   140056144:	xor    BYTE PTR [rbx],bl
   140056146:	add    BYTE PTR [rax],al
   140056148:	jp     0x140056165
   14005614a:	add    BYTE PTR [rax],al
   14005614c:	rex.R pop rcx
   14005614e:	add    al,0x0
   140056150:	sbb    BYTE PTR [rbx],0x0
   140056153:	add    BYTE PTR [rdx+0x5000001b],dl
   140056159:	pop    rcx
   14005615a:	add    al,0x0
   14005615c:	xchg   edx,eax
   14005615d:	sbb    eax,DWORD PTR [rax]
   14005615f:	add    BYTE PTR [rsi+0x5800001b],bl
   140056165:	pop    rcx
   140056166:	add    al,0x0
   140056168:	sahf   
   140056169:	sbb    eax,DWORD PTR [rax]
   14005616b:	add    dl,cl
   14005616d:	sbb    eax,DWORD PTR [rax]
   14005616f:	add    BYTE PTR [rcx+rbx*2+0x4],ch
   140056173:	add    dl,cl
   140056175:	sbb    eax,DWORD PTR [rax]
   140056177:	add    ah,dh
   140056179:	sbb    eax,DWORD PTR [rax]
   14005617b:	add    BYTE PTR [rax-0xbfffba7],al
   140056181:	sbb    eax,DWORD PTR [rax]
   140056183:	add    BYTE PTR [rdx],al
   140056185:	sbb    al,0x0
   140056187:	add    BYTE PTR [rax+0x10000459],dl
   14005618d:	sbb    al,0x0
   14005618f:	add    BYTE PTR [rbx+0x1c],bh
   140056192:	add    BYTE PTR [rax],al
   140056194:	lock pop rax
   140056196:	add    al,0x0
   140056198:	sbb    BYTE PTR [rax+rax*1],0x0
   14005619c:	test   BYTE PTR [rip+0x58fc0000],bl        # 0x1990161a2
   1400561a2:	add    al,0x0
   1400561a4:	nop
   1400561a5:	sbb    eax,0x1dd00000
   1400561aa:	add    BYTE PTR [rax],al
   1400561ac:	or     BYTE PTR [rcx+0x4],bl
   1400561af:	add    al,dl
   1400561b1:	sbb    eax,0x1ebd0000
   1400561b6:	add    BYTE PTR [rax],al
   1400561b8:	sbb    BYTE PTR [rcx+0x4],bl
   1400561bb:	add    BYTE PTR [rbp+0x4100001e],bh
   1400561c1:	(bad)  
   1400561c2:	add    BYTE PTR [rax],al
   1400561c4:	xor    al,0x59
   1400561c6:	add    al,0x0
   1400561c8:	push   rax
   1400561c9:	(bad)  
   1400561ca:	add    BYTE PTR [rax],al
   1400561cc:	movabs eax,ds:0xb0000458e800001f
   1400561d5:	(bad)  
   1400561d6:	add    BYTE PTR [rax],al
   1400561d8:	mov    cl,0x20
   1400561da:	add    BYTE PTR [rax],al
   1400561dc:	sub    BYTE PTR [rax+0x4],bl
   1400561df:	add    BYTE PTR [rcx-0x18ffffe0],dh
   1400561e5:	and    BYTE PTR [rax],al
   1400561e7:	add    BYTE PTR [rax],bh
   1400561e9:	pop    rax
   1400561ea:	add    al,0x0
   1400561ec:	out    0x20,eax
   1400561ee:	add    BYTE PTR [rax],al
   1400561f0:	repz and BYTE PTR [rax],al
   1400561f3:	add    BYTE PTR [rax+rbx*2+0x4],cl
   1400561f7:	add    bl,dh
   1400561f9:	and    BYTE PTR [rax],al
   1400561fb:	add    BYTE PTR [rcx+0x21],dl
   1400561fe:	add    BYTE PTR [rax],al
   140056200:	(bad)  
   140056201:	pop    rax
   140056202:	add    al,0x0
   140056204:	push   rcx
   140056205:	and    DWORD PTR [rax],eax
   140056207:	add    BYTE PTR [rbx+0x21],bh
   14005620a:	add    BYTE PTR [rax],al
   14005620c:	js     0x140056266
   14005620e:	add    al,0x0
   140056210:	jnp    0x140056233
   140056212:	add    BYTE PTR [rax],al
   140056214:	popf   
   140056215:	and    DWORD PTR [rax],eax
   140056217:	add    BYTE PTR [rax-0x62fffba8],cl
   14005621d:	and    DWORD PTR [rax],eax
   14005621f:	add    BYTE PTR [rcx+riz*1+0x58980000],dh
   140056226:	add    al,0x0
   140056228:	and    al,BYTE PTR [rax]
   14005622b:	add    BYTE PTR [rsp],cl
   14005622e:	add    BYTE PTR [rax],al
   140056230:	enter  0x45a,0x0
   140056234:	adc    BYTE PTR [rax+rax*1],ah
   140056237:	add    BYTE PTR [rsi+0x25],dh
   14005623a:	add    BYTE PTR [rax],al
   14005623c:	mov    al,0x59
   14005623e:	add    al,0x0
   140056240:	adc    BYTE PTR [rsi],ah
   140056242:	add    BYTE PTR [rax],al
   140056244:	pop    rax
   140056245:	sub    DWORD PTR [rax],eax
   140056247:	add    al,dl
   140056249:	pop    rcx
   14005624a:	add    al,0x0
   14005624c:	(bad)  
   14005624d:	sub    DWORD PTR [rax],eax
   14005624f:	add    BYTE PTR [rdi+0x29],dh
   140056252:	add    BYTE PTR [rax],al
   140056254:	adc    al,0x5a
   140056256:	add    al,0x0
   140056258:	ja     0x140056283
   14005625a:	add    BYTE PTR [rax],al
   14005625c:	mov    ebx,0x20000029
   140056261:	pop    rdx
   140056262:	add    al,0x0
   140056264:	mov    ebx,0x50000029
   140056269:	sub    al,BYTE PTR [rax]
   14005626b:	add    BYTE PTR [rdx+rbx*2],dh
   14005626e:	add    al,0x0
   140056270:	push   rax
   140056271:	sub    al,BYTE PTR [rax]
   140056273:	add    BYTE PTR [rsi+0x2a],bl
   140056276:	add    BYTE PTR [rax],al
   140056278:	push   rax
   140056279:	pop    rdx
   14005627a:	add    al,0x0
   14005627c:	pop    rsi
   14005627d:	sub    al,BYTE PTR [rax]
   14005627f:	add    BYTE PTR [rbp+0x6000002a],al
   140056285:	pop    rdx
   140056286:	add    al,0x0
   140056288:	nop
   140056289:	sub    al,BYTE PTR [rax]
   14005628b:	add    al,ch
   14005628d:	sub    al,BYTE PTR [rax]
   14005628f:	add    ah,al
   140056291:	pop    rcx
   140056292:	add    al,0x0
   140056294:	lock sub al,BYTE PTR [rax]
   140056297:	add    BYTE PTR [rcx+0xc00002c],ch
   14005629d:	pop    rdx
   14005629e:	add    al,0x0
   1400562a0:	mov    al,0x2c
   1400562a2:	add    BYTE PTR [rax],al
   1400562a4:	outs   dx,DWORD PTR ds:[rsi]
   1400562a5:	sub    eax,0x5a700000
   1400562aa:	add    al,0x0
   1400562ac:	jo     0x1400562db
   1400562ae:	add    BYTE PTR [rax],al
   1400562b0:	sahf   
   1400562b1:	add    BYTE PTR cs:[rax],al
   1400562b4:	call   0xe0056712
   1400562b9:	add    BYTE PTR cs:[rax],al
   1400562bc:	icebp  
   1400562bd:	add    BYTE PTR cs:[rax],al
   1400562c0:	hlt    
   1400562c1:	pop    rdx
   1400562c2:	add    al,0x0
   1400562c4:	add    BYTE PTR [rdi],ch
   1400562c6:	add    BYTE PTR [rax],al
   1400562c8:	xor    al,0x2f
   1400562ca:	add    BYTE PTR [rax],al
   1400562cc:	jl     0x140056328
   1400562ce:	add    al,0x0
   1400562d0:	xor    al,0x2f
   1400562d2:	add    BYTE PTR [rax],al
   1400562d4:	movsxd esi,DWORD PTR [rax]
   1400562d6:	add    BYTE PTR [rax],al
   1400562d8:	mov    WORD PTR [rdx+0x4],ds
   1400562db:	add    BYTE PTR [rbx+0x30],ah
   1400562de:	add    BYTE PTR [rax],al
   1400562e0:	lea    esi,[rax]
   1400562e2:	add    BYTE PTR [rax],al
   1400562e4:	mov    eax,0xc000045a
   1400562e9:	xor    BYTE PTR [rax],al
   1400562eb:	add    ch,ah
   1400562ed:	xor    BYTE PTR [rax],al
   1400562ef:	add    BYTE PTR [rax+0x5b],ch
   1400562f2:	add    al,0x0
   1400562f4:	in     eax,0x30
   1400562f6:	add    BYTE PTR [rax],al
   1400562f8:	movsxd esi,DWORD PTR [rdx]
   1400562fa:	add    BYTE PTR [rax],al
   1400562fc:	jo     0x140056359
   1400562fe:	add    al,0x0
   140056300:	movsxd esi,DWORD PTR [rdx]
   140056302:	add    BYTE PTR [rax],al
   140056304:	imul   esi,DWORD PTR [rdx],0x5b8c0000
   14005630a:	add    al,0x0
   14005630c:	loopne 0x140056340
   14005630e:	add    BYTE PTR [rax],al
   140056310:	and    DWORD PTR [rbx],esi
   140056312:	add    BYTE PTR [rax],al
   140056314:	xor    al,0x5b
   140056316:	add    al,0x0
   140056318:	and    DWORD PTR [rbx],esi
   14005631a:	add    BYTE PTR [rax],al
   14005631c:	push   rdi
   14005631d:	xor    al,0x0
   14005631f:	add    BYTE PTR [rbx+rbx*2],bh
   140056322:	add    al,0x0
   140056324:	push   rdi
   140056325:	xor    al,0x0
   140056327:	add    BYTE PTR [rsi+0x58000034],bl
   14005632d:	pop    rbx
   14005632e:	add    al,0x0
   140056330:	(bad)  
   140056331:	xor    eax,0x362c0000
   140056336:	add    BYTE PTR [rax],al
   140056338:	add    BYTE PTR [rdx+0x4],bl
   14005633b:	add    BYTE PTR [rax-0x32ffffca],al
   140056341:	add    BYTE PTR ss:[rax],al
   140056344:	cld    
   140056345:	pop    rdx
   140056346:	add    al,0x0
   140056348:	int    0x36
   14005634a:	add    BYTE PTR [rax],al
   14005634c:	xor    DWORD PTR [rdi],0x5b100000
   140056352:	add    al,0x0
   140056354:	xor    DWORD PTR [rdi],0x37d40000
   14005635a:	add    BYTE PTR [rax],al
   14005635c:	and    al,0x5b
   14005635e:	add    al,0x0
   140056360:	add    BYTE PTR [rax],bh
   140056362:	add    BYTE PTR [rax],al
   140056364:	cmp    BYTE PTR fs:[rax],al
   140056367:	add    BYTE PTR [rbx+rbx*2+0x38900004],ah
   14005636e:	add    BYTE PTR [rax],al
   140056370:	mov    ecx,0x9c000038
   140056375:	pop    rbx
   140056376:	add    al,0x0
   140056378:	sar    BYTE PTR [rax],0x0
   14005637b:	add    BYTE PTR [rcx],dh
   14005637d:	cmp    al,BYTE PTR [rax]
   14005637f:	add    al,al
   140056381:	pop    rbx
   140056382:	add    al,0x0
   140056384:	cmp    al,BYTE PTR [rax]
   140056387:	add    BYTE PTR [rsi-0x4bffffc6],ch
   14005638d:	pop    rbx
   14005638e:	add    al,0x0
   140056390:	sar    BYTE PTR [rdx],1
   140056392:	add    BYTE PTR [rax],al
   140056394:	push   rdx
   140056395:	cmp    eax,DWORD PTR [rax]
   140056397:	add    al,ah
   140056399:	pop    rbx
   14005639a:	add    al,0x0
   14005639c:	(bad)  
   14005639d:	cmp    eax,DWORD PTR [rax]
   14005639f:	add    BYTE PTR [rbx+rdi*1+0x0],bh
   1400563a3:	add    ah,ch
   1400563a5:	pop    rbx
   1400563a6:	add    al,0x0
   1400563a8:	jl     0x1400563e5
   1400563aa:	add    BYTE PTR [rax],al
   1400563ac:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400563ad:	cmp    al,0x0
   1400563af:	add    al,bh
   1400563b1:	pop    rbx
   1400563b2:	add    al,0x0
   1400563b4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400563b5:	cmp    al,0x0
   1400563b7:	add    BYTE PTR [rbp+0x1c00003c],bh
   1400563bd:	pop    rsp
   1400563be:	add    al,0x0
   1400563c0:	sar    BYTE PTR [rax+rax*1],0x0
   1400563c4:	in     eax,dx
   1400563c5:	cmp    al,0x0
   1400563c7:	add    BYTE PTR [rsp+rbx*2],ch
   1400563ca:	add    al,0x0
   1400563cc:	lock cmp al,0x0
   1400563cf:	add    BYTE PTR [rcx+0x3d],dl
   1400563d2:	add    BYTE PTR [rax],al
   1400563d4:	xor    al,0x5c
   1400563d6:	add    al,0x0
   1400563d8:	push   rcx
   1400563d9:	cmp    eax,0x3da60000
   1400563de:	add    BYTE PTR [rax],al
   1400563e0:	rex.W pop rsp
   1400563e2:	add    al,0x0
   1400563e4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400563e5:	cmp    eax,0x3de10000
   1400563ea:	add    BYTE PTR [rax],al
   1400563ec:	pop    rsp
   1400563ed:	pop    rsp
   1400563ee:	add    al,0x0
   1400563f0:	lock cmp eax,0x3e3a0000
   1400563f6:	add    BYTE PTR [rax],al
   1400563f8:	ins    BYTE PTR es:[rdi],dx
   1400563f9:	pop    rsp
   1400563fa:	add    al,0x0
   1400563fc:	rex
   1400563fd:	add    BYTE PTR ds:[rax],al
   140056400:	push   rdx
   140056401:	add    BYTE PTR ds:[rax],al
   140056404:	js     0x140056462
   140056406:	add    al,0x0
   140056408:	push   rdx
   140056409:	add    BYTE PTR ds:[rax],al
   14005640c:	pop    rsi
   14005640d:	add    BYTE PTR ds:[rax],al
   140056410:	sbb    BYTE PTR [rsp+rax*1+0x0],0x5e
   140056415:	add    BYTE PTR ds:[rax],al
   140056418:	mov    bh,BYTE PTR [rsi]
   14005641a:	add    BYTE PTR [rax],al
   14005641c:	xchg   esp,eax
   14005641d:	pop    rsp
   14005641e:	add    al,0x0
   140056420:	mov    bh,BYTE PTR [rsi]
   140056422:	add    BYTE PTR [rax],al
   140056424:	mov    ah,0x3e
   140056426:	add    BYTE PTR [rax],al
   140056428:	test   al,0x5c
   14005642a:	add    al,0x0
   14005642c:	mov    ah,0x3e
   14005642e:	add    BYTE PTR [rax],al
   140056430:	ret    0x3e
   140056433:	add    BYTE PTR [rax-0x2ffffba4],bh
   140056439:	add    BYTE PTR ds:[rax],al
   14005643c:	rex.B (bad) 
   14005643e:	add    BYTE PTR [rax],al
   140056440:	sub    al,0x5d
   140056442:	add    al,0x0
   140056444:	push   rax
   140056445:	(bad)  
   140056446:	add    BYTE PTR [rax],al
   140056448:	xchg   edi,eax
   140056449:	(bad)  
   14005644a:	add    BYTE PTR [rax],al
   14005644c:	xor    al,0x5d
   14005644e:	add    al,0x0
   140056450:	movabs al,ds:0xc800003fd600003f
   140056459:	pop    rsp
   14005645a:	add    al,0x0
   14005645c:	(bad)  
   14005645d:	(bad)  
   14005645e:	add    BYTE PTR [rax],al
   140056460:	lea    eax,[rax+0x0]
   140056463:	add    al,ah
   140056465:	pop    rsp
   140056466:	add    al,0x0
   140056468:	lea    eax,[rax+0x0]
   14005646b:	add    BYTE PTR [rcx-0x7ffffc0],ch
   140056471:	pop    rsp
   140056472:	add    al,0x0
   140056474:	test   eax,0xdf000040
   140056479:	add    BYTE PTR [r8],al
   14005647c:	or     BYTE PTR [rbp+0x4],bl
   14005647f:	add    bh,bl
   140056481:	add    BYTE PTR [r8],al
   140056484:	stc    
   140056485:	add    BYTE PTR [r8],al
   140056488:	sbb    al,0x5d
   14005648a:	add    al,0x0
   14005648c:	add    BYTE PTR [rdx+0x0],al
   14005648f:	add    BYTE PTR [rcx+0x40000042],bh
   140056495:	pop    rbp
   140056496:	add    al,0x0
   140056498:	mov    ecx,0x31000042
   14005649d:	rex.XB add BYTE PTR [r8],al
   1400564a0:	rex.WR pop rbp
   1400564a2:	add    al,0x0
   1400564a4:	xor    DWORD PTR [rbx+0x0],eax
   1400564a7:	add    BYTE PTR [rbp+0x64000043],cl
   1400564ad:	pop    rbp
   1400564ae:	add    al,0x0
   1400564b0:	lea    eax,[rbx+0x0]
   1400564b3:	add    BYTE PTR [rip+0x7c000044],dl        # 0x1bc0564fd
   1400564b9:	pop    rbp
   1400564ba:	add    al,0x0
   1400564bc:	adc    eax,0x4a000044
   1400564c1:	add    BYTE PTR [rax],r8b
   1400564c4:	xchg   esp,eax
   1400564c5:	pop    rbp
   1400564c6:	add    al,0x0
   1400564c8:	rex.WX
   1400564c9:	add    BYTE PTR [rax],r8b
   1400564cc:	rex.B
   1400564cd:	add    BYTE PTR [r8],r8b
   1400564d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400564d1:	pop    rbp
   1400564d2:	add    al,0x0
   1400564d4:	rex.B
   1400564d5:	add    BYTE PTR [r8],r8b
   1400564d8:	push   rsi
   1400564d9:	add    BYTE PTR [r8],r8b
   1400564dc:	mov    ah,0x5d
   1400564de:	add    al,0x0
   1400564e0:	loopne 0x140056527
   1400564e2:	add    BYTE PTR [rax],al
   1400564e4:	xor    DWORD PTR [rsi+0x0],eax
   1400564e7:	add    ah,al
   1400564e9:	pop    rbp
   1400564ea:	add    al,0x0
   1400564ec:	xor    DWORD PTR [rsi+0x0],eax
   1400564ef:	add    BYTE PTR [rbp-0x1bffffba],al
   1400564f5:	pop    rbp
   1400564f6:	add    al,0x0
   1400564f8:	test   DWORD PTR [rsi+0x0],eax
   1400564fb:	add    BYTE PTR [rdi+rax*2+0x5df80000],ch
   140056502:	add    al,0x0
   140056504:	rex
   140056505:	rex.W add BYTE PTR [rax],al
   140056508:	rex.W add BYTE PTR fs:[rax],al
   14005650c:	or     BYTE PTR [rsi+0x4],bl
   14005650f:	add    BYTE PTR [rax+0x48],dh
   140056512:	add    BYTE PTR [rax],al
   140056514:	jge    0x14005655e
   140056516:	add    BYTE PTR [rax],al
   140056518:	adc    BYTE PTR [rsi+0x4],bl
   14005651b:	add    BYTE PTR [rbp+0x48],bh
   14005651e:	add    BYTE PTR [rax],al
   140056520:	mov    al,0x4b
   140056522:	add    BYTE PTR [rax],al
   140056524:	sbb    BYTE PTR [rsi+0x4],bl
   140056527:	add    BYTE PTR [rax-0x29ffffb5],dh
   14005652d:	rex.WXB add BYTE PTR [r8],al
   140056530:	rex.W pop rsi
   140056532:	add    al,0x0
   140056534:	loopne 0x140056581
   140056536:	add    BYTE PTR [rax],al
   140056538:	rex.WX
   140056539:	rex.WR add BYTE PTR [rax],r8b
   14005653c:	pop    rax
   14005653d:	pop    rsi
   14005653e:	add    al,0x0
   140056540:	rex.WX
   140056541:	rex.WR add BYTE PTR [rax],r8b
   140056544:	jrcxz  0x140056592
   140056546:	add    BYTE PTR [rax],al
   140056548:	ins    BYTE PTR es:[rdi],dx
   140056549:	pop    rsi
   14005654a:	add    al,0x0
   14005654c:	jrcxz  0x14005659a
   14005654e:	add    BYTE PTR [rax],al
   140056550:	(bad)  
   140056551:	rex.WRB add BYTE PTR [r8],r8b
   140056554:	sbb    BYTE PTR [rsi+0x4],0x0
   140056558:	(bad)  
   140056559:	rex.WRB add BYTE PTR [r8],r8b
   14005655c:	xor    al,0x4f
   14005655e:	add    BYTE PTR [rax],al
   140056560:	nop
   140056561:	pop    rsi
   140056562:	add    al,0x0
   140056564:	xor    al,0x4f
   140056566:	add    BYTE PTR [rax],al
   140056568:	rex.WR
   140056569:	rex.WRXB add BYTE PTR [r8],r8b
   14005656c:	test   al,0x5e
   14005656e:	add    al,0x0
   140056570:	add    BYTE PTR [rax+0x0],dl
   140056573:	add    BYTE PTR [rdi],bl
   140056575:	push   rax
   140056576:	add    BYTE PTR [rax],al
   140056578:	rcr    BYTE PTR [rsi+0x4],0x0
   14005657c:	(bad)  
   14005657d:	push   rax
   14005657e:	add    BYTE PTR [rax],al
   140056580:	lods   eax,DWORD PTR ds:[rsi]
   140056581:	push   rax
   140056582:	add    BYTE PTR [rax],al
   140056584:	enter  0x45e,0x0
   140056588:	lods   eax,DWORD PTR ds:[rsi]
   140056589:	push   rax
   14005658a:	add    BYTE PTR [rax],al
   14005658c:	mov    bl,0x50
   14005658e:	add    BYTE PTR [rax],al
   140056590:	fcomp  QWORD PTR [rsi+0x4]
   140056593:	add    al,al
   140056595:	push   rax
   140056596:	add    BYTE PTR [rax],al
   140056598:	(bad)  
   140056599:	push   rax
   14005659a:	add    BYTE PTR [rax],al
   14005659c:	add    al,0x5f
   14005659e:	add    al,0x0
   1400565a0:	(bad)  
   1400565a1:	push   rax
   1400565a2:	add    BYTE PTR [rax],al
   1400565a4:	jbe    0x1400565f7
   1400565a6:	add    BYTE PTR [rax],al
   1400565a8:	or     al,0x5f
   1400565aa:	add    al,0x0
   1400565ac:	jbe    0x1400565ff
   1400565ae:	add    BYTE PTR [rax],al
   1400565b0:	jl     0x140056603
   1400565b2:	add    BYTE PTR [rax],al
   1400565b4:	and    al,0x5f
   1400565b6:	add    al,0x0
   1400565b8:	adc    BYTE PTR [rcx+0x0],0x0
   1400565bc:	fst    QWORD PTR [rcx+0x0]
   1400565bf:	add    ah,bh
   1400565c1:	pop    rsi
   1400565c2:	add    al,0x0
   1400565c4:	and    BYTE PTR [rdx+0x0],dl
   1400565c7:	add    BYTE PTR [rdx-0x47ffffae],al
   1400565cd:	pop    rsi
   1400565ce:	add    al,0x0
   1400565d0:	nop
   1400565d1:	push   rdx
   1400565d2:	add    BYTE PTR [rax],al
   1400565d4:	outs   dx,DWORD PTR ds:[rsi]
   1400565d5:	push   rbx
   1400565d6:	add    BYTE PTR [rax],al
   1400565d8:	in     al,dx
   1400565d9:	pop    rsi
   1400565da:	add    al,0x0
   1400565dc:	movabs al,ds:0x640000554a000053
   1400565e5:	pop    rdi
   1400565e6:	add    al,0x0
   1400565e8:	push   rax
   1400565e9:	push   rbp
   1400565ea:	add    BYTE PTR [rax],al
   1400565ec:	sbb    DWORD PTR [rax+0x0],0x0
   1400565f0:	rex.W pop rdi
   1400565f2:	add    al,0x0
   1400565f4:	nop
   1400565f5:	pop    rax
   1400565f6:	add    BYTE PTR [rax],al
   1400565f8:	jl     0x140056653
   1400565fa:	add    BYTE PTR [rax],al
   1400565fc:	rex pop rdi
   1400565fe:	add    al,0x0
   140056600:	sbb    BYTE PTR [rcx+0x0],0x0
   140056604:	outs   dx,BYTE PTR ds:[rsi]
   140056605:	pop    rdx
   140056606:	add    BYTE PTR [rax],al
   140056608:	xor    al,0x5f
   14005660a:	add    al,0x0
   14005660c:	jo     0x140056668
   14005660e:	add    BYTE PTR [rax],al
   140056610:	ficomp WORD PTR [rdx+0x0]
   140056613:	add    BYTE PTR [rax-0x21fffba1],dl
   140056619:	pop    rdx
   14005661a:	add    BYTE PTR [rax],al
   14005661c:	(bad)  
   14005661d:	pop    rbx
   14005661e:	add    BYTE PTR [rax],al
   140056620:	pushf  
   140056621:	pop    rdi
   140056622:	add    al,0x0
   140056624:	(bad)  
   140056625:	pop    rbx
   140056626:	add    BYTE PTR [rax],al
   140056628:	sbb    DWORD PTR [rbx+0x0],ebx
   14005662b:	add    BYTE PTR [rax+0x4000045f],dh
   140056631:	pop    rbx
   140056632:	add    BYTE PTR [rax],al
   140056634:	and    BYTE PTR [rax+rax*1+0x0],bl
   140056638:	js     0x140056699
   14005663a:	add    al,0x0
   14005663c:	xor    BYTE PTR [rax+rax*1+0x0],bl
   140056640:	imul   ebx,DWORD PTR [rax+rax*1+0x0],0x45f88
   140056648:	jo     0x1400566a6
   14005664a:	add    BYTE PTR [rax],al
   14005664c:	lods   eax,DWORD PTR ds:[rsi]
   14005664d:	add    BYTE PTR fs:[rax],al
   140056650:	rcr    BYTE PTR [rdi+0x4],0x0
   140056654:	mov    al,0x64
   140056656:	add    BYTE PTR [rax],al
   140056658:	mov    bh,0x65
   14005665a:	add    BYTE PTR [rax],al
   14005665c:	clc    
   14005665d:	pop    rdi
   14005665e:	add    al,0x0
   140056660:	shl    BYTE PTR [rbp+0x0],0x0
   140056664:	mov    gs,WORD PTR [rax+0x0]
   140056667:	add    ah,ch
   140056669:	pop    rdi
   14005666a:	add    al,0x0
   14005666c:	nop
   14005666d:	push   0x69100000
   140056672:	add    BYTE PTR [rax],al
   140056674:	or     BYTE PTR [rax+0x4],ah
   140056677:	add    BYTE PTR [rax],dl
   140056679:	imul   eax,DWORD PTR [rax],0x693400
   14005667f:	add    al,bl
   140056681:	pop    rdi
   140056682:	add    al,0x0
   140056684:	rex imul eax,DWORD PTR [rax],0x69a000
   14005668b:	add    al,ah
   14005668d:	pop    rdi
   14005668e:	add    al,0x0
   140056690:	shr    BYTE PTR [rcx+0x0],0x0
   140056694:	adc    BYTE PTR [rdx+0x0],ch
   140056697:	add    BYTE PTR [rax],ah
   140056699:	(bad)  
   14005669a:	add    al,0x0
   14005669c:	adc    BYTE PTR [rdx+0x0],ch
   14005669f:	add    BYTE PTR [rcx],bl
   1400566a1:	imul   eax,DWORD PTR [rax],0x0
   1400566a4:	sbb    al,0x60
   1400566a6:	add    al,0x0
   1400566a8:	push   rax
   1400566a9:	imul   eax,DWORD PTR [rax],0x0
   1400566ac:	jb     0x140056719
   1400566ae:	add    BYTE PTR [rax],al
   1400566b0:	cwde   
   1400566b1:	(bad)  
   1400566b2:	add    al,0x0
   1400566b4:	jb     0x140056721
   1400566b6:	add    BYTE PTR [rax],al
   1400566b8:	adc    BYTE PTR [rax+rax*1+0x0],ch
   1400566bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400566bd:	(bad)  
   1400566be:	add    al,0x0
   1400566c0:	adc    BYTE PTR [rax+rax*1+0x0],ch
   1400566c4:	cs ins DWORD PTR es:[rdi],dx
   1400566c6:	add    BYTE PTR [rax],al
   1400566c8:	shl    BYTE PTR [rax+0x4],0x0
   1400566cc:	cs ins DWORD PTR es:[rdi],dx
   1400566ce:	add    BYTE PTR [rax],al
   1400566d0:	jns    0x14005673f
   1400566d2:	add    BYTE PTR [rax],al
   1400566d4:	fsub   DWORD PTR [rax+0x4]
   1400566d7:	add    BYTE PTR [rcx+0x6d],bh
   1400566da:	add    BYTE PTR [rax],al
   1400566dc:	xchg   BYTE PTR [rbp+0x0],ch
   1400566df:	add    al,ch
   1400566e1:	(bad)  
   1400566e2:	add    al,0x0
   1400566e4:	xchg   BYTE PTR [rbp+0x0],ch
   1400566e7:	add    BYTE PTR [rbp+0x6d],dh
   1400566ed:	(bad)  
   1400566ee:	add    al,0x0
   1400566f0:	mov    ch,0x6d
   1400566f2:	add    BYTE PTR [rax],al
   1400566f4:	jmp    0x140056763
   1400566f6:	add    BYTE PTR [rax],al
   1400566f8:	adc    BYTE PTR [rcx+0x4],ah
   1400566fb:	add    BYTE PTR [rax],al
   1400566fd:	outs   dx,BYTE PTR ds:[rsi]
   1400566fe:	add    BYTE PTR [rax],al
   140056700:	cmp    al,0x6e
   140056702:	add    BYTE PTR [rax],al
   140056704:	mov    WORD PTR [rax+0x4],fs
   140056707:	add    BYTE PTR [rax+0x6e],al
   14005670a:	add    BYTE PTR [rax],al
   14005670c:	stos   DWORD PTR es:[rdi],eax
   14005670d:	outs   dx,BYTE PTR ds:[rsi]
   14005670e:	add    BYTE PTR [rax],al
   140056710:	push   rsp
   140056711:	(bad)  
   140056712:	add    al,0x0
   140056714:	stos   DWORD PTR es:[rdi],eax
   140056715:	outs   dx,BYTE PTR ds:[rsi]
   140056716:	add    BYTE PTR [rax],al
   140056718:	rex.RXB outs dx,DWORD PTR ds:[rsi]
   14005671a:	add    BYTE PTR [rax],al
   14005671c:	pop    rsp
   14005671d:	(bad)  
   14005671e:	add    al,0x0
   140056720:	rex.RXB outs dx,DWORD PTR ds:[rsi]
   140056722:	add    BYTE PTR [rax],al
   140056724:	pop    rsi
   140056725:	outs   dx,DWORD PTR ds:[rsi]
   140056726:	add    BYTE PTR [rax],al
   140056728:	je     0x14005678a
   14005672a:	add    al,0x0
   14005672c:	nop
   14005672d:	outs   dx,DWORD PTR ds:[rsi]
   14005672e:	add    BYTE PTR [rax],al
   140056730:	(bad)  [rdi+0x0]
   140056733:	add    BYTE PTR [rax+riz*2],ah
   140056736:	add    al,0x0
   140056738:	(bad)  [rdi+0x0]
   14005673b:	add    BYTE PTR [rbx],ch
   14005673d:	jno    0x14005673f
   14005673f:	add    BYTE PTR [rax+riz*2],ch
   140056742:	add    al,0x0
   140056744:	sub    esi,DWORD PTR [rcx+0x0]
   140056747:	add    BYTE PTR [rbx],bh
   140056749:	jno    0x14005674b
   14005674b:	add    BYTE PTR [rax+riz*2+0x4],al
   14005674f:	add    BYTE PTR [rax+0x71],dh
   140056752:	add    BYTE PTR [rax],al
   140056754:	jp     0x1400567cb
   140056756:	add    BYTE PTR [rax],al
   140056758:	sub    BYTE PTR [rcx+0x4],ah
   14005675b:	add    al,dh
   14005675d:	jbe    0x14005675f
   14005675f:	add    BYTE PTR [rax-0xfffff87],al
   140056765:	(bad)  
   140056766:	add    al,0x0
   140056768:	cmp    BYTE PTR [rcx+0x0],0x0
   14005676c:	(bad)  
   14005676d:	jns    0x14005676f
   14005676f:	add    BYTE PTR [rcx+riz*2+0x79d60004],ah
   140056776:	add    BYTE PTR [rax],al
   140056778:	sahf   
   140056779:	jp     0x14005677b
   14005677b:	add    BYTE PTR [rax-0x61fffb9f],bh
   140056781:	jp     0x140056783
   140056783:	add    BYTE PTR [rdi-0x1fffff86],dh
   140056789:	(bad)  
   14005678a:	add    al,0x0
   14005678c:	add    BYTE PTR [rbx+0x0],bh
   14005678f:	add    BYTE PTR [rdx],bl
   140056791:	jnp    0x140056793
   140056793:	add    BYTE PTR [rax],dl
   140056795:	(bad)  
   140056796:	add    al,0x0
   140056798:	sbb    bh,BYTE PTR [rbx+0x0]
   14005679b:	add    BYTE PTR [rbp+0x7c],bl
   14005679e:	add    BYTE PTR [rax],al
   1400567a0:	sub    BYTE PTR [rdx+0x4],ah
   1400567a3:	add    BYTE PTR [rbp+0x7c],bl
   1400567a6:	add    BYTE PTR [rax],al
   1400567a8:	js     0x140056826
   1400567aa:	add    BYTE PTR [rax],al
   1400567ac:	rex (bad) 
   1400567ae:	add    al,0x0
   1400567b0:	js     0x14005682e
   1400567b2:	add    BYTE PTR [rax],al
   1400567b4:	test   al,0x7d
   1400567b6:	add    BYTE PTR [rax],al
   1400567b8:	push   rsp
   1400567b9:	(bad)  
   1400567ba:	add    al,0x0
   1400567bc:	mov    al,0x7e
   1400567be:	add    BYTE PTR [rax],al
   1400567c0:	sbb    BYTE PTR [rdx+0x618c0000],al
   1400567c6:	add    al,0x0
   1400567c8:	nop
   1400567c9:	(bad)  
   1400567ca:	add    BYTE PTR [rax],al
   1400567cc:	loopne 0x140056750
   1400567ce:	add    BYTE PTR [rax],al
   1400567d0:	rex.W (bad) 
   1400567d2:	add    al,0x0
   1400567d4:	loopne 0x140056758
   1400567d6:	add    BYTE PTR [rax],al
   1400567d8:	mov    al,BYTE PTR [rax+rax*1+0x4615000]
   1400567df:	add    BYTE PTR [rdx+0x2d000084],cl
   1400567e5:	test   DWORD PTR [rax],eax
   1400567e7:	add    BYTE PTR [rax+0x61],ch
   1400567ea:	add    al,0x0
   1400567ec:	sub    eax,0x42000085
   1400567f1:	xchg   BYTE PTR [rax],al
   1400567f3:	add    BYTE PTR [rcx+riz*2+0x4],bh
   1400567f7:	add    BYTE PTR [rax-0x79],al
   1400567fa:	add    BYTE PTR [rax],al
   1400567fc:	ror    DWORD PTR [rcx+0x62680000],cl
   140056802:	add    al,0x0
   140056804:	loopne 0x14005678f
   140056806:	add    BYTE PTR [rax],al
   140056808:	stc    
   140056809:	mov    DWORD PTR [rax],eax
   14005680b:	add    al,ah
   14005680d:	fs add al,0x0
   140056810:	add    BYTE PTR [rdx-0x75ef0000],cl
   140056816:	add    BYTE PTR [rax],al
   140056818:	hlt    
   140056819:	fs add al,0x0
   14005681c:	adc    DWORD PTR [rdx-0x757b0000],ecx
   140056822:	add    BYTE PTR [rax],al
   140056824:	add    BYTE PTR [rbp+0x4],ah
   140056827:	add    BYTE PTR [rbp+0x3f00008a],al
   14005682d:	mov    eax,DWORD PTR [rax]
   14005682f:	add    BYTE PTR [riz*2-0x74c0fffc],ah
   140056836:	add    BYTE PTR [rax],al
   140056838:	pop    rbp
   140056839:	mov    eax,DWORD PTR [rax]
   14005683b:	add    BYTE PTR [rax],bh
   14005683d:	gs add al,0x0
   140056840:	pop    rbp
   140056841:	mov    eax,DWORD PTR [rax]
   140056843:	add    BYTE PTR [rbx+rcx*4+0x65480000],dl
   14005684a:	add    al,0x0
   14005684c:	ror    BYTE PTR [rbx-0x73730000],1
   140056852:	add    BYTE PTR [rax],al
   140056854:	add    al,0x66
   140056856:	add    al,0x0
   140056858:	nop
   140056859:	mov    WORD PTR [rax],es
   14005685b:	add    BYTE PTR [rsi-0x7fffff74],ch
   140056861:	(bad)  
   140056862:	add    al,0x0
   140056864:	scas   al,BYTE PTR es:[rdi]
   140056865:	mov    WORD PTR [rax],es
   140056867:	add    cl,bh
   140056869:	mov    WORD PTR [rax],es
   14005686b:	add    BYTE PTR [rdx+riz*2-0x7306fffc],dl
   140056872:	add    BYTE PTR [rax],al
   140056874:	push   rsp
   140056875:	mov    es,WORD PTR [rax]
   140056877:	add    BYTE PTR [rax+0x54000462],ch
   14005687d:	mov    es,WORD PTR [rax]
   14005687f:	add    BYTE PTR [rdi-0x72],ah
   140056882:	add    BYTE PTR [rax],al
   140056884:	mov    esp,0x67000462
   140056889:	mov    es,WORD PTR [rax]
   14005688b:	add    al,bl
   14005688d:	mov    es,WORD PTR [rax]
   14005688f:	add    ah,cl
   140056891:	(bad)  
   140056892:	add    al,0x0
   140056894:	loopne 0x140056824
   140056896:	add    BYTE PTR [rax],al
   140056898:	(bad)  
   140056899:	pop    QWORD PTR [rax]
   14005689b:	add    BYTE PTR [rax+0x62000464],dl
   1400568a1:	pop    QWORD PTR [rax]
   1400568a3:	add    BYTE PTR [rax+rdx*4],ch
   1400568a6:	add    BYTE PTR [rax],al
   1400568a8:	movabs al,ds:0xd80000902c000464
   1400568b1:	nop
   1400568b2:	add    BYTE PTR [rax],al
   1400568b4:	mov    eax,0xd8000464
   1400568b9:	nop
   1400568ba:	add    BYTE PTR [rax],al
   1400568bc:	call   0x110056951
   1400568c1:	fs add al,0x0
   1400568c4:	lock nop
   1400568c6:	add    BYTE PTR [rax],al
   1400568c8:	sub    BYTE PTR [rcx+0x62dc0000],dl
   1400568ce:	add    al,0x0
   1400568d0:	sub    BYTE PTR [rcx-0x6ed00000],dl
   1400568d6:	add    BYTE PTR [rax],al
   1400568d8:	in     al,dx
   1400568d9:	(bad)  
   1400568da:	add    al,0x0
   1400568dc:	xor    BYTE PTR [rcx-0x6c4d0000],dl
   1400568e2:	add    BYTE PTR [rax],al
   1400568e4:	add    al,0x63
   1400568e6:	add    al,0x0
   1400568e8:	mov    bl,0x93
   1400568ea:	add    BYTE PTR [rax],al
   1400568ec:	push   rdx
   1400568ed:	xchg   esp,eax
   1400568ee:	add    BYTE PTR [rax],al
   1400568f0:	movsxd r8d,DWORD PTR [rax+rax*1]
   1400568f4:	push   rdx
   1400568f5:	xchg   esp,eax
   1400568f6:	add    BYTE PTR [rax],al
   1400568f8:	(bad)  
   1400568f9:	xchg   esp,eax
   1400568fa:	add    BYTE PTR [rax],al
   1400568fc:	pop    rsp
   1400568fd:	movsxd eax,DWORD PTR [rax+rax*1]
   140056900:	jo     0x140056896
   140056902:	add    BYTE PTR [rax],al
   140056904:	adc    BYTE PTR [rbp+0x64e80000],dl
   14005690a:	add    al,0x0
   14005690c:	adc    BYTE PTR [rbp-0x6a5b0000],dl
   140056912:	add    BYTE PTR [rax],al
   140056914:	pop    rax
   140056915:	gs add al,0x0
   140056918:	mov    al,0x95
   14005691a:	add    BYTE PTR [rax],al
   14005691c:	loope  0x1400568b3
   14005691e:	add    BYTE PTR [rax],al
   140056920:	rex
   140056921:	fs add al,0x0
   140056924:	loope  0x1400568bb
   140056926:	add    BYTE PTR [rax],al
   140056928:	sub    BYTE PTR [rcx+0x64500000],bl
   14005692e:	add    al,0x0
   140056930:	sub    BYTE PTR [rcx-0x66a90000],bl
   140056936:	add    BYTE PTR [rax],al
   140056938:	js     0x14005699e
   14005693a:	add    al,0x0
   14005693c:	(bad)  
   14005693d:	cdq    
   14005693e:	add    BYTE PTR [rax],al
   140056940:	ficomp DWORD PTR [rcx+0x66180000]
   140056946:	add    al,0x0
   140056948:	ficomp DWORD PTR [rcx-0x65e70000]
   14005694e:	add    BYTE PTR [rax],al
   140056950:	sub    al,0x66
   140056952:	add    al,0x0
   140056954:	sbb    DWORD PTR [rdx-0x65d20000],ebx
   14005695a:	add    BYTE PTR [rax],al
   14005695c:	rex
   14005695d:	data16 add al,0x0
   140056960:	xor    BYTE PTR [rdx-0x659f0000],bl
   140056966:	add    BYTE PTR [rax],al
   140056968:	ins    BYTE PTR es:[rdi],dx
   140056969:	movsxd eax,DWORD PTR [rax+rax*1]
   14005696c:	(bad)  
   14005696d:	(bad)  
   14005696e:	add    BYTE PTR [rax],al
   140056970:	ret    0x9a
   140056973:	add    BYTE PTR [rbx+riz*2+0x4],dh
   140056977:	add    dl,al
   140056979:	(bad)  
   14005697a:	add    BYTE PTR [rax],al
   14005697c:	icebp  
   14005697d:	(bad)  
   14005697e:	add    BYTE PTR [rax],al
   140056980:	mov    WORD PTR [rbx+0x4],fs
   140056983:	add    BYTE PTR [rax],al
   140056985:	fwait
   140056986:	add    BYTE PTR [rax],al
   140056988:	sbb    eax,0x9c00009b
   14005698d:	movsxd eax,DWORD PTR [rax+rax*1]
   140056990:	sbb    eax,0x5800009b
   140056995:	lahf   
   140056996:	add    BYTE PTR [rax],al
   140056998:	lods   al,BYTE PTR ds:[rsi]
   140056999:	movsxd eax,DWORD PTR [rax+rax*1]
   14005699c:	pop    rax
   14005699d:	lahf   
   14005699e:	add    BYTE PTR [rax],al
   1400569a0:	loope  0x140056943
   1400569a2:	add    BYTE PTR [rax],al
   1400569a4:	hlt    
   1400569a5:	movsxd eax,DWORD PTR [rax+rax*1]
   1400569a8:	loope  0x14005694b
   1400569aa:	add    BYTE PTR [rax],al
   1400569ac:	repz movabs eax,ds:0xa1f3000464080000
   1400569b6:	add    BYTE PTR [rax],al
   1400569b8:	int3   
   1400569b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400569ba:	add    BYTE PTR [rax],al
   1400569bc:	sbb    BYTE PTR [rsp+rax*1+0x0],ah
   1400569c0:	int3   
   1400569c1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400569c2:	add    BYTE PTR [rax],al
   1400569c4:	stos   BYTE PTR es:[rdi],al
   1400569c5:	test   al,0x0
   1400569c7:	add    BYTE PTR [rsp+riz*2],ch
   1400569ca:	add    al,0x0
   1400569cc:	shr    BYTE PTR [rax-0x57000000],0x0
   1400569d3:	add    BYTE PTR [rbp+riz*2+0x4],ah
   1400569d7:	add    BYTE PTR [rax],al
   1400569d9:	test   eax,0xa9230000
   1400569de:	add    BYTE PTR [rax],al
   1400569e0:	je     0x140056a47
   1400569e2:	add    al,0x0
   1400569e4:	and    ebp,DWORD PTR [rcx-0x55c20000]
   1400569ea:	add    BYTE PTR [rax],al
   1400569ec:	mov    BYTE PTR [rbp+0x4],ah
   1400569ef:	add    BYTE PTR [rsi],bh
   1400569f1:	stos   BYTE PTR es:[rdi],al
   1400569f2:	add    BYTE PTR [rax],al
   1400569f4:	(bad)  
   1400569f5:	stos   DWORD PTR es:[rdi],eax
   1400569f6:	add    BYTE PTR [rax],al
   1400569f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400569f9:	gs add al,0x0
   1400569fc:	(bad)  
   1400569fd:	stos   DWORD PTR es:[rdi],eax
   1400569fe:	add    BYTE PTR [rax],al
   140056a00:	push   rsp
   140056a01:	stos   DWORD PTR es:[rdi],eax
   140056a02:	add    BYTE PTR [rax],al
   140056a04:	mov    eax,0x54000465
   140056a09:	stos   DWORD PTR es:[rdi],eax
   140056a0a:	add    BYTE PTR [rax],al
   140056a0c:	(bad)  
   140056a0d:	stos   DWORD PTR es:[rdi],eax
   140056a0e:	add    BYTE PTR [rax],al
   140056a10:	enter  0x465,0x0
   140056a14:	(bad)  
   140056a15:	stos   DWORD PTR es:[rdi],eax
   140056a16:	add    BYTE PTR [rax],al
   140056a18:	gs stos DWORD PTR es:[rdi],eax
   140056a1a:	add    BYTE PTR [rax],al
   140056a1c:	call   0x1b0056e86
   140056a21:	stos   DWORD PTR es:[rdi],eax
   140056a22:	add    BYTE PTR [rax],al
   140056a24:	add    al,0xac
   140056a26:	add    BYTE PTR [rax],al
   140056a28:	push   rax
   140056a29:	data16 add al,0x0
   140056a2c:	add    al,0xac
   140056a2e:	add    BYTE PTR [rax],al
   140056a30:	in     al,dx
   140056a31:	lods   eax,DWORD PTR ds:[rsi]
   140056a32:	add    BYTE PTR [rax],al
   140056a34:	fs data16 add al,0x0
   140056a38:	in     al,dx
   140056a39:	lods   eax,DWORD PTR ds:[rsi]
   140056a3a:	add    BYTE PTR [rax],al
   140056a3c:	sti    
   140056a3d:	lods   eax,DWORD PTR ds:[rsi]
   140056a3e:	add    BYTE PTR [rax],al
   140056a40:	jl     0x140056aa8
   140056a42:	add    al,0x0
   140056a44:	sti    
   140056a45:	lods   eax,DWORD PTR ds:[rsi]
   140056a46:	add    BYTE PTR [rax],al
   140056a48:	(bad)  
   140056a49:	scas   al,BYTE PTR es:[rdi]
   140056a4a:	add    BYTE PTR [rax],al
   140056a4c:	mov    WORD PTR [rsi+0x4],fs
   140056a4f:	add    BYTE PTR [rax-0x52],ah
   140056a52:	add    BYTE PTR [rax],al
   140056a54:	fisubr WORD PTR [rsi+0x66a40000]
   140056a5a:	add    al,0x0
   140056a5c:	fisubr WORD PTR [rsi-0x50660000]
   140056a62:	add    BYTE PTR [rax],al
   140056a64:	mov    eax,0x9a000466
   140056a69:	scas   eax,DWORD PTR es:[rdi]
   140056a6a:	add    BYTE PTR [rax],al
   140056a6c:	mov    bl,0xaf
   140056a6e:	add    BYTE PTR [rax],al
   140056a70:	int3   
   140056a71:	data16 add al,0x0
   140056a74:	mov    bl,0xaf
   140056a76:	add    BYTE PTR [rax],al
   140056a78:	cmc    
   140056a79:	scas   eax,DWORD PTR es:[rdi]
   140056a7a:	add    BYTE PTR [rax],al
   140056a7c:	fsub   QWORD PTR [rsi+0x4]
   140056a7f:	add    BYTE PTR [rax],ah
   140056a81:	mov    cl,0x0
   140056a83:	add    BYTE PTR [rdi-0xfffff4a],bl
   140056a89:	data16 add al,0x0
   140056a8c:	movabs al,ds:0x100000b7b60000b6
   140056a95:	addr32 add al,0x0
   140056a98:	mov    dh,0xb7
   140056a9a:	add    BYTE PTR [rax],al
   140056a9c:	(bad)  
   140056a9d:	mov    eax,0x67240000
   140056aa2:	add    al,0x0
   140056aa4:	(bad)  
   140056aa5:	mov    eax,0xb8e70000
   140056aaa:	add    BYTE PTR [rax],al
   140056aac:	cmp    BYTE PTR [rdi+0x4],ah
   140056aaf:	add    al,dh
   140056ab1:	mov    eax,0xb9040000
   140056ab6:	add    BYTE PTR [rax],al
   140056ab8:	fsub   QWORD PTR [rdi+0x4]
   140056abb:	add    BYTE PTR [rcx+rdi*4],al
   140056abe:	add    BYTE PTR [rax],al
   140056ac0:	pushf  
   140056ac1:	mov    ecx,0x67ec0000
   140056ac6:	add    al,0x0
   140056ac8:	pushf  
   140056ac9:	mov    ecx,0xbd080000
   140056ace:	add    BYTE PTR [rax],al
   140056ad0:	or     BYTE PTR [rax+0x4],ch
   140056ad3:	add    BYTE PTR [rax],cl
   140056ad5:	mov    ebp,0xbd2f0000
   140056ada:	add    BYTE PTR [rax],al
   140056adc:	sub    BYTE PTR [rax+0x4],ch
   140056adf:	add    BYTE PTR [rdi],ch
   140056ae1:	mov    ebp,0xbe230000
   140056ae6:	add    BYTE PTR [rax],al
   140056ae8:	cmp    BYTE PTR [rax+0x4],ch
   140056aeb:	add    BYTE PTR [rax-0x42],al
   140056aee:	add    BYTE PTR [rax],al
   140056af0:	pop    rdi
   140056af1:	mov    esi,0x67480000
   140056af6:	add    al,0x0
   140056af8:	pop    rdi
   140056af9:	mov    esi,0xbe830000
   140056afe:	add    BYTE PTR [rax],al
   140056b00:	push   rax
   140056b01:	addr32 add al,0x0
   140056b04:	cmp    DWORD PTR [rsi-0x40890000],0x0
   140056b0b:	add    BYTE PTR [rax+0x67],ch
   140056b0e:	add    al,0x0
   140056b10:	ja     0x140056ad1
   140056b12:	add    BYTE PTR [rax],al
   140056b14:	mov    bh,BYTE PTR [rdi+0x67800000]
   140056b1a:	add    al,0x0
   140056b1c:	mov    bh,BYTE PTR [rdi-0x40670000]
   140056b22:	add    BYTE PTR [rax],al
   140056b24:	nop
   140056b25:	addr32 add al,0x0
   140056b28:	cdq    
   140056b29:	mov    edi,0xbfcf0000
   140056b2e:	add    BYTE PTR [rax],al
   140056b30:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056b31:	addr32 add al,0x0
   140056b34:	iret   
   140056b35:	mov    edi,0xc0230000
   140056b3a:	add    BYTE PTR [rax],al
   140056b3c:	mov    eax,0x23000467
   140056b41:	rol    BYTE PTR [rax],0x0
   140056b44:	rex.W rol BYTE PTR [rax],0x0
   140056b48:	int3   
   140056b49:	addr32 add al,0x0
   140056b4c:	push   rax
   140056b4d:	rol    BYTE PTR [rax],0x0
   140056b50:	inc    eax
   140056b52:	add    BYTE PTR [rax],al
   140056b54:	loopne 0x140056bc1
   140056b56:	add    al,0x0
   140056b58:	add    cl,al
   140056b5a:	add    BYTE PTR [rax],al
   140056b5c:	rol    DWORD PTR gs:[rax],0x0
   140056b60:	rex.W push 0xffffffffc1650004
   140056b66:	add    BYTE PTR [rax],al
   140056b68:	test   ecx,0x68680000
   140056b6e:	add    al,0x0
   140056b70:	test   ecx,0xc4830000
   140056b76:	add    BYTE PTR [rax],al
   140056b78:	sub    BYTE PTR [rax+0x4],0x0
   140056b7c:	loopne 0x140056b42
   140056b7e:	add    BYTE PTR [rax],al
   140056b80:	cmp    ebp,eax
   140056b82:	add    BYTE PTR [rax],al
   140056b84:	or     al,0x69
   140056b86:	add    al,0x0
   140056b88:	(bad)
   140056b8c:	pop    rdi
   140056b8d:	(bad)
   140056b90:	push   0x6000046b
   140056b95:	(bad)
   140056b98:	pop    rbp
   140056b9a:	add    BYTE PTR [rax],al
   140056b9c:	nop
   140056b9d:	push   0xffffffffc58f0004
   140056ba2:	add    BYTE PTR [rax],al
   140056ba4:	mov    ah,0xc5
   140056ba6:	add    BYTE PTR [rax],al
   140056ba8:	movabs al,ds:0xbc0000c5b4000468
   140056bb1:	mov    DWORD PTR [rax],0x468b400
   140056bb7:	add    BYTE PTR [rdi+rax*8-0x38150000],bh
   140056bbe:	add    BYTE PTR [rax],al
   140056bc0:	in     al,dx
   140056bc1:	push   0xffffffffc7eb0004
   140056bc6:	add    BYTE PTR [rax],al
   140056bc8:	cli    
   140056bc9:	mov    DWORD PTR [rax],0x468fc00
   140056bcf:	add    BYTE PTR [rax],al
   140056bd1:	enter  0x0,0x1c
   140056bd5:	enter  0x0,0x18
   140056bd9:	imul   eax,DWORD PTR [rax+rax*1],0xc820
   140056be0:	xor    eax,ecx
   140056be2:	add    BYTE PTR [rax],al
   140056be4:	lods   al,BYTE PTR ds:[rsi]
   140056be5:	imul   eax,DWORD PTR [rax+rax*1],0x31
   140056be9:	enter  0x0,0x98
   140056bed:	enter  0x0,0xb4
   140056bf1:	imul   eax,DWORD PTR [rax+rax*1],0xffffff98
   140056bf5:	enter  0x0,0xa8
   140056bf9:	enter  0x0,0xd0
   140056bfd:	imul   eax,DWORD PTR [rax+rax*1],0xffffffb0
   140056c01:	enter  0x0,0xd1
   140056c05:	enter  0x0,0x60
   140056c09:	imul   eax,DWORD PTR [rax+rax*1],0xffffffe0
   140056c0d:	enter  0x0,0xff
   140056c11:	enter  0x0,0xcc
   140056c15:	push   0x4
   140056c17:	add    bh,bh
   140056c19:	enter  0x0,0x6b
   140056c1d:	leave  
   140056c1e:	add    BYTE PTR [rax],al
   140056c20:	(bad)  
   140056c21:	push   0x4
   140056c23:	add    BYTE PTR [rbx-0x37],ch
   140056c26:	add    BYTE PTR [rax],al
   140056c28:	jno    0x140056bf3
   140056c2a:	add    BYTE PTR [rax],al
   140056c2c:	call   0xc005709b
   140056c31:	leave  
   140056c32:	add    BYTE PTR [rax],al
   140056c34:	mov    al,0xc9
   140056c36:	add    BYTE PTR [rax],al
   140056c38:	and    BYTE PTR [rcx+0x4],ch
   140056c3b:	add    BYTE PTR [rax+0x320000c9],dh
   140056c41:	retf   0x0
   140056c44:	xor    BYTE PTR [rcx+0x4],ch
   140056c47:	add    BYTE PTR [rdx],dh
   140056c49:	retf   0x0
   140056c4c:	ds retf 0x0
   140056c50:	imul   r8d,DWORD PTR [rax+rax*1],0xcaa0
   140056c58:	in     eax,0xcc
   140056c5a:	add    BYTE PTR [rax],al
   140056c5c:	push   rsp
   140056c5d:	imul   eax,DWORD PTR [rax+rax*1],0xccf0
   140056c64:	or     cl,ch
   140056c66:	add    BYTE PTR [rax],al
   140056c68:	je     0x140056cd3
   140056c6a:	add    al,0x0
   140056c6c:	or     cl,ch
   140056c6e:	add    BYTE PTR [rax],al
   140056c70:	jae    0x140056c3f
   140056c72:	add    BYTE PTR [rax],al
   140056c74:	sub    BYTE PTR [rcx+0x4],0x0
   140056c78:	jae    0x140056c47
   140056c7a:	add    BYTE PTR [rax],al
   140056c7c:	jle    0x140056c4b
   140056c7e:	add    BYTE PTR [rax],al
   140056c80:	pushf  
   140056c81:	imul   eax,DWORD PTR [rax+rax*1],0xcdb0
   140056c88:	mov    edi,0xac0000cd
   140056c8d:	imul   eax,DWORD PTR [rax+rax*1],0xcdbf
   140056c94:	gs iret 
   140056c96:	add    BYTE PTR [rax],al
   140056c98:	mov    eax,0x65000469
   140056c9d:	iret   
   140056c9e:	add    BYTE PTR [rax],al
   140056ca0:	mov    bh,cl
   140056ca2:	add    BYTE PTR [rax],al
   140056ca4:	fsubr  QWORD PTR [rcx+0x4]
   140056ca7:	add    BYTE PTR [rax+0xf0000cf],cl
   140056cad:	rol    BYTE PTR [rax],1
   140056caf:	add    al,dh
   140056cb1:	imul   eax,DWORD PTR [rax+rax*1],0xd00f
   140056cb8:	push   rdx
   140056cb9:	rol    BYTE PTR [rax],1
   140056cbb:	add    BYTE PTR [rax],cl
   140056cbd:	push   0x4
   140056cbf:	add    BYTE PTR [rdx-0x30],dl
   140056cc2:	add    BYTE PTR [rax],al
   140056cc4:	rol    DWORD PTR cs:[rax],1
   140056cc7:	add    BYTE PTR [rax],bl
   140056cc9:	push   0x4
   140056ccb:	add    BYTE PTR [rax],dh
   140056ccd:	rol    DWORD PTR [rax],1
   140056ccf:	add    BYTE PTR [rbx+0x2c0000d1],cl
   140056cd5:	push   0x4
   140056cd7:	add    BYTE PTR [rax-0xfffff2f],dl
   140056cdd:	rol    DWORD PTR [rax],1
   140056cdf:	add    BYTE PTR [rax],bh
   140056ce1:	push   0x4
   140056ce3:	add    al,dh
   140056ce5:	rol    DWORD PTR [rax],1
   140056ce7:	add    BYTE PTR [rdx],dh
   140056ce9:	rol    BYTE PTR [rax],cl
   140056ceb:	add    BYTE PTR [rax+0x6b],dh
   140056cee:	add    al,0x0
   140056cf0:	xor    dl,dl
   140056cf2:	add    BYTE PTR [rax],al
   140056cf4:	loope  0x140056cc8
   140056cf6:	add    BYTE PTR [rax],al
   140056cf8:	sub    BYTE PTR [rbx+0x4],0x0
   140056cfc:	loope  0x140056cd0
   140056cfe:	add    BYTE PTR [rax],al
   140056d00:	sti    
   140056d01:	rol    BYTE PTR [rax],cl
   140056d03:	add    BYTE PTR [rbx+rbp*2-0x2cfffffc],bl
   140056d0a:	add    BYTE PTR [rax],al
   140056d0c:	cdq    
   140056d0d:	rol    DWORD PTR [rax],cl
   140056d0f:	add    BYTE PTR [rbx+rbp*2+0x4],cl
   140056d13:	add    BYTE PTR [rax-0x44ffff2d],ah
   140056d19:	rol    DWORD PTR [rax],cl
   140056d1b:	add    al,bh
   140056d1d:	imul   eax,DWORD PTR [rax+rax*1],0xffffffbb
   140056d21:	rol    DWORD PTR [rax],cl
   140056d23:	add    BYTE PTR [rax+0x40000d4],ch
   140056d29:	ins    BYTE PTR es:[rdi],dx
   140056d2a:	add    al,0x0
   140056d2c:	test   al,0xd4
   140056d2e:	add    BYTE PTR [rax],al
   140056d30:	mov    ah,0xd4
   140056d32:	add    BYTE PTR [rax],al
   140056d34:	and    BYTE PTR [rsp+rax*1+0x0],ch
   140056d38:	rcl    ah,0x0
   140056d3b:	add    BYTE PTR [rbp-0x2b],cl
   140056d3e:	add    BYTE PTR [rax],al
   140056d40:	rex push 0x4
   140056d43:	add    BYTE PTR [rax-0x2b],dl
   140056d46:	add    BYTE PTR [rax],al
   140056d48:	or     bl,al
   140056d4a:	add    BYTE PTR [rax],al
   140056d4c:	push   rax
   140056d4d:	push   0x4
   140056d4f:	add    BYTE PTR [rax],dl
   140056d51:	fadd   DWORD PTR [rax]
   140056d53:	add    BYTE PTR [rax],dh
   140056d55:	fadd   DWORD PTR [rax]
   140056d57:	add    BYTE PTR [rax+0x6a],ah
   140056d5a:	add    al,0x0
   140056d5c:	xor    al,bl
   140056d5e:	add    BYTE PTR [rax],al
   140056d60:	adc    al,0xda
   140056d62:	add    BYTE PTR [rax],al
   140056d64:	js     0x140056dd0
   140056d66:	add    al,0x0
   140056d68:	adc    al,0xda
   140056d6a:	add    BYTE PTR [rax],al
   140056d6c:	sub    al,0xdb
   140056d6e:	add    BYTE PTR [rax],al
   140056d70:	xchg   esp,eax
   140056d71:	push   0x4
   140056d73:	add    BYTE PTR [rbx+rbx*8],ch
   140056d76:	add    BYTE PTR [rax],al
   140056d78:	jge    0x140056d55
   140056d7a:	add    BYTE PTR [rax],al
   140056d7c:	test   al,0x6a
   140056d7e:	add    al,0x0
   140056d80:	jge    0x140056d5d
   140056d82:	add    BYTE PTR [rax],al
   140056d84:	sbb    esp,0x6ab80000
   140056d8a:	add    al,0x0
   140056d8c:	nop
   140056d8d:	fadd   QWORD PTR [rax]
   140056d8f:	add    dh,ch
   140056d91:	fadd   QWORD PTR [rax]
   140056d93:	add    al,bh
   140056d95:	push   0x4
   140056d97:	add    dh,ch
   140056d99:	fadd   QWORD PTR [rax]
   140056d9b:	add    dh,al
   140056d9d:	fild   WORD PTR [rax]
   140056d9f:	add    BYTE PTR [rax],cl
   140056da1:	imul   eax,DWORD PTR [rax+rax*1],0xffffffc6
   140056da5:	fild   WORD PTR [rax]
   140056da7:	add    bl,ah
   140056da9:	fild   WORD PTR [rax]
   140056dab:	add    BYTE PTR [rbx+rbp*2],bl
   140056dae:	add    al,0x0
   140056db0:	lock fild WORD PTR [rax]
   140056db3:	add    BYTE PTR [rcx-0x20],ch
   140056db6:	add    BYTE PTR [rax],al
   140056db8:	sub    al,0x6b
   140056dba:	add    al,0x0
   140056dbc:	and    al,0x0
   140056dbf:	add    ch,ch
   140056dc1:	loopne 0x140056dc3
   140056dc3:	add    BYTE PTR [rax],dh
   140056dc5:	ins    BYTE PTR es:[rdi],dx
   140056dc6:	add    al,0x0
   140056dc8:	in     eax,dx
   140056dc9:	loopne 0x140056dcb
   140056dcb:	add    BYTE PTR [rbx],ah
   140056dcd:	jrcxz  0x140056dcf
   140056dcf:	add    BYTE PTR [rax+0x6c],al
   140056dd2:	add    al,0x0
   140056dd4:	and    esp,ebx
   140056dd6:	add    BYTE PTR [rax],al
   140056dd8:	xor    ah,bl
   140056dda:	add    BYTE PTR [rax],al
   140056ddc:	(bad)  
   140056ddd:	ins    BYTE PTR es:[rdi],dx
   140056dde:	add    al,0x0
   140056de0:	rex jrcxz 0x140056de3
   140056de3:	add    BYTE PTR [rbx+0x380000e4],al
   140056de9:	imul   eax,DWORD PTR [rax+rax*1],0xffffff90
   140056ded:	in     al,0x0
   140056def:	add    BYTE PTR [rax-0x1b],bh
   140056df2:	add    BYTE PTR [rax],al
   140056df4:	jo     0x140056e62
   140056df6:	add    al,0x0
   140056df8:	nop
   140056df9:	in     eax,0x0
   140056dfb:	add    BYTE PTR [rcx+0x780000e7],dl
   140056e01:	ins    DWORD PTR es:[rdi],dx
   140056e02:	add    al,0x0
   140056e04:	xchg   ecx,eax
   140056e05:	out    0x0,eax
   140056e07:	add    BYTE PTR [rdx],bl
   140056e09:	jmp    0x1ad9d6e0e
   140056e0e:	add    al,0x0
   140056e10:	and    cl,ch
   140056e12:	add    BYTE PTR [rax],al
   140056e14:	(bad)  
   140056e15:	(bad)  
   140056e16:	add    BYTE PTR [rax],al
   140056e18:	mov    ah,0x6d
   140056e1a:	add    al,0x0
   140056e1c:	rex (bad) 
   140056e1e:	add    BYTE PTR [rax],al
   140056e20:	jo     0x140056e0c
   140056e22:	add    BYTE PTR [rax],al
   140056e24:	shr    BYTE PTR [rbp+0x4],1
   140056e27:	add    BYTE PTR [rax-0x16],dh
   140056e2a:	add    BYTE PTR [rax],al
   140056e2c:	test   edx,ebp
   140056e2e:	add    BYTE PTR [rax],al
   140056e30:	fsubr  QWORD PTR [rbp+0x4]
   140056e33:	add    BYTE PTR [rbp+0x4c0000ea],al
   140056e39:	in     al,dx
   140056e3a:	add    BYTE PTR [rax],al
   140056e3c:	lock ins DWORD PTR es:[rdi],dx
   140056e3e:	add    al,0x0
   140056e40:	rex.WR in al,dx
   140056e42:	add    BYTE PTR [rax],al
   140056e44:	push   rcx
   140056e45:	in     al,dx
   140056e46:	add    BYTE PTR [rax],al
   140056e48:	adc    al,0x6e
   140056e4a:	add    al,0x0
   140056e4c:	push   rcx
   140056e4d:	in     al,dx
   140056e4e:	add    BYTE PTR [rax],al
   140056e50:	pop    rsp
   140056e51:	in     al,dx
   140056e52:	add    BYTE PTR [rax],al
   140056e54:	and    al,0x6e
   140056e56:	add    al,0x0
   140056e58:	(bad)  
   140056e59:	in     al,dx
   140056e5a:	add    BYTE PTR [rax],al
   140056e5c:	ret    
   140056e5d:	in     al,dx
   140056e5e:	add    BYTE PTR [rax],al
   140056e60:	rex.WR outs dx,BYTE PTR ds:[rsi]
   140056e62:	add    al,0x0
   140056e64:	ret    
   140056e65:	in     al,dx
   140056e66:	add    BYTE PTR [rax],al
   140056e68:	(bad)  
   140056e69:	in     eax,dx
   140056e6a:	add    BYTE PTR [rax],al
   140056e6c:	outs   dx,BYTE PTR fs:[rsi]
   140056e6e:	add    al,0x0
   140056e70:	(bad)  
   140056e71:	in     eax,dx
   140056e72:	add    BYTE PTR [rax],al
   140056e74:	jl     0x140056e63
   140056e76:	add    BYTE PTR [rax],al
   140056e78:	js     0x140056ee8
   140056e7a:	add    al,0x0
   140056e7c:	sub    ch,0x0
   140056e7f:	add    BYTE PTR [rdx-0x10],cl
   140056e82:	add    BYTE PTR [rax],al
   140056e84:	xor    al,0x6e
   140056e86:	add    al,0x0
   140056e88:	push   rax
   140056e89:	lock add BYTE PTR [rax],al
   140056e8c:	retf   
   140056e8d:	lock add BYTE PTR [rax],al
   140056e90:	push   rsp
   140056e91:	ins    DWORD PTR es:[rdi],dx
   140056e92:	add    al,0x0
   140056e94:	shl    al,1
   140056e96:	add    BYTE PTR [rax],al
   140056e98:	add    ecx,esi
   140056e9a:	add    BYTE PTR [rax],al
   140056e9c:	ins    BYTE PTR es:[rdi],dx
   140056e9d:	ins    DWORD PTR es:[rdi],dx
   140056e9e:	add    al,0x0
   140056ea0:	adc    cl,dh
   140056ea2:	add    BYTE PTR [rax],al
   140056ea4:	shl    cl,1
   140056ea6:	add    BYTE PTR [rax],al
   140056ea8:	mov    BYTE PTR [rsi+0x4],ch
   140056eab:	add    al,dl
   140056ead:	icebp  
   140056eae:	add    BYTE PTR [rax],al
   140056eb0:	or     al,0xf4
   140056eb2:	add    BYTE PTR [rax],al
   140056eb4:	pushf  
   140056eb5:	outs   dx,BYTE PTR ds:[rsi]
   140056eb6:	add    al,0x0
   140056eb8:	or     al,0xf4
   140056eba:	add    BYTE PTR [rax],al
   140056ebc:	sbb    al,0xf4
   140056ebe:	add    BYTE PTR [rax],al
   140056ec0:	mov    eax,0x2000046e
   140056ec5:	hlt    
   140056ec6:	add    BYTE PTR [rax],al
   140056ec8:	pop    rbp
   140056ec9:	hlt    
   140056eca:	add    BYTE PTR [rax],al
   140056ecc:	mov    BYTE PTR [rsp+rax*1+0x0],ch
   140056ed0:	pop    rbp
   140056ed1:	hlt    
   140056ed2:	add    BYTE PTR [rax],al
   140056ed4:	jno    0x140056eca
   140056ed6:	add    BYTE PTR [rax],al
   140056ed8:	movabs al,ds:0x990000f47100046c
   140056ee1:	test   BYTE PTR [rax],0x0
   140056ee4:	mov    esp,0x9900046c
   140056ee9:	test   BYTE PTR [rax],0x0
   140056eec:	jmp    0x140056ee4
   140056eee:	add    BYTE PTR [rax],al
   140056ef0:	shr    BYTE PTR [rsp+rax*1+0x0],1
   140056ef4:	jmp    0x140056eec
   140056ef6:	add    BYTE PTR [rax],al
   140056ef8:	sub    edi,esi
   140056efa:	add    BYTE PTR [rax],al
   140056efc:	loopne 0x140056f6a
   140056efe:	add    al,0x0
   140056f00:	sub    edi,esi
   140056f02:	add    BYTE PTR [rax],al
   140056f04:	jle    0x140056efd
   140056f06:	add    BYTE PTR [rax],al
   140056f08:	hlt    
   140056f09:	ins    BYTE PTR es:[rdi],dx
   140056f0a:	add    al,0x0
   140056f0c:	xor    bh,0x0
   140056f0f:	add    BYTE PTR [rbx-0x37ffff08],dl
   140056f15:	outs   dx,BYTE PTR ds:[rsi]
   140056f16:	add    al,0x0
   140056f18:	movabs al,ds:0x40000f8d90000f8
   140056f21:	ins    DWORD PTR es:[rdi],dx
   140056f22:	add    al,0x0
   140056f24:	fprem  
   140056f26:	add    BYTE PTR [rax],al
   140056f28:	rex.RB cli 
   140056f2a:	add    BYTE PTR [rax],al
   140056f2c:	adc    BYTE PTR [rbp+0x4],ch
   140056f2f:	add    BYTE PTR [rbp-0x6],al
   140056f32:	add    BYTE PTR [rax],al
   140056f34:	push   rsi
   140056f35:	cli    
   140056f36:	add    BYTE PTR [rax],al
   140056f38:	rex.R ins DWORD PTR es:[rdi],dx
   140056f3a:	add    al,0x0
   140056f3c:	nop
   140056f3d:	cli    
   140056f3e:	add    BYTE PTR [rax],al
   140056f40:	int3   
   140056f41:	cli    
   140056f42:	add    BYTE PTR [rax],al
   140056f44:	fsubr  DWORD PTR [rsi+0x4]
   140056f47:	add    al,ah
   140056f49:	cli    
   140056f4a:	add    BYTE PTR [rax],al
   140056f4c:	sti    
   140056f4d:	cli    
   140056f4e:	add    BYTE PTR [rax],al
   140056f50:	loopne 0x140056fc0
   140056f52:	add    al,0x0
   140056f54:	add    bl,bh
   140056f56:	add    BYTE PTR [rax],al
   140056f58:	xor    al,0xfb
   140056f5a:	add    BYTE PTR [rax],al
   140056f5c:	shr    BYTE PTR [rsi+0x4],1
   140056f5f:	add    BYTE PTR [rax-0x5],al
   140056f62:	add    BYTE PTR [rax],al
   140056f64:	(bad)  
   140056f65:	sti    
   140056f66:	add    BYTE PTR [rax],al
   140056f68:	clc    
   140056f69:	outs   dx,BYTE PTR ds:[rsi]
   140056f6a:	add    al,0x0
   140056f6c:	nop
   140056f6d:	sti    
   140056f6e:	add    BYTE PTR [rax],al
   140056f70:	idiv   ebx
   140056f72:	add    BYTE PTR [rax],al
   140056f74:	call   0x1500573e7
   140056f79:	cld    
   140056f7a:	add    BYTE PTR [rax],al
   140056f7c:	push   rsi
   140056f7d:	inc    BYTE PTR [rax]
   140056f7f:	add    BYTE PTR [rdi+rbp*2],dh
   140056f82:	add    al,0x0
   140056f84:	jo     0x140056f84
   140056f86:	add    BYTE PTR [rax],al
   140056f88:	or     bh,bh
   140056f8a:	add    BYTE PTR [rax],al
   140056f8c:	mov    BYTE PTR [rdi+0x4],ch
   140056f8f:	add    BYTE PTR [rax],ah
   140056f91:	inc    DWORD PTR [rax]
   140056f93:	add    BYTE PTR [rax+0xff],cl
   140056f99:	outs   dx,DWORD PTR ds:[rsi]
   140056f9a:	add    al,0x0
   140056f9c:	mov    bh,bh
   140056f9e:	add    BYTE PTR [rax],al
   140056fa0:	cmc    
   140056fa1:	inc    DWORD PTR [rax]
   140056fa3:	add    BYTE PTR [rax],dl
   140056fa5:	outs   dx,DWORD PTR ds:[rsi]
   140056fa6:	add    al,0x0
   140056fa8:	cmc    
   140056fa9:	inc    DWORD PTR [rax]
   140056fab:	add    BYTE PTR [rip+0x24000100],al        # 0x1640570b1
   140056fb1:	outs   dx,DWORD PTR ds:[rsi]
   140056fb2:	add    al,0x0
   140056fb4:	adc    BYTE PTR [rax],al
   140056fb6:	add    DWORD PTR [rax],eax
   140056fb8:	rex.WRXB add BYTE PTR [r9],r8b
   140056fbb:	add    BYTE PTR [rdi+rbp*2+0x500004],bl
   140056fc2:	add    DWORD PTR [rax],eax
   140056fc4:	jnp    0x140056fc6
   140056fc6:	add    DWORD PTR [rax],eax
   140056fc8:	push   rax
   140056fc9:	outs   dx,DWORD PTR ds:[rsi]
   140056fca:	add    al,0x0
   140056fcc:	jnp    0x140056fce
   140056fce:	add    DWORD PTR [rax],eax
   140056fd0:	fild   DWORD PTR [rax]
   140056fd2:	add    DWORD PTR [rax],eax
   140056fd4:	outs   dx,DWORD PTR fs:[rsi]
   140056fd6:	add    al,0x0
   140056fd8:	fild   DWORD PTR [rax]
   140056fda:	add    DWORD PTR [rax],eax
   140056fdc:	repz add BYTE PTR [rcx],al
   140056fdf:	add    BYTE PTR [rax+0x6f],bh
   140056fe2:	add    al,0x0
   140056fe4:	and    BYTE PTR [rcx],al
   140056fe6:	add    DWORD PTR [rax],eax
   140056fe8:	push   rsi
   140056fe9:	add    DWORD PTR [rcx],eax
   140056feb:	add    ah,cl
   140056fed:	outs   dx,DWORD PTR ds:[rsi]
   140056fee:	add    al,0x0
   140056ff0:	(bad)  
   140056ff1:	add    DWORD PTR [rcx],eax
   140056ff3:	add    BYTE PTR [rsi-0x5bfffefc],dh
   140056ff9:	outs   dx,DWORD PTR ds:[rsi]
   140056ffa:	add    al,0x0
   140056ffc:	rol    BYTE PTR [rcx+rax*1],0x0
   140057000:	mov    DWORD PTR [rip+0x6fc40001],eax        # 0x1afc97007
   140057006:	add    al,0x0
   140057008:	nop
   140057009:	add    eax,0x5be0001
   14005700e:	add    DWORD PTR [rax],eax
   140057010:	(bad)  
   140057011:	outs   dx,DWORD PTR ds:[rsi]
   140057012:	add    al,0x0
   140057014:	lock add eax,0x7350001
   14005701a:	add    DWORD PTR [rax],eax
   14005701c:	in     al,0x6f
   14005701e:	add    al,0x0
   140057020:	rex (bad) 
   140057022:	add    DWORD PTR [rax],eax
   140057024:	or     BYTE PTR [rax],cl
   140057026:	add    DWORD PTR [rax],eax
   140057028:	fsubr  QWORD PTR [rdi+0x4]
   14005702b:	add    al,dh
   14005702d:	or     BYTE PTR [rcx],al
   14005702f:	add    BYTE PTR [rax-0xffffef6],al
   140057035:	outs   dx,DWORD PTR ds:[rsi]
   140057036:	add    al,0x0
   140057038:	adc    BYTE PTR [rbx],cl
   14005703a:	add    DWORD PTR [rax],eax
   14005703c:	(bad)  
   14005703d:	or     eax,DWORD PTR [rcx]
   14005703f:	add    BYTE PTR [rax+0x3f000472],bl
   140057045:	or     eax,DWORD PTR [rcx]
   140057047:	add    BYTE PTR [rbx+rcx*1+0x1],cl
   14005704b:	add    BYTE PTR [rdx+rsi*2+0xb4c0004],ch
   140057052:	add    DWORD PTR [rax],eax
   140057054:	push   rcx
   140057055:	or     al,0x1
   140057057:	add    al,al
   140057059:	jb     0x14005705f
   14005705b:	add    BYTE PTR [rcx+0xc],dl
   14005705e:	add    DWORD PTR [rax],eax
   140057060:	movabs ds:0xa3000472e400010c,eax
   140057069:	or     al,0x1
   14005706b:	add    cl,al
   14005706d:	or     al,0x1
   14005706f:	add    ah,dh
   140057071:	jb     0x140057077
   140057073:	add    al,dh
   140057075:	or     al,0x1
   140057077:	add    cl,al
   140057079:	or     eax,0x72900001
   14005707e:	add    al,0x0
   140057080:	ror    BYTE PTR [rip+0xe0e0001],1        # 0x14e137087
   140057086:	add    DWORD PTR [rax],eax
   140057088:	jo     0x1400570fa
   14005708a:	add    al,0x0
   14005708c:	(bad)  
   14005708d:	(bad)  
   14005708e:	add    DWORD PTR [rax],eax
   140057090:	xor    eax,0x9400010e
   140057095:	jo     0x14005709b
   140057097:	add    BYTE PTR [rip+0x4f00010e],dh        # 0x18f0571ab
   14005709d:	(bad)  
   14005709e:	add    DWORD PTR [rax],eax
   1400570a0:	mov    eax,0x4f000470
   1400570a5:	(bad)  
   1400570a6:	add    DWORD PTR [rax],eax
   1400570a8:	rex.WXB adc BYTE PTR [r9],al
   1400570ab:	add    ah,cl
   1400570ad:	jo     0x1400570b3
   1400570af:	add    BYTE PTR [rbx+0x10],cl
   1400570b2:	add    DWORD PTR [rax],eax
   1400570b4:	jg     0x1400570c6
   1400570b6:	add    DWORD PTR [rax],eax
   1400570b8:	loopne 0x14005712a
   1400570ba:	add    al,0x0
   1400570bc:	jg     0x1400570ce
   1400570be:	add    DWORD PTR [rax],eax
   1400570c0:	fist   WORD PTR [rax]
   1400570c2:	add    DWORD PTR [rax],eax
   1400570c4:	lock jo 0x1400570cb
   1400570c7:	add    bh,bl
   1400570c9:	adc    BYTE PTR [rcx],al
   1400570cb:	add    BYTE PTR [rbp+0x111],bh
   1400570d1:	jno    0x1400570d7
   1400570d3:	add    al,al
   1400570d5:	adc    DWORD PTR [rcx],eax
   1400570d7:	add    BYTE PTR [rdx+rdx*1],dh
   1400570da:	add    DWORD PTR [rax],eax
   1400570dc:	jl     0x140057150
   1400570de:	add    al,0x0
   1400570e0:	adc    al,BYTE PTR [rcx]
   1400570e3:	add    BYTE PTR [rbp+0x6c000112],bh
   1400570e9:	jb     0x1400570ef
   1400570eb:	add    al,al
   1400570ed:	adc    al,BYTE PTR [rcx]
   1400570ef:	add    BYTE PTR [rcx+0x14000117],al
   1400570f5:	jo     0x1400570fb
   1400570f7:	add    BYTE PTR [rcx+0x17000117],al
   1400570fd:	(bad)  
   1400570fe:	add    DWORD PTR [rax],eax
   140057100:	xor    al,0x70
   140057102:	add    al,0x0
   140057104:	(bad)  
   140057105:	(bad)  
   140057106:	add    DWORD PTR [rax],eax
   140057108:	rex.XB (bad) 
   14005710a:	add    DWORD PTR [rax],eax
   14005710c:	(bad)  
   14005710d:	jo     0x140057113
   14005710f:	add    BYTE PTR [rax+0x1e],dh
   140057112:	add    DWORD PTR [rax],eax
   140057114:	xchg   esp,eax
   140057115:	and    DWORD PTR [rcx],eax
   140057117:	add    BYTE PTR [rax],dl
   140057119:	jno    0x14005711f
   14005711b:	add    BYTE PTR [rax+0x54000121],ah
   140057121:	and    al,BYTE PTR [rcx]
   140057123:	add    BYTE PTR [rax+0x54000471],bl
   140057129:	and    al,BYTE PTR [rcx]
   14005712b:	add    BYTE PTR [rbx+0x23],bl
   14005712e:	add    DWORD PTR [rax],eax
   140057130:	(bad)  
   140057131:	jno    0x140057137
   140057133:	add    BYTE PTR [rbx+0x23],bl
   140057136:	add    DWORD PTR [rax],eax
   140057138:	(bad)  
   140057139:	and    al,0x1
   14005713b:	add    al,ch
   14005713d:	jno    0x140057143
   14005713f:	add    BYTE PTR [rdi],dh
   140057141:	and    al,0x1
   140057143:	add    BYTE PTR [rsi],ah
   140057145:	and    eax,0x71fc0001
   14005714a:	add    al,0x0
   14005714c:	es and eax,0x263e0001
   140057152:	add    DWORD PTR [rax],eax
   140057154:	adc    BYTE PTR [rdx+0x4],dh
   140057157:	add    BYTE PTR [rsi],bh
   140057159:	add    DWORD PTR es:[rax],eax
   14005715c:	imul   ebp,DWORD PTR [rdx],0x72240001
   140057162:	add    al,0x0
   140057164:	imul   ebp,DWORD PTR [rdx],0x2b310001
   14005716a:	add    DWORD PTR [rax],eax
   14005716c:	xor    al,0x72
   14005716e:	add    al,0x0
   140057170:	xor    DWORD PTR [rbx],ebp
   140057172:	add    DWORD PTR [rax],eax
   140057174:	jbe    0x1400571a1
   140057176:	add    DWORD PTR [rax],eax
   140057178:	rex.W jb 0x14005717f
   14005717b:	add    BYTE PTR [rsi+0x2b],dh
   14005717e:	add    DWORD PTR [rax],eax
   140057180:	cmc    
   140057181:	add    DWORD PTR cs:[rax],eax
   140057184:	pop    rax
   140057185:	jb     0x14005718b
   140057187:	add    BYTE PTR [rax],al
   140057189:	(bad)  
   14005718a:	add    DWORD PTR [rax],eax
   14005718c:	cmp    BYTE PTR [rcx],dh
   14005718e:	add    DWORD PTR [rax],eax
   140057190:	pop    rax
   140057191:	jno    0x140057197
   140057193:	add    BYTE PTR [rax+0x31],dh
   140057196:	add    DWORD PTR [rax],eax
   140057198:	sbb    esi,DWORD PTR [rdx]
   14005719a:	add    DWORD PTR [rax],eax
   14005719c:	add    al,0x73
   14005719e:	add    al,0x0
   1400571a0:	and    BYTE PTR [rdx],dh
   1400571a2:	add    DWORD PTR [rax],eax
   1400571a4:	xlat   BYTE PTR ds:[rbx]
   1400571a5:	xor    al,BYTE PTR [rcx]
   1400571a7:	add    BYTE PTR [rbx+rsi*2],dl
   1400571aa:	add    al,0x0
   1400571ac:	xlat   BYTE PTR ds:[rbx]
   1400571ad:	xor    al,BYTE PTR [rcx]
   1400571af:	add    cl,bl
   1400571b1:	xor    eax,DWORD PTR [rcx]
   1400571b3:	add    BYTE PTR [rax],ch
   1400571b5:	jae    0x1400571bb
   1400571b7:	add    cl,bl
   1400571b9:	xor    eax,DWORD PTR [rcx]
   1400571bb:	add    ah,dh
   1400571bd:	xor    eax,DWORD PTR [rcx]
   1400571bf:	add    BYTE PTR [rax+0x73],al
   1400571c2:	add    al,0x0
   1400571c4:	add    BYTE PTR [rcx+rax*1],dh
   1400571c7:	add    BYTE PTR [rdi+0x35],ah
   1400571ca:	add    DWORD PTR [rax],eax
   1400571cc:	push   rax
   1400571cd:	jae    0x1400571d3
   1400571cf:	add    BYTE PTR [rdi+0x35],ah
   1400571d2:	add    DWORD PTR [rax],eax
   1400571d4:	and    eax,0x6800013e
   1400571d9:	jae    0x1400571df
   1400571db:	add    BYTE PTR [rax-0x6dfffec2],ah
   1400571e1:	(bad)  
   1400571e2:	add    DWORD PTR [rax],eax
   1400571e4:	je     0x14005725a
   1400571e6:	add    al,0x0
   1400571e8:	lock (bad) 
   1400571ea:	add    DWORD PTR [rax],eax
   1400571ec:	xchg   edx,eax
   1400571ed:	rex add DWORD PTR [rax],eax
   1400571f0:	cld    
   1400571f1:	jae    0x1400571f7
   1400571f3:	add    BYTE PTR [rax-0x1ffffec0],ah
   1400571f9:	add    DWORD PTR [r8],eax
   1400571fc:	rex.R je 0x140057203
   1400571ff:	add    al,ah
   140057201:	add    DWORD PTR [r8],eax
   140057204:	mov    cl,0x42
   140057206:	add    DWORD PTR [rax],eax
   140057208:	shl    BYTE PTR [rsp+rax*1+0x0],1
   14005720c:	rol    BYTE PTR [rdx+0x1],0x0
   140057210:	xchg   ecx,eax
   140057211:	rex.XB add DWORD PTR [r8],eax
   140057214:	fdiv   DWORD PTR [rsp+rax*1+0x0]
   140057218:	movabs al,ds:0x9c000143bc000143
   140057221:	je     0x140057227
   140057223:	add    BYTE PTR [rbx+rax*2+0x45220001],bh
   14005722a:	add    DWORD PTR [rax],eax
   14005722c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005722d:	je     0x140057233
   14005722f:	add    BYTE PTR [rdx],ah
   140057231:	add    DWORD PTR [r8],r8d
   140057234:	sub    BYTE PTR [rbp+0x1],al
   140057237:	add    BYTE PTR [rax+0x30000474],bh
   14005723d:	add    DWORD PTR [r8],r8d
   140057240:	sti    
   140057241:	add    DWORD PTR [r8],r8d
   140057244:	enter  0x474,0x0
   140057248:	add    BYTE PTR [rsi+0x1],al
   14005724b:	add    ah,bh
   14005724d:	rex.RXB add DWORD PTR [r8],r8d
   140057250:	push   rsp
   140057251:	je     0x140057257
   140057253:	add    BYTE PTR [rax],al
   140057255:	add    QWORD PTR [rax],rax
   140057258:	sbb    BYTE PTR [rcx+0x1],cl
   14005725b:	add    BYTE PTR [rax+0x18000473],bl
   140057261:	add    QWORD PTR [r8],rax
   140057264:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140057265:	add    QWORD PTR [r8],rax
   140057268:	lods   al,BYTE PTR ds:[rsi]
   140057269:	jae    0x14005726f
   14005726b:	add    BYTE PTR [rcx+rcx*2+0x4a5f0001],ah
   140057272:	add    DWORD PTR [rax],eax
   140057274:	(bad)  
   140057275:	jae    0x14005727b
   140057277:	add    BYTE PTR [rdi+0x4a],bl
   14005727a:	add    DWORD PTR [rax],eax
   14005727c:	data16 rex.WX add QWORD PTR [rax],rax
   140057280:	(bad)  
   140057281:	jae    0x140057287
   140057283:	add    BYTE PTR [rax+0x4a],dh
   140057286:	add    DWORD PTR [rax],eax
   140057288:	(bad)  
   140057289:	rex.WXB add QWORD PTR [r8],rax
   14005728c:	in     al,dx
   14005728d:	jae    0x140057293
   14005728f:	add    BYTE PTR [rax],dl
   140057291:	rex.WXB add QWORD PTR [r8],rax
   140057294:	pop    rax
   140057295:	rex.WXB add QWORD PTR [r8],rax
   140057298:	or     BYTE PTR [rsp+rax*1+0x0],dh
   14005729c:	pop    rax
   14005729d:	rex.WXB add QWORD PTR [r8],rax
   1400572a0:	fmul   QWORD PTR [rbx+0x1]
   1400572a3:	add    BYTE PTR [rsp+rsi*2],dl
   1400572a6:	add    al,0x0
   1400572a8:	fmul   QWORD PTR [rbx+0x1]
   1400572ab:	add    bl,ah
   1400572ad:	rex.WXB add QWORD PTR [r8],rax
   1400572b0:	sub    al,0x74
   1400572b2:	add    al,0x0
   1400572b4:	lock rex.WXB add QWORD PTR [r8],rax
   1400572b8:	rex.WX
   1400572b9:	add    QWORD PTR [r8],r8
   1400572bc:	mov    WORD PTR [rsp+rax*1+0x0],?
   1400572c0:	jo     0x14005730f
   1400572c2:	add    DWORD PTR [rax],eax
   1400572c4:	sub    BYTE PTR [rsi+0x1],cl
   1400572c7:	add    BYTE PTR [rax+0x30000473],al
   1400572cd:	rex.WRX add QWORD PTR [rax],r8
   1400572d0:	rex.RB
   1400572d1:	rex.WRX add QWORD PTR [rax],r8
   1400572d4:	movabs al,ds:0x6700014e45000475
   1400572dd:	rex.WRX add QWORD PTR [rax],r8
   1400572e0:	mov    ah,0x75
   1400572e2:	add    al,0x0
   1400572e4:	rex.WRX add QWORD PTR [eax],r8
   1400572e8:	popf   
   1400572e9:	rex.WRX add QWORD PTR [rax],r8
   1400572ec:	enter  0x475,0x0
   1400572f0:	popf   
   1400572f1:	rex.WRX add QWORD PTR [rax],r8
   1400572f4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400572f5:	rex.WRX add QWORD PTR [rax],r8
   1400572f8:	fdiv   QWORD PTR [rbp+0x4]
   1400572fb:	add    BYTE PTR [rdi-0x32fffeb2],ah
   140057301:	rex.WRX add QWORD PTR [rax],r8
   140057304:	in     al,dx
   140057305:	jne    0x14005730b
   140057307:	add    BYTE PTR [rax],dl
   140057309:	rex.WRXB add QWORD PTR [r8],r8
   14005730c:	int3   
   14005730d:	push   rbx
   14005730e:	add    DWORD PTR [rax],eax
   140057310:	cmp    BYTE PTR [rsi+0x4],dh
   140057313:	add    ah,cl
   140057315:	push   rbx
   140057316:	add    DWORD PTR [rax],eax
   140057318:	rex.WB push r12
   14005731a:	add    DWORD PTR [rax],eax
   14005731c:	jl     0x140057394
   14005731e:	add    al,0x0
   140057320:	rex.WB push r12
   140057322:	add    DWORD PTR [rax],eax
   140057324:	sahf   
   140057325:	push   rsp
   140057326:	add    DWORD PTR [rax],eax
   140057328:	nop
   140057329:	jbe    0x14005732f
   14005732b:	add    BYTE PTR [rsi-0x5dfffeac],bl
   140057331:	push   rsp
   140057332:	add    DWORD PTR [rax],eax
   140057334:	movabs al,ds:0xe7000154b0000476
   14005733d:	push   rsp
   14005733e:	add    DWORD PTR [rax],eax
   140057340:	mov    ah,0x76
   140057342:	add    al,0x0
   140057344:	out    0x54,eax
   140057346:	add    DWORD PTR [rax],eax
   140057348:	xchg   ebx,eax
   140057349:	push   rdi
   14005734a:	add    DWORD PTR [rax],eax
   14005734c:	enter  0x476,0x0
   140057350:	xchg   ebx,eax
   140057351:	push   rdi
   140057352:	add    DWORD PTR [rax],eax
   140057354:	movabs ds:0xb0000476ec000157,eax
   14005735d:	push   rdi
   14005735e:	add    DWORD PTR [rax],eax
   140057360:	mov    ebp,0x80000159
   140057365:	jne    0x14005736b
   140057367:	add    BYTE PTR [rax+0x5a],dh
   14005736a:	add    DWORD PTR [rax],eax
   14005736c:	and    ebx,DWORD PTR [rbp+0x1]
   14005736f:	add    BYTE PTR [rax],cl
   140057371:	jbe    0x140057377
   140057373:	add    BYTE PTR [rax],dh
   140057375:	pop    rbp
   140057376:	add    DWORD PTR [rax],eax
   140057378:	sbb    BYTE PTR [rsi+0x1],0x0
   14005737c:	cld    
   14005737d:	jne    0x140057383
   14005737f:	add    BYTE PTR [rax-0x2fffea2],al
   140057385:	(bad)  
   140057386:	add    DWORD PTR [rax],eax
   140057388:	loopne 0x1400573fe
   14005738a:	add    al,0x0
   14005738c:	add    BYTE PTR [rcx+0x1],ah
   14005738f:	add    BYTE PTR [rcx+riz*2+0x76fc0001],dl
   140057396:	add    al,0x0
   140057398:	movabs al,ds:0xf4000162a0000161
   1400573a1:	je     0x1400573a7
   1400573a3:	add    BYTE PTR [rax+0x16000162],ah
   1400573a9:	add    DWORD PTR fs:[rax],eax
   1400573ac:	sbb    BYTE PTR [rbp+0x4],dh
   1400573af:	add    BYTE PTR [rsi],dl
   1400573b1:	add    DWORD PTR fs:[rax],eax
   1400573b4:	cmp    ah,BYTE PTR [rcx+rax*1+0x0]
   1400573b8:	rex.R jne 0x1400573bf
   1400573bb:	add    BYTE PTR [rdx],bh
   1400573bd:	add    DWORD PTR fs:[rax],eax
   1400573c0:	sbb    DWORD PTR [rdx+0x1],ebp
   1400573c3:	add    BYTE PTR [rbp+rsi*2+0x4],dl
   1400573c7:	add    BYTE PTR [rax],ah
   1400573c9:	push   0x1
   1400573cb:	add    BYTE PTR [rcx+0x6a],cl
   1400573ce:	add    DWORD PTR [rax],eax
   1400573d0:	cwde   
   1400573d1:	jne    0x1400573d7
   1400573d3:	add    BYTE PTR [rax+0x6500016a],dh
   1400573d9:	imul   eax,DWORD PTR [rcx],0x0
   1400573dc:	jo     0x140057455
   1400573de:	add    al,0x0
   1400573e0:	jo     0x14005744d
   1400573e2:	add    DWORD PTR [rax],eax
   1400573e4:	mov    cl,0x6b
   1400573e6:	add    DWORD PTR [rax],eax
   1400573e8:	rex.WR ja 0x1400573ef
   1400573eb:	add    al,al
   1400573ed:	imul   eax,DWORD PTR [rcx],0x0
   1400573f0:	lods   eax,DWORD PTR ds:[rsi]
   1400573f1:	ins    BYTE PTR es:[rdi],dx
   1400573f2:	add    DWORD PTR [rax],eax
   1400573f4:	adc    BYTE PTR [rdi+0x4],dh
   1400573f7:	add    BYTE PTR [rbp+0x7500016c],ch
   1400573fd:	ins    DWORD PTR es:[rdi],dx
   1400573fe:	add    DWORD PTR [rax],eax
   140057400:	and    al,0x77
   140057402:	add    al,0x0
   140057404:	jne    0x140057473
   140057406:	add    DWORD PTR [rax],eax
   140057408:	fwait
   140057409:	ins    DWORD PTR es:[rdi],dx
   14005740a:	add    DWORD PTR [rax],eax
   14005740c:	cmp    al,0x77
   14005740e:	add    al,0x0
   140057410:	movabs al,ds:0x5400016f4600016d
   140057419:	ja     0x14005741f
   14005741b:	add    BYTE PTR [rax+0x6f],ah
   14005741e:	add    DWORD PTR [rax],eax
   140057420:	fnstenv [rax+0x1]
   140057423:	add    BYTE PTR [rax-0x1ffffb89],al
   140057429:	jo     0x14005742c
   14005742b:	add    dl,dl
   14005742d:	jno    0x140057430
   14005742f:	add    BYTE PTR [rax],cl
   140057431:	js     0x140057437
   140057433:	add    BYTE PTR [rax+0x72],al
   140057436:	add    DWORD PTR [rax],eax
   140057438:	(bad)  
   140057439:	je     0x14005743c
   14005743b:	add    al,ch
   14005743d:	ja     0x140057443
   14005743f:	add    BYTE PTR [rax],dh
   140057441:	je     0x140057444
   140057443:	add    BYTE PTR [rbx-0x63fffe8b],cl
   140057449:	ja     0x14005744f
   14005744b:	add    BYTE PTR [rbx+0x1000175],cl
   140057451:	jbe    0x140057454
   140057453:	add    BYTE PTR [rax+0x1000477],dh
   140057459:	jbe    0x14005745c
   14005745b:	add    BYTE PTR [rax+0x76],dh
   14005745e:	add    DWORD PTR [rax],eax
   140057460:	(bad)  
   140057461:	ja     0x140057467
   140057463:	add    BYTE PTR [rax+0x76],dh
   140057466:	add    DWORD PTR [rax],eax
   140057468:	ja     0x1400574e0
   14005746a:	add    DWORD PTR [rax],eax
   14005746c:	(bad)  
   14005746d:	ja     0x140057473
   14005746f:	add    BYTE PTR [rax-0x5ffffe8a],al
   140057475:	jbe    0x140057478
   140057477:	add    BYTE PTR [rax],ah
   140057479:	js     0x14005747f
   14005747b:	add    BYTE PTR [rax-0x7ffffe8a],ah
   140057481:	ja     0x140057484
   140057483:	add    BYTE PTR [rax+rdi*2],ch
   140057486:	add    al,0x0
   140057488:	xor    BYTE PTR [rdi+0x1],0x0
   14005748c:	mov    ch,0x77
   14005748e:	add    DWORD PTR [rax],eax
   140057490:	rex.R js 0x140057497
   140057493:	add    al,al
   140057495:	ja     0x140057498
   140057497:	add    BYTE PTR [rcx],bl
   140057499:	jns    0x14005749c
   14005749b:	add    BYTE PTR [rax+rdi*2+0x4],dl
   14005749f:	add    BYTE PTR [rax],ah
   1400574a1:	jns    0x1400574a4
   1400574a3:	add    BYTE PTR [rbp+0x6c000179],cl
   1400574a9:	js     0x1400574af
   1400574ab:	add    al,dh
   1400574ad:	jns    0x1400574b0
   1400574af:	add    ah,dh
   1400574b1:	jp     0x1400574b4
   1400574b3:	add    ah,al
   1400574b5:	js     0x1400574bb
   1400574b7:	add    BYTE PTR [rax],al
   1400574b9:	jnp    0x1400574bc
   1400574bb:	add    BYTE PTR [rsi+0x7b],cl
   1400574be:	add    DWORD PTR [rax],eax
   1400574c0:	jl     0x14005753a
   1400574c2:	add    al,0x0
   1400574c4:	rex.WRX jnp 0x1400574c8
   1400574c7:	add    al,al
   1400574c9:	jge    0x1400574cc
   1400574cb:	add    BYTE PTR [rax+rdi*2+0x7dc00004],cl
   1400574d2:	add    DWORD PTR [rax],eax
   1400574d4:	cs jle 0x1400574d8
   1400574d7:	add    BYTE PTR [rax+rdi*2+0x7e300004],dh
   1400574de:	add    DWORD PTR [rax],eax
   1400574e0:	push   rdi
   1400574e1:	jg     0x1400574e4
   1400574e3:	add    al,dl
   1400574e5:	js     0x1400574eb
   1400574e7:	add    BYTE PTR [rdi+0x7f],dl
   1400574ea:	add    DWORD PTR [rax],eax
   1400574ec:	jmp    0x14005746e
   1400574ee:	add    DWORD PTR [rax],eax
   1400574f0:	in     al,0x78
   1400574f2:	add    al,0x0
   1400574f4:	and    BYTE PTR [rcx-0x7cd8ffff],al
   1400574fa:	add    DWORD PTR [rax],eax
   1400574fc:	cld    
   1400574fd:	js     0x140057503
   1400574ff:	add    BYTE PTR [rdi],ah
   140057501:	add    DWORD PTR [rcx],0x0
   140057504:	rex.X mov DWORD PTR [rcx],eax
   140057507:	add    BYTE PTR [rcx+rdi*2],cl
   14005750a:	add    al,0x0
   14005750c:	rex.X mov DWORD PTR [rcx],eax
   14005750f:	add    BYTE PTR [rcx-0x77],ah
   140057512:	add    DWORD PTR [rax],eax
   140057514:	rex.W jns 0x14005751b
   140057517:	add    BYTE PTR [rax-0x77],dh
   14005751a:	add    DWORD PTR [rax],eax
   14005751c:	mov    cs,WORD PTR [rcx+0x7a580001]
   140057522:	add    al,0x0
   140057524:	mov    al,0x89
   140057526:	add    DWORD PTR [rax],eax
   140057528:	test   DWORD PTR [rdx+0x79580001],0x8b000004
   140057532:	add    DWORD PTR [rax],eax
   140057534:	rex.WRXB mov WORD PTR [r9],es
   140057537:	add    BYTE PTR [rax+0x79],ah
   14005753a:	add    al,0x0
   14005753c:	push   rax
   14005753d:	mov    WORD PTR [rcx],es
   14005753f:	add    bl,ch
   140057541:	mov    WORD PTR [rcx],es
   140057543:	add    BYTE PTR [rax+0x7a],dl
   140057546:	add    al,0x0
   140057548:	lock mov WORD PTR [rcx],es
   14005754b:	add    BYTE PTR [rdi],dh
   14005754d:	lea    eax,[rcx]
   14005754f:	add    BYTE PTR [rax+0x79],ch
   140057552:	add    al,0x0
   140057554:	rex lea eax,[rcx]
   140057557:	add    BYTE PTR [rsi+0x7000018d],dl
   14005755d:	jns    0x140057563
   14005755f:	add    BYTE PTR [rsi-0x3cfffe73],dl
   140057565:	lea    eax,[rcx]
   140057567:	add    BYTE PTR [rcx+rdi*2+0x4],bh
   14005756b:	add    bl,al
   14005756d:	lea    eax,[rcx]
   14005756f:	add    dh,cl
   140057571:	lea    eax,[rcx]
   140057573:	add    BYTE PTR [rax-0x2ffffb87],dl
   140057579:	lea    eax,[rcx]
   14005757b:	add    BYTE PTR [rax],bl
   14005757d:	mov    es,WORD PTR [rcx]
   14005757f:	add    BYTE PTR [rax+0x7a],al
   140057582:	add    al,0x0
   140057584:	and    BYTE PTR [rsi-0x715dffff],cl
   14005758a:	add    DWORD PTR [rax],eax
   14005758c:	or     BYTE PTR [rdx+0x4],bh
   14005758f:	add    BYTE PTR [rdx-0x21fffe72],ah
   140057595:	mov    es,WORD PTR [rcx]
   140057597:	add    BYTE PTR [rdx+rdi*2],bl
   14005759a:	add    al,0x0
   14005759c:	fimul  WORD PTR [rsi-0x710cffff]
   1400575a2:	add    DWORD PTR [rax],eax
   1400575a4:	xor    BYTE PTR [rdx+0x4],bh
   1400575a7:	add    BYTE PTR [rax],al
   1400575a9:	pop    QWORD PTR [rcx]
   1400575ab:	add    ah,al
   1400575ad:	xchg   ebx,eax
   1400575ae:	add    DWORD PTR [rax],eax
   1400575b0:	movabs al,ds:0xf4000193d0000479
   1400575b9:	xchg   ebx,eax
   1400575ba:	add    DWORD PTR [rax],eax
   1400575bc:	(bad)  
   1400575bd:	jns    0x1400575c3
   1400575bf:	add    ah,dh
   1400575c1:	xchg   ebx,eax
   1400575c2:	add    DWORD PTR [rax],eax
   1400575c4:	(bad)  
   1400575c5:	xchg   ebp,eax
   1400575c6:	add    DWORD PTR [rax],eax
   1400575c8:	in     al,0x79
   1400575ca:	add    al,0x0
   1400575cc:	(bad)  
   1400575cd:	xchg   ebp,eax
   1400575ce:	add    DWORD PTR [rax],eax
   1400575d0:	pushf  
   1400575d1:	cwde   
   1400575d2:	add    DWORD PTR [rax],eax
   1400575d4:	clc    
   1400575d5:	jns    0x1400575db
   1400575d7:	add    BYTE PTR [rax+0x24000198],ah
   1400575dd:	cdq    
   1400575de:	add    DWORD PTR [rax],eax
   1400575e0:	(bad)  
   1400575e1:	jp     0x1400575e7
   1400575e3:	add    BYTE PTR [rax],dh
   1400575e5:	cdq    
   1400575e6:	add    DWORD PTR [rax],eax
   1400575e8:	push   rbp
   1400575e9:	cdq    
   1400575ea:	add    DWORD PTR [rax],eax
   1400575ec:	jo     0x140057668
   1400575ee:	add    al,0x0
   1400575f0:	push   rbp
   1400575f1:	cdq    
   1400575f2:	add    DWORD PTR [rax],eax
   1400575f4:	fs cdq 
   1400575f6:	add    DWORD PTR [rax],eax
   1400575f8:	jl     0x140057674
   1400575fa:	add    al,0x0
   1400575fc:	fs cdq 
   1400575fe:	add    DWORD PTR [rax],eax
   140057600:	(bad)  
   140057601:	(bad)  
   140057602:	add    DWORD PTR [rax],eax
   140057604:	nop
   140057605:	jp     0x14005760b
   140057607:	add    BYTE PTR [rsi],bl
   140057609:	(bad)  
   14005760a:	add    DWORD PTR [rax],eax
   14005760c:	(bad)  
   14005760d:	(bad)  
   14005760e:	add    DWORD PTR [rax],eax
   140057610:	test   al,0x7a
   140057612:	add    al,0x0
   140057614:	(bad)  
   140057615:	(bad)  
   140057616:	add    DWORD PTR [rax],eax
   140057618:	xchg   esi,eax
   140057619:	(bad)  
   14005761a:	add    DWORD PTR [rax],eax
   14005761c:	mov    eax,0x9600047a
   140057621:	(bad)  
   140057622:	add    DWORD PTR [rax],eax
   140057624:	movabs eax,ds:0xb000047acc00019a
   14005762d:	(bad)  
   14005762e:	add    DWORD PTR [rax],eax
   140057630:	js     0x1400575d0
   140057632:	add    DWORD PTR [rax],eax
   140057634:	in     al,0x7a
   140057636:	add    al,0x0
   140057638:	sbb    BYTE PTR [rsi-0x6162ffff],0x1
   14005763f:	add    BYTE PTR [rbx+rdi*2],al
   140057642:	add    al,0x0
   140057644:	movabs al,ds:0xc00019ec100019e
   14005764d:	jnp    0x140057653
   14005764f:	add    al,dl
   140057651:	sahf   
   140057652:	add    DWORD PTR [rax],eax
   140057654:	or     eax,0x1c00019f
   140057659:	jnp    0x14005765f
   14005765b:	add    BYTE PTR [rax],dl
   14005765d:	lahf   
   14005765e:	add    DWORD PTR [rax],eax
   140057660:	mov    bh,0x9f
   140057662:	add    DWORD PTR [rax],eax
   140057664:	adc    al,0x7b
   140057666:	add    al,0x0
   140057668:	rcr    BYTE PTR [rdi-0x5fe9ffff],0x1
   14005766f:	add    BYTE PTR [rbx+rdi*2],ah
   140057672:	add    al,0x0
   140057674:	and    BYTE PTR [rax-0x5ab6ffff],ah
   14005767a:	add    DWORD PTR [rax],eax
   14005767c:	fdivr  QWORD PTR [rdx+0x4]
   14005767f:	add    BYTE PTR [rax-0x5b],dl
   140057682:	add    DWORD PTR [rax],eax
   140057684:	pop    rbp
   140057685:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140057686:	add    DWORD PTR [rax],eax
   140057688:	xor    al,0x7b
   14005768a:	add    al,0x0
   14005768c:	pop    rbp
   14005768d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005768e:	add    DWORD PTR [rax],eax
   140057690:	(bad)  
   140057691:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140057692:	add    DWORD PTR [rax],eax
   140057694:	rex jnp 0x14005769b
   140057697:	add    BYTE PTR [rdx-0x5afffe5a],bl
   14005769d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005769e:	add    DWORD PTR [rax],eax
   1400576a0:	pop    rsp
   1400576a1:	jnp    0x1400576a7
   1400576a3:	add    BYTE PTR [rbp+0x460001a7],ah
   1400576a9:	test   al,0x1
   1400576ab:	add    BYTE PTR [rax+0x7b],dh
   1400576ae:	add    al,0x0
   1400576b0:	rex.RX test al,0x1
   1400576b3:	add    dl,dl
   1400576b5:	test   eax,0x7b840001
   1400576ba:	add    al,0x0
   1400576bc:	loopne 0x140057667
   1400576be:	add    DWORD PTR [rax],eax
   1400576c0:	mov    ah,0xaa
   1400576c2:	add    DWORD PTR [rax],eax
   1400576c4:	xchg   esp,eax
   1400576c5:	jnp    0x1400576cb
   1400576c7:	add    al,al
   1400576c9:	stos   BYTE PTR es:[rdi],al
   1400576ca:	add    DWORD PTR [rax],eax
   1400576cc:	(bad)  
   1400576cd:	stos   BYTE PTR es:[rdi],al
   1400576ce:	add    DWORD PTR [rax],eax
   1400576d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400576d1:	jnp    0x1400576d7
   1400576d3:	add    dl,ch
   1400576d5:	stos   BYTE PTR es:[rdi],al
   1400576d6:	add    DWORD PTR [rax],eax
   1400576d8:	fisubr WORD PTR [rbx+0x7bac0001]
   1400576de:	add    al,0x0
   1400576e0:	fisubr WORD PTR [rbx-0x541bffff]
   1400576e6:	add    DWORD PTR [rax],eax
   1400576e8:	(bad)  
   1400576e9:	jnp    0x1400576ef
   1400576eb:	add    al,dh
   1400576ed:	stos   DWORD PTR es:[rdi],eax
   1400576ee:	add    DWORD PTR [rax],eax
   1400576f0:	add    DWORD PTR [rcx+rax*1+0x47bd400],ebp
   1400576f7:	add    BYTE PTR [rcx],al
   1400576f9:	lods   al,BYTE PTR ds:[rsi]
   1400576fa:	add    DWORD PTR [rax],eax
   1400576fc:	pop    rax
   1400576fd:	lods   al,BYTE PTR ds:[rsi]
   1400576fe:	add    DWORD PTR [rax],eax
   140057700:	loopne 0x14005777d
   140057702:	add    al,0x0
   140057704:	pop    rax
   140057705:	lods   al,BYTE PTR ds:[rsi]
   140057706:	add    DWORD PTR [rax],eax
   140057708:	mov    al,0x1
   14005770b:	add    ah,bh
   14005770d:	jnp    0x140057713
   14005770f:	add    BYTE PTR [rax-0x50],al
   140057712:	add    DWORD PTR [rax],eax
   140057714:	data16 mov al,0x1
   140057717:	add    BYTE PTR [rsp+rdi*2],ch
   14005771a:	add    al,0x0
   14005771c:	data16 mov al,0x1
   14005771f:	add    dl,ah
   140057721:	mov    al,0x1
   140057723:	add    BYTE PTR [rsp+rdi*2],bh
   140057726:	add    al,0x0
   140057728:	lock mov al,0x1
   14005772b:	add    BYTE PTR [rsi-0x77fffe4f],ch
   140057731:	jg     0x140057737
   140057733:	add    al,dh
   140057735:	mov    cl,0x1
   140057737:	add    BYTE PTR [rcx-0x4e],al
   14005773a:	add    DWORD PTR [rax],eax
   14005773c:	adc    BYTE PTR [rdi+0x4],bh
   14005773f:	add    BYTE PTR [rax-0x4e],dl
   140057742:	add    DWORD PTR [rax],eax
   140057744:	jmp    0x15c0578fb
   140057749:	jg     0x14005774f
   14005774b:	add    BYTE PTR [rax-0x4c],dl
   14005774e:	add    DWORD PTR [rax],eax
   140057750:	fdiv   QWORD PTR [rcx+rax*1+0x47c4c00]
   140057757:	add    ah,bl
   140057759:	mov    ah,0x1
   14005775b:	add    bh,ch
   14005775d:	mov    ch,0x1
   14005775f:	add    BYTE PTR [rsp+rdi*2+0x4],bl
   140057763:	add    bh,ch
   140057765:	mov    ch,0x1
   140057767:	add    bh,bh
   140057769:	mov    ch,0x1
   14005776b:	add    BYTE PTR [rax+0x7c],bh
   14005776e:	add    al,0x0
   140057770:	add    BYTE PTR [rsi-0x49e6ffff],dh
   140057776:	add    DWORD PTR [rax],eax
   140057778:	pushf  
   140057779:	jl     0x14005777f
   14005777b:	add    BYTE PTR [rcx],bl
   14005777d:	mov    dh,0x1
   14005777f:	add    BYTE PTR [rsi],cl
   140057781:	mov    eax,0x7cb00001
   140057786:	add    al,0x0
   140057788:	(bad)  
   140057789:	mov    eax,0xb8c90001
   14005778e:	add    DWORD PTR [rax],eax
   140057790:	enter  0x47c,0x0
   140057794:	sar    BYTE PTR [rax-0x44fdffff],1
   14005779a:	add    DWORD PTR [rax],eax
   14005779c:	mov    BYTE PTR [rsp+rax*1+0x0],bh
   1400577a0:	adc    BYTE PTR [rbx-0x444cffff],bh
   1400577a6:	add    DWORD PTR [rax],eax
   1400577a8:	fdivr  DWORD PTR [rsp+rax*1+0x0]
   1400577ac:	sar    BYTE PTR [rcx+rax*1+0x1bd5f00],1
   1400577b3:	add    al,ah
   1400577b5:	jl     0x1400577bb
   1400577b7:	add    BYTE PTR [rdi-0x43],bl
   1400577ba:	add    DWORD PTR [rax],eax
   1400577bc:	xchg   ebp,eax
   1400577bd:	mov    ebp,0x7d140001
   1400577c2:	add    al,0x0
   1400577c4:	xchg   ebp,eax
   1400577c5:	mov    ebp,0xbec70001
   1400577ca:	add    DWORD PTR [rax],eax
   1400577cc:	xor    BYTE PTR [rbp+0x4],bh
   1400577cf:	add    bh,al
   1400577d1:	mov    esi,0xbf1f0001
   1400577d6:	add    DWORD PTR [rax],eax
   1400577d8:	rex.WR jge 0x1400577df
   1400577db:	add    BYTE PTR [rdi],bl
   1400577dd:	mov    edi,0xc19d0001
   1400577e2:	add    DWORD PTR [rax],eax
   1400577e4:	pop    rsp
   1400577e5:	jge    0x1400577eb
   1400577e7:	add    al,al
   1400577e9:	rol    DWORD PTR [rcx],0x0
   1400577ec:	add    eax,edx
   1400577ee:	add    DWORD PTR [rax],eax
   1400577f0:	ins    BYTE PTR es:[rdi],dx
   1400577f1:	jge    0x1400577f7
   1400577f3:	add    BYTE PTR [rax],dl
   1400577f5:	ret    0x1
   1400577f8:	xor    edx,eax
   1400577fa:	add    DWORD PTR [rax],eax
   1400577fc:	je     0x14005787b
   1400577fe:	add    al,0x0
   140057800:	rex ret 0x1
   140057804:	pop    rsi
   140057805:	ret    0x1
   140057808:	jl     0x140057887
   14005780a:	add    al,0x0
   14005780c:	(bad)  
   14005780d:	ret    0x1
   140057810:	je     0x1400577d4
   140057812:	add    DWORD PTR [rax],eax
   140057814:	test   BYTE PTR [rbp+0x4],bh
   140057817:	add    BYTE PTR [rdx+rax*8+0x1],dh
   14005781b:	add    BYTE PTR [rdx-0x73fffe3e],dl
   140057821:	jge    0x140057827
   140057823:	add    BYTE PTR [rdx-0x38fffe3e],dl
   140057829:	ret    0x1
   14005782c:	movabs al,ds:0xda0001c2c700047d
   140057835:	ret    0x1
   140057838:	mov    ah,0x7d
   14005783a:	add    al,0x0
   14005783c:	loopne 0x140057800
   14005783e:	add    DWORD PTR [rax],eax
   140057840:	rex.WXB ret 
   140057842:	add    DWORD PTR [rax],eax
   140057844:	enter  0x47d,0x0
   140057848:	push   rax
   140057849:	ret    
   14005784a:	add    DWORD PTR [rax],eax
   14005784c:	cwde   
   14005784d:	ret    
   14005784e:	add    DWORD PTR [rax],eax
   140057850:	fdivr  DWORD PTR [rbp+0x4]
   140057853:	add    BYTE PTR [rax-0x2dfffe3d],ah
   140057859:	ret    
   14005785a:	add    DWORD PTR [rax],eax
   14005785c:	in     al,0x7d
   14005785e:	add    al,0x0
   140057860:	add    ah,al
   140057862:	add    DWORD PTR [rax],eax
   140057864:	scas   al,BYTE PTR es:[rdi]
   140057865:	vaddps xmm15,xmm15,XMMWORD PTR [r14+0x4]
   14005786b:	add    BYTE PTR [rax+0x30001c4],dh
   140057871:	(bad)
   140057874:	jo     0x1400578f4
   140057876:	add    al,0x0
   140057878:	adc    ch,al
   14005787a:	add    DWORD PTR [rax],eax
   14005787c:	(bad)
   140057880:	js     0x140057900
   140057882:	add    al,0x0
   140057884:	mov    al,0xc5
   140057886:	add    DWORD PTR [rax],eax
   140057888:	ret    0x1c5
   14005788b:	add    BYTE PTR [rax-0x2ffffb82],al
   140057891:	(bad)
   140057894:	pop    rsp
   140057895:	mov    BYTE PTR [rcx],0x0
   140057898:	jl     0x140057919
   14005789a:	add    al,0x0
   14005789c:	movabs al,ds:0x880001c76e0001c6
   1400578a5:	jle    0x1400578ab
   1400578a7:	add    BYTE PTR [rsi-0x39],ch
   1400578aa:	add    DWORD PTR [rax],eax
   1400578ac:	xchg   ecx,eax
   1400578ad:	enter  0x1,0x9c
   1400578b1:	jle    0x1400578b7
   1400578b3:	add    BYTE PTR [rcx+0x200001c8],dl
   1400578b9:	retf   0x1
   1400578bc:	sar    BYTE PTR [rsi+0x4],1
   1400578bf:	add    BYTE PTR [rax],ah
   1400578c1:	retf   0x1
   1400578c4:	cmp    al,0xca
   1400578c6:	add    DWORD PTR [rax],eax
   1400578c8:	add    BYTE PTR [rdi+0x4],bh
   1400578cb:	add    BYTE PTR [rax-0x36],dh
   1400578ce:	add    DWORD PTR [rax],eax
   1400578d0:	bswap  ebx
   1400578d2:	add    DWORD PTR [rax],eax
   1400578d4:	rex.WR jg 0x1400578db
   1400578d7:	add    BYTE PTR [rax-0x35],al
   1400578da:	add    DWORD PTR [rax],eax
   1400578dc:	jg     0x1400578a9
   1400578de:	add    DWORD PTR [rax],eax
   1400578e0:	adc    BYTE PTR [rsi+0x4],bh
   1400578e3:	add    BYTE PTR [rdi-0x35],bh
   1400578e6:	add    DWORD PTR [rax],eax
   1400578e8:	jb     0x1400578b6
   1400578ea:	add    DWORD PTR [rax],eax
   1400578ec:	and    al,0x7e
   1400578ee:	add    al,0x0
   1400578f0:	jb     0x1400578be
   1400578f2:	add    DWORD PTR [rax],eax
   1400578f4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400578f5:	int    0x1
   1400578f7:	add    BYTE PTR [rax],bh
   1400578f9:	jle    0x1400578ff
   1400578fb:	add    BYTE PTR [rax-0x58fffe33],dh
   140057901:	(bad)  
   140057902:	add    DWORD PTR [rax],eax
   140057904:	in     al,dx
   140057905:	jge    0x14005790b
   140057907:	add    BYTE PTR [rax-0xfffe32],dh
   14005790d:	iret   
   14005790e:	add    DWORD PTR [rax],eax
   140057910:	cld    
   140057911:	jge    0x140057917
   140057913:	add    BYTE PTR [rax],al
   140057915:	rol    BYTE PTR [rcx],1
   140057917:	add    BYTE PTR [rdx+0x640001d0],ch
   14005791d:	jg     0x140057923
   14005791f:	add    BYTE PTR [rax-0x2f],ah
   140057922:	add    DWORD PTR [rax],eax
   140057924:	mov    ebp,0x480001d2
   140057929:	jle    0x14005792f
   14005792b:	add    al,al
   14005792d:	rol    BYTE PTR [rcx],cl
   14005792f:	add    BYTE PTR [rsi],ah
   140057931:	rol    DWORD PTR [rcx],cl
   140057933:	add    BYTE PTR [rdi+rdi*2],ch
   140057936:	add    al,0x0
   140057938:	xor    bl,dl
   14005793a:	add    DWORD PTR [rax],eax
   14005793c:	nop
   14005793d:	rol    DWORD PTR [rcx],cl
   14005793f:	add    BYTE PTR [rax],bh
   140057941:	jg     0x140057947
   140057943:	add    BYTE PTR [rax-0x3bfffe2d],ah
   140057949:	rol    DWORD PTR [rcx],cl
   14005794b:	add    BYTE PTR [rax-0x3bfffb81],ah
   140057951:	rol    DWORD PTR [rcx],cl
   140057953:	add    BYTE PTR [rdx],dh
   140057955:	(bad)  
   140057956:	add    DWORD PTR [rax],eax
   140057958:	test   al,0x7f
   14005795a:	add    al,0x0
   14005795c:	xor    dl,ah
   14005795e:	add    DWORD PTR [rax],eax
   140057960:	rex.X (bad) 
   140057962:	add    DWORD PTR [rax],eax
   140057964:	mov    esp,0x5000047f
   140057969:	(bad)  
   14005796a:	add    DWORD PTR [rax],eax
   14005796c:	and    eax,0xd00001d6
   140057971:	jg     0x140057977
   140057973:	add    BYTE PTR [rax],dh
   140057975:	(bad)  
   140057976:	add    DWORD PTR [rax],eax
   140057978:	pop    rsi
   140057979:	(bad)  
   14005797a:	add    DWORD PTR [rax],eax
   14005797c:	hlt    
   14005797d:	jg     0x140057983
   14005797f:	add    BYTE PTR [rsi-0x2a],bl
   140057982:	add    DWORD PTR [rax],eax
   140057984:	(bad)  
   140057985:	(bad)  
   140057986:	add    DWORD PTR [rax],eax
   140057988:	cld    
   140057989:	jg     0x14005798f
   14005798b:	add    bh,al
   14005798d:	(bad)  
   14005798e:	add    DWORD PTR [rax],eax
   140057990:	xlat   BYTE PTR ds:[rbx]
   140057991:	(bad)  
   140057992:	add    DWORD PTR [rax],eax
   140057994:	adc    BYTE PTR [rax-0x291ffffc],al
   14005799a:	add    DWORD PTR [rax],eax
   14005799c:	mov    ecx,0x240001d7
   1400579a1:	add    BYTE PTR [rax+rax*1],0xc0
   1400579a5:	xlat   BYTE PTR ds:[rbx]
   1400579a6:	add    DWORD PTR [rax],eax
   1400579a8:	jle    0x140057982
   1400579aa:	add    DWORD PTR [rax],eax
   1400579ac:	xor    al,0x80
   1400579ae:	add    al,0x0
   1400579b0:	sbb    al,0x1
   1400579b3:	add    BYTE PTR [rsi+0x400001d8],bl
   1400579b9:	add    BYTE PTR [rax+rax*1],0x9e
   1400579bd:	fadd   DWORD PTR [rcx]
   1400579bf:	add    dl,al
   1400579c1:	fiadd  DWORD PTR [rcx]
   1400579c3:	add    BYTE PTR [rax-0x80],cl
   1400579c6:	add    al,0x0
   1400579c8:	ret    0x1da
   1400579cb:	add    al,cl
   1400579cd:	fiadd  DWORD PTR [rcx]
   1400579cf:	add    BYTE PTR [rax+rax*4+0x4],ah
   1400579d3:	add    al,cl
   1400579d5:	fiadd  DWORD PTR [rcx]
   1400579d7:	add    dh,bl
   1400579d9:	fiadd  DWORD PTR [rcx]
   1400579db:	add    BYTE PTR [rax+rax*4+0x4],dh
   1400579df:	add    al,ah
   1400579e1:	fiadd  DWORD PTR [rcx]
   1400579e3:	add    BYTE PTR [rip+0xffffffff900001db],ch        # 0xd0057bc4
   1400579e9:	add    BYTE PTR [rax+rax*1],0x30
   1400579ed:	fild   DWORD PTR [rcx]
   1400579ef:	add    dh,dh
   1400579f1:	fild   DWORD PTR [rcx]
   1400579f3:	add    BYTE PTR [rax-0x9fffb80],bl
   1400579f9:	fild   DWORD PTR [rcx]
   1400579fb:	add    BYTE PTR [rbp-0x57fffe24],dl
   140057a01:	add    BYTE PTR [rax+rax*1],0x95
   140057a05:	fadd   QWORD PTR [rcx]
   140057a07:	add    BYTE PTR [rsi],al
   140057a09:	fiadd  WORD PTR [rcx]
   140057a0b:	add    al,al
   140057a0d:	add    BYTE PTR [rax+rax*1],0x6
   140057a11:	fiadd  WORD PTR [rcx]
   140057a13:	add    BYTE PTR [rip+0xffffffffe40001de],bl        # 0x124057bf7
   140057a19:	add    BYTE PTR [rax+rax*1],0x1d
   140057a1d:	fiadd  WORD PTR [rcx]
   140057a1f:	add    BYTE PTR [rdi-0xbfffe22],dh
   140057a25:	add    BYTE PTR [rax+rax*1],0xe0
   140057a29:	fiadd  WORD PTR [rcx]
   140057a2b:	add    BYTE PTR [rip+0x40001e6],dh        # 0x144057c17
   140057a31:	add    DWORD PTR [rax+rax*1],0x1e640
   140057a38:	mov    ebp,0x240001e6
   140057a3d:	add    DWORD PTR [rax+rax*1],0x1e6c0
   140057a44:	in     al,0xe6
   140057a46:	add    DWORD PTR [rax],eax
   140057a48:	sub    al,0x81
   140057a4a:	add    al,0x0
   140057a4c:	in     al,0xe6
   140057a4e:	add    DWORD PTR [rax],eax
   140057a50:	or     al,0xe8
   140057a52:	add    DWORD PTR [rax],eax
   140057a54:	xor    al,0x81
   140057a56:	add    al,0x0
   140057a58:	or     al,0xe8
   140057a5a:	add    DWORD PTR [rax],eax
   140057a5c:	jp     0x140057a46
   140057a5e:	add    DWORD PTR [rax],eax
   140057a60:	pop    rsp
   140057a61:	add    DWORD PTR [rax+rax*1],0x1e87a
   140057a68:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140057a69:	call   0xc1757a6f
   140057a6e:	add    al,0x0
   140057a70:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140057a71:	call   0x128b07a77
   140057a76:	add    DWORD PTR [rax],eax
   140057a78:	add    BYTE PTR [rcx-0x174ffffc],0x1
   140057a7f:	add    BYTE PTR [rax],ah
   140057a81:	jmp    0xc1957a87
   140057a86:	add    al,0x0
   140057a88:	and    cl,ch
   140057a8a:	add    DWORD PTR [rax],eax
   140057a8c:	jb     0x140057a77
   140057a8e:	add    DWORD PTR [rax],eax
   140057a90:	cwde   
   140057a91:	add    DWORD PTR [rax+rax*1],0x1e980
   140057a98:	ds (bad) 
   140057a9a:	add    DWORD PTR [rax],eax
   140057a9c:	movabs al,ds:0xc60001ea90000481
   140057aa5:	(bad)  
   140057aa6:	add    DWORD PTR [rax],eax
   140057aa8:	test   al,0x81
   140057aaa:	add    al,0x0
   140057aac:	shr    dl,1
   140057aae:	add    DWORD PTR [rax],eax
   140057ab0:	or     ebp,ebx
   140057ab2:	add    DWORD PTR [rax],eax
   140057ab4:	mov    al,0x81
   140057ab6:	add    al,0x0
   140057ab8:	adc    bl,ch
   140057aba:	add    DWORD PTR [rax],eax
   140057abc:	out    0xeb,al
   140057abe:	add    DWORD PTR [rax],eax
   140057ac0:	cmp    al,0x83
   140057ac2:	add    al,0x0
   140057ac4:	lock jmp 0x140057ac8
   140057ac7:	add    BYTE PTR [rax],dh
   140057ac9:	in     al,dx
   140057aca:	add    DWORD PTR [rax],eax
   140057acc:	mov    eax,0x30000481
   140057ad1:	in     al,dx
   140057ad2:	add    DWORD PTR [rax],eax
   140057ad4:	push   0xffffffffffffffec
   140057ad6:	add    DWORD PTR [rax],eax
   140057ad8:	rol    BYTE PTR [rcx-0x1395fffc],0x1
   140057adf:	add    cl,dl
   140057ae1:	in     al,dx
   140057ae2:	add    DWORD PTR [rax],eax
   140057ae4:	(bad)  
   140057ae5:	add    DWORD PTR [rax+rax*1],0x1ecd1
   140057aec:	fucomip st,st(4)
   140057aee:	add    DWORD PTR [rax],eax
   140057af0:	call   0x120057f76
   140057af5:	in     al,dx
   140057af6:	add    DWORD PTR [rax],eax
   140057af8:	push   rbp
   140057af9:	in     eax,dx
   140057afa:	add    DWORD PTR [rax],eax
   140057afc:	cld    
   140057afd:	add    DWORD PTR [rax+rax*1],0x1ed60
   140057b04:	(bad)  
   140057b05:	in     eax,dx
   140057b06:	add    DWORD PTR [rax],eax
   140057b08:	add    al,0x82
   140057b0a:	add    al,0x0
   140057b0c:	loopne 0x140057afb
   140057b0e:	add    DWORD PTR [rax],eax
   140057b10:	sbb    ch,dh
   140057b12:	add    DWORD PTR [rax],eax
   140057b14:	or     al,0x82
   140057b16:	add    al,0x0
   140057b18:	sbb    ch,dh
   140057b1a:	add    DWORD PTR [rax],eax
   140057b1c:	scas   eax,DWORD PTR es:[rdi]
   140057b1d:	out    dx,al
   140057b1e:	add    DWORD PTR [rax],eax
   140057b20:	sbb    BYTE PTR [rdx-0x1150fffc],al
   140057b26:	add    DWORD PTR [rax],eax
   140057b28:	(bad)  
   140057b29:	out    dx,al
   140057b2a:	add    DWORD PTR [rax],eax
   140057b2c:	sub    al,0x82
   140057b2e:	add    al,0x0
   140057b30:	rex out dx,eax
   140057b32:	add    DWORD PTR [rax],eax
   140057b34:	mov    dl,0xef
   140057b36:	add    DWORD PTR [rax],eax
   140057b38:	rex (bad) 
   140057b3a:	add    al,0x0
   140057b3c:	shr    bh,0x1
   140057b3f:	add    BYTE PTR [rdx-0x10],ah
   140057b42:	add    DWORD PTR [rax],eax
   140057b44:	rex.W (bad) 
   140057b46:	add    al,0x0
   140057b48:	jo     0x140057b3a
   140057b4a:	add    DWORD PTR [rax],eax
   140057b4c:	xchg   edi,eax
   140057b4d:	repz add DWORD PTR [rax],eax
   140057b50:	push   rsp
   140057b51:	(bad)  
   140057b52:	add    al,0x0
   140057b54:	movabs al,ds:0x740001f4c50001f3
   140057b5d:	(bad)  
   140057b5e:	add    al,0x0
   140057b60:	shl    ah,1
   140057b62:	add    DWORD PTR [rax],eax
   140057b64:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140057b65:	cmc    
   140057b66:	add    DWORD PTR [rax],eax
   140057b68:	add    QWORD PTR [rax+rax*1],0xffffffffffffffb0
   140057b6d:	cmc    
   140057b6e:	add    DWORD PTR [rax],eax
   140057b70:	(bad)  
   140057b71:	test   BYTE PTR [rcx],0x0
   140057b74:	mov    BYTE PTR [rdx-0x915fffc],al
   140057b7a:	add    DWORD PTR [rax],eax
   140057b7c:	sub    dh,bh
   140057b7e:	add    DWORD PTR [rax],eax
   140057b80:	pushf  
   140057b81:	(bad)  
   140057b82:	add    al,0x0
   140057b84:	sub    dh,bh
   140057b86:	add    DWORD PTR [rax],eax
   140057b88:	xor    al,0xf7
   140057b8a:	add    DWORD PTR [rax],eax
   140057b8c:	mov    eax,0x34000482
   140057b91:	test   DWORD PTR [rcx],0x1f87300
   140057b97:	add    al,dl
   140057b99:	(bad)  
   140057b9a:	add    al,0x0
   140057b9c:	jae    0x140057b96
   140057b9e:	add    DWORD PTR [rax],eax
   140057ba0:	scas   eax,DWORD PTR es:[rdi]
   140057ba1:	clc    
   140057ba2:	add    DWORD PTR [rax],eax
   140057ba4:	in     al,0x82
   140057ba6:	add    al,0x0
   140057ba8:	scas   eax,DWORD PTR es:[rdi]
   140057ba9:	clc    
   140057baa:	add    DWORD PTR [rax],eax
   140057bac:	rex.W cli 
   140057bae:	add    DWORD PTR [rax],eax
   140057bb0:	hlt    
   140057bb1:	(bad)  
   140057bb2:	add    al,0x0
   140057bb4:	push   rax
   140057bb5:	cli    
   140057bb6:	add    DWORD PTR [rax],eax
   140057bb8:	sar    ebx,0x1
   140057bbb:	add    BYTE PTR [rbx+rax*4],al
   140057bbe:	add    al,0x0
   140057bc0:	lock sti 
   140057bc2:	add    DWORD PTR [rax],eax
   140057bc4:	pop    rbx
   140057bc5:	cld    
   140057bc6:	add    DWORD PTR [rax],eax
   140057bc8:	push   rsp
   140057bc9:	add    DWORD PTR [rax+rax*1],0x5b
   140057bcd:	cld    
   140057bce:	add    DWORD PTR [rax],eax
   140057bd0:	int3   
   140057bd1:	cld    
   140057bd2:	add    DWORD PTR [rax],eax
   140057bd4:	add    DWORD PTR fs:[rax+rax*1],0xffffffcc
   140057bd9:	cld    
   140057bda:	add    DWORD PTR [rax],eax
   140057bdc:	loop   0x140057bda
   140057bde:	add    DWORD PTR [rax],eax
   140057be0:	jl     0x140057b65
   140057be2:	add    al,0x0
   140057be4:	lock cld 
   140057be6:	add    DWORD PTR [rax],eax
   140057be8:	add    al,0xfd
   140057bea:	add    DWORD PTR [rax],eax
   140057bec:	adc    BYTE PTR [rbx-0x2fbfffc],al
   140057bf2:	add    DWORD PTR [rax],eax
   140057bf4:	push   0x180001fd
   140057bf9:	add    DWORD PTR [rax+rax*1],0x68
   140057bfd:	std    
   140057bfe:	add    DWORD PTR [rax],eax
   140057c00:	imul   edi,ebp,0x832c0001
   140057c06:	add    al,0x0
   140057c08:	sar    ch,0x1
   140057c0b:	add    BYTE PTR [rdx],bl
   140057c0d:	inc    BYTE PTR [rcx]
   140057c0f:	add    BYTE PTR [rbx+rax*4-0x1dffffc],cl
   140057c16:	add    DWORD PTR [rax],eax
   140057c18:	cld    
   140057c19:	inc    BYTE PTR [rcx]
   140057c1b:	add    BYTE PTR [rbx+rax*4-0xdffffc],ch
   140057c22:	add    DWORD PTR [rax],eax
   140057c24:	mov    ?,edi
   140057c26:	add    DWORD PTR [rax],eax
   140057c28:	cwde   
   140057c29:	add    DWORD PTR [rax+rax*1],0xffffff90
   140057c2d:	inc    DWORD PTR [rcx]
   140057c2f:	add    BYTE PTR [rdi+0x4],dh
   140057c32:	add    al,BYTE PTR [rax]
   140057c34:	and    BYTE PTR [rbp+0x4770004],al
   140057c3a:	add    al,BYTE PTR [rax]
   140057c3c:	sub    BYTE PTR [rbx],cl
   140057c3e:	add    al,BYTE PTR [rax]
   140057c40:	(bad)  
   140057c41:	test   DWORD PTR [rax+rax*1],eax
   140057c44:	sub    BYTE PTR [rbx],cl
   140057c46:	add    al,BYTE PTR [rax]
   140057c48:	int3   
   140057c49:	or     eax,DWORD PTR [rdx]
   140057c4b:	add    BYTE PTR [rbp+rax*4+0x4],dh
   140057c4f:	add    al,dl
   140057c51:	or     eax,DWORD PTR [rdx]
   140057c53:	add    dh,bh
   140057c55:	or     eax,DWORD PTR [rdx]
   140057c57:	add    BYTE PTR [rbp+rax*4+0xc000004],al
   140057c5e:	add    al,BYTE PTR [rax]
   140057c60:	and    cl,BYTE PTR [rip+0xffffffff858c0002]        # 0xc5917c68
   140057c66:	add    al,0x0
   140057c68:	xor    BYTE PTR [rip+0xf8d0002],cl        # 0x14f927c70
   140057c6e:	add    al,BYTE PTR [rax]
   140057c70:	pushf  
   140057c71:	test   DWORD PTR [rax+rax*1],eax
   140057c74:	lea    ecx,[rdi]
   140057c76:	add    al,BYTE PTR [rax]
   140057c78:	(bad)  
   140057c79:	adc    al,BYTE PTR [rdx]
   140057c7b:	add    al,al
   140057c7d:	test   DWORD PTR [rax+rax*1],eax
   140057c80:	(bad)  
   140057c81:	adc    al,BYTE PTR [rdx]
   140057c83:	add    BYTE PTR [rsi-0x13fffded],dl
   140057c89:	test   DWORD PTR [rax+rax*1],eax
   140057c8c:	xchg   esi,eax
   140057c8d:	adc    eax,DWORD PTR [rdx]
   140057c8f:	add    ah,dl
   140057c91:	adc    eax,DWORD PTR [rdx]
   140057c93:	add    BYTE PTR [rax],al
   140057c95:	xchg   BYTE PTR [rax+rax*1],al
   140057c98:	(bad)  
   140057c99:	adc    eax,DWORD PTR [rdx]
   140057c9b:	add    BYTE PTR [rcx],al
   140057c9d:	adc    al,0x2
   140057c9f:	add    BYTE PTR [rax],dl
   140057ca1:	xchg   BYTE PTR [rax+rax*1],al
   140057ca4:	add    DWORD PTR [rdx+rax*1],edx
   140057ca7:	add    BYTE PTR [rsp+rdx*1],cl
   140057caa:	add    al,BYTE PTR [rax]
   140057cac:	and    BYTE PTR [rsi+0x140c0004],al
   140057cb2:	add    al,BYTE PTR [rax]
   140057cb4:	adc    BYTE PTR [rdx+rax*1],dl
   140057cb7:	add    BYTE PTR [rax-0x7a],dl
   140057cba:	add    al,0x0
   140057cbc:	adc    BYTE PTR [rdx+rax*1],dl
   140057cbf:	add    BYTE PTR [rip+0x60000214],bl        # 0x1a0057ed9
   140057cc5:	xchg   BYTE PTR [rax+rax*1],al
   140057cc8:	sbb    eax,0x88000214
   140057ccd:	adc    eax,0x866c0002
   140057cd2:	add    al,0x0
   140057cd4:	mov    BYTE PTR [rip+0x19340002],dl        # 0x159397cdc
   140057cda:	add    al,BYTE PTR [rax]
   140057cdc:	pushf  
   140057cdd:	xchg   BYTE PTR [rax+rax*1],al
   140057ce0:	xor    al,0x19
   140057ce2:	add    al,BYTE PTR [rax]
   140057ce4:	jo     0x140057cff
   140057ce6:	add    al,BYTE PTR [rax]
   140057ce8:	mov    ah,0x86
   140057cea:	add    al,0x0
   140057cec:	jo     0x140057d07
   140057cee:	add    al,BYTE PTR [rax]
   140057cf0:	lock sbb DWORD PTR [rdx],eax
   140057cf3:	add    ah,al
   140057cf5:	xchg   BYTE PTR [rax+rax*1],al
   140057cf8:	lock sbb DWORD PTR [rdx],eax
   140057cfb:	add    BYTE PTR [rbp+0x1b],ah
   140057cfe:	add    al,BYTE PTR [rax]
   140057d00:	(bad)  
   140057d01:	xchg   BYTE PTR [rax+rax*1],al
   140057d04:	jo     0x140057d21
   140057d06:	add    al,BYTE PTR [rax]
   140057d08:	sbb    bl,BYTE PTR [rip+0xffffffff86e40002]        # 0xc6e97d10
   140057d0e:	add    al,0x0
   140057d10:	xor    BYTE PTR [rip+0x1e740002],bl        # 0x15e797d18
   140057d16:	add    al,BYTE PTR [rax]
   140057d18:	cld    
   140057d19:	xchg   BYTE PTR [rax+rax*1],al
   140057d1c:	sbb    BYTE PTR [rsi],0x2
   140057d1f:	add    bl,cl
   140057d21:	(bad)  
   140057d22:	add    al,BYTE PTR [rax]
   140057d24:	or     al,0x87
   140057d26:	add    al,0x0
   140057d28:	rcr    BYTE PTR [rdi],1
   140057d2a:	add    al,BYTE PTR [rax]
   140057d2c:	adc    ah,BYTE PTR [rax]
   140057d2e:	add    al,BYTE PTR [rax]
   140057d30:	sbb    BYTE PTR [rdi+0x20120004],al
   140057d36:	add    al,BYTE PTR [rax]
   140057d38:	adc    esp,DWORD PTR [rcx]
   140057d3a:	add    al,BYTE PTR [rax]
   140057d3c:	sub    BYTE PTR [rdi+0x21130004],al
   140057d42:	add    al,BYTE PTR [rax]
   140057d44:	and    DWORD PTR cs:[rdx],eax
   140057d47:	add    BYTE PTR [rax-0x79],al
   140057d4a:	add    al,0x0
   140057d4c:	xor    BYTE PTR [rcx],ah
   140057d4e:	add    al,BYTE PTR [rax]
   140057d50:	scas   eax,DWORD PTR es:[rdi]
   140057d51:	and    al,BYTE PTR [rdx]
   140057d53:	add    BYTE PTR [rax-0x79],dl
   140057d56:	add    al,0x0
   140057d58:	mov    al,0x22
   140057d5a:	add    al,BYTE PTR [rax]
   140057d5c:	and    DWORD PTR [rbx],0x2
   140057d5f:	add    BYTE PTR [rax-0x79],ch
   140057d62:	add    al,0x0
   140057d64:	nop
   140057d65:	and    eax,DWORD PTR [rdx]
   140057d67:	add    BYTE PTR [rsi+0x24],al
   140057d6a:	add    al,BYTE PTR [rax]
   140057d6c:	push   0x50000484
   140057d71:	and    al,0x2
   140057d73:	add    BYTE PTR [rcx+0x74000224],ch
   140057d79:	test   BYTE PTR [rax+rax*1],al
   140057d7c:	mov    al,0x24
   140057d7e:	add    al,BYTE PTR [rax]
   140057d80:	or     esp,DWORD PTR [rip+0xffffffff83c00002]        # 0xc3c57d88
   140057d86:	add    al,0x0
   140057d88:	or     esp,DWORD PTR [rip+0x25650002]        # 0x1656a7d90
   140057d8e:	add    al,BYTE PTR [rax]
   140057d90:	enter  0x483,0x0
   140057d94:	gs and eax,0x256e0002
   140057d9a:	add    al,BYTE PTR [rax]
   140057d9c:	fadd   QWORD PTR [rbx+0x256e0004]
   140057da2:	add    al,BYTE PTR [rax]
   140057da4:	jle    0x140057dcb
   140057da6:	add    al,BYTE PTR [rax]
   140057da8:	in     al,dx
   140057da9:	add    DWORD PTR [rax+rax*1],0x7e
   140057dad:	and    eax,0x26210002
   140057db2:	add    al,BYTE PTR [rax]
   140057db4:	add    BYTE PTR [rsp+rax*1+0x2262100],al
   140057dbb:	add    BYTE PTR [rcx+0x26],ah
   140057dbe:	add    al,BYTE PTR [rax]
   140057dc0:	adc    al,0x84
   140057dc2:	add    al,0x0
   140057dc4:	and    BYTE PTR [rsi],0x2
   140057dc7:	add    BYTE PTR [rip+0x78000227],dl        # 0x1b8057ff4
   140057dcd:	xchg   DWORD PTR [rax+rax*1],eax
   140057dd0:	and    BYTE PTR [rdi],ah
   140057dd2:	add    al,BYTE PTR [rax]
   140057dd4:	movabs ds:0x2000048424000227,al
   140057ddd:	sub    BYTE PTR [rdx],al
   140057ddf:	add    BYTE PTR [rdi-0xbfffdd8],ch
   140057de5:	mov    BYTE PTR [rax+rax*1],al
   140057de8:	scas   eax,DWORD PTR es:[rdi]
   140057de9:	sub    BYTE PTR [rdx],al
   140057deb:	add    BYTE PTR [rcx+0x29],ch
   140057dee:	add    al,BYTE PTR [rax]
   140057df0:	add    al,0x89
   140057df2:	add    al,0x0
   140057df4:	imul   ebp,DWORD PTR [rcx],0x29790002
   140057dfa:	add    al,BYTE PTR [rax]
   140057dfc:	sbb    BYTE PTR [rcx+0x29800004],cl
   140057e02:	add    al,BYTE PTR [rax]
   140057e04:	leave  
   140057e05:	sub    al,BYTE PTR [rdx]
   140057e07:	add    ah,bh
   140057e09:	xchg   DWORD PTR [rax+rax*1],eax
   140057e0c:	(bad)  
   140057e0d:	sub    eax,DWORD PTR [rdx]
   140057e0f:	add    BYTE PTR [rsi+0x3000022b],dl
   140057e15:	test   BYTE PTR [rax+rax*1],al
   140057e18:	xchg   esi,eax
   140057e19:	sub    eax,DWORD PTR [rdx]
   140057e1b:	add    BYTE PTR [rdx+0x2c],al
   140057e1e:	add    al,BYTE PTR [rax]
   140057e20:	test   BYTE PTR [rax+rax*1],r8b
   140057e24:	rex.X sub al,0x2
   140057e27:	add    BYTE PTR [rax+0x2c],bl
   140057e2a:	add    al,BYTE PTR [rax]
   140057e2c:	pop    rax
   140057e2d:	test   BYTE PTR [rax+rax*1],al
   140057e30:	(bad)  
   140057e31:	sub    al,0x2
   140057e33:	add    BYTE PTR [rdi-0x43fffdd4],ah
   140057e39:	mov    BYTE PTR [rax+rax*1],al
   140057e3c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140057e3d:	sub    al,0x2
   140057e3f:	add    ch,dh
   140057e41:	sub    al,0x2
   140057e43:	add    al,cl
   140057e45:	mov    BYTE PTR [rax+rax*1],al
   140057e48:	cmc    
   140057e49:	sub    al,0x2
   140057e4b:	add    BYTE PTR [rax],cl
   140057e4d:	sub    eax,0x88e00002
   140057e52:	add    al,0x0
   140057e54:	adc    BYTE PTR [rip+0x31ea0002],ch        # 0x171ef7e5c
   140057e5a:	add    al,BYTE PTR [rax]
   140057e5c:	adc    BYTE PTR [rax+0x31f00004],cl
   140057e62:	add    al,BYTE PTR [rax]
   140057e64:	xor    al,BYTE PTR es:[rdx]
   140057e67:	add    BYTE PTR [rax-0x79],dh
   140057e6a:	add    al,0x0
   140057e6c:	xor    BYTE PTR [rdx],dh
   140057e6e:	add    al,BYTE PTR [rax]
   140057e70:	jo     0x140057ea4
   140057e72:	add    al,BYTE PTR [rax]
   140057e74:	mov    WORD PTR [rax+0x32700004],cs
   140057e7a:	add    al,BYTE PTR [rax]
   140057e7c:	ret    
   140057e7d:	xor    al,BYTE PTR [rdx]
   140057e7f:	add    BYTE PTR [rax-0x3cfffb78],bl
   140057e85:	xor    al,BYTE PTR [rdx]
   140057e87:	add    dh,cl
   140057e89:	xor    al,BYTE PTR [rdx]
   140057e8b:	add    BYTE PTR [rax+rcx*4+0x33100004],ch
   140057e92:	add    al,BYTE PTR [rax]
   140057e94:	xor    r8d,DWORD PTR [r10]
   140057e97:	add    BYTE PTR [rax+rcx*4],dh
   140057e9a:	add    al,0x0
   140057e9c:	xor    r8d,DWORD PTR [r10]
   140057e9f:	add    BYTE PTR [rbp+0x33],ch
   140057ea2:	add    al,BYTE PTR [rax]
   140057ea4:	cmp    al,0x88
   140057ea6:	add    al,0x0
   140057ea8:	ins    DWORD PTR es:[rdi],dx
   140057ea9:	xor    eax,DWORD PTR [rdx]
   140057eab:	add    cl,bh
   140057ead:	xor    eax,DWORD PTR [rdx]
   140057eaf:	add    BYTE PTR [rax-0x78],dl
   140057eb2:	add    al,0x0
   140057eb4:	stc    
   140057eb5:	xor    eax,DWORD PTR [rdx]
   140057eb7:	add    dh,bh
   140057eb9:	xor    eax,DWORD PTR [rdx]
   140057ebb:	add    BYTE PTR [rax+rcx*4+0x4],ch
   140057ebf:	add    dh,bh
   140057ec1:	xor    eax,DWORD PTR [rdx]
   140057ec3:	add    BYTE PTR [rsp+rsi*1],al
   140057ec6:	add    al,BYTE PTR [rax]
   140057ec8:	jl     0x140057e52
   140057eca:	add    al,0x0
   140057ecc:	adc    BYTE PTR [rdx+rax*1],dh
   140057ecf:	add    BYTE PTR [rdi],ch
   140057ed1:	xor    al,0x2
   140057ed3:	add    BYTE PTR [rsp+rax*4+0x4],bh
   140057ed7:	add    BYTE PTR [rdi],ch
   140057ed9:	xor    al,0x2
   140057edb:	add    BYTE PTR [rdi+0x34],bh
   140057ede:	add    al,BYTE PTR [rax]
   140057ee0:	nop
   140057ee1:	test   BYTE PTR [rax+rax*1],al
   140057ee4:	jg     0x140057f1a
   140057ee6:	add    al,BYTE PTR [rax]
   140057ee8:	mov    WORD PTR [rsi],?
   140057eea:	add    al,BYTE PTR [rax]
   140057eec:	test   al,0x84
   140057eee:	add    al,0x0
   140057ef0:	mov    WORD PTR [rsi],?
   140057ef2:	add    al,BYTE PTR [rax]
   140057ef4:	retf   0x236
   140057ef7:	add    ah,cl
   140057ef9:	test   BYTE PTR [rax+rax*1],al
   140057efc:	retf   0x236
   140057eff:	add    bl,bl
   140057f01:	(bad)  
   140057f02:	add    al,BYTE PTR [rax]
   140057f04:	fadd   QWORD PTR [rsp+rax*1+0x2386000]
   140057f0b:	add    BYTE PTR [rbp-0x13fffdc8],bl
   140057f11:	test   BYTE PTR [rax+rax*1],al
   140057f14:	movabs al,ds:0x2000023983000238
   140057f1d:	mov    BYTE PTR [rax+rax*1],al
   140057f20:	nop
   140057f21:	cmp    DWORD PTR [rdx],eax
   140057f23:	add    cl,bl
   140057f25:	cmp    al,BYTE PTR [rdx]
   140057f27:	add    ah,bh
   140057f29:	test   BYTE PTR [rax+rax*1],al
   140057f2c:	loopne 0x140057f68
   140057f2e:	add    al,BYTE PTR [rax]
   140057f30:	hlt    
   140057f31:	cmp    al,BYTE PTR [rdx]
   140057f33:	add    BYTE PTR [rax-0xbfffb79],al
   140057f39:	cmp    al,BYTE PTR [rdx]
   140057f3b:	add    BYTE PTR [rsi],cl
   140057f3d:	cmp    eax,DWORD PTR [rdx]
   140057f3f:	add    BYTE PTR [rax+0xe000487],cl
   140057f45:	cmp    eax,DWORD PTR [rdx]
   140057f47:	add    BYTE PTR [rdi],dh
   140057f49:	cmp    eax,DWORD PTR [rdx]
   140057f4b:	add    BYTE PTR [rdi+rax*4+0x3b370004],bl
   140057f52:	add    al,BYTE PTR [rax]
   140057f54:	fdivr  QWORD PTR [rbx]
   140057f56:	add    al,BYTE PTR [rax]
   140057f58:	mov    al,0x87
   140057f5a:	add    al,0x0
   140057f5c:	fdivr  QWORD PTR [rbx]
   140057f5e:	add    al,BYTE PTR [rax]
   140057f60:	loope  0x140057f9d
   140057f62:	add    al,BYTE PTR [rax]
   140057f64:	int3   
   140057f65:	xchg   DWORD PTR [rax+rax*1],eax
   140057f68:	loope  0x140057fa5
   140057f6a:	add    al,BYTE PTR [rax]
   140057f6c:	repz cmp eax,DWORD PTR [rdx]
   140057f6f:	add    ah,bl
   140057f71:	xchg   DWORD PTR [rax+rax*1],eax
   140057f74:	repz cmp eax,DWORD PTR [rdx]
   140057f77:	add    dh,bh
   140057f79:	cmp    eax,DWORD PTR [rdx]
   140057f7b:	add    ah,ch
   140057f7d:	xchg   DWORD PTR [rax+rax*1],eax
   140057f80:	add    BYTE PTR [rdx+rax*1],bh
   140057f83:	add    BYTE PTR [rcx],bh
   140057f85:	cmp    al,0x2
   140057f87:	add    BYTE PTR [rax*4+0x3c400004],dl
   140057f8e:	add    al,BYTE PTR [rax]
   140057f90:	gs cmp al,0x2
   140057f93:	add    BYTE PTR [rax],ch
   140057f95:	mov    DWORD PTR [rax+rax*1],eax
   140057f98:	gs cmp al,0x2
   140057f9b:	add    BYTE PTR [rdx+0x3c],ch
   140057f9e:	add    al,BYTE PTR [rax]
   140057fa0:	xor    BYTE PTR [rcx+0x3c6a0004],cl
   140057fa6:	add    al,BYTE PTR [rax]
   140057fa8:	or     BYTE PTR [rip+0xffffffff89440002],bh        # 0xc9497fb0
   140057fae:	add    al,0x0
   140057fb0:	or     BYTE PTR [rip+0x3d420002],bh        # 0x17d477fb8
   140057fb6:	add    al,BYTE PTR [rax]
   140057fb8:	pop    rax
   140057fb9:	mov    DWORD PTR [rax+rax*1],eax
   140057fbc:	rex.X cmp eax,0x3d480002
   140057fc2:	add    al,BYTE PTR [rax]
   140057fc4:	push   0x50000489
   140057fc9:	cmp    eax,0x3f2b0002
   140057fce:	add    al,BYTE PTR [rax]
   140057fd0:	js     0x140057f5b
   140057fd2:	add    al,0x0
   140057fd4:	xor    BYTE PTR [rdi],bh
   140057fd6:	add    al,BYTE PTR [rax]
   140057fd8:	popf   
   140057fd9:	(bad)  
   140057fda:	add    al,BYTE PTR [rax]
   140057fdc:	test   BYTE PTR [rcx+0x3f9d0004],cl
   140057fe2:	add    al,BYTE PTR [rax]
   140057fe4:	mov    dl,0x3f
   140057fe6:	add    al,BYTE PTR [rax]
   140057fe8:	nop
   140057fe9:	mov    DWORD PTR [rax+rax*1],eax
   140057fec:	mov    dl,0x3f
   140057fee:	add    al,BYTE PTR [rax]
   140057ff0:	in     eax,dx
   140057ff1:	add    al,BYTE PTR [rax]
   140057ff4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140057ff5:	mov    DWORD PTR [rax+rax*1],eax
   140057ff8:	in     eax,dx
   140057ff9:	add    al,BYTE PTR [rax]
   140057ffc:	inc    BYTE PTR [rax+0x2]
   140057fff:	add    BYTE PTR [rax-0x1fffb77],bh
   140058005:	add    al,BYTE PTR [rax]
   140058008:	(bad)  
   140058009:	add    al,BYTE PTR [r8]
   14005800c:	enter  0x489,0x0
   140058010:	rex
   140058011:	rex.X add al,BYTE PTR [rax]
   140058014:	sbb    eax,DWORD PTR [rbx+0x2]
   140058017:	add    al,bl
   140058019:	mov    DWORD PTR [rax+rax*1],eax
   14005801c:	and    BYTE PTR [rbx+0x2],al
   14005801f:	add    BYTE PTR [rbx],bh
   140058021:	add    r8b,BYTE PTR [rax]
   140058024:	rex.WR mov r8b,BYTE PTR [rax+rax*1]
   140058028:	cmp    eax,DWORD PTR [rdx+rax*1+0x0]
   14005802c:	jae    0x140058072
   14005802e:	add    al,BYTE PTR [rax]
   140058030:	pop    rax
   140058031:	mov    al,BYTE PTR [rax+rax*1]
   140058034:	jae    0x14005807a
   140058036:	add    al,BYTE PTR [rax]
   140058038:	jle    0x14005807e
   14005803a:	add    al,BYTE PTR [rax]
   14005803c:	ins    BYTE PTR es:[rdi],dx
   14005803d:	mov    al,BYTE PTR [rax+rax*1]
   140058040:	add    BYTE PTR [rdx+rax*1+0x0],0x6e
   140058045:	add    r8b,BYTE PTR [r8]
   140058048:	in     al,dx
   140058049:	mov    DWORD PTR [rax+rax*1],eax
   14005804c:	outs   dx,BYTE PTR ds:[rsi]
   14005804d:	add    r8b,BYTE PTR [r8]
   140058050:	movabs ds:0xa3000489f8000245,eax
   140058059:	add    r8b,BYTE PTR [r8]
   14005805c:	scas   al,BYTE PTR es:[rdi]
   14005805d:	add    r8b,BYTE PTR [r8]
   140058060:	or     al,0x8a
   140058062:	add    al,0x0
   140058064:	mov    al,0x45
   140058066:	add    al,BYTE PTR [rax]
   140058068:	rex.RX add r8b,BYTE PTR ds:[rax]
   14005806c:	mov    al,0x8a
   14005806e:	add    al,0x0
   140058070:	rex
   140058071:	rex.RX add r8b,BYTE PTR [rax]
   140058074:	or     al,0x48
   140058076:	add    al,BYTE PTR [rax]
   140058078:	sbb    al,0x8a
   14005807a:	add    al,0x0
   14005807c:	or     al,0x48
   14005807e:	add    al,BYTE PTR [rax]
   140058080:	rex.RX
   140058081:	rex.W add al,BYTE PTR [rax]
   140058084:	sub    BYTE PTR [rdx+0x48460004],cl
   14005808a:	add    al,BYTE PTR [rax]
   14005808c:	rex.WRX
   14005808d:	rex.W add al,BYTE PTR [rax]
   140058090:	cmp    al,0x8a
   140058092:	add    al,0x0
   140058094:	push   rax
   140058095:	rex.W add al,BYTE PTR [rax]
   140058098:	jbe    0x1400580e2
   14005809a:	add    al,BYTE PTR [rax]
   14005809c:	jl     0x140058028
   14005809e:	add    al,0x0
   1400580a0:	jbe    0x1400580ea
   1400580a2:	add    al,BYTE PTR [rax]
   1400580a4:	(bad)  
   1400580a5:	rex.WB add al,BYTE PTR [r8]
   1400580a8:	mov    WORD PTR [rdx+0x49270004],cs
   1400580ae:	add    al,BYTE PTR [rax]
   1400580b0:	rex.RB
   1400580b1:	rex.WB add al,BYTE PTR [r8]
   1400580b4:	movabs al,ds:0x960002495000048a
   1400580bd:	rex.WB add al,BYTE PTR [r8]
   1400580c0:	push   rsp
   1400580c1:	mov    eax,DWORD PTR [rax+rax*1]
   1400580c4:	xchg   esi,eax
   1400580c5:	rex.WB add al,BYTE PTR [r8]
   1400580c8:	xor    al,0x4a
   1400580ca:	add    al,BYTE PTR [rax]
   1400580cc:	or     BYTE PTR [rbx+0x4a340004],0x2
   1400580d3:	add    BYTE PTR [rsi-0x5ffffdb5],bh
   1400580d9:	mov    eax,DWORD PTR [rax+rax*1]
   1400580dc:	mov    esi,0xf100024b
   1400580e1:	rex.WRB add r8b,BYTE PTR [r8]
   1400580e4:	mov    eax,0x48b
   1400580e9:	rex.WRX add r8b,BYTE PTR [rax]
   1400580ec:	rex.RX
   1400580ed:	rex.WRX add r8b,BYTE PTR [rax]
   1400580f0:	int3   
   1400580f1:	mov    eax,DWORD PTR [rax+rax*1]
   1400580f4:	rex.RX
   1400580f5:	rex.WRX add r8b,BYTE PTR [rax]
   1400580f8:	jrcxz  0x140058148
   1400580fa:	add    al,BYTE PTR [rax]
   1400580fc:	clc    
   1400580fd:	mov    eax,DWORD PTR [rax+rax*1]
   140058100:	jrcxz  0x140058150
   140058102:	add    al,BYTE PTR [rax]
   140058104:	ins    DWORD PTR es:[rdi],dx
   140058105:	push   rax
   140058106:	add    al,BYTE PTR [rax]
   140058108:	sbb    BYTE PTR [rsp+rax*1+0x2506d00],cl
   14005810f:	add    BYTE PTR [rcx+0x30000252],ah
   140058115:	mov    WORD PTR [rax+rax*1],es
   140058118:	mov    al,0x52
   14005811a:	add    al,BYTE PTR [rax]
   14005811c:	mov    al,0x54
   14005811e:	add    al,BYTE PTR [rax]
   140058120:	mov    eax,0xb000048a
   140058125:	push   rsp
   140058126:	add    al,BYTE PTR [rax]
   140058128:	out    0x54,al
   14005812a:	add    al,BYTE PTR [rax]
   14005812c:	ror    BYTE PTR [rdx+0x54e60004],1
   140058132:	add    al,BYTE PTR [rax]
   140058134:	cs pop rdi
   140058136:	add    al,BYTE PTR [rax]
   140058138:	hlt    
   140058139:	mov    al,BYTE PTR [rax+rax*1]
   14005813c:	cs pop rdi
   14005813e:	add    al,BYTE PTR [rax]
   140058140:	(bad)  
   140058141:	pop    rdi
   140058142:	add    al,BYTE PTR [rax]
   140058144:	sbb    BYTE PTR [rbx+0x5f370004],cl
   14005814a:	add    al,BYTE PTR [rax]
   14005814c:	fstp   DWORD PTR [rdi+0x2]
   14005814f:	add    BYTE PTR [rax],ch
   140058151:	mov    eax,DWORD PTR [rax+rax*1]
   140058154:	fstp   DWORD PTR [rdi+0x2]
   140058157:	add    BYTE PTR [rsi],cl
   140058159:	(bad)  
   14005815a:	add    al,BYTE PTR [rax]
   14005815c:	cmp    al,0x8b
   14005815e:	add    al,0x0
   140058160:	adc    BYTE PTR [rax+0x2],ah
   140058163:	add    BYTE PTR [rcx+0x60],dh
   140058166:	add    al,BYTE PTR [rax]
   140058168:	mov    r8,QWORD PTR [rax+rax*1]
   14005816c:	and    BYTE PTR [rax+0x2],0x0
   140058170:	rex (bad) 
   140058172:	add    al,BYTE PTR [rax]
   140058174:	rex.R mov WORD PTR [rax+rax*1],es
   140058178:	rex (bad) 
   14005817a:	add    al,BYTE PTR [rax]
   14005817c:	ins    DWORD PTR es:[rdi],dx
   14005817d:	(bad)  
   14005817e:	add    al,BYTE PTR [rax]
   140058180:	pop    rax
   140058181:	mov    WORD PTR [rax+rax*1],es
   140058184:	ins    DWORD PTR es:[rdi],dx
   140058185:	(bad)  
   140058186:	add    al,BYTE PTR [rax]
   140058188:	shl    DWORD PTR [rcx+0x2],1
   14005818b:	add    BYTE PTR [rsp+rcx*4+0x4],ch
   14005818f:	add    cl,dl
   140058191:	(bad)  
   140058192:	add    al,BYTE PTR [rax]
   140058194:	out    dx,eax
   140058195:	(bad)  
   140058196:	add    al,BYTE PTR [rax]
   140058198:	or     BYTE PTR [rsp+rax*1+0x2622000],0x0
   1400581a0:	(bad)  
   1400581a1:	add    al,BYTE PTR fs:[rax]
   1400581a4:	nop
   1400581a5:	mov    WORD PTR [rax+rax*1],es
   1400581a8:	(bad)  
   1400581a9:	add    al,BYTE PTR fs:[rax]
   1400581ac:	movabs ds:0xa200048ca4000264,al
   1400581b5:	add    al,BYTE PTR fs:[rax]
   1400581b8:	cmp    ah,BYTE PTR [rbp+0x2]
   1400581bb:	add    BYTE PTR [rax+0x3a00048c],bh
   1400581c1:	add    al,BYTE PTR gs:[rax]
   1400581c4:	xlat   BYTE PTR ds:[rbx]
   1400581c5:	imul   eax,DWORD PTR [rdx],0x48ccc00
   1400581cb:	add    bh,dl
   1400581cd:	imul   eax,DWORD PTR [rdx],0x269e700
   1400581d3:	add    ah,bl
   1400581d5:	mov    WORD PTR [rax+rax*1],es
   1400581d8:	lock imul eax,DWORD PTR [rdx],0x26b7800
   1400581df:	add    ah,ch
   1400581e1:	mov    WORD PTR [rax+rax*1],es
   1400581e4:	adc    BYTE PTR [rdx+rax*1+0x0],ch
   1400581e8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400581e9:	ins    BYTE PTR es:[rdi],dx
   1400581ea:	add    al,BYTE PTR [rax]
   1400581ec:	clc    
   1400581ed:	mov    WORD PTR [rax+rax*1],es
   1400581f0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400581f1:	ins    BYTE PTR es:[rdi],dx
   1400581f2:	add    al,BYTE PTR [rax]
   1400581f4:	xor    eax,0xc00026d
   1400581f9:	lea    eax,[rax+rax*1]
   1400581fc:	xor    eax,0x7700026d
   140058201:	ins    DWORD PTR es:[rdi],dx
   140058202:	add    al,BYTE PTR [rax]
   140058204:	and    al,0x8d
   140058206:	add    al,0x0
   140058208:	sub    BYTE PTR [rbp+0x2],0x0
   14005820c:	outs   dx,WORD PTR ds:[rsi]
   14005820e:	add    al,BYTE PTR [rax]
   140058210:	nop
   140058211:	mov    es,WORD PTR [rax+rax*1]
   140058214:	jo     0x140058285
   140058216:	add    al,BYTE PTR [rax]
   140058218:	xchg   edx,eax
   140058219:	outs   dx,DWORD PTR ds:[rsi]
   14005821a:	add    al,BYTE PTR [rax]
   14005821c:	and    BYTE PTR [rsi+0x6f920004],cl
   140058222:	add    al,BYTE PTR [rax]
   140058224:	test   al,0x6f
   140058226:	add    al,BYTE PTR [rax]
   140058228:	sub    al,0x8e
   14005822a:	add    al,0x0
   14005822c:	test   al,0x6f
   14005822e:	add    al,BYTE PTR [rax]
   140058230:	and    esi,DWORD PTR [rax+0x2]
   140058233:	add    BYTE PTR [rax-0x72],al
   140058236:	add    al,0x0
   140058238:	and    esi,DWORD PTR [rax+0x2]
   14005823b:	add    BYTE PTR [rax+rsi*2],dh
   14005823e:	add    al,BYTE PTR [rax]
   140058240:	pop    rax
   140058241:	mov    es,WORD PTR [rax+rax*1]
   140058244:	xor    al,0x70
   140058246:	add    al,BYTE PTR [rax]
   140058248:	rex.RXB jo 0x14005824d
   14005824b:	add    BYTE PTR [rax-0x72],ch
   14005824e:	add    al,0x0
   140058250:	push   rax
   140058251:	jo     0x140058255
   140058253:	add    dh,dl
   140058255:	jno    0x140058259
   140058257:	add    BYTE PTR [rax-0x72],bh
   14005825a:	add    al,0x0
   14005825c:	loopne 0x1400582cf
   14005825e:	add    al,BYTE PTR [rax]
   140058260:	(bad)  
   140058261:	jb     0x140058265
   140058263:	add    al,ah
   140058265:	lea    eax,[rax+rax*1]
   140058268:	(bad)  
   140058269:	jb     0x14005826d
   14005826b:	add    BYTE PTR [rax+0x72],al
   14005826e:	add    al,BYTE PTR [rax]
   140058270:	in     al,dx
   140058271:	lea    eax,[rax+rax*1]
   140058274:	rex jb 0x140058279
   140058277:	add    BYTE PTR [rsi+0x72],bl
   14005827a:	add    al,BYTE PTR [rax]
   14005827c:	add    BYTE PTR [rsi+0x72600004],cl
   140058282:	add    al,BYTE PTR [rax]
   140058284:	scas   al,BYTE PTR es:[rdi]
   140058285:	jb     0x140058289
   140058287:	add    BYTE PTR [rbp+rcx*4+0x72b00004],al
   14005828e:	add    al,BYTE PTR [rax]
   140058290:	jb     0x140058305
   140058292:	add    al,BYTE PTR [rax]
   140058294:	nop
   140058295:	lea    eax,[rax+rax*1]
   140058298:	xor    BYTE PTR [rbx+0x2],0x0
   14005829c:	lods   eax,DWORD PTR ds:[rsi]
   14005829d:	jae    0x1400582a1
   14005829f:	add    BYTE PTR [rbp+rcx*4+0x73ad0004],ah
   1400582a6:	add    al,BYTE PTR [rax]
   1400582a8:	js     0x14005831e
   1400582aa:	add    al,BYTE PTR [rax]
   1400582ac:	mov    ah,0x8d
   1400582ae:	add    al,0x0
   1400582b0:	js     0x140058326
   1400582b2:	add    al,BYTE PTR [rax]
   1400582b4:	test   DWORD PTR [rdx+rax*1+0x0],esi
   1400582b8:	ror    BYTE PTR [rbp+0x75800004],1
   1400582be:	add    al,BYTE PTR [rax]
   1400582c0:	test   eax,0xc4000275
   1400582c5:	mov    es,WORD PTR [rax+rax*1]
   1400582c8:	mov    al,0x75
   1400582ca:	add    al,BYTE PTR [rax]
   1400582cc:	in     al,0x75
   1400582ce:	add    al,BYTE PTR [rax]
   1400582d0:	xor    al,0x8d
   1400582d2:	add    al,0x0
   1400582d4:	lock jne 0x1400582d9
   1400582d7:	add    BYTE PTR [rsi],cl
   1400582d9:	jbe    0x1400582dd
   1400582db:	add    BYTE PTR [rbp+rcx*4+0x4],dh
   1400582df:	add    BYTE PTR [rax],dl
   1400582e1:	jbe    0x1400582e5
   1400582e3:	add    BYTE PTR [rbx+0x76],bh
   1400582e6:	add    al,BYTE PTR [rax]
   1400582e8:	jl     0x140058277
   1400582ea:	add    al,0x0
   1400582ec:	shl    BYTE PTR [rsi+0x2],1
   1400582ef:	add    BYTE PTR [rcx],bl
   1400582f1:	ja     0x1400582f5
   1400582f3:	add    BYTE PTR [rcx*4+0x77400004],bh
   1400582fa:	add    al,BYTE PTR [rax]
   1400582fc:	push   rax
   1400582fd:	ja     0x140058301
   1400582ff:	add    BYTE PTR [rax-0x73],cl
   140058302:	add    al,0x0
   140058304:	push   rax
   140058305:	ja     0x140058309
   140058307:	add    BYTE PTR [rcx+0x77],bh
   14005830a:	add    al,BYTE PTR [rax]
   14005830c:	push   rax
   14005830d:	lea    eax,[rax+rax*1]
   140058310:	jns    0x140058389
   140058312:	add    al,BYTE PTR [rax]
   140058314:	jp     0x14005838d
   140058316:	add    al,BYTE PTR [rax]
   140058318:	lea    eax,fs:[rax+rax*1]
   14005831c:	xor    BYTE PTR [rdi+0x2],0x0
   140058320:	sar    BYTE PTR [rax+0x2],0x0
   140058324:	test   al,0x8e
   140058326:	add    al,0x0
   140058328:	sar    BYTE PTR [rax+0x2],0x0
   14005832c:	fs jns 0x140058331
   14005832f:	add    BYTE PTR [rsi+rcx*4+0x79700004],bh
   140058336:	add    al,BYTE PTR [rax]
   140058338:	(bad)  
   140058339:	jns    0x14005833d
   14005833b:	add    BYTE PTR [rax],dl
   14005833d:	mov    es,WORD PTR [rax+rax*1]
   140058340:	and    BYTE PTR [rdx+0x2],bh
   140058343:	add    BYTE PTR [rcx+0x7a],ah
   140058346:	add    al,BYTE PTR [rax]
   140058348:	int3   
   140058349:	mov    es,WORD PTR [rax+rax*1]
   14005834c:	(bad)  
   14005834d:	jp     0x140058351
   14005834f:	add    ah,bl
   140058351:	add    DWORD PTR [rdx],0x0
   140058354:	in     al,0x8e
   140058356:	add    al,0x0
   140058358:	fadd   QWORD PTR [rbx-0x7b1bfffe]
   14005835e:	add    al,BYTE PTR [rax]
   140058360:	clc    
   140058361:	mov    es,WORD PTR [rax+rax*1]
   140058364:	lock test BYTE PTR [rdx],al
   140058367:	add    BYTE PTR [rbx-0x7b],bl
   14005836a:	add    al,BYTE PTR [rax]
   14005836c:	sub    BYTE PTR [rdi-0x7a9ffffc],cl
   140058372:	add    al,BYTE PTR [rax]
   140058374:	sub    eax,DWORD PTR [rdi-0x704ffffe]
   14005837a:	add    al,0x0
   14005837c:	xor    BYTE PTR [rdi-0x784cfffe],al
   140058382:	add    al,BYTE PTR [rax]
   140058384:	xor    BYTE PTR [rdi-0x783ffffc],cl
   14005838a:	add    al,BYTE PTR [rax]
   14005838c:	add    ecx,DWORD PTR [rax-0x70e7fffe]
   140058392:	add    al,0x0
   140058394:	adc    BYTE PTR [rax-0x77d0fffe],cl
   14005839a:	add    al,BYTE PTR [rax]
   14005839c:	and    BYTE PTR [rdi-0x77cffffc],cl
   1400583a2:	add    al,BYTE PTR [rax]
   1400583a4:	(bad)  
   1400583a5:	mov    BYTE PTR [rdx],al
   1400583a7:	add    BYTE PTR [rax-0x71],cl
   1400583aa:	add    al,0x0
   1400583ac:	(bad)  
   1400583ad:	mov    BYTE PTR [rdx],al
   1400583af:	add    BYTE PTR [rax+rcx*4+0x2],ah
   1400583b3:	add    BYTE PTR [rax-0x71],dl
   1400583b6:	add    al,0x0
   1400583b8:	mov    BYTE PTR fs:[rdx],al
   1400583bb:	add    dh,cl
   1400583bd:	mov    DWORD PTR [rdx],eax
   1400583bf:	add    BYTE PTR [rdi+rcx*4+0x4],ch
   1400583c3:	add    dh,cl
   1400583c5:	mov    DWORD PTR [rdx],eax
   1400583c7:	add    BYTE PTR [rdi],ah
   1400583c9:	mov    al,BYTE PTR [rdx]
   1400583cb:	add    BYTE PTR [rax+0x2700048f],dl
   1400583d1:	mov    al,BYTE PTR [rdx]
   1400583d3:	add    BYTE PTR [rbx-0x76],ch
   1400583d6:	add    al,BYTE PTR [rax]
   1400583d8:	movabs al,ds:0xd300028a8000048f
   1400583e1:	mov    al,BYTE PTR [rdx]
   1400583e3:	add    BYTE PTR [rdi+rcx*4],bh
   1400583e6:	add    al,0x0
   1400583e8:	loopne 0x140058374
   1400583ea:	add    al,BYTE PTR [rax]
   1400583ec:	add    cl,BYTE PTR [rbx-0x70effffe]
   1400583f2:	add    al,0x0
   1400583f4:	adc    BYTE PTR [rbx-0x747ffffe],cl
   1400583fa:	add    al,BYTE PTR [rax]
   1400583fc:	or     BYTE PTR [rdi-0x743ffffc],cl
   140058402:	add    al,BYTE PTR [rax]
   140058404:	loope  0x140058391
   140058406:	add    al,BYTE PTR [rax]
   140058408:	sub    al,0x90
   14005840a:	add    al,0x0
   14005840c:	lock mov eax,DWORD PTR [rdx]
   14005840f:	add    BYTE PTR [rcx],dl
   140058411:	mov    WORD PTR [rdx],es
   140058413:	add    BYTE PTR [rax+rdx*4],bl
   140058416:	add    al,0x0
   140058418:	and    BYTE PTR [rdx+rax*1+0x28c3a00],cl
   14005841f:	add    BYTE PTR [rax+rdx*4],ah
   140058422:	add    al,0x0
   140058424:	rex mov WORD PTR [rdx],es
   140058427:	add    BYTE PTR [rsi-0x3ffffd74],al
   14005842d:	pop    QWORD PTR [rax+rax*1]
   140058430:	xchg   BYTE PTR [rdx+rax*1+0x28c9800],cl
   140058437:	add    ah,dl
   140058439:	pop    QWORD PTR [rax+rax*1]
   14005843c:	cwde   
   14005843d:	mov    WORD PTR [rdx],es
   14005843f:	add    BYTE PTR [rbx],ah
   140058441:	lea    eax,[rdx]
   140058443:	add    al,ch
   140058445:	pop    QWORD PTR [rax+rax*1]
   140058448:	and    ecx,DWORD PTR [rbp-0x72cefffe]
   14005844e:	add    al,BYTE PTR [rax]
   140058450:	cld    
   140058451:	pop    QWORD PTR [rax+rax*1]
   140058454:	xor    DWORD PTR [rbp-0x727dfffe],ecx
   14005845a:	add    al,BYTE PTR [rax]
   14005845c:	or     al,0x90
   14005845e:	add    al,0x0
   140058460:	nop
   140058461:	lea    eax,[rdx]
   140058463:	add    BYTE PTR [rdx-0x72],dl
   140058466:	add    al,BYTE PTR [rax]
   140058468:	rex.WR xchg rax,rax
   14005846a:	add    al,0x0
   14005846c:	push   rdx
   14005846d:	mov    es,WORD PTR [rdx]
   14005846f:	add    BYTE PTR [rbp-0x71],ah
   140058472:	add    al,BYTE PTR [rax]
   140058474:	fs nop
   140058476:	add    al,0x0
   140058478:	pop    QWORD PTR gs:[rdx]
   14005847b:	add    BYTE PTR [rdx+0x7800028f],bl
   140058481:	nop
   140058482:	add    al,0x0
   140058484:	movabs al,ds:0x34000290d900028f
   14005848d:	nop
   14005848e:	add    al,0x0
   140058490:	loopne 0x140058422
   140058492:	add    al,BYTE PTR [rax]
   140058494:	cmp    al,0x91
   140058496:	add    al,BYTE PTR [rax]
   140058498:	mov    BYTE PTR [rax-0x6ec3fffc],dl
   14005849e:	add    al,BYTE PTR [rax]
   1400584a0:	(bad)  
   1400584a1:	xchg   edx,eax
   1400584a2:	add    al,BYTE PTR [rax]
   1400584a4:	pushf  
   1400584a5:	nop
   1400584a6:	add    al,0x0
   1400584a8:	(bad)  
   1400584a9:	xchg   edx,eax
   1400584aa:	add    al,BYTE PTR [rax]
   1400584ac:	imul   edx,DWORD PTR [rbx-0x6f4ffffe],0x4
   1400584b3:	add    BYTE PTR [rax-0x6d],dh
   1400584b6:	add    al,BYTE PTR [rax]
   1400584b8:	mov    ss,WORD PTR [rbx-0x6f2bfffe]
   1400584be:	add    al,0x0
   1400584c0:	mov    al,0x93
   1400584c2:	add    al,BYTE PTR [rax]
   1400584c4:	int    0x93
   1400584c6:	add    al,BYTE PTR [rax]
   1400584c8:	test   BYTE PTR [rcx-0x6c2ffffc],dl
   1400584ce:	add    al,BYTE PTR [rax]
   1400584d0:	adc    al,0x94
   1400584d2:	add    al,BYTE PTR [rax]
   1400584d4:	cwde   
   1400584d5:	xchg   ecx,eax
   1400584d6:	add    al,0x0
   1400584d8:	and    BYTE PTR [rdx+rax*1+0x294bb00],dl
   1400584df:	add    ah,cl
   1400584e1:	nop
   1400584e2:	add    al,0x0
   1400584e4:	(bad)  
   1400584e5:	xchg   ebp,eax
   1400584e6:	add    al,BYTE PTR [rax]
   1400584e8:	push   rsp
   1400584e9:	xchg   esi,eax
   1400584ea:	add    al,BYTE PTR [rax]
   1400584ec:	mov    WORD PTR [rcx-0x699ffffc],ss
   1400584f2:	add    al,BYTE PTR [rax]
   1400584f4:	popf   
   1400584f5:	xchg   esi,eax
   1400584f6:	add    al,BYTE PTR [rax]
   1400584f8:	rcl    BYTE PTR [rax-0x695ffffc],0x2
   1400584ff:	add    al,cl
   140058501:	xchg   esi,eax
   140058502:	add    al,BYTE PTR [rax]
   140058504:	fcom   QWORD PTR [rax-0x6937fffc]
   14005850a:	add    al,BYTE PTR [rax]
   14005850c:	jp     0x1400584a5
   14005850e:	add    al,BYTE PTR [rax]
   140058510:	in     al,dx
   140058511:	nop
   140058512:	add    al,0x0
   140058514:	jp     0x1400584ad
   140058516:	add    al,BYTE PTR [rax]
   140058518:	cwde   
   140058519:	xchg   edi,eax
   14005851a:	add    al,BYTE PTR [rax]
   14005851c:	or     BYTE PTR [rcx-0x685ffffc],dl
   140058522:	add    al,BYTE PTR [rax]
   140058524:	ficom  WORD PTR [rdi-0x6ee7fffe]
   14005852a:	add    al,0x0
   14005852c:	ficom  WORD PTR [rdi-0x6720fffe]
   140058532:	add    al,BYTE PTR [rax]
   140058534:	sub    al,0x91
   140058536:	add    al,0x0
   140058538:	fistp  WORD PTR [rax-0x6712fffe]
   14005853e:	add    al,BYTE PTR [rax]
   140058540:	rex.R xchg ecx,eax
   140058542:	add    al,0x0
   140058544:	lock cwde 
   140058546:	add    al,BYTE PTR [rax]
   140058548:	movabs ds:0xb00004917400029f,al
   140058551:	lahf   
   140058552:	add    al,BYTE PTR [rax]
   140058554:	rex.RX movabs al,ds:0xa050000491540002
   14005855e:	add    al,BYTE PTR [rax]
   140058560:	(bad)  
   140058561:	movabs al,ds:0xa0e0000491640002
   14005856a:	add    al,BYTE PTR [rax]
   14005856c:	in     al,dx
   14005856d:	movabs al,ds:0xa0ec000492000002
   140058576:	add    al,BYTE PTR [rax]
   140058578:	enter  0x2a1,0x0
   14005857c:	or     al,0x92
   14005857e:	add    al,0x0
   140058580:	enter  0x2a1,0x0
   140058584:	push   rax
   140058585:	movabs ds:0xa250000492200002,al
   14005858e:	add    al,BYTE PTR [rax]
   140058590:	nop
   140058591:	movabs ds:0xa290000492300002,al
   14005859a:	add    al,BYTE PTR [rax]
   14005859c:	iret   
   14005859d:	movabs ds:0xa2cf000492380002,al
   1400585a6:	add    al,BYTE PTR [rax]
   1400585a8:	call   0x19005884f
   1400585ad:	xchg   edx,eax
   1400585ae:	add    al,0x0
   1400585b0:	lock movabs ds:0x92600002a33b0002,al
   1400585ba:	add    al,0x0
   1400585bc:	cmp    esp,DWORD PTR [rbx-0x5c7ffffe]
   1400585c2:	add    al,BYTE PTR [rax]
   1400585c4:	ins    BYTE PTR es:[rdi],dx
   1400585c5:	xchg   edx,eax
   1400585c6:	add    al,0x0
   1400585c8:	and    BYTE PTR [rbx-0x5c74fffe],0x2
   1400585cf:	add    BYTE PTR [rax-0x6ffffb6e],al
   1400585d5:	movabs ds:0x91c40002a4260002,eax
   1400585de:	add    al,0x0
   1400585e0:	movs   BYTE PTR es:[rdi],BYTE PTR es:[rsi]
   1400585e2:	add    al,BYTE PTR [rax]
   1400585e4:	jno    0x14005858a
   1400585e6:	add    al,BYTE PTR [rax]
   1400585e8:	fcom   QWORD PTR [rcx-0x5b8efffc]
   1400585ee:	add    al,BYTE PTR [rax]
   1400585f0:	lea    esp,[rdx+rax*1+0x491f000]
   1400585f7:	add    BYTE PTR [rax-0x2afffd5c],dl
   1400585fd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400585fe:	add    al,BYTE PTR [rax]
   140058600:	mov    ah,0x91
   140058602:	add    al,0x0
   140058604:	add    BYTE PTR [rbp-0x5adefffe],ah
   14005860a:	add    al,BYTE PTR [rax]
   14005860c:	mov    esp,0x30000491
   140058611:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140058612:	add    al,BYTE PTR [rax]
   140058614:	xlat   BYTE PTR ds:[rbx]
   140058615:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140058616:	add    al,BYTE PTR [rax]
   140058618:	movabs al,ds:0x6a0002a640000491
   140058621:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140058622:	add    al,BYTE PTR [rax]
   140058624:	and    BYTE PTR [rbx-0x5995fffc],dl
   14005862a:	add    al,BYTE PTR [rax]
   14005862c:	movabs ds:0xa20004932c0002a6,al
   140058635:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140058636:	add    al,BYTE PTR [rax]
   140058638:	mov    esp,0x440002a6
   14005863d:	xchg   ebx,eax
   14005863e:	add    al,0x0
   140058640:	shl    BYTE PTR [rsi-0x58e9fffe],0x2
   140058647:	add    BYTE PTR [rax+0x16000493],bl
   14005864d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005864e:	add    al,BYTE PTR [rax]
   140058650:	mov    DWORD PTR [rax-0x6c53fffe],ebp
   140058656:	add    al,0x0
   140058658:	mov    DWORD PTR [rax-0x5750fffe],ebp
   14005865e:	add    al,BYTE PTR [rax]
   140058660:	rcl    BYTE PTR [rbx-0x574ffffc],0x2
   140058667:	add    dh,bl
   140058669:	test   al,0x2
   14005866b:	add    BYTE PTR [rdx+rdx*4-0x5721fffc],bh
   140058672:	add    al,BYTE PTR [rax]
   140058674:	(bad)  
   140058675:	stos   DWORD PTR es:[rdi],eax
   140058676:	add    al,BYTE PTR [rax]
   140058678:	enter  0x492,0x0
   14005867c:	(bad)  
   14005867d:	stos   DWORD PTR es:[rdi],eax
   14005867e:	add    al,BYTE PTR [rax]
   140058680:	(bad)  
   140058681:	stos   DWORD PTR es:[rdi],eax
   140058682:	add    al,BYTE PTR [rax]
   140058684:	fcom   QWORD PTR [rdx-0x54bffffc]
   14005868a:	add    al,BYTE PTR [rax]
   14005868c:	cmp    eax,0x5c0002ac
   140058691:	xchg   ebx,eax
   140058692:	add    al,0x0
   140058694:	lods   al,BYTE PTR ds:[rsi]
   140058696:	add    al,BYTE PTR [rax]
   140058698:	imul   ebp,DWORD PTR [rdx+rax*1+0x492ec00],0x2ac6900
   1400586a3:	add    ah,al
   1400586a5:	lods   al,BYTE PTR ds:[rsi]
   1400586a6:	add    al,BYTE PTR [rax]
   1400586a8:	hlt    
   1400586a9:	xchg   edx,eax
   1400586aa:	add    al,0x0
   1400586ac:	(bad)  
   1400586ad:	lods   al,BYTE PTR ds:[rsi]
   1400586ae:	add    al,BYTE PTR [rax]
   1400586b0:	stc    
   1400586b1:	lods   al,BYTE PTR ds:[rsi]
   1400586b2:	add    al,BYTE PTR [rax]
   1400586b4:	adc    BYTE PTR [rbx-0x52cffffc],dl
   1400586ba:	add    al,BYTE PTR [rax]
   1400586bc:	imul   ebp,DWORD PTR [rbp-0x6d4bfffe],0xad700004
   1400586c6:	add    al,BYTE PTR [rax]
   1400586c8:	ret    0x2ad
   1400586cb:	add    BYTE PTR [rax-0x6d],bh
   1400586ce:	add    al,0x0
   1400586d0:	adc    BYTE PTR [rsi-0x5119fffe],ch
   1400586d6:	add    al,BYTE PTR [rax]
   1400586d8:	fs xchg ebx,eax
   1400586da:	add    al,0x0
   1400586dc:	add    BYTE PTR [rdi-0x5094fffe],ch
   1400586e2:	add    al,BYTE PTR [rax]
   1400586e4:	nop
   1400586e5:	xchg   edx,eax
   1400586e6:	add    al,0x0
   1400586e8:	jo     0x140058699
   1400586ea:	add    al,BYTE PTR [rax]
   1400586ec:	(bad)  
   1400586ed:	scas   eax,DWORD PTR es:[rdi]
   1400586ee:	add    al,BYTE PTR [rax]
   1400586f0:	push   rsp
   1400586f1:	xchg   ebx,eax
   1400586f2:	add    al,0x0
   1400586f4:	loopne 0x1400586a5
   1400586f6:	add    al,BYTE PTR [rax]
   1400586f8:	jns    0x1400586aa
   1400586fa:	add    al,BYTE PTR [rax]
   1400586fc:	movabs al,ds:0x300002b0a0000492
   140058705:	mov    cl,0x2
   140058707:	add    BYTE PTR [rax+0x30000493],al
   14005870d:	mov    cl,0x2
   14005870f:	add    BYTE PTR [rbp+0x80002b1],al
   140058715:	xchg   esp,eax
   140058716:	add    al,0x0
   140058718:	nop
   140058719:	mov    cl,0x2
   14005871b:	add    dh,bl
   14005871d:	mov    cl,0x2
   14005871f:	add    al,dl
   140058721:	xchg   ebx,eax
   140058722:	add    al,0x0
   140058724:	fidiv  WORD PTR [rcx-0x4dadfffe]
   14005872a:	add    al,BYTE PTR [rax]
   14005872c:	loopne 0x1400586c1
   14005872e:	add    al,0x0
   140058730:	push   rdx
   140058731:	mov    dl,0x2
   140058733:	add    BYTE PTR [rcx-0x4e],bl
   140058736:	add    al,BYTE PTR [rax]
   140058738:	hlt    
   140058739:	xchg   ebx,eax
   14005873a:	add    al,0x0
   14005873c:	(bad)  
   14005873d:	mov    dl,0x2
   14005873f:	add    bl,al
   140058741:	mov    dl,0x2
   140058743:	add    al,al
   140058745:	xchg   esp,eax
   140058746:	add    al,0x0
   140058748:	ret    
   140058749:	mov    dl,0x2
   14005874b:	add    dh,ah
   14005874d:	mov    dl,0x2
   14005874f:	add    ah,cl
   140058751:	xchg   esp,eax
   140058752:	add    al,0x0
   140058754:	out    0xb2,al
   140058756:	add    al,BYTE PTR [rax]
   140058758:	pop    rcx
   140058759:	mov    bl,0x2
   14005875b:	add    al,ah
   14005875d:	xchg   esp,eax
   14005875e:	add    al,0x0
   140058760:	pop    rcx
   140058761:	mov    bl,0x2
   140058763:	add    BYTE PTR [rsi-0x4d],bl
   140058766:	add    al,BYTE PTR [rax]
   140058768:	hlt    
   140058769:	xchg   esp,eax
   14005876a:	add    al,0x0
   14005876c:	pop    rsi
   14005876d:	mov    bl,0x2
   14005876f:	add    BYTE PTR [rbp+0x40002b3],bl
   140058775:	xchg   ebp,eax
   140058776:	add    al,0x0
   140058778:	movabs al,ds:0x140002b4180002b3
   140058781:	xchg   ebp,eax
   140058782:	add    al,0x0
   140058784:	mov    spl,0x2
   140058787:	add    ch,cl
   140058789:	mov    ah,0x2
   14005878b:	add    BYTE PTR [rsp+rdx*4-0x4b32fffc],al
   140058792:	add    al,BYTE PTR [rax]
   140058794:	and    DWORD PTR [rbp-0x6b63fffe],esi
   14005879a:	add    al,0x0
   14005879c:	and    DWORD PTR [rbp-0x4ac2fffe],esi
   1400587a2:	add    al,BYTE PTR [rax]
   1400587a4:	mov    al,0x94
   1400587a6:	add    al,0x0
   1400587a8:	mov    bpl,0x2
   1400587ab:	add    BYTE PTR [rdx],cl
   1400587ad:	mov    bh,0x2
   1400587af:	add    BYTE PTR [rax],bl
   1400587b1:	xchg   esp,eax
   1400587b2:	add    al,0x0
   1400587b4:	adc    BYTE PTR [rdi-0x488afffe],dh
   1400587ba:	add    al,BYTE PTR [rax]
   1400587bc:	xor    al,0x94
   1400587be:	add    al,0x0
   1400587c0:	xor    BYTE PTR [rdi-0x4839fffe],0x2
   1400587c7:	add    BYTE PTR [rax-0x6c],al
   1400587ca:	add    al,0x0
   1400587cc:	shl    BYTE PTR [rdi-0x47cffffe],1
   1400587d2:	add    al,BYTE PTR [rax]
   1400587d4:	pop    rsp
   1400587d5:	xchg   esp,eax
   1400587d6:	add    al,0x0
   1400587d8:	xor    BYTE PTR [rax-0x476ffffe],bh
   1400587de:	add    al,BYTE PTR [rax]
   1400587e0:	jo     0x140058776
   1400587e2:	add    al,0x0
   1400587e4:	nop
   1400587e5:	mov    eax,0xb99f0002
   1400587ea:	add    al,BYTE PTR [rax]
   1400587ec:	rex.WR xchg rsp,rax
   1400587ee:	add    al,0x0
   1400587f0:	movabs al,ds:0x680002b9d10002b9
   1400587f9:	xchg   esp,eax
   1400587fa:	add    al,0x0
   1400587fc:	loopne 0x1400587b7
   1400587fe:	add    al,BYTE PTR [rax]
   140058800:	adc    DWORD PTR [rdx-0x6b83fffe],edi
   140058806:	add    al,0x0
   140058808:	and    BYTE PTR [rdx-0x4537fffe],bh
   14005880e:	add    al,BYTE PTR [rax]
   140058810:	and    al,0x95
   140058812:	add    al,0x0
   140058814:	enter  0x2ba,0x0
   140058818:	loope  0x1400587d4
   14005881a:	add    al,BYTE PTR [rax]
   14005881c:	xor    BYTE PTR [rbp-0x451efffc],dl
   140058822:	add    al,BYTE PTR [rax]
   140058824:	xor    al,0xbb
   140058826:	add    al,BYTE PTR [rax]
   140058828:	rex.R xchg ebp,eax
   14005882a:	add    al,0x0
   14005882c:	xor    al,0xbb
   14005882e:	add    al,BYTE PTR [rax]
   140058830:	cmp    DWORD PTR [rbx-0x6aa7fffe],edi
   140058836:	add    al,0x0
   140058838:	cmp    DWORD PTR [rbx-0x44bbfffe],edi
   14005883e:	add    al,BYTE PTR [rax]
   140058840:	push   0x50000495
   140058845:	mov    ebx,0xbba30002
   14005884a:	add    al,BYTE PTR [rax]
   14005884c:	js     0x1400587e3
   14005884e:	add    al,0x0
   140058850:	mov    al,0xbb
   140058852:	add    al,BYTE PTR [rax]
   140058854:	stc    
   140058855:	mov    ebx,0x95880002
   14005885a:	add    al,0x0
   14005885c:	stc    
   14005885d:	mov    ebx,0xbc1a0002
   140058862:	add    al,BYTE PTR [rax]
   140058864:	nop
   140058865:	xchg   ebp,eax
   140058866:	add    al,0x0
   140058868:	sbb    bh,BYTE PTR [rdx+rax*1+0x2bc8300]
   14005886f:	add    BYTE PTR [rbp+rdx*4-0x436ffffc],ah
   140058876:	add    al,BYTE PTR [rax]
   140058878:	mov    bh,0xbc
   14005887a:	add    al,BYTE PTR [rax]
   14005887c:	mov    eax,0xb7000495
   140058881:	mov    esp,0xbcf50002
   140058886:	add    al,BYTE PTR [rax]
   140058888:	rcl    BYTE PTR [rbp-0x430afffc],0x2
   14005888f:	add    BYTE PTR [rdi*4-0x6a2bfffe],dl
   140058896:	add    al,0x0
   140058898:	adc    al,0xbd
   14005889a:	add    al,BYTE PTR [rax]
   14005889c:	sbb    bh,BYTE PTR [rbp-0x6a17fffe]
   1400588a2:	add    al,0x0
   1400588a4:	and    BYTE PTR [rbp-0x42bcfffe],bh
   1400588aa:	add    al,BYTE PTR [rax]
   1400588ac:	clc    
   1400588ad:	xchg   ebp,eax
   1400588ae:	add    al,0x0
   1400588b0:	push   rax
   1400588b1:	mov    ebp,0xbde20002
   1400588b6:	add    al,BYTE PTR [rax]
   1400588b8:	add    BYTE PTR [rsi-0x420ffffc],dl
   1400588be:	add    al,BYTE PTR [rax]
   1400588c0:	rex.WRB movabs r14,0xbe4d000496080002
   1400588ca:	add    al,BYTE PTR [rax]
   1400588cc:	test   BYTE PTR [rsi-0x69effffe],bh
   1400588d2:	add    al,0x0
   1400588d4:	test   BYTE PTR [rsi-0x411ffffe],bh
   1400588da:	add    al,BYTE PTR [rax]
   1400588dc:	and    al,0x96
   1400588de:	add    al,0x0
   1400588e0:	loopne 0x1400588a0
   1400588e2:	add    al,BYTE PTR [rax]
   1400588e4:	xor    eax,0x380002bf
   1400588e9:	xchg   esi,eax
   1400588ea:	add    al,0x0
   1400588ec:	xor    eax,0x8e0002bf
   1400588f1:	mov    edi,0x964c0002
   1400588f6:	add    al,0x0
   1400588f8:	mov    ?,WORD PTR [rdi-0x406cfffe]
   1400588fe:	add    al,BYTE PTR [rax]
   140058900:	(bad)  
   140058901:	xchg   esi,eax
   140058902:	add    al,0x0
   140058904:	xchg   ebx,eax
   140058905:	mov    edi,0xbfc70002
   14005890a:	add    al,BYTE PTR [rax]
   14005890c:	je     0x1400588a4
   14005890e:	add    al,0x0
   140058910:	sar    BYTE PTR [rdi-0x3f9ffffe],1
   140058916:	add    al,BYTE PTR [rax]
   140058918:	test   BYTE PTR [rsi-0x3f9ffffc],dl
   14005891e:	add    al,BYTE PTR [rax]
   140058920:	xchg   edi,eax
   140058921:	rol    BYTE PTR [rdx],0x0
   140058924:	xchg   esp,eax
   140058925:	xchg   esi,eax
   140058926:	add    al,0x0
   140058928:	xchg   edi,eax
   140058929:	rol    BYTE PTR [rdx],0x0
   14005892c:	rex.WRXB rol QWORD PTR [r10],0x0
   140058930:	test   al,0x96
   140058932:	add    al,0x0
   140058934:	rex.WRXB rol QWORD PTR [r10],0x0
   140058938:	jbe    0x1400588fb
   14005893a:	add    al,BYTE PTR [rax]
   14005893c:	mov    esp,0x80000496
   140058941:	rol    DWORD PTR [rdx],0x0
   140058944:	xchg   edx,eax
   140058945:	rol    DWORD PTR [rdx],0x0
   140058948:	sbb    al,0x97
   14005894a:	add    al,0x0
   14005894c:	xchg   edx,eax
   14005894d:	rol    DWORD PTR [rdx],0x0
   140058950:	xchg   edi,eax
   140058951:	rol    DWORD PTR [rdx],0x0
   140058954:	and    al,0x97
   140058956:	add    al,0x0
   140058958:	xchg   edi,eax
   140058959:	rol    DWORD PTR [rdx],0x0
   14005895c:	movabs eax,ds:0xa1000497380002c1
   140058965:	rol    DWORD PTR [rdx],0x0
   140058968:	or     dl,al
   14005896a:	add    al,BYTE PTR [rax]
   14005896c:	push   rax
   14005896d:	xchg   edi,eax
   14005896e:	add    al,0x0
   140058970:	or     dl,al
   140058972:	add    al,BYTE PTR [rax]
   140058974:	push   rax
   140058975:	ret    0x2
   140058978:	fs xchg edi,eax
   14005897a:	add    al,0x0
   14005897c:	push   rax
   14005897d:	ret    0x2
   140058980:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140058981:	ret    0x2
   140058984:	je     0x14005891d
   140058986:	add    al,0x0
   140058988:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140058989:	ret    0x2
   14005898c:	lods   al,BYTE PTR ds:[rsi]
   14005898d:	ret    0x2
   140058990:	test   BYTE PTR [rdi-0x3d53fffc],dl
   140058996:	add    al,BYTE PTR [rax]
   140058998:	mov    cl,0xc2
   14005899a:	add    al,BYTE PTR [rax]
   14005899c:	xchg   esp,eax
   14005899d:	xchg   edi,eax
   14005899e:	add    al,0x0
   1400589a0:	rol    dl,0x2
   1400589a3:	add    BYTE PTR [rsp+rax*8],al
   1400589a6:	add    al,BYTE PTR [rax]
   1400589a8:	or     al,0x97
   1400589aa:	add    al,0x0
   1400589ac:	adc    ah,al
   1400589ae:	add    al,BYTE PTR [rax]
   1400589b0:	(bad)
   1400589b5:	xchg   edi,eax
   1400589b6:	add    al,0x0
   1400589b8:	jo     0x14005897e
   1400589ba:	add    al,BYTE PTR [rax]
   1400589bc:	inc    esp
   1400589be:	add    al,BYTE PTR [rax]
   1400589c0:	clc    
   1400589c1:	xchg   esi,eax
   1400589c2:	add    al,0x0
   1400589c4:	add    ch,al
   1400589c6:	add    al,BYTE PTR [rax]
   1400589c8:	and    esi,eax
   1400589ca:	add    al,BYTE PTR [rax]
   1400589cc:	loopne 0x140058964
   1400589ce:	add    al,0x0
   1400589d0:	xor    dh,al
   1400589d2:	add    al,BYTE PTR [rax]
   1400589d4:	pop    rsi
   1400589d6:	add    al,BYTE PTR [rax]
   1400589d8:	(bad)  
   1400589d9:	xchg   esi,eax
   1400589da:	add    al,0x0
   1400589dc:	nop
   1400589dd:	mov    BYTE PTR [rdx],0x0
   1400589e0:	imul   eax,edi,0x96cc0002
   1400589e6:	add    al,0x0
   1400589e8:	jo     0x1400589b1
   1400589ea:	add    al,BYTE PTR [rax]
   1400589ec:	(bad)  
   1400589ed:	enter  0x2,0xa4
   1400589f1:	xchg   edi,eax
   1400589f2:	add    al,0x0
   1400589f4:	and    al,cl
   1400589f6:	add    al,BYTE PTR [rax]
   1400589f8:	xor    cl,al
   1400589fa:	add    al,BYTE PTR [rax]
   1400589fc:	lods   al,BYTE PTR ds:[rsi]
   1400589fd:	xchg   edi,eax
   1400589fe:	add    al,0x0
   140058a00:	xor    cl,al
   140058a02:	add    al,BYTE PTR [rax]
   140058a04:	push   rbp
   140058a05:	enter  0x2,0xb4
   140058a09:	xchg   edi,eax
   140058a0a:	add    al,0x0
   140058a0c:	push   rbp
   140058a0d:	enter  0x2,0x5d
   140058a11:	enter  0x2,0xc8
   140058a15:	xchg   edi,eax
   140058a16:	add    al,0x0
   140058a18:	(bad)  
   140058a19:	enter  0x2,0xfa
   140058a1d:	enter  0x2,0xd8
   140058a21:	xchg   edi,eax
   140058a22:	add    al,0x0
   140058a24:	add    cl,cl
   140058a26:	add    al,BYTE PTR [rax]
   140058a28:	(bad)  
   140058a29:	leave  
   140058a2a:	add    al,BYTE PTR [rax]
   140058a2c:	loopne 0x1400589c5
   140058a2e:	add    al,0x0
   140058a30:	(bad)  
   140058a31:	leave  
   140058a32:	add    al,BYTE PTR [rax]
   140058a34:	rex.WB leave 
   140058a36:	add    al,BYTE PTR [rax]
   140058a38:	in     al,dx
   140058a39:	xchg   edi,eax
   140058a3a:	add    al,0x0
   140058a3c:	rex.WB leave 
   140058a3e:	add    al,BYTE PTR [rax]
   140058a40:	enter  0x2c9,0x0
   140058a44:	add    BYTE PTR [rax-0x3637fffc],bl
   140058a4a:	add    al,BYTE PTR [rax]
   140058a4c:	sub    ecx,edx
   140058a4e:	add    al,BYTE PTR [rax]
   140058a50:	sbb    BYTE PTR [rax-0x35d4fffc],bl
   140058a56:	add    al,BYTE PTR [rax]
   140058a58:	cmp    dl,cl
   140058a5a:	add    al,BYTE PTR [rax]
   140058a5c:	xor    BYTE PTR [rax-0x35bffffc],bl
   140058a62:	add    al,BYTE PTR [rax]
   140058a64:	out    dx,eax
   140058a65:	retf   
   140058a66:	add    al,BYTE PTR [rax]
   140058a68:	rex cwde 
   140058a6a:	add    al,0x0
   140058a6c:	out    dx,eax
   140058a6d:	retf   
   140058a6e:	add    al,BYTE PTR [rax]
   140058a70:	rol    BYTE PTR es:[rdx],cl
   140058a73:	add    BYTE PTR [rax+rbx*4+0x4],dl
   140058a77:	add    BYTE PTR [rsi],ah
   140058a79:	rol    BYTE PTR [rdx],cl
   140058a7b:	add    BYTE PTR [rbp+0x680002d3],bh
   140058a81:	cwde   
   140058a82:	add    al,0x0
   140058a84:	rcl    bl,0x2
   140058a87:	add    BYTE PTR [rsi+0x7c0002d4],dh
   140058a8d:	cwde   
   140058a8e:	add    al,0x0
   140058a90:	mov    dh,0xd4
   140058a92:	add    al,BYTE PTR [rax]
   140058a94:	xor    al,0xd5
   140058a96:	add    al,BYTE PTR [rax]
   140058a98:	nop
   140058a99:	cwde   
   140058a9a:	add    al,0x0
   140058a9c:	xor    al,0xd5
   140058a9e:	add    al,BYTE PTR [rax]
   140058aa0:	stos   BYTE PTR es:[rdi],al
   140058aa1:	(bad)  
   140058aa2:	add    al,BYTE PTR [rax]
   140058aa4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140058aa5:	cwde   
   140058aa6:	add    al,0x0
   140058aa8:	stos   BYTE PTR es:[rdi],al
   140058aa9:	(bad)  
   140058aaa:	add    al,BYTE PTR [rax]
   140058aac:	scas   eax,DWORD PTR es:[rdi]
   140058aad:	(bad)  
   140058aae:	add    al,BYTE PTR [rax]
   140058ab0:	mov    eax,0xaf000498
   140058ab5:	(bad)  
   140058ab6:	add    al,BYTE PTR [rax]
   140058ab8:	(bad)  
   140058ab9:	(bad)  
   140058aba:	add    al,BYTE PTR [rax]
   140058abc:	enter  0x498,0x0
   140058ac0:	rcl    ch,1
   140058ac2:	add    al,BYTE PTR [rax]
   140058ac4:	adc    dh,dl
   140058ac6:	add    al,BYTE PTR [rax]
   140058ac8:	fcomp  DWORD PTR [rax-0x29effffc]
   140058ace:	add    al,BYTE PTR [rax]
   140058ad0:	movabs al,ds:0xa0000498e00002d6
   140058ad9:	(bad)  
   140058ada:	add    al,BYTE PTR [rax]
   140058adc:	push   rax
   140058add:	xlat   BYTE PTR ds:[rbx]
   140058ade:	add    al,BYTE PTR [rax]
   140058ae0:	clc    
   140058ae1:	cwde   
   140058ae2:	add    al,0x0
   140058ae4:	push   rax
   140058ae5:	xlat   BYTE PTR ds:[rbx]
   140058ae6:	add    al,BYTE PTR [rax]
   140058ae8:	xchg   ebx,eax
   140058ae9:	xlat   BYTE PTR ds:[rbx]
   140058aea:	add    al,BYTE PTR [rax]
   140058aec:	add    al,0x99
   140058aee:	add    al,0x0
   140058af0:	xchg   ebx,eax
   140058af1:	xlat   BYTE PTR ds:[rbx]
   140058af2:	add    al,BYTE PTR [rax]
   140058af4:	loopne 0x140058acd
   140058af6:	add    al,BYTE PTR [rax]
   140058af8:	adc    BYTE PTR [rcx-0x281ffffc],bl
   140058afe:	add    al,BYTE PTR [rax]
   140058b00:	repz xlat BYTE PTR ds:[rbx]
   140058b02:	add    al,BYTE PTR [rax]
   140058b04:	and    al,0x99
   140058b06:	add    al,0x0
   140058b08:	repz xlat BYTE PTR ds:[rbx]
   140058b0a:	add    al,BYTE PTR [rax]
   140058b0c:	imul   ebx,eax,0x99380002
   140058b12:	add    al,0x0
   140058b14:	imul   ebx,eax,0xd9a20002
   140058b1a:	add    al,BYTE PTR [rax]
   140058b1c:	rex.WR cqo 
   140058b1e:	add    al,0x0
   140058b20:	mov    al,0xd9
   140058b22:	add    al,BYTE PTR [rax]
   140058b24:	sbb    edx,0x2
   140058b27:	add    BYTE PTR [rcx+rbx*4+0x4],ch
   140058b2b:	add    BYTE PTR [rbx-0x47fffd26],al
   140058b31:	fiadd  DWORD PTR [rdx]
   140058b33:	add    BYTE PTR [rax-0x67],bh
   140058b36:	add    al,0x0
   140058b38:	mov    eax,0xec0002da
   140058b3d:	fiadd  DWORD PTR [rdx]
   140058b3f:	add    BYTE PTR [rcx+rbx*4-0x250ffffc],cl
   140058b46:	add    al,BYTE PTR [rax]
   140058b48:	(bad)  
   140058b49:	fadd   QWORD PTR [rdx]
   140058b4b:	add    BYTE PTR [rcx+rbx*4-0x236ffffc],bl
   140058b52:	add    al,BYTE PTR [rax]
   140058b54:	push   rcx
   140058b55:	fld    QWORD PTR [rdx]
   140058b57:	add    BYTE PTR [rdx+rbx*4+0x4],cl
   140058b5b:	add    BYTE PTR [rax-0x23],ah
   140058b5e:	add    al,BYTE PTR [rax]
   140058b60:	rcr    ch,0x2
   140058b63:	add    BYTE PTR [rax-0x66],bl
   140058b66:	add    al,0x0
   140058b68:	rcr    ch,0x2
   140058b6b:	add    dh,dh
   140058b6d:	fld    QWORD PTR [rdx]
   140058b6f:	add    BYTE PTR [rax-0x66],ah
   140058b72:	add    al,0x0
   140058b74:	add    dh,bl
   140058b76:	add    al,BYTE PTR [rax]
   140058b78:	sbb    al,0xdf
   140058b7a:	add    al,BYTE PTR [rax]
   140058b7c:	push   0x3000049a
   140058b81:	fild   WORD PTR [rdx]
   140058b83:	add    bh,bh
   140058b85:	loope  0x140058b89
   140058b87:	add    BYTE PTR [rax-0x66],dh
   140058b8a:	add    al,0x0
   140058b8c:	add    dl,ah
   140058b8e:	add    al,BYTE PTR [rax]
   140058b90:	je     0x140058b74
   140058b92:	add    al,BYTE PTR [rax]
   140058b94:	sbb    BYTE PTR [rdx-0x1d7ffffc],0x2
   140058b9b:	add    BYTE PTR [rsi-0x77fffd1e],ch
   140058ba1:	(bad)  
   140058ba2:	add    al,0x0
   140058ba4:	add    bl,ah
   140058ba6:	add    al,BYTE PTR [rax]
   140058ba8:	(bad)  
   140058ba9:	jrcxz  0x140058bad
   140058bab:	add    BYTE PTR [rax+0x7000049a],dl
   140058bb1:	jrcxz  0x140058bb5
   140058bb3:	add    ah,bl
   140058bb5:	jrcxz  0x140058bb9
   140058bb7:	add    BYTE PTR [rax-0xffffb66],bl
   140058bbd:	jrcxz  0x140058bc1
   140058bbf:	add    BYTE PTR [rsp+riz*8+0x2],ah
   140058bc3:	add    BYTE PTR [rax+0x7000049a],ah
   140058bc9:	in     al,0x2
   140058bcb:	add    BYTE PTR [rax-0x57fffd1c],bh
   140058bd1:	(bad)  
   140058bd2:	add    al,0x0
   140058bd4:	shl    ah,0x2
   140058bd7:	add    BYTE PTR [rcx-0x1b],bl
   140058bda:	add    al,BYTE PTR [rax]
   140058bdc:	mov    al,0x9a
   140058bde:	add    al,0x0
   140058be0:	(bad)  
   140058be1:	in     eax,0x2
   140058be3:	add    cl,cl
   140058be5:	in     eax,0x2
   140058be7:	add    al,cl
   140058be9:	(bad)  
   140058bea:	add    al,0x0
   140058bec:	lock in eax,0x2
   140058bef:	add    BYTE PTR [rdx-0x2bfffd1a],dl
   140058bf5:	(bad)  
   140058bf6:	add    al,0x0
   140058bf8:	movabs al,ds:0xe40002e7190002e6
   140058c01:	(bad)  
   140058c02:	add    al,0x0
   140058c04:	and    bh,ah
   140058c06:	add    al,BYTE PTR [rax]
   140058c08:	repnz out 0x2,eax
   140058c0b:	add    al,dh
   140058c0d:	(bad)  
   140058c0e:	add    al,0x0
   140058c10:	add    al,ch
   140058c12:	add    al,BYTE PTR [rax]
   140058c14:	sub    ch,al
   140058c16:	add    al,BYTE PTR [rax]
   140058c18:	cld    
   140058c19:	(bad)  
   140058c1a:	add    al,0x0
   140058c1c:	sub    ch,al
   140058c1e:	add    al,BYTE PTR [rax]
   140058c20:	push   rax
   140058c21:	jmp    0xdb118c28
   140058c26:	add    al,0x0
   140058c28:	push   rax
   140058c29:	jmp    0x129f28c30
   140058c2e:	add    al,BYTE PTR [rax]
   140058c30:	and    al,0x9b
   140058c32:	add    al,0x0
   140058c34:	lock jmp 0x12a198c3c
   140058c3a:	add    al,BYTE PTR [rax]
   140058c3c:	xor    al,0x9b
   140058c3e:	add    al,0x0
   140058c40:	adc    al,0xea
   140058c42:	add    al,BYTE PTR [rax]
   140058c44:	movabs al,ds:0xa000049b400002ea
   140058c4d:	(bad)  
   140058c4e:	add    al,BYTE PTR [rax]
   140058c50:	add    ch,bl
   140058c52:	add    al,BYTE PTR [rax]
   140058c54:	push   rsp
   140058c55:	fwait
   140058c56:	add    al,0x0
   140058c58:	adc    bl,ch
   140058c5a:	add    al,BYTE PTR [rax]
   140058c5c:	cdq    
   140058c5d:	jmp    0x140058c61
   140058c5f:	add    BYTE PTR [rbx+rbx*4+0x4],ah
   140058c63:	add    BYTE PTR [rax+0x6a0002eb],ah
   140058c69:	in     al,dx
   140058c6a:	add    al,BYTE PTR [rax]
   140058c6c:	je     0x140058c09
   140058c6e:	add    al,0x0
   140058c70:	sub    ah,0x2
   140058c73:	add    BYTE PTR [rsp+rbp*8-0x665bfffe],dl
   140058c7a:	add    al,0x0
   140058c7c:	xchg   esp,eax
   140058c7d:	in     al,dx
   140058c7e:	add    al,BYTE PTR [rax]
   140058c80:	pop    rdx
   140058c81:	in     eax,dx
   140058c82:	add    al,BYTE PTR [rax]
   140058c84:	lods   al,BYTE PTR ds:[rsi]
   140058c85:	cdq    
   140058c86:	add    al,0x0
   140058c88:	pop    rdx
   140058c89:	in     eax,dx
   140058c8a:	add    al,BYTE PTR [rax]
   140058c8c:	in     ax,dx
   140058c8e:	add    al,BYTE PTR [rax]
   140058c90:	(bad)  
   140058c91:	cdq    
   140058c92:	add    al,0x0
   140058c94:	nop
   140058c95:	in     eax,dx
   140058c96:	add    al,BYTE PTR [rax]
   140058c98:	or     esi,ebp
   140058c9a:	add    al,BYTE PTR [rax]
   140058c9c:	(bad)  
   140058c9d:	cdq    
   140058c9e:	add    al,0x0
   140058ca0:	adc    dh,ch
   140058ca2:	add    al,BYTE PTR [rax]
   140058ca4:	rex.W out dx,al
   140058ca6:	add    al,BYTE PTR [rax]
   140058ca8:	loopne 0x140058c43
   140058caa:	add    al,0x0
   140058cac:	rex.W out dx,al
   140058cae:	add    al,BYTE PTR [rax]
   140058cb0:	or     edi,ebp
   140058cb2:	add    al,BYTE PTR [rax]
   140058cb4:	in     al,dx
   140058cb5:	cdq    
   140058cb6:	add    al,0x0
   140058cb8:	or     edi,ebp
   140058cba:	add    al,BYTE PTR [rax]
   140058cbc:	xor    al,0xf0
   140058cbe:	add    al,BYTE PTR [rax]
   140058cc0:	add    BYTE PTR [rdx-0xfcbfffc],bl
   140058cc6:	add    al,BYTE PTR [rax]
   140058cc8:	push   rsp
   140058cc9:	lock add al,BYTE PTR [rax]
   140058ccc:	sbb    BYTE PTR [rdx-0xfabfffc],bl
   140058cd2:	add    al,BYTE PTR [rax]
   140058cd4:	xor    al,0x2
   140058cd7:	add    BYTE PTR [rdx+rbx*4],ch
   140058cda:	add    al,0x0
   140058cdc:	nop
   140058cdd:	lock add al,BYTE PTR [rax]
   140058ce0:	repz lock add al,BYTE PTR [rax]
   140058ce4:	rcr    BYTE PTR [rdx-0xefffffc],0x2
   140058ceb:	add    bh,al
   140058ced:	icebp  
   140058cee:	add    al,BYTE PTR [rax]
   140058cf0:	cmp    al,0x9a
   140058cf2:	add    al,0x0
   140058cf4:	xor    dl,0x2
   140058cf7:	add    cl,ah
   140058cf9:	cmc    
   140058cfa:	add    al,BYTE PTR [rax]
   140058cfc:	call   0x13005919d
   140058d01:	cmc    
   140058d02:	add    al,BYTE PTR [rax]
   140058d04:	test   al,0xf6
   140058d06:	add    al,BYTE PTR [rax]
   140058d08:	add    BYTE PTR [rbp-0x8affffc],bl
   140058d0e:	add    al,BYTE PTR [rax]
   140058d10:	ja     0x140058d09
   140058d12:	add    al,BYTE PTR [rax]
   140058d14:	or     al,0x9d
   140058d16:	add    al,0x0
   140058d18:	nop
   140058d19:	test   DWORD PTR [rdx],0x2f7c200
   140058d1f:	add    BYTE PTR [rax-0x2ffffb63],ch
   140058d25:	test   DWORD PTR [rdx],0x2f7f300
   140058d2b:	add    BYTE PTR [rbp+rbx*4-0x7fffffc],dh
   140058d32:	add    al,BYTE PTR [rax]
   140058d34:	(bad)  
   140058d35:	clc    
   140058d36:	add    al,BYTE PTR [rax]
   140058d38:	mov    esp,0x1600049d
   140058d3d:	clc    
   140058d3e:	add    al,BYTE PTR [rax]
   140058d40:	rex.WRB cli 
   140058d42:	add    al,BYTE PTR [rax]
   140058d44:	enter  0x49d,0x0
   140058d48:	rex.WRB cli 
   140058d4a:	add    al,BYTE PTR [rax]
   140058d4c:	push   rsp
   140058d4d:	cli    
   140058d4e:	add    al,BYTE PTR [rax]
   140058d50:	lock popf 
   140058d52:	add    al,0x0
   140058d54:	(bad)  
   140058d55:	cli    
   140058d56:	add    al,BYTE PTR [rax]
   140058d58:	(bad)  
   140058d5a:	add    al,BYTE PTR [rax]
   140058d5c:	add    BYTE PTR [rsi-0x51ffffc],bl
   140058d62:	add    al,BYTE PTR [rax]
   140058d64:	jns    0x140058d61
   140058d66:	add    al,BYTE PTR [rax]
   140058d68:	jl     0x140058d08
   140058d6a:	add    al,0x0
   140058d6c:	jns    0x140058d69
   140058d6e:	add    al,BYTE PTR [rax]
   140058d70:	(bad)  
   140058d71:	cld    
   140058d72:	add    al,BYTE PTR [rax]
   140058d74:	mov    BYTE PTR [rsi-0x3e8fffc],bl
   140058d7a:	add    al,BYTE PTR [rax]
   140058d7c:	retf   0x2fc
   140058d7f:	add    BYTE PTR [rax-0x2ffffb62],ah
   140058d85:	cld    
   140058d86:	add    al,BYTE PTR [rax]
   140058d88:	or     ch,bh
   140058d8a:	add    al,BYTE PTR [rax]
   140058d8c:	mov    al,0x9e
   140058d8e:	add    al,0x0
   140058d90:	or     ch,bh
   140058d92:	add    al,BYTE PTR [rax]
   140058d94:	or     al,0xfd
   140058d96:	add    al,BYTE PTR [rax]
   140058d98:	rcr    BYTE PTR [rsi-0x2f3fffc],0x2
   140058d9f:	add    BYTE PTR [rax-0x2],dl
   140058da2:	add    al,BYTE PTR [rax]
   140058da4:	(bad)  
   140058da5:	sahf   
   140058da6:	add    al,0x0
   140058da8:	push   rax
   140058da9:	inc    BYTE PTR [rdx]
   140058dab:	add    BYTE PTR [rdi+rdi*8-0x610bfffe],ch
   140058db2:	add    al,0x0
   140058db4:	lods   al,BYTE PTR ds:[rsi]
   140058db5:	inc    DWORD PTR [rdx]
   140058db7:	add    BYTE PTR [rdx+0xc0002ff],bh
   140058dbd:	lahf   
   140058dbe:	add    al,0x0
   140058dc0:	sar    bh,0x2
   140058dc3:	add    ah,bl
   140058dc5:	add    BYTE PTR [rbx],al
   140058dc7:	add    BYTE PTR [rdi+rbx*4],bl
   140058dca:	add    al,0x0
   140058dcc:	loopne 0x140058dce
   140058dce:	add    eax,DWORD PTR [rax]
   140058dd0:	adc    BYTE PTR [rcx],al
   140058dd2:	add    eax,DWORD PTR [rax]
   140058dd4:	xor    BYTE PTR [rdi+0x1100004],bl
   140058dda:	add    eax,DWORD PTR [rax]
   140058ddc:	adc    al,0x1
   140058dde:	add    eax,DWORD PTR [rax]
   140058de0:	cmp    al,0x9f
   140058de2:	add    al,0x0
   140058de4:	adc    al,0x1
   140058de6:	add    eax,DWORD PTR [rax]
   140058de8:	add    r8b,BYTE PTR [rbx]
   140058deb:	add    BYTE PTR [rax-0x61],dl
   140058dee:	add    al,0x0
   140058df0:	add    r8b,BYTE PTR [rbx]
   140058df3:	add    BYTE PTR [rbp+0x70000302],bh
   140058df9:	lahf   
   140058dfa:	add    al,0x0
   140058dfc:	mov    ebp,0xc6000302
   140058e01:	add    al,BYTE PTR [rbx]
   140058e03:	add    BYTE PTR [rax-0x2ffffb61],cl
   140058e09:	add    al,BYTE PTR [rbx]
   140058e0b:	add    BYTE PTR [rbx],ch
   140058e0d:	add    eax,DWORD PTR [rbx]
   140058e0f:	add    BYTE PTR [rax+0x3000049f],bl
   140058e15:	add    eax,DWORD PTR [rbx]
   140058e17:	add    BYTE PTR [rdx+0x4],al
   140058e1a:	add    eax,DWORD PTR [rax]
   140058e1c:	sub    al,0x9e
   140058e1e:	add    al,0x0
   140058e20:	rex.X add al,0x3
   140058e23:	add    BYTE PTR [rdi+0x54000305],ah
   140058e29:	sahf   
   140058e2a:	add    al,0x0
   140058e2c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140058e2d:	add    eax,0x5e40003
   140058e32:	add    eax,DWORD PTR [rax]
   140058e34:	ins    BYTE PTR es:[rdi],dx
   140058e35:	sahf   
   140058e36:	add    al,0x0
   140058e38:	lock add eax,0x6100003
   140058e3e:	add    eax,DWORD PTR [rax]
   140058e40:	adc    al,0x9c
   140058e42:	add    al,0x0
   140058e44:	adc    BYTE PTR [rsi],al
   140058e46:	add    eax,DWORD PTR [rax]
   140058e48:	mov    al,BYTE PTR [rsi]
   140058e4a:	add    eax,DWORD PTR [rax]
   140058e4c:	rcr    BYTE PTR [rsp+rax*1+0x3070000],0x0
   140058e54:	sbb    cl,BYTE PTR [rax]
   140058e56:	add    eax,DWORD PTR [rax]
   140058e58:	fcomp  QWORD PTR [rsp+rax*1+0x3082000]
   140058e5f:	add    BYTE PTR [rsi+0x8],ch
   140058e62:	add    eax,DWORD PTR [rax]
   140058e64:	or     al,0x9c
   140058e66:	add    al,0x0
   140058e68:	jo     0x140058e72
   140058e6a:	add    eax,DWORD PTR [rax]
   140058e6c:	xlat   BYTE PTR ds:[rbx]
   140058e6d:	or     DWORD PTR [rbx],eax
   140058e6f:	add    BYTE PTR [rax-0x1ffffb64],dh
   140058e75:	or     DWORD PTR [rbx],eax
   140058e77:	add    dh,bh
   140058e79:	or     al,BYTE PTR [rbx]
   140058e7b:	add    BYTE PTR [rsi+rbx*4],cl
   140058e7e:	add    al,0x0
   140058e80:	and    BYTE PTR [rbx],cl
   140058e82:	add    eax,DWORD PTR [rax]
   140058e84:	cdq    
   140058e85:	or     eax,DWORD PTR [rbx]
   140058e87:	add    BYTE PTR [rax-0x5ffffb64],ch
   140058e8d:	or     eax,DWORD PTR [rbx]
   140058e8f:	add    BYTE PTR [rbx+rcx*1-0x62ebfffd],bh
   140058e96:	add    al,0x0
   140058e98:	mov    esp,0xd00030b
   140058e9d:	or     al,0x3
   140058e9f:	add    BYTE PTR [rbx*4+0xc0d0004],ah
   140058ea6:	add    eax,DWORD PTR [rax]
   140058ea8:	(bad)  
   140058ea9:	or     al,0x3
   140058eab:	add    BYTE PTR [rax],bh
   140058ead:	popf   
   140058eae:	add    al,0x0
   140058eb0:	and    BYTE PTR [rbx+rax*1],cl
   140058eb3:	add    BYTE PTR [rax],dh
   140058eb5:	or     al,0x3
   140058eb7:	add    BYTE PTR [rax-0x63],cl
   140058eba:	add    al,0x0
   140058ebc:	xor    BYTE PTR [rbx+rax*1],cl
   140058ebf:	add    BYTE PTR [rcx+0xc],dl
   140058ec2:	add    eax,DWORD PTR [rax]
   140058ec4:	pop    rax
   140058ec5:	popf   
   140058ec6:	add    al,0x0
   140058ec8:	push   rcx
   140058ec9:	or     al,0x3
   140058ecb:	add    BYTE PTR [rsi+0x7400030c],bl
   140058ed1:	popf   
   140058ed2:	add    al,0x0
   140058ed4:	sahf   
   140058ed5:	or     al,0x3
   140058ed7:	add    dl,al
   140058ed9:	or     al,0x3
   140058edb:	add    BYTE PTR [rax-0x3dfffb63],cl
   140058ee1:	or     al,0x3
   140058ee3:	add    BYTE PTR [rcx+0xd],ch
   140058ee6:	add    eax,DWORD PTR [rax]
   140058ee8:	cwde   
   140058ee9:	popf   
   140058eea:	add    al,0x0
   140058eec:	jo     0x140058efb
   140058eee:	add    eax,DWORD PTR [rax]
   140058ef0:	adc    DWORD PTR [rsi],ecx
   140058ef2:	add    eax,DWORD PTR [rax]
   140058ef4:	mov    WORD PTR [rbx+0xe200004],ds
   140058efa:	add    eax,DWORD PTR [rax]
   140058efc:	repz (bad) 
   140058efe:	add    eax,DWORD PTR [rax]
   140058f00:	pushf  
   140058f01:	fwait
   140058f02:	add    al,0x0
   140058f04:	add    BYTE PTR [rdi],cl
   140058f06:	add    eax,DWORD PTR [rax]
   140058f08:	stos   BYTE PTR es:[rdi],al
   140058f09:	lsl    eax,WORD PTR [rax]
   140058f0c:	rcr    BYTE PTR [rsp+rax*1+0x30fb000],1
   140058f13:	add    bh,dl
   140058f15:	lsl    eax,WORD PTR [rax]
   140058f18:	enter  0x49c,0x0
   140058f1c:	loopne 0x140058f2d
   140058f1e:	add    eax,DWORD PTR [rax]
   140058f20:	adc    BYTE PTR [rbx],al
   140058f23:	add    BYTE PTR [rsp+rbx*4],bl
   140058f26:	add    al,0x0
   140058f28:	adc    BYTE PTR [rbx],al
   140058f2b:	add    BYTE PTR [rcx+rdx*1-0x63d3fffd],ah
   140058f32:	add    al,0x0
   140058f34:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140058f35:	adc    DWORD PTR [rbx],eax
   140058f37:	add    BYTE PTR [rbp+0x44000311],dh
   140058f3d:	pushf  
   140058f3e:	add    al,0x0
   140058f40:	rcl    BYTE PTR [rcx],0x3
   140058f43:	add    BYTE PTR [rax-0x57fffcee],al
   140058f49:	fwait
   140058f4a:	add    al,0x0
   140058f4c:	adc    BYTE PTR [rdx],0x3
   140058f4f:	add    BYTE PTR [rsi-0x47fffcee],dh
   140058f55:	fwait
   140058f56:	add    al,0x0
   140058f58:	mov    dh,0x12
   140058f5a:	add    eax,DWORD PTR [rax]
   140058f5c:	stc    
   140058f5d:	adc    al,BYTE PTR [rbx]
   140058f5f:	add    al,al
   140058f61:	fwait
   140058f62:	add    al,0x0
   140058f64:	stc    
   140058f65:	adc    al,BYTE PTR [rbx]
   140058f67:	add    dh,ah
   140058f69:	adc    eax,DWORD PTR [rbx]
   140058f6b:	add    ah,dl
   140058f6d:	fwait
   140058f6e:	add    al,0x0
   140058f70:	out    0x13,al
   140058f72:	add    eax,DWORD PTR [rax]
   140058f74:	or     dl,BYTE PTR [rbx+rax*1]
   140058f77:	add    ah,ch
   140058f79:	fwait
   140058f7a:	add    al,0x0
   140058f7c:	or     dl,BYTE PTR [rbx+rax*1]
   140058f7f:	add    BYTE PTR [rax],dl
   140058f81:	adc    al,0x3
   140058f83:	add    ah,bh
   140058f85:	fwait
   140058f86:	add    al,0x0
   140058f88:	adc    BYTE PTR [rbx+rax*1],dl
   140058f8b:	add    dh,bh
   140058f8d:	adc    al,0x3
   140058f8f:	add    BYTE PTR [rsp+rbx*4+0x4],dl
   140058f93:	add    BYTE PTR [rax],al
   140058f95:	adc    eax,0x154a0003
   140058f9a:	add    eax,DWORD PTR [rax]
   140058f9c:	(bad)  
   140058f9d:	pushf  
   140058f9e:	add    al,0x0
   140058fa0:	rex.WX adc rax,0x15d70003
   140058fa6:	add    eax,DWORD PTR [rax]
   140058fa8:	push   0xffffffffd700049c
   140058fad:	adc    eax,0x15e70003
   140058fb2:	add    eax,DWORD PTR [rax]
   140058fb4:	sbb    BYTE PTR [rsp+rax*1+0x315e700],0x0
   140058fbc:	in     al,dx
   140058fbd:	adc    eax,0x9c980003
   140058fc2:	add    al,0x0
   140058fc4:	adc    BYTE PTR [rsi],dl
   140058fc6:	add    eax,DWORD PTR [rax]
   140058fc8:	not    DWORD PTR [rsi]
   140058fca:	add    eax,DWORD PTR [rax]
   140058fcc:	fcomp  QWORD PTR [rdi+0x17100004]
   140058fd2:	add    eax,DWORD PTR [rax]
   140058fd4:	rex.WB (bad) 
   140058fd6:	add    eax,DWORD PTR [rax]
   140058fd8:	in     al,0x9f
   140058fda:	add    al,0x0
   140058fdc:	rcl    BYTE PTR [rdi],0x3
   140058fdf:	add    BYTE PTR [rdi],bl
   140058fe1:	sbb    BYTE PTR [rbx],al
   140058fe3:	add    ah,ch
   140058fe5:	lahf   
   140058fe6:	add    al,0x0
   140058fe8:	xor    BYTE PTR [rax],bl
   140058fea:	add    eax,DWORD PTR [rax]
   140058fec:	fwait
   140058fed:	sbb    BYTE PTR [rbx],al
   140058fef:	add    ah,dh
   140058ff1:	lahf   
   140058ff2:	add    al,0x0
   140058ff4:	mov    al,0x18
   140058ff6:	add    eax,DWORD PTR [rax]
   140058ff8:	sbb    ebx,DWORD PTR [rcx]
   140058ffa:	add    eax,DWORD PTR [rax]
   140058ffc:	cld    
   140058ffd:	lahf   
   140058ffe:	add    al,0x0
   140059000:	and    BYTE PTR [rcx],bl
   140059002:	add    eax,DWORD PTR [rax]
   140059004:	xor    BYTE PTR [rdx],bl
   140059006:	add    eax,DWORD PTR [rax]
   140059008:	add    al,0xa0
   14005900a:	add    al,0x0
   14005900c:	xor    BYTE PTR [rdx],bl
   14005900e:	add    eax,DWORD PTR [rax]
   140059010:	cmp    DWORD PTR [rbx],ebx
   140059012:	add    eax,DWORD PTR [rax]
   140059014:	adc    al,0xa0
   140059016:	add    al,0x0
   140059018:	rex sbb eax,DWORD PTR [rbx]
   14005901b:	add    BYTE PTR [rip+0x2800031c],dl        # 0x16805933d
   140059021:	movabs al,ds:0x1c2f00031c200004
   14005902a:	add    eax,DWORD PTR [rax]
   14005902c:	cmp    al,0xa0
   14005902e:	add    al,0x0
   140059030:	(bad)  
   140059031:	sbb    al,0x3
   140059033:	add    BYTE PTR [rsp+rbx*1+0x3],dl
   140059037:	add    BYTE PTR [rax+riz*4+0x4],al
   14005903b:	add    BYTE PTR [rsp+rbx*1+0x3],dl
   14005903f:	add    BYTE PTR [rbp+rbx*1-0x5fa3fffd],bh
   140059046:	add    al,0x0
   140059048:	mov    esp,0xcc00031d
   14005904d:	sbb    eax,0xa0800003
   140059052:	add    al,0x0
   140059054:	int3   
   140059055:	sbb    eax,0x1df80003
   14005905a:	add    eax,DWORD PTR [rax]
   14005905c:	nop
   14005905d:	movabs al,ds:0x1f6700031e000004
   140059066:	add    eax,DWORD PTR [rax]
   140059068:	(bad)  
   140059069:	movabs al,ds:0x1fbc00031f700004
   140059072:	add    eax,DWORD PTR [rax]
   140059074:	fsub   QWORD PTR [rax+0x1fc00004]
   14005907a:	add    eax,DWORD PTR [rax]
   14005907c:	and    BYTE PTR [rax],ah
   14005907e:	add    eax,DWORD PTR [rax]
   140059080:	call   0x160059525
   140059085:	and    BYTE PTR [rbx],al
   140059087:	add    BYTE PTR [rsi+0x21],bl
   14005908a:	add    eax,DWORD PTR [rax]
   14005908c:	hlt    
   14005908d:	movabs al,ds:0x21ac000321600004
   140059096:	add    eax,DWORD PTR [rax]
   140059098:	cld    
   140059099:	movabs al,ds:0x2242000321b00004
   1400590a2:	add    eax,DWORD PTR [rax]
   1400590a4:	or     BYTE PTR [rcx+0x22600004],ah
   1400590aa:	add    eax,DWORD PTR [rax]
   1400590ac:	push   rdi
   1400590ad:	add    eax,DWORD PTR cs:[rax]
   1400590b0:	rcr    BYTE PTR [rdi+0x2ee00004],1
   1400590b6:	add    eax,DWORD PTR [rax]
   1400590b8:	(bad)  
   1400590b9:	(bad)  
   1400590ba:	add    eax,DWORD PTR [rax]
   1400590bc:	enter  0x49f,0x0
   1400590c0:	and    BYTE PTR [rdi],ch
   1400590c2:	add    eax,DWORD PTR [rax]
   1400590c4:	sub    DWORD PTR [rdi],0x3
   1400590c7:	add    BYTE PTR [rax-0x6ffffb61],bh
   1400590cd:	(bad)  
   1400590ce:	add    eax,DWORD PTR [rax]
   1400590d0:	loopne 0x140059101
   1400590d2:	add    eax,DWORD PTR [rax]
   1400590d4:	movabs al,ds:0x7700032fe00004a0
   1400590dd:	xor    BYTE PTR [rbx],al
   1400590df:	add    BYTE PTR [rax+0x770004a0],dh
   1400590e5:	xor    BYTE PTR [rbx],al
   1400590e7:	add    BYTE PTR [rdx-0x3bfffcd0],cl
   1400590ed:	movabs al,ds:0x30bf000330900004
   1400590f6:	add    eax,DWORD PTR [rax]
   1400590f8:	rcr    BYTE PTR [rdi+0x31300004],0x3
   1400590ff:	add    BYTE PTR [rbx+0x32],ch
   140059102:	add    eax,DWORD PTR [rax]
   140059104:	test   al,0x9f
   140059106:	add    al,0x0
   140059108:	jo     0x14005913c
   14005910a:	add    eax,DWORD PTR [rax]
   14005910c:	ret    
   14005910d:	xor    al,BYTE PTR [rbx]
   14005910f:	add    BYTE PTR [rax-0x5f],ch
   140059112:	add    al,0x0
   140059114:	(bad)  
   140059115:	xor    eax,DWORD PTR [rbx]
   140059117:	add    BYTE PTR [rcx+0x70000333],bl
   14005911d:	movabs eax,ds:0x3449000333b00004
   140059126:	add    eax,DWORD PTR [rax]
   140059128:	js     0x1400590cb
   14005912a:	add    al,0x0
   14005912c:	push   rax
   14005912d:	xor    al,0x3
   14005912f:	add    BYTE PTR [rax-0x7ffffccc],bl
   140059135:	movabs eax,ds:0x353f000334980004
   14005913e:	add    eax,DWORD PTR [rax]
   140059140:	mov    BYTE PTR [rcx+0x353f0004],ah
   140059146:	add    eax,DWORD PTR [rax]
   140059148:	xchg   esp,eax
   140059149:	xor    eax,0xa19c0003
   14005914e:	add    al,0x0
   140059150:	movabs al,ds:0xac0003367f000335
   140059159:	movabs eax,ds:0x384b000336800004
   140059162:	add    eax,DWORD PTR [rax]
   140059164:	enter  0x4a1,0x0
   140059168:	push   rax
   140059169:	cmp    BYTE PTR [rbx],al
   14005916b:	add    BYTE PTR [rbx-0x17fffcc8],bl
   140059171:	movabs eax,ds:0x39fc000338a00004
   14005917a:	add    eax,DWORD PTR [rax]
   14005917c:	lock movabs eax,ds:0x3ac300033a000004
   140059186:	add    eax,DWORD PTR [rax]
   140059188:	or     BYTE PTR [rdx+0x3ad00004],ah
   14005918e:	add    eax,DWORD PTR [rax]
   140059190:	cmp    rax,QWORD PTR [r11]
   140059193:	add    BYTE PTR [rax],dh
   140059195:	movabs ds:0x3c7d00033b490004,al
   14005919e:	add    eax,DWORD PTR [rax]
   1400591a0:	rex.R movabs ds:0x3cdf00033c7d0004,al
   1400591aa:	add    eax,DWORD PTR [rax]
   1400591ac:	pop    rsp
   1400591ad:	movabs ds:0x3d6000033cf00004,al
   1400591b6:	add    eax,DWORD PTR [rax]
   1400591b8:	ins    BYTE PTR es:[rdi],dx
   1400591b9:	movabs ds:0x3d7100033d600004,al
   1400591c2:	add    eax,DWORD PTR [rax]
   1400591c4:	and    BYTE PTR [rdx+0x3d710004],0x3
   1400591cb:	add    al,ah
   1400591cd:	cmp    eax,0xa28c0003
   1400591d2:	add    al,0x0
   1400591d4:	loopne 0x140059213
   1400591d6:	add    eax,DWORD PTR [rax]
   1400591d8:	mov    eax,0xac00033f
   1400591dd:	movabs ds:0x3fd600033fb80004,al
   1400591e6:	add    eax,DWORD PTR [rax]
   1400591e8:	(bad)
   1400591ec:	(bad)  
   1400591ed:	(bad)  
   1400591ee:	add    eax,DWORD PTR [rax]
   1400591f0:	and    eax,0xd4000340
   1400591f5:	movabs ds:0x4066000340300004,al
   1400591fe:	add    eax,DWORD PTR [rax]
   140059200:	call   0xc00596a7
   140059205:	rex add eax,DWORD PTR [rax]
   140059208:	pop    rcx
   140059209:	add    eax,DWORD PTR [r8]
   14005920c:	rex movabs eax,ds:0x419e000341700004
   140059216:	add    eax,DWORD PTR [rax]
   140059218:	rex.WR movabs rax,ds:0x4691000341c00004
   140059222:	add    eax,DWORD PTR [rax]
   140059224:	push   rsp
   140059225:	movabs eax,ds:0x46f3000346a00004
   14005922e:	add    eax,DWORD PTR [rax]
   140059230:	cmp    BYTE PTR [rcx+0x47000004],ah
   140059236:	add    eax,DWORD PTR [rax]
   140059238:	cmp    eax,0x30000347
   14005923d:	movabs eax,ds:0x4829000347400004
   140059246:	add    eax,DWORD PTR [rax]
   140059248:	mov    eax,0x300004a1
   14005924d:	add    rax,QWORD PTR [rax]
   140059250:	in     eax,0x48
   140059252:	add    eax,DWORD PTR [rax]
   140059254:	sub    BYTE PTR [rcx+0x48f00004],ah
   14005925a:	add    eax,DWORD PTR [rax]
   14005925c:	add    eax,0x1800034a
   140059261:	movabs ds:0x4a4000034a100004,al
   14005926a:	add    eax,DWORD PTR [rax]
   14005926c:	sbb    BYTE PTR [rcx+0x4a400004],ah
   140059272:	add    eax,DWORD PTR [rax]
   140059274:	jo     0x1400592c0
   140059276:	add    eax,DWORD PTR [rax]
   140059278:	and    BYTE PTR [rcx+0x4b800004],ah
   14005927e:	add    eax,DWORD PTR [rax]
   140059280:	jmp    0x1400592cd
   140059282:	add    eax,DWORD PTR [rax]
   140059284:	clc    
   140059285:	movabs ds:0x4c2900034bf00004,eax
   14005928e:	add    eax,DWORD PTR [rax]
   140059290:	add    BYTE PTR [rsp+rax*1+0x34cc000],ah
   140059297:	add    BYTE PTR [rcx*2-0x5d0ffffd],al
   14005929e:	add    al,0x0
   1400592a0:	add    al,0x4d
   1400592a2:	add    eax,DWORD PTR [rax]
   1400592a4:	iret   
   1400592a5:	add    r8,QWORD PTR [r8]
   1400592a8:	clc    
   1400592a9:	movabs ds:0x4dd500034dcf0004,al
   1400592b2:	add    eax,DWORD PTR [rax]
   1400592b4:	or     al,0xa3
   1400592b6:	add    al,0x0
   1400592b8:	loopne 0x140059307
   1400592ba:	add    eax,DWORD PTR [rax]
   1400592bc:	push   rdi
   1400592bd:	push   rsp
   1400592be:	add    eax,DWORD PTR [rax]
   1400592c0:	sbb    al,0xa3
   1400592c2:	add    al,0x0
   1400592c4:	(bad)  
   1400592c5:	push   rsp
   1400592c6:	add    eax,DWORD PTR [rax]
   1400592c8:	pushf  
   1400592c9:	push   rsp
   1400592ca:	add    eax,DWORD PTR [rax]
   1400592cc:	cmp    al,0xa3
   1400592ce:	add    al,0x0
   1400592d0:	pushf  
   1400592d1:	push   rsp
   1400592d2:	add    eax,DWORD PTR [rax]
   1400592d4:	jne    0x14005932b
   1400592d6:	add    eax,DWORD PTR [rax]
   1400592d8:	movabs ds:0x5580000355750004,rax
   1400592e2:	add    eax,DWORD PTR [rax]
   1400592e4:	pop    rsp
   1400592e5:	movabs ds:0x55b6000355900004,eax
   1400592ee:	add    eax,DWORD PTR [rax]
   1400592f0:	loopne 0x140059295
   1400592f2:	add    al,0x0
   1400592f4:	rcl    BYTE PTR [rbp+0x3],1
   1400592f7:	add    BYTE PTR [rsi+rdx*2],ch
   1400592fa:	add    eax,DWORD PTR [rax]
   1400592fc:	call   0x1800597a4
   140059301:	push   rsi
   140059302:	add    eax,DWORD PTR [rax]
   140059304:	movabs eax,ds:0x100004a3f0000356
   14005930d:	push   rdi
   14005930e:	add    eax,DWORD PTR [rax]
   140059310:	mov    esi,0xd8000357
   140059315:	movabs ds:0x57f9000357c00004,eax
   14005931e:	add    eax,DWORD PTR [rax]
   140059320:	ins    BYTE PTR es:[rdi],dx
   140059321:	movabs ds:0x5aea000357f90004,eax
   14005932a:	add    eax,DWORD PTR [rax]
   14005932c:	and    BYTE PTR [rbx+0x5aea0004],0x3
   140059333:	add    BYTE PTR [rbx-0x5ffffca5],dl
   140059339:	movabs ds:0x5bb200035b930004,eax
   140059342:	add    eax,DWORD PTR [rax]
   140059344:	mov    eax,0xb20004a3
   140059349:	pop    rbx
   14005934a:	add    eax,DWORD PTR [rax]
   14005934c:	(bad)  
   14005934d:	pop    rbx
   14005934e:	add    eax,DWORD PTR [rax]
   140059350:	enter  0x4a3,0x0
   140059354:	rcr    BYTE PTR [rbx+rax*1+0x0],0x58
   140059359:	pop    rbp
   14005935a:	add    eax,DWORD PTR [rax]
   14005935c:	and    al,0xa4
   14005935e:	add    al,0x0
   140059360:	(bad)  
   140059361:	pop    rbp
   140059362:	add    eax,DWORD PTR [rax]
   140059364:	cdq    
   140059365:	pop    rbp
   140059366:	add    eax,DWORD PTR [rax]
   140059368:	sub    al,0xa4
   14005936a:	add    al,0x0
   14005936c:	movabs al,ds:0x3400035e4b00035d
   140059375:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059376:	add    al,0x0
   140059378:	push   rax
   140059379:	pop    rsi
   14005937a:	add    eax,DWORD PTR [rax]
   14005937c:	sbb    BYTE PTR [rsi+0x3],0x0
   140059380:	rex.R movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059382:	add    al,0x0
   140059384:	sbb    BYTE PTR [rsi+0x3],0x0
   140059388:	call   0x1900596ec
   14005938d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005938e:	add    al,0x0
   140059390:	call   0x1300596f4
   140059395:	pop    rdi
   140059396:	add    eax,DWORD PTR [rax]
   140059398:	je     0x14005933e
   14005939a:	add    al,0x0
   14005939c:	add    BYTE PTR [rax+0x3],ah
   14005939f:	add    BYTE PTR [rsi+0x60],bh
   1400593a2:	add    eax,DWORD PTR [rax]
   1400593a4:	test   BYTE PTR [rsp+rax*1+0x3607e00],ah
   1400593ab:	add    BYTE PTR [rax],cl
   1400593ad:	(bad)  
   1400593ae:	add    eax,DWORD PTR [rax]
   1400593b0:	cwde   
   1400593b1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400593b2:	add    al,0x0
   1400593b4:	or     BYTE PTR [rcx+0x3],ah
   1400593b7:	add    BYTE PTR [rax],ah
   1400593b9:	movsxd eax,DWORD PTR [rbx]
   1400593bb:	add    BYTE PTR [rax+0x200004a4],dh
   1400593c1:	movsxd eax,DWORD PTR [rbx]
   1400593c3:	add    BYTE PTR [rdx+0x64],bl
   1400593c6:	add    eax,DWORD PTR [rax]
   1400593c8:	(bad)  
   1400593c9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400593ca:	add    al,0x0
   1400593cc:	pop    rdx
   1400593cd:	add    eax,DWORD PTR fs:[rax]
   1400593d0:	imul   esp,DWORD PTR [rbx+rax*1+0x0],0x4a4e4
   1400593d8:	add    BYTE PTR [rbp+0x3],ah
   1400593db:	add    BYTE PTR [rip+0x8000365],bl        # 0x148059746
   1400593e1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400593e2:	add    al,0x0
   1400593e4:	xor    BYTE PTR [rbp+0x3],ah
   1400593e7:	add    BYTE PTR [rdi+0x66],cl
   1400593ea:	add    eax,DWORD PTR [rax]
   1400593ec:	adc    BYTE PTR [rsp+rax*1+0x3665000],ah
   1400593f3:	add    BYTE PTR [rsi+0x1c000366],bl
   1400593f9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400593fa:	add    al,0x0
   1400593fc:	nop
   1400593fd:	add    eax,DWORD PTR [eax]
   140059400:	(bad)  
   140059401:	add    eax,DWORD PTR [eax]
   140059404:	rex.R movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059406:	add    al,0x0
   140059408:	shl    BYTE PTR [rdi+0x3],1
   14005940b:	add    BYTE PTR [rdi+0x68],ah
   14005940e:	add    eax,DWORD PTR [rax]
   140059410:	rex.WR movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140059412:	add    al,0x0
   140059414:	sub    BYTE PTR [rax+0x3],0x0
   140059418:	popf   
   140059419:	push   0xffffffffa5580003
   14005941e:	add    al,0x0
   140059420:	popf   
   140059421:	push   0x691a0003
   140059426:	add    eax,DWORD PTR [rax]
   140059428:	(bad)  
   140059429:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005942a:	add    al,0x0
   14005942c:	sbb    ch,BYTE PTR [rcx+0x3]
   14005942f:	add    BYTE PTR [rax],ah
   140059431:	imul   eax,DWORD PTR [rbx],0x4a57400
   140059437:	add    BYTE PTR [rax],dh
   140059439:	imul   eax,DWORD PTR [rbx],0x3699600
   14005943f:	add    BYTE PTR [rbp+riz*4+0x6a500004],al
   140059446:	add    eax,DWORD PTR [rax]
   140059448:	fisubr WORD PTR [rdx+0x3]
   14005944b:	add    BYTE PTR [rbp+riz*4+0x6b000004],cl
   140059452:	add    eax,DWORD PTR [rax]
   140059454:	(bad)  
   140059455:	imul   eax,DWORD PTR [rbx],0x0
   140059458:	xchg   esp,eax
   140059459:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005945a:	add    al,0x0
   14005945c:	(bad)  
   14005945d:	imul   eax,DWORD PTR [rbx],0x0
   140059460:	(bad)  
   140059461:	imul   eax,DWORD PTR [rbx],0x0
   140059464:	pushf  
   140059465:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059466:	add    al,0x0
   140059468:	loopne 0x1400594d5
   14005946a:	add    eax,DWORD PTR [rax]
   14005946c:	sbb    DWORD PTR [rbx+rax*1+0x0],ebp
   140059470:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059471:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059472:	add    al,0x0
   140059474:	and    BYTE PTR [rbx+rax*1+0x0],ch
   140059478:	(bad)  
   140059479:	ins    BYTE PTR es:[rdi],dx
   14005947a:	add    eax,DWORD PTR [rax]
   14005947c:	lods   al,BYTE PTR ds:[rsi]
   14005947d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005947e:	add    al,0x0
   140059480:	shr    BYTE PTR [rbx+rax*1+0x0],1
   140059484:	(bad)  
   140059485:	ins    DWORD PTR es:[rdi],dx
   140059486:	add    eax,DWORD PTR [rax]
   140059488:	shl    BYTE PTR [rbp+0x6d200004],1
   14005948e:	add    eax,DWORD PTR [rax]
   140059490:	rex.WRB ins DWORD PTR es:[rdi],dx
   140059492:	add    eax,DWORD PTR [rax]
   140059494:	fsub   DWORD PTR [rbp+0x6d4d0004]
   14005949a:	add    eax,DWORD PTR [rax]
   14005949c:	mov    ebx,0xe400036e
   1400594a1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400594a2:	add    al,0x0
   1400594a4:	mov    ebx,0xc300036e
   1400594a9:	outs   dx,BYTE PTR ds:[rsi]
   1400594aa:	add    eax,DWORD PTR [rax]
   1400594ac:	or     BYTE PTR [rsi+0x6ed00004],ah
   1400594b2:	add    eax,DWORD PTR [rax]
   1400594b4:	push   rbp
   1400594b5:	outs   dx,DWORD PTR ds:[rsi]
   1400594b6:	add    eax,DWORD PTR [rax]
   1400594b8:	rex.WR cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400594ba:	add    al,0x0
   1400594bc:	(bad)  
   1400594bd:	outs   dx,DWORD PTR ds:[rsi]
   1400594be:	add    eax,DWORD PTR [rax]
   1400594c0:	add    esi,DWORD PTR [rax+0x3]
   1400594c3:	add    BYTE PTR [rax-0x5a],bl
   1400594c6:	add    al,0x0
   1400594c8:	adc    BYTE PTR [rax+0x3],dh
   1400594cb:	add    BYTE PTR [rbx],dh
   1400594cd:	jo     0x1400594d2
   1400594cf:	add    BYTE PTR [rax-0x5a],ah
   1400594d2:	add    al,0x0
   1400594d4:	xor    esi,DWORD PTR [rax+0x3]
   1400594d7:	add    BYTE PTR [rdx+0x70000372],bh
   1400594dd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400594de:	add    al,0x0
   1400594e0:	mov    edx,0x37000372
   1400594e5:	je     0x1400594ea
   1400594e7:	add    BYTE PTR [rax+0x400004a6],cl
   1400594ed:	je     0x1400594f2
   1400594ef:	add    BYTE PTR [rcx+0x75],cl
   1400594f2:	add    eax,DWORD PTR [rax]
   1400594f4:	cwde   
   1400594f5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400594f6:	add    al,0x0
   1400594f8:	push   rax
   1400594f9:	jne    0x1400594fe
   1400594fb:	add    BYTE PTR [rsi+0x75],dh
   1400594fe:	add    eax,DWORD PTR [rax]
   140059500:	movabs al,ds:0xa4000375800004a6
   140059509:	jne    0x14005950e
   14005950b:	add    BYTE PTR [rax-0x5bfffb5a],ch
   140059511:	jne    0x140059516
   140059513:	add    BYTE PTR [rcx],ah
   140059515:	js     0x14005951a
   140059517:	add    BYTE PTR [rax+0x210004a6],bh
   14005951d:	js     0x140059522
   14005951f:	add    BYTE PTR [rsi-0x2ffffc87],bl
   140059525:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059526:	add    al,0x0
   140059528:	add    BYTE PTR [rdx+0x3],bh
   14005952b:	add    BYTE PTR [rsi+0x7a],ah
   14005952e:	add    eax,DWORD PTR [rax]
   140059530:	add    al,0xa5
   140059532:	add    al,0x0
   140059534:	data16 jp 0x14005953a
   140059537:	add    BYTE PTR [rip+0x2000037c],bh        # 0x1600598b9
   14005953d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005953e:	add    al,0x0
   140059540:	cmp    eax,0x7200037c
   140059545:	jl     0x14005954a
   140059547:	add    BYTE PTR [riz*4+0x7c900004],dh
   14005954e:	add    eax,DWORD PTR [rax]
   140059550:	(bad)  
   140059551:	jl     0x140059556
   140059553:	add    al,cl
   140059555:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059556:	add    al,0x0
   140059558:	add    BYTE PTR [rbp+0x3],bh
   14005955b:	add    BYTE PTR [rsi+rdi*2],bl
   14005955e:	add    eax,DWORD PTR [rax]
   140059560:	hlt    
   140059561:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140059562:	add    al,0x0
   140059564:	and    BYTE PTR [rsi+0x3],bh
   140059567:	add    BYTE PTR [rax+0x7e],dh
   14005956a:	add    eax,DWORD PTR [rax]
   14005956c:	sbb    BYTE PTR [rsi+0x7e700004],ah
   140059572:	add    eax,DWORD PTR [rax]
   140059574:	(bad)  
   140059575:	jg     0x14005957a
   140059577:	add    BYTE PTR [rax],ch
   140059579:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005957a:	add    al,0x0
   14005957c:	(bad)  
   14005957d:	jg     0x140059582
   14005957f:	add    BYTE PTR [rdx],bl
   140059581:	jg     0x140059586
   140059583:	add    BYTE PTR [rsi+riz*4],bh
   140059586:	add    al,0x0
   140059588:	and    BYTE PTR [rdi+0x3],bh
   14005958b:	add    BYTE PTR [rcx-0x3ffffc81],bl
   140059591:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140059592:	add    al,0x0
   140059594:	movabs al,ds:0xec00037fd100037f
   14005959d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005959e:	add    al,0x0
   1400595a0:	loopne 0x140059621
   1400595a2:	add    eax,DWORD PTR [rax]
   1400595a4:	(bad)  
   1400595a5:	add    BYTE PTR [rbx],0x0
   1400595a8:	hlt    
   1400595a9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400595aa:	add    al,0x0
   1400595ac:	and    BYTE PTR [rax-0x7f50fffd],al
   1400595b2:	add    eax,DWORD PTR [rax]
   1400595b4:	cld    
   1400595b5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400595b6:	add    al,0x0
   1400595b8:	rol    BYTE PTR [rax-0x7edffffd],0x3
   1400595bf:	add    BYTE PTR [rdi+riz*4],al
   1400595c2:	add    al,0x0
   1400595c4:	nop
   1400595c5:	add    DWORD PTR [rbx],0x381ef00
   1400595cb:	add    BYTE PTR [rdi+riz*4],cl
   1400595ce:	add    al,0x0
   1400595d0:	add    BYTE PTR [rdx-0x7d94fffd],al
   1400595d6:	add    eax,DWORD PTR [rax]
   1400595d8:	adc    al,0xa7
   1400595da:	add    al,0x0
   1400595dc:	add    BYTE PTR [rdx-0x7d21fffd],0x3
   1400595e3:	add    BYTE PTR [rdi+riz*4],bl
   1400595e6:	add    al,0x0
   1400595e8:	loopne 0x14005956c
   1400595ea:	add    eax,DWORD PTR [rax]
   1400595ec:	(bad)  
   1400595ed:	add    DWORD PTR [rbx],0x0
   1400595f0:	and    al,0xa7
   1400595f2:	add    al,0x0
   1400595f4:	and    BYTE PTR [rbx-0x7c46fffd],al
   1400595fa:	add    eax,DWORD PTR [rax]
   1400595fc:	sub    al,0xa7
   1400595fe:	add    al,0x0
   140059600:	rol    BYTE PTR [rbx-0x7b7dfffd],0x3
   140059607:	add    BYTE PTR [rdi+riz*4],bh
   14005960a:	add    al,0x0
   14005960c:	nop
   14005960d:	test   BYTE PTR [rbx],al
   14005960f:	add    BYTE PTR [rdx],dh
   140059611:	test   DWORD PTR [rbx],eax
   140059613:	add    BYTE PTR [rax-0x59],cl
   140059616:	add    al,0x0
   140059618:	rex test DWORD PTR [rbx],eax
   14005961b:	add    BYTE PTR [rsi+0x68000385],ch
   140059621:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140059622:	add    al,0x0
   140059624:	mov    al,0x85
   140059626:	add    eax,DWORD PTR [rax]
   140059628:	cwde   
   140059629:	xchg   BYTE PTR [rbx],al
   14005962b:	add    BYTE PTR [rax-0x59],bh
   14005962e:	add    al,0x0
   140059630:	movabs al,ds:0x84000386e5000386
   140059639:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005963a:	add    al,0x0
   14005963c:	in     eax,0x86
   14005963e:	add    eax,DWORD PTR [rax]
   140059640:	xchg   QWORD PTR [r11],r8
   140059643:	add    BYTE PTR [rax+0x4d0004a7],bl
   140059649:	xchg   DWORD PTR [rbx],eax
   14005964b:	add    dh,cl
   14005964d:	xchg   DWORD PTR [rbx],eax
   14005964f:	add    BYTE PTR [rdi+riz*4-0x782ffffc],ch
   140059656:	add    eax,DWORD PTR [rax]
   140059658:	push   0xffffffffbc000388
   14005965d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005965e:	add    al,0x0
   140059660:	jo     0x1400595ea
   140059662:	add    eax,DWORD PTR [rax]
   140059664:	jns    0xe7cd966d
   14005966a:	add    al,0x0
   14005966c:	adc    BYTE PTR [rcx-0x7625fffd],cl
   140059672:	add    eax,DWORD PTR [rax]
   140059674:	fsub   DWORD PTR [rdi-0x760ffffc]
   14005967a:	add    eax,DWORD PTR [rax]
   14005967c:	lahf   
   14005967d:	mov    al,BYTE PTR [rbx]
   14005967f:	add    al,ah
   140059681:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059682:	add    al,0x0
   140059684:	movabs al,ds:0x5800038b6e00038a
   14005968d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005968e:	add    al,0x0
   140059690:	movabs al,ds:0x3800038bff00038b
   140059699:	test   al,0x4
   14005969b:	add    BYTE PTR [rax],dl
   14005969d:	mov    WORD PTR [rbx],es
   14005969f:	add    BYTE PTR [rbx-0x74],bh
   1400596a2:	add    eax,DWORD PTR [rax]
   1400596a4:	test   al,0x4
   1400596a7:	add    BYTE PTR [rax+0x600038c],dl
   1400596ad:	lea    eax,[rbx]
   1400596af:	add    BYTE PTR [rax-0x58],cl
   1400596b2:	add    al,0x0
   1400596b4:	adc    BYTE PTR [rbp-0x72b6fffd],cl
   1400596ba:	add    eax,DWORD PTR [rax]
   1400596bc:	push   rax
   1400596bd:	test   al,0x4
   1400596bf:	add    BYTE PTR [rax-0x73],dl
   1400596c2:	add    eax,DWORD PTR [rax]
   1400596c4:	test   BYTE PTR [rbp-0x57a7fffd],0x4
   1400596cb:	add    BYTE PTR [rax],al
   1400596cd:	mov    es,WORD PTR [rbx]
   1400596cf:	add    BYTE PTR [rbx],ah
   1400596d1:	mov    es,WORD PTR [rbx]
   1400596d3:	add    BYTE PTR [rax+0x300004a8],ch
   1400596d9:	mov    es,WORD PTR [rbx]
   1400596db:	add    BYTE PTR [rbx-0x72],dl
   1400596de:	add    eax,DWORD PTR [rax]
   1400596e0:	mov    al,0xa8
   1400596e2:	add    al,0x0
   1400596e4:	(bad)  
   1400596e5:	mov    es,WORD PTR [rbx]
   1400596e7:	add    BYTE PTR [rdx-0x47fffc72],cl
   1400596ed:	test   al,0x4
   1400596ef:	add    BYTE PTR [rdx+0x5d00038e],cl
   1400596f5:	nop
   1400596f6:	add    eax,DWORD PTR [rax]
   1400596f8:	enter  0x4a8,0x0
   1400596fc:	pop    rbp
   1400596fd:	nop
   1400596fe:	add    eax,DWORD PTR [rax]
   140059700:	xchg   ax,ax
   140059702:	add    eax,DWORD PTR [rax]
   140059704:	call   0x1b0059bb1
   140059709:	nop
   14005970a:	add    eax,DWORD PTR [rax]
   14005970c:	scas   al,BYTE PTR es:[rdi]
   14005970d:	xchg   ecx,eax
   14005970e:	add    eax,DWORD PTR [rax]
   140059710:	sub    al,0xa9
   140059712:	add    al,0x0
   140059714:	mov    al,0x91
   140059716:	add    eax,DWORD PTR [rax]
   140059718:	mov    dh,0x92
   14005971a:	add    eax,DWORD PTR [rax]
   14005971c:	test   rax,0xffffffff92c00004
   140059722:	add    eax,DWORD PTR [rax]
   140059724:	xchg   ebx,eax
   140059725:	xchg   ebx,eax
   140059726:	add    eax,DWORD PTR [rax]
   140059728:	pop    rsp
   140059729:	test   eax,0x93a00004
   14005972e:	add    eax,DWORD PTR [rax]
   140059730:	xchg   r13,rax
   140059732:	add    eax,DWORD PTR [rax]
   140059734:	ins    BYTE PTR es:[rdi],dx
   140059735:	test   eax,0x95500004
   14005973a:	add    eax,DWORD PTR [rax]
   14005973c:	add    DWORD PTR [rsi-0x5677fffd],edx
   140059742:	add    al,0x0
   140059744:	adc    BYTE PTR [rsi-0x6994fffd],dl
   14005974a:	add    eax,DWORD PTR [rax]
   14005974c:	cwde   
   14005974d:	test   eax,0x96800004
   140059752:	add    eax,DWORD PTR [rax]
   140059754:	xlat   BYTE PTR ds:[rbx]
   140059755:	xchg   edi,eax
   140059756:	add    eax,DWORD PTR [rax]
   140059758:	and    al,0xa8
   14005975a:	add    al,0x0
   14005975c:	add    BYTE PTR [rax-0x6752fffd],bl
   140059762:	add    eax,DWORD PTR [rax]
   140059764:	xor    BYTE PTR [rax-0x66dffffc],ch
   14005976a:	add    eax,DWORD PTR [rax]
   14005976c:	or     DWORD PTR [rdx-0x580ffffd],ebx
   140059772:	add    al,0x0
   140059774:	adc    BYTE PTR [rdx-0x65befffd],bl
   14005977a:	add    eax,DWORD PTR [rax]
   14005977c:	ins    BYTE PTR es:[rdi],dx
   14005977d:	test   al,0x4
   14005977f:	add    BYTE PTR [rax-0x66],dl
   140059782:	add    eax,DWORD PTR [rax]
   140059784:	xchg   BYTE PTR [rdx-0x57e3fffd],bl
   14005978a:	add    al,0x0
   14005978c:	movabs al,ds:0x7400039b0b00039a
   140059795:	test   al,0x4
   140059797:	add    BYTE PTR [rbx],cl
   140059799:	fwait
   14005979a:	add    eax,DWORD PTR [rax]
   14005979c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005979d:	fwait
   14005979e:	add    eax,DWORD PTR [rax]
   1400597a0:	jl     0x14005974a
   1400597a2:	add    al,0x0
   1400597a4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400597a5:	fwait
   1400597a6:	add    eax,DWORD PTR [rax]
   1400597a8:	scas   eax,DWORD PTR es:[rdi]
   1400597a9:	fwait
   1400597aa:	add    eax,DWORD PTR [rax]
   1400597ac:	cwde   
   1400597ad:	test   al,0x4
   1400597af:	add    BYTE PTR [rax+0x39b],dh
   1400597b5:	pushf  
   1400597b6:	add    eax,DWORD PTR [rax]
   1400597b8:	clc    
   1400597b9:	test   al,0x4
   1400597bb:	add    BYTE PTR [rax],al
   1400597bd:	pushf  
   1400597be:	add    eax,DWORD PTR [rax]
   1400597c0:	xchg   edi,eax
   1400597c1:	pushf  
   1400597c2:	add    eax,DWORD PTR [rax]
   1400597c4:	or     BYTE PTR [rcx-0x6368fffc],ch
   1400597ca:	add    eax,DWORD PTR [rax]
   1400597cc:	stos   BYTE PTR es:[rdi],al
   1400597cd:	pushf  
   1400597ce:	add    eax,DWORD PTR [rax]
   1400597d0:	sbb    al,0xa9
   1400597d2:	add    al,0x0
   1400597d4:	(bad)  
   1400597d5:	popf   
   1400597d6:	add    eax,DWORD PTR [rax]
   1400597d8:	out    0x9e,eax
   1400597da:	add    eax,DWORD PTR [rax]
   1400597dc:	or     BYTE PTR [rax-0x60bffffc],ch
   1400597e2:	add    eax,DWORD PTR [rax]
   1400597e4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400597e5:	movabs al,ds:0xa0c00004aa140003
   1400597ee:	add    eax,DWORD PTR [rax]
   1400597f0:	mov    esp,0x200003a2
   1400597f5:	stos   BYTE PTR es:[rdi],al
   1400597f6:	add    al,0x0
   1400597f8:	shl    BYTE PTR [rdx-0x5c3dfffd],1
   1400597fe:	add    eax,DWORD PTR [rax]
   140059800:	xor    BYTE PTR [rdx-0x5c2ffffc],ch
   140059806:	add    eax,DWORD PTR [rax]
   140059808:	adc    eax,0x380003a4
   14005980d:	stos   BYTE PTR es:[rdi],al
   14005980e:	add    al,0x0
   140059810:	and    BYTE PTR [rbx+rax*1+0x3a4dc00],ah
   140059817:	add    BYTE PTR [rax-0x56],al
   14005981a:	add    al,0x0
   14005981c:	loopne 0x1400597c2
   14005981e:	add    eax,DWORD PTR [rax]
   140059820:	adc    esp,DWORD PTR [rbp-0x55b7fffd]
   140059826:	add    al,0x0
   140059828:	(bad)  
   140059829:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005982a:	add    eax,DWORD PTR [rax]
   14005982c:	(bad)  
   14005982d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005982e:	add    eax,DWORD PTR [rax]
   140059830:	push   rax
   140059831:	stos   BYTE PTR es:[rdi],al
   140059832:	add    al,0x0
   140059834:	and    BYTE PTR [rsi-0x59acfffd],ah
   14005983a:	add    eax,DWORD PTR [rax]
   14005983c:	pop    rax
   14005983d:	stos   BYTE PTR es:[rdi],al
   14005983e:	add    al,0x0
   140059840:	(bad)  
   140059841:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140059842:	add    eax,DWORD PTR [rax]
   140059844:	cmps   WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140059846:	add    eax,DWORD PTR [rax]
   140059848:	(bad)  
   140059849:	stos   BYTE PTR es:[rdi],al
   14005984a:	add    al,0x0
   14005984c:	jo     0x1400597f5
   14005984e:	add    eax,DWORD PTR [rax]
   140059850:	movabs ds:0xb00004aa6c0003a7,eax
   140059859:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005985a:	add    eax,DWORD PTR [rax]
   14005985c:	es test al,0x3
   14005985f:	add    BYTE PTR [rdx+rbp*4+0x4],dh
   140059863:	add    BYTE PTR [rax],dh
   140059865:	test   al,0x3
   140059867:	add    BYTE PTR [rcx-0x58],ch
   14005986a:	add    eax,DWORD PTR [rax]
   14005986c:	jl     0x140059818
   14005986e:	add    al,0x0
   140059870:	jo     0x14005981a
   140059872:	add    eax,DWORD PTR [rax]
   140059874:	lods   eax,DWORD PTR ds:[rsi]
   140059875:	test   al,0x3
   140059877:	add    BYTE PTR [rdx+rbp*4-0x570ffffc],al
   14005987e:	add    eax,DWORD PTR [rax]
   140059880:	and    ch,BYTE PTR [rcx-0x556ffffd]
   140059886:	add    al,0x0
   140059888:	and    ch,BYTE PTR [rcx-0x553efffd]
   14005988e:	add    eax,DWORD PTR [rax]
   140059890:	movabs al,ds:0xcb0003aac10004aa
   140059899:	stos   BYTE PTR es:[rdi],al
   14005989a:	add    eax,DWORD PTR [rax]
   14005989c:	shr    BYTE PTR [rdx-0x552ffffc],0x3
   1400598a3:	add    BYTE PTR [rdx],cl
   1400598a5:	stos   DWORD PTR es:[rdi],eax
   1400598a6:	add    eax,DWORD PTR [rax]
   1400598a8:	shr    BYTE PTR [rdx-0x54f5fffc],1
   1400598ae:	add    eax,DWORD PTR [rax]
   1400598b0:	add    ebp,DWORD PTR [rbx+rax*1+0x4aadc00]
   1400598b7:	add    BYTE PTR [rbx],al
   1400598b9:	lods   al,BYTE PTR ds:[rsi]
   1400598ba:	add    eax,DWORD PTR [rax]
   1400598bc:	or     ebp,DWORD PTR [rbx+rax*1+0x4aaf000]
   1400598c3:	add    BYTE PTR [rax],dl
   1400598c5:	lods   al,BYTE PTR ds:[rsi]
   1400598c6:	add    eax,DWORD PTR [rax]
   1400598c8:	stc    
   1400598c9:	lods   al,BYTE PTR ds:[rsi]
   1400598ca:	add    eax,DWORD PTR [rax]
   1400598cc:	add    BYTE PTR [rbx-0x52fffffc],ch
   1400598d2:	add    eax,DWORD PTR [rax]
   1400598d4:	sub    al,0xae
   1400598d6:	add    eax,DWORD PTR [rax]
   1400598d8:	adc    al,0xab
   1400598da:	add    al,0x0
   1400598dc:	xor    BYTE PTR [rsi-0x50fafffd],ch
   1400598e2:	add    eax,DWORD PTR [rax]
   1400598e4:	and    al,0xab
   1400598e6:	add    al,0x0
   1400598e8:	adc    BYTE PTR [rdi-0x4fd6fffd],ch
   1400598ee:	add    eax,DWORD PTR [rax]
   1400598f0:	cmp    BYTE PTR [rbx-0x4fcffffc],ch
   1400598f6:	add    eax,DWORD PTR [rax]
   1400598f8:	je     0x1400598aa
   1400598fa:	add    eax,DWORD PTR [rax]
   1400598fc:	stos   QWORD PTR es:[rdi],rax
   1400598fe:	add    al,0x0
   140059900:	je     0x1400598b2
   140059902:	add    eax,DWORD PTR [rax]
   140059904:	mov    dl,0xb0
   140059906:	add    eax,DWORD PTR [rax]
   140059908:	pop    rax
   140059909:	stos   DWORD PTR es:[rdi],eax
   14005990a:	add    al,0x0
   14005990c:	mov    dl,0xb0
   14005990e:	add    eax,DWORD PTR [rax]
   140059910:	mov    edi,0x6c0003b1
   140059915:	stos   DWORD PTR es:[rdi],eax
   140059916:	add    al,0x0
   140059918:	mov    edi,0xc40003b1
   14005991d:	mov    cl,0x3
   14005991f:	add    BYTE PTR [rbx+rbp*4-0x4e3bfffc],al
   140059926:	add    eax,DWORD PTR [rax]
   140059928:	shl    BYTE PTR [rcx-0x546bfffd],cl
   14005992e:	add    al,0x0
   140059930:	push   rax
   140059931:	mov    dl,0x3
   140059933:	add    dl,bl
   140059935:	mov    dl,0x3
   140059937:	add    BYTE PTR [rdx+rbp*4],cl
   14005993a:	add    al,0x0
   14005993c:	loopne 0x1400598f0
   14005993e:	add    eax,DWORD PTR [rax]
   140059940:	rex.W mov spl,0x3
   140059943:	add    ah,ch
   140059945:	test   eax,0xb4800004
   14005994a:	add    eax,DWORD PTR [rax]
   14005994c:	xor    DWORD PTR [rbp-0x55fffffd],esi
   140059952:	add    al,0x0
   140059954:	mov    bpl,0x3
   140059957:	add    BYTE PTR [rax-0x57fffc4b],ah
   14005995d:	test   eax,0xb5a00004
   140059962:	add    eax,DWORD PTR [rax]
   140059964:	jl     0x14005991c
   140059966:	add    eax,DWORD PTR [rax]
   140059968:	in     al,0xa9
   14005996a:	add    al,0x0
   14005996c:	xor    BYTE PTR [rsi-0x4968fffd],0x3
   140059973:	add    BYTE PTR [rax-0x68fffb57],dh
   140059979:	mov    dh,0x3
   14005997b:	add    BYTE PTR [rsi-0x3ffffc49],ch
   140059981:	test   eax,0xb7ae0004
   140059986:	add    eax,DWORD PTR [rax]
   140059988:	scas   eax,DWORD PTR es:[rdi]
   140059989:	mov    bh,0x3
   14005998b:	add    ah,dl
   14005998d:	test   eax,0xb8f00004
   140059992:	add    eax,DWORD PTR [rax]
   140059994:	ds mov ecx,0xaba80003
   14005999a:	add    al,0x0
   14005999c:	je     0x140059957
   14005999e:	add    eax,DWORD PTR [rax]
   1400599a0:	sbb    BYTE PTR [rbx-0x544ffffd],bh
   1400599a6:	add    al,0x0
   1400599a8:	ins    BYTE PTR es:[rdi],dx
   1400599a9:	mov    ebx,0xbbba0003
   1400599ae:	add    eax,DWORD PTR [rax]
   1400599b0:	hlt    
   1400599b1:	stos   DWORD PTR es:[rdi],eax
   1400599b2:	add    al,0x0
   1400599b4:	mov    esp,0x6c0003bb
   1400599b9:	mov    esp,0xabcc0003
   1400599be:	add    al,0x0
   1400599c0:	ins    BYTE PTR es:[rdi],dx
   1400599c1:	mov    esp,0xbc830003
   1400599c6:	add    eax,DWORD PTR [rax]
   1400599c8:	(bad)  
   1400599c9:	stos   DWORD PTR es:[rdi],eax
   1400599ca:	add    al,0x0
   1400599cc:	or     BYTE PTR [rbp-0x4229fffd],bh
   1400599d2:	add    eax,DWORD PTR [rax]
   1400599d4:	cld    
   1400599d5:	stos   DWORD PTR es:[rdi],eax
   1400599d6:	add    al,0x0
   1400599d8:	fdivr  DWORD PTR [rbp-0x41c4fffd]
   1400599de:	add    eax,DWORD PTR [rax]
   1400599e0:	add    al,0xac
   1400599e2:	add    al,0x0
   1400599e4:	movabs rsi,0xac0c0003bfb80003
   1400599ee:	add    al,0x0
   1400599f0:	add    al,0xc0
   1400599f2:	add    eax,DWORD PTR [rax]
   1400599f4:	(bad)  
   1400599f5:	rol    BYTE PTR [rbx],0x0
   1400599f8:	xor    al,0xac
   1400599fa:	add    al,0x0
   1400599fc:	xor    al,0xc0
   1400599fe:	add    eax,DWORD PTR [rax]
   140059a00:	ins    BYTE PTR es:[rdi],dx
   140059a01:	rol    BYTE PTR [rbx],0x0
   140059a04:	cmp    al,0xac
   140059a06:	add    al,0x0
   140059a08:	ins    BYTE PTR es:[rdi],dx
   140059a09:	rol    BYTE PTR [rbx],0x0
   140059a0c:	add    eax,0x3
   140059a0f:	add    BYTE PTR [rsp+rbp*4+0x4],al
   140059a13:	add    al,dh
   140059a15:	rol    BYTE PTR [rbx],0x0
   140059a18:	cmp    eax,0x4c0003c1
   140059a1d:	lods   al,BYTE PTR ds:[rsi]
   140059a1e:	add    al,0x0
   140059a20:	jl     0x1400599e3
   140059a22:	add    eax,DWORD PTR [rax]
   140059a24:	sub    dl,al
   140059a26:	add    eax,DWORD PTR [rax]
   140059a28:	js     0x1400599d6
   140059a2a:	add    al,0x0
   140059a2c:	sub    al,0xc2
   140059a2e:	add    eax,DWORD PTR [rax]
   140059a30:	fs ret 0x3
   140059a34:	test   BYTE PTR [rsp+rax*1+0x3c26400],ch
   140059a3b:	add    BYTE PTR [rdx+rax*8-0x536ffffd],bl
   140059a42:	add    al,0x0
   140059a44:	add    bl,al
   140059a46:	add    eax,DWORD PTR [rax]
   140059a48:	sbb    eax,ebx
   140059a4a:	add    eax,DWORD PTR [rax]
   140059a4c:	in     al,dx
   140059a4d:	stos   DWORD PTR es:[rdi],eax
   140059a4e:	add    al,0x0
   140059a50:	sbb    eax,ebx
   140059a52:	add    eax,DWORD PTR [rax]
   140059a54:	cmp    ebx,eax
   140059a56:	add    eax,DWORD PTR [rax]
   140059a58:	sub    al,0xac
   140059a5a:	add    al,0x0
   140059a5c:	rex ret 
   140059a5e:	add    eax,DWORD PTR [rax]
   140059a60:	(bad)  
   140059a61:	ret    
   140059a62:	add    eax,DWORD PTR [rax]
   140059a64:	jo     0x140059a12
   140059a66:	add    al,0x0

Disassembly of section .rsrc:

000000014005a000 <.rsrc>:
	...
   14005a008:	add    al,0x0
   14005a00a:	add    BYTE PTR [rax],al
   14005a00c:	add    BYTE PTR [rax],al
   14005a00e:	add    DWORD PTR [rax],eax
   14005a010:	sbb    BYTE PTR [rax],al
   14005a012:	add    BYTE PTR [rax],al
   14005a014:	sbb    BYTE PTR [rax],al
   14005a016:	add    BYTE PTR [rax+0x0],al
   14005a01c:	add    BYTE PTR [rax],al
   14005a01e:	add    BYTE PTR [rax],al
   14005a020:	add    al,0x0
   14005a022:	add    BYTE PTR [rax],al
   14005a024:	add    BYTE PTR [rax],al
   14005a026:	add    DWORD PTR [rax],eax
   14005a028:	add    DWORD PTR [rax],eax
   14005a02a:	add    BYTE PTR [rax],al
   14005a02c:	xor    BYTE PTR [rax],al
   14005a02e:	add    BYTE PTR [rax+0x0],al
   14005a034:	add    BYTE PTR [rax],al
   14005a036:	add    BYTE PTR [rax],al
   14005a038:	add    al,0x0
   14005a03a:	add    BYTE PTR [rax],al
   14005a03c:	add    BYTE PTR [rax],al
   14005a03e:	add    DWORD PTR [rax],eax
   14005a040:	or     DWORD PTR [rax+rax*1],eax
   14005a043:	add    BYTE PTR [rax+0x0],cl
   14005a046:	add    BYTE PTR [rax],al
   14005a048:	pop    rax
   14005a049:	movabs al,ds:0x4e40000015a0005
   14005a052:	add    BYTE PTR [rax],al
   14005a054:	add    BYTE PTR [rax],al
   14005a056:	add    BYTE PTR [rax],al
   14005a058:	cmp    al,0x61
   14005a05a:	jae    0x14005a0cf
   14005a05c:	gs ins DWORD PTR es:[rdi],dx
   14005a05e:	(bad)  
   14005a05f:	ins    BYTE PTR es:[rdi],dx
   14005a060:	jns    0x14005a082
   14005a062:	js     0x14005a0d1
   14005a064:	ins    BYTE PTR es:[rdi],dx
   14005a065:	outs   dx,BYTE PTR ds:[rsi]
   14005a066:	jae    0x14005a0a5
   14005a068:	and    dh,BYTE PTR [rbp+0x72]
   14005a06b:	outs   dx,BYTE PTR ds:[rsi]
   14005a06c:	cmp    dh,BYTE PTR [rbx+0x63]
   14005a06f:	push   0x73616d65
   14005a074:	sub    eax,0x7263696d
   14005a079:	outs   dx,DWORD PTR ds:[rsi]
   14005a07a:	jae    0x14005a0eb
   14005a07c:	data16 je 0x14005a0ac
   14005a07f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14005a082:	cmp    ah,BYTE PTR [rcx+0x73]
   14005a085:	ins    DWORD PTR es:[rdi],dx
   14005a086:	cs jbe 0x14005a0ba
   14005a089:	and    ah,BYTE PTR [rax]
   14005a08b:	ins    DWORD PTR es:[rdi],dx
   14005a08c:	(bad)  
   14005a08d:	outs   dx,BYTE PTR ds:[rsi]
   14005a08e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14005a095:	jb     0x14005a10a
   14005a097:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14005a09e:	xor    BYTE PTR [rdx],ah
   14005a0a0:	ds or  eax,0x3c20200a
   14005a0a6:	je     0x14005a11a
   14005a0a8:	jne    0x14005a11d
   14005a0aa:	je     0x14005a0f5
   14005a0ac:	outs   dx,BYTE PTR ds:[rsi]
   14005a0ad:	outs   dx,WORD PTR ds:[rsi]
   14005a0af:	and    BYTE PTR [rax+0x6d],bh
   14005a0b2:	ins    BYTE PTR es:[rdi],dx
   14005a0b3:	outs   dx,BYTE PTR ds:[rsi]
   14005a0b4:	jae    0x14005a0f3
   14005a0b6:	and    dh,BYTE PTR [rbp+0x72]
   14005a0b9:	outs   dx,BYTE PTR ds:[rsi]
   14005a0ba:	cmp    dh,BYTE PTR [rbx+0x63]
   14005a0bd:	push   0x73616d65
   14005a0c2:	sub    eax,0x7263696d
   14005a0c7:	outs   dx,DWORD PTR ds:[rsi]
   14005a0c8:	jae    0x14005a139
   14005a0ca:	data16 je 0x14005a0fa
   14005a0cd:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14005a0d0:	cmp    ah,BYTE PTR [rcx+0x73]
   14005a0d3:	ins    DWORD PTR es:[rdi],dx
   14005a0d4:	cs jbe 0x14005a10a
   14005a0d7:	and    bh,BYTE PTR [rsi]
   14005a0d9:	or     eax,0x2020200a
   14005a0de:	and    BYTE PTR [rbx+rsi*2],bh
   14005a0e1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14005a0e5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14005a0ed:	and    BYTE PTR [rax],ah
   14005a0ef:	and    BYTE PTR [rax],ah
   14005a0f1:	cmp    al,0x72
   14005a0f3:	gs jno 0x14005a16b
   14005a0f6:	gs jae 0x14005a16d
   14005a0f9:	gs fs push rax
   14005a0fc:	jb     0x14005a167
   14005a0fe:	jbe    0x14005a169
   14005a100:	ins    BYTE PTR es:[rdi],dx
   14005a101:	gs addr32 gs jae 0x14005a144
   14005a106:	or     eax,0x2020200a
   14005a10b:	and    BYTE PTR [rax],ah
   14005a10d:	and    BYTE PTR [rax],ah
   14005a10f:	and    BYTE PTR [rdx+rsi*2],bh
   14005a112:	gs jno 0x14005a18a
   14005a115:	gs jae 0x14005a18c
   14005a118:	gs fs rex.RB js 0x14005a182
   14005a11d:	movsxd esi,DWORD PTR [rbp+0x74]
   14005a120:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14005a127:	ins    BYTE PTR es:[rdi],dx
   14005a128:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14005a12c:	gs ins BYTE PTR es:[rdi],dx
   14005a12e:	cmp    eax,0x49736122
   14005a133:	outs   dx,BYTE PTR ds:[rsi]
   14005a134:	jbe    0x14005a1a5
   14005a136:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14005a13a:	and    BYTE PTR [rbp+0x69],dh
   14005a13d:	movsxd esp,DWORD PTR [r11+0x65]
   14005a141:	jae    0x14005a1b6
   14005a143:	cmp    eax,0x6c616622
   14005a148:	jae    0x14005a1af
   14005a14a:	and    bh,BYTE PTR [rsi]
   14005a14c:	cmp    al,0x2f
   14005a14e:	jb     0x14005a1b5
   14005a150:	jno    0x14005a1c7
   14005a152:	gs jae 0x14005a1c9
   14005a155:	gs fs rex.RB js 0x14005a1bf
   14005a15a:	movsxd esi,DWORD PTR [rbp+0x74]
   14005a15d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14005a164:	ins    BYTE PTR es:[rdi],dx
   14005a165:	ds or  eax,0x2020200a
   14005a16b:	and    BYTE PTR [rax],ah
   14005a16d:	and    BYTE PTR [rdi+rbp*1],bh
   14005a170:	jb     0x14005a1d7
   14005a172:	jno    0x14005a1e9
   14005a174:	gs jae 0x14005a1eb
   14005a177:	gs fs push rax
   14005a17a:	jb     0x14005a1e5
   14005a17c:	jbe    0x14005a1e7
   14005a17e:	ins    BYTE PTR es:[rdi],dx
   14005a17f:	gs addr32 gs jae 0x14005a1c2
   14005a184:	or     eax,0x2020200a
   14005a189:	and    BYTE PTR [rdi+rbp*1],bh
   14005a18c:	jae    0x14005a1f3
   14005a18e:	movsxd esi,DWORD PTR [rbp+0x72]
   14005a191:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14005a199:	cmp    al,0x2f
   14005a19b:	je     0x14005a20f
   14005a19d:	jne    0x14005a212
   14005a19f:	je     0x14005a1ea
   14005a1a1:	outs   dx,BYTE PTR ds:[rsi]
   14005a1a2:	outs   dx,WORD PTR ds:[rsi]
   14005a1a4:	ds or  eax,0x612f3c0a
   14005a1aa:	jae    0x14005a21f
   14005a1ac:	gs ins DWORD PTR es:[rdi],dx
   14005a1ae:	(bad)  
   14005a1af:	ins    BYTE PTR es:[rdi],dx
   14005a1b0:	jns    0x14005a1f0
   14005a1b2:	push   rax
   14005a1b3:	rex.B
