
39bbaf0755a1f571d03a1e77a578f59bc5a11635270ad758757abbe55bad8e30.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x8],rbx
   140001005:	push   rdi
   140001006:	sub    rsp,0x70
   14000100a:	mov    rax,QWORD PTR [rip+0x23987]        # 0x140024998
   140001011:	lea    rcx,[rip+0x19468]        # 0x14001a480
   140001018:	mov    QWORD PTR [rip+0x23981],rax        # 0x1400249a0
   14000101f:	call   0x140009da4
   140001024:	test   rax,rax
   140001027:	je     0x140001068
   140001029:	lea    rcx,[rip+0x19430]        # 0x14001a460
   140001030:	call   0x140009c3c
   140001035:	xor    ebx,ebx
   140001037:	cmp    DWORD PTR [rip+0x23947],ebx        # 0x140024984
   14000103d:	jle    0x140001068
   14000103f:	xor    edi,edi
   140001041:	mov    r8,QWORD PTR [rip+0x23940]        # 0x140024988
   140001048:	lea    rcx,[rip+0x193f9]        # 0x14001a448
   14000104f:	mov    edx,ebx
   140001051:	mov    r8,QWORD PTR [rdi+r8*1]
   140001055:	call   0x140009c3c
   14000105a:	inc    ebx
   14000105c:	add    rdi,0x8
   140001060:	cmp    ebx,DWORD PTR [rip+0x2391e]        # 0x140024984
   140001066:	jl     0x140001041
   140001068:	call   QWORD PTR [rip+0x18fd2]        # 0x14001a040
   14000106e:	mov    rcx,rax
   140001071:	call   0x140003f5c
   140001076:	call   0x140003f4c
   14000107b:	movsxd rdi,eax
   14000107e:	lea    ecx,[rdi+0x1]
   140001081:	movsxd rcx,ecx
   140001084:	shl    rcx,0x3
   140001088:	call   0x140004000
   14000108d:	mov    rbx,rax
   140001090:	call   0x140003f54
   140001095:	xor    r9d,r9d
   140001098:	xor    edx,edx
   14000109a:	test   edi,edi
   14000109c:	jle    0x1400010b4
   14000109e:	mov    r9d,edi
   1400010a1:	mov    rcx,QWORD PTR [rax]
   1400010a4:	add    rax,0x10
   1400010a8:	mov    QWORD PTR [rbx+rdx*8],rcx
   1400010ac:	inc    rdx
   1400010af:	cmp    rdx,rdi
   1400010b2:	jl     0x1400010a1
   1400010b4:	mov    rdx,QWORD PTR [rip+0x21f65]        # 0x140023020
   1400010bb:	movsxd rax,r9d
   1400010be:	and    QWORD PTR [rbx+rax*8],0x0
   1400010c3:	test   rdx,rdx
   1400010c6:	jne    0x1400010cb
   1400010c8:	mov    rdx,QWORD PTR [rbx]
   1400010cb:	mov    rcx,QWORD PTR [rip+0x21f46]        # 0x140023018
   1400010d2:	test   rcx,rcx
   1400010d5:	jne    0x1400010da
   1400010d7:	mov    rcx,QWORD PTR [rbx]
   1400010da:	mov    r9,QWORD PTR [rip+0x2363f]        # 0x140024720
   1400010e1:	mov    r8d,0x1
   1400010e7:	test   r9,r9
   1400010ea:	setne  al
   1400010ed:	and    DWORD PTR [rsp+0x68],0x0
   1400010f2:	mov    BYTE PTR [rsp+0x60],0x1
   1400010f7:	mov    BYTE PTR [rsp+0x58],0x1
   1400010fc:	mov    BYTE PTR [rsp+0x50],al
   140001100:	mov    QWORD PTR [rsp+0x48],rdx
   140001105:	mov    QWORD PTR [rsp+0x40],rcx
   14000110a:	lea    rax,[rip+0x1932f]        # 0x14001a440
   140001111:	mov    rdx,rbx
   140001114:	mov    QWORD PTR [rsp+0x38],rax
   140001119:	lea    rax,[rip+0x19310]        # 0x14001a430
   140001120:	mov    ecx,edi
   140001122:	mov    QWORD PTR [rsp+0x30],rax
   140001127:	mov    rax,QWORD PTR [rip+0x235fa]        # 0x140024728
   14000112e:	mov    QWORD PTR [rsp+0x28],rax
   140001133:	mov    DWORD PTR [rsp+0x20],0x1
   14000113b:	call   0x140003880
   140001140:	mov    rbx,QWORD PTR [rsp+0x80]
   140001148:	add    rsp,0x70
   14000114c:	pop    rdi
   14000114d:	ret    
   14000114e:	int3   
   14000114f:	int3   
   140001150:	mov    QWORD PTR [rsp+0x8],rbx
   140001155:	push   rdi
   140001156:	sub    rsp,0x20
   14000115a:	and    QWORD PTR [rsp+0x40],0x0
   140001160:	mov    rdi,rdx
   140001163:	mov    rbx,rcx
   140001166:	call   0x140004d8c
   14000116b:	lea    r8,[rsp+0x40]
   140001170:	mov    rcx,rbx
   140001173:	mov    rdx,rax
   140001176:	call   0x14000a120
   14000117b:	cmp    eax,0x1
   14000117e:	je     0x140001192
   140001180:	xor    eax,eax
   140001182:	jmp    0x14000120f
   140001187:	cmp    al,0x30
   140001189:	jl     0x140001198
   14000118b:	cmp    al,0x39
   14000118d:	jg     0x140001198
   14000118f:	inc    rbx
   140001192:	mov    al,BYTE PTR [rbx]
   140001194:	test   al,al
   140001196:	jne    0x140001187
   140001198:	mov    rcx,rbx
   14000119b:	call   0x140009fd0
   1400011a0:	cmp    rax,0x1
   1400011a4:	ja     0x140001180
   1400011a6:	cmp    BYTE PTR [rbx],0x0
   1400011a9:	je     0x140001202
   1400011ab:	cmp    BYTE PTR [rbx],0x47
   1400011ae:	je     0x1400011f7
   1400011b0:	cmp    BYTE PTR [rbx],0x4b
   1400011b3:	je     0x1400011ec
   1400011b5:	cmp    BYTE PTR [rbx],0x4d
   1400011b8:	je     0x1400011e1
   1400011ba:	cmp    BYTE PTR [rbx],0x54
   1400011bd:	je     0x1400011d3
   1400011bf:	cmp    BYTE PTR [rbx],0x67
   1400011c2:	je     0x1400011f7
   1400011c4:	cmp    BYTE PTR [rbx],0x6b
   1400011c7:	je     0x1400011ec
   1400011c9:	cmp    BYTE PTR [rbx],0x6d
   1400011cc:	je     0x1400011e1
   1400011ce:	cmp    BYTE PTR [rbx],0x74
   1400011d1:	jne    0x140001180
   1400011d3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400011d8:	shl    rcx,0x28
   1400011dc:	mov    QWORD PTR [rdi],rcx
   1400011df:	jmp    0x14000120a
   1400011e1:	mov    rax,QWORD PTR [rsp+0x40]
   1400011e6:	shl    rax,0x14
   1400011ea:	jmp    0x140001207
   1400011ec:	mov    rax,QWORD PTR [rsp+0x40]
   1400011f1:	shl    rax,0xa
   1400011f5:	jmp    0x140001207
   1400011f7:	mov    rax,QWORD PTR [rsp+0x40]
   1400011fc:	shl    rax,0x1e
   140001200:	jmp    0x140001207
   140001202:	mov    rax,QWORD PTR [rsp+0x40]
   140001207:	mov    QWORD PTR [rdi],rax
   14000120a:	mov    eax,0x1
   14000120f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001214:	add    rsp,0x20
   140001218:	pop    rdi
   140001219:	ret    
   14000121a:	int3   
   14000121b:	int3   
   14000121c:	mov    QWORD PTR [rsp+0x10],rbx
   140001221:	mov    QWORD PTR [rsp+0x18],rsi
   140001226:	push   rdi
   140001227:	sub    rsp,0x20
   14000122b:	mov    eax,DWORD PTR [rip+0x23503]        # 0x140024734
   140001231:	mov    rbx,rcx
   140001234:	mov    ecx,DWORD PTR [rip+0x234f6]        # 0x140024730
   14000123a:	mov    rsi,rdx
   14000123d:	cmp    ecx,eax
   14000123f:	jl     0x1400012b7
   140001241:	cmp    QWORD PTR [rip+0x234f7],0x0        # 0x140024740
   140001249:	jne    0x140001271
   14000124b:	mov    ecx,0x40
   140001250:	mov    DWORD PTR [rip+0x234da],0x4        # 0x140024734
   14000125a:	call   0x140004000
   14000125f:	mov    rdi,rax
   140001262:	mov    QWORD PTR [rip+0x234d7],rax        # 0x140024740
   140001269:	mov    ecx,DWORD PTR [rip+0x234c1]        # 0x140024730
   14000126f:	jmp    0x1400012be
   140001271:	add    eax,eax
   140001273:	movsxd rcx,eax
   140001276:	mov    DWORD PTR [rip+0x234b8],eax        # 0x140024734
   14000127c:	shl    rcx,0x4
   140001280:	call   0x140004000
   140001285:	movsxd r8,DWORD PTR [rip+0x234a4]        # 0x140024730
   14000128c:	mov    rdx,QWORD PTR [rip+0x234ad]        # 0x140024740
   140001293:	shl    r8,0x4
   140001297:	mov    rcx,rax
   14000129a:	mov    rdi,rax
   14000129d:	call   0x14000a170
   1400012a2:	mov    rcx,QWORD PTR [rip+0x23497]        # 0x140024740
   1400012a9:	call   0x140004084
   1400012ae:	mov    QWORD PTR [rip+0x2348b],rdi        # 0x140024740
   1400012b5:	jmp    0x140001269
   1400012b7:	mov    rdi,QWORD PTR [rip+0x23482]        # 0x140024740
   1400012be:	movsxd rax,ecx
   1400012c1:	inc    ecx
   1400012c3:	lea    rdx,[rip+0x191fe]        # 0x14001a4c8
   1400012ca:	add    rax,rax
   1400012cd:	mov    DWORD PTR [rip+0x2345d],ecx        # 0x140024730
   1400012d3:	mov    rcx,rbx
   1400012d6:	mov    QWORD PTR [rdi+rax*8],rbx
   1400012da:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
   1400012df:	call   0x1400040f8
   1400012e4:	test   eax,eax
   1400012e6:	jne    0x14000130c
   1400012e8:	lea    rcx,[rbx+0x4]
   1400012ec:	lea    rdx,[rsp+0x30]
   1400012f1:	call   0x140001150
   1400012f6:	mov    rcx,QWORD PTR [rip+0x2349b]        # 0x140024798
   1400012fd:	test   eax,eax
   1400012ff:	cmovne rcx,QWORD PTR [rsp+0x30]
   140001305:	mov    QWORD PTR [rip+0x2348c],rcx        # 0x140024798
   14000130c:	lea    rdx,[rip+0x191ad]        # 0x14001a4c0
   140001313:	mov    rcx,rbx
   140001316:	call   0x1400040f8
   14000131b:	test   eax,eax
   14000131d:	jne    0x140001343
   14000131f:	lea    rcx,[rbx+0x4]
   140001323:	lea    rdx,[rsp+0x30]
   140001328:	call   0x140001150
   14000132d:	mov    rcx,QWORD PTR [rip+0x2346c]        # 0x1400247a0
   140001334:	test   eax,eax
   140001336:	cmovne rcx,QWORD PTR [rsp+0x30]
   14000133c:	mov    QWORD PTR [rip+0x2345d],rcx        # 0x1400247a0
   140001343:	lea    rdx,[rip+0x1916e]        # 0x14001a4b8
   14000134a:	mov    rcx,rbx
   14000134d:	call   0x1400040f8
   140001352:	test   eax,eax
   140001354:	jne    0x14000137a
   140001356:	lea    rcx,[rbx+0x4]
   14000135a:	lea    rdx,[rsp+0x30]
   14000135f:	call   0x140001150
   140001364:	mov    rcx,QWORD PTR [rip+0x2343d]        # 0x1400247a8
   14000136b:	test   eax,eax
   14000136d:	cmovne rcx,QWORD PTR [rsp+0x30]
   140001373:	mov    QWORD PTR [rip+0x2342e],rcx        # 0x1400247a8
   14000137a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000137f:	mov    rsi,QWORD PTR [rsp+0x40]
   140001384:	add    rsp,0x20
   140001388:	pop    rdi
   140001389:	ret    
   14000138a:	int3   
   14000138b:	int3   
   14000138c:	test   rcx,rcx
   14000138f:	je     0x1400013f7
   140001391:	mov    QWORD PTR [rsp+0x8],rbx
   140001396:	mov    QWORD PTR [rsp+0x10],rsi
   14000139b:	push   rdi
   14000139c:	sub    rsp,0x20
   1400013a0:	mov    rdi,rcx
   1400013a3:	call   0x140006170
   1400013a8:	mov    rcx,rax
   1400013ab:	mov    rsi,rax
   1400013ae:	call   0x140009fd0
   1400013b3:	lea    rcx,[rax+0x13]
   1400013b7:	call   0x140004000
   1400013bc:	lea    rdx,[rip+0x190dd]        # 0x14001a4a0
   1400013c3:	mov    r8,rsi
   1400013c6:	mov    rcx,rax
   1400013c9:	mov    rbx,rax
   1400013cc:	call   0x14000a4a4
   1400013d1:	xor    edx,edx
   1400013d3:	mov    rcx,rbx
   1400013d6:	call   0x14000121c
   1400013db:	cmp    rsi,rdi
   1400013de:	je     0x1400013e8
   1400013e0:	mov    rcx,rsi
   1400013e3:	call   0x140004084
   1400013e8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400013ed:	mov    rsi,QWORD PTR [rsp+0x38]
   1400013f2:	add    rsp,0x20
   1400013f6:	pop    rdi
   1400013f7:	ret    
   1400013f8:	sub    rsp,0x28
   1400013fc:	mov    rax,QWORD PTR [rip+0x233ad]        # 0x1400247b0
   140001403:	test   rax,rax
   140001406:	jne    0x14000142e
   140001408:	lea    rdx,[rip+0x191b1]        # 0x14001a5c0
   14000140f:	call   0x140004d94
   140001414:	mov    QWORD PTR [rip+0x23395],rax        # 0x1400247b0
   14000141b:	test   rax,rax
   14000141e:	jne    0x14000142e
   140001420:	lea    rcx,[rip+0x19149]        # 0x14001a570
   140001427:	call   0x140004370
   14000142c:	xor    eax,eax
   14000142e:	add    rsp,0x28
   140001432:	ret    
   140001433:	int3   
   140001434:	mov    rax,rsp
   140001437:	mov    QWORD PTR [rax+0x8],rbx
   14000143b:	mov    QWORD PTR [rax+0x10],rbp
   14000143f:	mov    QWORD PTR [rax+0x18],rsi
   140001443:	mov    QWORD PTR [rax+0x20],rdi
   140001447:	push   r12
   140001449:	sub    rsp,0x30
   14000144d:	mov    rdi,rcx
   140001450:	mov    rcx,rdx
   140001453:	mov    rbx,rdx
   140001456:	call   0x140009fd0
   14000145b:	mov    rcx,rdi
   14000145e:	mov    r12,rax
   140001461:	call   0x1400013f8
   140001466:	mov    rbp,rax
   140001469:	test   rax,rax
   14000146c:	jne    0x140001497
   14000146e:	lea    rcx,[rip+0x190fb]        # 0x14001a570
   140001475:	call   0x140004370
   14000147a:	xor    eax,eax
   14000147c:	mov    rbx,QWORD PTR [rsp+0x40]
   140001481:	mov    rbp,QWORD PTR [rsp+0x48]
   140001486:	mov    rsi,QWORD PTR [rsp+0x50]
   14000148b:	mov    rdi,QWORD PTR [rsp+0x58]
   140001490:	add    rsp,0x30
   140001494:	pop    r12
   140001496:	ret    
   140001497:	test   rbx,rbx
   14000149a:	je     0x14000147a
   14000149c:	mov    rax,QWORD PTR [rdi]
   14000149f:	mov    edx,r12d
   1400014a2:	mov    rcx,rdi
   1400014a5:	call   QWORD PTR [rax+0x580]
   1400014ab:	mov    rsi,rax
   1400014ae:	test   rax,rax
   1400014b1:	je     0x14000147a
   1400014b3:	mov    r10,QWORD PTR [rdi]
   1400014b6:	mov    r9d,r12d
   1400014b9:	xor    r8d,r8d
   1400014bc:	mov    rdx,rax
   1400014bf:	mov    rcx,rdi
   1400014c2:	mov    QWORD PTR [rsp+0x20],rbx
   1400014c7:	call   QWORD PTR [r10+0x680]
   1400014ce:	mov    r11,QWORD PTR [rdi]
   1400014d1:	mov    rcx,rdi
   1400014d4:	call   QWORD PTR [r11+0x78]
   1400014d8:	test   rax,rax
   1400014db:	jne    0x14000147a
   1400014dd:	mov    r8,QWORD PTR [rip+0x232d4]        # 0x1400247b8
   1400014e4:	test   r8,r8
   1400014e7:	jne    0x140001519
   1400014e9:	mov    rax,QWORD PTR [rdi]
   1400014ec:	lea    r9,[rip+0x19105]        # 0x14001a5f8
   1400014f3:	lea    r8,[rip+0x190e6]        # 0x14001a5e0
   1400014fa:	mov    rdx,rbp
   1400014fd:	mov    rcx,rdi
   140001500:	call   QWORD PTR [rax+0x388]
   140001506:	mov    r8,rax
   140001509:	mov    QWORD PTR [rip+0x232a8],rax        # 0x1400247b8
   140001510:	test   rax,rax
   140001513:	je     0x14000146e
   140001519:	mov    rax,QWORD PTR [rdi]
   14000151c:	mov    r9d,0x1
   140001522:	mov    rdx,rbp
   140001525:	mov    rcx,rdi
   140001528:	mov    QWORD PTR [rsp+0x20],rsi
   14000152d:	call   QWORD PTR [rax+0x390]
   140001533:	mov    r8,QWORD PTR [rdi]
   140001536:	mov    rdx,rsi
   140001539:	mov    rcx,rdi
   14000153c:	mov    rbx,rax
   14000153f:	call   QWORD PTR [r8+0xb8]
   140001546:	mov    rax,rbx
   140001549:	jmp    0x14000147c
   14000154e:	int3   
   14000154f:	int3   
   140001550:	mov    QWORD PTR [rsp+0x8],rbx
   140001555:	mov    QWORD PTR [rsp+0x10],rbp
   14000155a:	mov    QWORD PTR [rsp+0x18],rsi
   14000155f:	push   rdi
   140001560:	push   r12
   140001562:	push   r13
   140001564:	sub    rsp,0x20
   140001568:	mov    rbp,rdx
   14000156b:	lea    rdx,[rip+0x1909e]        # 0x14001a610
   140001572:	mov    esi,r8d
   140001575:	mov    rbx,rcx
   140001578:	call   0x140004d94
   14000157d:	mov    r8,rax
   140001580:	test   rax,rax
   140001583:	jne    0x140001595
   140001585:	lea    rcx,[rip+0x18fe4]        # 0x14001a570
   14000158c:	call   0x140004370
   140001591:	xor    eax,eax
   140001593:	jmp    0x1400015fe
   140001595:	mov    rax,QWORD PTR [rbx]
   140001598:	xor    r9d,r9d
   14000159b:	mov    edx,esi
   14000159d:	mov    rcx,rbx
   1400015a0:	call   QWORD PTR [rax+0x560]
   1400015a6:	mov    rdi,rax
   1400015a9:	test   rax,rax
   1400015ac:	je     0x140001585
   1400015ae:	xor    r13d,r13d
   1400015b1:	test   esi,esi
   1400015b3:	jle    0x1400015fb
   1400015b5:	mov    rdx,QWORD PTR [rbp+0x0]
   1400015b9:	mov    rcx,rbx
   1400015bc:	call   0x140001434
   1400015c1:	add    rbp,0x8
   1400015c5:	mov    r12,rax
   1400015c8:	test   rax,rax
   1400015cb:	je     0x140001585
   1400015cd:	mov    r10,QWORD PTR [rbx]
   1400015d0:	mov    r9,rax
   1400015d3:	mov    r8d,r13d
   1400015d6:	mov    rdx,rdi
   1400015d9:	mov    rcx,rbx
   1400015dc:	call   QWORD PTR [r10+0x570]
   1400015e3:	mov    r11,QWORD PTR [rbx]
   1400015e6:	mov    rdx,r12
   1400015e9:	mov    rcx,rbx
   1400015ec:	call   QWORD PTR [r11+0xb8]
   1400015f3:	inc    r13d
   1400015f6:	cmp    r13d,esi
   1400015f9:	jl     0x1400015b5
   1400015fb:	mov    rax,rdi
   1400015fe:	mov    rbx,QWORD PTR [rsp+0x40]
   140001603:	mov    rbp,QWORD PTR [rsp+0x48]
   140001608:	mov    rsi,QWORD PTR [rsp+0x50]
   14000160d:	add    rsp,0x20
   140001611:	pop    r13
   140001613:	pop    r12
   140001615:	pop    rdi
   140001616:	ret    
   140001617:	int3   
   140001618:	mov    QWORD PTR [rsp+0x8],rbx
   14000161d:	mov    QWORD PTR [rsp+0x10],rbp
   140001622:	mov    QWORD PTR [rsp+0x18],rsi
   140001627:	push   rdi
   140001628:	push   r12
   14000162a:	push   r13
   14000162c:	sub    rsp,0x30
   140001630:	mov    r12,r8
   140001633:	mov    r13d,edx
   140001636:	mov    rbx,rcx
   140001639:	call   0x1400013f8
   14000163e:	mov    rsi,rax
   140001641:	test   rax,rax
   140001644:	jne    0x140001659
   140001646:	lea    rcx,[rip+0x18f23]        # 0x14001a570
   14000164d:	call   0x140004370
   140001652:	xor    eax,eax
   140001654:	jmp    0x140001705
   140001659:	call   0x1400040f0
   14000165e:	test   al,al
   140001660:	je     0x14000166c
   140001662:	call   0x1400042a0
   140001667:	mov    rdi,rax
   14000166a:	jmp    0x140001671
   14000166c:	mov    rdi,QWORD PTR [rsp+0x68]
   140001671:	mov    rax,QWORD PTR [rbx]
   140001674:	lea    r9,[rip+0x18ffd]        # 0x14001a678
   14000167b:	lea    r8,[rip+0x18fde]        # 0x14001a660
   140001682:	mov    rdx,rsi
   140001685:	mov    rcx,rbx
   140001688:	call   QWORD PTR [rax+0x388]
   14000168e:	mov    rbp,rax
   140001691:	test   rax,rax
   140001694:	je     0x140001646
   140001696:	mov    rdx,r12
   140001699:	mov    rcx,rbx
   14000169c:	call   0x140001434
   1400016a1:	mov    r10,QWORD PTR [rbx]
   1400016a4:	mov    r9d,0x1
   1400016aa:	mov    QWORD PTR [rsp+0x28],rax
   1400016af:	mov    r8,rbp
   1400016b2:	mov    rdx,rsi
   1400016b5:	mov    rcx,rbx
   1400016b8:	mov    DWORD PTR [rsp+0x20],r13d
   1400016bd:	call   QWORD PTR [r10+0x390]
   1400016c4:	mov    rbx,rax
   1400016c7:	call   0x1400040f0
   1400016cc:	test   al,al
   1400016ce:	je     0x140001702
   1400016d0:	call   0x1400042a0
   1400016d5:	sub    rax,rdi
   1400016d8:	mov    rcx,rax
   1400016db:	call   0x1400042ec
   1400016e0:	lea    rcx,[rip+0x18f51]        # 0x14001a638
   1400016e7:	mov    rdx,rax
   1400016ea:	call   0x140009c3c
   1400016ef:	lea    rdx,[rip+0x18d8a]        # 0x14001a480
   1400016f6:	lea    rcx,[rip+0x18f2b]        # 0x14001a628
   1400016fd:	call   0x140009c3c
   140001702:	mov    rax,rbx
   140001705:	mov    rbx,QWORD PTR [rsp+0x50]
   14000170a:	mov    rbp,QWORD PTR [rsp+0x58]
   14000170f:	mov    rsi,QWORD PTR [rsp+0x60]
   140001714:	add    rsp,0x30
   140001718:	pop    r13
   14000171a:	pop    r12
   14000171c:	pop    rdi
   14000171d:	ret    
   14000171e:	int3   
   14000171f:	int3   
   140001720:	mov    QWORD PTR [rsp+0x8],rbx
   140001725:	mov    QWORD PTR [rsp+0x18],rbp
   14000172a:	push   rsi
   14000172b:	push   rdi
   14000172c:	push   r12
   14000172e:	sub    rsp,0x150
   140001735:	mov    rax,QWORD PTR [rip+0x21984]        # 0x1400230c0
   14000173c:	xor    rax,rsp
   14000173f:	mov    QWORD PTR [rsp+0x140],rax
   140001747:	movsxd rbp,ecx
   14000174a:	lea    rcx,[rip+0x18fc7]        # 0x14001a718
   140001751:	mov    r12,rdx
   140001754:	mov    WORD PTR [rsp+0x20],0x3b
   14000175b:	call   0x140009da4
   140001760:	mov    esi,0x28
   140001765:	test   rax,rax
   140001768:	je     0x1400017a5
   14000176a:	mov    rcx,rax
   14000176d:	call   0x140006170
   140001772:	mov    rcx,rax
   140001775:	mov    rdi,rax
   140001778:	call   0x140009fd0
   14000177d:	lea    rcx,[rsi+rax*1]
   140001781:	call   0x140004000
   140001786:	lea    rdx,[rip+0x18f73]        # 0x14001a700
   14000178d:	mov    r8,rdi
   140001790:	mov    rcx,rax
   140001793:	mov    rbx,rax
   140001796:	call   0x14000a4a4
   14000179b:	xor    edx,edx
   14000179d:	mov    rcx,rbx
   1400017a0:	call   0x14000121c
   1400017a5:	lea    rcx,[rsp+0x30]
   1400017aa:	mov    edx,0x104
   1400017af:	call   0x1400041cc
   1400017b4:	test   al,al
   1400017b6:	jne    0x1400017cb
   1400017b8:	lea    rcx,[rip+0x18f11]        # 0x14001a6d0
   1400017bf:	call   0x140004370
   1400017c4:	xor    al,al
   1400017c6:	jmp    0x140001893
   1400017cb:	lea    rcx,[rsp+0x30]
   1400017d0:	call   0x140009fd0
   1400017d5:	lea    rcx,[rsi+rax*1]
   1400017d9:	call   0x140004000
   1400017de:	lea    r8,[rsp+0x30]
   1400017e3:	lea    rdx,[rip+0x18ece]        # 0x14001a6b8
   1400017ea:	mov    rcx,rax
   1400017ed:	mov    rbx,rax
   1400017f0:	call   0x14000a4a4
   1400017f5:	xor    edx,edx
   1400017f7:	mov    rcx,rbx
   1400017fa:	call   0x14000121c
   1400017ff:	xor    edi,edi
   140001801:	test   rbp,rbp
   140001804:	jle    0x140001828
   140001806:	mov    rcx,QWORD PTR [r12+rdi*8]
   14000180a:	call   0x140009fd0
   14000180f:	lea    rcx,[rsp+0x30]
   140001814:	lea    ebx,[rsi+rax*1]
   140001817:	call   0x140009fd0
   14000181c:	inc    rdi
   14000181f:	lea    esi,[rbx+rax*1+0x1]
   140001823:	cmp    rdi,rbp
   140001826:	jl     0x140001806
   140001828:	lea    eax,[rsi+0x1]
   14000182b:	movsxd rcx,eax
   14000182e:	call   0x140004000
   140001833:	lea    rdx,[rip+0x18e66]        # 0x14001a6a0
   14000183a:	mov    rcx,rax
   14000183d:	mov    rbx,rax
   140001840:	call   0x14000a780
   140001845:	xor    edi,edi
   140001847:	test   rbp,rbp
   14000184a:	jle    0x14000187a
   14000184c:	lea    rdx,[rsp+0x30]
   140001851:	mov    rcx,rbx
   140001854:	call   0x14000a6e0
   140001859:	mov    rdx,QWORD PTR [r12+rdi*8]
   14000185d:	mov    rcx,rbx
   140001860:	call   0x14000a6e0
   140001865:	lea    rdx,[rsp+0x20]
   14000186a:	mov    rcx,rbx
   14000186d:	call   0x14000a6e0
   140001872:	inc    rdi
   140001875:	cmp    rdi,rbp
   140001878:	jl     0x14000184c
   14000187a:	mov    rcx,rbx
   14000187d:	call   0x140009fd0
   140001882:	xor    edx,edx
   140001884:	mov    rcx,rbx
   140001887:	mov    BYTE PTR [rax+rbx*1-0x1],0x0
   14000188c:	call   0x14000121c
   140001891:	mov    al,0x1
   140001893:	mov    rcx,QWORD PTR [rsp+0x140]
   14000189b:	xor    rcx,rsp
   14000189e:	call   0x14000a850
   1400018a3:	lea    r11,[rsp+0x150]
   1400018ab:	mov    rbx,QWORD PTR [r11+0x20]
   1400018af:	mov    rbp,QWORD PTR [r11+0x30]
   1400018b3:	mov    rsp,r11
   1400018b6:	pop    r12
   1400018b8:	pop    rdi
   1400018b9:	pop    rsi
   1400018ba:	ret    
   1400018bb:	int3   
   1400018bc:	test   rcx,rcx
   1400018bf:	je     0x14000198e
   1400018c5:	mov    QWORD PTR [rsp+0x8],rbx
   1400018ca:	mov    QWORD PTR [rsp+0x10],rbp
   1400018cf:	mov    QWORD PTR [rsp+0x18],rsi
   1400018d4:	push   rdi
   1400018d5:	push   r12
   1400018d7:	push   r13
   1400018d9:	sub    rsp,0x20
   1400018dd:	mov    r13,r8
   1400018e0:	movsxd rsi,edx
   1400018e3:	mov    rbp,rcx
   1400018e6:	xor    ebx,ebx
   1400018e8:	call   0x140009fd0
   1400018ed:	mov    edi,ebx
   1400018ef:	mov    r12,rax
   1400018f2:	test   rsi,rsi
   1400018f5:	jle    0x14000190e
   1400018f7:	mov    rcx,QWORD PTR [r13+rdi*8+0x0]
   1400018fc:	call   0x140009fd0
   140001901:	inc    rdi
   140001904:	lea    r12,[r12+rax*1+0x1]
   140001909:	cmp    rdi,rsi
   14000190c:	jl     0x1400018f7
   14000190e:	lea    rcx,[rip+0x18e13]        # 0x14001a728
   140001915:	call   0x140009fd0
   14000191a:	lea    rcx,[rax+r12*1+0x1]
   14000191f:	call   0x140004000
   140001924:	lea    rdx,[rip+0x18dfd]        # 0x14001a728
   14000192b:	mov    rcx,rax
   14000192e:	mov    rdi,rax
   140001931:	mov    BYTE PTR [rax],bl
   140001933:	call   0x14000a6e0
   140001938:	mov    rdx,rbp
   14000193b:	mov    rcx,rdi
   14000193e:	call   0x14000a6e0
   140001943:	test   rsi,rsi
   140001946:	jle    0x14000196c
   140001948:	lea    rdx,[rip+0x18dd5]        # 0x14001a724
   14000194f:	mov    rcx,rdi
   140001952:	call   0x14000a6e0
   140001957:	mov    rdx,QWORD PTR [r13+rbx*8+0x0]
   14000195c:	mov    rcx,rdi
   14000195f:	call   0x14000a6e0
   140001964:	inc    rbx
   140001967:	cmp    rbx,rsi
   14000196a:	jl     0x140001948
   14000196c:	xor    edx,edx
   14000196e:	mov    rcx,rdi
   140001971:	call   0x14000121c
   140001976:	mov    rbx,QWORD PTR [rsp+0x40]
   14000197b:	mov    rbp,QWORD PTR [rsp+0x48]
   140001980:	mov    rsi,QWORD PTR [rsp+0x50]
   140001985:	add    rsp,0x20
   140001989:	pop    r13
   14000198b:	pop    r12
   14000198d:	pop    rdi
   14000198e:	ret    
   14000198f:	int3   
   140001990:	mov    rax,rsp
   140001993:	mov    QWORD PTR [rax+0x8],rbx
   140001997:	mov    QWORD PTR [rax+0x10],rbp
   14000199b:	mov    QWORD PTR [rax+0x18],rsi
   14000199f:	mov    QWORD PTR [rax+0x20],rdi
   1400019a3:	push   r12
   1400019a5:	sub    rsp,0x50
   1400019a9:	mov    rbx,rdx
   1400019ac:	mov    rsi,rcx
   1400019af:	call   0x1400013f8
   1400019b4:	mov    rbp,rax
   1400019b7:	test   rax,rax
   1400019ba:	jne    0x1400019cd
   1400019bc:	lea    rcx,[rip+0x18bad]        # 0x14001a570
   1400019c3:	call   0x140004370
   1400019c8:	jmp    0x140001a53
   1400019cd:	mov    rax,QWORD PTR [rsi]
   1400019d0:	lea    r9,[rip+0x18dc9]        # 0x14001a7a0
   1400019d7:	lea    r8,[rip+0x18db2]        # 0x14001a790
   1400019de:	mov    rdx,rbp
   1400019e1:	mov    rcx,rsi
   1400019e4:	call   QWORD PTR [rax+0x388]
   1400019ea:	mov    r12,rax
   1400019ed:	test   rax,rax
   1400019f0:	je     0x1400019bc
   1400019f2:	mov    rax,QWORD PTR [rsi]
   1400019f5:	mov    rdx,rbx
   1400019f8:	mov    rcx,rsi
   1400019fb:	call   QWORD PTR [rax+0x538]
   140001a01:	mov    rdi,QWORD PTR [rsi]
   140001a04:	mov    rbx,rax
   140001a07:	call   0x1400045d0
   140001a0c:	mov    rcx,QWORD PTR [rip+0x22d85]        # 0x140024798
   140001a13:	movzx  r11d,al
   140001a17:	mov    r9d,0x1
   140001a1d:	mov    r8,r12
   140001a20:	mov    DWORD PTR [rsp+0x40],r11d
   140001a25:	mov    QWORD PTR [rsp+0x38],rcx
   140001a2a:	mov    rcx,QWORD PTR [rip+0x22d6f]        # 0x1400247a0
   140001a31:	mov    QWORD PTR [rsp+0x30],rcx
   140001a36:	mov    rcx,QWORD PTR [rip+0x22d6b]        # 0x1400247a8
   140001a3d:	mov    rdx,rbp
   140001a40:	mov    QWORD PTR [rsp+0x28],rcx
   140001a45:	mov    rcx,rsi
   140001a48:	mov    QWORD PTR [rsp+0x20],rbx
   140001a4d:	call   QWORD PTR [rdi+0x468]
   140001a53:	mov    rbx,QWORD PTR [rsp+0x60]
   140001a58:	mov    rbp,QWORD PTR [rsp+0x68]
   140001a5d:	mov    rsi,QWORD PTR [rsp+0x70]
   140001a62:	mov    rdi,QWORD PTR [rsp+0x78]
   140001a67:	add    rsp,0x50
   140001a6b:	pop    r12
   140001a6d:	ret    
   140001a6e:	int3   
   140001a6f:	int3   
   140001a70:	mov    QWORD PTR [rsp+0x8],rbx
   140001a75:	mov    QWORD PTR [rsp+0x10],rbp
   140001a7a:	push   rdi
   140001a7b:	push   r12
   140001a7d:	push   r13
   140001a7f:	push   r14
   140001a81:	push   r15
   140001a83:	sub    rsp,0x30
   140001a87:	mov    bl,dl
   140001a89:	mov    rdi,rcx
   140001a8c:	call   0x1400013f8
   140001a91:	mov    rbp,rax
   140001a94:	test   rax,rax
   140001a97:	jne    0x140001aaa
   140001a99:	lea    rcx,[rip+0x18ad0]        # 0x14001a570
   140001aa0:	call   0x140004370
   140001aa5:	jmp    0x140001da1
   140001aaa:	mov    rax,QWORD PTR [rdi]
   140001aad:	mov    rdx,rbp
   140001ab0:	mov    rcx,rdi
   140001ab3:	test   bl,bl
   140001ab5:	je     0x140001aed
   140001ab7:	lea    r9,[rip+0x18dde]        # 0x14001a89c
   140001abe:	lea    r8,[rip+0x18dc3]        # 0x14001a888
   140001ac5:	call   QWORD PTR [rax+0x388]
   140001acb:	mov    r8,rax
   140001ace:	test   rax,rax
   140001ad1:	je     0x140001a99
   140001ad3:	mov    rax,QWORD PTR [rdi]
   140001ad6:	mov    r9d,0x1
   140001adc:	mov    rdx,rbp
   140001adf:	mov    rcx,rdi
   140001ae2:	call   QWORD PTR [rax+0x468]
   140001ae8:	jmp    0x140001da1
   140001aed:	lea    r9,[rip+0x18d7c]        # 0x14001a870
   140001af4:	lea    r8,[rip+0x18d65]        # 0x14001a860
   140001afb:	call   QWORD PTR [rax+0x388]
   140001b01:	mov    rbx,rax
   140001b04:	test   rax,rax
   140001b07:	je     0x140001a99
   140001b09:	mov    rax,QWORD PTR [rdi]
   140001b0c:	lea    r9,[rip+0x18d25]        # 0x14001a838
   140001b13:	lea    r8,[rip+0x18d06]        # 0x14001a820
   140001b1a:	mov    rdx,rbp
   140001b1d:	mov    rcx,rdi
   140001b20:	call   QWORD PTR [rax+0x388]
   140001b26:	mov    r14,rax
   140001b29:	test   rax,rax
   140001b2c:	je     0x140001a99
   140001b32:	mov    rax,QWORD PTR [rdi]
   140001b35:	lea    r9,[rip+0x18cfc]        # 0x14001a838
   140001b3c:	lea    r8,[rip+0x18cc5]        # 0x14001a808
   140001b43:	mov    rdx,rbp
   140001b46:	mov    rcx,rdi
   140001b49:	call   QWORD PTR [rax+0x388]
   140001b4f:	mov    QWORD PTR [rsp+0x70],rax
   140001b54:	test   rax,rax
   140001b57:	je     0x140001a99
   140001b5d:	mov    rax,QWORD PTR [rdi]
   140001b60:	lea    r9,[rip+0x18c89]        # 0x14001a7f0
   140001b67:	lea    r8,[rip+0x18c6a]        # 0x14001a7d8
   140001b6e:	mov    rdx,rbp
   140001b71:	mov    rcx,rdi
   140001b74:	call   QWORD PTR [rax+0x388]
   140001b7a:	mov    r15,rax
   140001b7d:	test   rax,rax
   140001b80:	je     0x140001a99
   140001b86:	mov    rax,QWORD PTR [rdi]
   140001b89:	lea    r9,[rip+0x18d0c]        # 0x14001a89c
   140001b90:	lea    r8,[rip+0x18c29]        # 0x14001a7c0
   140001b97:	mov    rdx,rbp
   140001b9a:	mov    rcx,rdi
   140001b9d:	call   QWORD PTR [rax+0x388]
   140001ba3:	mov    QWORD PTR [rsp+0x78],rax
   140001ba8:	test   rax,rax
   140001bab:	je     0x140001a99
   140001bb1:	mov    rax,QWORD PTR [rdi]
   140001bb4:	mov    rdx,QWORD PTR [rip+0x22b8d]        # 0x140024748
   140001bbb:	mov    rcx,rdi
   140001bbe:	call   QWORD PTR [rax+0x538]
   140001bc4:	mov    r10,QWORD PTR [rdi]
   140001bc7:	mov    r8,rbx
   140001bca:	mov    rdx,rbp
   140001bcd:	mov    rcx,rdi
   140001bd0:	mov    r9,rax
   140001bd3:	call   QWORD PTR [r10+0x468]
   140001bda:	mov    rdx,QWORD PTR [rip+0x22ba7]        # 0x140024788
   140001be1:	cmp    DWORD PTR [rdx+0x8],0x0
   140001be5:	je     0x140001bed
   140001be7:	cmp    DWORD PTR [rdx+0x8],0x4
   140001beb:	jne    0x140001c3b
   140001bed:	mov    rax,QWORD PTR [rdi]
   140001bf0:	mov    rdx,QWORD PTR [rdx]
   140001bf3:	mov    rcx,rdi
   140001bf6:	call   QWORD PTR [rax+0x538]
   140001bfc:	mov    rcx,QWORD PTR [rip+0x22b85]        # 0x140024788
   140001c03:	mov    r8,QWORD PTR [rdi]
   140001c06:	mov    rdx,QWORD PTR [rcx]
   140001c09:	mov    rcx,rdi
   140001c0c:	mov    rbx,rax
   140001c0f:	inc    rdx
   140001c12:	call   QWORD PTR [r8+0x538]
   140001c19:	mov    r10,QWORD PTR [rdi]
   140001c1c:	mov    r9,rbx
   140001c1f:	mov    r8,r14
   140001c22:	mov    rdx,rbp
   140001c25:	mov    rcx,rdi
   140001c28:	mov    QWORD PTR [rsp+0x20],rax
   140001c2d:	call   QWORD PTR [r10+0x468]
   140001c34:	mov    rdx,QWORD PTR [rip+0x22b4d]        # 0x140024788
   140001c3b:	mov    eax,DWORD PTR [rip+0x22b33]        # 0x140024774
   140001c41:	mov    r13d,0x1
   140001c47:	cmp    eax,r13d
   140001c4a:	jle    0x140001cba
   140001c4c:	lea    r12d,[r13+0x1f]
   140001c50:	cmp    DWORD PTR [r12+rdx*1+0x8],0x0
   140001c56:	jne    0x140001cae
   140001c58:	mov    rax,QWORD PTR [rdi]
   140001c5b:	mov    rdx,QWORD PTR [r12+rdx*1]
   140001c5f:	mov    rcx,rdi
   140001c62:	call   QWORD PTR [rax+0x538]
   140001c68:	mov    rcx,QWORD PTR [rip+0x22b19]        # 0x140024788
   140001c6f:	mov    r8,QWORD PTR [rdi]
   140001c72:	mov    rdx,QWORD PTR [r12+rcx*1]
   140001c76:	mov    rcx,rdi
   140001c79:	mov    rbx,rax
   140001c7c:	inc    rdx
   140001c7f:	call   QWORD PTR [r8+0x538]
   140001c86:	mov    r10,QWORD PTR [rdi]
   140001c89:	mov    r9,rbx
   140001c8c:	mov    r8,r14
   140001c8f:	mov    rdx,rbp
   140001c92:	mov    rcx,rdi
   140001c95:	mov    QWORD PTR [rsp+0x20],rax
   140001c9a:	call   QWORD PTR [r10+0x468]
   140001ca1:	mov    rdx,QWORD PTR [rip+0x22ae0]        # 0x140024788
   140001ca8:	mov    eax,DWORD PTR [rip+0x22ac6]        # 0x140024774
   140001cae:	inc    r13d
   140001cb1:	add    r12,0x20
   140001cb5:	cmp    r13d,eax
   140001cb8:	jl     0x140001c50
   140001cba:	mov    r13d,0x1
   140001cc0:	cmp    eax,r13d
   140001cc3:	jle    0x140001d39
   140001cc5:	mov    r14,QWORD PTR [rsp+0x70]
   140001cca:	lea    r12d,[r13+0x1f]
   140001cce:	cmp    DWORD PTR [r12+rdx*1+0x8],0x1
   140001cd4:	jne    0x140001d2d
   140001cd6:	mov    rax,QWORD PTR [rdi]
   140001cd9:	mov    rdx,QWORD PTR [r12+rdx*1]
   140001cdd:	mov    rcx,rdi
   140001ce0:	call   QWORD PTR [rax+0x538]
   140001ce6:	mov    rcx,QWORD PTR [rip+0x22a9b]        # 0x140024788
   140001ced:	mov    r8,QWORD PTR [rdi]
   140001cf0:	mov    rdx,QWORD PTR [r12+rcx*1+0x10]
   140001cf5:	mov    rcx,rdi
   140001cf8:	mov    rbx,rax
   140001cfb:	inc    rdx
   140001cfe:	call   QWORD PTR [r8+0x538]
   140001d05:	mov    r10,QWORD PTR [rdi]
   140001d08:	mov    r9,rbx
   140001d0b:	mov    r8,r14
   140001d0e:	mov    rdx,rbp
   140001d11:	mov    rcx,rdi
   140001d14:	mov    QWORD PTR [rsp+0x20],rax
   140001d19:	call   QWORD PTR [r10+0x468]
   140001d20:	mov    rdx,QWORD PTR [rip+0x22a61]        # 0x140024788
   140001d27:	mov    eax,DWORD PTR [rip+0x22a47]        # 0x140024774
   140001d2d:	inc    r13d
   140001d30:	add    r12,0x20
   140001d34:	cmp    r13d,eax
   140001d37:	jl     0x140001cce
   140001d39:	call   0x1400045d0
   140001d3e:	mov    rcx,QWORD PTR [rip+0x22a43]        # 0x140024788
   140001d45:	mov    rdx,QWORD PTR [rcx]
   140001d48:	mov    bl,al
   140001d4a:	inc    rdx
   140001d4d:	cmp    DWORD PTR [rcx+0x8],0x4
   140001d51:	jne    0x140001d5e
   140001d53:	test   al,al
   140001d55:	je     0x140001d5e
   140001d57:	mov    rdx,QWORD PTR [rcx+0x18]
   140001d5b:	inc    rdx
   140001d5e:	mov    rax,QWORD PTR [rdi]
   140001d61:	mov    rcx,rdi
   140001d64:	call   QWORD PTR [rax+0x538]
   140001d6a:	mov    r10,QWORD PTR [rdi]
   140001d6d:	movzx  r9d,bl
   140001d71:	mov    r8,r15
   140001d74:	mov    rdx,rbp
   140001d77:	mov    rcx,rdi
   140001d7a:	mov    QWORD PTR [rsp+0x20],rax
   140001d7f:	call   QWORD PTR [r10+0x468]
   140001d86:	mov    r11,QWORD PTR [rdi]
   140001d89:	mov    r8,QWORD PTR [rsp+0x78]
   140001d8e:	mov    r9d,0x1
   140001d94:	mov    rdx,rbp
   140001d97:	mov    rcx,rdi
   140001d9a:	call   QWORD PTR [r11+0x468]
   140001da1:	mov    rbx,QWORD PTR [rsp+0x60]
   140001da6:	mov    rbp,QWORD PTR [rsp+0x68]
   140001dab:	add    rsp,0x30
   140001daf:	pop    r15
   140001db1:	pop    r14
   140001db3:	pop    r13
   140001db5:	pop    r12
   140001db7:	pop    rdi
   140001db8:	ret    
   140001db9:	int3   
   140001dba:	int3   
   140001dbb:	int3   
   140001dbc:	mov    QWORD PTR [rsp+0x8],rbx
   140001dc1:	mov    QWORD PTR [rsp+0x10],rsi
   140001dc6:	push   rdi
   140001dc7:	sub    rsp,0x20
   140001dcb:	lea    rdx,[rip+0x18ad2]        # 0x14001a8a4
   140001dd2:	mov    rdi,rcx
   140001dd5:	call   0x1400040f8
   140001dda:	test   eax,eax
   140001ddc:	jne    0x140001de2
   140001dde:	add    rdi,0x2
   140001de2:	xor    ebx,ebx
   140001de4:	cmp    DWORD PTR [rip+0x2298a],ebx        # 0x140024774
   140001dea:	jle    0x140001e13
   140001dec:	xor    esi,esi
   140001dee:	mov    rdx,QWORD PTR [rip+0x22993]        # 0x140024788
   140001df5:	mov    rcx,rdi
   140001df8:	mov    rdx,QWORD PTR [rsi+rdx*1]
   140001dfc:	call   0x14000a880
   140001e01:	test   eax,eax
   140001e03:	je     0x140001e26
   140001e05:	inc    ebx
   140001e07:	add    rsi,0x20
   140001e0b:	cmp    ebx,DWORD PTR [rip+0x22963]        # 0x140024774
   140001e11:	jl     0x140001dee
   140001e13:	or     eax,0xffffffff
   140001e16:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e1b:	mov    rsi,QWORD PTR [rsp+0x38]
   140001e20:	add    rsp,0x20
   140001e24:	pop    rdi
   140001e25:	ret    
   140001e26:	mov    eax,ebx
   140001e28:	jmp    0x140001e16
   140001e2a:	int3   
   140001e2b:	int3   
   140001e2c:	mov    QWORD PTR [rsp+0x10],rbx
   140001e31:	mov    QWORD PTR [rsp+0x18],rsi
   140001e36:	push   rdi
   140001e37:	sub    rsp,0x20
   140001e3b:	lea    rcx,[rip+0x18a96]        # 0x14001a8d8
   140001e42:	call   0x140009da4
   140001e47:	lea    rcx,[rip+0x18a72]        # 0x14001a8c0
   140001e4e:	mov    rsi,rax
   140001e51:	call   0x140009da4
   140001e56:	mov    rbx,rax
   140001e59:	test   rsi,rsi
   140001e5c:	je     0x140001e91
   140001e5e:	lea    r8,[rsp+0x30]
   140001e63:	mov    rdx,rax
   140001e66:	mov    rcx,rsi
   140001e69:	call   0x140006bd0
   140001e6e:	mov    rdi,rax
   140001e71:	test   rax,rax
   140001e74:	je     0x140001ea3
   140001e76:	call   0x140006280
   140001e7b:	mov    edx,DWORD PTR [rsp+0x30]
   140001e7f:	mov    rcx,rdi
   140001e82:	call   0x1400061f8
   140001e87:	mov    rcx,rdi
   140001e8a:	call   0x140004084
   140001e8f:	jmp    0x140001ea3
   140001e91:	test   rax,rax
   140001e94:	je     0x140001eea
   140001e96:	call   0x140006280
   140001e9b:	mov    rcx,rbx
   140001e9e:	call   0x140006240
   140001ea3:	mov    rdx,rsi
   140001ea6:	mov    rcx,rbx
   140001ea9:	call   0x1400062b0
   140001eae:	lea    rcx,[rip+0x189f3]        # 0x14001a8a8
   140001eb5:	call   0x140004d34
   140001eba:	lea    rcx,[rip+0x189ff]        # 0x14001a8c0
   140001ec1:	call   0x140004d34
   140001ec6:	lea    rcx,[rip+0x18a0b]        # 0x14001a8d8
   140001ecd:	call   0x140004d34
   140001ed2:	mov    rcx,QWORD PTR [rip+0x228a7]        # 0x140024780
   140001ed9:	call   0x140004084
   140001ede:	mov    rcx,QWORD PTR [rip+0x22893]        # 0x140024778
   140001ee5:	call   0x140004084
   140001eea:	mov    rbx,QWORD PTR [rsp+0x38]
   140001eef:	mov    rsi,QWORD PTR [rsp+0x40]
   140001ef4:	add    rsp,0x20
   140001ef8:	pop    rdi
   140001ef9:	ret    
   140001efa:	int3   
   140001efb:	int3   
   140001efc:	mov    rax,QWORD PTR [rip+0x22855]        # 0x140024758
   140001f03:	ret    
   140001f04:	mov    rax,QWORD PTR [rip+0x2283d]        # 0x140024748
   140001f0b:	ret    
   140001f0c:	mov    eax,DWORD PTR [rip+0x2285e]        # 0x140024770
   140001f12:	ret    
   140001f13:	int3   
   140001f14:	mov    rax,rsp
   140001f17:	mov    QWORD PTR [rax+0x8],rcx
   140001f1b:	mov    QWORD PTR [rax+0x10],rdx
   140001f1f:	mov    QWORD PTR [rax+0x18],r8
   140001f23:	mov    QWORD PTR [rax+0x20],r9
   140001f27:	push   rbx
   140001f28:	sub    rsp,0x20
   140001f2c:	lea    rbx,[rax+0x10]
   140001f30:	call   0x14000abc8
   140001f35:	mov    rdx,QWORD PTR [rsp+0x30]
   140001f3a:	lea    rcx,[rax+0x60]
   140001f3e:	mov    r8,rbx
   140001f41:	call   0x14000aba4
   140001f46:	call   0x14000abc8
   140001f4b:	lea    rdx,[rip+0x18ad2]        # 0x14001aa24
   140001f52:	lea    rcx,[rax+0x60]
   140001f56:	call   0x14000a930
   140001f5b:	add    rsp,0x20
   140001f5f:	pop    rbx
   140001f60:	ret    
   140001f61:	int3   
   140001f62:	int3   
   140001f63:	int3   
   140001f64:	rex push rbp
   140001f66:	push   rbx
   140001f67:	push   rsi
   140001f68:	push   rdi
   140001f69:	push   r12
   140001f6b:	push   r13
   140001f6d:	push   r14
   140001f6f:	push   r15
   140001f71:	mov    rbp,rsp
   140001f74:	sub    rsp,0x58
   140001f78:	mov    eax,DWORD PTR [rcx]
   140001f7a:	movsxd r14,DWORD PTR [rcx+0x10]
   140001f7e:	mov    r15,QWORD PTR [rcx+0x18]
   140001f82:	mov    r13,QWORD PTR [rcx+0x20]
   140001f86:	mov    DWORD PTR [rbp+0x48],eax
   140001f89:	mov    rax,QWORD PTR [rcx+0x8]
   140001f8d:	mov    QWORD PTR [rbp-0x38],rax
   140001f91:	mov    rax,QWORD PTR [rcx+0x28]
   140001f95:	xor    edi,edi
   140001f97:	mov    QWORD PTR [rbp-0x20],rax
   140001f9b:	mov    rax,QWORD PTR [rcx+0x30]
   140001f9f:	mov    DWORD PTR [rbp+0x50],r14d
   140001fa3:	mov    QWORD PTR [rbp+0x60],rdi
   140001fa7:	mov    QWORD PTR [rbp+0x58],rdi
   140001fab:	mov    QWORD PTR [rbp-0x18],rax
   140001faf:	call   0x140004eb4
   140001fb4:	call   0x1400042a0
   140001fb9:	lea    r8d,[rdi+0x18]
   140001fbd:	lea    rcx,[rbp-0x28]
   140001fc1:	xor    edx,edx
   140001fc3:	mov    QWORD PTR [rbp-0x30],rax
   140001fc7:	call   0x14000a560
   140001fcc:	mov    eax,DWORD PTR [rip+0x2275e]        # 0x140024730
   140001fd2:	mov    DWORD PTR [rbp-0x28],0x10002
   140001fd9:	mov    DWORD PTR [rbp-0x24],eax
   140001fdc:	mov    rax,QWORD PTR [rip+0x2275d]        # 0x140024740
   140001fe3:	mov    BYTE PTR [rbp-0x18],dil
   140001fe7:	mov    QWORD PTR [rbp-0x20],rax
   140001feb:	call   0x1400040f0
   140001ff0:	lea    esi,[rdi+0x1]
   140001ff3:	test   al,al
   140001ff5:	je     0x14000207b
   140001ffb:	lea    rcx,[rip+0x18556]        # 0x14001a558
   140002002:	call   0x140009c3c
   140002007:	mov    edx,DWORD PTR [rbp-0x28]
   14000200a:	lea    rcx,[rip+0x1852f]        # 0x14001a540
   140002011:	call   0x140009c3c
   140002016:	cmp    BYTE PTR [rbp-0x18],dil
   14000201a:	lea    rax,[rip+0x1850f]        # 0x14001a530
   140002021:	lea    rdx,[rip+0x184f8]        # 0x14001a520
   140002028:	lea    rcx,[rip+0x184d1]        # 0x14001a500
   14000202f:	cmovne rdx,rax
   140002033:	call   0x140009c3c
   140002038:	mov    edx,DWORD PTR [rbp-0x24]
   14000203b:	lea    rcx,[rip+0x184a6]        # 0x14001a4e8
   140002042:	call   0x140009c3c
   140002047:	cmp    DWORD PTR [rip+0x226e3],edi        # 0x140024730
   14000204d:	mov    r12d,edi
   140002050:	jle    0x14000207b
   140002052:	mov    ebx,edi
   140002054:	mov    r8,QWORD PTR [rbp-0x20]
   140002058:	lea    rcx,[rip+0x18471]        # 0x14001a4d0
   14000205f:	mov    edx,r12d
   140002062:	mov    r8,QWORD PTR [rbx+r8*1]
   140002066:	call   0x140009c3c
   14000206b:	add    r12d,esi
   14000206e:	add    rbx,0x10
   140002072:	cmp    r12d,DWORD PTR [rip+0x226b7]        # 0x140024730
   140002079:	jl     0x140002054
   14000207b:	lea    r8,[rbp-0x28]
   14000207f:	lea    rdx,[rbp+0x58]
   140002083:	lea    rcx,[rbp+0x60]
   140002087:	call   r13
   14000208a:	mov    rcx,QWORD PTR [rip+0x226af]        # 0x140024740
   140002091:	mov    ebx,eax
   140002093:	call   0x140004084
   140002098:	test   ebx,ebx
   14000209a:	je     0x1400020b0
   14000209c:	lea    rcx,[rip+0x18a8d]        # 0x14001ab30
   1400020a3:	call   0x140004370
   1400020a8:	mov    ecx,esi
   1400020aa:	call   0x140009bdc
   1400020af:	int3   
   1400020b0:	mov    rdx,QWORD PTR [rip+0x226b1]        # 0x140024768
   1400020b7:	test   rdx,rdx
   1400020ba:	je     0x1400020d8
   1400020bc:	mov    rcx,QWORD PTR [rbp+0x58]
   1400020c0:	call   0x140001990
   1400020c5:	mov    rcx,QWORD PTR [rbp+0x58]
   1400020c9:	mov    rax,QWORD PTR [rcx]
   1400020cc:	call   QWORD PTR [rax+0x78]
   1400020cf:	test   rax,rax
   1400020d2:	jne    0x1400023b5
   1400020d8:	cmp    BYTE PTR [rip+0x22681],dil        # 0x140024760
   1400020df:	mov    r12b,BYTE PTR [rip+0x2267b]        # 0x140024761
   1400020e6:	jne    0x1400020f1
   1400020e8:	test   r12b,r12b
   1400020eb:	je     0x1400021a0
   1400020f1:	mov    rbx,QWORD PTR [rbp+0x58]
   1400020f5:	lea    rdx,[rip+0x1867c]        # 0x14001a778
   1400020fc:	mov    rcx,rbx
   1400020ff:	call   0x140004d94
   140002104:	mov    r13,rax
   140002107:	test   rax,rax
   14000210a:	jne    0x14000211a
   14000210c:	lea    rcx,[rip+0x1845d]        # 0x14001a570
   140002113:	call   0x140004370
   140002118:	jmp    0x14000215c
   14000211a:	mov    rax,QWORD PTR [rbx]
   14000211d:	lea    rcx,[rip+0x1864c]        # 0x14001a770
   140002124:	lea    r8,[rip+0x1863d]        # 0x14001a768
   14000212b:	cmp    r12b,sil
   14000212e:	lea    r9,[rip+0x1862f]        # 0x14001a764
   140002135:	mov    rdx,r13
   140002138:	cmove  r8,rcx
   14000213c:	mov    rcx,rbx
   14000213f:	call   QWORD PTR [rax+0x388]
   140002145:	mov    r8,rax
   140002148:	test   rax,rax
   14000214b:	je     0x14000210c
   14000214d:	mov    rax,QWORD PTR [rbx]
   140002150:	mov    rdx,r13
   140002153:	mov    rcx,rbx
   140002156:	call   QWORD PTR [rax+0x468]
   14000215c:	mov    rcx,QWORD PTR [rbp+0x58]
   140002160:	mov    rax,QWORD PTR [rcx]
   140002163:	call   QWORD PTR [rax+0x78]
   140002166:	test   rax,rax
   140002169:	je     0x140002197
   14000216b:	mov    rcx,QWORD PTR [rbp+0x58]
   14000216f:	call   0x1400045a0
   140002174:	mov    rcx,QWORD PTR [rbp+0x60]
   140002178:	mov    rax,QWORD PTR [rcx]
   14000217b:	call   QWORD PTR [rax+0x28]
   14000217e:	test   eax,eax
   140002180:	je     0x140002190
   140002182:	lea    rcx,[rip+0x18927]        # 0x14001aab0
   140002189:	call   0x140004370
   14000218e:	mov    edi,esi
   140002190:	mov    esi,edi
   140002192:	jmp    0x1400023d8
   140002197:	cmp    BYTE PTR [rip+0x225c2],dil        # 0x140024760
   14000219e:	jne    0x140002174
   1400021a0:	mov    dl,BYTE PTR [rip+0x225bd]        # 0x140024763
   1400021a6:	test   dl,dl
   1400021a8:	jne    0x14000239d
   1400021ae:	cmp    BYTE PTR [rip+0x225ad],dil        # 0x140024762
   1400021b5:	jne    0x14000239d
   1400021bb:	test   r15,r15
   1400021be:	je     0x14000239d
   1400021c4:	test   r14d,r14d
   1400021c7:	je     0x14000239d
   1400021cd:	cmp    DWORD PTR [rip+0x225a1],edi        # 0x140024774
   1400021d3:	mov    rcx,QWORD PTR [rip+0x225ae]        # 0x140024788
   1400021da:	mov    r12d,edi
   1400021dd:	jle    0x140002206
   1400021df:	mov    rbx,rdi
   1400021e2:	mov    rcx,QWORD PTR [rbx+rcx*1]
   1400021e6:	call   0x140004084
   1400021eb:	mov    rcx,QWORD PTR [rip+0x22596]        # 0x140024788
   1400021f2:	add    r12d,esi
   1400021f5:	mov    QWORD PTR [rbx+rcx*1],rdi
   1400021f9:	add    rbx,0x20
   1400021fd:	cmp    r12d,DWORD PTR [rip+0x22570]        # 0x140024774
   140002204:	jl     0x1400021e2
   140002206:	call   0x140004084
   14000220b:	call   0x1400040f0
   140002210:	test   al,al
   140002212:	je     0x140002234
   140002214:	call   0x1400042a0
   140002219:	sub    rax,QWORD PTR [rbp-0x30]
   14000221d:	mov    rcx,rax
   140002220:	call   0x1400042ec
   140002225:	lea    rcx,[rip+0x1885c]        # 0x14001aa88
   14000222c:	mov    rdx,rax
   14000222f:	call   0x14000408c
   140002234:	call   0x1400040f0
   140002239:	test   al,al
   14000223b:	je     0x14000229b
   14000223d:	lea    rax,[rip+0x20de4]        # 0x140023028
   140002244:	lea    rcx,[rip+0x1882d]        # 0x14001aa78
   14000224b:	mov    r8,r15
   14000224e:	mov    rdx,QWORD PTR [rax+r14*8]
   140002252:	call   0x140009c3c
   140002257:	movsxd r13,DWORD PTR [rbp+0x48]
   14000225b:	lea    rcx,[rip+0x187fe]        # 0x14001aa60
   140002262:	mov    edx,r13d
   140002265:	call   0x140009c3c
   14000226a:	mov    r12d,edi
   14000226d:	mov    rbx,rdi
   140002270:	test   r13,r13
   140002273:	jle    0x14000229b
   140002275:	mov    r14,QWORD PTR [rbp-0x38]
   140002279:	mov    r8,QWORD PTR [r14+rbx*8]
   14000227d:	lea    rcx,[rip+0x187c4]        # 0x14001aa48
   140002284:	mov    edx,r12d
   140002287:	call   0x140009c3c
   14000228c:	add    rbx,rsi
   14000228f:	add    r12d,esi
   140002292:	cmp    rbx,r13
   140002295:	jl     0x140002279
   140002297:	mov    r14d,DWORD PTR [rbp+0x50]
   14000229b:	mov    rcx,QWORD PTR [rbp+0x58]
   14000229f:	mov    r8,r15
   1400022a2:	mov    edx,r14d
   1400022a5:	call   0x140001618
   1400022aa:	mov    rcx,QWORD PTR [rbp+0x58]
   1400022ae:	mov    rbx,rax
   1400022b1:	mov    rax,QWORD PTR [rcx]
   1400022b4:	call   QWORD PTR [rax+0x78]
   1400022b7:	test   rax,rax
   1400022ba:	jne    0x1400023b5
   1400022c0:	test   rbx,rbx
   1400022c3:	jne    0x1400022d6
   1400022c5:	lea    rcx,[rip+0x182a4]        # 0x14001a570
   1400022cc:	call   0x140004370
   1400022d1:	jmp    0x1400023be
   1400022d6:	mov    r8,QWORD PTR [rbp+0x60]
   1400022da:	mov    rcx,QWORD PTR [rbp+0x58]
   1400022de:	mov    rdx,rbx
   1400022e1:	call   0x140004eb4
   1400022e6:	mov    rcx,QWORD PTR [rbp+0x58]
   1400022ea:	lea    r9,[rip+0x1873f]        # 0x14001aa30
   1400022f1:	mov    rax,QWORD PTR [rcx]
   1400022f4:	lea    r8,[rip+0x1872d]        # 0x14001aa28
   1400022fb:	mov    rdx,rbx
   1400022fe:	call   QWORD PTR [rax+0x388]
   140002304:	mov    rcx,QWORD PTR [rbp+0x58]
   140002308:	mov    r13,rax
   14000230b:	mov    rax,QWORD PTR [rcx]
   14000230e:	call   QWORD PTR [rax+0x78]
   140002311:	test   rax,rax
   140002314:	jne    0x1400023b5
   14000231a:	test   r13,r13
   14000231d:	je     0x1400022c5
   14000231f:	mov    r8d,DWORD PTR [rbp+0x48]
   140002323:	mov    rdx,QWORD PTR [rbp-0x38]
   140002327:	mov    rcx,QWORD PTR [rbp+0x58]
   14000232b:	call   0x140004ebc
   140002330:	mov    rcx,QWORD PTR [rbp+0x58]
   140002334:	mov    r12,rax
   140002337:	mov    rax,QWORD PTR [rcx]
   14000233a:	call   QWORD PTR [rax+0x78]
   14000233d:	test   rax,rax
   140002340:	jne    0x1400023b5
   140002342:	test   r12,r12
   140002345:	je     0x1400022c5
   14000234b:	mov    rcx,QWORD PTR [rbp+0x58]
   14000234f:	mov    r9,r12
   140002352:	mov    r8,r13
   140002355:	mov    rax,QWORD PTR [rcx]
   140002358:	mov    rdx,rbx
   14000235b:	call   QWORD PTR [rax+0x468]
   140002361:	mov    rcx,QWORD PTR [rbp+0x58]
   140002365:	mov    rax,QWORD PTR [rcx]
   140002368:	call   QWORD PTR [rax+0x78]
   14000236b:	mov    rcx,QWORD PTR [rbp+0x60]
   14000236f:	mov    ebx,edi
   140002371:	test   rax,rax
   140002374:	mov    rax,QWORD PTR [rcx]
   140002377:	setne  bl
   14000237a:	call   QWORD PTR [rax+0x28]
   14000237d:	test   eax,eax
   14000237f:	je     0x14000238f
   140002381:	lea    rcx,[rip+0x18728]        # 0x14001aab0
   140002388:	call   0x140004370
   14000238d:	mov    ebx,esi
   14000238f:	mov    rcx,QWORD PTR [rbp+0x60]
   140002393:	mov    rax,QWORD PTR [rcx]
   140002396:	call   QWORD PTR [rax+0x18]
   140002399:	mov    eax,ebx
   14000239b:	jmp    0x14000240e
   14000239d:	mov    rcx,QWORD PTR [rbp+0x58]
   1400023a1:	call   0x140001a70
   1400023a6:	mov    rcx,QWORD PTR [rbp+0x58]
   1400023aa:	mov    rax,QWORD PTR [rcx]
   1400023ad:	call   QWORD PTR [rax+0x78]
   1400023b0:	test   rax,rax
   1400023b3:	je     0x1400023e6
   1400023b5:	mov    rcx,QWORD PTR [rbp+0x58]
   1400023b9:	call   0x1400045a0
   1400023be:	mov    rcx,QWORD PTR [rbp+0x60]
   1400023c2:	mov    rax,QWORD PTR [rcx]
   1400023c5:	call   QWORD PTR [rax+0x28]
   1400023c8:	test   eax,eax
   1400023ca:	je     0x1400023d8
   1400023cc:	lea    rcx,[rip+0x186dd]        # 0x14001aab0
   1400023d3:	call   0x140004370
   1400023d8:	mov    rcx,QWORD PTR [rbp+0x60]
   1400023dc:	mov    rax,QWORD PTR [rcx]
   1400023df:	call   QWORD PTR [rax+0x18]
   1400023e2:	mov    eax,esi
   1400023e4:	jmp    0x14000240e
   1400023e6:	mov    rcx,QWORD PTR [rbp+0x60]
   1400023ea:	mov    rax,QWORD PTR [rcx]
   1400023ed:	call   QWORD PTR [rax+0x28]
   1400023f0:	test   eax,eax
   1400023f2:	je     0x140002402
   1400023f4:	lea    rcx,[rip+0x186b5]        # 0x14001aab0
   1400023fb:	call   0x140004370
   140002400:	mov    edi,esi
   140002402:	mov    rcx,QWORD PTR [rbp+0x60]
   140002406:	mov    rdx,QWORD PTR [rcx]
   140002409:	call   QWORD PTR [rdx+0x18]
   14000240c:	mov    eax,edi
   14000240e:	add    rsp,0x58
   140002412:	pop    r15
   140002414:	pop    r14
   140002416:	pop    r13
   140002418:	pop    r12
   14000241a:	pop    rdi
   14000241b:	pop    rsi
   14000241c:	pop    rbx
   14000241d:	pop    rbp
   14000241e:	ret    
   14000241f:	int3   
   140002420:	mov    QWORD PTR [rsp+0x18],rbx
   140002425:	mov    QWORD PTR [rsp+0x10],rdx
   14000242a:	mov    QWORD PTR [rsp+0x8],rcx
   14000242f:	push   rbp
   140002430:	push   rsi
   140002431:	push   rdi
   140002432:	push   r12
   140002434:	push   r13
   140002436:	push   r14
   140002438:	push   r15
   14000243a:	sub    rsp,0x30
   14000243e:	mov    rbx,rcx
   140002441:	lea    rcx,[rip+0x18858]        # 0x14001aca0
   140002448:	mov    r14b,r8b
   14000244b:	or     r12d,0xffffffff
   14000244f:	call   0x140009da4
   140002454:	movsxd rbx,DWORD PTR [rbx]
   140002457:	lea    r9d,[rbx+0x1]
   14000245b:	mov    rdi,rax
   14000245e:	movsxd rcx,r9d
   140002461:	shl    rcx,0x3
   140002465:	call   0x140004000
   14000246a:	mov    r11,QWORD PTR [rsp+0x78]
   14000246f:	lea    esi,[r12+0x2]
   140002474:	mov    rdx,QWORD PTR [r11]
   140002477:	mov    r8,rax
   14000247a:	mov    QWORD PTR [rsp+0x20],rax
   14000247f:	mov    rcx,QWORD PTR [rdx]
   140002482:	mov    r15,rbx
   140002485:	mov    QWORD PTR [rax],rcx
   140002488:	mov    eax,esi
   14000248a:	mov    DWORD PTR [rsp+0x88],eax
   140002491:	mov    r13d,eax
   140002494:	cmp    rax,rbx
   140002497:	jge    0x1400025e5
   14000249d:	mov    rdx,QWORD PTR [rip+0x222e4]        # 0x140024788
   1400024a4:	lea    rbp,[r8+0x8]
   1400024a8:	cmp    BYTE PTR [rip+0x222b5],0x0        # 0x140024764
   1400024af:	mov    rax,QWORD PTR [r11]
   1400024b2:	mov    rbx,QWORD PTR [rax+r13*8]
   1400024b6:	je     0x1400024cc
   1400024b8:	cmp    BYTE PTR [rbx],0x2d
   1400024bb:	je     0x140002503
   1400024bd:	mov    QWORD PTR [rbp+0x0],rbx
   1400024c1:	inc    esi
   1400024c3:	add    rbp,0x8
   1400024c7:	jmp    0x14000256b
   1400024cc:	lea    rdx,[rip+0x187bd]        # 0x14001ac90
   1400024d3:	mov    rcx,rbx
   1400024d6:	call   0x14000a880
   1400024db:	test   eax,eax
   1400024dd:	je     0x1400025a1
   1400024e3:	lea    rdx,[rip+0x187a2]        # 0x14001ac8c
   1400024ea:	mov    rcx,rbx
   1400024ed:	call   0x14000a880
   1400024f2:	test   eax,eax
   1400024f4:	je     0x1400025a1
   1400024fa:	cmp    BYTE PTR [rbx],0x2d
   1400024fd:	jne    0x1400025d9
   140002503:	mov    rcx,rbx
   140002506:	call   0x140001dbc
   14000250b:	test   eax,eax
   14000250d:	js     0x14000252f
   14000250f:	mov    rdx,QWORD PTR [rip+0x22272]        # 0x140024788
   140002516:	mov    r12d,eax
   140002519:	cdqe   
   14000251b:	shl    rax,0x5
   14000251f:	mov    rdi,QWORD PTR [rax+rdx*1]
   140002523:	mov    rax,QWORD PTR [rsp+0x70]
   140002528:	inc    rdi
   14000252b:	dec    DWORD PTR [rax]
   14000252d:	jmp    0x140002566
   14000252f:	lea    rdx,[rip+0x1874a]        # 0x14001ac80
   140002536:	mov    rcx,rbx
   140002539:	call   0x1400040f8
   14000253e:	test   eax,eax
   140002540:	je     0x140002589
   140002542:	lea    rdx,[rip+0x18727]        # 0x14001ac70
   140002549:	mov    rcx,rbx
   14000254c:	call   0x1400040f8
   140002551:	test   eax,eax
   140002553:	je     0x140002589
   140002555:	mov    QWORD PTR [rbp+0x0],rbx
   140002559:	inc    esi
   14000255b:	add    rbp,0x8
   14000255f:	mov    rdx,QWORD PTR [rip+0x22222]        # 0x140024788
   140002566:	mov    r11,QWORD PTR [rsp+0x78]
   14000256b:	mov    eax,DWORD PTR [rsp+0x88]
   140002572:	inc    r13
   140002575:	inc    eax
   140002577:	mov    DWORD PTR [rsp+0x88],eax
   14000257e:	cmp    r13,r15
   140002581:	jl     0x1400024a8
   140002587:	jmp    0x1400025ec
   140002589:	cmp    BYTE PTR [rbx+0x1],0x58
   14000258d:	mov    edi,0xc
   140002592:	lea    eax,[rdi-0x2]
   140002595:	cmove  edi,eax
   140002598:	add    rdi,rbx
   14000259b:	or     r12d,0xffffffff
   14000259f:	jmp    0x14000255f
   1400025a1:	inc    DWORD PTR [rsp+0x88]
   1400025a8:	inc    r13
   1400025ab:	mov    QWORD PTR [rbp+0x0],rbx
   1400025af:	inc    esi
   1400025b1:	add    rbp,0x8
   1400025b5:	cmp    r13,r15
   1400025b8:	jge    0x14000255f
   1400025ba:	mov    r11,QWORD PTR [rsp+0x78]
   1400025bf:	mov    rdx,QWORD PTR [rip+0x221c2]        # 0x140024788
   1400025c6:	inc    esi
   1400025c8:	mov    rax,QWORD PTR [r11]
   1400025cb:	mov    rcx,QWORD PTR [rax+r13*8]
   1400025cf:	mov    QWORD PTR [rbp+0x0],rcx
   1400025d3:	add    rbp,0x8
   1400025d7:	jmp    0x14000256b
   1400025d9:	mov    eax,DWORD PTR [rsp+0x88]
   1400025e0:	mov    r11,QWORD PTR [rsp+0x78]
   1400025e5:	mov    rdx,QWORD PTR [rip+0x2219c]        # 0x140024788
   1400025ec:	mov    r10,QWORD PTR [rsp+0x20]
   1400025f1:	movsxd r8,eax
   1400025f4:	mov    ebp,0x1
   1400025f9:	movsxd rax,esi
   1400025fc:	cmp    r8,r15
   1400025ff:	jge    0x140002623
   140002601:	lea    r9,[r10+rax*8]
   140002605:	mov    eax,r15d
   140002608:	sub    eax,r8d
   14000260b:	add    esi,eax
   14000260d:	mov    rax,QWORD PTR [r11]
   140002610:	mov    rcx,QWORD PTR [rax+r8*8]
   140002614:	add    r8,rbp
   140002617:	mov    QWORD PTR [r9],rcx
   14000261a:	add    r9,0x8
   14000261e:	cmp    r8,r15
   140002621:	jl     0x14000260d
   140002623:	movsxd rax,esi
   140002626:	and    QWORD PTR [r10+rax*8],0x0
   14000262b:	mov    rax,QWORD PTR [rsp+0x70]
   140002630:	mov    QWORD PTR [r11],r10
   140002633:	mov    DWORD PTR [rax],esi
   140002635:	test   rdi,rdi
   140002638:	jne    0x140002675
   14000263a:	mov    rbx,QWORD PTR [rdx]
   14000263d:	add    rbx,rbp
   140002640:	cmp    DWORD PTR [rdx+0x8],0x4
   140002644:	jne    0x14000265e
   140002646:	call   0x1400045d0
   14000264b:	cmp    al,bpl
   14000264e:	jne    0x14000265e
   140002650:	mov    rax,QWORD PTR [rip+0x22131]        # 0x140024788
   140002657:	mov    rbx,QWORD PTR [rax+0x18]
   14000265b:	add    rbx,rbp
   14000265e:	lea    rcx,[rip+0x185fb]        # 0x14001ac60
   140002665:	mov    rdx,rbx
   140002668:	call   0x14000408c
   14000266d:	mov    rax,rbx
   140002670:	jmp    0x14000277f
   140002675:	test   r12d,r12d
   140002678:	js     0x14000277c
   14000267e:	movsxd rax,r12d
   140002681:	xor    ebx,ebx
   140002683:	shl    rax,0x5
   140002687:	jmp    0x1400026bf
   140002689:	movsxd rcx,r12d
   14000268c:	shl    rcx,0x5
   140002690:	mov    rcx,QWORD PTR [rcx+rdx*1+0x10]
   140002695:	call   0x140001dbc
   14000269a:	cmp    ebx,DWORD PTR [rip+0x220d4]        # 0x140024774
   1400026a0:	jg     0x140002717
   1400026a2:	test   eax,eax
   1400026a4:	js     0x1400026eb
   1400026a6:	mov    rdx,QWORD PTR [rip+0x220db]        # 0x140024788
   1400026ad:	mov    r12d,eax
   1400026b0:	cdqe   
   1400026b2:	shl    rax,0x5
   1400026b6:	mov    rdi,QWORD PTR [rax+rdx*1]
   1400026ba:	add    rdi,rbp
   1400026bd:	add    ebx,ebp
   1400026bf:	cmp    DWORD PTR [rax+rdx*1+0x8],ebp
   1400026c3:	je     0x140002689
   1400026c5:	movsxd rcx,r12d
   1400026c8:	shl    rcx,0x5
   1400026cc:	mov    r8d,DWORD PTR [rcx+rdx*1+0x8]
   1400026d1:	sub    r8d,0x2
   1400026d5:	je     0x140002755
   1400026d7:	dec    r8d
   1400026da:	je     0x140002739
   1400026dc:	cmp    r8d,0x2
   1400026e0:	je     0x140002776
   1400026e6:	jmp    0x14000277c
   1400026eb:	test   r14b,r14b
   1400026ee:	jne    0x140002730
   1400026f0:	mov    rdx,QWORD PTR [rip+0x22091]        # 0x140024788
   1400026f7:	movsxd rax,r12d
   1400026fa:	lea    rcx,[rip+0x18537]        # 0x14001ac38
   140002701:	shl    rax,0x5
   140002705:	mov    rdx,QWORD PTR [rax+rdx*1+0x10]
   14000270a:	call   0x140004370
   14000270f:	mov    ecx,ebp
   140002711:	call   0x140009bdc
   140002716:	int3   
   140002717:	test   r14b,r14b
   14000271a:	jne    0x140002730
   14000271c:	lea    rcx,[rip+0x184dd]        # 0x14001ac00
   140002723:	call   0x140004370
   140002728:	mov    ecx,ebp
   14000272a:	call   0x140009bdc
   14000272f:	int3   
   140002730:	lea    rax,[rip+0x184bd]        # 0x14001abf4
   140002737:	jmp    0x14000277f
   140002739:	test   r14b,r14b
   14000273c:	jne    0x140002730
   14000273e:	lea    rcx,[rip+0x18493]        # 0x14001abd8
   140002745:	mov    rdx,rdi
   140002748:	call   0x140004370
   14000274d:	mov    ecx,ebp
   14000274f:	call   0x140009bdc
   140002754:	int3   
   140002755:	test   r14b,r14b
   140002758:	jne    0x140002776
   14000275a:	mov    r8,QWORD PTR [rdx]
   14000275d:	lea    rcx,[rip+0x1843c]        # 0x14001aba0
   140002764:	mov    rdx,rdi
   140002767:	add    r8,rbp
   14000276a:	call   0x140004370
   14000276f:	mov    rdx,QWORD PTR [rip+0x22012]        # 0x140024788
   140002776:	mov    rdi,QWORD PTR [rdx]
   140002779:	add    rdi,rbp
   14000277c:	mov    rax,rdi
   14000277f:	mov    rbx,QWORD PTR [rsp+0x80]
   140002787:	add    rsp,0x30
   14000278b:	pop    r15
   14000278d:	pop    r14
   14000278f:	pop    r13
   140002791:	pop    r12
   140002793:	pop    rdi
   140002794:	pop    rsi
   140002795:	pop    rbp
   140002796:	ret    
   140002797:	int3   
   140002798:	mov    QWORD PTR [rsp+0x20],rbx
   14000279d:	push   rbp
   14000279e:	push   rsi
   14000279f:	push   rdi
   1400027a0:	push   r12
   1400027a2:	push   r13
   1400027a4:	push   r14
   1400027a6:	push   r15
   1400027a8:	lea    rbp,[rsp-0xa0]
   1400027b0:	sub    rsp,0x1a0
   1400027b7:	mov    rax,QWORD PTR [rip+0x20902]        # 0x1400230c0
   1400027be:	xor    rax,rsp
   1400027c1:	mov    QWORD PTR [rbp+0x90],rax
   1400027c8:	movzx  eax,WORD PTR [rip+0x18759]        # 0x14001af28
   1400027cf:	movups xmm0,XMMWORD PTR [rip+0x18742]        # 0x14001af18
   1400027d6:	or     DWORD PTR [rsp+0x20],0xffffffff
   1400027db:	mov    WORD PTR [rbp-0x80],ax
   1400027df:	mov    al,BYTE PTR [rip+0x18745]        # 0x14001af2a
   1400027e5:	mov    edi,ecx
   1400027e7:	movaps XMMWORD PTR [rsp+0x70],xmm0
   1400027ec:	mov    r12,r8
   1400027ef:	mov    QWORD PTR [rsp+0x60],r8
   1400027f4:	mov    rsi,rdx
   1400027f7:	xor    ebx,ebx
   1400027f9:	lea    rcx,[rbp-0x7d]
   1400027fd:	xor    edx,edx
   1400027ff:	and    DWORD PTR [rsp+0x24],ebx
   140002803:	mov    r8d,0x109
   140002809:	mov    BYTE PTR [rbp-0x7e],al
   14000280c:	mov    QWORD PTR [rsp+0x50],rbx
   140002811:	xor    r15d,r15d
   140002814:	call   0x14000a560
   140002819:	lea    rcx,[rip+0x18088]        # 0x14001a8a8
   140002820:	xor    r14d,r14d
   140002823:	mov    QWORD PTR [rsp+0x58],rbx
   140002828:	call   0x140009da4
   14000282d:	test   rax,rax
   140002830:	je     0x14000284b
   140002832:	cmp    BYTE PTR [rax],bl
   140002834:	je     0x140002c50
   14000283a:	mov    rcx,rax
   14000283d:	call   0x140004058
   140002842:	mov    QWORD PTR [r12],rax
   140002846:	jmp    0x140002c50
   14000284b:	lea    eax,[rdi+0x1]
   14000284e:	movsxd rcx,eax
   140002851:	shl    rcx,0x3
   140002855:	call   0x140004000
   14000285a:	mov    rcx,QWORD PTR [rsi]
   14000285d:	add    rsi,0x8
   140002861:	mov    QWORD PTR [rax],rcx
   140002864:	mov    rbx,QWORD PTR [rsi]
   140002867:	mov    r13,rax
   14000286a:	mov    QWORD PTR [rsp+0x68],rax
   14000286f:	lea    r12,[rax+0x8]
   140002873:	mov    eax,0x1
   140002878:	sub    edi,eax
   14000287a:	test   rbx,rbx
   14000287d:	je     0x1400029bc
   140002883:	mov    r13d,DWORD PTR [rsp+0x24]
   140002888:	cmp    BYTE PTR [rbx],0x2d
   14000288b:	jne    0x1400029b2
   140002891:	lea    rdx,[rip+0x18670]        # 0x14001af08
   140002898:	mov    rcx,rbx
   14000289b:	call   0x1400040f8
   1400028a0:	test   eax,eax
   1400028a2:	jne    0x1400028af
   1400028a4:	add    rbx,0x9
   1400028a8:	mov    QWORD PTR [rsp+0x50],rbx
   1400028ad:	jmp    0x1400028e7
   1400028af:	lea    rdx,[rip+0x1863a]        # 0x14001aef0
   1400028b6:	mov    rcx,rbx
   1400028b9:	call   0x14000a880
   1400028be:	test   eax,eax
   1400028c0:	jne    0x1400028d0
   1400028c2:	mov    eax,0x1
   1400028c7:	mov    DWORD PTR [rsp+0x20],eax
   1400028cb:	jmp    0x1400029a0
   1400028d0:	lea    rdx,[rip+0x18601]        # 0x14001aed8
   1400028d7:	mov    rcx,rbx
   1400028da:	call   0x14000a880
   1400028df:	test   eax,eax
   1400028e1:	jne    0x1400028f1
   1400028e3:	and    DWORD PTR [rsp+0x20],eax
   1400028e7:	mov    eax,0x1
   1400028ec:	jmp    0x1400029a0
   1400028f1:	lea    rdx,[rip+0x185d4]        # 0x14001aecc
   1400028f8:	mov    rcx,rbx
   1400028fb:	call   0x14000a880
   140002900:	lea    rdx,[rip+0x18389]        # 0x14001ac90
   140002907:	mov    rcx,rbx
   14000290a:	test   eax,eax
   14000290c:	mov    eax,0x1
   140002911:	cmove  r13d,eax
   140002915:	call   0x14000a880
   14000291a:	test   eax,eax
   14000291c:	je     0x140002931
   14000291e:	lea    rdx,[rip+0x18367]        # 0x14001ac8c
   140002925:	mov    rcx,rbx
   140002928:	call   0x14000a880
   14000292d:	test   eax,eax
   14000292f:	jne    0x140002947
   140002931:	cmp    edi,0x2
   140002934:	jl     0x140002947
   140002936:	mov    QWORD PTR [r12],rbx
   14000293a:	dec    edi
   14000293c:	add    r12,0x8
   140002940:	add    rsi,0x8
   140002944:	mov    rbx,QWORD PTR [rsi]
   140002947:	lea    rdx,[rip+0x18562]        # 0x14001aeb0
   14000294e:	mov    rcx,rbx
   140002951:	call   0x14000a880
   140002956:	test   eax,eax
   140002958:	jne    0x140002964
   14000295a:	mov    eax,0x1
   14000295f:	mov    r15d,eax
   140002962:	jmp    0x140002998
   140002964:	lea    rdx,[rip+0x1852d]        # 0x14001ae98
   14000296b:	mov    rcx,rbx
   14000296e:	call   0x1400040f8
   140002973:	test   eax,eax
   140002975:	jne    0x14000297c
   140002977:	xor    r15d,r15d
   14000297a:	jmp    0x140002993
   14000297c:	lea    rdx,[rip+0x18505]        # 0x14001ae88
   140002983:	mov    rcx,rbx
   140002986:	call   0x1400040f8
   14000298b:	test   eax,eax
   14000298d:	jne    0x140002993
   14000298f:	lea    r14,[rbx+0x8]
   140002993:	mov    eax,0x1
   140002998:	mov    QWORD PTR [r12],rbx
   14000299c:	add    r12,0x8
   1400029a0:	add    rsi,0x8
   1400029a4:	sub    edi,eax
   1400029a6:	mov    rbx,QWORD PTR [rsi]
   1400029a9:	test   rbx,rbx
   1400029ac:	jne    0x140002888
   1400029b2:	mov    DWORD PTR [rsp+0x24],r13d
   1400029b7:	mov    r13,QWORD PTR [rsp+0x68]
   1400029bc:	test   edi,edi
   1400029be:	jg     0x1400029c4
   1400029c0:	xor    ebx,ebx
   1400029c2:	jmp    0x1400029e5
   1400029c4:	mov    rbx,QWORD PTR [rsi]
   1400029c7:	sub    edi,eax
   1400029c9:	mov    QWORD PTR [r12],rbx
   1400029cd:	jmp    0x1400029dd
   1400029cf:	sub    edi,eax
   1400029d1:	mov    rax,QWORD PTR [rsi]
   1400029d4:	mov    QWORD PTR [r12],rax
   1400029d8:	mov    eax,0x1
   1400029dd:	add    r12,0x8
   1400029e1:	add    rsi,0x8
   1400029e5:	test   edi,edi
   1400029e7:	jg     0x1400029cf
   1400029e9:	xor    esi,esi
   1400029eb:	mov    QWORD PTR [r12],rsi
   1400029ef:	cmp    DWORD PTR [rsp+0x24],esi
   1400029f3:	je     0x140002a50
   1400029f5:	test   rbx,rbx
   1400029f8:	je     0x140002a50
   1400029fa:	lea    rdx,[rsp+0x28]
   1400029ff:	mov    rcx,rbx
   140002a02:	call   0x140006a68
   140002a07:	test   eax,eax
   140002a09:	je     0x140002a31
   140002a0b:	mov    rdx,rbx
   140002a0e:	lea    rcx,[rip+0x1844b]        # 0x14001ae60
   140002a15:	cmp    eax,0xffffffff
   140002a18:	je     0x140002a21
   140002a1a:	lea    rcx,[rip+0x18417]        # 0x14001ae38
   140002a21:	call   0x140004370
   140002a26:	mov    ecx,0x1
   140002a2b:	call   0x140009bdc
   140002a30:	int3   
   140002a31:	test   r15d,r15d
   140002a34:	jne    0x140002a64
   140002a36:	test   r14,r14
   140002a39:	jne    0x140002a6e
   140002a3b:	mov    r14,QWORD PTR [rsp+0x48]
   140002a40:	test   r14,r14
   140002a43:	je     0x140002b09
   140002a49:	mov    QWORD PTR [rsp+0x58],rbx
   140002a4e:	jmp    0x140002a64
   140002a50:	mov    QWORD PTR [rsp+0x28],rsi
   140002a55:	mov    QWORD PTR [rsp+0x30],rsi
   140002a5a:	mov    QWORD PTR [rsp+0x38],rsi
   140002a5f:	mov    BYTE PTR [rsp+0x40],sil
   140002a64:	test   r14,r14
   140002a67:	je     0x140002ab4
   140002a69:	test   r15d,r15d
   140002a6c:	jne    0x140002ab4
   140002a6e:	mov    rcx,r14
   140002a71:	call   0x140009fd0
   140002a76:	lea    rcx,[rip+0x183a3]        # 0x14001ae20
   140002a7d:	mov    rbx,rax
   140002a80:	call   0x140009fd0
   140002a85:	lea    rcx,[rbx+rax*1+0x1]
   140002a8a:	call   0x140004000
   140002a8f:	lea    rdx,[rip+0x1838a]        # 0x14001ae20
   140002a96:	mov    rcx,rax
   140002a99:	mov    rbx,rax
   140002a9c:	call   0x14000a780
   140002aa1:	mov    rdx,r14
   140002aa4:	mov    rcx,rbx
   140002aa7:	call   0x14000a6e0
   140002aac:	mov    rcx,rbx
   140002aaf:	call   0x14000c318
   140002ab4:	mov    rdi,QWORD PTR [rsp+0x58]
   140002ab9:	test   rdi,rdi
   140002abc:	je     0x140002b09
   140002abe:	test   r15d,r15d
   140002ac1:	jne    0x140002b09
   140002ac3:	mov    rcx,rdi
   140002ac6:	call   0x140009fd0
   140002acb:	lea    rcx,[rip+0x18336]        # 0x14001ae08
   140002ad2:	mov    rbx,rax
   140002ad5:	call   0x140009fd0
   140002ada:	lea    rcx,[rbx+rax*1+0x1]
   140002adf:	call   0x140004000
   140002ae4:	lea    rdx,[rip+0x1831d]        # 0x14001ae08
   140002aeb:	mov    rcx,rax
   140002aee:	mov    rbx,rax
   140002af1:	call   0x14000a780
   140002af6:	mov    rdx,rdi
   140002af9:	mov    rcx,rbx
   140002afc:	call   0x14000a6e0
   140002b01:	mov    rcx,rbx
   140002b04:	call   0x14000c318
   140002b09:	mov    rax,QWORD PTR [rsp+0x50]
   140002b0e:	movzx  ecx,BYTE PTR [rsp+0x40]
   140002b13:	mov    rdx,QWORD PTR [rsp+0x38]
   140002b18:	mov    r8d,DWORD PTR [rsp+0x20]
   140002b1d:	test   rax,rax
   140002b20:	cmovne rdx,rax
   140002b24:	cmp    r8d,0xffffffff
   140002b28:	movzx  eax,r8b
   140002b2c:	cmovne ecx,eax
   140002b2f:	mov    QWORD PTR [rsp+0x38],rdx
   140002b34:	mov    BYTE PTR [rsp+0x40],cl
   140002b38:	mov    rcx,QWORD PTR [rsp+0x30]
   140002b3d:	test   rcx,rcx
   140002b40:	je     0x140002b54
   140002b42:	call   0x140004058
   140002b47:	mov    rcx,QWORD PTR [rsp+0x60]
   140002b4c:	mov    rdx,QWORD PTR [rsp+0x38]
   140002b51:	mov    QWORD PTR [rcx],rax
   140002b54:	test   rdx,rdx
   140002b57:	je     0x140002c43
   140002b5d:	mov    rcx,rdx
   140002b60:	call   0x140007024
   140002b65:	test   eax,eax
   140002b67:	jne    0x140002b85
   140002b69:	mov    rdx,QWORD PTR [rsp+0x38]
   140002b6e:	lea    rcx,[rip+0x1825b]        # 0x14001add0
   140002b75:	call   0x140004370
   140002b7a:	mov    ecx,0x1
   140002b7f:	call   0x140009bdc
   140002b84:	int3   
   140002b85:	lea    rcx,[rsp+0x28]
   140002b8a:	call   0x1400045e4
   140002b8f:	mov    rcx,QWORD PTR [rsp+0x38]
   140002b94:	lea    rdx,[rip+0x18229]        # 0x14001adc4
   140002b9b:	test   rax,rax
   140002b9e:	mov    r9,rdx
   140002ba1:	mov    rbx,rax
   140002ba4:	cmovne r9,rax
   140002ba8:	cmp    BYTE PTR [rsp+0x40],sil
   140002bad:	lea    rax,[rip+0x18208]        # 0x14001adbc
   140002bb4:	lea    r8,[rip+0x181f9]        # 0x14001adb4
   140002bbb:	cmovne r8,rax
   140002bbf:	test   rcx,rcx
   140002bc2:	cmovne rdx,rcx
   140002bc6:	lea    rcx,[rip+0x181ab]        # 0x14001ad78
   140002bcd:	call   0x14000408c
   140002bd2:	test   rbx,rbx
   140002bd5:	jne    0x140002c06
   140002bd7:	mov    rdx,QWORD PTR [rsp+0x38]
   140002bdc:	mov    rcx,QWORD PTR [rip+0x21b55]        # 0x140024738
   140002be3:	call   0x140006f0c
   140002be8:	test   eax,eax
   140002bea:	jne    0x140002c43
   140002bec:	mov    rdx,QWORD PTR [rsp+0x38]
   140002bf1:	lea    rcx,[rip+0x18148]        # 0x14001ad40
   140002bf8:	call   0x140004370
   140002bfd:	lea    ecx,[rbx+0x1]
   140002c00:	call   0x140009bdc
   140002c05:	int3   
   140002c06:	mov    rcx,QWORD PTR [rsp+0x30]
   140002c0b:	test   rcx,rcx
   140002c0e:	je     0x140002c2e
   140002c10:	call   0x140009fd0
   140002c15:	mov    ecx,0x104
   140002c1a:	cmp    rax,rcx
   140002c1d:	ja     0x140002c7a
   140002c1f:	mov    rdx,QWORD PTR [rsp+0x30]
   140002c24:	lea    rcx,[rsp+0x70]
   140002c29:	call   0x14000a6e0
   140002c2e:	lea    rcx,[rsp+0x70]
   140002c33:	call   0x14000c318
   140002c38:	mov    rdx,r13
   140002c3b:	mov    rcx,rbx
   140002c3e:	call   0x140004870
   140002c43:	call   0x140006c48
   140002c48:	mov    rcx,r13
   140002c4b:	call   0x140004084
   140002c50:	mov    rcx,QWORD PTR [rbp+0x90]
   140002c57:	xor    rcx,rsp
   140002c5a:	call   0x14000a850
   140002c5f:	mov    rbx,QWORD PTR [rsp+0x1f8]
   140002c67:	add    rsp,0x1a0
   140002c6e:	pop    r15
   140002c70:	pop    r14
   140002c72:	pop    r13
   140002c74:	pop    r12
   140002c76:	pop    rdi
   140002c77:	pop    rsi
   140002c78:	pop    rbp
   140002c79:	ret    
   140002c7a:	mov    edx,ecx
   140002c7c:	lea    rcx,[rip+0x1803d]        # 0x14001acc0
   140002c83:	call   0x140004370
   140002c88:	mov    ecx,0x1
   140002c8d:	call   0x140009bdc
   140002c92:	int3   
   140002c93:	int3   
   140002c94:	mov    QWORD PTR [rsp+0x10],rbx
   140002c99:	mov    QWORD PTR [rsp+0x18],r8
   140002c9e:	mov    QWORD PTR [rsp+0x8],rcx
   140002ca3:	push   rbp
   140002ca4:	push   rsi
   140002ca5:	push   rdi
   140002ca6:	push   r12
   140002ca8:	push   r13
   140002caa:	push   r14
   140002cac:	push   r15
   140002cae:	sub    rsp,0x20
   140002cb2:	mov    rbp,QWORD PTR [rdx]
   140002cb5:	mov    r13,QWORD PTR [rsp+0x80]
   140002cbd:	mov    esi,DWORD PTR [rcx]
   140002cbf:	xor    r12d,r12d
   140002cc2:	mov    r14,r9
   140002cc5:	mov    r15,rdx
   140002cc8:	and    DWORD PTR [r13+0x0],r12d
   140002ccc:	mov    rdi,QWORD PTR [rbp+0x0]
   140002cd0:	lea    ebx,[r12+0x1]
   140002cd5:	test   rdi,rdi
   140002cd8:	je     0x14000314d
   140002cde:	cmp    BYTE PTR [rdi],0x2d
   140002ce1:	jne    0x140003143
   140002ce7:	lea    rdx,[rip+0x17fa2]        # 0x14001ac90
   140002cee:	mov    rcx,rdi
   140002cf1:	add    rbp,0x8
   140002cf5:	sub    esi,ebx
   140002cf7:	call   0x14000a880
   140002cfc:	test   eax,eax
   140002cfe:	je     0x14000311c
   140002d04:	lea    rdx,[rip+0x17f81]        # 0x14001ac8c
   140002d0b:	mov    rcx,rdi
   140002d0e:	call   0x14000a880
   140002d13:	test   eax,eax
   140002d15:	je     0x14000311c
   140002d1b:	lea    rdx,[rip+0x181aa]        # 0x14001aecc
   140002d22:	mov    rcx,rdi
   140002d25:	call   0x14000a880
   140002d2a:	test   eax,eax
   140002d2c:	jne    0x140002d3f
   140002d2e:	cmp    esi,ebx
   140002d30:	jl     0x140003168
   140002d36:	lea    r12d,[rax+0x2]
   140002d3a:	jmp    0x140003136
   140002d3f:	lea    rdx,[rip+0x18476]        # 0x14001b1bc
   140002d46:	mov    rcx,rdi
   140002d49:	call   0x14000a880
   140002d4e:	test   eax,eax
   140002d50:	je     0x1400031b1
   140002d56:	lea    rdx,[rip+0x1845b]        # 0x14001b1b8
   140002d5d:	mov    rcx,rdi
   140002d60:	call   0x14000a880
   140002d65:	test   eax,eax
   140002d67:	je     0x1400031b1
   140002d6d:	lea    rdx,[rip+0x18440]        # 0x14001b1b4
   140002d74:	mov    rcx,rdi
   140002d77:	call   0x14000a880
   140002d7c:	test   eax,eax
   140002d7e:	je     0x1400031b1
   140002d84:	lea    rdx,[rip+0x1841d]        # 0x14001b1a8
   140002d8b:	mov    rcx,rdi
   140002d8e:	call   0x14000a880
   140002d93:	test   eax,eax
   140002d95:	je     0x1400031a9
   140002d9b:	lea    rdx,[rip+0x183f6]        # 0x14001b198
   140002da2:	mov    rcx,rdi
   140002da5:	call   0x14000a880
   140002daa:	test   eax,eax
   140002dac:	jne    0x140002db9
   140002dae:	mov    BYTE PTR [rip+0x219ad],bl        # 0x140024761
   140002db4:	jmp    0x140003136
   140002db9:	lea    rdx,[rip+0x183d0]        # 0x14001b190
   140002dc0:	mov    rcx,rdi
   140002dc3:	call   0x14000a880
   140002dc8:	test   eax,eax
   140002dca:	je     0x1400031a1
   140002dd0:	lea    rdx,[rip+0x183a9]        # 0x14001b180
   140002dd7:	mov    rcx,rdi
   140002dda:	call   0x14000a880
   140002ddf:	test   eax,eax
   140002de1:	je     0x140003113
   140002de7:	lea    rdx,[rip+0x18382]        # 0x14001b170
   140002dee:	mov    rcx,rdi
   140002df1:	call   0x1400040f8
   140002df6:	test   eax,eax
   140002df8:	je     0x140003113
   140002dfe:	lea    rdx,[rip+0x18363]        # 0x14001b168
   140002e05:	mov    rcx,rdi
   140002e08:	call   0x14000a880
   140002e0d:	test   eax,eax
   140002e0f:	jne    0x140002e1d
   140002e11:	lea    rcx,[rip+0x18330]        # 0x14001b148
   140002e18:	jmp    0x140002f31
   140002e1d:	lea    rdx,[rip+0x18314]        # 0x14001b138
   140002e24:	mov    rcx,rdi
   140002e27:	call   0x14000a880
   140002e2c:	test   eax,eax
   140002e2e:	je     0x140003183
   140002e34:	lea    rdx,[rip+0x182ed]        # 0x14001b128
   140002e3b:	mov    rcx,rdi
   140002e3e:	call   0x14000a880
   140002e43:	test   eax,eax
   140002e45:	jne    0x140002e53
   140002e47:	lea    rcx,[rip+0x182ca]        # 0x14001b118
   140002e4e:	jmp    0x140002f31
   140002e53:	lea    rdx,[rip+0x182b6]        # 0x14001b110
   140002e5a:	mov    rcx,rdi
   140002e5d:	call   0x14000a880
   140002e62:	test   eax,eax
   140002e64:	jne    0x140002e72
   140002e66:	lea    rcx,[rip+0x1829f]        # 0x14001b10c
   140002e6d:	jmp    0x140002f31
   140002e72:	lea    rdx,[rip+0x1828f]        # 0x14001b108
   140002e79:	mov    rcx,rdi
   140002e7c:	call   0x14000a880
   140002e81:	test   eax,eax
   140002e83:	jne    0x140002e91
   140002e85:	lea    rcx,[rip+0x18274]        # 0x14001b100
   140002e8c:	jmp    0x140002f31
   140002e91:	lea    rdx,[rip+0x18260]        # 0x14001b0f8
   140002e98:	mov    rcx,rdi
   140002e9b:	call   0x14000a880
   140002ea0:	test   eax,eax
   140002ea2:	jne    0x140002eb0
   140002ea4:	lea    rcx,[rip+0x18245]        # 0x14001b0f0
   140002eab:	jmp    0x140002f31
   140002eb0:	lea    rdx,[rip+0x18229]        # 0x14001b0e0
   140002eb7:	mov    rcx,rdi
   140002eba:	call   0x14000a880
   140002ebf:	test   eax,eax
   140002ec1:	jne    0x140002ecc
   140002ec3:	lea    rcx,[rip+0x18206]        # 0x14001b0d0
   140002eca:	jmp    0x140002f31
   140002ecc:	lea    rdx,[rip+0x181ed]        # 0x14001b0c0
   140002ed3:	mov    rcx,rdi
   140002ed6:	call   0x14000a880
   140002edb:	test   eax,eax
   140002edd:	jne    0x140002ee8
   140002edf:	lea    rcx,[rip+0x181ca]        # 0x14001b0b0
   140002ee6:	jmp    0x140002f31
   140002ee8:	lea    rdx,[rip+0x181b9]        # 0x14001b0a8
   140002eef:	mov    rcx,rdi
   140002ef2:	call   0x14000a880
   140002ef7:	test   eax,eax
   140002ef9:	je     0x140002edf
   140002efb:	lea    rdx,[rip+0x18196]        # 0x14001b098
   140002f02:	mov    rcx,rdi
   140002f05:	call   0x14000a880
   140002f0a:	test   eax,eax
   140002f0c:	jne    0x140002f17
   140002f0e:	lea    rcx,[rip+0x18173]        # 0x14001b088
   140002f15:	jmp    0x140002f31
   140002f17:	lea    rdx,[rip+0x1815a]        # 0x14001b078
   140002f1e:	mov    rcx,rdi
   140002f21:	call   0x14000a880
   140002f26:	test   eax,eax
   140002f28:	jne    0x140002f3d
   140002f2a:	lea    rcx,[rip+0x18137]        # 0x14001b068
   140002f31:	xor    edx,edx
   140002f33:	call   0x14000121c
   140002f38:	jmp    0x140003136
   140002f3d:	lea    rdx,[rip+0x18118]        # 0x14001b05c
   140002f44:	mov    rcx,rdi
   140002f47:	call   0x1400040f8
   140002f4c:	mov    rcx,rdi
   140002f4f:	test   eax,eax
   140002f51:	jne    0x140002f8e
   140002f53:	call   0x140009fd0
   140002f58:	lea    rcx,[rax+0x32]
   140002f5c:	call   0x140004000
   140002f61:	cmp    BYTE PTR [rdi+0x5],0x0
   140002f65:	mov    rbx,rax
   140002f68:	mov    rcx,rax
   140002f6b:	je     0x140002f7d
   140002f6d:	lea    r8,[rdi+0x6]
   140002f71:	lea    rdx,[rip+0x180c8]        # 0x14001b040
   140002f78:	jmp    0x1400030fd
   140002f7d:	lea    rdx,[rip+0x18094]        # 0x14001b018
   140002f84:	call   0x14000a4a4
   140002f89:	jmp    0x140003102
   140002f8e:	lea    rdx,[rip+0x1807b]        # 0x14001b010
   140002f95:	call   0x1400040f8
   140002f9a:	test   eax,eax
   140002f9c:	je     0x1400030db
   140002fa2:	lea    rdx,[rip+0x1805f]        # 0x14001b008
   140002fa9:	mov    rcx,rdi
   140002fac:	call   0x1400040f8
   140002fb1:	test   eax,eax
   140002fb3:	je     0x1400030db
   140002fb9:	lea    rdx,[rip+0x18044]        # 0x14001b004
   140002fc0:	mov    rcx,rdi
   140002fc3:	call   0x1400040f8
   140002fc8:	test   eax,eax
   140002fca:	je     0x1400030db
   140002fd0:	lea    rdx,[rip+0x18029]        # 0x14001b000
   140002fd7:	mov    rcx,rdi
   140002fda:	call   0x1400040f8
   140002fdf:	test   eax,eax
   140002fe1:	je     0x1400030db
   140002fe7:	lea    rdx,[rip+0x18002]        # 0x14001aff0
   140002fee:	mov    rcx,rdi
   140002ff1:	call   0x14000a880
   140002ff6:	test   eax,eax
   140002ff8:	je     0x1400030ca
   140002ffe:	lea    rdx,[rip+0x17fe7]        # 0x14001afec
   140003005:	mov    rcx,rdi
   140003008:	call   0x14000a880
   14000300d:	test   eax,eax
   14000300f:	je     0x1400030ca
   140003015:	lea    rdx,[rip+0x17fc4]        # 0x14001afe0
   14000301c:	mov    rcx,rdi
   14000301f:	call   0x14000a880
   140003024:	test   eax,eax
   140003026:	je     0x1400030ca
   14000302c:	lea    rdx,[rip+0x17ed5]        # 0x14001af08
   140003033:	mov    rcx,rdi
   140003036:	call   0x1400040f8
   14000303b:	test   eax,eax
   14000303d:	je     0x140003136
   140003043:	lea    rdx,[rip+0x17e8e]        # 0x14001aed8
   14000304a:	mov    rcx,rdi
   14000304d:	call   0x14000a880
   140003052:	test   eax,eax
   140003054:	je     0x140003136
   14000305a:	lea    rdx,[rip+0x17e8f]        # 0x14001aef0
   140003061:	mov    rcx,rdi
   140003064:	call   0x14000a880
   140003069:	test   eax,eax
   14000306b:	je     0x140003136
   140003071:	lea    rdx,[rip+0x17e10]        # 0x14001ae88
   140003078:	mov    rcx,rdi
   14000307b:	call   0x1400040f8
   140003080:	test   eax,eax
   140003082:	je     0x140003136
   140003088:	mov    rcx,rdi
   14000308b:	call   0x140004eb8
   140003090:	test   al,al
   140003092:	jne    0x140003136
   140003098:	lea    rdx,[rip+0x1797d]        # 0x14001aa1c
   14000309f:	mov    rcx,rdi
   1400030a2:	call   0x1400040f8
   1400030a7:	test   eax,eax
   1400030a9:	je     0x140003136
   1400030af:	lea    rdx,[rip+0x1795e]        # 0x14001aa14
   1400030b6:	mov    rcx,rdi
   1400030b9:	call   0x1400040f8
   1400030be:	test   eax,eax
   1400030c0:	je     0x140003136
   1400030c2:	mov    rcx,rdi
   1400030c5:	jmp    0x140002f31
   1400030ca:	lea    rcx,[rip+0x17edf]        # 0x14001afb0
   1400030d1:	mov    rdx,rdi
   1400030d4:	call   0x140004370
   1400030d9:	jmp    0x140003136
   1400030db:	mov    rcx,rdi
   1400030de:	call   0x140009fd0
   1400030e3:	lea    rcx,[rax+0x6]
   1400030e7:	call   0x140004000
   1400030ec:	lea    r8,[rdi+0x1]
   1400030f0:	lea    rdx,[rip+0x17ead]        # 0x14001afa4
   1400030f7:	mov    rbx,rax
   1400030fa:	mov    rcx,rax
   1400030fd:	call   0x14000a4a4
   140003102:	xor    edx,edx
   140003104:	mov    rcx,rbx
   140003107:	call   0x14000121c
   14000310c:	mov    ebx,0x1
   140003111:	jmp    0x140003136
   140003113:	mov    QWORD PTR [rip+0x2164e],rdi        # 0x140024768
   14000311a:	jmp    0x140003136
   14000311c:	cmp    esi,ebx
   14000311e:	jl     0x1400031b9
   140003124:	mov    rcx,QWORD PTR [rbp+0x0]
   140003128:	call   0x14000138c
   14000312d:	add    rbp,0x8
   140003131:	sub    esi,ebx
   140003133:	mov    r12d,ebx
   140003136:	mov    rdi,QWORD PTR [rbp+0x0]
   14000313a:	test   rdi,rdi
   14000313d:	jne    0x140002cde
   140003143:	mov    r8,QWORD PTR [rsp+0x70]
   140003148:	mov    rcx,QWORD PTR [rsp+0x60]
   14000314d:	sub    esi,ebx
   14000314f:	js     0x14000315c
   140003151:	mov    rax,QWORD PTR [rbp+0x0]
   140003155:	add    rbp,0x8
   140003159:	mov    QWORD PTR [r14],rax
   14000315c:	cmp    QWORD PTR [r14],0x0
   140003160:	jne    0x1400031c2
   140003162:	mov    DWORD PTR [r13+0x0],ebx
   140003166:	jmp    0x1400031c9
   140003168:	lea    rcx,[rip+0x17e09]        # 0x14001af78
   14000316f:	mov    rdx,rdi
   140003172:	call   0x140004370
   140003177:	mov    BYTE PTR [rip+0x215e5],bl        # 0x140024762
   14000317d:	mov    DWORD PTR [r13+0x0],ebx
   140003181:	jmp    0x1400031d5
   140003183:	mov    r8,QWORD PTR [rip+0x215ae]        # 0x140024738
   14000318a:	mov    rdx,QWORD PTR [rip+0x215bf]        # 0x140024750
   140003191:	lea    rcx,[rip+0x17dc8]        # 0x14001af60
   140003198:	call   0x140001f14
   14000319d:	xor    al,al
   14000319f:	jmp    0x1400031d7
   1400031a1:	mov    BYTE PTR [rip+0x215bc],bl        # 0x140024763
   1400031a7:	jmp    0x1400031d5
   1400031a9:	mov    BYTE PTR [rip+0x215b1],bl        # 0x140024760
   1400031af:	jmp    0x1400031d5
   1400031b1:	mov    BYTE PTR [rip+0x215ab],bl        # 0x140024762
   1400031b7:	jmp    0x1400031d5
   1400031b9:	lea    rcx,[rip+0x17d70]        # 0x14001af30
   1400031c0:	jmp    0x14000316f
   1400031c2:	test   r12d,r12d
   1400031c5:	cmove  r12d,ebx
   1400031c9:	test   esi,esi
   1400031cb:	js     0x1400031d2
   1400031cd:	mov    DWORD PTR [rcx],esi
   1400031cf:	mov    QWORD PTR [r15],rbp
   1400031d2:	mov    DWORD PTR [r8],r12d
   1400031d5:	mov    al,bl
   1400031d7:	mov    rbx,QWORD PTR [rsp+0x68]
   1400031dc:	add    rsp,0x20
   1400031e0:	pop    r15
   1400031e2:	pop    r14
   1400031e4:	pop    r13
   1400031e6:	pop    r12
   1400031e8:	pop    rdi
   1400031e9:	pop    rsi
   1400031ea:	pop    rbp
   1400031eb:	ret    
   1400031ec:	mov    QWORD PTR [rsp+0x10],rbx
   1400031f1:	mov    QWORD PTR [rsp+0x18],rbp
   1400031f6:	mov    QWORD PTR [rsp+0x20],rsi
   1400031fb:	push   rdi
   1400031fc:	push   r12
   1400031fe:	push   r13
   140003200:	push   r14
   140003202:	push   r15
   140003204:	sub    rsp,0x20
   140003208:	movsxd r13,DWORD PTR [r8]
   14000320b:	mov    r15,QWORD PTR [r9]
   14000320e:	movsxd rbp,ecx
   140003211:	lea    ebx,[r13+rbp*1+0x0]
   140003216:	mov    rsi,r9
   140003219:	mov    rdi,r8
   14000321c:	lea    eax,[rbx+0x1]
   14000321f:	mov    r14,rdx
   140003222:	movsxd rcx,eax
   140003225:	shl    rcx,0x3
   140003229:	call   0x140004000
   14000322e:	mov    DWORD PTR [rdi],ebx
   140003230:	xor    ebx,ebx
   140003232:	mov    r12,rax
   140003235:	mov    QWORD PTR [rsi],rax
   140003238:	test   ebp,ebp
   14000323a:	jle    0x14000326d
   14000323c:	mov    rax,QWORD PTR [r14+rbx*8]
   140003240:	cmp    BYTE PTR [rax],0x2d
   140003243:	jne    0x140003265
   140003245:	cmp    BYTE PTR [rax+0x1],0x4a
   140003249:	jne    0x140003265
   14000324b:	lea    rcx,[rax+0x2]
   14000324f:	test   rcx,rcx
   140003252:	jne    0x140003258
   140003254:	xor    eax,eax
   140003256:	jmp    0x14000325d
   140003258:	call   0x140004058
   14000325d:	mov    QWORD PTR [r12],rax
   140003261:	add    r12,0x8
   140003265:	inc    rbx
   140003268:	cmp    rbx,rbp
   14000326b:	jl     0x14000323c
   14000326d:	xor    eax,eax
   14000326f:	test   r13,r13
   140003272:	jle    0x1400032a0
   140003274:	mov    rcx,QWORD PTR [r15+rax*8]
   140003278:	cmp    BYTE PTR [rcx],0x2d
   14000327b:	jne    0x140003298
   14000327d:	cmp    BYTE PTR [rcx+0x1],0x4a
   140003281:	jne    0x140003298
   140003283:	add    rcx,0x2
   140003287:	cmp    BYTE PTR [rcx],0x0
   14000328a:	je     0x14000334a
   140003290:	mov    QWORD PTR [r12],rcx
   140003294:	add    r12,0x8
   140003298:	inc    rax
   14000329b:	cmp    rax,r13
   14000329e:	jl     0x140003274
   1400032a0:	xor    ebx,ebx
   1400032a2:	test   ebp,ebp
   1400032a4:	jle    0x1400032ca
   1400032a6:	mov    rcx,QWORD PTR [r14+rbx*8]
   1400032aa:	cmp    BYTE PTR [rcx],0x2d
   1400032ad:	jne    0x1400032b5
   1400032af:	cmp    BYTE PTR [rcx+0x1],0x4a
   1400032b3:	je     0x1400032c2
   1400032b5:	call   0x140004058
   1400032ba:	mov    QWORD PTR [r12],rax
   1400032be:	add    r12,0x8
   1400032c2:	inc    rbx
   1400032c5:	cmp    rbx,rbp
   1400032c8:	jl     0x1400032a6
   1400032ca:	xor    esi,esi
   1400032cc:	xor    ebx,ebx
   1400032ce:	test   r13,r13
   1400032d1:	jle    0x14000337b
   1400032d7:	lea    rbp,[r15+0x8]
   1400032db:	mov    r14d,r13d
   1400032de:	mov    rdi,QWORD PTR [r15+rbx*8]
   1400032e2:	cmp    BYTE PTR [rdi],0x2d
   1400032e5:	jne    0x140003361
   1400032e7:	mov    al,BYTE PTR [rdi+0x1]
   1400032ea:	cmp    al,0x4a
   1400032ec:	je     0x140003369
   1400032ee:	cmp    BYTE PTR [rip+0x21470],0x0        # 0x140024765
   1400032f5:	je     0x140003361
   1400032f7:	cmp    al,0x63
   1400032f9:	jne    0x140003361
   1400032fb:	lea    rdx,[rip+0x1798a]        # 0x14001ac8c
   140003302:	mov    rcx,rdi
   140003305:	call   0x14000a880
   14000330a:	test   eax,eax
   14000330c:	je     0x140003321
   14000330e:	lea    rdx,[rip+0x1797b]        # 0x14001ac90
   140003315:	mov    rcx,rdi
   140003318:	call   0x14000a880
   14000331d:	test   eax,eax
   14000331f:	jne    0x140003361
   140003321:	lea    eax,[r14-0x1]
   140003325:	cmp    esi,eax
   140003327:	jge    0x140003361
   140003329:	mov    QWORD PTR [r12],rdi
   14000332d:	mov    rcx,QWORD PTR [rbp+0x0]
   140003331:	call   0x140006170
   140003336:	add    r12,0x10
   14000333a:	inc    esi
   14000333c:	mov    QWORD PTR [r12-0x8],rax
   140003341:	inc    rbx
   140003344:	add    rbp,0x8
   140003348:	jmp    0x140003369
   14000334a:	lea    rcx,[rip+0x17e77]        # 0x14001b1c8
   140003351:	call   0x140004370
   140003356:	mov    ecx,0x1
   14000335b:	call   0x140009bdc
   140003360:	int3   
   140003361:	mov    QWORD PTR [r12],rdi
   140003365:	add    r12,0x8
   140003369:	inc    rbx
   14000336c:	inc    esi
   14000336e:	add    rbp,0x8
   140003372:	cmp    rbx,r13
   140003375:	jl     0x1400032de
   14000337b:	and    QWORD PTR [r12],0x0
   140003380:	mov    rbx,QWORD PTR [rsp+0x58]
   140003385:	mov    rbp,QWORD PTR [rsp+0x60]
   14000338a:	mov    rsi,QWORD PTR [rsp+0x68]
   14000338f:	add    rsp,0x20
   140003393:	pop    r15
   140003395:	pop    r14
   140003397:	pop    r13
   140003399:	pop    r12
   14000339b:	pop    rdi
   14000339c:	ret    
   14000339d:	int3   
   14000339e:	int3   
   14000339f:	int3   
   1400033a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400033a5:	mov    QWORD PTR [rsp+0x18],rbp
   1400033aa:	mov    QWORD PTR [rsp+0x20],rsi
   1400033af:	push   rdi
   1400033b0:	push   r12
   1400033b2:	push   r13
   1400033b4:	push   r14
   1400033b6:	push   r15
   1400033b8:	sub    rsp,0x170
   1400033bf:	mov    rax,QWORD PTR [rip+0x1fcfa]        # 0x1400230c0
   1400033c6:	xor    rax,rsp
   1400033c9:	mov    QWORD PTR [rsp+0x160],rax
   1400033d1:	xor    ebp,ebp
   1400033d3:	xor    r13d,r13d
   1400033d6:	mov    bl,dl
   1400033d8:	and    QWORD PTR [rsp+0x28],rbp
   1400033dd:	mov    rsi,rcx
   1400033e0:	xor    r12d,r12d
   1400033e3:	mov    QWORD PTR [rsp+0x30],r13
   1400033e8:	call   0x1400040f0
   1400033ed:	test   al,al
   1400033ef:	je     0x1400033f8
   1400033f1:	call   0x1400042a0
   1400033f6:	jmp    0x1400033fd
   1400033f8:	mov    rax,QWORD PTR [rsp+0x20]
   1400033fd:	lea    rdx,[rip+0x17fd8]        # 0x14001b3dc
   140003404:	mov    rcx,rsi
   140003407:	mov    QWORD PTR [rsp+0x20],rax
   14000340c:	call   0x14000b248
   140003411:	mov    r15,rax
   140003414:	test   rax,rax
   140003417:	jne    0x14000343e
   140003419:	test   bl,bl
   14000341b:	jne    0x140003436
   14000341d:	lea    rcx,[rip+0x17f9c]        # 0x14001b3c0
   140003424:	mov    rdx,rsi
   140003427:	call   0x140004370
   14000342c:	lea    ecx,[r15+0x1]
   140003430:	call   0x140009bdc
   140003435:	int3   
   140003436:	or     eax,0xffffffff
   140003439:	jmp    0x14000378c
   14000343e:	lea    rcx,[rsp+0x40]
   140003443:	mov    r8,rax
   140003446:	mov    edx,0x118
   14000344b:	call   0x14000b008
   140003450:	test   rax,rax
   140003453:	je     0x140003752
   140003459:	xor    r14d,r14d
   14000345c:	mov    al,BYTE PTR [rsp+0x40]
   140003460:	or     edi,0xffffffff
   140003463:	inc    r12d
   140003466:	cmp    al,0x23
   140003468:	je     0x140003737
   14000346e:	cmp    al,0x2d
   140003470:	je     0x140003484
   140003472:	lea    rcx,[rip+0x17f17]        # 0x14001b390
   140003479:	mov    r8,rsi
   14000347c:	mov    edx,r12d
   14000347f:	call   0x140004370
   140003484:	mov    eax,DWORD PTR [rip+0x21306]        # 0x140024790
   14000348a:	cmp    ebp,eax
   14000348c:	jl     0x1400034f4
   14000348e:	test   eax,eax
   140003490:	lea    r13d,[rax+rax*1]
   140003494:	mov    ecx,0xa
   140003499:	cmove  r13d,ecx
   14000349d:	cmp    r13d,ebp
   1400034a0:	cmovle r13d,ebp
   1400034a4:	movsxd rcx,r13d
   1400034a7:	shl    rcx,0x5
   1400034ab:	call   0x140004000
   1400034b0:	mov    rcx,QWORD PTR [rip+0x212d1]        # 0x140024788
   1400034b7:	mov    rbx,rax
   1400034ba:	test   rcx,rcx
   1400034bd:	je     0x1400034dc
   1400034bf:	movsxd r8,DWORD PTR [rip+0x212ca]        # 0x140024790
   1400034c6:	mov    rdx,rcx
   1400034c9:	mov    rcx,rax
   1400034cc:	shl    r8,0x5
   1400034d0:	call   0x14000a170
   1400034d5:	mov    rcx,QWORD PTR [rip+0x212ac]        # 0x140024788
   1400034dc:	call   0x140004084
   1400034e1:	mov    DWORD PTR [rip+0x212a8],r13d        # 0x140024790
   1400034e8:	mov    r13,QWORD PTR [rsp+0x30]
   1400034ed:	mov    QWORD PTR [rip+0x21294],rbx        # 0x140024788
   1400034f4:	lea    rcx,[rsp+0x40]
   1400034f9:	call   0x140009fd0
   1400034fe:	mov    rdx,QWORD PTR [rip+0x1fb3b]        # 0x140023040
   140003505:	lea    rcx,[rsp+0x40]
   14000350a:	mov    BYTE PTR [rax+rcx*1-0x1],0x0
   14000350f:	lea    rcx,[rsp+0x40]
   140003514:	call   0x14000af74
   140003519:	lea    rbx,[rsp+rax*1+0x40]
   14000351e:	cmp    BYTE PTR [rbx],0x0
   140003521:	je     0x140003540
   140003523:	mov    rdx,QWORD PTR [rip+0x1fb16]        # 0x140023040
   14000352a:	mov    BYTE PTR [rbx],0x0
   14000352d:	inc    rbx
   140003530:	mov    rcx,rbx
   140003533:	call   0x14000aec0
   140003538:	add    rbx,rax
   14000353b:	cmp    BYTE PTR [rbx],0x0
   14000353e:	jne    0x140003557
   140003540:	lea    rcx,[rip+0x17e19]        # 0x14001b360
   140003547:	mov    edx,r12d
   14000354a:	mov    r8,rsi
   14000354d:	call   0x140004370
   140003552:	jmp    0x1400036a2
   140003557:	lea    rdx,[rip+0x17df6]        # 0x14001b354
   14000355e:	mov    rcx,rbx
   140003561:	call   0x1400040f8
   140003566:	test   eax,eax
   140003568:	je     0x1400036a0
   14000356e:	lea    rdx,[rip+0x17dd3]        # 0x14001b348
   140003575:	mov    rcx,rbx
   140003578:	call   0x1400040f8
   14000357d:	mov    rcx,rbx
   140003580:	test   eax,eax
   140003582:	jne    0x1400035d4
   140003584:	mov    rdx,QWORD PTR [rip+0x1fab5]        # 0x140023040
   14000358b:	call   0x14000af74
   140003590:	add    rbx,rax
   140003593:	cmp    BYTE PTR [rbx],0x0
   140003596:	je     0x140003540
   140003598:	mov    rdx,QWORD PTR [rip+0x1faa1]        # 0x140023040
   14000359f:	mov    rcx,rbx
   1400035a2:	call   0x14000aec0
   1400035a7:	add    rbx,rax
   1400035aa:	cmp    BYTE PTR [rbx],0x0
   1400035ad:	je     0x140003540
   1400035af:	mov    rdx,QWORD PTR [rip+0x1fa8a]        # 0x140023040
   1400035b6:	mov    rcx,rbx
   1400035b9:	mov    r13,rbx
   1400035bc:	mov    QWORD PTR [rsp+0x30],rbx
   1400035c1:	call   0x14000af74
   1400035c6:	mov    edi,0x1
   1400035cb:	mov    BYTE PTR [rax+rbx*1],0x0
   1400035cf:	jmp    0x1400036a2
   1400035d4:	lea    rdx,[rip+0x17d65]        # 0x14001b340
   1400035db:	call   0x1400040f8
   1400035e0:	test   eax,eax
   1400035e2:	jne    0x1400035ec
   1400035e4:	lea    edi,[rax+0x2]
   1400035e7:	jmp    0x1400036a2
   1400035ec:	lea    rdx,[rip+0x17d45]        # 0x14001b338
   1400035f3:	mov    rcx,rbx
   1400035f6:	call   0x1400040f8
   1400035fb:	test   eax,eax
   1400035fd:	jne    0x140003607
   1400035ff:	lea    edi,[rax+0x5]
   140003602:	jmp    0x1400036a2
   140003607:	lea    rdx,[rip+0x175e6]        # 0x14001abf4
   14000360e:	mov    rcx,rbx
   140003611:	call   0x1400040f8
   140003616:	test   eax,eax
   140003618:	jne    0x140003622
   14000361a:	lea    edi,[rax+0x3]
   14000361d:	jmp    0x1400036a2
   140003622:	lea    rdx,[rip+0x17cff]        # 0x14001b328
   140003629:	mov    rcx,rbx
   14000362c:	call   0x1400040f8
   140003631:	test   eax,eax
   140003633:	jne    0x14000368e
   140003635:	mov    rdx,QWORD PTR [rip+0x1fa04]        # 0x140023040
   14000363c:	mov    rcx,rbx
   14000363f:	call   0x14000af74
   140003644:	add    rbx,rax
   140003647:	cmp    BYTE PTR [rbx],0x0
   14000364a:	je     0x140003682
   14000364c:	mov    rdx,QWORD PTR [rip+0x1f9ed]        # 0x140023040
   140003653:	mov    rcx,rbx
   140003656:	call   0x14000aec0
   14000365b:	add    rbx,rax
   14000365e:	cmp    BYTE PTR [rbx],0x0
   140003661:	je     0x140003682
   140003663:	mov    rdx,QWORD PTR [rip+0x1f9d6]        # 0x140023040
   14000366a:	mov    rcx,rbx
   14000366d:	mov    QWORD PTR [rsp+0x28],rbx
   140003672:	call   0x14000af74
   140003677:	mov    edi,0x4
   14000367c:	mov    BYTE PTR [rax+rbx*1],0x0
   140003680:	jmp    0x1400036a2
   140003682:	lea    rcx,[rip+0x17c67]        # 0x14001b2f0
   140003689:	jmp    0x140003547
   14000368e:	lea    rcx,[rip+0x17c2b]        # 0x14001b2c0
   140003695:	mov    r8,rsi
   140003698:	mov    edx,r12d
   14000369b:	call   0x140004370
   1400036a0:	xor    edi,edi
   1400036a2:	lea    r8,[rsp+0x40]
   1400036a7:	lea    rcx,[rip+0x17bfa]        # 0x14001b2a8
   1400036ae:	mov    edx,ebp
   1400036b0:	call   0x14000408c
   1400036b5:	cmp    edi,0xffffffff
   1400036b8:	je     0x140003737
   1400036ba:	mov    rbx,QWORD PTR [rip+0x210c7]        # 0x140024788
   1400036c1:	lea    rcx,[rsp+0x40]
   1400036c6:	call   0x140004058
   1400036cb:	mov    DWORD PTR [r14+rbx*1+0x8],edi
   1400036d0:	dec    edi
   1400036d2:	mov    QWORD PTR [r14+rbx*1],rax
   1400036d6:	je     0x140003703
   1400036d8:	cmp    edi,0x3
   1400036db:	jne    0x140003731
   1400036dd:	mov    rcx,QWORD PTR [rsp+0x28]
   1400036e2:	call   0x140004058
   1400036e7:	mov    rdx,QWORD PTR [rip+0x2109a]        # 0x140024788
   1400036ee:	lea    r8,[rip+0x17b9b]        # 0x14001b290
   1400036f5:	mov    QWORD PTR [r14+rdx*1+0x18],rax
   1400036fa:	lea    rcx,[rip+0x17b5f]        # 0x14001b260
   140003701:	jmp    0x140003725
   140003703:	mov    rcx,r13
   140003706:	call   0x140004058
   14000370b:	mov    rdx,QWORD PTR [rip+0x21076]        # 0x140024788
   140003712:	lea    r8,[rip+0x17b37]        # 0x14001b250
   140003719:	mov    QWORD PTR [r14+rdx*1+0x10],rax
   14000371e:	lea    rcx,[rip+0x17b03]        # 0x14001b228
   140003725:	mov    rdx,QWORD PTR [r14+rdx*1]
   140003729:	mov    r9,rax
   14000372c:	call   0x14000408c
   140003731:	inc    ebp
   140003733:	add    r14,0x20
   140003737:	lea    rcx,[rsp+0x40]
   14000373c:	mov    r8,r15
   14000373f:	mov    edx,0x118
   140003744:	call   0x14000b008
   140003749:	test   rax,rax
   14000374c:	jne    0x14000345c
   140003752:	mov    rcx,r15
   140003755:	call   0x14000ae58
   14000375a:	mov    DWORD PTR [rip+0x21014],ebp        # 0x140024774
   140003760:	call   0x1400040f0
   140003765:	test   al,al
   140003767:	je     0x14000378a
   140003769:	call   0x1400042a0
   14000376e:	sub    rax,QWORD PTR [rsp+0x20]
   140003773:	mov    rcx,rax
   140003776:	call   0x1400042ec
   14000377b:	lea    rcx,[rip+0x17a7e]        # 0x14001b200
   140003782:	mov    rdx,rax
   140003785:	call   0x140009c3c
   14000378a:	mov    eax,ebp
   14000378c:	mov    rcx,QWORD PTR [rsp+0x160]
   140003794:	xor    rcx,rsp
   140003797:	call   0x14000a850
   14000379c:	lea    r11,[rsp+0x170]
   1400037a4:	mov    rbx,QWORD PTR [r11+0x38]
   1400037a8:	mov    rbp,QWORD PTR [r11+0x40]
   1400037ac:	mov    rsi,QWORD PTR [r11+0x48]
   1400037b0:	mov    rsp,r11
   1400037b3:	pop    r15
   1400037b5:	pop    r14
   1400037b7:	pop    r13
   1400037b9:	pop    r12
   1400037bb:	pop    rdi
   1400037bc:	ret    
   1400037bd:	int3   
   1400037be:	int3   
   1400037bf:	int3   
   1400037c0:	mov    rax,rsp
   1400037c3:	mov    QWORD PTR [rax+0x8],rbx
   1400037c7:	mov    QWORD PTR [rax+0x10],rsi
   1400037cb:	mov    QWORD PTR [rax+0x18],rdi
   1400037cf:	mov    QWORD PTR [rax+0x20],r12
   1400037d3:	push   rbp
   1400037d4:	mov    rbp,rsp
   1400037d7:	sub    rsp,0x80
   1400037de:	mov    rsi,r9
   1400037e1:	mov    r12d,r8d
   1400037e4:	mov    rbx,rdx
   1400037e7:	mov    rdi,rcx
   1400037ea:	test   rdx,rdx
   1400037ed:	jne    0x140003818
   1400037ef:	lea    rcx,[rbp-0x60]
   1400037f3:	mov    r8d,0x60
   1400037f9:	call   0x14000a560
   1400037fe:	lea    rcx,[rbp-0x60]
   140003802:	mov    DWORD PTR [rbp-0x60],0x10001
   140003809:	call   QWORD PTR [rdi+0x8]
   14000380c:	movsxd r11,DWORD PTR [rbp-0x48]
   140003810:	test   r11d,r11d
   140003813:	jle    0x140003818
   140003815:	mov    rbx,r11
   140003818:	mov    eax,DWORD PTR [rbp+0x30]
   14000381b:	lea    r8,[rbp-0x60]
   14000381f:	lea    rcx,[rip+0xffffffffffffe73e]        # 0x140001f64
   140003826:	mov    DWORD PTR [rbp-0x50],eax
   140003829:	mov    rax,QWORD PTR [rbp+0x38]
   14000382d:	mov    rdx,rbx
   140003830:	mov    QWORD PTR [rbp-0x48],rax
   140003834:	mov    rax,QWORD PTR [rdi]
   140003837:	mov    DWORD PTR [rbp-0x60],r12d
   14000383b:	mov    QWORD PTR [rbp-0x40],rax
   14000383f:	mov    rax,QWORD PTR [rdi+0x8]
   140003843:	mov    QWORD PTR [rbp-0x58],rsi
   140003847:	mov    QWORD PTR [rbp-0x38],rax
   14000384b:	mov    rax,QWORD PTR [rdi+0x10]
   14000384f:	mov    QWORD PTR [rbp-0x30],rax
   140003853:	call   0x140005a84
   140003858:	mov    ecx,DWORD PTR [rbp+0x40]
   14000385b:	lea    r11,[rsp+0x80]
   140003863:	test   ecx,ecx
   140003865:	mov    rbx,QWORD PTR [r11+0x10]
   140003869:	mov    rsi,QWORD PTR [r11+0x18]
   14000386d:	mov    rdi,QWORD PTR [r11+0x20]
   140003871:	mov    r12,QWORD PTR [r11+0x28]
   140003875:	cmovne eax,ecx
   140003878:	mov    rsp,r11
   14000387b:	pop    rbp
   14000387c:	ret    
   14000387d:	int3   
   14000387e:	int3   
   14000387f:	int3   
   140003880:	rex push rbp
   140003882:	push   rbx
   140003883:	push   rsi
   140003884:	push   rdi
   140003885:	push   r12
   140003887:	push   r13
   140003889:	lea    rbp,[rsp-0x2c8]
   140003891:	sub    rsp,0x3c8
   140003898:	mov    rax,QWORD PTR [rip+0x1f821]        # 0x1400230c0
   14000389f:	xor    rax,rsp
   1400038a2:	mov    QWORD PTR [rbp+0x2b0],rax
   1400038a9:	mov    rax,QWORD PTR [rbp+0x348]
   1400038b0:	mov    r13,QWORD PTR [rbp+0x328]
   1400038b7:	and    DWORD PTR [rsp+0x50],0x0
   1400038bc:	and    QWORD PTR [rsp+0x58],0x0
   1400038c2:	and    QWORD PTR [rsp+0x60],0x0
   1400038c8:	mov    QWORD PTR [rip+0x20e81],rax        # 0x140024750
   1400038cf:	mov    al,BYTE PTR [rbp+0x350]
   1400038d5:	mov    DWORD PTR [rsp+0x40],ecx
   1400038d9:	mov    rcx,QWORD PTR [rbp+0x330]
   1400038e0:	mov    BYTE PTR [rip+0x20e7e],al        # 0x140024764
   1400038e6:	mov    al,BYTE PTR [rbp+0x358]
   1400038ec:	mov    esi,r8d
   1400038ef:	mov    r8,QWORD PTR [rbp+0x340]
   1400038f6:	mov    QWORD PTR [rsp+0x48],rdx
   1400038fb:	mov    rdx,QWORD PTR [rbp+0x338]
   140003902:	mov    BYTE PTR [rip+0x20e5d],al        # 0x140024765
   140003908:	mov    eax,DWORD PTR [rbp+0x368]
   14000390e:	mov    QWORD PTR [rip+0x20e23],rcx        # 0x140024738
   140003915:	mov    cl,BYTE PTR [rbp+0x360]
   14000391b:	mov    r12,r9
   14000391e:	mov    QWORD PTR [rip+0x20e33],rdx        # 0x140024758
   140003925:	mov    DWORD PTR [rip+0x20e45],eax        # 0x140024770
   14000392b:	mov    QWORD PTR [rip+0x20e16],r8        # 0x140024748
   140003932:	call   0x140004e0c
   140003937:	call   0x1400040f0
   14000393c:	test   al,al
   14000393e:	je     0x140003a33
   140003944:	lea    rcx,[rip+0x170b5]        # 0x14001aa00
   14000394b:	call   0x140009c3c
   140003950:	call   0x1400040f0
   140003955:	lea    rbx,[rip+0x1709c]        # 0x14001a9f8
   14000395c:	cmp    al,0x1
   14000395e:	lea    rdi,[rip+0x1708f]        # 0x14001a9f4
   140003965:	mov    rdx,rbx
   140003968:	lea    rcx,[rip+0x17079]        # 0x14001a9e8
   14000396f:	cmove  rdx,rdi
   140003973:	call   0x140009c3c
   140003978:	cmp    BYTE PTR [rip+0x20de5],0x1        # 0x140024764
   14000397f:	mov    rdx,rbx
   140003982:	lea    rcx,[rip+0x1704f]        # 0x14001a9d8
   140003989:	cmove  rdx,rdi
   14000398d:	call   0x140009c3c
   140003992:	mov    rdx,QWORD PTR [rip+0x20daf]        # 0x140024748
   140003999:	lea    rcx,[rip+0x17020]        # 0x14001a9c0
   1400039a0:	call   0x140009c3c
   1400039a5:	mov    rdx,QWORD PTR [rip+0x20da4]        # 0x140024750
   1400039ac:	lea    rcx,[rip+0x16ff5]        # 0x14001a9a8
   1400039b3:	call   0x140009c3c
   1400039b8:	call   0x1400041c4
   1400039bd:	lea    rcx,[rip+0x16fd4]        # 0x14001a998
   1400039c4:	cmp    al,0x1
   1400039c6:	cmove  rbx,rdi
   1400039ca:	mov    rdx,rbx
   1400039cd:	call   0x140009c3c
   1400039d2:	mov    rdx,QWORD PTR [rip+0x20d5f]        # 0x140024738
   1400039d9:	lea    rcx,[rip+0x16fa0]        # 0x14001a980
   1400039e0:	call   0x140009c3c
   1400039e5:	mov    rdx,QWORD PTR [rip+0x20d6c]        # 0x140024758
   1400039ec:	lea    rcx,[rip+0x16f7d]        # 0x14001a970
   1400039f3:	call   0x140009c3c
   1400039f8:	lea    rcx,[rip+0x16f61]        # 0x14001a960
   1400039ff:	call   0x140009c3c
   140003a04:	mov    r11d,DWORD PTR [rip+0x20d65]        # 0x140024770
   140003a0b:	dec    r11d
   140003a0e:	je     0x140003a27
   140003a10:	dec    r11d
   140003a13:	je     0x140003a1e
   140003a15:	lea    rcx,[rip+0x16f24]        # 0x14001a940
   140003a1c:	jmp    0x140003a2e
   140003a1e:	lea    rcx,[rip+0x16ef3]        # 0x14001a918
   140003a25:	jmp    0x140003a2e
   140003a27:	lea    rcx,[rip+0x16ec2]        # 0x14001a8f0
   140003a2e:	call   0x140009c3c
   140003a33:	call   0x1400040f0
   140003a38:	test   al,al
   140003a3a:	je     0x140003a83
   140003a3c:	lea    rcx,[rip+0x179dd]        # 0x14001b420
   140003a43:	call   0x140009c3c
   140003a48:	xor    ebx,ebx
   140003a4a:	cmp    DWORD PTR [rsp+0x40],ebx
   140003a4e:	jle    0x140003a75
   140003a50:	xor    edi,edi
   140003a52:	mov    r8,QWORD PTR [rsp+0x48]
   140003a57:	lea    rcx,[rip+0x179b2]        # 0x14001b410
   140003a5e:	mov    edx,ebx
   140003a60:	mov    r8,QWORD PTR [rdi+r8*1]
   140003a64:	call   0x140009c3c
   140003a69:	inc    ebx
   140003a6b:	add    rdi,0x8
   140003a6f:	cmp    ebx,DWORD PTR [rsp+0x40]
   140003a73:	jl     0x140003a52
   140003a75:	lea    rcx,[rip+0x176cc]        # 0x14001b148
   140003a7c:	xor    edx,edx
   140003a7e:	call   0x14000121c
   140003a83:	mov    rdx,QWORD PTR [rsp+0x48]
   140003a88:	mov    ecx,DWORD PTR [rsp+0x40]
   140003a8c:	lea    r8,[rsp+0x60]
   140003a91:	call   0x140002798
   140003a96:	mov    r9d,0x104
   140003a9c:	lea    rax,[rbp+0x90]
   140003aa3:	mov    DWORD PTR [rsp+0x38],r9d
   140003aa8:	mov    QWORD PTR [rsp+0x30],rax
   140003aad:	lea    rax,[rbp-0x80]
   140003ab1:	mov    DWORD PTR [rsp+0x28],r9d
   140003ab6:	lea    r8,[rbp+0x1a0]
   140003abd:	lea    rdx,[rsp+0x48]
   140003ac2:	lea    rcx,[rsp+0x40]
   140003ac7:	mov    QWORD PTR [rsp+0x20],rax
   140003acc:	call   0x1400054c4
   140003ad1:	and    QWORD PTR [rsp+0x68],0x0
   140003ad7:	and    QWORD PTR [rsp+0x70],0x0
   140003add:	call   0x1400040f0
   140003ae2:	test   al,al
   140003ae4:	je     0x140003af0
   140003ae6:	call   0x1400042a0
   140003aeb:	mov    rbx,rax
   140003aee:	jmp    0x140003af5
   140003af0:	mov    rbx,QWORD PTR [rsp+0x58]
   140003af5:	lea    rdx,[rsp+0x68]
   140003afa:	lea    rcx,[rbp-0x80]
   140003afe:	call   0x1400058a8
   140003b03:	test   al,al
   140003b05:	jne    0x140003b11
   140003b07:	mov    eax,0x6
   140003b0c:	jmp    0x140003c37
   140003b11:	call   0x1400040f0
   140003b16:	test   al,al
   140003b18:	je     0x140003b21
   140003b1a:	call   0x1400042a0
   140003b1f:	jmp    0x140003b26
   140003b21:	mov    rax,QWORD PTR [rsp+0x58]
   140003b26:	sub    rax,rbx
   140003b29:	mov    rcx,rax
   140003b2c:	call   0x1400042ec
   140003b31:	lea    rcx,[rip+0x178b0]        # 0x14001b3e8
   140003b38:	mov    rdx,rax
   140003b3b:	call   0x14000408c
   140003b40:	add    QWORD PTR [rsp+0x48],0x8
   140003b46:	dec    DWORD PTR [rsp+0x40]
   140003b4a:	cmp    BYTE PTR [rip+0x20c13],0x0        # 0x140024764
   140003b51:	je     0x140003b83
   140003b53:	lea    r9,[rsp+0x48]
   140003b58:	lea    r8,[rsp+0x40]
   140003b5d:	mov    rdx,r12
   140003b60:	mov    ecx,esi
   140003b62:	call   0x1400031ec
   140003b67:	mov    ecx,DWORD PTR [rbp+0x320]
   140003b6d:	mov    rdx,r13
   140003b70:	call   0x140001720
   140003b75:	test   al,al
   140003b77:	jne    0x140003ba2
   140003b79:	mov    eax,0x1
   140003b7e:	jmp    0x140003c37
   140003b83:	lea    rcx,[rip+0x16b8e]        # 0x14001a718
   140003b8a:	call   0x140009da4
   140003b8f:	lea    rcx,[rip+0x1784a]        # 0x14001b3e0
   140003b96:	test   rax,rax
   140003b99:	cmovne rcx,rax
   140003b9d:	call   0x14000138c
   140003ba2:	lea    rax,[rsp+0x60]
   140003ba7:	lea    r9,[rsp+0x58]
   140003bac:	lea    r8,[rsp+0x50]
   140003bb1:	lea    rdx,[rsp+0x48]
   140003bb6:	lea    rcx,[rsp+0x40]
   140003bbb:	mov    QWORD PTR [rsp+0x20],rax
   140003bc0:	call   0x140002c94
   140003bc5:	test   al,al
   140003bc7:	jne    0x140003bcf
   140003bc9:	mov    eax,DWORD PTR [rsp+0x60]
   140003bcd:	jmp    0x140003c37
   140003bcf:	mov    edi,DWORD PTR [rsp+0x50]
   140003bd3:	mov    rbx,QWORD PTR [rsp+0x58]
   140003bd8:	cmp    edi,0x2
   140003bdb:	jne    0x140003be5
   140003bdd:	mov    rcx,rbx
   140003be0:	call   0x14000138c
   140003be5:	mov    r8,QWORD PTR [rsp+0x48]
   140003bea:	mov    edx,DWORD PTR [rsp+0x40]
   140003bee:	mov    rcx,rbx
   140003bf1:	call   0x1400018bc
   140003bf6:	lea    rcx,[rip+0x16b43]        # 0x14001a740
   140003bfd:	xor    edx,edx
   140003bff:	call   0x14000121c
   140003c04:	call   0x140004eb4
   140003c09:	mov    r11d,DWORD PTR [rsp+0x60]
   140003c0e:	mov    r9,QWORD PTR [rsp+0x48]
   140003c13:	mov    r8d,DWORD PTR [rsp+0x40]
   140003c18:	mov    rdx,QWORD PTR [rip+0x20b79]        # 0x140024798
   140003c1f:	mov    DWORD PTR [rsp+0x30],r11d
   140003c24:	lea    rcx,[rsp+0x68]
   140003c29:	mov    QWORD PTR [rsp+0x28],rbx
   140003c2e:	mov    DWORD PTR [rsp+0x20],edi
   140003c32:	call   0x140004e48
   140003c37:	mov    rcx,QWORD PTR [rbp+0x2b0]
   140003c3e:	xor    rcx,rsp
   140003c41:	call   0x14000a850
   140003c46:	add    rsp,0x3c8
   140003c4d:	pop    r13
   140003c4f:	pop    r12
   140003c51:	pop    rdi
   140003c52:	pop    rsi
   140003c53:	pop    rbx
   140003c54:	pop    rbp
   140003c55:	ret    
   140003c56:	int3   
   140003c57:	int3   
   140003c58:	mov    QWORD PTR [rsp+0x20],rbx
   140003c5d:	mov    QWORD PTR [rsp+0x18],r8
   140003c62:	push   rbp
   140003c63:	push   rsi
   140003c64:	push   rdi
   140003c65:	push   r12
   140003c67:	push   r13
   140003c69:	push   r14
   140003c6b:	push   r15
   140003c6d:	sub    rsp,0x20
   140003c71:	mov    r15,rcx
   140003c74:	xor    ecx,ecx
   140003c76:	mov    rdi,rdx
   140003c79:	mov    bl,cl
   140003c7b:	mov    BYTE PTR [rsp+0x60],cl
   140003c7f:	mov    r13d,ecx
   140003c82:	mov    esi,ecx
   140003c84:	movzx  r12d,cx
   140003c88:	mov    r14b,cl
   140003c8b:	mov    BYTE PTR [r8],cl
   140003c8e:	xor    ecx,ecx
   140003c90:	xor    r8d,r8d
   140003c93:	mov    rdx,r15
   140003c96:	call   QWORD PTR [rip+0x166a4]        # 0x14001a340
   140003c9c:	mov    rcx,rax
   140003c9f:	sub    ecx,r15d
   140003ca2:	mov    QWORD PTR [rsp+0x68],rcx
   140003ca7:	je     0x140003f04
   140003cad:	mov    edx,0x1
   140003cb2:	cmp    ecx,edx
   140003cb4:	jne    0x140003cbc
   140003cb6:	movzx  ebp,BYTE PTR [r15]
   140003cba:	jmp    0x140003cc0
   140003cbc:	movzx  ebp,WORD PTR [r15]
   140003cc0:	movzx  eax,bp
   140003cc3:	cmp    eax,0x9
   140003cc6:	je     0x140003e79
   140003ccc:	cmp    eax,0x20
   140003ccf:	je     0x140003e79
   140003cd5:	mov    r10d,0x22
   140003cdb:	cmp    eax,r10d
   140003cde:	je     0x140003dcc
   140003ce4:	cmp    eax,0x2a
   140003ce7:	je     0x140003d53
   140003ce9:	cmp    eax,0x3f
   140003cec:	je     0x140003d53
   140003cee:	lea    r9d,[r10+0x3a]
   140003cf2:	cmp    eax,r9d
   140003cf5:	je     0x140003d41
   140003cf7:	xor    r8d,r8d
   140003cfa:	cmp    r12w,r9w
   140003cfe:	jne    0x140003d31
   140003d00:	test   esi,esi
   140003d02:	jle    0x140003ec3
   140003d08:	mov    r8d,esi
   140003d0b:	mov    dl,r9b
   140003d0e:	mov    rcx,rdi
   140003d11:	mov    ebx,esi
   140003d13:	call   0x14000a560
   140003d18:	mov    rcx,QWORD PTR [rsp+0x68]
   140003d1d:	add    rdi,rbx
   140003d20:	mov    bl,BYTE PTR [rsp+0x60]
   140003d24:	mov    edx,0x1
   140003d29:	xor    r8d,r8d
   140003d2c:	jmp    0x140003ec3
   140003d31:	test   bl,bl
   140003d33:	je     0x140003ec3
   140003d39:	mov    r14b,dl
   140003d3c:	jmp    0x140003eea
   140003d41:	add    esi,edx
   140003d43:	test   bl,bl
   140003d45:	je     0x140003ef2
   140003d4b:	mov    r14b,dl
   140003d4e:	jmp    0x140003f0a
   140003d53:	test   bl,bl
   140003d55:	jne    0x140003f01
   140003d5b:	mov    eax,r13d
   140003d5e:	and    eax,0x80000001
   140003d63:	jge    0x140003d6c
   140003d65:	sub    eax,edx
   140003d67:	or     eax,0xfffffffe
   140003d6a:	add    eax,edx
   140003d6c:	test   eax,eax
   140003d6e:	jne    0x140003d77
   140003d70:	mov    rax,QWORD PTR [rsp+0x70]
   140003d75:	mov    BYTE PTR [rax],dl
   140003d77:	mov    r9d,0x5c
   140003d7d:	cmp    r12w,r9w
   140003d81:	jne    0x140003da8
   140003d83:	test   esi,esi
   140003d85:	jle    0x140003da8
   140003d87:	mov    r8d,esi
   140003d8a:	mov    dl,r9b
   140003d8d:	mov    rcx,rdi
   140003d90:	mov    ebx,esi
   140003d92:	call   0x14000a560
   140003d97:	mov    rcx,QWORD PTR [rsp+0x68]
   140003d9c:	add    rdi,rbx
   140003d9f:	mov    bl,BYTE PTR [rsp+0x60]
   140003da3:	mov    edx,0x1
   140003da8:	movzx  eax,bp
   140003dab:	shr    ax,0x8
   140003daf:	test   al,al
   140003db1:	jne    0x140003dba
   140003db3:	mov    BYTE PTR [rdi],bpl
   140003db6:	mov    eax,edx
   140003db8:	jmp    0x140003dc2
   140003dba:	mov    WORD PTR [rdi],bp
   140003dbd:	mov    eax,0x2
   140003dc2:	cdqe   
   140003dc4:	add    rdi,rax
   140003dc7:	jmp    0x140003ef2
   140003dcc:	xor    r8d,r8d
   140003dcf:	lea    r9d,[r8+0x5c]
   140003dd3:	test   bl,bl
   140003dd5:	jne    0x140003d4b
   140003ddb:	cmp    r12w,r9w
   140003ddf:	jne    0x140003e28
   140003de1:	cmp    esi,edx
   140003de3:	jle    0x140003e10
   140003de5:	lea    eax,[rsi-0x2]
   140003de8:	mov    rcx,rdi
   140003deb:	shr    eax,1
   140003ded:	add    eax,edx
   140003def:	mov    dl,r9b
   140003df2:	mov    r8d,eax
   140003df5:	mov    ebx,eax
   140003df7:	call   0x14000a560
   140003dfc:	mov    rcx,QWORD PTR [rsp+0x68]
   140003e01:	add    rdi,rbx
   140003e04:	mov    bl,BYTE PTR [rsp+0x60]
   140003e08:	xor    r8d,r8d
   140003e0b:	mov    edx,0x1
   140003e10:	and    esi,0x80000001
   140003e16:	jge    0x140003e1f
   140003e18:	sub    esi,edx
   140003e1a:	or     esi,0xfffffffe
   140003e1d:	add    esi,edx
   140003e1f:	cmp    esi,edx
   140003e21:	je     0x140003e46
   140003e23:	add    r13d,edx
   140003e26:	jmp    0x140003e74
   140003e28:	cmp    r12w,r10w
   140003e2c:	jne    0x140003e67
   140003e2e:	mov    eax,r13d
   140003e31:	and    eax,0x80000001
   140003e36:	jge    0x140003e3f
   140003e38:	sub    eax,edx
   140003e3a:	or     eax,0xfffffffe
   140003e3d:	add    eax,edx
   140003e3f:	test   eax,eax
   140003e41:	jne    0x140003e67
   140003e43:	add    r13d,edx
   140003e46:	movzx  eax,bp
   140003e49:	shr    ax,0x8
   140003e4d:	test   al,al
   140003e4f:	jne    0x140003e58
   140003e51:	mov    BYTE PTR [rdi],bpl
   140003e54:	mov    eax,edx
   140003e56:	jmp    0x140003e60
   140003e58:	mov    WORD PTR [rdi],bp
   140003e5b:	mov    eax,0x2
   140003e60:	cdqe   
   140003e62:	add    rdi,rax
   140003e65:	jmp    0x140003e74
   140003e67:	test   r13d,r13d
   140003e6a:	jne    0x140003e71
   140003e6c:	mov    r13d,edx
   140003e6f:	jmp    0x140003e74
   140003e71:	sub    r13d,edx
   140003e74:	mov    esi,r8d
   140003e77:	jmp    0x140003ef2
   140003e79:	mov    eax,0x5c
   140003e7e:	xor    r8d,r8d
   140003e81:	cmp    r12w,ax
   140003e85:	jne    0x140003eae
   140003e87:	test   esi,esi
   140003e89:	jle    0x140003eae
   140003e8b:	mov    r8d,esi
   140003e8e:	mov    dl,al
   140003e90:	mov    rcx,rdi
   140003e93:	mov    ebx,esi
   140003e95:	call   0x14000a560
   140003e9a:	mov    rcx,QWORD PTR [rsp+0x68]
   140003e9f:	add    rdi,rbx
   140003ea2:	mov    bl,BYTE PTR [rsp+0x60]
   140003ea6:	mov    edx,0x1
   140003eab:	xor    r8d,r8d
   140003eae:	mov    eax,r13d
   140003eb1:	and    eax,0x80000001
   140003eb6:	jge    0x140003ebf
   140003eb8:	sub    eax,edx
   140003eba:	or     eax,0xfffffffe
   140003ebd:	add    eax,edx
   140003ebf:	cmp    eax,edx
   140003ec1:	jne    0x140003ee4
   140003ec3:	movzx  eax,bp
   140003ec6:	shr    ax,0x8
   140003eca:	test   al,al
   140003ecc:	jne    0x140003ed5
   140003ece:	mov    BYTE PTR [rdi],bpl
   140003ed1:	mov    eax,edx
   140003ed3:	jmp    0x140003edd
   140003ed5:	mov    WORD PTR [rdi],bp
   140003ed8:	mov    eax,0x2
   140003edd:	cdqe   
   140003edf:	add    rdi,rax
   140003ee2:	jmp    0x140003eea
   140003ee4:	mov    bl,dl
   140003ee6:	mov    BYTE PTR [rsp+0x60],dl
   140003eea:	mov    esi,r8d
   140003eed:	test   r14b,r14b
   140003ef0:	jne    0x140003f04
   140003ef2:	movsxd rax,ecx
   140003ef5:	movzx  r12d,bp
   140003ef9:	add    r15,rax
   140003efc:	jmp    0x140003c8e
   140003f01:	mov    r14b,dl
   140003f04:	mov    r9d,0x5c
   140003f0a:	cmp    r12w,r9w
   140003f0e:	jne    0x140003f27
   140003f10:	test   esi,esi
   140003f12:	jle    0x140003f27
   140003f14:	mov    r8d,esi
   140003f17:	mov    dl,r9b
   140003f1a:	mov    rcx,rdi
   140003f1d:	mov    ebx,esi
   140003f1f:	call   0x14000a560
   140003f24:	add    rdi,rbx
   140003f27:	mov    rbx,QWORD PTR [rsp+0x78]
   140003f2c:	xor    ecx,ecx
   140003f2e:	neg    r14b
   140003f31:	sbb    rax,rax
   140003f34:	mov    BYTE PTR [rdi],cl
   140003f36:	and    rax,r15
   140003f39:	add    rsp,0x20
   140003f3d:	pop    r15
   140003f3f:	pop    r14
   140003f41:	pop    r13
   140003f43:	pop    r12
   140003f45:	pop    rdi
   140003f46:	pop    rsi
   140003f47:	pop    rbp
   140003f48:	ret    
   140003f49:	int3   
   140003f4a:	int3   
   140003f4b:	int3   
   140003f4c:	mov    eax,DWORD PTR [rip+0x2086e]        # 0x1400247c0
   140003f52:	ret    
   140003f53:	int3   
   140003f54:	mov    rax,QWORD PTR [rip+0x2086d]        # 0x1400247c8
   140003f5b:	ret    
   140003f5c:	mov    rax,rsp
   140003f5f:	mov    QWORD PTR [rax+0x10],rbx
   140003f63:	mov    QWORD PTR [rax+0x18],rbp
   140003f67:	mov    QWORD PTR [rax+0x20],rsi
   140003f6b:	push   rdi
   140003f6c:	push   r12
   140003f6e:	push   r13
   140003f70:	sub    rsp,0x20
   140003f74:	xor    ebx,ebx
   140003f76:	mov    rsi,rcx
   140003f79:	xor    edi,edi
   140003f7b:	mov    BYTE PTR [rax+0x8],bl
   140003f7e:	call   0x140004058
   140003f83:	xor    ebp,ebp
   140003f85:	mov    r12,rax
   140003f88:	lea    r13d,[rbx+0x1]
   140003f8c:	lea    r8,[rsp+0x40]
   140003f91:	mov    rdx,r12
   140003f94:	mov    rcx,rsi
   140003f97:	call   0x140003c58
   140003f9c:	movsxd rdx,r13d
   140003f9f:	mov    rcx,rdi
   140003fa2:	shl    rdx,0x4
   140003fa6:	mov    rsi,rax
   140003fa9:	call   0x14000402c
   140003fae:	mov    rcx,r12
   140003fb1:	mov    rdi,rax
   140003fb4:	call   0x140004058
   140003fb9:	inc    ebx
   140003fbb:	mov    QWORD PTR [rdi+rbp*1],rax
   140003fbf:	mov    al,BYTE PTR [rsp+0x40]
   140003fc3:	add    rbp,0x10
   140003fc7:	mov    BYTE PTR [rdi+rbp*1-0x8],al
   140003fcb:	inc    r13d
   140003fce:	mov    BYTE PTR [r12],0x0
   140003fd3:	test   rsi,rsi
   140003fd6:	jne    0x140003f8c
   140003fd8:	mov    rbp,QWORD PTR [rsp+0x50]
   140003fdd:	mov    rsi,QWORD PTR [rsp+0x58]
   140003fe2:	mov    DWORD PTR [rip+0x207d8],ebx        # 0x1400247c0
   140003fe8:	mov    rbx,QWORD PTR [rsp+0x48]
   140003fed:	mov    QWORD PTR [rip+0x207d4],rdi        # 0x1400247c8
   140003ff4:	add    rsp,0x20
   140003ff8:	pop    r13
   140003ffa:	pop    r12
   140003ffc:	pop    rdi
   140003ffd:	ret    
   140003ffe:	int3   
   140003fff:	int3   
   140004000:	sub    rsp,0x28
   140004004:	call   0x14000b304
   140004009:	test   rax,rax
   14000400c:	jne    0x140004025
   14000400e:	lea    rcx,[rip+0x1741f]        # 0x14001b434
   140004015:	call   0x14000b254
   14000401a:	mov    ecx,0x1
   14000401f:	call   0x140009bdc
   140004024:	int3   
   140004025:	add    rsp,0x28
   140004029:	ret    
   14000402a:	int3   
   14000402b:	int3   
   14000402c:	sub    rsp,0x28
   140004030:	call   0x14000b3bc
   140004035:	test   rax,rax
   140004038:	jne    0x140004051
   14000403a:	lea    rcx,[rip+0x173ff]        # 0x14001b440
   140004041:	call   0x14000b254
   140004046:	mov    ecx,0x1
   14000404b:	call   0x140009bdc
   140004050:	int3   
   140004051:	add    rsp,0x28
   140004055:	ret    
   140004056:	int3   
   140004057:	int3   
   140004058:	sub    rsp,0x28
   14000405c:	call   0x140018c50
   140004061:	test   rax,rax
   140004064:	jne    0x14000407d
   140004066:	lea    rcx,[rip+0x173db]        # 0x14001b448
   14000406d:	call   0x14000b254
   140004072:	mov    ecx,0x1
   140004077:	call   0x140009bdc
   14000407c:	int3   
   14000407d:	add    rsp,0x28
   140004081:	ret    
   140004082:	int3   
   140004083:	int3   
   140004084:	jmp    0x14000b490
   140004089:	int3   
   14000408a:	int3   
   14000408b:	int3   
   14000408c:	mov    rax,rsp
   14000408f:	mov    QWORD PTR [rax+0x8],rcx
   140004093:	mov    QWORD PTR [rax+0x10],rdx
   140004097:	mov    QWORD PTR [rax+0x18],r8
   14000409b:	mov    QWORD PTR [rax+0x20],r9
   14000409f:	sub    rsp,0x28
   1400040a3:	cmp    BYTE PTR [rip+0x20726],0x1        # 0x1400247d0
   1400040aa:	jne    0x1400040b5
   1400040ac:	lea    rdx,[rax+0x10]
   1400040b0:	call   0x14000b578
   1400040b5:	add    rsp,0x28
   1400040b9:	ret    
   1400040ba:	int3   
   1400040bb:	int3   
   1400040bc:	sub    rsp,0x28
   1400040c0:	lea    rcx,[rip+0x163b9]        # 0x14001a480
   1400040c7:	call   0x140009da4
   1400040cc:	test   rax,rax
   1400040cf:	je     0x1400040eb
   1400040d1:	lea    rdx,[rip+0x163a8]        # 0x14001a480
   1400040d8:	lea    rcx,[rip+0x16549]        # 0x14001a628
   1400040df:	mov    BYTE PTR [rip+0x206ea],0x1        # 0x1400247d0
   1400040e6:	call   0x14000408c
   1400040eb:	add    rsp,0x28
   1400040ef:	ret    
   1400040f0:	mov    al,BYTE PTR [rip+0x206da]        # 0x1400247d0
   1400040f6:	ret    
   1400040f7:	int3   
   1400040f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400040fd:	push   rdi
   1400040fe:	sub    rsp,0x20
   140004102:	mov    rdi,rcx
   140004105:	mov    rcx,rdx
   140004108:	mov    rbx,rdx
   14000410b:	call   0x140009fd0
   140004110:	mov    rdx,rbx
   140004113:	mov    rcx,rdi
   140004116:	mov    r8,rax
   140004119:	mov    rbx,QWORD PTR [rsp+0x30]
   14000411e:	add    rsp,0x20
   140004122:	pop    rdi
   140004123:	jmp    0x14000b5a0
   140004128:	mov    QWORD PTR [rsp+0x8],rbx
   14000412d:	mov    QWORD PTR [rsp+0x10],rsi
   140004132:	push   rdi
   140004133:	sub    rsp,0x20
   140004137:	mov    rdi,rdx
   14000413a:	mov    rbx,rcx
   14000413d:	call   0x140009fd0
   140004142:	movsxd rsi,eax
   140004145:	mov    rdx,rdi
   140004148:	mov    rcx,rbx
   14000414b:	mov    r8,rsi
   14000414e:	call   0x14000b5a0
   140004153:	test   eax,eax
   140004155:	jne    0x140004164
   140004157:	cmp    BYTE PTR [rsi+rdi*1],0x3d
   14000415b:	jne    0x140004164
   14000415d:	lea    rax,[rsi+rdi*1+0x1]
   140004162:	jmp    0x140004166
   140004164:	xor    eax,eax
   140004166:	mov    rbx,QWORD PTR [rsp+0x30]
   14000416b:	mov    rsi,QWORD PTR [rsp+0x38]
   140004170:	add    rsp,0x20
   140004174:	pop    rdi
   140004175:	ret    
   140004176:	int3   
   140004177:	int3   
   140004178:	rex push rbx
   14000417a:	sub    rsp,0x20
   14000417e:	call   0x140004128
   140004183:	mov    rbx,rax
   140004186:	test   rax,rax
   140004189:	je     0x1400041b8
   14000418b:	lea    rdx,[rip+0x16c2a]        # 0x14001adbc
   140004192:	mov    rcx,rax
   140004195:	call   0x140019750
   14000419a:	test   eax,eax
   14000419c:	jne    0x1400041a5
   14000419e:	mov    eax,0x1
   1400041a3:	jmp    0x1400041bb
   1400041a5:	lea    rdx,[rip+0x16c08]        # 0x14001adb4
   1400041ac:	mov    rcx,rbx
   1400041af:	call   0x140019750
   1400041b4:	test   eax,eax
   1400041b6:	je     0x1400041bb
   1400041b8:	or     eax,0xffffffff
   1400041bb:	add    rsp,0x20
   1400041bf:	pop    rbx
   1400041c0:	ret    
   1400041c1:	int3   
   1400041c2:	int3   
   1400041c3:	int3   
   1400041c4:	mov    al,BYTE PTR [rip+0x2061a]        # 0x1400247e4
   1400041ca:	ret    
   1400041cb:	int3   
   1400041cc:	rex push rbx
   1400041ce:	sub    rsp,0x20
   1400041d2:	mov    r8d,edx
   1400041d5:	mov    rbx,rcx
   1400041d8:	mov    rdx,rcx
   1400041db:	xor    ecx,ecx
   1400041dd:	call   QWORD PTR [rip+0x15e65]        # 0x14001a048
   1400041e3:	mov    edx,0x5c
   1400041e8:	mov    rcx,rbx
   1400041eb:	call   0x14000bb58
   1400041f0:	mov    edx,0x5c
   1400041f5:	mov    rcx,rbx
   1400041f8:	mov    BYTE PTR [rax],0x0
   1400041fb:	call   0x14000bb58
   140004200:	test   rax,rax
   140004203:	jne    0x140004209
   140004205:	mov    BYTE PTR [rbx],al
   140004207:	jmp    0x14000420e
   140004209:	mov    BYTE PTR [rax],0x0
   14000420c:	mov    al,0x1
   14000420e:	add    rsp,0x20
   140004212:	pop    rbx
   140004213:	ret    
   140004214:	mov    r11,rsp
   140004217:	mov    QWORD PTR [r11+0x8],rbx
   14000421b:	mov    QWORD PTR [r11+0x10],rbp
   14000421f:	mov    QWORD PTR [r11+0x18],rsi
   140004223:	push   rdi
   140004224:	sub    rsp,0x40
   140004228:	lea    rax,[r11-0x18]
   14000422c:	mov    ebx,r9d
   14000422f:	mov    rbp,r8
   140004232:	mov    QWORD PTR [r11-0x20],rax
   140004236:	and    QWORD PTR [r11-0x28],0x0
   14000423b:	lea    r9,[r11-0x14]
   14000423f:	xor    r8d,r8d
   140004242:	mov    rdi,rdx
   140004245:	mov    rsi,rcx
   140004248:	call   QWORD PTR [rip+0x15dca]        # 0x14001a018
   14000424e:	test   eax,eax
   140004250:	jne    0x140004288
   140004252:	cmp    DWORD PTR [rsp+0x34],0x1
   140004257:	jne    0x140004288
   140004259:	cmp    DWORD PTR [rsp+0x30],ebx
   14000425d:	jae    0x140004288
   14000425f:	lea    rcx,[rsp+0x30]
   140004264:	xor    r9d,r9d
   140004267:	xor    r8d,r8d
   14000426a:	mov    QWORD PTR [rsp+0x28],rcx
   14000426f:	mov    rcx,rsi
   140004272:	mov    rdx,rdi
   140004275:	mov    QWORD PTR [rsp+0x20],rbp
   14000427a:	call   QWORD PTR [rip+0x15d98]        # 0x14001a018
   140004280:	test   eax,eax
   140004282:	jne    0x140004288
   140004284:	mov    al,0x1
   140004286:	jmp    0x14000428a
   140004288:	xor    al,al
   14000428a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000428f:	mov    rbp,QWORD PTR [rsp+0x58]
   140004294:	mov    rsi,QWORD PTR [rsp+0x60]
   140004299:	add    rsp,0x40
   14000429d:	pop    rdi
   14000429e:	ret    
   14000429f:	int3   
   1400042a0:	sub    rsp,0x28
   1400042a4:	cmp    BYTE PTR [rip+0x2053b],0x0        # 0x1400247e6
   1400042ab:	jne    0x1400042c9
   1400042ad:	lea    rcx,[rip+0x20524]        # 0x1400247d8
   1400042b4:	call   QWORD PTR [rip+0x15d9e]        # 0x14001a058
   1400042ba:	mov    BYTE PTR [rip+0x20525],0x1        # 0x1400247e6
   1400042c1:	mov    BYTE PTR [rip+0x2051e],al        # 0x1400247e5
   1400042c7:	jmp    0x1400042cf
   1400042c9:	mov    al,BYTE PTR [rip+0x20516]        # 0x1400247e5
   1400042cf:	test   al,al
   1400042d1:	jne    0x1400042d7
   1400042d3:	xor    eax,eax
   1400042d5:	jmp    0x1400042e7
   1400042d7:	lea    rcx,[rsp+0x30]
   1400042dc:	call   QWORD PTR [rip+0x15d6e]        # 0x14001a050
   1400042e2:	mov    rax,QWORD PTR [rsp+0x30]
   1400042e7:	add    rsp,0x28
   1400042eb:	ret    
   1400042ec:	cmp    BYTE PTR [rip+0x204f2],0x0        # 0x1400247e5
   1400042f3:	je     0x140004312
   1400042f5:	cmp    BYTE PTR [rip+0x204ea],0x0        # 0x1400247e6
   1400042fc:	je     0x140004312
   1400042fe:	imul   rcx,rcx,0xf4240
   140004305:	mov    rax,rcx
   140004308:	cqo    
   14000430a:	idiv   QWORD PTR [rip+0x204c7]        # 0x1400247d8
   140004311:	ret    
   140004312:	xor    eax,eax
   140004314:	ret    
   140004315:	int3   
   140004316:	int3   
   140004317:	int3   
   140004318:	mov    QWORD PTR [rsp+0x18],r8
   14000431d:	mov    QWORD PTR [rsp+0x20],r9
   140004322:	push   rbx
   140004323:	push   rdi
   140004324:	sub    rsp,0x28
   140004328:	mov    rbx,rdx
   14000432b:	mov    rdi,rcx
   14000432e:	test   rdx,rdx
   140004331:	je     0x140004364
   140004333:	test   rcx,rcx
   140004336:	je     0x140004364
   140004338:	lea    r9,[rsp+0x58]
   14000433d:	mov    BYTE PTR [rcx],0x0
   140004340:	call   0x14000bc4c
   140004345:	movsxd r11,eax
   140004348:	test   eax,eax
   14000434a:	jns    0x140004355
   14000434c:	mov    BYTE PTR [rdi+rbx*1-0x1],0x0
   140004351:	mov    eax,ebx
   140004353:	jmp    0x140004367
   140004355:	cmp    r11,rbx
   140004358:	jne    0x14000435f
   14000435a:	mov    BYTE PTR [rdi+rbx*1-0x1],0x0
   14000435f:	mov    eax,r11d
   140004362:	jmp    0x140004367
   140004364:	or     eax,0xffffffff
   140004367:	add    rsp,0x28
   14000436b:	pop    rdi
   14000436c:	pop    rbx
   14000436d:	ret    
   14000436e:	int3   
   14000436f:	int3   
   140004370:	mov    rax,rsp
   140004373:	mov    QWORD PTR [rax+0x8],rcx
   140004377:	mov    QWORD PTR [rax+0x10],rdx
   14000437b:	mov    QWORD PTR [rax+0x18],r8
   14000437f:	mov    QWORD PTR [rax+0x20],r9
   140004383:	push   rbx
   140004384:	push   rsi
   140004385:	push   rdi
   140004386:	sub    rsp,0x20
   14000438a:	cmp    BYTE PTR [rip+0x20453],0x0        # 0x1400247e4
   140004391:	lea    rsi,[rax+0x10]
   140004395:	je     0x1400043e9
   140004397:	mov    rdx,rsi
   14000439a:	call   0x14000bcf4
   14000439f:	movsxd rbx,eax
   1400043a2:	lea    ecx,[rbx+0x1]
   1400043a5:	movsxd rcx,ecx
   1400043a8:	call   0x140004000
   1400043ad:	mov    r8,QWORD PTR [rsp+0x40]
   1400043b2:	mov    r9,rsi
   1400043b5:	mov    rcx,rax
   1400043b8:	mov    rdx,rbx
   1400043bb:	mov    rdi,rax
   1400043be:	call   0x14000bc4c
   1400043c3:	lea    r8,[rip+0x170a6]        # 0x14001b470
   1400043ca:	mov    r9d,0x10
   1400043d0:	mov    rdx,rdi
   1400043d3:	xor    ecx,ecx
   1400043d5:	mov    BYTE PTR [rbx+rdi*1],0x0
   1400043d9:	call   QWORD PTR [rip+0x15f69]        # 0x14001a348
   1400043df:	mov    rcx,rdi
   1400043e2:	call   0x140004084
   1400043e7:	jmp    0x140004414
   1400043e9:	call   0x14000abc8
   1400043ee:	mov    rdx,QWORD PTR [rsp+0x40]
   1400043f3:	mov    r8,rsi
   1400043f6:	lea    rcx,[rax+0x60]
   1400043fa:	call   0x14000aba4
   1400043ff:	call   0x14000abc8
   140004404:	lea    rdx,[rip+0x16619]        # 0x14001aa24
   14000440b:	lea    rcx,[rax+0x60]
   14000440f:	call   0x14000a930
   140004414:	add    rsp,0x20
   140004418:	pop    rdi
   140004419:	pop    rsi
   14000441a:	pop    rbx
   14000441b:	ret    
   14000441c:	mov    rax,rsp
   14000441f:	mov    QWORD PTR [rax+0x8],rcx
   140004423:	mov    QWORD PTR [rax+0x10],rdx
   140004427:	mov    QWORD PTR [rax+0x18],r8
   14000442b:	mov    QWORD PTR [rax+0x20],r9
   14000442f:	push   rbp
   140004430:	push   rbx
   140004431:	push   rsi
   140004432:	push   rdi
   140004433:	push   r12
   140004435:	push   r14
   140004437:	mov    rbp,rsp
   14000443a:	sub    rsp,0x58
   14000443e:	call   0x14000bdf0
   140004443:	xor    sil,sil
   140004446:	lea    r14,[rbp+0x40]
   14000444a:	mov    ebx,DWORD PTR [rax]
   14000444c:	and    QWORD PTR [rbp-0x18],0x0
   140004451:	call   QWORD PTR [rip+0x15c19]        # 0x14001a070
   140004457:	test   eax,eax
   140004459:	je     0x1400044c5
   14000445b:	and    QWORD PTR [rsp+0x30],0x0
   140004461:	and    DWORD PTR [rsp+0x28],0x0
   140004466:	lea    rcx,[rbp-0x18]
   14000446a:	mov    QWORD PTR [rsp+0x20],rcx
   14000446f:	xor    r9d,r9d
   140004472:	mov    r8d,eax
   140004475:	mov    ecx,0x1300
   14000447a:	xor    edx,edx
   14000447c:	call   QWORD PTR [rip+0x15be6]        # 0x14001a068
   140004482:	mov    rdx,QWORD PTR [rbp-0x18]
   140004486:	movsxd r11,eax
   140004489:	test   rdx,rdx
   14000448c:	je     0x1400044bc
   14000448e:	test   eax,eax
   140004490:	je     0x1400044bc
   140004492:	mov    sil,0x1
   140004495:	cmp    r11d,0x2
   140004499:	jle    0x1400044d0
   14000449b:	cmp    BYTE PTR [r11+rdx*1-0x1],0xa
   1400044a1:	jne    0x1400044a6
   1400044a3:	dec    r11d
   1400044a6:	movsxd rax,r11d
   1400044a9:	cmp    BYTE PTR [rax+rdx*1-0x1],0xd
   1400044ae:	jne    0x1400044b3
   1400044b0:	dec    r11d
   1400044b3:	movsxd rax,r11d
   1400044b6:	mov    BYTE PTR [rax+rdx*1],0x0
   1400044ba:	jmp    0x1400044d0
   1400044bc:	lea    rax,[rip+0x16fd0]        # 0x14001b493
   1400044c3:	jmp    0x1400044cc
   1400044c5:	mov    ecx,ebx
   1400044c7:	call   0x14000bd0c
   1400044cc:	mov    QWORD PTR [rbp-0x18],rax
   1400044d0:	cmp    BYTE PTR [rip+0x2030d],0x0        # 0x1400247e4
   1400044d7:	je     0x140004550
   1400044d9:	mov    rcx,QWORD PTR [rbp+0x38]
   1400044dd:	mov    rdx,r14
   1400044e0:	call   0x14000bcf4
   1400044e5:	lea    ebx,[rax+0x1]
   1400044e8:	movsxd r12,ebx
   1400044eb:	test   sil,sil
   1400044ee:	je     0x1400044fb
   1400044f0:	mov    rcx,QWORD PTR [rbp-0x18]
   1400044f4:	call   0x140009fd0
   1400044f9:	add    ebx,eax
   1400044fb:	movsxd rcx,ebx
   1400044fe:	call   0x140004000
   140004503:	mov    r8,QWORD PTR [rbp+0x38]
   140004507:	mov    r9,r14
   14000450a:	mov    rcx,rax
   14000450d:	mov    rdx,r12
   140004510:	mov    rdi,rax
   140004513:	call   0x14000bc4c
   140004518:	mov    BYTE PTR [r12+rdi*1],0x0
   14000451d:	test   sil,sil
   140004520:	je     0x14000452e
   140004522:	mov    rdx,QWORD PTR [rbp-0x18]
   140004526:	mov    rcx,rdi
   140004529:	call   0x14000a6e0
   14000452e:	lea    r8,[rip+0x16f3b]        # 0x14001b470
   140004535:	mov    r9d,0x10
   14000453b:	mov    rdx,rdi
   14000453e:	xor    ecx,ecx
   140004540:	call   QWORD PTR [rip+0x15e02]        # 0x14001a348
   140004546:	mov    rcx,rdi
   140004549:	call   0x140004084
   14000454e:	jmp    0x140004583
   140004550:	call   0x14000abc8
   140004555:	mov    rdx,QWORD PTR [rbp+0x38]
   140004559:	mov    r8,r14
   14000455c:	lea    rcx,[rax+0x60]
   140004560:	call   0x14000aba4
   140004565:	test   sil,sil
   140004568:	je     0x140004592
   14000456a:	call   0x14000abc8
   14000456f:	mov    r8,QWORD PTR [rbp-0x18]
   140004573:	lea    rdx,[rip+0x16f16]        # 0x14001b490
   14000457a:	lea    rcx,[rax+0x60]
   14000457e:	call   0x14000a930
   140004583:	test   sil,sil
   140004586:	je     0x140004592
   140004588:	mov    rcx,QWORD PTR [rbp-0x18]
   14000458c:	call   QWORD PTR [rip+0x15ace]        # 0x14001a060
   140004592:	add    rsp,0x58
   140004596:	pop    r14
   140004598:	pop    r12
   14000459a:	pop    rdi
   14000459b:	pop    rsi
   14000459c:	pop    rbx
   14000459d:	pop    rbp
   14000459e:	ret    
   14000459f:	int3   
   1400045a0:	cmp    BYTE PTR [rip+0x2023d],0x0        # 0x1400247e4
   1400045a7:	je     0x1400045c6
   1400045a9:	lea    r8,[rip+0x16ec0]        # 0x14001b470
   1400045b0:	lea    rdx,[rip+0x16ee1]        # 0x14001b498
   1400045b7:	mov    r9d,0x10
   1400045bd:	xor    ecx,ecx
   1400045bf:	rex.W jmp QWORD PTR [rip+0x15d82]        # 0x14001a348
   1400045c6:	mov    rax,QWORD PTR [rcx]
   1400045c9:	rex.W jmp QWORD PTR [rax+0x80]
   1400045d0:	sub    rsp,0x28
   1400045d4:	call   0x140001f0c
   1400045d9:	cmp    eax,0x2
   1400045dc:	sete   al
   1400045df:	add    rsp,0x28
   1400045e3:	ret    
   1400045e4:	mov    QWORD PTR [rsp+0x10],rbx
   1400045e9:	mov    QWORD PTR [rsp+0x18],rsi
   1400045ee:	mov    QWORD PTR [rsp+0x20],rdi
   1400045f3:	push   rbp
   1400045f4:	push   r12
   1400045f6:	push   r13
   1400045f8:	lea    rbp,[rsp-0x80]
   1400045fd:	sub    rsp,0x180
   140004604:	mov    rax,QWORD PTR [rip+0x1eab5]        # 0x1400230c0
   14000460b:	xor    rax,rsp
   14000460e:	mov    QWORD PTR [rbp+0x70],rax
   140004612:	and    QWORD PTR [rsp+0x30],0x0
   140004618:	mov    r13,rcx
   14000461b:	mov    QWORD PTR [rsp+0x48],0xffffffff80000001
   140004624:	xor    edi,edi
   140004626:	mov    QWORD PTR [rsp+0x50],0xffffffff80000002
   14000462f:	mov    rcx,QWORD PTR [rsp+rdi*8+0x48]
   140004634:	lea    rax,[rsp+0x30]
   140004639:	lea    rdx,[rip+0x16e88]        # 0x14001b4c8
   140004640:	mov    r9d,0x20019
   140004646:	xor    r8d,r8d
   140004649:	mov    QWORD PTR [rsp+0x20],rax
   14000464e:	call   QWORD PTR [rip+0x159b4]        # 0x14001a008
   140004654:	test   eax,eax
   140004656:	jne    0x140004781
   14000465c:	mov    r12,QWORD PTR [rsp+0x30]
   140004661:	lea    r8,[rsp+0x60]
   140004666:	mov    r9d,0x104
   14000466c:	xor    edx,edx
   14000466e:	mov    rcx,r12
   140004671:	xor    esi,esi
   140004673:	xor    ebx,ebx
   140004675:	call   QWORD PTR [rip+0x15995]        # 0x14001a010
   14000467b:	test   eax,eax
   14000467d:	jne    0x140004781
   140004683:	mov    rdx,QWORD PTR [r13+0x10]
   140004687:	lea    rcx,[rsp+0x60]
   14000468c:	inc    esi
   14000468e:	call   0x140006f0c
   140004693:	test   eax,eax
   140004695:	je     0x1400046c2
   140004697:	test   rbx,rbx
   14000469a:	je     0x1400046b5
   14000469c:	lea    rcx,[rsp+0x60]
   1400046a1:	mov    rdx,rbx
   1400046a4:	call   0x140006dfc
   1400046a9:	test   eax,eax
   1400046ab:	jle    0x1400046c2
   1400046ad:	mov    rcx,rbx
   1400046b0:	call   0x140004084
   1400046b5:	lea    rcx,[rsp+0x60]
   1400046ba:	call   0x140004058
   1400046bf:	mov    rbx,rax
   1400046c2:	lea    r8,[rsp+0x60]
   1400046c7:	mov    r9d,0x104
   1400046cd:	mov    edx,esi
   1400046cf:	mov    rcx,r12
   1400046d2:	call   QWORD PTR [rip+0x15938]        # 0x14001a010
   1400046d8:	test   eax,eax
   1400046da:	je     0x140004683
   1400046dc:	test   rbx,rbx
   1400046df:	je     0x140004781
   1400046e5:	lea    rax,[rsp+0x38]
   1400046ea:	mov    r9d,0x20019
   1400046f0:	xor    r8d,r8d
   1400046f3:	mov    rdx,rbx
   1400046f6:	mov    rcx,r12
   1400046f9:	mov    QWORD PTR [rsp+0x20],rax
   1400046fe:	call   QWORD PTR [rip+0x15904]        # 0x14001a008
   140004704:	mov    rcx,rbx
   140004707:	test   eax,eax
   140004709:	je     0x140004722
   14000470b:	call   0x140004084
   140004710:	mov    rcx,QWORD PTR [rsp+0x38]
   140004715:	test   rcx,rcx
   140004718:	je     0x140004781
   14000471a:	call   QWORD PTR [rip+0x158e0]        # 0x14001a000
   140004720:	jmp    0x140004781
   140004722:	call   0x140004084
   140004727:	mov    rcx,QWORD PTR [rsp+0x38]
   14000472c:	lea    rax,[rsp+0x40]
   140004731:	mov    QWORD PTR [rsp+0x28],rax
   140004736:	lea    rax,[rsp+0x60]
   14000473b:	lea    rdx,[rip+0x16d76]        # 0x14001b4b8
   140004742:	xor    r9d,r9d
   140004745:	xor    r8d,r8d
   140004748:	mov    DWORD PTR [rsp+0x40],0x104
   140004750:	mov    QWORD PTR [rsp+0x20],rax
   140004755:	call   QWORD PTR [rip+0x158bd]        # 0x14001a018
   14000475b:	mov    rcx,QWORD PTR [rsp+0x38]
   140004760:	test   eax,eax
   140004762:	jne    0x140004715
   140004764:	test   rcx,rcx
   140004767:	je     0x14000476f
   140004769:	call   QWORD PTR [rip+0x15891]        # 0x14001a000
   14000476f:	lea    rcx,[rsp+0x60]
   140004774:	call   0x140004058
   140004779:	mov    rbx,rax
   14000477c:	test   rax,rax
   14000477f:	jne    0x1400047c9
   140004781:	mov    rcx,QWORD PTR [rsp+0x30]
   140004786:	test   rcx,rcx
   140004789:	je     0x140004791
   14000478b:	call   QWORD PTR [rip+0x1586f]        # 0x14001a000
   140004791:	inc    rdi
   140004794:	cmp    rdi,0x1
   140004798:	jle    0x14000462f
   14000479e:	xor    eax,eax
   1400047a0:	mov    rcx,QWORD PTR [rbp+0x70]
   1400047a4:	xor    rcx,rsp
   1400047a7:	call   0x14000a850
   1400047ac:	lea    r11,[rsp+0x180]
   1400047b4:	mov    rbx,QWORD PTR [r11+0x28]
   1400047b8:	mov    rsi,QWORD PTR [r11+0x30]
   1400047bc:	mov    rdi,QWORD PTR [r11+0x38]
   1400047c0:	mov    rsp,r11
   1400047c3:	pop    r13
   1400047c5:	pop    r12
   1400047c7:	pop    rbp
   1400047c8:	ret    
   1400047c9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400047ce:	test   rcx,rcx
   1400047d1:	je     0x1400047d9
   1400047d3:	call   QWORD PTR [rip+0x15827]        # 0x14001a000
   1400047d9:	mov    rax,rbx
   1400047dc:	jmp    0x1400047a0
   1400047de:	int3   
   1400047df:	int3   
   1400047e0:	mov    rdx,QWORD PTR [rcx]
   1400047e3:	xor    r9d,r9d
   1400047e6:	xor    r11d,r11d
   1400047e9:	jmp    0x1400047f6
   1400047eb:	cmp    al,0x20
   1400047ed:	je     0x1400047f3
   1400047ef:	cmp    al,0x9
   1400047f1:	jne    0x1400047fc
   1400047f3:	inc    rdx
   1400047f6:	mov    al,BYTE PTR [rdx]
   1400047f8:	test   al,al
   1400047fa:	jne    0x1400047eb
   1400047fc:	mov    r8,rdx
   1400047ff:	cmp    BYTE PTR [rdx],r9b
   140004802:	je     0x140004869
   140004804:	test   r11d,r11d
   140004807:	jne    0x140004813
   140004809:	cmp    BYTE PTR [rdx],0x20
   14000480c:	je     0x14000485e
   14000480e:	cmp    BYTE PTR [rdx],0x9
   140004811:	je     0x14000485e
   140004813:	cmp    BYTE PTR [rdx],0x5c
   140004816:	jne    0x140004838
   140004818:	cmp    BYTE PTR [rdx+0x1],0x22
   14000481c:	jne    0x140004838
   14000481e:	mov    eax,r9d
   140004821:	and    eax,0x80000001
   140004826:	jge    0x14000482f
   140004828:	dec    eax
   14000482a:	or     eax,0xfffffffe
   14000482d:	inc    eax
   14000482f:	test   eax,eax
   140004831:	jne    0x140004838
   140004833:	inc    rdx
   140004836:	jmp    0x140004848
   140004838:	cmp    BYTE PTR [rdx],0x22
   14000483b:	jne    0x140004848
   14000483d:	xor    eax,eax
   14000483f:	test   r11d,r11d
   140004842:	sete   al
   140004845:	mov    r11d,eax
   140004848:	mov    al,BYTE PTR [rdx]
   14000484a:	inc    rdx
   14000484d:	cmp    al,0x5c
   14000484f:	jne    0x140004856
   140004851:	inc    r9d
   140004854:	jmp    0x140004859
   140004856:	xor    r9d,r9d
   140004859:	cmp    BYTE PTR [rdx],0x0
   14000485c:	jne    0x140004804
   14000485e:	cmp    BYTE PTR [rdx],0x0
   140004861:	je     0x140004869
   140004863:	mov    BYTE PTR [rdx],0x0
   140004866:	inc    rdx
   140004869:	mov    QWORD PTR [rcx],rdx
   14000486c:	mov    rax,r8
   14000486f:	ret    
   140004870:	mov    rax,rsp
   140004873:	mov    QWORD PTR [rax+0x10],rbx
   140004877:	mov    QWORD PTR [rax+0x18],rsi
   14000487b:	mov    QWORD PTR [rax+0x20],rdi
   14000487f:	push   rbp
   140004880:	push   r12
   140004882:	push   r13
   140004884:	push   r14
   140004886:	push   r15
   140004888:	lea    rbp,[rax-0x138]
   14000488f:	sub    rsp,0x210
   140004896:	mov    rax,QWORD PTR [rip+0x1e823]        # 0x1400230c0
   14000489d:	xor    rax,rsp
   1400048a0:	mov    QWORD PTR [rbp+0x100],rax
   1400048a7:	mov    rbx,rcx
   1400048aa:	call   0x140001f04
   1400048af:	mov    esi,0x105
   1400048b4:	lea    rdx,[rbp-0x10]
   1400048b8:	xor    ecx,ecx
   1400048ba:	mov    r8d,esi
   1400048bd:	mov    rdi,rax
   1400048c0:	call   QWORD PTR [rip+0x15782]        # 0x14001a048
   1400048c6:	test   eax,eax
   1400048c8:	je     0x140004ce7
   1400048ce:	cmp    eax,0x104
   1400048d3:	jg     0x140004ce7
   1400048d9:	lea    rdx,[rbp-0x10]
   1400048dd:	lea    rcx,[rip+0x16ce4]        # 0x14001b5c8
   1400048e4:	call   0x14000408c
   1400048e9:	lea    rcx,[rip+0x16cc0]        # 0x14001b5b0
   1400048f0:	mov    rdx,rbx
   1400048f3:	call   0x14000408c
   1400048f8:	mov    rcx,rbx
   1400048fb:	call   0x140009fd0
   140004900:	lea    rdx,[rbp-0x10]
   140004904:	mov    rcx,rbx
   140004907:	mov    r8,rax
   14000490a:	call   0x14001958c
   14000490f:	test   eax,eax
   140004911:	je     0x140004d01
   140004917:	lea    r8,[rip+0x16c82]        # 0x14001b5a0
   14000491e:	lea    rcx,[rbp-0x10]
   140004922:	mov    r9,rbx
   140004925:	mov    edx,esi
   140004927:	mov    QWORD PTR [rsp+0x20],rdi
   14000492c:	call   0x140004318
   140004931:	call   QWORD PTR [rip+0x15709]        # 0x14001a040
   140004937:	mov    rcx,rax
   14000493a:	call   0x140004058
   14000493f:	lea    rcx,[rsp+0x50]
   140004944:	mov    r15,rax
   140004947:	mov    QWORD PTR [rsp+0x50],rax
   14000494c:	call   0x1400047e0
   140004951:	mov    rsi,QWORD PTR [rsp+0x50]
   140004956:	mov    rcx,rsi
   140004959:	call   0x140009fd0
   14000495e:	lea    rcx,[rbp-0x10]
   140004962:	mov    rbx,rax
   140004965:	call   0x140009fd0
   14000496a:	lea    rcx,[rbx+rax*1+0x4]
   14000496f:	call   0x140004000
   140004974:	lea    rcx,[rbp-0x10]
   140004978:	mov    edx,0x20
   14000497d:	mov    rbx,rax
   140004980:	call   0x14000c07c
   140004985:	test   rax,rax
   140004988:	jne    0x1400049a9
   14000498a:	lea    edx,[rax+0x9]
   14000498d:	lea    rcx,[rbp-0x10]
   140004991:	call   0x14000c07c
   140004996:	test   rax,rax
   140004999:	jne    0x1400049a9
   14000499b:	lea    rdx,[rbp-0x10]
   14000499f:	mov    rcx,rbx
   1400049a2:	call   0x14000a780
   1400049a7:	jmp    0x1400049d3
   1400049a9:	lea    rdx,[rip+0x16bec]        # 0x14001b59c
   1400049b0:	mov    rcx,rbx
   1400049b3:	call   0x14000a780
   1400049b8:	lea    rdx,[rbp-0x10]
   1400049bc:	mov    rcx,rax
   1400049bf:	call   0x14000a6e0
   1400049c4:	lea    rdx,[rip+0x16bd1]        # 0x14001b59c
   1400049cb:	mov    rcx,rax
   1400049ce:	call   0x14000a6e0
   1400049d3:	cmp    BYTE PTR [rsi],0x0
   1400049d6:	mov    r13,rax
   1400049d9:	mov    edi,0x1
   1400049de:	je     0x140004b9d
   1400049e4:	lea    rcx,[rsp+0x50]
   1400049e9:	call   0x1400047e0
   1400049ee:	mov    r14,rax
   1400049f1:	cmp    BYTE PTR [rax],0x0
   1400049f4:	je     0x140004b4f
   1400049fa:	mov    rcx,rax
   1400049fd:	mov    rbx,rax
   140004a00:	call   0x140009fd0
   140004a05:	lea    rcx,[rdi+rax*1]
   140004a09:	call   0x140004000
   140004a0e:	cmp    BYTE PTR [rbx],0x0
   140004a11:	mov    r12,rax
   140004a14:	mov    rsi,rax
   140004a17:	je     0x140004a70
   140004a19:	mov    al,BYTE PTR [rbx]
   140004a1b:	cmp    al,0x22
   140004a1d:	je     0x140004a68
   140004a1f:	cmp    al,0x5c
   140004a21:	jne    0x140004a63
   140004a23:	lea    rdx,[rip+0x16aca]        # 0x14001b4f4
   140004a2a:	mov    rcx,rbx
   140004a2d:	call   0x14000aec0
   140004a32:	lea    r11,[rbx+rax*1]
   140004a36:	cmp    BYTE PTR [r11],0x22
   140004a3a:	jne    0x140004a5c
   140004a3c:	mov    BYTE PTR [rsi],0x5c
   140004a3f:	add    rbx,0x2
   140004a43:	add    rsi,rdi
   140004a46:	cmp    BYTE PTR [rbx],0x5c
   140004a49:	jne    0x140004a6b
   140004a4b:	cmp    rbx,r11
   140004a4e:	jb     0x140004a3c
   140004a50:	jmp    0x140004a6b
   140004a52:	mov    al,BYTE PTR [rbx]
   140004a54:	mov    BYTE PTR [rsi],al
   140004a56:	add    rsi,rdi
   140004a59:	add    rbx,rdi
   140004a5c:	cmp    rbx,r11
   140004a5f:	jb     0x140004a52
   140004a61:	jmp    0x140004a6b
   140004a63:	mov    BYTE PTR [rsi],al
   140004a65:	add    rsi,rdi
   140004a68:	add    rbx,rdi
   140004a6b:	cmp    BYTE PTR [rbx],0x0
   140004a6e:	jne    0x140004a19
   140004a70:	mov    BYTE PTR [rsi],0x0
   140004a73:	cmp    BYTE PTR [r12],0x2d
   140004a78:	jne    0x140004b5c
   140004a7e:	lea    rdx,[rip+0x1620b]        # 0x14001ac90
   140004a85:	mov    rcx,r12
   140004a88:	call   0x14000a880
   140004a8d:	test   eax,eax
   140004a8f:	je     0x140004afb
   140004a91:	lea    rdx,[rip+0x161f4]        # 0x14001ac8c
   140004a98:	mov    rcx,r12
   140004a9b:	call   0x14000a880
   140004aa0:	test   eax,eax
   140004aa2:	je     0x140004afb
   140004aa4:	lea    rdx,[rip+0x1645d]        # 0x14001af08
   140004aab:	mov    r8d,0x9
   140004ab1:	mov    rcx,r12
   140004ab4:	call   0x14000b5a0
   140004ab9:	test   eax,eax
   140004abb:	je     0x140004b47
   140004ac1:	lea    rdx,[rip+0x16428]        # 0x14001aef0
   140004ac8:	mov    rcx,r12
   140004acb:	call   0x14000a880
   140004ad0:	test   eax,eax
   140004ad2:	je     0x140004b47
   140004ad4:	lea    rdx,[rip+0x163fd]        # 0x14001aed8
   140004adb:	mov    rcx,r12
   140004ade:	call   0x14000a880
   140004ae3:	test   eax,eax
   140004ae5:	je     0x140004b47
   140004ae7:	lea    rdx,[rip+0x15c36]        # 0x14001a724
   140004aee:	mov    rcx,r13
   140004af1:	call   0x14000a6e0
   140004af6:	mov    rdx,r14
   140004af9:	jmp    0x140004b3c
   140004afb:	lea    rdx,[rip+0x15c22]        # 0x14001a724
   140004b02:	mov    rcx,r13
   140004b05:	call   0x14000a6e0
   140004b0a:	mov    rdx,r14
   140004b0d:	mov    rcx,rax
   140004b10:	call   0x14000a6e0
   140004b15:	lea    rcx,[rsp+0x50]
   140004b1a:	mov    r13,rax
   140004b1d:	call   0x1400047e0
   140004b22:	cmp    BYTE PTR [rax],0x0
   140004b25:	mov    rbx,rax
   140004b28:	je     0x140004b47
   140004b2a:	lea    rdx,[rip+0x15bf3]        # 0x14001a724
   140004b31:	mov    rcx,r13
   140004b34:	call   0x14000a6e0
   140004b39:	mov    rdx,rbx
   140004b3c:	mov    rcx,rax
   140004b3f:	call   0x14000a6e0
   140004b44:	mov    r13,rax
   140004b47:	mov    rcx,r12
   140004b4a:	call   0x140004084
   140004b4f:	mov    rax,QWORD PTR [rsp+0x50]
   140004b54:	cmp    BYTE PTR [rax],0x0
   140004b57:	jmp    0x1400049de
   140004b5c:	lea    rdx,[rip+0x15bc1]        # 0x14001a724
   140004b63:	mov    rcx,r13
   140004b66:	call   0x14000a6e0
   140004b6b:	mov    rdx,r14
   140004b6e:	mov    rcx,rax
   140004b71:	call   0x14000a6e0
   140004b76:	lea    rdx,[rip+0x15ba7]        # 0x14001a724
   140004b7d:	mov    rcx,rax
   140004b80:	call   0x14000a6e0
   140004b85:	mov    rdx,QWORD PTR [rsp+0x50]
   140004b8a:	mov    rcx,rax
   140004b8d:	call   0x14000a6e0
   140004b92:	mov    rcx,r12
   140004b95:	mov    r13,rax
   140004b98:	call   0x140004084
   140004b9d:	mov    rcx,r15
   140004ba0:	call   0x140004084
   140004ba5:	call   0x1400040f0
   140004baa:	test   al,al
   140004bac:	je     0x140004bf4
   140004bae:	mov    rcx,r13
   140004bb1:	call   0x140004058
   140004bb6:	lea    rcx,[rsp+0x50]
   140004bbb:	mov    rbx,rax
   140004bbe:	mov    QWORD PTR [rsp+0x50],rax
   140004bc3:	call   0x1400047e0
   140004bc8:	lea    rdx,[rbp-0x10]
   140004bcc:	lea    rcx,[rip+0x169ad]        # 0x14001b580
   140004bd3:	mov    r8,rax
   140004bd6:	call   0x140009c3c
   140004bdb:	mov    rdx,QWORD PTR [rsp+0x50]
   140004be0:	lea    rcx,[rip+0x16981]        # 0x14001b568
   140004be7:	call   0x140009c3c
   140004bec:	mov    rcx,rbx
   140004bef:	call   0x140004084
   140004bf4:	call   0x14000abc8
   140004bf9:	lea    rcx,[rax+0x30]
   140004bfd:	call   0x14000c02c
   140004c02:	call   0x14000abc8
   140004c07:	lea    rcx,[rax+0x60]
   140004c0b:	call   0x14000c02c
   140004c10:	mov    ebx,0x68
   140004c15:	lea    rcx,[rbp-0x80]
   140004c19:	mov    r8d,ebx
   140004c1c:	xor    edx,edx
   140004c1e:	call   0x14000a560
   140004c23:	lea    r8d,[rbx-0x50]
   140004c27:	lea    rcx,[rsp+0x60]
   140004c2c:	xor    edx,edx
   140004c2e:	mov    DWORD PTR [rbp-0x80],ebx
   140004c31:	call   0x14000a560
   140004c36:	lea    r11,[rsp+0x60]
   140004c3b:	lea    rax,[rbp-0x80]
   140004c3f:	mov    QWORD PTR [rsp+0x48],r11
   140004c44:	mov    QWORD PTR [rsp+0x40],rax
   140004c49:	and    QWORD PTR [rsp+0x38],0x0
   140004c4f:	and    QWORD PTR [rsp+0x30],0x0
   140004c55:	and    DWORD PTR [rsp+0x28],0x0
   140004c5a:	lea    rcx,[rbp-0x10]
   140004c5e:	xor    r9d,r9d
   140004c61:	xor    r8d,r8d
   140004c64:	mov    rdx,r13
   140004c67:	mov    DWORD PTR [rsp+0x20],edi
   140004c6b:	call   QWORD PTR [rip+0x1541f]        # 0x14001a090
   140004c71:	test   eax,eax
   140004c73:	jne    0x140004c8d
   140004c75:	lea    rdx,[rbp-0x10]
   140004c79:	lea    rcx,[rip+0x168c0]        # 0x14001b540
   140004c80:	call   0x14000441c
   140004c85:	mov    ecx,edi
   140004c87:	call   0x140009bdc
   140004c8c:	int3   
   140004c8d:	mov    rcx,QWORD PTR [rsp+0x60]
   140004c92:	or     ebx,0xffffffff
   140004c95:	mov    edx,ebx
   140004c97:	call   QWORD PTR [rip+0x153eb]        # 0x14001a088
   140004c9d:	cmp    eax,ebx
   140004c9f:	je     0x140004cb7
   140004ca1:	mov    rcx,QWORD PTR [rsp+0x60]
   140004ca6:	lea    rdx,[rsp+0x58]
   140004cab:	call   QWORD PTR [rip+0x153cf]        # 0x14001a080
   140004cb1:	test   eax,eax
   140004cb3:	jne    0x140004cc7
   140004cb5:	jmp    0x140004cc3
   140004cb7:	lea    rcx,[rip+0x1685a]        # 0x14001b518
   140004cbe:	call   0x140004370
   140004cc3:	mov    DWORD PTR [rsp+0x58],edi
   140004cc7:	mov    rcx,QWORD PTR [rsp+0x68]
   140004ccc:	call   QWORD PTR [rip+0x153a6]        # 0x14001a078
   140004cd2:	mov    rcx,QWORD PTR [rsp+0x60]
   140004cd7:	call   QWORD PTR [rip+0x1539b]        # 0x14001a078
   140004cdd:	mov    ecx,DWORD PTR [rsp+0x58]
   140004ce1:	call   0x140009bdc
   140004ce6:	int3   
   140004ce7:	lea    rcx,[rip+0x1680a]        # 0x14001b4f8
   140004cee:	mov    rdx,rdi
   140004cf1:	call   0x14000441c
   140004cf6:	mov    ecx,0x1
   140004cfb:	call   0x140009bdc
   140004d00:	int3   
   140004d01:	mov    rcx,QWORD PTR [rbp+0x100]
   140004d08:	xor    rcx,rsp
   140004d0b:	call   0x14000a850
   140004d10:	lea    r11,[rsp+0x210]
   140004d18:	mov    rbx,QWORD PTR [r11+0x38]
   140004d1c:	mov    rsi,QWORD PTR [r11+0x40]
   140004d20:	mov    rdi,QWORD PTR [r11+0x48]
   140004d24:	mov    rsp,r11
   140004d27:	pop    r15
   140004d29:	pop    r14
   140004d2b:	pop    r13
   140004d2d:	pop    r12
   140004d2f:	pop    rbp
   140004d30:	ret    
   140004d31:	int3   
   140004d32:	int3   
   140004d33:	int3   
   140004d34:	mov    QWORD PTR [rsp+0x8],rbx
   140004d39:	push   rdi
   140004d3a:	sub    rsp,0x20
   140004d3e:	mov    rbx,rcx
   140004d41:	call   0x140009fd0
   140004d46:	lea    rcx,[rax+0x2]
   140004d4a:	call   0x140004000
   140004d4f:	mov    rdx,rbx
   140004d52:	mov    rcx,rax
   140004d55:	call   0x14000a780
   140004d5a:	lea    rdx,[rip+0x1687b]        # 0x14001b5dc
   140004d61:	mov    rcx,rax
   140004d64:	call   0x14000a6e0
   140004d69:	mov    rcx,rax
   140004d6c:	mov    rdi,rax
   140004d6f:	call   0x14000c318
   140004d74:	mov    rcx,rdi
   140004d77:	mov    ebx,eax
   140004d79:	call   0x140004084
   140004d7e:	mov    eax,ebx
   140004d80:	mov    rbx,QWORD PTR [rsp+0x30]
   140004d85:	add    rsp,0x20
   140004d89:	pop    rdi
   140004d8a:	ret    
   140004d8b:	int3   
   140004d8c:	lea    rax,[rip+0x1684d]        # 0x14001b5e0
   140004d93:	ret    
   140004d94:	mov    QWORD PTR [rsp+0x8],rbx
   140004d99:	push   rdi
   140004d9a:	sub    rsp,0x20
   140004d9e:	mov    rax,QWORD PTR [rip+0x1fa53]        # 0x1400247f8
   140004da5:	mov    rbx,rdx
   140004da8:	mov    rdi,rcx
   140004dab:	test   rax,rax
   140004dae:	jne    0x140004df7
   140004db0:	lea    rcx,[rip+0x16869]        # 0x14001b620
   140004db7:	call   QWORD PTR [rip+0x152e3]        # 0x14001a0a0
   140004dbd:	test   rax,rax
   140004dc0:	jne    0x140004dc6
   140004dc2:	xor    eax,eax
   140004dc4:	jmp    0x140004dff
   140004dc6:	lea    rdx,[rip+0x16833]        # 0x14001b600
   140004dcd:	mov    rcx,rax
   140004dd0:	call   QWORD PTR [rip+0x152c2]        # 0x14001a098
   140004dd6:	mov    QWORD PTR [rip+0x1fa1b],rax        # 0x1400247f8
   140004ddd:	test   rax,rax
   140004de0:	jne    0x140004df7
   140004de2:	lea    rdx,[rip+0x16817]        # 0x14001b600
   140004de9:	lea    rcx,[rip+0x167f8]        # 0x14001b5e8
   140004df0:	call   0x140004370
   140004df5:	jmp    0x140004dc2
   140004df7:	mov    rdx,rbx
   140004dfa:	mov    rcx,rdi
   140004dfd:	call   rax
   140004dff:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e04:	add    rsp,0x20
   140004e08:	pop    rdi
   140004e09:	ret    
   140004e0a:	int3   
   140004e0b:	int3   
   140004e0c:	rex push rbx
   140004e0e:	sub    rsp,0x20
   140004e12:	xor    edx,edx
   140004e14:	mov    bl,cl
   140004e16:	lea    rcx,[rsp+0x38]
   140004e1b:	lea    r8d,[rdx+0x8]
   140004e1f:	call   0x14000a560
   140004e24:	lea    rcx,[rsp+0x38]
   140004e29:	mov    DWORD PTR [rsp+0x38],0x8
   140004e31:	call   QWORD PTR [rip+0x151f1]        # 0x14001a028
   140004e37:	mov    BYTE PTR [rip+0x1f9a7],bl        # 0x1400247e4
   140004e3d:	call   0x1400040bc
   140004e42:	add    rsp,0x20
   140004e46:	pop    rbx
   140004e47:	ret    
   140004e48:	mov    QWORD PTR [rsp+0x8],rbx
   140004e4d:	mov    QWORD PTR [rsp+0x10],rbp
   140004e52:	mov    QWORD PTR [rsp+0x18],rsi
   140004e57:	push   rdi
   140004e58:	sub    rsp,0x40
   140004e5c:	mov    rbx,r9
   140004e5f:	mov    edi,r8d
   140004e62:	mov    rsi,rdx
   140004e65:	mov    rbp,rcx
   140004e68:	call   0x140001e2c
   140004e6d:	mov    rax,QWORD PTR [rsp+0x78]
   140004e72:	mov    r11d,DWORD PTR [rsp+0x80]
   140004e7a:	mov    r9,rbx
   140004e7d:	mov    r8d,edi
   140004e80:	mov    DWORD PTR [rsp+0x30],r11d
   140004e85:	mov    QWORD PTR [rsp+0x28],rax
   140004e8a:	mov    eax,DWORD PTR [rsp+0x70]
   140004e8e:	mov    rdx,rsi
   140004e91:	mov    rcx,rbp
   140004e94:	mov    DWORD PTR [rsp+0x20],eax
   140004e98:	call   0x1400037c0
   140004e9d:	mov    rbx,QWORD PTR [rsp+0x50]
   140004ea2:	mov    rbp,QWORD PTR [rsp+0x58]
   140004ea7:	mov    rsi,QWORD PTR [rsp+0x60]
   140004eac:	add    rsp,0x40
   140004eb0:	pop    rdi
   140004eb1:	ret    
   140004eb2:	int3   
   140004eb3:	int3   
   140004eb4:	ret    0x0
   140004eb7:	int3   
   140004eb8:	xor    al,al
   140004eba:	ret    
   140004ebb:	int3   
   140004ebc:	mov    QWORD PTR [rsp+0x8],rbx
   140004ec1:	mov    QWORD PTR [rsp+0x10],rbp
   140004ec6:	mov    QWORD PTR [rsp+0x18],rsi
   140004ecb:	push   rdi
   140004ecc:	push   r12
   140004ece:	push   r13
   140004ed0:	push   r14
   140004ed2:	push   r15
   140004ed4:	sub    rsp,0x50
   140004ed8:	xor    edi,edi
   140004eda:	movsxd rsi,r8d
   140004edd:	mov    r12,rdx
   140004ee0:	mov    BYTE PTR [rsp+0x30],dil
   140004ee5:	mov    rbp,rcx
   140004ee8:	call   0x1400013f8
   140004eed:	mov    rbx,rax
   140004ef0:	mov    QWORD PTR [rsp+0x48],rax
   140004ef5:	test   rax,rax
   140004ef8:	jne    0x140004f0d
   140004efa:	lea    rcx,[rip+0x1566f]        # 0x14001a570
   140004f01:	call   0x140004370
   140004f06:	xor    eax,eax
   140004f08:	jmp    0x140005119
   140004f0d:	test   esi,esi
   140004f0f:	jne    0x140004f24
   140004f11:	xor    r8d,r8d
   140004f14:	mov    rdx,r12
   140004f17:	mov    rcx,rbp
   140004f1a:	call   0x140001550
   140004f1f:	jmp    0x140005119
   140004f24:	call   0x140003f54
   140004f29:	mov    r13,rax
   140004f2c:	call   0x140003f4c
   140004f31:	cmp    esi,eax
   140004f33:	jle    0x140004f57
   140004f35:	lea    rcx,[rip+0x1679c]        # 0x14001b6d8
   140004f3c:	mov    r8d,eax
   140004f3f:	mov    edx,esi
   140004f41:	call   0x14000408c
   140004f46:	lea    rcx,[rip+0x1676b]        # 0x14001b6b8
   140004f4d:	call   0x14000408c
   140004f52:	mov    r8d,esi
   140004f55:	jmp    0x140004f14
   140004f57:	mov    rdx,QWORD PTR [r12]
   140004f5b:	sub    eax,esi
   140004f5d:	movsxd r15,eax
   140004f60:	shl    r15,0x4
   140004f64:	add    r15,r13
   140004f67:	mov    rcx,QWORD PTR [r15]
   140004f6a:	call   0x14000a880
   140004f6f:	test   eax,eax
   140004f71:	je     0x140004f88
   140004f73:	lea    rcx,[rip+0x16716]        # 0x14001b690
   140004f7a:	call   0x14000408c
   140004f7f:	lea    rcx,[rip+0x166ea]        # 0x14001b670
   140004f86:	jmp    0x140004f4d
   140004f88:	mov    rcx,rsi
   140004f8b:	shl    rcx,0x3
   140004f8f:	call   0x140004000
   140004f94:	mov    DWORD PTR [rsp+0x34],edi
   140004f98:	mov    r13,rax
   140004f9b:	test   esi,esi
   140004f9d:	jle    0x14000507b
   140004fa3:	mov    rbx,r12
   140004fa6:	sub    rax,r12
   140004fa9:	mov    QWORD PTR [rsp+0x38],rbx
   140004fae:	mov    QWORD PTR [rsp+0x40],rax
   140004fb3:	mov    rdx,QWORD PTR [rbx]
   140004fb6:	mov    rcx,QWORD PTR [r15]
   140004fb9:	call   0x14000a880
   140004fbe:	test   eax,eax
   140004fc0:	jne    0x140004fc8
   140004fc2:	mov    al,BYTE PTR [r15+0x8]
   140004fc6:	jmp    0x140004fcb
   140004fc8:	mov    al,dil
   140004fcb:	movzx  edx,BYTE PTR [rsp+0x30]
   140004fd0:	mov    BYTE PTR [rsp+0x98],al
   140004fd7:	movzx  eax,al
   140004fda:	mov    ecx,edx
   140004fdc:	test   dl,dl
   140004fde:	cmove  ecx,eax
   140004fe1:	mov    BYTE PTR [rsp+0x30],cl
   140004fe5:	mov    rcx,QWORD PTR [rbx]
   140004fe8:	call   0x140009fd0
   140004fed:	add    eax,0x2
   140004ff0:	movsxd rbx,eax
   140004ff3:	mov    rcx,rbx
   140004ff6:	call   0x140004000
   140004ffb:	mov    rcx,QWORD PTR [rsp+0x38]
   140005000:	mov    rdx,QWORD PTR [rsp+0x40]
   140005005:	neg    BYTE PTR [rsp+0x98]
   14000500c:	mov    QWORD PTR [rdx+rcx*1],rax
   140005010:	mov    rcx,QWORD PTR [rcx]
   140005013:	sbb    r9d,r9d
   140005016:	mov    QWORD PTR [rsp+0x20],rcx
   14000501b:	lea    r8,[rip+0x16646]        # 0x14001b668
   140005022:	and    r9d,0xe
   140005026:	mov    rcx,rax
   140005029:	mov    rdx,rbx
   14000502c:	add    r9d,0x46
   140005030:	call   0x140004318
   140005035:	test   eax,eax
   140005037:	js     0x140004f06
   14000503d:	mov    rax,QWORD PTR [rsp+0x40]
   140005042:	mov    rbx,QWORD PTR [rsp+0x38]
   140005047:	lea    rcx,[rip+0x16616]        # 0x14001b664
   14000504e:	mov    rdx,QWORD PTR [rax+rbx*1]
   140005052:	call   0x14000408c
   140005057:	mov    eax,DWORD PTR [rsp+0x34]
   14000505b:	add    rbx,0x8
   14000505f:	inc    eax
   140005061:	add    r15,0x10
   140005065:	mov    QWORD PTR [rsp+0x38],rbx
   14000506a:	mov    DWORD PTR [rsp+0x34],eax
   14000506e:	cmp    eax,esi
   140005070:	jl     0x140004fb3
   140005076:	mov    rbx,QWORD PTR [rsp+0x48]
   14000507b:	mov    dl,BYTE PTR [rsp+0x30]
   14000507f:	test   dl,dl
   140005081:	jne    0x1400050a6
   140005083:	test   esi,esi
   140005085:	jle    0x140005099
   140005087:	mov    rcx,QWORD PTR [r13+rdi*8+0x0]
   14000508c:	call   0x140004084
   140005091:	inc    rdi
   140005094:	cmp    rdi,rsi
   140005097:	jl     0x140005087
   140005099:	mov    rcx,r13
   14000509c:	call   0x140004084
   1400050a1:	jmp    0x140004f52
   1400050a6:	mov    rax,QWORD PTR [rbp+0x0]
   1400050aa:	lea    r9,[rip+0x16587]        # 0x14001b638
   1400050b1:	lea    r8,[rip+0x16570]        # 0x14001b628
   1400050b8:	mov    rdx,rbx
   1400050bb:	mov    rcx,rbp
   1400050be:	call   QWORD PTR [rax+0x388]
   1400050c4:	mov    r12,rax
   1400050c7:	test   rax,rax
   1400050ca:	je     0x140004efa
   1400050d0:	mov    r8d,esi
   1400050d3:	mov    rdx,r13
   1400050d6:	mov    rcx,rbp
   1400050d9:	call   0x140001550
   1400050de:	mov    r10,QWORD PTR [rbp+0x0]
   1400050e2:	mov    r8,r12
   1400050e5:	mov    rdx,rbx
   1400050e8:	mov    rcx,rbp
   1400050eb:	mov    r9,rax
   1400050ee:	call   QWORD PTR [r10+0x390]
   1400050f5:	mov    rbx,rax
   1400050f8:	test   esi,esi
   1400050fa:	jle    0x14000510e
   1400050fc:	mov    rcx,QWORD PTR [r13+rdi*8+0x0]
   140005101:	call   0x140004084
   140005106:	inc    rdi
   140005109:	cmp    rdi,rsi
   14000510c:	jl     0x1400050fc
   14000510e:	mov    rcx,r13
   140005111:	call   0x140004084
   140005116:	mov    rax,rbx
   140005119:	lea    r11,[rsp+0x50]
   14000511e:	mov    rbx,QWORD PTR [r11+0x30]
   140005122:	mov    rbp,QWORD PTR [r11+0x38]
   140005126:	mov    rsi,QWORD PTR [r11+0x40]
   14000512a:	mov    rsp,r11
   14000512d:	pop    r15
   14000512f:	pop    r14
   140005131:	pop    r13
   140005133:	pop    r12
   140005135:	pop    rdi
   140005136:	ret    
   140005137:	int3   
   140005138:	mov    QWORD PTR [rsp+0x10],rbx
   14000513d:	mov    QWORD PTR [rsp+0x18],rsi
   140005142:	push   rbp
   140005143:	push   rdi
   140005144:	push   r12
   140005146:	lea    rbp,[rsp-0x170]
   14000514e:	sub    rsp,0x270
   140005155:	mov    rax,QWORD PTR [rip+0x1df64]        # 0x1400230c0
   14000515c:	xor    rax,rsp
   14000515f:	mov    QWORD PTR [rbp+0x160],rax
   140005166:	lea    rax,[rsp+0x30]
   14000516b:	mov    edi,edx
   14000516d:	mov    rsi,rcx
   140005170:	lea    r12,[rip+0x16351]        # 0x14001b4c8
   140005177:	mov    r9d,0x20019
   14000517d:	xor    r8d,r8d
   140005180:	mov    rcx,0xffffffff80000002
   140005187:	mov    rdx,r12
   14000518a:	mov    QWORD PTR [rsp+0x20],rax
   14000518f:	call   QWORD PTR [rip+0x14e73]        # 0x14001a008
   140005195:	xor    ebx,ebx
   140005197:	test   eax,eax
   140005199:	je     0x1400051b1
   14000519b:	lea    rcx,[rip+0x166ce]        # 0x14001b870
   1400051a2:	mov    rdx,r12
   1400051a5:	call   0x140004370
   1400051aa:	xor    al,al
   1400051ac:	jmp    0x1400052f5
   1400051b1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400051b6:	lea    r8,[rsp+0x40]
   1400051bb:	lea    rdx,[rip+0x1669e]        # 0x14001b860
   1400051c2:	mov    r9d,0x104
   1400051c8:	call   0x140004214
   1400051cd:	test   al,al
   1400051cf:	jne    0x1400051ed
   1400051d1:	lea    rcx,[rip+0x16648]        # 0x14001b820
   1400051d8:	mov    rdx,r12
   1400051db:	call   0x140004370
   1400051e0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400051e5:	call   QWORD PTR [rip+0x14e15]        # 0x14001a000
   1400051eb:	jmp    0x1400051aa
   1400051ed:	call   0x140001efc
   1400051f2:	lea    rcx,[rsp+0x40]
   1400051f7:	mov    rdx,rax
   1400051fa:	call   0x14000a880
   1400051ff:	test   eax,eax
   140005201:	je     0x140005221
   140005203:	call   0x140001efc
   140005208:	lea    r8,[rsp+0x40]
   14000520d:	lea    rcx,[rip+0x165bc]        # 0x14001b7d0
   140005214:	mov    r9,rax
   140005217:	mov    rdx,r12
   14000521a:	call   0x140004370
   14000521f:	jmp    0x1400051e0
   140005221:	mov    rcx,QWORD PTR [rsp+0x30]
   140005226:	lea    rax,[rsp+0x38]
   14000522b:	lea    rdx,[rsp+0x40]
   140005230:	mov    r9d,0x20019
   140005236:	xor    r8d,r8d
   140005239:	mov    QWORD PTR [rsp+0x20],rax
   14000523e:	call   QWORD PTR [rip+0x14dc4]        # 0x14001a008
   140005244:	test   eax,eax
   140005246:	je     0x14000525e
   140005248:	lea    r8,[rsp+0x40]
   14000524d:	lea    rcx,[rip+0x1661c]        # 0x14001b870
   140005254:	mov    rdx,r12
   140005257:	call   0x140004370
   14000525c:	jmp    0x1400051e0
   14000525e:	mov    rcx,QWORD PTR [rsp+0x38]
   140005263:	lea    rdx,[rip+0x1624e]        # 0x14001b4b8
   14000526a:	mov    r9d,edi
   14000526d:	mov    r8,rsi
   140005270:	call   0x140004214
   140005275:	test   al,al
   140005277:	jne    0x14000528f
   140005279:	lea    r8,[rsp+0x40]
   14000527e:	lea    rcx,[rip+0x16513]        # 0x14001b798
   140005285:	mov    rdx,r12
   140005288:	call   0x140004370
   14000528d:	jmp    0x1400052dd
   14000528f:	call   0x1400040f0
   140005294:	test   al,al
   140005296:	je     0x1400052db
   140005298:	mov    rcx,QWORD PTR [rsp+0x38]
   14000529d:	lea    r8,[rbp+0x50]
   1400052a1:	lea    rdx,[rip+0x164e0]        # 0x14001b788
   1400052a8:	mov    r9d,0x104
   1400052ae:	call   0x140004214
   1400052b3:	test   al,al
   1400052b5:	jne    0x1400052c6
   1400052b7:	lea    rcx,[rip+0x164a2]        # 0x14001b760
   1400052be:	call   0x140009c3c
   1400052c3:	mov    BYTE PTR [rbp+0x50],bl
   1400052c6:	lea    r8,[rbp+0x50]
   1400052ca:	lea    rdx,[rsp+0x40]
   1400052cf:	lea    rcx,[rip+0x16462]        # 0x14001b738
   1400052d6:	call   0x140009c3c
   1400052db:	mov    bl,0x1
   1400052dd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400052e2:	call   QWORD PTR [rip+0x14d18]        # 0x14001a000
   1400052e8:	mov    rcx,QWORD PTR [rsp+0x38]
   1400052ed:	call   QWORD PTR [rip+0x14d0d]        # 0x14001a000
   1400052f3:	mov    al,bl
   1400052f5:	mov    rcx,QWORD PTR [rbp+0x160]
   1400052fc:	xor    rcx,rsp
   1400052ff:	call   0x14000a850
   140005304:	lea    r11,[rsp+0x270]
   14000530c:	mov    rbx,QWORD PTR [r11+0x28]
   140005310:	mov    rsi,QWORD PTR [r11+0x30]
   140005314:	mov    rsp,r11
   140005317:	pop    r12
   140005319:	pop    rdi
   14000531a:	pop    rbp
   14000531b:	ret    
   14000531c:	mov    QWORD PTR [rsp+0x18],rbx
   140005321:	push   rdi
   140005322:	sub    rsp,0x170
   140005329:	mov    rax,QWORD PTR [rip+0x1dd90]        # 0x1400230c0
   140005330:	xor    rax,rsp
   140005333:	mov    QWORD PTR [rsp+0x160],rax
   14000533b:	mov    edi,edx
   14000533d:	mov    rbx,rcx
   140005340:	call   0x1400041cc
   140005345:	test   al,al
   140005347:	je     0x1400053c5
   140005349:	lea    r8,[rip+0x16598]        # 0x14001b8e8
   140005350:	lea    rcx,[rsp+0x50]
   140005355:	mov    r9,rbx
   140005358:	mov    edx,0x104
   14000535d:	call   0x140004318
   140005362:	lea    rdx,[rsp+0x20]
   140005367:	lea    rcx,[rsp+0x50]
   14000536c:	call   0x14000b658
   140005371:	test   eax,eax
   140005373:	jne    0x140005388
   140005375:	lea    rcx,[rip+0x1655c]        # 0x14001b8d8
   14000537c:	mov    rdx,rbx
   14000537f:	call   0x14000408c
   140005384:	mov    al,0x1
   140005386:	jmp    0x1400053e1
   140005388:	lea    r8,[rip+0x16531]        # 0x14001b8c0
   14000538f:	lea    rcx,[rsp+0x50]
   140005394:	mov    r9,rbx
   140005397:	mov    edx,0x104
   14000539c:	call   0x140004318
   1400053a1:	lea    rdx,[rsp+0x20]
   1400053a6:	lea    rcx,[rsp+0x50]
   1400053ab:	call   0x14000b658
   1400053b0:	test   eax,eax
   1400053b2:	jne    0x1400053c5
   1400053b4:	lea    rdx,[rip+0x164fd]        # 0x14001b8b8
   1400053bb:	mov    rcx,rbx
   1400053be:	call   0x14000a6e0
   1400053c3:	jmp    0x140005375
   1400053c5:	mov    edx,edi
   1400053c7:	mov    rcx,rbx
   1400053ca:	call   0x140005138
   1400053cf:	test   al,al
   1400053d1:	jne    0x140005375
   1400053d3:	lea    rcx,[rip+0x164be]        # 0x14001b898
   1400053da:	call   0x140004370
   1400053df:	xor    al,al
   1400053e1:	mov    rcx,QWORD PTR [rsp+0x160]
   1400053e9:	xor    rcx,rsp
   1400053ec:	call   0x14000a850
   1400053f1:	mov    rbx,QWORD PTR [rsp+0x190]
   1400053f9:	add    rsp,0x170
   140005400:	pop    rdi
   140005401:	ret    
   140005402:	int3   
   140005403:	int3   
   140005404:	mov    QWORD PTR [rsp+0x10],rbx
   140005409:	push   rdi
   14000540a:	sub    rsp,0x140
   140005411:	mov    rax,QWORD PTR [rip+0x1dca8]        # 0x1400230c0
   140005418:	xor    rax,rsp
   14000541b:	mov    QWORD PTR [rsp+0x130],rax
   140005423:	mov    rdi,rcx
   140005426:	lea    rcx,[rsp+0x20]
   14000542b:	mov    edx,0x104
   140005430:	call   0x14000531c
   140005435:	test   al,al
   140005437:	jne    0x14000543d
   140005439:	xor    eax,eax
   14000543b:	jmp    0x1400054a2
   14000543d:	mov    rcx,QWORD PTR [rip+0x1dc3c]        # 0x140023080
   140005444:	call   0x140009fd0
   140005449:	lea    rcx,[rsp+0x20]
   14000544e:	mov    rbx,rax
   140005451:	call   0x140009fd0
   140005456:	add    rbx,rax
   140005459:	cmp    rbx,0x104
   140005460:	jae    0x140005439
   140005462:	mov    rdx,QWORD PTR [rip+0x1dc17]        # 0x140023080
   140005469:	lea    rcx,[rsp+0x20]
   14000546e:	call   0x14000a6e0
   140005473:	mov    rax,QWORD PTR [rip+0x1f376]        # 0x1400247f0
   14000547a:	test   rax,rax
   14000547d:	jne    0x140005496
   14000547f:	lea    rcx,[rsp+0x20]
   140005484:	call   QWORD PTR [rip+0x14c1e]        # 0x14001a0a8
   14000548a:	mov    QWORD PTR [rip+0x1f35f],rax        # 0x1400247f0
   140005491:	test   rax,rax
   140005494:	je     0x140005439
   140005496:	mov    rdx,rdi
   140005499:	mov    rcx,rax
   14000549c:	call   QWORD PTR [rip+0x14bf6]        # 0x14001a098
   1400054a2:	mov    rcx,QWORD PTR [rsp+0x130]
   1400054aa:	xor    rcx,rsp
   1400054ad:	call   0x14000a850
   1400054b2:	mov    rbx,QWORD PTR [rsp+0x158]
   1400054ba:	add    rsp,0x140
   1400054c1:	pop    rdi
   1400054c2:	ret    
   1400054c3:	int3   
   1400054c4:	rex push rbx
   1400054c6:	push   rbp
   1400054c7:	push   rsi
   1400054c8:	push   rdi
   1400054c9:	push   r12
   1400054cb:	push   r13
   1400054cd:	push   r14
   1400054cf:	push   r15
   1400054d1:	sub    rsp,0x88
   1400054d8:	mov    rax,QWORD PTR [rip+0x1dbe1]        # 0x1400230c0
   1400054df:	xor    rax,rsp
   1400054e2:	mov    QWORD PTR [rsp+0x78],rax
   1400054e7:	mov    rax,QWORD PTR [rsp+0x100]
   1400054ef:	mov    rsi,QWORD PTR [rsp+0xf0]
   1400054f7:	mov    rbx,QWORD PTR [rdx]
   1400054fa:	xor    ebp,ebp
   1400054fc:	mov    QWORD PTR [rsp+0x40],rax
   140005501:	mov    r15d,r9d
   140005504:	mov    r13,r8
   140005507:	mov    r14,rdx
   14000550a:	mov    r12,rcx
   14000550d:	mov    edi,0x40
   140005512:	cmp    DWORD PTR [rcx],ebp
   140005514:	jle    0x14000559c
   14000551a:	mov    rcx,QWORD PTR [rbx]
   14000551d:	lea    rdx,[rip+0x165c4]        # 0x14001bae8
   140005524:	call   0x14000a880
   140005529:	test   eax,eax
   14000552b:	je     0x14000556d
   14000552d:	mov    rcx,QWORD PTR [rbx]
   140005530:	lea    rdx,[rip+0x154dd]        # 0x14001aa14
   140005537:	call   0x14000a880
   14000553c:	test   eax,eax
   14000553e:	je     0x14000556d
   140005540:	mov    rcx,QWORD PTR [rbx]
   140005543:	lea    rdx,[rip+0x16596]        # 0x14001bae0
   14000554a:	call   0x14000a880
   14000554f:	test   eax,eax
   140005551:	je     0x140005566
   140005553:	mov    rcx,QWORD PTR [rbx]
   140005556:	lea    rdx,[rip+0x154bf]        # 0x14001aa1c
   14000555d:	call   0x14000a880
   140005562:	test   eax,eax
   140005564:	jne    0x140005572
   140005566:	mov    edi,0x20
   14000556b:	jmp    0x140005572
   14000556d:	mov    edi,0x40
   140005572:	inc    ebp
   140005574:	add    rbx,0x8
   140005578:	cmp    ebp,DWORD PTR [r12]
   14000557c:	jl     0x14000551a
   14000557e:	cmp    edi,0x40
   140005581:	je     0x14000559c
   140005583:	lea    rcx,[rip+0x164f6]        # 0x14001ba80
   14000558a:	mov    edx,edi
   14000558c:	call   0x140004370
   140005591:	mov    ecx,0x1
   140005596:	call   0x140009bdc
   14000559b:	int3   
   14000559c:	mov    edx,r15d
   14000559f:	mov    rcx,r13
   1400055a2:	call   0x14000531c
   1400055a7:	xor    ebp,ebp
   1400055a9:	test   al,al
   1400055ab:	jne    0x1400055c2
   1400055ad:	lea    rcx,[rip+0x16494]        # 0x14001ba48
   1400055b4:	call   0x140004370
   1400055b9:	lea    ecx,[rbp+0x2]
   1400055bc:	call   0x140009bdc
   1400055c1:	int3   
   1400055c2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400055c7:	movsxd rdx,DWORD PTR [rsp+0x108]
   1400055cf:	lea    rcx,[rip+0x15f1e]        # 0x14001b4f4
   1400055d6:	mov    QWORD PTR [rsp+0x38],rcx
   1400055db:	lea    rax,[rip+0x15e86]        # 0x14001b468
   1400055e2:	lea    r8,[rip+0x16447]        # 0x14001ba30
   1400055e9:	mov    QWORD PTR [rsp+0x30],rax
   1400055ee:	mov    QWORD PTR [rsp+0x28],rcx
   1400055f3:	mov    QWORD PTR [rsp+0x20],rcx
   1400055f8:	mov    rcx,rbx
   1400055fb:	mov    r9,r13
   1400055fe:	call   0x140004318
   140005603:	xor    edx,edx
   140005605:	mov    rcx,rbx
   140005608:	call   0x1400033a0
   14000560d:	mov    r15d,0x1
   140005613:	cmp    eax,r15d
   140005616:	jge    0x14000562d
   140005618:	lea    rcx,[rip+0x163d9]        # 0x14001b9f8
   14000561f:	call   0x140004370
   140005624:	mov    ecx,r15d
   140005627:	call   0x140009bdc
   14000562c:	int3   
   14000562d:	xor    r8d,r8d
   140005630:	mov    rdx,r14
   140005633:	mov    rcx,r12
   140005636:	call   0x140002420
   14000563b:	lea    rdx,[rip+0x155b2]        # 0x14001abf4
   140005642:	mov    rcx,rax
   140005645:	mov    rbx,rax
   140005648:	call   0x14000a880
   14000564d:	test   eax,eax
   14000564f:	jne    0x140005668
   140005651:	lea    rcx,[rip+0x16378]        # 0x14001b9d0
   140005658:	call   0x140004370
   14000565d:	mov    ecx,0x4
   140005662:	call   0x140009bdc
   140005667:	int3   
   140005668:	mov    edx,0x2f
   14000566d:	mov    rcx,rbx
   140005670:	mov    BYTE PTR [rsi],bpl
   140005673:	call   0x14000c07c
   140005678:	test   rax,rax
   14000567b:	jne    0x1400056ae
   14000567d:	lea    edx,[rax+0x5c]
   140005680:	mov    rcx,rbx
   140005683:	call   0x14000c07c
   140005688:	test   rax,rax
   14000568b:	jne    0x1400056ae
   14000568d:	movsxd rdx,DWORD PTR [rsp+0xf8]
   140005695:	lea    r8,[rip+0x16084]        # 0x14001b720
   14000569c:	mov    r9,r13
   14000569f:	mov    rcx,rsi
   1400056a2:	mov    QWORD PTR [rsp+0x20],rbx
   1400056a7:	call   0x140004318
   1400056ac:	jmp    0x1400056c8
   1400056ae:	movsxd rdx,DWORD PTR [rsp+0xf8]
   1400056b6:	lea    r8,[rip+0x16053]        # 0x14001b710
   1400056bd:	mov    r9,rbx
   1400056c0:	mov    rcx,rsi
   1400056c3:	call   0x140004318
   1400056c8:	lea    rdx,[rsp+0x48]
   1400056cd:	mov    rcx,rsi
   1400056d0:	call   0x14000b658
   1400056d5:	test   eax,eax
   1400056d7:	je     0x1400056f6
   1400056d9:	lea    rcx,[rip+0x16280]        # 0x14001b960
   1400056e0:	mov    r8,rsi
   1400056e3:	mov    rdx,rbx
   1400056e6:	call   0x140004370
   1400056eb:	mov    ecx,0x4
   1400056f0:	call   0x140009bdc
   1400056f5:	int3   
   1400056f6:	mov    rbx,QWORD PTR [r14]
   1400056f9:	mov    edi,ebp
   1400056fb:	cmp    DWORD PTR [r12],ebp
   1400056ff:	jle    0x14000578b
   140005705:	mov    ecx,DWORD PTR [rip+0x1d96d]        # 0x140023078
   14000570b:	test   ecx,ecx
   14000570d:	jns    0x140005733
   14000570f:	mov    rdx,QWORD PTR [rbx]
   140005712:	lea    rcx,[rip+0x16227]        # 0x14001b940
   140005719:	call   0x140004178
   14000571e:	mov    ecx,DWORD PTR [rip+0x1d954]        # 0x140023078
   140005724:	cmp    eax,r15d
   140005727:	cmove  ecx,r15d
   14000572b:	mov    DWORD PTR [rip+0x1d947],ecx        # 0x140023078
   140005731:	test   ecx,ecx
   140005733:	je     0x140005776
   140005735:	mov    rdx,QWORD PTR [rbx]
   140005738:	lea    rcx,[rip+0x161e9]        # 0x14001b928
   14000573f:	call   0x140004178
   140005744:	cmp    eax,r15d
   140005747:	je     0x140005785
   140005749:	mov    rdx,QWORD PTR [rbx]
   14000574c:	lea    rcx,[rip+0x161bd]        # 0x14001b910
   140005753:	call   0x140004178
   140005758:	test   eax,eax
   14000575a:	je     0x140005785
   14000575c:	mov    rdx,QWORD PTR [rbx]
   14000575f:	lea    rcx,[rip+0x16192]        # 0x14001b8f8
   140005766:	call   0x140004178
   14000576b:	cmp    eax,r15d
   14000576e:	je     0x140005785
   140005770:	mov    ecx,DWORD PTR [rip+0x1d902]        # 0x140023078
   140005776:	add    edi,r15d
   140005779:	add    rbx,0x8
   14000577d:	cmp    edi,DWORD PTR [r12]
   140005781:	jge    0x14000578b
   140005783:	jmp    0x14000570b
   140005785:	mov    DWORD PTR [rip+0x1d8ed],ebp        # 0x140023078
   14000578b:	mov    rcx,QWORD PTR [rsp+0x78]
   140005790:	xor    rcx,rsp
   140005793:	call   0x14000a850
   140005798:	add    rsp,0x88
   14000579f:	pop    r15
   1400057a1:	pop    r14
   1400057a3:	pop    r13
   1400057a5:	pop    r12
   1400057a7:	pop    rdi
   1400057a8:	pop    rsi
   1400057a9:	pop    rbp
   1400057aa:	pop    rbx
   1400057ab:	ret    
   1400057ac:	rex push rbx
   1400057ae:	sub    rsp,0x140
   1400057b5:	mov    rax,QWORD PTR [rip+0x1d904]        # 0x1400230c0
   1400057bc:	xor    rax,rsp
   1400057bf:	mov    QWORD PTR [rsp+0x130],rax
   1400057c7:	cmp    DWORD PTR [rip+0x1f01a],0x0        # 0x1400247e8
   1400057ce:	jne    0x14000588d
   1400057d4:	lea    rcx,[rsp+0x20]
   1400057d9:	mov    edx,0x104
   1400057de:	call   0x14000531c
   1400057e3:	test   al,al
   1400057e5:	je     0x140005883
   1400057eb:	lea    rcx,[rip+0x16366]        # 0x14001bb58
   1400057f2:	call   0x140009fd0
   1400057f7:	lea    rcx,[rip+0x16352]        # 0x14001bb50
   1400057fe:	mov    rbx,rax
   140005801:	call   0x140009fd0
   140005806:	lea    rcx,[rsp+0x20]
   14000580b:	add    rbx,rax
   14000580e:	call   0x140009fd0
   140005813:	add    rax,rbx
   140005816:	cmp    rax,0x104
   14000581c:	jb     0x14000582e
   14000581e:	lea    rcx,[rip+0x162f3]        # 0x14001bb18
   140005825:	call   0x140004370
   14000582a:	xor    al,al
   14000582c:	jmp    0x14000588f
   14000582e:	lea    rdx,[rip+0x162cb]        # 0x14001bb00
   140005835:	lea    rcx,[rsp+0x20]
   14000583a:	call   0x14000a6e0
   14000583f:	lea    rdx,[rsp+0x20]
   140005844:	lea    rcx,[rip+0x162a5]        # 0x14001baf0
   14000584b:	call   0x14000408c
   140005850:	lea    rcx,[rsp+0x20]
   140005855:	xor    edx,edx
   140005857:	call   0x14000c3cc
   14000585c:	test   eax,eax
   14000585e:	jne    0x140005883
   140005860:	lea    rcx,[rsp+0x20]
   140005865:	call   QWORD PTR [rip+0x1483d]        # 0x14001a0a8
   14000586b:	test   rax,rax
   14000586e:	jne    0x140005883
   140005870:	lea    rdx,[rsp+0x20]
   140005875:	lea    rcx,[rip+0x15d6c]        # 0x14001b5e8
   14000587c:	call   0x140004370
   140005881:	jmp    0x14000582a
   140005883:	mov    DWORD PTR [rip+0x1ef5b],0x1        # 0x1400247e8
   14000588d:	mov    al,0x1
   14000588f:	mov    rcx,QWORD PTR [rsp+0x130]
   140005897:	xor    rcx,rsp
   14000589a:	call   0x14000a850
   14000589f:	add    rsp,0x140
   1400058a6:	pop    rbx
   1400058a7:	ret    
   1400058a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400058ad:	mov    QWORD PTR [rsp+0x10],rsi
   1400058b2:	push   rdi
   1400058b3:	sub    rsp,0x20
   1400058b7:	mov    rsi,rdx
   1400058ba:	mov    rbx,rcx
   1400058bd:	mov    rdx,rcx
   1400058c0:	lea    rcx,[rip+0x16301]        # 0x14001bbc8
   1400058c7:	call   0x14000408c
   1400058cc:	call   0x1400057ac
   1400058d1:	mov    rcx,rbx
   1400058d4:	call   QWORD PTR [rip+0x147ce]        # 0x14001a0a8
   1400058da:	mov    rdi,rax
   1400058dd:	test   rax,rax
   1400058e0:	jne    0x1400058eb
   1400058e2:	lea    rcx,[rip+0x15cff]        # 0x14001b5e8
   1400058e9:	jmp    0x140005928
   1400058eb:	lea    rdx,[rip+0x162be]        # 0x14001bbb0
   1400058f2:	mov    rcx,rax
   1400058f5:	call   QWORD PTR [rip+0x1479d]        # 0x14001a098
   1400058fb:	lea    rdx,[rip+0x1628e]        # 0x14001bb90
   140005902:	mov    rcx,rdi
   140005905:	mov    QWORD PTR [rsi],rax
   140005908:	call   QWORD PTR [rip+0x1478a]        # 0x14001a098
   14000590e:	cmp    QWORD PTR [rsi],0x0
   140005912:	mov    QWORD PTR [rsi+0x8],rax
   140005916:	je     0x140005921
   140005918:	test   rax,rax
   14000591b:	je     0x140005921
   14000591d:	mov    al,0x1
   14000591f:	jmp    0x140005932
   140005921:	lea    rcx,[rip+0x16240]        # 0x14001bb68
   140005928:	mov    rdx,rbx
   14000592b:	call   0x140004370
   140005930:	xor    al,al
   140005932:	mov    rbx,QWORD PTR [rsp+0x30]
   140005937:	mov    rsi,QWORD PTR [rsp+0x38]
   14000593c:	add    rsp,0x20
   140005940:	pop    rdi
   140005941:	ret    
   140005942:	int3   
   140005943:	int3   
   140005944:	mov    QWORD PTR [rsp+0x10],rbx
   140005949:	mov    QWORD PTR [rsp+0x18],rsi
   14000594e:	push   rdi
   14000594f:	sub    rsp,0x140
   140005956:	mov    rax,QWORD PTR [rip+0x1d763]        # 0x1400230c0
   14000595d:	xor    rax,rsp
   140005960:	mov    QWORD PTR [rsp+0x130],rax
   140005968:	mov    rsi,rcx
   14000596b:	mov    rcx,QWORD PTR [rip+0x1ee96]        # 0x140024808
   140005972:	or     ebx,0xffffffff
   140005975:	test   rcx,rcx
   140005978:	jne    0x140005a41
   14000597e:	lea    rcx,[rsp+0x20]
   140005983:	mov    edx,0x104
   140005988:	call   0x14000531c
   14000598d:	test   al,al
   14000598f:	je     0x140005a35
   140005995:	lea    rcx,[rsp+0x20]
   14000599a:	call   0x140009fd0
   14000599f:	mov    rdi,rax
   1400059a2:	call   0x1400057ac
   1400059a7:	lea    rdx,[rip+0x1625a]        # 0x14001bc08
   1400059ae:	lea    rcx,[rsp+0x20]
   1400059b3:	call   0x14000a6e0
   1400059b8:	lea    rcx,[rsp+0x20]
   1400059bd:	call   QWORD PTR [rip+0x146e5]        # 0x14001a0a8
   1400059c3:	test   rax,rax
   1400059c6:	je     0x140005a35
   1400059c8:	movsxd rdi,edi
   1400059cb:	lea    rdx,[rip+0x16226]        # 0x14001bbf8
   1400059d2:	lea    rcx,[rsp+0x20]
   1400059d7:	mov    BYTE PTR [rsp+rdi*1+0x20],0x0
   1400059dc:	call   0x14000a6e0
   1400059e1:	lea    rcx,[rsp+0x20]
   1400059e6:	call   QWORD PTR [rip+0x146bc]        # 0x14001a0a8
   1400059ec:	test   rax,rax
   1400059ef:	je     0x140005a35
   1400059f1:	lea    rdx,[rip+0x161f0]        # 0x14001bbe8
   1400059f8:	lea    rcx,[rsp+0x20]
   1400059fd:	mov    BYTE PTR [rsp+rdi*1+0x20],0x0
   140005a02:	call   0x14000a6e0
   140005a07:	lea    rcx,[rsp+0x20]
   140005a0c:	call   QWORD PTR [rip+0x14696]        # 0x14001a0a8
   140005a12:	mov    QWORD PTR [rip+0x1edef],rax        # 0x140024808
   140005a19:	test   rax,rax
   140005a1c:	je     0x140005a5d
   140005a1e:	lea    rdx,[rip+0x161b3]        # 0x14001bbd8
   140005a25:	mov    rcx,rax
   140005a28:	call   QWORD PTR [rip+0x1466a]        # 0x14001a098
   140005a2e:	mov    QWORD PTR [rip+0x1edcb],rax        # 0x140024800
   140005a35:	mov    rcx,QWORD PTR [rip+0x1edcc]        # 0x140024808
   140005a3c:	test   rcx,rcx
   140005a3f:	je     0x140005a5d
   140005a41:	mov    rdx,rsi
   140005a44:	call   QWORD PTR [rip+0x1464e]        # 0x14001a098
   140005a4a:	test   rax,rax
   140005a4d:	je     0x140005a5d
   140005a4f:	mov    DWORD PTR [rip+0x1ed87],0x1        # 0x1400247e0
   140005a59:	call   rax
   140005a5b:	mov    ebx,eax
   140005a5d:	mov    eax,ebx
   140005a5f:	mov    rcx,QWORD PTR [rsp+0x130]
   140005a67:	xor    rcx,rsp
   140005a6a:	call   0x14000a850
   140005a6f:	lea    r11,[rsp+0x140]
   140005a77:	mov    rbx,QWORD PTR [r11+0x18]
   140005a7b:	mov    rsi,QWORD PTR [r11+0x20]
   140005a7f:	mov    rsp,r11
   140005a82:	pop    rdi
   140005a83:	ret    
   140005a84:	mov    rax,rsp
   140005a87:	mov    QWORD PTR [rax+0x8],rbx
   140005a8b:	mov    QWORD PTR [rax+0x10],rbp
   140005a8f:	mov    QWORD PTR [rax+0x18],rsi
   140005a93:	push   rdi
   140005a94:	sub    rsp,0x40
   140005a98:	and    DWORD PTR [rax+0x20],0x0
   140005a9c:	lea    rax,[rax-0x18]
   140005aa0:	mov    rsi,r8
   140005aa3:	mov    r9,r8
   140005aa6:	mov    rbp,rcx
   140005aa9:	mov    r8,rcx
   140005aac:	mov    QWORD PTR [rsp+0x28],rax
   140005ab1:	xor    ecx,ecx
   140005ab3:	mov    rdi,rdx
   140005ab6:	mov    DWORD PTR [rsp+0x20],0x10000
   140005abe:	call   0x14000c4b0
   140005ac3:	mov    rbx,rax
   140005ac6:	test   rax,rax
   140005ac9:	jne    0x140005aeb
   140005acb:	lea    rax,[rsp+0x30]
   140005ad0:	mov    r9,rsi
   140005ad3:	mov    r8,rbp
   140005ad6:	mov    QWORD PTR [rsp+0x28],rax
   140005adb:	and    DWORD PTR [rsp+0x20],ebx
   140005adf:	mov    edx,edi
   140005ae1:	xor    ecx,ecx
   140005ae3:	call   0x14000c4b0
   140005ae8:	mov    rbx,rax
   140005aeb:	cmp    DWORD PTR [rip+0x1d586],0x0        # 0x140023078
   140005af2:	je     0x140005ba8
   140005af8:	lea    rcx,[rip+0x16139]        # 0x14001bc38
   140005aff:	call   0x140009da4
   140005b04:	test   rax,rax
   140005b07:	je     0x140005b28
   140005b09:	lea    rdx,[rip+0x152a4]        # 0x14001adb4
   140005b10:	mov    rcx,rax
   140005b13:	call   0x140019750
   140005b18:	neg    eax
   140005b1a:	sbb    ecx,ecx
   140005b1c:	and    ecx,DWORD PTR [rip+0x1d556]        # 0x140023078
   140005b22:	mov    DWORD PTR [rip+0x1d550],ecx        # 0x140023078
   140005b28:	lea    rcx,[rip+0x160f9]        # 0x14001bc28
   140005b2f:	call   0x140009da4
   140005b34:	mov    rdi,rax
   140005b37:	test   rax,rax
   140005b3a:	je     0x140005b5d
   140005b3c:	lea    rdx,[rip+0x15271]        # 0x14001adb4
   140005b43:	mov    rcx,rax
   140005b46:	call   0x140019750
   140005b4b:	neg    eax
   140005b4d:	sbb    ecx,ecx
   140005b4f:	and    ecx,DWORD PTR [rip+0x1d523]        # 0x140023078
   140005b55:	mov    DWORD PTR [rip+0x1d51d],ecx        # 0x140023078
   140005b5b:	jmp    0x140005b63
   140005b5d:	mov    ecx,DWORD PTR [rip+0x1d515]        # 0x140023078
   140005b63:	test   ecx,ecx
   140005b65:	jns    0x140005b9a
   140005b67:	and    DWORD PTR [rip+0x1d50a],0x0        # 0x140023078
   140005b6e:	test   rdi,rdi
   140005b71:	je     0x140005ba8
   140005b73:	lea    rdx,[rip+0x15242]        # 0x14001adbc
   140005b7a:	mov    rcx,rdi
   140005b7d:	call   0x140019750
   140005b82:	mov    ecx,DWORD PTR [rip+0x1d4f0]        # 0x140023078
   140005b88:	mov    edx,0x1
   140005b8d:	test   eax,eax
   140005b8f:	cmove  ecx,edx
   140005b92:	mov    DWORD PTR [rip+0x1d4e0],ecx        # 0x140023078
   140005b98:	test   ecx,ecx
   140005b9a:	je     0x140005ba8
   140005b9c:	lea    rcx,[rip+0x16075]        # 0x14001bc18
   140005ba3:	call   0x140005944
   140005ba8:	test   rbx,rbx
   140005bab:	je     0x140005bd2
   140005bad:	or     edx,0xffffffff
   140005bb0:	mov    rcx,rbx
   140005bb3:	call   QWORD PTR [rip+0x144cf]        # 0x14001a088
   140005bb9:	lea    rdx,[rsp+0x68]
   140005bbe:	mov    rcx,rbx
   140005bc1:	call   QWORD PTR [rip+0x144e9]        # 0x14001a0b0
   140005bc7:	mov    rcx,rbx
   140005bca:	call   QWORD PTR [rip+0x144a8]        # 0x14001a078
   140005bd0:	jmp    0x140005bdb
   140005bd2:	mov    rcx,rsi
   140005bd5:	call   rbp
   140005bd7:	mov    DWORD PTR [rsp+0x68],eax
   140005bdb:	cmp    DWORD PTR [rip+0x1ebfe],0x0        # 0x1400247e0
   140005be2:	je     0x140005bf2
   140005be4:	mov    rax,QWORD PTR [rip+0x1ec15]        # 0x140024800
   140005beb:	test   rax,rax
   140005bee:	je     0x140005bf2
   140005bf0:	call   rax
   140005bf2:	mov    eax,DWORD PTR [rsp+0x68]
   140005bf6:	mov    rbx,QWORD PTR [rsp+0x50]
   140005bfb:	mov    rbp,QWORD PTR [rsp+0x58]
   140005c00:	mov    rsi,QWORD PTR [rsp+0x60]
   140005c05:	add    rsp,0x40
   140005c09:	pop    rdi
   140005c0a:	ret    
   140005c0b:	int3   
   140005c0c:	test   rcx,rcx
   140005c0f:	je     0x140005c67
   140005c11:	mov    QWORD PTR [rsp+0x8],rbx
   140005c16:	mov    QWORD PTR [rsp+0x10],rsi
   140005c1b:	push   rdi
   140005c1c:	sub    rsp,0x20
   140005c20:	xor    edi,edi
   140005c22:	mov    rbx,rcx
   140005c25:	cmp    QWORD PTR [rcx],rdi
   140005c28:	je     0x140005c50
   140005c2a:	cmp    DWORD PTR [rcx+0x8],edi
   140005c2d:	jle    0x140005c48
   140005c2f:	mov    esi,edi
   140005c31:	mov    rcx,QWORD PTR [rbx]
   140005c34:	mov    rcx,QWORD PTR [rsi+rcx*1]
   140005c38:	call   0x140004084
   140005c3d:	inc    edi
   140005c3f:	add    rsi,0x8
   140005c43:	cmp    edi,DWORD PTR [rbx+0x8]
   140005c46:	jl     0x140005c31
   140005c48:	mov    rcx,QWORD PTR [rbx]
   140005c4b:	call   0x140004084
   140005c50:	mov    rcx,rbx
   140005c53:	call   0x140004084
   140005c58:	mov    rbx,QWORD PTR [rsp+0x30]
   140005c5d:	mov    rsi,QWORD PTR [rsp+0x38]
   140005c62:	add    rsp,0x20
   140005c66:	pop    rdi
   140005c67:	ret    
   140005c68:	mov    rax,rsp
   140005c6b:	mov    QWORD PTR [rax+0x8],rbx
   140005c6f:	mov    QWORD PTR [rax+0x10],rbp
   140005c73:	mov    QWORD PTR [rax+0x18],rsi
   140005c77:	mov    QWORD PTR [rax+0x20],rdi
   140005c7b:	push   r12
   140005c7d:	push   r13
   140005c7f:	push   r14
   140005c81:	sub    rsp,0x20
   140005c85:	xor    edi,edi
   140005c87:	mov    r14b,dl
   140005c8a:	mov    rsi,rcx
   140005c8d:	lea    ebp,[rdi+0x1]
   140005c90:	cmp    DWORD PTR [rcx+0x8],edi
   140005c93:	jle    0x140005cb2
   140005c95:	xor    ebx,ebx
   140005c97:	mov    rcx,QWORD PTR [rsi]
   140005c9a:	mov    rcx,QWORD PTR [rcx+rbx*1]
   140005c9e:	call   0x140009fd0
   140005ca3:	inc    edi
   140005ca5:	add    rbx,0x8
   140005ca9:	lea    ebp,[rbp+rax*1+0x1]
   140005cad:	cmp    edi,DWORD PTR [rsi+0x8]
   140005cb0:	jl     0x140005c97
   140005cb2:	movsxd rcx,ebp
   140005cb5:	call   0x140004000
   140005cba:	xor    r12d,r12d
   140005cbd:	xor    r13d,r13d
   140005cc0:	mov    rbp,rax
   140005cc3:	mov    rdi,rax
   140005cc6:	cmp    DWORD PTR [rsi+0x8],r12d
   140005cca:	jle    0x140005d07
   140005ccc:	mov    rcx,QWORD PTR [rsi]
   140005ccf:	mov    rcx,QWORD PTR [rcx+r12*8]
   140005cd3:	call   0x140009fd0
   140005cd8:	test   r12,r12
   140005cdb:	jle    0x140005ce3
   140005cdd:	mov    BYTE PTR [rdi],r14b
   140005ce0:	inc    rdi
   140005ce3:	mov    rdx,QWORD PTR [rsi]
   140005ce6:	movsxd rbx,eax
   140005ce9:	mov    rcx,rdi
   140005cec:	mov    rdx,QWORD PTR [rdx+r12*8]
   140005cf0:	mov    r8,rbx
   140005cf3:	call   0x14000a170
   140005cf8:	inc    r13d
   140005cfb:	add    rdi,rbx
   140005cfe:	inc    r12
   140005d01:	cmp    r13d,DWORD PTR [rsi+0x8]
   140005d05:	jl     0x140005ccc
   140005d07:	mov    rbx,QWORD PTR [rsp+0x40]
   140005d0c:	mov    rsi,QWORD PTR [rsp+0x50]
   140005d11:	mov    BYTE PTR [rdi],0x0
   140005d14:	mov    rdi,QWORD PTR [rsp+0x58]
   140005d19:	mov    rax,rbp
   140005d1c:	mov    rbp,QWORD PTR [rsp+0x48]
   140005d21:	add    rsp,0x20
   140005d25:	pop    r14
   140005d27:	pop    r13
   140005d29:	pop    r12
   140005d2b:	ret    
   140005d2c:	mov    rax,rsp
   140005d2f:	mov    QWORD PTR [rax+0x8],rbx
   140005d33:	mov    QWORD PTR [rax+0x10],rbp
   140005d37:	mov    QWORD PTR [rax+0x18],rsi
   140005d3b:	mov    QWORD PTR [rax+0x20],rdi
   140005d3f:	push   r12
   140005d41:	push   r13
   140005d43:	push   r14
   140005d45:	sub    rsp,0x20
   140005d49:	mov    r13b,dl
   140005d4c:	mov    rbp,rcx
   140005d4f:	call   0x140009fd0
   140005d54:	movsxd r12,eax
   140005d57:	mov    ebx,0x1
   140005d5c:	mov    rcx,rbp
   140005d5f:	add    r12,rbp
   140005d62:	cmp    rbp,r12
   140005d65:	jae    0x140005d79
   140005d67:	xor    eax,eax
   140005d69:	cmp    BYTE PTR [rcx],r13b
   140005d6c:	sete   al
   140005d6f:	inc    rcx
   140005d72:	add    ebx,eax
   140005d74:	cmp    rcx,r12
   140005d77:	jb     0x140005d67
   140005d79:	mov    ecx,0x10
   140005d7e:	call   0x140004000
   140005d83:	movsxd rcx,ebx
   140005d86:	shl    rcx,0x3
   140005d8a:	mov    DWORD PTR [rax+0xc],ebx
   140005d8d:	mov    rdi,rax
   140005d90:	call   0x140004000
   140005d95:	and    DWORD PTR [rdi+0x8],0x0
   140005d99:	mov    QWORD PTR [rdi],rax
   140005d9c:	mov    rsi,rbp
   140005d9f:	cmp    rbp,r12
   140005da2:	ja     0x140005d9c
   140005da4:	cmp    BYTE PTR [rsi],r13b
   140005da7:	je     0x140005dae
   140005da9:	cmp    BYTE PTR [rsi],0x0
   140005dac:	jne    0x140005e14
   140005dae:	mov    ebx,esi
   140005db0:	sub    ebx,ebp
   140005db2:	lea    eax,[rbx+0x1]
   140005db5:	movsxd rcx,eax
   140005db8:	call   0x140004000
   140005dbd:	movsxd rbx,ebx
   140005dc0:	mov    rdx,rbp
   140005dc3:	mov    rcx,rax
   140005dc6:	mov    r8,rbx
   140005dc9:	mov    r14,rax
   140005dcc:	call   0x14000a170
   140005dd1:	mov    BYTE PTR [rbx+r14*1],0x0
   140005dd6:	mov    edx,DWORD PTR [rdi+0x8]
   140005dd9:	mov    ecx,DWORD PTR [rdi+0xc]
   140005ddc:	inc    edx
   140005dde:	cmp    ecx,edx
   140005de0:	jge    0x140005dfd
   140005de2:	add    ecx,ecx
   140005de4:	mov    DWORD PTR [rdi+0xc],ecx
   140005de7:	cmp    ecx,edx
   140005de9:	jl     0x140005de2
   140005deb:	movsxd rdx,ecx
   140005dee:	mov    rcx,QWORD PTR [rdi]
   140005df1:	shl    rdx,0x3
   140005df5:	call   0x14000402c
   140005dfa:	mov    QWORD PTR [rdi],rax
   140005dfd:	movsxd rcx,DWORD PTR [rdi+0x8]
   140005e01:	mov    rax,QWORD PTR [rdi]
   140005e04:	mov    QWORD PTR [rax+rcx*8],r14
   140005e08:	inc    DWORD PTR [rdi+0x8]
   140005e0b:	cmp    BYTE PTR [rsi],0x0
   140005e0e:	je     0x140005e21
   140005e10:	lea    rbp,[rsi+0x1]
   140005e14:	inc    rsi
   140005e17:	cmp    rsi,r12
   140005e1a:	jbe    0x140005da4
   140005e1c:	jmp    0x140005d9c
   140005e21:	mov    rbx,QWORD PTR [rsp+0x40]
   140005e26:	mov    rbp,QWORD PTR [rsp+0x48]
   140005e2b:	mov    rsi,QWORD PTR [rsp+0x50]
   140005e30:	mov    rax,rdi
   140005e33:	mov    rdi,QWORD PTR [rsp+0x58]
   140005e38:	add    rsp,0x20
   140005e3c:	pop    r14
   140005e3e:	pop    r13
   140005e40:	pop    r12
   140005e42:	ret    
   140005e43:	int3   
   140005e44:	mov    QWORD PTR [rsp+0x8],rbx
   140005e49:	mov    QWORD PTR [rsp+0x10],rbp
   140005e4e:	mov    QWORD PTR [rsp+0x18],rsi
   140005e53:	push   rdi
   140005e54:	push   r12
   140005e56:	push   r13
   140005e58:	push   r14
   140005e5a:	push   r15
   140005e5c:	sub    rsp,0x20
   140005e60:	mov    r14,rcx
   140005e63:	mov    ebx,0x10
   140005e68:	mov    ecx,ebx
   140005e6a:	call   0x140004000
   140005e6f:	lea    ecx,[rbx+0x70]
   140005e72:	mov    DWORD PTR [rax+0xc],ebx
   140005e75:	mov    rsi,rax
   140005e78:	call   0x140004000
   140005e7d:	and    DWORD PTR [rsi+0x8],0x0
   140005e81:	mov    ecx,ebx
   140005e83:	mov    QWORD PTR [rsi],rax
   140005e86:	call   0x140004000
   140005e8b:	lea    rdx,[rip+0x1e97e]        # 0x140024810
   140005e92:	mov    rcx,r14
   140005e95:	mov    r12,rax
   140005e98:	call   QWORD PTR [rip+0x1421a]        # 0x14001a0b8
   140005e9e:	cmp    rax,0xffffffffffffffff
   140005ea2:	je     0x140005fef
   140005ea8:	lea    r15,[rip+0x1e98d]        # 0x14002483c
   140005eaf:	mov    QWORD PTR [r12],rax
   140005eb3:	mov    QWORD PTR [r12+0x8],r15
   140005eb8:	mov    rbp,QWORD PTR [r12+0x8]
   140005ebd:	test   rbp,rbp
   140005ec0:	je     0x140005eca
   140005ec2:	and    QWORD PTR [r12+0x8],0x0
   140005ec8:	jmp    0x140005ee3
   140005eca:	mov    rcx,QWORD PTR [r12]
   140005ece:	lea    rdx,[rip+0x1e93b]        # 0x140024810
   140005ed5:	call   QWORD PTR [rip+0x141e5]        # 0x14001a0c0
   140005edb:	neg    eax
   140005edd:	sbb    rbp,rbp
   140005ee0:	and    rbp,r15
   140005ee3:	test   rbp,rbp
   140005ee6:	je     0x140005fce
   140005eec:	mov    rcx,rbp
   140005eef:	call   0x140009fd0
   140005ef4:	cmp    eax,0x4
   140005ef7:	jl     0x140005eb8
   140005ef9:	movsxd rcx,eax
   140005efc:	cmp    BYTE PTR [rcx+rbp*1-0x4],0x2e
   140005f01:	jne    0x140005eb8
   140005f03:	lea    rbx,[rcx+rbp*1-0x3]
   140005f08:	lea    rdx,[rip+0x15d35]        # 0x14001bc44
   140005f0f:	mov    rcx,rbx
   140005f12:	call   0x14000a880
   140005f17:	test   eax,eax
   140005f19:	je     0x140005f2e
   140005f1b:	lea    rdx,[rip+0x15d1e]        # 0x14001bc40
   140005f22:	mov    rcx,rbx
   140005f25:	call   0x14000a880
   140005f2a:	test   eax,eax
   140005f2c:	jne    0x140005eb8
   140005f2e:	mov    edx,0x3b
   140005f33:	mov    rcx,rbp
   140005f36:	call   0x14000c07c
   140005f3b:	test   rax,rax
   140005f3e:	jne    0x140005eb8
   140005f44:	mov    rcx,r14
   140005f47:	call   0x140009fd0
   140005f4c:	mov    rcx,rbp
   140005f4f:	mov    rdi,rax
   140005f52:	call   0x140009fd0
   140005f57:	lea    ecx,[rax+rdi*1]
   140005f5a:	mov    rbx,rax
   140005f5d:	movsxd rcx,ecx
   140005f60:	call   0x140004000
   140005f65:	lea    ecx,[rdi-0x1]
   140005f68:	mov    rdx,r14
   140005f6b:	movsxd r8,ecx
   140005f6e:	mov    rcx,rax
   140005f71:	mov    r13,rax
   140005f74:	call   0x14000a170
   140005f79:	lea    r11d,[rbx+0x1]
   140005f7d:	movsxd rcx,edi
   140005f80:	lea    rcx,[rcx+r13*1-0x1]
   140005f85:	movsxd r8,r11d
   140005f88:	mov    rdx,rbp
   140005f8b:	call   0x14000a170
   140005f90:	mov    r11d,DWORD PTR [rsi+0x8]
   140005f94:	mov    eax,DWORD PTR [rsi+0xc]
   140005f97:	inc    r11d
   140005f9a:	cmp    eax,r11d
   140005f9d:	jge    0x140005fbb
   140005f9f:	add    eax,eax
   140005fa1:	mov    DWORD PTR [rsi+0xc],eax
   140005fa4:	cmp    eax,r11d
   140005fa7:	jl     0x140005f9f
   140005fa9:	mov    rcx,QWORD PTR [rsi]
   140005fac:	movsxd rdx,eax
   140005faf:	shl    rdx,0x3
   140005fb3:	call   0x14000402c
   140005fb8:	mov    QWORD PTR [rsi],rax
   140005fbb:	movsxd rcx,DWORD PTR [rsi+0x8]
   140005fbf:	mov    rax,QWORD PTR [rsi]
   140005fc2:	mov    QWORD PTR [rax+rcx*8],r13
   140005fc6:	inc    DWORD PTR [rsi+0x8]
   140005fc9:	jmp    0x140005eb8
   140005fce:	mov    rcx,QWORD PTR [r12]
   140005fd2:	call   QWORD PTR [rip+0x140f0]        # 0x14001a0c8
   140005fd8:	mov    rcx,QWORD PTR [r12+0x8]
   140005fdd:	call   0x140004084
   140005fe2:	mov    rcx,r12
   140005fe5:	call   0x140004084
   140005fea:	mov    rax,rsi
   140005fed:	jmp    0x140005ff1
   140005fef:	xor    eax,eax
   140005ff1:	mov    rbx,QWORD PTR [rsp+0x50]
   140005ff6:	mov    rbp,QWORD PTR [rsp+0x58]
   140005ffb:	mov    rsi,QWORD PTR [rsp+0x60]
   140006000:	add    rsp,0x20
   140006004:	pop    r15
   140006006:	pop    r14
   140006008:	pop    r13
   14000600a:	pop    r12
   14000600c:	pop    rdi
   14000600d:	ret    
   14000600e:	int3   
   14000600f:	int3   
   140006010:	mov    QWORD PTR [rsp+0x8],rbx
   140006015:	mov    QWORD PTR [rsp+0x10],rbp
   14000601a:	mov    QWORD PTR [rsp+0x18],rsi
   14000601f:	push   rdi
   140006020:	sub    rsp,0x20
   140006024:	xor    esi,esi
   140006026:	mov    rbx,rcx
   140006029:	cmp    DWORD PTR [rcx+0x8],esi
   14000602c:	jle    0x140006159
   140006032:	mov    rax,QWORD PTR [rbx]
   140006035:	movsxd rbp,esi
   140006038:	mov    rdi,QWORD PTR [rax+rbp*8]
   14000603c:	mov    rcx,rdi
   14000603f:	call   0x140009fd0
   140006044:	test   eax,eax
   140006046:	jle    0x14000614e
   14000604c:	movsxd rcx,eax
   14000604f:	cmp    BYTE PTR [rcx+rdi*1-0x1],0x2a
   140006054:	jne    0x14000614e
   14000605a:	cmp    eax,0x1
   14000605d:	je     0x14000606f
   14000605f:	mov    al,BYTE PTR [rcx+rdi*1-0x2]
   140006063:	cmp    al,0x5c
   140006065:	je     0x14000606f
   140006067:	cmp    al,0x2f
   140006069:	jne    0x14000614e
   14000606f:	xor    edx,edx
   140006071:	mov    rcx,rdi
   140006074:	call   0x14000c3cc
   140006079:	test   eax,eax
   14000607b:	je     0x14000614e
   140006081:	mov    rcx,QWORD PTR [rbx]
   140006084:	mov    rcx,QWORD PTR [rcx+rbp*8]
   140006088:	call   0x140005e44
   14000608d:	mov    rdi,rax
   140006090:	test   rax,rax
   140006093:	je     0x140006146
   140006099:	cmp    DWORD PTR [rax+0x8],0x0
   14000609d:	jle    0x140006146
   1400060a3:	mov    rcx,QWORD PTR [rbx]
   1400060a6:	mov    rcx,QWORD PTR [rcx+rbp*8]
   1400060aa:	call   0x140004084
   1400060af:	mov    r11d,DWORD PTR [rdi+0x8]
   1400060b3:	mov    eax,DWORD PTR [rbx+0xc]
   1400060b6:	add    r11d,DWORD PTR [rbx+0x8]
   1400060ba:	cmp    eax,r11d
   1400060bd:	jge    0x1400060db
   1400060bf:	add    eax,eax
   1400060c1:	mov    DWORD PTR [rbx+0xc],eax
   1400060c4:	cmp    eax,r11d
   1400060c7:	jl     0x1400060bf
   1400060c9:	mov    rcx,QWORD PTR [rbx]
   1400060cc:	movsxd rdx,eax
   1400060cf:	shl    rdx,0x3
   1400060d3:	call   0x14000402c
   1400060d8:	mov    QWORD PTR [rbx],rax
   1400060db:	mov    eax,DWORD PTR [rbx+0x8]
   1400060de:	lea    ecx,[rsi+0x1]
   1400060e1:	dec    eax
   1400060e3:	movsxd r8,eax
   1400060e6:	cmp    eax,ecx
   1400060e8:	jl     0x14000610b
   1400060ea:	sub    eax,ecx
   1400060ec:	lea    r9d,[rax+0x1]
   1400060f0:	mov    rdx,QWORD PTR [rbx]
   1400060f3:	movsxd rcx,DWORD PTR [rdi+0x8]
   1400060f7:	mov    rax,QWORD PTR [rdx+r8*8]
   1400060fb:	add    rcx,r8
   1400060fe:	dec    r8
   140006101:	dec    r9
   140006104:	mov    QWORD PTR [rdx+rcx*8-0x8],rax
   140006109:	jne    0x1400060f0
   14000610b:	xor    r9d,r9d
   14000610e:	cmp    DWORD PTR [rdi+0x8],r9d
   140006112:	jle    0x140006136
   140006114:	xor    r8d,r8d
   140006117:	mov    rax,QWORD PTR [rdi]
   14000611a:	mov    rcx,QWORD PTR [rbx]
   14000611d:	lea    rdx,[r8+rbp*8]
   140006121:	mov    rax,QWORD PTR [r8+rax*1]
   140006125:	inc    r9d
   140006128:	add    r8,0x8
   14000612c:	mov    QWORD PTR [rdx+rcx*1],rax
   140006130:	cmp    r9d,DWORD PTR [rdi+0x8]
   140006134:	jl     0x140006117
   140006136:	mov    eax,DWORD PTR [rdi+0x8]
   140006139:	lea    esi,[rsi+rax*1-0x1]
   14000613d:	dec    eax
   14000613f:	add    DWORD PTR [rbx+0x8],eax
   140006142:	and    DWORD PTR [rdi+0x8],0x0
   140006146:	mov    rcx,rdi
   140006149:	call   0x140005c0c
   14000614e:	inc    esi
   140006150:	cmp    esi,DWORD PTR [rbx+0x8]
   140006153:	jl     0x140006032
   140006159:	mov    rbx,QWORD PTR [rsp+0x30]
   14000615e:	mov    rbp,QWORD PTR [rsp+0x38]
   140006163:	mov    rsi,QWORD PTR [rsp+0x40]
   140006168:	add    rsp,0x20
   14000616c:	pop    rdi
   14000616d:	ret    
   14000616e:	int3   
   14000616f:	int3   
   140006170:	mov    QWORD PTR [rsp+0x8],rbx
   140006175:	mov    QWORD PTR [rsp+0x10],rsi
   14000617a:	push   rdi
   14000617b:	sub    rsp,0x20
   14000617f:	mov    edx,0x2a
   140006184:	mov    rdi,rcx
   140006187:	call   0x14000c07c
   14000618c:	test   rax,rax
   14000618f:	jne    0x140006196
   140006191:	mov    rax,rdi
   140006194:	jmp    0x1400061e6
   140006196:	mov    dl,0x3b
   140006198:	mov    rcx,rdi
   14000619b:	call   0x140005d2c
   1400061a0:	mov    rcx,rax
   1400061a3:	mov    rbx,rax
   1400061a6:	call   0x140006010
   1400061ab:	mov    dl,0x3b
   1400061ad:	mov    rcx,rbx
   1400061b0:	call   0x140005c68
   1400061b5:	mov    rcx,rbx
   1400061b8:	mov    rsi,rax
   1400061bb:	call   0x140005c0c
   1400061c0:	lea    rcx,[rip+0x142b9]        # 0x14001a480
   1400061c7:	call   0x140009da4
   1400061cc:	test   rax,rax
   1400061cf:	je     0x1400061e3
   1400061d1:	lea    rcx,[rip+0x15a70]        # 0x14001bc48
   1400061d8:	mov    r8,rsi
   1400061db:	mov    rdx,rdi
   1400061de:	call   0x140009c3c
   1400061e3:	mov    rax,rsi
   1400061e6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400061eb:	mov    rsi,QWORD PTR [rsp+0x38]
   1400061f0:	add    rsp,0x20
   1400061f4:	pop    rdi
   1400061f5:	ret    
   1400061f6:	int3   
   1400061f7:	int3   
   1400061f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400061fd:	push   rdi
   1400061fe:	sub    rsp,0x20
   140006202:	mov    rax,QWORD PTR [rip+0x1e747]        # 0x140024950
   140006209:	mov    ebx,edx
   14000620b:	mov    rdi,rcx
   14000620e:	test   rax,rax
   140006211:	jne    0x14000622b
   140006213:	lea    rcx,[rip+0x15a66]        # 0x14001bc80
   14000621a:	call   0x140005404
   14000621f:	mov    QWORD PTR [rip+0x1e72a],rax        # 0x140024950
   140006226:	test   rax,rax
   140006229:	je     0x140006232
   14000622b:	mov    edx,ebx
   14000622d:	mov    rcx,rdi
   140006230:	call   rax
   140006232:	mov    rbx,QWORD PTR [rsp+0x30]
   140006237:	add    rsp,0x20
   14000623b:	pop    rdi
   14000623c:	ret    
   14000623d:	int3   
   14000623e:	int3   
   14000623f:	int3   
   140006240:	rex push rbx
   140006242:	sub    rsp,0x20
   140006246:	mov    rax,QWORD PTR [rip+0x1e70b]        # 0x140024958
   14000624d:	mov    rbx,rcx
   140006250:	test   rax,rax
   140006253:	jne    0x140006273
   140006255:	lea    rcx,[rip+0x15a3c]        # 0x14001bc98
   14000625c:	call   0x140005404
   140006261:	mov    QWORD PTR [rip+0x1e6f0],rax        # 0x140024958
   140006268:	test   rax,rax
   14000626b:	jne    0x140006273
   14000626d:	add    rsp,0x20
   140006271:	pop    rbx
   140006272:	ret    
   140006273:	mov    rcx,rbx
   140006276:	add    rsp,0x20
   14000627a:	pop    rbx
   14000627b:	rex.W jmp rax
   14000627e:	int3   
   14000627f:	int3   
   140006280:	sub    rsp,0x28
   140006284:	mov    rax,QWORD PTR [rip+0x1e6d5]        # 0x140024960
   14000628b:	test   rax,rax
   14000628e:	jne    0x1400062a8
   140006290:	lea    rcx,[rip+0x15a11]        # 0x14001bca8
   140006297:	call   0x140005404
   14000629c:	mov    QWORD PTR [rip+0x1e6bd],rax        # 0x140024960
   1400062a3:	test   rax,rax
   1400062a6:	je     0x1400062aa
   1400062a8:	call   rax
   1400062aa:	add    rsp,0x28
   1400062ae:	ret    
   1400062af:	int3   
   1400062b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400062b5:	push   rdi
   1400062b6:	sub    rsp,0x20
   1400062ba:	mov    rax,QWORD PTR [rip+0x1e6af]        # 0x140024970
   1400062c1:	mov    rbx,rdx
   1400062c4:	mov    rdi,rcx
   1400062c7:	test   rax,rax
   1400062ca:	jne    0x1400062e4
   1400062cc:	lea    rcx,[rip+0x159e5]        # 0x14001bcb8
   1400062d3:	call   0x140005404
   1400062d8:	mov    QWORD PTR [rip+0x1e691],rax        # 0x140024970
   1400062df:	test   rax,rax
   1400062e2:	je     0x1400062ec
   1400062e4:	mov    rdx,rbx
   1400062e7:	mov    rcx,rdi
   1400062ea:	call   rax
   1400062ec:	mov    rbx,QWORD PTR [rsp+0x30]
   1400062f1:	add    rsp,0x20
   1400062f5:	pop    rdi
   1400062f6:	ret    
   1400062f7:	int3   
   1400062f8:	mov    rax,rsp
   1400062fb:	mov    QWORD PTR [rax+0x8],rbx
   1400062ff:	mov    QWORD PTR [rax+0x10],rbp
   140006303:	mov    QWORD PTR [rax+0x18],rsi
   140006307:	mov    QWORD PTR [rax+0x20],rdi
   14000630b:	push   r12
   14000630d:	sub    rsp,0x80
   140006314:	cmp    QWORD PTR [rdx+0x8],0xffffffffffffffff
   140006319:	mov    rbp,r8
   14000631c:	mov    rdi,rdx
   14000631f:	mov    esi,ecx
   140006321:	je     0x14000636d
   140006323:	cmp    QWORD PTR [rdx],0xffffffffffffffff
   140006327:	je     0x14000636d
   140006329:	mov    edx,DWORD PTR [rdx+0x10]
   14000632c:	xor    r8d,r8d
   14000632f:	call   0x140017714
   140006334:	test   eax,eax
   140006336:	js     0x14000636d
   140006338:	mov    rcx,QWORD PTR [rdi+0x8]
   14000633c:	inc    rcx
   14000633f:	call   0x14000b304
   140006344:	mov    rbx,rax
   140006347:	test   rax,rax
   14000634a:	je     0x14000636d
   14000634c:	mov    r12,QWORD PTR [rdi+0x8]
   140006350:	mov    rdx,rax
   140006353:	mov    ecx,esi
   140006355:	mov    r8d,r12d
   140006358:	call   0x140016a44
   14000635d:	movsxd rcx,eax
   140006360:	cmp    rcx,r12
   140006363:	je     0x14000638d
   140006365:	mov    rcx,rbx
   140006368:	call   0x14000b490
   14000636d:	xor    eax,eax
   14000636f:	lea    r11,[rsp+0x80]
   140006377:	mov    rbx,QWORD PTR [r11+0x10]
   14000637b:	mov    rbp,QWORD PTR [r11+0x18]
   14000637f:	mov    rsi,QWORD PTR [r11+0x20]
   140006383:	mov    rdi,QWORD PTR [r11+0x28]
   140006387:	mov    rsp,r11
   14000638a:	pop    r12
   14000638c:	ret    
   14000638d:	cmp    DWORD PTR [rdi+0x14],0x0
   140006391:	jne    0x1400063a8
   140006393:	mov    BYTE PTR [r12+rbx*1],0x0
   140006398:	test   rbp,rbp
   14000639b:	je     0x1400063a3
   14000639d:	mov    eax,DWORD PTR [rdi+0x8]
   1400063a0:	mov    DWORD PTR [rbp+0x0],eax
   1400063a3:	mov    rax,rbx
   1400063a6:	jmp    0x14000636f
   1400063a8:	cmp    DWORD PTR [rdi+0x14],0x8
   1400063ac:	jne    0x14000636d
   1400063ae:	mov    eax,DWORD PTR [rdi+0x8]
   1400063b1:	and    QWORD PTR [rsp+0x50],0x0
   1400063b7:	and    QWORD PTR [rsp+0x58],0x0
   1400063bd:	and    QWORD PTR [rsp+0x60],0x0
   1400063c3:	mov    r9d,0x58
   1400063c9:	lea    r8,[rip+0x15918]        # 0x14001bce8
   1400063d0:	lea    rcx,[rsp+0x20]
   1400063d5:	lea    edx,[r9-0x67]
   1400063d9:	mov    QWORD PTR [rsp+0x20],rbx
   1400063de:	mov    DWORD PTR [rsp+0x28],eax
   1400063e2:	call   0x1400071f8
   1400063e7:	test   eax,eax
   1400063e9:	js     0x140006365
   1400063ef:	mov    rcx,QWORD PTR [rdi]
   1400063f2:	inc    rcx
   1400063f5:	call   0x14000b304
   1400063fa:	mov    rsi,rax
   1400063fd:	test   rax,rax
   140006400:	je     0x140006365
   140006406:	mov    QWORD PTR [rsp+0x30],rax
   14000640b:	mov    eax,DWORD PTR [rdi]
   14000640d:	lea    rcx,[rsp+0x20]
   140006412:	mov    edx,0x1
   140006417:	mov    DWORD PTR [rsp+0x38],eax
   14000641b:	call   0x1400073e0
   140006420:	mov    rcx,rbx
   140006423:	test   eax,eax
   140006425:	jns    0x140006434
   140006427:	call   0x14000b490
   14000642c:	mov    rcx,rsi
   14000642f:	jmp    0x140006368
   140006434:	mov    rax,QWORD PTR [rdi]
   140006437:	mov    BYTE PTR [rsi+rax*1],0x0
   14000643b:	call   0x14000b490
   140006440:	lea    rcx,[rsp+0x20]
   140006445:	call   0x140008960
   14000644a:	test   eax,eax
   14000644c:	js     0x14000642c
   14000644e:	test   rbp,rbp
   140006451:	je     0x140006458
   140006453:	mov    eax,DWORD PTR [rdi]
   140006455:	mov    DWORD PTR [rbp+0x0],eax
   140006458:	mov    rax,rsi
   14000645b:	jmp    0x14000636f
   140006460:	mov    rax,rsp
   140006463:	mov    QWORD PTR [rax+0x8],rbx
   140006467:	mov    QWORD PTR [rax+0x10],rbp
   14000646b:	mov    QWORD PTR [rax+0x18],rsi
   14000646f:	mov    QWORD PTR [rax+0x20],rdi
   140006473:	push   r12
   140006475:	sub    rsp,0x20
   140006479:	mov    rbp,rdx
   14000647c:	mov    edx,0xffffffea
   140006481:	mov    ebx,ecx
   140006483:	lea    r8d,[rdx+0x18]
   140006487:	call   0x140017714
   14000648c:	mov    edi,eax
   14000648e:	test   eax,eax
   140006490:	js     0x1400065cb
   140006496:	mov    r8d,0x16
   14000649c:	mov    rdx,rbp
   14000649f:	mov    ecx,ebx
   1400064a1:	call   0x140016a44
   1400064a6:	test   eax,eax
   1400064a8:	js     0x1400065cb
   1400064ae:	movzx  eax,BYTE PTR [rbp+0x2]
   1400064b2:	movzx  ecx,BYTE PTR [rbp+0x3]
   1400064b6:	shl    ecx,0x8
   1400064b9:	or     ecx,eax
   1400064bb:	movzx  eax,BYTE PTR [rbp+0x1]
   1400064bf:	shl    ecx,0x8
   1400064c2:	or     ecx,eax
   1400064c4:	movzx  eax,BYTE PTR [rbp+0x0]
   1400064c8:	shl    ecx,0x8
   1400064cb:	or     ecx,eax
   1400064cd:	cmp    ecx,0x6054b50
   1400064d3:	jne    0x1400064dc
   1400064d5:	mov    eax,edi
   1400064d7:	jmp    0x1400065ce
   1400064dc:	xor    edx,edx
   1400064de:	mov    ecx,ebx
   1400064e0:	lea    r8d,[rdx+0x2]
   1400064e4:	call   0x140017714
   1400064e9:	mov    r12d,eax
   1400064ec:	test   eax,eax
   1400064ee:	js     0x1400065cb
   1400064f4:	mov    edi,0x10015
   1400064f9:	mov    r8d,0x2
   1400064ff:	mov    ecx,ebx
   140006501:	cmp    eax,edi
   140006503:	mov    esi,edi
   140006505:	cmovl  esi,eax
   140006508:	mov    edx,esi
   14000650a:	neg    edx
   14000650c:	call   0x140017714
   140006511:	test   eax,eax
   140006513:	js     0x1400065cb
   140006519:	mov    ecx,edi
   14000651b:	call   0x14000b304
   140006520:	mov    rdi,rax
   140006523:	test   rax,rax
   140006526:	je     0x1400065cb
   14000652c:	mov    r8d,esi
   14000652f:	mov    rdx,rax
   140006532:	mov    ecx,ebx
   140006534:	call   0x140016a44
   140006539:	test   eax,eax
   14000653b:	js     0x1400065c3
   140006541:	movsxd rsi,eax
   140006544:	add    eax,0xffffffea
   140006547:	movsxd rbx,eax
   14000654a:	add    rsi,rdi
   14000654d:	add    rbx,rdi
   140006550:	cmp    rbx,rdi
   140006553:	jb     0x1400065c3
   140006555:	cmp    BYTE PTR [rbx],0x50
   140006558:	jne    0x140006599
   14000655a:	movzx  eax,BYTE PTR [rbx+0x2]
   14000655e:	movzx  ecx,BYTE PTR [rbx+0x3]
   140006562:	shl    ecx,0x8
   140006565:	or     ecx,eax
   140006567:	movzx  eax,BYTE PTR [rbx+0x1]
   14000656b:	shl    ecx,0x8
   14000656e:	or     ecx,eax
   140006570:	shl    ecx,0x8
   140006573:	or     ecx,0x50
   140006576:	cmp    ecx,0x6054b50
   14000657c:	jne    0x140006599
   14000657e:	movzx  eax,BYTE PTR [rbx+0x15]
   140006582:	shl    eax,0x8
   140006585:	movsxd rcx,eax
   140006588:	movzx  eax,BYTE PTR [rbx+0x14]
   14000658c:	or     rcx,rax
   14000658f:	lea    rax,[rcx+rbx*1+0x16]
   140006594:	cmp    rax,rsi
   140006597:	je     0x14000659e
   140006599:	dec    rbx
   14000659c:	jmp    0x140006550
   14000659e:	mov    r8d,0x16
   1400065a4:	mov    rdx,rbx
   1400065a7:	mov    rcx,rbp
   1400065aa:	call   0x14000a170
   1400065af:	mov    rcx,rdi
   1400065b2:	call   0x14000b490
   1400065b7:	mov    r11d,r12d
   1400065ba:	sub    r11,rsi
   1400065bd:	lea    rax,[rbx+r11*1]
   1400065c1:	jmp    0x1400065ce
   1400065c3:	mov    rcx,rdi
   1400065c6:	call   0x14000b490
   1400065cb:	or     eax,0xffffffff
   1400065ce:	mov    rbx,QWORD PTR [rsp+0x30]
   1400065d3:	mov    rbp,QWORD PTR [rsp+0x38]
   1400065d8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400065dd:	mov    rdi,QWORD PTR [rsp+0x48]
   1400065e2:	add    rsp,0x20
   1400065e6:	pop    r12
   1400065e8:	ret    
   1400065e9:	int3   
   1400065ea:	int3   
   1400065eb:	int3   
   1400065ec:	mov    QWORD PTR [rsp+0x20],rbx
   1400065f1:	push   rbp
   1400065f2:	push   rsi
   1400065f3:	push   rdi
   1400065f4:	push   r12
   1400065f6:	push   r13
   1400065f8:	push   r14
   1400065fa:	push   r15
   1400065fc:	sub    rsp,0x50
   140006600:	mov    rax,QWORD PTR [rip+0x1cab9]        # 0x1400230c0
   140006607:	xor    rax,rsp
   14000660a:	mov    QWORD PTR [rsp+0x48],rax
   14000660f:	mov    r13d,ecx
   140006612:	mov    ecx,0x30032
   140006617:	mov    r15,r8
   14000661a:	mov    QWORD PTR [rsp+0x20],rdx
   14000661f:	call   0x14000b304
   140006624:	mov    rdi,rax
   140006627:	test   rax,rax
   14000662a:	jne    0x140006634
   14000662c:	or     eax,0xffffffff
   14000662f:	jmp    0x140006940
   140006634:	mov    rdx,rax
   140006637:	mov    ecx,r13d
   14000663a:	mov    rsi,rax
   14000663d:	call   0x140006460
   140006642:	or     ebp,0xffffffff
   140006645:	mov    r14d,eax
   140006648:	cmp    eax,ebp
   14000664a:	je     0x140006936
   140006650:	movzx  eax,BYTE PTR [rdi+0x12]
   140006654:	movzx  edx,BYTE PTR [rdi+0x13]
   140006658:	movzx  ecx,BYTE PTR [rdi+0xf]
   14000665c:	shl    ecx,0x8
   14000665f:	shl    edx,0x8
   140006662:	xor    r8d,r8d
   140006665:	or     edx,eax
   140006667:	movzx  eax,BYTE PTR [rdi+0x11]
   14000666b:	shl    edx,0x8
   14000666e:	or     edx,eax
   140006670:	movzx  eax,BYTE PTR [rdi+0x10]
   140006674:	shl    edx,0x8
   140006677:	or     edx,eax
   140006679:	movzx  eax,BYTE PTR [rdi+0xe]
   14000667d:	or     ecx,eax
   14000667f:	movzx  eax,BYTE PTR [rdi+0xd]
   140006683:	shl    ecx,0x8
   140006686:	or     ecx,eax
   140006688:	movzx  eax,BYTE PTR [rdi+0xc]
   14000668c:	shl    ecx,0x8
   14000668f:	or     ecx,eax
   140006691:	add    ecx,edx
   140006693:	sub    r14d,ecx
   140006696:	mov    ecx,r13d
   140006699:	add    edx,r14d
   14000669c:	call   0x140017714
   1400066a1:	test   eax,eax
   1400066a3:	js     0x140006936
   1400066a9:	mov    r8d,0x400
   1400066af:	mov    rdx,rdi
   1400066b2:	mov    ecx,r13d
   1400066b5:	call   0x140016a44
   1400066ba:	mov    r12d,eax
   1400066bd:	test   eax,eax
   1400066bf:	js     0x140006936
   1400066c5:	movzx  eax,BYTE PTR [rdi+0x2]
   1400066c9:	movzx  ecx,BYTE PTR [rdi+0x3]
   1400066cd:	shl    ecx,0x8
   1400066d0:	or     ecx,eax
   1400066d2:	movzx  eax,BYTE PTR [rdi+0x1]
   1400066d6:	shl    ecx,0x8
   1400066d9:	or     ecx,eax
   1400066db:	movzx  eax,BYTE PTR [rdi]
   1400066de:	shl    ecx,0x8
   1400066e1:	or     ecx,eax
   1400066e3:	cmp    ecx,0x2014b50
   1400066e9:	jne    0x140006936
   1400066ef:	cmp    r12d,0x2e
   1400066f3:	jge    0x140006726
   1400066f5:	movsxd rbx,r12d
   1400066f8:	mov    rdx,rsi
   1400066fb:	mov    rcx,rdi
   1400066fe:	mov    r8,rbx
   140006701:	call   0x14000a170
   140006706:	lea    rdx,[rbx+rdi*1]
   14000670a:	mov    r8d,0x400
   140006710:	mov    ecx,r13d
   140006713:	mov    rsi,rax
   140006716:	call   0x140016a44
   14000671b:	test   eax,eax
   14000671d:	jle    0x140006936
   140006723:	add    r12d,eax
   140006726:	movzx  eax,BYTE PTR [rsi+0x20]
   14000672a:	movzx  edx,BYTE PTR [rsi+0x21]
   14000672e:	movzx  ecx,BYTE PTR [rsi+0x1f]
   140006732:	shl    ecx,0x8
   140006735:	shl    edx,0x8
   140006738:	or     edx,eax
   14000673a:	movzx  eax,BYTE PTR [rsi+0x1e]
   14000673e:	or     ecx,eax
   140006740:	movzx  eax,BYTE PTR [rsi+0x1c]
   140006744:	add    edx,ecx
   140006746:	movzx  ecx,BYTE PTR [rsi+0x1d]
   14000674a:	shl    ecx,0x8
   14000674d:	or     ecx,eax
   14000674f:	lea    ebx,[rdx+rcx*1+0x2e]
   140006753:	lea    eax,[rbx+0x4]
   140006756:	cmp    r12d,eax
   140006759:	jge    0x1400067a0
   14000675b:	cmp    rsi,rdi
   14000675e:	je     0x140006771
   140006760:	movsxd r8,r12d
   140006763:	mov    rdx,rsi
   140006766:	mov    rcx,rdi
   140006769:	call   0x14000a170
   14000676e:	mov    rsi,rax
   140006771:	mov    eax,0x400
   140006776:	mov    r8d,ebx
   140006779:	movsxd rdx,r12d
   14000677c:	sub    r8d,r12d
   14000677f:	mov    ecx,r13d
   140006782:	add    r8d,0x4
   140006786:	cmp    r8d,eax
   140006789:	cmovl  r8d,eax
   14000678d:	add    rdx,rdi
   140006790:	call   0x140016a44
   140006795:	test   eax,eax
   140006797:	jle    0x140006936
   14000679d:	add    r12d,eax
   1400067a0:	mov    rcx,r15
   1400067a3:	call   0x140009fd0
   1400067a8:	movzx  ecx,BYTE PTR [rsi+0x1d]
   1400067ac:	shl    ecx,0x8
   1400067af:	movsxd rdx,ecx
   1400067b2:	movzx  ecx,BYTE PTR [rsi+0x1c]
   1400067b6:	or     rdx,rcx
   1400067b9:	cmp    rdx,rax
   1400067bc:	jne    0x1400067d9
   1400067be:	mov    rcx,r15
   1400067c1:	call   0x140009fd0
   1400067c6:	lea    rcx,[rsi+0x2e]
   1400067ca:	mov    rdx,r15
   1400067cd:	mov    r8,rax
   1400067d0:	call   0x14000c5c0
   1400067d5:	test   eax,eax
   1400067d7:	je     0x140006800
   1400067d9:	movsxd rax,ebx
   1400067dc:	sub    r12d,ebx
   1400067df:	add    rsi,rax
   1400067e2:	movzx  eax,BYTE PTR [rsi+0x2]
   1400067e6:	movzx  ecx,BYTE PTR [rsi+0x3]
   1400067ea:	shl    ecx,0x8
   1400067ed:	or     ecx,eax
   1400067ef:	movzx  eax,BYTE PTR [rsi+0x1]
   1400067f3:	shl    ecx,0x8
   1400067f6:	or     ecx,eax
   1400067f8:	movzx  eax,BYTE PTR [rsi]
   1400067fb:	jmp    0x1400066de
   140006800:	movzx  eax,BYTE PTR [rsi+0x2c]
   140006804:	movzx  edx,BYTE PTR [rsi+0x2d]
   140006808:	xor    r8d,r8d
   14000680b:	shl    edx,0x8
   14000680e:	mov    ecx,r13d
   140006811:	or     edx,eax
   140006813:	movzx  eax,BYTE PTR [rsi+0x2b]
   140006817:	shl    edx,0x8
   14000681a:	or     edx,eax
   14000681c:	movzx  eax,BYTE PTR [rsi+0x2a]
   140006820:	shl    edx,0x8
   140006823:	or     edx,eax
   140006825:	add    edx,r14d
   140006828:	call   0x140017714
   14000682d:	test   eax,eax
   14000682f:	js     0x140006936
   140006835:	lea    rdx,[rsp+0x28]
   14000683a:	mov    r8d,0x1e
   140006840:	mov    ecx,r13d
   140006843:	call   0x140016a44
   140006848:	test   eax,eax
   14000684a:	js     0x140006936
   140006850:	movzx  eax,BYTE PTR [rsp+0x2a]
   140006855:	movzx  ecx,BYTE PTR [rsp+0x2b]
   14000685a:	shl    ecx,0x8
   14000685d:	or     ecx,eax
   14000685f:	movzx  eax,BYTE PTR [rsp+0x29]
   140006864:	shl    ecx,0x8
   140006867:	or     ecx,eax
   140006869:	movzx  eax,BYTE PTR [rsp+0x28]
   14000686e:	shl    ecx,0x8
   140006871:	or     ecx,eax
   140006873:	cmp    ecx,0x4034b50
   140006879:	jne    0x140006936
   14000687f:	movzx  eax,BYTE PTR [rsi+0x1a]
   140006883:	movzx  ecx,BYTE PTR [rsi+0x1b]
   140006887:	mov    r9,QWORD PTR [rsp+0x20]
   14000688c:	movzx  edx,BYTE PTR [rsp+0x45]
   140006891:	shl    ecx,0x8
   140006894:	or     ecx,eax
   140006896:	movzx  eax,BYTE PTR [rsi+0x19]
   14000689a:	shl    edx,0x8
   14000689d:	shl    ecx,0x8
   1400068a0:	or     ecx,eax
   1400068a2:	movzx  eax,BYTE PTR [rsi+0x18]
   1400068a6:	shl    ecx,0x8
   1400068a9:	movsxd rcx,ecx
   1400068ac:	or     rcx,rax
   1400068af:	mov    QWORD PTR [r9],rcx
   1400068b2:	movzx  eax,BYTE PTR [rsi+0x16]
   1400068b6:	movzx  ecx,BYTE PTR [rsi+0x17]
   1400068ba:	shl    ecx,0x8
   1400068bd:	or     ecx,eax
   1400068bf:	movzx  eax,BYTE PTR [rsi+0x15]
   1400068c3:	shl    ecx,0x8
   1400068c6:	or     ecx,eax
   1400068c8:	movzx  eax,BYTE PTR [rsi+0x14]
   1400068cc:	shl    ecx,0x8
   1400068cf:	movsxd rcx,ecx
   1400068d2:	or     rcx,rax
   1400068d5:	mov    QWORD PTR [r9+0x8],rcx
   1400068d9:	movzx  eax,BYTE PTR [rsi+0x2c]
   1400068dd:	movzx  r8d,BYTE PTR [rsi+0x2d]
   1400068e2:	movzx  ecx,BYTE PTR [rsp+0x43]
   1400068e7:	shl    r8d,0x8
   1400068eb:	or     r8d,eax
   1400068ee:	movzx  eax,BYTE PTR [rsi+0x2b]
   1400068f2:	shl    ecx,0x8
   1400068f5:	shl    r8d,0x8
   1400068f9:	or     r8d,eax
   1400068fc:	movzx  eax,BYTE PTR [rsi+0x2a]
   140006900:	shl    r8d,0x8
   140006904:	or     r8d,eax
   140006907:	movzx  eax,BYTE PTR [rsp+0x44]
   14000690c:	or     edx,eax
   14000690e:	movzx  eax,BYTE PTR [rsp+0x42]
   140006913:	or     ecx,eax
   140006915:	add    edx,r14d
   140006918:	add    edx,r8d
   14000691b:	lea    eax,[rcx+rdx*1+0x1e]
   14000691f:	mov    DWORD PTR [r9+0x10],eax
   140006923:	movzx  ecx,BYTE PTR [rsi+0xb]
   140006927:	movzx  eax,BYTE PTR [rsi+0xa]
   14000692b:	shl    ecx,0x8
   14000692e:	or     ecx,eax
   140006930:	xor    ebp,ebp
   140006932:	mov    DWORD PTR [r9+0x14],ecx
   140006936:	mov    rcx,rdi
   140006939:	call   0x14000b490
   14000693e:	mov    eax,ebp
   140006940:	mov    rcx,QWORD PTR [rsp+0x48]
   140006945:	xor    rcx,rsp
   140006948:	call   0x14000a850
   14000694d:	mov    rbx,QWORD PTR [rsp+0xa8]
   140006955:	add    rsp,0x50
   140006959:	pop    r15
   14000695b:	pop    r14
   14000695d:	pop    r13
   14000695f:	pop    r12
   140006961:	pop    rdi
   140006962:	pop    rsi
   140006963:	pop    rbp
   140006964:	ret    
   140006965:	int3   
   140006966:	int3   
   140006967:	int3   
   140006968:	mov    QWORD PTR [rsp+0x8],rbx
   14000696d:	mov    QWORD PTR [rsp+0x10],rbp
   140006972:	mov    QWORD PTR [rsp+0x18],rsi
   140006977:	push   rdi
   140006978:	sub    rsp,0x20
   14000697c:	mov    rdi,rcx
   14000697f:	mov    rcx,QWORD PTR [rcx]
   140006982:	mov    rsi,r8
   140006985:	mov    al,BYTE PTR [rcx]
   140006987:	mov    rbp,rdx
   14000698a:	test   al,al
   14000698c:	je     0x140006a4f
   140006992:	cmp    al,0xa
   140006994:	je     0x140006a4f
   14000699a:	cmp    al,0xd
   14000699c:	je     0x140006a4f
   1400069a2:	lea    rdx,[rip+0x15347]        # 0x14001bcf0
   1400069a9:	call   0x14000c688
   1400069ae:	mov    rbx,rax
   1400069b1:	test   rax,rax
   1400069b4:	jne    0x1400069fa
   1400069b6:	mov    rcx,QWORD PTR [rdi]
   1400069b9:	xor    edx,edx
   1400069bb:	call   0x14000c07c
   1400069c0:	mov    rbx,rax
   1400069c3:	mov    rcx,QWORD PTR [rdi]
   1400069c6:	mov    edx,0x3a
   1400069cb:	call   0x14000c07c
   1400069d0:	test   rax,rax
   1400069d3:	je     0x140006a4a
   1400069d5:	mov    BYTE PTR [rax],0x0
   1400069d8:	cmp    BYTE PTR [rax+0x1],0x20
   1400069dc:	jne    0x140006a4a
   1400069de:	mov    BYTE PTR [rax+0x1],0x0
   1400069e2:	mov    rcx,QWORD PTR [rdi]
   1400069e5:	mov    QWORD PTR [rbp+0x0],rcx
   1400069e9:	lea    rcx,[rax+0x2]
   1400069ed:	mov    eax,0x1
   1400069f2:	mov    QWORD PTR [rsi],rcx
   1400069f5:	mov    QWORD PTR [rdi],rbx
   1400069f8:	jmp    0x140006a51
   1400069fa:	cmp    BYTE PTR [rax],0xd
   1400069fd:	mov    rcx,rax
   140006a00:	jne    0x140006a3a
   140006a02:	inc    rax
   140006a05:	jmp    0x140006a2f
   140006a07:	mov    al,BYTE PTR [rbx]
   140006a09:	cmp    al,0xd
   140006a0b:	je     0x140006a1e
   140006a0d:	test   al,al
   140006a0f:	je     0x140006a4a
   140006a11:	mov    BYTE PTR [rcx],al
   140006a13:	inc    rcx
   140006a16:	inc    rbx
   140006a19:	cmp    BYTE PTR [rbx],0xa
   140006a1c:	jne    0x140006a07
   140006a1e:	cmp    BYTE PTR [rbx],0x0
   140006a21:	je     0x140006a4a
   140006a23:	mov    BYTE PTR [rcx],0x0
   140006a26:	cmp    BYTE PTR [rbx],0xd
   140006a29:	jne    0x140006a3a
   140006a2b:	lea    rax,[rbx+0x1]
   140006a2f:	cmp    BYTE PTR [rax],0xa
   140006a32:	jne    0x140006a3a
   140006a34:	mov    BYTE PTR [rbx],0x0
   140006a37:	mov    rbx,rax
   140006a3a:	mov    BYTE PTR [rbx],0x0
   140006a3d:	inc    rbx
   140006a40:	cmp    BYTE PTR [rbx],0x20
   140006a43:	je     0x140006a16
   140006a45:	jmp    0x1400069c3
   140006a4a:	or     eax,0xffffffff
   140006a4d:	jmp    0x140006a51
   140006a4f:	xor    eax,eax
   140006a51:	mov    rbx,QWORD PTR [rsp+0x30]
   140006a56:	mov    rbp,QWORD PTR [rsp+0x38]
   140006a5b:	mov    rsi,QWORD PTR [rsp+0x40]
   140006a60:	add    rsp,0x20
   140006a64:	pop    rdi
   140006a65:	ret    
   140006a66:	int3   
   140006a67:	int3   
   140006a68:	mov    QWORD PTR [rsp+0x8],rbx
   140006a6d:	push   rbp
   140006a6e:	push   rsi
   140006a6f:	push   rdi
   140006a70:	mov    rbp,rsp
   140006a73:	sub    rsp,0x40
   140006a77:	mov    rbx,rdx
   140006a7a:	mov    edx,0x8000
   140006a7f:	call   0x14001300c
   140006a84:	mov    edi,eax
   140006a86:	or     eax,0xffffffff
   140006a89:	cmp    edi,eax
   140006a8b:	je     0x140006bc2
   140006a91:	mov    r8,QWORD PTR [rip+0x1c608]        # 0x1400230a0
   140006a98:	and    QWORD PTR [rbx],0x0
   140006a9c:	and    QWORD PTR [rbx+0x8],0x0
   140006aa1:	and    QWORD PTR [rbx+0x10],0x0
   140006aa6:	and    QWORD PTR [rbx+0x20],0x0
   140006aab:	lea    rdx,[rbp-0x18]
   140006aaf:	mov    ecx,edi
   140006ab1:	mov    BYTE PTR [rbx+0x18],0x0
   140006ab5:	call   0x1400065ec
   140006aba:	mov    ecx,edi
   140006abc:	test   eax,eax
   140006abe:	je     0x140006acf
   140006ac0:	call   0x140010ecc
   140006ac5:	mov    eax,0xfffffffe
   140006aca:	jmp    0x140006bc2
   140006acf:	lea    rdx,[rbp-0x18]
   140006ad3:	xor    r8d,r8d
   140006ad6:	call   0x1400062f8
   140006adb:	mov    QWORD PTR [rip+0x1de96],rax        # 0x140024978
   140006ae2:	test   rax,rax
   140006ae5:	jne    0x140006aeb
   140006ae7:	mov    ecx,edi
   140006ae9:	jmp    0x140006ac0
   140006aeb:	mov    QWORD PTR [rbp-0x20],rax
   140006aef:	jmp    0x140006b99
   140006af4:	mov    rsi,QWORD PTR [rbp+0x38]
   140006af8:	lea    rdx,[rip+0x15249]        # 0x14001bd48
   140006aff:	mov    rcx,rsi
   140006b02:	call   0x140019750
   140006b07:	test   eax,eax
   140006b09:	jne    0x140006b17
   140006b0b:	mov    rax,QWORD PTR [rbp+0x30]
   140006b0f:	mov    QWORD PTR [rbx],rax
   140006b12:	jmp    0x140006b99
   140006b17:	lea    rdx,[rip+0x1521a]        # 0x14001bd38
   140006b1e:	mov    rcx,rsi
   140006b21:	call   0x140019750
   140006b26:	test   eax,eax
   140006b28:	jne    0x140006b34
   140006b2a:	mov    rax,QWORD PTR [rbp+0x30]
   140006b2e:	mov    QWORD PTR [rbx+0x8],rax
   140006b32:	jmp    0x140006b99
   140006b34:	lea    rdx,[rip+0x151ed]        # 0x14001bd28
   140006b3b:	mov    rcx,rsi
   140006b3e:	call   0x140019750
   140006b43:	test   eax,eax
   140006b45:	jne    0x140006b51
   140006b47:	mov    rax,QWORD PTR [rbp+0x30]
   140006b4b:	mov    QWORD PTR [rbx+0x10],rax
   140006b4f:	jmp    0x140006b99
   140006b51:	lea    rdx,[rip+0x151b8]        # 0x14001bd10
   140006b58:	mov    rcx,rsi
   140006b5b:	call   0x140019750
   140006b60:	test   eax,eax
   140006b62:	jne    0x140006b7e
   140006b64:	mov    rcx,QWORD PTR [rbp+0x30]
   140006b68:	lea    rdx,[rip+0x1424d]        # 0x14001adbc
   140006b6f:	call   0x140019750
   140006b74:	test   eax,eax
   140006b76:	jne    0x140006b99
   140006b78:	mov    BYTE PTR [rbx+0x18],0x1
   140006b7c:	jmp    0x140006b99
   140006b7e:	lea    rdx,[rip+0x15173]        # 0x14001bcf8
   140006b85:	mov    rcx,rsi
   140006b88:	call   0x140019750
   140006b8d:	test   eax,eax
   140006b8f:	jne    0x140006b99
   140006b91:	mov    rax,QWORD PTR [rbp+0x30]
   140006b95:	mov    QWORD PTR [rbx+0x20],rax
   140006b99:	lea    r8,[rbp+0x30]
   140006b9d:	lea    rdx,[rbp+0x38]
   140006ba1:	lea    rcx,[rbp-0x20]
   140006ba5:	call   0x140006968
   140006baa:	mov    esi,eax
   140006bac:	test   eax,eax
   140006bae:	jg     0x140006af4
   140006bb4:	mov    ecx,edi
   140006bb6:	call   0x140010ecc
   140006bbb:	neg    esi
   140006bbd:	sbb    eax,eax
   140006bbf:	and    eax,0xfffffffe
   140006bc2:	mov    rbx,QWORD PTR [rsp+0x60]
   140006bc7:	add    rsp,0x40
   140006bcb:	pop    rdi
   140006bcc:	pop    rsi
   140006bcd:	pop    rbp
   140006bce:	ret    
   140006bcf:	int3   
   140006bd0:	mov    QWORD PTR [rsp+0x8],rbx
   140006bd5:	mov    QWORD PTR [rsp+0x10],rbp
   140006bda:	mov    QWORD PTR [rsp+0x18],rsi
   140006bdf:	push   rdi
   140006be0:	sub    rsp,0x40
   140006be4:	mov    rbp,rdx
   140006be7:	mov    edx,0x8000
   140006bec:	mov    rsi,r8
   140006bef:	xor    edi,edi
   140006bf1:	call   0x14001300c
   140006bf6:	mov    ebx,eax
   140006bf8:	cmp    eax,0xffffffff
   140006bfb:	jne    0x140006c01
   140006bfd:	xor    eax,eax
   140006bff:	jmp    0x140006c30
   140006c01:	lea    rdx,[rsp+0x20]
   140006c06:	mov    r8,rbp
   140006c09:	mov    ecx,eax
   140006c0b:	call   0x1400065ec
   140006c10:	test   eax,eax
   140006c12:	jne    0x140006c26
   140006c14:	lea    rdx,[rsp+0x20]
   140006c19:	mov    r8,rsi
   140006c1c:	mov    ecx,ebx
   140006c1e:	call   0x1400062f8
   140006c23:	mov    rdi,rax
   140006c26:	mov    ecx,ebx
   140006c28:	call   0x140010ecc
   140006c2d:	mov    rax,rdi
   140006c30:	mov    rbx,QWORD PTR [rsp+0x50]
   140006c35:	mov    rbp,QWORD PTR [rsp+0x58]
   140006c3a:	mov    rsi,QWORD PTR [rsp+0x60]
   140006c3f:	add    rsp,0x40
   140006c43:	pop    rdi
   140006c44:	ret    
   140006c45:	int3   
   140006c46:	int3   
   140006c47:	int3   
   140006c48:	sub    rsp,0x28
   140006c4c:	mov    rcx,QWORD PTR [rip+0x1dd25]        # 0x140024978
   140006c53:	test   rcx,rcx
   140006c56:	je     0x140006c5d
   140006c58:	call   0x14000b490
   140006c5d:	add    rsp,0x28
   140006c61:	ret    
   140006c62:	int3   
   140006c63:	int3   
   140006c64:	mov    QWORD PTR [rsp+0x8],rbx
   140006c69:	mov    QWORD PTR [rsp+0x10],rsi
   140006c6e:	push   rdi
   140006c6f:	sub    rsp,0x20
   140006c73:	mov    al,BYTE PTR [rcx]
   140006c75:	mov    rsi,rdx
   140006c78:	mov    rbx,rcx
   140006c7b:	xor    edi,edi
   140006c7d:	jmp    0x140006ca9
   140006c7f:	movsx  ecx,al
   140006c82:	call   0x14000c7c8
   140006c87:	test   eax,eax
   140006c89:	je     0x140006cc4
   140006c8b:	movsx  eax,BYTE PTR [rbx]
   140006c8e:	lea    rcx,[rdi+rdi*4]
   140006c92:	inc    rbx
   140006c95:	sub    eax,0x30
   140006c98:	cdqe   
   140006c9a:	lea    rdi,[rax+rcx*2]
   140006c9e:	cmp    rdi,0x7fffffff
   140006ca5:	jg     0x140006cc4
   140006ca7:	mov    al,BYTE PTR [rbx]
   140006ca9:	test   al,al
   140006cab:	jne    0x140006c7f
   140006cad:	mov    DWORD PTR [rsi],edi
   140006caf:	mov    eax,0x1
   140006cb4:	mov    rbx,QWORD PTR [rsp+0x30]
   140006cb9:	mov    rsi,QWORD PTR [rsp+0x38]
   140006cbe:	add    rsp,0x20
   140006cc2:	pop    rdi
   140006cc3:	ret    
   140006cc4:	xor    eax,eax
   140006cc6:	jmp    0x140006cb4
   140006cc8:	mov    QWORD PTR [rsp+0x8],rbx
   140006ccd:	push   rdi
   140006cce:	sub    rsp,0x20
   140006cd2:	mov    rbx,rdx
   140006cd5:	lea    rdx,[rsp+0x40]
   140006cda:	mov    rdi,rcx
   140006cdd:	call   0x140006c64
   140006ce2:	test   eax,eax
   140006ce4:	je     0x140006d01
   140006ce6:	lea    rdx,[rsp+0x48]
   140006ceb:	mov    rcx,rbx
   140006cee:	call   0x140006c64
   140006cf3:	test   eax,eax
   140006cf5:	je     0x140006d01
   140006cf7:	mov    eax,DWORD PTR [rsp+0x40]
   140006cfb:	sub    eax,DWORD PTR [rsp+0x48]
   140006cff:	jmp    0x140006d0c
   140006d01:	mov    rdx,rbx
   140006d04:	mov    rcx,rdi
   140006d07:	call   0x14000a880
   140006d0c:	mov    rbx,QWORD PTR [rsp+0x30]
   140006d11:	add    rsp,0x20
   140006d15:	pop    rdi
   140006d16:	ret    
   140006d17:	int3   
   140006d18:	mov    rax,rsp
   140006d1b:	mov    QWORD PTR [rax+0x8],rbx
   140006d1f:	mov    QWORD PTR [rax+0x10],rbp
   140006d23:	mov    QWORD PTR [rax+0x18],rsi
   140006d27:	mov    QWORD PTR [rax+0x20],rdi
   140006d2b:	push   r12
   140006d2d:	push   r13
   140006d2f:	push   r14
   140006d31:	sub    rsp,0x20
   140006d35:	mov    rbx,rdx
   140006d38:	call   0x140004058
   140006d3d:	mov    rcx,rbx
   140006d40:	mov    rdi,rax
   140006d43:	call   0x140004058
   140006d48:	xor    ebp,ebp
   140006d4a:	mov    r13,rdi
   140006d4d:	xor    esi,esi
   140006d4f:	mov    rbx,rax
   140006d52:	mov    r14,rax
   140006d55:	test   rdi,rdi
   140006d58:	je     0x140006d74
   140006d5a:	lea    rdx,[rip+0x14fff]        # 0x14001bd60
   140006d61:	mov    rcx,rdi
   140006d64:	call   0x14000c688
   140006d69:	mov    rbp,rax
   140006d6c:	test   rax,rax
   140006d6f:	je     0x140006d74
   140006d71:	mov    BYTE PTR [rax],0x0
   140006d74:	test   rbx,rbx
   140006d77:	je     0x140006d93
   140006d79:	lea    rdx,[rip+0x14fe0]        # 0x14001bd60
   140006d80:	mov    rcx,rbx
   140006d83:	call   0x14000c688
   140006d88:	mov    rsi,rax
   140006d8b:	test   rax,rax
   140006d8e:	je     0x140006d93
   140006d90:	mov    BYTE PTR [rax],0x0
   140006d93:	mov    rdx,rbx
   140006d96:	mov    rcx,rdi
   140006d99:	call   0x140006cc8
   140006d9e:	mov    r12d,eax
   140006da1:	test   rbp,rbp
   140006da4:	je     0x140006dac
   140006da6:	lea    rdi,[rbp+0x1]
   140006daa:	jmp    0x140006dae
   140006dac:	xor    edi,edi
   140006dae:	test   rsi,rsi
   140006db1:	je     0x140006db9
   140006db3:	lea    rbx,[rsi+0x1]
   140006db7:	jmp    0x140006dbb
   140006db9:	xor    ebx,ebx
   140006dbb:	test   eax,eax
   140006dbd:	jne    0x140006dc9
   140006dbf:	test   rdi,rdi
   140006dc2:	je     0x140006dc9
   140006dc4:	test   rbx,rbx
   140006dc7:	jne    0x140006d55
   140006dc9:	mov    rcx,r13
   140006dcc:	call   0x140004084
   140006dd1:	mov    rcx,r14
   140006dd4:	call   0x140004084
   140006dd9:	mov    rbx,QWORD PTR [rsp+0x40]
   140006dde:	mov    rbp,QWORD PTR [rsp+0x48]
   140006de3:	mov    rsi,QWORD PTR [rsp+0x50]
   140006de8:	mov    rdi,QWORD PTR [rsp+0x58]
   140006ded:	mov    eax,r12d
   140006df0:	add    rsp,0x20
   140006df4:	pop    r14
   140006df6:	pop    r13
   140006df8:	pop    r12
   140006dfa:	ret    
   140006dfb:	int3   
   140006dfc:	mov    rax,rsp
   140006dff:	mov    QWORD PTR [rax+0x8],rbx
   140006e03:	mov    QWORD PTR [rax+0x10],rbp
   140006e07:	mov    QWORD PTR [rax+0x18],rsi
   140006e0b:	mov    QWORD PTR [rax+0x20],rdi
   140006e0f:	push   r12
   140006e11:	push   r13
   140006e13:	push   r14
   140006e15:	sub    rsp,0x20
   140006e19:	mov    rbx,rdx
   140006e1c:	call   0x140004058
   140006e21:	mov    rcx,rbx
   140006e24:	mov    rdi,rax
   140006e27:	call   0x140004058
   140006e2c:	xor    ebp,ebp
   140006e2e:	mov    r13,rdi
   140006e31:	xor    r12d,r12d
   140006e34:	mov    rbx,rax
   140006e37:	mov    r14,rax
   140006e3a:	test   rdi,rdi
   140006e3d:	je     0x140006e59
   140006e3f:	mov    rdx,QWORD PTR [rip+0x1c262]        # 0x1400230a8
   140006e46:	mov    rcx,rdi
   140006e49:	call   0x14000c688
   140006e4e:	mov    rbp,rax
   140006e51:	test   rax,rax
   140006e54:	je     0x140006e59
   140006e56:	mov    BYTE PTR [rax],0x0
   140006e59:	test   rbx,rbx
   140006e5c:	je     0x140006e78
   140006e5e:	mov    rdx,QWORD PTR [rip+0x1c243]        # 0x1400230a8
   140006e65:	mov    rcx,rbx
   140006e68:	call   0x14000c688
   140006e6d:	mov    r12,rax
   140006e70:	test   rax,rax
   140006e73:	je     0x140006e78
   140006e75:	mov    BYTE PTR [rax],0x0
   140006e78:	test   rdi,rdi
   140006e7b:	je     0x140006e8b
   140006e7d:	test   rbx,rbx
   140006e80:	jne    0x140006e9c
   140006e82:	mov    rdx,QWORD PTR [rip+0x1c227]        # 0x1400230b0
   140006e89:	jmp    0x140006e9f
   140006e8b:	test   rbx,rbx
   140006e8e:	je     0x140006e9c
   140006e90:	mov    rcx,QWORD PTR [rip+0x1c219]        # 0x1400230b0
   140006e97:	mov    rdx,rbx
   140006e9a:	jmp    0x140006ea2
   140006e9c:	mov    rdx,rbx
   140006e9f:	mov    rcx,rdi
   140006ea2:	call   0x140006cc8
   140006ea7:	mov    esi,eax
   140006ea9:	test   rbp,rbp
   140006eac:	je     0x140006eb4
   140006eae:	lea    rdi,[rbp+0x1]
   140006eb2:	jmp    0x140006eb6
   140006eb4:	xor    edi,edi
   140006eb6:	test   r12,r12
   140006eb9:	je     0x140006ec2
   140006ebb:	lea    rbx,[r12+0x1]
   140006ec0:	jmp    0x140006ec4
   140006ec2:	xor    ebx,ebx
   140006ec4:	test   esi,esi
   140006ec6:	jne    0x140006eda
   140006ec8:	test   rdi,rdi
   140006ecb:	jne    0x140006e3f
   140006ed1:	test   rbx,rbx
   140006ed4:	jne    0x140006e3a
   140006eda:	mov    rcx,r13
   140006edd:	call   0x140004084
   140006ee2:	mov    rcx,r14
   140006ee5:	call   0x140004084
   140006eea:	mov    rbx,QWORD PTR [rsp+0x40]
   140006eef:	mov    rbp,QWORD PTR [rsp+0x48]
   140006ef4:	mov    rdi,QWORD PTR [rsp+0x58]
   140006ef9:	mov    eax,esi
   140006efb:	mov    rsi,QWORD PTR [rsp+0x50]
   140006f00:	add    rsp,0x20
   140006f04:	pop    r14
   140006f06:	pop    r13
   140006f08:	pop    r12
   140006f0a:	ret    
   140006f0b:	int3   
   140006f0c:	mov    QWORD PTR [rsp+0x8],rbx
   140006f11:	mov    QWORD PTR [rsp+0x10],rbp
   140006f16:	mov    QWORD PTR [rsp+0x18],rsi
   140006f1b:	push   rdi
   140006f1c:	push   r12
   140006f1e:	push   r13
   140006f20:	sub    rsp,0x20
   140006f24:	mov    r12,rcx
   140006f27:	mov    rcx,rdx
   140006f2a:	call   0x140004058
   140006f2f:	xor    ebx,ebx
   140006f31:	mov    rdi,rax
   140006f34:	mov    r13,rax
   140006f37:	mov    edx,0x20
   140006f3c:	mov    rcx,rdi
   140006f3f:	call   0x14000c07c
   140006f44:	mov    rbp,rax
   140006f47:	test   rax,rax
   140006f4a:	je     0x140006f4e
   140006f4c:	mov    BYTE PTR [rax],bl
   140006f4e:	mov    edx,0x26
   140006f53:	mov    rcx,rdi
   140006f56:	call   0x14000c07c
   140006f5b:	mov    rsi,rax
   140006f5e:	test   rax,rax
   140006f61:	je     0x140006f65
   140006f63:	mov    BYTE PTR [rax],bl
   140006f65:	mov    rcx,rdi
   140006f68:	call   0x140009fd0
   140006f6d:	mov    rcx,r12
   140006f70:	cmp    BYTE PTR [rax+rdi*1-0x1],0x2a
   140006f75:	jne    0x140006f9e
   140006f77:	mov    edx,0x2d
   140006f7c:	mov    BYTE PTR [rax+rdi*1-0x1],bl
   140006f80:	call   0x14000c07c
   140006f85:	mov    rdx,rdi
   140006f88:	mov    rcx,r12
   140006f8b:	test   rax,rax
   140006f8e:	je     0x140006f97
   140006f90:	call   0x14000a880
   140006f95:	jmp    0x140006fd4
   140006f97:	call   0x140006d18
   140006f9c:	jmp    0x140006fd4
   140006f9e:	cmp    BYTE PTR [rax+rdi*1-0x1],0x2b
   140006fa3:	jne    0x140006fcc
   140006fa5:	mov    edx,0x2d
   140006faa:	mov    BYTE PTR [rax+rdi*1-0x1],bl
   140006fae:	call   0x14000c07c
   140006fb3:	mov    rdx,rdi
   140006fb6:	mov    rcx,r12
   140006fb9:	test   rax,rax
   140006fbc:	jne    0x140006f90
   140006fbe:	call   0x140006dfc
   140006fc3:	mov    ecx,ebx
   140006fc5:	test   eax,eax
   140006fc7:	setns  cl
   140006fca:	jmp    0x140006fdb
   140006fcc:	mov    rdx,rdi
   140006fcf:	call   0x140006dfc
   140006fd4:	test   eax,eax
   140006fd6:	mov    ecx,ebx
   140006fd8:	sete   cl
   140006fdb:	test   ecx,ecx
   140006fdd:	je     0x140006fed
   140006fdf:	test   rsi,rsi
   140006fe2:	je     0x140006ffb
   140006fe4:	lea    rdi,[rsi+0x1]
   140006fe8:	jmp    0x140006f4e
   140006fed:	test   rbp,rbp
   140006ff0:	je     0x140007000
   140006ff2:	lea    rdi,[rbp+0x1]
   140006ff6:	jmp    0x140006f37
   140006ffb:	mov    ebx,0x1
   140007000:	mov    rcx,r13
   140007003:	call   0x140004084
   140007008:	mov    rbp,QWORD PTR [rsp+0x48]
   14000700d:	mov    rsi,QWORD PTR [rsp+0x50]
   140007012:	mov    eax,ebx
   140007014:	mov    rbx,QWORD PTR [rsp+0x40]
   140007019:	add    rsp,0x20
   14000701d:	pop    r13
   14000701f:	pop    r12
   140007021:	pop    rdi
   140007022:	ret    
   140007023:	int3   
   140007024:	mov    rax,rsp
   140007027:	mov    QWORD PTR [rax+0x8],rbx
   14000702b:	mov    QWORD PTR [rax+0x10],rbp
   14000702f:	mov    QWORD PTR [rax+0x18],rsi
   140007033:	mov    QWORD PTR [rax+0x20],rdi
   140007037:	push   r12
   140007039:	sub    rsp,0x20
   14000703d:	mov    rbx,rcx
   140007040:	test   rcx,rcx
   140007043:	je     0x14000711f
   140007049:	call   0x140009fd0
   14000704e:	test   rax,rax
   140007051:	je     0x14000711f
   140007057:	mov    rcx,rbx
   14000705a:	call   0x140004058
   14000705f:	mov    rbx,rax
   140007062:	mov    r12,rax
   140007065:	mov    edx,0x20
   14000706a:	mov    rcx,rbx
   14000706d:	call   0x14000c07c
   140007072:	mov    rbp,rax
   140007075:	test   rax,rax
   140007078:	je     0x14000707d
   14000707a:	mov    BYTE PTR [rax],0x0
   14000707d:	test   rbx,rbx
   140007080:	je     0x140007117
   140007086:	mov    rcx,rbx
   140007089:	call   0x140009fd0
   14000708e:	test   rax,rax
   140007091:	je     0x140007117
   140007097:	mov    edx,0x26
   14000709c:	mov    rcx,rbx
   14000709f:	call   0x14000c07c
   1400070a4:	mov    rsi,rax
   1400070a7:	test   rax,rax
   1400070aa:	je     0x1400070af
   1400070ac:	mov    BYTE PTR [rax],0x0
   1400070af:	test   rbx,rbx
   1400070b2:	je     0x140007117
   1400070b4:	mov    rcx,rbx
   1400070b7:	call   0x140009fd0
   1400070bc:	test   rax,rax
   1400070bf:	je     0x140007117
   1400070c1:	lea    rdi,[rax+rbx*1-0x1]
   1400070c6:	cmp    BYTE PTR [rdi],0x2a
   1400070c9:	je     0x1400070d0
   1400070cb:	cmp    BYTE PTR [rdi],0x2b
   1400070ce:	jne    0x1400070db
   1400070d0:	dec    rax
   1400070d3:	je     0x140007117
   1400070d5:	mov    BYTE PTR [rdi],0x0
   1400070d8:	dec    rdi
   1400070db:	lea    rdx,[rip+0x14c82]        # 0x14001bd64
   1400070e2:	mov    rcx,rbx
   1400070e5:	call   0x14000c688
   1400070ea:	test   rax,rax
   1400070ed:	jne    0x140007117
   1400070ef:	movsx  edx,BYTE PTR [rbx]
   1400070f2:	lea    rcx,[rip+0x14c67]        # 0x14001bd60
   1400070f9:	call   0x14000c07c
   1400070fe:	test   rax,rax
   140007101:	jne    0x140007117
   140007103:	movsx  edx,BYTE PTR [rdi]
   140007106:	lea    rcx,[rip+0x14c53]        # 0x14001bd60
   14000710d:	call   0x14000c07c
   140007112:	test   rax,rax
   140007115:	je     0x140007168
   140007117:	mov    rcx,r12
   14000711a:	call   0x140004084
   14000711f:	xor    eax,eax
   140007121:	mov    rbx,QWORD PTR [rsp+0x30]
   140007126:	mov    rbp,QWORD PTR [rsp+0x38]
   14000712b:	mov    rsi,QWORD PTR [rsp+0x40]
   140007130:	mov    rdi,QWORD PTR [rsp+0x48]
   140007135:	add    rsp,0x20
   140007139:	pop    r12
   14000713b:	ret    
   14000713c:	movsx  edx,BYTE PTR [rbx]
   14000713f:	lea    rcx,[rip+0x14c1a]        # 0x14001bd60
   140007146:	call   0x14000c07c
   14000714b:	test   rax,rax
   14000714e:	je     0x140007165
   140007150:	movsx  edx,BYTE PTR [rbx+0x1]
   140007154:	lea    rcx,[rip+0x14c05]        # 0x14001bd60
   14000715b:	call   0x14000c07c
   140007160:	test   rax,rax
   140007163:	jne    0x140007117
   140007165:	inc    rbx
   140007168:	cmp    rbx,rdi
   14000716b:	jne    0x14000713c
   14000716d:	test   rsi,rsi
   140007170:	je     0x14000717b
   140007172:	lea    rbx,[rsi+0x1]
   140007176:	jmp    0x140007097
   14000717b:	test   rbp,rbp
   14000717e:	je     0x140007189
   140007180:	lea    rbx,[rbp+0x1]
   140007184:	jmp    0x140007065
   140007189:	mov    rcx,r12
   14000718c:	call   0x140004084
   140007191:	mov    eax,0x1
   140007196:	jmp    0x140007121
   140007198:	xor    eax,eax
   14000719a:	test   rcx,rcx
   14000719d:	je     0x1400071f1
   14000719f:	mov    rdx,QWORD PTR [rcx+0x28]
   1400071a3:	test   rdx,rdx
   1400071a6:	je     0x1400071f1
   1400071a8:	mov    DWORD PTR [rdx+0x1c],eax
   1400071ab:	mov    DWORD PTR [rcx+0x1c],eax
   1400071ae:	mov    DWORD PTR [rcx+0xc],eax
   1400071b1:	mov    QWORD PTR [rcx+0x20],rax
   1400071b5:	mov    DWORD PTR [rcx+0x4c],0x1
   1400071bc:	mov    QWORD PTR [rdx],rax
   1400071bf:	mov    DWORD PTR [rdx+0xc],eax
   1400071c2:	mov    QWORD PTR [rdx+0x20],rax
   1400071c6:	mov    QWORD PTR [rdx+0x2c],rax
   1400071ca:	mov    DWORD PTR [rdx+0x34],eax
   1400071cd:	mov    QWORD PTR [rdx+0x40],rax
   1400071d1:	lea    rax,[rdx+0x548]
   1400071d8:	mov    QWORD PTR [rdx+0x80],rax
   1400071df:	mov    QWORD PTR [rdx+0x60],rax
   1400071e3:	mov    QWORD PTR [rdx+0x58],rax
   1400071e7:	xor    eax,eax
   1400071e9:	mov    DWORD PTR [rdx+0x14],0x8000
   1400071f0:	ret    
   1400071f1:	mov    eax,0xfffffffe
   1400071f6:	ret    
   1400071f7:	int3   
   1400071f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400071fd:	push   rdi
   1400071fe:	sub    rsp,0x20
   140007202:	mov    edi,edx
   140007204:	mov    rbx,rcx
   140007207:	test   r8,r8
   14000720a:	je     0x1400072d2
   140007210:	cmp    BYTE PTR [r8],0x31
   140007214:	jne    0x1400072d2
   14000721a:	cmp    r9d,0x58
   14000721e:	jne    0x1400072d2
   140007224:	test   rcx,rcx
   140007227:	jne    0x140007233
   140007229:	mov    eax,0xfffffffe
   14000722e:	jmp    0x1400072d7
   140007233:	and    QWORD PTR [rcx+0x20],0x0
   140007238:	cmp    QWORD PTR [rcx+0x30],0x0
   14000723d:	jne    0x14000724f
   14000723f:	and    QWORD PTR [rcx+0x40],0x0
   140007244:	lea    rax,[rip+0x1765]        # 0x1400089b0
   14000724b:	mov    QWORD PTR [rcx+0x30],rax
   14000724f:	mov    rax,QWORD PTR [rcx+0x38]
   140007253:	lea    rcx,[rip+0x1762]        # 0x1400089bc
   14000725a:	mov    edx,0x1
   14000725f:	cmp    rax,0x0
   140007263:	mov    r8d,0x2548
   140007269:	cmove  rax,rcx
   14000726d:	mov    rcx,QWORD PTR [rbx+0x40]
   140007271:	mov    QWORD PTR [rbx+0x38],rax
   140007275:	call   QWORD PTR [rbx+0x30]
   140007278:	mov    rdx,rax
   14000727b:	test   rax,rax
   14000727e:	jne    0x140007285
   140007280:	lea    eax,[rdx-0x4]
   140007283:	jmp    0x1400072d7
   140007285:	mov    QWORD PTR [rbx+0x28],rax
   140007289:	test   edi,edi
   14000728b:	jns    0x140007295
   14000728d:	and    DWORD PTR [rax+0x8],0x0
   140007291:	neg    edi
   140007293:	jmp    0x1400072a7
   140007295:	mov    eax,edi
   140007297:	sar    eax,0x4
   14000729a:	inc    eax
   14000729c:	mov    DWORD PTR [rdx+0x8],eax
   14000729f:	cmp    edi,0x30
   1400072a2:	jge    0x1400072a7
   1400072a4:	and    edi,0xf
   1400072a7:	lea    eax,[rdi-0x8]
   1400072aa:	cmp    eax,0x7
   1400072ad:	ja     0x1400072c1
   1400072af:	and    QWORD PTR [rdx+0x38],0x0
   1400072b4:	mov    rcx,rbx
   1400072b7:	mov    DWORD PTR [rdx+0x28],edi
   1400072ba:	call   0x140007198
   1400072bf:	jmp    0x1400072d7
   1400072c1:	mov    rcx,QWORD PTR [rbx+0x40]
   1400072c5:	call   QWORD PTR [rbx+0x38]
   1400072c8:	and    QWORD PTR [rbx+0x28],0x0
   1400072cd:	jmp    0x140007229
   1400072d2:	mov    eax,0xfffffffa
   1400072d7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400072dc:	add    rsp,0x20
   1400072e0:	pop    rdi
   1400072e1:	ret    
   1400072e2:	int3   
   1400072e3:	int3   
   1400072e4:	mov    rax,rsp
   1400072e7:	mov    QWORD PTR [rax+0x8],rbx
   1400072eb:	mov    QWORD PTR [rax+0x10],rbp
   1400072ef:	mov    QWORD PTR [rax+0x18],rsi
   1400072f3:	mov    QWORD PTR [rax+0x20],rdi
   1400072f7:	push   r12
   1400072f9:	sub    rsp,0x20
   1400072fd:	mov    rbx,QWORD PTR [rcx+0x28]
   140007301:	xor    r12d,r12d
   140007304:	mov    ebp,edx
   140007306:	mov    rsi,rcx
   140007309:	mov    edi,0x1
   14000730e:	cmp    QWORD PTR [rbx+0x38],r12
   140007312:	jne    0x140007335
   140007314:	mov    ecx,DWORD PTR [rbx+0x28]
   140007317:	mov    edx,edi
   140007319:	mov    r8d,edi
   14000731c:	shl    edx,cl
   14000731e:	mov    rcx,QWORD PTR [rsi+0x40]
   140007322:	call   QWORD PTR [rsi+0x30]
   140007325:	mov    QWORD PTR [rbx+0x38],rax
   140007329:	test   rax,rax
   14000732c:	jne    0x140007335
   14000732e:	mov    eax,edi
   140007330:	jmp    0x1400073c5
   140007335:	cmp    DWORD PTR [rbx+0x2c],r12d
   140007339:	jne    0x140007347
   14000733b:	mov    ecx,DWORD PTR [rbx+0x28]
   14000733e:	mov    QWORD PTR [rbx+0x30],r12
   140007342:	shl    edi,cl
   140007344:	mov    DWORD PTR [rbx+0x2c],edi
   140007347:	sub    ebp,DWORD PTR [rsi+0x18]
   14000734a:	mov    edi,DWORD PTR [rbx+0x2c]
   14000734d:	mov    rdx,QWORD PTR [rsi+0x10]
   140007351:	cmp    ebp,edi
   140007353:	jb     0x14000736d
   140007355:	mov    rcx,QWORD PTR [rbx+0x38]
   140007359:	mov    r8d,edi
   14000735c:	sub    rdx,rdi
   14000735f:	call   0x14000a170
   140007364:	mov    DWORD PTR [rbx+0x34],r12d
   140007368:	mov    eax,DWORD PTR [rbx+0x2c]
   14000736b:	jmp    0x1400073c0
   14000736d:	sub    edi,DWORD PTR [rbx+0x34]
   140007370:	mov    ecx,DWORD PTR [rbx+0x34]
   140007373:	mov    eax,ebp
   140007375:	cmp    edi,ebp
   140007377:	cmova  edi,ebp
   14000737a:	add    rcx,QWORD PTR [rbx+0x38]
   14000737e:	sub    rdx,rax
   140007381:	mov    r8d,edi
   140007384:	call   0x14000a170
   140007389:	sub    ebp,edi
   14000738b:	je     0x1400073a5
   14000738d:	mov    rdx,QWORD PTR [rsi+0x10]
   140007391:	mov    rcx,QWORD PTR [rbx+0x38]
   140007395:	mov    r8d,ebp
   140007398:	sub    rdx,r8
   14000739b:	call   0x14000a170
   1400073a0:	mov    DWORD PTR [rbx+0x34],ebp
   1400073a3:	jmp    0x140007368
   1400073a5:	add    DWORD PTR [rbx+0x34],edi
   1400073a8:	mov    eax,DWORD PTR [rbx+0x34]
   1400073ab:	mov    ecx,DWORD PTR [rbx+0x2c]
   1400073ae:	cmp    eax,ecx
   1400073b0:	cmove  eax,r12d
   1400073b4:	mov    DWORD PTR [rbx+0x34],eax
   1400073b7:	mov    eax,DWORD PTR [rbx+0x30]
   1400073ba:	cmp    eax,ecx
   1400073bc:	jae    0x1400073c3
   1400073be:	add    eax,edi
   1400073c0:	mov    DWORD PTR [rbx+0x30],eax
   1400073c3:	xor    eax,eax
   1400073c5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400073ca:	mov    rbp,QWORD PTR [rsp+0x38]
   1400073cf:	mov    rsi,QWORD PTR [rsp+0x40]
   1400073d4:	mov    rdi,QWORD PTR [rsp+0x48]
   1400073d9:	add    rsp,0x20
   1400073dd:	pop    r12
   1400073df:	ret    
   1400073e0:	mov    DWORD PTR [rsp+0x10],edx
   1400073e4:	push   rbp
   1400073e5:	push   rbx
   1400073e6:	push   rsi
   1400073e7:	push   rdi
   1400073e8:	push   r12
   1400073ea:	push   r13
   1400073ec:	push   r14
   1400073ee:	push   r15
   1400073f0:	mov    rbp,rsp
   1400073f3:	sub    rsp,0x58
   1400073f7:	xor    r11d,r11d
   1400073fa:	mov    ebx,edx
   1400073fc:	mov    r14,rcx
   1400073ff:	test   rcx,rcx
   140007402:	je     0x1400074cb
   140007408:	mov    rdi,QWORD PTR [rcx+0x28]
   14000740c:	test   rdi,rdi
   14000740f:	je     0x1400074cb
   140007415:	cmp    QWORD PTR [rcx+0x10],r11
   140007419:	je     0x1400074cb
   14000741f:	cmp    QWORD PTR [rcx],r11
   140007422:	jne    0x14000742e
   140007424:	cmp    DWORD PTR [rcx+0x8],r11d
   140007428:	jne    0x1400074cb
   14000742e:	mov    eax,DWORD PTR [rdi]
   140007430:	mov    r12d,DWORD PTR [rdi+0x40]
   140007434:	mov    esi,DWORD PTR [rdi+0x44]
   140007437:	cmp    eax,0xb
   14000743a:	mov    ecx,0xc
   14000743f:	mov    DWORD PTR [rbp+0x48],r11d
   140007443:	cmove  eax,ecx
   140007446:	mov    DWORD PTR [rdi],eax
   140007448:	mov    r9d,DWORD PTR [r14+0x18]
   14000744c:	mov    r13,QWORD PTR [r14]
   14000744f:	mov    r15d,DWORD PTR [r14+0x8]
   140007453:	mov    r10,QWORD PTR [r14+0x10]
   140007457:	mov    QWORD PTR [rbp-0x18],r13
   14000745b:	mov    DWORD PTR [rbp-0x20],r15d
   14000745f:	mov    r8d,r9d
   140007462:	mov    DWORD PTR [rbp+0x60],r9d
   140007466:	mov    edx,0x10
   14000746b:	mov    DWORD PTR [rbp+0x58],r9d
   14000746f:	mov    QWORD PTR [rbp-0x10],r10
   140007473:	mov    eax,0x7
   140007478:	mov    ecx,DWORD PTR [rdi]
   14000747a:	cmp    ecx,0xe
   14000747d:	jg     0x140007db3
   140007483:	je     0x140007b54
   140007489:	cmp    ecx,eax
   14000748b:	jg     0x140007ac4
   140007491:	je     0x14000784e
   140007497:	test   ecx,ecx
   140007499:	je     0x14000792b
   14000749f:	dec    ecx
   1400074a1:	je     0x140007503
   1400074a3:	dec    ecx
   1400074a5:	je     0x1400075a3
   1400074ab:	dec    ecx
   1400074ad:	je     0x140007629
   1400074b3:	dec    ecx
   1400074b5:	je     0x140007687
   1400074bb:	dec    ecx
   1400074bd:	je     0x1400076a7
   1400074c3:	dec    ecx
   1400074c5:	je     0x1400077b5
   1400074cb:	mov    eax,0xfffffffe
   1400074d0:	add    rsp,0x58
   1400074d4:	pop    r15
   1400074d6:	pop    r14
   1400074d8:	pop    r13
   1400074da:	pop    r12
   1400074dc:	pop    rdi
   1400074dd:	pop    rsi
   1400074de:	pop    rbx
   1400074df:	pop    rbp
   1400074e0:	ret    
   1400074e1:	test   r15d,r15d
   1400074e4:	je     0x1400078ca
   1400074ea:	movzx  eax,BYTE PTR [r13+0x0]
   1400074ef:	mov    ecx,esi
   1400074f1:	inc    r13
   1400074f4:	shl    eax,cl
   1400074f6:	dec    r15d
   1400074f9:	mov    QWORD PTR [rbp-0x18],r13
   1400074fd:	add    r12d,eax
   140007500:	add    esi,0x8
   140007503:	cmp    esi,edx
   140007505:	jb     0x1400074e1
   140007507:	mov    DWORD PTR [rdi+0x10],r12d
   14000750b:	cmp    r12b,0x8
   14000750f:	je     0x14000751d
   140007511:	lea    rax,[rip+0x152c8]        # 0x14001c7e0
   140007518:	jmp    0x140007a78
   14000751d:	test   r12d,0xe000
   140007524:	je     0x140007532
   140007526:	lea    rax,[rip+0x15293]        # 0x14001c7c0
   14000752d:	jmp    0x140007a78
   140007532:	mov    rcx,QWORD PTR [rdi+0x20]
   140007536:	test   rcx,rcx
   140007539:	je     0x140007546
   14000753b:	mov    eax,r12d
   14000753e:	shr    eax,0x8
   140007541:	and    eax,0x1
   140007544:	mov    DWORD PTR [rcx],eax
   140007546:	test   DWORD PTR [rdi+0x10],0x200
   14000754d:	je     0x140007573
   14000754f:	mov    BYTE PTR [rbp-0x28],r12b
   140007553:	shr    r12d,0x8
   140007557:	lea    rdx,[rbp-0x28]
   14000755b:	mov    BYTE PTR [rbp-0x27],r12b
   14000755f:	mov    ecx,DWORD PTR [rdi+0x18]
   140007562:	mov    r8d,0x2
   140007568:	call   0x14000986c
   14000756d:	xor    r11d,r11d
   140007570:	mov    DWORD PTR [rdi+0x18],eax
   140007573:	mov    r12d,r11d
   140007576:	mov    esi,r11d
   140007579:	mov    DWORD PTR [rdi],0x2
   14000757f:	jmp    0x1400075a3
   140007581:	test   r15d,r15d
   140007584:	je     0x1400078ca
   14000758a:	movzx  eax,BYTE PTR [r13+0x0]
   14000758f:	mov    ecx,esi
   140007591:	inc    r13
   140007594:	shl    eax,cl
   140007596:	dec    r15d
   140007599:	mov    QWORD PTR [rbp-0x18],r13
   14000759d:	add    r12d,eax
   1400075a0:	add    esi,0x8
   1400075a3:	cmp    esi,0x20
   1400075a6:	jb     0x140007581
   1400075a8:	mov    rax,QWORD PTR [rdi+0x20]
   1400075ac:	test   rax,rax
   1400075af:	je     0x1400075b5
   1400075b1:	mov    DWORD PTR [rax+0x4],r12d
   1400075b5:	test   DWORD PTR [rdi+0x10],0x200
   1400075bc:	je     0x1400075f4
   1400075be:	mov    eax,r12d
   1400075c1:	mov    BYTE PTR [rbp-0x28],r12b
   1400075c5:	lea    rdx,[rbp-0x28]
   1400075c9:	shr    eax,0x8
   1400075cc:	mov    r8d,0x4
   1400075d2:	mov    BYTE PTR [rbp-0x27],al
   1400075d5:	mov    eax,r12d
   1400075d8:	shr    r12d,0x18
   1400075dc:	shr    eax,0x10
   1400075df:	mov    BYTE PTR [rbp-0x25],r12b
   1400075e3:	mov    BYTE PTR [rbp-0x26],al
   1400075e6:	mov    ecx,DWORD PTR [rdi+0x18]
   1400075e9:	call   0x14000986c
   1400075ee:	xor    r11d,r11d
   1400075f1:	mov    DWORD PTR [rdi+0x18],eax
   1400075f4:	mov    r12d,r11d
   1400075f7:	mov    esi,r11d
   1400075fa:	mov    DWORD PTR [rdi],0x3
   140007600:	mov    edx,0x10
   140007605:	jmp    0x140007629
   140007607:	test   r15d,r15d
   14000760a:	je     0x1400078ca
   140007610:	movzx  eax,BYTE PTR [r13+0x0]
   140007615:	mov    ecx,esi
   140007617:	inc    r13
   14000761a:	shl    eax,cl
   14000761c:	dec    r15d
   14000761f:	mov    QWORD PTR [rbp-0x18],r13
   140007623:	add    r12d,eax
   140007626:	add    esi,0x8
   140007629:	cmp    esi,edx
   14000762b:	jb     0x140007607
   14000762d:	mov    rcx,QWORD PTR [rdi+0x20]
   140007631:	test   rcx,rcx
   140007634:	je     0x14000764a
   140007636:	movzx  eax,r12b
   14000763a:	mov    DWORD PTR [rcx+0x8],eax
   14000763d:	mov    rax,QWORD PTR [rdi+0x20]
   140007641:	mov    ecx,r12d
   140007644:	shr    ecx,0x8
   140007647:	mov    DWORD PTR [rax+0xc],ecx
   14000764a:	test   DWORD PTR [rdi+0x10],0x200
   140007651:	je     0x14000767b
   140007653:	mov    BYTE PTR [rbp-0x28],r12b
   140007657:	shr    r12d,0x8
   14000765b:	lea    rdx,[rbp-0x28]
   14000765f:	mov    BYTE PTR [rbp-0x27],r12b
   140007663:	mov    ecx,DWORD PTR [rdi+0x18]
   140007666:	mov    r8d,0x2
   14000766c:	call   0x14000986c
   140007671:	xor    r11d,r11d
   140007674:	mov    DWORD PTR [rdi+0x18],eax
   140007677:	lea    edx,[r11+0x10]
   14000767b:	mov    r12d,r11d
   14000767e:	mov    esi,r11d
   140007681:	mov    DWORD PTR [rdi],0x4
   140007687:	test   DWORD PTR [rdi+0x10],0x400
   14000768e:	jne    0x140007716
   140007694:	mov    rax,QWORD PTR [rdi+0x20]
   140007698:	test   rax,rax
   14000769b:	je     0x1400076a1
   14000769d:	mov    QWORD PTR [rax+0x10],r11
   1400076a1:	mov    DWORD PTR [rdi],0x5
   1400076a7:	test   DWORD PTR [rdi+0x10],0x400
   1400076ae:	je     0x1400077ab
   1400076b4:	mov    ebx,DWORD PTR [rdi+0x48]
   1400076b7:	cmp    ebx,r15d
   1400076ba:	cmova  ebx,r15d
   1400076be:	test   ebx,ebx
   1400076c0:	je     0x1400077a1
   1400076c6:	mov    rax,QWORD PTR [rdi+0x20]
   1400076ca:	test   rax,rax
   1400076cd:	je     0x140007775
   1400076d3:	mov    r9,QWORD PTR [rax+0x10]
   1400076d7:	test   r9,r9
   1400076da:	je     0x140007775
   1400076e0:	mov    edx,DWORD PTR [rax+0x18]
   1400076e3:	mov    ecx,DWORD PTR [rax+0x1c]
   1400076e6:	sub    edx,DWORD PTR [rdi+0x48]
   1400076e9:	lea    eax,[rbx+rdx*1]
   1400076ec:	cmp    eax,ecx
   1400076ee:	jbe    0x140007763
   1400076f0:	sub    ecx,edx
   1400076f2:	jmp    0x140007765
   1400076f4:	test   r15d,r15d
   1400076f7:	je     0x1400078ca
   1400076fd:	movzx  eax,BYTE PTR [r13+0x0]
   140007702:	mov    ecx,esi
   140007704:	inc    r13
   140007707:	shl    eax,cl
   140007709:	dec    r15d
   14000770c:	mov    QWORD PTR [rbp-0x18],r13
   140007710:	add    r12d,eax
   140007713:	add    esi,0x8
   140007716:	cmp    esi,edx
   140007718:	jb     0x1400076f4
   14000771a:	mov    rax,QWORD PTR [rdi+0x20]
   14000771e:	mov    DWORD PTR [rdi+0x48],r12d
   140007722:	test   rax,rax
   140007725:	je     0x14000772b
   140007727:	mov    DWORD PTR [rax+0x18],r12d
   14000772b:	test   DWORD PTR [rdi+0x10],0x200
   140007732:	je     0x140007758
   140007734:	mov    BYTE PTR [rbp-0x28],r12b
   140007738:	shr    r12d,0x8
   14000773c:	lea    rdx,[rbp-0x28]
   140007740:	mov    BYTE PTR [rbp-0x27],r12b
   140007744:	mov    ecx,DWORD PTR [rdi+0x18]
   140007747:	mov    r8d,0x2
   14000774d:	call   0x14000986c
   140007752:	xor    r11d,r11d
   140007755:	mov    DWORD PTR [rdi+0x18],eax
   140007758:	mov    r12d,r11d
   14000775b:	mov    esi,r11d
   14000775e:	jmp    0x1400076a1
   140007763:	mov    ecx,ebx
   140007765:	mov    r8d,ecx
   140007768:	mov    ecx,edx
   14000776a:	mov    rdx,r13
   14000776d:	add    rcx,r9
   140007770:	call   0x14000a170
   140007775:	test   DWORD PTR [rdi+0x10],0x200
   14000777c:	je     0x14000778f
   14000777e:	mov    ecx,DWORD PTR [rdi+0x18]
   140007781:	mov    r8d,ebx
   140007784:	mov    rdx,r13
   140007787:	call   0x14000986c
   14000778c:	mov    DWORD PTR [rdi+0x18],eax
   14000778f:	sub    DWORD PTR [rdi+0x48],ebx
   140007792:	mov    eax,ebx
   140007794:	sub    r15d,ebx
   140007797:	add    r13,rax
   14000779a:	xor    r11d,r11d
   14000779d:	mov    QWORD PTR [rbp-0x18],r13
   1400077a1:	cmp    DWORD PTR [rdi+0x48],r11d
   1400077a5:	jne    0x1400078ca
   1400077ab:	mov    DWORD PTR [rdi+0x48],r11d
   1400077af:	mov    DWORD PTR [rdi],0x6
   1400077b5:	test   DWORD PTR [rdi+0x10],0x800
   1400077bc:	je     0x140007837
   1400077be:	test   r15d,r15d
   1400077c1:	je     0x1400078ca
   1400077c7:	mov    ebx,r11d
   1400077ca:	mov    r8,r13
   1400077cd:	mov    rax,QWORD PTR [rdi+0x20]
   1400077d1:	movzx  r13d,BYTE PTR [r8]
   1400077d5:	inc    ebx
   1400077d7:	inc    r8
   1400077da:	test   rax,rax
   1400077dd:	je     0x1400077f7
   1400077df:	mov    rdx,QWORD PTR [rax+0x20]
   1400077e3:	test   rdx,rdx
   1400077e6:	je     0x1400077f7
   1400077e8:	mov    ecx,DWORD PTR [rdi+0x48]
   1400077eb:	cmp    ecx,DWORD PTR [rax+0x28]
   1400077ee:	jae    0x1400077f7
   1400077f0:	mov    BYTE PTR [rcx+rdx*1],r13b
   1400077f4:	inc    DWORD PTR [rdi+0x48]
   1400077f7:	test   r13d,r13d
   1400077fa:	je     0x140007801
   1400077fc:	cmp    ebx,r15d
   1400077ff:	jb     0x1400077cd
   140007801:	test   DWORD PTR [rdi+0x10],0x200
   140007808:	je     0x14000781f
   14000780a:	mov    rdx,QWORD PTR [rbp-0x18]
   14000780e:	mov    ecx,DWORD PTR [rdi+0x18]
   140007811:	mov    r8d,ebx
   140007814:	call   0x14000986c
   140007819:	xor    r11d,r11d
   14000781c:	mov    DWORD PTR [rdi+0x18],eax
   14000781f:	mov    eax,ebx
   140007821:	sub    r15d,ebx
   140007824:	add    QWORD PTR [rbp-0x18],rax
   140007828:	test   r13d,r13d
   14000782b:	jne    0x1400078ca
   140007831:	mov    r13,QWORD PTR [rbp-0x18]
   140007835:	jmp    0x140007844
   140007837:	mov    rax,QWORD PTR [rdi+0x20]
   14000783b:	test   rax,rax
   14000783e:	je     0x140007844
   140007840:	mov    QWORD PTR [rax+0x20],r11
   140007844:	mov    DWORD PTR [rdi+0x48],r11d
   140007848:	mov    DWORD PTR [rdi],0x7
   14000784e:	test   DWORD PTR [rdi+0x10],0x1000
   140007855:	je     0x140007a87
   14000785b:	test   r15d,r15d
   14000785e:	je     0x1400078ca
   140007860:	mov    ebx,r11d
   140007863:	mov    r8,r13
   140007866:	mov    rax,QWORD PTR [rdi+0x20]
   14000786a:	movzx  r13d,BYTE PTR [r8]
   14000786e:	inc    ebx
   140007870:	inc    r8
   140007873:	test   rax,rax
   140007876:	je     0x140007890
   140007878:	mov    rdx,QWORD PTR [rax+0x30]
   14000787c:	test   rdx,rdx
   14000787f:	je     0x140007890
   140007881:	mov    ecx,DWORD PTR [rdi+0x48]
   140007884:	cmp    ecx,DWORD PTR [rax+0x38]
   140007887:	jae    0x140007890
   140007889:	mov    BYTE PTR [rcx+rdx*1],r13b
   14000788d:	inc    DWORD PTR [rdi+0x48]
   140007890:	test   r13d,r13d
   140007893:	je     0x14000789a
   140007895:	cmp    ebx,r15d
   140007898:	jb     0x140007866
   14000789a:	test   DWORD PTR [rdi+0x10],0x200
   1400078a1:	je     0x1400078b8
   1400078a3:	mov    rdx,QWORD PTR [rbp-0x18]
   1400078a7:	mov    ecx,DWORD PTR [rdi+0x18]
   1400078aa:	mov    r8d,ebx
   1400078ad:	call   0x14000986c
   1400078b2:	xor    r11d,r11d
   1400078b5:	mov    DWORD PTR [rdi+0x18],eax
   1400078b8:	mov    eax,ebx
   1400078ba:	sub    r15d,ebx
   1400078bd:	add    QWORD PTR [rbp-0x18],rax
   1400078c1:	test   r13d,r13d
   1400078c4:	je     0x140007a94
   1400078ca:	mov    r13d,DWORD PTR [rbp+0x48]
   1400078ce:	mov    rax,QWORD PTR [rbp-0x10]
   1400078d2:	mov    ebx,DWORD PTR [rbp+0x60]
   1400078d5:	mov    DWORD PTR [r14+0x8],r15d
   1400078d9:	mov    QWORD PTR [r14+0x10],rax
   1400078dd:	mov    eax,DWORD PTR [rbp+0x58]
   1400078e0:	mov    DWORD PTR [r14+0x18],eax
   1400078e4:	mov    rax,QWORD PTR [rbp-0x18]
   1400078e8:	mov    QWORD PTR [r14],rax
   1400078eb:	mov    DWORD PTR [rdi+0x40],r12d
   1400078ef:	xor    r12d,r12d
   1400078f2:	mov    DWORD PTR [rdi+0x44],esi
   1400078f5:	cmp    DWORD PTR [rdi+0x2c],r12d
   1400078f9:	jne    0x14000790e
   1400078fb:	cmp    DWORD PTR [rdi],0x18
   1400078fe:	jge    0x1400088d3
   140007904:	cmp    ebx,DWORD PTR [r14+0x18]
   140007908:	je     0x1400088d3
   14000790e:	mov    edx,ebx
   140007910:	mov    rcx,r14
   140007913:	call   0x1400072e4
   140007918:	test   eax,eax
   14000791a:	je     0x1400088d3
   140007920:	mov    DWORD PTR [rdi],0x1c
   140007926:	jmp    0x14000874c
   14000792b:	cmp    DWORD PTR [rdi+0x8],r11d
   14000792f:	jne    0x14000795a
   140007931:	mov    DWORD PTR [rdi],0xc
   140007937:	jmp    0x140007473
   14000793c:	test   r15d,r15d
   14000793f:	je     0x1400078ca
   140007941:	movzx  eax,BYTE PTR [r13+0x0]
   140007946:	mov    ecx,esi
   140007948:	inc    r13
   14000794b:	shl    eax,cl
   14000794d:	dec    r15d
   140007950:	mov    QWORD PTR [rbp-0x18],r13
   140007954:	add    r12d,eax
   140007957:	add    esi,0x8
   14000795a:	cmp    esi,edx
   14000795c:	jb     0x14000793c
   14000795e:	test   BYTE PTR [rdi+0x8],0x2
   140007962:	je     0x1400079bb
   140007964:	cmp    r12d,0x8b1f
   14000796b:	jne    0x1400079bb
   14000796d:	xor    r8d,r8d
   140007970:	xor    edx,edx
   140007972:	xor    ecx,ecx
   140007974:	call   0x14000986c
   140007979:	lea    rdx,[rbp-0x28]
   14000797d:	mov    r8d,0x2
   140007983:	mov    DWORD PTR [rdi+0x18],eax
   140007986:	mov    WORD PTR [rbp-0x28],r12w
   14000798b:	mov    ecx,DWORD PTR [rdi+0x18]
   14000798e:	call   0x14000986c
   140007993:	mov    DWORD PTR [rdi],0x1
   140007999:	mov    DWORD PTR [rdi+0x18],eax
   14000799c:	xor    r11d,r11d
   14000799f:	mov    esi,r11d
   1400079a2:	mov    r12d,r11d
   1400079a5:	mov    r10,QWORD PTR [rbp-0x10]
   1400079a9:	mov    r8d,DWORD PTR [rbp+0x60]
   1400079ad:	mov    r9d,DWORD PTR [rbp+0x58]
   1400079b1:	mov    edx,0x10
   1400079b6:	jmp    0x140007473
   1400079bb:	mov    rax,QWORD PTR [rdi+0x20]
   1400079bf:	mov    DWORD PTR [rdi+0x10],r11d
   1400079c3:	test   rax,rax
   1400079c6:	je     0x1400079cc
   1400079c8:	or     DWORD PTR [rax+0x40],0xffffffff
   1400079cc:	test   BYTE PTR [rdi+0x8],0x1
   1400079d0:	je     0x140007a71
   1400079d6:	movzx  ecx,r12b
   1400079da:	mov    eax,r12d
   1400079dd:	shr    eax,0x8
   1400079e0:	shl    ecx,0x8
   1400079e3:	add    ecx,eax
   1400079e5:	mov    eax,0x8421085
   1400079ea:	mul    ecx
   1400079ec:	mov    eax,ecx
   1400079ee:	sub    eax,edx
   1400079f0:	shr    eax,1
   1400079f2:	add    eax,edx
   1400079f4:	shr    eax,0x4
   1400079f7:	imul   eax,eax,0x1f
   1400079fa:	cmp    ecx,eax
   1400079fc:	jne    0x140007a6c
   1400079fe:	mov    eax,r12d
   140007a01:	and    al,0xf
   140007a03:	cmp    al,0x8
   140007a05:	je     0x140007a1a
   140007a07:	lea    rax,[rip+0x14dd2]        # 0x14001c7e0
   140007a0e:	mov    QWORD PTR [r14+0x20],rax
   140007a12:	mov    DWORD PTR [rdi],0x1b
   140007a18:	jmp    0x1400079b1
   140007a1a:	shr    r12d,0x4
   140007a1e:	add    esi,0xfffffffc
   140007a21:	mov    ecx,r12d
   140007a24:	and    ecx,0xf
   140007a27:	add    ecx,0x8
   140007a2a:	cmp    ecx,DWORD PTR [rdi+0x28]
   140007a2d:	jbe    0x140007a38
   140007a2f:	lea    rax,[rip+0x14d72]        # 0x14001c7a8
   140007a36:	jmp    0x140007a0e
   140007a38:	mov    eax,0x1
   140007a3d:	xor    r8d,r8d
   140007a40:	xor    edx,edx
   140007a42:	shl    eax,cl
   140007a44:	xor    ecx,ecx
   140007a46:	mov    DWORD PTR [rdi+0x14],eax
   140007a49:	call   0x14000928c
   140007a4e:	shr    r12d,0x8
   140007a52:	not    r12d
   140007a55:	mov    DWORD PTR [rdi+0x18],eax
   140007a58:	mov    DWORD PTR [r14+0x4c],eax
   140007a5c:	and    r12d,0x2
   140007a60:	or     r12d,0x9
   140007a64:	mov    DWORD PTR [rdi],r12d
   140007a67:	jmp    0x14000799c
   140007a6c:	mov    edx,0x10
   140007a71:	lea    rax,[rip+0x14d18]        # 0x14001c790
   140007a78:	mov    QWORD PTR [r14+0x20],rax
   140007a7c:	mov    DWORD PTR [rdi],0x1b
   140007a82:	jmp    0x140007473
   140007a87:	mov    rax,QWORD PTR [rdi+0x20]
   140007a8b:	test   rax,rax
   140007a8e:	je     0x140007a94
   140007a90:	mov    QWORD PTR [rax+0x30],r11
   140007a94:	mov    r13,QWORD PTR [rbp-0x18]
   140007a98:	mov    r8d,DWORD PTR [rbp+0x60]
   140007a9c:	mov    r9d,DWORD PTR [rbp+0x58]
   140007aa0:	mov    r10,QWORD PTR [rbp-0x10]
   140007aa4:	mov    ebx,DWORD PTR [rbp+0x50]
   140007aa7:	mov    DWORD PTR [rdi],0x8
   140007aad:	mov    edx,0x10
   140007ab2:	test   DWORD PTR [rdi+0x10],0x200
   140007ab9:	je     0x140007d57
   140007abf:	jmp    0x140007d38
   140007ac4:	sub    ecx,0x8
   140007ac7:	je     0x140007ab2
   140007ac9:	dec    ecx
   140007acb:	je     0x140007bd8
   140007ad1:	dec    ecx
   140007ad3:	je     0x140007c16
   140007ad9:	dec    ecx
   140007adb:	je     0x140007c4c
   140007ae1:	dec    ecx
   140007ae3:	je     0x140007c55
   140007ae9:	dec    ecx
   140007aeb:	jne    0x1400074cb
   140007af1:	mov    ecx,esi
   140007af3:	and    ecx,0x7
   140007af6:	shr    r12d,cl
   140007af9:	sub    esi,ecx
   140007afb:	jmp    0x140007b1f
   140007afd:	test   r15d,r15d
   140007b00:	je     0x1400078ca
   140007b06:	movzx  eax,BYTE PTR [r13+0x0]
   140007b0b:	mov    ecx,esi
   140007b0d:	inc    r13
   140007b10:	shl    eax,cl
   140007b12:	dec    r15d
   140007b15:	mov    QWORD PTR [rbp-0x18],r13
   140007b19:	add    r12d,eax
   140007b1c:	add    esi,0x8
   140007b1f:	cmp    esi,0x20
   140007b22:	jb     0x140007afd
   140007b24:	mov    eax,r12d
   140007b27:	movzx  ecx,r12w
   140007b2b:	not    eax
   140007b2d:	shr    eax,0x10
   140007b30:	cmp    ecx,eax
   140007b32:	je     0x140007b40
   140007b34:	lea    rax,[rip+0x14c35]        # 0x14001c770
   140007b3b:	jmp    0x140007a78
   140007b40:	mov    DWORD PTR [rdi+0x48],ecx
   140007b43:	mov    r12d,r11d
   140007b46:	mov    esi,r11d
   140007b49:	mov    DWORD PTR [rdi],0xe
   140007b4f:	mov    eax,0x7
   140007b54:	mov    r13d,DWORD PTR [rdi+0x48]
   140007b58:	test   r13d,r13d
   140007b5b:	je     0x140007da4
   140007b61:	cmp    r13d,r15d
   140007b64:	cmova  r13d,r15d
   140007b68:	cmp    r13d,r9d
   140007b6b:	cmova  r13d,r9d
   140007b6f:	test   r13d,r13d
   140007b72:	je     0x1400078ca
   140007b78:	mov    rdx,QWORD PTR [rbp-0x18]
   140007b7c:	mov    r8d,r13d
   140007b7f:	mov    rcx,r10
   140007b82:	mov    ebx,r13d
   140007b85:	call   0x14000a170
   140007b8a:	add    QWORD PTR [rbp-0x18],rbx
   140007b8e:	mov    r9d,DWORD PTR [rbp+0x58]
   140007b92:	mov    r10,QWORD PTR [rbp-0x10]
   140007b96:	sub    r15d,r13d
   140007b99:	sub    r9d,r13d
   140007b9c:	add    r10,rbx
   140007b9f:	sub    DWORD PTR [rdi+0x48],r13d
   140007ba3:	mov    r13,QWORD PTR [rbp-0x18]
   140007ba7:	mov    ebx,DWORD PTR [rbp+0x50]
   140007baa:	mov    r8d,DWORD PTR [rbp+0x60]
   140007bae:	xor    r11d,r11d
   140007bb1:	jmp    0x140007466
   140007bb6:	test   r15d,r15d
   140007bb9:	je     0x1400078ca
   140007bbf:	movzx  eax,BYTE PTR [r13+0x0]
   140007bc4:	mov    ecx,esi
   140007bc6:	inc    r13
   140007bc9:	shl    eax,cl
   140007bcb:	dec    r15d
   140007bce:	mov    QWORD PTR [rbp-0x18],r13
   140007bd2:	add    r12d,eax
   140007bd5:	add    esi,0x8
   140007bd8:	cmp    esi,0x20
   140007bdb:	jb     0x140007bb6
   140007bdd:	mov    ecx,r12d
   140007be0:	mov    eax,r12d
   140007be3:	mov    edx,0xff00
   140007be8:	shl    eax,0x10
   140007beb:	and    ecx,edx
   140007bed:	mov    esi,r11d
   140007bf0:	add    ecx,eax
   140007bf2:	mov    eax,r12d
   140007bf5:	shr    r12d,0x18
   140007bf9:	shr    eax,0x8
   140007bfc:	shl    ecx,0x8
   140007bff:	and    eax,edx
   140007c01:	add    eax,ecx
   140007c03:	add    eax,r12d
   140007c06:	mov    r12d,r11d
   140007c09:	mov    DWORD PTR [rdi+0x18],eax
   140007c0c:	mov    DWORD PTR [r14+0x4c],eax
   140007c10:	mov    DWORD PTR [rdi],0xa
   140007c16:	cmp    DWORD PTR [rdi+0xc],r11d
   140007c1a:	je     0x140008891
   140007c20:	xor    r8d,r8d
   140007c23:	xor    edx,edx
   140007c25:	xor    ecx,ecx
   140007c27:	call   0x14000928c
   140007c2c:	mov    r8d,DWORD PTR [rbp+0x60]
   140007c30:	mov    r9d,DWORD PTR [rbp+0x58]
   140007c34:	mov    r10,QWORD PTR [rbp-0x10]
   140007c38:	xor    r11d,r11d
   140007c3b:	mov    DWORD PTR [rdi+0x18],eax
   140007c3e:	mov    DWORD PTR [r14+0x4c],eax
   140007c42:	mov    DWORD PTR [rdi],0xb
   140007c48:	lea    edx,[r11+0x10]
   140007c4c:	cmp    ebx,0x5
   140007c4f:	je     0x1400078ca
   140007c55:	cmp    DWORD PTR [rdi+0x4],r11d
   140007c59:	je     0x140007c96
   140007c5b:	mov    ecx,esi
   140007c5d:	mov    eax,0x7
   140007c62:	mov    DWORD PTR [rdi],0x18
   140007c68:	and    ecx,eax
   140007c6a:	shr    r12d,cl
   140007c6d:	sub    esi,ecx
   140007c6f:	jmp    0x140007478
   140007c74:	test   r15d,r15d
   140007c77:	je     0x1400078ca
   140007c7d:	movzx  eax,BYTE PTR [r13+0x0]
   140007c82:	mov    ecx,esi
   140007c84:	inc    r13
   140007c87:	shl    eax,cl
   140007c89:	dec    r15d
   140007c8c:	mov    QWORD PTR [rbp-0x18],r13
   140007c90:	add    r12d,eax
   140007c93:	add    esi,0x8
   140007c96:	cmp    esi,0x3
   140007c99:	jb     0x140007c74
   140007c9b:	mov    eax,r12d
   140007c9e:	shr    r12d,1
   140007ca1:	dec    esi
   140007ca3:	and    eax,0x1
   140007ca6:	mov    DWORD PTR [rdi+0x4],eax
   140007ca9:	mov    eax,r12d
   140007cac:	and    eax,0x3
   140007caf:	je     0x140007d04
   140007cb1:	dec    eax
   140007cb3:	je     0x140007cd8
   140007cb5:	dec    eax
   140007cb7:	je     0x140007cd0
   140007cb9:	dec    eax
   140007cbb:	jne    0x140007d0a
   140007cbd:	lea    rax,[rip+0x14a94]        # 0x14001c758
   140007cc4:	mov    QWORD PTR [r14+0x20],rax
   140007cc8:	mov    DWORD PTR [rdi],0x1b
   140007cce:	jmp    0x140007d0a
   140007cd0:	mov    DWORD PTR [rdi],0xf
   140007cd6:	jmp    0x140007d0a
   140007cd8:	lea    rax,[rip+0x14091]        # 0x14001bd70
   140007cdf:	mov    DWORD PTR [rdi+0x68],0x9
   140007ce6:	mov    DWORD PTR [rdi+0x6c],0x5
   140007ced:	mov    QWORD PTR [rdi+0x58],rax
   140007cf1:	lea    rax,[rip+0x14878]        # 0x14001c570
   140007cf8:	mov    DWORD PTR [rdi],0x12
   140007cfe:	mov    QWORD PTR [rdi+0x60],rax
   140007d02:	jmp    0x140007d0a
   140007d04:	mov    DWORD PTR [rdi],0xd
   140007d0a:	shr    r12d,0x2
   140007d0e:	add    esi,0xfffffffe
   140007d11:	jmp    0x140007473
   140007d16:	test   r15d,r15d
   140007d19:	je     0x1400078ca
   140007d1f:	movzx  eax,BYTE PTR [r13+0x0]
   140007d24:	mov    ecx,esi
   140007d26:	inc    r13
   140007d29:	shl    eax,cl
   140007d2b:	dec    r15d
   140007d2e:	mov    QWORD PTR [rbp-0x18],r13
   140007d32:	add    r12d,eax
   140007d35:	add    esi,0x8
   140007d38:	cmp    esi,edx
   140007d3a:	jb     0x140007d16
   140007d3c:	movzx  eax,WORD PTR [rdi+0x18]
   140007d40:	cmp    r12d,eax
   140007d43:	je     0x140007d51
   140007d45:	lea    rax,[rip+0x149f4]        # 0x14001c740
   140007d4c:	jmp    0x140007a78
   140007d51:	mov    r12d,r11d
   140007d54:	mov    esi,r11d
   140007d57:	mov    rcx,QWORD PTR [rdi+0x20]
   140007d5b:	test   rcx,rcx
   140007d5e:	je     0x140007d77
   140007d60:	mov    eax,DWORD PTR [rdi+0x10]
   140007d63:	sar    eax,0x9
   140007d66:	and    eax,0x1
   140007d69:	mov    DWORD PTR [rcx+0x3c],eax
   140007d6c:	mov    rax,QWORD PTR [rdi+0x20]
   140007d70:	mov    DWORD PTR [rax+0x40],0x1
   140007d77:	xor    r8d,r8d
   140007d7a:	xor    edx,edx
   140007d7c:	xor    ecx,ecx
   140007d7e:	call   0x14000986c
   140007d83:	mov    r8d,DWORD PTR [rbp+0x60]
   140007d87:	mov    r9d,DWORD PTR [rbp+0x58]
   140007d8b:	mov    r10,QWORD PTR [rbp-0x10]
   140007d8f:	mov    DWORD PTR [rdi+0x18],eax
   140007d92:	mov    DWORD PTR [r14+0x4c],eax
   140007d96:	mov    DWORD PTR [rdi],0xb
   140007d9c:	xor    r11d,r11d
   140007d9f:	jmp    0x1400079b1
   140007da4:	mov    r13,QWORD PTR [rbp-0x18]
   140007da8:	mov    DWORD PTR [rdi],0xb
   140007dae:	jmp    0x140007478
   140007db3:	cmp    ecx,0x16
   140007db6:	jg     0x14000871f
   140007dbc:	je     0x14000868c
   140007dc2:	sub    ecx,0xf
   140007dc5:	je     0x140007e1e
   140007dc7:	dec    ecx
   140007dc9:	je     0x140007e77
   140007dcf:	dec    ecx
   140007dd1:	je     0x140007f6e
   140007dd7:	dec    ecx
   140007dd9:	je     0x140008295
   140007ddf:	dec    ecx
   140007de1:	je     0x14000846a
   140007de7:	dec    ecx
   140007de9:	je     0x1400084b8
   140007def:	dec    ecx
   140007df1:	jne    0x1400074cb
   140007df7:	jmp    0x140008624
   140007dfc:	test   r15d,r15d
   140007dff:	je     0x1400078ca
   140007e05:	movzx  eax,BYTE PTR [r13+0x0]
   140007e0a:	mov    ecx,esi
   140007e0c:	inc    r13
   140007e0f:	shl    eax,cl
   140007e11:	dec    r15d
   140007e14:	mov    QWORD PTR [rbp-0x18],r13
   140007e18:	add    r12d,eax
   140007e1b:	add    esi,0x8
   140007e1e:	cmp    esi,0xe
   140007e21:	jb     0x140007dfc
   140007e23:	mov    ecx,r12d
   140007e26:	shr    r12d,0x5
   140007e2a:	add    esi,0xfffffff2
   140007e2d:	mov    edx,r12d
   140007e30:	shr    r12d,0x5
   140007e34:	and    ecx,0x1f
   140007e37:	mov    eax,r12d
   140007e3a:	and    edx,0x1f
   140007e3d:	add    ecx,0x101
   140007e43:	and    eax,0xf
   140007e46:	inc    edx
   140007e48:	shr    r12d,0x4
   140007e4c:	add    eax,0x4
   140007e4f:	mov    DWORD PTR [rdi+0x74],ecx
   140007e52:	mov    DWORD PTR [rdi+0x78],edx
   140007e55:	mov    DWORD PTR [rdi+0x70],eax
   140007e58:	cmp    ecx,0x11e
   140007e5e:	ja     0x1400086b4
   140007e64:	cmp    edx,0x1e
   140007e67:	ja     0x1400086b4
   140007e6d:	mov    DWORD PTR [rdi+0x7c],r11d
   140007e71:	mov    DWORD PTR [rdi],0x10
   140007e77:	mov    edx,0x7
   140007e7c:	lea    r8,[rip+0x1476d]        # 0x14001c5f0
   140007e83:	mov    eax,DWORD PTR [rdi+0x70]
   140007e86:	cmp    DWORD PTR [rdi+0x7c],eax
   140007e89:	jae    0x140007eeb
   140007e8b:	jmp    0x140007eaf
   140007e8d:	test   r15d,r15d
   140007e90:	je     0x1400078ca
   140007e96:	movzx  eax,BYTE PTR [r13+0x0]
   140007e9b:	mov    ecx,esi
   140007e9d:	inc    r13
   140007ea0:	shl    eax,cl
   140007ea2:	dec    r15d
   140007ea5:	mov    QWORD PTR [rbp-0x18],r13
   140007ea9:	add    r12d,eax
   140007eac:	add    esi,0x8
   140007eaf:	cmp    esi,0x3
   140007eb2:	jb     0x140007e8d
   140007eb4:	mov    eax,DWORD PTR [rdi+0x7c]
   140007eb7:	movzx  ecx,r12w
   140007ebb:	shr    r12d,0x3
   140007ebf:	movzx  eax,WORD PTR [r8+rax*2]
   140007ec4:	and    cx,dx
   140007ec7:	mov    WORD PTR [rdi+rax*2+0x88],cx
   140007ecf:	inc    DWORD PTR [rdi+0x7c]
   140007ed2:	add    esi,0xfffffffd
   140007ed5:	jmp    0x140007e83
   140007ed7:	mov    eax,DWORD PTR [rdi+0x7c]
   140007eda:	movzx  ecx,WORD PTR [r8+rax*2]
   140007edf:	mov    WORD PTR [rdi+rcx*2+0x88],r11w
   140007ee8:	inc    DWORD PTR [rdi+0x7c]
   140007eeb:	cmp    DWORD PTR [rdi+0x7c],0x13
   140007eef:	jb     0x140007ed7
   140007ef1:	lea    rcx,[rdi+0x68]
   140007ef5:	lea    rax,[rdi+0x548]
   140007efc:	lea    r9,[rdi+0x80]
   140007f03:	mov    DWORD PTR [rcx],edx
   140007f05:	mov    QWORD PTR [r9],rax
   140007f08:	mov    QWORD PTR [rdi+0x58],rax
   140007f0c:	lea    rax,[rdi+0x308]
   140007f13:	lea    rdx,[rdi+0x88]
   140007f1a:	mov    QWORD PTR [rsp+0x28],rax
   140007f1f:	mov    QWORD PTR [rsp+0x20],rcx
   140007f24:	xor    ecx,ecx
   140007f26:	lea    r8d,[rcx+0x13]
   140007f2a:	call   0x140008e24
   140007f2f:	mov    r10,QWORD PTR [rbp-0x10]
   140007f33:	xor    r11d,r11d
   140007f36:	mov    DWORD PTR [rbp+0x48],eax
   140007f39:	lea    edx,[r11+0x10]
   140007f3d:	test   eax,eax
   140007f3f:	je     0x140007f5f
   140007f41:	mov    r8d,DWORD PTR [rbp+0x60]
   140007f45:	mov    r9d,DWORD PTR [rbp+0x58]
   140007f49:	lea    rax,[rip+0x147d0]        # 0x14001c720
   140007f50:	mov    QWORD PTR [r14+0x20],rax
   140007f54:	mov    DWORD PTR [rdi],0x1b
   140007f5a:	jmp    0x140007473
   140007f5f:	mov    r8d,0x11
   140007f65:	mov    DWORD PTR [rdi+0x7c],r11d
   140007f69:	mov    DWORD PTR [rdi],r8d
   140007f6c:	jmp    0x140007f74
   140007f6e:	mov    r8d,0x11
   140007f74:	mov    eax,DWORD PTR [rdi+0x78]
   140007f77:	add    eax,DWORD PTR [rdi+0x74]
   140007f7a:	cmp    DWORD PTR [rdi+0x7c],eax
   140007f7d:	jae    0x14000819e
   140007f83:	jmp    0x140007fa7
   140007f85:	test   r15d,r15d
   140007f88:	je     0x1400078ca
   140007f8e:	movzx  eax,BYTE PTR [r13+0x0]
   140007f93:	mov    ecx,esi
   140007f95:	inc    r13
   140007f98:	shl    eax,cl
   140007f9a:	dec    r15d
   140007f9d:	mov    QWORD PTR [rbp-0x18],r13
   140007fa1:	add    r12d,eax
   140007fa4:	add    esi,0x8
   140007fa7:	mov    ecx,DWORD PTR [rdi+0x68]
   140007faa:	mov    eax,0x1
   140007faf:	shl    eax,cl
   140007fb1:	lea    ecx,[rax-0x1]
   140007fb4:	mov    eax,r12d
   140007fb7:	and    rcx,rax
   140007fba:	mov    rax,QWORD PTR [rdi+0x58]
   140007fbe:	mov    eax,DWORD PTR [rax+rcx*4]
   140007fc1:	mov    ecx,eax
   140007fc3:	mov    DWORD PTR [rbp-0x24],eax
   140007fc6:	shr    ecx,0x8
   140007fc9:	movzx  ecx,cl
   140007fcc:	cmp    ecx,esi
   140007fce:	ja     0x140007f85
   140007fd0:	mov    ecx,eax
   140007fd2:	shr    ecx,0x10
   140007fd5:	cmp    cx,dx
   140007fd8:	jae    0x14000802e
   140007fda:	shr    eax,0x8
   140007fdd:	movzx  ecx,al
   140007fe0:	cmp    esi,ecx
   140007fe2:	jae    0x14000800e
   140007fe4:	test   r15d,r15d
   140007fe7:	je     0x1400078ca
   140007fed:	movzx  eax,BYTE PTR [r13+0x0]
   140007ff2:	mov    ecx,esi
   140007ff4:	inc    r13
   140007ff7:	shl    eax,cl
   140007ff9:	add    esi,0x8
   140007ffc:	dec    r15d
   140007fff:	add    r12d,eax
   140008002:	movzx  eax,BYTE PTR [rbp-0x23]
   140008006:	mov    QWORD PTR [rbp-0x18],r13
   14000800a:	cmp    esi,eax
   14000800c:	jb     0x140007fe4
   14000800e:	movzx  ecx,BYTE PTR [rbp-0x23]
   140008012:	movzx  eax,WORD PTR [rbp-0x22]
   140008016:	shr    r12d,cl
   140008019:	sub    esi,ecx
   14000801b:	mov    ecx,DWORD PTR [rdi+0x7c]
   14000801e:	mov    WORD PTR [rdi+rcx*2+0x88],ax
   140008026:	inc    DWORD PTR [rdi+0x7c]
   140008029:	jmp    0x140008161
   14000802e:	cmp    WORD PTR [rbp-0x22],dx
   140008032:	jne    0x140008097
   140008034:	movzx  edx,BYTE PTR [rbp-0x23]
   140008038:	lea    r8d,[rdx+0x2]
   14000803c:	jmp    0x140008060
   14000803e:	test   r15d,r15d
   140008041:	je     0x1400078ca
   140008047:	movzx  eax,BYTE PTR [r13+0x0]
   14000804c:	mov    ecx,esi
   14000804e:	inc    r13
   140008051:	shl    eax,cl
   140008053:	dec    r15d
   140008056:	mov    QWORD PTR [rbp-0x18],r13
   14000805a:	add    r12d,eax
   14000805d:	add    esi,0x8
   140008060:	cmp    esi,r8d
   140008063:	jb     0x14000803e
   140008065:	mov    eax,DWORD PTR [rdi+0x7c]
   140008068:	mov    ecx,edx
   14000806a:	sub    esi,edx
   14000806c:	shr    r12d,cl
   14000806f:	test   eax,eax
   140008071:	je     0x140008177
   140008077:	mov    edx,r12d
   14000807a:	dec    eax
   14000807c:	shr    r12d,0x2
   140008080:	movzx  r9d,WORD PTR [rdi+rax*2+0x88]
   140008089:	and    edx,0x3
   14000808c:	add    edx,0x3
   14000808f:	add    esi,0xfffffffe
   140008092:	jmp    0x140008135
   140008097:	cmp    WORD PTR [rbp-0x22],r8w
   14000809c:	movzx  r8d,BYTE PTR [rbp-0x23]
   1400080a1:	jne    0x1400080e9
   1400080a3:	lea    edx,[r8+0x3]
   1400080a7:	jmp    0x1400080cb
   1400080a9:	test   r15d,r15d
   1400080ac:	je     0x1400078ca
   1400080b2:	movzx  eax,BYTE PTR [r13+0x0]
   1400080b7:	mov    ecx,esi
   1400080b9:	inc    r13
   1400080bc:	shl    eax,cl
   1400080be:	dec    r15d
   1400080c1:	mov    QWORD PTR [rbp-0x18],r13
   1400080c5:	add    r12d,eax
   1400080c8:	add    esi,0x8
   1400080cb:	cmp    esi,edx
   1400080cd:	jb     0x1400080a9
   1400080cf:	mov    ecx,r8d
   1400080d2:	mov    eax,0xfffffffd
   1400080d7:	shr    r12d,cl
   1400080da:	mov    edx,r12d
   1400080dd:	and    edx,0x7
   1400080e0:	add    edx,0x3
   1400080e3:	shr    r12d,0x3
   1400080e7:	jmp    0x14000812d
   1400080e9:	lea    edx,[r8+0x7]
   1400080ed:	jmp    0x140008111
   1400080ef:	test   r15d,r15d
   1400080f2:	je     0x1400078ca
   1400080f8:	movzx  eax,BYTE PTR [r13+0x0]
   1400080fd:	mov    ecx,esi
   1400080ff:	inc    r13
   140008102:	shl    eax,cl
   140008104:	dec    r15d
   140008107:	mov    QWORD PTR [rbp-0x18],r13
   14000810b:	add    r12d,eax
   14000810e:	add    esi,0x8
   140008111:	cmp    esi,edx
   140008113:	jb     0x1400080ef
   140008115:	mov    ecx,r8d
   140008118:	mov    eax,0xfffffff9
   14000811d:	shr    r12d,cl
   140008120:	mov    edx,r12d
   140008123:	and    edx,0x7f
   140008126:	add    edx,0xb
   140008129:	shr    r12d,0x7
   14000812d:	sub    eax,r8d
   140008130:	mov    r9d,r11d
   140008133:	add    esi,eax
   140008135:	mov    eax,DWORD PTR [rdi+0x7c]
   140008138:	lea    ecx,[rdx+rax*1]
   14000813b:	mov    eax,DWORD PTR [rdi+0x78]
   14000813e:	add    eax,DWORD PTR [rdi+0x74]
   140008141:	cmp    ecx,eax
   140008143:	ja     0x14000818d
   140008145:	test   edx,edx
   140008147:	je     0x14000815c
   140008149:	mov    eax,DWORD PTR [rdi+0x7c]
   14000814c:	mov    WORD PTR [rdi+rax*2+0x88],r9w
   140008155:	inc    DWORD PTR [rdi+0x7c]
   140008158:	dec    edx
   14000815a:	jne    0x140008149
   14000815c:	mov    edx,0x10
   140008161:	mov    eax,DWORD PTR [rdi+0x78]
   140008164:	add    eax,DWORD PTR [rdi+0x74]
   140008167:	cmp    DWORD PTR [rdi+0x7c],eax
   14000816a:	jae    0x14000819e
   14000816c:	mov    r8d,0x11
   140008172:	jmp    0x140007fa7
   140008177:	lea    rax,[rip+0x14582]        # 0x14001c700
   14000817e:	mov    QWORD PTR [r14+0x20],rax
   140008182:	mov    DWORD PTR [rdi],0x1b
   140008188:	jmp    0x1400079a9
   14000818d:	lea    rax,[rip+0x1456c]        # 0x14001c700
   140008194:	mov    QWORD PTR [r14+0x20],rax
   140008198:	mov    DWORD PTR [rdi],0x1b
   14000819e:	cmp    DWORD PTR [rdi],0x1b
   1400081a1:	mov    r8d,DWORD PTR [rbp+0x60]
   1400081a5:	mov    r9d,DWORD PTR [rbp+0x58]
   1400081a9:	mov    edx,0x10
   1400081ae:	lea    eax,[rdx-0x9]
   1400081b1:	je     0x140007478
   1400081b7:	mov    r8d,DWORD PTR [rdi+0x74]
   1400081bb:	lea    rax,[rdi+0x548]
   1400081c2:	lea    r13,[rdi+0x308]
   1400081c9:	mov    QWORD PTR [rdi+0x80],rax
   1400081d0:	mov    QWORD PTR [rdi+0x58],rax
   1400081d4:	lea    rax,[rdi+0x68]
   1400081d8:	lea    rdx,[rdi+0x88]
   1400081df:	lea    r9,[rdi+0x80]
   1400081e6:	mov    ecx,0x1
   1400081eb:	mov    QWORD PTR [rsp+0x28],r13
   1400081f0:	mov    DWORD PTR [rax],0x9
   1400081f6:	mov    QWORD PTR [rsp+0x20],rax
   1400081fb:	call   0x140008e24
   140008200:	xor    r11d,r11d
   140008203:	mov    DWORD PTR [rbp+0x48],eax
   140008206:	test   eax,eax
   140008208:	je     0x140008227
   14000820a:	mov    r13,QWORD PTR [rbp-0x18]
   14000820e:	mov    ebx,DWORD PTR [rbp+0x50]
   140008211:	lea    rax,[rip+0x144c8]        # 0x14001c6e0
   140008218:	mov    QWORD PTR [r14+0x20],rax
   14000821c:	mov    DWORD PTR [rdi],0x1b
   140008222:	jmp    0x1400079a5
   140008227:	mov    rax,QWORD PTR [rdi+0x80]
   14000822e:	mov    r8d,DWORD PTR [rdi+0x78]
   140008232:	lea    rcx,[rdi+0x6c]
   140008236:	mov    QWORD PTR [rdi+0x60],rax
   14000823a:	mov    eax,DWORD PTR [rdi+0x74]
   14000823d:	mov    DWORD PTR [rcx],0x6
   140008243:	mov    QWORD PTR [rsp+0x28],r13
   140008248:	mov    QWORD PTR [rsp+0x20],rcx
   14000824d:	lea    r9,[rdi+0x80]
   140008254:	lea    rdx,[rdi+rax*2+0x88]
   14000825c:	mov    ecx,0x2
   140008261:	call   0x140008e24
   140008266:	mov    r13,QWORD PTR [rbp-0x18]
   14000826a:	mov    r8d,DWORD PTR [rbp+0x60]
   14000826e:	mov    r9d,DWORD PTR [rbp+0x58]
   140008272:	mov    r10,QWORD PTR [rbp-0x10]
   140008276:	mov    ebx,DWORD PTR [rbp+0x50]
   140008279:	xor    r11d,r11d
   14000827c:	mov    DWORD PTR [rbp+0x48],eax
   14000827f:	test   eax,eax
   140008281:	je     0x14000828f
   140008283:	lea    rax,[rip+0x1443e]        # 0x14001c6c8
   14000828a:	jmp    0x140007a0e
   14000828f:	mov    DWORD PTR [rdi],0x12
   140008295:	cmp    r15d,0x6
   140008299:	jb     0x1400082e4
   14000829b:	cmp    r9d,0x102
   1400082a2:	jb     0x1400082e4
   1400082a4:	mov    QWORD PTR [r14+0x10],r10
   1400082a8:	mov    DWORD PTR [r14+0x18],r9d
   1400082ac:	mov    QWORD PTR [r14],r13
   1400082af:	mov    DWORD PTR [r14+0x8],r15d
   1400082b3:	mov    edx,r8d
   1400082b6:	mov    rcx,r14
   1400082b9:	mov    DWORD PTR [rdi+0x40],r12d
   1400082bd:	mov    DWORD PTR [rdi+0x44],esi
   1400082c0:	call   0x1400089c4
   1400082c5:	mov    r13,QWORD PTR [r14]
   1400082c8:	mov    r10,QWORD PTR [r14+0x10]
   1400082cc:	mov    r9d,DWORD PTR [r14+0x18]
   1400082d0:	mov    r15d,DWORD PTR [r14+0x8]
   1400082d4:	mov    r12d,DWORD PTR [rdi+0x40]
   1400082d8:	mov    esi,DWORD PTR [rdi+0x44]
   1400082db:	mov    QWORD PTR [rbp-0x18],r13
   1400082df:	jmp    0x140007baa
   1400082e4:	mov    ecx,DWORD PTR [rdi+0x68]
   1400082e7:	mov    r11,QWORD PTR [rdi+0x58]
   1400082eb:	mov    eax,0x1
   1400082f0:	shl    eax,cl
   1400082f2:	lea    ecx,[rax-0x1]
   1400082f5:	mov    eax,r12d
   1400082f8:	and    rcx,rax
   1400082fb:	mov    eax,DWORD PTR [r11+rcx*4]
   1400082ff:	jmp    0x14000833d
   140008301:	test   r15d,r15d
   140008304:	je     0x1400078ca
   14000830a:	movzx  eax,BYTE PTR [r13+0x0]
   14000830f:	mov    ecx,esi
   140008311:	inc    r13
   140008314:	shl    eax,cl
   140008316:	mov    ecx,DWORD PTR [rdi+0x68]
   140008319:	dec    r15d
   14000831c:	add    r12d,eax
   14000831f:	mov    eax,0x1
   140008324:	add    esi,0x8
   140008327:	shl    eax,cl
   140008329:	mov    QWORD PTR [rbp-0x18],r13
   14000832d:	lea    ecx,[rax-0x1]
   140008330:	mov    eax,r12d
   140008333:	and    rcx,rax
   140008336:	mov    rax,QWORD PTR [rdi+0x58]
   14000833a:	mov    eax,DWORD PTR [rax+rcx*4]
   14000833d:	mov    ecx,eax
   14000833f:	shr    ecx,0x8
   140008342:	movzx  ecx,cl
   140008345:	cmp    ecx,esi
   140008347:	ja     0x140008301
   140008349:	test   al,al
   14000834b:	je     0x14000840b
   140008351:	test   al,0xf0
   140008353:	jne    0x14000840b
   140008359:	mov    r10d,eax
   14000835c:	movzx  ecx,al
   14000835f:	mov    r9d,0x1
   140008365:	shr    r10d,0x8
   140008369:	mov    edx,eax
   14000836b:	mov    DWORD PTR [rbp-0x24],eax
   14000836e:	movzx  r8d,r10b
   140008372:	shr    eax,0x10
   140008375:	add    ecx,r8d
   140008378:	shl    r9d,cl
   14000837b:	mov    ecx,r8d
   14000837e:	dec    r9d
   140008381:	and    r9d,r12d
   140008384:	shr    r9d,cl
   140008387:	add    r9d,eax
   14000838a:	mov    eax,DWORD PTR [r11+r9*4]
   14000838e:	mov    ecx,eax
   140008390:	shr    ecx,0x8
   140008393:	movzx  r8d,cl
   140008397:	movzx  ecx,r10b
   14000839b:	add    r8d,ecx
   14000839e:	jmp    0x1400083fd
   1400083a0:	test   r15d,r15d
   1400083a3:	je     0x1400078ca
   1400083a9:	movzx  eax,BYTE PTR [r13+0x0]
   1400083ae:	movzx  r9d,BYTE PTR [rbp-0x23]
   1400083b3:	mov    ecx,esi
   1400083b5:	shl    eax,cl
   1400083b7:	mov    r8d,0x1
   1400083bd:	movzx  ecx,dl
   1400083c0:	add    ecx,r9d
   1400083c3:	add    r12d,eax
   1400083c6:	movzx  eax,WORD PTR [rbp-0x22]
   1400083ca:	shl    r8d,cl
   1400083cd:	mov    ecx,r9d
   1400083d0:	inc    r13
   1400083d3:	dec    r8d
   1400083d6:	dec    r15d
   1400083d9:	add    esi,0x8
   1400083dc:	and    r8d,r12d
   1400083df:	mov    QWORD PTR [rbp-0x18],r13
   1400083e3:	shr    r8d,cl
   1400083e6:	add    r8d,eax
   1400083e9:	mov    rax,QWORD PTR [rdi+0x58]
   1400083ed:	mov    eax,DWORD PTR [rax+r8*4]
   1400083f1:	mov    ecx,eax
   1400083f3:	shr    ecx,0x8
   1400083f6:	movzx  r8d,cl
   1400083fa:	add    r8d,r9d
   1400083fd:	cmp    r8d,esi
   140008400:	ja     0x1400083a0
   140008402:	movzx  ecx,BYTE PTR [rbp-0x23]
   140008406:	shr    r12d,cl
   140008409:	sub    esi,ecx
   14000840b:	mov    ecx,eax
   14000840d:	xor    r11d,r11d
   140008410:	shr    ecx,0x8
   140008413:	movzx  ecx,cl
   140008416:	shr    r12d,cl
   140008419:	sub    esi,ecx
   14000841b:	mov    ecx,eax
   14000841d:	shr    ecx,0x10
   140008420:	mov    DWORD PTR [rdi+0x48],ecx
   140008423:	test   al,al
   140008425:	jne    0x140008432
   140008427:	mov    DWORD PTR [rdi],0x17
   14000842d:	jmp    0x1400079a5
   140008432:	test   al,0x20
   140008434:	je     0x140008441
   140008436:	mov    DWORD PTR [rdi],0xb
   14000843c:	jmp    0x1400079a5
   140008441:	test   al,0x40
   140008443:	je     0x14000845b
   140008445:	lea    rax,[rip+0x1425c]        # 0x14001c6a8
   14000844c:	mov    QWORD PTR [r14+0x20],rax
   140008450:	mov    DWORD PTR [rdi],0x1b
   140008456:	jmp    0x1400079a5
   14000845b:	movzx  ecx,al
   14000845e:	mov    DWORD PTR [rdi],0x13
   140008464:	and    ecx,0xf
   140008467:	mov    DWORD PTR [rdi+0x50],ecx
   14000846a:	mov    edx,DWORD PTR [rdi+0x50]
   14000846d:	test   edx,edx
   14000846f:	je     0x1400084b2
   140008471:	cmp    esi,edx
   140008473:	jae    0x14000849c
   140008475:	test   r15d,r15d
   140008478:	je     0x1400078ca
   14000847e:	movzx  eax,BYTE PTR [r13+0x0]
   140008483:	mov    ecx,esi
   140008485:	inc    r13
   140008488:	shl    eax,cl
   14000848a:	add    esi,0x8
   14000848d:	dec    r15d
   140008490:	add    r12d,eax
   140008493:	mov    QWORD PTR [rbp-0x18],r13
   140008497:	cmp    esi,DWORD PTR [rdi+0x50]
   14000849a:	jb     0x140008475
   14000849c:	mov    ecx,edx
   14000849e:	mov    eax,0x1
   1400084a3:	shl    eax,cl
   1400084a5:	dec    eax
   1400084a7:	and    eax,r12d
   1400084aa:	shr    r12d,cl
   1400084ad:	add    DWORD PTR [rdi+0x48],eax
   1400084b0:	sub    esi,edx
   1400084b2:	mov    DWORD PTR [rdi],0x14
   1400084b8:	mov    ecx,DWORD PTR [rdi+0x6c]
   1400084bb:	mov    r11,QWORD PTR [rdi+0x60]
   1400084bf:	mov    eax,0x1
   1400084c4:	shl    eax,cl
   1400084c6:	lea    ecx,[rax-0x1]
   1400084c9:	mov    eax,r12d
   1400084cc:	and    rcx,rax
   1400084cf:	mov    eax,DWORD PTR [r11+rcx*4]
   1400084d3:	jmp    0x140008511
   1400084d5:	test   r15d,r15d
   1400084d8:	je     0x1400078ca
   1400084de:	movzx  eax,BYTE PTR [r13+0x0]
   1400084e3:	mov    ecx,esi
   1400084e5:	inc    r13
   1400084e8:	shl    eax,cl
   1400084ea:	mov    ecx,DWORD PTR [rdi+0x6c]
   1400084ed:	dec    r15d
   1400084f0:	add    r12d,eax
   1400084f3:	mov    eax,0x1
   1400084f8:	add    esi,0x8
   1400084fb:	shl    eax,cl
   1400084fd:	mov    QWORD PTR [rbp-0x18],r13
   140008501:	lea    ecx,[rax-0x1]
   140008504:	mov    eax,r12d
   140008507:	and    rcx,rax
   14000850a:	mov    rax,QWORD PTR [rdi+0x60]
   14000850e:	mov    eax,DWORD PTR [rax+rcx*4]
   140008511:	mov    ecx,eax
   140008513:	shr    ecx,0x8
   140008516:	movzx  ecx,cl
   140008519:	cmp    ecx,esi
   14000851b:	ja     0x1400084d5
   14000851d:	test   al,0xf0
   14000851f:	jne    0x1400085d7
   140008525:	mov    r10d,eax
   140008528:	movzx  ecx,al
   14000852b:	mov    r9d,0x1
   140008531:	shr    r10d,0x8
   140008535:	mov    edx,eax
   140008537:	mov    DWORD PTR [rbp-0x24],eax
   14000853a:	movzx  r8d,r10b
   14000853e:	shr    eax,0x10
   140008541:	add    ecx,r8d
   140008544:	shl    r9d,cl
   140008547:	mov    ecx,r8d
   14000854a:	dec    r9d
   14000854d:	and    r9d,r12d
   140008550:	shr    r9d,cl
   140008553:	add    r9d,eax
   140008556:	mov    eax,DWORD PTR [r11+r9*4]
   14000855a:	mov    ecx,eax
   14000855c:	shr    ecx,0x8
   14000855f:	movzx  r8d,cl
   140008563:	movzx  ecx,r10b
   140008567:	add    r8d,ecx
   14000856a:	jmp    0x1400085c9
   14000856c:	test   r15d,r15d
   14000856f:	je     0x1400078ca
   140008575:	movzx  eax,BYTE PTR [r13+0x0]
   14000857a:	movzx  r9d,BYTE PTR [rbp-0x23]
   14000857f:	mov    ecx,esi
   140008581:	shl    eax,cl
   140008583:	mov    r8d,0x1
   140008589:	movzx  ecx,dl
   14000858c:	add    ecx,r9d
   14000858f:	add    r12d,eax
   140008592:	movzx  eax,WORD PTR [rbp-0x22]
   140008596:	shl    r8d,cl
   140008599:	mov    ecx,r9d
   14000859c:	inc    r13
   14000859f:	dec    r8d
   1400085a2:	dec    r15d
   1400085a5:	add    esi,0x8
   1400085a8:	and    r8d,r12d
   1400085ab:	mov    QWORD PTR [rbp-0x18],r13
   1400085af:	shr    r8d,cl
   1400085b2:	add    r8d,eax
   1400085b5:	mov    rax,QWORD PTR [rdi+0x60]
   1400085b9:	mov    eax,DWORD PTR [rax+r8*4]
   1400085bd:	mov    ecx,eax
   1400085bf:	shr    ecx,0x8
   1400085c2:	movzx  r8d,cl
   1400085c6:	add    r8d,r9d
   1400085c9:	cmp    r8d,esi
   1400085cc:	ja     0x14000856c
   1400085ce:	movzx  ecx,BYTE PTR [rbp-0x23]
   1400085d2:	shr    r12d,cl
   1400085d5:	sub    esi,ecx
   1400085d7:	mov    r8d,DWORD PTR [rbp+0x60]
   1400085db:	mov    r9d,DWORD PTR [rbp+0x58]
   1400085df:	mov    r10,QWORD PTR [rbp-0x10]
   1400085e3:	mov    ecx,eax
   1400085e5:	shr    ecx,0x8
   1400085e8:	movzx  ecx,cl
   1400085eb:	shr    r12d,cl
   1400085ee:	sub    esi,ecx
   1400085f0:	test   al,0x40
   1400085f2:	je     0x14000860a
   1400085f4:	lea    rax,[rip+0x14095]        # 0x14001c690
   1400085fb:	mov    QWORD PTR [r14+0x20],rax
   1400085ff:	mov    DWORD PTR [rdi],0x1b
   140008605:	jmp    0x140007d9c
   14000860a:	mov    ecx,eax
   14000860c:	mov    DWORD PTR [rdi],0x15
   140008612:	shr    ecx,0x10
   140008615:	mov    DWORD PTR [rdi+0x4c],ecx
   140008618:	movzx  ecx,al
   14000861b:	and    ecx,0xf
   14000861e:	xor    r11d,r11d
   140008621:	mov    DWORD PTR [rdi+0x50],ecx
   140008624:	mov    edx,DWORD PTR [rdi+0x50]
   140008627:	test   edx,edx
   140008629:	je     0x14000866c
   14000862b:	cmp    esi,edx
   14000862d:	jae    0x140008656
   14000862f:	test   r15d,r15d
   140008632:	je     0x1400078ca
   140008638:	movzx  eax,BYTE PTR [r13+0x0]
   14000863d:	mov    ecx,esi
   14000863f:	inc    r13
   140008642:	shl    eax,cl
   140008644:	add    esi,0x8
   140008647:	dec    r15d
   14000864a:	add    r12d,eax
   14000864d:	mov    QWORD PTR [rbp-0x18],r13
   140008651:	cmp    esi,DWORD PTR [rdi+0x50]
   140008654:	jb     0x14000862f
   140008656:	mov    ecx,edx
   140008658:	mov    eax,0x1
   14000865d:	shl    eax,cl
   14000865f:	dec    eax
   140008661:	and    eax,r12d
   140008664:	shr    r12d,cl
   140008667:	add    DWORD PTR [rdi+0x4c],eax
   14000866a:	sub    esi,edx
   14000866c:	mov    eax,DWORD PTR [rdi+0x30]
   14000866f:	sub    eax,r9d
   140008672:	add    eax,r8d
   140008675:	cmp    DWORD PTR [rdi+0x4c],eax
   140008678:	jbe    0x140008686
   14000867a:	lea    rax,[rip+0x13fef]        # 0x14001c670
   140008681:	jmp    0x140007a0e
   140008686:	mov    DWORD PTR [rdi],0x16
   14000868c:	test   r9d,r9d
   14000868f:	je     0x1400078ca
   140008695:	mov    ecx,DWORD PTR [rdi+0x4c]
   140008698:	mov    eax,r8d
   14000869b:	sub    eax,r9d
   14000869e:	cmp    ecx,eax
   1400086a0:	jbe    0x1400086d1
   1400086a2:	sub    ecx,eax
   1400086a4:	mov    eax,DWORD PTR [rdi+0x34]
   1400086a7:	cmp    ecx,eax
   1400086a9:	jbe    0x1400086c0
   1400086ab:	mov    edx,DWORD PTR [rdi+0x2c]
   1400086ae:	sub    ecx,eax
   1400086b0:	sub    edx,ecx
   1400086b2:	jmp    0x1400086c4
   1400086b4:	lea    rax,[rip+0x13f8d]        # 0x14001c648
   1400086bb:	jmp    0x140007a0e
   1400086c0:	sub    eax,ecx
   1400086c2:	mov    edx,eax
   1400086c4:	mov    eax,DWORD PTR [rdi+0x48]
   1400086c7:	add    rdx,QWORD PTR [rdi+0x38]
   1400086cb:	cmp    ecx,eax
   1400086cd:	jbe    0x1400086dc
   1400086cf:	jmp    0x1400086da
   1400086d1:	mov    eax,DWORD PTR [rdi+0x48]
   1400086d4:	mov    rdx,r10
   1400086d7:	sub    rdx,rcx
   1400086da:	mov    ecx,eax
   1400086dc:	cmp    ecx,r9d
   1400086df:	cmova  ecx,r9d
   1400086e3:	sub    r9d,ecx
   1400086e6:	sub    eax,ecx
   1400086e8:	sub    rdx,r10
   1400086eb:	mov    DWORD PTR [rbp+0x58],r9d
   1400086ef:	mov    DWORD PTR [rdi+0x48],eax
   1400086f2:	mov    al,BYTE PTR [rdx+r10*1]
   1400086f6:	mov    BYTE PTR [r10],al
   1400086f9:	inc    r10
   1400086fc:	dec    ecx
   1400086fe:	jne    0x1400086f2
   140008700:	mov    QWORD PTR [rbp-0x10],r10
   140008704:	lea    edx,[rcx+0x10]
   140008707:	lea    eax,[rcx+0x7]
   14000870a:	cmp    DWORD PTR [rdi+0x48],r11d
   14000870e:	jne    0x140007478
   140008714:	mov    DWORD PTR [rdi],0x12
   14000871a:	jmp    0x140007478
   14000871f:	sub    ecx,0x17
   140008722:	je     0x140008871
   140008728:	dec    ecx
   14000872a:	je     0x140008756
   14000872c:	dec    ecx
   14000872e:	je     0x140008822
   140008734:	dec    ecx
   140008736:	je     0x1400088c8
   14000873c:	dec    ecx
   14000873e:	je     0x1400088b1
   140008744:	dec    ecx
   140008746:	jne    0x1400074cb
   14000874c:	mov    eax,0xfffffffc
   140008751:	jmp    0x1400074d0
   140008756:	cmp    DWORD PTR [rdi+0x8],r11d
   14000875a:	je     0x14000881c
   140008760:	jmp    0x140008784
   140008762:	test   r15d,r15d
   140008765:	je     0x1400078ca
   14000876b:	movzx  eax,BYTE PTR [r13+0x0]
   140008770:	mov    ecx,esi
   140008772:	inc    r13
   140008775:	shl    eax,cl
   140008777:	dec    r15d
   14000877a:	mov    QWORD PTR [rbp-0x18],r13
   14000877e:	add    r12d,eax
   140008781:	add    esi,0x8
   140008784:	cmp    esi,0x20
   140008787:	jb     0x140008762
   140008789:	sub    r8d,r9d
   14000878c:	add    DWORD PTR [r14+0x1c],r8d
   140008790:	add    DWORD PTR [rdi+0x1c],r8d
   140008794:	test   r8d,r8d
   140008797:	je     0x1400087cd
   140008799:	mov    ecx,DWORD PTR [rdi+0x18]
   14000879c:	mov    eax,r8d
   14000879f:	mov    rdx,r10
   1400087a2:	sub    rdx,rax
   1400087a5:	cmp    DWORD PTR [rdi+0x10],r11d
   1400087a9:	je     0x1400087b2
   1400087ab:	call   0x14000986c
   1400087b0:	jmp    0x1400087b7
   1400087b2:	call   0x14000928c
   1400087b7:	mov    r9d,DWORD PTR [rbp+0x58]
   1400087bb:	mov    r10,QWORD PTR [rbp-0x10]
   1400087bf:	xor    r11d,r11d
   1400087c2:	mov    DWORD PTR [rdi+0x18],eax
   1400087c5:	lea    edx,[r11+0x10]
   1400087c9:	mov    DWORD PTR [r14+0x4c],eax
   1400087cd:	mov    ecx,r12d
   1400087d0:	mov    eax,r12d
   1400087d3:	mov    r8d,r9d
   1400087d6:	shl    eax,0x10
   1400087d9:	and    ecx,0xff00
   1400087df:	mov    DWORD PTR [rbp+0x60],r9d
   1400087e3:	add    ecx,eax
   1400087e5:	mov    eax,r12d
   1400087e8:	shr    eax,0x8
   1400087eb:	shl    ecx,0x8
   1400087ee:	and    eax,0xff00
   1400087f3:	add    ecx,eax
   1400087f5:	mov    eax,r12d
   1400087f8:	shr    eax,0x18
   1400087fb:	add    ecx,eax
   1400087fd:	cmp    DWORD PTR [rdi+0x10],r11d
   140008801:	cmovne ecx,r12d
   140008805:	cmp    ecx,DWORD PTR [rdi+0x18]
   140008808:	je     0x140008816
   14000880a:	lea    rax,[rip+0x13e1f]        # 0x14001c630
   140008811:	jmp    0x140007a78
   140008816:	mov    r12d,r11d
   140008819:	mov    esi,r11d
   14000881c:	mov    DWORD PTR [rdi],0x19
   140008822:	cmp    DWORD PTR [rdi+0x8],r11d
   140008826:	je     0x1400088c2
   14000882c:	cmp    DWORD PTR [rdi+0x10],r11d
   140008830:	je     0x1400088c2
   140008836:	jmp    0x14000885a
   140008838:	test   r15d,r15d
   14000883b:	je     0x1400078ca
   140008841:	movzx  eax,BYTE PTR [r13+0x0]
   140008846:	mov    ecx,esi
   140008848:	inc    r13
   14000884b:	shl    eax,cl
   14000884d:	dec    r15d
   140008850:	mov    QWORD PTR [rbp-0x18],r13
   140008854:	add    r12d,eax
   140008857:	add    esi,0x8
   14000885a:	cmp    esi,0x20
   14000885d:	jb     0x140008838
   14000885f:	cmp    r12d,DWORD PTR [rdi+0x1c]
   140008863:	je     0x1400088bc
   140008865:	lea    rax,[rip+0x13dac]        # 0x14001c618
   14000886c:	jmp    0x140007a78
   140008871:	test   r9d,r9d
   140008874:	je     0x1400078ca
   14000887a:	mov    al,BYTE PTR [rdi+0x48]
   14000887d:	mov    BYTE PTR [r10],al
   140008880:	inc    r10
   140008883:	dec    r9d
   140008886:	mov    DWORD PTR [rdi],0x12
   14000888c:	jmp    0x14000746b
   140008891:	mov    QWORD PTR [r14+0x10],r10
   140008895:	mov    DWORD PTR [r14+0x18],r9d
   140008899:	mov    QWORD PTR [r14],r13
   14000889c:	mov    DWORD PTR [r14+0x8],r15d
   1400088a0:	mov    eax,0x2
   1400088a5:	mov    DWORD PTR [rdi+0x40],r12d
   1400088a9:	mov    DWORD PTR [rdi+0x44],esi
   1400088ac:	jmp    0x1400074d0
   1400088b1:	mov    r13d,0xfffffffd
   1400088b7:	jmp    0x1400078ce
   1400088bc:	mov    r12d,r11d
   1400088bf:	mov    esi,r11d
   1400088c2:	mov    DWORD PTR [rdi],0x1a
   1400088c8:	mov    r13d,0x1
   1400088ce:	jmp    0x1400078ce
   1400088d3:	sub    ebx,DWORD PTR [r14+0x18]
   1400088d7:	mov    esi,DWORD PTR [rbp-0x20]
   1400088da:	sub    esi,DWORD PTR [r14+0x8]
   1400088de:	add    DWORD PTR [r14+0x1c],ebx
   1400088e2:	add    DWORD PTR [r14+0xc],esi
   1400088e6:	add    DWORD PTR [rdi+0x1c],ebx
   1400088e9:	cmp    DWORD PTR [rdi+0x8],r12d
   1400088ed:	je     0x14000891b
   1400088ef:	test   ebx,ebx
   1400088f1:	je     0x14000891b
   1400088f3:	mov    rdx,QWORD PTR [r14+0x10]
   1400088f7:	mov    ecx,DWORD PTR [rdi+0x18]
   1400088fa:	mov    eax,ebx
   1400088fc:	sub    rdx,rax
   1400088ff:	mov    r8d,ebx
   140008902:	cmp    DWORD PTR [rdi+0x10],r12d
   140008906:	je     0x14000890f
   140008908:	call   0x14000986c
   14000890d:	jmp    0x140008914
   14000890f:	call   0x14000928c
   140008914:	mov    DWORD PTR [rdi+0x18],eax
   140008917:	mov    DWORD PTR [r14+0x4c],eax
   14000891b:	mov    eax,DWORD PTR [rdi+0x4]
   14000891e:	mov    edx,0x80
   140008923:	neg    eax
   140008925:	mov    eax,r12d
   140008928:	sbb    ecx,ecx
   14000892a:	and    ecx,0x40
   14000892d:	cmp    DWORD PTR [rdi],0xb
   140008930:	cmove  eax,edx
   140008933:	add    ecx,eax
   140008935:	add    ecx,DWORD PTR [rdi+0x44]
   140008938:	mov    DWORD PTR [r14+0x48],ecx
   14000893c:	test   esi,esi
   14000893e:	jne    0x140008944
   140008940:	test   ebx,ebx
   140008942:	je     0x14000894a
   140008944:	cmp    DWORD PTR [rbp+0x50],0x4
   140008948:	jne    0x140008956
   14000894a:	mov    eax,0xfffffffb
   14000894f:	test   r13d,r13d
   140008952:	cmove  r13d,eax
   140008956:	mov    eax,r13d
   140008959:	jmp    0x1400074d0
   14000895e:	int3   
   14000895f:	int3   
   140008960:	rex push rbx
   140008962:	sub    rsp,0x20
   140008966:	mov    rbx,rcx
   140008969:	test   rcx,rcx
   14000896c:	je     0x1400089a4
   14000896e:	mov    rax,QWORD PTR [rcx+0x28]
   140008972:	test   rax,rax
   140008975:	je     0x1400089a4
   140008977:	mov    r8,QWORD PTR [rcx+0x38]
   14000897b:	test   r8,r8
   14000897e:	je     0x1400089a4
   140008980:	mov    rdx,QWORD PTR [rax+0x38]
   140008984:	test   rdx,rdx
   140008987:	je     0x140008990
   140008989:	mov    rcx,QWORD PTR [rcx+0x40]
   14000898d:	call   r8
   140008990:	mov    rdx,QWORD PTR [rbx+0x28]
   140008994:	mov    rcx,QWORD PTR [rbx+0x40]
   140008998:	call   QWORD PTR [rbx+0x38]
   14000899b:	and    QWORD PTR [rbx+0x28],0x0
   1400089a0:	xor    eax,eax
   1400089a2:	jmp    0x1400089a9
   1400089a4:	mov    eax,0xfffffffe
   1400089a9:	add    rsp,0x20
   1400089ad:	pop    rbx
   1400089ae:	ret    
   1400089af:	int3   
   1400089b0:	imul   edx,r8d
   1400089b4:	mov    ecx,edx
   1400089b6:	jmp    0x14000b304
   1400089bb:	int3   
   1400089bc:	mov    rcx,rdx
   1400089bf:	jmp    0x14000b490
   1400089c4:	rex push rbx
   1400089c6:	push   rbp
   1400089c7:	push   rsi
   1400089c8:	push   rdi
   1400089c9:	push   r12
   1400089cb:	push   r13
   1400089cd:	push   r14
   1400089cf:	push   r15
   1400089d1:	sub    rsp,0x38
   1400089d5:	mov    r12,QWORD PTR [rcx+0x28]
   1400089d9:	mov    r14d,DWORD PTR [rcx+0x8]
   1400089dd:	mov    rdi,QWORD PTR [rcx]
   1400089e0:	mov    r8,QWORD PTR [rcx+0x10]
   1400089e4:	mov    r9,QWORD PTR [r12+0x58]
   1400089e9:	mov    rsi,QWORD PTR [r12+0x60]
   1400089ee:	mov    r13d,DWORD PTR [r12+0x34]
   1400089f3:	mov    ebx,DWORD PTR [r12+0x40]
   1400089f8:	mov    r10d,DWORD PTR [r12+0x44]
   1400089fd:	mov    rbp,rcx
   140008a00:	mov    ecx,DWORD PTR [rcx+0x18]
   140008a03:	dec    r8
   140008a06:	sub    edx,ecx
   140008a08:	lea    r15d,[rcx-0x101]
   140008a0f:	mov    ecx,DWORD PTR [r12+0x68]
   140008a14:	mov    eax,edx
   140008a16:	mov    rdx,r8
   140008a19:	dec    rdi
   140008a1c:	sub    rdx,rax
   140008a1f:	mov    eax,DWORD PTR [r12+0x2c]
   140008a24:	add    r14d,0xfffffffb
   140008a28:	mov    DWORD PTR [rsp+0x80],eax
   140008a2f:	mov    eax,DWORD PTR [r12+0x30]
   140008a34:	mov    QWORD PTR [rsp+0x10],rdx
   140008a39:	mov    DWORD PTR [rsp+0x98],eax
   140008a40:	mov    rax,QWORD PTR [r12+0x38]
   140008a45:	mov    edx,0x1
   140008a4a:	mov    QWORD PTR [rsp+0x18],rax
   140008a4f:	mov    eax,0x1
   140008a54:	add    r14,rdi
   140008a57:	shl    eax,cl
   140008a59:	mov    ecx,DWORD PTR [r12+0x6c]
   140008a5e:	add    r15,r8
   140008a61:	shl    edx,cl
   140008a63:	dec    eax
   140008a65:	mov    QWORD PTR [rsp+0x8],r9
   140008a6a:	dec    edx
   140008a6c:	mov    QWORD PTR [rsp],rsi
   140008a70:	mov    DWORD PTR [rsp+0x90],edx
   140008a77:	mov    edx,eax
   140008a79:	mov    QWORD PTR [rsp+0x20],rdx
   140008a7e:	cmp    r10d,0xf
   140008a82:	jae    0x140008aa2
   140008a84:	movzx  eax,BYTE PTR [rdi+0x1]
   140008a88:	mov    ecx,r10d
   140008a8b:	add    rdi,0x2
   140008a8f:	shl    eax,cl
   140008a91:	lea    ecx,[r10+0x8]
   140008a95:	add    ebx,eax
   140008a97:	movzx  eax,BYTE PTR [rdi]
   140008a9a:	shl    eax,cl
   140008a9c:	add    ebx,eax
   140008a9e:	add    r10d,0x10
   140008aa2:	mov    eax,ebx
   140008aa4:	and    rax,rdx
   140008aa7:	jmp    0x140008acb
   140008aa9:	test   dl,0x10
   140008aac:	jne    0x140008af5
   140008aae:	test   dl,0x40
   140008ab1:	jne    0x140008d88
   140008ab7:	mov    ecx,edx
   140008ab9:	mov    eax,0x1
   140008abe:	shr    r11d,0x10
   140008ac2:	shl    eax,cl
   140008ac4:	dec    eax
   140008ac6:	and    eax,ebx
   140008ac8:	add    eax,r11d
   140008acb:	mov    r11d,DWORD PTR [r9+rax*4]
   140008acf:	mov    eax,r11d
   140008ad2:	movzx  edx,r11b
   140008ad6:	shr    eax,0x8
   140008ad9:	movzx  ecx,al
   140008adc:	shr    ebx,cl
   140008ade:	sub    r10d,ecx
   140008ae1:	test   r11b,r11b
   140008ae4:	jne    0x140008aa9
   140008ae6:	inc    r8
   140008ae9:	shr    r11d,0x10
   140008aed:	mov    BYTE PTR [r8],r11b
   140008af0:	jmp    0x140008d74
   140008af5:	shr    r11d,0x10
   140008af9:	and    edx,0xf
   140008afc:	je     0x140008b29
   140008afe:	cmp    r10d,edx
   140008b01:	jae    0x140008b14
   140008b03:	inc    rdi
   140008b06:	mov    ecx,r10d
   140008b09:	movzx  eax,BYTE PTR [rdi]
   140008b0c:	shl    eax,cl
   140008b0e:	add    ebx,eax
   140008b10:	add    r10d,0x8
   140008b14:	mov    ecx,edx
   140008b16:	mov    eax,0x1
   140008b1b:	shl    eax,cl
   140008b1d:	dec    eax
   140008b1f:	and    eax,ebx
   140008b21:	shr    ebx,cl
   140008b23:	add    r11d,eax
   140008b26:	sub    r10d,edx
   140008b29:	cmp    r10d,0xf
   140008b2d:	jae    0x140008b4d
   140008b2f:	movzx  eax,BYTE PTR [rdi+0x1]
   140008b33:	mov    ecx,r10d
   140008b36:	add    rdi,0x2
   140008b3a:	shl    eax,cl
   140008b3c:	lea    ecx,[r10+0x8]
   140008b40:	add    ebx,eax
   140008b42:	movzx  eax,BYTE PTR [rdi]
   140008b45:	shl    eax,cl
   140008b47:	add    ebx,eax
   140008b49:	add    r10d,0x10
   140008b4d:	mov    ecx,DWORD PTR [rsp+0x90]
   140008b54:	mov    eax,ebx
   140008b56:	and    rcx,rax
   140008b59:	mov    esi,DWORD PTR [rsi+rcx*4]
   140008b5c:	jmp    0x140008b85
   140008b5e:	test   dl,0x40
   140008b61:	jne    0x140008da0
   140008b67:	movzx  eax,WORD PTR [rsp+0x8a]
   140008b6f:	mov    ecx,edx
   140008b71:	mov    edx,0x1
   140008b76:	shl    edx,cl
   140008b78:	mov    rcx,QWORD PTR [rsp]
   140008b7c:	dec    edx
   140008b7e:	and    edx,ebx
   140008b80:	add    edx,eax
   140008b82:	mov    esi,DWORD PTR [rcx+rdx*4]
   140008b85:	mov    eax,esi
   140008b87:	movzx  edx,sil
   140008b8b:	mov    DWORD PTR [rsp+0x88],esi
   140008b92:	shr    eax,0x8
   140008b95:	movzx  ecx,al
   140008b98:	shr    ebx,cl
   140008b9a:	sub    r10d,ecx
   140008b9d:	test   dl,0x10
   140008ba0:	je     0x140008b5e
   140008ba2:	and    edx,0xf
   140008ba5:	shr    esi,0x10
   140008ba8:	cmp    r10d,edx
   140008bab:	jae    0x140008bd4
   140008bad:	inc    rdi
   140008bb0:	mov    ecx,r10d
   140008bb3:	add    r10d,0x8
   140008bb7:	movzx  eax,BYTE PTR [rdi]
   140008bba:	shl    eax,cl
   140008bbc:	add    ebx,eax
   140008bbe:	cmp    r10d,edx
   140008bc1:	jae    0x140008bd4
   140008bc3:	inc    rdi
   140008bc6:	mov    ecx,r10d
   140008bc9:	movzx  eax,BYTE PTR [rdi]
   140008bcc:	shl    eax,cl
   140008bce:	add    ebx,eax
   140008bd0:	add    r10d,0x8
   140008bd4:	mov    ecx,edx
   140008bd6:	mov    eax,0x1
   140008bdb:	sub    r10d,edx
   140008bde:	shl    eax,cl
   140008be0:	dec    eax
   140008be2:	and    eax,ebx
   140008be4:	shr    ebx,cl
   140008be6:	add    esi,eax
   140008be8:	mov    eax,r8d
   140008beb:	sub    eax,DWORD PTR [rsp+0x10]
   140008bef:	cmp    esi,eax
   140008bf1:	jbe    0x140008d1b
   140008bf7:	mov    ecx,esi
   140008bf9:	sub    ecx,eax
   140008bfb:	cmp    ecx,DWORD PTR [rsp+0x98]
   140008c02:	ja     0x140008da9
   140008c08:	mov    rdx,QWORD PTR [rsp+0x18]
   140008c0d:	lea    r9,[rdx-0x1]
   140008c11:	test   r13d,r13d
   140008c14:	jne    0x140008c40
   140008c16:	mov    eax,DWORD PTR [rsp+0x80]
   140008c1d:	sub    eax,ecx
   140008c1f:	add    r9,rax
   140008c22:	cmp    ecx,r11d
   140008c25:	jae    0x140008cb4
   140008c2b:	sub    r11d,ecx
   140008c2e:	inc    r9
   140008c31:	inc    r8
   140008c34:	dec    ecx
   140008c36:	mov    al,BYTE PTR [r9]
   140008c39:	mov    BYTE PTR [r8],al
   140008c3c:	jne    0x140008c2e
   140008c3e:	jmp    0x140008cac
   140008c40:	mov    eax,r13d
   140008c43:	sub    eax,ecx
   140008c45:	cmp    r13d,ecx
   140008c48:	jae    0x140008c91
   140008c4a:	add    eax,DWORD PTR [rsp+0x80]
   140008c51:	sub    ecx,r13d
   140008c54:	add    r9,rax
   140008c57:	cmp    ecx,r11d
   140008c5a:	jae    0x140008cb4
   140008c5c:	sub    r11d,ecx
   140008c5f:	sub    r9,r8
   140008c62:	inc    r8
   140008c65:	dec    ecx
   140008c67:	mov    al,BYTE PTR [r9+r8*1]
   140008c6b:	mov    BYTE PTR [r8],al
   140008c6e:	jne    0x140008c62
   140008c70:	lea    r9,[rdx-0x1]
   140008c74:	cmp    r13d,r11d
   140008c77:	jae    0x140008cb4
   140008c79:	mov    ecx,r13d
   140008c7c:	sub    r11d,r13d
   140008c7f:	inc    r9
   140008c82:	inc    r8
   140008c85:	dec    ecx
   140008c87:	mov    al,BYTE PTR [r9]
   140008c8a:	mov    BYTE PTR [r8],al
   140008c8d:	jne    0x140008c7f
   140008c8f:	jmp    0x140008cac
   140008c91:	add    r9,rax
   140008c94:	cmp    ecx,r11d
   140008c97:	jae    0x140008cb4
   140008c99:	sub    r11d,ecx
   140008c9c:	inc    r9
   140008c9f:	inc    r8
   140008ca2:	dec    ecx
   140008ca4:	mov    al,BYTE PTR [r9]
   140008ca7:	mov    BYTE PTR [r8],al
   140008caa:	jne    0x140008c9c
   140008cac:	mov    eax,esi
   140008cae:	mov    r9,r8
   140008cb1:	sub    r9,rax
   140008cb4:	cmp    r11d,0x2
   140008cb8:	jbe    0x140008cf1
   140008cba:	lea    ecx,[r11-0x3]
   140008cbe:	mov    eax,0xaaaaaaab
   140008cc3:	mul    ecx
   140008cc5:	shr    edx,1
   140008cc7:	lea    ecx,[rdx+0x1]
   140008cca:	mov    al,BYTE PTR [r9+0x1]
   140008cce:	add    r9,0x3
   140008cd2:	add    r8,0x3
   140008cd6:	mov    BYTE PTR [r8-0x2],al
   140008cda:	mov    al,BYTE PTR [r9-0x1]
   140008cde:	add    r11d,0xfffffffd
   140008ce2:	dec    rcx
   140008ce5:	mov    BYTE PTR [r8-0x1],al
   140008ce9:	mov    al,BYTE PTR [r9]
   140008cec:	mov    BYTE PTR [r8],al
   140008cef:	jne    0x140008cca
   140008cf1:	test   r11d,r11d
   140008cf4:	je     0x140008d6b
   140008cf6:	mov    al,BYTE PTR [r9+0x1]
   140008cfa:	mov    rsi,QWORD PTR [rsp]
   140008cfe:	inc    r8
   140008d01:	mov    BYTE PTR [r8],al
   140008d04:	cmp    r11d,0x1
   140008d08:	jbe    0x140008d14
   140008d0a:	mov    al,BYTE PTR [r9+0x2]
   140008d0e:	inc    r8
   140008d11:	mov    BYTE PTR [r8],al
   140008d14:	mov    r9,QWORD PTR [rsp+0x8]
   140008d19:	jmp    0x140008d74
   140008d1b:	mov    eax,esi
   140008d1d:	mov    rcx,r8
   140008d20:	sub    rcx,rax
   140008d23:	mov    al,BYTE PTR [rcx+0x1]
   140008d26:	add    rcx,0x3
   140008d2a:	add    r8,0x3
   140008d2e:	mov    BYTE PTR [r8-0x2],al
   140008d32:	mov    al,BYTE PTR [rcx-0x1]
   140008d35:	add    r11d,0xfffffffd
   140008d39:	mov    BYTE PTR [r8-0x1],al
   140008d3d:	mov    al,BYTE PTR [rcx]
   140008d3f:	mov    BYTE PTR [r8],al
   140008d42:	cmp    r11d,0x2
   140008d46:	ja     0x140008d23
   140008d48:	test   r11d,r11d
   140008d4b:	je     0x140008d70
   140008d4d:	mov    al,BYTE PTR [rcx+0x1]
   140008d50:	mov    rsi,QWORD PTR [rsp]
   140008d54:	inc    r8
   140008d57:	mov    BYTE PTR [r8],al
   140008d5a:	cmp    r11d,0x1
   140008d5e:	jbe    0x140008d74
   140008d60:	mov    al,BYTE PTR [rcx+0x2]
   140008d63:	inc    r8
   140008d66:	mov    BYTE PTR [r8],al
   140008d69:	jmp    0x140008d74
   140008d6b:	mov    r9,QWORD PTR [rsp+0x8]
   140008d70:	mov    rsi,QWORD PTR [rsp]
   140008d74:	cmp    rdi,r14
   140008d77:	jae    0x140008dbc
   140008d79:	cmp    r8,r15
   140008d7c:	jae    0x140008dbc
   140008d7e:	mov    rdx,QWORD PTR [rsp+0x20]
   140008d83:	jmp    0x140008a7e
   140008d88:	test   dl,0x20
   140008d8b:	je     0x140008d97
   140008d8d:	mov    DWORD PTR [r12],0xb
   140008d95:	jmp    0x140008dbc
   140008d97:	lea    rax,[rip+0x1390a]        # 0x14001c6a8
   140008d9e:	jmp    0x140008db0
   140008da0:	lea    rax,[rip+0x138e9]        # 0x14001c690
   140008da7:	jmp    0x140008db0
   140008da9:	lea    rax,[rip+0x138c0]        # 0x14001c670
   140008db0:	mov    QWORD PTR [rbp+0x20],rax
   140008db4:	mov    DWORD PTR [r12],0x1b
   140008dbc:	mov    ecx,r10d
   140008dbf:	sub    r15d,r8d
   140008dc2:	shr    ecx,0x3
   140008dc5:	add    r15d,0x101
   140008dcc:	mov    eax,ecx
   140008dce:	mov    DWORD PTR [rbp+0x18],r15d
   140008dd2:	sub    rdi,rax
   140008dd5:	mov    eax,ecx
   140008dd7:	shl    eax,0x3
   140008dda:	sub    r14d,edi
   140008ddd:	sub    r10d,eax
   140008de0:	lea    rax,[rdi+0x1]
   140008de4:	add    r14d,0x5
   140008de8:	mov    QWORD PTR [rbp+0x0],rax
   140008dec:	lea    rax,[r8+0x1]
   140008df0:	mov    DWORD PTR [rbp+0x8],r14d
   140008df4:	mov    QWORD PTR [rbp+0x10],rax
   140008df8:	mov    eax,0x1
   140008dfd:	mov    ecx,r10d
   140008e00:	shl    eax,cl
   140008e02:	mov    DWORD PTR [r12+0x44],r10d
   140008e07:	dec    eax
   140008e09:	and    eax,ebx
   140008e0b:	mov    DWORD PTR [r12+0x40],eax
   140008e10:	add    rsp,0x38
   140008e14:	pop    r15
   140008e16:	pop    r14
   140008e18:	pop    r13
   140008e1a:	pop    r12
   140008e1c:	pop    rdi
   140008e1d:	pop    rsi
   140008e1e:	pop    rbp
   140008e1f:	pop    rbx
   140008e20:	ret    
   140008e21:	int3   
   140008e22:	int3   
   140008e23:	int3   
   140008e24:	mov    QWORD PTR [rsp+0x8],rbx
   140008e29:	push   rbp
   140008e2a:	push   rsi
   140008e2b:	push   rdi
   140008e2c:	push   r12
   140008e2e:	push   r13
   140008e30:	push   r14
   140008e32:	push   r15
   140008e34:	lea    rbp,[rsp-0x17]
   140008e39:	sub    rsp,0xa0
   140008e40:	mov    rax,QWORD PTR [rip+0x1a279]        # 0x1400230c0
   140008e47:	xor    rax,rsp
   140008e4a:	mov    QWORD PTR [rbp+0xf],rax
   140008e4e:	mov    rbx,QWORD PTR [rbp+0x7f]
   140008e52:	xor    r14d,r14d
   140008e55:	mov    r12d,ecx
   140008e58:	mov    DWORD PTR [rbp-0x69],ecx
   140008e5b:	mov    r10,r9
   140008e5e:	mov    QWORD PTR [rbp-0x49],r9
   140008e62:	mov    r9,QWORD PTR [rbp+0x77]
   140008e66:	lea    ecx,[r14+0x10]
   140008e6a:	lea    rdi,[rbp-0x31]
   140008e6e:	movzx  eax,r14w
   140008e72:	mov    r13,rdx
   140008e75:	mov    QWORD PTR [rbp-0x41],rdx
   140008e79:	mov    QWORD PTR [rbp-0x39],r9
   140008e7d:	mov    QWORD PTR [rbp-0x51],rbx
   140008e81:	lea    r15d,[r14+0x1]
   140008e85:	rep stos WORD PTR es:[rdi],ax
   140008e88:	test   r8d,r8d
   140008e8b:	je     0x140008ea5
   140008e8d:	mov    rcx,rdx
   140008e90:	mov    edx,r8d
   140008e93:	movzx  eax,WORD PTR [rcx]
   140008e96:	add    rcx,0x2
   140008e9a:	add    WORD PTR [rbp+rax*2-0x31],r15w
   140008ea0:	sub    rdx,r15
   140008ea3:	jne    0x140008e93
   140008ea5:	mov    r11d,DWORD PTR [r9]
   140008ea8:	or     ecx,0xffffffff
   140008eab:	mov    esi,0xf
   140008eb0:	mov    DWORD PTR [rbp-0x75],ecx
   140008eb3:	lea    rax,[rbp-0x13]
   140008eb7:	cmp    WORD PTR [rax],r14w
   140008ebb:	jne    0x140008ec8
   140008ebd:	add    esi,ecx
   140008ebf:	sub    rax,0x2
   140008ec3:	cmp    esi,r15d
   140008ec6:	jae    0x140008eb7
   140008ec8:	cmp    r11d,esi
   140008ecb:	cmova  r11d,esi
   140008ecf:	test   esi,esi
   140008ed1:	jne    0x140008ef9
   140008ed3:	mov    rcx,QWORD PTR [r10]
   140008ed6:	mov    DWORD PTR [rsp],0x140
   140008edd:	mov    eax,DWORD PTR [rsp]
   140008ee0:	mov    DWORD PTR [rcx],eax
   140008ee2:	add    QWORD PTR [r10],0x4
   140008ee6:	mov    rcx,QWORD PTR [r10]
   140008ee9:	mov    DWORD PTR [rcx],eax
   140008eeb:	add    QWORD PTR [r10],0x4
   140008eef:	mov    DWORD PTR [r9],r15d
   140008ef2:	xor    eax,eax
   140008ef4:	jmp    0x140009264
   140008ef9:	mov    r9d,r15d
   140008efc:	lea    rax,[rbp-0x2f]
   140008f00:	cmp    WORD PTR [rax],r14w
   140008f04:	jne    0x140008f13
   140008f06:	add    r9d,r15d
   140008f09:	add    rax,0x2
   140008f0d:	cmp    r9d,0xf
   140008f11:	jbe    0x140008f00
   140008f13:	cmp    r11d,r9d
   140008f16:	mov    edx,r15d
   140008f19:	mov    edi,r15d
   140008f1c:	cmovb  r11d,r9d
   140008f20:	mov    eax,edi
   140008f22:	add    edx,edx
   140008f24:	movzx  ecx,WORD PTR [rbp+rax*2-0x31]
   140008f29:	sub    edx,ecx
   140008f2b:	js     0x140009261
   140008f31:	add    edi,r15d
   140008f34:	cmp    edi,0xf
   140008f37:	jbe    0x140008f20
   140008f39:	test   edx,edx
   140008f3b:	jle    0x140008f4f
   140008f3d:	test   r12d,r12d
   140008f40:	je     0x140009261
   140008f46:	cmp    esi,r15d
   140008f49:	jne    0x140009261
   140008f4f:	mov    WORD PTR [rbp-0xf],r14w
   140008f54:	mov    rcx,r14
   140008f57:	mov    edx,0xe
   140008f5c:	movzx  eax,WORD PTR [rbp+rcx*1-0x2f]
   140008f61:	add    rcx,0x2
   140008f65:	add    ax,WORD PTR [rbp+rcx*1-0x11]
   140008f6a:	sub    rdx,r15
   140008f6d:	mov    WORD PTR [rbp+rcx*1-0xf],ax
   140008f72:	jne    0x140008f5c
   140008f74:	mov    edi,r14d
   140008f77:	test   r8d,r8d
   140008f7a:	je     0x140008fa6
   140008f7c:	mov    rdx,r13
   140008f7f:	cmp    WORD PTR [rdx],r14w
   140008f83:	je     0x140008f9a
   140008f85:	movzx  eax,WORD PTR [rdx]
   140008f88:	movzx  ecx,WORD PTR [rbp+rax*2-0x11]
   140008f8d:	mov    WORD PTR [rbx+rcx*2],di
   140008f91:	movzx  eax,WORD PTR [rdx]
   140008f94:	add    WORD PTR [rbp+rax*2-0x11],r15w
   140008f9a:	add    edi,r15d
   140008f9d:	add    rdx,0x2
   140008fa1:	cmp    edi,r8d
   140008fa4:	jb     0x140008f7f
   140008fa6:	mov    ecx,r12d
   140008fa9:	test   r12d,r12d
   140008fac:	je     0x140008fef
   140008fae:	dec    ecx
   140008fb0:	je     0x140008fca
   140008fb2:	lea    rdx,[rip+0x13a17]        # 0x14001c9d0
   140008fb9:	lea    r15,[rip+0x139d0]        # 0x14001c990
   140008fc0:	or     r8d,0xffffffff
   140008fc4:	mov    QWORD PTR [rbp-0x61],rdx
   140008fc8:	jmp    0x140008fff
   140008fca:	mov    eax,0x202
   140008fcf:	lea    r15,[rip+0x1393a]        # 0x14001c910
   140008fd6:	lea    rdx,[rip+0x13973]        # 0x14001c950
   140008fdd:	sub    r15,rax
   140008fe0:	sub    rdx,rax
   140008fe3:	mov    r8d,0x100
   140008fe9:	mov    QWORD PTR [rbp-0x61],rdx
   140008fed:	jmp    0x140008fff
   140008fef:	mov    rdx,rbx
   140008ff2:	mov    QWORD PTR [rbp-0x61],rbx
   140008ff6:	mov    r15,rbx
   140008ff9:	mov    r8d,0x13
   140008fff:	mov    rax,QWORD PTR [r10]
   140009002:	mov    ecx,r11d
   140009005:	mov    ebx,0x1
   14000900a:	shl    ebx,cl
   14000900c:	cmp    DWORD PTR [rbp-0x69],0x1
   140009010:	mov    QWORD PTR [rsp+0x8],rax
   140009015:	lea    eax,[rbx-0x1]
   140009018:	mov    edi,r14d
   14000901b:	mov    r12d,r14d
   14000901e:	mov    DWORD PTR [rbp-0x71],r14d
   140009022:	mov    DWORD PTR [rbp-0x6d],ebx
   140009025:	mov    DWORD PTR [rbp-0x79],ebx
   140009028:	mov    DWORD PTR [rbp-0x59],eax
   14000902b:	jne    0x14000903f
   14000902d:	cmp    ebx,0x5b0
   140009033:	jb     0x14000903f
   140009035:	mov    eax,0x1
   14000903a:	jmp    0x140009264
   14000903f:	mov    r13,QWORD PTR [rsp+0x8]
   140009044:	mov    ecx,r12d
   140009047:	mov    r12,QWORD PTR [rbp-0x51]
   14000904b:	mov    al,r9b
   14000904e:	sub    al,r14b
   140009051:	mov    BYTE PTR [rsp+0x1],al
   140009055:	movzx  eax,WORD PTR [r12+rcx*2]
   14000905a:	cmp    eax,r8d
   14000905d:	jge    0x140009068
   14000905f:	xor    r10d,r10d
   140009062:	mov    BYTE PTR [rsp],r10b
   140009066:	jmp    0x140009082
   140009068:	jle    0x14000907c
   14000906a:	movzx  ecx,WORD PTR [r12+rcx*2]
   14000906f:	mov    al,BYTE PTR [rdx+rcx*2]
   140009072:	mov    BYTE PTR [rsp],al
   140009075:	movzx  eax,WORD PTR [r15+rcx*2]
   14000907a:	jmp    0x140009082
   14000907c:	mov    BYTE PTR [rsp],0x60
   140009080:	xor    eax,eax
   140009082:	mov    ecx,r9d
   140009085:	mov    r12d,0x1
   14000908b:	mov    edx,edi
   14000908d:	sub    ecx,r14d
   140009090:	mov    WORD PTR [rsp+0x2],ax
   140009095:	mov    eax,DWORD PTR [rsp]
   140009098:	shl    r12d,cl
   14000909b:	mov    ecx,r14d
   14000909e:	mov    DWORD PTR [rbp-0x55],ebx
   1400090a1:	shr    edx,cl
   1400090a3:	add    edx,ebx
   1400090a5:	sub    edx,r12d
   1400090a8:	sub    ebx,r12d
   1400090ab:	mov    DWORD PTR [r13+rdx*4+0x0],eax
   1400090b0:	jne    0x1400090a5
   1400090b2:	mov    r10,QWORD PTR [rbp-0x49]
   1400090b6:	lea    ecx,[r9-0x1]
   1400090ba:	lea    edx,[rbx+0x1]
   1400090bd:	shl    edx,cl
   1400090bf:	jmp    0x1400090c3
   1400090c1:	shr    edx,1
   1400090c3:	test   edi,edx
   1400090c5:	jne    0x1400090c1
   1400090c7:	xor    ebx,ebx
   1400090c9:	test   edx,edx
   1400090cb:	je     0x1400090d7
   1400090cd:	lea    eax,[rdx-0x1]
   1400090d0:	and    eax,edi
   1400090d2:	lea    edi,[rdx+rax*1]
   1400090d5:	jmp    0x1400090d9
   1400090d7:	mov    edi,ebx
   1400090d9:	mov    r12d,DWORD PTR [rbp-0x71]
   1400090dd:	mov    eax,r9d
   1400090e0:	mov    ecx,0xffff
   1400090e5:	inc    r12d
   1400090e8:	add    WORD PTR [rbp+rax*2-0x31],cx
   1400090ed:	mov    DWORD PTR [rbp-0x71],r12d
   1400090f1:	jne    0x14000910e
   1400090f3:	cmp    r9d,esi
   1400090f6:	je     0x1400091d4
   1400090fc:	mov    rcx,QWORD PTR [rbp-0x51]
   140009100:	mov    rax,QWORD PTR [rbp-0x41]
   140009104:	movzx  ecx,WORD PTR [rcx+r12*2]
   140009109:	movzx  r9d,WORD PTR [rax+rcx*2]
   14000910e:	mov    rdx,QWORD PTR [rbp-0x61]
   140009112:	mov    ebx,DWORD PTR [rbp-0x6d]
   140009115:	cmp    r9d,r11d
   140009118:	jbe    0x140009044
   14000911e:	mov    r13d,DWORD PTR [rbp-0x59]
   140009122:	and    r13d,edi
   140009125:	cmp    r13d,DWORD PTR [rbp-0x75]
   140009129:	je     0x14000903f
   14000912f:	mov    rcx,QWORD PTR [rsp+0x8]
   140009134:	mov    eax,DWORD PTR [rbp-0x55]
   140009137:	test   r14d,r14d
   14000913a:	cmove  r14d,r11d
   14000913e:	lea    rcx,[rcx+rax*4]
   140009142:	mov    r12d,r9d
   140009145:	sub    r12d,r14d
   140009148:	mov    QWORD PTR [rsp+0x8],rcx
   14000914d:	mov    edx,0x1
   140009152:	lea    ebx,[r14+r12*1]
   140009156:	mov    ecx,r12d
   140009159:	shl    edx,cl
   14000915b:	cmp    ebx,esi
   14000915d:	jae    0x140009179
   14000915f:	movzx  ecx,WORD PTR [rbp+rbx*2-0x31]
   140009164:	sub    edx,ecx
   140009166:	test   edx,edx
   140009168:	jle    0x140009175
   14000916a:	inc    ebx
   14000916c:	inc    r12d
   14000916f:	add    edx,edx
   140009171:	cmp    ebx,esi
   140009173:	jb     0x14000915f
   140009175:	mov    r10,QWORD PTR [rbp-0x49]
   140009179:	mov    eax,DWORD PTR [rbp-0x79]
   14000917c:	mov    ecx,r12d
   14000917f:	mov    ebx,0x1
   140009184:	shl    ebx,cl
   140009186:	add    eax,ebx
   140009188:	cmp    DWORD PTR [rbp-0x69],0x1
   14000918c:	mov    DWORD PTR [rbp-0x6d],ebx
   14000918f:	mov    DWORD PTR [rbp-0x79],eax
   140009192:	jne    0x14000919f
   140009194:	cmp    eax,0x5b0
   140009199:	jae    0x140009035
   14000919f:	mov    rax,QWORD PTR [r10]
   1400091a2:	mov    rdx,QWORD PTR [rbp-0x61]
   1400091a6:	mov    DWORD PTR [rbp-0x75],r13d
   1400091aa:	mov    BYTE PTR [rax+r13*4],r12b
   1400091ae:	mov    rax,QWORD PTR [r10]
   1400091b1:	mov    r12d,DWORD PTR [rbp-0x71]
   1400091b5:	mov    BYTE PTR [rax+r13*4+0x1],r11b
   1400091ba:	mov    rcx,QWORD PTR [r10]
   1400091bd:	mov    rax,QWORD PTR [rsp+0x8]
   1400091c2:	sub    rax,rcx
   1400091c5:	sar    rax,0x2
   1400091c9:	mov    WORD PTR [rcx+r13*4+0x2],ax
   1400091cf:	jmp    0x14000903f
   1400091d4:	mov    al,r9b
   1400091d7:	mov    BYTE PTR [rsp],0x40
   1400091db:	mov    WORD PTR [rsp+0x2],bx
   1400091e0:	sub    al,r14b
   1400091e3:	mov    BYTE PTR [rsp+0x1],al
   1400091e7:	test   edi,edi
   1400091e9:	je     0x14000924b
   1400091eb:	mov    r8d,DWORD PTR [rbp-0x75]
   1400091ef:	test   r14d,r14d
   1400091f2:	je     0x140009211
   1400091f4:	mov    eax,DWORD PTR [rbp-0x59]
   1400091f7:	and    eax,edi
   1400091f9:	cmp    eax,r8d
   1400091fc:	je     0x140009211
   1400091fe:	mov    rax,QWORD PTR [r10]
   140009201:	mov    r14d,ebx
   140009204:	mov    r9d,r11d
   140009207:	mov    QWORD PTR [rsp+0x8],rax
   14000920c:	mov    BYTE PTR [rsp+0x1],r11b
   140009211:	mov    eax,DWORD PTR [rsp]
   140009214:	mov    ecx,r14d
   140009217:	mov    edx,edi
   140009219:	shr    rdx,cl
   14000921c:	mov    rcx,QWORD PTR [rsp+0x8]
   140009221:	mov    DWORD PTR [rcx+rdx*4],eax
   140009224:	lea    ecx,[r9-0x1]
   140009228:	mov    edx,0x1
   14000922d:	shl    edx,cl
   14000922f:	jmp    0x140009233
   140009231:	shr    edx,1
   140009233:	test   edi,edx
   140009235:	jne    0x140009231
   140009237:	test   edx,edx
   140009239:	je     0x140009245
   14000923b:	lea    eax,[rdx-0x1]
   14000923e:	and    eax,edi
   140009240:	lea    edi,[rdx+rax*1]
   140009243:	jmp    0x140009247
   140009245:	mov    edi,ebx
   140009247:	test   edi,edi
   140009249:	jne    0x1400091ef
   14000924b:	mov    eax,DWORD PTR [rbp-0x79]
   14000924e:	shl    rax,0x2
   140009252:	add    QWORD PTR [r10],rax
   140009255:	mov    rax,QWORD PTR [rbp-0x39]
   140009259:	mov    DWORD PTR [rax],r11d
   14000925c:	jmp    0x140008ef2
   140009261:	or     eax,0xffffffff
   140009264:	mov    rcx,QWORD PTR [rbp+0xf]
   140009268:	xor    rcx,rsp
   14000926b:	call   0x14000a850
   140009270:	mov    rbx,QWORD PTR [rsp+0xe0]
   140009278:	add    rsp,0xa0
   14000927f:	pop    r15
   140009281:	pop    r14
   140009283:	pop    r13
   140009285:	pop    r12
   140009287:	pop    rdi
   140009288:	pop    rsi
   140009289:	pop    rbp
   14000928a:	ret    
   14000928b:	int3   
   14000928c:	mov    QWORD PTR [rsp+0x8],rdi
   140009291:	mov    r9d,ecx
   140009294:	mov    r11,rdx
   140009297:	movzx  r10d,cx
   14000929b:	shr    r9d,0x10
   14000929f:	cmp    r8d,0x1
   1400092a3:	jne    0x1400092d1
   1400092a5:	movzx  eax,BYTE PTR [rdx]
   1400092a8:	mov    ecx,0xfff1
   1400092ad:	add    r10d,eax
   1400092b0:	mov    eax,0xffff000f
   1400092b5:	cmp    r10d,ecx
   1400092b8:	jb     0x1400092bd
   1400092ba:	add    r10d,eax
   1400092bd:	add    r9d,r10d
   1400092c0:	cmp    r9d,ecx
   1400092c3:	jb     0x14000954e
   1400092c9:	add    r9d,eax
   1400092cc:	jmp    0x14000954e
   1400092d1:	test   rdx,rdx
   1400092d4:	jne    0x1400092de
   1400092d6:	lea    eax,[rdx+0x1]
   1400092d9:	jmp    0x140009558
   1400092de:	cmp    r8d,0x10
   1400092e2:	jae    0x14000932a
   1400092e4:	test   r8d,r8d
   1400092e7:	je     0x1400092fb
   1400092e9:	movzx  eax,BYTE PTR [r11]
   1400092ed:	inc    r11
   1400092f0:	add    r10d,eax
   1400092f3:	add    r9d,r10d
   1400092f6:	dec    r8d
   1400092f9:	jne    0x1400092e9
   1400092fb:	mov    ecx,0xfff1
   140009300:	cmp    r10d,ecx
   140009303:	jb     0x14000930d
   140009305:	mov    eax,0xffff000f
   14000930a:	add    r10d,eax
   14000930d:	mov    eax,0x80078071
   140009312:	mul    r9d
   140009315:	shr    edx,0xf
   140009318:	imul   edx,edx,0xf
   14000931b:	lea    eax,[r9+rdx*1]
   14000931f:	shl    eax,0x10
   140009322:	or     eax,r10d
   140009325:	jmp    0x140009558
   14000932a:	mov    ecx,0x80078071
   14000932f:	cmp    r8d,0x15b0
   140009336:	jb     0x14000943b
   14000933c:	mov    eax,0x5e6ea9af
   140009341:	mul    r8d
   140009344:	shr    edx,0xb
   140009347:	mov    edi,edx
   140009349:	add    r8d,0xffffea50
   140009350:	mov    edx,0x15b
   140009355:	movzx  eax,BYTE PTR [r11]
   140009359:	add    r11,0x10
   14000935d:	add    r10d,eax
   140009360:	movzx  eax,BYTE PTR [r11-0xf]
   140009365:	add    r9d,r10d
   140009368:	add    r10d,eax
   14000936b:	movzx  eax,BYTE PTR [r11-0xe]
   140009370:	add    r9d,r10d
   140009373:	add    r10d,eax
   140009376:	movzx  eax,BYTE PTR [r11-0xd]
   14000937b:	add    r9d,r10d
   14000937e:	add    r10d,eax
   140009381:	movzx  eax,BYTE PTR [r11-0xc]
   140009386:	add    r9d,r10d
   140009389:	add    r10d,eax
   14000938c:	movzx  eax,BYTE PTR [r11-0xb]
   140009391:	add    r9d,r10d
   140009394:	add    r10d,eax
   140009397:	movzx  eax,BYTE PTR [r11-0xa]
   14000939c:	add    r9d,r10d
   14000939f:	add    r10d,eax
   1400093a2:	movzx  eax,BYTE PTR [r11-0x9]
   1400093a7:	add    r9d,r10d
   1400093aa:	add    r10d,eax
   1400093ad:	movzx  eax,BYTE PTR [r11-0x8]
   1400093b2:	add    r9d,r10d
   1400093b5:	add    r10d,eax
   1400093b8:	movzx  eax,BYTE PTR [r11-0x7]
   1400093bd:	add    r9d,r10d
   1400093c0:	add    r10d,eax
   1400093c3:	movzx  eax,BYTE PTR [r11-0x6]
   1400093c8:	add    r9d,r10d
   1400093cb:	add    r10d,eax
   1400093ce:	movzx  eax,BYTE PTR [r11-0x5]
   1400093d3:	add    r9d,r10d
   1400093d6:	add    r10d,eax
   1400093d9:	movzx  eax,BYTE PTR [r11-0x4]
   1400093de:	add    r9d,r10d
   1400093e1:	add    r10d,eax
   1400093e4:	movzx  eax,BYTE PTR [r11-0x3]
   1400093e9:	add    r9d,r10d
   1400093ec:	add    r10d,eax
   1400093ef:	movzx  eax,BYTE PTR [r11-0x2]
   1400093f4:	add    r9d,r10d
   1400093f7:	add    r10d,eax
   1400093fa:	movzx  eax,BYTE PTR [r11-0x1]
   1400093ff:	add    r9d,r10d
   140009402:	add    r10d,eax
   140009405:	add    r9d,r10d
   140009408:	dec    edx
   14000940a:	jne    0x140009355
   140009410:	mov    eax,ecx
   140009412:	mul    r10d
   140009415:	mov    eax,ecx
   140009417:	shr    edx,0xf
   14000941a:	imul   edx,edx,0xffff000f
   140009420:	add    r10d,edx
   140009423:	mul    r9d
   140009426:	shr    edx,0xf
   140009429:	imul   edx,edx,0xffff000f
   14000942f:	add    r9d,edx
   140009432:	dec    rdi
   140009435:	jne    0x140009349
   14000943b:	test   r8d,r8d
   14000943e:	je     0x14000954e
   140009444:	cmp    r8d,0x10
   140009448:	jb     0x140009515
   14000944e:	mov    edx,r8d
   140009451:	shr    rdx,0x4
   140009455:	movzx  eax,BYTE PTR [r11]
   140009459:	add    r8d,0xfffffff0
   14000945d:	add    r11,0x10
   140009461:	add    r10d,eax
   140009464:	movzx  eax,BYTE PTR [r11-0xf]
   140009469:	add    r9d,r10d
   14000946c:	add    r10d,eax
   14000946f:	movzx  eax,BYTE PTR [r11-0xe]
   140009474:	add    r9d,r10d
   140009477:	add    r10d,eax
   14000947a:	movzx  eax,BYTE PTR [r11-0xd]
   14000947f:	add    r9d,r10d
   140009482:	add    r10d,eax
   140009485:	movzx  eax,BYTE PTR [r11-0xc]
   14000948a:	add    r9d,r10d
   14000948d:	add    r10d,eax
   140009490:	movzx  eax,BYTE PTR [r11-0xb]
   140009495:	add    r9d,r10d
   140009498:	add    r10d,eax
   14000949b:	movzx  eax,BYTE PTR [r11-0xa]
   1400094a0:	add    r9d,r10d
   1400094a3:	add    r10d,eax
   1400094a6:	movzx  eax,BYTE PTR [r11-0x9]
   1400094ab:	add    r9d,r10d
   1400094ae:	add    r10d,eax
   1400094b1:	movzx  eax,BYTE PTR [r11-0x8]
   1400094b6:	add    r9d,r10d
   1400094b9:	add    r10d,eax
   1400094bc:	movzx  eax,BYTE PTR [r11-0x7]
   1400094c1:	add    r9d,r10d
   1400094c4:	add    r10d,eax
   1400094c7:	movzx  eax,BYTE PTR [r11-0x6]
   1400094cc:	add    r9d,r10d
   1400094cf:	add    r10d,eax
   1400094d2:	movzx  eax,BYTE PTR [r11-0x5]
   1400094d7:	add    r9d,r10d
   1400094da:	add    r10d,eax
   1400094dd:	movzx  eax,BYTE PTR [r11-0x4]
   1400094e2:	add    r9d,r10d
   1400094e5:	add    r10d,eax
   1400094e8:	movzx  eax,BYTE PTR [r11-0x3]
   1400094ed:	add    r9d,r10d
   1400094f0:	add    r10d,eax
   1400094f3:	movzx  eax,BYTE PTR [r11-0x2]
   1400094f8:	add    r9d,r10d
   1400094fb:	add    r10d,eax
   1400094fe:	movzx  eax,BYTE PTR [r11-0x1]
   140009503:	add    r9d,r10d
   140009506:	add    r10d,eax
   140009509:	add    r9d,r10d
   14000950c:	dec    rdx
   14000950f:	jne    0x140009455
   140009515:	test   r8d,r8d
   140009518:	je     0x14000952c
   14000951a:	movzx  eax,BYTE PTR [r11]
   14000951e:	inc    r11
   140009521:	add    r10d,eax
   140009524:	add    r9d,r10d
   140009527:	dec    r8d
   14000952a:	jne    0x14000951a
   14000952c:	mov    eax,ecx
   14000952e:	mul    r10d
   140009531:	mov    eax,ecx
   140009533:	shr    edx,0xf
   140009536:	imul   edx,edx,0xffff000f
   14000953c:	add    r10d,edx
   14000953f:	mul    r9d
   140009542:	shr    edx,0xf
   140009545:	imul   edx,edx,0xffff000f
   14000954b:	add    r9d,edx
   14000954e:	shl    r9d,0x10
   140009552:	or     r9d,r10d
   140009555:	mov    eax,r9d
   140009558:	mov    rdi,QWORD PTR [rsp+0x8]
   14000955d:	ret    
   14000955e:	int3   
   14000955f:	int3   
   140009560:	mov    QWORD PTR [rsp+0x8],rbx
   140009565:	mov    QWORD PTR [rsp+0x10],rsi
   14000956a:	mov    QWORD PTR [rsp+0x18],rdi
   14000956f:	mov    r10d,ecx
   140009572:	mov    r11d,r8d
   140009575:	mov    rbx,rdx
   140009578:	lea    rsi,[rip+0x13491]        # 0x14001ca10
   14000957f:	not    r10d
   140009582:	test   r8d,r8d
   140009585:	je     0x1400095aa
   140009587:	test   bl,0x3
   14000958a:	je     0x1400095aa
   14000958c:	movzx  ecx,BYTE PTR [rbx]
   14000958f:	mov    eax,r10d
   140009592:	inc    rbx
   140009595:	xor    rcx,rax
   140009598:	shr    eax,0x8
   14000959b:	movzx  edx,cl
   14000959e:	mov    r10d,DWORD PTR [rsi+rdx*4]
   1400095a2:	xor    r10d,eax
   1400095a5:	dec    r11d
   1400095a8:	jne    0x140009587
   1400095aa:	cmp    r11d,0x20
   1400095ae:	jb     0x1400097d5
   1400095b4:	mov    edi,r11d
   1400095b7:	shr    rdi,0x5
   1400095bb:	xor    r10d,DWORD PTR [rbx]
   1400095be:	mov    eax,r10d
   1400095c1:	shr    rax,0x10
   1400095c5:	movzx  edx,al
   1400095c8:	mov    eax,r10d
   1400095cb:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   1400095d3:	shr    rax,0x8
   1400095d7:	movzx  ecx,al
   1400095da:	mov    eax,r10d
   1400095dd:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   1400095e5:	shr    rax,0x18
   1400095e9:	xor    r8d,DWORD PTR [rsi+rax*4]
   1400095ed:	movzx  eax,r10b
   1400095f1:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   1400095f9:	xor    r8d,DWORD PTR [rbx+0x4]
   1400095fd:	mov    r9d,r8d
   140009600:	mov    eax,r8d
   140009603:	shr    rax,0x10
   140009607:	movzx  edx,al
   14000960a:	mov    eax,r8d
   14000960d:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009615:	shr    rax,0x8
   140009619:	movzx  ecx,al
   14000961c:	mov    eax,r9d
   14000961f:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140009627:	shr    rax,0x18
   14000962b:	xor    r8d,DWORD PTR [rsi+rax*4]
   14000962f:	movzx  eax,r9b
   140009633:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   14000963b:	xor    r8d,DWORD PTR [rbx+0x8]
   14000963f:	mov    r9d,r8d
   140009642:	mov    eax,r8d
   140009645:	shr    rax,0x10
   140009649:	movzx  edx,al
   14000964c:	mov    eax,r8d
   14000964f:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009657:	shr    rax,0x8
   14000965b:	movzx  ecx,al
   14000965e:	mov    eax,r9d
   140009661:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140009669:	shr    rax,0x18
   14000966d:	xor    r8d,DWORD PTR [rsi+rax*4]
   140009671:	movzx  eax,r9b
   140009675:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   14000967d:	xor    r8d,DWORD PTR [rbx+0xc]
   140009681:	mov    r9d,r8d
   140009684:	mov    eax,r8d
   140009687:	shr    rax,0x10
   14000968b:	movzx  edx,al
   14000968e:	mov    eax,r8d
   140009691:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009699:	shr    rax,0x8
   14000969d:	movzx  ecx,al
   1400096a0:	mov    eax,r9d
   1400096a3:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   1400096ab:	shr    rax,0x18
   1400096af:	xor    r8d,DWORD PTR [rsi+rax*4]
   1400096b3:	movzx  eax,r9b
   1400096b7:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   1400096bf:	xor    r8d,DWORD PTR [rbx+0x10]
   1400096c3:	mov    r9d,r8d
   1400096c6:	mov    eax,r8d
   1400096c9:	shr    rax,0x10
   1400096cd:	movzx  edx,al
   1400096d0:	mov    eax,r8d
   1400096d3:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   1400096db:	shr    rax,0x8
   1400096df:	movzx  ecx,al
   1400096e2:	mov    eax,r9d
   1400096e5:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   1400096ed:	shr    rax,0x18
   1400096f1:	xor    r8d,DWORD PTR [rsi+rax*4]
   1400096f5:	movzx  eax,r9b
   1400096f9:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140009701:	xor    r8d,DWORD PTR [rbx+0x14]
   140009705:	mov    eax,r8d
   140009708:	mov    r9d,r8d
   14000970b:	shr    rax,0x10
   14000970f:	movzx  edx,al
   140009712:	mov    eax,r8d
   140009715:	shr    rax,0x8
   140009719:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009721:	movzx  ecx,al
   140009724:	mov    eax,r9d
   140009727:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   14000972f:	shr    rax,0x18
   140009733:	add    rbx,0x20
   140009737:	xor    r8d,DWORD PTR [rsi+rax*4]
   14000973b:	movzx  eax,r9b
   14000973f:	add    r11d,0xffffffe0
   140009743:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   14000974b:	xor    r8d,DWORD PTR [rbx-0x8]
   14000974f:	mov    r9d,r8d
   140009752:	mov    eax,r8d
   140009755:	shr    rax,0x10
   140009759:	movzx  edx,al
   14000975c:	mov    eax,r8d
   14000975f:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009767:	shr    rax,0x8
   14000976b:	movzx  ecx,al
   14000976e:	mov    eax,r9d
   140009771:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140009779:	shr    rax,0x18
   14000977d:	xor    r8d,DWORD PTR [rsi+rax*4]
   140009781:	movzx  eax,r9b
   140009785:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   14000978d:	xor    r8d,DWORD PTR [rbx-0x4]
   140009791:	mov    eax,r8d
   140009794:	shr    rax,0x10
   140009798:	movzx  edx,al
   14000979b:	mov    eax,r8d
   14000979e:	mov    r10d,DWORD PTR [rsi+rdx*4+0x400]
   1400097a6:	shr    rax,0x8
   1400097aa:	movzx  ecx,al
   1400097ad:	mov    eax,r8d
   1400097b0:	xor    r10d,DWORD PTR [rsi+rcx*4+0x800]
   1400097b8:	shr    rax,0x18
   1400097bc:	xor    r10d,DWORD PTR [rsi+rax*4]
   1400097c0:	movzx  eax,r8b
   1400097c4:	xor    r10d,DWORD PTR [rsi+rax*4+0xc00]
   1400097cc:	dec    rdi
   1400097cf:	jne    0x1400095bb
   1400097d5:	cmp    r11d,0x4
   1400097d9:	jb     0x140009830
   1400097db:	mov    r9d,r11d
   1400097de:	shr    r9,0x2
   1400097e2:	xor    r10d,DWORD PTR [rbx]
   1400097e5:	add    r11d,0xfffffffc
   1400097e9:	add    rbx,0x4
   1400097ed:	mov    r8d,r10d
   1400097f0:	mov    eax,r10d
   1400097f3:	shr    rax,0x10
   1400097f7:	movzx  edx,al
   1400097fa:	mov    eax,r10d
   1400097fd:	mov    r10d,DWORD PTR [rsi+rdx*4+0x400]
   140009805:	shr    rax,0x8
   140009809:	movzx  ecx,al
   14000980c:	mov    eax,r8d
   14000980f:	xor    r10d,DWORD PTR [rsi+rcx*4+0x800]
   140009817:	shr    rax,0x18
   14000981b:	xor    r10d,DWORD PTR [rsi+rax*4]
   14000981f:	movzx  eax,r8b
   140009823:	xor    r10d,DWORD PTR [rsi+rax*4+0xc00]
   14000982b:	dec    r9
   14000982e:	jne    0x1400097e2
   140009830:	test   r11d,r11d
   140009833:	je     0x140009853
   140009835:	movzx  ecx,BYTE PTR [rbx]
   140009838:	mov    eax,r10d
   14000983b:	inc    rbx
   14000983e:	xor    rcx,rax
   140009841:	shr    eax,0x8
   140009844:	movzx  edx,cl
   140009847:	mov    r10d,DWORD PTR [rsi+rdx*4]
   14000984b:	xor    r10d,eax
   14000984e:	dec    r11d
   140009851:	jne    0x140009835
   140009853:	mov    rbx,QWORD PTR [rsp+0x8]
   140009858:	mov    rsi,QWORD PTR [rsp+0x10]
   14000985d:	mov    rdi,QWORD PTR [rsp+0x18]
   140009862:	not    r10d
   140009865:	mov    eax,r10d
   140009868:	ret    
   140009869:	int3   
   14000986a:	int3   
   14000986b:	int3   
   14000986c:	test   rdx,rdx
   14000986f:	jne    0x140009874
   140009871:	xor    eax,eax
   140009873:	ret    
   140009874:	jmp    0x140009560
   140009879:	int3   
   14000987a:	int3   
   14000987b:	int3   
   14000987c:	rex push rbx
   14000987e:	sub    rsp,0x20
   140009882:	mov    ebx,ecx
   140009884:	lea    rcx,[rip+0x15195]        # 0x14001ea20
   14000988b:	call   QWORD PTR [rip+0x1083f]        # 0x14001a0d0
   140009891:	test   rax,rax
   140009894:	je     0x1400098af
   140009896:	lea    rdx,[rip+0x15173]        # 0x14001ea10
   14000989d:	mov    rcx,rax
   1400098a0:	call   QWORD PTR [rip+0x107f2]        # 0x14001a098
   1400098a6:	test   rax,rax
   1400098a9:	je     0x1400098af
   1400098ab:	mov    ecx,ebx
   1400098ad:	call   rax
   1400098af:	add    rsp,0x20
   1400098b3:	pop    rbx
   1400098b4:	ret    
   1400098b5:	int3   
   1400098b6:	int3   
   1400098b7:	int3   
   1400098b8:	rex push rbx
   1400098ba:	sub    rsp,0x20
   1400098be:	mov    ebx,ecx
   1400098c0:	call   0x14000987c
   1400098c5:	mov    ecx,ebx
   1400098c7:	call   QWORD PTR [rip+0x1080b]        # 0x14001a0d8
   1400098cd:	int3   
   1400098ce:	int3   
   1400098cf:	int3   
   1400098d0:	mov    ecx,0x8
   1400098d5:	jmp    0x14000cb58
   1400098da:	int3   
   1400098db:	int3   
   1400098dc:	mov    ecx,0x8
   1400098e1:	jmp    0x14000ca58
   1400098e6:	int3   
   1400098e7:	int3   
   1400098e8:	rex push rbx
   1400098ea:	sub    rsp,0x20
   1400098ee:	call   0x14000d0a8
   1400098f3:	mov    rcx,rax
   1400098f6:	mov    rbx,rax
   1400098f9:	call   0x14000d06c
   1400098fe:	mov    rcx,rbx
   140009901:	call   0x14000ce54
   140009906:	mov    rcx,rbx
   140009909:	call   0x14000ce4c
   14000990e:	mov    rcx,rbx
   140009911:	call   0x14000ce44
   140009916:	mov    rcx,rbx
   140009919:	call   0x14000cbe0
   14000991e:	mov    rcx,rbx
   140009921:	add    rsp,0x20
   140009925:	pop    rbx
   140009926:	jmp    0x14000cbc0
   14000992b:	int3   
   14000992c:	cmp    rcx,rdx
   14000992f:	jae    0x14000995e
   140009931:	mov    QWORD PTR [rsp+0x8],rbx
   140009936:	push   rdi
   140009937:	sub    rsp,0x20
   14000993b:	mov    rdi,rdx
   14000993e:	mov    rbx,rcx
   140009941:	mov    rax,QWORD PTR [rbx]
   140009944:	test   rax,rax
   140009947:	je     0x14000994b
   140009949:	call   rax
   14000994b:	add    rbx,0x8
   14000994f:	cmp    rbx,rdi
   140009952:	jb     0x140009941
   140009954:	mov    rbx,QWORD PTR [rsp+0x30]
   140009959:	add    rsp,0x20
   14000995d:	pop    rdi
   14000995e:	ret    
   14000995f:	int3   
   140009960:	mov    QWORD PTR [rsp+0x8],rbx
   140009965:	push   rdi
   140009966:	sub    rsp,0x20
   14000996a:	xor    eax,eax
   14000996c:	mov    rdi,rdx
   14000996f:	mov    rbx,rcx
   140009972:	cmp    rcx,rdx
   140009975:	jae    0x14000998e
   140009977:	test   eax,eax
   140009979:	jne    0x14000998e
   14000997b:	mov    rcx,QWORD PTR [rbx]
   14000997e:	test   rcx,rcx
   140009981:	je     0x140009985
   140009983:	call   rcx
   140009985:	add    rbx,0x8
   140009989:	cmp    rbx,rdi
   14000998c:	jb     0x140009977
   14000998e:	mov    rbx,QWORD PTR [rsp+0x30]
   140009993:	add    rsp,0x20
   140009997:	pop    rdi
   140009998:	ret    
   140009999:	int3   
   14000999a:	int3   
   14000999b:	int3   
   14000999c:	mov    QWORD PTR [rsp+0x8],rbx
   1400099a1:	push   rdi
   1400099a2:	sub    rsp,0x20
   1400099a6:	cmp    QWORD PTR [rip+0x1d322],0x0        # 0x140026cd0
   1400099ae:	mov    ebx,ecx
   1400099b0:	je     0x1400099ca
   1400099b2:	lea    rcx,[rip+0x1d317]        # 0x140026cd0
   1400099b9:	call   0x14000d6e0
   1400099be:	test   eax,eax
   1400099c0:	je     0x1400099ca
   1400099c2:	mov    ecx,ebx
   1400099c4:	call   QWORD PTR [rip+0x1d306]        # 0x140026cd0
   1400099ca:	call   0x14000d628
   1400099cf:	lea    rdx,[rip+0x109ba]        # 0x14001a390
   1400099d6:	lea    rcx,[rip+0x1098b]        # 0x14001a368
   1400099dd:	call   0x140009960
   1400099e2:	test   eax,eax
   1400099e4:	jne    0x140009a40
   1400099e6:	lea    rcx,[rip+0x3c03]        # 0x14000d5f0
   1400099ed:	call   0x14000d5a0
   1400099f2:	lea    rbx,[rip+0x1095f]        # 0x14001a358
   1400099f9:	lea    rdi,[rip+0x10960]        # 0x14001a360
   140009a00:	jmp    0x140009a10
   140009a02:	mov    rax,QWORD PTR [rbx]
   140009a05:	test   rax,rax
   140009a08:	je     0x140009a0c
   140009a0a:	call   rax
   140009a0c:	add    rbx,0x8
   140009a10:	cmp    rbx,rdi
   140009a13:	jb     0x140009a02
   140009a15:	cmp    QWORD PTR [rip+0x1d2bb],0x0        # 0x140026cd8
   140009a1d:	je     0x140009a3e
   140009a1f:	lea    rcx,[rip+0x1d2b2]        # 0x140026cd8
   140009a26:	call   0x14000d6e0
   140009a2b:	test   eax,eax
   140009a2d:	je     0x140009a3e
   140009a2f:	xor    r8d,r8d
   140009a32:	xor    ecx,ecx
   140009a34:	lea    edx,[r8+0x2]
   140009a38:	call   QWORD PTR [rip+0x1d29a]        # 0x140026cd8
   140009a3e:	xor    eax,eax
   140009a40:	mov    rbx,QWORD PTR [rsp+0x30]
   140009a45:	add    rsp,0x20
   140009a49:	pop    rdi
   140009a4a:	ret    
   140009a4b:	int3   
   140009a4c:	mov    QWORD PTR [rsp+0x8],rbx
   140009a51:	mov    QWORD PTR [rsp+0x10],rsi
   140009a56:	mov    DWORD PTR [rsp+0x18],r8d
   140009a5b:	push   rdi
   140009a5c:	push   r12
   140009a5e:	push   r13
   140009a60:	push   r14
   140009a62:	push   r15
   140009a64:	sub    rsp,0x40
   140009a68:	mov    r12d,r8d
   140009a6b:	mov    ebx,edx
   140009a6d:	mov    r15d,ecx
   140009a70:	mov    ecx,0x8
   140009a75:	call   0x14000cb58
   140009a7a:	nop
   140009a7b:	cmp    DWORD PTR [rip+0x1af4e],0x1        # 0x1400249d0
   140009a82:	je     0x140009b89
   140009a88:	mov    DWORD PTR [rip+0x1af3a],0x1        # 0x1400249cc
   140009a92:	mov    BYTE PTR [rip+0x1af2f],r12b        # 0x1400249c8
   140009a99:	test   ebx,ebx
   140009a9b:	jne    0x140009b75
   140009aa1:	mov    rcx,QWORD PTR [rip+0x1d218]        # 0x140026cc0
   140009aa8:	call   QWORD PTR [rip+0x10632]        # 0x14001a0e0
   140009aae:	mov    rsi,rax
   140009ab1:	mov    QWORD PTR [rsp+0x30],rax
   140009ab6:	test   rax,rax
   140009ab9:	je     0x140009b62
   140009abf:	mov    rcx,QWORD PTR [rip+0x1d1f2]        # 0x140026cb8
   140009ac6:	call   QWORD PTR [rip+0x10614]        # 0x14001a0e0
   140009acc:	mov    rdi,rax
   140009acf:	mov    QWORD PTR [rsp+0x20],rax
   140009ad4:	mov    r14,rsi
   140009ad7:	mov    QWORD PTR [rsp+0x28],rsi
   140009adc:	mov    r13,rax
   140009adf:	mov    QWORD PTR [rsp+0x38],rax
   140009ae4:	sub    rdi,0x8
   140009ae8:	mov    QWORD PTR [rsp+0x20],rdi
   140009aed:	cmp    rdi,rsi
   140009af0:	jb     0x140009b62
   140009af2:	call   0x14000d0a8
   140009af7:	cmp    QWORD PTR [rdi],rax
   140009afa:	jne    0x140009afe
   140009afc:	jmp    0x140009ae4
   140009afe:	cmp    rdi,rsi
   140009b01:	jb     0x140009b62
   140009b03:	mov    rcx,QWORD PTR [rdi]
   140009b06:	call   QWORD PTR [rip+0x105d4]        # 0x14001a0e0
   140009b0c:	mov    rbx,rax
   140009b0f:	call   0x14000d0a8
   140009b14:	mov    QWORD PTR [rdi],rax
   140009b17:	call   rbx
   140009b19:	mov    rcx,QWORD PTR [rip+0x1d1a0]        # 0x140026cc0
   140009b20:	call   QWORD PTR [rip+0x105ba]        # 0x14001a0e0
   140009b26:	mov    rbx,rax
   140009b29:	mov    rcx,QWORD PTR [rip+0x1d188]        # 0x140026cb8
   140009b30:	call   QWORD PTR [rip+0x105aa]        # 0x14001a0e0
   140009b36:	cmp    r14,rbx
   140009b39:	jne    0x140009b40
   140009b3b:	cmp    r13,rax
   140009b3e:	je     0x140009afc
   140009b40:	mov    r14,rbx
   140009b43:	mov    QWORD PTR [rsp+0x28],rbx
   140009b48:	mov    rsi,rbx
   140009b4b:	mov    QWORD PTR [rsp+0x30],rbx
   140009b50:	mov    r13,rax
   140009b53:	mov    QWORD PTR [rsp+0x38],rax
   140009b58:	mov    rdi,rax
   140009b5b:	mov    QWORD PTR [rsp+0x20],rax
   140009b60:	jmp    0x140009afc
   140009b62:	lea    rdx,[rip+0x10847]        # 0x14001a3b0
   140009b69:	lea    rcx,[rip+0x10828]        # 0x14001a398
   140009b70:	call   0x14000992c
   140009b75:	lea    rdx,[rip+0x10844]        # 0x14001a3c0
   140009b7c:	lea    rcx,[rip+0x10835]        # 0x14001a3b8
   140009b83:	call   0x14000992c
   140009b88:	nop
   140009b89:	test   r12d,r12d
   140009b8c:	je     0x140009b9d
   140009b8e:	mov    ecx,0x8
   140009b93:	call   0x14000ca58
   140009b98:	test   r12d,r12d
   140009b9b:	jne    0x140009bc3
   140009b9d:	mov    DWORD PTR [rip+0x1ae29],0x1        # 0x1400249d0
   140009ba7:	mov    ecx,0x8
   140009bac:	call   0x14000ca58
   140009bb1:	mov    ecx,r15d
   140009bb4:	call   0x14000987c
   140009bb9:	mov    ecx,r15d
   140009bbc:	call   QWORD PTR [rip+0x10516]        # 0x14001a0d8
   140009bc2:	int3   
   140009bc3:	mov    rbx,QWORD PTR [rsp+0x70]
   140009bc8:	mov    rsi,QWORD PTR [rsp+0x78]
   140009bcd:	add    rsp,0x40
   140009bd1:	pop    r15
   140009bd3:	pop    r14
   140009bd5:	pop    r13
   140009bd7:	pop    r12
   140009bd9:	pop    rdi
   140009bda:	ret    
   140009bdb:	int3   
   140009bdc:	xor    r8d,r8d
   140009bdf:	xor    edx,edx
   140009be1:	jmp    0x140009a4c
   140009be6:	int3   
   140009be7:	int3   
   140009be8:	xor    r8d,r8d
   140009beb:	lea    edx,[r8+0x1]
   140009bef:	jmp    0x140009a4c
   140009bf4:	xor    edx,edx
   140009bf6:	xor    ecx,ecx
   140009bf8:	lea    r8d,[rdx+0x1]
   140009bfc:	jmp    0x140009a4c
   140009c01:	int3   
   140009c02:	int3   
   140009c03:	int3   
   140009c04:	mov    edx,0x1
   140009c09:	xor    ecx,ecx
   140009c0b:	mov    r8d,edx
   140009c0e:	jmp    0x140009a4c
   140009c13:	int3   
   140009c14:	rex push rbx
   140009c16:	sub    rsp,0x20
   140009c1a:	mov    ebx,ecx
   140009c1c:	call   0x14000dbb0
   140009c21:	mov    ecx,ebx
   140009c23:	call   0x14000d950
   140009c28:	xor    r8d,r8d
   140009c2b:	mov    ecx,0xff
   140009c30:	lea    edx,[r8+0x1]
   140009c34:	call   0x140009a4c
   140009c39:	int3   
   140009c3a:	int3   
   140009c3b:	int3   
   140009c3c:	mov    rax,rsp
   140009c3f:	mov    QWORD PTR [rax+0x8],rcx
   140009c43:	mov    QWORD PTR [rax+0x10],rdx
   140009c47:	mov    QWORD PTR [rax+0x18],r8
   140009c4b:	mov    QWORD PTR [rax+0x20],r9
   140009c4f:	push   rbx
   140009c50:	push   rdi
   140009c51:	sub    rsp,0x28
   140009c55:	xor    eax,eax
   140009c57:	test   rcx,rcx
   140009c5a:	setne  al
   140009c5d:	test   eax,eax
   140009c5f:	jne    0x140009c76
   140009c61:	call   0x14000bdf0
   140009c66:	mov    DWORD PTR [rax],0x16
   140009c6c:	call   0x14000d04c
   140009c71:	or     eax,0xffffffff
   140009c74:	jmp    0x140009ce0
   140009c76:	lea    rdi,[rsp+0x48]
   140009c7b:	call   0x14000abc8
   140009c80:	lea    rdx,[rax+0x30]
   140009c84:	mov    ecx,0x1
   140009c89:	call   0x14000ad3c
   140009c8e:	nop
   140009c8f:	call   0x14000abc8
   140009c94:	lea    rcx,[rax+0x30]
   140009c98:	call   0x14000dbf4
   140009c9d:	mov    ebx,eax
   140009c9f:	call   0x14000abc8
   140009ca4:	mov    r9,rdi
   140009ca7:	xor    r8d,r8d
   140009caa:	mov    rdx,QWORD PTR [rsp+0x40]
   140009caf:	lea    rcx,[rax+0x30]
   140009cb3:	call   0x14000de34
   140009cb8:	mov    edi,eax
   140009cba:	call   0x14000abc8
   140009cbf:	lea    rdx,[rax+0x30]
   140009cc3:	mov    ecx,ebx
   140009cc5:	call   0x14000dcc8
   140009cca:	nop
   140009ccb:	call   0x14000abc8
   140009cd0:	lea    rdx,[rax+0x30]
   140009cd4:	mov    ecx,0x1
   140009cd9:	call   0x14000adbc
   140009cde:	mov    eax,edi
   140009ce0:	add    rsp,0x28
   140009ce4:	pop    rdi
   140009ce5:	pop    rbx
   140009ce6:	ret    
   140009ce7:	int3   
   140009ce8:	mov    rcx,QWORD PTR [rip+0x193d1]        # 0x1400230c0
   140009cef:	xor    eax,eax
   140009cf1:	or     rcx,0x1
   140009cf5:	cmp    QWORD PTR [rip+0x1acdc],rcx        # 0x1400249d8
   140009cfc:	sete   al
   140009cff:	ret    
   140009d00:	mov    QWORD PTR [rsp+0x8],rbx
   140009d05:	mov    QWORD PTR [rsp+0x10],rsi
   140009d0a:	push   rdi
   140009d0b:	sub    rsp,0x20
   140009d0f:	cmp    DWORD PTR [rip+0x1cf9a],0x0        # 0x140026cb0
   140009d16:	mov    rbx,QWORD PTR [rip+0x1ac7b]        # 0x140024998
   140009d1d:	mov    rsi,rcx
   140009d20:	je     0x140009d8f
   140009d22:	test   rbx,rbx
   140009d25:	jne    0x140009d45
   140009d27:	cmp    QWORD PTR [rip+0x1ac7a],rbx        # 0x1400249a8
   140009d2e:	je     0x140009d8f
   140009d30:	call   0x14000e9ec
   140009d35:	test   eax,eax
   140009d37:	jne    0x140009d8f
   140009d39:	mov    rbx,QWORD PTR [rip+0x1ac58]        # 0x140024998
   140009d40:	test   rbx,rbx
   140009d43:	je     0x140009d8f
   140009d45:	test   rsi,rsi
   140009d48:	je     0x140009d8f
   140009d4a:	mov    rcx,rsi
   140009d4d:	call   0x140009fd0
   140009d52:	mov    rdi,rax
   140009d55:	mov    rcx,QWORD PTR [rbx]
   140009d58:	test   rcx,rcx
   140009d5b:	je     0x140009d8f
   140009d5d:	call   0x140009fd0
   140009d62:	cmp    rax,rdi
   140009d65:	jbe    0x140009d7f
   140009d67:	mov    rcx,QWORD PTR [rbx]
   140009d6a:	cmp    BYTE PTR [rcx+rdi*1],0x3d
   140009d6e:	jne    0x140009d7f
   140009d70:	mov    r8,rdi
   140009d73:	mov    rdx,rsi
   140009d76:	call   0x14000e9e4
   140009d7b:	test   eax,eax
   140009d7d:	je     0x140009d85
   140009d7f:	add    rbx,0x8
   140009d83:	jmp    0x140009d55
   140009d85:	mov    rax,QWORD PTR [rbx]
   140009d88:	lea    rax,[rax+rdi*1+0x1]
   140009d8d:	jmp    0x140009d91
   140009d8f:	xor    eax,eax
   140009d91:	mov    rbx,QWORD PTR [rsp+0x30]
   140009d96:	mov    rsi,QWORD PTR [rsp+0x38]
   140009d9b:	add    rsp,0x20
   140009d9f:	pop    rdi
   140009da0:	ret    
   140009da1:	int3   
   140009da2:	int3   
   140009da3:	int3   
   140009da4:	rex push rbx
   140009da6:	sub    rsp,0x20
   140009daa:	mov    rbx,rcx
   140009dad:	xor    eax,eax
   140009daf:	test   rcx,rcx
   140009db2:	setne  al
   140009db5:	test   eax,eax
   140009db7:	jne    0x140009dcd
   140009db9:	call   0x14000bdf0
   140009dbe:	mov    DWORD PTR [rax],0x16
   140009dc4:	call   0x14000d04c
   140009dc9:	xor    eax,eax
   140009dcb:	jmp    0x140009e09
   140009dcd:	mov    edx,0x7fff
   140009dd2:	call   0x14000eb88
   140009dd7:	xor    ecx,ecx
   140009dd9:	cmp    rax,0x7fff
   140009ddf:	setb   cl
   140009de2:	test   ecx,ecx
   140009de4:	je     0x140009db9
   140009de6:	mov    ecx,0x7
   140009deb:	call   0x14000cb58
   140009df0:	nop
   140009df1:	mov    rcx,rbx
   140009df4:	call   0x140009d00
   140009df9:	mov    rbx,rax
   140009dfc:	mov    ecx,0x7
   140009e01:	call   0x14000ca58
   140009e06:	mov    rax,rbx
   140009e09:	add    rsp,0x20
   140009e0d:	pop    rbx
   140009e0e:	ret    
   140009e0f:	int3   
   140009e10:	mov    QWORD PTR [rsp+0x10],rbx
   140009e15:	push   rdi
   140009e16:	sub    rsp,0xa0
   140009e1d:	lea    rcx,[rsp+0x30]
   140009e22:	call   QWORD PTR [rip+0x102c0]        # 0x14001a0e8
   140009e28:	mov    r11d,0x5a4d
   140009e2e:	lea    rdi,[rip+0xffffffffffff61cb]        # 0x140000000
   140009e35:	cmp    WORD PTR [rip+0xffffffffffff61c3],r11w        # 0x140000000
   140009e3d:	je     0x140009e43
   140009e3f:	xor    ebx,ebx
   140009e41:	jmp    0x140009e74
   140009e43:	movsxd rax,DWORD PTR [rip+0xffffffffffff61f2]        # 0x14000003c
   140009e4a:	add    rax,rdi
   140009e4d:	cmp    DWORD PTR [rax],0x4550
   140009e53:	jne    0x140009e3f
   140009e55:	mov    ecx,0x20b
   140009e5a:	cmp    WORD PTR [rax+0x18],cx
   140009e5e:	jne    0x140009e3f
   140009e60:	xor    ebx,ebx
   140009e62:	cmp    DWORD PTR [rax+0x84],0xe
   140009e69:	jbe    0x140009e74
   140009e6b:	cmp    DWORD PTR [rax+0xf8],ebx
   140009e71:	setne  bl
   140009e74:	mov    DWORD PTR [rsp+0xb0],ebx
   140009e7b:	call   0x14000f60c
   140009e80:	test   eax,eax
   140009e82:	jne    0x140009ea6
   140009e84:	cmp    DWORD PTR [rip+0x1ab65],0x1        # 0x1400249f0
   140009e8b:	jne    0x140009e92
   140009e8d:	call   0x14000dbb0
   140009e92:	mov    ecx,0x1c
   140009e97:	call   0x14000d950
   140009e9c:	mov    ecx,0xff
   140009ea1:	call   0x1400098b8
   140009ea6:	call   0x14000d3cc
   140009eab:	test   eax,eax
   140009ead:	jne    0x140009ed1
   140009eaf:	cmp    DWORD PTR [rip+0x1ab3a],0x1        # 0x1400249f0
   140009eb6:	jne    0x140009ebd
   140009eb8:	call   0x14000dbb0
   140009ebd:	mov    ecx,0x10
   140009ec2:	call   0x14000d950
   140009ec7:	mov    ecx,0xff
   140009ecc:	call   0x1400098b8
   140009ed1:	call   0x14000d5b8
   140009ed6:	nop
   140009ed7:	call   0x14000f338
   140009edc:	test   eax,eax
   140009ede:	jns    0x140009eea
   140009ee0:	mov    ecx,0x1b
   140009ee5:	call   0x140009c14
   140009eea:	call   QWORD PTR [rip+0x10150]        # 0x14001a040
   140009ef0:	mov    QWORD PTR [rip+0x1cdb1],rax        # 0x140026ca8
   140009ef7:	call   0x14000f244
   140009efc:	mov    QWORD PTR [rip+0x1aadd],rax        # 0x1400249e0
   140009f03:	call   0x14000f14c
   140009f08:	test   eax,eax
   140009f0a:	jns    0x140009f16
   140009f0c:	mov    ecx,0x8
   140009f11:	call   0x140009c14
   140009f16:	call   0x14000ee4c
   140009f1b:	test   eax,eax
   140009f1d:	jns    0x140009f29
   140009f1f:	mov    ecx,0x9
   140009f24:	call   0x140009c14
   140009f29:	mov    ecx,0x1
   140009f2e:	call   0x14000999c
   140009f33:	test   eax,eax
   140009f35:	je     0x140009f3e
   140009f37:	mov    ecx,eax
   140009f39:	call   0x140009c14
   140009f3e:	call   0x14000edd0
   140009f43:	test   BYTE PTR [rsp+0x6c],0x1
   140009f48:	movzx  edx,WORD PTR [rsp+0x70]
   140009f4d:	mov    r9d,0xa
   140009f53:	cmovne r9d,edx
   140009f57:	mov    r8,rax
   140009f5a:	xor    edx,edx
   140009f5c:	mov    rcx,rdi
   140009f5f:	call   0x140001000
   140009f64:	mov    edi,eax
   140009f66:	mov    DWORD PTR [rsp+0x20],eax
   140009f6a:	test   ebx,ebx
   140009f6c:	jne    0x140009f75
   140009f6e:	mov    ecx,eax
   140009f70:	call   0x140009bdc
   140009f75:	call   0x140009bf4
   140009f7a:	jmp    0x140009f96
   140009f7c:	mov    edi,eax
   140009f7e:	cmp    DWORD PTR [rsp+0xb0],0x0
   140009f86:	jne    0x140009f90
   140009f88:	mov    ecx,eax
   140009f8a:	call   0x140009be8
   140009f8f:	int3   
   140009f90:	call   0x140009c04
   140009f95:	nop
   140009f96:	mov    eax,edi
   140009f98:	mov    rbx,QWORD PTR [rsp+0xb8]
   140009fa0:	add    rsp,0xa0
   140009fa7:	pop    rdi
   140009fa8:	ret    
   140009fa9:	int3   
   140009faa:	int3   
   140009fab:	int3   
   140009fac:	sub    rsp,0x28
   140009fb0:	call   0x14000f664
   140009fb5:	add    rsp,0x28
   140009fb9:	jmp    0x140009e10
   140009fbe:	int3   
   140009fbf:	int3   
   140009fc0:	int3   
   140009fc1:	int3   
   140009fc2:	int3   
   140009fc3:	int3   
   140009fc4:	int3   
   140009fc5:	int3   
   140009fc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009fd0:	mov    rax,rcx
   140009fd3:	neg    rcx
   140009fd6:	test   rax,0x7
   140009fdc:	je     0x140009fed
   140009fde:	xchg   ax,ax
   140009fe0:	mov    dl,BYTE PTR [rax]
   140009fe2:	inc    rax
   140009fe5:	test   dl,dl
   140009fe7:	je     0x14000a048
   140009fe9:	test   al,0x7
   140009feb:	jne    0x140009fe0
   140009fed:	movabs r8,0x7efefefefefefeff
   140009ff7:	movabs r11,0x8101010101010100
   14000a001:	mov    rdx,QWORD PTR [rax]
   14000a004:	mov    r9,r8
   14000a007:	add    rax,0x8
   14000a00b:	add    r9,rdx
   14000a00e:	not    rdx
   14000a011:	xor    rdx,r9
   14000a014:	and    rdx,r11
   14000a017:	je     0x14000a001
   14000a019:	mov    rdx,QWORD PTR [rax-0x8]
   14000a01d:	test   dl,dl
   14000a01f:	je     0x14000a072
   14000a021:	test   dh,dh
   14000a023:	je     0x14000a06c
   14000a025:	shr    rdx,0x10
   14000a029:	test   dl,dl
   14000a02b:	je     0x14000a066
   14000a02d:	test   dh,dh
   14000a02f:	je     0x14000a060
   14000a031:	shr    rdx,0x10
   14000a035:	test   dl,dl
   14000a037:	je     0x14000a05a
   14000a039:	test   dh,dh
   14000a03b:	je     0x14000a054
   14000a03d:	shr    edx,0x10
   14000a040:	test   dl,dl
   14000a042:	je     0x14000a04e
   14000a044:	test   dh,dh
   14000a046:	jne    0x14000a001
   14000a048:	lea    rax,[rcx+rax*1-0x1]
   14000a04d:	ret    
   14000a04e:	lea    rax,[rcx+rax*1-0x2]
   14000a053:	ret    
   14000a054:	lea    rax,[rcx+rax*1-0x3]
   14000a059:	ret    
   14000a05a:	lea    rax,[rcx+rax*1-0x4]
   14000a05f:	ret    
   14000a060:	lea    rax,[rcx+rax*1-0x5]
   14000a065:	ret    
   14000a066:	lea    rax,[rcx+rax*1-0x6]
   14000a06b:	ret    
   14000a06c:	lea    rax,[rcx+rax*1-0x7]
   14000a071:	ret    
   14000a072:	lea    rax,[rcx+rax*1-0x8]
   14000a077:	ret    
   14000a078:	mov    rax,rsp
   14000a07b:	mov    QWORD PTR [rax+0x8],rbx
   14000a07f:	mov    QWORD PTR [rax+0x10],rbp
   14000a083:	mov    QWORD PTR [rax+0x18],rsi
   14000a087:	push   rdi
   14000a088:	sub    rsp,0x50
   14000a08c:	and    QWORD PTR [rax-0x38],0x0
   14000a091:	mov    rdi,rdx
   14000a094:	xor    edx,edx
   14000a096:	mov    rbx,r8
   14000a099:	mov    rbp,rcx
   14000a09c:	lea    r8d,[rdx+0x28]
   14000a0a0:	lea    rcx,[rax-0x30]
   14000a0a4:	mov    rsi,r9
   14000a0a7:	call   0x14000a560
   14000a0ac:	test   rdi,rdi
   14000a0af:	jne    0x14000a0c6
   14000a0b1:	call   0x14000bdf0
   14000a0b6:	mov    DWORD PTR [rax],0x16
   14000a0bc:	call   0x14000d04c
   14000a0c1:	or     eax,0xffffffff
   14000a0c4:	jmp    0x14000a109
   14000a0c6:	test   rbx,rbx
   14000a0c9:	je     0x14000a0b1
   14000a0cb:	mov    rcx,rdi
   14000a0ce:	call   0x140009fd0
   14000a0d3:	mov    r9,QWORD PTR [rsp+0x80]
   14000a0db:	mov    ecx,0x7fffffff
   14000a0e0:	cmp    rax,rcx
   14000a0e3:	mov    r8,rsi
   14000a0e6:	mov    rdx,rbx
   14000a0e9:	cmova  eax,ecx
   14000a0ec:	lea    rcx,[rsp+0x20]
   14000a0f1:	mov    DWORD PTR [rsp+0x38],0x49
   14000a0f9:	mov    QWORD PTR [rsp+0x30],rdi
   14000a0fe:	mov    QWORD PTR [rsp+0x20],rdi
   14000a103:	mov    DWORD PTR [rsp+0x28],eax
   14000a107:	call   rbp
   14000a109:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a10e:	mov    rbp,QWORD PTR [rsp+0x68]
   14000a113:	mov    rsi,QWORD PTR [rsp+0x70]
   14000a118:	add    rsp,0x50
   14000a11c:	pop    rdi
   14000a11d:	ret    
   14000a11e:	int3   
   14000a11f:	int3   
   14000a120:	mov    r11,rsp
   14000a123:	mov    QWORD PTR [r11+0x10],rdx
   14000a127:	mov    QWORD PTR [r11+0x18],r8
   14000a12b:	mov    QWORD PTR [r11+0x20],r9
   14000a12f:	sub    rsp,0x38
   14000a133:	mov    r8,rdx
   14000a136:	lea    rax,[r11+0x18]
   14000a13a:	mov    rdx,rcx
   14000a13d:	lea    rcx,[rip+0x5694]        # 0x14000f7d8
   14000a144:	xor    r9d,r9d
   14000a147:	mov    QWORD PTR [r11-0x18],rax
   14000a14b:	call   0x14000a078
   14000a150:	add    rsp,0x38
   14000a154:	ret    
   14000a155:	int3   
   14000a156:	int3   
   14000a157:	int3   
   14000a158:	int3   
   14000a159:	int3   
   14000a15a:	int3   
   14000a15b:	int3   
   14000a15c:	int3   
   14000a15d:	int3   
   14000a15e:	int3   
   14000a15f:	int3   
   14000a160:	int3   
   14000a161:	int3   
   14000a162:	int3   
   14000a163:	int3   
   14000a164:	int3   
   14000a165:	int3   
   14000a166:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a170:	mov    r11,rcx
   14000a173:	sub    rdx,rcx
   14000a176:	jb     0x14000a31a
   14000a17c:	cmp    r8,0x8
   14000a180:	jb     0x14000a1e3
   14000a182:	test   cl,0x7
   14000a185:	je     0x14000a1bd
   14000a187:	test   cl,0x1
   14000a18a:	je     0x14000a197
   14000a18c:	mov    al,BYTE PTR [rdx+rcx*1]
   14000a18f:	dec    r8
   14000a192:	mov    BYTE PTR [rcx],al
   14000a194:	inc    rcx
   14000a197:	test   cl,0x2
   14000a19a:	je     0x14000a1ab
   14000a19c:	mov    ax,WORD PTR [rdx+rcx*1]
   14000a1a0:	sub    r8,0x2
   14000a1a4:	mov    WORD PTR [rcx],ax
   14000a1a7:	add    rcx,0x2
   14000a1ab:	test   cl,0x4
   14000a1ae:	je     0x14000a1bd
   14000a1b0:	mov    eax,DWORD PTR [rdx+rcx*1]
   14000a1b3:	sub    r8,0x4
   14000a1b7:	mov    DWORD PTR [rcx],eax
   14000a1b9:	add    rcx,0x4
   14000a1bd:	mov    r9,r8
   14000a1c0:	shr    r9,0x5
   14000a1c4:	jne    0x14000a217
   14000a1c6:	mov    r9,r8
   14000a1c9:	shr    r9,0x3
   14000a1cd:	je     0x14000a1e3
   14000a1cf:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000a1d3:	mov    QWORD PTR [rcx],rax
   14000a1d6:	add    rcx,0x8
   14000a1da:	dec    r9
   14000a1dd:	jne    0x14000a1cf
   14000a1df:	and    r8,0x7
   14000a1e3:	test   r8,r8
   14000a1e6:	jne    0x14000a1f0
   14000a1e8:	mov    rax,r11
   14000a1eb:	ret    
   14000a1ec:	nop    DWORD PTR [rax+0x0]
   14000a1f0:	mov    al,BYTE PTR [rdx+rcx*1]
   14000a1f3:	mov    BYTE PTR [rcx],al
   14000a1f5:	inc    rcx
   14000a1f8:	dec    r8
   14000a1fb:	jne    0x14000a1f0
   14000a1fd:	mov    rax,r11
   14000a200:	ret    
   14000a201:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a210:	data16 data16 xchg ax,ax
   14000a214:	data16 xchg ax,ax
   14000a217:	cmp    r9,0x2000
   14000a21e:	jae    0x14000a262
   14000a220:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000a224:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   14000a229:	add    rcx,0x20
   14000a22d:	mov    QWORD PTR [rcx-0x20],rax
   14000a231:	mov    QWORD PTR [rcx-0x18],r10
   14000a235:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14000a23a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14000a23f:	dec    r9
   14000a242:	mov    QWORD PTR [rcx-0x10],rax
   14000a246:	mov    QWORD PTR [rcx-0x8],r10
   14000a24a:	jne    0x14000a220
   14000a24c:	and    r8,0x1f
   14000a250:	jmp    0x14000a1c6
   14000a255:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a260:	xchg   ax,ax
   14000a262:	cmp    rdx,0x1000
   14000a269:	jb     0x14000a220
   14000a26b:	mov    eax,0x20
   14000a270:	prefetchnta BYTE PTR [rdx+rcx*1]
   14000a274:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14000a279:	add    rcx,0x80
   14000a280:	dec    eax
   14000a282:	jne    0x14000a270
   14000a284:	sub    rcx,0x1000
   14000a28b:	mov    eax,0x40
   14000a290:	mov    r9,QWORD PTR [rdx+rcx*1]
   14000a294:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   14000a299:	movnti QWORD PTR [rcx],r9
   14000a29d:	movnti QWORD PTR [rcx+0x8],r10
   14000a2a2:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   14000a2a7:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   14000a2ac:	movnti QWORD PTR [rcx+0x10],r9
   14000a2b1:	movnti QWORD PTR [rcx+0x18],r10
   14000a2b6:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   14000a2bb:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   14000a2c0:	add    rcx,0x40
   14000a2c4:	movnti QWORD PTR [rcx-0x20],r9
   14000a2c9:	movnti QWORD PTR [rcx-0x18],r10
   14000a2ce:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   14000a2d3:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14000a2d8:	dec    eax
   14000a2da:	movnti QWORD PTR [rcx-0x10],r9
   14000a2df:	movnti QWORD PTR [rcx-0x8],r10
   14000a2e4:	jne    0x14000a290
   14000a2e6:	sub    r8,0x1000
   14000a2ed:	cmp    r8,0x1000
   14000a2f4:	jae    0x14000a26b
   14000a2fa:	lock or BYTE PTR [rsp],0x0
   14000a2ff:	jmp    0x14000a1bd
   14000a304:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a310:	data16 data16 xchg ax,ax
   14000a314:	data16 data16 xchg ax,ax
   14000a318:	xchg   ax,ax
   14000a31a:	add    rcx,r8
   14000a31d:	cmp    r8,0x8
   14000a321:	jb     0x14000a384
   14000a323:	test   cl,0x7
   14000a326:	je     0x14000a35e
   14000a328:	test   cl,0x1
   14000a32b:	je     0x14000a338
   14000a32d:	dec    rcx
   14000a330:	mov    al,BYTE PTR [rdx+rcx*1]
   14000a333:	dec    r8
   14000a336:	mov    BYTE PTR [rcx],al
   14000a338:	test   cl,0x2
   14000a33b:	je     0x14000a34c
   14000a33d:	sub    rcx,0x2
   14000a341:	mov    ax,WORD PTR [rdx+rcx*1]
   14000a345:	sub    r8,0x2
   14000a349:	mov    WORD PTR [rcx],ax
   14000a34c:	test   cl,0x4
   14000a34f:	je     0x14000a35e
   14000a351:	sub    rcx,0x4
   14000a355:	mov    eax,DWORD PTR [rdx+rcx*1]
   14000a358:	sub    r8,0x4
   14000a35c:	mov    DWORD PTR [rcx],eax
   14000a35e:	mov    r9,r8
   14000a361:	shr    r9,0x5
   14000a365:	jne    0x14000a3b7
   14000a367:	mov    r9,r8
   14000a36a:	shr    r9,0x3
   14000a36e:	je     0x14000a384
   14000a370:	sub    rcx,0x8
   14000a374:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000a378:	dec    r9
   14000a37b:	mov    QWORD PTR [rcx],rax
   14000a37e:	jne    0x14000a370
   14000a380:	and    r8,0x7
   14000a384:	test   r8,r8
   14000a387:	jne    0x14000a390
   14000a389:	mov    rax,r11
   14000a38c:	ret    
   14000a38d:	nop    DWORD PTR [rax]
   14000a390:	dec    rcx
   14000a393:	mov    al,BYTE PTR [rdx+rcx*1]
   14000a396:	dec    r8
   14000a399:	mov    BYTE PTR [rcx],al
   14000a39b:	jne    0x14000a390
   14000a39d:	mov    rax,r11
   14000a3a0:	ret    
   14000a3a1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a3b0:	data16 data16 xchg ax,ax
   14000a3b4:	data16 xchg ax,ax
   14000a3b7:	cmp    r9,0x2000
   14000a3be:	jae    0x14000a402
   14000a3c0:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   14000a3c5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14000a3ca:	sub    rcx,0x20
   14000a3ce:	mov    QWORD PTR [rcx+0x18],rax
   14000a3d2:	mov    QWORD PTR [rcx+0x10],r10
   14000a3d6:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000a3db:	mov    r10,QWORD PTR [rdx+rcx*1]
   14000a3df:	dec    r9
   14000a3e2:	mov    QWORD PTR [rcx+0x8],rax
   14000a3e6:	mov    QWORD PTR [rcx],r10
   14000a3e9:	jne    0x14000a3c0
   14000a3eb:	and    r8,0x1f
   14000a3ef:	jmp    0x14000a367
   14000a3f4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a400:	xchg   ax,ax
   14000a402:	cmp    rdx,0xfffffffffffff000
   14000a409:	ja     0x14000a3c0
   14000a40b:	mov    eax,0x20
   14000a410:	sub    rcx,0x80
   14000a417:	prefetchnta BYTE PTR [rdx+rcx*1]
   14000a41b:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14000a420:	dec    eax
   14000a422:	jne    0x14000a410
   14000a424:	add    rcx,0x1000
   14000a42b:	mov    eax,0x40
   14000a430:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   14000a435:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14000a43a:	movnti QWORD PTR [rcx-0x8],r9
   14000a43f:	movnti QWORD PTR [rcx-0x10],r10
   14000a444:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   14000a449:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   14000a44e:	movnti QWORD PTR [rcx-0x18],r9
   14000a453:	movnti QWORD PTR [rcx-0x20],r10
   14000a458:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   14000a45d:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   14000a462:	sub    rcx,0x40
   14000a466:	movnti QWORD PTR [rcx+0x18],r9
   14000a46b:	movnti QWORD PTR [rcx+0x10],r10
   14000a470:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   14000a475:	mov    r10,QWORD PTR [rdx+rcx*1]
   14000a479:	dec    eax
   14000a47b:	movnti QWORD PTR [rcx+0x8],r9
   14000a480:	movnti QWORD PTR [rcx],r10
   14000a484:	jne    0x14000a430
   14000a486:	sub    r8,0x1000
   14000a48d:	cmp    r8,0x1000
   14000a494:	jae    0x14000a40b
   14000a49a:	lock or BYTE PTR [rsp],0x0
   14000a49f:	jmp    0x14000a35e
   14000a4a4:	mov    QWORD PTR [rsp+0x10],rdx
   14000a4a9:	mov    QWORD PTR [rsp+0x18],r8
   14000a4ae:	mov    QWORD PTR [rsp+0x20],r9
   14000a4b3:	push   rbp
   14000a4b4:	push   rbx
   14000a4b5:	push   rdi
   14000a4b6:	mov    rbp,rsp
   14000a4b9:	sub    rsp,0x50
   14000a4bd:	and    QWORD PTR [rbp-0x30],0x0
   14000a4c2:	mov    rdi,rdx
   14000a4c5:	xor    edx,edx
   14000a4c7:	mov    rbx,rcx
   14000a4ca:	lea    rcx,[rbp-0x28]
   14000a4ce:	lea    r8d,[rdx+0x28]
   14000a4d2:	call   0x14000a560
   14000a4d7:	test   rdi,rdi
   14000a4da:	jne    0x14000a4f1
   14000a4dc:	call   0x14000bdf0
   14000a4e1:	mov    DWORD PTR [rax],0x16
   14000a4e7:	call   0x14000d04c
   14000a4ec:	or     eax,0xffffffff
   14000a4ef:	jmp    0x14000a53c
   14000a4f1:	test   rbx,rbx
   14000a4f4:	je     0x14000a4dc
   14000a4f6:	lea    r9,[rbp+0x30]
   14000a4fa:	lea    rcx,[rbp-0x30]
   14000a4fe:	xor    r8d,r8d
   14000a501:	mov    rdx,rdi
   14000a504:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   14000a50b:	mov    DWORD PTR [rbp-0x18],0x42
   14000a512:	mov    QWORD PTR [rbp-0x20],rbx
   14000a516:	mov    QWORD PTR [rbp-0x30],rbx
   14000a51a:	call   0x14000de34
   14000a51f:	dec    DWORD PTR [rbp-0x28]
   14000a522:	mov    ebx,eax
   14000a524:	js     0x14000a52f
   14000a526:	mov    rcx,QWORD PTR [rbp-0x30]
   14000a52a:	mov    BYTE PTR [rcx],0x0
   14000a52d:	jmp    0x14000a53a
   14000a52f:	lea    rdx,[rbp-0x30]
   14000a533:	xor    ecx,ecx
   14000a535:	call   0x14001084c
   14000a53a:	mov    eax,ebx
   14000a53c:	add    rsp,0x50
   14000a540:	pop    rdi
   14000a541:	pop    rbx
   14000a542:	pop    rbp
   14000a543:	ret    
   14000a544:	int3   
   14000a545:	int3   
   14000a546:	int3   
   14000a547:	int3   
   14000a548:	int3   
   14000a549:	int3   
   14000a54a:	int3   
   14000a54b:	int3   
   14000a54c:	int3   
   14000a54d:	int3   
   14000a54e:	int3   
   14000a54f:	int3   
   14000a550:	int3   
   14000a551:	int3   
   14000a552:	int3   
   14000a553:	int3   
   14000a554:	int3   
   14000a555:	int3   
   14000a556:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a560:	mov    rax,rcx
   14000a563:	cmp    r8,0x8
   14000a567:	jb     0x14000a5bc
   14000a569:	movzx  edx,dl
   14000a56c:	movabs r9,0x101010101010101
   14000a576:	imul   rdx,r9
   14000a57a:	cmp    r8,0x40
   14000a57e:	jb     0x14000a59e
   14000a580:	neg    rcx
   14000a583:	and    ecx,0x7
   14000a586:	je     0x14000a58e
   14000a588:	sub    r8,rcx
   14000a58b:	mov    QWORD PTR [rax],rdx
   14000a58e:	add    rcx,rax
   14000a591:	mov    r9,r8
   14000a594:	and    r8,0x3f
   14000a598:	shr    r9,0x6
   14000a59c:	jne    0x14000a5d7
   14000a59e:	mov    r9,r8
   14000a5a1:	and    r8,0x7
   14000a5a5:	shr    r9,0x3
   14000a5a9:	je     0x14000a5bc
   14000a5ab:	data16 data16 xchg ax,ax
   14000a5af:	nop
   14000a5b0:	mov    QWORD PTR [rcx],rdx
   14000a5b3:	add    rcx,0x8
   14000a5b7:	dec    r9
   14000a5ba:	jne    0x14000a5b0
   14000a5bc:	test   r8,r8
   14000a5bf:	je     0x14000a5cb
   14000a5c1:	mov    BYTE PTR [rcx],dl
   14000a5c3:	inc    rcx
   14000a5c6:	dec    r8
   14000a5c9:	jne    0x14000a5c1
   14000a5cb:	ret    
   14000a5cc:	nop    DWORD PTR [rax+0x0]
   14000a5d0:	data16 data16 xchg ax,ax
   14000a5d4:	data16 xchg ax,ax
   14000a5d7:	cmp    r9,0x1c00
   14000a5de:	jae    0x14000a610
   14000a5e0:	mov    QWORD PTR [rcx],rdx
   14000a5e3:	mov    QWORD PTR [rcx+0x8],rdx
   14000a5e7:	mov    QWORD PTR [rcx+0x10],rdx
   14000a5eb:	add    rcx,0x40
   14000a5ef:	mov    QWORD PTR [rcx-0x28],rdx
   14000a5f3:	mov    QWORD PTR [rcx-0x20],rdx
   14000a5f7:	dec    r9
   14000a5fa:	mov    QWORD PTR [rcx-0x18],rdx
   14000a5fe:	mov    QWORD PTR [rcx-0x10],rdx
   14000a602:	mov    QWORD PTR [rcx-0x8],rdx
   14000a606:	jne    0x14000a5e0
   14000a608:	jmp    0x14000a59e
   14000a60a:	nop    WORD PTR [rax+rax*1+0x0]
   14000a610:	movnti QWORD PTR [rcx],rdx
   14000a614:	movnti QWORD PTR [rcx+0x8],rdx
   14000a619:	movnti QWORD PTR [rcx+0x10],rdx
   14000a61e:	add    rcx,0x40
   14000a622:	movnti QWORD PTR [rcx-0x28],rdx
   14000a627:	movnti QWORD PTR [rcx-0x20],rdx
   14000a62c:	dec    r9
   14000a62f:	movnti QWORD PTR [rcx-0x18],rdx
   14000a634:	movnti QWORD PTR [rcx-0x10],rdx
   14000a639:	movnti QWORD PTR [rcx-0x8],rdx
   14000a63e:	jne    0x14000a610
   14000a640:	lock or BYTE PTR [rsp],0x0
   14000a645:	jmp    0x14000a59e
   14000a64a:	int3   
   14000a64b:	int3   
   14000a64c:	rex push rbx
   14000a64e:	sub    rsp,0x20
   14000a652:	mov    r11d,DWORD PTR [r8]
   14000a655:	mov    rbx,rdx
   14000a658:	mov    r9,rcx
   14000a65b:	and    r11d,0xfffffff8
   14000a65f:	test   BYTE PTR [r8],0x4
   14000a663:	mov    r10,rcx
   14000a666:	je     0x14000a67b
   14000a668:	mov    eax,DWORD PTR [r8+0x8]
   14000a66c:	movsxd r10,DWORD PTR [r8+0x4]
   14000a670:	neg    eax
   14000a672:	add    r10,rcx
   14000a675:	movsxd rcx,eax
   14000a678:	and    r10,rcx
   14000a67b:	movsxd rax,r11d
   14000a67e:	mov    rdx,QWORD PTR [rax+r10*1]
   14000a682:	mov    rax,QWORD PTR [rbx+0x10]
   14000a686:	mov    ecx,DWORD PTR [rax+0x8]
   14000a689:	add    rcx,QWORD PTR [rbx+0x8]
   14000a68d:	test   BYTE PTR [rcx+0x3],0xf
   14000a691:	je     0x14000a69f
   14000a693:	movzx  eax,BYTE PTR [rcx+0x3]
   14000a697:	and    eax,0xfffffff0
   14000a69a:	cdqe   
   14000a69c:	add    r9,rax
   14000a69f:	xor    r9,rdx
   14000a6a2:	mov    rcx,r9
   14000a6a5:	add    rsp,0x20
   14000a6a9:	pop    rbx
   14000a6aa:	jmp    0x14000a850
   14000a6af:	int3   
   14000a6b0:	sub    rsp,0x28
   14000a6b4:	mov    r8,QWORD PTR [r9+0x38]
   14000a6b8:	mov    rcx,rdx
   14000a6bb:	mov    rdx,r9
   14000a6be:	call   0x14000a64c
   14000a6c3:	mov    eax,0x1
   14000a6c8:	add    rsp,0x28
   14000a6cc:	ret    
   14000a6cd:	int3   
   14000a6ce:	int3   
   14000a6cf:	int3   
   14000a6d0:	int3   
   14000a6d1:	int3   
   14000a6d2:	int3   
   14000a6d3:	int3   
   14000a6d4:	int3   
   14000a6d5:	int3   
   14000a6d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a6e0:	mov    r11,rcx
   14000a6e3:	test   cl,0x7
   14000a6e6:	je     0x14000a6fa
   14000a6e8:	mov    al,BYTE PTR [rcx]
   14000a6ea:	test   al,al
   14000a6ec:	je     0x14000a783
   14000a6f2:	inc    rcx
   14000a6f5:	test   cl,0x7
   14000a6f8:	jne    0x14000a6e8
   14000a6fa:	mov    rax,QWORD PTR [rcx]
   14000a6fd:	mov    r10,rax
   14000a700:	movabs r9,0x7efefefefefefeff
   14000a70a:	add    r9,r10
   14000a70d:	xor    r10,0xffffffffffffffff
   14000a711:	xor    r10,r9
   14000a714:	add    rcx,0x8
   14000a718:	movabs r9,0x8101010101010100
   14000a722:	test   r9,r10
   14000a725:	je     0x14000a6fa
   14000a727:	sub    rcx,0x8
   14000a72b:	test   al,al
   14000a72d:	je     0x14000a783
   14000a72f:	inc    rcx
   14000a732:	test   ah,ah
   14000a734:	je     0x14000a783
   14000a736:	inc    rcx
   14000a739:	shr    rax,0x10
   14000a73d:	test   al,al
   14000a73f:	je     0x14000a783
   14000a741:	inc    rcx
   14000a744:	test   ah,ah
   14000a746:	je     0x14000a783
   14000a748:	inc    rcx
   14000a74b:	shr    rax,0x10
   14000a74f:	test   al,al
   14000a751:	je     0x14000a783
   14000a753:	inc    rcx
   14000a756:	test   ah,ah
   14000a758:	je     0x14000a783
   14000a75a:	inc    rcx
   14000a75d:	shr    eax,0x10
   14000a760:	test   al,al
   14000a762:	je     0x14000a783
   14000a764:	inc    rcx
   14000a767:	test   ah,ah
   14000a769:	je     0x14000a783
   14000a76b:	inc    rcx
   14000a76e:	jmp    0x14000a6fa
   14000a770:	int3   
   14000a771:	int3   
   14000a772:	int3   
   14000a773:	int3   
   14000a774:	int3   
   14000a775:	int3   
   14000a776:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a780:	mov    r11,rcx
   14000a783:	sub    rcx,rdx
   14000a786:	test   dl,0x7
   14000a789:	je     0x14000a7aa
   14000a78b:	mov    al,BYTE PTR [rdx]
   14000a78d:	mov    BYTE PTR [rcx+rdx*1],al
   14000a790:	test   al,al
   14000a792:	je     0x14000a79e
   14000a794:	inc    rdx
   14000a797:	test   dl,0x7
   14000a79a:	jne    0x14000a78b
   14000a79c:	jmp    0x14000a7aa
   14000a79e:	mov    rax,r11
   14000a7a1:	ret    
   14000a7a2:	mov    QWORD PTR [rcx+rdx*1],rax
   14000a7a6:	add    rdx,0x8
   14000a7aa:	mov    rax,QWORD PTR [rdx]
   14000a7ad:	movabs r9,0x7efefefefefefeff
   14000a7b7:	add    r9,rax
   14000a7ba:	mov    r10,rax
   14000a7bd:	xor    r10,0xffffffffffffffff
   14000a7c1:	xor    r10,r9
   14000a7c4:	movabs r9,0x8101010101010100
   14000a7ce:	test   r9,r10
   14000a7d1:	je     0x14000a7a2
   14000a7d3:	test   al,al
   14000a7d5:	mov    BYTE PTR [rcx+rdx*1],al
   14000a7d8:	je     0x14000a833
   14000a7da:	inc    rdx
   14000a7dd:	test   ah,ah
   14000a7df:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a7e2:	je     0x14000a833
   14000a7e4:	inc    rdx
   14000a7e7:	shr    rax,0x10
   14000a7eb:	test   al,al
   14000a7ed:	mov    BYTE PTR [rcx+rdx*1],al
   14000a7f0:	je     0x14000a833
   14000a7f2:	inc    rdx
   14000a7f5:	test   ah,ah
   14000a7f7:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a7fa:	je     0x14000a833
   14000a7fc:	inc    rdx
   14000a7ff:	shr    rax,0x10
   14000a803:	test   al,al
   14000a805:	mov    BYTE PTR [rcx+rdx*1],al
   14000a808:	je     0x14000a833
   14000a80a:	inc    rdx
   14000a80d:	test   ah,ah
   14000a80f:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a812:	je     0x14000a833
   14000a814:	inc    rdx
   14000a817:	shr    eax,0x10
   14000a81a:	test   al,al
   14000a81c:	mov    BYTE PTR [rcx+rdx*1],al
   14000a81f:	je     0x14000a833
   14000a821:	inc    rdx
   14000a824:	test   ah,ah
   14000a826:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a829:	je     0x14000a833
   14000a82b:	inc    rdx
   14000a82e:	jmp    0x14000a7aa
   14000a833:	mov    rax,r11
   14000a836:	ret    
   14000a837:	int3   
   14000a838:	int3   
   14000a839:	int3   
   14000a83a:	int3   
   14000a83b:	int3   
   14000a83c:	int3   
   14000a83d:	int3   
   14000a83e:	int3   
   14000a83f:	int3   
   14000a840:	int3   
   14000a841:	int3   
   14000a842:	int3   
   14000a843:	int3   
   14000a844:	int3   
   14000a845:	int3   
   14000a846:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a850:	cmp    rcx,QWORD PTR [rip+0x18869]        # 0x1400230c0
   14000a857:	jne    0x14000a86a
   14000a859:	rol    rcx,0x10
   14000a85d:	test   cx,0xffff
   14000a862:	jne    0x14000a866
   14000a864:	repz ret 
   14000a866:	ror    rcx,0x10
   14000a86a:	jmp    0x1400109dc
   14000a86f:	int3   
   14000a870:	int3   
   14000a871:	int3   
   14000a872:	int3   
   14000a873:	int3   
   14000a874:	int3   
   14000a875:	int3   
   14000a876:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a880:	sub    rdx,rcx
   14000a883:	mov    r9,rdx
   14000a886:	test   cl,0x7
   14000a889:	je     0x14000a8a6
   14000a88b:	mov    al,BYTE PTR [rcx]
   14000a88d:	mov    dl,BYTE PTR [rcx+r9*1]
   14000a891:	cmp    al,dl
   14000a893:	jne    0x14000a8eb
   14000a895:	inc    rcx
   14000a898:	test   al,al
   14000a89a:	je     0x14000a8f3
   14000a89c:	test   rcx,0x7
   14000a8a3:	jne    0x14000a88b
   14000a8a5:	nop
   14000a8a6:	movabs r11,0x8101010101010100
   14000a8b0:	lea    rdx,[rcx+r9*1]
   14000a8b4:	and    dx,0xfff
   14000a8b9:	cmp    dx,0xff8
   14000a8be:	ja     0x14000a88b
   14000a8c0:	mov    rax,QWORD PTR [rcx]
   14000a8c3:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000a8c7:	cmp    rax,rdx
   14000a8ca:	jne    0x14000a88b
   14000a8cc:	movabs r10,0x7efefefefefefeff
   14000a8d6:	add    r10,rdx
   14000a8d9:	xor    rax,0xffffffffffffffff
   14000a8dd:	add    rcx,0x8
   14000a8e1:	xor    rax,r10
   14000a8e4:	test   r11,rax
   14000a8e7:	je     0x14000a8b0
   14000a8e9:	jmp    0x14000a8fa
   14000a8eb:	sbb    rax,rax
   14000a8ee:	sbb    rax,0xffffffffffffffff
   14000a8f2:	ret    
   14000a8f3:	xor    eax,eax
   14000a8f5:	ret    
   14000a8f6:	data16 data16 xchg ax,ax
   14000a8fa:	test   dl,dl
   14000a8fc:	je     0x14000a925
   14000a8fe:	test   dh,dh
   14000a900:	je     0x14000a925
   14000a902:	shr    rdx,0x10
   14000a906:	test   dl,dl
   14000a908:	je     0x14000a925
   14000a90a:	test   dh,dh
   14000a90c:	je     0x14000a925
   14000a90e:	shr    rdx,0x10
   14000a912:	test   dl,dl
   14000a914:	je     0x14000a925
   14000a916:	test   dh,dh
   14000a918:	je     0x14000a925
   14000a91a:	shr    edx,0x10
   14000a91d:	test   dl,dl
   14000a91f:	je     0x14000a925
   14000a921:	test   dh,dh
   14000a923:	jne    0x14000a8b0
   14000a925:	xor    eax,eax
   14000a927:	ret    
   14000a928:	sbb    rax,rax
   14000a92b:	sbb    rax,0xffffffffffffffff
   14000a92f:	ret    
   14000a930:	mov    rax,rsp
   14000a933:	mov    QWORD PTR [rax+0x10],rdx
   14000a937:	mov    QWORD PTR [rax+0x8],rcx
   14000a93b:	mov    QWORD PTR [rax+0x18],r8
   14000a93f:	mov    QWORD PTR [rax+0x20],r9
   14000a943:	push   rbx
   14000a944:	push   rsi
   14000a945:	push   rdi
   14000a946:	push   r12
   14000a948:	sub    rsp,0x28
   14000a94c:	mov    rdi,rcx
   14000a94f:	xor    esi,esi
   14000a951:	xor    eax,eax
   14000a953:	test   rcx,rcx
   14000a956:	setne  al
   14000a959:	test   eax,eax
   14000a95b:	jne    0x14000a975
   14000a95d:	call   0x14000bdf0
   14000a962:	mov    DWORD PTR [rax],0x16
   14000a968:	call   0x14000d04c
   14000a96d:	or     eax,0xffffffff
   14000a970:	jmp    0x14000aa54
   14000a975:	xor    eax,eax
   14000a977:	test   rdx,rdx
   14000a97a:	setne  al
   14000a97d:	test   eax,eax
   14000a97f:	je     0x14000a95d
   14000a981:	lea    r12,[rsp+0x60]
   14000a986:	call   0x14000acd8
   14000a98b:	nop
   14000a98c:	test   BYTE PTR [rdi+0x18],0x40
   14000a990:	jne    0x14000aa1c
   14000a996:	mov    rcx,rdi
   14000a999:	call   0x140010b28
   14000a99e:	cmp    eax,0xffffffff
   14000a9a1:	je     0x14000a9cd
   14000a9a3:	cmp    eax,0xfffffffe
   14000a9a6:	je     0x14000a9cd
   14000a9a8:	movsxd rdx,eax
   14000a9ab:	mov    rcx,rdx
   14000a9ae:	sar    rcx,0x5
   14000a9b2:	lea    r8,[rip+0x1b0c7]        # 0x140025a80
   14000a9b9:	and    edx,0x1f
   14000a9bc:	imul   rdx,rdx,0x58
   14000a9c0:	add    rdx,QWORD PTR [r8+rcx*8]
   14000a9c4:	lea    rcx,[rip+0x18ee5]        # 0x1400238b0
   14000a9cb:	jmp    0x14000a9de
   14000a9cd:	lea    rcx,[rip+0x18edc]        # 0x1400238b0
   14000a9d4:	mov    rdx,rcx
   14000a9d7:	lea    r8,[rip+0x1b0a2]        # 0x140025a80
   14000a9de:	test   BYTE PTR [rdx+0x38],0x7f
   14000a9e2:	jne    0x14000aa09
   14000a9e4:	cmp    eax,0xffffffff
   14000a9e7:	je     0x14000aa03
   14000a9e9:	cmp    eax,0xfffffffe
   14000a9ec:	je     0x14000aa03
   14000a9ee:	movsxd rcx,eax
   14000a9f1:	mov    rax,rcx
   14000a9f4:	sar    rax,0x5
   14000a9f8:	and    ecx,0x1f
   14000a9fb:	imul   rcx,rcx,0x58
   14000a9ff:	add    rcx,QWORD PTR [r8+rax*8]
   14000aa03:	test   BYTE PTR [rcx+0x38],0x80
   14000aa07:	je     0x14000aa1c
   14000aa09:	call   0x14000bdf0
   14000aa0e:	mov    DWORD PTR [rax],0x16
   14000aa14:	call   0x14000d04c
   14000aa19:	or     esi,0xffffffff
   14000aa1c:	test   esi,esi
   14000aa1e:	jne    0x14000aa4a
   14000aa20:	mov    rcx,rdi
   14000aa23:	call   0x14000dbf4
   14000aa28:	mov    ebx,eax
   14000aa2a:	mov    r9,r12
   14000aa2d:	xor    r8d,r8d
   14000aa30:	mov    rdx,QWORD PTR [rsp+0x58]
   14000aa35:	mov    rcx,rdi
   14000aa38:	call   0x14000de34
   14000aa3d:	mov    esi,eax
   14000aa3f:	mov    rdx,rdi
   14000aa42:	mov    ecx,ebx
   14000aa44:	call   0x14000dcc8
   14000aa49:	nop
   14000aa4a:	mov    rcx,rdi
   14000aa4d:	call   0x14000ad70
   14000aa52:	mov    eax,esi
   14000aa54:	add    rsp,0x28
   14000aa58:	pop    r12
   14000aa5a:	pop    rdi
   14000aa5b:	pop    rsi
   14000aa5c:	pop    rbx
   14000aa5d:	ret    
   14000aa5e:	int3   
   14000aa5f:	int3   
   14000aa60:	mov    rax,rsp
   14000aa63:	mov    QWORD PTR [rax+0x8],rbx
   14000aa67:	mov    QWORD PTR [rax+0x18],rsi
   14000aa6b:	mov    QWORD PTR [rax+0x20],rdi
   14000aa6f:	mov    QWORD PTR [rax+0x10],rdx
   14000aa73:	push   r12
   14000aa75:	push   r13
   14000aa77:	push   r14
   14000aa79:	sub    rsp,0x20
   14000aa7d:	mov    r13,r9
   14000aa80:	mov    r12,r8
   14000aa83:	mov    rdi,rdx
   14000aa86:	mov    r14,rcx
   14000aa89:	xor    esi,esi
   14000aa8b:	xor    eax,eax
   14000aa8d:	test   rdx,rdx
   14000aa90:	setne  al
   14000aa93:	test   eax,eax
   14000aa95:	jne    0x14000aaaf
   14000aa97:	call   0x14000bdf0
   14000aa9c:	mov    DWORD PTR [rax],0x16
   14000aaa2:	call   0x14000d04c
   14000aaa7:	or     eax,0xffffffff
   14000aaaa:	jmp    0x14000ab8a
   14000aaaf:	xor    eax,eax
   14000aab1:	test   r8,r8
   14000aab4:	setne  al
   14000aab7:	test   eax,eax
   14000aab9:	je     0x14000aa97
   14000aabb:	mov    rcx,rdx
   14000aabe:	call   0x14000acd8
   14000aac3:	nop
   14000aac4:	test   BYTE PTR [rdi+0x18],0x40
   14000aac8:	jne    0x14000ab54
   14000aace:	mov    rcx,rdi
   14000aad1:	call   0x140010b28
   14000aad6:	cmp    eax,0xffffffff
   14000aad9:	je     0x14000ab05
   14000aadb:	cmp    eax,0xfffffffe
   14000aade:	je     0x14000ab05
   14000aae0:	movsxd rdx,eax
   14000aae3:	mov    rcx,rdx
   14000aae6:	sar    rcx,0x5
   14000aaea:	lea    r8,[rip+0x1af8f]        # 0x140025a80
   14000aaf1:	and    edx,0x1f
   14000aaf4:	imul   rdx,rdx,0x58
   14000aaf8:	add    rdx,QWORD PTR [r8+rcx*8]
   14000aafc:	lea    rcx,[rip+0x18dad]        # 0x1400238b0
   14000ab03:	jmp    0x14000ab16
   14000ab05:	lea    rcx,[rip+0x18da4]        # 0x1400238b0
   14000ab0c:	mov    rdx,rcx
   14000ab0f:	lea    r8,[rip+0x1af6a]        # 0x140025a80
   14000ab16:	test   BYTE PTR [rdx+0x38],0x7f
   14000ab1a:	jne    0x14000ab41
   14000ab1c:	cmp    eax,0xffffffff
   14000ab1f:	je     0x14000ab3b
   14000ab21:	cmp    eax,0xfffffffe
   14000ab24:	je     0x14000ab3b
   14000ab26:	movsxd rcx,eax
   14000ab29:	mov    rax,rcx
   14000ab2c:	sar    rax,0x5
   14000ab30:	and    ecx,0x1f
   14000ab33:	imul   rcx,rcx,0x58
   14000ab37:	add    rcx,QWORD PTR [r8+rax*8]
   14000ab3b:	test   BYTE PTR [rcx+0x38],0x80
   14000ab3f:	je     0x14000ab54
   14000ab41:	call   0x14000bdf0
   14000ab46:	mov    DWORD PTR [rax],0x16
   14000ab4c:	call   0x14000d04c
   14000ab51:	or     esi,0xffffffff
   14000ab54:	test   esi,esi
   14000ab56:	jne    0x14000ab80
   14000ab58:	mov    rcx,rdi
   14000ab5b:	call   0x14000dbf4
   14000ab60:	mov    ebx,eax
   14000ab62:	mov    r9,QWORD PTR [rsp+0x60]
   14000ab67:	mov    r8,r13
   14000ab6a:	mov    rdx,r12
   14000ab6d:	mov    rcx,rdi
   14000ab70:	call   r14
   14000ab73:	mov    esi,eax
   14000ab75:	mov    rdx,rdi
   14000ab78:	mov    ecx,ebx
   14000ab7a:	call   0x14000dcc8
   14000ab7f:	nop
   14000ab80:	mov    rcx,rdi
   14000ab83:	call   0x14000ad70
   14000ab88:	mov    eax,esi
   14000ab8a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ab8f:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ab94:	mov    rdi,QWORD PTR [rsp+0x58]
   14000ab99:	add    rsp,0x20
   14000ab9d:	pop    r14
   14000ab9f:	pop    r13
   14000aba1:	pop    r12
   14000aba3:	ret    
   14000aba4:	sub    rsp,0x38
   14000aba8:	mov    QWORD PTR [rsp+0x20],r8
   14000abad:	mov    r8,rdx
   14000abb0:	mov    rdx,rcx
   14000abb3:	lea    rcx,[rip+0x327a]        # 0x14000de34
   14000abba:	xor    r9d,r9d
   14000abbd:	call   0x14000aa60
   14000abc2:	add    rsp,0x38
   14000abc6:	ret    
   14000abc7:	int3   
   14000abc8:	lea    rax,[rip+0x18501]        # 0x1400230d0
   14000abcf:	ret    
   14000abd0:	rex push rbx
   14000abd2:	sub    rsp,0x20
   14000abd6:	mov    eax,DWORD PTR [rip+0x1c0c4]        # 0x140026ca0
   14000abdc:	mov    ebx,0x14
   14000abe1:	test   eax,eax
   14000abe3:	jne    0x14000abec
   14000abe5:	mov    eax,0x200
   14000abea:	jmp    0x14000abf1
   14000abec:	cmp    eax,ebx
   14000abee:	cmovl  eax,ebx
   14000abf1:	movsxd rcx,eax
   14000abf4:	mov    edx,0x8
   14000abf9:	mov    DWORD PTR [rip+0x1c0a1],eax        # 0x140026ca0
   14000abff:	call   0x140010bd0
   14000ac04:	mov    QWORD PTR [rip+0x1b07d],rax        # 0x140025c88
   14000ac0b:	test   rax,rax
   14000ac0e:	jne    0x14000ac34
   14000ac10:	lea    edx,[rax+0x8]
   14000ac13:	mov    rcx,rbx
   14000ac16:	mov    DWORD PTR [rip+0x1c084],ebx        # 0x140026ca0
   14000ac1c:	call   0x140010bd0
   14000ac21:	mov    QWORD PTR [rip+0x1b060],rax        # 0x140025c88
   14000ac28:	test   rax,rax
   14000ac2b:	jne    0x14000ac34
   14000ac2d:	mov    eax,0x1a
   14000ac32:	jmp    0x14000acaa
   14000ac34:	xor    ecx,ecx
   14000ac36:	lea    rdx,[rip+0x18493]        # 0x1400230d0
   14000ac3d:	mov    QWORD PTR [rcx+rax*1],rdx
   14000ac41:	add    rdx,0x30
   14000ac45:	add    rcx,0x8
   14000ac49:	dec    rbx
   14000ac4c:	je     0x14000ac57
   14000ac4e:	mov    rax,QWORD PTR [rip+0x1b033]        # 0x140025c88
   14000ac55:	jmp    0x14000ac3d
   14000ac57:	xor    r8d,r8d
   14000ac5a:	lea    rdx,[rip+0x1848b]        # 0x1400230ec
   14000ac61:	lea    r9d,[r8+0x3]
   14000ac65:	mov    rcx,r8
   14000ac68:	lea    r10,[rip+0x1ae11]        # 0x140025a80
   14000ac6f:	mov    rax,r8
   14000ac72:	sar    rax,0x5
   14000ac76:	and    ecx,0x1f
   14000ac79:	mov    rax,QWORD PTR [r10+rax*8]
   14000ac7d:	imul   rcx,rcx,0x58
   14000ac81:	mov    r10,QWORD PTR [rcx+rax*1]
   14000ac85:	cmp    r10,0xffffffffffffffff
   14000ac89:	je     0x14000ac96
   14000ac8b:	cmp    r10,0xfffffffffffffffe
   14000ac8f:	je     0x14000ac96
   14000ac91:	test   r10,r10
   14000ac94:	jne    0x14000ac9c
   14000ac96:	mov    DWORD PTR [rdx],0xfffffffe
   14000ac9c:	inc    r8
   14000ac9f:	add    rdx,0x30
   14000aca3:	dec    r9
   14000aca6:	jne    0x14000ac65
   14000aca8:	xor    eax,eax
   14000acaa:	add    rsp,0x20
   14000acae:	pop    rbx
   14000acaf:	ret    
   14000acb0:	sub    rsp,0x28
   14000acb4:	call   0x14000c070
   14000acb9:	cmp    BYTE PTR [rip+0x19d08],0x0        # 0x1400249c8
   14000acc0:	je     0x14000acc7
   14000acc2:	call   0x140010d64
   14000acc7:	mov    rcx,QWORD PTR [rip+0x1afba]        # 0x140025c88
   14000acce:	add    rsp,0x28
   14000acd2:	jmp    0x14000b490
   14000acd7:	int3   
   14000acd8:	rex push rbx
   14000acda:	sub    rsp,0x20
   14000acde:	mov    rbx,rcx
   14000ace1:	lea    rcx,[rip+0x183e8]        # 0x1400230d0
   14000ace8:	cmp    rbx,rcx
   14000aceb:	jb     0x14000ad2b
   14000aced:	lea    rax,[rip+0x1876c]        # 0x140023460
   14000acf4:	cmp    rbx,rax
   14000acf7:	ja     0x14000ad2b
   14000acf9:	mov    rdx,rbx
   14000acfc:	movabs rax,0x2aaaaaaaaaaaaaab
   14000ad06:	sub    rdx,rcx
   14000ad09:	imul   rdx
   14000ad0c:	sar    rdx,0x3
   14000ad10:	mov    rcx,rdx
   14000ad13:	shr    rcx,0x3f
   14000ad17:	lea    ecx,[rcx+rdx*1+0x10]
   14000ad1b:	call   0x14000cb58
   14000ad20:	bts    DWORD PTR [rbx+0x18],0xf
   14000ad25:	add    rsp,0x20
   14000ad29:	pop    rbx
   14000ad2a:	ret    
   14000ad2b:	lea    rcx,[rbx+0x30]
   14000ad2f:	add    rsp,0x20
   14000ad33:	pop    rbx
   14000ad34:	rex.W jmp QWORD PTR [rip+0xf3b5]        # 0x14001a0f0
   14000ad3b:	int3   
   14000ad3c:	rex push rbx
   14000ad3e:	sub    rsp,0x20
   14000ad42:	mov    rbx,rdx
   14000ad45:	cmp    ecx,0x14
   14000ad48:	jge    0x14000ad5d
   14000ad4a:	add    ecx,0x10
   14000ad4d:	call   0x14000cb58
   14000ad52:	bts    DWORD PTR [rbx+0x18],0xf
   14000ad57:	add    rsp,0x20
   14000ad5b:	pop    rbx
   14000ad5c:	ret    
   14000ad5d:	lea    rcx,[rdx+0x30]
   14000ad61:	add    rsp,0x20
   14000ad65:	pop    rbx
   14000ad66:	rex.W jmp QWORD PTR [rip+0xf383]        # 0x14001a0f0
   14000ad6d:	int3   
   14000ad6e:	int3   
   14000ad6f:	int3   
   14000ad70:	lea    rdx,[rip+0x18359]        # 0x1400230d0
   14000ad77:	cmp    rcx,rdx
   14000ad7a:	jb     0x14000adb1
   14000ad7c:	lea    rax,[rip+0x186dd]        # 0x140023460
   14000ad83:	cmp    rcx,rax
   14000ad86:	ja     0x14000adb1
   14000ad88:	btr    DWORD PTR [rcx+0x18],0xf
   14000ad8d:	sub    rcx,rdx
   14000ad90:	movabs rax,0x2aaaaaaaaaaaaaab
   14000ad9a:	imul   rcx
   14000ad9d:	sar    rdx,0x3
   14000ada1:	mov    rcx,rdx
   14000ada4:	shr    rcx,0x3f
   14000ada8:	lea    ecx,[rcx+rdx*1+0x10]
   14000adac:	jmp    0x14000ca58
   14000adb1:	add    rcx,0x30
   14000adb5:	rex.W jmp QWORD PTR [rip+0xf33c]        # 0x14001a0f8
   14000adbc:	cmp    ecx,0x14
   14000adbf:	jge    0x14000adce
   14000adc1:	btr    DWORD PTR [rdx+0x18],0xf
   14000adc6:	add    ecx,0x10
   14000adc9:	jmp    0x14000ca58
   14000adce:	lea    rcx,[rdx+0x30]
   14000add2:	rex.W jmp QWORD PTR [rip+0xf31f]        # 0x14001a0f8
   14000add9:	int3   
   14000adda:	int3   
   14000addb:	int3   
   14000addc:	mov    QWORD PTR [rsp+0x8],rbx
   14000ade1:	push   rdi
   14000ade2:	sub    rsp,0x20
   14000ade6:	or     edi,0xffffffff
   14000ade9:	mov    rbx,rcx
   14000adec:	test   rcx,rcx
   14000adef:	jne    0x14000ae05
   14000adf1:	call   0x14000bdf0
   14000adf6:	mov    DWORD PTR [rax],0x16
   14000adfc:	call   0x14000d04c
   14000ae01:	or     eax,edi
   14000ae03:	jmp    0x14000ae4b
   14000ae05:	test   BYTE PTR [rcx+0x18],0x83
   14000ae09:	je     0x14000ae45
   14000ae0b:	call   0x14000be78
   14000ae10:	mov    rcx,rbx
   14000ae13:	mov    edi,eax
   14000ae15:	call   0x140010f90
   14000ae1a:	mov    rcx,rbx
   14000ae1d:	call   0x140010b28
   14000ae22:	mov    ecx,eax
   14000ae24:	call   0x140010ecc
   14000ae29:	test   eax,eax
   14000ae2b:	jns    0x14000ae32
   14000ae2d:	or     edi,0xffffffff
   14000ae30:	jmp    0x14000ae45
   14000ae32:	mov    rcx,QWORD PTR [rbx+0x28]
   14000ae36:	test   rcx,rcx
   14000ae39:	je     0x14000ae45
   14000ae3b:	call   0x14000b490
   14000ae40:	and    QWORD PTR [rbx+0x28],0x0
   14000ae45:	and    DWORD PTR [rbx+0x18],0x0
   14000ae49:	mov    eax,edi
   14000ae4b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ae50:	add    rsp,0x20
   14000ae54:	pop    rdi
   14000ae55:	ret    
   14000ae56:	int3   
   14000ae57:	int3   
   14000ae58:	mov    QWORD PTR [rsp+0x10],rbx
   14000ae5d:	mov    QWORD PTR [rsp+0x8],rcx
   14000ae62:	push   rdi
   14000ae63:	sub    rsp,0x20
   14000ae67:	mov    rbx,rcx
   14000ae6a:	or     edi,0xffffffff
   14000ae6d:	xor    eax,eax
   14000ae6f:	test   rcx,rcx
   14000ae72:	setne  al
   14000ae75:	test   eax,eax
   14000ae77:	jne    0x14000ae8d
   14000ae79:	call   0x14000bdf0
   14000ae7e:	mov    DWORD PTR [rax],0x16
   14000ae84:	call   0x14000d04c
   14000ae89:	mov    eax,edi
   14000ae8b:	jmp    0x14000aeb3
   14000ae8d:	test   BYTE PTR [rcx+0x18],0x40
   14000ae91:	je     0x14000ae99
   14000ae93:	and    DWORD PTR [rcx+0x18],0x0
   14000ae97:	jmp    0x14000ae89
   14000ae99:	call   0x14000acd8
   14000ae9e:	nop
   14000ae9f:	mov    rcx,rbx
   14000aea2:	call   0x14000addc
   14000aea7:	mov    edi,eax
   14000aea9:	mov    rcx,rbx
   14000aeac:	call   0x14000ad70
   14000aeb1:	jmp    0x14000ae89
   14000aeb3:	mov    rbx,QWORD PTR [rsp+0x38]
   14000aeb8:	add    rsp,0x20
   14000aebc:	pop    rdi
   14000aebd:	ret    
   14000aebe:	int3   
   14000aebf:	int3   
   14000aec0:	sub    rsp,0x38
   14000aec4:	mov    rax,QWORD PTR [rip+0x181f5]        # 0x1400230c0
   14000aecb:	xor    rax,rsp
   14000aece:	mov    QWORD PTR [rsp+0x20],rax
   14000aed3:	mov    al,BYTE PTR [rdx]
   14000aed5:	xor    r9d,r9d
   14000aed8:	mov    r11,rdx
   14000aedb:	mov    QWORD PTR [rsp],r9
   14000aedf:	mov    QWORD PTR [rsp+0x8],r9
   14000aee4:	mov    QWORD PTR [rsp+0x10],r9
   14000aee9:	mov    QWORD PTR [rsp+0x18],r9
   14000aeee:	mov    r10,rcx
   14000aef1:	jmp    0x14000af14
   14000aef3:	movzx  r8d,al
   14000aef7:	movzx  eax,al
   14000aefa:	mov    edx,0x1
   14000aeff:	and    eax,0x7
   14000af02:	shr    r8,0x3
   14000af06:	mov    cl,al
   14000af08:	shl    dl,cl
   14000af0a:	or     BYTE PTR [rsp+r8*1],dl
   14000af0e:	inc    r11
   14000af11:	mov    al,BYTE PTR [r11]
   14000af14:	test   al,al
   14000af16:	jne    0x14000aef3
   14000af18:	cmp    BYTE PTR [r10],r9b
   14000af1b:	je     0x14000af5e
   14000af1d:	movzx  ecx,BYTE PTR [r10]
   14000af21:	movzx  eax,BYTE PTR [r10]
   14000af25:	mov    edx,0x1
   14000af2a:	and    ecx,0x7
   14000af2d:	shr    rax,0x3
   14000af31:	shl    edx,cl
   14000af33:	test   BYTE PTR [rsp+rax*1],dl
   14000af36:	je     0x14000af59
   14000af38:	inc    r10
   14000af3b:	mov    edx,0x1
   14000af40:	inc    r9d
   14000af43:	movzx  r8d,BYTE PTR [r10]
   14000af47:	mov    ecx,r8d
   14000af4a:	shr    r8,0x3
   14000af4e:	and    ecx,0x7
   14000af51:	shl    edx,cl
   14000af53:	test   BYTE PTR [rsp+r8*1],dl
   14000af57:	jne    0x14000af38
   14000af59:	movsxd rax,r9d
   14000af5c:	jmp    0x14000af60
   14000af5e:	xor    eax,eax
   14000af60:	mov    rcx,QWORD PTR [rsp+0x20]
   14000af65:	xor    rcx,rsp
   14000af68:	call   0x14000a850
   14000af6d:	add    rsp,0x38
   14000af71:	ret    
   14000af72:	int3   
   14000af73:	int3   
   14000af74:	sub    rsp,0x38
   14000af78:	mov    rax,QWORD PTR [rip+0x18141]        # 0x1400230c0
   14000af7f:	xor    rax,rsp
   14000af82:	mov    QWORD PTR [rsp+0x20],rax
   14000af87:	mov    al,BYTE PTR [rdx]
   14000af89:	xor    r9d,r9d
   14000af8c:	mov    r11,rdx
   14000af8f:	mov    QWORD PTR [rsp],r9
   14000af93:	mov    QWORD PTR [rsp+0x8],r9
   14000af98:	mov    QWORD PTR [rsp+0x10],r9
   14000af9d:	mov    QWORD PTR [rsp+0x18],r9
   14000afa2:	mov    r10,rcx
   14000afa5:	jmp    0x14000afc3
   14000afa7:	movzx  r8d,al
   14000afab:	movzx  eax,al
   14000afae:	and    eax,0x7
   14000afb1:	shr    r8,0x3
   14000afb5:	mov    cl,al
   14000afb7:	shl    dl,cl
   14000afb9:	or     BYTE PTR [rsp+r8*1],dl
   14000afbd:	inc    r11
   14000afc0:	mov    al,BYTE PTR [r11]
   14000afc3:	mov    edx,0x1
   14000afc8:	test   al,al
   14000afca:	jne    0x14000afa7
   14000afcc:	or     BYTE PTR [rsp],dl
   14000afcf:	jmp    0x14000afdc
   14000afd1:	inc    r9d
   14000afd4:	mov    edx,0x1
   14000afd9:	inc    r10
   14000afdc:	movzx  r8d,BYTE PTR [r10]
   14000afe0:	mov    ecx,r8d
   14000afe3:	shr    r8,0x3
   14000afe7:	and    ecx,0x7
   14000afea:	shl    edx,cl
   14000afec:	test   BYTE PTR [rsp+r8*1],dl
   14000aff0:	je     0x14000afd1
   14000aff2:	movsxd rax,r9d
   14000aff5:	mov    rcx,QWORD PTR [rsp+0x20]
   14000affa:	xor    rcx,rsp
   14000affd:	call   0x14000a850
   14000b002:	add    rsp,0x38
   14000b006:	ret    
   14000b007:	int3   
   14000b008:	rex push rbx
   14000b00a:	push   rsi
   14000b00b:	push   rdi
   14000b00c:	push   r12
   14000b00e:	push   r13
   14000b010:	sub    rsp,0x30
   14000b014:	mov    rbx,r8
   14000b017:	mov    esi,edx
   14000b019:	mov    r13,rcx
   14000b01c:	mov    r12,rcx
   14000b01f:	mov    rdi,rcx
   14000b022:	test   rcx,rcx
   14000b025:	jne    0x14000b042
   14000b027:	test   edx,edx
   14000b029:	je     0x14000b042
   14000b02b:	call   0x14000bdf0
   14000b030:	mov    DWORD PTR [rax],0x16
   14000b036:	call   0x14000d04c
   14000b03b:	xor    eax,eax
   14000b03d:	jmp    0x14000b163
   14000b042:	xor    eax,eax
   14000b044:	test   edx,edx
   14000b046:	setns  al
   14000b049:	test   eax,eax
   14000b04b:	je     0x14000b02b
   14000b04d:	xor    eax,eax
   14000b04f:	test   rbx,rbx
   14000b052:	setne  al
   14000b055:	test   eax,eax
   14000b057:	je     0x14000b02b
   14000b059:	test   edx,edx
   14000b05b:	je     0x14000b03b
   14000b05d:	mov    QWORD PTR [rsp+0x78],rbx
   14000b062:	mov    rcx,rbx
   14000b065:	call   0x14000acd8
   14000b06a:	nop
   14000b06b:	test   BYTE PTR [rbx+0x18],0x40
   14000b06f:	jne    0x14000b0ff
   14000b075:	mov    rcx,rbx
   14000b078:	call   0x140010b28
   14000b07d:	cmp    eax,0xffffffff
   14000b080:	je     0x14000b0ac
   14000b082:	cmp    eax,0xfffffffe
   14000b085:	je     0x14000b0ac
   14000b087:	movsxd rdx,eax
   14000b08a:	mov    rcx,rdx
   14000b08d:	sar    rcx,0x5
   14000b091:	lea    r8,[rip+0x1a9e8]        # 0x140025a80
   14000b098:	and    edx,0x1f
   14000b09b:	imul   rdx,rdx,0x58
   14000b09f:	add    rdx,QWORD PTR [r8+rcx*8]
   14000b0a3:	lea    rcx,[rip+0x18806]        # 0x1400238b0
   14000b0aa:	jmp    0x14000b0bd
   14000b0ac:	lea    rcx,[rip+0x187fd]        # 0x1400238b0
   14000b0b3:	mov    rdx,rcx
   14000b0b6:	lea    r8,[rip+0x1a9c3]        # 0x140025a80
   14000b0bd:	test   BYTE PTR [rdx+0x38],0x7f
   14000b0c1:	jne    0x14000b0e8
   14000b0c3:	cmp    eax,0xffffffff
   14000b0c6:	je     0x14000b0e2
   14000b0c8:	cmp    eax,0xfffffffe
   14000b0cb:	je     0x14000b0e2
   14000b0cd:	movsxd rcx,eax
   14000b0d0:	mov    rax,rcx
   14000b0d3:	sar    rax,0x5
   14000b0d7:	and    ecx,0x1f
   14000b0da:	imul   rcx,rcx,0x58
   14000b0de:	add    rcx,QWORD PTR [r8+rax*8]
   14000b0e2:	test   BYTE PTR [rcx+0x38],0x80
   14000b0e6:	je     0x14000b0ff
   14000b0e8:	call   0x14000bdf0
   14000b0ed:	mov    DWORD PTR [rax],0x16
   14000b0f3:	call   0x14000d04c
   14000b0f8:	xor    edi,edi
   14000b0fa:	mov    QWORD PTR [rsp+0x20],rdi
   14000b0ff:	test   rdi,rdi
   14000b102:	je     0x14000b158
   14000b104:	dec    esi
   14000b106:	mov    DWORD PTR [rsp+0x68],esi
   14000b10a:	je     0x14000b153
   14000b10c:	dec    DWORD PTR [rbx+0x8]
   14000b10f:	js     0x14000b11f
   14000b111:	mov    rax,QWORD PTR [rbx]
   14000b114:	movzx  ecx,BYTE PTR [rax]
   14000b117:	inc    rax
   14000b11a:	mov    QWORD PTR [rbx],rax
   14000b11d:	jmp    0x14000b129
   14000b11f:	mov    rcx,rbx
   14000b122:	call   0x140010fc8
   14000b127:	mov    ecx,eax
   14000b129:	mov    DWORD PTR [rsp+0x60],ecx
   14000b12d:	cmp    ecx,0xffffffff
   14000b130:	jne    0x14000b140
   14000b132:	cmp    r12,r13
   14000b135:	jne    0x14000b153
   14000b137:	xor    edi,edi
   14000b139:	mov    QWORD PTR [rsp+0x20],rdi
   14000b13e:	jmp    0x14000b158
   14000b140:	mov    BYTE PTR [r12],cl
   14000b144:	inc    r12
   14000b147:	mov    QWORD PTR [rsp+0x28],r12
   14000b14c:	cmp    cl,0xa
   14000b14f:	je     0x14000b153
   14000b151:	jmp    0x14000b104
   14000b153:	mov    BYTE PTR [r12],0x0
   14000b158:	mov    rcx,rbx
   14000b15b:	call   0x14000ad70
   14000b160:	mov    rax,rdi
   14000b163:	add    rsp,0x30
   14000b167:	pop    r13
   14000b169:	pop    r12
   14000b16b:	pop    rdi
   14000b16c:	pop    rsi
   14000b16d:	pop    rbx
   14000b16e:	ret    
   14000b16f:	int3   
   14000b170:	mov    QWORD PTR [rsp+0x10],rbx
   14000b175:	mov    QWORD PTR [rsp+0x18],rsi
   14000b17a:	mov    QWORD PTR [rsp+0x20],rdi
   14000b17f:	push   r12
   14000b181:	sub    rsp,0x30
   14000b185:	mov    QWORD PTR [rsp+0x20],rsp
   14000b18a:	mov    r12d,r8d
   14000b18d:	mov    rdi,rdx
   14000b190:	mov    rsi,rcx
   14000b193:	xor    eax,eax
   14000b195:	test   rcx,rcx
   14000b198:	setne  al
   14000b19b:	test   eax,eax
   14000b19d:	jne    0x14000b1b3
   14000b19f:	call   0x14000bdf0
   14000b1a4:	mov    DWORD PTR [rax],0x16
   14000b1aa:	call   0x14000d04c
   14000b1af:	xor    eax,eax
   14000b1b1:	jmp    0x14000b22f
   14000b1b3:	xor    eax,eax
   14000b1b5:	test   rdx,rdx
   14000b1b8:	setne  al
   14000b1bb:	test   eax,eax
   14000b1bd:	je     0x14000b19f
   14000b1bf:	xor    eax,eax
   14000b1c1:	cmp    BYTE PTR [rdx],al
   14000b1c3:	setne  al
   14000b1c6:	test   eax,eax
   14000b1c8:	je     0x14000b19f
   14000b1ca:	call   0x1400113d4
   14000b1cf:	mov    rbx,rax
   14000b1d2:	mov    QWORD PTR [rsp+0x40],rax
   14000b1d7:	test   rax,rax
   14000b1da:	jne    0x14000b1e9
   14000b1dc:	call   0x14000bdf0
   14000b1e1:	mov    DWORD PTR [rax],0x18
   14000b1e7:	jmp    0x14000b1af
   14000b1e9:	cmp    BYTE PTR [rsi],0x0
   14000b1ec:	jne    0x14000b210
   14000b1ee:	call   0x14000bdf0
   14000b1f3:	mov    DWORD PTR [rax],0x16
   14000b1f9:	lea    rdx,[rip+0xc]        # 0x14000b20c
   14000b200:	mov    rcx,QWORD PTR [rsp+0x20]
   14000b205:	call   0x140011540
   14000b20a:	nop
   14000b20b:	nop
   14000b20c:	xor    eax,eax
   14000b20e:	jmp    0x14000b22f
   14000b210:	mov    r9,rax
   14000b213:	mov    r8d,r12d
   14000b216:	mov    rdx,rdi
   14000b219:	mov    rcx,rsi
   14000b21c:	call   0x14001111c
   14000b221:	mov    rdi,rax
   14000b224:	mov    rcx,rbx
   14000b227:	call   0x14000ad70
   14000b22c:	mov    rax,rdi
   14000b22f:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b234:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b239:	mov    rdi,QWORD PTR [rsp+0x58]
   14000b23e:	add    rsp,0x30
   14000b242:	pop    r12
   14000b244:	ret    
   14000b245:	int3   
   14000b246:	int3   
   14000b247:	int3   
   14000b248:	mov    r8d,0x40
   14000b24e:	jmp    0x14000b170
   14000b253:	int3   
   14000b254:	mov    QWORD PTR [rsp+0x8],rbx
   14000b259:	push   rdi
   14000b25a:	sub    rsp,0x20
   14000b25e:	mov    rbx,rcx
   14000b261:	mov    edi,0x2
   14000b266:	mov    ecx,edi
   14000b268:	call   0x140011784
   14000b26d:	nop
   14000b26e:	test   rbx,rbx
   14000b271:	je     0x14000b29e
   14000b273:	cmp    BYTE PTR [rbx],0x0
   14000b276:	je     0x14000b29e
   14000b278:	mov    rcx,rbx
   14000b27b:	call   0x140009fd0
   14000b280:	mov    r8,rax
   14000b283:	mov    rdx,rbx
   14000b286:	mov    ecx,edi
   14000b288:	call   0x140011a5c
   14000b28d:	mov    r8d,edi
   14000b290:	lea    rdx,[rip+0x137a1]        # 0x14001ea38
   14000b297:	mov    ecx,edi
   14000b299:	call   0x140011a5c
   14000b29e:	call   0x14000bdf0
   14000b2a3:	mov    ebx,DWORD PTR [rax]
   14000b2a5:	test   ebx,ebx
   14000b2a7:	js     0x14000b2b2
   14000b2a9:	call   0x1400115a4
   14000b2ae:	cmp    ebx,DWORD PTR [rax]
   14000b2b0:	jl     0x14000b2b9
   14000b2b2:	call   0x1400115a4
   14000b2b7:	mov    ebx,DWORD PTR [rax]
   14000b2b9:	call   0x1400115ac
   14000b2be:	movsxd rcx,ebx
   14000b2c1:	mov    rbx,QWORD PTR [rax+rcx*8]
   14000b2c5:	mov    rcx,rbx
   14000b2c8:	call   0x140009fd0
   14000b2cd:	mov    r8,rax
   14000b2d0:	mov    rdx,rbx
   14000b2d3:	mov    ecx,edi
   14000b2d5:	call   0x140011a5c
   14000b2da:	mov    r8d,0x1
   14000b2e0:	lea    rdx,[rip+0xf73d]        # 0x14001aa24
   14000b2e7:	mov    ecx,edi
   14000b2e9:	call   0x140011a5c
   14000b2ee:	nop
   14000b2ef:	mov    ecx,edi
   14000b2f1:	call   0x14001182c
   14000b2f6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b2fb:	add    rsp,0x20
   14000b2ff:	pop    rdi
   14000b300:	ret    
   14000b301:	int3   
   14000b302:	int3   
   14000b303:	int3   
   14000b304:	mov    QWORD PTR [rsp+0x8],rbx
   14000b309:	mov    QWORD PTR [rsp+0x10],rsi
   14000b30e:	push   rdi
   14000b30f:	sub    rsp,0x20
   14000b313:	mov    rbx,rcx
   14000b316:	cmp    rcx,0xffffffffffffffe0
   14000b31a:	ja     0x14000b398
   14000b31c:	mov    edi,0x1
   14000b321:	test   rcx,rcx
   14000b324:	cmovne rdi,rcx
   14000b328:	mov    rcx,QWORD PTR [rip+0x1a099]        # 0x1400253c8
   14000b32f:	test   rcx,rcx
   14000b332:	jne    0x14000b354
   14000b334:	call   0x14000dbb0
   14000b339:	mov    ecx,0x1e
   14000b33e:	call   0x14000d950
   14000b343:	mov    ecx,0xff
   14000b348:	call   0x1400098b8
   14000b34d:	mov    rcx,QWORD PTR [rip+0x1a074]        # 0x1400253c8
   14000b354:	mov    r8,rdi
   14000b357:	xor    edx,edx
   14000b359:	call   QWORD PTR [rip+0xeda1]        # 0x14001a100
   14000b35f:	mov    rsi,rax
   14000b362:	test   rax,rax
   14000b365:	jne    0x14000b393
   14000b367:	cmp    DWORD PTR [rip+0x1a5d7],eax        # 0x140025944
   14000b36d:	je     0x14000b37d
   14000b36f:	mov    rcx,rbx
   14000b372:	call   0x14000d074
   14000b377:	test   eax,eax
   14000b379:	je     0x14000b388
   14000b37b:	jmp    0x14000b328
   14000b37d:	call   0x14000bdf0
   14000b382:	mov    DWORD PTR [rax],0xc
   14000b388:	call   0x14000bdf0
   14000b38d:	mov    DWORD PTR [rax],0xc
   14000b393:	mov    rax,rsi
   14000b396:	jmp    0x14000b3aa
   14000b398:	call   0x14000d074
   14000b39d:	call   0x14000bdf0
   14000b3a2:	mov    DWORD PTR [rax],0xc
   14000b3a8:	xor    eax,eax
   14000b3aa:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b3af:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b3b4:	add    rsp,0x20
   14000b3b8:	pop    rdi
   14000b3b9:	ret    
   14000b3ba:	int3   
   14000b3bb:	int3   
   14000b3bc:	mov    QWORD PTR [rsp+0x8],rbx
   14000b3c1:	mov    QWORD PTR [rsp+0x10],rsi
   14000b3c6:	push   rdi
   14000b3c7:	sub    rsp,0x20
   14000b3cb:	mov    rbx,rdx
   14000b3ce:	mov    rdi,rcx
   14000b3d1:	test   rcx,rcx
   14000b3d4:	jne    0x14000b3e0
   14000b3d6:	mov    rcx,rdx
   14000b3d9:	call   0x14000b304
   14000b3de:	jmp    0x14000b44a
   14000b3e0:	test   rdx,rdx
   14000b3e3:	jne    0x14000b3ec
   14000b3e5:	call   0x14000b490
   14000b3ea:	jmp    0x14000b448
   14000b3ec:	cmp    rdx,0xffffffffffffffe0
   14000b3f0:	ja     0x14000b435
   14000b3f2:	mov    rcx,QWORD PTR [rip+0x19fcf]        # 0x1400253c8
   14000b3f9:	mov    eax,0x1
   14000b3fe:	test   rbx,rbx
   14000b401:	cmove  rbx,rax
   14000b405:	mov    r8,rdi
   14000b408:	xor    edx,edx
   14000b40a:	mov    r9,rbx
   14000b40d:	call   QWORD PTR [rip+0xecf5]        # 0x14001a108
   14000b413:	mov    rsi,rax
   14000b416:	test   rax,rax
   14000b419:	jne    0x14000b48a
   14000b41b:	cmp    DWORD PTR [rip+0x1a523],eax        # 0x140025944
   14000b421:	je     0x14000b473
   14000b423:	mov    rcx,rbx
   14000b426:	call   0x14000d074
   14000b42b:	test   eax,eax
   14000b42d:	je     0x14000b45a
   14000b42f:	cmp    rbx,0xffffffffffffffe0
   14000b433:	jbe    0x14000b3f2
   14000b435:	mov    rcx,rbx
   14000b438:	call   0x14000d074
   14000b43d:	call   0x14000bdf0
   14000b442:	mov    DWORD PTR [rax],0xc
   14000b448:	xor    eax,eax
   14000b44a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b44f:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b454:	add    rsp,0x20
   14000b458:	pop    rdi
   14000b459:	ret    
   14000b45a:	call   0x14000bdf0
   14000b45f:	mov    rbx,rax
   14000b462:	call   QWORD PTR [rip+0xec08]        # 0x14001a070
   14000b468:	mov    ecx,eax
   14000b46a:	call   0x14000bda8
   14000b46f:	mov    DWORD PTR [rbx],eax
   14000b471:	jmp    0x14000b448
   14000b473:	call   0x14000bdf0
   14000b478:	mov    rbx,rax
   14000b47b:	call   QWORD PTR [rip+0xebef]        # 0x14001a070
   14000b481:	mov    ecx,eax
   14000b483:	call   0x14000bda8
   14000b488:	mov    DWORD PTR [rbx],eax
   14000b48a:	mov    rax,rsi
   14000b48d:	jmp    0x14000b44a
   14000b48f:	int3   
   14000b490:	test   rcx,rcx
   14000b493:	je     0x14000b4cc
   14000b495:	push   rbx
   14000b496:	sub    rsp,0x20
   14000b49a:	mov    r8,rcx
   14000b49d:	mov    rcx,QWORD PTR [rip+0x19f24]        # 0x1400253c8
   14000b4a4:	xor    edx,edx
   14000b4a6:	call   QWORD PTR [rip+0xec64]        # 0x14001a110
   14000b4ac:	test   eax,eax
   14000b4ae:	jne    0x14000b4c7
   14000b4b0:	call   0x14000bdf0
   14000b4b5:	mov    rbx,rax
   14000b4b8:	call   QWORD PTR [rip+0xebb2]        # 0x14001a070
   14000b4be:	mov    ecx,eax
   14000b4c0:	call   0x14000bda8
   14000b4c5:	mov    DWORD PTR [rbx],eax
   14000b4c7:	add    rsp,0x20
   14000b4cb:	pop    rbx
   14000b4cc:	ret    
   14000b4cd:	int3   
   14000b4ce:	int3   
   14000b4cf:	int3   
   14000b4d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b4d5:	mov    QWORD PTR [rsp+0x18],rsi
   14000b4da:	mov    QWORD PTR [rsp+0x20],rdi
   14000b4df:	push   r12
   14000b4e1:	push   r13
   14000b4e3:	push   r14
   14000b4e5:	sub    rsp,0x20
   14000b4e9:	mov    r12,r9
   14000b4ec:	mov    r13,r8
   14000b4ef:	mov    rsi,rdx
   14000b4f2:	mov    r14,rcx
   14000b4f5:	call   0x14000abc8
   14000b4fa:	lea    rdi,[rax+0x30]
   14000b4fe:	mov    QWORD PTR [rsp+0x48],rdi
   14000b503:	xor    eax,eax
   14000b505:	test   rsi,rsi
   14000b508:	setne  al
   14000b50b:	test   eax,eax
   14000b50d:	jne    0x14000b524
   14000b50f:	call   0x14000bdf0
   14000b514:	mov    DWORD PTR [rax],0x16
   14000b51a:	call   0x14000d04c
   14000b51f:	or     eax,0xffffffff
   14000b522:	jmp    0x14000b55d
   14000b524:	mov    rcx,rdi
   14000b527:	call   0x14000acd8
   14000b52c:	nop
   14000b52d:	mov    rcx,rdi
   14000b530:	call   0x14000dbf4
   14000b535:	mov    ebx,eax
   14000b537:	mov    r9,r12
   14000b53a:	mov    r8,r13
   14000b53d:	mov    rdx,rsi
   14000b540:	mov    rcx,rdi
   14000b543:	call   r14
   14000b546:	mov    esi,eax
   14000b548:	mov    rdx,rdi
   14000b54b:	mov    ecx,ebx
   14000b54d:	call   0x14000dcc8
   14000b552:	nop
   14000b553:	mov    rcx,rdi
   14000b556:	call   0x14000ad70
   14000b55b:	mov    eax,esi
   14000b55d:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b562:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b567:	mov    rdi,QWORD PTR [rsp+0x58]
   14000b56c:	add    rsp,0x20
   14000b570:	pop    r14
   14000b572:	pop    r13
   14000b574:	pop    r12
   14000b576:	ret    
   14000b577:	int3   
   14000b578:	mov    r9,rdx
   14000b57b:	mov    rdx,rcx
   14000b57e:	lea    rcx,[rip+0x28af]        # 0x14000de34
   14000b585:	xor    r8d,r8d
   14000b588:	jmp    0x14000b4d0
   14000b58d:	int3   
   14000b58e:	int3   
   14000b58f:	int3   
   14000b590:	int3   
   14000b591:	int3   
   14000b592:	int3   
   14000b593:	int3   
   14000b594:	int3   
   14000b595:	int3   
   14000b596:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000b5a0:	test   r8,r8
   14000b5a3:	je     0x14000b61a
   14000b5a5:	sub    rdx,rcx
   14000b5a8:	mov    r9,rdx
   14000b5ab:	movabs r11,0x8101010101010100
   14000b5b5:	test   cl,0x7
   14000b5b8:	je     0x14000b5d9
   14000b5ba:	mov    al,BYTE PTR [rcx]
   14000b5bc:	mov    dl,BYTE PTR [rcx+r9*1]
   14000b5c0:	inc    rcx
   14000b5c3:	cmp    al,dl
   14000b5c5:	jne    0x14000b61e
   14000b5c7:	dec    r8
   14000b5ca:	je     0x14000b61a
   14000b5cc:	test   al,al
   14000b5ce:	je     0x14000b61a
   14000b5d0:	test   rcx,0x7
   14000b5d7:	jne    0x14000b5ba
   14000b5d9:	lea    rdx,[rcx+r9*1]
   14000b5dd:	and    dx,0xfff
   14000b5e2:	cmp    dx,0xff8
   14000b5e7:	ja     0x14000b5ba
   14000b5e9:	mov    rax,QWORD PTR [rcx]
   14000b5ec:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000b5f0:	cmp    rax,rdx
   14000b5f3:	jne    0x14000b5ba
   14000b5f5:	add    rcx,0x8
   14000b5f9:	sub    r8,0x8
   14000b5fd:	movabs r10,0x7efefefefefefeff
   14000b607:	jbe    0x14000b61a
   14000b609:	xor    rax,0xffffffffffffffff
   14000b60d:	add    r10,rdx
   14000b610:	xor    rax,r10
   14000b613:	test   r11,rax
   14000b616:	je     0x14000b5d9
   14000b618:	jmp    0x14000b626
   14000b61a:	xor    rax,rax
   14000b61d:	ret    
   14000b61e:	sbb    rax,rax
   14000b621:	sbb    rax,0xffffffffffffffff
   14000b625:	ret    
   14000b626:	test   dl,dl
   14000b628:	je     0x14000b651
   14000b62a:	test   dh,dh
   14000b62c:	je     0x14000b651
   14000b62e:	shr    rdx,0x10
   14000b632:	test   dl,dl
   14000b634:	je     0x14000b651
   14000b636:	test   dh,dh
   14000b638:	je     0x14000b651
   14000b63a:	shr    rdx,0x10
   14000b63e:	test   dl,dl
   14000b640:	je     0x14000b651
   14000b642:	test   dh,dh
   14000b644:	je     0x14000b651
   14000b646:	shr    edx,0x10
   14000b649:	test   dl,dl
   14000b64b:	je     0x14000b651
   14000b64d:	test   dh,dh
   14000b64f:	jne    0x14000b5d9
   14000b651:	xor    rax,rax
   14000b654:	ret    
   14000b655:	int3   
   14000b656:	int3   
   14000b657:	int3   
   14000b658:	mov    QWORD PTR [rsp+0x18],rbx
   14000b65d:	push   rbp
   14000b65e:	push   rsi
   14000b65f:	push   rdi
   14000b660:	push   r12
   14000b662:	push   r13
   14000b664:	push   r14
   14000b666:	push   r15
   14000b668:	lea    rbp,[rsp-0x1c0]
   14000b670:	sub    rsp,0x2c0
   14000b677:	mov    rax,QWORD PTR [rip+0x17a42]        # 0x1400230c0
   14000b67e:	xor    rax,rsp
   14000b681:	mov    QWORD PTR [rbp+0x1b0],rax
   14000b688:	xor    r14d,r14d
   14000b68b:	mov    rdi,rdx
   14000b68e:	mov    r12,rcx
   14000b691:	mov    r13d,r14d
   14000b694:	test   rcx,rcx
   14000b697:	jne    0x14000b6b9
   14000b699:	call   0x14000be10
   14000b69e:	mov    DWORD PTR [rax],r14d
   14000b6a1:	call   0x14000bdf0
   14000b6a6:	mov    DWORD PTR [rax],0x16
   14000b6ac:	call   0x14000d04c
   14000b6b1:	or     eax,0xffffffff
   14000b6b4:	jmp    0x14000bb2c
   14000b6b9:	test   rdx,rdx
   14000b6bc:	je     0x14000b699
   14000b6be:	lea    rdx,[rip+0x1337b]        # 0x14001ea40
   14000b6c5:	call   0x140013788
   14000b6ca:	test   rax,rax
   14000b6cd:	je     0x14000b6e4
   14000b6cf:	call   0x14000bdf0
   14000b6d4:	mov    edi,0x2
   14000b6d9:	mov    DWORD PTR [rax],edi
   14000b6db:	call   0x14000be10
   14000b6e0:	mov    DWORD PTR [rax],edi
   14000b6e2:	jmp    0x14000b6b1
   14000b6e4:	cmp    BYTE PTR [r12+0x1],0x3a
   14000b6ea:	jne    0x14000b709
   14000b6ec:	cmp    BYTE PTR [r12],r14b
   14000b6f0:	je     0x14000b6f9
   14000b6f2:	cmp    BYTE PTR [r12+0x2],r14b
   14000b6f7:	je     0x14000b6cf
   14000b6f9:	movsx  ecx,BYTE PTR [r12]
   14000b6fe:	call   0x14001368c
   14000b703:	lea    r15d,[rax-0x60]
   14000b707:	jmp    0x14000b711
   14000b709:	call   0x1400134b8
   14000b70e:	mov    r15d,eax
   14000b711:	lea    r8,[rsp+0x60]
   14000b716:	xor    r9d,r9d
   14000b719:	xor    edx,edx
   14000b71b:	mov    rcx,r12
   14000b71e:	mov    DWORD PTR [rsp+0x28],r14d
   14000b723:	mov    QWORD PTR [rsp+0x20],r14
   14000b728:	call   QWORD PTR [rip+0xea02]        # 0x14001a130
   14000b72e:	or     rbx,0xffffffffffffffff
   14000b732:	mov    rsi,rax
   14000b735:	cmp    rax,rbx
   14000b738:	jne    0x14000b8fd
   14000b73e:	lea    rdx,[rip+0x132f7]        # 0x14001ea3c
   14000b745:	mov    rcx,r12
   14000b748:	call   0x140013788
   14000b74d:	test   rax,rax
   14000b750:	je     0x14000b8e5
   14000b756:	call   0x14000bdf0
   14000b75b:	mov    r14d,DWORD PTR [rax]
   14000b75e:	call   0x14000bdf0
   14000b763:	lea    rcx,[rbp+0xa0]
   14000b76a:	and    DWORD PTR [rax],r13d
   14000b76d:	mov    r8d,0x104
   14000b773:	mov    rdx,r12
   14000b776:	call   0x14001229c
   14000b77b:	mov    rsi,rax
   14000b77e:	test   rax,rax
   14000b781:	je     0x14000b78d
   14000b783:	call   0x14000bdf0
   14000b788:	mov    DWORD PTR [rax],r14d
   14000b78b:	jmp    0x14000b7b6
   14000b78d:	call   0x14000bdf0
   14000b792:	cmp    DWORD PTR [rax],0x22
   14000b795:	jne    0x14000b8e5
   14000b79b:	call   0x14000bdf0
   14000b7a0:	xor    r8d,r8d
   14000b7a3:	mov    rdx,r12
   14000b7a6:	xor    ecx,ecx
   14000b7a8:	mov    DWORD PTR [rax],r14d
   14000b7ab:	call   0x14001229c
   14000b7b0:	mov    r13,rax
   14000b7b3:	mov    rsi,rax
   14000b7b6:	xor    r14d,r14d
   14000b7b9:	test   rsi,rsi
   14000b7bc:	je     0x14000b8d8
   14000b7c2:	mov    rcx,rsi
   14000b7c5:	call   0x140009fd0
   14000b7ca:	cmp    rax,0x3
   14000b7ce:	je     0x14000b874
   14000b7d4:	mov    rcx,rsi
   14000b7d7:	call   0x140009fd0
   14000b7dc:	cmp    rax,0x5
   14000b7e0:	jb     0x14000b8d8
   14000b7e6:	mov    r8b,0x5c
   14000b7e9:	mov    dl,0x2f
   14000b7eb:	cmp    BYTE PTR [rsi],r8b
   14000b7ee:	je     0x14000b7f8
   14000b7f0:	cmp    BYTE PTR [rsi],dl
   14000b7f2:	jne    0x14000b8d8
   14000b7f8:	mov    al,BYTE PTR [rsi+0x1]
   14000b7fb:	cmp    al,r8b
   14000b7fe:	je     0x14000b808
   14000b800:	cmp    al,dl
   14000b802:	jne    0x14000b8d8
   14000b808:	mov    al,BYTE PTR [rsi+0x2]
   14000b80b:	cmp    al,r8b
   14000b80e:	je     0x14000b8d8
   14000b814:	cmp    al,dl
   14000b816:	je     0x14000b8d8
   14000b81c:	lea    rax,[rsi+0x3]
   14000b820:	mov    cl,BYTE PTR [rax]
   14000b822:	test   cl,cl
   14000b824:	je     0x14000b8d8
   14000b82a:	cmp    cl,r8b
   14000b82d:	je     0x14000b83c
   14000b82f:	cmp    cl,dl
   14000b831:	je     0x14000b83c
   14000b833:	inc    rax
   14000b836:	mov    cl,BYTE PTR [rax]
   14000b838:	test   cl,cl
   14000b83a:	jne    0x14000b82a
   14000b83c:	cmp    BYTE PTR [rax],r14b
   14000b83f:	je     0x14000b8d8
   14000b845:	inc    rax
   14000b848:	cmp    BYTE PTR [rax],r14b
   14000b84b:	je     0x14000b8d8
   14000b851:	mov    cl,BYTE PTR [rax]
   14000b853:	test   cl,cl
   14000b855:	je     0x14000b874
   14000b857:	cmp    cl,r8b
   14000b85a:	je     0x14000b869
   14000b85c:	cmp    cl,dl
   14000b85e:	je     0x14000b869
   14000b860:	inc    rax
   14000b863:	mov    cl,BYTE PTR [rax]
   14000b865:	test   cl,cl
   14000b867:	jne    0x14000b857
   14000b869:	cmp    BYTE PTR [rax],r14b
   14000b86c:	je     0x14000b874
   14000b86e:	cmp    BYTE PTR [rax+0x1],r14b
   14000b872:	jne    0x14000b8d8
   14000b874:	mov    rcx,rsi
   14000b877:	call   QWORD PTR [rip+0xe8ab]        # 0x14001a128
   14000b87d:	mov    esi,0x1
   14000b882:	cmp    eax,esi
   14000b884:	jbe    0x14000b8d8
   14000b886:	test   r13,r13
   14000b889:	je     0x14000b893
   14000b88b:	mov    rcx,r13
   14000b88e:	call   0x14000b490
   14000b893:	mov    DWORD PTR [rsp+0x30],ebx
   14000b897:	xor    r9d,r9d
   14000b89a:	mov    r8d,esi
   14000b89d:	mov    edx,esi
   14000b89f:	mov    ecx,0x7bc
   14000b8a4:	mov    DWORD PTR [rsp+0x28],r14d
   14000b8a9:	mov    DWORD PTR [rsp+0x60],0x10
   14000b8b1:	mov    QWORD PTR [rsp+0x7c],r14
   14000b8b6:	mov    BYTE PTR [rbp-0x74],r14b
   14000b8ba:	mov    DWORD PTR [rsp+0x20],r14d
   14000b8bf:	call   0x1400131ec
   14000b8c4:	mov    r13d,r14d
   14000b8c7:	mov    QWORD PTR [rdi+0x20],rax
   14000b8cb:	mov    QWORD PTR [rdi+0x18],rax
   14000b8cf:	mov    QWORD PTR [rdi+0x28],rax
   14000b8d3:	jmp    0x14000bad2
   14000b8d8:	test   r13,r13
   14000b8db:	je     0x14000b8e5
   14000b8dd:	mov    rcx,r13
   14000b8e0:	call   0x14000b490
   14000b8e5:	call   0x14000bdf0
   14000b8ea:	mov    edi,0x2
   14000b8ef:	mov    DWORD PTR [rax],edi
   14000b8f1:	call   0x14000be10
   14000b8f6:	mov    DWORD PTR [rax],edi
   14000b8f8:	jmp    0x14000bb2a
   14000b8fd:	test   DWORD PTR [rsp+0x60],0x400
   14000b905:	je     0x14000b953
   14000b907:	cmp    DWORD PTR [rbp-0x7c],0xa000000c
   14000b90e:	jne    0x14000b953
   14000b910:	lea    rcx,[rsp+0x40]
   14000b915:	mov    r9d,0x40
   14000b91b:	xor    r8d,r8d
   14000b91e:	mov    rdx,r12
   14000b921:	mov    DWORD PTR [rsp+0x40],ebx
   14000b925:	mov    DWORD PTR [rsp+0x20],r14d
   14000b92a:	call   0x1400131b8
   14000b92f:	test   eax,eax
   14000b931:	jne    0x14000b8e5
   14000b933:	mov    ecx,DWORD PTR [rsp+0x40]
   14000b937:	cmp    ecx,ebx
   14000b939:	je     0x14000b8e5
   14000b93b:	mov    rdx,rdi
   14000b93e:	call   0x1400124b0
   14000b943:	mov    ecx,DWORD PTR [rsp+0x40]
   14000b947:	mov    ebx,eax
   14000b949:	call   0x140010ecc
   14000b94e:	jmp    0x14000bb2a
   14000b953:	cmp    DWORD PTR [rsp+0x74],r14d
   14000b958:	jne    0x14000b967
   14000b95a:	cmp    DWORD PTR [rsp+0x78],r14d
   14000b95f:	jne    0x14000b967
   14000b961:	mov    QWORD PTR [rdi+0x20],r14
   14000b965:	jmp    0x14000b9ce
   14000b967:	lea    rdx,[rsp+0x40]
   14000b96c:	lea    rcx,[rsp+0x74]
   14000b971:	call   QWORD PTR [rip+0xe7a9]        # 0x14001a120
   14000b977:	test   eax,eax
   14000b979:	je     0x14000bb14
   14000b97f:	lea    rdx,[rsp+0x48]
   14000b984:	lea    rcx,[rsp+0x40]
   14000b989:	call   QWORD PTR [rip+0xe789]        # 0x14001a118
   14000b98f:	test   eax,eax
   14000b991:	je     0x14000bb14
   14000b997:	movzx  eax,WORD PTR [rsp+0x54]
   14000b99c:	movzx  r10d,WORD PTR [rsp+0x52]
   14000b9a2:	movzx  r9d,WORD PTR [rsp+0x50]
   14000b9a8:	movzx  r8d,WORD PTR [rsp+0x4e]
   14000b9ae:	movzx  edx,WORD PTR [rsp+0x4a]
   14000b9b3:	movzx  ecx,WORD PTR [rsp+0x48]
   14000b9b8:	mov    DWORD PTR [rsp+0x30],ebx
   14000b9bc:	mov    DWORD PTR [rsp+0x28],eax
   14000b9c0:	mov    DWORD PTR [rsp+0x20],r10d
   14000b9c5:	call   0x1400131ec
   14000b9ca:	mov    QWORD PTR [rdi+0x20],rax
   14000b9ce:	cmp    DWORD PTR [rsp+0x6c],r14d
   14000b9d3:	jne    0x14000b9e2
   14000b9d5:	cmp    DWORD PTR [rsp+0x70],r14d
   14000b9da:	jne    0x14000b9e2
   14000b9dc:	mov    rax,QWORD PTR [rdi+0x20]
   14000b9e0:	jmp    0x14000ba45
   14000b9e2:	lea    rdx,[rsp+0x40]
   14000b9e7:	lea    rcx,[rsp+0x6c]
   14000b9ec:	call   QWORD PTR [rip+0xe72e]        # 0x14001a120
   14000b9f2:	test   eax,eax
   14000b9f4:	je     0x14000bb14
   14000b9fa:	lea    rdx,[rsp+0x48]
   14000b9ff:	lea    rcx,[rsp+0x40]
   14000ba04:	call   QWORD PTR [rip+0xe70e]        # 0x14001a118
   14000ba0a:	test   eax,eax
   14000ba0c:	je     0x14000bb14
   14000ba12:	movzx  eax,WORD PTR [rsp+0x54]
   14000ba17:	movzx  r10d,WORD PTR [rsp+0x52]
   14000ba1d:	movzx  r9d,WORD PTR [rsp+0x50]
   14000ba23:	movzx  r8d,WORD PTR [rsp+0x4e]
   14000ba29:	movzx  edx,WORD PTR [rsp+0x4a]
   14000ba2e:	movzx  ecx,WORD PTR [rsp+0x48]
   14000ba33:	mov    DWORD PTR [rsp+0x30],ebx
   14000ba37:	mov    DWORD PTR [rsp+0x28],eax
   14000ba3b:	mov    DWORD PTR [rsp+0x20],r10d
   14000ba40:	call   0x1400131ec
   14000ba45:	mov    QWORD PTR [rdi+0x18],rax
   14000ba49:	cmp    DWORD PTR [rsp+0x64],r14d
   14000ba4e:	jne    0x14000ba5d
   14000ba50:	cmp    DWORD PTR [rsp+0x68],r14d
   14000ba55:	jne    0x14000ba5d
   14000ba57:	mov    rax,QWORD PTR [rdi+0x20]
   14000ba5b:	jmp    0x14000bac0
   14000ba5d:	lea    rdx,[rsp+0x40]
   14000ba62:	lea    rcx,[rsp+0x64]
   14000ba67:	call   QWORD PTR [rip+0xe6b3]        # 0x14001a120
   14000ba6d:	test   eax,eax
   14000ba6f:	je     0x14000bb14
   14000ba75:	lea    rdx,[rsp+0x48]
   14000ba7a:	lea    rcx,[rsp+0x40]
   14000ba7f:	call   QWORD PTR [rip+0xe693]        # 0x14001a118
   14000ba85:	test   eax,eax
   14000ba87:	je     0x14000bb14
   14000ba8d:	movzx  eax,WORD PTR [rsp+0x54]
   14000ba92:	movzx  r10d,WORD PTR [rsp+0x52]
   14000ba98:	movzx  r9d,WORD PTR [rsp+0x50]
   14000ba9e:	movzx  r8d,WORD PTR [rsp+0x4e]
   14000baa4:	movzx  edx,WORD PTR [rsp+0x4a]
   14000baa9:	movzx  ecx,WORD PTR [rsp+0x48]
   14000baae:	mov    DWORD PTR [rsp+0x30],ebx
   14000bab2:	mov    DWORD PTR [rsp+0x28],eax
   14000bab6:	mov    DWORD PTR [rsp+0x20],r10d
   14000babb:	call   0x1400131ec
   14000bac0:	mov    rcx,rsi
   14000bac3:	mov    QWORD PTR [rdi+0x28],rax
   14000bac7:	call   QWORD PTR [rip+0xe5fb]        # 0x14001a0c8
   14000bacd:	mov    esi,0x1
   14000bad2:	mov    ecx,DWORD PTR [rsp+0x60]
   14000bad6:	mov    rdx,r12
   14000bad9:	call   0x1400123c8
   14000bade:	mov    WORD PTR [rdi+0x8],si
   14000bae2:	mov    WORD PTR [rdi+0x6],ax
   14000bae6:	mov    eax,DWORD PTR [rbp-0x80]
   14000bae9:	mov    DWORD PTR [rdi+0x14],eax
   14000baec:	cmp    DWORD PTR [rsp+0x7c],r14d
   14000baf1:	je     0x14000bafa
   14000baf3:	mov    DWORD PTR [rdi+0x14],r14d
   14000baf7:	mov    r13d,ebx
   14000bafa:	lea    ecx,[r15-0x1]
   14000bafe:	mov    WORD PTR [rdi+0x4],r14w
   14000bb03:	mov    DWORD PTR [rdi+0xa],0x0
   14000bb0a:	mov    DWORD PTR [rdi],ecx
   14000bb0c:	mov    DWORD PTR [rdi+0x10],ecx
   14000bb0f:	mov    eax,r13d
   14000bb12:	jmp    0x14000bb2c
   14000bb14:	call   QWORD PTR [rip+0xe556]        # 0x14001a070
   14000bb1a:	mov    ecx,eax
   14000bb1c:	call   0x14000be30
   14000bb21:	mov    rcx,rsi
   14000bb24:	call   QWORD PTR [rip+0xe59e]        # 0x14001a0c8
   14000bb2a:	mov    eax,ebx
   14000bb2c:	mov    rcx,QWORD PTR [rbp+0x1b0]
   14000bb33:	xor    rcx,rsp
   14000bb36:	call   0x14000a850
   14000bb3b:	mov    rbx,QWORD PTR [rsp+0x310]
   14000bb43:	add    rsp,0x2c0
   14000bb4a:	pop    r15
   14000bb4c:	pop    r14
   14000bb4e:	pop    r13
   14000bb50:	pop    r12
   14000bb52:	pop    rdi
   14000bb53:	pop    rsi
   14000bb54:	pop    rbp
   14000bb55:	ret    
   14000bb56:	int3   
   14000bb57:	int3   
   14000bb58:	mov    r9,rcx
   14000bb5b:	xor    r8d,r8d
   14000bb5e:	mov    al,BYTE PTR [rcx]
   14000bb60:	inc    rcx
   14000bb63:	test   al,al
   14000bb65:	jne    0x14000bb5e
   14000bb67:	dec    rcx
   14000bb6a:	cmp    rcx,r9
   14000bb6d:	je     0x14000bb73
   14000bb6f:	cmp    BYTE PTR [rcx],dl
   14000bb71:	jne    0x14000bb67
   14000bb73:	cmp    BYTE PTR [rcx],dl
   14000bb75:	cmove  r8,rcx
   14000bb79:	mov    rax,r8
   14000bb7c:	ret    
   14000bb7d:	int3   
   14000bb7e:	int3   
   14000bb7f:	int3   
   14000bb80:	mov    rax,rsp
   14000bb83:	mov    QWORD PTR [rax+0x8],rbx
   14000bb87:	mov    QWORD PTR [rax+0x10],rbp
   14000bb8b:	mov    QWORD PTR [rax+0x18],rsi
   14000bb8f:	push   rdi
   14000bb90:	sub    rsp,0x50
   14000bb94:	and    QWORD PTR [rax-0x38],0x0
   14000bb99:	mov    rbx,rdx
   14000bb9c:	xor    edx,edx
   14000bb9e:	mov    rsi,r8
   14000bba1:	mov    rdi,rcx
   14000bba4:	lea    r8d,[rdx+0x28]
   14000bba8:	lea    rcx,[rax-0x30]
   14000bbac:	mov    rbp,r9
   14000bbaf:	call   0x14000a560
   14000bbb4:	test   rsi,rsi
   14000bbb7:	jne    0x14000bbce
   14000bbb9:	call   0x14000bdf0
   14000bbbe:	mov    DWORD PTR [rax],0x16
   14000bbc4:	call   0x14000d04c
   14000bbc9:	or     eax,0xffffffff
   14000bbcc:	jmp    0x14000bc36
   14000bbce:	test   rbx,rbx
   14000bbd1:	je     0x14000bbd8
   14000bbd3:	test   rdi,rdi
   14000bbd6:	je     0x14000bbb9
   14000bbd8:	mov    r9,QWORD PTR [rsp+0x80]
   14000bbe0:	mov    eax,0x7fffffff
   14000bbe5:	lea    rcx,[rsp+0x20]
   14000bbea:	cmp    rbx,rax
   14000bbed:	mov    r8,rbp
   14000bbf0:	mov    rdx,rsi
   14000bbf3:	cmova  ebx,eax
   14000bbf6:	mov    DWORD PTR [rsp+0x38],0x42
   14000bbfe:	mov    QWORD PTR [rsp+0x30],rdi
   14000bc03:	mov    DWORD PTR [rsp+0x28],ebx
   14000bc07:	mov    QWORD PTR [rsp+0x20],rdi
   14000bc0c:	call   0x14000de34
   14000bc11:	mov    ebx,eax
   14000bc13:	test   rdi,rdi
   14000bc16:	je     0x14000bc36
   14000bc18:	dec    DWORD PTR [rsp+0x28]
   14000bc1c:	js     0x14000bc28
   14000bc1e:	mov    rax,QWORD PTR [rsp+0x20]
   14000bc23:	mov    BYTE PTR [rax],0x0
   14000bc26:	jmp    0x14000bc34
   14000bc28:	lea    rdx,[rsp+0x20]
   14000bc2d:	xor    ecx,ecx
   14000bc2f:	call   0x14001084c
   14000bc34:	mov    eax,ebx
   14000bc36:	mov    rbx,QWORD PTR [rsp+0x60]
   14000bc3b:	mov    rbp,QWORD PTR [rsp+0x68]
   14000bc40:	mov    rsi,QWORD PTR [rsp+0x70]
   14000bc45:	add    rsp,0x50
   14000bc49:	pop    rdi
   14000bc4a:	ret    
   14000bc4b:	int3   
   14000bc4c:	sub    rsp,0x38
   14000bc50:	mov    QWORD PTR [rsp+0x20],r9
   14000bc55:	xor    r9d,r9d
   14000bc58:	call   0x14000bb80
   14000bc5d:	add    rsp,0x38
   14000bc61:	ret    
   14000bc62:	int3   
   14000bc63:	int3   
   14000bc64:	mov    rax,rsp
   14000bc67:	mov    QWORD PTR [rax+0x8],rbx
   14000bc6b:	mov    QWORD PTR [rax+0x10],rbp
   14000bc6f:	mov    QWORD PTR [rax+0x18],rsi
   14000bc73:	push   rdi
   14000bc74:	sub    rsp,0x50
   14000bc78:	and    QWORD PTR [rax-0x38],0x0
   14000bc7d:	mov    rbx,rdx
   14000bc80:	xor    edx,edx
   14000bc82:	mov    rsi,r8
   14000bc85:	mov    rbp,rcx
   14000bc88:	lea    r8d,[rdx+0x28]
   14000bc8c:	lea    rcx,[rax-0x30]
   14000bc90:	mov    rdi,r9
   14000bc93:	call   0x14000a560
   14000bc98:	test   rbx,rbx
   14000bc9b:	jne    0x14000bcb2
   14000bc9d:	call   0x14000bdf0
   14000bca2:	mov    DWORD PTR [rax],0x16
   14000bca8:	call   0x14000d04c
   14000bcad:	or     eax,0xffffffff
   14000bcb0:	jmp    0x14000bcde
   14000bcb2:	and    QWORD PTR [rsp+0x30],0x0
   14000bcb8:	and    QWORD PTR [rsp+0x20],0x0
   14000bcbe:	lea    rcx,[rsp+0x20]
   14000bcc3:	mov    r9,rdi
   14000bcc6:	mov    r8,rsi
   14000bcc9:	mov    rdx,rbx
   14000bccc:	mov    DWORD PTR [rsp+0x28],0x7fffffff
   14000bcd4:	mov    DWORD PTR [rsp+0x38],0x42
   14000bcdc:	call   rbp
   14000bcde:	mov    rbx,QWORD PTR [rsp+0x60]
   14000bce3:	mov    rbp,QWORD PTR [rsp+0x68]
   14000bce8:	mov    rsi,QWORD PTR [rsp+0x70]
   14000bced:	add    rsp,0x50
   14000bcf1:	pop    rdi
   14000bcf2:	ret    
   14000bcf3:	int3   
   14000bcf4:	mov    r9,rdx
   14000bcf7:	mov    rdx,rcx
   14000bcfa:	lea    rcx,[rip+0x2133]        # 0x14000de34
   14000bd01:	xor    r8d,r8d
   14000bd04:	jmp    0x14000bc64
   14000bd09:	int3   
   14000bd0a:	int3   
   14000bd0b:	int3   
   14000bd0c:	mov    QWORD PTR [rsp+0x8],rbx
   14000bd11:	push   rdi
   14000bd12:	sub    rsp,0x30
   14000bd16:	mov    edi,ecx
   14000bd18:	call   0x14000d1b0
   14000bd1d:	mov    rbx,rax
   14000bd20:	test   rax,rax
   14000bd23:	jne    0x14000bd37
   14000bd25:	lea    rax,[rip+0x12d24]        # 0x14001ea50
   14000bd2c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000bd31:	add    rsp,0x30
   14000bd35:	pop    rdi
   14000bd36:	ret    
   14000bd37:	cmp    QWORD PTR [rax+0x38],0x0
   14000bd3c:	jne    0x14000bd56
   14000bd3e:	mov    edx,0x1
   14000bd43:	mov    ecx,0x86
   14000bd48:	call   0x140010bd0
   14000bd4d:	mov    QWORD PTR [rbx+0x38],rax
   14000bd51:	test   rax,rax
   14000bd54:	je     0x14000bd25
   14000bd56:	mov    rbx,QWORD PTR [rbx+0x38]
   14000bd5a:	test   edi,edi
   14000bd5c:	js     0x14000bd67
   14000bd5e:	call   0x1400115a4
   14000bd63:	cmp    edi,DWORD PTR [rax]
   14000bd65:	jl     0x14000bd6e
   14000bd67:	call   0x1400115a4
   14000bd6c:	mov    edi,DWORD PTR [rax]
   14000bd6e:	call   0x1400115ac
   14000bd73:	movsxd rcx,edi
   14000bd76:	mov    edx,0x86
   14000bd7b:	mov    r8,QWORD PTR [rax+rcx*8]
   14000bd7f:	mov    rcx,rbx
   14000bd82:	call   0x14000eae0
   14000bd87:	test   eax,eax
   14000bd89:	jne    0x14000bd90
   14000bd8b:	mov    rax,rbx
   14000bd8e:	jmp    0x14000bd2c
   14000bd90:	and    QWORD PTR [rsp+0x20],0x0
   14000bd96:	xor    r9d,r9d
   14000bd99:	xor    r8d,r8d
   14000bd9c:	xor    edx,edx
   14000bd9e:	xor    ecx,ecx
   14000bda0:	call   0x14000cfa8
   14000bda5:	int3   
   14000bda6:	int3   
   14000bda7:	int3   
   14000bda8:	lea    r9,[rip+0x176e1]        # 0x140023490
   14000bdaf:	xor    eax,eax
   14000bdb1:	mov    rdx,r9
   14000bdb4:	lea    r8d,[rax+0x8]
   14000bdb8:	cmp    ecx,DWORD PTR [rdx]
   14000bdba:	je     0x14000bde7
   14000bdbc:	inc    eax
   14000bdbe:	add    rdx,r8
   14000bdc1:	cmp    eax,0x2d
   14000bdc4:	jb     0x14000bdb8
   14000bdc6:	lea    eax,[rcx-0x13]
   14000bdc9:	cmp    eax,0x11
   14000bdcc:	ja     0x14000bdd4
   14000bdce:	mov    eax,0xd
   14000bdd3:	ret    
   14000bdd4:	add    ecx,0xffffff44
   14000bdda:	mov    eax,0x16
   14000bddf:	cmp    ecx,0xe
   14000bde2:	cmovbe eax,r8d
   14000bde6:	ret    
   14000bde7:	cdqe   
   14000bde9:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   14000bdee:	ret    
   14000bdef:	int3   
   14000bdf0:	sub    rsp,0x28
   14000bdf4:	call   0x14000d1b0
   14000bdf9:	test   rax,rax
   14000bdfc:	jne    0x14000be07
   14000bdfe:	lea    rax,[rip+0x177f3]        # 0x1400235f8
   14000be05:	jmp    0x14000be0b
   14000be07:	add    rax,0x10
   14000be0b:	add    rsp,0x28
   14000be0f:	ret    
   14000be10:	sub    rsp,0x28
   14000be14:	call   0x14000d1b0
   14000be19:	test   rax,rax
   14000be1c:	jne    0x14000be27
   14000be1e:	lea    rax,[rip+0x177d7]        # 0x1400235fc
   14000be25:	jmp    0x14000be2b
   14000be27:	add    rax,0x14
   14000be2b:	add    rsp,0x28
   14000be2f:	ret    
   14000be30:	rex push rbx
   14000be32:	sub    rsp,0x20
   14000be36:	mov    ebx,ecx
   14000be38:	call   0x14000d1b0
   14000be3d:	test   rax,rax
   14000be40:	jne    0x14000be4b
   14000be42:	lea    rax,[rip+0x177b3]        # 0x1400235fc
   14000be49:	jmp    0x14000be4f
   14000be4b:	add    rax,0x14
   14000be4f:	mov    DWORD PTR [rax],ebx
   14000be51:	call   0x14000d1b0
   14000be56:	lea    r10,[rip+0x1779b]        # 0x1400235f8
   14000be5d:	test   rax,rax
   14000be60:	je     0x14000be66
   14000be62:	lea    r10,[rax+0x10]
   14000be66:	mov    ecx,ebx
   14000be68:	call   0x14000bda8
   14000be6d:	mov    DWORD PTR [r10],eax
   14000be70:	add    rsp,0x20
   14000be74:	pop    rbx
   14000be75:	ret    
   14000be76:	int3   
   14000be77:	int3   
   14000be78:	mov    QWORD PTR [rsp+0x8],rbx
   14000be7d:	mov    QWORD PTR [rsp+0x10],rsi
   14000be82:	push   rdi
   14000be83:	sub    rsp,0x20
   14000be87:	mov    eax,DWORD PTR [rcx+0x18]
   14000be8a:	xor    esi,esi
   14000be8c:	mov    rbx,rcx
   14000be8f:	and    al,0x3
   14000be91:	cmp    al,0x2
   14000be93:	jne    0x14000bed4
   14000be95:	test   DWORD PTR [rcx+0x18],0x108
   14000be9c:	je     0x14000bed4
   14000be9e:	mov    edi,DWORD PTR [rcx]
   14000bea0:	sub    edi,DWORD PTR [rcx+0x10]
   14000bea3:	test   edi,edi
   14000bea5:	jle    0x14000bed4
   14000bea7:	call   0x140010b28
   14000beac:	mov    rdx,QWORD PTR [rbx+0x10]
   14000beb0:	mov    r8d,edi
   14000beb3:	mov    ecx,eax
   14000beb5:	call   0x1400121bc
   14000beba:	cmp    eax,edi
   14000bebc:	jne    0x14000becd
   14000bebe:	mov    eax,DWORD PTR [rbx+0x18]
   14000bec1:	test   al,al
   14000bec3:	jns    0x14000bed4
   14000bec5:	and    eax,0xfffffffd
   14000bec8:	mov    DWORD PTR [rbx+0x18],eax
   14000becb:	jmp    0x14000bed4
   14000becd:	or     DWORD PTR [rbx+0x18],0x20
   14000bed1:	or     esi,0xffffffff
   14000bed4:	mov    rcx,QWORD PTR [rbx+0x10]
   14000bed8:	and    DWORD PTR [rbx+0x8],0x0
   14000bedc:	mov    eax,esi
   14000bede:	mov    rsi,QWORD PTR [rsp+0x38]
   14000bee3:	mov    QWORD PTR [rbx],rcx
   14000bee6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000beeb:	add    rsp,0x20
   14000beef:	pop    rdi
   14000bef0:	ret    
   14000bef1:	int3   
   14000bef2:	int3   
   14000bef3:	int3   
   14000bef4:	rex push rbx
   14000bef6:	sub    rsp,0x20
   14000befa:	mov    rbx,rcx
   14000befd:	test   rcx,rcx
   14000bf00:	jne    0x14000bf0c
   14000bf02:	add    rsp,0x20
   14000bf06:	pop    rbx
   14000bf07:	jmp    0x14000bf40
   14000bf0c:	call   0x14000be78
   14000bf11:	test   eax,eax
   14000bf13:	je     0x14000bf1a
   14000bf15:	or     eax,0xffffffff
   14000bf18:	jmp    0x14000bf3a
   14000bf1a:	test   DWORD PTR [rbx+0x18],0x4000
   14000bf21:	je     0x14000bf38
   14000bf23:	mov    rcx,rbx
   14000bf26:	call   0x140010b28
   14000bf2b:	mov    ecx,eax
   14000bf2d:	call   0x140013850
   14000bf32:	neg    eax
   14000bf34:	sbb    eax,eax
   14000bf36:	jmp    0x14000bf3a
   14000bf38:	xor    eax,eax
   14000bf3a:	add    rsp,0x20
   14000bf3e:	pop    rbx
   14000bf3f:	ret    
   14000bf40:	mov    QWORD PTR [rsp+0x8],rbx
   14000bf45:	mov    QWORD PTR [rsp+0x10],rsi
   14000bf4a:	mov    QWORD PTR [rsp+0x18],rdi
   14000bf4f:	push   r12
   14000bf51:	push   r13
   14000bf53:	push   r15
   14000bf55:	sub    rsp,0x30
   14000bf59:	mov    r13d,ecx
   14000bf5c:	xor    esi,esi
   14000bf5e:	xor    edi,edi
   14000bf60:	lea    ecx,[rsi+0x1]
   14000bf63:	call   0x14000cb58
   14000bf68:	nop
   14000bf69:	xor    ebx,ebx
   14000bf6b:	or     r15d,0xffffffff
   14000bf6f:	mov    DWORD PTR [rsp+0x20],ebx
   14000bf73:	cmp    ebx,DWORD PTR [rip+0x1ad27]        # 0x140026ca0
   14000bf79:	jge    0x14000bfff
   14000bf7f:	movsxd r12,ebx
   14000bf82:	mov    rax,QWORD PTR [rip+0x19cff]        # 0x140025c88
   14000bf89:	cmp    QWORD PTR [rax+r12*8],0x0
   14000bf8e:	je     0x14000bff8
   14000bf90:	mov    rdx,QWORD PTR [rax+r12*8]
   14000bf94:	test   BYTE PTR [rdx+0x18],0x83
   14000bf98:	je     0x14000bff8
   14000bf9a:	mov    ecx,ebx
   14000bf9c:	call   0x14000ad3c
   14000bfa1:	nop
   14000bfa2:	mov    rax,QWORD PTR [rip+0x19cdf]        # 0x140025c88
   14000bfa9:	mov    rcx,QWORD PTR [rax+r12*8]
   14000bfad:	test   BYTE PTR [rcx+0x18],0x83
   14000bfb1:	je     0x14000bfe6
   14000bfb3:	cmp    r13d,0x1
   14000bfb7:	jne    0x14000bfcb
   14000bfb9:	call   0x14000bef4
   14000bfbe:	cmp    eax,r15d
   14000bfc1:	je     0x14000bfe6
   14000bfc3:	inc    esi
   14000bfc5:	mov    DWORD PTR [rsp+0x24],esi
   14000bfc9:	jmp    0x14000bfe6
   14000bfcb:	test   r13d,r13d
   14000bfce:	jne    0x14000bfe6
   14000bfd0:	test   BYTE PTR [rcx+0x18],0x2
   14000bfd4:	je     0x14000bfe6
   14000bfd6:	call   0x14000bef4
   14000bfdb:	cmp    eax,r15d
   14000bfde:	cmove  edi,r15d
   14000bfe2:	mov    DWORD PTR [rsp+0x28],edi
   14000bfe6:	mov    rdx,QWORD PTR [rip+0x19c9b]        # 0x140025c88
   14000bfed:	mov    rdx,QWORD PTR [rdx+r12*8]
   14000bff1:	mov    ecx,ebx
   14000bff3:	call   0x14000adbc
   14000bff8:	inc    ebx
   14000bffa:	jmp    0x14000bf6f
   14000bfff:	mov    ecx,0x1
   14000c004:	call   0x14000ca58
   14000c009:	cmp    r13d,0x1
   14000c00d:	cmove  edi,esi
   14000c010:	mov    eax,edi
   14000c012:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c017:	mov    rsi,QWORD PTR [rsp+0x58]
   14000c01c:	mov    rdi,QWORD PTR [rsp+0x60]
   14000c021:	add    rsp,0x30
   14000c025:	pop    r15
   14000c027:	pop    r13
   14000c029:	pop    r12
   14000c02b:	ret    
   14000c02c:	mov    QWORD PTR [rsp+0x10],rbx
   14000c031:	mov    QWORD PTR [rsp+0x8],rcx
   14000c036:	push   rdi
   14000c037:	sub    rsp,0x20
   14000c03b:	mov    rbx,rcx
   14000c03e:	test   rcx,rcx
   14000c041:	jne    0x14000c04a
   14000c043:	call   0x14000bf40
   14000c048:	jmp    0x14000c064
   14000c04a:	call   0x14000acd8
   14000c04f:	nop
   14000c050:	mov    rcx,rbx
   14000c053:	call   0x14000bef4
   14000c058:	mov    edi,eax
   14000c05a:	mov    rcx,rbx
   14000c05d:	call   0x14000ad70
   14000c062:	mov    eax,edi
   14000c064:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c069:	add    rsp,0x20
   14000c06d:	pop    rdi
   14000c06e:	ret    
   14000c06f:	int3   
   14000c070:	mov    ecx,0x1
   14000c075:	jmp    0x14000bf40
   14000c07a:	int3   
   14000c07b:	int3   
   14000c07c:	jmp    0x14000c085
   14000c07e:	cmp    al,dl
   14000c080:	je     0x14000c08f
   14000c082:	inc    rcx
   14000c085:	mov    al,BYTE PTR [rcx]
   14000c087:	test   al,al
   14000c089:	jne    0x14000c07e
   14000c08b:	cmp    al,dl
   14000c08d:	jne    0x14000c093
   14000c08f:	mov    rax,rcx
   14000c092:	ret    
   14000c093:	xor    eax,eax
   14000c095:	ret    
   14000c096:	int3   
   14000c097:	int3   
   14000c098:	mov    QWORD PTR [rsp+0x8],rbx
   14000c09d:	push   rbp
   14000c09e:	push   rsi
   14000c09f:	push   rdi
   14000c0a0:	push   r12
   14000c0a2:	push   r14
   14000c0a4:	mov    rbp,rsp
   14000c0a7:	sub    rsp,0x30
   14000c0ab:	and    QWORD PTR [rbp+0x48],0x0
   14000c0b0:	cmp    DWORD PTR [rip+0x1abf9],0x0        # 0x140026cb0
   14000c0b7:	mov    rsi,rdx
   14000c0ba:	mov    rdi,rcx
   14000c0bd:	jne    0x14000c0c7
   14000c0bf:	or     eax,0xffffffff
   14000c0c2:	jmp    0x14000c307
   14000c0c7:	test   rcx,rcx
   14000c0ca:	jne    0x14000c0de
   14000c0cc:	call   0x14000bdf0
   14000c0d1:	mov    DWORD PTR [rax],0x16
   14000c0d7:	call   0x14000d04c
   14000c0dc:	jmp    0x14000c0bf
   14000c0de:	test   rdx,rdx
   14000c0e1:	jne    0x14000c142
   14000c0e3:	lea    r14d,[rdx+0x3d]
   14000c0e7:	mov    edx,r14d
   14000c0ea:	call   0x140014188
   14000c0ef:	test   rax,rax
   14000c0f2:	je     0x14000c114
   14000c0f4:	mov    rcx,rax
   14000c0f7:	mov    ebx,0x7fff
   14000c0fc:	sub    rcx,rdi
   14000c0ff:	cmp    rcx,rbx
   14000c102:	jge    0x14000c0cc
   14000c104:	lea    rcx,[rax+0x1]
   14000c108:	mov    edx,ebx
   14000c10a:	call   0x14000eb88
   14000c10f:	cmp    rax,rbx
   14000c112:	jae    0x14000c0cc
   14000c114:	mov    rcx,rdi
   14000c117:	call   0x140009fd0
   14000c11c:	mov    edx,0x1
   14000c121:	lea    rcx,[rax+0x1]
   14000c125:	mov    rbx,rax
   14000c128:	call   0x140010bd0
   14000c12d:	mov    QWORD PTR [rbp+0x48],rax
   14000c131:	test   rax,rax
   14000c134:	je     0x14000c0bf
   14000c136:	mov    r8,rdi
   14000c139:	lea    rdx,[rbx+0x1]
   14000c13d:	mov    rcx,rax
   14000c140:	jmp    0x14000c1bc
   14000c142:	mov    ebx,0x7fff
   14000c147:	mov    edx,ebx
   14000c149:	call   0x14000eb88
   14000c14e:	mov    edx,ebx
   14000c150:	mov    rcx,rsi
   14000c153:	mov    r12,rax
   14000c156:	call   0x14000eb88
   14000c15b:	cmp    r12,rbx
   14000c15e:	jae    0x14000c0cc
   14000c164:	cmp    rax,rbx
   14000c167:	jae    0x14000c0cc
   14000c16d:	lea    rbx,[rax+r12*1+0x2]
   14000c172:	mov    edx,0x1
   14000c177:	mov    rcx,rbx
   14000c17a:	call   0x140010bd0
   14000c17f:	mov    QWORD PTR [rbp+0x48],rax
   14000c183:	test   rax,rax
   14000c186:	je     0x14000c0bf
   14000c18c:	mov    r8,rdi
   14000c18f:	mov    rdx,rbx
   14000c192:	mov    rcx,rax
   14000c195:	call   0x14000eae0
   14000c19a:	mov    rax,QWORD PTR [rbp+0x48]
   14000c19e:	mov    r14d,0x3d
   14000c1a4:	mov    BYTE PTR [r12+rax*1],r14b
   14000c1a8:	mov    rax,QWORD PTR [rbp+0x48]
   14000c1ac:	inc    r12
   14000c1af:	sub    rbx,r12
   14000c1b2:	mov    r8,rsi
   14000c1b5:	lea    rcx,[r12+rax*1]
   14000c1b9:	mov    rdx,rbx
   14000c1bc:	call   0x14000eae0
   14000c1c1:	lea    rcx,[rbp+0x48]
   14000c1c5:	mov    edx,0x1
   14000c1ca:	call   0x140013d00
   14000c1cf:	test   eax,eax
   14000c1d1:	je     0x14000c1ea
   14000c1d3:	mov    rcx,QWORD PTR [rbp+0x48]
   14000c1d7:	test   rcx,rcx
   14000c1da:	je     0x14000c0bf
   14000c1e0:	call   0x14000b490
   14000c1e5:	jmp    0x14000c0bf
   14000c1ea:	cmp    QWORD PTR [rip+0x187b6],0x0        # 0x1400249a8
   14000c1f2:	je     0x14000c305
   14000c1f8:	and    DWORD PTR [rsp+0x28],0x0
   14000c1fd:	and    QWORD PTR [rbp+0x40],0x0
   14000c202:	and    QWORD PTR [rsp+0x20],0x0
   14000c208:	or     ebx,0xffffffff
   14000c20b:	mov    r8,rdi
   14000c20e:	xor    edx,edx
   14000c210:	mov    r9d,ebx
   14000c213:	xor    ecx,ecx
   14000c215:	call   QWORD PTR [rip+0xdf1d]        # 0x14001a138
   14000c21b:	mov    r12d,eax
   14000c21e:	test   eax,eax
   14000c220:	jne    0x14000c234
   14000c222:	call   0x14000bdf0
   14000c227:	mov    DWORD PTR [rax],0x2a
   14000c22d:	mov    eax,ebx
   14000c22f:	jmp    0x14000c307
   14000c234:	test   rsi,rsi
   14000c237:	je     0x14000c25d
   14000c239:	and    DWORD PTR [rsp+0x28],0x0
   14000c23e:	and    QWORD PTR [rsp+0x20],0x0
   14000c244:	mov    r9d,ebx
   14000c247:	mov    r8,rsi
   14000c24a:	xor    edx,edx
   14000c24c:	xor    ecx,ecx
   14000c24e:	call   QWORD PTR [rip+0xdee4]        # 0x14001a138
   14000c254:	test   eax,eax
   14000c256:	je     0x14000c222
   14000c258:	lea    r12d,[r12+rax*1+0x1]
   14000c25d:	movsxd rcx,r12d
   14000c260:	mov    edx,0x2
   14000c265:	call   0x140010bd0
   14000c26a:	mov    QWORD PTR [rbp+0x40],rax
   14000c26e:	test   rax,rax
   14000c271:	je     0x14000c22d
   14000c273:	mov    r9d,ebx
   14000c276:	mov    r8,rdi
   14000c279:	xor    edx,edx
   14000c27b:	xor    ecx,ecx
   14000c27d:	mov    DWORD PTR [rsp+0x28],r12d
   14000c282:	mov    QWORD PTR [rsp+0x20],rax
   14000c287:	call   QWORD PTR [rip+0xdeab]        # 0x14001a138
   14000c28d:	test   eax,eax
   14000c28f:	jne    0x14000c29c
   14000c291:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c295:	call   0x14000b490
   14000c29a:	jmp    0x14000c222
   14000c29c:	test   rsi,rsi
   14000c29f:	je     0x14000c2df
   14000c2a1:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c2a5:	call   0x140013ce4
   14000c2aa:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c2ae:	mov    r9d,ebx
   14000c2b1:	mov    WORD PTR [rcx+rax*2],r14w
   14000c2b6:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c2ba:	inc    rax
   14000c2bd:	sub    r12d,eax
   14000c2c0:	lea    rax,[rcx+rax*2]
   14000c2c4:	mov    r8,rsi
   14000c2c7:	xor    edx,edx
   14000c2c9:	xor    ecx,ecx
   14000c2cb:	mov    DWORD PTR [rsp+0x28],r12d
   14000c2d0:	mov    QWORD PTR [rsp+0x20],rax
   14000c2d5:	call   QWORD PTR [rip+0xde5d]        # 0x14001a138
   14000c2db:	test   eax,eax
   14000c2dd:	je     0x14000c291
   14000c2df:	lea    rcx,[rbp+0x40]
   14000c2e3:	xor    edx,edx
   14000c2e5:	call   0x140013928
   14000c2ea:	test   eax,eax
   14000c2ec:	je     0x14000c305
   14000c2ee:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c2f2:	test   rcx,rcx
   14000c2f5:	je     0x14000c22d
   14000c2fb:	call   0x14000b490
   14000c300:	jmp    0x14000c22d
   14000c305:	xor    eax,eax
   14000c307:	mov    rbx,QWORD PTR [rsp+0x60]
   14000c30c:	add    rsp,0x30
   14000c310:	pop    r14
   14000c312:	pop    r12
   14000c314:	pop    rdi
   14000c315:	pop    rsi
   14000c316:	pop    rbp
   14000c317:	ret    
   14000c318:	rex push rbx
   14000c31a:	sub    rsp,0x20
   14000c31e:	mov    rbx,rcx
   14000c321:	mov    ecx,0x7
   14000c326:	call   0x14000cb58
   14000c32b:	nop
   14000c32c:	xor    edx,edx
   14000c32e:	mov    rcx,rbx
   14000c331:	call   0x14000c098
   14000c336:	mov    ebx,eax
   14000c338:	mov    ecx,0x7
   14000c33d:	call   0x14000ca58
   14000c342:	mov    eax,ebx
   14000c344:	add    rsp,0x20
   14000c348:	pop    rbx
   14000c349:	ret    
   14000c34a:	int3   
   14000c34b:	int3   
   14000c34c:	rex push rbx
   14000c34e:	sub    rsp,0x20
   14000c352:	mov    ebx,edx
   14000c354:	test   rcx,rcx
   14000c357:	jne    0x14000c376
   14000c359:	call   0x14000be10
   14000c35e:	and    DWORD PTR [rax],0x0
   14000c361:	call   0x14000bdf0
   14000c366:	mov    ebx,0x16
   14000c36b:	mov    DWORD PTR [rax],ebx
   14000c36d:	call   0x14000d04c
   14000c372:	mov    eax,ebx
   14000c374:	jmp    0x14000c3c6
   14000c376:	test   edx,0xfffffff9
   14000c37c:	jne    0x14000c359
   14000c37e:	call   QWORD PTR [rip+0xddbc]        # 0x14001a140
   14000c384:	cmp    eax,0xffffffff
   14000c387:	jne    0x14000c39f
   14000c389:	call   QWORD PTR [rip+0xdce1]        # 0x14001a070
   14000c38f:	mov    ecx,eax
   14000c391:	call   0x14000be30
   14000c396:	call   0x14000bdf0
   14000c39b:	mov    eax,DWORD PTR [rax]
   14000c39d:	jmp    0x14000c3c6
   14000c39f:	test   al,0x10
   14000c3a1:	jne    0x14000c3c4
   14000c3a3:	test   al,0x1
   14000c3a5:	je     0x14000c3c4
   14000c3a7:	test   bl,0x2
   14000c3aa:	je     0x14000c3c4
   14000c3ac:	call   0x14000be10
   14000c3b1:	mov    DWORD PTR [rax],0x5
   14000c3b7:	call   0x14000bdf0
   14000c3bc:	mov    DWORD PTR [rax],0xd
   14000c3c2:	jmp    0x14000c396
   14000c3c4:	xor    eax,eax
   14000c3c6:	add    rsp,0x20
   14000c3ca:	pop    rbx
   14000c3cb:	ret    
   14000c3cc:	sub    rsp,0x28
   14000c3d0:	call   0x14000c34c
   14000c3d5:	neg    eax
   14000c3d7:	sbb    eax,eax
   14000c3d9:	add    rsp,0x28
   14000c3dd:	ret    
   14000c3de:	int3   
   14000c3df:	int3   
   14000c3e0:	rex push rbx
   14000c3e2:	sub    rsp,0x20
   14000c3e6:	mov    ebx,ecx
   14000c3e8:	call   0x14000d1b0
   14000c3ed:	test   rax,rax
   14000c3f0:	je     0x14000c3fa
   14000c3f2:	mov    rcx,rax
   14000c3f5:	call   0x14000d38c
   14000c3fa:	mov    ecx,ebx
   14000c3fc:	call   QWORD PTR [rip+0xdd46]        # 0x14001a148
   14000c402:	int3   
   14000c403:	int3   
   14000c404:	sub    rsp,0x28
   14000c408:	call   0x14000d234
   14000c40d:	nop
   14000c40e:	mov    rcx,QWORD PTR [rax+0x98]
   14000c415:	call   QWORD PTR [rax+0x90]
   14000c41b:	mov    ecx,eax
   14000c41d:	call   0x14000c3e0
   14000c422:	nop
   14000c423:	mov    ecx,eax
   14000c425:	call   0x140009be8
   14000c42a:	nop
   14000c42b:	add    rsp,0x28
   14000c42f:	ret    
   14000c430:	rex push rbx
   14000c432:	sub    rsp,0x20
   14000c436:	mov    rbx,rcx
   14000c439:	call   0x14000d0c4
   14000c43e:	call   0x14000d0bc
   14000c443:	mov    ecx,eax
   14000c445:	call   0x14000d0b4
   14000c44a:	mov    r11,rax
   14000c44d:	test   rax,rax
   14000c450:	jne    0x14000c47e
   14000c452:	call   0x14000d0bc
   14000c457:	mov    rdx,rbx
   14000c45a:	mov    ecx,eax
   14000c45c:	call   0x14000d0c8
   14000c461:	test   eax,eax
   14000c463:	jne    0x14000c474
   14000c465:	call   QWORD PTR [rip+0xdc05]        # 0x14001a070
   14000c46b:	mov    ecx,eax
   14000c46d:	call   QWORD PTR [rip+0xdcd5]        # 0x14001a148
   14000c473:	int3   
   14000c474:	call   QWORD PTR [rip+0xdcd6]        # 0x14001a150
   14000c47a:	mov    DWORD PTR [rbx],eax
   14000c47c:	jmp    0x14000c4aa
   14000c47e:	mov    rax,QWORD PTR [rbx+0x90]
   14000c485:	mov    rcx,rbx
   14000c488:	mov    QWORD PTR [r11+0x90],rax
   14000c48f:	mov    rax,QWORD PTR [rbx+0x98]
   14000c496:	mov    QWORD PTR [r11+0x98],rax
   14000c49d:	mov    rax,QWORD PTR [rbx+0x8]
   14000c4a1:	mov    QWORD PTR [r11+0x8],rax
   14000c4a5:	call   0x14000d258
   14000c4aa:	call   0x14000c404
   14000c4af:	int3   
   14000c4b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c4b5:	mov    QWORD PTR [rsp+0x10],rbp
   14000c4ba:	mov    QWORD PTR [rsp+0x20],rsi
   14000c4bf:	push   rdi
   14000c4c0:	push   r12
   14000c4c2:	push   r13
   14000c4c4:	sub    rsp,0x30
   14000c4c8:	xor    ebx,ebx
   14000c4ca:	mov    rbp,r9
   14000c4cd:	mov    rsi,r8
   14000c4d0:	mov    r12d,edx
   14000c4d3:	mov    r13,rcx
   14000c4d6:	test   r8,r8
   14000c4d9:	jne    0x14000c4f0
   14000c4db:	call   0x14000bdf0
   14000c4e0:	mov    DWORD PTR [rax],0x16
   14000c4e6:	call   0x14000d04c
   14000c4eb:	jmp    0x14000c587
   14000c4f0:	call   0x14000d0c4
   14000c4f5:	mov    edx,0x2c8
   14000c4fa:	mov    ecx,0x1
   14000c4ff:	call   0x140010bd0
   14000c504:	mov    rdi,rax
   14000c507:	test   rax,rax
   14000c50a:	je     0x14000c574
   14000c50c:	call   0x14000d234
   14000c511:	mov    rcx,rdi
   14000c514:	mov    rdx,QWORD PTR [rax+0xc0]
   14000c51b:	call   0x14000d0f8
   14000c520:	mov    rcx,QWORD PTR [rsp+0x78]
   14000c525:	or     QWORD PTR [rdi+0x8],0xffffffffffffffff
   14000c52a:	mov    eax,DWORD PTR [rsp+0x70]
   14000c52e:	test   rcx,rcx
   14000c531:	lea    r8,[rsp+0x60]
   14000c536:	cmovne r8,rcx
   14000c53a:	mov    rdx,r12
   14000c53d:	mov    r9,rdi
   14000c540:	mov    QWORD PTR [rsp+0x28],r8
   14000c545:	lea    r8,[rip+0xfffffffffffffee4]        # 0x14000c430
   14000c54c:	mov    rcx,r13
   14000c54f:	mov    QWORD PTR [rdi+0x90],rsi
   14000c556:	mov    QWORD PTR [rdi+0x98],rbp
   14000c55d:	mov    DWORD PTR [rsp+0x20],eax
   14000c561:	call   QWORD PTR [rip+0xdbf1]        # 0x14001a158
   14000c567:	test   rax,rax
   14000c56a:	jne    0x14000c589
   14000c56c:	call   QWORD PTR [rip+0xdafe]        # 0x14001a070
   14000c572:	mov    ebx,eax
   14000c574:	mov    rcx,rdi
   14000c577:	call   0x14000b490
   14000c57c:	test   ebx,ebx
   14000c57e:	je     0x14000c587
   14000c580:	mov    ecx,ebx
   14000c582:	call   0x14000be30
   14000c587:	xor    eax,eax
   14000c589:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c58e:	mov    rbp,QWORD PTR [rsp+0x58]
   14000c593:	mov    rsi,QWORD PTR [rsp+0x68]
   14000c598:	add    rsp,0x30
   14000c59c:	pop    r13
   14000c59e:	pop    r12
   14000c5a0:	pop    rdi
   14000c5a1:	ret    
   14000c5a2:	int3   
   14000c5a3:	int3   
   14000c5a4:	int3   
   14000c5a5:	int3   
   14000c5a6:	int3   
   14000c5a7:	int3   
   14000c5a8:	int3   
   14000c5a9:	int3   
   14000c5aa:	int3   
   14000c5ab:	int3   
   14000c5ac:	int3   
   14000c5ad:	int3   
   14000c5ae:	int3   
   14000c5af:	int3   
   14000c5b0:	int3   
   14000c5b1:	int3   
   14000c5b2:	int3   
   14000c5b3:	int3   
   14000c5b4:	int3   
   14000c5b5:	int3   
   14000c5b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c5c0:	sub    rdx,rcx
   14000c5c3:	cmp    r8,0x8
   14000c5c7:	jb     0x14000c5eb
   14000c5c9:	test   cl,0x7
   14000c5cc:	je     0x14000c5e2
   14000c5ce:	xchg   ax,ax
   14000c5d0:	mov    al,BYTE PTR [rcx]
   14000c5d2:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000c5d5:	jne    0x14000c603
   14000c5d7:	inc    rcx
   14000c5da:	dec    r8
   14000c5dd:	test   cl,0x7
   14000c5e0:	jne    0x14000c5d0
   14000c5e2:	mov    r9,r8
   14000c5e5:	shr    r9,0x3
   14000c5e9:	jne    0x14000c60a
   14000c5eb:	test   r8,r8
   14000c5ee:	je     0x14000c5ff
   14000c5f0:	mov    al,BYTE PTR [rcx]
   14000c5f2:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000c5f5:	jne    0x14000c603
   14000c5f7:	inc    rcx
   14000c5fa:	dec    r8
   14000c5fd:	jne    0x14000c5f0
   14000c5ff:	xor    rax,rax
   14000c602:	ret    
   14000c603:	sbb    eax,eax
   14000c605:	sbb    eax,0xffffffff
   14000c608:	ret    
   14000c609:	nop
   14000c60a:	shr    r9,0x2
   14000c60e:	je     0x14000c647
   14000c610:	mov    rax,QWORD PTR [rcx]
   14000c613:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000c617:	jne    0x14000c674
   14000c619:	mov    rax,QWORD PTR [rcx+0x8]
   14000c61d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000c622:	jne    0x14000c670
   14000c624:	mov    rax,QWORD PTR [rcx+0x10]
   14000c628:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14000c62d:	jne    0x14000c66c
   14000c62f:	mov    rax,QWORD PTR [rcx+0x18]
   14000c633:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14000c638:	jne    0x14000c668
   14000c63a:	add    rcx,0x20
   14000c63e:	dec    r9
   14000c641:	jne    0x14000c610
   14000c643:	and    r8,0x1f
   14000c647:	mov    r9,r8
   14000c64a:	shr    r9,0x3
   14000c64e:	je     0x14000c5eb
   14000c650:	mov    rax,QWORD PTR [rcx]
   14000c653:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000c657:	jne    0x14000c674
   14000c659:	add    rcx,0x8
   14000c65d:	dec    r9
   14000c660:	jne    0x14000c650
   14000c662:	and    r8,0x7
   14000c666:	jmp    0x14000c5eb
   14000c668:	add    rcx,0x8
   14000c66c:	add    rcx,0x8
   14000c670:	add    rcx,0x8
   14000c674:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14000c678:	bswap  rax
   14000c67b:	bswap  rcx
   14000c67e:	cmp    rax,rcx
   14000c681:	sbb    eax,eax
   14000c683:	sbb    eax,0xffffffff
   14000c686:	ret    
   14000c687:	int3   
   14000c688:	sub    rsp,0x38
   14000c68c:	mov    rax,QWORD PTR [rip+0x16a2d]        # 0x1400230c0
   14000c693:	xor    rax,rsp
   14000c696:	mov    QWORD PTR [rsp+0x20],rax
   14000c69b:	mov    al,BYTE PTR [rdx]
   14000c69d:	xor    r11d,r11d
   14000c6a0:	mov    r10,rdx
   14000c6a3:	mov    QWORD PTR [rsp],r11
   14000c6a7:	mov    QWORD PTR [rsp+0x8],r11
   14000c6ac:	mov    QWORD PTR [rsp+0x10],r11
   14000c6b1:	mov    QWORD PTR [rsp+0x18],r11
   14000c6b6:	mov    r9,rcx
   14000c6b9:	jmp    0x14000c6dc
   14000c6bb:	movzx  r8d,al
   14000c6bf:	movzx  eax,al
   14000c6c2:	mov    edx,0x1
   14000c6c7:	and    eax,0x7
   14000c6ca:	shr    r8,0x3
   14000c6ce:	mov    cl,al
   14000c6d0:	shl    dl,cl
   14000c6d2:	or     BYTE PTR [rsp+r8*1],dl
   14000c6d6:	inc    r10
   14000c6d9:	mov    al,BYTE PTR [r10]
   14000c6dc:	test   al,al
   14000c6de:	jne    0x14000c6bb
   14000c6e0:	jmp    0x14000c700
   14000c6e2:	movzx  ecx,r8b
   14000c6e6:	movzx  eax,r8b
   14000c6ea:	mov    edx,0x1
   14000c6ef:	and    ecx,0x7
   14000c6f2:	shr    rax,0x3
   14000c6f6:	shl    edx,cl
   14000c6f8:	test   BYTE PTR [rsp+rax*1],dl
   14000c6fb:	jne    0x14000c71c
   14000c6fd:	inc    r9
   14000c700:	mov    r8b,BYTE PTR [r9]
   14000c703:	test   r8b,r8b
   14000c706:	jne    0x14000c6e2
   14000c708:	xor    eax,eax
   14000c70a:	mov    rcx,QWORD PTR [rsp+0x20]
   14000c70f:	xor    rcx,rsp
   14000c712:	call   0x14000a850
   14000c717:	add    rsp,0x38
   14000c71b:	ret    
   14000c71c:	mov    rax,r9
   14000c71f:	jmp    0x14000c70a
   14000c721:	int3   
   14000c722:	int3   
   14000c723:	int3   
   14000c724:	rex push rbx
   14000c726:	sub    rsp,0x20
   14000c72a:	mov    rbx,rcx
   14000c72d:	mov    BYTE PTR [rcx+0x18],0x0
   14000c731:	test   rdx,rdx
   14000c734:	jne    0x14000c7b5
   14000c736:	call   0x14000d234
   14000c73b:	mov    QWORD PTR [rbx+0x10],rax
   14000c73f:	mov    rdx,QWORD PTR [rax+0xc0]
   14000c746:	mov    QWORD PTR [rbx],rdx
   14000c749:	mov    rcx,QWORD PTR [rax+0xb8]
   14000c750:	mov    QWORD PTR [rbx+0x8],rcx
   14000c754:	cmp    rdx,QWORD PTR [rip+0x17c85]        # 0x1400243e0
   14000c75b:	je     0x14000c773
   14000c75d:	mov    eax,DWORD PTR [rax+0xc8]
   14000c763:	test   DWORD PTR [rip+0x17847],eax        # 0x140023fb0
   14000c769:	jne    0x14000c773
   14000c76b:	call   0x140014cdc
   14000c770:	mov    QWORD PTR [rbx],rax
   14000c773:	mov    rax,QWORD PTR [rip+0x17736]        # 0x140023eb0
   14000c77a:	cmp    QWORD PTR [rbx+0x8],rax
   14000c77e:	je     0x14000c79b
   14000c780:	mov    rax,QWORD PTR [rbx+0x10]
   14000c784:	mov    ecx,DWORD PTR [rax+0xc8]
   14000c78a:	test   DWORD PTR [rip+0x17820],ecx        # 0x140023fb0
   14000c790:	jne    0x14000c79b
   14000c792:	call   0x14001440c
   14000c797:	mov    QWORD PTR [rbx+0x8],rax
   14000c79b:	mov    rax,QWORD PTR [rbx+0x10]
   14000c79f:	test   BYTE PTR [rax+0xc8],0x2
   14000c7a6:	jne    0x14000c7bc
   14000c7a8:	or     DWORD PTR [rax+0xc8],0x2
   14000c7af:	mov    BYTE PTR [rbx+0x18],0x1
   14000c7b3:	jmp    0x14000c7bc
   14000c7b5:	movups xmm0,XMMWORD PTR [rdx]
   14000c7b8:	movdqu XMMWORD PTR [rcx],xmm0
   14000c7bc:	mov    rax,rbx
   14000c7bf:	add    rsp,0x20
   14000c7c3:	pop    rbx
   14000c7c4:	ret    
   14000c7c5:	int3   
   14000c7c6:	int3   
   14000c7c7:	int3   
   14000c7c8:	rex push rbx
   14000c7ca:	sub    rsp,0x40
   14000c7ce:	cmp    DWORD PTR [rip+0x19193],0x0        # 0x140025968
   14000c7d5:	movsxd rbx,ecx
   14000c7d8:	jne    0x14000c7ea
   14000c7da:	mov    rax,QWORD PTR [rip+0x17bdf]        # 0x1400243c0
   14000c7e1:	movzx  eax,WORD PTR [rax+rbx*2]
   14000c7e5:	and    eax,0x4
   14000c7e8:	jmp    0x14000c840
   14000c7ea:	lea    rcx,[rsp+0x20]
   14000c7ef:	xor    edx,edx
   14000c7f1:	call   0x14000c724
   14000c7f6:	mov    rax,QWORD PTR [rsp+0x20]
   14000c7fb:	cmp    DWORD PTR [rax+0x10c],0x1
   14000c802:	jle    0x14000c81a
   14000c804:	lea    r8,[rsp+0x20]
   14000c809:	mov    edx,0x4
   14000c80e:	mov    ecx,ebx
   14000c810:	call   0x140014d54
   14000c815:	mov    r11d,eax
   14000c818:	jmp    0x14000c82a
   14000c81a:	mov    rax,QWORD PTR [rax+0x140]
   14000c821:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000c826:	and    r11d,0x4
   14000c82a:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c82f:	je     0x14000c83d
   14000c831:	mov    rax,QWORD PTR [rsp+0x30]
   14000c836:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c83d:	mov    eax,r11d
   14000c840:	add    rsp,0x40
   14000c844:	pop    rbx
   14000c845:	ret    
   14000c846:	int3   
   14000c847:	int3   
   14000c848:	rex push rbx
   14000c84a:	sub    rsp,0x40
   14000c84e:	cmp    DWORD PTR [rip+0x19113],0x0        # 0x140025968
   14000c855:	movsxd rbx,ecx
   14000c858:	jne    0x14000c86c
   14000c85a:	mov    rax,QWORD PTR [rip+0x17b5f]        # 0x1400243c0
   14000c861:	movzx  eax,WORD PTR [rax+rbx*2]
   14000c865:	and    eax,0x80
   14000c86a:	jmp    0x14000c8c5
   14000c86c:	lea    rcx,[rsp+0x20]
   14000c871:	xor    edx,edx
   14000c873:	call   0x14000c724
   14000c878:	mov    rax,QWORD PTR [rsp+0x20]
   14000c87d:	cmp    DWORD PTR [rax+0x10c],0x1
   14000c884:	jle    0x14000c89c
   14000c886:	lea    r8,[rsp+0x20]
   14000c88b:	mov    edx,0x80
   14000c890:	mov    ecx,ebx
   14000c892:	call   0x140014d54
   14000c897:	mov    r11d,eax
   14000c89a:	jmp    0x14000c8af
   14000c89c:	mov    rax,QWORD PTR [rax+0x140]
   14000c8a3:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000c8a8:	and    r11d,0x80
   14000c8af:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c8b4:	je     0x14000c8c2
   14000c8b6:	mov    rax,QWORD PTR [rsp+0x30]
   14000c8bb:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c8c2:	mov    eax,r11d
   14000c8c5:	add    rsp,0x40
   14000c8c9:	pop    rbx
   14000c8ca:	ret    
   14000c8cb:	int3   
   14000c8cc:	rex push rbx
   14000c8ce:	sub    rsp,0x40
   14000c8d2:	cmp    DWORD PTR [rip+0x1908f],0x0        # 0x140025968
   14000c8d9:	movsxd rbx,ecx
   14000c8dc:	jne    0x14000c8ee
   14000c8de:	mov    rax,QWORD PTR [rip+0x17adb]        # 0x1400243c0
   14000c8e5:	movzx  eax,WORD PTR [rax+rbx*2]
   14000c8e9:	and    eax,0x8
   14000c8ec:	jmp    0x14000c944
   14000c8ee:	lea    rcx,[rsp+0x20]
   14000c8f3:	xor    edx,edx
   14000c8f5:	call   0x14000c724
   14000c8fa:	mov    rax,QWORD PTR [rsp+0x20]
   14000c8ff:	cmp    DWORD PTR [rax+0x10c],0x1
   14000c906:	jle    0x14000c91e
   14000c908:	lea    r8,[rsp+0x20]
   14000c90d:	mov    edx,0x8
   14000c912:	mov    ecx,ebx
   14000c914:	call   0x140014d54
   14000c919:	mov    r11d,eax
   14000c91c:	jmp    0x14000c92e
   14000c91e:	mov    rax,QWORD PTR [rax+0x140]
   14000c925:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000c92a:	and    r11d,0x8
   14000c92e:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c933:	je     0x14000c941
   14000c935:	mov    rax,QWORD PTR [rsp+0x30]
   14000c93a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c941:	mov    eax,r11d
   14000c944:	add    rsp,0x40
   14000c948:	pop    rbx
   14000c949:	ret    
   14000c94a:	int3   
   14000c94b:	int3   
   14000c94c:	mov    QWORD PTR [rsp+0x8],rbx
   14000c951:	mov    QWORD PTR [rsp+0x10],rsi
   14000c956:	mov    QWORD PTR [rsp+0x18],rdi
   14000c95b:	push   r12
   14000c95d:	sub    rsp,0x20
   14000c961:	lea    r12,[rip+0x16c98]        # 0x140023600
   14000c968:	xor    esi,esi
   14000c96a:	xor    ebx,ebx
   14000c96c:	mov    rdi,r12
   14000c96f:	cmp    DWORD PTR [rdi+0x8],0x1
   14000c973:	jne    0x14000c99b
   14000c975:	movsxd rax,esi
   14000c978:	mov    edx,0xfa0
   14000c97d:	inc    esi
   14000c97f:	lea    rcx,[rax+rax*4]
   14000c983:	lea    rax,[rip+0x18076]        # 0x140024a00
   14000c98a:	lea    rcx,[rax+rcx*8]
   14000c98e:	mov    QWORD PTR [rdi],rcx
   14000c991:	call   QWORD PTR [rip+0xd7c9]        # 0x14001a160
   14000c997:	test   eax,eax
   14000c999:	je     0x14000c9c1
   14000c99b:	inc    ebx
   14000c99d:	add    rdi,0x10
   14000c9a1:	cmp    ebx,0x24
   14000c9a4:	jl     0x14000c96f
   14000c9a6:	mov    eax,0x1
   14000c9ab:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c9b0:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c9b5:	mov    rdi,QWORD PTR [rsp+0x40]
   14000c9ba:	add    rsp,0x20
   14000c9be:	pop    r12
   14000c9c0:	ret    
   14000c9c1:	movsxd rax,ebx
   14000c9c4:	add    rax,rax
   14000c9c7:	and    QWORD PTR [r12+rax*8],0x0
   14000c9cc:	xor    eax,eax
   14000c9ce:	jmp    0x14000c9ab
   14000c9d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c9d5:	mov    QWORD PTR [rsp+0x10],rbp
   14000c9da:	mov    QWORD PTR [rsp+0x18],rsi
   14000c9df:	push   rdi
   14000c9e0:	sub    rsp,0x20
   14000c9e4:	mov    edi,0x24
   14000c9e9:	lea    rbx,[rip+0x16c10]        # 0x140023600
   14000c9f0:	mov    esi,edi
   14000c9f2:	mov    rbp,QWORD PTR [rbx]
   14000c9f5:	test   rbp,rbp
   14000c9f8:	je     0x14000ca15
   14000c9fa:	cmp    DWORD PTR [rbx+0x8],0x1
   14000c9fe:	je     0x14000ca15
   14000ca00:	mov    rcx,rbp
   14000ca03:	call   QWORD PTR [rip+0xd75f]        # 0x14001a168
   14000ca09:	mov    rcx,rbp
   14000ca0c:	call   0x14000b490
   14000ca11:	and    QWORD PTR [rbx],0x0
   14000ca15:	add    rbx,0x10
   14000ca19:	dec    rsi
   14000ca1c:	jne    0x14000c9f2
   14000ca1e:	lea    rbx,[rip+0x16be3]        # 0x140023608
   14000ca25:	mov    rcx,QWORD PTR [rbx-0x8]
   14000ca29:	test   rcx,rcx
   14000ca2c:	je     0x14000ca39
   14000ca2e:	cmp    DWORD PTR [rbx],0x1
   14000ca31:	jne    0x14000ca39
   14000ca33:	call   QWORD PTR [rip+0xd72f]        # 0x14001a168
   14000ca39:	add    rbx,0x10
   14000ca3d:	dec    rdi
   14000ca40:	jne    0x14000ca25
   14000ca42:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ca47:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ca4c:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ca51:	add    rsp,0x20
   14000ca55:	pop    rdi
   14000ca56:	ret    
   14000ca57:	int3   
   14000ca58:	movsxd rcx,ecx
   14000ca5b:	lea    rax,[rip+0x16b9e]        # 0x140023600
   14000ca62:	add    rcx,rcx
   14000ca65:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000ca69:	rex.W jmp QWORD PTR [rip+0xd688]        # 0x14001a0f8
   14000ca70:	mov    QWORD PTR [rsp+0x8],rbx
   14000ca75:	mov    QWORD PTR [rsp+0x10],rsi
   14000ca7a:	mov    QWORD PTR [rsp+0x18],rdi
   14000ca7f:	push   r13
   14000ca81:	sub    rsp,0x20
   14000ca85:	movsxd rbx,ecx
   14000ca88:	mov    esi,0x1
   14000ca8d:	cmp    QWORD PTR [rip+0x18933],0x0        # 0x1400253c8
   14000ca95:	jne    0x14000caae
   14000ca97:	call   0x14000dbb0
   14000ca9c:	lea    ecx,[rsi+0x1d]
   14000ca9f:	call   0x14000d950
   14000caa4:	mov    ecx,0xff
   14000caa9:	call   0x1400098b8
   14000caae:	mov    rdi,rbx
   14000cab1:	add    rdi,rdi
   14000cab4:	lea    r13,[rip+0x16b45]        # 0x140023600
   14000cabb:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   14000cac1:	je     0x14000cac7
   14000cac3:	mov    eax,esi
   14000cac5:	jmp    0x14000cb40
   14000cac7:	mov    ecx,0x28
   14000cacc:	call   0x140010b50
   14000cad1:	mov    rbx,rax
   14000cad4:	test   rax,rax
   14000cad7:	jne    0x14000cae8
   14000cad9:	call   0x14000bdf0
   14000cade:	mov    DWORD PTR [rax],0xc
   14000cae4:	xor    eax,eax
   14000cae6:	jmp    0x14000cb40
   14000cae8:	mov    ecx,0xa
   14000caed:	call   0x14000cb58
   14000caf2:	nop
   14000caf3:	mov    rcx,rbx
   14000caf6:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   14000cafc:	jne    0x14000cb2b
   14000cafe:	mov    edx,0xfa0
   14000cb03:	call   QWORD PTR [rip+0xd657]        # 0x14001a160
   14000cb09:	test   eax,eax
   14000cb0b:	jne    0x14000cb24
   14000cb0d:	mov    rcx,rbx
   14000cb10:	call   0x14000b490
   14000cb15:	call   0x14000bdf0
   14000cb1a:	mov    DWORD PTR [rax],0xc
   14000cb20:	xor    esi,esi
   14000cb22:	jmp    0x14000cb31
   14000cb24:	mov    QWORD PTR [r13+rdi*8+0x0],rbx
   14000cb29:	jmp    0x14000cb31
   14000cb2b:	call   0x14000b490
   14000cb30:	nop
   14000cb31:	mov    rcx,QWORD PTR [rip+0x16b68]        # 0x1400236a0
   14000cb38:	call   QWORD PTR [rip+0xd5ba]        # 0x14001a0f8
   14000cb3e:	jmp    0x14000cac3
   14000cb40:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cb45:	mov    rsi,QWORD PTR [rsp+0x38]
   14000cb4a:	mov    rdi,QWORD PTR [rsp+0x40]
   14000cb4f:	add    rsp,0x20
   14000cb53:	pop    r13
   14000cb55:	ret    
   14000cb56:	int3   
   14000cb57:	int3   
   14000cb58:	mov    QWORD PTR [rsp+0x8],rbx
   14000cb5d:	push   rdi
   14000cb5e:	sub    rsp,0x20
   14000cb62:	movsxd rbx,ecx
   14000cb65:	lea    rdi,[rip+0x16a94]        # 0x140023600
   14000cb6c:	add    rbx,rbx
   14000cb6f:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14000cb74:	jne    0x14000cb87
   14000cb76:	call   0x14000ca70
   14000cb7b:	test   eax,eax
   14000cb7d:	jne    0x14000cb87
   14000cb7f:	lea    ecx,[rax+0x11]
   14000cb82:	call   0x140009c14
   14000cb87:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14000cb8b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cb90:	add    rsp,0x20
   14000cb94:	pop    rdi
   14000cb95:	rex.W jmp QWORD PTR [rip+0xd554]        # 0x14001a0f0
   14000cb9c:	sub    rsp,0x28
   14000cba0:	call   0x14000d234
   14000cba5:	mov    rcx,QWORD PTR [rax+0xd0]
   14000cbac:	test   rcx,rcx
   14000cbaf:	je     0x14000cbb5
   14000cbb1:	call   rcx
   14000cbb3:	jmp    0x14000cbb5
   14000cbb5:	call   0x140014e3c
   14000cbba:	add    rsp,0x28
   14000cbbe:	ret    
   14000cbbf:	int3   
   14000cbc0:	sub    rsp,0x28
   14000cbc4:	lea    rcx,[rip+0xffffffffffffffd1]        # 0x14000cb9c
   14000cbcb:	call   QWORD PTR [rip+0xd59f]        # 0x14001a170
   14000cbd1:	mov    QWORD PTR [rip+0x18058],rax        # 0x140024c30
   14000cbd8:	add    rsp,0x28
   14000cbdc:	ret    
   14000cbdd:	int3   
   14000cbde:	int3   
   14000cbdf:	int3   
   14000cbe0:	mov    QWORD PTR [rip+0x18051],rcx        # 0x140024c38
   14000cbe7:	mov    QWORD PTR [rip+0x18052],rcx        # 0x140024c40
   14000cbee:	mov    QWORD PTR [rip+0x18053],rcx        # 0x140024c48
   14000cbf5:	mov    QWORD PTR [rip+0x18054],rcx        # 0x140024c50
   14000cbfc:	ret    
   14000cbfd:	int3   
   14000cbfe:	int3   
   14000cbff:	int3   
   14000cc00:	mov    rcx,QWORD PTR [rip+0x18041]        # 0x140024c48
   14000cc07:	rex.W jmp QWORD PTR [rip+0xd4d2]        # 0x14001a0e0
   14000cc0e:	int3   
   14000cc0f:	int3   
   14000cc10:	mov    QWORD PTR [rsp+0x10],rbx
   14000cc15:	mov    QWORD PTR [rsp+0x18],rsi
   14000cc1a:	push   rdi
   14000cc1b:	push   r12
   14000cc1d:	push   r13
   14000cc1f:	push   r14
   14000cc21:	push   r15
   14000cc23:	sub    rsp,0x30
   14000cc27:	mov    ebx,ecx
   14000cc29:	xor    edi,edi
   14000cc2b:	mov    DWORD PTR [rsp+0x60],edi
   14000cc2f:	xor    esi,esi
   14000cc31:	mov    edx,ecx
   14000cc33:	sub    edx,0x2
   14000cc36:	je     0x14000cd01
   14000cc3c:	sub    edx,0x2
   14000cc3f:	je     0x14000cca3
   14000cc41:	sub    edx,0x2
   14000cc44:	je     0x14000cc93
   14000cc46:	sub    edx,0x2
   14000cc49:	je     0x14000cca3
   14000cc4b:	sub    edx,0x3
   14000cc4e:	je     0x14000cca3
   14000cc50:	sub    edx,0x4
   14000cc53:	je     0x14000cc83
   14000cc55:	sub    edx,0x6
   14000cc58:	je     0x14000cc70
   14000cc5a:	dec    edx
   14000cc5c:	je     0x14000cc93
   14000cc5e:	call   0x14000bdf0
   14000cc63:	mov    DWORD PTR [rax],0x16
   14000cc69:	call   0x14000d04c
   14000cc6e:	jmp    0x14000ccb0
   14000cc70:	lea    r12,[rip+0x17fc9]        # 0x140024c40
   14000cc77:	mov    rcx,QWORD PTR [rip+0x17fc2]        # 0x140024c40
   14000cc7e:	jmp    0x14000cd0f
   14000cc83:	lea    r12,[rip+0x17fc6]        # 0x140024c50
   14000cc8a:	mov    rcx,QWORD PTR [rip+0x17fbf]        # 0x140024c50
   14000cc91:	jmp    0x14000cd0f
   14000cc93:	lea    r12,[rip+0x17fae]        # 0x140024c48
   14000cc9a:	mov    rcx,QWORD PTR [rip+0x17fa7]        # 0x140024c48
   14000cca1:	jmp    0x14000cd0f
   14000cca3:	call   0x14000d1b0
   14000cca8:	mov    rsi,rax
   14000ccab:	test   rax,rax
   14000ccae:	jne    0x14000ccb8
   14000ccb0:	or     eax,0xffffffff
   14000ccb3:	jmp    0x14000ce2a
   14000ccb8:	mov    rdx,QWORD PTR [rax+0xa0]
   14000ccbf:	mov    rcx,rdx
   14000ccc2:	movsxd r8,DWORD PTR [rip+0x12a03]        # 0x14001f6cc
   14000ccc9:	cmp    DWORD PTR [rcx+0x4],ebx
   14000cccc:	je     0x14000cce1
   14000ccce:	add    rcx,0x10
   14000ccd2:	mov    rax,r8
   14000ccd5:	shl    rax,0x4
   14000ccd9:	add    rax,rdx
   14000ccdc:	cmp    rcx,rax
   14000ccdf:	jb     0x14000ccc9
   14000cce1:	mov    rax,r8
   14000cce4:	shl    rax,0x4
   14000cce8:	add    rax,rdx
   14000cceb:	cmp    rcx,rax
   14000ccee:	jae    0x14000ccf5
   14000ccf0:	cmp    DWORD PTR [rcx+0x4],ebx
   14000ccf3:	je     0x14000ccf7
   14000ccf5:	xor    ecx,ecx
   14000ccf7:	lea    r12,[rcx+0x8]
   14000ccfb:	mov    r13,QWORD PTR [r12]
   14000ccff:	jmp    0x14000cd21
   14000cd01:	lea    r12,[rip+0x17f30]        # 0x140024c38
   14000cd08:	mov    rcx,QWORD PTR [rip+0x17f29]        # 0x140024c38
   14000cd0f:	mov    edi,0x1
   14000cd14:	mov    DWORD PTR [rsp+0x60],edi
   14000cd18:	call   QWORD PTR [rip+0xd3c2]        # 0x14001a0e0
   14000cd1e:	mov    r13,rax
   14000cd21:	cmp    r13,0x1
   14000cd25:	jne    0x14000cd2e
   14000cd27:	xor    eax,eax
   14000cd29:	jmp    0x14000ce2a
   14000cd2e:	test   r13,r13
   14000cd31:	jne    0x14000cd3d
   14000cd33:	lea    ecx,[r13+0x3]
   14000cd37:	call   0x140009be8
   14000cd3c:	int3   
   14000cd3d:	test   edi,edi
   14000cd3f:	je     0x14000cd49
   14000cd41:	xor    ecx,ecx
   14000cd43:	call   0x14000cb58
   14000cd48:	nop
   14000cd49:	cmp    ebx,0x8
   14000cd4c:	je     0x14000cd5f
   14000cd4e:	cmp    ebx,0xb
   14000cd51:	je     0x14000cd5f
   14000cd53:	cmp    ebx,0x4
   14000cd56:	je     0x14000cd5f
   14000cd58:	mov    r15,QWORD PTR [rsp+0x28]
   14000cd5d:	jmp    0x14000cd8b
   14000cd5f:	mov    r15,QWORD PTR [rsi+0xa8]
   14000cd66:	mov    QWORD PTR [rsp+0x28],r15
   14000cd6b:	and    QWORD PTR [rsi+0xa8],0x0
   14000cd73:	cmp    ebx,0x8
   14000cd76:	jne    0x14000cd8b
   14000cd78:	mov    r14d,DWORD PTR [rsi+0xb0]
   14000cd7f:	mov    DWORD PTR [rsi+0xb0],0x8c
   14000cd89:	jmp    0x14000cd90
   14000cd8b:	mov    r14d,DWORD PTR [rsp+0x60]
   14000cd90:	cmp    ebx,0x8
   14000cd93:	jne    0x14000cdce
   14000cd95:	mov    ecx,DWORD PTR [rip+0x12925]        # 0x14001f6c0
   14000cd9b:	mov    edx,ecx
   14000cd9d:	mov    DWORD PTR [rsp+0x20],ecx
   14000cda1:	mov    eax,DWORD PTR [rip+0x1291d]        # 0x14001f6c4
   14000cda7:	add    ecx,eax
   14000cda9:	cmp    edx,ecx
   14000cdab:	jge    0x14000cdd7
   14000cdad:	movsxd rcx,edx
   14000cdb0:	add    rcx,rcx
   14000cdb3:	mov    rax,QWORD PTR [rsi+0xa0]
   14000cdba:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   14000cdc0:	inc    edx
   14000cdc2:	mov    DWORD PTR [rsp+0x20],edx
   14000cdc6:	mov    ecx,DWORD PTR [rip+0x128f4]        # 0x14001f6c0
   14000cdcc:	jmp    0x14000cda1
   14000cdce:	call   0x14000d0a8
   14000cdd3:	mov    QWORD PTR [r12],rax
   14000cdd7:	test   edi,edi
   14000cdd9:	je     0x14000cde2
   14000cddb:	xor    ecx,ecx
   14000cddd:	call   0x14000ca58
   14000cde2:	mov    edi,0x8
   14000cde7:	cmp    ebx,edi
   14000cde9:	jne    0x14000cdf8
   14000cdeb:	mov    edx,DWORD PTR [rsi+0xb0]
   14000cdf1:	mov    ecx,edi
   14000cdf3:	call   r13
   14000cdf6:	jmp    0x14000cdfd
   14000cdf8:	mov    ecx,ebx
   14000cdfa:	call   r13
   14000cdfd:	cmp    ebx,edi
   14000cdff:	je     0x14000ce0f
   14000ce01:	cmp    ebx,0xb
   14000ce04:	je     0x14000ce0f
   14000ce06:	cmp    ebx,0x4
   14000ce09:	jne    0x14000cd27
   14000ce0f:	mov    QWORD PTR [rsi+0xa8],r15
   14000ce16:	cmp    ebx,edi
   14000ce18:	jne    0x14000cd27
   14000ce1e:	mov    DWORD PTR [rsi+0xb0],r14d
   14000ce25:	jmp    0x14000cd27
   14000ce2a:	mov    rbx,QWORD PTR [rsp+0x68]
   14000ce2f:	mov    rsi,QWORD PTR [rsp+0x70]
   14000ce34:	add    rsp,0x30
   14000ce38:	pop    r15
   14000ce3a:	pop    r14
   14000ce3c:	pop    r13
   14000ce3e:	pop    r12
   14000ce40:	pop    rdi
   14000ce41:	ret    
   14000ce42:	int3   
   14000ce43:	int3   
   14000ce44:	mov    QWORD PTR [rip+0x17e15],rcx        # 0x140024c60
   14000ce4b:	ret    
   14000ce4c:	mov    QWORD PTR [rip+0x17e15],rcx        # 0x140024c68
   14000ce53:	ret    
   14000ce54:	mov    QWORD PTR [rip+0x17e15],rcx        # 0x140024c70
   14000ce5b:	ret    
   14000ce5c:	mov    QWORD PTR [rsp+0x10],rbx
   14000ce61:	mov    QWORD PTR [rsp+0x18],rsi
   14000ce66:	push   rbp
   14000ce67:	push   rdi
   14000ce68:	push   r12
   14000ce6a:	lea    rbp,[rsp-0x4f0]
   14000ce72:	sub    rsp,0x5f0
   14000ce79:	mov    rax,QWORD PTR [rip+0x16240]        # 0x1400230c0
   14000ce80:	xor    rax,rsp
   14000ce83:	mov    QWORD PTR [rbp+0x4e0],rax
   14000ce8a:	mov    edi,r8d
   14000ce8d:	mov    esi,edx
   14000ce8f:	mov    ebx,ecx
   14000ce91:	cmp    ecx,0xffffffff
   14000ce94:	je     0x14000ce9b
   14000ce96:	call   0x140014e7c
   14000ce9b:	and    DWORD PTR [rsp+0x70],0x0
   14000cea0:	lea    rcx,[rsp+0x74]
   14000cea5:	xor    edx,edx
   14000cea7:	mov    r8d,0x94
   14000cead:	call   0x14000a560
   14000ceb2:	lea    r11,[rsp+0x70]
   14000ceb7:	lea    rax,[rbp+0x10]
   14000cebb:	lea    rcx,[rbp+0x10]
   14000cebf:	mov    QWORD PTR [rsp+0x48],r11
   14000cec4:	mov    QWORD PTR [rsp+0x50],rax
   14000cec9:	call   QWORD PTR [rip+0xd2d9]        # 0x14001a1a8
   14000cecf:	mov    r12,QWORD PTR [rbp+0x108]
   14000ced6:	lea    rdx,[rsp+0x40]
   14000cedb:	mov    rcx,r12
   14000cede:	xor    r8d,r8d
   14000cee1:	call   0x1400199c2
   14000cee6:	test   rax,rax
   14000cee9:	je     0x14000cf22
   14000ceeb:	and    QWORD PTR [rsp+0x38],0x0
   14000cef1:	mov    rdx,QWORD PTR [rsp+0x40]
   14000cef6:	lea    rcx,[rsp+0x60]
   14000cefb:	mov    QWORD PTR [rsp+0x30],rcx
   14000cf00:	lea    rcx,[rsp+0x58]
   14000cf05:	mov    r9,rax
   14000cf08:	mov    QWORD PTR [rsp+0x28],rcx
   14000cf0d:	lea    rcx,[rbp+0x10]
   14000cf11:	mov    r8,r12
   14000cf14:	mov    QWORD PTR [rsp+0x20],rcx
   14000cf19:	xor    ecx,ecx
   14000cf1b:	call   0x1400199bc
   14000cf20:	jmp    0x14000cf3e
   14000cf22:	mov    rax,QWORD PTR [rbp+0x508]
   14000cf29:	mov    QWORD PTR [rbp+0x108],rax
   14000cf30:	lea    rax,[rbp+0x508]
   14000cf37:	mov    QWORD PTR [rbp+0xa8],rax
   14000cf3e:	mov    rax,QWORD PTR [rbp+0x508]
   14000cf45:	mov    DWORD PTR [rsp+0x70],esi
   14000cf49:	mov    DWORD PTR [rsp+0x74],edi
   14000cf4d:	mov    QWORD PTR [rbp-0x80],rax
   14000cf51:	call   QWORD PTR [rip+0xd239]        # 0x14001a190
   14000cf57:	xor    ecx,ecx
   14000cf59:	mov    edi,eax
   14000cf5b:	call   QWORD PTR [rip+0xd227]        # 0x14001a188
   14000cf61:	lea    rcx,[rsp+0x48]
   14000cf66:	call   QWORD PTR [rip+0xd214]        # 0x14001a180
   14000cf6c:	test   eax,eax
   14000cf6e:	jne    0x14000cf80
   14000cf70:	test   edi,edi
   14000cf72:	jne    0x14000cf80
   14000cf74:	cmp    ebx,0xffffffff
   14000cf77:	je     0x14000cf80
   14000cf79:	mov    ecx,ebx
   14000cf7b:	call   0x140014e7c
   14000cf80:	mov    rcx,QWORD PTR [rbp+0x4e0]
   14000cf87:	xor    rcx,rsp
   14000cf8a:	call   0x14000a850
   14000cf8f:	lea    r11,[rsp+0x5f0]
   14000cf97:	mov    rbx,QWORD PTR [r11+0x28]
   14000cf9b:	mov    rsi,QWORD PTR [r11+0x30]
   14000cf9f:	mov    rsp,r11
   14000cfa2:	pop    r12
   14000cfa4:	pop    rdi
   14000cfa5:	pop    rbp
   14000cfa6:	ret    
   14000cfa7:	int3   
   14000cfa8:	sub    rsp,0x28
   14000cfac:	mov    r8d,0x1
   14000cfb2:	mov    edx,0xc0000417
   14000cfb7:	lea    ecx,[r8+0x1]
   14000cfbb:	call   0x14000ce5c
   14000cfc0:	call   QWORD PTR [rip+0xd1f2]        # 0x14001a1b8
   14000cfc6:	mov    edx,0xc0000417
   14000cfcb:	mov    rcx,rax
   14000cfce:	add    rsp,0x28
   14000cfd2:	rex.W jmp QWORD PTR [rip+0xd1d7]        # 0x14001a1b0
   14000cfd9:	int3   
   14000cfda:	int3   
   14000cfdb:	int3   
   14000cfdc:	mov    QWORD PTR [rsp+0x8],rbx
   14000cfe1:	mov    QWORD PTR [rsp+0x10],rbp
   14000cfe6:	mov    QWORD PTR [rsp+0x18],rsi
   14000cfeb:	push   rdi
   14000cfec:	sub    rsp,0x30
   14000cff0:	mov    rbp,rcx
   14000cff3:	mov    rcx,QWORD PTR [rip+0x17c76]        # 0x140024c70
   14000cffa:	mov    ebx,r9d
   14000cffd:	mov    rdi,r8
   14000d000:	mov    rsi,rdx
   14000d003:	call   QWORD PTR [rip+0xd0d7]        # 0x14001a0e0
   14000d009:	mov    r9d,ebx
   14000d00c:	mov    r8,rdi
   14000d00f:	mov    rdx,rsi
   14000d012:	mov    rcx,rbp
   14000d015:	test   rax,rax
   14000d018:	je     0x14000d03b
   14000d01a:	mov    r10,QWORD PTR [rsp+0x60]
   14000d01f:	mov    QWORD PTR [rsp+0x20],r10
   14000d024:	call   rax
   14000d026:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d02b:	mov    rbp,QWORD PTR [rsp+0x48]
   14000d030:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d035:	add    rsp,0x30
   14000d039:	pop    rdi
   14000d03a:	ret    
   14000d03b:	mov    rax,QWORD PTR [rsp+0x60]
   14000d040:	mov    QWORD PTR [rsp+0x20],rax
   14000d045:	call   0x14000cfa8
   14000d04a:	int3   
   14000d04b:	int3   
   14000d04c:	sub    rsp,0x38
   14000d050:	and    QWORD PTR [rsp+0x20],0x0
   14000d056:	xor    r9d,r9d
   14000d059:	xor    r8d,r8d
   14000d05c:	xor    edx,edx
   14000d05e:	xor    ecx,ecx
   14000d060:	call   0x14000cfdc
   14000d065:	add    rsp,0x38
   14000d069:	ret    
   14000d06a:	int3   
   14000d06b:	int3   
   14000d06c:	mov    QWORD PTR [rip+0x17c05],rcx        # 0x140024c78
   14000d073:	ret    
   14000d074:	rex push rbx
   14000d076:	sub    rsp,0x20
   14000d07a:	mov    rbx,rcx
   14000d07d:	mov    rcx,QWORD PTR [rip+0x17bf4]        # 0x140024c78
   14000d084:	call   QWORD PTR [rip+0xd056]        # 0x14001a0e0
   14000d08a:	test   rax,rax
   14000d08d:	je     0x14000d09f
   14000d08f:	mov    rcx,rbx
   14000d092:	call   rax
   14000d094:	test   eax,eax
   14000d096:	je     0x14000d09f
   14000d098:	mov    eax,0x1
   14000d09d:	jmp    0x14000d0a1
   14000d09f:	xor    eax,eax
   14000d0a1:	add    rsp,0x20
   14000d0a5:	pop    rbx
   14000d0a6:	ret    
   14000d0a7:	int3   
   14000d0a8:	xor    ecx,ecx
   14000d0aa:	rex.W jmp QWORD PTR [rip+0xd0bf]        # 0x14001a170
   14000d0b1:	int3   
   14000d0b2:	int3   
   14000d0b3:	int3   
   14000d0b4:	rex.W jmp QWORD PTR [rip+0xd105]        # 0x14001a1c0
   14000d0bb:	int3   
   14000d0bc:	mov    eax,DWORD PTR [rip+0x1677e]        # 0x140023840
   14000d0c2:	ret    
   14000d0c3:	int3   
   14000d0c4:	xor    eax,eax
   14000d0c6:	ret    
   14000d0c7:	int3   
   14000d0c8:	rex.W jmp QWORD PTR [rip+0xd0f9]        # 0x14001a1c8
   14000d0cf:	int3   
   14000d0d0:	sub    rsp,0x28
   14000d0d4:	mov    ecx,DWORD PTR [rip+0x16766]        # 0x140023840
   14000d0da:	cmp    ecx,0xffffffff
   14000d0dd:	je     0x14000d0ec
   14000d0df:	call   QWORD PTR [rip+0xd0eb]        # 0x14001a1d0
   14000d0e5:	or     DWORD PTR [rip+0x16754],0xffffffff        # 0x140023840
   14000d0ec:	add    rsp,0x28
   14000d0f0:	jmp    0x14000c9d0
   14000d0f5:	int3   
   14000d0f6:	int3   
   14000d0f7:	int3   
   14000d0f8:	mov    QWORD PTR [rsp+0x8],rbx
   14000d0fd:	push   rdi
   14000d0fe:	sub    rsp,0x20
   14000d102:	mov    rdi,rdx
   14000d105:	mov    rbx,rcx
   14000d108:	lea    rax,[rip+0x124f1]        # 0x14001f600
   14000d10f:	mov    QWORD PTR [rcx+0xa0],rax
   14000d116:	and    DWORD PTR [rcx+0x10],0x0
   14000d11a:	mov    DWORD PTR [rcx+0x1c],0x1
   14000d121:	mov    DWORD PTR [rcx+0xc8],0x1
   14000d12b:	mov    BYTE PTR [rcx+0x174],0x43
   14000d132:	mov    BYTE PTR [rcx+0x1f7],0x43
   14000d139:	lea    rax,[rip+0x16940]        # 0x140023a80
   14000d140:	mov    QWORD PTR [rcx+0xb8],rax
   14000d147:	mov    ecx,0xd
   14000d14c:	call   0x14000cb58
   14000d151:	nop
   14000d152:	mov    rax,QWORD PTR [rbx+0xb8]
   14000d159:	lock inc DWORD PTR [rax]
   14000d15c:	mov    ecx,0xd
   14000d161:	call   0x14000ca58
   14000d166:	mov    ecx,0xc
   14000d16b:	call   0x14000cb58
   14000d170:	nop
   14000d171:	mov    QWORD PTR [rbx+0xc0],rdi
   14000d178:	test   rdi,rdi
   14000d17b:	jne    0x14000d18b
   14000d17d:	mov    rax,QWORD PTR [rip+0x1725c]        # 0x1400243e0
   14000d184:	mov    QWORD PTR [rbx+0xc0],rax
   14000d18b:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000d192:	call   0x1400149d8
   14000d197:	nop
   14000d198:	mov    ecx,0xc
   14000d19d:	call   0x14000ca58
   14000d1a2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d1a7:	add    rsp,0x20
   14000d1ab:	pop    rdi
   14000d1ac:	ret    
   14000d1ad:	int3   
   14000d1ae:	int3   
   14000d1af:	int3   
   14000d1b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d1b5:	push   rdi
   14000d1b6:	sub    rsp,0x20
   14000d1ba:	call   QWORD PTR [rip+0xceb0]        # 0x14001a070
   14000d1c0:	mov    ecx,DWORD PTR [rip+0x1667a]        # 0x140023840
   14000d1c6:	mov    edi,eax
   14000d1c8:	call   QWORD PTR [rip+0xcff2]        # 0x14001a1c0
   14000d1ce:	mov    rbx,rax
   14000d1d1:	test   rax,rax
   14000d1d4:	jne    0x14000d21e
   14000d1d6:	lea    ecx,[rax+0x1]
   14000d1d9:	mov    edx,0x2c8
   14000d1de:	call   0x140010bd0
   14000d1e3:	mov    rbx,rax
   14000d1e6:	test   rax,rax
   14000d1e9:	je     0x14000d21e
   14000d1eb:	mov    ecx,DWORD PTR [rip+0x1664f]        # 0x140023840
   14000d1f1:	mov    rdx,rax
   14000d1f4:	call   QWORD PTR [rip+0xcfce]        # 0x14001a1c8
   14000d1fa:	mov    rcx,rbx
   14000d1fd:	test   eax,eax
   14000d1ff:	je     0x14000d217
   14000d201:	xor    edx,edx
   14000d203:	call   0x14000d0f8
   14000d208:	call   QWORD PTR [rip+0xcf42]        # 0x14001a150
   14000d20e:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000d213:	mov    DWORD PTR [rbx],eax
   14000d215:	jmp    0x14000d21e
   14000d217:	call   0x14000b490
   14000d21c:	xor    ebx,ebx
   14000d21e:	mov    ecx,edi
   14000d220:	call   QWORD PTR [rip+0xcfb2]        # 0x14001a1d8
   14000d226:	mov    rax,rbx
   14000d229:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d22e:	add    rsp,0x20
   14000d232:	pop    rdi
   14000d233:	ret    
   14000d234:	rex push rbx
   14000d236:	sub    rsp,0x20
   14000d23a:	call   0x14000d1b0
   14000d23f:	mov    rbx,rax
   14000d242:	test   rax,rax
   14000d245:	jne    0x14000d24f
   14000d247:	lea    ecx,[rax+0x10]
   14000d24a:	call   0x140009c14
   14000d24f:	mov    rax,rbx
   14000d252:	add    rsp,0x20
   14000d256:	pop    rbx
   14000d257:	ret    
   14000d258:	test   rcx,rcx
   14000d25b:	je     0x14000d38a
   14000d261:	mov    QWORD PTR [rsp+0x10],rbx
   14000d266:	push   rdi
   14000d267:	sub    rsp,0x20
   14000d26b:	mov    rbx,rcx
   14000d26e:	mov    rcx,QWORD PTR [rcx+0x38]
   14000d272:	test   rcx,rcx
   14000d275:	je     0x14000d27c
   14000d277:	call   0x14000b490
   14000d27c:	mov    rcx,QWORD PTR [rbx+0x48]
   14000d280:	test   rcx,rcx
   14000d283:	je     0x14000d28a
   14000d285:	call   0x14000b490
   14000d28a:	mov    rcx,QWORD PTR [rbx+0x58]
   14000d28e:	test   rcx,rcx
   14000d291:	je     0x14000d298
   14000d293:	call   0x14000b490
   14000d298:	mov    rcx,QWORD PTR [rbx+0x68]
   14000d29c:	test   rcx,rcx
   14000d29f:	je     0x14000d2a6
   14000d2a1:	call   0x14000b490
   14000d2a6:	mov    rcx,QWORD PTR [rbx+0x70]
   14000d2aa:	test   rcx,rcx
   14000d2ad:	je     0x14000d2b4
   14000d2af:	call   0x14000b490
   14000d2b4:	mov    rcx,QWORD PTR [rbx+0x78]
   14000d2b8:	test   rcx,rcx
   14000d2bb:	je     0x14000d2c2
   14000d2bd:	call   0x14000b490
   14000d2c2:	mov    rcx,QWORD PTR [rbx+0x80]
   14000d2c9:	test   rcx,rcx
   14000d2cc:	je     0x14000d2d3
   14000d2ce:	call   0x14000b490
   14000d2d3:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000d2da:	lea    rax,[rip+0x1231f]        # 0x14001f600
   14000d2e1:	cmp    rcx,rax
   14000d2e4:	je     0x14000d2eb
   14000d2e6:	call   0x14000b490
   14000d2eb:	mov    edi,0xd
   14000d2f0:	mov    ecx,edi
   14000d2f2:	call   0x14000cb58
   14000d2f7:	nop
   14000d2f8:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000d2ff:	mov    QWORD PTR [rsp+0x30],rcx
   14000d304:	test   rcx,rcx
   14000d307:	je     0x14000d325
   14000d309:	lock dec DWORD PTR [rcx]
   14000d30c:	jne    0x14000d325
   14000d30e:	lea    rax,[rip+0x1676b]        # 0x140023a80
   14000d315:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d31a:	cmp    rcx,rax
   14000d31d:	je     0x14000d325
   14000d31f:	call   0x14000b490
   14000d324:	nop
   14000d325:	mov    ecx,edi
   14000d327:	call   0x14000ca58
   14000d32c:	mov    ecx,0xc
   14000d331:	call   0x14000cb58
   14000d336:	nop
   14000d337:	mov    rdi,QWORD PTR [rbx+0xc0]
   14000d33e:	test   rdi,rdi
   14000d341:	je     0x14000d36e
   14000d343:	mov    rcx,rdi
   14000d346:	call   0x140014a64
   14000d34b:	cmp    rdi,QWORD PTR [rip+0x1708e]        # 0x1400243e0
   14000d352:	je     0x14000d36e
   14000d354:	lea    rax,[rip+0x16f25]        # 0x140024280
   14000d35b:	cmp    rdi,rax
   14000d35e:	je     0x14000d36e
   14000d360:	cmp    DWORD PTR [rdi],0x0
   14000d363:	jne    0x14000d36e
   14000d365:	mov    rcx,rdi
   14000d368:	call   0x140014b08
   14000d36d:	nop
   14000d36e:	mov    ecx,0xc
   14000d373:	call   0x14000ca58
   14000d378:	mov    rcx,rbx
   14000d37b:	call   0x14000b490
   14000d380:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d385:	add    rsp,0x20
   14000d389:	pop    rdi
   14000d38a:	ret    
   14000d38b:	int3   
   14000d38c:	rex push rbx
   14000d38e:	sub    rsp,0x20
   14000d392:	mov    rbx,rcx
   14000d395:	mov    ecx,DWORD PTR [rip+0x164a5]        # 0x140023840
   14000d39b:	cmp    ecx,0xffffffff
   14000d39e:	je     0x14000d3c4
   14000d3a0:	test   rbx,rbx
   14000d3a3:	jne    0x14000d3b4
   14000d3a5:	call   QWORD PTR [rip+0xce15]        # 0x14001a1c0
   14000d3ab:	mov    ecx,DWORD PTR [rip+0x1648f]        # 0x140023840
   14000d3b1:	mov    rbx,rax
   14000d3b4:	xor    edx,edx
   14000d3b6:	call   QWORD PTR [rip+0xce0c]        # 0x14001a1c8
   14000d3bc:	mov    rcx,rbx
   14000d3bf:	call   0x14000d258
   14000d3c4:	add    rsp,0x20
   14000d3c8:	pop    rbx
   14000d3c9:	ret    
   14000d3ca:	int3   
   14000d3cb:	int3   
   14000d3cc:	rex push rbx
   14000d3ce:	sub    rsp,0x20
   14000d3d2:	call   0x1400098e8
   14000d3d7:	call   0x14000c94c
   14000d3dc:	test   eax,eax
   14000d3de:	je     0x14000d440
   14000d3e0:	lea    rcx,[rip+0xfffffffffffffe71]        # 0x14000d258
   14000d3e7:	call   QWORD PTR [rip+0xcdf3]        # 0x14001a1e0
   14000d3ed:	mov    DWORD PTR [rip+0x1644d],eax        # 0x140023840
   14000d3f3:	cmp    eax,0xffffffff
   14000d3f6:	je     0x14000d440
   14000d3f8:	mov    edx,0x2c8
   14000d3fd:	mov    ecx,0x1
   14000d402:	call   0x140010bd0
   14000d407:	mov    rbx,rax
   14000d40a:	test   rax,rax
   14000d40d:	je     0x14000d440
   14000d40f:	mov    ecx,DWORD PTR [rip+0x1642b]        # 0x140023840
   14000d415:	mov    rdx,rax
   14000d418:	call   QWORD PTR [rip+0xcdaa]        # 0x14001a1c8
   14000d41e:	test   eax,eax
   14000d420:	je     0x14000d440
   14000d422:	xor    edx,edx
   14000d424:	mov    rcx,rbx
   14000d427:	call   0x14000d0f8
   14000d42c:	call   QWORD PTR [rip+0xcd1e]        # 0x14001a150
   14000d432:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000d437:	mov    DWORD PTR [rbx],eax
   14000d439:	mov    eax,0x1
   14000d43e:	jmp    0x14000d447
   14000d440:	call   0x14000d0d0
   14000d445:	xor    eax,eax
   14000d447:	add    rsp,0x20
   14000d44b:	pop    rbx
   14000d44c:	ret    
   14000d44d:	int3   
   14000d44e:	int3   
   14000d44f:	int3   
   14000d450:	rex push rbx
   14000d452:	sub    rsp,0x20
   14000d456:	mov    edx,0x8
   14000d45b:	lea    ecx,[rdx+0x18]
   14000d45e:	call   0x140010bd0
   14000d463:	mov    rcx,rax
   14000d466:	mov    rbx,rax
   14000d469:	call   QWORD PTR [rip+0xcd01]        # 0x14001a170
   14000d46f:	mov    QWORD PTR [rip+0x1984a],rax        # 0x140026cc0
   14000d476:	mov    QWORD PTR [rip+0x1983b],rax        # 0x140026cb8
   14000d47d:	test   rbx,rbx
   14000d480:	jne    0x14000d487
   14000d482:	lea    eax,[rbx+0x18]
   14000d485:	jmp    0x14000d48d
   14000d487:	and    QWORD PTR [rbx],0x0
   14000d48b:	xor    eax,eax
   14000d48d:	add    rsp,0x20
   14000d491:	pop    rbx
   14000d492:	ret    
   14000d493:	int3   
   14000d494:	mov    QWORD PTR [rsp+0x8],rbx
   14000d499:	mov    QWORD PTR [rsp+0x10],rsi
   14000d49e:	mov    QWORD PTR [rsp+0x18],rdi
   14000d4a3:	push   r12
   14000d4a5:	push   r13
   14000d4a7:	push   r14
   14000d4a9:	sub    rsp,0x20
   14000d4ad:	mov    r14,rcx
   14000d4b0:	call   0x1400098d0
   14000d4b5:	nop
   14000d4b6:	mov    rcx,QWORD PTR [rip+0x19803]        # 0x140026cc0
   14000d4bd:	call   QWORD PTR [rip+0xcc1d]        # 0x14001a0e0
   14000d4c3:	mov    r12,rax
   14000d4c6:	mov    rcx,QWORD PTR [rip+0x197eb]        # 0x140026cb8
   14000d4cd:	call   QWORD PTR [rip+0xcc0d]        # 0x14001a0e0
   14000d4d3:	mov    rbx,rax
   14000d4d6:	cmp    rax,r12
   14000d4d9:	jb     0x14000d57a
   14000d4df:	mov    rdi,rax
   14000d4e2:	sub    rdi,r12
   14000d4e5:	lea    r13,[rdi+0x8]
   14000d4e9:	cmp    r13,0x8
   14000d4ed:	jb     0x14000d57a
   14000d4f3:	mov    rcx,r12
   14000d4f6:	call   0x140014e84
   14000d4fb:	mov    rsi,rax
   14000d4fe:	cmp    rax,r13
   14000d501:	jae    0x14000d558
   14000d503:	mov    edx,0x1000
   14000d508:	cmp    rax,rdx
   14000d50b:	cmovb  rdx,rax
   14000d50f:	add    rdx,rax
   14000d512:	cmp    rdx,rax
   14000d515:	jb     0x14000d528
   14000d517:	mov    rcx,r12
   14000d51a:	call   0x140010c54
   14000d51f:	xor    ebx,ebx
   14000d521:	test   rax,rax
   14000d524:	jne    0x14000d540
   14000d526:	jmp    0x14000d52a
   14000d528:	xor    ebx,ebx
   14000d52a:	lea    rdx,[rsi+0x20]
   14000d52e:	cmp    rdx,rsi
   14000d531:	jb     0x14000d57c
   14000d533:	mov    rcx,r12
   14000d536:	call   0x140010c54
   14000d53b:	test   rax,rax
   14000d53e:	je     0x14000d57c
   14000d540:	sar    rdi,0x3
   14000d544:	lea    rbx,[rax+rdi*8]
   14000d548:	mov    rcx,rax
   14000d54b:	call   QWORD PTR [rip+0xcc1f]        # 0x14001a170
   14000d551:	mov    QWORD PTR [rip+0x19768],rax        # 0x140026cc0
   14000d558:	mov    rcx,r14
   14000d55b:	call   QWORD PTR [rip+0xcc0f]        # 0x14001a170
   14000d561:	mov    QWORD PTR [rbx],rax
   14000d564:	lea    rcx,[rbx+0x8]
   14000d568:	call   QWORD PTR [rip+0xcc02]        # 0x14001a170
   14000d56e:	mov    QWORD PTR [rip+0x19743],rax        # 0x140026cb8
   14000d575:	mov    rbx,r14
   14000d578:	jmp    0x14000d57c
   14000d57a:	xor    ebx,ebx
   14000d57c:	call   0x1400098dc
   14000d581:	mov    rax,rbx
   14000d584:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d589:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d58e:	mov    rdi,QWORD PTR [rsp+0x50]
   14000d593:	add    rsp,0x20
   14000d597:	pop    r14
   14000d599:	pop    r13
   14000d59b:	pop    r12
   14000d59d:	ret    
   14000d59e:	int3   
   14000d59f:	int3   
   14000d5a0:	sub    rsp,0x28
   14000d5a4:	call   0x14000d494
   14000d5a9:	neg    rax
   14000d5ac:	sbb    eax,eax
   14000d5ae:	neg    eax
   14000d5b0:	dec    eax
   14000d5b2:	add    rsp,0x28
   14000d5b6:	ret    
   14000d5b7:	int3   
   14000d5b8:	mov    QWORD PTR [rsp+0x8],rbx
   14000d5bd:	push   rdi
   14000d5be:	sub    rsp,0x20
   14000d5c2:	lea    rbx,[rip+0x132df]        # 0x1400208a8
   14000d5c9:	lea    rdi,[rip+0x132d8]        # 0x1400208a8
   14000d5d0:	jmp    0x14000d5e0
   14000d5d2:	mov    rax,QWORD PTR [rbx]
   14000d5d5:	test   rax,rax
   14000d5d8:	je     0x14000d5dc
   14000d5da:	call   rax
   14000d5dc:	add    rbx,0x8
   14000d5e0:	cmp    rbx,rdi
   14000d5e3:	jb     0x14000d5d2
   14000d5e5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d5ea:	add    rsp,0x20
   14000d5ee:	pop    rdi
   14000d5ef:	ret    
   14000d5f0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d5f5:	push   rdi
   14000d5f6:	sub    rsp,0x20
   14000d5fa:	lea    rbx,[rip+0x132b7]        # 0x1400208b8
   14000d601:	lea    rdi,[rip+0x132b0]        # 0x1400208b8
   14000d608:	jmp    0x14000d618
   14000d60a:	mov    rax,QWORD PTR [rbx]
   14000d60d:	test   rax,rax
   14000d610:	je     0x14000d614
   14000d612:	call   rax
   14000d614:	add    rbx,0x8
   14000d618:	cmp    rbx,rdi
   14000d61b:	jb     0x14000d60a
   14000d61d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d622:	add    rsp,0x20
   14000d626:	pop    rdi
   14000d627:	ret    
   14000d628:	mov    QWORD PTR [rsp+0x8],rbx
   14000d62d:	push   rdi
   14000d62e:	sub    rsp,0x20
   14000d632:	lea    rbx,[rip+0x16217]        # 0x140023850
   14000d639:	mov    edi,0xa
   14000d63e:	mov    rcx,QWORD PTR [rbx]
   14000d641:	call   QWORD PTR [rip+0xcb29]        # 0x14001a170
   14000d647:	mov    QWORD PTR [rbx],rax
   14000d64a:	add    rbx,0x8
   14000d64e:	dec    rdi
   14000d651:	jne    0x14000d63e
   14000d653:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d658:	add    rsp,0x20
   14000d65c:	pop    rdi
   14000d65d:	ret    
   14000d65e:	int3   
   14000d65f:	int3   
   14000d660:	mov    rax,rcx
   14000d663:	mov    ecx,0x5a4d
   14000d668:	cmp    WORD PTR [rax],cx
   14000d66b:	je     0x14000d670
   14000d66d:	xor    eax,eax
   14000d66f:	ret    
   14000d670:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000d674:	add    rcx,rax
   14000d677:	xor    eax,eax
   14000d679:	cmp    DWORD PTR [rcx],0x4550
   14000d67f:	jne    0x14000d68d
   14000d681:	mov    edx,0x20b
   14000d686:	cmp    WORD PTR [rcx+0x18],dx
   14000d68a:	sete   al
   14000d68d:	repz ret 
   14000d68f:	int3   
   14000d690:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000d694:	xor    r9d,r9d
   14000d697:	mov    r10,rdx
   14000d69a:	add    r8,rcx
   14000d69d:	movzx  eax,WORD PTR [r8+0x14]
   14000d6a2:	movzx  r11d,WORD PTR [r8+0x6]
   14000d6a7:	lea    rcx,[rax+r8*1+0x18]
   14000d6ac:	test   r11d,r11d
   14000d6af:	je     0x14000d6cf
   14000d6b1:	mov    edx,DWORD PTR [rcx+0xc]
   14000d6b4:	cmp    r10,rdx
   14000d6b7:	jb     0x14000d6c3
   14000d6b9:	mov    eax,DWORD PTR [rcx+0x8]
   14000d6bc:	add    eax,edx
   14000d6be:	cmp    r10,rax
   14000d6c1:	jb     0x14000d6d2
   14000d6c3:	inc    r9d
   14000d6c6:	add    rcx,0x28
   14000d6ca:	cmp    r9d,r11d
   14000d6cd:	jb     0x14000d6b1
   14000d6cf:	xor    eax,eax
   14000d6d1:	ret    
   14000d6d2:	mov    rax,rcx
   14000d6d5:	ret    
   14000d6d6:	int3   
   14000d6d7:	int3   
   14000d6d8:	int3   
   14000d6d9:	int3   
   14000d6da:	int3   
   14000d6db:	int3   
   14000d6dc:	int3   
   14000d6dd:	int3   
   14000d6de:	int3   
   14000d6df:	int3   
   14000d6e0:	sub    rsp,0x28
   14000d6e4:	mov    r8,rcx
   14000d6e7:	lea    r9,[rip+0xffffffffffff2912]        # 0x140000000
   14000d6ee:	mov    rcx,r9
   14000d6f1:	call   0x14000d660
   14000d6f6:	test   eax,eax
   14000d6f8:	je     0x14000d71c
   14000d6fa:	sub    r8,r9
   14000d6fd:	mov    rdx,r8
   14000d700:	mov    rcx,r9
   14000d703:	call   0x14000d690
   14000d708:	test   rax,rax
   14000d70b:	je     0x14000d71c
   14000d70d:	mov    eax,DWORD PTR [rax+0x24]
   14000d710:	shr    eax,0x1f
   14000d713:	not    eax
   14000d715:	and    eax,0x1
   14000d718:	jmp    0x14000d71c
   14000d71a:	xor    eax,eax
   14000d71c:	add    rsp,0x28
   14000d720:	ret    
   14000d721:	int3   
   14000d722:	int3   
   14000d723:	int3   
   14000d724:	mov    r11,rsp
   14000d727:	mov    QWORD PTR [r11+0x8],rbx
   14000d72b:	mov    QWORD PTR [r11+0x18],rbp
   14000d72f:	mov    QWORD PTR [r11+0x20],rsi
   14000d733:	mov    QWORD PTR [r11+0x10],rdx
   14000d737:	push   rdi
   14000d738:	push   r12
   14000d73a:	push   r13
   14000d73c:	push   r14
   14000d73e:	push   r15
   14000d740:	sub    rsp,0x40
   14000d744:	mov    r15,QWORD PTR [r9+0x8]
   14000d748:	mov    r14,QWORD PTR [r9]
   14000d74b:	mov    eax,DWORD PTR [rcx+0x4]
   14000d74e:	mov    rdi,QWORD PTR [r9+0x38]
   14000d752:	sub    r14,r15
   14000d755:	mov    r12,r9
   14000d758:	mov    r13,rdx
   14000d75b:	mov    rbp,rcx
   14000d75e:	test   al,0x66
   14000d760:	jne    0x14000d853
   14000d766:	movsxd rsi,DWORD PTR [r9+0x48]
   14000d76a:	mov    QWORD PTR [r11-0x38],rcx
   14000d76e:	mov    QWORD PTR [r11-0x30],r8
   14000d772:	mov    rax,rsi
   14000d775:	cmp    esi,DWORD PTR [rdi]
   14000d777:	jae    0x14000d8fe
   14000d77d:	add    rax,rax
   14000d780:	lea    rbx,[rdi+rax*8+0xc]
   14000d785:	mov    eax,DWORD PTR [rbx-0x8]
   14000d788:	cmp    r14,rax
   14000d78b:	jb     0x14000d839
   14000d791:	mov    eax,DWORD PTR [rbx-0x4]
   14000d794:	cmp    r14,rax
   14000d797:	jae    0x14000d839
   14000d79d:	cmp    DWORD PTR [rbx+0x4],0x0
   14000d7a1:	je     0x14000d839
   14000d7a7:	cmp    DWORD PTR [rbx],0x1
   14000d7aa:	je     0x14000d7c5
   14000d7ac:	mov    eax,DWORD PTR [rbx]
   14000d7ae:	lea    rcx,[rsp+0x30]
   14000d7b3:	mov    rdx,r13
   14000d7b6:	add    rax,r15
   14000d7b9:	call   rax
   14000d7bb:	test   eax,eax
   14000d7bd:	js     0x14000d84c
   14000d7c3:	jle    0x14000d839
   14000d7c5:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   14000d7cc:	jne    0x14000d7f6
   14000d7ce:	cmp    QWORD PTR [rip+0x184aa],0x0        # 0x140025c80
   14000d7d6:	je     0x14000d7f6
   14000d7d8:	lea    rcx,[rip+0x184a1]        # 0x140025c80
   14000d7df:	call   0x14000d6e0
   14000d7e4:	test   eax,eax
   14000d7e6:	je     0x14000d7f6
   14000d7e8:	mov    edx,0x1
   14000d7ed:	mov    rcx,rbp
   14000d7f0:	call   QWORD PTR [rip+0x1848a]        # 0x140025c80
   14000d7f6:	mov    ecx,DWORD PTR [rbx+0x4]
   14000d7f9:	mov    r8d,0x1
   14000d7ff:	mov    rdx,r13
   14000d802:	add    rcx,r15
   14000d805:	call   0x140011570
   14000d80a:	mov    rax,QWORD PTR [r12+0x40]
   14000d80f:	mov    edx,DWORD PTR [rbx+0x4]
   14000d812:	movsxd r9,DWORD PTR [rbp+0x0]
   14000d816:	mov    QWORD PTR [rsp+0x28],rax
   14000d81b:	mov    rax,QWORD PTR [r12+0x28]
   14000d820:	add    rdx,r15
   14000d823:	mov    r8,rbp
   14000d826:	mov    rcx,r13
   14000d829:	mov    QWORD PTR [rsp+0x20],rax
   14000d82e:	call   QWORD PTR [rip+0xc9b4]        # 0x14001a1e8
   14000d834:	call   0x1400115a0
   14000d839:	inc    esi
   14000d83b:	add    rbx,0x10
   14000d83f:	cmp    esi,DWORD PTR [rdi]
   14000d841:	jae    0x14000d8fe
   14000d847:	jmp    0x14000d785
   14000d84c:	xor    eax,eax
   14000d84e:	jmp    0x14000d903
   14000d853:	mov    r8,QWORD PTR [r9+0x20]
   14000d857:	xor    ebp,ebp
   14000d859:	xor    r13d,r13d
   14000d85c:	sub    r8,r15
   14000d85f:	test   al,0x20
   14000d861:	je     0x14000d89e
   14000d863:	xor    edx,edx
   14000d865:	cmp    DWORD PTR [rdi],edx
   14000d867:	jbe    0x14000d89e
   14000d869:	lea    rcx,[rdi+0x8]
   14000d86d:	mov    eax,DWORD PTR [rcx-0x4]
   14000d870:	cmp    r8,rax
   14000d873:	jb     0x14000d87c
   14000d875:	mov    eax,DWORD PTR [rcx]
   14000d877:	cmp    r8,rax
   14000d87a:	jbe    0x14000d888
   14000d87c:	inc    edx
   14000d87e:	add    rcx,0x10
   14000d882:	cmp    edx,DWORD PTR [rdi]
   14000d884:	jae    0x14000d89e
   14000d886:	jmp    0x14000d86d
   14000d888:	mov    eax,edx
   14000d88a:	add    rax,rax
   14000d88d:	mov    ecx,DWORD PTR [rdi+rax*8+0x10]
   14000d891:	test   ecx,ecx
   14000d893:	jne    0x14000d89b
   14000d895:	mov    ebp,DWORD PTR [rdi+rax*8+0xc]
   14000d899:	jmp    0x14000d89e
   14000d89b:	mov    r13d,ecx
   14000d89e:	movsxd rsi,DWORD PTR [r9+0x48]
   14000d8a2:	mov    rbx,rsi
   14000d8a5:	cmp    esi,DWORD PTR [rdi]
   14000d8a7:	jae    0x14000d8fe
   14000d8a9:	inc    rbx
   14000d8ac:	shl    rbx,0x4
   14000d8b0:	add    rbx,rdi
   14000d8b3:	mov    eax,DWORD PTR [rbx-0xc]
   14000d8b6:	cmp    r14,rax
   14000d8b9:	jb     0x14000d8f4
   14000d8bb:	mov    eax,DWORD PTR [rbx-0x8]
   14000d8be:	cmp    r14,rax
   14000d8c1:	jae    0x14000d8f4
   14000d8c3:	test   r13d,r13d
   14000d8c6:	je     0x14000d8cd
   14000d8c8:	cmp    r13d,DWORD PTR [rbx]
   14000d8cb:	je     0x14000d8fe
   14000d8cd:	test   ebp,ebp
   14000d8cf:	je     0x14000d8d6
   14000d8d1:	cmp    ebp,DWORD PTR [rbx-0x4]
   14000d8d4:	je     0x14000d8fe
   14000d8d6:	cmp    DWORD PTR [rbx],0x0
   14000d8d9:	jne    0x14000d8f4
   14000d8db:	mov    rdx,QWORD PTR [rsp+0x78]
   14000d8e0:	lea    eax,[rsi+0x1]
   14000d8e3:	mov    cl,0x1
   14000d8e5:	mov    DWORD PTR [r12+0x48],eax
   14000d8ea:	mov    r8d,DWORD PTR [rbx-0x4]
   14000d8ee:	add    r8,r15
   14000d8f1:	call   r8
   14000d8f4:	inc    esi
   14000d8f6:	add    rbx,0x10
   14000d8fa:	cmp    esi,DWORD PTR [rdi]
   14000d8fc:	jb     0x14000d8b3
   14000d8fe:	mov    eax,0x1
   14000d903:	lea    r11,[rsp+0x40]
   14000d908:	mov    rbx,QWORD PTR [r11+0x30]
   14000d90c:	mov    rbp,QWORD PTR [r11+0x40]
   14000d910:	mov    rsi,QWORD PTR [r11+0x48]
   14000d914:	mov    rsp,r11
   14000d917:	pop    r15
   14000d919:	pop    r14
   14000d91b:	pop    r13
   14000d91d:	pop    r12
   14000d91f:	pop    rdi
   14000d920:	ret    
   14000d921:	int3   
   14000d922:	int3   
   14000d923:	int3   
   14000d924:	lea    r8,[rip+0x11a35]        # 0x14001f360
   14000d92b:	xor    eax,eax
   14000d92d:	mov    rdx,r8
   14000d930:	cmp    ecx,DWORD PTR [rdx]
   14000d932:	je     0x14000d942
   14000d934:	inc    eax
   14000d936:	add    rdx,0x10
   14000d93a:	cmp    eax,0x16
   14000d93d:	jb     0x14000d930
   14000d93f:	xor    eax,eax
   14000d941:	ret    
   14000d942:	cdqe   
   14000d944:	add    rax,rax
   14000d947:	mov    rax,QWORD PTR [r8+rax*8+0x8]
   14000d94c:	ret    
   14000d94d:	int3   
   14000d94e:	int3   
   14000d94f:	int3   
   14000d950:	mov    QWORD PTR [rsp+0x10],rbx
   14000d955:	mov    QWORD PTR [rsp+0x18],rbp
   14000d95a:	mov    QWORD PTR [rsp+0x20],rsi
   14000d95f:	push   rdi
   14000d960:	push   r12
   14000d962:	push   r13
   14000d964:	sub    rsp,0x250
   14000d96b:	mov    rax,QWORD PTR [rip+0x1574e]        # 0x1400230c0
   14000d972:	xor    rax,rsp
   14000d975:	mov    QWORD PTR [rsp+0x240],rax
   14000d97d:	mov    edi,ecx
   14000d97f:	call   0x14000d924
   14000d984:	xor    esi,esi
   14000d986:	mov    rbx,rax
   14000d989:	test   rax,rax
   14000d98c:	je     0x14000db80
   14000d992:	lea    ecx,[rsi+0x3]
   14000d995:	call   0x140015298
   14000d99a:	cmp    eax,0x1
   14000d99d:	je     0x14000db18
   14000d9a3:	lea    ecx,[rsi+0x3]
   14000d9a6:	call   0x140015298
   14000d9ab:	test   eax,eax
   14000d9ad:	jne    0x14000d9bc
   14000d9af:	cmp    DWORD PTR [rip+0x15702],0x1        # 0x1400230b8
   14000d9b6:	je     0x14000db18
   14000d9bc:	cmp    edi,0xfc
   14000d9c2:	je     0x14000db80
   14000d9c8:	lea    rbp,[rip+0x172b1]        # 0x140024c80
   14000d9cf:	mov    r12d,0x314
   14000d9d5:	lea    r8,[rip+0x11b74]        # 0x14001f550
   14000d9dc:	mov    rcx,rbp
   14000d9df:	mov    edx,r12d
   14000d9e2:	call   0x14001522c
   14000d9e7:	xor    ecx,ecx
   14000d9e9:	test   eax,eax
   14000d9eb:	jne    0x14000db05
   14000d9f1:	lea    r13,[rip+0x172ba]        # 0x140024cb2
   14000d9f8:	mov    r8d,0x104
   14000d9fe:	mov    WORD PTR [rip+0x174b5],si        # 0x140024eba
   14000da05:	mov    rdx,r13
   14000da08:	call   QWORD PTR [rip+0xc7f2]        # 0x14001a200
   14000da0e:	lea    edi,[r12-0x19]
   14000da13:	test   eax,eax
   14000da15:	jne    0x14000da41
   14000da17:	lea    r8,[rip+0x11b02]        # 0x14001f520
   14000da1e:	mov    edx,edi
   14000da20:	mov    rcx,r13
   14000da23:	call   0x14001522c
   14000da28:	test   eax,eax
   14000da2a:	je     0x14000da41
   14000da2c:	xor    r9d,r9d
   14000da2f:	xor    r8d,r8d
   14000da32:	xor    edx,edx
   14000da34:	xor    ecx,ecx
   14000da36:	mov    QWORD PTR [rsp+0x20],rsi
   14000da3b:	call   0x14000cfa8
   14000da40:	int3   
   14000da41:	mov    rcx,r13
   14000da44:	call   0x140013ce4
   14000da49:	inc    rax
   14000da4c:	cmp    rax,0x3c
   14000da50:	jbe    0x14000da99
   14000da52:	mov    rcx,r13
   14000da55:	call   0x140013ce4
   14000da5a:	lea    r8,[rip+0x11ab7]        # 0x14001f518
   14000da61:	mov    r9d,0x3
   14000da67:	lea    rcx,[rbp+rax*2-0x44]
   14000da6c:	mov    rax,rcx
   14000da6f:	sub    rax,r13
   14000da72:	sar    rax,1
   14000da75:	sub    rdi,rax
   14000da78:	mov    rdx,rdi
   14000da7b:	call   0x14001515c
   14000da80:	test   eax,eax
   14000da82:	je     0x14000da99
   14000da84:	xor    r9d,r9d
   14000da87:	xor    r8d,r8d
   14000da8a:	xor    edx,edx
   14000da8c:	xor    ecx,ecx
   14000da8e:	mov    QWORD PTR [rsp+0x20],rsi
   14000da93:	call   0x14000cfa8
   14000da98:	int3   
   14000da99:	lea    r8,[rip+0x11a6c]        # 0x14001f50c
   14000daa0:	mov    rdx,r12
   14000daa3:	mov    rcx,rbp
   14000daa6:	call   0x1400150d4
   14000daab:	test   eax,eax
   14000daad:	jne    0x14000daf0
   14000daaf:	mov    r8,rbx
   14000dab2:	mov    rdx,r12
   14000dab5:	mov    rcx,rbp
   14000dab8:	call   0x1400150d4
   14000dabd:	test   eax,eax
   14000dabf:	jne    0x14000dadb
   14000dac1:	lea    rdx,[rip+0x119f8]        # 0x14001f4c0
   14000dac8:	mov    r8d,0x12010
   14000dace:	mov    rcx,rbp
   14000dad1:	call   0x140014ecc
   14000dad6:	jmp    0x14000db80
   14000dadb:	xor    r9d,r9d
   14000dade:	xor    r8d,r8d
   14000dae1:	xor    edx,edx
   14000dae3:	xor    ecx,ecx
   14000dae5:	mov    QWORD PTR [rsp+0x20],rsi
   14000daea:	call   0x14000cfa8
   14000daef:	int3   
   14000daf0:	xor    r9d,r9d
   14000daf3:	xor    r8d,r8d
   14000daf6:	xor    edx,edx
   14000daf8:	xor    ecx,ecx
   14000dafa:	mov    QWORD PTR [rsp+0x20],rsi
   14000daff:	call   0x14000cfa8
   14000db04:	int3   
   14000db05:	xor    r9d,r9d
   14000db08:	xor    r8d,r8d
   14000db0b:	xor    edx,edx
   14000db0d:	mov    QWORD PTR [rsp+0x20],rsi
   14000db12:	call   0x14000cfa8
   14000db17:	int3   
   14000db18:	mov    ecx,0xfffffff4
   14000db1d:	call   QWORD PTR [rip+0xc6d5]        # 0x14001a1f8
   14000db23:	mov    rdi,rax
   14000db26:	test   rax,rax
   14000db29:	je     0x14000db80
   14000db2b:	cmp    rax,0xffffffffffffffff
   14000db2f:	je     0x14000db80
   14000db31:	mov    edx,esi
   14000db33:	lea    r8,[rsp+0x40]
   14000db38:	mov    cl,BYTE PTR [rbx]
   14000db3a:	mov    BYTE PTR [r8],cl
   14000db3d:	cmp    WORD PTR [rbx],si
   14000db40:	je     0x14000db53
   14000db42:	inc    edx
   14000db44:	inc    r8
   14000db47:	add    rbx,0x2
   14000db4b:	cmp    edx,0x1f4
   14000db51:	jb     0x14000db38
   14000db53:	lea    rcx,[rsp+0x40]
   14000db58:	mov    BYTE PTR [rsp+0x233],sil
   14000db60:	call   0x140009fd0
   14000db65:	lea    r9,[rsp+0x30]
   14000db6a:	lea    rdx,[rsp+0x40]
   14000db6f:	mov    rcx,rdi
   14000db72:	mov    r8,rax
   14000db75:	mov    QWORD PTR [rsp+0x20],rsi
   14000db7a:	call   QWORD PTR [rip+0xc670]        # 0x14001a1f0
   14000db80:	mov    rcx,QWORD PTR [rsp+0x240]
   14000db88:	xor    rcx,rsp
   14000db8b:	call   0x14000a850
   14000db90:	lea    r11,[rsp+0x250]
   14000db98:	mov    rbx,QWORD PTR [r11+0x28]
   14000db9c:	mov    rbp,QWORD PTR [r11+0x30]
   14000dba0:	mov    rsi,QWORD PTR [r11+0x38]
   14000dba4:	mov    rsp,r11
   14000dba7:	pop    r13
   14000dba9:	pop    r12
   14000dbab:	pop    rdi
   14000dbac:	ret    
   14000dbad:	int3   
   14000dbae:	int3   
   14000dbaf:	int3   
   14000dbb0:	sub    rsp,0x28
   14000dbb4:	mov    ecx,0x3
   14000dbb9:	call   0x140015298
   14000dbbe:	cmp    eax,0x1
   14000dbc1:	je     0x14000dbda
   14000dbc3:	mov    ecx,0x3
   14000dbc8:	call   0x140015298
   14000dbcd:	test   eax,eax
   14000dbcf:	jne    0x14000dbee
   14000dbd1:	cmp    DWORD PTR [rip+0x154e0],0x1        # 0x1400230b8
   14000dbd8:	jne    0x14000dbee
   14000dbda:	mov    ecx,0xfc
   14000dbdf:	call   0x14000d950
   14000dbe4:	mov    ecx,0xff
   14000dbe9:	call   0x14000d950
   14000dbee:	add    rsp,0x28
   14000dbf2:	ret    
   14000dbf3:	int3   
   14000dbf4:	mov    QWORD PTR [rsp+0x8],rbx
   14000dbf9:	mov    QWORD PTR [rsp+0x10],rdi
   14000dbfe:	push   r12
   14000dc00:	sub    rsp,0x20
   14000dc04:	mov    rbx,rcx
   14000dc07:	call   0x140010b28
   14000dc0c:	mov    ecx,eax
   14000dc0e:	call   0x1400152d8
   14000dc13:	test   eax,eax
   14000dc15:	je     0x14000dcb2
   14000dc1b:	call   0x14000abc8
   14000dc20:	add    rax,0x30
   14000dc24:	cmp    rbx,rax
   14000dc27:	jne    0x14000dc2d
   14000dc29:	xor    eax,eax
   14000dc2b:	jmp    0x14000dc40
   14000dc2d:	call   0x14000abc8
   14000dc32:	add    rax,0x60
   14000dc36:	cmp    rbx,rax
   14000dc39:	jne    0x14000dcb2
   14000dc3b:	mov    eax,0x1
   14000dc40:	inc    DWORD PTR [rip+0x16dae]        # 0x1400249f4
   14000dc46:	test   DWORD PTR [rbx+0x18],0x10c
   14000dc4d:	jne    0x14000dcb2
   14000dc4f:	lea    r12,[rip+0x17652]        # 0x1400252a8
   14000dc56:	movsxd rdi,eax
   14000dc59:	cmp    QWORD PTR [r12+rdi*8],0x0
   14000dc5e:	jne    0x14000dc8b
   14000dc60:	mov    ecx,0x1000
   14000dc65:	call   0x140010b50
   14000dc6a:	mov    QWORD PTR [r12+rdi*8],rax
   14000dc6e:	test   rax,rax
   14000dc71:	jne    0x14000dc8b
   14000dc73:	lea    rax,[rbx+0x20]
   14000dc77:	mov    QWORD PTR [rbx+0x10],rax
   14000dc7b:	mov    QWORD PTR [rbx],rax
   14000dc7e:	mov    eax,0x2
   14000dc83:	mov    DWORD PTR [rbx+0x24],eax
   14000dc86:	mov    DWORD PTR [rbx+0x8],eax
   14000dc89:	jmp    0x14000dca4
   14000dc8b:	mov    rcx,QWORD PTR [r12+rdi*8]
   14000dc8f:	mov    DWORD PTR [rbx+0x24],0x1000
   14000dc96:	mov    DWORD PTR [rbx+0x8],0x1000
   14000dc9d:	mov    QWORD PTR [rbx+0x10],rcx
   14000dca1:	mov    QWORD PTR [rbx],rcx
   14000dca4:	or     DWORD PTR [rbx+0x18],0x1102
   14000dcab:	mov    eax,0x1
   14000dcb0:	jmp    0x14000dcb4
   14000dcb2:	xor    eax,eax
   14000dcb4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dcb9:	mov    rdi,QWORD PTR [rsp+0x38]
   14000dcbe:	add    rsp,0x20
   14000dcc2:	pop    r12
   14000dcc4:	ret    
   14000dcc5:	int3   
   14000dcc6:	int3   
   14000dcc7:	int3   
   14000dcc8:	test   ecx,ecx
   14000dcca:	je     0x14000dcfe
   14000dccc:	push   rbx
   14000dccd:	sub    rsp,0x20
   14000dcd1:	test   DWORD PTR [rdx+0x18],0x1000
   14000dcd8:	mov    rbx,rdx
   14000dcdb:	je     0x14000dcf9
   14000dcdd:	mov    rcx,rdx
   14000dce0:	call   0x14000be78
   14000dce5:	and    DWORD PTR [rbx+0x18],0xffffeeff
   14000dcec:	and    DWORD PTR [rbx+0x24],0x0
   14000dcf0:	and    QWORD PTR [rbx],0x0
   14000dcf4:	and    QWORD PTR [rbx+0x10],0x0
   14000dcf9:	add    rsp,0x20
   14000dcfd:	pop    rbx
   14000dcfe:	ret    
   14000dcff:	int3   
   14000dd00:	rex push rbx
   14000dd02:	sub    rsp,0x20
   14000dd06:	test   BYTE PTR [rdx+0x18],0x40
   14000dd0a:	mov    rbx,r8
   14000dd0d:	je     0x14000dd1b
   14000dd0f:	cmp    QWORD PTR [rdx+0x10],0x0
   14000dd14:	jne    0x14000dd1b
   14000dd16:	inc    DWORD PTR [r8]
   14000dd19:	jmp    0x14000dd40
   14000dd1b:	dec    DWORD PTR [rdx+0x8]
   14000dd1e:	js     0x14000dd2d
   14000dd20:	mov    rax,QWORD PTR [rdx]
   14000dd23:	mov    BYTE PTR [rax],cl
   14000dd25:	inc    QWORD PTR [rdx]
   14000dd28:	movzx  eax,cl
   14000dd2b:	jmp    0x14000dd35
   14000dd2d:	movsx  ecx,cl
   14000dd30:	call   0x14001084c
   14000dd35:	cmp    eax,0xffffffff
   14000dd38:	jne    0x14000dd3e
   14000dd3a:	or     DWORD PTR [rbx],eax
   14000dd3c:	jmp    0x14000dd40
   14000dd3e:	inc    DWORD PTR [rbx]
   14000dd40:	add    rsp,0x20
   14000dd44:	pop    rbx
   14000dd45:	ret    
   14000dd46:	int3   
   14000dd47:	int3   
   14000dd48:	test   edx,edx
   14000dd4a:	jle    0x14000dd98
   14000dd4c:	mov    QWORD PTR [rsp+0x8],rbx
   14000dd51:	mov    QWORD PTR [rsp+0x10],rbp
   14000dd56:	mov    QWORD PTR [rsp+0x18],rsi
   14000dd5b:	push   rdi
   14000dd5c:	sub    rsp,0x20
   14000dd60:	mov    rdi,r9
   14000dd63:	mov    rsi,r8
   14000dd66:	mov    ebx,edx
   14000dd68:	mov    bpl,cl
   14000dd6b:	mov    r8,rdi
   14000dd6e:	mov    rdx,rsi
   14000dd71:	mov    cl,bpl
   14000dd74:	dec    ebx
   14000dd76:	call   0x14000dd00
   14000dd7b:	cmp    DWORD PTR [rdi],0xffffffff
   14000dd7e:	je     0x14000dd84
   14000dd80:	test   ebx,ebx
   14000dd82:	jg     0x14000dd6b
   14000dd84:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dd89:	mov    rbp,QWORD PTR [rsp+0x38]
   14000dd8e:	mov    rsi,QWORD PTR [rsp+0x40]
   14000dd93:	add    rsp,0x20
   14000dd97:	pop    rdi
   14000dd98:	ret    
   14000dd99:	int3   
   14000dd9a:	int3   
   14000dd9b:	int3   
   14000dd9c:	mov    QWORD PTR [rsp+0x8],rbx
   14000dda1:	mov    QWORD PTR [rsp+0x10],rbp
   14000dda6:	mov    QWORD PTR [rsp+0x18],rsi
   14000ddab:	push   rdi
   14000ddac:	push   r12
   14000ddae:	push   r13
   14000ddb0:	sub    rsp,0x20
   14000ddb4:	test   BYTE PTR [r8+0x18],0x40
   14000ddb9:	mov    rbx,QWORD PTR [rsp+0x60]
   14000ddbe:	mov    rdi,r9
   14000ddc1:	mov    r12d,DWORD PTR [rbx]
   14000ddc4:	mov    rbp,r8
   14000ddc7:	mov    esi,edx
   14000ddc9:	mov    r13,rcx
   14000ddcc:	je     0x14000ddda
   14000ddce:	cmp    QWORD PTR [r8+0x10],0x0
   14000ddd3:	jne    0x14000ddda
   14000ddd5:	add    DWORD PTR [r9],edx
   14000ddd8:	jmp    0x14000de18
   14000ddda:	and    DWORD PTR [rbx],0x0
   14000dddd:	test   edx,edx
   14000dddf:	jle    0x14000de15
   14000dde1:	mov    cl,BYTE PTR [r13+0x0]
   14000dde5:	mov    r8,rdi
   14000dde8:	mov    rdx,rbp
   14000ddeb:	dec    esi
   14000dded:	call   0x14000dd00
   14000ddf2:	inc    r13
   14000ddf5:	cmp    DWORD PTR [rdi],0xffffffff
   14000ddf8:	jne    0x14000de0c
   14000ddfa:	cmp    DWORD PTR [rbx],0x2a
   14000ddfd:	jne    0x14000de10
   14000ddff:	mov    r8,rdi
   14000de02:	mov    rdx,rbp
   14000de05:	mov    cl,0x3f
   14000de07:	call   0x14000dd00
   14000de0c:	test   esi,esi
   14000de0e:	jg     0x14000dde1
   14000de10:	cmp    DWORD PTR [rbx],0x0
   14000de13:	jne    0x14000de18
   14000de15:	mov    DWORD PTR [rbx],r12d
   14000de18:	mov    rbx,QWORD PTR [rsp+0x40]
   14000de1d:	mov    rbp,QWORD PTR [rsp+0x48]
   14000de22:	mov    rsi,QWORD PTR [rsp+0x50]
   14000de27:	add    rsp,0x20
   14000de2b:	pop    r13
   14000de2d:	pop    r12
   14000de2f:	pop    rdi
   14000de30:	ret    
   14000de31:	int3   
   14000de32:	int3   
   14000de33:	int3   
   14000de34:	mov    QWORD PTR [rsp+0x18],rbx
   14000de39:	push   rbp
   14000de3a:	push   rsi
   14000de3b:	push   rdi
   14000de3c:	push   r12
   14000de3e:	push   r13
   14000de40:	push   r14
   14000de42:	push   r15
   14000de44:	lea    rbp,[rsp-0x1d0]
   14000de4c:	sub    rsp,0x2d0
   14000de53:	mov    rax,QWORD PTR [rip+0x15266]        # 0x1400230c0
   14000de5a:	xor    rax,rsp
   14000de5d:	mov    QWORD PTR [rbp+0x1c8],rax
   14000de64:	xor    eax,eax
   14000de66:	mov    rbx,rcx
   14000de69:	mov    QWORD PTR [rsp+0x70],rcx
   14000de6e:	mov    QWORD PTR [rsp+0x68],rdx
   14000de73:	lea    rcx,[rbp-0x80]
   14000de77:	mov    rdx,r8
   14000de7a:	mov    r14,r9
   14000de7d:	mov    DWORD PTR [rsp+0x64],eax
   14000de81:	mov    r13d,eax
   14000de84:	mov    DWORD PTR [rsp+0x58],eax
   14000de88:	mov    edi,eax
   14000de8a:	mov    DWORD PTR [rsp+0x44],eax
   14000de8e:	mov    DWORD PTR [rsp+0x4c],eax
   14000de92:	mov    DWORD PTR [rsp+0x5c],eax
   14000de96:	mov    DWORD PTR [rsp+0x54],eax
   14000de9a:	call   0x14000c724
   14000de9f:	call   0x14000bdf0
   14000dea4:	xor    r10d,r10d
   14000dea7:	mov    QWORD PTR [rbp-0x60],rax
   14000deab:	test   rbx,rbx
   14000deae:	jne    0x14000dedc
   14000deb0:	call   0x14000bdf0
   14000deb5:	mov    DWORD PTR [rax],0x16
   14000debb:	call   0x14000d04c
   14000dec0:	xor    r11d,r11d
   14000dec3:	cmp    BYTE PTR [rbp-0x68],r11b
   14000dec7:	je     0x14000ded4
   14000dec9:	mov    rax,QWORD PTR [rbp-0x70]
   14000decd:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000ded4:	or     eax,0xffffffff
   14000ded7:	jmp    0x14000e696
   14000dedc:	or     r15d,0xffffffff
   14000dee0:	test   BYTE PTR [rbx+0x18],0x40
   14000dee4:	lea    r9,[rip+0xffffffffffff2115]        # 0x140000000
   14000deeb:	jne    0x14000df96
   14000def1:	mov    rcx,rbx
   14000def4:	call   0x140010b28
   14000def9:	lea    rdx,[rip+0x159b0]        # 0x1400238b0
   14000df00:	cmp    eax,r15d
   14000df03:	je     0x14000df2d
   14000df05:	cmp    eax,0xfffffffe
   14000df08:	je     0x14000df2d
   14000df0a:	movsxd r8,eax
   14000df0d:	lea    r9,[rip+0xffffffffffff20ec]        # 0x140000000
   14000df14:	mov    rcx,r8
   14000df17:	and    r8d,0x1f
   14000df1b:	sar    rcx,0x5
   14000df1f:	imul   r8,r8,0x58
   14000df23:	add    r8,QWORD PTR [r9+rcx*8+0x25a80]
   14000df2b:	jmp    0x14000df37
   14000df2d:	mov    r8,rdx
   14000df30:	lea    r9,[rip+0xffffffffffff20c9]        # 0x140000000
   14000df37:	test   BYTE PTR [r8+0x38],0x7f
   14000df3c:	jne    0x14000df67
   14000df3e:	cmp    eax,r15d
   14000df41:	je     0x14000df61
   14000df43:	cmp    eax,0xfffffffe
   14000df46:	je     0x14000df61
   14000df48:	movsxd rdx,eax
   14000df4b:	mov    rax,rdx
   14000df4e:	and    edx,0x1f
   14000df51:	sar    rax,0x5
   14000df55:	imul   rdx,rdx,0x58
   14000df59:	add    rdx,QWORD PTR [r9+rax*8+0x25a80]
   14000df61:	test   BYTE PTR [rdx+0x38],0x80
   14000df65:	je     0x14000df93
   14000df67:	call   0x14000bdf0
   14000df6c:	mov    DWORD PTR [rax],0x16
   14000df72:	call   0x14000d04c
   14000df77:	xor    r11d,r11d
   14000df7a:	cmp    BYTE PTR [rbp-0x68],r11b
   14000df7e:	je     0x14000df8b
   14000df80:	mov    rax,QWORD PTR [rbp-0x70]
   14000df84:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000df8b:	mov    eax,r15d
   14000df8e:	jmp    0x14000e696
   14000df93:	xor    r10d,r10d
   14000df96:	mov    r8,QWORD PTR [rsp+0x68]
   14000df9b:	test   r8,r8
   14000df9e:	je     0x14000df67
   14000dfa0:	mov    r12b,BYTE PTR [r8]
   14000dfa3:	mov    esi,r10d
   14000dfa6:	mov    DWORD PTR [rsp+0x40],r10d
   14000dfab:	mov    DWORD PTR [rsp+0x48],r10d
   14000dfb0:	mov    edx,r10d
   14000dfb3:	mov    QWORD PTR [rbp-0x50],r10
   14000dfb7:	test   r12b,r12b
   14000dfba:	je     0x14000e683
   14000dfc0:	mov    rbx,QWORD PTR [rbp-0x48]
   14000dfc4:	mov    r11d,0x200
   14000dfca:	inc    r8
   14000dfcd:	mov    QWORD PTR [rsp+0x68],r8
   14000dfd2:	test   esi,esi
   14000dfd4:	js     0x14000e683
   14000dfda:	lea    eax,[r12-0x20]
   14000dfdf:	cmp    al,0x58
   14000dfe1:	ja     0x14000dff5
   14000dfe3:	movsx  rax,r12b
   14000dfe7:	movsx  ecx,BYTE PTR [rax+r9*1+0x1f580]
   14000dff0:	and    ecx,0xf
   14000dff3:	jmp    0x14000dff8
   14000dff5:	mov    ecx,r10d
   14000dff8:	movsxd rax,edx
   14000dffb:	movsxd rcx,ecx
   14000dffe:	lea    rdx,[rax+rcx*8]
   14000e002:	movsx  edx,BYTE PTR [rdx+r9*1+0x1f5a0]
   14000e00b:	sar    edx,0x4
   14000e00e:	mov    DWORD PTR [rsp+0x60],edx
   14000e012:	mov    ecx,edx
   14000e014:	test   edx,edx
   14000e016:	je     0x14000e76d
   14000e01c:	dec    ecx
   14000e01e:	je     0x14000e89e
   14000e024:	dec    ecx
   14000e026:	je     0x14000e84e
   14000e02c:	dec    ecx
   14000e02e:	je     0x14000e815
   14000e034:	dec    ecx
   14000e036:	je     0x14000e808
   14000e03c:	dec    ecx
   14000e03e:	je     0x14000e7ce
   14000e044:	dec    ecx
   14000e046:	je     0x14000e6c0
   14000e04c:	dec    ecx
   14000e04e:	jne    0x14000e677
   14000e054:	movsx  eax,r12b
   14000e058:	cmp    eax,0x64
   14000e05b:	jg     0x14000e1d4
   14000e061:	je     0x14000e2d5
   14000e067:	cmp    eax,0x41
   14000e06a:	je     0x14000e1a8
   14000e070:	cmp    eax,0x43
   14000e073:	je     0x14000e14e
   14000e079:	cmp    eax,0x45
   14000e07c:	je     0x14000e1a8
   14000e082:	cmp    eax,0x47
   14000e085:	je     0x14000e1a8
   14000e08b:	cmp    eax,0x53
   14000e08e:	je     0x14000e104
   14000e090:	cmp    eax,0x58
   14000e093:	je     0x14000e26f
   14000e099:	cmp    eax,0x5a
   14000e09c:	je     0x14000e0b5
   14000e09e:	cmp    eax,0x61
   14000e0a1:	je     0x14000e1b4
   14000e0a7:	cmp    eax,0x63
   14000e0aa:	je     0x14000e15c
   14000e0b0:	jmp    0x14000e4e0
   14000e0b5:	mov    rax,QWORD PTR [r14]
   14000e0b8:	add    r14,0x8
   14000e0bc:	test   rax,rax
   14000e0bf:	je     0x14000e0f0
   14000e0c1:	mov    rbx,QWORD PTR [rax+0x8]
   14000e0c5:	test   rbx,rbx
   14000e0c8:	je     0x14000e0f0
   14000e0ca:	movsx  eax,WORD PTR [rax]
   14000e0cd:	bt     r13d,0xb
   14000e0d2:	jae    0x14000e0e6
   14000e0d4:	cdq    
   14000e0d5:	mov    DWORD PTR [rsp+0x54],0x1
   14000e0dd:	sub    eax,edx
   14000e0df:	sar    eax,1
   14000e0e1:	jmp    0x14000e4dc
   14000e0e6:	mov    DWORD PTR [rsp+0x54],r10d
   14000e0eb:	jmp    0x14000e4dc
   14000e0f0:	mov    rbx,QWORD PTR [rip+0x157a9]        # 0x1400238a0
   14000e0f7:	mov    rcx,rbx
   14000e0fa:	call   0x140009fd0
   14000e0ff:	jmp    0x14000e4d9
   14000e104:	test   r13d,0x830
   14000e10b:	jne    0x14000e112
   14000e10d:	bts    r13d,0xb
   14000e112:	mov    rbx,QWORD PTR [r14]
   14000e115:	cmp    edi,r15d
   14000e118:	mov    eax,edi
   14000e11a:	mov    ecx,0x7fffffff
   14000e11f:	cmove  eax,ecx
   14000e122:	add    r14,0x8
   14000e126:	test   r13d,0x810
   14000e12d:	je     0x14000e23c
   14000e133:	test   rbx,rbx
   14000e136:	mov    DWORD PTR [rsp+0x54],0x1
   14000e13e:	cmove  rbx,QWORD PTR [rip+0x15762]        # 0x1400238a8
   14000e146:	mov    rcx,rbx
   14000e149:	jmp    0x14000e230
   14000e14e:	test   r13d,0x830
   14000e155:	jne    0x14000e15c
   14000e157:	bts    r13d,0xb
   14000e15c:	add    r14,0x8
   14000e160:	test   r13d,0x810
   14000e167:	je     0x14000e190
   14000e169:	movzx  r9d,WORD PTR [r14-0x8]
   14000e16e:	lea    rdx,[rbp-0x40]
   14000e172:	lea    rcx,[rsp+0x48]
   14000e177:	mov    r8,r11
   14000e17a:	call   0x14001558c
   14000e17f:	xor    r10d,r10d
   14000e182:	test   eax,eax
   14000e184:	je     0x14000e19f
   14000e186:	mov    DWORD PTR [rsp+0x5c],0x1
   14000e18e:	jmp    0x14000e19f
   14000e190:	mov    al,BYTE PTR [r14-0x8]
   14000e194:	mov    DWORD PTR [rsp+0x48],0x1
   14000e19c:	mov    BYTE PTR [rbp-0x40],al
   14000e19f:	lea    rbx,[rbp-0x40]
   14000e1a3:	jmp    0x14000e4e0
   14000e1a8:	mov    DWORD PTR [rsp+0x78],0x1
   14000e1b0:	add    r12b,0x20
   14000e1b4:	or     r13d,0x40
   14000e1b8:	lea    rbx,[rbp-0x40]
   14000e1bc:	mov    esi,r11d
   14000e1bf:	test   edi,edi
   14000e1c1:	jns    0x14000e3e5
   14000e1c7:	mov    DWORD PTR [rsp+0x44],0x6
   14000e1cf:	jmp    0x14000e430
   14000e1d4:	cmp    eax,0x65
   14000e1d7:	jl     0x14000e4e0
   14000e1dd:	cmp    eax,0x67
   14000e1e0:	jle    0x14000e1b4
   14000e1e2:	cmp    eax,0x69
   14000e1e5:	je     0x14000e2d5
   14000e1eb:	cmp    eax,0x6e
   14000e1ee:	je     0x14000e2a4
   14000e1f4:	cmp    eax,0x6f
   14000e1f7:	je     0x14000e294
   14000e1fd:	cmp    eax,0x70
   14000e200:	je     0x14000e265
   14000e202:	cmp    eax,0x73
   14000e205:	je     0x14000e112
   14000e20b:	cmp    eax,0x75
   14000e20e:	je     0x14000e2d9
   14000e214:	cmp    eax,0x78
   14000e217:	jne    0x14000e4e0
   14000e21d:	mov    eax,0x27
   14000e222:	jmp    0x14000e274
   14000e224:	dec    eax
   14000e226:	cmp    WORD PTR [rcx],r10w
   14000e22a:	je     0x14000e234
   14000e22c:	add    rcx,0x2
   14000e230:	test   eax,eax
   14000e232:	jne    0x14000e224
   14000e234:	sub    rcx,rbx
   14000e237:	sar    rcx,1
   14000e23a:	jmp    0x14000e25c
   14000e23c:	test   rbx,rbx
   14000e23f:	cmove  rbx,QWORD PTR [rip+0x15659]        # 0x1400238a0
   14000e247:	mov    rcx,rbx
   14000e24a:	jmp    0x14000e256
   14000e24c:	dec    eax
   14000e24e:	cmp    BYTE PTR [rcx],r10b
   14000e251:	je     0x14000e25a
   14000e253:	inc    rcx
   14000e256:	test   eax,eax
   14000e258:	jne    0x14000e24c
   14000e25a:	sub    ecx,ebx
   14000e25c:	mov    DWORD PTR [rsp+0x48],ecx
   14000e260:	jmp    0x14000e4e0
   14000e265:	mov    edi,0x10
   14000e26a:	bts    r13d,0xf
   14000e26f:	mov    eax,0x7
   14000e274:	mov    DWORD PTR [rsp+0x64],eax
   14000e278:	mov    r9d,0x10
   14000e27e:	test   r13b,r13b
   14000e281:	jns    0x14000e2df
   14000e283:	add    al,0x51
   14000e285:	mov    BYTE PTR [rsp+0x50],0x30
   14000e28a:	lea    edx,[r9-0xe]
   14000e28e:	mov    BYTE PTR [rsp+0x51],al
   14000e292:	jmp    0x14000e2e3
   14000e294:	mov    r9d,0x8
   14000e29a:	test   r13b,r13b
   14000e29d:	jns    0x14000e2df
   14000e29f:	or     r13d,r11d
   14000e2a2:	jmp    0x14000e2df
   14000e2a4:	mov    rdi,QWORD PTR [r14]
   14000e2a7:	add    r14,0x8
   14000e2ab:	call   0x140009ce8
   14000e2b0:	xor    r10d,r10d
   14000e2b3:	test   eax,eax
   14000e2b5:	je     0x14000df67
   14000e2bb:	test   r13b,0x20
   14000e2bf:	je     0x14000e2c6
   14000e2c1:	mov    WORD PTR [rdi],si
   14000e2c4:	jmp    0x14000e2c8
   14000e2c6:	mov    DWORD PTR [rdi],esi
   14000e2c8:	mov    DWORD PTR [rsp+0x5c],0x1
   14000e2d0:	jmp    0x14000e645
   14000e2d5:	or     r13d,0x40
   14000e2d9:	mov    r9d,0xa
   14000e2df:	mov    edx,DWORD PTR [rsp+0x4c]
   14000e2e3:	mov    eax,0x8000
   14000e2e8:	test   eax,r13d
   14000e2eb:	jne    0x14000e2f4
   14000e2ed:	bt     r13d,0xc
   14000e2f2:	jae    0x14000e2fd
   14000e2f4:	mov    r8,QWORD PTR [r14]
   14000e2f7:	add    r14,0x8
   14000e2fb:	jmp    0x14000e32b
   14000e2fd:	add    r14,0x8
   14000e301:	test   r13b,0x20
   14000e305:	je     0x14000e31b
   14000e307:	test   r13b,0x40
   14000e30b:	je     0x14000e314
   14000e30d:	movsx  r8,WORD PTR [r14-0x8]
   14000e312:	jmp    0x14000e32b
   14000e314:	movzx  r8d,WORD PTR [r14-0x8]
   14000e319:	jmp    0x14000e32b
   14000e31b:	test   r13b,0x40
   14000e31f:	je     0x14000e327
   14000e321:	movsxd r8,DWORD PTR [r14-0x8]
   14000e325:	jmp    0x14000e32b
   14000e327:	mov    r8d,DWORD PTR [r14-0x8]
   14000e32b:	test   r13b,0x40
   14000e32f:	je     0x14000e33e
   14000e331:	test   r8,r8
   14000e334:	jns    0x14000e33e
   14000e336:	neg    r8
   14000e339:	bts    r13d,0x8
   14000e33e:	test   eax,r13d
   14000e341:	jne    0x14000e34d
   14000e343:	bt     r13d,0xc
   14000e348:	jb     0x14000e34d
   14000e34a:	mov    r8d,r8d
   14000e34d:	test   edi,edi
   14000e34f:	jns    0x14000e358
   14000e351:	mov    edi,0x1
   14000e356:	jmp    0x14000e363
   14000e358:	and    r13d,0xfffffff7
   14000e35c:	cmp    edi,r11d
   14000e35f:	cmovg  edi,r11d
   14000e363:	mov    esi,DWORD PTR [rsp+0x64]
   14000e367:	mov    rax,r8
   14000e36a:	lea    rbx,[rbp+0x1bf]
   14000e371:	neg    rax
   14000e374:	sbb    ecx,ecx
   14000e376:	and    ecx,edx
   14000e378:	mov    DWORD PTR [rsp+0x4c],ecx
   14000e37c:	mov    ecx,edi
   14000e37e:	dec    edi
   14000e380:	test   ecx,ecx
   14000e382:	jg     0x14000e389
   14000e384:	test   r8,r8
   14000e387:	je     0x14000e3a8
   14000e389:	xor    edx,edx
   14000e38b:	mov    rax,r8
   14000e38e:	movsxd rcx,r9d
   14000e391:	div    rcx
   14000e394:	mov    r8,rax
   14000e397:	lea    eax,[rdx+0x30]
   14000e39a:	cmp    eax,0x39
   14000e39d:	jle    0x14000e3a1
   14000e39f:	add    eax,esi
   14000e3a1:	mov    BYTE PTR [rbx],al
   14000e3a3:	dec    rbx
   14000e3a6:	jmp    0x14000e37c
   14000e3a8:	mov    esi,DWORD PTR [rsp+0x40]
   14000e3ac:	lea    rax,[rbp+0x1bf]
   14000e3b3:	mov    DWORD PTR [rsp+0x44],edi
   14000e3b7:	sub    eax,ebx
   14000e3b9:	inc    rbx
   14000e3bc:	mov    DWORD PTR [rsp+0x48],eax
   14000e3c0:	test   r11d,r13d
   14000e3c3:	je     0x14000e4e0
   14000e3c9:	test   eax,eax
   14000e3cb:	je     0x14000e3d6
   14000e3cd:	cmp    BYTE PTR [rbx],0x30
   14000e3d0:	je     0x14000e4e0
   14000e3d6:	dec    rbx
   14000e3d9:	inc    DWORD PTR [rsp+0x48]
   14000e3dd:	mov    BYTE PTR [rbx],0x30
   14000e3e0:	jmp    0x14000e4e0
   14000e3e5:	jne    0x14000e3f7
   14000e3e7:	cmp    r12b,0x67
   14000e3eb:	jne    0x14000e430
   14000e3ed:	mov    DWORD PTR [rsp+0x44],0x1
   14000e3f5:	jmp    0x14000e430
   14000e3f7:	cmp    edi,r11d
   14000e3fa:	cmovg  edi,r11d
   14000e3fe:	mov    DWORD PTR [rsp+0x44],edi
   14000e402:	cmp    edi,0xa3
   14000e408:	jle    0x14000e430
   14000e40a:	add    edi,0x15d
   14000e410:	movsxd rcx,edi
   14000e413:	call   0x140010b50
   14000e418:	mov    QWORD PTR [rbp-0x50],rax
   14000e41c:	test   rax,rax
   14000e41f:	je     0x14000e428
   14000e421:	mov    rbx,rax
   14000e424:	mov    esi,edi
   14000e426:	jmp    0x14000e430
   14000e428:	mov    DWORD PTR [rsp+0x44],0xa3
   14000e430:	mov    rax,QWORD PTR [r14]
   14000e433:	mov    rcx,QWORD PTR [rip+0x15446]        # 0x140023880
   14000e43a:	add    r14,0x8
   14000e43e:	movsx  edi,r12b
   14000e442:	movsxd rsi,esi
   14000e445:	mov    QWORD PTR [rbp-0x48],rax
   14000e449:	call   QWORD PTR [rip+0xbc91]        # 0x14001a0e0
   14000e44f:	lea    rcx,[rbp-0x80]
   14000e453:	mov    r9d,edi
   14000e456:	mov    QWORD PTR [rsp+0x30],rcx
   14000e45b:	mov    ecx,DWORD PTR [rsp+0x78]
   14000e45f:	mov    r8,rsi
   14000e462:	mov    DWORD PTR [rsp+0x28],ecx
   14000e466:	mov    ecx,DWORD PTR [rsp+0x44]
   14000e46a:	mov    rdx,rbx
   14000e46d:	mov    DWORD PTR [rsp+0x20],ecx
   14000e471:	lea    rcx,[rbp-0x48]
   14000e475:	call   rax
   14000e477:	mov    edi,r13d
   14000e47a:	and    edi,0x80
   14000e480:	je     0x14000e4a0
   14000e482:	xor    eax,eax
   14000e484:	cmp    DWORD PTR [rsp+0x44],eax
   14000e488:	jne    0x14000e4a0
   14000e48a:	mov    rcx,QWORD PTR [rip+0x15407]        # 0x140023898
   14000e491:	call   QWORD PTR [rip+0xbc49]        # 0x14001a0e0
   14000e497:	lea    rdx,[rbp-0x80]
   14000e49b:	mov    rcx,rbx
   14000e49e:	call   rax
   14000e4a0:	cmp    r12b,0x67
   14000e4a4:	jne    0x14000e4c0
   14000e4a6:	test   edi,edi
   14000e4a8:	jne    0x14000e4c0
   14000e4aa:	mov    rcx,QWORD PTR [rip+0x153df]        # 0x140023890
   14000e4b1:	call   QWORD PTR [rip+0xbc29]        # 0x14001a0e0
   14000e4b7:	lea    rdx,[rbp-0x80]
   14000e4bb:	mov    rcx,rbx
   14000e4be:	call   rax
   14000e4c0:	cmp    BYTE PTR [rbx],0x2d
   14000e4c3:	jne    0x14000e4cd
   14000e4c5:	bts    r13d,0x8
   14000e4ca:	inc    rbx
   14000e4cd:	mov    rcx,rbx
   14000e4d0:	call   0x140009fd0
   14000e4d5:	mov    esi,DWORD PTR [rsp+0x40]
   14000e4d9:	xor    r10d,r10d
   14000e4dc:	mov    DWORD PTR [rsp+0x48],eax
   14000e4e0:	cmp    DWORD PTR [rsp+0x5c],r10d
   14000e4e5:	jne    0x14000e645
   14000e4eb:	test   r13b,0x40
   14000e4ef:	je     0x14000e522
   14000e4f1:	bt     r13d,0x8
   14000e4f6:	jae    0x14000e4ff
   14000e4f8:	mov    BYTE PTR [rsp+0x50],0x2d
   14000e4fd:	jmp    0x14000e50a
   14000e4ff:	test   r13b,0x1
   14000e503:	je     0x14000e515
   14000e505:	mov    BYTE PTR [rsp+0x50],0x2b
   14000e50a:	mov    edi,0x1
   14000e50f:	mov    DWORD PTR [rsp+0x4c],edi
   14000e513:	jmp    0x14000e526
   14000e515:	test   r13b,0x2
   14000e519:	je     0x14000e522
   14000e51b:	mov    BYTE PTR [rsp+0x50],0x20
   14000e520:	jmp    0x14000e50a
   14000e522:	mov    edi,DWORD PTR [rsp+0x4c]
   14000e526:	mov    r12d,DWORD PTR [rsp+0x58]
   14000e52b:	mov    rsi,QWORD PTR [rsp+0x70]
   14000e530:	sub    r12d,DWORD PTR [rsp+0x48]
   14000e535:	sub    r12d,edi
   14000e538:	test   r13b,0xc
   14000e53c:	jne    0x14000e550
   14000e53e:	lea    r9,[rsp+0x40]
   14000e543:	mov    r8,rsi
   14000e546:	mov    edx,r12d
   14000e549:	mov    cl,0x20
   14000e54b:	call   0x14000dd48
   14000e550:	mov    rax,QWORD PTR [rbp-0x60]
   14000e554:	lea    r9,[rsp+0x40]
   14000e559:	lea    rcx,[rsp+0x50]
   14000e55e:	mov    r8,rsi
   14000e561:	mov    edx,edi
   14000e563:	mov    QWORD PTR [rsp+0x20],rax
   14000e568:	call   0x14000dd9c
   14000e56d:	test   r13b,0x8
   14000e571:	je     0x14000e58b
   14000e573:	test   r13b,0x4
   14000e577:	jne    0x14000e58b
   14000e579:	lea    r9,[rsp+0x40]
   14000e57e:	mov    r8,rsi
   14000e581:	mov    edx,r12d
   14000e584:	mov    cl,0x30
   14000e586:	call   0x14000dd48
   14000e58b:	mov    edi,DWORD PTR [rsp+0x48]
   14000e58f:	xor    eax,eax
   14000e591:	cmp    DWORD PTR [rsp+0x54],eax
   14000e595:	je     0x14000e5fe
   14000e597:	test   edi,edi
   14000e599:	jle    0x14000e5fe
   14000e59b:	mov    rsi,rbx
   14000e59e:	movzx  r9d,WORD PTR [rsi]
   14000e5a2:	lea    rdx,[rbp+0x1c0]
   14000e5a9:	lea    rcx,[rbp-0x58]
   14000e5ad:	mov    r8d,0x6
   14000e5b3:	dec    edi
   14000e5b5:	add    rsi,0x2
   14000e5b9:	call   0x14001558c
   14000e5be:	xor    r10d,r10d
   14000e5c1:	test   eax,eax
   14000e5c3:	jne    0x14000e5f4
   14000e5c5:	mov    edx,DWORD PTR [rbp-0x58]
   14000e5c8:	test   edx,edx
   14000e5ca:	je     0x14000e5f4
   14000e5cc:	mov    rax,QWORD PTR [rbp-0x60]
   14000e5d0:	mov    r8,QWORD PTR [rsp+0x70]
   14000e5d5:	lea    r9,[rsp+0x40]
   14000e5da:	lea    rcx,[rbp+0x1c0]
   14000e5e1:	mov    QWORD PTR [rsp+0x20],rax
   14000e5e6:	call   0x14000dd9c
   14000e5eb:	xor    r10d,r10d
   14000e5ee:	test   edi,edi
   14000e5f0:	jne    0x14000e59e
   14000e5f2:	jmp    0x14000e61c
   14000e5f4:	mov    esi,r15d
   14000e5f7:	mov    DWORD PTR [rsp+0x40],r15d
   14000e5fc:	jmp    0x14000e620
   14000e5fe:	mov    rax,QWORD PTR [rbp-0x60]
   14000e602:	lea    r9,[rsp+0x40]
   14000e607:	mov    r8,rsi
   14000e60a:	mov    edx,edi
   14000e60c:	mov    rcx,rbx
   14000e60f:	mov    QWORD PTR [rsp+0x20],rax
   14000e614:	call   0x14000dd9c
   14000e619:	xor    r10d,r10d
   14000e61c:	mov    esi,DWORD PTR [rsp+0x40]
   14000e620:	test   esi,esi
   14000e622:	js     0x14000e645
   14000e624:	test   r13b,0x4
   14000e628:	je     0x14000e645
   14000e62a:	mov    r8,QWORD PTR [rsp+0x70]
   14000e62f:	lea    r9,[rsp+0x40]
   14000e634:	mov    edx,r12d
   14000e637:	mov    cl,0x20
   14000e639:	call   0x14000dd48
   14000e63e:	mov    esi,DWORD PTR [rsp+0x40]
   14000e642:	xor    r10d,r10d
   14000e645:	mov    rax,QWORD PTR [rbp-0x50]
   14000e649:	test   rax,rax
   14000e64c:	je     0x14000e65d
   14000e64e:	mov    rcx,rax
   14000e651:	call   0x14000b490
   14000e656:	xor    r10d,r10d
   14000e659:	mov    QWORD PTR [rbp-0x50],r10
   14000e65d:	mov    edi,DWORD PTR [rsp+0x44]
   14000e661:	mov    r8,QWORD PTR [rsp+0x68]
   14000e666:	mov    edx,DWORD PTR [rsp+0x60]
   14000e66a:	mov    r11d,0x200
   14000e670:	lea    r9,[rip+0xffffffffffff1989]        # 0x140000000
   14000e677:	mov    r12b,BYTE PTR [r8]
   14000e67a:	test   r12b,r12b
   14000e67d:	jne    0x14000dfca
   14000e683:	cmp    BYTE PTR [rbp-0x68],r10b
   14000e687:	je     0x14000e694
   14000e689:	mov    rcx,QWORD PTR [rbp-0x70]
   14000e68d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000e694:	mov    eax,esi
   14000e696:	mov    rcx,QWORD PTR [rbp+0x1c8]
   14000e69d:	xor    rcx,rsp
   14000e6a0:	call   0x14000a850
   14000e6a5:	mov    rbx,QWORD PTR [rsp+0x320]
   14000e6ad:	add    rsp,0x2d0
   14000e6b4:	pop    r15
   14000e6b6:	pop    r14
   14000e6b8:	pop    r13
   14000e6ba:	pop    r12
   14000e6bc:	pop    rdi
   14000e6bd:	pop    rsi
   14000e6be:	pop    rbp
   14000e6bf:	ret    
   14000e6c0:	cmp    r12b,0x49
   14000e6c4:	je     0x14000e6fe
   14000e6c6:	cmp    r12b,0x68
   14000e6ca:	je     0x14000e6f5
   14000e6cc:	cmp    r12b,0x6c
   14000e6d0:	je     0x14000e6df
   14000e6d2:	cmp    r12b,0x77
   14000e6d6:	jne    0x14000e677
   14000e6d8:	bts    r13d,0xb
   14000e6dd:	jmp    0x14000e677
   14000e6df:	cmp    BYTE PTR [r8],0x6c
   14000e6e3:	jne    0x14000e6ef
   14000e6e5:	inc    r8
   14000e6e8:	bts    r13d,0xc
   14000e6ed:	jmp    0x14000e677
   14000e6ef:	or     r13d,0x10
   14000e6f3:	jmp    0x14000e677
   14000e6f5:	or     r13d,0x20
   14000e6f9:	jmp    0x14000e677
   14000e6fe:	mov    al,BYTE PTR [r8]
   14000e701:	bts    r13d,0xf
   14000e706:	cmp    al,0x36
   14000e708:	jne    0x14000e71f
   14000e70a:	cmp    BYTE PTR [r8+0x1],0x34
   14000e70f:	jne    0x14000e71f
   14000e711:	add    r8,0x2
   14000e715:	bts    r13d,0xf
   14000e71a:	jmp    0x14000e677
   14000e71f:	cmp    al,0x33
   14000e721:	jne    0x14000e738
   14000e723:	cmp    BYTE PTR [r8+0x1],0x32
   14000e728:	jne    0x14000e738
   14000e72a:	add    r8,0x2
   14000e72e:	btr    r13d,0xf
   14000e733:	jmp    0x14000e677
   14000e738:	cmp    al,0x64
   14000e73a:	je     0x14000e677
   14000e740:	cmp    al,0x69
   14000e742:	je     0x14000e677
   14000e748:	cmp    al,0x6f
   14000e74a:	je     0x14000e677
   14000e750:	cmp    al,0x75
   14000e752:	je     0x14000e677
   14000e758:	cmp    al,0x78
   14000e75a:	je     0x14000e677
   14000e760:	cmp    al,0x58
   14000e762:	je     0x14000e677
   14000e768:	mov    DWORD PTR [rsp+0x60],r10d
   14000e76d:	lea    rdx,[rbp-0x80]
   14000e771:	movzx  ecx,r12b
   14000e775:	mov    DWORD PTR [rsp+0x54],r10d
   14000e77a:	call   0x140015338
   14000e77f:	xor    esi,esi
   14000e781:	test   eax,eax
   14000e783:	je     0x14000e7b0
   14000e785:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e78a:	lea    r8,[rsp+0x40]
   14000e78f:	mov    cl,r12b
   14000e792:	call   0x14000dd00
   14000e797:	mov    rdx,QWORD PTR [rsp+0x68]
   14000e79c:	mov    r12b,BYTE PTR [rdx]
   14000e79f:	inc    rdx
   14000e7a2:	mov    QWORD PTR [rsp+0x68],rdx
   14000e7a7:	test   r12b,r12b
   14000e7aa:	je     0x14000e8c7
   14000e7b0:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e7b5:	lea    r8,[rsp+0x40]
   14000e7ba:	mov    cl,r12b
   14000e7bd:	call   0x14000dd00
   14000e7c2:	mov    esi,DWORD PTR [rsp+0x40]
   14000e7c6:	xor    r10d,r10d
   14000e7c9:	jmp    0x14000e661
   14000e7ce:	cmp    r12b,0x2a
   14000e7d2:	jne    0x14000e7f4
   14000e7d4:	mov    edi,DWORD PTR [r14]
   14000e7d7:	add    r14,0x8
   14000e7db:	mov    DWORD PTR [rsp+0x44],edi
   14000e7df:	test   edi,edi
   14000e7e1:	jns    0x14000e677
   14000e7e7:	mov    edi,r15d
   14000e7ea:	mov    DWORD PTR [rsp+0x44],r15d
   14000e7ef:	jmp    0x14000e677
   14000e7f4:	lea    ecx,[rdi+rdi*4]
   14000e7f7:	movsx  eax,r12b
   14000e7fb:	lea    edi,[rax+rcx*2-0x30]
   14000e7ff:	mov    DWORD PTR [rsp+0x44],edi
   14000e803:	jmp    0x14000e677
   14000e808:	mov    edi,r10d
   14000e80b:	mov    DWORD PTR [rsp+0x44],r10d
   14000e810:	jmp    0x14000e677
   14000e815:	cmp    r12b,0x2a
   14000e819:	jne    0x14000e836
   14000e81b:	mov    eax,DWORD PTR [r14]
   14000e81e:	add    r14,0x8
   14000e822:	mov    DWORD PTR [rsp+0x58],eax
   14000e826:	test   eax,eax
   14000e828:	jns    0x14000e677
   14000e82e:	or     r13d,0x4
   14000e832:	neg    eax
   14000e834:	jmp    0x14000e845
   14000e836:	mov    eax,DWORD PTR [rsp+0x58]
   14000e83a:	lea    ecx,[rax+rax*4]
   14000e83d:	movsx  eax,r12b
   14000e841:	lea    eax,[rax+rcx*2-0x30]
   14000e845:	mov    DWORD PTR [rsp+0x58],eax
   14000e849:	jmp    0x14000e677
   14000e84e:	cmp    r12b,0x20
   14000e852:	je     0x14000e895
   14000e854:	cmp    r12b,0x23
   14000e858:	je     0x14000e88b
   14000e85a:	cmp    r12b,0x2b
   14000e85e:	je     0x14000e882
   14000e860:	cmp    r12b,0x2d
   14000e864:	je     0x14000e879
   14000e866:	cmp    r12b,0x30
   14000e86a:	jne    0x14000e677
   14000e870:	or     r13d,0x8
   14000e874:	jmp    0x14000e677
   14000e879:	or     r13d,0x4
   14000e87d:	jmp    0x14000e677
   14000e882:	or     r13d,0x1
   14000e886:	jmp    0x14000e677
   14000e88b:	bts    r13d,0x7
   14000e890:	jmp    0x14000e677
   14000e895:	or     r13d,0x2
   14000e899:	jmp    0x14000e677
   14000e89e:	mov    DWORD PTR [rsp+0x78],r10d
   14000e8a3:	mov    DWORD PTR [rsp+0x5c],r10d
   14000e8a8:	mov    DWORD PTR [rsp+0x58],r10d
   14000e8ad:	mov    DWORD PTR [rsp+0x4c],r10d
   14000e8b2:	mov    r13d,r10d
   14000e8b5:	mov    edi,r15d
   14000e8b8:	mov    DWORD PTR [rsp+0x44],r15d
   14000e8bd:	mov    DWORD PTR [rsp+0x54],r10d
   14000e8c2:	jmp    0x14000e677
   14000e8c7:	call   0x14000bdf0
   14000e8cc:	mov    DWORD PTR [rax],0x16
   14000e8d2:	call   0x14000d04c
   14000e8d7:	cmp    BYTE PTR [rbp-0x68],sil
   14000e8db:	jmp    0x14000df7e
   14000e8e0:	mov    rax,rsp
   14000e8e3:	mov    QWORD PTR [rax+0x8],rbx
   14000e8e7:	mov    QWORD PTR [rax+0x10],rsi
   14000e8eb:	mov    QWORD PTR [rax+0x18],rdi
   14000e8ef:	mov    QWORD PTR [rax+0x20],r12
   14000e8f3:	push   rbp
   14000e8f4:	mov    rbp,rsp
   14000e8f7:	sub    rsp,0x60
   14000e8fb:	mov    rsi,rcx
   14000e8fe:	mov    rdi,rdx
   14000e901:	lea    rcx,[rbp-0x20]
   14000e905:	mov    rdx,r9
   14000e908:	mov    r12,r9
   14000e90b:	mov    rbx,r8
   14000e90e:	call   0x14000c724
   14000e913:	test   rbx,rbx
   14000e916:	jne    0x14000e92f
   14000e918:	cmp    BYTE PTR [rbp-0x8],bl
   14000e91b:	je     0x14000e928
   14000e91d:	mov    rax,QWORD PTR [rbp-0x10]
   14000e921:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000e928:	xor    eax,eax
   14000e92a:	jmp    0x14000e9c8
   14000e92f:	test   rsi,rsi
   14000e932:	jne    0x14000e95c
   14000e934:	call   0x14000bdf0
   14000e939:	mov    DWORD PTR [rax],0x16
   14000e93f:	call   0x14000d04c
   14000e944:	cmp    BYTE PTR [rbp-0x8],0x0
   14000e948:	je     0x14000e955
   14000e94a:	mov    rax,QWORD PTR [rbp-0x10]
   14000e94e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000e955:	mov    eax,0x7fffffff
   14000e95a:	jmp    0x14000e9c8
   14000e95c:	test   rdi,rdi
   14000e95f:	je     0x14000e934
   14000e961:	cmp    rbx,0x7fffffff
   14000e968:	ja     0x14000e934
   14000e96a:	mov    rcx,QWORD PTR [rbp-0x18]
   14000e96e:	cmp    DWORD PTR [rcx+0x8],0x0
   14000e972:	jne    0x14000e987
   14000e974:	mov    r9,r12
   14000e977:	mov    r8,rbx
   14000e97a:	mov    rdx,rdi
   14000e97d:	mov    rcx,rsi
   14000e980:	call   0x140015970
   14000e985:	jmp    0x14000e9b7
   14000e987:	mov    eax,DWORD PTR [rcx+0x4]
   14000e98a:	mov    edx,DWORD PTR [rcx+0xc]
   14000e98d:	lea    rcx,[rbp-0x20]
   14000e991:	mov    DWORD PTR [rsp+0x38],eax
   14000e995:	mov    DWORD PTR [rsp+0x30],ebx
   14000e999:	mov    r9,rsi
   14000e99c:	mov    r8d,0x1001
   14000e9a2:	mov    QWORD PTR [rsp+0x28],rdi
   14000e9a7:	mov    DWORD PTR [rsp+0x20],ebx
   14000e9ab:	call   0x1400158e4
   14000e9b0:	test   eax,eax
   14000e9b2:	je     0x14000e944
   14000e9b4:	add    eax,0xfffffffe
   14000e9b7:	cmp    BYTE PTR [rbp-0x8],0x0
   14000e9bb:	je     0x14000e9c8
   14000e9bd:	mov    rcx,QWORD PTR [rbp-0x10]
   14000e9c1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000e9c8:	lea    r11,[rsp+0x60]
   14000e9cd:	mov    rbx,QWORD PTR [r11+0x10]
   14000e9d1:	mov    rsi,QWORD PTR [r11+0x18]
   14000e9d5:	mov    rdi,QWORD PTR [r11+0x20]
   14000e9d9:	mov    r12,QWORD PTR [r11+0x28]
   14000e9dd:	mov    rsp,r11
   14000e9e0:	pop    rbp
   14000e9e1:	ret    
   14000e9e2:	int3   
   14000e9e3:	int3   
   14000e9e4:	xor    r9d,r9d
   14000e9e7:	jmp    0x14000e8e0
   14000e9ec:	mov    QWORD PTR [rsp+0x10],rbx
   14000e9f1:	mov    QWORD PTR [rsp+0x18],rbp
   14000e9f6:	push   rdi
   14000e9f7:	sub    rsp,0x40
   14000e9fb:	and    QWORD PTR [rsp+0x50],0x0
   14000ea01:	mov    rbx,QWORD PTR [rip+0x15fa0]        # 0x1400249a8
   14000ea08:	mov    rax,QWORD PTR [rbx]
   14000ea0b:	test   rax,rax
   14000ea0e:	je     0x14000eabe
   14000ea14:	or     ebp,0xffffffff
   14000ea17:	and    QWORD PTR [rsp+0x38],0x0
   14000ea1d:	and    QWORD PTR [rsp+0x30],0x0
   14000ea23:	and    DWORD PTR [rsp+0x28],0x0
   14000ea28:	and    QWORD PTR [rsp+0x20],0x0
   14000ea2e:	mov    r9d,ebp
   14000ea31:	mov    r8,rax
   14000ea34:	xor    edx,edx
   14000ea36:	xor    ecx,ecx
   14000ea38:	call   QWORD PTR [rip+0xb7ca]        # 0x14001a208
   14000ea3e:	movsxd rdi,eax
   14000ea41:	test   eax,eax
   14000ea43:	je     0x14000eada
   14000ea49:	mov    rcx,rdi
   14000ea4c:	mov    edx,0x1
   14000ea51:	call   0x140010bd0
   14000ea56:	mov    QWORD PTR [rsp+0x50],rax
   14000ea5b:	test   rax,rax
   14000ea5e:	je     0x14000eada
   14000ea60:	and    QWORD PTR [rsp+0x38],0x0
   14000ea66:	and    QWORD PTR [rsp+0x30],0x0
   14000ea6c:	mov    r8,QWORD PTR [rbx]
   14000ea6f:	mov    r9d,ebp
   14000ea72:	xor    edx,edx
   14000ea74:	xor    ecx,ecx
   14000ea76:	mov    DWORD PTR [rsp+0x28],edi
   14000ea7a:	mov    QWORD PTR [rsp+0x20],rax
   14000ea7f:	call   QWORD PTR [rip+0xb783]        # 0x14001a208
   14000ea85:	test   eax,eax
   14000ea87:	je     0x14000ead0
   14000ea89:	lea    rcx,[rsp+0x50]
   14000ea8e:	xor    edx,edx
   14000ea90:	call   0x140013d00
   14000ea95:	test   eax,eax
   14000ea97:	jns    0x14000eaae
   14000ea99:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ea9e:	test   rcx,rcx
   14000eaa1:	je     0x14000eaae
   14000eaa3:	call   0x14000b490
   14000eaa8:	and    QWORD PTR [rsp+0x50],0x0
   14000eaae:	add    rbx,0x8
   14000eab2:	mov    rax,QWORD PTR [rbx]
   14000eab5:	test   rax,rax
   14000eab8:	jne    0x14000ea17
   14000eabe:	xor    eax,eax
   14000eac0:	mov    rbx,QWORD PTR [rsp+0x58]
   14000eac5:	mov    rbp,QWORD PTR [rsp+0x60]
   14000eaca:	add    rsp,0x40
   14000eace:	pop    rdi
   14000eacf:	ret    
   14000ead0:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ead5:	call   0x14000b490
   14000eada:	mov    eax,ebp
   14000eadc:	jmp    0x14000eac0
   14000eade:	int3   
   14000eadf:	int3   
   14000eae0:	rex push rbx
   14000eae2:	sub    rsp,0x20
   14000eae6:	test   rcx,rcx
   14000eae9:	je     0x14000eaf8
   14000eaeb:	test   rdx,rdx
   14000eaee:	je     0x14000eaf8
   14000eaf0:	test   r8,r8
   14000eaf3:	jne    0x14000eb11
   14000eaf5:	mov    BYTE PTR [rcx],r8b
   14000eaf8:	call   0x14000bdf0
   14000eafd:	mov    ebx,0x16
   14000eb02:	mov    DWORD PTR [rax],ebx
   14000eb04:	call   0x14000d04c
   14000eb09:	mov    eax,ebx
   14000eb0b:	add    rsp,0x20
   14000eb0f:	pop    rbx
   14000eb10:	ret    
   14000eb11:	mov    r9,rcx
   14000eb14:	sub    r9,r8
   14000eb17:	mov    al,BYTE PTR [r8]
   14000eb1a:	mov    BYTE PTR [r9+r8*1],al
   14000eb1e:	inc    r8
   14000eb21:	test   al,al
   14000eb23:	je     0x14000eb2a
   14000eb25:	dec    rdx
   14000eb28:	jne    0x14000eb17
   14000eb2a:	test   rdx,rdx
   14000eb2d:	jne    0x14000eb3d
   14000eb2f:	mov    BYTE PTR [rcx],dl
   14000eb31:	call   0x14000bdf0
   14000eb36:	mov    ebx,0x22
   14000eb3b:	jmp    0x14000eb02
   14000eb3d:	xor    eax,eax
   14000eb3f:	jmp    0x14000eb0b
   14000eb41:	int3   
   14000eb42:	int3   
   14000eb43:	int3   
   14000eb44:	rex push rbx
   14000eb46:	sub    rsp,0x20
   14000eb4a:	and    DWORD PTR [rsp+0x40],0x0
   14000eb4f:	lea    r8,[rsp+0x40]
   14000eb54:	call   0x140015a74
   14000eb59:	mov    rbx,rax
   14000eb5c:	test   rax,rax
   14000eb5f:	jne    0x14000eb7c
   14000eb61:	cmp    DWORD PTR [rsp+0x40],eax
   14000eb65:	je     0x14000eb7c
   14000eb67:	call   0x14000bdf0
   14000eb6c:	test   rax,rax
   14000eb6f:	je     0x14000eb7c
   14000eb71:	call   0x14000bdf0
   14000eb76:	mov    ecx,DWORD PTR [rsp+0x40]
   14000eb7a:	mov    DWORD PTR [rax],ecx
   14000eb7c:	mov    rax,rbx
   14000eb7f:	add    rsp,0x20
   14000eb83:	pop    rbx
   14000eb84:	ret    
   14000eb85:	int3   
   14000eb86:	int3   
   14000eb87:	int3   
   14000eb88:	xor    eax,eax
   14000eb8a:	test   rdx,rdx
   14000eb8d:	je     0x14000eb9f
   14000eb8f:	cmp    BYTE PTR [rcx],0x0
   14000eb92:	je     0x14000eb9f
   14000eb94:	inc    rax
   14000eb97:	inc    rcx
   14000eb9a:	cmp    rax,rdx
   14000eb9d:	jb     0x14000eb8f
   14000eb9f:	repz ret 
   14000eba1:	int3   
   14000eba2:	int3   
   14000eba3:	int3   
   14000eba4:	sub    rsp,0x28
   14000eba8:	mov    rax,QWORD PTR [rcx]
   14000ebab:	cmp    DWORD PTR [rax],0xe06d7363
   14000ebb1:	jne    0x14000ebde
   14000ebb3:	cmp    DWORD PTR [rax+0x18],0x4
   14000ebb7:	jne    0x14000ebde
   14000ebb9:	mov    eax,DWORD PTR [rax+0x20]
   14000ebbc:	cmp    eax,0x19930520
   14000ebc1:	je     0x14000ebd8
   14000ebc3:	cmp    eax,0x19930521
   14000ebc8:	je     0x14000ebd8
   14000ebca:	cmp    eax,0x19930522
   14000ebcf:	je     0x14000ebd8
   14000ebd1:	cmp    eax,0x1994000
   14000ebd6:	jne    0x14000ebde
   14000ebd8:	call   0x14000cb9c
   14000ebdd:	int3   
   14000ebde:	xor    eax,eax
   14000ebe0:	add    rsp,0x28
   14000ebe4:	ret    
   14000ebe5:	int3   
   14000ebe6:	int3   
   14000ebe7:	int3   
   14000ebe8:	sub    rsp,0x28
   14000ebec:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x14000eba4
   14000ebf3:	call   QWORD PTR [rip+0xb58f]        # 0x14001a188
   14000ebf9:	xor    eax,eax
   14000ebfb:	add    rsp,0x28
   14000ebff:	ret    
   14000ec00:	mov    QWORD PTR [rsp+0x8],rbx
   14000ec05:	mov    QWORD PTR [rsp+0x10],rbp
   14000ec0a:	mov    QWORD PTR [rsp+0x18],rsi
   14000ec0f:	push   rdi
   14000ec10:	sub    rsp,0x20
   14000ec14:	mov    rsi,rdx
   14000ec17:	mov    edi,ecx
   14000ec19:	call   0x14000d1b0
   14000ec1e:	xor    r9d,r9d
   14000ec21:	mov    rbx,rax
   14000ec24:	test   rax,rax
   14000ec27:	je     0x14000edb9
   14000ec2d:	mov    rdx,QWORD PTR [rax+0xa0]
   14000ec34:	mov    rcx,rdx
   14000ec37:	cmp    DWORD PTR [rcx],edi
   14000ec39:	je     0x14000ec4b
   14000ec3b:	lea    rax,[rdx+0xc0]
   14000ec42:	add    rcx,0x10
   14000ec46:	cmp    rcx,rax
   14000ec49:	jb     0x14000ec37
   14000ec4b:	lea    rax,[rdx+0xc0]
   14000ec52:	cmp    rcx,rax
   14000ec55:	jae    0x14000ec5b
   14000ec57:	cmp    DWORD PTR [rcx],edi
   14000ec59:	je     0x14000ec5e
   14000ec5b:	mov    rcx,r9
   14000ec5e:	test   rcx,rcx
   14000ec61:	je     0x14000edb9
   14000ec67:	mov    r8,QWORD PTR [rcx+0x8]
   14000ec6b:	test   r8,r8
   14000ec6e:	je     0x14000edb9
   14000ec74:	cmp    r8,0x5
   14000ec78:	jne    0x14000ec87
   14000ec7a:	mov    QWORD PTR [rcx+0x8],r9
   14000ec7e:	lea    eax,[r8-0x4]
   14000ec82:	jmp    0x14000edbb
   14000ec87:	cmp    r8,0x1
   14000ec8b:	jne    0x14000ec95
   14000ec8d:	or     eax,0xffffffff
   14000ec90:	jmp    0x14000edbb
   14000ec95:	mov    rbp,QWORD PTR [rbx+0xa8]
   14000ec9c:	mov    QWORD PTR [rbx+0xa8],rsi
   14000eca3:	cmp    DWORD PTR [rcx+0x4],0x8
   14000eca7:	jne    0x14000eda3
   14000ecad:	mov    edx,0x30
   14000ecb2:	mov    rax,QWORD PTR [rbx+0xa0]
   14000ecb9:	add    rdx,0x10
   14000ecbd:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   14000ecc2:	cmp    rdx,0xc0
   14000ecc9:	jl     0x14000ecb2
   14000eccb:	cmp    DWORD PTR [rcx],0xc000008e
   14000ecd1:	mov    edi,DWORD PTR [rbx+0xb0]
   14000ecd7:	jne    0x14000ece8
   14000ecd9:	mov    DWORD PTR [rbx+0xb0],0x83
   14000ece3:	jmp    0x14000ed8d
   14000ece8:	cmp    DWORD PTR [rcx],0xc0000090
   14000ecee:	jne    0x14000ecff
   14000ecf0:	mov    DWORD PTR [rbx+0xb0],0x81
   14000ecfa:	jmp    0x14000ed8d
   14000ecff:	cmp    DWORD PTR [rcx],0xc0000091
   14000ed05:	jne    0x14000ed13
   14000ed07:	mov    DWORD PTR [rbx+0xb0],0x84
   14000ed11:	jmp    0x14000ed8d
   14000ed13:	cmp    DWORD PTR [rcx],0xc0000093
   14000ed19:	jne    0x14000ed27
   14000ed1b:	mov    DWORD PTR [rbx+0xb0],0x85
   14000ed25:	jmp    0x14000ed8d
   14000ed27:	cmp    DWORD PTR [rcx],0xc000008d
   14000ed2d:	jne    0x14000ed3b
   14000ed2f:	mov    DWORD PTR [rbx+0xb0],0x82
   14000ed39:	jmp    0x14000ed8d
   14000ed3b:	cmp    DWORD PTR [rcx],0xc000008f
   14000ed41:	jne    0x14000ed4f
   14000ed43:	mov    DWORD PTR [rbx+0xb0],0x86
   14000ed4d:	jmp    0x14000ed8d
   14000ed4f:	cmp    DWORD PTR [rcx],0xc0000092
   14000ed55:	jne    0x14000ed63
   14000ed57:	mov    DWORD PTR [rbx+0xb0],0x8a
   14000ed61:	jmp    0x14000ed8d
   14000ed63:	cmp    DWORD PTR [rcx],0xc00002b5
   14000ed69:	jne    0x14000ed77
   14000ed6b:	mov    DWORD PTR [rbx+0xb0],0x8d
   14000ed75:	jmp    0x14000ed8d
   14000ed77:	cmp    DWORD PTR [rcx],0xc00002b4
   14000ed7d:	mov    eax,edi
   14000ed7f:	mov    edx,0x8e
   14000ed84:	cmove  eax,edx
   14000ed87:	mov    DWORD PTR [rbx+0xb0],eax
   14000ed8d:	mov    edx,DWORD PTR [rbx+0xb0]
   14000ed93:	mov    ecx,0x8
   14000ed98:	call   r8
   14000ed9b:	mov    DWORD PTR [rbx+0xb0],edi
   14000eda1:	jmp    0x14000edad
   14000eda3:	mov    QWORD PTR [rcx+0x8],r9
   14000eda7:	mov    ecx,DWORD PTR [rcx+0x4]
   14000edaa:	call   r8
   14000edad:	mov    QWORD PTR [rbx+0xa8],rbp
   14000edb4:	jmp    0x14000ec8d
   14000edb9:	xor    eax,eax
   14000edbb:	mov    rbx,QWORD PTR [rsp+0x30]
   14000edc0:	mov    rbp,QWORD PTR [rsp+0x38]
   14000edc5:	mov    rsi,QWORD PTR [rsp+0x40]
   14000edca:	add    rsp,0x20
   14000edce:	pop    rdi
   14000edcf:	ret    
   14000edd0:	mov    QWORD PTR [rsp+0x8],rbx
   14000edd5:	push   rdi
   14000edd6:	sub    rsp,0x20
   14000edda:	xor    edi,edi
   14000eddc:	cmp    DWORD PTR [rip+0x17ee6],edi        # 0x140026cc8
   14000ede2:	jne    0x14000ede9
   14000ede4:	call   0x1400149b0
   14000ede9:	mov    rbx,QWORD PTR [rip+0x17eb8]        # 0x140026ca8
   14000edf0:	lea    rax,[rip+0xc69c]        # 0x14001b493
   14000edf7:	test   rbx,rbx
   14000edfa:	cmove  rbx,rax
   14000edfe:	cmp    BYTE PTR [rbx],0x20
   14000ee01:	ja     0x14000ee0c
   14000ee03:	cmp    BYTE PTR [rbx],0x0
   14000ee06:	je     0x14000ee3b
   14000ee08:	test   edi,edi
   14000ee0a:	je     0x14000ee35
   14000ee0c:	cmp    BYTE PTR [rbx],0x22
   14000ee0f:	jne    0x14000ee1a
   14000ee11:	xor    eax,eax
   14000ee13:	test   edi,edi
   14000ee15:	sete   al
   14000ee18:	mov    edi,eax
   14000ee1a:	movzx  ecx,BYTE PTR [rbx]
   14000ee1d:	call   0x140015b8c
   14000ee22:	test   eax,eax
   14000ee24:	je     0x14000ee29
   14000ee26:	inc    rbx
   14000ee29:	inc    rbx
   14000ee2c:	jmp    0x14000edfe
   14000ee2e:	cmp    al,0x20
   14000ee30:	ja     0x14000ee3b
   14000ee32:	inc    rbx
   14000ee35:	mov    al,BYTE PTR [rbx]
   14000ee37:	test   al,al
   14000ee39:	jne    0x14000ee2e
   14000ee3b:	mov    rax,rbx
   14000ee3e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ee43:	add    rsp,0x20
   14000ee47:	pop    rdi
   14000ee48:	ret    
   14000ee49:	int3   
   14000ee4a:	int3   
   14000ee4b:	int3   
   14000ee4c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ee51:	mov    QWORD PTR [rsp+0x10],rbp
   14000ee56:	mov    QWORD PTR [rsp+0x18],rsi
   14000ee5b:	push   rdi
   14000ee5c:	sub    rsp,0x30
   14000ee60:	cmp    DWORD PTR [rip+0x17e61],0x0        # 0x140026cc8
   14000ee67:	jne    0x14000ee6e
   14000ee69:	call   0x1400149b0
   14000ee6e:	mov    rbx,QWORD PTR [rip+0x15b6b]        # 0x1400249e0
   14000ee75:	xor    edi,edi
   14000ee77:	test   rbx,rbx
   14000ee7a:	jne    0x14000ee97
   14000ee7c:	or     eax,0xffffffff
   14000ee7f:	jmp    0x14000ef38
   14000ee84:	cmp    al,0x3d
   14000ee86:	je     0x14000ee8a
   14000ee88:	inc    edi
   14000ee8a:	mov    rcx,rbx
   14000ee8d:	call   0x140009fd0
   14000ee92:	lea    rbx,[rbx+rax*1+0x1]
   14000ee97:	mov    al,BYTE PTR [rbx]
   14000ee99:	test   al,al
   14000ee9b:	jne    0x14000ee84
   14000ee9d:	lea    eax,[rdi+0x1]
   14000eea0:	mov    edx,0x8
   14000eea5:	movsxd rcx,eax
   14000eea8:	call   0x140010bd0
   14000eead:	mov    rdi,rax
   14000eeb0:	mov    QWORD PTR [rip+0x15ae1],rax        # 0x140024998
   14000eeb7:	test   rax,rax
   14000eeba:	je     0x14000ee7c
   14000eebc:	mov    rbx,QWORD PTR [rip+0x15b1d]        # 0x1400249e0
   14000eec3:	cmp    BYTE PTR [rbx],0x0
   14000eec6:	je     0x14000ef18
   14000eec8:	mov    rcx,rbx
   14000eecb:	call   0x140009fd0
   14000eed0:	cmp    BYTE PTR [rbx],0x3d
   14000eed3:	lea    esi,[rax+0x1]
   14000eed6:	je     0x14000ef06
   14000eed8:	movsxd rbp,esi
   14000eedb:	mov    edx,0x1
   14000eee0:	mov    rcx,rbp
   14000eee3:	call   0x140010bd0
   14000eee8:	mov    QWORD PTR [rdi],rax
   14000eeeb:	test   rax,rax
   14000eeee:	je     0x14000ef63
   14000eef0:	mov    r8,rbx
   14000eef3:	mov    rdx,rbp
   14000eef6:	mov    rcx,rax
   14000eef9:	call   0x14000eae0
   14000eefe:	test   eax,eax
   14000ef00:	jne    0x14000ef4d
   14000ef02:	add    rdi,0x8
   14000ef06:	movsxd rax,esi
   14000ef09:	add    rbx,rax
   14000ef0c:	cmp    BYTE PTR [rbx],0x0
   14000ef0f:	jne    0x14000eec8
   14000ef11:	mov    rbx,QWORD PTR [rip+0x15ac8]        # 0x1400249e0
   14000ef18:	mov    rcx,rbx
   14000ef1b:	call   0x14000b490
   14000ef20:	and    QWORD PTR [rip+0x15ab8],0x0        # 0x1400249e0
   14000ef28:	and    QWORD PTR [rdi],0x0
   14000ef2c:	mov    DWORD PTR [rip+0x17d7a],0x1        # 0x140026cb0
   14000ef36:	xor    eax,eax
   14000ef38:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ef3d:	mov    rbp,QWORD PTR [rsp+0x48]
   14000ef42:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ef47:	add    rsp,0x30
   14000ef4b:	pop    rdi
   14000ef4c:	ret    
   14000ef4d:	and    QWORD PTR [rsp+0x20],0x0
   14000ef53:	xor    r9d,r9d
   14000ef56:	xor    r8d,r8d
   14000ef59:	xor    edx,edx
   14000ef5b:	xor    ecx,ecx
   14000ef5d:	call   0x14000cfa8
   14000ef62:	int3   
   14000ef63:	mov    rcx,QWORD PTR [rip+0x15a2e]        # 0x140024998
   14000ef6a:	call   0x14000b490
   14000ef6f:	and    QWORD PTR [rip+0x15a21],0x0        # 0x140024998
   14000ef77:	jmp    0x14000ee7c
   14000ef7c:	mov    rax,rsp
   14000ef7f:	mov    QWORD PTR [rax+0x8],rbx
   14000ef83:	mov    QWORD PTR [rax+0x10],rbp
   14000ef87:	mov    QWORD PTR [rax+0x18],rsi
   14000ef8b:	mov    QWORD PTR [rax+0x20],rdi
   14000ef8f:	push   r12
   14000ef91:	push   r13
   14000ef93:	push   r14
   14000ef95:	sub    rsp,0x20
   14000ef99:	mov    r13,QWORD PTR [rsp+0x60]
   14000ef9e:	mov    r14,r9
   14000efa1:	mov    rdi,r8
   14000efa4:	and    DWORD PTR [r13+0x0],0x0
   14000efa9:	mov    r12,rdx
   14000efac:	mov    rbx,rcx
   14000efaf:	mov    DWORD PTR [r9],0x1
   14000efb6:	test   rdx,rdx
   14000efb9:	je     0x14000efc2
   14000efbb:	mov    QWORD PTR [rdx],r8
   14000efbe:	add    r12,0x8
   14000efc2:	xor    ebp,ebp
   14000efc4:	cmp    BYTE PTR [rbx],0x22
   14000efc7:	jne    0x14000efda
   14000efc9:	xor    eax,eax
   14000efcb:	test   ebp,ebp
   14000efcd:	mov    sil,0x22
   14000efd0:	sete   al
   14000efd3:	inc    rbx
   14000efd6:	mov    ebp,eax
   14000efd8:	jmp    0x14000f013
   14000efda:	inc    DWORD PTR [r13+0x0]
   14000efde:	test   rdi,rdi
   14000efe1:	je     0x14000efea
   14000efe3:	mov    al,BYTE PTR [rbx]
   14000efe5:	mov    BYTE PTR [rdi],al
   14000efe7:	inc    rdi
   14000efea:	movzx  esi,BYTE PTR [rbx]
   14000efed:	inc    rbx
   14000eff0:	mov    ecx,esi
   14000eff2:	call   0x140015b8c
   14000eff7:	test   eax,eax
   14000eff9:	je     0x14000f00e
   14000effb:	inc    DWORD PTR [r13+0x0]
   14000efff:	test   rdi,rdi
   14000f002:	je     0x14000f00b
   14000f004:	mov    al,BYTE PTR [rbx]
   14000f006:	mov    BYTE PTR [rdi],al
   14000f008:	inc    rdi
   14000f00b:	inc    rbx
   14000f00e:	test   sil,sil
   14000f011:	je     0x14000f02e
   14000f013:	test   ebp,ebp
   14000f015:	jne    0x14000efc4
   14000f017:	cmp    sil,0x20
   14000f01b:	je     0x14000f023
   14000f01d:	cmp    sil,0x9
   14000f021:	jne    0x14000efc4
   14000f023:	test   rdi,rdi
   14000f026:	je     0x14000f031
   14000f028:	mov    BYTE PTR [rdi-0x1],0x0
   14000f02c:	jmp    0x14000f031
   14000f02e:	dec    rbx
   14000f031:	xor    esi,esi
   14000f033:	cmp    BYTE PTR [rbx],0x0
   14000f036:	je     0x14000f11f
   14000f03c:	cmp    BYTE PTR [rbx],0x20
   14000f03f:	je     0x14000f046
   14000f041:	cmp    BYTE PTR [rbx],0x9
   14000f044:	jne    0x14000f04b
   14000f046:	inc    rbx
   14000f049:	jmp    0x14000f03c
   14000f04b:	cmp    BYTE PTR [rbx],0x0
   14000f04e:	je     0x14000f11f
   14000f054:	test   r12,r12
   14000f057:	je     0x14000f061
   14000f059:	mov    QWORD PTR [r12],rdi
   14000f05d:	add    r12,0x8
   14000f061:	inc    DWORD PTR [r14]
   14000f064:	mov    edx,0x1
   14000f069:	xor    ecx,ecx
   14000f06b:	jmp    0x14000f072
   14000f06d:	inc    rbx
   14000f070:	inc    ecx
   14000f072:	cmp    BYTE PTR [rbx],0x5c
   14000f075:	je     0x14000f06d
   14000f077:	cmp    BYTE PTR [rbx],0x22
   14000f07a:	jne    0x14000f0b2
   14000f07c:	test   dl,cl
   14000f07e:	jne    0x14000f09d
   14000f080:	test   esi,esi
   14000f082:	je     0x14000f092
   14000f084:	lea    rax,[rbx+0x1]
   14000f088:	cmp    BYTE PTR [rax],0x22
   14000f08b:	jne    0x14000f092
   14000f08d:	mov    rbx,rax
   14000f090:	jmp    0x14000f09d
   14000f092:	xor    eax,eax
   14000f094:	xor    edx,edx
   14000f096:	test   esi,esi
   14000f098:	sete   al
   14000f09b:	mov    esi,eax
   14000f09d:	shr    ecx,1
   14000f09f:	jmp    0x14000f0b2
   14000f0a1:	dec    ecx
   14000f0a3:	test   rdi,rdi
   14000f0a6:	je     0x14000f0ae
   14000f0a8:	mov    BYTE PTR [rdi],0x5c
   14000f0ab:	inc    rdi
   14000f0ae:	inc    DWORD PTR [r13+0x0]
   14000f0b2:	test   ecx,ecx
   14000f0b4:	jne    0x14000f0a1
   14000f0b6:	mov    al,BYTE PTR [rbx]
   14000f0b8:	test   al,al
   14000f0ba:	je     0x14000f10b
   14000f0bc:	test   esi,esi
   14000f0be:	jne    0x14000f0c8
   14000f0c0:	cmp    al,0x20
   14000f0c2:	je     0x14000f10b
   14000f0c4:	cmp    al,0x9
   14000f0c6:	je     0x14000f10b
   14000f0c8:	test   edx,edx
   14000f0ca:	je     0x14000f103
   14000f0cc:	movsx  ecx,al
   14000f0cf:	call   0x140015b8c
   14000f0d4:	test   rdi,rdi
   14000f0d7:	je     0x14000f0f4
   14000f0d9:	test   eax,eax
   14000f0db:	je     0x14000f0eb
   14000f0dd:	mov    al,BYTE PTR [rbx]
   14000f0df:	inc    rbx
   14000f0e2:	mov    BYTE PTR [rdi],al
   14000f0e4:	inc    rdi
   14000f0e7:	inc    DWORD PTR [r13+0x0]
   14000f0eb:	mov    al,BYTE PTR [rbx]
   14000f0ed:	mov    BYTE PTR [rdi],al
   14000f0ef:	inc    rdi
   14000f0f2:	jmp    0x14000f0ff
   14000f0f4:	test   eax,eax
   14000f0f6:	je     0x14000f0ff
   14000f0f8:	inc    rbx
   14000f0fb:	inc    DWORD PTR [r13+0x0]
   14000f0ff:	inc    DWORD PTR [r13+0x0]
   14000f103:	inc    rbx
   14000f106:	jmp    0x14000f064
   14000f10b:	test   rdi,rdi
   14000f10e:	je     0x14000f116
   14000f110:	mov    BYTE PTR [rdi],0x0
   14000f113:	inc    rdi
   14000f116:	inc    DWORD PTR [r13+0x0]
   14000f11a:	jmp    0x14000f033
   14000f11f:	test   r12,r12
   14000f122:	je     0x14000f129
   14000f124:	and    QWORD PTR [r12],0x0
   14000f129:	inc    DWORD PTR [r14]
   14000f12c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f131:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f136:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f13b:	mov    rdi,QWORD PTR [rsp+0x58]
   14000f140:	add    rsp,0x20
   14000f144:	pop    r14
   14000f146:	pop    r13
   14000f148:	pop    r12
   14000f14a:	ret    
   14000f14b:	int3   
   14000f14c:	mov    QWORD PTR [rsp+0x18],rbx
   14000f151:	mov    QWORD PTR [rsp+0x20],rsi
   14000f156:	push   rdi
   14000f157:	sub    rsp,0x30
   14000f15b:	cmp    DWORD PTR [rip+0x17b66],0x0        # 0x140026cc8
   14000f162:	jne    0x14000f169
   14000f164:	call   0x1400149b0
   14000f169:	lea    rdi,[rip+0x16150]        # 0x1400252c0
   14000f170:	mov    r8d,0x104
   14000f176:	xor    ecx,ecx
   14000f178:	mov    rdx,rdi
   14000f17b:	mov    BYTE PTR [rip+0x16242],0x0        # 0x1400253c4
   14000f182:	call   QWORD PTR [rip+0xaec0]        # 0x14001a048
   14000f188:	mov    rbx,QWORD PTR [rip+0x17b19]        # 0x140026ca8
   14000f18f:	mov    QWORD PTR [rip+0x15822],rdi        # 0x1400249b8
   14000f196:	test   rbx,rbx
   14000f199:	je     0x14000f1a0
   14000f19b:	cmp    BYTE PTR [rbx],0x0
   14000f19e:	jne    0x14000f1a3
   14000f1a0:	mov    rbx,rdi
   14000f1a3:	lea    rax,[rsp+0x48]
   14000f1a8:	lea    r9,[rsp+0x40]
   14000f1ad:	xor    r8d,r8d
   14000f1b0:	xor    edx,edx
   14000f1b2:	mov    rcx,rbx
   14000f1b5:	mov    QWORD PTR [rsp+0x20],rax
   14000f1ba:	call   0x14000ef7c
   14000f1bf:	movsxd rsi,DWORD PTR [rsp+0x40]
   14000f1c4:	movabs rcx,0x1fffffffffffffff
   14000f1ce:	cmp    rsi,rcx
   14000f1d1:	jae    0x14000f22f
   14000f1d3:	movsxd rcx,DWORD PTR [rsp+0x48]
   14000f1d8:	cmp    rcx,0xffffffffffffffff
   14000f1dc:	jae    0x14000f22f
   14000f1de:	lea    rdx,[rcx+rsi*8]
   14000f1e2:	cmp    rdx,rcx
   14000f1e5:	jb     0x14000f22f
   14000f1e7:	mov    rcx,rdx
   14000f1ea:	call   0x140010b50
   14000f1ef:	mov    rdi,rax
   14000f1f2:	test   rax,rax
   14000f1f5:	je     0x14000f22f
   14000f1f7:	lea    r8,[rax+rsi*8]
   14000f1fb:	lea    rax,[rsp+0x48]
   14000f200:	lea    r9,[rsp+0x40]
   14000f205:	mov    rdx,rdi
   14000f208:	mov    rcx,rbx
   14000f20b:	mov    QWORD PTR [rsp+0x20],rax
   14000f210:	call   0x14000ef7c
   14000f215:	mov    r11d,DWORD PTR [rsp+0x40]
   14000f21a:	mov    QWORD PTR [rip+0x15767],rdi        # 0x140024988
   14000f221:	dec    r11d
   14000f224:	xor    eax,eax
   14000f226:	mov    DWORD PTR [rip+0x15757],r11d        # 0x140024984
   14000f22d:	jmp    0x14000f232
   14000f22f:	or     eax,0xffffffff
   14000f232:	mov    rbx,QWORD PTR [rsp+0x50]
   14000f237:	mov    rsi,QWORD PTR [rsp+0x58]
   14000f23c:	add    rsp,0x30
   14000f240:	pop    rdi
   14000f241:	ret    
   14000f242:	int3   
   14000f243:	int3   
   14000f244:	mov    rax,rsp
   14000f247:	mov    QWORD PTR [rax+0x8],rbx
   14000f24b:	mov    QWORD PTR [rax+0x10],rbp
   14000f24f:	mov    QWORD PTR [rax+0x18],rsi
   14000f253:	mov    QWORD PTR [rax+0x20],rdi
   14000f257:	push   r12
   14000f259:	sub    rsp,0x40
   14000f25d:	call   QWORD PTR [rip+0xafb5]        # 0x14001a218
   14000f263:	xor    r12d,r12d
   14000f266:	mov    rdi,rax
   14000f269:	test   rax,rax
   14000f26c:	je     0x14000f31b
   14000f272:	mov    rbx,rax
   14000f275:	cmp    WORD PTR [rax],r12w
   14000f279:	je     0x14000f28f
   14000f27b:	add    rbx,0x2
   14000f27f:	cmp    WORD PTR [rbx],r12w
   14000f283:	jne    0x14000f27b
   14000f285:	add    rbx,0x2
   14000f289:	cmp    WORD PTR [rbx],r12w
   14000f28d:	jne    0x14000f27b
   14000f28f:	mov    QWORD PTR [rsp+0x38],r12
   14000f294:	sub    rbx,rax
   14000f297:	mov    QWORD PTR [rsp+0x30],r12
   14000f29c:	sar    rbx,1
   14000f29f:	mov    r8,rax
   14000f2a2:	xor    edx,edx
   14000f2a4:	lea    r9d,[rbx+0x1]
   14000f2a8:	xor    ecx,ecx
   14000f2aa:	mov    DWORD PTR [rsp+0x28],r12d
   14000f2af:	mov    QWORD PTR [rsp+0x20],r12
   14000f2b4:	call   QWORD PTR [rip+0xaf4e]        # 0x14001a208
   14000f2ba:	movsxd rbp,eax
   14000f2bd:	test   eax,eax
   14000f2bf:	je     0x14000f312
   14000f2c1:	mov    rcx,rbp
   14000f2c4:	call   0x140010b50
   14000f2c9:	mov    rsi,rax
   14000f2cc:	test   rax,rax
   14000f2cf:	je     0x14000f312
   14000f2d1:	mov    QWORD PTR [rsp+0x38],r12
   14000f2d6:	mov    QWORD PTR [rsp+0x30],r12
   14000f2db:	lea    r9d,[rbx+0x1]
   14000f2df:	mov    r8,rdi
   14000f2e2:	xor    edx,edx
   14000f2e4:	xor    ecx,ecx
   14000f2e6:	mov    DWORD PTR [rsp+0x28],ebp
   14000f2ea:	mov    QWORD PTR [rsp+0x20],rax
   14000f2ef:	call   QWORD PTR [rip+0xaf13]        # 0x14001a208
   14000f2f5:	test   eax,eax
   14000f2f7:	jne    0x14000f304
   14000f2f9:	mov    rcx,rsi
   14000f2fc:	call   0x14000b490
   14000f301:	mov    rsi,r12
   14000f304:	mov    rcx,rdi
   14000f307:	call   QWORD PTR [rip+0xaf03]        # 0x14001a210
   14000f30d:	mov    rax,rsi
   14000f310:	jmp    0x14000f31d
   14000f312:	mov    rcx,rdi
   14000f315:	call   QWORD PTR [rip+0xaef5]        # 0x14001a210
   14000f31b:	xor    eax,eax
   14000f31d:	mov    rbx,QWORD PTR [rsp+0x50]
   14000f322:	mov    rbp,QWORD PTR [rsp+0x58]
   14000f327:	mov    rsi,QWORD PTR [rsp+0x60]
   14000f32c:	mov    rdi,QWORD PTR [rsp+0x68]
   14000f331:	add    rsp,0x40
   14000f335:	pop    r12
   14000f337:	ret    
   14000f338:	mov    QWORD PTR [rsp+0x8],rbx
   14000f33d:	mov    QWORD PTR [rsp+0x10],rbp
   14000f342:	mov    QWORD PTR [rsp+0x18],rdi
   14000f347:	push   r12
   14000f349:	push   r13
   14000f34b:	push   r14
   14000f34d:	sub    rsp,0x90
   14000f354:	lea    rcx,[rsp+0x20]
   14000f359:	call   QWORD PTR [rip+0xad89]        # 0x14001a0e8
   14000f35f:	mov    edx,0x58
   14000f364:	lea    ebp,[rdx-0x38]
   14000f367:	mov    ecx,ebp
   14000f369:	call   0x140010bd0
   14000f36e:	xor    r14d,r14d
   14000f371:	mov    rdx,rax
   14000f374:	test   rax,rax
   14000f377:	jne    0x14000f381
   14000f379:	or     eax,0xffffffff
   14000f37c:	jmp    0x14000f5ec
   14000f381:	mov    QWORD PTR [rip+0x166f8],rax        # 0x140025a80
   14000f388:	add    rax,0xb00
   14000f38e:	mov    ecx,ebp
   14000f390:	mov    DWORD PTR [rip+0x166d6],ecx        # 0x140025a6c
   14000f396:	cmp    rdx,rax
   14000f399:	jae    0x14000f3e0
   14000f39b:	add    rdx,0x9
   14000f39f:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   14000f3a4:	mov    WORD PTR [rdx-0x1],0xa00
   14000f3aa:	mov    DWORD PTR [rdx+0x3],r14d
   14000f3ae:	mov    WORD PTR [rdx+0x2f],0xa00
   14000f3b4:	mov    BYTE PTR [rdx+0x31],0xa
   14000f3b8:	mov    DWORD PTR [rdx+0x47],r14d
   14000f3bc:	mov    BYTE PTR [rdx+0x43],r14b
   14000f3c0:	mov    rax,QWORD PTR [rip+0x166b9]        # 0x140025a80
   14000f3c7:	add    rdx,0x58
   14000f3cb:	lea    rcx,[rdx-0x9]
   14000f3cf:	add    rax,0xb00
   14000f3d5:	cmp    rcx,rax
   14000f3d8:	jb     0x14000f39f
   14000f3da:	mov    ecx,DWORD PTR [rip+0x1668c]        # 0x140025a6c
   14000f3e0:	cmp    WORD PTR [rsp+0x62],r14w
   14000f3e6:	je     0x14000f520
   14000f3ec:	mov    rax,QWORD PTR [rsp+0x68]
   14000f3f1:	test   rax,rax
   14000f3f4:	je     0x14000f520
   14000f3fa:	movsxd r12,DWORD PTR [rax]
   14000f3fd:	mov    ebx,0x800
   14000f402:	lea    r13,[rax+0x4]
   14000f406:	add    r12,r13
   14000f409:	cmp    DWORD PTR [rax],ebx
   14000f40b:	cmovl  ebx,DWORD PTR [rax]
   14000f40e:	cmp    ecx,ebx
   14000f410:	jge    0x14000f49d
   14000f416:	lea    rdi,[rip+0x1666b]        # 0x140025a88
   14000f41d:	mov    edx,0x58
   14000f422:	mov    rcx,rbp
   14000f425:	call   0x140010bd0
   14000f42a:	test   rax,rax
   14000f42d:	je     0x14000f497
   14000f42f:	mov    edx,DWORD PTR [rip+0x16637]        # 0x140025a6c
   14000f435:	lea    rcx,[rax+0xb00]
   14000f43c:	mov    QWORD PTR [rdi],rax
   14000f43f:	add    edx,ebp
   14000f441:	mov    DWORD PTR [rip+0x16625],edx        # 0x140025a6c
   14000f447:	cmp    rax,rcx
   14000f44a:	jae    0x14000f48d
   14000f44c:	lea    rdx,[rax+0x9]
   14000f450:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   14000f455:	and    BYTE PTR [rdx+0x2f],0x80
   14000f459:	mov    WORD PTR [rdx-0x1],0xa00
   14000f45f:	mov    DWORD PTR [rdx+0x3],r14d
   14000f463:	mov    WORD PTR [rdx+0x30],0xa0a
   14000f469:	mov    DWORD PTR [rdx+0x47],r14d
   14000f46d:	mov    BYTE PTR [rdx+0x43],r14b
   14000f471:	mov    rax,QWORD PTR [rdi]
   14000f474:	add    rdx,0x58
   14000f478:	lea    rcx,[rdx-0x9]
   14000f47c:	add    rax,0xb00
   14000f482:	cmp    rcx,rax
   14000f485:	jb     0x14000f450
   14000f487:	mov    edx,DWORD PTR [rip+0x165df]        # 0x140025a6c
   14000f48d:	add    rdi,0x8
   14000f491:	cmp    edx,ebx
   14000f493:	jl     0x14000f41d
   14000f495:	jmp    0x14000f49d
   14000f497:	mov    ebx,DWORD PTR [rip+0x165cf]        # 0x140025a6c
   14000f49d:	mov    edi,r14d
   14000f4a0:	test   ebx,ebx
   14000f4a2:	jle    0x14000f520
   14000f4a4:	cmp    QWORD PTR [r12],0xffffffffffffffff
   14000f4a9:	je     0x14000f513
   14000f4ab:	cmp    QWORD PTR [r12],0xfffffffffffffffe
   14000f4b0:	je     0x14000f513
   14000f4b2:	test   BYTE PTR [r13+0x0],0x1
   14000f4b7:	je     0x14000f513
   14000f4b9:	test   BYTE PTR [r13+0x0],0x8
   14000f4be:	jne    0x14000f4ce
   14000f4c0:	mov    rcx,QWORD PTR [r12]
   14000f4c4:	call   QWORD PTR [rip+0xad5e]        # 0x14001a228
   14000f4ca:	test   eax,eax
   14000f4cc:	je     0x14000f513
   14000f4ce:	movsxd rbp,edi
   14000f4d1:	lea    rcx,[rip+0x165a8]        # 0x140025a80
   14000f4d8:	mov    edx,0xfa0
   14000f4dd:	mov    rax,rbp
   14000f4e0:	and    ebp,0x1f
   14000f4e3:	sar    rax,0x5
   14000f4e7:	imul   rbp,rbp,0x58
   14000f4eb:	add    rbp,QWORD PTR [rcx+rax*8]
   14000f4ef:	mov    rax,QWORD PTR [r12]
   14000f4f3:	mov    QWORD PTR [rbp+0x0],rax
   14000f4f7:	mov    al,BYTE PTR [r13+0x0]
   14000f4fb:	lea    rcx,[rbp+0x10]
   14000f4ff:	mov    BYTE PTR [rbp+0x8],al
   14000f502:	call   QWORD PTR [rip+0xac58]        # 0x14001a160
   14000f508:	test   eax,eax
   14000f50a:	je     0x14000f379
   14000f510:	inc    DWORD PTR [rbp+0xc]
   14000f513:	inc    edi
   14000f515:	inc    r13
   14000f518:	add    r12,0x8
   14000f51c:	cmp    edi,ebx
   14000f51e:	jl     0x14000f4a4
   14000f520:	mov    r12d,r14d
   14000f523:	mov    rbx,r14
   14000f526:	mov    rdi,QWORD PTR [rip+0x16553]        # 0x140025a80
   14000f52d:	cmp    QWORD PTR [rbx+rdi*1],0xffffffffffffffff
   14000f532:	je     0x14000f545
   14000f534:	cmp    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   14000f539:	je     0x14000f545
   14000f53b:	or     BYTE PTR [rbx+rdi*1+0x8],0x80
   14000f540:	jmp    0x14000f5ca
   14000f545:	lea    eax,[r12-0x1]
   14000f54a:	mov    BYTE PTR [rbx+rdi*1+0x8],0x81
   14000f54f:	neg    eax
   14000f551:	mov    eax,0xfffffff6
   14000f556:	sbb    ecx,ecx
   14000f558:	add    ecx,0xfffffff5
   14000f55b:	test   r12d,r12d
   14000f55e:	cmove  ecx,eax
   14000f561:	call   QWORD PTR [rip+0xac91]        # 0x14001a1f8
   14000f567:	mov    rbp,rax
   14000f56a:	cmp    rax,0xffffffffffffffff
   14000f56e:	je     0x14000f5bd
   14000f570:	test   rax,rax
   14000f573:	je     0x14000f5bd
   14000f575:	mov    rcx,rax
   14000f578:	call   QWORD PTR [rip+0xacaa]        # 0x14001a228
   14000f57e:	test   eax,eax
   14000f580:	je     0x14000f5bd
   14000f582:	movzx  eax,al
   14000f585:	mov    QWORD PTR [rbx+rdi*1],rbp
   14000f589:	cmp    eax,0x2
   14000f58c:	jne    0x14000f595
   14000f58e:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   14000f593:	jmp    0x14000f59f
   14000f595:	cmp    eax,0x3
   14000f598:	jne    0x14000f59f
   14000f59a:	or     BYTE PTR [rbx+rdi*1+0x8],0x8
   14000f59f:	lea    rcx,[rbx+rdi*1+0x10]
   14000f5a4:	mov    edx,0xfa0
   14000f5a9:	call   QWORD PTR [rip+0xabb1]        # 0x14001a160
   14000f5af:	test   eax,eax
   14000f5b1:	je     0x14000f379
   14000f5b7:	inc    DWORD PTR [rbx+rdi*1+0xc]
   14000f5bb:	jmp    0x14000f5ca
   14000f5bd:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   14000f5c2:	mov    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   14000f5ca:	add    rbx,0x58
   14000f5ce:	inc    r12d
   14000f5d1:	cmp    rbx,0x108
   14000f5d8:	jl     0x14000f526
   14000f5de:	mov    ecx,DWORD PTR [rip+0x16488]        # 0x140025a6c
   14000f5e4:	call   QWORD PTR [rip+0xac36]        # 0x14001a220
   14000f5ea:	xor    eax,eax
   14000f5ec:	lea    r11,[rsp+0x90]
   14000f5f4:	mov    rbx,QWORD PTR [r11+0x20]
   14000f5f8:	mov    rbp,QWORD PTR [r11+0x28]
   14000f5fc:	mov    rdi,QWORD PTR [r11+0x30]
   14000f600:	mov    rsp,r11
   14000f603:	pop    r14
   14000f605:	pop    r13
   14000f607:	pop    r12
   14000f609:	ret    
   14000f60a:	int3   
   14000f60b:	int3   
   14000f60c:	sub    rsp,0x28
   14000f610:	xor    r8d,r8d
   14000f613:	mov    edx,0x1000
   14000f618:	xor    ecx,ecx
   14000f61a:	mov    DWORD PTR [rsp+0x30],0x2
   14000f622:	call   QWORD PTR [rip+0xac18]        # 0x14001a240
   14000f628:	mov    QWORD PTR [rip+0x15d99],rax        # 0x1400253c8
   14000f62f:	test   rax,rax
   14000f632:	je     0x14000f65d
   14000f634:	call   QWORD PTR [rip+0xabfe]        # 0x14001a238
   14000f63a:	cmp    al,0x6
   14000f63c:	jae    0x14000f658
   14000f63e:	mov    rcx,QWORD PTR [rip+0x15d83]        # 0x1400253c8
   14000f645:	lea    r8,[rsp+0x30]
   14000f64a:	mov    r9d,0x4
   14000f650:	xor    edx,edx
   14000f652:	call   QWORD PTR [rip+0xabd8]        # 0x14001a230
   14000f658:	mov    eax,0x1
   14000f65d:	add    rsp,0x28
   14000f661:	ret    
   14000f662:	int3   
   14000f663:	int3   
   14000f664:	mov    QWORD PTR [rsp+0x18],rbx
   14000f669:	push   rdi
   14000f66a:	sub    rsp,0x20
   14000f66e:	mov    rax,QWORD PTR [rip+0x13a4b]        # 0x1400230c0
   14000f675:	and    QWORD PTR [rsp+0x30],0x0
   14000f67b:	movabs rdi,0x2b992ddfa232
   14000f685:	cmp    rax,rdi
   14000f688:	je     0x14000f696
   14000f68a:	not    rax
   14000f68d:	mov    QWORD PTR [rip+0x13a34],rax        # 0x1400230c8
   14000f694:	jmp    0x14000f70c
   14000f696:	lea    rcx,[rsp+0x30]
   14000f69b:	call   QWORD PTR [rip+0xabb7]        # 0x14001a258
   14000f6a1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f6a6:	call   QWORD PTR [rip+0xaba4]        # 0x14001a250
   14000f6ac:	mov    r11d,eax
   14000f6af:	xor    rbx,r11
   14000f6b2:	call   QWORD PTR [rip+0xaa98]        # 0x14001a150
   14000f6b8:	mov    r11d,eax
   14000f6bb:	xor    rbx,r11
   14000f6be:	call   QWORD PTR [rip+0xab84]        # 0x14001a248
   14000f6c4:	lea    rcx,[rsp+0x38]
   14000f6c9:	mov    r11d,eax
   14000f6cc:	xor    rbx,r11
   14000f6cf:	call   QWORD PTR [rip+0xa97b]        # 0x14001a050
   14000f6d5:	mov    r11,QWORD PTR [rsp+0x38]
   14000f6da:	xor    r11,rbx
   14000f6dd:	movabs rax,0xffffffffffff
   14000f6e7:	and    r11,rax
   14000f6ea:	movabs rax,0x2b992ddfa233
   14000f6f4:	cmp    r11,rdi
   14000f6f7:	cmove  r11,rax
   14000f6fb:	mov    QWORD PTR [rip+0x139be],r11        # 0x1400230c0
   14000f702:	not    r11
   14000f705:	mov    QWORD PTR [rip+0x139bc],r11        # 0x1400230c8
   14000f70c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f711:	add    rsp,0x20
   14000f715:	pop    rdi
   14000f716:	ret    
   14000f717:	int3   
   14000f718:	mov    QWORD PTR [rsp+0x8],rbx
   14000f71d:	mov    QWORD PTR [rsp+0x10],rsi
   14000f722:	push   rdi
   14000f723:	sub    rsp,0x20
   14000f727:	mov    rsi,r9
   14000f72a:	mov    rdi,r8
   14000f72d:	mov    rbx,rdx
   14000f730:	cmp    rcx,QWORD PTR [rdx]
   14000f733:	jne    0x14000f799
   14000f735:	cmp    QWORD PTR [r8],r9
   14000f738:	jne    0x14000f777
   14000f73a:	mov    rcx,QWORD PTR [rbx]
   14000f73d:	mov    edx,0x2
   14000f742:	call   0x140010bd0
   14000f747:	mov    QWORD PTR [rdi],rax
   14000f74a:	test   rax,rax
   14000f74d:	jne    0x14000f753
   14000f74f:	xor    eax,eax
   14000f751:	jmp    0x14000f79e
   14000f753:	mov    rax,QWORD PTR [rsp+0x50]
   14000f758:	mov    rdx,rsi
   14000f75b:	mov    DWORD PTR [rax],0x1
   14000f761:	mov    r8,QWORD PTR [rbx]
   14000f764:	mov    rcx,QWORD PTR [rdi]
   14000f767:	call   0x14000a170
   14000f76c:	mov    r11,QWORD PTR [rbx]
   14000f76f:	add    r11,r11
   14000f772:	mov    QWORD PTR [rbx],r11
   14000f775:	jmp    0x14000f799
   14000f777:	mov    rdx,QWORD PTR [rdx]
   14000f77a:	mov    rcx,QWORD PTR [rdi]
   14000f77d:	mov    r8d,0x2
   14000f783:	call   0x140010cdc
   14000f788:	test   rax,rax
   14000f78b:	je     0x14000f74f
   14000f78d:	mov    QWORD PTR [rdi],rax
   14000f790:	mov    rcx,QWORD PTR [rbx]
   14000f793:	add    rcx,rcx
   14000f796:	mov    QWORD PTR [rbx],rcx
   14000f799:	mov    eax,0x1
   14000f79e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f7a3:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f7a8:	add    rsp,0x20
   14000f7ac:	pop    rdi
   14000f7ad:	ret    
   14000f7ae:	int3   
   14000f7af:	int3   
   14000f7b0:	sub    rsp,0x28
   14000f7b4:	dec    DWORD PTR [rcx+0x8]
   14000f7b7:	js     0x14000f7c7
   14000f7b9:	mov    rax,QWORD PTR [rcx]
   14000f7bc:	movzx  edx,BYTE PTR [rax]
   14000f7bf:	inc    rax
   14000f7c2:	mov    QWORD PTR [rcx],rax
   14000f7c5:	jmp    0x14000f7ce
   14000f7c7:	call   0x140010fc8
   14000f7cc:	mov    edx,eax
   14000f7ce:	mov    eax,edx
   14000f7d0:	add    rsp,0x28
   14000f7d4:	ret    
   14000f7d5:	int3   
   14000f7d6:	int3   
   14000f7d7:	int3   
   14000f7d8:	mov    QWORD PTR [rsp+0x18],rbx
   14000f7dd:	push   rbp
   14000f7de:	push   rsi
   14000f7df:	push   rdi
   14000f7e0:	push   r12
   14000f7e2:	push   r13
   14000f7e4:	push   r14
   14000f7e6:	push   r15
   14000f7e8:	lea    rbp,[rsp-0x180]
   14000f7f0:	sub    rsp,0x280
   14000f7f7:	mov    rax,QWORD PTR [rip+0x138c2]        # 0x1400230c0
   14000f7fe:	xor    rax,rsp
   14000f801:	mov    QWORD PTR [rbp+0x170],rax
   14000f808:	xor    eax,eax
   14000f80a:	lea    r13,[rbp+0x10]
   14000f80e:	mov    QWORD PTR [rbp-0x48],r9
   14000f812:	mov    rbx,r8
   14000f815:	mov    r12,rdx
   14000f818:	mov    QWORD PTR [rsp+0x50],rdx
   14000f81d:	mov    QWORD PTR [rsp+0x78],r13
   14000f822:	mov    rsi,rcx
   14000f825:	mov    QWORD PTR [rsp+0x68],rcx
   14000f82a:	mov    QWORD PTR [rbp-0x50],0x15e
   14000f832:	mov    DWORD PTR [rbp-0x7c],eax
   14000f835:	mov    WORD PTR [rbp-0x78],ax
   14000f839:	mov    edi,eax
   14000f83b:	mov    DWORD PTR [rsp+0x3c],eax
   14000f83f:	test   rdx,rdx
   14000f842:	jne    0x14000f85c
   14000f844:	call   0x14000bdf0
   14000f849:	mov    DWORD PTR [rax],0x16
   14000f84f:	call   0x14000d04c
   14000f854:	or     eax,0xffffffff
   14000f857:	jmp    0x140010822
   14000f85c:	test   rcx,rcx
   14000f85f:	je     0x14000f844
   14000f861:	or     r15d,0xffffffff
   14000f865:	test   BYTE PTR [rcx+0x18],0x40
   14000f869:	jne    0x14000f8e7
   14000f86b:	call   0x140010b28
   14000f870:	lea    rdx,[rip+0x14039]        # 0x1400238b0
   14000f877:	lea    r9,[rip+0x16202]        # 0x140025a80
   14000f87e:	cmp    eax,r15d
   14000f881:	je     0x14000f8a0
   14000f883:	cmp    eax,0xfffffffe
   14000f886:	je     0x14000f8a0
   14000f888:	movsxd r8,eax
   14000f88b:	mov    rcx,r8
   14000f88e:	and    r8d,0x1f
   14000f892:	sar    rcx,0x5
   14000f896:	imul   r8,r8,0x58
   14000f89a:	add    r8,QWORD PTR [r9+rcx*8]
   14000f89e:	jmp    0x14000f8a3
   14000f8a0:	mov    r8,rdx
   14000f8a3:	test   BYTE PTR [r8+0x38],0x7f
   14000f8a8:	jne    0x14000f8cf
   14000f8aa:	cmp    eax,r15d
   14000f8ad:	je     0x14000f8c9
   14000f8af:	cmp    eax,0xfffffffe
   14000f8b2:	je     0x14000f8c9
   14000f8b4:	movsxd rdx,eax
   14000f8b7:	mov    rax,rdx
   14000f8ba:	and    edx,0x1f
   14000f8bd:	sar    rax,0x5
   14000f8c1:	imul   rdx,rdx,0x58
   14000f8c5:	add    rdx,QWORD PTR [r9+rax*8]
   14000f8c9:	test   BYTE PTR [rdx+0x38],0x80
   14000f8cd:	je     0x14000f8e7
   14000f8cf:	call   0x14000bdf0
   14000f8d4:	mov    DWORD PTR [rax],0x16
   14000f8da:	call   0x14000d04c
   14000f8df:	mov    eax,r15d
   14000f8e2:	jmp    0x140010822
   14000f8e7:	lea    rcx,[rbp-0x38]
   14000f8eb:	mov    rdx,rbx
   14000f8ee:	call   0x14000c724
   14000f8f3:	mov    al,BYTE PTR [r12]
   14000f8f7:	xor    ebx,ebx
   14000f8f9:	mov    BYTE PTR [rsp+0x39],bl
   14000f8fd:	mov    r14d,ebx
   14000f900:	mov    DWORD PTR [rsp+0x34],ebx
   14000f904:	mov    r13d,ebx
   14000f907:	mov    DWORD PTR [rsp+0x70],ebx
   14000f90b:	test   al,al
   14000f90d:	je     0x14001080f
   14000f913:	lea    r13d,[rbx+0x1]
   14000f917:	movzx  ecx,al
   14000f91a:	call   0x14000c8cc
   14000f91f:	test   eax,eax
   14000f921:	je     0x14000f973
   14000f923:	sub    r14d,r13d
   14000f926:	add    r14d,r13d
   14000f929:	mov    rcx,rsi
   14000f92c:	mov    DWORD PTR [rsp+0x34],r14d
   14000f931:	call   0x14000f7b0
   14000f936:	mov    ebx,eax
   14000f938:	cmp    eax,r15d
   14000f93b:	je     0x14000f953
   14000f93d:	movzx  ecx,al
   14000f940:	call   0x14000c8cc
   14000f945:	test   eax,eax
   14000f947:	jne    0x14000f926
   14000f949:	mov    rdx,rsi
   14000f94c:	mov    ecx,ebx
   14000f94e:	call   0x140015ba0
   14000f953:	add    r12,r13
   14000f956:	movzx  ecx,BYTE PTR [r12]
   14000f95b:	call   0x14000c8cc
   14000f960:	test   eax,eax
   14000f962:	jne    0x14000f953
   14000f964:	mov    rsi,QWORD PTR [rsp+0x68]
   14000f969:	mov    QWORD PTR [rsp+0x50],r12
   14000f96e:	jmp    0x1400107a8
   14000f973:	mov    cl,0x25
   14000f975:	cmp    BYTE PTR [r12],cl
   14000f979:	jne    0x14001073b
   14000f97f:	cmp    BYTE PTR [r12+0x1],cl
   14000f984:	je     0x14001072a
   14000f98a:	mov    r13,QWORD PTR [rsp+0x50]
   14000f98f:	mov    edx,0x1
   14000f994:	mov    DWORD PTR [rsp+0x5c],ebx
   14000f998:	mov    BYTE PTR [rsp+0x38],dl
   14000f99c:	mov    BYTE PTR [rbp-0x80],bl
   14000f99f:	mov    DWORD PTR [rsp+0x4c],ebx
   14000f9a3:	mov    DWORD PTR [rsp+0x60],ebx
   14000f9a7:	mov    r14d,ebx
   14000f9aa:	mov    BYTE PTR [rsp+0x58],bl
   14000f9ae:	mov    BYTE PTR [rsp+0x40],bl
   14000f9b2:	mov    BYTE PTR [rsp+0x30],bl
   14000f9b6:	mov    sil,bl
   14000f9b9:	mov    BYTE PTR [rbp-0x58],bl
   14000f9bc:	mov    r12b,bl
   14000f9bf:	mov    edi,ebx
   14000f9c1:	add    r13,rdx
   14000f9c4:	movzx  ebx,BYTE PTR [r13+0x0]
   14000f9c9:	mov    ecx,ebx
   14000f9cb:	call   0x14000c7c8
   14000f9d0:	xor    r8d,r8d
   14000f9d3:	test   eax,eax
   14000f9d5:	je     0x14000f9ea
   14000f9d7:	lea    eax,[r14+r14*4]
   14000f9db:	lea    edx,[r8+0x1]
   14000f9df:	add    DWORD PTR [rsp+0x60],edx
   14000f9e3:	lea    r14d,[rbx+rax*2-0x30]
   14000f9e8:	jmp    0x14000fa50
   14000f9ea:	cmp    ebx,0x2a
   14000f9ed:	je     0x14000fafa
   14000f9f3:	cmp    ebx,0x46
   14000f9f6:	je     0x14000fa4b
   14000f9f8:	cmp    ebx,0x49
   14000f9fb:	je     0x14000faa0
   14000fa01:	cmp    ebx,0x4c
   14000fa04:	je     0x14000fa95
   14000fa0a:	cmp    ebx,0x4e
   14000fa0d:	je     0x14000fa4b
   14000fa0f:	cmp    ebx,0x68
   14000fa12:	je     0x14000fa43
   14000fa14:	mov    edx,0x1
   14000fa19:	cmp    ebx,0x6c
   14000fa1c:	je     0x14000fa28
   14000fa1e:	cmp    ebx,0x77
   14000fa21:	je     0x14000fa3e
   14000fa23:	jmp    0x14000faf2
   14000fa28:	cmp    BYTE PTR [r13+0x1],0x6c
   14000fa2d:	jne    0x14000fa3a
   14000fa2f:	inc    r13
   14000fa32:	add    edi,edx
   14000fa34:	mov    QWORD PTR [rbp-0x70],r8
   14000fa38:	jmp    0x14000fa50
   14000fa3a:	add    BYTE PTR [rsp+0x38],dl
   14000fa3e:	add    r12b,dl
   14000fa41:	jmp    0x14000fa50
   14000fa43:	add    BYTE PTR [rsp+0x38],r15b
   14000fa48:	add    r12b,r15b
   14000fa4b:	mov    edx,0x1
   14000fa50:	mov    cl,BYTE PTR [rsp+0x30]
   14000fa54:	test   sil,sil
   14000fa57:	je     0x14000f9c1
   14000fa5d:	mov    DWORD PTR [rsp+0x48],edi
   14000fa61:	mov    edi,DWORD PTR [rsp+0x3c]
   14000fa65:	mov    QWORD PTR [rsp+0x50],r13
   14000fa6a:	mov    r13b,BYTE PTR [rbp-0x80]
   14000fa6e:	mov    DWORD PTR [rsp+0x44],r14d
   14000fa73:	test   cl,cl
   14000fa75:	jne    0x14000fb0e
   14000fa7b:	mov    rax,QWORD PTR [rbp-0x48]
   14000fa7f:	mov    QWORD PTR [rbp-0x18],rax
   14000fa83:	add    rax,0x8
   14000fa87:	mov    QWORD PTR [rbp-0x48],rax
   14000fa8b:	mov    rax,QWORD PTR [rax-0x8]
   14000fa8f:	mov    QWORD PTR [rbp-0x60],rax
   14000fa93:	jmp    0x14000fb12
   14000fa95:	mov    edx,0x1
   14000fa9a:	add    BYTE PTR [rsp+0x38],dl
   14000fa9e:	jmp    0x14000fa50
   14000faa0:	mov    al,BYTE PTR [r13+0x1]
   14000faa4:	cmp    al,0x36
   14000faa6:	jne    0x14000fabe
   14000faa8:	lea    rcx,[r13+0x2]
   14000faac:	cmp    BYTE PTR [rcx],0x34
   14000faaf:	jne    0x14000fabe
   14000fab1:	mov    r13,rcx
   14000fab4:	mov    edx,0x1
   14000fab9:	jmp    0x14000fa32
   14000fabe:	cmp    al,0x33
   14000fac0:	jne    0x14000fad3
   14000fac2:	lea    rcx,[r13+0x2]
   14000fac6:	cmp    BYTE PTR [rcx],0x32
   14000fac9:	jne    0x14000fad3
   14000facb:	mov    r13,rcx
   14000face:	jmp    0x14000fa4b
   14000fad3:	cmp    al,0x64
   14000fad5:	je     0x14000fab4
   14000fad7:	cmp    al,0x69
   14000fad9:	je     0x14000fab4
   14000fadb:	cmp    al,0x6f
   14000fadd:	je     0x14000fab4
   14000fadf:	cmp    al,0x78
   14000fae1:	je     0x14000fab4
   14000fae3:	cmp    al,0x58
   14000fae5:	je     0x14000fab4
   14000fae7:	mov    edx,0x1
   14000faec:	mov    QWORD PTR [rbp-0x70],r8
   14000faf0:	add    edi,edx
   14000faf2:	add    sil,dl
   14000faf5:	jmp    0x14000fa50
   14000fafa:	mov    cl,BYTE PTR [rsp+0x30]
   14000fafe:	mov    edx,0x1
   14000fb03:	add    cl,dl
   14000fb05:	mov    BYTE PTR [rsp+0x30],cl
   14000fb09:	jmp    0x14000fa54
   14000fb0e:	mov    QWORD PTR [rbp-0x60],r8
   14000fb12:	mov    rax,QWORD PTR [rsp+0x50]
   14000fb17:	mov    bl,r8b
   14000fb1a:	test   r12b,r12b
   14000fb1d:	jne    0x14000fb2f
   14000fb1f:	cmp    BYTE PTR [rax],0x53
   14000fb22:	je     0x14000fb2c
   14000fb24:	cmp    BYTE PTR [rax],0x43
   14000fb27:	mov    r12b,r15b
   14000fb2a:	jne    0x14000fb2f
   14000fb2c:	mov    r12b,dl
   14000fb2f:	movzx  r14d,BYTE PTR [rax]
   14000fb33:	or     r14d,0x20
   14000fb37:	mov    DWORD PTR [rbp-0x40],r14d
   14000fb3b:	cmp    r14d,0x6e
   14000fb3f:	je     0x14000fbad
   14000fb41:	cmp    r14d,0x63
   14000fb45:	je     0x14000fb89
   14000fb47:	cmp    r14d,0x7b
   14000fb4b:	je     0x14000fb89
   14000fb4d:	mov    rsi,QWORD PTR [rsp+0x68]
   14000fb52:	mov    r14d,DWORD PTR [rsp+0x34]
   14000fb57:	mov    rcx,rsi
   14000fb5a:	add    r14d,edx
   14000fb5d:	call   0x14000f7b0
   14000fb62:	mov    edi,eax
   14000fb64:	mov    DWORD PTR [rsp+0x3c],eax
   14000fb68:	cmp    eax,r15d
   14000fb6b:	je     0x14000fb7e
   14000fb6d:	movzx  ecx,al
   14000fb70:	call   0x14000c8cc
   14000fb75:	mov    edx,0x1
   14000fb7a:	test   eax,eax
   14000fb7c:	jne    0x14000fb57
   14000fb7e:	mov    DWORD PTR [rsp+0x34],r14d
   14000fb83:	mov    r14d,DWORD PTR [rbp-0x40]
   14000fb87:	jmp    0x14000fb9d
   14000fb89:	mov    rcx,QWORD PTR [rsp+0x68]
   14000fb8e:	add    DWORD PTR [rsp+0x34],edx
   14000fb92:	call   0x14000f7b0
   14000fb97:	mov    edi,eax
   14000fb99:	mov    DWORD PTR [rsp+0x3c],eax
   14000fb9d:	cmp    edi,r15d
   14000fba0:	je     0x14000fe6e
   14000fba6:	mov    cl,BYTE PTR [rsp+0x30]
   14000fbaa:	xor    r8d,r8d
   14000fbad:	mov    eax,DWORD PTR [rsp+0x60]
   14000fbb1:	mov    esi,DWORD PTR [rsp+0x44]
   14000fbb5:	test   eax,eax
   14000fbb7:	je     0x14000fbc1
   14000fbb9:	test   esi,esi
   14000fbbb:	je     0x1400107bb
   14000fbc1:	cmp    r14d,0x6f
   14000fbc5:	jg     0x14000ffee
   14000fbcb:	je     0x1400104c1
   14000fbd1:	cmp    r14d,0x63
   14000fbd5:	je     0x14000ffc2
   14000fbdb:	cmp    r14d,0x64
   14000fbdf:	je     0x1400104c1
   14000fbe5:	jle    0x14001001c
   14000fbeb:	cmp    r14d,0x67
   14000fbef:	jle    0x14000fc37
   14000fbf1:	cmp    r14d,0x69
   14000fbf5:	je     0x14000fc1a
   14000fbf7:	cmp    r14d,0x6e
   14000fbfb:	jne    0x14001001c
   14000fc01:	mov    eax,DWORD PTR [rsp+0x34]
   14000fc05:	test   cl,cl
   14000fc07:	je     0x1400106d7
   14000fc0d:	mov    r12,QWORD PTR [rsp+0x50]
   14000fc12:	mov    r14d,eax
   14000fc15:	jmp    0x140010710
   14000fc1a:	mov    r14d,0x64
   14000fc20:	mov    ecx,0x1
   14000fc25:	cmp    edi,0x2d
   14000fc28:	jne    0x140010157
   14000fc2e:	mov    BYTE PTR [rsp+0x40],cl
   14000fc32:	jmp    0x14001015c
   14000fc37:	mov    rbx,r8
   14000fc3a:	mov    esi,0x1
   14000fc3f:	cmp    edi,0x2d
   14000fc42:	jne    0x14000fc50
   14000fc44:	mov    rax,QWORD PTR [rsp+0x78]
   14000fc49:	mov    ebx,esi
   14000fc4b:	mov    BYTE PTR [rax],dil
   14000fc4e:	jmp    0x14000fc55
   14000fc50:	cmp    edi,0x2b
   14000fc53:	jne    0x14000fc7e
   14000fc55:	mov    r13,QWORD PTR [rsp+0x68]
   14000fc5a:	mov    r12d,DWORD PTR [rsp+0x44]
   14000fc5f:	mov    r14d,DWORD PTR [rsp+0x34]
   14000fc64:	mov    rcx,r13
   14000fc67:	sub    r12d,esi
   14000fc6a:	add    r14d,esi
   14000fc6d:	call   0x14000f7b0
   14000fc72:	mov    edi,eax
   14000fc74:	mov    DWORD PTR [rsp+0x3c],eax
   14000fc78:	mov    eax,DWORD PTR [rsp+0x60]
   14000fc7c:	jmp    0x14000fc8d
   14000fc7e:	mov    r12d,DWORD PTR [rsp+0x44]
   14000fc83:	mov    r13,QWORD PTR [rsp+0x68]
   14000fc88:	mov    r14d,DWORD PTR [rsp+0x34]
   14000fc8d:	test   eax,eax
   14000fc8f:	movzx  ecx,dil
   14000fc93:	cmove  r12d,r15d
   14000fc97:	jmp    0x14000fced
   14000fc99:	mov    eax,r12d
   14000fc9c:	sub    r12d,esi
   14000fc9f:	test   eax,eax
   14000fca1:	je     0x14000fcf6
   14000fca3:	mov    rax,QWORD PTR [rsp+0x78]
   14000fca8:	add    DWORD PTR [rsp+0x4c],esi
   14000fcac:	lea    r9,[rbp+0x10]
   14000fcb0:	mov    BYTE PTR [rbx+rax*1],dil
   14000fcb4:	lea    rax,[rbp-0x7c]
   14000fcb8:	add    rbx,rsi
   14000fcbb:	lea    r8,[rsp+0x78]
   14000fcc0:	lea    rdx,[rbp-0x50]
   14000fcc4:	mov    rcx,rbx
   14000fcc7:	mov    QWORD PTR [rsp+0x20],rax
   14000fccc:	call   0x14000f718
   14000fcd1:	test   eax,eax
   14000fcd3:	je     0x14000fe6e
   14000fcd9:	mov    rcx,r13
   14000fcdc:	add    r14d,esi
   14000fcdf:	call   0x14000f7b0
   14000fce4:	mov    edi,eax
   14000fce6:	mov    DWORD PTR [rsp+0x3c],eax
   14000fcea:	movzx  ecx,al
   14000fced:	call   0x14000c7c8
   14000fcf2:	test   eax,eax
   14000fcf4:	jne    0x14000fc99
   14000fcf6:	mov    rax,QWORD PTR [rbp-0x38]
   14000fcfa:	mov    rcx,QWORD PTR [rax+0x128]
   14000fd01:	mov    rax,QWORD PTR [rcx]
   14000fd04:	mov    ecx,0x1
   14000fd09:	mov    sil,BYTE PTR [rax]
   14000fd0c:	cmp    sil,dil
   14000fd0f:	jne    0x14000fdd1
   14000fd15:	mov    eax,r12d
   14000fd18:	sub    r12d,ecx
   14000fd1b:	test   eax,eax
   14000fd1d:	je     0x14000fdd1
   14000fd23:	add    r14d,ecx
   14000fd26:	mov    rcx,r13
   14000fd29:	call   0x14000f7b0
   14000fd2e:	lea    r9,[rbp+0x10]
   14000fd32:	lea    r8,[rsp+0x78]
   14000fd37:	mov    edi,eax
   14000fd39:	mov    DWORD PTR [rsp+0x3c],eax
   14000fd3d:	mov    rax,QWORD PTR [rsp+0x78]
   14000fd42:	mov    BYTE PTR [rbx+rax*1],sil
   14000fd46:	lea    rax,[rbp-0x7c]
   14000fd4a:	mov    esi,0x1
   14000fd4f:	add    rbx,rsi
   14000fd52:	lea    rdx,[rbp-0x50]
   14000fd56:	mov    QWORD PTR [rsp+0x20],rax
   14000fd5b:	mov    rcx,rbx
   14000fd5e:	call   0x14000f718
   14000fd63:	test   eax,eax
   14000fd65:	je     0x14000fe6e
   14000fd6b:	movzx  ecx,dil
   14000fd6f:	jmp    0x14000fdc5
   14000fd71:	mov    eax,r12d
   14000fd74:	sub    r12d,esi
   14000fd77:	test   eax,eax
   14000fd79:	je     0x14000fdce
   14000fd7b:	mov    rax,QWORD PTR [rsp+0x78]
   14000fd80:	add    DWORD PTR [rsp+0x4c],esi
   14000fd84:	lea    r9,[rbp+0x10]
   14000fd88:	mov    BYTE PTR [rbx+rax*1],dil
   14000fd8c:	lea    rax,[rbp-0x7c]
   14000fd90:	add    rbx,rsi
   14000fd93:	lea    r8,[rsp+0x78]
   14000fd98:	lea    rdx,[rbp-0x50]
   14000fd9c:	mov    rcx,rbx
   14000fd9f:	mov    QWORD PTR [rsp+0x20],rax
   14000fda4:	call   0x14000f718
   14000fda9:	test   eax,eax
   14000fdab:	je     0x14000fe6e
   14000fdb1:	mov    rcx,r13
   14000fdb4:	add    r14d,esi
   14000fdb7:	call   0x14000f7b0
   14000fdbc:	mov    edi,eax
   14000fdbe:	mov    DWORD PTR [rsp+0x3c],eax
   14000fdc2:	movzx  ecx,al
   14000fdc5:	call   0x14000c7c8
   14000fdca:	test   eax,eax
   14000fdcc:	jne    0x14000fd71
   14000fdce:	mov    rcx,rsi
   14000fdd1:	mov    esi,DWORD PTR [rsp+0x4c]
   14000fdd5:	test   esi,esi
   14000fdd7:	je     0x14000ff4c
   14000fddd:	cmp    edi,0x65
   14000fde0:	je     0x14000fdeb
   14000fde2:	cmp    edi,0x45
   14000fde5:	jne    0x14000ff4c
   14000fdeb:	mov    eax,r12d
   14000fdee:	sub    r12d,ecx
   14000fdf1:	test   eax,eax
   14000fdf3:	je     0x14000ff4c
   14000fdf9:	mov    rax,QWORD PTR [rsp+0x78]
   14000fdfe:	lea    r9,[rbp+0x10]
   14000fe02:	lea    r8,[rsp+0x78]
   14000fe07:	mov    BYTE PTR [rbx+rax*1],0x65
   14000fe0b:	add    rbx,rcx
   14000fe0e:	lea    rax,[rbp-0x7c]
   14000fe12:	lea    rdx,[rbp-0x50]
   14000fe16:	mov    rcx,rbx
   14000fe19:	mov    QWORD PTR [rsp+0x20],rax
   14000fe1e:	call   0x14000f718
   14000fe23:	test   eax,eax
   14000fe25:	je     0x14000fe6e
   14000fe27:	mov    rcx,r13
   14000fe2a:	inc    r14d
   14000fe2d:	call   0x14000f7b0
   14000fe32:	mov    edi,eax
   14000fe34:	mov    DWORD PTR [rsp+0x3c],eax
   14000fe38:	cmp    eax,0x2d
   14000fe3b:	jne    0x14000feb9
   14000fe3d:	mov    rax,QWORD PTR [rsp+0x78]
   14000fe42:	lea    r9,[rbp+0x10]
   14000fe46:	lea    r8,[rsp+0x78]
   14000fe4b:	mov    BYTE PTR [rbx+rax*1],dil
   14000fe4f:	lea    rax,[rbp-0x7c]
   14000fe53:	inc    rbx
   14000fe56:	lea    rdx,[rbp-0x50]
   14000fe5a:	mov    rcx,rbx
   14000fe5d:	mov    QWORD PTR [rsp+0x20],rax
   14000fe62:	call   0x14000f718
   14000fe67:	xor    r8d,r8d
   14000fe6a:	test   eax,eax
   14000fe6c:	jne    0x14000fec1
   14000fe6e:	xor    ebx,ebx
   14000fe70:	mov    eax,0x1
   14000fe75:	cmp    DWORD PTR [rbp-0x7c],eax
   14000fe78:	jne    0x14000fe84
   14000fe7a:	mov    rcx,QWORD PTR [rsp+0x78]
   14000fe7f:	call   0x14000b490
   14000fe84:	cmp    edi,r15d
   14000fe87:	jne    0x14001080a
   14000fe8d:	mov    eax,DWORD PTR [rsp+0x70]
   14000fe91:	test   eax,eax
   14000fe93:	jne    0x14000fe9d
   14000fe95:	mov    dl,BYTE PTR [rsp+0x39]
   14000fe99:	test   dl,dl
   14000fe9b:	je     0x14000fea0
   14000fe9d:	mov    r15d,eax
   14000fea0:	cmp    BYTE PTR [rbp-0x20],bl
   14000fea3:	je     0x14000f8df
   14000fea9:	mov    rcx,QWORD PTR [rbp-0x28]
   14000fead:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000feb4:	jmp    0x14000f8df
   14000feb9:	cmp    eax,0x2b
   14000febc:	jne    0x14000fee6
   14000febe:	xor    r8d,r8d
   14000fec1:	mov    eax,r12d
   14000fec4:	mov    ecx,0x1
   14000fec9:	sub    r12d,ecx
   14000fecc:	test   eax,eax
   14000fece:	jne    0x14000fed5
   14000fed0:	mov    r12d,r8d
   14000fed3:	jmp    0x14000fee6
   14000fed5:	add    r14d,ecx
   14000fed8:	mov    rcx,r13
   14000fedb:	call   0x14000f7b0
   14000fee0:	mov    edi,eax
   14000fee2:	mov    DWORD PTR [rsp+0x3c],eax
   14000fee6:	movzx  ecx,dil
   14000feea:	jmp    0x14000ff43
   14000feec:	mov    eax,r12d
   14000feef:	mov    ecx,0x1
   14000fef4:	sub    r12d,ecx
   14000fef7:	test   eax,eax
   14000fef9:	je     0x14000ff4c
   14000fefb:	mov    rax,QWORD PTR [rsp+0x78]
   14000ff00:	add    esi,ecx
   14000ff02:	lea    r9,[rbp+0x10]
   14000ff06:	mov    BYTE PTR [rbx+rax*1],dil
   14000ff0a:	add    rbx,rcx
   14000ff0d:	lea    rax,[rbp-0x7c]
   14000ff11:	lea    r8,[rsp+0x78]
   14000ff16:	lea    rdx,[rbp-0x50]
   14000ff1a:	mov    rcx,rbx
   14000ff1d:	mov    QWORD PTR [rsp+0x20],rax
   14000ff22:	call   0x14000f718
   14000ff27:	test   eax,eax
   14000ff29:	je     0x14000fe6e
   14000ff2f:	mov    rcx,r13
   14000ff32:	inc    r14d
   14000ff35:	call   0x14000f7b0
   14000ff3a:	mov    edi,eax
   14000ff3c:	mov    DWORD PTR [rsp+0x3c],eax
   14000ff40:	movzx  ecx,al
   14000ff43:	call   0x14000c7c8
   14000ff48:	test   eax,eax
   14000ff4a:	jne    0x14000feec
   14000ff4c:	mov    eax,0x1
   14000ff51:	sub    r14d,eax
   14000ff54:	mov    DWORD PTR [rsp+0x34],r14d
   14000ff59:	cmp    edi,r15d
   14000ff5c:	je     0x14000ff6d
   14000ff5e:	mov    rdx,r13
   14000ff61:	mov    ecx,edi
   14000ff63:	call   0x140015ba0
   14000ff68:	mov    eax,0x1
   14000ff6d:	xor    r8d,r8d
   14000ff70:	test   esi,esi
   14000ff72:	je     0x14000fe6e
   14000ff78:	cmp    BYTE PTR [rsp+0x30],r8b
   14000ff7d:	jne    0x14000ffb8
   14000ff7f:	mov    r13d,DWORD PTR [rsp+0x70]
   14000ff84:	mov    rsi,QWORD PTR [rsp+0x78]
   14000ff89:	mov    BYTE PTR [rbx+rsi*1],r8b
   14000ff8d:	movsx  ebx,BYTE PTR [rsp+0x38]
   14000ff92:	mov    rcx,QWORD PTR [rip+0x138ef]        # 0x140023888
   14000ff99:	add    r13d,eax
   14000ff9c:	sub    ebx,eax
   14000ff9e:	mov    DWORD PTR [rsp+0x70],r13d
   14000ffa3:	call   QWORD PTR [rip+0xa137]        # 0x14001a0e0
   14000ffa9:	mov    rdx,QWORD PTR [rbp-0x60]
   14000ffad:	lea    r9,[rbp-0x38]
   14000ffb1:	mov    r8,rsi
   14000ffb4:	mov    ecx,ebx
   14000ffb6:	call   rax
   14000ffb8:	mov    r12,QWORD PTR [rsp+0x50]
   14000ffbd:	jmp    0x140010710
   14000ffc2:	mov    r11d,0x1
   14000ffc8:	test   eax,eax
   14000ffca:	jne    0x14000ffd8
   14000ffcc:	add    esi,r11d
   14000ffcf:	mov    DWORD PTR [rsp+0x60],r11d
   14000ffd4:	mov    DWORD PTR [rsp+0x44],esi
   14000ffd8:	test   r12b,r12b
   14000ffdb:	mov    r12,QWORD PTR [rsp+0x50]
   14000ffe0:	jle    0x1400102e8
   14000ffe6:	mov    sil,r11b
   14000ffe9:	jmp    0x1400102eb
   14000ffee:	cmp    r14d,0x70
   14000fff2:	je     0x1400104aa
   14000fff8:	cmp    r14d,0x73
   14000fffc:	je     0x1400102d0
   140010002:	cmp    r14d,0x75
   140010006:	je     0x1400104c1
   14001000c:	cmp    r14d,0x78
   140010010:	je     0x14000fc20
   140010016:	cmp    r14d,0x7b
   14001001a:	je     0x140010053
   14001001c:	mov    r12,QWORD PTR [rsp+0x50]
   140010021:	movzx  eax,BYTE PTR [r12]
   140010026:	cmp    eax,edi
   140010028:	jne    0x1400107bb
   14001002e:	mov    dl,BYTE PTR [rsp+0x39]
   140010032:	mov    r14d,DWORD PTR [rsp+0x34]
   140010037:	add    dl,r15b
   14001003a:	mov    BYTE PTR [rsp+0x39],dl
   14001003e:	test   cl,cl
   140010040:	jne    0x140010710
   140010046:	mov    r9,QWORD PTR [rbp-0x18]
   14001004a:	mov    QWORD PTR [rbp-0x48],r9
   14001004e:	jmp    0x140010710
   140010053:	mov    esi,DWORD PTR [rbp-0x58]
   140010056:	test   r12b,r12b
   140010059:	mov    r12,QWORD PTR [rsp+0x50]
   14001005e:	mov    eax,0x1
   140010063:	movzx  esi,sil
   140010067:	cmovg  esi,eax
   14001006a:	add    r12,rax
   14001006d:	cmp    BYTE PTR [r12],0x5e
   140010072:	jne    0x14001007c
   140010074:	inc    r12
   140010077:	mov    BYTE PTR [rsp+0x58],r15b
   14001007c:	xor    edx,edx
   14001007e:	lea    rcx,[rbp-0x10]
   140010082:	lea    r8d,[rdx+0x20]
   140010086:	call   0x14000a560
   14001008b:	cmp    BYTE PTR [r12],0x5d
   140010090:	mov    r11d,0x1
   140010096:	jne    0x14001013c
   14001009c:	mov    r13b,0x5d
   14001009f:	add    r12,r11
   1400100a2:	mov    BYTE PTR [rbp-0x5],0x20
   1400100a6:	jmp    0x14001013c
   1400100ab:	add    r12,r11
   1400100ae:	cmp    al,0x2d
   1400100b0:	jne    0x14001011f
   1400100b2:	test   r13b,r13b
   1400100b5:	je     0x14001011f
   1400100b7:	mov    cl,BYTE PTR [r12]
   1400100bb:	cmp    cl,0x5d
   1400100be:	je     0x14001011f
   1400100c0:	add    r12,r11
   1400100c3:	cmp    r13b,cl
   1400100c6:	jae    0x1400100cd
   1400100c8:	mov    r9b,cl
   1400100cb:	jmp    0x1400100d3
   1400100cd:	mov    r9b,r13b
   1400100d0:	mov    r13b,cl
   1400100d3:	cmp    r13b,r9b
   1400100d6:	jae    0x1400100ff
   1400100d8:	movzx  r10d,r13b
   1400100dc:	movzx  ecx,r13b
   1400100e0:	mov    r8,r10
   1400100e3:	mov    edx,r11d
   1400100e6:	and    ecx,0x7
   1400100e9:	shr    r8,0x3
   1400100ed:	add    r13b,r11b
   1400100f0:	shl    dl,cl
   1400100f2:	add    r10,r11
   1400100f5:	or     BYTE PTR [rbp+r8*1-0x10],dl
   1400100fa:	cmp    r13b,r9b
   1400100fd:	jb     0x1400100dc
   1400100ff:	movzx  eax,r9b
   140010103:	movzx  r8d,r9b
   140010107:	mov    edx,r11d
   14001010a:	and    eax,0x7
   14001010d:	shr    r8,0x3
   140010111:	mov    cl,al
   140010113:	shl    dl,cl
   140010115:	or     BYTE PTR [rbp+r8*1-0x10],dl
   14001011a:	xor    r13b,r13b
   14001011d:	jmp    0x14001013c
   14001011f:	movzx  r8d,al
   140010123:	mov    r13b,al
   140010126:	movzx  eax,al
   140010129:	and    eax,0x7
   14001012c:	mov    edx,r11d
   14001012f:	shr    r8,0x3
   140010133:	mov    cl,al
   140010135:	shl    dl,cl
   140010137:	or     BYTE PTR [rbp+r8*1-0x10],dl
   14001013c:	mov    al,BYTE PTR [r12]
   140010140:	cmp    al,0x5d
   140010142:	jne    0x1400100ab
   140010148:	xor    ebx,ebx
   14001014a:	cmp    al,bl
   14001014c:	je     0x14000fe70
   140010152:	jmp    0x1400102eb
   140010157:	cmp    edi,0x2b
   14001015a:	jne    0x140010172
   14001015c:	sub    esi,ecx
   14001015e:	mov    DWORD PTR [rsp+0x44],esi
   140010162:	jne    0x14001023c
   140010168:	test   eax,eax
   14001016a:	je     0x14001023c
   140010170:	mov    bl,cl
   140010172:	mov    r13d,DWORD PTR [rsp+0x34]
   140010177:	mov    r12,QWORD PTR [rsp+0x68]
   14001017c:	cmp    edi,0x30
   14001017f:	jne    0x1400101d4
   140010181:	add    r13d,ecx
   140010184:	mov    rcx,r12
   140010187:	mov    DWORD PTR [rsp+0x34],r13d
   14001018c:	call   0x14000f7b0
   140010191:	mov    edi,eax
   140010193:	mov    DWORD PTR [rsp+0x3c],eax
   140010197:	cmp    al,0x78
   140010199:	je     0x140010290
   14001019f:	cmp    al,0x58
   1400101a1:	je     0x140010290
   1400101a7:	mov    eax,0x1
   1400101ac:	mov    DWORD PTR [rsp+0x4c],eax
   1400101b0:	cmp    r14d,0x78
   1400101b4:	je     0x140010268
   1400101ba:	xor    r8d,r8d
   1400101bd:	cmp    DWORD PTR [rsp+0x60],r8d
   1400101c2:	je     0x1400101ce
   1400101c4:	sub    esi,eax
   1400101c6:	mov    DWORD PTR [rsp+0x44],esi
   1400101ca:	jne    0x1400101ce
   1400101cc:	add    bl,al
   1400101ce:	mov    r14d,0x6f
   1400101d4:	mov    r12d,DWORD PTR [rsp+0x48]
   1400101d9:	test   r12d,r12d
   1400101dc:	je     0x1400105c0
   1400101e2:	mov    rsi,QWORD PTR [rbp-0x70]
   1400101e6:	test   bl,bl
   1400101e8:	jne    0x1400105a9
   1400101ee:	mov    r13d,DWORD PTR [rsp+0x44]
   1400101f3:	mov    rbx,QWORD PTR [rsp+0x68]
   1400101f8:	cmp    r14d,0x78
   1400101fc:	je     0x140010517
   140010202:	cmp    r14d,0x70
   140010206:	je     0x140010517
   14001020c:	movzx  ecx,dil
   140010210:	call   0x14000c7c8
   140010215:	xor    r8d,r8d
   140010218:	test   eax,eax
   14001021a:	je     0x14001058f
   140010220:	cmp    r14d,0x6f
   140010224:	jne    0x14001050e
   14001022a:	cmp    edi,0x38
   14001022d:	jge    0x14001058f
   140010233:	shl    rsi,0x3
   140010237:	jmp    0x140010551
   14001023c:	mov    r13d,DWORD PTR [rsp+0x34]
   140010241:	mov    r12,QWORD PTR [rsp+0x68]
   140010246:	add    r13d,ecx
   140010249:	mov    rcx,r12
   14001024c:	mov    DWORD PTR [rsp+0x34],r13d
   140010251:	call   0x14000f7b0
   140010256:	xor    r8d,r8d
   140010259:	mov    edi,eax
   14001025b:	mov    DWORD PTR [rsp+0x3c],eax
   14001025f:	lea    ecx,[r8+0x1]
   140010263:	jmp    0x14001017c
   140010268:	sub    r13d,eax
   14001026b:	mov    DWORD PTR [rsp+0x34],r13d
   140010270:	cmp    edi,r15d
   140010273:	je     0x14001027f
   140010275:	mov    rdx,r12
   140010278:	mov    ecx,edi
   14001027a:	call   0x140015ba0
   14001027f:	mov    edi,0x30
   140010284:	xor    r8d,r8d
   140010287:	mov    DWORD PTR [rsp+0x3c],edi
   14001028b:	jmp    0x1400101d4
   140010290:	mov    r14d,0x1
   140010296:	mov    rcx,r12
   140010299:	add    r13d,r14d
   14001029c:	mov    DWORD PTR [rsp+0x34],r13d
   1400102a1:	call   0x14000f7b0
   1400102a6:	xor    r8d,r8d
   1400102a9:	mov    edi,eax
   1400102ab:	mov    DWORD PTR [rsp+0x3c],eax
   1400102af:	cmp    DWORD PTR [rsp+0x60],r8d
   1400102b4:	je     0x1400102c5
   1400102b6:	sub    esi,0x2
   1400102b9:	mov    DWORD PTR [rsp+0x44],esi
   1400102bd:	cmp    esi,r14d
   1400102c0:	jge    0x1400102c5
   1400102c2:	add    bl,r14b
   1400102c5:	mov    r14d,0x78
   1400102cb:	jmp    0x1400101d4
   1400102d0:	movzx  esi,BYTE PTR [rbp-0x58]
   1400102d4:	test   r12b,r12b
   1400102d7:	mov    r12,QWORD PTR [rsp+0x50]
   1400102dc:	mov    r11d,0x1
   1400102e2:	cmovg  esi,r11d
   1400102e6:	jmp    0x1400102eb
   1400102e8:	mov    esi,DWORD PTR [rbp-0x58]
   1400102eb:	mov    ecx,DWORD PTR [rsp+0x34]
   1400102ef:	mov    rbx,QWORD PTR [rbp-0x60]
   1400102f3:	sub    ecx,r11d
   1400102f6:	mov    DWORD PTR [rsp+0x34],ecx
   1400102fa:	cmp    edi,r15d
   1400102fd:	je     0x140010315
   1400102ff:	mov    rdx,QWORD PTR [rsp+0x68]
   140010304:	mov    ecx,edi
   140010306:	call   0x140015ba0
   14001030b:	mov    ecx,DWORD PTR [rsp+0x34]
   14001030f:	mov    r11d,0x1
   140010315:	mov    r13d,DWORD PTR [rsp+0x44]
   14001031a:	xor    r8d,r8d
   14001031d:	cmp    DWORD PTR [rsp+0x60],r8d
   140010322:	je     0x140010332
   140010324:	mov    eax,r13d
   140010327:	sub    r13d,r11d
   14001032a:	test   eax,eax
   14001032c:	je     0x140010468
   140010332:	add    ecx,r11d
   140010335:	mov    DWORD PTR [rsp+0x34],ecx
   140010339:	mov    rcx,QWORD PTR [rsp+0x68]
   14001033e:	call   0x14000f7b0
   140010343:	movsxd rdi,eax
   140010346:	mov    DWORD PTR [rsp+0x3c],edi
   14001034a:	cmp    edi,r15d
   14001034d:	je     0x140010443
   140010353:	cmp    r14d,0x63
   140010357:	je     0x14001039d
   140010359:	cmp    r14d,0x73
   14001035d:	jne    0x140010372
   14001035f:	cmp    edi,0x9
   140010362:	jl     0x14001036d
   140010364:	cmp    edi,0xd
   140010367:	jle    0x140010443
   14001036d:	cmp    edi,0x20
   140010370:	jne    0x14001039d
   140010372:	cmp    r14d,0x7b
   140010376:	jne    0x140010443
   14001037c:	mov    rax,rdi
   14001037f:	mov    edx,edi
   140010381:	sar    rax,0x3
   140010385:	and    edx,0x7
   140010388:	movsx  ecx,BYTE PTR [rbp+rax*1-0x10]
   14001038d:	movsx  eax,BYTE PTR [rsp+0x58]
   140010392:	xor    ecx,eax
   140010394:	bt     ecx,edx
   140010397:	jae    0x140010443
   14001039d:	xor    r8d,r8d
   1400103a0:	cmp    BYTE PTR [rsp+0x30],r8b
   1400103a5:	jne    0x140010431
   1400103ab:	test   sil,sil
   1400103ae:	je     0x14001041b
   1400103b0:	movzx  ecx,dil
   1400103b4:	mov    BYTE PTR [rbp-0x68],dil
   1400103b8:	call   0x140015380
   1400103bd:	test   eax,eax
   1400103bf:	je     0x1400103d2
   1400103c1:	mov    rcx,QWORD PTR [rsp+0x68]
   1400103c6:	inc    DWORD PTR [rsp+0x34]
   1400103ca:	call   0x14000f7b0
   1400103cf:	mov    BYTE PTR [rbp-0x67],al
   1400103d2:	mov    eax,0x3f
   1400103d7:	lea    r9,[rbp-0x38]
   1400103db:	lea    rdx,[rbp-0x68]
   1400103df:	mov    WORD PTR [rbp-0x78],ax
   1400103e3:	mov    rax,QWORD PTR [rbp-0x38]
   1400103e7:	lea    rcx,[rbp-0x78]
   1400103eb:	movsxd r8,DWORD PTR [rax+0x10c]
   1400103f2:	call   0x140015cac
   1400103f7:	mov    rax,QWORD PTR [rbp-0x60]
   1400103fb:	movzx  r11d,WORD PTR [rbp-0x78]
   140010400:	mov    ecx,DWORD PTR [rsp+0x34]
   140010404:	mov    WORD PTR [rax],r11w
   140010408:	add    rax,0x2
   14001040c:	mov    QWORD PTR [rbp-0x60],rax
   140010410:	mov    r11d,0x1
   140010416:	jmp    0x14001031a
   14001041b:	mov    rax,QWORD PTR [rbp-0x60]
   14001041f:	mov    r11d,0x1
   140010425:	mov    BYTE PTR [rax],dil
   140010428:	add    rax,r11
   14001042b:	mov    QWORD PTR [rbp-0x60],rax
   14001042f:	jmp    0x14001043a
   140010431:	mov    r11d,0x1
   140010437:	add    rbx,r11
   14001043a:	mov    ecx,DWORD PTR [rsp+0x34]
   14001043e:	jmp    0x14001031d
   140010443:	mov    r11d,0x1
   140010449:	sub    DWORD PTR [rsp+0x34],r11d
   14001044e:	cmp    edi,r15d
   140010451:	je     0x140010465
   140010453:	mov    rdx,QWORD PTR [rsp+0x68]
   140010458:	mov    ecx,edi
   14001045a:	call   0x140015ba0
   14001045f:	mov    r11d,0x1
   140010465:	xor    r8d,r8d
   140010468:	mov    rax,QWORD PTR [rbp-0x60]
   14001046c:	cmp    rbx,rax
   14001046f:	je     0x14000fe6e
   140010475:	cmp    BYTE PTR [rsp+0x30],r8b
   14001047a:	jne    0x1400106f1
   140010480:	add    DWORD PTR [rsp+0x70],r11d
   140010485:	cmp    r14d,0x63
   140010489:	mov    r14d,DWORD PTR [rsp+0x34]
   14001048e:	je     0x140010710
   140010494:	test   sil,sil
   140010497:	je     0x1400104a2
   140010499:	mov    WORD PTR [rax],r8w
   14001049d:	jmp    0x140010710
   1400104a2:	mov    BYTE PTR [rax],r8b
   1400104a5:	jmp    0x140010710
   1400104aa:	mov    r12d,DWORD PTR [rsp+0x48]
   1400104af:	mov    ecx,0x1
   1400104b4:	mov    QWORD PTR [rbp-0x70],r8
   1400104b8:	add    r12d,ecx
   1400104bb:	mov    BYTE PTR [rsp+0x38],cl
   1400104bf:	jmp    0x1400104cb
   1400104c1:	mov    r12d,DWORD PTR [rsp+0x48]
   1400104c6:	mov    ecx,0x1
   1400104cb:	cmp    edi,0x2d
   1400104ce:	jne    0x1400104d6
   1400104d0:	mov    BYTE PTR [rsp+0x40],cl
   1400104d4:	jmp    0x1400104df
   1400104d6:	cmp    edi,0x2b
   1400104d9:	jne    0x1400101d9
   1400104df:	sub    esi,ecx
   1400104e1:	mov    DWORD PTR [rsp+0x44],esi
   1400104e5:	jne    0x1400104f2
   1400104e7:	test   eax,eax
   1400104e9:	je     0x1400104f2
   1400104eb:	mov    bl,cl
   1400104ed:	jmp    0x1400101d9
   1400104f2:	add    DWORD PTR [rsp+0x34],ecx
   1400104f6:	mov    rcx,QWORD PTR [rsp+0x68]
   1400104fb:	call   0x14000f7b0
   140010500:	xor    r8d,r8d
   140010503:	mov    edi,eax
   140010505:	mov    DWORD PTR [rsp+0x3c],eax
   140010509:	jmp    0x1400101d9
   14001050e:	lea    rsi,[rsi+rsi*4]
   140010512:	add    rsi,rsi
   140010515:	jmp    0x140010551
   140010517:	movzx  esi,dil
   14001051b:	mov    ecx,esi
   14001051d:	call   0x14000c848
   140010522:	xor    r8d,r8d
   140010525:	test   eax,eax
   140010527:	je     0x14001058f
   140010529:	shl    QWORD PTR [rbp-0x70],0x4
   14001052e:	mov    ecx,esi
   140010530:	movsx  ebx,dil
   140010534:	call   0x14000c7c8
   140010539:	mov    rsi,QWORD PTR [rbp-0x70]
   14001053d:	mov    edi,ebx
   14001053f:	and    edi,0xffffffdf
   140010542:	xor    r8d,r8d
   140010545:	sub    edi,0x7
   140010548:	test   eax,eax
   14001054a:	cmovne edi,ebx
   14001054d:	mov    DWORD PTR [rsp+0x3c],edi
   140010551:	lea    eax,[rdi-0x30]
   140010554:	mov    edx,0x1
   140010559:	add    DWORD PTR [rsp+0x4c],edx
   14001055d:	movsxd rcx,eax
   140010560:	add    rsi,rcx
   140010563:	mov    QWORD PTR [rbp-0x70],rsi
   140010567:	cmp    DWORD PTR [rsp+0x60],r8d
   14001056c:	je     0x140010573
   14001056e:	sub    r13d,edx
   140010571:	je     0x1400105a9
   140010573:	mov    rbx,QWORD PTR [rsp+0x68]
   140010578:	add    DWORD PTR [rsp+0x34],edx
   14001057c:	mov    rcx,rbx
   14001057f:	call   0x14000f7b0
   140010584:	mov    edi,eax
   140010586:	mov    DWORD PTR [rsp+0x3c],eax
   14001058a:	jmp    0x1400101f8
   14001058f:	dec    DWORD PTR [rsp+0x34]
   140010593:	cmp    edi,r15d
   140010596:	je     0x1400105a5
   140010598:	mov    rdx,rbx
   14001059b:	mov    ecx,edi
   14001059d:	call   0x140015ba0
   1400105a2:	xor    r8d,r8d
   1400105a5:	mov    rsi,QWORD PTR [rbp-0x70]
   1400105a9:	cmp    BYTE PTR [rsp+0x40],r8b
   1400105ae:	je     0x1400106b2
   1400105b4:	neg    rsi
   1400105b7:	mov    QWORD PTR [rbp-0x70],rsi
   1400105bb:	jmp    0x1400106b2
   1400105c0:	mov    esi,DWORD PTR [rsp+0x5c]
   1400105c4:	test   bl,bl
   1400105c6:	jne    0x1400106a5
   1400105cc:	mov    r13d,DWORD PTR [rsp+0x44]
   1400105d1:	mov    rbx,QWORD PTR [rsp+0x68]
   1400105d6:	cmp    r14d,0x78
   1400105da:	je     0x140010612
   1400105dc:	cmp    r14d,0x70
   1400105e0:	je     0x140010612
   1400105e2:	movzx  ecx,dil
   1400105e6:	call   0x14000c7c8
   1400105eb:	xor    r8d,r8d
   1400105ee:	test   eax,eax
   1400105f0:	je     0x14001068b
   1400105f6:	cmp    r14d,0x6f
   1400105fa:	jne    0x14001060a
   1400105fc:	cmp    edi,0x38
   1400105ff:	jge    0x14001068b
   140010605:	shl    esi,0x3
   140010608:	jmp    0x140010652
   14001060a:	lea    eax,[rsi+rsi*4]
   14001060d:	lea    esi,[rax+rax*1]
   140010610:	jmp    0x140010652
   140010612:	movzx  esi,dil
   140010616:	mov    ecx,esi
   140010618:	call   0x14000c848
   14001061d:	xor    r8d,r8d
   140010620:	test   eax,eax
   140010622:	je     0x14001068b
   140010624:	mov    eax,DWORD PTR [rsp+0x5c]
   140010628:	mov    ecx,esi
   14001062a:	movsx  ebx,dil
   14001062e:	shl    eax,0x4
   140010631:	mov    DWORD PTR [rsp+0x5c],eax
   140010635:	call   0x14000c7c8
   14001063a:	mov    esi,DWORD PTR [rsp+0x5c]
   14001063e:	mov    edi,ebx
   140010640:	xor    r8d,r8d
   140010643:	and    edi,0xffffffdf
   140010646:	sub    edi,0x7
   140010649:	test   eax,eax
   14001064b:	cmovne edi,ebx
   14001064e:	mov    DWORD PTR [rsp+0x3c],edi
   140010652:	mov    eax,0x1
   140010657:	lea    esi,[rsi+rdi*1-0x30]
   14001065b:	add    DWORD PTR [rsp+0x4c],eax
   14001065f:	mov    DWORD PTR [rsp+0x5c],esi
   140010663:	cmp    DWORD PTR [rsp+0x60],r8d
   140010668:	je     0x14001066f
   14001066a:	sub    r13d,eax
   14001066d:	je     0x1400106a5
   14001066f:	mov    rbx,QWORD PTR [rsp+0x68]
   140010674:	add    DWORD PTR [rsp+0x34],eax
   140010678:	mov    rcx,rbx
   14001067b:	call   0x14000f7b0
   140010680:	mov    edi,eax
   140010682:	mov    DWORD PTR [rsp+0x3c],eax
   140010686:	jmp    0x1400105d6
   14001068b:	dec    DWORD PTR [rsp+0x34]
   14001068f:	cmp    edi,r15d
   140010692:	je     0x1400106a1
   140010694:	mov    rdx,rbx
   140010697:	mov    ecx,edi
   140010699:	call   0x140015ba0
   14001069e:	xor    r8d,r8d
   1400106a1:	mov    esi,DWORD PTR [rsp+0x5c]
   1400106a5:	cmp    BYTE PTR [rsp+0x40],r8b
   1400106aa:	je     0x1400106b2
   1400106ac:	neg    esi
   1400106ae:	mov    DWORD PTR [rsp+0x5c],esi
   1400106b2:	mov    eax,DWORD PTR [rsp+0x4c]
   1400106b6:	cmp    r14d,0x46
   1400106ba:	cmove  eax,r8d
   1400106be:	test   eax,eax
   1400106c0:	je     0x14000fe6e
   1400106c6:	cmp    BYTE PTR [rsp+0x30],r8b
   1400106cb:	jne    0x1400106ec
   1400106cd:	inc    DWORD PTR [rsp+0x70]
   1400106d1:	mov    eax,DWORD PTR [rsp+0x5c]
   1400106d5:	jmp    0x1400106dc
   1400106d7:	mov    r12d,DWORD PTR [rsp+0x48]
   1400106dc:	mov    rcx,QWORD PTR [rbp-0x60]
   1400106e0:	test   r12d,r12d
   1400106e3:	je     0x1400106f8
   1400106e5:	mov    rax,QWORD PTR [rbp-0x70]
   1400106e9:	mov    QWORD PTR [rcx],rax
   1400106ec:	mov    r12,QWORD PTR [rsp+0x50]
   1400106f1:	mov    r14d,DWORD PTR [rsp+0x34]
   1400106f6:	jmp    0x140010710
   1400106f8:	mov    r12,QWORD PTR [rsp+0x50]
   1400106fd:	mov    r14d,DWORD PTR [rsp+0x34]
   140010702:	cmp    BYTE PTR [rsp+0x38],r8b
   140010707:	je     0x14001070d
   140010709:	mov    DWORD PTR [rcx],eax
   14001070b:	jmp    0x140010710
   14001070d:	mov    WORD PTR [rcx],ax
   140010710:	mov    rsi,QWORD PTR [rsp+0x68]
   140010715:	mov    r13d,0x1
   14001071b:	add    BYTE PTR [rsp+0x39],r13b
   140010720:	add    r12,r13
   140010723:	mov    QWORD PTR [rsp+0x50],r12
   140010728:	jmp    0x14001078c
   14001072a:	cmp    BYTE PTR [r12],cl
   14001072e:	jne    0x14001073b
   140010730:	lea    rax,[r12+0x1]
   140010735:	cmp    BYTE PTR [rax],cl
   140010737:	cmove  r12,rax
   14001073b:	add    r14d,r13d
   14001073e:	mov    rcx,rsi
   140010741:	mov    DWORD PTR [rsp+0x34],r14d
   140010746:	call   0x14000f7b0
   14001074b:	mov    edi,eax
   14001074d:	mov    DWORD PTR [rsp+0x3c],eax
   140010751:	movzx  eax,BYTE PTR [r12]
   140010756:	add    r12,r13
   140010759:	mov    QWORD PTR [rsp+0x50],r12
   14001075e:	cmp    eax,edi
   140010760:	jne    0x1400107f2
   140010766:	movzx  ecx,dil
   14001076a:	call   0x140015380
   14001076f:	test   eax,eax
   140010771:	je     0x14001078c
   140010773:	mov    rcx,rsi
   140010776:	call   0x14000f7b0
   14001077b:	movzx  ecx,BYTE PTR [r12]
   140010780:	add    r12,r13
   140010783:	mov    QWORD PTR [rsp+0x50],r12
   140010788:	cmp    ecx,eax
   14001078a:	jne    0x1400107d5
   14001078c:	cmp    edi,r15d
   14001078f:	jne    0x1400107a8
   140010791:	cmp    BYTE PTR [r12],0x25
   140010796:	jne    0x14000fe6e
   14001079c:	cmp    BYTE PTR [r12+0x1],0x6e
   1400107a2:	jne    0x14000fe6e
   1400107a8:	mov    al,BYTE PTR [r12]
   1400107ac:	xor    ebx,ebx
   1400107ae:	test   al,al
   1400107b0:	je     0x14000fe70
   1400107b6:	jmp    0x14000f917
   1400107bb:	cmp    edi,r15d
   1400107be:	je     0x14000fe6e
   1400107c4:	mov    rdx,QWORD PTR [rsp+0x68]
   1400107c9:	mov    ecx,edi
   1400107cb:	call   0x140015ba0
   1400107d0:	jmp    0x14000fe6e
   1400107d5:	cmp    eax,r15d
   1400107d8:	je     0x1400107e4
   1400107da:	mov    rdx,rsi
   1400107dd:	mov    ecx,eax
   1400107df:	call   0x140015ba0
   1400107e4:	cmp    edi,r15d
   1400107e7:	je     0x14000fe6e
   1400107ed:	mov    rdx,rsi
   1400107f0:	jmp    0x1400107c9
   1400107f2:	cmp    edi,r15d
   1400107f5:	je     0x14000fe70
   1400107fb:	mov    rdx,rsi
   1400107fe:	mov    ecx,edi
   140010800:	call   0x140015ba0
   140010805:	jmp    0x14000fe70
   14001080a:	mov    r13d,DWORD PTR [rsp+0x70]
   14001080f:	cmp    BYTE PTR [rbp-0x20],bl
   140010812:	je     0x14001081f
   140010814:	mov    rcx,QWORD PTR [rbp-0x28]
   140010818:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001081f:	mov    eax,r13d
   140010822:	mov    rcx,QWORD PTR [rbp+0x170]
   140010829:	xor    rcx,rsp
   14001082c:	call   0x14000a850
   140010831:	mov    rbx,QWORD PTR [rsp+0x2d0]
   140010839:	add    rsp,0x280
   140010840:	pop    r15
   140010842:	pop    r14
   140010844:	pop    r13
   140010846:	pop    r12
   140010848:	pop    rdi
   140010849:	pop    rsi
   14001084a:	pop    rbp
   14001084b:	ret    
   14001084c:	mov    rax,rsp
   14001084f:	mov    QWORD PTR [rax+0x10],rbx
   140010853:	mov    QWORD PTR [rax+0x18],rbp
   140010857:	mov    QWORD PTR [rax+0x20],rsi
   14001085b:	mov    DWORD PTR [rax+0x8],ecx
   14001085e:	push   rdi
   14001085f:	sub    rsp,0x20
   140010863:	mov    rcx,rdx
   140010866:	mov    rbx,rdx
   140010869:	call   0x140010b28
   14001086e:	mov    ecx,DWORD PTR [rbx+0x18]
   140010871:	movsxd rsi,eax
   140010874:	test   cl,0x82
   140010877:	jne    0x140010890
   140010879:	call   0x14000bdf0
   14001087e:	mov    DWORD PTR [rax],0x9
   140010884:	or     DWORD PTR [rbx+0x18],0x20
   140010888:	or     eax,0xffffffff
   14001088b:	jmp    0x1400109c4
   140010890:	test   cl,0x40
   140010893:	je     0x1400108a2
   140010895:	call   0x14000bdf0
   14001089a:	mov    DWORD PTR [rax],0x22
   1400108a0:	jmp    0x140010884
   1400108a2:	xor    edi,edi
   1400108a4:	test   cl,0x1
   1400108a7:	je     0x1400108c2
   1400108a9:	mov    DWORD PTR [rbx+0x8],edi
   1400108ac:	test   cl,0x10
   1400108af:	je     0x14001093e
   1400108b5:	mov    rax,QWORD PTR [rbx+0x10]
   1400108b9:	and    ecx,0xfffffffe
   1400108bc:	mov    QWORD PTR [rbx],rax
   1400108bf:	mov    DWORD PTR [rbx+0x18],ecx
   1400108c2:	mov    eax,DWORD PTR [rbx+0x18]
   1400108c5:	mov    DWORD PTR [rbx+0x8],edi
   1400108c8:	and    eax,0xffffffef
   1400108cb:	or     eax,0x2
   1400108ce:	mov    DWORD PTR [rbx+0x18],eax
   1400108d1:	test   eax,0x10c
   1400108d6:	jne    0x140010907
   1400108d8:	call   0x14000abc8
   1400108dd:	add    rax,0x30
   1400108e1:	cmp    rbx,rax
   1400108e4:	je     0x1400108f4
   1400108e6:	call   0x14000abc8
   1400108eb:	add    rax,0x60
   1400108ef:	cmp    rbx,rax
   1400108f2:	jne    0x1400108ff
   1400108f4:	mov    ecx,esi
   1400108f6:	call   0x1400152d8
   1400108fb:	test   eax,eax
   1400108fd:	jne    0x140010907
   1400108ff:	mov    rcx,rbx
   140010902:	call   0x140015fa8
   140010907:	test   DWORD PTR [rbx+0x18],0x108
   14001090e:	je     0x1400109a1
   140010914:	mov    ebp,DWORD PTR [rbx]
   140010916:	mov    rdx,QWORD PTR [rbx+0x10]
   14001091a:	sub    ebp,DWORD PTR [rbx+0x10]
   14001091d:	lea    rax,[rdx+0x1]
   140010921:	mov    QWORD PTR [rbx],rax
   140010924:	mov    eax,DWORD PTR [rbx+0x24]
   140010927:	dec    eax
   140010929:	mov    DWORD PTR [rbx+0x8],eax
   14001092c:	test   ebp,ebp
   14001092e:	jle    0x140010949
   140010930:	mov    r8d,ebp
   140010933:	mov    ecx,esi
   140010935:	call   0x1400121bc
   14001093a:	mov    edi,eax
   14001093c:	jmp    0x140010995
   14001093e:	or     ecx,0x20
   140010941:	mov    DWORD PTR [rbx+0x18],ecx
   140010944:	jmp    0x140010888
   140010949:	cmp    esi,0xffffffff
   14001094c:	je     0x140010971
   14001094e:	cmp    esi,0xfffffffe
   140010951:	je     0x140010971
   140010953:	mov    rcx,rsi
   140010956:	mov    rax,rsi
   140010959:	lea    rdx,[rip+0x15120]        # 0x140025a80
   140010960:	and    ecx,0x1f
   140010963:	sar    rax,0x5
   140010967:	imul   rcx,rcx,0x58
   14001096b:	add    rcx,QWORD PTR [rdx+rax*8]
   14001096f:	jmp    0x140010978
   140010971:	lea    rcx,[rip+0x12f38]        # 0x1400238b0
   140010978:	test   BYTE PTR [rcx+0x8],0x20
   14001097c:	je     0x140010995
   14001097e:	xor    edx,edx
   140010980:	mov    ecx,esi
   140010982:	lea    r8d,[rdx+0x2]
   140010986:	call   0x140015ec4
   14001098b:	cmp    rax,0xffffffffffffffff
   14001098f:	je     0x140010884
   140010995:	mov    rcx,QWORD PTR [rbx+0x10]
   140010999:	mov    al,BYTE PTR [rsp+0x30]
   14001099d:	mov    BYTE PTR [rcx],al
   14001099f:	jmp    0x1400109b7
   1400109a1:	mov    ebp,0x1
   1400109a6:	lea    rdx,[rsp+0x30]
   1400109ab:	mov    ecx,esi
   1400109ad:	mov    r8d,ebp
   1400109b0:	call   0x1400121bc
   1400109b5:	mov    edi,eax
   1400109b7:	cmp    edi,ebp
   1400109b9:	jne    0x140010884
   1400109bf:	movzx  eax,BYTE PTR [rsp+0x30]
   1400109c4:	mov    rbx,QWORD PTR [rsp+0x38]
   1400109c9:	mov    rbp,QWORD PTR [rsp+0x40]
   1400109ce:	mov    rsi,QWORD PTR [rsp+0x48]
   1400109d3:	add    rsp,0x20
   1400109d7:	pop    rdi
   1400109d8:	ret    
   1400109d9:	int3   
   1400109da:	int3   
   1400109db:	int3   
   1400109dc:	mov    QWORD PTR [rsp+0x8],rcx
   1400109e1:	sub    rsp,0x88
   1400109e8:	lea    rcx,[rip+0x14a81]        # 0x140025470
   1400109ef:	call   QWORD PTR [rip+0x97b3]        # 0x14001a1a8
   1400109f5:	mov    rax,QWORD PTR [rip+0x14b6c]        # 0x140025568
   1400109fc:	mov    QWORD PTR [rsp+0x58],rax
   140010a01:	xor    r8d,r8d
   140010a04:	lea    rdx,[rsp+0x60]
   140010a09:	mov    rcx,QWORD PTR [rsp+0x58]
   140010a0e:	call   0x1400199c2
   140010a13:	mov    QWORD PTR [rsp+0x50],rax
   140010a18:	cmp    QWORD PTR [rsp+0x50],0x0
   140010a1e:	je     0x140010a61
   140010a20:	mov    QWORD PTR [rsp+0x38],0x0
   140010a29:	lea    rax,[rsp+0x48]
   140010a2e:	mov    QWORD PTR [rsp+0x30],rax
   140010a33:	lea    rax,[rsp+0x40]
   140010a38:	mov    QWORD PTR [rsp+0x28],rax
   140010a3d:	lea    rax,[rip+0x14a2c]        # 0x140025470
   140010a44:	mov    QWORD PTR [rsp+0x20],rax
   140010a49:	mov    r9,QWORD PTR [rsp+0x50]
   140010a4e:	mov    r8,QWORD PTR [rsp+0x58]
   140010a53:	mov    rdx,QWORD PTR [rsp+0x60]
   140010a58:	xor    ecx,ecx
   140010a5a:	call   0x1400199bc
   140010a5f:	jmp    0x140010a83
   140010a61:	mov    rax,QWORD PTR [rsp+0x88]
   140010a69:	mov    QWORD PTR [rip+0x14af8],rax        # 0x140025568
   140010a70:	lea    rax,[rsp+0x88]
   140010a78:	add    rax,0x8
   140010a7c:	mov    QWORD PTR [rip+0x14a85],rax        # 0x140025508
   140010a83:	mov    rax,QWORD PTR [rip+0x14ade]        # 0x140025568
   140010a8a:	mov    QWORD PTR [rip+0x1494f],rax        # 0x1400253e0
   140010a91:	mov    rax,QWORD PTR [rsp+0x90]
   140010a99:	mov    QWORD PTR [rip+0x14a50],rax        # 0x1400254f0
   140010aa0:	mov    DWORD PTR [rip+0x14926],0xc0000409        # 0x1400253d0
   140010aaa:	mov    DWORD PTR [rip+0x14920],0x1        # 0x1400253d4
   140010ab4:	mov    rax,QWORD PTR [rip+0x12605]        # 0x1400230c0
   140010abb:	mov    QWORD PTR [rsp+0x68],rax
   140010ac0:	mov    rax,QWORD PTR [rip+0x12601]        # 0x1400230c8
   140010ac7:	mov    QWORD PTR [rsp+0x70],rax
   140010acc:	call   QWORD PTR [rip+0x96be]        # 0x14001a190
   140010ad2:	mov    DWORD PTR [rip+0x14990],eax        # 0x140025468
   140010ad8:	mov    ecx,0x1
   140010add:	call   0x140014e7c
   140010ae2:	xor    ecx,ecx
   140010ae4:	call   QWORD PTR [rip+0x969e]        # 0x14001a188
   140010aea:	lea    rcx,[rip+0xebdf]        # 0x14001f6d0
   140010af1:	call   QWORD PTR [rip+0x9689]        # 0x14001a180
   140010af7:	cmp    DWORD PTR [rip+0x1496a],0x0        # 0x140025468
   140010afe:	jne    0x140010b0a
   140010b00:	mov    ecx,0x1
   140010b05:	call   0x140014e7c
   140010b0a:	call   QWORD PTR [rip+0x96a8]        # 0x14001a1b8
   140010b10:	mov    edx,0xc0000409
   140010b15:	mov    rcx,rax
   140010b18:	call   QWORD PTR [rip+0x9692]        # 0x14001a1b0
   140010b1e:	add    rsp,0x88
   140010b25:	ret    
   140010b26:	int3   
   140010b27:	int3   
   140010b28:	sub    rsp,0x28
   140010b2c:	test   rcx,rcx
   140010b2f:	jne    0x140010b46
   140010b31:	call   0x14000bdf0
   140010b36:	mov    DWORD PTR [rax],0x16
   140010b3c:	call   0x14000d04c
   140010b41:	or     eax,0xffffffff
   140010b44:	jmp    0x140010b49
   140010b46:	mov    eax,DWORD PTR [rcx+0x1c]
   140010b49:	add    rsp,0x28
   140010b4d:	ret    
   140010b4e:	int3   
   140010b4f:	int3   
   140010b50:	mov    rax,rsp
   140010b53:	mov    QWORD PTR [rax+0x8],rbx
   140010b57:	mov    QWORD PTR [rax+0x10],rbp
   140010b5b:	mov    QWORD PTR [rax+0x18],rsi
   140010b5f:	mov    QWORD PTR [rax+0x20],rdi
   140010b63:	push   r12
   140010b65:	sub    rsp,0x20
   140010b69:	mov    edi,DWORD PTR [rip+0x14dd1]        # 0x140025940
   140010b6f:	xor    ebp,ebp
   140010b71:	mov    rsi,rcx
   140010b74:	or     r12d,0xffffffff
   140010b78:	mov    rcx,rsi
   140010b7b:	call   0x14000b304
   140010b80:	mov    rbx,rax
   140010b83:	test   rax,rax
   140010b86:	jne    0x140010bb0
   140010b88:	test   edi,edi
   140010b8a:	je     0x140010bb0
   140010b8c:	mov    ecx,ebp
   140010b8e:	call   QWORD PTR [rip+0x96cc]        # 0x14001a260
   140010b94:	mov    edi,DWORD PTR [rip+0x14da6]        # 0x140025940
   140010b9a:	lea    r11d,[rbp+0x3e8]
   140010ba1:	cmp    r11d,edi
   140010ba4:	mov    ebp,r11d
   140010ba7:	cmova  ebp,r12d
   140010bab:	cmp    ebp,r12d
   140010bae:	jne    0x140010b78
   140010bb0:	mov    rbp,QWORD PTR [rsp+0x38]
   140010bb5:	mov    rsi,QWORD PTR [rsp+0x40]
   140010bba:	mov    rdi,QWORD PTR [rsp+0x48]
   140010bbf:	mov    rax,rbx
   140010bc2:	mov    rbx,QWORD PTR [rsp+0x30]
   140010bc7:	add    rsp,0x20
   140010bcb:	pop    r12
   140010bcd:	ret    
   140010bce:	int3   
   140010bcf:	int3   
   140010bd0:	mov    rax,rsp
   140010bd3:	mov    QWORD PTR [rax+0x8],rbx
   140010bd7:	mov    QWORD PTR [rax+0x10],rbp
   140010bdb:	mov    QWORD PTR [rax+0x18],rsi
   140010bdf:	mov    QWORD PTR [rax+0x20],rdi
   140010be3:	push   r12
   140010be5:	sub    rsp,0x20
   140010be9:	xor    edi,edi
   140010beb:	mov    rsi,rdx
   140010bee:	mov    rbp,rcx
   140010bf1:	or     r12d,0xffffffff
   140010bf5:	xor    r8d,r8d
   140010bf8:	mov    rdx,rsi
   140010bfb:	mov    rcx,rbp
   140010bfe:	call   0x140015a74
   140010c03:	mov    rbx,rax
   140010c06:	test   rax,rax
   140010c09:	jne    0x140010c35
   140010c0b:	cmp    DWORD PTR [rip+0x14d2f],eax        # 0x140025940
   140010c11:	jbe    0x140010c35
   140010c13:	mov    ecx,edi
   140010c15:	call   QWORD PTR [rip+0x9645]        # 0x14001a260
   140010c1b:	lea    r11d,[rdi+0x3e8]
   140010c22:	cmp    r11d,DWORD PTR [rip+0x14d17]        # 0x140025940
   140010c29:	mov    edi,r11d
   140010c2c:	cmova  edi,r12d
   140010c30:	cmp    edi,r12d
   140010c33:	jne    0x140010bf5
   140010c35:	mov    rbp,QWORD PTR [rsp+0x38]
   140010c3a:	mov    rsi,QWORD PTR [rsp+0x40]
   140010c3f:	mov    rdi,QWORD PTR [rsp+0x48]
   140010c44:	mov    rax,rbx
   140010c47:	mov    rbx,QWORD PTR [rsp+0x30]
   140010c4c:	add    rsp,0x20
   140010c50:	pop    r12
   140010c52:	ret    
   140010c53:	int3   
   140010c54:	mov    rax,rsp
   140010c57:	mov    QWORD PTR [rax+0x8],rbx
   140010c5b:	mov    QWORD PTR [rax+0x10],rbp
   140010c5f:	mov    QWORD PTR [rax+0x18],rsi
   140010c63:	mov    QWORD PTR [rax+0x20],rdi
   140010c67:	push   r12
   140010c69:	sub    rsp,0x20
   140010c6d:	xor    esi,esi
   140010c6f:	mov    rdi,rdx
   140010c72:	mov    rbp,rcx
   140010c75:	or     r12d,0xffffffff
   140010c79:	mov    rdx,rdi
   140010c7c:	mov    rcx,rbp
   140010c7f:	call   0x14000b3bc
   140010c84:	mov    rbx,rax
   140010c87:	test   rax,rax
   140010c8a:	jne    0x140010cbb
   140010c8c:	test   rdi,rdi
   140010c8f:	je     0x140010cbb
   140010c91:	cmp    DWORD PTR [rip+0x14ca9],eax        # 0x140025940
   140010c97:	jbe    0x140010cbb
   140010c99:	mov    ecx,esi
   140010c9b:	call   QWORD PTR [rip+0x95bf]        # 0x14001a260
   140010ca1:	lea    r11d,[rsi+0x3e8]
   140010ca8:	cmp    r11d,DWORD PTR [rip+0x14c91]        # 0x140025940
   140010caf:	mov    esi,r11d
   140010cb2:	cmova  esi,r12d
   140010cb6:	cmp    esi,r12d
   140010cb9:	jne    0x140010c79
   140010cbb:	mov    rbp,QWORD PTR [rsp+0x38]
   140010cc0:	mov    rsi,QWORD PTR [rsp+0x40]
   140010cc5:	mov    rdi,QWORD PTR [rsp+0x48]
   140010cca:	mov    rax,rbx
   140010ccd:	mov    rbx,QWORD PTR [rsp+0x30]
   140010cd2:	add    rsp,0x20
   140010cd6:	pop    r12
   140010cd8:	ret    
   140010cd9:	int3   
   140010cda:	int3   
   140010cdb:	int3   
   140010cdc:	mov    QWORD PTR [rsp+0x8],rbx
   140010ce1:	mov    QWORD PTR [rsp+0x10],rbp
   140010ce6:	mov    QWORD PTR [rsp+0x18],rsi
   140010ceb:	push   rdi
   140010cec:	push   r12
   140010cee:	push   r13
   140010cf0:	sub    rsp,0x20
   140010cf4:	xor    esi,esi
   140010cf6:	mov    rdi,r8
   140010cf9:	mov    rbp,rdx
   140010cfc:	or     r13d,0xffffffff
   140010d00:	mov    r12,rcx
   140010d03:	mov    r8,rdi
   140010d06:	mov    rdx,rbp
   140010d09:	mov    rcx,r12
   140010d0c:	call   0x140016298
   140010d11:	mov    rbx,rax
   140010d14:	test   rax,rax
   140010d17:	jne    0x140010d48
   140010d19:	test   rdi,rdi
   140010d1c:	je     0x140010d48
   140010d1e:	cmp    DWORD PTR [rip+0x14c1c],eax        # 0x140025940
   140010d24:	jbe    0x140010d48
   140010d26:	mov    ecx,esi
   140010d28:	call   QWORD PTR [rip+0x9532]        # 0x14001a260
   140010d2e:	lea    r11d,[rsi+0x3e8]
   140010d35:	cmp    r11d,DWORD PTR [rip+0x14c04]        # 0x140025940
   140010d3c:	mov    esi,r11d
   140010d3f:	cmova  esi,r13d
   140010d43:	cmp    esi,r13d
   140010d46:	jne    0x140010d03
   140010d48:	mov    rbp,QWORD PTR [rsp+0x48]
   140010d4d:	mov    rsi,QWORD PTR [rsp+0x50]
   140010d52:	mov    rax,rbx
   140010d55:	mov    rbx,QWORD PTR [rsp+0x40]
   140010d5a:	add    rsp,0x20
   140010d5e:	pop    r13
   140010d60:	pop    r12
   140010d62:	pop    rdi
   140010d63:	ret    
   140010d64:	mov    QWORD PTR [rsp+0x8],rbx
   140010d69:	mov    QWORD PTR [rsp+0x10],rsi
   140010d6e:	push   rdi
   140010d6f:	sub    rsp,0x30
   140010d73:	xor    edi,edi
   140010d75:	lea    ecx,[rdi+0x1]
   140010d78:	call   0x14000cb58
   140010d7d:	nop
   140010d7e:	lea    ebx,[rdi+0x3]
   140010d81:	mov    DWORD PTR [rsp+0x20],ebx
   140010d85:	cmp    ebx,DWORD PTR [rip+0x15f15]        # 0x140026ca0
   140010d8b:	jge    0x140010df2
   140010d8d:	movsxd rsi,ebx
   140010d90:	mov    rax,QWORD PTR [rip+0x14ef1]        # 0x140025c88
   140010d97:	cmp    QWORD PTR [rax+rsi*8],0x0
   140010d9c:	je     0x140010dee
   140010d9e:	mov    rcx,QWORD PTR [rax+rsi*8]
   140010da2:	test   BYTE PTR [rcx+0x18],0x83
   140010da6:	je     0x140010db8
   140010da8:	call   0x14000ae58
   140010dad:	cmp    eax,0xffffffff
   140010db0:	je     0x140010db8
   140010db2:	inc    edi
   140010db4:	mov    DWORD PTR [rsp+0x24],edi
   140010db8:	cmp    ebx,0x14
   140010dbb:	jl     0x140010dee
   140010dbd:	mov    rax,QWORD PTR [rip+0x14ec4]        # 0x140025c88
   140010dc4:	mov    rcx,QWORD PTR [rax+rsi*8]
   140010dc8:	add    rcx,0x30
   140010dcc:	call   QWORD PTR [rip+0x9396]        # 0x14001a168
   140010dd2:	mov    rcx,QWORD PTR [rip+0x14eaf]        # 0x140025c88
   140010dd9:	mov    rcx,QWORD PTR [rcx+rsi*8]
   140010ddd:	call   0x14000b490
   140010de2:	mov    r11,QWORD PTR [rip+0x14e9f]        # 0x140025c88
   140010de9:	and    QWORD PTR [r11+rsi*8],0x0
   140010dee:	inc    ebx
   140010df0:	jmp    0x140010d81
   140010df2:	mov    ecx,0x1
   140010df7:	call   0x14000ca58
   140010dfc:	mov    eax,edi
   140010dfe:	mov    rbx,QWORD PTR [rsp+0x40]
   140010e03:	mov    rsi,QWORD PTR [rsp+0x48]
   140010e08:	add    rsp,0x30
   140010e0c:	pop    rdi
   140010e0d:	ret    
   140010e0e:	int3   
   140010e0f:	int3   
   140010e10:	mov    QWORD PTR [rsp+0x8],rbx
   140010e15:	push   rdi
   140010e16:	sub    rsp,0x20
   140010e1a:	movsxd rdi,ecx
   140010e1d:	mov    ecx,edi
   140010e1f:	call   0x140011710
   140010e24:	cmp    rax,0xffffffffffffffff
   140010e28:	je     0x140010e83
   140010e2a:	mov    rax,QWORD PTR [rip+0x14c4f]        # 0x140025a80
   140010e31:	mov    ecx,0x2
   140010e36:	cmp    edi,0x1
   140010e39:	jne    0x140010e44
   140010e3b:	test   BYTE PTR [rax+0xb8],dil
   140010e42:	jne    0x140010e4e
   140010e44:	cmp    edi,ecx
   140010e46:	jne    0x140010e65
   140010e48:	test   BYTE PTR [rax+0x60],0x1
   140010e4c:	je     0x140010e65
   140010e4e:	call   0x140011710
   140010e53:	mov    ecx,0x1
   140010e58:	mov    rbx,rax
   140010e5b:	call   0x140011710
   140010e60:	cmp    rax,rbx
   140010e63:	je     0x140010e83
   140010e65:	mov    ecx,edi
   140010e67:	call   0x140011710
   140010e6c:	mov    rcx,rax
   140010e6f:	call   QWORD PTR [rip+0x9203]        # 0x14001a078
   140010e75:	test   eax,eax
   140010e77:	jne    0x140010e83
   140010e79:	call   QWORD PTR [rip+0x91f1]        # 0x14001a070
   140010e7f:	mov    ebx,eax
   140010e81:	jmp    0x140010e85
   140010e83:	xor    ebx,ebx
   140010e85:	mov    ecx,edi
   140010e87:	call   0x140011664
   140010e8c:	mov    r11,rdi
   140010e8f:	mov    rcx,rdi
   140010e92:	sar    rcx,0x5
   140010e96:	and    r11d,0x1f
   140010e9a:	lea    rdx,[rip+0x14bdf]        # 0x140025a80
   140010ea1:	mov    rcx,QWORD PTR [rdx+rcx*8]
   140010ea5:	imul   r11,r11,0x58
   140010ea9:	mov    BYTE PTR [rcx+r11*1+0x8],0x0
   140010eaf:	test   ebx,ebx
   140010eb1:	je     0x140010ebf
   140010eb3:	mov    ecx,ebx
   140010eb5:	call   0x14000be30
   140010eba:	or     eax,0xffffffff
   140010ebd:	jmp    0x140010ec1
   140010ebf:	xor    eax,eax
   140010ec1:	mov    rbx,QWORD PTR [rsp+0x30]
   140010ec6:	add    rsp,0x20
   140010eca:	pop    rdi
   140010ecb:	ret    
   140010ecc:	mov    QWORD PTR [rsp+0x18],rbx
   140010ed1:	mov    DWORD PTR [rsp+0x8],ecx
   140010ed5:	push   rsi
   140010ed6:	push   rdi
   140010ed7:	push   r12
   140010ed9:	sub    rsp,0x20
   140010edd:	movsxd rbx,ecx
   140010ee0:	cmp    ebx,0xfffffffe
   140010ee3:	jne    0x140010efd
   140010ee5:	call   0x14000be10
   140010eea:	and    DWORD PTR [rax],0x0
   140010eed:	call   0x14000bdf0
   140010ef2:	mov    DWORD PTR [rax],0x9
   140010ef8:	jmp    0x140010f7e
   140010efd:	test   ecx,ecx
   140010eff:	js     0x140010f66
   140010f01:	cmp    ebx,DWORD PTR [rip+0x14b65]        # 0x140025a6c
   140010f07:	jae    0x140010f66
   140010f09:	mov    rdi,rbx
   140010f0c:	mov    rsi,rbx
   140010f0f:	sar    rsi,0x5
   140010f13:	lea    r12,[rip+0x14b66]        # 0x140025a80
   140010f1a:	and    edi,0x1f
   140010f1d:	imul   rdi,rdi,0x58
   140010f21:	mov    rax,QWORD PTR [r12+rsi*8]
   140010f25:	movsx  ecx,BYTE PTR [rax+rdi*1+0x8]
   140010f2a:	and    ecx,0x1
   140010f2d:	je     0x140010f66
   140010f2f:	mov    ecx,ebx
   140010f31:	call   0x140011784
   140010f36:	nop
   140010f37:	mov    rax,QWORD PTR [r12+rsi*8]
   140010f3b:	test   BYTE PTR [rax+rdi*1+0x8],0x1
   140010f40:	je     0x140010f4d
   140010f42:	mov    ecx,ebx
   140010f44:	call   0x140010e10
   140010f49:	mov    edi,eax
   140010f4b:	jmp    0x140010f5b
   140010f4d:	call   0x14000bdf0
   140010f52:	mov    DWORD PTR [rax],0x9
   140010f58:	or     edi,0xffffffff
   140010f5b:	mov    ecx,ebx
   140010f5d:	call   0x14001182c
   140010f62:	mov    eax,edi
   140010f64:	jmp    0x140010f81
   140010f66:	call   0x14000be10
   140010f6b:	and    DWORD PTR [rax],0x0
   140010f6e:	call   0x14000bdf0
   140010f73:	mov    DWORD PTR [rax],0x9
   140010f79:	call   0x14000d04c
   140010f7e:	or     eax,0xffffffff
   140010f81:	mov    rbx,QWORD PTR [rsp+0x50]
   140010f86:	add    rsp,0x20
   140010f8a:	pop    r12
   140010f8c:	pop    rdi
   140010f8d:	pop    rsi
   140010f8e:	ret    
   140010f8f:	int3   
   140010f90:	rex push rbx
   140010f92:	sub    rsp,0x20
   140010f96:	test   BYTE PTR [rcx+0x18],0x83
   140010f9a:	mov    rbx,rcx
   140010f9d:	je     0x140010fc1
   140010f9f:	test   BYTE PTR [rcx+0x18],0x8
   140010fa3:	je     0x140010fc1
   140010fa5:	mov    rcx,QWORD PTR [rcx+0x10]
   140010fa9:	call   0x14000b490
   140010fae:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   140010fb5:	xor    eax,eax
   140010fb7:	mov    QWORD PTR [rbx],rax
   140010fba:	mov    QWORD PTR [rbx+0x10],rax
   140010fbe:	mov    DWORD PTR [rbx+0x8],eax
   140010fc1:	add    rsp,0x20
   140010fc5:	pop    rbx
   140010fc6:	ret    
   140010fc7:	int3   
   140010fc8:	mov    QWORD PTR [rsp+0x8],rbx
   140010fcd:	mov    QWORD PTR [rsp+0x10],rsi
   140010fd2:	push   rdi
   140010fd3:	sub    rsp,0x20
   140010fd7:	mov    rdi,rcx
   140010fda:	test   rcx,rcx
   140010fdd:	jne    0x140010ff4
   140010fdf:	call   0x14000bdf0
   140010fe4:	mov    DWORD PTR [rax],0x16
   140010fea:	call   0x14000d04c
   140010fef:	jmp    0x140011107
   140010ff4:	mov    eax,DWORD PTR [rcx+0x18]
   140010ff7:	test   al,0x83
   140010ff9:	je     0x140011107
   140010fff:	test   al,0x40
   140011001:	jne    0x140011107
   140011007:	test   al,0x2
   140011009:	je     0x140011016
   14001100b:	or     eax,0x20
   14001100e:	mov    DWORD PTR [rcx+0x18],eax
   140011011:	jmp    0x140011107
   140011016:	or     eax,0x1
   140011019:	mov    DWORD PTR [rcx+0x18],eax
   14001101c:	test   eax,0x10c
   140011021:	jne    0x14001102a
   140011023:	call   0x140015fa8
   140011028:	jmp    0x140011031
   14001102a:	mov    rax,QWORD PTR [rcx+0x10]
   14001102e:	mov    QWORD PTR [rcx],rax
   140011031:	mov    rcx,rdi
   140011034:	call   0x140010b28
   140011039:	mov    r8d,DWORD PTR [rdi+0x24]
   14001103d:	mov    rdx,QWORD PTR [rdi+0x10]
   140011041:	mov    ecx,eax
   140011043:	call   0x140016a44
   140011048:	mov    DWORD PTR [rdi+0x8],eax
   14001104b:	test   eax,eax
   14001104d:	je     0x1400110f6
   140011053:	cmp    eax,0xffffffff
   140011056:	je     0x1400110f6
   14001105c:	test   BYTE PTR [rdi+0x18],0x82
   140011060:	jne    0x1400110c1
   140011062:	mov    rcx,rdi
   140011065:	call   0x140010b28
   14001106a:	cmp    eax,0xffffffff
   14001106d:	je     0x1400110ab
   14001106f:	mov    rcx,rdi
   140011072:	call   0x140010b28
   140011077:	cmp    eax,0xfffffffe
   14001107a:	je     0x1400110ab
   14001107c:	mov    rcx,rdi
   14001107f:	call   0x140010b28
   140011084:	mov    rcx,rdi
   140011087:	lea    rsi,[rip+0x149f2]        # 0x140025a80
   14001108e:	movsxd rbx,eax
   140011091:	sar    rbx,0x5
   140011095:	call   0x140010b28
   14001109a:	mov    r11d,eax
   14001109d:	and    r11d,0x1f
   1400110a1:	imul   r11,r11,0x58
   1400110a5:	add    r11,QWORD PTR [rsi+rbx*8]
   1400110a9:	jmp    0x1400110b2
   1400110ab:	lea    r11,[rip+0x127fe]        # 0x1400238b0
   1400110b2:	mov    al,BYTE PTR [r11+0x8]
   1400110b6:	and    al,0x82
   1400110b8:	cmp    al,0x82
   1400110ba:	jne    0x1400110c1
   1400110bc:	bts    DWORD PTR [rdi+0x18],0xd
   1400110c1:	cmp    DWORD PTR [rdi+0x24],0x200
   1400110c8:	jne    0x1400110e5
   1400110ca:	test   BYTE PTR [rdi+0x18],0x8
   1400110ce:	je     0x1400110e5
   1400110d0:	mov    eax,DWORD PTR [rdi+0x24]
   1400110d3:	test   DWORD PTR [rdi+0x18],0x400
   1400110da:	mov    ecx,0x1000
   1400110df:	cmove  eax,ecx
   1400110e2:	mov    DWORD PTR [rdi+0x24],eax
   1400110e5:	mov    rcx,QWORD PTR [rdi]
   1400110e8:	dec    DWORD PTR [rdi+0x8]
   1400110eb:	movzx  eax,BYTE PTR [rcx]
   1400110ee:	inc    rcx
   1400110f1:	mov    QWORD PTR [rdi],rcx
   1400110f4:	jmp    0x14001110a
   1400110f6:	neg    eax
   1400110f8:	sbb    eax,eax
   1400110fa:	and    eax,0x10
   1400110fd:	add    eax,0x10
   140011100:	or     DWORD PTR [rdi+0x18],eax
   140011103:	and    DWORD PTR [rdi+0x8],0x0
   140011107:	or     eax,0xffffffff
   14001110a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001110f:	mov    rsi,QWORD PTR [rsp+0x38]
   140011114:	add    rsp,0x20
   140011118:	pop    rdi
   140011119:	ret    
   14001111a:	int3   
   14001111b:	int3   
   14001111c:	mov    QWORD PTR [rsp+0x8],rbx
   140011121:	mov    QWORD PTR [rsp+0x18],rbp
   140011126:	push   rsi
   140011127:	push   rdi
   140011128:	push   r12
   14001112a:	push   r13
   14001112c:	push   r15
   14001112e:	sub    rsp,0x30
   140011132:	mov    ebp,DWORD PTR [rip+0x14860]        # 0x140025998
   140011138:	mov    rsi,r9
   14001113b:	xor    r9d,r9d
   14001113e:	xor    r10d,r10d
   140011141:	xor    r11d,r11d
   140011144:	cmp    BYTE PTR [rdx],0x20
   140011147:	lea    r15d,[r9+0x1]
   14001114b:	mov    r12d,r8d
   14001114e:	mov    rbx,rdx
   140011151:	mov    r13,rcx
   140011154:	jne    0x14001115e
   140011156:	add    rbx,r15
   140011159:	cmp    BYTE PTR [rbx],0x20
   14001115c:	je     0x140011156
   14001115e:	cmp    BYTE PTR [rbx],0x61
   140011161:	je     0x140011192
   140011163:	cmp    BYTE PTR [rbx],0x72
   140011166:	je     0x14001118b
   140011168:	cmp    BYTE PTR [rbx],0x77
   14001116b:	je     0x140011184
   14001116d:	call   0x14000bdf0
   140011172:	mov    DWORD PTR [rax],0x16
   140011178:	call   0x14000d04c
   14001117d:	xor    eax,eax
   14001117f:	jmp    0x1400113bb
   140011184:	mov    edi,0x301
   140011189:	jmp    0x140011197
   14001118b:	xor    edi,edi
   14001118d:	or     ebp,r15d
   140011190:	jmp    0x14001119a
   140011192:	mov    edi,0x109
   140011197:	or     ebp,0x2
   14001119a:	add    rbx,r15
   14001119d:	mov    edx,r15d
   1400111a0:	mov    al,BYTE PTR [rbx]
   1400111a2:	test   al,al
   1400111a4:	je     0x140011365
   1400111aa:	mov    r8d,0x4000
   1400111b0:	test   edx,edx
   1400111b2:	je     0x1400112a6
   1400111b8:	movsx  ecx,al
   1400111bb:	cmp    ecx,0x53
   1400111be:	jg     0x140011239
   1400111c0:	je     0x14001122c
   1400111c2:	sub    ecx,0x20
   1400111c5:	je     0x140011299
   1400111cb:	sub    ecx,0xb
   1400111ce:	je     0x140011217
   1400111d0:	dec    ecx
   1400111d2:	je     0x140011212
   1400111d4:	sub    ecx,0x18
   1400111d7:	je     0x140011200
   1400111d9:	sub    ecx,0xa
   1400111dc:	je     0x1400111f7
   1400111de:	cmp    ecx,0x4
   1400111e1:	jne    0x14001116d
   1400111e3:	test   r10d,r10d
   1400111e6:	jne    0x140011291
   1400111ec:	mov    r10d,r15d
   1400111ef:	or     edi,0x10
   1400111f2:	jmp    0x140011299
   1400111f7:	bts    edi,0x7
   1400111fb:	jmp    0x140011299
   140011200:	test   dil,0x40
   140011204:	jne    0x140011291
   14001120a:	or     edi,0x40
   14001120d:	jmp    0x140011299
   140011212:	mov    r11d,r15d
   140011215:	jmp    0x140011291
   140011217:	test   dil,0x2
   14001121b:	jne    0x140011291
   14001121d:	and    edi,0xfffffffe
   140011220:	and    ebp,0xfffffffc
   140011223:	or     edi,0x2
   140011226:	bts    ebp,0x7
   14001122a:	jmp    0x140011299
   14001122c:	test   r10d,r10d
   14001122f:	jne    0x140011291
   140011231:	mov    r10d,r15d
   140011234:	or     edi,0x20
   140011237:	jmp    0x140011299
   140011239:	sub    ecx,0x54
   14001123c:	je     0x14001128b
   14001123e:	sub    ecx,0xe
   140011241:	je     0x14001127d
   140011243:	dec    ecx
   140011245:	je     0x140011270
   140011247:	sub    ecx,0xb
   14001124a:	je     0x140011262
   14001124c:	cmp    ecx,0x6
   14001124f:	jne    0x14001116d
   140011255:	test   edi,0xc000
   14001125b:	jne    0x140011291
   14001125d:	or     edi,r8d
   140011260:	jmp    0x140011299
   140011262:	test   r9d,r9d
   140011265:	jne    0x140011291
   140011267:	mov    r9d,r15d
   14001126a:	btr    ebp,0xe
   14001126e:	jmp    0x140011299
   140011270:	test   r9d,r9d
   140011273:	jne    0x140011291
   140011275:	mov    r9d,r15d
   140011278:	or     ebp,r8d
   14001127b:	jmp    0x140011299
   14001127d:	test   edi,0xc000
   140011283:	jne    0x140011291
   140011285:	bts    edi,0xf
   140011289:	jmp    0x140011299
   14001128b:	bt     edi,0xc
   14001128f:	jae    0x140011295
   140011291:	xor    edx,edx
   140011293:	jmp    0x140011299
   140011295:	bts    edi,0xc
   140011299:	add    rbx,r15
   14001129c:	mov    al,BYTE PTR [rbx]
   14001129e:	test   al,al
   1400112a0:	jne    0x1400111b0
   1400112a6:	test   r11d,r11d
   1400112a9:	je     0x140011365
   1400112af:	jmp    0x1400112b4
   1400112b1:	add    rbx,r15
   1400112b4:	cmp    BYTE PTR [rbx],0x20
   1400112b7:	je     0x1400112b1
   1400112b9:	lea    rcx,[rip+0xe480]        # 0x14001f740
   1400112c0:	mov    r8d,0x3
   1400112c6:	mov    rdx,rbx
   1400112c9:	call   0x140016eb0
   1400112ce:	test   eax,eax
   1400112d0:	jne    0x14001116d
   1400112d6:	add    rbx,0x3
   1400112da:	jmp    0x1400112df
   1400112dc:	add    rbx,r15
   1400112df:	cmp    BYTE PTR [rbx],0x20
   1400112e2:	je     0x1400112dc
   1400112e4:	cmp    BYTE PTR [rbx],0x3d
   1400112e7:	jne    0x14001116d
   1400112ed:	add    rbx,r15
   1400112f0:	cmp    BYTE PTR [rbx],0x20
   1400112f3:	je     0x1400112ed
   1400112f5:	lea    rdx,[rip+0xe448]        # 0x14001f744
   1400112fc:	mov    r8d,0x5
   140011302:	mov    rcx,rbx
   140011305:	call   0x140016d48
   14001130a:	test   eax,eax
   14001130c:	jne    0x140011318
   14001130e:	add    rbx,0x5
   140011312:	bts    edi,0x12
   140011316:	jmp    0x140011365
   140011318:	lea    rdx,[rip+0xe431]        # 0x14001f750
   14001131f:	mov    r8d,0x8
   140011325:	mov    rcx,rbx
   140011328:	call   0x140016d48
   14001132d:	test   eax,eax
   14001132f:	jne    0x14001133b
   140011331:	add    rbx,0x8
   140011335:	bts    edi,0x11
   140011339:	jmp    0x140011365
   14001133b:	lea    rdx,[rip+0xe41e]        # 0x14001f760
   140011342:	mov    r8d,0x7
   140011348:	mov    rcx,rbx
   14001134b:	call   0x140016d48
   140011350:	test   eax,eax
   140011352:	jne    0x14001116d
   140011358:	add    rbx,0x7
   14001135c:	bts    edi,0x10
   140011360:	jmp    0x140011365
   140011362:	add    rbx,r15
   140011365:	cmp    BYTE PTR [rbx],0x20
   140011368:	je     0x140011362
   14001136a:	cmp    BYTE PTR [rbx],0x0
   14001136d:	jne    0x14001116d
   140011373:	lea    rcx,[rsp+0x68]
   140011378:	mov    r9d,r12d
   14001137b:	mov    r8d,edi
   14001137e:	mov    rdx,r13
   140011381:	mov    DWORD PTR [rsp+0x20],0x180
   140011389:	call   0x1400131b8
   14001138e:	test   eax,eax
   140011390:	jne    0x14001117d
   140011396:	add    DWORD PTR [rip+0x13657],r15d        # 0x1400249f4
   14001139d:	and    DWORD PTR [rsi+0x8],eax
   1400113a0:	mov    eax,DWORD PTR [rsp+0x68]
   1400113a4:	and    QWORD PTR [rsi],0x0
   1400113a8:	and    QWORD PTR [rsi+0x10],0x0
   1400113ad:	and    QWORD PTR [rsi+0x28],0x0
   1400113b2:	mov    DWORD PTR [rsi+0x1c],eax
   1400113b5:	mov    DWORD PTR [rsi+0x18],ebp
   1400113b8:	mov    rax,rsi
   1400113bb:	mov    rbx,QWORD PTR [rsp+0x60]
   1400113c0:	mov    rbp,QWORD PTR [rsp+0x70]
   1400113c5:	add    rsp,0x30
   1400113c9:	pop    r15
   1400113cb:	pop    r13
   1400113cd:	pop    r12
   1400113cf:	pop    rdi
   1400113d0:	pop    rsi
   1400113d1:	ret    
   1400113d2:	int3   
   1400113d3:	int3   
   1400113d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400113d9:	mov    QWORD PTR [rsp+0x10],rsi
   1400113de:	push   rdi
   1400113df:	sub    rsp,0x30
   1400113e3:	xor    ebx,ebx
   1400113e5:	lea    ecx,[rbx+0x1]
   1400113e8:	call   0x14000cb58
   1400113ed:	nop
   1400113ee:	xor    edi,edi
   1400113f0:	mov    DWORD PTR [rsp+0x20],edi
   1400113f4:	cmp    edi,DWORD PTR [rip+0x158a6]        # 0x140026ca0
   1400113fa:	jge    0x1400114ec
   140011400:	movsxd rsi,edi
   140011403:	mov    rax,QWORD PTR [rip+0x1487e]        # 0x140025c88
   14001140a:	cmp    QWORD PTR [rax+rsi*8],0x0
   14001140f:	je     0x140011477
   140011411:	mov    rax,QWORD PTR [rax+rsi*8]
   140011415:	test   BYTE PTR [rax+0x18],0x83
   140011419:	jne    0x140011470
   14001141b:	test   DWORD PTR [rax+0x18],0x8000
   140011422:	jne    0x140011470
   140011424:	lea    eax,[rdi-0x3]
   140011427:	cmp    eax,0x10
   14001142a:	ja     0x14001143c
   14001142c:	lea    ecx,[rdi+0x10]
   14001142f:	call   0x14000ca70
   140011434:	test   eax,eax
   140011436:	je     0x1400114ec
   14001143c:	mov    rdx,QWORD PTR [rip+0x14845]        # 0x140025c88
   140011443:	mov    rdx,QWORD PTR [rdx+rsi*8]
   140011447:	mov    ecx,edi
   140011449:	call   0x14000ad3c
   14001144e:	mov    r11,QWORD PTR [rip+0x14833]        # 0x140025c88
   140011455:	mov    rax,QWORD PTR [r11+rsi*8]
   140011459:	test   BYTE PTR [rax+0x18],0x83
   14001145d:	je     0x14001146b
   14001145f:	mov    rdx,rax
   140011462:	mov    ecx,edi
   140011464:	call   0x14000adbc
   140011469:	jmp    0x140011470
   14001146b:	mov    rbx,rax
   14001146e:	jmp    0x1400114ec
   140011470:	inc    edi
   140011472:	jmp    0x1400113f0
   140011477:	mov    ecx,0x58
   14001147c:	call   0x140010b50
   140011481:	mov    rcx,rax
   140011484:	movsxd rdi,edi
   140011487:	mov    rax,QWORD PTR [rip+0x147fa]        # 0x140025c88
   14001148e:	mov    QWORD PTR [rax+rdi*8],rcx
   140011492:	test   rcx,rcx
   140011495:	je     0x1400114ec
   140011497:	add    rcx,0x30
   14001149b:	mov    edx,0xfa0
   1400114a0:	call   QWORD PTR [rip+0x8cba]        # 0x14001a160
   1400114a6:	test   eax,eax
   1400114a8:	jne    0x1400114c8
   1400114aa:	mov    rcx,QWORD PTR [rip+0x147d7]        # 0x140025c88
   1400114b1:	mov    rcx,QWORD PTR [rcx+rdi*8]
   1400114b5:	call   0x14000b490
   1400114ba:	mov    r11,QWORD PTR [rip+0x147c7]        # 0x140025c88
   1400114c1:	and    QWORD PTR [r11+rdi*8],0x0
   1400114c6:	jmp    0x1400114ec
   1400114c8:	mov    rax,QWORD PTR [rip+0x147b9]        # 0x140025c88
   1400114cf:	mov    rcx,QWORD PTR [rax+rdi*8]
   1400114d3:	add    rcx,0x30
   1400114d7:	call   QWORD PTR [rip+0x8c13]        # 0x14001a0f0
   1400114dd:	mov    r11,QWORD PTR [rip+0x147a4]        # 0x140025c88
   1400114e4:	mov    rbx,QWORD PTR [r11+rdi*8]
   1400114e8:	and    DWORD PTR [rbx+0x18],0x0
   1400114ec:	test   rbx,rbx
   1400114ef:	je     0x14001150e
   1400114f1:	and    DWORD PTR [rbx+0x18],0x8000
   1400114f8:	and    DWORD PTR [rbx+0x8],0x0
   1400114fc:	and    QWORD PTR [rbx+0x10],0x0
   140011501:	and    QWORD PTR [rbx],0x0
   140011505:	and    QWORD PTR [rbx+0x28],0x0
   14001150a:	or     DWORD PTR [rbx+0x1c],0xffffffff
   14001150e:	mov    ecx,0x1
   140011513:	call   0x14000ca58
   140011518:	mov    rax,rbx
   14001151b:	mov    rbx,QWORD PTR [rsp+0x40]
   140011520:	mov    rsi,QWORD PTR [rsp+0x48]
   140011525:	add    rsp,0x30
   140011529:	pop    rdi
   14001152a:	ret    
   14001152b:	int3   
   14001152c:	int3   
   14001152d:	int3   
   14001152e:	int3   
   14001152f:	int3   
   140011530:	int3   
   140011531:	int3   
   140011532:	int3   
   140011533:	int3   
   140011534:	int3   
   140011535:	int3   
   140011536:	data16 nop WORD PTR [rax+rax*1+0x0]
   140011540:	sub    rsp,0x4d8
   140011547:	xor    r8,r8
   14001154a:	xor    r9,r9
   14001154d:	mov    QWORD PTR [rsp+0x20],rsp
   140011552:	mov    QWORD PTR [rsp+0x28],r8
   140011557:	call   0x1400199c8
   14001155c:	add    rsp,0x4d8
   140011563:	ret    
   140011564:	int3   
   140011565:	int3   
   140011566:	int3   
   140011567:	int3   
   140011568:	int3   
   140011569:	int3   
   14001156a:	nop    WORD PTR [rax+rax*1+0x0]
   140011570:	mov    QWORD PTR [rsp+0x8],rcx
   140011575:	mov    QWORD PTR [rsp+0x18],rdx
   14001157a:	mov    DWORD PTR [rsp+0x10],r8d
   14001157f:	mov    r9,0x19930520
   140011586:	jmp    0x140011590
   140011588:	int3   
   140011589:	int3   
   14001158a:	int3   
   14001158b:	int3   
   14001158c:	int3   
   14001158d:	int3   
   14001158e:	xchg   ax,ax
   140011590:	ret    
   140011591:	int3   
   140011592:	int3   
   140011593:	int3   
   140011594:	int3   
   140011595:	int3   
   140011596:	int3   
   140011597:	nop    WORD PTR [rax+rax*1+0x0]
   1400115a0:	ret    
   1400115a1:	int3   
   1400115a2:	int3   
   1400115a3:	int3   
   1400115a4:	lea    rax,[rip+0x124c5]        # 0x140023a70
   1400115ab:	ret    
   1400115ac:	lea    rax,[rip+0x1235d]        # 0x140023910
   1400115b3:	ret    
   1400115b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400115b9:	mov    QWORD PTR [rsp+0x10],rbp
   1400115be:	mov    QWORD PTR [rsp+0x18],rsi
   1400115c3:	push   rdi
   1400115c4:	sub    rsp,0x20
   1400115c8:	mov    rbx,rdx
   1400115cb:	test   ecx,ecx
   1400115cd:	js     0x140011636
   1400115cf:	cmp    ecx,DWORD PTR [rip+0x14497]        # 0x140025a6c
   1400115d5:	jae    0x140011636
   1400115d7:	movsxd rdi,ecx
   1400115da:	lea    rbp,[rip+0x1449f]        # 0x140025a80
   1400115e1:	mov    rsi,rdi
   1400115e4:	and    edi,0x1f
   1400115e7:	sar    rsi,0x5
   1400115eb:	imul   rdi,rdi,0x58
   1400115ef:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   1400115f4:	cmp    QWORD PTR [rdi+rax*1],0xffffffffffffffff
   1400115f9:	jne    0x140011636
   1400115fb:	cmp    DWORD PTR [rip+0x11ab6],0x1        # 0x1400230b8
   140011602:	jne    0x140011629
   140011604:	test   ecx,ecx
   140011606:	je     0x14001161e
   140011608:	dec    ecx
   14001160a:	je     0x140011617
   14001160c:	dec    ecx
   14001160e:	jne    0x140011629
   140011610:	mov    ecx,0xfffffff4
   140011615:	jmp    0x140011623
   140011617:	mov    ecx,0xfffffff5
   14001161c:	jmp    0x140011623
   14001161e:	mov    ecx,0xfffffff6
   140011623:	call   QWORD PTR [rip+0x8c3f]        # 0x14001a268
   140011629:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   14001162e:	mov    QWORD PTR [rdi+rax*1],rbx
   140011632:	xor    eax,eax
   140011634:	jmp    0x14001164c
   140011636:	call   0x14000bdf0
   14001163b:	mov    DWORD PTR [rax],0x9
   140011641:	call   0x14000be10
   140011646:	and    DWORD PTR [rax],0x0
   140011649:	or     eax,0xffffffff
   14001164c:	mov    rbx,QWORD PTR [rsp+0x30]
   140011651:	mov    rbp,QWORD PTR [rsp+0x38]
   140011656:	mov    rsi,QWORD PTR [rsp+0x40]
   14001165b:	add    rsp,0x20
   14001165f:	pop    rdi
   140011660:	ret    
   140011661:	int3   
   140011662:	int3   
   140011663:	int3   
   140011664:	mov    QWORD PTR [rsp+0x8],rbx
   140011669:	mov    QWORD PTR [rsp+0x10],rbp
   14001166e:	push   rdi
   14001166f:	sub    rsp,0x20
   140011673:	test   ecx,ecx
   140011675:	js     0x1400116e8
   140011677:	cmp    ecx,DWORD PTR [rip+0x143ef]        # 0x140025a6c
   14001167d:	jae    0x1400116e8
   14001167f:	movsxd rbx,ecx
   140011682:	lea    rbp,[rip+0x143f7]        # 0x140025a80
   140011689:	mov    rdi,rbx
   14001168c:	and    ebx,0x1f
   14001168f:	sar    rdi,0x5
   140011693:	imul   rbx,rbx,0x58
   140011697:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14001169c:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   1400116a1:	je     0x1400116e8
   1400116a3:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   1400116a8:	je     0x1400116e8
   1400116aa:	cmp    DWORD PTR [rip+0x11a07],0x1        # 0x1400230b8
   1400116b1:	jne    0x1400116da
   1400116b3:	test   ecx,ecx
   1400116b5:	je     0x1400116cd
   1400116b7:	dec    ecx
   1400116b9:	je     0x1400116c6
   1400116bb:	dec    ecx
   1400116bd:	jne    0x1400116da
   1400116bf:	mov    ecx,0xfffffff4
   1400116c4:	jmp    0x1400116d2
   1400116c6:	mov    ecx,0xfffffff5
   1400116cb:	jmp    0x1400116d2
   1400116cd:	mov    ecx,0xfffffff6
   1400116d2:	xor    edx,edx
   1400116d4:	call   QWORD PTR [rip+0x8b8e]        # 0x14001a268
   1400116da:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   1400116df:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   1400116e4:	xor    eax,eax
   1400116e6:	jmp    0x1400116fe
   1400116e8:	call   0x14000bdf0
   1400116ed:	mov    DWORD PTR [rax],0x9
   1400116f3:	call   0x14000be10
   1400116f8:	and    DWORD PTR [rax],0x0
   1400116fb:	or     eax,0xffffffff
   1400116fe:	mov    rbx,QWORD PTR [rsp+0x30]
   140011703:	mov    rbp,QWORD PTR [rsp+0x38]
   140011708:	add    rsp,0x20
   14001170c:	pop    rdi
   14001170d:	ret    
   14001170e:	int3   
   14001170f:	int3   
   140011710:	sub    rsp,0x28
   140011714:	cmp    ecx,0xfffffffe
   140011717:	jne    0x14001172e
   140011719:	call   0x14000be10
   14001171e:	and    DWORD PTR [rax],0x0
   140011721:	call   0x14000bdf0
   140011726:	mov    DWORD PTR [rax],0x9
   14001172c:	jmp    0x14001177b
   14001172e:	test   ecx,ecx
   140011730:	js     0x140011763
   140011732:	cmp    ecx,DWORD PTR [rip+0x14334]        # 0x140025a6c
   140011738:	jae    0x140011763
   14001173a:	movsxd rdx,ecx
   14001173d:	lea    rcx,[rip+0x1433c]        # 0x140025a80
   140011744:	mov    rax,rdx
   140011747:	and    edx,0x1f
   14001174a:	sar    rax,0x5
   14001174e:	imul   rdx,rdx,0x58
   140011752:	mov    rax,QWORD PTR [rcx+rax*8]
   140011756:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   14001175b:	je     0x140011763
   14001175d:	mov    rax,QWORD PTR [rax+rdx*1]
   140011761:	jmp    0x14001177f
   140011763:	call   0x14000be10
   140011768:	and    DWORD PTR [rax],0x0
   14001176b:	call   0x14000bdf0
   140011770:	mov    DWORD PTR [rax],0x9
   140011776:	call   0x14000d04c
   14001177b:	or     rax,0xffffffffffffffff
   14001177f:	add    rsp,0x28
   140011783:	ret    
   140011784:	mov    rax,rsp
   140011787:	mov    QWORD PTR [rax+0x8],rbx
   14001178b:	mov    QWORD PTR [rax+0x10],rsi
   14001178f:	mov    QWORD PTR [rax+0x18],rdi
   140011793:	mov    QWORD PTR [rax+0x20],r12
   140011797:	push   r14
   140011799:	sub    rsp,0x20
   14001179d:	movsxd rbx,ecx
   1400117a0:	mov    r12,rbx
   1400117a3:	sar    r12,0x5
   1400117a7:	lea    r14,[rip+0x142d2]        # 0x140025a80
   1400117ae:	and    ebx,0x1f
   1400117b1:	imul   rbx,rbx,0x58
   1400117b5:	mov    rsi,QWORD PTR [r14+r12*8]
   1400117b9:	mov    edi,0x1
   1400117be:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   1400117c3:	jne    0x1400117f9
   1400117c5:	lea    ecx,[rdi+0x9]
   1400117c8:	call   0x14000cb58
   1400117cd:	nop
   1400117ce:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   1400117d3:	jne    0x1400117ef
   1400117d5:	lea    rcx,[rbx+rsi*1+0x10]
   1400117da:	mov    edx,0xfa0
   1400117df:	call   QWORD PTR [rip+0x897b]        # 0x14001a160
   1400117e5:	neg    eax
   1400117e7:	sbb    edx,edx
   1400117e9:	and    edi,edx
   1400117eb:	inc    DWORD PTR [rbx+rsi*1+0xc]
   1400117ef:	mov    ecx,0xa
   1400117f4:	call   0x14000ca58
   1400117f9:	test   edi,edi
   1400117fb:	je     0x14001180c
   1400117fd:	mov    rcx,QWORD PTR [r14+r12*8]
   140011801:	lea    rcx,[rcx+rbx*1+0x10]
   140011806:	call   QWORD PTR [rip+0x88e4]        # 0x14001a0f0
   14001180c:	mov    eax,edi
   14001180e:	mov    rbx,QWORD PTR [rsp+0x30]
   140011813:	mov    rsi,QWORD PTR [rsp+0x38]
   140011818:	mov    rdi,QWORD PTR [rsp+0x40]
   14001181d:	mov    r12,QWORD PTR [rsp+0x48]
   140011822:	add    rsp,0x20
   140011826:	pop    r14
   140011828:	ret    
   140011829:	int3   
   14001182a:	int3   
   14001182b:	int3   
   14001182c:	movsxd rdx,ecx
   14001182f:	lea    rcx,[rip+0x1424a]        # 0x140025a80
   140011836:	mov    rax,rdx
   140011839:	and    edx,0x1f
   14001183c:	sar    rax,0x5
   140011840:	imul   rdx,rdx,0x58
   140011844:	mov    rax,QWORD PTR [rcx+rax*8]
   140011848:	lea    rcx,[rax+rdx*1+0x10]
   14001184d:	rex.W jmp QWORD PTR [rip+0x88a4]        # 0x14001a0f8
   140011854:	mov    QWORD PTR [rsp+0x8],rbx
   140011859:	mov    QWORD PTR [rsp+0x10],rsi
   14001185e:	mov    QWORD PTR [rsp+0x18],rdi
   140011863:	push   r12
   140011865:	push   r13
   140011867:	push   r14
   140011869:	sub    rsp,0x40
   14001186d:	or     rsi,0xffffffffffffffff
   140011871:	mov    r12d,esi
   140011874:	xor    r13d,r13d
   140011877:	lea    ebx,[rsi+0xc]
   14001187a:	mov    ecx,ebx
   14001187c:	call   0x14000ca70
   140011881:	test   eax,eax
   140011883:	jne    0x14001188c
   140011885:	mov    eax,esi
   140011887:	jmp    0x140011a42
   14001188c:	mov    ecx,ebx
   14001188e:	call   0x14000cb58
   140011893:	nop
   140011894:	xor    edi,edi
   140011896:	lea    rax,[rip+0x141e3]        # 0x140025a80
   14001189d:	mov    DWORD PTR [rsp+0x24],edi
   1400118a1:	cmp    edi,0x40
   1400118a4:	jge    0x140011a35
   1400118aa:	movsxd r14,edi
   1400118ad:	mov    rbx,QWORD PTR [rax+r14*8]
   1400118b1:	test   rbx,rbx
   1400118b4:	je     0x1400119ab
   1400118ba:	mov    QWORD PTR [rsp+0x30],rbx
   1400118bf:	mov    rax,QWORD PTR [rax+r14*8]
   1400118c3:	add    rax,0xb00
   1400118c9:	cmp    rbx,rax
   1400118cc:	jae    0x14001199b
   1400118d2:	test   BYTE PTR [rbx+0x8],0x1
   1400118d6:	jne    0x140011987
   1400118dc:	cmp    DWORD PTR [rbx+0xc],0x0
   1400118e0:	jne    0x14001191e
   1400118e2:	mov    ecx,0xa
   1400118e7:	call   0x14000cb58
   1400118ec:	nop
   1400118ed:	cmp    DWORD PTR [rbx+0xc],0x0
   1400118f1:	jne    0x140011914
   1400118f3:	lea    rcx,[rbx+0x10]
   1400118f7:	mov    edx,0xfa0
   1400118fc:	call   QWORD PTR [rip+0x885e]        # 0x14001a160
   140011902:	test   eax,eax
   140011904:	jne    0x140011911
   140011906:	lea    r13d,[rax+0x1]
   14001190a:	mov    DWORD PTR [rsp+0x28],r13d
   14001190f:	jmp    0x140011914
   140011911:	inc    DWORD PTR [rbx+0xc]
   140011914:	mov    ecx,0xa
   140011919:	call   0x14000ca58
   14001191e:	test   r13d,r13d
   140011921:	jne    0x140011987
   140011923:	lea    rcx,[rbx+0x10]
   140011927:	call   QWORD PTR [rip+0x87c3]        # 0x14001a0f0
   14001192d:	test   BYTE PTR [rbx+0x8],0x1
   140011931:	je     0x14001193f
   140011933:	lea    rcx,[rbx+0x10]
   140011937:	call   QWORD PTR [rip+0x87bb]        # 0x14001a0f8
   14001193d:	jmp    0x140011987
   14001193f:	or     rsi,0xffffffffffffffff
   140011943:	test   r13d,r13d
   140011946:	jne    0x140011987
   140011948:	mov    BYTE PTR [rbx+0x8],0x1
   14001194c:	mov    QWORD PTR [rbx],rsi
   14001194f:	lea    r8,[rip+0x1412a]        # 0x140025a80
   140011956:	sub    rbx,QWORD PTR [r8+r14*8]
   14001195a:	movabs rax,0x2e8ba2e8ba2e8ba3
   140011964:	imul   rbx
   140011967:	mov    r12,rdx
   14001196a:	sar    r12,0x4
   14001196e:	mov    rax,r12
   140011971:	shr    rax,0x3f
   140011975:	add    r12,rax
   140011978:	mov    eax,edi
   14001197a:	shl    eax,0x5
   14001197d:	add    r12d,eax
   140011980:	mov    DWORD PTR [rsp+0x20],r12d
   140011985:	jmp    0x14001199b
   140011987:	add    rbx,0x58
   14001198b:	or     rsi,0xffffffffffffffff
   14001198f:	lea    rax,[rip+0x140ea]        # 0x140025a80
   140011996:	jmp    0x1400118ba
   14001199b:	cmp    r12d,esi
   14001199e:	jne    0x140011a35
   1400119a4:	inc    edi
   1400119a6:	jmp    0x140011896
   1400119ab:	mov    edx,0x58
   1400119b0:	lea    ecx,[rdx-0x38]
   1400119b3:	call   0x140010bd0
   1400119b8:	mov    QWORD PTR [rsp+0x30],rax
   1400119bd:	test   rax,rax
   1400119c0:	je     0x140011a35
   1400119c2:	movsxd rdx,edi
   1400119c5:	lea    r8,[rip+0x140b4]        # 0x140025a80
   1400119cc:	mov    QWORD PTR [r8+rdx*8],rax
   1400119d0:	add    DWORD PTR [rip+0x14095],0x20        # 0x140025a6c
   1400119d7:	mov    rcx,QWORD PTR [r8+rdx*8]
   1400119db:	add    rcx,0xb00
   1400119e2:	cmp    rax,rcx
   1400119e5:	jae    0x140011a01
   1400119e7:	mov    BYTE PTR [rax+0x8],0x0
   1400119eb:	mov    QWORD PTR [rax],rsi
   1400119ee:	mov    BYTE PTR [rax+0x9],0xa
   1400119f2:	and    DWORD PTR [rax+0xc],0x0
   1400119f6:	add    rax,0x58
   1400119fa:	mov    QWORD PTR [rsp+0x30],rax
   1400119ff:	jmp    0x1400119d7
   140011a01:	shl    edi,0x5
   140011a04:	mov    DWORD PTR [rsp+0x20],edi
   140011a08:	movsxd rcx,edi
   140011a0b:	mov    rax,rcx
   140011a0e:	sar    rax,0x5
   140011a12:	and    ecx,0x1f
   140011a15:	imul   rcx,rcx,0x58
   140011a19:	mov    rax,QWORD PTR [r8+rax*8]
   140011a1d:	mov    BYTE PTR [rax+rcx*1+0x8],0x1
   140011a22:	mov    ecx,edi
   140011a24:	call   0x140011784
   140011a29:	test   eax,eax
   140011a2b:	cmove  edi,esi
   140011a2e:	mov    r12d,edi
   140011a31:	mov    DWORD PTR [rsp+0x20],edi
   140011a35:	mov    ecx,0xb
   140011a3a:	call   0x14000ca58
   140011a3f:	mov    eax,r12d
   140011a42:	mov    rbx,QWORD PTR [rsp+0x60]
   140011a47:	mov    rsi,QWORD PTR [rsp+0x68]
   140011a4c:	mov    rdi,QWORD PTR [rsp+0x70]
   140011a51:	add    rsp,0x40
   140011a55:	pop    r14
   140011a57:	pop    r13
   140011a59:	pop    r12
   140011a5b:	ret    
   140011a5c:	mov    QWORD PTR [rsp+0x20],rbx
   140011a61:	push   rbp
   140011a62:	push   rsi
   140011a63:	push   rdi
   140011a64:	push   r12
   140011a66:	push   r13
   140011a68:	push   r14
   140011a6a:	push   r15
   140011a6c:	lea    rbp,[rsp-0x1a30]
   140011a74:	mov    eax,0x1b30
   140011a79:	call   0x140016f30
   140011a7e:	sub    rsp,rax
   140011a81:	mov    rax,QWORD PTR [rip+0x11638]        # 0x1400230c0
   140011a88:	xor    rax,rsp
   140011a8b:	mov    QWORD PTR [rbp+0x1a20],rax
   140011a92:	xor    edi,edi
   140011a94:	mov    r14d,r8d
   140011a97:	mov    r13,rdx
   140011a9a:	and    DWORD PTR [rsp+0x44],edi
   140011a9e:	movsxd rbx,ecx
   140011aa1:	test   r8d,r8d
   140011aa4:	jne    0x140011aad
   140011aa6:	xor    eax,eax
   140011aa8:	jmp    0x140012192
   140011aad:	test   rdx,rdx
   140011ab0:	jne    0x140011ad1
   140011ab2:	call   0x14000be10
   140011ab7:	and    DWORD PTR [rax],edi
   140011ab9:	call   0x14000bdf0
   140011abe:	mov    DWORD PTR [rax],0x16
   140011ac4:	call   0x14000d04c
   140011ac9:	or     eax,0xffffffff
   140011acc:	jmp    0x140012192
   140011ad1:	mov    r15,rbx
   140011ad4:	mov    r12,rbx
   140011ad7:	lea    rax,[rip+0x13fa2]        # 0x140025a80
   140011ade:	sar    r12,0x5
   140011ae2:	and    r15d,0x1f
   140011ae6:	mov    rcx,QWORD PTR [rax+r12*8]
   140011aea:	mov    QWORD PTR [rsp+0x50],r12
   140011aef:	imul   r15,r15,0x58
   140011af3:	mov    sil,BYTE PTR [r15+rcx*1+0x38]
   140011af8:	mov    QWORD PTR [rsp+0x60],r15
   140011afd:	add    sil,sil
   140011b00:	sar    sil,1
   140011b03:	cmp    sil,0x2
   140011b07:	je     0x140011b0f
   140011b09:	cmp    sil,0x1
   140011b0d:	jne    0x140011b18
   140011b0f:	mov    eax,r14d
   140011b12:	not    eax
   140011b14:	test   al,0x1
   140011b16:	je     0x140011ab2
   140011b18:	test   BYTE PTR [r15+rcx*1+0x8],0x20
   140011b1e:	je     0x140011b2d
   140011b20:	xor    edx,edx
   140011b22:	mov    ecx,ebx
   140011b24:	lea    r8d,[rdx+0x2]
   140011b28:	call   0x140015e2c
   140011b2d:	mov    ecx,ebx
   140011b2f:	call   0x1400152d8
   140011b34:	test   eax,eax
   140011b36:	je     0x140011e06
   140011b3c:	lea    rax,[rip+0x13f3d]        # 0x140025a80
   140011b43:	mov    rax,QWORD PTR [rax+r12*8]
   140011b47:	test   BYTE PTR [r15+rax*1+0x8],0x80
   140011b4d:	je     0x140011e06
   140011b53:	call   0x14000d234
   140011b58:	xor    ebx,ebx
   140011b5a:	lea    rdx,[rsp+0x5c]
   140011b5f:	mov    rcx,QWORD PTR [rax+0xc0]
   140011b66:	lea    rax,[rip+0x13f13]        # 0x140025a80
   140011b6d:	cmp    DWORD PTR [rcx+0x14],ebx
   140011b70:	mov    rcx,QWORD PTR [rax+r12*8]
   140011b74:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011b78:	sete   bl
   140011b7b:	call   QWORD PTR [rip+0x86f7]        # 0x14001a278
   140011b81:	test   eax,eax
   140011b83:	je     0x140011e06
   140011b89:	test   ebx,ebx
   140011b8b:	je     0x140011b96
   140011b8d:	test   sil,sil
   140011b90:	je     0x140011e06
   140011b96:	call   QWORD PTR [rip+0x86d4]        # 0x14001a270
   140011b9c:	and    DWORD PTR [rsp+0x58],edi
   140011ba0:	mov    rbx,r13
   140011ba3:	mov    DWORD PTR [rsp+0x5c],eax
   140011ba7:	test   r14d,r14d
   140011baa:	je     0x140011dfd
   140011bb0:	test   sil,sil
   140011bb3:	jne    0x140011d3d
   140011bb9:	mov    cl,BYTE PTR [rbx]
   140011bbb:	xor    eax,eax
   140011bbd:	cmp    cl,0xa
   140011bc0:	sete   al
   140011bc3:	mov    DWORD PTR [rsp+0x4c],eax
   140011bc7:	lea    rax,[rip+0x13eb2]        # 0x140025a80
   140011bce:	mov    rdx,QWORD PTR [rax+r12*8]
   140011bd2:	cmp    DWORD PTR [r15+rdx*1+0x50],0x0
   140011bd8:	je     0x140011bfa
   140011bda:	mov    al,BYTE PTR [r15+rdx*1+0x4c]
   140011bdf:	mov    BYTE PTR [rsp+0x61],cl
   140011be3:	mov    r8d,0x2
   140011be9:	mov    BYTE PTR [rsp+0x60],al
   140011bed:	and    DWORD PTR [r15+rdx*1+0x50],0x0
   140011bf3:	lea    rdx,[rsp+0x60]
   140011bf8:	jmp    0x140011c43
   140011bfa:	movsx  ecx,cl
   140011bfd:	call   0x140015380
   140011c02:	test   eax,eax
   140011c04:	je     0x140011c3a
   140011c06:	mov    rax,r14
   140011c09:	sub    rax,rbx
   140011c0c:	add    rax,r13
   140011c0f:	cmp    rax,0x1
   140011c13:	jle    0x140011dc6
   140011c19:	lea    rcx,[rsp+0x40]
   140011c1e:	mov    r8d,0x2
   140011c24:	mov    rdx,rbx
   140011c27:	call   0x140015e24
   140011c2c:	cmp    eax,0xffffffff
   140011c2f:	je     0x140011de7
   140011c35:	inc    rbx
   140011c38:	jmp    0x140011c56
   140011c3a:	mov    r8d,0x1
   140011c40:	mov    rdx,rbx
   140011c43:	lea    rcx,[rsp+0x40]
   140011c48:	call   0x140015e24
   140011c4d:	cmp    eax,0xffffffff
   140011c50:	je     0x140011de7
   140011c56:	and    QWORD PTR [rsp+0x38],0x0
   140011c5c:	and    QWORD PTR [rsp+0x30],0x0
   140011c62:	mov    ecx,DWORD PTR [rsp+0x5c]
   140011c66:	lea    rax,[rsp+0x60]
   140011c6b:	lea    r8,[rsp+0x40]
   140011c70:	mov    r9d,0x1
   140011c76:	xor    edx,edx
   140011c78:	mov    DWORD PTR [rsp+0x28],0x5
   140011c80:	inc    rbx
   140011c83:	mov    QWORD PTR [rsp+0x20],rax
   140011c88:	call   QWORD PTR [rip+0x857a]        # 0x14001a208
   140011c8e:	mov    r12d,eax
   140011c91:	test   eax,eax
   140011c93:	je     0x140011de7
   140011c99:	mov    rcx,QWORD PTR [rsp+0x50]
   140011c9e:	and    QWORD PTR [rsp+0x20],0x0
   140011ca4:	lea    rax,[rip+0x13dd5]        # 0x140025a80
   140011cab:	mov    rcx,QWORD PTR [rax+rcx*8]
   140011caf:	lea    r9,[rsp+0x58]
   140011cb4:	lea    rdx,[rsp+0x60]
   140011cb9:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011cbd:	mov    r8d,r12d
   140011cc0:	call   QWORD PTR [rip+0x852a]        # 0x14001a1f0
   140011cc6:	test   eax,eax
   140011cc8:	je     0x140011df0
   140011cce:	mov    edi,ebx
   140011cd0:	sub    edi,r13d
   140011cd3:	add    edi,DWORD PTR [rsp+0x44]
   140011cd7:	cmp    DWORD PTR [rsp+0x58],r12d
   140011cdc:	jl     0x140011de7
   140011ce2:	cmp    DWORD PTR [rsp+0x4c],0x0
   140011ce7:	mov    r12,QWORD PTR [rsp+0x50]
   140011cec:	je     0x140011db7
   140011cf2:	and    QWORD PTR [rsp+0x20],0x0
   140011cf8:	lea    rax,[rip+0x13d81]        # 0x140025a80
   140011cff:	mov    BYTE PTR [rsp+0x60],0xd
   140011d04:	mov    rcx,QWORD PTR [rax+r12*8]
   140011d08:	lea    r9,[rsp+0x58]
   140011d0d:	lea    rdx,[rsp+0x60]
   140011d12:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011d16:	mov    r8d,0x1
   140011d1c:	call   QWORD PTR [rip+0x84ce]        # 0x14001a1f0
   140011d22:	test   eax,eax
   140011d24:	je     0x140011df0
   140011d2a:	cmp    DWORD PTR [rsp+0x58],0x1
   140011d2f:	jl     0x140011de7
   140011d35:	inc    DWORD PTR [rsp+0x44]
   140011d39:	inc    edi
   140011d3b:	jmp    0x140011db7
   140011d3d:	cmp    sil,0x1
   140011d41:	je     0x140011d49
   140011d43:	cmp    sil,0x2
   140011d47:	jne    0x140011d67
   140011d49:	movzx  eax,WORD PTR [rbx]
   140011d4c:	xor    r12d,r12d
   140011d4f:	cmp    ax,0xa
   140011d53:	mov    WORD PTR [rsp+0x40],ax
   140011d58:	sete   r12b
   140011d5c:	add    rbx,0x2
   140011d60:	mov    DWORD PTR [rsp+0x4c],r12d
   140011d65:	jmp    0x140011d6c
   140011d67:	mov    r12d,DWORD PTR [rsp+0x4c]
   140011d6c:	cmp    sil,0x1
   140011d70:	je     0x140011d78
   140011d72:	cmp    sil,0x2
   140011d76:	jne    0x140011db2
   140011d78:	movzx  ecx,WORD PTR [rsp+0x40]
   140011d7d:	call   0x140016eb8
   140011d82:	cmp    ax,WORD PTR [rsp+0x40]
   140011d87:	jne    0x140011df0
   140011d89:	add    edi,0x2
   140011d8c:	test   r12d,r12d
   140011d8f:	je     0x140011db2
   140011d91:	mov    r12d,0xd
   140011d97:	mov    ecx,r12d
   140011d9a:	mov    WORD PTR [rsp+0x40],r12w
   140011da0:	call   0x140016eb8
   140011da5:	cmp    ax,WORD PTR [rsp+0x40]
   140011daa:	jne    0x140011df0
   140011dac:	inc    edi
   140011dae:	inc    DWORD PTR [rsp+0x44]
   140011db2:	mov    r12,QWORD PTR [rsp+0x50]
   140011db7:	mov    eax,ebx
   140011db9:	sub    eax,r13d
   140011dbc:	cmp    eax,r14d
   140011dbf:	jae    0x140011de7
   140011dc1:	jmp    0x140011bb0
   140011dc6:	mov    al,BYTE PTR [rbx]
   140011dc8:	lea    rdx,[rip+0x13cb1]        # 0x140025a80
   140011dcf:	inc    edi
   140011dd1:	mov    rcx,QWORD PTR [rdx+r12*8]
   140011dd5:	mov    BYTE PTR [r15+rcx*1+0x4c],al
   140011dda:	mov    rax,QWORD PTR [rdx+r12*8]
   140011dde:	mov    DWORD PTR [r15+rax*1+0x50],0x1
   140011de7:	mov    ebx,DWORD PTR [rsp+0x4c]
   140011deb:	jmp    0x1400120e9
   140011df0:	call   QWORD PTR [rip+0x827a]        # 0x14001a070
   140011df6:	mov    ebx,eax
   140011df8:	jmp    0x1400120e9
   140011dfd:	mov    ebx,DWORD PTR [rsp+0x4c]
   140011e01:	jmp    0x1400120f1
   140011e06:	lea    rax,[rip+0x13c73]        # 0x140025a80
   140011e0d:	mov    rcx,QWORD PTR [rax+r12*8]
   140011e11:	test   BYTE PTR [r15+rcx*1+0x8],0x80
   140011e17:	je     0x14001211b
   140011e1d:	xor    ebx,ebx
   140011e1f:	mov    r12,r13
   140011e22:	test   sil,sil
   140011e25:	jne    0x140011ef6
   140011e2b:	test   r14d,r14d
   140011e2e:	je     0x140012151
   140011e34:	lea    edx,[rbx+0xd]
   140011e37:	mov    r15d,DWORD PTR [rsp+0x44]
   140011e3c:	lea    rsi,[rbp+0x620]
   140011e43:	xor    ecx,ecx
   140011e45:	mov    eax,r12d
   140011e48:	sub    eax,r13d
   140011e4b:	cmp    eax,r14d
   140011e4e:	jae    0x140011e77
   140011e50:	mov    al,BYTE PTR [r12]
   140011e54:	inc    r12
   140011e57:	cmp    al,0xa
   140011e59:	jne    0x140011e66
   140011e5b:	mov    BYTE PTR [rsi],dl
   140011e5d:	inc    r15d
   140011e60:	inc    rsi
   140011e63:	inc    rcx
   140011e66:	inc    rcx
   140011e69:	mov    BYTE PTR [rsi],al
   140011e6b:	inc    rsi
   140011e6e:	cmp    rcx,0x13ff
   140011e75:	jb     0x140011e45
   140011e77:	and    QWORD PTR [rsp+0x20],rbx
   140011e7c:	lea    rax,[rbp+0x620]
   140011e83:	mov    r8d,esi
   140011e86:	sub    r8d,eax
   140011e89:	mov    rax,QWORD PTR [rsp+0x50]
   140011e8e:	lea    rcx,[rip+0x13beb]        # 0x140025a80
   140011e95:	mov    rcx,QWORD PTR [rcx+rax*8]
   140011e99:	mov    DWORD PTR [rsp+0x44],r15d
   140011e9e:	mov    r15,QWORD PTR [rsp+0x60]
   140011ea3:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011ea7:	lea    r9,[rsp+0x48]
   140011eac:	lea    rdx,[rbp+0x620]
   140011eb3:	call   QWORD PTR [rip+0x8337]        # 0x14001a1f0
   140011eb9:	test   eax,eax
   140011ebb:	je     0x140011df0
   140011ec1:	add    edi,DWORD PTR [rsp+0x48]
   140011ec5:	lea    rax,[rbp+0x620]
   140011ecc:	sub    rsi,rax
   140011ecf:	movsxd rax,DWORD PTR [rsp+0x48]
   140011ed4:	cmp    rax,rsi
   140011ed7:	jl     0x1400120e9
   140011edd:	mov    eax,r12d
   140011ee0:	mov    edx,0xd
   140011ee5:	sub    eax,r13d
   140011ee8:	cmp    eax,r14d
   140011eeb:	jb     0x140011e37
   140011ef1:	jmp    0x1400120e9
   140011ef6:	cmp    sil,0x2
   140011efa:	jne    0x140011fd8
   140011f00:	test   r14d,r14d
   140011f03:	je     0x140012151
   140011f09:	mov    edx,0xd
   140011f0e:	mov    r15d,DWORD PTR [rsp+0x44]
   140011f13:	lea    rsi,[rbp+0x620]
   140011f1a:	xor    ecx,ecx
   140011f1c:	mov    eax,r12d
   140011f1f:	sub    eax,r13d
   140011f22:	cmp    eax,r14d
   140011f25:	jae    0x140011f59
   140011f27:	movzx  eax,WORD PTR [r12]
   140011f2c:	add    r12,0x2
   140011f30:	cmp    ax,0xa
   140011f34:	jne    0x140011f45
   140011f36:	mov    WORD PTR [rsi],dx
   140011f39:	add    r15d,0x2
   140011f3d:	add    rsi,0x2
   140011f41:	add    rcx,0x2
   140011f45:	add    rcx,0x2
   140011f49:	mov    WORD PTR [rsi],ax
   140011f4c:	add    rsi,0x2
   140011f50:	cmp    rcx,0x13fe
   140011f57:	jb     0x140011f1c
   140011f59:	and    QWORD PTR [rsp+0x20],rbx
   140011f5e:	lea    rax,[rbp+0x620]
   140011f65:	mov    r8d,esi
   140011f68:	sub    r8d,eax
   140011f6b:	mov    rax,QWORD PTR [rsp+0x50]
   140011f70:	lea    rcx,[rip+0x13b09]        # 0x140025a80
   140011f77:	mov    rcx,QWORD PTR [rcx+rax*8]
   140011f7b:	mov    DWORD PTR [rsp+0x44],r15d
   140011f80:	mov    r15,QWORD PTR [rsp+0x60]
   140011f85:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011f89:	lea    r9,[rsp+0x48]
   140011f8e:	lea    rdx,[rbp+0x620]
   140011f95:	call   QWORD PTR [rip+0x8255]        # 0x14001a1f0
   140011f9b:	test   eax,eax
   140011f9d:	je     0x140011df0
   140011fa3:	add    edi,DWORD PTR [rsp+0x48]
   140011fa7:	lea    rax,[rbp+0x620]
   140011fae:	sub    rsi,rax
   140011fb1:	movsxd rax,DWORD PTR [rsp+0x48]
   140011fb6:	cmp    rax,rsi
   140011fb9:	jl     0x1400120e9
   140011fbf:	mov    eax,r12d
   140011fc2:	mov    edx,0xd
   140011fc7:	sub    eax,r13d
   140011fca:	cmp    eax,r14d
   140011fcd:	jb     0x140011f0e
   140011fd3:	jmp    0x1400120e9
   140011fd8:	test   r14d,r14d
   140011fdb:	je     0x140012151
   140011fe1:	mov    r8d,0xd
   140011fe7:	lea    rcx,[rsp+0x70]
   140011fec:	xor    edx,edx
   140011fee:	mov    eax,r12d
   140011ff1:	sub    eax,r13d
   140011ff4:	cmp    eax,r14d
   140011ff7:	jae    0x140012028
   140011ff9:	movzx  eax,WORD PTR [r12]
   140011ffe:	add    r12,0x2
   140012002:	cmp    ax,0xa
   140012006:	jne    0x140012014
   140012008:	mov    WORD PTR [rcx],r8w
   14001200c:	add    rcx,0x2
   140012010:	add    rdx,0x2
   140012014:	add    rdx,0x2
   140012018:	mov    WORD PTR [rcx],ax
   14001201b:	add    rcx,0x2
   14001201f:	cmp    rdx,0x6a8
   140012026:	jb     0x140011fee
   140012028:	and    QWORD PTR [rsp+0x38],0x0
   14001202e:	and    QWORD PTR [rsp+0x30],0x0
   140012034:	lea    rax,[rsp+0x70]
   140012039:	sub    ecx,eax
   14001203b:	lea    r8,[rsp+0x70]
   140012040:	mov    DWORD PTR [rsp+0x28],0xd55
   140012048:	mov    eax,ecx
   14001204a:	mov    ecx,0xfde9
   14001204f:	cdq    
   140012050:	sub    eax,edx
   140012052:	xor    edx,edx
   140012054:	sar    eax,1
   140012056:	mov    r9d,eax
   140012059:	lea    rax,[rbp+0x620]
   140012060:	mov    QWORD PTR [rsp+0x20],rax
   140012065:	call   QWORD PTR [rip+0x819d]        # 0x14001a208
   14001206b:	mov    r15d,eax
   14001206e:	test   eax,eax
   140012070:	je     0x140012111
   140012076:	xor    esi,esi
   140012078:	mov    rax,QWORD PTR [rsp+0x50]
   14001207d:	and    QWORD PTR [rsp+0x20],0x0
   140012083:	movsxd rcx,esi
   140012086:	lea    rdx,[rbp+rcx*1+0x620]
   14001208e:	mov    r8d,r15d
   140012091:	lea    rcx,[rip+0x139e8]        # 0x140025a80
   140012098:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001209c:	mov    rax,QWORD PTR [rsp+0x60]
   1400120a1:	lea    r9,[rsp+0x48]
   1400120a6:	mov    rcx,QWORD PTR [rax+rcx*1]
   1400120aa:	sub    r8d,esi
   1400120ad:	call   QWORD PTR [rip+0x813d]        # 0x14001a1f0
   1400120b3:	test   eax,eax
   1400120b5:	je     0x1400120c2
   1400120b7:	add    esi,DWORD PTR [rsp+0x48]
   1400120bb:	cmp    r15d,esi
   1400120be:	jg     0x140012078
   1400120c0:	jmp    0x1400120ca
   1400120c2:	call   QWORD PTR [rip+0x7fa8]        # 0x14001a070
   1400120c8:	mov    ebx,eax
   1400120ca:	cmp    r15d,esi
   1400120cd:	jg     0x1400120e4
   1400120cf:	mov    edi,r12d
   1400120d2:	mov    r8d,0xd
   1400120d8:	sub    edi,r13d
   1400120db:	cmp    edi,r14d
   1400120de:	jb     0x140011fe7
   1400120e4:	mov    r15,QWORD PTR [rsp+0x60]
   1400120e9:	test   edi,edi
   1400120eb:	jne    0x14001218c
   1400120f1:	test   ebx,ebx
   1400120f3:	je     0x140012151
   1400120f5:	cmp    ebx,0x5
   1400120f8:	jne    0x140012145
   1400120fa:	call   0x14000bdf0
   1400120ff:	mov    DWORD PTR [rax],0x9
   140012105:	call   0x14000be10
   14001210a:	mov    DWORD PTR [rax],ebx
   14001210c:	jmp    0x140011ac9
   140012111:	call   QWORD PTR [rip+0x7f59]        # 0x14001a070
   140012117:	mov    ebx,eax
   140012119:	jmp    0x1400120e4
   14001211b:	mov    rcx,QWORD PTR [r15+rcx*1]
   14001211f:	and    QWORD PTR [rsp+0x20],rdi
   140012124:	lea    r9,[rsp+0x48]
   140012129:	mov    r8d,r14d
   14001212c:	mov    rdx,r13
   14001212f:	call   QWORD PTR [rip+0x80bb]        # 0x14001a1f0
   140012135:	test   eax,eax
   140012137:	je     0x140011df0
   14001213d:	mov    edi,DWORD PTR [rsp+0x48]
   140012141:	xor    ebx,ebx
   140012143:	jmp    0x1400120e9
   140012145:	mov    ecx,ebx
   140012147:	call   0x14000be30
   14001214c:	jmp    0x140011ac9
   140012151:	mov    rax,QWORD PTR [rsp+0x50]
   140012156:	lea    rcx,[rip+0x13923]        # 0x140025a80
   14001215d:	mov    rax,QWORD PTR [rcx+rax*8]
   140012161:	test   BYTE PTR [r15+rax*1+0x8],0x40
   140012167:	je     0x140012174
   140012169:	cmp    BYTE PTR [r13+0x0],0x1a
   14001216e:	je     0x140011aa6
   140012174:	call   0x14000bdf0
   140012179:	mov    DWORD PTR [rax],0x1c
   14001217f:	call   0x14000be10
   140012184:	and    DWORD PTR [rax],0x0
   140012187:	jmp    0x140011ac9
   14001218c:	sub    edi,DWORD PTR [rsp+0x44]
   140012190:	mov    eax,edi
   140012192:	mov    rcx,QWORD PTR [rbp+0x1a20]
   140012199:	xor    rcx,rsp
   14001219c:	call   0x14000a850
   1400121a1:	mov    rbx,QWORD PTR [rsp+0x1b88]
   1400121a9:	add    rsp,0x1b30
   1400121b0:	pop    r15
   1400121b2:	pop    r14
   1400121b4:	pop    r13
   1400121b6:	pop    r12
   1400121b8:	pop    rdi
   1400121b9:	pop    rsi
   1400121ba:	pop    rbp
   1400121bb:	ret    
   1400121bc:	mov    QWORD PTR [rsp+0x10],rbx
   1400121c1:	mov    DWORD PTR [rsp+0x8],ecx
   1400121c5:	push   rsi
   1400121c6:	push   rdi
   1400121c7:	push   r12
   1400121c9:	push   r13
   1400121cb:	push   r14
   1400121cd:	sub    rsp,0x20
   1400121d1:	mov    esi,r8d
   1400121d4:	mov    r12,rdx
   1400121d7:	movsxd rdi,ecx
   1400121da:	cmp    edi,0xfffffffe
   1400121dd:	jne    0x1400121f7
   1400121df:	call   0x14000be10
   1400121e4:	and    DWORD PTR [rax],0x0
   1400121e7:	call   0x14000bdf0
   1400121ec:	mov    DWORD PTR [rax],0x9
   1400121f2:	jmp    0x140012286
   1400121f7:	test   ecx,ecx
   1400121f9:	js     0x14001226e
   1400121fb:	cmp    edi,DWORD PTR [rip+0x1386b]        # 0x140025a6c
   140012201:	jae    0x14001226e
   140012203:	mov    rbx,rdi
   140012206:	mov    r13,rdi
   140012209:	sar    r13,0x5
   14001220d:	lea    r14,[rip+0x1386c]        # 0x140025a80
   140012214:	and    ebx,0x1f
   140012217:	imul   rbx,rbx,0x58
   14001221b:	mov    rax,QWORD PTR [r14+r13*8]
   14001221f:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140012224:	and    ecx,0x1
   140012227:	je     0x14001226e
   140012229:	mov    ecx,edi
   14001222b:	call   0x140011784
   140012230:	nop
   140012231:	mov    rax,QWORD PTR [r14+r13*8]
   140012235:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14001223a:	je     0x14001224d
   14001223c:	mov    r8d,esi
   14001223f:	mov    rdx,r12
   140012242:	mov    ecx,edi
   140012244:	call   0x140011a5c
   140012249:	mov    ebx,eax
   14001224b:	jmp    0x140012263
   14001224d:	call   0x14000bdf0
   140012252:	mov    DWORD PTR [rax],0x9
   140012258:	call   0x14000be10
   14001225d:	and    DWORD PTR [rax],0x0
   140012260:	or     ebx,0xffffffff
   140012263:	mov    ecx,edi
   140012265:	call   0x14001182c
   14001226a:	mov    eax,ebx
   14001226c:	jmp    0x140012289
   14001226e:	call   0x14000be10
   140012273:	and    DWORD PTR [rax],0x0
   140012276:	call   0x14000bdf0
   14001227b:	mov    DWORD PTR [rax],0x9
   140012281:	call   0x14000d04c
   140012286:	or     eax,0xffffffff
   140012289:	mov    rbx,QWORD PTR [rsp+0x58]
   14001228e:	add    rsp,0x20
   140012292:	pop    r14
   140012294:	pop    r13
   140012296:	pop    r12
   140012298:	pop    rdi
   140012299:	pop    rsi
   14001229a:	ret    
   14001229b:	int3   
   14001229c:	mov    QWORD PTR [rsp+0x8],rbx
   1400122a1:	mov    QWORD PTR [rsp+0x18],rbp
   1400122a6:	mov    QWORD PTR [rsp+0x20],rsi
   1400122ab:	push   rdi
   1400122ac:	sub    rsp,0x20
   1400122b0:	mov    rsi,r8
   1400122b3:	mov    rbp,rdx
   1400122b6:	mov    rdi,rcx
   1400122b9:	test   rdx,rdx
   1400122bc:	je     0x1400123aa
   1400122c2:	cmp    BYTE PTR [rdx],0x0
   1400122c5:	je     0x1400123aa
   1400122cb:	test   rcx,rcx
   1400122ce:	jne    0x14001233a
   1400122d0:	xor    r9d,r9d
   1400122d3:	xor    r8d,r8d
   1400122d6:	xor    edx,edx
   1400122d8:	mov    rcx,rbp
   1400122db:	call   QWORD PTR [rip+0x7f9f]        # 0x14001a280
   1400122e1:	test   eax,eax
   1400122e3:	jne    0x1400122f9
   1400122e5:	call   QWORD PTR [rip+0x7d85]        # 0x14001a070
   1400122eb:	mov    ecx,eax
   1400122ed:	call   0x14000be30
   1400122f2:	xor    eax,eax
   1400122f4:	jmp    0x1400123b2
   1400122f9:	mov    eax,eax
   1400122fb:	cmp    rsi,rax
   1400122fe:	cmova  rax,rsi
   140012302:	mov    rsi,rax
   140012305:	cmp    rax,0xffffffffffffffff
   140012309:	jbe    0x140012318
   14001230b:	call   0x14000bdf0
   140012310:	mov    DWORD PTR [rax],0x16
   140012316:	jmp    0x1400122f2
   140012318:	mov    edx,0x1
   14001231d:	mov    rcx,rax
   140012320:	call   0x14000eb44
   140012325:	mov    rbx,rax
   140012328:	test   rax,rax
   14001232b:	jne    0x140012354
   14001232d:	call   0x14000bdf0
   140012332:	mov    DWORD PTR [rax],0xc
   140012338:	jmp    0x1400122f2
   14001233a:	test   r8,r8
   14001233d:	jne    0x140012351
   14001233f:	call   0x14000bdf0
   140012344:	mov    DWORD PTR [rax],0x16
   14001234a:	call   0x14000d04c
   14001234f:	jmp    0x1400122f2
   140012351:	mov    rbx,rcx
   140012354:	lea    r9,[rsp+0x38]
   140012359:	mov    r8,rbx
   14001235c:	mov    edx,esi
   14001235e:	mov    rcx,rbp
   140012361:	call   QWORD PTR [rip+0x7f19]        # 0x14001a280
   140012367:	mov    ecx,eax
   140012369:	cmp    rcx,rsi
   14001236c:	jb     0x14001238b
   14001236e:	test   rdi,rdi
   140012371:	jne    0x14001237b
   140012373:	mov    rcx,rbx
   140012376:	call   0x14000b490
   14001237b:	call   0x14000bdf0
   140012380:	mov    DWORD PTR [rax],0x22
   140012386:	jmp    0x1400122f2
   14001238b:	test   eax,eax
   14001238d:	jne    0x1400123a5
   14001238f:	test   rdi,rdi
   140012392:	jne    0x1400122e5
   140012398:	mov    rcx,rbx
   14001239b:	call   0x14000b490
   1400123a0:	jmp    0x1400122e5
   1400123a5:	mov    rax,rbx
   1400123a8:	jmp    0x1400123b2
   1400123aa:	mov    edx,r8d
   1400123ad:	call   0x140017110
   1400123b2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400123b7:	mov    rbp,QWORD PTR [rsp+0x40]
   1400123bc:	mov    rsi,QWORD PTR [rsp+0x48]
   1400123c1:	add    rsp,0x20
   1400123c5:	pop    rdi
   1400123c6:	ret    
   1400123c7:	int3   
   1400123c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400123cd:	push   rdi
   1400123ce:	sub    rsp,0x20
   1400123d2:	mov    r8,rdx
   1400123d5:	movzx  edx,cl
   1400123d8:	cmp    BYTE PTR [r8+0x1],0x3a
   1400123dd:	mov    rcx,r8
   1400123e0:	jne    0x1400123e6
   1400123e2:	lea    rcx,[r8+0x2]
   1400123e6:	mov    al,BYTE PTR [rcx]
   1400123e8:	cmp    al,0x5c
   1400123ea:	je     0x1400123f0
   1400123ec:	cmp    al,0x2f
   1400123ee:	jne    0x1400123f6
   1400123f0:	cmp    BYTE PTR [rcx+0x1],0x0
   1400123f4:	je     0x140012404
   1400123f6:	test   dl,0x10
   1400123f9:	jne    0x140012404
   1400123fb:	mov    ebx,0x8000
   140012400:	test   al,al
   140012402:	jne    0x140012409
   140012404:	mov    ebx,0x4040
   140012409:	shl    dx,0x7
   14001240d:	mov    eax,0x80
   140012412:	mov    rcx,r8
   140012415:	not    dx
   140012418:	and    dx,ax
   14001241b:	mov    eax,0x100
   140012420:	or     dx,ax
   140012423:	or     bx,dx
   140012426:	mov    edx,0x2e
   14001242b:	call   0x140017448
   140012430:	mov    rdi,rax
   140012433:	test   rax,rax
   140012436:	je     0x140012488
   140012438:	lea    rdx,[rip+0xd6d5]        # 0x14001fb14
   14001243f:	mov    rcx,rax
   140012442:	call   0x140017360
   140012447:	test   eax,eax
   140012449:	je     0x140012484
   14001244b:	lea    rdx,[rip+0xd6ba]        # 0x14001fb0c
   140012452:	mov    rcx,rdi
   140012455:	call   0x140017360
   14001245a:	test   eax,eax
   14001245c:	je     0x140012484
   14001245e:	lea    rdx,[rip+0xd69f]        # 0x14001fb04
   140012465:	mov    rcx,rdi
   140012468:	call   0x140017360
   14001246d:	test   eax,eax
   14001246f:	je     0x140012484
   140012471:	lea    rdx,[rip+0xd684]        # 0x14001fafc
   140012478:	mov    rcx,rdi
   14001247b:	call   0x140017360
   140012480:	test   eax,eax
   140012482:	jne    0x140012488
   140012484:	or     bx,0x40
   140012488:	movzx  eax,bx
   14001248b:	shr    ax,0x3
   14001248f:	and    ax,0x38
   140012493:	or     bx,ax
   140012496:	movzx  eax,bx
   140012499:	shr    ax,0x6
   14001249d:	and    ax,0x7
   1400124a1:	or     ax,bx
   1400124a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400124a9:	add    rsp,0x20
   1400124ad:	pop    rdi
   1400124ae:	ret    
   1400124af:	int3   
   1400124b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400124b5:	mov    QWORD PTR [rsp+0x20],rsi
   1400124ba:	push   rdi
   1400124bb:	push   r12
   1400124bd:	push   r13
   1400124bf:	push   r14
   1400124c1:	push   r15
   1400124c3:	sub    rsp,0xa0
   1400124ca:	mov    rax,QWORD PTR [rip+0x10bef]        # 0x1400230c0
   1400124d1:	xor    rax,rsp
   1400124d4:	mov    QWORD PTR [rsp+0x98],rax
   1400124dc:	mov    rdi,rdx
   1400124df:	movsxd rsi,ecx
   1400124e2:	mov    DWORD PTR [rsp+0x4c],esi
   1400124e6:	xor    ebx,ebx
   1400124e8:	mov    eax,ebx
   1400124ea:	test   rdx,rdx
   1400124ed:	setne  al
   1400124f0:	test   eax,eax
   1400124f2:	jne    0x14001250b
   1400124f4:	call   0x14000be10
   1400124f9:	mov    DWORD PTR [rax],ebx
   1400124fb:	call   0x14000bdf0
   140012500:	mov    DWORD PTR [rax],0x16
   140012506:	jmp    0x14001282d
   14001250b:	xor    edx,edx
   14001250d:	lea    r8d,[rdx+0x30]
   140012511:	mov    rcx,rdi
   140012514:	call   0x14000a560
   140012519:	cmp    esi,0xfffffffe
   14001251c:	jne    0x140012535
   14001251e:	call   0x14000be10
   140012523:	mov    DWORD PTR [rax],ebx
   140012525:	call   0x14000bdf0
   14001252a:	mov    DWORD PTR [rax],0x9
   140012530:	jmp    0x140012832
   140012535:	test   esi,esi
   140012537:	js     0x14001281b
   14001253d:	cmp    esi,DWORD PTR [rip+0x13529]        # 0x140025a6c
   140012543:	jae    0x14001281b
   140012549:	mov    r12,rsi
   14001254c:	mov    r13,rsi
   14001254f:	sar    r13,0x5
   140012553:	lea    r15,[rip+0x13526]        # 0x140025a80
   14001255a:	and    r12d,0x1f
   14001255e:	imul   r12,r12,0x58
   140012562:	mov    rax,QWORD PTR [r15+r13*8]
   140012566:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   14001256c:	mov    r14d,0x1
   140012572:	and    ecx,r14d
   140012575:	je     0x14001281b
   14001257b:	mov    ecx,esi
   14001257d:	call   0x140011784
   140012582:	nop
   140012583:	mov    rcx,QWORD PTR [r15+r13*8]
   140012587:	test   BYTE PTR [rcx+r12*1+0x8],r14b
   14001258c:	jne    0x14001259e
   14001258e:	call   0x14000bdf0
   140012593:	mov    DWORD PTR [rax],0x9
   140012599:	jmp    0x14001280d
   14001259e:	mov    rcx,QWORD PTR [rcx+r12*1]
   1400125a2:	call   QWORD PTR [rip+0x7c80]        # 0x14001a228
   1400125a8:	btr    eax,0xf
   1400125ac:	cmp    eax,r14d
   1400125af:	je     0x140012649
   1400125b5:	cmp    eax,0x2
   1400125b8:	je     0x1400125da
   1400125ba:	cmp    eax,0x3
   1400125bd:	je     0x1400125d5
   1400125bf:	test   eax,eax
   1400125c1:	je     0x14001258e
   1400125c3:	call   QWORD PTR [rip+0x7aa7]        # 0x14001a070
   1400125c9:	mov    ecx,eax
   1400125cb:	call   0x14000be30
   1400125d0:	jmp    0x14001280d
   1400125d5:	cmp    eax,0x2
   1400125d8:	jne    0x1400125e1
   1400125da:	mov    ecx,0x2000
   1400125df:	jmp    0x1400125e6
   1400125e1:	mov    ecx,0x1000
   1400125e6:	mov    WORD PTR [rdi+0x6],cx
   1400125ea:	mov    DWORD PTR [rdi],esi
   1400125ec:	mov    DWORD PTR [rdi+0x10],esi
   1400125ef:	mov    WORD PTR [rdi+0x8],r14w
   1400125f4:	mov    WORD PTR [rdi+0x4],bx
   1400125f8:	mov    DWORD PTR [rdi+0xa],ebx
   1400125fb:	mov    QWORD PTR [rdi+0x28],rbx
   1400125ff:	mov    QWORD PTR [rdi+0x20],rbx
   140012603:	mov    QWORD PTR [rdi+0x18],rbx
   140012607:	cmp    eax,0x2
   14001260a:	jne    0x140012614
   14001260c:	mov    DWORD PTR [rdi+0x14],ebx
   14001260f:	jmp    0x140012810
   140012614:	mov    rcx,QWORD PTR [r15+r13*8]
   140012618:	mov    QWORD PTR [rsp+0x28],rbx
   14001261d:	lea    rax,[rsp+0x48]
   140012622:	mov    QWORD PTR [rsp+0x20],rax
   140012627:	xor    r9d,r9d
   14001262a:	xor    r8d,r8d
   14001262d:	xor    edx,edx
   14001262f:	mov    rcx,QWORD PTR [rcx+r12*1]
   140012633:	call   QWORD PTR [rip+0x7c57]        # 0x14001a290
   140012639:	neg    eax
   14001263b:	sbb    ecx,ecx
   14001263d:	and    ecx,DWORD PTR [rsp+0x48]
   140012641:	mov    DWORD PTR [rdi+0x14],ecx
   140012644:	jmp    0x140012810
   140012649:	mov    DWORD PTR [rdi+0xa],ebx
   14001264c:	mov    DWORD PTR [rdi+0x4],ebx
   14001264f:	mov    WORD PTR [rdi+0x8],r14w
   140012654:	mov    rcx,QWORD PTR [r15+r13*8]
   140012658:	lea    rdx,[rsp+0x60]
   14001265d:	mov    rcx,QWORD PTR [rcx+r12*1]
   140012661:	call   QWORD PTR [rip+0x7c21]        # 0x14001a288
   140012667:	test   eax,eax
   140012669:	je     0x1400125c3
   14001266f:	movzx  eax,WORD PTR [rdi+0x6]
   140012673:	test   BYTE PTR [rsp+0x60],r14b
   140012678:	je     0x140012681
   14001267a:	or     eax,0x124
   14001267f:	jmp    0x140012686
   140012681:	or     eax,0x1b6
   140012686:	mov    WORD PTR [rdi+0x6],ax
   14001268a:	cmp    DWORD PTR [rsp+0x74],ebx
   14001268e:	jne    0x14001269c
   140012690:	cmp    DWORD PTR [rsp+0x78],ebx
   140012694:	jne    0x14001269c
   140012696:	mov    QWORD PTR [rdi+0x20],rbx
   14001269a:	jmp    0x140012704
   14001269c:	lea    rdx,[rsp+0x40]
   1400126a1:	lea    rcx,[rsp+0x74]
   1400126a6:	call   QWORD PTR [rip+0x7a74]        # 0x14001a120
   1400126ac:	test   eax,eax
   1400126ae:	je     0x14001280d
   1400126b4:	lea    rdx,[rsp+0x50]
   1400126b9:	lea    rcx,[rsp+0x40]
   1400126be:	call   QWORD PTR [rip+0x7a54]        # 0x14001a118
   1400126c4:	test   eax,eax
   1400126c6:	je     0x14001280d
   1400126cc:	movzx  eax,WORD PTR [rsp+0x5c]
   1400126d1:	movzx  r10d,WORD PTR [rsp+0x5a]
   1400126d7:	movzx  r9d,WORD PTR [rsp+0x58]
   1400126dd:	movzx  r8d,WORD PTR [rsp+0x56]
   1400126e3:	movzx  edx,WORD PTR [rsp+0x52]
   1400126e8:	movzx  ecx,WORD PTR [rsp+0x50]
   1400126ed:	or     DWORD PTR [rsp+0x30],0xffffffff
   1400126f2:	mov    DWORD PTR [rsp+0x28],eax
   1400126f6:	mov    DWORD PTR [rsp+0x20],r10d
   1400126fb:	call   0x1400131ec
   140012700:	mov    QWORD PTR [rdi+0x20],rax
   140012704:	cmp    DWORD PTR [rsp+0x6c],ebx
   140012708:	jne    0x140012716
   14001270a:	cmp    DWORD PTR [rsp+0x70],ebx
   14001270e:	jne    0x140012716
   140012710:	mov    rax,QWORD PTR [rdi+0x20]
   140012714:	jmp    0x14001277a
   140012716:	lea    rdx,[rsp+0x40]
   14001271b:	lea    rcx,[rsp+0x6c]
   140012720:	call   QWORD PTR [rip+0x79fa]        # 0x14001a120
   140012726:	test   eax,eax
   140012728:	je     0x14001280d
   14001272e:	lea    rdx,[rsp+0x50]
   140012733:	lea    rcx,[rsp+0x40]
   140012738:	call   QWORD PTR [rip+0x79da]        # 0x14001a118
   14001273e:	test   eax,eax
   140012740:	je     0x14001280d
   140012746:	movzx  eax,WORD PTR [rsp+0x5c]
   14001274b:	movzx  r10d,WORD PTR [rsp+0x5a]
   140012751:	movzx  r9d,WORD PTR [rsp+0x58]
   140012757:	movzx  r8d,WORD PTR [rsp+0x56]
   14001275d:	movzx  edx,WORD PTR [rsp+0x52]
   140012762:	movzx  ecx,WORD PTR [rsp+0x50]
   140012767:	or     DWORD PTR [rsp+0x30],0xffffffff
   14001276c:	mov    DWORD PTR [rsp+0x28],eax
   140012770:	mov    DWORD PTR [rsp+0x20],r10d
   140012775:	call   0x1400131ec
   14001277a:	mov    QWORD PTR [rdi+0x18],rax
   14001277e:	cmp    DWORD PTR [rsp+0x64],ebx
   140012782:	jne    0x140012790
   140012784:	cmp    DWORD PTR [rsp+0x68],ebx
   140012788:	jne    0x140012790
   14001278a:	mov    rax,QWORD PTR [rdi+0x20]
   14001278e:	jmp    0x1400127ec
   140012790:	lea    rdx,[rsp+0x40]
   140012795:	lea    rcx,[rsp+0x64]
   14001279a:	call   QWORD PTR [rip+0x7980]        # 0x14001a120
   1400127a0:	test   eax,eax
   1400127a2:	je     0x14001280d
   1400127a4:	lea    rdx,[rsp+0x50]
   1400127a9:	lea    rcx,[rsp+0x40]
   1400127ae:	call   QWORD PTR [rip+0x7964]        # 0x14001a118
   1400127b4:	test   eax,eax
   1400127b6:	je     0x14001280d
   1400127b8:	movzx  eax,WORD PTR [rsp+0x5c]
   1400127bd:	movzx  r10d,WORD PTR [rsp+0x5a]
   1400127c3:	movzx  r9d,WORD PTR [rsp+0x58]
   1400127c9:	movzx  r8d,WORD PTR [rsp+0x56]
   1400127cf:	movzx  edx,WORD PTR [rsp+0x52]
   1400127d4:	movzx  ecx,WORD PTR [rsp+0x50]
   1400127d9:	or     DWORD PTR [rsp+0x30],0xffffffff
   1400127de:	mov    DWORD PTR [rsp+0x28],eax
   1400127e2:	mov    DWORD PTR [rsp+0x20],r10d
   1400127e7:	call   0x1400131ec
   1400127ec:	mov    QWORD PTR [rdi+0x28],rax
   1400127f0:	mov    eax,DWORD PTR [rsp+0x84]
   1400127f7:	mov    DWORD PTR [rdi+0x14],eax
   1400127fa:	movzx  eax,WORD PTR [rdi+0x6]
   1400127fe:	bts    eax,0xf
   140012802:	mov    WORD PTR [rdi+0x6],ax
   140012806:	mov    DWORD PTR [rdi],ebx
   140012808:	mov    DWORD PTR [rdi+0x10],ebx
   14001280b:	jmp    0x140012810
   14001280d:	or     ebx,0xffffffff
   140012810:	mov    ecx,esi
   140012812:	call   0x14001182c
   140012817:	mov    eax,ebx
   140012819:	jmp    0x140012835
   14001281b:	call   0x14000be10
   140012820:	mov    DWORD PTR [rax],ebx
   140012822:	call   0x14000bdf0
   140012827:	mov    DWORD PTR [rax],0x9
   14001282d:	call   0x14000d04c
   140012832:	or     eax,0xffffffff
   140012835:	mov    rcx,QWORD PTR [rsp+0x98]
   14001283d:	xor    rcx,rsp
   140012840:	call   0x14000a850
   140012845:	lea    r11,[rsp+0xa0]
   14001284d:	mov    rbx,QWORD PTR [r11+0x40]
   140012851:	mov    rsi,QWORD PTR [r11+0x48]
   140012855:	mov    rsp,r11
   140012858:	pop    r15
   14001285a:	pop    r14
   14001285c:	pop    r13
   14001285e:	pop    r12
   140012860:	pop    rdi
   140012861:	ret    
   140012862:	int3   
   140012863:	int3   
   140012864:	mov    QWORD PTR [rsp+0x10],rbx
   140012869:	mov    QWORD PTR [rsp+0x18],r8
   14001286e:	mov    QWORD PTR [rsp+0x8],rcx
   140012873:	push   rbp
   140012874:	push   rsi
   140012875:	push   rdi
   140012876:	push   r12
   140012878:	push   r13
   14001287a:	push   r14
   14001287c:	push   r15
   14001287e:	mov    rbp,rsp
   140012881:	sub    rsp,0x80
   140012888:	xor    edi,edi
   14001288a:	mov    r13b,0x80
   14001288d:	mov    esi,r9d
   140012890:	mov    rbx,rdx
   140012893:	mov    DWORD PTR [rbp-0x18],0x18
   14001289a:	lea    r12d,[rdi+0x1]
   14001289e:	mov    DWORD PTR [rbp-0x28],edi
   1400128a1:	mov    BYTE PTR [rbp+0x58],dil
   1400128a5:	mov    QWORD PTR [rbp-0x10],rdi
   1400128a9:	test   r13b,r9b
   1400128ac:	je     0x1400128b6
   1400128ae:	mov    DWORD PTR [rbp-0x8],edi
   1400128b1:	mov    r15b,0x10
   1400128b4:	jmp    0x1400128bd
   1400128b6:	mov    DWORD PTR [rbp-0x8],r12d
   1400128ba:	mov    r15b,dil
   1400128bd:	lea    rcx,[rbp-0x28]
   1400128c1:	call   0x1400178c4
   1400128c6:	test   eax,eax
   1400128c8:	jne    0x140012ff6
   1400128ce:	mov    eax,0x8000
   1400128d3:	test   eax,esi
   1400128d5:	jne    0x1400128e7
   1400128d7:	test   esi,0x74000
   1400128dd:	jne    0x1400128e4
   1400128df:	cmp    DWORD PTR [rbp-0x28],eax
   1400128e2:	je     0x1400128e7
   1400128e4:	or     r15b,r13b
   1400128e7:	mov    ecx,esi
   1400128e9:	mov    r9d,0x3
   1400128ef:	mov    eax,0xc0000000
   1400128f4:	and    ecx,r9d
   1400128f7:	mov    r8d,0x80000000
   1400128fd:	je     0x14001295a
   1400128ff:	dec    ecx
   140012901:	je     0x140012944
   140012903:	dec    ecx
   140012905:	je     0x14001293f
   140012907:	call   0x14000be10
   14001290c:	mov    DWORD PTR [rax],edi
   14001290e:	or     DWORD PTR [rbx],0xffffffff
   140012911:	call   0x14000bdf0
   140012916:	mov    ebx,0x16
   14001291b:	mov    DWORD PTR [rax],ebx
   14001291d:	call   0x14000d04c
   140012922:	mov    eax,ebx
   140012924:	mov    rbx,QWORD PTR [rsp+0xc8]
   14001292c:	add    rsp,0x80
   140012933:	pop    r15
   140012935:	pop    r14
   140012937:	pop    r13
   140012939:	pop    r12
   14001293b:	pop    rdi
   14001293c:	pop    rsi
   14001293d:	pop    rbp
   14001293e:	ret    
   14001293f:	mov    r14d,eax
   140012942:	jmp    0x14001295d
   140012944:	test   sil,0x8
   140012948:	je     0x140012952
   14001294a:	test   esi,0x70000
   140012950:	jne    0x14001293f
   140012952:	mov    r14d,0x40000000
   140012958:	jmp    0x14001295d
   14001295a:	mov    r14d,r8d
   14001295d:	mov    ecx,DWORD PTR [rbp+0x60]
   140012960:	mov    DWORD PTR [rbp-0x3c],r14d
   140012964:	mov    r13d,0x2
   14001296a:	sub    ecx,0x10
   14001296d:	je     0x14001299c
   14001296f:	sub    ecx,0x10
   140012972:	je     0x140012997
   140012974:	sub    ecx,0x10
   140012977:	je     0x140012992
   140012979:	sub    ecx,0x10
   14001297c:	je     0x14001298d
   14001297e:	cmp    ecx,0x40
   140012981:	jne    0x140012907
   140012983:	cmp    r14d,r8d
   140012986:	mov    edx,edi
   140012988:	sete   dl
   14001298b:	jmp    0x14001299e
   14001298d:	mov    edx,r9d
   140012990:	jmp    0x14001299e
   140012992:	mov    edx,r13d
   140012995:	jmp    0x14001299e
   140012997:	mov    edx,r12d
   14001299a:	jmp    0x14001299e
   14001299c:	mov    edx,edi
   14001299e:	mov    eax,esi
   1400129a0:	mov    ecx,0x700
   1400129a5:	mov    DWORD PTR [rbp-0x38],edx
   1400129a8:	and    eax,ecx
   1400129aa:	mov    r8d,0x100
   1400129b0:	je     0x1400129f8
   1400129b2:	cmp    eax,r8d
   1400129b5:	je     0x1400129f0
   1400129b7:	cmp    eax,0x200
   1400129bc:	je     0x1400129e8
   1400129be:	cmp    eax,0x300
   1400129c3:	je     0x1400129e3
   1400129c5:	cmp    eax,0x400
   1400129ca:	je     0x1400129f8
   1400129cc:	cmp    eax,0x500
   1400129d1:	je     0x1400129fb
   1400129d3:	cmp    eax,0x600
   1400129d8:	je     0x1400129e8
   1400129da:	cmp    eax,ecx
   1400129dc:	je     0x1400129fb
   1400129de:	jmp    0x140012907
   1400129e3:	mov    r12d,r13d
   1400129e6:	jmp    0x1400129fb
   1400129e8:	mov    r12d,0x5
   1400129ee:	jmp    0x1400129fb
   1400129f0:	mov    r12d,0x4
   1400129f6:	jmp    0x1400129fb
   1400129f8:	mov    r12d,r9d
   1400129fb:	mov    ecx,0x80
   140012a00:	mov    DWORD PTR [rbp-0x30],ecx
   140012a03:	test   r8d,esi
   140012a06:	je     0x140012a1e
   140012a08:	mov    al,BYTE PTR [rip+0x11f72]        # 0x140024980
   140012a0e:	not    al
   140012a10:	and    al,BYTE PTR [rbp+0x68]
   140012a13:	test   al,0x80
   140012a15:	lea    eax,[rcx-0x7f]
   140012a18:	cmove  ecx,eax
   140012a1b:	mov    DWORD PTR [rbp-0x30],ecx
   140012a1e:	test   sil,0x40
   140012a22:	je     0x140012a3a
   140012a24:	bts    ecx,0x1a
   140012a28:	bts    r14d,0x10
   140012a2d:	or     edx,0x4
   140012a30:	mov    DWORD PTR [rbp-0x38],edx
   140012a33:	mov    DWORD PTR [rbp-0x30],ecx
   140012a36:	mov    DWORD PTR [rbp-0x3c],r14d
   140012a3a:	bt     esi,0xc
   140012a3e:	jae    0x140012a46
   140012a40:	or     ecx,r8d
   140012a43:	mov    DWORD PTR [rbp-0x30],ecx
   140012a46:	test   sil,0x20
   140012a4a:	je     0x140012a52
   140012a4c:	bts    ecx,0x1b
   140012a50:	jmp    0x140012a5c
   140012a52:	test   sil,0x10
   140012a56:	je     0x140012a5f
   140012a58:	bts    ecx,0x1c
   140012a5c:	mov    DWORD PTR [rbp-0x30],ecx
   140012a5f:	call   0x140011854
   140012a64:	mov    DWORD PTR [rbx],eax
   140012a66:	cmp    eax,0xffffffff
   140012a69:	jne    0x140012a8c
   140012a6b:	call   0x14000be10
   140012a70:	mov    DWORD PTR [rax],edi
   140012a72:	or     DWORD PTR [rbx],0xffffffff
   140012a75:	call   0x14000bdf0
   140012a7a:	mov    DWORD PTR [rax],0x18
   140012a80:	call   0x14000bdf0
   140012a85:	mov    eax,DWORD PTR [rax]
   140012a87:	jmp    0x140012924
   140012a8c:	mov    rax,QWORD PTR [rbp+0x40]
   140012a90:	mov    r8d,DWORD PTR [rbp-0x38]
   140012a94:	mov    rcx,QWORD PTR [rbp+0x50]
   140012a98:	mov    DWORD PTR [rax],0x1
   140012a9e:	mov    eax,DWORD PTR [rbp-0x30]
   140012aa1:	mov    QWORD PTR [rsp+0x30],rdi
   140012aa6:	mov    DWORD PTR [rsp+0x28],eax
   140012aaa:	lea    r9,[rbp-0x18]
   140012aae:	mov    edx,r14d
   140012ab1:	mov    DWORD PTR [rsp+0x20],r12d
   140012ab6:	call   QWORD PTR [rip+0x77dc]        # 0x14001a298
   140012abc:	mov    QWORD PTR [rbp-0x20],rax
   140012ac0:	cmp    rax,0xffffffffffffffff
   140012ac4:	jne    0x140012b55
   140012aca:	mov    ecx,0xc0000000
   140012acf:	mov    eax,r14d
   140012ad2:	and    eax,ecx
   140012ad4:	cmp    eax,ecx
   140012ad6:	jne    0x140012b1b
   140012ad8:	mov    eax,0x1
   140012add:	test   al,sil
   140012ae0:	je     0x140012b1b
   140012ae2:	mov    eax,DWORD PTR [rbp-0x30]
   140012ae5:	mov    r8d,DWORD PTR [rbp-0x38]
   140012ae9:	mov    rcx,QWORD PTR [rbp+0x50]
   140012aed:	btr    r14d,0x1f
   140012af2:	mov    QWORD PTR [rsp+0x30],rdi
   140012af7:	mov    DWORD PTR [rsp+0x28],eax
   140012afb:	lea    r9,[rbp-0x18]
   140012aff:	mov    edx,r14d
   140012b02:	mov    DWORD PTR [rsp+0x20],r12d
   140012b07:	mov    DWORD PTR [rbp-0x3c],r14d
   140012b0b:	call   QWORD PTR [rip+0x7787]        # 0x14001a298
   140012b11:	mov    QWORD PTR [rbp-0x20],rax
   140012b15:	cmp    rax,0xffffffffffffffff
   140012b19:	jne    0x140012b55
   140012b1b:	movsxd rcx,DWORD PTR [rbx]
   140012b1e:	lea    r14,[rip+0x12f5b]        # 0x140025a80
   140012b25:	mov    rax,rcx
   140012b28:	and    ecx,0x1f
   140012b2b:	sar    rax,0x5
   140012b2f:	imul   rcx,rcx,0x58
   140012b33:	mov    rax,QWORD PTR [r14+rax*8]
   140012b37:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140012b3c:	call   QWORD PTR [rip+0x752e]        # 0x14001a070
   140012b42:	mov    ecx,eax
   140012b44:	call   0x14000be30
   140012b49:	call   0x14000bdf0
   140012b4e:	mov    edi,DWORD PTR [rax]
   140012b50:	jmp    0x140012fef
   140012b55:	mov    rcx,rax
   140012b58:	call   QWORD PTR [rip+0x76ca]        # 0x14001a228
   140012b5e:	test   eax,eax
   140012b60:	jne    0x140012bad
   140012b62:	movsxd rcx,DWORD PTR [rbx]
   140012b65:	lea    r14,[rip+0x12f14]        # 0x140025a80
   140012b6c:	mov    rax,rcx
   140012b6f:	and    ecx,0x1f
   140012b72:	sar    rax,0x5
   140012b76:	imul   rcx,rcx,0x58
   140012b7a:	mov    rax,QWORD PTR [r14+rax*8]
   140012b7e:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140012b83:	call   QWORD PTR [rip+0x74e7]        # 0x14001a070
   140012b89:	mov    ecx,eax
   140012b8b:	mov    ebx,eax
   140012b8d:	call   0x14000be30
   140012b92:	mov    rcx,QWORD PTR [rbp-0x20]
   140012b96:	call   QWORD PTR [rip+0x74dc]        # 0x14001a078
   140012b9c:	test   ebx,ebx
   140012b9e:	jne    0x140012b49
   140012ba0:	call   0x14000bdf0
   140012ba5:	mov    DWORD PTR [rax],0xd
   140012bab:	jmp    0x140012b49
   140012bad:	cmp    eax,r13d
   140012bb0:	jne    0x140012bb8
   140012bb2:	or     r15b,0x40
   140012bb6:	jmp    0x140012bc1
   140012bb8:	cmp    eax,0x3
   140012bbb:	jne    0x140012bc1
   140012bbd:	or     r15b,0x8
   140012bc1:	mov    rdx,QWORD PTR [rbp-0x20]
   140012bc5:	mov    ecx,DWORD PTR [rbx]
   140012bc7:	call   0x1400115b4
   140012bcc:	movsxd rcx,DWORD PTR [rbx]
   140012bcf:	lea    r14,[rip+0x12eaa]        # 0x140025a80
   140012bd6:	mov    rax,rcx
   140012bd9:	and    ecx,0x1f
   140012bdc:	mov    r8d,0x1
   140012be2:	sar    rax,0x5
   140012be6:	or     r15b,r8b
   140012be9:	mov    rax,QWORD PTR [r14+rax*8]
   140012bed:	imul   rcx,rcx,0x58
   140012bf1:	mov    BYTE PTR [rax+rcx*1+0x8],r15b
   140012bf6:	movsxd rcx,DWORD PTR [rbx]
   140012bf9:	mov    rax,rcx
   140012bfc:	and    ecx,0x1f
   140012bff:	sar    rax,0x5
   140012c03:	imul   rcx,rcx,0x58
   140012c07:	mov    rax,QWORD PTR [r14+rax*8]
   140012c0b:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   140012c10:	mov    al,r15b
   140012c13:	and    al,0x48
   140012c15:	mov    BYTE PTR [rbp-0x2c],al
   140012c18:	jne    0x140012ca0
   140012c1e:	test   r15b,r15b
   140012c21:	jns    0x140012ecb
   140012c27:	test   r13b,sil
   140012c2a:	je     0x140012ca0
   140012c2c:	mov    ecx,DWORD PTR [rbx]
   140012c2e:	mov    r8d,r13d
   140012c31:	or     edx,0xffffffff
   140012c34:	call   0x14001767c
   140012c39:	mov    DWORD PTR [rbp-0x34],eax
   140012c3c:	cmp    eax,0xffffffff
   140012c3f:	jne    0x140012c5a
   140012c41:	call   0x14000be10
   140012c46:	cmp    DWORD PTR [rax],0x83
   140012c4c:	je     0x140012c9a
   140012c4e:	mov    ecx,DWORD PTR [rbx]
   140012c50:	call   0x140010e10
   140012c55:	jmp    0x140012b49
   140012c5a:	mov    ecx,DWORD PTR [rbx]
   140012c5c:	lea    rdx,[rbp-0x40]
   140012c60:	mov    r8d,0x1
   140012c66:	mov    BYTE PTR [rbp-0x40],dil
   140012c6a:	call   0x140016320
   140012c6f:	test   eax,eax
   140012c71:	jne    0x140012c89
   140012c73:	cmp    BYTE PTR [rbp-0x40],0x1a
   140012c77:	jne    0x140012c89
   140012c79:	movsxd rdx,DWORD PTR [rbp-0x34]
   140012c7d:	mov    ecx,DWORD PTR [rbx]
   140012c7f:	call   0x1400174e4
   140012c84:	cmp    eax,0xffffffff
   140012c87:	je     0x140012c4e
   140012c89:	mov    ecx,DWORD PTR [rbx]
   140012c8b:	xor    r8d,r8d
   140012c8e:	xor    edx,edx
   140012c90:	call   0x14001767c
   140012c95:	cmp    eax,0xffffffff
   140012c98:	je     0x140012c4e
   140012c9a:	mov    r8d,0x1
   140012ca0:	test   r15b,r15b
   140012ca3:	jns    0x140012ecb
   140012ca9:	mov    edx,0x74000
   140012cae:	mov    ecx,0x4000
   140012cb3:	test   edx,esi
   140012cb5:	jne    0x140012cc4
   140012cb7:	mov    eax,DWORD PTR [rbp-0x28]
   140012cba:	and    eax,edx
   140012cbc:	jne    0x140012cc2
   140012cbe:	or     esi,ecx
   140012cc0:	jmp    0x140012cc4
   140012cc2:	or     esi,eax
   140012cc4:	mov    eax,esi
   140012cc6:	and    eax,edx
   140012cc8:	cmp    eax,ecx
   140012cca:	je     0x140012d0f
   140012ccc:	cmp    eax,0x10000
   140012cd1:	je     0x140012cfc
   140012cd3:	cmp    eax,0x14000
   140012cd8:	je     0x140012cfc
   140012cda:	cmp    eax,0x20000
   140012cdf:	je     0x140012d09
   140012ce1:	cmp    eax,0x24000
   140012ce6:	je     0x140012d09
   140012ce8:	cmp    eax,0x40000
   140012ced:	je     0x140012cf6
   140012cef:	cmp    eax,0x44000
   140012cf4:	jne    0x140012d13
   140012cf6:	mov    BYTE PTR [rbp+0x58],r8b
   140012cfa:	jmp    0x140012d13
   140012cfc:	mov    ecx,0x301
   140012d01:	mov    eax,esi
   140012d03:	and    eax,ecx
   140012d05:	cmp    eax,ecx
   140012d07:	jne    0x140012d13
   140012d09:	mov    BYTE PTR [rbp+0x58],r13b
   140012d0d:	jmp    0x140012d13
   140012d0f:	mov    BYTE PTR [rbp+0x58],dil
   140012d13:	test   esi,0x70000
   140012d19:	je     0x140012ecb
   140012d1f:	test   r15b,0x40
   140012d23:	mov    r15d,DWORD PTR [rbp-0x3c]
   140012d27:	mov    DWORD PTR [rbp-0x34],edi
   140012d2a:	jne    0x140012ecf
   140012d30:	mov    eax,r15d
   140012d33:	mov    ecx,0xc0000000
   140012d38:	and    eax,ecx
   140012d3a:	cmp    eax,0x40000000
   140012d3f:	je     0x140012e52
   140012d45:	cmp    eax,0x80000000
   140012d4a:	je     0x140012dbc
   140012d4c:	cmp    eax,ecx
   140012d4e:	jne    0x140012ecf
   140012d54:	test   r12d,r12d
   140012d57:	je     0x140012ecf
   140012d5d:	cmp    r12d,r13d
   140012d60:	jbe    0x140012d72
   140012d62:	cmp    r12d,0x4
   140012d66:	jbe    0x140012d95
   140012d68:	cmp    r12d,0x5
   140012d6c:	jne    0x140012ecf
   140012d72:	movsx  ecx,BYTE PTR [rbp+0x58]
   140012d76:	mov    r12d,edi
   140012d79:	dec    ecx
   140012d7b:	je     0x140012e96
   140012d81:	dec    ecx
   140012d83:	jne    0x140012ecf
   140012d89:	mov    DWORD PTR [rbp-0x34],0xfeff
   140012d90:	jmp    0x140012ea3
   140012d95:	mov    ecx,DWORD PTR [rbx]
   140012d97:	mov    r8d,r13d
   140012d9a:	xor    edx,edx
   140012d9c:	call   0x140015e2c
   140012da1:	test   rax,rax
   140012da4:	je     0x140012d72
   140012da6:	mov    ecx,DWORD PTR [rbx]
   140012da8:	xor    r8d,r8d
   140012dab:	xor    edx,edx
   140012dad:	call   0x140015e2c
   140012db2:	cmp    rax,0xffffffffffffffff
   140012db6:	je     0x140012c4e
   140012dbc:	mov    ecx,DWORD PTR [rbx]
   140012dbe:	lea    rdx,[rbp-0x34]
   140012dc2:	mov    r8d,0x3
   140012dc8:	call   0x140016320
   140012dcd:	cmp    eax,0xffffffff
   140012dd0:	je     0x140012c4e
   140012dd6:	cmp    eax,r13d
   140012dd9:	je     0x140012df6
   140012ddb:	cmp    eax,0x3
   140012dde:	jne    0x140012e41
   140012de0:	cmp    DWORD PTR [rbp-0x34],0xbfbbef
   140012de7:	jne    0x140012df6
   140012de9:	lea    r8d,[rax-0x2]
   140012ded:	mov    BYTE PTR [rbp+0x58],r8b
   140012df1:	jmp    0x140012ed5
   140012df6:	movzx  eax,WORD PTR [rbp-0x34]
   140012dfa:	cmp    eax,0xfffe
   140012dff:	jne    0x140012e1b
   140012e01:	mov    ecx,DWORD PTR [rbx]
   140012e03:	call   0x140010e10
   140012e08:	call   0x14000bdf0
   140012e0d:	mov    ebx,0x16
   140012e12:	mov    DWORD PTR [rax],ebx
   140012e14:	mov    edi,ebx
   140012e16:	jmp    0x140012fef
   140012e1b:	cmp    eax,0xfeff
   140012e20:	jne    0x140012e41
   140012e22:	mov    ecx,DWORD PTR [rbx]
   140012e24:	xor    r8d,r8d
   140012e27:	mov    edx,r13d
   140012e2a:	call   0x14001767c
   140012e2f:	cmp    eax,0xffffffff
   140012e32:	je     0x140012c4e
   140012e38:	mov    BYTE PTR [rbp+0x58],r13b
   140012e3c:	jmp    0x140012ecf
   140012e41:	mov    ecx,DWORD PTR [rbx]
   140012e43:	xor    r8d,r8d
   140012e46:	xor    edx,edx
   140012e48:	call   0x14001767c
   140012e4d:	cmp    eax,0xffffffff
   140012e50:	jmp    0x140012e8f
   140012e52:	test   r12d,r12d
   140012e55:	je     0x140012ecf
   140012e57:	cmp    r12d,r13d
   140012e5a:	jbe    0x140012d72
   140012e60:	cmp    r12d,0x4
   140012e64:	ja     0x140012d68
   140012e6a:	mov    ecx,DWORD PTR [rbx]
   140012e6c:	mov    r8d,r13d
   140012e6f:	xor    edx,edx
   140012e71:	call   0x140015e2c
   140012e76:	test   rax,rax
   140012e79:	je     0x140012d72
   140012e7f:	mov    ecx,DWORD PTR [rbx]
   140012e81:	xor    r8d,r8d
   140012e84:	xor    edx,edx
   140012e86:	call   0x140015e2c
   140012e8b:	cmp    rax,0xffffffffffffffff
   140012e8f:	jne    0x140012ecf
   140012e91:	jmp    0x140012c4e
   140012e96:	mov    DWORD PTR [rbp-0x34],0xbfbbef
   140012e9d:	mov    r13d,0x3
   140012ea3:	mov    ecx,DWORD PTR [rbx]
   140012ea5:	movsxd rax,r12d
   140012ea8:	mov    r8d,r13d
   140012eab:	lea    rdx,[rbp+rax*1-0x34]
   140012eb0:	sub    r8d,r12d
   140012eb3:	call   0x1400121bc
   140012eb8:	cmp    eax,0xffffffff
   140012ebb:	je     0x140012c4e
   140012ec1:	add    r12d,eax
   140012ec4:	cmp    r13d,r12d
   140012ec7:	jg     0x140012ea3
   140012ec9:	jmp    0x140012ecf
   140012ecb:	mov    r15d,DWORD PTR [rbp-0x3c]
   140012ecf:	mov    r8d,0x1
   140012ed5:	movsxd rcx,DWORD PTR [rbx]
   140012ed8:	mov    r12b,BYTE PTR [rbp+0x58]
   140012edc:	mov    rax,rcx
   140012edf:	and    ecx,0x1f
   140012ee2:	and    r12b,0x7f
   140012ee6:	sar    rax,0x5
   140012eea:	imul   rcx,rcx,0x58
   140012eee:	mov    rax,QWORD PTR [r14+rax*8]
   140012ef2:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   140012ef7:	or     BYTE PTR [rax+rcx*1+0x38],r12b
   140012efc:	movsxd rdx,DWORD PTR [rbx]
   140012eff:	mov    rax,rdx
   140012f02:	and    edx,0x1f
   140012f05:	sar    rax,0x5
   140012f09:	imul   rdx,rdx,0x58
   140012f0d:	mov    rcx,QWORD PTR [r14+rax*8]
   140012f11:	mov    eax,esi
   140012f13:	and    BYTE PTR [rcx+rdx*1+0x38],0x7f
   140012f18:	shr    eax,0x10
   140012f1b:	shl    al,0x7
   140012f1e:	or     BYTE PTR [rcx+rdx*1+0x38],al
   140012f22:	cmp    BYTE PTR [rbp-0x2c],dil
   140012f26:	jne    0x140012f48
   140012f28:	test   sil,0x8
   140012f2c:	je     0x140012f48
   140012f2e:	movsxd rcx,DWORD PTR [rbx]
   140012f31:	mov    rax,rcx
   140012f34:	and    ecx,0x1f
   140012f37:	sar    rax,0x5
   140012f3b:	imul   rcx,rcx,0x58
   140012f3f:	mov    rax,QWORD PTR [r14+rax*8]
   140012f43:	or     BYTE PTR [rax+rcx*1+0x8],0x20
   140012f48:	mov    ecx,0xc0000000
   140012f4d:	mov    eax,r15d
   140012f50:	and    eax,ecx
   140012f52:	cmp    eax,ecx
   140012f54:	jne    0x140012fef
   140012f5a:	test   r8b,sil
   140012f5d:	je     0x140012fef
   140012f63:	mov    rcx,QWORD PTR [rbp-0x20]
   140012f67:	call   QWORD PTR [rip+0x710b]        # 0x14001a078
   140012f6d:	mov    eax,DWORD PTR [rbp-0x30]
   140012f70:	mov    r8d,DWORD PTR [rbp-0x38]
   140012f74:	mov    rcx,QWORD PTR [rbp+0x50]
   140012f78:	mov    QWORD PTR [rsp+0x30],rdi
   140012f7d:	mov    DWORD PTR [rsp+0x28],eax
   140012f81:	btr    r15d,0x1f
   140012f86:	lea    r9,[rbp-0x18]
   140012f8a:	mov    DWORD PTR [rsp+0x20],0x3
   140012f92:	mov    edx,r15d
   140012f95:	call   QWORD PTR [rip+0x72fd]        # 0x14001a298
   140012f9b:	cmp    rax,0xffffffffffffffff
   140012f9f:	jne    0x140012fd6
   140012fa1:	call   QWORD PTR [rip+0x70c9]        # 0x14001a070
   140012fa7:	mov    ecx,eax
   140012fa9:	call   0x14000be30
   140012fae:	movsxd r11,DWORD PTR [rbx]
   140012fb1:	mov    rax,r11
   140012fb4:	and    r11d,0x1f
   140012fb8:	sar    rax,0x5
   140012fbc:	imul   r11,r11,0x58
   140012fc0:	mov    rax,QWORD PTR [r14+rax*8]
   140012fc4:	and    BYTE PTR [rax+r11*1+0x8],0xfe
   140012fca:	mov    ecx,DWORD PTR [rbx]
   140012fcc:	call   0x140011664
   140012fd1:	jmp    0x140012b49
   140012fd6:	movsxd rdx,DWORD PTR [rbx]
   140012fd9:	mov    rcx,rdx
   140012fdc:	and    edx,0x1f
   140012fdf:	sar    rcx,0x5
   140012fe3:	imul   rdx,rdx,0x58
   140012fe7:	mov    rcx,QWORD PTR [r14+rcx*8]
   140012feb:	mov    QWORD PTR [rdx+rcx*1],rax
   140012fef:	mov    eax,edi
   140012ff1:	jmp    0x140012924
   140012ff6:	xor    r9d,r9d
   140012ff9:	xor    r8d,r8d
   140012ffc:	xor    edx,edx
   140012ffe:	xor    ecx,ecx
   140013000:	mov    QWORD PTR [rsp+0x20],rdi
   140013005:	call   0x14000cfa8
   14001300a:	int3   
   14001300b:	int3   
   14001300c:	mov    rax,rsp
   14001300f:	mov    DWORD PTR [rax+0x10],edx
   140013012:	mov    QWORD PTR [rax+0x18],r8
   140013016:	mov    QWORD PTR [rax+0x20],r9
   14001301a:	push   rbx
   14001301b:	push   rdi
   14001301c:	sub    rsp,0x48
   140013020:	or     DWORD PTR [rax-0x28],0xffffffff
   140013024:	and    DWORD PTR [rax-0x24],0x0
   140013028:	xor    r8d,r8d
   14001302b:	test   rcx,rcx
   14001302e:	setne  r8b
   140013032:	test   r8d,r8d
   140013035:	jne    0x14001304f
   140013037:	call   0x14000bdf0
   14001303c:	mov    DWORD PTR [rax],0x16
   140013042:	call   0x14000d04c
   140013047:	or     eax,0xffffffff
   14001304a:	jmp    0x1400130da
   14001304f:	lea    rax,[rsp+0x70]
   140013054:	add    rax,0x8
   140013058:	mov    r8d,DWORD PTR [rax-0x8]
   14001305c:	mov    DWORD PTR [rsp+0x28],r8d
   140013061:	mov    DWORD PTR [rsp+0x20],0x40
   140013069:	mov    r9d,edx
   14001306c:	mov    r8,rcx
   14001306f:	lea    rdx,[rsp+0x30]
   140013074:	lea    rcx,[rsp+0x34]
   140013079:	call   0x140012864
   14001307e:	mov    edi,eax
   140013080:	mov    DWORD PTR [rsp+0x38],eax
   140013084:	cmp    DWORD PTR [rsp+0x34],0x0
   140013089:	je     0x1400130c4
   14001308b:	test   eax,eax
   14001308d:	je     0x1400130b7
   14001308f:	movsxd rbx,DWORD PTR [rsp+0x30]
   140013094:	mov    rcx,rbx
   140013097:	mov    rax,rbx
   14001309a:	sar    rax,0x5
   14001309e:	lea    rdx,[rip+0x129db]        # 0x140025a80
   1400130a5:	and    ecx,0x1f
   1400130a8:	imul   rcx,rcx,0x58
   1400130ac:	mov    rax,QWORD PTR [rdx+rax*8]
   1400130b0:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   1400130b5:	jmp    0x1400130bb
   1400130b7:	mov    ebx,DWORD PTR [rsp+0x30]
   1400130bb:	mov    ecx,ebx
   1400130bd:	call   0x14001182c
   1400130c2:	jmp    0x1400130c8
   1400130c4:	mov    ebx,DWORD PTR [rsp+0x30]
   1400130c8:	test   edi,edi
   1400130ca:	je     0x1400130d8
   1400130cc:	call   0x14000bdf0
   1400130d1:	mov    DWORD PTR [rax],edi
   1400130d3:	jmp    0x140013047
   1400130d8:	mov    eax,ebx
   1400130da:	add    rsp,0x48
   1400130de:	pop    rdi
   1400130df:	pop    rbx
   1400130e0:	ret    
   1400130e1:	int3   
   1400130e2:	int3   
   1400130e3:	int3   
   1400130e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400130e9:	push   rdi
   1400130ea:	sub    rsp,0x40
   1400130ee:	and    DWORD PTR [rsp+0x30],0x0
   1400130f3:	xor    eax,eax
   1400130f5:	mov    rdi,QWORD PTR [rsp+0x70]
   1400130fa:	test   rdi,rdi
   1400130fd:	setne  al
   140013100:	test   eax,eax
   140013102:	jne    0x14001311c
   140013104:	call   0x14000bdf0
   140013109:	mov    ebx,0x16
   14001310e:	mov    DWORD PTR [rax],ebx
   140013110:	call   0x14000d04c
   140013115:	mov    eax,ebx
   140013117:	jmp    0x1400131ab
   14001311c:	or     DWORD PTR [rdi],0xffffffff
   14001311f:	xor    eax,eax
   140013121:	test   rcx,rcx
   140013124:	setne  al
   140013127:	test   eax,eax
   140013129:	je     0x140013104
   14001312b:	cmp    DWORD PTR [rsp+0x78],0x0
   140013130:	je     0x140013145
   140013132:	test   r9d,0xfffffe7f
   140013139:	mov    eax,0x0
   14001313e:	sete   al
   140013141:	test   eax,eax
   140013143:	je     0x140013104
   140013145:	mov    DWORD PTR [rsp+0x28],r9d
   14001314a:	mov    DWORD PTR [rsp+0x20],r8d
   14001314f:	mov    r9d,edx
   140013152:	mov    r8,rcx
   140013155:	mov    rdx,rdi
   140013158:	lea    rcx,[rsp+0x30]
   14001315d:	call   0x140012864
   140013162:	mov    ebx,eax
   140013164:	mov    DWORD PTR [rsp+0x34],eax
   140013168:	cmp    DWORD PTR [rsp+0x30],0x0
   14001316d:	je     0x14001319b
   14001316f:	test   eax,eax
   140013171:	je     0x140013194
   140013173:	movsxd rcx,DWORD PTR [rdi]
   140013176:	mov    rax,rcx
   140013179:	sar    rax,0x5
   14001317d:	lea    rdx,[rip+0x128fc]        # 0x140025a80
   140013184:	and    ecx,0x1f
   140013187:	imul   rcx,rcx,0x58
   14001318b:	mov    rax,QWORD PTR [rdx+rax*8]
   14001318f:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140013194:	mov    ecx,DWORD PTR [rdi]
   140013196:	call   0x14001182c
   14001319b:	test   ebx,ebx
   14001319d:	je     0x140013115
   1400131a3:	or     DWORD PTR [rdi],0xffffffff
   1400131a6:	jmp    0x140013115
   1400131ab:	mov    rbx,QWORD PTR [rsp+0x50]
   1400131b0:	add    rsp,0x40
   1400131b4:	pop    rdi
   1400131b5:	ret    
   1400131b6:	int3   
   1400131b7:	int3   
   1400131b8:	sub    rsp,0x38
   1400131bc:	mov    eax,r9d
   1400131bf:	mov    r9d,DWORD PTR [rsp+0x60]
   1400131c4:	mov    r10d,r8d
   1400131c7:	mov    r11,rdx
   1400131ca:	mov    DWORD PTR [rsp+0x28],0x1
   1400131d2:	mov    QWORD PTR [rsp+0x20],rcx
   1400131d7:	mov    r8d,eax
   1400131da:	mov    edx,r10d
   1400131dd:	mov    rcx,r11
   1400131e0:	call   0x1400130e4
   1400131e5:	add    rsp,0x38
   1400131e9:	ret    
   1400131ea:	int3   
   1400131eb:	int3   
   1400131ec:	rex push rbp
   1400131ee:	push   rbx
   1400131ef:	push   rsi
   1400131f0:	push   rdi
   1400131f1:	push   r12
   1400131f3:	push   r13
   1400131f5:	push   r14
   1400131f7:	push   r15
   1400131f9:	mov    rbp,rsp
   1400131fc:	sub    rsp,0x78
   140013200:	mov    rax,QWORD PTR [rip+0xfeb9]        # 0x1400230c0
   140013207:	xor    rax,rsp
   14001320a:	mov    QWORD PTR [rbp-0x10],rax
   14001320e:	xor    edi,edi
   140013210:	lea    ebx,[rcx-0x76c]
   140013216:	movsxd r15,r9d
   140013219:	movsxd rsi,edx
   14001321c:	mov    DWORD PTR [rbp-0x48],edi
   14001321f:	mov    DWORD PTR [rbp-0x44],edi
   140013222:	mov    DWORD PTR [rbp-0x40],edi
   140013225:	cmp    ebx,0x46
   140013228:	jl     0x14001348a
   14001322e:	cmp    ebx,0x44c
   140013234:	jg     0x14001348a
   14001323a:	lea    eax,[rsi-0x1]
   14001323d:	cmp    eax,0xb
   140013240:	ja     0x14001348a
   140013246:	cmp    r15d,0x17
   14001324a:	ja     0x14001348a
   140013250:	movsxd r13,DWORD PTR [rbp+0x68]
   140013254:	cmp    r13d,0x3b
   140013258:	ja     0x14001348a
   14001325e:	movsxd r14,DWORD PTR [rbp+0x70]
   140013262:	cmp    r14d,0x3b
   140013266:	ja     0x14001348a
   14001326c:	lea    r10d,[rdi+0x1]
   140013270:	cmp    r8d,r10d
   140013273:	jl     0x14001348a
   140013279:	lea    rcx,[rip+0x11388]        # 0x140024608
   140013280:	mov    r11d,0x51eb851f
   140013286:	mov    r9d,DWORD PTR [rcx+rsi*4-0x4]
   14001328b:	mov    ecx,DWORD PTR [rcx+rsi*4]
   14001328e:	sub    ecx,r9d
   140013291:	cmp    ecx,r8d
   140013294:	jge    0x1400132f8
   140013296:	mov    eax,ebx
   140013298:	and    eax,0x80000003
   14001329d:	jge    0x1400132a8
   14001329f:	sub    eax,r10d
   1400132a2:	or     eax,0xfffffffc
   1400132a5:	add    eax,r10d
   1400132a8:	test   eax,eax
   1400132aa:	jne    0x1400132c2
   1400132ac:	mov    eax,r11d
   1400132af:	imul   ebx
   1400132b1:	sar    edx,0x5
   1400132b4:	mov    eax,edx
   1400132b6:	shr    eax,0x1f
   1400132b9:	add    edx,eax
   1400132bb:	imul   edx,edx,0x64
   1400132be:	cmp    ebx,edx
   1400132c0:	jne    0x1400132e5
   1400132c2:	lea    ecx,[rbx+0x76c]
   1400132c8:	mov    eax,r11d
   1400132cb:	imul   ecx
   1400132cd:	sar    edx,0x7
   1400132d0:	mov    eax,edx
   1400132d2:	shr    eax,0x1f
   1400132d5:	add    edx,eax
   1400132d7:	imul   edx,edx,0x190
   1400132dd:	cmp    ecx,edx
   1400132df:	jne    0x14001348a
   1400132e5:	cmp    esi,0x2
   1400132e8:	jne    0x14001348a
   1400132ee:	cmp    r8d,0x1d
   1400132f2:	jg     0x14001348a
   1400132f8:	mov    eax,ebx
   1400132fa:	lea    r12d,[r9+r8*1]
   1400132fe:	and    eax,0x80000003
   140013303:	jge    0x14001330e
   140013305:	sub    eax,r10d
   140013308:	or     eax,0xfffffffc
   14001330b:	add    eax,r10d
   14001330e:	test   eax,eax
   140013310:	jne    0x140013328
   140013312:	mov    eax,r11d
   140013315:	imul   ebx
   140013317:	sar    edx,0x5
   14001331a:	mov    eax,edx
   14001331c:	shr    eax,0x1f
   14001331f:	add    edx,eax
   140013321:	imul   edx,edx,0x64
   140013324:	cmp    ebx,edx
   140013326:	jne    0x140013347
   140013328:	lea    ecx,[rbx+0x76c]
   14001332e:	mov    eax,r11d
   140013331:	imul   ecx
   140013333:	sar    edx,0x7
   140013336:	mov    eax,edx
   140013338:	shr    eax,0x1f
   14001333b:	add    edx,eax
   14001333d:	imul   edx,edx,0x190
   140013343:	cmp    ecx,edx
   140013345:	jne    0x14001334f
   140013347:	cmp    esi,0x2
   14001334a:	jle    0x14001334f
   14001334c:	add    r12d,r10d
   14001334f:	call   0x1400182f4
   140013354:	lea    rcx,[rbp-0x48]
   140013358:	call   0x140018360
   14001335d:	test   eax,eax
   14001335f:	jne    0x140013475
   140013365:	lea    rcx,[rbp-0x44]
   140013369:	call   0x140018390
   14001336e:	test   eax,eax
   140013370:	jne    0x140013460
   140013376:	lea    rcx,[rbp-0x40]
   14001337a:	call   0x1400183c0
   14001337f:	test   eax,eax
   140013381:	jne    0x14001344b
   140013387:	lea    ecx,[rbx+0x12b]
   14001338d:	mov    r10d,0x51eb851f
   140013393:	lea    r8d,[rbx-0x1]
   140013397:	mov    eax,r10d
   14001339a:	mov    DWORD PTR [rbp-0x1c],r12d
   14001339e:	mov    DWORD PTR [rbp-0x24],ebx
   1400133a1:	mov    DWORD PTR [rbp-0x30],r15d
   1400133a5:	mov    DWORD PTR [rbp-0x34],r13d
   1400133a9:	mov    DWORD PTR [rbp-0x38],r14d
   1400133ad:	imul   ecx
   1400133af:	mov    r9d,edx
   1400133b2:	mov    eax,r10d
   1400133b5:	sar    r9d,0x7
   1400133b9:	mov    ecx,r9d
   1400133bc:	shr    ecx,0x1f
   1400133bf:	add    r9d,ecx
   1400133c2:	imul   r8d
   1400133c5:	sar    edx,0x5
   1400133c8:	mov    eax,r8d
   1400133cb:	mov    ecx,edx
   1400133cd:	shr    ecx,0x1f
   1400133d0:	add    edx,ecx
   1400133d2:	sub    r9d,edx
   1400133d5:	cdq    
   1400133d6:	and    edx,0x3
   1400133d9:	add    eax,edx
   1400133db:	sar    eax,0x2
   1400133de:	lea    ecx,[r9+rax*1-0x11]
   1400133e3:	movsxd rax,ebx
   1400133e6:	sub    rax,0x46
   1400133ea:	movsxd rdx,ecx
   1400133ed:	imul   rax,rax,0x16d
   1400133f4:	add    rdx,rax
   1400133f7:	movsxd rax,r12d
   1400133fa:	add    rdx,rax
   1400133fd:	movsxd rax,DWORD PTR [rbp-0x40]
   140013401:	lea    rcx,[rdx+rdx*2]
   140013405:	lea    rdi,[r15+rcx*8]
   140013409:	imul   rdi,rdi,0x3c
   14001340d:	add    rdi,r13
   140013410:	imul   rdi,rdi,0x3c
   140013414:	add    rdi,rax
   140013417:	lea    eax,[rsi-0x1]
   14001341a:	add    rdi,r14
   14001341d:	cmp    DWORD PTR [rbp+0x78],0x1
   140013421:	mov    DWORD PTR [rbp-0x28],eax
   140013424:	je     0x14001343f
   140013426:	cmp    DWORD PTR [rbp+0x78],0xffffffff
   14001342a:	jne    0x140013446
   14001342c:	cmp    DWORD PTR [rbp-0x48],0x0
   140013430:	je     0x140013446
   140013432:	lea    rcx,[rbp-0x38]
   140013436:	call   0x140018330
   14001343b:	test   eax,eax
   14001343d:	je     0x140013446
   14001343f:	movsxd rcx,DWORD PTR [rbp-0x44]
   140013443:	add    rdi,rcx
   140013446:	mov    rax,rdi
   140013449:	jmp    0x140013499
   14001344b:	xor    r9d,r9d
   14001344e:	xor    r8d,r8d
   140013451:	xor    edx,edx
   140013453:	xor    ecx,ecx
   140013455:	mov    QWORD PTR [rsp+0x20],rdi
   14001345a:	call   0x14000cfa8
   14001345f:	int3   
   140013460:	xor    r9d,r9d
   140013463:	xor    r8d,r8d
   140013466:	xor    edx,edx
   140013468:	xor    ecx,ecx
   14001346a:	mov    QWORD PTR [rsp+0x20],rdi
   14001346f:	call   0x14000cfa8
   140013474:	int3   
   140013475:	xor    r9d,r9d
   140013478:	xor    r8d,r8d
   14001347b:	xor    edx,edx
   14001347d:	xor    ecx,ecx
   14001347f:	mov    QWORD PTR [rsp+0x20],rdi
   140013484:	call   0x14000cfa8
   140013489:	int3   
   14001348a:	call   0x14000bdf0
   14001348f:	mov    DWORD PTR [rax],0x16
   140013495:	or     rax,0xffffffffffffffff
   140013499:	mov    rcx,QWORD PTR [rbp-0x10]
   14001349d:	xor    rcx,rsp
   1400134a0:	call   0x14000a850
   1400134a5:	add    rsp,0x78
   1400134a9:	pop    r15
   1400134ab:	pop    r14
   1400134ad:	pop    r13
   1400134af:	pop    r12
   1400134b1:	pop    rdi
   1400134b2:	pop    rsi
   1400134b3:	pop    rbx
   1400134b4:	pop    rbp
   1400134b5:	ret    
   1400134b6:	int3   
   1400134b7:	int3   
   1400134b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400134bd:	mov    QWORD PTR [rsp+0x10],rbp
   1400134c2:	mov    QWORD PTR [rsp+0x18],rsi
   1400134c7:	push   rdi
   1400134c8:	sub    rsp,0x240
   1400134cf:	mov    rax,QWORD PTR [rip+0xfbea]        # 0x1400230c0
   1400134d6:	xor    rax,rsp
   1400134d9:	mov    QWORD PTR [rsp+0x230],rax
   1400134e1:	lea    rdx,[rsp+0x20]
   1400134e6:	mov    ecx,0x105
   1400134eb:	lea    rbx,[rsp+0x20]
   1400134f0:	xor    ebp,ebp
   1400134f2:	call   QWORD PTR [rip+0x6da8]        # 0x14001a2a0
   1400134f8:	mov    edi,eax
   1400134fa:	cmp    eax,0x104
   1400134ff:	jle    0x14001353c
   140013501:	lea    esi,[rax+0x1]
   140013504:	lea    edx,[rbp+0x2]
   140013507:	movsxd rcx,esi
   14001350a:	call   0x140010bd0
   14001350f:	mov    rbx,rax
   140013512:	test   rax,rax
   140013515:	jne    0x140013526
   140013517:	call   0x14000bdf0
   14001351c:	xor    edi,edi
   14001351e:	mov    DWORD PTR [rax],0xc
   140013524:	jmp    0x14001353c
   140013526:	mov    ebp,0x1
   14001352b:	test   edi,edi
   14001352d:	je     0x14001353c
   14001352f:	mov    rdx,rax
   140013532:	mov    ecx,esi
   140013534:	call   QWORD PTR [rip+0x6d66]        # 0x14001a2a0
   14001353a:	mov    edi,eax
   14001353c:	xor    esi,esi
   14001353e:	test   edi,edi
   140013540:	je     0x140013565
   140013542:	cmp    WORD PTR [rbx+0x2],0x3a
   140013547:	jne    0x140013570
   140013549:	cmp    WORD PTR [rbx],0x61
   14001354d:	jb     0x14001355d
   14001354f:	cmp    WORD PTR [rbx],0x7a
   140013553:	ja     0x14001355d
   140013555:	movzx  eax,WORD PTR [rbx]
   140013558:	sub    eax,0x20
   14001355b:	jmp    0x140013560
   14001355d:	movzx  eax,WORD PTR [rbx]
   140013560:	lea    esi,[rax-0x40]
   140013563:	jmp    0x140013570
   140013565:	call   0x14000bdf0
   14001356a:	mov    DWORD PTR [rax],0xc
   140013570:	test   ebp,ebp
   140013572:	je     0x14001357c
   140013574:	mov    rcx,rbx
   140013577:	call   0x14000b490
   14001357c:	mov    eax,esi
   14001357e:	mov    rcx,QWORD PTR [rsp+0x230]
   140013586:	xor    rcx,rsp
   140013589:	call   0x14000a850
   14001358e:	lea    r11,[rsp+0x240]
   140013596:	mov    rbx,QWORD PTR [r11+0x10]
   14001359a:	mov    rbp,QWORD PTR [r11+0x18]
   14001359e:	mov    rsi,QWORD PTR [r11+0x20]
   1400135a2:	mov    rsp,r11
   1400135a5:	pop    rdi
   1400135a6:	ret    
   1400135a7:	int3   
   1400135a8:	mov    QWORD PTR [rsp+0x10],rbx
   1400135ad:	push   rbp
   1400135ae:	mov    rbp,rsp
   1400135b1:	sub    rsp,0x70
   1400135b5:	movsxd rbx,ecx
   1400135b8:	lea    rcx,[rbp-0x20]
   1400135bc:	call   0x14000c724
   1400135c1:	mov    rcx,QWORD PTR [rbp-0x18]
   1400135c5:	cmp    ebx,0xff
   1400135cb:	jbe    0x14001365c
   1400135d1:	mov    eax,ebx
   1400135d3:	mov    BYTE PTR [rbp+0x11],bl
   1400135d6:	shr    eax,0x8
   1400135d9:	mov    BYTE PTR [rbp+0x10],al
   1400135dc:	movzx  eax,al
   1400135df:	test   BYTE PTR [rax+rcx*1+0x1d],0x4
   1400135e4:	jne    0x1400135fd
   1400135e6:	cmp    BYTE PTR [rbp-0x8],0x0
   1400135ea:	je     0x14001367c
   1400135f0:	mov    rax,QWORD PTR [rbp-0x10]
   1400135f4:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400135fb:	jmp    0x14001367c
   1400135fd:	mov    eax,DWORD PTR [rcx+0x4]
   140013600:	mov    DWORD PTR [rsp+0x40],0x1
   140013608:	mov    edx,0x2
   14001360d:	mov    DWORD PTR [rsp+0x38],eax
   140013611:	mov    DWORD PTR [rsp+0x30],edx
   140013615:	lea    rax,[rbp+0x20]
   140013619:	mov    QWORD PTR [rsp+0x28],rax
   14001361e:	mov    DWORD PTR [rsp+0x20],edx
   140013622:	mov    edx,DWORD PTR [rcx+0xc]
   140013625:	lea    rcx,[rbp-0x20]
   140013629:	lea    r9,[rbp+0x10]
   14001362d:	mov    r8d,0x100
   140013633:	call   0x1400186dc
   140013638:	test   eax,eax
   14001363a:	je     0x1400135e6
   14001363c:	movzx  eax,BYTE PTR [rbp+0x20]
   140013640:	movzx  ecx,BYTE PTR [rbp+0x21]
   140013644:	shl    eax,0x8
   140013647:	add    eax,ecx
   140013649:	cmp    BYTE PTR [rbp-0x8],0x0
   14001364d:	je     0x14001367e
   14001364f:	mov    rcx,QWORD PTR [rbp-0x10]
   140013653:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001365a:	jmp    0x14001367e
   14001365c:	test   BYTE PTR [rbx+rcx*1+0x1d],0x10
   140013661:	je     0x14001366b
   140013663:	movzx  ebx,BYTE PTR [rbx+rcx*1+0x11d]
   14001366b:	cmp    BYTE PTR [rbp-0x8],0x0
   14001366f:	je     0x14001367c
   140013671:	mov    rcx,QWORD PTR [rbp-0x10]
   140013675:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001367c:	mov    eax,ebx
   14001367e:	mov    rbx,QWORD PTR [rsp+0x88]
   140013686:	add    rsp,0x70
   14001368a:	pop    rbp
   14001368b:	ret    
   14001368c:	xor    edx,edx
   14001368e:	jmp    0x1400135a8
   140013693:	int3   
   140013694:	mov    QWORD PTR [rsp+0x8],rbx
   140013699:	mov    QWORD PTR [rsp+0x10],rsi
   14001369e:	push   rdi
   14001369f:	sub    rsp,0x40
   1400136a3:	mov    rbx,rcx
   1400136a6:	mov    rdi,rdx
   1400136a9:	lea    rcx,[rsp+0x20]
   1400136ae:	mov    rdx,r8
   1400136b1:	call   0x14000c724
   1400136b6:	mov    rdx,QWORD PTR [rsp+0x28]
   1400136bb:	xor    esi,esi
   1400136bd:	cmp    DWORD PTR [rdx+0x8],esi
   1400136c0:	jne    0x1400136d2
   1400136c2:	mov    rdx,rdi
   1400136c5:	mov    rcx,rbx
   1400136c8:	call   0x14000c688
   1400136cd:	jmp    0x140013763
   1400136d2:	test   rbx,rbx
   1400136d5:	jne    0x1400136fe
   1400136d7:	call   0x14000bdf0
   1400136dc:	mov    DWORD PTR [rax],0x16
   1400136e2:	call   0x14000d04c
   1400136e7:	cmp    BYTE PTR [rsp+0x38],sil
   1400136ec:	je     0x1400136fa
   1400136ee:	mov    rax,QWORD PTR [rsp+0x30]
   1400136f3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400136fa:	xor    eax,eax
   1400136fc:	jmp    0x140013776
   1400136fe:	test   rdi,rdi
   140013701:	je     0x1400136d7
   140013703:	jmp    0x140013754
   140013705:	mov    rcx,rdi
   140013708:	cmp    BYTE PTR [rdi],sil
   14001370b:	je     0x14001373a
   14001370d:	movzx  eax,BYTE PTR [rcx]
   140013710:	test   BYTE PTR [rax+rdx*1+0x1d],0x4
   140013715:	je     0x14001372e
   140013717:	cmp    al,BYTE PTR [rbx]
   140013719:	jne    0x140013723
   14001371b:	mov    al,BYTE PTR [rbx+0x1]
   14001371e:	cmp    BYTE PTR [rcx+0x1],al
   140013721:	je     0x14001373a
   140013723:	cmp    BYTE PTR [rcx+0x1],sil
   140013727:	je     0x14001373a
   140013729:	inc    rcx
   14001372c:	jmp    0x140013732
   14001372e:	cmp    al,BYTE PTR [rbx]
   140013730:	je     0x14001373a
   140013732:	inc    rcx
   140013735:	cmp    BYTE PTR [rcx],sil
   140013738:	jne    0x14001370d
   14001373a:	cmp    BYTE PTR [rcx],sil
   14001373d:	jne    0x140013759
   14001373f:	movzx  eax,BYTE PTR [rbx]
   140013742:	test   BYTE PTR [rax+rdx*1+0x1d],0x4
   140013747:	je     0x140013751
   140013749:	inc    rbx
   14001374c:	cmp    BYTE PTR [rbx],sil
   14001374f:	je     0x140013759
   140013751:	inc    rbx
   140013754:	cmp    BYTE PTR [rbx],sil
   140013757:	jne    0x140013705
   140013759:	mov    al,BYTE PTR [rbx]
   14001375b:	neg    al
   14001375d:	sbb    rax,rax
   140013760:	and    rax,rbx
   140013763:	cmp    BYTE PTR [rsp+0x38],sil
   140013768:	je     0x140013776
   14001376a:	mov    rcx,QWORD PTR [rsp+0x30]
   14001376f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140013776:	mov    rbx,QWORD PTR [rsp+0x50]
   14001377b:	mov    rsi,QWORD PTR [rsp+0x58]
   140013780:	add    rsp,0x40
   140013784:	pop    rdi
   140013785:	ret    
   140013786:	int3   
   140013787:	int3   
   140013788:	xor    r8d,r8d
   14001378b:	jmp    0x140013694
   140013790:	rex push rbx
   140013792:	sub    rsp,0x20
   140013796:	xor    ebx,ebx
   140013798:	mov    r10,r8
   14001379b:	test   r9,r9
   14001379e:	jne    0x1400137ae
   1400137a0:	test   rcx,rcx
   1400137a3:	jne    0x1400137b3
   1400137a5:	test   rdx,rdx
   1400137a8:	jne    0x1400137c8
   1400137aa:	xor    eax,eax
   1400137ac:	jmp    0x1400137db
   1400137ae:	test   rcx,rcx
   1400137b1:	je     0x1400137c8
   1400137b3:	test   rdx,rdx
   1400137b6:	je     0x1400137c8
   1400137b8:	test   r9,r9
   1400137bb:	jne    0x1400137c1
   1400137bd:	mov    BYTE PTR [rcx],bl
   1400137bf:	jmp    0x1400137aa
   1400137c1:	test   r8,r8
   1400137c4:	jne    0x1400137e1
   1400137c6:	mov    BYTE PTR [rcx],bl
   1400137c8:	call   0x14000bdf0
   1400137cd:	mov    ebx,0x16
   1400137d2:	mov    DWORD PTR [rax],ebx
   1400137d4:	call   0x14000d04c
   1400137d9:	mov    eax,ebx
   1400137db:	add    rsp,0x20
   1400137df:	pop    rbx
   1400137e0:	ret    
   1400137e1:	mov    r11,rcx
   1400137e4:	mov    r8,rdx
   1400137e7:	cmp    r9,0xffffffffffffffff
   1400137eb:	jne    0x140013805
   1400137ed:	sub    r11,r10
   1400137f0:	mov    al,BYTE PTR [r10]
   1400137f3:	mov    BYTE PTR [r11+r10*1],al
   1400137f7:	inc    r10
   1400137fa:	test   al,al
   1400137fc:	je     0x140013828
   1400137fe:	dec    r8
   140013801:	jne    0x1400137f0
   140013803:	jmp    0x140013828
   140013805:	sub    r10,rcx
   140013808:	mov    al,BYTE PTR [r10+r11*1]
   14001380c:	mov    BYTE PTR [r11],al
   14001380f:	inc    r11
   140013812:	test   al,al
   140013814:	je     0x140013820
   140013816:	dec    r8
   140013819:	je     0x140013820
   14001381b:	dec    r9
   14001381e:	jne    0x140013808
   140013820:	test   r9,r9
   140013823:	jne    0x140013828
   140013825:	mov    BYTE PTR [r11],bl
   140013828:	test   r8,r8
   14001382b:	jne    0x1400137aa
   140013831:	cmp    r9,0xffffffffffffffff
   140013835:	jne    0x140013841
   140013837:	mov    BYTE PTR [rcx+rdx*1-0x1],bl
   14001383b:	lea    eax,[r8+0x50]
   14001383f:	jmp    0x1400137db
   140013841:	mov    BYTE PTR [rcx],bl
   140013843:	call   0x14000bdf0
   140013848:	mov    ebx,0x22
   14001384d:	jmp    0x1400137d2
   14001384f:	int3   
   140013850:	mov    QWORD PTR [rsp+0x18],rbx
   140013855:	mov    DWORD PTR [rsp+0x8],ecx
   140013859:	push   rsi
   14001385a:	push   rdi
   14001385b:	push   r12
   14001385d:	sub    rsp,0x20
   140013861:	movsxd rdi,ecx
   140013864:	cmp    edi,0xfffffffe
   140013867:	jne    0x140013879
   140013869:	call   0x14000bdf0
   14001386e:	mov    DWORD PTR [rax],0x9
   140013874:	jmp    0x140013916
   140013879:	test   ecx,ecx
   14001387b:	js     0x140013906
   140013881:	cmp    edi,DWORD PTR [rip+0x121e5]        # 0x140025a6c
   140013887:	jae    0x140013906
   140013889:	mov    rbx,rdi
   14001388c:	mov    rsi,rdi
   14001388f:	sar    rsi,0x5
   140013893:	lea    r12,[rip+0x121e6]        # 0x140025a80
   14001389a:	and    ebx,0x1f
   14001389d:	imul   rbx,rbx,0x58
   1400138a1:	mov    rax,QWORD PTR [r12+rsi*8]
   1400138a5:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   1400138aa:	and    ecx,0x1
   1400138ad:	je     0x140013906
   1400138af:	mov    ecx,edi
   1400138b1:	call   0x140011784
   1400138b6:	nop
   1400138b7:	mov    rax,QWORD PTR [r12+rsi*8]
   1400138bb:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   1400138c0:	je     0x1400138ed
   1400138c2:	mov    ecx,edi
   1400138c4:	call   0x140011710
   1400138c9:	mov    rcx,rax
   1400138cc:	call   QWORD PTR [rip+0x69d6]        # 0x14001a2a8
   1400138d2:	test   eax,eax
   1400138d4:	jne    0x1400138e0
   1400138d6:	call   QWORD PTR [rip+0x6794]        # 0x14001a070
   1400138dc:	mov    ebx,eax
   1400138de:	jmp    0x1400138e2
   1400138e0:	xor    ebx,ebx
   1400138e2:	test   ebx,ebx
   1400138e4:	je     0x1400138fb
   1400138e6:	call   0x14000be10
   1400138eb:	mov    DWORD PTR [rax],ebx
   1400138ed:	call   0x14000bdf0
   1400138f2:	mov    DWORD PTR [rax],0x9
   1400138f8:	or     ebx,0xffffffff
   1400138fb:	mov    ecx,edi
   1400138fd:	call   0x14001182c
   140013902:	mov    eax,ebx
   140013904:	jmp    0x140013919
   140013906:	call   0x14000bdf0
   14001390b:	mov    DWORD PTR [rax],0x9
   140013911:	call   0x14000d04c
   140013916:	or     eax,0xffffffff
   140013919:	mov    rbx,QWORD PTR [rsp+0x50]
   14001391e:	add    rsp,0x20
   140013922:	pop    r12
   140013924:	pop    rdi
   140013925:	pop    rsi
   140013926:	ret    
   140013927:	int3   
   140013928:	mov    QWORD PTR [rsp+0x18],rbx
   14001392d:	mov    DWORD PTR [rsp+0x10],edx
   140013931:	push   rbp
   140013932:	push   rsi
   140013933:	push   rdi
   140013934:	push   r12
   140013936:	push   r13
   140013938:	push   r14
   14001393a:	push   r15
   14001393c:	sub    rsp,0x30
   140013940:	xor    ebp,ebp
   140013942:	mov    edi,edx
   140013944:	mov    r14,rcx
   140013947:	mov    ebx,ebp
   140013949:	test   rcx,rcx
   14001394c:	jne    0x140013963
   14001394e:	call   0x14000bdf0
   140013953:	mov    DWORD PTR [rax],0x16
   140013959:	call   0x14000d04c
   14001395e:	jmp    0x140013a5d
   140013963:	mov    r12,QWORD PTR [rcx]
   140013966:	test   r12,r12
   140013969:	je     0x140013a52
   14001396f:	mov    edx,0x3d
   140013974:	mov    rcx,r12
   140013977:	call   0x140018c30
   14001397c:	mov    r13,rax
   14001397f:	test   rax,rax
   140013982:	je     0x140013a52
   140013988:	cmp    r12,rax
   14001398b:	je     0x140013a52
   140013991:	cmp    WORD PTR [rax+0x2],bp
   140013995:	mov    rsi,QWORD PTR [rip+0x1100c]        # 0x1400249a8
   14001399c:	mov    r15d,ebp
   14001399f:	sete   r15b
   1400139a3:	cmp    rsi,QWORD PTR [rip+0x11006]        # 0x1400249b0
   1400139aa:	jne    0x140013a1b
   1400139ac:	xor    ecx,ecx
   1400139ae:	mov    rbp,rsi
   1400139b1:	mov    eax,ecx
   1400139b3:	test   rsi,rsi
   1400139b6:	jne    0x1400139c0
   1400139b8:	jmp    0x140013a14
   1400139ba:	add    rsi,0x8
   1400139be:	inc    eax
   1400139c0:	cmp    QWORD PTR [rsi],rcx
   1400139c3:	jne    0x1400139ba
   1400139c5:	inc    eax
   1400139c7:	mov    edx,0x8
   1400139cc:	movsxd rcx,eax
   1400139cf:	call   0x140010bd0
   1400139d4:	mov    rdi,rax
   1400139d7:	mov    rsi,rax
   1400139da:	test   rax,rax
   1400139dd:	jne    0x1400139e7
   1400139df:	lea    ecx,[rax+0x9]
   1400139e2:	call   0x140009c14
   1400139e7:	mov    rax,QWORD PTR [rbp+0x0]
   1400139eb:	test   rax,rax
   1400139ee:	je     0x140013a0b
   1400139f0:	sub    rbp,rdi
   1400139f3:	mov    rcx,rax
   1400139f6:	call   0x140018930
   1400139fb:	mov    QWORD PTR [rdi],rax
   1400139fe:	add    rdi,0x8
   140013a02:	mov    rax,QWORD PTR [rdi+rbp*1]
   140013a06:	test   rax,rax
   140013a09:	jne    0x1400139f3
   140013a0b:	xor    ebp,ebp
   140013a0d:	mov    QWORD PTR [rdi],rbp
   140013a10:	mov    edi,DWORD PTR [rsp+0x78]
   140013a14:	mov    QWORD PTR [rip+0x10f8d],rsi        # 0x1400249a8
   140013a1b:	test   rsi,rsi
   140013a1e:	jne    0x140013ac9
   140013a24:	mov    rax,QWORD PTR [rip+0x10f6d]        # 0x140024998
   140013a2b:	test   edi,edi
   140013a2d:	je     0x140013a78
   140013a2f:	test   rax,rax
   140013a32:	je     0x140013a78
   140013a34:	call   0x140018ba8
   140013a39:	mov    QWORD PTR [rip+0x10fa8],rax        # 0x1400249e8
   140013a40:	call   0x140018a70
   140013a45:	test   eax,eax
   140013a47:	jns    0x140013ac2
   140013a49:	call   0x1400189a8
   140013a4e:	test   eax,eax
   140013a50:	je     0x140013ac2
   140013a52:	call   0x14000bdf0
   140013a57:	mov    DWORD PTR [rax],0x16
   140013a5d:	or     eax,0xffffffff
   140013a60:	mov    rbx,QWORD PTR [rsp+0x80]
   140013a68:	add    rsp,0x30
   140013a6c:	pop    r15
   140013a6e:	pop    r14
   140013a70:	pop    r13
   140013a72:	pop    r12
   140013a74:	pop    rdi
   140013a75:	pop    rsi
   140013a76:	pop    rbp
   140013a77:	ret    
   140013a78:	test   r15d,r15d
   140013a7b:	je     0x140013a81
   140013a7d:	xor    eax,eax
   140013a7f:	jmp    0x140013a60
   140013a81:	test   rax,rax
   140013a84:	jne    0x140013aa9
   140013a86:	lea    ecx,[rax+0x8]
   140013a89:	call   0x140010b50
   140013a8e:	mov    QWORD PTR [rip+0x10f03],rax        # 0x140024998
   140013a95:	test   rax,rax
   140013a98:	je     0x140013a5d
   140013a9a:	mov    QWORD PTR [rax],rbp
   140013a9d:	mov    rsi,QWORD PTR [rip+0x10f04]        # 0x1400249a8
   140013aa4:	test   rsi,rsi
   140013aa7:	jne    0x140013ac9
   140013aa9:	mov    ecx,0x8
   140013aae:	call   0x140010b50
   140013ab3:	mov    QWORD PTR [rip+0x10eee],rax        # 0x1400249a8
   140013aba:	test   rax,rax
   140013abd:	je     0x140013a5d
   140013abf:	mov    QWORD PTR [rax],rbp
   140013ac2:	mov    rsi,QWORD PTR [rip+0x10edf]        # 0x1400249a8
   140013ac9:	mov    rbp,rsi
   140013acc:	test   rsi,rsi
   140013acf:	je     0x140013a5d
   140013ad1:	mov    rax,QWORD PTR [rsi]
   140013ad4:	sub    r13,r12
   140013ad7:	mov    rdi,rsi
   140013ada:	sar    r13,1
   140013add:	mov    QWORD PTR [rsp+0x70],r13
   140013ae2:	movsxd r13,r13d
   140013ae5:	test   rax,rax
   140013ae8:	je     0x140013b2f
   140013aea:	mov    esi,0x3d
   140013aef:	mov    r8,r13
   140013af2:	mov    rdx,rax
   140013af5:	mov    rcx,r12
   140013af8:	call   0x14001889c
   140013afd:	xor    ecx,ecx
   140013aff:	test   eax,eax
   140013b01:	jne    0x140013b1c
   140013b03:	mov    rax,QWORD PTR [rdi]
   140013b06:	cmp    WORD PTR [rax+r13*2],si
   140013b0b:	je     0x140013bb2
   140013b11:	cmp    WORD PTR [rax+r13*2],cx
   140013b16:	je     0x140013bb2
   140013b1c:	add    rdi,0x8
   140013b20:	mov    rax,QWORD PTR [rdi]
   140013b23:	test   rax,rax
   140013b26:	jne    0x140013aef
   140013b28:	mov    rsi,QWORD PTR [rip+0x10e79]        # 0x1400249a8
   140013b2f:	sub    rdi,rsi
   140013b32:	sar    rdi,0x3
   140013b36:	neg    edi
   140013b38:	xor    r13d,r13d
   140013b3b:	test   edi,edi
   140013b3d:	js     0x140013bcf
   140013b43:	cmp    QWORD PTR [rbp+0x0],r13
   140013b47:	je     0x140013bcf
   140013b4d:	movsxd rsi,edi
   140013b50:	mov    rcx,QWORD PTR [rbp+rsi*8+0x0]
   140013b55:	call   0x14000b490
   140013b5a:	test   r15d,r15d
   140013b5d:	je     0x140013bc5
   140013b5f:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   140013b64:	je     0x140013b83
   140013b66:	lea    rcx,[rbp+rsi*8+0x8]
   140013b6b:	mov    rax,QWORD PTR [rcx]
   140013b6e:	inc    edi
   140013b70:	add    rcx,0x8
   140013b74:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
   140013b79:	inc    rsi
   140013b7c:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   140013b81:	jne    0x140013b6b
   140013b83:	movsxd rdx,edi
   140013b86:	movabs rax,0x1fffffffffffffff
   140013b90:	cmp    rdx,rax
   140013b93:	jae    0x140013c2b
   140013b99:	mov    rcx,QWORD PTR [rip+0x10e08]        # 0x1400249a8
   140013ba0:	mov    r8d,0x8
   140013ba6:	call   0x140010cdc
   140013bab:	test   rax,rax
   140013bae:	je     0x140013c2b
   140013bb0:	jmp    0x140013c24
   140013bb2:	mov    rsi,QWORD PTR [rip+0x10def]        # 0x1400249a8
   140013bb9:	sub    rdi,rsi
   140013bbc:	sar    rdi,0x3
   140013bc0:	jmp    0x140013b38
   140013bc5:	mov    QWORD PTR [rbp+rsi*8+0x0],r12
   140013bca:	mov    QWORD PTR [r14],r13
   140013bcd:	jmp    0x140013c2b
   140013bcf:	test   r15d,r15d
   140013bd2:	jne    0x140013cd3
   140013bd8:	test   edi,edi
   140013bda:	jns    0x140013bde
   140013bdc:	neg    edi
   140013bde:	lea    eax,[rdi+0x2]
   140013be1:	cmp    eax,edi
   140013be3:	jl     0x140013a5d
   140013be9:	movsxd r8,eax
   140013bec:	movabs rax,0x1fffffffffffffff
   140013bf6:	cmp    r8,rax
   140013bf9:	jae    0x140013a5d
   140013bff:	mov    edx,0x8
   140013c04:	mov    rcx,rsi
   140013c07:	call   0x140010cdc
   140013c0c:	test   rax,rax
   140013c0f:	je     0x140013a5d
   140013c15:	movsxd rcx,edi
   140013c18:	mov    QWORD PTR [rax+rcx*8],r12
   140013c1c:	mov    QWORD PTR [rax+rcx*8+0x8],r13
   140013c21:	mov    QWORD PTR [r14],r13
   140013c24:	mov    QWORD PTR [rip+0x10d7d],rax        # 0x1400249a8
   140013c2b:	cmp    DWORD PTR [rsp+0x78],r13d
   140013c30:	je     0x140013ca7
   140013c32:	mov    rcx,r12
   140013c35:	call   0x140013ce4
   140013c3a:	mov    esi,0x2
   140013c3f:	lea    rcx,[rsi+rax*1]
   140013c43:	mov    edx,esi
   140013c45:	call   0x140010bd0
   140013c4a:	mov    rdi,rax
   140013c4d:	test   rax,rax
   140013c50:	je     0x140013ca7
   140013c52:	mov    rcx,r12
   140013c55:	call   0x140013ce4
   140013c5a:	mov    r8,r12
   140013c5d:	mov    rcx,rdi
   140013c60:	lea    rdx,[rsi+rax*1]
   140013c64:	call   0x14001522c
   140013c69:	test   eax,eax
   140013c6b:	jne    0x140013cbe
   140013c6d:	mov    rax,QWORD PTR [rsp+0x70]
   140013c72:	mov    rcx,rdi
   140013c75:	lea    rdx,[rdi+rax*2]
   140013c79:	mov    WORD PTR [rdx],r13w
   140013c7d:	add    rdx,rsi
   140013c80:	test   r15d,r15d
   140013c83:	cmovne rdx,r13
   140013c87:	call   QWORD PTR [rip+0x6623]        # 0x14001a2b0
   140013c8d:	test   eax,eax
   140013c8f:	jne    0x140013c9f
   140013c91:	or     ebx,0xffffffff
   140013c94:	call   0x14000bdf0
   140013c99:	mov    DWORD PTR [rax],0x2a
   140013c9f:	mov    rcx,rdi
   140013ca2:	call   0x14000b490
   140013ca7:	test   r15d,r15d
   140013caa:	je     0x140013cb7
   140013cac:	mov    rcx,r12
   140013caf:	call   0x14000b490
   140013cb4:	mov    QWORD PTR [r14],r13
   140013cb7:	mov    eax,ebx
   140013cb9:	jmp    0x140013a60
   140013cbe:	xor    r9d,r9d
   140013cc1:	xor    r8d,r8d
   140013cc4:	xor    edx,edx
   140013cc6:	xor    ecx,ecx
   140013cc8:	mov    QWORD PTR [rsp+0x20],r13
   140013ccd:	call   0x14000cfa8
   140013cd2:	int3   
   140013cd3:	mov    rcx,r12
   140013cd6:	call   0x14000b490
   140013cdb:	mov    QWORD PTR [r14],r13
   140013cde:	jmp    0x140013a7d
   140013ce3:	int3   
   140013ce4:	mov    rax,rcx
   140013ce7:	movzx  edx,WORD PTR [rax]
   140013cea:	add    rax,0x2
   140013cee:	test   dx,dx
   140013cf1:	jne    0x140013ce7
   140013cf3:	sub    rax,rcx
   140013cf6:	sar    rax,1
   140013cf9:	dec    rax
   140013cfc:	ret    
   140013cfd:	int3   
   140013cfe:	int3   
   140013cff:	int3   
   140013d00:	mov    QWORD PTR [rsp+0x18],rbx
   140013d05:	mov    DWORD PTR [rsp+0x10],edx
   140013d09:	push   rbp
   140013d0a:	push   rsi
   140013d0b:	push   rdi
   140013d0c:	push   r12
   140013d0e:	push   r13
   140013d10:	push   r14
   140013d12:	push   r15
   140013d14:	sub    rsp,0x30
   140013d18:	xor    r13d,r13d
   140013d1b:	mov    ebp,edx
   140013d1d:	mov    r14,rcx
   140013d20:	mov    ebx,r13d
   140013d23:	test   rcx,rcx
   140013d26:	jne    0x140013d3d
   140013d28:	call   0x14000bdf0
   140013d2d:	mov    DWORD PTR [rax],0x16
   140013d33:	call   0x14000d04c
   140013d38:	jmp    0x140013e29
   140013d3d:	mov    r12,QWORD PTR [rcx]
   140013d40:	test   r12,r12
   140013d43:	je     0x140013e1e
   140013d49:	mov    edx,0x3d
   140013d4e:	mov    rcx,r12
   140013d51:	call   0x140014188
   140013d56:	mov    rdi,rax
   140013d59:	mov    QWORD PTR [rsp+0x70],rax
   140013d5e:	test   rax,rax
   140013d61:	je     0x140013e1e
   140013d67:	cmp    r12,rax
   140013d6a:	je     0x140013e1e
   140013d70:	cmp    BYTE PTR [rax+0x1],r13b
   140013d74:	mov    rsi,QWORD PTR [rip+0x10c1d]        # 0x140024998
   140013d7b:	mov    r15d,r13d
   140013d7e:	sete   r15b
   140013d82:	cmp    rsi,QWORD PTR [rip+0x10c17]        # 0x1400249a0
   140013d89:	jne    0x140013dff
   140013d8b:	mov    rbp,rsi
   140013d8e:	mov    eax,r13d
   140013d91:	test   rsi,rsi
   140013d94:	jne    0x140013da1
   140013d96:	mov    rsi,r13
   140013d99:	jmp    0x140013df4
   140013d9b:	add    rsi,0x8
   140013d9f:	inc    eax
   140013da1:	cmp    QWORD PTR [rsi],r13
   140013da4:	jne    0x140013d9b
   140013da6:	inc    eax
   140013da8:	mov    edx,0x8
   140013dad:	movsxd rcx,eax
   140013db0:	call   0x140010bd0
   140013db5:	mov    rdi,rax
   140013db8:	mov    rsi,rax
   140013dbb:	test   rax,rax
   140013dbe:	jne    0x140013dc8
   140013dc0:	lea    ecx,[rax+0x9]
   140013dc3:	call   0x140009c14
   140013dc8:	mov    rax,QWORD PTR [rbp+0x0]
   140013dcc:	test   rax,rax
   140013dcf:	je     0x140013dec
   140013dd1:	sub    rbp,rdi
   140013dd4:	mov    rcx,rax
   140013dd7:	call   0x140018c50
   140013ddc:	mov    QWORD PTR [rdi],rax
   140013ddf:	add    rdi,0x8
   140013de3:	mov    rax,QWORD PTR [rdi+rbp*1]
   140013de7:	test   rax,rax
   140013dea:	jne    0x140013dd4
   140013dec:	mov    QWORD PTR [rdi],r13
   140013def:	mov    rdi,QWORD PTR [rsp+0x70]
   140013df4:	mov    ebp,DWORD PTR [rsp+0x78]
   140013df8:	mov    QWORD PTR [rip+0x10b99],rsi        # 0x140024998
   140013dff:	test   rsi,rsi
   140013e02:	jne    0x140013e8f
   140013e08:	test   ebp,ebp
   140013e0a:	je     0x140013e44
   140013e0c:	cmp    QWORD PTR [rip+0x10b95],r13        # 0x1400249a8
   140013e13:	je     0x140013e44
   140013e15:	call   0x14000e9ec
   140013e1a:	test   eax,eax
   140013e1c:	je     0x140013e88
   140013e1e:	call   0x14000bdf0
   140013e23:	mov    DWORD PTR [rax],0x16
   140013e29:	or     eax,0xffffffff
   140013e2c:	mov    rbx,QWORD PTR [rsp+0x80]
   140013e34:	add    rsp,0x30
   140013e38:	pop    r15
   140013e3a:	pop    r14
   140013e3c:	pop    r13
   140013e3e:	pop    r12
   140013e40:	pop    rdi
   140013e41:	pop    rsi
   140013e42:	pop    rbp
   140013e43:	ret    
   140013e44:	test   r15d,r15d
   140013e47:	je     0x140013e4d
   140013e49:	xor    eax,eax
   140013e4b:	jmp    0x140013e2c
   140013e4d:	mov    ecx,0x8
   140013e52:	call   0x140010b50
   140013e57:	mov    QWORD PTR [rip+0x10b3a],rax        # 0x140024998
   140013e5e:	test   rax,rax
   140013e61:	je     0x140013e29
   140013e63:	mov    QWORD PTR [rax],r13
   140013e66:	cmp    QWORD PTR [rip+0x10b3b],r13        # 0x1400249a8
   140013e6d:	jne    0x140013e88
   140013e6f:	mov    ecx,0x8
   140013e74:	call   0x140010b50
   140013e79:	mov    QWORD PTR [rip+0x10b28],rax        # 0x1400249a8
   140013e80:	test   rax,rax
   140013e83:	je     0x140013e29
   140013e85:	mov    QWORD PTR [rax],r13
   140013e88:	mov    rsi,QWORD PTR [rip+0x10b09]        # 0x140024998
   140013e8f:	mov    rbp,rsi
   140013e92:	test   rsi,rsi
   140013e95:	je     0x140013e29
   140013e97:	mov    rcx,QWORD PTR [rsi]
   140013e9a:	mov    eax,edi
   140013e9c:	mov    rdi,rsi
   140013e9f:	sub    eax,r12d
   140013ea2:	movsxd r13,eax
   140013ea5:	test   rcx,rcx
   140013ea8:	je     0x140013ee9
   140013eaa:	mov    rdx,rcx
   140013ead:	mov    r8,r13
   140013eb0:	mov    rcx,r12
   140013eb3:	call   0x14000e9e4
   140013eb8:	test   eax,eax
   140013eba:	jne    0x140013ed6
   140013ebc:	mov    rax,QWORD PTR [rdi]
   140013ebf:	cmp    BYTE PTR [r13+rax*1+0x0],0x3d
   140013ec5:	je     0x140013f6c
   140013ecb:	cmp    BYTE PTR [r13+rax*1+0x0],bl
   140013ed0:	je     0x140013f6c
   140013ed6:	add    rdi,0x8
   140013eda:	mov    rcx,QWORD PTR [rdi]
   140013edd:	test   rcx,rcx
   140013ee0:	jne    0x140013eaa
   140013ee2:	mov    rsi,QWORD PTR [rip+0x10aaf]        # 0x140024998
   140013ee9:	sub    rdi,rsi
   140013eec:	sar    rdi,0x3
   140013ef0:	neg    edi
   140013ef2:	xor    r13d,r13d
   140013ef5:	test   edi,edi
   140013ef7:	js     0x140013f89
   140013efd:	cmp    QWORD PTR [rbp+0x0],r13
   140013f01:	je     0x140013f89
   140013f07:	movsxd rsi,edi
   140013f0a:	mov    rcx,QWORD PTR [rbp+rsi*8+0x0]
   140013f0f:	call   0x14000b490
   140013f14:	test   r15d,r15d
   140013f17:	je     0x140013f7f
   140013f19:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   140013f1e:	je     0x140013f3d
   140013f20:	lea    rcx,[rbp+rsi*8+0x8]
   140013f25:	mov    rax,QWORD PTR [rcx]
   140013f28:	inc    edi
   140013f2a:	add    rcx,0x8
   140013f2e:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
   140013f33:	inc    rsi
   140013f36:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   140013f3b:	jne    0x140013f25
   140013f3d:	movsxd rdx,edi
   140013f40:	movabs rax,0x1fffffffffffffff
   140013f4a:	cmp    rdx,rax
   140013f4d:	jae    0x140013fe5
   140013f53:	mov    rcx,QWORD PTR [rip+0x10a3e]        # 0x140024998
   140013f5a:	mov    r8d,0x8
   140013f60:	call   0x140010cdc
   140013f65:	test   rax,rax
   140013f68:	je     0x140013fe5
   140013f6a:	jmp    0x140013fde
   140013f6c:	mov    rsi,QWORD PTR [rip+0x10a25]        # 0x140024998
   140013f73:	sub    rdi,rsi
   140013f76:	sar    rdi,0x3
   140013f7a:	jmp    0x140013ef2
   140013f7f:	mov    QWORD PTR [rbp+rsi*8+0x0],r12
   140013f84:	mov    QWORD PTR [r14],r13
   140013f87:	jmp    0x140013fe5
   140013f89:	test   r15d,r15d
   140013f8c:	jne    0x14001408c
   140013f92:	test   edi,edi
   140013f94:	jns    0x140013f98
   140013f96:	neg    edi
   140013f98:	lea    eax,[rdi+0x2]
   140013f9b:	cmp    eax,edi
   140013f9d:	jl     0x140013e29
   140013fa3:	movsxd r8,eax
   140013fa6:	movabs rax,0x1fffffffffffffff
   140013fb0:	cmp    r8,rax
   140013fb3:	jae    0x140013e29
   140013fb9:	mov    edx,0x8
   140013fbe:	mov    rcx,rsi
   140013fc1:	call   0x140010cdc
   140013fc6:	test   rax,rax
   140013fc9:	je     0x140013e29
   140013fcf:	movsxd rcx,edi
   140013fd2:	mov    QWORD PTR [rax+rcx*8],r12
   140013fd6:	mov    QWORD PTR [rax+rcx*8+0x8],r13
   140013fdb:	mov    QWORD PTR [r14],r13
   140013fde:	mov    QWORD PTR [rip+0x109b3],rax        # 0x140024998
   140013fe5:	cmp    DWORD PTR [rsp+0x78],r13d
   140013fea:	je     0x140014060
   140013fec:	mov    rcx,r12
   140013fef:	call   0x140009fd0
   140013ff4:	mov    edx,0x1
   140013ff9:	lea    rcx,[rax+0x2]
   140013ffd:	call   0x140010bd0
   140014002:	mov    rdi,rax
   140014005:	test   rax,rax
   140014008:	je     0x140014060
   14001400a:	mov    rcx,r12
   14001400d:	call   0x140009fd0
   140014012:	mov    r8,r12
   140014015:	mov    rcx,rdi
   140014018:	lea    rdx,[rax+0x2]
   14001401c:	call   0x14000eae0
   140014021:	test   eax,eax
   140014023:	jne    0x140014077
   140014025:	mov    rdx,rdi
   140014028:	mov    rcx,rdi
   14001402b:	sub    rdx,r12
   14001402e:	add    rdx,QWORD PTR [rsp+0x70]
   140014033:	mov    BYTE PTR [rdx],r13b
   140014036:	inc    rdx
   140014039:	test   r15d,r15d
   14001403c:	cmovne rdx,r13
   140014040:	call   QWORD PTR [rip+0x6272]        # 0x14001a2b8
   140014046:	test   eax,eax
   140014048:	jne    0x140014058
   14001404a:	or     ebx,0xffffffff
   14001404d:	call   0x14000bdf0
   140014052:	mov    DWORD PTR [rax],0x2a
   140014058:	mov    rcx,rdi
   14001405b:	call   0x14000b490
   140014060:	test   r15d,r15d
   140014063:	je     0x140014070
   140014065:	mov    rcx,r12
   140014068:	call   0x14000b490
   14001406d:	mov    QWORD PTR [r14],r13
   140014070:	mov    eax,ebx
   140014072:	jmp    0x140013e2c
   140014077:	xor    r9d,r9d
   14001407a:	xor    r8d,r8d
   14001407d:	xor    edx,edx
   14001407f:	xor    ecx,ecx
   140014081:	mov    QWORD PTR [rsp+0x20],r13
   140014086:	call   0x14000cfa8
   14001408b:	int3   
   14001408c:	mov    rcx,r12
   14001408f:	call   0x14000b490
   140014094:	mov    QWORD PTR [r14],r13
   140014097:	jmp    0x140013e49
   14001409c:	mov    QWORD PTR [rsp+0x8],rbx
   1400140a1:	mov    QWORD PTR [rsp+0x10],rsi
   1400140a6:	mov    QWORD PTR [rsp+0x18],rdi
   1400140ab:	push   rbp
   1400140ac:	mov    rbp,rsp
   1400140af:	sub    rsp,0x40
   1400140b3:	mov    rbx,rcx
   1400140b6:	mov    edi,edx
   1400140b8:	lea    rcx,[rbp-0x20]
   1400140bc:	mov    rdx,r8
   1400140bf:	call   0x14000c724
   1400140c4:	xor    esi,esi
   1400140c6:	test   rbx,rbx
   1400140c9:	jne    0x140014103
   1400140cb:	call   0x14000bdf0
   1400140d0:	mov    DWORD PTR [rax],0x16
   1400140d6:	call   0x14000d04c
   1400140db:	cmp    BYTE PTR [rbp-0x8],sil
   1400140df:	je     0x1400140ec
   1400140e1:	mov    rax,QWORD PTR [rbp-0x10]
   1400140e5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400140ec:	xor    eax,eax
   1400140ee:	mov    rbx,QWORD PTR [rsp+0x50]
   1400140f3:	mov    rsi,QWORD PTR [rsp+0x58]
   1400140f8:	mov    rdi,QWORD PTR [rsp+0x60]
   1400140fd:	add    rsp,0x40
   140014101:	pop    rbp
   140014102:	ret    
   140014103:	mov    rdx,QWORD PTR [rbp-0x18]
   140014107:	cmp    DWORD PTR [rdx+0x8],esi
   14001410a:	jne    0x140014129
   14001410c:	mov    edx,edi
   14001410e:	mov    rcx,rbx
   140014111:	call   0x14000c07c
   140014116:	cmp    BYTE PTR [rbp-0x8],sil
   14001411a:	je     0x1400140ee
   14001411c:	mov    rcx,QWORD PTR [rbp-0x10]
   140014120:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140014127:	jmp    0x1400140ee
   140014129:	movzx  ecx,BYTE PTR [rbx]
   14001412c:	test   cx,cx
   14001412f:	je     0x140014164
   140014131:	movzx  eax,cl
   140014134:	test   BYTE PTR [rax+rdx*1+0x1d],0x4
   140014139:	je     0x140014158
   14001413b:	inc    rbx
   14001413e:	cmp    BYTE PTR [rbx],sil
   140014141:	je     0x1400140db
   140014143:	movzx  eax,BYTE PTR [rbx]
   140014146:	movzx  ecx,cx
   140014149:	shl    ecx,0x8
   14001414c:	or     ecx,eax
   14001414e:	cmp    edi,ecx
   140014150:	jne    0x14001415f
   140014152:	lea    rax,[rbx-0x1]
   140014156:	jmp    0x140014116
   140014158:	movzx  eax,cx
   14001415b:	cmp    edi,eax
   14001415d:	je     0x140014164
   14001415f:	inc    rbx
   140014162:	jmp    0x140014129
   140014164:	movzx  eax,cx
   140014167:	cmp    edi,eax
   140014169:	jne    0x1400140db
   14001416f:	cmp    BYTE PTR [rbp-0x8],sil
   140014173:	je     0x140014180
   140014175:	mov    rax,QWORD PTR [rbp-0x10]
   140014179:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140014180:	mov    rax,rbx
   140014183:	jmp    0x1400140ee
   140014188:	xor    r8d,r8d
   14001418b:	jmp    0x14001409c
   140014190:	mov    QWORD PTR [rsp+0x8],rbx
   140014195:	mov    QWORD PTR [rsp+0x10],rbp
   14001419a:	mov    QWORD PTR [rsp+0x18],rsi
   14001419f:	push   rdi
   1400141a0:	sub    rsp,0x20
   1400141a4:	lea    rbx,[rcx+0x1c]
   1400141a8:	mov    rbp,rcx
   1400141ab:	mov    esi,0x101
   1400141b0:	mov    rcx,rbx
   1400141b3:	mov    r8d,esi
   1400141b6:	xor    edx,edx
   1400141b8:	call   0x14000a560
   1400141bd:	xor    r11d,r11d
   1400141c0:	lea    rdi,[rbp+0x10]
   1400141c4:	lea    ecx,[r11+0x6]
   1400141c8:	movzx  eax,r11w
   1400141cc:	mov    DWORD PTR [rbp+0xc],r11d
   1400141d0:	mov    QWORD PTR [rbp+0x4],r11
   1400141d4:	rep stos WORD PTR es:[rdi],ax
   1400141d7:	lea    rdi,[rip+0xf8a2]        # 0x140023a80
   1400141de:	sub    rdi,rbp
   1400141e1:	mov    al,BYTE PTR [rdi+rbx*1]
   1400141e4:	mov    BYTE PTR [rbx],al
   1400141e6:	inc    rbx
   1400141e9:	dec    rsi
   1400141ec:	jne    0x1400141e1
   1400141ee:	lea    rcx,[rbp+0x11d]
   1400141f5:	mov    edx,0x100
   1400141fa:	mov    al,BYTE PTR [rcx+rdi*1]
   1400141fd:	mov    BYTE PTR [rcx],al
   1400141ff:	inc    rcx
   140014202:	dec    rdx
   140014205:	jne    0x1400141fa
   140014207:	mov    rbx,QWORD PTR [rsp+0x30]
   14001420c:	mov    rbp,QWORD PTR [rsp+0x38]
   140014211:	mov    rsi,QWORD PTR [rsp+0x40]
   140014216:	add    rsp,0x20
   14001421a:	pop    rdi
   14001421b:	ret    
   14001421c:	mov    rax,rsp
   14001421f:	mov    QWORD PTR [rax+0x10],rbx
   140014223:	mov    QWORD PTR [rax+0x18],rsi
   140014227:	mov    QWORD PTR [rax+0x20],rdi
   14001422b:	push   rbp
   14001422c:	lea    rbp,[rax-0x488]
   140014233:	sub    rsp,0x580
   14001423a:	mov    rax,QWORD PTR [rip+0xee7f]        # 0x1400230c0
   140014241:	xor    rax,rsp
   140014244:	mov    QWORD PTR [rbp+0x470],rax
   14001424b:	mov    rsi,rcx
   14001424e:	mov    ecx,DWORD PTR [rcx+0x4]
   140014251:	lea    rdx,[rsp+0x50]
   140014256:	call   QWORD PTR [rip+0x6064]        # 0x14001a2c0
   14001425c:	mov    ebx,0x100
   140014261:	test   eax,eax
   140014263:	je     0x1400143a5
   140014269:	xor    eax,eax
   14001426b:	lea    rcx,[rsp+0x70]
   140014270:	mov    BYTE PTR [rcx],al
   140014272:	inc    eax
   140014274:	inc    rcx
   140014277:	cmp    eax,ebx
   140014279:	jb     0x140014270
   14001427b:	mov    al,BYTE PTR [rsp+0x56]
   14001427f:	mov    BYTE PTR [rsp+0x70],0x20
   140014284:	lea    rdi,[rsp+0x56]
   140014289:	jmp    0x1400142b4
   14001428b:	movzx  edx,BYTE PTR [rdi+0x1]
   14001428f:	movzx  r8d,al
   140014293:	cmp    r8d,edx
   140014296:	ja     0x1400142ae
   140014298:	sub    edx,r8d
   14001429b:	mov    eax,r8d
   14001429e:	lea    rcx,[rsp+r8*1+0x70]
   1400142a3:	lea    r8d,[rdx+0x1]
   1400142a7:	mov    dl,0x20
   1400142a9:	call   0x14000a560
   1400142ae:	add    rdi,0x2
   1400142b2:	mov    al,BYTE PTR [rdi]
   1400142b4:	test   al,al
   1400142b6:	jne    0x14001428b
   1400142b8:	mov    eax,DWORD PTR [rsi+0xc]
   1400142bb:	and    DWORD PTR [rsp+0x38],0x0
   1400142c0:	lea    r8,[rsp+0x70]
   1400142c5:	mov    DWORD PTR [rsp+0x30],eax
   1400142c9:	mov    eax,DWORD PTR [rsi+0x4]
   1400142cc:	mov    r9d,ebx
   1400142cf:	mov    DWORD PTR [rsp+0x28],eax
   1400142d3:	lea    rax,[rbp+0x270]
   1400142da:	mov    edx,0x1
   1400142df:	xor    ecx,ecx
   1400142e1:	mov    QWORD PTR [rsp+0x20],rax
   1400142e6:	call   0x140018e20
   1400142eb:	and    DWORD PTR [rsp+0x40],0x0
   1400142f0:	mov    eax,DWORD PTR [rsi+0x4]
   1400142f3:	mov    edx,DWORD PTR [rsi+0xc]
   1400142f6:	mov    DWORD PTR [rsp+0x38],eax
   1400142fa:	lea    rax,[rbp+0x70]
   1400142fe:	mov    DWORD PTR [rsp+0x30],ebx
   140014302:	mov    QWORD PTR [rsp+0x28],rax
   140014307:	lea    r9,[rsp+0x70]
   14001430c:	mov    r8d,ebx
   14001430f:	xor    ecx,ecx
   140014311:	mov    DWORD PTR [rsp+0x20],ebx
   140014315:	call   0x1400186dc
   14001431a:	and    DWORD PTR [rsp+0x40],0x0
   14001431f:	mov    eax,DWORD PTR [rsi+0x4]
   140014322:	mov    edx,DWORD PTR [rsi+0xc]
   140014325:	mov    DWORD PTR [rsp+0x38],eax
   140014329:	lea    rax,[rbp+0x170]
   140014330:	mov    DWORD PTR [rsp+0x30],ebx
   140014334:	mov    QWORD PTR [rsp+0x28],rax
   140014339:	lea    r9,[rsp+0x70]
   14001433e:	mov    r8d,0x200
   140014344:	xor    ecx,ecx
   140014346:	mov    DWORD PTR [rsp+0x20],ebx
   14001434a:	call   0x1400186dc
   14001434f:	lea    rdx,[rbp+0x70]
   140014353:	lea    r8,[rbp+0x170]
   14001435a:	sub    rdx,rsi
   14001435d:	lea    r11,[rbp+0x270]
   140014364:	lea    rcx,[rsi+0x1d]
   140014368:	sub    r8,rsi
   14001436b:	test   BYTE PTR [r11],0x1
   14001436f:	je     0x14001437a
   140014371:	or     BYTE PTR [rcx],0x10
   140014374:	mov    al,BYTE PTR [rdx+rcx*1-0x1d]
   140014378:	jmp    0x140014388
   14001437a:	test   BYTE PTR [r11],0x2
   14001437e:	je     0x140014390
   140014380:	or     BYTE PTR [rcx],0x20
   140014383:	mov    al,BYTE PTR [r8+rcx*1-0x1d]
   140014388:	mov    BYTE PTR [rcx+0x100],al
   14001438e:	jmp    0x140014397
   140014390:	mov    BYTE PTR [rcx+0x100],0x0
   140014397:	inc    rcx
   14001439a:	add    r11,0x2
   14001439e:	dec    rbx
   1400143a1:	jne    0x14001436b
   1400143a3:	jmp    0x1400143e4
   1400143a5:	xor    edx,edx
   1400143a7:	lea    rcx,[rsi+0x1d]
   1400143ab:	lea    r8d,[rdx-0x61]
   1400143af:	lea    eax,[r8+0x20]
   1400143b3:	cmp    eax,0x19
   1400143b6:	ja     0x1400143c0
   1400143b8:	or     BYTE PTR [rcx],0x10
   1400143bb:	lea    eax,[rdx+0x20]
   1400143be:	jmp    0x1400143cc
   1400143c0:	cmp    r8d,0x19
   1400143c4:	ja     0x1400143d4
   1400143c6:	or     BYTE PTR [rcx],0x20
   1400143c9:	lea    eax,[rdx-0x20]
   1400143cc:	mov    BYTE PTR [rcx+0x100],al
   1400143d2:	jmp    0x1400143db
   1400143d4:	mov    BYTE PTR [rcx+0x100],0x0
   1400143db:	inc    edx
   1400143dd:	inc    rcx
   1400143e0:	cmp    edx,ebx
   1400143e2:	jb     0x1400143ab
   1400143e4:	mov    rcx,QWORD PTR [rbp+0x470]
   1400143eb:	xor    rcx,rsp
   1400143ee:	call   0x14000a850
   1400143f3:	lea    r11,[rsp+0x580]
   1400143fb:	mov    rbx,QWORD PTR [r11+0x18]
   1400143ff:	mov    rsi,QWORD PTR [r11+0x20]
   140014403:	mov    rdi,QWORD PTR [r11+0x28]
   140014407:	mov    rsp,r11
   14001440a:	pop    rbp
   14001440b:	ret    
   14001440c:	mov    QWORD PTR [rsp+0x10],rbx
   140014411:	push   rdi
   140014412:	sub    rsp,0x20
   140014416:	call   0x14000d234
   14001441b:	mov    rdi,rax
   14001441e:	mov    ecx,DWORD PTR [rax+0xc8]
   140014424:	test   DWORD PTR [rip+0xfb86],ecx        # 0x140023fb0
   14001442a:	je     0x14001443f
   14001442c:	cmp    QWORD PTR [rax+0xc0],0x0
   140014434:	je     0x14001443f
   140014436:	mov    rbx,QWORD PTR [rax+0xb8]
   14001443d:	jmp    0x1400144ab
   14001443f:	mov    ecx,0xd
   140014444:	call   0x14000cb58
   140014449:	nop
   14001444a:	mov    rbx,QWORD PTR [rdi+0xb8]
   140014451:	mov    QWORD PTR [rsp+0x30],rbx
   140014456:	cmp    rbx,QWORD PTR [rip+0xfa53]        # 0x140023eb0
   14001445d:	je     0x1400144a1
   14001445f:	test   rbx,rbx
   140014462:	je     0x14001447f
   140014464:	lock dec DWORD PTR [rbx]
   140014467:	jne    0x14001447f
   140014469:	lea    rax,[rip+0xf610]        # 0x140023a80
   140014470:	mov    rcx,QWORD PTR [rsp+0x30]
   140014475:	cmp    rcx,rax
   140014478:	je     0x14001447f
   14001447a:	call   0x14000b490
   14001447f:	mov    rax,QWORD PTR [rip+0xfa2a]        # 0x140023eb0
   140014486:	mov    QWORD PTR [rdi+0xb8],rax
   14001448d:	mov    rax,QWORD PTR [rip+0xfa1c]        # 0x140023eb0
   140014494:	mov    QWORD PTR [rsp+0x30],rax
   140014499:	lock inc DWORD PTR [rax]
   14001449c:	mov    rbx,QWORD PTR [rsp+0x30]
   1400144a1:	mov    ecx,0xd
   1400144a6:	call   0x14000ca58
   1400144ab:	test   rbx,rbx
   1400144ae:	jne    0x1400144b8
   1400144b0:	lea    ecx,[rbx+0x20]
   1400144b3:	call   0x140009c14
   1400144b8:	mov    rax,rbx
   1400144bb:	mov    rbx,QWORD PTR [rsp+0x38]
   1400144c0:	add    rsp,0x20
   1400144c4:	pop    rdi
   1400144c5:	ret    
   1400144c6:	int3   
   1400144c7:	int3   
   1400144c8:	rex push rbx
   1400144ca:	sub    rsp,0x40
   1400144ce:	mov    ebx,ecx
   1400144d0:	lea    rcx,[rsp+0x20]
   1400144d5:	xor    edx,edx
   1400144d7:	call   0x14000c724
   1400144dc:	and    DWORD PTR [rip+0x11465],0x0        # 0x140025948
   1400144e3:	cmp    ebx,0xfffffffe
   1400144e6:	jne    0x14001450d
   1400144e8:	mov    DWORD PTR [rip+0x11456],0x1        # 0x140025948
   1400144f2:	call   QWORD PTR [rip+0x5dd8]        # 0x14001a2d0
   1400144f8:	cmp    BYTE PTR [rsp+0x38],0x0
   1400144fd:	je     0x140014552
   1400144ff:	mov    rcx,QWORD PTR [rsp+0x30]
   140014504:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001450b:	jmp    0x140014552
   14001450d:	cmp    ebx,0xfffffffd
   140014510:	jne    0x140014524
   140014512:	mov    DWORD PTR [rip+0x1142c],0x1        # 0x140025948
   14001451c:	call   QWORD PTR [rip+0x5da6]        # 0x14001a2c8
   140014522:	jmp    0x1400144f8
   140014524:	cmp    ebx,0xfffffffc
   140014527:	jne    0x14001453d
   140014529:	mov    rax,QWORD PTR [rsp+0x20]
   14001452e:	mov    DWORD PTR [rip+0x11410],0x1        # 0x140025948
   140014538:	mov    eax,DWORD PTR [rax+0x4]
   14001453b:	jmp    0x1400144f8
   14001453d:	cmp    BYTE PTR [rsp+0x38],0x0
   140014542:	je     0x140014550
   140014544:	mov    rax,QWORD PTR [rsp+0x30]
   140014549:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140014550:	mov    eax,ebx
   140014552:	add    rsp,0x40
   140014556:	pop    rbx
   140014557:	ret    
   140014558:	mov    QWORD PTR [rsp+0x18],rbx
   14001455d:	push   rbp
   14001455e:	push   rsi
   14001455f:	push   rdi
   140014560:	push   r12
   140014562:	push   r13
   140014564:	sub    rsp,0x40
   140014568:	mov    rax,QWORD PTR [rip+0xeb51]        # 0x1400230c0
   14001456f:	xor    rax,rsp
   140014572:	mov    QWORD PTR [rsp+0x38],rax
   140014577:	mov    rsi,rdx
   14001457a:	call   0x1400144c8
   14001457f:	xor    ebx,ebx
   140014581:	mov    edi,eax
   140014583:	test   eax,eax
   140014585:	jne    0x140014594
   140014587:	mov    rcx,rsi
   14001458a:	call   0x140014190
   14001458f:	jmp    0x1400147aa
   140014594:	lea    r13,[rip+0xf925]        # 0x140023ec0
   14001459b:	mov    ecx,ebx
   14001459d:	mov    rbp,rbx
   1400145a0:	mov    rax,r13
   1400145a3:	mov    r12d,0x1
   1400145a9:	cmp    DWORD PTR [rax],edi
   1400145ab:	je     0x1400146d7
   1400145b1:	add    ecx,r12d
   1400145b4:	add    rbp,r12
   1400145b7:	add    rax,0x30
   1400145bb:	cmp    ecx,0x5
   1400145be:	jb     0x1400145a9
   1400145c0:	cmp    edi,0xfde8
   1400145c6:	je     0x1400146cf
   1400145cc:	cmp    edi,0xfde9
   1400145d2:	je     0x1400146cf
   1400145d8:	movzx  ecx,di
   1400145db:	call   QWORD PTR [rip+0x5cf7]        # 0x14001a2d8
   1400145e1:	test   eax,eax
   1400145e3:	je     0x1400146cf
   1400145e9:	lea    rdx,[rsp+0x20]
   1400145ee:	mov    ecx,edi
   1400145f0:	call   QWORD PTR [rip+0x5cca]        # 0x14001a2c0
   1400145f6:	test   eax,eax
   1400145f8:	je     0x1400146c3
   1400145fe:	lea    rcx,[rsi+0x1c]
   140014602:	xor    edx,edx
   140014604:	mov    r8d,0x101
   14001460a:	call   0x14000a560
   14001460f:	mov    DWORD PTR [rsi+0x4],edi
   140014612:	mov    DWORD PTR [rsi+0xc],ebx
   140014615:	cmp    DWORD PTR [rsp+0x20],r12d
   14001461a:	jbe    0x1400146ac
   140014620:	lea    rax,[rsp+0x26]
   140014625:	cmp    BYTE PTR [rsp+0x26],bl
   140014629:	je     0x140014658
   14001462b:	cmp    BYTE PTR [rax+0x1],bl
   14001462e:	je     0x140014658
   140014630:	movzx  edi,BYTE PTR [rax]
   140014633:	movzx  ecx,BYTE PTR [rax+0x1]
   140014637:	cmp    edi,ecx
   140014639:	ja     0x140014650
   14001463b:	sub    ecx,edi
   14001463d:	lea    rdx,[rdi+rsi*1+0x1d]
   140014642:	add    ecx,r12d
   140014645:	or     BYTE PTR [rdx],0x4
   140014648:	add    rdx,r12
   14001464b:	sub    rcx,r12
   14001464e:	jne    0x140014645
   140014650:	add    rax,0x2
   140014654:	cmp    BYTE PTR [rax],bl
   140014656:	jne    0x14001462b
   140014658:	lea    rax,[rsi+0x1e]
   14001465c:	mov    ecx,0xfe
   140014661:	or     BYTE PTR [rax],0x8
   140014664:	add    rax,r12
   140014667:	sub    rcx,r12
   14001466a:	jne    0x140014661
   14001466c:	mov    ecx,DWORD PTR [rsi+0x4]
   14001466f:	sub    ecx,0x3a4
   140014675:	je     0x14001469e
   140014677:	sub    ecx,0x4
   14001467a:	je     0x140014697
   14001467c:	sub    ecx,0xd
   14001467f:	je     0x140014690
   140014681:	dec    ecx
   140014683:	je     0x140014689
   140014685:	mov    eax,ebx
   140014687:	jmp    0x1400146a3
   140014689:	mov    eax,0x404
   14001468e:	jmp    0x1400146a3
   140014690:	mov    eax,0x412
   140014695:	jmp    0x1400146a3
   140014697:	mov    eax,0x804
   14001469c:	jmp    0x1400146a3
   14001469e:	mov    eax,0x411
   1400146a3:	mov    DWORD PTR [rsi+0xc],eax
   1400146a6:	mov    DWORD PTR [rsi+0x8],r12d
   1400146aa:	jmp    0x1400146af
   1400146ac:	mov    DWORD PTR [rsi+0x8],ebx
   1400146af:	lea    rdi,[rsi+0x10]
   1400146b3:	movzx  eax,bx
   1400146b6:	mov    ecx,0x6
   1400146bb:	rep stos WORD PTR es:[rdi],ax
   1400146be:	jmp    0x1400147a2
   1400146c3:	cmp    DWORD PTR [rip+0x1127f],ebx        # 0x140025948
   1400146c9:	jne    0x140014587
   1400146cf:	or     eax,0xffffffff
   1400146d2:	jmp    0x1400147ac
   1400146d7:	lea    rcx,[rsi+0x1c]
   1400146db:	xor    edx,edx
   1400146dd:	mov    r8d,0x101
   1400146e3:	call   0x14000a560
   1400146e8:	lea    r10,[rbp+rbp*2+0x0]
   1400146ed:	lea    r11,[rip+0xf7c4]        # 0x140023eb8
   1400146f4:	shl    r10,0x4
   1400146f8:	mov    ebp,0x4
   1400146fd:	lea    r8,[r10+r13*1+0x10]
   140014702:	mov    rcx,r8
   140014705:	cmp    BYTE PTR [r8],bl
   140014708:	je     0x14001473b
   14001470a:	cmp    BYTE PTR [rcx+0x1],bl
   14001470d:	je     0x14001473b
   14001470f:	movzx  edx,BYTE PTR [rcx]
   140014712:	movzx  eax,BYTE PTR [rcx+0x1]
   140014716:	cmp    edx,eax
   140014718:	ja     0x140014733
   14001471a:	lea    r9,[rdx+rsi*1+0x1d]
   14001471f:	mov    al,BYTE PTR [r11]
   140014722:	add    edx,r12d
   140014725:	or     BYTE PTR [r9],al
   140014728:	movzx  eax,BYTE PTR [rcx+0x1]
   14001472c:	add    r9,r12
   14001472f:	cmp    edx,eax
   140014731:	jbe    0x14001471f
   140014733:	add    rcx,0x2
   140014737:	cmp    BYTE PTR [rcx],bl
   140014739:	jne    0x14001470a
   14001473b:	add    r8,0x8
   14001473f:	add    r11,r12
   140014742:	sub    rbp,r12
   140014745:	jne    0x140014702
   140014747:	mov    DWORD PTR [rsi+0x4],edi
   14001474a:	sub    edi,0x3a4
   140014750:	mov    DWORD PTR [rsi+0x8],r12d
   140014754:	je     0x140014779
   140014756:	sub    edi,0x4
   140014759:	je     0x140014772
   14001475b:	sub    edi,0xd
   14001475e:	je     0x14001476b
   140014760:	dec    edi
   140014762:	jne    0x14001477e
   140014764:	mov    ebx,0x404
   140014769:	jmp    0x14001477e
   14001476b:	mov    ebx,0x412
   140014770:	jmp    0x14001477e
   140014772:	mov    ebx,0x804
   140014777:	jmp    0x14001477e
   140014779:	mov    ebx,0x411
   14001477e:	sub    r10,rsi
   140014781:	mov    DWORD PTR [rsi+0xc],ebx
   140014784:	lea    rcx,[rsi+0x10]
   140014788:	lea    rdi,[r10+r13*1-0xc]
   14001478d:	mov    edx,0x6
   140014792:	movzx  eax,WORD PTR [rdi+rcx*1]
   140014796:	mov    WORD PTR [rcx],ax
   140014799:	add    rcx,0x2
   14001479d:	sub    rdx,r12
   1400147a0:	jne    0x140014792
   1400147a2:	mov    rcx,rsi
   1400147a5:	call   0x14001421c
   1400147aa:	xor    eax,eax
   1400147ac:	mov    rcx,QWORD PTR [rsp+0x38]
   1400147b1:	xor    rcx,rsp
   1400147b4:	call   0x14000a850
   1400147b9:	mov    rbx,QWORD PTR [rsp+0x80]
   1400147c1:	add    rsp,0x40
   1400147c5:	pop    r13
   1400147c7:	pop    r12
   1400147c9:	pop    rdi
   1400147ca:	pop    rsi
   1400147cb:	pop    rbp
   1400147cc:	ret    
   1400147cd:	int3   
   1400147ce:	int3   
   1400147cf:	int3   
   1400147d0:	mov    rax,rsp
   1400147d3:	mov    QWORD PTR [rax+0x8],rbx
   1400147d7:	mov    QWORD PTR [rax+0x10],rsi
   1400147db:	mov    QWORD PTR [rax+0x18],rdi
   1400147df:	mov    QWORD PTR [rax+0x20],r12
   1400147e3:	push   r13
   1400147e5:	sub    rsp,0x30
   1400147e9:	mov    edi,ecx
   1400147eb:	or     r13d,0xffffffff
   1400147ef:	call   0x14000d234
   1400147f4:	mov    rsi,rax
   1400147f7:	call   0x14001440c
   1400147fc:	mov    rbx,QWORD PTR [rsi+0xb8]
   140014803:	mov    ecx,edi
   140014805:	call   0x1400144c8
   14001480a:	mov    r12d,eax
   14001480d:	cmp    eax,DWORD PTR [rbx+0x4]
   140014810:	je     0x14001498b
   140014816:	mov    ecx,0x220
   14001481b:	call   0x140010b50
   140014820:	mov    rbx,rax
   140014823:	xor    edi,edi
   140014825:	test   rax,rax
   140014828:	je     0x140014990
   14001482e:	mov    rdx,QWORD PTR [rsi+0xb8]
   140014835:	mov    rcx,rax
   140014838:	mov    r8d,0x220
   14001483e:	call   0x14000a170
   140014843:	mov    DWORD PTR [rbx],edi
   140014845:	mov    rdx,rbx
   140014848:	mov    ecx,r12d
   14001484b:	call   0x140014558
   140014850:	mov    r13d,eax
   140014853:	test   eax,eax
   140014855:	jne    0x140014965
   14001485b:	mov    rcx,QWORD PTR [rsi+0xb8]
   140014862:	lea    r12,[rip+0xf217]        # 0x140023a80
   140014869:	lock dec DWORD PTR [rcx]
   14001486c:	jne    0x14001487f
   14001486e:	mov    rcx,QWORD PTR [rsi+0xb8]
   140014875:	cmp    rcx,r12
   140014878:	je     0x14001487f
   14001487a:	call   0x14000b490
   14001487f:	mov    QWORD PTR [rsi+0xb8],rbx
   140014886:	lock inc DWORD PTR [rbx]
   140014889:	test   BYTE PTR [rsi+0xc8],0x2
   140014890:	jne    0x140014990
   140014896:	test   BYTE PTR [rip+0xf713],0x1        # 0x140023fb0
   14001489d:	jne    0x140014990
   1400148a3:	mov    esi,0xd
   1400148a8:	mov    ecx,esi
   1400148aa:	call   0x14000cb58
   1400148af:	nop
   1400148b0:	mov    eax,DWORD PTR [rbx+0x4]
   1400148b3:	mov    DWORD PTR [rip+0x110a3],eax        # 0x14002595c
   1400148b9:	mov    eax,DWORD PTR [rbx+0x8]
   1400148bc:	mov    DWORD PTR [rip+0x1109e],eax        # 0x140025960
   1400148c2:	mov    eax,DWORD PTR [rbx+0xc]
   1400148c5:	mov    DWORD PTR [rip+0x11099],eax        # 0x140025964
   1400148cb:	mov    edx,edi
   1400148cd:	lea    r8,[rip+0xfffffffffffeb72c]        # 0x140000000
   1400148d4:	mov    DWORD PTR [rsp+0x20],edx
   1400148d8:	cmp    edx,0x5
   1400148db:	jge    0x1400148f2
   1400148dd:	movsxd rcx,edx
   1400148e0:	movzx  eax,WORD PTR [rbx+rcx*2+0x10]
   1400148e5:	mov    WORD PTR [r8+rcx*2+0x25950],ax
   1400148ee:	inc    edx
   1400148f0:	jmp    0x1400148d4
   1400148f2:	mov    edx,edi
   1400148f4:	mov    DWORD PTR [rsp+0x20],edx
   1400148f8:	cmp    edx,0x101
   1400148fe:	jge    0x140014913
   140014900:	movsxd rcx,edx
   140014903:	mov    al,BYTE PTR [rcx+rbx*1+0x1c]
   140014907:	mov    BYTE PTR [rcx+r8*1+0x23ca0],al
   14001490f:	inc    edx
   140014911:	jmp    0x1400148f4
   140014913:	mov    DWORD PTR [rsp+0x20],edi
   140014917:	cmp    edi,0x100
   14001491d:	jge    0x140014935
   14001491f:	movsxd rcx,edi
   140014922:	mov    al,BYTE PTR [rcx+rbx*1+0x11d]
   140014929:	mov    BYTE PTR [rcx+r8*1+0x23db0],al
   140014931:	inc    edi
   140014933:	jmp    0x140014913
   140014935:	mov    rax,QWORD PTR [rip+0xf574]        # 0x140023eb0
   14001493c:	lock dec DWORD PTR [rax]
   14001493f:	jne    0x140014952
   140014941:	mov    rcx,QWORD PTR [rip+0xf568]        # 0x140023eb0
   140014948:	cmp    rcx,r12
   14001494b:	je     0x140014952
   14001494d:	call   0x14000b490
   140014952:	mov    QWORD PTR [rip+0xf557],rbx        # 0x140023eb0
   140014959:	lock inc DWORD PTR [rbx]
   14001495c:	mov    ecx,esi
   14001495e:	call   0x14000ca58
   140014963:	jmp    0x140014990
   140014965:	cmp    eax,0xffffffff
   140014968:	jne    0x140014990
   14001496a:	lea    r12,[rip+0xf10f]        # 0x140023a80
   140014971:	cmp    rbx,r12
   140014974:	je     0x14001497e
   140014976:	mov    rcx,rbx
   140014979:	call   0x14000b490
   14001497e:	call   0x14000bdf0
   140014983:	mov    DWORD PTR [rax],0x16
   140014989:	jmp    0x140014990
   14001498b:	xor    edi,edi
   14001498d:	mov    r13d,edi
   140014990:	mov    eax,r13d
   140014993:	mov    rbx,QWORD PTR [rsp+0x40]
   140014998:	mov    rsi,QWORD PTR [rsp+0x48]
   14001499d:	mov    rdi,QWORD PTR [rsp+0x50]
   1400149a2:	mov    r12,QWORD PTR [rsp+0x58]
   1400149a7:	add    rsp,0x30
   1400149ab:	pop    r13
   1400149ad:	ret    
   1400149ae:	int3   
   1400149af:	int3   
   1400149b0:	sub    rsp,0x28
   1400149b4:	cmp    DWORD PTR [rip+0x1230d],0x0        # 0x140026cc8
   1400149bb:	jne    0x1400149d1
   1400149bd:	mov    ecx,0xfffffffd
   1400149c2:	call   0x1400147d0
   1400149c7:	mov    DWORD PTR [rip+0x122f7],0x1        # 0x140026cc8
   1400149d1:	xor    eax,eax
   1400149d3:	add    rsp,0x28
   1400149d7:	ret    
   1400149d8:	lock inc DWORD PTR [rcx]
   1400149db:	mov    rax,QWORD PTR [rcx+0x110]
   1400149e2:	test   rax,rax
   1400149e5:	je     0x1400149ea
   1400149e7:	lock inc DWORD PTR [rax]
   1400149ea:	mov    rax,QWORD PTR [rcx+0x120]
   1400149f1:	test   rax,rax
   1400149f4:	je     0x1400149f9
   1400149f6:	lock inc DWORD PTR [rax]
   1400149f9:	mov    rax,QWORD PTR [rcx+0x118]
   140014a00:	test   rax,rax
   140014a03:	je     0x140014a08
   140014a05:	lock inc DWORD PTR [rax]
   140014a08:	mov    rax,QWORD PTR [rcx+0x130]
   140014a0f:	test   rax,rax
   140014a12:	je     0x140014a17
   140014a14:	lock inc DWORD PTR [rax]
   140014a17:	lea    rax,[rcx+0x58]
   140014a1b:	mov    r8d,0x6
   140014a21:	lea    rdx,[rip+0xf58c]        # 0x140023fb4
   140014a28:	cmp    QWORD PTR [rax-0x10],rdx
   140014a2c:	je     0x140014a39
   140014a2e:	mov    rdx,QWORD PTR [rax]
   140014a31:	test   rdx,rdx
   140014a34:	je     0x140014a39
   140014a36:	lock inc DWORD PTR [rdx]
   140014a39:	cmp    QWORD PTR [rax-0x8],0x0
   140014a3e:	je     0x140014a4c
   140014a40:	mov    rdx,QWORD PTR [rax+0x8]
   140014a44:	test   rdx,rdx
   140014a47:	je     0x140014a4c
   140014a49:	lock inc DWORD PTR [rdx]
   140014a4c:	add    rax,0x20
   140014a50:	dec    r8
   140014a53:	jne    0x140014a21
   140014a55:	mov    rax,QWORD PTR [rcx+0x158]
   140014a5c:	lock inc DWORD PTR [rax+0x160]
   140014a63:	ret    
   140014a64:	test   rcx,rcx
   140014a67:	je     0x140014b04
   140014a6d:	or     r9d,0xffffffff
   140014a71:	lock add DWORD PTR [rcx],r9d
   140014a75:	mov    rax,QWORD PTR [rcx+0x110]
   140014a7c:	test   rax,rax
   140014a7f:	je     0x140014a85
   140014a81:	lock add DWORD PTR [rax],r9d
   140014a85:	mov    rax,QWORD PTR [rcx+0x120]
   140014a8c:	test   rax,rax
   140014a8f:	je     0x140014a95
   140014a91:	lock add DWORD PTR [rax],r9d
   140014a95:	mov    rax,QWORD PTR [rcx+0x118]
   140014a9c:	test   rax,rax
   140014a9f:	je     0x140014aa5
   140014aa1:	lock add DWORD PTR [rax],r9d
   140014aa5:	mov    rax,QWORD PTR [rcx+0x130]
   140014aac:	test   rax,rax
   140014aaf:	je     0x140014ab5
   140014ab1:	lock add DWORD PTR [rax],r9d
   140014ab5:	lea    rax,[rcx+0x58]
   140014ab9:	mov    r8d,0x6
   140014abf:	lea    rdx,[rip+0xf4ee]        # 0x140023fb4
   140014ac6:	cmp    QWORD PTR [rax-0x10],rdx
   140014aca:	je     0x140014ad8
   140014acc:	mov    rdx,QWORD PTR [rax]
   140014acf:	test   rdx,rdx
   140014ad2:	je     0x140014ad8
   140014ad4:	lock add DWORD PTR [rdx],r9d
   140014ad8:	cmp    QWORD PTR [rax-0x8],0x0
   140014add:	je     0x140014aec
   140014adf:	mov    rdx,QWORD PTR [rax+0x8]
   140014ae3:	test   rdx,rdx
   140014ae6:	je     0x140014aec
   140014ae8:	lock add DWORD PTR [rdx],r9d
   140014aec:	add    rax,0x20
   140014af0:	dec    r8
   140014af3:	jne    0x140014abf
   140014af5:	mov    rax,QWORD PTR [rcx+0x158]
   140014afc:	lock add DWORD PTR [rax+0x160],r9d
   140014b04:	mov    rax,rcx
   140014b07:	ret    
   140014b08:	mov    QWORD PTR [rsp+0x8],rbx
   140014b0d:	mov    QWORD PTR [rsp+0x10],rsi
   140014b12:	push   rdi
   140014b13:	sub    rsp,0x20
   140014b17:	mov    rax,QWORD PTR [rcx+0x128]
   140014b1e:	mov    rbx,rcx
   140014b21:	test   rax,rax
   140014b24:	je     0x140014b9f
   140014b26:	lea    rcx,[rip+0xfb23]        # 0x140024650
   140014b2d:	cmp    rax,rcx
   140014b30:	je     0x140014b9f
   140014b32:	mov    rax,QWORD PTR [rbx+0x110]
   140014b39:	test   rax,rax
   140014b3c:	je     0x140014b9f
   140014b3e:	cmp    DWORD PTR [rax],0x0
   140014b41:	jne    0x140014b9f
   140014b43:	mov    rcx,QWORD PTR [rbx+0x120]
   140014b4a:	test   rcx,rcx
   140014b4d:	je     0x140014b65
   140014b4f:	cmp    DWORD PTR [rcx],0x0
   140014b52:	jne    0x140014b65
   140014b54:	call   0x14000b490
   140014b59:	mov    rcx,QWORD PTR [rbx+0x128]
   140014b60:	call   0x1400192fc
   140014b65:	mov    rcx,QWORD PTR [rbx+0x118]
   140014b6c:	test   rcx,rcx
   140014b6f:	je     0x140014b87
   140014b71:	cmp    DWORD PTR [rcx],0x0
   140014b74:	jne    0x140014b87
   140014b76:	call   0x14000b490
   140014b7b:	mov    rcx,QWORD PTR [rbx+0x128]
   140014b82:	call   0x140019290
   140014b87:	mov    rcx,QWORD PTR [rbx+0x110]
   140014b8e:	call   0x14000b490
   140014b93:	mov    rcx,QWORD PTR [rbx+0x128]
   140014b9a:	call   0x14000b490
   140014b9f:	mov    rax,QWORD PTR [rbx+0x130]
   140014ba6:	test   rax,rax
   140014ba9:	je     0x140014bf2
   140014bab:	cmp    DWORD PTR [rax],0x0
   140014bae:	jne    0x140014bf2
   140014bb0:	mov    rcx,QWORD PTR [rbx+0x138]
   140014bb7:	sub    rcx,0xfe
   140014bbe:	call   0x14000b490
   140014bc3:	mov    rcx,QWORD PTR [rbx+0x148]
   140014bca:	mov    edi,0x80
   140014bcf:	sub    rcx,rdi
   140014bd2:	call   0x14000b490
   140014bd7:	mov    rcx,QWORD PTR [rbx+0x150]
   140014bde:	sub    rcx,rdi
   140014be1:	call   0x14000b490
   140014be6:	mov    rcx,QWORD PTR [rbx+0x130]
   140014bed:	call   0x14000b490
   140014bf2:	mov    rcx,QWORD PTR [rbx+0x158]
   140014bf9:	lea    rax,[rip+0xf3c0]        # 0x140023fc0
   140014c00:	cmp    rcx,rax
   140014c03:	je     0x140014c1f
   140014c05:	cmp    DWORD PTR [rcx+0x160],0x0
   140014c0c:	jne    0x140014c1f
   140014c0e:	call   0x140018ea0
   140014c13:	mov    rcx,QWORD PTR [rbx+0x158]
   140014c1a:	call   0x14000b490
   140014c1f:	lea    rdi,[rbx+0x58]
   140014c23:	mov    esi,0x6
   140014c28:	lea    rax,[rip+0xf385]        # 0x140023fb4
   140014c2f:	cmp    QWORD PTR [rdi-0x10],rax
   140014c33:	je     0x140014c47
   140014c35:	mov    rcx,QWORD PTR [rdi]
   140014c38:	test   rcx,rcx
   140014c3b:	je     0x140014c47
   140014c3d:	cmp    DWORD PTR [rcx],0x0
   140014c40:	jne    0x140014c47
   140014c42:	call   0x14000b490
   140014c47:	cmp    QWORD PTR [rdi-0x8],0x0
   140014c4c:	je     0x140014c61
   140014c4e:	mov    rcx,QWORD PTR [rdi+0x8]
   140014c52:	test   rcx,rcx
   140014c55:	je     0x140014c61
   140014c57:	cmp    DWORD PTR [rcx],0x0
   140014c5a:	jne    0x140014c61
   140014c5c:	call   0x14000b490
   140014c61:	add    rdi,0x20
   140014c65:	dec    rsi
   140014c68:	jne    0x140014c28
   140014c6a:	mov    rcx,rbx
   140014c6d:	mov    rbx,QWORD PTR [rsp+0x30]
   140014c72:	mov    rsi,QWORD PTR [rsp+0x38]
   140014c77:	add    rsp,0x20
   140014c7b:	pop    rdi
   140014c7c:	jmp    0x14000b490
   140014c81:	int3   
   140014c82:	int3   
   140014c83:	int3   
   140014c84:	rex push rbx
   140014c86:	sub    rsp,0x20
   140014c8a:	mov    rbx,rdx
   140014c8d:	test   rdx,rdx
   140014c90:	je     0x140014cd3
   140014c92:	test   rcx,rcx
   140014c95:	je     0x140014cd3
   140014c97:	mov    r10,QWORD PTR [rcx]
   140014c9a:	cmp    r10,rdx
   140014c9d:	je     0x140014cce
   140014c9f:	mov    QWORD PTR [rcx],rdx
   140014ca2:	mov    rcx,rdx
   140014ca5:	call   0x1400149d8
   140014caa:	test   r10,r10
   140014cad:	je     0x140014cce
   140014caf:	mov    rcx,r10
   140014cb2:	call   0x140014a64
   140014cb7:	cmp    DWORD PTR [r10],0x0
   140014cbb:	jne    0x140014cce
   140014cbd:	lea    rax,[rip+0xf5bc]        # 0x140024280
   140014cc4:	cmp    r10,rax
   140014cc7:	je     0x140014cce
   140014cc9:	call   0x140014b08
   140014cce:	mov    rax,rbx
   140014cd1:	jmp    0x140014cd5
   140014cd3:	xor    eax,eax
   140014cd5:	add    rsp,0x20
   140014cd9:	pop    rbx
   140014cda:	ret    
   140014cdb:	int3   
   140014cdc:	rex push rbx
   140014cde:	sub    rsp,0x20
   140014ce2:	call   0x14000d234
   140014ce7:	mov    rbx,rax
   140014cea:	mov    ecx,DWORD PTR [rax+0xc8]
   140014cf0:	test   DWORD PTR [rip+0xf2ba],ecx        # 0x140023fb0
   140014cf6:	je     0x140014d10
   140014cf8:	cmp    QWORD PTR [rax+0xc0],0x0
   140014d00:	je     0x140014d10
   140014d02:	call   0x14000d234
   140014d07:	mov    rbx,QWORD PTR [rax+0xc0]
   140014d0e:	jmp    0x140014d3b
   140014d10:	mov    ecx,0xc
   140014d15:	call   0x14000cb58
   140014d1a:	nop
   140014d1b:	lea    rcx,[rbx+0xc0]
   140014d22:	mov    rdx,QWORD PTR [rip+0xf6b7]        # 0x1400243e0
   140014d29:	call   0x140014c84
   140014d2e:	mov    rbx,rax
   140014d31:	mov    ecx,0xc
   140014d36:	call   0x14000ca58
   140014d3b:	test   rbx,rbx
   140014d3e:	jne    0x140014d48
   140014d40:	lea    ecx,[rbx+0x20]
   140014d43:	call   0x140009c14
   140014d48:	mov    rax,rbx
   140014d4b:	add    rsp,0x20
   140014d4f:	pop    rbx
   140014d50:	ret    
   140014d51:	int3   
   140014d52:	int3   
   140014d53:	int3   
   140014d54:	mov    QWORD PTR [rsp+0x10],rsi
   140014d59:	push   rbp
   140014d5a:	push   rdi
   140014d5b:	push   r12
   140014d5d:	mov    rbp,rsp
   140014d60:	sub    rsp,0x60
   140014d64:	movsxd rdi,ecx
   140014d67:	mov    r12d,edx
   140014d6a:	lea    rcx,[rbp-0x20]
   140014d6e:	mov    rdx,r8
   140014d71:	call   0x14000c724
   140014d76:	lea    r11d,[rdi+0x1]
   140014d7a:	cmp    r11d,0x100
   140014d81:	ja     0x140014d97
   140014d83:	mov    rax,QWORD PTR [rbp-0x20]
   140014d87:	mov    rcx,QWORD PTR [rax+0x140]
   140014d8e:	movzx  eax,WORD PTR [rcx+rdi*2]
   140014d92:	jmp    0x140014e17
   140014d97:	mov    esi,edi
   140014d99:	lea    rdx,[rbp-0x20]
   140014d9d:	sar    esi,0x8
   140014da0:	movzx  ecx,sil
   140014da4:	call   0x140015338
   140014da9:	mov    edx,0x1
   140014dae:	test   eax,eax
   140014db0:	je     0x140014dc4
   140014db2:	mov    BYTE PTR [rbp+0x38],sil
   140014db6:	mov    BYTE PTR [rbp+0x39],dil
   140014dba:	mov    BYTE PTR [rbp+0x3a],0x0
   140014dbe:	lea    r9d,[rdx+0x1]
   140014dc2:	jmp    0x140014dcf
   140014dc4:	mov    BYTE PTR [rbp+0x38],dil
   140014dc8:	mov    BYTE PTR [rbp+0x39],0x0
   140014dcc:	mov    r9d,edx
   140014dcf:	mov    rcx,QWORD PTR [rbp-0x20]
   140014dd3:	mov    DWORD PTR [rsp+0x38],edx
   140014dd7:	lea    r8,[rbp+0x38]
   140014ddb:	mov    eax,DWORD PTR [rcx+0x14]
   140014dde:	mov    DWORD PTR [rsp+0x30],eax
   140014de2:	mov    eax,DWORD PTR [rcx+0x4]
   140014de5:	lea    rcx,[rbp-0x20]
   140014de9:	mov    DWORD PTR [rsp+0x28],eax
   140014ded:	lea    rax,[rbp+0x20]
   140014df1:	mov    QWORD PTR [rsp+0x20],rax
   140014df6:	call   0x140018e20
   140014dfb:	test   eax,eax
   140014dfd:	jne    0x140014e13
   140014dff:	cmp    BYTE PTR [rbp-0x8],al
   140014e02:	je     0x140014e0f
   140014e04:	mov    rax,QWORD PTR [rbp-0x10]
   140014e08:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140014e0f:	xor    eax,eax
   140014e11:	jmp    0x140014e2b
   140014e13:	movzx  eax,WORD PTR [rbp+0x20]
   140014e17:	and    eax,r12d
   140014e1a:	cmp    BYTE PTR [rbp-0x8],0x0
   140014e1e:	je     0x140014e2b
   140014e20:	mov    rcx,QWORD PTR [rbp-0x10]
   140014e24:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140014e2b:	mov    rsi,QWORD PTR [rsp+0x88]
   140014e33:	add    rsp,0x60
   140014e37:	pop    r12
   140014e39:	pop    rdi
   140014e3a:	pop    rbp
   140014e3b:	ret    
   140014e3c:	sub    rsp,0x28
   140014e40:	call   0x14000cc00
   140014e45:	test   rax,rax
   140014e48:	je     0x140014e54
   140014e4a:	mov    ecx,0x16
   140014e4f:	call   0x14000cc10
   140014e54:	test   BYTE PTR [rip+0xf5a5],0x2        # 0x140024400
   140014e5b:	je     0x140014e71
   140014e5d:	mov    r8d,0x1
   140014e63:	mov    edx,0x40000015
   140014e68:	lea    ecx,[r8+0x2]
   140014e6c:	call   0x14000ce5c
   140014e71:	mov    ecx,0x3
   140014e76:	call   0x140009be8
   140014e7b:	int3   
   140014e7c:	and    DWORD PTR [rip+0x10be5],0x0        # 0x140025a68
   140014e83:	ret    
   140014e84:	sub    rsp,0x28
   140014e88:	test   rcx,rcx
   140014e8b:	jne    0x140014ea6
   140014e8d:	call   0x14000bdf0
   140014e92:	mov    DWORD PTR [rax],0x16
   140014e98:	call   0x14000d04c
   140014e9d:	or     rax,0xffffffffffffffff
   140014ea1:	add    rsp,0x28
   140014ea5:	ret    
   140014ea6:	mov    r8,rcx
   140014ea9:	mov    rcx,QWORD PTR [rip+0x10518]        # 0x1400253c8
   140014eb0:	xor    edx,edx
   140014eb2:	add    rsp,0x28
   140014eb6:	rex.W jmp QWORD PTR [rip+0x5423]        # 0x14001a2e0
   140014ebd:	int3   
   140014ebe:	int3   
   140014ebf:	int3   
   140014ec0:	mov    ecx,0x2
   140014ec5:	jmp    0x140009c14
   140014eca:	int3   
   140014ecb:	int3   
   140014ecc:	rex push rbx
   140014ece:	push   rbp
   140014ecf:	push   rsi
   140014ed0:	push   rdi
   140014ed1:	push   r12
   140014ed3:	push   r13
   140014ed5:	push   r14
   140014ed7:	sub    rsp,0x50
   140014edb:	mov    rax,QWORD PTR [rip+0xe1de]        # 0x1400230c0
   140014ee2:	xor    rax,rsp
   140014ee5:	mov    QWORD PTR [rsp+0x48],rax
   140014eea:	mov    ebp,r8d
   140014eed:	mov    r14,rdx
   140014ef0:	mov    r13,rcx
   140014ef3:	call   0x14000d0a8
   140014ef8:	xor    ebx,ebx
   140014efa:	cmp    QWORD PTR [rip+0x10a6f],rbx        # 0x140025970
   140014f01:	mov    rdi,rax
   140014f04:	jne    0x140014fdf
   140014f0a:	lea    rcx,[rip+0xb0af]        # 0x14001ffc0
   140014f11:	call   QWORD PTR [rip+0x5261]        # 0x14001a178
   140014f17:	mov    rsi,rax
   140014f1a:	test   rax,rax
   140014f1d:	je     0x1400150b6
   140014f23:	lea    rdx,[rip+0xb086]        # 0x14001ffb0
   140014f2a:	mov    rcx,rax
   140014f2d:	call   QWORD PTR [rip+0x5165]        # 0x14001a098
   140014f33:	test   rax,rax
   140014f36:	je     0x1400150b6
   140014f3c:	mov    rcx,rax
   140014f3f:	call   QWORD PTR [rip+0x522b]        # 0x14001a170
   140014f45:	lea    rdx,[rip+0xb054]        # 0x14001ffa0
   140014f4c:	mov    rcx,rsi
   140014f4f:	mov    QWORD PTR [rip+0x10a1a],rax        # 0x140025970
   140014f56:	call   QWORD PTR [rip+0x513c]        # 0x14001a098
   140014f5c:	mov    rcx,rax
   140014f5f:	call   QWORD PTR [rip+0x520b]        # 0x14001a170
   140014f65:	lea    rdx,[rip+0xb01c]        # 0x14001ff88
   140014f6c:	mov    rcx,rsi
   140014f6f:	mov    QWORD PTR [rip+0x10a02],rax        # 0x140025978
   140014f76:	call   QWORD PTR [rip+0x511c]        # 0x14001a098
   140014f7c:	mov    rcx,rax
   140014f7f:	call   QWORD PTR [rip+0x51eb]        # 0x14001a170
   140014f85:	lea    rdx,[rip+0xafdc]        # 0x14001ff68
   140014f8c:	mov    rcx,rsi
   140014f8f:	mov    QWORD PTR [rip+0x109ea],rax        # 0x140025980
   140014f96:	call   QWORD PTR [rip+0x50fc]        # 0x14001a098
   140014f9c:	mov    rcx,rax
   140014f9f:	call   QWORD PTR [rip+0x51cb]        # 0x14001a170
   140014fa5:	mov    r11,rax
   140014fa8:	mov    QWORD PTR [rip+0x109e1],rax        # 0x140025990
   140014faf:	test   rax,rax
   140014fb2:	je     0x140014fd6
   140014fb4:	lea    rdx,[rip+0xaf95]        # 0x14001ff50
   140014fbb:	mov    rcx,rsi
   140014fbe:	call   QWORD PTR [rip+0x50d4]        # 0x14001a098
   140014fc4:	mov    rcx,rax
   140014fc7:	call   QWORD PTR [rip+0x51a3]        # 0x14001a170
   140014fcd:	mov    QWORD PTR [rip+0x109b4],rax        # 0x140025988
   140014fd4:	jmp    0x140014fe6
   140014fd6:	mov    rax,QWORD PTR [rip+0x109ab]        # 0x140025988
   140014fdd:	jmp    0x140014fed
   140014fdf:	mov    rax,QWORD PTR [rip+0x109a2]        # 0x140025988
   140014fe6:	mov    r11,QWORD PTR [rip+0x109a3]        # 0x140025990
   140014fed:	cmp    rax,rdi
   140014ff0:	je     0x140015054
   140014ff2:	cmp    r11,rdi
   140014ff5:	je     0x140015054
   140014ff7:	mov    rcx,rax
   140014ffa:	call   QWORD PTR [rip+0x50e0]        # 0x14001a0e0
   140015000:	mov    rcx,QWORD PTR [rip+0x10989]        # 0x140025990
   140015007:	mov    rsi,rax
   14001500a:	call   QWORD PTR [rip+0x50d0]        # 0x14001a0e0
   140015010:	mov    r12,rax
   140015013:	test   rsi,rsi
   140015016:	je     0x140015054
   140015018:	test   rax,rax
   14001501b:	je     0x140015054
   14001501d:	call   rsi
   14001501f:	test   rax,rax
   140015022:	je     0x14001504e
   140015024:	lea    rcx,[rsp+0x30]
   140015029:	mov    r9d,0xc
   14001502f:	lea    r8,[rsp+0x38]
   140015034:	mov    QWORD PTR [rsp+0x20],rcx
   140015039:	lea    edx,[r9-0xb]
   14001503d:	mov    rcx,rax
   140015040:	call   r12
   140015043:	test   eax,eax
   140015045:	je     0x14001504e
   140015047:	test   BYTE PTR [rsp+0x40],0x1
   14001504c:	jne    0x140015054
   14001504e:	bts    ebp,0x15
   140015052:	jmp    0x140015094
   140015054:	mov    rcx,QWORD PTR [rip+0x1091d]        # 0x140025978
   14001505b:	cmp    rcx,rdi
   14001505e:	je     0x140015094
   140015060:	call   QWORD PTR [rip+0x507a]        # 0x14001a0e0
   140015066:	test   rax,rax
   140015069:	je     0x140015094
   14001506b:	call   rax
   14001506d:	mov    rbx,rax
   140015070:	test   rax,rax
   140015073:	je     0x140015094
   140015075:	mov    rcx,QWORD PTR [rip+0x10904]        # 0x140025980
   14001507c:	cmp    rcx,rdi
   14001507f:	je     0x140015094
   140015081:	call   QWORD PTR [rip+0x5059]        # 0x14001a0e0
   140015087:	test   rax,rax
   14001508a:	je     0x140015094
   14001508c:	mov    rcx,rbx
   14001508f:	call   rax
   140015091:	mov    rbx,rax
   140015094:	mov    rcx,QWORD PTR [rip+0x108d5]        # 0x140025970
   14001509b:	call   QWORD PTR [rip+0x503f]        # 0x14001a0e0
   1400150a1:	test   rax,rax
   1400150a4:	je     0x1400150b6
   1400150a6:	mov    r9d,ebp
   1400150a9:	mov    r8,r14
   1400150ac:	mov    rdx,r13
   1400150af:	mov    rcx,rbx
   1400150b2:	call   rax
   1400150b4:	jmp    0x1400150b8
   1400150b6:	xor    eax,eax
   1400150b8:	mov    rcx,QWORD PTR [rsp+0x48]
   1400150bd:	xor    rcx,rsp
   1400150c0:	call   0x14000a850
   1400150c5:	add    rsp,0x50
   1400150c9:	pop    r14
   1400150cb:	pop    r13
   1400150cd:	pop    r12
   1400150cf:	pop    rdi
   1400150d0:	pop    rsi
   1400150d1:	pop    rbp
   1400150d2:	pop    rbx
   1400150d3:	ret    
   1400150d4:	rex push rbx
   1400150d6:	sub    rsp,0x20
   1400150da:	xor    r10d,r10d
   1400150dd:	mov    r9,rcx
   1400150e0:	test   rcx,rcx
   1400150e3:	je     0x1400150f3
   1400150e5:	test   rdx,rdx
   1400150e8:	je     0x1400150f3
   1400150ea:	test   r8,r8
   1400150ed:	jne    0x14001510c
   1400150ef:	mov    WORD PTR [rcx],r10w
   1400150f3:	call   0x14000bdf0
   1400150f8:	mov    ebx,0x16
   1400150fd:	mov    DWORD PTR [rax],ebx
   1400150ff:	call   0x14000d04c
   140015104:	mov    eax,ebx
   140015106:	add    rsp,0x20
   14001510a:	pop    rbx
   14001510b:	ret    
   14001510c:	cmp    WORD PTR [rcx],r10w
   140015110:	je     0x14001511b
   140015112:	add    rcx,0x2
   140015116:	dec    rdx
   140015119:	jne    0x14001510c
   14001511b:	test   rdx,rdx
   14001511e:	jne    0x140015126
   140015120:	mov    WORD PTR [r9],r10w
   140015124:	jmp    0x1400150f3
   140015126:	sub    rcx,r8
   140015129:	movzx  eax,WORD PTR [r8]
   14001512d:	mov    WORD PTR [rcx+r8*1],ax
   140015132:	add    r8,0x2
   140015136:	test   ax,ax
   140015139:	je     0x140015140
   14001513b:	dec    rdx
   14001513e:	jne    0x140015129
   140015140:	test   rdx,rdx
   140015143:	jne    0x140015155
   140015145:	mov    WORD PTR [r9],r10w
   140015149:	call   0x14000bdf0
   14001514e:	mov    ebx,0x22
   140015153:	jmp    0x1400150fd
   140015155:	xor    eax,eax
   140015157:	jmp    0x140015106
   140015159:	int3   
   14001515a:	int3   
   14001515b:	int3   
   14001515c:	rex push rbx
   14001515e:	sub    rsp,0x20
   140015162:	xor    ebx,ebx
   140015164:	mov    r10,r8
   140015167:	test   r9,r9
   14001516a:	jne    0x14001517a
   14001516c:	test   rcx,rcx
   14001516f:	jne    0x14001517f
   140015171:	test   rdx,rdx
   140015174:	jne    0x140015196
   140015176:	xor    eax,eax
   140015178:	jmp    0x1400151a9
   14001517a:	test   rcx,rcx
   14001517d:	je     0x140015196
   14001517f:	test   rdx,rdx
   140015182:	je     0x140015196
   140015184:	test   r9,r9
   140015187:	jne    0x14001518e
   140015189:	mov    WORD PTR [rcx],bx
   14001518c:	jmp    0x140015176
   14001518e:	test   r8,r8
   140015191:	jne    0x1400151af
   140015193:	mov    WORD PTR [rcx],bx
   140015196:	call   0x14000bdf0
   14001519b:	mov    ebx,0x16
   1400151a0:	mov    DWORD PTR [rax],ebx
   1400151a2:	call   0x14000d04c
   1400151a7:	mov    eax,ebx
   1400151a9:	add    rsp,0x20
   1400151ad:	pop    rbx
   1400151ae:	ret    
   1400151af:	mov    r11,rcx
   1400151b2:	mov    r8,rdx
   1400151b5:	cmp    r9,0xffffffffffffffff
   1400151b9:	jne    0x1400151d7
   1400151bb:	sub    r11,r10
   1400151be:	movzx  eax,WORD PTR [r10]
   1400151c2:	mov    WORD PTR [r11+r10*1],ax
   1400151c7:	add    r10,0x2
   1400151cb:	test   ax,ax
   1400151ce:	je     0x1400151ff
   1400151d0:	dec    r8
   1400151d3:	jne    0x1400151be
   1400151d5:	jmp    0x1400151ff
   1400151d7:	sub    r10,rcx
   1400151da:	movzx  eax,WORD PTR [r10+r11*1]
   1400151df:	mov    WORD PTR [r11],ax
   1400151e3:	add    r11,0x2
   1400151e7:	test   ax,ax
   1400151ea:	je     0x1400151f6
   1400151ec:	dec    r8
   1400151ef:	je     0x1400151f6
   1400151f1:	dec    r9
   1400151f4:	jne    0x1400151da
   1400151f6:	test   r9,r9
   1400151f9:	jne    0x1400151ff
   1400151fb:	mov    WORD PTR [r11],bx
   1400151ff:	test   r8,r8
   140015202:	jne    0x140015176
   140015208:	cmp    r9,0xffffffffffffffff
   14001520c:	jne    0x140015219
   14001520e:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   140015213:	lea    eax,[r8+0x50]
   140015217:	jmp    0x1400151a9
   140015219:	mov    WORD PTR [rcx],bx
   14001521c:	call   0x14000bdf0
   140015221:	mov    ebx,0x22
   140015226:	jmp    0x1400151a0
   14001522b:	int3   
   14001522c:	rex push rbx
   14001522e:	sub    rsp,0x20
   140015232:	xor    r10d,r10d
   140015235:	mov    r9,rcx
   140015238:	test   rcx,rcx
   14001523b:	je     0x14001524b
   14001523d:	test   rdx,rdx
   140015240:	je     0x14001524b
   140015242:	test   r8,r8
   140015245:	jne    0x140015264
   140015247:	mov    WORD PTR [rcx],r10w
   14001524b:	call   0x14000bdf0
   140015250:	mov    ebx,0x16
   140015255:	mov    DWORD PTR [rax],ebx
   140015257:	call   0x14000d04c
   14001525c:	mov    eax,ebx
   14001525e:	add    rsp,0x20
   140015262:	pop    rbx
   140015263:	ret    
   140015264:	sub    rcx,r8
   140015267:	movzx  eax,WORD PTR [r8]
   14001526b:	mov    WORD PTR [rcx+r8*1],ax
   140015270:	add    r8,0x2
   140015274:	test   ax,ax
   140015277:	je     0x14001527e
   140015279:	dec    rdx
   14001527c:	jne    0x140015267
   14001527e:	test   rdx,rdx
   140015281:	jne    0x140015293
   140015283:	mov    WORD PTR [r9],r10w
   140015287:	call   0x14000bdf0
   14001528c:	mov    ebx,0x22
   140015291:	jmp    0x140015255
   140015293:	xor    eax,eax
   140015295:	jmp    0x14001525e
   140015297:	int3   
   140015298:	sub    rsp,0x28
   14001529c:	test   ecx,ecx
   14001529e:	js     0x1400152c0
   1400152a0:	cmp    ecx,0x2
   1400152a3:	jle    0x1400152b2
   1400152a5:	cmp    ecx,0x3
   1400152a8:	jne    0x1400152c0
   1400152aa:	mov    eax,DWORD PTR [rip+0xf740]        # 0x1400249f0
   1400152b0:	jmp    0x1400152d3
   1400152b2:	mov    eax,DWORD PTR [rip+0xf738]        # 0x1400249f0
   1400152b8:	mov    DWORD PTR [rip+0xf732],ecx        # 0x1400249f0
   1400152be:	jmp    0x1400152d3
   1400152c0:	call   0x14000bdf0
   1400152c5:	mov    DWORD PTR [rax],0x16
   1400152cb:	call   0x14000d04c
   1400152d0:	or     eax,0xffffffff
   1400152d3:	add    rsp,0x28
   1400152d7:	ret    
   1400152d8:	sub    rsp,0x28
   1400152dc:	cmp    ecx,0xfffffffe
   1400152df:	jne    0x1400152ee
   1400152e1:	call   0x14000bdf0
   1400152e6:	mov    DWORD PTR [rax],0x9
   1400152ec:	jmp    0x140015330
   1400152ee:	test   ecx,ecx
   1400152f0:	js     0x140015320
   1400152f2:	cmp    ecx,DWORD PTR [rip+0x10774]        # 0x140025a6c
   1400152f8:	jae    0x140015320
   1400152fa:	movsxd rcx,ecx
   1400152fd:	lea    rdx,[rip+0x1077c]        # 0x140025a80
   140015304:	mov    rax,rcx
   140015307:	and    ecx,0x1f
   14001530a:	sar    rax,0x5
   14001530e:	imul   rcx,rcx,0x58
   140015312:	mov    rax,QWORD PTR [rdx+rax*8]
   140015316:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   14001531b:	and    eax,0x40
   14001531e:	jmp    0x140015332
   140015320:	call   0x14000bdf0
   140015325:	mov    DWORD PTR [rax],0x9
   14001532b:	call   0x14000d04c
   140015330:	xor    eax,eax
   140015332:	add    rsp,0x28
   140015336:	ret    
   140015337:	int3   
   140015338:	rex push rbx
   14001533a:	sub    rsp,0x40
   14001533e:	mov    ebx,ecx
   140015340:	lea    rcx,[rsp+0x20]
   140015345:	call   0x14000c724
   14001534a:	mov    rax,QWORD PTR [rsp+0x20]
   14001534f:	movzx  r11d,bl
   140015353:	mov    rcx,QWORD PTR [rax+0x140]
   14001535a:	movzx  eax,WORD PTR [rcx+r11*2]
   14001535f:	and    eax,0x8000
   140015364:	cmp    BYTE PTR [rsp+0x38],0x0
   140015369:	je     0x140015377
   14001536b:	mov    rcx,QWORD PTR [rsp+0x30]
   140015370:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015377:	add    rsp,0x40
   14001537b:	pop    rbx
   14001537c:	ret    
   14001537d:	int3   
   14001537e:	int3   
   14001537f:	int3   
   140015380:	rex push rbx
   140015382:	sub    rsp,0x40
   140015386:	mov    ebx,ecx
   140015388:	lea    rcx,[rsp+0x20]
   14001538d:	xor    edx,edx
   14001538f:	call   0x14000c724
   140015394:	mov    rax,QWORD PTR [rsp+0x20]
   140015399:	movzx  r11d,bl
   14001539d:	mov    rcx,QWORD PTR [rax+0x140]
   1400153a4:	movzx  eax,WORD PTR [rcx+r11*2]
   1400153a9:	and    eax,0x8000
   1400153ae:	cmp    BYTE PTR [rsp+0x38],0x0
   1400153b3:	je     0x1400153c1
   1400153b5:	mov    rcx,QWORD PTR [rsp+0x30]
   1400153ba:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400153c1:	add    rsp,0x40
   1400153c5:	pop    rbx
   1400153c6:	ret    
   1400153c7:	int3   
   1400153c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400153cd:	mov    WORD PTR [rsp+0x20],r9w
   1400153d3:	push   rbp
   1400153d4:	push   rsi
   1400153d5:	push   rdi
   1400153d6:	mov    rbp,rsp
   1400153d9:	sub    rsp,0x60
   1400153dd:	mov    rdi,r8
   1400153e0:	mov    rsi,rdx
   1400153e3:	mov    rbx,rcx
   1400153e6:	test   rdx,rdx
   1400153e9:	jne    0x1400153fe
   1400153eb:	test   r8,r8
   1400153ee:	je     0x1400153fe
   1400153f0:	test   rcx,rcx
   1400153f3:	je     0x1400153f7
   1400153f5:	and    DWORD PTR [rcx],edx
   1400153f7:	xor    eax,eax
   1400153f9:	jmp    0x140015488
   1400153fe:	test   rcx,rcx
   140015401:	je     0x140015406
   140015403:	or     DWORD PTR [rcx],0xffffffff
   140015406:	cmp    r8,0x7fffffff
   14001540d:	jbe    0x140015424
   14001540f:	call   0x14000bdf0
   140015414:	mov    ebx,0x16
   140015419:	mov    DWORD PTR [rax],ebx
   14001541b:	call   0x14000d04c
   140015420:	mov    eax,ebx
   140015422:	jmp    0x140015488
   140015424:	mov    rdx,QWORD PTR [rbp+0x40]
   140015428:	lea    rcx,[rbp-0x20]
   14001542c:	call   0x14000c724
   140015431:	mov    r11,QWORD PTR [rbp-0x20]
   140015435:	cmp    DWORD PTR [r11+0x14],0x0
   14001543a:	jne    0x1400154f2
   140015440:	movzx  eax,WORD PTR [rbp+0x38]
   140015444:	mov    ecx,0xff
   140015449:	cmp    ax,cx
   14001544c:	jbe    0x140015498
   14001544e:	test   rsi,rsi
   140015451:	je     0x140015465
   140015453:	test   rdi,rdi
   140015456:	je     0x140015465
   140015458:	mov    r8,rdi
   14001545b:	xor    edx,edx
   14001545d:	mov    rcx,rsi
   140015460:	call   0x14000a560
   140015465:	call   0x14000bdf0
   14001546a:	mov    DWORD PTR [rax],0x2a
   140015470:	call   0x14000bdf0
   140015475:	cmp    BYTE PTR [rbp-0x8],0x0
   140015479:	mov    eax,DWORD PTR [rax]
   14001547b:	je     0x140015488
   14001547d:	mov    rcx,QWORD PTR [rbp-0x10]
   140015481:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015488:	mov    rbx,QWORD PTR [rsp+0x80]
   140015490:	add    rsp,0x60
   140015494:	pop    rdi
   140015495:	pop    rsi
   140015496:	pop    rbp
   140015497:	ret    
   140015498:	test   rsi,rsi
   14001549b:	je     0x1400154cd
   14001549d:	test   rdi,rdi
   1400154a0:	jne    0x1400154cb
   1400154a2:	call   0x14000bdf0
   1400154a7:	lea    ebx,[rdi+0x22]
   1400154aa:	mov    DWORD PTR [rax],ebx
   1400154ac:	call   0x14000d04c
   1400154b1:	cmp    BYTE PTR [rbp-0x8],dil
   1400154b5:	je     0x140015420
   1400154bb:	mov    rcx,QWORD PTR [rbp-0x10]
   1400154bf:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400154c6:	jmp    0x140015420
   1400154cb:	mov    BYTE PTR [rsi],al
   1400154cd:	test   rbx,rbx
   1400154d0:	je     0x1400154d8
   1400154d2:	mov    DWORD PTR [rbx],0x1
   1400154d8:	cmp    BYTE PTR [rbp-0x8],0x0
   1400154dc:	je     0x1400153f7
   1400154e2:	mov    rax,QWORD PTR [rbp-0x10]
   1400154e6:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400154ed:	jmp    0x1400153f7
   1400154f2:	and    DWORD PTR [rbp+0x28],0x0
   1400154f6:	mov    ecx,DWORD PTR [r11+0x4]
   1400154fa:	lea    rax,[rbp+0x28]
   1400154fe:	mov    QWORD PTR [rsp+0x38],rax
   140015503:	and    QWORD PTR [rsp+0x30],0x0
   140015509:	lea    r8,[rbp+0x38]
   14001550d:	mov    r9d,0x1
   140015513:	xor    edx,edx
   140015515:	mov    DWORD PTR [rsp+0x28],edi
   140015519:	mov    QWORD PTR [rsp+0x20],rsi
   14001551e:	call   QWORD PTR [rip+0x4ce4]        # 0x14001a208
   140015524:	test   eax,eax
   140015526:	je     0x14001553b
   140015528:	cmp    DWORD PTR [rbp+0x28],0x0
   14001552c:	jne    0x140015465
   140015532:	test   rbx,rbx
   140015535:	je     0x1400154d8
   140015537:	mov    DWORD PTR [rbx],eax
   140015539:	jmp    0x1400154d8
   14001553b:	call   QWORD PTR [rip+0x4b2f]        # 0x14001a070
   140015541:	cmp    eax,0x7a
   140015544:	jne    0x140015465
   14001554a:	test   rsi,rsi
   14001554d:	je     0x140015561
   14001554f:	test   rdi,rdi
   140015552:	je     0x140015561
   140015554:	mov    r8,rdi
   140015557:	xor    edx,edx
   140015559:	mov    rcx,rsi
   14001555c:	call   0x14000a560
   140015561:	call   0x14000bdf0
   140015566:	mov    ebx,0x22
   14001556b:	mov    DWORD PTR [rax],ebx
   14001556d:	call   0x14000d04c
   140015572:	cmp    BYTE PTR [rbp-0x8],0x0
   140015576:	je     0x140015420
   14001557c:	mov    rax,QWORD PTR [rbp-0x10]
   140015580:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140015587:	jmp    0x140015420
   14001558c:	sub    rsp,0x38
   140015590:	and    QWORD PTR [rsp+0x20],0x0
   140015596:	call   0x1400153c8
   14001559b:	add    rsp,0x38
   14001559f:	ret    
   1400155a0:	rex push rbp
   1400155a2:	push   rbx
   1400155a3:	push   rsi
   1400155a4:	push   rdi
   1400155a5:	push   r12
   1400155a7:	push   r13
   1400155a9:	push   r14
   1400155ab:	push   r15
   1400155ad:	sub    rsp,0x68
   1400155b1:	lea    rbp,[rsp+0x30]
   1400155b6:	mov    rax,QWORD PTR [rip+0xdb03]        # 0x1400230c0
   1400155bd:	xor    rax,rbp
   1400155c0:	mov    QWORD PTR [rbp+0x28],rax
   1400155c4:	mov    edi,DWORD PTR [rbp+0xa0]
   1400155ca:	mov    r12,QWORD PTR [rbp+0xa8]
   1400155d1:	xor    ebx,ebx
   1400155d3:	mov    DWORD PTR [rbp+0x4],r8d
   1400155d7:	mov    r13,r9
   1400155da:	mov    DWORD PTR [rbp+0x0],edx
   1400155dd:	mov    r8,rcx
   1400155e0:	mov    QWORD PTR [rbp+0x8],r12
   1400155e4:	mov    r15d,0x1
   1400155ea:	test   edi,edi
   1400155ec:	jle    0x140015631
   1400155ee:	mov    edx,edi
   1400155f0:	mov    rax,r9
   1400155f3:	sub    edx,r15d
   1400155f6:	or     ecx,0xffffffff
   1400155f9:	cmp    BYTE PTR [rax],bl
   1400155fb:	je     0x140015606
   1400155fd:	add    rax,r15
   140015600:	test   edx,edx
   140015602:	jne    0x1400155f3
   140015604:	mov    edx,ecx
   140015606:	mov    eax,ecx
   140015608:	sub    eax,edx
   14001560a:	add    edi,eax
   14001560c:	mov    esi,DWORD PTR [rbp+0xb0]
   140015612:	test   esi,esi
   140015614:	jle    0x14001563f
   140015616:	mov    eax,esi
   140015618:	mov    rdx,r12
   14001561b:	sub    eax,r15d
   14001561e:	cmp    BYTE PTR [rdx],bl
   140015620:	je     0x14001562b
   140015622:	add    rdx,r15
   140015625:	test   eax,eax
   140015627:	jne    0x14001561b
   140015629:	mov    eax,ecx
   14001562b:	sub    ecx,eax
   14001562d:	add    esi,ecx
   14001562f:	jmp    0x140015643
   140015631:	or     ecx,0xffffffff
   140015634:	cmp    edi,ecx
   140015636:	jge    0x14001560c
   140015638:	xor    eax,eax
   14001563a:	jmp    0x1400158c7
   14001563f:	cmp    esi,ecx
   140015641:	jl     0x140015638
   140015643:	mov    r14d,DWORD PTR [rbp+0xb8]
   14001564a:	test   r14d,r14d
   14001564d:	jne    0x140015656
   14001564f:	mov    rax,QWORD PTR [r8]
   140015652:	mov    r14d,DWORD PTR [rax+0x4]
   140015656:	test   edi,edi
   140015658:	je     0x140015662
   14001565a:	test   esi,esi
   14001565c:	jne    0x1400156fb
   140015662:	cmp    edi,esi
   140015664:	jne    0x140015670
   140015666:	mov    eax,0x2
   14001566b:	jmp    0x1400158c7
   140015670:	cmp    esi,r15d
   140015673:	jle    0x14001567d
   140015675:	mov    eax,r15d
   140015678:	jmp    0x1400158c7
   14001567d:	cmp    edi,r15d
   140015680:	jle    0x14001568c
   140015682:	mov    eax,0x3
   140015687:	jmp    0x1400158c7
   14001568c:	lea    rdx,[rbp+0x10]
   140015690:	mov    ecx,r14d
   140015693:	call   QWORD PTR [rip+0x4c27]        # 0x14001a2c0
   140015699:	test   eax,eax
   14001569b:	je     0x140015638
   14001569d:	test   edi,edi
   14001569f:	jle    0x1400156ca
   1400156a1:	cmp    DWORD PTR [rbp+0x10],0x2
   1400156a5:	jb     0x140015682
   1400156a7:	cmp    BYTE PTR [rbp+0x16],bl
   1400156aa:	lea    rax,[rbp+0x16]
   1400156ae:	je     0x140015682
   1400156b0:	cmp    BYTE PTR [rax+0x1],bl
   1400156b3:	je     0x140015682
   1400156b5:	mov    cl,BYTE PTR [r13+0x0]
   1400156b9:	cmp    cl,BYTE PTR [rax]
   1400156bb:	jb     0x1400156c2
   1400156bd:	cmp    cl,BYTE PTR [rax+0x1]
   1400156c0:	jbe    0x140015666
   1400156c2:	add    rax,0x2
   1400156c6:	cmp    BYTE PTR [rax],bl
   1400156c8:	jmp    0x1400156ae
   1400156ca:	test   esi,esi
   1400156cc:	jle    0x1400156fb
   1400156ce:	cmp    DWORD PTR [rbp+0x10],0x2
   1400156d2:	jb     0x140015675
   1400156d4:	cmp    BYTE PTR [rbp+0x16],bl
   1400156d7:	lea    rax,[rbp+0x16]
   1400156db:	je     0x140015675
   1400156dd:	cmp    BYTE PTR [rax+0x1],bl
   1400156e0:	je     0x140015675
   1400156e2:	mov    cl,BYTE PTR [r12]
   1400156e6:	cmp    cl,BYTE PTR [rax]
   1400156e8:	jb     0x1400156f3
   1400156ea:	cmp    cl,BYTE PTR [rax+0x1]
   1400156ed:	jbe    0x140015666
   1400156f3:	add    rax,0x2
   1400156f7:	cmp    BYTE PTR [rax],bl
   1400156f9:	jmp    0x1400156db
   1400156fb:	mov    r9d,edi
   1400156fe:	mov    r8,r13
   140015701:	mov    edx,0x9
   140015706:	mov    ecx,r14d
   140015709:	mov    DWORD PTR [rsp+0x28],ebx
   14001570d:	mov    QWORD PTR [rsp+0x20],rbx
   140015712:	call   QWORD PTR [rip+0x4a20]        # 0x14001a138
   140015718:	movsxd r15,eax
   14001571b:	test   eax,eax
   14001571d:	je     0x140015638
   140015723:	movabs r8,0xffffffffffffff0
   14001572d:	jle    0x140015795
   14001572f:	xor    edx,edx
   140015731:	lea    rax,[rdx-0x20]
   140015735:	div    r15
   140015738:	cmp    rax,0x2
   14001573c:	jb     0x140015795
   14001573e:	lea    rcx,[r15+r15*1+0x10]
   140015743:	cmp    rcx,0x400
   14001574a:	ja     0x14001577c
   14001574c:	lea    rax,[rcx+0xf]
   140015750:	cmp    rax,rcx
   140015753:	ja     0x140015758
   140015755:	mov    rax,r8
   140015758:	and    rax,0xfffffffffffffff0
   14001575c:	call   0x140016f30
   140015761:	sub    rsp,rax
   140015764:	lea    r12,[rsp+0x30]
   140015769:	test   r12,r12
   14001576c:	je     0x140015638
   140015772:	mov    DWORD PTR [r12],0xcccc
   14001577a:	jmp    0x14001578f
   14001577c:	call   0x14000b304
   140015781:	mov    r12,rax
   140015784:	test   rax,rax
   140015787:	je     0x140015798
   140015789:	mov    DWORD PTR [rax],0xdddd
   14001578f:	add    r12,0x10
   140015793:	jmp    0x140015798
   140015795:	mov    r12,rbx
   140015798:	test   r12,r12
   14001579b:	je     0x140015638
   1400157a1:	mov    r9d,edi
   1400157a4:	mov    r8,r13
   1400157a7:	mov    edx,0x1
   1400157ac:	mov    ecx,r14d
   1400157af:	mov    DWORD PTR [rsp+0x28],r15d
   1400157b4:	mov    QWORD PTR [rsp+0x20],r12
   1400157b9:	call   QWORD PTR [rip+0x4979]        # 0x14001a138
   1400157bf:	test   eax,eax
   1400157c1:	je     0x1400158b3
   1400157c7:	mov    r8,QWORD PTR [rbp+0x8]
   1400157cb:	mov    r9d,esi
   1400157ce:	mov    edx,0x9
   1400157d3:	mov    ecx,r14d
   1400157d6:	mov    DWORD PTR [rsp+0x28],ebx
   1400157da:	mov    QWORD PTR [rsp+0x20],rbx
   1400157df:	call   QWORD PTR [rip+0x4953]        # 0x14001a138
   1400157e5:	movsxd r13,eax
   1400157e8:	test   eax,eax
   1400157ea:	je     0x1400158b3
   1400157f0:	jle    0x140015859
   1400157f2:	xor    edx,edx
   1400157f4:	lea    rax,[rdx-0x20]
   1400157f8:	div    r13
   1400157fb:	cmp    rax,0x2
   1400157ff:	jb     0x140015859
   140015801:	lea    rcx,[r13+r13*1+0x10]
   140015806:	cmp    rcx,0x400
   14001580d:	ja     0x140015840
   14001580f:	lea    rax,[rcx+0xf]
   140015813:	cmp    rax,rcx
   140015816:	ja     0x140015822
   140015818:	movabs rax,0xffffffffffffff0
   140015822:	and    rax,0xfffffffffffffff0
   140015826:	call   0x140016f30
   14001582b:	sub    rsp,rax
   14001582e:	lea    rdi,[rsp+0x30]
   140015833:	test   rdi,rdi
   140015836:	je     0x1400158b3
   140015838:	mov    DWORD PTR [rdi],0xcccc
   14001583e:	jmp    0x140015853
   140015840:	call   0x14000b304
   140015845:	mov    rdi,rax
   140015848:	test   rax,rax
   14001584b:	je     0x14001585c
   14001584d:	mov    DWORD PTR [rax],0xdddd
   140015853:	add    rdi,0x10
   140015857:	jmp    0x14001585c
   140015859:	mov    rdi,rbx
   14001585c:	test   rdi,rdi
   14001585f:	je     0x1400158b3
   140015861:	mov    r8,QWORD PTR [rbp+0x8]
   140015865:	mov    r9d,esi
   140015868:	mov    edx,0x1
   14001586d:	mov    ecx,r14d
   140015870:	mov    DWORD PTR [rsp+0x28],r13d
   140015875:	mov    QWORD PTR [rsp+0x20],rdi
   14001587a:	call   QWORD PTR [rip+0x48b8]        # 0x14001a138
   140015880:	test   eax,eax
   140015882:	je     0x1400158a2
   140015884:	mov    edx,DWORD PTR [rbp+0x4]
   140015887:	mov    ecx,DWORD PTR [rbp+0x0]
   14001588a:	mov    r9d,r15d
   14001588d:	mov    r8,r12
   140015890:	mov    DWORD PTR [rsp+0x28],r13d
   140015895:	mov    QWORD PTR [rsp+0x20],rdi
   14001589a:	call   QWORD PTR [rip+0x4a48]        # 0x14001a2e8
   1400158a0:	mov    ebx,eax
   1400158a2:	lea    rcx,[rdi-0x10]
   1400158a6:	cmp    DWORD PTR [rcx],0xdddd
   1400158ac:	jne    0x1400158b3
   1400158ae:	call   0x14000b490
   1400158b3:	lea    rcx,[r12-0x10]
   1400158b8:	cmp    DWORD PTR [rcx],0xdddd
   1400158be:	jne    0x1400158c5
   1400158c0:	call   0x14000b490
   1400158c5:	mov    eax,ebx
   1400158c7:	mov    rcx,QWORD PTR [rbp+0x28]
   1400158cb:	xor    rcx,rbp
   1400158ce:	call   0x14000a850
   1400158d3:	lea    rsp,[rbp+0x38]
   1400158d7:	pop    r15
   1400158d9:	pop    r14
   1400158db:	pop    r13
   1400158dd:	pop    r12
   1400158df:	pop    rdi
   1400158e0:	pop    rsi
   1400158e1:	pop    rbx
   1400158e2:	pop    rbp
   1400158e3:	ret    
   1400158e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400158e9:	mov    QWORD PTR [rsp+0x10],rsi
   1400158ee:	push   rdi
   1400158ef:	sub    rsp,0x60
   1400158f3:	mov    esi,edx
   1400158f5:	mov    rdx,rcx
   1400158f8:	lea    rcx,[rsp+0x40]
   1400158fd:	mov    rbx,r9
   140015900:	mov    edi,r8d
   140015903:	call   0x14000c724
   140015908:	mov    r11d,DWORD PTR [rsp+0xa8]
   140015910:	mov    eax,DWORD PTR [rsp+0xa0]
   140015917:	lea    rcx,[rsp+0x40]
   14001591c:	mov    DWORD PTR [rsp+0x38],r11d
   140015921:	mov    DWORD PTR [rsp+0x30],eax
   140015925:	mov    rax,QWORD PTR [rsp+0x98]
   14001592d:	mov    QWORD PTR [rsp+0x28],rax
   140015932:	mov    eax,DWORD PTR [rsp+0x90]
   140015939:	mov    r9,rbx
   14001593c:	mov    r8d,edi
   14001593f:	mov    edx,esi
   140015941:	mov    DWORD PTR [rsp+0x20],eax
   140015945:	call   0x1400155a0
   14001594a:	cmp    BYTE PTR [rsp+0x58],0x0
   14001594f:	je     0x14001595d
   140015951:	mov    rcx,QWORD PTR [rsp+0x50]
   140015956:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001595d:	mov    rbx,QWORD PTR [rsp+0x70]
   140015962:	mov    rsi,QWORD PTR [rsp+0x78]
   140015967:	add    rsp,0x60
   14001596b:	pop    rdi
   14001596c:	ret    
   14001596d:	int3   
   14001596e:	int3   
   14001596f:	int3   
   140015970:	mov    QWORD PTR [rsp+0x8],rbx
   140015975:	mov    QWORD PTR [rsp+0x10],rsi
   14001597a:	mov    QWORD PTR [rsp+0x18],rdi
   14001597f:	push   rbp
   140015980:	mov    rbp,rsp
   140015983:	sub    rsp,0x60
   140015987:	mov    rsi,rcx
   14001598a:	mov    rdi,rdx
   14001598d:	lea    rcx,[rbp-0x20]
   140015991:	mov    rdx,r9
   140015994:	mov    rbx,r8
   140015997:	call   0x14000c724
   14001599c:	test   rbx,rbx
   14001599f:	jne    0x1400159b8
   1400159a1:	cmp    BYTE PTR [rbp-0x8],bl
   1400159a4:	je     0x1400159b1
   1400159a6:	mov    rax,QWORD PTR [rbp-0x10]
   1400159aa:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400159b1:	xor    eax,eax
   1400159b3:	jmp    0x140015a5d
   1400159b8:	test   rsi,rsi
   1400159bb:	jne    0x1400159e5
   1400159bd:	call   0x14000bdf0
   1400159c2:	mov    DWORD PTR [rax],0x16
   1400159c8:	call   0x14000d04c
   1400159cd:	cmp    BYTE PTR [rbp-0x8],0x0
   1400159d1:	je     0x1400159de
   1400159d3:	mov    rax,QWORD PTR [rbp-0x10]
   1400159d7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400159de:	mov    eax,0x7fffffff
   1400159e3:	jmp    0x140015a5d
   1400159e5:	test   rdi,rdi
   1400159e8:	je     0x1400159bd
   1400159ea:	cmp    rbx,0x7fffffff
   1400159f1:	ja     0x1400159bd
   1400159f3:	mov    rax,QWORD PTR [rbp-0x20]
   1400159f7:	mov    edx,DWORD PTR [rax+0x10]
   1400159fa:	test   edx,edx
   1400159fc:	jne    0x140015a12
   1400159fe:	lea    r9,[rbp-0x20]
   140015a02:	mov    r8,rbx
   140015a05:	mov    rdx,rdi
   140015a08:	mov    rcx,rsi
   140015a0b:	call   0x140019488
   140015a10:	jmp    0x140015a4c
   140015a12:	mov    eax,DWORD PTR [rax+0x8]
   140015a15:	lea    rcx,[rbp-0x20]
   140015a19:	mov    r9,rsi
   140015a1c:	mov    DWORD PTR [rsp+0x38],eax
   140015a20:	mov    DWORD PTR [rsp+0x30],ebx
   140015a24:	mov    r8d,0x1001
   140015a2a:	mov    QWORD PTR [rsp+0x28],rdi
   140015a2f:	mov    DWORD PTR [rsp+0x20],ebx
   140015a33:	call   0x1400158e4
   140015a38:	test   eax,eax
   140015a3a:	jne    0x140015a49
   140015a3c:	call   0x14000bdf0
   140015a41:	mov    DWORD PTR [rax],0x16
   140015a47:	jmp    0x1400159cd
   140015a49:	add    eax,0xfffffffe
   140015a4c:	cmp    BYTE PTR [rbp-0x8],0x0
   140015a50:	je     0x140015a5d
   140015a52:	mov    rcx,QWORD PTR [rbp-0x10]
   140015a56:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015a5d:	lea    r11,[rsp+0x60]
   140015a62:	mov    rbx,QWORD PTR [r11+0x10]
   140015a66:	mov    rsi,QWORD PTR [r11+0x18]
   140015a6a:	mov    rdi,QWORD PTR [r11+0x20]
   140015a6e:	mov    rsp,r11
   140015a71:	pop    rbp
   140015a72:	ret    
   140015a73:	int3   
   140015a74:	mov    QWORD PTR [rsp+0x8],rbx
   140015a79:	push   rdi
   140015a7a:	sub    rsp,0x20
   140015a7e:	mov    rbx,r8
   140015a81:	mov    rdi,rdx
   140015a84:	test   rcx,rcx
   140015a87:	je     0x140015aa6
   140015a89:	xor    edx,edx
   140015a8b:	lea    rax,[rdx-0x20]
   140015a8f:	div    rcx
   140015a92:	cmp    rax,rdi
   140015a95:	jae    0x140015aa6
   140015a97:	call   0x14000bdf0
   140015a9c:	mov    DWORD PTR [rax],0xc
   140015aa2:	xor    eax,eax
   140015aa4:	jmp    0x140015b03
   140015aa6:	imul   rdi,rcx
   140015aaa:	mov    eax,0x1
   140015aaf:	test   rdi,rdi
   140015ab2:	cmove  rdi,rax
   140015ab6:	xor    eax,eax
   140015ab8:	cmp    rdi,0xffffffffffffffe0
   140015abc:	ja     0x140015ad6
   140015abe:	mov    rcx,QWORD PTR [rip+0xf903]        # 0x1400253c8
   140015ac5:	lea    edx,[rax+0x8]
   140015ac8:	mov    r8,rdi
   140015acb:	call   QWORD PTR [rip+0x462f]        # 0x14001a100
   140015ad1:	test   rax,rax
   140015ad4:	jne    0x140015b03
   140015ad6:	cmp    DWORD PTR [rip+0xfe67],0x0        # 0x140025944
   140015add:	je     0x140015af8
   140015adf:	mov    rcx,rdi
   140015ae2:	call   0x14000d074
   140015ae7:	test   eax,eax
   140015ae9:	jne    0x140015ab6
   140015aeb:	test   rbx,rbx
   140015aee:	je     0x140015aa2
   140015af0:	mov    DWORD PTR [rbx],0xc
   140015af6:	jmp    0x140015aa2
   140015af8:	test   rbx,rbx
   140015afb:	je     0x140015b03
   140015afd:	mov    DWORD PTR [rbx],0xc
   140015b03:	mov    rbx,QWORD PTR [rsp+0x30]
   140015b08:	add    rsp,0x20
   140015b0c:	pop    rdi
   140015b0d:	ret    
   140015b0e:	int3   
   140015b0f:	int3   
   140015b10:	mov    QWORD PTR [rsp+0x8],rbx
   140015b15:	mov    QWORD PTR [rsp+0x10],rsi
   140015b1a:	push   rdi
   140015b1b:	sub    rsp,0x40
   140015b1f:	mov    ebx,edx
   140015b21:	mov    rdx,rcx
   140015b24:	lea    rcx,[rsp+0x20]
   140015b29:	mov    edi,r9d
   140015b2c:	mov    esi,r8d
   140015b2f:	call   0x14000c724
   140015b34:	mov    rax,QWORD PTR [rsp+0x28]
   140015b39:	movzx  r11d,bl
   140015b3d:	test   BYTE PTR [r11+rax*1+0x1d],dil
   140015b42:	jne    0x140015b63
   140015b44:	test   esi,esi
   140015b46:	je     0x140015b5d
   140015b48:	mov    rax,QWORD PTR [rsp+0x20]
   140015b4d:	mov    rcx,QWORD PTR [rax+0x140]
   140015b54:	movzx  eax,WORD PTR [rcx+r11*2]
   140015b59:	and    eax,esi
   140015b5b:	jmp    0x140015b5f
   140015b5d:	xor    eax,eax
   140015b5f:	test   eax,eax
   140015b61:	je     0x140015b68
   140015b63:	mov    eax,0x1
   140015b68:	cmp    BYTE PTR [rsp+0x38],0x0
   140015b6d:	je     0x140015b7b
   140015b6f:	mov    rcx,QWORD PTR [rsp+0x30]
   140015b74:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015b7b:	mov    rbx,QWORD PTR [rsp+0x50]
   140015b80:	mov    rsi,QWORD PTR [rsp+0x58]
   140015b85:	add    rsp,0x40
   140015b89:	pop    rdi
   140015b8a:	ret    
   140015b8b:	int3   
   140015b8c:	mov    edx,ecx
   140015b8e:	mov    r9d,0x4
   140015b94:	xor    r8d,r8d
   140015b97:	xor    ecx,ecx
   140015b99:	jmp    0x140015b10
   140015b9e:	int3   
   140015b9f:	int3   
   140015ba0:	mov    QWORD PTR [rsp+0x8],rbx
   140015ba5:	push   rdi
   140015ba6:	sub    rsp,0x20
   140015baa:	test   BYTE PTR [rdx+0x18],0x40
   140015bae:	mov    rbx,rdx
   140015bb1:	mov    edi,ecx
   140015bb3:	jne    0x140015c43
   140015bb9:	mov    rcx,rdx
   140015bbc:	call   0x140010b28
   140015bc1:	lea    rdx,[rip+0xdce8]        # 0x1400238b0
   140015bc8:	lea    r8,[rip+0xfeb1]        # 0x140025a80
   140015bcf:	movsxd r11,eax
   140015bd2:	cmp    r11d,0xffffffff
   140015bd6:	je     0x140015bf5
   140015bd8:	cmp    r11d,0xfffffffe
   140015bdc:	je     0x140015bf5
   140015bde:	mov    rcx,r11
   140015be1:	mov    rax,r11
   140015be4:	and    ecx,0x1f
   140015be7:	sar    rax,0x5
   140015beb:	imul   rcx,rcx,0x58
   140015bef:	add    rcx,QWORD PTR [r8+rax*8]
   140015bf3:	jmp    0x140015bf8
   140015bf5:	mov    rcx,rdx
   140015bf8:	test   BYTE PTR [rcx+0x38],0x7f
   140015bfc:	jne    0x140015c25
   140015bfe:	cmp    r11d,0xffffffff
   140015c02:	je     0x140015c1f
   140015c04:	cmp    r11d,0xfffffffe
   140015c08:	je     0x140015c1f
   140015c0a:	mov    rdx,r11
   140015c0d:	mov    rax,r11
   140015c10:	and    edx,0x1f
   140015c13:	sar    rax,0x5
   140015c17:	imul   rdx,rdx,0x58
   140015c1b:	add    rdx,QWORD PTR [r8+rax*8]
   140015c1f:	test   BYTE PTR [rdx+0x38],0x80
   140015c23:	je     0x140015c43
   140015c25:	call   0x14000bdf0
   140015c2a:	mov    DWORD PTR [rax],0x16
   140015c30:	call   0x14000d04c
   140015c35:	or     eax,0xffffffff
   140015c38:	mov    rbx,QWORD PTR [rsp+0x30]
   140015c3d:	add    rsp,0x20
   140015c41:	pop    rdi
   140015c42:	ret    
   140015c43:	cmp    edi,0xffffffff
   140015c46:	je     0x140015c35
   140015c48:	test   BYTE PTR [rbx+0x18],0x1
   140015c4c:	jne    0x140015c5a
   140015c4e:	test   BYTE PTR [rbx+0x18],0x80
   140015c52:	je     0x140015c35
   140015c54:	test   BYTE PTR [rbx+0x18],0x2
   140015c58:	jne    0x140015c35
   140015c5a:	cmp    QWORD PTR [rbx+0x10],0x0
   140015c5f:	jne    0x140015c69
   140015c61:	mov    rcx,rbx
   140015c64:	call   0x140015fa8
   140015c69:	mov    rax,QWORD PTR [rbx]
   140015c6c:	cmp    rax,QWORD PTR [rbx+0x10]
   140015c70:	jne    0x140015c7e
   140015c72:	cmp    DWORD PTR [rbx+0x8],0x0
   140015c76:	jne    0x140015c35
   140015c78:	inc    rax
   140015c7b:	mov    QWORD PTR [rbx],rax
   140015c7e:	dec    QWORD PTR [rbx]
   140015c81:	test   BYTE PTR [rbx+0x18],0x40
   140015c85:	mov    rax,QWORD PTR [rbx]
   140015c88:	je     0x140015c97
   140015c8a:	cmp    BYTE PTR [rax],dil
   140015c8d:	je     0x140015c9a
   140015c8f:	inc    rax
   140015c92:	mov    QWORD PTR [rbx],rax
   140015c95:	jmp    0x140015c35
   140015c97:	mov    BYTE PTR [rax],dil
   140015c9a:	inc    DWORD PTR [rbx+0x8]
   140015c9d:	and    DWORD PTR [rbx+0x18],0xffffffef
   140015ca1:	or     DWORD PTR [rbx+0x18],0x1
   140015ca5:	movzx  eax,dil
   140015ca9:	jmp    0x140015c38
   140015cab:	int3   
   140015cac:	mov    rax,rsp
   140015caf:	mov    QWORD PTR [rax+0x8],rbx
   140015cb3:	mov    QWORD PTR [rax+0x10],rsi
   140015cb7:	mov    QWORD PTR [rax+0x18],rdi
   140015cbb:	mov    QWORD PTR [rax+0x20],r12
   140015cbf:	push   rbp
   140015cc0:	mov    rbp,rsp
   140015cc3:	sub    rsp,0x50
   140015cc7:	xor    r12d,r12d
   140015cca:	mov    rsi,r8
   140015ccd:	mov    rdi,rdx
   140015cd0:	mov    rbx,rcx
   140015cd3:	test   rdx,rdx
   140015cd6:	je     0x140015ceb
   140015cd8:	test   r8,r8
   140015cdb:	je     0x140015ceb
   140015cdd:	cmp    BYTE PTR [rdx],r12b
   140015ce0:	jne    0x140015d07
   140015ce2:	test   rcx,rcx
   140015ce5:	je     0x140015ceb
   140015ce7:	mov    WORD PTR [rcx],r12w
   140015ceb:	xor    eax,eax
   140015ced:	mov    rbx,QWORD PTR [rsp+0x60]
   140015cf2:	mov    rsi,QWORD PTR [rsp+0x68]
   140015cf7:	mov    rdi,QWORD PTR [rsp+0x70]
   140015cfc:	mov    r12,QWORD PTR [rsp+0x78]
   140015d01:	add    rsp,0x50
   140015d05:	pop    rbp
   140015d06:	ret    
   140015d07:	lea    rcx,[rbp-0x20]
   140015d0b:	mov    rdx,r9
   140015d0e:	call   0x14000c724
   140015d13:	mov    r11,QWORD PTR [rbp-0x20]
   140015d17:	cmp    DWORD PTR [r11+0x14],r12d
   140015d1b:	jne    0x140015d40
   140015d1d:	test   rbx,rbx
   140015d20:	je     0x140015d28
   140015d22:	movzx  eax,BYTE PTR [rdi]
   140015d25:	mov    WORD PTR [rbx],ax
   140015d28:	cmp    BYTE PTR [rbp-0x8],r12b
   140015d2c:	je     0x140015d39
   140015d2e:	mov    rax,QWORD PTR [rbp-0x10]
   140015d32:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140015d39:	mov    eax,0x1
   140015d3e:	jmp    0x140015ced
   140015d40:	movzx  ecx,BYTE PTR [rdi]
   140015d43:	lea    rdx,[rbp-0x20]
   140015d47:	call   0x140015338
   140015d4c:	test   eax,eax
   140015d4e:	je     0x140015deb
   140015d54:	mov    rcx,QWORD PTR [rbp-0x20]
   140015d58:	mov    r9d,DWORD PTR [rcx+0x10c]
   140015d5f:	cmp    r9d,0x1
   140015d63:	jle    0x140015d95
   140015d65:	cmp    esi,r9d
   140015d68:	jl     0x140015d95
   140015d6a:	mov    ecx,DWORD PTR [rcx+0x4]
   140015d6d:	mov    eax,r12d
   140015d70:	test   rbx,rbx
   140015d73:	setne  al
   140015d76:	mov    r8,rdi
   140015d79:	mov    edx,0x9
   140015d7e:	mov    DWORD PTR [rsp+0x28],eax
   140015d82:	mov    QWORD PTR [rsp+0x20],rbx
   140015d87:	call   QWORD PTR [rip+0x43ab]        # 0x14001a138
   140015d8d:	mov    rcx,QWORD PTR [rbp-0x20]
   140015d91:	test   eax,eax
   140015d93:	jne    0x140015da7
   140015d95:	movsxd rax,DWORD PTR [rcx+0x10c]
   140015d9c:	cmp    rsi,rax
   140015d9f:	jb     0x140015dc7
   140015da1:	cmp    BYTE PTR [rdi+0x1],r12b
   140015da5:	je     0x140015dc7
   140015da7:	mov    eax,DWORD PTR [rcx+0x10c]
   140015dad:	cmp    BYTE PTR [rbp-0x8],r12b
   140015db1:	je     0x140015ced
   140015db7:	mov    rcx,QWORD PTR [rbp-0x10]
   140015dbb:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015dc2:	jmp    0x140015ced
   140015dc7:	call   0x14000bdf0
   140015dcc:	mov    DWORD PTR [rax],0x2a
   140015dd2:	cmp    BYTE PTR [rbp-0x8],r12b
   140015dd6:	je     0x140015de3
   140015dd8:	mov    rax,QWORD PTR [rbp-0x10]
   140015ddc:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140015de3:	or     eax,0xffffffff
   140015de6:	jmp    0x140015ced
   140015deb:	mov    eax,r12d
   140015dee:	mov    r9d,0x1
   140015df4:	test   rbx,rbx
   140015df7:	setne  al
   140015dfa:	lea    edx,[r9+0x8]
   140015dfe:	mov    r8,rdi
   140015e01:	mov    DWORD PTR [rsp+0x28],eax
   140015e05:	mov    rax,QWORD PTR [rbp-0x20]
   140015e09:	mov    QWORD PTR [rsp+0x20],rbx
   140015e0e:	mov    ecx,DWORD PTR [rax+0x4]
   140015e11:	call   QWORD PTR [rip+0x4321]        # 0x14001a138
   140015e17:	test   eax,eax
   140015e19:	jne    0x140015d28
   140015e1f:	jmp    0x140015dc7
   140015e21:	int3   
   140015e22:	int3   
   140015e23:	int3   
   140015e24:	xor    r9d,r9d
   140015e27:	jmp    0x140015cac
   140015e2c:	mov    QWORD PTR [rsp+0x8],rbx
   140015e31:	push   rdi
   140015e32:	sub    rsp,0x20
   140015e36:	movsxd rbx,ecx
   140015e39:	mov    edi,r8d
   140015e3c:	mov    QWORD PTR [rsp+0x38],rdx
   140015e41:	mov    ecx,ebx
   140015e43:	call   0x140011710
   140015e48:	cmp    rax,0xffffffffffffffff
   140015e4c:	jne    0x140015e5f
   140015e4e:	call   0x14000bdf0
   140015e53:	mov    DWORD PTR [rax],0x9
   140015e59:	or     rax,0xffffffffffffffff
   140015e5d:	jmp    0x140015eb6
   140015e5f:	mov    edx,DWORD PTR [rsp+0x38]
   140015e63:	lea    r8,[rsp+0x3c]
   140015e68:	mov    r9d,edi
   140015e6b:	mov    rcx,rax
   140015e6e:	call   QWORD PTR [rip+0x447c]        # 0x14001a2f0
   140015e74:	mov    DWORD PTR [rsp+0x38],eax
   140015e78:	cmp    eax,0xffffffff
   140015e7b:	jne    0x140015e90
   140015e7d:	call   QWORD PTR [rip+0x41ed]        # 0x14001a070
   140015e83:	test   eax,eax
   140015e85:	je     0x140015e90
   140015e87:	mov    ecx,eax
   140015e89:	call   0x14000be30
   140015e8e:	jmp    0x140015e59
   140015e90:	mov    rcx,rbx
   140015e93:	mov    rax,rbx
   140015e96:	lea    rdx,[rip+0xfbe3]        # 0x140025a80
   140015e9d:	sar    rax,0x5
   140015ea1:	and    ecx,0x1f
   140015ea4:	mov    rax,QWORD PTR [rdx+rax*8]
   140015ea8:	imul   rcx,rcx,0x58
   140015eac:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140015eb1:	mov    rax,QWORD PTR [rsp+0x38]
   140015eb6:	mov    rbx,QWORD PTR [rsp+0x30]
   140015ebb:	add    rsp,0x20
   140015ebf:	pop    rdi
   140015ec0:	ret    
   140015ec1:	int3   
   140015ec2:	int3   
   140015ec3:	int3   
   140015ec4:	mov    QWORD PTR [rsp+0x10],rbx
   140015ec9:	mov    DWORD PTR [rsp+0x8],ecx
   140015ecd:	push   rsi
   140015ece:	push   rdi
   140015ecf:	push   r12
   140015ed1:	push   r13
   140015ed3:	push   r14
   140015ed5:	sub    rsp,0x20
   140015ed9:	mov    esi,r8d
   140015edc:	mov    r12,rdx
   140015edf:	movsxd rdi,ecx
   140015ee2:	cmp    edi,0xfffffffe
   140015ee5:	jne    0x140015eff
   140015ee7:	call   0x14000be10
   140015eec:	and    DWORD PTR [rax],0x0
   140015eef:	call   0x14000bdf0
   140015ef4:	mov    DWORD PTR [rax],0x9
   140015efa:	jmp    0x140015f91
   140015eff:	test   ecx,ecx
   140015f01:	js     0x140015f79
   140015f03:	cmp    edi,DWORD PTR [rip+0xfb63]        # 0x140025a6c
   140015f09:	jae    0x140015f79
   140015f0b:	mov    rbx,rdi
   140015f0e:	mov    r13,rdi
   140015f11:	sar    r13,0x5
   140015f15:	lea    r14,[rip+0xfb64]        # 0x140025a80
   140015f1c:	and    ebx,0x1f
   140015f1f:	imul   rbx,rbx,0x58
   140015f23:	mov    rax,QWORD PTR [r14+r13*8]
   140015f27:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140015f2c:	and    ecx,0x1
   140015f2f:	je     0x140015f79
   140015f31:	mov    ecx,edi
   140015f33:	call   0x140011784
   140015f38:	nop
   140015f39:	mov    rax,QWORD PTR [r14+r13*8]
   140015f3d:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140015f42:	je     0x140015f56
   140015f44:	mov    r8d,esi
   140015f47:	mov    rdx,r12
   140015f4a:	mov    ecx,edi
   140015f4c:	call   0x140015e2c
   140015f51:	mov    rbx,rax
   140015f54:	jmp    0x140015f6d
   140015f56:	call   0x14000bdf0
   140015f5b:	mov    DWORD PTR [rax],0x9
   140015f61:	call   0x14000be10
   140015f66:	and    DWORD PTR [rax],0x0
   140015f69:	or     rbx,0xffffffffffffffff
   140015f6d:	mov    ecx,edi
   140015f6f:	call   0x14001182c
   140015f74:	mov    rax,rbx
   140015f77:	jmp    0x140015f95
   140015f79:	call   0x14000be10
   140015f7e:	and    DWORD PTR [rax],0x0
   140015f81:	call   0x14000bdf0
   140015f86:	mov    DWORD PTR [rax],0x9
   140015f8c:	call   0x14000d04c
   140015f91:	or     rax,0xffffffffffffffff
   140015f95:	mov    rbx,QWORD PTR [rsp+0x58]
   140015f9a:	add    rsp,0x20
   140015f9e:	pop    r14
   140015fa0:	pop    r13
   140015fa2:	pop    r12
   140015fa4:	pop    rdi
   140015fa5:	pop    rsi
   140015fa6:	ret    
   140015fa7:	int3   
   140015fa8:	rex push rbx
   140015faa:	sub    rsp,0x20
   140015fae:	inc    DWORD PTR [rip+0xea40]        # 0x1400249f4
   140015fb4:	mov    rbx,rcx
   140015fb7:	mov    ecx,0x1000
   140015fbc:	call   0x140010b50
   140015fc1:	mov    QWORD PTR [rbx+0x10],rax
   140015fc5:	test   rax,rax
   140015fc8:	je     0x140015fd7
   140015fca:	or     DWORD PTR [rbx+0x18],0x8
   140015fce:	mov    DWORD PTR [rbx+0x24],0x1000
   140015fd5:	jmp    0x140015fea
   140015fd7:	or     DWORD PTR [rbx+0x18],0x4
   140015fdb:	lea    rax,[rbx+0x20]
   140015fdf:	mov    DWORD PTR [rbx+0x24],0x2
   140015fe6:	mov    QWORD PTR [rbx+0x10],rax
   140015fea:	mov    rax,QWORD PTR [rbx+0x10]
   140015fee:	and    DWORD PTR [rbx+0x8],0x0
   140015ff2:	mov    QWORD PTR [rbx],rax
   140015ff5:	add    rsp,0x20
   140015ff9:	pop    rbx
   140015ffa:	ret    
   140015ffb:	int3   
   140015ffc:	mov    QWORD PTR [rsp+0x8],rbx
   140016001:	mov    QWORD PTR [rsp+0x18],rsi
   140016006:	mov    QWORD PTR [rsp+0x20],rdi
   14001600b:	push   rbp
   14001600c:	push   r12
   14001600e:	push   r13
   140016010:	push   r14
   140016012:	push   r15
   140016014:	mov    rbp,rsp
   140016017:	sub    rsp,0x40
   14001601b:	mov    r15,rdx
   14001601e:	mov    rdx,rcx
   140016021:	lea    rcx,[rbp-0x20]
   140016025:	mov    r13d,r9d
   140016028:	mov    r14,r8
   14001602b:	call   0x14000c724
   140016030:	test   r14,r14
   140016033:	je     0x140016038
   140016035:	mov    QWORD PTR [r14],r15
   140016038:	test   r15,r15
   14001603b:	jne    0x140016056
   14001603d:	call   0x14000bdf0
   140016042:	mov    DWORD PTR [rax],0x16
   140016048:	call   0x14000d04c
   14001604d:	cmp    BYTE PTR [rbp-0x8],0x0
   140016051:	jmp    0x14001623a
   140016056:	test   r13d,r13d
   140016059:	je     0x140016067
   14001605b:	cmp    r13d,0x2
   14001605f:	jl     0x14001603d
   140016061:	cmp    r13d,0x24
   140016065:	jg     0x14001603d
   140016067:	mov    r12b,BYTE PTR [r15]
   14001606a:	mov    r8,QWORD PTR [rbp-0x20]
   14001606e:	xor    edi,edi
   140016070:	lea    rbx,[r15+0x1]
   140016074:	cmp    DWORD PTR [r8+0x10c],0x1
   14001607c:	jle    0x140016096
   14001607e:	lea    r8,[rbp-0x20]
   140016082:	movzx  ecx,r12b
   140016086:	mov    edx,0x8
   14001608b:	call   0x140014d54
   140016090:	mov    r8,QWORD PTR [rbp-0x20]
   140016094:	jmp    0x1400160a8
   140016096:	mov    rax,QWORD PTR [r8+0x140]
   14001609d:	movzx  ecx,r12b
   1400160a1:	movzx  eax,WORD PTR [rax+rcx*2]
   1400160a5:	and    eax,0x8
   1400160a8:	test   eax,eax
   1400160aa:	je     0x1400160b4
   1400160ac:	mov    r12b,BYTE PTR [rbx]
   1400160af:	inc    rbx
   1400160b2:	jmp    0x140016074
   1400160b4:	mov    esi,DWORD PTR [rbp+0x50]
   1400160b7:	cmp    r12b,0x2d
   1400160bb:	jne    0x1400160c2
   1400160bd:	or     esi,0x2
   1400160c0:	jmp    0x1400160c8
   1400160c2:	cmp    r12b,0x2b
   1400160c6:	jne    0x1400160ce
   1400160c8:	mov    r12b,BYTE PTR [rbx]
   1400160cb:	inc    rbx
   1400160ce:	test   r13d,r13d
   1400160d1:	js     0x14001622e
   1400160d7:	cmp    r13d,0x1
   1400160db:	je     0x14001622e
   1400160e1:	cmp    r13d,0x24
   1400160e5:	jg     0x14001622e
   1400160eb:	test   r13d,r13d
   1400160ee:	jne    0x140016118
   1400160f0:	cmp    r12b,0x30
   1400160f4:	je     0x1400160fe
   1400160f6:	mov    r13d,0xa
   1400160fc:	jmp    0x140016136
   1400160fe:	cmp    BYTE PTR [rbx],0x78
   140016101:	je     0x140016110
   140016103:	cmp    BYTE PTR [rbx],0x58
   140016106:	je     0x140016110
   140016108:	mov    r13d,0x8
   14001610e:	jmp    0x140016136
   140016110:	mov    r13d,0x10
   140016116:	jmp    0x140016124
   140016118:	cmp    r13d,0x10
   14001611c:	jne    0x140016136
   14001611e:	cmp    r12b,0x30
   140016122:	jne    0x140016136
   140016124:	cmp    BYTE PTR [rbx],0x78
   140016127:	je     0x14001612e
   140016129:	cmp    BYTE PTR [rbx],0x58
   14001612c:	jne    0x140016136
   14001612e:	mov    r12b,BYTE PTR [rbx+0x1]
   140016132:	add    rbx,0x2
   140016136:	mov    r10,QWORD PTR [r8+0x140]
   14001613d:	xor    edx,edx
   14001613f:	or     eax,0xffffffff
   140016142:	div    r13d
   140016145:	mov    r9d,eax
   140016148:	movzx  ecx,r12b
   14001614c:	movzx  r8d,WORD PTR [r10+rcx*2]
   140016151:	mov    ecx,r8d
   140016154:	and    ecx,0x4
   140016157:	je     0x140016162
   140016159:	movsx  ecx,r12b
   14001615d:	sub    ecx,0x30
   140016160:	jmp    0x14001617e
   140016162:	and    r8d,0x103
   140016169:	je     0x140016199
   14001616b:	lea    eax,[r12-0x61]
   140016170:	movsx  ecx,r12b
   140016174:	cmp    al,0x19
   140016176:	ja     0x14001617b
   140016178:	sub    ecx,0x20
   14001617b:	add    ecx,0xffffffc9
   14001617e:	cmp    ecx,r13d
   140016181:	jae    0x140016199
   140016183:	or     esi,0x8
   140016186:	cmp    edi,r9d
   140016189:	jb     0x1400161ad
   14001618b:	jne    0x140016191
   14001618d:	cmp    ecx,edx
   14001618f:	jbe    0x1400161ad
   140016191:	or     esi,0x4
   140016194:	test   r14,r14
   140016197:	jne    0x1400161b3
   140016199:	dec    rbx
   14001619c:	test   sil,0x8
   1400161a0:	jne    0x1400161bb
   1400161a2:	test   r14,r14
   1400161a5:	cmovne rbx,r15
   1400161a9:	xor    edi,edi
   1400161ab:	jmp    0x140016209
   1400161ad:	imul   edi,r13d
   1400161b1:	add    edi,ecx
   1400161b3:	mov    r12b,BYTE PTR [rbx]
   1400161b6:	inc    rbx
   1400161b9:	jmp    0x140016148
   1400161bb:	mov    r12d,0x7fffffff
   1400161c1:	test   sil,0x4
   1400161c5:	jne    0x1400161e5
   1400161c7:	test   sil,0x1
   1400161cb:	jne    0x140016209
   1400161cd:	mov    eax,esi
   1400161cf:	and    eax,0x2
   1400161d2:	je     0x1400161dc
   1400161d4:	cmp    edi,0x80000000
   1400161da:	ja     0x1400161e5
   1400161dc:	test   eax,eax
   1400161de:	jne    0x140016209
   1400161e0:	cmp    edi,r12d
   1400161e3:	jbe    0x140016209
   1400161e5:	call   0x14000bdf0
   1400161ea:	mov    DWORD PTR [rax],0x22
   1400161f0:	test   sil,0x1
   1400161f4:	je     0x1400161fb
   1400161f6:	or     edi,0xffffffff
   1400161f9:	jmp    0x140016209
   1400161fb:	mov    al,sil
   1400161fe:	and    al,0x2
   140016200:	neg    al
   140016202:	sbb    edi,edi
   140016204:	neg    edi
   140016206:	add    edi,r12d
   140016209:	test   r14,r14
   14001620c:	je     0x140016211
   14001620e:	mov    QWORD PTR [r14],rbx
   140016211:	test   sil,0x2
   140016215:	je     0x140016219
   140016217:	neg    edi
   140016219:	cmp    BYTE PTR [rbp-0x8],0x0
   14001621d:	je     0x14001622a
   14001621f:	mov    rcx,QWORD PTR [rbp-0x10]
   140016223:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001622a:	mov    eax,edi
   14001622c:	jmp    0x140016249
   14001622e:	test   r14,r14
   140016231:	je     0x140016236
   140016233:	mov    QWORD PTR [r14],r15
   140016236:	cmp    BYTE PTR [rbp-0x8],dil
   14001623a:	je     0x140016247
   14001623c:	mov    rax,QWORD PTR [rbp-0x10]
   140016240:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016247:	xor    eax,eax
   140016249:	lea    r11,[rsp+0x40]
   14001624e:	mov    rbx,QWORD PTR [r11+0x30]
   140016252:	mov    rsi,QWORD PTR [r11+0x40]
   140016256:	mov    rdi,QWORD PTR [r11+0x48]
   14001625a:	mov    rsp,r11
   14001625d:	pop    r15
   14001625f:	pop    r14
   140016261:	pop    r13
   140016263:	pop    r12
   140016265:	pop    rbp
   140016266:	ret    
   140016267:	int3   
   140016268:	sub    rsp,0x38
   14001626c:	xor    eax,eax
   14001626e:	mov    r9d,r8d
   140016271:	mov    r8,rdx
   140016274:	cmp    DWORD PTR [rip+0xf6ee],eax        # 0x140025968
   14001627a:	mov    DWORD PTR [rsp+0x20],eax
   14001627e:	mov    rdx,rcx
   140016281:	jne    0x14001628c
   140016283:	lea    rcx,[rip+0xe15e]        # 0x1400243e8
   14001628a:	jmp    0x14001628e
   14001628c:	xor    ecx,ecx
   14001628e:	call   0x140015ffc
   140016293:	add    rsp,0x38
   140016297:	ret    
   140016298:	mov    QWORD PTR [rsp+0x8],rbx
   14001629d:	mov    QWORD PTR [rsp+0x10],rsi
   1400162a2:	push   rdi
   1400162a3:	sub    rsp,0x20
   1400162a7:	xor    edi,edi
   1400162a9:	mov    rbx,rdx
   1400162ac:	mov    rsi,rcx
   1400162af:	test   rdx,rdx
   1400162b2:	je     0x1400162d1
   1400162b4:	xor    edx,edx
   1400162b6:	lea    rax,[rdi-0x20]
   1400162ba:	div    rbx
   1400162bd:	cmp    rax,r8
   1400162c0:	jae    0x1400162d1
   1400162c2:	call   0x14000bdf0
   1400162c7:	mov    DWORD PTR [rax],0xc
   1400162cd:	xor    eax,eax
   1400162cf:	jmp    0x14001630e
   1400162d1:	imul   rbx,r8
   1400162d5:	test   rcx,rcx
   1400162d8:	je     0x1400162e2
   1400162da:	call   0x140014e84
   1400162df:	mov    rdi,rax
   1400162e2:	mov    rdx,rbx
   1400162e5:	mov    rcx,rsi
   1400162e8:	call   0x14000b3bc
   1400162ed:	mov    rsi,rax
   1400162f0:	test   rax,rax
   1400162f3:	je     0x14001630b
   1400162f5:	cmp    rdi,rbx
   1400162f8:	jae    0x14001630b
   1400162fa:	sub    rbx,rdi
   1400162fd:	lea    rcx,[rdi+rax*1]
   140016301:	xor    edx,edx
   140016303:	mov    r8,rbx
   140016306:	call   0x14000a560
   14001630b:	mov    rax,rsi
   14001630e:	mov    rbx,QWORD PTR [rsp+0x30]
   140016313:	mov    rsi,QWORD PTR [rsp+0x38]
   140016318:	add    rsp,0x20
   14001631c:	pop    rdi
   14001631d:	ret    
   14001631e:	int3   
   14001631f:	int3   
   140016320:	mov    QWORD PTR [rsp+0x10],rdx
   140016325:	mov    DWORD PTR [rsp+0x8],ecx
   140016329:	push   rbp
   14001632a:	push   rbx
   14001632b:	push   rsi
   14001632c:	push   rdi
   14001632d:	push   r12
   14001632f:	push   r13
   140016331:	push   r14
   140016333:	push   r15
   140016335:	mov    rbp,rsp
   140016338:	sub    rsp,0x58
   14001633c:	movsxd rax,ecx
   14001633f:	mov    ebx,r8d
   140016342:	mov    DWORD PTR [rbp-0x20],0xfffffffe
   140016349:	mov    DWORD PTR [rbp-0x1c],ebx
   14001634c:	cmp    eax,0xfffffffe
   14001634f:	jne    0x14001636a
   140016351:	call   0x14000be10
   140016356:	xor    edi,edi
   140016358:	mov    DWORD PTR [rax],edi
   14001635a:	call   0x14000bdf0
   14001635f:	mov    DWORD PTR [rax],0x9
   140016365:	jmp    0x140016a2f
   14001636a:	xor    edi,edi
   14001636c:	test   ecx,ecx
   14001636e:	js     0x140016a18
   140016374:	cmp    eax,DWORD PTR [rip+0xf6f2]        # 0x140025a6c
   14001637a:	jae    0x140016a18
   140016380:	mov    rsi,rax
   140016383:	mov    r15,rax
   140016386:	lea    r9,[rip+0xfffffffffffe9c73]        # 0x140000000
   14001638d:	sar    r15,0x5
   140016391:	and    esi,0x1f
   140016394:	mov    rcx,QWORD PTR [r9+r15*8+0x25a80]
   14001639c:	imul   rsi,rsi,0x58
   1400163a0:	mov    al,BYTE PTR [rcx+rsi*1+0x8]
   1400163a4:	test   al,0x1
   1400163a6:	je     0x140016a18
   1400163ac:	cmp    ebx,0x7fffffff
   1400163b2:	jbe    0x1400163cb
   1400163b4:	call   0x14000be10
   1400163b9:	mov    DWORD PTR [rax],edi
   1400163bb:	call   0x14000bdf0
   1400163c0:	mov    DWORD PTR [rax],0x16
   1400163c6:	jmp    0x140016a2a
   1400163cb:	mov    r12d,edi
   1400163ce:	test   ebx,ebx
   1400163d0:	je     0x140016a14
   1400163d6:	test   al,0x2
   1400163d8:	jne    0x140016a14
   1400163de:	test   rdx,rdx
   1400163e1:	je     0x1400163b4
   1400163e3:	mov    r13b,BYTE PTR [rcx+rsi*1+0x38]
   1400163e8:	mov    r8d,0x4
   1400163ee:	add    r13b,r13b
   1400163f1:	sar    r13b,1
   1400163f4:	movsx  ecx,r13b
   1400163f8:	mov    BYTE PTR [rbp+0x60],r13b
   1400163fc:	dec    ecx
   1400163fe:	je     0x140016414
   140016400:	dec    ecx
   140016402:	jne    0x14001640f
   140016404:	mov    eax,ebx
   140016406:	not    eax
   140016408:	test   al,0x1
   14001640a:	je     0x1400163b4
   14001640c:	and    ebx,0xfffffffe
   14001640f:	mov    r14,rdx
   140016412:	jmp    0x140016474
   140016414:	mov    eax,ebx
   140016416:	not    eax
   140016418:	test   al,0x1
   14001641a:	je     0x1400163b4
   14001641c:	shr    ebx,1
   14001641e:	cmp    ebx,r8d
   140016421:	cmovb  ebx,r8d
   140016425:	mov    ecx,ebx
   140016427:	call   0x140010b50
   14001642c:	mov    r14,rax
   14001642f:	test   rax,rax
   140016432:	jne    0x14001644f
   140016434:	call   0x14000bdf0
   140016439:	mov    DWORD PTR [rax],0xc
   14001643f:	call   0x14000be10
   140016444:	mov    DWORD PTR [rax],0x8
   14001644a:	jmp    0x140016a2f
   14001644f:	mov    ecx,DWORD PTR [rbp+0x48]
   140016452:	xor    edx,edx
   140016454:	lea    r8d,[rdx+0x1]
   140016458:	call   0x140015e2c
   14001645d:	lea    r9,[rip+0xfffffffffffe9b9c]        # 0x140000000
   140016464:	mov    r11,rax
   140016467:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   14001646f:	mov    QWORD PTR [rax+rsi*1+0x40],r11
   140016474:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   14001647c:	mov    rdx,r14
   14001647f:	mov    r8d,0xa
   140016485:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   14001648a:	je     0x14001652b
   140016490:	mov    cl,BYTE PTR [rax+rsi*1+0x9]
   140016494:	cmp    cl,r8b
   140016497:	je     0x14001652b
   14001649d:	test   ebx,ebx
   14001649f:	je     0x14001652b
   1400164a5:	mov    BYTE PTR [r14],cl
   1400164a8:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   1400164b0:	or     r10d,0xffffffff
   1400164b4:	add    ebx,r10d
   1400164b7:	lea    rdx,[r14+0x1]
   1400164bb:	lea    r12d,[r8-0x9]
   1400164bf:	mov    BYTE PTR [rax+rsi*1+0x9],r8b
   1400164c4:	test   r13b,r13b
   1400164c7:	je     0x14001652b
   1400164c9:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   1400164d1:	mov    cl,BYTE PTR [rax+rsi*1+0x39]
   1400164d5:	cmp    cl,r8b
   1400164d8:	je     0x14001652b
   1400164da:	test   ebx,ebx
   1400164dc:	je     0x14001652b
   1400164de:	mov    BYTE PTR [rdx],cl
   1400164e0:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   1400164e8:	add    ebx,r10d
   1400164eb:	inc    rdx
   1400164ee:	lea    r12d,[r8-0x8]
   1400164f2:	mov    BYTE PTR [rax+rsi*1+0x39],r8b
   1400164f7:	cmp    r13b,0x1
   1400164fb:	jne    0x14001652b
   1400164fd:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   140016505:	mov    cl,BYTE PTR [rax+rsi*1+0x3a]
   140016509:	cmp    cl,r8b
   14001650c:	je     0x14001652b
   14001650e:	test   ebx,ebx
   140016510:	je     0x14001652b
   140016512:	mov    BYTE PTR [rdx],cl
   140016514:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   14001651c:	inc    rdx
   14001651f:	lea    r12d,[r8-0x7]
   140016523:	add    ebx,r10d
   140016526:	mov    BYTE PTR [rax+rsi*1+0x3a],r8b
   14001652b:	mov    rcx,QWORD PTR [r9+r15*8+0x25a80]
   140016533:	lea    r9,[rbp-0x24]
   140016537:	mov    r8d,ebx
   14001653a:	mov    rcx,QWORD PTR [rcx+rsi*1]
   14001653e:	mov    QWORD PTR [rsp+0x20],rdi
   140016543:	call   QWORD PTR [rip+0x3daf]        # 0x14001a2f8
   140016549:	test   eax,eax
   14001654b:	je     0x1400169d9
   140016551:	movsxd rdx,DWORD PTR [rbp-0x24]
   140016555:	test   edx,edx
   140016557:	js     0x1400169d9
   14001655d:	mov    eax,ebx
   14001655f:	cmp    rdx,rax
   140016562:	ja     0x1400169d9
   140016568:	lea    r8,[rip+0xfffffffffffe9a91]        # 0x140000000
   14001656f:	add    r12d,edx
   140016572:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   14001657a:	test   BYTE PTR [rax+rsi*1+0x8],0x80
   14001657f:	je     0x1400169ba
   140016585:	cmp    r13b,0x2
   140016589:	je     0x14001681b
   14001658f:	test   edx,edx
   140016591:	je     0x1400165a0
   140016593:	cmp    BYTE PTR [r14],0xa
   140016597:	jne    0x1400165a0
   140016599:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   14001659e:	jmp    0x1400165a5
   1400165a0:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   1400165a5:	movsxd rax,r12d
   1400165a8:	mov    rbx,r14
   1400165ab:	mov    r13,r14
   1400165ae:	add    rax,r14
   1400165b1:	mov    QWORD PTR [rbp-0x18],rax
   1400165b5:	cmp    r14,rax
   1400165b8:	jae    0x1400166d9
   1400165be:	mov    r12d,0xd
   1400165c4:	mov    al,BYTE PTR [r13+0x0]
   1400165c8:	cmp    al,0x1a
   1400165ca:	je     0x1400166ba
   1400165d0:	cmp    al,r12b
   1400165d3:	je     0x1400165e2
   1400165d5:	mov    BYTE PTR [rbx],al
   1400165d7:	inc    rbx
   1400165da:	inc    r13
   1400165dd:	jmp    0x1400166ae
   1400165e2:	mov    rax,QWORD PTR [rbp-0x18]
   1400165e6:	dec    rax
   1400165e9:	cmp    r13,rax
   1400165ec:	jae    0x140016605
   1400165ee:	lea    rax,[r13+0x1]
   1400165f2:	cmp    BYTE PTR [rax],0xa
   1400165f5:	jne    0x1400165fd
   1400165f7:	add    r13,0x2
   1400165fb:	jmp    0x14001667b
   1400165fd:	mov    r13,rax
   140016600:	jmp    0x1400166a8
   140016605:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   14001660d:	lea    r9,[rbp-0x24]
   140016611:	lea    rdx,[rbp+0x58]
   140016615:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140016619:	mov    r8d,0x1
   14001661f:	inc    r13
   140016622:	mov    QWORD PTR [rsp+0x20],rdi
   140016627:	call   QWORD PTR [rip+0x3ccb]        # 0x14001a2f8
   14001662d:	test   eax,eax
   14001662f:	jne    0x14001663b
   140016631:	call   QWORD PTR [rip+0x3a39]        # 0x14001a070
   140016637:	test   eax,eax
   140016639:	jne    0x1400166a1
   14001663b:	cmp    DWORD PTR [rbp-0x24],edi
   14001663e:	je     0x1400166a1
   140016640:	lea    r8,[rip+0xfffffffffffe99b9]        # 0x140000000
   140016647:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   14001664f:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   140016654:	je     0x140016670
   140016656:	cmp    BYTE PTR [rbp+0x58],0xa
   14001665a:	je     0x14001667b
   14001665c:	mov    BYTE PTR [rbx],r12b
   14001665f:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   140016667:	mov    al,BYTE PTR [rbp+0x58]
   14001666a:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   14001666e:	jmp    0x1400166ab
   140016670:	cmp    rbx,r14
   140016673:	jne    0x140016680
   140016675:	cmp    BYTE PTR [rbp+0x58],0xa
   140016679:	jne    0x140016680
   14001667b:	mov    BYTE PTR [rbx],0xa
   14001667e:	jmp    0x1400166ab
   140016680:	mov    ecx,DWORD PTR [rbp+0x48]
   140016683:	mov    r8d,0x1
   140016689:	or     rdx,0xffffffffffffffff
   14001668d:	call   0x140015e2c
   140016692:	cmp    BYTE PTR [rbp+0x58],0xa
   140016696:	lea    r8,[rip+0xfffffffffffe9963]        # 0x140000000
   14001669d:	je     0x1400166ae
   14001669f:	jmp    0x1400166a8
   1400166a1:	lea    r8,[rip+0xfffffffffffe9958]        # 0x140000000
   1400166a8:	mov    BYTE PTR [rbx],r12b
   1400166ab:	inc    rbx
   1400166ae:	cmp    r13,QWORD PTR [rbp-0x18]
   1400166b2:	jb     0x1400165c4
   1400166b8:	jmp    0x1400166d9
   1400166ba:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   1400166c2:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   1400166c7:	jne    0x1400166d0
   1400166c9:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   1400166ce:	jmp    0x1400166d9
   1400166d0:	mov    al,BYTE PTR [r13+0x0]
   1400166d4:	mov    BYTE PTR [rbx],al
   1400166d6:	inc    rbx
   1400166d9:	mov    r12d,ebx
   1400166dc:	sub    r12d,r14d
   1400166df:	cmp    BYTE PTR [rbp+0x60],0x1
   1400166e3:	jne    0x1400169ba
   1400166e9:	test   r12d,r12d
   1400166ec:	je     0x1400169ba
   1400166f2:	dec    rbx
   1400166f5:	test   BYTE PTR [rbx],0x80
   1400166f8:	jne    0x140016702
   1400166fa:	inc    rbx
   1400166fd:	jmp    0x1400167b3
   140016702:	mov    edx,0x1
   140016707:	jmp    0x140016718
   140016709:	cmp    edx,0x4
   14001670c:	jg     0x140016725
   14001670e:	cmp    rbx,r14
   140016711:	jb     0x140016725
   140016713:	dec    rbx
   140016716:	inc    edx
   140016718:	movzx  eax,BYTE PTR [rbx]
   14001671b:	cmp    BYTE PTR [rax+r8*1+0x24410],dil
   140016723:	je     0x140016709
   140016725:	movzx  ecx,BYTE PTR [rbx]
   140016728:	movsx  eax,BYTE PTR [rcx+r8*1+0x24410]
   140016731:	test   eax,eax
   140016733:	jne    0x140016748
   140016735:	call   0x14000bdf0
   14001673a:	mov    DWORD PTR [rax],0x2a
   140016740:	or     ebx,0xffffffff
   140016743:	jmp    0x1400169bd
   140016748:	inc    eax
   14001674a:	cmp    eax,edx
   14001674c:	jne    0x140016756
   14001674e:	movsxd rax,edx
   140016751:	add    rbx,rax
   140016754:	jmp    0x1400167b3
   140016756:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   14001675e:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   140016763:	je     0x1400167a0
   140016765:	inc    rbx
   140016768:	mov    BYTE PTR [rax+rsi*1+0x9],cl
   14001676c:	cmp    edx,0x2
   14001676f:	jl     0x140016782
   140016771:	mov    al,BYTE PTR [rbx]
   140016773:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   14001677b:	inc    rbx
   14001677e:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   140016782:	cmp    edx,0x3
   140016785:	jne    0x140016798
   140016787:	mov    al,BYTE PTR [rbx]
   140016789:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   140016791:	inc    rbx
   140016794:	mov    BYTE PTR [rcx+rsi*1+0x3a],al
   140016798:	movsxd rax,edx
   14001679b:	sub    rbx,rax
   14001679e:	jmp    0x1400167b3
   1400167a0:	mov    ecx,DWORD PTR [rbp+0x48]
   1400167a3:	neg    edx
   1400167a5:	mov    r8d,0x1
   1400167ab:	movsxd rdx,edx
   1400167ae:	call   0x140015e2c
   1400167b3:	mov    eax,DWORD PTR [rbp-0x1c]
   1400167b6:	mov    r13,QWORD PTR [rbp+0x50]
   1400167ba:	sub    ebx,r14d
   1400167bd:	shr    eax,1
   1400167bf:	mov    r9d,ebx
   1400167c2:	mov    r8,r14
   1400167c5:	mov    DWORD PTR [rsp+0x28],eax
   1400167c9:	xor    edx,edx
   1400167cb:	mov    ecx,0xfde9
   1400167d0:	mov    QWORD PTR [rsp+0x20],r13
   1400167d5:	call   QWORD PTR [rip+0x395d]        # 0x14001a138
   1400167db:	mov    r12d,eax
   1400167de:	test   eax,eax
   1400167e0:	jne    0x1400167f7
   1400167e2:	call   QWORD PTR [rip+0x3888]        # 0x14001a070
   1400167e8:	mov    ecx,eax
   1400167ea:	call   0x14000be30
   1400167ef:	or     ebx,0xffffffff
   1400167f2:	jmp    0x1400169c1
   1400167f7:	cmp    eax,ebx
   1400167f9:	mov    ebx,DWORD PTR [rbp-0x20]
   1400167fc:	lea    rax,[rip+0xfffffffffffe97fd]        # 0x140000000
   140016803:	mov    rax,QWORD PTR [rax+r15*8+0x25a80]
   14001680b:	setne  dil
   14001680f:	add    r12d,r12d
   140016812:	mov    DWORD PTR [rax+rsi*1+0x48],edi
   140016816:	jmp    0x1400169c1
   14001681b:	test   edx,edx
   14001681d:	mov    edx,0xa
   140016822:	je     0x140016831
   140016824:	cmp    WORD PTR [r14],dx
   140016828:	jne    0x140016831
   14001682a:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   14001682f:	jmp    0x140016836
   140016831:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   140016836:	movsxd rax,r12d
   140016839:	mov    rbx,r14
   14001683c:	mov    r13,r14
   14001683f:	add    rax,r14
   140016842:	mov    QWORD PTR [rbp+0x60],rax
   140016846:	cmp    r14,rax
   140016849:	jae    0x1400169b4
   14001684f:	mov    r12d,0xd
   140016855:	movzx  eax,WORD PTR [r13+0x0]
   14001685a:	cmp    ax,0x1a
   14001685e:	je     0x140016992
   140016864:	cmp    ax,r12w
   140016868:	je     0x14001687a
   14001686a:	mov    WORD PTR [rbx],ax
   14001686d:	add    rbx,0x2
   140016871:	add    r13,0x2
   140016875:	jmp    0x140016986
   14001687a:	mov    rax,QWORD PTR [rbp+0x60]
   14001687e:	add    rax,0xfffffffffffffffe
   140016882:	cmp    r13,rax
   140016885:	jae    0x1400168a1
   140016887:	lea    rax,[r13+0x2]
   14001688b:	cmp    WORD PTR [rax],dx
   14001688e:	jne    0x140016899
   140016890:	add    r13,0x4
   140016894:	jmp    0x140016946
   140016899:	mov    r13,rax
   14001689c:	jmp    0x14001697e
   1400168a1:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   1400168a9:	lea    r9,[rbp-0x24]
   1400168ad:	lea    rdx,[rbp-0x28]
   1400168b1:	mov    rcx,QWORD PTR [rcx+rsi*1]
   1400168b5:	mov    r8d,0x2
   1400168bb:	add    r13,0x2
   1400168bf:	mov    QWORD PTR [rsp+0x20],rdi
   1400168c4:	call   QWORD PTR [rip+0x3a2e]        # 0x14001a2f8
   1400168ca:	test   eax,eax
   1400168cc:	jne    0x1400168dc
   1400168ce:	call   QWORD PTR [rip+0x379c]        # 0x14001a070
   1400168d4:	test   eax,eax
   1400168d6:	jne    0x140016972
   1400168dc:	cmp    DWORD PTR [rbp-0x24],edi
   1400168df:	je     0x140016972
   1400168e5:	lea    r8,[rip+0xfffffffffffe9714]        # 0x140000000
   1400168ec:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   1400168f4:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   1400168f9:	je     0x140016936
   1400168fb:	mov    edx,0xa
   140016900:	cmp    WORD PTR [rbp-0x28],dx
   140016904:	je     0x140016946
   140016906:	mov    WORD PTR [rbx],r12w
   14001690a:	mov    al,BYTE PTR [rbp-0x28]
   14001690d:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   140016915:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   140016919:	mov    al,BYTE PTR [rbp-0x27]
   14001691c:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   140016924:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   140016928:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   140016930:	mov    BYTE PTR [rax+rsi*1+0x3a],dl
   140016934:	jmp    0x140016982
   140016936:	cmp    rbx,r14
   140016939:	jne    0x14001694b
   14001693b:	mov    edx,0xa
   140016940:	cmp    WORD PTR [rbp-0x28],dx
   140016944:	jne    0x14001694b
   140016946:	mov    WORD PTR [rbx],dx
   140016949:	jmp    0x140016982
   14001694b:	mov    ecx,DWORD PTR [rbp+0x48]
   14001694e:	mov    rdx,0xfffffffffffffffe
   140016955:	lea    r8d,[rdx+0x3]
   140016959:	call   0x140015e2c
   14001695e:	mov    edx,0xa
   140016963:	lea    r8,[rip+0xfffffffffffe9696]        # 0x140000000
   14001696a:	cmp    WORD PTR [rbp-0x28],dx
   14001696e:	je     0x140016986
   140016970:	jmp    0x14001697e
   140016972:	mov    edx,0xa
   140016977:	lea    r8,[rip+0xfffffffffffe9682]        # 0x140000000
   14001697e:	mov    WORD PTR [rbx],r12w
   140016982:	add    rbx,0x2
   140016986:	cmp    r13,QWORD PTR [rbp+0x60]
   14001698a:	jb     0x140016855
   140016990:	jmp    0x1400169b4
   140016992:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   14001699a:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   14001699f:	jne    0x1400169a8
   1400169a1:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   1400169a6:	jmp    0x1400169b4
   1400169a8:	movzx  eax,WORD PTR [r13+0x0]
   1400169ad:	mov    WORD PTR [rbx],ax
   1400169b0:	add    rbx,0x2
   1400169b4:	mov    r12d,ebx
   1400169b7:	sub    r12d,r14d
   1400169ba:	mov    ebx,DWORD PTR [rbp-0x20]
   1400169bd:	mov    r13,QWORD PTR [rbp+0x50]
   1400169c1:	cmp    r14,r13
   1400169c4:	je     0x1400169ce
   1400169c6:	mov    rcx,r14
   1400169c9:	call   0x14000b490
   1400169ce:	cmp    ebx,0xfffffffe
   1400169d1:	cmove  ebx,r12d
   1400169d5:	mov    eax,ebx
   1400169d7:	jmp    0x140016a32
   1400169d9:	call   QWORD PTR [rip+0x3691]        # 0x14001a070
   1400169df:	cmp    eax,0x5
   1400169e2:	jne    0x1400169ff
   1400169e4:	call   0x14000bdf0
   1400169e9:	mov    DWORD PTR [rax],0x9
   1400169ef:	call   0x14000be10
   1400169f4:	mov    DWORD PTR [rax],0x5
   1400169fa:	jmp    0x140016740
   1400169ff:	cmp    eax,0x6d
   140016a02:	jne    0x140016a08
   140016a04:	mov    ebx,edi
   140016a06:	jmp    0x1400169bd
   140016a08:	mov    ecx,eax
   140016a0a:	call   0x14000be30
   140016a0f:	jmp    0x140016740
   140016a14:	xor    eax,eax
   140016a16:	jmp    0x140016a32
   140016a18:	call   0x14000be10
   140016a1d:	mov    DWORD PTR [rax],edi
   140016a1f:	call   0x14000bdf0
   140016a24:	mov    DWORD PTR [rax],0x9
   140016a2a:	call   0x14000d04c
   140016a2f:	or     eax,0xffffffff
   140016a32:	add    rsp,0x58
   140016a36:	pop    r15
   140016a38:	pop    r14
   140016a3a:	pop    r13
   140016a3c:	pop    r12
   140016a3e:	pop    rdi
   140016a3f:	pop    rsi
   140016a40:	pop    rbx
   140016a41:	pop    rbp
   140016a42:	ret    
   140016a43:	int3   
   140016a44:	mov    QWORD PTR [rsp+0x10],rbx
   140016a49:	mov    QWORD PTR [rsp+0x18],rsi
   140016a4e:	mov    DWORD PTR [rsp+0x8],ecx
   140016a52:	push   rdi
   140016a53:	push   r12
   140016a55:	push   r13
   140016a57:	push   r14
   140016a59:	push   r15
   140016a5b:	sub    rsp,0x20
   140016a5f:	mov    esi,r8d
   140016a62:	mov    r13,rdx
   140016a65:	movsxd rdi,ecx
   140016a68:	cmp    edi,0xfffffffe
   140016a6b:	jne    0x140016a86
   140016a6d:	call   0x14000be10
   140016a72:	xor    ebx,ebx
   140016a74:	mov    DWORD PTR [rax],ebx
   140016a76:	call   0x14000bdf0
   140016a7b:	mov    DWORD PTR [rax],0x9
   140016a81:	jmp    0x140016b44
   140016a86:	xor    ebx,ebx
   140016a88:	test   ecx,ecx
   140016a8a:	js     0x140016b2d
   140016a90:	cmp    edi,DWORD PTR [rip+0xefd6]        # 0x140025a6c
   140016a96:	jae    0x140016b2d
   140016a9c:	mov    r12,rdi
   140016a9f:	mov    r14,rdi
   140016aa2:	sar    r14,0x5
   140016aa6:	lea    r15,[rip+0xefd3]        # 0x140025a80
   140016aad:	and    r12d,0x1f
   140016ab1:	imul   r12,r12,0x58
   140016ab5:	mov    rax,QWORD PTR [r15+r14*8]
   140016ab9:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   140016abf:	and    ecx,0x1
   140016ac2:	je     0x140016b2d
   140016ac4:	mov    eax,ebx
   140016ac6:	cmp    r8d,0x7fffffff
   140016acd:	setbe  al
   140016ad0:	test   eax,eax
   140016ad2:	jne    0x140016ae8
   140016ad4:	call   0x14000be10
   140016ad9:	mov    DWORD PTR [rax],ebx
   140016adb:	call   0x14000bdf0
   140016ae0:	mov    DWORD PTR [rax],0x16
   140016ae6:	jmp    0x140016b3f
   140016ae8:	mov    ecx,edi
   140016aea:	call   0x140011784
   140016aef:	nop
   140016af0:	mov    rax,QWORD PTR [r15+r14*8]
   140016af4:	test   BYTE PTR [rax+r12*1+0x8],0x1
   140016afa:	je     0x140016b0d
   140016afc:	mov    r8d,esi
   140016aff:	mov    rdx,r13
   140016b02:	mov    ecx,edi
   140016b04:	call   0x140016320
   140016b09:	mov    ebx,eax
   140016b0b:	jmp    0x140016b22
   140016b0d:	call   0x14000bdf0
   140016b12:	mov    DWORD PTR [rax],0x9
   140016b18:	call   0x14000be10
   140016b1d:	mov    DWORD PTR [rax],ebx
   140016b1f:	or     ebx,0xffffffff
   140016b22:	mov    ecx,edi
   140016b24:	call   0x14001182c
   140016b29:	mov    eax,ebx
   140016b2b:	jmp    0x140016b47
   140016b2d:	call   0x14000be10
   140016b32:	mov    DWORD PTR [rax],ebx
   140016b34:	call   0x14000bdf0
   140016b39:	mov    DWORD PTR [rax],0x9
   140016b3f:	call   0x14000d04c
   140016b44:	or     eax,0xffffffff
   140016b47:	mov    rbx,QWORD PTR [rsp+0x58]
   140016b4c:	mov    rsi,QWORD PTR [rsp+0x60]
   140016b51:	add    rsp,0x20
   140016b55:	pop    r15
   140016b57:	pop    r14
   140016b59:	pop    r13
   140016b5b:	pop    r12
   140016b5d:	pop    rdi
   140016b5e:	ret    
   140016b5f:	int3   
   140016b60:	mov    rax,rsp
   140016b63:	mov    QWORD PTR [rax+0x8],rbx
   140016b67:	mov    QWORD PTR [rax+0x10],rsi
   140016b6b:	mov    QWORD PTR [rax+0x18],rdi
   140016b6f:	mov    QWORD PTR [rax+0x20],r12
   140016b73:	push   rbp
   140016b74:	mov    rbp,rsp
   140016b77:	sub    rsp,0x40
   140016b7b:	mov    rdi,rcx
   140016b7e:	mov    rsi,rdx
   140016b81:	lea    rcx,[rbp-0x20]
   140016b85:	mov    rdx,r9
   140016b88:	mov    rbx,r8
   140016b8b:	call   0x14000c724
   140016b90:	xor    r12d,r12d
   140016b93:	test   rbx,rbx
   140016b96:	jne    0x140016bb0
   140016b98:	cmp    BYTE PTR [rbp-0x8],r12b
   140016b9c:	je     0x140016ba9
   140016b9e:	mov    rax,QWORD PTR [rbp-0x10]
   140016ba2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016ba9:	xor    eax,eax
   140016bab:	jmp    0x140016d2c
   140016bb0:	mov    rcx,QWORD PTR [rbp-0x18]
   140016bb4:	cmp    DWORD PTR [rcx+0x8],r12d
   140016bb8:	jne    0x140016bcd
   140016bba:	mov    r8,rbx
   140016bbd:	mov    rdx,rsi
   140016bc0:	mov    rcx,rdi
   140016bc3:	call   0x14001958c
   140016bc8:	jmp    0x140016d1b
   140016bcd:	test   rdi,rdi
   140016bd0:	jne    0x140016bfd
   140016bd2:	call   0x14000bdf0
   140016bd7:	mov    DWORD PTR [rax],0x16
   140016bdd:	call   0x14000d04c
   140016be2:	cmp    BYTE PTR [rbp-0x8],r12b
   140016be6:	je     0x140016bf3
   140016be8:	mov    rax,QWORD PTR [rbp-0x10]
   140016bec:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016bf3:	mov    eax,0x7fffffff
   140016bf8:	jmp    0x140016d2c
   140016bfd:	test   rsi,rsi
   140016c00:	je     0x140016bd2
   140016c02:	mov    r9b,0x4
   140016c05:	movzx  edx,BYTE PTR [rdi]
   140016c08:	dec    rbx
   140016c0b:	inc    rdi
   140016c0e:	test   BYTE PTR [rdx+rcx*1+0x1d],r9b
   140016c13:	je     0x140016c6c
   140016c15:	test   rbx,rbx
   140016c18:	jne    0x140016c31
   140016c1a:	movzx  eax,BYTE PTR [rsi]
   140016c1d:	movzx  edx,r12w
   140016c21:	test   BYTE PTR [rax+rcx*1+0x1d],r9b
   140016c26:	jne    0x140016b98
   140016c2c:	jmp    0x140016cf8
   140016c31:	cmp    BYTE PTR [rdi],r12b
   140016c34:	jne    0x140016c3b
   140016c36:	mov    edx,r12d
   140016c39:	jmp    0x140016c7e
   140016c3b:	movzx  eax,BYTE PTR [rdi]
   140016c3e:	shl    dx,0x8
   140016c42:	inc    rdi
   140016c45:	or     dx,ax
   140016c48:	cmp    dx,WORD PTR [rcx+0x10]
   140016c4c:	jb     0x140016c5a
   140016c4e:	cmp    dx,WORD PTR [rcx+0x12]
   140016c52:	ja     0x140016c5a
   140016c54:	add    dx,WORD PTR [rcx+0x14]
   140016c58:	jmp    0x140016c7e
   140016c5a:	cmp    dx,WORD PTR [rcx+0x16]
   140016c5e:	jb     0x140016c7e
   140016c60:	cmp    dx,WORD PTR [rcx+0x18]
   140016c64:	ja     0x140016c7e
   140016c66:	add    dx,WORD PTR [rcx+0x1a]
   140016c6a:	jmp    0x140016c7e
   140016c6c:	movzx  eax,dx
   140016c6f:	test   BYTE PTR [rax+rcx*1+0x1d],0x10
   140016c74:	je     0x140016c7e
   140016c76:	movzx  edx,BYTE PTR [rax+rcx*1+0x11d]
   140016c7e:	movzx  r8d,BYTE PTR [rsi]
   140016c82:	inc    rsi
   140016c85:	mov    eax,r8d
   140016c88:	test   BYTE PTR [r8+rcx*1+0x1d],r9b
   140016c8d:	je     0x140016cdf
   140016c8f:	test   rbx,rbx
   140016c92:	jne    0x140016c99
   140016c94:	mov    eax,r12d
   140016c97:	jmp    0x140016cf8
   140016c99:	dec    rbx
   140016c9c:	cmp    BYTE PTR [rsi],r12b
   140016c9f:	jne    0x140016ca7
   140016ca1:	movzx  eax,r12w
   140016ca5:	jmp    0x140016cf8
   140016ca7:	movzx  eax,BYTE PTR [rsi]
   140016caa:	shl    r8w,0x8
   140016caf:	inc    rsi
   140016cb2:	or     r8w,ax
   140016cb6:	movzx  eax,r8w
   140016cba:	cmp    r8w,WORD PTR [rcx+0x10]
   140016cbf:	jb     0x140016ccd
   140016cc1:	cmp    ax,WORD PTR [rcx+0x12]
   140016cc5:	ja     0x140016ccd
   140016cc7:	add    ax,WORD PTR [rcx+0x14]
   140016ccb:	jmp    0x140016cf8
   140016ccd:	cmp    ax,WORD PTR [rcx+0x16]
   140016cd1:	jb     0x140016cf8
   140016cd3:	cmp    ax,WORD PTR [rcx+0x18]
   140016cd7:	ja     0x140016cf8
   140016cd9:	add    ax,WORD PTR [rcx+0x1a]
   140016cdd:	jmp    0x140016cf8
   140016cdf:	movzx  eax,r8w
   140016ce3:	test   BYTE PTR [rax+rcx*1+0x1d],0x10
   140016ce8:	je     0x140016cf4
   140016cea:	movzx  eax,BYTE PTR [rax+rcx*1+0x11d]
   140016cf2:	jmp    0x140016cf8
   140016cf4:	movzx  eax,r8w
   140016cf8:	cmp    ax,dx
   140016cfb:	jne    0x140016d14
   140016cfd:	test   dx,dx
   140016d00:	je     0x140016b98
   140016d06:	test   rbx,rbx
   140016d09:	jne    0x140016c05
   140016d0f:	jmp    0x140016b98
   140016d14:	sbb    eax,eax
   140016d16:	and    eax,0x2
   140016d19:	dec    eax
   140016d1b:	cmp    BYTE PTR [rbp-0x8],r12b
   140016d1f:	je     0x140016d2c
   140016d21:	mov    rcx,QWORD PTR [rbp-0x10]
   140016d25:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140016d2c:	mov    rbx,QWORD PTR [rsp+0x50]
   140016d31:	mov    rsi,QWORD PTR [rsp+0x58]
   140016d36:	mov    rdi,QWORD PTR [rsp+0x60]
   140016d3b:	mov    r12,QWORD PTR [rsp+0x68]
   140016d40:	add    rsp,0x40
   140016d44:	pop    rbp
   140016d45:	ret    
   140016d46:	int3   
   140016d47:	int3   
   140016d48:	xor    r9d,r9d
   140016d4b:	jmp    0x140016b60
   140016d50:	mov    rax,rsp
   140016d53:	mov    QWORD PTR [rax+0x8],rbx
   140016d57:	mov    QWORD PTR [rax+0x10],rsi
   140016d5b:	mov    QWORD PTR [rax+0x18],rdi
   140016d5f:	mov    QWORD PTR [rax+0x20],r12
   140016d63:	push   rbp
   140016d64:	mov    rbp,rsp
   140016d67:	sub    rsp,0x40
   140016d6b:	xor    r12d,r12d
   140016d6e:	mov    rbx,r8
   140016d71:	mov    rsi,rdx
   140016d74:	mov    rdi,rcx
   140016d77:	test   r8,r8
   140016d7a:	jne    0x140016d83
   140016d7c:	xor    eax,eax
   140016d7e:	jmp    0x140016e96
   140016d83:	lea    rcx,[rbp-0x20]
   140016d87:	mov    rdx,r9
   140016d8a:	call   0x14000c724
   140016d8f:	mov    r11,QWORD PTR [rbp-0x18]
   140016d93:	cmp    DWORD PTR [r11+0x8],r12d
   140016d97:	jne    0x140016dac
   140016d99:	mov    r8,rbx
   140016d9c:	mov    rdx,rsi
   140016d9f:	mov    rcx,rdi
   140016da2:	call   0x14000b5a0
   140016da7:	jmp    0x140016e85
   140016dac:	test   rdi,rdi
   140016daf:	jne    0x140016ddc
   140016db1:	call   0x14000bdf0
   140016db6:	mov    DWORD PTR [rax],0x16
   140016dbc:	call   0x14000d04c
   140016dc1:	cmp    BYTE PTR [rbp-0x8],r12b
   140016dc5:	je     0x140016dd2
   140016dc7:	mov    rax,QWORD PTR [rbp-0x10]
   140016dcb:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016dd2:	mov    eax,0x7fffffff
   140016dd7:	jmp    0x140016e96
   140016ddc:	test   rsi,rsi
   140016ddf:	je     0x140016db1
   140016de1:	mov    r8b,0x4
   140016de4:	movzx  ecx,BYTE PTR [rdi]
   140016de7:	dec    rbx
   140016dea:	inc    rdi
   140016ded:	test   BYTE PTR [rcx+r11*1+0x1d],r8b
   140016df2:	je     0x140016e23
   140016df4:	test   rbx,rbx
   140016df7:	jne    0x140016e0b
   140016df9:	movzx  eax,BYTE PTR [rsi]
   140016dfc:	mov    ecx,r12d
   140016dff:	test   BYTE PTR [rax+r11*1+0x1d],r8b
   140016e04:	jne    0x140016e64
   140016e06:	movzx  edx,ax
   140016e09:	jmp    0x140016e55
   140016e0b:	cmp    BYTE PTR [rdi],r12b
   140016e0e:	jne    0x140016e16
   140016e10:	movzx  ecx,r12w
   140016e14:	jmp    0x140016e23
   140016e16:	movzx  eax,BYTE PTR [rdi]
   140016e19:	shl    cx,0x8
   140016e1d:	or     cx,ax
   140016e20:	inc    rdi
   140016e23:	movzx  edx,BYTE PTR [rsi]
   140016e26:	inc    rsi
   140016e29:	test   BYTE PTR [rdx+r11*1+0x1d],r8b
   140016e2e:	je     0x140016e55
   140016e30:	test   rbx,rbx
   140016e33:	jne    0x140016e3a
   140016e35:	mov    edx,r12d
   140016e38:	jmp    0x140016e55
   140016e3a:	dec    rbx
   140016e3d:	cmp    BYTE PTR [rsi],r12b
   140016e40:	jne    0x140016e48
   140016e42:	movzx  edx,r12w
   140016e46:	jmp    0x140016e55
   140016e48:	movzx  eax,BYTE PTR [rsi]
   140016e4b:	shl    dx,0x8
   140016e4f:	or     dx,ax
   140016e52:	inc    rsi
   140016e55:	cmp    dx,cx
   140016e58:	jne    0x140016e7e
   140016e5a:	test   cx,cx
   140016e5d:	je     0x140016e64
   140016e5f:	test   rbx,rbx
   140016e62:	jne    0x140016de4
   140016e64:	cmp    BYTE PTR [rbp-0x8],r12b
   140016e68:	je     0x140016d7c
   140016e6e:	mov    rax,QWORD PTR [rbp-0x10]
   140016e72:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016e79:	jmp    0x140016d7c
   140016e7e:	sbb    eax,eax
   140016e80:	and    eax,0x2
   140016e83:	dec    eax
   140016e85:	cmp    BYTE PTR [rbp-0x8],r12b
   140016e89:	je     0x140016e96
   140016e8b:	mov    rcx,QWORD PTR [rbp-0x10]
   140016e8f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140016e96:	mov    rbx,QWORD PTR [rsp+0x50]
   140016e9b:	mov    rsi,QWORD PTR [rsp+0x58]
   140016ea0:	mov    rdi,QWORD PTR [rsp+0x60]
   140016ea5:	mov    r12,QWORD PTR [rsp+0x68]
   140016eaa:	add    rsp,0x40
   140016eae:	pop    rbp
   140016eaf:	ret    
   140016eb0:	xor    r9d,r9d
   140016eb3:	jmp    0x140016d50
   140016eb8:	mov    WORD PTR [rsp+0x8],cx
   140016ebd:	sub    rsp,0x38
   140016ec1:	mov    rcx,QWORD PTR [rip+0xd840]        # 0x140024708
   140016ec8:	cmp    rcx,0xfffffffffffffffe
   140016ecc:	jne    0x140016eda
   140016ece:	call   0x1400195dc
   140016ed3:	mov    rcx,QWORD PTR [rip+0xd82e]        # 0x140024708
   140016eda:	cmp    rcx,0xffffffffffffffff
   140016ede:	jne    0x140016ee7
   140016ee0:	mov    eax,0xffff
   140016ee5:	jmp    0x140016f0c
   140016ee7:	and    QWORD PTR [rsp+0x20],0x0
   140016eed:	lea    r9,[rsp+0x48]
   140016ef2:	lea    rdx,[rsp+0x40]
   140016ef7:	mov    r8d,0x1
   140016efd:	call   QWORD PTR [rip+0x33fd]        # 0x14001a300
   140016f03:	test   eax,eax
   140016f05:	je     0x140016ee0
   140016f07:	movzx  eax,WORD PTR [rsp+0x40]
   140016f0c:	add    rsp,0x38
   140016f10:	ret    
   140016f11:	int3   
   140016f12:	int3   
   140016f13:	int3   
   140016f14:	int3   
   140016f15:	int3   
   140016f16:	int3   
   140016f17:	int3   
   140016f18:	int3   
   140016f19:	int3   
   140016f1a:	int3   
   140016f1b:	int3   
   140016f1c:	int3   
   140016f1d:	int3   
   140016f1e:	int3   
   140016f1f:	int3   
   140016f20:	int3   
   140016f21:	int3   
   140016f22:	int3   
   140016f23:	int3   
   140016f24:	int3   
   140016f25:	int3   
   140016f26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140016f30:	sub    rsp,0x10
   140016f34:	mov    QWORD PTR [rsp],r10
   140016f38:	mov    QWORD PTR [rsp+0x8],r11
   140016f3d:	xor    r11,r11
   140016f40:	lea    r10,[rsp+0x18]
   140016f45:	sub    r10,rax
   140016f48:	cmovb  r10,r11
   140016f4c:	mov    r11,QWORD PTR gs:0x10
   140016f55:	cmp    r10,r11
   140016f58:	jae    0x140016f70
   140016f5a:	and    r10w,0xf000
   140016f60:	lea    r11,[r11-0x1000]
   140016f67:	mov    BYTE PTR [r11],0x0
   140016f6b:	cmp    r10,r11
   140016f6e:	jne    0x140016f60
   140016f70:	mov    r10,QWORD PTR [rsp]
   140016f74:	mov    r11,QWORD PTR [rsp+0x8]
   140016f79:	add    rsp,0x10
   140016f7d:	ret    
   140016f7e:	int3   
   140016f7f:	int3   
   140016f80:	rex push rbx
   140016f82:	sub    rsp,0x30
   140016f86:	mov    rax,QWORD PTR [rip+0xc133]        # 0x1400230c0
   140016f8d:	xor    rax,rsp
   140016f90:	mov    QWORD PTR [rsp+0x28],rax
   140016f95:	test   ecx,ecx
   140016f97:	jne    0x140016fa0
   140016f99:	mov    eax,0x1
   140016f9e:	jmp    0x140016fd1
   140016fa0:	add    cx,0x40
   140016fa4:	mov    eax,0x3a
   140016fa9:	mov    DWORD PTR [rsp+0x24],0x5c
   140016fb1:	mov    WORD PTR [rsp+0x20],cx
   140016fb6:	lea    rcx,[rsp+0x20]
   140016fbb:	mov    WORD PTR [rsp+0x22],ax
   140016fc0:	call   QWORD PTR [rip+0x3342]        # 0x14001a308
   140016fc6:	test   eax,eax
   140016fc8:	je     0x140016fcf
   140016fca:	cmp    eax,0x1
   140016fcd:	jne    0x140016f99
   140016fcf:	xor    eax,eax
   140016fd1:	mov    rcx,QWORD PTR [rsp+0x28]
   140016fd6:	xor    rcx,rsp
   140016fd9:	call   0x14000a850
   140016fde:	add    rsp,0x30
   140016fe2:	pop    rbx
   140016fe3:	ret    
   140016fe4:	mov    QWORD PTR [rsp+0x10],rbx
   140016fe9:	push   rbp
   140016fea:	push   rsi
   140016feb:	push   rdi
   140016fec:	sub    rsp,0x20
   140016ff0:	mov    esi,r8d
   140016ff3:	mov    rbx,rdx
   140016ff6:	mov    edi,ecx
   140016ff8:	test   ecx,ecx
   140016ffa:	je     0x140017025
   140016ffc:	call   0x140016f80
   140017001:	test   eax,eax
   140017003:	jne    0x14001702c
   140017005:	call   0x14000be10
   14001700a:	mov    DWORD PTR [rax],0xf
   140017010:	call   0x14000bdf0
   140017015:	mov    DWORD PTR [rax],0xd
   14001701b:	call   0x14000d04c
   140017020:	jmp    0x140017100
   140017025:	call   0x1400134b8
   14001702a:	mov    edi,eax
   14001702c:	test   rbx,rbx
   14001702f:	je     0x140017049
   140017031:	test   esi,esi
   140017033:	jg     0x140017042
   140017035:	call   0x14000bdf0
   14001703a:	mov    DWORD PTR [rax],0x16
   140017040:	jmp    0x14001701b
   140017042:	mov    ebp,esi
   140017044:	mov    BYTE PTR [rbx],0x0
   140017047:	jmp    0x14001704b
   140017049:	xor    ebp,ebp
   14001704b:	test   edi,edi
   14001704d:	je     0x140017066
   14001704f:	add    dil,0x40
   140017053:	mov    WORD PTR [rsp+0x41],0x2e3a
   14001705a:	mov    BYTE PTR [rsp+0x43],0x0
   14001705f:	mov    BYTE PTR [rsp+0x40],dil
   140017064:	jmp    0x14001706d
   140017066:	mov    WORD PTR [rsp+0x40],0x2e
   14001706d:	lea    r9,[rsp+0x58]
   140017072:	lea    rcx,[rsp+0x40]
   140017077:	mov    r8,rbx
   14001707a:	mov    edx,ebp
   14001707c:	call   QWORD PTR [rip+0x31fe]        # 0x14001a280
   140017082:	test   eax,eax
   140017084:	je     0x1400170f3
   140017086:	test   rbx,rbx
   140017089:	je     0x1400170a4
   14001708b:	cmp    eax,ebp
   14001708d:	jge    0x140017094
   14001708f:	mov    rax,rbx
   140017092:	jmp    0x140017102
   140017094:	call   0x14000bdf0
   140017099:	mov    DWORD PTR [rax],0x22
   14001709f:	mov    BYTE PTR [rbx],0x0
   1400170a2:	jmp    0x140017100
   1400170a4:	cmp    eax,esi
   1400170a6:	mov    edx,0x1
   1400170ab:	cmovg  esi,eax
   1400170ae:	movsxd rcx,esi
   1400170b1:	call   0x14000eb44
   1400170b6:	mov    rbx,rax
   1400170b9:	test   rax,rax
   1400170bc:	jne    0x1400170d6
   1400170be:	call   0x14000bdf0
   1400170c3:	mov    DWORD PTR [rax],0xc
   1400170c9:	call   0x14000be10
   1400170ce:	mov    DWORD PTR [rax],0x8
   1400170d4:	jmp    0x140017100
   1400170d6:	lea    r9,[rsp+0x58]
   1400170db:	lea    rcx,[rsp+0x40]
   1400170e0:	mov    r8,rax
   1400170e3:	mov    edx,esi
   1400170e5:	call   QWORD PTR [rip+0x3195]        # 0x14001a280
   1400170eb:	test   eax,eax
   1400170ed:	je     0x1400170f3
   1400170ef:	cmp    eax,esi
   1400170f1:	jl     0x14001708f
   1400170f3:	call   QWORD PTR [rip+0x2f77]        # 0x14001a070
   1400170f9:	mov    ecx,eax
   1400170fb:	call   0x14000be30
   140017100:	xor    eax,eax
   140017102:	mov    rbx,QWORD PTR [rsp+0x48]
   140017107:	add    rsp,0x20
   14001710b:	pop    rdi
   14001710c:	pop    rsi
   14001710d:	pop    rbp
   14001710e:	ret    
   14001710f:	int3   
   140017110:	mov    QWORD PTR [rsp+0x8],rbx
   140017115:	push   rdi
   140017116:	sub    rsp,0x20
   14001711a:	mov    ebx,edx
   14001711c:	mov    rdi,rcx
   14001711f:	mov    ecx,0x7
   140017124:	call   0x14000cb58
   140017129:	nop
   14001712a:	mov    r8d,ebx
   14001712d:	mov    rdx,rdi
   140017130:	xor    ecx,ecx
   140017132:	call   0x140016fe4
   140017137:	mov    rbx,rax
   14001713a:	mov    ecx,0x7
   14001713f:	call   0x14000ca58
   140017144:	mov    rax,rbx
   140017147:	mov    rbx,QWORD PTR [rsp+0x30]
   14001714c:	add    rsp,0x20
   140017150:	pop    rdi
   140017151:	ret    
   140017152:	int3   
   140017153:	int3   
   140017154:	mov    QWORD PTR [rsp+0x10],rbx
   140017159:	mov    QWORD PTR [rsp+0x18],rsi
   14001715e:	push   rbp
   14001715f:	push   rdi
   140017160:	push   r12
   140017162:	push   r14
   140017164:	push   r15
   140017166:	mov    rbp,rsp
   140017169:	sub    rsp,0x70
   14001716d:	mov    rdi,rcx
   140017170:	mov    rsi,rdx
   140017173:	lea    rcx,[rbp-0x20]
   140017177:	mov    rdx,r8
   14001717a:	call   0x14000c724
   14001717f:	xor    r12d,r12d
   140017182:	test   rdi,rdi
   140017185:	jne    0x1400171b2
   140017187:	call   0x14000bdf0
   14001718c:	mov    DWORD PTR [rax],0x16
   140017192:	call   0x14000d04c
   140017197:	cmp    BYTE PTR [rbp-0x8],r12b
   14001719b:	je     0x1400171a8
   14001719d:	mov    rax,QWORD PTR [rbp-0x10]
   1400171a1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400171a8:	mov    eax,0x7fffffff
   1400171ad:	jmp    0x140017346
   1400171b2:	test   rsi,rsi
   1400171b5:	je     0x140017187
   1400171b7:	mov    rdx,QWORD PTR [rbp-0x18]
   1400171bb:	cmp    DWORD PTR [rdx+0x8],r12d
   1400171bf:	jne    0x1400171d5
   1400171c1:	lea    r8,[rbp-0x20]
   1400171c5:	mov    rdx,rsi
   1400171c8:	mov    rcx,rdi
   1400171cb:	call   0x140019678
   1400171d0:	jmp    0x140017335
   1400171d5:	mov    r14d,0x2
   1400171db:	mov    r15d,0x100
   1400171e1:	movzx  ebx,BYTE PTR [rdi]
   1400171e4:	inc    rdi
   1400171e7:	test   BYTE PTR [rbx+rdx*1+0x1d],0x4
   1400171ec:	je     0x14001725e
   1400171ee:	cmp    BYTE PTR [rdi],r12b
   1400171f1:	jne    0x1400171f9
   1400171f3:	movzx  ebx,r12w
   1400171f7:	jmp    0x140017270
   1400171f9:	mov    eax,DWORD PTR [rdx+0x4]
   1400171fc:	mov    edx,DWORD PTR [rdx+0xc]
   1400171ff:	mov    DWORD PTR [rsp+0x40],0x1
   140017207:	mov    DWORD PTR [rsp+0x38],eax
   14001720b:	lea    rax,[rbp+0x30]
   14001720f:	mov    DWORD PTR [rsp+0x30],r14d
   140017214:	mov    QWORD PTR [rsp+0x28],rax
   140017219:	lea    r9,[rdi-0x1]
   14001721d:	lea    rcx,[rbp-0x20]
   140017221:	mov    r8d,0x200
   140017227:	mov    DWORD PTR [rsp+0x20],r14d
   14001722c:	call   0x1400186dc
   140017231:	cmp    eax,0x1
   140017234:	jne    0x14001723c
   140017236:	movzx  ebx,BYTE PTR [rbp+0x30]
   14001723a:	jmp    0x140017255
   14001723c:	cmp    eax,r14d
   14001723f:	jne    0x14001731e
   140017245:	movzx  ebx,BYTE PTR [rbp+0x30]
   140017249:	movzx  eax,BYTE PTR [rbp+0x31]
   14001724d:	imul   bx,r15w
   140017252:	add    bx,ax
   140017255:	mov    rdx,QWORD PTR [rbp-0x18]
   140017259:	inc    rdi
   14001725c:	jmp    0x140017270
   14001725e:	movzx  eax,bx
   140017261:	test   BYTE PTR [rax+rdx*1+0x1d],0x10
   140017266:	je     0x140017270
   140017268:	movzx  ebx,BYTE PTR [rax+rdx*1+0x11d]
   140017270:	movzx  ecx,BYTE PTR [rsi]
   140017273:	inc    rsi
   140017276:	test   BYTE PTR [rcx+rdx*1+0x1d],0x4
   14001727b:	je     0x1400172e9
   14001727d:	cmp    BYTE PTR [rsi],r12b
   140017280:	jne    0x140017288
   140017282:	movzx  ecx,r12w
   140017286:	jmp    0x1400172fb
   140017288:	mov    eax,DWORD PTR [rdx+0x4]
   14001728b:	mov    edx,DWORD PTR [rdx+0xc]
   14001728e:	mov    DWORD PTR [rsp+0x40],0x1
   140017296:	mov    DWORD PTR [rsp+0x38],eax
   14001729a:	lea    rax,[rbp+0x30]
   14001729e:	mov    DWORD PTR [rsp+0x30],r14d
   1400172a3:	mov    QWORD PTR [rsp+0x28],rax
   1400172a8:	lea    r9,[rsi-0x1]
   1400172ac:	lea    rcx,[rbp-0x20]
   1400172b0:	mov    r8d,0x200
   1400172b6:	mov    DWORD PTR [rsp+0x20],r14d
   1400172bb:	call   0x1400186dc
   1400172c0:	cmp    eax,0x1
   1400172c3:	jne    0x1400172cb
   1400172c5:	movzx  ecx,BYTE PTR [rbp+0x30]
   1400172c9:	jmp    0x1400172e0
   1400172cb:	cmp    eax,r14d
   1400172ce:	jne    0x14001731e
   1400172d0:	movzx  ecx,BYTE PTR [rbp+0x30]
   1400172d4:	movzx  eax,BYTE PTR [rbp+0x31]
   1400172d8:	imul   cx,r15w
   1400172dd:	add    cx,ax
   1400172e0:	mov    rdx,QWORD PTR [rbp-0x18]
   1400172e4:	inc    rsi
   1400172e7:	jmp    0x1400172fb
   1400172e9:	movzx  eax,cx
   1400172ec:	test   BYTE PTR [rax+rdx*1+0x1d],0x10
   1400172f1:	je     0x1400172fb
   1400172f3:	movzx  ecx,BYTE PTR [rax+rdx*1+0x11d]
   1400172fb:	cmp    cx,bx
   1400172fe:	jne    0x14001732e
   140017300:	test   bx,bx
   140017303:	jne    0x1400171e1
   140017309:	cmp    BYTE PTR [rbp-0x8],r12b
   14001730d:	je     0x14001731a
   14001730f:	mov    rax,QWORD PTR [rbp-0x10]
   140017313:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001731a:	xor    eax,eax
   14001731c:	jmp    0x140017346
   14001731e:	call   0x14000bdf0
   140017323:	mov    DWORD PTR [rax],0x16
   140017329:	jmp    0x140017197
   14001732e:	sbb    eax,eax
   140017330:	and    eax,r14d
   140017333:	dec    eax
   140017335:	cmp    BYTE PTR [rbp-0x8],r12b
   140017339:	je     0x140017346
   14001733b:	mov    rcx,QWORD PTR [rbp-0x10]
   14001733f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140017346:	lea    r11,[rsp+0x70]
   14001734b:	mov    rbx,QWORD PTR [r11+0x38]
   14001734f:	mov    rsi,QWORD PTR [r11+0x40]
   140017353:	mov    rsp,r11
   140017356:	pop    r15
   140017358:	pop    r14
   14001735a:	pop    r12
   14001735c:	pop    rdi
   14001735d:	pop    rbp
   14001735e:	ret    
   14001735f:	int3   
   140017360:	xor    r8d,r8d
   140017363:	jmp    0x140017154
   140017368:	mov    QWORD PTR [rsp+0x8],rbx
   14001736d:	mov    QWORD PTR [rsp+0x10],rsi
   140017372:	push   rdi
   140017373:	sub    rsp,0x40
   140017377:	mov    rbx,rcx
   14001737a:	mov    esi,edx
   14001737c:	lea    rcx,[rsp+0x20]
   140017381:	mov    rdx,r8
   140017384:	xor    edi,edi
   140017386:	call   0x14000c724
   14001738b:	test   rbx,rbx
   14001738e:	jne    0x1400173b7
   140017390:	call   0x14000bdf0
   140017395:	mov    DWORD PTR [rax],0x16
   14001739b:	call   0x14000d04c
   1400173a0:	cmp    BYTE PTR [rsp+0x38],dil
   1400173a5:	je     0x1400173b3
   1400173a7:	mov    rax,QWORD PTR [rsp+0x30]
   1400173ac:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400173b3:	xor    eax,eax
   1400173b5:	jmp    0x140017435
   1400173b7:	mov    r8,QWORD PTR [rsp+0x28]
   1400173bc:	cmp    DWORD PTR [r8+0x8],edi
   1400173c0:	jne    0x1400173e1
   1400173c2:	mov    edx,esi
   1400173c4:	mov    rcx,rbx
   1400173c7:	call   0x14000bb58
   1400173cc:	cmp    BYTE PTR [rsp+0x38],dil
   1400173d1:	je     0x140017435
   1400173d3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400173d8:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400173df:	jmp    0x140017435
   1400173e1:	movzx  ecx,BYTE PTR [rbx]
   1400173e4:	mov    edx,ecx
   1400173e6:	test   BYTE PTR [rcx+r8*1+0x1d],0x4
   1400173ec:	je     0x140017413
   1400173ee:	inc    rbx
   1400173f1:	mov    cl,BYTE PTR [rbx]
   1400173f3:	test   cl,cl
   1400173f5:	je     0x140017409
   1400173f7:	shl    edx,0x8
   1400173fa:	movzx  eax,cl
   1400173fd:	or     edx,eax
   1400173ff:	cmp    esi,edx
   140017401:	jne    0x140017419
   140017403:	lea    rdi,[rbx-0x1]
   140017407:	jmp    0x140017419
   140017409:	test   rdi,rdi
   14001740c:	jne    0x140017419
   14001740e:	mov    rdi,rbx
   140017411:	jmp    0x140017419
   140017413:	cmp    esi,ecx
   140017415:	cmove  rdi,rbx
   140017419:	inc    rbx
   14001741c:	test   cl,cl
   14001741e:	jne    0x1400173e1
   140017420:	cmp    BYTE PTR [rsp+0x38],cl
   140017424:	je     0x140017432
   140017426:	mov    rcx,QWORD PTR [rsp+0x30]
   14001742b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140017432:	mov    rax,rdi
   140017435:	mov    rbx,QWORD PTR [rsp+0x50]
   14001743a:	mov    rsi,QWORD PTR [rsp+0x58]
   14001743f:	add    rsp,0x40
   140017443:	pop    rdi
   140017444:	ret    
   140017445:	int3   
   140017446:	int3   
   140017447:	int3   
   140017448:	xor    r8d,r8d
   14001744b:	jmp    0x140017368
   140017450:	mov    rax,rsp
   140017453:	mov    QWORD PTR [rax+0x8],rbx
   140017457:	mov    QWORD PTR [rax+0x10],rbp
   14001745b:	mov    QWORD PTR [rax+0x18],rsi
   14001745f:	mov    QWORD PTR [rax+0x20],rdi
   140017463:	push   r12
   140017465:	sub    rsp,0x20
   140017469:	mov    r10,QWORD PTR [r9+0x38]
   14001746d:	mov    rsi,rdx
   140017470:	mov    r12,r8
   140017473:	mov    eax,DWORD PTR [r10]
   140017476:	mov    rbp,rcx
   140017479:	mov    rdx,r9
   14001747c:	add    rax,rax
   14001747f:	mov    rcx,rsi
   140017482:	mov    rdi,r9
   140017485:	lea    rbx,[r10+rax*8+0x4]
   14001748a:	mov    r8,rbx
   14001748d:	call   0x14000a64c
   140017492:	mov    r11d,DWORD PTR [rbx]
   140017495:	mov    r10d,DWORD PTR [rbp+0x4]
   140017499:	mov    eax,r11d
   14001749c:	and    r11d,0x2
   1400174a0:	mov    edx,0x1
   1400174a5:	and    eax,edx
   1400174a7:	and    r10b,0x66
   1400174ab:	cmove  r11d,eax
   1400174af:	test   r11d,r11d
   1400174b2:	je     0x1400174c7
   1400174b4:	mov    r9,rdi
   1400174b7:	mov    r8,r12
   1400174ba:	mov    rdx,rsi
   1400174bd:	mov    rcx,rbp
   1400174c0:	call   0x14000d724
   1400174c5:	mov    edx,eax
   1400174c7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400174cc:	mov    rbp,QWORD PTR [rsp+0x38]
   1400174d1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400174d6:	mov    rdi,QWORD PTR [rsp+0x48]
   1400174db:	mov    eax,edx
   1400174dd:	add    rsp,0x20
   1400174e1:	pop    r12
   1400174e3:	ret    
   1400174e4:	mov    rax,rsp
   1400174e7:	mov    QWORD PTR [rax+0x8],rbx
   1400174eb:	mov    QWORD PTR [rax+0x10],rbp
   1400174ef:	mov    QWORD PTR [rax+0x18],rsi
   1400174f3:	mov    QWORD PTR [rax+0x20],rdi
   1400174f7:	push   r12
   1400174f9:	push   r13
   1400174fb:	push   r15
   1400174fd:	sub    rsp,0x20
   140017501:	mov    rbp,rdx
   140017504:	xor    edi,edi
   140017506:	xor    edx,edx
   140017508:	lea    r8d,[rdi+0x1]
   14001750c:	mov    esi,ecx
   14001750e:	call   0x140015e2c
   140017513:	mov    r13,rax
   140017516:	cmp    rax,0xffffffffffffffff
   14001751a:	je     0x14001756c
   14001751c:	lea    r8d,[rdi+0x2]
   140017520:	xor    edx,edx
   140017522:	mov    ecx,esi
   140017524:	call   0x140015e2c
   140017529:	cmp    rax,0xffffffffffffffff
   14001752d:	je     0x14001756c
   14001752f:	mov    rbx,rbp
   140017532:	sub    rbx,rax
   140017535:	test   rbx,rbx
   140017538:	jle    0x1400175ff
   14001753e:	call   QWORD PTR [rip+0x2dd4]        # 0x14001a318
   140017544:	mov    r15d,0x1000
   14001754a:	lea    edx,[rdi+0x8]
   14001754d:	mov    rcx,rax
   140017550:	mov    r8d,r15d
   140017553:	call   QWORD PTR [rip+0x2ba7]        # 0x14001a100
   140017559:	mov    rbp,rax
   14001755c:	test   rax,rax
   14001755f:	jne    0x140017592
   140017561:	call   0x14000bdf0
   140017566:	mov    DWORD PTR [rax],0xc
   14001756c:	call   0x14000bdf0
   140017571:	mov    eax,DWORD PTR [rax]
   140017573:	mov    rbx,QWORD PTR [rsp+0x40]
   140017578:	mov    rbp,QWORD PTR [rsp+0x48]
   14001757d:	mov    rsi,QWORD PTR [rsp+0x50]
   140017582:	mov    rdi,QWORD PTR [rsp+0x58]
   140017587:	add    rsp,0x20
   14001758b:	pop    r15
   14001758d:	pop    r13
   14001758f:	pop    r12
   140017591:	ret    
   140017592:	mov    edx,0x8000
   140017597:	mov    ecx,esi
   140017599:	call   0x1400177f4
   14001759e:	mov    r12d,eax
   1400175a1:	mov    r8d,ebx
   1400175a4:	cmp    rbx,r15
   1400175a7:	mov    rdx,rbp
   1400175aa:	cmovge r8d,r15d
   1400175ae:	mov    ecx,esi
   1400175b0:	call   0x140011a5c
   1400175b5:	cmp    eax,0xffffffff
   1400175b8:	je     0x1400175c6
   1400175ba:	cdqe   
   1400175bc:	sub    rbx,rax
   1400175bf:	test   rbx,rbx
   1400175c2:	jle    0x1400175df
   1400175c4:	jmp    0x1400175a1
   1400175c6:	call   0x14000be10
   1400175cb:	cmp    DWORD PTR [rax],0x5
   1400175ce:	jne    0x1400175db
   1400175d0:	call   0x14000bdf0
   1400175d5:	mov    DWORD PTR [rax],0xd
   1400175db:	or     rdi,0xffffffffffffffff
   1400175df:	mov    edx,r12d
   1400175e2:	mov    ecx,esi
   1400175e4:	call   0x1400177f4
   1400175e9:	call   QWORD PTR [rip+0x2d29]        # 0x14001a318
   1400175ef:	mov    r8,rbp
   1400175f2:	mov    rcx,rax
   1400175f5:	xor    edx,edx
   1400175f7:	call   QWORD PTR [rip+0x2b13]        # 0x14001a110
   1400175fd:	jmp    0x140017654
   1400175ff:	jns    0x14001765e
   140017601:	xor    r8d,r8d
   140017604:	mov    rdx,rbp
   140017607:	mov    ecx,esi
   140017609:	call   0x140015e2c
   14001760e:	cmp    rax,0xffffffffffffffff
   140017612:	je     0x14001756c
   140017618:	mov    ecx,esi
   14001761a:	call   0x140011710
   14001761f:	mov    rcx,rax
   140017622:	call   QWORD PTR [rip+0x2ce8]        # 0x14001a310
   140017628:	neg    eax
   14001762a:	sbb    rdi,rdi
   14001762d:	neg    rdi
   140017630:	dec    rdi
   140017633:	cmp    rdi,0xffffffffffffffff
   140017637:	jne    0x14001765e
   140017639:	call   0x14000bdf0
   14001763e:	mov    DWORD PTR [rax],0xd
   140017644:	call   0x14000be10
   140017649:	mov    rbx,rax
   14001764c:	call   QWORD PTR [rip+0x2a1e]        # 0x14001a070
   140017652:	mov    DWORD PTR [rbx],eax
   140017654:	cmp    rdi,0xffffffffffffffff
   140017658:	je     0x14001756c
   14001765e:	xor    r8d,r8d
   140017661:	mov    rdx,r13
   140017664:	mov    ecx,esi
   140017666:	call   0x140015e2c
   14001766b:	cmp    rax,0xffffffffffffffff
   14001766f:	je     0x14001756c
   140017675:	xor    eax,eax
   140017677:	jmp    0x140017573
   14001767c:	mov    QWORD PTR [rsp+0x8],rbx
   140017681:	mov    QWORD PTR [rsp+0x10],rsi
   140017686:	push   rdi
   140017687:	sub    rsp,0x20
   14001768b:	movsxd rbx,ecx
   14001768e:	mov    edi,r8d
   140017691:	mov    esi,edx
   140017693:	mov    ecx,ebx
   140017695:	call   0x140011710
   14001769a:	cmp    rax,0xffffffffffffffff
   14001769e:	jne    0x1400176b0
   1400176a0:	call   0x14000bdf0
   1400176a5:	mov    DWORD PTR [rax],0x9
   1400176ab:	or     eax,0xffffffff
   1400176ae:	jmp    0x140017702
   1400176b0:	mov    r9d,edi
   1400176b3:	xor    r8d,r8d
   1400176b6:	mov    edx,esi
   1400176b8:	mov    rcx,rax
   1400176bb:	call   QWORD PTR [rip+0x2c2f]        # 0x14001a2f0
   1400176c1:	mov    edi,eax
   1400176c3:	cmp    eax,0xffffffff
   1400176c6:	jne    0x1400176d0
   1400176c8:	call   QWORD PTR [rip+0x29a2]        # 0x14001a070
   1400176ce:	jmp    0x1400176d2
   1400176d0:	xor    eax,eax
   1400176d2:	test   eax,eax
   1400176d4:	je     0x1400176df
   1400176d6:	mov    ecx,eax
   1400176d8:	call   0x14000be30
   1400176dd:	jmp    0x1400176ab
   1400176df:	mov    rcx,rbx
   1400176e2:	mov    rax,rbx
   1400176e5:	lea    rdx,[rip+0xe394]        # 0x140025a80
   1400176ec:	sar    rax,0x5
   1400176f0:	and    ecx,0x1f
   1400176f3:	mov    rax,QWORD PTR [rdx+rax*8]
   1400176f7:	imul   rcx,rcx,0x58
   1400176fb:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140017700:	mov    eax,edi
   140017702:	mov    rbx,QWORD PTR [rsp+0x30]
   140017707:	mov    rsi,QWORD PTR [rsp+0x38]
   14001770c:	add    rsp,0x20
   140017710:	pop    rdi
   140017711:	ret    
   140017712:	int3   
   140017713:	int3   
   140017714:	mov    QWORD PTR [rsp+0x10],rbx
   140017719:	mov    DWORD PTR [rsp+0x8],ecx
   14001771d:	push   rsi
   14001771e:	push   rdi
   14001771f:	push   r12
   140017721:	push   r13
   140017723:	push   r14
   140017725:	sub    rsp,0x20
   140017729:	mov    esi,r8d
   14001772c:	mov    r12d,edx
   14001772f:	movsxd rdi,ecx
   140017732:	cmp    edi,0xfffffffe
   140017735:	jne    0x14001774f
   140017737:	call   0x14000be10
   14001773c:	and    DWORD PTR [rax],0x0
   14001773f:	call   0x14000bdf0
   140017744:	mov    DWORD PTR [rax],0x9
   14001774a:	jmp    0x1400177de
   14001774f:	test   ecx,ecx
   140017751:	js     0x1400177c6
   140017753:	cmp    edi,DWORD PTR [rip+0xe313]        # 0x140025a6c
   140017759:	jae    0x1400177c6
   14001775b:	mov    rbx,rdi
   14001775e:	mov    r13,rdi
   140017761:	sar    r13,0x5
   140017765:	lea    r14,[rip+0xe314]        # 0x140025a80
   14001776c:	and    ebx,0x1f
   14001776f:	imul   rbx,rbx,0x58
   140017773:	mov    rax,QWORD PTR [r14+r13*8]
   140017777:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   14001777c:	and    ecx,0x1
   14001777f:	je     0x1400177c6
   140017781:	mov    ecx,edi
   140017783:	call   0x140011784
   140017788:	nop
   140017789:	mov    rax,QWORD PTR [r14+r13*8]
   14001778d:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140017792:	je     0x1400177a5
   140017794:	mov    r8d,esi
   140017797:	mov    edx,r12d
   14001779a:	mov    ecx,edi
   14001779c:	call   0x14001767c
   1400177a1:	mov    ebx,eax
   1400177a3:	jmp    0x1400177bb
   1400177a5:	call   0x14000bdf0
   1400177aa:	mov    DWORD PTR [rax],0x9
   1400177b0:	call   0x14000be10
   1400177b5:	and    DWORD PTR [rax],0x0
   1400177b8:	or     ebx,0xffffffff
   1400177bb:	mov    ecx,edi
   1400177bd:	call   0x14001182c
   1400177c2:	mov    eax,ebx
   1400177c4:	jmp    0x1400177e1
   1400177c6:	call   0x14000be10
   1400177cb:	and    DWORD PTR [rax],0x0
   1400177ce:	call   0x14000bdf0
   1400177d3:	mov    DWORD PTR [rax],0x9
   1400177d9:	call   0x14000d04c
   1400177de:	or     eax,0xffffffff
   1400177e1:	mov    rbx,QWORD PTR [rsp+0x58]
   1400177e6:	add    rsp,0x20
   1400177ea:	pop    r14
   1400177ec:	pop    r13
   1400177ee:	pop    r12
   1400177f0:	pop    rdi
   1400177f1:	pop    rsi
   1400177f2:	ret    
   1400177f3:	int3   
   1400177f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400177f9:	movsxd r8,ecx
   1400177fc:	lea    rbx,[rip+0xe27d]        # 0x140025a80
   140017803:	mov    r9,r8
   140017806:	and    r8d,0x1f
   14001780a:	sar    r9,0x5
   14001780e:	imul   r8,r8,0x58
   140017812:	mov    rcx,QWORD PTR [rbx+r9*8]
   140017816:	mov    al,BYTE PTR [rcx+r8*1+0x38]
   14001781b:	movzx  r11d,BYTE PTR [rcx+r8*1+0x8]
   140017821:	add    al,al
   140017823:	and    r11d,0x80
   14001782a:	movsx  r10d,al
   14001782e:	sar    r10d,1
   140017831:	cmp    edx,0x4000
   140017837:	je     0x140017891
   140017839:	cmp    edx,0x8000
   14001783f:	je     0x140017889
   140017841:	cmp    edx,0x10000
   140017847:	je     0x140017871
   140017849:	cmp    edx,0x20000
   14001784f:	je     0x140017871
   140017851:	cmp    edx,0x40000
   140017857:	jne    0x1400178a1
   140017859:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   14001785f:	mov    rax,QWORD PTR [rbx+r9*8]
   140017863:	and    BYTE PTR [rax+r8*1+0x38],0x81
   140017869:	or     BYTE PTR [rax+r8*1+0x38],0x1
   14001786f:	jmp    0x1400178a1
   140017871:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   140017877:	mov    rax,QWORD PTR [rbx+r9*8]
   14001787b:	and    BYTE PTR [rax+r8*1+0x38],0x82
   140017881:	or     BYTE PTR [rax+r8*1+0x38],0x2
   140017887:	jmp    0x1400178a1
   140017889:	and    BYTE PTR [rcx+r8*1+0x8],0x7f
   14001788f:	jmp    0x1400178a1
   140017891:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   140017897:	mov    rcx,QWORD PTR [rbx+r9*8]
   14001789b:	and    BYTE PTR [rcx+r8*1+0x38],0x80
   1400178a1:	test   r11d,r11d
   1400178a4:	jne    0x1400178ad
   1400178a6:	mov    eax,0x8000
   1400178ab:	jmp    0x1400178bc
   1400178ad:	neg    r10d
   1400178b0:	sbb    eax,eax
   1400178b2:	and    eax,0xc000
   1400178b7:	add    eax,0x4000
   1400178bc:	mov    rbx,QWORD PTR [rsp+0x8]
   1400178c1:	ret    
   1400178c2:	int3   
   1400178c3:	int3   
   1400178c4:	sub    rsp,0x28
   1400178c8:	test   rcx,rcx
   1400178cb:	jne    0x1400178e4
   1400178cd:	call   0x14000bdf0
   1400178d2:	mov    DWORD PTR [rax],0x16
   1400178d8:	call   0x14000d04c
   1400178dd:	mov    eax,0x16
   1400178e2:	jmp    0x1400178ee
   1400178e4:	mov    eax,DWORD PTR [rip+0xe17a]        # 0x140025a64
   1400178ea:	mov    DWORD PTR [rcx],eax
   1400178ec:	xor    eax,eax
   1400178ee:	add    rsp,0x28
   1400178f2:	ret    
   1400178f3:	int3   
   1400178f4:	mov    rax,rsp
   1400178f7:	push   rbx
   1400178f8:	push   rsi
   1400178f9:	push   rdi
   1400178fa:	push   r12
   1400178fc:	push   r13
   1400178fe:	push   r14
   140017900:	push   r15
   140017902:	sub    rsp,0x50
   140017906:	xor    r14d,r14d
   140017909:	mov    r13d,r14d
   14001790c:	mov    esi,r14d
   14001790f:	mov    DWORD PTR [rax+0x8],r14d
   140017913:	mov    DWORD PTR [rax+0x10],r14d
   140017917:	mov    DWORD PTR [rax+0x18],r14d
   14001791b:	lea    ecx,[r14+0x7]
   14001791f:	call   0x14000cb58
   140017924:	nop
   140017925:	call   0x140018408
   14001792a:	mov    r12,rax
   14001792d:	lea    rcx,[rsp+0x90]
   140017935:	call   0x1400183c0
   14001793a:	test   eax,eax
   14001793c:	jne    0x140017d4d
   140017942:	lea    rcx,[rsp+0x98]
   14001794a:	call   0x140018360
   14001794f:	test   eax,eax
   140017951:	jne    0x140017d39
   140017957:	lea    rcx,[rsp+0xa0]
   14001795f:	call   0x140018390
   140017964:	test   eax,eax
   140017966:	jne    0x140017d25
   14001796c:	call   0x140019408
   140017971:	mov    ebx,eax
   140017973:	mov    DWORD PTR [rip+0xe0d2],r14d        # 0x140025a4c
   14001797a:	or     r15d,0xffffffff
   14001797e:	mov    DWORD PTR [rip+0xcb9b],r15d        # 0x140024520
   140017985:	mov    DWORD PTR [rip+0xcb84],r15d        # 0x140024510
   14001798c:	lea    rcx,[rip+0x8645]        # 0x14001ffd8
   140017993:	call   0x140009d00
   140017998:	mov    rdi,rax
   14001799b:	mov    QWORD PTR [rsp+0x40],rax
   1400179a0:	test   rax,rax
   1400179a3:	je     0x140017a3a
   1400179a9:	cmp    BYTE PTR [rax],r14b
   1400179ac:	je     0x140017a3a
   1400179b2:	mov    rcx,QWORD PTR [rip+0xe097]        # 0x140025a50
   1400179b9:	test   rcx,rcx
   1400179bc:	je     0x1400179e2
   1400179be:	mov    rdx,rcx
   1400179c1:	mov    rcx,rax
   1400179c4:	call   0x14000a880
   1400179c9:	test   eax,eax
   1400179cb:	je     0x140017b89
   1400179d1:	mov    rcx,QWORD PTR [rip+0xe078]        # 0x140025a50
   1400179d8:	test   rcx,rcx
   1400179db:	je     0x1400179e2
   1400179dd:	call   0x14000b490
   1400179e2:	mov    rcx,rdi
   1400179e5:	call   0x140009fd0
   1400179ea:	lea    rcx,[rax+0x1]
   1400179ee:	call   0x140010b50
   1400179f3:	mov    QWORD PTR [rip+0xe056],rax        # 0x140025a50
   1400179fa:	test   rax,rax
   1400179fd:	je     0x140017b89
   140017a03:	mov    rcx,rdi
   140017a06:	call   0x140009fd0
   140017a0b:	mov    r8,rdi
   140017a0e:	lea    rdx,[rax+0x1]
   140017a12:	mov    rcx,QWORD PTR [rip+0xe037]        # 0x140025a50
   140017a19:	call   0x14000eae0
   140017a1e:	test   eax,eax
   140017a20:	je     0x140017b8e
   140017a26:	mov    QWORD PTR [rsp+0x20],r14
   140017a2b:	xor    r9d,r9d
   140017a2e:	xor    r8d,r8d
   140017a31:	xor    edx,edx
   140017a33:	xor    ecx,ecx
   140017a35:	call   0x14000cfa8
   140017a3a:	mov    rcx,QWORD PTR [rip+0xe00f]        # 0x140025a50
   140017a41:	test   rcx,rcx
   140017a44:	je     0x140017a52
   140017a46:	call   0x14000b490
   140017a4b:	mov    QWORD PTR [rip+0xdffe],r14        # 0x140025a50
   140017a52:	lea    rcx,[rip+0xdf47]        # 0x1400259a0
   140017a59:	call   QWORD PTR [rip+0x28c1]        # 0x14001a320
   140017a5f:	cmp    eax,0xffffffff
   140017a62:	je     0x140017b89
   140017a68:	mov    DWORD PTR [rip+0xdfda],0x1        # 0x140025a4c
   140017a72:	mov    ecx,DWORD PTR [rip+0xdf28]        # 0x1400259a0
   140017a78:	imul   ecx,ecx,0x3c
   140017a7b:	mov    DWORD PTR [rsp+0x90],ecx
   140017a82:	mov    edx,DWORD PTR [rip+0xdf6c]        # 0x1400259f4
   140017a88:	cmp    WORD PTR [rip+0xdf56],r14w        # 0x1400259e6
   140017a90:	je     0x140017aa0
   140017a92:	mov    eax,edx
   140017a94:	imul   eax,eax,0x3c
   140017a97:	add    ecx,eax
   140017a99:	mov    DWORD PTR [rsp+0x90],ecx
   140017aa0:	cmp    WORD PTR [rip+0xdf92],r14w        # 0x140025a3a
   140017aa8:	je     0x140017acd
   140017aaa:	mov    eax,DWORD PTR [rip+0xdf98]        # 0x140025a48
   140017ab0:	test   eax,eax
   140017ab2:	je     0x140017acd
   140017ab4:	mov    DWORD PTR [rsp+0x98],0x1
   140017abf:	sub    eax,edx
   140017ac1:	imul   eax,eax,0x3c
   140017ac4:	mov    DWORD PTR [rsp+0xa0],eax
   140017acb:	jmp    0x140017add
   140017acd:	mov    DWORD PTR [rsp+0x98],r14d
   140017ad5:	mov    DWORD PTR [rsp+0xa0],r14d
   140017add:	lea    rax,[rsp+0xa8]
   140017ae5:	mov    QWORD PTR [rsp+0x38],rax
   140017aea:	mov    QWORD PTR [rsp+0x30],r14
   140017aef:	mov    esi,0x3f
   140017af4:	mov    DWORD PTR [rsp+0x28],esi
   140017af8:	mov    rax,QWORD PTR [r12]
   140017afc:	mov    QWORD PTR [rsp+0x20],rax
   140017b01:	mov    r9d,r15d
   140017b04:	lea    r8,[rip+0xde99]        # 0x1400259a4
   140017b0b:	xor    edx,edx
   140017b0d:	mov    ecx,ebx
   140017b0f:	call   QWORD PTR [rip+0x26f3]        # 0x14001a208
   140017b15:	test   eax,eax
   140017b17:	je     0x140017b2d
   140017b19:	cmp    DWORD PTR [rsp+0xa8],r14d
   140017b21:	jne    0x140017b2d
   140017b23:	mov    rax,QWORD PTR [r12]
   140017b27:	mov    BYTE PTR [rax+0x3f],r14b
   140017b2b:	jmp    0x140017b34
   140017b2d:	mov    rax,QWORD PTR [r12]
   140017b31:	mov    BYTE PTR [rax],r14b
   140017b34:	lea    rax,[rsp+0xa8]
   140017b3c:	mov    QWORD PTR [rsp+0x38],rax
   140017b41:	mov    QWORD PTR [rsp+0x30],r14
   140017b46:	mov    DWORD PTR [rsp+0x28],esi
   140017b4a:	mov    rax,QWORD PTR [r12+0x8]
   140017b4f:	mov    QWORD PTR [rsp+0x20],rax
   140017b54:	mov    r9d,r15d
   140017b57:	lea    r8,[rip+0xde9a]        # 0x1400259f8
   140017b5e:	xor    edx,edx
   140017b60:	mov    ecx,ebx
   140017b62:	call   QWORD PTR [rip+0x26a0]        # 0x14001a208
   140017b68:	test   eax,eax
   140017b6a:	je     0x140017b81
   140017b6c:	cmp    DWORD PTR [rsp+0xa8],r14d
   140017b74:	jne    0x140017b81
   140017b76:	mov    rax,QWORD PTR [r12+0x8]
   140017b7b:	mov    BYTE PTR [rax+0x3f],r14b
   140017b7f:	jmp    0x140017b89
   140017b81:	mov    rax,QWORD PTR [r12+0x8]
   140017b86:	mov    BYTE PTR [rax],r14b
   140017b89:	mov    esi,0x1
   140017b8e:	mov    ebx,DWORD PTR [rsp+0x90]
   140017b95:	call   0x140018400
   140017b9a:	mov    DWORD PTR [rax],ebx
   140017b9c:	mov    ebx,DWORD PTR [rsp+0x98]
   140017ba3:	call   0x1400183f0
   140017ba8:	mov    DWORD PTR [rax],ebx
   140017baa:	mov    ebx,DWORD PTR [rsp+0xa0]
   140017bb1:	call   0x1400183f8
   140017bb6:	mov    DWORD PTR [rax],ebx
   140017bb8:	mov    ecx,0x7
   140017bbd:	call   0x14000ca58
   140017bc2:	test   esi,esi
   140017bc4:	jne    0x140017d62
   140017bca:	lea    r15d,[rsi+0x3]
   140017bce:	mov    r9d,r15d
   140017bd1:	mov    r8,rdi
   140017bd4:	lea    edx,[rsi+0x40]
   140017bd7:	mov    rcx,QWORD PTR [r12]
   140017bdb:	call   0x140013790
   140017be0:	test   eax,eax
   140017be2:	jne    0x140017d10
   140017be8:	add    rdi,r15
   140017beb:	cmp    BYTE PTR [rdi],0x2d
   140017bee:	jne    0x140017bf7
   140017bf0:	lea    r13d,[rsi+0x1]
   140017bf4:	inc    rdi
   140017bf7:	mov    rcx,rdi
   140017bfa:	call   0x140019798
   140017bff:	mov    r11d,eax
   140017c02:	imul   r11d,r11d,0xe10
   140017c09:	mov    DWORD PTR [rsp+0x90],r11d
   140017c11:	mov    bl,0x30
   140017c13:	mov    sil,0x39
   140017c16:	mov    al,BYTE PTR [rdi]
   140017c18:	cmp    al,0x2b
   140017c1a:	je     0x140017d08
   140017c20:	cmp    al,bl
   140017c22:	jl     0x140017c2d
   140017c24:	cmp    al,sil
   140017c27:	jle    0x140017d08
   140017c2d:	cmp    BYTE PTR [rdi],0x3a
   140017c30:	jne    0x140017c96
   140017c32:	inc    rdi
   140017c35:	mov    rcx,rdi
   140017c38:	call   0x140019798
   140017c3d:	imul   eax,eax,0x3c
   140017c40:	mov    r11d,DWORD PTR [rsp+0x90]
   140017c48:	add    r11d,eax
   140017c4b:	mov    DWORD PTR [rsp+0x90],r11d
   140017c53:	jmp    0x140017c5d
   140017c55:	cmp    al,sil
   140017c58:	jg     0x140017c63
   140017c5a:	inc    rdi
   140017c5d:	mov    al,BYTE PTR [rdi]
   140017c5f:	cmp    al,bl
   140017c61:	jge    0x140017c55
   140017c63:	cmp    BYTE PTR [rdi],0x3a
   140017c66:	jne    0x140017c96
   140017c68:	inc    rdi
   140017c6b:	mov    rcx,rdi
   140017c6e:	call   0x140019798
   140017c73:	mov    r11d,DWORD PTR [rsp+0x90]
   140017c7b:	add    r11d,eax
   140017c7e:	mov    DWORD PTR [rsp+0x90],r11d
   140017c86:	jmp    0x140017c90
   140017c88:	cmp    al,sil
   140017c8b:	jg     0x140017c96
   140017c8d:	inc    rdi
   140017c90:	mov    al,BYTE PTR [rdi]
   140017c92:	cmp    al,bl
   140017c94:	jge    0x140017c88
   140017c96:	test   r13d,r13d
   140017c99:	je     0x140017ca6
   140017c9b:	neg    r11d
   140017c9e:	mov    DWORD PTR [rsp+0x90],r11d
   140017ca6:	movsx  eax,BYTE PTR [rdi]
   140017ca9:	mov    DWORD PTR [rsp+0x98],eax
   140017cb0:	test   eax,eax
   140017cb2:	je     0x140017ce2
   140017cb4:	mov    r9,r15
   140017cb7:	mov    r8,rdi
   140017cba:	mov    edx,0x40
   140017cbf:	mov    rcx,QWORD PTR [r12+0x8]
   140017cc4:	call   0x140013790
   140017cc9:	test   eax,eax
   140017ccb:	je     0x140017cea
   140017ccd:	mov    QWORD PTR [rsp+0x20],r14
   140017cd2:	xor    r9d,r9d
   140017cd5:	xor    r8d,r8d
   140017cd8:	xor    edx,edx
   140017cda:	xor    ecx,ecx
   140017cdc:	call   0x14000cfa8
   140017ce1:	int3   
   140017ce2:	mov    rax,QWORD PTR [r12+0x8]
   140017ce7:	mov    BYTE PTR [rax],r14b
   140017cea:	mov    ebx,DWORD PTR [rsp+0x90]
   140017cf1:	call   0x140018400
   140017cf6:	mov    DWORD PTR [rax],ebx
   140017cf8:	mov    ebx,DWORD PTR [rsp+0x98]
   140017cff:	call   0x1400183f0
   140017d04:	mov    DWORD PTR [rax],ebx
   140017d06:	jmp    0x140017d62
   140017d08:	inc    rdi
   140017d0b:	jmp    0x140017c16
   140017d10:	mov    QWORD PTR [rsp+0x20],r14
   140017d15:	xor    r9d,r9d
   140017d18:	xor    r8d,r8d
   140017d1b:	xor    edx,edx
   140017d1d:	xor    ecx,ecx
   140017d1f:	call   0x14000cfa8
   140017d24:	nop
   140017d25:	mov    QWORD PTR [rsp+0x20],r14
   140017d2a:	xor    r9d,r9d
   140017d2d:	xor    r8d,r8d
   140017d30:	xor    edx,edx
   140017d32:	xor    ecx,ecx
   140017d34:	call   0x14000cfa8
   140017d39:	mov    QWORD PTR [rsp+0x20],r14
   140017d3e:	xor    r9d,r9d
   140017d41:	xor    r8d,r8d
   140017d44:	xor    edx,edx
   140017d46:	xor    ecx,ecx
   140017d48:	call   0x14000cfa8
   140017d4d:	mov    QWORD PTR [rsp+0x20],r14
   140017d52:	xor    r9d,r9d
   140017d55:	xor    r8d,r8d
   140017d58:	xor    edx,edx
   140017d5a:	xor    ecx,ecx
   140017d5c:	call   0x14000cfa8
   140017d61:	nop
   140017d62:	add    rsp,0x50
   140017d66:	pop    r15
   140017d68:	pop    r14
   140017d6a:	pop    r13
   140017d6c:	pop    r12
   140017d6e:	pop    rdi
   140017d6f:	pop    rsi
   140017d70:	pop    rbx
   140017d71:	ret    
   140017d72:	int3   
   140017d73:	int3   
   140017d74:	mov    QWORD PTR [rsp+0x10],rbx
   140017d79:	mov    QWORD PTR [rsp+0x18],rbp
   140017d7e:	push   rsi
   140017d7f:	push   rdi
   140017d80:	push   r12
   140017d82:	sub    rsp,0x30
   140017d86:	and    DWORD PTR [rsp+0x50],0x0
   140017d8b:	mov    ebx,r8d
   140017d8e:	mov    r12d,ecx
   140017d91:	cmp    edx,0x1
   140017d94:	jne    0x140017f05
   140017d9a:	mov    r11d,ebx
   140017d9d:	and    r11d,0x80000003
   140017da4:	jge    0x140017db0
   140017da6:	dec    r11d
   140017da9:	or     r11d,0xfffffffc
   140017dad:	inc    r11d
   140017db0:	mov    esi,0x51eb851f
   140017db5:	test   r11d,r11d
   140017db8:	jne    0x140017dcf
   140017dba:	mov    eax,esi
   140017dbc:	imul   ebx
   140017dbe:	sar    edx,0x5
   140017dc1:	mov    eax,edx
   140017dc3:	shr    eax,0x1f
   140017dc6:	add    edx,eax
   140017dc8:	imul   edx,edx,0x64
   140017dcb:	cmp    ebx,edx
   140017dcd:	jne    0x140017e02
   140017dcf:	lea    ecx,[r8+0x76c]
   140017dd6:	mov    eax,esi
   140017dd8:	imul   ecx
   140017dda:	sar    edx,0x7
   140017ddd:	mov    eax,edx
   140017ddf:	shr    eax,0x1f
   140017de2:	add    edx,eax
   140017de4:	imul   edx,edx,0x190
   140017dea:	cmp    ecx,edx
   140017dec:	je     0x140017e02
   140017dee:	lea    rdi,[rip+0xfffffffffffe820b]        # 0x140000000
   140017df5:	movsxd rbp,r9d
   140017df8:	mov    r10d,DWORD PTR [rdi+rbp*4+0x24604]
   140017e00:	jmp    0x140017e14
   140017e02:	lea    rdi,[rip+0xfffffffffffe81f7]        # 0x140000000
   140017e09:	movsxd rbp,r9d
   140017e0c:	mov    r10d,DWORD PTR [rdi+rbp*4+0x245cc]
   140017e14:	dec    r8d
   140017e17:	lea    ecx,[rbx+0x12b]
   140017e1d:	mov    eax,esi
   140017e1f:	inc    r10d
   140017e22:	imul   ecx
   140017e24:	mov    r9d,edx
   140017e27:	sar    r9d,0x7
   140017e2b:	mov    eax,r9d
   140017e2e:	shr    eax,0x1f
   140017e31:	add    r9d,eax
   140017e34:	mov    eax,esi
   140017e36:	imul   r8d
   140017e39:	sar    edx,0x5
   140017e3c:	mov    eax,edx
   140017e3e:	shr    eax,0x1f
   140017e41:	add    edx,eax
   140017e43:	mov    eax,r8d
   140017e46:	sub    r9d,edx
   140017e49:	cdq    
   140017e4a:	and    edx,0x3
   140017e4d:	add    eax,edx
   140017e4f:	sar    eax,0x2
   140017e52:	lea    ecx,[r10+rax*1]
   140017e56:	mov    eax,ebx
   140017e58:	add    ecx,r9d
   140017e5b:	imul   eax,eax,0x16d
   140017e61:	lea    r8d,[rax+rcx*1-0x63db]
   140017e69:	mov    ecx,DWORD PTR [rsp+0x70]
   140017e6d:	mov    eax,0x92492493
   140017e72:	imul   r8d
   140017e75:	add    edx,r8d
   140017e78:	sar    edx,0x2
   140017e7b:	mov    eax,edx
   140017e7d:	shr    eax,0x1f
   140017e80:	add    edx,eax
   140017e82:	mov    eax,ecx
   140017e84:	imul   edx,edx,0x7
   140017e87:	imul   eax,eax,0x7
   140017e8a:	sub    r8d,edx
   140017e8d:	mov    edx,DWORD PTR [rsp+0x78]
   140017e91:	sub    eax,r8d
   140017e94:	add    eax,edx
   140017e96:	cmp    r8d,edx
   140017e99:	jg     0x140017ea2
   140017e9b:	lea    r10d,[r10+rax*1-0x7]
   140017ea0:	jmp    0x140017ea5
   140017ea2:	add    r10d,eax
   140017ea5:	cmp    ecx,0x5
   140017ea8:	jne    0x140017f80
   140017eae:	test   r11d,r11d
   140017eb1:	jne    0x140017ec8
   140017eb3:	mov    eax,esi
   140017eb5:	imul   ebx
   140017eb7:	sar    edx,0x5
   140017eba:	mov    ecx,edx
   140017ebc:	shr    ecx,0x1f
   140017ebf:	add    edx,ecx
   140017ec1:	imul   edx,edx,0x64
   140017ec4:	cmp    ebx,edx
   140017ec6:	jne    0x140017eef
   140017ec8:	lea    ecx,[rbx+0x76c]
   140017ece:	mov    eax,esi
   140017ed0:	imul   ecx
   140017ed2:	sar    edx,0x7
   140017ed5:	mov    eax,edx
   140017ed7:	shr    eax,0x1f
   140017eda:	add    edx,eax
   140017edc:	imul   edx,edx,0x190
   140017ee2:	cmp    ecx,edx
   140017ee4:	je     0x140017eef
   140017ee6:	mov    eax,DWORD PTR [rdi+rbp*4+0x24608]
   140017eed:	jmp    0x140017ef6
   140017eef:	mov    eax,DWORD PTR [rdi+rbp*4+0x245d0]
   140017ef6:	cmp    r10d,eax
   140017ef9:	jle    0x140017f80
   140017eff:	sub    r10d,0x7
   140017f03:	jmp    0x140017f80
   140017f05:	mov    eax,ebx
   140017f07:	and    eax,0x80000003
   140017f0c:	jge    0x140017f15
   140017f0e:	dec    eax
   140017f10:	or     eax,0xfffffffc
   140017f13:	inc    eax
   140017f15:	mov    esi,0x51eb851f
   140017f1a:	test   eax,eax
   140017f1c:	jne    0x140017f33
   140017f1e:	mov    eax,esi
   140017f20:	imul   ebx
   140017f22:	sar    edx,0x5
   140017f25:	mov    eax,edx
   140017f27:	shr    eax,0x1f
   140017f2a:	add    edx,eax
   140017f2c:	imul   edx,edx,0x64
   140017f2f:	cmp    ebx,edx
   140017f31:	jne    0x140017f66
   140017f33:	lea    ecx,[r8+0x76c]
   140017f3a:	mov    eax,esi
   140017f3c:	imul   ecx
   140017f3e:	sar    edx,0x7
   140017f41:	mov    eax,edx
   140017f43:	shr    eax,0x1f
   140017f46:	add    edx,eax
   140017f48:	imul   edx,edx,0x190
   140017f4e:	cmp    ecx,edx
   140017f50:	je     0x140017f66
   140017f52:	lea    rdi,[rip+0xfffffffffffe80a7]        # 0x140000000
   140017f59:	movsxd rax,r9d
   140017f5c:	mov    r10d,DWORD PTR [rdi+rax*4+0x24604]
   140017f64:	jmp    0x140017f78
   140017f66:	lea    rdi,[rip+0xfffffffffffe8093]        # 0x140000000
   140017f6d:	movsxd rax,r9d
   140017f70:	mov    r10d,DWORD PTR [rdi+rax*4+0x245cc]
   140017f78:	add    r10d,DWORD PTR [rsp+0x80]
   140017f80:	mov    eax,DWORD PTR [rsp+0x88]
   140017f87:	imul   eax,eax,0x3c
   140017f8a:	add    eax,DWORD PTR [rsp+0x90]
   140017f91:	imul   eax,eax,0x3c
   140017f94:	add    eax,DWORD PTR [rsp+0x98]
   140017f9b:	imul   eax,eax,0x3e8
   140017fa1:	add    eax,DWORD PTR [rsp+0xa0]
   140017fa8:	cmp    r12d,0x1
   140017fac:	jne    0x140017fd4
   140017fae:	mov    DWORD PTR [rip+0xc55f],r10d        # 0x140024514
   140017fb5:	mov    DWORD PTR [rip+0xc55d],eax        # 0x140024518
   140017fbb:	mov    DWORD PTR [rip+0xc54f],ebx        # 0x140024510
   140017fc1:	mov    rbx,QWORD PTR [rsp+0x58]
   140017fc6:	mov    rbp,QWORD PTR [rsp+0x60]
   140017fcb:	add    rsp,0x30
   140017fcf:	pop    r12
   140017fd1:	pop    rdi
   140017fd2:	pop    rsi
   140017fd3:	ret    
   140017fd4:	lea    rcx,[rsp+0x50]
   140017fd9:	mov    DWORD PTR [rip+0xc544],r10d        # 0x140024524
   140017fe0:	mov    DWORD PTR [rip+0xc542],eax        # 0x140024528
   140017fe6:	call   0x140018390
   140017feb:	test   eax,eax
   140017fed:	jne    0x140018032
   140017fef:	mov    ecx,DWORD PTR [rip+0xc533]        # 0x140024528
   140017ff5:	mov    eax,DWORD PTR [rsp+0x50]
   140017ff9:	imul   eax,eax,0x3e8
   140017fff:	add    ecx,eax
   140018001:	mov    eax,0x5265c00
   140018006:	mov    DWORD PTR [rip+0xc51c],ecx        # 0x140024528
   14001800c:	jns    0x140018018
   14001800e:	add    ecx,eax
   140018010:	dec    DWORD PTR [rip+0xc50e]        # 0x140024524
   140018016:	jmp    0x140018024
   140018018:	cmp    ecx,eax
   14001801a:	jl     0x14001802a
   14001801c:	sub    ecx,eax
   14001801e:	inc    DWORD PTR [rip+0xc500]        # 0x140024524
   140018024:	mov    DWORD PTR [rip+0xc4fe],ecx        # 0x140024528
   14001802a:	mov    DWORD PTR [rip+0xc4f0],ebx        # 0x140024520
   140018030:	jmp    0x140017fc1
   140018032:	and    QWORD PTR [rsp+0x20],0x0
   140018038:	xor    r9d,r9d
   14001803b:	xor    r8d,r8d
   14001803e:	xor    edx,edx
   140018040:	xor    ecx,ecx
   140018042:	call   0x14000cfa8
   140018047:	int3   
   140018048:	mov    rax,rsp
   14001804b:	mov    QWORD PTR [rax+0x8],rbx
   14001804f:	mov    QWORD PTR [rax+0x18],rbp
   140018053:	mov    QWORD PTR [rax+0x20],rsi
   140018057:	push   rdi
   140018058:	push   r12
   14001805a:	push   r13
   14001805c:	sub    rsp,0x60
   140018060:	mov    rdi,rcx
   140018063:	lea    rcx,[rax+0x10]
   140018067:	xor    ebx,ebx
   140018069:	mov    DWORD PTR [rax+0x10],ebx
   14001806c:	call   0x140018360
   140018071:	test   eax,eax
   140018073:	jne    0x1400182dc
   140018079:	cmp    DWORD PTR [rsp+0x88],ebx
   140018080:	jne    0x14001809e
   140018082:	xor    eax,eax
   140018084:	lea    r11,[rsp+0x60]
   140018089:	mov    rbx,QWORD PTR [r11+0x20]
   14001808d:	mov    rbp,QWORD PTR [r11+0x30]
   140018091:	mov    rsi,QWORD PTR [r11+0x38]
   140018095:	mov    rsp,r11
   140018098:	pop    r13
   14001809a:	pop    r12
   14001809c:	pop    rdi
   14001809d:	ret    
   14001809e:	mov    esi,DWORD PTR [rdi+0x14]
   1400180a1:	mov    r13d,0x1
   1400180a7:	cmp    esi,DWORD PTR [rip+0xc463]        # 0x140024510
   1400180ad:	jne    0x1400180bb
   1400180af:	cmp    esi,DWORD PTR [rip+0xc46b]        # 0x140024520
   1400180b5:	je     0x14001825c
   1400180bb:	cmp    DWORD PTR [rip+0xd98b],ebx        # 0x140025a4c
   1400180c1:	je     0x1400181d9
   1400180c7:	cmp    WORD PTR [rip+0xd96a],bx        # 0x140025a38
   1400180ce:	movzx  ecx,WORD PTR [rip+0xd96f]        # 0x140025a44
   1400180d5:	movzx  eax,WORD PTR [rip+0xd96a]        # 0x140025a46
   1400180dc:	movzx  edx,WORD PTR [rip+0xd95f]        # 0x140025a42
   1400180e3:	movzx  r9d,WORD PTR [rip+0xd94f]        # 0x140025a3a
   1400180eb:	mov    DWORD PTR [rsp+0x50],eax
   1400180ef:	mov    DWORD PTR [rsp+0x48],ecx
   1400180f3:	mov    DWORD PTR [rsp+0x40],edx
   1400180f7:	mov    ecx,r13d
   1400180fa:	jne    0x14001812c
   1400180fc:	movzx  r10d,WORD PTR [rip+0xd93c]        # 0x140025a40
   140018104:	movzx  r11d,WORD PTR [rip+0xd930]        # 0x140025a3c
   14001810c:	movzx  r8d,WORD PTR [rip+0xd92a]        # 0x140025a3e
   140018114:	mov    DWORD PTR [rsp+0x38],r10d
   140018119:	mov    DWORD PTR [rsp+0x30],ebx
   14001811d:	mov    DWORD PTR [rsp+0x28],r11d
   140018122:	mov    DWORD PTR [rsp+0x20],r8d
   140018127:	mov    edx,r13d
   14001812a:	jmp    0x140018150
   14001812c:	movzx  r8d,WORD PTR [rip+0xd90c]        # 0x140025a40
   140018134:	movzx  r10d,WORD PTR [rip+0xd902]        # 0x140025a3e
   14001813c:	xor    edx,edx
   14001813e:	mov    DWORD PTR [rsp+0x38],r8d
   140018143:	mov    DWORD PTR [rsp+0x30],r10d
   140018148:	mov    DWORD PTR [rsp+0x28],ebx
   14001814c:	mov    DWORD PTR [rsp+0x20],ebx
   140018150:	mov    r8d,esi
   140018153:	call   0x140017d74
   140018158:	movzx  ecx,WORD PTR [rip+0xd891]        # 0x1400259f0
   14001815f:	movzx  r8d,WORD PTR [rip+0xd885]        # 0x1400259ec
   140018167:	movzx  eax,WORD PTR [rip+0xd884]        # 0x1400259f2
   14001816e:	movzx  edx,WORD PTR [rip+0xd879]        # 0x1400259ee
   140018175:	movzx  r9d,WORD PTR [rip+0xd869]        # 0x1400259e6
   14001817d:	mov    DWORD PTR [rsp+0x50],eax
   140018181:	mov    DWORD PTR [rsp+0x48],ecx
   140018185:	mov    DWORD PTR [rsp+0x40],edx
   140018189:	xor    ecx,ecx
   14001818b:	cmp    WORD PTR [rip+0xd852],bx        # 0x1400259e4
   140018192:	mov    DWORD PTR [rsp+0x38],r8d
   140018197:	mov    r8d,DWORD PTR [rdi+0x14]
   14001819b:	jne    0x1400181c0
   14001819d:	movzx  r10d,WORD PTR [rip+0xd843]        # 0x1400259e8
   1400181a5:	movzx  r11d,WORD PTR [rip+0xd83d]        # 0x1400259ea
   1400181ad:	mov    DWORD PTR [rsp+0x30],ebx
   1400181b1:	mov    DWORD PTR [rsp+0x28],r10d
   1400181b6:	mov    DWORD PTR [rsp+0x20],r11d
   1400181bb:	jmp    0x140018254
   1400181c0:	movzx  r10d,WORD PTR [rip+0xd822]        # 0x1400259ea
   1400181c8:	xor    edx,edx
   1400181ca:	mov    DWORD PTR [rsp+0x30],r10d
   1400181cf:	mov    DWORD PTR [rsp+0x28],ebx
   1400181d3:	mov    DWORD PTR [rsp+0x20],ebx
   1400181d7:	jmp    0x140018257
   1400181d9:	mov    eax,0x2
   1400181de:	mov    r12d,r13d
   1400181e1:	lea    ebp,[rax+0x9]
   1400181e4:	lea    r9d,[rax+0x1]
   1400181e8:	cmp    esi,0x6b
   1400181eb:	jge    0x1400181fc
   1400181ed:	lea    r9d,[rax+0x2]
   1400181f1:	mov    eax,r13d
   1400181f4:	lea    ebp,[r9+0x6]
   1400181f8:	lea    r12d,[r9+0x1]
   1400181fc:	mov    DWORD PTR [rsp+0x50],ebx
   140018200:	mov    DWORD PTR [rsp+0x48],ebx
   140018204:	mov    DWORD PTR [rsp+0x40],ebx
   140018208:	mov    DWORD PTR [rsp+0x38],0x2
   140018210:	mov    DWORD PTR [rsp+0x30],ebx
   140018214:	mov    r8d,esi
   140018217:	mov    edx,r13d
   14001821a:	mov    ecx,r13d
   14001821d:	mov    DWORD PTR [rsp+0x28],ebx
   140018221:	mov    DWORD PTR [rsp+0x20],eax
   140018225:	call   0x140017d74
   14001822a:	mov    r8d,DWORD PTR [rdi+0x14]
   14001822e:	mov    DWORD PTR [rsp+0x50],ebx
   140018232:	mov    DWORD PTR [rsp+0x48],ebx
   140018236:	mov    DWORD PTR [rsp+0x40],ebx
   14001823a:	mov    DWORD PTR [rsp+0x38],0x2
   140018242:	mov    DWORD PTR [rsp+0x30],ebx
   140018246:	mov    DWORD PTR [rsp+0x28],ebx
   14001824a:	mov    DWORD PTR [rsp+0x20],r12d
   14001824f:	mov    r9d,ebp
   140018252:	xor    ecx,ecx
   140018254:	mov    edx,r13d
   140018257:	call   0x140017d74
   14001825c:	mov    edx,DWORD PTR [rip+0xc2b2]        # 0x140024514
   140018262:	mov    r8d,DWORD PTR [rip+0xc2bb]        # 0x140024524
   140018269:	mov    ecx,DWORD PTR [rdi+0x1c]
   14001826c:	cmp    edx,r8d
   14001826f:	jge    0x140018293
   140018271:	cmp    ecx,edx
   140018273:	jl     0x140018082
   140018279:	cmp    ecx,r8d
   14001827c:	jg     0x140018082
   140018282:	cmp    ecx,edx
   140018284:	jle    0x1400182a9
   140018286:	cmp    ecx,r8d
   140018289:	jge    0x1400182a9
   14001828b:	mov    eax,r13d
   14001828e:	jmp    0x140018084
   140018293:	cmp    ecx,r8d
   140018296:	jl     0x14001828b
   140018298:	cmp    ecx,edx
   14001829a:	jg     0x14001828b
   14001829c:	cmp    ecx,r8d
   14001829f:	jle    0x1400182a9
   1400182a1:	cmp    ecx,edx
   1400182a3:	jl     0x140018082
   1400182a9:	mov    eax,DWORD PTR [rdi+0x8]
   1400182ac:	imul   eax,eax,0x3c
   1400182af:	add    eax,DWORD PTR [rdi+0x4]
   1400182b2:	imul   eax,eax,0x3c
   1400182b5:	add    eax,DWORD PTR [rdi]
   1400182b7:	imul   eax,eax,0x3e8
   1400182bd:	cmp    ecx,edx
   1400182bf:	jne    0x1400182d1
   1400182c1:	cmp    eax,DWORD PTR [rip+0xc251]        # 0x140024518
   1400182c7:	setge  bl
   1400182ca:	mov    eax,ebx
   1400182cc:	jmp    0x140018084
   1400182d1:	cmp    eax,DWORD PTR [rip+0xc251]        # 0x140024528
   1400182d7:	setl   bl
   1400182da:	jmp    0x1400182ca
   1400182dc:	xor    r9d,r9d
   1400182df:	xor    r8d,r8d
   1400182e2:	xor    edx,edx
   1400182e4:	xor    ecx,ecx
   1400182e6:	mov    QWORD PTR [rsp+0x20],rbx
   1400182eb:	call   0x14000cfa8
   1400182f0:	int3   
   1400182f1:	int3   
   1400182f2:	int3   
   1400182f3:	int3   
   1400182f4:	sub    rsp,0x28
   1400182f8:	cmp    DWORD PTR [rip+0xd759],0x0        # 0x140025a58
   1400182ff:	jne    0x14001832a
   140018301:	mov    ecx,0x6
   140018306:	call   0x14000cb58
   14001830b:	nop
   14001830c:	cmp    DWORD PTR [rip+0xd745],0x0        # 0x140025a58
   140018313:	jne    0x140018320
   140018315:	call   0x1400178f4
   14001831a:	inc    DWORD PTR [rip+0xd738]        # 0x140025a58
   140018320:	mov    ecx,0x6
   140018325:	call   0x14000ca58
   14001832a:	add    rsp,0x28
   14001832e:	ret    
   14001832f:	int3   
   140018330:	rex push rbx
   140018332:	sub    rsp,0x20
   140018336:	mov    rbx,rcx
   140018339:	mov    ecx,0x6
   14001833e:	call   0x14000cb58
   140018343:	nop
   140018344:	mov    rcx,rbx
   140018347:	call   0x140018048
   14001834c:	mov    ebx,eax
   14001834e:	mov    ecx,0x6
   140018353:	call   0x14000ca58
   140018358:	mov    eax,ebx
   14001835a:	add    rsp,0x20
   14001835e:	pop    rbx
   14001835f:	ret    
   140018360:	sub    rsp,0x28
   140018364:	test   rcx,rcx
   140018367:	jne    0x140018380
   140018369:	call   0x14000bdf0
   14001836e:	mov    DWORD PTR [rax],0x16
   140018374:	call   0x14000d04c
   140018379:	mov    eax,0x16
   14001837e:	jmp    0x14001838a
   140018380:	mov    eax,DWORD PTR [rip+0xc1ae]        # 0x140024534
   140018386:	mov    DWORD PTR [rcx],eax
   140018388:	xor    eax,eax
   14001838a:	add    rsp,0x28
   14001838e:	ret    
   14001838f:	int3   
   140018390:	sub    rsp,0x28
   140018394:	test   rcx,rcx
   140018397:	jne    0x1400183b0
   140018399:	call   0x14000bdf0
   14001839e:	mov    DWORD PTR [rax],0x16
   1400183a4:	call   0x14000d04c
   1400183a9:	mov    eax,0x16
   1400183ae:	jmp    0x1400183ba
   1400183b0:	mov    eax,DWORD PTR [rip+0xc182]        # 0x140024538
   1400183b6:	mov    DWORD PTR [rcx],eax
   1400183b8:	xor    eax,eax
   1400183ba:	add    rsp,0x28
   1400183be:	ret    
   1400183bf:	int3   
   1400183c0:	sub    rsp,0x28
   1400183c4:	test   rcx,rcx
   1400183c7:	jne    0x1400183e0
   1400183c9:	call   0x14000bdf0
   1400183ce:	mov    DWORD PTR [rax],0x16
   1400183d4:	call   0x14000d04c
   1400183d9:	mov    eax,0x16
   1400183de:	jmp    0x1400183ea
   1400183e0:	mov    eax,DWORD PTR [rip+0xc14a]        # 0x140024530
   1400183e6:	mov    DWORD PTR [rcx],eax
   1400183e8:	xor    eax,eax
   1400183ea:	add    rsp,0x28
   1400183ee:	ret    
   1400183ef:	int3   
   1400183f0:	lea    rax,[rip+0xc13d]        # 0x140024534
   1400183f7:	ret    
   1400183f8:	lea    rax,[rip+0xc139]        # 0x140024538
   1400183ff:	ret    
   140018400:	lea    rax,[rip+0xc129]        # 0x140024530
   140018407:	ret    
   140018408:	lea    rax,[rip+0xc1b1]        # 0x1400245c0
   14001840f:	ret    
   140018410:	rex push rbp
   140018412:	push   r12
   140018414:	push   r13
   140018416:	push   r14
   140018418:	push   r15
   14001841a:	sub    rsp,0x50
   14001841e:	lea    rbp,[rsp+0x40]
   140018423:	mov    QWORD PTR [rbp+0x40],rbx
   140018427:	mov    QWORD PTR [rbp+0x48],rsi
   14001842b:	mov    QWORD PTR [rbp+0x50],rdi
   14001842f:	mov    rax,QWORD PTR [rip+0xac8a]        # 0x1400230c0
   140018436:	xor    rax,rbp
   140018439:	mov    QWORD PTR [rbp+0x8],rax
   14001843d:	mov    ebx,DWORD PTR [rbp+0x60]
   140018440:	xor    edi,edi
   140018442:	mov    r14,r9
   140018445:	mov    r15d,r8d
   140018448:	mov    DWORD PTR [rbp+0x0],edx
   14001844b:	test   ebx,ebx
   14001844d:	jle    0x140018479
   14001844f:	mov    r10d,ebx
   140018452:	mov    rax,r9
   140018455:	dec    r10d
   140018458:	cmp    BYTE PTR [rax],dil
   14001845b:	je     0x140018469
   14001845d:	inc    rax
   140018460:	test   r10d,r10d
   140018463:	jne    0x140018455
   140018465:	or     r10d,0xffffffff
   140018469:	mov    eax,ebx
   14001846b:	sub    eax,r10d
   14001846e:	dec    eax
   140018470:	cmp    eax,ebx
   140018472:	lea    ebx,[rax+0x1]
   140018475:	jl     0x140018479
   140018477:	mov    ebx,eax
   140018479:	mov    r12d,DWORD PTR [rbp+0x78]
   14001847d:	mov    esi,edi
   14001847f:	test   r12d,r12d
   140018482:	jne    0x14001848b
   140018484:	mov    rax,QWORD PTR [rcx]
   140018487:	mov    r12d,DWORD PTR [rax+0x4]
   14001848b:	neg    DWORD PTR [rbp+0x80]
   140018491:	mov    r9d,ebx
   140018494:	mov    r8,r14
   140018497:	sbb    edx,edx
   140018499:	mov    ecx,r12d
   14001849c:	mov    DWORD PTR [rsp+0x28],edi
   1400184a0:	and    edx,0x8
   1400184a3:	mov    QWORD PTR [rsp+0x20],rdi
   1400184a8:	inc    edx
   1400184aa:	call   QWORD PTR [rip+0x1c88]        # 0x14001a138
   1400184b0:	movsxd r13,eax
   1400184b3:	test   eax,eax
   1400184b5:	jne    0x1400184be
   1400184b7:	xor    eax,eax
   1400184b9:	jmp    0x1400186b4
   1400184be:	movabs r8,0xffffffffffffff0
   1400184c8:	test   eax,eax
   1400184ca:	jle    0x14001852a
   1400184cc:	xor    edx,edx
   1400184ce:	lea    rax,[rdx-0x20]
   1400184d2:	div    r13
   1400184d5:	cmp    rax,0x2
   1400184d9:	jb     0x14001852a
   1400184db:	lea    rcx,[r13+r13*1+0x10]
   1400184e0:	cmp    rcx,0x400
   1400184e7:	ja     0x140018513
   1400184e9:	lea    rax,[rcx+0xf]
   1400184ed:	cmp    rax,rcx
   1400184f0:	ja     0x1400184f5
   1400184f2:	mov    rax,r8
   1400184f5:	and    rax,0xfffffffffffffff0
   1400184f9:	call   0x140016f30
   1400184fe:	sub    rsp,rax
   140018501:	lea    rdi,[rsp+0x40]
   140018506:	test   rdi,rdi
   140018509:	je     0x1400184b7
   14001850b:	mov    DWORD PTR [rdi],0xcccc
   140018511:	jmp    0x140018526
   140018513:	call   0x14000b304
   140018518:	mov    rdi,rax
   14001851b:	test   rax,rax
   14001851e:	je     0x14001852a
   140018520:	mov    DWORD PTR [rax],0xdddd
   140018526:	add    rdi,0x10
   14001852a:	test   rdi,rdi
   14001852d:	je     0x1400184b7
   14001852f:	mov    r9d,ebx
   140018532:	mov    r8,r14
   140018535:	mov    edx,0x1
   14001853a:	mov    ecx,r12d
   14001853d:	mov    DWORD PTR [rsp+0x28],r13d
   140018542:	mov    QWORD PTR [rsp+0x20],rdi
   140018547:	call   QWORD PTR [rip+0x1beb]        # 0x14001a138
   14001854d:	test   eax,eax
   14001854f:	je     0x1400186a1
   140018555:	mov    r14d,DWORD PTR [rbp+0x0]
   140018559:	and    DWORD PTR [rsp+0x28],esi
   14001855d:	and    QWORD PTR [rsp+0x20],rsi
   140018562:	mov    ecx,r14d
   140018565:	mov    r9d,r13d
   140018568:	mov    r8,rdi
   14001856b:	mov    edx,r15d
   14001856e:	call   QWORD PTR [rip+0x1db4]        # 0x14001a328
   140018574:	movsxd rsi,eax
   140018577:	test   eax,eax
   140018579:	je     0x1400186a1
   14001857f:	mov    r8d,0x400
   140018585:	test   r8d,r15d
   140018588:	je     0x1400185c1
   14001858a:	mov    ecx,DWORD PTR [rbp+0x70]
   14001858d:	test   ecx,ecx
   14001858f:	je     0x1400186a1
   140018595:	cmp    esi,ecx
   140018597:	jg     0x1400186a1
   14001859d:	mov    rax,QWORD PTR [rbp+0x68]
   1400185a1:	mov    DWORD PTR [rsp+0x28],ecx
   1400185a5:	mov    r9d,r13d
   1400185a8:	mov    r8,rdi
   1400185ab:	mov    edx,r15d
   1400185ae:	mov    ecx,r14d
   1400185b1:	mov    QWORD PTR [rsp+0x20],rax
   1400185b6:	call   QWORD PTR [rip+0x1d6c]        # 0x14001a328
   1400185bc:	jmp    0x1400186a1
   1400185c1:	test   eax,eax
   1400185c3:	jle    0x14001862c
   1400185c5:	xor    edx,edx
   1400185c7:	lea    rax,[rdx-0x20]
   1400185cb:	div    rsi
   1400185ce:	cmp    rax,0x2
   1400185d2:	jb     0x14001862c
   1400185d4:	lea    rcx,[rsi+rsi*1+0x10]
   1400185d9:	cmp    rcx,r8
   1400185dc:	ja     0x140018613
   1400185de:	lea    rax,[rcx+0xf]
   1400185e2:	cmp    rax,rcx
   1400185e5:	ja     0x1400185f1
   1400185e7:	movabs rax,0xffffffffffffff0
   1400185f1:	and    rax,0xfffffffffffffff0
   1400185f5:	call   0x140016f30
   1400185fa:	sub    rsp,rax
   1400185fd:	lea    rbx,[rsp+0x40]
   140018602:	test   rbx,rbx
   140018605:	je     0x1400186a1
   14001860b:	mov    DWORD PTR [rbx],0xcccc
   140018611:	jmp    0x140018626
   140018613:	call   0x14000b304
   140018618:	mov    rbx,rax
   14001861b:	test   rax,rax
   14001861e:	je     0x14001862e
   140018620:	mov    DWORD PTR [rax],0xdddd
   140018626:	add    rbx,0x10
   14001862a:	jmp    0x14001862e
   14001862c:	xor    ebx,ebx
   14001862e:	test   rbx,rbx
   140018631:	je     0x1400186a1
   140018633:	mov    r9d,r13d
   140018636:	mov    r8,rdi
   140018639:	mov    edx,r15d
   14001863c:	mov    ecx,r14d
   14001863f:	mov    DWORD PTR [rsp+0x28],esi
   140018643:	mov    QWORD PTR [rsp+0x20],rbx
   140018648:	call   QWORD PTR [rip+0x1cda]        # 0x14001a328
   14001864e:	xor    ecx,ecx
   140018650:	test   eax,eax
   140018652:	je     0x140018690
   140018654:	mov    eax,DWORD PTR [rbp+0x70]
   140018657:	xor    edx,edx
   140018659:	mov    QWORD PTR [rsp+0x38],rcx
   14001865e:	mov    r9d,esi
   140018661:	mov    r8,rbx
   140018664:	mov    QWORD PTR [rsp+0x30],rcx
   140018669:	test   eax,eax
   14001866b:	jne    0x140018678
   14001866d:	mov    DWORD PTR [rsp+0x28],ecx
   140018671:	mov    QWORD PTR [rsp+0x20],rcx
   140018676:	jmp    0x140018685
   140018678:	mov    DWORD PTR [rsp+0x28],eax
   14001867c:	mov    rax,QWORD PTR [rbp+0x68]
   140018680:	mov    QWORD PTR [rsp+0x20],rax
   140018685:	mov    ecx,r12d
   140018688:	call   QWORD PTR [rip+0x1b7a]        # 0x14001a208
   14001868e:	mov    esi,eax
   140018690:	lea    rcx,[rbx-0x10]
   140018694:	cmp    DWORD PTR [rcx],0xdddd
   14001869a:	jne    0x1400186a1
   14001869c:	call   0x14000b490
   1400186a1:	lea    rcx,[rdi-0x10]
   1400186a5:	cmp    DWORD PTR [rcx],0xdddd
   1400186ab:	jne    0x1400186b2
   1400186ad:	call   0x14000b490
   1400186b2:	mov    eax,esi
   1400186b4:	mov    rcx,QWORD PTR [rbp+0x8]
   1400186b8:	xor    rcx,rbp
   1400186bb:	call   0x14000a850
   1400186c0:	mov    rbx,QWORD PTR [rbp+0x40]
   1400186c4:	mov    rsi,QWORD PTR [rbp+0x48]
   1400186c8:	mov    rdi,QWORD PTR [rbp+0x50]
   1400186cc:	lea    rsp,[rbp+0x10]
   1400186d0:	pop    r15
   1400186d2:	pop    r14
   1400186d4:	pop    r13
   1400186d6:	pop    r12
   1400186d8:	pop    rbp
   1400186d9:	ret    
   1400186da:	int3   
   1400186db:	int3   
   1400186dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400186e1:	mov    QWORD PTR [rsp+0x10],rsi
   1400186e6:	push   rdi
   1400186e7:	sub    rsp,0x70
   1400186eb:	mov    esi,edx
   1400186ed:	mov    rdx,rcx
   1400186f0:	lea    rcx,[rsp+0x50]
   1400186f5:	mov    rbx,r9
   1400186f8:	mov    edi,r8d
   1400186fb:	call   0x14000c724
   140018700:	mov    eax,DWORD PTR [rsp+0xb8]
   140018707:	mov    r11d,DWORD PTR [rsp+0xc0]
   14001870f:	lea    rcx,[rsp+0x50]
   140018714:	mov    DWORD PTR [rsp+0x40],r11d
   140018719:	mov    DWORD PTR [rsp+0x38],eax
   14001871d:	mov    eax,DWORD PTR [rsp+0xb0]
   140018724:	mov    DWORD PTR [rsp+0x30],eax
   140018728:	mov    rax,QWORD PTR [rsp+0xa8]
   140018730:	mov    r9,rbx
   140018733:	mov    QWORD PTR [rsp+0x28],rax
   140018738:	mov    eax,DWORD PTR [rsp+0xa0]
   14001873f:	mov    r8d,edi
   140018742:	mov    edx,esi
   140018744:	mov    DWORD PTR [rsp+0x20],eax
   140018748:	call   0x140018410
   14001874d:	cmp    BYTE PTR [rsp+0x68],0x0
   140018752:	je     0x140018760
   140018754:	mov    rcx,QWORD PTR [rsp+0x60]
   140018759:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140018760:	lea    r11,[rsp+0x70]
   140018765:	mov    rbx,QWORD PTR [r11+0x10]
   140018769:	mov    rsi,QWORD PTR [r11+0x18]
   14001876d:	mov    rsp,r11
   140018770:	pop    rdi
   140018771:	ret    
   140018772:	int3   
   140018773:	int3   
   140018774:	mov    QWORD PTR [rsp+0x8],rbx
   140018779:	mov    QWORD PTR [rsp+0x10],rbp
   14001877e:	mov    QWORD PTR [rsp+0x18],rsi
   140018783:	push   rdi
   140018784:	sub    rsp,0x50
   140018788:	xor    ebp,ebp
   14001878a:	mov    rsi,r8
   14001878d:	mov    rbx,rdx
   140018790:	mov    rdi,rcx
   140018793:	test   r8,r8
   140018796:	jne    0x14001879f
   140018798:	xor    eax,eax
   14001879a:	jmp    0x140018887
   14001879f:	test   rcx,rcx
   1400187a2:	jne    0x1400187be
   1400187a4:	call   0x14000bdf0
   1400187a9:	mov    DWORD PTR [rax],0x16
   1400187af:	call   0x14000d04c
   1400187b4:	mov    eax,0x7fffffff
   1400187b9:	jmp    0x140018887
   1400187be:	test   rdx,rdx
   1400187c1:	je     0x1400187a4
   1400187c3:	cmp    r8,0x7fffffff
   1400187ca:	ja     0x1400187a4
   1400187cc:	lea    rcx,[rsp+0x30]
   1400187d1:	mov    rdx,r9
   1400187d4:	call   0x14000c724
   1400187d9:	mov    r11,QWORD PTR [rsp+0x30]
   1400187de:	mov    ecx,DWORD PTR [r11+0x10]
   1400187e2:	test   ecx,ecx
   1400187e4:	jne    0x14001882d
   1400187e6:	sub    rdi,rbx
   1400187e9:	movzx  eax,WORD PTR [rdi+rbx*1]
   1400187ed:	cmp    ax,0x41
   1400187f1:	jb     0x1400187fd
   1400187f3:	cmp    ax,0x5a
   1400187f7:	ja     0x1400187fd
   1400187f9:	add    ax,0x20
   1400187fd:	movzx  ecx,WORD PTR [rbx]
   140018800:	cmp    cx,0x41
   140018804:	jb     0x140018810
   140018806:	cmp    cx,0x5a
   14001880a:	ja     0x140018810
   14001880c:	add    cx,0x20
   140018810:	add    rbx,0x2
   140018814:	dec    rsi
   140018817:	je     0x140018823
   140018819:	test   ax,ax
   14001881c:	je     0x140018823
   14001881e:	cmp    ax,cx
   140018821:	je     0x1400187e9
   140018823:	movzx  ecx,cx
   140018826:	movzx  eax,ax
   140018829:	sub    eax,ecx
   14001882b:	jmp    0x140018874
   14001882d:	mov    r9d,esi
   140018830:	mov    r8,rdi
   140018833:	mov    edx,0x1001
   140018838:	mov    DWORD PTR [rsp+0x28],esi
   14001883c:	mov    QWORD PTR [rsp+0x20],rbx
   140018841:	call   0x1400197a4
   140018846:	test   eax,eax
   140018848:	jne    0x140018871
   14001884a:	call   0x14000bdf0
   14001884f:	mov    DWORD PTR [rax],0x16
   140018855:	cmp    BYTE PTR [rsp+0x48],bpl
   14001885a:	je     0x1400187b4
   140018860:	mov    rax,QWORD PTR [rsp+0x40]
   140018865:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001886c:	jmp    0x1400187b4
   140018871:	add    eax,0xfffffffe
   140018874:	cmp    BYTE PTR [rsp+0x48],bpl
   140018879:	je     0x140018887
   14001887b:	mov    rcx,QWORD PTR [rsp+0x40]
   140018880:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140018887:	mov    rbx,QWORD PTR [rsp+0x60]
   14001888c:	mov    rbp,QWORD PTR [rsp+0x68]
   140018891:	mov    rsi,QWORD PTR [rsp+0x70]
   140018896:	add    rsp,0x50
   14001889a:	pop    rdi
   14001889b:	ret    
   14001889c:	sub    rsp,0x28
   1400188a0:	xor    r9d,r9d
   1400188a3:	mov    r10,rcx
   1400188a6:	cmp    DWORD PTR [rip+0xd0bb],r9d        # 0x140025968
   1400188ad:	jne    0x140018927
   1400188af:	test   rcx,rcx
   1400188b2:	jne    0x1400188ce
   1400188b4:	call   0x14000bdf0
   1400188b9:	mov    DWORD PTR [rax],0x16
   1400188bf:	call   0x14000d04c
   1400188c4:	mov    eax,0x7fffffff
   1400188c9:	add    rsp,0x28
   1400188cd:	ret    
   1400188ce:	test   rdx,rdx
   1400188d1:	je     0x1400188b4
   1400188d3:	cmp    r8,0x7fffffff
   1400188da:	ja     0x1400188b4
   1400188dc:	sub    r10,rdx
   1400188df:	movzx  eax,WORD PTR [r10+rdx*1]
   1400188e4:	cmp    ax,0x41
   1400188e8:	jb     0x1400188f4
   1400188ea:	cmp    ax,0x5a
   1400188ee:	ja     0x1400188f4
   1400188f0:	add    ax,0x20
   1400188f4:	movzx  ecx,WORD PTR [rdx]
   1400188f7:	cmp    cx,0x41
   1400188fb:	jb     0x140018907
   1400188fd:	cmp    cx,0x5a
   140018901:	ja     0x140018907
   140018903:	add    cx,0x20
   140018907:	add    rdx,0x2
   14001890b:	dec    r8
   14001890e:	je     0x14001891a
   140018910:	test   ax,ax
   140018913:	je     0x14001891a
   140018915:	cmp    ax,cx
   140018918:	je     0x1400188df
   14001891a:	movzx  ecx,cx
   14001891d:	movzx  eax,ax
   140018920:	sub    eax,ecx
   140018922:	add    rsp,0x28
   140018926:	ret    
   140018927:	add    rsp,0x28
   14001892b:	jmp    0x140018774
   140018930:	mov    QWORD PTR [rsp+0x8],rbx
   140018935:	mov    QWORD PTR [rsp+0x10],rsi
   14001893a:	push   rdi
   14001893b:	sub    rsp,0x30
   14001893f:	mov    rbx,rcx
   140018942:	test   rcx,rcx
   140018945:	je     0x140018993
   140018947:	call   0x140013ce4
   14001894c:	mov    edx,0x2
   140018951:	lea    rcx,[rax+0x1]
   140018955:	mov    rsi,rax
   140018958:	call   0x14000eb44
   14001895d:	mov    rdi,rax
   140018960:	test   rax,rax
   140018963:	je     0x140018993
   140018965:	lea    rdx,[rsi+0x1]
   140018969:	mov    r8,rbx
   14001896c:	mov    rcx,rax
   14001896f:	call   0x14001522c
   140018974:	test   eax,eax
   140018976:	jne    0x14001897d
   140018978:	mov    rax,rdi
   14001897b:	jmp    0x140018995
   14001897d:	and    QWORD PTR [rsp+0x20],0x0
   140018983:	xor    r9d,r9d
   140018986:	xor    r8d,r8d
   140018989:	xor    edx,edx
   14001898b:	xor    ecx,ecx
   14001898d:	call   0x14000cfa8
   140018992:	int3   
   140018993:	xor    eax,eax
   140018995:	mov    rbx,QWORD PTR [rsp+0x40]
   14001899a:	mov    rsi,QWORD PTR [rsp+0x48]
   14001899f:	add    rsp,0x30
   1400189a3:	pop    rdi
   1400189a4:	ret    
   1400189a5:	int3   
   1400189a6:	int3   
   1400189a7:	int3   
   1400189a8:	mov    QWORD PTR [rsp+0x10],rbx
   1400189ad:	mov    QWORD PTR [rsp+0x18],rbp
   1400189b2:	push   rdi
   1400189b3:	sub    rsp,0x30
   1400189b7:	and    QWORD PTR [rsp+0x40],0x0
   1400189bd:	mov    rbx,QWORD PTR [rip+0xbfd4]        # 0x140024998
   1400189c4:	mov    rax,QWORD PTR [rbx]
   1400189c7:	test   rax,rax
   1400189ca:	je     0x140018a41
   1400189cc:	or     ebp,0xffffffff
   1400189cf:	and    DWORD PTR [rsp+0x28],0x0
   1400189d4:	and    QWORD PTR [rsp+0x20],0x0
   1400189da:	mov    r9d,ebp
   1400189dd:	mov    r8,rax
   1400189e0:	xor    edx,edx
   1400189e2:	xor    ecx,ecx
   1400189e4:	call   QWORD PTR [rip+0x174e]        # 0x14001a138
   1400189ea:	movsxd rdi,eax
   1400189ed:	test   eax,eax
   1400189ef:	je     0x140018a69
   1400189f1:	mov    rcx,rdi
   1400189f4:	mov    edx,0x2
   1400189f9:	call   0x140010bd0
   1400189fe:	mov    QWORD PTR [rsp+0x40],rax
   140018a03:	test   rax,rax
   140018a06:	je     0x140018a69
   140018a08:	mov    r8,QWORD PTR [rbx]
   140018a0b:	mov    r9d,ebp
   140018a0e:	xor    edx,edx
   140018a10:	xor    ecx,ecx
   140018a12:	mov    DWORD PTR [rsp+0x28],edi
   140018a16:	mov    QWORD PTR [rsp+0x20],rax
   140018a1b:	call   QWORD PTR [rip+0x1717]        # 0x14001a138
   140018a21:	test   eax,eax
   140018a23:	je     0x140018a5f
   140018a25:	lea    rcx,[rsp+0x40]
   140018a2a:	xor    edx,edx
   140018a2c:	call   0x140013928
   140018a31:	test   eax,eax
   140018a33:	js     0x140018a53
   140018a35:	add    rbx,0x8
   140018a39:	mov    rax,QWORD PTR [rbx]
   140018a3c:	test   rax,rax
   140018a3f:	jne    0x1400189cf
   140018a41:	xor    eax,eax
   140018a43:	mov    rbx,QWORD PTR [rsp+0x48]
   140018a48:	mov    rbp,QWORD PTR [rsp+0x50]
   140018a4d:	add    rsp,0x30
   140018a51:	pop    rdi
   140018a52:	ret    
   140018a53:	mov    rcx,QWORD PTR [rsp+0x40]
   140018a58:	test   rcx,rcx
   140018a5b:	je     0x140018a69
   140018a5d:	jmp    0x140018a64
   140018a5f:	mov    rcx,QWORD PTR [rsp+0x40]
   140018a64:	call   0x14000b490
   140018a69:	mov    eax,ebp
   140018a6b:	jmp    0x140018a43
   140018a6d:	int3   
   140018a6e:	int3   
   140018a6f:	int3   
   140018a70:	mov    rax,rsp
   140018a73:	mov    QWORD PTR [rax+0x8],rbx
   140018a77:	mov    QWORD PTR [rax+0x10],rbp
   140018a7b:	mov    QWORD PTR [rax+0x18],rsi
   140018a7f:	mov    QWORD PTR [rax+0x20],rdi
   140018a83:	push   r12
   140018a85:	sub    rsp,0x30
   140018a89:	mov    rbx,QWORD PTR [rip+0xbf58]        # 0x1400249e8
   140018a90:	xor    r12d,r12d
   140018a93:	mov    edi,r12d
   140018a96:	test   rbx,rbx
   140018a99:	jne    0x140018ab8
   140018a9b:	or     eax,0xffffffff
   140018a9e:	jmp    0x140018b5d
   140018aa3:	cmp    ax,0x3d
   140018aa7:	je     0x140018aab
   140018aa9:	inc    edi
   140018aab:	mov    rcx,rbx
   140018aae:	call   0x140013ce4
   140018ab3:	lea    rbx,[rbx+rax*2+0x2]
   140018ab8:	movzx  eax,WORD PTR [rbx]
   140018abb:	test   ax,ax
   140018abe:	jne    0x140018aa3
   140018ac0:	lea    eax,[rdi+0x1]
   140018ac3:	mov    edx,0x8
   140018ac8:	movsxd rcx,eax
   140018acb:	call   0x140010bd0
   140018ad0:	mov    rdi,rax
   140018ad3:	mov    QWORD PTR [rip+0xbece],rax        # 0x1400249a8
   140018ada:	test   rax,rax
   140018add:	je     0x140018a9b
   140018adf:	mov    rbx,QWORD PTR [rip+0xbf02]        # 0x1400249e8
   140018ae6:	cmp    WORD PTR [rbx],r12w
   140018aea:	je     0x140018b3f
   140018aec:	mov    rcx,rbx
   140018aef:	call   0x140013ce4
   140018af4:	cmp    WORD PTR [rbx],0x3d
   140018af8:	lea    esi,[rax+0x1]
   140018afb:	je     0x140018b2b
   140018afd:	movsxd rbp,esi
   140018b00:	mov    edx,0x2
   140018b05:	mov    rcx,rbp
   140018b08:	call   0x140010bd0
   140018b0d:	mov    QWORD PTR [rdi],rax
   140018b10:	test   rax,rax
   140018b13:	je     0x140018b8d
   140018b15:	mov    r8,rbx
   140018b18:	mov    rdx,rbp
   140018b1b:	mov    rcx,rax
   140018b1e:	call   0x14001522c
   140018b23:	test   eax,eax
   140018b25:	jne    0x140018b78
   140018b27:	add    rdi,0x8
   140018b2b:	movsxd rax,esi
   140018b2e:	lea    rbx,[rbx+rax*2]
   140018b32:	cmp    WORD PTR [rbx],r12w
   140018b36:	jne    0x140018aec
   140018b38:	mov    rbx,QWORD PTR [rip+0xbea9]        # 0x1400249e8
   140018b3f:	mov    rcx,rbx
   140018b42:	call   0x14000b490
   140018b47:	mov    QWORD PTR [rip+0xbe9a],r12        # 0x1400249e8
   140018b4e:	mov    QWORD PTR [rdi],r12
   140018b51:	mov    DWORD PTR [rip+0xe155],0x1        # 0x140026cb0
   140018b5b:	xor    eax,eax
   140018b5d:	mov    rbx,QWORD PTR [rsp+0x40]
   140018b62:	mov    rbp,QWORD PTR [rsp+0x48]
   140018b67:	mov    rsi,QWORD PTR [rsp+0x50]
   140018b6c:	mov    rdi,QWORD PTR [rsp+0x58]
   140018b71:	add    rsp,0x30
   140018b75:	pop    r12
   140018b77:	ret    
   140018b78:	xor    r9d,r9d
   140018b7b:	xor    r8d,r8d
   140018b7e:	xor    edx,edx
   140018b80:	xor    ecx,ecx
   140018b82:	mov    QWORD PTR [rsp+0x20],r12
   140018b87:	call   0x14000cfa8
   140018b8c:	int3   
   140018b8d:	mov    rcx,QWORD PTR [rip+0xbe14]        # 0x1400249a8
   140018b94:	call   0x14000b490
   140018b99:	mov    QWORD PTR [rip+0xbe08],r12        # 0x1400249a8
   140018ba0:	jmp    0x140018a9b
   140018ba5:	int3   
   140018ba6:	int3   
   140018ba7:	int3   
   140018ba8:	mov    QWORD PTR [rsp+0x8],rbx
   140018bad:	mov    QWORD PTR [rsp+0x10],rbp
   140018bb2:	mov    QWORD PTR [rsp+0x18],rsi
   140018bb7:	push   rdi
   140018bb8:	sub    rsp,0x20
   140018bbc:	call   QWORD PTR [rip+0x1656]        # 0x14001a218
   140018bc2:	xor    ebx,ebx
   140018bc4:	mov    rdi,rax
   140018bc7:	test   rax,rax
   140018bca:	je     0x140018c18
   140018bcc:	cmp    WORD PTR [rdi],bx
   140018bcf:	je     0x140018be3
   140018bd1:	add    rax,0x2
   140018bd5:	cmp    WORD PTR [rax],bx
   140018bd8:	jne    0x140018bd1
   140018bda:	add    rax,0x2
   140018bde:	cmp    WORD PTR [rax],bx
   140018be1:	jne    0x140018bd1
   140018be3:	sub    eax,edi
   140018be5:	add    eax,0x2
   140018be8:	movsxd rbp,eax
   140018beb:	mov    rcx,rbp
   140018bee:	call   0x140010b50
   140018bf3:	mov    rsi,rax
   140018bf6:	test   rax,rax
   140018bf9:	je     0x140018c0c
   140018bfb:	mov    r8,rbp
   140018bfe:	mov    rdx,rdi
   140018c01:	mov    rcx,rax
   140018c04:	call   0x14000a170
   140018c09:	mov    rbx,rsi
   140018c0c:	mov    rcx,rdi
   140018c0f:	call   QWORD PTR [rip+0x15fb]        # 0x14001a210
   140018c15:	mov    rax,rbx
   140018c18:	mov    rbx,QWORD PTR [rsp+0x30]
   140018c1d:	mov    rbp,QWORD PTR [rsp+0x38]
   140018c22:	mov    rsi,QWORD PTR [rsp+0x40]
   140018c27:	add    rsp,0x20
   140018c2b:	pop    rdi
   140018c2c:	ret    
   140018c2d:	int3   
   140018c2e:	int3   
   140018c2f:	int3   
   140018c30:	jmp    0x140018c3b
   140018c32:	cmp    ax,dx
   140018c35:	je     0x140018c48
   140018c37:	add    rcx,0x2
   140018c3b:	movzx  eax,WORD PTR [rcx]
   140018c3e:	test   ax,ax
   140018c41:	jne    0x140018c32
   140018c43:	cmp    ax,dx
   140018c46:	jne    0x140018c4c
   140018c48:	mov    rax,rcx
   140018c4b:	ret    
   140018c4c:	xor    eax,eax
   140018c4e:	ret    
   140018c4f:	int3   
   140018c50:	mov    QWORD PTR [rsp+0x8],rbx
   140018c55:	mov    QWORD PTR [rsp+0x10],rsi
   140018c5a:	push   rdi
   140018c5b:	sub    rsp,0x30
   140018c5f:	mov    rbx,rcx
   140018c62:	test   rcx,rcx
   140018c65:	je     0x140018cae
   140018c67:	call   0x140009fd0
   140018c6c:	mov    rsi,rax
   140018c6f:	lea    rcx,[rax+0x1]
   140018c73:	call   0x14000b304
   140018c78:	mov    rdi,rax
   140018c7b:	test   rax,rax
   140018c7e:	je     0x140018cae
   140018c80:	lea    rdx,[rsi+0x1]
   140018c84:	mov    r8,rbx
   140018c87:	mov    rcx,rax
   140018c8a:	call   0x14000eae0
   140018c8f:	test   eax,eax
   140018c91:	jne    0x140018c98
   140018c93:	mov    rax,rdi
   140018c96:	jmp    0x140018cb0
   140018c98:	and    QWORD PTR [rsp+0x20],0x0
   140018c9e:	xor    r9d,r9d
   140018ca1:	xor    r8d,r8d
   140018ca4:	xor    edx,edx
   140018ca6:	xor    ecx,ecx
   140018ca8:	call   0x14000cfa8
   140018cad:	int3   
   140018cae:	xor    eax,eax
   140018cb0:	mov    rbx,QWORD PTR [rsp+0x40]
   140018cb5:	mov    rsi,QWORD PTR [rsp+0x48]
   140018cba:	add    rsp,0x30
   140018cbe:	pop    rdi
   140018cbf:	ret    
   140018cc0:	rex push rbp
   140018cc2:	push   r12
   140018cc4:	push   r13
   140018cc6:	push   r14
   140018cc8:	push   r15
   140018cca:	sub    rsp,0x40
   140018cce:	lea    rbp,[rsp+0x30]
   140018cd3:	mov    QWORD PTR [rbp+0x40],rbx
   140018cd7:	mov    QWORD PTR [rbp+0x48],rsi
   140018cdb:	mov    QWORD PTR [rbp+0x50],rdi
   140018cdf:	mov    rax,QWORD PTR [rip+0xa3da]        # 0x1400230c0
   140018ce6:	xor    rax,rbp
   140018ce9:	mov    QWORD PTR [rbp+0x0],rax
   140018ced:	mov    esi,DWORD PTR [rbp+0x68]
   140018cf0:	xor    edi,edi
   140018cf2:	mov    r13d,r9d
   140018cf5:	mov    r14,r8
   140018cf8:	mov    r15d,edx
   140018cfb:	test   esi,esi
   140018cfd:	jne    0x140018d05
   140018cff:	mov    rax,QWORD PTR [rcx]
   140018d02:	mov    esi,DWORD PTR [rax+0x4]
   140018d05:	neg    DWORD PTR [rbp+0x70]
   140018d08:	mov    ecx,esi
   140018d0a:	mov    DWORD PTR [rsp+0x28],edi
   140018d0e:	sbb    edx,edx
   140018d10:	mov    QWORD PTR [rsp+0x20],rdi
   140018d15:	and    edx,0x8
   140018d18:	inc    edx
   140018d1a:	call   QWORD PTR [rip+0x1418]        # 0x14001a138
   140018d20:	movsxd r12,eax
   140018d23:	test   eax,eax
   140018d25:	jne    0x140018d2e
   140018d27:	xor    eax,eax
   140018d29:	jmp    0x140018df8
   140018d2e:	jle    0x140018d97
   140018d30:	movabs rax,0x7ffffffffffffff0
   140018d3a:	cmp    r12,rax
   140018d3d:	ja     0x140018d97
   140018d3f:	lea    rcx,[r12+r12*1+0x10]
   140018d44:	cmp    rcx,0x400
   140018d4b:	ja     0x140018d7e
   140018d4d:	lea    rax,[rcx+0xf]
   140018d51:	cmp    rax,rcx
   140018d54:	ja     0x140018d60
   140018d56:	movabs rax,0xffffffffffffff0
   140018d60:	and    rax,0xfffffffffffffff0
   140018d64:	call   0x140016f30
   140018d69:	sub    rsp,rax
   140018d6c:	lea    rbx,[rsp+0x30]
   140018d71:	test   rbx,rbx
   140018d74:	je     0x140018d27
   140018d76:	mov    DWORD PTR [rbx],0xcccc
   140018d7c:	jmp    0x140018d91
   140018d7e:	call   0x14000b304
   140018d83:	mov    rbx,rax
   140018d86:	test   rax,rax
   140018d89:	je     0x140018d9a
   140018d8b:	mov    DWORD PTR [rax],0xdddd
   140018d91:	add    rbx,0x10
   140018d95:	jmp    0x140018d9a
   140018d97:	mov    rbx,rdi
   140018d9a:	test   rbx,rbx
   140018d9d:	je     0x140018d27
   140018d9f:	mov    r8,r12
   140018da2:	xor    edx,edx
   140018da4:	mov    rcx,rbx
   140018da7:	add    r8,r8
   140018daa:	call   0x14000a560
   140018daf:	mov    r9d,r13d
   140018db2:	mov    r8,r14
   140018db5:	mov    edx,0x1
   140018dba:	mov    ecx,esi
   140018dbc:	mov    DWORD PTR [rsp+0x28],r12d
   140018dc1:	mov    QWORD PTR [rsp+0x20],rbx
   140018dc6:	call   QWORD PTR [rip+0x136c]        # 0x14001a138
   140018dcc:	test   eax,eax
   140018dce:	je     0x140018de5
   140018dd0:	mov    r9,QWORD PTR [rbp+0x60]
   140018dd4:	mov    r8d,eax
   140018dd7:	mov    rdx,rbx
   140018dda:	mov    ecx,r15d
   140018ddd:	call   QWORD PTR [rip+0x154d]        # 0x14001a330
   140018de3:	mov    edi,eax
   140018de5:	lea    rcx,[rbx-0x10]
   140018de9:	cmp    DWORD PTR [rcx],0xdddd
   140018def:	jne    0x140018df6
   140018df1:	call   0x14000b490
   140018df6:	mov    eax,edi
   140018df8:	mov    rcx,QWORD PTR [rbp+0x0]
   140018dfc:	xor    rcx,rbp
   140018dff:	call   0x14000a850
   140018e04:	mov    rbx,QWORD PTR [rbp+0x40]
   140018e08:	mov    rsi,QWORD PTR [rbp+0x48]
   140018e0c:	mov    rdi,QWORD PTR [rbp+0x50]
   140018e10:	lea    rsp,[rbp+0x10]
   140018e14:	pop    r15
   140018e16:	pop    r14
   140018e18:	pop    r13
   140018e1a:	pop    r12
   140018e1c:	pop    rbp
   140018e1d:	ret    
   140018e1e:	int3   
   140018e1f:	int3   
   140018e20:	mov    QWORD PTR [rsp+0x8],rbx
   140018e25:	mov    QWORD PTR [rsp+0x10],rsi
   140018e2a:	push   rdi
   140018e2b:	sub    rsp,0x60
   140018e2f:	mov    esi,edx
   140018e31:	mov    rdx,rcx
   140018e34:	lea    rcx,[rsp+0x40]
   140018e39:	mov    ebx,r9d
   140018e3c:	mov    rdi,r8
   140018e3f:	call   0x14000c724
   140018e44:	mov    r11d,DWORD PTR [rsp+0xa8]
   140018e4c:	mov    eax,DWORD PTR [rsp+0x98]
   140018e53:	lea    rcx,[rsp+0x40]
   140018e58:	mov    DWORD PTR [rsp+0x30],r11d
   140018e5d:	mov    DWORD PTR [rsp+0x28],eax
   140018e61:	mov    rax,QWORD PTR [rsp+0x90]
   140018e69:	mov    r9d,ebx
   140018e6c:	mov    r8,rdi
   140018e6f:	mov    edx,esi
   140018e71:	mov    QWORD PTR [rsp+0x20],rax
   140018e76:	call   0x140018cc0
   140018e7b:	cmp    BYTE PTR [rsp+0x58],0x0
   140018e80:	je     0x140018e8e
   140018e82:	mov    rcx,QWORD PTR [rsp+0x50]
   140018e87:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140018e8e:	mov    rbx,QWORD PTR [rsp+0x70]
   140018e93:	mov    rsi,QWORD PTR [rsp+0x78]
   140018e98:	add    rsp,0x60
   140018e9c:	pop    rdi
   140018e9d:	ret    
   140018e9e:	int3   
   140018e9f:	int3   
   140018ea0:	test   rcx,rcx
   140018ea3:	je     0x14001928d
   140018ea9:	push   rbx
   140018eaa:	sub    rsp,0x20
   140018eae:	mov    rbx,rcx
   140018eb1:	mov    rcx,QWORD PTR [rcx+0x8]
   140018eb5:	call   0x14000b490
   140018eba:	mov    rcx,QWORD PTR [rbx+0x10]
   140018ebe:	call   0x14000b490
   140018ec3:	mov    rcx,QWORD PTR [rbx+0x18]
   140018ec7:	call   0x14000b490
   140018ecc:	mov    rcx,QWORD PTR [rbx+0x20]
   140018ed0:	call   0x14000b490
   140018ed5:	mov    rcx,QWORD PTR [rbx+0x28]
   140018ed9:	call   0x14000b490
   140018ede:	mov    rcx,QWORD PTR [rbx+0x30]
   140018ee2:	call   0x14000b490
   140018ee7:	mov    rcx,QWORD PTR [rbx]
   140018eea:	call   0x14000b490
   140018eef:	mov    rcx,QWORD PTR [rbx+0x40]
   140018ef3:	call   0x14000b490
   140018ef8:	mov    rcx,QWORD PTR [rbx+0x48]
   140018efc:	call   0x14000b490
   140018f01:	mov    rcx,QWORD PTR [rbx+0x50]
   140018f05:	call   0x14000b490
   140018f0a:	mov    rcx,QWORD PTR [rbx+0x58]
   140018f0e:	call   0x14000b490
   140018f13:	mov    rcx,QWORD PTR [rbx+0x60]
   140018f17:	call   0x14000b490
   140018f1c:	mov    rcx,QWORD PTR [rbx+0x68]
   140018f20:	call   0x14000b490
   140018f25:	mov    rcx,QWORD PTR [rbx+0x38]
   140018f29:	call   0x14000b490
   140018f2e:	mov    rcx,QWORD PTR [rbx+0x70]
   140018f32:	call   0x14000b490
   140018f37:	mov    rcx,QWORD PTR [rbx+0x78]
   140018f3b:	call   0x14000b490
   140018f40:	mov    rcx,QWORD PTR [rbx+0x80]
   140018f47:	call   0x14000b490
   140018f4c:	mov    rcx,QWORD PTR [rbx+0x88]
   140018f53:	call   0x14000b490
   140018f58:	mov    rcx,QWORD PTR [rbx+0x90]
   140018f5f:	call   0x14000b490
   140018f64:	mov    rcx,QWORD PTR [rbx+0x98]
   140018f6b:	call   0x14000b490
   140018f70:	mov    rcx,QWORD PTR [rbx+0xa0]
   140018f77:	call   0x14000b490
   140018f7c:	mov    rcx,QWORD PTR [rbx+0xa8]
   140018f83:	call   0x14000b490
   140018f88:	mov    rcx,QWORD PTR [rbx+0xb0]
   140018f8f:	call   0x14000b490
   140018f94:	mov    rcx,QWORD PTR [rbx+0xb8]
   140018f9b:	call   0x14000b490
   140018fa0:	mov    rcx,QWORD PTR [rbx+0xc0]
   140018fa7:	call   0x14000b490
   140018fac:	mov    rcx,QWORD PTR [rbx+0xc8]
   140018fb3:	call   0x14000b490
   140018fb8:	mov    rcx,QWORD PTR [rbx+0xd0]
   140018fbf:	call   0x14000b490
   140018fc4:	mov    rcx,QWORD PTR [rbx+0xd8]
   140018fcb:	call   0x14000b490
   140018fd0:	mov    rcx,QWORD PTR [rbx+0xe0]
   140018fd7:	call   0x14000b490
   140018fdc:	mov    rcx,QWORD PTR [rbx+0xe8]
   140018fe3:	call   0x14000b490
   140018fe8:	mov    rcx,QWORD PTR [rbx+0xf0]
   140018fef:	call   0x14000b490
   140018ff4:	mov    rcx,QWORD PTR [rbx+0xf8]
   140018ffb:	call   0x14000b490
   140019000:	mov    rcx,QWORD PTR [rbx+0x100]
   140019007:	call   0x14000b490
   14001900c:	mov    rcx,QWORD PTR [rbx+0x108]
   140019013:	call   0x14000b490
   140019018:	mov    rcx,QWORD PTR [rbx+0x110]
   14001901f:	call   0x14000b490
   140019024:	mov    rcx,QWORD PTR [rbx+0x118]
   14001902b:	call   0x14000b490
   140019030:	mov    rcx,QWORD PTR [rbx+0x120]
   140019037:	call   0x14000b490
   14001903c:	mov    rcx,QWORD PTR [rbx+0x128]
   140019043:	call   0x14000b490
   140019048:	mov    rcx,QWORD PTR [rbx+0x130]
   14001904f:	call   0x14000b490
   140019054:	mov    rcx,QWORD PTR [rbx+0x138]
   14001905b:	call   0x14000b490
   140019060:	mov    rcx,QWORD PTR [rbx+0x140]
   140019067:	call   0x14000b490
   14001906c:	mov    rcx,QWORD PTR [rbx+0x148]
   140019073:	call   0x14000b490
   140019078:	mov    rcx,QWORD PTR [rbx+0x150]
   14001907f:	call   0x14000b490
   140019084:	mov    rcx,QWORD PTR [rbx+0x170]
   14001908b:	call   0x14000b490
   140019090:	mov    rcx,QWORD PTR [rbx+0x178]
   140019097:	call   0x14000b490
   14001909c:	mov    rcx,QWORD PTR [rbx+0x180]
   1400190a3:	call   0x14000b490
   1400190a8:	mov    rcx,QWORD PTR [rbx+0x188]
   1400190af:	call   0x14000b490
   1400190b4:	mov    rcx,QWORD PTR [rbx+0x190]
   1400190bb:	call   0x14000b490
   1400190c0:	mov    rcx,QWORD PTR [rbx+0x198]
   1400190c7:	call   0x14000b490
   1400190cc:	mov    rcx,QWORD PTR [rbx+0x168]
   1400190d3:	call   0x14000b490
   1400190d8:	mov    rcx,QWORD PTR [rbx+0x1a8]
   1400190df:	call   0x14000b490
   1400190e4:	mov    rcx,QWORD PTR [rbx+0x1b0]
   1400190eb:	call   0x14000b490
   1400190f0:	mov    rcx,QWORD PTR [rbx+0x1b8]
   1400190f7:	call   0x14000b490
   1400190fc:	mov    rcx,QWORD PTR [rbx+0x1c0]
   140019103:	call   0x14000b490
   140019108:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14001910f:	call   0x14000b490
   140019114:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14001911b:	call   0x14000b490
   140019120:	mov    rcx,QWORD PTR [rbx+0x1a0]
   140019127:	call   0x14000b490
   14001912c:	mov    rcx,QWORD PTR [rbx+0x1d8]
   140019133:	call   0x14000b490
   140019138:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14001913f:	call   0x14000b490
   140019144:	mov    rcx,QWORD PTR [rbx+0x1e8]
   14001914b:	call   0x14000b490
   140019150:	mov    rcx,QWORD PTR [rbx+0x1f0]
   140019157:	call   0x14000b490
   14001915c:	mov    rcx,QWORD PTR [rbx+0x1f8]
   140019163:	call   0x14000b490
   140019168:	mov    rcx,QWORD PTR [rbx+0x200]
   14001916f:	call   0x14000b490
   140019174:	mov    rcx,QWORD PTR [rbx+0x208]
   14001917b:	call   0x14000b490
   140019180:	mov    rcx,QWORD PTR [rbx+0x210]
   140019187:	call   0x14000b490
   14001918c:	mov    rcx,QWORD PTR [rbx+0x218]
   140019193:	call   0x14000b490
   140019198:	mov    rcx,QWORD PTR [rbx+0x220]
   14001919f:	call   0x14000b490
   1400191a4:	mov    rcx,QWORD PTR [rbx+0x228]
   1400191ab:	call   0x14000b490
   1400191b0:	mov    rcx,QWORD PTR [rbx+0x230]
   1400191b7:	call   0x14000b490
   1400191bc:	mov    rcx,QWORD PTR [rbx+0x238]
   1400191c3:	call   0x14000b490
   1400191c8:	mov    rcx,QWORD PTR [rbx+0x240]
   1400191cf:	call   0x14000b490
   1400191d4:	mov    rcx,QWORD PTR [rbx+0x248]
   1400191db:	call   0x14000b490
   1400191e0:	mov    rcx,QWORD PTR [rbx+0x250]
   1400191e7:	call   0x14000b490
   1400191ec:	mov    rcx,QWORD PTR [rbx+0x258]
   1400191f3:	call   0x14000b490
   1400191f8:	mov    rcx,QWORD PTR [rbx+0x260]
   1400191ff:	call   0x14000b490
   140019204:	mov    rcx,QWORD PTR [rbx+0x268]
   14001920b:	call   0x14000b490
   140019210:	mov    rcx,QWORD PTR [rbx+0x270]
   140019217:	call   0x14000b490
   14001921c:	mov    rcx,QWORD PTR [rbx+0x278]
   140019223:	call   0x14000b490
   140019228:	mov    rcx,QWORD PTR [rbx+0x280]
   14001922f:	call   0x14000b490
   140019234:	mov    rcx,QWORD PTR [rbx+0x288]
   14001923b:	call   0x14000b490
   140019240:	mov    rcx,QWORD PTR [rbx+0x290]
   140019247:	call   0x14000b490
   14001924c:	mov    rcx,QWORD PTR [rbx+0x298]
   140019253:	call   0x14000b490
   140019258:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14001925f:	call   0x14000b490
   140019264:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14001926b:	call   0x14000b490
   140019270:	mov    rcx,QWORD PTR [rbx+0x2b0]
   140019277:	call   0x14000b490
   14001927c:	mov    rcx,QWORD PTR [rbx+0x2b8]
   140019283:	call   0x14000b490
   140019288:	add    rsp,0x20
   14001928c:	pop    rbx
   14001928d:	ret    
   14001928e:	int3   
   14001928f:	int3   
   140019290:	test   rcx,rcx
   140019293:	je     0x1400192fb
   140019295:	push   rbx
   140019296:	sub    rsp,0x20
   14001929a:	mov    rbx,rcx
   14001929d:	mov    rcx,QWORD PTR [rcx]
   1400192a0:	cmp    rcx,QWORD PTR [rip+0xb3a9]        # 0x140024650
   1400192a7:	je     0x1400192ae
   1400192a9:	call   0x14000b490
   1400192ae:	mov    rcx,QWORD PTR [rbx+0x8]
   1400192b2:	cmp    rcx,QWORD PTR [rip+0xb39f]        # 0x140024658
   1400192b9:	je     0x1400192c0
   1400192bb:	call   0x14000b490
   1400192c0:	mov    rcx,QWORD PTR [rbx+0x10]
   1400192c4:	cmp    rcx,QWORD PTR [rip+0xb395]        # 0x140024660
   1400192cb:	je     0x1400192d2
   1400192cd:	call   0x14000b490
   1400192d2:	mov    rcx,QWORD PTR [rbx+0x58]
   1400192d6:	cmp    rcx,QWORD PTR [rip+0xb3cb]        # 0x1400246a8
   1400192dd:	je     0x1400192e4
   1400192df:	call   0x14000b490
   1400192e4:	mov    rcx,QWORD PTR [rbx+0x60]
   1400192e8:	cmp    rcx,QWORD PTR [rip+0xb3c1]        # 0x1400246b0
   1400192ef:	je     0x1400192f6
   1400192f1:	call   0x14000b490
   1400192f6:	add    rsp,0x20
   1400192fa:	pop    rbx
   1400192fb:	ret    
   1400192fc:	test   rcx,rcx
   1400192ff:	je     0x140019405
   140019305:	push   rbx
   140019306:	sub    rsp,0x20
   14001930a:	mov    rbx,rcx
   14001930d:	mov    rcx,QWORD PTR [rcx+0x18]
   140019311:	cmp    rcx,QWORD PTR [rip+0xb350]        # 0x140024668
   140019318:	je     0x14001931f
   14001931a:	call   0x14000b490
   14001931f:	mov    rcx,QWORD PTR [rbx+0x20]
   140019323:	cmp    rcx,QWORD PTR [rip+0xb346]        # 0x140024670
   14001932a:	je     0x140019331
   14001932c:	call   0x14000b490
   140019331:	mov    rcx,QWORD PTR [rbx+0x28]
   140019335:	cmp    rcx,QWORD PTR [rip+0xb33c]        # 0x140024678
   14001933c:	je     0x140019343
   14001933e:	call   0x14000b490
   140019343:	mov    rcx,QWORD PTR [rbx+0x30]
   140019347:	cmp    rcx,QWORD PTR [rip+0xb332]        # 0x140024680
   14001934e:	je     0x140019355
   140019350:	call   0x14000b490
   140019355:	mov    rcx,QWORD PTR [rbx+0x38]
   140019359:	cmp    rcx,QWORD PTR [rip+0xb328]        # 0x140024688
   140019360:	je     0x140019367
   140019362:	call   0x14000b490
   140019367:	mov    rcx,QWORD PTR [rbx+0x40]
   14001936b:	cmp    rcx,QWORD PTR [rip+0xb31e]        # 0x140024690
   140019372:	je     0x140019379
   140019374:	call   0x14000b490
   140019379:	mov    rcx,QWORD PTR [rbx+0x48]
   14001937d:	cmp    rcx,QWORD PTR [rip+0xb314]        # 0x140024698
   140019384:	je     0x14001938b
   140019386:	call   0x14000b490
   14001938b:	mov    rcx,QWORD PTR [rbx+0x68]
   14001938f:	cmp    rcx,QWORD PTR [rip+0xb322]        # 0x1400246b8
   140019396:	je     0x14001939d
   140019398:	call   0x14000b490
   14001939d:	mov    rcx,QWORD PTR [rbx+0x70]
   1400193a1:	cmp    rcx,QWORD PTR [rip+0xb318]        # 0x1400246c0
   1400193a8:	je     0x1400193af
   1400193aa:	call   0x14000b490
   1400193af:	mov    rcx,QWORD PTR [rbx+0x78]
   1400193b3:	cmp    rcx,QWORD PTR [rip+0xb30e]        # 0x1400246c8
   1400193ba:	je     0x1400193c1
   1400193bc:	call   0x14000b490
   1400193c1:	mov    rcx,QWORD PTR [rbx+0x80]
   1400193c8:	cmp    rcx,QWORD PTR [rip+0xb301]        # 0x1400246d0
   1400193cf:	je     0x1400193d6
   1400193d1:	call   0x14000b490
   1400193d6:	mov    rcx,QWORD PTR [rbx+0x88]
   1400193dd:	cmp    rcx,QWORD PTR [rip+0xb2f4]        # 0x1400246d8
   1400193e4:	je     0x1400193eb
   1400193e6:	call   0x14000b490
   1400193eb:	mov    rcx,QWORD PTR [rbx+0x90]
   1400193f2:	cmp    rcx,QWORD PTR [rip+0xb2e7]        # 0x1400246e0
   1400193f9:	je     0x140019400
   1400193fb:	call   0x14000b490
   140019400:	add    rsp,0x20
   140019404:	pop    rbx
   140019405:	ret    
   140019406:	int3   
   140019407:	int3   
   140019408:	sub    rsp,0x28
   14001940c:	call   0x14000d234
   140019411:	mov    rcx,QWORD PTR [rax+0xc0]
   140019418:	cmp    rcx,QWORD PTR [rip+0xafc1]        # 0x1400243e0
   14001941f:	je     0x140019437
   140019421:	mov    eax,DWORD PTR [rax+0xc8]
   140019427:	test   DWORD PTR [rip+0xab83],eax        # 0x140023fb0
   14001942d:	jne    0x140019437
   14001942f:	call   0x140014cdc
   140019434:	mov    rcx,rax
   140019437:	mov    eax,DWORD PTR [rcx+0x4]
   14001943a:	add    rsp,0x28
   14001943e:	ret    
   14001943f:	int3   
   140019440:	mov    r10,rcx
   140019443:	test   r8,r8
   140019446:	je     0x140019483
   140019448:	movzx  r9d,BYTE PTR [r10]
   14001944c:	inc    r10
   14001944f:	lea    eax,[r9-0x41]
   140019453:	cmp    eax,0x19
   140019456:	ja     0x14001945c
   140019458:	add    r9d,0x20
   14001945c:	movzx  ecx,BYTE PTR [rdx]
   14001945f:	inc    rdx
   140019462:	lea    eax,[rcx-0x41]
   140019465:	cmp    eax,0x19
   140019468:	ja     0x14001946d
   14001946a:	add    ecx,0x20
   14001946d:	dec    r8
   140019470:	je     0x14001947c
   140019472:	test   r9d,r9d
   140019475:	je     0x14001947c
   140019477:	cmp    r9d,ecx
   14001947a:	je     0x140019448
   14001947c:	sub    r9d,ecx
   14001947f:	mov    eax,r9d
   140019482:	ret    
   140019483:	xor    eax,eax
   140019485:	ret    
   140019486:	int3   
   140019487:	int3   
   140019488:	mov    rax,rsp
   14001948b:	mov    QWORD PTR [rax+0x8],rbx
   14001948f:	mov    QWORD PTR [rax+0x10],rsi
   140019493:	mov    QWORD PTR [rax+0x18],rdi
   140019497:	mov    QWORD PTR [rax+0x20],r12
   14001949b:	push   rbp
   14001949c:	mov    rbp,rsp
   14001949f:	sub    rsp,0x40
   1400194a3:	mov    r12,r8
   1400194a6:	mov    rsi,rdx
   1400194a9:	mov    rdi,rcx
   1400194ac:	test   r8,r8
   1400194af:	je     0x14001956f
   1400194b5:	lea    rcx,[rbp-0x20]
   1400194b9:	mov    rdx,r9
   1400194bc:	call   0x14000c724
   1400194c1:	test   rdi,rdi
   1400194c4:	jne    0x1400194f1
   1400194c6:	call   0x14000bdf0
   1400194cb:	mov    DWORD PTR [rax],0x16
   1400194d1:	call   0x14000d04c
   1400194d6:	cmp    BYTE PTR [rbp-0x8],0x0
   1400194da:	je     0x1400194e7
   1400194dc:	mov    rax,QWORD PTR [rbp-0x10]
   1400194e0:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400194e7:	mov    eax,0x7fffffff
   1400194ec:	jmp    0x140019571
   1400194f1:	test   rsi,rsi
   1400194f4:	je     0x1400194c6
   1400194f6:	cmp    r12,0x7fffffff
   1400194fd:	ja     0x1400194c6
   1400194ff:	mov    rax,QWORD PTR [rbp-0x20]
   140019503:	cmp    DWORD PTR [rax+0x14],0x0
   140019507:	jne    0x14001952a
   140019509:	mov    r8,r12
   14001950c:	mov    rdx,rsi
   14001950f:	mov    rcx,rdi
   140019512:	call   0x140019440
   140019517:	cmp    BYTE PTR [rbp-0x8],0x0
   14001951b:	je     0x140019571
   14001951d:	mov    rcx,QWORD PTR [rbp-0x10]
   140019521:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019528:	jmp    0x140019571
   14001952a:	sub    rdi,rsi
   14001952d:	movzx  ecx,BYTE PTR [rdi+rsi*1]
   140019531:	lea    rdx,[rbp-0x20]
   140019535:	call   0x14001984c
   14001953a:	movzx  ecx,BYTE PTR [rsi]
   14001953d:	lea    rdx,[rbp-0x20]
   140019541:	mov    ebx,eax
   140019543:	call   0x14001984c
   140019548:	inc    rsi
   14001954b:	dec    r12
   14001954e:	je     0x140019558
   140019550:	test   ebx,ebx
   140019552:	je     0x140019558
   140019554:	cmp    ebx,eax
   140019556:	je     0x14001952d
   140019558:	sub    ebx,eax
   14001955a:	cmp    BYTE PTR [rbp-0x8],0x0
   14001955e:	je     0x14001956b
   140019560:	mov    rcx,QWORD PTR [rbp-0x10]
   140019564:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001956b:	mov    eax,ebx
   14001956d:	jmp    0x140019571
   14001956f:	xor    eax,eax
   140019571:	mov    rbx,QWORD PTR [rsp+0x50]
   140019576:	mov    rsi,QWORD PTR [rsp+0x58]
   14001957b:	mov    rdi,QWORD PTR [rsp+0x60]
   140019580:	mov    r12,QWORD PTR [rsp+0x68]
   140019585:	add    rsp,0x40
   140019589:	pop    rbp
   14001958a:	ret    
   14001958b:	int3   
   14001958c:	sub    rsp,0x28
   140019590:	cmp    DWORD PTR [rip+0xc3d1],0x0        # 0x140025968
   140019597:	jne    0x1400195cf
   140019599:	test   rcx,rcx
   14001959c:	jne    0x1400195b8
   14001959e:	call   0x14000bdf0
   1400195a3:	mov    DWORD PTR [rax],0x16
   1400195a9:	call   0x14000d04c
   1400195ae:	mov    eax,0x7fffffff
   1400195b3:	add    rsp,0x28
   1400195b7:	ret    
   1400195b8:	test   rdx,rdx
   1400195bb:	je     0x14001959e
   1400195bd:	cmp    r8,0x7fffffff
   1400195c4:	ja     0x14001959e
   1400195c6:	add    rsp,0x28
   1400195ca:	jmp    0x140019440
   1400195cf:	xor    r9d,r9d
   1400195d2:	add    rsp,0x28
   1400195d6:	jmp    0x140019488
   1400195db:	int3   
   1400195dc:	sub    rsp,0x48
   1400195e0:	and    QWORD PTR [rsp+0x30],0x0
   1400195e6:	and    DWORD PTR [rsp+0x28],0x0
   1400195eb:	mov    r8d,0x3
   1400195f1:	lea    rcx,[rip+0x7238]        # 0x140020830
   1400195f8:	xor    r9d,r9d
   1400195fb:	mov    edx,0x40000000
   140019600:	mov    DWORD PTR [rsp+0x20],r8d
   140019605:	call   QWORD PTR [rip+0xa2d]        # 0x14001a038
   14001960b:	mov    QWORD PTR [rip+0xb0f6],rax        # 0x140024708
   140019612:	add    rsp,0x48
   140019616:	ret    
   140019617:	int3   
   140019618:	sub    rsp,0x28
   14001961c:	mov    rcx,QWORD PTR [rip+0xb0e5]        # 0x140024708
   140019623:	cmp    rcx,0xffffffffffffffff
   140019627:	je     0x140019635
   140019629:	cmp    rcx,0xfffffffffffffffe
   14001962d:	je     0x140019635
   14001962f:	call   QWORD PTR [rip+0xa43]        # 0x14001a078
   140019635:	add    rsp,0x28
   140019639:	ret    
   14001963a:	int3   
   14001963b:	int3   
   14001963c:	mov    r9,rcx
   14001963f:	movzx  r8d,BYTE PTR [r9]
   140019643:	inc    r9
   140019646:	lea    eax,[r8-0x41]
   14001964a:	cmp    eax,0x19
   14001964d:	ja     0x140019653
   14001964f:	add    r8d,0x20
   140019653:	movzx  ecx,BYTE PTR [rdx]
   140019656:	inc    rdx
   140019659:	lea    eax,[rcx-0x41]
   14001965c:	cmp    eax,0x19
   14001965f:	ja     0x140019664
   140019661:	add    ecx,0x20
   140019664:	test   r8d,r8d
   140019667:	je     0x14001966e
   140019669:	cmp    r8d,ecx
   14001966c:	je     0x14001963f
   14001966e:	sub    r8d,ecx
   140019671:	mov    eax,r8d
   140019674:	ret    
   140019675:	int3   
   140019676:	int3   
   140019677:	int3   
   140019678:	mov    QWORD PTR [rsp+0x8],rbx
   14001967d:	mov    QWORD PTR [rsp+0x10],rsi
   140019682:	mov    QWORD PTR [rsp+0x18],rdi
   140019687:	push   rbp
   140019688:	mov    rbp,rsp
   14001968b:	sub    rsp,0x40
   14001968f:	mov    rsi,rcx
   140019692:	mov    rdi,rdx
   140019695:	lea    rcx,[rbp-0x20]
   140019699:	mov    rdx,r8
   14001969c:	call   0x14000c724
   1400196a1:	test   rsi,rsi
   1400196a4:	jne    0x1400196ce
   1400196a6:	call   0x14000bdf0
   1400196ab:	mov    DWORD PTR [rax],0x16
   1400196b1:	call   0x14000d04c
   1400196b6:	cmp    BYTE PTR [rbp-0x8],0x0
   1400196ba:	je     0x1400196c7
   1400196bc:	mov    rax,QWORD PTR [rbp-0x10]
   1400196c0:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400196c7:	mov    eax,0x7fffffff
   1400196cc:	jmp    0x140019739
   1400196ce:	test   rdi,rdi
   1400196d1:	je     0x1400196a6
   1400196d3:	mov    rax,QWORD PTR [rbp-0x20]
   1400196d7:	cmp    DWORD PTR [rax+0x14],0x0
   1400196db:	jne    0x1400196fb
   1400196dd:	mov    rdx,rdi
   1400196e0:	mov    rcx,rsi
   1400196e3:	call   0x14001963c
   1400196e8:	cmp    BYTE PTR [rbp-0x8],0x0
   1400196ec:	je     0x140019739
   1400196ee:	mov    rcx,QWORD PTR [rbp-0x10]
   1400196f2:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400196f9:	jmp    0x140019739
   1400196fb:	sub    rsi,rdi
   1400196fe:	movzx  ecx,BYTE PTR [rsi+rdi*1]
   140019702:	lea    rdx,[rbp-0x20]
   140019706:	call   0x14001984c
   14001970b:	movzx  ecx,BYTE PTR [rdi]
   14001970e:	lea    rdx,[rbp-0x20]
   140019712:	mov    ebx,eax
   140019714:	call   0x14001984c
   140019719:	inc    rdi
   14001971c:	test   ebx,ebx
   14001971e:	je     0x140019724
   140019720:	cmp    ebx,eax
   140019722:	je     0x1400196fe
   140019724:	sub    ebx,eax
   140019726:	cmp    BYTE PTR [rbp-0x8],0x0
   14001972a:	je     0x140019737
   14001972c:	mov    rcx,QWORD PTR [rbp-0x10]
   140019730:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019737:	mov    eax,ebx
   140019739:	mov    rbx,QWORD PTR [rsp+0x50]
   14001973e:	mov    rsi,QWORD PTR [rsp+0x58]
   140019743:	mov    rdi,QWORD PTR [rsp+0x60]
   140019748:	add    rsp,0x40
   14001974c:	pop    rbp
   14001974d:	ret    
   14001974e:	int3   
   14001974f:	int3   
   140019750:	sub    rsp,0x28
   140019754:	cmp    DWORD PTR [rip+0xc20d],0x0        # 0x140025968
   14001975b:	jne    0x14001978a
   14001975d:	test   rcx,rcx
   140019760:	jne    0x14001977c
   140019762:	call   0x14000bdf0
   140019767:	mov    DWORD PTR [rax],0x16
   14001976d:	call   0x14000d04c
   140019772:	mov    eax,0x7fffffff
   140019777:	add    rsp,0x28
   14001977b:	ret    
   14001977c:	test   rdx,rdx
   14001977f:	je     0x140019762
   140019781:	add    rsp,0x28
   140019785:	jmp    0x14001963c
   14001978a:	xor    r8d,r8d
   14001978d:	add    rsp,0x28
   140019791:	jmp    0x140019678
   140019796:	int3   
   140019797:	int3   
   140019798:	xor    edx,edx
   14001979a:	lea    r8d,[rdx+0xa]
   14001979e:	jmp    0x140016268
   1400197a3:	int3   
   1400197a4:	mov    rax,rsp
   1400197a7:	mov    QWORD PTR [rax+0x8],rbx
   1400197ab:	mov    QWORD PTR [rax+0x10],rbp
   1400197af:	mov    QWORD PTR [rax+0x18],rsi
   1400197b3:	mov    QWORD PTR [rax+0x20],rdi
   1400197b7:	push   r12
   1400197b9:	sub    rsp,0x30
   1400197bd:	movsxd rbx,r9d
   1400197c0:	mov    rsi,r8
   1400197c3:	mov    ebp,edx
   1400197c5:	mov    r12d,ecx
   1400197c8:	test   r9d,r9d
   1400197cb:	jle    0x1400197db
   1400197cd:	mov    rdx,rbx
   1400197d0:	mov    rcx,r8
   1400197d3:	call   0x14001999c
   1400197d8:	mov    rbx,rax
   1400197db:	movsxd rax,DWORD PTR [rsp+0x68]
   1400197e0:	mov    rdi,QWORD PTR [rsp+0x60]
   1400197e5:	test   eax,eax
   1400197e7:	jle    0x1400197f4
   1400197e9:	mov    rdx,rax
   1400197ec:	mov    rcx,rdi
   1400197ef:	call   0x14001999c
   1400197f4:	test   ebx,ebx
   1400197f6:	je     0x140019818
   1400197f8:	test   eax,eax
   1400197fa:	je     0x140019818
   1400197fc:	mov    DWORD PTR [rsp+0x28],eax
   140019800:	mov    r9d,ebx
   140019803:	mov    r8,rsi
   140019806:	mov    edx,ebp
   140019808:	mov    ecx,r12d
   14001980b:	mov    QWORD PTR [rsp+0x20],rdi
   140019810:	call   QWORD PTR [rip+0xad2]        # 0x14001a2e8
   140019816:	jmp    0x14001982f
   140019818:	sub    ebx,eax
   14001981a:	mov    eax,0x3
   14001981f:	lea    ecx,[rax-0x2]
   140019822:	cmovs  eax,ecx
   140019825:	mov    ecx,0x2
   14001982a:	test   ebx,ebx
   14001982c:	cmove  eax,ecx
   14001982f:	mov    rbx,QWORD PTR [rsp+0x40]
   140019834:	mov    rbp,QWORD PTR [rsp+0x48]
   140019839:	mov    rsi,QWORD PTR [rsp+0x50]
   14001983e:	mov    rdi,QWORD PTR [rsp+0x58]
   140019843:	add    rsp,0x30
   140019847:	pop    r12
   140019849:	ret    
   14001984a:	int3   
   14001984b:	int3   
   14001984c:	mov    QWORD PTR [rsp+0x10],rdi
   140019851:	mov    QWORD PTR [rsp+0x20],r12
   140019856:	push   rbp
   140019857:	mov    rbp,rsp
   14001985a:	sub    rsp,0x70
   14001985e:	movsxd rdi,ecx
   140019861:	lea    rcx,[rbp-0x20]
   140019865:	call   0x14000c724
   14001986a:	cmp    edi,0x100
   140019870:	jae    0x1400198cf
   140019872:	mov    rdx,QWORD PTR [rbp-0x20]
   140019876:	cmp    DWORD PTR [rdx+0x10c],0x1
   14001987d:	jle    0x140019895
   14001987f:	lea    r8,[rbp-0x20]
   140019883:	mov    edx,0x1
   140019888:	mov    ecx,edi
   14001988a:	call   0x140014d54
   14001988f:	mov    rdx,QWORD PTR [rbp-0x20]
   140019893:	jmp    0x1400198a3
   140019895:	mov    rax,QWORD PTR [rdx+0x140]
   14001989c:	movzx  eax,WORD PTR [rax+rdi*2]
   1400198a0:	and    eax,0x1
   1400198a3:	test   eax,eax
   1400198a5:	je     0x1400198b7
   1400198a7:	mov    rax,QWORD PTR [rdx+0x148]
   1400198ae:	movzx  eax,BYTE PTR [rax+rdi*1]
   1400198b2:	jmp    0x140019977
   1400198b7:	cmp    BYTE PTR [rbp-0x8],0x0
   1400198bb:	je     0x1400198c8
   1400198bd:	mov    rax,QWORD PTR [rbp-0x10]
   1400198c1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400198c8:	mov    eax,edi
   1400198ca:	jmp    0x140019988
   1400198cf:	mov    rax,QWORD PTR [rbp-0x20]
   1400198d3:	cmp    DWORD PTR [rax+0x10c],0x1
   1400198da:	jle    0x140019907
   1400198dc:	mov    r12d,edi
   1400198df:	lea    rdx,[rbp-0x20]
   1400198e3:	sar    r12d,0x8
   1400198e7:	movzx  ecx,r12b
   1400198eb:	call   0x140015338
   1400198f0:	test   eax,eax
   1400198f2:	je     0x140019907
   1400198f4:	mov    BYTE PTR [rbp+0x10],r12b
   1400198f8:	mov    BYTE PTR [rbp+0x11],dil
   1400198fc:	mov    BYTE PTR [rbp+0x12],0x0
   140019900:	mov    edx,0x2
   140019905:	jmp    0x14001991f
   140019907:	call   0x14000bdf0
   14001990c:	mov    edx,0x1
   140019911:	mov    DWORD PTR [rax],0x2a
   140019917:	mov    BYTE PTR [rbp+0x10],dil
   14001991b:	mov    BYTE PTR [rbp+0x11],0x0
   14001991f:	mov    rcx,QWORD PTR [rbp-0x20]
   140019923:	mov    DWORD PTR [rsp+0x40],0x1
   14001992b:	lea    r9,[rbp+0x10]
   14001992f:	mov    eax,DWORD PTR [rcx+0x4]
   140019932:	mov    r8d,0x100
   140019938:	mov    DWORD PTR [rsp+0x38],eax
   14001993c:	lea    rax,[rbp+0x20]
   140019940:	mov    DWORD PTR [rsp+0x30],0x3
   140019948:	mov    QWORD PTR [rsp+0x28],rax
   14001994d:	mov    DWORD PTR [rsp+0x20],edx
   140019951:	mov    edx,DWORD PTR [rcx+0x14]
   140019954:	lea    rcx,[rbp-0x20]
   140019958:	call   0x1400186dc
   14001995d:	test   eax,eax
   14001995f:	je     0x1400198b7
   140019965:	cmp    eax,0x1
   140019968:	movzx  eax,BYTE PTR [rbp+0x20]
   14001996c:	je     0x140019977
   14001996e:	movzx  ecx,BYTE PTR [rbp+0x21]
   140019972:	shl    eax,0x8
   140019975:	or     eax,ecx
   140019977:	cmp    BYTE PTR [rbp-0x8],0x0
   14001997b:	je     0x140019988
   14001997d:	mov    rcx,QWORD PTR [rbp-0x10]
   140019981:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019988:	lea    r11,[rsp+0x70]
   14001998d:	mov    rdi,QWORD PTR [r11+0x18]
   140019991:	mov    r12,QWORD PTR [r11+0x28]
   140019995:	mov    rsp,r11
   140019998:	pop    rbp
   140019999:	ret    
   14001999a:	int3   
   14001999b:	int3   
   14001999c:	xor    r8d,r8d
   14001999f:	mov    eax,r8d
   1400199a2:	test   rdx,rdx
   1400199a5:	je     0x1400199b9
   1400199a7:	cmp    WORD PTR [rcx],r8w
   1400199ab:	je     0x1400199b9
   1400199ad:	inc    rax
   1400199b0:	add    rcx,0x2
   1400199b4:	cmp    rax,rdx
   1400199b7:	jb     0x1400199a7
   1400199b9:	repz ret 
   1400199bb:	int3   
   1400199bc:	jmp    QWORD PTR [rip+0x7d6]        # 0x14001a198
   1400199c2:	jmp    QWORD PTR [rip+0x7d8]        # 0x14001a1a0
   1400199c8:	jmp    QWORD PTR [rip+0x81a]        # 0x14001a1e8
   1400199ce:	int3   
   1400199cf:	int3   
   1400199d0:	rex push rbp
   1400199d2:	sub    rsp,0x20
   1400199d6:	mov    rbp,rdx
   1400199d9:	cmp    DWORD PTR [rbp+0x80],0x0
   1400199e0:	je     0x1400199ed
   1400199e2:	mov    ecx,0x8
   1400199e7:	call   0x14000ca58
   1400199ec:	nop
   1400199ed:	add    rsp,0x20
   1400199f1:	pop    rbp
   1400199f2:	ret    
   1400199f3:	int3   
   1400199f4:	rex push rbp
   1400199f6:	sub    rsp,0x20
   1400199fa:	mov    rbp,rdx
   1400199fd:	call   0x14000abc8
   140019a02:	add    rax,0x30
   140019a06:	mov    rdx,rax
   140019a09:	mov    ecx,0x1
   140019a0e:	call   0x14000adbc
   140019a13:	nop
   140019a14:	add    rsp,0x20
   140019a18:	pop    rbp
   140019a19:	ret    
   140019a1a:	int3   
   140019a1b:	rex push rbp
   140019a1d:	sub    rsp,0x20
   140019a21:	mov    rbp,rdx
   140019a24:	mov    rcx,QWORD PTR [rbp+0x50]
   140019a28:	call   0x14000ad70
   140019a2d:	nop
   140019a2e:	add    rsp,0x20
   140019a32:	pop    rbp
   140019a33:	ret    
   140019a34:	int3   
   140019a35:	rex push rbp
   140019a37:	sub    rsp,0x20
   140019a3b:	mov    rbp,rdx
   140019a3e:	mov    rcx,QWORD PTR [rbp+0x78]
   140019a42:	call   0x14000ad70
   140019a47:	nop
   140019a48:	add    rsp,0x20
   140019a4c:	pop    rbp
   140019a4d:	ret    
   140019a4e:	int3   
   140019a4f:	rex push rbp
   140019a51:	sub    rsp,0x20
   140019a55:	mov    rbp,rdx
   140019a58:	mov    rcx,QWORD PTR [rbp+0x40]
   140019a5c:	call   0x14000ad70
   140019a61:	nop
   140019a62:	add    rsp,0x20
   140019a66:	pop    rbp
   140019a67:	ret    
   140019a68:	int3   
   140019a69:	rex push rbp
   140019a6b:	sub    rsp,0x20
   140019a6f:	mov    rbp,rdx
   140019a72:	mov    ecx,0x2
   140019a77:	call   0x14001182c
   140019a7c:	nop
   140019a7d:	add    rsp,0x20
   140019a81:	pop    rbp
   140019a82:	ret    
   140019a83:	int3   
   140019a84:	rex push rbp
   140019a86:	sub    rsp,0x20
   140019a8a:	mov    rbp,rdx
   140019a8d:	mov    rcx,QWORD PTR [rbp+0x48]
   140019a91:	call   0x14000ad70
   140019a96:	nop
   140019a97:	add    rsp,0x20
   140019a9b:	pop    rbp
   140019a9c:	ret    
   140019a9d:	int3   
   140019a9e:	rex push rbp
   140019aa0:	sub    rsp,0x20
   140019aa4:	mov    rbp,rdx
   140019aa7:	movsxd rcx,DWORD PTR [rbp+0x20]
   140019aab:	mov    rax,rcx
   140019aae:	mov    rdx,QWORD PTR [rip+0xc1d3]        # 0x140025c88
   140019ab5:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140019ab9:	call   0x14000adbc
   140019abe:	nop
   140019abf:	add    rsp,0x20
   140019ac3:	pop    rbp
   140019ac4:	ret    
   140019ac5:	int3   
   140019ac6:	int3   
   140019ac7:	int3   
   140019ac8:	int3   
   140019ac9:	int3   
   140019aca:	int3   
   140019acb:	int3   
   140019acc:	int3   
   140019acd:	int3   
   140019ace:	rex push rbp
   140019ad0:	sub    rsp,0x20
   140019ad4:	mov    rbp,rdx
   140019ad7:	mov    ecx,0x1
   140019adc:	call   0x14000ca58
   140019ae1:	nop
   140019ae2:	add    rsp,0x20
   140019ae6:	pop    rbp
   140019ae7:	ret    
   140019ae8:	int3   
   140019ae9:	rex push rbp
   140019aeb:	sub    rsp,0x20
   140019aef:	mov    rbp,rdx
   140019af2:	mov    rcx,QWORD PTR [rbp+0x30]
   140019af6:	call   0x14000ad70
   140019afb:	nop
   140019afc:	add    rsp,0x20
   140019b00:	pop    rbp
   140019b01:	ret    
   140019b02:	int3   
   140019b03:	rex push rbp
   140019b05:	sub    rsp,0x20
   140019b09:	mov    rbp,rdx
   140019b0c:	mov    ecx,0x7
   140019b11:	call   0x14000ca58
   140019b16:	nop
   140019b17:	add    rsp,0x20
   140019b1b:	pop    rbp
   140019b1c:	ret    
   140019b1d:	int3   
   140019b1e:	rex push rbp
   140019b20:	sub    rsp,0x20
   140019b24:	mov    rbp,rdx
   140019b27:	mov    rax,QWORD PTR [rcx]
   140019b2a:	mov    rdx,rcx
   140019b2d:	mov    ecx,DWORD PTR [rax]
   140019b2f:	call   0x14000ec00
   140019b34:	nop
   140019b35:	add    rsp,0x20
   140019b39:	pop    rbp
   140019b3a:	ret    
   140019b3b:	int3   
   140019b3c:	rex push rbp
   140019b3e:	sub    rsp,0x20
   140019b42:	mov    rbp,rdx
   140019b45:	mov    rcx,QWORD PTR [rip+0x9b54]        # 0x1400236a0
   140019b4c:	call   QWORD PTR [rip+0x5a6]        # 0x14001a0f8
   140019b52:	nop
   140019b53:	add    rsp,0x20
   140019b57:	pop    rbp
   140019b58:	ret    
   140019b59:	int3   
   140019b5a:	rex push rbp
   140019b5c:	sub    rsp,0x20
   140019b60:	mov    rbp,rdx
   140019b63:	cmp    DWORD PTR [rbp+0x60],0x0
   140019b67:	je     0x140019b71
   140019b69:	xor    ecx,ecx
   140019b6b:	call   0x14000ca58
   140019b70:	nop
   140019b71:	add    rsp,0x20
   140019b75:	pop    rbp
   140019b76:	ret    
   140019b77:	int3   
   140019b78:	rex push rbp
   140019b7a:	sub    rsp,0x20
   140019b7e:	mov    rbp,rdx
   140019b81:	mov    ecx,0xd
   140019b86:	call   0x14000ca58
   140019b8b:	nop
   140019b8c:	add    rsp,0x20
   140019b90:	pop    rbp
   140019b91:	ret    
   140019b92:	int3   
   140019b93:	int3   
   140019b94:	int3   
   140019b95:	int3   
   140019b96:	int3   
   140019b97:	int3   
   140019b98:	rex push rbp
   140019b9a:	sub    rsp,0x20
   140019b9e:	mov    rbp,rdx
   140019ba1:	mov    ecx,0xc
   140019ba6:	call   0x14000ca58
   140019bab:	nop
   140019bac:	add    rsp,0x20
   140019bb0:	pop    rbp
   140019bb1:	ret    
   140019bb2:	int3   
   140019bb3:	rex push rbp
   140019bb5:	sub    rsp,0x20
   140019bb9:	mov    rbp,rdx
   140019bbc:	call   0x1400098dc
   140019bc1:	nop
   140019bc2:	add    rsp,0x20
   140019bc6:	pop    rbp
   140019bc7:	ret    
   140019bc8:	int3   
   140019bc9:	int3   
   140019bca:	int3   
   140019bcb:	int3   
   140019bcc:	int3   
   140019bcd:	int3   
   140019bce:	int3   
   140019bcf:	int3   
   140019bd0:	rex push rbp
   140019bd2:	sub    rsp,0x20
   140019bd6:	mov    rbp,rdx
   140019bd9:	mov    rax,QWORD PTR [rcx]
   140019bdc:	xor    ecx,ecx
   140019bde:	cmp    DWORD PTR [rax],0xc0000005
   140019be4:	sete   cl
   140019be7:	mov    eax,ecx
   140019be9:	mov    eax,ecx
   140019beb:	add    rsp,0x20
   140019bef:	pop    rbp
   140019bf0:	ret    
   140019bf1:	int3   
   140019bf2:	rex push rbp
   140019bf4:	sub    rsp,0x20
   140019bf8:	mov    rbp,rdx
   140019bfb:	mov    ecx,0x1
   140019c00:	call   0x14000ca58
   140019c05:	nop
   140019c06:	add    rsp,0x20
   140019c0a:	pop    rbp
   140019c0b:	ret    
   140019c0c:	int3   
   140019c0d:	rex push rbp
   140019c0f:	sub    rsp,0x20
   140019c13:	mov    rbp,rdx
   140019c16:	mov    ecx,DWORD PTR [rbp+0x40]
   140019c19:	call   0x14001182c
   140019c1e:	nop
   140019c1f:	add    rsp,0x20
   140019c23:	pop    rbp
   140019c24:	ret    
   140019c25:	int3   
   140019c26:	rex push rbp
   140019c28:	sub    rsp,0x20
   140019c2c:	mov    rbp,rdx
   140019c2f:	mov    ecx,0xa
   140019c34:	call   0x14000ca58
   140019c39:	nop
   140019c3a:	add    rsp,0x20
   140019c3e:	pop    rbp
   140019c3f:	ret    
   140019c40:	int3   
   140019c41:	rex push rbp
   140019c43:	sub    rsp,0x20
   140019c47:	mov    rbp,rdx
   140019c4a:	mov    ecx,0xa
   140019c4f:	call   0x14000ca58
   140019c54:	nop
   140019c55:	add    rsp,0x20
   140019c59:	pop    rbp
   140019c5a:	ret    
   140019c5b:	int3   
   140019c5c:	int3   
   140019c5d:	int3   
   140019c5e:	int3   
   140019c5f:	int3   
   140019c60:	int3   
   140019c61:	rex push rbp
   140019c63:	sub    rsp,0x20
   140019c67:	mov    rbp,rdx
   140019c6a:	mov    ecx,0xb
   140019c6f:	call   0x14000ca58
   140019c74:	nop
   140019c75:	add    rsp,0x20
   140019c79:	pop    rbp
   140019c7a:	ret    
   140019c7b:	int3   
   140019c7c:	rex push rbp
   140019c7e:	sub    rsp,0x40
   140019c82:	mov    rbp,rdx
   140019c85:	mov    ecx,DWORD PTR [rbp+0x4c]
   140019c88:	call   0x14001182c
   140019c8d:	nop
   140019c8e:	add    rsp,0x40
   140019c92:	pop    rbp
   140019c93:	ret    
   140019c94:	int3   
   140019c95:	rex push rbp
   140019c97:	sub    rsp,0x30
   140019c9b:	mov    rbp,rdx
   140019c9e:	cmp    DWORD PTR [rbp+0x34],0x0
   140019ca2:	je     0x140019cdc
   140019ca4:	cmp    DWORD PTR [rbp+0x38],0x0
   140019ca8:	je     0x140019cd1
   140019caa:	movsxd rdx,DWORD PTR [rbp+0x30]
   140019cae:	mov    rcx,rdx
   140019cb1:	mov    rax,rdx
   140019cb4:	sar    rax,0x5
   140019cb8:	lea    r8,[rip+0xbdc1]        # 0x140025a80
   140019cbf:	and    ecx,0x1f
   140019cc2:	imul   rcx,rcx,0x58
   140019cc6:	mov    rax,QWORD PTR [r8+rax*8]
   140019cca:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140019ccf:	jmp    0x140019cd4
   140019cd1:	mov    edx,DWORD PTR [rbp+0x30]
   140019cd4:	mov    ecx,edx
   140019cd6:	call   0x14001182c
   140019cdb:	nop
   140019cdc:	add    rsp,0x30
   140019ce0:	pop    rbp
   140019ce1:	ret    
   140019ce2:	int3   
   140019ce3:	rex push rbp
   140019ce5:	sub    rsp,0x30
   140019ce9:	mov    rbp,rdx
   140019cec:	cmp    DWORD PTR [rbp+0x30],0x0
   140019cf0:	je     0x140019d25
   140019cf2:	mov    rdx,QWORD PTR [rbp+0x70]
   140019cf6:	cmp    DWORD PTR [rbp+0x34],0x0
   140019cfa:	je     0x140019d1d
   140019cfc:	movsxd rcx,DWORD PTR [rdx]
   140019cff:	mov    rax,rcx
   140019d02:	sar    rax,0x5
   140019d06:	lea    r8,[rip+0xbd73]        # 0x140025a80
   140019d0d:	and    ecx,0x1f
   140019d10:	imul   rcx,rcx,0x58
   140019d14:	mov    rax,QWORD PTR [r8+rax*8]
   140019d18:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140019d1d:	mov    ecx,DWORD PTR [rdx]
   140019d1f:	call   0x14001182c
   140019d24:	nop
   140019d25:	add    rsp,0x30
   140019d29:	pop    rbp
   140019d2a:	ret    
   140019d2b:	int3   
   140019d2c:	rex push rbp
   140019d2e:	sub    rsp,0x20
   140019d32:	mov    rbp,rdx
   140019d35:	mov    ecx,0xd
   140019d3a:	call   0x14000ca58
   140019d3f:	nop
   140019d40:	add    rsp,0x20
   140019d44:	pop    rbp
   140019d45:	ret    
   140019d46:	int3   
   140019d47:	rex push rbp
   140019d49:	sub    rsp,0x20
   140019d4d:	mov    rbp,rdx
   140019d50:	mov    ecx,0xc
   140019d55:	call   0x14000ca58
   140019d5a:	nop
   140019d5b:	add    rsp,0x20
   140019d5f:	pop    rbp
   140019d60:	ret    
   140019d61:	int3   
   140019d62:	rex push rbp
   140019d64:	sub    rsp,0x20
   140019d68:	mov    rbp,rdx
   140019d6b:	mov    ecx,DWORD PTR [rbp+0x50]
   140019d6e:	call   0x14001182c
   140019d73:	nop
   140019d74:	add    rsp,0x20
   140019d78:	pop    rbp
   140019d79:	ret    
   140019d7a:	int3   
   140019d7b:	rex push rbp
   140019d7d:	sub    rsp,0x40
   140019d81:	mov    rbp,rdx
   140019d84:	mov    ecx,0x7
   140019d89:	call   0x14000ca58
   140019d8e:	nop
   140019d8f:	add    rsp,0x40
   140019d93:	pop    rbp
   140019d94:	ret    
   140019d95:	int3   
   140019d96:	rex push rbp
   140019d98:	sub    rsp,0x20
   140019d9c:	mov    rbp,rdx
   140019d9f:	mov    ecx,0x6
   140019da4:	call   0x14000ca58
   140019da9:	nop
   140019daa:	add    rsp,0x20
   140019dae:	pop    rbp
   140019daf:	ret    
   140019db0:	int3   
