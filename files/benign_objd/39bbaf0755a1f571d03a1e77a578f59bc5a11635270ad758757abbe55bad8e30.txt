
39bbaf0755a1f571d03a1e77a578f59bc5a11635270ad758757abbe55bad8e30.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x8],rbx
   140001005:	push   rdi
   140001006:	sub    rsp,0x70
   14000100a:	mov    rax,QWORD PTR [rip+0x23987]        # 0x140024998
   140001011:	lea    rcx,[rip+0x19468]        # 0x14001a480
   140001018:	mov    QWORD PTR [rip+0x23981],rax        # 0x1400249a0
   14000101f:	call   0x140009da4
   140001024:	test   rax,rax
   140001027:	je     0x140001068
   140001029:	lea    rcx,[rip+0x19430]        # 0x14001a460
   140001030:	call   0x140009c3c
   140001035:	xor    ebx,ebx
   140001037:	cmp    DWORD PTR [rip+0x23947],ebx        # 0x140024984
   14000103d:	jle    0x140001068
   14000103f:	xor    edi,edi
   140001041:	mov    r8,QWORD PTR [rip+0x23940]        # 0x140024988
   140001048:	lea    rcx,[rip+0x193f9]        # 0x14001a448
   14000104f:	mov    edx,ebx
   140001051:	mov    r8,QWORD PTR [rdi+r8*1]
   140001055:	call   0x140009c3c
   14000105a:	inc    ebx
   14000105c:	add    rdi,0x8
   140001060:	cmp    ebx,DWORD PTR [rip+0x2391e]        # 0x140024984
   140001066:	jl     0x140001041
   140001068:	call   QWORD PTR [rip+0x18fd2]        # 0x14001a040
   14000106e:	mov    rcx,rax
   140001071:	call   0x140003f5c
   140001076:	call   0x140003f4c
   14000107b:	movsxd rdi,eax
   14000107e:	lea    ecx,[rdi+0x1]
   140001081:	movsxd rcx,ecx
   140001084:	shl    rcx,0x3
   140001088:	call   0x140004000
   14000108d:	mov    rbx,rax
   140001090:	call   0x140003f54
   140001095:	xor    r9d,r9d
   140001098:	xor    edx,edx
   14000109a:	test   edi,edi
   14000109c:	jle    0x1400010b4
   14000109e:	mov    r9d,edi
   1400010a1:	mov    rcx,QWORD PTR [rax]
   1400010a4:	add    rax,0x10
   1400010a8:	mov    QWORD PTR [rbx+rdx*8],rcx
   1400010ac:	inc    rdx
   1400010af:	cmp    rdx,rdi
   1400010b2:	jl     0x1400010a1
   1400010b4:	mov    rdx,QWORD PTR [rip+0x21f65]        # 0x140023020
   1400010bb:	movsxd rax,r9d
   1400010be:	and    QWORD PTR [rbx+rax*8],0x0
   1400010c3:	test   rdx,rdx
   1400010c6:	jne    0x1400010cb
   1400010c8:	mov    rdx,QWORD PTR [rbx]
   1400010cb:	mov    rcx,QWORD PTR [rip+0x21f46]        # 0x140023018
   1400010d2:	test   rcx,rcx
   1400010d5:	jne    0x1400010da
   1400010d7:	mov    rcx,QWORD PTR [rbx]
   1400010da:	mov    r9,QWORD PTR [rip+0x2363f]        # 0x140024720
   1400010e1:	mov    r8d,0x1
   1400010e7:	test   r9,r9
   1400010ea:	setne  al
   1400010ed:	and    DWORD PTR [rsp+0x68],0x0
   1400010f2:	mov    BYTE PTR [rsp+0x60],0x1
   1400010f7:	mov    BYTE PTR [rsp+0x58],0x1
   1400010fc:	mov    BYTE PTR [rsp+0x50],al
   140001100:	mov    QWORD PTR [rsp+0x48],rdx
   140001105:	mov    QWORD PTR [rsp+0x40],rcx
   14000110a:	lea    rax,[rip+0x1932f]        # 0x14001a440
   140001111:	mov    rdx,rbx
   140001114:	mov    QWORD PTR [rsp+0x38],rax
   140001119:	lea    rax,[rip+0x19310]        # 0x14001a430
   140001120:	mov    ecx,edi
   140001122:	mov    QWORD PTR [rsp+0x30],rax
   140001127:	mov    rax,QWORD PTR [rip+0x235fa]        # 0x140024728
   14000112e:	mov    QWORD PTR [rsp+0x28],rax
   140001133:	mov    DWORD PTR [rsp+0x20],0x1
   14000113b:	call   0x140003880
   140001140:	mov    rbx,QWORD PTR [rsp+0x80]
   140001148:	add    rsp,0x70
   14000114c:	pop    rdi
   14000114d:	ret    
   14000114e:	int3   
   14000114f:	int3   
   140001150:	mov    QWORD PTR [rsp+0x8],rbx
   140001155:	push   rdi
   140001156:	sub    rsp,0x20
   14000115a:	and    QWORD PTR [rsp+0x40],0x0
   140001160:	mov    rdi,rdx
   140001163:	mov    rbx,rcx
   140001166:	call   0x140004d8c
   14000116b:	lea    r8,[rsp+0x40]
   140001170:	mov    rcx,rbx
   140001173:	mov    rdx,rax
   140001176:	call   0x14000a120
   14000117b:	cmp    eax,0x1
   14000117e:	je     0x140001192
   140001180:	xor    eax,eax
   140001182:	jmp    0x14000120f
   140001187:	cmp    al,0x30
   140001189:	jl     0x140001198
   14000118b:	cmp    al,0x39
   14000118d:	jg     0x140001198
   14000118f:	inc    rbx
   140001192:	mov    al,BYTE PTR [rbx]
   140001194:	test   al,al
   140001196:	jne    0x140001187
   140001198:	mov    rcx,rbx
   14000119b:	call   0x140009fd0
   1400011a0:	cmp    rax,0x1
   1400011a4:	ja     0x140001180
   1400011a6:	cmp    BYTE PTR [rbx],0x0
   1400011a9:	je     0x140001202
   1400011ab:	cmp    BYTE PTR [rbx],0x47
   1400011ae:	je     0x1400011f7
   1400011b0:	cmp    BYTE PTR [rbx],0x4b
   1400011b3:	je     0x1400011ec
   1400011b5:	cmp    BYTE PTR [rbx],0x4d
   1400011b8:	je     0x1400011e1
   1400011ba:	cmp    BYTE PTR [rbx],0x54
   1400011bd:	je     0x1400011d3
   1400011bf:	cmp    BYTE PTR [rbx],0x67
   1400011c2:	je     0x1400011f7
   1400011c4:	cmp    BYTE PTR [rbx],0x6b
   1400011c7:	je     0x1400011ec
   1400011c9:	cmp    BYTE PTR [rbx],0x6d
   1400011cc:	je     0x1400011e1
   1400011ce:	cmp    BYTE PTR [rbx],0x74
   1400011d1:	jne    0x140001180
   1400011d3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400011d8:	shl    rcx,0x28
   1400011dc:	mov    QWORD PTR [rdi],rcx
   1400011df:	jmp    0x14000120a
   1400011e1:	mov    rax,QWORD PTR [rsp+0x40]
   1400011e6:	shl    rax,0x14
   1400011ea:	jmp    0x140001207
   1400011ec:	mov    rax,QWORD PTR [rsp+0x40]
   1400011f1:	shl    rax,0xa
   1400011f5:	jmp    0x140001207
   1400011f7:	mov    rax,QWORD PTR [rsp+0x40]
   1400011fc:	shl    rax,0x1e
   140001200:	jmp    0x140001207
   140001202:	mov    rax,QWORD PTR [rsp+0x40]
   140001207:	mov    QWORD PTR [rdi],rax
   14000120a:	mov    eax,0x1
   14000120f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001214:	add    rsp,0x20
   140001218:	pop    rdi
   140001219:	ret    
   14000121a:	int3   
   14000121b:	int3   
   14000121c:	mov    QWORD PTR [rsp+0x10],rbx
   140001221:	mov    QWORD PTR [rsp+0x18],rsi
   140001226:	push   rdi
   140001227:	sub    rsp,0x20
   14000122b:	mov    eax,DWORD PTR [rip+0x23503]        # 0x140024734
   140001231:	mov    rbx,rcx
   140001234:	mov    ecx,DWORD PTR [rip+0x234f6]        # 0x140024730
   14000123a:	mov    rsi,rdx
   14000123d:	cmp    ecx,eax
   14000123f:	jl     0x1400012b7
   140001241:	cmp    QWORD PTR [rip+0x234f7],0x0        # 0x140024740
   140001249:	jne    0x140001271
   14000124b:	mov    ecx,0x40
   140001250:	mov    DWORD PTR [rip+0x234da],0x4        # 0x140024734
   14000125a:	call   0x140004000
   14000125f:	mov    rdi,rax
   140001262:	mov    QWORD PTR [rip+0x234d7],rax        # 0x140024740
   140001269:	mov    ecx,DWORD PTR [rip+0x234c1]        # 0x140024730
   14000126f:	jmp    0x1400012be
   140001271:	add    eax,eax
   140001273:	movsxd rcx,eax
   140001276:	mov    DWORD PTR [rip+0x234b8],eax        # 0x140024734
   14000127c:	shl    rcx,0x4
   140001280:	call   0x140004000
   140001285:	movsxd r8,DWORD PTR [rip+0x234a4]        # 0x140024730
   14000128c:	mov    rdx,QWORD PTR [rip+0x234ad]        # 0x140024740
   140001293:	shl    r8,0x4
   140001297:	mov    rcx,rax
   14000129a:	mov    rdi,rax
   14000129d:	call   0x14000a170
   1400012a2:	mov    rcx,QWORD PTR [rip+0x23497]        # 0x140024740
   1400012a9:	call   0x140004084
   1400012ae:	mov    QWORD PTR [rip+0x2348b],rdi        # 0x140024740
   1400012b5:	jmp    0x140001269
   1400012b7:	mov    rdi,QWORD PTR [rip+0x23482]        # 0x140024740
   1400012be:	movsxd rax,ecx
   1400012c1:	inc    ecx
   1400012c3:	lea    rdx,[rip+0x191fe]        # 0x14001a4c8
   1400012ca:	add    rax,rax
   1400012cd:	mov    DWORD PTR [rip+0x2345d],ecx        # 0x140024730
   1400012d3:	mov    rcx,rbx
   1400012d6:	mov    QWORD PTR [rdi+rax*8],rbx
   1400012da:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
   1400012df:	call   0x1400040f8
   1400012e4:	test   eax,eax
   1400012e6:	jne    0x14000130c
   1400012e8:	lea    rcx,[rbx+0x4]
   1400012ec:	lea    rdx,[rsp+0x30]
   1400012f1:	call   0x140001150
   1400012f6:	mov    rcx,QWORD PTR [rip+0x2349b]        # 0x140024798
   1400012fd:	test   eax,eax
   1400012ff:	cmovne rcx,QWORD PTR [rsp+0x30]
   140001305:	mov    QWORD PTR [rip+0x2348c],rcx        # 0x140024798
   14000130c:	lea    rdx,[rip+0x191ad]        # 0x14001a4c0
   140001313:	mov    rcx,rbx
   140001316:	call   0x1400040f8
   14000131b:	test   eax,eax
   14000131d:	jne    0x140001343
   14000131f:	lea    rcx,[rbx+0x4]
   140001323:	lea    rdx,[rsp+0x30]
   140001328:	call   0x140001150
   14000132d:	mov    rcx,QWORD PTR [rip+0x2346c]        # 0x1400247a0
   140001334:	test   eax,eax
   140001336:	cmovne rcx,QWORD PTR [rsp+0x30]
   14000133c:	mov    QWORD PTR [rip+0x2345d],rcx        # 0x1400247a0
   140001343:	lea    rdx,[rip+0x1916e]        # 0x14001a4b8
   14000134a:	mov    rcx,rbx
   14000134d:	call   0x1400040f8
   140001352:	test   eax,eax
   140001354:	jne    0x14000137a
   140001356:	lea    rcx,[rbx+0x4]
   14000135a:	lea    rdx,[rsp+0x30]
   14000135f:	call   0x140001150
   140001364:	mov    rcx,QWORD PTR [rip+0x2343d]        # 0x1400247a8
   14000136b:	test   eax,eax
   14000136d:	cmovne rcx,QWORD PTR [rsp+0x30]
   140001373:	mov    QWORD PTR [rip+0x2342e],rcx        # 0x1400247a8
   14000137a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000137f:	mov    rsi,QWORD PTR [rsp+0x40]
   140001384:	add    rsp,0x20
   140001388:	pop    rdi
   140001389:	ret    
   14000138a:	int3   
   14000138b:	int3   
   14000138c:	test   rcx,rcx
   14000138f:	je     0x1400013f7
   140001391:	mov    QWORD PTR [rsp+0x8],rbx
   140001396:	mov    QWORD PTR [rsp+0x10],rsi
   14000139b:	push   rdi
   14000139c:	sub    rsp,0x20
   1400013a0:	mov    rdi,rcx
   1400013a3:	call   0x140006170
   1400013a8:	mov    rcx,rax
   1400013ab:	mov    rsi,rax
   1400013ae:	call   0x140009fd0
   1400013b3:	lea    rcx,[rax+0x13]
   1400013b7:	call   0x140004000
   1400013bc:	lea    rdx,[rip+0x190dd]        # 0x14001a4a0
   1400013c3:	mov    r8,rsi
   1400013c6:	mov    rcx,rax
   1400013c9:	mov    rbx,rax
   1400013cc:	call   0x14000a4a4
   1400013d1:	xor    edx,edx
   1400013d3:	mov    rcx,rbx
   1400013d6:	call   0x14000121c
   1400013db:	cmp    rsi,rdi
   1400013de:	je     0x1400013e8
   1400013e0:	mov    rcx,rsi
   1400013e3:	call   0x140004084
   1400013e8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400013ed:	mov    rsi,QWORD PTR [rsp+0x38]
   1400013f2:	add    rsp,0x20
   1400013f6:	pop    rdi
   1400013f7:	ret    
   1400013f8:	sub    rsp,0x28
   1400013fc:	mov    rax,QWORD PTR [rip+0x233ad]        # 0x1400247b0
   140001403:	test   rax,rax
   140001406:	jne    0x14000142e
   140001408:	lea    rdx,[rip+0x191b1]        # 0x14001a5c0
   14000140f:	call   0x140004d94
   140001414:	mov    QWORD PTR [rip+0x23395],rax        # 0x1400247b0
   14000141b:	test   rax,rax
   14000141e:	jne    0x14000142e
   140001420:	lea    rcx,[rip+0x19149]        # 0x14001a570
   140001427:	call   0x140004370
   14000142c:	xor    eax,eax
   14000142e:	add    rsp,0x28
   140001432:	ret    
   140001433:	int3   
   140001434:	mov    rax,rsp
   140001437:	mov    QWORD PTR [rax+0x8],rbx
   14000143b:	mov    QWORD PTR [rax+0x10],rbp
   14000143f:	mov    QWORD PTR [rax+0x18],rsi
   140001443:	mov    QWORD PTR [rax+0x20],rdi
   140001447:	push   r12
   140001449:	sub    rsp,0x30
   14000144d:	mov    rdi,rcx
   140001450:	mov    rcx,rdx
   140001453:	mov    rbx,rdx
   140001456:	call   0x140009fd0
   14000145b:	mov    rcx,rdi
   14000145e:	mov    r12,rax
   140001461:	call   0x1400013f8
   140001466:	mov    rbp,rax
   140001469:	test   rax,rax
   14000146c:	jne    0x140001497
   14000146e:	lea    rcx,[rip+0x190fb]        # 0x14001a570
   140001475:	call   0x140004370
   14000147a:	xor    eax,eax
   14000147c:	mov    rbx,QWORD PTR [rsp+0x40]
   140001481:	mov    rbp,QWORD PTR [rsp+0x48]
   140001486:	mov    rsi,QWORD PTR [rsp+0x50]
   14000148b:	mov    rdi,QWORD PTR [rsp+0x58]
   140001490:	add    rsp,0x30
   140001494:	pop    r12
   140001496:	ret    
   140001497:	test   rbx,rbx
   14000149a:	je     0x14000147a
   14000149c:	mov    rax,QWORD PTR [rdi]
   14000149f:	mov    edx,r12d
   1400014a2:	mov    rcx,rdi
   1400014a5:	call   QWORD PTR [rax+0x580]
   1400014ab:	mov    rsi,rax
   1400014ae:	test   rax,rax
   1400014b1:	je     0x14000147a
   1400014b3:	mov    r10,QWORD PTR [rdi]
   1400014b6:	mov    r9d,r12d
   1400014b9:	xor    r8d,r8d
   1400014bc:	mov    rdx,rax
   1400014bf:	mov    rcx,rdi
   1400014c2:	mov    QWORD PTR [rsp+0x20],rbx
   1400014c7:	call   QWORD PTR [r10+0x680]
   1400014ce:	mov    r11,QWORD PTR [rdi]
   1400014d1:	mov    rcx,rdi
   1400014d4:	call   QWORD PTR [r11+0x78]
   1400014d8:	test   rax,rax
   1400014db:	jne    0x14000147a
   1400014dd:	mov    r8,QWORD PTR [rip+0x232d4]        # 0x1400247b8
   1400014e4:	test   r8,r8
   1400014e7:	jne    0x140001519
   1400014e9:	mov    rax,QWORD PTR [rdi]
   1400014ec:	lea    r9,[rip+0x19105]        # 0x14001a5f8
   1400014f3:	lea    r8,[rip+0x190e6]        # 0x14001a5e0
   1400014fa:	mov    rdx,rbp
   1400014fd:	mov    rcx,rdi
   140001500:	call   QWORD PTR [rax+0x388]
   140001506:	mov    r8,rax
   140001509:	mov    QWORD PTR [rip+0x232a8],rax        # 0x1400247b8
   140001510:	test   rax,rax
   140001513:	je     0x14000146e
   140001519:	mov    rax,QWORD PTR [rdi]
   14000151c:	mov    r9d,0x1
   140001522:	mov    rdx,rbp
   140001525:	mov    rcx,rdi
   140001528:	mov    QWORD PTR [rsp+0x20],rsi
   14000152d:	call   QWORD PTR [rax+0x390]
   140001533:	mov    r8,QWORD PTR [rdi]
   140001536:	mov    rdx,rsi
   140001539:	mov    rcx,rdi
   14000153c:	mov    rbx,rax
   14000153f:	call   QWORD PTR [r8+0xb8]
   140001546:	mov    rax,rbx
   140001549:	jmp    0x14000147c
   14000154e:	int3   
   14000154f:	int3   
   140001550:	mov    QWORD PTR [rsp+0x8],rbx
   140001555:	mov    QWORD PTR [rsp+0x10],rbp
   14000155a:	mov    QWORD PTR [rsp+0x18],rsi
   14000155f:	push   rdi
   140001560:	push   r12
   140001562:	push   r13
   140001564:	sub    rsp,0x20
   140001568:	mov    rbp,rdx
   14000156b:	lea    rdx,[rip+0x1909e]        # 0x14001a610
   140001572:	mov    esi,r8d
   140001575:	mov    rbx,rcx
   140001578:	call   0x140004d94
   14000157d:	mov    r8,rax
   140001580:	test   rax,rax
   140001583:	jne    0x140001595
   140001585:	lea    rcx,[rip+0x18fe4]        # 0x14001a570
   14000158c:	call   0x140004370
   140001591:	xor    eax,eax
   140001593:	jmp    0x1400015fe
   140001595:	mov    rax,QWORD PTR [rbx]
   140001598:	xor    r9d,r9d
   14000159b:	mov    edx,esi
   14000159d:	mov    rcx,rbx
   1400015a0:	call   QWORD PTR [rax+0x560]
   1400015a6:	mov    rdi,rax
   1400015a9:	test   rax,rax
   1400015ac:	je     0x140001585
   1400015ae:	xor    r13d,r13d
   1400015b1:	test   esi,esi
   1400015b3:	jle    0x1400015fb
   1400015b5:	mov    rdx,QWORD PTR [rbp+0x0]
   1400015b9:	mov    rcx,rbx
   1400015bc:	call   0x140001434
   1400015c1:	add    rbp,0x8
   1400015c5:	mov    r12,rax
   1400015c8:	test   rax,rax
   1400015cb:	je     0x140001585
   1400015cd:	mov    r10,QWORD PTR [rbx]
   1400015d0:	mov    r9,rax
   1400015d3:	mov    r8d,r13d
   1400015d6:	mov    rdx,rdi
   1400015d9:	mov    rcx,rbx
   1400015dc:	call   QWORD PTR [r10+0x570]
   1400015e3:	mov    r11,QWORD PTR [rbx]
   1400015e6:	mov    rdx,r12
   1400015e9:	mov    rcx,rbx
   1400015ec:	call   QWORD PTR [r11+0xb8]
   1400015f3:	inc    r13d
   1400015f6:	cmp    r13d,esi
   1400015f9:	jl     0x1400015b5
   1400015fb:	mov    rax,rdi
   1400015fe:	mov    rbx,QWORD PTR [rsp+0x40]
   140001603:	mov    rbp,QWORD PTR [rsp+0x48]
   140001608:	mov    rsi,QWORD PTR [rsp+0x50]
   14000160d:	add    rsp,0x20
   140001611:	pop    r13
   140001613:	pop    r12
   140001615:	pop    rdi
   140001616:	ret    
   140001617:	int3   
   140001618:	mov    QWORD PTR [rsp+0x8],rbx
   14000161d:	mov    QWORD PTR [rsp+0x10],rbp
   140001622:	mov    QWORD PTR [rsp+0x18],rsi
   140001627:	push   rdi
   140001628:	push   r12
   14000162a:	push   r13
   14000162c:	sub    rsp,0x30
   140001630:	mov    r12,r8
   140001633:	mov    r13d,edx
   140001636:	mov    rbx,rcx
   140001639:	call   0x1400013f8
   14000163e:	mov    rsi,rax
   140001641:	test   rax,rax
   140001644:	jne    0x140001659
   140001646:	lea    rcx,[rip+0x18f23]        # 0x14001a570
   14000164d:	call   0x140004370
   140001652:	xor    eax,eax
   140001654:	jmp    0x140001705
   140001659:	call   0x1400040f0
   14000165e:	test   al,al
   140001660:	je     0x14000166c
   140001662:	call   0x1400042a0
   140001667:	mov    rdi,rax
   14000166a:	jmp    0x140001671
   14000166c:	mov    rdi,QWORD PTR [rsp+0x68]
   140001671:	mov    rax,QWORD PTR [rbx]
   140001674:	lea    r9,[rip+0x18ffd]        # 0x14001a678
   14000167b:	lea    r8,[rip+0x18fde]        # 0x14001a660
   140001682:	mov    rdx,rsi
   140001685:	mov    rcx,rbx
   140001688:	call   QWORD PTR [rax+0x388]
   14000168e:	mov    rbp,rax
   140001691:	test   rax,rax
   140001694:	je     0x140001646
   140001696:	mov    rdx,r12
   140001699:	mov    rcx,rbx
   14000169c:	call   0x140001434
   1400016a1:	mov    r10,QWORD PTR [rbx]
   1400016a4:	mov    r9d,0x1
   1400016aa:	mov    QWORD PTR [rsp+0x28],rax
   1400016af:	mov    r8,rbp
   1400016b2:	mov    rdx,rsi
   1400016b5:	mov    rcx,rbx
   1400016b8:	mov    DWORD PTR [rsp+0x20],r13d
   1400016bd:	call   QWORD PTR [r10+0x390]
   1400016c4:	mov    rbx,rax
   1400016c7:	call   0x1400040f0
   1400016cc:	test   al,al
   1400016ce:	je     0x140001702
   1400016d0:	call   0x1400042a0
   1400016d5:	sub    rax,rdi
   1400016d8:	mov    rcx,rax
   1400016db:	call   0x1400042ec
   1400016e0:	lea    rcx,[rip+0x18f51]        # 0x14001a638
   1400016e7:	mov    rdx,rax
   1400016ea:	call   0x140009c3c
   1400016ef:	lea    rdx,[rip+0x18d8a]        # 0x14001a480
   1400016f6:	lea    rcx,[rip+0x18f2b]        # 0x14001a628
   1400016fd:	call   0x140009c3c
   140001702:	mov    rax,rbx
   140001705:	mov    rbx,QWORD PTR [rsp+0x50]
   14000170a:	mov    rbp,QWORD PTR [rsp+0x58]
   14000170f:	mov    rsi,QWORD PTR [rsp+0x60]
   140001714:	add    rsp,0x30
   140001718:	pop    r13
   14000171a:	pop    r12
   14000171c:	pop    rdi
   14000171d:	ret    
   14000171e:	int3   
   14000171f:	int3   
   140001720:	mov    QWORD PTR [rsp+0x8],rbx
   140001725:	mov    QWORD PTR [rsp+0x18],rbp
   14000172a:	push   rsi
   14000172b:	push   rdi
   14000172c:	push   r12
   14000172e:	sub    rsp,0x150
   140001735:	mov    rax,QWORD PTR [rip+0x21984]        # 0x1400230c0
   14000173c:	xor    rax,rsp
   14000173f:	mov    QWORD PTR [rsp+0x140],rax
   140001747:	movsxd rbp,ecx
   14000174a:	lea    rcx,[rip+0x18fc7]        # 0x14001a718
   140001751:	mov    r12,rdx
   140001754:	mov    WORD PTR [rsp+0x20],0x3b
   14000175b:	call   0x140009da4
   140001760:	mov    esi,0x28
   140001765:	test   rax,rax
   140001768:	je     0x1400017a5
   14000176a:	mov    rcx,rax
   14000176d:	call   0x140006170
   140001772:	mov    rcx,rax
   140001775:	mov    rdi,rax
   140001778:	call   0x140009fd0
   14000177d:	lea    rcx,[rsi+rax*1]
   140001781:	call   0x140004000
   140001786:	lea    rdx,[rip+0x18f73]        # 0x14001a700
   14000178d:	mov    r8,rdi
   140001790:	mov    rcx,rax
   140001793:	mov    rbx,rax
   140001796:	call   0x14000a4a4
   14000179b:	xor    edx,edx
   14000179d:	mov    rcx,rbx
   1400017a0:	call   0x14000121c
   1400017a5:	lea    rcx,[rsp+0x30]
   1400017aa:	mov    edx,0x104
   1400017af:	call   0x1400041cc
   1400017b4:	test   al,al
   1400017b6:	jne    0x1400017cb
   1400017b8:	lea    rcx,[rip+0x18f11]        # 0x14001a6d0
   1400017bf:	call   0x140004370
   1400017c4:	xor    al,al
   1400017c6:	jmp    0x140001893
   1400017cb:	lea    rcx,[rsp+0x30]
   1400017d0:	call   0x140009fd0
   1400017d5:	lea    rcx,[rsi+rax*1]
   1400017d9:	call   0x140004000
   1400017de:	lea    r8,[rsp+0x30]
   1400017e3:	lea    rdx,[rip+0x18ece]        # 0x14001a6b8
   1400017ea:	mov    rcx,rax
   1400017ed:	mov    rbx,rax
   1400017f0:	call   0x14000a4a4
   1400017f5:	xor    edx,edx
   1400017f7:	mov    rcx,rbx
   1400017fa:	call   0x14000121c
   1400017ff:	xor    edi,edi
   140001801:	test   rbp,rbp
   140001804:	jle    0x140001828
   140001806:	mov    rcx,QWORD PTR [r12+rdi*8]
   14000180a:	call   0x140009fd0
   14000180f:	lea    rcx,[rsp+0x30]
   140001814:	lea    ebx,[rsi+rax*1]
   140001817:	call   0x140009fd0
   14000181c:	inc    rdi
   14000181f:	lea    esi,[rbx+rax*1+0x1]
   140001823:	cmp    rdi,rbp
   140001826:	jl     0x140001806
   140001828:	lea    eax,[rsi+0x1]
   14000182b:	movsxd rcx,eax
   14000182e:	call   0x140004000
   140001833:	lea    rdx,[rip+0x18e66]        # 0x14001a6a0
   14000183a:	mov    rcx,rax
   14000183d:	mov    rbx,rax
   140001840:	call   0x14000a780
   140001845:	xor    edi,edi
   140001847:	test   rbp,rbp
   14000184a:	jle    0x14000187a
   14000184c:	lea    rdx,[rsp+0x30]
   140001851:	mov    rcx,rbx
   140001854:	call   0x14000a6e0
   140001859:	mov    rdx,QWORD PTR [r12+rdi*8]
   14000185d:	mov    rcx,rbx
   140001860:	call   0x14000a6e0
   140001865:	lea    rdx,[rsp+0x20]
   14000186a:	mov    rcx,rbx
   14000186d:	call   0x14000a6e0
   140001872:	inc    rdi
   140001875:	cmp    rdi,rbp
   140001878:	jl     0x14000184c
   14000187a:	mov    rcx,rbx
   14000187d:	call   0x140009fd0
   140001882:	xor    edx,edx
   140001884:	mov    rcx,rbx
   140001887:	mov    BYTE PTR [rax+rbx*1-0x1],0x0
   14000188c:	call   0x14000121c
   140001891:	mov    al,0x1
   140001893:	mov    rcx,QWORD PTR [rsp+0x140]
   14000189b:	xor    rcx,rsp
   14000189e:	call   0x14000a850
   1400018a3:	lea    r11,[rsp+0x150]
   1400018ab:	mov    rbx,QWORD PTR [r11+0x20]
   1400018af:	mov    rbp,QWORD PTR [r11+0x30]
   1400018b3:	mov    rsp,r11
   1400018b6:	pop    r12
   1400018b8:	pop    rdi
   1400018b9:	pop    rsi
   1400018ba:	ret    
   1400018bb:	int3   
   1400018bc:	test   rcx,rcx
   1400018bf:	je     0x14000198e
   1400018c5:	mov    QWORD PTR [rsp+0x8],rbx
   1400018ca:	mov    QWORD PTR [rsp+0x10],rbp
   1400018cf:	mov    QWORD PTR [rsp+0x18],rsi
   1400018d4:	push   rdi
   1400018d5:	push   r12
   1400018d7:	push   r13
   1400018d9:	sub    rsp,0x20
   1400018dd:	mov    r13,r8
   1400018e0:	movsxd rsi,edx
   1400018e3:	mov    rbp,rcx
   1400018e6:	xor    ebx,ebx
   1400018e8:	call   0x140009fd0
   1400018ed:	mov    edi,ebx
   1400018ef:	mov    r12,rax
   1400018f2:	test   rsi,rsi
   1400018f5:	jle    0x14000190e
   1400018f7:	mov    rcx,QWORD PTR [r13+rdi*8+0x0]
   1400018fc:	call   0x140009fd0
   140001901:	inc    rdi
   140001904:	lea    r12,[r12+rax*1+0x1]
   140001909:	cmp    rdi,rsi
   14000190c:	jl     0x1400018f7
   14000190e:	lea    rcx,[rip+0x18e13]        # 0x14001a728
   140001915:	call   0x140009fd0
   14000191a:	lea    rcx,[rax+r12*1+0x1]
   14000191f:	call   0x140004000
   140001924:	lea    rdx,[rip+0x18dfd]        # 0x14001a728
   14000192b:	mov    rcx,rax
   14000192e:	mov    rdi,rax
   140001931:	mov    BYTE PTR [rax],bl
   140001933:	call   0x14000a6e0
   140001938:	mov    rdx,rbp
   14000193b:	mov    rcx,rdi
   14000193e:	call   0x14000a6e0
   140001943:	test   rsi,rsi
   140001946:	jle    0x14000196c
   140001948:	lea    rdx,[rip+0x18dd5]        # 0x14001a724
   14000194f:	mov    rcx,rdi
   140001952:	call   0x14000a6e0
   140001957:	mov    rdx,QWORD PTR [r13+rbx*8+0x0]
   14000195c:	mov    rcx,rdi
   14000195f:	call   0x14000a6e0
   140001964:	inc    rbx
   140001967:	cmp    rbx,rsi
   14000196a:	jl     0x140001948
   14000196c:	xor    edx,edx
   14000196e:	mov    rcx,rdi
   140001971:	call   0x14000121c
   140001976:	mov    rbx,QWORD PTR [rsp+0x40]
   14000197b:	mov    rbp,QWORD PTR [rsp+0x48]
   140001980:	mov    rsi,QWORD PTR [rsp+0x50]
   140001985:	add    rsp,0x20
   140001989:	pop    r13
   14000198b:	pop    r12
   14000198d:	pop    rdi
   14000198e:	ret    
   14000198f:	int3   
   140001990:	mov    rax,rsp
   140001993:	mov    QWORD PTR [rax+0x8],rbx
   140001997:	mov    QWORD PTR [rax+0x10],rbp
   14000199b:	mov    QWORD PTR [rax+0x18],rsi
   14000199f:	mov    QWORD PTR [rax+0x20],rdi
   1400019a3:	push   r12
   1400019a5:	sub    rsp,0x50
   1400019a9:	mov    rbx,rdx
   1400019ac:	mov    rsi,rcx
   1400019af:	call   0x1400013f8
   1400019b4:	mov    rbp,rax
   1400019b7:	test   rax,rax
   1400019ba:	jne    0x1400019cd
   1400019bc:	lea    rcx,[rip+0x18bad]        # 0x14001a570
   1400019c3:	call   0x140004370
   1400019c8:	jmp    0x140001a53
   1400019cd:	mov    rax,QWORD PTR [rsi]
   1400019d0:	lea    r9,[rip+0x18dc9]        # 0x14001a7a0
   1400019d7:	lea    r8,[rip+0x18db2]        # 0x14001a790
   1400019de:	mov    rdx,rbp
   1400019e1:	mov    rcx,rsi
   1400019e4:	call   QWORD PTR [rax+0x388]
   1400019ea:	mov    r12,rax
   1400019ed:	test   rax,rax
   1400019f0:	je     0x1400019bc
   1400019f2:	mov    rax,QWORD PTR [rsi]
   1400019f5:	mov    rdx,rbx
   1400019f8:	mov    rcx,rsi
   1400019fb:	call   QWORD PTR [rax+0x538]
   140001a01:	mov    rdi,QWORD PTR [rsi]
   140001a04:	mov    rbx,rax
   140001a07:	call   0x1400045d0
   140001a0c:	mov    rcx,QWORD PTR [rip+0x22d85]        # 0x140024798
   140001a13:	movzx  r11d,al
   140001a17:	mov    r9d,0x1
   140001a1d:	mov    r8,r12
   140001a20:	mov    DWORD PTR [rsp+0x40],r11d
   140001a25:	mov    QWORD PTR [rsp+0x38],rcx
   140001a2a:	mov    rcx,QWORD PTR [rip+0x22d6f]        # 0x1400247a0
   140001a31:	mov    QWORD PTR [rsp+0x30],rcx
   140001a36:	mov    rcx,QWORD PTR [rip+0x22d6b]        # 0x1400247a8
   140001a3d:	mov    rdx,rbp
   140001a40:	mov    QWORD PTR [rsp+0x28],rcx
   140001a45:	mov    rcx,rsi
   140001a48:	mov    QWORD PTR [rsp+0x20],rbx
   140001a4d:	call   QWORD PTR [rdi+0x468]
   140001a53:	mov    rbx,QWORD PTR [rsp+0x60]
   140001a58:	mov    rbp,QWORD PTR [rsp+0x68]
   140001a5d:	mov    rsi,QWORD PTR [rsp+0x70]
   140001a62:	mov    rdi,QWORD PTR [rsp+0x78]
   140001a67:	add    rsp,0x50
   140001a6b:	pop    r12
   140001a6d:	ret    
   140001a6e:	int3   
   140001a6f:	int3   
   140001a70:	mov    QWORD PTR [rsp+0x8],rbx
   140001a75:	mov    QWORD PTR [rsp+0x10],rbp
   140001a7a:	push   rdi
   140001a7b:	push   r12
   140001a7d:	push   r13
   140001a7f:	push   r14
   140001a81:	push   r15
   140001a83:	sub    rsp,0x30
   140001a87:	mov    bl,dl
   140001a89:	mov    rdi,rcx
   140001a8c:	call   0x1400013f8
   140001a91:	mov    rbp,rax
   140001a94:	test   rax,rax
   140001a97:	jne    0x140001aaa
   140001a99:	lea    rcx,[rip+0x18ad0]        # 0x14001a570
   140001aa0:	call   0x140004370
   140001aa5:	jmp    0x140001da1
   140001aaa:	mov    rax,QWORD PTR [rdi]
   140001aad:	mov    rdx,rbp
   140001ab0:	mov    rcx,rdi
   140001ab3:	test   bl,bl
   140001ab5:	je     0x140001aed
   140001ab7:	lea    r9,[rip+0x18dde]        # 0x14001a89c
   140001abe:	lea    r8,[rip+0x18dc3]        # 0x14001a888
   140001ac5:	call   QWORD PTR [rax+0x388]
   140001acb:	mov    r8,rax
   140001ace:	test   rax,rax
   140001ad1:	je     0x140001a99
   140001ad3:	mov    rax,QWORD PTR [rdi]
   140001ad6:	mov    r9d,0x1
   140001adc:	mov    rdx,rbp
   140001adf:	mov    rcx,rdi
   140001ae2:	call   QWORD PTR [rax+0x468]
   140001ae8:	jmp    0x140001da1
   140001aed:	lea    r9,[rip+0x18d7c]        # 0x14001a870
   140001af4:	lea    r8,[rip+0x18d65]        # 0x14001a860
   140001afb:	call   QWORD PTR [rax+0x388]
   140001b01:	mov    rbx,rax
   140001b04:	test   rax,rax
   140001b07:	je     0x140001a99
   140001b09:	mov    rax,QWORD PTR [rdi]
   140001b0c:	lea    r9,[rip+0x18d25]        # 0x14001a838
   140001b13:	lea    r8,[rip+0x18d06]        # 0x14001a820
   140001b1a:	mov    rdx,rbp
   140001b1d:	mov    rcx,rdi
   140001b20:	call   QWORD PTR [rax+0x388]
   140001b26:	mov    r14,rax
   140001b29:	test   rax,rax
   140001b2c:	je     0x140001a99
   140001b32:	mov    rax,QWORD PTR [rdi]
   140001b35:	lea    r9,[rip+0x18cfc]        # 0x14001a838
   140001b3c:	lea    r8,[rip+0x18cc5]        # 0x14001a808
   140001b43:	mov    rdx,rbp
   140001b46:	mov    rcx,rdi
   140001b49:	call   QWORD PTR [rax+0x388]
   140001b4f:	mov    QWORD PTR [rsp+0x70],rax
   140001b54:	test   rax,rax
   140001b57:	je     0x140001a99
   140001b5d:	mov    rax,QWORD PTR [rdi]
   140001b60:	lea    r9,[rip+0x18c89]        # 0x14001a7f0
   140001b67:	lea    r8,[rip+0x18c6a]        # 0x14001a7d8
   140001b6e:	mov    rdx,rbp
   140001b71:	mov    rcx,rdi
   140001b74:	call   QWORD PTR [rax+0x388]
   140001b7a:	mov    r15,rax
   140001b7d:	test   rax,rax
   140001b80:	je     0x140001a99
   140001b86:	mov    rax,QWORD PTR [rdi]
   140001b89:	lea    r9,[rip+0x18d0c]        # 0x14001a89c
   140001b90:	lea    r8,[rip+0x18c29]        # 0x14001a7c0
   140001b97:	mov    rdx,rbp
   140001b9a:	mov    rcx,rdi
   140001b9d:	call   QWORD PTR [rax+0x388]
   140001ba3:	mov    QWORD PTR [rsp+0x78],rax
   140001ba8:	test   rax,rax
   140001bab:	je     0x140001a99
   140001bb1:	mov    rax,QWORD PTR [rdi]
   140001bb4:	mov    rdx,QWORD PTR [rip+0x22b8d]        # 0x140024748
   140001bbb:	mov    rcx,rdi
   140001bbe:	call   QWORD PTR [rax+0x538]
   140001bc4:	mov    r10,QWORD PTR [rdi]
   140001bc7:	mov    r8,rbx
   140001bca:	mov    rdx,rbp
   140001bcd:	mov    rcx,rdi
   140001bd0:	mov    r9,rax
   140001bd3:	call   QWORD PTR [r10+0x468]
   140001bda:	mov    rdx,QWORD PTR [rip+0x22ba7]        # 0x140024788
   140001be1:	cmp    DWORD PTR [rdx+0x8],0x0
   140001be5:	je     0x140001bed
   140001be7:	cmp    DWORD PTR [rdx+0x8],0x4
   140001beb:	jne    0x140001c3b
   140001bed:	mov    rax,QWORD PTR [rdi]
   140001bf0:	mov    rdx,QWORD PTR [rdx]
   140001bf3:	mov    rcx,rdi
   140001bf6:	call   QWORD PTR [rax+0x538]
   140001bfc:	mov    rcx,QWORD PTR [rip+0x22b85]        # 0x140024788
   140001c03:	mov    r8,QWORD PTR [rdi]
   140001c06:	mov    rdx,QWORD PTR [rcx]
   140001c09:	mov    rcx,rdi
   140001c0c:	mov    rbx,rax
   140001c0f:	inc    rdx
   140001c12:	call   QWORD PTR [r8+0x538]
   140001c19:	mov    r10,QWORD PTR [rdi]
   140001c1c:	mov    r9,rbx
   140001c1f:	mov    r8,r14
   140001c22:	mov    rdx,rbp
   140001c25:	mov    rcx,rdi
   140001c28:	mov    QWORD PTR [rsp+0x20],rax
   140001c2d:	call   QWORD PTR [r10+0x468]
   140001c34:	mov    rdx,QWORD PTR [rip+0x22b4d]        # 0x140024788
   140001c3b:	mov    eax,DWORD PTR [rip+0x22b33]        # 0x140024774
   140001c41:	mov    r13d,0x1
   140001c47:	cmp    eax,r13d
   140001c4a:	jle    0x140001cba
   140001c4c:	lea    r12d,[r13+0x1f]
   140001c50:	cmp    DWORD PTR [r12+rdx*1+0x8],0x0
   140001c56:	jne    0x140001cae
   140001c58:	mov    rax,QWORD PTR [rdi]
   140001c5b:	mov    rdx,QWORD PTR [r12+rdx*1]
   140001c5f:	mov    rcx,rdi
   140001c62:	call   QWORD PTR [rax+0x538]
   140001c68:	mov    rcx,QWORD PTR [rip+0x22b19]        # 0x140024788
   140001c6f:	mov    r8,QWORD PTR [rdi]
   140001c72:	mov    rdx,QWORD PTR [r12+rcx*1]
   140001c76:	mov    rcx,rdi
   140001c79:	mov    rbx,rax
   140001c7c:	inc    rdx
   140001c7f:	call   QWORD PTR [r8+0x538]
   140001c86:	mov    r10,QWORD PTR [rdi]
   140001c89:	mov    r9,rbx
   140001c8c:	mov    r8,r14
   140001c8f:	mov    rdx,rbp
   140001c92:	mov    rcx,rdi
   140001c95:	mov    QWORD PTR [rsp+0x20],rax
   140001c9a:	call   QWORD PTR [r10+0x468]
   140001ca1:	mov    rdx,QWORD PTR [rip+0x22ae0]        # 0x140024788
   140001ca8:	mov    eax,DWORD PTR [rip+0x22ac6]        # 0x140024774
   140001cae:	inc    r13d
   140001cb1:	add    r12,0x20
   140001cb5:	cmp    r13d,eax
   140001cb8:	jl     0x140001c50
   140001cba:	mov    r13d,0x1
   140001cc0:	cmp    eax,r13d
   140001cc3:	jle    0x140001d39
   140001cc5:	mov    r14,QWORD PTR [rsp+0x70]
   140001cca:	lea    r12d,[r13+0x1f]
   140001cce:	cmp    DWORD PTR [r12+rdx*1+0x8],0x1
   140001cd4:	jne    0x140001d2d
   140001cd6:	mov    rax,QWORD PTR [rdi]
   140001cd9:	mov    rdx,QWORD PTR [r12+rdx*1]
   140001cdd:	mov    rcx,rdi
   140001ce0:	call   QWORD PTR [rax+0x538]
   140001ce6:	mov    rcx,QWORD PTR [rip+0x22a9b]        # 0x140024788
   140001ced:	mov    r8,QWORD PTR [rdi]
   140001cf0:	mov    rdx,QWORD PTR [r12+rcx*1+0x10]
   140001cf5:	mov    rcx,rdi
   140001cf8:	mov    rbx,rax
   140001cfb:	inc    rdx
   140001cfe:	call   QWORD PTR [r8+0x538]
   140001d05:	mov    r10,QWORD PTR [rdi]
   140001d08:	mov    r9,rbx
   140001d0b:	mov    r8,r14
   140001d0e:	mov    rdx,rbp
   140001d11:	mov    rcx,rdi
   140001d14:	mov    QWORD PTR [rsp+0x20],rax
   140001d19:	call   QWORD PTR [r10+0x468]
   140001d20:	mov    rdx,QWORD PTR [rip+0x22a61]        # 0x140024788
   140001d27:	mov    eax,DWORD PTR [rip+0x22a47]        # 0x140024774
   140001d2d:	inc    r13d
   140001d30:	add    r12,0x20
   140001d34:	cmp    r13d,eax
   140001d37:	jl     0x140001cce
   140001d39:	call   0x1400045d0
   140001d3e:	mov    rcx,QWORD PTR [rip+0x22a43]        # 0x140024788
   140001d45:	mov    rdx,QWORD PTR [rcx]
   140001d48:	mov    bl,al
   140001d4a:	inc    rdx
   140001d4d:	cmp    DWORD PTR [rcx+0x8],0x4
   140001d51:	jne    0x140001d5e
   140001d53:	test   al,al
   140001d55:	je     0x140001d5e
   140001d57:	mov    rdx,QWORD PTR [rcx+0x18]
   140001d5b:	inc    rdx
   140001d5e:	mov    rax,QWORD PTR [rdi]
   140001d61:	mov    rcx,rdi
   140001d64:	call   QWORD PTR [rax+0x538]
   140001d6a:	mov    r10,QWORD PTR [rdi]
   140001d6d:	movzx  r9d,bl
   140001d71:	mov    r8,r15
   140001d74:	mov    rdx,rbp
   140001d77:	mov    rcx,rdi
   140001d7a:	mov    QWORD PTR [rsp+0x20],rax
   140001d7f:	call   QWORD PTR [r10+0x468]
   140001d86:	mov    r11,QWORD PTR [rdi]
   140001d89:	mov    r8,QWORD PTR [rsp+0x78]
   140001d8e:	mov    r9d,0x1
   140001d94:	mov    rdx,rbp
   140001d97:	mov    rcx,rdi
   140001d9a:	call   QWORD PTR [r11+0x468]
   140001da1:	mov    rbx,QWORD PTR [rsp+0x60]
   140001da6:	mov    rbp,QWORD PTR [rsp+0x68]
   140001dab:	add    rsp,0x30
   140001daf:	pop    r15
   140001db1:	pop    r14
   140001db3:	pop    r13
   140001db5:	pop    r12
   140001db7:	pop    rdi
   140001db8:	ret    
   140001db9:	int3   
   140001dba:	int3   
   140001dbb:	int3   
   140001dbc:	mov    QWORD PTR [rsp+0x8],rbx
   140001dc1:	mov    QWORD PTR [rsp+0x10],rsi
   140001dc6:	push   rdi
   140001dc7:	sub    rsp,0x20
   140001dcb:	lea    rdx,[rip+0x18ad2]        # 0x14001a8a4
   140001dd2:	mov    rdi,rcx
   140001dd5:	call   0x1400040f8
   140001dda:	test   eax,eax
   140001ddc:	jne    0x140001de2
   140001dde:	add    rdi,0x2
   140001de2:	xor    ebx,ebx
   140001de4:	cmp    DWORD PTR [rip+0x2298a],ebx        # 0x140024774
   140001dea:	jle    0x140001e13
   140001dec:	xor    esi,esi
   140001dee:	mov    rdx,QWORD PTR [rip+0x22993]        # 0x140024788
   140001df5:	mov    rcx,rdi
   140001df8:	mov    rdx,QWORD PTR [rsi+rdx*1]
   140001dfc:	call   0x14000a880
   140001e01:	test   eax,eax
   140001e03:	je     0x140001e26
   140001e05:	inc    ebx
   140001e07:	add    rsi,0x20
   140001e0b:	cmp    ebx,DWORD PTR [rip+0x22963]        # 0x140024774
   140001e11:	jl     0x140001dee
   140001e13:	or     eax,0xffffffff
   140001e16:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e1b:	mov    rsi,QWORD PTR [rsp+0x38]
   140001e20:	add    rsp,0x20
   140001e24:	pop    rdi
   140001e25:	ret    
   140001e26:	mov    eax,ebx
   140001e28:	jmp    0x140001e16
   140001e2a:	int3   
   140001e2b:	int3   
   140001e2c:	mov    QWORD PTR [rsp+0x10],rbx
   140001e31:	mov    QWORD PTR [rsp+0x18],rsi
   140001e36:	push   rdi
   140001e37:	sub    rsp,0x20
   140001e3b:	lea    rcx,[rip+0x18a96]        # 0x14001a8d8
   140001e42:	call   0x140009da4
   140001e47:	lea    rcx,[rip+0x18a72]        # 0x14001a8c0
   140001e4e:	mov    rsi,rax
   140001e51:	call   0x140009da4
   140001e56:	mov    rbx,rax
   140001e59:	test   rsi,rsi
   140001e5c:	je     0x140001e91
   140001e5e:	lea    r8,[rsp+0x30]
   140001e63:	mov    rdx,rax
   140001e66:	mov    rcx,rsi
   140001e69:	call   0x140006bd0
   140001e6e:	mov    rdi,rax
   140001e71:	test   rax,rax
   140001e74:	je     0x140001ea3
   140001e76:	call   0x140006280
   140001e7b:	mov    edx,DWORD PTR [rsp+0x30]
   140001e7f:	mov    rcx,rdi
   140001e82:	call   0x1400061f8
   140001e87:	mov    rcx,rdi
   140001e8a:	call   0x140004084
   140001e8f:	jmp    0x140001ea3
   140001e91:	test   rax,rax
   140001e94:	je     0x140001eea
   140001e96:	call   0x140006280
   140001e9b:	mov    rcx,rbx
   140001e9e:	call   0x140006240
   140001ea3:	mov    rdx,rsi
   140001ea6:	mov    rcx,rbx
   140001ea9:	call   0x1400062b0
   140001eae:	lea    rcx,[rip+0x189f3]        # 0x14001a8a8
   140001eb5:	call   0x140004d34
   140001eba:	lea    rcx,[rip+0x189ff]        # 0x14001a8c0
   140001ec1:	call   0x140004d34
   140001ec6:	lea    rcx,[rip+0x18a0b]        # 0x14001a8d8
   140001ecd:	call   0x140004d34
   140001ed2:	mov    rcx,QWORD PTR [rip+0x228a7]        # 0x140024780
   140001ed9:	call   0x140004084
   140001ede:	mov    rcx,QWORD PTR [rip+0x22893]        # 0x140024778
   140001ee5:	call   0x140004084
   140001eea:	mov    rbx,QWORD PTR [rsp+0x38]
   140001eef:	mov    rsi,QWORD PTR [rsp+0x40]
   140001ef4:	add    rsp,0x20
   140001ef8:	pop    rdi
   140001ef9:	ret    
   140001efa:	int3   
   140001efb:	int3   
   140001efc:	mov    rax,QWORD PTR [rip+0x22855]        # 0x140024758
   140001f03:	ret    
   140001f04:	mov    rax,QWORD PTR [rip+0x2283d]        # 0x140024748
   140001f0b:	ret    
   140001f0c:	mov    eax,DWORD PTR [rip+0x2285e]        # 0x140024770
   140001f12:	ret    
   140001f13:	int3   
   140001f14:	mov    rax,rsp
   140001f17:	mov    QWORD PTR [rax+0x8],rcx
   140001f1b:	mov    QWORD PTR [rax+0x10],rdx
   140001f1f:	mov    QWORD PTR [rax+0x18],r8
   140001f23:	mov    QWORD PTR [rax+0x20],r9
   140001f27:	push   rbx
   140001f28:	sub    rsp,0x20
   140001f2c:	lea    rbx,[rax+0x10]
   140001f30:	call   0x14000abc8
   140001f35:	mov    rdx,QWORD PTR [rsp+0x30]
   140001f3a:	lea    rcx,[rax+0x60]
   140001f3e:	mov    r8,rbx
   140001f41:	call   0x14000aba4
   140001f46:	call   0x14000abc8
   140001f4b:	lea    rdx,[rip+0x18ad2]        # 0x14001aa24
   140001f52:	lea    rcx,[rax+0x60]
   140001f56:	call   0x14000a930
   140001f5b:	add    rsp,0x20
   140001f5f:	pop    rbx
   140001f60:	ret    
   140001f61:	int3   
   140001f62:	int3   
   140001f63:	int3   
   140001f64:	rex push rbp
   140001f66:	push   rbx
   140001f67:	push   rsi
   140001f68:	push   rdi
   140001f69:	push   r12
   140001f6b:	push   r13
   140001f6d:	push   r14
   140001f6f:	push   r15
   140001f71:	mov    rbp,rsp
   140001f74:	sub    rsp,0x58
   140001f78:	mov    eax,DWORD PTR [rcx]
   140001f7a:	movsxd r14,DWORD PTR [rcx+0x10]
   140001f7e:	mov    r15,QWORD PTR [rcx+0x18]
   140001f82:	mov    r13,QWORD PTR [rcx+0x20]
   140001f86:	mov    DWORD PTR [rbp+0x48],eax
   140001f89:	mov    rax,QWORD PTR [rcx+0x8]
   140001f8d:	mov    QWORD PTR [rbp-0x38],rax
   140001f91:	mov    rax,QWORD PTR [rcx+0x28]
   140001f95:	xor    edi,edi
   140001f97:	mov    QWORD PTR [rbp-0x20],rax
   140001f9b:	mov    rax,QWORD PTR [rcx+0x30]
   140001f9f:	mov    DWORD PTR [rbp+0x50],r14d
   140001fa3:	mov    QWORD PTR [rbp+0x60],rdi
   140001fa7:	mov    QWORD PTR [rbp+0x58],rdi
   140001fab:	mov    QWORD PTR [rbp-0x18],rax
   140001faf:	call   0x140004eb4
   140001fb4:	call   0x1400042a0
   140001fb9:	lea    r8d,[rdi+0x18]
   140001fbd:	lea    rcx,[rbp-0x28]
   140001fc1:	xor    edx,edx
   140001fc3:	mov    QWORD PTR [rbp-0x30],rax
   140001fc7:	call   0x14000a560
   140001fcc:	mov    eax,DWORD PTR [rip+0x2275e]        # 0x140024730
   140001fd2:	mov    DWORD PTR [rbp-0x28],0x10002
   140001fd9:	mov    DWORD PTR [rbp-0x24],eax
   140001fdc:	mov    rax,QWORD PTR [rip+0x2275d]        # 0x140024740
   140001fe3:	mov    BYTE PTR [rbp-0x18],dil
   140001fe7:	mov    QWORD PTR [rbp-0x20],rax
   140001feb:	call   0x1400040f0
   140001ff0:	lea    esi,[rdi+0x1]
   140001ff3:	test   al,al
   140001ff5:	je     0x14000207b
   140001ffb:	lea    rcx,[rip+0x18556]        # 0x14001a558
   140002002:	call   0x140009c3c
   140002007:	mov    edx,DWORD PTR [rbp-0x28]
   14000200a:	lea    rcx,[rip+0x1852f]        # 0x14001a540
   140002011:	call   0x140009c3c
   140002016:	cmp    BYTE PTR [rbp-0x18],dil
   14000201a:	lea    rax,[rip+0x1850f]        # 0x14001a530
   140002021:	lea    rdx,[rip+0x184f8]        # 0x14001a520
   140002028:	lea    rcx,[rip+0x184d1]        # 0x14001a500
   14000202f:	cmovne rdx,rax
   140002033:	call   0x140009c3c
   140002038:	mov    edx,DWORD PTR [rbp-0x24]
   14000203b:	lea    rcx,[rip+0x184a6]        # 0x14001a4e8
   140002042:	call   0x140009c3c
   140002047:	cmp    DWORD PTR [rip+0x226e3],edi        # 0x140024730
   14000204d:	mov    r12d,edi
   140002050:	jle    0x14000207b
   140002052:	mov    ebx,edi
   140002054:	mov    r8,QWORD PTR [rbp-0x20]
   140002058:	lea    rcx,[rip+0x18471]        # 0x14001a4d0
   14000205f:	mov    edx,r12d
   140002062:	mov    r8,QWORD PTR [rbx+r8*1]
   140002066:	call   0x140009c3c
   14000206b:	add    r12d,esi
   14000206e:	add    rbx,0x10
   140002072:	cmp    r12d,DWORD PTR [rip+0x226b7]        # 0x140024730
   140002079:	jl     0x140002054
   14000207b:	lea    r8,[rbp-0x28]
   14000207f:	lea    rdx,[rbp+0x58]
   140002083:	lea    rcx,[rbp+0x60]
   140002087:	call   r13
   14000208a:	mov    rcx,QWORD PTR [rip+0x226af]        # 0x140024740
   140002091:	mov    ebx,eax
   140002093:	call   0x140004084
   140002098:	test   ebx,ebx
   14000209a:	je     0x1400020b0
   14000209c:	lea    rcx,[rip+0x18a8d]        # 0x14001ab30
   1400020a3:	call   0x140004370
   1400020a8:	mov    ecx,esi
   1400020aa:	call   0x140009bdc
   1400020af:	int3   
   1400020b0:	mov    rdx,QWORD PTR [rip+0x226b1]        # 0x140024768
   1400020b7:	test   rdx,rdx
   1400020ba:	je     0x1400020d8
   1400020bc:	mov    rcx,QWORD PTR [rbp+0x58]
   1400020c0:	call   0x140001990
   1400020c5:	mov    rcx,QWORD PTR [rbp+0x58]
   1400020c9:	mov    rax,QWORD PTR [rcx]
   1400020cc:	call   QWORD PTR [rax+0x78]
   1400020cf:	test   rax,rax
   1400020d2:	jne    0x1400023b5
   1400020d8:	cmp    BYTE PTR [rip+0x22681],dil        # 0x140024760
   1400020df:	mov    r12b,BYTE PTR [rip+0x2267b]        # 0x140024761
   1400020e6:	jne    0x1400020f1
   1400020e8:	test   r12b,r12b
   1400020eb:	je     0x1400021a0
   1400020f1:	mov    rbx,QWORD PTR [rbp+0x58]
   1400020f5:	lea    rdx,[rip+0x1867c]        # 0x14001a778
   1400020fc:	mov    rcx,rbx
   1400020ff:	call   0x140004d94
   140002104:	mov    r13,rax
   140002107:	test   rax,rax
   14000210a:	jne    0x14000211a
   14000210c:	lea    rcx,[rip+0x1845d]        # 0x14001a570
   140002113:	call   0x140004370
   140002118:	jmp    0x14000215c
   14000211a:	mov    rax,QWORD PTR [rbx]
   14000211d:	lea    rcx,[rip+0x1864c]        # 0x14001a770
   140002124:	lea    r8,[rip+0x1863d]        # 0x14001a768
   14000212b:	cmp    r12b,sil
   14000212e:	lea    r9,[rip+0x1862f]        # 0x14001a764
   140002135:	mov    rdx,r13
   140002138:	cmove  r8,rcx
   14000213c:	mov    rcx,rbx
   14000213f:	call   QWORD PTR [rax+0x388]
   140002145:	mov    r8,rax
   140002148:	test   rax,rax
   14000214b:	je     0x14000210c
   14000214d:	mov    rax,QWORD PTR [rbx]
   140002150:	mov    rdx,r13
   140002153:	mov    rcx,rbx
   140002156:	call   QWORD PTR [rax+0x468]
   14000215c:	mov    rcx,QWORD PTR [rbp+0x58]
   140002160:	mov    rax,QWORD PTR [rcx]
   140002163:	call   QWORD PTR [rax+0x78]
   140002166:	test   rax,rax
   140002169:	je     0x140002197
   14000216b:	mov    rcx,QWORD PTR [rbp+0x58]
   14000216f:	call   0x1400045a0
   140002174:	mov    rcx,QWORD PTR [rbp+0x60]
   140002178:	mov    rax,QWORD PTR [rcx]
   14000217b:	call   QWORD PTR [rax+0x28]
   14000217e:	test   eax,eax
   140002180:	je     0x140002190
   140002182:	lea    rcx,[rip+0x18927]        # 0x14001aab0
   140002189:	call   0x140004370
   14000218e:	mov    edi,esi
   140002190:	mov    esi,edi
   140002192:	jmp    0x1400023d8
   140002197:	cmp    BYTE PTR [rip+0x225c2],dil        # 0x140024760
   14000219e:	jne    0x140002174
   1400021a0:	mov    dl,BYTE PTR [rip+0x225bd]        # 0x140024763
   1400021a6:	test   dl,dl
   1400021a8:	jne    0x14000239d
   1400021ae:	cmp    BYTE PTR [rip+0x225ad],dil        # 0x140024762
   1400021b5:	jne    0x14000239d
   1400021bb:	test   r15,r15
   1400021be:	je     0x14000239d
   1400021c4:	test   r14d,r14d
   1400021c7:	je     0x14000239d
   1400021cd:	cmp    DWORD PTR [rip+0x225a1],edi        # 0x140024774
   1400021d3:	mov    rcx,QWORD PTR [rip+0x225ae]        # 0x140024788
   1400021da:	mov    r12d,edi
   1400021dd:	jle    0x140002206
   1400021df:	mov    rbx,rdi
   1400021e2:	mov    rcx,QWORD PTR [rbx+rcx*1]
   1400021e6:	call   0x140004084
   1400021eb:	mov    rcx,QWORD PTR [rip+0x22596]        # 0x140024788
   1400021f2:	add    r12d,esi
   1400021f5:	mov    QWORD PTR [rbx+rcx*1],rdi
   1400021f9:	add    rbx,0x20
   1400021fd:	cmp    r12d,DWORD PTR [rip+0x22570]        # 0x140024774
   140002204:	jl     0x1400021e2
   140002206:	call   0x140004084
   14000220b:	call   0x1400040f0
   140002210:	test   al,al
   140002212:	je     0x140002234
   140002214:	call   0x1400042a0
   140002219:	sub    rax,QWORD PTR [rbp-0x30]
   14000221d:	mov    rcx,rax
   140002220:	call   0x1400042ec
   140002225:	lea    rcx,[rip+0x1885c]        # 0x14001aa88
   14000222c:	mov    rdx,rax
   14000222f:	call   0x14000408c
   140002234:	call   0x1400040f0
   140002239:	test   al,al
   14000223b:	je     0x14000229b
   14000223d:	lea    rax,[rip+0x20de4]        # 0x140023028
   140002244:	lea    rcx,[rip+0x1882d]        # 0x14001aa78
   14000224b:	mov    r8,r15
   14000224e:	mov    rdx,QWORD PTR [rax+r14*8]
   140002252:	call   0x140009c3c
   140002257:	movsxd r13,DWORD PTR [rbp+0x48]
   14000225b:	lea    rcx,[rip+0x187fe]        # 0x14001aa60
   140002262:	mov    edx,r13d
   140002265:	call   0x140009c3c
   14000226a:	mov    r12d,edi
   14000226d:	mov    rbx,rdi
   140002270:	test   r13,r13
   140002273:	jle    0x14000229b
   140002275:	mov    r14,QWORD PTR [rbp-0x38]
   140002279:	mov    r8,QWORD PTR [r14+rbx*8]
   14000227d:	lea    rcx,[rip+0x187c4]        # 0x14001aa48
   140002284:	mov    edx,r12d
   140002287:	call   0x140009c3c
   14000228c:	add    rbx,rsi
   14000228f:	add    r12d,esi
   140002292:	cmp    rbx,r13
   140002295:	jl     0x140002279
   140002297:	mov    r14d,DWORD PTR [rbp+0x50]
   14000229b:	mov    rcx,QWORD PTR [rbp+0x58]
   14000229f:	mov    r8,r15
   1400022a2:	mov    edx,r14d
   1400022a5:	call   0x140001618
   1400022aa:	mov    rcx,QWORD PTR [rbp+0x58]
   1400022ae:	mov    rbx,rax
   1400022b1:	mov    rax,QWORD PTR [rcx]
   1400022b4:	call   QWORD PTR [rax+0x78]
   1400022b7:	test   rax,rax
   1400022ba:	jne    0x1400023b5
   1400022c0:	test   rbx,rbx
   1400022c3:	jne    0x1400022d6
   1400022c5:	lea    rcx,[rip+0x182a4]        # 0x14001a570
   1400022cc:	call   0x140004370
   1400022d1:	jmp    0x1400023be
   1400022d6:	mov    r8,QWORD PTR [rbp+0x60]
   1400022da:	mov    rcx,QWORD PTR [rbp+0x58]
   1400022de:	mov    rdx,rbx
   1400022e1:	call   0x140004eb4
   1400022e6:	mov    rcx,QWORD PTR [rbp+0x58]
   1400022ea:	lea    r9,[rip+0x1873f]        # 0x14001aa30
   1400022f1:	mov    rax,QWORD PTR [rcx]
   1400022f4:	lea    r8,[rip+0x1872d]        # 0x14001aa28
   1400022fb:	mov    rdx,rbx
   1400022fe:	call   QWORD PTR [rax+0x388]
   140002304:	mov    rcx,QWORD PTR [rbp+0x58]
   140002308:	mov    r13,rax
   14000230b:	mov    rax,QWORD PTR [rcx]
   14000230e:	call   QWORD PTR [rax+0x78]
   140002311:	test   rax,rax
   140002314:	jne    0x1400023b5
   14000231a:	test   r13,r13
   14000231d:	je     0x1400022c5
   14000231f:	mov    r8d,DWORD PTR [rbp+0x48]
   140002323:	mov    rdx,QWORD PTR [rbp-0x38]
   140002327:	mov    rcx,QWORD PTR [rbp+0x58]
   14000232b:	call   0x140004ebc
   140002330:	mov    rcx,QWORD PTR [rbp+0x58]
   140002334:	mov    r12,rax
   140002337:	mov    rax,QWORD PTR [rcx]
   14000233a:	call   QWORD PTR [rax+0x78]
   14000233d:	test   rax,rax
   140002340:	jne    0x1400023b5
   140002342:	test   r12,r12
   140002345:	je     0x1400022c5
   14000234b:	mov    rcx,QWORD PTR [rbp+0x58]
   14000234f:	mov    r9,r12
   140002352:	mov    r8,r13
   140002355:	mov    rax,QWORD PTR [rcx]
   140002358:	mov    rdx,rbx
   14000235b:	call   QWORD PTR [rax+0x468]
   140002361:	mov    rcx,QWORD PTR [rbp+0x58]
   140002365:	mov    rax,QWORD PTR [rcx]
   140002368:	call   QWORD PTR [rax+0x78]
   14000236b:	mov    rcx,QWORD PTR [rbp+0x60]
   14000236f:	mov    ebx,edi
   140002371:	test   rax,rax
   140002374:	mov    rax,QWORD PTR [rcx]
   140002377:	setne  bl
   14000237a:	call   QWORD PTR [rax+0x28]
   14000237d:	test   eax,eax
   14000237f:	je     0x14000238f
   140002381:	lea    rcx,[rip+0x18728]        # 0x14001aab0
   140002388:	call   0x140004370
   14000238d:	mov    ebx,esi
   14000238f:	mov    rcx,QWORD PTR [rbp+0x60]
   140002393:	mov    rax,QWORD PTR [rcx]
   140002396:	call   QWORD PTR [rax+0x18]
   140002399:	mov    eax,ebx
   14000239b:	jmp    0x14000240e
   14000239d:	mov    rcx,QWORD PTR [rbp+0x58]
   1400023a1:	call   0x140001a70
   1400023a6:	mov    rcx,QWORD PTR [rbp+0x58]
   1400023aa:	mov    rax,QWORD PTR [rcx]
   1400023ad:	call   QWORD PTR [rax+0x78]
   1400023b0:	test   rax,rax
   1400023b3:	je     0x1400023e6
   1400023b5:	mov    rcx,QWORD PTR [rbp+0x58]
   1400023b9:	call   0x1400045a0
   1400023be:	mov    rcx,QWORD PTR [rbp+0x60]
   1400023c2:	mov    rax,QWORD PTR [rcx]
   1400023c5:	call   QWORD PTR [rax+0x28]
   1400023c8:	test   eax,eax
   1400023ca:	je     0x1400023d8
   1400023cc:	lea    rcx,[rip+0x186dd]        # 0x14001aab0
   1400023d3:	call   0x140004370
   1400023d8:	mov    rcx,QWORD PTR [rbp+0x60]
   1400023dc:	mov    rax,QWORD PTR [rcx]
   1400023df:	call   QWORD PTR [rax+0x18]
   1400023e2:	mov    eax,esi
   1400023e4:	jmp    0x14000240e
   1400023e6:	mov    rcx,QWORD PTR [rbp+0x60]
   1400023ea:	mov    rax,QWORD PTR [rcx]
   1400023ed:	call   QWORD PTR [rax+0x28]
   1400023f0:	test   eax,eax
   1400023f2:	je     0x140002402
   1400023f4:	lea    rcx,[rip+0x186b5]        # 0x14001aab0
   1400023fb:	call   0x140004370
   140002400:	mov    edi,esi
   140002402:	mov    rcx,QWORD PTR [rbp+0x60]
   140002406:	mov    rdx,QWORD PTR [rcx]
   140002409:	call   QWORD PTR [rdx+0x18]
   14000240c:	mov    eax,edi
   14000240e:	add    rsp,0x58
   140002412:	pop    r15
   140002414:	pop    r14
   140002416:	pop    r13
   140002418:	pop    r12
   14000241a:	pop    rdi
   14000241b:	pop    rsi
   14000241c:	pop    rbx
   14000241d:	pop    rbp
   14000241e:	ret    
   14000241f:	int3   
   140002420:	mov    QWORD PTR [rsp+0x18],rbx
   140002425:	mov    QWORD PTR [rsp+0x10],rdx
   14000242a:	mov    QWORD PTR [rsp+0x8],rcx
   14000242f:	push   rbp
   140002430:	push   rsi
   140002431:	push   rdi
   140002432:	push   r12
   140002434:	push   r13
   140002436:	push   r14
   140002438:	push   r15
   14000243a:	sub    rsp,0x30
   14000243e:	mov    rbx,rcx
   140002441:	lea    rcx,[rip+0x18858]        # 0x14001aca0
   140002448:	mov    r14b,r8b
   14000244b:	or     r12d,0xffffffff
   14000244f:	call   0x140009da4
   140002454:	movsxd rbx,DWORD PTR [rbx]
   140002457:	lea    r9d,[rbx+0x1]
   14000245b:	mov    rdi,rax
   14000245e:	movsxd rcx,r9d
   140002461:	shl    rcx,0x3
   140002465:	call   0x140004000
   14000246a:	mov    r11,QWORD PTR [rsp+0x78]
   14000246f:	lea    esi,[r12+0x2]
   140002474:	mov    rdx,QWORD PTR [r11]
   140002477:	mov    r8,rax
   14000247a:	mov    QWORD PTR [rsp+0x20],rax
   14000247f:	mov    rcx,QWORD PTR [rdx]
   140002482:	mov    r15,rbx
   140002485:	mov    QWORD PTR [rax],rcx
   140002488:	mov    eax,esi
   14000248a:	mov    DWORD PTR [rsp+0x88],eax
   140002491:	mov    r13d,eax
   140002494:	cmp    rax,rbx
   140002497:	jge    0x1400025e5
   14000249d:	mov    rdx,QWORD PTR [rip+0x222e4]        # 0x140024788
   1400024a4:	lea    rbp,[r8+0x8]
   1400024a8:	cmp    BYTE PTR [rip+0x222b5],0x0        # 0x140024764
   1400024af:	mov    rax,QWORD PTR [r11]
   1400024b2:	mov    rbx,QWORD PTR [rax+r13*8]
   1400024b6:	je     0x1400024cc
   1400024b8:	cmp    BYTE PTR [rbx],0x2d
   1400024bb:	je     0x140002503
   1400024bd:	mov    QWORD PTR [rbp+0x0],rbx
   1400024c1:	inc    esi
   1400024c3:	add    rbp,0x8
   1400024c7:	jmp    0x14000256b
   1400024cc:	lea    rdx,[rip+0x187bd]        # 0x14001ac90
   1400024d3:	mov    rcx,rbx
   1400024d6:	call   0x14000a880
   1400024db:	test   eax,eax
   1400024dd:	je     0x1400025a1
   1400024e3:	lea    rdx,[rip+0x187a2]        # 0x14001ac8c
   1400024ea:	mov    rcx,rbx
   1400024ed:	call   0x14000a880
   1400024f2:	test   eax,eax
   1400024f4:	je     0x1400025a1
   1400024fa:	cmp    BYTE PTR [rbx],0x2d
   1400024fd:	jne    0x1400025d9
   140002503:	mov    rcx,rbx
   140002506:	call   0x140001dbc
   14000250b:	test   eax,eax
   14000250d:	js     0x14000252f
   14000250f:	mov    rdx,QWORD PTR [rip+0x22272]        # 0x140024788
   140002516:	mov    r12d,eax
   140002519:	cdqe   
   14000251b:	shl    rax,0x5
   14000251f:	mov    rdi,QWORD PTR [rax+rdx*1]
   140002523:	mov    rax,QWORD PTR [rsp+0x70]
   140002528:	inc    rdi
   14000252b:	dec    DWORD PTR [rax]
   14000252d:	jmp    0x140002566
   14000252f:	lea    rdx,[rip+0x1874a]        # 0x14001ac80
   140002536:	mov    rcx,rbx
   140002539:	call   0x1400040f8
   14000253e:	test   eax,eax
   140002540:	je     0x140002589
   140002542:	lea    rdx,[rip+0x18727]        # 0x14001ac70
   140002549:	mov    rcx,rbx
   14000254c:	call   0x1400040f8
   140002551:	test   eax,eax
   140002553:	je     0x140002589
   140002555:	mov    QWORD PTR [rbp+0x0],rbx
   140002559:	inc    esi
   14000255b:	add    rbp,0x8
   14000255f:	mov    rdx,QWORD PTR [rip+0x22222]        # 0x140024788
   140002566:	mov    r11,QWORD PTR [rsp+0x78]
   14000256b:	mov    eax,DWORD PTR [rsp+0x88]
   140002572:	inc    r13
   140002575:	inc    eax
   140002577:	mov    DWORD PTR [rsp+0x88],eax
   14000257e:	cmp    r13,r15
   140002581:	jl     0x1400024a8
   140002587:	jmp    0x1400025ec
   140002589:	cmp    BYTE PTR [rbx+0x1],0x58
   14000258d:	mov    edi,0xc
   140002592:	lea    eax,[rdi-0x2]
   140002595:	cmove  edi,eax
   140002598:	add    rdi,rbx
   14000259b:	or     r12d,0xffffffff
   14000259f:	jmp    0x14000255f
   1400025a1:	inc    DWORD PTR [rsp+0x88]
   1400025a8:	inc    r13
   1400025ab:	mov    QWORD PTR [rbp+0x0],rbx
   1400025af:	inc    esi
   1400025b1:	add    rbp,0x8
   1400025b5:	cmp    r13,r15
   1400025b8:	jge    0x14000255f
   1400025ba:	mov    r11,QWORD PTR [rsp+0x78]
   1400025bf:	mov    rdx,QWORD PTR [rip+0x221c2]        # 0x140024788
   1400025c6:	inc    esi
   1400025c8:	mov    rax,QWORD PTR [r11]
   1400025cb:	mov    rcx,QWORD PTR [rax+r13*8]
   1400025cf:	mov    QWORD PTR [rbp+0x0],rcx
   1400025d3:	add    rbp,0x8
   1400025d7:	jmp    0x14000256b
   1400025d9:	mov    eax,DWORD PTR [rsp+0x88]
   1400025e0:	mov    r11,QWORD PTR [rsp+0x78]
   1400025e5:	mov    rdx,QWORD PTR [rip+0x2219c]        # 0x140024788
   1400025ec:	mov    r10,QWORD PTR [rsp+0x20]
   1400025f1:	movsxd r8,eax
   1400025f4:	mov    ebp,0x1
   1400025f9:	movsxd rax,esi
   1400025fc:	cmp    r8,r15
   1400025ff:	jge    0x140002623
   140002601:	lea    r9,[r10+rax*8]
   140002605:	mov    eax,r15d
   140002608:	sub    eax,r8d
   14000260b:	add    esi,eax
   14000260d:	mov    rax,QWORD PTR [r11]
   140002610:	mov    rcx,QWORD PTR [rax+r8*8]
   140002614:	add    r8,rbp
   140002617:	mov    QWORD PTR [r9],rcx
   14000261a:	add    r9,0x8
   14000261e:	cmp    r8,r15
   140002621:	jl     0x14000260d
   140002623:	movsxd rax,esi
   140002626:	and    QWORD PTR [r10+rax*8],0x0
   14000262b:	mov    rax,QWORD PTR [rsp+0x70]
   140002630:	mov    QWORD PTR [r11],r10
   140002633:	mov    DWORD PTR [rax],esi
   140002635:	test   rdi,rdi
   140002638:	jne    0x140002675
   14000263a:	mov    rbx,QWORD PTR [rdx]
   14000263d:	add    rbx,rbp
   140002640:	cmp    DWORD PTR [rdx+0x8],0x4
   140002644:	jne    0x14000265e
   140002646:	call   0x1400045d0
   14000264b:	cmp    al,bpl
   14000264e:	jne    0x14000265e
   140002650:	mov    rax,QWORD PTR [rip+0x22131]        # 0x140024788
   140002657:	mov    rbx,QWORD PTR [rax+0x18]
   14000265b:	add    rbx,rbp
   14000265e:	lea    rcx,[rip+0x185fb]        # 0x14001ac60
   140002665:	mov    rdx,rbx
   140002668:	call   0x14000408c
   14000266d:	mov    rax,rbx
   140002670:	jmp    0x14000277f
   140002675:	test   r12d,r12d
   140002678:	js     0x14000277c
   14000267e:	movsxd rax,r12d
   140002681:	xor    ebx,ebx
   140002683:	shl    rax,0x5
   140002687:	jmp    0x1400026bf
   140002689:	movsxd rcx,r12d
   14000268c:	shl    rcx,0x5
   140002690:	mov    rcx,QWORD PTR [rcx+rdx*1+0x10]
   140002695:	call   0x140001dbc
   14000269a:	cmp    ebx,DWORD PTR [rip+0x220d4]        # 0x140024774
   1400026a0:	jg     0x140002717
   1400026a2:	test   eax,eax
   1400026a4:	js     0x1400026eb
   1400026a6:	mov    rdx,QWORD PTR [rip+0x220db]        # 0x140024788
   1400026ad:	mov    r12d,eax
   1400026b0:	cdqe   
   1400026b2:	shl    rax,0x5
   1400026b6:	mov    rdi,QWORD PTR [rax+rdx*1]
   1400026ba:	add    rdi,rbp
   1400026bd:	add    ebx,ebp
   1400026bf:	cmp    DWORD PTR [rax+rdx*1+0x8],ebp
   1400026c3:	je     0x140002689
   1400026c5:	movsxd rcx,r12d
   1400026c8:	shl    rcx,0x5
   1400026cc:	mov    r8d,DWORD PTR [rcx+rdx*1+0x8]
   1400026d1:	sub    r8d,0x2
   1400026d5:	je     0x140002755
   1400026d7:	dec    r8d
   1400026da:	je     0x140002739
   1400026dc:	cmp    r8d,0x2
   1400026e0:	je     0x140002776
   1400026e6:	jmp    0x14000277c
   1400026eb:	test   r14b,r14b
   1400026ee:	jne    0x140002730
   1400026f0:	mov    rdx,QWORD PTR [rip+0x22091]        # 0x140024788
   1400026f7:	movsxd rax,r12d
   1400026fa:	lea    rcx,[rip+0x18537]        # 0x14001ac38
   140002701:	shl    rax,0x5
   140002705:	mov    rdx,QWORD PTR [rax+rdx*1+0x10]
   14000270a:	call   0x140004370
   14000270f:	mov    ecx,ebp
   140002711:	call   0x140009bdc
   140002716:	int3   
   140002717:	test   r14b,r14b
   14000271a:	jne    0x140002730
   14000271c:	lea    rcx,[rip+0x184dd]        # 0x14001ac00
   140002723:	call   0x140004370
   140002728:	mov    ecx,ebp
   14000272a:	call   0x140009bdc
   14000272f:	int3   
   140002730:	lea    rax,[rip+0x184bd]        # 0x14001abf4
   140002737:	jmp    0x14000277f
   140002739:	test   r14b,r14b
   14000273c:	jne    0x140002730
   14000273e:	lea    rcx,[rip+0x18493]        # 0x14001abd8
   140002745:	mov    rdx,rdi
   140002748:	call   0x140004370
   14000274d:	mov    ecx,ebp
   14000274f:	call   0x140009bdc
   140002754:	int3   
   140002755:	test   r14b,r14b
   140002758:	jne    0x140002776
   14000275a:	mov    r8,QWORD PTR [rdx]
   14000275d:	lea    rcx,[rip+0x1843c]        # 0x14001aba0
   140002764:	mov    rdx,rdi
   140002767:	add    r8,rbp
   14000276a:	call   0x140004370
   14000276f:	mov    rdx,QWORD PTR [rip+0x22012]        # 0x140024788
   140002776:	mov    rdi,QWORD PTR [rdx]
   140002779:	add    rdi,rbp
   14000277c:	mov    rax,rdi
   14000277f:	mov    rbx,QWORD PTR [rsp+0x80]
   140002787:	add    rsp,0x30
   14000278b:	pop    r15
   14000278d:	pop    r14
   14000278f:	pop    r13
   140002791:	pop    r12
   140002793:	pop    rdi
   140002794:	pop    rsi
   140002795:	pop    rbp
   140002796:	ret    
   140002797:	int3   
   140002798:	mov    QWORD PTR [rsp+0x20],rbx
   14000279d:	push   rbp
   14000279e:	push   rsi
   14000279f:	push   rdi
   1400027a0:	push   r12
   1400027a2:	push   r13
   1400027a4:	push   r14
   1400027a6:	push   r15
   1400027a8:	lea    rbp,[rsp-0xa0]
   1400027b0:	sub    rsp,0x1a0
   1400027b7:	mov    rax,QWORD PTR [rip+0x20902]        # 0x1400230c0
   1400027be:	xor    rax,rsp
   1400027c1:	mov    QWORD PTR [rbp+0x90],rax
   1400027c8:	movzx  eax,WORD PTR [rip+0x18759]        # 0x14001af28
   1400027cf:	movups xmm0,XMMWORD PTR [rip+0x18742]        # 0x14001af18
   1400027d6:	or     DWORD PTR [rsp+0x20],0xffffffff
   1400027db:	mov    WORD PTR [rbp-0x80],ax
   1400027df:	mov    al,BYTE PTR [rip+0x18745]        # 0x14001af2a
   1400027e5:	mov    edi,ecx
   1400027e7:	movaps XMMWORD PTR [rsp+0x70],xmm0
   1400027ec:	mov    r12,r8
   1400027ef:	mov    QWORD PTR [rsp+0x60],r8
   1400027f4:	mov    rsi,rdx
   1400027f7:	xor    ebx,ebx
   1400027f9:	lea    rcx,[rbp-0x7d]
   1400027fd:	xor    edx,edx
   1400027ff:	and    DWORD PTR [rsp+0x24],ebx
   140002803:	mov    r8d,0x109
   140002809:	mov    BYTE PTR [rbp-0x7e],al
   14000280c:	mov    QWORD PTR [rsp+0x50],rbx
   140002811:	xor    r15d,r15d
   140002814:	call   0x14000a560
   140002819:	lea    rcx,[rip+0x18088]        # 0x14001a8a8
   140002820:	xor    r14d,r14d
   140002823:	mov    QWORD PTR [rsp+0x58],rbx
   140002828:	call   0x140009da4
   14000282d:	test   rax,rax
   140002830:	je     0x14000284b
   140002832:	cmp    BYTE PTR [rax],bl
   140002834:	je     0x140002c50
   14000283a:	mov    rcx,rax
   14000283d:	call   0x140004058
   140002842:	mov    QWORD PTR [r12],rax
   140002846:	jmp    0x140002c50
   14000284b:	lea    eax,[rdi+0x1]
   14000284e:	movsxd rcx,eax
   140002851:	shl    rcx,0x3
   140002855:	call   0x140004000
   14000285a:	mov    rcx,QWORD PTR [rsi]
   14000285d:	add    rsi,0x8
   140002861:	mov    QWORD PTR [rax],rcx
   140002864:	mov    rbx,QWORD PTR [rsi]
   140002867:	mov    r13,rax
   14000286a:	mov    QWORD PTR [rsp+0x68],rax
   14000286f:	lea    r12,[rax+0x8]
   140002873:	mov    eax,0x1
   140002878:	sub    edi,eax
   14000287a:	test   rbx,rbx
   14000287d:	je     0x1400029bc
   140002883:	mov    r13d,DWORD PTR [rsp+0x24]
   140002888:	cmp    BYTE PTR [rbx],0x2d
   14000288b:	jne    0x1400029b2
   140002891:	lea    rdx,[rip+0x18670]        # 0x14001af08
   140002898:	mov    rcx,rbx
   14000289b:	call   0x1400040f8
   1400028a0:	test   eax,eax
   1400028a2:	jne    0x1400028af
   1400028a4:	add    rbx,0x9
   1400028a8:	mov    QWORD PTR [rsp+0x50],rbx
   1400028ad:	jmp    0x1400028e7
   1400028af:	lea    rdx,[rip+0x1863a]        # 0x14001aef0
   1400028b6:	mov    rcx,rbx
   1400028b9:	call   0x14000a880
   1400028be:	test   eax,eax
   1400028c0:	jne    0x1400028d0
   1400028c2:	mov    eax,0x1
   1400028c7:	mov    DWORD PTR [rsp+0x20],eax
   1400028cb:	jmp    0x1400029a0
   1400028d0:	lea    rdx,[rip+0x18601]        # 0x14001aed8
   1400028d7:	mov    rcx,rbx
   1400028da:	call   0x14000a880
   1400028df:	test   eax,eax
   1400028e1:	jne    0x1400028f1
   1400028e3:	and    DWORD PTR [rsp+0x20],eax
   1400028e7:	mov    eax,0x1
   1400028ec:	jmp    0x1400029a0
   1400028f1:	lea    rdx,[rip+0x185d4]        # 0x14001aecc
   1400028f8:	mov    rcx,rbx
   1400028fb:	call   0x14000a880
   140002900:	lea    rdx,[rip+0x18389]        # 0x14001ac90
   140002907:	mov    rcx,rbx
   14000290a:	test   eax,eax
   14000290c:	mov    eax,0x1
   140002911:	cmove  r13d,eax
   140002915:	call   0x14000a880
   14000291a:	test   eax,eax
   14000291c:	je     0x140002931
   14000291e:	lea    rdx,[rip+0x18367]        # 0x14001ac8c
   140002925:	mov    rcx,rbx
   140002928:	call   0x14000a880
   14000292d:	test   eax,eax
   14000292f:	jne    0x140002947
   140002931:	cmp    edi,0x2
   140002934:	jl     0x140002947
   140002936:	mov    QWORD PTR [r12],rbx
   14000293a:	dec    edi
   14000293c:	add    r12,0x8
   140002940:	add    rsi,0x8
   140002944:	mov    rbx,QWORD PTR [rsi]
   140002947:	lea    rdx,[rip+0x18562]        # 0x14001aeb0
   14000294e:	mov    rcx,rbx
   140002951:	call   0x14000a880
   140002956:	test   eax,eax
   140002958:	jne    0x140002964
   14000295a:	mov    eax,0x1
   14000295f:	mov    r15d,eax
   140002962:	jmp    0x140002998
   140002964:	lea    rdx,[rip+0x1852d]        # 0x14001ae98
   14000296b:	mov    rcx,rbx
   14000296e:	call   0x1400040f8
   140002973:	test   eax,eax
   140002975:	jne    0x14000297c
   140002977:	xor    r15d,r15d
   14000297a:	jmp    0x140002993
   14000297c:	lea    rdx,[rip+0x18505]        # 0x14001ae88
   140002983:	mov    rcx,rbx
   140002986:	call   0x1400040f8
   14000298b:	test   eax,eax
   14000298d:	jne    0x140002993
   14000298f:	lea    r14,[rbx+0x8]
   140002993:	mov    eax,0x1
   140002998:	mov    QWORD PTR [r12],rbx
   14000299c:	add    r12,0x8
   1400029a0:	add    rsi,0x8
   1400029a4:	sub    edi,eax
   1400029a6:	mov    rbx,QWORD PTR [rsi]
   1400029a9:	test   rbx,rbx
   1400029ac:	jne    0x140002888
   1400029b2:	mov    DWORD PTR [rsp+0x24],r13d
   1400029b7:	mov    r13,QWORD PTR [rsp+0x68]
   1400029bc:	test   edi,edi
   1400029be:	jg     0x1400029c4
   1400029c0:	xor    ebx,ebx
   1400029c2:	jmp    0x1400029e5
   1400029c4:	mov    rbx,QWORD PTR [rsi]
   1400029c7:	sub    edi,eax
   1400029c9:	mov    QWORD PTR [r12],rbx
   1400029cd:	jmp    0x1400029dd
   1400029cf:	sub    edi,eax
   1400029d1:	mov    rax,QWORD PTR [rsi]
   1400029d4:	mov    QWORD PTR [r12],rax
   1400029d8:	mov    eax,0x1
   1400029dd:	add    r12,0x8
   1400029e1:	add    rsi,0x8
   1400029e5:	test   edi,edi
   1400029e7:	jg     0x1400029cf
   1400029e9:	xor    esi,esi
   1400029eb:	mov    QWORD PTR [r12],rsi
   1400029ef:	cmp    DWORD PTR [rsp+0x24],esi
   1400029f3:	je     0x140002a50
   1400029f5:	test   rbx,rbx
   1400029f8:	je     0x140002a50
   1400029fa:	lea    rdx,[rsp+0x28]
   1400029ff:	mov    rcx,rbx
   140002a02:	call   0x140006a68
   140002a07:	test   eax,eax
   140002a09:	je     0x140002a31
   140002a0b:	mov    rdx,rbx
   140002a0e:	lea    rcx,[rip+0x1844b]        # 0x14001ae60
   140002a15:	cmp    eax,0xffffffff
   140002a18:	je     0x140002a21
   140002a1a:	lea    rcx,[rip+0x18417]        # 0x14001ae38
   140002a21:	call   0x140004370
   140002a26:	mov    ecx,0x1
   140002a2b:	call   0x140009bdc
   140002a30:	int3   
   140002a31:	test   r15d,r15d
   140002a34:	jne    0x140002a64
   140002a36:	test   r14,r14
   140002a39:	jne    0x140002a6e
   140002a3b:	mov    r14,QWORD PTR [rsp+0x48]
   140002a40:	test   r14,r14
   140002a43:	je     0x140002b09
   140002a49:	mov    QWORD PTR [rsp+0x58],rbx
   140002a4e:	jmp    0x140002a64
   140002a50:	mov    QWORD PTR [rsp+0x28],rsi
   140002a55:	mov    QWORD PTR [rsp+0x30],rsi
   140002a5a:	mov    QWORD PTR [rsp+0x38],rsi
   140002a5f:	mov    BYTE PTR [rsp+0x40],sil
   140002a64:	test   r14,r14
   140002a67:	je     0x140002ab4
   140002a69:	test   r15d,r15d
   140002a6c:	jne    0x140002ab4
   140002a6e:	mov    rcx,r14
   140002a71:	call   0x140009fd0
   140002a76:	lea    rcx,[rip+0x183a3]        # 0x14001ae20
   140002a7d:	mov    rbx,rax
   140002a80:	call   0x140009fd0
   140002a85:	lea    rcx,[rbx+rax*1+0x1]
   140002a8a:	call   0x140004000
   140002a8f:	lea    rdx,[rip+0x1838a]        # 0x14001ae20
   140002a96:	mov    rcx,rax
   140002a99:	mov    rbx,rax
   140002a9c:	call   0x14000a780
   140002aa1:	mov    rdx,r14
   140002aa4:	mov    rcx,rbx
   140002aa7:	call   0x14000a6e0
   140002aac:	mov    rcx,rbx
   140002aaf:	call   0x14000c318
   140002ab4:	mov    rdi,QWORD PTR [rsp+0x58]
   140002ab9:	test   rdi,rdi
   140002abc:	je     0x140002b09
   140002abe:	test   r15d,r15d
   140002ac1:	jne    0x140002b09
   140002ac3:	mov    rcx,rdi
   140002ac6:	call   0x140009fd0
   140002acb:	lea    rcx,[rip+0x18336]        # 0x14001ae08
   140002ad2:	mov    rbx,rax
   140002ad5:	call   0x140009fd0
   140002ada:	lea    rcx,[rbx+rax*1+0x1]
   140002adf:	call   0x140004000
   140002ae4:	lea    rdx,[rip+0x1831d]        # 0x14001ae08
   140002aeb:	mov    rcx,rax
   140002aee:	mov    rbx,rax
   140002af1:	call   0x14000a780
   140002af6:	mov    rdx,rdi
   140002af9:	mov    rcx,rbx
   140002afc:	call   0x14000a6e0
   140002b01:	mov    rcx,rbx
   140002b04:	call   0x14000c318
   140002b09:	mov    rax,QWORD PTR [rsp+0x50]
   140002b0e:	movzx  ecx,BYTE PTR [rsp+0x40]
   140002b13:	mov    rdx,QWORD PTR [rsp+0x38]
   140002b18:	mov    r8d,DWORD PTR [rsp+0x20]
   140002b1d:	test   rax,rax
   140002b20:	cmovne rdx,rax
   140002b24:	cmp    r8d,0xffffffff
   140002b28:	movzx  eax,r8b
   140002b2c:	cmovne ecx,eax
   140002b2f:	mov    QWORD PTR [rsp+0x38],rdx
   140002b34:	mov    BYTE PTR [rsp+0x40],cl
   140002b38:	mov    rcx,QWORD PTR [rsp+0x30]
   140002b3d:	test   rcx,rcx
   140002b40:	je     0x140002b54
   140002b42:	call   0x140004058
   140002b47:	mov    rcx,QWORD PTR [rsp+0x60]
   140002b4c:	mov    rdx,QWORD PTR [rsp+0x38]
   140002b51:	mov    QWORD PTR [rcx],rax
   140002b54:	test   rdx,rdx
   140002b57:	je     0x140002c43
   140002b5d:	mov    rcx,rdx
   140002b60:	call   0x140007024
   140002b65:	test   eax,eax
   140002b67:	jne    0x140002b85
   140002b69:	mov    rdx,QWORD PTR [rsp+0x38]
   140002b6e:	lea    rcx,[rip+0x1825b]        # 0x14001add0
   140002b75:	call   0x140004370
   140002b7a:	mov    ecx,0x1
   140002b7f:	call   0x140009bdc
   140002b84:	int3   
   140002b85:	lea    rcx,[rsp+0x28]
   140002b8a:	call   0x1400045e4
   140002b8f:	mov    rcx,QWORD PTR [rsp+0x38]
   140002b94:	lea    rdx,[rip+0x18229]        # 0x14001adc4
   140002b9b:	test   rax,rax
   140002b9e:	mov    r9,rdx
   140002ba1:	mov    rbx,rax
   140002ba4:	cmovne r9,rax
   140002ba8:	cmp    BYTE PTR [rsp+0x40],sil
   140002bad:	lea    rax,[rip+0x18208]        # 0x14001adbc
   140002bb4:	lea    r8,[rip+0x181f9]        # 0x14001adb4
   140002bbb:	cmovne r8,rax
   140002bbf:	test   rcx,rcx
   140002bc2:	cmovne rdx,rcx
   140002bc6:	lea    rcx,[rip+0x181ab]        # 0x14001ad78
   140002bcd:	call   0x14000408c
   140002bd2:	test   rbx,rbx
   140002bd5:	jne    0x140002c06
   140002bd7:	mov    rdx,QWORD PTR [rsp+0x38]
   140002bdc:	mov    rcx,QWORD PTR [rip+0x21b55]        # 0x140024738
   140002be3:	call   0x140006f0c
   140002be8:	test   eax,eax
   140002bea:	jne    0x140002c43
   140002bec:	mov    rdx,QWORD PTR [rsp+0x38]
   140002bf1:	lea    rcx,[rip+0x18148]        # 0x14001ad40
   140002bf8:	call   0x140004370
   140002bfd:	lea    ecx,[rbx+0x1]
   140002c00:	call   0x140009bdc
   140002c05:	int3   
   140002c06:	mov    rcx,QWORD PTR [rsp+0x30]
   140002c0b:	test   rcx,rcx
   140002c0e:	je     0x140002c2e
   140002c10:	call   0x140009fd0
   140002c15:	mov    ecx,0x104
   140002c1a:	cmp    rax,rcx
   140002c1d:	ja     0x140002c7a
   140002c1f:	mov    rdx,QWORD PTR [rsp+0x30]
   140002c24:	lea    rcx,[rsp+0x70]
   140002c29:	call   0x14000a6e0
   140002c2e:	lea    rcx,[rsp+0x70]
   140002c33:	call   0x14000c318
   140002c38:	mov    rdx,r13
   140002c3b:	mov    rcx,rbx
   140002c3e:	call   0x140004870
   140002c43:	call   0x140006c48
   140002c48:	mov    rcx,r13
   140002c4b:	call   0x140004084
   140002c50:	mov    rcx,QWORD PTR [rbp+0x90]
   140002c57:	xor    rcx,rsp
   140002c5a:	call   0x14000a850
   140002c5f:	mov    rbx,QWORD PTR [rsp+0x1f8]
   140002c67:	add    rsp,0x1a0
   140002c6e:	pop    r15
   140002c70:	pop    r14
   140002c72:	pop    r13
   140002c74:	pop    r12
   140002c76:	pop    rdi
   140002c77:	pop    rsi
   140002c78:	pop    rbp
   140002c79:	ret    
   140002c7a:	mov    edx,ecx
   140002c7c:	lea    rcx,[rip+0x1803d]        # 0x14001acc0
   140002c83:	call   0x140004370
   140002c88:	mov    ecx,0x1
   140002c8d:	call   0x140009bdc
   140002c92:	int3   
   140002c93:	int3   
   140002c94:	mov    QWORD PTR [rsp+0x10],rbx
   140002c99:	mov    QWORD PTR [rsp+0x18],r8
   140002c9e:	mov    QWORD PTR [rsp+0x8],rcx
   140002ca3:	push   rbp
   140002ca4:	push   rsi
   140002ca5:	push   rdi
   140002ca6:	push   r12
   140002ca8:	push   r13
   140002caa:	push   r14
   140002cac:	push   r15
   140002cae:	sub    rsp,0x20
   140002cb2:	mov    rbp,QWORD PTR [rdx]
   140002cb5:	mov    r13,QWORD PTR [rsp+0x80]
   140002cbd:	mov    esi,DWORD PTR [rcx]
   140002cbf:	xor    r12d,r12d
   140002cc2:	mov    r14,r9
   140002cc5:	mov    r15,rdx
   140002cc8:	and    DWORD PTR [r13+0x0],r12d
   140002ccc:	mov    rdi,QWORD PTR [rbp+0x0]
   140002cd0:	lea    ebx,[r12+0x1]
   140002cd5:	test   rdi,rdi
   140002cd8:	je     0x14000314d
   140002cde:	cmp    BYTE PTR [rdi],0x2d
   140002ce1:	jne    0x140003143
   140002ce7:	lea    rdx,[rip+0x17fa2]        # 0x14001ac90
   140002cee:	mov    rcx,rdi
   140002cf1:	add    rbp,0x8
   140002cf5:	sub    esi,ebx
   140002cf7:	call   0x14000a880
   140002cfc:	test   eax,eax
   140002cfe:	je     0x14000311c
   140002d04:	lea    rdx,[rip+0x17f81]        # 0x14001ac8c
   140002d0b:	mov    rcx,rdi
   140002d0e:	call   0x14000a880
   140002d13:	test   eax,eax
   140002d15:	je     0x14000311c
   140002d1b:	lea    rdx,[rip+0x181aa]        # 0x14001aecc
   140002d22:	mov    rcx,rdi
   140002d25:	call   0x14000a880
   140002d2a:	test   eax,eax
   140002d2c:	jne    0x140002d3f
   140002d2e:	cmp    esi,ebx
   140002d30:	jl     0x140003168
   140002d36:	lea    r12d,[rax+0x2]
   140002d3a:	jmp    0x140003136
   140002d3f:	lea    rdx,[rip+0x18476]        # 0x14001b1bc
   140002d46:	mov    rcx,rdi
   140002d49:	call   0x14000a880
   140002d4e:	test   eax,eax
   140002d50:	je     0x1400031b1
   140002d56:	lea    rdx,[rip+0x1845b]        # 0x14001b1b8
   140002d5d:	mov    rcx,rdi
   140002d60:	call   0x14000a880
   140002d65:	test   eax,eax
   140002d67:	je     0x1400031b1
   140002d6d:	lea    rdx,[rip+0x18440]        # 0x14001b1b4
   140002d74:	mov    rcx,rdi
   140002d77:	call   0x14000a880
   140002d7c:	test   eax,eax
   140002d7e:	je     0x1400031b1
   140002d84:	lea    rdx,[rip+0x1841d]        # 0x14001b1a8
   140002d8b:	mov    rcx,rdi
   140002d8e:	call   0x14000a880
   140002d93:	test   eax,eax
   140002d95:	je     0x1400031a9
   140002d9b:	lea    rdx,[rip+0x183f6]        # 0x14001b198
   140002da2:	mov    rcx,rdi
   140002da5:	call   0x14000a880
   140002daa:	test   eax,eax
   140002dac:	jne    0x140002db9
   140002dae:	mov    BYTE PTR [rip+0x219ad],bl        # 0x140024761
   140002db4:	jmp    0x140003136
   140002db9:	lea    rdx,[rip+0x183d0]        # 0x14001b190
   140002dc0:	mov    rcx,rdi
   140002dc3:	call   0x14000a880
   140002dc8:	test   eax,eax
   140002dca:	je     0x1400031a1
   140002dd0:	lea    rdx,[rip+0x183a9]        # 0x14001b180
   140002dd7:	mov    rcx,rdi
   140002dda:	call   0x14000a880
   140002ddf:	test   eax,eax
   140002de1:	je     0x140003113
   140002de7:	lea    rdx,[rip+0x18382]        # 0x14001b170
   140002dee:	mov    rcx,rdi
   140002df1:	call   0x1400040f8
   140002df6:	test   eax,eax
   140002df8:	je     0x140003113
   140002dfe:	lea    rdx,[rip+0x18363]        # 0x14001b168
   140002e05:	mov    rcx,rdi
   140002e08:	call   0x14000a880
   140002e0d:	test   eax,eax
   140002e0f:	jne    0x140002e1d
   140002e11:	lea    rcx,[rip+0x18330]        # 0x14001b148
   140002e18:	jmp    0x140002f31
   140002e1d:	lea    rdx,[rip+0x18314]        # 0x14001b138
   140002e24:	mov    rcx,rdi
   140002e27:	call   0x14000a880
   140002e2c:	test   eax,eax
   140002e2e:	je     0x140003183
   140002e34:	lea    rdx,[rip+0x182ed]        # 0x14001b128
   140002e3b:	mov    rcx,rdi
   140002e3e:	call   0x14000a880
   140002e43:	test   eax,eax
   140002e45:	jne    0x140002e53
   140002e47:	lea    rcx,[rip+0x182ca]        # 0x14001b118
   140002e4e:	jmp    0x140002f31
   140002e53:	lea    rdx,[rip+0x182b6]        # 0x14001b110
   140002e5a:	mov    rcx,rdi
   140002e5d:	call   0x14000a880
   140002e62:	test   eax,eax
   140002e64:	jne    0x140002e72
   140002e66:	lea    rcx,[rip+0x1829f]        # 0x14001b10c
   140002e6d:	jmp    0x140002f31
   140002e72:	lea    rdx,[rip+0x1828f]        # 0x14001b108
   140002e79:	mov    rcx,rdi
   140002e7c:	call   0x14000a880
   140002e81:	test   eax,eax
   140002e83:	jne    0x140002e91
   140002e85:	lea    rcx,[rip+0x18274]        # 0x14001b100
   140002e8c:	jmp    0x140002f31
   140002e91:	lea    rdx,[rip+0x18260]        # 0x14001b0f8
   140002e98:	mov    rcx,rdi
   140002e9b:	call   0x14000a880
   140002ea0:	test   eax,eax
   140002ea2:	jne    0x140002eb0
   140002ea4:	lea    rcx,[rip+0x18245]        # 0x14001b0f0
   140002eab:	jmp    0x140002f31
   140002eb0:	lea    rdx,[rip+0x18229]        # 0x14001b0e0
   140002eb7:	mov    rcx,rdi
   140002eba:	call   0x14000a880
   140002ebf:	test   eax,eax
   140002ec1:	jne    0x140002ecc
   140002ec3:	lea    rcx,[rip+0x18206]        # 0x14001b0d0
   140002eca:	jmp    0x140002f31
   140002ecc:	lea    rdx,[rip+0x181ed]        # 0x14001b0c0
   140002ed3:	mov    rcx,rdi
   140002ed6:	call   0x14000a880
   140002edb:	test   eax,eax
   140002edd:	jne    0x140002ee8
   140002edf:	lea    rcx,[rip+0x181ca]        # 0x14001b0b0
   140002ee6:	jmp    0x140002f31
   140002ee8:	lea    rdx,[rip+0x181b9]        # 0x14001b0a8
   140002eef:	mov    rcx,rdi
   140002ef2:	call   0x14000a880
   140002ef7:	test   eax,eax
   140002ef9:	je     0x140002edf
   140002efb:	lea    rdx,[rip+0x18196]        # 0x14001b098
   140002f02:	mov    rcx,rdi
   140002f05:	call   0x14000a880
   140002f0a:	test   eax,eax
   140002f0c:	jne    0x140002f17
   140002f0e:	lea    rcx,[rip+0x18173]        # 0x14001b088
   140002f15:	jmp    0x140002f31
   140002f17:	lea    rdx,[rip+0x1815a]        # 0x14001b078
   140002f1e:	mov    rcx,rdi
   140002f21:	call   0x14000a880
   140002f26:	test   eax,eax
   140002f28:	jne    0x140002f3d
   140002f2a:	lea    rcx,[rip+0x18137]        # 0x14001b068
   140002f31:	xor    edx,edx
   140002f33:	call   0x14000121c
   140002f38:	jmp    0x140003136
   140002f3d:	lea    rdx,[rip+0x18118]        # 0x14001b05c
   140002f44:	mov    rcx,rdi
   140002f47:	call   0x1400040f8
   140002f4c:	mov    rcx,rdi
   140002f4f:	test   eax,eax
   140002f51:	jne    0x140002f8e
   140002f53:	call   0x140009fd0
   140002f58:	lea    rcx,[rax+0x32]
   140002f5c:	call   0x140004000
   140002f61:	cmp    BYTE PTR [rdi+0x5],0x0
   140002f65:	mov    rbx,rax
   140002f68:	mov    rcx,rax
   140002f6b:	je     0x140002f7d
   140002f6d:	lea    r8,[rdi+0x6]
   140002f71:	lea    rdx,[rip+0x180c8]        # 0x14001b040
   140002f78:	jmp    0x1400030fd
   140002f7d:	lea    rdx,[rip+0x18094]        # 0x14001b018
   140002f84:	call   0x14000a4a4
   140002f89:	jmp    0x140003102
   140002f8e:	lea    rdx,[rip+0x1807b]        # 0x14001b010
   140002f95:	call   0x1400040f8
   140002f9a:	test   eax,eax
   140002f9c:	je     0x1400030db
   140002fa2:	lea    rdx,[rip+0x1805f]        # 0x14001b008
   140002fa9:	mov    rcx,rdi
   140002fac:	call   0x1400040f8
   140002fb1:	test   eax,eax
   140002fb3:	je     0x1400030db
   140002fb9:	lea    rdx,[rip+0x18044]        # 0x14001b004
   140002fc0:	mov    rcx,rdi
   140002fc3:	call   0x1400040f8
   140002fc8:	test   eax,eax
   140002fca:	je     0x1400030db
   140002fd0:	lea    rdx,[rip+0x18029]        # 0x14001b000
   140002fd7:	mov    rcx,rdi
   140002fda:	call   0x1400040f8
   140002fdf:	test   eax,eax
   140002fe1:	je     0x1400030db
   140002fe7:	lea    rdx,[rip+0x18002]        # 0x14001aff0
   140002fee:	mov    rcx,rdi
   140002ff1:	call   0x14000a880
   140002ff6:	test   eax,eax
   140002ff8:	je     0x1400030ca
   140002ffe:	lea    rdx,[rip+0x17fe7]        # 0x14001afec
   140003005:	mov    rcx,rdi
   140003008:	call   0x14000a880
   14000300d:	test   eax,eax
   14000300f:	je     0x1400030ca
   140003015:	lea    rdx,[rip+0x17fc4]        # 0x14001afe0
   14000301c:	mov    rcx,rdi
   14000301f:	call   0x14000a880
   140003024:	test   eax,eax
   140003026:	je     0x1400030ca
   14000302c:	lea    rdx,[rip+0x17ed5]        # 0x14001af08
   140003033:	mov    rcx,rdi
   140003036:	call   0x1400040f8
   14000303b:	test   eax,eax
   14000303d:	je     0x140003136
   140003043:	lea    rdx,[rip+0x17e8e]        # 0x14001aed8
   14000304a:	mov    rcx,rdi
   14000304d:	call   0x14000a880
   140003052:	test   eax,eax
   140003054:	je     0x140003136
   14000305a:	lea    rdx,[rip+0x17e8f]        # 0x14001aef0
   140003061:	mov    rcx,rdi
   140003064:	call   0x14000a880
   140003069:	test   eax,eax
   14000306b:	je     0x140003136
   140003071:	lea    rdx,[rip+0x17e10]        # 0x14001ae88
   140003078:	mov    rcx,rdi
   14000307b:	call   0x1400040f8
   140003080:	test   eax,eax
   140003082:	je     0x140003136
   140003088:	mov    rcx,rdi
   14000308b:	call   0x140004eb8
   140003090:	test   al,al
   140003092:	jne    0x140003136
   140003098:	lea    rdx,[rip+0x1797d]        # 0x14001aa1c
   14000309f:	mov    rcx,rdi
   1400030a2:	call   0x1400040f8
   1400030a7:	test   eax,eax
   1400030a9:	je     0x140003136
   1400030af:	lea    rdx,[rip+0x1795e]        # 0x14001aa14
   1400030b6:	mov    rcx,rdi
   1400030b9:	call   0x1400040f8
   1400030be:	test   eax,eax
   1400030c0:	je     0x140003136
   1400030c2:	mov    rcx,rdi
   1400030c5:	jmp    0x140002f31
   1400030ca:	lea    rcx,[rip+0x17edf]        # 0x14001afb0
   1400030d1:	mov    rdx,rdi
   1400030d4:	call   0x140004370
   1400030d9:	jmp    0x140003136
   1400030db:	mov    rcx,rdi
   1400030de:	call   0x140009fd0
   1400030e3:	lea    rcx,[rax+0x6]
   1400030e7:	call   0x140004000
   1400030ec:	lea    r8,[rdi+0x1]
   1400030f0:	lea    rdx,[rip+0x17ead]        # 0x14001afa4
   1400030f7:	mov    rbx,rax
   1400030fa:	mov    rcx,rax
   1400030fd:	call   0x14000a4a4
   140003102:	xor    edx,edx
   140003104:	mov    rcx,rbx
   140003107:	call   0x14000121c
   14000310c:	mov    ebx,0x1
   140003111:	jmp    0x140003136
   140003113:	mov    QWORD PTR [rip+0x2164e],rdi        # 0x140024768
   14000311a:	jmp    0x140003136
   14000311c:	cmp    esi,ebx
   14000311e:	jl     0x1400031b9
   140003124:	mov    rcx,QWORD PTR [rbp+0x0]
   140003128:	call   0x14000138c
   14000312d:	add    rbp,0x8
   140003131:	sub    esi,ebx
   140003133:	mov    r12d,ebx
   140003136:	mov    rdi,QWORD PTR [rbp+0x0]
   14000313a:	test   rdi,rdi
   14000313d:	jne    0x140002cde
   140003143:	mov    r8,QWORD PTR [rsp+0x70]
   140003148:	mov    rcx,QWORD PTR [rsp+0x60]
   14000314d:	sub    esi,ebx
   14000314f:	js     0x14000315c
   140003151:	mov    rax,QWORD PTR [rbp+0x0]
   140003155:	add    rbp,0x8
   140003159:	mov    QWORD PTR [r14],rax
   14000315c:	cmp    QWORD PTR [r14],0x0
   140003160:	jne    0x1400031c2
   140003162:	mov    DWORD PTR [r13+0x0],ebx
   140003166:	jmp    0x1400031c9
   140003168:	lea    rcx,[rip+0x17e09]        # 0x14001af78
   14000316f:	mov    rdx,rdi
   140003172:	call   0x140004370
   140003177:	mov    BYTE PTR [rip+0x215e5],bl        # 0x140024762
   14000317d:	mov    DWORD PTR [r13+0x0],ebx
   140003181:	jmp    0x1400031d5
   140003183:	mov    r8,QWORD PTR [rip+0x215ae]        # 0x140024738
   14000318a:	mov    rdx,QWORD PTR [rip+0x215bf]        # 0x140024750
   140003191:	lea    rcx,[rip+0x17dc8]        # 0x14001af60
   140003198:	call   0x140001f14
   14000319d:	xor    al,al
   14000319f:	jmp    0x1400031d7
   1400031a1:	mov    BYTE PTR [rip+0x215bc],bl        # 0x140024763
   1400031a7:	jmp    0x1400031d5
   1400031a9:	mov    BYTE PTR [rip+0x215b1],bl        # 0x140024760
   1400031af:	jmp    0x1400031d5
   1400031b1:	mov    BYTE PTR [rip+0x215ab],bl        # 0x140024762
   1400031b7:	jmp    0x1400031d5
   1400031b9:	lea    rcx,[rip+0x17d70]        # 0x14001af30
   1400031c0:	jmp    0x14000316f
   1400031c2:	test   r12d,r12d
   1400031c5:	cmove  r12d,ebx
   1400031c9:	test   esi,esi
   1400031cb:	js     0x1400031d2
   1400031cd:	mov    DWORD PTR [rcx],esi
   1400031cf:	mov    QWORD PTR [r15],rbp
   1400031d2:	mov    DWORD PTR [r8],r12d
   1400031d5:	mov    al,bl
   1400031d7:	mov    rbx,QWORD PTR [rsp+0x68]
   1400031dc:	add    rsp,0x20
   1400031e0:	pop    r15
   1400031e2:	pop    r14
   1400031e4:	pop    r13
   1400031e6:	pop    r12
   1400031e8:	pop    rdi
   1400031e9:	pop    rsi
   1400031ea:	pop    rbp
   1400031eb:	ret    
   1400031ec:	mov    QWORD PTR [rsp+0x10],rbx
   1400031f1:	mov    QWORD PTR [rsp+0x18],rbp
   1400031f6:	mov    QWORD PTR [rsp+0x20],rsi
   1400031fb:	push   rdi
   1400031fc:	push   r12
   1400031fe:	push   r13
   140003200:	push   r14
   140003202:	push   r15
   140003204:	sub    rsp,0x20
   140003208:	movsxd r13,DWORD PTR [r8]
   14000320b:	mov    r15,QWORD PTR [r9]
   14000320e:	movsxd rbp,ecx
   140003211:	lea    ebx,[r13+rbp*1+0x0]
   140003216:	mov    rsi,r9
   140003219:	mov    rdi,r8
   14000321c:	lea    eax,[rbx+0x1]
   14000321f:	mov    r14,rdx
   140003222:	movsxd rcx,eax
   140003225:	shl    rcx,0x3
   140003229:	call   0x140004000
   14000322e:	mov    DWORD PTR [rdi],ebx
   140003230:	xor    ebx,ebx
   140003232:	mov    r12,rax
   140003235:	mov    QWORD PTR [rsi],rax
   140003238:	test   ebp,ebp
   14000323a:	jle    0x14000326d
   14000323c:	mov    rax,QWORD PTR [r14+rbx*8]
   140003240:	cmp    BYTE PTR [rax],0x2d
   140003243:	jne    0x140003265
   140003245:	cmp    BYTE PTR [rax+0x1],0x4a
   140003249:	jne    0x140003265
   14000324b:	lea    rcx,[rax+0x2]
   14000324f:	test   rcx,rcx
   140003252:	jne    0x140003258
   140003254:	xor    eax,eax
   140003256:	jmp    0x14000325d
   140003258:	call   0x140004058
   14000325d:	mov    QWORD PTR [r12],rax
   140003261:	add    r12,0x8
   140003265:	inc    rbx
   140003268:	cmp    rbx,rbp
   14000326b:	jl     0x14000323c
   14000326d:	xor    eax,eax
   14000326f:	test   r13,r13
   140003272:	jle    0x1400032a0
   140003274:	mov    rcx,QWORD PTR [r15+rax*8]
   140003278:	cmp    BYTE PTR [rcx],0x2d
   14000327b:	jne    0x140003298
   14000327d:	cmp    BYTE PTR [rcx+0x1],0x4a
   140003281:	jne    0x140003298
   140003283:	add    rcx,0x2
   140003287:	cmp    BYTE PTR [rcx],0x0
   14000328a:	je     0x14000334a
   140003290:	mov    QWORD PTR [r12],rcx
   140003294:	add    r12,0x8
   140003298:	inc    rax
   14000329b:	cmp    rax,r13
   14000329e:	jl     0x140003274
   1400032a0:	xor    ebx,ebx
   1400032a2:	test   ebp,ebp
   1400032a4:	jle    0x1400032ca
   1400032a6:	mov    rcx,QWORD PTR [r14+rbx*8]
   1400032aa:	cmp    BYTE PTR [rcx],0x2d
   1400032ad:	jne    0x1400032b5
   1400032af:	cmp    BYTE PTR [rcx+0x1],0x4a
   1400032b3:	je     0x1400032c2
   1400032b5:	call   0x140004058
   1400032ba:	mov    QWORD PTR [r12],rax
   1400032be:	add    r12,0x8
   1400032c2:	inc    rbx
   1400032c5:	cmp    rbx,rbp
   1400032c8:	jl     0x1400032a6
   1400032ca:	xor    esi,esi
   1400032cc:	xor    ebx,ebx
   1400032ce:	test   r13,r13
   1400032d1:	jle    0x14000337b
   1400032d7:	lea    rbp,[r15+0x8]
   1400032db:	mov    r14d,r13d
   1400032de:	mov    rdi,QWORD PTR [r15+rbx*8]
   1400032e2:	cmp    BYTE PTR [rdi],0x2d
   1400032e5:	jne    0x140003361
   1400032e7:	mov    al,BYTE PTR [rdi+0x1]
   1400032ea:	cmp    al,0x4a
   1400032ec:	je     0x140003369
   1400032ee:	cmp    BYTE PTR [rip+0x21470],0x0        # 0x140024765
   1400032f5:	je     0x140003361
   1400032f7:	cmp    al,0x63
   1400032f9:	jne    0x140003361
   1400032fb:	lea    rdx,[rip+0x1798a]        # 0x14001ac8c
   140003302:	mov    rcx,rdi
   140003305:	call   0x14000a880
   14000330a:	test   eax,eax
   14000330c:	je     0x140003321
   14000330e:	lea    rdx,[rip+0x1797b]        # 0x14001ac90
   140003315:	mov    rcx,rdi
   140003318:	call   0x14000a880
   14000331d:	test   eax,eax
   14000331f:	jne    0x140003361
   140003321:	lea    eax,[r14-0x1]
   140003325:	cmp    esi,eax
   140003327:	jge    0x140003361
   140003329:	mov    QWORD PTR [r12],rdi
   14000332d:	mov    rcx,QWORD PTR [rbp+0x0]
   140003331:	call   0x140006170
   140003336:	add    r12,0x10
   14000333a:	inc    esi
   14000333c:	mov    QWORD PTR [r12-0x8],rax
   140003341:	inc    rbx
   140003344:	add    rbp,0x8
   140003348:	jmp    0x140003369
   14000334a:	lea    rcx,[rip+0x17e77]        # 0x14001b1c8
   140003351:	call   0x140004370
   140003356:	mov    ecx,0x1
   14000335b:	call   0x140009bdc
   140003360:	int3   
   140003361:	mov    QWORD PTR [r12],rdi
   140003365:	add    r12,0x8
   140003369:	inc    rbx
   14000336c:	inc    esi
   14000336e:	add    rbp,0x8
   140003372:	cmp    rbx,r13
   140003375:	jl     0x1400032de
   14000337b:	and    QWORD PTR [r12],0x0
   140003380:	mov    rbx,QWORD PTR [rsp+0x58]
   140003385:	mov    rbp,QWORD PTR [rsp+0x60]
   14000338a:	mov    rsi,QWORD PTR [rsp+0x68]
   14000338f:	add    rsp,0x20
   140003393:	pop    r15
   140003395:	pop    r14
   140003397:	pop    r13
   140003399:	pop    r12
   14000339b:	pop    rdi
   14000339c:	ret    
   14000339d:	int3   
   14000339e:	int3   
   14000339f:	int3   
   1400033a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400033a5:	mov    QWORD PTR [rsp+0x18],rbp
   1400033aa:	mov    QWORD PTR [rsp+0x20],rsi
   1400033af:	push   rdi
   1400033b0:	push   r12
   1400033b2:	push   r13
   1400033b4:	push   r14
   1400033b6:	push   r15
   1400033b8:	sub    rsp,0x170
   1400033bf:	mov    rax,QWORD PTR [rip+0x1fcfa]        # 0x1400230c0
   1400033c6:	xor    rax,rsp
   1400033c9:	mov    QWORD PTR [rsp+0x160],rax
   1400033d1:	xor    ebp,ebp
   1400033d3:	xor    r13d,r13d
   1400033d6:	mov    bl,dl
   1400033d8:	and    QWORD PTR [rsp+0x28],rbp
   1400033dd:	mov    rsi,rcx
   1400033e0:	xor    r12d,r12d
   1400033e3:	mov    QWORD PTR [rsp+0x30],r13
   1400033e8:	call   0x1400040f0
   1400033ed:	test   al,al
   1400033ef:	je     0x1400033f8
   1400033f1:	call   0x1400042a0
   1400033f6:	jmp    0x1400033fd
   1400033f8:	mov    rax,QWORD PTR [rsp+0x20]
   1400033fd:	lea    rdx,[rip+0x17fd8]        # 0x14001b3dc
   140003404:	mov    rcx,rsi
   140003407:	mov    QWORD PTR [rsp+0x20],rax
   14000340c:	call   0x14000b248
   140003411:	mov    r15,rax
   140003414:	test   rax,rax
   140003417:	jne    0x14000343e
   140003419:	test   bl,bl
   14000341b:	jne    0x140003436
   14000341d:	lea    rcx,[rip+0x17f9c]        # 0x14001b3c0
   140003424:	mov    rdx,rsi
   140003427:	call   0x140004370
   14000342c:	lea    ecx,[r15+0x1]
   140003430:	call   0x140009bdc
   140003435:	int3   
   140003436:	or     eax,0xffffffff
   140003439:	jmp    0x14000378c
   14000343e:	lea    rcx,[rsp+0x40]
   140003443:	mov    r8,rax
   140003446:	mov    edx,0x118
   14000344b:	call   0x14000b008
   140003450:	test   rax,rax
   140003453:	je     0x140003752
   140003459:	xor    r14d,r14d
   14000345c:	mov    al,BYTE PTR [rsp+0x40]
   140003460:	or     edi,0xffffffff
   140003463:	inc    r12d
   140003466:	cmp    al,0x23
   140003468:	je     0x140003737
   14000346e:	cmp    al,0x2d
   140003470:	je     0x140003484
   140003472:	lea    rcx,[rip+0x17f17]        # 0x14001b390
   140003479:	mov    r8,rsi
   14000347c:	mov    edx,r12d
   14000347f:	call   0x140004370
   140003484:	mov    eax,DWORD PTR [rip+0x21306]        # 0x140024790
   14000348a:	cmp    ebp,eax
   14000348c:	jl     0x1400034f4
   14000348e:	test   eax,eax
   140003490:	lea    r13d,[rax+rax*1]
   140003494:	mov    ecx,0xa
   140003499:	cmove  r13d,ecx
   14000349d:	cmp    r13d,ebp
   1400034a0:	cmovle r13d,ebp
   1400034a4:	movsxd rcx,r13d
   1400034a7:	shl    rcx,0x5
   1400034ab:	call   0x140004000
   1400034b0:	mov    rcx,QWORD PTR [rip+0x212d1]        # 0x140024788
   1400034b7:	mov    rbx,rax
   1400034ba:	test   rcx,rcx
   1400034bd:	je     0x1400034dc
   1400034bf:	movsxd r8,DWORD PTR [rip+0x212ca]        # 0x140024790
   1400034c6:	mov    rdx,rcx
   1400034c9:	mov    rcx,rax
   1400034cc:	shl    r8,0x5
   1400034d0:	call   0x14000a170
   1400034d5:	mov    rcx,QWORD PTR [rip+0x212ac]        # 0x140024788
   1400034dc:	call   0x140004084
   1400034e1:	mov    DWORD PTR [rip+0x212a8],r13d        # 0x140024790
   1400034e8:	mov    r13,QWORD PTR [rsp+0x30]
   1400034ed:	mov    QWORD PTR [rip+0x21294],rbx        # 0x140024788
   1400034f4:	lea    rcx,[rsp+0x40]
   1400034f9:	call   0x140009fd0
   1400034fe:	mov    rdx,QWORD PTR [rip+0x1fb3b]        # 0x140023040
   140003505:	lea    rcx,[rsp+0x40]
   14000350a:	mov    BYTE PTR [rax+rcx*1-0x1],0x0
   14000350f:	lea    rcx,[rsp+0x40]
   140003514:	call   0x14000af74
   140003519:	lea    rbx,[rsp+rax*1+0x40]
   14000351e:	cmp    BYTE PTR [rbx],0x0
   140003521:	je     0x140003540
   140003523:	mov    rdx,QWORD PTR [rip+0x1fb16]        # 0x140023040
   14000352a:	mov    BYTE PTR [rbx],0x0
   14000352d:	inc    rbx
   140003530:	mov    rcx,rbx
   140003533:	call   0x14000aec0
   140003538:	add    rbx,rax
   14000353b:	cmp    BYTE PTR [rbx],0x0
   14000353e:	jne    0x140003557
   140003540:	lea    rcx,[rip+0x17e19]        # 0x14001b360
   140003547:	mov    edx,r12d
   14000354a:	mov    r8,rsi
   14000354d:	call   0x140004370
   140003552:	jmp    0x1400036a2
   140003557:	lea    rdx,[rip+0x17df6]        # 0x14001b354
   14000355e:	mov    rcx,rbx
   140003561:	call   0x1400040f8
   140003566:	test   eax,eax
   140003568:	je     0x1400036a0
   14000356e:	lea    rdx,[rip+0x17dd3]        # 0x14001b348
   140003575:	mov    rcx,rbx
   140003578:	call   0x1400040f8
   14000357d:	mov    rcx,rbx
   140003580:	test   eax,eax
   140003582:	jne    0x1400035d4
   140003584:	mov    rdx,QWORD PTR [rip+0x1fab5]        # 0x140023040
   14000358b:	call   0x14000af74
   140003590:	add    rbx,rax
   140003593:	cmp    BYTE PTR [rbx],0x0
   140003596:	je     0x140003540
   140003598:	mov    rdx,QWORD PTR [rip+0x1faa1]        # 0x140023040
   14000359f:	mov    rcx,rbx
   1400035a2:	call   0x14000aec0
   1400035a7:	add    rbx,rax
   1400035aa:	cmp    BYTE PTR [rbx],0x0
   1400035ad:	je     0x140003540
   1400035af:	mov    rdx,QWORD PTR [rip+0x1fa8a]        # 0x140023040
   1400035b6:	mov    rcx,rbx
   1400035b9:	mov    r13,rbx
   1400035bc:	mov    QWORD PTR [rsp+0x30],rbx
   1400035c1:	call   0x14000af74
   1400035c6:	mov    edi,0x1
   1400035cb:	mov    BYTE PTR [rax+rbx*1],0x0
   1400035cf:	jmp    0x1400036a2
   1400035d4:	lea    rdx,[rip+0x17d65]        # 0x14001b340
   1400035db:	call   0x1400040f8
   1400035e0:	test   eax,eax
   1400035e2:	jne    0x1400035ec
   1400035e4:	lea    edi,[rax+0x2]
   1400035e7:	jmp    0x1400036a2
   1400035ec:	lea    rdx,[rip+0x17d45]        # 0x14001b338
   1400035f3:	mov    rcx,rbx
   1400035f6:	call   0x1400040f8
   1400035fb:	test   eax,eax
   1400035fd:	jne    0x140003607
   1400035ff:	lea    edi,[rax+0x5]
   140003602:	jmp    0x1400036a2
   140003607:	lea    rdx,[rip+0x175e6]        # 0x14001abf4
   14000360e:	mov    rcx,rbx
   140003611:	call   0x1400040f8
   140003616:	test   eax,eax
   140003618:	jne    0x140003622
   14000361a:	lea    edi,[rax+0x3]
   14000361d:	jmp    0x1400036a2
   140003622:	lea    rdx,[rip+0x17cff]        # 0x14001b328
   140003629:	mov    rcx,rbx
   14000362c:	call   0x1400040f8
   140003631:	test   eax,eax
   140003633:	jne    0x14000368e
   140003635:	mov    rdx,QWORD PTR [rip+0x1fa04]        # 0x140023040
   14000363c:	mov    rcx,rbx
   14000363f:	call   0x14000af74
   140003644:	add    rbx,rax
   140003647:	cmp    BYTE PTR [rbx],0x0
   14000364a:	je     0x140003682
   14000364c:	mov    rdx,QWORD PTR [rip+0x1f9ed]        # 0x140023040
   140003653:	mov    rcx,rbx
   140003656:	call   0x14000aec0
   14000365b:	add    rbx,rax
   14000365e:	cmp    BYTE PTR [rbx],0x0
   140003661:	je     0x140003682
   140003663:	mov    rdx,QWORD PTR [rip+0x1f9d6]        # 0x140023040
   14000366a:	mov    rcx,rbx
   14000366d:	mov    QWORD PTR [rsp+0x28],rbx
   140003672:	call   0x14000af74
   140003677:	mov    edi,0x4
   14000367c:	mov    BYTE PTR [rax+rbx*1],0x0
   140003680:	jmp    0x1400036a2
   140003682:	lea    rcx,[rip+0x17c67]        # 0x14001b2f0
   140003689:	jmp    0x140003547
   14000368e:	lea    rcx,[rip+0x17c2b]        # 0x14001b2c0
   140003695:	mov    r8,rsi
   140003698:	mov    edx,r12d
   14000369b:	call   0x140004370
   1400036a0:	xor    edi,edi
   1400036a2:	lea    r8,[rsp+0x40]
   1400036a7:	lea    rcx,[rip+0x17bfa]        # 0x14001b2a8
   1400036ae:	mov    edx,ebp
   1400036b0:	call   0x14000408c
   1400036b5:	cmp    edi,0xffffffff
   1400036b8:	je     0x140003737
   1400036ba:	mov    rbx,QWORD PTR [rip+0x210c7]        # 0x140024788
   1400036c1:	lea    rcx,[rsp+0x40]
   1400036c6:	call   0x140004058
   1400036cb:	mov    DWORD PTR [r14+rbx*1+0x8],edi
   1400036d0:	dec    edi
   1400036d2:	mov    QWORD PTR [r14+rbx*1],rax
   1400036d6:	je     0x140003703
   1400036d8:	cmp    edi,0x3
   1400036db:	jne    0x140003731
   1400036dd:	mov    rcx,QWORD PTR [rsp+0x28]
   1400036e2:	call   0x140004058
   1400036e7:	mov    rdx,QWORD PTR [rip+0x2109a]        # 0x140024788
   1400036ee:	lea    r8,[rip+0x17b9b]        # 0x14001b290
   1400036f5:	mov    QWORD PTR [r14+rdx*1+0x18],rax
   1400036fa:	lea    rcx,[rip+0x17b5f]        # 0x14001b260
   140003701:	jmp    0x140003725
   140003703:	mov    rcx,r13
   140003706:	call   0x140004058
   14000370b:	mov    rdx,QWORD PTR [rip+0x21076]        # 0x140024788
   140003712:	lea    r8,[rip+0x17b37]        # 0x14001b250
   140003719:	mov    QWORD PTR [r14+rdx*1+0x10],rax
   14000371e:	lea    rcx,[rip+0x17b03]        # 0x14001b228
   140003725:	mov    rdx,QWORD PTR [r14+rdx*1]
   140003729:	mov    r9,rax
   14000372c:	call   0x14000408c
   140003731:	inc    ebp
   140003733:	add    r14,0x20
   140003737:	lea    rcx,[rsp+0x40]
   14000373c:	mov    r8,r15
   14000373f:	mov    edx,0x118
   140003744:	call   0x14000b008
   140003749:	test   rax,rax
   14000374c:	jne    0x14000345c
   140003752:	mov    rcx,r15
   140003755:	call   0x14000ae58
   14000375a:	mov    DWORD PTR [rip+0x21014],ebp        # 0x140024774
   140003760:	call   0x1400040f0
   140003765:	test   al,al
   140003767:	je     0x14000378a
   140003769:	call   0x1400042a0
   14000376e:	sub    rax,QWORD PTR [rsp+0x20]
   140003773:	mov    rcx,rax
   140003776:	call   0x1400042ec
   14000377b:	lea    rcx,[rip+0x17a7e]        # 0x14001b200
   140003782:	mov    rdx,rax
   140003785:	call   0x140009c3c
   14000378a:	mov    eax,ebp
   14000378c:	mov    rcx,QWORD PTR [rsp+0x160]
   140003794:	xor    rcx,rsp
   140003797:	call   0x14000a850
   14000379c:	lea    r11,[rsp+0x170]
   1400037a4:	mov    rbx,QWORD PTR [r11+0x38]
   1400037a8:	mov    rbp,QWORD PTR [r11+0x40]
   1400037ac:	mov    rsi,QWORD PTR [r11+0x48]
   1400037b0:	mov    rsp,r11
   1400037b3:	pop    r15
   1400037b5:	pop    r14
   1400037b7:	pop    r13
   1400037b9:	pop    r12
   1400037bb:	pop    rdi
   1400037bc:	ret    
   1400037bd:	int3   
   1400037be:	int3   
   1400037bf:	int3   
   1400037c0:	mov    rax,rsp
   1400037c3:	mov    QWORD PTR [rax+0x8],rbx
   1400037c7:	mov    QWORD PTR [rax+0x10],rsi
   1400037cb:	mov    QWORD PTR [rax+0x18],rdi
   1400037cf:	mov    QWORD PTR [rax+0x20],r12
   1400037d3:	push   rbp
   1400037d4:	mov    rbp,rsp
   1400037d7:	sub    rsp,0x80
   1400037de:	mov    rsi,r9
   1400037e1:	mov    r12d,r8d
   1400037e4:	mov    rbx,rdx
   1400037e7:	mov    rdi,rcx
   1400037ea:	test   rdx,rdx
   1400037ed:	jne    0x140003818
   1400037ef:	lea    rcx,[rbp-0x60]
   1400037f3:	mov    r8d,0x60
   1400037f9:	call   0x14000a560
   1400037fe:	lea    rcx,[rbp-0x60]
   140003802:	mov    DWORD PTR [rbp-0x60],0x10001
   140003809:	call   QWORD PTR [rdi+0x8]
   14000380c:	movsxd r11,DWORD PTR [rbp-0x48]
   140003810:	test   r11d,r11d
   140003813:	jle    0x140003818
   140003815:	mov    rbx,r11
   140003818:	mov    eax,DWORD PTR [rbp+0x30]
   14000381b:	lea    r8,[rbp-0x60]
   14000381f:	lea    rcx,[rip+0xffffffffffffe73e]        # 0x140001f64
   140003826:	mov    DWORD PTR [rbp-0x50],eax
   140003829:	mov    rax,QWORD PTR [rbp+0x38]
   14000382d:	mov    rdx,rbx
   140003830:	mov    QWORD PTR [rbp-0x48],rax
   140003834:	mov    rax,QWORD PTR [rdi]
   140003837:	mov    DWORD PTR [rbp-0x60],r12d
   14000383b:	mov    QWORD PTR [rbp-0x40],rax
   14000383f:	mov    rax,QWORD PTR [rdi+0x8]
   140003843:	mov    QWORD PTR [rbp-0x58],rsi
   140003847:	mov    QWORD PTR [rbp-0x38],rax
   14000384b:	mov    rax,QWORD PTR [rdi+0x10]
   14000384f:	mov    QWORD PTR [rbp-0x30],rax
   140003853:	call   0x140005a84
   140003858:	mov    ecx,DWORD PTR [rbp+0x40]
   14000385b:	lea    r11,[rsp+0x80]
   140003863:	test   ecx,ecx
   140003865:	mov    rbx,QWORD PTR [r11+0x10]
   140003869:	mov    rsi,QWORD PTR [r11+0x18]
   14000386d:	mov    rdi,QWORD PTR [r11+0x20]
   140003871:	mov    r12,QWORD PTR [r11+0x28]
   140003875:	cmovne eax,ecx
   140003878:	mov    rsp,r11
   14000387b:	pop    rbp
   14000387c:	ret    
   14000387d:	int3   
   14000387e:	int3   
   14000387f:	int3   
   140003880:	rex push rbp
   140003882:	push   rbx
   140003883:	push   rsi
   140003884:	push   rdi
   140003885:	push   r12
   140003887:	push   r13
   140003889:	lea    rbp,[rsp-0x2c8]
   140003891:	sub    rsp,0x3c8
   140003898:	mov    rax,QWORD PTR [rip+0x1f821]        # 0x1400230c0
   14000389f:	xor    rax,rsp
   1400038a2:	mov    QWORD PTR [rbp+0x2b0],rax
   1400038a9:	mov    rax,QWORD PTR [rbp+0x348]
   1400038b0:	mov    r13,QWORD PTR [rbp+0x328]
   1400038b7:	and    DWORD PTR [rsp+0x50],0x0
   1400038bc:	and    QWORD PTR [rsp+0x58],0x0
   1400038c2:	and    QWORD PTR [rsp+0x60],0x0
   1400038c8:	mov    QWORD PTR [rip+0x20e81],rax        # 0x140024750
   1400038cf:	mov    al,BYTE PTR [rbp+0x350]
   1400038d5:	mov    DWORD PTR [rsp+0x40],ecx
   1400038d9:	mov    rcx,QWORD PTR [rbp+0x330]
   1400038e0:	mov    BYTE PTR [rip+0x20e7e],al        # 0x140024764
   1400038e6:	mov    al,BYTE PTR [rbp+0x358]
   1400038ec:	mov    esi,r8d
   1400038ef:	mov    r8,QWORD PTR [rbp+0x340]
   1400038f6:	mov    QWORD PTR [rsp+0x48],rdx
   1400038fb:	mov    rdx,QWORD PTR [rbp+0x338]
   140003902:	mov    BYTE PTR [rip+0x20e5d],al        # 0x140024765
   140003908:	mov    eax,DWORD PTR [rbp+0x368]
   14000390e:	mov    QWORD PTR [rip+0x20e23],rcx        # 0x140024738
   140003915:	mov    cl,BYTE PTR [rbp+0x360]
   14000391b:	mov    r12,r9
   14000391e:	mov    QWORD PTR [rip+0x20e33],rdx        # 0x140024758
   140003925:	mov    DWORD PTR [rip+0x20e45],eax        # 0x140024770
   14000392b:	mov    QWORD PTR [rip+0x20e16],r8        # 0x140024748
   140003932:	call   0x140004e0c
   140003937:	call   0x1400040f0
   14000393c:	test   al,al
   14000393e:	je     0x140003a33
   140003944:	lea    rcx,[rip+0x170b5]        # 0x14001aa00
   14000394b:	call   0x140009c3c
   140003950:	call   0x1400040f0
   140003955:	lea    rbx,[rip+0x1709c]        # 0x14001a9f8
   14000395c:	cmp    al,0x1
   14000395e:	lea    rdi,[rip+0x1708f]        # 0x14001a9f4
   140003965:	mov    rdx,rbx
   140003968:	lea    rcx,[rip+0x17079]        # 0x14001a9e8
   14000396f:	cmove  rdx,rdi
   140003973:	call   0x140009c3c
   140003978:	cmp    BYTE PTR [rip+0x20de5],0x1        # 0x140024764
   14000397f:	mov    rdx,rbx
   140003982:	lea    rcx,[rip+0x1704f]        # 0x14001a9d8
   140003989:	cmove  rdx,rdi
   14000398d:	call   0x140009c3c
   140003992:	mov    rdx,QWORD PTR [rip+0x20daf]        # 0x140024748
   140003999:	lea    rcx,[rip+0x17020]        # 0x14001a9c0
   1400039a0:	call   0x140009c3c
   1400039a5:	mov    rdx,QWORD PTR [rip+0x20da4]        # 0x140024750
   1400039ac:	lea    rcx,[rip+0x16ff5]        # 0x14001a9a8
   1400039b3:	call   0x140009c3c
   1400039b8:	call   0x1400041c4
   1400039bd:	lea    rcx,[rip+0x16fd4]        # 0x14001a998
   1400039c4:	cmp    al,0x1
   1400039c6:	cmove  rbx,rdi
   1400039ca:	mov    rdx,rbx
   1400039cd:	call   0x140009c3c
   1400039d2:	mov    rdx,QWORD PTR [rip+0x20d5f]        # 0x140024738
   1400039d9:	lea    rcx,[rip+0x16fa0]        # 0x14001a980
   1400039e0:	call   0x140009c3c
   1400039e5:	mov    rdx,QWORD PTR [rip+0x20d6c]        # 0x140024758
   1400039ec:	lea    rcx,[rip+0x16f7d]        # 0x14001a970
   1400039f3:	call   0x140009c3c
   1400039f8:	lea    rcx,[rip+0x16f61]        # 0x14001a960
   1400039ff:	call   0x140009c3c
   140003a04:	mov    r11d,DWORD PTR [rip+0x20d65]        # 0x140024770
   140003a0b:	dec    r11d
   140003a0e:	je     0x140003a27
   140003a10:	dec    r11d
   140003a13:	je     0x140003a1e
   140003a15:	lea    rcx,[rip+0x16f24]        # 0x14001a940
   140003a1c:	jmp    0x140003a2e
   140003a1e:	lea    rcx,[rip+0x16ef3]        # 0x14001a918
   140003a25:	jmp    0x140003a2e
   140003a27:	lea    rcx,[rip+0x16ec2]        # 0x14001a8f0
   140003a2e:	call   0x140009c3c
   140003a33:	call   0x1400040f0
   140003a38:	test   al,al
   140003a3a:	je     0x140003a83
   140003a3c:	lea    rcx,[rip+0x179dd]        # 0x14001b420
   140003a43:	call   0x140009c3c
   140003a48:	xor    ebx,ebx
   140003a4a:	cmp    DWORD PTR [rsp+0x40],ebx
   140003a4e:	jle    0x140003a75
   140003a50:	xor    edi,edi
   140003a52:	mov    r8,QWORD PTR [rsp+0x48]
   140003a57:	lea    rcx,[rip+0x179b2]        # 0x14001b410
   140003a5e:	mov    edx,ebx
   140003a60:	mov    r8,QWORD PTR [rdi+r8*1]
   140003a64:	call   0x140009c3c
   140003a69:	inc    ebx
   140003a6b:	add    rdi,0x8
   140003a6f:	cmp    ebx,DWORD PTR [rsp+0x40]
   140003a73:	jl     0x140003a52
   140003a75:	lea    rcx,[rip+0x176cc]        # 0x14001b148
   140003a7c:	xor    edx,edx
   140003a7e:	call   0x14000121c
   140003a83:	mov    rdx,QWORD PTR [rsp+0x48]
   140003a88:	mov    ecx,DWORD PTR [rsp+0x40]
   140003a8c:	lea    r8,[rsp+0x60]
   140003a91:	call   0x140002798
   140003a96:	mov    r9d,0x104
   140003a9c:	lea    rax,[rbp+0x90]
   140003aa3:	mov    DWORD PTR [rsp+0x38],r9d
   140003aa8:	mov    QWORD PTR [rsp+0x30],rax
   140003aad:	lea    rax,[rbp-0x80]
   140003ab1:	mov    DWORD PTR [rsp+0x28],r9d
   140003ab6:	lea    r8,[rbp+0x1a0]
   140003abd:	lea    rdx,[rsp+0x48]
   140003ac2:	lea    rcx,[rsp+0x40]
   140003ac7:	mov    QWORD PTR [rsp+0x20],rax
   140003acc:	call   0x1400054c4
   140003ad1:	and    QWORD PTR [rsp+0x68],0x0
   140003ad7:	and    QWORD PTR [rsp+0x70],0x0
   140003add:	call   0x1400040f0
   140003ae2:	test   al,al
   140003ae4:	je     0x140003af0
   140003ae6:	call   0x1400042a0
   140003aeb:	mov    rbx,rax
   140003aee:	jmp    0x140003af5
   140003af0:	mov    rbx,QWORD PTR [rsp+0x58]
   140003af5:	lea    rdx,[rsp+0x68]
   140003afa:	lea    rcx,[rbp-0x80]
   140003afe:	call   0x1400058a8
   140003b03:	test   al,al
   140003b05:	jne    0x140003b11
   140003b07:	mov    eax,0x6
   140003b0c:	jmp    0x140003c37
   140003b11:	call   0x1400040f0
   140003b16:	test   al,al
   140003b18:	je     0x140003b21
   140003b1a:	call   0x1400042a0
   140003b1f:	jmp    0x140003b26
   140003b21:	mov    rax,QWORD PTR [rsp+0x58]
   140003b26:	sub    rax,rbx
   140003b29:	mov    rcx,rax
   140003b2c:	call   0x1400042ec
   140003b31:	lea    rcx,[rip+0x178b0]        # 0x14001b3e8
   140003b38:	mov    rdx,rax
   140003b3b:	call   0x14000408c
   140003b40:	add    QWORD PTR [rsp+0x48],0x8
   140003b46:	dec    DWORD PTR [rsp+0x40]
   140003b4a:	cmp    BYTE PTR [rip+0x20c13],0x0        # 0x140024764
   140003b51:	je     0x140003b83
   140003b53:	lea    r9,[rsp+0x48]
   140003b58:	lea    r8,[rsp+0x40]
   140003b5d:	mov    rdx,r12
   140003b60:	mov    ecx,esi
   140003b62:	call   0x1400031ec
   140003b67:	mov    ecx,DWORD PTR [rbp+0x320]
   140003b6d:	mov    rdx,r13
   140003b70:	call   0x140001720
   140003b75:	test   al,al
   140003b77:	jne    0x140003ba2
   140003b79:	mov    eax,0x1
   140003b7e:	jmp    0x140003c37
   140003b83:	lea    rcx,[rip+0x16b8e]        # 0x14001a718
   140003b8a:	call   0x140009da4
   140003b8f:	lea    rcx,[rip+0x1784a]        # 0x14001b3e0
   140003b96:	test   rax,rax
   140003b99:	cmovne rcx,rax
   140003b9d:	call   0x14000138c
   140003ba2:	lea    rax,[rsp+0x60]
   140003ba7:	lea    r9,[rsp+0x58]
   140003bac:	lea    r8,[rsp+0x50]
   140003bb1:	lea    rdx,[rsp+0x48]
   140003bb6:	lea    rcx,[rsp+0x40]
   140003bbb:	mov    QWORD PTR [rsp+0x20],rax
   140003bc0:	call   0x140002c94
   140003bc5:	test   al,al
   140003bc7:	jne    0x140003bcf
   140003bc9:	mov    eax,DWORD PTR [rsp+0x60]
   140003bcd:	jmp    0x140003c37
   140003bcf:	mov    edi,DWORD PTR [rsp+0x50]
   140003bd3:	mov    rbx,QWORD PTR [rsp+0x58]
   140003bd8:	cmp    edi,0x2
   140003bdb:	jne    0x140003be5
   140003bdd:	mov    rcx,rbx
   140003be0:	call   0x14000138c
   140003be5:	mov    r8,QWORD PTR [rsp+0x48]
   140003bea:	mov    edx,DWORD PTR [rsp+0x40]
   140003bee:	mov    rcx,rbx
   140003bf1:	call   0x1400018bc
   140003bf6:	lea    rcx,[rip+0x16b43]        # 0x14001a740
   140003bfd:	xor    edx,edx
   140003bff:	call   0x14000121c
   140003c04:	call   0x140004eb4
   140003c09:	mov    r11d,DWORD PTR [rsp+0x60]
   140003c0e:	mov    r9,QWORD PTR [rsp+0x48]
   140003c13:	mov    r8d,DWORD PTR [rsp+0x40]
   140003c18:	mov    rdx,QWORD PTR [rip+0x20b79]        # 0x140024798
   140003c1f:	mov    DWORD PTR [rsp+0x30],r11d
   140003c24:	lea    rcx,[rsp+0x68]
   140003c29:	mov    QWORD PTR [rsp+0x28],rbx
   140003c2e:	mov    DWORD PTR [rsp+0x20],edi
   140003c32:	call   0x140004e48
   140003c37:	mov    rcx,QWORD PTR [rbp+0x2b0]
   140003c3e:	xor    rcx,rsp
   140003c41:	call   0x14000a850
   140003c46:	add    rsp,0x3c8
   140003c4d:	pop    r13
   140003c4f:	pop    r12
   140003c51:	pop    rdi
   140003c52:	pop    rsi
   140003c53:	pop    rbx
   140003c54:	pop    rbp
   140003c55:	ret    
   140003c56:	int3   
   140003c57:	int3   
   140003c58:	mov    QWORD PTR [rsp+0x20],rbx
   140003c5d:	mov    QWORD PTR [rsp+0x18],r8
   140003c62:	push   rbp
   140003c63:	push   rsi
   140003c64:	push   rdi
   140003c65:	push   r12
   140003c67:	push   r13
   140003c69:	push   r14
   140003c6b:	push   r15
   140003c6d:	sub    rsp,0x20
   140003c71:	mov    r15,rcx
   140003c74:	xor    ecx,ecx
   140003c76:	mov    rdi,rdx
   140003c79:	mov    bl,cl
   140003c7b:	mov    BYTE PTR [rsp+0x60],cl
   140003c7f:	mov    r13d,ecx
   140003c82:	mov    esi,ecx
   140003c84:	movzx  r12d,cx
   140003c88:	mov    r14b,cl
   140003c8b:	mov    BYTE PTR [r8],cl
   140003c8e:	xor    ecx,ecx
   140003c90:	xor    r8d,r8d
   140003c93:	mov    rdx,r15
   140003c96:	call   QWORD PTR [rip+0x166a4]        # 0x14001a340
   140003c9c:	mov    rcx,rax
   140003c9f:	sub    ecx,r15d
   140003ca2:	mov    QWORD PTR [rsp+0x68],rcx
   140003ca7:	je     0x140003f04
   140003cad:	mov    edx,0x1
   140003cb2:	cmp    ecx,edx
   140003cb4:	jne    0x140003cbc
   140003cb6:	movzx  ebp,BYTE PTR [r15]
   140003cba:	jmp    0x140003cc0
   140003cbc:	movzx  ebp,WORD PTR [r15]
   140003cc0:	movzx  eax,bp
   140003cc3:	cmp    eax,0x9
   140003cc6:	je     0x140003e79
   140003ccc:	cmp    eax,0x20
   140003ccf:	je     0x140003e79
   140003cd5:	mov    r10d,0x22
   140003cdb:	cmp    eax,r10d
   140003cde:	je     0x140003dcc
   140003ce4:	cmp    eax,0x2a
   140003ce7:	je     0x140003d53
   140003ce9:	cmp    eax,0x3f
   140003cec:	je     0x140003d53
   140003cee:	lea    r9d,[r10+0x3a]
   140003cf2:	cmp    eax,r9d
   140003cf5:	je     0x140003d41
   140003cf7:	xor    r8d,r8d
   140003cfa:	cmp    r12w,r9w
   140003cfe:	jne    0x140003d31
   140003d00:	test   esi,esi
   140003d02:	jle    0x140003ec3
   140003d08:	mov    r8d,esi
   140003d0b:	mov    dl,r9b
   140003d0e:	mov    rcx,rdi
   140003d11:	mov    ebx,esi
   140003d13:	call   0x14000a560
   140003d18:	mov    rcx,QWORD PTR [rsp+0x68]
   140003d1d:	add    rdi,rbx
   140003d20:	mov    bl,BYTE PTR [rsp+0x60]
   140003d24:	mov    edx,0x1
   140003d29:	xor    r8d,r8d
   140003d2c:	jmp    0x140003ec3
   140003d31:	test   bl,bl
   140003d33:	je     0x140003ec3
   140003d39:	mov    r14b,dl
   140003d3c:	jmp    0x140003eea
   140003d41:	add    esi,edx
   140003d43:	test   bl,bl
   140003d45:	je     0x140003ef2
   140003d4b:	mov    r14b,dl
   140003d4e:	jmp    0x140003f0a
   140003d53:	test   bl,bl
   140003d55:	jne    0x140003f01
   140003d5b:	mov    eax,r13d
   140003d5e:	and    eax,0x80000001
   140003d63:	jge    0x140003d6c
   140003d65:	sub    eax,edx
   140003d67:	or     eax,0xfffffffe
   140003d6a:	add    eax,edx
   140003d6c:	test   eax,eax
   140003d6e:	jne    0x140003d77
   140003d70:	mov    rax,QWORD PTR [rsp+0x70]
   140003d75:	mov    BYTE PTR [rax],dl
   140003d77:	mov    r9d,0x5c
   140003d7d:	cmp    r12w,r9w
   140003d81:	jne    0x140003da8
   140003d83:	test   esi,esi
   140003d85:	jle    0x140003da8
   140003d87:	mov    r8d,esi
   140003d8a:	mov    dl,r9b
   140003d8d:	mov    rcx,rdi
   140003d90:	mov    ebx,esi
   140003d92:	call   0x14000a560
   140003d97:	mov    rcx,QWORD PTR [rsp+0x68]
   140003d9c:	add    rdi,rbx
   140003d9f:	mov    bl,BYTE PTR [rsp+0x60]
   140003da3:	mov    edx,0x1
   140003da8:	movzx  eax,bp
   140003dab:	shr    ax,0x8
   140003daf:	test   al,al
   140003db1:	jne    0x140003dba
   140003db3:	mov    BYTE PTR [rdi],bpl
   140003db6:	mov    eax,edx
   140003db8:	jmp    0x140003dc2
   140003dba:	mov    WORD PTR [rdi],bp
   140003dbd:	mov    eax,0x2
   140003dc2:	cdqe   
   140003dc4:	add    rdi,rax
   140003dc7:	jmp    0x140003ef2
   140003dcc:	xor    r8d,r8d
   140003dcf:	lea    r9d,[r8+0x5c]
   140003dd3:	test   bl,bl
   140003dd5:	jne    0x140003d4b
   140003ddb:	cmp    r12w,r9w
   140003ddf:	jne    0x140003e28
   140003de1:	cmp    esi,edx
   140003de3:	jle    0x140003e10
   140003de5:	lea    eax,[rsi-0x2]
   140003de8:	mov    rcx,rdi
   140003deb:	shr    eax,1
   140003ded:	add    eax,edx
   140003def:	mov    dl,r9b
   140003df2:	mov    r8d,eax
   140003df5:	mov    ebx,eax
   140003df7:	call   0x14000a560
   140003dfc:	mov    rcx,QWORD PTR [rsp+0x68]
   140003e01:	add    rdi,rbx
   140003e04:	mov    bl,BYTE PTR [rsp+0x60]
   140003e08:	xor    r8d,r8d
   140003e0b:	mov    edx,0x1
   140003e10:	and    esi,0x80000001
   140003e16:	jge    0x140003e1f
   140003e18:	sub    esi,edx
   140003e1a:	or     esi,0xfffffffe
   140003e1d:	add    esi,edx
   140003e1f:	cmp    esi,edx
   140003e21:	je     0x140003e46
   140003e23:	add    r13d,edx
   140003e26:	jmp    0x140003e74
   140003e28:	cmp    r12w,r10w
   140003e2c:	jne    0x140003e67
   140003e2e:	mov    eax,r13d
   140003e31:	and    eax,0x80000001
   140003e36:	jge    0x140003e3f
   140003e38:	sub    eax,edx
   140003e3a:	or     eax,0xfffffffe
   140003e3d:	add    eax,edx
   140003e3f:	test   eax,eax
   140003e41:	jne    0x140003e67
   140003e43:	add    r13d,edx
   140003e46:	movzx  eax,bp
   140003e49:	shr    ax,0x8
   140003e4d:	test   al,al
   140003e4f:	jne    0x140003e58
   140003e51:	mov    BYTE PTR [rdi],bpl
   140003e54:	mov    eax,edx
   140003e56:	jmp    0x140003e60
   140003e58:	mov    WORD PTR [rdi],bp
   140003e5b:	mov    eax,0x2
   140003e60:	cdqe   
   140003e62:	add    rdi,rax
   140003e65:	jmp    0x140003e74
   140003e67:	test   r13d,r13d
   140003e6a:	jne    0x140003e71
   140003e6c:	mov    r13d,edx
   140003e6f:	jmp    0x140003e74
   140003e71:	sub    r13d,edx
   140003e74:	mov    esi,r8d
   140003e77:	jmp    0x140003ef2
   140003e79:	mov    eax,0x5c
   140003e7e:	xor    r8d,r8d
   140003e81:	cmp    r12w,ax
   140003e85:	jne    0x140003eae
   140003e87:	test   esi,esi
   140003e89:	jle    0x140003eae
   140003e8b:	mov    r8d,esi
   140003e8e:	mov    dl,al
   140003e90:	mov    rcx,rdi
   140003e93:	mov    ebx,esi
   140003e95:	call   0x14000a560
   140003e9a:	mov    rcx,QWORD PTR [rsp+0x68]
   140003e9f:	add    rdi,rbx
   140003ea2:	mov    bl,BYTE PTR [rsp+0x60]
   140003ea6:	mov    edx,0x1
   140003eab:	xor    r8d,r8d
   140003eae:	mov    eax,r13d
   140003eb1:	and    eax,0x80000001
   140003eb6:	jge    0x140003ebf
   140003eb8:	sub    eax,edx
   140003eba:	or     eax,0xfffffffe
   140003ebd:	add    eax,edx
   140003ebf:	cmp    eax,edx
   140003ec1:	jne    0x140003ee4
   140003ec3:	movzx  eax,bp
   140003ec6:	shr    ax,0x8
   140003eca:	test   al,al
   140003ecc:	jne    0x140003ed5
   140003ece:	mov    BYTE PTR [rdi],bpl
   140003ed1:	mov    eax,edx
   140003ed3:	jmp    0x140003edd
   140003ed5:	mov    WORD PTR [rdi],bp
   140003ed8:	mov    eax,0x2
   140003edd:	cdqe   
   140003edf:	add    rdi,rax
   140003ee2:	jmp    0x140003eea
   140003ee4:	mov    bl,dl
   140003ee6:	mov    BYTE PTR [rsp+0x60],dl
   140003eea:	mov    esi,r8d
   140003eed:	test   r14b,r14b
   140003ef0:	jne    0x140003f04
   140003ef2:	movsxd rax,ecx
   140003ef5:	movzx  r12d,bp
   140003ef9:	add    r15,rax
   140003efc:	jmp    0x140003c8e
   140003f01:	mov    r14b,dl
   140003f04:	mov    r9d,0x5c
   140003f0a:	cmp    r12w,r9w
   140003f0e:	jne    0x140003f27
   140003f10:	test   esi,esi
   140003f12:	jle    0x140003f27
   140003f14:	mov    r8d,esi
   140003f17:	mov    dl,r9b
   140003f1a:	mov    rcx,rdi
   140003f1d:	mov    ebx,esi
   140003f1f:	call   0x14000a560
   140003f24:	add    rdi,rbx
   140003f27:	mov    rbx,QWORD PTR [rsp+0x78]
   140003f2c:	xor    ecx,ecx
   140003f2e:	neg    r14b
   140003f31:	sbb    rax,rax
   140003f34:	mov    BYTE PTR [rdi],cl
   140003f36:	and    rax,r15
   140003f39:	add    rsp,0x20
   140003f3d:	pop    r15
   140003f3f:	pop    r14
   140003f41:	pop    r13
   140003f43:	pop    r12
   140003f45:	pop    rdi
   140003f46:	pop    rsi
   140003f47:	pop    rbp
   140003f48:	ret    
   140003f49:	int3   
   140003f4a:	int3   
   140003f4b:	int3   
   140003f4c:	mov    eax,DWORD PTR [rip+0x2086e]        # 0x1400247c0
   140003f52:	ret    
   140003f53:	int3   
   140003f54:	mov    rax,QWORD PTR [rip+0x2086d]        # 0x1400247c8
   140003f5b:	ret    
   140003f5c:	mov    rax,rsp
   140003f5f:	mov    QWORD PTR [rax+0x10],rbx
   140003f63:	mov    QWORD PTR [rax+0x18],rbp
   140003f67:	mov    QWORD PTR [rax+0x20],rsi
   140003f6b:	push   rdi
   140003f6c:	push   r12
   140003f6e:	push   r13
   140003f70:	sub    rsp,0x20
   140003f74:	xor    ebx,ebx
   140003f76:	mov    rsi,rcx
   140003f79:	xor    edi,edi
   140003f7b:	mov    BYTE PTR [rax+0x8],bl
   140003f7e:	call   0x140004058
   140003f83:	xor    ebp,ebp
   140003f85:	mov    r12,rax
   140003f88:	lea    r13d,[rbx+0x1]
   140003f8c:	lea    r8,[rsp+0x40]
   140003f91:	mov    rdx,r12
   140003f94:	mov    rcx,rsi
   140003f97:	call   0x140003c58
   140003f9c:	movsxd rdx,r13d
   140003f9f:	mov    rcx,rdi
   140003fa2:	shl    rdx,0x4
   140003fa6:	mov    rsi,rax
   140003fa9:	call   0x14000402c
   140003fae:	mov    rcx,r12
   140003fb1:	mov    rdi,rax
   140003fb4:	call   0x140004058
   140003fb9:	inc    ebx
   140003fbb:	mov    QWORD PTR [rdi+rbp*1],rax
   140003fbf:	mov    al,BYTE PTR [rsp+0x40]
   140003fc3:	add    rbp,0x10
   140003fc7:	mov    BYTE PTR [rdi+rbp*1-0x8],al
   140003fcb:	inc    r13d
   140003fce:	mov    BYTE PTR [r12],0x0
   140003fd3:	test   rsi,rsi
   140003fd6:	jne    0x140003f8c
   140003fd8:	mov    rbp,QWORD PTR [rsp+0x50]
   140003fdd:	mov    rsi,QWORD PTR [rsp+0x58]
   140003fe2:	mov    DWORD PTR [rip+0x207d8],ebx        # 0x1400247c0
   140003fe8:	mov    rbx,QWORD PTR [rsp+0x48]
   140003fed:	mov    QWORD PTR [rip+0x207d4],rdi        # 0x1400247c8
   140003ff4:	add    rsp,0x20
   140003ff8:	pop    r13
   140003ffa:	pop    r12
   140003ffc:	pop    rdi
   140003ffd:	ret    
   140003ffe:	int3   
   140003fff:	int3   
   140004000:	sub    rsp,0x28
   140004004:	call   0x14000b304
   140004009:	test   rax,rax
   14000400c:	jne    0x140004025
   14000400e:	lea    rcx,[rip+0x1741f]        # 0x14001b434
   140004015:	call   0x14000b254
   14000401a:	mov    ecx,0x1
   14000401f:	call   0x140009bdc
   140004024:	int3   
   140004025:	add    rsp,0x28
   140004029:	ret    
   14000402a:	int3   
   14000402b:	int3   
   14000402c:	sub    rsp,0x28
   140004030:	call   0x14000b3bc
   140004035:	test   rax,rax
   140004038:	jne    0x140004051
   14000403a:	lea    rcx,[rip+0x173ff]        # 0x14001b440
   140004041:	call   0x14000b254
   140004046:	mov    ecx,0x1
   14000404b:	call   0x140009bdc
   140004050:	int3   
   140004051:	add    rsp,0x28
   140004055:	ret    
   140004056:	int3   
   140004057:	int3   
   140004058:	sub    rsp,0x28
   14000405c:	call   0x140018c50
   140004061:	test   rax,rax
   140004064:	jne    0x14000407d
   140004066:	lea    rcx,[rip+0x173db]        # 0x14001b448
   14000406d:	call   0x14000b254
   140004072:	mov    ecx,0x1
   140004077:	call   0x140009bdc
   14000407c:	int3   
   14000407d:	add    rsp,0x28
   140004081:	ret    
   140004082:	int3   
   140004083:	int3   
   140004084:	jmp    0x14000b490
   140004089:	int3   
   14000408a:	int3   
   14000408b:	int3   
   14000408c:	mov    rax,rsp
   14000408f:	mov    QWORD PTR [rax+0x8],rcx
   140004093:	mov    QWORD PTR [rax+0x10],rdx
   140004097:	mov    QWORD PTR [rax+0x18],r8
   14000409b:	mov    QWORD PTR [rax+0x20],r9
   14000409f:	sub    rsp,0x28
   1400040a3:	cmp    BYTE PTR [rip+0x20726],0x1        # 0x1400247d0
   1400040aa:	jne    0x1400040b5
   1400040ac:	lea    rdx,[rax+0x10]
   1400040b0:	call   0x14000b578
   1400040b5:	add    rsp,0x28
   1400040b9:	ret    
   1400040ba:	int3   
   1400040bb:	int3   
   1400040bc:	sub    rsp,0x28
   1400040c0:	lea    rcx,[rip+0x163b9]        # 0x14001a480
   1400040c7:	call   0x140009da4
   1400040cc:	test   rax,rax
   1400040cf:	je     0x1400040eb
   1400040d1:	lea    rdx,[rip+0x163a8]        # 0x14001a480
   1400040d8:	lea    rcx,[rip+0x16549]        # 0x14001a628
   1400040df:	mov    BYTE PTR [rip+0x206ea],0x1        # 0x1400247d0
   1400040e6:	call   0x14000408c
   1400040eb:	add    rsp,0x28
   1400040ef:	ret    
   1400040f0:	mov    al,BYTE PTR [rip+0x206da]        # 0x1400247d0
   1400040f6:	ret    
   1400040f7:	int3   
   1400040f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400040fd:	push   rdi
   1400040fe:	sub    rsp,0x20
   140004102:	mov    rdi,rcx
   140004105:	mov    rcx,rdx
   140004108:	mov    rbx,rdx
   14000410b:	call   0x140009fd0
   140004110:	mov    rdx,rbx
   140004113:	mov    rcx,rdi
   140004116:	mov    r8,rax
   140004119:	mov    rbx,QWORD PTR [rsp+0x30]
   14000411e:	add    rsp,0x20
   140004122:	pop    rdi
   140004123:	jmp    0x14000b5a0
   140004128:	mov    QWORD PTR [rsp+0x8],rbx
   14000412d:	mov    QWORD PTR [rsp+0x10],rsi
   140004132:	push   rdi
   140004133:	sub    rsp,0x20
   140004137:	mov    rdi,rdx
   14000413a:	mov    rbx,rcx
   14000413d:	call   0x140009fd0
   140004142:	movsxd rsi,eax
   140004145:	mov    rdx,rdi
   140004148:	mov    rcx,rbx
   14000414b:	mov    r8,rsi
   14000414e:	call   0x14000b5a0
   140004153:	test   eax,eax
   140004155:	jne    0x140004164
   140004157:	cmp    BYTE PTR [rsi+rdi*1],0x3d
   14000415b:	jne    0x140004164
   14000415d:	lea    rax,[rsi+rdi*1+0x1]
   140004162:	jmp    0x140004166
   140004164:	xor    eax,eax
   140004166:	mov    rbx,QWORD PTR [rsp+0x30]
   14000416b:	mov    rsi,QWORD PTR [rsp+0x38]
   140004170:	add    rsp,0x20
   140004174:	pop    rdi
   140004175:	ret    
   140004176:	int3   
   140004177:	int3   
   140004178:	rex push rbx
   14000417a:	sub    rsp,0x20
   14000417e:	call   0x140004128
   140004183:	mov    rbx,rax
   140004186:	test   rax,rax
   140004189:	je     0x1400041b8
   14000418b:	lea    rdx,[rip+0x16c2a]        # 0x14001adbc
   140004192:	mov    rcx,rax
   140004195:	call   0x140019750
   14000419a:	test   eax,eax
   14000419c:	jne    0x1400041a5
   14000419e:	mov    eax,0x1
   1400041a3:	jmp    0x1400041bb
   1400041a5:	lea    rdx,[rip+0x16c08]        # 0x14001adb4
   1400041ac:	mov    rcx,rbx
   1400041af:	call   0x140019750
   1400041b4:	test   eax,eax
   1400041b6:	je     0x1400041bb
   1400041b8:	or     eax,0xffffffff
   1400041bb:	add    rsp,0x20
   1400041bf:	pop    rbx
   1400041c0:	ret    
   1400041c1:	int3   
   1400041c2:	int3   
   1400041c3:	int3   
   1400041c4:	mov    al,BYTE PTR [rip+0x2061a]        # 0x1400247e4
   1400041ca:	ret    
   1400041cb:	int3   
   1400041cc:	rex push rbx
   1400041ce:	sub    rsp,0x20
   1400041d2:	mov    r8d,edx
   1400041d5:	mov    rbx,rcx
   1400041d8:	mov    rdx,rcx
   1400041db:	xor    ecx,ecx
   1400041dd:	call   QWORD PTR [rip+0x15e65]        # 0x14001a048
   1400041e3:	mov    edx,0x5c
   1400041e8:	mov    rcx,rbx
   1400041eb:	call   0x14000bb58
   1400041f0:	mov    edx,0x5c
   1400041f5:	mov    rcx,rbx
   1400041f8:	mov    BYTE PTR [rax],0x0
   1400041fb:	call   0x14000bb58
   140004200:	test   rax,rax
   140004203:	jne    0x140004209
   140004205:	mov    BYTE PTR [rbx],al
   140004207:	jmp    0x14000420e
   140004209:	mov    BYTE PTR [rax],0x0
   14000420c:	mov    al,0x1
   14000420e:	add    rsp,0x20
   140004212:	pop    rbx
   140004213:	ret    
   140004214:	mov    r11,rsp
   140004217:	mov    QWORD PTR [r11+0x8],rbx
   14000421b:	mov    QWORD PTR [r11+0x10],rbp
   14000421f:	mov    QWORD PTR [r11+0x18],rsi
   140004223:	push   rdi
   140004224:	sub    rsp,0x40
   140004228:	lea    rax,[r11-0x18]
   14000422c:	mov    ebx,r9d
   14000422f:	mov    rbp,r8
   140004232:	mov    QWORD PTR [r11-0x20],rax
   140004236:	and    QWORD PTR [r11-0x28],0x0
   14000423b:	lea    r9,[r11-0x14]
   14000423f:	xor    r8d,r8d
   140004242:	mov    rdi,rdx
   140004245:	mov    rsi,rcx
   140004248:	call   QWORD PTR [rip+0x15dca]        # 0x14001a018
   14000424e:	test   eax,eax
   140004250:	jne    0x140004288
   140004252:	cmp    DWORD PTR [rsp+0x34],0x1
   140004257:	jne    0x140004288
   140004259:	cmp    DWORD PTR [rsp+0x30],ebx
   14000425d:	jae    0x140004288
   14000425f:	lea    rcx,[rsp+0x30]
   140004264:	xor    r9d,r9d
   140004267:	xor    r8d,r8d
   14000426a:	mov    QWORD PTR [rsp+0x28],rcx
   14000426f:	mov    rcx,rsi
   140004272:	mov    rdx,rdi
   140004275:	mov    QWORD PTR [rsp+0x20],rbp
   14000427a:	call   QWORD PTR [rip+0x15d98]        # 0x14001a018
   140004280:	test   eax,eax
   140004282:	jne    0x140004288
   140004284:	mov    al,0x1
   140004286:	jmp    0x14000428a
   140004288:	xor    al,al
   14000428a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000428f:	mov    rbp,QWORD PTR [rsp+0x58]
   140004294:	mov    rsi,QWORD PTR [rsp+0x60]
   140004299:	add    rsp,0x40
   14000429d:	pop    rdi
   14000429e:	ret    
   14000429f:	int3   
   1400042a0:	sub    rsp,0x28
   1400042a4:	cmp    BYTE PTR [rip+0x2053b],0x0        # 0x1400247e6
   1400042ab:	jne    0x1400042c9
   1400042ad:	lea    rcx,[rip+0x20524]        # 0x1400247d8
   1400042b4:	call   QWORD PTR [rip+0x15d9e]        # 0x14001a058
   1400042ba:	mov    BYTE PTR [rip+0x20525],0x1        # 0x1400247e6
   1400042c1:	mov    BYTE PTR [rip+0x2051e],al        # 0x1400247e5
   1400042c7:	jmp    0x1400042cf
   1400042c9:	mov    al,BYTE PTR [rip+0x20516]        # 0x1400247e5
   1400042cf:	test   al,al
   1400042d1:	jne    0x1400042d7
   1400042d3:	xor    eax,eax
   1400042d5:	jmp    0x1400042e7
   1400042d7:	lea    rcx,[rsp+0x30]
   1400042dc:	call   QWORD PTR [rip+0x15d6e]        # 0x14001a050
   1400042e2:	mov    rax,QWORD PTR [rsp+0x30]
   1400042e7:	add    rsp,0x28
   1400042eb:	ret    
   1400042ec:	cmp    BYTE PTR [rip+0x204f2],0x0        # 0x1400247e5
   1400042f3:	je     0x140004312
   1400042f5:	cmp    BYTE PTR [rip+0x204ea],0x0        # 0x1400247e6
   1400042fc:	je     0x140004312
   1400042fe:	imul   rcx,rcx,0xf4240
   140004305:	mov    rax,rcx
   140004308:	cqo    
   14000430a:	idiv   QWORD PTR [rip+0x204c7]        # 0x1400247d8
   140004311:	ret    
   140004312:	xor    eax,eax
   140004314:	ret    
   140004315:	int3   
   140004316:	int3   
   140004317:	int3   
   140004318:	mov    QWORD PTR [rsp+0x18],r8
   14000431d:	mov    QWORD PTR [rsp+0x20],r9
   140004322:	push   rbx
   140004323:	push   rdi
   140004324:	sub    rsp,0x28
   140004328:	mov    rbx,rdx
   14000432b:	mov    rdi,rcx
   14000432e:	test   rdx,rdx
   140004331:	je     0x140004364
   140004333:	test   rcx,rcx
   140004336:	je     0x140004364
   140004338:	lea    r9,[rsp+0x58]
   14000433d:	mov    BYTE PTR [rcx],0x0
   140004340:	call   0x14000bc4c
   140004345:	movsxd r11,eax
   140004348:	test   eax,eax
   14000434a:	jns    0x140004355
   14000434c:	mov    BYTE PTR [rdi+rbx*1-0x1],0x0
   140004351:	mov    eax,ebx
   140004353:	jmp    0x140004367
   140004355:	cmp    r11,rbx
   140004358:	jne    0x14000435f
   14000435a:	mov    BYTE PTR [rdi+rbx*1-0x1],0x0
   14000435f:	mov    eax,r11d
   140004362:	jmp    0x140004367
   140004364:	or     eax,0xffffffff
   140004367:	add    rsp,0x28
   14000436b:	pop    rdi
   14000436c:	pop    rbx
   14000436d:	ret    
   14000436e:	int3   
   14000436f:	int3   
   140004370:	mov    rax,rsp
   140004373:	mov    QWORD PTR [rax+0x8],rcx
   140004377:	mov    QWORD PTR [rax+0x10],rdx
   14000437b:	mov    QWORD PTR [rax+0x18],r8
   14000437f:	mov    QWORD PTR [rax+0x20],r9
   140004383:	push   rbx
   140004384:	push   rsi
   140004385:	push   rdi
   140004386:	sub    rsp,0x20
   14000438a:	cmp    BYTE PTR [rip+0x20453],0x0        # 0x1400247e4
   140004391:	lea    rsi,[rax+0x10]
   140004395:	je     0x1400043e9
   140004397:	mov    rdx,rsi
   14000439a:	call   0x14000bcf4
   14000439f:	movsxd rbx,eax
   1400043a2:	lea    ecx,[rbx+0x1]
   1400043a5:	movsxd rcx,ecx
   1400043a8:	call   0x140004000
   1400043ad:	mov    r8,QWORD PTR [rsp+0x40]
   1400043b2:	mov    r9,rsi
   1400043b5:	mov    rcx,rax
   1400043b8:	mov    rdx,rbx
   1400043bb:	mov    rdi,rax
   1400043be:	call   0x14000bc4c
   1400043c3:	lea    r8,[rip+0x170a6]        # 0x14001b470
   1400043ca:	mov    r9d,0x10
   1400043d0:	mov    rdx,rdi
   1400043d3:	xor    ecx,ecx
   1400043d5:	mov    BYTE PTR [rbx+rdi*1],0x0
   1400043d9:	call   QWORD PTR [rip+0x15f69]        # 0x14001a348
   1400043df:	mov    rcx,rdi
   1400043e2:	call   0x140004084
   1400043e7:	jmp    0x140004414
   1400043e9:	call   0x14000abc8
   1400043ee:	mov    rdx,QWORD PTR [rsp+0x40]
   1400043f3:	mov    r8,rsi
   1400043f6:	lea    rcx,[rax+0x60]
   1400043fa:	call   0x14000aba4
   1400043ff:	call   0x14000abc8
   140004404:	lea    rdx,[rip+0x16619]        # 0x14001aa24
   14000440b:	lea    rcx,[rax+0x60]
   14000440f:	call   0x14000a930
   140004414:	add    rsp,0x20
   140004418:	pop    rdi
   140004419:	pop    rsi
   14000441a:	pop    rbx
   14000441b:	ret    
   14000441c:	mov    rax,rsp
   14000441f:	mov    QWORD PTR [rax+0x8],rcx
   140004423:	mov    QWORD PTR [rax+0x10],rdx
   140004427:	mov    QWORD PTR [rax+0x18],r8
   14000442b:	mov    QWORD PTR [rax+0x20],r9
   14000442f:	push   rbp
   140004430:	push   rbx
   140004431:	push   rsi
   140004432:	push   rdi
   140004433:	push   r12
   140004435:	push   r14
   140004437:	mov    rbp,rsp
   14000443a:	sub    rsp,0x58
   14000443e:	call   0x14000bdf0
   140004443:	xor    sil,sil
   140004446:	lea    r14,[rbp+0x40]
   14000444a:	mov    ebx,DWORD PTR [rax]
   14000444c:	and    QWORD PTR [rbp-0x18],0x0
   140004451:	call   QWORD PTR [rip+0x15c19]        # 0x14001a070
   140004457:	test   eax,eax
   140004459:	je     0x1400044c5
   14000445b:	and    QWORD PTR [rsp+0x30],0x0
   140004461:	and    DWORD PTR [rsp+0x28],0x0
   140004466:	lea    rcx,[rbp-0x18]
   14000446a:	mov    QWORD PTR [rsp+0x20],rcx
   14000446f:	xor    r9d,r9d
   140004472:	mov    r8d,eax
   140004475:	mov    ecx,0x1300
   14000447a:	xor    edx,edx
   14000447c:	call   QWORD PTR [rip+0x15be6]        # 0x14001a068
   140004482:	mov    rdx,QWORD PTR [rbp-0x18]
   140004486:	movsxd r11,eax
   140004489:	test   rdx,rdx
   14000448c:	je     0x1400044bc
   14000448e:	test   eax,eax
   140004490:	je     0x1400044bc
   140004492:	mov    sil,0x1
   140004495:	cmp    r11d,0x2
   140004499:	jle    0x1400044d0
   14000449b:	cmp    BYTE PTR [r11+rdx*1-0x1],0xa
   1400044a1:	jne    0x1400044a6
   1400044a3:	dec    r11d
   1400044a6:	movsxd rax,r11d
   1400044a9:	cmp    BYTE PTR [rax+rdx*1-0x1],0xd
   1400044ae:	jne    0x1400044b3
   1400044b0:	dec    r11d
   1400044b3:	movsxd rax,r11d
   1400044b6:	mov    BYTE PTR [rax+rdx*1],0x0
   1400044ba:	jmp    0x1400044d0
   1400044bc:	lea    rax,[rip+0x16fd0]        # 0x14001b493
   1400044c3:	jmp    0x1400044cc
   1400044c5:	mov    ecx,ebx
   1400044c7:	call   0x14000bd0c
   1400044cc:	mov    QWORD PTR [rbp-0x18],rax
   1400044d0:	cmp    BYTE PTR [rip+0x2030d],0x0        # 0x1400247e4
   1400044d7:	je     0x140004550
   1400044d9:	mov    rcx,QWORD PTR [rbp+0x38]
   1400044dd:	mov    rdx,r14
   1400044e0:	call   0x14000bcf4
   1400044e5:	lea    ebx,[rax+0x1]
   1400044e8:	movsxd r12,ebx
   1400044eb:	test   sil,sil
   1400044ee:	je     0x1400044fb
   1400044f0:	mov    rcx,QWORD PTR [rbp-0x18]
   1400044f4:	call   0x140009fd0
   1400044f9:	add    ebx,eax
   1400044fb:	movsxd rcx,ebx
   1400044fe:	call   0x140004000
   140004503:	mov    r8,QWORD PTR [rbp+0x38]
   140004507:	mov    r9,r14
   14000450a:	mov    rcx,rax
   14000450d:	mov    rdx,r12
   140004510:	mov    rdi,rax
   140004513:	call   0x14000bc4c
   140004518:	mov    BYTE PTR [r12+rdi*1],0x0
   14000451d:	test   sil,sil
   140004520:	je     0x14000452e
   140004522:	mov    rdx,QWORD PTR [rbp-0x18]
   140004526:	mov    rcx,rdi
   140004529:	call   0x14000a6e0
   14000452e:	lea    r8,[rip+0x16f3b]        # 0x14001b470
   140004535:	mov    r9d,0x10
   14000453b:	mov    rdx,rdi
   14000453e:	xor    ecx,ecx
   140004540:	call   QWORD PTR [rip+0x15e02]        # 0x14001a348
   140004546:	mov    rcx,rdi
   140004549:	call   0x140004084
   14000454e:	jmp    0x140004583
   140004550:	call   0x14000abc8
   140004555:	mov    rdx,QWORD PTR [rbp+0x38]
   140004559:	mov    r8,r14
   14000455c:	lea    rcx,[rax+0x60]
   140004560:	call   0x14000aba4
   140004565:	test   sil,sil
   140004568:	je     0x140004592
   14000456a:	call   0x14000abc8
   14000456f:	mov    r8,QWORD PTR [rbp-0x18]
   140004573:	lea    rdx,[rip+0x16f16]        # 0x14001b490
   14000457a:	lea    rcx,[rax+0x60]
   14000457e:	call   0x14000a930
   140004583:	test   sil,sil
   140004586:	je     0x140004592
   140004588:	mov    rcx,QWORD PTR [rbp-0x18]
   14000458c:	call   QWORD PTR [rip+0x15ace]        # 0x14001a060
   140004592:	add    rsp,0x58
   140004596:	pop    r14
   140004598:	pop    r12
   14000459a:	pop    rdi
   14000459b:	pop    rsi
   14000459c:	pop    rbx
   14000459d:	pop    rbp
   14000459e:	ret    
   14000459f:	int3   
   1400045a0:	cmp    BYTE PTR [rip+0x2023d],0x0        # 0x1400247e4
   1400045a7:	je     0x1400045c6
   1400045a9:	lea    r8,[rip+0x16ec0]        # 0x14001b470
   1400045b0:	lea    rdx,[rip+0x16ee1]        # 0x14001b498
   1400045b7:	mov    r9d,0x10
   1400045bd:	xor    ecx,ecx
   1400045bf:	rex.W jmp QWORD PTR [rip+0x15d82]        # 0x14001a348
   1400045c6:	mov    rax,QWORD PTR [rcx]
   1400045c9:	rex.W jmp QWORD PTR [rax+0x80]
   1400045d0:	sub    rsp,0x28
   1400045d4:	call   0x140001f0c
   1400045d9:	cmp    eax,0x2
   1400045dc:	sete   al
   1400045df:	add    rsp,0x28
   1400045e3:	ret    
   1400045e4:	mov    QWORD PTR [rsp+0x10],rbx
   1400045e9:	mov    QWORD PTR [rsp+0x18],rsi
   1400045ee:	mov    QWORD PTR [rsp+0x20],rdi
   1400045f3:	push   rbp
   1400045f4:	push   r12
   1400045f6:	push   r13
   1400045f8:	lea    rbp,[rsp-0x80]
   1400045fd:	sub    rsp,0x180
   140004604:	mov    rax,QWORD PTR [rip+0x1eab5]        # 0x1400230c0
   14000460b:	xor    rax,rsp
   14000460e:	mov    QWORD PTR [rbp+0x70],rax
   140004612:	and    QWORD PTR [rsp+0x30],0x0
   140004618:	mov    r13,rcx
   14000461b:	mov    QWORD PTR [rsp+0x48],0xffffffff80000001
   140004624:	xor    edi,edi
   140004626:	mov    QWORD PTR [rsp+0x50],0xffffffff80000002
   14000462f:	mov    rcx,QWORD PTR [rsp+rdi*8+0x48]
   140004634:	lea    rax,[rsp+0x30]
   140004639:	lea    rdx,[rip+0x16e88]        # 0x14001b4c8
   140004640:	mov    r9d,0x20019
   140004646:	xor    r8d,r8d
   140004649:	mov    QWORD PTR [rsp+0x20],rax
   14000464e:	call   QWORD PTR [rip+0x159b4]        # 0x14001a008
   140004654:	test   eax,eax
   140004656:	jne    0x140004781
   14000465c:	mov    r12,QWORD PTR [rsp+0x30]
   140004661:	lea    r8,[rsp+0x60]
   140004666:	mov    r9d,0x104
   14000466c:	xor    edx,edx
   14000466e:	mov    rcx,r12
   140004671:	xor    esi,esi
   140004673:	xor    ebx,ebx
   140004675:	call   QWORD PTR [rip+0x15995]        # 0x14001a010
   14000467b:	test   eax,eax
   14000467d:	jne    0x140004781
   140004683:	mov    rdx,QWORD PTR [r13+0x10]
   140004687:	lea    rcx,[rsp+0x60]
   14000468c:	inc    esi
   14000468e:	call   0x140006f0c
   140004693:	test   eax,eax
   140004695:	je     0x1400046c2
   140004697:	test   rbx,rbx
   14000469a:	je     0x1400046b5
   14000469c:	lea    rcx,[rsp+0x60]
   1400046a1:	mov    rdx,rbx
   1400046a4:	call   0x140006dfc
   1400046a9:	test   eax,eax
   1400046ab:	jle    0x1400046c2
   1400046ad:	mov    rcx,rbx
   1400046b0:	call   0x140004084
   1400046b5:	lea    rcx,[rsp+0x60]
   1400046ba:	call   0x140004058
   1400046bf:	mov    rbx,rax
   1400046c2:	lea    r8,[rsp+0x60]
   1400046c7:	mov    r9d,0x104
   1400046cd:	mov    edx,esi
   1400046cf:	mov    rcx,r12
   1400046d2:	call   QWORD PTR [rip+0x15938]        # 0x14001a010
   1400046d8:	test   eax,eax
   1400046da:	je     0x140004683
   1400046dc:	test   rbx,rbx
   1400046df:	je     0x140004781
   1400046e5:	lea    rax,[rsp+0x38]
   1400046ea:	mov    r9d,0x20019
   1400046f0:	xor    r8d,r8d
   1400046f3:	mov    rdx,rbx
   1400046f6:	mov    rcx,r12
   1400046f9:	mov    QWORD PTR [rsp+0x20],rax
   1400046fe:	call   QWORD PTR [rip+0x15904]        # 0x14001a008
   140004704:	mov    rcx,rbx
   140004707:	test   eax,eax
   140004709:	je     0x140004722
   14000470b:	call   0x140004084
   140004710:	mov    rcx,QWORD PTR [rsp+0x38]
   140004715:	test   rcx,rcx
   140004718:	je     0x140004781
   14000471a:	call   QWORD PTR [rip+0x158e0]        # 0x14001a000
   140004720:	jmp    0x140004781
   140004722:	call   0x140004084
   140004727:	mov    rcx,QWORD PTR [rsp+0x38]
   14000472c:	lea    rax,[rsp+0x40]
   140004731:	mov    QWORD PTR [rsp+0x28],rax
   140004736:	lea    rax,[rsp+0x60]
   14000473b:	lea    rdx,[rip+0x16d76]        # 0x14001b4b8
   140004742:	xor    r9d,r9d
   140004745:	xor    r8d,r8d
   140004748:	mov    DWORD PTR [rsp+0x40],0x104
   140004750:	mov    QWORD PTR [rsp+0x20],rax
   140004755:	call   QWORD PTR [rip+0x158bd]        # 0x14001a018
   14000475b:	mov    rcx,QWORD PTR [rsp+0x38]
   140004760:	test   eax,eax
   140004762:	jne    0x140004715
   140004764:	test   rcx,rcx
   140004767:	je     0x14000476f
   140004769:	call   QWORD PTR [rip+0x15891]        # 0x14001a000
   14000476f:	lea    rcx,[rsp+0x60]
   140004774:	call   0x140004058
   140004779:	mov    rbx,rax
   14000477c:	test   rax,rax
   14000477f:	jne    0x1400047c9
   140004781:	mov    rcx,QWORD PTR [rsp+0x30]
   140004786:	test   rcx,rcx
   140004789:	je     0x140004791
   14000478b:	call   QWORD PTR [rip+0x1586f]        # 0x14001a000
   140004791:	inc    rdi
   140004794:	cmp    rdi,0x1
   140004798:	jle    0x14000462f
   14000479e:	xor    eax,eax
   1400047a0:	mov    rcx,QWORD PTR [rbp+0x70]
   1400047a4:	xor    rcx,rsp
   1400047a7:	call   0x14000a850
   1400047ac:	lea    r11,[rsp+0x180]
   1400047b4:	mov    rbx,QWORD PTR [r11+0x28]
   1400047b8:	mov    rsi,QWORD PTR [r11+0x30]
   1400047bc:	mov    rdi,QWORD PTR [r11+0x38]
   1400047c0:	mov    rsp,r11
   1400047c3:	pop    r13
   1400047c5:	pop    r12
   1400047c7:	pop    rbp
   1400047c8:	ret    
   1400047c9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400047ce:	test   rcx,rcx
   1400047d1:	je     0x1400047d9
   1400047d3:	call   QWORD PTR [rip+0x15827]        # 0x14001a000
   1400047d9:	mov    rax,rbx
   1400047dc:	jmp    0x1400047a0
   1400047de:	int3   
   1400047df:	int3   
   1400047e0:	mov    rdx,QWORD PTR [rcx]
   1400047e3:	xor    r9d,r9d
   1400047e6:	xor    r11d,r11d
   1400047e9:	jmp    0x1400047f6
   1400047eb:	cmp    al,0x20
   1400047ed:	je     0x1400047f3
   1400047ef:	cmp    al,0x9
   1400047f1:	jne    0x1400047fc
   1400047f3:	inc    rdx
   1400047f6:	mov    al,BYTE PTR [rdx]
   1400047f8:	test   al,al
   1400047fa:	jne    0x1400047eb
   1400047fc:	mov    r8,rdx
   1400047ff:	cmp    BYTE PTR [rdx],r9b
   140004802:	je     0x140004869
   140004804:	test   r11d,r11d
   140004807:	jne    0x140004813
   140004809:	cmp    BYTE PTR [rdx],0x20
   14000480c:	je     0x14000485e
   14000480e:	cmp    BYTE PTR [rdx],0x9
   140004811:	je     0x14000485e
   140004813:	cmp    BYTE PTR [rdx],0x5c
   140004816:	jne    0x140004838
   140004818:	cmp    BYTE PTR [rdx+0x1],0x22
   14000481c:	jne    0x140004838
   14000481e:	mov    eax,r9d
   140004821:	and    eax,0x80000001
   140004826:	jge    0x14000482f
   140004828:	dec    eax
   14000482a:	or     eax,0xfffffffe
   14000482d:	inc    eax
   14000482f:	test   eax,eax
   140004831:	jne    0x140004838
   140004833:	inc    rdx
   140004836:	jmp    0x140004848
   140004838:	cmp    BYTE PTR [rdx],0x22
   14000483b:	jne    0x140004848
   14000483d:	xor    eax,eax
   14000483f:	test   r11d,r11d
   140004842:	sete   al
   140004845:	mov    r11d,eax
   140004848:	mov    al,BYTE PTR [rdx]
   14000484a:	inc    rdx
   14000484d:	cmp    al,0x5c
   14000484f:	jne    0x140004856
   140004851:	inc    r9d
   140004854:	jmp    0x140004859
   140004856:	xor    r9d,r9d
   140004859:	cmp    BYTE PTR [rdx],0x0
   14000485c:	jne    0x140004804
   14000485e:	cmp    BYTE PTR [rdx],0x0
   140004861:	je     0x140004869
   140004863:	mov    BYTE PTR [rdx],0x0
   140004866:	inc    rdx
   140004869:	mov    QWORD PTR [rcx],rdx
   14000486c:	mov    rax,r8
   14000486f:	ret    
   140004870:	mov    rax,rsp
   140004873:	mov    QWORD PTR [rax+0x10],rbx
   140004877:	mov    QWORD PTR [rax+0x18],rsi
   14000487b:	mov    QWORD PTR [rax+0x20],rdi
   14000487f:	push   rbp
   140004880:	push   r12
   140004882:	push   r13
   140004884:	push   r14
   140004886:	push   r15
   140004888:	lea    rbp,[rax-0x138]
   14000488f:	sub    rsp,0x210
   140004896:	mov    rax,QWORD PTR [rip+0x1e823]        # 0x1400230c0
   14000489d:	xor    rax,rsp
   1400048a0:	mov    QWORD PTR [rbp+0x100],rax
   1400048a7:	mov    rbx,rcx
   1400048aa:	call   0x140001f04
   1400048af:	mov    esi,0x105
   1400048b4:	lea    rdx,[rbp-0x10]
   1400048b8:	xor    ecx,ecx
   1400048ba:	mov    r8d,esi
   1400048bd:	mov    rdi,rax
   1400048c0:	call   QWORD PTR [rip+0x15782]        # 0x14001a048
   1400048c6:	test   eax,eax
   1400048c8:	je     0x140004ce7
   1400048ce:	cmp    eax,0x104
   1400048d3:	jg     0x140004ce7
   1400048d9:	lea    rdx,[rbp-0x10]
   1400048dd:	lea    rcx,[rip+0x16ce4]        # 0x14001b5c8
   1400048e4:	call   0x14000408c
   1400048e9:	lea    rcx,[rip+0x16cc0]        # 0x14001b5b0
   1400048f0:	mov    rdx,rbx
   1400048f3:	call   0x14000408c
   1400048f8:	mov    rcx,rbx
   1400048fb:	call   0x140009fd0
   140004900:	lea    rdx,[rbp-0x10]
   140004904:	mov    rcx,rbx
   140004907:	mov    r8,rax
   14000490a:	call   0x14001958c
   14000490f:	test   eax,eax
   140004911:	je     0x140004d01
   140004917:	lea    r8,[rip+0x16c82]        # 0x14001b5a0
   14000491e:	lea    rcx,[rbp-0x10]
   140004922:	mov    r9,rbx
   140004925:	mov    edx,esi
   140004927:	mov    QWORD PTR [rsp+0x20],rdi
   14000492c:	call   0x140004318
   140004931:	call   QWORD PTR [rip+0x15709]        # 0x14001a040
   140004937:	mov    rcx,rax
   14000493a:	call   0x140004058
   14000493f:	lea    rcx,[rsp+0x50]
   140004944:	mov    r15,rax
   140004947:	mov    QWORD PTR [rsp+0x50],rax
   14000494c:	call   0x1400047e0
   140004951:	mov    rsi,QWORD PTR [rsp+0x50]
   140004956:	mov    rcx,rsi
   140004959:	call   0x140009fd0
   14000495e:	lea    rcx,[rbp-0x10]
   140004962:	mov    rbx,rax
   140004965:	call   0x140009fd0
   14000496a:	lea    rcx,[rbx+rax*1+0x4]
   14000496f:	call   0x140004000
   140004974:	lea    rcx,[rbp-0x10]
   140004978:	mov    edx,0x20
   14000497d:	mov    rbx,rax
   140004980:	call   0x14000c07c
   140004985:	test   rax,rax
   140004988:	jne    0x1400049a9
   14000498a:	lea    edx,[rax+0x9]
   14000498d:	lea    rcx,[rbp-0x10]
   140004991:	call   0x14000c07c
   140004996:	test   rax,rax
   140004999:	jne    0x1400049a9
   14000499b:	lea    rdx,[rbp-0x10]
   14000499f:	mov    rcx,rbx
   1400049a2:	call   0x14000a780
   1400049a7:	jmp    0x1400049d3
   1400049a9:	lea    rdx,[rip+0x16bec]        # 0x14001b59c
   1400049b0:	mov    rcx,rbx
   1400049b3:	call   0x14000a780
   1400049b8:	lea    rdx,[rbp-0x10]
   1400049bc:	mov    rcx,rax
   1400049bf:	call   0x14000a6e0
   1400049c4:	lea    rdx,[rip+0x16bd1]        # 0x14001b59c
   1400049cb:	mov    rcx,rax
   1400049ce:	call   0x14000a6e0
   1400049d3:	cmp    BYTE PTR [rsi],0x0
   1400049d6:	mov    r13,rax
   1400049d9:	mov    edi,0x1
   1400049de:	je     0x140004b9d
   1400049e4:	lea    rcx,[rsp+0x50]
   1400049e9:	call   0x1400047e0
   1400049ee:	mov    r14,rax
   1400049f1:	cmp    BYTE PTR [rax],0x0
   1400049f4:	je     0x140004b4f
   1400049fa:	mov    rcx,rax
   1400049fd:	mov    rbx,rax
   140004a00:	call   0x140009fd0
   140004a05:	lea    rcx,[rdi+rax*1]
   140004a09:	call   0x140004000
   140004a0e:	cmp    BYTE PTR [rbx],0x0
   140004a11:	mov    r12,rax
   140004a14:	mov    rsi,rax
   140004a17:	je     0x140004a70
   140004a19:	mov    al,BYTE PTR [rbx]
   140004a1b:	cmp    al,0x22
   140004a1d:	je     0x140004a68
   140004a1f:	cmp    al,0x5c
   140004a21:	jne    0x140004a63
   140004a23:	lea    rdx,[rip+0x16aca]        # 0x14001b4f4
   140004a2a:	mov    rcx,rbx
   140004a2d:	call   0x14000aec0
   140004a32:	lea    r11,[rbx+rax*1]
   140004a36:	cmp    BYTE PTR [r11],0x22
   140004a3a:	jne    0x140004a5c
   140004a3c:	mov    BYTE PTR [rsi],0x5c
   140004a3f:	add    rbx,0x2
   140004a43:	add    rsi,rdi
   140004a46:	cmp    BYTE PTR [rbx],0x5c
   140004a49:	jne    0x140004a6b
   140004a4b:	cmp    rbx,r11
   140004a4e:	jb     0x140004a3c
   140004a50:	jmp    0x140004a6b
   140004a52:	mov    al,BYTE PTR [rbx]
   140004a54:	mov    BYTE PTR [rsi],al
   140004a56:	add    rsi,rdi
   140004a59:	add    rbx,rdi
   140004a5c:	cmp    rbx,r11
   140004a5f:	jb     0x140004a52
   140004a61:	jmp    0x140004a6b
   140004a63:	mov    BYTE PTR [rsi],al
   140004a65:	add    rsi,rdi
   140004a68:	add    rbx,rdi
   140004a6b:	cmp    BYTE PTR [rbx],0x0
   140004a6e:	jne    0x140004a19
   140004a70:	mov    BYTE PTR [rsi],0x0
   140004a73:	cmp    BYTE PTR [r12],0x2d
   140004a78:	jne    0x140004b5c
   140004a7e:	lea    rdx,[rip+0x1620b]        # 0x14001ac90
   140004a85:	mov    rcx,r12
   140004a88:	call   0x14000a880
   140004a8d:	test   eax,eax
   140004a8f:	je     0x140004afb
   140004a91:	lea    rdx,[rip+0x161f4]        # 0x14001ac8c
   140004a98:	mov    rcx,r12
   140004a9b:	call   0x14000a880
   140004aa0:	test   eax,eax
   140004aa2:	je     0x140004afb
   140004aa4:	lea    rdx,[rip+0x1645d]        # 0x14001af08
   140004aab:	mov    r8d,0x9
   140004ab1:	mov    rcx,r12
   140004ab4:	call   0x14000b5a0
   140004ab9:	test   eax,eax
   140004abb:	je     0x140004b47
   140004ac1:	lea    rdx,[rip+0x16428]        # 0x14001aef0
   140004ac8:	mov    rcx,r12
   140004acb:	call   0x14000a880
   140004ad0:	test   eax,eax
   140004ad2:	je     0x140004b47
   140004ad4:	lea    rdx,[rip+0x163fd]        # 0x14001aed8
   140004adb:	mov    rcx,r12
   140004ade:	call   0x14000a880
   140004ae3:	test   eax,eax
   140004ae5:	je     0x140004b47
   140004ae7:	lea    rdx,[rip+0x15c36]        # 0x14001a724
   140004aee:	mov    rcx,r13
   140004af1:	call   0x14000a6e0
   140004af6:	mov    rdx,r14
   140004af9:	jmp    0x140004b3c
   140004afb:	lea    rdx,[rip+0x15c22]        # 0x14001a724
   140004b02:	mov    rcx,r13
   140004b05:	call   0x14000a6e0
   140004b0a:	mov    rdx,r14
   140004b0d:	mov    rcx,rax
   140004b10:	call   0x14000a6e0
   140004b15:	lea    rcx,[rsp+0x50]
   140004b1a:	mov    r13,rax
   140004b1d:	call   0x1400047e0
   140004b22:	cmp    BYTE PTR [rax],0x0
   140004b25:	mov    rbx,rax
   140004b28:	je     0x140004b47
   140004b2a:	lea    rdx,[rip+0x15bf3]        # 0x14001a724
   140004b31:	mov    rcx,r13
   140004b34:	call   0x14000a6e0
   140004b39:	mov    rdx,rbx
   140004b3c:	mov    rcx,rax
   140004b3f:	call   0x14000a6e0
   140004b44:	mov    r13,rax
   140004b47:	mov    rcx,r12
   140004b4a:	call   0x140004084
   140004b4f:	mov    rax,QWORD PTR [rsp+0x50]
   140004b54:	cmp    BYTE PTR [rax],0x0
   140004b57:	jmp    0x1400049de
   140004b5c:	lea    rdx,[rip+0x15bc1]        # 0x14001a724
   140004b63:	mov    rcx,r13
   140004b66:	call   0x14000a6e0
   140004b6b:	mov    rdx,r14
   140004b6e:	mov    rcx,rax
   140004b71:	call   0x14000a6e0
   140004b76:	lea    rdx,[rip+0x15ba7]        # 0x14001a724
   140004b7d:	mov    rcx,rax
   140004b80:	call   0x14000a6e0
   140004b85:	mov    rdx,QWORD PTR [rsp+0x50]
   140004b8a:	mov    rcx,rax
   140004b8d:	call   0x14000a6e0
   140004b92:	mov    rcx,r12
   140004b95:	mov    r13,rax
   140004b98:	call   0x140004084
   140004b9d:	mov    rcx,r15
   140004ba0:	call   0x140004084
   140004ba5:	call   0x1400040f0
   140004baa:	test   al,al
   140004bac:	je     0x140004bf4
   140004bae:	mov    rcx,r13
   140004bb1:	call   0x140004058
   140004bb6:	lea    rcx,[rsp+0x50]
   140004bbb:	mov    rbx,rax
   140004bbe:	mov    QWORD PTR [rsp+0x50],rax
   140004bc3:	call   0x1400047e0
   140004bc8:	lea    rdx,[rbp-0x10]
   140004bcc:	lea    rcx,[rip+0x169ad]        # 0x14001b580
   140004bd3:	mov    r8,rax
   140004bd6:	call   0x140009c3c
   140004bdb:	mov    rdx,QWORD PTR [rsp+0x50]
   140004be0:	lea    rcx,[rip+0x16981]        # 0x14001b568
   140004be7:	call   0x140009c3c
   140004bec:	mov    rcx,rbx
   140004bef:	call   0x140004084
   140004bf4:	call   0x14000abc8
   140004bf9:	lea    rcx,[rax+0x30]
   140004bfd:	call   0x14000c02c
   140004c02:	call   0x14000abc8
   140004c07:	lea    rcx,[rax+0x60]
   140004c0b:	call   0x14000c02c
   140004c10:	mov    ebx,0x68
   140004c15:	lea    rcx,[rbp-0x80]
   140004c19:	mov    r8d,ebx
   140004c1c:	xor    edx,edx
   140004c1e:	call   0x14000a560
   140004c23:	lea    r8d,[rbx-0x50]
   140004c27:	lea    rcx,[rsp+0x60]
   140004c2c:	xor    edx,edx
   140004c2e:	mov    DWORD PTR [rbp-0x80],ebx
   140004c31:	call   0x14000a560
   140004c36:	lea    r11,[rsp+0x60]
   140004c3b:	lea    rax,[rbp-0x80]
   140004c3f:	mov    QWORD PTR [rsp+0x48],r11
   140004c44:	mov    QWORD PTR [rsp+0x40],rax
   140004c49:	and    QWORD PTR [rsp+0x38],0x0
   140004c4f:	and    QWORD PTR [rsp+0x30],0x0
   140004c55:	and    DWORD PTR [rsp+0x28],0x0
   140004c5a:	lea    rcx,[rbp-0x10]
   140004c5e:	xor    r9d,r9d
   140004c61:	xor    r8d,r8d
   140004c64:	mov    rdx,r13
   140004c67:	mov    DWORD PTR [rsp+0x20],edi
   140004c6b:	call   QWORD PTR [rip+0x1541f]        # 0x14001a090
   140004c71:	test   eax,eax
   140004c73:	jne    0x140004c8d
   140004c75:	lea    rdx,[rbp-0x10]
   140004c79:	lea    rcx,[rip+0x168c0]        # 0x14001b540
   140004c80:	call   0x14000441c
   140004c85:	mov    ecx,edi
   140004c87:	call   0x140009bdc
   140004c8c:	int3   
   140004c8d:	mov    rcx,QWORD PTR [rsp+0x60]
   140004c92:	or     ebx,0xffffffff
   140004c95:	mov    edx,ebx
   140004c97:	call   QWORD PTR [rip+0x153eb]        # 0x14001a088
   140004c9d:	cmp    eax,ebx
   140004c9f:	je     0x140004cb7
   140004ca1:	mov    rcx,QWORD PTR [rsp+0x60]
   140004ca6:	lea    rdx,[rsp+0x58]
   140004cab:	call   QWORD PTR [rip+0x153cf]        # 0x14001a080
   140004cb1:	test   eax,eax
   140004cb3:	jne    0x140004cc7
   140004cb5:	jmp    0x140004cc3
   140004cb7:	lea    rcx,[rip+0x1685a]        # 0x14001b518
   140004cbe:	call   0x140004370
   140004cc3:	mov    DWORD PTR [rsp+0x58],edi
   140004cc7:	mov    rcx,QWORD PTR [rsp+0x68]
   140004ccc:	call   QWORD PTR [rip+0x153a6]        # 0x14001a078
   140004cd2:	mov    rcx,QWORD PTR [rsp+0x60]
   140004cd7:	call   QWORD PTR [rip+0x1539b]        # 0x14001a078
   140004cdd:	mov    ecx,DWORD PTR [rsp+0x58]
   140004ce1:	call   0x140009bdc
   140004ce6:	int3   
   140004ce7:	lea    rcx,[rip+0x1680a]        # 0x14001b4f8
   140004cee:	mov    rdx,rdi
   140004cf1:	call   0x14000441c
   140004cf6:	mov    ecx,0x1
   140004cfb:	call   0x140009bdc
   140004d00:	int3   
   140004d01:	mov    rcx,QWORD PTR [rbp+0x100]
   140004d08:	xor    rcx,rsp
   140004d0b:	call   0x14000a850
   140004d10:	lea    r11,[rsp+0x210]
   140004d18:	mov    rbx,QWORD PTR [r11+0x38]
   140004d1c:	mov    rsi,QWORD PTR [r11+0x40]
   140004d20:	mov    rdi,QWORD PTR [r11+0x48]
   140004d24:	mov    rsp,r11
   140004d27:	pop    r15
   140004d29:	pop    r14
   140004d2b:	pop    r13
   140004d2d:	pop    r12
   140004d2f:	pop    rbp
   140004d30:	ret    
   140004d31:	int3   
   140004d32:	int3   
   140004d33:	int3   
   140004d34:	mov    QWORD PTR [rsp+0x8],rbx
   140004d39:	push   rdi
   140004d3a:	sub    rsp,0x20
   140004d3e:	mov    rbx,rcx
   140004d41:	call   0x140009fd0
   140004d46:	lea    rcx,[rax+0x2]
   140004d4a:	call   0x140004000
   140004d4f:	mov    rdx,rbx
   140004d52:	mov    rcx,rax
   140004d55:	call   0x14000a780
   140004d5a:	lea    rdx,[rip+0x1687b]        # 0x14001b5dc
   140004d61:	mov    rcx,rax
   140004d64:	call   0x14000a6e0
   140004d69:	mov    rcx,rax
   140004d6c:	mov    rdi,rax
   140004d6f:	call   0x14000c318
   140004d74:	mov    rcx,rdi
   140004d77:	mov    ebx,eax
   140004d79:	call   0x140004084
   140004d7e:	mov    eax,ebx
   140004d80:	mov    rbx,QWORD PTR [rsp+0x30]
   140004d85:	add    rsp,0x20
   140004d89:	pop    rdi
   140004d8a:	ret    
   140004d8b:	int3   
   140004d8c:	lea    rax,[rip+0x1684d]        # 0x14001b5e0
   140004d93:	ret    
   140004d94:	mov    QWORD PTR [rsp+0x8],rbx
   140004d99:	push   rdi
   140004d9a:	sub    rsp,0x20
   140004d9e:	mov    rax,QWORD PTR [rip+0x1fa53]        # 0x1400247f8
   140004da5:	mov    rbx,rdx
   140004da8:	mov    rdi,rcx
   140004dab:	test   rax,rax
   140004dae:	jne    0x140004df7
   140004db0:	lea    rcx,[rip+0x16869]        # 0x14001b620
   140004db7:	call   QWORD PTR [rip+0x152e3]        # 0x14001a0a0
   140004dbd:	test   rax,rax
   140004dc0:	jne    0x140004dc6
   140004dc2:	xor    eax,eax
   140004dc4:	jmp    0x140004dff
   140004dc6:	lea    rdx,[rip+0x16833]        # 0x14001b600
   140004dcd:	mov    rcx,rax
   140004dd0:	call   QWORD PTR [rip+0x152c2]        # 0x14001a098
   140004dd6:	mov    QWORD PTR [rip+0x1fa1b],rax        # 0x1400247f8
   140004ddd:	test   rax,rax
   140004de0:	jne    0x140004df7
   140004de2:	lea    rdx,[rip+0x16817]        # 0x14001b600
   140004de9:	lea    rcx,[rip+0x167f8]        # 0x14001b5e8
   140004df0:	call   0x140004370
   140004df5:	jmp    0x140004dc2
   140004df7:	mov    rdx,rbx
   140004dfa:	mov    rcx,rdi
   140004dfd:	call   rax
   140004dff:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e04:	add    rsp,0x20
   140004e08:	pop    rdi
   140004e09:	ret    
   140004e0a:	int3   
   140004e0b:	int3   
   140004e0c:	rex push rbx
   140004e0e:	sub    rsp,0x20
   140004e12:	xor    edx,edx
   140004e14:	mov    bl,cl
   140004e16:	lea    rcx,[rsp+0x38]
   140004e1b:	lea    r8d,[rdx+0x8]
   140004e1f:	call   0x14000a560
   140004e24:	lea    rcx,[rsp+0x38]
   140004e29:	mov    DWORD PTR [rsp+0x38],0x8
   140004e31:	call   QWORD PTR [rip+0x151f1]        # 0x14001a028
   140004e37:	mov    BYTE PTR [rip+0x1f9a7],bl        # 0x1400247e4
   140004e3d:	call   0x1400040bc
   140004e42:	add    rsp,0x20
   140004e46:	pop    rbx
   140004e47:	ret    
   140004e48:	mov    QWORD PTR [rsp+0x8],rbx
   140004e4d:	mov    QWORD PTR [rsp+0x10],rbp
   140004e52:	mov    QWORD PTR [rsp+0x18],rsi
   140004e57:	push   rdi
   140004e58:	sub    rsp,0x40
   140004e5c:	mov    rbx,r9
   140004e5f:	mov    edi,r8d
   140004e62:	mov    rsi,rdx
   140004e65:	mov    rbp,rcx
   140004e68:	call   0x140001e2c
   140004e6d:	mov    rax,QWORD PTR [rsp+0x78]
   140004e72:	mov    r11d,DWORD PTR [rsp+0x80]
   140004e7a:	mov    r9,rbx
   140004e7d:	mov    r8d,edi
   140004e80:	mov    DWORD PTR [rsp+0x30],r11d
   140004e85:	mov    QWORD PTR [rsp+0x28],rax
   140004e8a:	mov    eax,DWORD PTR [rsp+0x70]
   140004e8e:	mov    rdx,rsi
   140004e91:	mov    rcx,rbp
   140004e94:	mov    DWORD PTR [rsp+0x20],eax
   140004e98:	call   0x1400037c0
   140004e9d:	mov    rbx,QWORD PTR [rsp+0x50]
   140004ea2:	mov    rbp,QWORD PTR [rsp+0x58]
   140004ea7:	mov    rsi,QWORD PTR [rsp+0x60]
   140004eac:	add    rsp,0x40
   140004eb0:	pop    rdi
   140004eb1:	ret    
   140004eb2:	int3   
   140004eb3:	int3   
   140004eb4:	ret    0x0
   140004eb7:	int3   
   140004eb8:	xor    al,al
   140004eba:	ret    
   140004ebb:	int3   
   140004ebc:	mov    QWORD PTR [rsp+0x8],rbx
   140004ec1:	mov    QWORD PTR [rsp+0x10],rbp
   140004ec6:	mov    QWORD PTR [rsp+0x18],rsi
   140004ecb:	push   rdi
   140004ecc:	push   r12
   140004ece:	push   r13
   140004ed0:	push   r14
   140004ed2:	push   r15
   140004ed4:	sub    rsp,0x50
   140004ed8:	xor    edi,edi
   140004eda:	movsxd rsi,r8d
   140004edd:	mov    r12,rdx
   140004ee0:	mov    BYTE PTR [rsp+0x30],dil
   140004ee5:	mov    rbp,rcx
   140004ee8:	call   0x1400013f8
   140004eed:	mov    rbx,rax
   140004ef0:	mov    QWORD PTR [rsp+0x48],rax
   140004ef5:	test   rax,rax
   140004ef8:	jne    0x140004f0d
   140004efa:	lea    rcx,[rip+0x1566f]        # 0x14001a570
   140004f01:	call   0x140004370
   140004f06:	xor    eax,eax
   140004f08:	jmp    0x140005119
   140004f0d:	test   esi,esi
   140004f0f:	jne    0x140004f24
   140004f11:	xor    r8d,r8d
   140004f14:	mov    rdx,r12
   140004f17:	mov    rcx,rbp
   140004f1a:	call   0x140001550
   140004f1f:	jmp    0x140005119
   140004f24:	call   0x140003f54
   140004f29:	mov    r13,rax
   140004f2c:	call   0x140003f4c
   140004f31:	cmp    esi,eax
   140004f33:	jle    0x140004f57
   140004f35:	lea    rcx,[rip+0x1679c]        # 0x14001b6d8
   140004f3c:	mov    r8d,eax
   140004f3f:	mov    edx,esi
   140004f41:	call   0x14000408c
   140004f46:	lea    rcx,[rip+0x1676b]        # 0x14001b6b8
   140004f4d:	call   0x14000408c
   140004f52:	mov    r8d,esi
   140004f55:	jmp    0x140004f14
   140004f57:	mov    rdx,QWORD PTR [r12]
   140004f5b:	sub    eax,esi
   140004f5d:	movsxd r15,eax
   140004f60:	shl    r15,0x4
   140004f64:	add    r15,r13
   140004f67:	mov    rcx,QWORD PTR [r15]
   140004f6a:	call   0x14000a880
   140004f6f:	test   eax,eax
   140004f71:	je     0x140004f88
   140004f73:	lea    rcx,[rip+0x16716]        # 0x14001b690
   140004f7a:	call   0x14000408c
   140004f7f:	lea    rcx,[rip+0x166ea]        # 0x14001b670
   140004f86:	jmp    0x140004f4d
   140004f88:	mov    rcx,rsi
   140004f8b:	shl    rcx,0x3
   140004f8f:	call   0x140004000
   140004f94:	mov    DWORD PTR [rsp+0x34],edi
   140004f98:	mov    r13,rax
   140004f9b:	test   esi,esi
   140004f9d:	jle    0x14000507b
   140004fa3:	mov    rbx,r12
   140004fa6:	sub    rax,r12
   140004fa9:	mov    QWORD PTR [rsp+0x38],rbx
   140004fae:	mov    QWORD PTR [rsp+0x40],rax
   140004fb3:	mov    rdx,QWORD PTR [rbx]
   140004fb6:	mov    rcx,QWORD PTR [r15]
   140004fb9:	call   0x14000a880
   140004fbe:	test   eax,eax
   140004fc0:	jne    0x140004fc8
   140004fc2:	mov    al,BYTE PTR [r15+0x8]
   140004fc6:	jmp    0x140004fcb
   140004fc8:	mov    al,dil
   140004fcb:	movzx  edx,BYTE PTR [rsp+0x30]
   140004fd0:	mov    BYTE PTR [rsp+0x98],al
   140004fd7:	movzx  eax,al
   140004fda:	mov    ecx,edx
   140004fdc:	test   dl,dl
   140004fde:	cmove  ecx,eax
   140004fe1:	mov    BYTE PTR [rsp+0x30],cl
   140004fe5:	mov    rcx,QWORD PTR [rbx]
   140004fe8:	call   0x140009fd0
   140004fed:	add    eax,0x2
   140004ff0:	movsxd rbx,eax
   140004ff3:	mov    rcx,rbx
   140004ff6:	call   0x140004000
   140004ffb:	mov    rcx,QWORD PTR [rsp+0x38]
   140005000:	mov    rdx,QWORD PTR [rsp+0x40]
   140005005:	neg    BYTE PTR [rsp+0x98]
   14000500c:	mov    QWORD PTR [rdx+rcx*1],rax
   140005010:	mov    rcx,QWORD PTR [rcx]
   140005013:	sbb    r9d,r9d
   140005016:	mov    QWORD PTR [rsp+0x20],rcx
   14000501b:	lea    r8,[rip+0x16646]        # 0x14001b668
   140005022:	and    r9d,0xe
   140005026:	mov    rcx,rax
   140005029:	mov    rdx,rbx
   14000502c:	add    r9d,0x46
   140005030:	call   0x140004318
   140005035:	test   eax,eax
   140005037:	js     0x140004f06
   14000503d:	mov    rax,QWORD PTR [rsp+0x40]
   140005042:	mov    rbx,QWORD PTR [rsp+0x38]
   140005047:	lea    rcx,[rip+0x16616]        # 0x14001b664
   14000504e:	mov    rdx,QWORD PTR [rax+rbx*1]
   140005052:	call   0x14000408c
   140005057:	mov    eax,DWORD PTR [rsp+0x34]
   14000505b:	add    rbx,0x8
   14000505f:	inc    eax
   140005061:	add    r15,0x10
   140005065:	mov    QWORD PTR [rsp+0x38],rbx
   14000506a:	mov    DWORD PTR [rsp+0x34],eax
   14000506e:	cmp    eax,esi
   140005070:	jl     0x140004fb3
   140005076:	mov    rbx,QWORD PTR [rsp+0x48]
   14000507b:	mov    dl,BYTE PTR [rsp+0x30]
   14000507f:	test   dl,dl
   140005081:	jne    0x1400050a6
   140005083:	test   esi,esi
   140005085:	jle    0x140005099
   140005087:	mov    rcx,QWORD PTR [r13+rdi*8+0x0]
   14000508c:	call   0x140004084
   140005091:	inc    rdi
   140005094:	cmp    rdi,rsi
   140005097:	jl     0x140005087
   140005099:	mov    rcx,r13
   14000509c:	call   0x140004084
   1400050a1:	jmp    0x140004f52
   1400050a6:	mov    rax,QWORD PTR [rbp+0x0]
   1400050aa:	lea    r9,[rip+0x16587]        # 0x14001b638
   1400050b1:	lea    r8,[rip+0x16570]        # 0x14001b628
   1400050b8:	mov    rdx,rbx
   1400050bb:	mov    rcx,rbp
   1400050be:	call   QWORD PTR [rax+0x388]
   1400050c4:	mov    r12,rax
   1400050c7:	test   rax,rax
   1400050ca:	je     0x140004efa
   1400050d0:	mov    r8d,esi
   1400050d3:	mov    rdx,r13
   1400050d6:	mov    rcx,rbp
   1400050d9:	call   0x140001550
   1400050de:	mov    r10,QWORD PTR [rbp+0x0]
   1400050e2:	mov    r8,r12
   1400050e5:	mov    rdx,rbx
   1400050e8:	mov    rcx,rbp
   1400050eb:	mov    r9,rax
   1400050ee:	call   QWORD PTR [r10+0x390]
   1400050f5:	mov    rbx,rax
   1400050f8:	test   esi,esi
   1400050fa:	jle    0x14000510e
   1400050fc:	mov    rcx,QWORD PTR [r13+rdi*8+0x0]
   140005101:	call   0x140004084
   140005106:	inc    rdi
   140005109:	cmp    rdi,rsi
   14000510c:	jl     0x1400050fc
   14000510e:	mov    rcx,r13
   140005111:	call   0x140004084
   140005116:	mov    rax,rbx
   140005119:	lea    r11,[rsp+0x50]
   14000511e:	mov    rbx,QWORD PTR [r11+0x30]
   140005122:	mov    rbp,QWORD PTR [r11+0x38]
   140005126:	mov    rsi,QWORD PTR [r11+0x40]
   14000512a:	mov    rsp,r11
   14000512d:	pop    r15
   14000512f:	pop    r14
   140005131:	pop    r13
   140005133:	pop    r12
   140005135:	pop    rdi
   140005136:	ret    
   140005137:	int3   
   140005138:	mov    QWORD PTR [rsp+0x10],rbx
   14000513d:	mov    QWORD PTR [rsp+0x18],rsi
   140005142:	push   rbp
   140005143:	push   rdi
   140005144:	push   r12
   140005146:	lea    rbp,[rsp-0x170]
   14000514e:	sub    rsp,0x270
   140005155:	mov    rax,QWORD PTR [rip+0x1df64]        # 0x1400230c0
   14000515c:	xor    rax,rsp
   14000515f:	mov    QWORD PTR [rbp+0x160],rax
   140005166:	lea    rax,[rsp+0x30]
   14000516b:	mov    edi,edx
   14000516d:	mov    rsi,rcx
   140005170:	lea    r12,[rip+0x16351]        # 0x14001b4c8
   140005177:	mov    r9d,0x20019
   14000517d:	xor    r8d,r8d
   140005180:	mov    rcx,0xffffffff80000002
   140005187:	mov    rdx,r12
   14000518a:	mov    QWORD PTR [rsp+0x20],rax
   14000518f:	call   QWORD PTR [rip+0x14e73]        # 0x14001a008
   140005195:	xor    ebx,ebx
   140005197:	test   eax,eax
   140005199:	je     0x1400051b1
   14000519b:	lea    rcx,[rip+0x166ce]        # 0x14001b870
   1400051a2:	mov    rdx,r12
   1400051a5:	call   0x140004370
   1400051aa:	xor    al,al
   1400051ac:	jmp    0x1400052f5
   1400051b1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400051b6:	lea    r8,[rsp+0x40]
   1400051bb:	lea    rdx,[rip+0x1669e]        # 0x14001b860
   1400051c2:	mov    r9d,0x104
   1400051c8:	call   0x140004214
   1400051cd:	test   al,al
   1400051cf:	jne    0x1400051ed
   1400051d1:	lea    rcx,[rip+0x16648]        # 0x14001b820
   1400051d8:	mov    rdx,r12
   1400051db:	call   0x140004370
   1400051e0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400051e5:	call   QWORD PTR [rip+0x14e15]        # 0x14001a000
   1400051eb:	jmp    0x1400051aa
   1400051ed:	call   0x140001efc
   1400051f2:	lea    rcx,[rsp+0x40]
   1400051f7:	mov    rdx,rax
   1400051fa:	call   0x14000a880
   1400051ff:	test   eax,eax
   140005201:	je     0x140005221
   140005203:	call   0x140001efc
   140005208:	lea    r8,[rsp+0x40]
   14000520d:	lea    rcx,[rip+0x165bc]        # 0x14001b7d0
   140005214:	mov    r9,rax
   140005217:	mov    rdx,r12
   14000521a:	call   0x140004370
   14000521f:	jmp    0x1400051e0
   140005221:	mov    rcx,QWORD PTR [rsp+0x30]
   140005226:	lea    rax,[rsp+0x38]
   14000522b:	lea    rdx,[rsp+0x40]
   140005230:	mov    r9d,0x20019
   140005236:	xor    r8d,r8d
   140005239:	mov    QWORD PTR [rsp+0x20],rax
   14000523e:	call   QWORD PTR [rip+0x14dc4]        # 0x14001a008
   140005244:	test   eax,eax
   140005246:	je     0x14000525e
   140005248:	lea    r8,[rsp+0x40]
   14000524d:	lea    rcx,[rip+0x1661c]        # 0x14001b870
   140005254:	mov    rdx,r12
   140005257:	call   0x140004370
   14000525c:	jmp    0x1400051e0
   14000525e:	mov    rcx,QWORD PTR [rsp+0x38]
   140005263:	lea    rdx,[rip+0x1624e]        # 0x14001b4b8
   14000526a:	mov    r9d,edi
   14000526d:	mov    r8,rsi
   140005270:	call   0x140004214
   140005275:	test   al,al
   140005277:	jne    0x14000528f
   140005279:	lea    r8,[rsp+0x40]
   14000527e:	lea    rcx,[rip+0x16513]        # 0x14001b798
   140005285:	mov    rdx,r12
   140005288:	call   0x140004370
   14000528d:	jmp    0x1400052dd
   14000528f:	call   0x1400040f0
   140005294:	test   al,al
   140005296:	je     0x1400052db
   140005298:	mov    rcx,QWORD PTR [rsp+0x38]
   14000529d:	lea    r8,[rbp+0x50]
   1400052a1:	lea    rdx,[rip+0x164e0]        # 0x14001b788
   1400052a8:	mov    r9d,0x104
   1400052ae:	call   0x140004214
   1400052b3:	test   al,al
   1400052b5:	jne    0x1400052c6
   1400052b7:	lea    rcx,[rip+0x164a2]        # 0x14001b760
   1400052be:	call   0x140009c3c
   1400052c3:	mov    BYTE PTR [rbp+0x50],bl
   1400052c6:	lea    r8,[rbp+0x50]
   1400052ca:	lea    rdx,[rsp+0x40]
   1400052cf:	lea    rcx,[rip+0x16462]        # 0x14001b738
   1400052d6:	call   0x140009c3c
   1400052db:	mov    bl,0x1
   1400052dd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400052e2:	call   QWORD PTR [rip+0x14d18]        # 0x14001a000
   1400052e8:	mov    rcx,QWORD PTR [rsp+0x38]
   1400052ed:	call   QWORD PTR [rip+0x14d0d]        # 0x14001a000
   1400052f3:	mov    al,bl
   1400052f5:	mov    rcx,QWORD PTR [rbp+0x160]
   1400052fc:	xor    rcx,rsp
   1400052ff:	call   0x14000a850
   140005304:	lea    r11,[rsp+0x270]
   14000530c:	mov    rbx,QWORD PTR [r11+0x28]
   140005310:	mov    rsi,QWORD PTR [r11+0x30]
   140005314:	mov    rsp,r11
   140005317:	pop    r12
   140005319:	pop    rdi
   14000531a:	pop    rbp
   14000531b:	ret    
   14000531c:	mov    QWORD PTR [rsp+0x18],rbx
   140005321:	push   rdi
   140005322:	sub    rsp,0x170
   140005329:	mov    rax,QWORD PTR [rip+0x1dd90]        # 0x1400230c0
   140005330:	xor    rax,rsp
   140005333:	mov    QWORD PTR [rsp+0x160],rax
   14000533b:	mov    edi,edx
   14000533d:	mov    rbx,rcx
   140005340:	call   0x1400041cc
   140005345:	test   al,al
   140005347:	je     0x1400053c5
   140005349:	lea    r8,[rip+0x16598]        # 0x14001b8e8
   140005350:	lea    rcx,[rsp+0x50]
   140005355:	mov    r9,rbx
   140005358:	mov    edx,0x104
   14000535d:	call   0x140004318
   140005362:	lea    rdx,[rsp+0x20]
   140005367:	lea    rcx,[rsp+0x50]
   14000536c:	call   0x14000b658
   140005371:	test   eax,eax
   140005373:	jne    0x140005388
   140005375:	lea    rcx,[rip+0x1655c]        # 0x14001b8d8
   14000537c:	mov    rdx,rbx
   14000537f:	call   0x14000408c
   140005384:	mov    al,0x1
   140005386:	jmp    0x1400053e1
   140005388:	lea    r8,[rip+0x16531]        # 0x14001b8c0
   14000538f:	lea    rcx,[rsp+0x50]
   140005394:	mov    r9,rbx
   140005397:	mov    edx,0x104
   14000539c:	call   0x140004318
   1400053a1:	lea    rdx,[rsp+0x20]
   1400053a6:	lea    rcx,[rsp+0x50]
   1400053ab:	call   0x14000b658
   1400053b0:	test   eax,eax
   1400053b2:	jne    0x1400053c5
   1400053b4:	lea    rdx,[rip+0x164fd]        # 0x14001b8b8
   1400053bb:	mov    rcx,rbx
   1400053be:	call   0x14000a6e0
   1400053c3:	jmp    0x140005375
   1400053c5:	mov    edx,edi
   1400053c7:	mov    rcx,rbx
   1400053ca:	call   0x140005138
   1400053cf:	test   al,al
   1400053d1:	jne    0x140005375
   1400053d3:	lea    rcx,[rip+0x164be]        # 0x14001b898
   1400053da:	call   0x140004370
   1400053df:	xor    al,al
   1400053e1:	mov    rcx,QWORD PTR [rsp+0x160]
   1400053e9:	xor    rcx,rsp
   1400053ec:	call   0x14000a850
   1400053f1:	mov    rbx,QWORD PTR [rsp+0x190]
   1400053f9:	add    rsp,0x170
   140005400:	pop    rdi
   140005401:	ret    
   140005402:	int3   
   140005403:	int3   
   140005404:	mov    QWORD PTR [rsp+0x10],rbx
   140005409:	push   rdi
   14000540a:	sub    rsp,0x140
   140005411:	mov    rax,QWORD PTR [rip+0x1dca8]        # 0x1400230c0
   140005418:	xor    rax,rsp
   14000541b:	mov    QWORD PTR [rsp+0x130],rax
   140005423:	mov    rdi,rcx
   140005426:	lea    rcx,[rsp+0x20]
   14000542b:	mov    edx,0x104
   140005430:	call   0x14000531c
   140005435:	test   al,al
   140005437:	jne    0x14000543d
   140005439:	xor    eax,eax
   14000543b:	jmp    0x1400054a2
   14000543d:	mov    rcx,QWORD PTR [rip+0x1dc3c]        # 0x140023080
   140005444:	call   0x140009fd0
   140005449:	lea    rcx,[rsp+0x20]
   14000544e:	mov    rbx,rax
   140005451:	call   0x140009fd0
   140005456:	add    rbx,rax
   140005459:	cmp    rbx,0x104
   140005460:	jae    0x140005439
   140005462:	mov    rdx,QWORD PTR [rip+0x1dc17]        # 0x140023080
   140005469:	lea    rcx,[rsp+0x20]
   14000546e:	call   0x14000a6e0
   140005473:	mov    rax,QWORD PTR [rip+0x1f376]        # 0x1400247f0
   14000547a:	test   rax,rax
   14000547d:	jne    0x140005496
   14000547f:	lea    rcx,[rsp+0x20]
   140005484:	call   QWORD PTR [rip+0x14c1e]        # 0x14001a0a8
   14000548a:	mov    QWORD PTR [rip+0x1f35f],rax        # 0x1400247f0
   140005491:	test   rax,rax
   140005494:	je     0x140005439
   140005496:	mov    rdx,rdi
   140005499:	mov    rcx,rax
   14000549c:	call   QWORD PTR [rip+0x14bf6]        # 0x14001a098
   1400054a2:	mov    rcx,QWORD PTR [rsp+0x130]
   1400054aa:	xor    rcx,rsp
   1400054ad:	call   0x14000a850
   1400054b2:	mov    rbx,QWORD PTR [rsp+0x158]
   1400054ba:	add    rsp,0x140
   1400054c1:	pop    rdi
   1400054c2:	ret    
   1400054c3:	int3   
   1400054c4:	rex push rbx
   1400054c6:	push   rbp
   1400054c7:	push   rsi
   1400054c8:	push   rdi
   1400054c9:	push   r12
   1400054cb:	push   r13
   1400054cd:	push   r14
   1400054cf:	push   r15
   1400054d1:	sub    rsp,0x88
   1400054d8:	mov    rax,QWORD PTR [rip+0x1dbe1]        # 0x1400230c0
   1400054df:	xor    rax,rsp
   1400054e2:	mov    QWORD PTR [rsp+0x78],rax
   1400054e7:	mov    rax,QWORD PTR [rsp+0x100]
   1400054ef:	mov    rsi,QWORD PTR [rsp+0xf0]
   1400054f7:	mov    rbx,QWORD PTR [rdx]
   1400054fa:	xor    ebp,ebp
   1400054fc:	mov    QWORD PTR [rsp+0x40],rax
   140005501:	mov    r15d,r9d
   140005504:	mov    r13,r8
   140005507:	mov    r14,rdx
   14000550a:	mov    r12,rcx
   14000550d:	mov    edi,0x40
   140005512:	cmp    DWORD PTR [rcx],ebp
   140005514:	jle    0x14000559c
   14000551a:	mov    rcx,QWORD PTR [rbx]
   14000551d:	lea    rdx,[rip+0x165c4]        # 0x14001bae8
   140005524:	call   0x14000a880
   140005529:	test   eax,eax
   14000552b:	je     0x14000556d
   14000552d:	mov    rcx,QWORD PTR [rbx]
   140005530:	lea    rdx,[rip+0x154dd]        # 0x14001aa14
   140005537:	call   0x14000a880
   14000553c:	test   eax,eax
   14000553e:	je     0x14000556d
   140005540:	mov    rcx,QWORD PTR [rbx]
   140005543:	lea    rdx,[rip+0x16596]        # 0x14001bae0
   14000554a:	call   0x14000a880
   14000554f:	test   eax,eax
   140005551:	je     0x140005566
   140005553:	mov    rcx,QWORD PTR [rbx]
   140005556:	lea    rdx,[rip+0x154bf]        # 0x14001aa1c
   14000555d:	call   0x14000a880
   140005562:	test   eax,eax
   140005564:	jne    0x140005572
   140005566:	mov    edi,0x20
   14000556b:	jmp    0x140005572
   14000556d:	mov    edi,0x40
   140005572:	inc    ebp
   140005574:	add    rbx,0x8
   140005578:	cmp    ebp,DWORD PTR [r12]
   14000557c:	jl     0x14000551a
   14000557e:	cmp    edi,0x40
   140005581:	je     0x14000559c
   140005583:	lea    rcx,[rip+0x164f6]        # 0x14001ba80
   14000558a:	mov    edx,edi
   14000558c:	call   0x140004370
   140005591:	mov    ecx,0x1
   140005596:	call   0x140009bdc
   14000559b:	int3   
   14000559c:	mov    edx,r15d
   14000559f:	mov    rcx,r13
   1400055a2:	call   0x14000531c
   1400055a7:	xor    ebp,ebp
   1400055a9:	test   al,al
   1400055ab:	jne    0x1400055c2
   1400055ad:	lea    rcx,[rip+0x16494]        # 0x14001ba48
   1400055b4:	call   0x140004370
   1400055b9:	lea    ecx,[rbp+0x2]
   1400055bc:	call   0x140009bdc
   1400055c1:	int3   
   1400055c2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400055c7:	movsxd rdx,DWORD PTR [rsp+0x108]
   1400055cf:	lea    rcx,[rip+0x15f1e]        # 0x14001b4f4
   1400055d6:	mov    QWORD PTR [rsp+0x38],rcx
   1400055db:	lea    rax,[rip+0x15e86]        # 0x14001b468
   1400055e2:	lea    r8,[rip+0x16447]        # 0x14001ba30
   1400055e9:	mov    QWORD PTR [rsp+0x30],rax
   1400055ee:	mov    QWORD PTR [rsp+0x28],rcx
   1400055f3:	mov    QWORD PTR [rsp+0x20],rcx
   1400055f8:	mov    rcx,rbx
   1400055fb:	mov    r9,r13
   1400055fe:	call   0x140004318
   140005603:	xor    edx,edx
   140005605:	mov    rcx,rbx
   140005608:	call   0x1400033a0
   14000560d:	mov    r15d,0x1
   140005613:	cmp    eax,r15d
   140005616:	jge    0x14000562d
   140005618:	lea    rcx,[rip+0x163d9]        # 0x14001b9f8
   14000561f:	call   0x140004370
   140005624:	mov    ecx,r15d
   140005627:	call   0x140009bdc
   14000562c:	int3   
   14000562d:	xor    r8d,r8d
   140005630:	mov    rdx,r14
   140005633:	mov    rcx,r12
   140005636:	call   0x140002420
   14000563b:	lea    rdx,[rip+0x155b2]        # 0x14001abf4
   140005642:	mov    rcx,rax
   140005645:	mov    rbx,rax
   140005648:	call   0x14000a880
   14000564d:	test   eax,eax
   14000564f:	jne    0x140005668
   140005651:	lea    rcx,[rip+0x16378]        # 0x14001b9d0
   140005658:	call   0x140004370
   14000565d:	mov    ecx,0x4
   140005662:	call   0x140009bdc
   140005667:	int3   
   140005668:	mov    edx,0x2f
   14000566d:	mov    rcx,rbx
   140005670:	mov    BYTE PTR [rsi],bpl
   140005673:	call   0x14000c07c
   140005678:	test   rax,rax
   14000567b:	jne    0x1400056ae
   14000567d:	lea    edx,[rax+0x5c]
   140005680:	mov    rcx,rbx
   140005683:	call   0x14000c07c
   140005688:	test   rax,rax
   14000568b:	jne    0x1400056ae
   14000568d:	movsxd rdx,DWORD PTR [rsp+0xf8]
   140005695:	lea    r8,[rip+0x16084]        # 0x14001b720
   14000569c:	mov    r9,r13
   14000569f:	mov    rcx,rsi
   1400056a2:	mov    QWORD PTR [rsp+0x20],rbx
   1400056a7:	call   0x140004318
   1400056ac:	jmp    0x1400056c8
   1400056ae:	movsxd rdx,DWORD PTR [rsp+0xf8]
   1400056b6:	lea    r8,[rip+0x16053]        # 0x14001b710
   1400056bd:	mov    r9,rbx
   1400056c0:	mov    rcx,rsi
   1400056c3:	call   0x140004318
   1400056c8:	lea    rdx,[rsp+0x48]
   1400056cd:	mov    rcx,rsi
   1400056d0:	call   0x14000b658
   1400056d5:	test   eax,eax
   1400056d7:	je     0x1400056f6
   1400056d9:	lea    rcx,[rip+0x16280]        # 0x14001b960
   1400056e0:	mov    r8,rsi
   1400056e3:	mov    rdx,rbx
   1400056e6:	call   0x140004370
   1400056eb:	mov    ecx,0x4
   1400056f0:	call   0x140009bdc
   1400056f5:	int3   
   1400056f6:	mov    rbx,QWORD PTR [r14]
   1400056f9:	mov    edi,ebp
   1400056fb:	cmp    DWORD PTR [r12],ebp
   1400056ff:	jle    0x14000578b
   140005705:	mov    ecx,DWORD PTR [rip+0x1d96d]        # 0x140023078
   14000570b:	test   ecx,ecx
   14000570d:	jns    0x140005733
   14000570f:	mov    rdx,QWORD PTR [rbx]
   140005712:	lea    rcx,[rip+0x16227]        # 0x14001b940
   140005719:	call   0x140004178
   14000571e:	mov    ecx,DWORD PTR [rip+0x1d954]        # 0x140023078
   140005724:	cmp    eax,r15d
   140005727:	cmove  ecx,r15d
   14000572b:	mov    DWORD PTR [rip+0x1d947],ecx        # 0x140023078
   140005731:	test   ecx,ecx
   140005733:	je     0x140005776
   140005735:	mov    rdx,QWORD PTR [rbx]
   140005738:	lea    rcx,[rip+0x161e9]        # 0x14001b928
   14000573f:	call   0x140004178
   140005744:	cmp    eax,r15d
   140005747:	je     0x140005785
   140005749:	mov    rdx,QWORD PTR [rbx]
   14000574c:	lea    rcx,[rip+0x161bd]        # 0x14001b910
   140005753:	call   0x140004178
   140005758:	test   eax,eax
   14000575a:	je     0x140005785
   14000575c:	mov    rdx,QWORD PTR [rbx]
   14000575f:	lea    rcx,[rip+0x16192]        # 0x14001b8f8
   140005766:	call   0x140004178
   14000576b:	cmp    eax,r15d
   14000576e:	je     0x140005785
   140005770:	mov    ecx,DWORD PTR [rip+0x1d902]        # 0x140023078
   140005776:	add    edi,r15d
   140005779:	add    rbx,0x8
   14000577d:	cmp    edi,DWORD PTR [r12]
   140005781:	jge    0x14000578b
   140005783:	jmp    0x14000570b
   140005785:	mov    DWORD PTR [rip+0x1d8ed],ebp        # 0x140023078
   14000578b:	mov    rcx,QWORD PTR [rsp+0x78]
   140005790:	xor    rcx,rsp
   140005793:	call   0x14000a850
   140005798:	add    rsp,0x88
   14000579f:	pop    r15
   1400057a1:	pop    r14
   1400057a3:	pop    r13
   1400057a5:	pop    r12
   1400057a7:	pop    rdi
   1400057a8:	pop    rsi
   1400057a9:	pop    rbp
   1400057aa:	pop    rbx
   1400057ab:	ret    
   1400057ac:	rex push rbx
   1400057ae:	sub    rsp,0x140
   1400057b5:	mov    rax,QWORD PTR [rip+0x1d904]        # 0x1400230c0
   1400057bc:	xor    rax,rsp
   1400057bf:	mov    QWORD PTR [rsp+0x130],rax
   1400057c7:	cmp    DWORD PTR [rip+0x1f01a],0x0        # 0x1400247e8
   1400057ce:	jne    0x14000588d
   1400057d4:	lea    rcx,[rsp+0x20]
   1400057d9:	mov    edx,0x104
   1400057de:	call   0x14000531c
   1400057e3:	test   al,al
   1400057e5:	je     0x140005883
   1400057eb:	lea    rcx,[rip+0x16366]        # 0x14001bb58
   1400057f2:	call   0x140009fd0
   1400057f7:	lea    rcx,[rip+0x16352]        # 0x14001bb50
   1400057fe:	mov    rbx,rax
   140005801:	call   0x140009fd0
   140005806:	lea    rcx,[rsp+0x20]
   14000580b:	add    rbx,rax
   14000580e:	call   0x140009fd0
   140005813:	add    rax,rbx
   140005816:	cmp    rax,0x104
   14000581c:	jb     0x14000582e
   14000581e:	lea    rcx,[rip+0x162f3]        # 0x14001bb18
   140005825:	call   0x140004370
   14000582a:	xor    al,al
   14000582c:	jmp    0x14000588f
   14000582e:	lea    rdx,[rip+0x162cb]        # 0x14001bb00
   140005835:	lea    rcx,[rsp+0x20]
   14000583a:	call   0x14000a6e0
   14000583f:	lea    rdx,[rsp+0x20]
   140005844:	lea    rcx,[rip+0x162a5]        # 0x14001baf0
   14000584b:	call   0x14000408c
   140005850:	lea    rcx,[rsp+0x20]
   140005855:	xor    edx,edx
   140005857:	call   0x14000c3cc
   14000585c:	test   eax,eax
   14000585e:	jne    0x140005883
   140005860:	lea    rcx,[rsp+0x20]
   140005865:	call   QWORD PTR [rip+0x1483d]        # 0x14001a0a8
   14000586b:	test   rax,rax
   14000586e:	jne    0x140005883
   140005870:	lea    rdx,[rsp+0x20]
   140005875:	lea    rcx,[rip+0x15d6c]        # 0x14001b5e8
   14000587c:	call   0x140004370
   140005881:	jmp    0x14000582a
   140005883:	mov    DWORD PTR [rip+0x1ef5b],0x1        # 0x1400247e8
   14000588d:	mov    al,0x1
   14000588f:	mov    rcx,QWORD PTR [rsp+0x130]
   140005897:	xor    rcx,rsp
   14000589a:	call   0x14000a850
   14000589f:	add    rsp,0x140
   1400058a6:	pop    rbx
   1400058a7:	ret    
   1400058a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400058ad:	mov    QWORD PTR [rsp+0x10],rsi
   1400058b2:	push   rdi
   1400058b3:	sub    rsp,0x20
   1400058b7:	mov    rsi,rdx
   1400058ba:	mov    rbx,rcx
   1400058bd:	mov    rdx,rcx
   1400058c0:	lea    rcx,[rip+0x16301]        # 0x14001bbc8
   1400058c7:	call   0x14000408c
   1400058cc:	call   0x1400057ac
   1400058d1:	mov    rcx,rbx
   1400058d4:	call   QWORD PTR [rip+0x147ce]        # 0x14001a0a8
   1400058da:	mov    rdi,rax
   1400058dd:	test   rax,rax
   1400058e0:	jne    0x1400058eb
   1400058e2:	lea    rcx,[rip+0x15cff]        # 0x14001b5e8
   1400058e9:	jmp    0x140005928
   1400058eb:	lea    rdx,[rip+0x162be]        # 0x14001bbb0
   1400058f2:	mov    rcx,rax
   1400058f5:	call   QWORD PTR [rip+0x1479d]        # 0x14001a098
   1400058fb:	lea    rdx,[rip+0x1628e]        # 0x14001bb90
   140005902:	mov    rcx,rdi
   140005905:	mov    QWORD PTR [rsi],rax
   140005908:	call   QWORD PTR [rip+0x1478a]        # 0x14001a098
   14000590e:	cmp    QWORD PTR [rsi],0x0
   140005912:	mov    QWORD PTR [rsi+0x8],rax
   140005916:	je     0x140005921
   140005918:	test   rax,rax
   14000591b:	je     0x140005921
   14000591d:	mov    al,0x1
   14000591f:	jmp    0x140005932
   140005921:	lea    rcx,[rip+0x16240]        # 0x14001bb68
   140005928:	mov    rdx,rbx
   14000592b:	call   0x140004370
   140005930:	xor    al,al
   140005932:	mov    rbx,QWORD PTR [rsp+0x30]
   140005937:	mov    rsi,QWORD PTR [rsp+0x38]
   14000593c:	add    rsp,0x20
   140005940:	pop    rdi
   140005941:	ret    
   140005942:	int3   
   140005943:	int3   
   140005944:	mov    QWORD PTR [rsp+0x10],rbx
   140005949:	mov    QWORD PTR [rsp+0x18],rsi
   14000594e:	push   rdi
   14000594f:	sub    rsp,0x140
   140005956:	mov    rax,QWORD PTR [rip+0x1d763]        # 0x1400230c0
   14000595d:	xor    rax,rsp
   140005960:	mov    QWORD PTR [rsp+0x130],rax
   140005968:	mov    rsi,rcx
   14000596b:	mov    rcx,QWORD PTR [rip+0x1ee96]        # 0x140024808
   140005972:	or     ebx,0xffffffff
   140005975:	test   rcx,rcx
   140005978:	jne    0x140005a41
   14000597e:	lea    rcx,[rsp+0x20]
   140005983:	mov    edx,0x104
   140005988:	call   0x14000531c
   14000598d:	test   al,al
   14000598f:	je     0x140005a35
   140005995:	lea    rcx,[rsp+0x20]
   14000599a:	call   0x140009fd0
   14000599f:	mov    rdi,rax
   1400059a2:	call   0x1400057ac
   1400059a7:	lea    rdx,[rip+0x1625a]        # 0x14001bc08
   1400059ae:	lea    rcx,[rsp+0x20]
   1400059b3:	call   0x14000a6e0
   1400059b8:	lea    rcx,[rsp+0x20]
   1400059bd:	call   QWORD PTR [rip+0x146e5]        # 0x14001a0a8
   1400059c3:	test   rax,rax
   1400059c6:	je     0x140005a35
   1400059c8:	movsxd rdi,edi
   1400059cb:	lea    rdx,[rip+0x16226]        # 0x14001bbf8
   1400059d2:	lea    rcx,[rsp+0x20]
   1400059d7:	mov    BYTE PTR [rsp+rdi*1+0x20],0x0
   1400059dc:	call   0x14000a6e0
   1400059e1:	lea    rcx,[rsp+0x20]
   1400059e6:	call   QWORD PTR [rip+0x146bc]        # 0x14001a0a8
   1400059ec:	test   rax,rax
   1400059ef:	je     0x140005a35
   1400059f1:	lea    rdx,[rip+0x161f0]        # 0x14001bbe8
   1400059f8:	lea    rcx,[rsp+0x20]
   1400059fd:	mov    BYTE PTR [rsp+rdi*1+0x20],0x0
   140005a02:	call   0x14000a6e0
   140005a07:	lea    rcx,[rsp+0x20]
   140005a0c:	call   QWORD PTR [rip+0x14696]        # 0x14001a0a8
   140005a12:	mov    QWORD PTR [rip+0x1edef],rax        # 0x140024808
   140005a19:	test   rax,rax
   140005a1c:	je     0x140005a5d
   140005a1e:	lea    rdx,[rip+0x161b3]        # 0x14001bbd8
   140005a25:	mov    rcx,rax
   140005a28:	call   QWORD PTR [rip+0x1466a]        # 0x14001a098
   140005a2e:	mov    QWORD PTR [rip+0x1edcb],rax        # 0x140024800
   140005a35:	mov    rcx,QWORD PTR [rip+0x1edcc]        # 0x140024808
   140005a3c:	test   rcx,rcx
   140005a3f:	je     0x140005a5d
   140005a41:	mov    rdx,rsi
   140005a44:	call   QWORD PTR [rip+0x1464e]        # 0x14001a098
   140005a4a:	test   rax,rax
   140005a4d:	je     0x140005a5d
   140005a4f:	mov    DWORD PTR [rip+0x1ed87],0x1        # 0x1400247e0
   140005a59:	call   rax
   140005a5b:	mov    ebx,eax
   140005a5d:	mov    eax,ebx
   140005a5f:	mov    rcx,QWORD PTR [rsp+0x130]
   140005a67:	xor    rcx,rsp
   140005a6a:	call   0x14000a850
   140005a6f:	lea    r11,[rsp+0x140]
   140005a77:	mov    rbx,QWORD PTR [r11+0x18]
   140005a7b:	mov    rsi,QWORD PTR [r11+0x20]
   140005a7f:	mov    rsp,r11
   140005a82:	pop    rdi
   140005a83:	ret    
   140005a84:	mov    rax,rsp
   140005a87:	mov    QWORD PTR [rax+0x8],rbx
   140005a8b:	mov    QWORD PTR [rax+0x10],rbp
   140005a8f:	mov    QWORD PTR [rax+0x18],rsi
   140005a93:	push   rdi
   140005a94:	sub    rsp,0x40
   140005a98:	and    DWORD PTR [rax+0x20],0x0
   140005a9c:	lea    rax,[rax-0x18]
   140005aa0:	mov    rsi,r8
   140005aa3:	mov    r9,r8
   140005aa6:	mov    rbp,rcx
   140005aa9:	mov    r8,rcx
   140005aac:	mov    QWORD PTR [rsp+0x28],rax
   140005ab1:	xor    ecx,ecx
   140005ab3:	mov    rdi,rdx
   140005ab6:	mov    DWORD PTR [rsp+0x20],0x10000
   140005abe:	call   0x14000c4b0
   140005ac3:	mov    rbx,rax
   140005ac6:	test   rax,rax
   140005ac9:	jne    0x140005aeb
   140005acb:	lea    rax,[rsp+0x30]
   140005ad0:	mov    r9,rsi
   140005ad3:	mov    r8,rbp
   140005ad6:	mov    QWORD PTR [rsp+0x28],rax
   140005adb:	and    DWORD PTR [rsp+0x20],ebx
   140005adf:	mov    edx,edi
   140005ae1:	xor    ecx,ecx
   140005ae3:	call   0x14000c4b0
   140005ae8:	mov    rbx,rax
   140005aeb:	cmp    DWORD PTR [rip+0x1d586],0x0        # 0x140023078
   140005af2:	je     0x140005ba8
   140005af8:	lea    rcx,[rip+0x16139]        # 0x14001bc38
   140005aff:	call   0x140009da4
   140005b04:	test   rax,rax
   140005b07:	je     0x140005b28
   140005b09:	lea    rdx,[rip+0x152a4]        # 0x14001adb4
   140005b10:	mov    rcx,rax
   140005b13:	call   0x140019750
   140005b18:	neg    eax
   140005b1a:	sbb    ecx,ecx
   140005b1c:	and    ecx,DWORD PTR [rip+0x1d556]        # 0x140023078
   140005b22:	mov    DWORD PTR [rip+0x1d550],ecx        # 0x140023078
   140005b28:	lea    rcx,[rip+0x160f9]        # 0x14001bc28
   140005b2f:	call   0x140009da4
   140005b34:	mov    rdi,rax
   140005b37:	test   rax,rax
   140005b3a:	je     0x140005b5d
   140005b3c:	lea    rdx,[rip+0x15271]        # 0x14001adb4
   140005b43:	mov    rcx,rax
   140005b46:	call   0x140019750
   140005b4b:	neg    eax
   140005b4d:	sbb    ecx,ecx
   140005b4f:	and    ecx,DWORD PTR [rip+0x1d523]        # 0x140023078
   140005b55:	mov    DWORD PTR [rip+0x1d51d],ecx        # 0x140023078
   140005b5b:	jmp    0x140005b63
   140005b5d:	mov    ecx,DWORD PTR [rip+0x1d515]        # 0x140023078
   140005b63:	test   ecx,ecx
   140005b65:	jns    0x140005b9a
   140005b67:	and    DWORD PTR [rip+0x1d50a],0x0        # 0x140023078
   140005b6e:	test   rdi,rdi
   140005b71:	je     0x140005ba8
   140005b73:	lea    rdx,[rip+0x15242]        # 0x14001adbc
   140005b7a:	mov    rcx,rdi
   140005b7d:	call   0x140019750
   140005b82:	mov    ecx,DWORD PTR [rip+0x1d4f0]        # 0x140023078
   140005b88:	mov    edx,0x1
   140005b8d:	test   eax,eax
   140005b8f:	cmove  ecx,edx
   140005b92:	mov    DWORD PTR [rip+0x1d4e0],ecx        # 0x140023078
   140005b98:	test   ecx,ecx
   140005b9a:	je     0x140005ba8
   140005b9c:	lea    rcx,[rip+0x16075]        # 0x14001bc18
   140005ba3:	call   0x140005944
   140005ba8:	test   rbx,rbx
   140005bab:	je     0x140005bd2
   140005bad:	or     edx,0xffffffff
   140005bb0:	mov    rcx,rbx
   140005bb3:	call   QWORD PTR [rip+0x144cf]        # 0x14001a088
   140005bb9:	lea    rdx,[rsp+0x68]
   140005bbe:	mov    rcx,rbx
   140005bc1:	call   QWORD PTR [rip+0x144e9]        # 0x14001a0b0
   140005bc7:	mov    rcx,rbx
   140005bca:	call   QWORD PTR [rip+0x144a8]        # 0x14001a078
   140005bd0:	jmp    0x140005bdb
   140005bd2:	mov    rcx,rsi
   140005bd5:	call   rbp
   140005bd7:	mov    DWORD PTR [rsp+0x68],eax
   140005bdb:	cmp    DWORD PTR [rip+0x1ebfe],0x0        # 0x1400247e0
   140005be2:	je     0x140005bf2
   140005be4:	mov    rax,QWORD PTR [rip+0x1ec15]        # 0x140024800
   140005beb:	test   rax,rax
   140005bee:	je     0x140005bf2
   140005bf0:	call   rax
   140005bf2:	mov    eax,DWORD PTR [rsp+0x68]
   140005bf6:	mov    rbx,QWORD PTR [rsp+0x50]
   140005bfb:	mov    rbp,QWORD PTR [rsp+0x58]
   140005c00:	mov    rsi,QWORD PTR [rsp+0x60]
   140005c05:	add    rsp,0x40
   140005c09:	pop    rdi
   140005c0a:	ret    
   140005c0b:	int3   
   140005c0c:	test   rcx,rcx
   140005c0f:	je     0x140005c67
   140005c11:	mov    QWORD PTR [rsp+0x8],rbx
   140005c16:	mov    QWORD PTR [rsp+0x10],rsi
   140005c1b:	push   rdi
   140005c1c:	sub    rsp,0x20
   140005c20:	xor    edi,edi
   140005c22:	mov    rbx,rcx
   140005c25:	cmp    QWORD PTR [rcx],rdi
   140005c28:	je     0x140005c50
   140005c2a:	cmp    DWORD PTR [rcx+0x8],edi
   140005c2d:	jle    0x140005c48
   140005c2f:	mov    esi,edi
   140005c31:	mov    rcx,QWORD PTR [rbx]
   140005c34:	mov    rcx,QWORD PTR [rsi+rcx*1]
   140005c38:	call   0x140004084
   140005c3d:	inc    edi
   140005c3f:	add    rsi,0x8
   140005c43:	cmp    edi,DWORD PTR [rbx+0x8]
   140005c46:	jl     0x140005c31
   140005c48:	mov    rcx,QWORD PTR [rbx]
   140005c4b:	call   0x140004084
   140005c50:	mov    rcx,rbx
   140005c53:	call   0x140004084
   140005c58:	mov    rbx,QWORD PTR [rsp+0x30]
   140005c5d:	mov    rsi,QWORD PTR [rsp+0x38]
   140005c62:	add    rsp,0x20
   140005c66:	pop    rdi
   140005c67:	ret    
   140005c68:	mov    rax,rsp
   140005c6b:	mov    QWORD PTR [rax+0x8],rbx
   140005c6f:	mov    QWORD PTR [rax+0x10],rbp
   140005c73:	mov    QWORD PTR [rax+0x18],rsi
   140005c77:	mov    QWORD PTR [rax+0x20],rdi
   140005c7b:	push   r12
   140005c7d:	push   r13
   140005c7f:	push   r14
   140005c81:	sub    rsp,0x20
   140005c85:	xor    edi,edi
   140005c87:	mov    r14b,dl
   140005c8a:	mov    rsi,rcx
   140005c8d:	lea    ebp,[rdi+0x1]
   140005c90:	cmp    DWORD PTR [rcx+0x8],edi
   140005c93:	jle    0x140005cb2
   140005c95:	xor    ebx,ebx
   140005c97:	mov    rcx,QWORD PTR [rsi]
   140005c9a:	mov    rcx,QWORD PTR [rcx+rbx*1]
   140005c9e:	call   0x140009fd0
   140005ca3:	inc    edi
   140005ca5:	add    rbx,0x8
   140005ca9:	lea    ebp,[rbp+rax*1+0x1]
   140005cad:	cmp    edi,DWORD PTR [rsi+0x8]
   140005cb0:	jl     0x140005c97
   140005cb2:	movsxd rcx,ebp
   140005cb5:	call   0x140004000
   140005cba:	xor    r12d,r12d
   140005cbd:	xor    r13d,r13d
   140005cc0:	mov    rbp,rax
   140005cc3:	mov    rdi,rax
   140005cc6:	cmp    DWORD PTR [rsi+0x8],r12d
   140005cca:	jle    0x140005d07
   140005ccc:	mov    rcx,QWORD PTR [rsi]
   140005ccf:	mov    rcx,QWORD PTR [rcx+r12*8]
   140005cd3:	call   0x140009fd0
   140005cd8:	test   r12,r12
   140005cdb:	jle    0x140005ce3
   140005cdd:	mov    BYTE PTR [rdi],r14b
   140005ce0:	inc    rdi
   140005ce3:	mov    rdx,QWORD PTR [rsi]
   140005ce6:	movsxd rbx,eax
   140005ce9:	mov    rcx,rdi
   140005cec:	mov    rdx,QWORD PTR [rdx+r12*8]
   140005cf0:	mov    r8,rbx
   140005cf3:	call   0x14000a170
   140005cf8:	inc    r13d
   140005cfb:	add    rdi,rbx
   140005cfe:	inc    r12
   140005d01:	cmp    r13d,DWORD PTR [rsi+0x8]
   140005d05:	jl     0x140005ccc
   140005d07:	mov    rbx,QWORD PTR [rsp+0x40]
   140005d0c:	mov    rsi,QWORD PTR [rsp+0x50]
   140005d11:	mov    BYTE PTR [rdi],0x0
   140005d14:	mov    rdi,QWORD PTR [rsp+0x58]
   140005d19:	mov    rax,rbp
   140005d1c:	mov    rbp,QWORD PTR [rsp+0x48]
   140005d21:	add    rsp,0x20
   140005d25:	pop    r14
   140005d27:	pop    r13
   140005d29:	pop    r12
   140005d2b:	ret    
   140005d2c:	mov    rax,rsp
   140005d2f:	mov    QWORD PTR [rax+0x8],rbx
   140005d33:	mov    QWORD PTR [rax+0x10],rbp
   140005d37:	mov    QWORD PTR [rax+0x18],rsi
   140005d3b:	mov    QWORD PTR [rax+0x20],rdi
   140005d3f:	push   r12
   140005d41:	push   r13
   140005d43:	push   r14
   140005d45:	sub    rsp,0x20
   140005d49:	mov    r13b,dl
   140005d4c:	mov    rbp,rcx
   140005d4f:	call   0x140009fd0
   140005d54:	movsxd r12,eax
   140005d57:	mov    ebx,0x1
   140005d5c:	mov    rcx,rbp
   140005d5f:	add    r12,rbp
   140005d62:	cmp    rbp,r12
   140005d65:	jae    0x140005d79
   140005d67:	xor    eax,eax
   140005d69:	cmp    BYTE PTR [rcx],r13b
   140005d6c:	sete   al
   140005d6f:	inc    rcx
   140005d72:	add    ebx,eax
   140005d74:	cmp    rcx,r12
   140005d77:	jb     0x140005d67
   140005d79:	mov    ecx,0x10
   140005d7e:	call   0x140004000
   140005d83:	movsxd rcx,ebx
   140005d86:	shl    rcx,0x3
   140005d8a:	mov    DWORD PTR [rax+0xc],ebx
   140005d8d:	mov    rdi,rax
   140005d90:	call   0x140004000
   140005d95:	and    DWORD PTR [rdi+0x8],0x0
   140005d99:	mov    QWORD PTR [rdi],rax
   140005d9c:	mov    rsi,rbp
   140005d9f:	cmp    rbp,r12
   140005da2:	ja     0x140005d9c
   140005da4:	cmp    BYTE PTR [rsi],r13b
   140005da7:	je     0x140005dae
   140005da9:	cmp    BYTE PTR [rsi],0x0
   140005dac:	jne    0x140005e14
   140005dae:	mov    ebx,esi
   140005db0:	sub    ebx,ebp
   140005db2:	lea    eax,[rbx+0x1]
   140005db5:	movsxd rcx,eax
   140005db8:	call   0x140004000
   140005dbd:	movsxd rbx,ebx
   140005dc0:	mov    rdx,rbp
   140005dc3:	mov    rcx,rax
   140005dc6:	mov    r8,rbx
   140005dc9:	mov    r14,rax
   140005dcc:	call   0x14000a170
   140005dd1:	mov    BYTE PTR [rbx+r14*1],0x0
   140005dd6:	mov    edx,DWORD PTR [rdi+0x8]
   140005dd9:	mov    ecx,DWORD PTR [rdi+0xc]
   140005ddc:	inc    edx
   140005dde:	cmp    ecx,edx
   140005de0:	jge    0x140005dfd
   140005de2:	add    ecx,ecx
   140005de4:	mov    DWORD PTR [rdi+0xc],ecx
   140005de7:	cmp    ecx,edx
   140005de9:	jl     0x140005de2
   140005deb:	movsxd rdx,ecx
   140005dee:	mov    rcx,QWORD PTR [rdi]
   140005df1:	shl    rdx,0x3
   140005df5:	call   0x14000402c
   140005dfa:	mov    QWORD PTR [rdi],rax
   140005dfd:	movsxd rcx,DWORD PTR [rdi+0x8]
   140005e01:	mov    rax,QWORD PTR [rdi]
   140005e04:	mov    QWORD PTR [rax+rcx*8],r14
   140005e08:	inc    DWORD PTR [rdi+0x8]
   140005e0b:	cmp    BYTE PTR [rsi],0x0
   140005e0e:	je     0x140005e21
   140005e10:	lea    rbp,[rsi+0x1]
   140005e14:	inc    rsi
   140005e17:	cmp    rsi,r12
   140005e1a:	jbe    0x140005da4
   140005e1c:	jmp    0x140005d9c
   140005e21:	mov    rbx,QWORD PTR [rsp+0x40]
   140005e26:	mov    rbp,QWORD PTR [rsp+0x48]
   140005e2b:	mov    rsi,QWORD PTR [rsp+0x50]
   140005e30:	mov    rax,rdi
   140005e33:	mov    rdi,QWORD PTR [rsp+0x58]
   140005e38:	add    rsp,0x20
   140005e3c:	pop    r14
   140005e3e:	pop    r13
   140005e40:	pop    r12
   140005e42:	ret    
   140005e43:	int3   
   140005e44:	mov    QWORD PTR [rsp+0x8],rbx
   140005e49:	mov    QWORD PTR [rsp+0x10],rbp
   140005e4e:	mov    QWORD PTR [rsp+0x18],rsi
   140005e53:	push   rdi
   140005e54:	push   r12
   140005e56:	push   r13
   140005e58:	push   r14
   140005e5a:	push   r15
   140005e5c:	sub    rsp,0x20
   140005e60:	mov    r14,rcx
   140005e63:	mov    ebx,0x10
   140005e68:	mov    ecx,ebx
   140005e6a:	call   0x140004000
   140005e6f:	lea    ecx,[rbx+0x70]
   140005e72:	mov    DWORD PTR [rax+0xc],ebx
   140005e75:	mov    rsi,rax
   140005e78:	call   0x140004000
   140005e7d:	and    DWORD PTR [rsi+0x8],0x0
   140005e81:	mov    ecx,ebx
   140005e83:	mov    QWORD PTR [rsi],rax
   140005e86:	call   0x140004000
   140005e8b:	lea    rdx,[rip+0x1e97e]        # 0x140024810
   140005e92:	mov    rcx,r14
   140005e95:	mov    r12,rax
   140005e98:	call   QWORD PTR [rip+0x1421a]        # 0x14001a0b8
   140005e9e:	cmp    rax,0xffffffffffffffff
   140005ea2:	je     0x140005fef
   140005ea8:	lea    r15,[rip+0x1e98d]        # 0x14002483c
   140005eaf:	mov    QWORD PTR [r12],rax
   140005eb3:	mov    QWORD PTR [r12+0x8],r15
   140005eb8:	mov    rbp,QWORD PTR [r12+0x8]
   140005ebd:	test   rbp,rbp
   140005ec0:	je     0x140005eca
   140005ec2:	and    QWORD PTR [r12+0x8],0x0
   140005ec8:	jmp    0x140005ee3
   140005eca:	mov    rcx,QWORD PTR [r12]
   140005ece:	lea    rdx,[rip+0x1e93b]        # 0x140024810
   140005ed5:	call   QWORD PTR [rip+0x141e5]        # 0x14001a0c0
   140005edb:	neg    eax
   140005edd:	sbb    rbp,rbp
   140005ee0:	and    rbp,r15
   140005ee3:	test   rbp,rbp
   140005ee6:	je     0x140005fce
   140005eec:	mov    rcx,rbp
   140005eef:	call   0x140009fd0
   140005ef4:	cmp    eax,0x4
   140005ef7:	jl     0x140005eb8
   140005ef9:	movsxd rcx,eax
   140005efc:	cmp    BYTE PTR [rcx+rbp*1-0x4],0x2e
   140005f01:	jne    0x140005eb8
   140005f03:	lea    rbx,[rcx+rbp*1-0x3]
   140005f08:	lea    rdx,[rip+0x15d35]        # 0x14001bc44
   140005f0f:	mov    rcx,rbx
   140005f12:	call   0x14000a880
   140005f17:	test   eax,eax
   140005f19:	je     0x140005f2e
   140005f1b:	lea    rdx,[rip+0x15d1e]        # 0x14001bc40
   140005f22:	mov    rcx,rbx
   140005f25:	call   0x14000a880
   140005f2a:	test   eax,eax
   140005f2c:	jne    0x140005eb8
   140005f2e:	mov    edx,0x3b
   140005f33:	mov    rcx,rbp
   140005f36:	call   0x14000c07c
   140005f3b:	test   rax,rax
   140005f3e:	jne    0x140005eb8
   140005f44:	mov    rcx,r14
   140005f47:	call   0x140009fd0
   140005f4c:	mov    rcx,rbp
   140005f4f:	mov    rdi,rax
   140005f52:	call   0x140009fd0
   140005f57:	lea    ecx,[rax+rdi*1]
   140005f5a:	mov    rbx,rax
   140005f5d:	movsxd rcx,ecx
   140005f60:	call   0x140004000
   140005f65:	lea    ecx,[rdi-0x1]
   140005f68:	mov    rdx,r14
   140005f6b:	movsxd r8,ecx
   140005f6e:	mov    rcx,rax
   140005f71:	mov    r13,rax
   140005f74:	call   0x14000a170
   140005f79:	lea    r11d,[rbx+0x1]
   140005f7d:	movsxd rcx,edi
   140005f80:	lea    rcx,[rcx+r13*1-0x1]
   140005f85:	movsxd r8,r11d
   140005f88:	mov    rdx,rbp
   140005f8b:	call   0x14000a170
   140005f90:	mov    r11d,DWORD PTR [rsi+0x8]
   140005f94:	mov    eax,DWORD PTR [rsi+0xc]
   140005f97:	inc    r11d
   140005f9a:	cmp    eax,r11d
   140005f9d:	jge    0x140005fbb
   140005f9f:	add    eax,eax
   140005fa1:	mov    DWORD PTR [rsi+0xc],eax
   140005fa4:	cmp    eax,r11d
   140005fa7:	jl     0x140005f9f
   140005fa9:	mov    rcx,QWORD PTR [rsi]
   140005fac:	movsxd rdx,eax
   140005faf:	shl    rdx,0x3
   140005fb3:	call   0x14000402c
   140005fb8:	mov    QWORD PTR [rsi],rax
   140005fbb:	movsxd rcx,DWORD PTR [rsi+0x8]
   140005fbf:	mov    rax,QWORD PTR [rsi]
   140005fc2:	mov    QWORD PTR [rax+rcx*8],r13
   140005fc6:	inc    DWORD PTR [rsi+0x8]
   140005fc9:	jmp    0x140005eb8
   140005fce:	mov    rcx,QWORD PTR [r12]
   140005fd2:	call   QWORD PTR [rip+0x140f0]        # 0x14001a0c8
   140005fd8:	mov    rcx,QWORD PTR [r12+0x8]
   140005fdd:	call   0x140004084
   140005fe2:	mov    rcx,r12
   140005fe5:	call   0x140004084
   140005fea:	mov    rax,rsi
   140005fed:	jmp    0x140005ff1
   140005fef:	xor    eax,eax
   140005ff1:	mov    rbx,QWORD PTR [rsp+0x50]
   140005ff6:	mov    rbp,QWORD PTR [rsp+0x58]
   140005ffb:	mov    rsi,QWORD PTR [rsp+0x60]
   140006000:	add    rsp,0x20
   140006004:	pop    r15
   140006006:	pop    r14
   140006008:	pop    r13
   14000600a:	pop    r12
   14000600c:	pop    rdi
   14000600d:	ret    
   14000600e:	int3   
   14000600f:	int3   
   140006010:	mov    QWORD PTR [rsp+0x8],rbx
   140006015:	mov    QWORD PTR [rsp+0x10],rbp
   14000601a:	mov    QWORD PTR [rsp+0x18],rsi
   14000601f:	push   rdi
   140006020:	sub    rsp,0x20
   140006024:	xor    esi,esi
   140006026:	mov    rbx,rcx
   140006029:	cmp    DWORD PTR [rcx+0x8],esi
   14000602c:	jle    0x140006159
   140006032:	mov    rax,QWORD PTR [rbx]
   140006035:	movsxd rbp,esi
   140006038:	mov    rdi,QWORD PTR [rax+rbp*8]
   14000603c:	mov    rcx,rdi
   14000603f:	call   0x140009fd0
   140006044:	test   eax,eax
   140006046:	jle    0x14000614e
   14000604c:	movsxd rcx,eax
   14000604f:	cmp    BYTE PTR [rcx+rdi*1-0x1],0x2a
   140006054:	jne    0x14000614e
   14000605a:	cmp    eax,0x1
   14000605d:	je     0x14000606f
   14000605f:	mov    al,BYTE PTR [rcx+rdi*1-0x2]
   140006063:	cmp    al,0x5c
   140006065:	je     0x14000606f
   140006067:	cmp    al,0x2f
   140006069:	jne    0x14000614e
   14000606f:	xor    edx,edx
   140006071:	mov    rcx,rdi
   140006074:	call   0x14000c3cc
   140006079:	test   eax,eax
   14000607b:	je     0x14000614e
   140006081:	mov    rcx,QWORD PTR [rbx]
   140006084:	mov    rcx,QWORD PTR [rcx+rbp*8]
   140006088:	call   0x140005e44
   14000608d:	mov    rdi,rax
   140006090:	test   rax,rax
   140006093:	je     0x140006146
   140006099:	cmp    DWORD PTR [rax+0x8],0x0
   14000609d:	jle    0x140006146
   1400060a3:	mov    rcx,QWORD PTR [rbx]
   1400060a6:	mov    rcx,QWORD PTR [rcx+rbp*8]
   1400060aa:	call   0x140004084
   1400060af:	mov    r11d,DWORD PTR [rdi+0x8]
   1400060b3:	mov    eax,DWORD PTR [rbx+0xc]
   1400060b6:	add    r11d,DWORD PTR [rbx+0x8]
   1400060ba:	cmp    eax,r11d
   1400060bd:	jge    0x1400060db
   1400060bf:	add    eax,eax
   1400060c1:	mov    DWORD PTR [rbx+0xc],eax
   1400060c4:	cmp    eax,r11d
   1400060c7:	jl     0x1400060bf
   1400060c9:	mov    rcx,QWORD PTR [rbx]
   1400060cc:	movsxd rdx,eax
   1400060cf:	shl    rdx,0x3
   1400060d3:	call   0x14000402c
   1400060d8:	mov    QWORD PTR [rbx],rax
   1400060db:	mov    eax,DWORD PTR [rbx+0x8]
   1400060de:	lea    ecx,[rsi+0x1]
   1400060e1:	dec    eax
   1400060e3:	movsxd r8,eax
   1400060e6:	cmp    eax,ecx
   1400060e8:	jl     0x14000610b
   1400060ea:	sub    eax,ecx
   1400060ec:	lea    r9d,[rax+0x1]
   1400060f0:	mov    rdx,QWORD PTR [rbx]
   1400060f3:	movsxd rcx,DWORD PTR [rdi+0x8]
   1400060f7:	mov    rax,QWORD PTR [rdx+r8*8]
   1400060fb:	add    rcx,r8
   1400060fe:	dec    r8
   140006101:	dec    r9
   140006104:	mov    QWORD PTR [rdx+rcx*8-0x8],rax
   140006109:	jne    0x1400060f0
   14000610b:	xor    r9d,r9d
   14000610e:	cmp    DWORD PTR [rdi+0x8],r9d
   140006112:	jle    0x140006136
   140006114:	xor    r8d,r8d
   140006117:	mov    rax,QWORD PTR [rdi]
   14000611a:	mov    rcx,QWORD PTR [rbx]
   14000611d:	lea    rdx,[r8+rbp*8]
   140006121:	mov    rax,QWORD PTR [r8+rax*1]
   140006125:	inc    r9d
   140006128:	add    r8,0x8
   14000612c:	mov    QWORD PTR [rdx+rcx*1],rax
   140006130:	cmp    r9d,DWORD PTR [rdi+0x8]
   140006134:	jl     0x140006117
   140006136:	mov    eax,DWORD PTR [rdi+0x8]
   140006139:	lea    esi,[rsi+rax*1-0x1]
   14000613d:	dec    eax
   14000613f:	add    DWORD PTR [rbx+0x8],eax
   140006142:	and    DWORD PTR [rdi+0x8],0x0
   140006146:	mov    rcx,rdi
   140006149:	call   0x140005c0c
   14000614e:	inc    esi
   140006150:	cmp    esi,DWORD PTR [rbx+0x8]
   140006153:	jl     0x140006032
   140006159:	mov    rbx,QWORD PTR [rsp+0x30]
   14000615e:	mov    rbp,QWORD PTR [rsp+0x38]
   140006163:	mov    rsi,QWORD PTR [rsp+0x40]
   140006168:	add    rsp,0x20
   14000616c:	pop    rdi
   14000616d:	ret    
   14000616e:	int3   
   14000616f:	int3   
   140006170:	mov    QWORD PTR [rsp+0x8],rbx
   140006175:	mov    QWORD PTR [rsp+0x10],rsi
   14000617a:	push   rdi
   14000617b:	sub    rsp,0x20
   14000617f:	mov    edx,0x2a
   140006184:	mov    rdi,rcx
   140006187:	call   0x14000c07c
   14000618c:	test   rax,rax
   14000618f:	jne    0x140006196
   140006191:	mov    rax,rdi
   140006194:	jmp    0x1400061e6
   140006196:	mov    dl,0x3b
   140006198:	mov    rcx,rdi
   14000619b:	call   0x140005d2c
   1400061a0:	mov    rcx,rax
   1400061a3:	mov    rbx,rax
   1400061a6:	call   0x140006010
   1400061ab:	mov    dl,0x3b
   1400061ad:	mov    rcx,rbx
   1400061b0:	call   0x140005c68
   1400061b5:	mov    rcx,rbx
   1400061b8:	mov    rsi,rax
   1400061bb:	call   0x140005c0c
   1400061c0:	lea    rcx,[rip+0x142b9]        # 0x14001a480
   1400061c7:	call   0x140009da4
   1400061cc:	test   rax,rax
   1400061cf:	je     0x1400061e3
   1400061d1:	lea    rcx,[rip+0x15a70]        # 0x14001bc48
   1400061d8:	mov    r8,rsi
   1400061db:	mov    rdx,rdi
   1400061de:	call   0x140009c3c
   1400061e3:	mov    rax,rsi
   1400061e6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400061eb:	mov    rsi,QWORD PTR [rsp+0x38]
   1400061f0:	add    rsp,0x20
   1400061f4:	pop    rdi
   1400061f5:	ret    
   1400061f6:	int3   
   1400061f7:	int3   
   1400061f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400061fd:	push   rdi
   1400061fe:	sub    rsp,0x20
   140006202:	mov    rax,QWORD PTR [rip+0x1e747]        # 0x140024950
   140006209:	mov    ebx,edx
   14000620b:	mov    rdi,rcx
   14000620e:	test   rax,rax
   140006211:	jne    0x14000622b
   140006213:	lea    rcx,[rip+0x15a66]        # 0x14001bc80
   14000621a:	call   0x140005404
   14000621f:	mov    QWORD PTR [rip+0x1e72a],rax        # 0x140024950
   140006226:	test   rax,rax
   140006229:	je     0x140006232
   14000622b:	mov    edx,ebx
   14000622d:	mov    rcx,rdi
   140006230:	call   rax
   140006232:	mov    rbx,QWORD PTR [rsp+0x30]
   140006237:	add    rsp,0x20
   14000623b:	pop    rdi
   14000623c:	ret    
   14000623d:	int3   
   14000623e:	int3   
   14000623f:	int3   
   140006240:	rex push rbx
   140006242:	sub    rsp,0x20
   140006246:	mov    rax,QWORD PTR [rip+0x1e70b]        # 0x140024958
   14000624d:	mov    rbx,rcx
   140006250:	test   rax,rax
   140006253:	jne    0x140006273
   140006255:	lea    rcx,[rip+0x15a3c]        # 0x14001bc98
   14000625c:	call   0x140005404
   140006261:	mov    QWORD PTR [rip+0x1e6f0],rax        # 0x140024958
   140006268:	test   rax,rax
   14000626b:	jne    0x140006273
   14000626d:	add    rsp,0x20
   140006271:	pop    rbx
   140006272:	ret    
   140006273:	mov    rcx,rbx
   140006276:	add    rsp,0x20
   14000627a:	pop    rbx
   14000627b:	rex.W jmp rax
   14000627e:	int3   
   14000627f:	int3   
   140006280:	sub    rsp,0x28
   140006284:	mov    rax,QWORD PTR [rip+0x1e6d5]        # 0x140024960
   14000628b:	test   rax,rax
   14000628e:	jne    0x1400062a8
   140006290:	lea    rcx,[rip+0x15a11]        # 0x14001bca8
   140006297:	call   0x140005404
   14000629c:	mov    QWORD PTR [rip+0x1e6bd],rax        # 0x140024960
   1400062a3:	test   rax,rax
   1400062a6:	je     0x1400062aa
   1400062a8:	call   rax
   1400062aa:	add    rsp,0x28
   1400062ae:	ret    
   1400062af:	int3   
   1400062b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400062b5:	push   rdi
   1400062b6:	sub    rsp,0x20
   1400062ba:	mov    rax,QWORD PTR [rip+0x1e6af]        # 0x140024970
   1400062c1:	mov    rbx,rdx
   1400062c4:	mov    rdi,rcx
   1400062c7:	test   rax,rax
   1400062ca:	jne    0x1400062e4
   1400062cc:	lea    rcx,[rip+0x159e5]        # 0x14001bcb8
   1400062d3:	call   0x140005404
   1400062d8:	mov    QWORD PTR [rip+0x1e691],rax        # 0x140024970
   1400062df:	test   rax,rax
   1400062e2:	je     0x1400062ec
   1400062e4:	mov    rdx,rbx
   1400062e7:	mov    rcx,rdi
   1400062ea:	call   rax
   1400062ec:	mov    rbx,QWORD PTR [rsp+0x30]
   1400062f1:	add    rsp,0x20
   1400062f5:	pop    rdi
   1400062f6:	ret    
   1400062f7:	int3   
   1400062f8:	mov    rax,rsp
   1400062fb:	mov    QWORD PTR [rax+0x8],rbx
   1400062ff:	mov    QWORD PTR [rax+0x10],rbp
   140006303:	mov    QWORD PTR [rax+0x18],rsi
   140006307:	mov    QWORD PTR [rax+0x20],rdi
   14000630b:	push   r12
   14000630d:	sub    rsp,0x80
   140006314:	cmp    QWORD PTR [rdx+0x8],0xffffffffffffffff
   140006319:	mov    rbp,r8
   14000631c:	mov    rdi,rdx
   14000631f:	mov    esi,ecx
   140006321:	je     0x14000636d
   140006323:	cmp    QWORD PTR [rdx],0xffffffffffffffff
   140006327:	je     0x14000636d
   140006329:	mov    edx,DWORD PTR [rdx+0x10]
   14000632c:	xor    r8d,r8d
   14000632f:	call   0x140017714
   140006334:	test   eax,eax
   140006336:	js     0x14000636d
   140006338:	mov    rcx,QWORD PTR [rdi+0x8]
   14000633c:	inc    rcx
   14000633f:	call   0x14000b304
   140006344:	mov    rbx,rax
   140006347:	test   rax,rax
   14000634a:	je     0x14000636d
   14000634c:	mov    r12,QWORD PTR [rdi+0x8]
   140006350:	mov    rdx,rax
   140006353:	mov    ecx,esi
   140006355:	mov    r8d,r12d
   140006358:	call   0x140016a44
   14000635d:	movsxd rcx,eax
   140006360:	cmp    rcx,r12
   140006363:	je     0x14000638d
   140006365:	mov    rcx,rbx
   140006368:	call   0x14000b490
   14000636d:	xor    eax,eax
   14000636f:	lea    r11,[rsp+0x80]
   140006377:	mov    rbx,QWORD PTR [r11+0x10]
   14000637b:	mov    rbp,QWORD PTR [r11+0x18]
   14000637f:	mov    rsi,QWORD PTR [r11+0x20]
   140006383:	mov    rdi,QWORD PTR [r11+0x28]
   140006387:	mov    rsp,r11
   14000638a:	pop    r12
   14000638c:	ret    
   14000638d:	cmp    DWORD PTR [rdi+0x14],0x0
   140006391:	jne    0x1400063a8
   140006393:	mov    BYTE PTR [r12+rbx*1],0x0
   140006398:	test   rbp,rbp
   14000639b:	je     0x1400063a3
   14000639d:	mov    eax,DWORD PTR [rdi+0x8]
   1400063a0:	mov    DWORD PTR [rbp+0x0],eax
   1400063a3:	mov    rax,rbx
   1400063a6:	jmp    0x14000636f
   1400063a8:	cmp    DWORD PTR [rdi+0x14],0x8
   1400063ac:	jne    0x14000636d
   1400063ae:	mov    eax,DWORD PTR [rdi+0x8]
   1400063b1:	and    QWORD PTR [rsp+0x50],0x0
   1400063b7:	and    QWORD PTR [rsp+0x58],0x0
   1400063bd:	and    QWORD PTR [rsp+0x60],0x0
   1400063c3:	mov    r9d,0x58
   1400063c9:	lea    r8,[rip+0x15918]        # 0x14001bce8
   1400063d0:	lea    rcx,[rsp+0x20]
   1400063d5:	lea    edx,[r9-0x67]
   1400063d9:	mov    QWORD PTR [rsp+0x20],rbx
   1400063de:	mov    DWORD PTR [rsp+0x28],eax
   1400063e2:	call   0x1400071f8
   1400063e7:	test   eax,eax
   1400063e9:	js     0x140006365
   1400063ef:	mov    rcx,QWORD PTR [rdi]
   1400063f2:	inc    rcx
   1400063f5:	call   0x14000b304
   1400063fa:	mov    rsi,rax
   1400063fd:	test   rax,rax
   140006400:	je     0x140006365
   140006406:	mov    QWORD PTR [rsp+0x30],rax
   14000640b:	mov    eax,DWORD PTR [rdi]
   14000640d:	lea    rcx,[rsp+0x20]
   140006412:	mov    edx,0x1
   140006417:	mov    DWORD PTR [rsp+0x38],eax
   14000641b:	call   0x1400073e0
   140006420:	mov    rcx,rbx
   140006423:	test   eax,eax
   140006425:	jns    0x140006434
   140006427:	call   0x14000b490
   14000642c:	mov    rcx,rsi
   14000642f:	jmp    0x140006368
   140006434:	mov    rax,QWORD PTR [rdi]
   140006437:	mov    BYTE PTR [rsi+rax*1],0x0
   14000643b:	call   0x14000b490
   140006440:	lea    rcx,[rsp+0x20]
   140006445:	call   0x140008960
   14000644a:	test   eax,eax
   14000644c:	js     0x14000642c
   14000644e:	test   rbp,rbp
   140006451:	je     0x140006458
   140006453:	mov    eax,DWORD PTR [rdi]
   140006455:	mov    DWORD PTR [rbp+0x0],eax
   140006458:	mov    rax,rsi
   14000645b:	jmp    0x14000636f
   140006460:	mov    rax,rsp
   140006463:	mov    QWORD PTR [rax+0x8],rbx
   140006467:	mov    QWORD PTR [rax+0x10],rbp
   14000646b:	mov    QWORD PTR [rax+0x18],rsi
   14000646f:	mov    QWORD PTR [rax+0x20],rdi
   140006473:	push   r12
   140006475:	sub    rsp,0x20
   140006479:	mov    rbp,rdx
   14000647c:	mov    edx,0xffffffea
   140006481:	mov    ebx,ecx
   140006483:	lea    r8d,[rdx+0x18]
   140006487:	call   0x140017714
   14000648c:	mov    edi,eax
   14000648e:	test   eax,eax
   140006490:	js     0x1400065cb
   140006496:	mov    r8d,0x16
   14000649c:	mov    rdx,rbp
   14000649f:	mov    ecx,ebx
   1400064a1:	call   0x140016a44
   1400064a6:	test   eax,eax
   1400064a8:	js     0x1400065cb
   1400064ae:	movzx  eax,BYTE PTR [rbp+0x2]
   1400064b2:	movzx  ecx,BYTE PTR [rbp+0x3]
   1400064b6:	shl    ecx,0x8
   1400064b9:	or     ecx,eax
   1400064bb:	movzx  eax,BYTE PTR [rbp+0x1]
   1400064bf:	shl    ecx,0x8
   1400064c2:	or     ecx,eax
   1400064c4:	movzx  eax,BYTE PTR [rbp+0x0]
   1400064c8:	shl    ecx,0x8
   1400064cb:	or     ecx,eax
   1400064cd:	cmp    ecx,0x6054b50
   1400064d3:	jne    0x1400064dc
   1400064d5:	mov    eax,edi
   1400064d7:	jmp    0x1400065ce
   1400064dc:	xor    edx,edx
   1400064de:	mov    ecx,ebx
   1400064e0:	lea    r8d,[rdx+0x2]
   1400064e4:	call   0x140017714
   1400064e9:	mov    r12d,eax
   1400064ec:	test   eax,eax
   1400064ee:	js     0x1400065cb
   1400064f4:	mov    edi,0x10015
   1400064f9:	mov    r8d,0x2
   1400064ff:	mov    ecx,ebx
   140006501:	cmp    eax,edi
   140006503:	mov    esi,edi
   140006505:	cmovl  esi,eax
   140006508:	mov    edx,esi
   14000650a:	neg    edx
   14000650c:	call   0x140017714
   140006511:	test   eax,eax
   140006513:	js     0x1400065cb
   140006519:	mov    ecx,edi
   14000651b:	call   0x14000b304
   140006520:	mov    rdi,rax
   140006523:	test   rax,rax
   140006526:	je     0x1400065cb
   14000652c:	mov    r8d,esi
   14000652f:	mov    rdx,rax
   140006532:	mov    ecx,ebx
   140006534:	call   0x140016a44
   140006539:	test   eax,eax
   14000653b:	js     0x1400065c3
   140006541:	movsxd rsi,eax
   140006544:	add    eax,0xffffffea
   140006547:	movsxd rbx,eax
   14000654a:	add    rsi,rdi
   14000654d:	add    rbx,rdi
   140006550:	cmp    rbx,rdi
   140006553:	jb     0x1400065c3
   140006555:	cmp    BYTE PTR [rbx],0x50
   140006558:	jne    0x140006599
   14000655a:	movzx  eax,BYTE PTR [rbx+0x2]
   14000655e:	movzx  ecx,BYTE PTR [rbx+0x3]
   140006562:	shl    ecx,0x8
   140006565:	or     ecx,eax
   140006567:	movzx  eax,BYTE PTR [rbx+0x1]
   14000656b:	shl    ecx,0x8
   14000656e:	or     ecx,eax
   140006570:	shl    ecx,0x8
   140006573:	or     ecx,0x50
   140006576:	cmp    ecx,0x6054b50
   14000657c:	jne    0x140006599
   14000657e:	movzx  eax,BYTE PTR [rbx+0x15]
   140006582:	shl    eax,0x8
   140006585:	movsxd rcx,eax
   140006588:	movzx  eax,BYTE PTR [rbx+0x14]
   14000658c:	or     rcx,rax
   14000658f:	lea    rax,[rcx+rbx*1+0x16]
   140006594:	cmp    rax,rsi
   140006597:	je     0x14000659e
   140006599:	dec    rbx
   14000659c:	jmp    0x140006550
   14000659e:	mov    r8d,0x16
   1400065a4:	mov    rdx,rbx
   1400065a7:	mov    rcx,rbp
   1400065aa:	call   0x14000a170
   1400065af:	mov    rcx,rdi
   1400065b2:	call   0x14000b490
   1400065b7:	mov    r11d,r12d
   1400065ba:	sub    r11,rsi
   1400065bd:	lea    rax,[rbx+r11*1]
   1400065c1:	jmp    0x1400065ce
   1400065c3:	mov    rcx,rdi
   1400065c6:	call   0x14000b490
   1400065cb:	or     eax,0xffffffff
   1400065ce:	mov    rbx,QWORD PTR [rsp+0x30]
   1400065d3:	mov    rbp,QWORD PTR [rsp+0x38]
   1400065d8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400065dd:	mov    rdi,QWORD PTR [rsp+0x48]
   1400065e2:	add    rsp,0x20
   1400065e6:	pop    r12
   1400065e8:	ret    
   1400065e9:	int3   
   1400065ea:	int3   
   1400065eb:	int3   
   1400065ec:	mov    QWORD PTR [rsp+0x20],rbx
   1400065f1:	push   rbp
   1400065f2:	push   rsi
   1400065f3:	push   rdi
   1400065f4:	push   r12
   1400065f6:	push   r13
   1400065f8:	push   r14
   1400065fa:	push   r15
   1400065fc:	sub    rsp,0x50
   140006600:	mov    rax,QWORD PTR [rip+0x1cab9]        # 0x1400230c0
   140006607:	xor    rax,rsp
   14000660a:	mov    QWORD PTR [rsp+0x48],rax
   14000660f:	mov    r13d,ecx
   140006612:	mov    ecx,0x30032
   140006617:	mov    r15,r8
   14000661a:	mov    QWORD PTR [rsp+0x20],rdx
   14000661f:	call   0x14000b304
   140006624:	mov    rdi,rax
   140006627:	test   rax,rax
   14000662a:	jne    0x140006634
   14000662c:	or     eax,0xffffffff
   14000662f:	jmp    0x140006940
   140006634:	mov    rdx,rax
   140006637:	mov    ecx,r13d
   14000663a:	mov    rsi,rax
   14000663d:	call   0x140006460
   140006642:	or     ebp,0xffffffff
   140006645:	mov    r14d,eax
   140006648:	cmp    eax,ebp
   14000664a:	je     0x140006936
   140006650:	movzx  eax,BYTE PTR [rdi+0x12]
   140006654:	movzx  edx,BYTE PTR [rdi+0x13]
   140006658:	movzx  ecx,BYTE PTR [rdi+0xf]
   14000665c:	shl    ecx,0x8
   14000665f:	shl    edx,0x8
   140006662:	xor    r8d,r8d
   140006665:	or     edx,eax
   140006667:	movzx  eax,BYTE PTR [rdi+0x11]
   14000666b:	shl    edx,0x8
   14000666e:	or     edx,eax
   140006670:	movzx  eax,BYTE PTR [rdi+0x10]
   140006674:	shl    edx,0x8
   140006677:	or     edx,eax
   140006679:	movzx  eax,BYTE PTR [rdi+0xe]
   14000667d:	or     ecx,eax
   14000667f:	movzx  eax,BYTE PTR [rdi+0xd]
   140006683:	shl    ecx,0x8
   140006686:	or     ecx,eax
   140006688:	movzx  eax,BYTE PTR [rdi+0xc]
   14000668c:	shl    ecx,0x8
   14000668f:	or     ecx,eax
   140006691:	add    ecx,edx
   140006693:	sub    r14d,ecx
   140006696:	mov    ecx,r13d
   140006699:	add    edx,r14d
   14000669c:	call   0x140017714
   1400066a1:	test   eax,eax
   1400066a3:	js     0x140006936
   1400066a9:	mov    r8d,0x400
   1400066af:	mov    rdx,rdi
   1400066b2:	mov    ecx,r13d
   1400066b5:	call   0x140016a44
   1400066ba:	mov    r12d,eax
   1400066bd:	test   eax,eax
   1400066bf:	js     0x140006936
   1400066c5:	movzx  eax,BYTE PTR [rdi+0x2]
   1400066c9:	movzx  ecx,BYTE PTR [rdi+0x3]
   1400066cd:	shl    ecx,0x8
   1400066d0:	or     ecx,eax
   1400066d2:	movzx  eax,BYTE PTR [rdi+0x1]
   1400066d6:	shl    ecx,0x8
   1400066d9:	or     ecx,eax
   1400066db:	movzx  eax,BYTE PTR [rdi]
   1400066de:	shl    ecx,0x8
   1400066e1:	or     ecx,eax
   1400066e3:	cmp    ecx,0x2014b50
   1400066e9:	jne    0x140006936
   1400066ef:	cmp    r12d,0x2e
   1400066f3:	jge    0x140006726
   1400066f5:	movsxd rbx,r12d
   1400066f8:	mov    rdx,rsi
   1400066fb:	mov    rcx,rdi
   1400066fe:	mov    r8,rbx
   140006701:	call   0x14000a170
   140006706:	lea    rdx,[rbx+rdi*1]
   14000670a:	mov    r8d,0x400
   140006710:	mov    ecx,r13d
   140006713:	mov    rsi,rax
   140006716:	call   0x140016a44
   14000671b:	test   eax,eax
   14000671d:	jle    0x140006936
   140006723:	add    r12d,eax
   140006726:	movzx  eax,BYTE PTR [rsi+0x20]
   14000672a:	movzx  edx,BYTE PTR [rsi+0x21]
   14000672e:	movzx  ecx,BYTE PTR [rsi+0x1f]
   140006732:	shl    ecx,0x8
   140006735:	shl    edx,0x8
   140006738:	or     edx,eax
   14000673a:	movzx  eax,BYTE PTR [rsi+0x1e]
   14000673e:	or     ecx,eax
   140006740:	movzx  eax,BYTE PTR [rsi+0x1c]
   140006744:	add    edx,ecx
   140006746:	movzx  ecx,BYTE PTR [rsi+0x1d]
   14000674a:	shl    ecx,0x8
   14000674d:	or     ecx,eax
   14000674f:	lea    ebx,[rdx+rcx*1+0x2e]
   140006753:	lea    eax,[rbx+0x4]
   140006756:	cmp    r12d,eax
   140006759:	jge    0x1400067a0
   14000675b:	cmp    rsi,rdi
   14000675e:	je     0x140006771
   140006760:	movsxd r8,r12d
   140006763:	mov    rdx,rsi
   140006766:	mov    rcx,rdi
   140006769:	call   0x14000a170
   14000676e:	mov    rsi,rax
   140006771:	mov    eax,0x400
   140006776:	mov    r8d,ebx
   140006779:	movsxd rdx,r12d
   14000677c:	sub    r8d,r12d
   14000677f:	mov    ecx,r13d
   140006782:	add    r8d,0x4
   140006786:	cmp    r8d,eax
   140006789:	cmovl  r8d,eax
   14000678d:	add    rdx,rdi
   140006790:	call   0x140016a44
   140006795:	test   eax,eax
   140006797:	jle    0x140006936
   14000679d:	add    r12d,eax
   1400067a0:	mov    rcx,r15
   1400067a3:	call   0x140009fd0
   1400067a8:	movzx  ecx,BYTE PTR [rsi+0x1d]
   1400067ac:	shl    ecx,0x8
   1400067af:	movsxd rdx,ecx
   1400067b2:	movzx  ecx,BYTE PTR [rsi+0x1c]
   1400067b6:	or     rdx,rcx
   1400067b9:	cmp    rdx,rax
   1400067bc:	jne    0x1400067d9
   1400067be:	mov    rcx,r15
   1400067c1:	call   0x140009fd0
   1400067c6:	lea    rcx,[rsi+0x2e]
   1400067ca:	mov    rdx,r15
   1400067cd:	mov    r8,rax
   1400067d0:	call   0x14000c5c0
   1400067d5:	test   eax,eax
   1400067d7:	je     0x140006800
   1400067d9:	movsxd rax,ebx
   1400067dc:	sub    r12d,ebx
   1400067df:	add    rsi,rax
   1400067e2:	movzx  eax,BYTE PTR [rsi+0x2]
   1400067e6:	movzx  ecx,BYTE PTR [rsi+0x3]
   1400067ea:	shl    ecx,0x8
   1400067ed:	or     ecx,eax
   1400067ef:	movzx  eax,BYTE PTR [rsi+0x1]
   1400067f3:	shl    ecx,0x8
   1400067f6:	or     ecx,eax
   1400067f8:	movzx  eax,BYTE PTR [rsi]
   1400067fb:	jmp    0x1400066de
   140006800:	movzx  eax,BYTE PTR [rsi+0x2c]
   140006804:	movzx  edx,BYTE PTR [rsi+0x2d]
   140006808:	xor    r8d,r8d
   14000680b:	shl    edx,0x8
   14000680e:	mov    ecx,r13d
   140006811:	or     edx,eax
   140006813:	movzx  eax,BYTE PTR [rsi+0x2b]
   140006817:	shl    edx,0x8
   14000681a:	or     edx,eax
   14000681c:	movzx  eax,BYTE PTR [rsi+0x2a]
   140006820:	shl    edx,0x8
   140006823:	or     edx,eax
   140006825:	add    edx,r14d
   140006828:	call   0x140017714
   14000682d:	test   eax,eax
   14000682f:	js     0x140006936
   140006835:	lea    rdx,[rsp+0x28]
   14000683a:	mov    r8d,0x1e
   140006840:	mov    ecx,r13d
   140006843:	call   0x140016a44
   140006848:	test   eax,eax
   14000684a:	js     0x140006936
   140006850:	movzx  eax,BYTE PTR [rsp+0x2a]
   140006855:	movzx  ecx,BYTE PTR [rsp+0x2b]
   14000685a:	shl    ecx,0x8
   14000685d:	or     ecx,eax
   14000685f:	movzx  eax,BYTE PTR [rsp+0x29]
   140006864:	shl    ecx,0x8
   140006867:	or     ecx,eax
   140006869:	movzx  eax,BYTE PTR [rsp+0x28]
   14000686e:	shl    ecx,0x8
   140006871:	or     ecx,eax
   140006873:	cmp    ecx,0x4034b50
   140006879:	jne    0x140006936
   14000687f:	movzx  eax,BYTE PTR [rsi+0x1a]
   140006883:	movzx  ecx,BYTE PTR [rsi+0x1b]
   140006887:	mov    r9,QWORD PTR [rsp+0x20]
   14000688c:	movzx  edx,BYTE PTR [rsp+0x45]
   140006891:	shl    ecx,0x8
   140006894:	or     ecx,eax
   140006896:	movzx  eax,BYTE PTR [rsi+0x19]
   14000689a:	shl    edx,0x8
   14000689d:	shl    ecx,0x8
   1400068a0:	or     ecx,eax
   1400068a2:	movzx  eax,BYTE PTR [rsi+0x18]
   1400068a6:	shl    ecx,0x8
   1400068a9:	movsxd rcx,ecx
   1400068ac:	or     rcx,rax
   1400068af:	mov    QWORD PTR [r9],rcx
   1400068b2:	movzx  eax,BYTE PTR [rsi+0x16]
   1400068b6:	movzx  ecx,BYTE PTR [rsi+0x17]
   1400068ba:	shl    ecx,0x8
   1400068bd:	or     ecx,eax
   1400068bf:	movzx  eax,BYTE PTR [rsi+0x15]
   1400068c3:	shl    ecx,0x8
   1400068c6:	or     ecx,eax
   1400068c8:	movzx  eax,BYTE PTR [rsi+0x14]
   1400068cc:	shl    ecx,0x8
   1400068cf:	movsxd rcx,ecx
   1400068d2:	or     rcx,rax
   1400068d5:	mov    QWORD PTR [r9+0x8],rcx
   1400068d9:	movzx  eax,BYTE PTR [rsi+0x2c]
   1400068dd:	movzx  r8d,BYTE PTR [rsi+0x2d]
   1400068e2:	movzx  ecx,BYTE PTR [rsp+0x43]
   1400068e7:	shl    r8d,0x8
   1400068eb:	or     r8d,eax
   1400068ee:	movzx  eax,BYTE PTR [rsi+0x2b]
   1400068f2:	shl    ecx,0x8
   1400068f5:	shl    r8d,0x8
   1400068f9:	or     r8d,eax
   1400068fc:	movzx  eax,BYTE PTR [rsi+0x2a]
   140006900:	shl    r8d,0x8
   140006904:	or     r8d,eax
   140006907:	movzx  eax,BYTE PTR [rsp+0x44]
   14000690c:	or     edx,eax
   14000690e:	movzx  eax,BYTE PTR [rsp+0x42]
   140006913:	or     ecx,eax
   140006915:	add    edx,r14d
   140006918:	add    edx,r8d
   14000691b:	lea    eax,[rcx+rdx*1+0x1e]
   14000691f:	mov    DWORD PTR [r9+0x10],eax
   140006923:	movzx  ecx,BYTE PTR [rsi+0xb]
   140006927:	movzx  eax,BYTE PTR [rsi+0xa]
   14000692b:	shl    ecx,0x8
   14000692e:	or     ecx,eax
   140006930:	xor    ebp,ebp
   140006932:	mov    DWORD PTR [r9+0x14],ecx
   140006936:	mov    rcx,rdi
   140006939:	call   0x14000b490
   14000693e:	mov    eax,ebp
   140006940:	mov    rcx,QWORD PTR [rsp+0x48]
   140006945:	xor    rcx,rsp
   140006948:	call   0x14000a850
   14000694d:	mov    rbx,QWORD PTR [rsp+0xa8]
   140006955:	add    rsp,0x50
   140006959:	pop    r15
   14000695b:	pop    r14
   14000695d:	pop    r13
   14000695f:	pop    r12
   140006961:	pop    rdi
   140006962:	pop    rsi
   140006963:	pop    rbp
   140006964:	ret    
   140006965:	int3   
   140006966:	int3   
   140006967:	int3   
   140006968:	mov    QWORD PTR [rsp+0x8],rbx
   14000696d:	mov    QWORD PTR [rsp+0x10],rbp
   140006972:	mov    QWORD PTR [rsp+0x18],rsi
   140006977:	push   rdi
   140006978:	sub    rsp,0x20
   14000697c:	mov    rdi,rcx
   14000697f:	mov    rcx,QWORD PTR [rcx]
   140006982:	mov    rsi,r8
   140006985:	mov    al,BYTE PTR [rcx]
   140006987:	mov    rbp,rdx
   14000698a:	test   al,al
   14000698c:	je     0x140006a4f
   140006992:	cmp    al,0xa
   140006994:	je     0x140006a4f
   14000699a:	cmp    al,0xd
   14000699c:	je     0x140006a4f
   1400069a2:	lea    rdx,[rip+0x15347]        # 0x14001bcf0
   1400069a9:	call   0x14000c688
   1400069ae:	mov    rbx,rax
   1400069b1:	test   rax,rax
   1400069b4:	jne    0x1400069fa
   1400069b6:	mov    rcx,QWORD PTR [rdi]
   1400069b9:	xor    edx,edx
   1400069bb:	call   0x14000c07c
   1400069c0:	mov    rbx,rax
   1400069c3:	mov    rcx,QWORD PTR [rdi]
   1400069c6:	mov    edx,0x3a
   1400069cb:	call   0x14000c07c
   1400069d0:	test   rax,rax
   1400069d3:	je     0x140006a4a
   1400069d5:	mov    BYTE PTR [rax],0x0
   1400069d8:	cmp    BYTE PTR [rax+0x1],0x20
   1400069dc:	jne    0x140006a4a
   1400069de:	mov    BYTE PTR [rax+0x1],0x0
   1400069e2:	mov    rcx,QWORD PTR [rdi]
   1400069e5:	mov    QWORD PTR [rbp+0x0],rcx
   1400069e9:	lea    rcx,[rax+0x2]
   1400069ed:	mov    eax,0x1
   1400069f2:	mov    QWORD PTR [rsi],rcx
   1400069f5:	mov    QWORD PTR [rdi],rbx
   1400069f8:	jmp    0x140006a51
   1400069fa:	cmp    BYTE PTR [rax],0xd
   1400069fd:	mov    rcx,rax
   140006a00:	jne    0x140006a3a
   140006a02:	inc    rax
   140006a05:	jmp    0x140006a2f
   140006a07:	mov    al,BYTE PTR [rbx]
   140006a09:	cmp    al,0xd
   140006a0b:	je     0x140006a1e
   140006a0d:	test   al,al
   140006a0f:	je     0x140006a4a
   140006a11:	mov    BYTE PTR [rcx],al
   140006a13:	inc    rcx
   140006a16:	inc    rbx
   140006a19:	cmp    BYTE PTR [rbx],0xa
   140006a1c:	jne    0x140006a07
   140006a1e:	cmp    BYTE PTR [rbx],0x0
   140006a21:	je     0x140006a4a
   140006a23:	mov    BYTE PTR [rcx],0x0
   140006a26:	cmp    BYTE PTR [rbx],0xd
   140006a29:	jne    0x140006a3a
   140006a2b:	lea    rax,[rbx+0x1]
   140006a2f:	cmp    BYTE PTR [rax],0xa
   140006a32:	jne    0x140006a3a
   140006a34:	mov    BYTE PTR [rbx],0x0
   140006a37:	mov    rbx,rax
   140006a3a:	mov    BYTE PTR [rbx],0x0
   140006a3d:	inc    rbx
   140006a40:	cmp    BYTE PTR [rbx],0x20
   140006a43:	je     0x140006a16
   140006a45:	jmp    0x1400069c3
   140006a4a:	or     eax,0xffffffff
   140006a4d:	jmp    0x140006a51
   140006a4f:	xor    eax,eax
   140006a51:	mov    rbx,QWORD PTR [rsp+0x30]
   140006a56:	mov    rbp,QWORD PTR [rsp+0x38]
   140006a5b:	mov    rsi,QWORD PTR [rsp+0x40]
   140006a60:	add    rsp,0x20
   140006a64:	pop    rdi
   140006a65:	ret    
   140006a66:	int3   
   140006a67:	int3   
   140006a68:	mov    QWORD PTR [rsp+0x8],rbx
   140006a6d:	push   rbp
   140006a6e:	push   rsi
   140006a6f:	push   rdi
   140006a70:	mov    rbp,rsp
   140006a73:	sub    rsp,0x40
   140006a77:	mov    rbx,rdx
   140006a7a:	mov    edx,0x8000
   140006a7f:	call   0x14001300c
   140006a84:	mov    edi,eax
   140006a86:	or     eax,0xffffffff
   140006a89:	cmp    edi,eax
   140006a8b:	je     0x140006bc2
   140006a91:	mov    r8,QWORD PTR [rip+0x1c608]        # 0x1400230a0
   140006a98:	and    QWORD PTR [rbx],0x0
   140006a9c:	and    QWORD PTR [rbx+0x8],0x0
   140006aa1:	and    QWORD PTR [rbx+0x10],0x0
   140006aa6:	and    QWORD PTR [rbx+0x20],0x0
   140006aab:	lea    rdx,[rbp-0x18]
   140006aaf:	mov    ecx,edi
   140006ab1:	mov    BYTE PTR [rbx+0x18],0x0
   140006ab5:	call   0x1400065ec
   140006aba:	mov    ecx,edi
   140006abc:	test   eax,eax
   140006abe:	je     0x140006acf
   140006ac0:	call   0x140010ecc
   140006ac5:	mov    eax,0xfffffffe
   140006aca:	jmp    0x140006bc2
   140006acf:	lea    rdx,[rbp-0x18]
   140006ad3:	xor    r8d,r8d
   140006ad6:	call   0x1400062f8
   140006adb:	mov    QWORD PTR [rip+0x1de96],rax        # 0x140024978
   140006ae2:	test   rax,rax
   140006ae5:	jne    0x140006aeb
   140006ae7:	mov    ecx,edi
   140006ae9:	jmp    0x140006ac0
   140006aeb:	mov    QWORD PTR [rbp-0x20],rax
   140006aef:	jmp    0x140006b99
   140006af4:	mov    rsi,QWORD PTR [rbp+0x38]
   140006af8:	lea    rdx,[rip+0x15249]        # 0x14001bd48
   140006aff:	mov    rcx,rsi
   140006b02:	call   0x140019750
   140006b07:	test   eax,eax
   140006b09:	jne    0x140006b17
   140006b0b:	mov    rax,QWORD PTR [rbp+0x30]
   140006b0f:	mov    QWORD PTR [rbx],rax
   140006b12:	jmp    0x140006b99
   140006b17:	lea    rdx,[rip+0x1521a]        # 0x14001bd38
   140006b1e:	mov    rcx,rsi
   140006b21:	call   0x140019750
   140006b26:	test   eax,eax
   140006b28:	jne    0x140006b34
   140006b2a:	mov    rax,QWORD PTR [rbp+0x30]
   140006b2e:	mov    QWORD PTR [rbx+0x8],rax
   140006b32:	jmp    0x140006b99
   140006b34:	lea    rdx,[rip+0x151ed]        # 0x14001bd28
   140006b3b:	mov    rcx,rsi
   140006b3e:	call   0x140019750
   140006b43:	test   eax,eax
   140006b45:	jne    0x140006b51
   140006b47:	mov    rax,QWORD PTR [rbp+0x30]
   140006b4b:	mov    QWORD PTR [rbx+0x10],rax
   140006b4f:	jmp    0x140006b99
   140006b51:	lea    rdx,[rip+0x151b8]        # 0x14001bd10
   140006b58:	mov    rcx,rsi
   140006b5b:	call   0x140019750
   140006b60:	test   eax,eax
   140006b62:	jne    0x140006b7e
   140006b64:	mov    rcx,QWORD PTR [rbp+0x30]
   140006b68:	lea    rdx,[rip+0x1424d]        # 0x14001adbc
   140006b6f:	call   0x140019750
   140006b74:	test   eax,eax
   140006b76:	jne    0x140006b99
   140006b78:	mov    BYTE PTR [rbx+0x18],0x1
   140006b7c:	jmp    0x140006b99
   140006b7e:	lea    rdx,[rip+0x15173]        # 0x14001bcf8
   140006b85:	mov    rcx,rsi
   140006b88:	call   0x140019750
   140006b8d:	test   eax,eax
   140006b8f:	jne    0x140006b99
   140006b91:	mov    rax,QWORD PTR [rbp+0x30]
   140006b95:	mov    QWORD PTR [rbx+0x20],rax
   140006b99:	lea    r8,[rbp+0x30]
   140006b9d:	lea    rdx,[rbp+0x38]
   140006ba1:	lea    rcx,[rbp-0x20]
   140006ba5:	call   0x140006968
   140006baa:	mov    esi,eax
   140006bac:	test   eax,eax
   140006bae:	jg     0x140006af4
   140006bb4:	mov    ecx,edi
   140006bb6:	call   0x140010ecc
   140006bbb:	neg    esi
   140006bbd:	sbb    eax,eax
   140006bbf:	and    eax,0xfffffffe
   140006bc2:	mov    rbx,QWORD PTR [rsp+0x60]
   140006bc7:	add    rsp,0x40
   140006bcb:	pop    rdi
   140006bcc:	pop    rsi
   140006bcd:	pop    rbp
   140006bce:	ret    
   140006bcf:	int3   
   140006bd0:	mov    QWORD PTR [rsp+0x8],rbx
   140006bd5:	mov    QWORD PTR [rsp+0x10],rbp
   140006bda:	mov    QWORD PTR [rsp+0x18],rsi
   140006bdf:	push   rdi
   140006be0:	sub    rsp,0x40
   140006be4:	mov    rbp,rdx
   140006be7:	mov    edx,0x8000
   140006bec:	mov    rsi,r8
   140006bef:	xor    edi,edi
   140006bf1:	call   0x14001300c
   140006bf6:	mov    ebx,eax
   140006bf8:	cmp    eax,0xffffffff
   140006bfb:	jne    0x140006c01
   140006bfd:	xor    eax,eax
   140006bff:	jmp    0x140006c30
   140006c01:	lea    rdx,[rsp+0x20]
   140006c06:	mov    r8,rbp
   140006c09:	mov    ecx,eax
   140006c0b:	call   0x1400065ec
   140006c10:	test   eax,eax
   140006c12:	jne    0x140006c26
   140006c14:	lea    rdx,[rsp+0x20]
   140006c19:	mov    r8,rsi
   140006c1c:	mov    ecx,ebx
   140006c1e:	call   0x1400062f8
   140006c23:	mov    rdi,rax
   140006c26:	mov    ecx,ebx
   140006c28:	call   0x140010ecc
   140006c2d:	mov    rax,rdi
   140006c30:	mov    rbx,QWORD PTR [rsp+0x50]
   140006c35:	mov    rbp,QWORD PTR [rsp+0x58]
   140006c3a:	mov    rsi,QWORD PTR [rsp+0x60]
   140006c3f:	add    rsp,0x40
   140006c43:	pop    rdi
   140006c44:	ret    
   140006c45:	int3   
   140006c46:	int3   
   140006c47:	int3   
   140006c48:	sub    rsp,0x28
   140006c4c:	mov    rcx,QWORD PTR [rip+0x1dd25]        # 0x140024978
   140006c53:	test   rcx,rcx
   140006c56:	je     0x140006c5d
   140006c58:	call   0x14000b490
   140006c5d:	add    rsp,0x28
   140006c61:	ret    
   140006c62:	int3   
   140006c63:	int3   
   140006c64:	mov    QWORD PTR [rsp+0x8],rbx
   140006c69:	mov    QWORD PTR [rsp+0x10],rsi
   140006c6e:	push   rdi
   140006c6f:	sub    rsp,0x20
   140006c73:	mov    al,BYTE PTR [rcx]
   140006c75:	mov    rsi,rdx
   140006c78:	mov    rbx,rcx
   140006c7b:	xor    edi,edi
   140006c7d:	jmp    0x140006ca9
   140006c7f:	movsx  ecx,al
   140006c82:	call   0x14000c7c8
   140006c87:	test   eax,eax
   140006c89:	je     0x140006cc4
   140006c8b:	movsx  eax,BYTE PTR [rbx]
   140006c8e:	lea    rcx,[rdi+rdi*4]
   140006c92:	inc    rbx
   140006c95:	sub    eax,0x30
   140006c98:	cdqe   
   140006c9a:	lea    rdi,[rax+rcx*2]
   140006c9e:	cmp    rdi,0x7fffffff
   140006ca5:	jg     0x140006cc4
   140006ca7:	mov    al,BYTE PTR [rbx]
   140006ca9:	test   al,al
   140006cab:	jne    0x140006c7f
   140006cad:	mov    DWORD PTR [rsi],edi
   140006caf:	mov    eax,0x1
   140006cb4:	mov    rbx,QWORD PTR [rsp+0x30]
   140006cb9:	mov    rsi,QWORD PTR [rsp+0x38]
   140006cbe:	add    rsp,0x20
   140006cc2:	pop    rdi
   140006cc3:	ret    
   140006cc4:	xor    eax,eax
   140006cc6:	jmp    0x140006cb4
   140006cc8:	mov    QWORD PTR [rsp+0x8],rbx
   140006ccd:	push   rdi
   140006cce:	sub    rsp,0x20
   140006cd2:	mov    rbx,rdx
   140006cd5:	lea    rdx,[rsp+0x40]
   140006cda:	mov    rdi,rcx
   140006cdd:	call   0x140006c64
   140006ce2:	test   eax,eax
   140006ce4:	je     0x140006d01
   140006ce6:	lea    rdx,[rsp+0x48]
   140006ceb:	mov    rcx,rbx
   140006cee:	call   0x140006c64
   140006cf3:	test   eax,eax
   140006cf5:	je     0x140006d01
   140006cf7:	mov    eax,DWORD PTR [rsp+0x40]
   140006cfb:	sub    eax,DWORD PTR [rsp+0x48]
   140006cff:	jmp    0x140006d0c
   140006d01:	mov    rdx,rbx
   140006d04:	mov    rcx,rdi
   140006d07:	call   0x14000a880
   140006d0c:	mov    rbx,QWORD PTR [rsp+0x30]
   140006d11:	add    rsp,0x20
   140006d15:	pop    rdi
   140006d16:	ret    
   140006d17:	int3   
   140006d18:	mov    rax,rsp
   140006d1b:	mov    QWORD PTR [rax+0x8],rbx
   140006d1f:	mov    QWORD PTR [rax+0x10],rbp
   140006d23:	mov    QWORD PTR [rax+0x18],rsi
   140006d27:	mov    QWORD PTR [rax+0x20],rdi
   140006d2b:	push   r12
   140006d2d:	push   r13
   140006d2f:	push   r14
   140006d31:	sub    rsp,0x20
   140006d35:	mov    rbx,rdx
   140006d38:	call   0x140004058
   140006d3d:	mov    rcx,rbx
   140006d40:	mov    rdi,rax
   140006d43:	call   0x140004058
   140006d48:	xor    ebp,ebp
   140006d4a:	mov    r13,rdi
   140006d4d:	xor    esi,esi
   140006d4f:	mov    rbx,rax
   140006d52:	mov    r14,rax
   140006d55:	test   rdi,rdi
   140006d58:	je     0x140006d74
   140006d5a:	lea    rdx,[rip+0x14fff]        # 0x14001bd60
   140006d61:	mov    rcx,rdi
   140006d64:	call   0x14000c688
   140006d69:	mov    rbp,rax
   140006d6c:	test   rax,rax
   140006d6f:	je     0x140006d74
   140006d71:	mov    BYTE PTR [rax],0x0
   140006d74:	test   rbx,rbx
   140006d77:	je     0x140006d93
   140006d79:	lea    rdx,[rip+0x14fe0]        # 0x14001bd60
   140006d80:	mov    rcx,rbx
   140006d83:	call   0x14000c688
   140006d88:	mov    rsi,rax
   140006d8b:	test   rax,rax
   140006d8e:	je     0x140006d93
   140006d90:	mov    BYTE PTR [rax],0x0
   140006d93:	mov    rdx,rbx
   140006d96:	mov    rcx,rdi
   140006d99:	call   0x140006cc8
   140006d9e:	mov    r12d,eax
   140006da1:	test   rbp,rbp
   140006da4:	je     0x140006dac
   140006da6:	lea    rdi,[rbp+0x1]
   140006daa:	jmp    0x140006dae
   140006dac:	xor    edi,edi
   140006dae:	test   rsi,rsi
   140006db1:	je     0x140006db9
   140006db3:	lea    rbx,[rsi+0x1]
   140006db7:	jmp    0x140006dbb
   140006db9:	xor    ebx,ebx
   140006dbb:	test   eax,eax
   140006dbd:	jne    0x140006dc9
   140006dbf:	test   rdi,rdi
   140006dc2:	je     0x140006dc9
   140006dc4:	test   rbx,rbx
   140006dc7:	jne    0x140006d55
   140006dc9:	mov    rcx,r13
   140006dcc:	call   0x140004084
   140006dd1:	mov    rcx,r14
   140006dd4:	call   0x140004084
   140006dd9:	mov    rbx,QWORD PTR [rsp+0x40]
   140006dde:	mov    rbp,QWORD PTR [rsp+0x48]
   140006de3:	mov    rsi,QWORD PTR [rsp+0x50]
   140006de8:	mov    rdi,QWORD PTR [rsp+0x58]
   140006ded:	mov    eax,r12d
   140006df0:	add    rsp,0x20
   140006df4:	pop    r14
   140006df6:	pop    r13
   140006df8:	pop    r12
   140006dfa:	ret    
   140006dfb:	int3   
   140006dfc:	mov    rax,rsp
   140006dff:	mov    QWORD PTR [rax+0x8],rbx
   140006e03:	mov    QWORD PTR [rax+0x10],rbp
   140006e07:	mov    QWORD PTR [rax+0x18],rsi
   140006e0b:	mov    QWORD PTR [rax+0x20],rdi
   140006e0f:	push   r12
   140006e11:	push   r13
   140006e13:	push   r14
   140006e15:	sub    rsp,0x20
   140006e19:	mov    rbx,rdx
   140006e1c:	call   0x140004058
   140006e21:	mov    rcx,rbx
   140006e24:	mov    rdi,rax
   140006e27:	call   0x140004058
   140006e2c:	xor    ebp,ebp
   140006e2e:	mov    r13,rdi
   140006e31:	xor    r12d,r12d
   140006e34:	mov    rbx,rax
   140006e37:	mov    r14,rax
   140006e3a:	test   rdi,rdi
   140006e3d:	je     0x140006e59
   140006e3f:	mov    rdx,QWORD PTR [rip+0x1c262]        # 0x1400230a8
   140006e46:	mov    rcx,rdi
   140006e49:	call   0x14000c688
   140006e4e:	mov    rbp,rax
   140006e51:	test   rax,rax
   140006e54:	je     0x140006e59
   140006e56:	mov    BYTE PTR [rax],0x0
   140006e59:	test   rbx,rbx
   140006e5c:	je     0x140006e78
   140006e5e:	mov    rdx,QWORD PTR [rip+0x1c243]        # 0x1400230a8
   140006e65:	mov    rcx,rbx
   140006e68:	call   0x14000c688
   140006e6d:	mov    r12,rax
   140006e70:	test   rax,rax
   140006e73:	je     0x140006e78
   140006e75:	mov    BYTE PTR [rax],0x0
   140006e78:	test   rdi,rdi
   140006e7b:	je     0x140006e8b
   140006e7d:	test   rbx,rbx
   140006e80:	jne    0x140006e9c
   140006e82:	mov    rdx,QWORD PTR [rip+0x1c227]        # 0x1400230b0
   140006e89:	jmp    0x140006e9f
   140006e8b:	test   rbx,rbx
   140006e8e:	je     0x140006e9c
   140006e90:	mov    rcx,QWORD PTR [rip+0x1c219]        # 0x1400230b0
   140006e97:	mov    rdx,rbx
   140006e9a:	jmp    0x140006ea2
   140006e9c:	mov    rdx,rbx
   140006e9f:	mov    rcx,rdi
   140006ea2:	call   0x140006cc8
   140006ea7:	mov    esi,eax
   140006ea9:	test   rbp,rbp
   140006eac:	je     0x140006eb4
   140006eae:	lea    rdi,[rbp+0x1]
   140006eb2:	jmp    0x140006eb6
   140006eb4:	xor    edi,edi
   140006eb6:	test   r12,r12
   140006eb9:	je     0x140006ec2
   140006ebb:	lea    rbx,[r12+0x1]
   140006ec0:	jmp    0x140006ec4
   140006ec2:	xor    ebx,ebx
   140006ec4:	test   esi,esi
   140006ec6:	jne    0x140006eda
   140006ec8:	test   rdi,rdi
   140006ecb:	jne    0x140006e3f
   140006ed1:	test   rbx,rbx
   140006ed4:	jne    0x140006e3a
   140006eda:	mov    rcx,r13
   140006edd:	call   0x140004084
   140006ee2:	mov    rcx,r14
   140006ee5:	call   0x140004084
   140006eea:	mov    rbx,QWORD PTR [rsp+0x40]
   140006eef:	mov    rbp,QWORD PTR [rsp+0x48]
   140006ef4:	mov    rdi,QWORD PTR [rsp+0x58]
   140006ef9:	mov    eax,esi
   140006efb:	mov    rsi,QWORD PTR [rsp+0x50]
   140006f00:	add    rsp,0x20
   140006f04:	pop    r14
   140006f06:	pop    r13
   140006f08:	pop    r12
   140006f0a:	ret    
   140006f0b:	int3   
   140006f0c:	mov    QWORD PTR [rsp+0x8],rbx
   140006f11:	mov    QWORD PTR [rsp+0x10],rbp
   140006f16:	mov    QWORD PTR [rsp+0x18],rsi
   140006f1b:	push   rdi
   140006f1c:	push   r12
   140006f1e:	push   r13
   140006f20:	sub    rsp,0x20
   140006f24:	mov    r12,rcx
   140006f27:	mov    rcx,rdx
   140006f2a:	call   0x140004058
   140006f2f:	xor    ebx,ebx
   140006f31:	mov    rdi,rax
   140006f34:	mov    r13,rax
   140006f37:	mov    edx,0x20
   140006f3c:	mov    rcx,rdi
   140006f3f:	call   0x14000c07c
   140006f44:	mov    rbp,rax
   140006f47:	test   rax,rax
   140006f4a:	je     0x140006f4e
   140006f4c:	mov    BYTE PTR [rax],bl
   140006f4e:	mov    edx,0x26
   140006f53:	mov    rcx,rdi
   140006f56:	call   0x14000c07c
   140006f5b:	mov    rsi,rax
   140006f5e:	test   rax,rax
   140006f61:	je     0x140006f65
   140006f63:	mov    BYTE PTR [rax],bl
   140006f65:	mov    rcx,rdi
   140006f68:	call   0x140009fd0
   140006f6d:	mov    rcx,r12
   140006f70:	cmp    BYTE PTR [rax+rdi*1-0x1],0x2a
   140006f75:	jne    0x140006f9e
   140006f77:	mov    edx,0x2d
   140006f7c:	mov    BYTE PTR [rax+rdi*1-0x1],bl
   140006f80:	call   0x14000c07c
   140006f85:	mov    rdx,rdi
   140006f88:	mov    rcx,r12
   140006f8b:	test   rax,rax
   140006f8e:	je     0x140006f97
   140006f90:	call   0x14000a880
   140006f95:	jmp    0x140006fd4
   140006f97:	call   0x140006d18
   140006f9c:	jmp    0x140006fd4
   140006f9e:	cmp    BYTE PTR [rax+rdi*1-0x1],0x2b
   140006fa3:	jne    0x140006fcc
   140006fa5:	mov    edx,0x2d
   140006faa:	mov    BYTE PTR [rax+rdi*1-0x1],bl
   140006fae:	call   0x14000c07c
   140006fb3:	mov    rdx,rdi
   140006fb6:	mov    rcx,r12
   140006fb9:	test   rax,rax
   140006fbc:	jne    0x140006f90
   140006fbe:	call   0x140006dfc
   140006fc3:	mov    ecx,ebx
   140006fc5:	test   eax,eax
   140006fc7:	setns  cl
   140006fca:	jmp    0x140006fdb
   140006fcc:	mov    rdx,rdi
   140006fcf:	call   0x140006dfc
   140006fd4:	test   eax,eax
   140006fd6:	mov    ecx,ebx
   140006fd8:	sete   cl
   140006fdb:	test   ecx,ecx
   140006fdd:	je     0x140006fed
   140006fdf:	test   rsi,rsi
   140006fe2:	je     0x140006ffb
   140006fe4:	lea    rdi,[rsi+0x1]
   140006fe8:	jmp    0x140006f4e
   140006fed:	test   rbp,rbp
   140006ff0:	je     0x140007000
   140006ff2:	lea    rdi,[rbp+0x1]
   140006ff6:	jmp    0x140006f37
   140006ffb:	mov    ebx,0x1
   140007000:	mov    rcx,r13
   140007003:	call   0x140004084
   140007008:	mov    rbp,QWORD PTR [rsp+0x48]
   14000700d:	mov    rsi,QWORD PTR [rsp+0x50]
   140007012:	mov    eax,ebx
   140007014:	mov    rbx,QWORD PTR [rsp+0x40]
   140007019:	add    rsp,0x20
   14000701d:	pop    r13
   14000701f:	pop    r12
   140007021:	pop    rdi
   140007022:	ret    
   140007023:	int3   
   140007024:	mov    rax,rsp
   140007027:	mov    QWORD PTR [rax+0x8],rbx
   14000702b:	mov    QWORD PTR [rax+0x10],rbp
   14000702f:	mov    QWORD PTR [rax+0x18],rsi
   140007033:	mov    QWORD PTR [rax+0x20],rdi
   140007037:	push   r12
   140007039:	sub    rsp,0x20
   14000703d:	mov    rbx,rcx
   140007040:	test   rcx,rcx
   140007043:	je     0x14000711f
   140007049:	call   0x140009fd0
   14000704e:	test   rax,rax
   140007051:	je     0x14000711f
   140007057:	mov    rcx,rbx
   14000705a:	call   0x140004058
   14000705f:	mov    rbx,rax
   140007062:	mov    r12,rax
   140007065:	mov    edx,0x20
   14000706a:	mov    rcx,rbx
   14000706d:	call   0x14000c07c
   140007072:	mov    rbp,rax
   140007075:	test   rax,rax
   140007078:	je     0x14000707d
   14000707a:	mov    BYTE PTR [rax],0x0
   14000707d:	test   rbx,rbx
   140007080:	je     0x140007117
   140007086:	mov    rcx,rbx
   140007089:	call   0x140009fd0
   14000708e:	test   rax,rax
   140007091:	je     0x140007117
   140007097:	mov    edx,0x26
   14000709c:	mov    rcx,rbx
   14000709f:	call   0x14000c07c
   1400070a4:	mov    rsi,rax
   1400070a7:	test   rax,rax
   1400070aa:	je     0x1400070af
   1400070ac:	mov    BYTE PTR [rax],0x0
   1400070af:	test   rbx,rbx
   1400070b2:	je     0x140007117
   1400070b4:	mov    rcx,rbx
   1400070b7:	call   0x140009fd0
   1400070bc:	test   rax,rax
   1400070bf:	je     0x140007117
   1400070c1:	lea    rdi,[rax+rbx*1-0x1]
   1400070c6:	cmp    BYTE PTR [rdi],0x2a
   1400070c9:	je     0x1400070d0
   1400070cb:	cmp    BYTE PTR [rdi],0x2b
   1400070ce:	jne    0x1400070db
   1400070d0:	dec    rax
   1400070d3:	je     0x140007117
   1400070d5:	mov    BYTE PTR [rdi],0x0
   1400070d8:	dec    rdi
   1400070db:	lea    rdx,[rip+0x14c82]        # 0x14001bd64
   1400070e2:	mov    rcx,rbx
   1400070e5:	call   0x14000c688
   1400070ea:	test   rax,rax
   1400070ed:	jne    0x140007117
   1400070ef:	movsx  edx,BYTE PTR [rbx]
   1400070f2:	lea    rcx,[rip+0x14c67]        # 0x14001bd60
   1400070f9:	call   0x14000c07c
   1400070fe:	test   rax,rax
   140007101:	jne    0x140007117
   140007103:	movsx  edx,BYTE PTR [rdi]
   140007106:	lea    rcx,[rip+0x14c53]        # 0x14001bd60
   14000710d:	call   0x14000c07c
   140007112:	test   rax,rax
   140007115:	je     0x140007168
   140007117:	mov    rcx,r12
   14000711a:	call   0x140004084
   14000711f:	xor    eax,eax
   140007121:	mov    rbx,QWORD PTR [rsp+0x30]
   140007126:	mov    rbp,QWORD PTR [rsp+0x38]
   14000712b:	mov    rsi,QWORD PTR [rsp+0x40]
   140007130:	mov    rdi,QWORD PTR [rsp+0x48]
   140007135:	add    rsp,0x20
   140007139:	pop    r12
   14000713b:	ret    
   14000713c:	movsx  edx,BYTE PTR [rbx]
   14000713f:	lea    rcx,[rip+0x14c1a]        # 0x14001bd60
   140007146:	call   0x14000c07c
   14000714b:	test   rax,rax
   14000714e:	je     0x140007165
   140007150:	movsx  edx,BYTE PTR [rbx+0x1]
   140007154:	lea    rcx,[rip+0x14c05]        # 0x14001bd60
   14000715b:	call   0x14000c07c
   140007160:	test   rax,rax
   140007163:	jne    0x140007117
   140007165:	inc    rbx
   140007168:	cmp    rbx,rdi
   14000716b:	jne    0x14000713c
   14000716d:	test   rsi,rsi
   140007170:	je     0x14000717b
   140007172:	lea    rbx,[rsi+0x1]
   140007176:	jmp    0x140007097
   14000717b:	test   rbp,rbp
   14000717e:	je     0x140007189
   140007180:	lea    rbx,[rbp+0x1]
   140007184:	jmp    0x140007065
   140007189:	mov    rcx,r12
   14000718c:	call   0x140004084
   140007191:	mov    eax,0x1
   140007196:	jmp    0x140007121
   140007198:	xor    eax,eax
   14000719a:	test   rcx,rcx
   14000719d:	je     0x1400071f1
   14000719f:	mov    rdx,QWORD PTR [rcx+0x28]
   1400071a3:	test   rdx,rdx
   1400071a6:	je     0x1400071f1
   1400071a8:	mov    DWORD PTR [rdx+0x1c],eax
   1400071ab:	mov    DWORD PTR [rcx+0x1c],eax
   1400071ae:	mov    DWORD PTR [rcx+0xc],eax
   1400071b1:	mov    QWORD PTR [rcx+0x20],rax
   1400071b5:	mov    DWORD PTR [rcx+0x4c],0x1
   1400071bc:	mov    QWORD PTR [rdx],rax
   1400071bf:	mov    DWORD PTR [rdx+0xc],eax
   1400071c2:	mov    QWORD PTR [rdx+0x20],rax
   1400071c6:	mov    QWORD PTR [rdx+0x2c],rax
   1400071ca:	mov    DWORD PTR [rdx+0x34],eax
   1400071cd:	mov    QWORD PTR [rdx+0x40],rax
   1400071d1:	lea    rax,[rdx+0x548]
   1400071d8:	mov    QWORD PTR [rdx+0x80],rax
   1400071df:	mov    QWORD PTR [rdx+0x60],rax
   1400071e3:	mov    QWORD PTR [rdx+0x58],rax
   1400071e7:	xor    eax,eax
   1400071e9:	mov    DWORD PTR [rdx+0x14],0x8000
   1400071f0:	ret    
   1400071f1:	mov    eax,0xfffffffe
   1400071f6:	ret    
   1400071f7:	int3   
   1400071f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400071fd:	push   rdi
   1400071fe:	sub    rsp,0x20
   140007202:	mov    edi,edx
   140007204:	mov    rbx,rcx
   140007207:	test   r8,r8
   14000720a:	je     0x1400072d2
   140007210:	cmp    BYTE PTR [r8],0x31
   140007214:	jne    0x1400072d2
   14000721a:	cmp    r9d,0x58
   14000721e:	jne    0x1400072d2
   140007224:	test   rcx,rcx
   140007227:	jne    0x140007233
   140007229:	mov    eax,0xfffffffe
   14000722e:	jmp    0x1400072d7
   140007233:	and    QWORD PTR [rcx+0x20],0x0
   140007238:	cmp    QWORD PTR [rcx+0x30],0x0
   14000723d:	jne    0x14000724f
   14000723f:	and    QWORD PTR [rcx+0x40],0x0
   140007244:	lea    rax,[rip+0x1765]        # 0x1400089b0
   14000724b:	mov    QWORD PTR [rcx+0x30],rax
   14000724f:	mov    rax,QWORD PTR [rcx+0x38]
   140007253:	lea    rcx,[rip+0x1762]        # 0x1400089bc
   14000725a:	mov    edx,0x1
   14000725f:	cmp    rax,0x0
   140007263:	mov    r8d,0x2548
   140007269:	cmove  rax,rcx
   14000726d:	mov    rcx,QWORD PTR [rbx+0x40]
   140007271:	mov    QWORD PTR [rbx+0x38],rax
   140007275:	call   QWORD PTR [rbx+0x30]
   140007278:	mov    rdx,rax
   14000727b:	test   rax,rax
   14000727e:	jne    0x140007285
   140007280:	lea    eax,[rdx-0x4]
   140007283:	jmp    0x1400072d7
   140007285:	mov    QWORD PTR [rbx+0x28],rax
   140007289:	test   edi,edi
   14000728b:	jns    0x140007295
   14000728d:	and    DWORD PTR [rax+0x8],0x0
   140007291:	neg    edi
   140007293:	jmp    0x1400072a7
   140007295:	mov    eax,edi
   140007297:	sar    eax,0x4
   14000729a:	inc    eax
   14000729c:	mov    DWORD PTR [rdx+0x8],eax
   14000729f:	cmp    edi,0x30
   1400072a2:	jge    0x1400072a7
   1400072a4:	and    edi,0xf
   1400072a7:	lea    eax,[rdi-0x8]
   1400072aa:	cmp    eax,0x7
   1400072ad:	ja     0x1400072c1
   1400072af:	and    QWORD PTR [rdx+0x38],0x0
   1400072b4:	mov    rcx,rbx
   1400072b7:	mov    DWORD PTR [rdx+0x28],edi
   1400072ba:	call   0x140007198
   1400072bf:	jmp    0x1400072d7
   1400072c1:	mov    rcx,QWORD PTR [rbx+0x40]
   1400072c5:	call   QWORD PTR [rbx+0x38]
   1400072c8:	and    QWORD PTR [rbx+0x28],0x0
   1400072cd:	jmp    0x140007229
   1400072d2:	mov    eax,0xfffffffa
   1400072d7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400072dc:	add    rsp,0x20
   1400072e0:	pop    rdi
   1400072e1:	ret    
   1400072e2:	int3   
   1400072e3:	int3   
   1400072e4:	mov    rax,rsp
   1400072e7:	mov    QWORD PTR [rax+0x8],rbx
   1400072eb:	mov    QWORD PTR [rax+0x10],rbp
   1400072ef:	mov    QWORD PTR [rax+0x18],rsi
   1400072f3:	mov    QWORD PTR [rax+0x20],rdi
   1400072f7:	push   r12
   1400072f9:	sub    rsp,0x20
   1400072fd:	mov    rbx,QWORD PTR [rcx+0x28]
   140007301:	xor    r12d,r12d
   140007304:	mov    ebp,edx
   140007306:	mov    rsi,rcx
   140007309:	mov    edi,0x1
   14000730e:	cmp    QWORD PTR [rbx+0x38],r12
   140007312:	jne    0x140007335
   140007314:	mov    ecx,DWORD PTR [rbx+0x28]
   140007317:	mov    edx,edi
   140007319:	mov    r8d,edi
   14000731c:	shl    edx,cl
   14000731e:	mov    rcx,QWORD PTR [rsi+0x40]
   140007322:	call   QWORD PTR [rsi+0x30]
   140007325:	mov    QWORD PTR [rbx+0x38],rax
   140007329:	test   rax,rax
   14000732c:	jne    0x140007335
   14000732e:	mov    eax,edi
   140007330:	jmp    0x1400073c5
   140007335:	cmp    DWORD PTR [rbx+0x2c],r12d
   140007339:	jne    0x140007347
   14000733b:	mov    ecx,DWORD PTR [rbx+0x28]
   14000733e:	mov    QWORD PTR [rbx+0x30],r12
   140007342:	shl    edi,cl
   140007344:	mov    DWORD PTR [rbx+0x2c],edi
   140007347:	sub    ebp,DWORD PTR [rsi+0x18]
   14000734a:	mov    edi,DWORD PTR [rbx+0x2c]
   14000734d:	mov    rdx,QWORD PTR [rsi+0x10]
   140007351:	cmp    ebp,edi
   140007353:	jb     0x14000736d
   140007355:	mov    rcx,QWORD PTR [rbx+0x38]
   140007359:	mov    r8d,edi
   14000735c:	sub    rdx,rdi
   14000735f:	call   0x14000a170
   140007364:	mov    DWORD PTR [rbx+0x34],r12d
   140007368:	mov    eax,DWORD PTR [rbx+0x2c]
   14000736b:	jmp    0x1400073c0
   14000736d:	sub    edi,DWORD PTR [rbx+0x34]
   140007370:	mov    ecx,DWORD PTR [rbx+0x34]
   140007373:	mov    eax,ebp
   140007375:	cmp    edi,ebp
   140007377:	cmova  edi,ebp
   14000737a:	add    rcx,QWORD PTR [rbx+0x38]
   14000737e:	sub    rdx,rax
   140007381:	mov    r8d,edi
   140007384:	call   0x14000a170
   140007389:	sub    ebp,edi
   14000738b:	je     0x1400073a5
   14000738d:	mov    rdx,QWORD PTR [rsi+0x10]
   140007391:	mov    rcx,QWORD PTR [rbx+0x38]
   140007395:	mov    r8d,ebp
   140007398:	sub    rdx,r8
   14000739b:	call   0x14000a170
   1400073a0:	mov    DWORD PTR [rbx+0x34],ebp
   1400073a3:	jmp    0x140007368
   1400073a5:	add    DWORD PTR [rbx+0x34],edi
   1400073a8:	mov    eax,DWORD PTR [rbx+0x34]
   1400073ab:	mov    ecx,DWORD PTR [rbx+0x2c]
   1400073ae:	cmp    eax,ecx
   1400073b0:	cmove  eax,r12d
   1400073b4:	mov    DWORD PTR [rbx+0x34],eax
   1400073b7:	mov    eax,DWORD PTR [rbx+0x30]
   1400073ba:	cmp    eax,ecx
   1400073bc:	jae    0x1400073c3
   1400073be:	add    eax,edi
   1400073c0:	mov    DWORD PTR [rbx+0x30],eax
   1400073c3:	xor    eax,eax
   1400073c5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400073ca:	mov    rbp,QWORD PTR [rsp+0x38]
   1400073cf:	mov    rsi,QWORD PTR [rsp+0x40]
   1400073d4:	mov    rdi,QWORD PTR [rsp+0x48]
   1400073d9:	add    rsp,0x20
   1400073dd:	pop    r12
   1400073df:	ret    
   1400073e0:	mov    DWORD PTR [rsp+0x10],edx
   1400073e4:	push   rbp
   1400073e5:	push   rbx
   1400073e6:	push   rsi
   1400073e7:	push   rdi
   1400073e8:	push   r12
   1400073ea:	push   r13
   1400073ec:	push   r14
   1400073ee:	push   r15
   1400073f0:	mov    rbp,rsp
   1400073f3:	sub    rsp,0x58
   1400073f7:	xor    r11d,r11d
   1400073fa:	mov    ebx,edx
   1400073fc:	mov    r14,rcx
   1400073ff:	test   rcx,rcx
   140007402:	je     0x1400074cb
   140007408:	mov    rdi,QWORD PTR [rcx+0x28]
   14000740c:	test   rdi,rdi
   14000740f:	je     0x1400074cb
   140007415:	cmp    QWORD PTR [rcx+0x10],r11
   140007419:	je     0x1400074cb
   14000741f:	cmp    QWORD PTR [rcx],r11
   140007422:	jne    0x14000742e
   140007424:	cmp    DWORD PTR [rcx+0x8],r11d
   140007428:	jne    0x1400074cb
   14000742e:	mov    eax,DWORD PTR [rdi]
   140007430:	mov    r12d,DWORD PTR [rdi+0x40]
   140007434:	mov    esi,DWORD PTR [rdi+0x44]
   140007437:	cmp    eax,0xb
   14000743a:	mov    ecx,0xc
   14000743f:	mov    DWORD PTR [rbp+0x48],r11d
   140007443:	cmove  eax,ecx
   140007446:	mov    DWORD PTR [rdi],eax
   140007448:	mov    r9d,DWORD PTR [r14+0x18]
   14000744c:	mov    r13,QWORD PTR [r14]
   14000744f:	mov    r15d,DWORD PTR [r14+0x8]
   140007453:	mov    r10,QWORD PTR [r14+0x10]
   140007457:	mov    QWORD PTR [rbp-0x18],r13
   14000745b:	mov    DWORD PTR [rbp-0x20],r15d
   14000745f:	mov    r8d,r9d
   140007462:	mov    DWORD PTR [rbp+0x60],r9d
   140007466:	mov    edx,0x10
   14000746b:	mov    DWORD PTR [rbp+0x58],r9d
   14000746f:	mov    QWORD PTR [rbp-0x10],r10
   140007473:	mov    eax,0x7
   140007478:	mov    ecx,DWORD PTR [rdi]
   14000747a:	cmp    ecx,0xe
   14000747d:	jg     0x140007db3
   140007483:	je     0x140007b54
   140007489:	cmp    ecx,eax
   14000748b:	jg     0x140007ac4
   140007491:	je     0x14000784e
   140007497:	test   ecx,ecx
   140007499:	je     0x14000792b
   14000749f:	dec    ecx
   1400074a1:	je     0x140007503
   1400074a3:	dec    ecx
   1400074a5:	je     0x1400075a3
   1400074ab:	dec    ecx
   1400074ad:	je     0x140007629
   1400074b3:	dec    ecx
   1400074b5:	je     0x140007687
   1400074bb:	dec    ecx
   1400074bd:	je     0x1400076a7
   1400074c3:	dec    ecx
   1400074c5:	je     0x1400077b5
   1400074cb:	mov    eax,0xfffffffe
   1400074d0:	add    rsp,0x58
   1400074d4:	pop    r15
   1400074d6:	pop    r14
   1400074d8:	pop    r13
   1400074da:	pop    r12
   1400074dc:	pop    rdi
   1400074dd:	pop    rsi
   1400074de:	pop    rbx
   1400074df:	pop    rbp
   1400074e0:	ret    
   1400074e1:	test   r15d,r15d
   1400074e4:	je     0x1400078ca
   1400074ea:	movzx  eax,BYTE PTR [r13+0x0]
   1400074ef:	mov    ecx,esi
   1400074f1:	inc    r13
   1400074f4:	shl    eax,cl
   1400074f6:	dec    r15d
   1400074f9:	mov    QWORD PTR [rbp-0x18],r13
   1400074fd:	add    r12d,eax
   140007500:	add    esi,0x8
   140007503:	cmp    esi,edx
   140007505:	jb     0x1400074e1
   140007507:	mov    DWORD PTR [rdi+0x10],r12d
   14000750b:	cmp    r12b,0x8
   14000750f:	je     0x14000751d
   140007511:	lea    rax,[rip+0x152c8]        # 0x14001c7e0
   140007518:	jmp    0x140007a78
   14000751d:	test   r12d,0xe000
   140007524:	je     0x140007532
   140007526:	lea    rax,[rip+0x15293]        # 0x14001c7c0
   14000752d:	jmp    0x140007a78
   140007532:	mov    rcx,QWORD PTR [rdi+0x20]
   140007536:	test   rcx,rcx
   140007539:	je     0x140007546
   14000753b:	mov    eax,r12d
   14000753e:	shr    eax,0x8
   140007541:	and    eax,0x1
   140007544:	mov    DWORD PTR [rcx],eax
   140007546:	test   DWORD PTR [rdi+0x10],0x200
   14000754d:	je     0x140007573
   14000754f:	mov    BYTE PTR [rbp-0x28],r12b
   140007553:	shr    r12d,0x8
   140007557:	lea    rdx,[rbp-0x28]
   14000755b:	mov    BYTE PTR [rbp-0x27],r12b
   14000755f:	mov    ecx,DWORD PTR [rdi+0x18]
   140007562:	mov    r8d,0x2
   140007568:	call   0x14000986c
   14000756d:	xor    r11d,r11d
   140007570:	mov    DWORD PTR [rdi+0x18],eax
   140007573:	mov    r12d,r11d
   140007576:	mov    esi,r11d
   140007579:	mov    DWORD PTR [rdi],0x2
   14000757f:	jmp    0x1400075a3
   140007581:	test   r15d,r15d
   140007584:	je     0x1400078ca
   14000758a:	movzx  eax,BYTE PTR [r13+0x0]
   14000758f:	mov    ecx,esi
   140007591:	inc    r13
   140007594:	shl    eax,cl
   140007596:	dec    r15d
   140007599:	mov    QWORD PTR [rbp-0x18],r13
   14000759d:	add    r12d,eax
   1400075a0:	add    esi,0x8
   1400075a3:	cmp    esi,0x20
   1400075a6:	jb     0x140007581
   1400075a8:	mov    rax,QWORD PTR [rdi+0x20]
   1400075ac:	test   rax,rax
   1400075af:	je     0x1400075b5
   1400075b1:	mov    DWORD PTR [rax+0x4],r12d
   1400075b5:	test   DWORD PTR [rdi+0x10],0x200
   1400075bc:	je     0x1400075f4
   1400075be:	mov    eax,r12d
   1400075c1:	mov    BYTE PTR [rbp-0x28],r12b
   1400075c5:	lea    rdx,[rbp-0x28]
   1400075c9:	shr    eax,0x8
   1400075cc:	mov    r8d,0x4
   1400075d2:	mov    BYTE PTR [rbp-0x27],al
   1400075d5:	mov    eax,r12d
   1400075d8:	shr    r12d,0x18
   1400075dc:	shr    eax,0x10
   1400075df:	mov    BYTE PTR [rbp-0x25],r12b
   1400075e3:	mov    BYTE PTR [rbp-0x26],al
   1400075e6:	mov    ecx,DWORD PTR [rdi+0x18]
   1400075e9:	call   0x14000986c
   1400075ee:	xor    r11d,r11d
   1400075f1:	mov    DWORD PTR [rdi+0x18],eax
   1400075f4:	mov    r12d,r11d
   1400075f7:	mov    esi,r11d
   1400075fa:	mov    DWORD PTR [rdi],0x3
   140007600:	mov    edx,0x10
   140007605:	jmp    0x140007629
   140007607:	test   r15d,r15d
   14000760a:	je     0x1400078ca
   140007610:	movzx  eax,BYTE PTR [r13+0x0]
   140007615:	mov    ecx,esi
   140007617:	inc    r13
   14000761a:	shl    eax,cl
   14000761c:	dec    r15d
   14000761f:	mov    QWORD PTR [rbp-0x18],r13
   140007623:	add    r12d,eax
   140007626:	add    esi,0x8
   140007629:	cmp    esi,edx
   14000762b:	jb     0x140007607
   14000762d:	mov    rcx,QWORD PTR [rdi+0x20]
   140007631:	test   rcx,rcx
   140007634:	je     0x14000764a
   140007636:	movzx  eax,r12b
   14000763a:	mov    DWORD PTR [rcx+0x8],eax
   14000763d:	mov    rax,QWORD PTR [rdi+0x20]
   140007641:	mov    ecx,r12d
   140007644:	shr    ecx,0x8
   140007647:	mov    DWORD PTR [rax+0xc],ecx
   14000764a:	test   DWORD PTR [rdi+0x10],0x200
   140007651:	je     0x14000767b
   140007653:	mov    BYTE PTR [rbp-0x28],r12b
   140007657:	shr    r12d,0x8
   14000765b:	lea    rdx,[rbp-0x28]
   14000765f:	mov    BYTE PTR [rbp-0x27],r12b
   140007663:	mov    ecx,DWORD PTR [rdi+0x18]
   140007666:	mov    r8d,0x2
   14000766c:	call   0x14000986c
   140007671:	xor    r11d,r11d
   140007674:	mov    DWORD PTR [rdi+0x18],eax
   140007677:	lea    edx,[r11+0x10]
   14000767b:	mov    r12d,r11d
   14000767e:	mov    esi,r11d
   140007681:	mov    DWORD PTR [rdi],0x4
   140007687:	test   DWORD PTR [rdi+0x10],0x400
   14000768e:	jne    0x140007716
   140007694:	mov    rax,QWORD PTR [rdi+0x20]
   140007698:	test   rax,rax
   14000769b:	je     0x1400076a1
   14000769d:	mov    QWORD PTR [rax+0x10],r11
   1400076a1:	mov    DWORD PTR [rdi],0x5
   1400076a7:	test   DWORD PTR [rdi+0x10],0x400
   1400076ae:	je     0x1400077ab
   1400076b4:	mov    ebx,DWORD PTR [rdi+0x48]
   1400076b7:	cmp    ebx,r15d
   1400076ba:	cmova  ebx,r15d
   1400076be:	test   ebx,ebx
   1400076c0:	je     0x1400077a1
   1400076c6:	mov    rax,QWORD PTR [rdi+0x20]
   1400076ca:	test   rax,rax
   1400076cd:	je     0x140007775
   1400076d3:	mov    r9,QWORD PTR [rax+0x10]
   1400076d7:	test   r9,r9
   1400076da:	je     0x140007775
   1400076e0:	mov    edx,DWORD PTR [rax+0x18]
   1400076e3:	mov    ecx,DWORD PTR [rax+0x1c]
   1400076e6:	sub    edx,DWORD PTR [rdi+0x48]
   1400076e9:	lea    eax,[rbx+rdx*1]
   1400076ec:	cmp    eax,ecx
   1400076ee:	jbe    0x140007763
   1400076f0:	sub    ecx,edx
   1400076f2:	jmp    0x140007765
   1400076f4:	test   r15d,r15d
   1400076f7:	je     0x1400078ca
   1400076fd:	movzx  eax,BYTE PTR [r13+0x0]
   140007702:	mov    ecx,esi
   140007704:	inc    r13
   140007707:	shl    eax,cl
   140007709:	dec    r15d
   14000770c:	mov    QWORD PTR [rbp-0x18],r13
   140007710:	add    r12d,eax
   140007713:	add    esi,0x8
   140007716:	cmp    esi,edx
   140007718:	jb     0x1400076f4
   14000771a:	mov    rax,QWORD PTR [rdi+0x20]
   14000771e:	mov    DWORD PTR [rdi+0x48],r12d
   140007722:	test   rax,rax
   140007725:	je     0x14000772b
   140007727:	mov    DWORD PTR [rax+0x18],r12d
   14000772b:	test   DWORD PTR [rdi+0x10],0x200
   140007732:	je     0x140007758
   140007734:	mov    BYTE PTR [rbp-0x28],r12b
   140007738:	shr    r12d,0x8
   14000773c:	lea    rdx,[rbp-0x28]
   140007740:	mov    BYTE PTR [rbp-0x27],r12b
   140007744:	mov    ecx,DWORD PTR [rdi+0x18]
   140007747:	mov    r8d,0x2
   14000774d:	call   0x14000986c
   140007752:	xor    r11d,r11d
   140007755:	mov    DWORD PTR [rdi+0x18],eax
   140007758:	mov    r12d,r11d
   14000775b:	mov    esi,r11d
   14000775e:	jmp    0x1400076a1
   140007763:	mov    ecx,ebx
   140007765:	mov    r8d,ecx
   140007768:	mov    ecx,edx
   14000776a:	mov    rdx,r13
   14000776d:	add    rcx,r9
   140007770:	call   0x14000a170
   140007775:	test   DWORD PTR [rdi+0x10],0x200
   14000777c:	je     0x14000778f
   14000777e:	mov    ecx,DWORD PTR [rdi+0x18]
   140007781:	mov    r8d,ebx
   140007784:	mov    rdx,r13
   140007787:	call   0x14000986c
   14000778c:	mov    DWORD PTR [rdi+0x18],eax
   14000778f:	sub    DWORD PTR [rdi+0x48],ebx
   140007792:	mov    eax,ebx
   140007794:	sub    r15d,ebx
   140007797:	add    r13,rax
   14000779a:	xor    r11d,r11d
   14000779d:	mov    QWORD PTR [rbp-0x18],r13
   1400077a1:	cmp    DWORD PTR [rdi+0x48],r11d
   1400077a5:	jne    0x1400078ca
   1400077ab:	mov    DWORD PTR [rdi+0x48],r11d
   1400077af:	mov    DWORD PTR [rdi],0x6
   1400077b5:	test   DWORD PTR [rdi+0x10],0x800
   1400077bc:	je     0x140007837
   1400077be:	test   r15d,r15d
   1400077c1:	je     0x1400078ca
   1400077c7:	mov    ebx,r11d
   1400077ca:	mov    r8,r13
   1400077cd:	mov    rax,QWORD PTR [rdi+0x20]
   1400077d1:	movzx  r13d,BYTE PTR [r8]
   1400077d5:	inc    ebx
   1400077d7:	inc    r8
   1400077da:	test   rax,rax
   1400077dd:	je     0x1400077f7
   1400077df:	mov    rdx,QWORD PTR [rax+0x20]
   1400077e3:	test   rdx,rdx
   1400077e6:	je     0x1400077f7
   1400077e8:	mov    ecx,DWORD PTR [rdi+0x48]
   1400077eb:	cmp    ecx,DWORD PTR [rax+0x28]
   1400077ee:	jae    0x1400077f7
   1400077f0:	mov    BYTE PTR [rcx+rdx*1],r13b
   1400077f4:	inc    DWORD PTR [rdi+0x48]
   1400077f7:	test   r13d,r13d
   1400077fa:	je     0x140007801
   1400077fc:	cmp    ebx,r15d
   1400077ff:	jb     0x1400077cd
   140007801:	test   DWORD PTR [rdi+0x10],0x200
   140007808:	je     0x14000781f
   14000780a:	mov    rdx,QWORD PTR [rbp-0x18]
   14000780e:	mov    ecx,DWORD PTR [rdi+0x18]
   140007811:	mov    r8d,ebx
   140007814:	call   0x14000986c
   140007819:	xor    r11d,r11d
   14000781c:	mov    DWORD PTR [rdi+0x18],eax
   14000781f:	mov    eax,ebx
   140007821:	sub    r15d,ebx
   140007824:	add    QWORD PTR [rbp-0x18],rax
   140007828:	test   r13d,r13d
   14000782b:	jne    0x1400078ca
   140007831:	mov    r13,QWORD PTR [rbp-0x18]
   140007835:	jmp    0x140007844
   140007837:	mov    rax,QWORD PTR [rdi+0x20]
   14000783b:	test   rax,rax
   14000783e:	je     0x140007844
   140007840:	mov    QWORD PTR [rax+0x20],r11
   140007844:	mov    DWORD PTR [rdi+0x48],r11d
   140007848:	mov    DWORD PTR [rdi],0x7
   14000784e:	test   DWORD PTR [rdi+0x10],0x1000
   140007855:	je     0x140007a87
   14000785b:	test   r15d,r15d
   14000785e:	je     0x1400078ca
   140007860:	mov    ebx,r11d
   140007863:	mov    r8,r13
   140007866:	mov    rax,QWORD PTR [rdi+0x20]
   14000786a:	movzx  r13d,BYTE PTR [r8]
   14000786e:	inc    ebx
   140007870:	inc    r8
   140007873:	test   rax,rax
   140007876:	je     0x140007890
   140007878:	mov    rdx,QWORD PTR [rax+0x30]
   14000787c:	test   rdx,rdx
   14000787f:	je     0x140007890
   140007881:	mov    ecx,DWORD PTR [rdi+0x48]
   140007884:	cmp    ecx,DWORD PTR [rax+0x38]
   140007887:	jae    0x140007890
   140007889:	mov    BYTE PTR [rcx+rdx*1],r13b
   14000788d:	inc    DWORD PTR [rdi+0x48]
   140007890:	test   r13d,r13d
   140007893:	je     0x14000789a
   140007895:	cmp    ebx,r15d
   140007898:	jb     0x140007866
   14000789a:	test   DWORD PTR [rdi+0x10],0x200
   1400078a1:	je     0x1400078b8
   1400078a3:	mov    rdx,QWORD PTR [rbp-0x18]
   1400078a7:	mov    ecx,DWORD PTR [rdi+0x18]
   1400078aa:	mov    r8d,ebx
   1400078ad:	call   0x14000986c
   1400078b2:	xor    r11d,r11d
   1400078b5:	mov    DWORD PTR [rdi+0x18],eax
   1400078b8:	mov    eax,ebx
   1400078ba:	sub    r15d,ebx
   1400078bd:	add    QWORD PTR [rbp-0x18],rax
   1400078c1:	test   r13d,r13d
   1400078c4:	je     0x140007a94
   1400078ca:	mov    r13d,DWORD PTR [rbp+0x48]
   1400078ce:	mov    rax,QWORD PTR [rbp-0x10]
   1400078d2:	mov    ebx,DWORD PTR [rbp+0x60]
   1400078d5:	mov    DWORD PTR [r14+0x8],r15d
   1400078d9:	mov    QWORD PTR [r14+0x10],rax
   1400078dd:	mov    eax,DWORD PTR [rbp+0x58]
   1400078e0:	mov    DWORD PTR [r14+0x18],eax
   1400078e4:	mov    rax,QWORD PTR [rbp-0x18]
   1400078e8:	mov    QWORD PTR [r14],rax
   1400078eb:	mov    DWORD PTR [rdi+0x40],r12d
   1400078ef:	xor    r12d,r12d
   1400078f2:	mov    DWORD PTR [rdi+0x44],esi
   1400078f5:	cmp    DWORD PTR [rdi+0x2c],r12d
   1400078f9:	jne    0x14000790e
   1400078fb:	cmp    DWORD PTR [rdi],0x18
   1400078fe:	jge    0x1400088d3
   140007904:	cmp    ebx,DWORD PTR [r14+0x18]
   140007908:	je     0x1400088d3
   14000790e:	mov    edx,ebx
   140007910:	mov    rcx,r14
   140007913:	call   0x1400072e4
   140007918:	test   eax,eax
   14000791a:	je     0x1400088d3
   140007920:	mov    DWORD PTR [rdi],0x1c
   140007926:	jmp    0x14000874c
   14000792b:	cmp    DWORD PTR [rdi+0x8],r11d
   14000792f:	jne    0x14000795a
   140007931:	mov    DWORD PTR [rdi],0xc
   140007937:	jmp    0x140007473
   14000793c:	test   r15d,r15d
   14000793f:	je     0x1400078ca
   140007941:	movzx  eax,BYTE PTR [r13+0x0]
   140007946:	mov    ecx,esi
   140007948:	inc    r13
   14000794b:	shl    eax,cl
   14000794d:	dec    r15d
   140007950:	mov    QWORD PTR [rbp-0x18],r13
   140007954:	add    r12d,eax
   140007957:	add    esi,0x8
   14000795a:	cmp    esi,edx
   14000795c:	jb     0x14000793c
   14000795e:	test   BYTE PTR [rdi+0x8],0x2
   140007962:	je     0x1400079bb
   140007964:	cmp    r12d,0x8b1f
   14000796b:	jne    0x1400079bb
   14000796d:	xor    r8d,r8d
   140007970:	xor    edx,edx
   140007972:	xor    ecx,ecx
   140007974:	call   0x14000986c
   140007979:	lea    rdx,[rbp-0x28]
   14000797d:	mov    r8d,0x2
   140007983:	mov    DWORD PTR [rdi+0x18],eax
   140007986:	mov    WORD PTR [rbp-0x28],r12w
   14000798b:	mov    ecx,DWORD PTR [rdi+0x18]
   14000798e:	call   0x14000986c
   140007993:	mov    DWORD PTR [rdi],0x1
   140007999:	mov    DWORD PTR [rdi+0x18],eax
   14000799c:	xor    r11d,r11d
   14000799f:	mov    esi,r11d
   1400079a2:	mov    r12d,r11d
   1400079a5:	mov    r10,QWORD PTR [rbp-0x10]
   1400079a9:	mov    r8d,DWORD PTR [rbp+0x60]
   1400079ad:	mov    r9d,DWORD PTR [rbp+0x58]
   1400079b1:	mov    edx,0x10
   1400079b6:	jmp    0x140007473
   1400079bb:	mov    rax,QWORD PTR [rdi+0x20]
   1400079bf:	mov    DWORD PTR [rdi+0x10],r11d
   1400079c3:	test   rax,rax
   1400079c6:	je     0x1400079cc
   1400079c8:	or     DWORD PTR [rax+0x40],0xffffffff
   1400079cc:	test   BYTE PTR [rdi+0x8],0x1
   1400079d0:	je     0x140007a71
   1400079d6:	movzx  ecx,r12b
   1400079da:	mov    eax,r12d
   1400079dd:	shr    eax,0x8
   1400079e0:	shl    ecx,0x8
   1400079e3:	add    ecx,eax
   1400079e5:	mov    eax,0x8421085
   1400079ea:	mul    ecx
   1400079ec:	mov    eax,ecx
   1400079ee:	sub    eax,edx
   1400079f0:	shr    eax,1
   1400079f2:	add    eax,edx
   1400079f4:	shr    eax,0x4
   1400079f7:	imul   eax,eax,0x1f
   1400079fa:	cmp    ecx,eax
   1400079fc:	jne    0x140007a6c
   1400079fe:	mov    eax,r12d
   140007a01:	and    al,0xf
   140007a03:	cmp    al,0x8
   140007a05:	je     0x140007a1a
   140007a07:	lea    rax,[rip+0x14dd2]        # 0x14001c7e0
   140007a0e:	mov    QWORD PTR [r14+0x20],rax
   140007a12:	mov    DWORD PTR [rdi],0x1b
   140007a18:	jmp    0x1400079b1
   140007a1a:	shr    r12d,0x4
   140007a1e:	add    esi,0xfffffffc
   140007a21:	mov    ecx,r12d
   140007a24:	and    ecx,0xf
   140007a27:	add    ecx,0x8
   140007a2a:	cmp    ecx,DWORD PTR [rdi+0x28]
   140007a2d:	jbe    0x140007a38
   140007a2f:	lea    rax,[rip+0x14d72]        # 0x14001c7a8
   140007a36:	jmp    0x140007a0e
   140007a38:	mov    eax,0x1
   140007a3d:	xor    r8d,r8d
   140007a40:	xor    edx,edx
   140007a42:	shl    eax,cl
   140007a44:	xor    ecx,ecx
   140007a46:	mov    DWORD PTR [rdi+0x14],eax
   140007a49:	call   0x14000928c
   140007a4e:	shr    r12d,0x8
   140007a52:	not    r12d
   140007a55:	mov    DWORD PTR [rdi+0x18],eax
   140007a58:	mov    DWORD PTR [r14+0x4c],eax
   140007a5c:	and    r12d,0x2
   140007a60:	or     r12d,0x9
   140007a64:	mov    DWORD PTR [rdi],r12d
   140007a67:	jmp    0x14000799c
   140007a6c:	mov    edx,0x10
   140007a71:	lea    rax,[rip+0x14d18]        # 0x14001c790
   140007a78:	mov    QWORD PTR [r14+0x20],rax
   140007a7c:	mov    DWORD PTR [rdi],0x1b
   140007a82:	jmp    0x140007473
   140007a87:	mov    rax,QWORD PTR [rdi+0x20]
   140007a8b:	test   rax,rax
   140007a8e:	je     0x140007a94
   140007a90:	mov    QWORD PTR [rax+0x30],r11
   140007a94:	mov    r13,QWORD PTR [rbp-0x18]
   140007a98:	mov    r8d,DWORD PTR [rbp+0x60]
   140007a9c:	mov    r9d,DWORD PTR [rbp+0x58]
   140007aa0:	mov    r10,QWORD PTR [rbp-0x10]
   140007aa4:	mov    ebx,DWORD PTR [rbp+0x50]
   140007aa7:	mov    DWORD PTR [rdi],0x8
   140007aad:	mov    edx,0x10
   140007ab2:	test   DWORD PTR [rdi+0x10],0x200
   140007ab9:	je     0x140007d57
   140007abf:	jmp    0x140007d38
   140007ac4:	sub    ecx,0x8
   140007ac7:	je     0x140007ab2
   140007ac9:	dec    ecx
   140007acb:	je     0x140007bd8
   140007ad1:	dec    ecx
   140007ad3:	je     0x140007c16
   140007ad9:	dec    ecx
   140007adb:	je     0x140007c4c
   140007ae1:	dec    ecx
   140007ae3:	je     0x140007c55
   140007ae9:	dec    ecx
   140007aeb:	jne    0x1400074cb
   140007af1:	mov    ecx,esi
   140007af3:	and    ecx,0x7
   140007af6:	shr    r12d,cl
   140007af9:	sub    esi,ecx
   140007afb:	jmp    0x140007b1f
   140007afd:	test   r15d,r15d
   140007b00:	je     0x1400078ca
   140007b06:	movzx  eax,BYTE PTR [r13+0x0]
   140007b0b:	mov    ecx,esi
   140007b0d:	inc    r13
   140007b10:	shl    eax,cl
   140007b12:	dec    r15d
   140007b15:	mov    QWORD PTR [rbp-0x18],r13
   140007b19:	add    r12d,eax
   140007b1c:	add    esi,0x8
   140007b1f:	cmp    esi,0x20
   140007b22:	jb     0x140007afd
   140007b24:	mov    eax,r12d
   140007b27:	movzx  ecx,r12w
   140007b2b:	not    eax
   140007b2d:	shr    eax,0x10
   140007b30:	cmp    ecx,eax
   140007b32:	je     0x140007b40
   140007b34:	lea    rax,[rip+0x14c35]        # 0x14001c770
   140007b3b:	jmp    0x140007a78
   140007b40:	mov    DWORD PTR [rdi+0x48],ecx
   140007b43:	mov    r12d,r11d
   140007b46:	mov    esi,r11d
   140007b49:	mov    DWORD PTR [rdi],0xe
   140007b4f:	mov    eax,0x7
   140007b54:	mov    r13d,DWORD PTR [rdi+0x48]
   140007b58:	test   r13d,r13d
   140007b5b:	je     0x140007da4
   140007b61:	cmp    r13d,r15d
   140007b64:	cmova  r13d,r15d
   140007b68:	cmp    r13d,r9d
   140007b6b:	cmova  r13d,r9d
   140007b6f:	test   r13d,r13d
   140007b72:	je     0x1400078ca
   140007b78:	mov    rdx,QWORD PTR [rbp-0x18]
   140007b7c:	mov    r8d,r13d
   140007b7f:	mov    rcx,r10
   140007b82:	mov    ebx,r13d
   140007b85:	call   0x14000a170
   140007b8a:	add    QWORD PTR [rbp-0x18],rbx
   140007b8e:	mov    r9d,DWORD PTR [rbp+0x58]
   140007b92:	mov    r10,QWORD PTR [rbp-0x10]
   140007b96:	sub    r15d,r13d
   140007b99:	sub    r9d,r13d
   140007b9c:	add    r10,rbx
   140007b9f:	sub    DWORD PTR [rdi+0x48],r13d
   140007ba3:	mov    r13,QWORD PTR [rbp-0x18]
   140007ba7:	mov    ebx,DWORD PTR [rbp+0x50]
   140007baa:	mov    r8d,DWORD PTR [rbp+0x60]
   140007bae:	xor    r11d,r11d
   140007bb1:	jmp    0x140007466
   140007bb6:	test   r15d,r15d
   140007bb9:	je     0x1400078ca
   140007bbf:	movzx  eax,BYTE PTR [r13+0x0]
   140007bc4:	mov    ecx,esi
   140007bc6:	inc    r13
   140007bc9:	shl    eax,cl
   140007bcb:	dec    r15d
   140007bce:	mov    QWORD PTR [rbp-0x18],r13
   140007bd2:	add    r12d,eax
   140007bd5:	add    esi,0x8
   140007bd8:	cmp    esi,0x20
   140007bdb:	jb     0x140007bb6
   140007bdd:	mov    ecx,r12d
   140007be0:	mov    eax,r12d
   140007be3:	mov    edx,0xff00
   140007be8:	shl    eax,0x10
   140007beb:	and    ecx,edx
   140007bed:	mov    esi,r11d
   140007bf0:	add    ecx,eax
   140007bf2:	mov    eax,r12d
   140007bf5:	shr    r12d,0x18
   140007bf9:	shr    eax,0x8
   140007bfc:	shl    ecx,0x8
   140007bff:	and    eax,edx
   140007c01:	add    eax,ecx
   140007c03:	add    eax,r12d
   140007c06:	mov    r12d,r11d
   140007c09:	mov    DWORD PTR [rdi+0x18],eax
   140007c0c:	mov    DWORD PTR [r14+0x4c],eax
   140007c10:	mov    DWORD PTR [rdi],0xa
   140007c16:	cmp    DWORD PTR [rdi+0xc],r11d
   140007c1a:	je     0x140008891
   140007c20:	xor    r8d,r8d
   140007c23:	xor    edx,edx
   140007c25:	xor    ecx,ecx
   140007c27:	call   0x14000928c
   140007c2c:	mov    r8d,DWORD PTR [rbp+0x60]
   140007c30:	mov    r9d,DWORD PTR [rbp+0x58]
   140007c34:	mov    r10,QWORD PTR [rbp-0x10]
   140007c38:	xor    r11d,r11d
   140007c3b:	mov    DWORD PTR [rdi+0x18],eax
   140007c3e:	mov    DWORD PTR [r14+0x4c],eax
   140007c42:	mov    DWORD PTR [rdi],0xb
   140007c48:	lea    edx,[r11+0x10]
   140007c4c:	cmp    ebx,0x5
   140007c4f:	je     0x1400078ca
   140007c55:	cmp    DWORD PTR [rdi+0x4],r11d
   140007c59:	je     0x140007c96
   140007c5b:	mov    ecx,esi
   140007c5d:	mov    eax,0x7
   140007c62:	mov    DWORD PTR [rdi],0x18
   140007c68:	and    ecx,eax
   140007c6a:	shr    r12d,cl
   140007c6d:	sub    esi,ecx
   140007c6f:	jmp    0x140007478
   140007c74:	test   r15d,r15d
   140007c77:	je     0x1400078ca
   140007c7d:	movzx  eax,BYTE PTR [r13+0x0]
   140007c82:	mov    ecx,esi
   140007c84:	inc    r13
   140007c87:	shl    eax,cl
   140007c89:	dec    r15d
   140007c8c:	mov    QWORD PTR [rbp-0x18],r13
   140007c90:	add    r12d,eax
   140007c93:	add    esi,0x8
   140007c96:	cmp    esi,0x3
   140007c99:	jb     0x140007c74
   140007c9b:	mov    eax,r12d
   140007c9e:	shr    r12d,1
   140007ca1:	dec    esi
   140007ca3:	and    eax,0x1
   140007ca6:	mov    DWORD PTR [rdi+0x4],eax
   140007ca9:	mov    eax,r12d
   140007cac:	and    eax,0x3
   140007caf:	je     0x140007d04
   140007cb1:	dec    eax
   140007cb3:	je     0x140007cd8
   140007cb5:	dec    eax
   140007cb7:	je     0x140007cd0
   140007cb9:	dec    eax
   140007cbb:	jne    0x140007d0a
   140007cbd:	lea    rax,[rip+0x14a94]        # 0x14001c758
   140007cc4:	mov    QWORD PTR [r14+0x20],rax
   140007cc8:	mov    DWORD PTR [rdi],0x1b
   140007cce:	jmp    0x140007d0a
   140007cd0:	mov    DWORD PTR [rdi],0xf
   140007cd6:	jmp    0x140007d0a
   140007cd8:	lea    rax,[rip+0x14091]        # 0x14001bd70
   140007cdf:	mov    DWORD PTR [rdi+0x68],0x9
   140007ce6:	mov    DWORD PTR [rdi+0x6c],0x5
   140007ced:	mov    QWORD PTR [rdi+0x58],rax
   140007cf1:	lea    rax,[rip+0x14878]        # 0x14001c570
   140007cf8:	mov    DWORD PTR [rdi],0x12
   140007cfe:	mov    QWORD PTR [rdi+0x60],rax
   140007d02:	jmp    0x140007d0a
   140007d04:	mov    DWORD PTR [rdi],0xd
   140007d0a:	shr    r12d,0x2
   140007d0e:	add    esi,0xfffffffe
   140007d11:	jmp    0x140007473
   140007d16:	test   r15d,r15d
   140007d19:	je     0x1400078ca
   140007d1f:	movzx  eax,BYTE PTR [r13+0x0]
   140007d24:	mov    ecx,esi
   140007d26:	inc    r13
   140007d29:	shl    eax,cl
   140007d2b:	dec    r15d
   140007d2e:	mov    QWORD PTR [rbp-0x18],r13
   140007d32:	add    r12d,eax
   140007d35:	add    esi,0x8
   140007d38:	cmp    esi,edx
   140007d3a:	jb     0x140007d16
   140007d3c:	movzx  eax,WORD PTR [rdi+0x18]
   140007d40:	cmp    r12d,eax
   140007d43:	je     0x140007d51
   140007d45:	lea    rax,[rip+0x149f4]        # 0x14001c740
   140007d4c:	jmp    0x140007a78
   140007d51:	mov    r12d,r11d
   140007d54:	mov    esi,r11d
   140007d57:	mov    rcx,QWORD PTR [rdi+0x20]
   140007d5b:	test   rcx,rcx
   140007d5e:	je     0x140007d77
   140007d60:	mov    eax,DWORD PTR [rdi+0x10]
   140007d63:	sar    eax,0x9
   140007d66:	and    eax,0x1
   140007d69:	mov    DWORD PTR [rcx+0x3c],eax
   140007d6c:	mov    rax,QWORD PTR [rdi+0x20]
   140007d70:	mov    DWORD PTR [rax+0x40],0x1
   140007d77:	xor    r8d,r8d
   140007d7a:	xor    edx,edx
   140007d7c:	xor    ecx,ecx
   140007d7e:	call   0x14000986c
   140007d83:	mov    r8d,DWORD PTR [rbp+0x60]
   140007d87:	mov    r9d,DWORD PTR [rbp+0x58]
   140007d8b:	mov    r10,QWORD PTR [rbp-0x10]
   140007d8f:	mov    DWORD PTR [rdi+0x18],eax
   140007d92:	mov    DWORD PTR [r14+0x4c],eax
   140007d96:	mov    DWORD PTR [rdi],0xb
   140007d9c:	xor    r11d,r11d
   140007d9f:	jmp    0x1400079b1
   140007da4:	mov    r13,QWORD PTR [rbp-0x18]
   140007da8:	mov    DWORD PTR [rdi],0xb
   140007dae:	jmp    0x140007478
   140007db3:	cmp    ecx,0x16
   140007db6:	jg     0x14000871f
   140007dbc:	je     0x14000868c
   140007dc2:	sub    ecx,0xf
   140007dc5:	je     0x140007e1e
   140007dc7:	dec    ecx
   140007dc9:	je     0x140007e77
   140007dcf:	dec    ecx
   140007dd1:	je     0x140007f6e
   140007dd7:	dec    ecx
   140007dd9:	je     0x140008295
   140007ddf:	dec    ecx
   140007de1:	je     0x14000846a
   140007de7:	dec    ecx
   140007de9:	je     0x1400084b8
   140007def:	dec    ecx
   140007df1:	jne    0x1400074cb
   140007df7:	jmp    0x140008624
   140007dfc:	test   r15d,r15d
   140007dff:	je     0x1400078ca
   140007e05:	movzx  eax,BYTE PTR [r13+0x0]
   140007e0a:	mov    ecx,esi
   140007e0c:	inc    r13
   140007e0f:	shl    eax,cl
   140007e11:	dec    r15d
   140007e14:	mov    QWORD PTR [rbp-0x18],r13
   140007e18:	add    r12d,eax
   140007e1b:	add    esi,0x8
   140007e1e:	cmp    esi,0xe
   140007e21:	jb     0x140007dfc
   140007e23:	mov    ecx,r12d
   140007e26:	shr    r12d,0x5
   140007e2a:	add    esi,0xfffffff2
   140007e2d:	mov    edx,r12d
   140007e30:	shr    r12d,0x5
   140007e34:	and    ecx,0x1f
   140007e37:	mov    eax,r12d
   140007e3a:	and    edx,0x1f
   140007e3d:	add    ecx,0x101
   140007e43:	and    eax,0xf
   140007e46:	inc    edx
   140007e48:	shr    r12d,0x4
   140007e4c:	add    eax,0x4
   140007e4f:	mov    DWORD PTR [rdi+0x74],ecx
   140007e52:	mov    DWORD PTR [rdi+0x78],edx
   140007e55:	mov    DWORD PTR [rdi+0x70],eax
   140007e58:	cmp    ecx,0x11e
   140007e5e:	ja     0x1400086b4
   140007e64:	cmp    edx,0x1e
   140007e67:	ja     0x1400086b4
   140007e6d:	mov    DWORD PTR [rdi+0x7c],r11d
   140007e71:	mov    DWORD PTR [rdi],0x10
   140007e77:	mov    edx,0x7
   140007e7c:	lea    r8,[rip+0x1476d]        # 0x14001c5f0
   140007e83:	mov    eax,DWORD PTR [rdi+0x70]
   140007e86:	cmp    DWORD PTR [rdi+0x7c],eax
   140007e89:	jae    0x140007eeb
   140007e8b:	jmp    0x140007eaf
   140007e8d:	test   r15d,r15d
   140007e90:	je     0x1400078ca
   140007e96:	movzx  eax,BYTE PTR [r13+0x0]
   140007e9b:	mov    ecx,esi
   140007e9d:	inc    r13
   140007ea0:	shl    eax,cl
   140007ea2:	dec    r15d
   140007ea5:	mov    QWORD PTR [rbp-0x18],r13
   140007ea9:	add    r12d,eax
   140007eac:	add    esi,0x8
   140007eaf:	cmp    esi,0x3
   140007eb2:	jb     0x140007e8d
   140007eb4:	mov    eax,DWORD PTR [rdi+0x7c]
   140007eb7:	movzx  ecx,r12w
   140007ebb:	shr    r12d,0x3
   140007ebf:	movzx  eax,WORD PTR [r8+rax*2]
   140007ec4:	and    cx,dx
   140007ec7:	mov    WORD PTR [rdi+rax*2+0x88],cx
   140007ecf:	inc    DWORD PTR [rdi+0x7c]
   140007ed2:	add    esi,0xfffffffd
   140007ed5:	jmp    0x140007e83
   140007ed7:	mov    eax,DWORD PTR [rdi+0x7c]
   140007eda:	movzx  ecx,WORD PTR [r8+rax*2]
   140007edf:	mov    WORD PTR [rdi+rcx*2+0x88],r11w
   140007ee8:	inc    DWORD PTR [rdi+0x7c]
   140007eeb:	cmp    DWORD PTR [rdi+0x7c],0x13
   140007eef:	jb     0x140007ed7
   140007ef1:	lea    rcx,[rdi+0x68]
   140007ef5:	lea    rax,[rdi+0x548]
   140007efc:	lea    r9,[rdi+0x80]
   140007f03:	mov    DWORD PTR [rcx],edx
   140007f05:	mov    QWORD PTR [r9],rax
   140007f08:	mov    QWORD PTR [rdi+0x58],rax
   140007f0c:	lea    rax,[rdi+0x308]
   140007f13:	lea    rdx,[rdi+0x88]
   140007f1a:	mov    QWORD PTR [rsp+0x28],rax
   140007f1f:	mov    QWORD PTR [rsp+0x20],rcx
   140007f24:	xor    ecx,ecx
   140007f26:	lea    r8d,[rcx+0x13]
   140007f2a:	call   0x140008e24
   140007f2f:	mov    r10,QWORD PTR [rbp-0x10]
   140007f33:	xor    r11d,r11d
   140007f36:	mov    DWORD PTR [rbp+0x48],eax
   140007f39:	lea    edx,[r11+0x10]
   140007f3d:	test   eax,eax
   140007f3f:	je     0x140007f5f
   140007f41:	mov    r8d,DWORD PTR [rbp+0x60]
   140007f45:	mov    r9d,DWORD PTR [rbp+0x58]
   140007f49:	lea    rax,[rip+0x147d0]        # 0x14001c720
   140007f50:	mov    QWORD PTR [r14+0x20],rax
   140007f54:	mov    DWORD PTR [rdi],0x1b
   140007f5a:	jmp    0x140007473
   140007f5f:	mov    r8d,0x11
   140007f65:	mov    DWORD PTR [rdi+0x7c],r11d
   140007f69:	mov    DWORD PTR [rdi],r8d
   140007f6c:	jmp    0x140007f74
   140007f6e:	mov    r8d,0x11
   140007f74:	mov    eax,DWORD PTR [rdi+0x78]
   140007f77:	add    eax,DWORD PTR [rdi+0x74]
   140007f7a:	cmp    DWORD PTR [rdi+0x7c],eax
   140007f7d:	jae    0x14000819e
   140007f83:	jmp    0x140007fa7
   140007f85:	test   r15d,r15d
   140007f88:	je     0x1400078ca
   140007f8e:	movzx  eax,BYTE PTR [r13+0x0]
   140007f93:	mov    ecx,esi
   140007f95:	inc    r13
   140007f98:	shl    eax,cl
   140007f9a:	dec    r15d
   140007f9d:	mov    QWORD PTR [rbp-0x18],r13
   140007fa1:	add    r12d,eax
   140007fa4:	add    esi,0x8
   140007fa7:	mov    ecx,DWORD PTR [rdi+0x68]
   140007faa:	mov    eax,0x1
   140007faf:	shl    eax,cl
   140007fb1:	lea    ecx,[rax-0x1]
   140007fb4:	mov    eax,r12d
   140007fb7:	and    rcx,rax
   140007fba:	mov    rax,QWORD PTR [rdi+0x58]
   140007fbe:	mov    eax,DWORD PTR [rax+rcx*4]
   140007fc1:	mov    ecx,eax
   140007fc3:	mov    DWORD PTR [rbp-0x24],eax
   140007fc6:	shr    ecx,0x8
   140007fc9:	movzx  ecx,cl
   140007fcc:	cmp    ecx,esi
   140007fce:	ja     0x140007f85
   140007fd0:	mov    ecx,eax
   140007fd2:	shr    ecx,0x10
   140007fd5:	cmp    cx,dx
   140007fd8:	jae    0x14000802e
   140007fda:	shr    eax,0x8
   140007fdd:	movzx  ecx,al
   140007fe0:	cmp    esi,ecx
   140007fe2:	jae    0x14000800e
   140007fe4:	test   r15d,r15d
   140007fe7:	je     0x1400078ca
   140007fed:	movzx  eax,BYTE PTR [r13+0x0]
   140007ff2:	mov    ecx,esi
   140007ff4:	inc    r13
   140007ff7:	shl    eax,cl
   140007ff9:	add    esi,0x8
   140007ffc:	dec    r15d
   140007fff:	add    r12d,eax
   140008002:	movzx  eax,BYTE PTR [rbp-0x23]
   140008006:	mov    QWORD PTR [rbp-0x18],r13
   14000800a:	cmp    esi,eax
   14000800c:	jb     0x140007fe4
   14000800e:	movzx  ecx,BYTE PTR [rbp-0x23]
   140008012:	movzx  eax,WORD PTR [rbp-0x22]
   140008016:	shr    r12d,cl
   140008019:	sub    esi,ecx
   14000801b:	mov    ecx,DWORD PTR [rdi+0x7c]
   14000801e:	mov    WORD PTR [rdi+rcx*2+0x88],ax
   140008026:	inc    DWORD PTR [rdi+0x7c]
   140008029:	jmp    0x140008161
   14000802e:	cmp    WORD PTR [rbp-0x22],dx
   140008032:	jne    0x140008097
   140008034:	movzx  edx,BYTE PTR [rbp-0x23]
   140008038:	lea    r8d,[rdx+0x2]
   14000803c:	jmp    0x140008060
   14000803e:	test   r15d,r15d
   140008041:	je     0x1400078ca
   140008047:	movzx  eax,BYTE PTR [r13+0x0]
   14000804c:	mov    ecx,esi
   14000804e:	inc    r13
   140008051:	shl    eax,cl
   140008053:	dec    r15d
   140008056:	mov    QWORD PTR [rbp-0x18],r13
   14000805a:	add    r12d,eax
   14000805d:	add    esi,0x8
   140008060:	cmp    esi,r8d
   140008063:	jb     0x14000803e
   140008065:	mov    eax,DWORD PTR [rdi+0x7c]
   140008068:	mov    ecx,edx
   14000806a:	sub    esi,edx
   14000806c:	shr    r12d,cl
   14000806f:	test   eax,eax
   140008071:	je     0x140008177
   140008077:	mov    edx,r12d
   14000807a:	dec    eax
   14000807c:	shr    r12d,0x2
   140008080:	movzx  r9d,WORD PTR [rdi+rax*2+0x88]
   140008089:	and    edx,0x3
   14000808c:	add    edx,0x3
   14000808f:	add    esi,0xfffffffe
   140008092:	jmp    0x140008135
   140008097:	cmp    WORD PTR [rbp-0x22],r8w
   14000809c:	movzx  r8d,BYTE PTR [rbp-0x23]
   1400080a1:	jne    0x1400080e9
   1400080a3:	lea    edx,[r8+0x3]
   1400080a7:	jmp    0x1400080cb
   1400080a9:	test   r15d,r15d
   1400080ac:	je     0x1400078ca
   1400080b2:	movzx  eax,BYTE PTR [r13+0x0]
   1400080b7:	mov    ecx,esi
   1400080b9:	inc    r13
   1400080bc:	shl    eax,cl
   1400080be:	dec    r15d
   1400080c1:	mov    QWORD PTR [rbp-0x18],r13
   1400080c5:	add    r12d,eax
   1400080c8:	add    esi,0x8
   1400080cb:	cmp    esi,edx
   1400080cd:	jb     0x1400080a9
   1400080cf:	mov    ecx,r8d
   1400080d2:	mov    eax,0xfffffffd
   1400080d7:	shr    r12d,cl
   1400080da:	mov    edx,r12d
   1400080dd:	and    edx,0x7
   1400080e0:	add    edx,0x3
   1400080e3:	shr    r12d,0x3
   1400080e7:	jmp    0x14000812d
   1400080e9:	lea    edx,[r8+0x7]
   1400080ed:	jmp    0x140008111
   1400080ef:	test   r15d,r15d
   1400080f2:	je     0x1400078ca
   1400080f8:	movzx  eax,BYTE PTR [r13+0x0]
   1400080fd:	mov    ecx,esi
   1400080ff:	inc    r13
   140008102:	shl    eax,cl
   140008104:	dec    r15d
   140008107:	mov    QWORD PTR [rbp-0x18],r13
   14000810b:	add    r12d,eax
   14000810e:	add    esi,0x8
   140008111:	cmp    esi,edx
   140008113:	jb     0x1400080ef
   140008115:	mov    ecx,r8d
   140008118:	mov    eax,0xfffffff9
   14000811d:	shr    r12d,cl
   140008120:	mov    edx,r12d
   140008123:	and    edx,0x7f
   140008126:	add    edx,0xb
   140008129:	shr    r12d,0x7
   14000812d:	sub    eax,r8d
   140008130:	mov    r9d,r11d
   140008133:	add    esi,eax
   140008135:	mov    eax,DWORD PTR [rdi+0x7c]
   140008138:	lea    ecx,[rdx+rax*1]
   14000813b:	mov    eax,DWORD PTR [rdi+0x78]
   14000813e:	add    eax,DWORD PTR [rdi+0x74]
   140008141:	cmp    ecx,eax
   140008143:	ja     0x14000818d
   140008145:	test   edx,edx
   140008147:	je     0x14000815c
   140008149:	mov    eax,DWORD PTR [rdi+0x7c]
   14000814c:	mov    WORD PTR [rdi+rax*2+0x88],r9w
   140008155:	inc    DWORD PTR [rdi+0x7c]
   140008158:	dec    edx
   14000815a:	jne    0x140008149
   14000815c:	mov    edx,0x10
   140008161:	mov    eax,DWORD PTR [rdi+0x78]
   140008164:	add    eax,DWORD PTR [rdi+0x74]
   140008167:	cmp    DWORD PTR [rdi+0x7c],eax
   14000816a:	jae    0x14000819e
   14000816c:	mov    r8d,0x11
   140008172:	jmp    0x140007fa7
   140008177:	lea    rax,[rip+0x14582]        # 0x14001c700
   14000817e:	mov    QWORD PTR [r14+0x20],rax
   140008182:	mov    DWORD PTR [rdi],0x1b
   140008188:	jmp    0x1400079a9
   14000818d:	lea    rax,[rip+0x1456c]        # 0x14001c700
   140008194:	mov    QWORD PTR [r14+0x20],rax
   140008198:	mov    DWORD PTR [rdi],0x1b
   14000819e:	cmp    DWORD PTR [rdi],0x1b
   1400081a1:	mov    r8d,DWORD PTR [rbp+0x60]
   1400081a5:	mov    r9d,DWORD PTR [rbp+0x58]
   1400081a9:	mov    edx,0x10
   1400081ae:	lea    eax,[rdx-0x9]
   1400081b1:	je     0x140007478
   1400081b7:	mov    r8d,DWORD PTR [rdi+0x74]
   1400081bb:	lea    rax,[rdi+0x548]
   1400081c2:	lea    r13,[rdi+0x308]
   1400081c9:	mov    QWORD PTR [rdi+0x80],rax
   1400081d0:	mov    QWORD PTR [rdi+0x58],rax
   1400081d4:	lea    rax,[rdi+0x68]
   1400081d8:	lea    rdx,[rdi+0x88]
   1400081df:	lea    r9,[rdi+0x80]
   1400081e6:	mov    ecx,0x1
   1400081eb:	mov    QWORD PTR [rsp+0x28],r13
   1400081f0:	mov    DWORD PTR [rax],0x9
   1400081f6:	mov    QWORD PTR [rsp+0x20],rax
   1400081fb:	call   0x140008e24
   140008200:	xor    r11d,r11d
   140008203:	mov    DWORD PTR [rbp+0x48],eax
   140008206:	test   eax,eax
   140008208:	je     0x140008227
   14000820a:	mov    r13,QWORD PTR [rbp-0x18]
   14000820e:	mov    ebx,DWORD PTR [rbp+0x50]
   140008211:	lea    rax,[rip+0x144c8]        # 0x14001c6e0
   140008218:	mov    QWORD PTR [r14+0x20],rax
   14000821c:	mov    DWORD PTR [rdi],0x1b
   140008222:	jmp    0x1400079a5
   140008227:	mov    rax,QWORD PTR [rdi+0x80]
   14000822e:	mov    r8d,DWORD PTR [rdi+0x78]
   140008232:	lea    rcx,[rdi+0x6c]
   140008236:	mov    QWORD PTR [rdi+0x60],rax
   14000823a:	mov    eax,DWORD PTR [rdi+0x74]
   14000823d:	mov    DWORD PTR [rcx],0x6
   140008243:	mov    QWORD PTR [rsp+0x28],r13
   140008248:	mov    QWORD PTR [rsp+0x20],rcx
   14000824d:	lea    r9,[rdi+0x80]
   140008254:	lea    rdx,[rdi+rax*2+0x88]
   14000825c:	mov    ecx,0x2
   140008261:	call   0x140008e24
   140008266:	mov    r13,QWORD PTR [rbp-0x18]
   14000826a:	mov    r8d,DWORD PTR [rbp+0x60]
   14000826e:	mov    r9d,DWORD PTR [rbp+0x58]
   140008272:	mov    r10,QWORD PTR [rbp-0x10]
   140008276:	mov    ebx,DWORD PTR [rbp+0x50]
   140008279:	xor    r11d,r11d
   14000827c:	mov    DWORD PTR [rbp+0x48],eax
   14000827f:	test   eax,eax
   140008281:	je     0x14000828f
   140008283:	lea    rax,[rip+0x1443e]        # 0x14001c6c8
   14000828a:	jmp    0x140007a0e
   14000828f:	mov    DWORD PTR [rdi],0x12
   140008295:	cmp    r15d,0x6
   140008299:	jb     0x1400082e4
   14000829b:	cmp    r9d,0x102
   1400082a2:	jb     0x1400082e4
   1400082a4:	mov    QWORD PTR [r14+0x10],r10
   1400082a8:	mov    DWORD PTR [r14+0x18],r9d
   1400082ac:	mov    QWORD PTR [r14],r13
   1400082af:	mov    DWORD PTR [r14+0x8],r15d
   1400082b3:	mov    edx,r8d
   1400082b6:	mov    rcx,r14
   1400082b9:	mov    DWORD PTR [rdi+0x40],r12d
   1400082bd:	mov    DWORD PTR [rdi+0x44],esi
   1400082c0:	call   0x1400089c4
   1400082c5:	mov    r13,QWORD PTR [r14]
   1400082c8:	mov    r10,QWORD PTR [r14+0x10]
   1400082cc:	mov    r9d,DWORD PTR [r14+0x18]
   1400082d0:	mov    r15d,DWORD PTR [r14+0x8]
   1400082d4:	mov    r12d,DWORD PTR [rdi+0x40]
   1400082d8:	mov    esi,DWORD PTR [rdi+0x44]
   1400082db:	mov    QWORD PTR [rbp-0x18],r13
   1400082df:	jmp    0x140007baa
   1400082e4:	mov    ecx,DWORD PTR [rdi+0x68]
   1400082e7:	mov    r11,QWORD PTR [rdi+0x58]
   1400082eb:	mov    eax,0x1
   1400082f0:	shl    eax,cl
   1400082f2:	lea    ecx,[rax-0x1]
   1400082f5:	mov    eax,r12d
   1400082f8:	and    rcx,rax
   1400082fb:	mov    eax,DWORD PTR [r11+rcx*4]
   1400082ff:	jmp    0x14000833d
   140008301:	test   r15d,r15d
   140008304:	je     0x1400078ca
   14000830a:	movzx  eax,BYTE PTR [r13+0x0]
   14000830f:	mov    ecx,esi
   140008311:	inc    r13
   140008314:	shl    eax,cl
   140008316:	mov    ecx,DWORD PTR [rdi+0x68]
   140008319:	dec    r15d
   14000831c:	add    r12d,eax
   14000831f:	mov    eax,0x1
   140008324:	add    esi,0x8
   140008327:	shl    eax,cl
   140008329:	mov    QWORD PTR [rbp-0x18],r13
   14000832d:	lea    ecx,[rax-0x1]
   140008330:	mov    eax,r12d
   140008333:	and    rcx,rax
   140008336:	mov    rax,QWORD PTR [rdi+0x58]
   14000833a:	mov    eax,DWORD PTR [rax+rcx*4]
   14000833d:	mov    ecx,eax
   14000833f:	shr    ecx,0x8
   140008342:	movzx  ecx,cl
   140008345:	cmp    ecx,esi
   140008347:	ja     0x140008301
   140008349:	test   al,al
   14000834b:	je     0x14000840b
   140008351:	test   al,0xf0
   140008353:	jne    0x14000840b
   140008359:	mov    r10d,eax
   14000835c:	movzx  ecx,al
   14000835f:	mov    r9d,0x1
   140008365:	shr    r10d,0x8
   140008369:	mov    edx,eax
   14000836b:	mov    DWORD PTR [rbp-0x24],eax
   14000836e:	movzx  r8d,r10b
   140008372:	shr    eax,0x10
   140008375:	add    ecx,r8d
   140008378:	shl    r9d,cl
   14000837b:	mov    ecx,r8d
   14000837e:	dec    r9d
   140008381:	and    r9d,r12d
   140008384:	shr    r9d,cl
   140008387:	add    r9d,eax
   14000838a:	mov    eax,DWORD PTR [r11+r9*4]
   14000838e:	mov    ecx,eax
   140008390:	shr    ecx,0x8
   140008393:	movzx  r8d,cl
   140008397:	movzx  ecx,r10b
   14000839b:	add    r8d,ecx
   14000839e:	jmp    0x1400083fd
   1400083a0:	test   r15d,r15d
   1400083a3:	je     0x1400078ca
   1400083a9:	movzx  eax,BYTE PTR [r13+0x0]
   1400083ae:	movzx  r9d,BYTE PTR [rbp-0x23]
   1400083b3:	mov    ecx,esi
   1400083b5:	shl    eax,cl
   1400083b7:	mov    r8d,0x1
   1400083bd:	movzx  ecx,dl
   1400083c0:	add    ecx,r9d
   1400083c3:	add    r12d,eax
   1400083c6:	movzx  eax,WORD PTR [rbp-0x22]
   1400083ca:	shl    r8d,cl
   1400083cd:	mov    ecx,r9d
   1400083d0:	inc    r13
   1400083d3:	dec    r8d
   1400083d6:	dec    r15d
   1400083d9:	add    esi,0x8
   1400083dc:	and    r8d,r12d
   1400083df:	mov    QWORD PTR [rbp-0x18],r13
   1400083e3:	shr    r8d,cl
   1400083e6:	add    r8d,eax
   1400083e9:	mov    rax,QWORD PTR [rdi+0x58]
   1400083ed:	mov    eax,DWORD PTR [rax+r8*4]
   1400083f1:	mov    ecx,eax
   1400083f3:	shr    ecx,0x8
   1400083f6:	movzx  r8d,cl
   1400083fa:	add    r8d,r9d
   1400083fd:	cmp    r8d,esi
   140008400:	ja     0x1400083a0
   140008402:	movzx  ecx,BYTE PTR [rbp-0x23]
   140008406:	shr    r12d,cl
   140008409:	sub    esi,ecx
   14000840b:	mov    ecx,eax
   14000840d:	xor    r11d,r11d
   140008410:	shr    ecx,0x8
   140008413:	movzx  ecx,cl
   140008416:	shr    r12d,cl
   140008419:	sub    esi,ecx
   14000841b:	mov    ecx,eax
   14000841d:	shr    ecx,0x10
   140008420:	mov    DWORD PTR [rdi+0x48],ecx
   140008423:	test   al,al
   140008425:	jne    0x140008432
   140008427:	mov    DWORD PTR [rdi],0x17
   14000842d:	jmp    0x1400079a5
   140008432:	test   al,0x20
   140008434:	je     0x140008441
   140008436:	mov    DWORD PTR [rdi],0xb
   14000843c:	jmp    0x1400079a5
   140008441:	test   al,0x40
   140008443:	je     0x14000845b
   140008445:	lea    rax,[rip+0x1425c]        # 0x14001c6a8
   14000844c:	mov    QWORD PTR [r14+0x20],rax
   140008450:	mov    DWORD PTR [rdi],0x1b
   140008456:	jmp    0x1400079a5
   14000845b:	movzx  ecx,al
   14000845e:	mov    DWORD PTR [rdi],0x13
   140008464:	and    ecx,0xf
   140008467:	mov    DWORD PTR [rdi+0x50],ecx
   14000846a:	mov    edx,DWORD PTR [rdi+0x50]
   14000846d:	test   edx,edx
   14000846f:	je     0x1400084b2
   140008471:	cmp    esi,edx
   140008473:	jae    0x14000849c
   140008475:	test   r15d,r15d
   140008478:	je     0x1400078ca
   14000847e:	movzx  eax,BYTE PTR [r13+0x0]
   140008483:	mov    ecx,esi
   140008485:	inc    r13
   140008488:	shl    eax,cl
   14000848a:	add    esi,0x8
   14000848d:	dec    r15d
   140008490:	add    r12d,eax
   140008493:	mov    QWORD PTR [rbp-0x18],r13
   140008497:	cmp    esi,DWORD PTR [rdi+0x50]
   14000849a:	jb     0x140008475
   14000849c:	mov    ecx,edx
   14000849e:	mov    eax,0x1
   1400084a3:	shl    eax,cl
   1400084a5:	dec    eax
   1400084a7:	and    eax,r12d
   1400084aa:	shr    r12d,cl
   1400084ad:	add    DWORD PTR [rdi+0x48],eax
   1400084b0:	sub    esi,edx
   1400084b2:	mov    DWORD PTR [rdi],0x14
   1400084b8:	mov    ecx,DWORD PTR [rdi+0x6c]
   1400084bb:	mov    r11,QWORD PTR [rdi+0x60]
   1400084bf:	mov    eax,0x1
   1400084c4:	shl    eax,cl
   1400084c6:	lea    ecx,[rax-0x1]
   1400084c9:	mov    eax,r12d
   1400084cc:	and    rcx,rax
   1400084cf:	mov    eax,DWORD PTR [r11+rcx*4]
   1400084d3:	jmp    0x140008511
   1400084d5:	test   r15d,r15d
   1400084d8:	je     0x1400078ca
   1400084de:	movzx  eax,BYTE PTR [r13+0x0]
   1400084e3:	mov    ecx,esi
   1400084e5:	inc    r13
   1400084e8:	shl    eax,cl
   1400084ea:	mov    ecx,DWORD PTR [rdi+0x6c]
   1400084ed:	dec    r15d
   1400084f0:	add    r12d,eax
   1400084f3:	mov    eax,0x1
   1400084f8:	add    esi,0x8
   1400084fb:	shl    eax,cl
   1400084fd:	mov    QWORD PTR [rbp-0x18],r13
   140008501:	lea    ecx,[rax-0x1]
   140008504:	mov    eax,r12d
   140008507:	and    rcx,rax
   14000850a:	mov    rax,QWORD PTR [rdi+0x60]
   14000850e:	mov    eax,DWORD PTR [rax+rcx*4]
   140008511:	mov    ecx,eax
   140008513:	shr    ecx,0x8
   140008516:	movzx  ecx,cl
   140008519:	cmp    ecx,esi
   14000851b:	ja     0x1400084d5
   14000851d:	test   al,0xf0
   14000851f:	jne    0x1400085d7
   140008525:	mov    r10d,eax
   140008528:	movzx  ecx,al
   14000852b:	mov    r9d,0x1
   140008531:	shr    r10d,0x8
   140008535:	mov    edx,eax
   140008537:	mov    DWORD PTR [rbp-0x24],eax
   14000853a:	movzx  r8d,r10b
   14000853e:	shr    eax,0x10
   140008541:	add    ecx,r8d
   140008544:	shl    r9d,cl
   140008547:	mov    ecx,r8d
   14000854a:	dec    r9d
   14000854d:	and    r9d,r12d
   140008550:	shr    r9d,cl
   140008553:	add    r9d,eax
   140008556:	mov    eax,DWORD PTR [r11+r9*4]
   14000855a:	mov    ecx,eax
   14000855c:	shr    ecx,0x8
   14000855f:	movzx  r8d,cl
   140008563:	movzx  ecx,r10b
   140008567:	add    r8d,ecx
   14000856a:	jmp    0x1400085c9
   14000856c:	test   r15d,r15d
   14000856f:	je     0x1400078ca
   140008575:	movzx  eax,BYTE PTR [r13+0x0]
   14000857a:	movzx  r9d,BYTE PTR [rbp-0x23]
   14000857f:	mov    ecx,esi
   140008581:	shl    eax,cl
   140008583:	mov    r8d,0x1
   140008589:	movzx  ecx,dl
   14000858c:	add    ecx,r9d
   14000858f:	add    r12d,eax
   140008592:	movzx  eax,WORD PTR [rbp-0x22]
   140008596:	shl    r8d,cl
   140008599:	mov    ecx,r9d
   14000859c:	inc    r13
   14000859f:	dec    r8d
   1400085a2:	dec    r15d
   1400085a5:	add    esi,0x8
   1400085a8:	and    r8d,r12d
   1400085ab:	mov    QWORD PTR [rbp-0x18],r13
   1400085af:	shr    r8d,cl
   1400085b2:	add    r8d,eax
   1400085b5:	mov    rax,QWORD PTR [rdi+0x60]
   1400085b9:	mov    eax,DWORD PTR [rax+r8*4]
   1400085bd:	mov    ecx,eax
   1400085bf:	shr    ecx,0x8
   1400085c2:	movzx  r8d,cl
   1400085c6:	add    r8d,r9d
   1400085c9:	cmp    r8d,esi
   1400085cc:	ja     0x14000856c
   1400085ce:	movzx  ecx,BYTE PTR [rbp-0x23]
   1400085d2:	shr    r12d,cl
   1400085d5:	sub    esi,ecx
   1400085d7:	mov    r8d,DWORD PTR [rbp+0x60]
   1400085db:	mov    r9d,DWORD PTR [rbp+0x58]
   1400085df:	mov    r10,QWORD PTR [rbp-0x10]
   1400085e3:	mov    ecx,eax
   1400085e5:	shr    ecx,0x8
   1400085e8:	movzx  ecx,cl
   1400085eb:	shr    r12d,cl
   1400085ee:	sub    esi,ecx
   1400085f0:	test   al,0x40
   1400085f2:	je     0x14000860a
   1400085f4:	lea    rax,[rip+0x14095]        # 0x14001c690
   1400085fb:	mov    QWORD PTR [r14+0x20],rax
   1400085ff:	mov    DWORD PTR [rdi],0x1b
   140008605:	jmp    0x140007d9c
   14000860a:	mov    ecx,eax
   14000860c:	mov    DWORD PTR [rdi],0x15
   140008612:	shr    ecx,0x10
   140008615:	mov    DWORD PTR [rdi+0x4c],ecx
   140008618:	movzx  ecx,al
   14000861b:	and    ecx,0xf
   14000861e:	xor    r11d,r11d
   140008621:	mov    DWORD PTR [rdi+0x50],ecx
   140008624:	mov    edx,DWORD PTR [rdi+0x50]
   140008627:	test   edx,edx
   140008629:	je     0x14000866c
   14000862b:	cmp    esi,edx
   14000862d:	jae    0x140008656
   14000862f:	test   r15d,r15d
   140008632:	je     0x1400078ca
   140008638:	movzx  eax,BYTE PTR [r13+0x0]
   14000863d:	mov    ecx,esi
   14000863f:	inc    r13
   140008642:	shl    eax,cl
   140008644:	add    esi,0x8
   140008647:	dec    r15d
   14000864a:	add    r12d,eax
   14000864d:	mov    QWORD PTR [rbp-0x18],r13
   140008651:	cmp    esi,DWORD PTR [rdi+0x50]
   140008654:	jb     0x14000862f
   140008656:	mov    ecx,edx
   140008658:	mov    eax,0x1
   14000865d:	shl    eax,cl
   14000865f:	dec    eax
   140008661:	and    eax,r12d
   140008664:	shr    r12d,cl
   140008667:	add    DWORD PTR [rdi+0x4c],eax
   14000866a:	sub    esi,edx
   14000866c:	mov    eax,DWORD PTR [rdi+0x30]
   14000866f:	sub    eax,r9d
   140008672:	add    eax,r8d
   140008675:	cmp    DWORD PTR [rdi+0x4c],eax
   140008678:	jbe    0x140008686
   14000867a:	lea    rax,[rip+0x13fef]        # 0x14001c670
   140008681:	jmp    0x140007a0e
   140008686:	mov    DWORD PTR [rdi],0x16
   14000868c:	test   r9d,r9d
   14000868f:	je     0x1400078ca
   140008695:	mov    ecx,DWORD PTR [rdi+0x4c]
   140008698:	mov    eax,r8d
   14000869b:	sub    eax,r9d
   14000869e:	cmp    ecx,eax
   1400086a0:	jbe    0x1400086d1
   1400086a2:	sub    ecx,eax
   1400086a4:	mov    eax,DWORD PTR [rdi+0x34]
   1400086a7:	cmp    ecx,eax
   1400086a9:	jbe    0x1400086c0
   1400086ab:	mov    edx,DWORD PTR [rdi+0x2c]
   1400086ae:	sub    ecx,eax
   1400086b0:	sub    edx,ecx
   1400086b2:	jmp    0x1400086c4
   1400086b4:	lea    rax,[rip+0x13f8d]        # 0x14001c648
   1400086bb:	jmp    0x140007a0e
   1400086c0:	sub    eax,ecx
   1400086c2:	mov    edx,eax
   1400086c4:	mov    eax,DWORD PTR [rdi+0x48]
   1400086c7:	add    rdx,QWORD PTR [rdi+0x38]
   1400086cb:	cmp    ecx,eax
   1400086cd:	jbe    0x1400086dc
   1400086cf:	jmp    0x1400086da
   1400086d1:	mov    eax,DWORD PTR [rdi+0x48]
   1400086d4:	mov    rdx,r10
   1400086d7:	sub    rdx,rcx
   1400086da:	mov    ecx,eax
   1400086dc:	cmp    ecx,r9d
   1400086df:	cmova  ecx,r9d
   1400086e3:	sub    r9d,ecx
   1400086e6:	sub    eax,ecx
   1400086e8:	sub    rdx,r10
   1400086eb:	mov    DWORD PTR [rbp+0x58],r9d
   1400086ef:	mov    DWORD PTR [rdi+0x48],eax
   1400086f2:	mov    al,BYTE PTR [rdx+r10*1]
   1400086f6:	mov    BYTE PTR [r10],al
   1400086f9:	inc    r10
   1400086fc:	dec    ecx
   1400086fe:	jne    0x1400086f2
   140008700:	mov    QWORD PTR [rbp-0x10],r10
   140008704:	lea    edx,[rcx+0x10]
   140008707:	lea    eax,[rcx+0x7]
   14000870a:	cmp    DWORD PTR [rdi+0x48],r11d
   14000870e:	jne    0x140007478
   140008714:	mov    DWORD PTR [rdi],0x12
   14000871a:	jmp    0x140007478
   14000871f:	sub    ecx,0x17
   140008722:	je     0x140008871
   140008728:	dec    ecx
   14000872a:	je     0x140008756
   14000872c:	dec    ecx
   14000872e:	je     0x140008822
   140008734:	dec    ecx
   140008736:	je     0x1400088c8
   14000873c:	dec    ecx
   14000873e:	je     0x1400088b1
   140008744:	dec    ecx
   140008746:	jne    0x1400074cb
   14000874c:	mov    eax,0xfffffffc
   140008751:	jmp    0x1400074d0
   140008756:	cmp    DWORD PTR [rdi+0x8],r11d
   14000875a:	je     0x14000881c
   140008760:	jmp    0x140008784
   140008762:	test   r15d,r15d
   140008765:	je     0x1400078ca
   14000876b:	movzx  eax,BYTE PTR [r13+0x0]
   140008770:	mov    ecx,esi
   140008772:	inc    r13
   140008775:	shl    eax,cl
   140008777:	dec    r15d
   14000877a:	mov    QWORD PTR [rbp-0x18],r13
   14000877e:	add    r12d,eax
   140008781:	add    esi,0x8
   140008784:	cmp    esi,0x20
   140008787:	jb     0x140008762
   140008789:	sub    r8d,r9d
   14000878c:	add    DWORD PTR [r14+0x1c],r8d
   140008790:	add    DWORD PTR [rdi+0x1c],r8d
   140008794:	test   r8d,r8d
   140008797:	je     0x1400087cd
   140008799:	mov    ecx,DWORD PTR [rdi+0x18]
   14000879c:	mov    eax,r8d
   14000879f:	mov    rdx,r10
   1400087a2:	sub    rdx,rax
   1400087a5:	cmp    DWORD PTR [rdi+0x10],r11d
   1400087a9:	je     0x1400087b2
   1400087ab:	call   0x14000986c
   1400087b0:	jmp    0x1400087b7
   1400087b2:	call   0x14000928c
   1400087b7:	mov    r9d,DWORD PTR [rbp+0x58]
   1400087bb:	mov    r10,QWORD PTR [rbp-0x10]
   1400087bf:	xor    r11d,r11d
   1400087c2:	mov    DWORD PTR [rdi+0x18],eax
   1400087c5:	lea    edx,[r11+0x10]
   1400087c9:	mov    DWORD PTR [r14+0x4c],eax
   1400087cd:	mov    ecx,r12d
   1400087d0:	mov    eax,r12d
   1400087d3:	mov    r8d,r9d
   1400087d6:	shl    eax,0x10
   1400087d9:	and    ecx,0xff00
   1400087df:	mov    DWORD PTR [rbp+0x60],r9d
   1400087e3:	add    ecx,eax
   1400087e5:	mov    eax,r12d
   1400087e8:	shr    eax,0x8
   1400087eb:	shl    ecx,0x8
   1400087ee:	and    eax,0xff00
   1400087f3:	add    ecx,eax
   1400087f5:	mov    eax,r12d
   1400087f8:	shr    eax,0x18
   1400087fb:	add    ecx,eax
   1400087fd:	cmp    DWORD PTR [rdi+0x10],r11d
   140008801:	cmovne ecx,r12d
   140008805:	cmp    ecx,DWORD PTR [rdi+0x18]
   140008808:	je     0x140008816
   14000880a:	lea    rax,[rip+0x13e1f]        # 0x14001c630
   140008811:	jmp    0x140007a78
   140008816:	mov    r12d,r11d
   140008819:	mov    esi,r11d
   14000881c:	mov    DWORD PTR [rdi],0x19
   140008822:	cmp    DWORD PTR [rdi+0x8],r11d
   140008826:	je     0x1400088c2
   14000882c:	cmp    DWORD PTR [rdi+0x10],r11d
   140008830:	je     0x1400088c2
   140008836:	jmp    0x14000885a
   140008838:	test   r15d,r15d
   14000883b:	je     0x1400078ca
   140008841:	movzx  eax,BYTE PTR [r13+0x0]
   140008846:	mov    ecx,esi
   140008848:	inc    r13
   14000884b:	shl    eax,cl
   14000884d:	dec    r15d
   140008850:	mov    QWORD PTR [rbp-0x18],r13
   140008854:	add    r12d,eax
   140008857:	add    esi,0x8
   14000885a:	cmp    esi,0x20
   14000885d:	jb     0x140008838
   14000885f:	cmp    r12d,DWORD PTR [rdi+0x1c]
   140008863:	je     0x1400088bc
   140008865:	lea    rax,[rip+0x13dac]        # 0x14001c618
   14000886c:	jmp    0x140007a78
   140008871:	test   r9d,r9d
   140008874:	je     0x1400078ca
   14000887a:	mov    al,BYTE PTR [rdi+0x48]
   14000887d:	mov    BYTE PTR [r10],al
   140008880:	inc    r10
   140008883:	dec    r9d
   140008886:	mov    DWORD PTR [rdi],0x12
   14000888c:	jmp    0x14000746b
   140008891:	mov    QWORD PTR [r14+0x10],r10
   140008895:	mov    DWORD PTR [r14+0x18],r9d
   140008899:	mov    QWORD PTR [r14],r13
   14000889c:	mov    DWORD PTR [r14+0x8],r15d
   1400088a0:	mov    eax,0x2
   1400088a5:	mov    DWORD PTR [rdi+0x40],r12d
   1400088a9:	mov    DWORD PTR [rdi+0x44],esi
   1400088ac:	jmp    0x1400074d0
   1400088b1:	mov    r13d,0xfffffffd
   1400088b7:	jmp    0x1400078ce
   1400088bc:	mov    r12d,r11d
   1400088bf:	mov    esi,r11d
   1400088c2:	mov    DWORD PTR [rdi],0x1a
   1400088c8:	mov    r13d,0x1
   1400088ce:	jmp    0x1400078ce
   1400088d3:	sub    ebx,DWORD PTR [r14+0x18]
   1400088d7:	mov    esi,DWORD PTR [rbp-0x20]
   1400088da:	sub    esi,DWORD PTR [r14+0x8]
   1400088de:	add    DWORD PTR [r14+0x1c],ebx
   1400088e2:	add    DWORD PTR [r14+0xc],esi
   1400088e6:	add    DWORD PTR [rdi+0x1c],ebx
   1400088e9:	cmp    DWORD PTR [rdi+0x8],r12d
   1400088ed:	je     0x14000891b
   1400088ef:	test   ebx,ebx
   1400088f1:	je     0x14000891b
   1400088f3:	mov    rdx,QWORD PTR [r14+0x10]
   1400088f7:	mov    ecx,DWORD PTR [rdi+0x18]
   1400088fa:	mov    eax,ebx
   1400088fc:	sub    rdx,rax
   1400088ff:	mov    r8d,ebx
   140008902:	cmp    DWORD PTR [rdi+0x10],r12d
   140008906:	je     0x14000890f
   140008908:	call   0x14000986c
   14000890d:	jmp    0x140008914
   14000890f:	call   0x14000928c
   140008914:	mov    DWORD PTR [rdi+0x18],eax
   140008917:	mov    DWORD PTR [r14+0x4c],eax
   14000891b:	mov    eax,DWORD PTR [rdi+0x4]
   14000891e:	mov    edx,0x80
   140008923:	neg    eax
   140008925:	mov    eax,r12d
   140008928:	sbb    ecx,ecx
   14000892a:	and    ecx,0x40
   14000892d:	cmp    DWORD PTR [rdi],0xb
   140008930:	cmove  eax,edx
   140008933:	add    ecx,eax
   140008935:	add    ecx,DWORD PTR [rdi+0x44]
   140008938:	mov    DWORD PTR [r14+0x48],ecx
   14000893c:	test   esi,esi
   14000893e:	jne    0x140008944
   140008940:	test   ebx,ebx
   140008942:	je     0x14000894a
   140008944:	cmp    DWORD PTR [rbp+0x50],0x4
   140008948:	jne    0x140008956
   14000894a:	mov    eax,0xfffffffb
   14000894f:	test   r13d,r13d
   140008952:	cmove  r13d,eax
   140008956:	mov    eax,r13d
   140008959:	jmp    0x1400074d0
   14000895e:	int3   
   14000895f:	int3   
   140008960:	rex push rbx
   140008962:	sub    rsp,0x20
   140008966:	mov    rbx,rcx
   140008969:	test   rcx,rcx
   14000896c:	je     0x1400089a4
   14000896e:	mov    rax,QWORD PTR [rcx+0x28]
   140008972:	test   rax,rax
   140008975:	je     0x1400089a4
   140008977:	mov    r8,QWORD PTR [rcx+0x38]
   14000897b:	test   r8,r8
   14000897e:	je     0x1400089a4
   140008980:	mov    rdx,QWORD PTR [rax+0x38]
   140008984:	test   rdx,rdx
   140008987:	je     0x140008990
   140008989:	mov    rcx,QWORD PTR [rcx+0x40]
   14000898d:	call   r8
   140008990:	mov    rdx,QWORD PTR [rbx+0x28]
   140008994:	mov    rcx,QWORD PTR [rbx+0x40]
   140008998:	call   QWORD PTR [rbx+0x38]
   14000899b:	and    QWORD PTR [rbx+0x28],0x0
   1400089a0:	xor    eax,eax
   1400089a2:	jmp    0x1400089a9
   1400089a4:	mov    eax,0xfffffffe
   1400089a9:	add    rsp,0x20
   1400089ad:	pop    rbx
   1400089ae:	ret    
   1400089af:	int3   
   1400089b0:	imul   edx,r8d
   1400089b4:	mov    ecx,edx
   1400089b6:	jmp    0x14000b304
   1400089bb:	int3   
   1400089bc:	mov    rcx,rdx
   1400089bf:	jmp    0x14000b490
   1400089c4:	rex push rbx
   1400089c6:	push   rbp
   1400089c7:	push   rsi
   1400089c8:	push   rdi
   1400089c9:	push   r12
   1400089cb:	push   r13
   1400089cd:	push   r14
   1400089cf:	push   r15
   1400089d1:	sub    rsp,0x38
   1400089d5:	mov    r12,QWORD PTR [rcx+0x28]
   1400089d9:	mov    r14d,DWORD PTR [rcx+0x8]
   1400089dd:	mov    rdi,QWORD PTR [rcx]
   1400089e0:	mov    r8,QWORD PTR [rcx+0x10]
   1400089e4:	mov    r9,QWORD PTR [r12+0x58]
   1400089e9:	mov    rsi,QWORD PTR [r12+0x60]
   1400089ee:	mov    r13d,DWORD PTR [r12+0x34]
   1400089f3:	mov    ebx,DWORD PTR [r12+0x40]
   1400089f8:	mov    r10d,DWORD PTR [r12+0x44]
   1400089fd:	mov    rbp,rcx
   140008a00:	mov    ecx,DWORD PTR [rcx+0x18]
   140008a03:	dec    r8
   140008a06:	sub    edx,ecx
   140008a08:	lea    r15d,[rcx-0x101]
   140008a0f:	mov    ecx,DWORD PTR [r12+0x68]
   140008a14:	mov    eax,edx
   140008a16:	mov    rdx,r8
   140008a19:	dec    rdi
   140008a1c:	sub    rdx,rax
   140008a1f:	mov    eax,DWORD PTR [r12+0x2c]
   140008a24:	add    r14d,0xfffffffb
   140008a28:	mov    DWORD PTR [rsp+0x80],eax
   140008a2f:	mov    eax,DWORD PTR [r12+0x30]
   140008a34:	mov    QWORD PTR [rsp+0x10],rdx
   140008a39:	mov    DWORD PTR [rsp+0x98],eax
   140008a40:	mov    rax,QWORD PTR [r12+0x38]
   140008a45:	mov    edx,0x1
   140008a4a:	mov    QWORD PTR [rsp+0x18],rax
   140008a4f:	mov    eax,0x1
   140008a54:	add    r14,rdi
   140008a57:	shl    eax,cl
   140008a59:	mov    ecx,DWORD PTR [r12+0x6c]
   140008a5e:	add    r15,r8
   140008a61:	shl    edx,cl
   140008a63:	dec    eax
   140008a65:	mov    QWORD PTR [rsp+0x8],r9
   140008a6a:	dec    edx
   140008a6c:	mov    QWORD PTR [rsp],rsi
   140008a70:	mov    DWORD PTR [rsp+0x90],edx
   140008a77:	mov    edx,eax
   140008a79:	mov    QWORD PTR [rsp+0x20],rdx
   140008a7e:	cmp    r10d,0xf
   140008a82:	jae    0x140008aa2
   140008a84:	movzx  eax,BYTE PTR [rdi+0x1]
   140008a88:	mov    ecx,r10d
   140008a8b:	add    rdi,0x2
   140008a8f:	shl    eax,cl
   140008a91:	lea    ecx,[r10+0x8]
   140008a95:	add    ebx,eax
   140008a97:	movzx  eax,BYTE PTR [rdi]
   140008a9a:	shl    eax,cl
   140008a9c:	add    ebx,eax
   140008a9e:	add    r10d,0x10
   140008aa2:	mov    eax,ebx
   140008aa4:	and    rax,rdx
   140008aa7:	jmp    0x140008acb
   140008aa9:	test   dl,0x10
   140008aac:	jne    0x140008af5
   140008aae:	test   dl,0x40
   140008ab1:	jne    0x140008d88
   140008ab7:	mov    ecx,edx
   140008ab9:	mov    eax,0x1
   140008abe:	shr    r11d,0x10
   140008ac2:	shl    eax,cl
   140008ac4:	dec    eax
   140008ac6:	and    eax,ebx
   140008ac8:	add    eax,r11d
   140008acb:	mov    r11d,DWORD PTR [r9+rax*4]
   140008acf:	mov    eax,r11d
   140008ad2:	movzx  edx,r11b
   140008ad6:	shr    eax,0x8
   140008ad9:	movzx  ecx,al
   140008adc:	shr    ebx,cl
   140008ade:	sub    r10d,ecx
   140008ae1:	test   r11b,r11b
   140008ae4:	jne    0x140008aa9
   140008ae6:	inc    r8
   140008ae9:	shr    r11d,0x10
   140008aed:	mov    BYTE PTR [r8],r11b
   140008af0:	jmp    0x140008d74
   140008af5:	shr    r11d,0x10
   140008af9:	and    edx,0xf
   140008afc:	je     0x140008b29
   140008afe:	cmp    r10d,edx
   140008b01:	jae    0x140008b14
   140008b03:	inc    rdi
   140008b06:	mov    ecx,r10d
   140008b09:	movzx  eax,BYTE PTR [rdi]
   140008b0c:	shl    eax,cl
   140008b0e:	add    ebx,eax
   140008b10:	add    r10d,0x8
   140008b14:	mov    ecx,edx
   140008b16:	mov    eax,0x1
   140008b1b:	shl    eax,cl
   140008b1d:	dec    eax
   140008b1f:	and    eax,ebx
   140008b21:	shr    ebx,cl
   140008b23:	add    r11d,eax
   140008b26:	sub    r10d,edx
   140008b29:	cmp    r10d,0xf
   140008b2d:	jae    0x140008b4d
   140008b2f:	movzx  eax,BYTE PTR [rdi+0x1]
   140008b33:	mov    ecx,r10d
   140008b36:	add    rdi,0x2
   140008b3a:	shl    eax,cl
   140008b3c:	lea    ecx,[r10+0x8]
   140008b40:	add    ebx,eax
   140008b42:	movzx  eax,BYTE PTR [rdi]
   140008b45:	shl    eax,cl
   140008b47:	add    ebx,eax
   140008b49:	add    r10d,0x10
   140008b4d:	mov    ecx,DWORD PTR [rsp+0x90]
   140008b54:	mov    eax,ebx
   140008b56:	and    rcx,rax
   140008b59:	mov    esi,DWORD PTR [rsi+rcx*4]
   140008b5c:	jmp    0x140008b85
   140008b5e:	test   dl,0x40
   140008b61:	jne    0x140008da0
   140008b67:	movzx  eax,WORD PTR [rsp+0x8a]
   140008b6f:	mov    ecx,edx
   140008b71:	mov    edx,0x1
   140008b76:	shl    edx,cl
   140008b78:	mov    rcx,QWORD PTR [rsp]
   140008b7c:	dec    edx
   140008b7e:	and    edx,ebx
   140008b80:	add    edx,eax
   140008b82:	mov    esi,DWORD PTR [rcx+rdx*4]
   140008b85:	mov    eax,esi
   140008b87:	movzx  edx,sil
   140008b8b:	mov    DWORD PTR [rsp+0x88],esi
   140008b92:	shr    eax,0x8
   140008b95:	movzx  ecx,al
   140008b98:	shr    ebx,cl
   140008b9a:	sub    r10d,ecx
   140008b9d:	test   dl,0x10
   140008ba0:	je     0x140008b5e
   140008ba2:	and    edx,0xf
   140008ba5:	shr    esi,0x10
   140008ba8:	cmp    r10d,edx
   140008bab:	jae    0x140008bd4
   140008bad:	inc    rdi
   140008bb0:	mov    ecx,r10d
   140008bb3:	add    r10d,0x8
   140008bb7:	movzx  eax,BYTE PTR [rdi]
   140008bba:	shl    eax,cl
   140008bbc:	add    ebx,eax
   140008bbe:	cmp    r10d,edx
   140008bc1:	jae    0x140008bd4
   140008bc3:	inc    rdi
   140008bc6:	mov    ecx,r10d
   140008bc9:	movzx  eax,BYTE PTR [rdi]
   140008bcc:	shl    eax,cl
   140008bce:	add    ebx,eax
   140008bd0:	add    r10d,0x8
   140008bd4:	mov    ecx,edx
   140008bd6:	mov    eax,0x1
   140008bdb:	sub    r10d,edx
   140008bde:	shl    eax,cl
   140008be0:	dec    eax
   140008be2:	and    eax,ebx
   140008be4:	shr    ebx,cl
   140008be6:	add    esi,eax
   140008be8:	mov    eax,r8d
   140008beb:	sub    eax,DWORD PTR [rsp+0x10]
   140008bef:	cmp    esi,eax
   140008bf1:	jbe    0x140008d1b
   140008bf7:	mov    ecx,esi
   140008bf9:	sub    ecx,eax
   140008bfb:	cmp    ecx,DWORD PTR [rsp+0x98]
   140008c02:	ja     0x140008da9
   140008c08:	mov    rdx,QWORD PTR [rsp+0x18]
   140008c0d:	lea    r9,[rdx-0x1]
   140008c11:	test   r13d,r13d
   140008c14:	jne    0x140008c40
   140008c16:	mov    eax,DWORD PTR [rsp+0x80]
   140008c1d:	sub    eax,ecx
   140008c1f:	add    r9,rax
   140008c22:	cmp    ecx,r11d
   140008c25:	jae    0x140008cb4
   140008c2b:	sub    r11d,ecx
   140008c2e:	inc    r9
   140008c31:	inc    r8
   140008c34:	dec    ecx
   140008c36:	mov    al,BYTE PTR [r9]
   140008c39:	mov    BYTE PTR [r8],al
   140008c3c:	jne    0x140008c2e
   140008c3e:	jmp    0x140008cac
   140008c40:	mov    eax,r13d
   140008c43:	sub    eax,ecx
   140008c45:	cmp    r13d,ecx
   140008c48:	jae    0x140008c91
   140008c4a:	add    eax,DWORD PTR [rsp+0x80]
   140008c51:	sub    ecx,r13d
   140008c54:	add    r9,rax
   140008c57:	cmp    ecx,r11d
   140008c5a:	jae    0x140008cb4
   140008c5c:	sub    r11d,ecx
   140008c5f:	sub    r9,r8
   140008c62:	inc    r8
   140008c65:	dec    ecx
   140008c67:	mov    al,BYTE PTR [r9+r8*1]
   140008c6b:	mov    BYTE PTR [r8],al
   140008c6e:	jne    0x140008c62
   140008c70:	lea    r9,[rdx-0x1]
   140008c74:	cmp    r13d,r11d
   140008c77:	jae    0x140008cb4
   140008c79:	mov    ecx,r13d
   140008c7c:	sub    r11d,r13d
   140008c7f:	inc    r9
   140008c82:	inc    r8
   140008c85:	dec    ecx
   140008c87:	mov    al,BYTE PTR [r9]
   140008c8a:	mov    BYTE PTR [r8],al
   140008c8d:	jne    0x140008c7f
   140008c8f:	jmp    0x140008cac
   140008c91:	add    r9,rax
   140008c94:	cmp    ecx,r11d
   140008c97:	jae    0x140008cb4
   140008c99:	sub    r11d,ecx
   140008c9c:	inc    r9
   140008c9f:	inc    r8
   140008ca2:	dec    ecx
   140008ca4:	mov    al,BYTE PTR [r9]
   140008ca7:	mov    BYTE PTR [r8],al
   140008caa:	jne    0x140008c9c
   140008cac:	mov    eax,esi
   140008cae:	mov    r9,r8
   140008cb1:	sub    r9,rax
   140008cb4:	cmp    r11d,0x2
   140008cb8:	jbe    0x140008cf1
   140008cba:	lea    ecx,[r11-0x3]
   140008cbe:	mov    eax,0xaaaaaaab
   140008cc3:	mul    ecx
   140008cc5:	shr    edx,1
   140008cc7:	lea    ecx,[rdx+0x1]
   140008cca:	mov    al,BYTE PTR [r9+0x1]
   140008cce:	add    r9,0x3
   140008cd2:	add    r8,0x3
   140008cd6:	mov    BYTE PTR [r8-0x2],al
   140008cda:	mov    al,BYTE PTR [r9-0x1]
   140008cde:	add    r11d,0xfffffffd
   140008ce2:	dec    rcx
   140008ce5:	mov    BYTE PTR [r8-0x1],al
   140008ce9:	mov    al,BYTE PTR [r9]
   140008cec:	mov    BYTE PTR [r8],al
   140008cef:	jne    0x140008cca
   140008cf1:	test   r11d,r11d
   140008cf4:	je     0x140008d6b
   140008cf6:	mov    al,BYTE PTR [r9+0x1]
   140008cfa:	mov    rsi,QWORD PTR [rsp]
   140008cfe:	inc    r8
   140008d01:	mov    BYTE PTR [r8],al
   140008d04:	cmp    r11d,0x1
   140008d08:	jbe    0x140008d14
   140008d0a:	mov    al,BYTE PTR [r9+0x2]
   140008d0e:	inc    r8
   140008d11:	mov    BYTE PTR [r8],al
   140008d14:	mov    r9,QWORD PTR [rsp+0x8]
   140008d19:	jmp    0x140008d74
   140008d1b:	mov    eax,esi
   140008d1d:	mov    rcx,r8
   140008d20:	sub    rcx,rax
   140008d23:	mov    al,BYTE PTR [rcx+0x1]
   140008d26:	add    rcx,0x3
   140008d2a:	add    r8,0x3
   140008d2e:	mov    BYTE PTR [r8-0x2],al
   140008d32:	mov    al,BYTE PTR [rcx-0x1]
   140008d35:	add    r11d,0xfffffffd
   140008d39:	mov    BYTE PTR [r8-0x1],al
   140008d3d:	mov    al,BYTE PTR [rcx]
   140008d3f:	mov    BYTE PTR [r8],al
   140008d42:	cmp    r11d,0x2
   140008d46:	ja     0x140008d23
   140008d48:	test   r11d,r11d
   140008d4b:	je     0x140008d70
   140008d4d:	mov    al,BYTE PTR [rcx+0x1]
   140008d50:	mov    rsi,QWORD PTR [rsp]
   140008d54:	inc    r8
   140008d57:	mov    BYTE PTR [r8],al
   140008d5a:	cmp    r11d,0x1
   140008d5e:	jbe    0x140008d74
   140008d60:	mov    al,BYTE PTR [rcx+0x2]
   140008d63:	inc    r8
   140008d66:	mov    BYTE PTR [r8],al
   140008d69:	jmp    0x140008d74
   140008d6b:	mov    r9,QWORD PTR [rsp+0x8]
   140008d70:	mov    rsi,QWORD PTR [rsp]
   140008d74:	cmp    rdi,r14
   140008d77:	jae    0x140008dbc
   140008d79:	cmp    r8,r15
   140008d7c:	jae    0x140008dbc
   140008d7e:	mov    rdx,QWORD PTR [rsp+0x20]
   140008d83:	jmp    0x140008a7e
   140008d88:	test   dl,0x20
   140008d8b:	je     0x140008d97
   140008d8d:	mov    DWORD PTR [r12],0xb
   140008d95:	jmp    0x140008dbc
   140008d97:	lea    rax,[rip+0x1390a]        # 0x14001c6a8
   140008d9e:	jmp    0x140008db0
   140008da0:	lea    rax,[rip+0x138e9]        # 0x14001c690
   140008da7:	jmp    0x140008db0
   140008da9:	lea    rax,[rip+0x138c0]        # 0x14001c670
   140008db0:	mov    QWORD PTR [rbp+0x20],rax
   140008db4:	mov    DWORD PTR [r12],0x1b
   140008dbc:	mov    ecx,r10d
   140008dbf:	sub    r15d,r8d
   140008dc2:	shr    ecx,0x3
   140008dc5:	add    r15d,0x101
   140008dcc:	mov    eax,ecx
   140008dce:	mov    DWORD PTR [rbp+0x18],r15d
   140008dd2:	sub    rdi,rax
   140008dd5:	mov    eax,ecx
   140008dd7:	shl    eax,0x3
   140008dda:	sub    r14d,edi
   140008ddd:	sub    r10d,eax
   140008de0:	lea    rax,[rdi+0x1]
   140008de4:	add    r14d,0x5
   140008de8:	mov    QWORD PTR [rbp+0x0],rax
   140008dec:	lea    rax,[r8+0x1]
   140008df0:	mov    DWORD PTR [rbp+0x8],r14d
   140008df4:	mov    QWORD PTR [rbp+0x10],rax
   140008df8:	mov    eax,0x1
   140008dfd:	mov    ecx,r10d
   140008e00:	shl    eax,cl
   140008e02:	mov    DWORD PTR [r12+0x44],r10d
   140008e07:	dec    eax
   140008e09:	and    eax,ebx
   140008e0b:	mov    DWORD PTR [r12+0x40],eax
   140008e10:	add    rsp,0x38
   140008e14:	pop    r15
   140008e16:	pop    r14
   140008e18:	pop    r13
   140008e1a:	pop    r12
   140008e1c:	pop    rdi
   140008e1d:	pop    rsi
   140008e1e:	pop    rbp
   140008e1f:	pop    rbx
   140008e20:	ret    
   140008e21:	int3   
   140008e22:	int3   
   140008e23:	int3   
   140008e24:	mov    QWORD PTR [rsp+0x8],rbx
   140008e29:	push   rbp
   140008e2a:	push   rsi
   140008e2b:	push   rdi
   140008e2c:	push   r12
   140008e2e:	push   r13
   140008e30:	push   r14
   140008e32:	push   r15
   140008e34:	lea    rbp,[rsp-0x17]
   140008e39:	sub    rsp,0xa0
   140008e40:	mov    rax,QWORD PTR [rip+0x1a279]        # 0x1400230c0
   140008e47:	xor    rax,rsp
   140008e4a:	mov    QWORD PTR [rbp+0xf],rax
   140008e4e:	mov    rbx,QWORD PTR [rbp+0x7f]
   140008e52:	xor    r14d,r14d
   140008e55:	mov    r12d,ecx
   140008e58:	mov    DWORD PTR [rbp-0x69],ecx
   140008e5b:	mov    r10,r9
   140008e5e:	mov    QWORD PTR [rbp-0x49],r9
   140008e62:	mov    r9,QWORD PTR [rbp+0x77]
   140008e66:	lea    ecx,[r14+0x10]
   140008e6a:	lea    rdi,[rbp-0x31]
   140008e6e:	movzx  eax,r14w
   140008e72:	mov    r13,rdx
   140008e75:	mov    QWORD PTR [rbp-0x41],rdx
   140008e79:	mov    QWORD PTR [rbp-0x39],r9
   140008e7d:	mov    QWORD PTR [rbp-0x51],rbx
   140008e81:	lea    r15d,[r14+0x1]
   140008e85:	rep stos WORD PTR es:[rdi],ax
   140008e88:	test   r8d,r8d
   140008e8b:	je     0x140008ea5
   140008e8d:	mov    rcx,rdx
   140008e90:	mov    edx,r8d
   140008e93:	movzx  eax,WORD PTR [rcx]
   140008e96:	add    rcx,0x2
   140008e9a:	add    WORD PTR [rbp+rax*2-0x31],r15w
   140008ea0:	sub    rdx,r15
   140008ea3:	jne    0x140008e93
   140008ea5:	mov    r11d,DWORD PTR [r9]
   140008ea8:	or     ecx,0xffffffff
   140008eab:	mov    esi,0xf
   140008eb0:	mov    DWORD PTR [rbp-0x75],ecx
   140008eb3:	lea    rax,[rbp-0x13]
   140008eb7:	cmp    WORD PTR [rax],r14w
   140008ebb:	jne    0x140008ec8
   140008ebd:	add    esi,ecx
   140008ebf:	sub    rax,0x2
   140008ec3:	cmp    esi,r15d
   140008ec6:	jae    0x140008eb7
   140008ec8:	cmp    r11d,esi
   140008ecb:	cmova  r11d,esi
   140008ecf:	test   esi,esi
   140008ed1:	jne    0x140008ef9
   140008ed3:	mov    rcx,QWORD PTR [r10]
   140008ed6:	mov    DWORD PTR [rsp],0x140
   140008edd:	mov    eax,DWORD PTR [rsp]
   140008ee0:	mov    DWORD PTR [rcx],eax
   140008ee2:	add    QWORD PTR [r10],0x4
   140008ee6:	mov    rcx,QWORD PTR [r10]
   140008ee9:	mov    DWORD PTR [rcx],eax
   140008eeb:	add    QWORD PTR [r10],0x4
   140008eef:	mov    DWORD PTR [r9],r15d
   140008ef2:	xor    eax,eax
   140008ef4:	jmp    0x140009264
   140008ef9:	mov    r9d,r15d
   140008efc:	lea    rax,[rbp-0x2f]
   140008f00:	cmp    WORD PTR [rax],r14w
   140008f04:	jne    0x140008f13
   140008f06:	add    r9d,r15d
   140008f09:	add    rax,0x2
   140008f0d:	cmp    r9d,0xf
   140008f11:	jbe    0x140008f00
   140008f13:	cmp    r11d,r9d
   140008f16:	mov    edx,r15d
   140008f19:	mov    edi,r15d
   140008f1c:	cmovb  r11d,r9d
   140008f20:	mov    eax,edi
   140008f22:	add    edx,edx
   140008f24:	movzx  ecx,WORD PTR [rbp+rax*2-0x31]
   140008f29:	sub    edx,ecx
   140008f2b:	js     0x140009261
   140008f31:	add    edi,r15d
   140008f34:	cmp    edi,0xf
   140008f37:	jbe    0x140008f20
   140008f39:	test   edx,edx
   140008f3b:	jle    0x140008f4f
   140008f3d:	test   r12d,r12d
   140008f40:	je     0x140009261
   140008f46:	cmp    esi,r15d
   140008f49:	jne    0x140009261
   140008f4f:	mov    WORD PTR [rbp-0xf],r14w
   140008f54:	mov    rcx,r14
   140008f57:	mov    edx,0xe
   140008f5c:	movzx  eax,WORD PTR [rbp+rcx*1-0x2f]
   140008f61:	add    rcx,0x2
   140008f65:	add    ax,WORD PTR [rbp+rcx*1-0x11]
   140008f6a:	sub    rdx,r15
   140008f6d:	mov    WORD PTR [rbp+rcx*1-0xf],ax
   140008f72:	jne    0x140008f5c
   140008f74:	mov    edi,r14d
   140008f77:	test   r8d,r8d
   140008f7a:	je     0x140008fa6
   140008f7c:	mov    rdx,r13
   140008f7f:	cmp    WORD PTR [rdx],r14w
   140008f83:	je     0x140008f9a
   140008f85:	movzx  eax,WORD PTR [rdx]
   140008f88:	movzx  ecx,WORD PTR [rbp+rax*2-0x11]
   140008f8d:	mov    WORD PTR [rbx+rcx*2],di
   140008f91:	movzx  eax,WORD PTR [rdx]
   140008f94:	add    WORD PTR [rbp+rax*2-0x11],r15w
   140008f9a:	add    edi,r15d
   140008f9d:	add    rdx,0x2
   140008fa1:	cmp    edi,r8d
   140008fa4:	jb     0x140008f7f
   140008fa6:	mov    ecx,r12d
   140008fa9:	test   r12d,r12d
   140008fac:	je     0x140008fef
   140008fae:	dec    ecx
   140008fb0:	je     0x140008fca
   140008fb2:	lea    rdx,[rip+0x13a17]        # 0x14001c9d0
   140008fb9:	lea    r15,[rip+0x139d0]        # 0x14001c990
   140008fc0:	or     r8d,0xffffffff
   140008fc4:	mov    QWORD PTR [rbp-0x61],rdx
   140008fc8:	jmp    0x140008fff
   140008fca:	mov    eax,0x202
   140008fcf:	lea    r15,[rip+0x1393a]        # 0x14001c910
   140008fd6:	lea    rdx,[rip+0x13973]        # 0x14001c950
   140008fdd:	sub    r15,rax
   140008fe0:	sub    rdx,rax
   140008fe3:	mov    r8d,0x100
   140008fe9:	mov    QWORD PTR [rbp-0x61],rdx
   140008fed:	jmp    0x140008fff
   140008fef:	mov    rdx,rbx
   140008ff2:	mov    QWORD PTR [rbp-0x61],rbx
   140008ff6:	mov    r15,rbx
   140008ff9:	mov    r8d,0x13
   140008fff:	mov    rax,QWORD PTR [r10]
   140009002:	mov    ecx,r11d
   140009005:	mov    ebx,0x1
   14000900a:	shl    ebx,cl
   14000900c:	cmp    DWORD PTR [rbp-0x69],0x1
   140009010:	mov    QWORD PTR [rsp+0x8],rax
   140009015:	lea    eax,[rbx-0x1]
   140009018:	mov    edi,r14d
   14000901b:	mov    r12d,r14d
   14000901e:	mov    DWORD PTR [rbp-0x71],r14d
   140009022:	mov    DWORD PTR [rbp-0x6d],ebx
   140009025:	mov    DWORD PTR [rbp-0x79],ebx
   140009028:	mov    DWORD PTR [rbp-0x59],eax
   14000902b:	jne    0x14000903f
   14000902d:	cmp    ebx,0x5b0
   140009033:	jb     0x14000903f
   140009035:	mov    eax,0x1
   14000903a:	jmp    0x140009264
   14000903f:	mov    r13,QWORD PTR [rsp+0x8]
   140009044:	mov    ecx,r12d
   140009047:	mov    r12,QWORD PTR [rbp-0x51]
   14000904b:	mov    al,r9b
   14000904e:	sub    al,r14b
   140009051:	mov    BYTE PTR [rsp+0x1],al
   140009055:	movzx  eax,WORD PTR [r12+rcx*2]
   14000905a:	cmp    eax,r8d
   14000905d:	jge    0x140009068
   14000905f:	xor    r10d,r10d
   140009062:	mov    BYTE PTR [rsp],r10b
   140009066:	jmp    0x140009082
   140009068:	jle    0x14000907c
   14000906a:	movzx  ecx,WORD PTR [r12+rcx*2]
   14000906f:	mov    al,BYTE PTR [rdx+rcx*2]
   140009072:	mov    BYTE PTR [rsp],al
   140009075:	movzx  eax,WORD PTR [r15+rcx*2]
   14000907a:	jmp    0x140009082
   14000907c:	mov    BYTE PTR [rsp],0x60
   140009080:	xor    eax,eax
   140009082:	mov    ecx,r9d
   140009085:	mov    r12d,0x1
   14000908b:	mov    edx,edi
   14000908d:	sub    ecx,r14d
   140009090:	mov    WORD PTR [rsp+0x2],ax
   140009095:	mov    eax,DWORD PTR [rsp]
   140009098:	shl    r12d,cl
   14000909b:	mov    ecx,r14d
   14000909e:	mov    DWORD PTR [rbp-0x55],ebx
   1400090a1:	shr    edx,cl
   1400090a3:	add    edx,ebx
   1400090a5:	sub    edx,r12d
   1400090a8:	sub    ebx,r12d
   1400090ab:	mov    DWORD PTR [r13+rdx*4+0x0],eax
   1400090b0:	jne    0x1400090a5
   1400090b2:	mov    r10,QWORD PTR [rbp-0x49]
   1400090b6:	lea    ecx,[r9-0x1]
   1400090ba:	lea    edx,[rbx+0x1]
   1400090bd:	shl    edx,cl
   1400090bf:	jmp    0x1400090c3
   1400090c1:	shr    edx,1
   1400090c3:	test   edi,edx
   1400090c5:	jne    0x1400090c1
   1400090c7:	xor    ebx,ebx
   1400090c9:	test   edx,edx
   1400090cb:	je     0x1400090d7
   1400090cd:	lea    eax,[rdx-0x1]
   1400090d0:	and    eax,edi
   1400090d2:	lea    edi,[rdx+rax*1]
   1400090d5:	jmp    0x1400090d9
   1400090d7:	mov    edi,ebx
   1400090d9:	mov    r12d,DWORD PTR [rbp-0x71]
   1400090dd:	mov    eax,r9d
   1400090e0:	mov    ecx,0xffff
   1400090e5:	inc    r12d
   1400090e8:	add    WORD PTR [rbp+rax*2-0x31],cx
   1400090ed:	mov    DWORD PTR [rbp-0x71],r12d
   1400090f1:	jne    0x14000910e
   1400090f3:	cmp    r9d,esi
   1400090f6:	je     0x1400091d4
   1400090fc:	mov    rcx,QWORD PTR [rbp-0x51]
   140009100:	mov    rax,QWORD PTR [rbp-0x41]
   140009104:	movzx  ecx,WORD PTR [rcx+r12*2]
   140009109:	movzx  r9d,WORD PTR [rax+rcx*2]
   14000910e:	mov    rdx,QWORD PTR [rbp-0x61]
   140009112:	mov    ebx,DWORD PTR [rbp-0x6d]
   140009115:	cmp    r9d,r11d
   140009118:	jbe    0x140009044
   14000911e:	mov    r13d,DWORD PTR [rbp-0x59]
   140009122:	and    r13d,edi
   140009125:	cmp    r13d,DWORD PTR [rbp-0x75]
   140009129:	je     0x14000903f
   14000912f:	mov    rcx,QWORD PTR [rsp+0x8]
   140009134:	mov    eax,DWORD PTR [rbp-0x55]
   140009137:	test   r14d,r14d
   14000913a:	cmove  r14d,r11d
   14000913e:	lea    rcx,[rcx+rax*4]
   140009142:	mov    r12d,r9d
   140009145:	sub    r12d,r14d
   140009148:	mov    QWORD PTR [rsp+0x8],rcx
   14000914d:	mov    edx,0x1
   140009152:	lea    ebx,[r14+r12*1]
   140009156:	mov    ecx,r12d
   140009159:	shl    edx,cl
   14000915b:	cmp    ebx,esi
   14000915d:	jae    0x140009179
   14000915f:	movzx  ecx,WORD PTR [rbp+rbx*2-0x31]
   140009164:	sub    edx,ecx
   140009166:	test   edx,edx
   140009168:	jle    0x140009175
   14000916a:	inc    ebx
   14000916c:	inc    r12d
   14000916f:	add    edx,edx
   140009171:	cmp    ebx,esi
   140009173:	jb     0x14000915f
   140009175:	mov    r10,QWORD PTR [rbp-0x49]
   140009179:	mov    eax,DWORD PTR [rbp-0x79]
   14000917c:	mov    ecx,r12d
   14000917f:	mov    ebx,0x1
   140009184:	shl    ebx,cl
   140009186:	add    eax,ebx
   140009188:	cmp    DWORD PTR [rbp-0x69],0x1
   14000918c:	mov    DWORD PTR [rbp-0x6d],ebx
   14000918f:	mov    DWORD PTR [rbp-0x79],eax
   140009192:	jne    0x14000919f
   140009194:	cmp    eax,0x5b0
   140009199:	jae    0x140009035
   14000919f:	mov    rax,QWORD PTR [r10]
   1400091a2:	mov    rdx,QWORD PTR [rbp-0x61]
   1400091a6:	mov    DWORD PTR [rbp-0x75],r13d
   1400091aa:	mov    BYTE PTR [rax+r13*4],r12b
   1400091ae:	mov    rax,QWORD PTR [r10]
   1400091b1:	mov    r12d,DWORD PTR [rbp-0x71]
   1400091b5:	mov    BYTE PTR [rax+r13*4+0x1],r11b
   1400091ba:	mov    rcx,QWORD PTR [r10]
   1400091bd:	mov    rax,QWORD PTR [rsp+0x8]
   1400091c2:	sub    rax,rcx
   1400091c5:	sar    rax,0x2
   1400091c9:	mov    WORD PTR [rcx+r13*4+0x2],ax
   1400091cf:	jmp    0x14000903f
   1400091d4:	mov    al,r9b
   1400091d7:	mov    BYTE PTR [rsp],0x40
   1400091db:	mov    WORD PTR [rsp+0x2],bx
   1400091e0:	sub    al,r14b
   1400091e3:	mov    BYTE PTR [rsp+0x1],al
   1400091e7:	test   edi,edi
   1400091e9:	je     0x14000924b
   1400091eb:	mov    r8d,DWORD PTR [rbp-0x75]
   1400091ef:	test   r14d,r14d
   1400091f2:	je     0x140009211
   1400091f4:	mov    eax,DWORD PTR [rbp-0x59]
   1400091f7:	and    eax,edi
   1400091f9:	cmp    eax,r8d
   1400091fc:	je     0x140009211
   1400091fe:	mov    rax,QWORD PTR [r10]
   140009201:	mov    r14d,ebx
   140009204:	mov    r9d,r11d
   140009207:	mov    QWORD PTR [rsp+0x8],rax
   14000920c:	mov    BYTE PTR [rsp+0x1],r11b
   140009211:	mov    eax,DWORD PTR [rsp]
   140009214:	mov    ecx,r14d
   140009217:	mov    edx,edi
   140009219:	shr    rdx,cl
   14000921c:	mov    rcx,QWORD PTR [rsp+0x8]
   140009221:	mov    DWORD PTR [rcx+rdx*4],eax
   140009224:	lea    ecx,[r9-0x1]
   140009228:	mov    edx,0x1
   14000922d:	shl    edx,cl
   14000922f:	jmp    0x140009233
   140009231:	shr    edx,1
   140009233:	test   edi,edx
   140009235:	jne    0x140009231
   140009237:	test   edx,edx
   140009239:	je     0x140009245
   14000923b:	lea    eax,[rdx-0x1]
   14000923e:	and    eax,edi
   140009240:	lea    edi,[rdx+rax*1]
   140009243:	jmp    0x140009247
   140009245:	mov    edi,ebx
   140009247:	test   edi,edi
   140009249:	jne    0x1400091ef
   14000924b:	mov    eax,DWORD PTR [rbp-0x79]
   14000924e:	shl    rax,0x2
   140009252:	add    QWORD PTR [r10],rax
   140009255:	mov    rax,QWORD PTR [rbp-0x39]
   140009259:	mov    DWORD PTR [rax],r11d
   14000925c:	jmp    0x140008ef2
   140009261:	or     eax,0xffffffff
   140009264:	mov    rcx,QWORD PTR [rbp+0xf]
   140009268:	xor    rcx,rsp
   14000926b:	call   0x14000a850
   140009270:	mov    rbx,QWORD PTR [rsp+0xe0]
   140009278:	add    rsp,0xa0
   14000927f:	pop    r15
   140009281:	pop    r14
   140009283:	pop    r13
   140009285:	pop    r12
   140009287:	pop    rdi
   140009288:	pop    rsi
   140009289:	pop    rbp
   14000928a:	ret    
   14000928b:	int3   
   14000928c:	mov    QWORD PTR [rsp+0x8],rdi
   140009291:	mov    r9d,ecx
   140009294:	mov    r11,rdx
   140009297:	movzx  r10d,cx
   14000929b:	shr    r9d,0x10
   14000929f:	cmp    r8d,0x1
   1400092a3:	jne    0x1400092d1
   1400092a5:	movzx  eax,BYTE PTR [rdx]
   1400092a8:	mov    ecx,0xfff1
   1400092ad:	add    r10d,eax
   1400092b0:	mov    eax,0xffff000f
   1400092b5:	cmp    r10d,ecx
   1400092b8:	jb     0x1400092bd
   1400092ba:	add    r10d,eax
   1400092bd:	add    r9d,r10d
   1400092c0:	cmp    r9d,ecx
   1400092c3:	jb     0x14000954e
   1400092c9:	add    r9d,eax
   1400092cc:	jmp    0x14000954e
   1400092d1:	test   rdx,rdx
   1400092d4:	jne    0x1400092de
   1400092d6:	lea    eax,[rdx+0x1]
   1400092d9:	jmp    0x140009558
   1400092de:	cmp    r8d,0x10
   1400092e2:	jae    0x14000932a
   1400092e4:	test   r8d,r8d
   1400092e7:	je     0x1400092fb
   1400092e9:	movzx  eax,BYTE PTR [r11]
   1400092ed:	inc    r11
   1400092f0:	add    r10d,eax
   1400092f3:	add    r9d,r10d
   1400092f6:	dec    r8d
   1400092f9:	jne    0x1400092e9
   1400092fb:	mov    ecx,0xfff1
   140009300:	cmp    r10d,ecx
   140009303:	jb     0x14000930d
   140009305:	mov    eax,0xffff000f
   14000930a:	add    r10d,eax
   14000930d:	mov    eax,0x80078071
   140009312:	mul    r9d
   140009315:	shr    edx,0xf
   140009318:	imul   edx,edx,0xf
   14000931b:	lea    eax,[r9+rdx*1]
   14000931f:	shl    eax,0x10
   140009322:	or     eax,r10d
   140009325:	jmp    0x140009558
   14000932a:	mov    ecx,0x80078071
   14000932f:	cmp    r8d,0x15b0
   140009336:	jb     0x14000943b
   14000933c:	mov    eax,0x5e6ea9af
   140009341:	mul    r8d
   140009344:	shr    edx,0xb
   140009347:	mov    edi,edx
   140009349:	add    r8d,0xffffea50
   140009350:	mov    edx,0x15b
   140009355:	movzx  eax,BYTE PTR [r11]
   140009359:	add    r11,0x10
   14000935d:	add    r10d,eax
   140009360:	movzx  eax,BYTE PTR [r11-0xf]
   140009365:	add    r9d,r10d
   140009368:	add    r10d,eax
   14000936b:	movzx  eax,BYTE PTR [r11-0xe]
   140009370:	add    r9d,r10d
   140009373:	add    r10d,eax
   140009376:	movzx  eax,BYTE PTR [r11-0xd]
   14000937b:	add    r9d,r10d
   14000937e:	add    r10d,eax
   140009381:	movzx  eax,BYTE PTR [r11-0xc]
   140009386:	add    r9d,r10d
   140009389:	add    r10d,eax
   14000938c:	movzx  eax,BYTE PTR [r11-0xb]
   140009391:	add    r9d,r10d
   140009394:	add    r10d,eax
   140009397:	movzx  eax,BYTE PTR [r11-0xa]
   14000939c:	add    r9d,r10d
   14000939f:	add    r10d,eax
   1400093a2:	movzx  eax,BYTE PTR [r11-0x9]
   1400093a7:	add    r9d,r10d
   1400093aa:	add    r10d,eax
   1400093ad:	movzx  eax,BYTE PTR [r11-0x8]
   1400093b2:	add    r9d,r10d
   1400093b5:	add    r10d,eax
   1400093b8:	movzx  eax,BYTE PTR [r11-0x7]
   1400093bd:	add    r9d,r10d
   1400093c0:	add    r10d,eax
   1400093c3:	movzx  eax,BYTE PTR [r11-0x6]
   1400093c8:	add    r9d,r10d
   1400093cb:	add    r10d,eax
   1400093ce:	movzx  eax,BYTE PTR [r11-0x5]
   1400093d3:	add    r9d,r10d
   1400093d6:	add    r10d,eax
   1400093d9:	movzx  eax,BYTE PTR [r11-0x4]
   1400093de:	add    r9d,r10d
   1400093e1:	add    r10d,eax
   1400093e4:	movzx  eax,BYTE PTR [r11-0x3]
   1400093e9:	add    r9d,r10d
   1400093ec:	add    r10d,eax
   1400093ef:	movzx  eax,BYTE PTR [r11-0x2]
   1400093f4:	add    r9d,r10d
   1400093f7:	add    r10d,eax
   1400093fa:	movzx  eax,BYTE PTR [r11-0x1]
   1400093ff:	add    r9d,r10d
   140009402:	add    r10d,eax
   140009405:	add    r9d,r10d
   140009408:	dec    edx
   14000940a:	jne    0x140009355
   140009410:	mov    eax,ecx
   140009412:	mul    r10d
   140009415:	mov    eax,ecx
   140009417:	shr    edx,0xf
   14000941a:	imul   edx,edx,0xffff000f
   140009420:	add    r10d,edx
   140009423:	mul    r9d
   140009426:	shr    edx,0xf
   140009429:	imul   edx,edx,0xffff000f
   14000942f:	add    r9d,edx
   140009432:	dec    rdi
   140009435:	jne    0x140009349
   14000943b:	test   r8d,r8d
   14000943e:	je     0x14000954e
   140009444:	cmp    r8d,0x10
   140009448:	jb     0x140009515
   14000944e:	mov    edx,r8d
   140009451:	shr    rdx,0x4
   140009455:	movzx  eax,BYTE PTR [r11]
   140009459:	add    r8d,0xfffffff0
   14000945d:	add    r11,0x10
   140009461:	add    r10d,eax
   140009464:	movzx  eax,BYTE PTR [r11-0xf]
   140009469:	add    r9d,r10d
   14000946c:	add    r10d,eax
   14000946f:	movzx  eax,BYTE PTR [r11-0xe]
   140009474:	add    r9d,r10d
   140009477:	add    r10d,eax
   14000947a:	movzx  eax,BYTE PTR [r11-0xd]
   14000947f:	add    r9d,r10d
   140009482:	add    r10d,eax
   140009485:	movzx  eax,BYTE PTR [r11-0xc]
   14000948a:	add    r9d,r10d
   14000948d:	add    r10d,eax
   140009490:	movzx  eax,BYTE PTR [r11-0xb]
   140009495:	add    r9d,r10d
   140009498:	add    r10d,eax
   14000949b:	movzx  eax,BYTE PTR [r11-0xa]
   1400094a0:	add    r9d,r10d
   1400094a3:	add    r10d,eax
   1400094a6:	movzx  eax,BYTE PTR [r11-0x9]
   1400094ab:	add    r9d,r10d
   1400094ae:	add    r10d,eax
   1400094b1:	movzx  eax,BYTE PTR [r11-0x8]
   1400094b6:	add    r9d,r10d
   1400094b9:	add    r10d,eax
   1400094bc:	movzx  eax,BYTE PTR [r11-0x7]
   1400094c1:	add    r9d,r10d
   1400094c4:	add    r10d,eax
   1400094c7:	movzx  eax,BYTE PTR [r11-0x6]
   1400094cc:	add    r9d,r10d
   1400094cf:	add    r10d,eax
   1400094d2:	movzx  eax,BYTE PTR [r11-0x5]
   1400094d7:	add    r9d,r10d
   1400094da:	add    r10d,eax
   1400094dd:	movzx  eax,BYTE PTR [r11-0x4]
   1400094e2:	add    r9d,r10d
   1400094e5:	add    r10d,eax
   1400094e8:	movzx  eax,BYTE PTR [r11-0x3]
   1400094ed:	add    r9d,r10d
   1400094f0:	add    r10d,eax
   1400094f3:	movzx  eax,BYTE PTR [r11-0x2]
   1400094f8:	add    r9d,r10d
   1400094fb:	add    r10d,eax
   1400094fe:	movzx  eax,BYTE PTR [r11-0x1]
   140009503:	add    r9d,r10d
   140009506:	add    r10d,eax
   140009509:	add    r9d,r10d
   14000950c:	dec    rdx
   14000950f:	jne    0x140009455
   140009515:	test   r8d,r8d
   140009518:	je     0x14000952c
   14000951a:	movzx  eax,BYTE PTR [r11]
   14000951e:	inc    r11
   140009521:	add    r10d,eax
   140009524:	add    r9d,r10d
   140009527:	dec    r8d
   14000952a:	jne    0x14000951a
   14000952c:	mov    eax,ecx
   14000952e:	mul    r10d
   140009531:	mov    eax,ecx
   140009533:	shr    edx,0xf
   140009536:	imul   edx,edx,0xffff000f
   14000953c:	add    r10d,edx
   14000953f:	mul    r9d
   140009542:	shr    edx,0xf
   140009545:	imul   edx,edx,0xffff000f
   14000954b:	add    r9d,edx
   14000954e:	shl    r9d,0x10
   140009552:	or     r9d,r10d
   140009555:	mov    eax,r9d
   140009558:	mov    rdi,QWORD PTR [rsp+0x8]
   14000955d:	ret    
   14000955e:	int3   
   14000955f:	int3   
   140009560:	mov    QWORD PTR [rsp+0x8],rbx
   140009565:	mov    QWORD PTR [rsp+0x10],rsi
   14000956a:	mov    QWORD PTR [rsp+0x18],rdi
   14000956f:	mov    r10d,ecx
   140009572:	mov    r11d,r8d
   140009575:	mov    rbx,rdx
   140009578:	lea    rsi,[rip+0x13491]        # 0x14001ca10
   14000957f:	not    r10d
   140009582:	test   r8d,r8d
   140009585:	je     0x1400095aa
   140009587:	test   bl,0x3
   14000958a:	je     0x1400095aa
   14000958c:	movzx  ecx,BYTE PTR [rbx]
   14000958f:	mov    eax,r10d
   140009592:	inc    rbx
   140009595:	xor    rcx,rax
   140009598:	shr    eax,0x8
   14000959b:	movzx  edx,cl
   14000959e:	mov    r10d,DWORD PTR [rsi+rdx*4]
   1400095a2:	xor    r10d,eax
   1400095a5:	dec    r11d
   1400095a8:	jne    0x140009587
   1400095aa:	cmp    r11d,0x20
   1400095ae:	jb     0x1400097d5
   1400095b4:	mov    edi,r11d
   1400095b7:	shr    rdi,0x5
   1400095bb:	xor    r10d,DWORD PTR [rbx]
   1400095be:	mov    eax,r10d
   1400095c1:	shr    rax,0x10
   1400095c5:	movzx  edx,al
   1400095c8:	mov    eax,r10d
   1400095cb:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   1400095d3:	shr    rax,0x8
   1400095d7:	movzx  ecx,al
   1400095da:	mov    eax,r10d
   1400095dd:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   1400095e5:	shr    rax,0x18
   1400095e9:	xor    r8d,DWORD PTR [rsi+rax*4]
   1400095ed:	movzx  eax,r10b
   1400095f1:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   1400095f9:	xor    r8d,DWORD PTR [rbx+0x4]
   1400095fd:	mov    r9d,r8d
   140009600:	mov    eax,r8d
   140009603:	shr    rax,0x10
   140009607:	movzx  edx,al
   14000960a:	mov    eax,r8d
   14000960d:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009615:	shr    rax,0x8
   140009619:	movzx  ecx,al
   14000961c:	mov    eax,r9d
   14000961f:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140009627:	shr    rax,0x18
   14000962b:	xor    r8d,DWORD PTR [rsi+rax*4]
   14000962f:	movzx  eax,r9b
   140009633:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   14000963b:	xor    r8d,DWORD PTR [rbx+0x8]
   14000963f:	mov    r9d,r8d
   140009642:	mov    eax,r8d
   140009645:	shr    rax,0x10
   140009649:	movzx  edx,al
   14000964c:	mov    eax,r8d
   14000964f:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009657:	shr    rax,0x8
   14000965b:	movzx  ecx,al
   14000965e:	mov    eax,r9d
   140009661:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140009669:	shr    rax,0x18
   14000966d:	xor    r8d,DWORD PTR [rsi+rax*4]
   140009671:	movzx  eax,r9b
   140009675:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   14000967d:	xor    r8d,DWORD PTR [rbx+0xc]
   140009681:	mov    r9d,r8d
   140009684:	mov    eax,r8d
   140009687:	shr    rax,0x10
   14000968b:	movzx  edx,al
   14000968e:	mov    eax,r8d
   140009691:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009699:	shr    rax,0x8
   14000969d:	movzx  ecx,al
   1400096a0:	mov    eax,r9d
   1400096a3:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   1400096ab:	shr    rax,0x18
   1400096af:	xor    r8d,DWORD PTR [rsi+rax*4]
   1400096b3:	movzx  eax,r9b
   1400096b7:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   1400096bf:	xor    r8d,DWORD PTR [rbx+0x10]
   1400096c3:	mov    r9d,r8d
   1400096c6:	mov    eax,r8d
   1400096c9:	shr    rax,0x10
   1400096cd:	movzx  edx,al
   1400096d0:	mov    eax,r8d
   1400096d3:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   1400096db:	shr    rax,0x8
   1400096df:	movzx  ecx,al
   1400096e2:	mov    eax,r9d
   1400096e5:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   1400096ed:	shr    rax,0x18
   1400096f1:	xor    r8d,DWORD PTR [rsi+rax*4]
   1400096f5:	movzx  eax,r9b
   1400096f9:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140009701:	xor    r8d,DWORD PTR [rbx+0x14]
   140009705:	mov    eax,r8d
   140009708:	mov    r9d,r8d
   14000970b:	shr    rax,0x10
   14000970f:	movzx  edx,al
   140009712:	mov    eax,r8d
   140009715:	shr    rax,0x8
   140009719:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009721:	movzx  ecx,al
   140009724:	mov    eax,r9d
   140009727:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   14000972f:	shr    rax,0x18
   140009733:	add    rbx,0x20
   140009737:	xor    r8d,DWORD PTR [rsi+rax*4]
   14000973b:	movzx  eax,r9b
   14000973f:	add    r11d,0xffffffe0
   140009743:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   14000974b:	xor    r8d,DWORD PTR [rbx-0x8]
   14000974f:	mov    r9d,r8d
   140009752:	mov    eax,r8d
   140009755:	shr    rax,0x10
   140009759:	movzx  edx,al
   14000975c:	mov    eax,r8d
   14000975f:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140009767:	shr    rax,0x8
   14000976b:	movzx  ecx,al
   14000976e:	mov    eax,r9d
   140009771:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140009779:	shr    rax,0x18
   14000977d:	xor    r8d,DWORD PTR [rsi+rax*4]
   140009781:	movzx  eax,r9b
   140009785:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   14000978d:	xor    r8d,DWORD PTR [rbx-0x4]
   140009791:	mov    eax,r8d
   140009794:	shr    rax,0x10
   140009798:	movzx  edx,al
   14000979b:	mov    eax,r8d
   14000979e:	mov    r10d,DWORD PTR [rsi+rdx*4+0x400]
   1400097a6:	shr    rax,0x8
   1400097aa:	movzx  ecx,al
   1400097ad:	mov    eax,r8d
   1400097b0:	xor    r10d,DWORD PTR [rsi+rcx*4+0x800]
   1400097b8:	shr    rax,0x18
   1400097bc:	xor    r10d,DWORD PTR [rsi+rax*4]
   1400097c0:	movzx  eax,r8b
   1400097c4:	xor    r10d,DWORD PTR [rsi+rax*4+0xc00]
   1400097cc:	dec    rdi
   1400097cf:	jne    0x1400095bb
   1400097d5:	cmp    r11d,0x4
   1400097d9:	jb     0x140009830
   1400097db:	mov    r9d,r11d
   1400097de:	shr    r9,0x2
   1400097e2:	xor    r10d,DWORD PTR [rbx]
   1400097e5:	add    r11d,0xfffffffc
   1400097e9:	add    rbx,0x4
   1400097ed:	mov    r8d,r10d
   1400097f0:	mov    eax,r10d
   1400097f3:	shr    rax,0x10
   1400097f7:	movzx  edx,al
   1400097fa:	mov    eax,r10d
   1400097fd:	mov    r10d,DWORD PTR [rsi+rdx*4+0x400]
   140009805:	shr    rax,0x8
   140009809:	movzx  ecx,al
   14000980c:	mov    eax,r8d
   14000980f:	xor    r10d,DWORD PTR [rsi+rcx*4+0x800]
   140009817:	shr    rax,0x18
   14000981b:	xor    r10d,DWORD PTR [rsi+rax*4]
   14000981f:	movzx  eax,r8b
   140009823:	xor    r10d,DWORD PTR [rsi+rax*4+0xc00]
   14000982b:	dec    r9
   14000982e:	jne    0x1400097e2
   140009830:	test   r11d,r11d
   140009833:	je     0x140009853
   140009835:	movzx  ecx,BYTE PTR [rbx]
   140009838:	mov    eax,r10d
   14000983b:	inc    rbx
   14000983e:	xor    rcx,rax
   140009841:	shr    eax,0x8
   140009844:	movzx  edx,cl
   140009847:	mov    r10d,DWORD PTR [rsi+rdx*4]
   14000984b:	xor    r10d,eax
   14000984e:	dec    r11d
   140009851:	jne    0x140009835
   140009853:	mov    rbx,QWORD PTR [rsp+0x8]
   140009858:	mov    rsi,QWORD PTR [rsp+0x10]
   14000985d:	mov    rdi,QWORD PTR [rsp+0x18]
   140009862:	not    r10d
   140009865:	mov    eax,r10d
   140009868:	ret    
   140009869:	int3   
   14000986a:	int3   
   14000986b:	int3   
   14000986c:	test   rdx,rdx
   14000986f:	jne    0x140009874
   140009871:	xor    eax,eax
   140009873:	ret    
   140009874:	jmp    0x140009560
   140009879:	int3   
   14000987a:	int3   
   14000987b:	int3   
   14000987c:	rex push rbx
   14000987e:	sub    rsp,0x20
   140009882:	mov    ebx,ecx
   140009884:	lea    rcx,[rip+0x15195]        # 0x14001ea20
   14000988b:	call   QWORD PTR [rip+0x1083f]        # 0x14001a0d0
   140009891:	test   rax,rax
   140009894:	je     0x1400098af
   140009896:	lea    rdx,[rip+0x15173]        # 0x14001ea10
   14000989d:	mov    rcx,rax
   1400098a0:	call   QWORD PTR [rip+0x107f2]        # 0x14001a098
   1400098a6:	test   rax,rax
   1400098a9:	je     0x1400098af
   1400098ab:	mov    ecx,ebx
   1400098ad:	call   rax
   1400098af:	add    rsp,0x20
   1400098b3:	pop    rbx
   1400098b4:	ret    
   1400098b5:	int3   
   1400098b6:	int3   
   1400098b7:	int3   
   1400098b8:	rex push rbx
   1400098ba:	sub    rsp,0x20
   1400098be:	mov    ebx,ecx
   1400098c0:	call   0x14000987c
   1400098c5:	mov    ecx,ebx
   1400098c7:	call   QWORD PTR [rip+0x1080b]        # 0x14001a0d8
   1400098cd:	int3   
   1400098ce:	int3   
   1400098cf:	int3   
   1400098d0:	mov    ecx,0x8
   1400098d5:	jmp    0x14000cb58
   1400098da:	int3   
   1400098db:	int3   
   1400098dc:	mov    ecx,0x8
   1400098e1:	jmp    0x14000ca58
   1400098e6:	int3   
   1400098e7:	int3   
   1400098e8:	rex push rbx
   1400098ea:	sub    rsp,0x20
   1400098ee:	call   0x14000d0a8
   1400098f3:	mov    rcx,rax
   1400098f6:	mov    rbx,rax
   1400098f9:	call   0x14000d06c
   1400098fe:	mov    rcx,rbx
   140009901:	call   0x14000ce54
   140009906:	mov    rcx,rbx
   140009909:	call   0x14000ce4c
   14000990e:	mov    rcx,rbx
   140009911:	call   0x14000ce44
   140009916:	mov    rcx,rbx
   140009919:	call   0x14000cbe0
   14000991e:	mov    rcx,rbx
   140009921:	add    rsp,0x20
   140009925:	pop    rbx
   140009926:	jmp    0x14000cbc0
   14000992b:	int3   
   14000992c:	cmp    rcx,rdx
   14000992f:	jae    0x14000995e
   140009931:	mov    QWORD PTR [rsp+0x8],rbx
   140009936:	push   rdi
   140009937:	sub    rsp,0x20
   14000993b:	mov    rdi,rdx
   14000993e:	mov    rbx,rcx
   140009941:	mov    rax,QWORD PTR [rbx]
   140009944:	test   rax,rax
   140009947:	je     0x14000994b
   140009949:	call   rax
   14000994b:	add    rbx,0x8
   14000994f:	cmp    rbx,rdi
   140009952:	jb     0x140009941
   140009954:	mov    rbx,QWORD PTR [rsp+0x30]
   140009959:	add    rsp,0x20
   14000995d:	pop    rdi
   14000995e:	ret    
   14000995f:	int3   
   140009960:	mov    QWORD PTR [rsp+0x8],rbx
   140009965:	push   rdi
   140009966:	sub    rsp,0x20
   14000996a:	xor    eax,eax
   14000996c:	mov    rdi,rdx
   14000996f:	mov    rbx,rcx
   140009972:	cmp    rcx,rdx
   140009975:	jae    0x14000998e
   140009977:	test   eax,eax
   140009979:	jne    0x14000998e
   14000997b:	mov    rcx,QWORD PTR [rbx]
   14000997e:	test   rcx,rcx
   140009981:	je     0x140009985
   140009983:	call   rcx
   140009985:	add    rbx,0x8
   140009989:	cmp    rbx,rdi
   14000998c:	jb     0x140009977
   14000998e:	mov    rbx,QWORD PTR [rsp+0x30]
   140009993:	add    rsp,0x20
   140009997:	pop    rdi
   140009998:	ret    
   140009999:	int3   
   14000999a:	int3   
   14000999b:	int3   
   14000999c:	mov    QWORD PTR [rsp+0x8],rbx
   1400099a1:	push   rdi
   1400099a2:	sub    rsp,0x20
   1400099a6:	cmp    QWORD PTR [rip+0x1d322],0x0        # 0x140026cd0
   1400099ae:	mov    ebx,ecx
   1400099b0:	je     0x1400099ca
   1400099b2:	lea    rcx,[rip+0x1d317]        # 0x140026cd0
   1400099b9:	call   0x14000d6e0
   1400099be:	test   eax,eax
   1400099c0:	je     0x1400099ca
   1400099c2:	mov    ecx,ebx
   1400099c4:	call   QWORD PTR [rip+0x1d306]        # 0x140026cd0
   1400099ca:	call   0x14000d628
   1400099cf:	lea    rdx,[rip+0x109ba]        # 0x14001a390
   1400099d6:	lea    rcx,[rip+0x1098b]        # 0x14001a368
   1400099dd:	call   0x140009960
   1400099e2:	test   eax,eax
   1400099e4:	jne    0x140009a40
   1400099e6:	lea    rcx,[rip+0x3c03]        # 0x14000d5f0
   1400099ed:	call   0x14000d5a0
   1400099f2:	lea    rbx,[rip+0x1095f]        # 0x14001a358
   1400099f9:	lea    rdi,[rip+0x10960]        # 0x14001a360
   140009a00:	jmp    0x140009a10
   140009a02:	mov    rax,QWORD PTR [rbx]
   140009a05:	test   rax,rax
   140009a08:	je     0x140009a0c
   140009a0a:	call   rax
   140009a0c:	add    rbx,0x8
   140009a10:	cmp    rbx,rdi
   140009a13:	jb     0x140009a02
   140009a15:	cmp    QWORD PTR [rip+0x1d2bb],0x0        # 0x140026cd8
   140009a1d:	je     0x140009a3e
   140009a1f:	lea    rcx,[rip+0x1d2b2]        # 0x140026cd8
   140009a26:	call   0x14000d6e0
   140009a2b:	test   eax,eax
   140009a2d:	je     0x140009a3e
   140009a2f:	xor    r8d,r8d
   140009a32:	xor    ecx,ecx
   140009a34:	lea    edx,[r8+0x2]
   140009a38:	call   QWORD PTR [rip+0x1d29a]        # 0x140026cd8
   140009a3e:	xor    eax,eax
   140009a40:	mov    rbx,QWORD PTR [rsp+0x30]
   140009a45:	add    rsp,0x20
   140009a49:	pop    rdi
   140009a4a:	ret    
   140009a4b:	int3   
   140009a4c:	mov    QWORD PTR [rsp+0x8],rbx
   140009a51:	mov    QWORD PTR [rsp+0x10],rsi
   140009a56:	mov    DWORD PTR [rsp+0x18],r8d
   140009a5b:	push   rdi
   140009a5c:	push   r12
   140009a5e:	push   r13
   140009a60:	push   r14
   140009a62:	push   r15
   140009a64:	sub    rsp,0x40
   140009a68:	mov    r12d,r8d
   140009a6b:	mov    ebx,edx
   140009a6d:	mov    r15d,ecx
   140009a70:	mov    ecx,0x8
   140009a75:	call   0x14000cb58
   140009a7a:	nop
   140009a7b:	cmp    DWORD PTR [rip+0x1af4e],0x1        # 0x1400249d0
   140009a82:	je     0x140009b89
   140009a88:	mov    DWORD PTR [rip+0x1af3a],0x1        # 0x1400249cc
   140009a92:	mov    BYTE PTR [rip+0x1af2f],r12b        # 0x1400249c8
   140009a99:	test   ebx,ebx
   140009a9b:	jne    0x140009b75
   140009aa1:	mov    rcx,QWORD PTR [rip+0x1d218]        # 0x140026cc0
   140009aa8:	call   QWORD PTR [rip+0x10632]        # 0x14001a0e0
   140009aae:	mov    rsi,rax
   140009ab1:	mov    QWORD PTR [rsp+0x30],rax
   140009ab6:	test   rax,rax
   140009ab9:	je     0x140009b62
   140009abf:	mov    rcx,QWORD PTR [rip+0x1d1f2]        # 0x140026cb8
   140009ac6:	call   QWORD PTR [rip+0x10614]        # 0x14001a0e0
   140009acc:	mov    rdi,rax
   140009acf:	mov    QWORD PTR [rsp+0x20],rax
   140009ad4:	mov    r14,rsi
   140009ad7:	mov    QWORD PTR [rsp+0x28],rsi
   140009adc:	mov    r13,rax
   140009adf:	mov    QWORD PTR [rsp+0x38],rax
   140009ae4:	sub    rdi,0x8
   140009ae8:	mov    QWORD PTR [rsp+0x20],rdi
   140009aed:	cmp    rdi,rsi
   140009af0:	jb     0x140009b62
   140009af2:	call   0x14000d0a8
   140009af7:	cmp    QWORD PTR [rdi],rax
   140009afa:	jne    0x140009afe
   140009afc:	jmp    0x140009ae4
   140009afe:	cmp    rdi,rsi
   140009b01:	jb     0x140009b62
   140009b03:	mov    rcx,QWORD PTR [rdi]
   140009b06:	call   QWORD PTR [rip+0x105d4]        # 0x14001a0e0
   140009b0c:	mov    rbx,rax
   140009b0f:	call   0x14000d0a8
   140009b14:	mov    QWORD PTR [rdi],rax
   140009b17:	call   rbx
   140009b19:	mov    rcx,QWORD PTR [rip+0x1d1a0]        # 0x140026cc0
   140009b20:	call   QWORD PTR [rip+0x105ba]        # 0x14001a0e0
   140009b26:	mov    rbx,rax
   140009b29:	mov    rcx,QWORD PTR [rip+0x1d188]        # 0x140026cb8
   140009b30:	call   QWORD PTR [rip+0x105aa]        # 0x14001a0e0
   140009b36:	cmp    r14,rbx
   140009b39:	jne    0x140009b40
   140009b3b:	cmp    r13,rax
   140009b3e:	je     0x140009afc
   140009b40:	mov    r14,rbx
   140009b43:	mov    QWORD PTR [rsp+0x28],rbx
   140009b48:	mov    rsi,rbx
   140009b4b:	mov    QWORD PTR [rsp+0x30],rbx
   140009b50:	mov    r13,rax
   140009b53:	mov    QWORD PTR [rsp+0x38],rax
   140009b58:	mov    rdi,rax
   140009b5b:	mov    QWORD PTR [rsp+0x20],rax
   140009b60:	jmp    0x140009afc
   140009b62:	lea    rdx,[rip+0x10847]        # 0x14001a3b0
   140009b69:	lea    rcx,[rip+0x10828]        # 0x14001a398
   140009b70:	call   0x14000992c
   140009b75:	lea    rdx,[rip+0x10844]        # 0x14001a3c0
   140009b7c:	lea    rcx,[rip+0x10835]        # 0x14001a3b8
   140009b83:	call   0x14000992c
   140009b88:	nop
   140009b89:	test   r12d,r12d
   140009b8c:	je     0x140009b9d
   140009b8e:	mov    ecx,0x8
   140009b93:	call   0x14000ca58
   140009b98:	test   r12d,r12d
   140009b9b:	jne    0x140009bc3
   140009b9d:	mov    DWORD PTR [rip+0x1ae29],0x1        # 0x1400249d0
   140009ba7:	mov    ecx,0x8
   140009bac:	call   0x14000ca58
   140009bb1:	mov    ecx,r15d
   140009bb4:	call   0x14000987c
   140009bb9:	mov    ecx,r15d
   140009bbc:	call   QWORD PTR [rip+0x10516]        # 0x14001a0d8
   140009bc2:	int3   
   140009bc3:	mov    rbx,QWORD PTR [rsp+0x70]
   140009bc8:	mov    rsi,QWORD PTR [rsp+0x78]
   140009bcd:	add    rsp,0x40
   140009bd1:	pop    r15
   140009bd3:	pop    r14
   140009bd5:	pop    r13
   140009bd7:	pop    r12
   140009bd9:	pop    rdi
   140009bda:	ret    
   140009bdb:	int3   
   140009bdc:	xor    r8d,r8d
   140009bdf:	xor    edx,edx
   140009be1:	jmp    0x140009a4c
   140009be6:	int3   
   140009be7:	int3   
   140009be8:	xor    r8d,r8d
   140009beb:	lea    edx,[r8+0x1]
   140009bef:	jmp    0x140009a4c
   140009bf4:	xor    edx,edx
   140009bf6:	xor    ecx,ecx
   140009bf8:	lea    r8d,[rdx+0x1]
   140009bfc:	jmp    0x140009a4c
   140009c01:	int3   
   140009c02:	int3   
   140009c03:	int3   
   140009c04:	mov    edx,0x1
   140009c09:	xor    ecx,ecx
   140009c0b:	mov    r8d,edx
   140009c0e:	jmp    0x140009a4c
   140009c13:	int3   
   140009c14:	rex push rbx
   140009c16:	sub    rsp,0x20
   140009c1a:	mov    ebx,ecx
   140009c1c:	call   0x14000dbb0
   140009c21:	mov    ecx,ebx
   140009c23:	call   0x14000d950
   140009c28:	xor    r8d,r8d
   140009c2b:	mov    ecx,0xff
   140009c30:	lea    edx,[r8+0x1]
   140009c34:	call   0x140009a4c
   140009c39:	int3   
   140009c3a:	int3   
   140009c3b:	int3   
   140009c3c:	mov    rax,rsp
   140009c3f:	mov    QWORD PTR [rax+0x8],rcx
   140009c43:	mov    QWORD PTR [rax+0x10],rdx
   140009c47:	mov    QWORD PTR [rax+0x18],r8
   140009c4b:	mov    QWORD PTR [rax+0x20],r9
   140009c4f:	push   rbx
   140009c50:	push   rdi
   140009c51:	sub    rsp,0x28
   140009c55:	xor    eax,eax
   140009c57:	test   rcx,rcx
   140009c5a:	setne  al
   140009c5d:	test   eax,eax
   140009c5f:	jne    0x140009c76
   140009c61:	call   0x14000bdf0
   140009c66:	mov    DWORD PTR [rax],0x16
   140009c6c:	call   0x14000d04c
   140009c71:	or     eax,0xffffffff
   140009c74:	jmp    0x140009ce0
   140009c76:	lea    rdi,[rsp+0x48]
   140009c7b:	call   0x14000abc8
   140009c80:	lea    rdx,[rax+0x30]
   140009c84:	mov    ecx,0x1
   140009c89:	call   0x14000ad3c
   140009c8e:	nop
   140009c8f:	call   0x14000abc8
   140009c94:	lea    rcx,[rax+0x30]
   140009c98:	call   0x14000dbf4
   140009c9d:	mov    ebx,eax
   140009c9f:	call   0x14000abc8
   140009ca4:	mov    r9,rdi
   140009ca7:	xor    r8d,r8d
   140009caa:	mov    rdx,QWORD PTR [rsp+0x40]
   140009caf:	lea    rcx,[rax+0x30]
   140009cb3:	call   0x14000de34
   140009cb8:	mov    edi,eax
   140009cba:	call   0x14000abc8
   140009cbf:	lea    rdx,[rax+0x30]
   140009cc3:	mov    ecx,ebx
   140009cc5:	call   0x14000dcc8
   140009cca:	nop
   140009ccb:	call   0x14000abc8
   140009cd0:	lea    rdx,[rax+0x30]
   140009cd4:	mov    ecx,0x1
   140009cd9:	call   0x14000adbc
   140009cde:	mov    eax,edi
   140009ce0:	add    rsp,0x28
   140009ce4:	pop    rdi
   140009ce5:	pop    rbx
   140009ce6:	ret    
   140009ce7:	int3   
   140009ce8:	mov    rcx,QWORD PTR [rip+0x193d1]        # 0x1400230c0
   140009cef:	xor    eax,eax
   140009cf1:	or     rcx,0x1
   140009cf5:	cmp    QWORD PTR [rip+0x1acdc],rcx        # 0x1400249d8
   140009cfc:	sete   al
   140009cff:	ret    
   140009d00:	mov    QWORD PTR [rsp+0x8],rbx
   140009d05:	mov    QWORD PTR [rsp+0x10],rsi
   140009d0a:	push   rdi
   140009d0b:	sub    rsp,0x20
   140009d0f:	cmp    DWORD PTR [rip+0x1cf9a],0x0        # 0x140026cb0
   140009d16:	mov    rbx,QWORD PTR [rip+0x1ac7b]        # 0x140024998
   140009d1d:	mov    rsi,rcx
   140009d20:	je     0x140009d8f
   140009d22:	test   rbx,rbx
   140009d25:	jne    0x140009d45
   140009d27:	cmp    QWORD PTR [rip+0x1ac7a],rbx        # 0x1400249a8
   140009d2e:	je     0x140009d8f
   140009d30:	call   0x14000e9ec
   140009d35:	test   eax,eax
   140009d37:	jne    0x140009d8f
   140009d39:	mov    rbx,QWORD PTR [rip+0x1ac58]        # 0x140024998
   140009d40:	test   rbx,rbx
   140009d43:	je     0x140009d8f
   140009d45:	test   rsi,rsi
   140009d48:	je     0x140009d8f
   140009d4a:	mov    rcx,rsi
   140009d4d:	call   0x140009fd0
   140009d52:	mov    rdi,rax
   140009d55:	mov    rcx,QWORD PTR [rbx]
   140009d58:	test   rcx,rcx
   140009d5b:	je     0x140009d8f
   140009d5d:	call   0x140009fd0
   140009d62:	cmp    rax,rdi
   140009d65:	jbe    0x140009d7f
   140009d67:	mov    rcx,QWORD PTR [rbx]
   140009d6a:	cmp    BYTE PTR [rcx+rdi*1],0x3d
   140009d6e:	jne    0x140009d7f
   140009d70:	mov    r8,rdi
   140009d73:	mov    rdx,rsi
   140009d76:	call   0x14000e9e4
   140009d7b:	test   eax,eax
   140009d7d:	je     0x140009d85
   140009d7f:	add    rbx,0x8
   140009d83:	jmp    0x140009d55
   140009d85:	mov    rax,QWORD PTR [rbx]
   140009d88:	lea    rax,[rax+rdi*1+0x1]
   140009d8d:	jmp    0x140009d91
   140009d8f:	xor    eax,eax
   140009d91:	mov    rbx,QWORD PTR [rsp+0x30]
   140009d96:	mov    rsi,QWORD PTR [rsp+0x38]
   140009d9b:	add    rsp,0x20
   140009d9f:	pop    rdi
   140009da0:	ret    
   140009da1:	int3   
   140009da2:	int3   
   140009da3:	int3   
   140009da4:	rex push rbx
   140009da6:	sub    rsp,0x20
   140009daa:	mov    rbx,rcx
   140009dad:	xor    eax,eax
   140009daf:	test   rcx,rcx
   140009db2:	setne  al
   140009db5:	test   eax,eax
   140009db7:	jne    0x140009dcd
   140009db9:	call   0x14000bdf0
   140009dbe:	mov    DWORD PTR [rax],0x16
   140009dc4:	call   0x14000d04c
   140009dc9:	xor    eax,eax
   140009dcb:	jmp    0x140009e09
   140009dcd:	mov    edx,0x7fff
   140009dd2:	call   0x14000eb88
   140009dd7:	xor    ecx,ecx
   140009dd9:	cmp    rax,0x7fff
   140009ddf:	setb   cl
   140009de2:	test   ecx,ecx
   140009de4:	je     0x140009db9
   140009de6:	mov    ecx,0x7
   140009deb:	call   0x14000cb58
   140009df0:	nop
   140009df1:	mov    rcx,rbx
   140009df4:	call   0x140009d00
   140009df9:	mov    rbx,rax
   140009dfc:	mov    ecx,0x7
   140009e01:	call   0x14000ca58
   140009e06:	mov    rax,rbx
   140009e09:	add    rsp,0x20
   140009e0d:	pop    rbx
   140009e0e:	ret    
   140009e0f:	int3   
   140009e10:	mov    QWORD PTR [rsp+0x10],rbx
   140009e15:	push   rdi
   140009e16:	sub    rsp,0xa0
   140009e1d:	lea    rcx,[rsp+0x30]
   140009e22:	call   QWORD PTR [rip+0x102c0]        # 0x14001a0e8
   140009e28:	mov    r11d,0x5a4d
   140009e2e:	lea    rdi,[rip+0xffffffffffff61cb]        # 0x140000000
   140009e35:	cmp    WORD PTR [rip+0xffffffffffff61c3],r11w        # 0x140000000
   140009e3d:	je     0x140009e43
   140009e3f:	xor    ebx,ebx
   140009e41:	jmp    0x140009e74
   140009e43:	movsxd rax,DWORD PTR [rip+0xffffffffffff61f2]        # 0x14000003c
   140009e4a:	add    rax,rdi
   140009e4d:	cmp    DWORD PTR [rax],0x4550
   140009e53:	jne    0x140009e3f
   140009e55:	mov    ecx,0x20b
   140009e5a:	cmp    WORD PTR [rax+0x18],cx
   140009e5e:	jne    0x140009e3f
   140009e60:	xor    ebx,ebx
   140009e62:	cmp    DWORD PTR [rax+0x84],0xe
   140009e69:	jbe    0x140009e74
   140009e6b:	cmp    DWORD PTR [rax+0xf8],ebx
   140009e71:	setne  bl
   140009e74:	mov    DWORD PTR [rsp+0xb0],ebx
   140009e7b:	call   0x14000f60c
   140009e80:	test   eax,eax
   140009e82:	jne    0x140009ea6
   140009e84:	cmp    DWORD PTR [rip+0x1ab65],0x1        # 0x1400249f0
   140009e8b:	jne    0x140009e92
   140009e8d:	call   0x14000dbb0
   140009e92:	mov    ecx,0x1c
   140009e97:	call   0x14000d950
   140009e9c:	mov    ecx,0xff
   140009ea1:	call   0x1400098b8
   140009ea6:	call   0x14000d3cc
   140009eab:	test   eax,eax
   140009ead:	jne    0x140009ed1
   140009eaf:	cmp    DWORD PTR [rip+0x1ab3a],0x1        # 0x1400249f0
   140009eb6:	jne    0x140009ebd
   140009eb8:	call   0x14000dbb0
   140009ebd:	mov    ecx,0x10
   140009ec2:	call   0x14000d950
   140009ec7:	mov    ecx,0xff
   140009ecc:	call   0x1400098b8
   140009ed1:	call   0x14000d5b8
   140009ed6:	nop
   140009ed7:	call   0x14000f338
   140009edc:	test   eax,eax
   140009ede:	jns    0x140009eea
   140009ee0:	mov    ecx,0x1b
   140009ee5:	call   0x140009c14
   140009eea:	call   QWORD PTR [rip+0x10150]        # 0x14001a040
   140009ef0:	mov    QWORD PTR [rip+0x1cdb1],rax        # 0x140026ca8
   140009ef7:	call   0x14000f244
   140009efc:	mov    QWORD PTR [rip+0x1aadd],rax        # 0x1400249e0
   140009f03:	call   0x14000f14c
   140009f08:	test   eax,eax
   140009f0a:	jns    0x140009f16
   140009f0c:	mov    ecx,0x8
   140009f11:	call   0x140009c14
   140009f16:	call   0x14000ee4c
   140009f1b:	test   eax,eax
   140009f1d:	jns    0x140009f29
   140009f1f:	mov    ecx,0x9
   140009f24:	call   0x140009c14
   140009f29:	mov    ecx,0x1
   140009f2e:	call   0x14000999c
   140009f33:	test   eax,eax
   140009f35:	je     0x140009f3e
   140009f37:	mov    ecx,eax
   140009f39:	call   0x140009c14
   140009f3e:	call   0x14000edd0
   140009f43:	test   BYTE PTR [rsp+0x6c],0x1
   140009f48:	movzx  edx,WORD PTR [rsp+0x70]
   140009f4d:	mov    r9d,0xa
   140009f53:	cmovne r9d,edx
   140009f57:	mov    r8,rax
   140009f5a:	xor    edx,edx
   140009f5c:	mov    rcx,rdi
   140009f5f:	call   0x140001000
   140009f64:	mov    edi,eax
   140009f66:	mov    DWORD PTR [rsp+0x20],eax
   140009f6a:	test   ebx,ebx
   140009f6c:	jne    0x140009f75
   140009f6e:	mov    ecx,eax
   140009f70:	call   0x140009bdc
   140009f75:	call   0x140009bf4
   140009f7a:	jmp    0x140009f96
   140009f7c:	mov    edi,eax
   140009f7e:	cmp    DWORD PTR [rsp+0xb0],0x0
   140009f86:	jne    0x140009f90
   140009f88:	mov    ecx,eax
   140009f8a:	call   0x140009be8
   140009f8f:	int3   
   140009f90:	call   0x140009c04
   140009f95:	nop
   140009f96:	mov    eax,edi
   140009f98:	mov    rbx,QWORD PTR [rsp+0xb8]
   140009fa0:	add    rsp,0xa0
   140009fa7:	pop    rdi
   140009fa8:	ret    
   140009fa9:	int3   
   140009faa:	int3   
   140009fab:	int3   
   140009fac:	sub    rsp,0x28
   140009fb0:	call   0x14000f664
   140009fb5:	add    rsp,0x28
   140009fb9:	jmp    0x140009e10
   140009fbe:	int3   
   140009fbf:	int3   
   140009fc0:	int3   
   140009fc1:	int3   
   140009fc2:	int3   
   140009fc3:	int3   
   140009fc4:	int3   
   140009fc5:	int3   
   140009fc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009fd0:	mov    rax,rcx
   140009fd3:	neg    rcx
   140009fd6:	test   rax,0x7
   140009fdc:	je     0x140009fed
   140009fde:	xchg   ax,ax
   140009fe0:	mov    dl,BYTE PTR [rax]
   140009fe2:	inc    rax
   140009fe5:	test   dl,dl
   140009fe7:	je     0x14000a048
   140009fe9:	test   al,0x7
   140009feb:	jne    0x140009fe0
   140009fed:	movabs r8,0x7efefefefefefeff
   140009ff7:	movabs r11,0x8101010101010100
   14000a001:	mov    rdx,QWORD PTR [rax]
   14000a004:	mov    r9,r8
   14000a007:	add    rax,0x8
   14000a00b:	add    r9,rdx
   14000a00e:	not    rdx
   14000a011:	xor    rdx,r9
   14000a014:	and    rdx,r11
   14000a017:	je     0x14000a001
   14000a019:	mov    rdx,QWORD PTR [rax-0x8]
   14000a01d:	test   dl,dl
   14000a01f:	je     0x14000a072
   14000a021:	test   dh,dh
   14000a023:	je     0x14000a06c
   14000a025:	shr    rdx,0x10
   14000a029:	test   dl,dl
   14000a02b:	je     0x14000a066
   14000a02d:	test   dh,dh
   14000a02f:	je     0x14000a060
   14000a031:	shr    rdx,0x10
   14000a035:	test   dl,dl
   14000a037:	je     0x14000a05a
   14000a039:	test   dh,dh
   14000a03b:	je     0x14000a054
   14000a03d:	shr    edx,0x10
   14000a040:	test   dl,dl
   14000a042:	je     0x14000a04e
   14000a044:	test   dh,dh
   14000a046:	jne    0x14000a001
   14000a048:	lea    rax,[rcx+rax*1-0x1]
   14000a04d:	ret    
   14000a04e:	lea    rax,[rcx+rax*1-0x2]
   14000a053:	ret    
   14000a054:	lea    rax,[rcx+rax*1-0x3]
   14000a059:	ret    
   14000a05a:	lea    rax,[rcx+rax*1-0x4]
   14000a05f:	ret    
   14000a060:	lea    rax,[rcx+rax*1-0x5]
   14000a065:	ret    
   14000a066:	lea    rax,[rcx+rax*1-0x6]
   14000a06b:	ret    
   14000a06c:	lea    rax,[rcx+rax*1-0x7]
   14000a071:	ret    
   14000a072:	lea    rax,[rcx+rax*1-0x8]
   14000a077:	ret    
   14000a078:	mov    rax,rsp
   14000a07b:	mov    QWORD PTR [rax+0x8],rbx
   14000a07f:	mov    QWORD PTR [rax+0x10],rbp
   14000a083:	mov    QWORD PTR [rax+0x18],rsi
   14000a087:	push   rdi
   14000a088:	sub    rsp,0x50
   14000a08c:	and    QWORD PTR [rax-0x38],0x0
   14000a091:	mov    rdi,rdx
   14000a094:	xor    edx,edx
   14000a096:	mov    rbx,r8
   14000a099:	mov    rbp,rcx
   14000a09c:	lea    r8d,[rdx+0x28]
   14000a0a0:	lea    rcx,[rax-0x30]
   14000a0a4:	mov    rsi,r9
   14000a0a7:	call   0x14000a560
   14000a0ac:	test   rdi,rdi
   14000a0af:	jne    0x14000a0c6
   14000a0b1:	call   0x14000bdf0
   14000a0b6:	mov    DWORD PTR [rax],0x16
   14000a0bc:	call   0x14000d04c
   14000a0c1:	or     eax,0xffffffff
   14000a0c4:	jmp    0x14000a109
   14000a0c6:	test   rbx,rbx
   14000a0c9:	je     0x14000a0b1
   14000a0cb:	mov    rcx,rdi
   14000a0ce:	call   0x140009fd0
   14000a0d3:	mov    r9,QWORD PTR [rsp+0x80]
   14000a0db:	mov    ecx,0x7fffffff
   14000a0e0:	cmp    rax,rcx
   14000a0e3:	mov    r8,rsi
   14000a0e6:	mov    rdx,rbx
   14000a0e9:	cmova  eax,ecx
   14000a0ec:	lea    rcx,[rsp+0x20]
   14000a0f1:	mov    DWORD PTR [rsp+0x38],0x49
   14000a0f9:	mov    QWORD PTR [rsp+0x30],rdi
   14000a0fe:	mov    QWORD PTR [rsp+0x20],rdi
   14000a103:	mov    DWORD PTR [rsp+0x28],eax
   14000a107:	call   rbp
   14000a109:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a10e:	mov    rbp,QWORD PTR [rsp+0x68]
   14000a113:	mov    rsi,QWORD PTR [rsp+0x70]
   14000a118:	add    rsp,0x50
   14000a11c:	pop    rdi
   14000a11d:	ret    
   14000a11e:	int3   
   14000a11f:	int3   
   14000a120:	mov    r11,rsp
   14000a123:	mov    QWORD PTR [r11+0x10],rdx
   14000a127:	mov    QWORD PTR [r11+0x18],r8
   14000a12b:	mov    QWORD PTR [r11+0x20],r9
   14000a12f:	sub    rsp,0x38
   14000a133:	mov    r8,rdx
   14000a136:	lea    rax,[r11+0x18]
   14000a13a:	mov    rdx,rcx
   14000a13d:	lea    rcx,[rip+0x5694]        # 0x14000f7d8
   14000a144:	xor    r9d,r9d
   14000a147:	mov    QWORD PTR [r11-0x18],rax
   14000a14b:	call   0x14000a078
   14000a150:	add    rsp,0x38
   14000a154:	ret    
   14000a155:	int3   
   14000a156:	int3   
   14000a157:	int3   
   14000a158:	int3   
   14000a159:	int3   
   14000a15a:	int3   
   14000a15b:	int3   
   14000a15c:	int3   
   14000a15d:	int3   
   14000a15e:	int3   
   14000a15f:	int3   
   14000a160:	int3   
   14000a161:	int3   
   14000a162:	int3   
   14000a163:	int3   
   14000a164:	int3   
   14000a165:	int3   
   14000a166:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a170:	mov    r11,rcx
   14000a173:	sub    rdx,rcx
   14000a176:	jb     0x14000a31a
   14000a17c:	cmp    r8,0x8
   14000a180:	jb     0x14000a1e3
   14000a182:	test   cl,0x7
   14000a185:	je     0x14000a1bd
   14000a187:	test   cl,0x1
   14000a18a:	je     0x14000a197
   14000a18c:	mov    al,BYTE PTR [rdx+rcx*1]
   14000a18f:	dec    r8
   14000a192:	mov    BYTE PTR [rcx],al
   14000a194:	inc    rcx
   14000a197:	test   cl,0x2
   14000a19a:	je     0x14000a1ab
   14000a19c:	mov    ax,WORD PTR [rdx+rcx*1]
   14000a1a0:	sub    r8,0x2
   14000a1a4:	mov    WORD PTR [rcx],ax
   14000a1a7:	add    rcx,0x2
   14000a1ab:	test   cl,0x4
   14000a1ae:	je     0x14000a1bd
   14000a1b0:	mov    eax,DWORD PTR [rdx+rcx*1]
   14000a1b3:	sub    r8,0x4
   14000a1b7:	mov    DWORD PTR [rcx],eax
   14000a1b9:	add    rcx,0x4
   14000a1bd:	mov    r9,r8
   14000a1c0:	shr    r9,0x5
   14000a1c4:	jne    0x14000a217
   14000a1c6:	mov    r9,r8
   14000a1c9:	shr    r9,0x3
   14000a1cd:	je     0x14000a1e3
   14000a1cf:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000a1d3:	mov    QWORD PTR [rcx],rax
   14000a1d6:	add    rcx,0x8
   14000a1da:	dec    r9
   14000a1dd:	jne    0x14000a1cf
   14000a1df:	and    r8,0x7
   14000a1e3:	test   r8,r8
   14000a1e6:	jne    0x14000a1f0
   14000a1e8:	mov    rax,r11
   14000a1eb:	ret    
   14000a1ec:	nop    DWORD PTR [rax+0x0]
   14000a1f0:	mov    al,BYTE PTR [rdx+rcx*1]
   14000a1f3:	mov    BYTE PTR [rcx],al
   14000a1f5:	inc    rcx
   14000a1f8:	dec    r8
   14000a1fb:	jne    0x14000a1f0
   14000a1fd:	mov    rax,r11
   14000a200:	ret    
   14000a201:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a210:	data16 data16 xchg ax,ax
   14000a214:	data16 xchg ax,ax
   14000a217:	cmp    r9,0x2000
   14000a21e:	jae    0x14000a262
   14000a220:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000a224:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   14000a229:	add    rcx,0x20
   14000a22d:	mov    QWORD PTR [rcx-0x20],rax
   14000a231:	mov    QWORD PTR [rcx-0x18],r10
   14000a235:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14000a23a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14000a23f:	dec    r9
   14000a242:	mov    QWORD PTR [rcx-0x10],rax
   14000a246:	mov    QWORD PTR [rcx-0x8],r10
   14000a24a:	jne    0x14000a220
   14000a24c:	and    r8,0x1f
   14000a250:	jmp    0x14000a1c6
   14000a255:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a260:	xchg   ax,ax
   14000a262:	cmp    rdx,0x1000
   14000a269:	jb     0x14000a220
   14000a26b:	mov    eax,0x20
   14000a270:	prefetchnta BYTE PTR [rdx+rcx*1]
   14000a274:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14000a279:	add    rcx,0x80
   14000a280:	dec    eax
   14000a282:	jne    0x14000a270
   14000a284:	sub    rcx,0x1000
   14000a28b:	mov    eax,0x40
   14000a290:	mov    r9,QWORD PTR [rdx+rcx*1]
   14000a294:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   14000a299:	movnti QWORD PTR [rcx],r9
   14000a29d:	movnti QWORD PTR [rcx+0x8],r10
   14000a2a2:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   14000a2a7:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   14000a2ac:	movnti QWORD PTR [rcx+0x10],r9
   14000a2b1:	movnti QWORD PTR [rcx+0x18],r10
   14000a2b6:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   14000a2bb:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   14000a2c0:	add    rcx,0x40
   14000a2c4:	movnti QWORD PTR [rcx-0x20],r9
   14000a2c9:	movnti QWORD PTR [rcx-0x18],r10
   14000a2ce:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   14000a2d3:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14000a2d8:	dec    eax
   14000a2da:	movnti QWORD PTR [rcx-0x10],r9
   14000a2df:	movnti QWORD PTR [rcx-0x8],r10
   14000a2e4:	jne    0x14000a290
   14000a2e6:	sub    r8,0x1000
   14000a2ed:	cmp    r8,0x1000
   14000a2f4:	jae    0x14000a26b
   14000a2fa:	lock or BYTE PTR [rsp],0x0
   14000a2ff:	jmp    0x14000a1bd
   14000a304:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a310:	data16 data16 xchg ax,ax
   14000a314:	data16 data16 xchg ax,ax
   14000a318:	xchg   ax,ax
   14000a31a:	add    rcx,r8
   14000a31d:	cmp    r8,0x8
   14000a321:	jb     0x14000a384
   14000a323:	test   cl,0x7
   14000a326:	je     0x14000a35e
   14000a328:	test   cl,0x1
   14000a32b:	je     0x14000a338
   14000a32d:	dec    rcx
   14000a330:	mov    al,BYTE PTR [rdx+rcx*1]
   14000a333:	dec    r8
   14000a336:	mov    BYTE PTR [rcx],al
   14000a338:	test   cl,0x2
   14000a33b:	je     0x14000a34c
   14000a33d:	sub    rcx,0x2
   14000a341:	mov    ax,WORD PTR [rdx+rcx*1]
   14000a345:	sub    r8,0x2
   14000a349:	mov    WORD PTR [rcx],ax
   14000a34c:	test   cl,0x4
   14000a34f:	je     0x14000a35e
   14000a351:	sub    rcx,0x4
   14000a355:	mov    eax,DWORD PTR [rdx+rcx*1]
   14000a358:	sub    r8,0x4
   14000a35c:	mov    DWORD PTR [rcx],eax
   14000a35e:	mov    r9,r8
   14000a361:	shr    r9,0x5
   14000a365:	jne    0x14000a3b7
   14000a367:	mov    r9,r8
   14000a36a:	shr    r9,0x3
   14000a36e:	je     0x14000a384
   14000a370:	sub    rcx,0x8
   14000a374:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000a378:	dec    r9
   14000a37b:	mov    QWORD PTR [rcx],rax
   14000a37e:	jne    0x14000a370
   14000a380:	and    r8,0x7
   14000a384:	test   r8,r8
   14000a387:	jne    0x14000a390
   14000a389:	mov    rax,r11
   14000a38c:	ret    
   14000a38d:	nop    DWORD PTR [rax]
   14000a390:	dec    rcx
   14000a393:	mov    al,BYTE PTR [rdx+rcx*1]
   14000a396:	dec    r8
   14000a399:	mov    BYTE PTR [rcx],al
   14000a39b:	jne    0x14000a390
   14000a39d:	mov    rax,r11
   14000a3a0:	ret    
   14000a3a1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a3b0:	data16 data16 xchg ax,ax
   14000a3b4:	data16 xchg ax,ax
   14000a3b7:	cmp    r9,0x2000
   14000a3be:	jae    0x14000a402
   14000a3c0:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   14000a3c5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14000a3ca:	sub    rcx,0x20
   14000a3ce:	mov    QWORD PTR [rcx+0x18],rax
   14000a3d2:	mov    QWORD PTR [rcx+0x10],r10
   14000a3d6:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000a3db:	mov    r10,QWORD PTR [rdx+rcx*1]
   14000a3df:	dec    r9
   14000a3e2:	mov    QWORD PTR [rcx+0x8],rax
   14000a3e6:	mov    QWORD PTR [rcx],r10
   14000a3e9:	jne    0x14000a3c0
   14000a3eb:	and    r8,0x1f
   14000a3ef:	jmp    0x14000a367
   14000a3f4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a400:	xchg   ax,ax
   14000a402:	cmp    rdx,0xfffffffffffff000
   14000a409:	ja     0x14000a3c0
   14000a40b:	mov    eax,0x20
   14000a410:	sub    rcx,0x80
   14000a417:	prefetchnta BYTE PTR [rdx+rcx*1]
   14000a41b:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14000a420:	dec    eax
   14000a422:	jne    0x14000a410
   14000a424:	add    rcx,0x1000
   14000a42b:	mov    eax,0x40
   14000a430:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   14000a435:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14000a43a:	movnti QWORD PTR [rcx-0x8],r9
   14000a43f:	movnti QWORD PTR [rcx-0x10],r10
   14000a444:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   14000a449:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   14000a44e:	movnti QWORD PTR [rcx-0x18],r9
   14000a453:	movnti QWORD PTR [rcx-0x20],r10
   14000a458:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   14000a45d:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   14000a462:	sub    rcx,0x40
   14000a466:	movnti QWORD PTR [rcx+0x18],r9
   14000a46b:	movnti QWORD PTR [rcx+0x10],r10
   14000a470:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   14000a475:	mov    r10,QWORD PTR [rdx+rcx*1]
   14000a479:	dec    eax
   14000a47b:	movnti QWORD PTR [rcx+0x8],r9
   14000a480:	movnti QWORD PTR [rcx],r10
   14000a484:	jne    0x14000a430
   14000a486:	sub    r8,0x1000
   14000a48d:	cmp    r8,0x1000
   14000a494:	jae    0x14000a40b
   14000a49a:	lock or BYTE PTR [rsp],0x0
   14000a49f:	jmp    0x14000a35e
   14000a4a4:	mov    QWORD PTR [rsp+0x10],rdx
   14000a4a9:	mov    QWORD PTR [rsp+0x18],r8
   14000a4ae:	mov    QWORD PTR [rsp+0x20],r9
   14000a4b3:	push   rbp
   14000a4b4:	push   rbx
   14000a4b5:	push   rdi
   14000a4b6:	mov    rbp,rsp
   14000a4b9:	sub    rsp,0x50
   14000a4bd:	and    QWORD PTR [rbp-0x30],0x0
   14000a4c2:	mov    rdi,rdx
   14000a4c5:	xor    edx,edx
   14000a4c7:	mov    rbx,rcx
   14000a4ca:	lea    rcx,[rbp-0x28]
   14000a4ce:	lea    r8d,[rdx+0x28]
   14000a4d2:	call   0x14000a560
   14000a4d7:	test   rdi,rdi
   14000a4da:	jne    0x14000a4f1
   14000a4dc:	call   0x14000bdf0
   14000a4e1:	mov    DWORD PTR [rax],0x16
   14000a4e7:	call   0x14000d04c
   14000a4ec:	or     eax,0xffffffff
   14000a4ef:	jmp    0x14000a53c
   14000a4f1:	test   rbx,rbx
   14000a4f4:	je     0x14000a4dc
   14000a4f6:	lea    r9,[rbp+0x30]
   14000a4fa:	lea    rcx,[rbp-0x30]
   14000a4fe:	xor    r8d,r8d
   14000a501:	mov    rdx,rdi
   14000a504:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   14000a50b:	mov    DWORD PTR [rbp-0x18],0x42
   14000a512:	mov    QWORD PTR [rbp-0x20],rbx
   14000a516:	mov    QWORD PTR [rbp-0x30],rbx
   14000a51a:	call   0x14000de34
   14000a51f:	dec    DWORD PTR [rbp-0x28]
   14000a522:	mov    ebx,eax
   14000a524:	js     0x14000a52f
   14000a526:	mov    rcx,QWORD PTR [rbp-0x30]
   14000a52a:	mov    BYTE PTR [rcx],0x0
   14000a52d:	jmp    0x14000a53a
   14000a52f:	lea    rdx,[rbp-0x30]
   14000a533:	xor    ecx,ecx
   14000a535:	call   0x14001084c
   14000a53a:	mov    eax,ebx
   14000a53c:	add    rsp,0x50
   14000a540:	pop    rdi
   14000a541:	pop    rbx
   14000a542:	pop    rbp
   14000a543:	ret    
   14000a544:	int3   
   14000a545:	int3   
   14000a546:	int3   
   14000a547:	int3   
   14000a548:	int3   
   14000a549:	int3   
   14000a54a:	int3   
   14000a54b:	int3   
   14000a54c:	int3   
   14000a54d:	int3   
   14000a54e:	int3   
   14000a54f:	int3   
   14000a550:	int3   
   14000a551:	int3   
   14000a552:	int3   
   14000a553:	int3   
   14000a554:	int3   
   14000a555:	int3   
   14000a556:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a560:	mov    rax,rcx
   14000a563:	cmp    r8,0x8
   14000a567:	jb     0x14000a5bc
   14000a569:	movzx  edx,dl
   14000a56c:	movabs r9,0x101010101010101
   14000a576:	imul   rdx,r9
   14000a57a:	cmp    r8,0x40
   14000a57e:	jb     0x14000a59e
   14000a580:	neg    rcx
   14000a583:	and    ecx,0x7
   14000a586:	je     0x14000a58e
   14000a588:	sub    r8,rcx
   14000a58b:	mov    QWORD PTR [rax],rdx
   14000a58e:	add    rcx,rax
   14000a591:	mov    r9,r8
   14000a594:	and    r8,0x3f
   14000a598:	shr    r9,0x6
   14000a59c:	jne    0x14000a5d7
   14000a59e:	mov    r9,r8
   14000a5a1:	and    r8,0x7
   14000a5a5:	shr    r9,0x3
   14000a5a9:	je     0x14000a5bc
   14000a5ab:	data16 data16 xchg ax,ax
   14000a5af:	nop
   14000a5b0:	mov    QWORD PTR [rcx],rdx
   14000a5b3:	add    rcx,0x8
   14000a5b7:	dec    r9
   14000a5ba:	jne    0x14000a5b0
   14000a5bc:	test   r8,r8
   14000a5bf:	je     0x14000a5cb
   14000a5c1:	mov    BYTE PTR [rcx],dl
   14000a5c3:	inc    rcx
   14000a5c6:	dec    r8
   14000a5c9:	jne    0x14000a5c1
   14000a5cb:	ret    
   14000a5cc:	nop    DWORD PTR [rax+0x0]
   14000a5d0:	data16 data16 xchg ax,ax
   14000a5d4:	data16 xchg ax,ax
   14000a5d7:	cmp    r9,0x1c00
   14000a5de:	jae    0x14000a610
   14000a5e0:	mov    QWORD PTR [rcx],rdx
   14000a5e3:	mov    QWORD PTR [rcx+0x8],rdx
   14000a5e7:	mov    QWORD PTR [rcx+0x10],rdx
   14000a5eb:	add    rcx,0x40
   14000a5ef:	mov    QWORD PTR [rcx-0x28],rdx
   14000a5f3:	mov    QWORD PTR [rcx-0x20],rdx
   14000a5f7:	dec    r9
   14000a5fa:	mov    QWORD PTR [rcx-0x18],rdx
   14000a5fe:	mov    QWORD PTR [rcx-0x10],rdx
   14000a602:	mov    QWORD PTR [rcx-0x8],rdx
   14000a606:	jne    0x14000a5e0
   14000a608:	jmp    0x14000a59e
   14000a60a:	nop    WORD PTR [rax+rax*1+0x0]
   14000a610:	movnti QWORD PTR [rcx],rdx
   14000a614:	movnti QWORD PTR [rcx+0x8],rdx
   14000a619:	movnti QWORD PTR [rcx+0x10],rdx
   14000a61e:	add    rcx,0x40
   14000a622:	movnti QWORD PTR [rcx-0x28],rdx
   14000a627:	movnti QWORD PTR [rcx-0x20],rdx
   14000a62c:	dec    r9
   14000a62f:	movnti QWORD PTR [rcx-0x18],rdx
   14000a634:	movnti QWORD PTR [rcx-0x10],rdx
   14000a639:	movnti QWORD PTR [rcx-0x8],rdx
   14000a63e:	jne    0x14000a610
   14000a640:	lock or BYTE PTR [rsp],0x0
   14000a645:	jmp    0x14000a59e
   14000a64a:	int3   
   14000a64b:	int3   
   14000a64c:	rex push rbx
   14000a64e:	sub    rsp,0x20
   14000a652:	mov    r11d,DWORD PTR [r8]
   14000a655:	mov    rbx,rdx
   14000a658:	mov    r9,rcx
   14000a65b:	and    r11d,0xfffffff8
   14000a65f:	test   BYTE PTR [r8],0x4
   14000a663:	mov    r10,rcx
   14000a666:	je     0x14000a67b
   14000a668:	mov    eax,DWORD PTR [r8+0x8]
   14000a66c:	movsxd r10,DWORD PTR [r8+0x4]
   14000a670:	neg    eax
   14000a672:	add    r10,rcx
   14000a675:	movsxd rcx,eax
   14000a678:	and    r10,rcx
   14000a67b:	movsxd rax,r11d
   14000a67e:	mov    rdx,QWORD PTR [rax+r10*1]
   14000a682:	mov    rax,QWORD PTR [rbx+0x10]
   14000a686:	mov    ecx,DWORD PTR [rax+0x8]
   14000a689:	add    rcx,QWORD PTR [rbx+0x8]
   14000a68d:	test   BYTE PTR [rcx+0x3],0xf
   14000a691:	je     0x14000a69f
   14000a693:	movzx  eax,BYTE PTR [rcx+0x3]
   14000a697:	and    eax,0xfffffff0
   14000a69a:	cdqe   
   14000a69c:	add    r9,rax
   14000a69f:	xor    r9,rdx
   14000a6a2:	mov    rcx,r9
   14000a6a5:	add    rsp,0x20
   14000a6a9:	pop    rbx
   14000a6aa:	jmp    0x14000a850
   14000a6af:	int3   
   14000a6b0:	sub    rsp,0x28
   14000a6b4:	mov    r8,QWORD PTR [r9+0x38]
   14000a6b8:	mov    rcx,rdx
   14000a6bb:	mov    rdx,r9
   14000a6be:	call   0x14000a64c
   14000a6c3:	mov    eax,0x1
   14000a6c8:	add    rsp,0x28
   14000a6cc:	ret    
   14000a6cd:	int3   
   14000a6ce:	int3   
   14000a6cf:	int3   
   14000a6d0:	int3   
   14000a6d1:	int3   
   14000a6d2:	int3   
   14000a6d3:	int3   
   14000a6d4:	int3   
   14000a6d5:	int3   
   14000a6d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a6e0:	mov    r11,rcx
   14000a6e3:	test   cl,0x7
   14000a6e6:	je     0x14000a6fa
   14000a6e8:	mov    al,BYTE PTR [rcx]
   14000a6ea:	test   al,al
   14000a6ec:	je     0x14000a783
   14000a6f2:	inc    rcx
   14000a6f5:	test   cl,0x7
   14000a6f8:	jne    0x14000a6e8
   14000a6fa:	mov    rax,QWORD PTR [rcx]
   14000a6fd:	mov    r10,rax
   14000a700:	movabs r9,0x7efefefefefefeff
   14000a70a:	add    r9,r10
   14000a70d:	xor    r10,0xffffffffffffffff
   14000a711:	xor    r10,r9
   14000a714:	add    rcx,0x8
   14000a718:	movabs r9,0x8101010101010100
   14000a722:	test   r9,r10
   14000a725:	je     0x14000a6fa
   14000a727:	sub    rcx,0x8
   14000a72b:	test   al,al
   14000a72d:	je     0x14000a783
   14000a72f:	inc    rcx
   14000a732:	test   ah,ah
   14000a734:	je     0x14000a783
   14000a736:	inc    rcx
   14000a739:	shr    rax,0x10
   14000a73d:	test   al,al
   14000a73f:	je     0x14000a783
   14000a741:	inc    rcx
   14000a744:	test   ah,ah
   14000a746:	je     0x14000a783
   14000a748:	inc    rcx
   14000a74b:	shr    rax,0x10
   14000a74f:	test   al,al
   14000a751:	je     0x14000a783
   14000a753:	inc    rcx
   14000a756:	test   ah,ah
   14000a758:	je     0x14000a783
   14000a75a:	inc    rcx
   14000a75d:	shr    eax,0x10
   14000a760:	test   al,al
   14000a762:	je     0x14000a783
   14000a764:	inc    rcx
   14000a767:	test   ah,ah
   14000a769:	je     0x14000a783
   14000a76b:	inc    rcx
   14000a76e:	jmp    0x14000a6fa
   14000a770:	int3   
   14000a771:	int3   
   14000a772:	int3   
   14000a773:	int3   
   14000a774:	int3   
   14000a775:	int3   
   14000a776:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a780:	mov    r11,rcx
   14000a783:	sub    rcx,rdx
   14000a786:	test   dl,0x7
   14000a789:	je     0x14000a7aa
   14000a78b:	mov    al,BYTE PTR [rdx]
   14000a78d:	mov    BYTE PTR [rcx+rdx*1],al
   14000a790:	test   al,al
   14000a792:	je     0x14000a79e
   14000a794:	inc    rdx
   14000a797:	test   dl,0x7
   14000a79a:	jne    0x14000a78b
   14000a79c:	jmp    0x14000a7aa
   14000a79e:	mov    rax,r11
   14000a7a1:	ret    
   14000a7a2:	mov    QWORD PTR [rcx+rdx*1],rax
   14000a7a6:	add    rdx,0x8
   14000a7aa:	mov    rax,QWORD PTR [rdx]
   14000a7ad:	movabs r9,0x7efefefefefefeff
   14000a7b7:	add    r9,rax
   14000a7ba:	mov    r10,rax
   14000a7bd:	xor    r10,0xffffffffffffffff
   14000a7c1:	xor    r10,r9
   14000a7c4:	movabs r9,0x8101010101010100
   14000a7ce:	test   r9,r10
   14000a7d1:	je     0x14000a7a2
   14000a7d3:	test   al,al
   14000a7d5:	mov    BYTE PTR [rcx+rdx*1],al
   14000a7d8:	je     0x14000a833
   14000a7da:	inc    rdx
   14000a7dd:	test   ah,ah
   14000a7df:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a7e2:	je     0x14000a833
   14000a7e4:	inc    rdx
   14000a7e7:	shr    rax,0x10
   14000a7eb:	test   al,al
   14000a7ed:	mov    BYTE PTR [rcx+rdx*1],al
   14000a7f0:	je     0x14000a833
   14000a7f2:	inc    rdx
   14000a7f5:	test   ah,ah
   14000a7f7:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a7fa:	je     0x14000a833
   14000a7fc:	inc    rdx
   14000a7ff:	shr    rax,0x10
   14000a803:	test   al,al
   14000a805:	mov    BYTE PTR [rcx+rdx*1],al
   14000a808:	je     0x14000a833
   14000a80a:	inc    rdx
   14000a80d:	test   ah,ah
   14000a80f:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a812:	je     0x14000a833
   14000a814:	inc    rdx
   14000a817:	shr    eax,0x10
   14000a81a:	test   al,al
   14000a81c:	mov    BYTE PTR [rcx+rdx*1],al
   14000a81f:	je     0x14000a833
   14000a821:	inc    rdx
   14000a824:	test   ah,ah
   14000a826:	mov    BYTE PTR [rcx+rdx*1],ah
   14000a829:	je     0x14000a833
   14000a82b:	inc    rdx
   14000a82e:	jmp    0x14000a7aa
   14000a833:	mov    rax,r11
   14000a836:	ret    
   14000a837:	int3   
   14000a838:	int3   
   14000a839:	int3   
   14000a83a:	int3   
   14000a83b:	int3   
   14000a83c:	int3   
   14000a83d:	int3   
   14000a83e:	int3   
   14000a83f:	int3   
   14000a840:	int3   
   14000a841:	int3   
   14000a842:	int3   
   14000a843:	int3   
   14000a844:	int3   
   14000a845:	int3   
   14000a846:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a850:	cmp    rcx,QWORD PTR [rip+0x18869]        # 0x1400230c0
   14000a857:	jne    0x14000a86a
   14000a859:	rol    rcx,0x10
   14000a85d:	test   cx,0xffff
   14000a862:	jne    0x14000a866
   14000a864:	repz ret 
   14000a866:	ror    rcx,0x10
   14000a86a:	jmp    0x1400109dc
   14000a86f:	int3   
   14000a870:	int3   
   14000a871:	int3   
   14000a872:	int3   
   14000a873:	int3   
   14000a874:	int3   
   14000a875:	int3   
   14000a876:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a880:	sub    rdx,rcx
   14000a883:	mov    r9,rdx
   14000a886:	test   cl,0x7
   14000a889:	je     0x14000a8a6
   14000a88b:	mov    al,BYTE PTR [rcx]
   14000a88d:	mov    dl,BYTE PTR [rcx+r9*1]
   14000a891:	cmp    al,dl
   14000a893:	jne    0x14000a8eb
   14000a895:	inc    rcx
   14000a898:	test   al,al
   14000a89a:	je     0x14000a8f3
   14000a89c:	test   rcx,0x7
   14000a8a3:	jne    0x14000a88b
   14000a8a5:	nop
   14000a8a6:	movabs r11,0x8101010101010100
   14000a8b0:	lea    rdx,[rcx+r9*1]
   14000a8b4:	and    dx,0xfff
   14000a8b9:	cmp    dx,0xff8
   14000a8be:	ja     0x14000a88b
   14000a8c0:	mov    rax,QWORD PTR [rcx]
   14000a8c3:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000a8c7:	cmp    rax,rdx
   14000a8ca:	jne    0x14000a88b
   14000a8cc:	movabs r10,0x7efefefefefefeff
   14000a8d6:	add    r10,rdx
   14000a8d9:	xor    rax,0xffffffffffffffff
   14000a8dd:	add    rcx,0x8
   14000a8e1:	xor    rax,r10
   14000a8e4:	test   r11,rax
   14000a8e7:	je     0x14000a8b0
   14000a8e9:	jmp    0x14000a8fa
   14000a8eb:	sbb    rax,rax
   14000a8ee:	sbb    rax,0xffffffffffffffff
   14000a8f2:	ret    
   14000a8f3:	xor    eax,eax
   14000a8f5:	ret    
   14000a8f6:	data16 data16 xchg ax,ax
   14000a8fa:	test   dl,dl
   14000a8fc:	je     0x14000a925
   14000a8fe:	test   dh,dh
   14000a900:	je     0x14000a925
   14000a902:	shr    rdx,0x10
   14000a906:	test   dl,dl
   14000a908:	je     0x14000a925
   14000a90a:	test   dh,dh
   14000a90c:	je     0x14000a925
   14000a90e:	shr    rdx,0x10
   14000a912:	test   dl,dl
   14000a914:	je     0x14000a925
   14000a916:	test   dh,dh
   14000a918:	je     0x14000a925
   14000a91a:	shr    edx,0x10
   14000a91d:	test   dl,dl
   14000a91f:	je     0x14000a925
   14000a921:	test   dh,dh
   14000a923:	jne    0x14000a8b0
   14000a925:	xor    eax,eax
   14000a927:	ret    
   14000a928:	sbb    rax,rax
   14000a92b:	sbb    rax,0xffffffffffffffff
   14000a92f:	ret    
   14000a930:	mov    rax,rsp
   14000a933:	mov    QWORD PTR [rax+0x10],rdx
   14000a937:	mov    QWORD PTR [rax+0x8],rcx
   14000a93b:	mov    QWORD PTR [rax+0x18],r8
   14000a93f:	mov    QWORD PTR [rax+0x20],r9
   14000a943:	push   rbx
   14000a944:	push   rsi
   14000a945:	push   rdi
   14000a946:	push   r12
   14000a948:	sub    rsp,0x28
   14000a94c:	mov    rdi,rcx
   14000a94f:	xor    esi,esi
   14000a951:	xor    eax,eax
   14000a953:	test   rcx,rcx
   14000a956:	setne  al
   14000a959:	test   eax,eax
   14000a95b:	jne    0x14000a975
   14000a95d:	call   0x14000bdf0
   14000a962:	mov    DWORD PTR [rax],0x16
   14000a968:	call   0x14000d04c
   14000a96d:	or     eax,0xffffffff
   14000a970:	jmp    0x14000aa54
   14000a975:	xor    eax,eax
   14000a977:	test   rdx,rdx
   14000a97a:	setne  al
   14000a97d:	test   eax,eax
   14000a97f:	je     0x14000a95d
   14000a981:	lea    r12,[rsp+0x60]
   14000a986:	call   0x14000acd8
   14000a98b:	nop
   14000a98c:	test   BYTE PTR [rdi+0x18],0x40
   14000a990:	jne    0x14000aa1c
   14000a996:	mov    rcx,rdi
   14000a999:	call   0x140010b28
   14000a99e:	cmp    eax,0xffffffff
   14000a9a1:	je     0x14000a9cd
   14000a9a3:	cmp    eax,0xfffffffe
   14000a9a6:	je     0x14000a9cd
   14000a9a8:	movsxd rdx,eax
   14000a9ab:	mov    rcx,rdx
   14000a9ae:	sar    rcx,0x5
   14000a9b2:	lea    r8,[rip+0x1b0c7]        # 0x140025a80
   14000a9b9:	and    edx,0x1f
   14000a9bc:	imul   rdx,rdx,0x58
   14000a9c0:	add    rdx,QWORD PTR [r8+rcx*8]
   14000a9c4:	lea    rcx,[rip+0x18ee5]        # 0x1400238b0
   14000a9cb:	jmp    0x14000a9de
   14000a9cd:	lea    rcx,[rip+0x18edc]        # 0x1400238b0
   14000a9d4:	mov    rdx,rcx
   14000a9d7:	lea    r8,[rip+0x1b0a2]        # 0x140025a80
   14000a9de:	test   BYTE PTR [rdx+0x38],0x7f
   14000a9e2:	jne    0x14000aa09
   14000a9e4:	cmp    eax,0xffffffff
   14000a9e7:	je     0x14000aa03
   14000a9e9:	cmp    eax,0xfffffffe
   14000a9ec:	je     0x14000aa03
   14000a9ee:	movsxd rcx,eax
   14000a9f1:	mov    rax,rcx
   14000a9f4:	sar    rax,0x5
   14000a9f8:	and    ecx,0x1f
   14000a9fb:	imul   rcx,rcx,0x58
   14000a9ff:	add    rcx,QWORD PTR [r8+rax*8]
   14000aa03:	test   BYTE PTR [rcx+0x38],0x80
   14000aa07:	je     0x14000aa1c
   14000aa09:	call   0x14000bdf0
   14000aa0e:	mov    DWORD PTR [rax],0x16
   14000aa14:	call   0x14000d04c
   14000aa19:	or     esi,0xffffffff
   14000aa1c:	test   esi,esi
   14000aa1e:	jne    0x14000aa4a
   14000aa20:	mov    rcx,rdi
   14000aa23:	call   0x14000dbf4
   14000aa28:	mov    ebx,eax
   14000aa2a:	mov    r9,r12
   14000aa2d:	xor    r8d,r8d
   14000aa30:	mov    rdx,QWORD PTR [rsp+0x58]
   14000aa35:	mov    rcx,rdi
   14000aa38:	call   0x14000de34
   14000aa3d:	mov    esi,eax
   14000aa3f:	mov    rdx,rdi
   14000aa42:	mov    ecx,ebx
   14000aa44:	call   0x14000dcc8
   14000aa49:	nop
   14000aa4a:	mov    rcx,rdi
   14000aa4d:	call   0x14000ad70
   14000aa52:	mov    eax,esi
   14000aa54:	add    rsp,0x28
   14000aa58:	pop    r12
   14000aa5a:	pop    rdi
   14000aa5b:	pop    rsi
   14000aa5c:	pop    rbx
   14000aa5d:	ret    
   14000aa5e:	int3   
   14000aa5f:	int3   
   14000aa60:	mov    rax,rsp
   14000aa63:	mov    QWORD PTR [rax+0x8],rbx
   14000aa67:	mov    QWORD PTR [rax+0x18],rsi
   14000aa6b:	mov    QWORD PTR [rax+0x20],rdi
   14000aa6f:	mov    QWORD PTR [rax+0x10],rdx
   14000aa73:	push   r12
   14000aa75:	push   r13
   14000aa77:	push   r14
   14000aa79:	sub    rsp,0x20
   14000aa7d:	mov    r13,r9
   14000aa80:	mov    r12,r8
   14000aa83:	mov    rdi,rdx
   14000aa86:	mov    r14,rcx
   14000aa89:	xor    esi,esi
   14000aa8b:	xor    eax,eax
   14000aa8d:	test   rdx,rdx
   14000aa90:	setne  al
   14000aa93:	test   eax,eax
   14000aa95:	jne    0x14000aaaf
   14000aa97:	call   0x14000bdf0
   14000aa9c:	mov    DWORD PTR [rax],0x16
   14000aaa2:	call   0x14000d04c
   14000aaa7:	or     eax,0xffffffff
   14000aaaa:	jmp    0x14000ab8a
   14000aaaf:	xor    eax,eax
   14000aab1:	test   r8,r8
   14000aab4:	setne  al
   14000aab7:	test   eax,eax
   14000aab9:	je     0x14000aa97
   14000aabb:	mov    rcx,rdx
   14000aabe:	call   0x14000acd8
   14000aac3:	nop
   14000aac4:	test   BYTE PTR [rdi+0x18],0x40
   14000aac8:	jne    0x14000ab54
   14000aace:	mov    rcx,rdi
   14000aad1:	call   0x140010b28
   14000aad6:	cmp    eax,0xffffffff
   14000aad9:	je     0x14000ab05
   14000aadb:	cmp    eax,0xfffffffe
   14000aade:	je     0x14000ab05
   14000aae0:	movsxd rdx,eax
   14000aae3:	mov    rcx,rdx
   14000aae6:	sar    rcx,0x5
   14000aaea:	lea    r8,[rip+0x1af8f]        # 0x140025a80
   14000aaf1:	and    edx,0x1f
   14000aaf4:	imul   rdx,rdx,0x58
   14000aaf8:	add    rdx,QWORD PTR [r8+rcx*8]
   14000aafc:	lea    rcx,[rip+0x18dad]        # 0x1400238b0
   14000ab03:	jmp    0x14000ab16
   14000ab05:	lea    rcx,[rip+0x18da4]        # 0x1400238b0
   14000ab0c:	mov    rdx,rcx
   14000ab0f:	lea    r8,[rip+0x1af6a]        # 0x140025a80
   14000ab16:	test   BYTE PTR [rdx+0x38],0x7f
   14000ab1a:	jne    0x14000ab41
   14000ab1c:	cmp    eax,0xffffffff
   14000ab1f:	je     0x14000ab3b
   14000ab21:	cmp    eax,0xfffffffe
   14000ab24:	je     0x14000ab3b
   14000ab26:	movsxd rcx,eax
   14000ab29:	mov    rax,rcx
   14000ab2c:	sar    rax,0x5
   14000ab30:	and    ecx,0x1f
   14000ab33:	imul   rcx,rcx,0x58
   14000ab37:	add    rcx,QWORD PTR [r8+rax*8]
   14000ab3b:	test   BYTE PTR [rcx+0x38],0x80
   14000ab3f:	je     0x14000ab54
   14000ab41:	call   0x14000bdf0
   14000ab46:	mov    DWORD PTR [rax],0x16
   14000ab4c:	call   0x14000d04c
   14000ab51:	or     esi,0xffffffff
   14000ab54:	test   esi,esi
   14000ab56:	jne    0x14000ab80
   14000ab58:	mov    rcx,rdi
   14000ab5b:	call   0x14000dbf4
   14000ab60:	mov    ebx,eax
   14000ab62:	mov    r9,QWORD PTR [rsp+0x60]
   14000ab67:	mov    r8,r13
   14000ab6a:	mov    rdx,r12
   14000ab6d:	mov    rcx,rdi
   14000ab70:	call   r14
   14000ab73:	mov    esi,eax
   14000ab75:	mov    rdx,rdi
   14000ab78:	mov    ecx,ebx
   14000ab7a:	call   0x14000dcc8
   14000ab7f:	nop
   14000ab80:	mov    rcx,rdi
   14000ab83:	call   0x14000ad70
   14000ab88:	mov    eax,esi
   14000ab8a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ab8f:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ab94:	mov    rdi,QWORD PTR [rsp+0x58]
   14000ab99:	add    rsp,0x20
   14000ab9d:	pop    r14
   14000ab9f:	pop    r13
   14000aba1:	pop    r12
   14000aba3:	ret    
   14000aba4:	sub    rsp,0x38
   14000aba8:	mov    QWORD PTR [rsp+0x20],r8
   14000abad:	mov    r8,rdx
   14000abb0:	mov    rdx,rcx
   14000abb3:	lea    rcx,[rip+0x327a]        # 0x14000de34
   14000abba:	xor    r9d,r9d
   14000abbd:	call   0x14000aa60
   14000abc2:	add    rsp,0x38
   14000abc6:	ret    
   14000abc7:	int3   
   14000abc8:	lea    rax,[rip+0x18501]        # 0x1400230d0
   14000abcf:	ret    
   14000abd0:	rex push rbx
   14000abd2:	sub    rsp,0x20
   14000abd6:	mov    eax,DWORD PTR [rip+0x1c0c4]        # 0x140026ca0
   14000abdc:	mov    ebx,0x14
   14000abe1:	test   eax,eax
   14000abe3:	jne    0x14000abec
   14000abe5:	mov    eax,0x200
   14000abea:	jmp    0x14000abf1
   14000abec:	cmp    eax,ebx
   14000abee:	cmovl  eax,ebx
   14000abf1:	movsxd rcx,eax
   14000abf4:	mov    edx,0x8
   14000abf9:	mov    DWORD PTR [rip+0x1c0a1],eax        # 0x140026ca0
   14000abff:	call   0x140010bd0
   14000ac04:	mov    QWORD PTR [rip+0x1b07d],rax        # 0x140025c88
   14000ac0b:	test   rax,rax
   14000ac0e:	jne    0x14000ac34
   14000ac10:	lea    edx,[rax+0x8]
   14000ac13:	mov    rcx,rbx
   14000ac16:	mov    DWORD PTR [rip+0x1c084],ebx        # 0x140026ca0
   14000ac1c:	call   0x140010bd0
   14000ac21:	mov    QWORD PTR [rip+0x1b060],rax        # 0x140025c88
   14000ac28:	test   rax,rax
   14000ac2b:	jne    0x14000ac34
   14000ac2d:	mov    eax,0x1a
   14000ac32:	jmp    0x14000acaa
   14000ac34:	xor    ecx,ecx
   14000ac36:	lea    rdx,[rip+0x18493]        # 0x1400230d0
   14000ac3d:	mov    QWORD PTR [rcx+rax*1],rdx
   14000ac41:	add    rdx,0x30
   14000ac45:	add    rcx,0x8
   14000ac49:	dec    rbx
   14000ac4c:	je     0x14000ac57
   14000ac4e:	mov    rax,QWORD PTR [rip+0x1b033]        # 0x140025c88
   14000ac55:	jmp    0x14000ac3d
   14000ac57:	xor    r8d,r8d
   14000ac5a:	lea    rdx,[rip+0x1848b]        # 0x1400230ec
   14000ac61:	lea    r9d,[r8+0x3]
   14000ac65:	mov    rcx,r8
   14000ac68:	lea    r10,[rip+0x1ae11]        # 0x140025a80
   14000ac6f:	mov    rax,r8
   14000ac72:	sar    rax,0x5
   14000ac76:	and    ecx,0x1f
   14000ac79:	mov    rax,QWORD PTR [r10+rax*8]
   14000ac7d:	imul   rcx,rcx,0x58
   14000ac81:	mov    r10,QWORD PTR [rcx+rax*1]
   14000ac85:	cmp    r10,0xffffffffffffffff
   14000ac89:	je     0x14000ac96
   14000ac8b:	cmp    r10,0xfffffffffffffffe
   14000ac8f:	je     0x14000ac96
   14000ac91:	test   r10,r10
   14000ac94:	jne    0x14000ac9c
   14000ac96:	mov    DWORD PTR [rdx],0xfffffffe
   14000ac9c:	inc    r8
   14000ac9f:	add    rdx,0x30
   14000aca3:	dec    r9
   14000aca6:	jne    0x14000ac65
   14000aca8:	xor    eax,eax
   14000acaa:	add    rsp,0x20
   14000acae:	pop    rbx
   14000acaf:	ret    
   14000acb0:	sub    rsp,0x28
   14000acb4:	call   0x14000c070
   14000acb9:	cmp    BYTE PTR [rip+0x19d08],0x0        # 0x1400249c8
   14000acc0:	je     0x14000acc7
   14000acc2:	call   0x140010d64
   14000acc7:	mov    rcx,QWORD PTR [rip+0x1afba]        # 0x140025c88
   14000acce:	add    rsp,0x28
   14000acd2:	jmp    0x14000b490
   14000acd7:	int3   
   14000acd8:	rex push rbx
   14000acda:	sub    rsp,0x20
   14000acde:	mov    rbx,rcx
   14000ace1:	lea    rcx,[rip+0x183e8]        # 0x1400230d0
   14000ace8:	cmp    rbx,rcx
   14000aceb:	jb     0x14000ad2b
   14000aced:	lea    rax,[rip+0x1876c]        # 0x140023460
   14000acf4:	cmp    rbx,rax
   14000acf7:	ja     0x14000ad2b
   14000acf9:	mov    rdx,rbx
   14000acfc:	movabs rax,0x2aaaaaaaaaaaaaab
   14000ad06:	sub    rdx,rcx
   14000ad09:	imul   rdx
   14000ad0c:	sar    rdx,0x3
   14000ad10:	mov    rcx,rdx
   14000ad13:	shr    rcx,0x3f
   14000ad17:	lea    ecx,[rcx+rdx*1+0x10]
   14000ad1b:	call   0x14000cb58
   14000ad20:	bts    DWORD PTR [rbx+0x18],0xf
   14000ad25:	add    rsp,0x20
   14000ad29:	pop    rbx
   14000ad2a:	ret    
   14000ad2b:	lea    rcx,[rbx+0x30]
   14000ad2f:	add    rsp,0x20
   14000ad33:	pop    rbx
   14000ad34:	rex.W jmp QWORD PTR [rip+0xf3b5]        # 0x14001a0f0
   14000ad3b:	int3   
   14000ad3c:	rex push rbx
   14000ad3e:	sub    rsp,0x20
   14000ad42:	mov    rbx,rdx
   14000ad45:	cmp    ecx,0x14
   14000ad48:	jge    0x14000ad5d
   14000ad4a:	add    ecx,0x10
   14000ad4d:	call   0x14000cb58
   14000ad52:	bts    DWORD PTR [rbx+0x18],0xf
   14000ad57:	add    rsp,0x20
   14000ad5b:	pop    rbx
   14000ad5c:	ret    
   14000ad5d:	lea    rcx,[rdx+0x30]
   14000ad61:	add    rsp,0x20
   14000ad65:	pop    rbx
   14000ad66:	rex.W jmp QWORD PTR [rip+0xf383]        # 0x14001a0f0
   14000ad6d:	int3   
   14000ad6e:	int3   
   14000ad6f:	int3   
   14000ad70:	lea    rdx,[rip+0x18359]        # 0x1400230d0
   14000ad77:	cmp    rcx,rdx
   14000ad7a:	jb     0x14000adb1
   14000ad7c:	lea    rax,[rip+0x186dd]        # 0x140023460
   14000ad83:	cmp    rcx,rax
   14000ad86:	ja     0x14000adb1
   14000ad88:	btr    DWORD PTR [rcx+0x18],0xf
   14000ad8d:	sub    rcx,rdx
   14000ad90:	movabs rax,0x2aaaaaaaaaaaaaab
   14000ad9a:	imul   rcx
   14000ad9d:	sar    rdx,0x3
   14000ada1:	mov    rcx,rdx
   14000ada4:	shr    rcx,0x3f
   14000ada8:	lea    ecx,[rcx+rdx*1+0x10]
   14000adac:	jmp    0x14000ca58
   14000adb1:	add    rcx,0x30
   14000adb5:	rex.W jmp QWORD PTR [rip+0xf33c]        # 0x14001a0f8
   14000adbc:	cmp    ecx,0x14
   14000adbf:	jge    0x14000adce
   14000adc1:	btr    DWORD PTR [rdx+0x18],0xf
   14000adc6:	add    ecx,0x10
   14000adc9:	jmp    0x14000ca58
   14000adce:	lea    rcx,[rdx+0x30]
   14000add2:	rex.W jmp QWORD PTR [rip+0xf31f]        # 0x14001a0f8
   14000add9:	int3   
   14000adda:	int3   
   14000addb:	int3   
   14000addc:	mov    QWORD PTR [rsp+0x8],rbx
   14000ade1:	push   rdi
   14000ade2:	sub    rsp,0x20
   14000ade6:	or     edi,0xffffffff
   14000ade9:	mov    rbx,rcx
   14000adec:	test   rcx,rcx
   14000adef:	jne    0x14000ae05
   14000adf1:	call   0x14000bdf0
   14000adf6:	mov    DWORD PTR [rax],0x16
   14000adfc:	call   0x14000d04c
   14000ae01:	or     eax,edi
   14000ae03:	jmp    0x14000ae4b
   14000ae05:	test   BYTE PTR [rcx+0x18],0x83
   14000ae09:	je     0x14000ae45
   14000ae0b:	call   0x14000be78
   14000ae10:	mov    rcx,rbx
   14000ae13:	mov    edi,eax
   14000ae15:	call   0x140010f90
   14000ae1a:	mov    rcx,rbx
   14000ae1d:	call   0x140010b28
   14000ae22:	mov    ecx,eax
   14000ae24:	call   0x140010ecc
   14000ae29:	test   eax,eax
   14000ae2b:	jns    0x14000ae32
   14000ae2d:	or     edi,0xffffffff
   14000ae30:	jmp    0x14000ae45
   14000ae32:	mov    rcx,QWORD PTR [rbx+0x28]
   14000ae36:	test   rcx,rcx
   14000ae39:	je     0x14000ae45
   14000ae3b:	call   0x14000b490
   14000ae40:	and    QWORD PTR [rbx+0x28],0x0
   14000ae45:	and    DWORD PTR [rbx+0x18],0x0
   14000ae49:	mov    eax,edi
   14000ae4b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ae50:	add    rsp,0x20
   14000ae54:	pop    rdi
   14000ae55:	ret    
   14000ae56:	int3   
   14000ae57:	int3   
   14000ae58:	mov    QWORD PTR [rsp+0x10],rbx
   14000ae5d:	mov    QWORD PTR [rsp+0x8],rcx
   14000ae62:	push   rdi
   14000ae63:	sub    rsp,0x20
   14000ae67:	mov    rbx,rcx
   14000ae6a:	or     edi,0xffffffff
   14000ae6d:	xor    eax,eax
   14000ae6f:	test   rcx,rcx
   14000ae72:	setne  al
   14000ae75:	test   eax,eax
   14000ae77:	jne    0x14000ae8d
   14000ae79:	call   0x14000bdf0
   14000ae7e:	mov    DWORD PTR [rax],0x16
   14000ae84:	call   0x14000d04c
   14000ae89:	mov    eax,edi
   14000ae8b:	jmp    0x14000aeb3
   14000ae8d:	test   BYTE PTR [rcx+0x18],0x40
   14000ae91:	je     0x14000ae99
   14000ae93:	and    DWORD PTR [rcx+0x18],0x0
   14000ae97:	jmp    0x14000ae89
   14000ae99:	call   0x14000acd8
   14000ae9e:	nop
   14000ae9f:	mov    rcx,rbx
   14000aea2:	call   0x14000addc
   14000aea7:	mov    edi,eax
   14000aea9:	mov    rcx,rbx
   14000aeac:	call   0x14000ad70
   14000aeb1:	jmp    0x14000ae89
   14000aeb3:	mov    rbx,QWORD PTR [rsp+0x38]
   14000aeb8:	add    rsp,0x20
   14000aebc:	pop    rdi
   14000aebd:	ret    
   14000aebe:	int3   
   14000aebf:	int3   
   14000aec0:	sub    rsp,0x38
   14000aec4:	mov    rax,QWORD PTR [rip+0x181f5]        # 0x1400230c0
   14000aecb:	xor    rax,rsp
   14000aece:	mov    QWORD PTR [rsp+0x20],rax
   14000aed3:	mov    al,BYTE PTR [rdx]
   14000aed5:	xor    r9d,r9d
   14000aed8:	mov    r11,rdx
   14000aedb:	mov    QWORD PTR [rsp],r9
   14000aedf:	mov    QWORD PTR [rsp+0x8],r9
   14000aee4:	mov    QWORD PTR [rsp+0x10],r9
   14000aee9:	mov    QWORD PTR [rsp+0x18],r9
   14000aeee:	mov    r10,rcx
   14000aef1:	jmp    0x14000af14
   14000aef3:	movzx  r8d,al
   14000aef7:	movzx  eax,al
   14000aefa:	mov    edx,0x1
   14000aeff:	and    eax,0x7
   14000af02:	shr    r8,0x3
   14000af06:	mov    cl,al
   14000af08:	shl    dl,cl
   14000af0a:	or     BYTE PTR [rsp+r8*1],dl
   14000af0e:	inc    r11
   14000af11:	mov    al,BYTE PTR [r11]
   14000af14:	test   al,al
   14000af16:	jne    0x14000aef3
   14000af18:	cmp    BYTE PTR [r10],r9b
   14000af1b:	je     0x14000af5e
   14000af1d:	movzx  ecx,BYTE PTR [r10]
   14000af21:	movzx  eax,BYTE PTR [r10]
   14000af25:	mov    edx,0x1
   14000af2a:	and    ecx,0x7
   14000af2d:	shr    rax,0x3
   14000af31:	shl    edx,cl
   14000af33:	test   BYTE PTR [rsp+rax*1],dl
   14000af36:	je     0x14000af59
   14000af38:	inc    r10
   14000af3b:	mov    edx,0x1
   14000af40:	inc    r9d
   14000af43:	movzx  r8d,BYTE PTR [r10]
   14000af47:	mov    ecx,r8d
   14000af4a:	shr    r8,0x3
   14000af4e:	and    ecx,0x7
   14000af51:	shl    edx,cl
   14000af53:	test   BYTE PTR [rsp+r8*1],dl
   14000af57:	jne    0x14000af38
   14000af59:	movsxd rax,r9d
   14000af5c:	jmp    0x14000af60
   14000af5e:	xor    eax,eax
   14000af60:	mov    rcx,QWORD PTR [rsp+0x20]
   14000af65:	xor    rcx,rsp
   14000af68:	call   0x14000a850
   14000af6d:	add    rsp,0x38
   14000af71:	ret    
   14000af72:	int3   
   14000af73:	int3   
   14000af74:	sub    rsp,0x38
   14000af78:	mov    rax,QWORD PTR [rip+0x18141]        # 0x1400230c0
   14000af7f:	xor    rax,rsp
   14000af82:	mov    QWORD PTR [rsp+0x20],rax
   14000af87:	mov    al,BYTE PTR [rdx]
   14000af89:	xor    r9d,r9d
   14000af8c:	mov    r11,rdx
   14000af8f:	mov    QWORD PTR [rsp],r9
   14000af93:	mov    QWORD PTR [rsp+0x8],r9
   14000af98:	mov    QWORD PTR [rsp+0x10],r9
   14000af9d:	mov    QWORD PTR [rsp+0x18],r9
   14000afa2:	mov    r10,rcx
   14000afa5:	jmp    0x14000afc3
   14000afa7:	movzx  r8d,al
   14000afab:	movzx  eax,al
   14000afae:	and    eax,0x7
   14000afb1:	shr    r8,0x3
   14000afb5:	mov    cl,al
   14000afb7:	shl    dl,cl
   14000afb9:	or     BYTE PTR [rsp+r8*1],dl
   14000afbd:	inc    r11
   14000afc0:	mov    al,BYTE PTR [r11]
   14000afc3:	mov    edx,0x1
   14000afc8:	test   al,al
   14000afca:	jne    0x14000afa7
   14000afcc:	or     BYTE PTR [rsp],dl
   14000afcf:	jmp    0x14000afdc
   14000afd1:	inc    r9d
   14000afd4:	mov    edx,0x1
   14000afd9:	inc    r10
   14000afdc:	movzx  r8d,BYTE PTR [r10]
   14000afe0:	mov    ecx,r8d
   14000afe3:	shr    r8,0x3
   14000afe7:	and    ecx,0x7
   14000afea:	shl    edx,cl
   14000afec:	test   BYTE PTR [rsp+r8*1],dl
   14000aff0:	je     0x14000afd1
   14000aff2:	movsxd rax,r9d
   14000aff5:	mov    rcx,QWORD PTR [rsp+0x20]
   14000affa:	xor    rcx,rsp
   14000affd:	call   0x14000a850
   14000b002:	add    rsp,0x38
   14000b006:	ret    
   14000b007:	int3   
   14000b008:	rex push rbx
   14000b00a:	push   rsi
   14000b00b:	push   rdi
   14000b00c:	push   r12
   14000b00e:	push   r13
   14000b010:	sub    rsp,0x30
   14000b014:	mov    rbx,r8
   14000b017:	mov    esi,edx
   14000b019:	mov    r13,rcx
   14000b01c:	mov    r12,rcx
   14000b01f:	mov    rdi,rcx
   14000b022:	test   rcx,rcx
   14000b025:	jne    0x14000b042
   14000b027:	test   edx,edx
   14000b029:	je     0x14000b042
   14000b02b:	call   0x14000bdf0
   14000b030:	mov    DWORD PTR [rax],0x16
   14000b036:	call   0x14000d04c
   14000b03b:	xor    eax,eax
   14000b03d:	jmp    0x14000b163
   14000b042:	xor    eax,eax
   14000b044:	test   edx,edx
   14000b046:	setns  al
   14000b049:	test   eax,eax
   14000b04b:	je     0x14000b02b
   14000b04d:	xor    eax,eax
   14000b04f:	test   rbx,rbx
   14000b052:	setne  al
   14000b055:	test   eax,eax
   14000b057:	je     0x14000b02b
   14000b059:	test   edx,edx
   14000b05b:	je     0x14000b03b
   14000b05d:	mov    QWORD PTR [rsp+0x78],rbx
   14000b062:	mov    rcx,rbx
   14000b065:	call   0x14000acd8
   14000b06a:	nop
   14000b06b:	test   BYTE PTR [rbx+0x18],0x40
   14000b06f:	jne    0x14000b0ff
   14000b075:	mov    rcx,rbx
   14000b078:	call   0x140010b28
   14000b07d:	cmp    eax,0xffffffff
   14000b080:	je     0x14000b0ac
   14000b082:	cmp    eax,0xfffffffe
   14000b085:	je     0x14000b0ac
   14000b087:	movsxd rdx,eax
   14000b08a:	mov    rcx,rdx
   14000b08d:	sar    rcx,0x5
   14000b091:	lea    r8,[rip+0x1a9e8]        # 0x140025a80
   14000b098:	and    edx,0x1f
   14000b09b:	imul   rdx,rdx,0x58
   14000b09f:	add    rdx,QWORD PTR [r8+rcx*8]
   14000b0a3:	lea    rcx,[rip+0x18806]        # 0x1400238b0
   14000b0aa:	jmp    0x14000b0bd
   14000b0ac:	lea    rcx,[rip+0x187fd]        # 0x1400238b0
   14000b0b3:	mov    rdx,rcx
   14000b0b6:	lea    r8,[rip+0x1a9c3]        # 0x140025a80
   14000b0bd:	test   BYTE PTR [rdx+0x38],0x7f
   14000b0c1:	jne    0x14000b0e8
   14000b0c3:	cmp    eax,0xffffffff
   14000b0c6:	je     0x14000b0e2
   14000b0c8:	cmp    eax,0xfffffffe
   14000b0cb:	je     0x14000b0e2
   14000b0cd:	movsxd rcx,eax
   14000b0d0:	mov    rax,rcx
   14000b0d3:	sar    rax,0x5
   14000b0d7:	and    ecx,0x1f
   14000b0da:	imul   rcx,rcx,0x58
   14000b0de:	add    rcx,QWORD PTR [r8+rax*8]
   14000b0e2:	test   BYTE PTR [rcx+0x38],0x80
   14000b0e6:	je     0x14000b0ff
   14000b0e8:	call   0x14000bdf0
   14000b0ed:	mov    DWORD PTR [rax],0x16
   14000b0f3:	call   0x14000d04c
   14000b0f8:	xor    edi,edi
   14000b0fa:	mov    QWORD PTR [rsp+0x20],rdi
   14000b0ff:	test   rdi,rdi
   14000b102:	je     0x14000b158
   14000b104:	dec    esi
   14000b106:	mov    DWORD PTR [rsp+0x68],esi
   14000b10a:	je     0x14000b153
   14000b10c:	dec    DWORD PTR [rbx+0x8]
   14000b10f:	js     0x14000b11f
   14000b111:	mov    rax,QWORD PTR [rbx]
   14000b114:	movzx  ecx,BYTE PTR [rax]
   14000b117:	inc    rax
   14000b11a:	mov    QWORD PTR [rbx],rax
   14000b11d:	jmp    0x14000b129
   14000b11f:	mov    rcx,rbx
   14000b122:	call   0x140010fc8
   14000b127:	mov    ecx,eax
   14000b129:	mov    DWORD PTR [rsp+0x60],ecx
   14000b12d:	cmp    ecx,0xffffffff
   14000b130:	jne    0x14000b140
   14000b132:	cmp    r12,r13
   14000b135:	jne    0x14000b153
   14000b137:	xor    edi,edi
   14000b139:	mov    QWORD PTR [rsp+0x20],rdi
   14000b13e:	jmp    0x14000b158
   14000b140:	mov    BYTE PTR [r12],cl
   14000b144:	inc    r12
   14000b147:	mov    QWORD PTR [rsp+0x28],r12
   14000b14c:	cmp    cl,0xa
   14000b14f:	je     0x14000b153
   14000b151:	jmp    0x14000b104
   14000b153:	mov    BYTE PTR [r12],0x0
   14000b158:	mov    rcx,rbx
   14000b15b:	call   0x14000ad70
   14000b160:	mov    rax,rdi
   14000b163:	add    rsp,0x30
   14000b167:	pop    r13
   14000b169:	pop    r12
   14000b16b:	pop    rdi
   14000b16c:	pop    rsi
   14000b16d:	pop    rbx
   14000b16e:	ret    
   14000b16f:	int3   
   14000b170:	mov    QWORD PTR [rsp+0x10],rbx
   14000b175:	mov    QWORD PTR [rsp+0x18],rsi
   14000b17a:	mov    QWORD PTR [rsp+0x20],rdi
   14000b17f:	push   r12
   14000b181:	sub    rsp,0x30
   14000b185:	mov    QWORD PTR [rsp+0x20],rsp
   14000b18a:	mov    r12d,r8d
   14000b18d:	mov    rdi,rdx
   14000b190:	mov    rsi,rcx
   14000b193:	xor    eax,eax
   14000b195:	test   rcx,rcx
   14000b198:	setne  al
   14000b19b:	test   eax,eax
   14000b19d:	jne    0x14000b1b3
   14000b19f:	call   0x14000bdf0
   14000b1a4:	mov    DWORD PTR [rax],0x16
   14000b1aa:	call   0x14000d04c
   14000b1af:	xor    eax,eax
   14000b1b1:	jmp    0x14000b22f
   14000b1b3:	xor    eax,eax
   14000b1b5:	test   rdx,rdx
   14000b1b8:	setne  al
   14000b1bb:	test   eax,eax
   14000b1bd:	je     0x14000b19f
   14000b1bf:	xor    eax,eax
   14000b1c1:	cmp    BYTE PTR [rdx],al
   14000b1c3:	setne  al
   14000b1c6:	test   eax,eax
   14000b1c8:	je     0x14000b19f
   14000b1ca:	call   0x1400113d4
   14000b1cf:	mov    rbx,rax
   14000b1d2:	mov    QWORD PTR [rsp+0x40],rax
   14000b1d7:	test   rax,rax
   14000b1da:	jne    0x14000b1e9
   14000b1dc:	call   0x14000bdf0
   14000b1e1:	mov    DWORD PTR [rax],0x18
   14000b1e7:	jmp    0x14000b1af
   14000b1e9:	cmp    BYTE PTR [rsi],0x0
   14000b1ec:	jne    0x14000b210
   14000b1ee:	call   0x14000bdf0
   14000b1f3:	mov    DWORD PTR [rax],0x16
   14000b1f9:	lea    rdx,[rip+0xc]        # 0x14000b20c
   14000b200:	mov    rcx,QWORD PTR [rsp+0x20]
   14000b205:	call   0x140011540
   14000b20a:	nop
   14000b20b:	nop
   14000b20c:	xor    eax,eax
   14000b20e:	jmp    0x14000b22f
   14000b210:	mov    r9,rax
   14000b213:	mov    r8d,r12d
   14000b216:	mov    rdx,rdi
   14000b219:	mov    rcx,rsi
   14000b21c:	call   0x14001111c
   14000b221:	mov    rdi,rax
   14000b224:	mov    rcx,rbx
   14000b227:	call   0x14000ad70
   14000b22c:	mov    rax,rdi
   14000b22f:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b234:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b239:	mov    rdi,QWORD PTR [rsp+0x58]
   14000b23e:	add    rsp,0x30
   14000b242:	pop    r12
   14000b244:	ret    
   14000b245:	int3   
   14000b246:	int3   
   14000b247:	int3   
   14000b248:	mov    r8d,0x40
   14000b24e:	jmp    0x14000b170
   14000b253:	int3   
   14000b254:	mov    QWORD PTR [rsp+0x8],rbx
   14000b259:	push   rdi
   14000b25a:	sub    rsp,0x20
   14000b25e:	mov    rbx,rcx
   14000b261:	mov    edi,0x2
   14000b266:	mov    ecx,edi
   14000b268:	call   0x140011784
   14000b26d:	nop
   14000b26e:	test   rbx,rbx
   14000b271:	je     0x14000b29e
   14000b273:	cmp    BYTE PTR [rbx],0x0
   14000b276:	je     0x14000b29e
   14000b278:	mov    rcx,rbx
   14000b27b:	call   0x140009fd0
   14000b280:	mov    r8,rax
   14000b283:	mov    rdx,rbx
   14000b286:	mov    ecx,edi
   14000b288:	call   0x140011a5c
   14000b28d:	mov    r8d,edi
   14000b290:	lea    rdx,[rip+0x137a1]        # 0x14001ea38
   14000b297:	mov    ecx,edi
   14000b299:	call   0x140011a5c
   14000b29e:	call   0x14000bdf0
   14000b2a3:	mov    ebx,DWORD PTR [rax]
   14000b2a5:	test   ebx,ebx
   14000b2a7:	js     0x14000b2b2
   14000b2a9:	call   0x1400115a4
   14000b2ae:	cmp    ebx,DWORD PTR [rax]
   14000b2b0:	jl     0x14000b2b9
   14000b2b2:	call   0x1400115a4
   14000b2b7:	mov    ebx,DWORD PTR [rax]
   14000b2b9:	call   0x1400115ac
   14000b2be:	movsxd rcx,ebx
   14000b2c1:	mov    rbx,QWORD PTR [rax+rcx*8]
   14000b2c5:	mov    rcx,rbx
   14000b2c8:	call   0x140009fd0
   14000b2cd:	mov    r8,rax
   14000b2d0:	mov    rdx,rbx
   14000b2d3:	mov    ecx,edi
   14000b2d5:	call   0x140011a5c
   14000b2da:	mov    r8d,0x1
   14000b2e0:	lea    rdx,[rip+0xf73d]        # 0x14001aa24
   14000b2e7:	mov    ecx,edi
   14000b2e9:	call   0x140011a5c
   14000b2ee:	nop
   14000b2ef:	mov    ecx,edi
   14000b2f1:	call   0x14001182c
   14000b2f6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b2fb:	add    rsp,0x20
   14000b2ff:	pop    rdi
   14000b300:	ret    
   14000b301:	int3   
   14000b302:	int3   
   14000b303:	int3   
   14000b304:	mov    QWORD PTR [rsp+0x8],rbx
   14000b309:	mov    QWORD PTR [rsp+0x10],rsi
   14000b30e:	push   rdi
   14000b30f:	sub    rsp,0x20
   14000b313:	mov    rbx,rcx
   14000b316:	cmp    rcx,0xffffffffffffffe0
   14000b31a:	ja     0x14000b398
   14000b31c:	mov    edi,0x1
   14000b321:	test   rcx,rcx
   14000b324:	cmovne rdi,rcx
   14000b328:	mov    rcx,QWORD PTR [rip+0x1a099]        # 0x1400253c8
   14000b32f:	test   rcx,rcx
   14000b332:	jne    0x14000b354
   14000b334:	call   0x14000dbb0
   14000b339:	mov    ecx,0x1e
   14000b33e:	call   0x14000d950
   14000b343:	mov    ecx,0xff
   14000b348:	call   0x1400098b8
   14000b34d:	mov    rcx,QWORD PTR [rip+0x1a074]        # 0x1400253c8
   14000b354:	mov    r8,rdi
   14000b357:	xor    edx,edx
   14000b359:	call   QWORD PTR [rip+0xeda1]        # 0x14001a100
   14000b35f:	mov    rsi,rax
   14000b362:	test   rax,rax
   14000b365:	jne    0x14000b393
   14000b367:	cmp    DWORD PTR [rip+0x1a5d7],eax        # 0x140025944
   14000b36d:	je     0x14000b37d
   14000b36f:	mov    rcx,rbx
   14000b372:	call   0x14000d074
   14000b377:	test   eax,eax
   14000b379:	je     0x14000b388
   14000b37b:	jmp    0x14000b328
   14000b37d:	call   0x14000bdf0
   14000b382:	mov    DWORD PTR [rax],0xc
   14000b388:	call   0x14000bdf0
   14000b38d:	mov    DWORD PTR [rax],0xc
   14000b393:	mov    rax,rsi
   14000b396:	jmp    0x14000b3aa
   14000b398:	call   0x14000d074
   14000b39d:	call   0x14000bdf0
   14000b3a2:	mov    DWORD PTR [rax],0xc
   14000b3a8:	xor    eax,eax
   14000b3aa:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b3af:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b3b4:	add    rsp,0x20
   14000b3b8:	pop    rdi
   14000b3b9:	ret    
   14000b3ba:	int3   
   14000b3bb:	int3   
   14000b3bc:	mov    QWORD PTR [rsp+0x8],rbx
   14000b3c1:	mov    QWORD PTR [rsp+0x10],rsi
   14000b3c6:	push   rdi
   14000b3c7:	sub    rsp,0x20
   14000b3cb:	mov    rbx,rdx
   14000b3ce:	mov    rdi,rcx
   14000b3d1:	test   rcx,rcx
   14000b3d4:	jne    0x14000b3e0
   14000b3d6:	mov    rcx,rdx
   14000b3d9:	call   0x14000b304
   14000b3de:	jmp    0x14000b44a
   14000b3e0:	test   rdx,rdx
   14000b3e3:	jne    0x14000b3ec
   14000b3e5:	call   0x14000b490
   14000b3ea:	jmp    0x14000b448
   14000b3ec:	cmp    rdx,0xffffffffffffffe0
   14000b3f0:	ja     0x14000b435
   14000b3f2:	mov    rcx,QWORD PTR [rip+0x19fcf]        # 0x1400253c8
   14000b3f9:	mov    eax,0x1
   14000b3fe:	test   rbx,rbx
   14000b401:	cmove  rbx,rax
   14000b405:	mov    r8,rdi
   14000b408:	xor    edx,edx
   14000b40a:	mov    r9,rbx
   14000b40d:	call   QWORD PTR [rip+0xecf5]        # 0x14001a108
   14000b413:	mov    rsi,rax
   14000b416:	test   rax,rax
   14000b419:	jne    0x14000b48a
   14000b41b:	cmp    DWORD PTR [rip+0x1a523],eax        # 0x140025944
   14000b421:	je     0x14000b473
   14000b423:	mov    rcx,rbx
   14000b426:	call   0x14000d074
   14000b42b:	test   eax,eax
   14000b42d:	je     0x14000b45a
   14000b42f:	cmp    rbx,0xffffffffffffffe0
   14000b433:	jbe    0x14000b3f2
   14000b435:	mov    rcx,rbx
   14000b438:	call   0x14000d074
   14000b43d:	call   0x14000bdf0
   14000b442:	mov    DWORD PTR [rax],0xc
   14000b448:	xor    eax,eax
   14000b44a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b44f:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b454:	add    rsp,0x20
   14000b458:	pop    rdi
   14000b459:	ret    
   14000b45a:	call   0x14000bdf0
   14000b45f:	mov    rbx,rax
   14000b462:	call   QWORD PTR [rip+0xec08]        # 0x14001a070
   14000b468:	mov    ecx,eax
   14000b46a:	call   0x14000bda8
   14000b46f:	mov    DWORD PTR [rbx],eax
   14000b471:	jmp    0x14000b448
   14000b473:	call   0x14000bdf0
   14000b478:	mov    rbx,rax
   14000b47b:	call   QWORD PTR [rip+0xebef]        # 0x14001a070
   14000b481:	mov    ecx,eax
   14000b483:	call   0x14000bda8
   14000b488:	mov    DWORD PTR [rbx],eax
   14000b48a:	mov    rax,rsi
   14000b48d:	jmp    0x14000b44a
   14000b48f:	int3   
   14000b490:	test   rcx,rcx
   14000b493:	je     0x14000b4cc
   14000b495:	push   rbx
   14000b496:	sub    rsp,0x20
   14000b49a:	mov    r8,rcx
   14000b49d:	mov    rcx,QWORD PTR [rip+0x19f24]        # 0x1400253c8
   14000b4a4:	xor    edx,edx
   14000b4a6:	call   QWORD PTR [rip+0xec64]        # 0x14001a110
   14000b4ac:	test   eax,eax
   14000b4ae:	jne    0x14000b4c7
   14000b4b0:	call   0x14000bdf0
   14000b4b5:	mov    rbx,rax
   14000b4b8:	call   QWORD PTR [rip+0xebb2]        # 0x14001a070
   14000b4be:	mov    ecx,eax
   14000b4c0:	call   0x14000bda8
   14000b4c5:	mov    DWORD PTR [rbx],eax
   14000b4c7:	add    rsp,0x20
   14000b4cb:	pop    rbx
   14000b4cc:	ret    
   14000b4cd:	int3   
   14000b4ce:	int3   
   14000b4cf:	int3   
   14000b4d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b4d5:	mov    QWORD PTR [rsp+0x18],rsi
   14000b4da:	mov    QWORD PTR [rsp+0x20],rdi
   14000b4df:	push   r12
   14000b4e1:	push   r13
   14000b4e3:	push   r14
   14000b4e5:	sub    rsp,0x20
   14000b4e9:	mov    r12,r9
   14000b4ec:	mov    r13,r8
   14000b4ef:	mov    rsi,rdx
   14000b4f2:	mov    r14,rcx
   14000b4f5:	call   0x14000abc8
   14000b4fa:	lea    rdi,[rax+0x30]
   14000b4fe:	mov    QWORD PTR [rsp+0x48],rdi
   14000b503:	xor    eax,eax
   14000b505:	test   rsi,rsi
   14000b508:	setne  al
   14000b50b:	test   eax,eax
   14000b50d:	jne    0x14000b524
   14000b50f:	call   0x14000bdf0
   14000b514:	mov    DWORD PTR [rax],0x16
   14000b51a:	call   0x14000d04c
   14000b51f:	or     eax,0xffffffff
   14000b522:	jmp    0x14000b55d
   14000b524:	mov    rcx,rdi
   14000b527:	call   0x14000acd8
   14000b52c:	nop
   14000b52d:	mov    rcx,rdi
   14000b530:	call   0x14000dbf4
   14000b535:	mov    ebx,eax
   14000b537:	mov    r9,r12
   14000b53a:	mov    r8,r13
   14000b53d:	mov    rdx,rsi
   14000b540:	mov    rcx,rdi
   14000b543:	call   r14
   14000b546:	mov    esi,eax
   14000b548:	mov    rdx,rdi
   14000b54b:	mov    ecx,ebx
   14000b54d:	call   0x14000dcc8
   14000b552:	nop
   14000b553:	mov    rcx,rdi
   14000b556:	call   0x14000ad70
   14000b55b:	mov    eax,esi
   14000b55d:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b562:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b567:	mov    rdi,QWORD PTR [rsp+0x58]
   14000b56c:	add    rsp,0x20
   14000b570:	pop    r14
   14000b572:	pop    r13
   14000b574:	pop    r12
   14000b576:	ret    
   14000b577:	int3   
   14000b578:	mov    r9,rdx
   14000b57b:	mov    rdx,rcx
   14000b57e:	lea    rcx,[rip+0x28af]        # 0x14000de34
   14000b585:	xor    r8d,r8d
   14000b588:	jmp    0x14000b4d0
   14000b58d:	int3   
   14000b58e:	int3   
   14000b58f:	int3   
   14000b590:	int3   
   14000b591:	int3   
   14000b592:	int3   
   14000b593:	int3   
   14000b594:	int3   
   14000b595:	int3   
   14000b596:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000b5a0:	test   r8,r8
   14000b5a3:	je     0x14000b61a
   14000b5a5:	sub    rdx,rcx
   14000b5a8:	mov    r9,rdx
   14000b5ab:	movabs r11,0x8101010101010100
   14000b5b5:	test   cl,0x7
   14000b5b8:	je     0x14000b5d9
   14000b5ba:	mov    al,BYTE PTR [rcx]
   14000b5bc:	mov    dl,BYTE PTR [rcx+r9*1]
   14000b5c0:	inc    rcx
   14000b5c3:	cmp    al,dl
   14000b5c5:	jne    0x14000b61e
   14000b5c7:	dec    r8
   14000b5ca:	je     0x14000b61a
   14000b5cc:	test   al,al
   14000b5ce:	je     0x14000b61a
   14000b5d0:	test   rcx,0x7
   14000b5d7:	jne    0x14000b5ba
   14000b5d9:	lea    rdx,[rcx+r9*1]
   14000b5dd:	and    dx,0xfff
   14000b5e2:	cmp    dx,0xff8
   14000b5e7:	ja     0x14000b5ba
   14000b5e9:	mov    rax,QWORD PTR [rcx]
   14000b5ec:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000b5f0:	cmp    rax,rdx
   14000b5f3:	jne    0x14000b5ba
   14000b5f5:	add    rcx,0x8
   14000b5f9:	sub    r8,0x8
   14000b5fd:	movabs r10,0x7efefefefefefeff
   14000b607:	jbe    0x14000b61a
   14000b609:	xor    rax,0xffffffffffffffff
   14000b60d:	add    r10,rdx
   14000b610:	xor    rax,r10
   14000b613:	test   r11,rax
   14000b616:	je     0x14000b5d9
   14000b618:	jmp    0x14000b626
   14000b61a:	xor    rax,rax
   14000b61d:	ret    
   14000b61e:	sbb    rax,rax
   14000b621:	sbb    rax,0xffffffffffffffff
   14000b625:	ret    
   14000b626:	test   dl,dl
   14000b628:	je     0x14000b651
   14000b62a:	test   dh,dh
   14000b62c:	je     0x14000b651
   14000b62e:	shr    rdx,0x10
   14000b632:	test   dl,dl
   14000b634:	je     0x14000b651
   14000b636:	test   dh,dh
   14000b638:	je     0x14000b651
   14000b63a:	shr    rdx,0x10
   14000b63e:	test   dl,dl
   14000b640:	je     0x14000b651
   14000b642:	test   dh,dh
   14000b644:	je     0x14000b651
   14000b646:	shr    edx,0x10
   14000b649:	test   dl,dl
   14000b64b:	je     0x14000b651
   14000b64d:	test   dh,dh
   14000b64f:	jne    0x14000b5d9
   14000b651:	xor    rax,rax
   14000b654:	ret    
   14000b655:	int3   
   14000b656:	int3   
   14000b657:	int3   
   14000b658:	mov    QWORD PTR [rsp+0x18],rbx
   14000b65d:	push   rbp
   14000b65e:	push   rsi
   14000b65f:	push   rdi
   14000b660:	push   r12
   14000b662:	push   r13
   14000b664:	push   r14
   14000b666:	push   r15
   14000b668:	lea    rbp,[rsp-0x1c0]
   14000b670:	sub    rsp,0x2c0
   14000b677:	mov    rax,QWORD PTR [rip+0x17a42]        # 0x1400230c0
   14000b67e:	xor    rax,rsp
   14000b681:	mov    QWORD PTR [rbp+0x1b0],rax
   14000b688:	xor    r14d,r14d
   14000b68b:	mov    rdi,rdx
   14000b68e:	mov    r12,rcx
   14000b691:	mov    r13d,r14d
   14000b694:	test   rcx,rcx
   14000b697:	jne    0x14000b6b9
   14000b699:	call   0x14000be10
   14000b69e:	mov    DWORD PTR [rax],r14d
   14000b6a1:	call   0x14000bdf0
   14000b6a6:	mov    DWORD PTR [rax],0x16
   14000b6ac:	call   0x14000d04c
   14000b6b1:	or     eax,0xffffffff
   14000b6b4:	jmp    0x14000bb2c
   14000b6b9:	test   rdx,rdx
   14000b6bc:	je     0x14000b699
   14000b6be:	lea    rdx,[rip+0x1337b]        # 0x14001ea40
   14000b6c5:	call   0x140013788
   14000b6ca:	test   rax,rax
   14000b6cd:	je     0x14000b6e4
   14000b6cf:	call   0x14000bdf0
   14000b6d4:	mov    edi,0x2
   14000b6d9:	mov    DWORD PTR [rax],edi
   14000b6db:	call   0x14000be10
   14000b6e0:	mov    DWORD PTR [rax],edi
   14000b6e2:	jmp    0x14000b6b1
   14000b6e4:	cmp    BYTE PTR [r12+0x1],0x3a
   14000b6ea:	jne    0x14000b709
   14000b6ec:	cmp    BYTE PTR [r12],r14b
   14000b6f0:	je     0x14000b6f9
   14000b6f2:	cmp    BYTE PTR [r12+0x2],r14b
   14000b6f7:	je     0x14000b6cf
   14000b6f9:	movsx  ecx,BYTE PTR [r12]
   14000b6fe:	call   0x14001368c
   14000b703:	lea    r15d,[rax-0x60]
   14000b707:	jmp    0x14000b711
   14000b709:	call   0x1400134b8
   14000b70e:	mov    r15d,eax
   14000b711:	lea    r8,[rsp+0x60]
   14000b716:	xor    r9d,r9d
   14000b719:	xor    edx,edx
   14000b71b:	mov    rcx,r12
   14000b71e:	mov    DWORD PTR [rsp+0x28],r14d
   14000b723:	mov    QWORD PTR [rsp+0x20],r14
   14000b728:	call   QWORD PTR [rip+0xea02]        # 0x14001a130
   14000b72e:	or     rbx,0xffffffffffffffff
   14000b732:	mov    rsi,rax
   14000b735:	cmp    rax,rbx
   14000b738:	jne    0x14000b8fd
   14000b73e:	lea    rdx,[rip+0x132f7]        # 0x14001ea3c
   14000b745:	mov    rcx,r12
   14000b748:	call   0x140013788
   14000b74d:	test   rax,rax
   14000b750:	je     0x14000b8e5
   14000b756:	call   0x14000bdf0
   14000b75b:	mov    r14d,DWORD PTR [rax]
   14000b75e:	call   0x14000bdf0
   14000b763:	lea    rcx,[rbp+0xa0]
   14000b76a:	and    DWORD PTR [rax],r13d
   14000b76d:	mov    r8d,0x104
   14000b773:	mov    rdx,r12
   14000b776:	call   0x14001229c
   14000b77b:	mov    rsi,rax
   14000b77e:	test   rax,rax
   14000b781:	je     0x14000b78d
   14000b783:	call   0x14000bdf0
   14000b788:	mov    DWORD PTR [rax],r14d
   14000b78b:	jmp    0x14000b7b6
   14000b78d:	call   0x14000bdf0
   14000b792:	cmp    DWORD PTR [rax],0x22
   14000b795:	jne    0x14000b8e5
   14000b79b:	call   0x14000bdf0
   14000b7a0:	xor    r8d,r8d
   14000b7a3:	mov    rdx,r12
   14000b7a6:	xor    ecx,ecx
   14000b7a8:	mov    DWORD PTR [rax],r14d
   14000b7ab:	call   0x14001229c
   14000b7b0:	mov    r13,rax
   14000b7b3:	mov    rsi,rax
   14000b7b6:	xor    r14d,r14d
   14000b7b9:	test   rsi,rsi
   14000b7bc:	je     0x14000b8d8
   14000b7c2:	mov    rcx,rsi
   14000b7c5:	call   0x140009fd0
   14000b7ca:	cmp    rax,0x3
   14000b7ce:	je     0x14000b874
   14000b7d4:	mov    rcx,rsi
   14000b7d7:	call   0x140009fd0
   14000b7dc:	cmp    rax,0x5
   14000b7e0:	jb     0x14000b8d8
   14000b7e6:	mov    r8b,0x5c
   14000b7e9:	mov    dl,0x2f
   14000b7eb:	cmp    BYTE PTR [rsi],r8b
   14000b7ee:	je     0x14000b7f8
   14000b7f0:	cmp    BYTE PTR [rsi],dl
   14000b7f2:	jne    0x14000b8d8
   14000b7f8:	mov    al,BYTE PTR [rsi+0x1]
   14000b7fb:	cmp    al,r8b
   14000b7fe:	je     0x14000b808
   14000b800:	cmp    al,dl
   14000b802:	jne    0x14000b8d8
   14000b808:	mov    al,BYTE PTR [rsi+0x2]
   14000b80b:	cmp    al,r8b
   14000b80e:	je     0x14000b8d8
   14000b814:	cmp    al,dl
   14000b816:	je     0x14000b8d8
   14000b81c:	lea    rax,[rsi+0x3]
   14000b820:	mov    cl,BYTE PTR [rax]
   14000b822:	test   cl,cl
   14000b824:	je     0x14000b8d8
   14000b82a:	cmp    cl,r8b
   14000b82d:	je     0x14000b83c
   14000b82f:	cmp    cl,dl
   14000b831:	je     0x14000b83c
   14000b833:	inc    rax
   14000b836:	mov    cl,BYTE PTR [rax]
   14000b838:	test   cl,cl
   14000b83a:	jne    0x14000b82a
   14000b83c:	cmp    BYTE PTR [rax],r14b
   14000b83f:	je     0x14000b8d8
   14000b845:	inc    rax
   14000b848:	cmp    BYTE PTR [rax],r14b
   14000b84b:	je     0x14000b8d8
   14000b851:	mov    cl,BYTE PTR [rax]
   14000b853:	test   cl,cl
   14000b855:	je     0x14000b874
   14000b857:	cmp    cl,r8b
   14000b85a:	je     0x14000b869
   14000b85c:	cmp    cl,dl
   14000b85e:	je     0x14000b869
   14000b860:	inc    rax
   14000b863:	mov    cl,BYTE PTR [rax]
   14000b865:	test   cl,cl
   14000b867:	jne    0x14000b857
   14000b869:	cmp    BYTE PTR [rax],r14b
   14000b86c:	je     0x14000b874
   14000b86e:	cmp    BYTE PTR [rax+0x1],r14b
   14000b872:	jne    0x14000b8d8
   14000b874:	mov    rcx,rsi
   14000b877:	call   QWORD PTR [rip+0xe8ab]        # 0x14001a128
   14000b87d:	mov    esi,0x1
   14000b882:	cmp    eax,esi
   14000b884:	jbe    0x14000b8d8
   14000b886:	test   r13,r13
   14000b889:	je     0x14000b893
   14000b88b:	mov    rcx,r13
   14000b88e:	call   0x14000b490
   14000b893:	mov    DWORD PTR [rsp+0x30],ebx
   14000b897:	xor    r9d,r9d
   14000b89a:	mov    r8d,esi
   14000b89d:	mov    edx,esi
   14000b89f:	mov    ecx,0x7bc
   14000b8a4:	mov    DWORD PTR [rsp+0x28],r14d
   14000b8a9:	mov    DWORD PTR [rsp+0x60],0x10
   14000b8b1:	mov    QWORD PTR [rsp+0x7c],r14
   14000b8b6:	mov    BYTE PTR [rbp-0x74],r14b
   14000b8ba:	mov    DWORD PTR [rsp+0x20],r14d
   14000b8bf:	call   0x1400131ec
   14000b8c4:	mov    r13d,r14d
   14000b8c7:	mov    QWORD PTR [rdi+0x20],rax
   14000b8cb:	mov    QWORD PTR [rdi+0x18],rax
   14000b8cf:	mov    QWORD PTR [rdi+0x28],rax
   14000b8d3:	jmp    0x14000bad2
   14000b8d8:	test   r13,r13
   14000b8db:	je     0x14000b8e5
   14000b8dd:	mov    rcx,r13
   14000b8e0:	call   0x14000b490
   14000b8e5:	call   0x14000bdf0
   14000b8ea:	mov    edi,0x2
   14000b8ef:	mov    DWORD PTR [rax],edi
   14000b8f1:	call   0x14000be10
   14000b8f6:	mov    DWORD PTR [rax],edi
   14000b8f8:	jmp    0x14000bb2a
   14000b8fd:	test   DWORD PTR [rsp+0x60],0x400
   14000b905:	je     0x14000b953
   14000b907:	cmp    DWORD PTR [rbp-0x7c],0xa000000c
   14000b90e:	jne    0x14000b953
   14000b910:	lea    rcx,[rsp+0x40]
   14000b915:	mov    r9d,0x40
   14000b91b:	xor    r8d,r8d
   14000b91e:	mov    rdx,r12
   14000b921:	mov    DWORD PTR [rsp+0x40],ebx
   14000b925:	mov    DWORD PTR [rsp+0x20],r14d
   14000b92a:	call   0x1400131b8
   14000b92f:	test   eax,eax
   14000b931:	jne    0x14000b8e5
   14000b933:	mov    ecx,DWORD PTR [rsp+0x40]
   14000b937:	cmp    ecx,ebx
   14000b939:	je     0x14000b8e5
   14000b93b:	mov    rdx,rdi
   14000b93e:	call   0x1400124b0
   14000b943:	mov    ecx,DWORD PTR [rsp+0x40]
   14000b947:	mov    ebx,eax
   14000b949:	call   0x140010ecc
   14000b94e:	jmp    0x14000bb2a
   14000b953:	cmp    DWORD PTR [rsp+0x74],r14d
   14000b958:	jne    0x14000b967
   14000b95a:	cmp    DWORD PTR [rsp+0x78],r14d
   14000b95f:	jne    0x14000b967
   14000b961:	mov    QWORD PTR [rdi+0x20],r14
   14000b965:	jmp    0x14000b9ce
   14000b967:	lea    rdx,[rsp+0x40]
   14000b96c:	lea    rcx,[rsp+0x74]
   14000b971:	call   QWORD PTR [rip+0xe7a9]        # 0x14001a120
   14000b977:	test   eax,eax
   14000b979:	je     0x14000bb14
   14000b97f:	lea    rdx,[rsp+0x48]
   14000b984:	lea    rcx,[rsp+0x40]
   14000b989:	call   QWORD PTR [rip+0xe789]        # 0x14001a118
   14000b98f:	test   eax,eax
   14000b991:	je     0x14000bb14
   14000b997:	movzx  eax,WORD PTR [rsp+0x54]
   14000b99c:	movzx  r10d,WORD PTR [rsp+0x52]
   14000b9a2:	movzx  r9d,WORD PTR [rsp+0x50]
   14000b9a8:	movzx  r8d,WORD PTR [rsp+0x4e]
   14000b9ae:	movzx  edx,WORD PTR [rsp+0x4a]
   14000b9b3:	movzx  ecx,WORD PTR [rsp+0x48]
   14000b9b8:	mov    DWORD PTR [rsp+0x30],ebx
   14000b9bc:	mov    DWORD PTR [rsp+0x28],eax
   14000b9c0:	mov    DWORD PTR [rsp+0x20],r10d
   14000b9c5:	call   0x1400131ec
   14000b9ca:	mov    QWORD PTR [rdi+0x20],rax
   14000b9ce:	cmp    DWORD PTR [rsp+0x6c],r14d
   14000b9d3:	jne    0x14000b9e2
   14000b9d5:	cmp    DWORD PTR [rsp+0x70],r14d
   14000b9da:	jne    0x14000b9e2
   14000b9dc:	mov    rax,QWORD PTR [rdi+0x20]
   14000b9e0:	jmp    0x14000ba45
   14000b9e2:	lea    rdx,[rsp+0x40]
   14000b9e7:	lea    rcx,[rsp+0x6c]
   14000b9ec:	call   QWORD PTR [rip+0xe72e]        # 0x14001a120
   14000b9f2:	test   eax,eax
   14000b9f4:	je     0x14000bb14
   14000b9fa:	lea    rdx,[rsp+0x48]
   14000b9ff:	lea    rcx,[rsp+0x40]
   14000ba04:	call   QWORD PTR [rip+0xe70e]        # 0x14001a118
   14000ba0a:	test   eax,eax
   14000ba0c:	je     0x14000bb14
   14000ba12:	movzx  eax,WORD PTR [rsp+0x54]
   14000ba17:	movzx  r10d,WORD PTR [rsp+0x52]
   14000ba1d:	movzx  r9d,WORD PTR [rsp+0x50]
   14000ba23:	movzx  r8d,WORD PTR [rsp+0x4e]
   14000ba29:	movzx  edx,WORD PTR [rsp+0x4a]
   14000ba2e:	movzx  ecx,WORD PTR [rsp+0x48]
   14000ba33:	mov    DWORD PTR [rsp+0x30],ebx
   14000ba37:	mov    DWORD PTR [rsp+0x28],eax
   14000ba3b:	mov    DWORD PTR [rsp+0x20],r10d
   14000ba40:	call   0x1400131ec
   14000ba45:	mov    QWORD PTR [rdi+0x18],rax
   14000ba49:	cmp    DWORD PTR [rsp+0x64],r14d
   14000ba4e:	jne    0x14000ba5d
   14000ba50:	cmp    DWORD PTR [rsp+0x68],r14d
   14000ba55:	jne    0x14000ba5d
   14000ba57:	mov    rax,QWORD PTR [rdi+0x20]
   14000ba5b:	jmp    0x14000bac0
   14000ba5d:	lea    rdx,[rsp+0x40]
   14000ba62:	lea    rcx,[rsp+0x64]
   14000ba67:	call   QWORD PTR [rip+0xe6b3]        # 0x14001a120
   14000ba6d:	test   eax,eax
   14000ba6f:	je     0x14000bb14
   14000ba75:	lea    rdx,[rsp+0x48]
   14000ba7a:	lea    rcx,[rsp+0x40]
   14000ba7f:	call   QWORD PTR [rip+0xe693]        # 0x14001a118
   14000ba85:	test   eax,eax
   14000ba87:	je     0x14000bb14
   14000ba8d:	movzx  eax,WORD PTR [rsp+0x54]
   14000ba92:	movzx  r10d,WORD PTR [rsp+0x52]
   14000ba98:	movzx  r9d,WORD PTR [rsp+0x50]
   14000ba9e:	movzx  r8d,WORD PTR [rsp+0x4e]
   14000baa4:	movzx  edx,WORD PTR [rsp+0x4a]
   14000baa9:	movzx  ecx,WORD PTR [rsp+0x48]
   14000baae:	mov    DWORD PTR [rsp+0x30],ebx
   14000bab2:	mov    DWORD PTR [rsp+0x28],eax
   14000bab6:	mov    DWORD PTR [rsp+0x20],r10d
   14000babb:	call   0x1400131ec
   14000bac0:	mov    rcx,rsi
   14000bac3:	mov    QWORD PTR [rdi+0x28],rax
   14000bac7:	call   QWORD PTR [rip+0xe5fb]        # 0x14001a0c8
   14000bacd:	mov    esi,0x1
   14000bad2:	mov    ecx,DWORD PTR [rsp+0x60]
   14000bad6:	mov    rdx,r12
   14000bad9:	call   0x1400123c8
   14000bade:	mov    WORD PTR [rdi+0x8],si
   14000bae2:	mov    WORD PTR [rdi+0x6],ax
   14000bae6:	mov    eax,DWORD PTR [rbp-0x80]
   14000bae9:	mov    DWORD PTR [rdi+0x14],eax
   14000baec:	cmp    DWORD PTR [rsp+0x7c],r14d
   14000baf1:	je     0x14000bafa
   14000baf3:	mov    DWORD PTR [rdi+0x14],r14d
   14000baf7:	mov    r13d,ebx
   14000bafa:	lea    ecx,[r15-0x1]
   14000bafe:	mov    WORD PTR [rdi+0x4],r14w
   14000bb03:	mov    DWORD PTR [rdi+0xa],0x0
   14000bb0a:	mov    DWORD PTR [rdi],ecx
   14000bb0c:	mov    DWORD PTR [rdi+0x10],ecx
   14000bb0f:	mov    eax,r13d
   14000bb12:	jmp    0x14000bb2c
   14000bb14:	call   QWORD PTR [rip+0xe556]        # 0x14001a070
   14000bb1a:	mov    ecx,eax
   14000bb1c:	call   0x14000be30
   14000bb21:	mov    rcx,rsi
   14000bb24:	call   QWORD PTR [rip+0xe59e]        # 0x14001a0c8
   14000bb2a:	mov    eax,ebx
   14000bb2c:	mov    rcx,QWORD PTR [rbp+0x1b0]
   14000bb33:	xor    rcx,rsp
   14000bb36:	call   0x14000a850
   14000bb3b:	mov    rbx,QWORD PTR [rsp+0x310]
   14000bb43:	add    rsp,0x2c0
   14000bb4a:	pop    r15
   14000bb4c:	pop    r14
   14000bb4e:	pop    r13
   14000bb50:	pop    r12
   14000bb52:	pop    rdi
   14000bb53:	pop    rsi
   14000bb54:	pop    rbp
   14000bb55:	ret    
   14000bb56:	int3   
   14000bb57:	int3   
   14000bb58:	mov    r9,rcx
   14000bb5b:	xor    r8d,r8d
   14000bb5e:	mov    al,BYTE PTR [rcx]
   14000bb60:	inc    rcx
   14000bb63:	test   al,al
   14000bb65:	jne    0x14000bb5e
   14000bb67:	dec    rcx
   14000bb6a:	cmp    rcx,r9
   14000bb6d:	je     0x14000bb73
   14000bb6f:	cmp    BYTE PTR [rcx],dl
   14000bb71:	jne    0x14000bb67
   14000bb73:	cmp    BYTE PTR [rcx],dl
   14000bb75:	cmove  r8,rcx
   14000bb79:	mov    rax,r8
   14000bb7c:	ret    
   14000bb7d:	int3   
   14000bb7e:	int3   
   14000bb7f:	int3   
   14000bb80:	mov    rax,rsp
   14000bb83:	mov    QWORD PTR [rax+0x8],rbx
   14000bb87:	mov    QWORD PTR [rax+0x10],rbp
   14000bb8b:	mov    QWORD PTR [rax+0x18],rsi
   14000bb8f:	push   rdi
   14000bb90:	sub    rsp,0x50
   14000bb94:	and    QWORD PTR [rax-0x38],0x0
   14000bb99:	mov    rbx,rdx
   14000bb9c:	xor    edx,edx
   14000bb9e:	mov    rsi,r8
   14000bba1:	mov    rdi,rcx
   14000bba4:	lea    r8d,[rdx+0x28]
   14000bba8:	lea    rcx,[rax-0x30]
   14000bbac:	mov    rbp,r9
   14000bbaf:	call   0x14000a560
   14000bbb4:	test   rsi,rsi
   14000bbb7:	jne    0x14000bbce
   14000bbb9:	call   0x14000bdf0
   14000bbbe:	mov    DWORD PTR [rax],0x16
   14000bbc4:	call   0x14000d04c
   14000bbc9:	or     eax,0xffffffff
   14000bbcc:	jmp    0x14000bc36
   14000bbce:	test   rbx,rbx
   14000bbd1:	je     0x14000bbd8
   14000bbd3:	test   rdi,rdi
   14000bbd6:	je     0x14000bbb9
   14000bbd8:	mov    r9,QWORD PTR [rsp+0x80]
   14000bbe0:	mov    eax,0x7fffffff
   14000bbe5:	lea    rcx,[rsp+0x20]
   14000bbea:	cmp    rbx,rax
   14000bbed:	mov    r8,rbp
   14000bbf0:	mov    rdx,rsi
   14000bbf3:	cmova  ebx,eax
   14000bbf6:	mov    DWORD PTR [rsp+0x38],0x42
   14000bbfe:	mov    QWORD PTR [rsp+0x30],rdi
   14000bc03:	mov    DWORD PTR [rsp+0x28],ebx
   14000bc07:	mov    QWORD PTR [rsp+0x20],rdi
   14000bc0c:	call   0x14000de34
   14000bc11:	mov    ebx,eax
   14000bc13:	test   rdi,rdi
   14000bc16:	je     0x14000bc36
   14000bc18:	dec    DWORD PTR [rsp+0x28]
   14000bc1c:	js     0x14000bc28
   14000bc1e:	mov    rax,QWORD PTR [rsp+0x20]
   14000bc23:	mov    BYTE PTR [rax],0x0
   14000bc26:	jmp    0x14000bc34
   14000bc28:	lea    rdx,[rsp+0x20]
   14000bc2d:	xor    ecx,ecx
   14000bc2f:	call   0x14001084c
   14000bc34:	mov    eax,ebx
   14000bc36:	mov    rbx,QWORD PTR [rsp+0x60]
   14000bc3b:	mov    rbp,QWORD PTR [rsp+0x68]
   14000bc40:	mov    rsi,QWORD PTR [rsp+0x70]
   14000bc45:	add    rsp,0x50
   14000bc49:	pop    rdi
   14000bc4a:	ret    
   14000bc4b:	int3   
   14000bc4c:	sub    rsp,0x38
   14000bc50:	mov    QWORD PTR [rsp+0x20],r9
   14000bc55:	xor    r9d,r9d
   14000bc58:	call   0x14000bb80
   14000bc5d:	add    rsp,0x38
   14000bc61:	ret    
   14000bc62:	int3   
   14000bc63:	int3   
   14000bc64:	mov    rax,rsp
   14000bc67:	mov    QWORD PTR [rax+0x8],rbx
   14000bc6b:	mov    QWORD PTR [rax+0x10],rbp
   14000bc6f:	mov    QWORD PTR [rax+0x18],rsi
   14000bc73:	push   rdi
   14000bc74:	sub    rsp,0x50
   14000bc78:	and    QWORD PTR [rax-0x38],0x0
   14000bc7d:	mov    rbx,rdx
   14000bc80:	xor    edx,edx
   14000bc82:	mov    rsi,r8
   14000bc85:	mov    rbp,rcx
   14000bc88:	lea    r8d,[rdx+0x28]
   14000bc8c:	lea    rcx,[rax-0x30]
   14000bc90:	mov    rdi,r9
   14000bc93:	call   0x14000a560
   14000bc98:	test   rbx,rbx
   14000bc9b:	jne    0x14000bcb2
   14000bc9d:	call   0x14000bdf0
   14000bca2:	mov    DWORD PTR [rax],0x16
   14000bca8:	call   0x14000d04c
   14000bcad:	or     eax,0xffffffff
   14000bcb0:	jmp    0x14000bcde
   14000bcb2:	and    QWORD PTR [rsp+0x30],0x0
   14000bcb8:	and    QWORD PTR [rsp+0x20],0x0
   14000bcbe:	lea    rcx,[rsp+0x20]
   14000bcc3:	mov    r9,rdi
   14000bcc6:	mov    r8,rsi
   14000bcc9:	mov    rdx,rbx
   14000bccc:	mov    DWORD PTR [rsp+0x28],0x7fffffff
   14000bcd4:	mov    DWORD PTR [rsp+0x38],0x42
   14000bcdc:	call   rbp
   14000bcde:	mov    rbx,QWORD PTR [rsp+0x60]
   14000bce3:	mov    rbp,QWORD PTR [rsp+0x68]
   14000bce8:	mov    rsi,QWORD PTR [rsp+0x70]
   14000bced:	add    rsp,0x50
   14000bcf1:	pop    rdi
   14000bcf2:	ret    
   14000bcf3:	int3   
   14000bcf4:	mov    r9,rdx
   14000bcf7:	mov    rdx,rcx
   14000bcfa:	lea    rcx,[rip+0x2133]        # 0x14000de34
   14000bd01:	xor    r8d,r8d
   14000bd04:	jmp    0x14000bc64
   14000bd09:	int3   
   14000bd0a:	int3   
   14000bd0b:	int3   
   14000bd0c:	mov    QWORD PTR [rsp+0x8],rbx
   14000bd11:	push   rdi
   14000bd12:	sub    rsp,0x30
   14000bd16:	mov    edi,ecx
   14000bd18:	call   0x14000d1b0
   14000bd1d:	mov    rbx,rax
   14000bd20:	test   rax,rax
   14000bd23:	jne    0x14000bd37
   14000bd25:	lea    rax,[rip+0x12d24]        # 0x14001ea50
   14000bd2c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000bd31:	add    rsp,0x30
   14000bd35:	pop    rdi
   14000bd36:	ret    
   14000bd37:	cmp    QWORD PTR [rax+0x38],0x0
   14000bd3c:	jne    0x14000bd56
   14000bd3e:	mov    edx,0x1
   14000bd43:	mov    ecx,0x86
   14000bd48:	call   0x140010bd0
   14000bd4d:	mov    QWORD PTR [rbx+0x38],rax
   14000bd51:	test   rax,rax
   14000bd54:	je     0x14000bd25
   14000bd56:	mov    rbx,QWORD PTR [rbx+0x38]
   14000bd5a:	test   edi,edi
   14000bd5c:	js     0x14000bd67
   14000bd5e:	call   0x1400115a4
   14000bd63:	cmp    edi,DWORD PTR [rax]
   14000bd65:	jl     0x14000bd6e
   14000bd67:	call   0x1400115a4
   14000bd6c:	mov    edi,DWORD PTR [rax]
   14000bd6e:	call   0x1400115ac
   14000bd73:	movsxd rcx,edi
   14000bd76:	mov    edx,0x86
   14000bd7b:	mov    r8,QWORD PTR [rax+rcx*8]
   14000bd7f:	mov    rcx,rbx
   14000bd82:	call   0x14000eae0
   14000bd87:	test   eax,eax
   14000bd89:	jne    0x14000bd90
   14000bd8b:	mov    rax,rbx
   14000bd8e:	jmp    0x14000bd2c
   14000bd90:	and    QWORD PTR [rsp+0x20],0x0
   14000bd96:	xor    r9d,r9d
   14000bd99:	xor    r8d,r8d
   14000bd9c:	xor    edx,edx
   14000bd9e:	xor    ecx,ecx
   14000bda0:	call   0x14000cfa8
   14000bda5:	int3   
   14000bda6:	int3   
   14000bda7:	int3   
   14000bda8:	lea    r9,[rip+0x176e1]        # 0x140023490
   14000bdaf:	xor    eax,eax
   14000bdb1:	mov    rdx,r9
   14000bdb4:	lea    r8d,[rax+0x8]
   14000bdb8:	cmp    ecx,DWORD PTR [rdx]
   14000bdba:	je     0x14000bde7
   14000bdbc:	inc    eax
   14000bdbe:	add    rdx,r8
   14000bdc1:	cmp    eax,0x2d
   14000bdc4:	jb     0x14000bdb8
   14000bdc6:	lea    eax,[rcx-0x13]
   14000bdc9:	cmp    eax,0x11
   14000bdcc:	ja     0x14000bdd4
   14000bdce:	mov    eax,0xd
   14000bdd3:	ret    
   14000bdd4:	add    ecx,0xffffff44
   14000bdda:	mov    eax,0x16
   14000bddf:	cmp    ecx,0xe
   14000bde2:	cmovbe eax,r8d
   14000bde6:	ret    
   14000bde7:	cdqe   
   14000bde9:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   14000bdee:	ret    
   14000bdef:	int3   
   14000bdf0:	sub    rsp,0x28
   14000bdf4:	call   0x14000d1b0
   14000bdf9:	test   rax,rax
   14000bdfc:	jne    0x14000be07
   14000bdfe:	lea    rax,[rip+0x177f3]        # 0x1400235f8
   14000be05:	jmp    0x14000be0b
   14000be07:	add    rax,0x10
   14000be0b:	add    rsp,0x28
   14000be0f:	ret    
   14000be10:	sub    rsp,0x28
   14000be14:	call   0x14000d1b0
   14000be19:	test   rax,rax
   14000be1c:	jne    0x14000be27
   14000be1e:	lea    rax,[rip+0x177d7]        # 0x1400235fc
   14000be25:	jmp    0x14000be2b
   14000be27:	add    rax,0x14
   14000be2b:	add    rsp,0x28
   14000be2f:	ret    
   14000be30:	rex push rbx
   14000be32:	sub    rsp,0x20
   14000be36:	mov    ebx,ecx
   14000be38:	call   0x14000d1b0
   14000be3d:	test   rax,rax
   14000be40:	jne    0x14000be4b
   14000be42:	lea    rax,[rip+0x177b3]        # 0x1400235fc
   14000be49:	jmp    0x14000be4f
   14000be4b:	add    rax,0x14
   14000be4f:	mov    DWORD PTR [rax],ebx
   14000be51:	call   0x14000d1b0
   14000be56:	lea    r10,[rip+0x1779b]        # 0x1400235f8
   14000be5d:	test   rax,rax
   14000be60:	je     0x14000be66
   14000be62:	lea    r10,[rax+0x10]
   14000be66:	mov    ecx,ebx
   14000be68:	call   0x14000bda8
   14000be6d:	mov    DWORD PTR [r10],eax
   14000be70:	add    rsp,0x20
   14000be74:	pop    rbx
   14000be75:	ret    
   14000be76:	int3   
   14000be77:	int3   
   14000be78:	mov    QWORD PTR [rsp+0x8],rbx
   14000be7d:	mov    QWORD PTR [rsp+0x10],rsi
   14000be82:	push   rdi
   14000be83:	sub    rsp,0x20
   14000be87:	mov    eax,DWORD PTR [rcx+0x18]
   14000be8a:	xor    esi,esi
   14000be8c:	mov    rbx,rcx
   14000be8f:	and    al,0x3
   14000be91:	cmp    al,0x2
   14000be93:	jne    0x14000bed4
   14000be95:	test   DWORD PTR [rcx+0x18],0x108
   14000be9c:	je     0x14000bed4
   14000be9e:	mov    edi,DWORD PTR [rcx]
   14000bea0:	sub    edi,DWORD PTR [rcx+0x10]
   14000bea3:	test   edi,edi
   14000bea5:	jle    0x14000bed4
   14000bea7:	call   0x140010b28
   14000beac:	mov    rdx,QWORD PTR [rbx+0x10]
   14000beb0:	mov    r8d,edi
   14000beb3:	mov    ecx,eax
   14000beb5:	call   0x1400121bc
   14000beba:	cmp    eax,edi
   14000bebc:	jne    0x14000becd
   14000bebe:	mov    eax,DWORD PTR [rbx+0x18]
   14000bec1:	test   al,al
   14000bec3:	jns    0x14000bed4
   14000bec5:	and    eax,0xfffffffd
   14000bec8:	mov    DWORD PTR [rbx+0x18],eax
   14000becb:	jmp    0x14000bed4
   14000becd:	or     DWORD PTR [rbx+0x18],0x20
   14000bed1:	or     esi,0xffffffff
   14000bed4:	mov    rcx,QWORD PTR [rbx+0x10]
   14000bed8:	and    DWORD PTR [rbx+0x8],0x0
   14000bedc:	mov    eax,esi
   14000bede:	mov    rsi,QWORD PTR [rsp+0x38]
   14000bee3:	mov    QWORD PTR [rbx],rcx
   14000bee6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000beeb:	add    rsp,0x20
   14000beef:	pop    rdi
   14000bef0:	ret    
   14000bef1:	int3   
   14000bef2:	int3   
   14000bef3:	int3   
   14000bef4:	rex push rbx
   14000bef6:	sub    rsp,0x20
   14000befa:	mov    rbx,rcx
   14000befd:	test   rcx,rcx
   14000bf00:	jne    0x14000bf0c
   14000bf02:	add    rsp,0x20
   14000bf06:	pop    rbx
   14000bf07:	jmp    0x14000bf40
   14000bf0c:	call   0x14000be78
   14000bf11:	test   eax,eax
   14000bf13:	je     0x14000bf1a
   14000bf15:	or     eax,0xffffffff
   14000bf18:	jmp    0x14000bf3a
   14000bf1a:	test   DWORD PTR [rbx+0x18],0x4000
   14000bf21:	je     0x14000bf38
   14000bf23:	mov    rcx,rbx
   14000bf26:	call   0x140010b28
   14000bf2b:	mov    ecx,eax
   14000bf2d:	call   0x140013850
   14000bf32:	neg    eax
   14000bf34:	sbb    eax,eax
   14000bf36:	jmp    0x14000bf3a
   14000bf38:	xor    eax,eax
   14000bf3a:	add    rsp,0x20
   14000bf3e:	pop    rbx
   14000bf3f:	ret    
   14000bf40:	mov    QWORD PTR [rsp+0x8],rbx
   14000bf45:	mov    QWORD PTR [rsp+0x10],rsi
   14000bf4a:	mov    QWORD PTR [rsp+0x18],rdi
   14000bf4f:	push   r12
   14000bf51:	push   r13
   14000bf53:	push   r15
   14000bf55:	sub    rsp,0x30
   14000bf59:	mov    r13d,ecx
   14000bf5c:	xor    esi,esi
   14000bf5e:	xor    edi,edi
   14000bf60:	lea    ecx,[rsi+0x1]
   14000bf63:	call   0x14000cb58
   14000bf68:	nop
   14000bf69:	xor    ebx,ebx
   14000bf6b:	or     r15d,0xffffffff
   14000bf6f:	mov    DWORD PTR [rsp+0x20],ebx
   14000bf73:	cmp    ebx,DWORD PTR [rip+0x1ad27]        # 0x140026ca0
   14000bf79:	jge    0x14000bfff
   14000bf7f:	movsxd r12,ebx
   14000bf82:	mov    rax,QWORD PTR [rip+0x19cff]        # 0x140025c88
   14000bf89:	cmp    QWORD PTR [rax+r12*8],0x0
   14000bf8e:	je     0x14000bff8
   14000bf90:	mov    rdx,QWORD PTR [rax+r12*8]
   14000bf94:	test   BYTE PTR [rdx+0x18],0x83
   14000bf98:	je     0x14000bff8
   14000bf9a:	mov    ecx,ebx
   14000bf9c:	call   0x14000ad3c
   14000bfa1:	nop
   14000bfa2:	mov    rax,QWORD PTR [rip+0x19cdf]        # 0x140025c88
   14000bfa9:	mov    rcx,QWORD PTR [rax+r12*8]
   14000bfad:	test   BYTE PTR [rcx+0x18],0x83
   14000bfb1:	je     0x14000bfe6
   14000bfb3:	cmp    r13d,0x1
   14000bfb7:	jne    0x14000bfcb
   14000bfb9:	call   0x14000bef4
   14000bfbe:	cmp    eax,r15d
   14000bfc1:	je     0x14000bfe6
   14000bfc3:	inc    esi
   14000bfc5:	mov    DWORD PTR [rsp+0x24],esi
   14000bfc9:	jmp    0x14000bfe6
   14000bfcb:	test   r13d,r13d
   14000bfce:	jne    0x14000bfe6
   14000bfd0:	test   BYTE PTR [rcx+0x18],0x2
   14000bfd4:	je     0x14000bfe6
   14000bfd6:	call   0x14000bef4
   14000bfdb:	cmp    eax,r15d
   14000bfde:	cmove  edi,r15d
   14000bfe2:	mov    DWORD PTR [rsp+0x28],edi
   14000bfe6:	mov    rdx,QWORD PTR [rip+0x19c9b]        # 0x140025c88
   14000bfed:	mov    rdx,QWORD PTR [rdx+r12*8]
   14000bff1:	mov    ecx,ebx
   14000bff3:	call   0x14000adbc
   14000bff8:	inc    ebx
   14000bffa:	jmp    0x14000bf6f
   14000bfff:	mov    ecx,0x1
   14000c004:	call   0x14000ca58
   14000c009:	cmp    r13d,0x1
   14000c00d:	cmove  edi,esi
   14000c010:	mov    eax,edi
   14000c012:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c017:	mov    rsi,QWORD PTR [rsp+0x58]
   14000c01c:	mov    rdi,QWORD PTR [rsp+0x60]
   14000c021:	add    rsp,0x30
   14000c025:	pop    r15
   14000c027:	pop    r13
   14000c029:	pop    r12
   14000c02b:	ret    
   14000c02c:	mov    QWORD PTR [rsp+0x10],rbx
   14000c031:	mov    QWORD PTR [rsp+0x8],rcx
   14000c036:	push   rdi
   14000c037:	sub    rsp,0x20
   14000c03b:	mov    rbx,rcx
   14000c03e:	test   rcx,rcx
   14000c041:	jne    0x14000c04a
   14000c043:	call   0x14000bf40
   14000c048:	jmp    0x14000c064
   14000c04a:	call   0x14000acd8
   14000c04f:	nop
   14000c050:	mov    rcx,rbx
   14000c053:	call   0x14000bef4
   14000c058:	mov    edi,eax
   14000c05a:	mov    rcx,rbx
   14000c05d:	call   0x14000ad70
   14000c062:	mov    eax,edi
   14000c064:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c069:	add    rsp,0x20
   14000c06d:	pop    rdi
   14000c06e:	ret    
   14000c06f:	int3   
   14000c070:	mov    ecx,0x1
   14000c075:	jmp    0x14000bf40
   14000c07a:	int3   
   14000c07b:	int3   
   14000c07c:	jmp    0x14000c085
   14000c07e:	cmp    al,dl
   14000c080:	je     0x14000c08f
   14000c082:	inc    rcx
   14000c085:	mov    al,BYTE PTR [rcx]
   14000c087:	test   al,al
   14000c089:	jne    0x14000c07e
   14000c08b:	cmp    al,dl
   14000c08d:	jne    0x14000c093
   14000c08f:	mov    rax,rcx
   14000c092:	ret    
   14000c093:	xor    eax,eax
   14000c095:	ret    
   14000c096:	int3   
   14000c097:	int3   
   14000c098:	mov    QWORD PTR [rsp+0x8],rbx
   14000c09d:	push   rbp
   14000c09e:	push   rsi
   14000c09f:	push   rdi
   14000c0a0:	push   r12
   14000c0a2:	push   r14
   14000c0a4:	mov    rbp,rsp
   14000c0a7:	sub    rsp,0x30
   14000c0ab:	and    QWORD PTR [rbp+0x48],0x0
   14000c0b0:	cmp    DWORD PTR [rip+0x1abf9],0x0        # 0x140026cb0
   14000c0b7:	mov    rsi,rdx
   14000c0ba:	mov    rdi,rcx
   14000c0bd:	jne    0x14000c0c7
   14000c0bf:	or     eax,0xffffffff
   14000c0c2:	jmp    0x14000c307
   14000c0c7:	test   rcx,rcx
   14000c0ca:	jne    0x14000c0de
   14000c0cc:	call   0x14000bdf0
   14000c0d1:	mov    DWORD PTR [rax],0x16
   14000c0d7:	call   0x14000d04c
   14000c0dc:	jmp    0x14000c0bf
   14000c0de:	test   rdx,rdx
   14000c0e1:	jne    0x14000c142
   14000c0e3:	lea    r14d,[rdx+0x3d]
   14000c0e7:	mov    edx,r14d
   14000c0ea:	call   0x140014188
   14000c0ef:	test   rax,rax
   14000c0f2:	je     0x14000c114
   14000c0f4:	mov    rcx,rax
   14000c0f7:	mov    ebx,0x7fff
   14000c0fc:	sub    rcx,rdi
   14000c0ff:	cmp    rcx,rbx
   14000c102:	jge    0x14000c0cc
   14000c104:	lea    rcx,[rax+0x1]
   14000c108:	mov    edx,ebx
   14000c10a:	call   0x14000eb88
   14000c10f:	cmp    rax,rbx
   14000c112:	jae    0x14000c0cc
   14000c114:	mov    rcx,rdi
   14000c117:	call   0x140009fd0
   14000c11c:	mov    edx,0x1
   14000c121:	lea    rcx,[rax+0x1]
   14000c125:	mov    rbx,rax
   14000c128:	call   0x140010bd0
   14000c12d:	mov    QWORD PTR [rbp+0x48],rax
   14000c131:	test   rax,rax
   14000c134:	je     0x14000c0bf
   14000c136:	mov    r8,rdi
   14000c139:	lea    rdx,[rbx+0x1]
   14000c13d:	mov    rcx,rax
   14000c140:	jmp    0x14000c1bc
   14000c142:	mov    ebx,0x7fff
   14000c147:	mov    edx,ebx
   14000c149:	call   0x14000eb88
   14000c14e:	mov    edx,ebx
   14000c150:	mov    rcx,rsi
   14000c153:	mov    r12,rax
   14000c156:	call   0x14000eb88
   14000c15b:	cmp    r12,rbx
   14000c15e:	jae    0x14000c0cc
   14000c164:	cmp    rax,rbx
   14000c167:	jae    0x14000c0cc
   14000c16d:	lea    rbx,[rax+r12*1+0x2]
   14000c172:	mov    edx,0x1
   14000c177:	mov    rcx,rbx
   14000c17a:	call   0x140010bd0
   14000c17f:	mov    QWORD PTR [rbp+0x48],rax
   14000c183:	test   rax,rax
   14000c186:	je     0x14000c0bf
   14000c18c:	mov    r8,rdi
   14000c18f:	mov    rdx,rbx
   14000c192:	mov    rcx,rax
   14000c195:	call   0x14000eae0
   14000c19a:	mov    rax,QWORD PTR [rbp+0x48]
   14000c19e:	mov    r14d,0x3d
   14000c1a4:	mov    BYTE PTR [r12+rax*1],r14b
   14000c1a8:	mov    rax,QWORD PTR [rbp+0x48]
   14000c1ac:	inc    r12
   14000c1af:	sub    rbx,r12
   14000c1b2:	mov    r8,rsi
   14000c1b5:	lea    rcx,[r12+rax*1]
   14000c1b9:	mov    rdx,rbx
   14000c1bc:	call   0x14000eae0
   14000c1c1:	lea    rcx,[rbp+0x48]
   14000c1c5:	mov    edx,0x1
   14000c1ca:	call   0x140013d00
   14000c1cf:	test   eax,eax
   14000c1d1:	je     0x14000c1ea
   14000c1d3:	mov    rcx,QWORD PTR [rbp+0x48]
   14000c1d7:	test   rcx,rcx
   14000c1da:	je     0x14000c0bf
   14000c1e0:	call   0x14000b490
   14000c1e5:	jmp    0x14000c0bf
   14000c1ea:	cmp    QWORD PTR [rip+0x187b6],0x0        # 0x1400249a8
   14000c1f2:	je     0x14000c305
   14000c1f8:	and    DWORD PTR [rsp+0x28],0x0
   14000c1fd:	and    QWORD PTR [rbp+0x40],0x0
   14000c202:	and    QWORD PTR [rsp+0x20],0x0
   14000c208:	or     ebx,0xffffffff
   14000c20b:	mov    r8,rdi
   14000c20e:	xor    edx,edx
   14000c210:	mov    r9d,ebx
   14000c213:	xor    ecx,ecx
   14000c215:	call   QWORD PTR [rip+0xdf1d]        # 0x14001a138
   14000c21b:	mov    r12d,eax
   14000c21e:	test   eax,eax
   14000c220:	jne    0x14000c234
   14000c222:	call   0x14000bdf0
   14000c227:	mov    DWORD PTR [rax],0x2a
   14000c22d:	mov    eax,ebx
   14000c22f:	jmp    0x14000c307
   14000c234:	test   rsi,rsi
   14000c237:	je     0x14000c25d
   14000c239:	and    DWORD PTR [rsp+0x28],0x0
   14000c23e:	and    QWORD PTR [rsp+0x20],0x0
   14000c244:	mov    r9d,ebx
   14000c247:	mov    r8,rsi
   14000c24a:	xor    edx,edx
   14000c24c:	xor    ecx,ecx
   14000c24e:	call   QWORD PTR [rip+0xdee4]        # 0x14001a138
   14000c254:	test   eax,eax
   14000c256:	je     0x14000c222
   14000c258:	lea    r12d,[r12+rax*1+0x1]
   14000c25d:	movsxd rcx,r12d
   14000c260:	mov    edx,0x2
   14000c265:	call   0x140010bd0
   14000c26a:	mov    QWORD PTR [rbp+0x40],rax
   14000c26e:	test   rax,rax
   14000c271:	je     0x14000c22d
   14000c273:	mov    r9d,ebx
   14000c276:	mov    r8,rdi
   14000c279:	xor    edx,edx
   14000c27b:	xor    ecx,ecx
   14000c27d:	mov    DWORD PTR [rsp+0x28],r12d
   14000c282:	mov    QWORD PTR [rsp+0x20],rax
   14000c287:	call   QWORD PTR [rip+0xdeab]        # 0x14001a138
   14000c28d:	test   eax,eax
   14000c28f:	jne    0x14000c29c
   14000c291:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c295:	call   0x14000b490
   14000c29a:	jmp    0x14000c222
   14000c29c:	test   rsi,rsi
   14000c29f:	je     0x14000c2df
   14000c2a1:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c2a5:	call   0x140013ce4
   14000c2aa:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c2ae:	mov    r9d,ebx
   14000c2b1:	mov    WORD PTR [rcx+rax*2],r14w
   14000c2b6:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c2ba:	inc    rax
   14000c2bd:	sub    r12d,eax
   14000c2c0:	lea    rax,[rcx+rax*2]
   14000c2c4:	mov    r8,rsi
   14000c2c7:	xor    edx,edx
   14000c2c9:	xor    ecx,ecx
   14000c2cb:	mov    DWORD PTR [rsp+0x28],r12d
   14000c2d0:	mov    QWORD PTR [rsp+0x20],rax
   14000c2d5:	call   QWORD PTR [rip+0xde5d]        # 0x14001a138
   14000c2db:	test   eax,eax
   14000c2dd:	je     0x14000c291
   14000c2df:	lea    rcx,[rbp+0x40]
   14000c2e3:	xor    edx,edx
   14000c2e5:	call   0x140013928
   14000c2ea:	test   eax,eax
   14000c2ec:	je     0x14000c305
   14000c2ee:	mov    rcx,QWORD PTR [rbp+0x40]
   14000c2f2:	test   rcx,rcx
   14000c2f5:	je     0x14000c22d
   14000c2fb:	call   0x14000b490
   14000c300:	jmp    0x14000c22d
   14000c305:	xor    eax,eax
   14000c307:	mov    rbx,QWORD PTR [rsp+0x60]
   14000c30c:	add    rsp,0x30
   14000c310:	pop    r14
   14000c312:	pop    r12
   14000c314:	pop    rdi
   14000c315:	pop    rsi
   14000c316:	pop    rbp
   14000c317:	ret    
   14000c318:	rex push rbx
   14000c31a:	sub    rsp,0x20
   14000c31e:	mov    rbx,rcx
   14000c321:	mov    ecx,0x7
   14000c326:	call   0x14000cb58
   14000c32b:	nop
   14000c32c:	xor    edx,edx
   14000c32e:	mov    rcx,rbx
   14000c331:	call   0x14000c098
   14000c336:	mov    ebx,eax
   14000c338:	mov    ecx,0x7
   14000c33d:	call   0x14000ca58
   14000c342:	mov    eax,ebx
   14000c344:	add    rsp,0x20
   14000c348:	pop    rbx
   14000c349:	ret    
   14000c34a:	int3   
   14000c34b:	int3   
   14000c34c:	rex push rbx
   14000c34e:	sub    rsp,0x20
   14000c352:	mov    ebx,edx
   14000c354:	test   rcx,rcx
   14000c357:	jne    0x14000c376
   14000c359:	call   0x14000be10
   14000c35e:	and    DWORD PTR [rax],0x0
   14000c361:	call   0x14000bdf0
   14000c366:	mov    ebx,0x16
   14000c36b:	mov    DWORD PTR [rax],ebx
   14000c36d:	call   0x14000d04c
   14000c372:	mov    eax,ebx
   14000c374:	jmp    0x14000c3c6
   14000c376:	test   edx,0xfffffff9
   14000c37c:	jne    0x14000c359
   14000c37e:	call   QWORD PTR [rip+0xddbc]        # 0x14001a140
   14000c384:	cmp    eax,0xffffffff
   14000c387:	jne    0x14000c39f
   14000c389:	call   QWORD PTR [rip+0xdce1]        # 0x14001a070
   14000c38f:	mov    ecx,eax
   14000c391:	call   0x14000be30
   14000c396:	call   0x14000bdf0
   14000c39b:	mov    eax,DWORD PTR [rax]
   14000c39d:	jmp    0x14000c3c6
   14000c39f:	test   al,0x10
   14000c3a1:	jne    0x14000c3c4
   14000c3a3:	test   al,0x1
   14000c3a5:	je     0x14000c3c4
   14000c3a7:	test   bl,0x2
   14000c3aa:	je     0x14000c3c4
   14000c3ac:	call   0x14000be10
   14000c3b1:	mov    DWORD PTR [rax],0x5
   14000c3b7:	call   0x14000bdf0
   14000c3bc:	mov    DWORD PTR [rax],0xd
   14000c3c2:	jmp    0x14000c396
   14000c3c4:	xor    eax,eax
   14000c3c6:	add    rsp,0x20
   14000c3ca:	pop    rbx
   14000c3cb:	ret    
   14000c3cc:	sub    rsp,0x28
   14000c3d0:	call   0x14000c34c
   14000c3d5:	neg    eax
   14000c3d7:	sbb    eax,eax
   14000c3d9:	add    rsp,0x28
   14000c3dd:	ret    
   14000c3de:	int3   
   14000c3df:	int3   
   14000c3e0:	rex push rbx
   14000c3e2:	sub    rsp,0x20
   14000c3e6:	mov    ebx,ecx
   14000c3e8:	call   0x14000d1b0
   14000c3ed:	test   rax,rax
   14000c3f0:	je     0x14000c3fa
   14000c3f2:	mov    rcx,rax
   14000c3f5:	call   0x14000d38c
   14000c3fa:	mov    ecx,ebx
   14000c3fc:	call   QWORD PTR [rip+0xdd46]        # 0x14001a148
   14000c402:	int3   
   14000c403:	int3   
   14000c404:	sub    rsp,0x28
   14000c408:	call   0x14000d234
   14000c40d:	nop
   14000c40e:	mov    rcx,QWORD PTR [rax+0x98]
   14000c415:	call   QWORD PTR [rax+0x90]
   14000c41b:	mov    ecx,eax
   14000c41d:	call   0x14000c3e0
   14000c422:	nop
   14000c423:	mov    ecx,eax
   14000c425:	call   0x140009be8
   14000c42a:	nop
   14000c42b:	add    rsp,0x28
   14000c42f:	ret    
   14000c430:	rex push rbx
   14000c432:	sub    rsp,0x20
   14000c436:	mov    rbx,rcx
   14000c439:	call   0x14000d0c4
   14000c43e:	call   0x14000d0bc
   14000c443:	mov    ecx,eax
   14000c445:	call   0x14000d0b4
   14000c44a:	mov    r11,rax
   14000c44d:	test   rax,rax
   14000c450:	jne    0x14000c47e
   14000c452:	call   0x14000d0bc
   14000c457:	mov    rdx,rbx
   14000c45a:	mov    ecx,eax
   14000c45c:	call   0x14000d0c8
   14000c461:	test   eax,eax
   14000c463:	jne    0x14000c474
   14000c465:	call   QWORD PTR [rip+0xdc05]        # 0x14001a070
   14000c46b:	mov    ecx,eax
   14000c46d:	call   QWORD PTR [rip+0xdcd5]        # 0x14001a148
   14000c473:	int3   
   14000c474:	call   QWORD PTR [rip+0xdcd6]        # 0x14001a150
   14000c47a:	mov    DWORD PTR [rbx],eax
   14000c47c:	jmp    0x14000c4aa
   14000c47e:	mov    rax,QWORD PTR [rbx+0x90]
   14000c485:	mov    rcx,rbx
   14000c488:	mov    QWORD PTR [r11+0x90],rax
   14000c48f:	mov    rax,QWORD PTR [rbx+0x98]
   14000c496:	mov    QWORD PTR [r11+0x98],rax
   14000c49d:	mov    rax,QWORD PTR [rbx+0x8]
   14000c4a1:	mov    QWORD PTR [r11+0x8],rax
   14000c4a5:	call   0x14000d258
   14000c4aa:	call   0x14000c404
   14000c4af:	int3   
   14000c4b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c4b5:	mov    QWORD PTR [rsp+0x10],rbp
   14000c4ba:	mov    QWORD PTR [rsp+0x20],rsi
   14000c4bf:	push   rdi
   14000c4c0:	push   r12
   14000c4c2:	push   r13
   14000c4c4:	sub    rsp,0x30
   14000c4c8:	xor    ebx,ebx
   14000c4ca:	mov    rbp,r9
   14000c4cd:	mov    rsi,r8
   14000c4d0:	mov    r12d,edx
   14000c4d3:	mov    r13,rcx
   14000c4d6:	test   r8,r8
   14000c4d9:	jne    0x14000c4f0
   14000c4db:	call   0x14000bdf0
   14000c4e0:	mov    DWORD PTR [rax],0x16
   14000c4e6:	call   0x14000d04c
   14000c4eb:	jmp    0x14000c587
   14000c4f0:	call   0x14000d0c4
   14000c4f5:	mov    edx,0x2c8
   14000c4fa:	mov    ecx,0x1
   14000c4ff:	call   0x140010bd0
   14000c504:	mov    rdi,rax
   14000c507:	test   rax,rax
   14000c50a:	je     0x14000c574
   14000c50c:	call   0x14000d234
   14000c511:	mov    rcx,rdi
   14000c514:	mov    rdx,QWORD PTR [rax+0xc0]
   14000c51b:	call   0x14000d0f8
   14000c520:	mov    rcx,QWORD PTR [rsp+0x78]
   14000c525:	or     QWORD PTR [rdi+0x8],0xffffffffffffffff
   14000c52a:	mov    eax,DWORD PTR [rsp+0x70]
   14000c52e:	test   rcx,rcx
   14000c531:	lea    r8,[rsp+0x60]
   14000c536:	cmovne r8,rcx
   14000c53a:	mov    rdx,r12
   14000c53d:	mov    r9,rdi
   14000c540:	mov    QWORD PTR [rsp+0x28],r8
   14000c545:	lea    r8,[rip+0xfffffffffffffee4]        # 0x14000c430
   14000c54c:	mov    rcx,r13
   14000c54f:	mov    QWORD PTR [rdi+0x90],rsi
   14000c556:	mov    QWORD PTR [rdi+0x98],rbp
   14000c55d:	mov    DWORD PTR [rsp+0x20],eax
   14000c561:	call   QWORD PTR [rip+0xdbf1]        # 0x14001a158
   14000c567:	test   rax,rax
   14000c56a:	jne    0x14000c589
   14000c56c:	call   QWORD PTR [rip+0xdafe]        # 0x14001a070
   14000c572:	mov    ebx,eax
   14000c574:	mov    rcx,rdi
   14000c577:	call   0x14000b490
   14000c57c:	test   ebx,ebx
   14000c57e:	je     0x14000c587
   14000c580:	mov    ecx,ebx
   14000c582:	call   0x14000be30
   14000c587:	xor    eax,eax
   14000c589:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c58e:	mov    rbp,QWORD PTR [rsp+0x58]
   14000c593:	mov    rsi,QWORD PTR [rsp+0x68]
   14000c598:	add    rsp,0x30
   14000c59c:	pop    r13
   14000c59e:	pop    r12
   14000c5a0:	pop    rdi
   14000c5a1:	ret    
   14000c5a2:	int3   
   14000c5a3:	int3   
   14000c5a4:	int3   
   14000c5a5:	int3   
   14000c5a6:	int3   
   14000c5a7:	int3   
   14000c5a8:	int3   
   14000c5a9:	int3   
   14000c5aa:	int3   
   14000c5ab:	int3   
   14000c5ac:	int3   
   14000c5ad:	int3   
   14000c5ae:	int3   
   14000c5af:	int3   
   14000c5b0:	int3   
   14000c5b1:	int3   
   14000c5b2:	int3   
   14000c5b3:	int3   
   14000c5b4:	int3   
   14000c5b5:	int3   
   14000c5b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c5c0:	sub    rdx,rcx
   14000c5c3:	cmp    r8,0x8
   14000c5c7:	jb     0x14000c5eb
   14000c5c9:	test   cl,0x7
   14000c5cc:	je     0x14000c5e2
   14000c5ce:	xchg   ax,ax
   14000c5d0:	mov    al,BYTE PTR [rcx]
   14000c5d2:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000c5d5:	jne    0x14000c603
   14000c5d7:	inc    rcx
   14000c5da:	dec    r8
   14000c5dd:	test   cl,0x7
   14000c5e0:	jne    0x14000c5d0
   14000c5e2:	mov    r9,r8
   14000c5e5:	shr    r9,0x3
   14000c5e9:	jne    0x14000c60a
   14000c5eb:	test   r8,r8
   14000c5ee:	je     0x14000c5ff
   14000c5f0:	mov    al,BYTE PTR [rcx]
   14000c5f2:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000c5f5:	jne    0x14000c603
   14000c5f7:	inc    rcx
   14000c5fa:	dec    r8
   14000c5fd:	jne    0x14000c5f0
   14000c5ff:	xor    rax,rax
   14000c602:	ret    
   14000c603:	sbb    eax,eax
   14000c605:	sbb    eax,0xffffffff
   14000c608:	ret    
   14000c609:	nop
   14000c60a:	shr    r9,0x2
   14000c60e:	je     0x14000c647
   14000c610:	mov    rax,QWORD PTR [rcx]
   14000c613:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000c617:	jne    0x14000c674
   14000c619:	mov    rax,QWORD PTR [rcx+0x8]
   14000c61d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000c622:	jne    0x14000c670
   14000c624:	mov    rax,QWORD PTR [rcx+0x10]
   14000c628:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14000c62d:	jne    0x14000c66c
   14000c62f:	mov    rax,QWORD PTR [rcx+0x18]
   14000c633:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14000c638:	jne    0x14000c668
   14000c63a:	add    rcx,0x20
   14000c63e:	dec    r9
   14000c641:	jne    0x14000c610
   14000c643:	and    r8,0x1f
   14000c647:	mov    r9,r8
   14000c64a:	shr    r9,0x3
   14000c64e:	je     0x14000c5eb
   14000c650:	mov    rax,QWORD PTR [rcx]
   14000c653:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000c657:	jne    0x14000c674
   14000c659:	add    rcx,0x8
   14000c65d:	dec    r9
   14000c660:	jne    0x14000c650
   14000c662:	and    r8,0x7
   14000c666:	jmp    0x14000c5eb
   14000c668:	add    rcx,0x8
   14000c66c:	add    rcx,0x8
   14000c670:	add    rcx,0x8
   14000c674:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14000c678:	bswap  rax
   14000c67b:	bswap  rcx
   14000c67e:	cmp    rax,rcx
   14000c681:	sbb    eax,eax
   14000c683:	sbb    eax,0xffffffff
   14000c686:	ret    
   14000c687:	int3   
   14000c688:	sub    rsp,0x38
   14000c68c:	mov    rax,QWORD PTR [rip+0x16a2d]        # 0x1400230c0
   14000c693:	xor    rax,rsp
   14000c696:	mov    QWORD PTR [rsp+0x20],rax
   14000c69b:	mov    al,BYTE PTR [rdx]
   14000c69d:	xor    r11d,r11d
   14000c6a0:	mov    r10,rdx
   14000c6a3:	mov    QWORD PTR [rsp],r11
   14000c6a7:	mov    QWORD PTR [rsp+0x8],r11
   14000c6ac:	mov    QWORD PTR [rsp+0x10],r11
   14000c6b1:	mov    QWORD PTR [rsp+0x18],r11
   14000c6b6:	mov    r9,rcx
   14000c6b9:	jmp    0x14000c6dc
   14000c6bb:	movzx  r8d,al
   14000c6bf:	movzx  eax,al
   14000c6c2:	mov    edx,0x1
   14000c6c7:	and    eax,0x7
   14000c6ca:	shr    r8,0x3
   14000c6ce:	mov    cl,al
   14000c6d0:	shl    dl,cl
   14000c6d2:	or     BYTE PTR [rsp+r8*1],dl
   14000c6d6:	inc    r10
   14000c6d9:	mov    al,BYTE PTR [r10]
   14000c6dc:	test   al,al
   14000c6de:	jne    0x14000c6bb
   14000c6e0:	jmp    0x14000c700
   14000c6e2:	movzx  ecx,r8b
   14000c6e6:	movzx  eax,r8b
   14000c6ea:	mov    edx,0x1
   14000c6ef:	and    ecx,0x7
   14000c6f2:	shr    rax,0x3
   14000c6f6:	shl    edx,cl
   14000c6f8:	test   BYTE PTR [rsp+rax*1],dl
   14000c6fb:	jne    0x14000c71c
   14000c6fd:	inc    r9
   14000c700:	mov    r8b,BYTE PTR [r9]
   14000c703:	test   r8b,r8b
   14000c706:	jne    0x14000c6e2
   14000c708:	xor    eax,eax
   14000c70a:	mov    rcx,QWORD PTR [rsp+0x20]
   14000c70f:	xor    rcx,rsp
   14000c712:	call   0x14000a850
   14000c717:	add    rsp,0x38
   14000c71b:	ret    
   14000c71c:	mov    rax,r9
   14000c71f:	jmp    0x14000c70a
   14000c721:	int3   
   14000c722:	int3   
   14000c723:	int3   
   14000c724:	rex push rbx
   14000c726:	sub    rsp,0x20
   14000c72a:	mov    rbx,rcx
   14000c72d:	mov    BYTE PTR [rcx+0x18],0x0
   14000c731:	test   rdx,rdx
   14000c734:	jne    0x14000c7b5
   14000c736:	call   0x14000d234
   14000c73b:	mov    QWORD PTR [rbx+0x10],rax
   14000c73f:	mov    rdx,QWORD PTR [rax+0xc0]
   14000c746:	mov    QWORD PTR [rbx],rdx
   14000c749:	mov    rcx,QWORD PTR [rax+0xb8]
   14000c750:	mov    QWORD PTR [rbx+0x8],rcx
   14000c754:	cmp    rdx,QWORD PTR [rip+0x17c85]        # 0x1400243e0
   14000c75b:	je     0x14000c773
   14000c75d:	mov    eax,DWORD PTR [rax+0xc8]
   14000c763:	test   DWORD PTR [rip+0x17847],eax        # 0x140023fb0
   14000c769:	jne    0x14000c773
   14000c76b:	call   0x140014cdc
   14000c770:	mov    QWORD PTR [rbx],rax
   14000c773:	mov    rax,QWORD PTR [rip+0x17736]        # 0x140023eb0
   14000c77a:	cmp    QWORD PTR [rbx+0x8],rax
   14000c77e:	je     0x14000c79b
   14000c780:	mov    rax,QWORD PTR [rbx+0x10]
   14000c784:	mov    ecx,DWORD PTR [rax+0xc8]
   14000c78a:	test   DWORD PTR [rip+0x17820],ecx        # 0x140023fb0
   14000c790:	jne    0x14000c79b
   14000c792:	call   0x14001440c
   14000c797:	mov    QWORD PTR [rbx+0x8],rax
   14000c79b:	mov    rax,QWORD PTR [rbx+0x10]
   14000c79f:	test   BYTE PTR [rax+0xc8],0x2
   14000c7a6:	jne    0x14000c7bc
   14000c7a8:	or     DWORD PTR [rax+0xc8],0x2
   14000c7af:	mov    BYTE PTR [rbx+0x18],0x1
   14000c7b3:	jmp    0x14000c7bc
   14000c7b5:	movups xmm0,XMMWORD PTR [rdx]
   14000c7b8:	movdqu XMMWORD PTR [rcx],xmm0
   14000c7bc:	mov    rax,rbx
   14000c7bf:	add    rsp,0x20
   14000c7c3:	pop    rbx
   14000c7c4:	ret    
   14000c7c5:	int3   
   14000c7c6:	int3   
   14000c7c7:	int3   
   14000c7c8:	rex push rbx
   14000c7ca:	sub    rsp,0x40
   14000c7ce:	cmp    DWORD PTR [rip+0x19193],0x0        # 0x140025968
   14000c7d5:	movsxd rbx,ecx
   14000c7d8:	jne    0x14000c7ea
   14000c7da:	mov    rax,QWORD PTR [rip+0x17bdf]        # 0x1400243c0
   14000c7e1:	movzx  eax,WORD PTR [rax+rbx*2]
   14000c7e5:	and    eax,0x4
   14000c7e8:	jmp    0x14000c840
   14000c7ea:	lea    rcx,[rsp+0x20]
   14000c7ef:	xor    edx,edx
   14000c7f1:	call   0x14000c724
   14000c7f6:	mov    rax,QWORD PTR [rsp+0x20]
   14000c7fb:	cmp    DWORD PTR [rax+0x10c],0x1
   14000c802:	jle    0x14000c81a
   14000c804:	lea    r8,[rsp+0x20]
   14000c809:	mov    edx,0x4
   14000c80e:	mov    ecx,ebx
   14000c810:	call   0x140014d54
   14000c815:	mov    r11d,eax
   14000c818:	jmp    0x14000c82a
   14000c81a:	mov    rax,QWORD PTR [rax+0x140]
   14000c821:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000c826:	and    r11d,0x4
   14000c82a:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c82f:	je     0x14000c83d
   14000c831:	mov    rax,QWORD PTR [rsp+0x30]
   14000c836:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c83d:	mov    eax,r11d
   14000c840:	add    rsp,0x40
   14000c844:	pop    rbx
   14000c845:	ret    
   14000c846:	int3   
   14000c847:	int3   
   14000c848:	rex push rbx
   14000c84a:	sub    rsp,0x40
   14000c84e:	cmp    DWORD PTR [rip+0x19113],0x0        # 0x140025968
   14000c855:	movsxd rbx,ecx
   14000c858:	jne    0x14000c86c
   14000c85a:	mov    rax,QWORD PTR [rip+0x17b5f]        # 0x1400243c0
   14000c861:	movzx  eax,WORD PTR [rax+rbx*2]
   14000c865:	and    eax,0x80
   14000c86a:	jmp    0x14000c8c5
   14000c86c:	lea    rcx,[rsp+0x20]
   14000c871:	xor    edx,edx
   14000c873:	call   0x14000c724
   14000c878:	mov    rax,QWORD PTR [rsp+0x20]
   14000c87d:	cmp    DWORD PTR [rax+0x10c],0x1
   14000c884:	jle    0x14000c89c
   14000c886:	lea    r8,[rsp+0x20]
   14000c88b:	mov    edx,0x80
   14000c890:	mov    ecx,ebx
   14000c892:	call   0x140014d54
   14000c897:	mov    r11d,eax
   14000c89a:	jmp    0x14000c8af
   14000c89c:	mov    rax,QWORD PTR [rax+0x140]
   14000c8a3:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000c8a8:	and    r11d,0x80
   14000c8af:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c8b4:	je     0x14000c8c2
   14000c8b6:	mov    rax,QWORD PTR [rsp+0x30]
   14000c8bb:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c8c2:	mov    eax,r11d
   14000c8c5:	add    rsp,0x40
   14000c8c9:	pop    rbx
   14000c8ca:	ret    
   14000c8cb:	int3   
   14000c8cc:	rex push rbx
   14000c8ce:	sub    rsp,0x40
   14000c8d2:	cmp    DWORD PTR [rip+0x1908f],0x0        # 0x140025968
   14000c8d9:	movsxd rbx,ecx
   14000c8dc:	jne    0x14000c8ee
   14000c8de:	mov    rax,QWORD PTR [rip+0x17adb]        # 0x1400243c0
   14000c8e5:	movzx  eax,WORD PTR [rax+rbx*2]
   14000c8e9:	and    eax,0x8
   14000c8ec:	jmp    0x14000c944
   14000c8ee:	lea    rcx,[rsp+0x20]
   14000c8f3:	xor    edx,edx
   14000c8f5:	call   0x14000c724
   14000c8fa:	mov    rax,QWORD PTR [rsp+0x20]
   14000c8ff:	cmp    DWORD PTR [rax+0x10c],0x1
   14000c906:	jle    0x14000c91e
   14000c908:	lea    r8,[rsp+0x20]
   14000c90d:	mov    edx,0x8
   14000c912:	mov    ecx,ebx
   14000c914:	call   0x140014d54
   14000c919:	mov    r11d,eax
   14000c91c:	jmp    0x14000c92e
   14000c91e:	mov    rax,QWORD PTR [rax+0x140]
   14000c925:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000c92a:	and    r11d,0x8
   14000c92e:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c933:	je     0x14000c941
   14000c935:	mov    rax,QWORD PTR [rsp+0x30]
   14000c93a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c941:	mov    eax,r11d
   14000c944:	add    rsp,0x40
   14000c948:	pop    rbx
   14000c949:	ret    
   14000c94a:	int3   
   14000c94b:	int3   
   14000c94c:	mov    QWORD PTR [rsp+0x8],rbx
   14000c951:	mov    QWORD PTR [rsp+0x10],rsi
   14000c956:	mov    QWORD PTR [rsp+0x18],rdi
   14000c95b:	push   r12
   14000c95d:	sub    rsp,0x20
   14000c961:	lea    r12,[rip+0x16c98]        # 0x140023600
   14000c968:	xor    esi,esi
   14000c96a:	xor    ebx,ebx
   14000c96c:	mov    rdi,r12
   14000c96f:	cmp    DWORD PTR [rdi+0x8],0x1
   14000c973:	jne    0x14000c99b
   14000c975:	movsxd rax,esi
   14000c978:	mov    edx,0xfa0
   14000c97d:	inc    esi
   14000c97f:	lea    rcx,[rax+rax*4]
   14000c983:	lea    rax,[rip+0x18076]        # 0x140024a00
   14000c98a:	lea    rcx,[rax+rcx*8]
   14000c98e:	mov    QWORD PTR [rdi],rcx
   14000c991:	call   QWORD PTR [rip+0xd7c9]        # 0x14001a160
   14000c997:	test   eax,eax
   14000c999:	je     0x14000c9c1
   14000c99b:	inc    ebx
   14000c99d:	add    rdi,0x10
   14000c9a1:	cmp    ebx,0x24
   14000c9a4:	jl     0x14000c96f
   14000c9a6:	mov    eax,0x1
   14000c9ab:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c9b0:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c9b5:	mov    rdi,QWORD PTR [rsp+0x40]
   14000c9ba:	add    rsp,0x20
   14000c9be:	pop    r12
   14000c9c0:	ret    
   14000c9c1:	movsxd rax,ebx
   14000c9c4:	add    rax,rax
   14000c9c7:	and    QWORD PTR [r12+rax*8],0x0
   14000c9cc:	xor    eax,eax
   14000c9ce:	jmp    0x14000c9ab
   14000c9d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c9d5:	mov    QWORD PTR [rsp+0x10],rbp
   14000c9da:	mov    QWORD PTR [rsp+0x18],rsi
   14000c9df:	push   rdi
   14000c9e0:	sub    rsp,0x20
   14000c9e4:	mov    edi,0x24
   14000c9e9:	lea    rbx,[rip+0x16c10]        # 0x140023600
   14000c9f0:	mov    esi,edi
   14000c9f2:	mov    rbp,QWORD PTR [rbx]
   14000c9f5:	test   rbp,rbp
   14000c9f8:	je     0x14000ca15
   14000c9fa:	cmp    DWORD PTR [rbx+0x8],0x1
   14000c9fe:	je     0x14000ca15
   14000ca00:	mov    rcx,rbp
   14000ca03:	call   QWORD PTR [rip+0xd75f]        # 0x14001a168
   14000ca09:	mov    rcx,rbp
   14000ca0c:	call   0x14000b490
   14000ca11:	and    QWORD PTR [rbx],0x0
   14000ca15:	add    rbx,0x10
   14000ca19:	dec    rsi
   14000ca1c:	jne    0x14000c9f2
   14000ca1e:	lea    rbx,[rip+0x16be3]        # 0x140023608
   14000ca25:	mov    rcx,QWORD PTR [rbx-0x8]
   14000ca29:	test   rcx,rcx
   14000ca2c:	je     0x14000ca39
   14000ca2e:	cmp    DWORD PTR [rbx],0x1
   14000ca31:	jne    0x14000ca39
   14000ca33:	call   QWORD PTR [rip+0xd72f]        # 0x14001a168
   14000ca39:	add    rbx,0x10
   14000ca3d:	dec    rdi
   14000ca40:	jne    0x14000ca25
   14000ca42:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ca47:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ca4c:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ca51:	add    rsp,0x20
   14000ca55:	pop    rdi
   14000ca56:	ret    
   14000ca57:	int3   
   14000ca58:	movsxd rcx,ecx
   14000ca5b:	lea    rax,[rip+0x16b9e]        # 0x140023600
   14000ca62:	add    rcx,rcx
   14000ca65:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000ca69:	rex.W jmp QWORD PTR [rip+0xd688]        # 0x14001a0f8
   14000ca70:	mov    QWORD PTR [rsp+0x8],rbx
   14000ca75:	mov    QWORD PTR [rsp+0x10],rsi
   14000ca7a:	mov    QWORD PTR [rsp+0x18],rdi
   14000ca7f:	push   r13
   14000ca81:	sub    rsp,0x20
   14000ca85:	movsxd rbx,ecx
   14000ca88:	mov    esi,0x1
   14000ca8d:	cmp    QWORD PTR [rip+0x18933],0x0        # 0x1400253c8
   14000ca95:	jne    0x14000caae
   14000ca97:	call   0x14000dbb0
   14000ca9c:	lea    ecx,[rsi+0x1d]
   14000ca9f:	call   0x14000d950
   14000caa4:	mov    ecx,0xff
   14000caa9:	call   0x1400098b8
   14000caae:	mov    rdi,rbx
   14000cab1:	add    rdi,rdi
   14000cab4:	lea    r13,[rip+0x16b45]        # 0x140023600
   14000cabb:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   14000cac1:	je     0x14000cac7
   14000cac3:	mov    eax,esi
   14000cac5:	jmp    0x14000cb40
   14000cac7:	mov    ecx,0x28
   14000cacc:	call   0x140010b50
   14000cad1:	mov    rbx,rax
   14000cad4:	test   rax,rax
   14000cad7:	jne    0x14000cae8
   14000cad9:	call   0x14000bdf0
   14000cade:	mov    DWORD PTR [rax],0xc
   14000cae4:	xor    eax,eax
   14000cae6:	jmp    0x14000cb40
   14000cae8:	mov    ecx,0xa
   14000caed:	call   0x14000cb58
   14000caf2:	nop
   14000caf3:	mov    rcx,rbx
   14000caf6:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   14000cafc:	jne    0x14000cb2b
   14000cafe:	mov    edx,0xfa0
   14000cb03:	call   QWORD PTR [rip+0xd657]        # 0x14001a160
   14000cb09:	test   eax,eax
   14000cb0b:	jne    0x14000cb24
   14000cb0d:	mov    rcx,rbx
   14000cb10:	call   0x14000b490
   14000cb15:	call   0x14000bdf0
   14000cb1a:	mov    DWORD PTR [rax],0xc
   14000cb20:	xor    esi,esi
   14000cb22:	jmp    0x14000cb31
   14000cb24:	mov    QWORD PTR [r13+rdi*8+0x0],rbx
   14000cb29:	jmp    0x14000cb31
   14000cb2b:	call   0x14000b490
   14000cb30:	nop
   14000cb31:	mov    rcx,QWORD PTR [rip+0x16b68]        # 0x1400236a0
   14000cb38:	call   QWORD PTR [rip+0xd5ba]        # 0x14001a0f8
   14000cb3e:	jmp    0x14000cac3
   14000cb40:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cb45:	mov    rsi,QWORD PTR [rsp+0x38]
   14000cb4a:	mov    rdi,QWORD PTR [rsp+0x40]
   14000cb4f:	add    rsp,0x20
   14000cb53:	pop    r13
   14000cb55:	ret    
   14000cb56:	int3   
   14000cb57:	int3   
   14000cb58:	mov    QWORD PTR [rsp+0x8],rbx
   14000cb5d:	push   rdi
   14000cb5e:	sub    rsp,0x20
   14000cb62:	movsxd rbx,ecx
   14000cb65:	lea    rdi,[rip+0x16a94]        # 0x140023600
   14000cb6c:	add    rbx,rbx
   14000cb6f:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14000cb74:	jne    0x14000cb87
   14000cb76:	call   0x14000ca70
   14000cb7b:	test   eax,eax
   14000cb7d:	jne    0x14000cb87
   14000cb7f:	lea    ecx,[rax+0x11]
   14000cb82:	call   0x140009c14
   14000cb87:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14000cb8b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cb90:	add    rsp,0x20
   14000cb94:	pop    rdi
   14000cb95:	rex.W jmp QWORD PTR [rip+0xd554]        # 0x14001a0f0
   14000cb9c:	sub    rsp,0x28
   14000cba0:	call   0x14000d234
   14000cba5:	mov    rcx,QWORD PTR [rax+0xd0]
   14000cbac:	test   rcx,rcx
   14000cbaf:	je     0x14000cbb5
   14000cbb1:	call   rcx
   14000cbb3:	jmp    0x14000cbb5
   14000cbb5:	call   0x140014e3c
   14000cbba:	add    rsp,0x28
   14000cbbe:	ret    
   14000cbbf:	int3   
   14000cbc0:	sub    rsp,0x28
   14000cbc4:	lea    rcx,[rip+0xffffffffffffffd1]        # 0x14000cb9c
   14000cbcb:	call   QWORD PTR [rip+0xd59f]        # 0x14001a170
   14000cbd1:	mov    QWORD PTR [rip+0x18058],rax        # 0x140024c30
   14000cbd8:	add    rsp,0x28
   14000cbdc:	ret    
   14000cbdd:	int3   
   14000cbde:	int3   
   14000cbdf:	int3   
   14000cbe0:	mov    QWORD PTR [rip+0x18051],rcx        # 0x140024c38
   14000cbe7:	mov    QWORD PTR [rip+0x18052],rcx        # 0x140024c40
   14000cbee:	mov    QWORD PTR [rip+0x18053],rcx        # 0x140024c48
   14000cbf5:	mov    QWORD PTR [rip+0x18054],rcx        # 0x140024c50
   14000cbfc:	ret    
   14000cbfd:	int3   
   14000cbfe:	int3   
   14000cbff:	int3   
   14000cc00:	mov    rcx,QWORD PTR [rip+0x18041]        # 0x140024c48
   14000cc07:	rex.W jmp QWORD PTR [rip+0xd4d2]        # 0x14001a0e0
   14000cc0e:	int3   
   14000cc0f:	int3   
   14000cc10:	mov    QWORD PTR [rsp+0x10],rbx
   14000cc15:	mov    QWORD PTR [rsp+0x18],rsi
   14000cc1a:	push   rdi
   14000cc1b:	push   r12
   14000cc1d:	push   r13
   14000cc1f:	push   r14
   14000cc21:	push   r15
   14000cc23:	sub    rsp,0x30
   14000cc27:	mov    ebx,ecx
   14000cc29:	xor    edi,edi
   14000cc2b:	mov    DWORD PTR [rsp+0x60],edi
   14000cc2f:	xor    esi,esi
   14000cc31:	mov    edx,ecx
   14000cc33:	sub    edx,0x2
   14000cc36:	je     0x14000cd01
   14000cc3c:	sub    edx,0x2
   14000cc3f:	je     0x14000cca3
   14000cc41:	sub    edx,0x2
   14000cc44:	je     0x14000cc93
   14000cc46:	sub    edx,0x2
   14000cc49:	je     0x14000cca3
   14000cc4b:	sub    edx,0x3
   14000cc4e:	je     0x14000cca3
   14000cc50:	sub    edx,0x4
   14000cc53:	je     0x14000cc83
   14000cc55:	sub    edx,0x6
   14000cc58:	je     0x14000cc70
   14000cc5a:	dec    edx
   14000cc5c:	je     0x14000cc93
   14000cc5e:	call   0x14000bdf0
   14000cc63:	mov    DWORD PTR [rax],0x16
   14000cc69:	call   0x14000d04c
   14000cc6e:	jmp    0x14000ccb0
   14000cc70:	lea    r12,[rip+0x17fc9]        # 0x140024c40
   14000cc77:	mov    rcx,QWORD PTR [rip+0x17fc2]        # 0x140024c40
   14000cc7e:	jmp    0x14000cd0f
   14000cc83:	lea    r12,[rip+0x17fc6]        # 0x140024c50
   14000cc8a:	mov    rcx,QWORD PTR [rip+0x17fbf]        # 0x140024c50
   14000cc91:	jmp    0x14000cd0f
   14000cc93:	lea    r12,[rip+0x17fae]        # 0x140024c48
   14000cc9a:	mov    rcx,QWORD PTR [rip+0x17fa7]        # 0x140024c48
   14000cca1:	jmp    0x14000cd0f
   14000cca3:	call   0x14000d1b0
   14000cca8:	mov    rsi,rax
   14000ccab:	test   rax,rax
   14000ccae:	jne    0x14000ccb8
   14000ccb0:	or     eax,0xffffffff
   14000ccb3:	jmp    0x14000ce2a
   14000ccb8:	mov    rdx,QWORD PTR [rax+0xa0]
   14000ccbf:	mov    rcx,rdx
   14000ccc2:	movsxd r8,DWORD PTR [rip+0x12a03]        # 0x14001f6cc
   14000ccc9:	cmp    DWORD PTR [rcx+0x4],ebx
   14000cccc:	je     0x14000cce1
   14000ccce:	add    rcx,0x10
   14000ccd2:	mov    rax,r8
   14000ccd5:	shl    rax,0x4
   14000ccd9:	add    rax,rdx
   14000ccdc:	cmp    rcx,rax
   14000ccdf:	jb     0x14000ccc9
   14000cce1:	mov    rax,r8
   14000cce4:	shl    rax,0x4
   14000cce8:	add    rax,rdx
   14000cceb:	cmp    rcx,rax
   14000ccee:	jae    0x14000ccf5
   14000ccf0:	cmp    DWORD PTR [rcx+0x4],ebx
   14000ccf3:	je     0x14000ccf7
   14000ccf5:	xor    ecx,ecx
   14000ccf7:	lea    r12,[rcx+0x8]
   14000ccfb:	mov    r13,QWORD PTR [r12]
   14000ccff:	jmp    0x14000cd21
   14000cd01:	lea    r12,[rip+0x17f30]        # 0x140024c38
   14000cd08:	mov    rcx,QWORD PTR [rip+0x17f29]        # 0x140024c38
   14000cd0f:	mov    edi,0x1
   14000cd14:	mov    DWORD PTR [rsp+0x60],edi
   14000cd18:	call   QWORD PTR [rip+0xd3c2]        # 0x14001a0e0
   14000cd1e:	mov    r13,rax
   14000cd21:	cmp    r13,0x1
   14000cd25:	jne    0x14000cd2e
   14000cd27:	xor    eax,eax
   14000cd29:	jmp    0x14000ce2a
   14000cd2e:	test   r13,r13
   14000cd31:	jne    0x14000cd3d
   14000cd33:	lea    ecx,[r13+0x3]
   14000cd37:	call   0x140009be8
   14000cd3c:	int3   
   14000cd3d:	test   edi,edi
   14000cd3f:	je     0x14000cd49
   14000cd41:	xor    ecx,ecx
   14000cd43:	call   0x14000cb58
   14000cd48:	nop
   14000cd49:	cmp    ebx,0x8
   14000cd4c:	je     0x14000cd5f
   14000cd4e:	cmp    ebx,0xb
   14000cd51:	je     0x14000cd5f
   14000cd53:	cmp    ebx,0x4
   14000cd56:	je     0x14000cd5f
   14000cd58:	mov    r15,QWORD PTR [rsp+0x28]
   14000cd5d:	jmp    0x14000cd8b
   14000cd5f:	mov    r15,QWORD PTR [rsi+0xa8]
   14000cd66:	mov    QWORD PTR [rsp+0x28],r15
   14000cd6b:	and    QWORD PTR [rsi+0xa8],0x0
   14000cd73:	cmp    ebx,0x8
   14000cd76:	jne    0x14000cd8b
   14000cd78:	mov    r14d,DWORD PTR [rsi+0xb0]
   14000cd7f:	mov    DWORD PTR [rsi+0xb0],0x8c
   14000cd89:	jmp    0x14000cd90
   14000cd8b:	mov    r14d,DWORD PTR [rsp+0x60]
   14000cd90:	cmp    ebx,0x8
   14000cd93:	jne    0x14000cdce
   14000cd95:	mov    ecx,DWORD PTR [rip+0x12925]        # 0x14001f6c0
   14000cd9b:	mov    edx,ecx
   14000cd9d:	mov    DWORD PTR [rsp+0x20],ecx
   14000cda1:	mov    eax,DWORD PTR [rip+0x1291d]        # 0x14001f6c4
   14000cda7:	add    ecx,eax
   14000cda9:	cmp    edx,ecx
   14000cdab:	jge    0x14000cdd7
   14000cdad:	movsxd rcx,edx
   14000cdb0:	add    rcx,rcx
   14000cdb3:	mov    rax,QWORD PTR [rsi+0xa0]
   14000cdba:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   14000cdc0:	inc    edx
   14000cdc2:	mov    DWORD PTR [rsp+0x20],edx
   14000cdc6:	mov    ecx,DWORD PTR [rip+0x128f4]        # 0x14001f6c0
   14000cdcc:	jmp    0x14000cda1
   14000cdce:	call   0x14000d0a8
   14000cdd3:	mov    QWORD PTR [r12],rax
   14000cdd7:	test   edi,edi
   14000cdd9:	je     0x14000cde2
   14000cddb:	xor    ecx,ecx
   14000cddd:	call   0x14000ca58
   14000cde2:	mov    edi,0x8
   14000cde7:	cmp    ebx,edi
   14000cde9:	jne    0x14000cdf8
   14000cdeb:	mov    edx,DWORD PTR [rsi+0xb0]
   14000cdf1:	mov    ecx,edi
   14000cdf3:	call   r13
   14000cdf6:	jmp    0x14000cdfd
   14000cdf8:	mov    ecx,ebx
   14000cdfa:	call   r13
   14000cdfd:	cmp    ebx,edi
   14000cdff:	je     0x14000ce0f
   14000ce01:	cmp    ebx,0xb
   14000ce04:	je     0x14000ce0f
   14000ce06:	cmp    ebx,0x4
   14000ce09:	jne    0x14000cd27
   14000ce0f:	mov    QWORD PTR [rsi+0xa8],r15
   14000ce16:	cmp    ebx,edi
   14000ce18:	jne    0x14000cd27
   14000ce1e:	mov    DWORD PTR [rsi+0xb0],r14d
   14000ce25:	jmp    0x14000cd27
   14000ce2a:	mov    rbx,QWORD PTR [rsp+0x68]
   14000ce2f:	mov    rsi,QWORD PTR [rsp+0x70]
   14000ce34:	add    rsp,0x30
   14000ce38:	pop    r15
   14000ce3a:	pop    r14
   14000ce3c:	pop    r13
   14000ce3e:	pop    r12
   14000ce40:	pop    rdi
   14000ce41:	ret    
   14000ce42:	int3   
   14000ce43:	int3   
   14000ce44:	mov    QWORD PTR [rip+0x17e15],rcx        # 0x140024c60
   14000ce4b:	ret    
   14000ce4c:	mov    QWORD PTR [rip+0x17e15],rcx        # 0x140024c68
   14000ce53:	ret    
   14000ce54:	mov    QWORD PTR [rip+0x17e15],rcx        # 0x140024c70
   14000ce5b:	ret    
   14000ce5c:	mov    QWORD PTR [rsp+0x10],rbx
   14000ce61:	mov    QWORD PTR [rsp+0x18],rsi
   14000ce66:	push   rbp
   14000ce67:	push   rdi
   14000ce68:	push   r12
   14000ce6a:	lea    rbp,[rsp-0x4f0]
   14000ce72:	sub    rsp,0x5f0
   14000ce79:	mov    rax,QWORD PTR [rip+0x16240]        # 0x1400230c0
   14000ce80:	xor    rax,rsp
   14000ce83:	mov    QWORD PTR [rbp+0x4e0],rax
   14000ce8a:	mov    edi,r8d
   14000ce8d:	mov    esi,edx
   14000ce8f:	mov    ebx,ecx
   14000ce91:	cmp    ecx,0xffffffff
   14000ce94:	je     0x14000ce9b
   14000ce96:	call   0x140014e7c
   14000ce9b:	and    DWORD PTR [rsp+0x70],0x0
   14000cea0:	lea    rcx,[rsp+0x74]
   14000cea5:	xor    edx,edx
   14000cea7:	mov    r8d,0x94
   14000cead:	call   0x14000a560
   14000ceb2:	lea    r11,[rsp+0x70]
   14000ceb7:	lea    rax,[rbp+0x10]
   14000cebb:	lea    rcx,[rbp+0x10]
   14000cebf:	mov    QWORD PTR [rsp+0x48],r11
   14000cec4:	mov    QWORD PTR [rsp+0x50],rax
   14000cec9:	call   QWORD PTR [rip+0xd2d9]        # 0x14001a1a8
   14000cecf:	mov    r12,QWORD PTR [rbp+0x108]
   14000ced6:	lea    rdx,[rsp+0x40]
   14000cedb:	mov    rcx,r12
   14000cede:	xor    r8d,r8d
   14000cee1:	call   0x1400199c2
   14000cee6:	test   rax,rax
   14000cee9:	je     0x14000cf22
   14000ceeb:	and    QWORD PTR [rsp+0x38],0x0
   14000cef1:	mov    rdx,QWORD PTR [rsp+0x40]
   14000cef6:	lea    rcx,[rsp+0x60]
   14000cefb:	mov    QWORD PTR [rsp+0x30],rcx
   14000cf00:	lea    rcx,[rsp+0x58]
   14000cf05:	mov    r9,rax
   14000cf08:	mov    QWORD PTR [rsp+0x28],rcx
   14000cf0d:	lea    rcx,[rbp+0x10]
   14000cf11:	mov    r8,r12
   14000cf14:	mov    QWORD PTR [rsp+0x20],rcx
   14000cf19:	xor    ecx,ecx
   14000cf1b:	call   0x1400199bc
   14000cf20:	jmp    0x14000cf3e
   14000cf22:	mov    rax,QWORD PTR [rbp+0x508]
   14000cf29:	mov    QWORD PTR [rbp+0x108],rax
   14000cf30:	lea    rax,[rbp+0x508]
   14000cf37:	mov    QWORD PTR [rbp+0xa8],rax
   14000cf3e:	mov    rax,QWORD PTR [rbp+0x508]
   14000cf45:	mov    DWORD PTR [rsp+0x70],esi
   14000cf49:	mov    DWORD PTR [rsp+0x74],edi
   14000cf4d:	mov    QWORD PTR [rbp-0x80],rax
   14000cf51:	call   QWORD PTR [rip+0xd239]        # 0x14001a190
   14000cf57:	xor    ecx,ecx
   14000cf59:	mov    edi,eax
   14000cf5b:	call   QWORD PTR [rip+0xd227]        # 0x14001a188
   14000cf61:	lea    rcx,[rsp+0x48]
   14000cf66:	call   QWORD PTR [rip+0xd214]        # 0x14001a180
   14000cf6c:	test   eax,eax
   14000cf6e:	jne    0x14000cf80
   14000cf70:	test   edi,edi
   14000cf72:	jne    0x14000cf80
   14000cf74:	cmp    ebx,0xffffffff
   14000cf77:	je     0x14000cf80
   14000cf79:	mov    ecx,ebx
   14000cf7b:	call   0x140014e7c
   14000cf80:	mov    rcx,QWORD PTR [rbp+0x4e0]
   14000cf87:	xor    rcx,rsp
   14000cf8a:	call   0x14000a850
   14000cf8f:	lea    r11,[rsp+0x5f0]
   14000cf97:	mov    rbx,QWORD PTR [r11+0x28]
   14000cf9b:	mov    rsi,QWORD PTR [r11+0x30]
   14000cf9f:	mov    rsp,r11
   14000cfa2:	pop    r12
   14000cfa4:	pop    rdi
   14000cfa5:	pop    rbp
   14000cfa6:	ret    
   14000cfa7:	int3   
   14000cfa8:	sub    rsp,0x28
   14000cfac:	mov    r8d,0x1
   14000cfb2:	mov    edx,0xc0000417
   14000cfb7:	lea    ecx,[r8+0x1]
   14000cfbb:	call   0x14000ce5c
   14000cfc0:	call   QWORD PTR [rip+0xd1f2]        # 0x14001a1b8
   14000cfc6:	mov    edx,0xc0000417
   14000cfcb:	mov    rcx,rax
   14000cfce:	add    rsp,0x28
   14000cfd2:	rex.W jmp QWORD PTR [rip+0xd1d7]        # 0x14001a1b0
   14000cfd9:	int3   
   14000cfda:	int3   
   14000cfdb:	int3   
   14000cfdc:	mov    QWORD PTR [rsp+0x8],rbx
   14000cfe1:	mov    QWORD PTR [rsp+0x10],rbp
   14000cfe6:	mov    QWORD PTR [rsp+0x18],rsi
   14000cfeb:	push   rdi
   14000cfec:	sub    rsp,0x30
   14000cff0:	mov    rbp,rcx
   14000cff3:	mov    rcx,QWORD PTR [rip+0x17c76]        # 0x140024c70
   14000cffa:	mov    ebx,r9d
   14000cffd:	mov    rdi,r8
   14000d000:	mov    rsi,rdx
   14000d003:	call   QWORD PTR [rip+0xd0d7]        # 0x14001a0e0
   14000d009:	mov    r9d,ebx
   14000d00c:	mov    r8,rdi
   14000d00f:	mov    rdx,rsi
   14000d012:	mov    rcx,rbp
   14000d015:	test   rax,rax
   14000d018:	je     0x14000d03b
   14000d01a:	mov    r10,QWORD PTR [rsp+0x60]
   14000d01f:	mov    QWORD PTR [rsp+0x20],r10
   14000d024:	call   rax
   14000d026:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d02b:	mov    rbp,QWORD PTR [rsp+0x48]
   14000d030:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d035:	add    rsp,0x30
   14000d039:	pop    rdi
   14000d03a:	ret    
   14000d03b:	mov    rax,QWORD PTR [rsp+0x60]
   14000d040:	mov    QWORD PTR [rsp+0x20],rax
   14000d045:	call   0x14000cfa8
   14000d04a:	int3   
   14000d04b:	int3   
   14000d04c:	sub    rsp,0x38
   14000d050:	and    QWORD PTR [rsp+0x20],0x0
   14000d056:	xor    r9d,r9d
   14000d059:	xor    r8d,r8d
   14000d05c:	xor    edx,edx
   14000d05e:	xor    ecx,ecx
   14000d060:	call   0x14000cfdc
   14000d065:	add    rsp,0x38
   14000d069:	ret    
   14000d06a:	int3   
   14000d06b:	int3   
   14000d06c:	mov    QWORD PTR [rip+0x17c05],rcx        # 0x140024c78
   14000d073:	ret    
   14000d074:	rex push rbx
   14000d076:	sub    rsp,0x20
   14000d07a:	mov    rbx,rcx
   14000d07d:	mov    rcx,QWORD PTR [rip+0x17bf4]        # 0x140024c78
   14000d084:	call   QWORD PTR [rip+0xd056]        # 0x14001a0e0
   14000d08a:	test   rax,rax
   14000d08d:	je     0x14000d09f
   14000d08f:	mov    rcx,rbx
   14000d092:	call   rax
   14000d094:	test   eax,eax
   14000d096:	je     0x14000d09f
   14000d098:	mov    eax,0x1
   14000d09d:	jmp    0x14000d0a1
   14000d09f:	xor    eax,eax
   14000d0a1:	add    rsp,0x20
   14000d0a5:	pop    rbx
   14000d0a6:	ret    
   14000d0a7:	int3   
   14000d0a8:	xor    ecx,ecx
   14000d0aa:	rex.W jmp QWORD PTR [rip+0xd0bf]        # 0x14001a170
   14000d0b1:	int3   
   14000d0b2:	int3   
   14000d0b3:	int3   
   14000d0b4:	rex.W jmp QWORD PTR [rip+0xd105]        # 0x14001a1c0
   14000d0bb:	int3   
   14000d0bc:	mov    eax,DWORD PTR [rip+0x1677e]        # 0x140023840
   14000d0c2:	ret    
   14000d0c3:	int3   
   14000d0c4:	xor    eax,eax
   14000d0c6:	ret    
   14000d0c7:	int3   
   14000d0c8:	rex.W jmp QWORD PTR [rip+0xd0f9]        # 0x14001a1c8
   14000d0cf:	int3   
   14000d0d0:	sub    rsp,0x28
   14000d0d4:	mov    ecx,DWORD PTR [rip+0x16766]        # 0x140023840
   14000d0da:	cmp    ecx,0xffffffff
   14000d0dd:	je     0x14000d0ec
   14000d0df:	call   QWORD PTR [rip+0xd0eb]        # 0x14001a1d0
   14000d0e5:	or     DWORD PTR [rip+0x16754],0xffffffff        # 0x140023840
   14000d0ec:	add    rsp,0x28
   14000d0f0:	jmp    0x14000c9d0
   14000d0f5:	int3   
   14000d0f6:	int3   
   14000d0f7:	int3   
   14000d0f8:	mov    QWORD PTR [rsp+0x8],rbx
   14000d0fd:	push   rdi
   14000d0fe:	sub    rsp,0x20
   14000d102:	mov    rdi,rdx
   14000d105:	mov    rbx,rcx
   14000d108:	lea    rax,[rip+0x124f1]        # 0x14001f600
   14000d10f:	mov    QWORD PTR [rcx+0xa0],rax
   14000d116:	and    DWORD PTR [rcx+0x10],0x0
   14000d11a:	mov    DWORD PTR [rcx+0x1c],0x1
   14000d121:	mov    DWORD PTR [rcx+0xc8],0x1
   14000d12b:	mov    BYTE PTR [rcx+0x174],0x43
   14000d132:	mov    BYTE PTR [rcx+0x1f7],0x43
   14000d139:	lea    rax,[rip+0x16940]        # 0x140023a80
   14000d140:	mov    QWORD PTR [rcx+0xb8],rax
   14000d147:	mov    ecx,0xd
   14000d14c:	call   0x14000cb58
   14000d151:	nop
   14000d152:	mov    rax,QWORD PTR [rbx+0xb8]
   14000d159:	lock inc DWORD PTR [rax]
   14000d15c:	mov    ecx,0xd
   14000d161:	call   0x14000ca58
   14000d166:	mov    ecx,0xc
   14000d16b:	call   0x14000cb58
   14000d170:	nop
   14000d171:	mov    QWORD PTR [rbx+0xc0],rdi
   14000d178:	test   rdi,rdi
   14000d17b:	jne    0x14000d18b
   14000d17d:	mov    rax,QWORD PTR [rip+0x1725c]        # 0x1400243e0
   14000d184:	mov    QWORD PTR [rbx+0xc0],rax
   14000d18b:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000d192:	call   0x1400149d8
   14000d197:	nop
   14000d198:	mov    ecx,0xc
   14000d19d:	call   0x14000ca58
   14000d1a2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d1a7:	add    rsp,0x20
   14000d1ab:	pop    rdi
   14000d1ac:	ret    
   14000d1ad:	int3   
   14000d1ae:	int3   
   14000d1af:	int3   
   14000d1b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d1b5:	push   rdi
   14000d1b6:	sub    rsp,0x20
   14000d1ba:	call   QWORD PTR [rip+0xceb0]        # 0x14001a070
   14000d1c0:	mov    ecx,DWORD PTR [rip+0x1667a]        # 0x140023840
   14000d1c6:	mov    edi,eax
   14000d1c8:	call   QWORD PTR [rip+0xcff2]        # 0x14001a1c0
   14000d1ce:	mov    rbx,rax
   14000d1d1:	test   rax,rax
   14000d1d4:	jne    0x14000d21e
   14000d1d6:	lea    ecx,[rax+0x1]
   14000d1d9:	mov    edx,0x2c8
   14000d1de:	call   0x140010bd0
   14000d1e3:	mov    rbx,rax
   14000d1e6:	test   rax,rax
   14000d1e9:	je     0x14000d21e
   14000d1eb:	mov    ecx,DWORD PTR [rip+0x1664f]        # 0x140023840
   14000d1f1:	mov    rdx,rax
   14000d1f4:	call   QWORD PTR [rip+0xcfce]        # 0x14001a1c8
   14000d1fa:	mov    rcx,rbx
   14000d1fd:	test   eax,eax
   14000d1ff:	je     0x14000d217
   14000d201:	xor    edx,edx
   14000d203:	call   0x14000d0f8
   14000d208:	call   QWORD PTR [rip+0xcf42]        # 0x14001a150
   14000d20e:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000d213:	mov    DWORD PTR [rbx],eax
   14000d215:	jmp    0x14000d21e
   14000d217:	call   0x14000b490
   14000d21c:	xor    ebx,ebx
   14000d21e:	mov    ecx,edi
   14000d220:	call   QWORD PTR [rip+0xcfb2]        # 0x14001a1d8
   14000d226:	mov    rax,rbx
   14000d229:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d22e:	add    rsp,0x20
   14000d232:	pop    rdi
   14000d233:	ret    
   14000d234:	rex push rbx
   14000d236:	sub    rsp,0x20
   14000d23a:	call   0x14000d1b0
   14000d23f:	mov    rbx,rax
   14000d242:	test   rax,rax
   14000d245:	jne    0x14000d24f
   14000d247:	lea    ecx,[rax+0x10]
   14000d24a:	call   0x140009c14
   14000d24f:	mov    rax,rbx
   14000d252:	add    rsp,0x20
   14000d256:	pop    rbx
   14000d257:	ret    
   14000d258:	test   rcx,rcx
   14000d25b:	je     0x14000d38a
   14000d261:	mov    QWORD PTR [rsp+0x10],rbx
   14000d266:	push   rdi
   14000d267:	sub    rsp,0x20
   14000d26b:	mov    rbx,rcx
   14000d26e:	mov    rcx,QWORD PTR [rcx+0x38]
   14000d272:	test   rcx,rcx
   14000d275:	je     0x14000d27c
   14000d277:	call   0x14000b490
   14000d27c:	mov    rcx,QWORD PTR [rbx+0x48]
   14000d280:	test   rcx,rcx
   14000d283:	je     0x14000d28a
   14000d285:	call   0x14000b490
   14000d28a:	mov    rcx,QWORD PTR [rbx+0x58]
   14000d28e:	test   rcx,rcx
   14000d291:	je     0x14000d298
   14000d293:	call   0x14000b490
   14000d298:	mov    rcx,QWORD PTR [rbx+0x68]
   14000d29c:	test   rcx,rcx
   14000d29f:	je     0x14000d2a6
   14000d2a1:	call   0x14000b490
   14000d2a6:	mov    rcx,QWORD PTR [rbx+0x70]
   14000d2aa:	test   rcx,rcx
   14000d2ad:	je     0x14000d2b4
   14000d2af:	call   0x14000b490
   14000d2b4:	mov    rcx,QWORD PTR [rbx+0x78]
   14000d2b8:	test   rcx,rcx
   14000d2bb:	je     0x14000d2c2
   14000d2bd:	call   0x14000b490
   14000d2c2:	mov    rcx,QWORD PTR [rbx+0x80]
   14000d2c9:	test   rcx,rcx
   14000d2cc:	je     0x14000d2d3
   14000d2ce:	call   0x14000b490
   14000d2d3:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000d2da:	lea    rax,[rip+0x1231f]        # 0x14001f600
   14000d2e1:	cmp    rcx,rax
   14000d2e4:	je     0x14000d2eb
   14000d2e6:	call   0x14000b490
   14000d2eb:	mov    edi,0xd
   14000d2f0:	mov    ecx,edi
   14000d2f2:	call   0x14000cb58
   14000d2f7:	nop
   14000d2f8:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000d2ff:	mov    QWORD PTR [rsp+0x30],rcx
   14000d304:	test   rcx,rcx
   14000d307:	je     0x14000d325
   14000d309:	lock dec DWORD PTR [rcx]
   14000d30c:	jne    0x14000d325
   14000d30e:	lea    rax,[rip+0x1676b]        # 0x140023a80
   14000d315:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d31a:	cmp    rcx,rax
   14000d31d:	je     0x14000d325
   14000d31f:	call   0x14000b490
   14000d324:	nop
   14000d325:	mov    ecx,edi
   14000d327:	call   0x14000ca58
   14000d32c:	mov    ecx,0xc
   14000d331:	call   0x14000cb58
   14000d336:	nop
   14000d337:	mov    rdi,QWORD PTR [rbx+0xc0]
   14000d33e:	test   rdi,rdi
   14000d341:	je     0x14000d36e
   14000d343:	mov    rcx,rdi
   14000d346:	call   0x140014a64
   14000d34b:	cmp    rdi,QWORD PTR [rip+0x1708e]        # 0x1400243e0
   14000d352:	je     0x14000d36e
   14000d354:	lea    rax,[rip+0x16f25]        # 0x140024280
   14000d35b:	cmp    rdi,rax
   14000d35e:	je     0x14000d36e
   14000d360:	cmp    DWORD PTR [rdi],0x0
   14000d363:	jne    0x14000d36e
   14000d365:	mov    rcx,rdi
   14000d368:	call   0x140014b08
   14000d36d:	nop
   14000d36e:	mov    ecx,0xc
   14000d373:	call   0x14000ca58
   14000d378:	mov    rcx,rbx
   14000d37b:	call   0x14000b490
   14000d380:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d385:	add    rsp,0x20
   14000d389:	pop    rdi
   14000d38a:	ret    
   14000d38b:	int3   
   14000d38c:	rex push rbx
   14000d38e:	sub    rsp,0x20
   14000d392:	mov    rbx,rcx
   14000d395:	mov    ecx,DWORD PTR [rip+0x164a5]        # 0x140023840
   14000d39b:	cmp    ecx,0xffffffff
   14000d39e:	je     0x14000d3c4
   14000d3a0:	test   rbx,rbx
   14000d3a3:	jne    0x14000d3b4
   14000d3a5:	call   QWORD PTR [rip+0xce15]        # 0x14001a1c0
   14000d3ab:	mov    ecx,DWORD PTR [rip+0x1648f]        # 0x140023840
   14000d3b1:	mov    rbx,rax
   14000d3b4:	xor    edx,edx
   14000d3b6:	call   QWORD PTR [rip+0xce0c]        # 0x14001a1c8
   14000d3bc:	mov    rcx,rbx
   14000d3bf:	call   0x14000d258
   14000d3c4:	add    rsp,0x20
   14000d3c8:	pop    rbx
   14000d3c9:	ret    
   14000d3ca:	int3   
   14000d3cb:	int3   
   14000d3cc:	rex push rbx
   14000d3ce:	sub    rsp,0x20
   14000d3d2:	call   0x1400098e8
   14000d3d7:	call   0x14000c94c
   14000d3dc:	test   eax,eax
   14000d3de:	je     0x14000d440
   14000d3e0:	lea    rcx,[rip+0xfffffffffffffe71]        # 0x14000d258
   14000d3e7:	call   QWORD PTR [rip+0xcdf3]        # 0x14001a1e0
   14000d3ed:	mov    DWORD PTR [rip+0x1644d],eax        # 0x140023840
   14000d3f3:	cmp    eax,0xffffffff
   14000d3f6:	je     0x14000d440
   14000d3f8:	mov    edx,0x2c8
   14000d3fd:	mov    ecx,0x1
   14000d402:	call   0x140010bd0
   14000d407:	mov    rbx,rax
   14000d40a:	test   rax,rax
   14000d40d:	je     0x14000d440
   14000d40f:	mov    ecx,DWORD PTR [rip+0x1642b]        # 0x140023840
   14000d415:	mov    rdx,rax
   14000d418:	call   QWORD PTR [rip+0xcdaa]        # 0x14001a1c8
   14000d41e:	test   eax,eax
   14000d420:	je     0x14000d440
   14000d422:	xor    edx,edx
   14000d424:	mov    rcx,rbx
   14000d427:	call   0x14000d0f8
   14000d42c:	call   QWORD PTR [rip+0xcd1e]        # 0x14001a150
   14000d432:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000d437:	mov    DWORD PTR [rbx],eax
   14000d439:	mov    eax,0x1
   14000d43e:	jmp    0x14000d447
   14000d440:	call   0x14000d0d0
   14000d445:	xor    eax,eax
   14000d447:	add    rsp,0x20
   14000d44b:	pop    rbx
   14000d44c:	ret    
   14000d44d:	int3   
   14000d44e:	int3   
   14000d44f:	int3   
   14000d450:	rex push rbx
   14000d452:	sub    rsp,0x20
   14000d456:	mov    edx,0x8
   14000d45b:	lea    ecx,[rdx+0x18]
   14000d45e:	call   0x140010bd0
   14000d463:	mov    rcx,rax
   14000d466:	mov    rbx,rax
   14000d469:	call   QWORD PTR [rip+0xcd01]        # 0x14001a170
   14000d46f:	mov    QWORD PTR [rip+0x1984a],rax        # 0x140026cc0
   14000d476:	mov    QWORD PTR [rip+0x1983b],rax        # 0x140026cb8
   14000d47d:	test   rbx,rbx
   14000d480:	jne    0x14000d487
   14000d482:	lea    eax,[rbx+0x18]
   14000d485:	jmp    0x14000d48d
   14000d487:	and    QWORD PTR [rbx],0x0
   14000d48b:	xor    eax,eax
   14000d48d:	add    rsp,0x20
   14000d491:	pop    rbx
   14000d492:	ret    
   14000d493:	int3   
   14000d494:	mov    QWORD PTR [rsp+0x8],rbx
   14000d499:	mov    QWORD PTR [rsp+0x10],rsi
   14000d49e:	mov    QWORD PTR [rsp+0x18],rdi
   14000d4a3:	push   r12
   14000d4a5:	push   r13
   14000d4a7:	push   r14
   14000d4a9:	sub    rsp,0x20
   14000d4ad:	mov    r14,rcx
   14000d4b0:	call   0x1400098d0
   14000d4b5:	nop
   14000d4b6:	mov    rcx,QWORD PTR [rip+0x19803]        # 0x140026cc0
   14000d4bd:	call   QWORD PTR [rip+0xcc1d]        # 0x14001a0e0
   14000d4c3:	mov    r12,rax
   14000d4c6:	mov    rcx,QWORD PTR [rip+0x197eb]        # 0x140026cb8
   14000d4cd:	call   QWORD PTR [rip+0xcc0d]        # 0x14001a0e0
   14000d4d3:	mov    rbx,rax
   14000d4d6:	cmp    rax,r12
   14000d4d9:	jb     0x14000d57a
   14000d4df:	mov    rdi,rax
   14000d4e2:	sub    rdi,r12
   14000d4e5:	lea    r13,[rdi+0x8]
   14000d4e9:	cmp    r13,0x8
   14000d4ed:	jb     0x14000d57a
   14000d4f3:	mov    rcx,r12
   14000d4f6:	call   0x140014e84
   14000d4fb:	mov    rsi,rax
   14000d4fe:	cmp    rax,r13
   14000d501:	jae    0x14000d558
   14000d503:	mov    edx,0x1000
   14000d508:	cmp    rax,rdx
   14000d50b:	cmovb  rdx,rax
   14000d50f:	add    rdx,rax
   14000d512:	cmp    rdx,rax
   14000d515:	jb     0x14000d528
   14000d517:	mov    rcx,r12
   14000d51a:	call   0x140010c54
   14000d51f:	xor    ebx,ebx
   14000d521:	test   rax,rax
   14000d524:	jne    0x14000d540
   14000d526:	jmp    0x14000d52a
   14000d528:	xor    ebx,ebx
   14000d52a:	lea    rdx,[rsi+0x20]
   14000d52e:	cmp    rdx,rsi
   14000d531:	jb     0x14000d57c
   14000d533:	mov    rcx,r12
   14000d536:	call   0x140010c54
   14000d53b:	test   rax,rax
   14000d53e:	je     0x14000d57c
   14000d540:	sar    rdi,0x3
   14000d544:	lea    rbx,[rax+rdi*8]
   14000d548:	mov    rcx,rax
   14000d54b:	call   QWORD PTR [rip+0xcc1f]        # 0x14001a170
   14000d551:	mov    QWORD PTR [rip+0x19768],rax        # 0x140026cc0
   14000d558:	mov    rcx,r14
   14000d55b:	call   QWORD PTR [rip+0xcc0f]        # 0x14001a170
   14000d561:	mov    QWORD PTR [rbx],rax
   14000d564:	lea    rcx,[rbx+0x8]
   14000d568:	call   QWORD PTR [rip+0xcc02]        # 0x14001a170
   14000d56e:	mov    QWORD PTR [rip+0x19743],rax        # 0x140026cb8
   14000d575:	mov    rbx,r14
   14000d578:	jmp    0x14000d57c
   14000d57a:	xor    ebx,ebx
   14000d57c:	call   0x1400098dc
   14000d581:	mov    rax,rbx
   14000d584:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d589:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d58e:	mov    rdi,QWORD PTR [rsp+0x50]
   14000d593:	add    rsp,0x20
   14000d597:	pop    r14
   14000d599:	pop    r13
   14000d59b:	pop    r12
   14000d59d:	ret    
   14000d59e:	int3   
   14000d59f:	int3   
   14000d5a0:	sub    rsp,0x28
   14000d5a4:	call   0x14000d494
   14000d5a9:	neg    rax
   14000d5ac:	sbb    eax,eax
   14000d5ae:	neg    eax
   14000d5b0:	dec    eax
   14000d5b2:	add    rsp,0x28
   14000d5b6:	ret    
   14000d5b7:	int3   
   14000d5b8:	mov    QWORD PTR [rsp+0x8],rbx
   14000d5bd:	push   rdi
   14000d5be:	sub    rsp,0x20
   14000d5c2:	lea    rbx,[rip+0x132df]        # 0x1400208a8
   14000d5c9:	lea    rdi,[rip+0x132d8]        # 0x1400208a8
   14000d5d0:	jmp    0x14000d5e0
   14000d5d2:	mov    rax,QWORD PTR [rbx]
   14000d5d5:	test   rax,rax
   14000d5d8:	je     0x14000d5dc
   14000d5da:	call   rax
   14000d5dc:	add    rbx,0x8
   14000d5e0:	cmp    rbx,rdi
   14000d5e3:	jb     0x14000d5d2
   14000d5e5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d5ea:	add    rsp,0x20
   14000d5ee:	pop    rdi
   14000d5ef:	ret    
   14000d5f0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d5f5:	push   rdi
   14000d5f6:	sub    rsp,0x20
   14000d5fa:	lea    rbx,[rip+0x132b7]        # 0x1400208b8
   14000d601:	lea    rdi,[rip+0x132b0]        # 0x1400208b8
   14000d608:	jmp    0x14000d618
   14000d60a:	mov    rax,QWORD PTR [rbx]
   14000d60d:	test   rax,rax
   14000d610:	je     0x14000d614
   14000d612:	call   rax
   14000d614:	add    rbx,0x8
   14000d618:	cmp    rbx,rdi
   14000d61b:	jb     0x14000d60a
   14000d61d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d622:	add    rsp,0x20
   14000d626:	pop    rdi
   14000d627:	ret    
   14000d628:	mov    QWORD PTR [rsp+0x8],rbx
   14000d62d:	push   rdi
   14000d62e:	sub    rsp,0x20
   14000d632:	lea    rbx,[rip+0x16217]        # 0x140023850
   14000d639:	mov    edi,0xa
   14000d63e:	mov    rcx,QWORD PTR [rbx]
   14000d641:	call   QWORD PTR [rip+0xcb29]        # 0x14001a170
   14000d647:	mov    QWORD PTR [rbx],rax
   14000d64a:	add    rbx,0x8
   14000d64e:	dec    rdi
   14000d651:	jne    0x14000d63e
   14000d653:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d658:	add    rsp,0x20
   14000d65c:	pop    rdi
   14000d65d:	ret    
   14000d65e:	int3   
   14000d65f:	int3   
   14000d660:	mov    rax,rcx
   14000d663:	mov    ecx,0x5a4d
   14000d668:	cmp    WORD PTR [rax],cx
   14000d66b:	je     0x14000d670
   14000d66d:	xor    eax,eax
   14000d66f:	ret    
   14000d670:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000d674:	add    rcx,rax
   14000d677:	xor    eax,eax
   14000d679:	cmp    DWORD PTR [rcx],0x4550
   14000d67f:	jne    0x14000d68d
   14000d681:	mov    edx,0x20b
   14000d686:	cmp    WORD PTR [rcx+0x18],dx
   14000d68a:	sete   al
   14000d68d:	repz ret 
   14000d68f:	int3   
   14000d690:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000d694:	xor    r9d,r9d
   14000d697:	mov    r10,rdx
   14000d69a:	add    r8,rcx
   14000d69d:	movzx  eax,WORD PTR [r8+0x14]
   14000d6a2:	movzx  r11d,WORD PTR [r8+0x6]
   14000d6a7:	lea    rcx,[rax+r8*1+0x18]
   14000d6ac:	test   r11d,r11d
   14000d6af:	je     0x14000d6cf
   14000d6b1:	mov    edx,DWORD PTR [rcx+0xc]
   14000d6b4:	cmp    r10,rdx
   14000d6b7:	jb     0x14000d6c3
   14000d6b9:	mov    eax,DWORD PTR [rcx+0x8]
   14000d6bc:	add    eax,edx
   14000d6be:	cmp    r10,rax
   14000d6c1:	jb     0x14000d6d2
   14000d6c3:	inc    r9d
   14000d6c6:	add    rcx,0x28
   14000d6ca:	cmp    r9d,r11d
   14000d6cd:	jb     0x14000d6b1
   14000d6cf:	xor    eax,eax
   14000d6d1:	ret    
   14000d6d2:	mov    rax,rcx
   14000d6d5:	ret    
   14000d6d6:	int3   
   14000d6d7:	int3   
   14000d6d8:	int3   
   14000d6d9:	int3   
   14000d6da:	int3   
   14000d6db:	int3   
   14000d6dc:	int3   
   14000d6dd:	int3   
   14000d6de:	int3   
   14000d6df:	int3   
   14000d6e0:	sub    rsp,0x28
   14000d6e4:	mov    r8,rcx
   14000d6e7:	lea    r9,[rip+0xffffffffffff2912]        # 0x140000000
   14000d6ee:	mov    rcx,r9
   14000d6f1:	call   0x14000d660
   14000d6f6:	test   eax,eax
   14000d6f8:	je     0x14000d71c
   14000d6fa:	sub    r8,r9
   14000d6fd:	mov    rdx,r8
   14000d700:	mov    rcx,r9
   14000d703:	call   0x14000d690
   14000d708:	test   rax,rax
   14000d70b:	je     0x14000d71c
   14000d70d:	mov    eax,DWORD PTR [rax+0x24]
   14000d710:	shr    eax,0x1f
   14000d713:	not    eax
   14000d715:	and    eax,0x1
   14000d718:	jmp    0x14000d71c
   14000d71a:	xor    eax,eax
   14000d71c:	add    rsp,0x28
   14000d720:	ret    
   14000d721:	int3   
   14000d722:	int3   
   14000d723:	int3   
   14000d724:	mov    r11,rsp
   14000d727:	mov    QWORD PTR [r11+0x8],rbx
   14000d72b:	mov    QWORD PTR [r11+0x18],rbp
   14000d72f:	mov    QWORD PTR [r11+0x20],rsi
   14000d733:	mov    QWORD PTR [r11+0x10],rdx
   14000d737:	push   rdi
   14000d738:	push   r12
   14000d73a:	push   r13
   14000d73c:	push   r14
   14000d73e:	push   r15
   14000d740:	sub    rsp,0x40
   14000d744:	mov    r15,QWORD PTR [r9+0x8]
   14000d748:	mov    r14,QWORD PTR [r9]
   14000d74b:	mov    eax,DWORD PTR [rcx+0x4]
   14000d74e:	mov    rdi,QWORD PTR [r9+0x38]
   14000d752:	sub    r14,r15
   14000d755:	mov    r12,r9
   14000d758:	mov    r13,rdx
   14000d75b:	mov    rbp,rcx
   14000d75e:	test   al,0x66
   14000d760:	jne    0x14000d853
   14000d766:	movsxd rsi,DWORD PTR [r9+0x48]
   14000d76a:	mov    QWORD PTR [r11-0x38],rcx
   14000d76e:	mov    QWORD PTR [r11-0x30],r8
   14000d772:	mov    rax,rsi
   14000d775:	cmp    esi,DWORD PTR [rdi]
   14000d777:	jae    0x14000d8fe
   14000d77d:	add    rax,rax
   14000d780:	lea    rbx,[rdi+rax*8+0xc]
   14000d785:	mov    eax,DWORD PTR [rbx-0x8]
   14000d788:	cmp    r14,rax
   14000d78b:	jb     0x14000d839
   14000d791:	mov    eax,DWORD PTR [rbx-0x4]
   14000d794:	cmp    r14,rax
   14000d797:	jae    0x14000d839
   14000d79d:	cmp    DWORD PTR [rbx+0x4],0x0
   14000d7a1:	je     0x14000d839
   14000d7a7:	cmp    DWORD PTR [rbx],0x1
   14000d7aa:	je     0x14000d7c5
   14000d7ac:	mov    eax,DWORD PTR [rbx]
   14000d7ae:	lea    rcx,[rsp+0x30]
   14000d7b3:	mov    rdx,r13
   14000d7b6:	add    rax,r15
   14000d7b9:	call   rax
   14000d7bb:	test   eax,eax
   14000d7bd:	js     0x14000d84c
   14000d7c3:	jle    0x14000d839
   14000d7c5:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   14000d7cc:	jne    0x14000d7f6
   14000d7ce:	cmp    QWORD PTR [rip+0x184aa],0x0        # 0x140025c80
   14000d7d6:	je     0x14000d7f6
   14000d7d8:	lea    rcx,[rip+0x184a1]        # 0x140025c80
   14000d7df:	call   0x14000d6e0
   14000d7e4:	test   eax,eax
   14000d7e6:	je     0x14000d7f6
   14000d7e8:	mov    edx,0x1
   14000d7ed:	mov    rcx,rbp
   14000d7f0:	call   QWORD PTR [rip+0x1848a]        # 0x140025c80
   14000d7f6:	mov    ecx,DWORD PTR [rbx+0x4]
   14000d7f9:	mov    r8d,0x1
   14000d7ff:	mov    rdx,r13
   14000d802:	add    rcx,r15
   14000d805:	call   0x140011570
   14000d80a:	mov    rax,QWORD PTR [r12+0x40]
   14000d80f:	mov    edx,DWORD PTR [rbx+0x4]
   14000d812:	movsxd r9,DWORD PTR [rbp+0x0]
   14000d816:	mov    QWORD PTR [rsp+0x28],rax
   14000d81b:	mov    rax,QWORD PTR [r12+0x28]
   14000d820:	add    rdx,r15
   14000d823:	mov    r8,rbp
   14000d826:	mov    rcx,r13
   14000d829:	mov    QWORD PTR [rsp+0x20],rax
   14000d82e:	call   QWORD PTR [rip+0xc9b4]        # 0x14001a1e8
   14000d834:	call   0x1400115a0
   14000d839:	inc    esi
   14000d83b:	add    rbx,0x10
   14000d83f:	cmp    esi,DWORD PTR [rdi]
   14000d841:	jae    0x14000d8fe
   14000d847:	jmp    0x14000d785
   14000d84c:	xor    eax,eax
   14000d84e:	jmp    0x14000d903
   14000d853:	mov    r8,QWORD PTR [r9+0x20]
   14000d857:	xor    ebp,ebp
   14000d859:	xor    r13d,r13d
   14000d85c:	sub    r8,r15
   14000d85f:	test   al,0x20
   14000d861:	je     0x14000d89e
   14000d863:	xor    edx,edx
   14000d865:	cmp    DWORD PTR [rdi],edx
   14000d867:	jbe    0x14000d89e
   14000d869:	lea    rcx,[rdi+0x8]
   14000d86d:	mov    eax,DWORD PTR [rcx-0x4]
   14000d870:	cmp    r8,rax
   14000d873:	jb     0x14000d87c
   14000d875:	mov    eax,DWORD PTR [rcx]
   14000d877:	cmp    r8,rax
   14000d87a:	jbe    0x14000d888
   14000d87c:	inc    edx
   14000d87e:	add    rcx,0x10
   14000d882:	cmp    edx,DWORD PTR [rdi]
   14000d884:	jae    0x14000d89e
   14000d886:	jmp    0x14000d86d
   14000d888:	mov    eax,edx
   14000d88a:	add    rax,rax
   14000d88d:	mov    ecx,DWORD PTR [rdi+rax*8+0x10]
   14000d891:	test   ecx,ecx
   14000d893:	jne    0x14000d89b
   14000d895:	mov    ebp,DWORD PTR [rdi+rax*8+0xc]
   14000d899:	jmp    0x14000d89e
   14000d89b:	mov    r13d,ecx
   14000d89e:	movsxd rsi,DWORD PTR [r9+0x48]
   14000d8a2:	mov    rbx,rsi
   14000d8a5:	cmp    esi,DWORD PTR [rdi]
   14000d8a7:	jae    0x14000d8fe
   14000d8a9:	inc    rbx
   14000d8ac:	shl    rbx,0x4
   14000d8b0:	add    rbx,rdi
   14000d8b3:	mov    eax,DWORD PTR [rbx-0xc]
   14000d8b6:	cmp    r14,rax
   14000d8b9:	jb     0x14000d8f4
   14000d8bb:	mov    eax,DWORD PTR [rbx-0x8]
   14000d8be:	cmp    r14,rax
   14000d8c1:	jae    0x14000d8f4
   14000d8c3:	test   r13d,r13d
   14000d8c6:	je     0x14000d8cd
   14000d8c8:	cmp    r13d,DWORD PTR [rbx]
   14000d8cb:	je     0x14000d8fe
   14000d8cd:	test   ebp,ebp
   14000d8cf:	je     0x14000d8d6
   14000d8d1:	cmp    ebp,DWORD PTR [rbx-0x4]
   14000d8d4:	je     0x14000d8fe
   14000d8d6:	cmp    DWORD PTR [rbx],0x0
   14000d8d9:	jne    0x14000d8f4
   14000d8db:	mov    rdx,QWORD PTR [rsp+0x78]
   14000d8e0:	lea    eax,[rsi+0x1]
   14000d8e3:	mov    cl,0x1
   14000d8e5:	mov    DWORD PTR [r12+0x48],eax
   14000d8ea:	mov    r8d,DWORD PTR [rbx-0x4]
   14000d8ee:	add    r8,r15
   14000d8f1:	call   r8
   14000d8f4:	inc    esi
   14000d8f6:	add    rbx,0x10
   14000d8fa:	cmp    esi,DWORD PTR [rdi]
   14000d8fc:	jb     0x14000d8b3
   14000d8fe:	mov    eax,0x1
   14000d903:	lea    r11,[rsp+0x40]
   14000d908:	mov    rbx,QWORD PTR [r11+0x30]
   14000d90c:	mov    rbp,QWORD PTR [r11+0x40]
   14000d910:	mov    rsi,QWORD PTR [r11+0x48]
   14000d914:	mov    rsp,r11
   14000d917:	pop    r15
   14000d919:	pop    r14
   14000d91b:	pop    r13
   14000d91d:	pop    r12
   14000d91f:	pop    rdi
   14000d920:	ret    
   14000d921:	int3   
   14000d922:	int3   
   14000d923:	int3   
   14000d924:	lea    r8,[rip+0x11a35]        # 0x14001f360
   14000d92b:	xor    eax,eax
   14000d92d:	mov    rdx,r8
   14000d930:	cmp    ecx,DWORD PTR [rdx]
   14000d932:	je     0x14000d942
   14000d934:	inc    eax
   14000d936:	add    rdx,0x10
   14000d93a:	cmp    eax,0x16
   14000d93d:	jb     0x14000d930
   14000d93f:	xor    eax,eax
   14000d941:	ret    
   14000d942:	cdqe   
   14000d944:	add    rax,rax
   14000d947:	mov    rax,QWORD PTR [r8+rax*8+0x8]
   14000d94c:	ret    
   14000d94d:	int3   
   14000d94e:	int3   
   14000d94f:	int3   
   14000d950:	mov    QWORD PTR [rsp+0x10],rbx
   14000d955:	mov    QWORD PTR [rsp+0x18],rbp
   14000d95a:	mov    QWORD PTR [rsp+0x20],rsi
   14000d95f:	push   rdi
   14000d960:	push   r12
   14000d962:	push   r13
   14000d964:	sub    rsp,0x250
   14000d96b:	mov    rax,QWORD PTR [rip+0x1574e]        # 0x1400230c0
   14000d972:	xor    rax,rsp
   14000d975:	mov    QWORD PTR [rsp+0x240],rax
   14000d97d:	mov    edi,ecx
   14000d97f:	call   0x14000d924
   14000d984:	xor    esi,esi
   14000d986:	mov    rbx,rax
   14000d989:	test   rax,rax
   14000d98c:	je     0x14000db80
   14000d992:	lea    ecx,[rsi+0x3]
   14000d995:	call   0x140015298
   14000d99a:	cmp    eax,0x1
   14000d99d:	je     0x14000db18
   14000d9a3:	lea    ecx,[rsi+0x3]
   14000d9a6:	call   0x140015298
   14000d9ab:	test   eax,eax
   14000d9ad:	jne    0x14000d9bc
   14000d9af:	cmp    DWORD PTR [rip+0x15702],0x1        # 0x1400230b8
   14000d9b6:	je     0x14000db18
   14000d9bc:	cmp    edi,0xfc
   14000d9c2:	je     0x14000db80
   14000d9c8:	lea    rbp,[rip+0x172b1]        # 0x140024c80
   14000d9cf:	mov    r12d,0x314
   14000d9d5:	lea    r8,[rip+0x11b74]        # 0x14001f550
   14000d9dc:	mov    rcx,rbp
   14000d9df:	mov    edx,r12d
   14000d9e2:	call   0x14001522c
   14000d9e7:	xor    ecx,ecx
   14000d9e9:	test   eax,eax
   14000d9eb:	jne    0x14000db05
   14000d9f1:	lea    r13,[rip+0x172ba]        # 0x140024cb2
   14000d9f8:	mov    r8d,0x104
   14000d9fe:	mov    WORD PTR [rip+0x174b5],si        # 0x140024eba
   14000da05:	mov    rdx,r13
   14000da08:	call   QWORD PTR [rip+0xc7f2]        # 0x14001a200
   14000da0e:	lea    edi,[r12-0x19]
   14000da13:	test   eax,eax
   14000da15:	jne    0x14000da41
   14000da17:	lea    r8,[rip+0x11b02]        # 0x14001f520
   14000da1e:	mov    edx,edi
   14000da20:	mov    rcx,r13
   14000da23:	call   0x14001522c
   14000da28:	test   eax,eax
   14000da2a:	je     0x14000da41
   14000da2c:	xor    r9d,r9d
   14000da2f:	xor    r8d,r8d
   14000da32:	xor    edx,edx
   14000da34:	xor    ecx,ecx
   14000da36:	mov    QWORD PTR [rsp+0x20],rsi
   14000da3b:	call   0x14000cfa8
   14000da40:	int3   
   14000da41:	mov    rcx,r13
   14000da44:	call   0x140013ce4
   14000da49:	inc    rax
   14000da4c:	cmp    rax,0x3c
   14000da50:	jbe    0x14000da99
   14000da52:	mov    rcx,r13
   14000da55:	call   0x140013ce4
   14000da5a:	lea    r8,[rip+0x11ab7]        # 0x14001f518
   14000da61:	mov    r9d,0x3
   14000da67:	lea    rcx,[rbp+rax*2-0x44]
   14000da6c:	mov    rax,rcx
   14000da6f:	sub    rax,r13
   14000da72:	sar    rax,1
   14000da75:	sub    rdi,rax
   14000da78:	mov    rdx,rdi
   14000da7b:	call   0x14001515c
   14000da80:	test   eax,eax
   14000da82:	je     0x14000da99
   14000da84:	xor    r9d,r9d
   14000da87:	xor    r8d,r8d
   14000da8a:	xor    edx,edx
   14000da8c:	xor    ecx,ecx
   14000da8e:	mov    QWORD PTR [rsp+0x20],rsi
   14000da93:	call   0x14000cfa8
   14000da98:	int3   
   14000da99:	lea    r8,[rip+0x11a6c]        # 0x14001f50c
   14000daa0:	mov    rdx,r12
   14000daa3:	mov    rcx,rbp
   14000daa6:	call   0x1400150d4
   14000daab:	test   eax,eax
   14000daad:	jne    0x14000daf0
   14000daaf:	mov    r8,rbx
   14000dab2:	mov    rdx,r12
   14000dab5:	mov    rcx,rbp
   14000dab8:	call   0x1400150d4
   14000dabd:	test   eax,eax
   14000dabf:	jne    0x14000dadb
   14000dac1:	lea    rdx,[rip+0x119f8]        # 0x14001f4c0
   14000dac8:	mov    r8d,0x12010
   14000dace:	mov    rcx,rbp
   14000dad1:	call   0x140014ecc
   14000dad6:	jmp    0x14000db80
   14000dadb:	xor    r9d,r9d
   14000dade:	xor    r8d,r8d
   14000dae1:	xor    edx,edx
   14000dae3:	xor    ecx,ecx
   14000dae5:	mov    QWORD PTR [rsp+0x20],rsi
   14000daea:	call   0x14000cfa8
   14000daef:	int3   
   14000daf0:	xor    r9d,r9d
   14000daf3:	xor    r8d,r8d
   14000daf6:	xor    edx,edx
   14000daf8:	xor    ecx,ecx
   14000dafa:	mov    QWORD PTR [rsp+0x20],rsi
   14000daff:	call   0x14000cfa8
   14000db04:	int3   
   14000db05:	xor    r9d,r9d
   14000db08:	xor    r8d,r8d
   14000db0b:	xor    edx,edx
   14000db0d:	mov    QWORD PTR [rsp+0x20],rsi
   14000db12:	call   0x14000cfa8
   14000db17:	int3   
   14000db18:	mov    ecx,0xfffffff4
   14000db1d:	call   QWORD PTR [rip+0xc6d5]        # 0x14001a1f8
   14000db23:	mov    rdi,rax
   14000db26:	test   rax,rax
   14000db29:	je     0x14000db80
   14000db2b:	cmp    rax,0xffffffffffffffff
   14000db2f:	je     0x14000db80
   14000db31:	mov    edx,esi
   14000db33:	lea    r8,[rsp+0x40]
   14000db38:	mov    cl,BYTE PTR [rbx]
   14000db3a:	mov    BYTE PTR [r8],cl
   14000db3d:	cmp    WORD PTR [rbx],si
   14000db40:	je     0x14000db53
   14000db42:	inc    edx
   14000db44:	inc    r8
   14000db47:	add    rbx,0x2
   14000db4b:	cmp    edx,0x1f4
   14000db51:	jb     0x14000db38
   14000db53:	lea    rcx,[rsp+0x40]
   14000db58:	mov    BYTE PTR [rsp+0x233],sil
   14000db60:	call   0x140009fd0
   14000db65:	lea    r9,[rsp+0x30]
   14000db6a:	lea    rdx,[rsp+0x40]
   14000db6f:	mov    rcx,rdi
   14000db72:	mov    r8,rax
   14000db75:	mov    QWORD PTR [rsp+0x20],rsi
   14000db7a:	call   QWORD PTR [rip+0xc670]        # 0x14001a1f0
   14000db80:	mov    rcx,QWORD PTR [rsp+0x240]
   14000db88:	xor    rcx,rsp
   14000db8b:	call   0x14000a850
   14000db90:	lea    r11,[rsp+0x250]
   14000db98:	mov    rbx,QWORD PTR [r11+0x28]
   14000db9c:	mov    rbp,QWORD PTR [r11+0x30]
   14000dba0:	mov    rsi,QWORD PTR [r11+0x38]
   14000dba4:	mov    rsp,r11
   14000dba7:	pop    r13
   14000dba9:	pop    r12
   14000dbab:	pop    rdi
   14000dbac:	ret    
   14000dbad:	int3   
   14000dbae:	int3   
   14000dbaf:	int3   
   14000dbb0:	sub    rsp,0x28
   14000dbb4:	mov    ecx,0x3
   14000dbb9:	call   0x140015298
   14000dbbe:	cmp    eax,0x1
   14000dbc1:	je     0x14000dbda
   14000dbc3:	mov    ecx,0x3
   14000dbc8:	call   0x140015298
   14000dbcd:	test   eax,eax
   14000dbcf:	jne    0x14000dbee
   14000dbd1:	cmp    DWORD PTR [rip+0x154e0],0x1        # 0x1400230b8
   14000dbd8:	jne    0x14000dbee
   14000dbda:	mov    ecx,0xfc
   14000dbdf:	call   0x14000d950
   14000dbe4:	mov    ecx,0xff
   14000dbe9:	call   0x14000d950
   14000dbee:	add    rsp,0x28
   14000dbf2:	ret    
   14000dbf3:	int3   
   14000dbf4:	mov    QWORD PTR [rsp+0x8],rbx
   14000dbf9:	mov    QWORD PTR [rsp+0x10],rdi
   14000dbfe:	push   r12
   14000dc00:	sub    rsp,0x20
   14000dc04:	mov    rbx,rcx
   14000dc07:	call   0x140010b28
   14000dc0c:	mov    ecx,eax
   14000dc0e:	call   0x1400152d8
   14000dc13:	test   eax,eax
   14000dc15:	je     0x14000dcb2
   14000dc1b:	call   0x14000abc8
   14000dc20:	add    rax,0x30
   14000dc24:	cmp    rbx,rax
   14000dc27:	jne    0x14000dc2d
   14000dc29:	xor    eax,eax
   14000dc2b:	jmp    0x14000dc40
   14000dc2d:	call   0x14000abc8
   14000dc32:	add    rax,0x60
   14000dc36:	cmp    rbx,rax
   14000dc39:	jne    0x14000dcb2
   14000dc3b:	mov    eax,0x1
   14000dc40:	inc    DWORD PTR [rip+0x16dae]        # 0x1400249f4
   14000dc46:	test   DWORD PTR [rbx+0x18],0x10c
   14000dc4d:	jne    0x14000dcb2
   14000dc4f:	lea    r12,[rip+0x17652]        # 0x1400252a8
   14000dc56:	movsxd rdi,eax
   14000dc59:	cmp    QWORD PTR [r12+rdi*8],0x0
   14000dc5e:	jne    0x14000dc8b
   14000dc60:	mov    ecx,0x1000
   14000dc65:	call   0x140010b50
   14000dc6a:	mov    QWORD PTR [r12+rdi*8],rax
   14000dc6e:	test   rax,rax
   14000dc71:	jne    0x14000dc8b
   14000dc73:	lea    rax,[rbx+0x20]
   14000dc77:	mov    QWORD PTR [rbx+0x10],rax
   14000dc7b:	mov    QWORD PTR [rbx],rax
   14000dc7e:	mov    eax,0x2
   14000dc83:	mov    DWORD PTR [rbx+0x24],eax
   14000dc86:	mov    DWORD PTR [rbx+0x8],eax
   14000dc89:	jmp    0x14000dca4
   14000dc8b:	mov    rcx,QWORD PTR [r12+rdi*8]
   14000dc8f:	mov    DWORD PTR [rbx+0x24],0x1000
   14000dc96:	mov    DWORD PTR [rbx+0x8],0x1000
   14000dc9d:	mov    QWORD PTR [rbx+0x10],rcx
   14000dca1:	mov    QWORD PTR [rbx],rcx
   14000dca4:	or     DWORD PTR [rbx+0x18],0x1102
   14000dcab:	mov    eax,0x1
   14000dcb0:	jmp    0x14000dcb4
   14000dcb2:	xor    eax,eax
   14000dcb4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dcb9:	mov    rdi,QWORD PTR [rsp+0x38]
   14000dcbe:	add    rsp,0x20
   14000dcc2:	pop    r12
   14000dcc4:	ret    
   14000dcc5:	int3   
   14000dcc6:	int3   
   14000dcc7:	int3   
   14000dcc8:	test   ecx,ecx
   14000dcca:	je     0x14000dcfe
   14000dccc:	push   rbx
   14000dccd:	sub    rsp,0x20
   14000dcd1:	test   DWORD PTR [rdx+0x18],0x1000
   14000dcd8:	mov    rbx,rdx
   14000dcdb:	je     0x14000dcf9
   14000dcdd:	mov    rcx,rdx
   14000dce0:	call   0x14000be78
   14000dce5:	and    DWORD PTR [rbx+0x18],0xffffeeff
   14000dcec:	and    DWORD PTR [rbx+0x24],0x0
   14000dcf0:	and    QWORD PTR [rbx],0x0
   14000dcf4:	and    QWORD PTR [rbx+0x10],0x0
   14000dcf9:	add    rsp,0x20
   14000dcfd:	pop    rbx
   14000dcfe:	ret    
   14000dcff:	int3   
   14000dd00:	rex push rbx
   14000dd02:	sub    rsp,0x20
   14000dd06:	test   BYTE PTR [rdx+0x18],0x40
   14000dd0a:	mov    rbx,r8
   14000dd0d:	je     0x14000dd1b
   14000dd0f:	cmp    QWORD PTR [rdx+0x10],0x0
   14000dd14:	jne    0x14000dd1b
   14000dd16:	inc    DWORD PTR [r8]
   14000dd19:	jmp    0x14000dd40
   14000dd1b:	dec    DWORD PTR [rdx+0x8]
   14000dd1e:	js     0x14000dd2d
   14000dd20:	mov    rax,QWORD PTR [rdx]
   14000dd23:	mov    BYTE PTR [rax],cl
   14000dd25:	inc    QWORD PTR [rdx]
   14000dd28:	movzx  eax,cl
   14000dd2b:	jmp    0x14000dd35
   14000dd2d:	movsx  ecx,cl
   14000dd30:	call   0x14001084c
   14000dd35:	cmp    eax,0xffffffff
   14000dd38:	jne    0x14000dd3e
   14000dd3a:	or     DWORD PTR [rbx],eax
   14000dd3c:	jmp    0x14000dd40
   14000dd3e:	inc    DWORD PTR [rbx]
   14000dd40:	add    rsp,0x20
   14000dd44:	pop    rbx
   14000dd45:	ret    
   14000dd46:	int3   
   14000dd47:	int3   
   14000dd48:	test   edx,edx
   14000dd4a:	jle    0x14000dd98
   14000dd4c:	mov    QWORD PTR [rsp+0x8],rbx
   14000dd51:	mov    QWORD PTR [rsp+0x10],rbp
   14000dd56:	mov    QWORD PTR [rsp+0x18],rsi
   14000dd5b:	push   rdi
   14000dd5c:	sub    rsp,0x20
   14000dd60:	mov    rdi,r9
   14000dd63:	mov    rsi,r8
   14000dd66:	mov    ebx,edx
   14000dd68:	mov    bpl,cl
   14000dd6b:	mov    r8,rdi
   14000dd6e:	mov    rdx,rsi
   14000dd71:	mov    cl,bpl
   14000dd74:	dec    ebx
   14000dd76:	call   0x14000dd00
   14000dd7b:	cmp    DWORD PTR [rdi],0xffffffff
   14000dd7e:	je     0x14000dd84
   14000dd80:	test   ebx,ebx
   14000dd82:	jg     0x14000dd6b
   14000dd84:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dd89:	mov    rbp,QWORD PTR [rsp+0x38]
   14000dd8e:	mov    rsi,QWORD PTR [rsp+0x40]
   14000dd93:	add    rsp,0x20
   14000dd97:	pop    rdi
   14000dd98:	ret    
   14000dd99:	int3   
   14000dd9a:	int3   
   14000dd9b:	int3   
   14000dd9c:	mov    QWORD PTR [rsp+0x8],rbx
   14000dda1:	mov    QWORD PTR [rsp+0x10],rbp
   14000dda6:	mov    QWORD PTR [rsp+0x18],rsi
   14000ddab:	push   rdi
   14000ddac:	push   r12
   14000ddae:	push   r13
   14000ddb0:	sub    rsp,0x20
   14000ddb4:	test   BYTE PTR [r8+0x18],0x40
   14000ddb9:	mov    rbx,QWORD PTR [rsp+0x60]
   14000ddbe:	mov    rdi,r9
   14000ddc1:	mov    r12d,DWORD PTR [rbx]
   14000ddc4:	mov    rbp,r8
   14000ddc7:	mov    esi,edx
   14000ddc9:	mov    r13,rcx
   14000ddcc:	je     0x14000ddda
   14000ddce:	cmp    QWORD PTR [r8+0x10],0x0
   14000ddd3:	jne    0x14000ddda
   14000ddd5:	add    DWORD PTR [r9],edx
   14000ddd8:	jmp    0x14000de18
   14000ddda:	and    DWORD PTR [rbx],0x0
   14000dddd:	test   edx,edx
   14000dddf:	jle    0x14000de15
   14000dde1:	mov    cl,BYTE PTR [r13+0x0]
   14000dde5:	mov    r8,rdi
   14000dde8:	mov    rdx,rbp
   14000ddeb:	dec    esi
   14000dded:	call   0x14000dd00
   14000ddf2:	inc    r13
   14000ddf5:	cmp    DWORD PTR [rdi],0xffffffff
   14000ddf8:	jne    0x14000de0c
   14000ddfa:	cmp    DWORD PTR [rbx],0x2a
   14000ddfd:	jne    0x14000de10
   14000ddff:	mov    r8,rdi
   14000de02:	mov    rdx,rbp
   14000de05:	mov    cl,0x3f
   14000de07:	call   0x14000dd00
   14000de0c:	test   esi,esi
   14000de0e:	jg     0x14000dde1
   14000de10:	cmp    DWORD PTR [rbx],0x0
   14000de13:	jne    0x14000de18
   14000de15:	mov    DWORD PTR [rbx],r12d
   14000de18:	mov    rbx,QWORD PTR [rsp+0x40]
   14000de1d:	mov    rbp,QWORD PTR [rsp+0x48]
   14000de22:	mov    rsi,QWORD PTR [rsp+0x50]
   14000de27:	add    rsp,0x20
   14000de2b:	pop    r13
   14000de2d:	pop    r12
   14000de2f:	pop    rdi
   14000de30:	ret    
   14000de31:	int3   
   14000de32:	int3   
   14000de33:	int3   
   14000de34:	mov    QWORD PTR [rsp+0x18],rbx
   14000de39:	push   rbp
   14000de3a:	push   rsi
   14000de3b:	push   rdi
   14000de3c:	push   r12
   14000de3e:	push   r13
   14000de40:	push   r14
   14000de42:	push   r15
   14000de44:	lea    rbp,[rsp-0x1d0]
   14000de4c:	sub    rsp,0x2d0
   14000de53:	mov    rax,QWORD PTR [rip+0x15266]        # 0x1400230c0
   14000de5a:	xor    rax,rsp
   14000de5d:	mov    QWORD PTR [rbp+0x1c8],rax
   14000de64:	xor    eax,eax
   14000de66:	mov    rbx,rcx
   14000de69:	mov    QWORD PTR [rsp+0x70],rcx
   14000de6e:	mov    QWORD PTR [rsp+0x68],rdx
   14000de73:	lea    rcx,[rbp-0x80]
   14000de77:	mov    rdx,r8
   14000de7a:	mov    r14,r9
   14000de7d:	mov    DWORD PTR [rsp+0x64],eax
   14000de81:	mov    r13d,eax
   14000de84:	mov    DWORD PTR [rsp+0x58],eax
   14000de88:	mov    edi,eax
   14000de8a:	mov    DWORD PTR [rsp+0x44],eax
   14000de8e:	mov    DWORD PTR [rsp+0x4c],eax
   14000de92:	mov    DWORD PTR [rsp+0x5c],eax
   14000de96:	mov    DWORD PTR [rsp+0x54],eax
   14000de9a:	call   0x14000c724
   14000de9f:	call   0x14000bdf0
   14000dea4:	xor    r10d,r10d
   14000dea7:	mov    QWORD PTR [rbp-0x60],rax
   14000deab:	test   rbx,rbx
   14000deae:	jne    0x14000dedc
   14000deb0:	call   0x14000bdf0
   14000deb5:	mov    DWORD PTR [rax],0x16
   14000debb:	call   0x14000d04c
   14000dec0:	xor    r11d,r11d
   14000dec3:	cmp    BYTE PTR [rbp-0x68],r11b
   14000dec7:	je     0x14000ded4
   14000dec9:	mov    rax,QWORD PTR [rbp-0x70]
   14000decd:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000ded4:	or     eax,0xffffffff
   14000ded7:	jmp    0x14000e696
   14000dedc:	or     r15d,0xffffffff
   14000dee0:	test   BYTE PTR [rbx+0x18],0x40
   14000dee4:	lea    r9,[rip+0xffffffffffff2115]        # 0x140000000
   14000deeb:	jne    0x14000df96
   14000def1:	mov    rcx,rbx
   14000def4:	call   0x140010b28
   14000def9:	lea    rdx,[rip+0x159b0]        # 0x1400238b0
   14000df00:	cmp    eax,r15d
   14000df03:	je     0x14000df2d
   14000df05:	cmp    eax,0xfffffffe
   14000df08:	je     0x14000df2d
   14000df0a:	movsxd r8,eax
   14000df0d:	lea    r9,[rip+0xffffffffffff20ec]        # 0x140000000
   14000df14:	mov    rcx,r8
   14000df17:	and    r8d,0x1f
   14000df1b:	sar    rcx,0x5
   14000df1f:	imul   r8,r8,0x58
   14000df23:	add    r8,QWORD PTR [r9+rcx*8+0x25a80]
   14000df2b:	jmp    0x14000df37
   14000df2d:	mov    r8,rdx
   14000df30:	lea    r9,[rip+0xffffffffffff20c9]        # 0x140000000
   14000df37:	test   BYTE PTR [r8+0x38],0x7f
   14000df3c:	jne    0x14000df67
   14000df3e:	cmp    eax,r15d
   14000df41:	je     0x14000df61
   14000df43:	cmp    eax,0xfffffffe
   14000df46:	je     0x14000df61
   14000df48:	movsxd rdx,eax
   14000df4b:	mov    rax,rdx
   14000df4e:	and    edx,0x1f
   14000df51:	sar    rax,0x5
   14000df55:	imul   rdx,rdx,0x58
   14000df59:	add    rdx,QWORD PTR [r9+rax*8+0x25a80]
   14000df61:	test   BYTE PTR [rdx+0x38],0x80
   14000df65:	je     0x14000df93
   14000df67:	call   0x14000bdf0
   14000df6c:	mov    DWORD PTR [rax],0x16
   14000df72:	call   0x14000d04c
   14000df77:	xor    r11d,r11d
   14000df7a:	cmp    BYTE PTR [rbp-0x68],r11b
   14000df7e:	je     0x14000df8b
   14000df80:	mov    rax,QWORD PTR [rbp-0x70]
   14000df84:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000df8b:	mov    eax,r15d
   14000df8e:	jmp    0x14000e696
   14000df93:	xor    r10d,r10d
   14000df96:	mov    r8,QWORD PTR [rsp+0x68]
   14000df9b:	test   r8,r8
   14000df9e:	je     0x14000df67
   14000dfa0:	mov    r12b,BYTE PTR [r8]
   14000dfa3:	mov    esi,r10d
   14000dfa6:	mov    DWORD PTR [rsp+0x40],r10d
   14000dfab:	mov    DWORD PTR [rsp+0x48],r10d
   14000dfb0:	mov    edx,r10d
   14000dfb3:	mov    QWORD PTR [rbp-0x50],r10
   14000dfb7:	test   r12b,r12b
   14000dfba:	je     0x14000e683
   14000dfc0:	mov    rbx,QWORD PTR [rbp-0x48]
   14000dfc4:	mov    r11d,0x200
   14000dfca:	inc    r8
   14000dfcd:	mov    QWORD PTR [rsp+0x68],r8
   14000dfd2:	test   esi,esi
   14000dfd4:	js     0x14000e683
   14000dfda:	lea    eax,[r12-0x20]
   14000dfdf:	cmp    al,0x58
   14000dfe1:	ja     0x14000dff5
   14000dfe3:	movsx  rax,r12b
   14000dfe7:	movsx  ecx,BYTE PTR [rax+r9*1+0x1f580]
   14000dff0:	and    ecx,0xf
   14000dff3:	jmp    0x14000dff8
   14000dff5:	mov    ecx,r10d
   14000dff8:	movsxd rax,edx
   14000dffb:	movsxd rcx,ecx
   14000dffe:	lea    rdx,[rax+rcx*8]
   14000e002:	movsx  edx,BYTE PTR [rdx+r9*1+0x1f5a0]
   14000e00b:	sar    edx,0x4
   14000e00e:	mov    DWORD PTR [rsp+0x60],edx
   14000e012:	mov    ecx,edx
   14000e014:	test   edx,edx
   14000e016:	je     0x14000e76d
   14000e01c:	dec    ecx
   14000e01e:	je     0x14000e89e
   14000e024:	dec    ecx
   14000e026:	je     0x14000e84e
   14000e02c:	dec    ecx
   14000e02e:	je     0x14000e815
   14000e034:	dec    ecx
   14000e036:	je     0x14000e808
   14000e03c:	dec    ecx
   14000e03e:	je     0x14000e7ce
   14000e044:	dec    ecx
   14000e046:	je     0x14000e6c0
   14000e04c:	dec    ecx
   14000e04e:	jne    0x14000e677
   14000e054:	movsx  eax,r12b
   14000e058:	cmp    eax,0x64
   14000e05b:	jg     0x14000e1d4
   14000e061:	je     0x14000e2d5
   14000e067:	cmp    eax,0x41
   14000e06a:	je     0x14000e1a8
   14000e070:	cmp    eax,0x43
   14000e073:	je     0x14000e14e
   14000e079:	cmp    eax,0x45
   14000e07c:	je     0x14000e1a8
   14000e082:	cmp    eax,0x47
   14000e085:	je     0x14000e1a8
   14000e08b:	cmp    eax,0x53
   14000e08e:	je     0x14000e104
   14000e090:	cmp    eax,0x58
   14000e093:	je     0x14000e26f
   14000e099:	cmp    eax,0x5a
   14000e09c:	je     0x14000e0b5
   14000e09e:	cmp    eax,0x61
   14000e0a1:	je     0x14000e1b4
   14000e0a7:	cmp    eax,0x63
   14000e0aa:	je     0x14000e15c
   14000e0b0:	jmp    0x14000e4e0
   14000e0b5:	mov    rax,QWORD PTR [r14]
   14000e0b8:	add    r14,0x8
   14000e0bc:	test   rax,rax
   14000e0bf:	je     0x14000e0f0
   14000e0c1:	mov    rbx,QWORD PTR [rax+0x8]
   14000e0c5:	test   rbx,rbx
   14000e0c8:	je     0x14000e0f0
   14000e0ca:	movsx  eax,WORD PTR [rax]
   14000e0cd:	bt     r13d,0xb
   14000e0d2:	jae    0x14000e0e6
   14000e0d4:	cdq    
   14000e0d5:	mov    DWORD PTR [rsp+0x54],0x1
   14000e0dd:	sub    eax,edx
   14000e0df:	sar    eax,1
   14000e0e1:	jmp    0x14000e4dc
   14000e0e6:	mov    DWORD PTR [rsp+0x54],r10d
   14000e0eb:	jmp    0x14000e4dc
   14000e0f0:	mov    rbx,QWORD PTR [rip+0x157a9]        # 0x1400238a0
   14000e0f7:	mov    rcx,rbx
   14000e0fa:	call   0x140009fd0
   14000e0ff:	jmp    0x14000e4d9
   14000e104:	test   r13d,0x830
   14000e10b:	jne    0x14000e112
   14000e10d:	bts    r13d,0xb
   14000e112:	mov    rbx,QWORD PTR [r14]
   14000e115:	cmp    edi,r15d
   14000e118:	mov    eax,edi
   14000e11a:	mov    ecx,0x7fffffff
   14000e11f:	cmove  eax,ecx
   14000e122:	add    r14,0x8
   14000e126:	test   r13d,0x810
   14000e12d:	je     0x14000e23c
   14000e133:	test   rbx,rbx
   14000e136:	mov    DWORD PTR [rsp+0x54],0x1
   14000e13e:	cmove  rbx,QWORD PTR [rip+0x15762]        # 0x1400238a8
   14000e146:	mov    rcx,rbx
   14000e149:	jmp    0x14000e230
   14000e14e:	test   r13d,0x830
   14000e155:	jne    0x14000e15c
   14000e157:	bts    r13d,0xb
   14000e15c:	add    r14,0x8
   14000e160:	test   r13d,0x810
   14000e167:	je     0x14000e190
   14000e169:	movzx  r9d,WORD PTR [r14-0x8]
   14000e16e:	lea    rdx,[rbp-0x40]
   14000e172:	lea    rcx,[rsp+0x48]
   14000e177:	mov    r8,r11
   14000e17a:	call   0x14001558c
   14000e17f:	xor    r10d,r10d
   14000e182:	test   eax,eax
   14000e184:	je     0x14000e19f
   14000e186:	mov    DWORD PTR [rsp+0x5c],0x1
   14000e18e:	jmp    0x14000e19f
   14000e190:	mov    al,BYTE PTR [r14-0x8]
   14000e194:	mov    DWORD PTR [rsp+0x48],0x1
   14000e19c:	mov    BYTE PTR [rbp-0x40],al
   14000e19f:	lea    rbx,[rbp-0x40]
   14000e1a3:	jmp    0x14000e4e0
   14000e1a8:	mov    DWORD PTR [rsp+0x78],0x1
   14000e1b0:	add    r12b,0x20
   14000e1b4:	or     r13d,0x40
   14000e1b8:	lea    rbx,[rbp-0x40]
   14000e1bc:	mov    esi,r11d
   14000e1bf:	test   edi,edi
   14000e1c1:	jns    0x14000e3e5
   14000e1c7:	mov    DWORD PTR [rsp+0x44],0x6
   14000e1cf:	jmp    0x14000e430
   14000e1d4:	cmp    eax,0x65
   14000e1d7:	jl     0x14000e4e0
   14000e1dd:	cmp    eax,0x67
   14000e1e0:	jle    0x14000e1b4
   14000e1e2:	cmp    eax,0x69
   14000e1e5:	je     0x14000e2d5
   14000e1eb:	cmp    eax,0x6e
   14000e1ee:	je     0x14000e2a4
   14000e1f4:	cmp    eax,0x6f
   14000e1f7:	je     0x14000e294
   14000e1fd:	cmp    eax,0x70
   14000e200:	je     0x14000e265
   14000e202:	cmp    eax,0x73
   14000e205:	je     0x14000e112
   14000e20b:	cmp    eax,0x75
   14000e20e:	je     0x14000e2d9
   14000e214:	cmp    eax,0x78
   14000e217:	jne    0x14000e4e0
   14000e21d:	mov    eax,0x27
   14000e222:	jmp    0x14000e274
   14000e224:	dec    eax
   14000e226:	cmp    WORD PTR [rcx],r10w
   14000e22a:	je     0x14000e234
   14000e22c:	add    rcx,0x2
   14000e230:	test   eax,eax
   14000e232:	jne    0x14000e224
   14000e234:	sub    rcx,rbx
   14000e237:	sar    rcx,1
   14000e23a:	jmp    0x14000e25c
   14000e23c:	test   rbx,rbx
   14000e23f:	cmove  rbx,QWORD PTR [rip+0x15659]        # 0x1400238a0
   14000e247:	mov    rcx,rbx
   14000e24a:	jmp    0x14000e256
   14000e24c:	dec    eax
   14000e24e:	cmp    BYTE PTR [rcx],r10b
   14000e251:	je     0x14000e25a
   14000e253:	inc    rcx
   14000e256:	test   eax,eax
   14000e258:	jne    0x14000e24c
   14000e25a:	sub    ecx,ebx
   14000e25c:	mov    DWORD PTR [rsp+0x48],ecx
   14000e260:	jmp    0x14000e4e0
   14000e265:	mov    edi,0x10
   14000e26a:	bts    r13d,0xf
   14000e26f:	mov    eax,0x7
   14000e274:	mov    DWORD PTR [rsp+0x64],eax
   14000e278:	mov    r9d,0x10
   14000e27e:	test   r13b,r13b
   14000e281:	jns    0x14000e2df
   14000e283:	add    al,0x51
   14000e285:	mov    BYTE PTR [rsp+0x50],0x30
   14000e28a:	lea    edx,[r9-0xe]
   14000e28e:	mov    BYTE PTR [rsp+0x51],al
   14000e292:	jmp    0x14000e2e3
   14000e294:	mov    r9d,0x8
   14000e29a:	test   r13b,r13b
   14000e29d:	jns    0x14000e2df
   14000e29f:	or     r13d,r11d
   14000e2a2:	jmp    0x14000e2df
   14000e2a4:	mov    rdi,QWORD PTR [r14]
   14000e2a7:	add    r14,0x8
   14000e2ab:	call   0x140009ce8
   14000e2b0:	xor    r10d,r10d
   14000e2b3:	test   eax,eax
   14000e2b5:	je     0x14000df67
   14000e2bb:	test   r13b,0x20
   14000e2bf:	je     0x14000e2c6
   14000e2c1:	mov    WORD PTR [rdi],si
   14000e2c4:	jmp    0x14000e2c8
   14000e2c6:	mov    DWORD PTR [rdi],esi
   14000e2c8:	mov    DWORD PTR [rsp+0x5c],0x1
   14000e2d0:	jmp    0x14000e645
   14000e2d5:	or     r13d,0x40
   14000e2d9:	mov    r9d,0xa
   14000e2df:	mov    edx,DWORD PTR [rsp+0x4c]
   14000e2e3:	mov    eax,0x8000
   14000e2e8:	test   eax,r13d
   14000e2eb:	jne    0x14000e2f4
   14000e2ed:	bt     r13d,0xc
   14000e2f2:	jae    0x14000e2fd
   14000e2f4:	mov    r8,QWORD PTR [r14]
   14000e2f7:	add    r14,0x8
   14000e2fb:	jmp    0x14000e32b
   14000e2fd:	add    r14,0x8
   14000e301:	test   r13b,0x20
   14000e305:	je     0x14000e31b
   14000e307:	test   r13b,0x40
   14000e30b:	je     0x14000e314
   14000e30d:	movsx  r8,WORD PTR [r14-0x8]
   14000e312:	jmp    0x14000e32b
   14000e314:	movzx  r8d,WORD PTR [r14-0x8]
   14000e319:	jmp    0x14000e32b
   14000e31b:	test   r13b,0x40
   14000e31f:	je     0x14000e327
   14000e321:	movsxd r8,DWORD PTR [r14-0x8]
   14000e325:	jmp    0x14000e32b
   14000e327:	mov    r8d,DWORD PTR [r14-0x8]
   14000e32b:	test   r13b,0x40
   14000e32f:	je     0x14000e33e
   14000e331:	test   r8,r8
   14000e334:	jns    0x14000e33e
   14000e336:	neg    r8
   14000e339:	bts    r13d,0x8
   14000e33e:	test   eax,r13d
   14000e341:	jne    0x14000e34d
   14000e343:	bt     r13d,0xc
   14000e348:	jb     0x14000e34d
   14000e34a:	mov    r8d,r8d
   14000e34d:	test   edi,edi
   14000e34f:	jns    0x14000e358
   14000e351:	mov    edi,0x1
   14000e356:	jmp    0x14000e363
   14000e358:	and    r13d,0xfffffff7
   14000e35c:	cmp    edi,r11d
   14000e35f:	cmovg  edi,r11d
   14000e363:	mov    esi,DWORD PTR [rsp+0x64]
   14000e367:	mov    rax,r8
   14000e36a:	lea    rbx,[rbp+0x1bf]
   14000e371:	neg    rax
   14000e374:	sbb    ecx,ecx
   14000e376:	and    ecx,edx
   14000e378:	mov    DWORD PTR [rsp+0x4c],ecx
   14000e37c:	mov    ecx,edi
   14000e37e:	dec    edi
   14000e380:	test   ecx,ecx
   14000e382:	jg     0x14000e389
   14000e384:	test   r8,r8
   14000e387:	je     0x14000e3a8
   14000e389:	xor    edx,edx
   14000e38b:	mov    rax,r8
   14000e38e:	movsxd rcx,r9d
   14000e391:	div    rcx
   14000e394:	mov    r8,rax
   14000e397:	lea    eax,[rdx+0x30]
   14000e39a:	cmp    eax,0x39
   14000e39d:	jle    0x14000e3a1
   14000e39f:	add    eax,esi
   14000e3a1:	mov    BYTE PTR [rbx],al
   14000e3a3:	dec    rbx
   14000e3a6:	jmp    0x14000e37c
   14000e3a8:	mov    esi,DWORD PTR [rsp+0x40]
   14000e3ac:	lea    rax,[rbp+0x1bf]
   14000e3b3:	mov    DWORD PTR [rsp+0x44],edi
   14000e3b7:	sub    eax,ebx
   14000e3b9:	inc    rbx
   14000e3bc:	mov    DWORD PTR [rsp+0x48],eax
   14000e3c0:	test   r11d,r13d
   14000e3c3:	je     0x14000e4e0
   14000e3c9:	test   eax,eax
   14000e3cb:	je     0x14000e3d6
   14000e3cd:	cmp    BYTE PTR [rbx],0x30
   14000e3d0:	je     0x14000e4e0
   14000e3d6:	dec    rbx
   14000e3d9:	inc    DWORD PTR [rsp+0x48]
   14000e3dd:	mov    BYTE PTR [rbx],0x30
   14000e3e0:	jmp    0x14000e4e0
   14000e3e5:	jne    0x14000e3f7
   14000e3e7:	cmp    r12b,0x67
   14000e3eb:	jne    0x14000e430
   14000e3ed:	mov    DWORD PTR [rsp+0x44],0x1
   14000e3f5:	jmp    0x14000e430
   14000e3f7:	cmp    edi,r11d
   14000e3fa:	cmovg  edi,r11d
   14000e3fe:	mov    DWORD PTR [rsp+0x44],edi
   14000e402:	cmp    edi,0xa3
   14000e408:	jle    0x14000e430
   14000e40a:	add    edi,0x15d
   14000e410:	movsxd rcx,edi
   14000e413:	call   0x140010b50
   14000e418:	mov    QWORD PTR [rbp-0x50],rax
   14000e41c:	test   rax,rax
   14000e41f:	je     0x14000e428
   14000e421:	mov    rbx,rax
   14000e424:	mov    esi,edi
   14000e426:	jmp    0x14000e430
   14000e428:	mov    DWORD PTR [rsp+0x44],0xa3
   14000e430:	mov    rax,QWORD PTR [r14]
   14000e433:	mov    rcx,QWORD PTR [rip+0x15446]        # 0x140023880
   14000e43a:	add    r14,0x8
   14000e43e:	movsx  edi,r12b
   14000e442:	movsxd rsi,esi
   14000e445:	mov    QWORD PTR [rbp-0x48],rax
   14000e449:	call   QWORD PTR [rip+0xbc91]        # 0x14001a0e0
   14000e44f:	lea    rcx,[rbp-0x80]
   14000e453:	mov    r9d,edi
   14000e456:	mov    QWORD PTR [rsp+0x30],rcx
   14000e45b:	mov    ecx,DWORD PTR [rsp+0x78]
   14000e45f:	mov    r8,rsi
   14000e462:	mov    DWORD PTR [rsp+0x28],ecx
   14000e466:	mov    ecx,DWORD PTR [rsp+0x44]
   14000e46a:	mov    rdx,rbx
   14000e46d:	mov    DWORD PTR [rsp+0x20],ecx
   14000e471:	lea    rcx,[rbp-0x48]
   14000e475:	call   rax
   14000e477:	mov    edi,r13d
   14000e47a:	and    edi,0x80
   14000e480:	je     0x14000e4a0
   14000e482:	xor    eax,eax
   14000e484:	cmp    DWORD PTR [rsp+0x44],eax
   14000e488:	jne    0x14000e4a0
   14000e48a:	mov    rcx,QWORD PTR [rip+0x15407]        # 0x140023898
   14000e491:	call   QWORD PTR [rip+0xbc49]        # 0x14001a0e0
   14000e497:	lea    rdx,[rbp-0x80]
   14000e49b:	mov    rcx,rbx
   14000e49e:	call   rax
   14000e4a0:	cmp    r12b,0x67
   14000e4a4:	jne    0x14000e4c0
   14000e4a6:	test   edi,edi
   14000e4a8:	jne    0x14000e4c0
   14000e4aa:	mov    rcx,QWORD PTR [rip+0x153df]        # 0x140023890
   14000e4b1:	call   QWORD PTR [rip+0xbc29]        # 0x14001a0e0
   14000e4b7:	lea    rdx,[rbp-0x80]
   14000e4bb:	mov    rcx,rbx
   14000e4be:	call   rax
   14000e4c0:	cmp    BYTE PTR [rbx],0x2d
   14000e4c3:	jne    0x14000e4cd
   14000e4c5:	bts    r13d,0x8
   14000e4ca:	inc    rbx
   14000e4cd:	mov    rcx,rbx
   14000e4d0:	call   0x140009fd0
   14000e4d5:	mov    esi,DWORD PTR [rsp+0x40]
   14000e4d9:	xor    r10d,r10d
   14000e4dc:	mov    DWORD PTR [rsp+0x48],eax
   14000e4e0:	cmp    DWORD PTR [rsp+0x5c],r10d
   14000e4e5:	jne    0x14000e645
   14000e4eb:	test   r13b,0x40
   14000e4ef:	je     0x14000e522
   14000e4f1:	bt     r13d,0x8
   14000e4f6:	jae    0x14000e4ff
   14000e4f8:	mov    BYTE PTR [rsp+0x50],0x2d
   14000e4fd:	jmp    0x14000e50a
   14000e4ff:	test   r13b,0x1
   14000e503:	je     0x14000e515
   14000e505:	mov    BYTE PTR [rsp+0x50],0x2b
   14000e50a:	mov    edi,0x1
   14000e50f:	mov    DWORD PTR [rsp+0x4c],edi
   14000e513:	jmp    0x14000e526
   14000e515:	test   r13b,0x2
   14000e519:	je     0x14000e522
   14000e51b:	mov    BYTE PTR [rsp+0x50],0x20
   14000e520:	jmp    0x14000e50a
   14000e522:	mov    edi,DWORD PTR [rsp+0x4c]
   14000e526:	mov    r12d,DWORD PTR [rsp+0x58]
   14000e52b:	mov    rsi,QWORD PTR [rsp+0x70]
   14000e530:	sub    r12d,DWORD PTR [rsp+0x48]
   14000e535:	sub    r12d,edi
   14000e538:	test   r13b,0xc
   14000e53c:	jne    0x14000e550
   14000e53e:	lea    r9,[rsp+0x40]
   14000e543:	mov    r8,rsi
   14000e546:	mov    edx,r12d
   14000e549:	mov    cl,0x20
   14000e54b:	call   0x14000dd48
   14000e550:	mov    rax,QWORD PTR [rbp-0x60]
   14000e554:	lea    r9,[rsp+0x40]
   14000e559:	lea    rcx,[rsp+0x50]
   14000e55e:	mov    r8,rsi
   14000e561:	mov    edx,edi
   14000e563:	mov    QWORD PTR [rsp+0x20],rax
   14000e568:	call   0x14000dd9c
   14000e56d:	test   r13b,0x8
   14000e571:	je     0x14000e58b
   14000e573:	test   r13b,0x4
   14000e577:	jne    0x14000e58b
   14000e579:	lea    r9,[rsp+0x40]
   14000e57e:	mov    r8,rsi
   14000e581:	mov    edx,r12d
   14000e584:	mov    cl,0x30
   14000e586:	call   0x14000dd48
   14000e58b:	mov    edi,DWORD PTR [rsp+0x48]
   14000e58f:	xor    eax,eax
   14000e591:	cmp    DWORD PTR [rsp+0x54],eax
   14000e595:	je     0x14000e5fe
   14000e597:	test   edi,edi
   14000e599:	jle    0x14000e5fe
   14000e59b:	mov    rsi,rbx
   14000e59e:	movzx  r9d,WORD PTR [rsi]
   14000e5a2:	lea    rdx,[rbp+0x1c0]
   14000e5a9:	lea    rcx,[rbp-0x58]
   14000e5ad:	mov    r8d,0x6
   14000e5b3:	dec    edi
   14000e5b5:	add    rsi,0x2
   14000e5b9:	call   0x14001558c
   14000e5be:	xor    r10d,r10d
   14000e5c1:	test   eax,eax
   14000e5c3:	jne    0x14000e5f4
   14000e5c5:	mov    edx,DWORD PTR [rbp-0x58]
   14000e5c8:	test   edx,edx
   14000e5ca:	je     0x14000e5f4
   14000e5cc:	mov    rax,QWORD PTR [rbp-0x60]
   14000e5d0:	mov    r8,QWORD PTR [rsp+0x70]
   14000e5d5:	lea    r9,[rsp+0x40]
   14000e5da:	lea    rcx,[rbp+0x1c0]
   14000e5e1:	mov    QWORD PTR [rsp+0x20],rax
   14000e5e6:	call   0x14000dd9c
   14000e5eb:	xor    r10d,r10d
   14000e5ee:	test   edi,edi
   14000e5f0:	jne    0x14000e59e
   14000e5f2:	jmp    0x14000e61c
   14000e5f4:	mov    esi,r15d
   14000e5f7:	mov    DWORD PTR [rsp+0x40],r15d
   14000e5fc:	jmp    0x14000e620
   14000e5fe:	mov    rax,QWORD PTR [rbp-0x60]
   14000e602:	lea    r9,[rsp+0x40]
   14000e607:	mov    r8,rsi
   14000e60a:	mov    edx,edi
   14000e60c:	mov    rcx,rbx
   14000e60f:	mov    QWORD PTR [rsp+0x20],rax
   14000e614:	call   0x14000dd9c
   14000e619:	xor    r10d,r10d
   14000e61c:	mov    esi,DWORD PTR [rsp+0x40]
   14000e620:	test   esi,esi
   14000e622:	js     0x14000e645
   14000e624:	test   r13b,0x4
   14000e628:	je     0x14000e645
   14000e62a:	mov    r8,QWORD PTR [rsp+0x70]
   14000e62f:	lea    r9,[rsp+0x40]
   14000e634:	mov    edx,r12d
   14000e637:	mov    cl,0x20
   14000e639:	call   0x14000dd48
   14000e63e:	mov    esi,DWORD PTR [rsp+0x40]
   14000e642:	xor    r10d,r10d
   14000e645:	mov    rax,QWORD PTR [rbp-0x50]
   14000e649:	test   rax,rax
   14000e64c:	je     0x14000e65d
   14000e64e:	mov    rcx,rax
   14000e651:	call   0x14000b490
   14000e656:	xor    r10d,r10d
   14000e659:	mov    QWORD PTR [rbp-0x50],r10
   14000e65d:	mov    edi,DWORD PTR [rsp+0x44]
   14000e661:	mov    r8,QWORD PTR [rsp+0x68]
   14000e666:	mov    edx,DWORD PTR [rsp+0x60]
   14000e66a:	mov    r11d,0x200
   14000e670:	lea    r9,[rip+0xffffffffffff1989]        # 0x140000000
   14000e677:	mov    r12b,BYTE PTR [r8]
   14000e67a:	test   r12b,r12b
   14000e67d:	jne    0x14000dfca
   14000e683:	cmp    BYTE PTR [rbp-0x68],r10b
   14000e687:	je     0x14000e694
   14000e689:	mov    rcx,QWORD PTR [rbp-0x70]
   14000e68d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000e694:	mov    eax,esi
   14000e696:	mov    rcx,QWORD PTR [rbp+0x1c8]
   14000e69d:	xor    rcx,rsp
   14000e6a0:	call   0x14000a850
   14000e6a5:	mov    rbx,QWORD PTR [rsp+0x320]
   14000e6ad:	add    rsp,0x2d0
   14000e6b4:	pop    r15
   14000e6b6:	pop    r14
   14000e6b8:	pop    r13
   14000e6ba:	pop    r12
   14000e6bc:	pop    rdi
   14000e6bd:	pop    rsi
   14000e6be:	pop    rbp
   14000e6bf:	ret    
   14000e6c0:	cmp    r12b,0x49
   14000e6c4:	je     0x14000e6fe
   14000e6c6:	cmp    r12b,0x68
   14000e6ca:	je     0x14000e6f5
   14000e6cc:	cmp    r12b,0x6c
   14000e6d0:	je     0x14000e6df
   14000e6d2:	cmp    r12b,0x77
   14000e6d6:	jne    0x14000e677
   14000e6d8:	bts    r13d,0xb
   14000e6dd:	jmp    0x14000e677
   14000e6df:	cmp    BYTE PTR [r8],0x6c
   14000e6e3:	jne    0x14000e6ef
   14000e6e5:	inc    r8
   14000e6e8:	bts    r13d,0xc
   14000e6ed:	jmp    0x14000e677
   14000e6ef:	or     r13d,0x10
   14000e6f3:	jmp    0x14000e677
   14000e6f5:	or     r13d,0x20
   14000e6f9:	jmp    0x14000e677
   14000e6fe:	mov    al,BYTE PTR [r8]
   14000e701:	bts    r13d,0xf
   14000e706:	cmp    al,0x36
   14000e708:	jne    0x14000e71f
   14000e70a:	cmp    BYTE PTR [r8+0x1],0x34
   14000e70f:	jne    0x14000e71f
   14000e711:	add    r8,0x2
   14000e715:	bts    r13d,0xf
   14000e71a:	jmp    0x14000e677
   14000e71f:	cmp    al,0x33
   14000e721:	jne    0x14000e738
   14000e723:	cmp    BYTE PTR [r8+0x1],0x32
   14000e728:	jne    0x14000e738
   14000e72a:	add    r8,0x2
   14000e72e:	btr    r13d,0xf
   14000e733:	jmp    0x14000e677
   14000e738:	cmp    al,0x64
   14000e73a:	je     0x14000e677
   14000e740:	cmp    al,0x69
   14000e742:	je     0x14000e677
   14000e748:	cmp    al,0x6f
   14000e74a:	je     0x14000e677
   14000e750:	cmp    al,0x75
   14000e752:	je     0x14000e677
   14000e758:	cmp    al,0x78
   14000e75a:	je     0x14000e677
   14000e760:	cmp    al,0x58
   14000e762:	je     0x14000e677
   14000e768:	mov    DWORD PTR [rsp+0x60],r10d
   14000e76d:	lea    rdx,[rbp-0x80]
   14000e771:	movzx  ecx,r12b
   14000e775:	mov    DWORD PTR [rsp+0x54],r10d
   14000e77a:	call   0x140015338
   14000e77f:	xor    esi,esi
   14000e781:	test   eax,eax
   14000e783:	je     0x14000e7b0
   14000e785:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e78a:	lea    r8,[rsp+0x40]
   14000e78f:	mov    cl,r12b
   14000e792:	call   0x14000dd00
   14000e797:	mov    rdx,QWORD PTR [rsp+0x68]
   14000e79c:	mov    r12b,BYTE PTR [rdx]
   14000e79f:	inc    rdx
   14000e7a2:	mov    QWORD PTR [rsp+0x68],rdx
   14000e7a7:	test   r12b,r12b
   14000e7aa:	je     0x14000e8c7
   14000e7b0:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e7b5:	lea    r8,[rsp+0x40]
   14000e7ba:	mov    cl,r12b
   14000e7bd:	call   0x14000dd00
   14000e7c2:	mov    esi,DWORD PTR [rsp+0x40]
   14000e7c6:	xor    r10d,r10d
   14000e7c9:	jmp    0x14000e661
   14000e7ce:	cmp    r12b,0x2a
   14000e7d2:	jne    0x14000e7f4
   14000e7d4:	mov    edi,DWORD PTR [r14]
   14000e7d7:	add    r14,0x8
   14000e7db:	mov    DWORD PTR [rsp+0x44],edi
   14000e7df:	test   edi,edi
   14000e7e1:	jns    0x14000e677
   14000e7e7:	mov    edi,r15d
   14000e7ea:	mov    DWORD PTR [rsp+0x44],r15d
   14000e7ef:	jmp    0x14000e677
   14000e7f4:	lea    ecx,[rdi+rdi*4]
   14000e7f7:	movsx  eax,r12b
   14000e7fb:	lea    edi,[rax+rcx*2-0x30]
   14000e7ff:	mov    DWORD PTR [rsp+0x44],edi
   14000e803:	jmp    0x14000e677
   14000e808:	mov    edi,r10d
   14000e80b:	mov    DWORD PTR [rsp+0x44],r10d
   14000e810:	jmp    0x14000e677
   14000e815:	cmp    r12b,0x2a
   14000e819:	jne    0x14000e836
   14000e81b:	mov    eax,DWORD PTR [r14]
   14000e81e:	add    r14,0x8
   14000e822:	mov    DWORD PTR [rsp+0x58],eax
   14000e826:	test   eax,eax
   14000e828:	jns    0x14000e677
   14000e82e:	or     r13d,0x4
   14000e832:	neg    eax
   14000e834:	jmp    0x14000e845
   14000e836:	mov    eax,DWORD PTR [rsp+0x58]
   14000e83a:	lea    ecx,[rax+rax*4]
   14000e83d:	movsx  eax,r12b
   14000e841:	lea    eax,[rax+rcx*2-0x30]
   14000e845:	mov    DWORD PTR [rsp+0x58],eax
   14000e849:	jmp    0x14000e677
   14000e84e:	cmp    r12b,0x20
   14000e852:	je     0x14000e895
   14000e854:	cmp    r12b,0x23
   14000e858:	je     0x14000e88b
   14000e85a:	cmp    r12b,0x2b
   14000e85e:	je     0x14000e882
   14000e860:	cmp    r12b,0x2d
   14000e864:	je     0x14000e879
   14000e866:	cmp    r12b,0x30
   14000e86a:	jne    0x14000e677
   14000e870:	or     r13d,0x8
   14000e874:	jmp    0x14000e677
   14000e879:	or     r13d,0x4
   14000e87d:	jmp    0x14000e677
   14000e882:	or     r13d,0x1
   14000e886:	jmp    0x14000e677
   14000e88b:	bts    r13d,0x7
   14000e890:	jmp    0x14000e677
   14000e895:	or     r13d,0x2
   14000e899:	jmp    0x14000e677
   14000e89e:	mov    DWORD PTR [rsp+0x78],r10d
   14000e8a3:	mov    DWORD PTR [rsp+0x5c],r10d
   14000e8a8:	mov    DWORD PTR [rsp+0x58],r10d
   14000e8ad:	mov    DWORD PTR [rsp+0x4c],r10d
   14000e8b2:	mov    r13d,r10d
   14000e8b5:	mov    edi,r15d
   14000e8b8:	mov    DWORD PTR [rsp+0x44],r15d
   14000e8bd:	mov    DWORD PTR [rsp+0x54],r10d
   14000e8c2:	jmp    0x14000e677
   14000e8c7:	call   0x14000bdf0
   14000e8cc:	mov    DWORD PTR [rax],0x16
   14000e8d2:	call   0x14000d04c
   14000e8d7:	cmp    BYTE PTR [rbp-0x68],sil
   14000e8db:	jmp    0x14000df7e
   14000e8e0:	mov    rax,rsp
   14000e8e3:	mov    QWORD PTR [rax+0x8],rbx
   14000e8e7:	mov    QWORD PTR [rax+0x10],rsi
   14000e8eb:	mov    QWORD PTR [rax+0x18],rdi
   14000e8ef:	mov    QWORD PTR [rax+0x20],r12
   14000e8f3:	push   rbp
   14000e8f4:	mov    rbp,rsp
   14000e8f7:	sub    rsp,0x60
   14000e8fb:	mov    rsi,rcx
   14000e8fe:	mov    rdi,rdx
   14000e901:	lea    rcx,[rbp-0x20]
   14000e905:	mov    rdx,r9
   14000e908:	mov    r12,r9
   14000e90b:	mov    rbx,r8
   14000e90e:	call   0x14000c724
   14000e913:	test   rbx,rbx
   14000e916:	jne    0x14000e92f
   14000e918:	cmp    BYTE PTR [rbp-0x8],bl
   14000e91b:	je     0x14000e928
   14000e91d:	mov    rax,QWORD PTR [rbp-0x10]
   14000e921:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000e928:	xor    eax,eax
   14000e92a:	jmp    0x14000e9c8
   14000e92f:	test   rsi,rsi
   14000e932:	jne    0x14000e95c
   14000e934:	call   0x14000bdf0
   14000e939:	mov    DWORD PTR [rax],0x16
   14000e93f:	call   0x14000d04c
   14000e944:	cmp    BYTE PTR [rbp-0x8],0x0
   14000e948:	je     0x14000e955
   14000e94a:	mov    rax,QWORD PTR [rbp-0x10]
   14000e94e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000e955:	mov    eax,0x7fffffff
   14000e95a:	jmp    0x14000e9c8
   14000e95c:	test   rdi,rdi
   14000e95f:	je     0x14000e934
   14000e961:	cmp    rbx,0x7fffffff
   14000e968:	ja     0x14000e934
   14000e96a:	mov    rcx,QWORD PTR [rbp-0x18]
   14000e96e:	cmp    DWORD PTR [rcx+0x8],0x0
   14000e972:	jne    0x14000e987
   14000e974:	mov    r9,r12
   14000e977:	mov    r8,rbx
   14000e97a:	mov    rdx,rdi
   14000e97d:	mov    rcx,rsi
   14000e980:	call   0x140015970
   14000e985:	jmp    0x14000e9b7
   14000e987:	mov    eax,DWORD PTR [rcx+0x4]
   14000e98a:	mov    edx,DWORD PTR [rcx+0xc]
   14000e98d:	lea    rcx,[rbp-0x20]
   14000e991:	mov    DWORD PTR [rsp+0x38],eax
   14000e995:	mov    DWORD PTR [rsp+0x30],ebx
   14000e999:	mov    r9,rsi
   14000e99c:	mov    r8d,0x1001
   14000e9a2:	mov    QWORD PTR [rsp+0x28],rdi
   14000e9a7:	mov    DWORD PTR [rsp+0x20],ebx
   14000e9ab:	call   0x1400158e4
   14000e9b0:	test   eax,eax
   14000e9b2:	je     0x14000e944
   14000e9b4:	add    eax,0xfffffffe
   14000e9b7:	cmp    BYTE PTR [rbp-0x8],0x0
   14000e9bb:	je     0x14000e9c8
   14000e9bd:	mov    rcx,QWORD PTR [rbp-0x10]
   14000e9c1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000e9c8:	lea    r11,[rsp+0x60]
   14000e9cd:	mov    rbx,QWORD PTR [r11+0x10]
   14000e9d1:	mov    rsi,QWORD PTR [r11+0x18]
   14000e9d5:	mov    rdi,QWORD PTR [r11+0x20]
   14000e9d9:	mov    r12,QWORD PTR [r11+0x28]
   14000e9dd:	mov    rsp,r11
   14000e9e0:	pop    rbp
   14000e9e1:	ret    
   14000e9e2:	int3   
   14000e9e3:	int3   
   14000e9e4:	xor    r9d,r9d
   14000e9e7:	jmp    0x14000e8e0
   14000e9ec:	mov    QWORD PTR [rsp+0x10],rbx
   14000e9f1:	mov    QWORD PTR [rsp+0x18],rbp
   14000e9f6:	push   rdi
   14000e9f7:	sub    rsp,0x40
   14000e9fb:	and    QWORD PTR [rsp+0x50],0x0
   14000ea01:	mov    rbx,QWORD PTR [rip+0x15fa0]        # 0x1400249a8
   14000ea08:	mov    rax,QWORD PTR [rbx]
   14000ea0b:	test   rax,rax
   14000ea0e:	je     0x14000eabe
   14000ea14:	or     ebp,0xffffffff
   14000ea17:	and    QWORD PTR [rsp+0x38],0x0
   14000ea1d:	and    QWORD PTR [rsp+0x30],0x0
   14000ea23:	and    DWORD PTR [rsp+0x28],0x0
   14000ea28:	and    QWORD PTR [rsp+0x20],0x0
   14000ea2e:	mov    r9d,ebp
   14000ea31:	mov    r8,rax
   14000ea34:	xor    edx,edx
   14000ea36:	xor    ecx,ecx
   14000ea38:	call   QWORD PTR [rip+0xb7ca]        # 0x14001a208
   14000ea3e:	movsxd rdi,eax
   14000ea41:	test   eax,eax
   14000ea43:	je     0x14000eada
   14000ea49:	mov    rcx,rdi
   14000ea4c:	mov    edx,0x1
   14000ea51:	call   0x140010bd0
   14000ea56:	mov    QWORD PTR [rsp+0x50],rax
   14000ea5b:	test   rax,rax
   14000ea5e:	je     0x14000eada
   14000ea60:	and    QWORD PTR [rsp+0x38],0x0
   14000ea66:	and    QWORD PTR [rsp+0x30],0x0
   14000ea6c:	mov    r8,QWORD PTR [rbx]
   14000ea6f:	mov    r9d,ebp
   14000ea72:	xor    edx,edx
   14000ea74:	xor    ecx,ecx
   14000ea76:	mov    DWORD PTR [rsp+0x28],edi
   14000ea7a:	mov    QWORD PTR [rsp+0x20],rax
   14000ea7f:	call   QWORD PTR [rip+0xb783]        # 0x14001a208
   14000ea85:	test   eax,eax
   14000ea87:	je     0x14000ead0
   14000ea89:	lea    rcx,[rsp+0x50]
   14000ea8e:	xor    edx,edx
   14000ea90:	call   0x140013d00
   14000ea95:	test   eax,eax
   14000ea97:	jns    0x14000eaae
   14000ea99:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ea9e:	test   rcx,rcx
   14000eaa1:	je     0x14000eaae
   14000eaa3:	call   0x14000b490
   14000eaa8:	and    QWORD PTR [rsp+0x50],0x0
   14000eaae:	add    rbx,0x8
   14000eab2:	mov    rax,QWORD PTR [rbx]
   14000eab5:	test   rax,rax
   14000eab8:	jne    0x14000ea17
   14000eabe:	xor    eax,eax
   14000eac0:	mov    rbx,QWORD PTR [rsp+0x58]
   14000eac5:	mov    rbp,QWORD PTR [rsp+0x60]
   14000eaca:	add    rsp,0x40
   14000eace:	pop    rdi
   14000eacf:	ret    
   14000ead0:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ead5:	call   0x14000b490
   14000eada:	mov    eax,ebp
   14000eadc:	jmp    0x14000eac0
   14000eade:	int3   
   14000eadf:	int3   
   14000eae0:	rex push rbx
   14000eae2:	sub    rsp,0x20
   14000eae6:	test   rcx,rcx
   14000eae9:	je     0x14000eaf8
   14000eaeb:	test   rdx,rdx
   14000eaee:	je     0x14000eaf8
   14000eaf0:	test   r8,r8
   14000eaf3:	jne    0x14000eb11
   14000eaf5:	mov    BYTE PTR [rcx],r8b
   14000eaf8:	call   0x14000bdf0
   14000eafd:	mov    ebx,0x16
   14000eb02:	mov    DWORD PTR [rax],ebx
   14000eb04:	call   0x14000d04c
   14000eb09:	mov    eax,ebx
   14000eb0b:	add    rsp,0x20
   14000eb0f:	pop    rbx
   14000eb10:	ret    
   14000eb11:	mov    r9,rcx
   14000eb14:	sub    r9,r8
   14000eb17:	mov    al,BYTE PTR [r8]
   14000eb1a:	mov    BYTE PTR [r9+r8*1],al
   14000eb1e:	inc    r8
   14000eb21:	test   al,al
   14000eb23:	je     0x14000eb2a
   14000eb25:	dec    rdx
   14000eb28:	jne    0x14000eb17
   14000eb2a:	test   rdx,rdx
   14000eb2d:	jne    0x14000eb3d
   14000eb2f:	mov    BYTE PTR [rcx],dl
   14000eb31:	call   0x14000bdf0
   14000eb36:	mov    ebx,0x22
   14000eb3b:	jmp    0x14000eb02
   14000eb3d:	xor    eax,eax
   14000eb3f:	jmp    0x14000eb0b
   14000eb41:	int3   
   14000eb42:	int3   
   14000eb43:	int3   
   14000eb44:	rex push rbx
   14000eb46:	sub    rsp,0x20
   14000eb4a:	and    DWORD PTR [rsp+0x40],0x0
   14000eb4f:	lea    r8,[rsp+0x40]
   14000eb54:	call   0x140015a74
   14000eb59:	mov    rbx,rax
   14000eb5c:	test   rax,rax
   14000eb5f:	jne    0x14000eb7c
   14000eb61:	cmp    DWORD PTR [rsp+0x40],eax
   14000eb65:	je     0x14000eb7c
   14000eb67:	call   0x14000bdf0
   14000eb6c:	test   rax,rax
   14000eb6f:	je     0x14000eb7c
   14000eb71:	call   0x14000bdf0
   14000eb76:	mov    ecx,DWORD PTR [rsp+0x40]
   14000eb7a:	mov    DWORD PTR [rax],ecx
   14000eb7c:	mov    rax,rbx
   14000eb7f:	add    rsp,0x20
   14000eb83:	pop    rbx
   14000eb84:	ret    
   14000eb85:	int3   
   14000eb86:	int3   
   14000eb87:	int3   
   14000eb88:	xor    eax,eax
   14000eb8a:	test   rdx,rdx
   14000eb8d:	je     0x14000eb9f
   14000eb8f:	cmp    BYTE PTR [rcx],0x0
   14000eb92:	je     0x14000eb9f
   14000eb94:	inc    rax
   14000eb97:	inc    rcx
   14000eb9a:	cmp    rax,rdx
   14000eb9d:	jb     0x14000eb8f
   14000eb9f:	repz ret 
   14000eba1:	int3   
   14000eba2:	int3   
   14000eba3:	int3   
   14000eba4:	sub    rsp,0x28
   14000eba8:	mov    rax,QWORD PTR [rcx]
   14000ebab:	cmp    DWORD PTR [rax],0xe06d7363
   14000ebb1:	jne    0x14000ebde
   14000ebb3:	cmp    DWORD PTR [rax+0x18],0x4
   14000ebb7:	jne    0x14000ebde
   14000ebb9:	mov    eax,DWORD PTR [rax+0x20]
   14000ebbc:	cmp    eax,0x19930520
   14000ebc1:	je     0x14000ebd8
   14000ebc3:	cmp    eax,0x19930521
   14000ebc8:	je     0x14000ebd8
   14000ebca:	cmp    eax,0x19930522
   14000ebcf:	je     0x14000ebd8
   14000ebd1:	cmp    eax,0x1994000
   14000ebd6:	jne    0x14000ebde
   14000ebd8:	call   0x14000cb9c
   14000ebdd:	int3   
   14000ebde:	xor    eax,eax
   14000ebe0:	add    rsp,0x28
   14000ebe4:	ret    
   14000ebe5:	int3   
   14000ebe6:	int3   
   14000ebe7:	int3   
   14000ebe8:	sub    rsp,0x28
   14000ebec:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x14000eba4
   14000ebf3:	call   QWORD PTR [rip+0xb58f]        # 0x14001a188
   14000ebf9:	xor    eax,eax
   14000ebfb:	add    rsp,0x28
   14000ebff:	ret    
   14000ec00:	mov    QWORD PTR [rsp+0x8],rbx
   14000ec05:	mov    QWORD PTR [rsp+0x10],rbp
   14000ec0a:	mov    QWORD PTR [rsp+0x18],rsi
   14000ec0f:	push   rdi
   14000ec10:	sub    rsp,0x20
   14000ec14:	mov    rsi,rdx
   14000ec17:	mov    edi,ecx
   14000ec19:	call   0x14000d1b0
   14000ec1e:	xor    r9d,r9d
   14000ec21:	mov    rbx,rax
   14000ec24:	test   rax,rax
   14000ec27:	je     0x14000edb9
   14000ec2d:	mov    rdx,QWORD PTR [rax+0xa0]
   14000ec34:	mov    rcx,rdx
   14000ec37:	cmp    DWORD PTR [rcx],edi
   14000ec39:	je     0x14000ec4b
   14000ec3b:	lea    rax,[rdx+0xc0]
   14000ec42:	add    rcx,0x10
   14000ec46:	cmp    rcx,rax
   14000ec49:	jb     0x14000ec37
   14000ec4b:	lea    rax,[rdx+0xc0]
   14000ec52:	cmp    rcx,rax
   14000ec55:	jae    0x14000ec5b
   14000ec57:	cmp    DWORD PTR [rcx],edi
   14000ec59:	je     0x14000ec5e
   14000ec5b:	mov    rcx,r9
   14000ec5e:	test   rcx,rcx
   14000ec61:	je     0x14000edb9
   14000ec67:	mov    r8,QWORD PTR [rcx+0x8]
   14000ec6b:	test   r8,r8
   14000ec6e:	je     0x14000edb9
   14000ec74:	cmp    r8,0x5
   14000ec78:	jne    0x14000ec87
   14000ec7a:	mov    QWORD PTR [rcx+0x8],r9
   14000ec7e:	lea    eax,[r8-0x4]
   14000ec82:	jmp    0x14000edbb
   14000ec87:	cmp    r8,0x1
   14000ec8b:	jne    0x14000ec95
   14000ec8d:	or     eax,0xffffffff
   14000ec90:	jmp    0x14000edbb
   14000ec95:	mov    rbp,QWORD PTR [rbx+0xa8]
   14000ec9c:	mov    QWORD PTR [rbx+0xa8],rsi
   14000eca3:	cmp    DWORD PTR [rcx+0x4],0x8
   14000eca7:	jne    0x14000eda3
   14000ecad:	mov    edx,0x30
   14000ecb2:	mov    rax,QWORD PTR [rbx+0xa0]
   14000ecb9:	add    rdx,0x10
   14000ecbd:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   14000ecc2:	cmp    rdx,0xc0
   14000ecc9:	jl     0x14000ecb2
   14000eccb:	cmp    DWORD PTR [rcx],0xc000008e
   14000ecd1:	mov    edi,DWORD PTR [rbx+0xb0]
   14000ecd7:	jne    0x14000ece8
   14000ecd9:	mov    DWORD PTR [rbx+0xb0],0x83
   14000ece3:	jmp    0x14000ed8d
   14000ece8:	cmp    DWORD PTR [rcx],0xc0000090
   14000ecee:	jne    0x14000ecff
   14000ecf0:	mov    DWORD PTR [rbx+0xb0],0x81
   14000ecfa:	jmp    0x14000ed8d
   14000ecff:	cmp    DWORD PTR [rcx],0xc0000091
   14000ed05:	jne    0x14000ed13
   14000ed07:	mov    DWORD PTR [rbx+0xb0],0x84
   14000ed11:	jmp    0x14000ed8d
   14000ed13:	cmp    DWORD PTR [rcx],0xc0000093
   14000ed19:	jne    0x14000ed27
   14000ed1b:	mov    DWORD PTR [rbx+0xb0],0x85
   14000ed25:	jmp    0x14000ed8d
   14000ed27:	cmp    DWORD PTR [rcx],0xc000008d
   14000ed2d:	jne    0x14000ed3b
   14000ed2f:	mov    DWORD PTR [rbx+0xb0],0x82
   14000ed39:	jmp    0x14000ed8d
   14000ed3b:	cmp    DWORD PTR [rcx],0xc000008f
   14000ed41:	jne    0x14000ed4f
   14000ed43:	mov    DWORD PTR [rbx+0xb0],0x86
   14000ed4d:	jmp    0x14000ed8d
   14000ed4f:	cmp    DWORD PTR [rcx],0xc0000092
   14000ed55:	jne    0x14000ed63
   14000ed57:	mov    DWORD PTR [rbx+0xb0],0x8a
   14000ed61:	jmp    0x14000ed8d
   14000ed63:	cmp    DWORD PTR [rcx],0xc00002b5
   14000ed69:	jne    0x14000ed77
   14000ed6b:	mov    DWORD PTR [rbx+0xb0],0x8d
   14000ed75:	jmp    0x14000ed8d
   14000ed77:	cmp    DWORD PTR [rcx],0xc00002b4
   14000ed7d:	mov    eax,edi
   14000ed7f:	mov    edx,0x8e
   14000ed84:	cmove  eax,edx
   14000ed87:	mov    DWORD PTR [rbx+0xb0],eax
   14000ed8d:	mov    edx,DWORD PTR [rbx+0xb0]
   14000ed93:	mov    ecx,0x8
   14000ed98:	call   r8
   14000ed9b:	mov    DWORD PTR [rbx+0xb0],edi
   14000eda1:	jmp    0x14000edad
   14000eda3:	mov    QWORD PTR [rcx+0x8],r9
   14000eda7:	mov    ecx,DWORD PTR [rcx+0x4]
   14000edaa:	call   r8
   14000edad:	mov    QWORD PTR [rbx+0xa8],rbp
   14000edb4:	jmp    0x14000ec8d
   14000edb9:	xor    eax,eax
   14000edbb:	mov    rbx,QWORD PTR [rsp+0x30]
   14000edc0:	mov    rbp,QWORD PTR [rsp+0x38]
   14000edc5:	mov    rsi,QWORD PTR [rsp+0x40]
   14000edca:	add    rsp,0x20
   14000edce:	pop    rdi
   14000edcf:	ret    
   14000edd0:	mov    QWORD PTR [rsp+0x8],rbx
   14000edd5:	push   rdi
   14000edd6:	sub    rsp,0x20
   14000edda:	xor    edi,edi
   14000eddc:	cmp    DWORD PTR [rip+0x17ee6],edi        # 0x140026cc8
   14000ede2:	jne    0x14000ede9
   14000ede4:	call   0x1400149b0
   14000ede9:	mov    rbx,QWORD PTR [rip+0x17eb8]        # 0x140026ca8
   14000edf0:	lea    rax,[rip+0xc69c]        # 0x14001b493
   14000edf7:	test   rbx,rbx
   14000edfa:	cmove  rbx,rax
   14000edfe:	cmp    BYTE PTR [rbx],0x20
   14000ee01:	ja     0x14000ee0c
   14000ee03:	cmp    BYTE PTR [rbx],0x0
   14000ee06:	je     0x14000ee3b
   14000ee08:	test   edi,edi
   14000ee0a:	je     0x14000ee35
   14000ee0c:	cmp    BYTE PTR [rbx],0x22
   14000ee0f:	jne    0x14000ee1a
   14000ee11:	xor    eax,eax
   14000ee13:	test   edi,edi
   14000ee15:	sete   al
   14000ee18:	mov    edi,eax
   14000ee1a:	movzx  ecx,BYTE PTR [rbx]
   14000ee1d:	call   0x140015b8c
   14000ee22:	test   eax,eax
   14000ee24:	je     0x14000ee29
   14000ee26:	inc    rbx
   14000ee29:	inc    rbx
   14000ee2c:	jmp    0x14000edfe
   14000ee2e:	cmp    al,0x20
   14000ee30:	ja     0x14000ee3b
   14000ee32:	inc    rbx
   14000ee35:	mov    al,BYTE PTR [rbx]
   14000ee37:	test   al,al
   14000ee39:	jne    0x14000ee2e
   14000ee3b:	mov    rax,rbx
   14000ee3e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ee43:	add    rsp,0x20
   14000ee47:	pop    rdi
   14000ee48:	ret    
   14000ee49:	int3   
   14000ee4a:	int3   
   14000ee4b:	int3   
   14000ee4c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ee51:	mov    QWORD PTR [rsp+0x10],rbp
   14000ee56:	mov    QWORD PTR [rsp+0x18],rsi
   14000ee5b:	push   rdi
   14000ee5c:	sub    rsp,0x30
   14000ee60:	cmp    DWORD PTR [rip+0x17e61],0x0        # 0x140026cc8
   14000ee67:	jne    0x14000ee6e
   14000ee69:	call   0x1400149b0
   14000ee6e:	mov    rbx,QWORD PTR [rip+0x15b6b]        # 0x1400249e0
   14000ee75:	xor    edi,edi
   14000ee77:	test   rbx,rbx
   14000ee7a:	jne    0x14000ee97
   14000ee7c:	or     eax,0xffffffff
   14000ee7f:	jmp    0x14000ef38
   14000ee84:	cmp    al,0x3d
   14000ee86:	je     0x14000ee8a
   14000ee88:	inc    edi
   14000ee8a:	mov    rcx,rbx
   14000ee8d:	call   0x140009fd0
   14000ee92:	lea    rbx,[rbx+rax*1+0x1]
   14000ee97:	mov    al,BYTE PTR [rbx]
   14000ee99:	test   al,al
   14000ee9b:	jne    0x14000ee84
   14000ee9d:	lea    eax,[rdi+0x1]
   14000eea0:	mov    edx,0x8
   14000eea5:	movsxd rcx,eax
   14000eea8:	call   0x140010bd0
   14000eead:	mov    rdi,rax
   14000eeb0:	mov    QWORD PTR [rip+0x15ae1],rax        # 0x140024998
   14000eeb7:	test   rax,rax
   14000eeba:	je     0x14000ee7c
   14000eebc:	mov    rbx,QWORD PTR [rip+0x15b1d]        # 0x1400249e0
   14000eec3:	cmp    BYTE PTR [rbx],0x0
   14000eec6:	je     0x14000ef18
   14000eec8:	mov    rcx,rbx
   14000eecb:	call   0x140009fd0
   14000eed0:	cmp    BYTE PTR [rbx],0x3d
   14000eed3:	lea    esi,[rax+0x1]
   14000eed6:	je     0x14000ef06
   14000eed8:	movsxd rbp,esi
   14000eedb:	mov    edx,0x1
   14000eee0:	mov    rcx,rbp
   14000eee3:	call   0x140010bd0
   14000eee8:	mov    QWORD PTR [rdi],rax
   14000eeeb:	test   rax,rax
   14000eeee:	je     0x14000ef63
   14000eef0:	mov    r8,rbx
   14000eef3:	mov    rdx,rbp
   14000eef6:	mov    rcx,rax
   14000eef9:	call   0x14000eae0
   14000eefe:	test   eax,eax
   14000ef00:	jne    0x14000ef4d
   14000ef02:	add    rdi,0x8
   14000ef06:	movsxd rax,esi
   14000ef09:	add    rbx,rax
   14000ef0c:	cmp    BYTE PTR [rbx],0x0
   14000ef0f:	jne    0x14000eec8
   14000ef11:	mov    rbx,QWORD PTR [rip+0x15ac8]        # 0x1400249e0
   14000ef18:	mov    rcx,rbx
   14000ef1b:	call   0x14000b490
   14000ef20:	and    QWORD PTR [rip+0x15ab8],0x0        # 0x1400249e0
   14000ef28:	and    QWORD PTR [rdi],0x0
   14000ef2c:	mov    DWORD PTR [rip+0x17d7a],0x1        # 0x140026cb0
   14000ef36:	xor    eax,eax
   14000ef38:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ef3d:	mov    rbp,QWORD PTR [rsp+0x48]
   14000ef42:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ef47:	add    rsp,0x30
   14000ef4b:	pop    rdi
   14000ef4c:	ret    
   14000ef4d:	and    QWORD PTR [rsp+0x20],0x0
   14000ef53:	xor    r9d,r9d
   14000ef56:	xor    r8d,r8d
   14000ef59:	xor    edx,edx
   14000ef5b:	xor    ecx,ecx
   14000ef5d:	call   0x14000cfa8
   14000ef62:	int3   
   14000ef63:	mov    rcx,QWORD PTR [rip+0x15a2e]        # 0x140024998
   14000ef6a:	call   0x14000b490
   14000ef6f:	and    QWORD PTR [rip+0x15a21],0x0        # 0x140024998
   14000ef77:	jmp    0x14000ee7c
   14000ef7c:	mov    rax,rsp
   14000ef7f:	mov    QWORD PTR [rax+0x8],rbx
   14000ef83:	mov    QWORD PTR [rax+0x10],rbp
   14000ef87:	mov    QWORD PTR [rax+0x18],rsi
   14000ef8b:	mov    QWORD PTR [rax+0x20],rdi
   14000ef8f:	push   r12
   14000ef91:	push   r13
   14000ef93:	push   r14
   14000ef95:	sub    rsp,0x20
   14000ef99:	mov    r13,QWORD PTR [rsp+0x60]
   14000ef9e:	mov    r14,r9
   14000efa1:	mov    rdi,r8
   14000efa4:	and    DWORD PTR [r13+0x0],0x0
   14000efa9:	mov    r12,rdx
   14000efac:	mov    rbx,rcx
   14000efaf:	mov    DWORD PTR [r9],0x1
   14000efb6:	test   rdx,rdx
   14000efb9:	je     0x14000efc2
   14000efbb:	mov    QWORD PTR [rdx],r8
   14000efbe:	add    r12,0x8
   14000efc2:	xor    ebp,ebp
   14000efc4:	cmp    BYTE PTR [rbx],0x22
   14000efc7:	jne    0x14000efda
   14000efc9:	xor    eax,eax
   14000efcb:	test   ebp,ebp
   14000efcd:	mov    sil,0x22
   14000efd0:	sete   al
   14000efd3:	inc    rbx
   14000efd6:	mov    ebp,eax
   14000efd8:	jmp    0x14000f013
   14000efda:	inc    DWORD PTR [r13+0x0]
   14000efde:	test   rdi,rdi
   14000efe1:	je     0x14000efea
   14000efe3:	mov    al,BYTE PTR [rbx]
   14000efe5:	mov    BYTE PTR [rdi],al
   14000efe7:	inc    rdi
   14000efea:	movzx  esi,BYTE PTR [rbx]
   14000efed:	inc    rbx
   14000eff0:	mov    ecx,esi
   14000eff2:	call   0x140015b8c
   14000eff7:	test   eax,eax
   14000eff9:	je     0x14000f00e
   14000effb:	inc    DWORD PTR [r13+0x0]
   14000efff:	test   rdi,rdi
   14000f002:	je     0x14000f00b
   14000f004:	mov    al,BYTE PTR [rbx]
   14000f006:	mov    BYTE PTR [rdi],al
   14000f008:	inc    rdi
   14000f00b:	inc    rbx
   14000f00e:	test   sil,sil
   14000f011:	je     0x14000f02e
   14000f013:	test   ebp,ebp
   14000f015:	jne    0x14000efc4
   14000f017:	cmp    sil,0x20
   14000f01b:	je     0x14000f023
   14000f01d:	cmp    sil,0x9
   14000f021:	jne    0x14000efc4
   14000f023:	test   rdi,rdi
   14000f026:	je     0x14000f031
   14000f028:	mov    BYTE PTR [rdi-0x1],0x0
   14000f02c:	jmp    0x14000f031
   14000f02e:	dec    rbx
   14000f031:	xor    esi,esi
   14000f033:	cmp    BYTE PTR [rbx],0x0
   14000f036:	je     0x14000f11f
   14000f03c:	cmp    BYTE PTR [rbx],0x20
   14000f03f:	je     0x14000f046
   14000f041:	cmp    BYTE PTR [rbx],0x9
   14000f044:	jne    0x14000f04b
   14000f046:	inc    rbx
   14000f049:	jmp    0x14000f03c
   14000f04b:	cmp    BYTE PTR [rbx],0x0
   14000f04e:	je     0x14000f11f
   14000f054:	test   r12,r12
   14000f057:	je     0x14000f061
   14000f059:	mov    QWORD PTR [r12],rdi
   14000f05d:	add    r12,0x8
   14000f061:	inc    DWORD PTR [r14]
   14000f064:	mov    edx,0x1
   14000f069:	xor    ecx,ecx
   14000f06b:	jmp    0x14000f072
   14000f06d:	inc    rbx
   14000f070:	inc    ecx
   14000f072:	cmp    BYTE PTR [rbx],0x5c
   14000f075:	je     0x14000f06d
   14000f077:	cmp    BYTE PTR [rbx],0x22
   14000f07a:	jne    0x14000f0b2
   14000f07c:	test   dl,cl
   14000f07e:	jne    0x14000f09d
   14000f080:	test   esi,esi
   14000f082:	je     0x14000f092
   14000f084:	lea    rax,[rbx+0x1]
   14000f088:	cmp    BYTE PTR [rax],0x22
   14000f08b:	jne    0x14000f092
   14000f08d:	mov    rbx,rax
   14000f090:	jmp    0x14000f09d
   14000f092:	xor    eax,eax
   14000f094:	xor    edx,edx
   14000f096:	test   esi,esi
   14000f098:	sete   al
   14000f09b:	mov    esi,eax
   14000f09d:	shr    ecx,1
   14000f09f:	jmp    0x14000f0b2
   14000f0a1:	dec    ecx
   14000f0a3:	test   rdi,rdi
   14000f0a6:	je     0x14000f0ae
   14000f0a8:	mov    BYTE PTR [rdi],0x5c
   14000f0ab:	inc    rdi
   14000f0ae:	inc    DWORD PTR [r13+0x0]
   14000f0b2:	test   ecx,ecx
   14000f0b4:	jne    0x14000f0a1
   14000f0b6:	mov    al,BYTE PTR [rbx]
   14000f0b8:	test   al,al
   14000f0ba:	je     0x14000f10b
   14000f0bc:	test   esi,esi
   14000f0be:	jne    0x14000f0c8
   14000f0c0:	cmp    al,0x20
   14000f0c2:	je     0x14000f10b
   14000f0c4:	cmp    al,0x9
   14000f0c6:	je     0x14000f10b
   14000f0c8:	test   edx,edx
   14000f0ca:	je     0x14000f103
   14000f0cc:	movsx  ecx,al
   14000f0cf:	call   0x140015b8c
   14000f0d4:	test   rdi,rdi
   14000f0d7:	je     0x14000f0f4
   14000f0d9:	test   eax,eax
   14000f0db:	je     0x14000f0eb
   14000f0dd:	mov    al,BYTE PTR [rbx]
   14000f0df:	inc    rbx
   14000f0e2:	mov    BYTE PTR [rdi],al
   14000f0e4:	inc    rdi
   14000f0e7:	inc    DWORD PTR [r13+0x0]
   14000f0eb:	mov    al,BYTE PTR [rbx]
   14000f0ed:	mov    BYTE PTR [rdi],al
   14000f0ef:	inc    rdi
   14000f0f2:	jmp    0x14000f0ff
   14000f0f4:	test   eax,eax
   14000f0f6:	je     0x14000f0ff
   14000f0f8:	inc    rbx
   14000f0fb:	inc    DWORD PTR [r13+0x0]
   14000f0ff:	inc    DWORD PTR [r13+0x0]
   14000f103:	inc    rbx
   14000f106:	jmp    0x14000f064
   14000f10b:	test   rdi,rdi
   14000f10e:	je     0x14000f116
   14000f110:	mov    BYTE PTR [rdi],0x0
   14000f113:	inc    rdi
   14000f116:	inc    DWORD PTR [r13+0x0]
   14000f11a:	jmp    0x14000f033
   14000f11f:	test   r12,r12
   14000f122:	je     0x14000f129
   14000f124:	and    QWORD PTR [r12],0x0
   14000f129:	inc    DWORD PTR [r14]
   14000f12c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f131:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f136:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f13b:	mov    rdi,QWORD PTR [rsp+0x58]
   14000f140:	add    rsp,0x20
   14000f144:	pop    r14
   14000f146:	pop    r13
   14000f148:	pop    r12
   14000f14a:	ret    
   14000f14b:	int3   
   14000f14c:	mov    QWORD PTR [rsp+0x18],rbx
   14000f151:	mov    QWORD PTR [rsp+0x20],rsi
   14000f156:	push   rdi
   14000f157:	sub    rsp,0x30
   14000f15b:	cmp    DWORD PTR [rip+0x17b66],0x0        # 0x140026cc8
   14000f162:	jne    0x14000f169
   14000f164:	call   0x1400149b0
   14000f169:	lea    rdi,[rip+0x16150]        # 0x1400252c0
   14000f170:	mov    r8d,0x104
   14000f176:	xor    ecx,ecx
   14000f178:	mov    rdx,rdi
   14000f17b:	mov    BYTE PTR [rip+0x16242],0x0        # 0x1400253c4
   14000f182:	call   QWORD PTR [rip+0xaec0]        # 0x14001a048
   14000f188:	mov    rbx,QWORD PTR [rip+0x17b19]        # 0x140026ca8
   14000f18f:	mov    QWORD PTR [rip+0x15822],rdi        # 0x1400249b8
   14000f196:	test   rbx,rbx
   14000f199:	je     0x14000f1a0
   14000f19b:	cmp    BYTE PTR [rbx],0x0
   14000f19e:	jne    0x14000f1a3
   14000f1a0:	mov    rbx,rdi
   14000f1a3:	lea    rax,[rsp+0x48]
   14000f1a8:	lea    r9,[rsp+0x40]
   14000f1ad:	xor    r8d,r8d
   14000f1b0:	xor    edx,edx
   14000f1b2:	mov    rcx,rbx
   14000f1b5:	mov    QWORD PTR [rsp+0x20],rax
   14000f1ba:	call   0x14000ef7c
   14000f1bf:	movsxd rsi,DWORD PTR [rsp+0x40]
   14000f1c4:	movabs rcx,0x1fffffffffffffff
   14000f1ce:	cmp    rsi,rcx
   14000f1d1:	jae    0x14000f22f
   14000f1d3:	movsxd rcx,DWORD PTR [rsp+0x48]
   14000f1d8:	cmp    rcx,0xffffffffffffffff
   14000f1dc:	jae    0x14000f22f
   14000f1de:	lea    rdx,[rcx+rsi*8]
   14000f1e2:	cmp    rdx,rcx
   14000f1e5:	jb     0x14000f22f
   14000f1e7:	mov    rcx,rdx
   14000f1ea:	call   0x140010b50
   14000f1ef:	mov    rdi,rax
   14000f1f2:	test   rax,rax
   14000f1f5:	je     0x14000f22f
   14000f1f7:	lea    r8,[rax+rsi*8]
   14000f1fb:	lea    rax,[rsp+0x48]
   14000f200:	lea    r9,[rsp+0x40]
   14000f205:	mov    rdx,rdi
   14000f208:	mov    rcx,rbx
   14000f20b:	mov    QWORD PTR [rsp+0x20],rax
   14000f210:	call   0x14000ef7c
   14000f215:	mov    r11d,DWORD PTR [rsp+0x40]
   14000f21a:	mov    QWORD PTR [rip+0x15767],rdi        # 0x140024988
   14000f221:	dec    r11d
   14000f224:	xor    eax,eax
   14000f226:	mov    DWORD PTR [rip+0x15757],r11d        # 0x140024984
   14000f22d:	jmp    0x14000f232
   14000f22f:	or     eax,0xffffffff
   14000f232:	mov    rbx,QWORD PTR [rsp+0x50]
   14000f237:	mov    rsi,QWORD PTR [rsp+0x58]
   14000f23c:	add    rsp,0x30
   14000f240:	pop    rdi
   14000f241:	ret    
   14000f242:	int3   
   14000f243:	int3   
   14000f244:	mov    rax,rsp
   14000f247:	mov    QWORD PTR [rax+0x8],rbx
   14000f24b:	mov    QWORD PTR [rax+0x10],rbp
   14000f24f:	mov    QWORD PTR [rax+0x18],rsi
   14000f253:	mov    QWORD PTR [rax+0x20],rdi
   14000f257:	push   r12
   14000f259:	sub    rsp,0x40
   14000f25d:	call   QWORD PTR [rip+0xafb5]        # 0x14001a218
   14000f263:	xor    r12d,r12d
   14000f266:	mov    rdi,rax
   14000f269:	test   rax,rax
   14000f26c:	je     0x14000f31b
   14000f272:	mov    rbx,rax
   14000f275:	cmp    WORD PTR [rax],r12w
   14000f279:	je     0x14000f28f
   14000f27b:	add    rbx,0x2
   14000f27f:	cmp    WORD PTR [rbx],r12w
   14000f283:	jne    0x14000f27b
   14000f285:	add    rbx,0x2
   14000f289:	cmp    WORD PTR [rbx],r12w
   14000f28d:	jne    0x14000f27b
   14000f28f:	mov    QWORD PTR [rsp+0x38],r12
   14000f294:	sub    rbx,rax
   14000f297:	mov    QWORD PTR [rsp+0x30],r12
   14000f29c:	sar    rbx,1
   14000f29f:	mov    r8,rax
   14000f2a2:	xor    edx,edx
   14000f2a4:	lea    r9d,[rbx+0x1]
   14000f2a8:	xor    ecx,ecx
   14000f2aa:	mov    DWORD PTR [rsp+0x28],r12d
   14000f2af:	mov    QWORD PTR [rsp+0x20],r12
   14000f2b4:	call   QWORD PTR [rip+0xaf4e]        # 0x14001a208
   14000f2ba:	movsxd rbp,eax
   14000f2bd:	test   eax,eax
   14000f2bf:	je     0x14000f312
   14000f2c1:	mov    rcx,rbp
   14000f2c4:	call   0x140010b50
   14000f2c9:	mov    rsi,rax
   14000f2cc:	test   rax,rax
   14000f2cf:	je     0x14000f312
   14000f2d1:	mov    QWORD PTR [rsp+0x38],r12
   14000f2d6:	mov    QWORD PTR [rsp+0x30],r12
   14000f2db:	lea    r9d,[rbx+0x1]
   14000f2df:	mov    r8,rdi
   14000f2e2:	xor    edx,edx
   14000f2e4:	xor    ecx,ecx
   14000f2e6:	mov    DWORD PTR [rsp+0x28],ebp
   14000f2ea:	mov    QWORD PTR [rsp+0x20],rax
   14000f2ef:	call   QWORD PTR [rip+0xaf13]        # 0x14001a208
   14000f2f5:	test   eax,eax
   14000f2f7:	jne    0x14000f304
   14000f2f9:	mov    rcx,rsi
   14000f2fc:	call   0x14000b490
   14000f301:	mov    rsi,r12
   14000f304:	mov    rcx,rdi
   14000f307:	call   QWORD PTR [rip+0xaf03]        # 0x14001a210
   14000f30d:	mov    rax,rsi
   14000f310:	jmp    0x14000f31d
   14000f312:	mov    rcx,rdi
   14000f315:	call   QWORD PTR [rip+0xaef5]        # 0x14001a210
   14000f31b:	xor    eax,eax
   14000f31d:	mov    rbx,QWORD PTR [rsp+0x50]
   14000f322:	mov    rbp,QWORD PTR [rsp+0x58]
   14000f327:	mov    rsi,QWORD PTR [rsp+0x60]
   14000f32c:	mov    rdi,QWORD PTR [rsp+0x68]
   14000f331:	add    rsp,0x40
   14000f335:	pop    r12
   14000f337:	ret    
   14000f338:	mov    QWORD PTR [rsp+0x8],rbx
   14000f33d:	mov    QWORD PTR [rsp+0x10],rbp
   14000f342:	mov    QWORD PTR [rsp+0x18],rdi
   14000f347:	push   r12
   14000f349:	push   r13
   14000f34b:	push   r14
   14000f34d:	sub    rsp,0x90
   14000f354:	lea    rcx,[rsp+0x20]
   14000f359:	call   QWORD PTR [rip+0xad89]        # 0x14001a0e8
   14000f35f:	mov    edx,0x58
   14000f364:	lea    ebp,[rdx-0x38]
   14000f367:	mov    ecx,ebp
   14000f369:	call   0x140010bd0
   14000f36e:	xor    r14d,r14d
   14000f371:	mov    rdx,rax
   14000f374:	test   rax,rax
   14000f377:	jne    0x14000f381
   14000f379:	or     eax,0xffffffff
   14000f37c:	jmp    0x14000f5ec
   14000f381:	mov    QWORD PTR [rip+0x166f8],rax        # 0x140025a80
   14000f388:	add    rax,0xb00
   14000f38e:	mov    ecx,ebp
   14000f390:	mov    DWORD PTR [rip+0x166d6],ecx        # 0x140025a6c
   14000f396:	cmp    rdx,rax
   14000f399:	jae    0x14000f3e0
   14000f39b:	add    rdx,0x9
   14000f39f:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   14000f3a4:	mov    WORD PTR [rdx-0x1],0xa00
   14000f3aa:	mov    DWORD PTR [rdx+0x3],r14d
   14000f3ae:	mov    WORD PTR [rdx+0x2f],0xa00
   14000f3b4:	mov    BYTE PTR [rdx+0x31],0xa
   14000f3b8:	mov    DWORD PTR [rdx+0x47],r14d
   14000f3bc:	mov    BYTE PTR [rdx+0x43],r14b
   14000f3c0:	mov    rax,QWORD PTR [rip+0x166b9]        # 0x140025a80
   14000f3c7:	add    rdx,0x58
   14000f3cb:	lea    rcx,[rdx-0x9]
   14000f3cf:	add    rax,0xb00
   14000f3d5:	cmp    rcx,rax
   14000f3d8:	jb     0x14000f39f
   14000f3da:	mov    ecx,DWORD PTR [rip+0x1668c]        # 0x140025a6c
   14000f3e0:	cmp    WORD PTR [rsp+0x62],r14w
   14000f3e6:	je     0x14000f520
   14000f3ec:	mov    rax,QWORD PTR [rsp+0x68]
   14000f3f1:	test   rax,rax
   14000f3f4:	je     0x14000f520
   14000f3fa:	movsxd r12,DWORD PTR [rax]
   14000f3fd:	mov    ebx,0x800
   14000f402:	lea    r13,[rax+0x4]
   14000f406:	add    r12,r13
   14000f409:	cmp    DWORD PTR [rax],ebx
   14000f40b:	cmovl  ebx,DWORD PTR [rax]
   14000f40e:	cmp    ecx,ebx
   14000f410:	jge    0x14000f49d
   14000f416:	lea    rdi,[rip+0x1666b]        # 0x140025a88
   14000f41d:	mov    edx,0x58
   14000f422:	mov    rcx,rbp
   14000f425:	call   0x140010bd0
   14000f42a:	test   rax,rax
   14000f42d:	je     0x14000f497
   14000f42f:	mov    edx,DWORD PTR [rip+0x16637]        # 0x140025a6c
   14000f435:	lea    rcx,[rax+0xb00]
   14000f43c:	mov    QWORD PTR [rdi],rax
   14000f43f:	add    edx,ebp
   14000f441:	mov    DWORD PTR [rip+0x16625],edx        # 0x140025a6c
   14000f447:	cmp    rax,rcx
   14000f44a:	jae    0x14000f48d
   14000f44c:	lea    rdx,[rax+0x9]
   14000f450:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   14000f455:	and    BYTE PTR [rdx+0x2f],0x80
   14000f459:	mov    WORD PTR [rdx-0x1],0xa00
   14000f45f:	mov    DWORD PTR [rdx+0x3],r14d
   14000f463:	mov    WORD PTR [rdx+0x30],0xa0a
   14000f469:	mov    DWORD PTR [rdx+0x47],r14d
   14000f46d:	mov    BYTE PTR [rdx+0x43],r14b
   14000f471:	mov    rax,QWORD PTR [rdi]
   14000f474:	add    rdx,0x58
   14000f478:	lea    rcx,[rdx-0x9]
   14000f47c:	add    rax,0xb00
   14000f482:	cmp    rcx,rax
   14000f485:	jb     0x14000f450
   14000f487:	mov    edx,DWORD PTR [rip+0x165df]        # 0x140025a6c
   14000f48d:	add    rdi,0x8
   14000f491:	cmp    edx,ebx
   14000f493:	jl     0x14000f41d
   14000f495:	jmp    0x14000f49d
   14000f497:	mov    ebx,DWORD PTR [rip+0x165cf]        # 0x140025a6c
   14000f49d:	mov    edi,r14d
   14000f4a0:	test   ebx,ebx
   14000f4a2:	jle    0x14000f520
   14000f4a4:	cmp    QWORD PTR [r12],0xffffffffffffffff
   14000f4a9:	je     0x14000f513
   14000f4ab:	cmp    QWORD PTR [r12],0xfffffffffffffffe
   14000f4b0:	je     0x14000f513
   14000f4b2:	test   BYTE PTR [r13+0x0],0x1
   14000f4b7:	je     0x14000f513
   14000f4b9:	test   BYTE PTR [r13+0x0],0x8
   14000f4be:	jne    0x14000f4ce
   14000f4c0:	mov    rcx,QWORD PTR [r12]
   14000f4c4:	call   QWORD PTR [rip+0xad5e]        # 0x14001a228
   14000f4ca:	test   eax,eax
   14000f4cc:	je     0x14000f513
   14000f4ce:	movsxd rbp,edi
   14000f4d1:	lea    rcx,[rip+0x165a8]        # 0x140025a80
   14000f4d8:	mov    edx,0xfa0
   14000f4dd:	mov    rax,rbp
   14000f4e0:	and    ebp,0x1f
   14000f4e3:	sar    rax,0x5
   14000f4e7:	imul   rbp,rbp,0x58
   14000f4eb:	add    rbp,QWORD PTR [rcx+rax*8]
   14000f4ef:	mov    rax,QWORD PTR [r12]
   14000f4f3:	mov    QWORD PTR [rbp+0x0],rax
   14000f4f7:	mov    al,BYTE PTR [r13+0x0]
   14000f4fb:	lea    rcx,[rbp+0x10]
   14000f4ff:	mov    BYTE PTR [rbp+0x8],al
   14000f502:	call   QWORD PTR [rip+0xac58]        # 0x14001a160
   14000f508:	test   eax,eax
   14000f50a:	je     0x14000f379
   14000f510:	inc    DWORD PTR [rbp+0xc]
   14000f513:	inc    edi
   14000f515:	inc    r13
   14000f518:	add    r12,0x8
   14000f51c:	cmp    edi,ebx
   14000f51e:	jl     0x14000f4a4
   14000f520:	mov    r12d,r14d
   14000f523:	mov    rbx,r14
   14000f526:	mov    rdi,QWORD PTR [rip+0x16553]        # 0x140025a80
   14000f52d:	cmp    QWORD PTR [rbx+rdi*1],0xffffffffffffffff
   14000f532:	je     0x14000f545
   14000f534:	cmp    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   14000f539:	je     0x14000f545
   14000f53b:	or     BYTE PTR [rbx+rdi*1+0x8],0x80
   14000f540:	jmp    0x14000f5ca
   14000f545:	lea    eax,[r12-0x1]
   14000f54a:	mov    BYTE PTR [rbx+rdi*1+0x8],0x81
   14000f54f:	neg    eax
   14000f551:	mov    eax,0xfffffff6
   14000f556:	sbb    ecx,ecx
   14000f558:	add    ecx,0xfffffff5
   14000f55b:	test   r12d,r12d
   14000f55e:	cmove  ecx,eax
   14000f561:	call   QWORD PTR [rip+0xac91]        # 0x14001a1f8
   14000f567:	mov    rbp,rax
   14000f56a:	cmp    rax,0xffffffffffffffff
   14000f56e:	je     0x14000f5bd
   14000f570:	test   rax,rax
   14000f573:	je     0x14000f5bd
   14000f575:	mov    rcx,rax
   14000f578:	call   QWORD PTR [rip+0xacaa]        # 0x14001a228
   14000f57e:	test   eax,eax
   14000f580:	je     0x14000f5bd
   14000f582:	movzx  eax,al
   14000f585:	mov    QWORD PTR [rbx+rdi*1],rbp
   14000f589:	cmp    eax,0x2
   14000f58c:	jne    0x14000f595
   14000f58e:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   14000f593:	jmp    0x14000f59f
   14000f595:	cmp    eax,0x3
   14000f598:	jne    0x14000f59f
   14000f59a:	or     BYTE PTR [rbx+rdi*1+0x8],0x8
   14000f59f:	lea    rcx,[rbx+rdi*1+0x10]
   14000f5a4:	mov    edx,0xfa0
   14000f5a9:	call   QWORD PTR [rip+0xabb1]        # 0x14001a160
   14000f5af:	test   eax,eax
   14000f5b1:	je     0x14000f379
   14000f5b7:	inc    DWORD PTR [rbx+rdi*1+0xc]
   14000f5bb:	jmp    0x14000f5ca
   14000f5bd:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   14000f5c2:	mov    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   14000f5ca:	add    rbx,0x58
   14000f5ce:	inc    r12d
   14000f5d1:	cmp    rbx,0x108
   14000f5d8:	jl     0x14000f526
   14000f5de:	mov    ecx,DWORD PTR [rip+0x16488]        # 0x140025a6c
   14000f5e4:	call   QWORD PTR [rip+0xac36]        # 0x14001a220
   14000f5ea:	xor    eax,eax
   14000f5ec:	lea    r11,[rsp+0x90]
   14000f5f4:	mov    rbx,QWORD PTR [r11+0x20]
   14000f5f8:	mov    rbp,QWORD PTR [r11+0x28]
   14000f5fc:	mov    rdi,QWORD PTR [r11+0x30]
   14000f600:	mov    rsp,r11
   14000f603:	pop    r14
   14000f605:	pop    r13
   14000f607:	pop    r12
   14000f609:	ret    
   14000f60a:	int3   
   14000f60b:	int3   
   14000f60c:	sub    rsp,0x28
   14000f610:	xor    r8d,r8d
   14000f613:	mov    edx,0x1000
   14000f618:	xor    ecx,ecx
   14000f61a:	mov    DWORD PTR [rsp+0x30],0x2
   14000f622:	call   QWORD PTR [rip+0xac18]        # 0x14001a240
   14000f628:	mov    QWORD PTR [rip+0x15d99],rax        # 0x1400253c8
   14000f62f:	test   rax,rax
   14000f632:	je     0x14000f65d
   14000f634:	call   QWORD PTR [rip+0xabfe]        # 0x14001a238
   14000f63a:	cmp    al,0x6
   14000f63c:	jae    0x14000f658
   14000f63e:	mov    rcx,QWORD PTR [rip+0x15d83]        # 0x1400253c8
   14000f645:	lea    r8,[rsp+0x30]
   14000f64a:	mov    r9d,0x4
   14000f650:	xor    edx,edx
   14000f652:	call   QWORD PTR [rip+0xabd8]        # 0x14001a230
   14000f658:	mov    eax,0x1
   14000f65d:	add    rsp,0x28
   14000f661:	ret    
   14000f662:	int3   
   14000f663:	int3   
   14000f664:	mov    QWORD PTR [rsp+0x18],rbx
   14000f669:	push   rdi
   14000f66a:	sub    rsp,0x20
   14000f66e:	mov    rax,QWORD PTR [rip+0x13a4b]        # 0x1400230c0
   14000f675:	and    QWORD PTR [rsp+0x30],0x0
   14000f67b:	movabs rdi,0x2b992ddfa232
   14000f685:	cmp    rax,rdi
   14000f688:	je     0x14000f696
   14000f68a:	not    rax
   14000f68d:	mov    QWORD PTR [rip+0x13a34],rax        # 0x1400230c8
   14000f694:	jmp    0x14000f70c
   14000f696:	lea    rcx,[rsp+0x30]
   14000f69b:	call   QWORD PTR [rip+0xabb7]        # 0x14001a258
   14000f6a1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f6a6:	call   QWORD PTR [rip+0xaba4]        # 0x14001a250
   14000f6ac:	mov    r11d,eax
   14000f6af:	xor    rbx,r11
   14000f6b2:	call   QWORD PTR [rip+0xaa98]        # 0x14001a150
   14000f6b8:	mov    r11d,eax
   14000f6bb:	xor    rbx,r11
   14000f6be:	call   QWORD PTR [rip+0xab84]        # 0x14001a248
   14000f6c4:	lea    rcx,[rsp+0x38]
   14000f6c9:	mov    r11d,eax
   14000f6cc:	xor    rbx,r11
   14000f6cf:	call   QWORD PTR [rip+0xa97b]        # 0x14001a050
   14000f6d5:	mov    r11,QWORD PTR [rsp+0x38]
   14000f6da:	xor    r11,rbx
   14000f6dd:	movabs rax,0xffffffffffff
   14000f6e7:	and    r11,rax
   14000f6ea:	movabs rax,0x2b992ddfa233
   14000f6f4:	cmp    r11,rdi
   14000f6f7:	cmove  r11,rax
   14000f6fb:	mov    QWORD PTR [rip+0x139be],r11        # 0x1400230c0
   14000f702:	not    r11
   14000f705:	mov    QWORD PTR [rip+0x139bc],r11        # 0x1400230c8
   14000f70c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f711:	add    rsp,0x20
   14000f715:	pop    rdi
   14000f716:	ret    
   14000f717:	int3   
   14000f718:	mov    QWORD PTR [rsp+0x8],rbx
   14000f71d:	mov    QWORD PTR [rsp+0x10],rsi
   14000f722:	push   rdi
   14000f723:	sub    rsp,0x20
   14000f727:	mov    rsi,r9
   14000f72a:	mov    rdi,r8
   14000f72d:	mov    rbx,rdx
   14000f730:	cmp    rcx,QWORD PTR [rdx]
   14000f733:	jne    0x14000f799
   14000f735:	cmp    QWORD PTR [r8],r9
   14000f738:	jne    0x14000f777
   14000f73a:	mov    rcx,QWORD PTR [rbx]
   14000f73d:	mov    edx,0x2
   14000f742:	call   0x140010bd0
   14000f747:	mov    QWORD PTR [rdi],rax
   14000f74a:	test   rax,rax
   14000f74d:	jne    0x14000f753
   14000f74f:	xor    eax,eax
   14000f751:	jmp    0x14000f79e
   14000f753:	mov    rax,QWORD PTR [rsp+0x50]
   14000f758:	mov    rdx,rsi
   14000f75b:	mov    DWORD PTR [rax],0x1
   14000f761:	mov    r8,QWORD PTR [rbx]
   14000f764:	mov    rcx,QWORD PTR [rdi]
   14000f767:	call   0x14000a170
   14000f76c:	mov    r11,QWORD PTR [rbx]
   14000f76f:	add    r11,r11
   14000f772:	mov    QWORD PTR [rbx],r11
   14000f775:	jmp    0x14000f799
   14000f777:	mov    rdx,QWORD PTR [rdx]
   14000f77a:	mov    rcx,QWORD PTR [rdi]
   14000f77d:	mov    r8d,0x2
   14000f783:	call   0x140010cdc
   14000f788:	test   rax,rax
   14000f78b:	je     0x14000f74f
   14000f78d:	mov    QWORD PTR [rdi],rax
   14000f790:	mov    rcx,QWORD PTR [rbx]
   14000f793:	add    rcx,rcx
   14000f796:	mov    QWORD PTR [rbx],rcx
   14000f799:	mov    eax,0x1
   14000f79e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f7a3:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f7a8:	add    rsp,0x20
   14000f7ac:	pop    rdi
   14000f7ad:	ret    
   14000f7ae:	int3   
   14000f7af:	int3   
   14000f7b0:	sub    rsp,0x28
   14000f7b4:	dec    DWORD PTR [rcx+0x8]
   14000f7b7:	js     0x14000f7c7
   14000f7b9:	mov    rax,QWORD PTR [rcx]
   14000f7bc:	movzx  edx,BYTE PTR [rax]
   14000f7bf:	inc    rax
   14000f7c2:	mov    QWORD PTR [rcx],rax
   14000f7c5:	jmp    0x14000f7ce
   14000f7c7:	call   0x140010fc8
   14000f7cc:	mov    edx,eax
   14000f7ce:	mov    eax,edx
   14000f7d0:	add    rsp,0x28
   14000f7d4:	ret    
   14000f7d5:	int3   
   14000f7d6:	int3   
   14000f7d7:	int3   
   14000f7d8:	mov    QWORD PTR [rsp+0x18],rbx
   14000f7dd:	push   rbp
   14000f7de:	push   rsi
   14000f7df:	push   rdi
   14000f7e0:	push   r12
   14000f7e2:	push   r13
   14000f7e4:	push   r14
   14000f7e6:	push   r15
   14000f7e8:	lea    rbp,[rsp-0x180]
   14000f7f0:	sub    rsp,0x280
   14000f7f7:	mov    rax,QWORD PTR [rip+0x138c2]        # 0x1400230c0
   14000f7fe:	xor    rax,rsp
   14000f801:	mov    QWORD PTR [rbp+0x170],rax
   14000f808:	xor    eax,eax
   14000f80a:	lea    r13,[rbp+0x10]
   14000f80e:	mov    QWORD PTR [rbp-0x48],r9
   14000f812:	mov    rbx,r8
   14000f815:	mov    r12,rdx
   14000f818:	mov    QWORD PTR [rsp+0x50],rdx
   14000f81d:	mov    QWORD PTR [rsp+0x78],r13
   14000f822:	mov    rsi,rcx
   14000f825:	mov    QWORD PTR [rsp+0x68],rcx
   14000f82a:	mov    QWORD PTR [rbp-0x50],0x15e
   14000f832:	mov    DWORD PTR [rbp-0x7c],eax
   14000f835:	mov    WORD PTR [rbp-0x78],ax
   14000f839:	mov    edi,eax
   14000f83b:	mov    DWORD PTR [rsp+0x3c],eax
   14000f83f:	test   rdx,rdx
   14000f842:	jne    0x14000f85c
   14000f844:	call   0x14000bdf0
   14000f849:	mov    DWORD PTR [rax],0x16
   14000f84f:	call   0x14000d04c
   14000f854:	or     eax,0xffffffff
   14000f857:	jmp    0x140010822
   14000f85c:	test   rcx,rcx
   14000f85f:	je     0x14000f844
   14000f861:	or     r15d,0xffffffff
   14000f865:	test   BYTE PTR [rcx+0x18],0x40
   14000f869:	jne    0x14000f8e7
   14000f86b:	call   0x140010b28
   14000f870:	lea    rdx,[rip+0x14039]        # 0x1400238b0
   14000f877:	lea    r9,[rip+0x16202]        # 0x140025a80
   14000f87e:	cmp    eax,r15d
   14000f881:	je     0x14000f8a0
   14000f883:	cmp    eax,0xfffffffe
   14000f886:	je     0x14000f8a0
   14000f888:	movsxd r8,eax
   14000f88b:	mov    rcx,r8
   14000f88e:	and    r8d,0x1f
   14000f892:	sar    rcx,0x5
   14000f896:	imul   r8,r8,0x58
   14000f89a:	add    r8,QWORD PTR [r9+rcx*8]
   14000f89e:	jmp    0x14000f8a3
   14000f8a0:	mov    r8,rdx
   14000f8a3:	test   BYTE PTR [r8+0x38],0x7f
   14000f8a8:	jne    0x14000f8cf
   14000f8aa:	cmp    eax,r15d
   14000f8ad:	je     0x14000f8c9
   14000f8af:	cmp    eax,0xfffffffe
   14000f8b2:	je     0x14000f8c9
   14000f8b4:	movsxd rdx,eax
   14000f8b7:	mov    rax,rdx
   14000f8ba:	and    edx,0x1f
   14000f8bd:	sar    rax,0x5
   14000f8c1:	imul   rdx,rdx,0x58
   14000f8c5:	add    rdx,QWORD PTR [r9+rax*8]
   14000f8c9:	test   BYTE PTR [rdx+0x38],0x80
   14000f8cd:	je     0x14000f8e7
   14000f8cf:	call   0x14000bdf0
   14000f8d4:	mov    DWORD PTR [rax],0x16
   14000f8da:	call   0x14000d04c
   14000f8df:	mov    eax,r15d
   14000f8e2:	jmp    0x140010822
   14000f8e7:	lea    rcx,[rbp-0x38]
   14000f8eb:	mov    rdx,rbx
   14000f8ee:	call   0x14000c724
   14000f8f3:	mov    al,BYTE PTR [r12]
   14000f8f7:	xor    ebx,ebx
   14000f8f9:	mov    BYTE PTR [rsp+0x39],bl
   14000f8fd:	mov    r14d,ebx
   14000f900:	mov    DWORD PTR [rsp+0x34],ebx
   14000f904:	mov    r13d,ebx
   14000f907:	mov    DWORD PTR [rsp+0x70],ebx
   14000f90b:	test   al,al
   14000f90d:	je     0x14001080f
   14000f913:	lea    r13d,[rbx+0x1]
   14000f917:	movzx  ecx,al
   14000f91a:	call   0x14000c8cc
   14000f91f:	test   eax,eax
   14000f921:	je     0x14000f973
   14000f923:	sub    r14d,r13d
   14000f926:	add    r14d,r13d
   14000f929:	mov    rcx,rsi
   14000f92c:	mov    DWORD PTR [rsp+0x34],r14d
   14000f931:	call   0x14000f7b0
   14000f936:	mov    ebx,eax
   14000f938:	cmp    eax,r15d
   14000f93b:	je     0x14000f953
   14000f93d:	movzx  ecx,al
   14000f940:	call   0x14000c8cc
   14000f945:	test   eax,eax
   14000f947:	jne    0x14000f926
   14000f949:	mov    rdx,rsi
   14000f94c:	mov    ecx,ebx
   14000f94e:	call   0x140015ba0
   14000f953:	add    r12,r13
   14000f956:	movzx  ecx,BYTE PTR [r12]
   14000f95b:	call   0x14000c8cc
   14000f960:	test   eax,eax
   14000f962:	jne    0x14000f953
   14000f964:	mov    rsi,QWORD PTR [rsp+0x68]
   14000f969:	mov    QWORD PTR [rsp+0x50],r12
   14000f96e:	jmp    0x1400107a8
   14000f973:	mov    cl,0x25
   14000f975:	cmp    BYTE PTR [r12],cl
   14000f979:	jne    0x14001073b
   14000f97f:	cmp    BYTE PTR [r12+0x1],cl
   14000f984:	je     0x14001072a
   14000f98a:	mov    r13,QWORD PTR [rsp+0x50]
   14000f98f:	mov    edx,0x1
   14000f994:	mov    DWORD PTR [rsp+0x5c],ebx
   14000f998:	mov    BYTE PTR [rsp+0x38],dl
   14000f99c:	mov    BYTE PTR [rbp-0x80],bl
   14000f99f:	mov    DWORD PTR [rsp+0x4c],ebx
   14000f9a3:	mov    DWORD PTR [rsp+0x60],ebx
   14000f9a7:	mov    r14d,ebx
   14000f9aa:	mov    BYTE PTR [rsp+0x58],bl
   14000f9ae:	mov    BYTE PTR [rsp+0x40],bl
   14000f9b2:	mov    BYTE PTR [rsp+0x30],bl
   14000f9b6:	mov    sil,bl
   14000f9b9:	mov    BYTE PTR [rbp-0x58],bl
   14000f9bc:	mov    r12b,bl
   14000f9bf:	mov    edi,ebx
   14000f9c1:	add    r13,rdx
   14000f9c4:	movzx  ebx,BYTE PTR [r13+0x0]
   14000f9c9:	mov    ecx,ebx
   14000f9cb:	call   0x14000c7c8
   14000f9d0:	xor    r8d,r8d
   14000f9d3:	test   eax,eax
   14000f9d5:	je     0x14000f9ea
   14000f9d7:	lea    eax,[r14+r14*4]
   14000f9db:	lea    edx,[r8+0x1]
   14000f9df:	add    DWORD PTR [rsp+0x60],edx
   14000f9e3:	lea    r14d,[rbx+rax*2-0x30]
   14000f9e8:	jmp    0x14000fa50
   14000f9ea:	cmp    ebx,0x2a
   14000f9ed:	je     0x14000fafa
   14000f9f3:	cmp    ebx,0x46
   14000f9f6:	je     0x14000fa4b
   14000f9f8:	cmp    ebx,0x49
   14000f9fb:	je     0x14000faa0
   14000fa01:	cmp    ebx,0x4c
   14000fa04:	je     0x14000fa95
   14000fa0a:	cmp    ebx,0x4e
   14000fa0d:	je     0x14000fa4b
   14000fa0f:	cmp    ebx,0x68
   14000fa12:	je     0x14000fa43
   14000fa14:	mov    edx,0x1
   14000fa19:	cmp    ebx,0x6c
   14000fa1c:	je     0x14000fa28
   14000fa1e:	cmp    ebx,0x77
   14000fa21:	je     0x14000fa3e
   14000fa23:	jmp    0x14000faf2
   14000fa28:	cmp    BYTE PTR [r13+0x1],0x6c
   14000fa2d:	jne    0x14000fa3a
   14000fa2f:	inc    r13
   14000fa32:	add    edi,edx
   14000fa34:	mov    QWORD PTR [rbp-0x70],r8
   14000fa38:	jmp    0x14000fa50
   14000fa3a:	add    BYTE PTR [rsp+0x38],dl
   14000fa3e:	add    r12b,dl
   14000fa41:	jmp    0x14000fa50
   14000fa43:	add    BYTE PTR [rsp+0x38],r15b
   14000fa48:	add    r12b,r15b
   14000fa4b:	mov    edx,0x1
   14000fa50:	mov    cl,BYTE PTR [rsp+0x30]
   14000fa54:	test   sil,sil
   14000fa57:	je     0x14000f9c1
   14000fa5d:	mov    DWORD PTR [rsp+0x48],edi
   14000fa61:	mov    edi,DWORD PTR [rsp+0x3c]
   14000fa65:	mov    QWORD PTR [rsp+0x50],r13
   14000fa6a:	mov    r13b,BYTE PTR [rbp-0x80]
   14000fa6e:	mov    DWORD PTR [rsp+0x44],r14d
   14000fa73:	test   cl,cl
   14000fa75:	jne    0x14000fb0e
   14000fa7b:	mov    rax,QWORD PTR [rbp-0x48]
   14000fa7f:	mov    QWORD PTR [rbp-0x18],rax
   14000fa83:	add    rax,0x8
   14000fa87:	mov    QWORD PTR [rbp-0x48],rax
   14000fa8b:	mov    rax,QWORD PTR [rax-0x8]
   14000fa8f:	mov    QWORD PTR [rbp-0x60],rax
   14000fa93:	jmp    0x14000fb12
   14000fa95:	mov    edx,0x1
   14000fa9a:	add    BYTE PTR [rsp+0x38],dl
   14000fa9e:	jmp    0x14000fa50
   14000faa0:	mov    al,BYTE PTR [r13+0x1]
   14000faa4:	cmp    al,0x36
   14000faa6:	jne    0x14000fabe
   14000faa8:	lea    rcx,[r13+0x2]
   14000faac:	cmp    BYTE PTR [rcx],0x34
   14000faaf:	jne    0x14000fabe
   14000fab1:	mov    r13,rcx
   14000fab4:	mov    edx,0x1
   14000fab9:	jmp    0x14000fa32
   14000fabe:	cmp    al,0x33
   14000fac0:	jne    0x14000fad3
   14000fac2:	lea    rcx,[r13+0x2]
   14000fac6:	cmp    BYTE PTR [rcx],0x32
   14000fac9:	jne    0x14000fad3
   14000facb:	mov    r13,rcx
   14000face:	jmp    0x14000fa4b
   14000fad3:	cmp    al,0x64
   14000fad5:	je     0x14000fab4
   14000fad7:	cmp    al,0x69
   14000fad9:	je     0x14000fab4
   14000fadb:	cmp    al,0x6f
   14000fadd:	je     0x14000fab4
   14000fadf:	cmp    al,0x78
   14000fae1:	je     0x14000fab4
   14000fae3:	cmp    al,0x58
   14000fae5:	je     0x14000fab4
   14000fae7:	mov    edx,0x1
   14000faec:	mov    QWORD PTR [rbp-0x70],r8
   14000faf0:	add    edi,edx
   14000faf2:	add    sil,dl
   14000faf5:	jmp    0x14000fa50
   14000fafa:	mov    cl,BYTE PTR [rsp+0x30]
   14000fafe:	mov    edx,0x1
   14000fb03:	add    cl,dl
   14000fb05:	mov    BYTE PTR [rsp+0x30],cl
   14000fb09:	jmp    0x14000fa54
   14000fb0e:	mov    QWORD PTR [rbp-0x60],r8
   14000fb12:	mov    rax,QWORD PTR [rsp+0x50]
   14000fb17:	mov    bl,r8b
   14000fb1a:	test   r12b,r12b
   14000fb1d:	jne    0x14000fb2f
   14000fb1f:	cmp    BYTE PTR [rax],0x53
   14000fb22:	je     0x14000fb2c
   14000fb24:	cmp    BYTE PTR [rax],0x43
   14000fb27:	mov    r12b,r15b
   14000fb2a:	jne    0x14000fb2f
   14000fb2c:	mov    r12b,dl
   14000fb2f:	movzx  r14d,BYTE PTR [rax]
   14000fb33:	or     r14d,0x20
   14000fb37:	mov    DWORD PTR [rbp-0x40],r14d
   14000fb3b:	cmp    r14d,0x6e
   14000fb3f:	je     0x14000fbad
   14000fb41:	cmp    r14d,0x63
   14000fb45:	je     0x14000fb89
   14000fb47:	cmp    r14d,0x7b
   14000fb4b:	je     0x14000fb89
   14000fb4d:	mov    rsi,QWORD PTR [rsp+0x68]
   14000fb52:	mov    r14d,DWORD PTR [rsp+0x34]
   14000fb57:	mov    rcx,rsi
   14000fb5a:	add    r14d,edx
   14000fb5d:	call   0x14000f7b0
   14000fb62:	mov    edi,eax
   14000fb64:	mov    DWORD PTR [rsp+0x3c],eax
   14000fb68:	cmp    eax,r15d
   14000fb6b:	je     0x14000fb7e
   14000fb6d:	movzx  ecx,al
   14000fb70:	call   0x14000c8cc
   14000fb75:	mov    edx,0x1
   14000fb7a:	test   eax,eax
   14000fb7c:	jne    0x14000fb57
   14000fb7e:	mov    DWORD PTR [rsp+0x34],r14d
   14000fb83:	mov    r14d,DWORD PTR [rbp-0x40]
   14000fb87:	jmp    0x14000fb9d
   14000fb89:	mov    rcx,QWORD PTR [rsp+0x68]
   14000fb8e:	add    DWORD PTR [rsp+0x34],edx
   14000fb92:	call   0x14000f7b0
   14000fb97:	mov    edi,eax
   14000fb99:	mov    DWORD PTR [rsp+0x3c],eax
   14000fb9d:	cmp    edi,r15d
   14000fba0:	je     0x14000fe6e
   14000fba6:	mov    cl,BYTE PTR [rsp+0x30]
   14000fbaa:	xor    r8d,r8d
   14000fbad:	mov    eax,DWORD PTR [rsp+0x60]
   14000fbb1:	mov    esi,DWORD PTR [rsp+0x44]
   14000fbb5:	test   eax,eax
   14000fbb7:	je     0x14000fbc1
   14000fbb9:	test   esi,esi
   14000fbbb:	je     0x1400107bb
   14000fbc1:	cmp    r14d,0x6f
   14000fbc5:	jg     0x14000ffee
   14000fbcb:	je     0x1400104c1
   14000fbd1:	cmp    r14d,0x63
   14000fbd5:	je     0x14000ffc2
   14000fbdb:	cmp    r14d,0x64
   14000fbdf:	je     0x1400104c1
   14000fbe5:	jle    0x14001001c
   14000fbeb:	cmp    r14d,0x67
   14000fbef:	jle    0x14000fc37
   14000fbf1:	cmp    r14d,0x69
   14000fbf5:	je     0x14000fc1a
   14000fbf7:	cmp    r14d,0x6e
   14000fbfb:	jne    0x14001001c
   14000fc01:	mov    eax,DWORD PTR [rsp+0x34]
   14000fc05:	test   cl,cl
   14000fc07:	je     0x1400106d7
   14000fc0d:	mov    r12,QWORD PTR [rsp+0x50]
   14000fc12:	mov    r14d,eax
   14000fc15:	jmp    0x140010710
   14000fc1a:	mov    r14d,0x64
   14000fc20:	mov    ecx,0x1
   14000fc25:	cmp    edi,0x2d
   14000fc28:	jne    0x140010157
   14000fc2e:	mov    BYTE PTR [rsp+0x40],cl
   14000fc32:	jmp    0x14001015c
   14000fc37:	mov    rbx,r8
   14000fc3a:	mov    esi,0x1
   14000fc3f:	cmp    edi,0x2d
   14000fc42:	jne    0x14000fc50
   14000fc44:	mov    rax,QWORD PTR [rsp+0x78]
   14000fc49:	mov    ebx,esi
   14000fc4b:	mov    BYTE PTR [rax],dil
   14000fc4e:	jmp    0x14000fc55
   14000fc50:	cmp    edi,0x2b
   14000fc53:	jne    0x14000fc7e
   14000fc55:	mov    r13,QWORD PTR [rsp+0x68]
   14000fc5a:	mov    r12d,DWORD PTR [rsp+0x44]
   14000fc5f:	mov    r14d,DWORD PTR [rsp+0x34]
   14000fc64:	mov    rcx,r13
   14000fc67:	sub    r12d,esi
   14000fc6a:	add    r14d,esi
   14000fc6d:	call   0x14000f7b0
   14000fc72:	mov    edi,eax
   14000fc74:	mov    DWORD PTR [rsp+0x3c],eax
   14000fc78:	mov    eax,DWORD PTR [rsp+0x60]
   14000fc7c:	jmp    0x14000fc8d
   14000fc7e:	mov    r12d,DWORD PTR [rsp+0x44]
   14000fc83:	mov    r13,QWORD PTR [rsp+0x68]
   14000fc88:	mov    r14d,DWORD PTR [rsp+0x34]
   14000fc8d:	test   eax,eax
   14000fc8f:	movzx  ecx,dil
   14000fc93:	cmove  r12d,r15d
   14000fc97:	jmp    0x14000fced
   14000fc99:	mov    eax,r12d
   14000fc9c:	sub    r12d,esi
   14000fc9f:	test   eax,eax
   14000fca1:	je     0x14000fcf6
   14000fca3:	mov    rax,QWORD PTR [rsp+0x78]
   14000fca8:	add    DWORD PTR [rsp+0x4c],esi
   14000fcac:	lea    r9,[rbp+0x10]
   14000fcb0:	mov    BYTE PTR [rbx+rax*1],dil
   14000fcb4:	lea    rax,[rbp-0x7c]
   14000fcb8:	add    rbx,rsi
   14000fcbb:	lea    r8,[rsp+0x78]
   14000fcc0:	lea    rdx,[rbp-0x50]
   14000fcc4:	mov    rcx,rbx
   14000fcc7:	mov    QWORD PTR [rsp+0x20],rax
   14000fccc:	call   0x14000f718
   14000fcd1:	test   eax,eax
   14000fcd3:	je     0x14000fe6e
   14000fcd9:	mov    rcx,r13
   14000fcdc:	add    r14d,esi
   14000fcdf:	call   0x14000f7b0
   14000fce4:	mov    edi,eax
   14000fce6:	mov    DWORD PTR [rsp+0x3c],eax
   14000fcea:	movzx  ecx,al
   14000fced:	call   0x14000c7c8
   14000fcf2:	test   eax,eax
   14000fcf4:	jne    0x14000fc99
   14000fcf6:	mov    rax,QWORD PTR [rbp-0x38]
   14000fcfa:	mov    rcx,QWORD PTR [rax+0x128]
   14000fd01:	mov    rax,QWORD PTR [rcx]
   14000fd04:	mov    ecx,0x1
   14000fd09:	mov    sil,BYTE PTR [rax]
   14000fd0c:	cmp    sil,dil
   14000fd0f:	jne    0x14000fdd1
   14000fd15:	mov    eax,r12d
   14000fd18:	sub    r12d,ecx
   14000fd1b:	test   eax,eax
   14000fd1d:	je     0x14000fdd1
   14000fd23:	add    r14d,ecx
   14000fd26:	mov    rcx,r13
   14000fd29:	call   0x14000f7b0
   14000fd2e:	lea    r9,[rbp+0x10]
   14000fd32:	lea    r8,[rsp+0x78]
   14000fd37:	mov    edi,eax
   14000fd39:	mov    DWORD PTR [rsp+0x3c],eax
   14000fd3d:	mov    rax,QWORD PTR [rsp+0x78]
   14000fd42:	mov    BYTE PTR [rbx+rax*1],sil
   14000fd46:	lea    rax,[rbp-0x7c]
   14000fd4a:	mov    esi,0x1
   14000fd4f:	add    rbx,rsi
   14000fd52:	lea    rdx,[rbp-0x50]
   14000fd56:	mov    QWORD PTR [rsp+0x20],rax
   14000fd5b:	mov    rcx,rbx
   14000fd5e:	call   0x14000f718
   14000fd63:	test   eax,eax
   14000fd65:	je     0x14000fe6e
   14000fd6b:	movzx  ecx,dil
   14000fd6f:	jmp    0x14000fdc5
   14000fd71:	mov    eax,r12d
   14000fd74:	sub    r12d,esi
   14000fd77:	test   eax,eax
   14000fd79:	je     0x14000fdce
   14000fd7b:	mov    rax,QWORD PTR [rsp+0x78]
   14000fd80:	add    DWORD PTR [rsp+0x4c],esi
   14000fd84:	lea    r9,[rbp+0x10]
   14000fd88:	mov    BYTE PTR [rbx+rax*1],dil
   14000fd8c:	lea    rax,[rbp-0x7c]
   14000fd90:	add    rbx,rsi
   14000fd93:	lea    r8,[rsp+0x78]
   14000fd98:	lea    rdx,[rbp-0x50]
   14000fd9c:	mov    rcx,rbx
   14000fd9f:	mov    QWORD PTR [rsp+0x20],rax
   14000fda4:	call   0x14000f718
   14000fda9:	test   eax,eax
   14000fdab:	je     0x14000fe6e
   14000fdb1:	mov    rcx,r13
   14000fdb4:	add    r14d,esi
   14000fdb7:	call   0x14000f7b0
   14000fdbc:	mov    edi,eax
   14000fdbe:	mov    DWORD PTR [rsp+0x3c],eax
   14000fdc2:	movzx  ecx,al
   14000fdc5:	call   0x14000c7c8
   14000fdca:	test   eax,eax
   14000fdcc:	jne    0x14000fd71
   14000fdce:	mov    rcx,rsi
   14000fdd1:	mov    esi,DWORD PTR [rsp+0x4c]
   14000fdd5:	test   esi,esi
   14000fdd7:	je     0x14000ff4c
   14000fddd:	cmp    edi,0x65
   14000fde0:	je     0x14000fdeb
   14000fde2:	cmp    edi,0x45
   14000fde5:	jne    0x14000ff4c
   14000fdeb:	mov    eax,r12d
   14000fdee:	sub    r12d,ecx
   14000fdf1:	test   eax,eax
   14000fdf3:	je     0x14000ff4c
   14000fdf9:	mov    rax,QWORD PTR [rsp+0x78]
   14000fdfe:	lea    r9,[rbp+0x10]
   14000fe02:	lea    r8,[rsp+0x78]
   14000fe07:	mov    BYTE PTR [rbx+rax*1],0x65
   14000fe0b:	add    rbx,rcx
   14000fe0e:	lea    rax,[rbp-0x7c]
   14000fe12:	lea    rdx,[rbp-0x50]
   14000fe16:	mov    rcx,rbx
   14000fe19:	mov    QWORD PTR [rsp+0x20],rax
   14000fe1e:	call   0x14000f718
   14000fe23:	test   eax,eax
   14000fe25:	je     0x14000fe6e
   14000fe27:	mov    rcx,r13
   14000fe2a:	inc    r14d
   14000fe2d:	call   0x14000f7b0
   14000fe32:	mov    edi,eax
   14000fe34:	mov    DWORD PTR [rsp+0x3c],eax
   14000fe38:	cmp    eax,0x2d
   14000fe3b:	jne    0x14000feb9
   14000fe3d:	mov    rax,QWORD PTR [rsp+0x78]
   14000fe42:	lea    r9,[rbp+0x10]
   14000fe46:	lea    r8,[rsp+0x78]
   14000fe4b:	mov    BYTE PTR [rbx+rax*1],dil
   14000fe4f:	lea    rax,[rbp-0x7c]
   14000fe53:	inc    rbx
   14000fe56:	lea    rdx,[rbp-0x50]
   14000fe5a:	mov    rcx,rbx
   14000fe5d:	mov    QWORD PTR [rsp+0x20],rax
   14000fe62:	call   0x14000f718
   14000fe67:	xor    r8d,r8d
   14000fe6a:	test   eax,eax
   14000fe6c:	jne    0x14000fec1
   14000fe6e:	xor    ebx,ebx
   14000fe70:	mov    eax,0x1
   14000fe75:	cmp    DWORD PTR [rbp-0x7c],eax
   14000fe78:	jne    0x14000fe84
   14000fe7a:	mov    rcx,QWORD PTR [rsp+0x78]
   14000fe7f:	call   0x14000b490
   14000fe84:	cmp    edi,r15d
   14000fe87:	jne    0x14001080a
   14000fe8d:	mov    eax,DWORD PTR [rsp+0x70]
   14000fe91:	test   eax,eax
   14000fe93:	jne    0x14000fe9d
   14000fe95:	mov    dl,BYTE PTR [rsp+0x39]
   14000fe99:	test   dl,dl
   14000fe9b:	je     0x14000fea0
   14000fe9d:	mov    r15d,eax
   14000fea0:	cmp    BYTE PTR [rbp-0x20],bl
   14000fea3:	je     0x14000f8df
   14000fea9:	mov    rcx,QWORD PTR [rbp-0x28]
   14000fead:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000feb4:	jmp    0x14000f8df
   14000feb9:	cmp    eax,0x2b
   14000febc:	jne    0x14000fee6
   14000febe:	xor    r8d,r8d
   14000fec1:	mov    eax,r12d
   14000fec4:	mov    ecx,0x1
   14000fec9:	sub    r12d,ecx
   14000fecc:	test   eax,eax
   14000fece:	jne    0x14000fed5
   14000fed0:	mov    r12d,r8d
   14000fed3:	jmp    0x14000fee6
   14000fed5:	add    r14d,ecx
   14000fed8:	mov    rcx,r13
   14000fedb:	call   0x14000f7b0
   14000fee0:	mov    edi,eax
   14000fee2:	mov    DWORD PTR [rsp+0x3c],eax
   14000fee6:	movzx  ecx,dil
   14000feea:	jmp    0x14000ff43
   14000feec:	mov    eax,r12d
   14000feef:	mov    ecx,0x1
   14000fef4:	sub    r12d,ecx
   14000fef7:	test   eax,eax
   14000fef9:	je     0x14000ff4c
   14000fefb:	mov    rax,QWORD PTR [rsp+0x78]
   14000ff00:	add    esi,ecx
   14000ff02:	lea    r9,[rbp+0x10]
   14000ff06:	mov    BYTE PTR [rbx+rax*1],dil
   14000ff0a:	add    rbx,rcx
   14000ff0d:	lea    rax,[rbp-0x7c]
   14000ff11:	lea    r8,[rsp+0x78]
   14000ff16:	lea    rdx,[rbp-0x50]
   14000ff1a:	mov    rcx,rbx
   14000ff1d:	mov    QWORD PTR [rsp+0x20],rax
   14000ff22:	call   0x14000f718
   14000ff27:	test   eax,eax
   14000ff29:	je     0x14000fe6e
   14000ff2f:	mov    rcx,r13
   14000ff32:	inc    r14d
   14000ff35:	call   0x14000f7b0
   14000ff3a:	mov    edi,eax
   14000ff3c:	mov    DWORD PTR [rsp+0x3c],eax
   14000ff40:	movzx  ecx,al
   14000ff43:	call   0x14000c7c8
   14000ff48:	test   eax,eax
   14000ff4a:	jne    0x14000feec
   14000ff4c:	mov    eax,0x1
   14000ff51:	sub    r14d,eax
   14000ff54:	mov    DWORD PTR [rsp+0x34],r14d
   14000ff59:	cmp    edi,r15d
   14000ff5c:	je     0x14000ff6d
   14000ff5e:	mov    rdx,r13
   14000ff61:	mov    ecx,edi
   14000ff63:	call   0x140015ba0
   14000ff68:	mov    eax,0x1
   14000ff6d:	xor    r8d,r8d
   14000ff70:	test   esi,esi
   14000ff72:	je     0x14000fe6e
   14000ff78:	cmp    BYTE PTR [rsp+0x30],r8b
   14000ff7d:	jne    0x14000ffb8
   14000ff7f:	mov    r13d,DWORD PTR [rsp+0x70]
   14000ff84:	mov    rsi,QWORD PTR [rsp+0x78]
   14000ff89:	mov    BYTE PTR [rbx+rsi*1],r8b
   14000ff8d:	movsx  ebx,BYTE PTR [rsp+0x38]
   14000ff92:	mov    rcx,QWORD PTR [rip+0x138ef]        # 0x140023888
   14000ff99:	add    r13d,eax
   14000ff9c:	sub    ebx,eax
   14000ff9e:	mov    DWORD PTR [rsp+0x70],r13d
   14000ffa3:	call   QWORD PTR [rip+0xa137]        # 0x14001a0e0
   14000ffa9:	mov    rdx,QWORD PTR [rbp-0x60]
   14000ffad:	lea    r9,[rbp-0x38]
   14000ffb1:	mov    r8,rsi
   14000ffb4:	mov    ecx,ebx
   14000ffb6:	call   rax
   14000ffb8:	mov    r12,QWORD PTR [rsp+0x50]
   14000ffbd:	jmp    0x140010710
   14000ffc2:	mov    r11d,0x1
   14000ffc8:	test   eax,eax
   14000ffca:	jne    0x14000ffd8
   14000ffcc:	add    esi,r11d
   14000ffcf:	mov    DWORD PTR [rsp+0x60],r11d
   14000ffd4:	mov    DWORD PTR [rsp+0x44],esi
   14000ffd8:	test   r12b,r12b
   14000ffdb:	mov    r12,QWORD PTR [rsp+0x50]
   14000ffe0:	jle    0x1400102e8
   14000ffe6:	mov    sil,r11b
   14000ffe9:	jmp    0x1400102eb
   14000ffee:	cmp    r14d,0x70
   14000fff2:	je     0x1400104aa
   14000fff8:	cmp    r14d,0x73
   14000fffc:	je     0x1400102d0
   140010002:	cmp    r14d,0x75
   140010006:	je     0x1400104c1
   14001000c:	cmp    r14d,0x78
   140010010:	je     0x14000fc20
   140010016:	cmp    r14d,0x7b
   14001001a:	je     0x140010053
   14001001c:	mov    r12,QWORD PTR [rsp+0x50]
   140010021:	movzx  eax,BYTE PTR [r12]
   140010026:	cmp    eax,edi
   140010028:	jne    0x1400107bb
   14001002e:	mov    dl,BYTE PTR [rsp+0x39]
   140010032:	mov    r14d,DWORD PTR [rsp+0x34]
   140010037:	add    dl,r15b
   14001003a:	mov    BYTE PTR [rsp+0x39],dl
   14001003e:	test   cl,cl
   140010040:	jne    0x140010710
   140010046:	mov    r9,QWORD PTR [rbp-0x18]
   14001004a:	mov    QWORD PTR [rbp-0x48],r9
   14001004e:	jmp    0x140010710
   140010053:	mov    esi,DWORD PTR [rbp-0x58]
   140010056:	test   r12b,r12b
   140010059:	mov    r12,QWORD PTR [rsp+0x50]
   14001005e:	mov    eax,0x1
   140010063:	movzx  esi,sil
   140010067:	cmovg  esi,eax
   14001006a:	add    r12,rax
   14001006d:	cmp    BYTE PTR [r12],0x5e
   140010072:	jne    0x14001007c
   140010074:	inc    r12
   140010077:	mov    BYTE PTR [rsp+0x58],r15b
   14001007c:	xor    edx,edx
   14001007e:	lea    rcx,[rbp-0x10]
   140010082:	lea    r8d,[rdx+0x20]
   140010086:	call   0x14000a560
   14001008b:	cmp    BYTE PTR [r12],0x5d
   140010090:	mov    r11d,0x1
   140010096:	jne    0x14001013c
   14001009c:	mov    r13b,0x5d
   14001009f:	add    r12,r11
   1400100a2:	mov    BYTE PTR [rbp-0x5],0x20
   1400100a6:	jmp    0x14001013c
   1400100ab:	add    r12,r11
   1400100ae:	cmp    al,0x2d
   1400100b0:	jne    0x14001011f
   1400100b2:	test   r13b,r13b
   1400100b5:	je     0x14001011f
   1400100b7:	mov    cl,BYTE PTR [r12]
   1400100bb:	cmp    cl,0x5d
   1400100be:	je     0x14001011f
   1400100c0:	add    r12,r11
   1400100c3:	cmp    r13b,cl
   1400100c6:	jae    0x1400100cd
   1400100c8:	mov    r9b,cl
   1400100cb:	jmp    0x1400100d3
   1400100cd:	mov    r9b,r13b
   1400100d0:	mov    r13b,cl
   1400100d3:	cmp    r13b,r9b
   1400100d6:	jae    0x1400100ff
   1400100d8:	movzx  r10d,r13b
   1400100dc:	movzx  ecx,r13b
   1400100e0:	mov    r8,r10
   1400100e3:	mov    edx,r11d
   1400100e6:	and    ecx,0x7
   1400100e9:	shr    r8,0x3
   1400100ed:	add    r13b,r11b
   1400100f0:	shl    dl,cl
   1400100f2:	add    r10,r11
   1400100f5:	or     BYTE PTR [rbp+r8*1-0x10],dl
   1400100fa:	cmp    r13b,r9b
   1400100fd:	jb     0x1400100dc
   1400100ff:	movzx  eax,r9b
   140010103:	movzx  r8d,r9b
   140010107:	mov    edx,r11d
   14001010a:	and    eax,0x7
   14001010d:	shr    r8,0x3
   140010111:	mov    cl,al
   140010113:	shl    dl,cl
   140010115:	or     BYTE PTR [rbp+r8*1-0x10],dl
   14001011a:	xor    r13b,r13b
   14001011d:	jmp    0x14001013c
   14001011f:	movzx  r8d,al
   140010123:	mov    r13b,al
   140010126:	movzx  eax,al
   140010129:	and    eax,0x7
   14001012c:	mov    edx,r11d
   14001012f:	shr    r8,0x3
   140010133:	mov    cl,al
   140010135:	shl    dl,cl
   140010137:	or     BYTE PTR [rbp+r8*1-0x10],dl
   14001013c:	mov    al,BYTE PTR [r12]
   140010140:	cmp    al,0x5d
   140010142:	jne    0x1400100ab
   140010148:	xor    ebx,ebx
   14001014a:	cmp    al,bl
   14001014c:	je     0x14000fe70
   140010152:	jmp    0x1400102eb
   140010157:	cmp    edi,0x2b
   14001015a:	jne    0x140010172
   14001015c:	sub    esi,ecx
   14001015e:	mov    DWORD PTR [rsp+0x44],esi
   140010162:	jne    0x14001023c
   140010168:	test   eax,eax
   14001016a:	je     0x14001023c
   140010170:	mov    bl,cl
   140010172:	mov    r13d,DWORD PTR [rsp+0x34]
   140010177:	mov    r12,QWORD PTR [rsp+0x68]
   14001017c:	cmp    edi,0x30
   14001017f:	jne    0x1400101d4
   140010181:	add    r13d,ecx
   140010184:	mov    rcx,r12
   140010187:	mov    DWORD PTR [rsp+0x34],r13d
   14001018c:	call   0x14000f7b0
   140010191:	mov    edi,eax
   140010193:	mov    DWORD PTR [rsp+0x3c],eax
   140010197:	cmp    al,0x78
   140010199:	je     0x140010290
   14001019f:	cmp    al,0x58
   1400101a1:	je     0x140010290
   1400101a7:	mov    eax,0x1
   1400101ac:	mov    DWORD PTR [rsp+0x4c],eax
   1400101b0:	cmp    r14d,0x78
   1400101b4:	je     0x140010268
   1400101ba:	xor    r8d,r8d
   1400101bd:	cmp    DWORD PTR [rsp+0x60],r8d
   1400101c2:	je     0x1400101ce
   1400101c4:	sub    esi,eax
   1400101c6:	mov    DWORD PTR [rsp+0x44],esi
   1400101ca:	jne    0x1400101ce
   1400101cc:	add    bl,al
   1400101ce:	mov    r14d,0x6f
   1400101d4:	mov    r12d,DWORD PTR [rsp+0x48]
   1400101d9:	test   r12d,r12d
   1400101dc:	je     0x1400105c0
   1400101e2:	mov    rsi,QWORD PTR [rbp-0x70]
   1400101e6:	test   bl,bl
   1400101e8:	jne    0x1400105a9
   1400101ee:	mov    r13d,DWORD PTR [rsp+0x44]
   1400101f3:	mov    rbx,QWORD PTR [rsp+0x68]
   1400101f8:	cmp    r14d,0x78
   1400101fc:	je     0x140010517
   140010202:	cmp    r14d,0x70
   140010206:	je     0x140010517
   14001020c:	movzx  ecx,dil
   140010210:	call   0x14000c7c8
   140010215:	xor    r8d,r8d
   140010218:	test   eax,eax
   14001021a:	je     0x14001058f
   140010220:	cmp    r14d,0x6f
   140010224:	jne    0x14001050e
   14001022a:	cmp    edi,0x38
   14001022d:	jge    0x14001058f
   140010233:	shl    rsi,0x3
   140010237:	jmp    0x140010551
   14001023c:	mov    r13d,DWORD PTR [rsp+0x34]
   140010241:	mov    r12,QWORD PTR [rsp+0x68]
   140010246:	add    r13d,ecx
   140010249:	mov    rcx,r12
   14001024c:	mov    DWORD PTR [rsp+0x34],r13d
   140010251:	call   0x14000f7b0
   140010256:	xor    r8d,r8d
   140010259:	mov    edi,eax
   14001025b:	mov    DWORD PTR [rsp+0x3c],eax
   14001025f:	lea    ecx,[r8+0x1]
   140010263:	jmp    0x14001017c
   140010268:	sub    r13d,eax
   14001026b:	mov    DWORD PTR [rsp+0x34],r13d
   140010270:	cmp    edi,r15d
   140010273:	je     0x14001027f
   140010275:	mov    rdx,r12
   140010278:	mov    ecx,edi
   14001027a:	call   0x140015ba0
   14001027f:	mov    edi,0x30
   140010284:	xor    r8d,r8d
   140010287:	mov    DWORD PTR [rsp+0x3c],edi
   14001028b:	jmp    0x1400101d4
   140010290:	mov    r14d,0x1
   140010296:	mov    rcx,r12
   140010299:	add    r13d,r14d
   14001029c:	mov    DWORD PTR [rsp+0x34],r13d
   1400102a1:	call   0x14000f7b0
   1400102a6:	xor    r8d,r8d
   1400102a9:	mov    edi,eax
   1400102ab:	mov    DWORD PTR [rsp+0x3c],eax
   1400102af:	cmp    DWORD PTR [rsp+0x60],r8d
   1400102b4:	je     0x1400102c5
   1400102b6:	sub    esi,0x2
   1400102b9:	mov    DWORD PTR [rsp+0x44],esi
   1400102bd:	cmp    esi,r14d
   1400102c0:	jge    0x1400102c5
   1400102c2:	add    bl,r14b
   1400102c5:	mov    r14d,0x78
   1400102cb:	jmp    0x1400101d4
   1400102d0:	movzx  esi,BYTE PTR [rbp-0x58]
   1400102d4:	test   r12b,r12b
   1400102d7:	mov    r12,QWORD PTR [rsp+0x50]
   1400102dc:	mov    r11d,0x1
   1400102e2:	cmovg  esi,r11d
   1400102e6:	jmp    0x1400102eb
   1400102e8:	mov    esi,DWORD PTR [rbp-0x58]
   1400102eb:	mov    ecx,DWORD PTR [rsp+0x34]
   1400102ef:	mov    rbx,QWORD PTR [rbp-0x60]
   1400102f3:	sub    ecx,r11d
   1400102f6:	mov    DWORD PTR [rsp+0x34],ecx
   1400102fa:	cmp    edi,r15d
   1400102fd:	je     0x140010315
   1400102ff:	mov    rdx,QWORD PTR [rsp+0x68]
   140010304:	mov    ecx,edi
   140010306:	call   0x140015ba0
   14001030b:	mov    ecx,DWORD PTR [rsp+0x34]
   14001030f:	mov    r11d,0x1
   140010315:	mov    r13d,DWORD PTR [rsp+0x44]
   14001031a:	xor    r8d,r8d
   14001031d:	cmp    DWORD PTR [rsp+0x60],r8d
   140010322:	je     0x140010332
   140010324:	mov    eax,r13d
   140010327:	sub    r13d,r11d
   14001032a:	test   eax,eax
   14001032c:	je     0x140010468
   140010332:	add    ecx,r11d
   140010335:	mov    DWORD PTR [rsp+0x34],ecx
   140010339:	mov    rcx,QWORD PTR [rsp+0x68]
   14001033e:	call   0x14000f7b0
   140010343:	movsxd rdi,eax
   140010346:	mov    DWORD PTR [rsp+0x3c],edi
   14001034a:	cmp    edi,r15d
   14001034d:	je     0x140010443
   140010353:	cmp    r14d,0x63
   140010357:	je     0x14001039d
   140010359:	cmp    r14d,0x73
   14001035d:	jne    0x140010372
   14001035f:	cmp    edi,0x9
   140010362:	jl     0x14001036d
   140010364:	cmp    edi,0xd
   140010367:	jle    0x140010443
   14001036d:	cmp    edi,0x20
   140010370:	jne    0x14001039d
   140010372:	cmp    r14d,0x7b
   140010376:	jne    0x140010443
   14001037c:	mov    rax,rdi
   14001037f:	mov    edx,edi
   140010381:	sar    rax,0x3
   140010385:	and    edx,0x7
   140010388:	movsx  ecx,BYTE PTR [rbp+rax*1-0x10]
   14001038d:	movsx  eax,BYTE PTR [rsp+0x58]
   140010392:	xor    ecx,eax
   140010394:	bt     ecx,edx
   140010397:	jae    0x140010443
   14001039d:	xor    r8d,r8d
   1400103a0:	cmp    BYTE PTR [rsp+0x30],r8b
   1400103a5:	jne    0x140010431
   1400103ab:	test   sil,sil
   1400103ae:	je     0x14001041b
   1400103b0:	movzx  ecx,dil
   1400103b4:	mov    BYTE PTR [rbp-0x68],dil
   1400103b8:	call   0x140015380
   1400103bd:	test   eax,eax
   1400103bf:	je     0x1400103d2
   1400103c1:	mov    rcx,QWORD PTR [rsp+0x68]
   1400103c6:	inc    DWORD PTR [rsp+0x34]
   1400103ca:	call   0x14000f7b0
   1400103cf:	mov    BYTE PTR [rbp-0x67],al
   1400103d2:	mov    eax,0x3f
   1400103d7:	lea    r9,[rbp-0x38]
   1400103db:	lea    rdx,[rbp-0x68]
   1400103df:	mov    WORD PTR [rbp-0x78],ax
   1400103e3:	mov    rax,QWORD PTR [rbp-0x38]
   1400103e7:	lea    rcx,[rbp-0x78]
   1400103eb:	movsxd r8,DWORD PTR [rax+0x10c]
   1400103f2:	call   0x140015cac
   1400103f7:	mov    rax,QWORD PTR [rbp-0x60]
   1400103fb:	movzx  r11d,WORD PTR [rbp-0x78]
   140010400:	mov    ecx,DWORD PTR [rsp+0x34]
   140010404:	mov    WORD PTR [rax],r11w
   140010408:	add    rax,0x2
   14001040c:	mov    QWORD PTR [rbp-0x60],rax
   140010410:	mov    r11d,0x1
   140010416:	jmp    0x14001031a
   14001041b:	mov    rax,QWORD PTR [rbp-0x60]
   14001041f:	mov    r11d,0x1
   140010425:	mov    BYTE PTR [rax],dil
   140010428:	add    rax,r11
   14001042b:	mov    QWORD PTR [rbp-0x60],rax
   14001042f:	jmp    0x14001043a
   140010431:	mov    r11d,0x1
   140010437:	add    rbx,r11
   14001043a:	mov    ecx,DWORD PTR [rsp+0x34]
   14001043e:	jmp    0x14001031d
   140010443:	mov    r11d,0x1
   140010449:	sub    DWORD PTR [rsp+0x34],r11d
   14001044e:	cmp    edi,r15d
   140010451:	je     0x140010465
   140010453:	mov    rdx,QWORD PTR [rsp+0x68]
   140010458:	mov    ecx,edi
   14001045a:	call   0x140015ba0
   14001045f:	mov    r11d,0x1
   140010465:	xor    r8d,r8d
   140010468:	mov    rax,QWORD PTR [rbp-0x60]
   14001046c:	cmp    rbx,rax
   14001046f:	je     0x14000fe6e
   140010475:	cmp    BYTE PTR [rsp+0x30],r8b
   14001047a:	jne    0x1400106f1
   140010480:	add    DWORD PTR [rsp+0x70],r11d
   140010485:	cmp    r14d,0x63
   140010489:	mov    r14d,DWORD PTR [rsp+0x34]
   14001048e:	je     0x140010710
   140010494:	test   sil,sil
   140010497:	je     0x1400104a2
   140010499:	mov    WORD PTR [rax],r8w
   14001049d:	jmp    0x140010710
   1400104a2:	mov    BYTE PTR [rax],r8b
   1400104a5:	jmp    0x140010710
   1400104aa:	mov    r12d,DWORD PTR [rsp+0x48]
   1400104af:	mov    ecx,0x1
   1400104b4:	mov    QWORD PTR [rbp-0x70],r8
   1400104b8:	add    r12d,ecx
   1400104bb:	mov    BYTE PTR [rsp+0x38],cl
   1400104bf:	jmp    0x1400104cb
   1400104c1:	mov    r12d,DWORD PTR [rsp+0x48]
   1400104c6:	mov    ecx,0x1
   1400104cb:	cmp    edi,0x2d
   1400104ce:	jne    0x1400104d6
   1400104d0:	mov    BYTE PTR [rsp+0x40],cl
   1400104d4:	jmp    0x1400104df
   1400104d6:	cmp    edi,0x2b
   1400104d9:	jne    0x1400101d9
   1400104df:	sub    esi,ecx
   1400104e1:	mov    DWORD PTR [rsp+0x44],esi
   1400104e5:	jne    0x1400104f2
   1400104e7:	test   eax,eax
   1400104e9:	je     0x1400104f2
   1400104eb:	mov    bl,cl
   1400104ed:	jmp    0x1400101d9
   1400104f2:	add    DWORD PTR [rsp+0x34],ecx
   1400104f6:	mov    rcx,QWORD PTR [rsp+0x68]
   1400104fb:	call   0x14000f7b0
   140010500:	xor    r8d,r8d
   140010503:	mov    edi,eax
   140010505:	mov    DWORD PTR [rsp+0x3c],eax
   140010509:	jmp    0x1400101d9
   14001050e:	lea    rsi,[rsi+rsi*4]
   140010512:	add    rsi,rsi
   140010515:	jmp    0x140010551
   140010517:	movzx  esi,dil
   14001051b:	mov    ecx,esi
   14001051d:	call   0x14000c848
   140010522:	xor    r8d,r8d
   140010525:	test   eax,eax
   140010527:	je     0x14001058f
   140010529:	shl    QWORD PTR [rbp-0x70],0x4
   14001052e:	mov    ecx,esi
   140010530:	movsx  ebx,dil
   140010534:	call   0x14000c7c8
   140010539:	mov    rsi,QWORD PTR [rbp-0x70]
   14001053d:	mov    edi,ebx
   14001053f:	and    edi,0xffffffdf
   140010542:	xor    r8d,r8d
   140010545:	sub    edi,0x7
   140010548:	test   eax,eax
   14001054a:	cmovne edi,ebx
   14001054d:	mov    DWORD PTR [rsp+0x3c],edi
   140010551:	lea    eax,[rdi-0x30]
   140010554:	mov    edx,0x1
   140010559:	add    DWORD PTR [rsp+0x4c],edx
   14001055d:	movsxd rcx,eax
   140010560:	add    rsi,rcx
   140010563:	mov    QWORD PTR [rbp-0x70],rsi
   140010567:	cmp    DWORD PTR [rsp+0x60],r8d
   14001056c:	je     0x140010573
   14001056e:	sub    r13d,edx
   140010571:	je     0x1400105a9
   140010573:	mov    rbx,QWORD PTR [rsp+0x68]
   140010578:	add    DWORD PTR [rsp+0x34],edx
   14001057c:	mov    rcx,rbx
   14001057f:	call   0x14000f7b0
   140010584:	mov    edi,eax
   140010586:	mov    DWORD PTR [rsp+0x3c],eax
   14001058a:	jmp    0x1400101f8
   14001058f:	dec    DWORD PTR [rsp+0x34]
   140010593:	cmp    edi,r15d
   140010596:	je     0x1400105a5
   140010598:	mov    rdx,rbx
   14001059b:	mov    ecx,edi
   14001059d:	call   0x140015ba0
   1400105a2:	xor    r8d,r8d
   1400105a5:	mov    rsi,QWORD PTR [rbp-0x70]
   1400105a9:	cmp    BYTE PTR [rsp+0x40],r8b
   1400105ae:	je     0x1400106b2
   1400105b4:	neg    rsi
   1400105b7:	mov    QWORD PTR [rbp-0x70],rsi
   1400105bb:	jmp    0x1400106b2
   1400105c0:	mov    esi,DWORD PTR [rsp+0x5c]
   1400105c4:	test   bl,bl
   1400105c6:	jne    0x1400106a5
   1400105cc:	mov    r13d,DWORD PTR [rsp+0x44]
   1400105d1:	mov    rbx,QWORD PTR [rsp+0x68]
   1400105d6:	cmp    r14d,0x78
   1400105da:	je     0x140010612
   1400105dc:	cmp    r14d,0x70
   1400105e0:	je     0x140010612
   1400105e2:	movzx  ecx,dil
   1400105e6:	call   0x14000c7c8
   1400105eb:	xor    r8d,r8d
   1400105ee:	test   eax,eax
   1400105f0:	je     0x14001068b
   1400105f6:	cmp    r14d,0x6f
   1400105fa:	jne    0x14001060a
   1400105fc:	cmp    edi,0x38
   1400105ff:	jge    0x14001068b
   140010605:	shl    esi,0x3
   140010608:	jmp    0x140010652
   14001060a:	lea    eax,[rsi+rsi*4]
   14001060d:	lea    esi,[rax+rax*1]
   140010610:	jmp    0x140010652
   140010612:	movzx  esi,dil
   140010616:	mov    ecx,esi
   140010618:	call   0x14000c848
   14001061d:	xor    r8d,r8d
   140010620:	test   eax,eax
   140010622:	je     0x14001068b
   140010624:	mov    eax,DWORD PTR [rsp+0x5c]
   140010628:	mov    ecx,esi
   14001062a:	movsx  ebx,dil
   14001062e:	shl    eax,0x4
   140010631:	mov    DWORD PTR [rsp+0x5c],eax
   140010635:	call   0x14000c7c8
   14001063a:	mov    esi,DWORD PTR [rsp+0x5c]
   14001063e:	mov    edi,ebx
   140010640:	xor    r8d,r8d
   140010643:	and    edi,0xffffffdf
   140010646:	sub    edi,0x7
   140010649:	test   eax,eax
   14001064b:	cmovne edi,ebx
   14001064e:	mov    DWORD PTR [rsp+0x3c],edi
   140010652:	mov    eax,0x1
   140010657:	lea    esi,[rsi+rdi*1-0x30]
   14001065b:	add    DWORD PTR [rsp+0x4c],eax
   14001065f:	mov    DWORD PTR [rsp+0x5c],esi
   140010663:	cmp    DWORD PTR [rsp+0x60],r8d
   140010668:	je     0x14001066f
   14001066a:	sub    r13d,eax
   14001066d:	je     0x1400106a5
   14001066f:	mov    rbx,QWORD PTR [rsp+0x68]
   140010674:	add    DWORD PTR [rsp+0x34],eax
   140010678:	mov    rcx,rbx
   14001067b:	call   0x14000f7b0
   140010680:	mov    edi,eax
   140010682:	mov    DWORD PTR [rsp+0x3c],eax
   140010686:	jmp    0x1400105d6
   14001068b:	dec    DWORD PTR [rsp+0x34]
   14001068f:	cmp    edi,r15d
   140010692:	je     0x1400106a1
   140010694:	mov    rdx,rbx
   140010697:	mov    ecx,edi
   140010699:	call   0x140015ba0
   14001069e:	xor    r8d,r8d
   1400106a1:	mov    esi,DWORD PTR [rsp+0x5c]
   1400106a5:	cmp    BYTE PTR [rsp+0x40],r8b
   1400106aa:	je     0x1400106b2
   1400106ac:	neg    esi
   1400106ae:	mov    DWORD PTR [rsp+0x5c],esi
   1400106b2:	mov    eax,DWORD PTR [rsp+0x4c]
   1400106b6:	cmp    r14d,0x46
   1400106ba:	cmove  eax,r8d
   1400106be:	test   eax,eax
   1400106c0:	je     0x14000fe6e
   1400106c6:	cmp    BYTE PTR [rsp+0x30],r8b
   1400106cb:	jne    0x1400106ec
   1400106cd:	inc    DWORD PTR [rsp+0x70]
   1400106d1:	mov    eax,DWORD PTR [rsp+0x5c]
   1400106d5:	jmp    0x1400106dc
   1400106d7:	mov    r12d,DWORD PTR [rsp+0x48]
   1400106dc:	mov    rcx,QWORD PTR [rbp-0x60]
   1400106e0:	test   r12d,r12d
   1400106e3:	je     0x1400106f8
   1400106e5:	mov    rax,QWORD PTR [rbp-0x70]
   1400106e9:	mov    QWORD PTR [rcx],rax
   1400106ec:	mov    r12,QWORD PTR [rsp+0x50]
   1400106f1:	mov    r14d,DWORD PTR [rsp+0x34]
   1400106f6:	jmp    0x140010710
   1400106f8:	mov    r12,QWORD PTR [rsp+0x50]
   1400106fd:	mov    r14d,DWORD PTR [rsp+0x34]
   140010702:	cmp    BYTE PTR [rsp+0x38],r8b
   140010707:	je     0x14001070d
   140010709:	mov    DWORD PTR [rcx],eax
   14001070b:	jmp    0x140010710
   14001070d:	mov    WORD PTR [rcx],ax
   140010710:	mov    rsi,QWORD PTR [rsp+0x68]
   140010715:	mov    r13d,0x1
   14001071b:	add    BYTE PTR [rsp+0x39],r13b
   140010720:	add    r12,r13
   140010723:	mov    QWORD PTR [rsp+0x50],r12
   140010728:	jmp    0x14001078c
   14001072a:	cmp    BYTE PTR [r12],cl
   14001072e:	jne    0x14001073b
   140010730:	lea    rax,[r12+0x1]
   140010735:	cmp    BYTE PTR [rax],cl
   140010737:	cmove  r12,rax
   14001073b:	add    r14d,r13d
   14001073e:	mov    rcx,rsi
   140010741:	mov    DWORD PTR [rsp+0x34],r14d
   140010746:	call   0x14000f7b0
   14001074b:	mov    edi,eax
   14001074d:	mov    DWORD PTR [rsp+0x3c],eax
   140010751:	movzx  eax,BYTE PTR [r12]
   140010756:	add    r12,r13
   140010759:	mov    QWORD PTR [rsp+0x50],r12
   14001075e:	cmp    eax,edi
   140010760:	jne    0x1400107f2
   140010766:	movzx  ecx,dil
   14001076a:	call   0x140015380
   14001076f:	test   eax,eax
   140010771:	je     0x14001078c
   140010773:	mov    rcx,rsi
   140010776:	call   0x14000f7b0
   14001077b:	movzx  ecx,BYTE PTR [r12]
   140010780:	add    r12,r13
   140010783:	mov    QWORD PTR [rsp+0x50],r12
   140010788:	cmp    ecx,eax
   14001078a:	jne    0x1400107d5
   14001078c:	cmp    edi,r15d
   14001078f:	jne    0x1400107a8
   140010791:	cmp    BYTE PTR [r12],0x25
   140010796:	jne    0x14000fe6e
   14001079c:	cmp    BYTE PTR [r12+0x1],0x6e
   1400107a2:	jne    0x14000fe6e
   1400107a8:	mov    al,BYTE PTR [r12]
   1400107ac:	xor    ebx,ebx
   1400107ae:	test   al,al
   1400107b0:	je     0x14000fe70
   1400107b6:	jmp    0x14000f917
   1400107bb:	cmp    edi,r15d
   1400107be:	je     0x14000fe6e
   1400107c4:	mov    rdx,QWORD PTR [rsp+0x68]
   1400107c9:	mov    ecx,edi
   1400107cb:	call   0x140015ba0
   1400107d0:	jmp    0x14000fe6e
   1400107d5:	cmp    eax,r15d
   1400107d8:	je     0x1400107e4
   1400107da:	mov    rdx,rsi
   1400107dd:	mov    ecx,eax
   1400107df:	call   0x140015ba0
   1400107e4:	cmp    edi,r15d
   1400107e7:	je     0x14000fe6e
   1400107ed:	mov    rdx,rsi
   1400107f0:	jmp    0x1400107c9
   1400107f2:	cmp    edi,r15d
   1400107f5:	je     0x14000fe70
   1400107fb:	mov    rdx,rsi
   1400107fe:	mov    ecx,edi
   140010800:	call   0x140015ba0
   140010805:	jmp    0x14000fe70
   14001080a:	mov    r13d,DWORD PTR [rsp+0x70]
   14001080f:	cmp    BYTE PTR [rbp-0x20],bl
   140010812:	je     0x14001081f
   140010814:	mov    rcx,QWORD PTR [rbp-0x28]
   140010818:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001081f:	mov    eax,r13d
   140010822:	mov    rcx,QWORD PTR [rbp+0x170]
   140010829:	xor    rcx,rsp
   14001082c:	call   0x14000a850
   140010831:	mov    rbx,QWORD PTR [rsp+0x2d0]
   140010839:	add    rsp,0x280
   140010840:	pop    r15
   140010842:	pop    r14
   140010844:	pop    r13
   140010846:	pop    r12
   140010848:	pop    rdi
   140010849:	pop    rsi
   14001084a:	pop    rbp
   14001084b:	ret    
   14001084c:	mov    rax,rsp
   14001084f:	mov    QWORD PTR [rax+0x10],rbx
   140010853:	mov    QWORD PTR [rax+0x18],rbp
   140010857:	mov    QWORD PTR [rax+0x20],rsi
   14001085b:	mov    DWORD PTR [rax+0x8],ecx
   14001085e:	push   rdi
   14001085f:	sub    rsp,0x20
   140010863:	mov    rcx,rdx
   140010866:	mov    rbx,rdx
   140010869:	call   0x140010b28
   14001086e:	mov    ecx,DWORD PTR [rbx+0x18]
   140010871:	movsxd rsi,eax
   140010874:	test   cl,0x82
   140010877:	jne    0x140010890
   140010879:	call   0x14000bdf0
   14001087e:	mov    DWORD PTR [rax],0x9
   140010884:	or     DWORD PTR [rbx+0x18],0x20
   140010888:	or     eax,0xffffffff
   14001088b:	jmp    0x1400109c4
   140010890:	test   cl,0x40
   140010893:	je     0x1400108a2
   140010895:	call   0x14000bdf0
   14001089a:	mov    DWORD PTR [rax],0x22
   1400108a0:	jmp    0x140010884
   1400108a2:	xor    edi,edi
   1400108a4:	test   cl,0x1
   1400108a7:	je     0x1400108c2
   1400108a9:	mov    DWORD PTR [rbx+0x8],edi
   1400108ac:	test   cl,0x10
   1400108af:	je     0x14001093e
   1400108b5:	mov    rax,QWORD PTR [rbx+0x10]
   1400108b9:	and    ecx,0xfffffffe
   1400108bc:	mov    QWORD PTR [rbx],rax
   1400108bf:	mov    DWORD PTR [rbx+0x18],ecx
   1400108c2:	mov    eax,DWORD PTR [rbx+0x18]
   1400108c5:	mov    DWORD PTR [rbx+0x8],edi
   1400108c8:	and    eax,0xffffffef
   1400108cb:	or     eax,0x2
   1400108ce:	mov    DWORD PTR [rbx+0x18],eax
   1400108d1:	test   eax,0x10c
   1400108d6:	jne    0x140010907
   1400108d8:	call   0x14000abc8
   1400108dd:	add    rax,0x30
   1400108e1:	cmp    rbx,rax
   1400108e4:	je     0x1400108f4
   1400108e6:	call   0x14000abc8
   1400108eb:	add    rax,0x60
   1400108ef:	cmp    rbx,rax
   1400108f2:	jne    0x1400108ff
   1400108f4:	mov    ecx,esi
   1400108f6:	call   0x1400152d8
   1400108fb:	test   eax,eax
   1400108fd:	jne    0x140010907
   1400108ff:	mov    rcx,rbx
   140010902:	call   0x140015fa8
   140010907:	test   DWORD PTR [rbx+0x18],0x108
   14001090e:	je     0x1400109a1
   140010914:	mov    ebp,DWORD PTR [rbx]
   140010916:	mov    rdx,QWORD PTR [rbx+0x10]
   14001091a:	sub    ebp,DWORD PTR [rbx+0x10]
   14001091d:	lea    rax,[rdx+0x1]
   140010921:	mov    QWORD PTR [rbx],rax
   140010924:	mov    eax,DWORD PTR [rbx+0x24]
   140010927:	dec    eax
   140010929:	mov    DWORD PTR [rbx+0x8],eax
   14001092c:	test   ebp,ebp
   14001092e:	jle    0x140010949
   140010930:	mov    r8d,ebp
   140010933:	mov    ecx,esi
   140010935:	call   0x1400121bc
   14001093a:	mov    edi,eax
   14001093c:	jmp    0x140010995
   14001093e:	or     ecx,0x20
   140010941:	mov    DWORD PTR [rbx+0x18],ecx
   140010944:	jmp    0x140010888
   140010949:	cmp    esi,0xffffffff
   14001094c:	je     0x140010971
   14001094e:	cmp    esi,0xfffffffe
   140010951:	je     0x140010971
   140010953:	mov    rcx,rsi
   140010956:	mov    rax,rsi
   140010959:	lea    rdx,[rip+0x15120]        # 0x140025a80
   140010960:	and    ecx,0x1f
   140010963:	sar    rax,0x5
   140010967:	imul   rcx,rcx,0x58
   14001096b:	add    rcx,QWORD PTR [rdx+rax*8]
   14001096f:	jmp    0x140010978
   140010971:	lea    rcx,[rip+0x12f38]        # 0x1400238b0
   140010978:	test   BYTE PTR [rcx+0x8],0x20
   14001097c:	je     0x140010995
   14001097e:	xor    edx,edx
   140010980:	mov    ecx,esi
   140010982:	lea    r8d,[rdx+0x2]
   140010986:	call   0x140015ec4
   14001098b:	cmp    rax,0xffffffffffffffff
   14001098f:	je     0x140010884
   140010995:	mov    rcx,QWORD PTR [rbx+0x10]
   140010999:	mov    al,BYTE PTR [rsp+0x30]
   14001099d:	mov    BYTE PTR [rcx],al
   14001099f:	jmp    0x1400109b7
   1400109a1:	mov    ebp,0x1
   1400109a6:	lea    rdx,[rsp+0x30]
   1400109ab:	mov    ecx,esi
   1400109ad:	mov    r8d,ebp
   1400109b0:	call   0x1400121bc
   1400109b5:	mov    edi,eax
   1400109b7:	cmp    edi,ebp
   1400109b9:	jne    0x140010884
   1400109bf:	movzx  eax,BYTE PTR [rsp+0x30]
   1400109c4:	mov    rbx,QWORD PTR [rsp+0x38]
   1400109c9:	mov    rbp,QWORD PTR [rsp+0x40]
   1400109ce:	mov    rsi,QWORD PTR [rsp+0x48]
   1400109d3:	add    rsp,0x20
   1400109d7:	pop    rdi
   1400109d8:	ret    
   1400109d9:	int3   
   1400109da:	int3   
   1400109db:	int3   
   1400109dc:	mov    QWORD PTR [rsp+0x8],rcx
   1400109e1:	sub    rsp,0x88
   1400109e8:	lea    rcx,[rip+0x14a81]        # 0x140025470
   1400109ef:	call   QWORD PTR [rip+0x97b3]        # 0x14001a1a8
   1400109f5:	mov    rax,QWORD PTR [rip+0x14b6c]        # 0x140025568
   1400109fc:	mov    QWORD PTR [rsp+0x58],rax
   140010a01:	xor    r8d,r8d
   140010a04:	lea    rdx,[rsp+0x60]
   140010a09:	mov    rcx,QWORD PTR [rsp+0x58]
   140010a0e:	call   0x1400199c2
   140010a13:	mov    QWORD PTR [rsp+0x50],rax
   140010a18:	cmp    QWORD PTR [rsp+0x50],0x0
   140010a1e:	je     0x140010a61
   140010a20:	mov    QWORD PTR [rsp+0x38],0x0
   140010a29:	lea    rax,[rsp+0x48]
   140010a2e:	mov    QWORD PTR [rsp+0x30],rax
   140010a33:	lea    rax,[rsp+0x40]
   140010a38:	mov    QWORD PTR [rsp+0x28],rax
   140010a3d:	lea    rax,[rip+0x14a2c]        # 0x140025470
   140010a44:	mov    QWORD PTR [rsp+0x20],rax
   140010a49:	mov    r9,QWORD PTR [rsp+0x50]
   140010a4e:	mov    r8,QWORD PTR [rsp+0x58]
   140010a53:	mov    rdx,QWORD PTR [rsp+0x60]
   140010a58:	xor    ecx,ecx
   140010a5a:	call   0x1400199bc
   140010a5f:	jmp    0x140010a83
   140010a61:	mov    rax,QWORD PTR [rsp+0x88]
   140010a69:	mov    QWORD PTR [rip+0x14af8],rax        # 0x140025568
   140010a70:	lea    rax,[rsp+0x88]
   140010a78:	add    rax,0x8
   140010a7c:	mov    QWORD PTR [rip+0x14a85],rax        # 0x140025508
   140010a83:	mov    rax,QWORD PTR [rip+0x14ade]        # 0x140025568
   140010a8a:	mov    QWORD PTR [rip+0x1494f],rax        # 0x1400253e0
   140010a91:	mov    rax,QWORD PTR [rsp+0x90]
   140010a99:	mov    QWORD PTR [rip+0x14a50],rax        # 0x1400254f0
   140010aa0:	mov    DWORD PTR [rip+0x14926],0xc0000409        # 0x1400253d0
   140010aaa:	mov    DWORD PTR [rip+0x14920],0x1        # 0x1400253d4
   140010ab4:	mov    rax,QWORD PTR [rip+0x12605]        # 0x1400230c0
   140010abb:	mov    QWORD PTR [rsp+0x68],rax
   140010ac0:	mov    rax,QWORD PTR [rip+0x12601]        # 0x1400230c8
   140010ac7:	mov    QWORD PTR [rsp+0x70],rax
   140010acc:	call   QWORD PTR [rip+0x96be]        # 0x14001a190
   140010ad2:	mov    DWORD PTR [rip+0x14990],eax        # 0x140025468
   140010ad8:	mov    ecx,0x1
   140010add:	call   0x140014e7c
   140010ae2:	xor    ecx,ecx
   140010ae4:	call   QWORD PTR [rip+0x969e]        # 0x14001a188
   140010aea:	lea    rcx,[rip+0xebdf]        # 0x14001f6d0
   140010af1:	call   QWORD PTR [rip+0x9689]        # 0x14001a180
   140010af7:	cmp    DWORD PTR [rip+0x1496a],0x0        # 0x140025468
   140010afe:	jne    0x140010b0a
   140010b00:	mov    ecx,0x1
   140010b05:	call   0x140014e7c
   140010b0a:	call   QWORD PTR [rip+0x96a8]        # 0x14001a1b8
   140010b10:	mov    edx,0xc0000409
   140010b15:	mov    rcx,rax
   140010b18:	call   QWORD PTR [rip+0x9692]        # 0x14001a1b0
   140010b1e:	add    rsp,0x88
   140010b25:	ret    
   140010b26:	int3   
   140010b27:	int3   
   140010b28:	sub    rsp,0x28
   140010b2c:	test   rcx,rcx
   140010b2f:	jne    0x140010b46
   140010b31:	call   0x14000bdf0
   140010b36:	mov    DWORD PTR [rax],0x16
   140010b3c:	call   0x14000d04c
   140010b41:	or     eax,0xffffffff
   140010b44:	jmp    0x140010b49
   140010b46:	mov    eax,DWORD PTR [rcx+0x1c]
   140010b49:	add    rsp,0x28
   140010b4d:	ret    
   140010b4e:	int3   
   140010b4f:	int3   
   140010b50:	mov    rax,rsp
   140010b53:	mov    QWORD PTR [rax+0x8],rbx
   140010b57:	mov    QWORD PTR [rax+0x10],rbp
   140010b5b:	mov    QWORD PTR [rax+0x18],rsi
   140010b5f:	mov    QWORD PTR [rax+0x20],rdi
   140010b63:	push   r12
   140010b65:	sub    rsp,0x20
   140010b69:	mov    edi,DWORD PTR [rip+0x14dd1]        # 0x140025940
   140010b6f:	xor    ebp,ebp
   140010b71:	mov    rsi,rcx
   140010b74:	or     r12d,0xffffffff
   140010b78:	mov    rcx,rsi
   140010b7b:	call   0x14000b304
   140010b80:	mov    rbx,rax
   140010b83:	test   rax,rax
   140010b86:	jne    0x140010bb0
   140010b88:	test   edi,edi
   140010b8a:	je     0x140010bb0
   140010b8c:	mov    ecx,ebp
   140010b8e:	call   QWORD PTR [rip+0x96cc]        # 0x14001a260
   140010b94:	mov    edi,DWORD PTR [rip+0x14da6]        # 0x140025940
   140010b9a:	lea    r11d,[rbp+0x3e8]
   140010ba1:	cmp    r11d,edi
   140010ba4:	mov    ebp,r11d
   140010ba7:	cmova  ebp,r12d
   140010bab:	cmp    ebp,r12d
   140010bae:	jne    0x140010b78
   140010bb0:	mov    rbp,QWORD PTR [rsp+0x38]
   140010bb5:	mov    rsi,QWORD PTR [rsp+0x40]
   140010bba:	mov    rdi,QWORD PTR [rsp+0x48]
   140010bbf:	mov    rax,rbx
   140010bc2:	mov    rbx,QWORD PTR [rsp+0x30]
   140010bc7:	add    rsp,0x20
   140010bcb:	pop    r12
   140010bcd:	ret    
   140010bce:	int3   
   140010bcf:	int3   
   140010bd0:	mov    rax,rsp
   140010bd3:	mov    QWORD PTR [rax+0x8],rbx
   140010bd7:	mov    QWORD PTR [rax+0x10],rbp
   140010bdb:	mov    QWORD PTR [rax+0x18],rsi
   140010bdf:	mov    QWORD PTR [rax+0x20],rdi
   140010be3:	push   r12
   140010be5:	sub    rsp,0x20
   140010be9:	xor    edi,edi
   140010beb:	mov    rsi,rdx
   140010bee:	mov    rbp,rcx
   140010bf1:	or     r12d,0xffffffff
   140010bf5:	xor    r8d,r8d
   140010bf8:	mov    rdx,rsi
   140010bfb:	mov    rcx,rbp
   140010bfe:	call   0x140015a74
   140010c03:	mov    rbx,rax
   140010c06:	test   rax,rax
   140010c09:	jne    0x140010c35
   140010c0b:	cmp    DWORD PTR [rip+0x14d2f],eax        # 0x140025940
   140010c11:	jbe    0x140010c35
   140010c13:	mov    ecx,edi
   140010c15:	call   QWORD PTR [rip+0x9645]        # 0x14001a260
   140010c1b:	lea    r11d,[rdi+0x3e8]
   140010c22:	cmp    r11d,DWORD PTR [rip+0x14d17]        # 0x140025940
   140010c29:	mov    edi,r11d
   140010c2c:	cmova  edi,r12d
   140010c30:	cmp    edi,r12d
   140010c33:	jne    0x140010bf5
   140010c35:	mov    rbp,QWORD PTR [rsp+0x38]
   140010c3a:	mov    rsi,QWORD PTR [rsp+0x40]
   140010c3f:	mov    rdi,QWORD PTR [rsp+0x48]
   140010c44:	mov    rax,rbx
   140010c47:	mov    rbx,QWORD PTR [rsp+0x30]
   140010c4c:	add    rsp,0x20
   140010c50:	pop    r12
   140010c52:	ret    
   140010c53:	int3   
   140010c54:	mov    rax,rsp
   140010c57:	mov    QWORD PTR [rax+0x8],rbx
   140010c5b:	mov    QWORD PTR [rax+0x10],rbp
   140010c5f:	mov    QWORD PTR [rax+0x18],rsi
   140010c63:	mov    QWORD PTR [rax+0x20],rdi
   140010c67:	push   r12
   140010c69:	sub    rsp,0x20
   140010c6d:	xor    esi,esi
   140010c6f:	mov    rdi,rdx
   140010c72:	mov    rbp,rcx
   140010c75:	or     r12d,0xffffffff
   140010c79:	mov    rdx,rdi
   140010c7c:	mov    rcx,rbp
   140010c7f:	call   0x14000b3bc
   140010c84:	mov    rbx,rax
   140010c87:	test   rax,rax
   140010c8a:	jne    0x140010cbb
   140010c8c:	test   rdi,rdi
   140010c8f:	je     0x140010cbb
   140010c91:	cmp    DWORD PTR [rip+0x14ca9],eax        # 0x140025940
   140010c97:	jbe    0x140010cbb
   140010c99:	mov    ecx,esi
   140010c9b:	call   QWORD PTR [rip+0x95bf]        # 0x14001a260
   140010ca1:	lea    r11d,[rsi+0x3e8]
   140010ca8:	cmp    r11d,DWORD PTR [rip+0x14c91]        # 0x140025940
   140010caf:	mov    esi,r11d
   140010cb2:	cmova  esi,r12d
   140010cb6:	cmp    esi,r12d
   140010cb9:	jne    0x140010c79
   140010cbb:	mov    rbp,QWORD PTR [rsp+0x38]
   140010cc0:	mov    rsi,QWORD PTR [rsp+0x40]
   140010cc5:	mov    rdi,QWORD PTR [rsp+0x48]
   140010cca:	mov    rax,rbx
   140010ccd:	mov    rbx,QWORD PTR [rsp+0x30]
   140010cd2:	add    rsp,0x20
   140010cd6:	pop    r12
   140010cd8:	ret    
   140010cd9:	int3   
   140010cda:	int3   
   140010cdb:	int3   
   140010cdc:	mov    QWORD PTR [rsp+0x8],rbx
   140010ce1:	mov    QWORD PTR [rsp+0x10],rbp
   140010ce6:	mov    QWORD PTR [rsp+0x18],rsi
   140010ceb:	push   rdi
   140010cec:	push   r12
   140010cee:	push   r13
   140010cf0:	sub    rsp,0x20
   140010cf4:	xor    esi,esi
   140010cf6:	mov    rdi,r8
   140010cf9:	mov    rbp,rdx
   140010cfc:	or     r13d,0xffffffff
   140010d00:	mov    r12,rcx
   140010d03:	mov    r8,rdi
   140010d06:	mov    rdx,rbp
   140010d09:	mov    rcx,r12
   140010d0c:	call   0x140016298
   140010d11:	mov    rbx,rax
   140010d14:	test   rax,rax
   140010d17:	jne    0x140010d48
   140010d19:	test   rdi,rdi
   140010d1c:	je     0x140010d48
   140010d1e:	cmp    DWORD PTR [rip+0x14c1c],eax        # 0x140025940
   140010d24:	jbe    0x140010d48
   140010d26:	mov    ecx,esi
   140010d28:	call   QWORD PTR [rip+0x9532]        # 0x14001a260
   140010d2e:	lea    r11d,[rsi+0x3e8]
   140010d35:	cmp    r11d,DWORD PTR [rip+0x14c04]        # 0x140025940
   140010d3c:	mov    esi,r11d
   140010d3f:	cmova  esi,r13d
   140010d43:	cmp    esi,r13d
   140010d46:	jne    0x140010d03
   140010d48:	mov    rbp,QWORD PTR [rsp+0x48]
   140010d4d:	mov    rsi,QWORD PTR [rsp+0x50]
   140010d52:	mov    rax,rbx
   140010d55:	mov    rbx,QWORD PTR [rsp+0x40]
   140010d5a:	add    rsp,0x20
   140010d5e:	pop    r13
   140010d60:	pop    r12
   140010d62:	pop    rdi
   140010d63:	ret    
   140010d64:	mov    QWORD PTR [rsp+0x8],rbx
   140010d69:	mov    QWORD PTR [rsp+0x10],rsi
   140010d6e:	push   rdi
   140010d6f:	sub    rsp,0x30
   140010d73:	xor    edi,edi
   140010d75:	lea    ecx,[rdi+0x1]
   140010d78:	call   0x14000cb58
   140010d7d:	nop
   140010d7e:	lea    ebx,[rdi+0x3]
   140010d81:	mov    DWORD PTR [rsp+0x20],ebx
   140010d85:	cmp    ebx,DWORD PTR [rip+0x15f15]        # 0x140026ca0
   140010d8b:	jge    0x140010df2
   140010d8d:	movsxd rsi,ebx
   140010d90:	mov    rax,QWORD PTR [rip+0x14ef1]        # 0x140025c88
   140010d97:	cmp    QWORD PTR [rax+rsi*8],0x0
   140010d9c:	je     0x140010dee
   140010d9e:	mov    rcx,QWORD PTR [rax+rsi*8]
   140010da2:	test   BYTE PTR [rcx+0x18],0x83
   140010da6:	je     0x140010db8
   140010da8:	call   0x14000ae58
   140010dad:	cmp    eax,0xffffffff
   140010db0:	je     0x140010db8
   140010db2:	inc    edi
   140010db4:	mov    DWORD PTR [rsp+0x24],edi
   140010db8:	cmp    ebx,0x14
   140010dbb:	jl     0x140010dee
   140010dbd:	mov    rax,QWORD PTR [rip+0x14ec4]        # 0x140025c88
   140010dc4:	mov    rcx,QWORD PTR [rax+rsi*8]
   140010dc8:	add    rcx,0x30
   140010dcc:	call   QWORD PTR [rip+0x9396]        # 0x14001a168
   140010dd2:	mov    rcx,QWORD PTR [rip+0x14eaf]        # 0x140025c88
   140010dd9:	mov    rcx,QWORD PTR [rcx+rsi*8]
   140010ddd:	call   0x14000b490
   140010de2:	mov    r11,QWORD PTR [rip+0x14e9f]        # 0x140025c88
   140010de9:	and    QWORD PTR [r11+rsi*8],0x0
   140010dee:	inc    ebx
   140010df0:	jmp    0x140010d81
   140010df2:	mov    ecx,0x1
   140010df7:	call   0x14000ca58
   140010dfc:	mov    eax,edi
   140010dfe:	mov    rbx,QWORD PTR [rsp+0x40]
   140010e03:	mov    rsi,QWORD PTR [rsp+0x48]
   140010e08:	add    rsp,0x30
   140010e0c:	pop    rdi
   140010e0d:	ret    
   140010e0e:	int3   
   140010e0f:	int3   
   140010e10:	mov    QWORD PTR [rsp+0x8],rbx
   140010e15:	push   rdi
   140010e16:	sub    rsp,0x20
   140010e1a:	movsxd rdi,ecx
   140010e1d:	mov    ecx,edi
   140010e1f:	call   0x140011710
   140010e24:	cmp    rax,0xffffffffffffffff
   140010e28:	je     0x140010e83
   140010e2a:	mov    rax,QWORD PTR [rip+0x14c4f]        # 0x140025a80
   140010e31:	mov    ecx,0x2
   140010e36:	cmp    edi,0x1
   140010e39:	jne    0x140010e44
   140010e3b:	test   BYTE PTR [rax+0xb8],dil
   140010e42:	jne    0x140010e4e
   140010e44:	cmp    edi,ecx
   140010e46:	jne    0x140010e65
   140010e48:	test   BYTE PTR [rax+0x60],0x1
   140010e4c:	je     0x140010e65
   140010e4e:	call   0x140011710
   140010e53:	mov    ecx,0x1
   140010e58:	mov    rbx,rax
   140010e5b:	call   0x140011710
   140010e60:	cmp    rax,rbx
   140010e63:	je     0x140010e83
   140010e65:	mov    ecx,edi
   140010e67:	call   0x140011710
   140010e6c:	mov    rcx,rax
   140010e6f:	call   QWORD PTR [rip+0x9203]        # 0x14001a078
   140010e75:	test   eax,eax
   140010e77:	jne    0x140010e83
   140010e79:	call   QWORD PTR [rip+0x91f1]        # 0x14001a070
   140010e7f:	mov    ebx,eax
   140010e81:	jmp    0x140010e85
   140010e83:	xor    ebx,ebx
   140010e85:	mov    ecx,edi
   140010e87:	call   0x140011664
   140010e8c:	mov    r11,rdi
   140010e8f:	mov    rcx,rdi
   140010e92:	sar    rcx,0x5
   140010e96:	and    r11d,0x1f
   140010e9a:	lea    rdx,[rip+0x14bdf]        # 0x140025a80
   140010ea1:	mov    rcx,QWORD PTR [rdx+rcx*8]
   140010ea5:	imul   r11,r11,0x58
   140010ea9:	mov    BYTE PTR [rcx+r11*1+0x8],0x0
   140010eaf:	test   ebx,ebx
   140010eb1:	je     0x140010ebf
   140010eb3:	mov    ecx,ebx
   140010eb5:	call   0x14000be30
   140010eba:	or     eax,0xffffffff
   140010ebd:	jmp    0x140010ec1
   140010ebf:	xor    eax,eax
   140010ec1:	mov    rbx,QWORD PTR [rsp+0x30]
   140010ec6:	add    rsp,0x20
   140010eca:	pop    rdi
   140010ecb:	ret    
   140010ecc:	mov    QWORD PTR [rsp+0x18],rbx
   140010ed1:	mov    DWORD PTR [rsp+0x8],ecx
   140010ed5:	push   rsi
   140010ed6:	push   rdi
   140010ed7:	push   r12
   140010ed9:	sub    rsp,0x20
   140010edd:	movsxd rbx,ecx
   140010ee0:	cmp    ebx,0xfffffffe
   140010ee3:	jne    0x140010efd
   140010ee5:	call   0x14000be10
   140010eea:	and    DWORD PTR [rax],0x0
   140010eed:	call   0x14000bdf0
   140010ef2:	mov    DWORD PTR [rax],0x9
   140010ef8:	jmp    0x140010f7e
   140010efd:	test   ecx,ecx
   140010eff:	js     0x140010f66
   140010f01:	cmp    ebx,DWORD PTR [rip+0x14b65]        # 0x140025a6c
   140010f07:	jae    0x140010f66
   140010f09:	mov    rdi,rbx
   140010f0c:	mov    rsi,rbx
   140010f0f:	sar    rsi,0x5
   140010f13:	lea    r12,[rip+0x14b66]        # 0x140025a80
   140010f1a:	and    edi,0x1f
   140010f1d:	imul   rdi,rdi,0x58
   140010f21:	mov    rax,QWORD PTR [r12+rsi*8]
   140010f25:	movsx  ecx,BYTE PTR [rax+rdi*1+0x8]
   140010f2a:	and    ecx,0x1
   140010f2d:	je     0x140010f66
   140010f2f:	mov    ecx,ebx
   140010f31:	call   0x140011784
   140010f36:	nop
   140010f37:	mov    rax,QWORD PTR [r12+rsi*8]
   140010f3b:	test   BYTE PTR [rax+rdi*1+0x8],0x1
   140010f40:	je     0x140010f4d
   140010f42:	mov    ecx,ebx
   140010f44:	call   0x140010e10
   140010f49:	mov    edi,eax
   140010f4b:	jmp    0x140010f5b
   140010f4d:	call   0x14000bdf0
   140010f52:	mov    DWORD PTR [rax],0x9
   140010f58:	or     edi,0xffffffff
   140010f5b:	mov    ecx,ebx
   140010f5d:	call   0x14001182c
   140010f62:	mov    eax,edi
   140010f64:	jmp    0x140010f81
   140010f66:	call   0x14000be10
   140010f6b:	and    DWORD PTR [rax],0x0
   140010f6e:	call   0x14000bdf0
   140010f73:	mov    DWORD PTR [rax],0x9
   140010f79:	call   0x14000d04c
   140010f7e:	or     eax,0xffffffff
   140010f81:	mov    rbx,QWORD PTR [rsp+0x50]
   140010f86:	add    rsp,0x20
   140010f8a:	pop    r12
   140010f8c:	pop    rdi
   140010f8d:	pop    rsi
   140010f8e:	ret    
   140010f8f:	int3   
   140010f90:	rex push rbx
   140010f92:	sub    rsp,0x20
   140010f96:	test   BYTE PTR [rcx+0x18],0x83
   140010f9a:	mov    rbx,rcx
   140010f9d:	je     0x140010fc1
   140010f9f:	test   BYTE PTR [rcx+0x18],0x8
   140010fa3:	je     0x140010fc1
   140010fa5:	mov    rcx,QWORD PTR [rcx+0x10]
   140010fa9:	call   0x14000b490
   140010fae:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   140010fb5:	xor    eax,eax
   140010fb7:	mov    QWORD PTR [rbx],rax
   140010fba:	mov    QWORD PTR [rbx+0x10],rax
   140010fbe:	mov    DWORD PTR [rbx+0x8],eax
   140010fc1:	add    rsp,0x20
   140010fc5:	pop    rbx
   140010fc6:	ret    
   140010fc7:	int3   
   140010fc8:	mov    QWORD PTR [rsp+0x8],rbx
   140010fcd:	mov    QWORD PTR [rsp+0x10],rsi
   140010fd2:	push   rdi
   140010fd3:	sub    rsp,0x20
   140010fd7:	mov    rdi,rcx
   140010fda:	test   rcx,rcx
   140010fdd:	jne    0x140010ff4
   140010fdf:	call   0x14000bdf0
   140010fe4:	mov    DWORD PTR [rax],0x16
   140010fea:	call   0x14000d04c
   140010fef:	jmp    0x140011107
   140010ff4:	mov    eax,DWORD PTR [rcx+0x18]
   140010ff7:	test   al,0x83
   140010ff9:	je     0x140011107
   140010fff:	test   al,0x40
   140011001:	jne    0x140011107
   140011007:	test   al,0x2
   140011009:	je     0x140011016
   14001100b:	or     eax,0x20
   14001100e:	mov    DWORD PTR [rcx+0x18],eax
   140011011:	jmp    0x140011107
   140011016:	or     eax,0x1
   140011019:	mov    DWORD PTR [rcx+0x18],eax
   14001101c:	test   eax,0x10c
   140011021:	jne    0x14001102a
   140011023:	call   0x140015fa8
   140011028:	jmp    0x140011031
   14001102a:	mov    rax,QWORD PTR [rcx+0x10]
   14001102e:	mov    QWORD PTR [rcx],rax
   140011031:	mov    rcx,rdi
   140011034:	call   0x140010b28
   140011039:	mov    r8d,DWORD PTR [rdi+0x24]
   14001103d:	mov    rdx,QWORD PTR [rdi+0x10]
   140011041:	mov    ecx,eax
   140011043:	call   0x140016a44
   140011048:	mov    DWORD PTR [rdi+0x8],eax
   14001104b:	test   eax,eax
   14001104d:	je     0x1400110f6
   140011053:	cmp    eax,0xffffffff
   140011056:	je     0x1400110f6
   14001105c:	test   BYTE PTR [rdi+0x18],0x82
   140011060:	jne    0x1400110c1
   140011062:	mov    rcx,rdi
   140011065:	call   0x140010b28
   14001106a:	cmp    eax,0xffffffff
   14001106d:	je     0x1400110ab
   14001106f:	mov    rcx,rdi
   140011072:	call   0x140010b28
   140011077:	cmp    eax,0xfffffffe
   14001107a:	je     0x1400110ab
   14001107c:	mov    rcx,rdi
   14001107f:	call   0x140010b28
   140011084:	mov    rcx,rdi
   140011087:	lea    rsi,[rip+0x149f2]        # 0x140025a80
   14001108e:	movsxd rbx,eax
   140011091:	sar    rbx,0x5
   140011095:	call   0x140010b28
   14001109a:	mov    r11d,eax
   14001109d:	and    r11d,0x1f
   1400110a1:	imul   r11,r11,0x58
   1400110a5:	add    r11,QWORD PTR [rsi+rbx*8]
   1400110a9:	jmp    0x1400110b2
   1400110ab:	lea    r11,[rip+0x127fe]        # 0x1400238b0
   1400110b2:	mov    al,BYTE PTR [r11+0x8]
   1400110b6:	and    al,0x82
   1400110b8:	cmp    al,0x82
   1400110ba:	jne    0x1400110c1
   1400110bc:	bts    DWORD PTR [rdi+0x18],0xd
   1400110c1:	cmp    DWORD PTR [rdi+0x24],0x200
   1400110c8:	jne    0x1400110e5
   1400110ca:	test   BYTE PTR [rdi+0x18],0x8
   1400110ce:	je     0x1400110e5
   1400110d0:	mov    eax,DWORD PTR [rdi+0x24]
   1400110d3:	test   DWORD PTR [rdi+0x18],0x400
   1400110da:	mov    ecx,0x1000
   1400110df:	cmove  eax,ecx
   1400110e2:	mov    DWORD PTR [rdi+0x24],eax
   1400110e5:	mov    rcx,QWORD PTR [rdi]
   1400110e8:	dec    DWORD PTR [rdi+0x8]
   1400110eb:	movzx  eax,BYTE PTR [rcx]
   1400110ee:	inc    rcx
   1400110f1:	mov    QWORD PTR [rdi],rcx
   1400110f4:	jmp    0x14001110a
   1400110f6:	neg    eax
   1400110f8:	sbb    eax,eax
   1400110fa:	and    eax,0x10
   1400110fd:	add    eax,0x10
   140011100:	or     DWORD PTR [rdi+0x18],eax
   140011103:	and    DWORD PTR [rdi+0x8],0x0
   140011107:	or     eax,0xffffffff
   14001110a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001110f:	mov    rsi,QWORD PTR [rsp+0x38]
   140011114:	add    rsp,0x20
   140011118:	pop    rdi
   140011119:	ret    
   14001111a:	int3   
   14001111b:	int3   
   14001111c:	mov    QWORD PTR [rsp+0x8],rbx
   140011121:	mov    QWORD PTR [rsp+0x18],rbp
   140011126:	push   rsi
   140011127:	push   rdi
   140011128:	push   r12
   14001112a:	push   r13
   14001112c:	push   r15
   14001112e:	sub    rsp,0x30
   140011132:	mov    ebp,DWORD PTR [rip+0x14860]        # 0x140025998
   140011138:	mov    rsi,r9
   14001113b:	xor    r9d,r9d
   14001113e:	xor    r10d,r10d
   140011141:	xor    r11d,r11d
   140011144:	cmp    BYTE PTR [rdx],0x20
   140011147:	lea    r15d,[r9+0x1]
   14001114b:	mov    r12d,r8d
   14001114e:	mov    rbx,rdx
   140011151:	mov    r13,rcx
   140011154:	jne    0x14001115e
   140011156:	add    rbx,r15
   140011159:	cmp    BYTE PTR [rbx],0x20
   14001115c:	je     0x140011156
   14001115e:	cmp    BYTE PTR [rbx],0x61
   140011161:	je     0x140011192
   140011163:	cmp    BYTE PTR [rbx],0x72
   140011166:	je     0x14001118b
   140011168:	cmp    BYTE PTR [rbx],0x77
   14001116b:	je     0x140011184
   14001116d:	call   0x14000bdf0
   140011172:	mov    DWORD PTR [rax],0x16
   140011178:	call   0x14000d04c
   14001117d:	xor    eax,eax
   14001117f:	jmp    0x1400113bb
   140011184:	mov    edi,0x301
   140011189:	jmp    0x140011197
   14001118b:	xor    edi,edi
   14001118d:	or     ebp,r15d
   140011190:	jmp    0x14001119a
   140011192:	mov    edi,0x109
   140011197:	or     ebp,0x2
   14001119a:	add    rbx,r15
   14001119d:	mov    edx,r15d
   1400111a0:	mov    al,BYTE PTR [rbx]
   1400111a2:	test   al,al
   1400111a4:	je     0x140011365
   1400111aa:	mov    r8d,0x4000
   1400111b0:	test   edx,edx
   1400111b2:	je     0x1400112a6
   1400111b8:	movsx  ecx,al
   1400111bb:	cmp    ecx,0x53
   1400111be:	jg     0x140011239
   1400111c0:	je     0x14001122c
   1400111c2:	sub    ecx,0x20
   1400111c5:	je     0x140011299
   1400111cb:	sub    ecx,0xb
   1400111ce:	je     0x140011217
   1400111d0:	dec    ecx
   1400111d2:	je     0x140011212
   1400111d4:	sub    ecx,0x18
   1400111d7:	je     0x140011200
   1400111d9:	sub    ecx,0xa
   1400111dc:	je     0x1400111f7
   1400111de:	cmp    ecx,0x4
   1400111e1:	jne    0x14001116d
   1400111e3:	test   r10d,r10d
   1400111e6:	jne    0x140011291
   1400111ec:	mov    r10d,r15d
   1400111ef:	or     edi,0x10
   1400111f2:	jmp    0x140011299
   1400111f7:	bts    edi,0x7
   1400111fb:	jmp    0x140011299
   140011200:	test   dil,0x40
   140011204:	jne    0x140011291
   14001120a:	or     edi,0x40
   14001120d:	jmp    0x140011299
   140011212:	mov    r11d,r15d
   140011215:	jmp    0x140011291
   140011217:	test   dil,0x2
   14001121b:	jne    0x140011291
   14001121d:	and    edi,0xfffffffe
   140011220:	and    ebp,0xfffffffc
   140011223:	or     edi,0x2
   140011226:	bts    ebp,0x7
   14001122a:	jmp    0x140011299
   14001122c:	test   r10d,r10d
   14001122f:	jne    0x140011291
   140011231:	mov    r10d,r15d
   140011234:	or     edi,0x20
   140011237:	jmp    0x140011299
   140011239:	sub    ecx,0x54
   14001123c:	je     0x14001128b
   14001123e:	sub    ecx,0xe
   140011241:	je     0x14001127d
   140011243:	dec    ecx
   140011245:	je     0x140011270
   140011247:	sub    ecx,0xb
   14001124a:	je     0x140011262
   14001124c:	cmp    ecx,0x6
   14001124f:	jne    0x14001116d
   140011255:	test   edi,0xc000
   14001125b:	jne    0x140011291
   14001125d:	or     edi,r8d
   140011260:	jmp    0x140011299
   140011262:	test   r9d,r9d
   140011265:	jne    0x140011291
   140011267:	mov    r9d,r15d
   14001126a:	btr    ebp,0xe
   14001126e:	jmp    0x140011299
   140011270:	test   r9d,r9d
   140011273:	jne    0x140011291
   140011275:	mov    r9d,r15d
   140011278:	or     ebp,r8d
   14001127b:	jmp    0x140011299
   14001127d:	test   edi,0xc000
   140011283:	jne    0x140011291
   140011285:	bts    edi,0xf
   140011289:	jmp    0x140011299
   14001128b:	bt     edi,0xc
   14001128f:	jae    0x140011295
   140011291:	xor    edx,edx
   140011293:	jmp    0x140011299
   140011295:	bts    edi,0xc
   140011299:	add    rbx,r15
   14001129c:	mov    al,BYTE PTR [rbx]
   14001129e:	test   al,al
   1400112a0:	jne    0x1400111b0
   1400112a6:	test   r11d,r11d
   1400112a9:	je     0x140011365
   1400112af:	jmp    0x1400112b4
   1400112b1:	add    rbx,r15
   1400112b4:	cmp    BYTE PTR [rbx],0x20
   1400112b7:	je     0x1400112b1
   1400112b9:	lea    rcx,[rip+0xe480]        # 0x14001f740
   1400112c0:	mov    r8d,0x3
   1400112c6:	mov    rdx,rbx
   1400112c9:	call   0x140016eb0
   1400112ce:	test   eax,eax
   1400112d0:	jne    0x14001116d
   1400112d6:	add    rbx,0x3
   1400112da:	jmp    0x1400112df
   1400112dc:	add    rbx,r15
   1400112df:	cmp    BYTE PTR [rbx],0x20
   1400112e2:	je     0x1400112dc
   1400112e4:	cmp    BYTE PTR [rbx],0x3d
   1400112e7:	jne    0x14001116d
   1400112ed:	add    rbx,r15
   1400112f0:	cmp    BYTE PTR [rbx],0x20
   1400112f3:	je     0x1400112ed
   1400112f5:	lea    rdx,[rip+0xe448]        # 0x14001f744
   1400112fc:	mov    r8d,0x5
   140011302:	mov    rcx,rbx
   140011305:	call   0x140016d48
   14001130a:	test   eax,eax
   14001130c:	jne    0x140011318
   14001130e:	add    rbx,0x5
   140011312:	bts    edi,0x12
   140011316:	jmp    0x140011365
   140011318:	lea    rdx,[rip+0xe431]        # 0x14001f750
   14001131f:	mov    r8d,0x8
   140011325:	mov    rcx,rbx
   140011328:	call   0x140016d48
   14001132d:	test   eax,eax
   14001132f:	jne    0x14001133b
   140011331:	add    rbx,0x8
   140011335:	bts    edi,0x11
   140011339:	jmp    0x140011365
   14001133b:	lea    rdx,[rip+0xe41e]        # 0x14001f760
   140011342:	mov    r8d,0x7
   140011348:	mov    rcx,rbx
   14001134b:	call   0x140016d48
   140011350:	test   eax,eax
   140011352:	jne    0x14001116d
   140011358:	add    rbx,0x7
   14001135c:	bts    edi,0x10
   140011360:	jmp    0x140011365
   140011362:	add    rbx,r15
   140011365:	cmp    BYTE PTR [rbx],0x20
   140011368:	je     0x140011362
   14001136a:	cmp    BYTE PTR [rbx],0x0
   14001136d:	jne    0x14001116d
   140011373:	lea    rcx,[rsp+0x68]
   140011378:	mov    r9d,r12d
   14001137b:	mov    r8d,edi
   14001137e:	mov    rdx,r13
   140011381:	mov    DWORD PTR [rsp+0x20],0x180
   140011389:	call   0x1400131b8
   14001138e:	test   eax,eax
   140011390:	jne    0x14001117d
   140011396:	add    DWORD PTR [rip+0x13657],r15d        # 0x1400249f4
   14001139d:	and    DWORD PTR [rsi+0x8],eax
   1400113a0:	mov    eax,DWORD PTR [rsp+0x68]
   1400113a4:	and    QWORD PTR [rsi],0x0
   1400113a8:	and    QWORD PTR [rsi+0x10],0x0
   1400113ad:	and    QWORD PTR [rsi+0x28],0x0
   1400113b2:	mov    DWORD PTR [rsi+0x1c],eax
   1400113b5:	mov    DWORD PTR [rsi+0x18],ebp
   1400113b8:	mov    rax,rsi
   1400113bb:	mov    rbx,QWORD PTR [rsp+0x60]
   1400113c0:	mov    rbp,QWORD PTR [rsp+0x70]
   1400113c5:	add    rsp,0x30
   1400113c9:	pop    r15
   1400113cb:	pop    r13
   1400113cd:	pop    r12
   1400113cf:	pop    rdi
   1400113d0:	pop    rsi
   1400113d1:	ret    
   1400113d2:	int3   
   1400113d3:	int3   
   1400113d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400113d9:	mov    QWORD PTR [rsp+0x10],rsi
   1400113de:	push   rdi
   1400113df:	sub    rsp,0x30
   1400113e3:	xor    ebx,ebx
   1400113e5:	lea    ecx,[rbx+0x1]
   1400113e8:	call   0x14000cb58
   1400113ed:	nop
   1400113ee:	xor    edi,edi
   1400113f0:	mov    DWORD PTR [rsp+0x20],edi
   1400113f4:	cmp    edi,DWORD PTR [rip+0x158a6]        # 0x140026ca0
   1400113fa:	jge    0x1400114ec
   140011400:	movsxd rsi,edi
   140011403:	mov    rax,QWORD PTR [rip+0x1487e]        # 0x140025c88
   14001140a:	cmp    QWORD PTR [rax+rsi*8],0x0
   14001140f:	je     0x140011477
   140011411:	mov    rax,QWORD PTR [rax+rsi*8]
   140011415:	test   BYTE PTR [rax+0x18],0x83
   140011419:	jne    0x140011470
   14001141b:	test   DWORD PTR [rax+0x18],0x8000
   140011422:	jne    0x140011470
   140011424:	lea    eax,[rdi-0x3]
   140011427:	cmp    eax,0x10
   14001142a:	ja     0x14001143c
   14001142c:	lea    ecx,[rdi+0x10]
   14001142f:	call   0x14000ca70
   140011434:	test   eax,eax
   140011436:	je     0x1400114ec
   14001143c:	mov    rdx,QWORD PTR [rip+0x14845]        # 0x140025c88
   140011443:	mov    rdx,QWORD PTR [rdx+rsi*8]
   140011447:	mov    ecx,edi
   140011449:	call   0x14000ad3c
   14001144e:	mov    r11,QWORD PTR [rip+0x14833]        # 0x140025c88
   140011455:	mov    rax,QWORD PTR [r11+rsi*8]
   140011459:	test   BYTE PTR [rax+0x18],0x83
   14001145d:	je     0x14001146b
   14001145f:	mov    rdx,rax
   140011462:	mov    ecx,edi
   140011464:	call   0x14000adbc
   140011469:	jmp    0x140011470
   14001146b:	mov    rbx,rax
   14001146e:	jmp    0x1400114ec
   140011470:	inc    edi
   140011472:	jmp    0x1400113f0
   140011477:	mov    ecx,0x58
   14001147c:	call   0x140010b50
   140011481:	mov    rcx,rax
   140011484:	movsxd rdi,edi
   140011487:	mov    rax,QWORD PTR [rip+0x147fa]        # 0x140025c88
   14001148e:	mov    QWORD PTR [rax+rdi*8],rcx
   140011492:	test   rcx,rcx
   140011495:	je     0x1400114ec
   140011497:	add    rcx,0x30
   14001149b:	mov    edx,0xfa0
   1400114a0:	call   QWORD PTR [rip+0x8cba]        # 0x14001a160
   1400114a6:	test   eax,eax
   1400114a8:	jne    0x1400114c8
   1400114aa:	mov    rcx,QWORD PTR [rip+0x147d7]        # 0x140025c88
   1400114b1:	mov    rcx,QWORD PTR [rcx+rdi*8]
   1400114b5:	call   0x14000b490
   1400114ba:	mov    r11,QWORD PTR [rip+0x147c7]        # 0x140025c88
   1400114c1:	and    QWORD PTR [r11+rdi*8],0x0
   1400114c6:	jmp    0x1400114ec
   1400114c8:	mov    rax,QWORD PTR [rip+0x147b9]        # 0x140025c88
   1400114cf:	mov    rcx,QWORD PTR [rax+rdi*8]
   1400114d3:	add    rcx,0x30
   1400114d7:	call   QWORD PTR [rip+0x8c13]        # 0x14001a0f0
   1400114dd:	mov    r11,QWORD PTR [rip+0x147a4]        # 0x140025c88
   1400114e4:	mov    rbx,QWORD PTR [r11+rdi*8]
   1400114e8:	and    DWORD PTR [rbx+0x18],0x0
   1400114ec:	test   rbx,rbx
   1400114ef:	je     0x14001150e
   1400114f1:	and    DWORD PTR [rbx+0x18],0x8000
   1400114f8:	and    DWORD PTR [rbx+0x8],0x0
   1400114fc:	and    QWORD PTR [rbx+0x10],0x0
   140011501:	and    QWORD PTR [rbx],0x0
   140011505:	and    QWORD PTR [rbx+0x28],0x0
   14001150a:	or     DWORD PTR [rbx+0x1c],0xffffffff
   14001150e:	mov    ecx,0x1
   140011513:	call   0x14000ca58
   140011518:	mov    rax,rbx
   14001151b:	mov    rbx,QWORD PTR [rsp+0x40]
   140011520:	mov    rsi,QWORD PTR [rsp+0x48]
   140011525:	add    rsp,0x30
   140011529:	pop    rdi
   14001152a:	ret    
   14001152b:	int3   
   14001152c:	int3   
   14001152d:	int3   
   14001152e:	int3   
   14001152f:	int3   
   140011530:	int3   
   140011531:	int3   
   140011532:	int3   
   140011533:	int3   
   140011534:	int3   
   140011535:	int3   
   140011536:	data16 nop WORD PTR [rax+rax*1+0x0]
   140011540:	sub    rsp,0x4d8
   140011547:	xor    r8,r8
   14001154a:	xor    r9,r9
   14001154d:	mov    QWORD PTR [rsp+0x20],rsp
   140011552:	mov    QWORD PTR [rsp+0x28],r8
   140011557:	call   0x1400199c8
   14001155c:	add    rsp,0x4d8
   140011563:	ret    
   140011564:	int3   
   140011565:	int3   
   140011566:	int3   
   140011567:	int3   
   140011568:	int3   
   140011569:	int3   
   14001156a:	nop    WORD PTR [rax+rax*1+0x0]
   140011570:	mov    QWORD PTR [rsp+0x8],rcx
   140011575:	mov    QWORD PTR [rsp+0x18],rdx
   14001157a:	mov    DWORD PTR [rsp+0x10],r8d
   14001157f:	mov    r9,0x19930520
   140011586:	jmp    0x140011590
   140011588:	int3   
   140011589:	int3   
   14001158a:	int3   
   14001158b:	int3   
   14001158c:	int3   
   14001158d:	int3   
   14001158e:	xchg   ax,ax
   140011590:	ret    
   140011591:	int3   
   140011592:	int3   
   140011593:	int3   
   140011594:	int3   
   140011595:	int3   
   140011596:	int3   
   140011597:	nop    WORD PTR [rax+rax*1+0x0]
   1400115a0:	ret    
   1400115a1:	int3   
   1400115a2:	int3   
   1400115a3:	int3   
   1400115a4:	lea    rax,[rip+0x124c5]        # 0x140023a70
   1400115ab:	ret    
   1400115ac:	lea    rax,[rip+0x1235d]        # 0x140023910
   1400115b3:	ret    
   1400115b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400115b9:	mov    QWORD PTR [rsp+0x10],rbp
   1400115be:	mov    QWORD PTR [rsp+0x18],rsi
   1400115c3:	push   rdi
   1400115c4:	sub    rsp,0x20
   1400115c8:	mov    rbx,rdx
   1400115cb:	test   ecx,ecx
   1400115cd:	js     0x140011636
   1400115cf:	cmp    ecx,DWORD PTR [rip+0x14497]        # 0x140025a6c
   1400115d5:	jae    0x140011636
   1400115d7:	movsxd rdi,ecx
   1400115da:	lea    rbp,[rip+0x1449f]        # 0x140025a80
   1400115e1:	mov    rsi,rdi
   1400115e4:	and    edi,0x1f
   1400115e7:	sar    rsi,0x5
   1400115eb:	imul   rdi,rdi,0x58
   1400115ef:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   1400115f4:	cmp    QWORD PTR [rdi+rax*1],0xffffffffffffffff
   1400115f9:	jne    0x140011636
   1400115fb:	cmp    DWORD PTR [rip+0x11ab6],0x1        # 0x1400230b8
   140011602:	jne    0x140011629
   140011604:	test   ecx,ecx
   140011606:	je     0x14001161e
   140011608:	dec    ecx
   14001160a:	je     0x140011617
   14001160c:	dec    ecx
   14001160e:	jne    0x140011629
   140011610:	mov    ecx,0xfffffff4
   140011615:	jmp    0x140011623
   140011617:	mov    ecx,0xfffffff5
   14001161c:	jmp    0x140011623
   14001161e:	mov    ecx,0xfffffff6
   140011623:	call   QWORD PTR [rip+0x8c3f]        # 0x14001a268
   140011629:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   14001162e:	mov    QWORD PTR [rdi+rax*1],rbx
   140011632:	xor    eax,eax
   140011634:	jmp    0x14001164c
   140011636:	call   0x14000bdf0
   14001163b:	mov    DWORD PTR [rax],0x9
   140011641:	call   0x14000be10
   140011646:	and    DWORD PTR [rax],0x0
   140011649:	or     eax,0xffffffff
   14001164c:	mov    rbx,QWORD PTR [rsp+0x30]
   140011651:	mov    rbp,QWORD PTR [rsp+0x38]
   140011656:	mov    rsi,QWORD PTR [rsp+0x40]
   14001165b:	add    rsp,0x20
   14001165f:	pop    rdi
   140011660:	ret    
   140011661:	int3   
   140011662:	int3   
   140011663:	int3   
   140011664:	mov    QWORD PTR [rsp+0x8],rbx
   140011669:	mov    QWORD PTR [rsp+0x10],rbp
   14001166e:	push   rdi
   14001166f:	sub    rsp,0x20
   140011673:	test   ecx,ecx
   140011675:	js     0x1400116e8
   140011677:	cmp    ecx,DWORD PTR [rip+0x143ef]        # 0x140025a6c
   14001167d:	jae    0x1400116e8
   14001167f:	movsxd rbx,ecx
   140011682:	lea    rbp,[rip+0x143f7]        # 0x140025a80
   140011689:	mov    rdi,rbx
   14001168c:	and    ebx,0x1f
   14001168f:	sar    rdi,0x5
   140011693:	imul   rbx,rbx,0x58
   140011697:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14001169c:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   1400116a1:	je     0x1400116e8
   1400116a3:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   1400116a8:	je     0x1400116e8
   1400116aa:	cmp    DWORD PTR [rip+0x11a07],0x1        # 0x1400230b8
   1400116b1:	jne    0x1400116da
   1400116b3:	test   ecx,ecx
   1400116b5:	je     0x1400116cd
   1400116b7:	dec    ecx
   1400116b9:	je     0x1400116c6
   1400116bb:	dec    ecx
   1400116bd:	jne    0x1400116da
   1400116bf:	mov    ecx,0xfffffff4
   1400116c4:	jmp    0x1400116d2
   1400116c6:	mov    ecx,0xfffffff5
   1400116cb:	jmp    0x1400116d2
   1400116cd:	mov    ecx,0xfffffff6
   1400116d2:	xor    edx,edx
   1400116d4:	call   QWORD PTR [rip+0x8b8e]        # 0x14001a268
   1400116da:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   1400116df:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   1400116e4:	xor    eax,eax
   1400116e6:	jmp    0x1400116fe
   1400116e8:	call   0x14000bdf0
   1400116ed:	mov    DWORD PTR [rax],0x9
   1400116f3:	call   0x14000be10
   1400116f8:	and    DWORD PTR [rax],0x0
   1400116fb:	or     eax,0xffffffff
   1400116fe:	mov    rbx,QWORD PTR [rsp+0x30]
   140011703:	mov    rbp,QWORD PTR [rsp+0x38]
   140011708:	add    rsp,0x20
   14001170c:	pop    rdi
   14001170d:	ret    
   14001170e:	int3   
   14001170f:	int3   
   140011710:	sub    rsp,0x28
   140011714:	cmp    ecx,0xfffffffe
   140011717:	jne    0x14001172e
   140011719:	call   0x14000be10
   14001171e:	and    DWORD PTR [rax],0x0
   140011721:	call   0x14000bdf0
   140011726:	mov    DWORD PTR [rax],0x9
   14001172c:	jmp    0x14001177b
   14001172e:	test   ecx,ecx
   140011730:	js     0x140011763
   140011732:	cmp    ecx,DWORD PTR [rip+0x14334]        # 0x140025a6c
   140011738:	jae    0x140011763
   14001173a:	movsxd rdx,ecx
   14001173d:	lea    rcx,[rip+0x1433c]        # 0x140025a80
   140011744:	mov    rax,rdx
   140011747:	and    edx,0x1f
   14001174a:	sar    rax,0x5
   14001174e:	imul   rdx,rdx,0x58
   140011752:	mov    rax,QWORD PTR [rcx+rax*8]
   140011756:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   14001175b:	je     0x140011763
   14001175d:	mov    rax,QWORD PTR [rax+rdx*1]
   140011761:	jmp    0x14001177f
   140011763:	call   0x14000be10
   140011768:	and    DWORD PTR [rax],0x0
   14001176b:	call   0x14000bdf0
   140011770:	mov    DWORD PTR [rax],0x9
   140011776:	call   0x14000d04c
   14001177b:	or     rax,0xffffffffffffffff
   14001177f:	add    rsp,0x28
   140011783:	ret    
   140011784:	mov    rax,rsp
   140011787:	mov    QWORD PTR [rax+0x8],rbx
   14001178b:	mov    QWORD PTR [rax+0x10],rsi
   14001178f:	mov    QWORD PTR [rax+0x18],rdi
   140011793:	mov    QWORD PTR [rax+0x20],r12
   140011797:	push   r14
   140011799:	sub    rsp,0x20
   14001179d:	movsxd rbx,ecx
   1400117a0:	mov    r12,rbx
   1400117a3:	sar    r12,0x5
   1400117a7:	lea    r14,[rip+0x142d2]        # 0x140025a80
   1400117ae:	and    ebx,0x1f
   1400117b1:	imul   rbx,rbx,0x58
   1400117b5:	mov    rsi,QWORD PTR [r14+r12*8]
   1400117b9:	mov    edi,0x1
   1400117be:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   1400117c3:	jne    0x1400117f9
   1400117c5:	lea    ecx,[rdi+0x9]
   1400117c8:	call   0x14000cb58
   1400117cd:	nop
   1400117ce:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   1400117d3:	jne    0x1400117ef
   1400117d5:	lea    rcx,[rbx+rsi*1+0x10]
   1400117da:	mov    edx,0xfa0
   1400117df:	call   QWORD PTR [rip+0x897b]        # 0x14001a160
   1400117e5:	neg    eax
   1400117e7:	sbb    edx,edx
   1400117e9:	and    edi,edx
   1400117eb:	inc    DWORD PTR [rbx+rsi*1+0xc]
   1400117ef:	mov    ecx,0xa
   1400117f4:	call   0x14000ca58
   1400117f9:	test   edi,edi
   1400117fb:	je     0x14001180c
   1400117fd:	mov    rcx,QWORD PTR [r14+r12*8]
   140011801:	lea    rcx,[rcx+rbx*1+0x10]
   140011806:	call   QWORD PTR [rip+0x88e4]        # 0x14001a0f0
   14001180c:	mov    eax,edi
   14001180e:	mov    rbx,QWORD PTR [rsp+0x30]
   140011813:	mov    rsi,QWORD PTR [rsp+0x38]
   140011818:	mov    rdi,QWORD PTR [rsp+0x40]
   14001181d:	mov    r12,QWORD PTR [rsp+0x48]
   140011822:	add    rsp,0x20
   140011826:	pop    r14
   140011828:	ret    
   140011829:	int3   
   14001182a:	int3   
   14001182b:	int3   
   14001182c:	movsxd rdx,ecx
   14001182f:	lea    rcx,[rip+0x1424a]        # 0x140025a80
   140011836:	mov    rax,rdx
   140011839:	and    edx,0x1f
   14001183c:	sar    rax,0x5
   140011840:	imul   rdx,rdx,0x58
   140011844:	mov    rax,QWORD PTR [rcx+rax*8]
   140011848:	lea    rcx,[rax+rdx*1+0x10]
   14001184d:	rex.W jmp QWORD PTR [rip+0x88a4]        # 0x14001a0f8
   140011854:	mov    QWORD PTR [rsp+0x8],rbx
   140011859:	mov    QWORD PTR [rsp+0x10],rsi
   14001185e:	mov    QWORD PTR [rsp+0x18],rdi
   140011863:	push   r12
   140011865:	push   r13
   140011867:	push   r14
   140011869:	sub    rsp,0x40
   14001186d:	or     rsi,0xffffffffffffffff
   140011871:	mov    r12d,esi
   140011874:	xor    r13d,r13d
   140011877:	lea    ebx,[rsi+0xc]
   14001187a:	mov    ecx,ebx
   14001187c:	call   0x14000ca70
   140011881:	test   eax,eax
   140011883:	jne    0x14001188c
   140011885:	mov    eax,esi
   140011887:	jmp    0x140011a42
   14001188c:	mov    ecx,ebx
   14001188e:	call   0x14000cb58
   140011893:	nop
   140011894:	xor    edi,edi
   140011896:	lea    rax,[rip+0x141e3]        # 0x140025a80
   14001189d:	mov    DWORD PTR [rsp+0x24],edi
   1400118a1:	cmp    edi,0x40
   1400118a4:	jge    0x140011a35
   1400118aa:	movsxd r14,edi
   1400118ad:	mov    rbx,QWORD PTR [rax+r14*8]
   1400118b1:	test   rbx,rbx
   1400118b4:	je     0x1400119ab
   1400118ba:	mov    QWORD PTR [rsp+0x30],rbx
   1400118bf:	mov    rax,QWORD PTR [rax+r14*8]
   1400118c3:	add    rax,0xb00
   1400118c9:	cmp    rbx,rax
   1400118cc:	jae    0x14001199b
   1400118d2:	test   BYTE PTR [rbx+0x8],0x1
   1400118d6:	jne    0x140011987
   1400118dc:	cmp    DWORD PTR [rbx+0xc],0x0
   1400118e0:	jne    0x14001191e
   1400118e2:	mov    ecx,0xa
   1400118e7:	call   0x14000cb58
   1400118ec:	nop
   1400118ed:	cmp    DWORD PTR [rbx+0xc],0x0
   1400118f1:	jne    0x140011914
   1400118f3:	lea    rcx,[rbx+0x10]
   1400118f7:	mov    edx,0xfa0
   1400118fc:	call   QWORD PTR [rip+0x885e]        # 0x14001a160
   140011902:	test   eax,eax
   140011904:	jne    0x140011911
   140011906:	lea    r13d,[rax+0x1]
   14001190a:	mov    DWORD PTR [rsp+0x28],r13d
   14001190f:	jmp    0x140011914
   140011911:	inc    DWORD PTR [rbx+0xc]
   140011914:	mov    ecx,0xa
   140011919:	call   0x14000ca58
   14001191e:	test   r13d,r13d
   140011921:	jne    0x140011987
   140011923:	lea    rcx,[rbx+0x10]
   140011927:	call   QWORD PTR [rip+0x87c3]        # 0x14001a0f0
   14001192d:	test   BYTE PTR [rbx+0x8],0x1
   140011931:	je     0x14001193f
   140011933:	lea    rcx,[rbx+0x10]
   140011937:	call   QWORD PTR [rip+0x87bb]        # 0x14001a0f8
   14001193d:	jmp    0x140011987
   14001193f:	or     rsi,0xffffffffffffffff
   140011943:	test   r13d,r13d
   140011946:	jne    0x140011987
   140011948:	mov    BYTE PTR [rbx+0x8],0x1
   14001194c:	mov    QWORD PTR [rbx],rsi
   14001194f:	lea    r8,[rip+0x1412a]        # 0x140025a80
   140011956:	sub    rbx,QWORD PTR [r8+r14*8]
   14001195a:	movabs rax,0x2e8ba2e8ba2e8ba3
   140011964:	imul   rbx
   140011967:	mov    r12,rdx
   14001196a:	sar    r12,0x4
   14001196e:	mov    rax,r12
   140011971:	shr    rax,0x3f
   140011975:	add    r12,rax
   140011978:	mov    eax,edi
   14001197a:	shl    eax,0x5
   14001197d:	add    r12d,eax
   140011980:	mov    DWORD PTR [rsp+0x20],r12d
   140011985:	jmp    0x14001199b
   140011987:	add    rbx,0x58
   14001198b:	or     rsi,0xffffffffffffffff
   14001198f:	lea    rax,[rip+0x140ea]        # 0x140025a80
   140011996:	jmp    0x1400118ba
   14001199b:	cmp    r12d,esi
   14001199e:	jne    0x140011a35
   1400119a4:	inc    edi
   1400119a6:	jmp    0x140011896
   1400119ab:	mov    edx,0x58
   1400119b0:	lea    ecx,[rdx-0x38]
   1400119b3:	call   0x140010bd0
   1400119b8:	mov    QWORD PTR [rsp+0x30],rax
   1400119bd:	test   rax,rax
   1400119c0:	je     0x140011a35
   1400119c2:	movsxd rdx,edi
   1400119c5:	lea    r8,[rip+0x140b4]        # 0x140025a80
   1400119cc:	mov    QWORD PTR [r8+rdx*8],rax
   1400119d0:	add    DWORD PTR [rip+0x14095],0x20        # 0x140025a6c
   1400119d7:	mov    rcx,QWORD PTR [r8+rdx*8]
   1400119db:	add    rcx,0xb00
   1400119e2:	cmp    rax,rcx
   1400119e5:	jae    0x140011a01
   1400119e7:	mov    BYTE PTR [rax+0x8],0x0
   1400119eb:	mov    QWORD PTR [rax],rsi
   1400119ee:	mov    BYTE PTR [rax+0x9],0xa
   1400119f2:	and    DWORD PTR [rax+0xc],0x0
   1400119f6:	add    rax,0x58
   1400119fa:	mov    QWORD PTR [rsp+0x30],rax
   1400119ff:	jmp    0x1400119d7
   140011a01:	shl    edi,0x5
   140011a04:	mov    DWORD PTR [rsp+0x20],edi
   140011a08:	movsxd rcx,edi
   140011a0b:	mov    rax,rcx
   140011a0e:	sar    rax,0x5
   140011a12:	and    ecx,0x1f
   140011a15:	imul   rcx,rcx,0x58
   140011a19:	mov    rax,QWORD PTR [r8+rax*8]
   140011a1d:	mov    BYTE PTR [rax+rcx*1+0x8],0x1
   140011a22:	mov    ecx,edi
   140011a24:	call   0x140011784
   140011a29:	test   eax,eax
   140011a2b:	cmove  edi,esi
   140011a2e:	mov    r12d,edi
   140011a31:	mov    DWORD PTR [rsp+0x20],edi
   140011a35:	mov    ecx,0xb
   140011a3a:	call   0x14000ca58
   140011a3f:	mov    eax,r12d
   140011a42:	mov    rbx,QWORD PTR [rsp+0x60]
   140011a47:	mov    rsi,QWORD PTR [rsp+0x68]
   140011a4c:	mov    rdi,QWORD PTR [rsp+0x70]
   140011a51:	add    rsp,0x40
   140011a55:	pop    r14
   140011a57:	pop    r13
   140011a59:	pop    r12
   140011a5b:	ret    
   140011a5c:	mov    QWORD PTR [rsp+0x20],rbx
   140011a61:	push   rbp
   140011a62:	push   rsi
   140011a63:	push   rdi
   140011a64:	push   r12
   140011a66:	push   r13
   140011a68:	push   r14
   140011a6a:	push   r15
   140011a6c:	lea    rbp,[rsp-0x1a30]
   140011a74:	mov    eax,0x1b30
   140011a79:	call   0x140016f30
   140011a7e:	sub    rsp,rax
   140011a81:	mov    rax,QWORD PTR [rip+0x11638]        # 0x1400230c0
   140011a88:	xor    rax,rsp
   140011a8b:	mov    QWORD PTR [rbp+0x1a20],rax
   140011a92:	xor    edi,edi
   140011a94:	mov    r14d,r8d
   140011a97:	mov    r13,rdx
   140011a9a:	and    DWORD PTR [rsp+0x44],edi
   140011a9e:	movsxd rbx,ecx
   140011aa1:	test   r8d,r8d
   140011aa4:	jne    0x140011aad
   140011aa6:	xor    eax,eax
   140011aa8:	jmp    0x140012192
   140011aad:	test   rdx,rdx
   140011ab0:	jne    0x140011ad1
   140011ab2:	call   0x14000be10
   140011ab7:	and    DWORD PTR [rax],edi
   140011ab9:	call   0x14000bdf0
   140011abe:	mov    DWORD PTR [rax],0x16
   140011ac4:	call   0x14000d04c
   140011ac9:	or     eax,0xffffffff
   140011acc:	jmp    0x140012192
   140011ad1:	mov    r15,rbx
   140011ad4:	mov    r12,rbx
   140011ad7:	lea    rax,[rip+0x13fa2]        # 0x140025a80
   140011ade:	sar    r12,0x5
   140011ae2:	and    r15d,0x1f
   140011ae6:	mov    rcx,QWORD PTR [rax+r12*8]
   140011aea:	mov    QWORD PTR [rsp+0x50],r12
   140011aef:	imul   r15,r15,0x58
   140011af3:	mov    sil,BYTE PTR [r15+rcx*1+0x38]
   140011af8:	mov    QWORD PTR [rsp+0x60],r15
   140011afd:	add    sil,sil
   140011b00:	sar    sil,1
   140011b03:	cmp    sil,0x2
   140011b07:	je     0x140011b0f
   140011b09:	cmp    sil,0x1
   140011b0d:	jne    0x140011b18
   140011b0f:	mov    eax,r14d
   140011b12:	not    eax
   140011b14:	test   al,0x1
   140011b16:	je     0x140011ab2
   140011b18:	test   BYTE PTR [r15+rcx*1+0x8],0x20
   140011b1e:	je     0x140011b2d
   140011b20:	xor    edx,edx
   140011b22:	mov    ecx,ebx
   140011b24:	lea    r8d,[rdx+0x2]
   140011b28:	call   0x140015e2c
   140011b2d:	mov    ecx,ebx
   140011b2f:	call   0x1400152d8
   140011b34:	test   eax,eax
   140011b36:	je     0x140011e06
   140011b3c:	lea    rax,[rip+0x13f3d]        # 0x140025a80
   140011b43:	mov    rax,QWORD PTR [rax+r12*8]
   140011b47:	test   BYTE PTR [r15+rax*1+0x8],0x80
   140011b4d:	je     0x140011e06
   140011b53:	call   0x14000d234
   140011b58:	xor    ebx,ebx
   140011b5a:	lea    rdx,[rsp+0x5c]
   140011b5f:	mov    rcx,QWORD PTR [rax+0xc0]
   140011b66:	lea    rax,[rip+0x13f13]        # 0x140025a80
   140011b6d:	cmp    DWORD PTR [rcx+0x14],ebx
   140011b70:	mov    rcx,QWORD PTR [rax+r12*8]
   140011b74:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011b78:	sete   bl
   140011b7b:	call   QWORD PTR [rip+0x86f7]        # 0x14001a278
   140011b81:	test   eax,eax
   140011b83:	je     0x140011e06
   140011b89:	test   ebx,ebx
   140011b8b:	je     0x140011b96
   140011b8d:	test   sil,sil
   140011b90:	je     0x140011e06
   140011b96:	call   QWORD PTR [rip+0x86d4]        # 0x14001a270
   140011b9c:	and    DWORD PTR [rsp+0x58],edi
   140011ba0:	mov    rbx,r13
   140011ba3:	mov    DWORD PTR [rsp+0x5c],eax
   140011ba7:	test   r14d,r14d
   140011baa:	je     0x140011dfd
   140011bb0:	test   sil,sil
   140011bb3:	jne    0x140011d3d
   140011bb9:	mov    cl,BYTE PTR [rbx]
   140011bbb:	xor    eax,eax
   140011bbd:	cmp    cl,0xa
   140011bc0:	sete   al
   140011bc3:	mov    DWORD PTR [rsp+0x4c],eax
   140011bc7:	lea    rax,[rip+0x13eb2]        # 0x140025a80
   140011bce:	mov    rdx,QWORD PTR [rax+r12*8]
   140011bd2:	cmp    DWORD PTR [r15+rdx*1+0x50],0x0
   140011bd8:	je     0x140011bfa
   140011bda:	mov    al,BYTE PTR [r15+rdx*1+0x4c]
   140011bdf:	mov    BYTE PTR [rsp+0x61],cl
   140011be3:	mov    r8d,0x2
   140011be9:	mov    BYTE PTR [rsp+0x60],al
   140011bed:	and    DWORD PTR [r15+rdx*1+0x50],0x0
   140011bf3:	lea    rdx,[rsp+0x60]
   140011bf8:	jmp    0x140011c43
   140011bfa:	movsx  ecx,cl
   140011bfd:	call   0x140015380
   140011c02:	test   eax,eax
   140011c04:	je     0x140011c3a
   140011c06:	mov    rax,r14
   140011c09:	sub    rax,rbx
   140011c0c:	add    rax,r13
   140011c0f:	cmp    rax,0x1
   140011c13:	jle    0x140011dc6
   140011c19:	lea    rcx,[rsp+0x40]
   140011c1e:	mov    r8d,0x2
   140011c24:	mov    rdx,rbx
   140011c27:	call   0x140015e24
   140011c2c:	cmp    eax,0xffffffff
   140011c2f:	je     0x140011de7
   140011c35:	inc    rbx
   140011c38:	jmp    0x140011c56
   140011c3a:	mov    r8d,0x1
   140011c40:	mov    rdx,rbx
   140011c43:	lea    rcx,[rsp+0x40]
   140011c48:	call   0x140015e24
   140011c4d:	cmp    eax,0xffffffff
   140011c50:	je     0x140011de7
   140011c56:	and    QWORD PTR [rsp+0x38],0x0
   140011c5c:	and    QWORD PTR [rsp+0x30],0x0
   140011c62:	mov    ecx,DWORD PTR [rsp+0x5c]
   140011c66:	lea    rax,[rsp+0x60]
   140011c6b:	lea    r8,[rsp+0x40]
   140011c70:	mov    r9d,0x1
   140011c76:	xor    edx,edx
   140011c78:	mov    DWORD PTR [rsp+0x28],0x5
   140011c80:	inc    rbx
   140011c83:	mov    QWORD PTR [rsp+0x20],rax
   140011c88:	call   QWORD PTR [rip+0x857a]        # 0x14001a208
   140011c8e:	mov    r12d,eax
   140011c91:	test   eax,eax
   140011c93:	je     0x140011de7
   140011c99:	mov    rcx,QWORD PTR [rsp+0x50]
   140011c9e:	and    QWORD PTR [rsp+0x20],0x0
   140011ca4:	lea    rax,[rip+0x13dd5]        # 0x140025a80
   140011cab:	mov    rcx,QWORD PTR [rax+rcx*8]
   140011caf:	lea    r9,[rsp+0x58]
   140011cb4:	lea    rdx,[rsp+0x60]
   140011cb9:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011cbd:	mov    r8d,r12d
   140011cc0:	call   QWORD PTR [rip+0x852a]        # 0x14001a1f0
   140011cc6:	test   eax,eax
   140011cc8:	je     0x140011df0
   140011cce:	mov    edi,ebx
   140011cd0:	sub    edi,r13d
   140011cd3:	add    edi,DWORD PTR [rsp+0x44]
   140011cd7:	cmp    DWORD PTR [rsp+0x58],r12d
   140011cdc:	jl     0x140011de7
   140011ce2:	cmp    DWORD PTR [rsp+0x4c],0x0
   140011ce7:	mov    r12,QWORD PTR [rsp+0x50]
   140011cec:	je     0x140011db7
   140011cf2:	and    QWORD PTR [rsp+0x20],0x0
   140011cf8:	lea    rax,[rip+0x13d81]        # 0x140025a80
   140011cff:	mov    BYTE PTR [rsp+0x60],0xd
   140011d04:	mov    rcx,QWORD PTR [rax+r12*8]
   140011d08:	lea    r9,[rsp+0x58]
   140011d0d:	lea    rdx,[rsp+0x60]
   140011d12:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011d16:	mov    r8d,0x1
   140011d1c:	call   QWORD PTR [rip+0x84ce]        # 0x14001a1f0
   140011d22:	test   eax,eax
   140011d24:	je     0x140011df0
   140011d2a:	cmp    DWORD PTR [rsp+0x58],0x1
   140011d2f:	jl     0x140011de7
   140011d35:	inc    DWORD PTR [rsp+0x44]
   140011d39:	inc    edi
   140011d3b:	jmp    0x140011db7
   140011d3d:	cmp    sil,0x1
   140011d41:	je     0x140011d49
   140011d43:	cmp    sil,0x2
   140011d47:	jne    0x140011d67
   140011d49:	movzx  eax,WORD PTR [rbx]
   140011d4c:	xor    r12d,r12d
   140011d4f:	cmp    ax,0xa
   140011d53:	mov    WORD PTR [rsp+0x40],ax
   140011d58:	sete   r12b
   140011d5c:	add    rbx,0x2
   140011d60:	mov    DWORD PTR [rsp+0x4c],r12d
   140011d65:	jmp    0x140011d6c
   140011d67:	mov    r12d,DWORD PTR [rsp+0x4c]
   140011d6c:	cmp    sil,0x1
   140011d70:	je     0x140011d78
   140011d72:	cmp    sil,0x2
   140011d76:	jne    0x140011db2
   140011d78:	movzx  ecx,WORD PTR [rsp+0x40]
   140011d7d:	call   0x140016eb8
   140011d82:	cmp    ax,WORD PTR [rsp+0x40]
   140011d87:	jne    0x140011df0
   140011d89:	add    edi,0x2
   140011d8c:	test   r12d,r12d
   140011d8f:	je     0x140011db2
   140011d91:	mov    r12d,0xd
   140011d97:	mov    ecx,r12d
   140011d9a:	mov    WORD PTR [rsp+0x40],r12w
   140011da0:	call   0x140016eb8
   140011da5:	cmp    ax,WORD PTR [rsp+0x40]
   140011daa:	jne    0x140011df0
   140011dac:	inc    edi
   140011dae:	inc    DWORD PTR [rsp+0x44]
   140011db2:	mov    r12,QWORD PTR [rsp+0x50]
   140011db7:	mov    eax,ebx
   140011db9:	sub    eax,r13d
   140011dbc:	cmp    eax,r14d
   140011dbf:	jae    0x140011de7
   140011dc1:	jmp    0x140011bb0
   140011dc6:	mov    al,BYTE PTR [rbx]
   140011dc8:	lea    rdx,[rip+0x13cb1]        # 0x140025a80
   140011dcf:	inc    edi
   140011dd1:	mov    rcx,QWORD PTR [rdx+r12*8]
   140011dd5:	mov    BYTE PTR [r15+rcx*1+0x4c],al
   140011dda:	mov    rax,QWORD PTR [rdx+r12*8]
   140011dde:	mov    DWORD PTR [r15+rax*1+0x50],0x1
   140011de7:	mov    ebx,DWORD PTR [rsp+0x4c]
   140011deb:	jmp    0x1400120e9
   140011df0:	call   QWORD PTR [rip+0x827a]        # 0x14001a070
   140011df6:	mov    ebx,eax
   140011df8:	jmp    0x1400120e9
   140011dfd:	mov    ebx,DWORD PTR [rsp+0x4c]
   140011e01:	jmp    0x1400120f1
   140011e06:	lea    rax,[rip+0x13c73]        # 0x140025a80
   140011e0d:	mov    rcx,QWORD PTR [rax+r12*8]
   140011e11:	test   BYTE PTR [r15+rcx*1+0x8],0x80
   140011e17:	je     0x14001211b
   140011e1d:	xor    ebx,ebx
   140011e1f:	mov    r12,r13
   140011e22:	test   sil,sil
   140011e25:	jne    0x140011ef6
   140011e2b:	test   r14d,r14d
   140011e2e:	je     0x140012151
   140011e34:	lea    edx,[rbx+0xd]
   140011e37:	mov    r15d,DWORD PTR [rsp+0x44]
   140011e3c:	lea    rsi,[rbp+0x620]
   140011e43:	xor    ecx,ecx
   140011e45:	mov    eax,r12d
   140011e48:	sub    eax,r13d
   140011e4b:	cmp    eax,r14d
   140011e4e:	jae    0x140011e77
   140011e50:	mov    al,BYTE PTR [r12]
   140011e54:	inc    r12
   140011e57:	cmp    al,0xa
   140011e59:	jne    0x140011e66
   140011e5b:	mov    BYTE PTR [rsi],dl
   140011e5d:	inc    r15d
   140011e60:	inc    rsi
   140011e63:	inc    rcx
   140011e66:	inc    rcx
   140011e69:	mov    BYTE PTR [rsi],al
   140011e6b:	inc    rsi
   140011e6e:	cmp    rcx,0x13ff
   140011e75:	jb     0x140011e45
   140011e77:	and    QWORD PTR [rsp+0x20],rbx
   140011e7c:	lea    rax,[rbp+0x620]
   140011e83:	mov    r8d,esi
   140011e86:	sub    r8d,eax
   140011e89:	mov    rax,QWORD PTR [rsp+0x50]
   140011e8e:	lea    rcx,[rip+0x13beb]        # 0x140025a80
   140011e95:	mov    rcx,QWORD PTR [rcx+rax*8]
   140011e99:	mov    DWORD PTR [rsp+0x44],r15d
   140011e9e:	mov    r15,QWORD PTR [rsp+0x60]
   140011ea3:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011ea7:	lea    r9,[rsp+0x48]
   140011eac:	lea    rdx,[rbp+0x620]
   140011eb3:	call   QWORD PTR [rip+0x8337]        # 0x14001a1f0
   140011eb9:	test   eax,eax
   140011ebb:	je     0x140011df0
   140011ec1:	add    edi,DWORD PTR [rsp+0x48]
   140011ec5:	lea    rax,[rbp+0x620]
   140011ecc:	sub    rsi,rax
   140011ecf:	movsxd rax,DWORD PTR [rsp+0x48]
   140011ed4:	cmp    rax,rsi
   140011ed7:	jl     0x1400120e9
   140011edd:	mov    eax,r12d
   140011ee0:	mov    edx,0xd
   140011ee5:	sub    eax,r13d
   140011ee8:	cmp    eax,r14d
   140011eeb:	jb     0x140011e37
   140011ef1:	jmp    0x1400120e9
   140011ef6:	cmp    sil,0x2
   140011efa:	jne    0x140011fd8
   140011f00:	test   r14d,r14d
   140011f03:	je     0x140012151
   140011f09:	mov    edx,0xd
   140011f0e:	mov    r15d,DWORD PTR [rsp+0x44]
   140011f13:	lea    rsi,[rbp+0x620]
   140011f1a:	xor    ecx,ecx
   140011f1c:	mov    eax,r12d
   140011f1f:	sub    eax,r13d
   140011f22:	cmp    eax,r14d
   140011f25:	jae    0x140011f59
   140011f27:	movzx  eax,WORD PTR [r12]
   140011f2c:	add    r12,0x2
   140011f30:	cmp    ax,0xa
   140011f34:	jne    0x140011f45
   140011f36:	mov    WORD PTR [rsi],dx
   140011f39:	add    r15d,0x2
   140011f3d:	add    rsi,0x2
   140011f41:	add    rcx,0x2
   140011f45:	add    rcx,0x2
   140011f49:	mov    WORD PTR [rsi],ax
   140011f4c:	add    rsi,0x2
   140011f50:	cmp    rcx,0x13fe
   140011f57:	jb     0x140011f1c
   140011f59:	and    QWORD PTR [rsp+0x20],rbx
   140011f5e:	lea    rax,[rbp+0x620]
   140011f65:	mov    r8d,esi
   140011f68:	sub    r8d,eax
   140011f6b:	mov    rax,QWORD PTR [rsp+0x50]
   140011f70:	lea    rcx,[rip+0x13b09]        # 0x140025a80
   140011f77:	mov    rcx,QWORD PTR [rcx+rax*8]
   140011f7b:	mov    DWORD PTR [rsp+0x44],r15d
   140011f80:	mov    r15,QWORD PTR [rsp+0x60]
   140011f85:	mov    rcx,QWORD PTR [r15+rcx*1]
   140011f89:	lea    r9,[rsp+0x48]
   140011f8e:	lea    rdx,[rbp+0x620]
   140011f95:	call   QWORD PTR [rip+0x8255]        # 0x14001a1f0
   140011f9b:	test   eax,eax
   140011f9d:	je     0x140011df0
   140011fa3:	add    edi,DWORD PTR [rsp+0x48]
   140011fa7:	lea    rax,[rbp+0x620]
   140011fae:	sub    rsi,rax
   140011fb1:	movsxd rax,DWORD PTR [rsp+0x48]
   140011fb6:	cmp    rax,rsi
   140011fb9:	jl     0x1400120e9
   140011fbf:	mov    eax,r12d
   140011fc2:	mov    edx,0xd
   140011fc7:	sub    eax,r13d
   140011fca:	cmp    eax,r14d
   140011fcd:	jb     0x140011f0e
   140011fd3:	jmp    0x1400120e9
   140011fd8:	test   r14d,r14d
   140011fdb:	je     0x140012151
   140011fe1:	mov    r8d,0xd
   140011fe7:	lea    rcx,[rsp+0x70]
   140011fec:	xor    edx,edx
   140011fee:	mov    eax,r12d
   140011ff1:	sub    eax,r13d
   140011ff4:	cmp    eax,r14d
   140011ff7:	jae    0x140012028
   140011ff9:	movzx  eax,WORD PTR [r12]
   140011ffe:	add    r12,0x2
   140012002:	cmp    ax,0xa
   140012006:	jne    0x140012014
   140012008:	mov    WORD PTR [rcx],r8w
   14001200c:	add    rcx,0x2
   140012010:	add    rdx,0x2
   140012014:	add    rdx,0x2
   140012018:	mov    WORD PTR [rcx],ax
   14001201b:	add    rcx,0x2
   14001201f:	cmp    rdx,0x6a8
   140012026:	jb     0x140011fee
   140012028:	and    QWORD PTR [rsp+0x38],0x0
   14001202e:	and    QWORD PTR [rsp+0x30],0x0
   140012034:	lea    rax,[rsp+0x70]
   140012039:	sub    ecx,eax
   14001203b:	lea    r8,[rsp+0x70]
   140012040:	mov    DWORD PTR [rsp+0x28],0xd55
   140012048:	mov    eax,ecx
   14001204a:	mov    ecx,0xfde9
   14001204f:	cdq    
   140012050:	sub    eax,edx
   140012052:	xor    edx,edx
   140012054:	sar    eax,1
   140012056:	mov    r9d,eax
   140012059:	lea    rax,[rbp+0x620]
   140012060:	mov    QWORD PTR [rsp+0x20],rax
   140012065:	call   QWORD PTR [rip+0x819d]        # 0x14001a208
   14001206b:	mov    r15d,eax
   14001206e:	test   eax,eax
   140012070:	je     0x140012111
   140012076:	xor    esi,esi
   140012078:	mov    rax,QWORD PTR [rsp+0x50]
   14001207d:	and    QWORD PTR [rsp+0x20],0x0
   140012083:	movsxd rcx,esi
   140012086:	lea    rdx,[rbp+rcx*1+0x620]
   14001208e:	mov    r8d,r15d
   140012091:	lea    rcx,[rip+0x139e8]        # 0x140025a80
   140012098:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001209c:	mov    rax,QWORD PTR [rsp+0x60]
   1400120a1:	lea    r9,[rsp+0x48]
   1400120a6:	mov    rcx,QWORD PTR [rax+rcx*1]
   1400120aa:	sub    r8d,esi
   1400120ad:	call   QWORD PTR [rip+0x813d]        # 0x14001a1f0
   1400120b3:	test   eax,eax
   1400120b5:	je     0x1400120c2
   1400120b7:	add    esi,DWORD PTR [rsp+0x48]
   1400120bb:	cmp    r15d,esi
   1400120be:	jg     0x140012078
   1400120c0:	jmp    0x1400120ca
   1400120c2:	call   QWORD PTR [rip+0x7fa8]        # 0x14001a070
   1400120c8:	mov    ebx,eax
   1400120ca:	cmp    r15d,esi
   1400120cd:	jg     0x1400120e4
   1400120cf:	mov    edi,r12d
   1400120d2:	mov    r8d,0xd
   1400120d8:	sub    edi,r13d
   1400120db:	cmp    edi,r14d
   1400120de:	jb     0x140011fe7
   1400120e4:	mov    r15,QWORD PTR [rsp+0x60]
   1400120e9:	test   edi,edi
   1400120eb:	jne    0x14001218c
   1400120f1:	test   ebx,ebx
   1400120f3:	je     0x140012151
   1400120f5:	cmp    ebx,0x5
   1400120f8:	jne    0x140012145
   1400120fa:	call   0x14000bdf0
   1400120ff:	mov    DWORD PTR [rax],0x9
   140012105:	call   0x14000be10
   14001210a:	mov    DWORD PTR [rax],ebx
   14001210c:	jmp    0x140011ac9
   140012111:	call   QWORD PTR [rip+0x7f59]        # 0x14001a070
   140012117:	mov    ebx,eax
   140012119:	jmp    0x1400120e4
   14001211b:	mov    rcx,QWORD PTR [r15+rcx*1]
   14001211f:	and    QWORD PTR [rsp+0x20],rdi
   140012124:	lea    r9,[rsp+0x48]
   140012129:	mov    r8d,r14d
   14001212c:	mov    rdx,r13
   14001212f:	call   QWORD PTR [rip+0x80bb]        # 0x14001a1f0
   140012135:	test   eax,eax
   140012137:	je     0x140011df0
   14001213d:	mov    edi,DWORD PTR [rsp+0x48]
   140012141:	xor    ebx,ebx
   140012143:	jmp    0x1400120e9
   140012145:	mov    ecx,ebx
   140012147:	call   0x14000be30
   14001214c:	jmp    0x140011ac9
   140012151:	mov    rax,QWORD PTR [rsp+0x50]
   140012156:	lea    rcx,[rip+0x13923]        # 0x140025a80
   14001215d:	mov    rax,QWORD PTR [rcx+rax*8]
   140012161:	test   BYTE PTR [r15+rax*1+0x8],0x40
   140012167:	je     0x140012174
   140012169:	cmp    BYTE PTR [r13+0x0],0x1a
   14001216e:	je     0x140011aa6
   140012174:	call   0x14000bdf0
   140012179:	mov    DWORD PTR [rax],0x1c
   14001217f:	call   0x14000be10
   140012184:	and    DWORD PTR [rax],0x0
   140012187:	jmp    0x140011ac9
   14001218c:	sub    edi,DWORD PTR [rsp+0x44]
   140012190:	mov    eax,edi
   140012192:	mov    rcx,QWORD PTR [rbp+0x1a20]
   140012199:	xor    rcx,rsp
   14001219c:	call   0x14000a850
   1400121a1:	mov    rbx,QWORD PTR [rsp+0x1b88]
   1400121a9:	add    rsp,0x1b30
   1400121b0:	pop    r15
   1400121b2:	pop    r14
   1400121b4:	pop    r13
   1400121b6:	pop    r12
   1400121b8:	pop    rdi
   1400121b9:	pop    rsi
   1400121ba:	pop    rbp
   1400121bb:	ret    
   1400121bc:	mov    QWORD PTR [rsp+0x10],rbx
   1400121c1:	mov    DWORD PTR [rsp+0x8],ecx
   1400121c5:	push   rsi
   1400121c6:	push   rdi
   1400121c7:	push   r12
   1400121c9:	push   r13
   1400121cb:	push   r14
   1400121cd:	sub    rsp,0x20
   1400121d1:	mov    esi,r8d
   1400121d4:	mov    r12,rdx
   1400121d7:	movsxd rdi,ecx
   1400121da:	cmp    edi,0xfffffffe
   1400121dd:	jne    0x1400121f7
   1400121df:	call   0x14000be10
   1400121e4:	and    DWORD PTR [rax],0x0
   1400121e7:	call   0x14000bdf0
   1400121ec:	mov    DWORD PTR [rax],0x9
   1400121f2:	jmp    0x140012286
   1400121f7:	test   ecx,ecx
   1400121f9:	js     0x14001226e
   1400121fb:	cmp    edi,DWORD PTR [rip+0x1386b]        # 0x140025a6c
   140012201:	jae    0x14001226e
   140012203:	mov    rbx,rdi
   140012206:	mov    r13,rdi
   140012209:	sar    r13,0x5
   14001220d:	lea    r14,[rip+0x1386c]        # 0x140025a80
   140012214:	and    ebx,0x1f
   140012217:	imul   rbx,rbx,0x58
   14001221b:	mov    rax,QWORD PTR [r14+r13*8]
   14001221f:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140012224:	and    ecx,0x1
   140012227:	je     0x14001226e
   140012229:	mov    ecx,edi
   14001222b:	call   0x140011784
   140012230:	nop
   140012231:	mov    rax,QWORD PTR [r14+r13*8]
   140012235:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14001223a:	je     0x14001224d
   14001223c:	mov    r8d,esi
   14001223f:	mov    rdx,r12
   140012242:	mov    ecx,edi
   140012244:	call   0x140011a5c
   140012249:	mov    ebx,eax
   14001224b:	jmp    0x140012263
   14001224d:	call   0x14000bdf0
   140012252:	mov    DWORD PTR [rax],0x9
   140012258:	call   0x14000be10
   14001225d:	and    DWORD PTR [rax],0x0
   140012260:	or     ebx,0xffffffff
   140012263:	mov    ecx,edi
   140012265:	call   0x14001182c
   14001226a:	mov    eax,ebx
   14001226c:	jmp    0x140012289
   14001226e:	call   0x14000be10
   140012273:	and    DWORD PTR [rax],0x0
   140012276:	call   0x14000bdf0
   14001227b:	mov    DWORD PTR [rax],0x9
   140012281:	call   0x14000d04c
   140012286:	or     eax,0xffffffff
   140012289:	mov    rbx,QWORD PTR [rsp+0x58]
   14001228e:	add    rsp,0x20
   140012292:	pop    r14
   140012294:	pop    r13
   140012296:	pop    r12
   140012298:	pop    rdi
   140012299:	pop    rsi
   14001229a:	ret    
   14001229b:	int3   
   14001229c:	mov    QWORD PTR [rsp+0x8],rbx
   1400122a1:	mov    QWORD PTR [rsp+0x18],rbp
   1400122a6:	mov    QWORD PTR [rsp+0x20],rsi
   1400122ab:	push   rdi
   1400122ac:	sub    rsp,0x20
   1400122b0:	mov    rsi,r8
   1400122b3:	mov    rbp,rdx
   1400122b6:	mov    rdi,rcx
   1400122b9:	test   rdx,rdx
   1400122bc:	je     0x1400123aa
   1400122c2:	cmp    BYTE PTR [rdx],0x0
   1400122c5:	je     0x1400123aa
   1400122cb:	test   rcx,rcx
   1400122ce:	jne    0x14001233a
   1400122d0:	xor    r9d,r9d
   1400122d3:	xor    r8d,r8d
   1400122d6:	xor    edx,edx
   1400122d8:	mov    rcx,rbp
   1400122db:	call   QWORD PTR [rip+0x7f9f]        # 0x14001a280
   1400122e1:	test   eax,eax
   1400122e3:	jne    0x1400122f9
   1400122e5:	call   QWORD PTR [rip+0x7d85]        # 0x14001a070
   1400122eb:	mov    ecx,eax
   1400122ed:	call   0x14000be30
   1400122f2:	xor    eax,eax
   1400122f4:	jmp    0x1400123b2
   1400122f9:	mov    eax,eax
   1400122fb:	cmp    rsi,rax
   1400122fe:	cmova  rax,rsi
   140012302:	mov    rsi,rax
   140012305:	cmp    rax,0xffffffffffffffff
   140012309:	jbe    0x140012318
   14001230b:	call   0x14000bdf0
   140012310:	mov    DWORD PTR [rax],0x16
   140012316:	jmp    0x1400122f2
   140012318:	mov    edx,0x1
   14001231d:	mov    rcx,rax
   140012320:	call   0x14000eb44
   140012325:	mov    rbx,rax
   140012328:	test   rax,rax
   14001232b:	jne    0x140012354
   14001232d:	call   0x14000bdf0
   140012332:	mov    DWORD PTR [rax],0xc
   140012338:	jmp    0x1400122f2
   14001233a:	test   r8,r8
   14001233d:	jne    0x140012351
   14001233f:	call   0x14000bdf0
   140012344:	mov    DWORD PTR [rax],0x16
   14001234a:	call   0x14000d04c
   14001234f:	jmp    0x1400122f2
   140012351:	mov    rbx,rcx
   140012354:	lea    r9,[rsp+0x38]
   140012359:	mov    r8,rbx
   14001235c:	mov    edx,esi
   14001235e:	mov    rcx,rbp
   140012361:	call   QWORD PTR [rip+0x7f19]        # 0x14001a280
   140012367:	mov    ecx,eax
   140012369:	cmp    rcx,rsi
   14001236c:	jb     0x14001238b
   14001236e:	test   rdi,rdi
   140012371:	jne    0x14001237b
   140012373:	mov    rcx,rbx
   140012376:	call   0x14000b490
   14001237b:	call   0x14000bdf0
   140012380:	mov    DWORD PTR [rax],0x22
   140012386:	jmp    0x1400122f2
   14001238b:	test   eax,eax
   14001238d:	jne    0x1400123a5
   14001238f:	test   rdi,rdi
   140012392:	jne    0x1400122e5
   140012398:	mov    rcx,rbx
   14001239b:	call   0x14000b490
   1400123a0:	jmp    0x1400122e5
   1400123a5:	mov    rax,rbx
   1400123a8:	jmp    0x1400123b2
   1400123aa:	mov    edx,r8d
   1400123ad:	call   0x140017110
   1400123b2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400123b7:	mov    rbp,QWORD PTR [rsp+0x40]
   1400123bc:	mov    rsi,QWORD PTR [rsp+0x48]
   1400123c1:	add    rsp,0x20
   1400123c5:	pop    rdi
   1400123c6:	ret    
   1400123c7:	int3   
   1400123c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400123cd:	push   rdi
   1400123ce:	sub    rsp,0x20
   1400123d2:	mov    r8,rdx
   1400123d5:	movzx  edx,cl
   1400123d8:	cmp    BYTE PTR [r8+0x1],0x3a
   1400123dd:	mov    rcx,r8
   1400123e0:	jne    0x1400123e6
   1400123e2:	lea    rcx,[r8+0x2]
   1400123e6:	mov    al,BYTE PTR [rcx]
   1400123e8:	cmp    al,0x5c
   1400123ea:	je     0x1400123f0
   1400123ec:	cmp    al,0x2f
   1400123ee:	jne    0x1400123f6
   1400123f0:	cmp    BYTE PTR [rcx+0x1],0x0
   1400123f4:	je     0x140012404
   1400123f6:	test   dl,0x10
   1400123f9:	jne    0x140012404
   1400123fb:	mov    ebx,0x8000
   140012400:	test   al,al
   140012402:	jne    0x140012409
   140012404:	mov    ebx,0x4040
   140012409:	shl    dx,0x7
   14001240d:	mov    eax,0x80
   140012412:	mov    rcx,r8
   140012415:	not    dx
   140012418:	and    dx,ax
   14001241b:	mov    eax,0x100
   140012420:	or     dx,ax
   140012423:	or     bx,dx
   140012426:	mov    edx,0x2e
   14001242b:	call   0x140017448
   140012430:	mov    rdi,rax
   140012433:	test   rax,rax
   140012436:	je     0x140012488
   140012438:	lea    rdx,[rip+0xd6d5]        # 0x14001fb14
   14001243f:	mov    rcx,rax
   140012442:	call   0x140017360
   140012447:	test   eax,eax
   140012449:	je     0x140012484
   14001244b:	lea    rdx,[rip+0xd6ba]        # 0x14001fb0c
   140012452:	mov    rcx,rdi
   140012455:	call   0x140017360
   14001245a:	test   eax,eax
   14001245c:	je     0x140012484
   14001245e:	lea    rdx,[rip+0xd69f]        # 0x14001fb04
   140012465:	mov    rcx,rdi
   140012468:	call   0x140017360
   14001246d:	test   eax,eax
   14001246f:	je     0x140012484
   140012471:	lea    rdx,[rip+0xd684]        # 0x14001fafc
   140012478:	mov    rcx,rdi
   14001247b:	call   0x140017360
   140012480:	test   eax,eax
   140012482:	jne    0x140012488
   140012484:	or     bx,0x40
   140012488:	movzx  eax,bx
   14001248b:	shr    ax,0x3
   14001248f:	and    ax,0x38
   140012493:	or     bx,ax
   140012496:	movzx  eax,bx
   140012499:	shr    ax,0x6
   14001249d:	and    ax,0x7
   1400124a1:	or     ax,bx
   1400124a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400124a9:	add    rsp,0x20
   1400124ad:	pop    rdi
   1400124ae:	ret    
   1400124af:	int3   
   1400124b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400124b5:	mov    QWORD PTR [rsp+0x20],rsi
   1400124ba:	push   rdi
   1400124bb:	push   r12
   1400124bd:	push   r13
   1400124bf:	push   r14
   1400124c1:	push   r15
   1400124c3:	sub    rsp,0xa0
   1400124ca:	mov    rax,QWORD PTR [rip+0x10bef]        # 0x1400230c0
   1400124d1:	xor    rax,rsp
   1400124d4:	mov    QWORD PTR [rsp+0x98],rax
   1400124dc:	mov    rdi,rdx
   1400124df:	movsxd rsi,ecx
   1400124e2:	mov    DWORD PTR [rsp+0x4c],esi
   1400124e6:	xor    ebx,ebx
   1400124e8:	mov    eax,ebx
   1400124ea:	test   rdx,rdx
   1400124ed:	setne  al
   1400124f0:	test   eax,eax
   1400124f2:	jne    0x14001250b
   1400124f4:	call   0x14000be10
   1400124f9:	mov    DWORD PTR [rax],ebx
   1400124fb:	call   0x14000bdf0
   140012500:	mov    DWORD PTR [rax],0x16
   140012506:	jmp    0x14001282d
   14001250b:	xor    edx,edx
   14001250d:	lea    r8d,[rdx+0x30]
   140012511:	mov    rcx,rdi
   140012514:	call   0x14000a560
   140012519:	cmp    esi,0xfffffffe
   14001251c:	jne    0x140012535
   14001251e:	call   0x14000be10
   140012523:	mov    DWORD PTR [rax],ebx
   140012525:	call   0x14000bdf0
   14001252a:	mov    DWORD PTR [rax],0x9
   140012530:	jmp    0x140012832
   140012535:	test   esi,esi
   140012537:	js     0x14001281b
   14001253d:	cmp    esi,DWORD PTR [rip+0x13529]        # 0x140025a6c
   140012543:	jae    0x14001281b
   140012549:	mov    r12,rsi
   14001254c:	mov    r13,rsi
   14001254f:	sar    r13,0x5
   140012553:	lea    r15,[rip+0x13526]        # 0x140025a80
   14001255a:	and    r12d,0x1f
   14001255e:	imul   r12,r12,0x58
   140012562:	mov    rax,QWORD PTR [r15+r13*8]
   140012566:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   14001256c:	mov    r14d,0x1
   140012572:	and    ecx,r14d
   140012575:	je     0x14001281b
   14001257b:	mov    ecx,esi
   14001257d:	call   0x140011784
   140012582:	nop
   140012583:	mov    rcx,QWORD PTR [r15+r13*8]
   140012587:	test   BYTE PTR [rcx+r12*1+0x8],r14b
   14001258c:	jne    0x14001259e
   14001258e:	call   0x14000bdf0
   140012593:	mov    DWORD PTR [rax],0x9
   140012599:	jmp    0x14001280d
   14001259e:	mov    rcx,QWORD PTR [rcx+r12*1]
   1400125a2:	call   QWORD PTR [rip+0x7c80]        # 0x14001a228
   1400125a8:	btr    eax,0xf
   1400125ac:	cmp    eax,r14d
   1400125af:	je     0x140012649
   1400125b5:	cmp    eax,0x2
   1400125b8:	je     0x1400125da
   1400125ba:	cmp    eax,0x3
   1400125bd:	je     0x1400125d5
   1400125bf:	test   eax,eax
   1400125c1:	je     0x14001258e
   1400125c3:	call   QWORD PTR [rip+0x7aa7]        # 0x14001a070
   1400125c9:	mov    ecx,eax
   1400125cb:	call   0x14000be30
   1400125d0:	jmp    0x14001280d
   1400125d5:	cmp    eax,0x2
   1400125d8:	jne    0x1400125e1
   1400125da:	mov    ecx,0x2000
   1400125df:	jmp    0x1400125e6
   1400125e1:	mov    ecx,0x1000
   1400125e6:	mov    WORD PTR [rdi+0x6],cx
   1400125ea:	mov    DWORD PTR [rdi],esi
   1400125ec:	mov    DWORD PTR [rdi+0x10],esi
   1400125ef:	mov    WORD PTR [rdi+0x8],r14w
   1400125f4:	mov    WORD PTR [rdi+0x4],bx
   1400125f8:	mov    DWORD PTR [rdi+0xa],ebx
   1400125fb:	mov    QWORD PTR [rdi+0x28],rbx
   1400125ff:	mov    QWORD PTR [rdi+0x20],rbx
   140012603:	mov    QWORD PTR [rdi+0x18],rbx
   140012607:	cmp    eax,0x2
   14001260a:	jne    0x140012614
   14001260c:	mov    DWORD PTR [rdi+0x14],ebx
   14001260f:	jmp    0x140012810
   140012614:	mov    rcx,QWORD PTR [r15+r13*8]
   140012618:	mov    QWORD PTR [rsp+0x28],rbx
   14001261d:	lea    rax,[rsp+0x48]
   140012622:	mov    QWORD PTR [rsp+0x20],rax
   140012627:	xor    r9d,r9d
   14001262a:	xor    r8d,r8d
   14001262d:	xor    edx,edx
   14001262f:	mov    rcx,QWORD PTR [rcx+r12*1]
   140012633:	call   QWORD PTR [rip+0x7c57]        # 0x14001a290
   140012639:	neg    eax
   14001263b:	sbb    ecx,ecx
   14001263d:	and    ecx,DWORD PTR [rsp+0x48]
   140012641:	mov    DWORD PTR [rdi+0x14],ecx
   140012644:	jmp    0x140012810
   140012649:	mov    DWORD PTR [rdi+0xa],ebx
   14001264c:	mov    DWORD PTR [rdi+0x4],ebx
   14001264f:	mov    WORD PTR [rdi+0x8],r14w
   140012654:	mov    rcx,QWORD PTR [r15+r13*8]
   140012658:	lea    rdx,[rsp+0x60]
   14001265d:	mov    rcx,QWORD PTR [rcx+r12*1]
   140012661:	call   QWORD PTR [rip+0x7c21]        # 0x14001a288
   140012667:	test   eax,eax
   140012669:	je     0x1400125c3
   14001266f:	movzx  eax,WORD PTR [rdi+0x6]
   140012673:	test   BYTE PTR [rsp+0x60],r14b
   140012678:	je     0x140012681
   14001267a:	or     eax,0x124
   14001267f:	jmp    0x140012686
   140012681:	or     eax,0x1b6
   140012686:	mov    WORD PTR [rdi+0x6],ax
   14001268a:	cmp    DWORD PTR [rsp+0x74],ebx
   14001268e:	jne    0x14001269c
   140012690:	cmp    DWORD PTR [rsp+0x78],ebx
   140012694:	jne    0x14001269c
   140012696:	mov    QWORD PTR [rdi+0x20],rbx
   14001269a:	jmp    0x140012704
   14001269c:	lea    rdx,[rsp+0x40]
   1400126a1:	lea    rcx,[rsp+0x74]
   1400126a6:	call   QWORD PTR [rip+0x7a74]        # 0x14001a120
   1400126ac:	test   eax,eax
   1400126ae:	je     0x14001280d
   1400126b4:	lea    rdx,[rsp+0x50]
   1400126b9:	lea    rcx,[rsp+0x40]
   1400126be:	call   QWORD PTR [rip+0x7a54]        # 0x14001a118
   1400126c4:	test   eax,eax
   1400126c6:	je     0x14001280d
   1400126cc:	movzx  eax,WORD PTR [rsp+0x5c]
   1400126d1:	movzx  r10d,WORD PTR [rsp+0x5a]
   1400126d7:	movzx  r9d,WORD PTR [rsp+0x58]
   1400126dd:	movzx  r8d,WORD PTR [rsp+0x56]
   1400126e3:	movzx  edx,WORD PTR [rsp+0x52]
   1400126e8:	movzx  ecx,WORD PTR [rsp+0x50]
   1400126ed:	or     DWORD PTR [rsp+0x30],0xffffffff
   1400126f2:	mov    DWORD PTR [rsp+0x28],eax
   1400126f6:	mov    DWORD PTR [rsp+0x20],r10d
   1400126fb:	call   0x1400131ec
   140012700:	mov    QWORD PTR [rdi+0x20],rax
   140012704:	cmp    DWORD PTR [rsp+0x6c],ebx
   140012708:	jne    0x140012716
   14001270a:	cmp    DWORD PTR [rsp+0x70],ebx
   14001270e:	jne    0x140012716
   140012710:	mov    rax,QWORD PTR [rdi+0x20]
   140012714:	jmp    0x14001277a
   140012716:	lea    rdx,[rsp+0x40]
   14001271b:	lea    rcx,[rsp+0x6c]
   140012720:	call   QWORD PTR [rip+0x79fa]        # 0x14001a120
   140012726:	test   eax,eax
   140012728:	je     0x14001280d
   14001272e:	lea    rdx,[rsp+0x50]
   140012733:	lea    rcx,[rsp+0x40]
   140012738:	call   QWORD PTR [rip+0x79da]        # 0x14001a118
   14001273e:	test   eax,eax
   140012740:	je     0x14001280d
   140012746:	movzx  eax,WORD PTR [rsp+0x5c]
   14001274b:	movzx  r10d,WORD PTR [rsp+0x5a]
   140012751:	movzx  r9d,WORD PTR [rsp+0x58]
   140012757:	movzx  r8d,WORD PTR [rsp+0x56]
   14001275d:	movzx  edx,WORD PTR [rsp+0x52]
   140012762:	movzx  ecx,WORD PTR [rsp+0x50]
   140012767:	or     DWORD PTR [rsp+0x30],0xffffffff
   14001276c:	mov    DWORD PTR [rsp+0x28],eax
   140012770:	mov    DWORD PTR [rsp+0x20],r10d
   140012775:	call   0x1400131ec
   14001277a:	mov    QWORD PTR [rdi+0x18],rax
   14001277e:	cmp    DWORD PTR [rsp+0x64],ebx
   140012782:	jne    0x140012790
   140012784:	cmp    DWORD PTR [rsp+0x68],ebx
   140012788:	jne    0x140012790
   14001278a:	mov    rax,QWORD PTR [rdi+0x20]
   14001278e:	jmp    0x1400127ec
   140012790:	lea    rdx,[rsp+0x40]
   140012795:	lea    rcx,[rsp+0x64]
   14001279a:	call   QWORD PTR [rip+0x7980]        # 0x14001a120
   1400127a0:	test   eax,eax
   1400127a2:	je     0x14001280d
   1400127a4:	lea    rdx,[rsp+0x50]
   1400127a9:	lea    rcx,[rsp+0x40]
   1400127ae:	call   QWORD PTR [rip+0x7964]        # 0x14001a118
   1400127b4:	test   eax,eax
   1400127b6:	je     0x14001280d
   1400127b8:	movzx  eax,WORD PTR [rsp+0x5c]
   1400127bd:	movzx  r10d,WORD PTR [rsp+0x5a]
   1400127c3:	movzx  r9d,WORD PTR [rsp+0x58]
   1400127c9:	movzx  r8d,WORD PTR [rsp+0x56]
   1400127cf:	movzx  edx,WORD PTR [rsp+0x52]
   1400127d4:	movzx  ecx,WORD PTR [rsp+0x50]
   1400127d9:	or     DWORD PTR [rsp+0x30],0xffffffff
   1400127de:	mov    DWORD PTR [rsp+0x28],eax
   1400127e2:	mov    DWORD PTR [rsp+0x20],r10d
   1400127e7:	call   0x1400131ec
   1400127ec:	mov    QWORD PTR [rdi+0x28],rax
   1400127f0:	mov    eax,DWORD PTR [rsp+0x84]
   1400127f7:	mov    DWORD PTR [rdi+0x14],eax
   1400127fa:	movzx  eax,WORD PTR [rdi+0x6]
   1400127fe:	bts    eax,0xf
   140012802:	mov    WORD PTR [rdi+0x6],ax
   140012806:	mov    DWORD PTR [rdi],ebx
   140012808:	mov    DWORD PTR [rdi+0x10],ebx
   14001280b:	jmp    0x140012810
   14001280d:	or     ebx,0xffffffff
   140012810:	mov    ecx,esi
   140012812:	call   0x14001182c
   140012817:	mov    eax,ebx
   140012819:	jmp    0x140012835
   14001281b:	call   0x14000be10
   140012820:	mov    DWORD PTR [rax],ebx
   140012822:	call   0x14000bdf0
   140012827:	mov    DWORD PTR [rax],0x9
   14001282d:	call   0x14000d04c
   140012832:	or     eax,0xffffffff
   140012835:	mov    rcx,QWORD PTR [rsp+0x98]
   14001283d:	xor    rcx,rsp
   140012840:	call   0x14000a850
   140012845:	lea    r11,[rsp+0xa0]
   14001284d:	mov    rbx,QWORD PTR [r11+0x40]
   140012851:	mov    rsi,QWORD PTR [r11+0x48]
   140012855:	mov    rsp,r11
   140012858:	pop    r15
   14001285a:	pop    r14
   14001285c:	pop    r13
   14001285e:	pop    r12
   140012860:	pop    rdi
   140012861:	ret    
   140012862:	int3   
   140012863:	int3   
   140012864:	mov    QWORD PTR [rsp+0x10],rbx
   140012869:	mov    QWORD PTR [rsp+0x18],r8
   14001286e:	mov    QWORD PTR [rsp+0x8],rcx
   140012873:	push   rbp
   140012874:	push   rsi
   140012875:	push   rdi
   140012876:	push   r12
   140012878:	push   r13
   14001287a:	push   r14
   14001287c:	push   r15
   14001287e:	mov    rbp,rsp
   140012881:	sub    rsp,0x80
   140012888:	xor    edi,edi
   14001288a:	mov    r13b,0x80
   14001288d:	mov    esi,r9d
   140012890:	mov    rbx,rdx
   140012893:	mov    DWORD PTR [rbp-0x18],0x18
   14001289a:	lea    r12d,[rdi+0x1]
   14001289e:	mov    DWORD PTR [rbp-0x28],edi
   1400128a1:	mov    BYTE PTR [rbp+0x58],dil
   1400128a5:	mov    QWORD PTR [rbp-0x10],rdi
   1400128a9:	test   r13b,r9b
   1400128ac:	je     0x1400128b6
   1400128ae:	mov    DWORD PTR [rbp-0x8],edi
   1400128b1:	mov    r15b,0x10
   1400128b4:	jmp    0x1400128bd
   1400128b6:	mov    DWORD PTR [rbp-0x8],r12d
   1400128ba:	mov    r15b,dil
   1400128bd:	lea    rcx,[rbp-0x28]
   1400128c1:	call   0x1400178c4
   1400128c6:	test   eax,eax
   1400128c8:	jne    0x140012ff6
   1400128ce:	mov    eax,0x8000
   1400128d3:	test   eax,esi
   1400128d5:	jne    0x1400128e7
   1400128d7:	test   esi,0x74000
   1400128dd:	jne    0x1400128e4
   1400128df:	cmp    DWORD PTR [rbp-0x28],eax
   1400128e2:	je     0x1400128e7
   1400128e4:	or     r15b,r13b
   1400128e7:	mov    ecx,esi
   1400128e9:	mov    r9d,0x3
   1400128ef:	mov    eax,0xc0000000
   1400128f4:	and    ecx,r9d
   1400128f7:	mov    r8d,0x80000000
   1400128fd:	je     0x14001295a
   1400128ff:	dec    ecx
   140012901:	je     0x140012944
   140012903:	dec    ecx
   140012905:	je     0x14001293f
   140012907:	call   0x14000be10
   14001290c:	mov    DWORD PTR [rax],edi
   14001290e:	or     DWORD PTR [rbx],0xffffffff
   140012911:	call   0x14000bdf0
   140012916:	mov    ebx,0x16
   14001291b:	mov    DWORD PTR [rax],ebx
   14001291d:	call   0x14000d04c
   140012922:	mov    eax,ebx
   140012924:	mov    rbx,QWORD PTR [rsp+0xc8]
   14001292c:	add    rsp,0x80
   140012933:	pop    r15
   140012935:	pop    r14
   140012937:	pop    r13
   140012939:	pop    r12
   14001293b:	pop    rdi
   14001293c:	pop    rsi
   14001293d:	pop    rbp
   14001293e:	ret    
   14001293f:	mov    r14d,eax
   140012942:	jmp    0x14001295d
   140012944:	test   sil,0x8
   140012948:	je     0x140012952
   14001294a:	test   esi,0x70000
   140012950:	jne    0x14001293f
   140012952:	mov    r14d,0x40000000
   140012958:	jmp    0x14001295d
   14001295a:	mov    r14d,r8d
   14001295d:	mov    ecx,DWORD PTR [rbp+0x60]
   140012960:	mov    DWORD PTR [rbp-0x3c],r14d
   140012964:	mov    r13d,0x2
   14001296a:	sub    ecx,0x10
   14001296d:	je     0x14001299c
   14001296f:	sub    ecx,0x10
   140012972:	je     0x140012997
   140012974:	sub    ecx,0x10
   140012977:	je     0x140012992
   140012979:	sub    ecx,0x10
   14001297c:	je     0x14001298d
   14001297e:	cmp    ecx,0x40
   140012981:	jne    0x140012907
   140012983:	cmp    r14d,r8d
   140012986:	mov    edx,edi
   140012988:	sete   dl
   14001298b:	jmp    0x14001299e
   14001298d:	mov    edx,r9d
   140012990:	jmp    0x14001299e
   140012992:	mov    edx,r13d
   140012995:	jmp    0x14001299e
   140012997:	mov    edx,r12d
   14001299a:	jmp    0x14001299e
   14001299c:	mov    edx,edi
   14001299e:	mov    eax,esi
   1400129a0:	mov    ecx,0x700
   1400129a5:	mov    DWORD PTR [rbp-0x38],edx
   1400129a8:	and    eax,ecx
   1400129aa:	mov    r8d,0x100
   1400129b0:	je     0x1400129f8
   1400129b2:	cmp    eax,r8d
   1400129b5:	je     0x1400129f0
   1400129b7:	cmp    eax,0x200
   1400129bc:	je     0x1400129e8
   1400129be:	cmp    eax,0x300
   1400129c3:	je     0x1400129e3
   1400129c5:	cmp    eax,0x400
   1400129ca:	je     0x1400129f8
   1400129cc:	cmp    eax,0x500
   1400129d1:	je     0x1400129fb
   1400129d3:	cmp    eax,0x600
   1400129d8:	je     0x1400129e8
   1400129da:	cmp    eax,ecx
   1400129dc:	je     0x1400129fb
   1400129de:	jmp    0x140012907
   1400129e3:	mov    r12d,r13d
   1400129e6:	jmp    0x1400129fb
   1400129e8:	mov    r12d,0x5
   1400129ee:	jmp    0x1400129fb
   1400129f0:	mov    r12d,0x4
   1400129f6:	jmp    0x1400129fb
   1400129f8:	mov    r12d,r9d
   1400129fb:	mov    ecx,0x80
   140012a00:	mov    DWORD PTR [rbp-0x30],ecx
   140012a03:	test   r8d,esi
   140012a06:	je     0x140012a1e
   140012a08:	mov    al,BYTE PTR [rip+0x11f72]        # 0x140024980
   140012a0e:	not    al
   140012a10:	and    al,BYTE PTR [rbp+0x68]
   140012a13:	test   al,0x80
   140012a15:	lea    eax,[rcx-0x7f]
   140012a18:	cmove  ecx,eax
   140012a1b:	mov    DWORD PTR [rbp-0x30],ecx
   140012a1e:	test   sil,0x40
   140012a22:	je     0x140012a3a
   140012a24:	bts    ecx,0x1a
   140012a28:	bts    r14d,0x10
   140012a2d:	or     edx,0x4
   140012a30:	mov    DWORD PTR [rbp-0x38],edx
   140012a33:	mov    DWORD PTR [rbp-0x30],ecx
   140012a36:	mov    DWORD PTR [rbp-0x3c],r14d
   140012a3a:	bt     esi,0xc
   140012a3e:	jae    0x140012a46
   140012a40:	or     ecx,r8d
   140012a43:	mov    DWORD PTR [rbp-0x30],ecx
   140012a46:	test   sil,0x20
   140012a4a:	je     0x140012a52
   140012a4c:	bts    ecx,0x1b
   140012a50:	jmp    0x140012a5c
   140012a52:	test   sil,0x10
   140012a56:	je     0x140012a5f
   140012a58:	bts    ecx,0x1c
   140012a5c:	mov    DWORD PTR [rbp-0x30],ecx
   140012a5f:	call   0x140011854
   140012a64:	mov    DWORD PTR [rbx],eax
   140012a66:	cmp    eax,0xffffffff
   140012a69:	jne    0x140012a8c
   140012a6b:	call   0x14000be10
   140012a70:	mov    DWORD PTR [rax],edi
   140012a72:	or     DWORD PTR [rbx],0xffffffff
   140012a75:	call   0x14000bdf0
   140012a7a:	mov    DWORD PTR [rax],0x18
   140012a80:	call   0x14000bdf0
   140012a85:	mov    eax,DWORD PTR [rax]
   140012a87:	jmp    0x140012924
   140012a8c:	mov    rax,QWORD PTR [rbp+0x40]
   140012a90:	mov    r8d,DWORD PTR [rbp-0x38]
   140012a94:	mov    rcx,QWORD PTR [rbp+0x50]
   140012a98:	mov    DWORD PTR [rax],0x1
   140012a9e:	mov    eax,DWORD PTR [rbp-0x30]
   140012aa1:	mov    QWORD PTR [rsp+0x30],rdi
   140012aa6:	mov    DWORD PTR [rsp+0x28],eax
   140012aaa:	lea    r9,[rbp-0x18]
   140012aae:	mov    edx,r14d
   140012ab1:	mov    DWORD PTR [rsp+0x20],r12d
   140012ab6:	call   QWORD PTR [rip+0x77dc]        # 0x14001a298
   140012abc:	mov    QWORD PTR [rbp-0x20],rax
   140012ac0:	cmp    rax,0xffffffffffffffff
   140012ac4:	jne    0x140012b55
   140012aca:	mov    ecx,0xc0000000
   140012acf:	mov    eax,r14d
   140012ad2:	and    eax,ecx
   140012ad4:	cmp    eax,ecx
   140012ad6:	jne    0x140012b1b
   140012ad8:	mov    eax,0x1
   140012add:	test   al,sil
   140012ae0:	je     0x140012b1b
   140012ae2:	mov    eax,DWORD PTR [rbp-0x30]
   140012ae5:	mov    r8d,DWORD PTR [rbp-0x38]
   140012ae9:	mov    rcx,QWORD PTR [rbp+0x50]
   140012aed:	btr    r14d,0x1f
   140012af2:	mov    QWORD PTR [rsp+0x30],rdi
   140012af7:	mov    DWORD PTR [rsp+0x28],eax
   140012afb:	lea    r9,[rbp-0x18]
   140012aff:	mov    edx,r14d
   140012b02:	mov    DWORD PTR [rsp+0x20],r12d
   140012b07:	mov    DWORD PTR [rbp-0x3c],r14d
   140012b0b:	call   QWORD PTR [rip+0x7787]        # 0x14001a298
   140012b11:	mov    QWORD PTR [rbp-0x20],rax
   140012b15:	cmp    rax,0xffffffffffffffff
   140012b19:	jne    0x140012b55
   140012b1b:	movsxd rcx,DWORD PTR [rbx]
   140012b1e:	lea    r14,[rip+0x12f5b]        # 0x140025a80
   140012b25:	mov    rax,rcx
   140012b28:	and    ecx,0x1f
   140012b2b:	sar    rax,0x5
   140012b2f:	imul   rcx,rcx,0x58
   140012b33:	mov    rax,QWORD PTR [r14+rax*8]
   140012b37:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140012b3c:	call   QWORD PTR [rip+0x752e]        # 0x14001a070
   140012b42:	mov    ecx,eax
   140012b44:	call   0x14000be30
   140012b49:	call   0x14000bdf0
   140012b4e:	mov    edi,DWORD PTR [rax]
   140012b50:	jmp    0x140012fef
   140012b55:	mov    rcx,rax
   140012b58:	call   QWORD PTR [rip+0x76ca]        # 0x14001a228
   140012b5e:	test   eax,eax
   140012b60:	jne    0x140012bad
   140012b62:	movsxd rcx,DWORD PTR [rbx]
   140012b65:	lea    r14,[rip+0x12f14]        # 0x140025a80
   140012b6c:	mov    rax,rcx
   140012b6f:	and    ecx,0x1f
   140012b72:	sar    rax,0x5
   140012b76:	imul   rcx,rcx,0x58
   140012b7a:	mov    rax,QWORD PTR [r14+rax*8]
   140012b7e:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140012b83:	call   QWORD PTR [rip+0x74e7]        # 0x14001a070
   140012b89:	mov    ecx,eax
   140012b8b:	mov    ebx,eax
   140012b8d:	call   0x14000be30
   140012b92:	mov    rcx,QWORD PTR [rbp-0x20]
   140012b96:	call   QWORD PTR [rip+0x74dc]        # 0x14001a078
   140012b9c:	test   ebx,ebx
   140012b9e:	jne    0x140012b49
   140012ba0:	call   0x14000bdf0
   140012ba5:	mov    DWORD PTR [rax],0xd
   140012bab:	jmp    0x140012b49
   140012bad:	cmp    eax,r13d
   140012bb0:	jne    0x140012bb8
   140012bb2:	or     r15b,0x40
   140012bb6:	jmp    0x140012bc1
   140012bb8:	cmp    eax,0x3
   140012bbb:	jne    0x140012bc1
   140012bbd:	or     r15b,0x8
   140012bc1:	mov    rdx,QWORD PTR [rbp-0x20]
   140012bc5:	mov    ecx,DWORD PTR [rbx]
   140012bc7:	call   0x1400115b4
   140012bcc:	movsxd rcx,DWORD PTR [rbx]
   140012bcf:	lea    r14,[rip+0x12eaa]        # 0x140025a80
   140012bd6:	mov    rax,rcx
   140012bd9:	and    ecx,0x1f
   140012bdc:	mov    r8d,0x1
   140012be2:	sar    rax,0x5
   140012be6:	or     r15b,r8b
   140012be9:	mov    rax,QWORD PTR [r14+rax*8]
   140012bed:	imul   rcx,rcx,0x58
   140012bf1:	mov    BYTE PTR [rax+rcx*1+0x8],r15b
   140012bf6:	movsxd rcx,DWORD PTR [rbx]
   140012bf9:	mov    rax,rcx
   140012bfc:	and    ecx,0x1f
   140012bff:	sar    rax,0x5
   140012c03:	imul   rcx,rcx,0x58
   140012c07:	mov    rax,QWORD PTR [r14+rax*8]
   140012c0b:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   140012c10:	mov    al,r15b
   140012c13:	and    al,0x48
   140012c15:	mov    BYTE PTR [rbp-0x2c],al
   140012c18:	jne    0x140012ca0
   140012c1e:	test   r15b,r15b
   140012c21:	jns    0x140012ecb
   140012c27:	test   r13b,sil
   140012c2a:	je     0x140012ca0
   140012c2c:	mov    ecx,DWORD PTR [rbx]
   140012c2e:	mov    r8d,r13d
   140012c31:	or     edx,0xffffffff
   140012c34:	call   0x14001767c
   140012c39:	mov    DWORD PTR [rbp-0x34],eax
   140012c3c:	cmp    eax,0xffffffff
   140012c3f:	jne    0x140012c5a
   140012c41:	call   0x14000be10
   140012c46:	cmp    DWORD PTR [rax],0x83
   140012c4c:	je     0x140012c9a
   140012c4e:	mov    ecx,DWORD PTR [rbx]
   140012c50:	call   0x140010e10
   140012c55:	jmp    0x140012b49
   140012c5a:	mov    ecx,DWORD PTR [rbx]
   140012c5c:	lea    rdx,[rbp-0x40]
   140012c60:	mov    r8d,0x1
   140012c66:	mov    BYTE PTR [rbp-0x40],dil
   140012c6a:	call   0x140016320
   140012c6f:	test   eax,eax
   140012c71:	jne    0x140012c89
   140012c73:	cmp    BYTE PTR [rbp-0x40],0x1a
   140012c77:	jne    0x140012c89
   140012c79:	movsxd rdx,DWORD PTR [rbp-0x34]
   140012c7d:	mov    ecx,DWORD PTR [rbx]
   140012c7f:	call   0x1400174e4
   140012c84:	cmp    eax,0xffffffff
   140012c87:	je     0x140012c4e
   140012c89:	mov    ecx,DWORD PTR [rbx]
   140012c8b:	xor    r8d,r8d
   140012c8e:	xor    edx,edx
   140012c90:	call   0x14001767c
   140012c95:	cmp    eax,0xffffffff
   140012c98:	je     0x140012c4e
   140012c9a:	mov    r8d,0x1
   140012ca0:	test   r15b,r15b
   140012ca3:	jns    0x140012ecb
   140012ca9:	mov    edx,0x74000
   140012cae:	mov    ecx,0x4000
   140012cb3:	test   edx,esi
   140012cb5:	jne    0x140012cc4
   140012cb7:	mov    eax,DWORD PTR [rbp-0x28]
   140012cba:	and    eax,edx
   140012cbc:	jne    0x140012cc2
   140012cbe:	or     esi,ecx
   140012cc0:	jmp    0x140012cc4
   140012cc2:	or     esi,eax
   140012cc4:	mov    eax,esi
   140012cc6:	and    eax,edx
   140012cc8:	cmp    eax,ecx
   140012cca:	je     0x140012d0f
   140012ccc:	cmp    eax,0x10000
   140012cd1:	je     0x140012cfc
   140012cd3:	cmp    eax,0x14000
   140012cd8:	je     0x140012cfc
   140012cda:	cmp    eax,0x20000
   140012cdf:	je     0x140012d09
   140012ce1:	cmp    eax,0x24000
   140012ce6:	je     0x140012d09
   140012ce8:	cmp    eax,0x40000
   140012ced:	je     0x140012cf6
   140012cef:	cmp    eax,0x44000
   140012cf4:	jne    0x140012d13
   140012cf6:	mov    BYTE PTR [rbp+0x58],r8b
   140012cfa:	jmp    0x140012d13
   140012cfc:	mov    ecx,0x301
   140012d01:	mov    eax,esi
   140012d03:	and    eax,ecx
   140012d05:	cmp    eax,ecx
   140012d07:	jne    0x140012d13
   140012d09:	mov    BYTE PTR [rbp+0x58],r13b
   140012d0d:	jmp    0x140012d13
   140012d0f:	mov    BYTE PTR [rbp+0x58],dil
   140012d13:	test   esi,0x70000
   140012d19:	je     0x140012ecb
   140012d1f:	test   r15b,0x40
   140012d23:	mov    r15d,DWORD PTR [rbp-0x3c]
   140012d27:	mov    DWORD PTR [rbp-0x34],edi
   140012d2a:	jne    0x140012ecf
   140012d30:	mov    eax,r15d
   140012d33:	mov    ecx,0xc0000000
   140012d38:	and    eax,ecx
   140012d3a:	cmp    eax,0x40000000
   140012d3f:	je     0x140012e52
   140012d45:	cmp    eax,0x80000000
   140012d4a:	je     0x140012dbc
   140012d4c:	cmp    eax,ecx
   140012d4e:	jne    0x140012ecf
   140012d54:	test   r12d,r12d
   140012d57:	je     0x140012ecf
   140012d5d:	cmp    r12d,r13d
   140012d60:	jbe    0x140012d72
   140012d62:	cmp    r12d,0x4
   140012d66:	jbe    0x140012d95
   140012d68:	cmp    r12d,0x5
   140012d6c:	jne    0x140012ecf
   140012d72:	movsx  ecx,BYTE PTR [rbp+0x58]
   140012d76:	mov    r12d,edi
   140012d79:	dec    ecx
   140012d7b:	je     0x140012e96
   140012d81:	dec    ecx
   140012d83:	jne    0x140012ecf
   140012d89:	mov    DWORD PTR [rbp-0x34],0xfeff
   140012d90:	jmp    0x140012ea3
   140012d95:	mov    ecx,DWORD PTR [rbx]
   140012d97:	mov    r8d,r13d
   140012d9a:	xor    edx,edx
   140012d9c:	call   0x140015e2c
   140012da1:	test   rax,rax
   140012da4:	je     0x140012d72
   140012da6:	mov    ecx,DWORD PTR [rbx]
   140012da8:	xor    r8d,r8d
   140012dab:	xor    edx,edx
   140012dad:	call   0x140015e2c
   140012db2:	cmp    rax,0xffffffffffffffff
   140012db6:	je     0x140012c4e
   140012dbc:	mov    ecx,DWORD PTR [rbx]
   140012dbe:	lea    rdx,[rbp-0x34]
   140012dc2:	mov    r8d,0x3
   140012dc8:	call   0x140016320
   140012dcd:	cmp    eax,0xffffffff
   140012dd0:	je     0x140012c4e
   140012dd6:	cmp    eax,r13d
   140012dd9:	je     0x140012df6
   140012ddb:	cmp    eax,0x3
   140012dde:	jne    0x140012e41
   140012de0:	cmp    DWORD PTR [rbp-0x34],0xbfbbef
   140012de7:	jne    0x140012df6
   140012de9:	lea    r8d,[rax-0x2]
   140012ded:	mov    BYTE PTR [rbp+0x58],r8b
   140012df1:	jmp    0x140012ed5
   140012df6:	movzx  eax,WORD PTR [rbp-0x34]
   140012dfa:	cmp    eax,0xfffe
   140012dff:	jne    0x140012e1b
   140012e01:	mov    ecx,DWORD PTR [rbx]
   140012e03:	call   0x140010e10
   140012e08:	call   0x14000bdf0
   140012e0d:	mov    ebx,0x16
   140012e12:	mov    DWORD PTR [rax],ebx
   140012e14:	mov    edi,ebx
   140012e16:	jmp    0x140012fef
   140012e1b:	cmp    eax,0xfeff
   140012e20:	jne    0x140012e41
   140012e22:	mov    ecx,DWORD PTR [rbx]
   140012e24:	xor    r8d,r8d
   140012e27:	mov    edx,r13d
   140012e2a:	call   0x14001767c
   140012e2f:	cmp    eax,0xffffffff
   140012e32:	je     0x140012c4e
   140012e38:	mov    BYTE PTR [rbp+0x58],r13b
   140012e3c:	jmp    0x140012ecf
   140012e41:	mov    ecx,DWORD PTR [rbx]
   140012e43:	xor    r8d,r8d
   140012e46:	xor    edx,edx
   140012e48:	call   0x14001767c
   140012e4d:	cmp    eax,0xffffffff
   140012e50:	jmp    0x140012e8f
   140012e52:	test   r12d,r12d
   140012e55:	je     0x140012ecf
   140012e57:	cmp    r12d,r13d
   140012e5a:	jbe    0x140012d72
   140012e60:	cmp    r12d,0x4
   140012e64:	ja     0x140012d68
   140012e6a:	mov    ecx,DWORD PTR [rbx]
   140012e6c:	mov    r8d,r13d
   140012e6f:	xor    edx,edx
   140012e71:	call   0x140015e2c
   140012e76:	test   rax,rax
   140012e79:	je     0x140012d72
   140012e7f:	mov    ecx,DWORD PTR [rbx]
   140012e81:	xor    r8d,r8d
   140012e84:	xor    edx,edx
   140012e86:	call   0x140015e2c
   140012e8b:	cmp    rax,0xffffffffffffffff
   140012e8f:	jne    0x140012ecf
   140012e91:	jmp    0x140012c4e
   140012e96:	mov    DWORD PTR [rbp-0x34],0xbfbbef
   140012e9d:	mov    r13d,0x3
   140012ea3:	mov    ecx,DWORD PTR [rbx]
   140012ea5:	movsxd rax,r12d
   140012ea8:	mov    r8d,r13d
   140012eab:	lea    rdx,[rbp+rax*1-0x34]
   140012eb0:	sub    r8d,r12d
   140012eb3:	call   0x1400121bc
   140012eb8:	cmp    eax,0xffffffff
   140012ebb:	je     0x140012c4e
   140012ec1:	add    r12d,eax
   140012ec4:	cmp    r13d,r12d
   140012ec7:	jg     0x140012ea3
   140012ec9:	jmp    0x140012ecf
   140012ecb:	mov    r15d,DWORD PTR [rbp-0x3c]
   140012ecf:	mov    r8d,0x1
   140012ed5:	movsxd rcx,DWORD PTR [rbx]
   140012ed8:	mov    r12b,BYTE PTR [rbp+0x58]
   140012edc:	mov    rax,rcx
   140012edf:	and    ecx,0x1f
   140012ee2:	and    r12b,0x7f
   140012ee6:	sar    rax,0x5
   140012eea:	imul   rcx,rcx,0x58
   140012eee:	mov    rax,QWORD PTR [r14+rax*8]
   140012ef2:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   140012ef7:	or     BYTE PTR [rax+rcx*1+0x38],r12b
   140012efc:	movsxd rdx,DWORD PTR [rbx]
   140012eff:	mov    rax,rdx
   140012f02:	and    edx,0x1f
   140012f05:	sar    rax,0x5
   140012f09:	imul   rdx,rdx,0x58
   140012f0d:	mov    rcx,QWORD PTR [r14+rax*8]
   140012f11:	mov    eax,esi
   140012f13:	and    BYTE PTR [rcx+rdx*1+0x38],0x7f
   140012f18:	shr    eax,0x10
   140012f1b:	shl    al,0x7
   140012f1e:	or     BYTE PTR [rcx+rdx*1+0x38],al
   140012f22:	cmp    BYTE PTR [rbp-0x2c],dil
   140012f26:	jne    0x140012f48
   140012f28:	test   sil,0x8
   140012f2c:	je     0x140012f48
   140012f2e:	movsxd rcx,DWORD PTR [rbx]
   140012f31:	mov    rax,rcx
   140012f34:	and    ecx,0x1f
   140012f37:	sar    rax,0x5
   140012f3b:	imul   rcx,rcx,0x58
   140012f3f:	mov    rax,QWORD PTR [r14+rax*8]
   140012f43:	or     BYTE PTR [rax+rcx*1+0x8],0x20
   140012f48:	mov    ecx,0xc0000000
   140012f4d:	mov    eax,r15d
   140012f50:	and    eax,ecx
   140012f52:	cmp    eax,ecx
   140012f54:	jne    0x140012fef
   140012f5a:	test   r8b,sil
   140012f5d:	je     0x140012fef
   140012f63:	mov    rcx,QWORD PTR [rbp-0x20]
   140012f67:	call   QWORD PTR [rip+0x710b]        # 0x14001a078
   140012f6d:	mov    eax,DWORD PTR [rbp-0x30]
   140012f70:	mov    r8d,DWORD PTR [rbp-0x38]
   140012f74:	mov    rcx,QWORD PTR [rbp+0x50]
   140012f78:	mov    QWORD PTR [rsp+0x30],rdi
   140012f7d:	mov    DWORD PTR [rsp+0x28],eax
   140012f81:	btr    r15d,0x1f
   140012f86:	lea    r9,[rbp-0x18]
   140012f8a:	mov    DWORD PTR [rsp+0x20],0x3
   140012f92:	mov    edx,r15d
   140012f95:	call   QWORD PTR [rip+0x72fd]        # 0x14001a298
   140012f9b:	cmp    rax,0xffffffffffffffff
   140012f9f:	jne    0x140012fd6
   140012fa1:	call   QWORD PTR [rip+0x70c9]        # 0x14001a070
   140012fa7:	mov    ecx,eax
   140012fa9:	call   0x14000be30
   140012fae:	movsxd r11,DWORD PTR [rbx]
   140012fb1:	mov    rax,r11
   140012fb4:	and    r11d,0x1f
   140012fb8:	sar    rax,0x5
   140012fbc:	imul   r11,r11,0x58
   140012fc0:	mov    rax,QWORD PTR [r14+rax*8]
   140012fc4:	and    BYTE PTR [rax+r11*1+0x8],0xfe
   140012fca:	mov    ecx,DWORD PTR [rbx]
   140012fcc:	call   0x140011664
   140012fd1:	jmp    0x140012b49
   140012fd6:	movsxd rdx,DWORD PTR [rbx]
   140012fd9:	mov    rcx,rdx
   140012fdc:	and    edx,0x1f
   140012fdf:	sar    rcx,0x5
   140012fe3:	imul   rdx,rdx,0x58
   140012fe7:	mov    rcx,QWORD PTR [r14+rcx*8]
   140012feb:	mov    QWORD PTR [rdx+rcx*1],rax
   140012fef:	mov    eax,edi
   140012ff1:	jmp    0x140012924
   140012ff6:	xor    r9d,r9d
   140012ff9:	xor    r8d,r8d
   140012ffc:	xor    edx,edx
   140012ffe:	xor    ecx,ecx
   140013000:	mov    QWORD PTR [rsp+0x20],rdi
   140013005:	call   0x14000cfa8
   14001300a:	int3   
   14001300b:	int3   
   14001300c:	mov    rax,rsp
   14001300f:	mov    DWORD PTR [rax+0x10],edx
   140013012:	mov    QWORD PTR [rax+0x18],r8
   140013016:	mov    QWORD PTR [rax+0x20],r9
   14001301a:	push   rbx
   14001301b:	push   rdi
   14001301c:	sub    rsp,0x48
   140013020:	or     DWORD PTR [rax-0x28],0xffffffff
   140013024:	and    DWORD PTR [rax-0x24],0x0
   140013028:	xor    r8d,r8d
   14001302b:	test   rcx,rcx
   14001302e:	setne  r8b
   140013032:	test   r8d,r8d
   140013035:	jne    0x14001304f
   140013037:	call   0x14000bdf0
   14001303c:	mov    DWORD PTR [rax],0x16
   140013042:	call   0x14000d04c
   140013047:	or     eax,0xffffffff
   14001304a:	jmp    0x1400130da
   14001304f:	lea    rax,[rsp+0x70]
   140013054:	add    rax,0x8
   140013058:	mov    r8d,DWORD PTR [rax-0x8]
   14001305c:	mov    DWORD PTR [rsp+0x28],r8d
   140013061:	mov    DWORD PTR [rsp+0x20],0x40
   140013069:	mov    r9d,edx
   14001306c:	mov    r8,rcx
   14001306f:	lea    rdx,[rsp+0x30]
   140013074:	lea    rcx,[rsp+0x34]
   140013079:	call   0x140012864
   14001307e:	mov    edi,eax
   140013080:	mov    DWORD PTR [rsp+0x38],eax
   140013084:	cmp    DWORD PTR [rsp+0x34],0x0
   140013089:	je     0x1400130c4
   14001308b:	test   eax,eax
   14001308d:	je     0x1400130b7
   14001308f:	movsxd rbx,DWORD PTR [rsp+0x30]
   140013094:	mov    rcx,rbx
   140013097:	mov    rax,rbx
   14001309a:	sar    rax,0x5
   14001309e:	lea    rdx,[rip+0x129db]        # 0x140025a80
   1400130a5:	and    ecx,0x1f
   1400130a8:	imul   rcx,rcx,0x58
   1400130ac:	mov    rax,QWORD PTR [rdx+rax*8]
   1400130b0:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   1400130b5:	jmp    0x1400130bb
   1400130b7:	mov    ebx,DWORD PTR [rsp+0x30]
   1400130bb:	mov    ecx,ebx
   1400130bd:	call   0x14001182c
   1400130c2:	jmp    0x1400130c8
   1400130c4:	mov    ebx,DWORD PTR [rsp+0x30]
   1400130c8:	test   edi,edi
   1400130ca:	je     0x1400130d8
   1400130cc:	call   0x14000bdf0
   1400130d1:	mov    DWORD PTR [rax],edi
   1400130d3:	jmp    0x140013047
   1400130d8:	mov    eax,ebx
   1400130da:	add    rsp,0x48
   1400130de:	pop    rdi
   1400130df:	pop    rbx
   1400130e0:	ret    
   1400130e1:	int3   
   1400130e2:	int3   
   1400130e3:	int3   
   1400130e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400130e9:	push   rdi
   1400130ea:	sub    rsp,0x40
   1400130ee:	and    DWORD PTR [rsp+0x30],0x0
   1400130f3:	xor    eax,eax
   1400130f5:	mov    rdi,QWORD PTR [rsp+0x70]
   1400130fa:	test   rdi,rdi
   1400130fd:	setne  al
   140013100:	test   eax,eax
   140013102:	jne    0x14001311c
   140013104:	call   0x14000bdf0
   140013109:	mov    ebx,0x16
   14001310e:	mov    DWORD PTR [rax],ebx
   140013110:	call   0x14000d04c
   140013115:	mov    eax,ebx
   140013117:	jmp    0x1400131ab
   14001311c:	or     DWORD PTR [rdi],0xffffffff
   14001311f:	xor    eax,eax
   140013121:	test   rcx,rcx
   140013124:	setne  al
   140013127:	test   eax,eax
   140013129:	je     0x140013104
   14001312b:	cmp    DWORD PTR [rsp+0x78],0x0
   140013130:	je     0x140013145
   140013132:	test   r9d,0xfffffe7f
   140013139:	mov    eax,0x0
   14001313e:	sete   al
   140013141:	test   eax,eax
   140013143:	je     0x140013104
   140013145:	mov    DWORD PTR [rsp+0x28],r9d
   14001314a:	mov    DWORD PTR [rsp+0x20],r8d
   14001314f:	mov    r9d,edx
   140013152:	mov    r8,rcx
   140013155:	mov    rdx,rdi
   140013158:	lea    rcx,[rsp+0x30]
   14001315d:	call   0x140012864
   140013162:	mov    ebx,eax
   140013164:	mov    DWORD PTR [rsp+0x34],eax
   140013168:	cmp    DWORD PTR [rsp+0x30],0x0
   14001316d:	je     0x14001319b
   14001316f:	test   eax,eax
   140013171:	je     0x140013194
   140013173:	movsxd rcx,DWORD PTR [rdi]
   140013176:	mov    rax,rcx
   140013179:	sar    rax,0x5
   14001317d:	lea    rdx,[rip+0x128fc]        # 0x140025a80
   140013184:	and    ecx,0x1f
   140013187:	imul   rcx,rcx,0x58
   14001318b:	mov    rax,QWORD PTR [rdx+rax*8]
   14001318f:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140013194:	mov    ecx,DWORD PTR [rdi]
   140013196:	call   0x14001182c
   14001319b:	test   ebx,ebx
   14001319d:	je     0x140013115
   1400131a3:	or     DWORD PTR [rdi],0xffffffff
   1400131a6:	jmp    0x140013115
   1400131ab:	mov    rbx,QWORD PTR [rsp+0x50]
   1400131b0:	add    rsp,0x40
   1400131b4:	pop    rdi
   1400131b5:	ret    
   1400131b6:	int3   
   1400131b7:	int3   
   1400131b8:	sub    rsp,0x38
   1400131bc:	mov    eax,r9d
   1400131bf:	mov    r9d,DWORD PTR [rsp+0x60]
   1400131c4:	mov    r10d,r8d
   1400131c7:	mov    r11,rdx
   1400131ca:	mov    DWORD PTR [rsp+0x28],0x1
   1400131d2:	mov    QWORD PTR [rsp+0x20],rcx
   1400131d7:	mov    r8d,eax
   1400131da:	mov    edx,r10d
   1400131dd:	mov    rcx,r11
   1400131e0:	call   0x1400130e4
   1400131e5:	add    rsp,0x38
   1400131e9:	ret    
   1400131ea:	int3   
   1400131eb:	int3   
   1400131ec:	rex push rbp
   1400131ee:	push   rbx
   1400131ef:	push   rsi
   1400131f0:	push   rdi
   1400131f1:	push   r12
   1400131f3:	push   r13
   1400131f5:	push   r14
   1400131f7:	push   r15
   1400131f9:	mov    rbp,rsp
   1400131fc:	sub    rsp,0x78
   140013200:	mov    rax,QWORD PTR [rip+0xfeb9]        # 0x1400230c0
   140013207:	xor    rax,rsp
   14001320a:	mov    QWORD PTR [rbp-0x10],rax
   14001320e:	xor    edi,edi
   140013210:	lea    ebx,[rcx-0x76c]
   140013216:	movsxd r15,r9d
   140013219:	movsxd rsi,edx
   14001321c:	mov    DWORD PTR [rbp-0x48],edi
   14001321f:	mov    DWORD PTR [rbp-0x44],edi
   140013222:	mov    DWORD PTR [rbp-0x40],edi
   140013225:	cmp    ebx,0x46
   140013228:	jl     0x14001348a
   14001322e:	cmp    ebx,0x44c
   140013234:	jg     0x14001348a
   14001323a:	lea    eax,[rsi-0x1]
   14001323d:	cmp    eax,0xb
   140013240:	ja     0x14001348a
   140013246:	cmp    r15d,0x17
   14001324a:	ja     0x14001348a
   140013250:	movsxd r13,DWORD PTR [rbp+0x68]
   140013254:	cmp    r13d,0x3b
   140013258:	ja     0x14001348a
   14001325e:	movsxd r14,DWORD PTR [rbp+0x70]
   140013262:	cmp    r14d,0x3b
   140013266:	ja     0x14001348a
   14001326c:	lea    r10d,[rdi+0x1]
   140013270:	cmp    r8d,r10d
   140013273:	jl     0x14001348a
   140013279:	lea    rcx,[rip+0x11388]        # 0x140024608
   140013280:	mov    r11d,0x51eb851f
   140013286:	mov    r9d,DWORD PTR [rcx+rsi*4-0x4]
   14001328b:	mov    ecx,DWORD PTR [rcx+rsi*4]
   14001328e:	sub    ecx,r9d
   140013291:	cmp    ecx,r8d
   140013294:	jge    0x1400132f8
   140013296:	mov    eax,ebx
   140013298:	and    eax,0x80000003
   14001329d:	jge    0x1400132a8
   14001329f:	sub    eax,r10d
   1400132a2:	or     eax,0xfffffffc
   1400132a5:	add    eax,r10d
   1400132a8:	test   eax,eax
   1400132aa:	jne    0x1400132c2
   1400132ac:	mov    eax,r11d
   1400132af:	imul   ebx
   1400132b1:	sar    edx,0x5
   1400132b4:	mov    eax,edx
   1400132b6:	shr    eax,0x1f
   1400132b9:	add    edx,eax
   1400132bb:	imul   edx,edx,0x64
   1400132be:	cmp    ebx,edx
   1400132c0:	jne    0x1400132e5
   1400132c2:	lea    ecx,[rbx+0x76c]
   1400132c8:	mov    eax,r11d
   1400132cb:	imul   ecx
   1400132cd:	sar    edx,0x7
   1400132d0:	mov    eax,edx
   1400132d2:	shr    eax,0x1f
   1400132d5:	add    edx,eax
   1400132d7:	imul   edx,edx,0x190
   1400132dd:	cmp    ecx,edx
   1400132df:	jne    0x14001348a
   1400132e5:	cmp    esi,0x2
   1400132e8:	jne    0x14001348a
   1400132ee:	cmp    r8d,0x1d
   1400132f2:	jg     0x14001348a
   1400132f8:	mov    eax,ebx
   1400132fa:	lea    r12d,[r9+r8*1]
   1400132fe:	and    eax,0x80000003
   140013303:	jge    0x14001330e
   140013305:	sub    eax,r10d
   140013308:	or     eax,0xfffffffc
   14001330b:	add    eax,r10d
   14001330e:	test   eax,eax
   140013310:	jne    0x140013328
   140013312:	mov    eax,r11d
   140013315:	imul   ebx
   140013317:	sar    edx,0x5
   14001331a:	mov    eax,edx
   14001331c:	shr    eax,0x1f
   14001331f:	add    edx,eax
   140013321:	imul   edx,edx,0x64
   140013324:	cmp    ebx,edx
   140013326:	jne    0x140013347
   140013328:	lea    ecx,[rbx+0x76c]
   14001332e:	mov    eax,r11d
   140013331:	imul   ecx
   140013333:	sar    edx,0x7
   140013336:	mov    eax,edx
   140013338:	shr    eax,0x1f
   14001333b:	add    edx,eax
   14001333d:	imul   edx,edx,0x190
   140013343:	cmp    ecx,edx
   140013345:	jne    0x14001334f
   140013347:	cmp    esi,0x2
   14001334a:	jle    0x14001334f
   14001334c:	add    r12d,r10d
   14001334f:	call   0x1400182f4
   140013354:	lea    rcx,[rbp-0x48]
   140013358:	call   0x140018360
   14001335d:	test   eax,eax
   14001335f:	jne    0x140013475
   140013365:	lea    rcx,[rbp-0x44]
   140013369:	call   0x140018390
   14001336e:	test   eax,eax
   140013370:	jne    0x140013460
   140013376:	lea    rcx,[rbp-0x40]
   14001337a:	call   0x1400183c0
   14001337f:	test   eax,eax
   140013381:	jne    0x14001344b
   140013387:	lea    ecx,[rbx+0x12b]
   14001338d:	mov    r10d,0x51eb851f
   140013393:	lea    r8d,[rbx-0x1]
   140013397:	mov    eax,r10d
   14001339a:	mov    DWORD PTR [rbp-0x1c],r12d
   14001339e:	mov    DWORD PTR [rbp-0x24],ebx
   1400133a1:	mov    DWORD PTR [rbp-0x30],r15d
   1400133a5:	mov    DWORD PTR [rbp-0x34],r13d
   1400133a9:	mov    DWORD PTR [rbp-0x38],r14d
   1400133ad:	imul   ecx
   1400133af:	mov    r9d,edx
   1400133b2:	mov    eax,r10d
   1400133b5:	sar    r9d,0x7
   1400133b9:	mov    ecx,r9d
   1400133bc:	shr    ecx,0x1f
   1400133bf:	add    r9d,ecx
   1400133c2:	imul   r8d
   1400133c5:	sar    edx,0x5
   1400133c8:	mov    eax,r8d
   1400133cb:	mov    ecx,edx
   1400133cd:	shr    ecx,0x1f
   1400133d0:	add    edx,ecx
   1400133d2:	sub    r9d,edx
   1400133d5:	cdq    
   1400133d6:	and    edx,0x3
   1400133d9:	add    eax,edx
   1400133db:	sar    eax,0x2
   1400133de:	lea    ecx,[r9+rax*1-0x11]
   1400133e3:	movsxd rax,ebx
   1400133e6:	sub    rax,0x46
   1400133ea:	movsxd rdx,ecx
   1400133ed:	imul   rax,rax,0x16d
   1400133f4:	add    rdx,rax
   1400133f7:	movsxd rax,r12d
   1400133fa:	add    rdx,rax
   1400133fd:	movsxd rax,DWORD PTR [rbp-0x40]
   140013401:	lea    rcx,[rdx+rdx*2]
   140013405:	lea    rdi,[r15+rcx*8]
   140013409:	imul   rdi,rdi,0x3c
   14001340d:	add    rdi,r13
   140013410:	imul   rdi,rdi,0x3c
   140013414:	add    rdi,rax
   140013417:	lea    eax,[rsi-0x1]
   14001341a:	add    rdi,r14
   14001341d:	cmp    DWORD PTR [rbp+0x78],0x1
   140013421:	mov    DWORD PTR [rbp-0x28],eax
   140013424:	je     0x14001343f
   140013426:	cmp    DWORD PTR [rbp+0x78],0xffffffff
   14001342a:	jne    0x140013446
   14001342c:	cmp    DWORD PTR [rbp-0x48],0x0
   140013430:	je     0x140013446
   140013432:	lea    rcx,[rbp-0x38]
   140013436:	call   0x140018330
   14001343b:	test   eax,eax
   14001343d:	je     0x140013446
   14001343f:	movsxd rcx,DWORD PTR [rbp-0x44]
   140013443:	add    rdi,rcx
   140013446:	mov    rax,rdi
   140013449:	jmp    0x140013499
   14001344b:	xor    r9d,r9d
   14001344e:	xor    r8d,r8d
   140013451:	xor    edx,edx
   140013453:	xor    ecx,ecx
   140013455:	mov    QWORD PTR [rsp+0x20],rdi
   14001345a:	call   0x14000cfa8
   14001345f:	int3   
   140013460:	xor    r9d,r9d
   140013463:	xor    r8d,r8d
   140013466:	xor    edx,edx
   140013468:	xor    ecx,ecx
   14001346a:	mov    QWORD PTR [rsp+0x20],rdi
   14001346f:	call   0x14000cfa8
   140013474:	int3   
   140013475:	xor    r9d,r9d
   140013478:	xor    r8d,r8d
   14001347b:	xor    edx,edx
   14001347d:	xor    ecx,ecx
   14001347f:	mov    QWORD PTR [rsp+0x20],rdi
   140013484:	call   0x14000cfa8
   140013489:	int3   
   14001348a:	call   0x14000bdf0
   14001348f:	mov    DWORD PTR [rax],0x16
   140013495:	or     rax,0xffffffffffffffff
   140013499:	mov    rcx,QWORD PTR [rbp-0x10]
   14001349d:	xor    rcx,rsp
   1400134a0:	call   0x14000a850
   1400134a5:	add    rsp,0x78
   1400134a9:	pop    r15
   1400134ab:	pop    r14
   1400134ad:	pop    r13
   1400134af:	pop    r12
   1400134b1:	pop    rdi
   1400134b2:	pop    rsi
   1400134b3:	pop    rbx
   1400134b4:	pop    rbp
   1400134b5:	ret    
   1400134b6:	int3   
   1400134b7:	int3   
   1400134b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400134bd:	mov    QWORD PTR [rsp+0x10],rbp
   1400134c2:	mov    QWORD PTR [rsp+0x18],rsi
   1400134c7:	push   rdi
   1400134c8:	sub    rsp,0x240
   1400134cf:	mov    rax,QWORD PTR [rip+0xfbea]        # 0x1400230c0
   1400134d6:	xor    rax,rsp
   1400134d9:	mov    QWORD PTR [rsp+0x230],rax
   1400134e1:	lea    rdx,[rsp+0x20]
   1400134e6:	mov    ecx,0x105
   1400134eb:	lea    rbx,[rsp+0x20]
   1400134f0:	xor    ebp,ebp
   1400134f2:	call   QWORD PTR [rip+0x6da8]        # 0x14001a2a0
   1400134f8:	mov    edi,eax
   1400134fa:	cmp    eax,0x104
   1400134ff:	jle    0x14001353c
   140013501:	lea    esi,[rax+0x1]
   140013504:	lea    edx,[rbp+0x2]
   140013507:	movsxd rcx,esi
   14001350a:	call   0x140010bd0
   14001350f:	mov    rbx,rax
   140013512:	test   rax,rax
   140013515:	jne    0x140013526
   140013517:	call   0x14000bdf0
   14001351c:	xor    edi,edi
   14001351e:	mov    DWORD PTR [rax],0xc
   140013524:	jmp    0x14001353c
   140013526:	mov    ebp,0x1
   14001352b:	test   edi,edi
   14001352d:	je     0x14001353c
   14001352f:	mov    rdx,rax
   140013532:	mov    ecx,esi
   140013534:	call   QWORD PTR [rip+0x6d66]        # 0x14001a2a0
   14001353a:	mov    edi,eax
   14001353c:	xor    esi,esi
   14001353e:	test   edi,edi
   140013540:	je     0x140013565
   140013542:	cmp    WORD PTR [rbx+0x2],0x3a
   140013547:	jne    0x140013570
   140013549:	cmp    WORD PTR [rbx],0x61
   14001354d:	jb     0x14001355d
   14001354f:	cmp    WORD PTR [rbx],0x7a
   140013553:	ja     0x14001355d
   140013555:	movzx  eax,WORD PTR [rbx]
   140013558:	sub    eax,0x20
   14001355b:	jmp    0x140013560
   14001355d:	movzx  eax,WORD PTR [rbx]
   140013560:	lea    esi,[rax-0x40]
   140013563:	jmp    0x140013570
   140013565:	call   0x14000bdf0
   14001356a:	mov    DWORD PTR [rax],0xc
   140013570:	test   ebp,ebp
   140013572:	je     0x14001357c
   140013574:	mov    rcx,rbx
   140013577:	call   0x14000b490
   14001357c:	mov    eax,esi
   14001357e:	mov    rcx,QWORD PTR [rsp+0x230]
   140013586:	xor    rcx,rsp
   140013589:	call   0x14000a850
   14001358e:	lea    r11,[rsp+0x240]
   140013596:	mov    rbx,QWORD PTR [r11+0x10]
   14001359a:	mov    rbp,QWORD PTR [r11+0x18]
   14001359e:	mov    rsi,QWORD PTR [r11+0x20]
   1400135a2:	mov    rsp,r11
   1400135a5:	pop    rdi
   1400135a6:	ret    
   1400135a7:	int3   
   1400135a8:	mov    QWORD PTR [rsp+0x10],rbx
   1400135ad:	push   rbp
   1400135ae:	mov    rbp,rsp
   1400135b1:	sub    rsp,0x70
   1400135b5:	movsxd rbx,ecx
   1400135b8:	lea    rcx,[rbp-0x20]
   1400135bc:	call   0x14000c724
   1400135c1:	mov    rcx,QWORD PTR [rbp-0x18]
   1400135c5:	cmp    ebx,0xff
   1400135cb:	jbe    0x14001365c
   1400135d1:	mov    eax,ebx
   1400135d3:	mov    BYTE PTR [rbp+0x11],bl
   1400135d6:	shr    eax,0x8
   1400135d9:	mov    BYTE PTR [rbp+0x10],al
   1400135dc:	movzx  eax,al
   1400135df:	test   BYTE PTR [rax+rcx*1+0x1d],0x4
   1400135e4:	jne    0x1400135fd
   1400135e6:	cmp    BYTE PTR [rbp-0x8],0x0
   1400135ea:	je     0x14001367c
   1400135f0:	mov    rax,QWORD PTR [rbp-0x10]
   1400135f4:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400135fb:	jmp    0x14001367c
   1400135fd:	mov    eax,DWORD PTR [rcx+0x4]
   140013600:	mov    DWORD PTR [rsp+0x40],0x1
   140013608:	mov    edx,0x2
   14001360d:	mov    DWORD PTR [rsp+0x38],eax
   140013611:	mov    DWORD PTR [rsp+0x30],edx
   140013615:	lea    rax,[rbp+0x20]
   140013619:	mov    QWORD PTR [rsp+0x28],rax
   14001361e:	mov    DWORD PTR [rsp+0x20],edx
   140013622:	mov    edx,DWORD PTR [rcx+0xc]
   140013625:	lea    rcx,[rbp-0x20]
   140013629:	lea    r9,[rbp+0x10]
   14001362d:	mov    r8d,0x100
   140013633:	call   0x1400186dc
   140013638:	test   eax,eax
   14001363a:	je     0x1400135e6
   14001363c:	movzx  eax,BYTE PTR [rbp+0x20]
   140013640:	movzx  ecx,BYTE PTR [rbp+0x21]
   140013644:	shl    eax,0x8
   140013647:	add    eax,ecx
   140013649:	cmp    BYTE PTR [rbp-0x8],0x0
   14001364d:	je     0x14001367e
   14001364f:	mov    rcx,QWORD PTR [rbp-0x10]
   140013653:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001365a:	jmp    0x14001367e
   14001365c:	test   BYTE PTR [rbx+rcx*1+0x1d],0x10
   140013661:	je     0x14001366b
   140013663:	movzx  ebx,BYTE PTR [rbx+rcx*1+0x11d]
   14001366b:	cmp    BYTE PTR [rbp-0x8],0x0
   14001366f:	je     0x14001367c
   140013671:	mov    rcx,QWORD PTR [rbp-0x10]
   140013675:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001367c:	mov    eax,ebx
   14001367e:	mov    rbx,QWORD PTR [rsp+0x88]
   140013686:	add    rsp,0x70
   14001368a:	pop    rbp
   14001368b:	ret    
   14001368c:	xor    edx,edx
   14001368e:	jmp    0x1400135a8
   140013693:	int3   
   140013694:	mov    QWORD PTR [rsp+0x8],rbx
   140013699:	mov    QWORD PTR [rsp+0x10],rsi
   14001369e:	push   rdi
   14001369f:	sub    rsp,0x40
   1400136a3:	mov    rbx,rcx
   1400136a6:	mov    rdi,rdx
   1400136a9:	lea    rcx,[rsp+0x20]
   1400136ae:	mov    rdx,r8
   1400136b1:	call   0x14000c724
   1400136b6:	mov    rdx,QWORD PTR [rsp+0x28]
   1400136bb:	xor    esi,esi
   1400136bd:	cmp    DWORD PTR [rdx+0x8],esi
   1400136c0:	jne    0x1400136d2
   1400136c2:	mov    rdx,rdi
   1400136c5:	mov    rcx,rbx
   1400136c8:	call   0x14000c688
   1400136cd:	jmp    0x140013763
   1400136d2:	test   rbx,rbx
   1400136d5:	jne    0x1400136fe
   1400136d7:	call   0x14000bdf0
   1400136dc:	mov    DWORD PTR [rax],0x16
   1400136e2:	call   0x14000d04c
   1400136e7:	cmp    BYTE PTR [rsp+0x38],sil
   1400136ec:	je     0x1400136fa
   1400136ee:	mov    rax,QWORD PTR [rsp+0x30]
   1400136f3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400136fa:	xor    eax,eax
   1400136fc:	jmp    0x140013776
   1400136fe:	test   rdi,rdi
   140013701:	je     0x1400136d7
   140013703:	jmp    0x140013754
   140013705:	mov    rcx,rdi
   140013708:	cmp    BYTE PTR [rdi],sil
   14001370b:	je     0x14001373a
   14001370d:	movzx  eax,BYTE PTR [rcx]
   140013710:	test   BYTE PTR [rax+rdx*1+0x1d],0x4
   140013715:	je     0x14001372e
   140013717:	cmp    al,BYTE PTR [rbx]
   140013719:	jne    0x140013723
   14001371b:	mov    al,BYTE PTR [rbx+0x1]
   14001371e:	cmp    BYTE PTR [rcx+0x1],al
   140013721:	je     0x14001373a
   140013723:	cmp    BYTE PTR [rcx+0x1],sil
   140013727:	je     0x14001373a
   140013729:	inc    rcx
   14001372c:	jmp    0x140013732
   14001372e:	cmp    al,BYTE PTR [rbx]
   140013730:	je     0x14001373a
   140013732:	inc    rcx
   140013735:	cmp    BYTE PTR [rcx],sil
   140013738:	jne    0x14001370d
   14001373a:	cmp    BYTE PTR [rcx],sil
   14001373d:	jne    0x140013759
   14001373f:	movzx  eax,BYTE PTR [rbx]
   140013742:	test   BYTE PTR [rax+rdx*1+0x1d],0x4
   140013747:	je     0x140013751
   140013749:	inc    rbx
   14001374c:	cmp    BYTE PTR [rbx],sil
   14001374f:	je     0x140013759
   140013751:	inc    rbx
   140013754:	cmp    BYTE PTR [rbx],sil
   140013757:	jne    0x140013705
   140013759:	mov    al,BYTE PTR [rbx]
   14001375b:	neg    al
   14001375d:	sbb    rax,rax
   140013760:	and    rax,rbx
   140013763:	cmp    BYTE PTR [rsp+0x38],sil
   140013768:	je     0x140013776
   14001376a:	mov    rcx,QWORD PTR [rsp+0x30]
   14001376f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140013776:	mov    rbx,QWORD PTR [rsp+0x50]
   14001377b:	mov    rsi,QWORD PTR [rsp+0x58]
   140013780:	add    rsp,0x40
   140013784:	pop    rdi
   140013785:	ret    
   140013786:	int3   
   140013787:	int3   
   140013788:	xor    r8d,r8d
   14001378b:	jmp    0x140013694
   140013790:	rex push rbx
   140013792:	sub    rsp,0x20
   140013796:	xor    ebx,ebx
   140013798:	mov    r10,r8
   14001379b:	test   r9,r9
   14001379e:	jne    0x1400137ae
   1400137a0:	test   rcx,rcx
   1400137a3:	jne    0x1400137b3
   1400137a5:	test   rdx,rdx
   1400137a8:	jne    0x1400137c8
   1400137aa:	xor    eax,eax
   1400137ac:	jmp    0x1400137db
   1400137ae:	test   rcx,rcx
   1400137b1:	je     0x1400137c8
   1400137b3:	test   rdx,rdx
   1400137b6:	je     0x1400137c8
   1400137b8:	test   r9,r9
   1400137bb:	jne    0x1400137c1
   1400137bd:	mov    BYTE PTR [rcx],bl
   1400137bf:	jmp    0x1400137aa
   1400137c1:	test   r8,r8
   1400137c4:	jne    0x1400137e1
   1400137c6:	mov    BYTE PTR [rcx],bl
   1400137c8:	call   0x14000bdf0
   1400137cd:	mov    ebx,0x16
   1400137d2:	mov    DWORD PTR [rax],ebx
   1400137d4:	call   0x14000d04c
   1400137d9:	mov    eax,ebx
   1400137db:	add    rsp,0x20
   1400137df:	pop    rbx
   1400137e0:	ret    
   1400137e1:	mov    r11,rcx
   1400137e4:	mov    r8,rdx
   1400137e7:	cmp    r9,0xffffffffffffffff
   1400137eb:	jne    0x140013805
   1400137ed:	sub    r11,r10
   1400137f0:	mov    al,BYTE PTR [r10]
   1400137f3:	mov    BYTE PTR [r11+r10*1],al
   1400137f7:	inc    r10
   1400137fa:	test   al,al
   1400137fc:	je     0x140013828
   1400137fe:	dec    r8
   140013801:	jne    0x1400137f0
   140013803:	jmp    0x140013828
   140013805:	sub    r10,rcx
   140013808:	mov    al,BYTE PTR [r10+r11*1]
   14001380c:	mov    BYTE PTR [r11],al
   14001380f:	inc    r11
   140013812:	test   al,al
   140013814:	je     0x140013820
   140013816:	dec    r8
   140013819:	je     0x140013820
   14001381b:	dec    r9
   14001381e:	jne    0x140013808
   140013820:	test   r9,r9
   140013823:	jne    0x140013828
   140013825:	mov    BYTE PTR [r11],bl
   140013828:	test   r8,r8
   14001382b:	jne    0x1400137aa
   140013831:	cmp    r9,0xffffffffffffffff
   140013835:	jne    0x140013841
   140013837:	mov    BYTE PTR [rcx+rdx*1-0x1],bl
   14001383b:	lea    eax,[r8+0x50]
   14001383f:	jmp    0x1400137db
   140013841:	mov    BYTE PTR [rcx],bl
   140013843:	call   0x14000bdf0
   140013848:	mov    ebx,0x22
   14001384d:	jmp    0x1400137d2
   14001384f:	int3   
   140013850:	mov    QWORD PTR [rsp+0x18],rbx
   140013855:	mov    DWORD PTR [rsp+0x8],ecx
   140013859:	push   rsi
   14001385a:	push   rdi
   14001385b:	push   r12
   14001385d:	sub    rsp,0x20
   140013861:	movsxd rdi,ecx
   140013864:	cmp    edi,0xfffffffe
   140013867:	jne    0x140013879
   140013869:	call   0x14000bdf0
   14001386e:	mov    DWORD PTR [rax],0x9
   140013874:	jmp    0x140013916
   140013879:	test   ecx,ecx
   14001387b:	js     0x140013906
   140013881:	cmp    edi,DWORD PTR [rip+0x121e5]        # 0x140025a6c
   140013887:	jae    0x140013906
   140013889:	mov    rbx,rdi
   14001388c:	mov    rsi,rdi
   14001388f:	sar    rsi,0x5
   140013893:	lea    r12,[rip+0x121e6]        # 0x140025a80
   14001389a:	and    ebx,0x1f
   14001389d:	imul   rbx,rbx,0x58
   1400138a1:	mov    rax,QWORD PTR [r12+rsi*8]
   1400138a5:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   1400138aa:	and    ecx,0x1
   1400138ad:	je     0x140013906
   1400138af:	mov    ecx,edi
   1400138b1:	call   0x140011784
   1400138b6:	nop
   1400138b7:	mov    rax,QWORD PTR [r12+rsi*8]
   1400138bb:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   1400138c0:	je     0x1400138ed
   1400138c2:	mov    ecx,edi
   1400138c4:	call   0x140011710
   1400138c9:	mov    rcx,rax
   1400138cc:	call   QWORD PTR [rip+0x69d6]        # 0x14001a2a8
   1400138d2:	test   eax,eax
   1400138d4:	jne    0x1400138e0
   1400138d6:	call   QWORD PTR [rip+0x6794]        # 0x14001a070
   1400138dc:	mov    ebx,eax
   1400138de:	jmp    0x1400138e2
   1400138e0:	xor    ebx,ebx
   1400138e2:	test   ebx,ebx
   1400138e4:	je     0x1400138fb
   1400138e6:	call   0x14000be10
   1400138eb:	mov    DWORD PTR [rax],ebx
   1400138ed:	call   0x14000bdf0
   1400138f2:	mov    DWORD PTR [rax],0x9
   1400138f8:	or     ebx,0xffffffff
   1400138fb:	mov    ecx,edi
   1400138fd:	call   0x14001182c
   140013902:	mov    eax,ebx
   140013904:	jmp    0x140013919
   140013906:	call   0x14000bdf0
   14001390b:	mov    DWORD PTR [rax],0x9
   140013911:	call   0x14000d04c
   140013916:	or     eax,0xffffffff
   140013919:	mov    rbx,QWORD PTR [rsp+0x50]
   14001391e:	add    rsp,0x20
   140013922:	pop    r12
   140013924:	pop    rdi
   140013925:	pop    rsi
   140013926:	ret    
   140013927:	int3   
   140013928:	mov    QWORD PTR [rsp+0x18],rbx
   14001392d:	mov    DWORD PTR [rsp+0x10],edx
   140013931:	push   rbp
   140013932:	push   rsi
   140013933:	push   rdi
   140013934:	push   r12
   140013936:	push   r13
   140013938:	push   r14
   14001393a:	push   r15
   14001393c:	sub    rsp,0x30
   140013940:	xor    ebp,ebp
   140013942:	mov    edi,edx
   140013944:	mov    r14,rcx
   140013947:	mov    ebx,ebp
   140013949:	test   rcx,rcx
   14001394c:	jne    0x140013963
   14001394e:	call   0x14000bdf0
   140013953:	mov    DWORD PTR [rax],0x16
   140013959:	call   0x14000d04c
   14001395e:	jmp    0x140013a5d
   140013963:	mov    r12,QWORD PTR [rcx]
   140013966:	test   r12,r12
   140013969:	je     0x140013a52
   14001396f:	mov    edx,0x3d
   140013974:	mov    rcx,r12
   140013977:	call   0x140018c30
   14001397c:	mov    r13,rax
   14001397f:	test   rax,rax
   140013982:	je     0x140013a52
   140013988:	cmp    r12,rax
   14001398b:	je     0x140013a52
   140013991:	cmp    WORD PTR [rax+0x2],bp
   140013995:	mov    rsi,QWORD PTR [rip+0x1100c]        # 0x1400249a8
   14001399c:	mov    r15d,ebp
   14001399f:	sete   r15b
   1400139a3:	cmp    rsi,QWORD PTR [rip+0x11006]        # 0x1400249b0
   1400139aa:	jne    0x140013a1b
   1400139ac:	xor    ecx,ecx
   1400139ae:	mov    rbp,rsi
   1400139b1:	mov    eax,ecx
   1400139b3:	test   rsi,rsi
   1400139b6:	jne    0x1400139c0
   1400139b8:	jmp    0x140013a14
   1400139ba:	add    rsi,0x8
   1400139be:	inc    eax
   1400139c0:	cmp    QWORD PTR [rsi],rcx
   1400139c3:	jne    0x1400139ba
   1400139c5:	inc    eax
   1400139c7:	mov    edx,0x8
   1400139cc:	movsxd rcx,eax
   1400139cf:	call   0x140010bd0
   1400139d4:	mov    rdi,rax
   1400139d7:	mov    rsi,rax
   1400139da:	test   rax,rax
   1400139dd:	jne    0x1400139e7
   1400139df:	lea    ecx,[rax+0x9]
   1400139e2:	call   0x140009c14
   1400139e7:	mov    rax,QWORD PTR [rbp+0x0]
   1400139eb:	test   rax,rax
   1400139ee:	je     0x140013a0b
   1400139f0:	sub    rbp,rdi
   1400139f3:	mov    rcx,rax
   1400139f6:	call   0x140018930
   1400139fb:	mov    QWORD PTR [rdi],rax
   1400139fe:	add    rdi,0x8
   140013a02:	mov    rax,QWORD PTR [rdi+rbp*1]
   140013a06:	test   rax,rax
   140013a09:	jne    0x1400139f3
   140013a0b:	xor    ebp,ebp
   140013a0d:	mov    QWORD PTR [rdi],rbp
   140013a10:	mov    edi,DWORD PTR [rsp+0x78]
   140013a14:	mov    QWORD PTR [rip+0x10f8d],rsi        # 0x1400249a8
   140013a1b:	test   rsi,rsi
   140013a1e:	jne    0x140013ac9
   140013a24:	mov    rax,QWORD PTR [rip+0x10f6d]        # 0x140024998
   140013a2b:	test   edi,edi
   140013a2d:	je     0x140013a78
   140013a2f:	test   rax,rax
   140013a32:	je     0x140013a78
   140013a34:	call   0x140018ba8
   140013a39:	mov    QWORD PTR [rip+0x10fa8],rax        # 0x1400249e8
   140013a40:	call   0x140018a70
   140013a45:	test   eax,eax
   140013a47:	jns    0x140013ac2
   140013a49:	call   0x1400189a8
   140013a4e:	test   eax,eax
   140013a50:	je     0x140013ac2
   140013a52:	call   0x14000bdf0
   140013a57:	mov    DWORD PTR [rax],0x16
   140013a5d:	or     eax,0xffffffff
   140013a60:	mov    rbx,QWORD PTR [rsp+0x80]
   140013a68:	add    rsp,0x30
   140013a6c:	pop    r15
   140013a6e:	pop    r14
   140013a70:	pop    r13
   140013a72:	pop    r12
   140013a74:	pop    rdi
   140013a75:	pop    rsi
   140013a76:	pop    rbp
   140013a77:	ret    
   140013a78:	test   r15d,r15d
   140013a7b:	je     0x140013a81
   140013a7d:	xor    eax,eax
   140013a7f:	jmp    0x140013a60
   140013a81:	test   rax,rax
   140013a84:	jne    0x140013aa9
   140013a86:	lea    ecx,[rax+0x8]
   140013a89:	call   0x140010b50
   140013a8e:	mov    QWORD PTR [rip+0x10f03],rax        # 0x140024998
   140013a95:	test   rax,rax
   140013a98:	je     0x140013a5d
   140013a9a:	mov    QWORD PTR [rax],rbp
   140013a9d:	mov    rsi,QWORD PTR [rip+0x10f04]        # 0x1400249a8
   140013aa4:	test   rsi,rsi
   140013aa7:	jne    0x140013ac9
   140013aa9:	mov    ecx,0x8
   140013aae:	call   0x140010b50
   140013ab3:	mov    QWORD PTR [rip+0x10eee],rax        # 0x1400249a8
   140013aba:	test   rax,rax
   140013abd:	je     0x140013a5d
   140013abf:	mov    QWORD PTR [rax],rbp
   140013ac2:	mov    rsi,QWORD PTR [rip+0x10edf]        # 0x1400249a8
   140013ac9:	mov    rbp,rsi
   140013acc:	test   rsi,rsi
   140013acf:	je     0x140013a5d
   140013ad1:	mov    rax,QWORD PTR [rsi]
   140013ad4:	sub    r13,r12
   140013ad7:	mov    rdi,rsi
   140013ada:	sar    r13,1
   140013add:	mov    QWORD PTR [rsp+0x70],r13
   140013ae2:	movsxd r13,r13d
   140013ae5:	test   rax,rax
   140013ae8:	je     0x140013b2f
   140013aea:	mov    esi,0x3d
   140013aef:	mov    r8,r13
   140013af2:	mov    rdx,rax
   140013af5:	mov    rcx,r12
   140013af8:	call   0x14001889c
   140013afd:	xor    ecx,ecx
   140013aff:	test   eax,eax
   140013b01:	jne    0x140013b1c
   140013b03:	mov    rax,QWORD PTR [rdi]
   140013b06:	cmp    WORD PTR [rax+r13*2],si
   140013b0b:	je     0x140013bb2
   140013b11:	cmp    WORD PTR [rax+r13*2],cx
   140013b16:	je     0x140013bb2
   140013b1c:	add    rdi,0x8
   140013b20:	mov    rax,QWORD PTR [rdi]
   140013b23:	test   rax,rax
   140013b26:	jne    0x140013aef
   140013b28:	mov    rsi,QWORD PTR [rip+0x10e79]        # 0x1400249a8
   140013b2f:	sub    rdi,rsi
   140013b32:	sar    rdi,0x3
   140013b36:	neg    edi
   140013b38:	xor    r13d,r13d
   140013b3b:	test   edi,edi
   140013b3d:	js     0x140013bcf
   140013b43:	cmp    QWORD PTR [rbp+0x0],r13
   140013b47:	je     0x140013bcf
   140013b4d:	movsxd rsi,edi
   140013b50:	mov    rcx,QWORD PTR [rbp+rsi*8+0x0]
   140013b55:	call   0x14000b490
   140013b5a:	test   r15d,r15d
   140013b5d:	je     0x140013bc5
   140013b5f:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   140013b64:	je     0x140013b83
   140013b66:	lea    rcx,[rbp+rsi*8+0x8]
   140013b6b:	mov    rax,QWORD PTR [rcx]
   140013b6e:	inc    edi
   140013b70:	add    rcx,0x8
   140013b74:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
   140013b79:	inc    rsi
   140013b7c:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   140013b81:	jne    0x140013b6b
   140013b83:	movsxd rdx,edi
   140013b86:	movabs rax,0x1fffffffffffffff
   140013b90:	cmp    rdx,rax
   140013b93:	jae    0x140013c2b
   140013b99:	mov    rcx,QWORD PTR [rip+0x10e08]        # 0x1400249a8
   140013ba0:	mov    r8d,0x8
   140013ba6:	call   0x140010cdc
   140013bab:	test   rax,rax
   140013bae:	je     0x140013c2b
   140013bb0:	jmp    0x140013c24
   140013bb2:	mov    rsi,QWORD PTR [rip+0x10def]        # 0x1400249a8
   140013bb9:	sub    rdi,rsi
   140013bbc:	sar    rdi,0x3
   140013bc0:	jmp    0x140013b38
   140013bc5:	mov    QWORD PTR [rbp+rsi*8+0x0],r12
   140013bca:	mov    QWORD PTR [r14],r13
   140013bcd:	jmp    0x140013c2b
   140013bcf:	test   r15d,r15d
   140013bd2:	jne    0x140013cd3
   140013bd8:	test   edi,edi
   140013bda:	jns    0x140013bde
   140013bdc:	neg    edi
   140013bde:	lea    eax,[rdi+0x2]
   140013be1:	cmp    eax,edi
   140013be3:	jl     0x140013a5d
   140013be9:	movsxd r8,eax
   140013bec:	movabs rax,0x1fffffffffffffff
   140013bf6:	cmp    r8,rax
   140013bf9:	jae    0x140013a5d
   140013bff:	mov    edx,0x8
   140013c04:	mov    rcx,rsi
   140013c07:	call   0x140010cdc
   140013c0c:	test   rax,rax
   140013c0f:	je     0x140013a5d
   140013c15:	movsxd rcx,edi
   140013c18:	mov    QWORD PTR [rax+rcx*8],r12
   140013c1c:	mov    QWORD PTR [rax+rcx*8+0x8],r13
   140013c21:	mov    QWORD PTR [r14],r13
   140013c24:	mov    QWORD PTR [rip+0x10d7d],rax        # 0x1400249a8
   140013c2b:	cmp    DWORD PTR [rsp+0x78],r13d
   140013c30:	je     0x140013ca7
   140013c32:	mov    rcx,r12
   140013c35:	call   0x140013ce4
   140013c3a:	mov    esi,0x2
   140013c3f:	lea    rcx,[rsi+rax*1]
   140013c43:	mov    edx,esi
   140013c45:	call   0x140010bd0
   140013c4a:	mov    rdi,rax
   140013c4d:	test   rax,rax
   140013c50:	je     0x140013ca7
   140013c52:	mov    rcx,r12
   140013c55:	call   0x140013ce4
   140013c5a:	mov    r8,r12
   140013c5d:	mov    rcx,rdi
   140013c60:	lea    rdx,[rsi+rax*1]
   140013c64:	call   0x14001522c
   140013c69:	test   eax,eax
   140013c6b:	jne    0x140013cbe
   140013c6d:	mov    rax,QWORD PTR [rsp+0x70]
   140013c72:	mov    rcx,rdi
   140013c75:	lea    rdx,[rdi+rax*2]
   140013c79:	mov    WORD PTR [rdx],r13w
   140013c7d:	add    rdx,rsi
   140013c80:	test   r15d,r15d
   140013c83:	cmovne rdx,r13
   140013c87:	call   QWORD PTR [rip+0x6623]        # 0x14001a2b0
   140013c8d:	test   eax,eax
   140013c8f:	jne    0x140013c9f
   140013c91:	or     ebx,0xffffffff
   140013c94:	call   0x14000bdf0
   140013c99:	mov    DWORD PTR [rax],0x2a
   140013c9f:	mov    rcx,rdi
   140013ca2:	call   0x14000b490
   140013ca7:	test   r15d,r15d
   140013caa:	je     0x140013cb7
   140013cac:	mov    rcx,r12
   140013caf:	call   0x14000b490
   140013cb4:	mov    QWORD PTR [r14],r13
   140013cb7:	mov    eax,ebx
   140013cb9:	jmp    0x140013a60
   140013cbe:	xor    r9d,r9d
   140013cc1:	xor    r8d,r8d
   140013cc4:	xor    edx,edx
   140013cc6:	xor    ecx,ecx
   140013cc8:	mov    QWORD PTR [rsp+0x20],r13
   140013ccd:	call   0x14000cfa8
   140013cd2:	int3   
   140013cd3:	mov    rcx,r12
   140013cd6:	call   0x14000b490
   140013cdb:	mov    QWORD PTR [r14],r13
   140013cde:	jmp    0x140013a7d
   140013ce3:	int3   
   140013ce4:	mov    rax,rcx
   140013ce7:	movzx  edx,WORD PTR [rax]
   140013cea:	add    rax,0x2
   140013cee:	test   dx,dx
   140013cf1:	jne    0x140013ce7
   140013cf3:	sub    rax,rcx
   140013cf6:	sar    rax,1
   140013cf9:	dec    rax
   140013cfc:	ret    
   140013cfd:	int3   
   140013cfe:	int3   
   140013cff:	int3   
   140013d00:	mov    QWORD PTR [rsp+0x18],rbx
   140013d05:	mov    DWORD PTR [rsp+0x10],edx
   140013d09:	push   rbp
   140013d0a:	push   rsi
   140013d0b:	push   rdi
   140013d0c:	push   r12
   140013d0e:	push   r13
   140013d10:	push   r14
   140013d12:	push   r15
   140013d14:	sub    rsp,0x30
   140013d18:	xor    r13d,r13d
   140013d1b:	mov    ebp,edx
   140013d1d:	mov    r14,rcx
   140013d20:	mov    ebx,r13d
   140013d23:	test   rcx,rcx
   140013d26:	jne    0x140013d3d
   140013d28:	call   0x14000bdf0
   140013d2d:	mov    DWORD PTR [rax],0x16
   140013d33:	call   0x14000d04c
   140013d38:	jmp    0x140013e29
   140013d3d:	mov    r12,QWORD PTR [rcx]
   140013d40:	test   r12,r12
   140013d43:	je     0x140013e1e
   140013d49:	mov    edx,0x3d
   140013d4e:	mov    rcx,r12
   140013d51:	call   0x140014188
   140013d56:	mov    rdi,rax
   140013d59:	mov    QWORD PTR [rsp+0x70],rax
   140013d5e:	test   rax,rax
   140013d61:	je     0x140013e1e
   140013d67:	cmp    r12,rax
   140013d6a:	je     0x140013e1e
   140013d70:	cmp    BYTE PTR [rax+0x1],r13b
   140013d74:	mov    rsi,QWORD PTR [rip+0x10c1d]        # 0x140024998
   140013d7b:	mov    r15d,r13d
   140013d7e:	sete   r15b
   140013d82:	cmp    rsi,QWORD PTR [rip+0x10c17]        # 0x1400249a0
   140013d89:	jne    0x140013dff
   140013d8b:	mov    rbp,rsi
   140013d8e:	mov    eax,r13d
   140013d91:	test   rsi,rsi
   140013d94:	jne    0x140013da1
   140013d96:	mov    rsi,r13
   140013d99:	jmp    0x140013df4
   140013d9b:	add    rsi,0x8
   140013d9f:	inc    eax
   140013da1:	cmp    QWORD PTR [rsi],r13
   140013da4:	jne    0x140013d9b
   140013da6:	inc    eax
   140013da8:	mov    edx,0x8
   140013dad:	movsxd rcx,eax
   140013db0:	call   0x140010bd0
   140013db5:	mov    rdi,rax
   140013db8:	mov    rsi,rax
   140013dbb:	test   rax,rax
   140013dbe:	jne    0x140013dc8
   140013dc0:	lea    ecx,[rax+0x9]
   140013dc3:	call   0x140009c14
   140013dc8:	mov    rax,QWORD PTR [rbp+0x0]
   140013dcc:	test   rax,rax
   140013dcf:	je     0x140013dec
   140013dd1:	sub    rbp,rdi
   140013dd4:	mov    rcx,rax
   140013dd7:	call   0x140018c50
   140013ddc:	mov    QWORD PTR [rdi],rax
   140013ddf:	add    rdi,0x8
   140013de3:	mov    rax,QWORD PTR [rdi+rbp*1]
   140013de7:	test   rax,rax
   140013dea:	jne    0x140013dd4
   140013dec:	mov    QWORD PTR [rdi],r13
   140013def:	mov    rdi,QWORD PTR [rsp+0x70]
   140013df4:	mov    ebp,DWORD PTR [rsp+0x78]
   140013df8:	mov    QWORD PTR [rip+0x10b99],rsi        # 0x140024998
   140013dff:	test   rsi,rsi
   140013e02:	jne    0x140013e8f
   140013e08:	test   ebp,ebp
   140013e0a:	je     0x140013e44
   140013e0c:	cmp    QWORD PTR [rip+0x10b95],r13        # 0x1400249a8
   140013e13:	je     0x140013e44
   140013e15:	call   0x14000e9ec
   140013e1a:	test   eax,eax
   140013e1c:	je     0x140013e88
   140013e1e:	call   0x14000bdf0
   140013e23:	mov    DWORD PTR [rax],0x16
   140013e29:	or     eax,0xffffffff
   140013e2c:	mov    rbx,QWORD PTR [rsp+0x80]
   140013e34:	add    rsp,0x30
   140013e38:	pop    r15
   140013e3a:	pop    r14
   140013e3c:	pop    r13
   140013e3e:	pop    r12
   140013e40:	pop    rdi
   140013e41:	pop    rsi
   140013e42:	pop    rbp
   140013e43:	ret    
   140013e44:	test   r15d,r15d
   140013e47:	je     0x140013e4d
   140013e49:	xor    eax,eax
   140013e4b:	jmp    0x140013e2c
   140013e4d:	mov    ecx,0x8
   140013e52:	call   0x140010b50
   140013e57:	mov    QWORD PTR [rip+0x10b3a],rax        # 0x140024998
   140013e5e:	test   rax,rax
   140013e61:	je     0x140013e29
   140013e63:	mov    QWORD PTR [rax],r13
   140013e66:	cmp    QWORD PTR [rip+0x10b3b],r13        # 0x1400249a8
   140013e6d:	jne    0x140013e88
   140013e6f:	mov    ecx,0x8
   140013e74:	call   0x140010b50
   140013e79:	mov    QWORD PTR [rip+0x10b28],rax        # 0x1400249a8
   140013e80:	test   rax,rax
   140013e83:	je     0x140013e29
   140013e85:	mov    QWORD PTR [rax],r13
   140013e88:	mov    rsi,QWORD PTR [rip+0x10b09]        # 0x140024998
   140013e8f:	mov    rbp,rsi
   140013e92:	test   rsi,rsi
   140013e95:	je     0x140013e29
   140013e97:	mov    rcx,QWORD PTR [rsi]
   140013e9a:	mov    eax,edi
   140013e9c:	mov    rdi,rsi
   140013e9f:	sub    eax,r12d
   140013ea2:	movsxd r13,eax
   140013ea5:	test   rcx,rcx
   140013ea8:	je     0x140013ee9
   140013eaa:	mov    rdx,rcx
   140013ead:	mov    r8,r13
   140013eb0:	mov    rcx,r12
   140013eb3:	call   0x14000e9e4
   140013eb8:	test   eax,eax
   140013eba:	jne    0x140013ed6
   140013ebc:	mov    rax,QWORD PTR [rdi]
   140013ebf:	cmp    BYTE PTR [r13+rax*1+0x0],0x3d
   140013ec5:	je     0x140013f6c
   140013ecb:	cmp    BYTE PTR [r13+rax*1+0x0],bl
   140013ed0:	je     0x140013f6c
   140013ed6:	add    rdi,0x8
   140013eda:	mov    rcx,QWORD PTR [rdi]
   140013edd:	test   rcx,rcx
   140013ee0:	jne    0x140013eaa
   140013ee2:	mov    rsi,QWORD PTR [rip+0x10aaf]        # 0x140024998
   140013ee9:	sub    rdi,rsi
   140013eec:	sar    rdi,0x3
   140013ef0:	neg    edi
   140013ef2:	xor    r13d,r13d
   140013ef5:	test   edi,edi
   140013ef7:	js     0x140013f89
   140013efd:	cmp    QWORD PTR [rbp+0x0],r13
   140013f01:	je     0x140013f89
   140013f07:	movsxd rsi,edi
   140013f0a:	mov    rcx,QWORD PTR [rbp+rsi*8+0x0]
   140013f0f:	call   0x14000b490
   140013f14:	test   r15d,r15d
   140013f17:	je     0x140013f7f
   140013f19:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   140013f1e:	je     0x140013f3d
   140013f20:	lea    rcx,[rbp+rsi*8+0x8]
   140013f25:	mov    rax,QWORD PTR [rcx]
   140013f28:	inc    edi
   140013f2a:	add    rcx,0x8
   140013f2e:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
   140013f33:	inc    rsi
   140013f36:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   140013f3b:	jne    0x140013f25
   140013f3d:	movsxd rdx,edi
   140013f40:	movabs rax,0x1fffffffffffffff
   140013f4a:	cmp    rdx,rax
   140013f4d:	jae    0x140013fe5
   140013f53:	mov    rcx,QWORD PTR [rip+0x10a3e]        # 0x140024998
   140013f5a:	mov    r8d,0x8
   140013f60:	call   0x140010cdc
   140013f65:	test   rax,rax
   140013f68:	je     0x140013fe5
   140013f6a:	jmp    0x140013fde
   140013f6c:	mov    rsi,QWORD PTR [rip+0x10a25]        # 0x140024998
   140013f73:	sub    rdi,rsi
   140013f76:	sar    rdi,0x3
   140013f7a:	jmp    0x140013ef2
   140013f7f:	mov    QWORD PTR [rbp+rsi*8+0x0],r12
   140013f84:	mov    QWORD PTR [r14],r13
   140013f87:	jmp    0x140013fe5
   140013f89:	test   r15d,r15d
   140013f8c:	jne    0x14001408c
   140013f92:	test   edi,edi
   140013f94:	jns    0x140013f98
   140013f96:	neg    edi
   140013f98:	lea    eax,[rdi+0x2]
   140013f9b:	cmp    eax,edi
   140013f9d:	jl     0x140013e29
   140013fa3:	movsxd r8,eax
   140013fa6:	movabs rax,0x1fffffffffffffff
   140013fb0:	cmp    r8,rax
   140013fb3:	jae    0x140013e29
   140013fb9:	mov    edx,0x8
   140013fbe:	mov    rcx,rsi
   140013fc1:	call   0x140010cdc
   140013fc6:	test   rax,rax
   140013fc9:	je     0x140013e29
   140013fcf:	movsxd rcx,edi
   140013fd2:	mov    QWORD PTR [rax+rcx*8],r12
   140013fd6:	mov    QWORD PTR [rax+rcx*8+0x8],r13
   140013fdb:	mov    QWORD PTR [r14],r13
   140013fde:	mov    QWORD PTR [rip+0x109b3],rax        # 0x140024998
   140013fe5:	cmp    DWORD PTR [rsp+0x78],r13d
   140013fea:	je     0x140014060
   140013fec:	mov    rcx,r12
   140013fef:	call   0x140009fd0
   140013ff4:	mov    edx,0x1
   140013ff9:	lea    rcx,[rax+0x2]
   140013ffd:	call   0x140010bd0
   140014002:	mov    rdi,rax
   140014005:	test   rax,rax
   140014008:	je     0x140014060
   14001400a:	mov    rcx,r12
   14001400d:	call   0x140009fd0
   140014012:	mov    r8,r12
   140014015:	mov    rcx,rdi
   140014018:	lea    rdx,[rax+0x2]
   14001401c:	call   0x14000eae0
   140014021:	test   eax,eax
   140014023:	jne    0x140014077
   140014025:	mov    rdx,rdi
   140014028:	mov    rcx,rdi
   14001402b:	sub    rdx,r12
   14001402e:	add    rdx,QWORD PTR [rsp+0x70]
   140014033:	mov    BYTE PTR [rdx],r13b
   140014036:	inc    rdx
   140014039:	test   r15d,r15d
   14001403c:	cmovne rdx,r13
   140014040:	call   QWORD PTR [rip+0x6272]        # 0x14001a2b8
   140014046:	test   eax,eax
   140014048:	jne    0x140014058
   14001404a:	or     ebx,0xffffffff
   14001404d:	call   0x14000bdf0
   140014052:	mov    DWORD PTR [rax],0x2a
   140014058:	mov    rcx,rdi
   14001405b:	call   0x14000b490
   140014060:	test   r15d,r15d
   140014063:	je     0x140014070
   140014065:	mov    rcx,r12
   140014068:	call   0x14000b490
   14001406d:	mov    QWORD PTR [r14],r13
   140014070:	mov    eax,ebx
   140014072:	jmp    0x140013e2c
   140014077:	xor    r9d,r9d
   14001407a:	xor    r8d,r8d
   14001407d:	xor    edx,edx
   14001407f:	xor    ecx,ecx
   140014081:	mov    QWORD PTR [rsp+0x20],r13
   140014086:	call   0x14000cfa8
   14001408b:	int3   
   14001408c:	mov    rcx,r12
   14001408f:	call   0x14000b490
   140014094:	mov    QWORD PTR [r14],r13
   140014097:	jmp    0x140013e49
   14001409c:	mov    QWORD PTR [rsp+0x8],rbx
   1400140a1:	mov    QWORD PTR [rsp+0x10],rsi
   1400140a6:	mov    QWORD PTR [rsp+0x18],rdi
   1400140ab:	push   rbp
   1400140ac:	mov    rbp,rsp
   1400140af:	sub    rsp,0x40
   1400140b3:	mov    rbx,rcx
   1400140b6:	mov    edi,edx
   1400140b8:	lea    rcx,[rbp-0x20]
   1400140bc:	mov    rdx,r8
   1400140bf:	call   0x14000c724
   1400140c4:	xor    esi,esi
   1400140c6:	test   rbx,rbx
   1400140c9:	jne    0x140014103
   1400140cb:	call   0x14000bdf0
   1400140d0:	mov    DWORD PTR [rax],0x16
   1400140d6:	call   0x14000d04c
   1400140db:	cmp    BYTE PTR [rbp-0x8],sil
   1400140df:	je     0x1400140ec
   1400140e1:	mov    rax,QWORD PTR [rbp-0x10]
   1400140e5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400140ec:	xor    eax,eax
   1400140ee:	mov    rbx,QWORD PTR [rsp+0x50]
   1400140f3:	mov    rsi,QWORD PTR [rsp+0x58]
   1400140f8:	mov    rdi,QWORD PTR [rsp+0x60]
   1400140fd:	add    rsp,0x40
   140014101:	pop    rbp
   140014102:	ret    
   140014103:	mov    rdx,QWORD PTR [rbp-0x18]
   140014107:	cmp    DWORD PTR [rdx+0x8],esi
   14001410a:	jne    0x140014129
   14001410c:	mov    edx,edi
   14001410e:	mov    rcx,rbx
   140014111:	call   0x14000c07c
   140014116:	cmp    BYTE PTR [rbp-0x8],sil
   14001411a:	je     0x1400140ee
   14001411c:	mov    rcx,QWORD PTR [rbp-0x10]
   140014120:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140014127:	jmp    0x1400140ee
   140014129:	movzx  ecx,BYTE PTR [rbx]
   14001412c:	test   cx,cx
   14001412f:	je     0x140014164
   140014131:	movzx  eax,cl
   140014134:	test   BYTE PTR [rax+rdx*1+0x1d],0x4
   140014139:	je     0x140014158
   14001413b:	inc    rbx
   14001413e:	cmp    BYTE PTR [rbx],sil
   140014141:	je     0x1400140db
   140014143:	movzx  eax,BYTE PTR [rbx]
   140014146:	movzx  ecx,cx
   140014149:	shl    ecx,0x8
   14001414c:	or     ecx,eax
   14001414e:	cmp    edi,ecx
   140014150:	jne    0x14001415f
   140014152:	lea    rax,[rbx-0x1]
   140014156:	jmp    0x140014116
   140014158:	movzx  eax,cx
   14001415b:	cmp    edi,eax
   14001415d:	je     0x140014164
   14001415f:	inc    rbx
   140014162:	jmp    0x140014129
   140014164:	movzx  eax,cx
   140014167:	cmp    edi,eax
   140014169:	jne    0x1400140db
   14001416f:	cmp    BYTE PTR [rbp-0x8],sil
   140014173:	je     0x140014180
   140014175:	mov    rax,QWORD PTR [rbp-0x10]
   140014179:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140014180:	mov    rax,rbx
   140014183:	jmp    0x1400140ee
   140014188:	xor    r8d,r8d
   14001418b:	jmp    0x14001409c
   140014190:	mov    QWORD PTR [rsp+0x8],rbx
   140014195:	mov    QWORD PTR [rsp+0x10],rbp
   14001419a:	mov    QWORD PTR [rsp+0x18],rsi
   14001419f:	push   rdi
   1400141a0:	sub    rsp,0x20
   1400141a4:	lea    rbx,[rcx+0x1c]
   1400141a8:	mov    rbp,rcx
   1400141ab:	mov    esi,0x101
   1400141b0:	mov    rcx,rbx
   1400141b3:	mov    r8d,esi
   1400141b6:	xor    edx,edx
   1400141b8:	call   0x14000a560
   1400141bd:	xor    r11d,r11d
   1400141c0:	lea    rdi,[rbp+0x10]
   1400141c4:	lea    ecx,[r11+0x6]
   1400141c8:	movzx  eax,r11w
   1400141cc:	mov    DWORD PTR [rbp+0xc],r11d
   1400141d0:	mov    QWORD PTR [rbp+0x4],r11
   1400141d4:	rep stos WORD PTR es:[rdi],ax
   1400141d7:	lea    rdi,[rip+0xf8a2]        # 0x140023a80
   1400141de:	sub    rdi,rbp
   1400141e1:	mov    al,BYTE PTR [rdi+rbx*1]
   1400141e4:	mov    BYTE PTR [rbx],al
   1400141e6:	inc    rbx
   1400141e9:	dec    rsi
   1400141ec:	jne    0x1400141e1
   1400141ee:	lea    rcx,[rbp+0x11d]
   1400141f5:	mov    edx,0x100
   1400141fa:	mov    al,BYTE PTR [rcx+rdi*1]
   1400141fd:	mov    BYTE PTR [rcx],al
   1400141ff:	inc    rcx
   140014202:	dec    rdx
   140014205:	jne    0x1400141fa
   140014207:	mov    rbx,QWORD PTR [rsp+0x30]
   14001420c:	mov    rbp,QWORD PTR [rsp+0x38]
   140014211:	mov    rsi,QWORD PTR [rsp+0x40]
   140014216:	add    rsp,0x20
   14001421a:	pop    rdi
   14001421b:	ret    
   14001421c:	mov    rax,rsp
   14001421f:	mov    QWORD PTR [rax+0x10],rbx
   140014223:	mov    QWORD PTR [rax+0x18],rsi
   140014227:	mov    QWORD PTR [rax+0x20],rdi
   14001422b:	push   rbp
   14001422c:	lea    rbp,[rax-0x488]
   140014233:	sub    rsp,0x580
   14001423a:	mov    rax,QWORD PTR [rip+0xee7f]        # 0x1400230c0
   140014241:	xor    rax,rsp
   140014244:	mov    QWORD PTR [rbp+0x470],rax
   14001424b:	mov    rsi,rcx
   14001424e:	mov    ecx,DWORD PTR [rcx+0x4]
   140014251:	lea    rdx,[rsp+0x50]
   140014256:	call   QWORD PTR [rip+0x6064]        # 0x14001a2c0
   14001425c:	mov    ebx,0x100
   140014261:	test   eax,eax
   140014263:	je     0x1400143a5
   140014269:	xor    eax,eax
   14001426b:	lea    rcx,[rsp+0x70]
   140014270:	mov    BYTE PTR [rcx],al
   140014272:	inc    eax
   140014274:	inc    rcx
   140014277:	cmp    eax,ebx
   140014279:	jb     0x140014270
   14001427b:	mov    al,BYTE PTR [rsp+0x56]
   14001427f:	mov    BYTE PTR [rsp+0x70],0x20
   140014284:	lea    rdi,[rsp+0x56]
   140014289:	jmp    0x1400142b4
   14001428b:	movzx  edx,BYTE PTR [rdi+0x1]
   14001428f:	movzx  r8d,al
   140014293:	cmp    r8d,edx
   140014296:	ja     0x1400142ae
   140014298:	sub    edx,r8d
   14001429b:	mov    eax,r8d
   14001429e:	lea    rcx,[rsp+r8*1+0x70]
   1400142a3:	lea    r8d,[rdx+0x1]
   1400142a7:	mov    dl,0x20
   1400142a9:	call   0x14000a560
   1400142ae:	add    rdi,0x2
   1400142b2:	mov    al,BYTE PTR [rdi]
   1400142b4:	test   al,al
   1400142b6:	jne    0x14001428b
   1400142b8:	mov    eax,DWORD PTR [rsi+0xc]
   1400142bb:	and    DWORD PTR [rsp+0x38],0x0
   1400142c0:	lea    r8,[rsp+0x70]
   1400142c5:	mov    DWORD PTR [rsp+0x30],eax
   1400142c9:	mov    eax,DWORD PTR [rsi+0x4]
   1400142cc:	mov    r9d,ebx
   1400142cf:	mov    DWORD PTR [rsp+0x28],eax
   1400142d3:	lea    rax,[rbp+0x270]
   1400142da:	mov    edx,0x1
   1400142df:	xor    ecx,ecx
   1400142e1:	mov    QWORD PTR [rsp+0x20],rax
   1400142e6:	call   0x140018e20
   1400142eb:	and    DWORD PTR [rsp+0x40],0x0
   1400142f0:	mov    eax,DWORD PTR [rsi+0x4]
   1400142f3:	mov    edx,DWORD PTR [rsi+0xc]
   1400142f6:	mov    DWORD PTR [rsp+0x38],eax
   1400142fa:	lea    rax,[rbp+0x70]
   1400142fe:	mov    DWORD PTR [rsp+0x30],ebx
   140014302:	mov    QWORD PTR [rsp+0x28],rax
   140014307:	lea    r9,[rsp+0x70]
   14001430c:	mov    r8d,ebx
   14001430f:	xor    ecx,ecx
   140014311:	mov    DWORD PTR [rsp+0x20],ebx
   140014315:	call   0x1400186dc
   14001431a:	and    DWORD PTR [rsp+0x40],0x0
   14001431f:	mov    eax,DWORD PTR [rsi+0x4]
   140014322:	mov    edx,DWORD PTR [rsi+0xc]
   140014325:	mov    DWORD PTR [rsp+0x38],eax
   140014329:	lea    rax,[rbp+0x170]
   140014330:	mov    DWORD PTR [rsp+0x30],ebx
   140014334:	mov    QWORD PTR [rsp+0x28],rax
   140014339:	lea    r9,[rsp+0x70]
   14001433e:	mov    r8d,0x200
   140014344:	xor    ecx,ecx
   140014346:	mov    DWORD PTR [rsp+0x20],ebx
   14001434a:	call   0x1400186dc
   14001434f:	lea    rdx,[rbp+0x70]
   140014353:	lea    r8,[rbp+0x170]
   14001435a:	sub    rdx,rsi
   14001435d:	lea    r11,[rbp+0x270]
   140014364:	lea    rcx,[rsi+0x1d]
   140014368:	sub    r8,rsi
   14001436b:	test   BYTE PTR [r11],0x1
   14001436f:	je     0x14001437a
   140014371:	or     BYTE PTR [rcx],0x10
   140014374:	mov    al,BYTE PTR [rdx+rcx*1-0x1d]
   140014378:	jmp    0x140014388
   14001437a:	test   BYTE PTR [r11],0x2
   14001437e:	je     0x140014390
   140014380:	or     BYTE PTR [rcx],0x20
   140014383:	mov    al,BYTE PTR [r8+rcx*1-0x1d]
   140014388:	mov    BYTE PTR [rcx+0x100],al
   14001438e:	jmp    0x140014397
   140014390:	mov    BYTE PTR [rcx+0x100],0x0
   140014397:	inc    rcx
   14001439a:	add    r11,0x2
   14001439e:	dec    rbx
   1400143a1:	jne    0x14001436b
   1400143a3:	jmp    0x1400143e4
   1400143a5:	xor    edx,edx
   1400143a7:	lea    rcx,[rsi+0x1d]
   1400143ab:	lea    r8d,[rdx-0x61]
   1400143af:	lea    eax,[r8+0x20]
   1400143b3:	cmp    eax,0x19
   1400143b6:	ja     0x1400143c0
   1400143b8:	or     BYTE PTR [rcx],0x10
   1400143bb:	lea    eax,[rdx+0x20]
   1400143be:	jmp    0x1400143cc
   1400143c0:	cmp    r8d,0x19
   1400143c4:	ja     0x1400143d4
   1400143c6:	or     BYTE PTR [rcx],0x20
   1400143c9:	lea    eax,[rdx-0x20]
   1400143cc:	mov    BYTE PTR [rcx+0x100],al
   1400143d2:	jmp    0x1400143db
   1400143d4:	mov    BYTE PTR [rcx+0x100],0x0
   1400143db:	inc    edx
   1400143dd:	inc    rcx
   1400143e0:	cmp    edx,ebx
   1400143e2:	jb     0x1400143ab
   1400143e4:	mov    rcx,QWORD PTR [rbp+0x470]
   1400143eb:	xor    rcx,rsp
   1400143ee:	call   0x14000a850
   1400143f3:	lea    r11,[rsp+0x580]
   1400143fb:	mov    rbx,QWORD PTR [r11+0x18]
   1400143ff:	mov    rsi,QWORD PTR [r11+0x20]
   140014403:	mov    rdi,QWORD PTR [r11+0x28]
   140014407:	mov    rsp,r11
   14001440a:	pop    rbp
   14001440b:	ret    
   14001440c:	mov    QWORD PTR [rsp+0x10],rbx
   140014411:	push   rdi
   140014412:	sub    rsp,0x20
   140014416:	call   0x14000d234
   14001441b:	mov    rdi,rax
   14001441e:	mov    ecx,DWORD PTR [rax+0xc8]
   140014424:	test   DWORD PTR [rip+0xfb86],ecx        # 0x140023fb0
   14001442a:	je     0x14001443f
   14001442c:	cmp    QWORD PTR [rax+0xc0],0x0
   140014434:	je     0x14001443f
   140014436:	mov    rbx,QWORD PTR [rax+0xb8]
   14001443d:	jmp    0x1400144ab
   14001443f:	mov    ecx,0xd
   140014444:	call   0x14000cb58
   140014449:	nop
   14001444a:	mov    rbx,QWORD PTR [rdi+0xb8]
   140014451:	mov    QWORD PTR [rsp+0x30],rbx
   140014456:	cmp    rbx,QWORD PTR [rip+0xfa53]        # 0x140023eb0
   14001445d:	je     0x1400144a1
   14001445f:	test   rbx,rbx
   140014462:	je     0x14001447f
   140014464:	lock dec DWORD PTR [rbx]
   140014467:	jne    0x14001447f
   140014469:	lea    rax,[rip+0xf610]        # 0x140023a80
   140014470:	mov    rcx,QWORD PTR [rsp+0x30]
   140014475:	cmp    rcx,rax
   140014478:	je     0x14001447f
   14001447a:	call   0x14000b490
   14001447f:	mov    rax,QWORD PTR [rip+0xfa2a]        # 0x140023eb0
   140014486:	mov    QWORD PTR [rdi+0xb8],rax
   14001448d:	mov    rax,QWORD PTR [rip+0xfa1c]        # 0x140023eb0
   140014494:	mov    QWORD PTR [rsp+0x30],rax
   140014499:	lock inc DWORD PTR [rax]
   14001449c:	mov    rbx,QWORD PTR [rsp+0x30]
   1400144a1:	mov    ecx,0xd
   1400144a6:	call   0x14000ca58
   1400144ab:	test   rbx,rbx
   1400144ae:	jne    0x1400144b8
   1400144b0:	lea    ecx,[rbx+0x20]
   1400144b3:	call   0x140009c14
   1400144b8:	mov    rax,rbx
   1400144bb:	mov    rbx,QWORD PTR [rsp+0x38]
   1400144c0:	add    rsp,0x20
   1400144c4:	pop    rdi
   1400144c5:	ret    
   1400144c6:	int3   
   1400144c7:	int3   
   1400144c8:	rex push rbx
   1400144ca:	sub    rsp,0x40
   1400144ce:	mov    ebx,ecx
   1400144d0:	lea    rcx,[rsp+0x20]
   1400144d5:	xor    edx,edx
   1400144d7:	call   0x14000c724
   1400144dc:	and    DWORD PTR [rip+0x11465],0x0        # 0x140025948
   1400144e3:	cmp    ebx,0xfffffffe
   1400144e6:	jne    0x14001450d
   1400144e8:	mov    DWORD PTR [rip+0x11456],0x1        # 0x140025948
   1400144f2:	call   QWORD PTR [rip+0x5dd8]        # 0x14001a2d0
   1400144f8:	cmp    BYTE PTR [rsp+0x38],0x0
   1400144fd:	je     0x140014552
   1400144ff:	mov    rcx,QWORD PTR [rsp+0x30]
   140014504:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001450b:	jmp    0x140014552
   14001450d:	cmp    ebx,0xfffffffd
   140014510:	jne    0x140014524
   140014512:	mov    DWORD PTR [rip+0x1142c],0x1        # 0x140025948
   14001451c:	call   QWORD PTR [rip+0x5da6]        # 0x14001a2c8
   140014522:	jmp    0x1400144f8
   140014524:	cmp    ebx,0xfffffffc
   140014527:	jne    0x14001453d
   140014529:	mov    rax,QWORD PTR [rsp+0x20]
   14001452e:	mov    DWORD PTR [rip+0x11410],0x1        # 0x140025948
   140014538:	mov    eax,DWORD PTR [rax+0x4]
   14001453b:	jmp    0x1400144f8
   14001453d:	cmp    BYTE PTR [rsp+0x38],0x0
   140014542:	je     0x140014550
   140014544:	mov    rax,QWORD PTR [rsp+0x30]
   140014549:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140014550:	mov    eax,ebx
   140014552:	add    rsp,0x40
   140014556:	pop    rbx
   140014557:	ret    
   140014558:	mov    QWORD PTR [rsp+0x18],rbx
   14001455d:	push   rbp
   14001455e:	push   rsi
   14001455f:	push   rdi
   140014560:	push   r12
   140014562:	push   r13
   140014564:	sub    rsp,0x40
   140014568:	mov    rax,QWORD PTR [rip+0xeb51]        # 0x1400230c0
   14001456f:	xor    rax,rsp
   140014572:	mov    QWORD PTR [rsp+0x38],rax
   140014577:	mov    rsi,rdx
   14001457a:	call   0x1400144c8
   14001457f:	xor    ebx,ebx
   140014581:	mov    edi,eax
   140014583:	test   eax,eax
   140014585:	jne    0x140014594
   140014587:	mov    rcx,rsi
   14001458a:	call   0x140014190
   14001458f:	jmp    0x1400147aa
   140014594:	lea    r13,[rip+0xf925]        # 0x140023ec0
   14001459b:	mov    ecx,ebx
   14001459d:	mov    rbp,rbx
   1400145a0:	mov    rax,r13
   1400145a3:	mov    r12d,0x1
   1400145a9:	cmp    DWORD PTR [rax],edi
   1400145ab:	je     0x1400146d7
   1400145b1:	add    ecx,r12d
   1400145b4:	add    rbp,r12
   1400145b7:	add    rax,0x30
   1400145bb:	cmp    ecx,0x5
   1400145be:	jb     0x1400145a9
   1400145c0:	cmp    edi,0xfde8
   1400145c6:	je     0x1400146cf
   1400145cc:	cmp    edi,0xfde9
   1400145d2:	je     0x1400146cf
   1400145d8:	movzx  ecx,di
   1400145db:	call   QWORD PTR [rip+0x5cf7]        # 0x14001a2d8
   1400145e1:	test   eax,eax
   1400145e3:	je     0x1400146cf
   1400145e9:	lea    rdx,[rsp+0x20]
   1400145ee:	mov    ecx,edi
   1400145f0:	call   QWORD PTR [rip+0x5cca]        # 0x14001a2c0
   1400145f6:	test   eax,eax
   1400145f8:	je     0x1400146c3
   1400145fe:	lea    rcx,[rsi+0x1c]
   140014602:	xor    edx,edx
   140014604:	mov    r8d,0x101
   14001460a:	call   0x14000a560
   14001460f:	mov    DWORD PTR [rsi+0x4],edi
   140014612:	mov    DWORD PTR [rsi+0xc],ebx
   140014615:	cmp    DWORD PTR [rsp+0x20],r12d
   14001461a:	jbe    0x1400146ac
   140014620:	lea    rax,[rsp+0x26]
   140014625:	cmp    BYTE PTR [rsp+0x26],bl
   140014629:	je     0x140014658
   14001462b:	cmp    BYTE PTR [rax+0x1],bl
   14001462e:	je     0x140014658
   140014630:	movzx  edi,BYTE PTR [rax]
   140014633:	movzx  ecx,BYTE PTR [rax+0x1]
   140014637:	cmp    edi,ecx
   140014639:	ja     0x140014650
   14001463b:	sub    ecx,edi
   14001463d:	lea    rdx,[rdi+rsi*1+0x1d]
   140014642:	add    ecx,r12d
   140014645:	or     BYTE PTR [rdx],0x4
   140014648:	add    rdx,r12
   14001464b:	sub    rcx,r12
   14001464e:	jne    0x140014645
   140014650:	add    rax,0x2
   140014654:	cmp    BYTE PTR [rax],bl
   140014656:	jne    0x14001462b
   140014658:	lea    rax,[rsi+0x1e]
   14001465c:	mov    ecx,0xfe
   140014661:	or     BYTE PTR [rax],0x8
   140014664:	add    rax,r12
   140014667:	sub    rcx,r12
   14001466a:	jne    0x140014661
   14001466c:	mov    ecx,DWORD PTR [rsi+0x4]
   14001466f:	sub    ecx,0x3a4
   140014675:	je     0x14001469e
   140014677:	sub    ecx,0x4
   14001467a:	je     0x140014697
   14001467c:	sub    ecx,0xd
   14001467f:	je     0x140014690
   140014681:	dec    ecx
   140014683:	je     0x140014689
   140014685:	mov    eax,ebx
   140014687:	jmp    0x1400146a3
   140014689:	mov    eax,0x404
   14001468e:	jmp    0x1400146a3
   140014690:	mov    eax,0x412
   140014695:	jmp    0x1400146a3
   140014697:	mov    eax,0x804
   14001469c:	jmp    0x1400146a3
   14001469e:	mov    eax,0x411
   1400146a3:	mov    DWORD PTR [rsi+0xc],eax
   1400146a6:	mov    DWORD PTR [rsi+0x8],r12d
   1400146aa:	jmp    0x1400146af
   1400146ac:	mov    DWORD PTR [rsi+0x8],ebx
   1400146af:	lea    rdi,[rsi+0x10]
   1400146b3:	movzx  eax,bx
   1400146b6:	mov    ecx,0x6
   1400146bb:	rep stos WORD PTR es:[rdi],ax
   1400146be:	jmp    0x1400147a2
   1400146c3:	cmp    DWORD PTR [rip+0x1127f],ebx        # 0x140025948
   1400146c9:	jne    0x140014587
   1400146cf:	or     eax,0xffffffff
   1400146d2:	jmp    0x1400147ac
   1400146d7:	lea    rcx,[rsi+0x1c]
   1400146db:	xor    edx,edx
   1400146dd:	mov    r8d,0x101
   1400146e3:	call   0x14000a560
   1400146e8:	lea    r10,[rbp+rbp*2+0x0]
   1400146ed:	lea    r11,[rip+0xf7c4]        # 0x140023eb8
   1400146f4:	shl    r10,0x4
   1400146f8:	mov    ebp,0x4
   1400146fd:	lea    r8,[r10+r13*1+0x10]
   140014702:	mov    rcx,r8
   140014705:	cmp    BYTE PTR [r8],bl
   140014708:	je     0x14001473b
   14001470a:	cmp    BYTE PTR [rcx+0x1],bl
   14001470d:	je     0x14001473b
   14001470f:	movzx  edx,BYTE PTR [rcx]
   140014712:	movzx  eax,BYTE PTR [rcx+0x1]
   140014716:	cmp    edx,eax
   140014718:	ja     0x140014733
   14001471a:	lea    r9,[rdx+rsi*1+0x1d]
   14001471f:	mov    al,BYTE PTR [r11]
   140014722:	add    edx,r12d
   140014725:	or     BYTE PTR [r9],al
   140014728:	movzx  eax,BYTE PTR [rcx+0x1]
   14001472c:	add    r9,r12
   14001472f:	cmp    edx,eax
   140014731:	jbe    0x14001471f
   140014733:	add    rcx,0x2
   140014737:	cmp    BYTE PTR [rcx],bl
   140014739:	jne    0x14001470a
   14001473b:	add    r8,0x8
   14001473f:	add    r11,r12
   140014742:	sub    rbp,r12
   140014745:	jne    0x140014702
   140014747:	mov    DWORD PTR [rsi+0x4],edi
   14001474a:	sub    edi,0x3a4
   140014750:	mov    DWORD PTR [rsi+0x8],r12d
   140014754:	je     0x140014779
   140014756:	sub    edi,0x4
   140014759:	je     0x140014772
   14001475b:	sub    edi,0xd
   14001475e:	je     0x14001476b
   140014760:	dec    edi
   140014762:	jne    0x14001477e
   140014764:	mov    ebx,0x404
   140014769:	jmp    0x14001477e
   14001476b:	mov    ebx,0x412
   140014770:	jmp    0x14001477e
   140014772:	mov    ebx,0x804
   140014777:	jmp    0x14001477e
   140014779:	mov    ebx,0x411
   14001477e:	sub    r10,rsi
   140014781:	mov    DWORD PTR [rsi+0xc],ebx
   140014784:	lea    rcx,[rsi+0x10]
   140014788:	lea    rdi,[r10+r13*1-0xc]
   14001478d:	mov    edx,0x6
   140014792:	movzx  eax,WORD PTR [rdi+rcx*1]
   140014796:	mov    WORD PTR [rcx],ax
   140014799:	add    rcx,0x2
   14001479d:	sub    rdx,r12
   1400147a0:	jne    0x140014792
   1400147a2:	mov    rcx,rsi
   1400147a5:	call   0x14001421c
   1400147aa:	xor    eax,eax
   1400147ac:	mov    rcx,QWORD PTR [rsp+0x38]
   1400147b1:	xor    rcx,rsp
   1400147b4:	call   0x14000a850
   1400147b9:	mov    rbx,QWORD PTR [rsp+0x80]
   1400147c1:	add    rsp,0x40
   1400147c5:	pop    r13
   1400147c7:	pop    r12
   1400147c9:	pop    rdi
   1400147ca:	pop    rsi
   1400147cb:	pop    rbp
   1400147cc:	ret    
   1400147cd:	int3   
   1400147ce:	int3   
   1400147cf:	int3   
   1400147d0:	mov    rax,rsp
   1400147d3:	mov    QWORD PTR [rax+0x8],rbx
   1400147d7:	mov    QWORD PTR [rax+0x10],rsi
   1400147db:	mov    QWORD PTR [rax+0x18],rdi
   1400147df:	mov    QWORD PTR [rax+0x20],r12
   1400147e3:	push   r13
   1400147e5:	sub    rsp,0x30
   1400147e9:	mov    edi,ecx
   1400147eb:	or     r13d,0xffffffff
   1400147ef:	call   0x14000d234
   1400147f4:	mov    rsi,rax
   1400147f7:	call   0x14001440c
   1400147fc:	mov    rbx,QWORD PTR [rsi+0xb8]
   140014803:	mov    ecx,edi
   140014805:	call   0x1400144c8
   14001480a:	mov    r12d,eax
   14001480d:	cmp    eax,DWORD PTR [rbx+0x4]
   140014810:	je     0x14001498b
   140014816:	mov    ecx,0x220
   14001481b:	call   0x140010b50
   140014820:	mov    rbx,rax
   140014823:	xor    edi,edi
   140014825:	test   rax,rax
   140014828:	je     0x140014990
   14001482e:	mov    rdx,QWORD PTR [rsi+0xb8]
   140014835:	mov    rcx,rax
   140014838:	mov    r8d,0x220
   14001483e:	call   0x14000a170
   140014843:	mov    DWORD PTR [rbx],edi
   140014845:	mov    rdx,rbx
   140014848:	mov    ecx,r12d
   14001484b:	call   0x140014558
   140014850:	mov    r13d,eax
   140014853:	test   eax,eax
   140014855:	jne    0x140014965
   14001485b:	mov    rcx,QWORD PTR [rsi+0xb8]
   140014862:	lea    r12,[rip+0xf217]        # 0x140023a80
   140014869:	lock dec DWORD PTR [rcx]
   14001486c:	jne    0x14001487f
   14001486e:	mov    rcx,QWORD PTR [rsi+0xb8]
   140014875:	cmp    rcx,r12
   140014878:	je     0x14001487f
   14001487a:	call   0x14000b490
   14001487f:	mov    QWORD PTR [rsi+0xb8],rbx
   140014886:	lock inc DWORD PTR [rbx]
   140014889:	test   BYTE PTR [rsi+0xc8],0x2
   140014890:	jne    0x140014990
   140014896:	test   BYTE PTR [rip+0xf713],0x1        # 0x140023fb0
   14001489d:	jne    0x140014990
   1400148a3:	mov    esi,0xd
   1400148a8:	mov    ecx,esi
   1400148aa:	call   0x14000cb58
   1400148af:	nop
   1400148b0:	mov    eax,DWORD PTR [rbx+0x4]
   1400148b3:	mov    DWORD PTR [rip+0x110a3],eax        # 0x14002595c
   1400148b9:	mov    eax,DWORD PTR [rbx+0x8]
   1400148bc:	mov    DWORD PTR [rip+0x1109e],eax        # 0x140025960
   1400148c2:	mov    eax,DWORD PTR [rbx+0xc]
   1400148c5:	mov    DWORD PTR [rip+0x11099],eax        # 0x140025964
   1400148cb:	mov    edx,edi
   1400148cd:	lea    r8,[rip+0xfffffffffffeb72c]        # 0x140000000
   1400148d4:	mov    DWORD PTR [rsp+0x20],edx
   1400148d8:	cmp    edx,0x5
   1400148db:	jge    0x1400148f2
   1400148dd:	movsxd rcx,edx
   1400148e0:	movzx  eax,WORD PTR [rbx+rcx*2+0x10]
   1400148e5:	mov    WORD PTR [r8+rcx*2+0x25950],ax
   1400148ee:	inc    edx
   1400148f0:	jmp    0x1400148d4
   1400148f2:	mov    edx,edi
   1400148f4:	mov    DWORD PTR [rsp+0x20],edx
   1400148f8:	cmp    edx,0x101
   1400148fe:	jge    0x140014913
   140014900:	movsxd rcx,edx
   140014903:	mov    al,BYTE PTR [rcx+rbx*1+0x1c]
   140014907:	mov    BYTE PTR [rcx+r8*1+0x23ca0],al
   14001490f:	inc    edx
   140014911:	jmp    0x1400148f4
   140014913:	mov    DWORD PTR [rsp+0x20],edi
   140014917:	cmp    edi,0x100
   14001491d:	jge    0x140014935
   14001491f:	movsxd rcx,edi
   140014922:	mov    al,BYTE PTR [rcx+rbx*1+0x11d]
   140014929:	mov    BYTE PTR [rcx+r8*1+0x23db0],al
   140014931:	inc    edi
   140014933:	jmp    0x140014913
   140014935:	mov    rax,QWORD PTR [rip+0xf574]        # 0x140023eb0
   14001493c:	lock dec DWORD PTR [rax]
   14001493f:	jne    0x140014952
   140014941:	mov    rcx,QWORD PTR [rip+0xf568]        # 0x140023eb0
   140014948:	cmp    rcx,r12
   14001494b:	je     0x140014952
   14001494d:	call   0x14000b490
   140014952:	mov    QWORD PTR [rip+0xf557],rbx        # 0x140023eb0
   140014959:	lock inc DWORD PTR [rbx]
   14001495c:	mov    ecx,esi
   14001495e:	call   0x14000ca58
   140014963:	jmp    0x140014990
   140014965:	cmp    eax,0xffffffff
   140014968:	jne    0x140014990
   14001496a:	lea    r12,[rip+0xf10f]        # 0x140023a80
   140014971:	cmp    rbx,r12
   140014974:	je     0x14001497e
   140014976:	mov    rcx,rbx
   140014979:	call   0x14000b490
   14001497e:	call   0x14000bdf0
   140014983:	mov    DWORD PTR [rax],0x16
   140014989:	jmp    0x140014990
   14001498b:	xor    edi,edi
   14001498d:	mov    r13d,edi
   140014990:	mov    eax,r13d
   140014993:	mov    rbx,QWORD PTR [rsp+0x40]
   140014998:	mov    rsi,QWORD PTR [rsp+0x48]
   14001499d:	mov    rdi,QWORD PTR [rsp+0x50]
   1400149a2:	mov    r12,QWORD PTR [rsp+0x58]
   1400149a7:	add    rsp,0x30
   1400149ab:	pop    r13
   1400149ad:	ret    
   1400149ae:	int3   
   1400149af:	int3   
   1400149b0:	sub    rsp,0x28
   1400149b4:	cmp    DWORD PTR [rip+0x1230d],0x0        # 0x140026cc8
   1400149bb:	jne    0x1400149d1
   1400149bd:	mov    ecx,0xfffffffd
   1400149c2:	call   0x1400147d0
   1400149c7:	mov    DWORD PTR [rip+0x122f7],0x1        # 0x140026cc8
   1400149d1:	xor    eax,eax
   1400149d3:	add    rsp,0x28
   1400149d7:	ret    
   1400149d8:	lock inc DWORD PTR [rcx]
   1400149db:	mov    rax,QWORD PTR [rcx+0x110]
   1400149e2:	test   rax,rax
   1400149e5:	je     0x1400149ea
   1400149e7:	lock inc DWORD PTR [rax]
   1400149ea:	mov    rax,QWORD PTR [rcx+0x120]
   1400149f1:	test   rax,rax
   1400149f4:	je     0x1400149f9
   1400149f6:	lock inc DWORD PTR [rax]
   1400149f9:	mov    rax,QWORD PTR [rcx+0x118]
   140014a00:	test   rax,rax
   140014a03:	je     0x140014a08
   140014a05:	lock inc DWORD PTR [rax]
   140014a08:	mov    rax,QWORD PTR [rcx+0x130]
   140014a0f:	test   rax,rax
   140014a12:	je     0x140014a17
   140014a14:	lock inc DWORD PTR [rax]
   140014a17:	lea    rax,[rcx+0x58]
   140014a1b:	mov    r8d,0x6
   140014a21:	lea    rdx,[rip+0xf58c]        # 0x140023fb4
   140014a28:	cmp    QWORD PTR [rax-0x10],rdx
   140014a2c:	je     0x140014a39
   140014a2e:	mov    rdx,QWORD PTR [rax]
   140014a31:	test   rdx,rdx
   140014a34:	je     0x140014a39
   140014a36:	lock inc DWORD PTR [rdx]
   140014a39:	cmp    QWORD PTR [rax-0x8],0x0
   140014a3e:	je     0x140014a4c
   140014a40:	mov    rdx,QWORD PTR [rax+0x8]
   140014a44:	test   rdx,rdx
   140014a47:	je     0x140014a4c
   140014a49:	lock inc DWORD PTR [rdx]
   140014a4c:	add    rax,0x20
   140014a50:	dec    r8
   140014a53:	jne    0x140014a21
   140014a55:	mov    rax,QWORD PTR [rcx+0x158]
   140014a5c:	lock inc DWORD PTR [rax+0x160]
   140014a63:	ret    
   140014a64:	test   rcx,rcx
   140014a67:	je     0x140014b04
   140014a6d:	or     r9d,0xffffffff
   140014a71:	lock add DWORD PTR [rcx],r9d
   140014a75:	mov    rax,QWORD PTR [rcx+0x110]
   140014a7c:	test   rax,rax
   140014a7f:	je     0x140014a85
   140014a81:	lock add DWORD PTR [rax],r9d
   140014a85:	mov    rax,QWORD PTR [rcx+0x120]
   140014a8c:	test   rax,rax
   140014a8f:	je     0x140014a95
   140014a91:	lock add DWORD PTR [rax],r9d
   140014a95:	mov    rax,QWORD PTR [rcx+0x118]
   140014a9c:	test   rax,rax
   140014a9f:	je     0x140014aa5
   140014aa1:	lock add DWORD PTR [rax],r9d
   140014aa5:	mov    rax,QWORD PTR [rcx+0x130]
   140014aac:	test   rax,rax
   140014aaf:	je     0x140014ab5
   140014ab1:	lock add DWORD PTR [rax],r9d
   140014ab5:	lea    rax,[rcx+0x58]
   140014ab9:	mov    r8d,0x6
   140014abf:	lea    rdx,[rip+0xf4ee]        # 0x140023fb4
   140014ac6:	cmp    QWORD PTR [rax-0x10],rdx
   140014aca:	je     0x140014ad8
   140014acc:	mov    rdx,QWORD PTR [rax]
   140014acf:	test   rdx,rdx
   140014ad2:	je     0x140014ad8
   140014ad4:	lock add DWORD PTR [rdx],r9d
   140014ad8:	cmp    QWORD PTR [rax-0x8],0x0
   140014add:	je     0x140014aec
   140014adf:	mov    rdx,QWORD PTR [rax+0x8]
   140014ae3:	test   rdx,rdx
   140014ae6:	je     0x140014aec
   140014ae8:	lock add DWORD PTR [rdx],r9d
   140014aec:	add    rax,0x20
   140014af0:	dec    r8
   140014af3:	jne    0x140014abf
   140014af5:	mov    rax,QWORD PTR [rcx+0x158]
   140014afc:	lock add DWORD PTR [rax+0x160],r9d
   140014b04:	mov    rax,rcx
   140014b07:	ret    
   140014b08:	mov    QWORD PTR [rsp+0x8],rbx
   140014b0d:	mov    QWORD PTR [rsp+0x10],rsi
   140014b12:	push   rdi
   140014b13:	sub    rsp,0x20
   140014b17:	mov    rax,QWORD PTR [rcx+0x128]
   140014b1e:	mov    rbx,rcx
   140014b21:	test   rax,rax
   140014b24:	je     0x140014b9f
   140014b26:	lea    rcx,[rip+0xfb23]        # 0x140024650
   140014b2d:	cmp    rax,rcx
   140014b30:	je     0x140014b9f
   140014b32:	mov    rax,QWORD PTR [rbx+0x110]
   140014b39:	test   rax,rax
   140014b3c:	je     0x140014b9f
   140014b3e:	cmp    DWORD PTR [rax],0x0
   140014b41:	jne    0x140014b9f
   140014b43:	mov    rcx,QWORD PTR [rbx+0x120]
   140014b4a:	test   rcx,rcx
   140014b4d:	je     0x140014b65
   140014b4f:	cmp    DWORD PTR [rcx],0x0
   140014b52:	jne    0x140014b65
   140014b54:	call   0x14000b490
   140014b59:	mov    rcx,QWORD PTR [rbx+0x128]
   140014b60:	call   0x1400192fc
   140014b65:	mov    rcx,QWORD PTR [rbx+0x118]
   140014b6c:	test   rcx,rcx
   140014b6f:	je     0x140014b87
   140014b71:	cmp    DWORD PTR [rcx],0x0
   140014b74:	jne    0x140014b87
   140014b76:	call   0x14000b490
   140014b7b:	mov    rcx,QWORD PTR [rbx+0x128]
   140014b82:	call   0x140019290
   140014b87:	mov    rcx,QWORD PTR [rbx+0x110]
   140014b8e:	call   0x14000b490
   140014b93:	mov    rcx,QWORD PTR [rbx+0x128]
   140014b9a:	call   0x14000b490
   140014b9f:	mov    rax,QWORD PTR [rbx+0x130]
   140014ba6:	test   rax,rax
   140014ba9:	je     0x140014bf2
   140014bab:	cmp    DWORD PTR [rax],0x0
   140014bae:	jne    0x140014bf2
   140014bb0:	mov    rcx,QWORD PTR [rbx+0x138]
   140014bb7:	sub    rcx,0xfe
   140014bbe:	call   0x14000b490
   140014bc3:	mov    rcx,QWORD PTR [rbx+0x148]
   140014bca:	mov    edi,0x80
   140014bcf:	sub    rcx,rdi
   140014bd2:	call   0x14000b490
   140014bd7:	mov    rcx,QWORD PTR [rbx+0x150]
   140014bde:	sub    rcx,rdi
   140014be1:	call   0x14000b490
   140014be6:	mov    rcx,QWORD PTR [rbx+0x130]
   140014bed:	call   0x14000b490
   140014bf2:	mov    rcx,QWORD PTR [rbx+0x158]
   140014bf9:	lea    rax,[rip+0xf3c0]        # 0x140023fc0
   140014c00:	cmp    rcx,rax
   140014c03:	je     0x140014c1f
   140014c05:	cmp    DWORD PTR [rcx+0x160],0x0
   140014c0c:	jne    0x140014c1f
   140014c0e:	call   0x140018ea0
   140014c13:	mov    rcx,QWORD PTR [rbx+0x158]
   140014c1a:	call   0x14000b490
   140014c1f:	lea    rdi,[rbx+0x58]
   140014c23:	mov    esi,0x6
   140014c28:	lea    rax,[rip+0xf385]        # 0x140023fb4
   140014c2f:	cmp    QWORD PTR [rdi-0x10],rax
   140014c33:	je     0x140014c47
   140014c35:	mov    rcx,QWORD PTR [rdi]
   140014c38:	test   rcx,rcx
   140014c3b:	je     0x140014c47
   140014c3d:	cmp    DWORD PTR [rcx],0x0
   140014c40:	jne    0x140014c47
   140014c42:	call   0x14000b490
   140014c47:	cmp    QWORD PTR [rdi-0x8],0x0
   140014c4c:	je     0x140014c61
   140014c4e:	mov    rcx,QWORD PTR [rdi+0x8]
   140014c52:	test   rcx,rcx
   140014c55:	je     0x140014c61
   140014c57:	cmp    DWORD PTR [rcx],0x0
   140014c5a:	jne    0x140014c61
   140014c5c:	call   0x14000b490
   140014c61:	add    rdi,0x20
   140014c65:	dec    rsi
   140014c68:	jne    0x140014c28
   140014c6a:	mov    rcx,rbx
   140014c6d:	mov    rbx,QWORD PTR [rsp+0x30]
   140014c72:	mov    rsi,QWORD PTR [rsp+0x38]
   140014c77:	add    rsp,0x20
   140014c7b:	pop    rdi
   140014c7c:	jmp    0x14000b490
   140014c81:	int3   
   140014c82:	int3   
   140014c83:	int3   
   140014c84:	rex push rbx
   140014c86:	sub    rsp,0x20
   140014c8a:	mov    rbx,rdx
   140014c8d:	test   rdx,rdx
   140014c90:	je     0x140014cd3
   140014c92:	test   rcx,rcx
   140014c95:	je     0x140014cd3
   140014c97:	mov    r10,QWORD PTR [rcx]
   140014c9a:	cmp    r10,rdx
   140014c9d:	je     0x140014cce
   140014c9f:	mov    QWORD PTR [rcx],rdx
   140014ca2:	mov    rcx,rdx
   140014ca5:	call   0x1400149d8
   140014caa:	test   r10,r10
   140014cad:	je     0x140014cce
   140014caf:	mov    rcx,r10
   140014cb2:	call   0x140014a64
   140014cb7:	cmp    DWORD PTR [r10],0x0
   140014cbb:	jne    0x140014cce
   140014cbd:	lea    rax,[rip+0xf5bc]        # 0x140024280
   140014cc4:	cmp    r10,rax
   140014cc7:	je     0x140014cce
   140014cc9:	call   0x140014b08
   140014cce:	mov    rax,rbx
   140014cd1:	jmp    0x140014cd5
   140014cd3:	xor    eax,eax
   140014cd5:	add    rsp,0x20
   140014cd9:	pop    rbx
   140014cda:	ret    
   140014cdb:	int3   
   140014cdc:	rex push rbx
   140014cde:	sub    rsp,0x20
   140014ce2:	call   0x14000d234
   140014ce7:	mov    rbx,rax
   140014cea:	mov    ecx,DWORD PTR [rax+0xc8]
   140014cf0:	test   DWORD PTR [rip+0xf2ba],ecx        # 0x140023fb0
   140014cf6:	je     0x140014d10
   140014cf8:	cmp    QWORD PTR [rax+0xc0],0x0
   140014d00:	je     0x140014d10
   140014d02:	call   0x14000d234
   140014d07:	mov    rbx,QWORD PTR [rax+0xc0]
   140014d0e:	jmp    0x140014d3b
   140014d10:	mov    ecx,0xc
   140014d15:	call   0x14000cb58
   140014d1a:	nop
   140014d1b:	lea    rcx,[rbx+0xc0]
   140014d22:	mov    rdx,QWORD PTR [rip+0xf6b7]        # 0x1400243e0
   140014d29:	call   0x140014c84
   140014d2e:	mov    rbx,rax
   140014d31:	mov    ecx,0xc
   140014d36:	call   0x14000ca58
   140014d3b:	test   rbx,rbx
   140014d3e:	jne    0x140014d48
   140014d40:	lea    ecx,[rbx+0x20]
   140014d43:	call   0x140009c14
   140014d48:	mov    rax,rbx
   140014d4b:	add    rsp,0x20
   140014d4f:	pop    rbx
   140014d50:	ret    
   140014d51:	int3   
   140014d52:	int3   
   140014d53:	int3   
   140014d54:	mov    QWORD PTR [rsp+0x10],rsi
   140014d59:	push   rbp
   140014d5a:	push   rdi
   140014d5b:	push   r12
   140014d5d:	mov    rbp,rsp
   140014d60:	sub    rsp,0x60
   140014d64:	movsxd rdi,ecx
   140014d67:	mov    r12d,edx
   140014d6a:	lea    rcx,[rbp-0x20]
   140014d6e:	mov    rdx,r8
   140014d71:	call   0x14000c724
   140014d76:	lea    r11d,[rdi+0x1]
   140014d7a:	cmp    r11d,0x100
   140014d81:	ja     0x140014d97
   140014d83:	mov    rax,QWORD PTR [rbp-0x20]
   140014d87:	mov    rcx,QWORD PTR [rax+0x140]
   140014d8e:	movzx  eax,WORD PTR [rcx+rdi*2]
   140014d92:	jmp    0x140014e17
   140014d97:	mov    esi,edi
   140014d99:	lea    rdx,[rbp-0x20]
   140014d9d:	sar    esi,0x8
   140014da0:	movzx  ecx,sil
   140014da4:	call   0x140015338
   140014da9:	mov    edx,0x1
   140014dae:	test   eax,eax
   140014db0:	je     0x140014dc4
   140014db2:	mov    BYTE PTR [rbp+0x38],sil
   140014db6:	mov    BYTE PTR [rbp+0x39],dil
   140014dba:	mov    BYTE PTR [rbp+0x3a],0x0
   140014dbe:	lea    r9d,[rdx+0x1]
   140014dc2:	jmp    0x140014dcf
   140014dc4:	mov    BYTE PTR [rbp+0x38],dil
   140014dc8:	mov    BYTE PTR [rbp+0x39],0x0
   140014dcc:	mov    r9d,edx
   140014dcf:	mov    rcx,QWORD PTR [rbp-0x20]
   140014dd3:	mov    DWORD PTR [rsp+0x38],edx
   140014dd7:	lea    r8,[rbp+0x38]
   140014ddb:	mov    eax,DWORD PTR [rcx+0x14]
   140014dde:	mov    DWORD PTR [rsp+0x30],eax
   140014de2:	mov    eax,DWORD PTR [rcx+0x4]
   140014de5:	lea    rcx,[rbp-0x20]
   140014de9:	mov    DWORD PTR [rsp+0x28],eax
   140014ded:	lea    rax,[rbp+0x20]
   140014df1:	mov    QWORD PTR [rsp+0x20],rax
   140014df6:	call   0x140018e20
   140014dfb:	test   eax,eax
   140014dfd:	jne    0x140014e13
   140014dff:	cmp    BYTE PTR [rbp-0x8],al
   140014e02:	je     0x140014e0f
   140014e04:	mov    rax,QWORD PTR [rbp-0x10]
   140014e08:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140014e0f:	xor    eax,eax
   140014e11:	jmp    0x140014e2b
   140014e13:	movzx  eax,WORD PTR [rbp+0x20]
   140014e17:	and    eax,r12d
   140014e1a:	cmp    BYTE PTR [rbp-0x8],0x0
   140014e1e:	je     0x140014e2b
   140014e20:	mov    rcx,QWORD PTR [rbp-0x10]
   140014e24:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140014e2b:	mov    rsi,QWORD PTR [rsp+0x88]
   140014e33:	add    rsp,0x60
   140014e37:	pop    r12
   140014e39:	pop    rdi
   140014e3a:	pop    rbp
   140014e3b:	ret    
   140014e3c:	sub    rsp,0x28
   140014e40:	call   0x14000cc00
   140014e45:	test   rax,rax
   140014e48:	je     0x140014e54
   140014e4a:	mov    ecx,0x16
   140014e4f:	call   0x14000cc10
   140014e54:	test   BYTE PTR [rip+0xf5a5],0x2        # 0x140024400
   140014e5b:	je     0x140014e71
   140014e5d:	mov    r8d,0x1
   140014e63:	mov    edx,0x40000015
   140014e68:	lea    ecx,[r8+0x2]
   140014e6c:	call   0x14000ce5c
   140014e71:	mov    ecx,0x3
   140014e76:	call   0x140009be8
   140014e7b:	int3   
   140014e7c:	and    DWORD PTR [rip+0x10be5],0x0        # 0x140025a68
   140014e83:	ret    
   140014e84:	sub    rsp,0x28
   140014e88:	test   rcx,rcx
   140014e8b:	jne    0x140014ea6
   140014e8d:	call   0x14000bdf0
   140014e92:	mov    DWORD PTR [rax],0x16
   140014e98:	call   0x14000d04c
   140014e9d:	or     rax,0xffffffffffffffff
   140014ea1:	add    rsp,0x28
   140014ea5:	ret    
   140014ea6:	mov    r8,rcx
   140014ea9:	mov    rcx,QWORD PTR [rip+0x10518]        # 0x1400253c8
   140014eb0:	xor    edx,edx
   140014eb2:	add    rsp,0x28
   140014eb6:	rex.W jmp QWORD PTR [rip+0x5423]        # 0x14001a2e0
   140014ebd:	int3   
   140014ebe:	int3   
   140014ebf:	int3   
   140014ec0:	mov    ecx,0x2
   140014ec5:	jmp    0x140009c14
   140014eca:	int3   
   140014ecb:	int3   
   140014ecc:	rex push rbx
   140014ece:	push   rbp
   140014ecf:	push   rsi
   140014ed0:	push   rdi
   140014ed1:	push   r12
   140014ed3:	push   r13
   140014ed5:	push   r14
   140014ed7:	sub    rsp,0x50
   140014edb:	mov    rax,QWORD PTR [rip+0xe1de]        # 0x1400230c0
   140014ee2:	xor    rax,rsp
   140014ee5:	mov    QWORD PTR [rsp+0x48],rax
   140014eea:	mov    ebp,r8d
   140014eed:	mov    r14,rdx
   140014ef0:	mov    r13,rcx
   140014ef3:	call   0x14000d0a8
   140014ef8:	xor    ebx,ebx
   140014efa:	cmp    QWORD PTR [rip+0x10a6f],rbx        # 0x140025970
   140014f01:	mov    rdi,rax
   140014f04:	jne    0x140014fdf
   140014f0a:	lea    rcx,[rip+0xb0af]        # 0x14001ffc0
   140014f11:	call   QWORD PTR [rip+0x5261]        # 0x14001a178
   140014f17:	mov    rsi,rax
   140014f1a:	test   rax,rax
   140014f1d:	je     0x1400150b6
   140014f23:	lea    rdx,[rip+0xb086]        # 0x14001ffb0
   140014f2a:	mov    rcx,rax
   140014f2d:	call   QWORD PTR [rip+0x5165]        # 0x14001a098
   140014f33:	test   rax,rax
   140014f36:	je     0x1400150b6
   140014f3c:	mov    rcx,rax
   140014f3f:	call   QWORD PTR [rip+0x522b]        # 0x14001a170
   140014f45:	lea    rdx,[rip+0xb054]        # 0x14001ffa0
   140014f4c:	mov    rcx,rsi
   140014f4f:	mov    QWORD PTR [rip+0x10a1a],rax        # 0x140025970
   140014f56:	call   QWORD PTR [rip+0x513c]        # 0x14001a098
   140014f5c:	mov    rcx,rax
   140014f5f:	call   QWORD PTR [rip+0x520b]        # 0x14001a170
   140014f65:	lea    rdx,[rip+0xb01c]        # 0x14001ff88
   140014f6c:	mov    rcx,rsi
   140014f6f:	mov    QWORD PTR [rip+0x10a02],rax        # 0x140025978
   140014f76:	call   QWORD PTR [rip+0x511c]        # 0x14001a098
   140014f7c:	mov    rcx,rax
   140014f7f:	call   QWORD PTR [rip+0x51eb]        # 0x14001a170
   140014f85:	lea    rdx,[rip+0xafdc]        # 0x14001ff68
   140014f8c:	mov    rcx,rsi
   140014f8f:	mov    QWORD PTR [rip+0x109ea],rax        # 0x140025980
   140014f96:	call   QWORD PTR [rip+0x50fc]        # 0x14001a098
   140014f9c:	mov    rcx,rax
   140014f9f:	call   QWORD PTR [rip+0x51cb]        # 0x14001a170
   140014fa5:	mov    r11,rax
   140014fa8:	mov    QWORD PTR [rip+0x109e1],rax        # 0x140025990
   140014faf:	test   rax,rax
   140014fb2:	je     0x140014fd6
   140014fb4:	lea    rdx,[rip+0xaf95]        # 0x14001ff50
   140014fbb:	mov    rcx,rsi
   140014fbe:	call   QWORD PTR [rip+0x50d4]        # 0x14001a098
   140014fc4:	mov    rcx,rax
   140014fc7:	call   QWORD PTR [rip+0x51a3]        # 0x14001a170
   140014fcd:	mov    QWORD PTR [rip+0x109b4],rax        # 0x140025988
   140014fd4:	jmp    0x140014fe6
   140014fd6:	mov    rax,QWORD PTR [rip+0x109ab]        # 0x140025988
   140014fdd:	jmp    0x140014fed
   140014fdf:	mov    rax,QWORD PTR [rip+0x109a2]        # 0x140025988
   140014fe6:	mov    r11,QWORD PTR [rip+0x109a3]        # 0x140025990
   140014fed:	cmp    rax,rdi
   140014ff0:	je     0x140015054
   140014ff2:	cmp    r11,rdi
   140014ff5:	je     0x140015054
   140014ff7:	mov    rcx,rax
   140014ffa:	call   QWORD PTR [rip+0x50e0]        # 0x14001a0e0
   140015000:	mov    rcx,QWORD PTR [rip+0x10989]        # 0x140025990
   140015007:	mov    rsi,rax
   14001500a:	call   QWORD PTR [rip+0x50d0]        # 0x14001a0e0
   140015010:	mov    r12,rax
   140015013:	test   rsi,rsi
   140015016:	je     0x140015054
   140015018:	test   rax,rax
   14001501b:	je     0x140015054
   14001501d:	call   rsi
   14001501f:	test   rax,rax
   140015022:	je     0x14001504e
   140015024:	lea    rcx,[rsp+0x30]
   140015029:	mov    r9d,0xc
   14001502f:	lea    r8,[rsp+0x38]
   140015034:	mov    QWORD PTR [rsp+0x20],rcx
   140015039:	lea    edx,[r9-0xb]
   14001503d:	mov    rcx,rax
   140015040:	call   r12
   140015043:	test   eax,eax
   140015045:	je     0x14001504e
   140015047:	test   BYTE PTR [rsp+0x40],0x1
   14001504c:	jne    0x140015054
   14001504e:	bts    ebp,0x15
   140015052:	jmp    0x140015094
   140015054:	mov    rcx,QWORD PTR [rip+0x1091d]        # 0x140025978
   14001505b:	cmp    rcx,rdi
   14001505e:	je     0x140015094
   140015060:	call   QWORD PTR [rip+0x507a]        # 0x14001a0e0
   140015066:	test   rax,rax
   140015069:	je     0x140015094
   14001506b:	call   rax
   14001506d:	mov    rbx,rax
   140015070:	test   rax,rax
   140015073:	je     0x140015094
   140015075:	mov    rcx,QWORD PTR [rip+0x10904]        # 0x140025980
   14001507c:	cmp    rcx,rdi
   14001507f:	je     0x140015094
   140015081:	call   QWORD PTR [rip+0x5059]        # 0x14001a0e0
   140015087:	test   rax,rax
   14001508a:	je     0x140015094
   14001508c:	mov    rcx,rbx
   14001508f:	call   rax
   140015091:	mov    rbx,rax
   140015094:	mov    rcx,QWORD PTR [rip+0x108d5]        # 0x140025970
   14001509b:	call   QWORD PTR [rip+0x503f]        # 0x14001a0e0
   1400150a1:	test   rax,rax
   1400150a4:	je     0x1400150b6
   1400150a6:	mov    r9d,ebp
   1400150a9:	mov    r8,r14
   1400150ac:	mov    rdx,r13
   1400150af:	mov    rcx,rbx
   1400150b2:	call   rax
   1400150b4:	jmp    0x1400150b8
   1400150b6:	xor    eax,eax
   1400150b8:	mov    rcx,QWORD PTR [rsp+0x48]
   1400150bd:	xor    rcx,rsp
   1400150c0:	call   0x14000a850
   1400150c5:	add    rsp,0x50
   1400150c9:	pop    r14
   1400150cb:	pop    r13
   1400150cd:	pop    r12
   1400150cf:	pop    rdi
   1400150d0:	pop    rsi
   1400150d1:	pop    rbp
   1400150d2:	pop    rbx
   1400150d3:	ret    
   1400150d4:	rex push rbx
   1400150d6:	sub    rsp,0x20
   1400150da:	xor    r10d,r10d
   1400150dd:	mov    r9,rcx
   1400150e0:	test   rcx,rcx
   1400150e3:	je     0x1400150f3
   1400150e5:	test   rdx,rdx
   1400150e8:	je     0x1400150f3
   1400150ea:	test   r8,r8
   1400150ed:	jne    0x14001510c
   1400150ef:	mov    WORD PTR [rcx],r10w
   1400150f3:	call   0x14000bdf0
   1400150f8:	mov    ebx,0x16
   1400150fd:	mov    DWORD PTR [rax],ebx
   1400150ff:	call   0x14000d04c
   140015104:	mov    eax,ebx
   140015106:	add    rsp,0x20
   14001510a:	pop    rbx
   14001510b:	ret    
   14001510c:	cmp    WORD PTR [rcx],r10w
   140015110:	je     0x14001511b
   140015112:	add    rcx,0x2
   140015116:	dec    rdx
   140015119:	jne    0x14001510c
   14001511b:	test   rdx,rdx
   14001511e:	jne    0x140015126
   140015120:	mov    WORD PTR [r9],r10w
   140015124:	jmp    0x1400150f3
   140015126:	sub    rcx,r8
   140015129:	movzx  eax,WORD PTR [r8]
   14001512d:	mov    WORD PTR [rcx+r8*1],ax
   140015132:	add    r8,0x2
   140015136:	test   ax,ax
   140015139:	je     0x140015140
   14001513b:	dec    rdx
   14001513e:	jne    0x140015129
   140015140:	test   rdx,rdx
   140015143:	jne    0x140015155
   140015145:	mov    WORD PTR [r9],r10w
   140015149:	call   0x14000bdf0
   14001514e:	mov    ebx,0x22
   140015153:	jmp    0x1400150fd
   140015155:	xor    eax,eax
   140015157:	jmp    0x140015106
   140015159:	int3   
   14001515a:	int3   
   14001515b:	int3   
   14001515c:	rex push rbx
   14001515e:	sub    rsp,0x20
   140015162:	xor    ebx,ebx
   140015164:	mov    r10,r8
   140015167:	test   r9,r9
   14001516a:	jne    0x14001517a
   14001516c:	test   rcx,rcx
   14001516f:	jne    0x14001517f
   140015171:	test   rdx,rdx
   140015174:	jne    0x140015196
   140015176:	xor    eax,eax
   140015178:	jmp    0x1400151a9
   14001517a:	test   rcx,rcx
   14001517d:	je     0x140015196
   14001517f:	test   rdx,rdx
   140015182:	je     0x140015196
   140015184:	test   r9,r9
   140015187:	jne    0x14001518e
   140015189:	mov    WORD PTR [rcx],bx
   14001518c:	jmp    0x140015176
   14001518e:	test   r8,r8
   140015191:	jne    0x1400151af
   140015193:	mov    WORD PTR [rcx],bx
   140015196:	call   0x14000bdf0
   14001519b:	mov    ebx,0x16
   1400151a0:	mov    DWORD PTR [rax],ebx
   1400151a2:	call   0x14000d04c
   1400151a7:	mov    eax,ebx
   1400151a9:	add    rsp,0x20
   1400151ad:	pop    rbx
   1400151ae:	ret    
   1400151af:	mov    r11,rcx
   1400151b2:	mov    r8,rdx
   1400151b5:	cmp    r9,0xffffffffffffffff
   1400151b9:	jne    0x1400151d7
   1400151bb:	sub    r11,r10
   1400151be:	movzx  eax,WORD PTR [r10]
   1400151c2:	mov    WORD PTR [r11+r10*1],ax
   1400151c7:	add    r10,0x2
   1400151cb:	test   ax,ax
   1400151ce:	je     0x1400151ff
   1400151d0:	dec    r8
   1400151d3:	jne    0x1400151be
   1400151d5:	jmp    0x1400151ff
   1400151d7:	sub    r10,rcx
   1400151da:	movzx  eax,WORD PTR [r10+r11*1]
   1400151df:	mov    WORD PTR [r11],ax
   1400151e3:	add    r11,0x2
   1400151e7:	test   ax,ax
   1400151ea:	je     0x1400151f6
   1400151ec:	dec    r8
   1400151ef:	je     0x1400151f6
   1400151f1:	dec    r9
   1400151f4:	jne    0x1400151da
   1400151f6:	test   r9,r9
   1400151f9:	jne    0x1400151ff
   1400151fb:	mov    WORD PTR [r11],bx
   1400151ff:	test   r8,r8
   140015202:	jne    0x140015176
   140015208:	cmp    r9,0xffffffffffffffff
   14001520c:	jne    0x140015219
   14001520e:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   140015213:	lea    eax,[r8+0x50]
   140015217:	jmp    0x1400151a9
   140015219:	mov    WORD PTR [rcx],bx
   14001521c:	call   0x14000bdf0
   140015221:	mov    ebx,0x22
   140015226:	jmp    0x1400151a0
   14001522b:	int3   
   14001522c:	rex push rbx
   14001522e:	sub    rsp,0x20
   140015232:	xor    r10d,r10d
   140015235:	mov    r9,rcx
   140015238:	test   rcx,rcx
   14001523b:	je     0x14001524b
   14001523d:	test   rdx,rdx
   140015240:	je     0x14001524b
   140015242:	test   r8,r8
   140015245:	jne    0x140015264
   140015247:	mov    WORD PTR [rcx],r10w
   14001524b:	call   0x14000bdf0
   140015250:	mov    ebx,0x16
   140015255:	mov    DWORD PTR [rax],ebx
   140015257:	call   0x14000d04c
   14001525c:	mov    eax,ebx
   14001525e:	add    rsp,0x20
   140015262:	pop    rbx
   140015263:	ret    
   140015264:	sub    rcx,r8
   140015267:	movzx  eax,WORD PTR [r8]
   14001526b:	mov    WORD PTR [rcx+r8*1],ax
   140015270:	add    r8,0x2
   140015274:	test   ax,ax
   140015277:	je     0x14001527e
   140015279:	dec    rdx
   14001527c:	jne    0x140015267
   14001527e:	test   rdx,rdx
   140015281:	jne    0x140015293
   140015283:	mov    WORD PTR [r9],r10w
   140015287:	call   0x14000bdf0
   14001528c:	mov    ebx,0x22
   140015291:	jmp    0x140015255
   140015293:	xor    eax,eax
   140015295:	jmp    0x14001525e
   140015297:	int3   
   140015298:	sub    rsp,0x28
   14001529c:	test   ecx,ecx
   14001529e:	js     0x1400152c0
   1400152a0:	cmp    ecx,0x2
   1400152a3:	jle    0x1400152b2
   1400152a5:	cmp    ecx,0x3
   1400152a8:	jne    0x1400152c0
   1400152aa:	mov    eax,DWORD PTR [rip+0xf740]        # 0x1400249f0
   1400152b0:	jmp    0x1400152d3
   1400152b2:	mov    eax,DWORD PTR [rip+0xf738]        # 0x1400249f0
   1400152b8:	mov    DWORD PTR [rip+0xf732],ecx        # 0x1400249f0
   1400152be:	jmp    0x1400152d3
   1400152c0:	call   0x14000bdf0
   1400152c5:	mov    DWORD PTR [rax],0x16
   1400152cb:	call   0x14000d04c
   1400152d0:	or     eax,0xffffffff
   1400152d3:	add    rsp,0x28
   1400152d7:	ret    
   1400152d8:	sub    rsp,0x28
   1400152dc:	cmp    ecx,0xfffffffe
   1400152df:	jne    0x1400152ee
   1400152e1:	call   0x14000bdf0
   1400152e6:	mov    DWORD PTR [rax],0x9
   1400152ec:	jmp    0x140015330
   1400152ee:	test   ecx,ecx
   1400152f0:	js     0x140015320
   1400152f2:	cmp    ecx,DWORD PTR [rip+0x10774]        # 0x140025a6c
   1400152f8:	jae    0x140015320
   1400152fa:	movsxd rcx,ecx
   1400152fd:	lea    rdx,[rip+0x1077c]        # 0x140025a80
   140015304:	mov    rax,rcx
   140015307:	and    ecx,0x1f
   14001530a:	sar    rax,0x5
   14001530e:	imul   rcx,rcx,0x58
   140015312:	mov    rax,QWORD PTR [rdx+rax*8]
   140015316:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   14001531b:	and    eax,0x40
   14001531e:	jmp    0x140015332
   140015320:	call   0x14000bdf0
   140015325:	mov    DWORD PTR [rax],0x9
   14001532b:	call   0x14000d04c
   140015330:	xor    eax,eax
   140015332:	add    rsp,0x28
   140015336:	ret    
   140015337:	int3   
   140015338:	rex push rbx
   14001533a:	sub    rsp,0x40
   14001533e:	mov    ebx,ecx
   140015340:	lea    rcx,[rsp+0x20]
   140015345:	call   0x14000c724
   14001534a:	mov    rax,QWORD PTR [rsp+0x20]
   14001534f:	movzx  r11d,bl
   140015353:	mov    rcx,QWORD PTR [rax+0x140]
   14001535a:	movzx  eax,WORD PTR [rcx+r11*2]
   14001535f:	and    eax,0x8000
   140015364:	cmp    BYTE PTR [rsp+0x38],0x0
   140015369:	je     0x140015377
   14001536b:	mov    rcx,QWORD PTR [rsp+0x30]
   140015370:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015377:	add    rsp,0x40
   14001537b:	pop    rbx
   14001537c:	ret    
   14001537d:	int3   
   14001537e:	int3   
   14001537f:	int3   
   140015380:	rex push rbx
   140015382:	sub    rsp,0x40
   140015386:	mov    ebx,ecx
   140015388:	lea    rcx,[rsp+0x20]
   14001538d:	xor    edx,edx
   14001538f:	call   0x14000c724
   140015394:	mov    rax,QWORD PTR [rsp+0x20]
   140015399:	movzx  r11d,bl
   14001539d:	mov    rcx,QWORD PTR [rax+0x140]
   1400153a4:	movzx  eax,WORD PTR [rcx+r11*2]
   1400153a9:	and    eax,0x8000
   1400153ae:	cmp    BYTE PTR [rsp+0x38],0x0
   1400153b3:	je     0x1400153c1
   1400153b5:	mov    rcx,QWORD PTR [rsp+0x30]
   1400153ba:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400153c1:	add    rsp,0x40
   1400153c5:	pop    rbx
   1400153c6:	ret    
   1400153c7:	int3   
   1400153c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400153cd:	mov    WORD PTR [rsp+0x20],r9w
   1400153d3:	push   rbp
   1400153d4:	push   rsi
   1400153d5:	push   rdi
   1400153d6:	mov    rbp,rsp
   1400153d9:	sub    rsp,0x60
   1400153dd:	mov    rdi,r8
   1400153e0:	mov    rsi,rdx
   1400153e3:	mov    rbx,rcx
   1400153e6:	test   rdx,rdx
   1400153e9:	jne    0x1400153fe
   1400153eb:	test   r8,r8
   1400153ee:	je     0x1400153fe
   1400153f0:	test   rcx,rcx
   1400153f3:	je     0x1400153f7
   1400153f5:	and    DWORD PTR [rcx],edx
   1400153f7:	xor    eax,eax
   1400153f9:	jmp    0x140015488
   1400153fe:	test   rcx,rcx
   140015401:	je     0x140015406
   140015403:	or     DWORD PTR [rcx],0xffffffff
   140015406:	cmp    r8,0x7fffffff
   14001540d:	jbe    0x140015424
   14001540f:	call   0x14000bdf0
   140015414:	mov    ebx,0x16
   140015419:	mov    DWORD PTR [rax],ebx
   14001541b:	call   0x14000d04c
   140015420:	mov    eax,ebx
   140015422:	jmp    0x140015488
   140015424:	mov    rdx,QWORD PTR [rbp+0x40]
   140015428:	lea    rcx,[rbp-0x20]
   14001542c:	call   0x14000c724
   140015431:	mov    r11,QWORD PTR [rbp-0x20]
   140015435:	cmp    DWORD PTR [r11+0x14],0x0
   14001543a:	jne    0x1400154f2
   140015440:	movzx  eax,WORD PTR [rbp+0x38]
   140015444:	mov    ecx,0xff
   140015449:	cmp    ax,cx
   14001544c:	jbe    0x140015498
   14001544e:	test   rsi,rsi
   140015451:	je     0x140015465
   140015453:	test   rdi,rdi
   140015456:	je     0x140015465
   140015458:	mov    r8,rdi
   14001545b:	xor    edx,edx
   14001545d:	mov    rcx,rsi
   140015460:	call   0x14000a560
   140015465:	call   0x14000bdf0
   14001546a:	mov    DWORD PTR [rax],0x2a
   140015470:	call   0x14000bdf0
   140015475:	cmp    BYTE PTR [rbp-0x8],0x0
   140015479:	mov    eax,DWORD PTR [rax]
   14001547b:	je     0x140015488
   14001547d:	mov    rcx,QWORD PTR [rbp-0x10]
   140015481:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015488:	mov    rbx,QWORD PTR [rsp+0x80]
   140015490:	add    rsp,0x60
   140015494:	pop    rdi
   140015495:	pop    rsi
   140015496:	pop    rbp
   140015497:	ret    
   140015498:	test   rsi,rsi
   14001549b:	je     0x1400154cd
   14001549d:	test   rdi,rdi
   1400154a0:	jne    0x1400154cb
   1400154a2:	call   0x14000bdf0
   1400154a7:	lea    ebx,[rdi+0x22]
   1400154aa:	mov    DWORD PTR [rax],ebx
   1400154ac:	call   0x14000d04c
   1400154b1:	cmp    BYTE PTR [rbp-0x8],dil
   1400154b5:	je     0x140015420
   1400154bb:	mov    rcx,QWORD PTR [rbp-0x10]
   1400154bf:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400154c6:	jmp    0x140015420
   1400154cb:	mov    BYTE PTR [rsi],al
   1400154cd:	test   rbx,rbx
   1400154d0:	je     0x1400154d8
   1400154d2:	mov    DWORD PTR [rbx],0x1
   1400154d8:	cmp    BYTE PTR [rbp-0x8],0x0
   1400154dc:	je     0x1400153f7
   1400154e2:	mov    rax,QWORD PTR [rbp-0x10]
   1400154e6:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400154ed:	jmp    0x1400153f7
   1400154f2:	and    DWORD PTR [rbp+0x28],0x0
   1400154f6:	mov    ecx,DWORD PTR [r11+0x4]
   1400154fa:	lea    rax,[rbp+0x28]
   1400154fe:	mov    QWORD PTR [rsp+0x38],rax
   140015503:	and    QWORD PTR [rsp+0x30],0x0
   140015509:	lea    r8,[rbp+0x38]
   14001550d:	mov    r9d,0x1
   140015513:	xor    edx,edx
   140015515:	mov    DWORD PTR [rsp+0x28],edi
   140015519:	mov    QWORD PTR [rsp+0x20],rsi
   14001551e:	call   QWORD PTR [rip+0x4ce4]        # 0x14001a208
   140015524:	test   eax,eax
   140015526:	je     0x14001553b
   140015528:	cmp    DWORD PTR [rbp+0x28],0x0
   14001552c:	jne    0x140015465
   140015532:	test   rbx,rbx
   140015535:	je     0x1400154d8
   140015537:	mov    DWORD PTR [rbx],eax
   140015539:	jmp    0x1400154d8
   14001553b:	call   QWORD PTR [rip+0x4b2f]        # 0x14001a070
   140015541:	cmp    eax,0x7a
   140015544:	jne    0x140015465
   14001554a:	test   rsi,rsi
   14001554d:	je     0x140015561
   14001554f:	test   rdi,rdi
   140015552:	je     0x140015561
   140015554:	mov    r8,rdi
   140015557:	xor    edx,edx
   140015559:	mov    rcx,rsi
   14001555c:	call   0x14000a560
   140015561:	call   0x14000bdf0
   140015566:	mov    ebx,0x22
   14001556b:	mov    DWORD PTR [rax],ebx
   14001556d:	call   0x14000d04c
   140015572:	cmp    BYTE PTR [rbp-0x8],0x0
   140015576:	je     0x140015420
   14001557c:	mov    rax,QWORD PTR [rbp-0x10]
   140015580:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140015587:	jmp    0x140015420
   14001558c:	sub    rsp,0x38
   140015590:	and    QWORD PTR [rsp+0x20],0x0
   140015596:	call   0x1400153c8
   14001559b:	add    rsp,0x38
   14001559f:	ret    
   1400155a0:	rex push rbp
   1400155a2:	push   rbx
   1400155a3:	push   rsi
   1400155a4:	push   rdi
   1400155a5:	push   r12
   1400155a7:	push   r13
   1400155a9:	push   r14
   1400155ab:	push   r15
   1400155ad:	sub    rsp,0x68
   1400155b1:	lea    rbp,[rsp+0x30]
   1400155b6:	mov    rax,QWORD PTR [rip+0xdb03]        # 0x1400230c0
   1400155bd:	xor    rax,rbp
   1400155c0:	mov    QWORD PTR [rbp+0x28],rax
   1400155c4:	mov    edi,DWORD PTR [rbp+0xa0]
   1400155ca:	mov    r12,QWORD PTR [rbp+0xa8]
   1400155d1:	xor    ebx,ebx
   1400155d3:	mov    DWORD PTR [rbp+0x4],r8d
   1400155d7:	mov    r13,r9
   1400155da:	mov    DWORD PTR [rbp+0x0],edx
   1400155dd:	mov    r8,rcx
   1400155e0:	mov    QWORD PTR [rbp+0x8],r12
   1400155e4:	mov    r15d,0x1
   1400155ea:	test   edi,edi
   1400155ec:	jle    0x140015631
   1400155ee:	mov    edx,edi
   1400155f0:	mov    rax,r9
   1400155f3:	sub    edx,r15d
   1400155f6:	or     ecx,0xffffffff
   1400155f9:	cmp    BYTE PTR [rax],bl
   1400155fb:	je     0x140015606
   1400155fd:	add    rax,r15
   140015600:	test   edx,edx
   140015602:	jne    0x1400155f3
   140015604:	mov    edx,ecx
   140015606:	mov    eax,ecx
   140015608:	sub    eax,edx
   14001560a:	add    edi,eax
   14001560c:	mov    esi,DWORD PTR [rbp+0xb0]
   140015612:	test   esi,esi
   140015614:	jle    0x14001563f
   140015616:	mov    eax,esi
   140015618:	mov    rdx,r12
   14001561b:	sub    eax,r15d
   14001561e:	cmp    BYTE PTR [rdx],bl
   140015620:	je     0x14001562b
   140015622:	add    rdx,r15
   140015625:	test   eax,eax
   140015627:	jne    0x14001561b
   140015629:	mov    eax,ecx
   14001562b:	sub    ecx,eax
   14001562d:	add    esi,ecx
   14001562f:	jmp    0x140015643
   140015631:	or     ecx,0xffffffff
   140015634:	cmp    edi,ecx
   140015636:	jge    0x14001560c
   140015638:	xor    eax,eax
   14001563a:	jmp    0x1400158c7
   14001563f:	cmp    esi,ecx
   140015641:	jl     0x140015638
   140015643:	mov    r14d,DWORD PTR [rbp+0xb8]
   14001564a:	test   r14d,r14d
   14001564d:	jne    0x140015656
   14001564f:	mov    rax,QWORD PTR [r8]
   140015652:	mov    r14d,DWORD PTR [rax+0x4]
   140015656:	test   edi,edi
   140015658:	je     0x140015662
   14001565a:	test   esi,esi
   14001565c:	jne    0x1400156fb
   140015662:	cmp    edi,esi
   140015664:	jne    0x140015670
   140015666:	mov    eax,0x2
   14001566b:	jmp    0x1400158c7
   140015670:	cmp    esi,r15d
   140015673:	jle    0x14001567d
   140015675:	mov    eax,r15d
   140015678:	jmp    0x1400158c7
   14001567d:	cmp    edi,r15d
   140015680:	jle    0x14001568c
   140015682:	mov    eax,0x3
   140015687:	jmp    0x1400158c7
   14001568c:	lea    rdx,[rbp+0x10]
   140015690:	mov    ecx,r14d
   140015693:	call   QWORD PTR [rip+0x4c27]        # 0x14001a2c0
   140015699:	test   eax,eax
   14001569b:	je     0x140015638
   14001569d:	test   edi,edi
   14001569f:	jle    0x1400156ca
   1400156a1:	cmp    DWORD PTR [rbp+0x10],0x2
   1400156a5:	jb     0x140015682
   1400156a7:	cmp    BYTE PTR [rbp+0x16],bl
   1400156aa:	lea    rax,[rbp+0x16]
   1400156ae:	je     0x140015682
   1400156b0:	cmp    BYTE PTR [rax+0x1],bl
   1400156b3:	je     0x140015682
   1400156b5:	mov    cl,BYTE PTR [r13+0x0]
   1400156b9:	cmp    cl,BYTE PTR [rax]
   1400156bb:	jb     0x1400156c2
   1400156bd:	cmp    cl,BYTE PTR [rax+0x1]
   1400156c0:	jbe    0x140015666
   1400156c2:	add    rax,0x2
   1400156c6:	cmp    BYTE PTR [rax],bl
   1400156c8:	jmp    0x1400156ae
   1400156ca:	test   esi,esi
   1400156cc:	jle    0x1400156fb
   1400156ce:	cmp    DWORD PTR [rbp+0x10],0x2
   1400156d2:	jb     0x140015675
   1400156d4:	cmp    BYTE PTR [rbp+0x16],bl
   1400156d7:	lea    rax,[rbp+0x16]
   1400156db:	je     0x140015675
   1400156dd:	cmp    BYTE PTR [rax+0x1],bl
   1400156e0:	je     0x140015675
   1400156e2:	mov    cl,BYTE PTR [r12]
   1400156e6:	cmp    cl,BYTE PTR [rax]
   1400156e8:	jb     0x1400156f3
   1400156ea:	cmp    cl,BYTE PTR [rax+0x1]
   1400156ed:	jbe    0x140015666
   1400156f3:	add    rax,0x2
   1400156f7:	cmp    BYTE PTR [rax],bl
   1400156f9:	jmp    0x1400156db
   1400156fb:	mov    r9d,edi
   1400156fe:	mov    r8,r13
   140015701:	mov    edx,0x9
   140015706:	mov    ecx,r14d
   140015709:	mov    DWORD PTR [rsp+0x28],ebx
   14001570d:	mov    QWORD PTR [rsp+0x20],rbx
   140015712:	call   QWORD PTR [rip+0x4a20]        # 0x14001a138
   140015718:	movsxd r15,eax
   14001571b:	test   eax,eax
   14001571d:	je     0x140015638
   140015723:	movabs r8,0xffffffffffffff0
   14001572d:	jle    0x140015795
   14001572f:	xor    edx,edx
   140015731:	lea    rax,[rdx-0x20]
   140015735:	div    r15
   140015738:	cmp    rax,0x2
   14001573c:	jb     0x140015795
   14001573e:	lea    rcx,[r15+r15*1+0x10]
   140015743:	cmp    rcx,0x400
   14001574a:	ja     0x14001577c
   14001574c:	lea    rax,[rcx+0xf]
   140015750:	cmp    rax,rcx
   140015753:	ja     0x140015758
   140015755:	mov    rax,r8
   140015758:	and    rax,0xfffffffffffffff0
   14001575c:	call   0x140016f30
   140015761:	sub    rsp,rax
   140015764:	lea    r12,[rsp+0x30]
   140015769:	test   r12,r12
   14001576c:	je     0x140015638
   140015772:	mov    DWORD PTR [r12],0xcccc
   14001577a:	jmp    0x14001578f
   14001577c:	call   0x14000b304
   140015781:	mov    r12,rax
   140015784:	test   rax,rax
   140015787:	je     0x140015798
   140015789:	mov    DWORD PTR [rax],0xdddd
   14001578f:	add    r12,0x10
   140015793:	jmp    0x140015798
   140015795:	mov    r12,rbx
   140015798:	test   r12,r12
   14001579b:	je     0x140015638
   1400157a1:	mov    r9d,edi
   1400157a4:	mov    r8,r13
   1400157a7:	mov    edx,0x1
   1400157ac:	mov    ecx,r14d
   1400157af:	mov    DWORD PTR [rsp+0x28],r15d
   1400157b4:	mov    QWORD PTR [rsp+0x20],r12
   1400157b9:	call   QWORD PTR [rip+0x4979]        # 0x14001a138
   1400157bf:	test   eax,eax
   1400157c1:	je     0x1400158b3
   1400157c7:	mov    r8,QWORD PTR [rbp+0x8]
   1400157cb:	mov    r9d,esi
   1400157ce:	mov    edx,0x9
   1400157d3:	mov    ecx,r14d
   1400157d6:	mov    DWORD PTR [rsp+0x28],ebx
   1400157da:	mov    QWORD PTR [rsp+0x20],rbx
   1400157df:	call   QWORD PTR [rip+0x4953]        # 0x14001a138
   1400157e5:	movsxd r13,eax
   1400157e8:	test   eax,eax
   1400157ea:	je     0x1400158b3
   1400157f0:	jle    0x140015859
   1400157f2:	xor    edx,edx
   1400157f4:	lea    rax,[rdx-0x20]
   1400157f8:	div    r13
   1400157fb:	cmp    rax,0x2
   1400157ff:	jb     0x140015859
   140015801:	lea    rcx,[r13+r13*1+0x10]
   140015806:	cmp    rcx,0x400
   14001580d:	ja     0x140015840
   14001580f:	lea    rax,[rcx+0xf]
   140015813:	cmp    rax,rcx
   140015816:	ja     0x140015822
   140015818:	movabs rax,0xffffffffffffff0
   140015822:	and    rax,0xfffffffffffffff0
   140015826:	call   0x140016f30
   14001582b:	sub    rsp,rax
   14001582e:	lea    rdi,[rsp+0x30]
   140015833:	test   rdi,rdi
   140015836:	je     0x1400158b3
   140015838:	mov    DWORD PTR [rdi],0xcccc
   14001583e:	jmp    0x140015853
   140015840:	call   0x14000b304
   140015845:	mov    rdi,rax
   140015848:	test   rax,rax
   14001584b:	je     0x14001585c
   14001584d:	mov    DWORD PTR [rax],0xdddd
   140015853:	add    rdi,0x10
   140015857:	jmp    0x14001585c
   140015859:	mov    rdi,rbx
   14001585c:	test   rdi,rdi
   14001585f:	je     0x1400158b3
   140015861:	mov    r8,QWORD PTR [rbp+0x8]
   140015865:	mov    r9d,esi
   140015868:	mov    edx,0x1
   14001586d:	mov    ecx,r14d
   140015870:	mov    DWORD PTR [rsp+0x28],r13d
   140015875:	mov    QWORD PTR [rsp+0x20],rdi
   14001587a:	call   QWORD PTR [rip+0x48b8]        # 0x14001a138
   140015880:	test   eax,eax
   140015882:	je     0x1400158a2
   140015884:	mov    edx,DWORD PTR [rbp+0x4]
   140015887:	mov    ecx,DWORD PTR [rbp+0x0]
   14001588a:	mov    r9d,r15d
   14001588d:	mov    r8,r12
   140015890:	mov    DWORD PTR [rsp+0x28],r13d
   140015895:	mov    QWORD PTR [rsp+0x20],rdi
   14001589a:	call   QWORD PTR [rip+0x4a48]        # 0x14001a2e8
   1400158a0:	mov    ebx,eax
   1400158a2:	lea    rcx,[rdi-0x10]
   1400158a6:	cmp    DWORD PTR [rcx],0xdddd
   1400158ac:	jne    0x1400158b3
   1400158ae:	call   0x14000b490
   1400158b3:	lea    rcx,[r12-0x10]
   1400158b8:	cmp    DWORD PTR [rcx],0xdddd
   1400158be:	jne    0x1400158c5
   1400158c0:	call   0x14000b490
   1400158c5:	mov    eax,ebx
   1400158c7:	mov    rcx,QWORD PTR [rbp+0x28]
   1400158cb:	xor    rcx,rbp
   1400158ce:	call   0x14000a850
   1400158d3:	lea    rsp,[rbp+0x38]
   1400158d7:	pop    r15
   1400158d9:	pop    r14
   1400158db:	pop    r13
   1400158dd:	pop    r12
   1400158df:	pop    rdi
   1400158e0:	pop    rsi
   1400158e1:	pop    rbx
   1400158e2:	pop    rbp
   1400158e3:	ret    
   1400158e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400158e9:	mov    QWORD PTR [rsp+0x10],rsi
   1400158ee:	push   rdi
   1400158ef:	sub    rsp,0x60
   1400158f3:	mov    esi,edx
   1400158f5:	mov    rdx,rcx
   1400158f8:	lea    rcx,[rsp+0x40]
   1400158fd:	mov    rbx,r9
   140015900:	mov    edi,r8d
   140015903:	call   0x14000c724
   140015908:	mov    r11d,DWORD PTR [rsp+0xa8]
   140015910:	mov    eax,DWORD PTR [rsp+0xa0]
   140015917:	lea    rcx,[rsp+0x40]
   14001591c:	mov    DWORD PTR [rsp+0x38],r11d
   140015921:	mov    DWORD PTR [rsp+0x30],eax
   140015925:	mov    rax,QWORD PTR [rsp+0x98]
   14001592d:	mov    QWORD PTR [rsp+0x28],rax
   140015932:	mov    eax,DWORD PTR [rsp+0x90]
   140015939:	mov    r9,rbx
   14001593c:	mov    r8d,edi
   14001593f:	mov    edx,esi
   140015941:	mov    DWORD PTR [rsp+0x20],eax
   140015945:	call   0x1400155a0
   14001594a:	cmp    BYTE PTR [rsp+0x58],0x0
   14001594f:	je     0x14001595d
   140015951:	mov    rcx,QWORD PTR [rsp+0x50]
   140015956:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001595d:	mov    rbx,QWORD PTR [rsp+0x70]
   140015962:	mov    rsi,QWORD PTR [rsp+0x78]
   140015967:	add    rsp,0x60
   14001596b:	pop    rdi
   14001596c:	ret    
   14001596d:	int3   
   14001596e:	int3   
   14001596f:	int3   
   140015970:	mov    QWORD PTR [rsp+0x8],rbx
   140015975:	mov    QWORD PTR [rsp+0x10],rsi
   14001597a:	mov    QWORD PTR [rsp+0x18],rdi
   14001597f:	push   rbp
   140015980:	mov    rbp,rsp
   140015983:	sub    rsp,0x60
   140015987:	mov    rsi,rcx
   14001598a:	mov    rdi,rdx
   14001598d:	lea    rcx,[rbp-0x20]
   140015991:	mov    rdx,r9
   140015994:	mov    rbx,r8
   140015997:	call   0x14000c724
   14001599c:	test   rbx,rbx
   14001599f:	jne    0x1400159b8
   1400159a1:	cmp    BYTE PTR [rbp-0x8],bl
   1400159a4:	je     0x1400159b1
   1400159a6:	mov    rax,QWORD PTR [rbp-0x10]
   1400159aa:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400159b1:	xor    eax,eax
   1400159b3:	jmp    0x140015a5d
   1400159b8:	test   rsi,rsi
   1400159bb:	jne    0x1400159e5
   1400159bd:	call   0x14000bdf0
   1400159c2:	mov    DWORD PTR [rax],0x16
   1400159c8:	call   0x14000d04c
   1400159cd:	cmp    BYTE PTR [rbp-0x8],0x0
   1400159d1:	je     0x1400159de
   1400159d3:	mov    rax,QWORD PTR [rbp-0x10]
   1400159d7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400159de:	mov    eax,0x7fffffff
   1400159e3:	jmp    0x140015a5d
   1400159e5:	test   rdi,rdi
   1400159e8:	je     0x1400159bd
   1400159ea:	cmp    rbx,0x7fffffff
   1400159f1:	ja     0x1400159bd
   1400159f3:	mov    rax,QWORD PTR [rbp-0x20]
   1400159f7:	mov    edx,DWORD PTR [rax+0x10]
   1400159fa:	test   edx,edx
   1400159fc:	jne    0x140015a12
   1400159fe:	lea    r9,[rbp-0x20]
   140015a02:	mov    r8,rbx
   140015a05:	mov    rdx,rdi
   140015a08:	mov    rcx,rsi
   140015a0b:	call   0x140019488
   140015a10:	jmp    0x140015a4c
   140015a12:	mov    eax,DWORD PTR [rax+0x8]
   140015a15:	lea    rcx,[rbp-0x20]
   140015a19:	mov    r9,rsi
   140015a1c:	mov    DWORD PTR [rsp+0x38],eax
   140015a20:	mov    DWORD PTR [rsp+0x30],ebx
   140015a24:	mov    r8d,0x1001
   140015a2a:	mov    QWORD PTR [rsp+0x28],rdi
   140015a2f:	mov    DWORD PTR [rsp+0x20],ebx
   140015a33:	call   0x1400158e4
   140015a38:	test   eax,eax
   140015a3a:	jne    0x140015a49
   140015a3c:	call   0x14000bdf0
   140015a41:	mov    DWORD PTR [rax],0x16
   140015a47:	jmp    0x1400159cd
   140015a49:	add    eax,0xfffffffe
   140015a4c:	cmp    BYTE PTR [rbp-0x8],0x0
   140015a50:	je     0x140015a5d
   140015a52:	mov    rcx,QWORD PTR [rbp-0x10]
   140015a56:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015a5d:	lea    r11,[rsp+0x60]
   140015a62:	mov    rbx,QWORD PTR [r11+0x10]
   140015a66:	mov    rsi,QWORD PTR [r11+0x18]
   140015a6a:	mov    rdi,QWORD PTR [r11+0x20]
   140015a6e:	mov    rsp,r11
   140015a71:	pop    rbp
   140015a72:	ret    
   140015a73:	int3   
   140015a74:	mov    QWORD PTR [rsp+0x8],rbx
   140015a79:	push   rdi
   140015a7a:	sub    rsp,0x20
   140015a7e:	mov    rbx,r8
   140015a81:	mov    rdi,rdx
   140015a84:	test   rcx,rcx
   140015a87:	je     0x140015aa6
   140015a89:	xor    edx,edx
   140015a8b:	lea    rax,[rdx-0x20]
   140015a8f:	div    rcx
   140015a92:	cmp    rax,rdi
   140015a95:	jae    0x140015aa6
   140015a97:	call   0x14000bdf0
   140015a9c:	mov    DWORD PTR [rax],0xc
   140015aa2:	xor    eax,eax
   140015aa4:	jmp    0x140015b03
   140015aa6:	imul   rdi,rcx
   140015aaa:	mov    eax,0x1
   140015aaf:	test   rdi,rdi
   140015ab2:	cmove  rdi,rax
   140015ab6:	xor    eax,eax
   140015ab8:	cmp    rdi,0xffffffffffffffe0
   140015abc:	ja     0x140015ad6
   140015abe:	mov    rcx,QWORD PTR [rip+0xf903]        # 0x1400253c8
   140015ac5:	lea    edx,[rax+0x8]
   140015ac8:	mov    r8,rdi
   140015acb:	call   QWORD PTR [rip+0x462f]        # 0x14001a100
   140015ad1:	test   rax,rax
   140015ad4:	jne    0x140015b03
   140015ad6:	cmp    DWORD PTR [rip+0xfe67],0x0        # 0x140025944
   140015add:	je     0x140015af8
   140015adf:	mov    rcx,rdi
   140015ae2:	call   0x14000d074
   140015ae7:	test   eax,eax
   140015ae9:	jne    0x140015ab6
   140015aeb:	test   rbx,rbx
   140015aee:	je     0x140015aa2
   140015af0:	mov    DWORD PTR [rbx],0xc
   140015af6:	jmp    0x140015aa2
   140015af8:	test   rbx,rbx
   140015afb:	je     0x140015b03
   140015afd:	mov    DWORD PTR [rbx],0xc
   140015b03:	mov    rbx,QWORD PTR [rsp+0x30]
   140015b08:	add    rsp,0x20
   140015b0c:	pop    rdi
   140015b0d:	ret    
   140015b0e:	int3   
   140015b0f:	int3   
   140015b10:	mov    QWORD PTR [rsp+0x8],rbx
   140015b15:	mov    QWORD PTR [rsp+0x10],rsi
   140015b1a:	push   rdi
   140015b1b:	sub    rsp,0x40
   140015b1f:	mov    ebx,edx
   140015b21:	mov    rdx,rcx
   140015b24:	lea    rcx,[rsp+0x20]
   140015b29:	mov    edi,r9d
   140015b2c:	mov    esi,r8d
   140015b2f:	call   0x14000c724
   140015b34:	mov    rax,QWORD PTR [rsp+0x28]
   140015b39:	movzx  r11d,bl
   140015b3d:	test   BYTE PTR [r11+rax*1+0x1d],dil
   140015b42:	jne    0x140015b63
   140015b44:	test   esi,esi
   140015b46:	je     0x140015b5d
   140015b48:	mov    rax,QWORD PTR [rsp+0x20]
   140015b4d:	mov    rcx,QWORD PTR [rax+0x140]
   140015b54:	movzx  eax,WORD PTR [rcx+r11*2]
   140015b59:	and    eax,esi
   140015b5b:	jmp    0x140015b5f
   140015b5d:	xor    eax,eax
   140015b5f:	test   eax,eax
   140015b61:	je     0x140015b68
   140015b63:	mov    eax,0x1
   140015b68:	cmp    BYTE PTR [rsp+0x38],0x0
   140015b6d:	je     0x140015b7b
   140015b6f:	mov    rcx,QWORD PTR [rsp+0x30]
   140015b74:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015b7b:	mov    rbx,QWORD PTR [rsp+0x50]
   140015b80:	mov    rsi,QWORD PTR [rsp+0x58]
   140015b85:	add    rsp,0x40
   140015b89:	pop    rdi
   140015b8a:	ret    
   140015b8b:	int3   
   140015b8c:	mov    edx,ecx
   140015b8e:	mov    r9d,0x4
   140015b94:	xor    r8d,r8d
   140015b97:	xor    ecx,ecx
   140015b99:	jmp    0x140015b10
   140015b9e:	int3   
   140015b9f:	int3   
   140015ba0:	mov    QWORD PTR [rsp+0x8],rbx
   140015ba5:	push   rdi
   140015ba6:	sub    rsp,0x20
   140015baa:	test   BYTE PTR [rdx+0x18],0x40
   140015bae:	mov    rbx,rdx
   140015bb1:	mov    edi,ecx
   140015bb3:	jne    0x140015c43
   140015bb9:	mov    rcx,rdx
   140015bbc:	call   0x140010b28
   140015bc1:	lea    rdx,[rip+0xdce8]        # 0x1400238b0
   140015bc8:	lea    r8,[rip+0xfeb1]        # 0x140025a80
   140015bcf:	movsxd r11,eax
   140015bd2:	cmp    r11d,0xffffffff
   140015bd6:	je     0x140015bf5
   140015bd8:	cmp    r11d,0xfffffffe
   140015bdc:	je     0x140015bf5
   140015bde:	mov    rcx,r11
   140015be1:	mov    rax,r11
   140015be4:	and    ecx,0x1f
   140015be7:	sar    rax,0x5
   140015beb:	imul   rcx,rcx,0x58
   140015bef:	add    rcx,QWORD PTR [r8+rax*8]
   140015bf3:	jmp    0x140015bf8
   140015bf5:	mov    rcx,rdx
   140015bf8:	test   BYTE PTR [rcx+0x38],0x7f
   140015bfc:	jne    0x140015c25
   140015bfe:	cmp    r11d,0xffffffff
   140015c02:	je     0x140015c1f
   140015c04:	cmp    r11d,0xfffffffe
   140015c08:	je     0x140015c1f
   140015c0a:	mov    rdx,r11
   140015c0d:	mov    rax,r11
   140015c10:	and    edx,0x1f
   140015c13:	sar    rax,0x5
   140015c17:	imul   rdx,rdx,0x58
   140015c1b:	add    rdx,QWORD PTR [r8+rax*8]
   140015c1f:	test   BYTE PTR [rdx+0x38],0x80
   140015c23:	je     0x140015c43
   140015c25:	call   0x14000bdf0
   140015c2a:	mov    DWORD PTR [rax],0x16
   140015c30:	call   0x14000d04c
   140015c35:	or     eax,0xffffffff
   140015c38:	mov    rbx,QWORD PTR [rsp+0x30]
   140015c3d:	add    rsp,0x20
   140015c41:	pop    rdi
   140015c42:	ret    
   140015c43:	cmp    edi,0xffffffff
   140015c46:	je     0x140015c35
   140015c48:	test   BYTE PTR [rbx+0x18],0x1
   140015c4c:	jne    0x140015c5a
   140015c4e:	test   BYTE PTR [rbx+0x18],0x80
   140015c52:	je     0x140015c35
   140015c54:	test   BYTE PTR [rbx+0x18],0x2
   140015c58:	jne    0x140015c35
   140015c5a:	cmp    QWORD PTR [rbx+0x10],0x0
   140015c5f:	jne    0x140015c69
   140015c61:	mov    rcx,rbx
   140015c64:	call   0x140015fa8
   140015c69:	mov    rax,QWORD PTR [rbx]
   140015c6c:	cmp    rax,QWORD PTR [rbx+0x10]
   140015c70:	jne    0x140015c7e
   140015c72:	cmp    DWORD PTR [rbx+0x8],0x0
   140015c76:	jne    0x140015c35
   140015c78:	inc    rax
   140015c7b:	mov    QWORD PTR [rbx],rax
   140015c7e:	dec    QWORD PTR [rbx]
   140015c81:	test   BYTE PTR [rbx+0x18],0x40
   140015c85:	mov    rax,QWORD PTR [rbx]
   140015c88:	je     0x140015c97
   140015c8a:	cmp    BYTE PTR [rax],dil
   140015c8d:	je     0x140015c9a
   140015c8f:	inc    rax
   140015c92:	mov    QWORD PTR [rbx],rax
   140015c95:	jmp    0x140015c35
   140015c97:	mov    BYTE PTR [rax],dil
   140015c9a:	inc    DWORD PTR [rbx+0x8]
   140015c9d:	and    DWORD PTR [rbx+0x18],0xffffffef
   140015ca1:	or     DWORD PTR [rbx+0x18],0x1
   140015ca5:	movzx  eax,dil
   140015ca9:	jmp    0x140015c38
   140015cab:	int3   
   140015cac:	mov    rax,rsp
   140015caf:	mov    QWORD PTR [rax+0x8],rbx
   140015cb3:	mov    QWORD PTR [rax+0x10],rsi
   140015cb7:	mov    QWORD PTR [rax+0x18],rdi
   140015cbb:	mov    QWORD PTR [rax+0x20],r12
   140015cbf:	push   rbp
   140015cc0:	mov    rbp,rsp
   140015cc3:	sub    rsp,0x50
   140015cc7:	xor    r12d,r12d
   140015cca:	mov    rsi,r8
   140015ccd:	mov    rdi,rdx
   140015cd0:	mov    rbx,rcx
   140015cd3:	test   rdx,rdx
   140015cd6:	je     0x140015ceb
   140015cd8:	test   r8,r8
   140015cdb:	je     0x140015ceb
   140015cdd:	cmp    BYTE PTR [rdx],r12b
   140015ce0:	jne    0x140015d07
   140015ce2:	test   rcx,rcx
   140015ce5:	je     0x140015ceb
   140015ce7:	mov    WORD PTR [rcx],r12w
   140015ceb:	xor    eax,eax
   140015ced:	mov    rbx,QWORD PTR [rsp+0x60]
   140015cf2:	mov    rsi,QWORD PTR [rsp+0x68]
   140015cf7:	mov    rdi,QWORD PTR [rsp+0x70]
   140015cfc:	mov    r12,QWORD PTR [rsp+0x78]
   140015d01:	add    rsp,0x50
   140015d05:	pop    rbp
   140015d06:	ret    
   140015d07:	lea    rcx,[rbp-0x20]
   140015d0b:	mov    rdx,r9
   140015d0e:	call   0x14000c724
   140015d13:	mov    r11,QWORD PTR [rbp-0x20]
   140015d17:	cmp    DWORD PTR [r11+0x14],r12d
   140015d1b:	jne    0x140015d40
   140015d1d:	test   rbx,rbx
   140015d20:	je     0x140015d28
   140015d22:	movzx  eax,BYTE PTR [rdi]
   140015d25:	mov    WORD PTR [rbx],ax
   140015d28:	cmp    BYTE PTR [rbp-0x8],r12b
   140015d2c:	je     0x140015d39
   140015d2e:	mov    rax,QWORD PTR [rbp-0x10]
   140015d32:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140015d39:	mov    eax,0x1
   140015d3e:	jmp    0x140015ced
   140015d40:	movzx  ecx,BYTE PTR [rdi]
   140015d43:	lea    rdx,[rbp-0x20]
   140015d47:	call   0x140015338
   140015d4c:	test   eax,eax
   140015d4e:	je     0x140015deb
   140015d54:	mov    rcx,QWORD PTR [rbp-0x20]
   140015d58:	mov    r9d,DWORD PTR [rcx+0x10c]
   140015d5f:	cmp    r9d,0x1
   140015d63:	jle    0x140015d95
   140015d65:	cmp    esi,r9d
   140015d68:	jl     0x140015d95
   140015d6a:	mov    ecx,DWORD PTR [rcx+0x4]
   140015d6d:	mov    eax,r12d
   140015d70:	test   rbx,rbx
   140015d73:	setne  al
   140015d76:	mov    r8,rdi
   140015d79:	mov    edx,0x9
   140015d7e:	mov    DWORD PTR [rsp+0x28],eax
   140015d82:	mov    QWORD PTR [rsp+0x20],rbx
   140015d87:	call   QWORD PTR [rip+0x43ab]        # 0x14001a138
   140015d8d:	mov    rcx,QWORD PTR [rbp-0x20]
   140015d91:	test   eax,eax
   140015d93:	jne    0x140015da7
   140015d95:	movsxd rax,DWORD PTR [rcx+0x10c]
   140015d9c:	cmp    rsi,rax
   140015d9f:	jb     0x140015dc7
   140015da1:	cmp    BYTE PTR [rdi+0x1],r12b
   140015da5:	je     0x140015dc7
   140015da7:	mov    eax,DWORD PTR [rcx+0x10c]
   140015dad:	cmp    BYTE PTR [rbp-0x8],r12b
   140015db1:	je     0x140015ced
   140015db7:	mov    rcx,QWORD PTR [rbp-0x10]
   140015dbb:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140015dc2:	jmp    0x140015ced
   140015dc7:	call   0x14000bdf0
   140015dcc:	mov    DWORD PTR [rax],0x2a
   140015dd2:	cmp    BYTE PTR [rbp-0x8],r12b
   140015dd6:	je     0x140015de3
   140015dd8:	mov    rax,QWORD PTR [rbp-0x10]
   140015ddc:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140015de3:	or     eax,0xffffffff
   140015de6:	jmp    0x140015ced
   140015deb:	mov    eax,r12d
   140015dee:	mov    r9d,0x1
   140015df4:	test   rbx,rbx
   140015df7:	setne  al
   140015dfa:	lea    edx,[r9+0x8]
   140015dfe:	mov    r8,rdi
   140015e01:	mov    DWORD PTR [rsp+0x28],eax
   140015e05:	mov    rax,QWORD PTR [rbp-0x20]
   140015e09:	mov    QWORD PTR [rsp+0x20],rbx
   140015e0e:	mov    ecx,DWORD PTR [rax+0x4]
   140015e11:	call   QWORD PTR [rip+0x4321]        # 0x14001a138
   140015e17:	test   eax,eax
   140015e19:	jne    0x140015d28
   140015e1f:	jmp    0x140015dc7
   140015e21:	int3   
   140015e22:	int3   
   140015e23:	int3   
   140015e24:	xor    r9d,r9d
   140015e27:	jmp    0x140015cac
   140015e2c:	mov    QWORD PTR [rsp+0x8],rbx
   140015e31:	push   rdi
   140015e32:	sub    rsp,0x20
   140015e36:	movsxd rbx,ecx
   140015e39:	mov    edi,r8d
   140015e3c:	mov    QWORD PTR [rsp+0x38],rdx
   140015e41:	mov    ecx,ebx
   140015e43:	call   0x140011710
   140015e48:	cmp    rax,0xffffffffffffffff
   140015e4c:	jne    0x140015e5f
   140015e4e:	call   0x14000bdf0
   140015e53:	mov    DWORD PTR [rax],0x9
   140015e59:	or     rax,0xffffffffffffffff
   140015e5d:	jmp    0x140015eb6
   140015e5f:	mov    edx,DWORD PTR [rsp+0x38]
   140015e63:	lea    r8,[rsp+0x3c]
   140015e68:	mov    r9d,edi
   140015e6b:	mov    rcx,rax
   140015e6e:	call   QWORD PTR [rip+0x447c]        # 0x14001a2f0
   140015e74:	mov    DWORD PTR [rsp+0x38],eax
   140015e78:	cmp    eax,0xffffffff
   140015e7b:	jne    0x140015e90
   140015e7d:	call   QWORD PTR [rip+0x41ed]        # 0x14001a070
   140015e83:	test   eax,eax
   140015e85:	je     0x140015e90
   140015e87:	mov    ecx,eax
   140015e89:	call   0x14000be30
   140015e8e:	jmp    0x140015e59
   140015e90:	mov    rcx,rbx
   140015e93:	mov    rax,rbx
   140015e96:	lea    rdx,[rip+0xfbe3]        # 0x140025a80
   140015e9d:	sar    rax,0x5
   140015ea1:	and    ecx,0x1f
   140015ea4:	mov    rax,QWORD PTR [rdx+rax*8]
   140015ea8:	imul   rcx,rcx,0x58
   140015eac:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140015eb1:	mov    rax,QWORD PTR [rsp+0x38]
   140015eb6:	mov    rbx,QWORD PTR [rsp+0x30]
   140015ebb:	add    rsp,0x20
   140015ebf:	pop    rdi
   140015ec0:	ret    
   140015ec1:	int3   
   140015ec2:	int3   
   140015ec3:	int3   
   140015ec4:	mov    QWORD PTR [rsp+0x10],rbx
   140015ec9:	mov    DWORD PTR [rsp+0x8],ecx
   140015ecd:	push   rsi
   140015ece:	push   rdi
   140015ecf:	push   r12
   140015ed1:	push   r13
   140015ed3:	push   r14
   140015ed5:	sub    rsp,0x20
   140015ed9:	mov    esi,r8d
   140015edc:	mov    r12,rdx
   140015edf:	movsxd rdi,ecx
   140015ee2:	cmp    edi,0xfffffffe
   140015ee5:	jne    0x140015eff
   140015ee7:	call   0x14000be10
   140015eec:	and    DWORD PTR [rax],0x0
   140015eef:	call   0x14000bdf0
   140015ef4:	mov    DWORD PTR [rax],0x9
   140015efa:	jmp    0x140015f91
   140015eff:	test   ecx,ecx
   140015f01:	js     0x140015f79
   140015f03:	cmp    edi,DWORD PTR [rip+0xfb63]        # 0x140025a6c
   140015f09:	jae    0x140015f79
   140015f0b:	mov    rbx,rdi
   140015f0e:	mov    r13,rdi
   140015f11:	sar    r13,0x5
   140015f15:	lea    r14,[rip+0xfb64]        # 0x140025a80
   140015f1c:	and    ebx,0x1f
   140015f1f:	imul   rbx,rbx,0x58
   140015f23:	mov    rax,QWORD PTR [r14+r13*8]
   140015f27:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140015f2c:	and    ecx,0x1
   140015f2f:	je     0x140015f79
   140015f31:	mov    ecx,edi
   140015f33:	call   0x140011784
   140015f38:	nop
   140015f39:	mov    rax,QWORD PTR [r14+r13*8]
   140015f3d:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140015f42:	je     0x140015f56
   140015f44:	mov    r8d,esi
   140015f47:	mov    rdx,r12
   140015f4a:	mov    ecx,edi
   140015f4c:	call   0x140015e2c
   140015f51:	mov    rbx,rax
   140015f54:	jmp    0x140015f6d
   140015f56:	call   0x14000bdf0
   140015f5b:	mov    DWORD PTR [rax],0x9
   140015f61:	call   0x14000be10
   140015f66:	and    DWORD PTR [rax],0x0
   140015f69:	or     rbx,0xffffffffffffffff
   140015f6d:	mov    ecx,edi
   140015f6f:	call   0x14001182c
   140015f74:	mov    rax,rbx
   140015f77:	jmp    0x140015f95
   140015f79:	call   0x14000be10
   140015f7e:	and    DWORD PTR [rax],0x0
   140015f81:	call   0x14000bdf0
   140015f86:	mov    DWORD PTR [rax],0x9
   140015f8c:	call   0x14000d04c
   140015f91:	or     rax,0xffffffffffffffff
   140015f95:	mov    rbx,QWORD PTR [rsp+0x58]
   140015f9a:	add    rsp,0x20
   140015f9e:	pop    r14
   140015fa0:	pop    r13
   140015fa2:	pop    r12
   140015fa4:	pop    rdi
   140015fa5:	pop    rsi
   140015fa6:	ret    
   140015fa7:	int3   
   140015fa8:	rex push rbx
   140015faa:	sub    rsp,0x20
   140015fae:	inc    DWORD PTR [rip+0xea40]        # 0x1400249f4
   140015fb4:	mov    rbx,rcx
   140015fb7:	mov    ecx,0x1000
   140015fbc:	call   0x140010b50
   140015fc1:	mov    QWORD PTR [rbx+0x10],rax
   140015fc5:	test   rax,rax
   140015fc8:	je     0x140015fd7
   140015fca:	or     DWORD PTR [rbx+0x18],0x8
   140015fce:	mov    DWORD PTR [rbx+0x24],0x1000
   140015fd5:	jmp    0x140015fea
   140015fd7:	or     DWORD PTR [rbx+0x18],0x4
   140015fdb:	lea    rax,[rbx+0x20]
   140015fdf:	mov    DWORD PTR [rbx+0x24],0x2
   140015fe6:	mov    QWORD PTR [rbx+0x10],rax
   140015fea:	mov    rax,QWORD PTR [rbx+0x10]
   140015fee:	and    DWORD PTR [rbx+0x8],0x0
   140015ff2:	mov    QWORD PTR [rbx],rax
   140015ff5:	add    rsp,0x20
   140015ff9:	pop    rbx
   140015ffa:	ret    
   140015ffb:	int3   
   140015ffc:	mov    QWORD PTR [rsp+0x8],rbx
   140016001:	mov    QWORD PTR [rsp+0x18],rsi
   140016006:	mov    QWORD PTR [rsp+0x20],rdi
   14001600b:	push   rbp
   14001600c:	push   r12
   14001600e:	push   r13
   140016010:	push   r14
   140016012:	push   r15
   140016014:	mov    rbp,rsp
   140016017:	sub    rsp,0x40
   14001601b:	mov    r15,rdx
   14001601e:	mov    rdx,rcx
   140016021:	lea    rcx,[rbp-0x20]
   140016025:	mov    r13d,r9d
   140016028:	mov    r14,r8
   14001602b:	call   0x14000c724
   140016030:	test   r14,r14
   140016033:	je     0x140016038
   140016035:	mov    QWORD PTR [r14],r15
   140016038:	test   r15,r15
   14001603b:	jne    0x140016056
   14001603d:	call   0x14000bdf0
   140016042:	mov    DWORD PTR [rax],0x16
   140016048:	call   0x14000d04c
   14001604d:	cmp    BYTE PTR [rbp-0x8],0x0
   140016051:	jmp    0x14001623a
   140016056:	test   r13d,r13d
   140016059:	je     0x140016067
   14001605b:	cmp    r13d,0x2
   14001605f:	jl     0x14001603d
   140016061:	cmp    r13d,0x24
   140016065:	jg     0x14001603d
   140016067:	mov    r12b,BYTE PTR [r15]
   14001606a:	mov    r8,QWORD PTR [rbp-0x20]
   14001606e:	xor    edi,edi
   140016070:	lea    rbx,[r15+0x1]
   140016074:	cmp    DWORD PTR [r8+0x10c],0x1
   14001607c:	jle    0x140016096
   14001607e:	lea    r8,[rbp-0x20]
   140016082:	movzx  ecx,r12b
   140016086:	mov    edx,0x8
   14001608b:	call   0x140014d54
   140016090:	mov    r8,QWORD PTR [rbp-0x20]
   140016094:	jmp    0x1400160a8
   140016096:	mov    rax,QWORD PTR [r8+0x140]
   14001609d:	movzx  ecx,r12b
   1400160a1:	movzx  eax,WORD PTR [rax+rcx*2]
   1400160a5:	and    eax,0x8
   1400160a8:	test   eax,eax
   1400160aa:	je     0x1400160b4
   1400160ac:	mov    r12b,BYTE PTR [rbx]
   1400160af:	inc    rbx
   1400160b2:	jmp    0x140016074
   1400160b4:	mov    esi,DWORD PTR [rbp+0x50]
   1400160b7:	cmp    r12b,0x2d
   1400160bb:	jne    0x1400160c2
   1400160bd:	or     esi,0x2
   1400160c0:	jmp    0x1400160c8
   1400160c2:	cmp    r12b,0x2b
   1400160c6:	jne    0x1400160ce
   1400160c8:	mov    r12b,BYTE PTR [rbx]
   1400160cb:	inc    rbx
   1400160ce:	test   r13d,r13d
   1400160d1:	js     0x14001622e
   1400160d7:	cmp    r13d,0x1
   1400160db:	je     0x14001622e
   1400160e1:	cmp    r13d,0x24
   1400160e5:	jg     0x14001622e
   1400160eb:	test   r13d,r13d
   1400160ee:	jne    0x140016118
   1400160f0:	cmp    r12b,0x30
   1400160f4:	je     0x1400160fe
   1400160f6:	mov    r13d,0xa
   1400160fc:	jmp    0x140016136
   1400160fe:	cmp    BYTE PTR [rbx],0x78
   140016101:	je     0x140016110
   140016103:	cmp    BYTE PTR [rbx],0x58
   140016106:	je     0x140016110
   140016108:	mov    r13d,0x8
   14001610e:	jmp    0x140016136
   140016110:	mov    r13d,0x10
   140016116:	jmp    0x140016124
   140016118:	cmp    r13d,0x10
   14001611c:	jne    0x140016136
   14001611e:	cmp    r12b,0x30
   140016122:	jne    0x140016136
   140016124:	cmp    BYTE PTR [rbx],0x78
   140016127:	je     0x14001612e
   140016129:	cmp    BYTE PTR [rbx],0x58
   14001612c:	jne    0x140016136
   14001612e:	mov    r12b,BYTE PTR [rbx+0x1]
   140016132:	add    rbx,0x2
   140016136:	mov    r10,QWORD PTR [r8+0x140]
   14001613d:	xor    edx,edx
   14001613f:	or     eax,0xffffffff
   140016142:	div    r13d
   140016145:	mov    r9d,eax
   140016148:	movzx  ecx,r12b
   14001614c:	movzx  r8d,WORD PTR [r10+rcx*2]
   140016151:	mov    ecx,r8d
   140016154:	and    ecx,0x4
   140016157:	je     0x140016162
   140016159:	movsx  ecx,r12b
   14001615d:	sub    ecx,0x30
   140016160:	jmp    0x14001617e
   140016162:	and    r8d,0x103
   140016169:	je     0x140016199
   14001616b:	lea    eax,[r12-0x61]
   140016170:	movsx  ecx,r12b
   140016174:	cmp    al,0x19
   140016176:	ja     0x14001617b
   140016178:	sub    ecx,0x20
   14001617b:	add    ecx,0xffffffc9
   14001617e:	cmp    ecx,r13d
   140016181:	jae    0x140016199
   140016183:	or     esi,0x8
   140016186:	cmp    edi,r9d
   140016189:	jb     0x1400161ad
   14001618b:	jne    0x140016191
   14001618d:	cmp    ecx,edx
   14001618f:	jbe    0x1400161ad
   140016191:	or     esi,0x4
   140016194:	test   r14,r14
   140016197:	jne    0x1400161b3
   140016199:	dec    rbx
   14001619c:	test   sil,0x8
   1400161a0:	jne    0x1400161bb
   1400161a2:	test   r14,r14
   1400161a5:	cmovne rbx,r15
   1400161a9:	xor    edi,edi
   1400161ab:	jmp    0x140016209
   1400161ad:	imul   edi,r13d
   1400161b1:	add    edi,ecx
   1400161b3:	mov    r12b,BYTE PTR [rbx]
   1400161b6:	inc    rbx
   1400161b9:	jmp    0x140016148
   1400161bb:	mov    r12d,0x7fffffff
   1400161c1:	test   sil,0x4
   1400161c5:	jne    0x1400161e5
   1400161c7:	test   sil,0x1
   1400161cb:	jne    0x140016209
   1400161cd:	mov    eax,esi
   1400161cf:	and    eax,0x2
   1400161d2:	je     0x1400161dc
   1400161d4:	cmp    edi,0x80000000
   1400161da:	ja     0x1400161e5
   1400161dc:	test   eax,eax
   1400161de:	jne    0x140016209
   1400161e0:	cmp    edi,r12d
   1400161e3:	jbe    0x140016209
   1400161e5:	call   0x14000bdf0
   1400161ea:	mov    DWORD PTR [rax],0x22
   1400161f0:	test   sil,0x1
   1400161f4:	je     0x1400161fb
   1400161f6:	or     edi,0xffffffff
   1400161f9:	jmp    0x140016209
   1400161fb:	mov    al,sil
   1400161fe:	and    al,0x2
   140016200:	neg    al
   140016202:	sbb    edi,edi
   140016204:	neg    edi
   140016206:	add    edi,r12d
   140016209:	test   r14,r14
   14001620c:	je     0x140016211
   14001620e:	mov    QWORD PTR [r14],rbx
   140016211:	test   sil,0x2
   140016215:	je     0x140016219
   140016217:	neg    edi
   140016219:	cmp    BYTE PTR [rbp-0x8],0x0
   14001621d:	je     0x14001622a
   14001621f:	mov    rcx,QWORD PTR [rbp-0x10]
   140016223:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001622a:	mov    eax,edi
   14001622c:	jmp    0x140016249
   14001622e:	test   r14,r14
   140016231:	je     0x140016236
   140016233:	mov    QWORD PTR [r14],r15
   140016236:	cmp    BYTE PTR [rbp-0x8],dil
   14001623a:	je     0x140016247
   14001623c:	mov    rax,QWORD PTR [rbp-0x10]
   140016240:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016247:	xor    eax,eax
   140016249:	lea    r11,[rsp+0x40]
   14001624e:	mov    rbx,QWORD PTR [r11+0x30]
   140016252:	mov    rsi,QWORD PTR [r11+0x40]
   140016256:	mov    rdi,QWORD PTR [r11+0x48]
   14001625a:	mov    rsp,r11
   14001625d:	pop    r15
   14001625f:	pop    r14
   140016261:	pop    r13
   140016263:	pop    r12
   140016265:	pop    rbp
   140016266:	ret    
   140016267:	int3   
   140016268:	sub    rsp,0x38
   14001626c:	xor    eax,eax
   14001626e:	mov    r9d,r8d
   140016271:	mov    r8,rdx
   140016274:	cmp    DWORD PTR [rip+0xf6ee],eax        # 0x140025968
   14001627a:	mov    DWORD PTR [rsp+0x20],eax
   14001627e:	mov    rdx,rcx
   140016281:	jne    0x14001628c
   140016283:	lea    rcx,[rip+0xe15e]        # 0x1400243e8
   14001628a:	jmp    0x14001628e
   14001628c:	xor    ecx,ecx
   14001628e:	call   0x140015ffc
   140016293:	add    rsp,0x38
   140016297:	ret    
   140016298:	mov    QWORD PTR [rsp+0x8],rbx
   14001629d:	mov    QWORD PTR [rsp+0x10],rsi
   1400162a2:	push   rdi
   1400162a3:	sub    rsp,0x20
   1400162a7:	xor    edi,edi
   1400162a9:	mov    rbx,rdx
   1400162ac:	mov    rsi,rcx
   1400162af:	test   rdx,rdx
   1400162b2:	je     0x1400162d1
   1400162b4:	xor    edx,edx
   1400162b6:	lea    rax,[rdi-0x20]
   1400162ba:	div    rbx
   1400162bd:	cmp    rax,r8
   1400162c0:	jae    0x1400162d1
   1400162c2:	call   0x14000bdf0
   1400162c7:	mov    DWORD PTR [rax],0xc
   1400162cd:	xor    eax,eax
   1400162cf:	jmp    0x14001630e
   1400162d1:	imul   rbx,r8
   1400162d5:	test   rcx,rcx
   1400162d8:	je     0x1400162e2
   1400162da:	call   0x140014e84
   1400162df:	mov    rdi,rax
   1400162e2:	mov    rdx,rbx
   1400162e5:	mov    rcx,rsi
   1400162e8:	call   0x14000b3bc
   1400162ed:	mov    rsi,rax
   1400162f0:	test   rax,rax
   1400162f3:	je     0x14001630b
   1400162f5:	cmp    rdi,rbx
   1400162f8:	jae    0x14001630b
   1400162fa:	sub    rbx,rdi
   1400162fd:	lea    rcx,[rdi+rax*1]
   140016301:	xor    edx,edx
   140016303:	mov    r8,rbx
   140016306:	call   0x14000a560
   14001630b:	mov    rax,rsi
   14001630e:	mov    rbx,QWORD PTR [rsp+0x30]
   140016313:	mov    rsi,QWORD PTR [rsp+0x38]
   140016318:	add    rsp,0x20
   14001631c:	pop    rdi
   14001631d:	ret    
   14001631e:	int3   
   14001631f:	int3   
   140016320:	mov    QWORD PTR [rsp+0x10],rdx
   140016325:	mov    DWORD PTR [rsp+0x8],ecx
   140016329:	push   rbp
   14001632a:	push   rbx
   14001632b:	push   rsi
   14001632c:	push   rdi
   14001632d:	push   r12
   14001632f:	push   r13
   140016331:	push   r14
   140016333:	push   r15
   140016335:	mov    rbp,rsp
   140016338:	sub    rsp,0x58
   14001633c:	movsxd rax,ecx
   14001633f:	mov    ebx,r8d
   140016342:	mov    DWORD PTR [rbp-0x20],0xfffffffe
   140016349:	mov    DWORD PTR [rbp-0x1c],ebx
   14001634c:	cmp    eax,0xfffffffe
   14001634f:	jne    0x14001636a
   140016351:	call   0x14000be10
   140016356:	xor    edi,edi
   140016358:	mov    DWORD PTR [rax],edi
   14001635a:	call   0x14000bdf0
   14001635f:	mov    DWORD PTR [rax],0x9
   140016365:	jmp    0x140016a2f
   14001636a:	xor    edi,edi
   14001636c:	test   ecx,ecx
   14001636e:	js     0x140016a18
   140016374:	cmp    eax,DWORD PTR [rip+0xf6f2]        # 0x140025a6c
   14001637a:	jae    0x140016a18
   140016380:	mov    rsi,rax
   140016383:	mov    r15,rax
   140016386:	lea    r9,[rip+0xfffffffffffe9c73]        # 0x140000000
   14001638d:	sar    r15,0x5
   140016391:	and    esi,0x1f
   140016394:	mov    rcx,QWORD PTR [r9+r15*8+0x25a80]
   14001639c:	imul   rsi,rsi,0x58
   1400163a0:	mov    al,BYTE PTR [rcx+rsi*1+0x8]
   1400163a4:	test   al,0x1
   1400163a6:	je     0x140016a18
   1400163ac:	cmp    ebx,0x7fffffff
   1400163b2:	jbe    0x1400163cb
   1400163b4:	call   0x14000be10
   1400163b9:	mov    DWORD PTR [rax],edi
   1400163bb:	call   0x14000bdf0
   1400163c0:	mov    DWORD PTR [rax],0x16
   1400163c6:	jmp    0x140016a2a
   1400163cb:	mov    r12d,edi
   1400163ce:	test   ebx,ebx
   1400163d0:	je     0x140016a14
   1400163d6:	test   al,0x2
   1400163d8:	jne    0x140016a14
   1400163de:	test   rdx,rdx
   1400163e1:	je     0x1400163b4
   1400163e3:	mov    r13b,BYTE PTR [rcx+rsi*1+0x38]
   1400163e8:	mov    r8d,0x4
   1400163ee:	add    r13b,r13b
   1400163f1:	sar    r13b,1
   1400163f4:	movsx  ecx,r13b
   1400163f8:	mov    BYTE PTR [rbp+0x60],r13b
   1400163fc:	dec    ecx
   1400163fe:	je     0x140016414
   140016400:	dec    ecx
   140016402:	jne    0x14001640f
   140016404:	mov    eax,ebx
   140016406:	not    eax
   140016408:	test   al,0x1
   14001640a:	je     0x1400163b4
   14001640c:	and    ebx,0xfffffffe
   14001640f:	mov    r14,rdx
   140016412:	jmp    0x140016474
   140016414:	mov    eax,ebx
   140016416:	not    eax
   140016418:	test   al,0x1
   14001641a:	je     0x1400163b4
   14001641c:	shr    ebx,1
   14001641e:	cmp    ebx,r8d
   140016421:	cmovb  ebx,r8d
   140016425:	mov    ecx,ebx
   140016427:	call   0x140010b50
   14001642c:	mov    r14,rax
   14001642f:	test   rax,rax
   140016432:	jne    0x14001644f
   140016434:	call   0x14000bdf0
   140016439:	mov    DWORD PTR [rax],0xc
   14001643f:	call   0x14000be10
   140016444:	mov    DWORD PTR [rax],0x8
   14001644a:	jmp    0x140016a2f
   14001644f:	mov    ecx,DWORD PTR [rbp+0x48]
   140016452:	xor    edx,edx
   140016454:	lea    r8d,[rdx+0x1]
   140016458:	call   0x140015e2c
   14001645d:	lea    r9,[rip+0xfffffffffffe9b9c]        # 0x140000000
   140016464:	mov    r11,rax
   140016467:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   14001646f:	mov    QWORD PTR [rax+rsi*1+0x40],r11
   140016474:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   14001647c:	mov    rdx,r14
   14001647f:	mov    r8d,0xa
   140016485:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   14001648a:	je     0x14001652b
   140016490:	mov    cl,BYTE PTR [rax+rsi*1+0x9]
   140016494:	cmp    cl,r8b
   140016497:	je     0x14001652b
   14001649d:	test   ebx,ebx
   14001649f:	je     0x14001652b
   1400164a5:	mov    BYTE PTR [r14],cl
   1400164a8:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   1400164b0:	or     r10d,0xffffffff
   1400164b4:	add    ebx,r10d
   1400164b7:	lea    rdx,[r14+0x1]
   1400164bb:	lea    r12d,[r8-0x9]
   1400164bf:	mov    BYTE PTR [rax+rsi*1+0x9],r8b
   1400164c4:	test   r13b,r13b
   1400164c7:	je     0x14001652b
   1400164c9:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   1400164d1:	mov    cl,BYTE PTR [rax+rsi*1+0x39]
   1400164d5:	cmp    cl,r8b
   1400164d8:	je     0x14001652b
   1400164da:	test   ebx,ebx
   1400164dc:	je     0x14001652b
   1400164de:	mov    BYTE PTR [rdx],cl
   1400164e0:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   1400164e8:	add    ebx,r10d
   1400164eb:	inc    rdx
   1400164ee:	lea    r12d,[r8-0x8]
   1400164f2:	mov    BYTE PTR [rax+rsi*1+0x39],r8b
   1400164f7:	cmp    r13b,0x1
   1400164fb:	jne    0x14001652b
   1400164fd:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   140016505:	mov    cl,BYTE PTR [rax+rsi*1+0x3a]
   140016509:	cmp    cl,r8b
   14001650c:	je     0x14001652b
   14001650e:	test   ebx,ebx
   140016510:	je     0x14001652b
   140016512:	mov    BYTE PTR [rdx],cl
   140016514:	mov    rax,QWORD PTR [r9+r15*8+0x25a80]
   14001651c:	inc    rdx
   14001651f:	lea    r12d,[r8-0x7]
   140016523:	add    ebx,r10d
   140016526:	mov    BYTE PTR [rax+rsi*1+0x3a],r8b
   14001652b:	mov    rcx,QWORD PTR [r9+r15*8+0x25a80]
   140016533:	lea    r9,[rbp-0x24]
   140016537:	mov    r8d,ebx
   14001653a:	mov    rcx,QWORD PTR [rcx+rsi*1]
   14001653e:	mov    QWORD PTR [rsp+0x20],rdi
   140016543:	call   QWORD PTR [rip+0x3daf]        # 0x14001a2f8
   140016549:	test   eax,eax
   14001654b:	je     0x1400169d9
   140016551:	movsxd rdx,DWORD PTR [rbp-0x24]
   140016555:	test   edx,edx
   140016557:	js     0x1400169d9
   14001655d:	mov    eax,ebx
   14001655f:	cmp    rdx,rax
   140016562:	ja     0x1400169d9
   140016568:	lea    r8,[rip+0xfffffffffffe9a91]        # 0x140000000
   14001656f:	add    r12d,edx
   140016572:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   14001657a:	test   BYTE PTR [rax+rsi*1+0x8],0x80
   14001657f:	je     0x1400169ba
   140016585:	cmp    r13b,0x2
   140016589:	je     0x14001681b
   14001658f:	test   edx,edx
   140016591:	je     0x1400165a0
   140016593:	cmp    BYTE PTR [r14],0xa
   140016597:	jne    0x1400165a0
   140016599:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   14001659e:	jmp    0x1400165a5
   1400165a0:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   1400165a5:	movsxd rax,r12d
   1400165a8:	mov    rbx,r14
   1400165ab:	mov    r13,r14
   1400165ae:	add    rax,r14
   1400165b1:	mov    QWORD PTR [rbp-0x18],rax
   1400165b5:	cmp    r14,rax
   1400165b8:	jae    0x1400166d9
   1400165be:	mov    r12d,0xd
   1400165c4:	mov    al,BYTE PTR [r13+0x0]
   1400165c8:	cmp    al,0x1a
   1400165ca:	je     0x1400166ba
   1400165d0:	cmp    al,r12b
   1400165d3:	je     0x1400165e2
   1400165d5:	mov    BYTE PTR [rbx],al
   1400165d7:	inc    rbx
   1400165da:	inc    r13
   1400165dd:	jmp    0x1400166ae
   1400165e2:	mov    rax,QWORD PTR [rbp-0x18]
   1400165e6:	dec    rax
   1400165e9:	cmp    r13,rax
   1400165ec:	jae    0x140016605
   1400165ee:	lea    rax,[r13+0x1]
   1400165f2:	cmp    BYTE PTR [rax],0xa
   1400165f5:	jne    0x1400165fd
   1400165f7:	add    r13,0x2
   1400165fb:	jmp    0x14001667b
   1400165fd:	mov    r13,rax
   140016600:	jmp    0x1400166a8
   140016605:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   14001660d:	lea    r9,[rbp-0x24]
   140016611:	lea    rdx,[rbp+0x58]
   140016615:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140016619:	mov    r8d,0x1
   14001661f:	inc    r13
   140016622:	mov    QWORD PTR [rsp+0x20],rdi
   140016627:	call   QWORD PTR [rip+0x3ccb]        # 0x14001a2f8
   14001662d:	test   eax,eax
   14001662f:	jne    0x14001663b
   140016631:	call   QWORD PTR [rip+0x3a39]        # 0x14001a070
   140016637:	test   eax,eax
   140016639:	jne    0x1400166a1
   14001663b:	cmp    DWORD PTR [rbp-0x24],edi
   14001663e:	je     0x1400166a1
   140016640:	lea    r8,[rip+0xfffffffffffe99b9]        # 0x140000000
   140016647:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   14001664f:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   140016654:	je     0x140016670
   140016656:	cmp    BYTE PTR [rbp+0x58],0xa
   14001665a:	je     0x14001667b
   14001665c:	mov    BYTE PTR [rbx],r12b
   14001665f:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   140016667:	mov    al,BYTE PTR [rbp+0x58]
   14001666a:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   14001666e:	jmp    0x1400166ab
   140016670:	cmp    rbx,r14
   140016673:	jne    0x140016680
   140016675:	cmp    BYTE PTR [rbp+0x58],0xa
   140016679:	jne    0x140016680
   14001667b:	mov    BYTE PTR [rbx],0xa
   14001667e:	jmp    0x1400166ab
   140016680:	mov    ecx,DWORD PTR [rbp+0x48]
   140016683:	mov    r8d,0x1
   140016689:	or     rdx,0xffffffffffffffff
   14001668d:	call   0x140015e2c
   140016692:	cmp    BYTE PTR [rbp+0x58],0xa
   140016696:	lea    r8,[rip+0xfffffffffffe9963]        # 0x140000000
   14001669d:	je     0x1400166ae
   14001669f:	jmp    0x1400166a8
   1400166a1:	lea    r8,[rip+0xfffffffffffe9958]        # 0x140000000
   1400166a8:	mov    BYTE PTR [rbx],r12b
   1400166ab:	inc    rbx
   1400166ae:	cmp    r13,QWORD PTR [rbp-0x18]
   1400166b2:	jb     0x1400165c4
   1400166b8:	jmp    0x1400166d9
   1400166ba:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   1400166c2:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   1400166c7:	jne    0x1400166d0
   1400166c9:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   1400166ce:	jmp    0x1400166d9
   1400166d0:	mov    al,BYTE PTR [r13+0x0]
   1400166d4:	mov    BYTE PTR [rbx],al
   1400166d6:	inc    rbx
   1400166d9:	mov    r12d,ebx
   1400166dc:	sub    r12d,r14d
   1400166df:	cmp    BYTE PTR [rbp+0x60],0x1
   1400166e3:	jne    0x1400169ba
   1400166e9:	test   r12d,r12d
   1400166ec:	je     0x1400169ba
   1400166f2:	dec    rbx
   1400166f5:	test   BYTE PTR [rbx],0x80
   1400166f8:	jne    0x140016702
   1400166fa:	inc    rbx
   1400166fd:	jmp    0x1400167b3
   140016702:	mov    edx,0x1
   140016707:	jmp    0x140016718
   140016709:	cmp    edx,0x4
   14001670c:	jg     0x140016725
   14001670e:	cmp    rbx,r14
   140016711:	jb     0x140016725
   140016713:	dec    rbx
   140016716:	inc    edx
   140016718:	movzx  eax,BYTE PTR [rbx]
   14001671b:	cmp    BYTE PTR [rax+r8*1+0x24410],dil
   140016723:	je     0x140016709
   140016725:	movzx  ecx,BYTE PTR [rbx]
   140016728:	movsx  eax,BYTE PTR [rcx+r8*1+0x24410]
   140016731:	test   eax,eax
   140016733:	jne    0x140016748
   140016735:	call   0x14000bdf0
   14001673a:	mov    DWORD PTR [rax],0x2a
   140016740:	or     ebx,0xffffffff
   140016743:	jmp    0x1400169bd
   140016748:	inc    eax
   14001674a:	cmp    eax,edx
   14001674c:	jne    0x140016756
   14001674e:	movsxd rax,edx
   140016751:	add    rbx,rax
   140016754:	jmp    0x1400167b3
   140016756:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   14001675e:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   140016763:	je     0x1400167a0
   140016765:	inc    rbx
   140016768:	mov    BYTE PTR [rax+rsi*1+0x9],cl
   14001676c:	cmp    edx,0x2
   14001676f:	jl     0x140016782
   140016771:	mov    al,BYTE PTR [rbx]
   140016773:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   14001677b:	inc    rbx
   14001677e:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   140016782:	cmp    edx,0x3
   140016785:	jne    0x140016798
   140016787:	mov    al,BYTE PTR [rbx]
   140016789:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   140016791:	inc    rbx
   140016794:	mov    BYTE PTR [rcx+rsi*1+0x3a],al
   140016798:	movsxd rax,edx
   14001679b:	sub    rbx,rax
   14001679e:	jmp    0x1400167b3
   1400167a0:	mov    ecx,DWORD PTR [rbp+0x48]
   1400167a3:	neg    edx
   1400167a5:	mov    r8d,0x1
   1400167ab:	movsxd rdx,edx
   1400167ae:	call   0x140015e2c
   1400167b3:	mov    eax,DWORD PTR [rbp-0x1c]
   1400167b6:	mov    r13,QWORD PTR [rbp+0x50]
   1400167ba:	sub    ebx,r14d
   1400167bd:	shr    eax,1
   1400167bf:	mov    r9d,ebx
   1400167c2:	mov    r8,r14
   1400167c5:	mov    DWORD PTR [rsp+0x28],eax
   1400167c9:	xor    edx,edx
   1400167cb:	mov    ecx,0xfde9
   1400167d0:	mov    QWORD PTR [rsp+0x20],r13
   1400167d5:	call   QWORD PTR [rip+0x395d]        # 0x14001a138
   1400167db:	mov    r12d,eax
   1400167de:	test   eax,eax
   1400167e0:	jne    0x1400167f7
   1400167e2:	call   QWORD PTR [rip+0x3888]        # 0x14001a070
   1400167e8:	mov    ecx,eax
   1400167ea:	call   0x14000be30
   1400167ef:	or     ebx,0xffffffff
   1400167f2:	jmp    0x1400169c1
   1400167f7:	cmp    eax,ebx
   1400167f9:	mov    ebx,DWORD PTR [rbp-0x20]
   1400167fc:	lea    rax,[rip+0xfffffffffffe97fd]        # 0x140000000
   140016803:	mov    rax,QWORD PTR [rax+r15*8+0x25a80]
   14001680b:	setne  dil
   14001680f:	add    r12d,r12d
   140016812:	mov    DWORD PTR [rax+rsi*1+0x48],edi
   140016816:	jmp    0x1400169c1
   14001681b:	test   edx,edx
   14001681d:	mov    edx,0xa
   140016822:	je     0x140016831
   140016824:	cmp    WORD PTR [r14],dx
   140016828:	jne    0x140016831
   14001682a:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   14001682f:	jmp    0x140016836
   140016831:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   140016836:	movsxd rax,r12d
   140016839:	mov    rbx,r14
   14001683c:	mov    r13,r14
   14001683f:	add    rax,r14
   140016842:	mov    QWORD PTR [rbp+0x60],rax
   140016846:	cmp    r14,rax
   140016849:	jae    0x1400169b4
   14001684f:	mov    r12d,0xd
   140016855:	movzx  eax,WORD PTR [r13+0x0]
   14001685a:	cmp    ax,0x1a
   14001685e:	je     0x140016992
   140016864:	cmp    ax,r12w
   140016868:	je     0x14001687a
   14001686a:	mov    WORD PTR [rbx],ax
   14001686d:	add    rbx,0x2
   140016871:	add    r13,0x2
   140016875:	jmp    0x140016986
   14001687a:	mov    rax,QWORD PTR [rbp+0x60]
   14001687e:	add    rax,0xfffffffffffffffe
   140016882:	cmp    r13,rax
   140016885:	jae    0x1400168a1
   140016887:	lea    rax,[r13+0x2]
   14001688b:	cmp    WORD PTR [rax],dx
   14001688e:	jne    0x140016899
   140016890:	add    r13,0x4
   140016894:	jmp    0x140016946
   140016899:	mov    r13,rax
   14001689c:	jmp    0x14001697e
   1400168a1:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   1400168a9:	lea    r9,[rbp-0x24]
   1400168ad:	lea    rdx,[rbp-0x28]
   1400168b1:	mov    rcx,QWORD PTR [rcx+rsi*1]
   1400168b5:	mov    r8d,0x2
   1400168bb:	add    r13,0x2
   1400168bf:	mov    QWORD PTR [rsp+0x20],rdi
   1400168c4:	call   QWORD PTR [rip+0x3a2e]        # 0x14001a2f8
   1400168ca:	test   eax,eax
   1400168cc:	jne    0x1400168dc
   1400168ce:	call   QWORD PTR [rip+0x379c]        # 0x14001a070
   1400168d4:	test   eax,eax
   1400168d6:	jne    0x140016972
   1400168dc:	cmp    DWORD PTR [rbp-0x24],edi
   1400168df:	je     0x140016972
   1400168e5:	lea    r8,[rip+0xfffffffffffe9714]        # 0x140000000
   1400168ec:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   1400168f4:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   1400168f9:	je     0x140016936
   1400168fb:	mov    edx,0xa
   140016900:	cmp    WORD PTR [rbp-0x28],dx
   140016904:	je     0x140016946
   140016906:	mov    WORD PTR [rbx],r12w
   14001690a:	mov    al,BYTE PTR [rbp-0x28]
   14001690d:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   140016915:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   140016919:	mov    al,BYTE PTR [rbp-0x27]
   14001691c:	mov    rcx,QWORD PTR [r8+r15*8+0x25a80]
   140016924:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   140016928:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   140016930:	mov    BYTE PTR [rax+rsi*1+0x3a],dl
   140016934:	jmp    0x140016982
   140016936:	cmp    rbx,r14
   140016939:	jne    0x14001694b
   14001693b:	mov    edx,0xa
   140016940:	cmp    WORD PTR [rbp-0x28],dx
   140016944:	jne    0x14001694b
   140016946:	mov    WORD PTR [rbx],dx
   140016949:	jmp    0x140016982
   14001694b:	mov    ecx,DWORD PTR [rbp+0x48]
   14001694e:	mov    rdx,0xfffffffffffffffe
   140016955:	lea    r8d,[rdx+0x3]
   140016959:	call   0x140015e2c
   14001695e:	mov    edx,0xa
   140016963:	lea    r8,[rip+0xfffffffffffe9696]        # 0x140000000
   14001696a:	cmp    WORD PTR [rbp-0x28],dx
   14001696e:	je     0x140016986
   140016970:	jmp    0x14001697e
   140016972:	mov    edx,0xa
   140016977:	lea    r8,[rip+0xfffffffffffe9682]        # 0x140000000
   14001697e:	mov    WORD PTR [rbx],r12w
   140016982:	add    rbx,0x2
   140016986:	cmp    r13,QWORD PTR [rbp+0x60]
   14001698a:	jb     0x140016855
   140016990:	jmp    0x1400169b4
   140016992:	mov    rax,QWORD PTR [r8+r15*8+0x25a80]
   14001699a:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   14001699f:	jne    0x1400169a8
   1400169a1:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   1400169a6:	jmp    0x1400169b4
   1400169a8:	movzx  eax,WORD PTR [r13+0x0]
   1400169ad:	mov    WORD PTR [rbx],ax
   1400169b0:	add    rbx,0x2
   1400169b4:	mov    r12d,ebx
   1400169b7:	sub    r12d,r14d
   1400169ba:	mov    ebx,DWORD PTR [rbp-0x20]
   1400169bd:	mov    r13,QWORD PTR [rbp+0x50]
   1400169c1:	cmp    r14,r13
   1400169c4:	je     0x1400169ce
   1400169c6:	mov    rcx,r14
   1400169c9:	call   0x14000b490
   1400169ce:	cmp    ebx,0xfffffffe
   1400169d1:	cmove  ebx,r12d
   1400169d5:	mov    eax,ebx
   1400169d7:	jmp    0x140016a32
   1400169d9:	call   QWORD PTR [rip+0x3691]        # 0x14001a070
   1400169df:	cmp    eax,0x5
   1400169e2:	jne    0x1400169ff
   1400169e4:	call   0x14000bdf0
   1400169e9:	mov    DWORD PTR [rax],0x9
   1400169ef:	call   0x14000be10
   1400169f4:	mov    DWORD PTR [rax],0x5
   1400169fa:	jmp    0x140016740
   1400169ff:	cmp    eax,0x6d
   140016a02:	jne    0x140016a08
   140016a04:	mov    ebx,edi
   140016a06:	jmp    0x1400169bd
   140016a08:	mov    ecx,eax
   140016a0a:	call   0x14000be30
   140016a0f:	jmp    0x140016740
   140016a14:	xor    eax,eax
   140016a16:	jmp    0x140016a32
   140016a18:	call   0x14000be10
   140016a1d:	mov    DWORD PTR [rax],edi
   140016a1f:	call   0x14000bdf0
   140016a24:	mov    DWORD PTR [rax],0x9
   140016a2a:	call   0x14000d04c
   140016a2f:	or     eax,0xffffffff
   140016a32:	add    rsp,0x58
   140016a36:	pop    r15
   140016a38:	pop    r14
   140016a3a:	pop    r13
   140016a3c:	pop    r12
   140016a3e:	pop    rdi
   140016a3f:	pop    rsi
   140016a40:	pop    rbx
   140016a41:	pop    rbp
   140016a42:	ret    
   140016a43:	int3   
   140016a44:	mov    QWORD PTR [rsp+0x10],rbx
   140016a49:	mov    QWORD PTR [rsp+0x18],rsi
   140016a4e:	mov    DWORD PTR [rsp+0x8],ecx
   140016a52:	push   rdi
   140016a53:	push   r12
   140016a55:	push   r13
   140016a57:	push   r14
   140016a59:	push   r15
   140016a5b:	sub    rsp,0x20
   140016a5f:	mov    esi,r8d
   140016a62:	mov    r13,rdx
   140016a65:	movsxd rdi,ecx
   140016a68:	cmp    edi,0xfffffffe
   140016a6b:	jne    0x140016a86
   140016a6d:	call   0x14000be10
   140016a72:	xor    ebx,ebx
   140016a74:	mov    DWORD PTR [rax],ebx
   140016a76:	call   0x14000bdf0
   140016a7b:	mov    DWORD PTR [rax],0x9
   140016a81:	jmp    0x140016b44
   140016a86:	xor    ebx,ebx
   140016a88:	test   ecx,ecx
   140016a8a:	js     0x140016b2d
   140016a90:	cmp    edi,DWORD PTR [rip+0xefd6]        # 0x140025a6c
   140016a96:	jae    0x140016b2d
   140016a9c:	mov    r12,rdi
   140016a9f:	mov    r14,rdi
   140016aa2:	sar    r14,0x5
   140016aa6:	lea    r15,[rip+0xefd3]        # 0x140025a80
   140016aad:	and    r12d,0x1f
   140016ab1:	imul   r12,r12,0x58
   140016ab5:	mov    rax,QWORD PTR [r15+r14*8]
   140016ab9:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   140016abf:	and    ecx,0x1
   140016ac2:	je     0x140016b2d
   140016ac4:	mov    eax,ebx
   140016ac6:	cmp    r8d,0x7fffffff
   140016acd:	setbe  al
   140016ad0:	test   eax,eax
   140016ad2:	jne    0x140016ae8
   140016ad4:	call   0x14000be10
   140016ad9:	mov    DWORD PTR [rax],ebx
   140016adb:	call   0x14000bdf0
   140016ae0:	mov    DWORD PTR [rax],0x16
   140016ae6:	jmp    0x140016b3f
   140016ae8:	mov    ecx,edi
   140016aea:	call   0x140011784
   140016aef:	nop
   140016af0:	mov    rax,QWORD PTR [r15+r14*8]
   140016af4:	test   BYTE PTR [rax+r12*1+0x8],0x1
   140016afa:	je     0x140016b0d
   140016afc:	mov    r8d,esi
   140016aff:	mov    rdx,r13
   140016b02:	mov    ecx,edi
   140016b04:	call   0x140016320
   140016b09:	mov    ebx,eax
   140016b0b:	jmp    0x140016b22
   140016b0d:	call   0x14000bdf0
   140016b12:	mov    DWORD PTR [rax],0x9
   140016b18:	call   0x14000be10
   140016b1d:	mov    DWORD PTR [rax],ebx
   140016b1f:	or     ebx,0xffffffff
   140016b22:	mov    ecx,edi
   140016b24:	call   0x14001182c
   140016b29:	mov    eax,ebx
   140016b2b:	jmp    0x140016b47
   140016b2d:	call   0x14000be10
   140016b32:	mov    DWORD PTR [rax],ebx
   140016b34:	call   0x14000bdf0
   140016b39:	mov    DWORD PTR [rax],0x9
   140016b3f:	call   0x14000d04c
   140016b44:	or     eax,0xffffffff
   140016b47:	mov    rbx,QWORD PTR [rsp+0x58]
   140016b4c:	mov    rsi,QWORD PTR [rsp+0x60]
   140016b51:	add    rsp,0x20
   140016b55:	pop    r15
   140016b57:	pop    r14
   140016b59:	pop    r13
   140016b5b:	pop    r12
   140016b5d:	pop    rdi
   140016b5e:	ret    
   140016b5f:	int3   
   140016b60:	mov    rax,rsp
   140016b63:	mov    QWORD PTR [rax+0x8],rbx
   140016b67:	mov    QWORD PTR [rax+0x10],rsi
   140016b6b:	mov    QWORD PTR [rax+0x18],rdi
   140016b6f:	mov    QWORD PTR [rax+0x20],r12
   140016b73:	push   rbp
   140016b74:	mov    rbp,rsp
   140016b77:	sub    rsp,0x40
   140016b7b:	mov    rdi,rcx
   140016b7e:	mov    rsi,rdx
   140016b81:	lea    rcx,[rbp-0x20]
   140016b85:	mov    rdx,r9
   140016b88:	mov    rbx,r8
   140016b8b:	call   0x14000c724
   140016b90:	xor    r12d,r12d
   140016b93:	test   rbx,rbx
   140016b96:	jne    0x140016bb0
   140016b98:	cmp    BYTE PTR [rbp-0x8],r12b
   140016b9c:	je     0x140016ba9
   140016b9e:	mov    rax,QWORD PTR [rbp-0x10]
   140016ba2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016ba9:	xor    eax,eax
   140016bab:	jmp    0x140016d2c
   140016bb0:	mov    rcx,QWORD PTR [rbp-0x18]
   140016bb4:	cmp    DWORD PTR [rcx+0x8],r12d
   140016bb8:	jne    0x140016bcd
   140016bba:	mov    r8,rbx
   140016bbd:	mov    rdx,rsi
   140016bc0:	mov    rcx,rdi
   140016bc3:	call   0x14001958c
   140016bc8:	jmp    0x140016d1b
   140016bcd:	test   rdi,rdi
   140016bd0:	jne    0x140016bfd
   140016bd2:	call   0x14000bdf0
   140016bd7:	mov    DWORD PTR [rax],0x16
   140016bdd:	call   0x14000d04c
   140016be2:	cmp    BYTE PTR [rbp-0x8],r12b
   140016be6:	je     0x140016bf3
   140016be8:	mov    rax,QWORD PTR [rbp-0x10]
   140016bec:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016bf3:	mov    eax,0x7fffffff
   140016bf8:	jmp    0x140016d2c
   140016bfd:	test   rsi,rsi
   140016c00:	je     0x140016bd2
   140016c02:	mov    r9b,0x4
   140016c05:	movzx  edx,BYTE PTR [rdi]
   140016c08:	dec    rbx
   140016c0b:	inc    rdi
   140016c0e:	test   BYTE PTR [rdx+rcx*1+0x1d],r9b
   140016c13:	je     0x140016c6c
   140016c15:	test   rbx,rbx
   140016c18:	jne    0x140016c31
   140016c1a:	movzx  eax,BYTE PTR [rsi]
   140016c1d:	movzx  edx,r12w
   140016c21:	test   BYTE PTR [rax+rcx*1+0x1d],r9b
   140016c26:	jne    0x140016b98
   140016c2c:	jmp    0x140016cf8
   140016c31:	cmp    BYTE PTR [rdi],r12b
   140016c34:	jne    0x140016c3b
   140016c36:	mov    edx,r12d
   140016c39:	jmp    0x140016c7e
   140016c3b:	movzx  eax,BYTE PTR [rdi]
   140016c3e:	shl    dx,0x8
   140016c42:	inc    rdi
   140016c45:	or     dx,ax
   140016c48:	cmp    dx,WORD PTR [rcx+0x10]
   140016c4c:	jb     0x140016c5a
   140016c4e:	cmp    dx,WORD PTR [rcx+0x12]
   140016c52:	ja     0x140016c5a
   140016c54:	add    dx,WORD PTR [rcx+0x14]
   140016c58:	jmp    0x140016c7e
   140016c5a:	cmp    dx,WORD PTR [rcx+0x16]
   140016c5e:	jb     0x140016c7e
   140016c60:	cmp    dx,WORD PTR [rcx+0x18]
   140016c64:	ja     0x140016c7e
   140016c66:	add    dx,WORD PTR [rcx+0x1a]
   140016c6a:	jmp    0x140016c7e
   140016c6c:	movzx  eax,dx
   140016c6f:	test   BYTE PTR [rax+rcx*1+0x1d],0x10
   140016c74:	je     0x140016c7e
   140016c76:	movzx  edx,BYTE PTR [rax+rcx*1+0x11d]
   140016c7e:	movzx  r8d,BYTE PTR [rsi]
   140016c82:	inc    rsi
   140016c85:	mov    eax,r8d
   140016c88:	test   BYTE PTR [r8+rcx*1+0x1d],r9b
   140016c8d:	je     0x140016cdf
   140016c8f:	test   rbx,rbx
   140016c92:	jne    0x140016c99
   140016c94:	mov    eax,r12d
   140016c97:	jmp    0x140016cf8
   140016c99:	dec    rbx
   140016c9c:	cmp    BYTE PTR [rsi],r12b
   140016c9f:	jne    0x140016ca7
   140016ca1:	movzx  eax,r12w
   140016ca5:	jmp    0x140016cf8
   140016ca7:	movzx  eax,BYTE PTR [rsi]
   140016caa:	shl    r8w,0x8
   140016caf:	inc    rsi
   140016cb2:	or     r8w,ax
   140016cb6:	movzx  eax,r8w
   140016cba:	cmp    r8w,WORD PTR [rcx+0x10]
   140016cbf:	jb     0x140016ccd
   140016cc1:	cmp    ax,WORD PTR [rcx+0x12]
   140016cc5:	ja     0x140016ccd
   140016cc7:	add    ax,WORD PTR [rcx+0x14]
   140016ccb:	jmp    0x140016cf8
   140016ccd:	cmp    ax,WORD PTR [rcx+0x16]
   140016cd1:	jb     0x140016cf8
   140016cd3:	cmp    ax,WORD PTR [rcx+0x18]
   140016cd7:	ja     0x140016cf8
   140016cd9:	add    ax,WORD PTR [rcx+0x1a]
   140016cdd:	jmp    0x140016cf8
   140016cdf:	movzx  eax,r8w
   140016ce3:	test   BYTE PTR [rax+rcx*1+0x1d],0x10
   140016ce8:	je     0x140016cf4
   140016cea:	movzx  eax,BYTE PTR [rax+rcx*1+0x11d]
   140016cf2:	jmp    0x140016cf8
   140016cf4:	movzx  eax,r8w
   140016cf8:	cmp    ax,dx
   140016cfb:	jne    0x140016d14
   140016cfd:	test   dx,dx
   140016d00:	je     0x140016b98
   140016d06:	test   rbx,rbx
   140016d09:	jne    0x140016c05
   140016d0f:	jmp    0x140016b98
   140016d14:	sbb    eax,eax
   140016d16:	and    eax,0x2
   140016d19:	dec    eax
   140016d1b:	cmp    BYTE PTR [rbp-0x8],r12b
   140016d1f:	je     0x140016d2c
   140016d21:	mov    rcx,QWORD PTR [rbp-0x10]
   140016d25:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140016d2c:	mov    rbx,QWORD PTR [rsp+0x50]
   140016d31:	mov    rsi,QWORD PTR [rsp+0x58]
   140016d36:	mov    rdi,QWORD PTR [rsp+0x60]
   140016d3b:	mov    r12,QWORD PTR [rsp+0x68]
   140016d40:	add    rsp,0x40
   140016d44:	pop    rbp
   140016d45:	ret    
   140016d46:	int3   
   140016d47:	int3   
   140016d48:	xor    r9d,r9d
   140016d4b:	jmp    0x140016b60
   140016d50:	mov    rax,rsp
   140016d53:	mov    QWORD PTR [rax+0x8],rbx
   140016d57:	mov    QWORD PTR [rax+0x10],rsi
   140016d5b:	mov    QWORD PTR [rax+0x18],rdi
   140016d5f:	mov    QWORD PTR [rax+0x20],r12
   140016d63:	push   rbp
   140016d64:	mov    rbp,rsp
   140016d67:	sub    rsp,0x40
   140016d6b:	xor    r12d,r12d
   140016d6e:	mov    rbx,r8
   140016d71:	mov    rsi,rdx
   140016d74:	mov    rdi,rcx
   140016d77:	test   r8,r8
   140016d7a:	jne    0x140016d83
   140016d7c:	xor    eax,eax
   140016d7e:	jmp    0x140016e96
   140016d83:	lea    rcx,[rbp-0x20]
   140016d87:	mov    rdx,r9
   140016d8a:	call   0x14000c724
   140016d8f:	mov    r11,QWORD PTR [rbp-0x18]
   140016d93:	cmp    DWORD PTR [r11+0x8],r12d
   140016d97:	jne    0x140016dac
   140016d99:	mov    r8,rbx
   140016d9c:	mov    rdx,rsi
   140016d9f:	mov    rcx,rdi
   140016da2:	call   0x14000b5a0
   140016da7:	jmp    0x140016e85
   140016dac:	test   rdi,rdi
   140016daf:	jne    0x140016ddc
   140016db1:	call   0x14000bdf0
   140016db6:	mov    DWORD PTR [rax],0x16
   140016dbc:	call   0x14000d04c
   140016dc1:	cmp    BYTE PTR [rbp-0x8],r12b
   140016dc5:	je     0x140016dd2
   140016dc7:	mov    rax,QWORD PTR [rbp-0x10]
   140016dcb:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016dd2:	mov    eax,0x7fffffff
   140016dd7:	jmp    0x140016e96
   140016ddc:	test   rsi,rsi
   140016ddf:	je     0x140016db1
   140016de1:	mov    r8b,0x4
   140016de4:	movzx  ecx,BYTE PTR [rdi]
   140016de7:	dec    rbx
   140016dea:	inc    rdi
   140016ded:	test   BYTE PTR [rcx+r11*1+0x1d],r8b
   140016df2:	je     0x140016e23
   140016df4:	test   rbx,rbx
   140016df7:	jne    0x140016e0b
   140016df9:	movzx  eax,BYTE PTR [rsi]
   140016dfc:	mov    ecx,r12d
   140016dff:	test   BYTE PTR [rax+r11*1+0x1d],r8b
   140016e04:	jne    0x140016e64
   140016e06:	movzx  edx,ax
   140016e09:	jmp    0x140016e55
   140016e0b:	cmp    BYTE PTR [rdi],r12b
   140016e0e:	jne    0x140016e16
   140016e10:	movzx  ecx,r12w
   140016e14:	jmp    0x140016e23
   140016e16:	movzx  eax,BYTE PTR [rdi]
   140016e19:	shl    cx,0x8
   140016e1d:	or     cx,ax
   140016e20:	inc    rdi
   140016e23:	movzx  edx,BYTE PTR [rsi]
   140016e26:	inc    rsi
   140016e29:	test   BYTE PTR [rdx+r11*1+0x1d],r8b
   140016e2e:	je     0x140016e55
   140016e30:	test   rbx,rbx
   140016e33:	jne    0x140016e3a
   140016e35:	mov    edx,r12d
   140016e38:	jmp    0x140016e55
   140016e3a:	dec    rbx
   140016e3d:	cmp    BYTE PTR [rsi],r12b
   140016e40:	jne    0x140016e48
   140016e42:	movzx  edx,r12w
   140016e46:	jmp    0x140016e55
   140016e48:	movzx  eax,BYTE PTR [rsi]
   140016e4b:	shl    dx,0x8
   140016e4f:	or     dx,ax
   140016e52:	inc    rsi
   140016e55:	cmp    dx,cx
   140016e58:	jne    0x140016e7e
   140016e5a:	test   cx,cx
   140016e5d:	je     0x140016e64
   140016e5f:	test   rbx,rbx
   140016e62:	jne    0x140016de4
   140016e64:	cmp    BYTE PTR [rbp-0x8],r12b
   140016e68:	je     0x140016d7c
   140016e6e:	mov    rax,QWORD PTR [rbp-0x10]
   140016e72:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016e79:	jmp    0x140016d7c
   140016e7e:	sbb    eax,eax
   140016e80:	and    eax,0x2
   140016e83:	dec    eax
   140016e85:	cmp    BYTE PTR [rbp-0x8],r12b
   140016e89:	je     0x140016e96
   140016e8b:	mov    rcx,QWORD PTR [rbp-0x10]
   140016e8f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140016e96:	mov    rbx,QWORD PTR [rsp+0x50]
   140016e9b:	mov    rsi,QWORD PTR [rsp+0x58]
   140016ea0:	mov    rdi,QWORD PTR [rsp+0x60]
   140016ea5:	mov    r12,QWORD PTR [rsp+0x68]
   140016eaa:	add    rsp,0x40
   140016eae:	pop    rbp
   140016eaf:	ret    
   140016eb0:	xor    r9d,r9d
   140016eb3:	jmp    0x140016d50
   140016eb8:	mov    WORD PTR [rsp+0x8],cx
   140016ebd:	sub    rsp,0x38
   140016ec1:	mov    rcx,QWORD PTR [rip+0xd840]        # 0x140024708
   140016ec8:	cmp    rcx,0xfffffffffffffffe
   140016ecc:	jne    0x140016eda
   140016ece:	call   0x1400195dc
   140016ed3:	mov    rcx,QWORD PTR [rip+0xd82e]        # 0x140024708
   140016eda:	cmp    rcx,0xffffffffffffffff
   140016ede:	jne    0x140016ee7
   140016ee0:	mov    eax,0xffff
   140016ee5:	jmp    0x140016f0c
   140016ee7:	and    QWORD PTR [rsp+0x20],0x0
   140016eed:	lea    r9,[rsp+0x48]
   140016ef2:	lea    rdx,[rsp+0x40]
   140016ef7:	mov    r8d,0x1
   140016efd:	call   QWORD PTR [rip+0x33fd]        # 0x14001a300
   140016f03:	test   eax,eax
   140016f05:	je     0x140016ee0
   140016f07:	movzx  eax,WORD PTR [rsp+0x40]
   140016f0c:	add    rsp,0x38
   140016f10:	ret    
   140016f11:	int3   
   140016f12:	int3   
   140016f13:	int3   
   140016f14:	int3   
   140016f15:	int3   
   140016f16:	int3   
   140016f17:	int3   
   140016f18:	int3   
   140016f19:	int3   
   140016f1a:	int3   
   140016f1b:	int3   
   140016f1c:	int3   
   140016f1d:	int3   
   140016f1e:	int3   
   140016f1f:	int3   
   140016f20:	int3   
   140016f21:	int3   
   140016f22:	int3   
   140016f23:	int3   
   140016f24:	int3   
   140016f25:	int3   
   140016f26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140016f30:	sub    rsp,0x10
   140016f34:	mov    QWORD PTR [rsp],r10
   140016f38:	mov    QWORD PTR [rsp+0x8],r11
   140016f3d:	xor    r11,r11
   140016f40:	lea    r10,[rsp+0x18]
   140016f45:	sub    r10,rax
   140016f48:	cmovb  r10,r11
   140016f4c:	mov    r11,QWORD PTR gs:0x10
   140016f55:	cmp    r10,r11
   140016f58:	jae    0x140016f70
   140016f5a:	and    r10w,0xf000
   140016f60:	lea    r11,[r11-0x1000]
   140016f67:	mov    BYTE PTR [r11],0x0
   140016f6b:	cmp    r10,r11
   140016f6e:	jne    0x140016f60
   140016f70:	mov    r10,QWORD PTR [rsp]
   140016f74:	mov    r11,QWORD PTR [rsp+0x8]
   140016f79:	add    rsp,0x10
   140016f7d:	ret    
   140016f7e:	int3   
   140016f7f:	int3   
   140016f80:	rex push rbx
   140016f82:	sub    rsp,0x30
   140016f86:	mov    rax,QWORD PTR [rip+0xc133]        # 0x1400230c0
   140016f8d:	xor    rax,rsp
   140016f90:	mov    QWORD PTR [rsp+0x28],rax
   140016f95:	test   ecx,ecx
   140016f97:	jne    0x140016fa0
   140016f99:	mov    eax,0x1
   140016f9e:	jmp    0x140016fd1
   140016fa0:	add    cx,0x40
   140016fa4:	mov    eax,0x3a
   140016fa9:	mov    DWORD PTR [rsp+0x24],0x5c
   140016fb1:	mov    WORD PTR [rsp+0x20],cx
   140016fb6:	lea    rcx,[rsp+0x20]
   140016fbb:	mov    WORD PTR [rsp+0x22],ax
   140016fc0:	call   QWORD PTR [rip+0x3342]        # 0x14001a308
   140016fc6:	test   eax,eax
   140016fc8:	je     0x140016fcf
   140016fca:	cmp    eax,0x1
   140016fcd:	jne    0x140016f99
   140016fcf:	xor    eax,eax
   140016fd1:	mov    rcx,QWORD PTR [rsp+0x28]
   140016fd6:	xor    rcx,rsp
   140016fd9:	call   0x14000a850
   140016fde:	add    rsp,0x30
   140016fe2:	pop    rbx
   140016fe3:	ret    
   140016fe4:	mov    QWORD PTR [rsp+0x10],rbx
   140016fe9:	push   rbp
   140016fea:	push   rsi
   140016feb:	push   rdi
   140016fec:	sub    rsp,0x20
   140016ff0:	mov    esi,r8d
   140016ff3:	mov    rbx,rdx
   140016ff6:	mov    edi,ecx
   140016ff8:	test   ecx,ecx
   140016ffa:	je     0x140017025
   140016ffc:	call   0x140016f80
   140017001:	test   eax,eax
   140017003:	jne    0x14001702c
   140017005:	call   0x14000be10
   14001700a:	mov    DWORD PTR [rax],0xf
   140017010:	call   0x14000bdf0
   140017015:	mov    DWORD PTR [rax],0xd
   14001701b:	call   0x14000d04c
   140017020:	jmp    0x140017100
   140017025:	call   0x1400134b8
   14001702a:	mov    edi,eax
   14001702c:	test   rbx,rbx
   14001702f:	je     0x140017049
   140017031:	test   esi,esi
   140017033:	jg     0x140017042
   140017035:	call   0x14000bdf0
   14001703a:	mov    DWORD PTR [rax],0x16
   140017040:	jmp    0x14001701b
   140017042:	mov    ebp,esi
   140017044:	mov    BYTE PTR [rbx],0x0
   140017047:	jmp    0x14001704b
   140017049:	xor    ebp,ebp
   14001704b:	test   edi,edi
   14001704d:	je     0x140017066
   14001704f:	add    dil,0x40
   140017053:	mov    WORD PTR [rsp+0x41],0x2e3a
   14001705a:	mov    BYTE PTR [rsp+0x43],0x0
   14001705f:	mov    BYTE PTR [rsp+0x40],dil
   140017064:	jmp    0x14001706d
   140017066:	mov    WORD PTR [rsp+0x40],0x2e
   14001706d:	lea    r9,[rsp+0x58]
   140017072:	lea    rcx,[rsp+0x40]
   140017077:	mov    r8,rbx
   14001707a:	mov    edx,ebp
   14001707c:	call   QWORD PTR [rip+0x31fe]        # 0x14001a280
   140017082:	test   eax,eax
   140017084:	je     0x1400170f3
   140017086:	test   rbx,rbx
   140017089:	je     0x1400170a4
   14001708b:	cmp    eax,ebp
   14001708d:	jge    0x140017094
   14001708f:	mov    rax,rbx
   140017092:	jmp    0x140017102
   140017094:	call   0x14000bdf0
   140017099:	mov    DWORD PTR [rax],0x22
   14001709f:	mov    BYTE PTR [rbx],0x0
   1400170a2:	jmp    0x140017100
   1400170a4:	cmp    eax,esi
   1400170a6:	mov    edx,0x1
   1400170ab:	cmovg  esi,eax
   1400170ae:	movsxd rcx,esi
   1400170b1:	call   0x14000eb44
   1400170b6:	mov    rbx,rax
   1400170b9:	test   rax,rax
   1400170bc:	jne    0x1400170d6
   1400170be:	call   0x14000bdf0
   1400170c3:	mov    DWORD PTR [rax],0xc
   1400170c9:	call   0x14000be10
   1400170ce:	mov    DWORD PTR [rax],0x8
   1400170d4:	jmp    0x140017100
   1400170d6:	lea    r9,[rsp+0x58]
   1400170db:	lea    rcx,[rsp+0x40]
   1400170e0:	mov    r8,rax
   1400170e3:	mov    edx,esi
   1400170e5:	call   QWORD PTR [rip+0x3195]        # 0x14001a280
   1400170eb:	test   eax,eax
   1400170ed:	je     0x1400170f3
   1400170ef:	cmp    eax,esi
   1400170f1:	jl     0x14001708f
   1400170f3:	call   QWORD PTR [rip+0x2f77]        # 0x14001a070
   1400170f9:	mov    ecx,eax
   1400170fb:	call   0x14000be30
   140017100:	xor    eax,eax
   140017102:	mov    rbx,QWORD PTR [rsp+0x48]
   140017107:	add    rsp,0x20
   14001710b:	pop    rdi
   14001710c:	pop    rsi
   14001710d:	pop    rbp
   14001710e:	ret    
   14001710f:	int3   
   140017110:	mov    QWORD PTR [rsp+0x8],rbx
   140017115:	push   rdi
   140017116:	sub    rsp,0x20
   14001711a:	mov    ebx,edx
   14001711c:	mov    rdi,rcx
   14001711f:	mov    ecx,0x7
   140017124:	call   0x14000cb58
   140017129:	nop
   14001712a:	mov    r8d,ebx
   14001712d:	mov    rdx,rdi
   140017130:	xor    ecx,ecx
   140017132:	call   0x140016fe4
   140017137:	mov    rbx,rax
   14001713a:	mov    ecx,0x7
   14001713f:	call   0x14000ca58
   140017144:	mov    rax,rbx
   140017147:	mov    rbx,QWORD PTR [rsp+0x30]
   14001714c:	add    rsp,0x20
   140017150:	pop    rdi
   140017151:	ret    
   140017152:	int3   
   140017153:	int3   
   140017154:	mov    QWORD PTR [rsp+0x10],rbx
   140017159:	mov    QWORD PTR [rsp+0x18],rsi
   14001715e:	push   rbp
   14001715f:	push   rdi
   140017160:	push   r12
   140017162:	push   r14
   140017164:	push   r15
   140017166:	mov    rbp,rsp
   140017169:	sub    rsp,0x70
   14001716d:	mov    rdi,rcx
   140017170:	mov    rsi,rdx
   140017173:	lea    rcx,[rbp-0x20]
   140017177:	mov    rdx,r8
   14001717a:	call   0x14000c724
   14001717f:	xor    r12d,r12d
   140017182:	test   rdi,rdi
   140017185:	jne    0x1400171b2
   140017187:	call   0x14000bdf0
   14001718c:	mov    DWORD PTR [rax],0x16
   140017192:	call   0x14000d04c
   140017197:	cmp    BYTE PTR [rbp-0x8],r12b
   14001719b:	je     0x1400171a8
   14001719d:	mov    rax,QWORD PTR [rbp-0x10]
   1400171a1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400171a8:	mov    eax,0x7fffffff
   1400171ad:	jmp    0x140017346
   1400171b2:	test   rsi,rsi
   1400171b5:	je     0x140017187
   1400171b7:	mov    rdx,QWORD PTR [rbp-0x18]
   1400171bb:	cmp    DWORD PTR [rdx+0x8],r12d
   1400171bf:	jne    0x1400171d5
   1400171c1:	lea    r8,[rbp-0x20]
   1400171c5:	mov    rdx,rsi
   1400171c8:	mov    rcx,rdi
   1400171cb:	call   0x140019678
   1400171d0:	jmp    0x140017335
   1400171d5:	mov    r14d,0x2
   1400171db:	mov    r15d,0x100
   1400171e1:	movzx  ebx,BYTE PTR [rdi]
   1400171e4:	inc    rdi
   1400171e7:	test   BYTE PTR [rbx+rdx*1+0x1d],0x4
   1400171ec:	je     0x14001725e
   1400171ee:	cmp    BYTE PTR [rdi],r12b
   1400171f1:	jne    0x1400171f9
   1400171f3:	movzx  ebx,r12w
   1400171f7:	jmp    0x140017270
   1400171f9:	mov    eax,DWORD PTR [rdx+0x4]
   1400171fc:	mov    edx,DWORD PTR [rdx+0xc]
   1400171ff:	mov    DWORD PTR [rsp+0x40],0x1
   140017207:	mov    DWORD PTR [rsp+0x38],eax
   14001720b:	lea    rax,[rbp+0x30]
   14001720f:	mov    DWORD PTR [rsp+0x30],r14d
   140017214:	mov    QWORD PTR [rsp+0x28],rax
   140017219:	lea    r9,[rdi-0x1]
   14001721d:	lea    rcx,[rbp-0x20]
   140017221:	mov    r8d,0x200
   140017227:	mov    DWORD PTR [rsp+0x20],r14d
   14001722c:	call   0x1400186dc
   140017231:	cmp    eax,0x1
   140017234:	jne    0x14001723c
   140017236:	movzx  ebx,BYTE PTR [rbp+0x30]
   14001723a:	jmp    0x140017255
   14001723c:	cmp    eax,r14d
   14001723f:	jne    0x14001731e
   140017245:	movzx  ebx,BYTE PTR [rbp+0x30]
   140017249:	movzx  eax,BYTE PTR [rbp+0x31]
   14001724d:	imul   bx,r15w
   140017252:	add    bx,ax
   140017255:	mov    rdx,QWORD PTR [rbp-0x18]
   140017259:	inc    rdi
   14001725c:	jmp    0x140017270
   14001725e:	movzx  eax,bx
   140017261:	test   BYTE PTR [rax+rdx*1+0x1d],0x10
   140017266:	je     0x140017270
   140017268:	movzx  ebx,BYTE PTR [rax+rdx*1+0x11d]
   140017270:	movzx  ecx,BYTE PTR [rsi]
   140017273:	inc    rsi
   140017276:	test   BYTE PTR [rcx+rdx*1+0x1d],0x4
   14001727b:	je     0x1400172e9
   14001727d:	cmp    BYTE PTR [rsi],r12b
   140017280:	jne    0x140017288
   140017282:	movzx  ecx,r12w
   140017286:	jmp    0x1400172fb
   140017288:	mov    eax,DWORD PTR [rdx+0x4]
   14001728b:	mov    edx,DWORD PTR [rdx+0xc]
   14001728e:	mov    DWORD PTR [rsp+0x40],0x1
   140017296:	mov    DWORD PTR [rsp+0x38],eax
   14001729a:	lea    rax,[rbp+0x30]
   14001729e:	mov    DWORD PTR [rsp+0x30],r14d
   1400172a3:	mov    QWORD PTR [rsp+0x28],rax
   1400172a8:	lea    r9,[rsi-0x1]
   1400172ac:	lea    rcx,[rbp-0x20]
   1400172b0:	mov    r8d,0x200
   1400172b6:	mov    DWORD PTR [rsp+0x20],r14d
   1400172bb:	call   0x1400186dc
   1400172c0:	cmp    eax,0x1
   1400172c3:	jne    0x1400172cb
   1400172c5:	movzx  ecx,BYTE PTR [rbp+0x30]
   1400172c9:	jmp    0x1400172e0
   1400172cb:	cmp    eax,r14d
   1400172ce:	jne    0x14001731e
   1400172d0:	movzx  ecx,BYTE PTR [rbp+0x30]
   1400172d4:	movzx  eax,BYTE PTR [rbp+0x31]
   1400172d8:	imul   cx,r15w
   1400172dd:	add    cx,ax
   1400172e0:	mov    rdx,QWORD PTR [rbp-0x18]
   1400172e4:	inc    rsi
   1400172e7:	jmp    0x1400172fb
   1400172e9:	movzx  eax,cx
   1400172ec:	test   BYTE PTR [rax+rdx*1+0x1d],0x10
   1400172f1:	je     0x1400172fb
   1400172f3:	movzx  ecx,BYTE PTR [rax+rdx*1+0x11d]
   1400172fb:	cmp    cx,bx
   1400172fe:	jne    0x14001732e
   140017300:	test   bx,bx
   140017303:	jne    0x1400171e1
   140017309:	cmp    BYTE PTR [rbp-0x8],r12b
   14001730d:	je     0x14001731a
   14001730f:	mov    rax,QWORD PTR [rbp-0x10]
   140017313:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001731a:	xor    eax,eax
   14001731c:	jmp    0x140017346
   14001731e:	call   0x14000bdf0
   140017323:	mov    DWORD PTR [rax],0x16
   140017329:	jmp    0x140017197
   14001732e:	sbb    eax,eax
   140017330:	and    eax,r14d
   140017333:	dec    eax
   140017335:	cmp    BYTE PTR [rbp-0x8],r12b
   140017339:	je     0x140017346
   14001733b:	mov    rcx,QWORD PTR [rbp-0x10]
   14001733f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140017346:	lea    r11,[rsp+0x70]
   14001734b:	mov    rbx,QWORD PTR [r11+0x38]
   14001734f:	mov    rsi,QWORD PTR [r11+0x40]
   140017353:	mov    rsp,r11
   140017356:	pop    r15
   140017358:	pop    r14
   14001735a:	pop    r12
   14001735c:	pop    rdi
   14001735d:	pop    rbp
   14001735e:	ret    
   14001735f:	int3   
   140017360:	xor    r8d,r8d
   140017363:	jmp    0x140017154
   140017368:	mov    QWORD PTR [rsp+0x8],rbx
   14001736d:	mov    QWORD PTR [rsp+0x10],rsi
   140017372:	push   rdi
   140017373:	sub    rsp,0x40
   140017377:	mov    rbx,rcx
   14001737a:	mov    esi,edx
   14001737c:	lea    rcx,[rsp+0x20]
   140017381:	mov    rdx,r8
   140017384:	xor    edi,edi
   140017386:	call   0x14000c724
   14001738b:	test   rbx,rbx
   14001738e:	jne    0x1400173b7
   140017390:	call   0x14000bdf0
   140017395:	mov    DWORD PTR [rax],0x16
   14001739b:	call   0x14000d04c
   1400173a0:	cmp    BYTE PTR [rsp+0x38],dil
   1400173a5:	je     0x1400173b3
   1400173a7:	mov    rax,QWORD PTR [rsp+0x30]
   1400173ac:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400173b3:	xor    eax,eax
   1400173b5:	jmp    0x140017435
   1400173b7:	mov    r8,QWORD PTR [rsp+0x28]
   1400173bc:	cmp    DWORD PTR [r8+0x8],edi
   1400173c0:	jne    0x1400173e1
   1400173c2:	mov    edx,esi
   1400173c4:	mov    rcx,rbx
   1400173c7:	call   0x14000bb58
   1400173cc:	cmp    BYTE PTR [rsp+0x38],dil
   1400173d1:	je     0x140017435
   1400173d3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400173d8:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400173df:	jmp    0x140017435
   1400173e1:	movzx  ecx,BYTE PTR [rbx]
   1400173e4:	mov    edx,ecx
   1400173e6:	test   BYTE PTR [rcx+r8*1+0x1d],0x4
   1400173ec:	je     0x140017413
   1400173ee:	inc    rbx
   1400173f1:	mov    cl,BYTE PTR [rbx]
   1400173f3:	test   cl,cl
   1400173f5:	je     0x140017409
   1400173f7:	shl    edx,0x8
   1400173fa:	movzx  eax,cl
   1400173fd:	or     edx,eax
   1400173ff:	cmp    esi,edx
   140017401:	jne    0x140017419
   140017403:	lea    rdi,[rbx-0x1]
   140017407:	jmp    0x140017419
   140017409:	test   rdi,rdi
   14001740c:	jne    0x140017419
   14001740e:	mov    rdi,rbx
   140017411:	jmp    0x140017419
   140017413:	cmp    esi,ecx
   140017415:	cmove  rdi,rbx
   140017419:	inc    rbx
   14001741c:	test   cl,cl
   14001741e:	jne    0x1400173e1
   140017420:	cmp    BYTE PTR [rsp+0x38],cl
   140017424:	je     0x140017432
   140017426:	mov    rcx,QWORD PTR [rsp+0x30]
   14001742b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140017432:	mov    rax,rdi
   140017435:	mov    rbx,QWORD PTR [rsp+0x50]
   14001743a:	mov    rsi,QWORD PTR [rsp+0x58]
   14001743f:	add    rsp,0x40
   140017443:	pop    rdi
   140017444:	ret    
   140017445:	int3   
   140017446:	int3   
   140017447:	int3   
   140017448:	xor    r8d,r8d
   14001744b:	jmp    0x140017368
   140017450:	mov    rax,rsp
   140017453:	mov    QWORD PTR [rax+0x8],rbx
   140017457:	mov    QWORD PTR [rax+0x10],rbp
   14001745b:	mov    QWORD PTR [rax+0x18],rsi
   14001745f:	mov    QWORD PTR [rax+0x20],rdi
   140017463:	push   r12
   140017465:	sub    rsp,0x20
   140017469:	mov    r10,QWORD PTR [r9+0x38]
   14001746d:	mov    rsi,rdx
   140017470:	mov    r12,r8
   140017473:	mov    eax,DWORD PTR [r10]
   140017476:	mov    rbp,rcx
   140017479:	mov    rdx,r9
   14001747c:	add    rax,rax
   14001747f:	mov    rcx,rsi
   140017482:	mov    rdi,r9
   140017485:	lea    rbx,[r10+rax*8+0x4]
   14001748a:	mov    r8,rbx
   14001748d:	call   0x14000a64c
   140017492:	mov    r11d,DWORD PTR [rbx]
   140017495:	mov    r10d,DWORD PTR [rbp+0x4]
   140017499:	mov    eax,r11d
   14001749c:	and    r11d,0x2
   1400174a0:	mov    edx,0x1
   1400174a5:	and    eax,edx
   1400174a7:	and    r10b,0x66
   1400174ab:	cmove  r11d,eax
   1400174af:	test   r11d,r11d
   1400174b2:	je     0x1400174c7
   1400174b4:	mov    r9,rdi
   1400174b7:	mov    r8,r12
   1400174ba:	mov    rdx,rsi
   1400174bd:	mov    rcx,rbp
   1400174c0:	call   0x14000d724
   1400174c5:	mov    edx,eax
   1400174c7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400174cc:	mov    rbp,QWORD PTR [rsp+0x38]
   1400174d1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400174d6:	mov    rdi,QWORD PTR [rsp+0x48]
   1400174db:	mov    eax,edx
   1400174dd:	add    rsp,0x20
   1400174e1:	pop    r12
   1400174e3:	ret    
   1400174e4:	mov    rax,rsp
   1400174e7:	mov    QWORD PTR [rax+0x8],rbx
   1400174eb:	mov    QWORD PTR [rax+0x10],rbp
   1400174ef:	mov    QWORD PTR [rax+0x18],rsi
   1400174f3:	mov    QWORD PTR [rax+0x20],rdi
   1400174f7:	push   r12
   1400174f9:	push   r13
   1400174fb:	push   r15
   1400174fd:	sub    rsp,0x20
   140017501:	mov    rbp,rdx
   140017504:	xor    edi,edi
   140017506:	xor    edx,edx
   140017508:	lea    r8d,[rdi+0x1]
   14001750c:	mov    esi,ecx
   14001750e:	call   0x140015e2c
   140017513:	mov    r13,rax
   140017516:	cmp    rax,0xffffffffffffffff
   14001751a:	je     0x14001756c
   14001751c:	lea    r8d,[rdi+0x2]
   140017520:	xor    edx,edx
   140017522:	mov    ecx,esi
   140017524:	call   0x140015e2c
   140017529:	cmp    rax,0xffffffffffffffff
   14001752d:	je     0x14001756c
   14001752f:	mov    rbx,rbp
   140017532:	sub    rbx,rax
   140017535:	test   rbx,rbx
   140017538:	jle    0x1400175ff
   14001753e:	call   QWORD PTR [rip+0x2dd4]        # 0x14001a318
   140017544:	mov    r15d,0x1000
   14001754a:	lea    edx,[rdi+0x8]
   14001754d:	mov    rcx,rax
   140017550:	mov    r8d,r15d
   140017553:	call   QWORD PTR [rip+0x2ba7]        # 0x14001a100
   140017559:	mov    rbp,rax
   14001755c:	test   rax,rax
   14001755f:	jne    0x140017592
   140017561:	call   0x14000bdf0
   140017566:	mov    DWORD PTR [rax],0xc
   14001756c:	call   0x14000bdf0
   140017571:	mov    eax,DWORD PTR [rax]
   140017573:	mov    rbx,QWORD PTR [rsp+0x40]
   140017578:	mov    rbp,QWORD PTR [rsp+0x48]
   14001757d:	mov    rsi,QWORD PTR [rsp+0x50]
   140017582:	mov    rdi,QWORD PTR [rsp+0x58]
   140017587:	add    rsp,0x20
   14001758b:	pop    r15
   14001758d:	pop    r13
   14001758f:	pop    r12
   140017591:	ret    
   140017592:	mov    edx,0x8000
   140017597:	mov    ecx,esi
   140017599:	call   0x1400177f4
   14001759e:	mov    r12d,eax
   1400175a1:	mov    r8d,ebx
   1400175a4:	cmp    rbx,r15
   1400175a7:	mov    rdx,rbp
   1400175aa:	cmovge r8d,r15d
   1400175ae:	mov    ecx,esi
   1400175b0:	call   0x140011a5c
   1400175b5:	cmp    eax,0xffffffff
   1400175b8:	je     0x1400175c6
   1400175ba:	cdqe   
   1400175bc:	sub    rbx,rax
   1400175bf:	test   rbx,rbx
   1400175c2:	jle    0x1400175df
   1400175c4:	jmp    0x1400175a1
   1400175c6:	call   0x14000be10
   1400175cb:	cmp    DWORD PTR [rax],0x5
   1400175ce:	jne    0x1400175db
   1400175d0:	call   0x14000bdf0
   1400175d5:	mov    DWORD PTR [rax],0xd
   1400175db:	or     rdi,0xffffffffffffffff
   1400175df:	mov    edx,r12d
   1400175e2:	mov    ecx,esi
   1400175e4:	call   0x1400177f4
   1400175e9:	call   QWORD PTR [rip+0x2d29]        # 0x14001a318
   1400175ef:	mov    r8,rbp
   1400175f2:	mov    rcx,rax
   1400175f5:	xor    edx,edx
   1400175f7:	call   QWORD PTR [rip+0x2b13]        # 0x14001a110
   1400175fd:	jmp    0x140017654
   1400175ff:	jns    0x14001765e
   140017601:	xor    r8d,r8d
   140017604:	mov    rdx,rbp
   140017607:	mov    ecx,esi
   140017609:	call   0x140015e2c
   14001760e:	cmp    rax,0xffffffffffffffff
   140017612:	je     0x14001756c
   140017618:	mov    ecx,esi
   14001761a:	call   0x140011710
   14001761f:	mov    rcx,rax
   140017622:	call   QWORD PTR [rip+0x2ce8]        # 0x14001a310
   140017628:	neg    eax
   14001762a:	sbb    rdi,rdi
   14001762d:	neg    rdi
   140017630:	dec    rdi
   140017633:	cmp    rdi,0xffffffffffffffff
   140017637:	jne    0x14001765e
   140017639:	call   0x14000bdf0
   14001763e:	mov    DWORD PTR [rax],0xd
   140017644:	call   0x14000be10
   140017649:	mov    rbx,rax
   14001764c:	call   QWORD PTR [rip+0x2a1e]        # 0x14001a070
   140017652:	mov    DWORD PTR [rbx],eax
   140017654:	cmp    rdi,0xffffffffffffffff
   140017658:	je     0x14001756c
   14001765e:	xor    r8d,r8d
   140017661:	mov    rdx,r13
   140017664:	mov    ecx,esi
   140017666:	call   0x140015e2c
   14001766b:	cmp    rax,0xffffffffffffffff
   14001766f:	je     0x14001756c
   140017675:	xor    eax,eax
   140017677:	jmp    0x140017573
   14001767c:	mov    QWORD PTR [rsp+0x8],rbx
   140017681:	mov    QWORD PTR [rsp+0x10],rsi
   140017686:	push   rdi
   140017687:	sub    rsp,0x20
   14001768b:	movsxd rbx,ecx
   14001768e:	mov    edi,r8d
   140017691:	mov    esi,edx
   140017693:	mov    ecx,ebx
   140017695:	call   0x140011710
   14001769a:	cmp    rax,0xffffffffffffffff
   14001769e:	jne    0x1400176b0
   1400176a0:	call   0x14000bdf0
   1400176a5:	mov    DWORD PTR [rax],0x9
   1400176ab:	or     eax,0xffffffff
   1400176ae:	jmp    0x140017702
   1400176b0:	mov    r9d,edi
   1400176b3:	xor    r8d,r8d
   1400176b6:	mov    edx,esi
   1400176b8:	mov    rcx,rax
   1400176bb:	call   QWORD PTR [rip+0x2c2f]        # 0x14001a2f0
   1400176c1:	mov    edi,eax
   1400176c3:	cmp    eax,0xffffffff
   1400176c6:	jne    0x1400176d0
   1400176c8:	call   QWORD PTR [rip+0x29a2]        # 0x14001a070
   1400176ce:	jmp    0x1400176d2
   1400176d0:	xor    eax,eax
   1400176d2:	test   eax,eax
   1400176d4:	je     0x1400176df
   1400176d6:	mov    ecx,eax
   1400176d8:	call   0x14000be30
   1400176dd:	jmp    0x1400176ab
   1400176df:	mov    rcx,rbx
   1400176e2:	mov    rax,rbx
   1400176e5:	lea    rdx,[rip+0xe394]        # 0x140025a80
   1400176ec:	sar    rax,0x5
   1400176f0:	and    ecx,0x1f
   1400176f3:	mov    rax,QWORD PTR [rdx+rax*8]
   1400176f7:	imul   rcx,rcx,0x58
   1400176fb:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140017700:	mov    eax,edi
   140017702:	mov    rbx,QWORD PTR [rsp+0x30]
   140017707:	mov    rsi,QWORD PTR [rsp+0x38]
   14001770c:	add    rsp,0x20
   140017710:	pop    rdi
   140017711:	ret    
   140017712:	int3   
   140017713:	int3   
   140017714:	mov    QWORD PTR [rsp+0x10],rbx
   140017719:	mov    DWORD PTR [rsp+0x8],ecx
   14001771d:	push   rsi
   14001771e:	push   rdi
   14001771f:	push   r12
   140017721:	push   r13
   140017723:	push   r14
   140017725:	sub    rsp,0x20
   140017729:	mov    esi,r8d
   14001772c:	mov    r12d,edx
   14001772f:	movsxd rdi,ecx
   140017732:	cmp    edi,0xfffffffe
   140017735:	jne    0x14001774f
   140017737:	call   0x14000be10
   14001773c:	and    DWORD PTR [rax],0x0
   14001773f:	call   0x14000bdf0
   140017744:	mov    DWORD PTR [rax],0x9
   14001774a:	jmp    0x1400177de
   14001774f:	test   ecx,ecx
   140017751:	js     0x1400177c6
   140017753:	cmp    edi,DWORD PTR [rip+0xe313]        # 0x140025a6c
   140017759:	jae    0x1400177c6
   14001775b:	mov    rbx,rdi
   14001775e:	mov    r13,rdi
   140017761:	sar    r13,0x5
   140017765:	lea    r14,[rip+0xe314]        # 0x140025a80
   14001776c:	and    ebx,0x1f
   14001776f:	imul   rbx,rbx,0x58
   140017773:	mov    rax,QWORD PTR [r14+r13*8]
   140017777:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   14001777c:	and    ecx,0x1
   14001777f:	je     0x1400177c6
   140017781:	mov    ecx,edi
   140017783:	call   0x140011784
   140017788:	nop
   140017789:	mov    rax,QWORD PTR [r14+r13*8]
   14001778d:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140017792:	je     0x1400177a5
   140017794:	mov    r8d,esi
   140017797:	mov    edx,r12d
   14001779a:	mov    ecx,edi
   14001779c:	call   0x14001767c
   1400177a1:	mov    ebx,eax
   1400177a3:	jmp    0x1400177bb
   1400177a5:	call   0x14000bdf0
   1400177aa:	mov    DWORD PTR [rax],0x9
   1400177b0:	call   0x14000be10
   1400177b5:	and    DWORD PTR [rax],0x0
   1400177b8:	or     ebx,0xffffffff
   1400177bb:	mov    ecx,edi
   1400177bd:	call   0x14001182c
   1400177c2:	mov    eax,ebx
   1400177c4:	jmp    0x1400177e1
   1400177c6:	call   0x14000be10
   1400177cb:	and    DWORD PTR [rax],0x0
   1400177ce:	call   0x14000bdf0
   1400177d3:	mov    DWORD PTR [rax],0x9
   1400177d9:	call   0x14000d04c
   1400177de:	or     eax,0xffffffff
   1400177e1:	mov    rbx,QWORD PTR [rsp+0x58]
   1400177e6:	add    rsp,0x20
   1400177ea:	pop    r14
   1400177ec:	pop    r13
   1400177ee:	pop    r12
   1400177f0:	pop    rdi
   1400177f1:	pop    rsi
   1400177f2:	ret    
   1400177f3:	int3   
   1400177f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400177f9:	movsxd r8,ecx
   1400177fc:	lea    rbx,[rip+0xe27d]        # 0x140025a80
   140017803:	mov    r9,r8
   140017806:	and    r8d,0x1f
   14001780a:	sar    r9,0x5
   14001780e:	imul   r8,r8,0x58
   140017812:	mov    rcx,QWORD PTR [rbx+r9*8]
   140017816:	mov    al,BYTE PTR [rcx+r8*1+0x38]
   14001781b:	movzx  r11d,BYTE PTR [rcx+r8*1+0x8]
   140017821:	add    al,al
   140017823:	and    r11d,0x80
   14001782a:	movsx  r10d,al
   14001782e:	sar    r10d,1
   140017831:	cmp    edx,0x4000
   140017837:	je     0x140017891
   140017839:	cmp    edx,0x8000
   14001783f:	je     0x140017889
   140017841:	cmp    edx,0x10000
   140017847:	je     0x140017871
   140017849:	cmp    edx,0x20000
   14001784f:	je     0x140017871
   140017851:	cmp    edx,0x40000
   140017857:	jne    0x1400178a1
   140017859:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   14001785f:	mov    rax,QWORD PTR [rbx+r9*8]
   140017863:	and    BYTE PTR [rax+r8*1+0x38],0x81
   140017869:	or     BYTE PTR [rax+r8*1+0x38],0x1
   14001786f:	jmp    0x1400178a1
   140017871:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   140017877:	mov    rax,QWORD PTR [rbx+r9*8]
   14001787b:	and    BYTE PTR [rax+r8*1+0x38],0x82
   140017881:	or     BYTE PTR [rax+r8*1+0x38],0x2
   140017887:	jmp    0x1400178a1
   140017889:	and    BYTE PTR [rcx+r8*1+0x8],0x7f
   14001788f:	jmp    0x1400178a1
   140017891:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   140017897:	mov    rcx,QWORD PTR [rbx+r9*8]
   14001789b:	and    BYTE PTR [rcx+r8*1+0x38],0x80
   1400178a1:	test   r11d,r11d
   1400178a4:	jne    0x1400178ad
   1400178a6:	mov    eax,0x8000
   1400178ab:	jmp    0x1400178bc
   1400178ad:	neg    r10d
   1400178b0:	sbb    eax,eax
   1400178b2:	and    eax,0xc000
   1400178b7:	add    eax,0x4000
   1400178bc:	mov    rbx,QWORD PTR [rsp+0x8]
   1400178c1:	ret    
   1400178c2:	int3   
   1400178c3:	int3   
   1400178c4:	sub    rsp,0x28
   1400178c8:	test   rcx,rcx
   1400178cb:	jne    0x1400178e4
   1400178cd:	call   0x14000bdf0
   1400178d2:	mov    DWORD PTR [rax],0x16
   1400178d8:	call   0x14000d04c
   1400178dd:	mov    eax,0x16
   1400178e2:	jmp    0x1400178ee
   1400178e4:	mov    eax,DWORD PTR [rip+0xe17a]        # 0x140025a64
   1400178ea:	mov    DWORD PTR [rcx],eax
   1400178ec:	xor    eax,eax
   1400178ee:	add    rsp,0x28
   1400178f2:	ret    
   1400178f3:	int3   
   1400178f4:	mov    rax,rsp
   1400178f7:	push   rbx
   1400178f8:	push   rsi
   1400178f9:	push   rdi
   1400178fa:	push   r12
   1400178fc:	push   r13
   1400178fe:	push   r14
   140017900:	push   r15
   140017902:	sub    rsp,0x50
   140017906:	xor    r14d,r14d
   140017909:	mov    r13d,r14d
   14001790c:	mov    esi,r14d
   14001790f:	mov    DWORD PTR [rax+0x8],r14d
   140017913:	mov    DWORD PTR [rax+0x10],r14d
   140017917:	mov    DWORD PTR [rax+0x18],r14d
   14001791b:	lea    ecx,[r14+0x7]
   14001791f:	call   0x14000cb58
   140017924:	nop
   140017925:	call   0x140018408
   14001792a:	mov    r12,rax
   14001792d:	lea    rcx,[rsp+0x90]
   140017935:	call   0x1400183c0
   14001793a:	test   eax,eax
   14001793c:	jne    0x140017d4d
   140017942:	lea    rcx,[rsp+0x98]
   14001794a:	call   0x140018360
   14001794f:	test   eax,eax
   140017951:	jne    0x140017d39
   140017957:	lea    rcx,[rsp+0xa0]
   14001795f:	call   0x140018390
   140017964:	test   eax,eax
   140017966:	jne    0x140017d25
   14001796c:	call   0x140019408
   140017971:	mov    ebx,eax
   140017973:	mov    DWORD PTR [rip+0xe0d2],r14d        # 0x140025a4c
   14001797a:	or     r15d,0xffffffff
   14001797e:	mov    DWORD PTR [rip+0xcb9b],r15d        # 0x140024520
   140017985:	mov    DWORD PTR [rip+0xcb84],r15d        # 0x140024510
   14001798c:	lea    rcx,[rip+0x8645]        # 0x14001ffd8
   140017993:	call   0x140009d00
   140017998:	mov    rdi,rax
   14001799b:	mov    QWORD PTR [rsp+0x40],rax
   1400179a0:	test   rax,rax
   1400179a3:	je     0x140017a3a
   1400179a9:	cmp    BYTE PTR [rax],r14b
   1400179ac:	je     0x140017a3a
   1400179b2:	mov    rcx,QWORD PTR [rip+0xe097]        # 0x140025a50
   1400179b9:	test   rcx,rcx
   1400179bc:	je     0x1400179e2
   1400179be:	mov    rdx,rcx
   1400179c1:	mov    rcx,rax
   1400179c4:	call   0x14000a880
   1400179c9:	test   eax,eax
   1400179cb:	je     0x140017b89
   1400179d1:	mov    rcx,QWORD PTR [rip+0xe078]        # 0x140025a50
   1400179d8:	test   rcx,rcx
   1400179db:	je     0x1400179e2
   1400179dd:	call   0x14000b490
   1400179e2:	mov    rcx,rdi
   1400179e5:	call   0x140009fd0
   1400179ea:	lea    rcx,[rax+0x1]
   1400179ee:	call   0x140010b50
   1400179f3:	mov    QWORD PTR [rip+0xe056],rax        # 0x140025a50
   1400179fa:	test   rax,rax
   1400179fd:	je     0x140017b89
   140017a03:	mov    rcx,rdi
   140017a06:	call   0x140009fd0
   140017a0b:	mov    r8,rdi
   140017a0e:	lea    rdx,[rax+0x1]
   140017a12:	mov    rcx,QWORD PTR [rip+0xe037]        # 0x140025a50
   140017a19:	call   0x14000eae0
   140017a1e:	test   eax,eax
   140017a20:	je     0x140017b8e
   140017a26:	mov    QWORD PTR [rsp+0x20],r14
   140017a2b:	xor    r9d,r9d
   140017a2e:	xor    r8d,r8d
   140017a31:	xor    edx,edx
   140017a33:	xor    ecx,ecx
   140017a35:	call   0x14000cfa8
   140017a3a:	mov    rcx,QWORD PTR [rip+0xe00f]        # 0x140025a50
   140017a41:	test   rcx,rcx
   140017a44:	je     0x140017a52
   140017a46:	call   0x14000b490
   140017a4b:	mov    QWORD PTR [rip+0xdffe],r14        # 0x140025a50
   140017a52:	lea    rcx,[rip+0xdf47]        # 0x1400259a0
   140017a59:	call   QWORD PTR [rip+0x28c1]        # 0x14001a320
   140017a5f:	cmp    eax,0xffffffff
   140017a62:	je     0x140017b89
   140017a68:	mov    DWORD PTR [rip+0xdfda],0x1        # 0x140025a4c
   140017a72:	mov    ecx,DWORD PTR [rip+0xdf28]        # 0x1400259a0
   140017a78:	imul   ecx,ecx,0x3c
   140017a7b:	mov    DWORD PTR [rsp+0x90],ecx
   140017a82:	mov    edx,DWORD PTR [rip+0xdf6c]        # 0x1400259f4
   140017a88:	cmp    WORD PTR [rip+0xdf56],r14w        # 0x1400259e6
   140017a90:	je     0x140017aa0
   140017a92:	mov    eax,edx
   140017a94:	imul   eax,eax,0x3c
   140017a97:	add    ecx,eax
   140017a99:	mov    DWORD PTR [rsp+0x90],ecx
   140017aa0:	cmp    WORD PTR [rip+0xdf92],r14w        # 0x140025a3a
   140017aa8:	je     0x140017acd
   140017aaa:	mov    eax,DWORD PTR [rip+0xdf98]        # 0x140025a48
   140017ab0:	test   eax,eax
   140017ab2:	je     0x140017acd
   140017ab4:	mov    DWORD PTR [rsp+0x98],0x1
   140017abf:	sub    eax,edx
   140017ac1:	imul   eax,eax,0x3c
   140017ac4:	mov    DWORD PTR [rsp+0xa0],eax
   140017acb:	jmp    0x140017add
   140017acd:	mov    DWORD PTR [rsp+0x98],r14d
   140017ad5:	mov    DWORD PTR [rsp+0xa0],r14d
   140017add:	lea    rax,[rsp+0xa8]
   140017ae5:	mov    QWORD PTR [rsp+0x38],rax
   140017aea:	mov    QWORD PTR [rsp+0x30],r14
   140017aef:	mov    esi,0x3f
   140017af4:	mov    DWORD PTR [rsp+0x28],esi
   140017af8:	mov    rax,QWORD PTR [r12]
   140017afc:	mov    QWORD PTR [rsp+0x20],rax
   140017b01:	mov    r9d,r15d
   140017b04:	lea    r8,[rip+0xde99]        # 0x1400259a4
   140017b0b:	xor    edx,edx
   140017b0d:	mov    ecx,ebx
   140017b0f:	call   QWORD PTR [rip+0x26f3]        # 0x14001a208
   140017b15:	test   eax,eax
   140017b17:	je     0x140017b2d
   140017b19:	cmp    DWORD PTR [rsp+0xa8],r14d
   140017b21:	jne    0x140017b2d
   140017b23:	mov    rax,QWORD PTR [r12]
   140017b27:	mov    BYTE PTR [rax+0x3f],r14b
   140017b2b:	jmp    0x140017b34
   140017b2d:	mov    rax,QWORD PTR [r12]
   140017b31:	mov    BYTE PTR [rax],r14b
   140017b34:	lea    rax,[rsp+0xa8]
   140017b3c:	mov    QWORD PTR [rsp+0x38],rax
   140017b41:	mov    QWORD PTR [rsp+0x30],r14
   140017b46:	mov    DWORD PTR [rsp+0x28],esi
   140017b4a:	mov    rax,QWORD PTR [r12+0x8]
   140017b4f:	mov    QWORD PTR [rsp+0x20],rax
   140017b54:	mov    r9d,r15d
   140017b57:	lea    r8,[rip+0xde9a]        # 0x1400259f8
   140017b5e:	xor    edx,edx
   140017b60:	mov    ecx,ebx
   140017b62:	call   QWORD PTR [rip+0x26a0]        # 0x14001a208
   140017b68:	test   eax,eax
   140017b6a:	je     0x140017b81
   140017b6c:	cmp    DWORD PTR [rsp+0xa8],r14d
   140017b74:	jne    0x140017b81
   140017b76:	mov    rax,QWORD PTR [r12+0x8]
   140017b7b:	mov    BYTE PTR [rax+0x3f],r14b
   140017b7f:	jmp    0x140017b89
   140017b81:	mov    rax,QWORD PTR [r12+0x8]
   140017b86:	mov    BYTE PTR [rax],r14b
   140017b89:	mov    esi,0x1
   140017b8e:	mov    ebx,DWORD PTR [rsp+0x90]
   140017b95:	call   0x140018400
   140017b9a:	mov    DWORD PTR [rax],ebx
   140017b9c:	mov    ebx,DWORD PTR [rsp+0x98]
   140017ba3:	call   0x1400183f0
   140017ba8:	mov    DWORD PTR [rax],ebx
   140017baa:	mov    ebx,DWORD PTR [rsp+0xa0]
   140017bb1:	call   0x1400183f8
   140017bb6:	mov    DWORD PTR [rax],ebx
   140017bb8:	mov    ecx,0x7
   140017bbd:	call   0x14000ca58
   140017bc2:	test   esi,esi
   140017bc4:	jne    0x140017d62
   140017bca:	lea    r15d,[rsi+0x3]
   140017bce:	mov    r9d,r15d
   140017bd1:	mov    r8,rdi
   140017bd4:	lea    edx,[rsi+0x40]
   140017bd7:	mov    rcx,QWORD PTR [r12]
   140017bdb:	call   0x140013790
   140017be0:	test   eax,eax
   140017be2:	jne    0x140017d10
   140017be8:	add    rdi,r15
   140017beb:	cmp    BYTE PTR [rdi],0x2d
   140017bee:	jne    0x140017bf7
   140017bf0:	lea    r13d,[rsi+0x1]
   140017bf4:	inc    rdi
   140017bf7:	mov    rcx,rdi
   140017bfa:	call   0x140019798
   140017bff:	mov    r11d,eax
   140017c02:	imul   r11d,r11d,0xe10
   140017c09:	mov    DWORD PTR [rsp+0x90],r11d
   140017c11:	mov    bl,0x30
   140017c13:	mov    sil,0x39
   140017c16:	mov    al,BYTE PTR [rdi]
   140017c18:	cmp    al,0x2b
   140017c1a:	je     0x140017d08
   140017c20:	cmp    al,bl
   140017c22:	jl     0x140017c2d
   140017c24:	cmp    al,sil
   140017c27:	jle    0x140017d08
   140017c2d:	cmp    BYTE PTR [rdi],0x3a
   140017c30:	jne    0x140017c96
   140017c32:	inc    rdi
   140017c35:	mov    rcx,rdi
   140017c38:	call   0x140019798
   140017c3d:	imul   eax,eax,0x3c
   140017c40:	mov    r11d,DWORD PTR [rsp+0x90]
   140017c48:	add    r11d,eax
   140017c4b:	mov    DWORD PTR [rsp+0x90],r11d
   140017c53:	jmp    0x140017c5d
   140017c55:	cmp    al,sil
   140017c58:	jg     0x140017c63
   140017c5a:	inc    rdi
   140017c5d:	mov    al,BYTE PTR [rdi]
   140017c5f:	cmp    al,bl
   140017c61:	jge    0x140017c55
   140017c63:	cmp    BYTE PTR [rdi],0x3a
   140017c66:	jne    0x140017c96
   140017c68:	inc    rdi
   140017c6b:	mov    rcx,rdi
   140017c6e:	call   0x140019798
   140017c73:	mov    r11d,DWORD PTR [rsp+0x90]
   140017c7b:	add    r11d,eax
   140017c7e:	mov    DWORD PTR [rsp+0x90],r11d
   140017c86:	jmp    0x140017c90
   140017c88:	cmp    al,sil
   140017c8b:	jg     0x140017c96
   140017c8d:	inc    rdi
   140017c90:	mov    al,BYTE PTR [rdi]
   140017c92:	cmp    al,bl
   140017c94:	jge    0x140017c88
   140017c96:	test   r13d,r13d
   140017c99:	je     0x140017ca6
   140017c9b:	neg    r11d
   140017c9e:	mov    DWORD PTR [rsp+0x90],r11d
   140017ca6:	movsx  eax,BYTE PTR [rdi]
   140017ca9:	mov    DWORD PTR [rsp+0x98],eax
   140017cb0:	test   eax,eax
   140017cb2:	je     0x140017ce2
   140017cb4:	mov    r9,r15
   140017cb7:	mov    r8,rdi
   140017cba:	mov    edx,0x40
   140017cbf:	mov    rcx,QWORD PTR [r12+0x8]
   140017cc4:	call   0x140013790
   140017cc9:	test   eax,eax
   140017ccb:	je     0x140017cea
   140017ccd:	mov    QWORD PTR [rsp+0x20],r14
   140017cd2:	xor    r9d,r9d
   140017cd5:	xor    r8d,r8d
   140017cd8:	xor    edx,edx
   140017cda:	xor    ecx,ecx
   140017cdc:	call   0x14000cfa8
   140017ce1:	int3   
   140017ce2:	mov    rax,QWORD PTR [r12+0x8]
   140017ce7:	mov    BYTE PTR [rax],r14b
   140017cea:	mov    ebx,DWORD PTR [rsp+0x90]
   140017cf1:	call   0x140018400
   140017cf6:	mov    DWORD PTR [rax],ebx
   140017cf8:	mov    ebx,DWORD PTR [rsp+0x98]
   140017cff:	call   0x1400183f0
   140017d04:	mov    DWORD PTR [rax],ebx
   140017d06:	jmp    0x140017d62
   140017d08:	inc    rdi
   140017d0b:	jmp    0x140017c16
   140017d10:	mov    QWORD PTR [rsp+0x20],r14
   140017d15:	xor    r9d,r9d
   140017d18:	xor    r8d,r8d
   140017d1b:	xor    edx,edx
   140017d1d:	xor    ecx,ecx
   140017d1f:	call   0x14000cfa8
   140017d24:	nop
   140017d25:	mov    QWORD PTR [rsp+0x20],r14
   140017d2a:	xor    r9d,r9d
   140017d2d:	xor    r8d,r8d
   140017d30:	xor    edx,edx
   140017d32:	xor    ecx,ecx
   140017d34:	call   0x14000cfa8
   140017d39:	mov    QWORD PTR [rsp+0x20],r14
   140017d3e:	xor    r9d,r9d
   140017d41:	xor    r8d,r8d
   140017d44:	xor    edx,edx
   140017d46:	xor    ecx,ecx
   140017d48:	call   0x14000cfa8
   140017d4d:	mov    QWORD PTR [rsp+0x20],r14
   140017d52:	xor    r9d,r9d
   140017d55:	xor    r8d,r8d
   140017d58:	xor    edx,edx
   140017d5a:	xor    ecx,ecx
   140017d5c:	call   0x14000cfa8
   140017d61:	nop
   140017d62:	add    rsp,0x50
   140017d66:	pop    r15
   140017d68:	pop    r14
   140017d6a:	pop    r13
   140017d6c:	pop    r12
   140017d6e:	pop    rdi
   140017d6f:	pop    rsi
   140017d70:	pop    rbx
   140017d71:	ret    
   140017d72:	int3   
   140017d73:	int3   
   140017d74:	mov    QWORD PTR [rsp+0x10],rbx
   140017d79:	mov    QWORD PTR [rsp+0x18],rbp
   140017d7e:	push   rsi
   140017d7f:	push   rdi
   140017d80:	push   r12
   140017d82:	sub    rsp,0x30
   140017d86:	and    DWORD PTR [rsp+0x50],0x0
   140017d8b:	mov    ebx,r8d
   140017d8e:	mov    r12d,ecx
   140017d91:	cmp    edx,0x1
   140017d94:	jne    0x140017f05
   140017d9a:	mov    r11d,ebx
   140017d9d:	and    r11d,0x80000003
   140017da4:	jge    0x140017db0
   140017da6:	dec    r11d
   140017da9:	or     r11d,0xfffffffc
   140017dad:	inc    r11d
   140017db0:	mov    esi,0x51eb851f
   140017db5:	test   r11d,r11d
   140017db8:	jne    0x140017dcf
   140017dba:	mov    eax,esi
   140017dbc:	imul   ebx
   140017dbe:	sar    edx,0x5
   140017dc1:	mov    eax,edx
   140017dc3:	shr    eax,0x1f
   140017dc6:	add    edx,eax
   140017dc8:	imul   edx,edx,0x64
   140017dcb:	cmp    ebx,edx
   140017dcd:	jne    0x140017e02
   140017dcf:	lea    ecx,[r8+0x76c]
   140017dd6:	mov    eax,esi
   140017dd8:	imul   ecx
   140017dda:	sar    edx,0x7
   140017ddd:	mov    eax,edx
   140017ddf:	shr    eax,0x1f
   140017de2:	add    edx,eax
   140017de4:	imul   edx,edx,0x190
   140017dea:	cmp    ecx,edx
   140017dec:	je     0x140017e02
   140017dee:	lea    rdi,[rip+0xfffffffffffe820b]        # 0x140000000
   140017df5:	movsxd rbp,r9d
   140017df8:	mov    r10d,DWORD PTR [rdi+rbp*4+0x24604]
   140017e00:	jmp    0x140017e14
   140017e02:	lea    rdi,[rip+0xfffffffffffe81f7]        # 0x140000000
   140017e09:	movsxd rbp,r9d
   140017e0c:	mov    r10d,DWORD PTR [rdi+rbp*4+0x245cc]
   140017e14:	dec    r8d
   140017e17:	lea    ecx,[rbx+0x12b]
   140017e1d:	mov    eax,esi
   140017e1f:	inc    r10d
   140017e22:	imul   ecx
   140017e24:	mov    r9d,edx
   140017e27:	sar    r9d,0x7
   140017e2b:	mov    eax,r9d
   140017e2e:	shr    eax,0x1f
   140017e31:	add    r9d,eax
   140017e34:	mov    eax,esi
   140017e36:	imul   r8d
   140017e39:	sar    edx,0x5
   140017e3c:	mov    eax,edx
   140017e3e:	shr    eax,0x1f
   140017e41:	add    edx,eax
   140017e43:	mov    eax,r8d
   140017e46:	sub    r9d,edx
   140017e49:	cdq    
   140017e4a:	and    edx,0x3
   140017e4d:	add    eax,edx
   140017e4f:	sar    eax,0x2
   140017e52:	lea    ecx,[r10+rax*1]
   140017e56:	mov    eax,ebx
   140017e58:	add    ecx,r9d
   140017e5b:	imul   eax,eax,0x16d
   140017e61:	lea    r8d,[rax+rcx*1-0x63db]
   140017e69:	mov    ecx,DWORD PTR [rsp+0x70]
   140017e6d:	mov    eax,0x92492493
   140017e72:	imul   r8d
   140017e75:	add    edx,r8d
   140017e78:	sar    edx,0x2
   140017e7b:	mov    eax,edx
   140017e7d:	shr    eax,0x1f
   140017e80:	add    edx,eax
   140017e82:	mov    eax,ecx
   140017e84:	imul   edx,edx,0x7
   140017e87:	imul   eax,eax,0x7
   140017e8a:	sub    r8d,edx
   140017e8d:	mov    edx,DWORD PTR [rsp+0x78]
   140017e91:	sub    eax,r8d
   140017e94:	add    eax,edx
   140017e96:	cmp    r8d,edx
   140017e99:	jg     0x140017ea2
   140017e9b:	lea    r10d,[r10+rax*1-0x7]
   140017ea0:	jmp    0x140017ea5
   140017ea2:	add    r10d,eax
   140017ea5:	cmp    ecx,0x5
   140017ea8:	jne    0x140017f80
   140017eae:	test   r11d,r11d
   140017eb1:	jne    0x140017ec8
   140017eb3:	mov    eax,esi
   140017eb5:	imul   ebx
   140017eb7:	sar    edx,0x5
   140017eba:	mov    ecx,edx
   140017ebc:	shr    ecx,0x1f
   140017ebf:	add    edx,ecx
   140017ec1:	imul   edx,edx,0x64
   140017ec4:	cmp    ebx,edx
   140017ec6:	jne    0x140017eef
   140017ec8:	lea    ecx,[rbx+0x76c]
   140017ece:	mov    eax,esi
   140017ed0:	imul   ecx
   140017ed2:	sar    edx,0x7
   140017ed5:	mov    eax,edx
   140017ed7:	shr    eax,0x1f
   140017eda:	add    edx,eax
   140017edc:	imul   edx,edx,0x190
   140017ee2:	cmp    ecx,edx
   140017ee4:	je     0x140017eef
   140017ee6:	mov    eax,DWORD PTR [rdi+rbp*4+0x24608]
   140017eed:	jmp    0x140017ef6
   140017eef:	mov    eax,DWORD PTR [rdi+rbp*4+0x245d0]
   140017ef6:	cmp    r10d,eax
   140017ef9:	jle    0x140017f80
   140017eff:	sub    r10d,0x7
   140017f03:	jmp    0x140017f80
   140017f05:	mov    eax,ebx
   140017f07:	and    eax,0x80000003
   140017f0c:	jge    0x140017f15
   140017f0e:	dec    eax
   140017f10:	or     eax,0xfffffffc
   140017f13:	inc    eax
   140017f15:	mov    esi,0x51eb851f
   140017f1a:	test   eax,eax
   140017f1c:	jne    0x140017f33
   140017f1e:	mov    eax,esi
   140017f20:	imul   ebx
   140017f22:	sar    edx,0x5
   140017f25:	mov    eax,edx
   140017f27:	shr    eax,0x1f
   140017f2a:	add    edx,eax
   140017f2c:	imul   edx,edx,0x64
   140017f2f:	cmp    ebx,edx
   140017f31:	jne    0x140017f66
   140017f33:	lea    ecx,[r8+0x76c]
   140017f3a:	mov    eax,esi
   140017f3c:	imul   ecx
   140017f3e:	sar    edx,0x7
   140017f41:	mov    eax,edx
   140017f43:	shr    eax,0x1f
   140017f46:	add    edx,eax
   140017f48:	imul   edx,edx,0x190
   140017f4e:	cmp    ecx,edx
   140017f50:	je     0x140017f66
   140017f52:	lea    rdi,[rip+0xfffffffffffe80a7]        # 0x140000000
   140017f59:	movsxd rax,r9d
   140017f5c:	mov    r10d,DWORD PTR [rdi+rax*4+0x24604]
   140017f64:	jmp    0x140017f78
   140017f66:	lea    rdi,[rip+0xfffffffffffe8093]        # 0x140000000
   140017f6d:	movsxd rax,r9d
   140017f70:	mov    r10d,DWORD PTR [rdi+rax*4+0x245cc]
   140017f78:	add    r10d,DWORD PTR [rsp+0x80]
   140017f80:	mov    eax,DWORD PTR [rsp+0x88]
   140017f87:	imul   eax,eax,0x3c
   140017f8a:	add    eax,DWORD PTR [rsp+0x90]
   140017f91:	imul   eax,eax,0x3c
   140017f94:	add    eax,DWORD PTR [rsp+0x98]
   140017f9b:	imul   eax,eax,0x3e8
   140017fa1:	add    eax,DWORD PTR [rsp+0xa0]
   140017fa8:	cmp    r12d,0x1
   140017fac:	jne    0x140017fd4
   140017fae:	mov    DWORD PTR [rip+0xc55f],r10d        # 0x140024514
   140017fb5:	mov    DWORD PTR [rip+0xc55d],eax        # 0x140024518
   140017fbb:	mov    DWORD PTR [rip+0xc54f],ebx        # 0x140024510
   140017fc1:	mov    rbx,QWORD PTR [rsp+0x58]
   140017fc6:	mov    rbp,QWORD PTR [rsp+0x60]
   140017fcb:	add    rsp,0x30
   140017fcf:	pop    r12
   140017fd1:	pop    rdi
   140017fd2:	pop    rsi
   140017fd3:	ret    
   140017fd4:	lea    rcx,[rsp+0x50]
   140017fd9:	mov    DWORD PTR [rip+0xc544],r10d        # 0x140024524
   140017fe0:	mov    DWORD PTR [rip+0xc542],eax        # 0x140024528
   140017fe6:	call   0x140018390
   140017feb:	test   eax,eax
   140017fed:	jne    0x140018032
   140017fef:	mov    ecx,DWORD PTR [rip+0xc533]        # 0x140024528
   140017ff5:	mov    eax,DWORD PTR [rsp+0x50]
   140017ff9:	imul   eax,eax,0x3e8
   140017fff:	add    ecx,eax
   140018001:	mov    eax,0x5265c00
   140018006:	mov    DWORD PTR [rip+0xc51c],ecx        # 0x140024528
   14001800c:	jns    0x140018018
   14001800e:	add    ecx,eax
   140018010:	dec    DWORD PTR [rip+0xc50e]        # 0x140024524
   140018016:	jmp    0x140018024
   140018018:	cmp    ecx,eax
   14001801a:	jl     0x14001802a
   14001801c:	sub    ecx,eax
   14001801e:	inc    DWORD PTR [rip+0xc500]        # 0x140024524
   140018024:	mov    DWORD PTR [rip+0xc4fe],ecx        # 0x140024528
   14001802a:	mov    DWORD PTR [rip+0xc4f0],ebx        # 0x140024520
   140018030:	jmp    0x140017fc1
   140018032:	and    QWORD PTR [rsp+0x20],0x0
   140018038:	xor    r9d,r9d
   14001803b:	xor    r8d,r8d
   14001803e:	xor    edx,edx
   140018040:	xor    ecx,ecx
   140018042:	call   0x14000cfa8
   140018047:	int3   
   140018048:	mov    rax,rsp
   14001804b:	mov    QWORD PTR [rax+0x8],rbx
   14001804f:	mov    QWORD PTR [rax+0x18],rbp
   140018053:	mov    QWORD PTR [rax+0x20],rsi
   140018057:	push   rdi
   140018058:	push   r12
   14001805a:	push   r13
   14001805c:	sub    rsp,0x60
   140018060:	mov    rdi,rcx
   140018063:	lea    rcx,[rax+0x10]
   140018067:	xor    ebx,ebx
   140018069:	mov    DWORD PTR [rax+0x10],ebx
   14001806c:	call   0x140018360
   140018071:	test   eax,eax
   140018073:	jne    0x1400182dc
   140018079:	cmp    DWORD PTR [rsp+0x88],ebx
   140018080:	jne    0x14001809e
   140018082:	xor    eax,eax
   140018084:	lea    r11,[rsp+0x60]
   140018089:	mov    rbx,QWORD PTR [r11+0x20]
   14001808d:	mov    rbp,QWORD PTR [r11+0x30]
   140018091:	mov    rsi,QWORD PTR [r11+0x38]
   140018095:	mov    rsp,r11
   140018098:	pop    r13
   14001809a:	pop    r12
   14001809c:	pop    rdi
   14001809d:	ret    
   14001809e:	mov    esi,DWORD PTR [rdi+0x14]
   1400180a1:	mov    r13d,0x1
   1400180a7:	cmp    esi,DWORD PTR [rip+0xc463]        # 0x140024510
   1400180ad:	jne    0x1400180bb
   1400180af:	cmp    esi,DWORD PTR [rip+0xc46b]        # 0x140024520
   1400180b5:	je     0x14001825c
   1400180bb:	cmp    DWORD PTR [rip+0xd98b],ebx        # 0x140025a4c
   1400180c1:	je     0x1400181d9
   1400180c7:	cmp    WORD PTR [rip+0xd96a],bx        # 0x140025a38
   1400180ce:	movzx  ecx,WORD PTR [rip+0xd96f]        # 0x140025a44
   1400180d5:	movzx  eax,WORD PTR [rip+0xd96a]        # 0x140025a46
   1400180dc:	movzx  edx,WORD PTR [rip+0xd95f]        # 0x140025a42
   1400180e3:	movzx  r9d,WORD PTR [rip+0xd94f]        # 0x140025a3a
   1400180eb:	mov    DWORD PTR [rsp+0x50],eax
   1400180ef:	mov    DWORD PTR [rsp+0x48],ecx
   1400180f3:	mov    DWORD PTR [rsp+0x40],edx
   1400180f7:	mov    ecx,r13d
   1400180fa:	jne    0x14001812c
   1400180fc:	movzx  r10d,WORD PTR [rip+0xd93c]        # 0x140025a40
   140018104:	movzx  r11d,WORD PTR [rip+0xd930]        # 0x140025a3c
   14001810c:	movzx  r8d,WORD PTR [rip+0xd92a]        # 0x140025a3e
   140018114:	mov    DWORD PTR [rsp+0x38],r10d
   140018119:	mov    DWORD PTR [rsp+0x30],ebx
   14001811d:	mov    DWORD PTR [rsp+0x28],r11d
   140018122:	mov    DWORD PTR [rsp+0x20],r8d
   140018127:	mov    edx,r13d
   14001812a:	jmp    0x140018150
   14001812c:	movzx  r8d,WORD PTR [rip+0xd90c]        # 0x140025a40
   140018134:	movzx  r10d,WORD PTR [rip+0xd902]        # 0x140025a3e
   14001813c:	xor    edx,edx
   14001813e:	mov    DWORD PTR [rsp+0x38],r8d
   140018143:	mov    DWORD PTR [rsp+0x30],r10d
   140018148:	mov    DWORD PTR [rsp+0x28],ebx
   14001814c:	mov    DWORD PTR [rsp+0x20],ebx
   140018150:	mov    r8d,esi
   140018153:	call   0x140017d74
   140018158:	movzx  ecx,WORD PTR [rip+0xd891]        # 0x1400259f0
   14001815f:	movzx  r8d,WORD PTR [rip+0xd885]        # 0x1400259ec
   140018167:	movzx  eax,WORD PTR [rip+0xd884]        # 0x1400259f2
   14001816e:	movzx  edx,WORD PTR [rip+0xd879]        # 0x1400259ee
   140018175:	movzx  r9d,WORD PTR [rip+0xd869]        # 0x1400259e6
   14001817d:	mov    DWORD PTR [rsp+0x50],eax
   140018181:	mov    DWORD PTR [rsp+0x48],ecx
   140018185:	mov    DWORD PTR [rsp+0x40],edx
   140018189:	xor    ecx,ecx
   14001818b:	cmp    WORD PTR [rip+0xd852],bx        # 0x1400259e4
   140018192:	mov    DWORD PTR [rsp+0x38],r8d
   140018197:	mov    r8d,DWORD PTR [rdi+0x14]
   14001819b:	jne    0x1400181c0
   14001819d:	movzx  r10d,WORD PTR [rip+0xd843]        # 0x1400259e8
   1400181a5:	movzx  r11d,WORD PTR [rip+0xd83d]        # 0x1400259ea
   1400181ad:	mov    DWORD PTR [rsp+0x30],ebx
   1400181b1:	mov    DWORD PTR [rsp+0x28],r10d
   1400181b6:	mov    DWORD PTR [rsp+0x20],r11d
   1400181bb:	jmp    0x140018254
   1400181c0:	movzx  r10d,WORD PTR [rip+0xd822]        # 0x1400259ea
   1400181c8:	xor    edx,edx
   1400181ca:	mov    DWORD PTR [rsp+0x30],r10d
   1400181cf:	mov    DWORD PTR [rsp+0x28],ebx
   1400181d3:	mov    DWORD PTR [rsp+0x20],ebx
   1400181d7:	jmp    0x140018257
   1400181d9:	mov    eax,0x2
   1400181de:	mov    r12d,r13d
   1400181e1:	lea    ebp,[rax+0x9]
   1400181e4:	lea    r9d,[rax+0x1]
   1400181e8:	cmp    esi,0x6b
   1400181eb:	jge    0x1400181fc
   1400181ed:	lea    r9d,[rax+0x2]
   1400181f1:	mov    eax,r13d
   1400181f4:	lea    ebp,[r9+0x6]
   1400181f8:	lea    r12d,[r9+0x1]
   1400181fc:	mov    DWORD PTR [rsp+0x50],ebx
   140018200:	mov    DWORD PTR [rsp+0x48],ebx
   140018204:	mov    DWORD PTR [rsp+0x40],ebx
   140018208:	mov    DWORD PTR [rsp+0x38],0x2
   140018210:	mov    DWORD PTR [rsp+0x30],ebx
   140018214:	mov    r8d,esi
   140018217:	mov    edx,r13d
   14001821a:	mov    ecx,r13d
   14001821d:	mov    DWORD PTR [rsp+0x28],ebx
   140018221:	mov    DWORD PTR [rsp+0x20],eax
   140018225:	call   0x140017d74
   14001822a:	mov    r8d,DWORD PTR [rdi+0x14]
   14001822e:	mov    DWORD PTR [rsp+0x50],ebx
   140018232:	mov    DWORD PTR [rsp+0x48],ebx
   140018236:	mov    DWORD PTR [rsp+0x40],ebx
   14001823a:	mov    DWORD PTR [rsp+0x38],0x2
   140018242:	mov    DWORD PTR [rsp+0x30],ebx
   140018246:	mov    DWORD PTR [rsp+0x28],ebx
   14001824a:	mov    DWORD PTR [rsp+0x20],r12d
   14001824f:	mov    r9d,ebp
   140018252:	xor    ecx,ecx
   140018254:	mov    edx,r13d
   140018257:	call   0x140017d74
   14001825c:	mov    edx,DWORD PTR [rip+0xc2b2]        # 0x140024514
   140018262:	mov    r8d,DWORD PTR [rip+0xc2bb]        # 0x140024524
   140018269:	mov    ecx,DWORD PTR [rdi+0x1c]
   14001826c:	cmp    edx,r8d
   14001826f:	jge    0x140018293
   140018271:	cmp    ecx,edx
   140018273:	jl     0x140018082
   140018279:	cmp    ecx,r8d
   14001827c:	jg     0x140018082
   140018282:	cmp    ecx,edx
   140018284:	jle    0x1400182a9
   140018286:	cmp    ecx,r8d
   140018289:	jge    0x1400182a9
   14001828b:	mov    eax,r13d
   14001828e:	jmp    0x140018084
   140018293:	cmp    ecx,r8d
   140018296:	jl     0x14001828b
   140018298:	cmp    ecx,edx
   14001829a:	jg     0x14001828b
   14001829c:	cmp    ecx,r8d
   14001829f:	jle    0x1400182a9
   1400182a1:	cmp    ecx,edx
   1400182a3:	jl     0x140018082
   1400182a9:	mov    eax,DWORD PTR [rdi+0x8]
   1400182ac:	imul   eax,eax,0x3c
   1400182af:	add    eax,DWORD PTR [rdi+0x4]
   1400182b2:	imul   eax,eax,0x3c
   1400182b5:	add    eax,DWORD PTR [rdi]
   1400182b7:	imul   eax,eax,0x3e8
   1400182bd:	cmp    ecx,edx
   1400182bf:	jne    0x1400182d1
   1400182c1:	cmp    eax,DWORD PTR [rip+0xc251]        # 0x140024518
   1400182c7:	setge  bl
   1400182ca:	mov    eax,ebx
   1400182cc:	jmp    0x140018084
   1400182d1:	cmp    eax,DWORD PTR [rip+0xc251]        # 0x140024528
   1400182d7:	setl   bl
   1400182da:	jmp    0x1400182ca
   1400182dc:	xor    r9d,r9d
   1400182df:	xor    r8d,r8d
   1400182e2:	xor    edx,edx
   1400182e4:	xor    ecx,ecx
   1400182e6:	mov    QWORD PTR [rsp+0x20],rbx
   1400182eb:	call   0x14000cfa8
   1400182f0:	int3   
   1400182f1:	int3   
   1400182f2:	int3   
   1400182f3:	int3   
   1400182f4:	sub    rsp,0x28
   1400182f8:	cmp    DWORD PTR [rip+0xd759],0x0        # 0x140025a58
   1400182ff:	jne    0x14001832a
   140018301:	mov    ecx,0x6
   140018306:	call   0x14000cb58
   14001830b:	nop
   14001830c:	cmp    DWORD PTR [rip+0xd745],0x0        # 0x140025a58
   140018313:	jne    0x140018320
   140018315:	call   0x1400178f4
   14001831a:	inc    DWORD PTR [rip+0xd738]        # 0x140025a58
   140018320:	mov    ecx,0x6
   140018325:	call   0x14000ca58
   14001832a:	add    rsp,0x28
   14001832e:	ret    
   14001832f:	int3   
   140018330:	rex push rbx
   140018332:	sub    rsp,0x20
   140018336:	mov    rbx,rcx
   140018339:	mov    ecx,0x6
   14001833e:	call   0x14000cb58
   140018343:	nop
   140018344:	mov    rcx,rbx
   140018347:	call   0x140018048
   14001834c:	mov    ebx,eax
   14001834e:	mov    ecx,0x6
   140018353:	call   0x14000ca58
   140018358:	mov    eax,ebx
   14001835a:	add    rsp,0x20
   14001835e:	pop    rbx
   14001835f:	ret    
   140018360:	sub    rsp,0x28
   140018364:	test   rcx,rcx
   140018367:	jne    0x140018380
   140018369:	call   0x14000bdf0
   14001836e:	mov    DWORD PTR [rax],0x16
   140018374:	call   0x14000d04c
   140018379:	mov    eax,0x16
   14001837e:	jmp    0x14001838a
   140018380:	mov    eax,DWORD PTR [rip+0xc1ae]        # 0x140024534
   140018386:	mov    DWORD PTR [rcx],eax
   140018388:	xor    eax,eax
   14001838a:	add    rsp,0x28
   14001838e:	ret    
   14001838f:	int3   
   140018390:	sub    rsp,0x28
   140018394:	test   rcx,rcx
   140018397:	jne    0x1400183b0
   140018399:	call   0x14000bdf0
   14001839e:	mov    DWORD PTR [rax],0x16
   1400183a4:	call   0x14000d04c
   1400183a9:	mov    eax,0x16
   1400183ae:	jmp    0x1400183ba
   1400183b0:	mov    eax,DWORD PTR [rip+0xc182]        # 0x140024538
   1400183b6:	mov    DWORD PTR [rcx],eax
   1400183b8:	xor    eax,eax
   1400183ba:	add    rsp,0x28
   1400183be:	ret    
   1400183bf:	int3   
   1400183c0:	sub    rsp,0x28
   1400183c4:	test   rcx,rcx
   1400183c7:	jne    0x1400183e0
   1400183c9:	call   0x14000bdf0
   1400183ce:	mov    DWORD PTR [rax],0x16
   1400183d4:	call   0x14000d04c
   1400183d9:	mov    eax,0x16
   1400183de:	jmp    0x1400183ea
   1400183e0:	mov    eax,DWORD PTR [rip+0xc14a]        # 0x140024530
   1400183e6:	mov    DWORD PTR [rcx],eax
   1400183e8:	xor    eax,eax
   1400183ea:	add    rsp,0x28
   1400183ee:	ret    
   1400183ef:	int3   
   1400183f0:	lea    rax,[rip+0xc13d]        # 0x140024534
   1400183f7:	ret    
   1400183f8:	lea    rax,[rip+0xc139]        # 0x140024538
   1400183ff:	ret    
   140018400:	lea    rax,[rip+0xc129]        # 0x140024530
   140018407:	ret    
   140018408:	lea    rax,[rip+0xc1b1]        # 0x1400245c0
   14001840f:	ret    
   140018410:	rex push rbp
   140018412:	push   r12
   140018414:	push   r13
   140018416:	push   r14
   140018418:	push   r15
   14001841a:	sub    rsp,0x50
   14001841e:	lea    rbp,[rsp+0x40]
   140018423:	mov    QWORD PTR [rbp+0x40],rbx
   140018427:	mov    QWORD PTR [rbp+0x48],rsi
   14001842b:	mov    QWORD PTR [rbp+0x50],rdi
   14001842f:	mov    rax,QWORD PTR [rip+0xac8a]        # 0x1400230c0
   140018436:	xor    rax,rbp
   140018439:	mov    QWORD PTR [rbp+0x8],rax
   14001843d:	mov    ebx,DWORD PTR [rbp+0x60]
   140018440:	xor    edi,edi
   140018442:	mov    r14,r9
   140018445:	mov    r15d,r8d
   140018448:	mov    DWORD PTR [rbp+0x0],edx
   14001844b:	test   ebx,ebx
   14001844d:	jle    0x140018479
   14001844f:	mov    r10d,ebx
   140018452:	mov    rax,r9
   140018455:	dec    r10d
   140018458:	cmp    BYTE PTR [rax],dil
   14001845b:	je     0x140018469
   14001845d:	inc    rax
   140018460:	test   r10d,r10d
   140018463:	jne    0x140018455
   140018465:	or     r10d,0xffffffff
   140018469:	mov    eax,ebx
   14001846b:	sub    eax,r10d
   14001846e:	dec    eax
   140018470:	cmp    eax,ebx
   140018472:	lea    ebx,[rax+0x1]
   140018475:	jl     0x140018479
   140018477:	mov    ebx,eax
   140018479:	mov    r12d,DWORD PTR [rbp+0x78]
   14001847d:	mov    esi,edi
   14001847f:	test   r12d,r12d
   140018482:	jne    0x14001848b
   140018484:	mov    rax,QWORD PTR [rcx]
   140018487:	mov    r12d,DWORD PTR [rax+0x4]
   14001848b:	neg    DWORD PTR [rbp+0x80]
   140018491:	mov    r9d,ebx
   140018494:	mov    r8,r14
   140018497:	sbb    edx,edx
   140018499:	mov    ecx,r12d
   14001849c:	mov    DWORD PTR [rsp+0x28],edi
   1400184a0:	and    edx,0x8
   1400184a3:	mov    QWORD PTR [rsp+0x20],rdi
   1400184a8:	inc    edx
   1400184aa:	call   QWORD PTR [rip+0x1c88]        # 0x14001a138
   1400184b0:	movsxd r13,eax
   1400184b3:	test   eax,eax
   1400184b5:	jne    0x1400184be
   1400184b7:	xor    eax,eax
   1400184b9:	jmp    0x1400186b4
   1400184be:	movabs r8,0xffffffffffffff0
   1400184c8:	test   eax,eax
   1400184ca:	jle    0x14001852a
   1400184cc:	xor    edx,edx
   1400184ce:	lea    rax,[rdx-0x20]
   1400184d2:	div    r13
   1400184d5:	cmp    rax,0x2
   1400184d9:	jb     0x14001852a
   1400184db:	lea    rcx,[r13+r13*1+0x10]
   1400184e0:	cmp    rcx,0x400
   1400184e7:	ja     0x140018513
   1400184e9:	lea    rax,[rcx+0xf]
   1400184ed:	cmp    rax,rcx
   1400184f0:	ja     0x1400184f5
   1400184f2:	mov    rax,r8
   1400184f5:	and    rax,0xfffffffffffffff0
   1400184f9:	call   0x140016f30
   1400184fe:	sub    rsp,rax
   140018501:	lea    rdi,[rsp+0x40]
   140018506:	test   rdi,rdi
   140018509:	je     0x1400184b7
   14001850b:	mov    DWORD PTR [rdi],0xcccc
   140018511:	jmp    0x140018526
   140018513:	call   0x14000b304
   140018518:	mov    rdi,rax
   14001851b:	test   rax,rax
   14001851e:	je     0x14001852a
   140018520:	mov    DWORD PTR [rax],0xdddd
   140018526:	add    rdi,0x10
   14001852a:	test   rdi,rdi
   14001852d:	je     0x1400184b7
   14001852f:	mov    r9d,ebx
   140018532:	mov    r8,r14
   140018535:	mov    edx,0x1
   14001853a:	mov    ecx,r12d
   14001853d:	mov    DWORD PTR [rsp+0x28],r13d
   140018542:	mov    QWORD PTR [rsp+0x20],rdi
   140018547:	call   QWORD PTR [rip+0x1beb]        # 0x14001a138
   14001854d:	test   eax,eax
   14001854f:	je     0x1400186a1
   140018555:	mov    r14d,DWORD PTR [rbp+0x0]
   140018559:	and    DWORD PTR [rsp+0x28],esi
   14001855d:	and    QWORD PTR [rsp+0x20],rsi
   140018562:	mov    ecx,r14d
   140018565:	mov    r9d,r13d
   140018568:	mov    r8,rdi
   14001856b:	mov    edx,r15d
   14001856e:	call   QWORD PTR [rip+0x1db4]        # 0x14001a328
   140018574:	movsxd rsi,eax
   140018577:	test   eax,eax
   140018579:	je     0x1400186a1
   14001857f:	mov    r8d,0x400
   140018585:	test   r8d,r15d
   140018588:	je     0x1400185c1
   14001858a:	mov    ecx,DWORD PTR [rbp+0x70]
   14001858d:	test   ecx,ecx
   14001858f:	je     0x1400186a1
   140018595:	cmp    esi,ecx
   140018597:	jg     0x1400186a1
   14001859d:	mov    rax,QWORD PTR [rbp+0x68]
   1400185a1:	mov    DWORD PTR [rsp+0x28],ecx
   1400185a5:	mov    r9d,r13d
   1400185a8:	mov    r8,rdi
   1400185ab:	mov    edx,r15d
   1400185ae:	mov    ecx,r14d
   1400185b1:	mov    QWORD PTR [rsp+0x20],rax
   1400185b6:	call   QWORD PTR [rip+0x1d6c]        # 0x14001a328
   1400185bc:	jmp    0x1400186a1
   1400185c1:	test   eax,eax
   1400185c3:	jle    0x14001862c
   1400185c5:	xor    edx,edx
   1400185c7:	lea    rax,[rdx-0x20]
   1400185cb:	div    rsi
   1400185ce:	cmp    rax,0x2
   1400185d2:	jb     0x14001862c
   1400185d4:	lea    rcx,[rsi+rsi*1+0x10]
   1400185d9:	cmp    rcx,r8
   1400185dc:	ja     0x140018613
   1400185de:	lea    rax,[rcx+0xf]
   1400185e2:	cmp    rax,rcx
   1400185e5:	ja     0x1400185f1
   1400185e7:	movabs rax,0xffffffffffffff0
   1400185f1:	and    rax,0xfffffffffffffff0
   1400185f5:	call   0x140016f30
   1400185fa:	sub    rsp,rax
   1400185fd:	lea    rbx,[rsp+0x40]
   140018602:	test   rbx,rbx
   140018605:	je     0x1400186a1
   14001860b:	mov    DWORD PTR [rbx],0xcccc
   140018611:	jmp    0x140018626
   140018613:	call   0x14000b304
   140018618:	mov    rbx,rax
   14001861b:	test   rax,rax
   14001861e:	je     0x14001862e
   140018620:	mov    DWORD PTR [rax],0xdddd
   140018626:	add    rbx,0x10
   14001862a:	jmp    0x14001862e
   14001862c:	xor    ebx,ebx
   14001862e:	test   rbx,rbx
   140018631:	je     0x1400186a1
   140018633:	mov    r9d,r13d
   140018636:	mov    r8,rdi
   140018639:	mov    edx,r15d
   14001863c:	mov    ecx,r14d
   14001863f:	mov    DWORD PTR [rsp+0x28],esi
   140018643:	mov    QWORD PTR [rsp+0x20],rbx
   140018648:	call   QWORD PTR [rip+0x1cda]        # 0x14001a328
   14001864e:	xor    ecx,ecx
   140018650:	test   eax,eax
   140018652:	je     0x140018690
   140018654:	mov    eax,DWORD PTR [rbp+0x70]
   140018657:	xor    edx,edx
   140018659:	mov    QWORD PTR [rsp+0x38],rcx
   14001865e:	mov    r9d,esi
   140018661:	mov    r8,rbx
   140018664:	mov    QWORD PTR [rsp+0x30],rcx
   140018669:	test   eax,eax
   14001866b:	jne    0x140018678
   14001866d:	mov    DWORD PTR [rsp+0x28],ecx
   140018671:	mov    QWORD PTR [rsp+0x20],rcx
   140018676:	jmp    0x140018685
   140018678:	mov    DWORD PTR [rsp+0x28],eax
   14001867c:	mov    rax,QWORD PTR [rbp+0x68]
   140018680:	mov    QWORD PTR [rsp+0x20],rax
   140018685:	mov    ecx,r12d
   140018688:	call   QWORD PTR [rip+0x1b7a]        # 0x14001a208
   14001868e:	mov    esi,eax
   140018690:	lea    rcx,[rbx-0x10]
   140018694:	cmp    DWORD PTR [rcx],0xdddd
   14001869a:	jne    0x1400186a1
   14001869c:	call   0x14000b490
   1400186a1:	lea    rcx,[rdi-0x10]
   1400186a5:	cmp    DWORD PTR [rcx],0xdddd
   1400186ab:	jne    0x1400186b2
   1400186ad:	call   0x14000b490
   1400186b2:	mov    eax,esi
   1400186b4:	mov    rcx,QWORD PTR [rbp+0x8]
   1400186b8:	xor    rcx,rbp
   1400186bb:	call   0x14000a850
   1400186c0:	mov    rbx,QWORD PTR [rbp+0x40]
   1400186c4:	mov    rsi,QWORD PTR [rbp+0x48]
   1400186c8:	mov    rdi,QWORD PTR [rbp+0x50]
   1400186cc:	lea    rsp,[rbp+0x10]
   1400186d0:	pop    r15
   1400186d2:	pop    r14
   1400186d4:	pop    r13
   1400186d6:	pop    r12
   1400186d8:	pop    rbp
   1400186d9:	ret    
   1400186da:	int3   
   1400186db:	int3   
   1400186dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400186e1:	mov    QWORD PTR [rsp+0x10],rsi
   1400186e6:	push   rdi
   1400186e7:	sub    rsp,0x70
   1400186eb:	mov    esi,edx
   1400186ed:	mov    rdx,rcx
   1400186f0:	lea    rcx,[rsp+0x50]
   1400186f5:	mov    rbx,r9
   1400186f8:	mov    edi,r8d
   1400186fb:	call   0x14000c724
   140018700:	mov    eax,DWORD PTR [rsp+0xb8]
   140018707:	mov    r11d,DWORD PTR [rsp+0xc0]
   14001870f:	lea    rcx,[rsp+0x50]
   140018714:	mov    DWORD PTR [rsp+0x40],r11d
   140018719:	mov    DWORD PTR [rsp+0x38],eax
   14001871d:	mov    eax,DWORD PTR [rsp+0xb0]
   140018724:	mov    DWORD PTR [rsp+0x30],eax
   140018728:	mov    rax,QWORD PTR [rsp+0xa8]
   140018730:	mov    r9,rbx
   140018733:	mov    QWORD PTR [rsp+0x28],rax
   140018738:	mov    eax,DWORD PTR [rsp+0xa0]
   14001873f:	mov    r8d,edi
   140018742:	mov    edx,esi
   140018744:	mov    DWORD PTR [rsp+0x20],eax
   140018748:	call   0x140018410
   14001874d:	cmp    BYTE PTR [rsp+0x68],0x0
   140018752:	je     0x140018760
   140018754:	mov    rcx,QWORD PTR [rsp+0x60]
   140018759:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140018760:	lea    r11,[rsp+0x70]
   140018765:	mov    rbx,QWORD PTR [r11+0x10]
   140018769:	mov    rsi,QWORD PTR [r11+0x18]
   14001876d:	mov    rsp,r11
   140018770:	pop    rdi
   140018771:	ret    
   140018772:	int3   
   140018773:	int3   
   140018774:	mov    QWORD PTR [rsp+0x8],rbx
   140018779:	mov    QWORD PTR [rsp+0x10],rbp
   14001877e:	mov    QWORD PTR [rsp+0x18],rsi
   140018783:	push   rdi
   140018784:	sub    rsp,0x50
   140018788:	xor    ebp,ebp
   14001878a:	mov    rsi,r8
   14001878d:	mov    rbx,rdx
   140018790:	mov    rdi,rcx
   140018793:	test   r8,r8
   140018796:	jne    0x14001879f
   140018798:	xor    eax,eax
   14001879a:	jmp    0x140018887
   14001879f:	test   rcx,rcx
   1400187a2:	jne    0x1400187be
   1400187a4:	call   0x14000bdf0
   1400187a9:	mov    DWORD PTR [rax],0x16
   1400187af:	call   0x14000d04c
   1400187b4:	mov    eax,0x7fffffff
   1400187b9:	jmp    0x140018887
   1400187be:	test   rdx,rdx
   1400187c1:	je     0x1400187a4
   1400187c3:	cmp    r8,0x7fffffff
   1400187ca:	ja     0x1400187a4
   1400187cc:	lea    rcx,[rsp+0x30]
   1400187d1:	mov    rdx,r9
   1400187d4:	call   0x14000c724
   1400187d9:	mov    r11,QWORD PTR [rsp+0x30]
   1400187de:	mov    ecx,DWORD PTR [r11+0x10]
   1400187e2:	test   ecx,ecx
   1400187e4:	jne    0x14001882d
   1400187e6:	sub    rdi,rbx
   1400187e9:	movzx  eax,WORD PTR [rdi+rbx*1]
   1400187ed:	cmp    ax,0x41
   1400187f1:	jb     0x1400187fd
   1400187f3:	cmp    ax,0x5a
   1400187f7:	ja     0x1400187fd
   1400187f9:	add    ax,0x20
   1400187fd:	movzx  ecx,WORD PTR [rbx]
   140018800:	cmp    cx,0x41
   140018804:	jb     0x140018810
   140018806:	cmp    cx,0x5a
   14001880a:	ja     0x140018810
   14001880c:	add    cx,0x20
   140018810:	add    rbx,0x2
   140018814:	dec    rsi
   140018817:	je     0x140018823
   140018819:	test   ax,ax
   14001881c:	je     0x140018823
   14001881e:	cmp    ax,cx
   140018821:	je     0x1400187e9
   140018823:	movzx  ecx,cx
   140018826:	movzx  eax,ax
   140018829:	sub    eax,ecx
   14001882b:	jmp    0x140018874
   14001882d:	mov    r9d,esi
   140018830:	mov    r8,rdi
   140018833:	mov    edx,0x1001
   140018838:	mov    DWORD PTR [rsp+0x28],esi
   14001883c:	mov    QWORD PTR [rsp+0x20],rbx
   140018841:	call   0x1400197a4
   140018846:	test   eax,eax
   140018848:	jne    0x140018871
   14001884a:	call   0x14000bdf0
   14001884f:	mov    DWORD PTR [rax],0x16
   140018855:	cmp    BYTE PTR [rsp+0x48],bpl
   14001885a:	je     0x1400187b4
   140018860:	mov    rax,QWORD PTR [rsp+0x40]
   140018865:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001886c:	jmp    0x1400187b4
   140018871:	add    eax,0xfffffffe
   140018874:	cmp    BYTE PTR [rsp+0x48],bpl
   140018879:	je     0x140018887
   14001887b:	mov    rcx,QWORD PTR [rsp+0x40]
   140018880:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140018887:	mov    rbx,QWORD PTR [rsp+0x60]
   14001888c:	mov    rbp,QWORD PTR [rsp+0x68]
   140018891:	mov    rsi,QWORD PTR [rsp+0x70]
   140018896:	add    rsp,0x50
   14001889a:	pop    rdi
   14001889b:	ret    
   14001889c:	sub    rsp,0x28
   1400188a0:	xor    r9d,r9d
   1400188a3:	mov    r10,rcx
   1400188a6:	cmp    DWORD PTR [rip+0xd0bb],r9d        # 0x140025968
   1400188ad:	jne    0x140018927
   1400188af:	test   rcx,rcx
   1400188b2:	jne    0x1400188ce
   1400188b4:	call   0x14000bdf0
   1400188b9:	mov    DWORD PTR [rax],0x16
   1400188bf:	call   0x14000d04c
   1400188c4:	mov    eax,0x7fffffff
   1400188c9:	add    rsp,0x28
   1400188cd:	ret    
   1400188ce:	test   rdx,rdx
   1400188d1:	je     0x1400188b4
   1400188d3:	cmp    r8,0x7fffffff
   1400188da:	ja     0x1400188b4
   1400188dc:	sub    r10,rdx
   1400188df:	movzx  eax,WORD PTR [r10+rdx*1]
   1400188e4:	cmp    ax,0x41
   1400188e8:	jb     0x1400188f4
   1400188ea:	cmp    ax,0x5a
   1400188ee:	ja     0x1400188f4
   1400188f0:	add    ax,0x20
   1400188f4:	movzx  ecx,WORD PTR [rdx]
   1400188f7:	cmp    cx,0x41
   1400188fb:	jb     0x140018907
   1400188fd:	cmp    cx,0x5a
   140018901:	ja     0x140018907
   140018903:	add    cx,0x20
   140018907:	add    rdx,0x2
   14001890b:	dec    r8
   14001890e:	je     0x14001891a
   140018910:	test   ax,ax
   140018913:	je     0x14001891a
   140018915:	cmp    ax,cx
   140018918:	je     0x1400188df
   14001891a:	movzx  ecx,cx
   14001891d:	movzx  eax,ax
   140018920:	sub    eax,ecx
   140018922:	add    rsp,0x28
   140018926:	ret    
   140018927:	add    rsp,0x28
   14001892b:	jmp    0x140018774
   140018930:	mov    QWORD PTR [rsp+0x8],rbx
   140018935:	mov    QWORD PTR [rsp+0x10],rsi
   14001893a:	push   rdi
   14001893b:	sub    rsp,0x30
   14001893f:	mov    rbx,rcx
   140018942:	test   rcx,rcx
   140018945:	je     0x140018993
   140018947:	call   0x140013ce4
   14001894c:	mov    edx,0x2
   140018951:	lea    rcx,[rax+0x1]
   140018955:	mov    rsi,rax
   140018958:	call   0x14000eb44
   14001895d:	mov    rdi,rax
   140018960:	test   rax,rax
   140018963:	je     0x140018993
   140018965:	lea    rdx,[rsi+0x1]
   140018969:	mov    r8,rbx
   14001896c:	mov    rcx,rax
   14001896f:	call   0x14001522c
   140018974:	test   eax,eax
   140018976:	jne    0x14001897d
   140018978:	mov    rax,rdi
   14001897b:	jmp    0x140018995
   14001897d:	and    QWORD PTR [rsp+0x20],0x0
   140018983:	xor    r9d,r9d
   140018986:	xor    r8d,r8d
   140018989:	xor    edx,edx
   14001898b:	xor    ecx,ecx
   14001898d:	call   0x14000cfa8
   140018992:	int3   
   140018993:	xor    eax,eax
   140018995:	mov    rbx,QWORD PTR [rsp+0x40]
   14001899a:	mov    rsi,QWORD PTR [rsp+0x48]
   14001899f:	add    rsp,0x30
   1400189a3:	pop    rdi
   1400189a4:	ret    
   1400189a5:	int3   
   1400189a6:	int3   
   1400189a7:	int3   
   1400189a8:	mov    QWORD PTR [rsp+0x10],rbx
   1400189ad:	mov    QWORD PTR [rsp+0x18],rbp
   1400189b2:	push   rdi
   1400189b3:	sub    rsp,0x30
   1400189b7:	and    QWORD PTR [rsp+0x40],0x0
   1400189bd:	mov    rbx,QWORD PTR [rip+0xbfd4]        # 0x140024998
   1400189c4:	mov    rax,QWORD PTR [rbx]
   1400189c7:	test   rax,rax
   1400189ca:	je     0x140018a41
   1400189cc:	or     ebp,0xffffffff
   1400189cf:	and    DWORD PTR [rsp+0x28],0x0
   1400189d4:	and    QWORD PTR [rsp+0x20],0x0
   1400189da:	mov    r9d,ebp
   1400189dd:	mov    r8,rax
   1400189e0:	xor    edx,edx
   1400189e2:	xor    ecx,ecx
   1400189e4:	call   QWORD PTR [rip+0x174e]        # 0x14001a138
   1400189ea:	movsxd rdi,eax
   1400189ed:	test   eax,eax
   1400189ef:	je     0x140018a69
   1400189f1:	mov    rcx,rdi
   1400189f4:	mov    edx,0x2
   1400189f9:	call   0x140010bd0
   1400189fe:	mov    QWORD PTR [rsp+0x40],rax
   140018a03:	test   rax,rax
   140018a06:	je     0x140018a69
   140018a08:	mov    r8,QWORD PTR [rbx]
   140018a0b:	mov    r9d,ebp
   140018a0e:	xor    edx,edx
   140018a10:	xor    ecx,ecx
   140018a12:	mov    DWORD PTR [rsp+0x28],edi
   140018a16:	mov    QWORD PTR [rsp+0x20],rax
   140018a1b:	call   QWORD PTR [rip+0x1717]        # 0x14001a138
   140018a21:	test   eax,eax
   140018a23:	je     0x140018a5f
   140018a25:	lea    rcx,[rsp+0x40]
   140018a2a:	xor    edx,edx
   140018a2c:	call   0x140013928
   140018a31:	test   eax,eax
   140018a33:	js     0x140018a53
   140018a35:	add    rbx,0x8
   140018a39:	mov    rax,QWORD PTR [rbx]
   140018a3c:	test   rax,rax
   140018a3f:	jne    0x1400189cf
   140018a41:	xor    eax,eax
   140018a43:	mov    rbx,QWORD PTR [rsp+0x48]
   140018a48:	mov    rbp,QWORD PTR [rsp+0x50]
   140018a4d:	add    rsp,0x30
   140018a51:	pop    rdi
   140018a52:	ret    
   140018a53:	mov    rcx,QWORD PTR [rsp+0x40]
   140018a58:	test   rcx,rcx
   140018a5b:	je     0x140018a69
   140018a5d:	jmp    0x140018a64
   140018a5f:	mov    rcx,QWORD PTR [rsp+0x40]
   140018a64:	call   0x14000b490
   140018a69:	mov    eax,ebp
   140018a6b:	jmp    0x140018a43
   140018a6d:	int3   
   140018a6e:	int3   
   140018a6f:	int3   
   140018a70:	mov    rax,rsp
   140018a73:	mov    QWORD PTR [rax+0x8],rbx
   140018a77:	mov    QWORD PTR [rax+0x10],rbp
   140018a7b:	mov    QWORD PTR [rax+0x18],rsi
   140018a7f:	mov    QWORD PTR [rax+0x20],rdi
   140018a83:	push   r12
   140018a85:	sub    rsp,0x30
   140018a89:	mov    rbx,QWORD PTR [rip+0xbf58]        # 0x1400249e8
   140018a90:	xor    r12d,r12d
   140018a93:	mov    edi,r12d
   140018a96:	test   rbx,rbx
   140018a99:	jne    0x140018ab8
   140018a9b:	or     eax,0xffffffff
   140018a9e:	jmp    0x140018b5d
   140018aa3:	cmp    ax,0x3d
   140018aa7:	je     0x140018aab
   140018aa9:	inc    edi
   140018aab:	mov    rcx,rbx
   140018aae:	call   0x140013ce4
   140018ab3:	lea    rbx,[rbx+rax*2+0x2]
   140018ab8:	movzx  eax,WORD PTR [rbx]
   140018abb:	test   ax,ax
   140018abe:	jne    0x140018aa3
   140018ac0:	lea    eax,[rdi+0x1]
   140018ac3:	mov    edx,0x8
   140018ac8:	movsxd rcx,eax
   140018acb:	call   0x140010bd0
   140018ad0:	mov    rdi,rax
   140018ad3:	mov    QWORD PTR [rip+0xbece],rax        # 0x1400249a8
   140018ada:	test   rax,rax
   140018add:	je     0x140018a9b
   140018adf:	mov    rbx,QWORD PTR [rip+0xbf02]        # 0x1400249e8
   140018ae6:	cmp    WORD PTR [rbx],r12w
   140018aea:	je     0x140018b3f
   140018aec:	mov    rcx,rbx
   140018aef:	call   0x140013ce4
   140018af4:	cmp    WORD PTR [rbx],0x3d
   140018af8:	lea    esi,[rax+0x1]
   140018afb:	je     0x140018b2b
   140018afd:	movsxd rbp,esi
   140018b00:	mov    edx,0x2
   140018b05:	mov    rcx,rbp
   140018b08:	call   0x140010bd0
   140018b0d:	mov    QWORD PTR [rdi],rax
   140018b10:	test   rax,rax
   140018b13:	je     0x140018b8d
   140018b15:	mov    r8,rbx
   140018b18:	mov    rdx,rbp
   140018b1b:	mov    rcx,rax
   140018b1e:	call   0x14001522c
   140018b23:	test   eax,eax
   140018b25:	jne    0x140018b78
   140018b27:	add    rdi,0x8
   140018b2b:	movsxd rax,esi
   140018b2e:	lea    rbx,[rbx+rax*2]
   140018b32:	cmp    WORD PTR [rbx],r12w
   140018b36:	jne    0x140018aec
   140018b38:	mov    rbx,QWORD PTR [rip+0xbea9]        # 0x1400249e8
   140018b3f:	mov    rcx,rbx
   140018b42:	call   0x14000b490
   140018b47:	mov    QWORD PTR [rip+0xbe9a],r12        # 0x1400249e8
   140018b4e:	mov    QWORD PTR [rdi],r12
   140018b51:	mov    DWORD PTR [rip+0xe155],0x1        # 0x140026cb0
   140018b5b:	xor    eax,eax
   140018b5d:	mov    rbx,QWORD PTR [rsp+0x40]
   140018b62:	mov    rbp,QWORD PTR [rsp+0x48]
   140018b67:	mov    rsi,QWORD PTR [rsp+0x50]
   140018b6c:	mov    rdi,QWORD PTR [rsp+0x58]
   140018b71:	add    rsp,0x30
   140018b75:	pop    r12
   140018b77:	ret    
   140018b78:	xor    r9d,r9d
   140018b7b:	xor    r8d,r8d
   140018b7e:	xor    edx,edx
   140018b80:	xor    ecx,ecx
   140018b82:	mov    QWORD PTR [rsp+0x20],r12
   140018b87:	call   0x14000cfa8
   140018b8c:	int3   
   140018b8d:	mov    rcx,QWORD PTR [rip+0xbe14]        # 0x1400249a8
   140018b94:	call   0x14000b490
   140018b99:	mov    QWORD PTR [rip+0xbe08],r12        # 0x1400249a8
   140018ba0:	jmp    0x140018a9b
   140018ba5:	int3   
   140018ba6:	int3   
   140018ba7:	int3   
   140018ba8:	mov    QWORD PTR [rsp+0x8],rbx
   140018bad:	mov    QWORD PTR [rsp+0x10],rbp
   140018bb2:	mov    QWORD PTR [rsp+0x18],rsi
   140018bb7:	push   rdi
   140018bb8:	sub    rsp,0x20
   140018bbc:	call   QWORD PTR [rip+0x1656]        # 0x14001a218
   140018bc2:	xor    ebx,ebx
   140018bc4:	mov    rdi,rax
   140018bc7:	test   rax,rax
   140018bca:	je     0x140018c18
   140018bcc:	cmp    WORD PTR [rdi],bx
   140018bcf:	je     0x140018be3
   140018bd1:	add    rax,0x2
   140018bd5:	cmp    WORD PTR [rax],bx
   140018bd8:	jne    0x140018bd1
   140018bda:	add    rax,0x2
   140018bde:	cmp    WORD PTR [rax],bx
   140018be1:	jne    0x140018bd1
   140018be3:	sub    eax,edi
   140018be5:	add    eax,0x2
   140018be8:	movsxd rbp,eax
   140018beb:	mov    rcx,rbp
   140018bee:	call   0x140010b50
   140018bf3:	mov    rsi,rax
   140018bf6:	test   rax,rax
   140018bf9:	je     0x140018c0c
   140018bfb:	mov    r8,rbp
   140018bfe:	mov    rdx,rdi
   140018c01:	mov    rcx,rax
   140018c04:	call   0x14000a170
   140018c09:	mov    rbx,rsi
   140018c0c:	mov    rcx,rdi
   140018c0f:	call   QWORD PTR [rip+0x15fb]        # 0x14001a210
   140018c15:	mov    rax,rbx
   140018c18:	mov    rbx,QWORD PTR [rsp+0x30]
   140018c1d:	mov    rbp,QWORD PTR [rsp+0x38]
   140018c22:	mov    rsi,QWORD PTR [rsp+0x40]
   140018c27:	add    rsp,0x20
   140018c2b:	pop    rdi
   140018c2c:	ret    
   140018c2d:	int3   
   140018c2e:	int3   
   140018c2f:	int3   
   140018c30:	jmp    0x140018c3b
   140018c32:	cmp    ax,dx
   140018c35:	je     0x140018c48
   140018c37:	add    rcx,0x2
   140018c3b:	movzx  eax,WORD PTR [rcx]
   140018c3e:	test   ax,ax
   140018c41:	jne    0x140018c32
   140018c43:	cmp    ax,dx
   140018c46:	jne    0x140018c4c
   140018c48:	mov    rax,rcx
   140018c4b:	ret    
   140018c4c:	xor    eax,eax
   140018c4e:	ret    
   140018c4f:	int3   
   140018c50:	mov    QWORD PTR [rsp+0x8],rbx
   140018c55:	mov    QWORD PTR [rsp+0x10],rsi
   140018c5a:	push   rdi
   140018c5b:	sub    rsp,0x30
   140018c5f:	mov    rbx,rcx
   140018c62:	test   rcx,rcx
   140018c65:	je     0x140018cae
   140018c67:	call   0x140009fd0
   140018c6c:	mov    rsi,rax
   140018c6f:	lea    rcx,[rax+0x1]
   140018c73:	call   0x14000b304
   140018c78:	mov    rdi,rax
   140018c7b:	test   rax,rax
   140018c7e:	je     0x140018cae
   140018c80:	lea    rdx,[rsi+0x1]
   140018c84:	mov    r8,rbx
   140018c87:	mov    rcx,rax
   140018c8a:	call   0x14000eae0
   140018c8f:	test   eax,eax
   140018c91:	jne    0x140018c98
   140018c93:	mov    rax,rdi
   140018c96:	jmp    0x140018cb0
   140018c98:	and    QWORD PTR [rsp+0x20],0x0
   140018c9e:	xor    r9d,r9d
   140018ca1:	xor    r8d,r8d
   140018ca4:	xor    edx,edx
   140018ca6:	xor    ecx,ecx
   140018ca8:	call   0x14000cfa8
   140018cad:	int3   
   140018cae:	xor    eax,eax
   140018cb0:	mov    rbx,QWORD PTR [rsp+0x40]
   140018cb5:	mov    rsi,QWORD PTR [rsp+0x48]
   140018cba:	add    rsp,0x30
   140018cbe:	pop    rdi
   140018cbf:	ret    
   140018cc0:	rex push rbp
   140018cc2:	push   r12
   140018cc4:	push   r13
   140018cc6:	push   r14
   140018cc8:	push   r15
   140018cca:	sub    rsp,0x40
   140018cce:	lea    rbp,[rsp+0x30]
   140018cd3:	mov    QWORD PTR [rbp+0x40],rbx
   140018cd7:	mov    QWORD PTR [rbp+0x48],rsi
   140018cdb:	mov    QWORD PTR [rbp+0x50],rdi
   140018cdf:	mov    rax,QWORD PTR [rip+0xa3da]        # 0x1400230c0
   140018ce6:	xor    rax,rbp
   140018ce9:	mov    QWORD PTR [rbp+0x0],rax
   140018ced:	mov    esi,DWORD PTR [rbp+0x68]
   140018cf0:	xor    edi,edi
   140018cf2:	mov    r13d,r9d
   140018cf5:	mov    r14,r8
   140018cf8:	mov    r15d,edx
   140018cfb:	test   esi,esi
   140018cfd:	jne    0x140018d05
   140018cff:	mov    rax,QWORD PTR [rcx]
   140018d02:	mov    esi,DWORD PTR [rax+0x4]
   140018d05:	neg    DWORD PTR [rbp+0x70]
   140018d08:	mov    ecx,esi
   140018d0a:	mov    DWORD PTR [rsp+0x28],edi
   140018d0e:	sbb    edx,edx
   140018d10:	mov    QWORD PTR [rsp+0x20],rdi
   140018d15:	and    edx,0x8
   140018d18:	inc    edx
   140018d1a:	call   QWORD PTR [rip+0x1418]        # 0x14001a138
   140018d20:	movsxd r12,eax
   140018d23:	test   eax,eax
   140018d25:	jne    0x140018d2e
   140018d27:	xor    eax,eax
   140018d29:	jmp    0x140018df8
   140018d2e:	jle    0x140018d97
   140018d30:	movabs rax,0x7ffffffffffffff0
   140018d3a:	cmp    r12,rax
   140018d3d:	ja     0x140018d97
   140018d3f:	lea    rcx,[r12+r12*1+0x10]
   140018d44:	cmp    rcx,0x400
   140018d4b:	ja     0x140018d7e
   140018d4d:	lea    rax,[rcx+0xf]
   140018d51:	cmp    rax,rcx
   140018d54:	ja     0x140018d60
   140018d56:	movabs rax,0xffffffffffffff0
   140018d60:	and    rax,0xfffffffffffffff0
   140018d64:	call   0x140016f30
   140018d69:	sub    rsp,rax
   140018d6c:	lea    rbx,[rsp+0x30]
   140018d71:	test   rbx,rbx
   140018d74:	je     0x140018d27
   140018d76:	mov    DWORD PTR [rbx],0xcccc
   140018d7c:	jmp    0x140018d91
   140018d7e:	call   0x14000b304
   140018d83:	mov    rbx,rax
   140018d86:	test   rax,rax
   140018d89:	je     0x140018d9a
   140018d8b:	mov    DWORD PTR [rax],0xdddd
   140018d91:	add    rbx,0x10
   140018d95:	jmp    0x140018d9a
   140018d97:	mov    rbx,rdi
   140018d9a:	test   rbx,rbx
   140018d9d:	je     0x140018d27
   140018d9f:	mov    r8,r12
   140018da2:	xor    edx,edx
   140018da4:	mov    rcx,rbx
   140018da7:	add    r8,r8
   140018daa:	call   0x14000a560
   140018daf:	mov    r9d,r13d
   140018db2:	mov    r8,r14
   140018db5:	mov    edx,0x1
   140018dba:	mov    ecx,esi
   140018dbc:	mov    DWORD PTR [rsp+0x28],r12d
   140018dc1:	mov    QWORD PTR [rsp+0x20],rbx
   140018dc6:	call   QWORD PTR [rip+0x136c]        # 0x14001a138
   140018dcc:	test   eax,eax
   140018dce:	je     0x140018de5
   140018dd0:	mov    r9,QWORD PTR [rbp+0x60]
   140018dd4:	mov    r8d,eax
   140018dd7:	mov    rdx,rbx
   140018dda:	mov    ecx,r15d
   140018ddd:	call   QWORD PTR [rip+0x154d]        # 0x14001a330
   140018de3:	mov    edi,eax
   140018de5:	lea    rcx,[rbx-0x10]
   140018de9:	cmp    DWORD PTR [rcx],0xdddd
   140018def:	jne    0x140018df6
   140018df1:	call   0x14000b490
   140018df6:	mov    eax,edi
   140018df8:	mov    rcx,QWORD PTR [rbp+0x0]
   140018dfc:	xor    rcx,rbp
   140018dff:	call   0x14000a850
   140018e04:	mov    rbx,QWORD PTR [rbp+0x40]
   140018e08:	mov    rsi,QWORD PTR [rbp+0x48]
   140018e0c:	mov    rdi,QWORD PTR [rbp+0x50]
   140018e10:	lea    rsp,[rbp+0x10]
   140018e14:	pop    r15
   140018e16:	pop    r14
   140018e18:	pop    r13
   140018e1a:	pop    r12
   140018e1c:	pop    rbp
   140018e1d:	ret    
   140018e1e:	int3   
   140018e1f:	int3   
   140018e20:	mov    QWORD PTR [rsp+0x8],rbx
   140018e25:	mov    QWORD PTR [rsp+0x10],rsi
   140018e2a:	push   rdi
   140018e2b:	sub    rsp,0x60
   140018e2f:	mov    esi,edx
   140018e31:	mov    rdx,rcx
   140018e34:	lea    rcx,[rsp+0x40]
   140018e39:	mov    ebx,r9d
   140018e3c:	mov    rdi,r8
   140018e3f:	call   0x14000c724
   140018e44:	mov    r11d,DWORD PTR [rsp+0xa8]
   140018e4c:	mov    eax,DWORD PTR [rsp+0x98]
   140018e53:	lea    rcx,[rsp+0x40]
   140018e58:	mov    DWORD PTR [rsp+0x30],r11d
   140018e5d:	mov    DWORD PTR [rsp+0x28],eax
   140018e61:	mov    rax,QWORD PTR [rsp+0x90]
   140018e69:	mov    r9d,ebx
   140018e6c:	mov    r8,rdi
   140018e6f:	mov    edx,esi
   140018e71:	mov    QWORD PTR [rsp+0x20],rax
   140018e76:	call   0x140018cc0
   140018e7b:	cmp    BYTE PTR [rsp+0x58],0x0
   140018e80:	je     0x140018e8e
   140018e82:	mov    rcx,QWORD PTR [rsp+0x50]
   140018e87:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140018e8e:	mov    rbx,QWORD PTR [rsp+0x70]
   140018e93:	mov    rsi,QWORD PTR [rsp+0x78]
   140018e98:	add    rsp,0x60
   140018e9c:	pop    rdi
   140018e9d:	ret    
   140018e9e:	int3   
   140018e9f:	int3   
   140018ea0:	test   rcx,rcx
   140018ea3:	je     0x14001928d
   140018ea9:	push   rbx
   140018eaa:	sub    rsp,0x20
   140018eae:	mov    rbx,rcx
   140018eb1:	mov    rcx,QWORD PTR [rcx+0x8]
   140018eb5:	call   0x14000b490
   140018eba:	mov    rcx,QWORD PTR [rbx+0x10]
   140018ebe:	call   0x14000b490
   140018ec3:	mov    rcx,QWORD PTR [rbx+0x18]
   140018ec7:	call   0x14000b490
   140018ecc:	mov    rcx,QWORD PTR [rbx+0x20]
   140018ed0:	call   0x14000b490
   140018ed5:	mov    rcx,QWORD PTR [rbx+0x28]
   140018ed9:	call   0x14000b490
   140018ede:	mov    rcx,QWORD PTR [rbx+0x30]
   140018ee2:	call   0x14000b490
   140018ee7:	mov    rcx,QWORD PTR [rbx]
   140018eea:	call   0x14000b490
   140018eef:	mov    rcx,QWORD PTR [rbx+0x40]
   140018ef3:	call   0x14000b490
   140018ef8:	mov    rcx,QWORD PTR [rbx+0x48]
   140018efc:	call   0x14000b490
   140018f01:	mov    rcx,QWORD PTR [rbx+0x50]
   140018f05:	call   0x14000b490
   140018f0a:	mov    rcx,QWORD PTR [rbx+0x58]
   140018f0e:	call   0x14000b490
   140018f13:	mov    rcx,QWORD PTR [rbx+0x60]
   140018f17:	call   0x14000b490
   140018f1c:	mov    rcx,QWORD PTR [rbx+0x68]
   140018f20:	call   0x14000b490
   140018f25:	mov    rcx,QWORD PTR [rbx+0x38]
   140018f29:	call   0x14000b490
   140018f2e:	mov    rcx,QWORD PTR [rbx+0x70]
   140018f32:	call   0x14000b490
   140018f37:	mov    rcx,QWORD PTR [rbx+0x78]
   140018f3b:	call   0x14000b490
   140018f40:	mov    rcx,QWORD PTR [rbx+0x80]
   140018f47:	call   0x14000b490
   140018f4c:	mov    rcx,QWORD PTR [rbx+0x88]
   140018f53:	call   0x14000b490
   140018f58:	mov    rcx,QWORD PTR [rbx+0x90]
   140018f5f:	call   0x14000b490
   140018f64:	mov    rcx,QWORD PTR [rbx+0x98]
   140018f6b:	call   0x14000b490
   140018f70:	mov    rcx,QWORD PTR [rbx+0xa0]
   140018f77:	call   0x14000b490
   140018f7c:	mov    rcx,QWORD PTR [rbx+0xa8]
   140018f83:	call   0x14000b490
   140018f88:	mov    rcx,QWORD PTR [rbx+0xb0]
   140018f8f:	call   0x14000b490
   140018f94:	mov    rcx,QWORD PTR [rbx+0xb8]
   140018f9b:	call   0x14000b490
   140018fa0:	mov    rcx,QWORD PTR [rbx+0xc0]
   140018fa7:	call   0x14000b490
   140018fac:	mov    rcx,QWORD PTR [rbx+0xc8]
   140018fb3:	call   0x14000b490
   140018fb8:	mov    rcx,QWORD PTR [rbx+0xd0]
   140018fbf:	call   0x14000b490
   140018fc4:	mov    rcx,QWORD PTR [rbx+0xd8]
   140018fcb:	call   0x14000b490
   140018fd0:	mov    rcx,QWORD PTR [rbx+0xe0]
   140018fd7:	call   0x14000b490
   140018fdc:	mov    rcx,QWORD PTR [rbx+0xe8]
   140018fe3:	call   0x14000b490
   140018fe8:	mov    rcx,QWORD PTR [rbx+0xf0]
   140018fef:	call   0x14000b490
   140018ff4:	mov    rcx,QWORD PTR [rbx+0xf8]
   140018ffb:	call   0x14000b490
   140019000:	mov    rcx,QWORD PTR [rbx+0x100]
   140019007:	call   0x14000b490
   14001900c:	mov    rcx,QWORD PTR [rbx+0x108]
   140019013:	call   0x14000b490
   140019018:	mov    rcx,QWORD PTR [rbx+0x110]
   14001901f:	call   0x14000b490
   140019024:	mov    rcx,QWORD PTR [rbx+0x118]
   14001902b:	call   0x14000b490
   140019030:	mov    rcx,QWORD PTR [rbx+0x120]
   140019037:	call   0x14000b490
   14001903c:	mov    rcx,QWORD PTR [rbx+0x128]
   140019043:	call   0x14000b490
   140019048:	mov    rcx,QWORD PTR [rbx+0x130]
   14001904f:	call   0x14000b490
   140019054:	mov    rcx,QWORD PTR [rbx+0x138]
   14001905b:	call   0x14000b490
   140019060:	mov    rcx,QWORD PTR [rbx+0x140]
   140019067:	call   0x14000b490
   14001906c:	mov    rcx,QWORD PTR [rbx+0x148]
   140019073:	call   0x14000b490
   140019078:	mov    rcx,QWORD PTR [rbx+0x150]
   14001907f:	call   0x14000b490
   140019084:	mov    rcx,QWORD PTR [rbx+0x170]
   14001908b:	call   0x14000b490
   140019090:	mov    rcx,QWORD PTR [rbx+0x178]
   140019097:	call   0x14000b490
   14001909c:	mov    rcx,QWORD PTR [rbx+0x180]
   1400190a3:	call   0x14000b490
   1400190a8:	mov    rcx,QWORD PTR [rbx+0x188]
   1400190af:	call   0x14000b490
   1400190b4:	mov    rcx,QWORD PTR [rbx+0x190]
   1400190bb:	call   0x14000b490
   1400190c0:	mov    rcx,QWORD PTR [rbx+0x198]
   1400190c7:	call   0x14000b490
   1400190cc:	mov    rcx,QWORD PTR [rbx+0x168]
   1400190d3:	call   0x14000b490
   1400190d8:	mov    rcx,QWORD PTR [rbx+0x1a8]
   1400190df:	call   0x14000b490
   1400190e4:	mov    rcx,QWORD PTR [rbx+0x1b0]
   1400190eb:	call   0x14000b490
   1400190f0:	mov    rcx,QWORD PTR [rbx+0x1b8]
   1400190f7:	call   0x14000b490
   1400190fc:	mov    rcx,QWORD PTR [rbx+0x1c0]
   140019103:	call   0x14000b490
   140019108:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14001910f:	call   0x14000b490
   140019114:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14001911b:	call   0x14000b490
   140019120:	mov    rcx,QWORD PTR [rbx+0x1a0]
   140019127:	call   0x14000b490
   14001912c:	mov    rcx,QWORD PTR [rbx+0x1d8]
   140019133:	call   0x14000b490
   140019138:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14001913f:	call   0x14000b490
   140019144:	mov    rcx,QWORD PTR [rbx+0x1e8]
   14001914b:	call   0x14000b490
   140019150:	mov    rcx,QWORD PTR [rbx+0x1f0]
   140019157:	call   0x14000b490
   14001915c:	mov    rcx,QWORD PTR [rbx+0x1f8]
   140019163:	call   0x14000b490
   140019168:	mov    rcx,QWORD PTR [rbx+0x200]
   14001916f:	call   0x14000b490
   140019174:	mov    rcx,QWORD PTR [rbx+0x208]
   14001917b:	call   0x14000b490
   140019180:	mov    rcx,QWORD PTR [rbx+0x210]
   140019187:	call   0x14000b490
   14001918c:	mov    rcx,QWORD PTR [rbx+0x218]
   140019193:	call   0x14000b490
   140019198:	mov    rcx,QWORD PTR [rbx+0x220]
   14001919f:	call   0x14000b490
   1400191a4:	mov    rcx,QWORD PTR [rbx+0x228]
   1400191ab:	call   0x14000b490
   1400191b0:	mov    rcx,QWORD PTR [rbx+0x230]
   1400191b7:	call   0x14000b490
   1400191bc:	mov    rcx,QWORD PTR [rbx+0x238]
   1400191c3:	call   0x14000b490
   1400191c8:	mov    rcx,QWORD PTR [rbx+0x240]
   1400191cf:	call   0x14000b490
   1400191d4:	mov    rcx,QWORD PTR [rbx+0x248]
   1400191db:	call   0x14000b490
   1400191e0:	mov    rcx,QWORD PTR [rbx+0x250]
   1400191e7:	call   0x14000b490
   1400191ec:	mov    rcx,QWORD PTR [rbx+0x258]
   1400191f3:	call   0x14000b490
   1400191f8:	mov    rcx,QWORD PTR [rbx+0x260]
   1400191ff:	call   0x14000b490
   140019204:	mov    rcx,QWORD PTR [rbx+0x268]
   14001920b:	call   0x14000b490
   140019210:	mov    rcx,QWORD PTR [rbx+0x270]
   140019217:	call   0x14000b490
   14001921c:	mov    rcx,QWORD PTR [rbx+0x278]
   140019223:	call   0x14000b490
   140019228:	mov    rcx,QWORD PTR [rbx+0x280]
   14001922f:	call   0x14000b490
   140019234:	mov    rcx,QWORD PTR [rbx+0x288]
   14001923b:	call   0x14000b490
   140019240:	mov    rcx,QWORD PTR [rbx+0x290]
   140019247:	call   0x14000b490
   14001924c:	mov    rcx,QWORD PTR [rbx+0x298]
   140019253:	call   0x14000b490
   140019258:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14001925f:	call   0x14000b490
   140019264:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14001926b:	call   0x14000b490
   140019270:	mov    rcx,QWORD PTR [rbx+0x2b0]
   140019277:	call   0x14000b490
   14001927c:	mov    rcx,QWORD PTR [rbx+0x2b8]
   140019283:	call   0x14000b490
   140019288:	add    rsp,0x20
   14001928c:	pop    rbx
   14001928d:	ret    
   14001928e:	int3   
   14001928f:	int3   
   140019290:	test   rcx,rcx
   140019293:	je     0x1400192fb
   140019295:	push   rbx
   140019296:	sub    rsp,0x20
   14001929a:	mov    rbx,rcx
   14001929d:	mov    rcx,QWORD PTR [rcx]
   1400192a0:	cmp    rcx,QWORD PTR [rip+0xb3a9]        # 0x140024650
   1400192a7:	je     0x1400192ae
   1400192a9:	call   0x14000b490
   1400192ae:	mov    rcx,QWORD PTR [rbx+0x8]
   1400192b2:	cmp    rcx,QWORD PTR [rip+0xb39f]        # 0x140024658
   1400192b9:	je     0x1400192c0
   1400192bb:	call   0x14000b490
   1400192c0:	mov    rcx,QWORD PTR [rbx+0x10]
   1400192c4:	cmp    rcx,QWORD PTR [rip+0xb395]        # 0x140024660
   1400192cb:	je     0x1400192d2
   1400192cd:	call   0x14000b490
   1400192d2:	mov    rcx,QWORD PTR [rbx+0x58]
   1400192d6:	cmp    rcx,QWORD PTR [rip+0xb3cb]        # 0x1400246a8
   1400192dd:	je     0x1400192e4
   1400192df:	call   0x14000b490
   1400192e4:	mov    rcx,QWORD PTR [rbx+0x60]
   1400192e8:	cmp    rcx,QWORD PTR [rip+0xb3c1]        # 0x1400246b0
   1400192ef:	je     0x1400192f6
   1400192f1:	call   0x14000b490
   1400192f6:	add    rsp,0x20
   1400192fa:	pop    rbx
   1400192fb:	ret    
   1400192fc:	test   rcx,rcx
   1400192ff:	je     0x140019405
   140019305:	push   rbx
   140019306:	sub    rsp,0x20
   14001930a:	mov    rbx,rcx
   14001930d:	mov    rcx,QWORD PTR [rcx+0x18]
   140019311:	cmp    rcx,QWORD PTR [rip+0xb350]        # 0x140024668
   140019318:	je     0x14001931f
   14001931a:	call   0x14000b490
   14001931f:	mov    rcx,QWORD PTR [rbx+0x20]
   140019323:	cmp    rcx,QWORD PTR [rip+0xb346]        # 0x140024670
   14001932a:	je     0x140019331
   14001932c:	call   0x14000b490
   140019331:	mov    rcx,QWORD PTR [rbx+0x28]
   140019335:	cmp    rcx,QWORD PTR [rip+0xb33c]        # 0x140024678
   14001933c:	je     0x140019343
   14001933e:	call   0x14000b490
   140019343:	mov    rcx,QWORD PTR [rbx+0x30]
   140019347:	cmp    rcx,QWORD PTR [rip+0xb332]        # 0x140024680
   14001934e:	je     0x140019355
   140019350:	call   0x14000b490
   140019355:	mov    rcx,QWORD PTR [rbx+0x38]
   140019359:	cmp    rcx,QWORD PTR [rip+0xb328]        # 0x140024688
   140019360:	je     0x140019367
   140019362:	call   0x14000b490
   140019367:	mov    rcx,QWORD PTR [rbx+0x40]
   14001936b:	cmp    rcx,QWORD PTR [rip+0xb31e]        # 0x140024690
   140019372:	je     0x140019379
   140019374:	call   0x14000b490
   140019379:	mov    rcx,QWORD PTR [rbx+0x48]
   14001937d:	cmp    rcx,QWORD PTR [rip+0xb314]        # 0x140024698
   140019384:	je     0x14001938b
   140019386:	call   0x14000b490
   14001938b:	mov    rcx,QWORD PTR [rbx+0x68]
   14001938f:	cmp    rcx,QWORD PTR [rip+0xb322]        # 0x1400246b8
   140019396:	je     0x14001939d
   140019398:	call   0x14000b490
   14001939d:	mov    rcx,QWORD PTR [rbx+0x70]
   1400193a1:	cmp    rcx,QWORD PTR [rip+0xb318]        # 0x1400246c0
   1400193a8:	je     0x1400193af
   1400193aa:	call   0x14000b490
   1400193af:	mov    rcx,QWORD PTR [rbx+0x78]
   1400193b3:	cmp    rcx,QWORD PTR [rip+0xb30e]        # 0x1400246c8
   1400193ba:	je     0x1400193c1
   1400193bc:	call   0x14000b490
   1400193c1:	mov    rcx,QWORD PTR [rbx+0x80]
   1400193c8:	cmp    rcx,QWORD PTR [rip+0xb301]        # 0x1400246d0
   1400193cf:	je     0x1400193d6
   1400193d1:	call   0x14000b490
   1400193d6:	mov    rcx,QWORD PTR [rbx+0x88]
   1400193dd:	cmp    rcx,QWORD PTR [rip+0xb2f4]        # 0x1400246d8
   1400193e4:	je     0x1400193eb
   1400193e6:	call   0x14000b490
   1400193eb:	mov    rcx,QWORD PTR [rbx+0x90]
   1400193f2:	cmp    rcx,QWORD PTR [rip+0xb2e7]        # 0x1400246e0
   1400193f9:	je     0x140019400
   1400193fb:	call   0x14000b490
   140019400:	add    rsp,0x20
   140019404:	pop    rbx
   140019405:	ret    
   140019406:	int3   
   140019407:	int3   
   140019408:	sub    rsp,0x28
   14001940c:	call   0x14000d234
   140019411:	mov    rcx,QWORD PTR [rax+0xc0]
   140019418:	cmp    rcx,QWORD PTR [rip+0xafc1]        # 0x1400243e0
   14001941f:	je     0x140019437
   140019421:	mov    eax,DWORD PTR [rax+0xc8]
   140019427:	test   DWORD PTR [rip+0xab83],eax        # 0x140023fb0
   14001942d:	jne    0x140019437
   14001942f:	call   0x140014cdc
   140019434:	mov    rcx,rax
   140019437:	mov    eax,DWORD PTR [rcx+0x4]
   14001943a:	add    rsp,0x28
   14001943e:	ret    
   14001943f:	int3   
   140019440:	mov    r10,rcx
   140019443:	test   r8,r8
   140019446:	je     0x140019483
   140019448:	movzx  r9d,BYTE PTR [r10]
   14001944c:	inc    r10
   14001944f:	lea    eax,[r9-0x41]
   140019453:	cmp    eax,0x19
   140019456:	ja     0x14001945c
   140019458:	add    r9d,0x20
   14001945c:	movzx  ecx,BYTE PTR [rdx]
   14001945f:	inc    rdx
   140019462:	lea    eax,[rcx-0x41]
   140019465:	cmp    eax,0x19
   140019468:	ja     0x14001946d
   14001946a:	add    ecx,0x20
   14001946d:	dec    r8
   140019470:	je     0x14001947c
   140019472:	test   r9d,r9d
   140019475:	je     0x14001947c
   140019477:	cmp    r9d,ecx
   14001947a:	je     0x140019448
   14001947c:	sub    r9d,ecx
   14001947f:	mov    eax,r9d
   140019482:	ret    
   140019483:	xor    eax,eax
   140019485:	ret    
   140019486:	int3   
   140019487:	int3   
   140019488:	mov    rax,rsp
   14001948b:	mov    QWORD PTR [rax+0x8],rbx
   14001948f:	mov    QWORD PTR [rax+0x10],rsi
   140019493:	mov    QWORD PTR [rax+0x18],rdi
   140019497:	mov    QWORD PTR [rax+0x20],r12
   14001949b:	push   rbp
   14001949c:	mov    rbp,rsp
   14001949f:	sub    rsp,0x40
   1400194a3:	mov    r12,r8
   1400194a6:	mov    rsi,rdx
   1400194a9:	mov    rdi,rcx
   1400194ac:	test   r8,r8
   1400194af:	je     0x14001956f
   1400194b5:	lea    rcx,[rbp-0x20]
   1400194b9:	mov    rdx,r9
   1400194bc:	call   0x14000c724
   1400194c1:	test   rdi,rdi
   1400194c4:	jne    0x1400194f1
   1400194c6:	call   0x14000bdf0
   1400194cb:	mov    DWORD PTR [rax],0x16
   1400194d1:	call   0x14000d04c
   1400194d6:	cmp    BYTE PTR [rbp-0x8],0x0
   1400194da:	je     0x1400194e7
   1400194dc:	mov    rax,QWORD PTR [rbp-0x10]
   1400194e0:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400194e7:	mov    eax,0x7fffffff
   1400194ec:	jmp    0x140019571
   1400194f1:	test   rsi,rsi
   1400194f4:	je     0x1400194c6
   1400194f6:	cmp    r12,0x7fffffff
   1400194fd:	ja     0x1400194c6
   1400194ff:	mov    rax,QWORD PTR [rbp-0x20]
   140019503:	cmp    DWORD PTR [rax+0x14],0x0
   140019507:	jne    0x14001952a
   140019509:	mov    r8,r12
   14001950c:	mov    rdx,rsi
   14001950f:	mov    rcx,rdi
   140019512:	call   0x140019440
   140019517:	cmp    BYTE PTR [rbp-0x8],0x0
   14001951b:	je     0x140019571
   14001951d:	mov    rcx,QWORD PTR [rbp-0x10]
   140019521:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019528:	jmp    0x140019571
   14001952a:	sub    rdi,rsi
   14001952d:	movzx  ecx,BYTE PTR [rdi+rsi*1]
   140019531:	lea    rdx,[rbp-0x20]
   140019535:	call   0x14001984c
   14001953a:	movzx  ecx,BYTE PTR [rsi]
   14001953d:	lea    rdx,[rbp-0x20]
   140019541:	mov    ebx,eax
   140019543:	call   0x14001984c
   140019548:	inc    rsi
   14001954b:	dec    r12
   14001954e:	je     0x140019558
   140019550:	test   ebx,ebx
   140019552:	je     0x140019558
   140019554:	cmp    ebx,eax
   140019556:	je     0x14001952d
   140019558:	sub    ebx,eax
   14001955a:	cmp    BYTE PTR [rbp-0x8],0x0
   14001955e:	je     0x14001956b
   140019560:	mov    rcx,QWORD PTR [rbp-0x10]
   140019564:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001956b:	mov    eax,ebx
   14001956d:	jmp    0x140019571
   14001956f:	xor    eax,eax
   140019571:	mov    rbx,QWORD PTR [rsp+0x50]
   140019576:	mov    rsi,QWORD PTR [rsp+0x58]
   14001957b:	mov    rdi,QWORD PTR [rsp+0x60]
   140019580:	mov    r12,QWORD PTR [rsp+0x68]
   140019585:	add    rsp,0x40
   140019589:	pop    rbp
   14001958a:	ret    
   14001958b:	int3   
   14001958c:	sub    rsp,0x28
   140019590:	cmp    DWORD PTR [rip+0xc3d1],0x0        # 0x140025968
   140019597:	jne    0x1400195cf
   140019599:	test   rcx,rcx
   14001959c:	jne    0x1400195b8
   14001959e:	call   0x14000bdf0
   1400195a3:	mov    DWORD PTR [rax],0x16
   1400195a9:	call   0x14000d04c
   1400195ae:	mov    eax,0x7fffffff
   1400195b3:	add    rsp,0x28
   1400195b7:	ret    
   1400195b8:	test   rdx,rdx
   1400195bb:	je     0x14001959e
   1400195bd:	cmp    r8,0x7fffffff
   1400195c4:	ja     0x14001959e
   1400195c6:	add    rsp,0x28
   1400195ca:	jmp    0x140019440
   1400195cf:	xor    r9d,r9d
   1400195d2:	add    rsp,0x28
   1400195d6:	jmp    0x140019488
   1400195db:	int3   
   1400195dc:	sub    rsp,0x48
   1400195e0:	and    QWORD PTR [rsp+0x30],0x0
   1400195e6:	and    DWORD PTR [rsp+0x28],0x0
   1400195eb:	mov    r8d,0x3
   1400195f1:	lea    rcx,[rip+0x7238]        # 0x140020830
   1400195f8:	xor    r9d,r9d
   1400195fb:	mov    edx,0x40000000
   140019600:	mov    DWORD PTR [rsp+0x20],r8d
   140019605:	call   QWORD PTR [rip+0xa2d]        # 0x14001a038
   14001960b:	mov    QWORD PTR [rip+0xb0f6],rax        # 0x140024708
   140019612:	add    rsp,0x48
   140019616:	ret    
   140019617:	int3   
   140019618:	sub    rsp,0x28
   14001961c:	mov    rcx,QWORD PTR [rip+0xb0e5]        # 0x140024708
   140019623:	cmp    rcx,0xffffffffffffffff
   140019627:	je     0x140019635
   140019629:	cmp    rcx,0xfffffffffffffffe
   14001962d:	je     0x140019635
   14001962f:	call   QWORD PTR [rip+0xa43]        # 0x14001a078
   140019635:	add    rsp,0x28
   140019639:	ret    
   14001963a:	int3   
   14001963b:	int3   
   14001963c:	mov    r9,rcx
   14001963f:	movzx  r8d,BYTE PTR [r9]
   140019643:	inc    r9
   140019646:	lea    eax,[r8-0x41]
   14001964a:	cmp    eax,0x19
   14001964d:	ja     0x140019653
   14001964f:	add    r8d,0x20
   140019653:	movzx  ecx,BYTE PTR [rdx]
   140019656:	inc    rdx
   140019659:	lea    eax,[rcx-0x41]
   14001965c:	cmp    eax,0x19
   14001965f:	ja     0x140019664
   140019661:	add    ecx,0x20
   140019664:	test   r8d,r8d
   140019667:	je     0x14001966e
   140019669:	cmp    r8d,ecx
   14001966c:	je     0x14001963f
   14001966e:	sub    r8d,ecx
   140019671:	mov    eax,r8d
   140019674:	ret    
   140019675:	int3   
   140019676:	int3   
   140019677:	int3   
   140019678:	mov    QWORD PTR [rsp+0x8],rbx
   14001967d:	mov    QWORD PTR [rsp+0x10],rsi
   140019682:	mov    QWORD PTR [rsp+0x18],rdi
   140019687:	push   rbp
   140019688:	mov    rbp,rsp
   14001968b:	sub    rsp,0x40
   14001968f:	mov    rsi,rcx
   140019692:	mov    rdi,rdx
   140019695:	lea    rcx,[rbp-0x20]
   140019699:	mov    rdx,r8
   14001969c:	call   0x14000c724
   1400196a1:	test   rsi,rsi
   1400196a4:	jne    0x1400196ce
   1400196a6:	call   0x14000bdf0
   1400196ab:	mov    DWORD PTR [rax],0x16
   1400196b1:	call   0x14000d04c
   1400196b6:	cmp    BYTE PTR [rbp-0x8],0x0
   1400196ba:	je     0x1400196c7
   1400196bc:	mov    rax,QWORD PTR [rbp-0x10]
   1400196c0:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400196c7:	mov    eax,0x7fffffff
   1400196cc:	jmp    0x140019739
   1400196ce:	test   rdi,rdi
   1400196d1:	je     0x1400196a6
   1400196d3:	mov    rax,QWORD PTR [rbp-0x20]
   1400196d7:	cmp    DWORD PTR [rax+0x14],0x0
   1400196db:	jne    0x1400196fb
   1400196dd:	mov    rdx,rdi
   1400196e0:	mov    rcx,rsi
   1400196e3:	call   0x14001963c
   1400196e8:	cmp    BYTE PTR [rbp-0x8],0x0
   1400196ec:	je     0x140019739
   1400196ee:	mov    rcx,QWORD PTR [rbp-0x10]
   1400196f2:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400196f9:	jmp    0x140019739
   1400196fb:	sub    rsi,rdi
   1400196fe:	movzx  ecx,BYTE PTR [rsi+rdi*1]
   140019702:	lea    rdx,[rbp-0x20]
   140019706:	call   0x14001984c
   14001970b:	movzx  ecx,BYTE PTR [rdi]
   14001970e:	lea    rdx,[rbp-0x20]
   140019712:	mov    ebx,eax
   140019714:	call   0x14001984c
   140019719:	inc    rdi
   14001971c:	test   ebx,ebx
   14001971e:	je     0x140019724
   140019720:	cmp    ebx,eax
   140019722:	je     0x1400196fe
   140019724:	sub    ebx,eax
   140019726:	cmp    BYTE PTR [rbp-0x8],0x0
   14001972a:	je     0x140019737
   14001972c:	mov    rcx,QWORD PTR [rbp-0x10]
   140019730:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019737:	mov    eax,ebx
   140019739:	mov    rbx,QWORD PTR [rsp+0x50]
   14001973e:	mov    rsi,QWORD PTR [rsp+0x58]
   140019743:	mov    rdi,QWORD PTR [rsp+0x60]
   140019748:	add    rsp,0x40
   14001974c:	pop    rbp
   14001974d:	ret    
   14001974e:	int3   
   14001974f:	int3   
   140019750:	sub    rsp,0x28
   140019754:	cmp    DWORD PTR [rip+0xc20d],0x0        # 0x140025968
   14001975b:	jne    0x14001978a
   14001975d:	test   rcx,rcx
   140019760:	jne    0x14001977c
   140019762:	call   0x14000bdf0
   140019767:	mov    DWORD PTR [rax],0x16
   14001976d:	call   0x14000d04c
   140019772:	mov    eax,0x7fffffff
   140019777:	add    rsp,0x28
   14001977b:	ret    
   14001977c:	test   rdx,rdx
   14001977f:	je     0x140019762
   140019781:	add    rsp,0x28
   140019785:	jmp    0x14001963c
   14001978a:	xor    r8d,r8d
   14001978d:	add    rsp,0x28
   140019791:	jmp    0x140019678
   140019796:	int3   
   140019797:	int3   
   140019798:	xor    edx,edx
   14001979a:	lea    r8d,[rdx+0xa]
   14001979e:	jmp    0x140016268
   1400197a3:	int3   
   1400197a4:	mov    rax,rsp
   1400197a7:	mov    QWORD PTR [rax+0x8],rbx
   1400197ab:	mov    QWORD PTR [rax+0x10],rbp
   1400197af:	mov    QWORD PTR [rax+0x18],rsi
   1400197b3:	mov    QWORD PTR [rax+0x20],rdi
   1400197b7:	push   r12
   1400197b9:	sub    rsp,0x30
   1400197bd:	movsxd rbx,r9d
   1400197c0:	mov    rsi,r8
   1400197c3:	mov    ebp,edx
   1400197c5:	mov    r12d,ecx
   1400197c8:	test   r9d,r9d
   1400197cb:	jle    0x1400197db
   1400197cd:	mov    rdx,rbx
   1400197d0:	mov    rcx,r8
   1400197d3:	call   0x14001999c
   1400197d8:	mov    rbx,rax
   1400197db:	movsxd rax,DWORD PTR [rsp+0x68]
   1400197e0:	mov    rdi,QWORD PTR [rsp+0x60]
   1400197e5:	test   eax,eax
   1400197e7:	jle    0x1400197f4
   1400197e9:	mov    rdx,rax
   1400197ec:	mov    rcx,rdi
   1400197ef:	call   0x14001999c
   1400197f4:	test   ebx,ebx
   1400197f6:	je     0x140019818
   1400197f8:	test   eax,eax
   1400197fa:	je     0x140019818
   1400197fc:	mov    DWORD PTR [rsp+0x28],eax
   140019800:	mov    r9d,ebx
   140019803:	mov    r8,rsi
   140019806:	mov    edx,ebp
   140019808:	mov    ecx,r12d
   14001980b:	mov    QWORD PTR [rsp+0x20],rdi
   140019810:	call   QWORD PTR [rip+0xad2]        # 0x14001a2e8
   140019816:	jmp    0x14001982f
   140019818:	sub    ebx,eax
   14001981a:	mov    eax,0x3
   14001981f:	lea    ecx,[rax-0x2]
   140019822:	cmovs  eax,ecx
   140019825:	mov    ecx,0x2
   14001982a:	test   ebx,ebx
   14001982c:	cmove  eax,ecx
   14001982f:	mov    rbx,QWORD PTR [rsp+0x40]
   140019834:	mov    rbp,QWORD PTR [rsp+0x48]
   140019839:	mov    rsi,QWORD PTR [rsp+0x50]
   14001983e:	mov    rdi,QWORD PTR [rsp+0x58]
   140019843:	add    rsp,0x30
   140019847:	pop    r12
   140019849:	ret    
   14001984a:	int3   
   14001984b:	int3   
   14001984c:	mov    QWORD PTR [rsp+0x10],rdi
   140019851:	mov    QWORD PTR [rsp+0x20],r12
   140019856:	push   rbp
   140019857:	mov    rbp,rsp
   14001985a:	sub    rsp,0x70
   14001985e:	movsxd rdi,ecx
   140019861:	lea    rcx,[rbp-0x20]
   140019865:	call   0x14000c724
   14001986a:	cmp    edi,0x100
   140019870:	jae    0x1400198cf
   140019872:	mov    rdx,QWORD PTR [rbp-0x20]
   140019876:	cmp    DWORD PTR [rdx+0x10c],0x1
   14001987d:	jle    0x140019895
   14001987f:	lea    r8,[rbp-0x20]
   140019883:	mov    edx,0x1
   140019888:	mov    ecx,edi
   14001988a:	call   0x140014d54
   14001988f:	mov    rdx,QWORD PTR [rbp-0x20]
   140019893:	jmp    0x1400198a3
   140019895:	mov    rax,QWORD PTR [rdx+0x140]
   14001989c:	movzx  eax,WORD PTR [rax+rdi*2]
   1400198a0:	and    eax,0x1
   1400198a3:	test   eax,eax
   1400198a5:	je     0x1400198b7
   1400198a7:	mov    rax,QWORD PTR [rdx+0x148]
   1400198ae:	movzx  eax,BYTE PTR [rax+rdi*1]
   1400198b2:	jmp    0x140019977
   1400198b7:	cmp    BYTE PTR [rbp-0x8],0x0
   1400198bb:	je     0x1400198c8
   1400198bd:	mov    rax,QWORD PTR [rbp-0x10]
   1400198c1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400198c8:	mov    eax,edi
   1400198ca:	jmp    0x140019988
   1400198cf:	mov    rax,QWORD PTR [rbp-0x20]
   1400198d3:	cmp    DWORD PTR [rax+0x10c],0x1
   1400198da:	jle    0x140019907
   1400198dc:	mov    r12d,edi
   1400198df:	lea    rdx,[rbp-0x20]
   1400198e3:	sar    r12d,0x8
   1400198e7:	movzx  ecx,r12b
   1400198eb:	call   0x140015338
   1400198f0:	test   eax,eax
   1400198f2:	je     0x140019907
   1400198f4:	mov    BYTE PTR [rbp+0x10],r12b
   1400198f8:	mov    BYTE PTR [rbp+0x11],dil
   1400198fc:	mov    BYTE PTR [rbp+0x12],0x0
   140019900:	mov    edx,0x2
   140019905:	jmp    0x14001991f
   140019907:	call   0x14000bdf0
   14001990c:	mov    edx,0x1
   140019911:	mov    DWORD PTR [rax],0x2a
   140019917:	mov    BYTE PTR [rbp+0x10],dil
   14001991b:	mov    BYTE PTR [rbp+0x11],0x0
   14001991f:	mov    rcx,QWORD PTR [rbp-0x20]
   140019923:	mov    DWORD PTR [rsp+0x40],0x1
   14001992b:	lea    r9,[rbp+0x10]
   14001992f:	mov    eax,DWORD PTR [rcx+0x4]
   140019932:	mov    r8d,0x100
   140019938:	mov    DWORD PTR [rsp+0x38],eax
   14001993c:	lea    rax,[rbp+0x20]
   140019940:	mov    DWORD PTR [rsp+0x30],0x3
   140019948:	mov    QWORD PTR [rsp+0x28],rax
   14001994d:	mov    DWORD PTR [rsp+0x20],edx
   140019951:	mov    edx,DWORD PTR [rcx+0x14]
   140019954:	lea    rcx,[rbp-0x20]
   140019958:	call   0x1400186dc
   14001995d:	test   eax,eax
   14001995f:	je     0x1400198b7
   140019965:	cmp    eax,0x1
   140019968:	movzx  eax,BYTE PTR [rbp+0x20]
   14001996c:	je     0x140019977
   14001996e:	movzx  ecx,BYTE PTR [rbp+0x21]
   140019972:	shl    eax,0x8
   140019975:	or     eax,ecx
   140019977:	cmp    BYTE PTR [rbp-0x8],0x0
   14001997b:	je     0x140019988
   14001997d:	mov    rcx,QWORD PTR [rbp-0x10]
   140019981:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019988:	lea    r11,[rsp+0x70]
   14001998d:	mov    rdi,QWORD PTR [r11+0x18]
   140019991:	mov    r12,QWORD PTR [r11+0x28]
   140019995:	mov    rsp,r11
   140019998:	pop    rbp
   140019999:	ret    
   14001999a:	int3   
   14001999b:	int3   
   14001999c:	xor    r8d,r8d
   14001999f:	mov    eax,r8d
   1400199a2:	test   rdx,rdx
   1400199a5:	je     0x1400199b9
   1400199a7:	cmp    WORD PTR [rcx],r8w
   1400199ab:	je     0x1400199b9
   1400199ad:	inc    rax
   1400199b0:	add    rcx,0x2
   1400199b4:	cmp    rax,rdx
   1400199b7:	jb     0x1400199a7
   1400199b9:	repz ret 
   1400199bb:	int3   
   1400199bc:	jmp    QWORD PTR [rip+0x7d6]        # 0x14001a198
   1400199c2:	jmp    QWORD PTR [rip+0x7d8]        # 0x14001a1a0
   1400199c8:	jmp    QWORD PTR [rip+0x81a]        # 0x14001a1e8
   1400199ce:	int3   
   1400199cf:	int3   
   1400199d0:	rex push rbp
   1400199d2:	sub    rsp,0x20
   1400199d6:	mov    rbp,rdx
   1400199d9:	cmp    DWORD PTR [rbp+0x80],0x0
   1400199e0:	je     0x1400199ed
   1400199e2:	mov    ecx,0x8
   1400199e7:	call   0x14000ca58
   1400199ec:	nop
   1400199ed:	add    rsp,0x20
   1400199f1:	pop    rbp
   1400199f2:	ret    
   1400199f3:	int3   
   1400199f4:	rex push rbp
   1400199f6:	sub    rsp,0x20
   1400199fa:	mov    rbp,rdx
   1400199fd:	call   0x14000abc8
   140019a02:	add    rax,0x30
   140019a06:	mov    rdx,rax
   140019a09:	mov    ecx,0x1
   140019a0e:	call   0x14000adbc
   140019a13:	nop
   140019a14:	add    rsp,0x20
   140019a18:	pop    rbp
   140019a19:	ret    
   140019a1a:	int3   
   140019a1b:	rex push rbp
   140019a1d:	sub    rsp,0x20
   140019a21:	mov    rbp,rdx
   140019a24:	mov    rcx,QWORD PTR [rbp+0x50]
   140019a28:	call   0x14000ad70
   140019a2d:	nop
   140019a2e:	add    rsp,0x20
   140019a32:	pop    rbp
   140019a33:	ret    
   140019a34:	int3   
   140019a35:	rex push rbp
   140019a37:	sub    rsp,0x20
   140019a3b:	mov    rbp,rdx
   140019a3e:	mov    rcx,QWORD PTR [rbp+0x78]
   140019a42:	call   0x14000ad70
   140019a47:	nop
   140019a48:	add    rsp,0x20
   140019a4c:	pop    rbp
   140019a4d:	ret    
   140019a4e:	int3   
   140019a4f:	rex push rbp
   140019a51:	sub    rsp,0x20
   140019a55:	mov    rbp,rdx
   140019a58:	mov    rcx,QWORD PTR [rbp+0x40]
   140019a5c:	call   0x14000ad70
   140019a61:	nop
   140019a62:	add    rsp,0x20
   140019a66:	pop    rbp
   140019a67:	ret    
   140019a68:	int3   
   140019a69:	rex push rbp
   140019a6b:	sub    rsp,0x20
   140019a6f:	mov    rbp,rdx
   140019a72:	mov    ecx,0x2
   140019a77:	call   0x14001182c
   140019a7c:	nop
   140019a7d:	add    rsp,0x20
   140019a81:	pop    rbp
   140019a82:	ret    
   140019a83:	int3   
   140019a84:	rex push rbp
   140019a86:	sub    rsp,0x20
   140019a8a:	mov    rbp,rdx
   140019a8d:	mov    rcx,QWORD PTR [rbp+0x48]
   140019a91:	call   0x14000ad70
   140019a96:	nop
   140019a97:	add    rsp,0x20
   140019a9b:	pop    rbp
   140019a9c:	ret    
   140019a9d:	int3   
   140019a9e:	rex push rbp
   140019aa0:	sub    rsp,0x20
   140019aa4:	mov    rbp,rdx
   140019aa7:	movsxd rcx,DWORD PTR [rbp+0x20]
   140019aab:	mov    rax,rcx
   140019aae:	mov    rdx,QWORD PTR [rip+0xc1d3]        # 0x140025c88
   140019ab5:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140019ab9:	call   0x14000adbc
   140019abe:	nop
   140019abf:	add    rsp,0x20
   140019ac3:	pop    rbp
   140019ac4:	ret    
   140019ac5:	int3   
   140019ac6:	int3   
   140019ac7:	int3   
   140019ac8:	int3   
   140019ac9:	int3   
   140019aca:	int3   
   140019acb:	int3   
   140019acc:	int3   
   140019acd:	int3   
   140019ace:	rex push rbp
   140019ad0:	sub    rsp,0x20
   140019ad4:	mov    rbp,rdx
   140019ad7:	mov    ecx,0x1
   140019adc:	call   0x14000ca58
   140019ae1:	nop
   140019ae2:	add    rsp,0x20
   140019ae6:	pop    rbp
   140019ae7:	ret    
   140019ae8:	int3   
   140019ae9:	rex push rbp
   140019aeb:	sub    rsp,0x20
   140019aef:	mov    rbp,rdx
   140019af2:	mov    rcx,QWORD PTR [rbp+0x30]
   140019af6:	call   0x14000ad70
   140019afb:	nop
   140019afc:	add    rsp,0x20
   140019b00:	pop    rbp
   140019b01:	ret    
   140019b02:	int3   
   140019b03:	rex push rbp
   140019b05:	sub    rsp,0x20
   140019b09:	mov    rbp,rdx
   140019b0c:	mov    ecx,0x7
   140019b11:	call   0x14000ca58
   140019b16:	nop
   140019b17:	add    rsp,0x20
   140019b1b:	pop    rbp
   140019b1c:	ret    
   140019b1d:	int3   
   140019b1e:	rex push rbp
   140019b20:	sub    rsp,0x20
   140019b24:	mov    rbp,rdx
   140019b27:	mov    rax,QWORD PTR [rcx]
   140019b2a:	mov    rdx,rcx
   140019b2d:	mov    ecx,DWORD PTR [rax]
   140019b2f:	call   0x14000ec00
   140019b34:	nop
   140019b35:	add    rsp,0x20
   140019b39:	pop    rbp
   140019b3a:	ret    
   140019b3b:	int3   
   140019b3c:	rex push rbp
   140019b3e:	sub    rsp,0x20
   140019b42:	mov    rbp,rdx
   140019b45:	mov    rcx,QWORD PTR [rip+0x9b54]        # 0x1400236a0
   140019b4c:	call   QWORD PTR [rip+0x5a6]        # 0x14001a0f8
   140019b52:	nop
   140019b53:	add    rsp,0x20
   140019b57:	pop    rbp
   140019b58:	ret    
   140019b59:	int3   
   140019b5a:	rex push rbp
   140019b5c:	sub    rsp,0x20
   140019b60:	mov    rbp,rdx
   140019b63:	cmp    DWORD PTR [rbp+0x60],0x0
   140019b67:	je     0x140019b71
   140019b69:	xor    ecx,ecx
   140019b6b:	call   0x14000ca58
   140019b70:	nop
   140019b71:	add    rsp,0x20
   140019b75:	pop    rbp
   140019b76:	ret    
   140019b77:	int3   
   140019b78:	rex push rbp
   140019b7a:	sub    rsp,0x20
   140019b7e:	mov    rbp,rdx
   140019b81:	mov    ecx,0xd
   140019b86:	call   0x14000ca58
   140019b8b:	nop
   140019b8c:	add    rsp,0x20
   140019b90:	pop    rbp
   140019b91:	ret    
   140019b92:	int3   
   140019b93:	int3   
   140019b94:	int3   
   140019b95:	int3   
   140019b96:	int3   
   140019b97:	int3   
   140019b98:	rex push rbp
   140019b9a:	sub    rsp,0x20
   140019b9e:	mov    rbp,rdx
   140019ba1:	mov    ecx,0xc
   140019ba6:	call   0x14000ca58
   140019bab:	nop
   140019bac:	add    rsp,0x20
   140019bb0:	pop    rbp
   140019bb1:	ret    
   140019bb2:	int3   
   140019bb3:	rex push rbp
   140019bb5:	sub    rsp,0x20
   140019bb9:	mov    rbp,rdx
   140019bbc:	call   0x1400098dc
   140019bc1:	nop
   140019bc2:	add    rsp,0x20
   140019bc6:	pop    rbp
   140019bc7:	ret    
   140019bc8:	int3   
   140019bc9:	int3   
   140019bca:	int3   
   140019bcb:	int3   
   140019bcc:	int3   
   140019bcd:	int3   
   140019bce:	int3   
   140019bcf:	int3   
   140019bd0:	rex push rbp
   140019bd2:	sub    rsp,0x20
   140019bd6:	mov    rbp,rdx
   140019bd9:	mov    rax,QWORD PTR [rcx]
   140019bdc:	xor    ecx,ecx
   140019bde:	cmp    DWORD PTR [rax],0xc0000005
   140019be4:	sete   cl
   140019be7:	mov    eax,ecx
   140019be9:	mov    eax,ecx
   140019beb:	add    rsp,0x20
   140019bef:	pop    rbp
   140019bf0:	ret    
   140019bf1:	int3   
   140019bf2:	rex push rbp
   140019bf4:	sub    rsp,0x20
   140019bf8:	mov    rbp,rdx
   140019bfb:	mov    ecx,0x1
   140019c00:	call   0x14000ca58
   140019c05:	nop
   140019c06:	add    rsp,0x20
   140019c0a:	pop    rbp
   140019c0b:	ret    
   140019c0c:	int3   
   140019c0d:	rex push rbp
   140019c0f:	sub    rsp,0x20
   140019c13:	mov    rbp,rdx
   140019c16:	mov    ecx,DWORD PTR [rbp+0x40]
   140019c19:	call   0x14001182c
   140019c1e:	nop
   140019c1f:	add    rsp,0x20
   140019c23:	pop    rbp
   140019c24:	ret    
   140019c25:	int3   
   140019c26:	rex push rbp
   140019c28:	sub    rsp,0x20
   140019c2c:	mov    rbp,rdx
   140019c2f:	mov    ecx,0xa
   140019c34:	call   0x14000ca58
   140019c39:	nop
   140019c3a:	add    rsp,0x20
   140019c3e:	pop    rbp
   140019c3f:	ret    
   140019c40:	int3   
   140019c41:	rex push rbp
   140019c43:	sub    rsp,0x20
   140019c47:	mov    rbp,rdx
   140019c4a:	mov    ecx,0xa
   140019c4f:	call   0x14000ca58
   140019c54:	nop
   140019c55:	add    rsp,0x20
   140019c59:	pop    rbp
   140019c5a:	ret    
   140019c5b:	int3   
   140019c5c:	int3   
   140019c5d:	int3   
   140019c5e:	int3   
   140019c5f:	int3   
   140019c60:	int3   
   140019c61:	rex push rbp
   140019c63:	sub    rsp,0x20
   140019c67:	mov    rbp,rdx
   140019c6a:	mov    ecx,0xb
   140019c6f:	call   0x14000ca58
   140019c74:	nop
   140019c75:	add    rsp,0x20
   140019c79:	pop    rbp
   140019c7a:	ret    
   140019c7b:	int3   
   140019c7c:	rex push rbp
   140019c7e:	sub    rsp,0x40
   140019c82:	mov    rbp,rdx
   140019c85:	mov    ecx,DWORD PTR [rbp+0x4c]
   140019c88:	call   0x14001182c
   140019c8d:	nop
   140019c8e:	add    rsp,0x40
   140019c92:	pop    rbp
   140019c93:	ret    
   140019c94:	int3   
   140019c95:	rex push rbp
   140019c97:	sub    rsp,0x30
   140019c9b:	mov    rbp,rdx
   140019c9e:	cmp    DWORD PTR [rbp+0x34],0x0
   140019ca2:	je     0x140019cdc
   140019ca4:	cmp    DWORD PTR [rbp+0x38],0x0
   140019ca8:	je     0x140019cd1
   140019caa:	movsxd rdx,DWORD PTR [rbp+0x30]
   140019cae:	mov    rcx,rdx
   140019cb1:	mov    rax,rdx
   140019cb4:	sar    rax,0x5
   140019cb8:	lea    r8,[rip+0xbdc1]        # 0x140025a80
   140019cbf:	and    ecx,0x1f
   140019cc2:	imul   rcx,rcx,0x58
   140019cc6:	mov    rax,QWORD PTR [r8+rax*8]
   140019cca:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140019ccf:	jmp    0x140019cd4
   140019cd1:	mov    edx,DWORD PTR [rbp+0x30]
   140019cd4:	mov    ecx,edx
   140019cd6:	call   0x14001182c
   140019cdb:	nop
   140019cdc:	add    rsp,0x30
   140019ce0:	pop    rbp
   140019ce1:	ret    
   140019ce2:	int3   
   140019ce3:	rex push rbp
   140019ce5:	sub    rsp,0x30
   140019ce9:	mov    rbp,rdx
   140019cec:	cmp    DWORD PTR [rbp+0x30],0x0
   140019cf0:	je     0x140019d25
   140019cf2:	mov    rdx,QWORD PTR [rbp+0x70]
   140019cf6:	cmp    DWORD PTR [rbp+0x34],0x0
   140019cfa:	je     0x140019d1d
   140019cfc:	movsxd rcx,DWORD PTR [rdx]
   140019cff:	mov    rax,rcx
   140019d02:	sar    rax,0x5
   140019d06:	lea    r8,[rip+0xbd73]        # 0x140025a80
   140019d0d:	and    ecx,0x1f
   140019d10:	imul   rcx,rcx,0x58
   140019d14:	mov    rax,QWORD PTR [r8+rax*8]
   140019d18:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140019d1d:	mov    ecx,DWORD PTR [rdx]
   140019d1f:	call   0x14001182c
   140019d24:	nop
   140019d25:	add    rsp,0x30
   140019d29:	pop    rbp
   140019d2a:	ret    
   140019d2b:	int3   
   140019d2c:	rex push rbp
   140019d2e:	sub    rsp,0x20
   140019d32:	mov    rbp,rdx
   140019d35:	mov    ecx,0xd
   140019d3a:	call   0x14000ca58
   140019d3f:	nop
   140019d40:	add    rsp,0x20
   140019d44:	pop    rbp
   140019d45:	ret    
   140019d46:	int3   
   140019d47:	rex push rbp
   140019d49:	sub    rsp,0x20
   140019d4d:	mov    rbp,rdx
   140019d50:	mov    ecx,0xc
   140019d55:	call   0x14000ca58
   140019d5a:	nop
   140019d5b:	add    rsp,0x20
   140019d5f:	pop    rbp
   140019d60:	ret    
   140019d61:	int3   
   140019d62:	rex push rbp
   140019d64:	sub    rsp,0x20
   140019d68:	mov    rbp,rdx
   140019d6b:	mov    ecx,DWORD PTR [rbp+0x50]
   140019d6e:	call   0x14001182c
   140019d73:	nop
   140019d74:	add    rsp,0x20
   140019d78:	pop    rbp
   140019d79:	ret    
   140019d7a:	int3   
   140019d7b:	rex push rbp
   140019d7d:	sub    rsp,0x40
   140019d81:	mov    rbp,rdx
   140019d84:	mov    ecx,0x7
   140019d89:	call   0x14000ca58
   140019d8e:	nop
   140019d8f:	add    rsp,0x40
   140019d93:	pop    rbp
   140019d94:	ret    
   140019d95:	int3   
   140019d96:	rex push rbp
   140019d98:	sub    rsp,0x20
   140019d9c:	mov    rbp,rdx
   140019d9f:	mov    ecx,0x6
   140019da4:	call   0x14000ca58
   140019da9:	nop
   140019daa:	add    rsp,0x20
   140019dae:	pop    rbp
   140019daf:	ret    
   140019db0:	int3   

Disassembly of section .rdata:

000000014001a000 <.rdata>:
   14001a000:	sub    al,0x1e
   14001a002:	add    al,BYTE PTR [rax]
   14001a004:	add    BYTE PTR [rax],al
   14001a006:	add    BYTE PTR [rax],al
   14001a008:	cmp    bl,BYTE PTR [rsi]
   14001a00a:	add    al,BYTE PTR [rax]
   14001a00c:	add    BYTE PTR [rax],al
   14001a00e:	add    BYTE PTR [rax],al
   14001a010:	rex.WX (bad) 
   14001a012:	add    al,BYTE PTR [rax]
   14001a014:	add    BYTE PTR [rax],al
   14001a016:	add    BYTE PTR [rax],al
   14001a018:	sbb    BYTE PTR [rsi],bl
   14001a01a:	add    al,BYTE PTR [rax]
	...
   14001a028:	mov    ds,WORD PTR [rsi]
   14001a02a:	add    al,BYTE PTR [rax]
	...
   14001a038:	movabs ds:0xb400000000000225,al
   14001a041:	(bad)  
   14001a042:	add    al,BYTE PTR [rax]
   14001a044:	add    BYTE PTR [rax],al
   14001a046:	add    BYTE PTR [rax],al
   14001a048:	(bad)  
   14001a049:	(bad)  
   14001a04a:	add    al,BYTE PTR [rax]
   14001a04c:	add    BYTE PTR [rax],al
   14001a04e:	add    BYTE PTR [rax],al
   14001a050:	fcomp  QWORD PTR [rsi]
   14001a052:	add    al,BYTE PTR [rax]
   14001a054:	add    BYTE PTR [rax],al
   14001a056:	add    BYTE PTR [rax],al
   14001a058:	neg    BYTE PTR [rsi]
   14001a05a:	add    al,BYTE PTR [rax]
   14001a05c:	add    BYTE PTR [rax],al
   14001a05e:	add    BYTE PTR [rax],al
   14001a060:	adc    bl,BYTE PTR [rdi]
   14001a062:	add    al,BYTE PTR [rax]
   14001a064:	add    BYTE PTR [rax],al
   14001a066:	add    BYTE PTR [rax],al
   14001a068:	(bad)  
   14001a069:	(bad)  
   14001a06a:	add    al,BYTE PTR [rax]
   14001a06c:	add    BYTE PTR [rax],al
   14001a06e:	add    BYTE PTR [rax],al
   14001a070:	xor    BYTE PTR [rdi],bl
   14001a072:	add    al,BYTE PTR [rax]
   14001a074:	add    BYTE PTR [rax],al
   14001a076:	add    BYTE PTR [rax],al
   14001a078:	rex (bad) 
   14001a07a:	add    al,BYTE PTR [rax]
   14001a07c:	add    BYTE PTR [rax],al
   14001a07e:	add    BYTE PTR [rax],al
   14001a080:	rex.WRX (bad) 
   14001a082:	add    al,BYTE PTR [rax]
   14001a084:	add    BYTE PTR [rax],al
   14001a086:	add    BYTE PTR [rax],al
   14001a088:	fs (bad) 
   14001a08a:	add    al,BYTE PTR [rax]
   14001a08c:	add    BYTE PTR [rax],al
   14001a08e:	add    BYTE PTR [rax],al
   14001a090:	jp     0x14001a0b1
   14001a092:	add    al,BYTE PTR [rax]
   14001a094:	add    BYTE PTR [rax],al
   14001a096:	add    BYTE PTR [rax],al
   14001a098:	mov    WORD PTR [rdi],ds
   14001a09a:	add    al,BYTE PTR [rax]
   14001a09c:	add    BYTE PTR [rax],al
   14001a09e:	add    BYTE PTR [rax],al
   14001a0a0:	sahf   
   14001a0a1:	(bad)  
   14001a0a2:	add    al,BYTE PTR [rax]
   14001a0a4:	add    BYTE PTR [rax],al
   14001a0a6:	add    BYTE PTR [rax],al
   14001a0a8:	mov    dl,0x1f
   14001a0aa:	add    al,BYTE PTR [rax]
   14001a0ac:	add    BYTE PTR [rax],al
   14001a0ae:	add    BYTE PTR [rax],al
   14001a0b0:	ret    0x21f
   14001a0b3:	add    BYTE PTR [rax],al
   14001a0b5:	add    BYTE PTR [rax],al
   14001a0b7:	add    dh,dl
   14001a0b9:	(bad)  
   14001a0ba:	add    al,BYTE PTR [rax]
   14001a0bc:	add    BYTE PTR [rax],al
   14001a0be:	add    BYTE PTR [rax],al
   14001a0c0:	call   0x14001a2e4
   14001a0c5:	add    BYTE PTR [rax],al
   14001a0c7:	add    al,bh
   14001a0c9:	(bad)  
   14001a0ca:	add    al,BYTE PTR [rax]
   14001a0cc:	add    BYTE PTR [rax],al
   14001a0ce:	add    BYTE PTR [rax],al
   14001a0d0:	add    al,0x20
   14001a0d2:	add    al,BYTE PTR [rax]
   14001a0d4:	add    BYTE PTR [rax],al
   14001a0d6:	add    BYTE PTR [rax],al
   14001a0d8:	sbb    BYTE PTR [rax],ah
   14001a0da:	add    al,BYTE PTR [rax]
   14001a0dc:	add    BYTE PTR [rax],al
   14001a0de:	add    BYTE PTR [rax],al
   14001a0e0:	and    BYTE PTR es:[rdx],al
   14001a0e3:	add    BYTE PTR [rax],al
   14001a0e5:	add    BYTE PTR [rax],al
   14001a0e7:	add    BYTE PTR [rsi],dh
   14001a0e9:	and    BYTE PTR [rdx],al
   14001a0eb:	add    BYTE PTR [rax],al
   14001a0ed:	add    BYTE PTR [rax],al
   14001a0ef:	add    BYTE PTR [rax+0x20],cl
   14001a0f2:	add    al,BYTE PTR [rax]
   14001a0f4:	add    BYTE PTR [rax],al
   14001a0f6:	add    BYTE PTR [rax],al
   14001a0f8:	(bad)  
   14001a0f9:	and    BYTE PTR [rdx],al
   14001a0fb:	add    BYTE PTR [rax],al
   14001a0fd:	add    BYTE PTR [rax],al
   14001a0ff:	add    BYTE PTR [rax+0x20],bh
   14001a102:	add    al,BYTE PTR [rax]
   14001a104:	add    BYTE PTR [rax],al
   14001a106:	add    BYTE PTR [rax],al
   14001a108:	test   BYTE PTR [rax],ah
   14001a10a:	add    al,BYTE PTR [rax]
   14001a10c:	add    BYTE PTR [rax],al
   14001a10e:	add    BYTE PTR [rax],al
   14001a110:	xchg   edx,eax
   14001a111:	and    BYTE PTR [rdx],al
   14001a113:	add    BYTE PTR [rax],al
   14001a115:	add    BYTE PTR [rax],al
   14001a117:	add    BYTE PTR [rsi+0x220],bl
   14001a11d:	add    BYTE PTR [rax],al
   14001a11f:	add    BYTE PTR [rsi+0x220],dh
   14001a125:	add    BYTE PTR [rax],al
   14001a127:	add    al,dl
   14001a129:	and    BYTE PTR [rdx],al
   14001a12b:	add    BYTE PTR [rax],al
   14001a12d:	add    BYTE PTR [rax],al
   14001a12f:	add    al,ah
   14001a131:	and    BYTE PTR [rdx],al
   14001a133:	add    BYTE PTR [rax],al
   14001a135:	add    BYTE PTR [rax],al
   14001a137:	add    ah,dh
   14001a139:	and    BYTE PTR [rdx],al
   14001a13b:	add    BYTE PTR [rax],al
   14001a13d:	add    BYTE PTR [rax],al
   14001a13f:	add    BYTE PTR [rdx],cl
   14001a141:	and    DWORD PTR [rdx],eax
   14001a143:	add    BYTE PTR [rax],al
   14001a145:	add    BYTE PTR [rax],al
   14001a147:	add    BYTE PTR [rax],ah
   14001a149:	and    DWORD PTR [rdx],eax
   14001a14b:	add    BYTE PTR [rax],al
   14001a14d:	add    BYTE PTR [rax],al
   14001a14f:	add    BYTE PTR [rsi],ch
   14001a151:	and    DWORD PTR [rdx],eax
   14001a153:	add    BYTE PTR [rax],al
   14001a155:	add    BYTE PTR [rax],al
   14001a157:	add    BYTE PTR [rcx+riz*1+0x2],al
   14001a15b:	add    BYTE PTR [rax],al
   14001a15d:	add    BYTE PTR [rax],al
   14001a15f:	add    BYTE PTR [rcx+riz*1+0x2],dl
   14001a163:	add    BYTE PTR [rax],al
   14001a165:	add    BYTE PTR [rax],al
   14001a167:	add    BYTE PTR [rcx+riz*1+0x2],bh
   14001a16b:	add    BYTE PTR [rax],al
   14001a16d:	add    BYTE PTR [rax],al
   14001a16f:	add    BYTE PTR [rcx+riz*1+0x2],dl
   14001a176:	add    BYTE PTR [rax],al
   14001a178:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a179:	and    DWORD PTR [rdx],eax
   14001a17b:	add    BYTE PTR [rax],al
   14001a17d:	add    BYTE PTR [rax],al
   14001a17f:	add    BYTE PTR [rcx+riz*1+0x2],dh
   14001a186:	add    BYTE PTR [rax],al
   14001a188:	shl    BYTE PTR [rcx],1
   14001a18a:	add    al,BYTE PTR [rax]
   14001a18c:	add    BYTE PTR [rax],al
   14001a18e:	add    BYTE PTR [rax],al
   14001a190:	out    dx,al
   14001a191:	and    DWORD PTR [rdx],eax
   14001a193:	add    BYTE PTR [rax],al
   14001a195:	add    BYTE PTR [rax],al
   14001a197:	add    BYTE PTR [rdx],al
   14001a199:	and    al,BYTE PTR [rdx]
   14001a19b:	add    BYTE PTR [rax],al
   14001a19d:	add    BYTE PTR [rax],al
   14001a19f:	add    BYTE PTR [rsi],dl
   14001a1a1:	and    al,BYTE PTR [rdx]
   14001a1a3:	add    BYTE PTR [rax],al
   14001a1a5:	add    BYTE PTR [rax],al
   14001a1a7:	add    BYTE PTR [rax],dh
   14001a1a9:	and    al,BYTE PTR [rdx]
   14001a1ab:	add    BYTE PTR [rax],al
   14001a1ad:	add    BYTE PTR [rax],al
   14001a1af:	add    BYTE PTR [rdx+riz*1+0x2],al
   14001a1b3:	add    BYTE PTR [rax],al
   14001a1b5:	add    BYTE PTR [rax],al
   14001a1b7:	add    BYTE PTR [rax+0x22],bl
   14001a1ba:	add    al,BYTE PTR [rax]
   14001a1bc:	add    BYTE PTR [rax],al
   14001a1be:	add    BYTE PTR [rax],al
   14001a1c0:	ins    BYTE PTR es:[rdi],dx
   14001a1c1:	and    al,BYTE PTR [rdx]
   14001a1c3:	add    BYTE PTR [rax],al
   14001a1c5:	add    BYTE PTR [rax],al
   14001a1c7:	add    BYTE PTR [rdx+0x22],bh
   14001a1ca:	add    al,BYTE PTR [rax]
   14001a1cc:	add    BYTE PTR [rax],al
   14001a1ce:	add    BYTE PTR [rax],al
   14001a1d0:	mov    BYTE PTR [rdx],ah
   14001a1d2:	add    al,BYTE PTR [rax]
   14001a1d4:	add    BYTE PTR [rax],al
   14001a1d6:	add    BYTE PTR [rax],al
   14001a1d8:	xchg   edx,eax
   14001a1d9:	and    al,BYTE PTR [rdx]
   14001a1db:	add    BYTE PTR [rax],al
   14001a1dd:	add    BYTE PTR [rax],al
   14001a1df:	add    BYTE PTR [rdx+0x222],ah
   14001a1e5:	add    BYTE PTR [rax],al
   14001a1e7:	add    BYTE PTR [rsi+0x222],ch
   14001a1ed:	add    BYTE PTR [rax],al
   14001a1ef:	add    BYTE PTR [rdx+riz*1+0x2],bh
   14001a1f6:	add    BYTE PTR [rax],al
   14001a1f8:	enter  0x222,0x0
   14001a1fc:	add    BYTE PTR [rax],al
   14001a1fe:	add    BYTE PTR [rax],al
   14001a200:	fsub   DWORD PTR [rdx]
   14001a202:	add    al,BYTE PTR [rax]
   14001a204:	add    BYTE PTR [rax],al
   14001a206:	add    BYTE PTR [rax],al
   14001a208:	out    dx,al
   14001a209:	and    al,BYTE PTR [rdx]
   14001a20b:	add    BYTE PTR [rax],al
   14001a20d:	add    BYTE PTR [rax],al
   14001a20f:	add    BYTE PTR [rbx+riz*1],al
   14001a212:	add    al,BYTE PTR [rax]
   14001a214:	add    BYTE PTR [rax],al
   14001a216:	add    BYTE PTR [rax],al
   14001a218:	(bad)  
   14001a219:	and    eax,DWORD PTR [rdx]
   14001a21b:	add    BYTE PTR [rax],al
   14001a21d:	add    BYTE PTR [rax],al
   14001a21f:	add    BYTE PTR [rax],bh
   14001a221:	and    eax,DWORD PTR [rdx]
   14001a223:	add    BYTE PTR [rax],al
   14001a225:	add    BYTE PTR [rax],al
   14001a227:	add    BYTE PTR [rdx+0x23],cl
   14001a22a:	add    al,BYTE PTR [rax]
   14001a22c:	add    BYTE PTR [rax],al
   14001a22e:	add    BYTE PTR [rax],al
   14001a230:	pop    rax
   14001a231:	and    eax,DWORD PTR [rdx]
   14001a233:	add    BYTE PTR [rax],al
   14001a235:	add    BYTE PTR [rax],al
   14001a237:	add    BYTE PTR [rsi+0x23],ch
   14001a23a:	add    al,BYTE PTR [rax]
   14001a23c:	add    BYTE PTR [rax],al
   14001a23e:	add    BYTE PTR [rax],al
   14001a240:	jl     0x14001a265
   14001a242:	add    al,BYTE PTR [rax]
   14001a244:	add    BYTE PTR [rax],al
   14001a246:	add    BYTE PTR [rax],al
   14001a248:	mov    ah,BYTE PTR [rbx]
   14001a24a:	add    al,BYTE PTR [rax]
   14001a24c:	add    BYTE PTR [rax],al
   14001a24e:	add    BYTE PTR [rax],al
   14001a250:	(bad)  
   14001a251:	and    eax,DWORD PTR [rdx]
   14001a253:	add    BYTE PTR [rax],al
   14001a255:	add    BYTE PTR [rax],al
   14001a257:	add    BYTE PTR [rax+0x223],dh
   14001a25d:	add    BYTE PTR [rax],al
   14001a25f:	add    dl,cl
   14001a261:	and    eax,DWORD PTR [rdx]
   14001a263:	add    BYTE PTR [rax],al
   14001a265:	add    BYTE PTR [rax],al
   14001a267:	add    dl,dl
   14001a269:	and    eax,DWORD PTR [rdx]
   14001a26b:	add    BYTE PTR [rax],al
   14001a26d:	add    BYTE PTR [rax],al
   14001a26f:	add    dl,ah
   14001a271:	and    eax,DWORD PTR [rdx]
   14001a273:	add    BYTE PTR [rax],al
   14001a275:	add    BYTE PTR [rax],al
   14001a277:	add    dl,dh
   14001a279:	and    eax,DWORD PTR [rdx]
   14001a27b:	add    BYTE PTR [rax],al
   14001a27d:	add    BYTE PTR [rax],al
   14001a27f:	add    BYTE PTR [rsp],al
   14001a282:	add    al,BYTE PTR [rax]
   14001a284:	add    BYTE PTR [rax],al
   14001a286:	add    BYTE PTR [rax],al
   14001a288:	sbb    BYTE PTR [rdx+rax*1],ah
   14001a28b:	add    BYTE PTR [rax],al
   14001a28d:	add    BYTE PTR [rax],al
   14001a28f:	add    BYTE PTR [rsi],dh
   14001a291:	and    al,0x2
   14001a293:	add    BYTE PTR [rax],al
   14001a295:	add    BYTE PTR [rax],al
   14001a297:	add    BYTE PTR [rsi+0x24],al
   14001a29a:	add    al,BYTE PTR [rax]
   14001a29c:	add    BYTE PTR [rax],al
   14001a29e:	add    BYTE PTR [rax],al
   14001a2a0:	push   rsp
   14001a2a1:	and    al,0x2
   14001a2a3:	add    BYTE PTR [rax],al
   14001a2a5:	add    BYTE PTR [rax],al
   14001a2a7:	add    BYTE PTR [rsp+0x2],ch
   14001a2ab:	add    BYTE PTR [rax],al
   14001a2ad:	add    BYTE PTR [rax],al
   14001a2af:	add    BYTE PTR [rax+0x224],al
   14001a2b5:	add    BYTE PTR [rax],al
   14001a2b7:	add    BYTE PTR [rdx+0x224],bl
   14001a2bd:	add    BYTE PTR [rax],al
   14001a2bf:	add    BYTE PTR [rsp+0x2],dh
   14001a2c6:	add    BYTE PTR [rax],al
   14001a2c8:	shl    BYTE PTR [rdx+rax*1],0x0
   14001a2cc:	add    BYTE PTR [rax],al
   14001a2ce:	add    BYTE PTR [rax],al
   14001a2d0:	retf   0x224
   14001a2d3:	add    BYTE PTR [rax],al
   14001a2d5:	add    BYTE PTR [rax],al
   14001a2d7:	add    dh,dl
   14001a2d9:	and    al,0x2
   14001a2db:	add    BYTE PTR [rax],al
   14001a2dd:	add    BYTE PTR [rax],al
   14001a2df:	add    al,ch
   14001a2e1:	and    al,0x2
   14001a2e3:	add    BYTE PTR [rax],al
   14001a2e5:	add    BYTE PTR [rax],al
   14001a2e7:	add    ah,dh
   14001a2e9:	and    al,0x2
   14001a2eb:	add    BYTE PTR [rax],al
   14001a2ed:	add    BYTE PTR [rax],al
   14001a2ef:	add    BYTE PTR [rsi],al
   14001a2f1:	and    eax,0x2
   14001a2f6:	add    BYTE PTR [rax],al
   14001a2f8:	sbb    BYTE PTR [rip+0x2],ah        # 0x14001a300
   14001a2fe:	add    BYTE PTR [rax],al
   14001a300:	and    al,0x25
   14001a302:	add    al,BYTE PTR [rax]
   14001a304:	add    BYTE PTR [rax],al
   14001a306:	add    BYTE PTR [rax],al
   14001a308:	xor    al,0x25
   14001a30a:	add    al,BYTE PTR [rax]
   14001a30c:	add    BYTE PTR [rax],al
   14001a30e:	add    BYTE PTR [rax],al
   14001a310:	rex.R and eax,0x2
   14001a316:	add    BYTE PTR [rax],al
   14001a318:	push   rsp
   14001a319:	and    eax,0x2
   14001a31e:	add    BYTE PTR [rax],al
   14001a320:	and    ax,0x2
   14001a324:	add    BYTE PTR [rax],al
   14001a326:	add    BYTE PTR [rax],al
   14001a328:	and    BYTE PTR [rip+0x2],0x0        # 0x14001a331
   14001a32f:	add    BYTE PTR [rax+0x225],dl
	...
   14001a33d:	add    BYTE PTR [rax],al
   14001a33f:	add    BYTE PTR [rsi+0x1e],ah
   14001a342:	add    al,BYTE PTR [rax]
   14001a344:	add    BYTE PTR [rax],al
   14001a346:	add    BYTE PTR [rax],al
   14001a348:	je     0x14001a368
   14001a34a:	add    al,BYTE PTR [rax]
	...
   14001a370:	shr    BYTE PTR [rbx+0x14000],1
   14001a376:	add    BYTE PTR [rax],al
   14001a378:	push   rax
   14001a379:	(bad)  
   14001a37a:	add    BYTE PTR [rax+0x1],al
   14001a37d:	add    BYTE PTR [rax],al
   14001a37f:	add    BYTE PTR [rax+0x1400149],dh
   14001a385:	add    BYTE PTR [rax],al
   14001a387:	add    al,ch
   14001a389:	jmp    0x14001a38b
   14001a38b:	rex add DWORD PTR [rax],eax
	...
   14001a39e:	add    BYTE PTR [rax],al
   14001a3a0:	sbb    BYTE PTR [rsi+0x14001],dl
   14001a3a6:	add    BYTE PTR [rax],al
   14001a3a8:	mov    al,0xac
   14001a3aa:	add    BYTE PTR [rax+0x1],al
	...
   14001a3d1:	add    BYTE PTR [rax],al
   14001a3d3:	add    BYTE PTR [rbp+0x536a91],bl
   14001a3d9:	add    BYTE PTR [rax],al
   14001a3db:	add    BYTE PTR [rdx],al
   14001a3dd:	add    BYTE PTR [rax],al
   14001a3df:	add    BYTE PTR [rsi+0x0],bl
   14001a3e2:	add    BYTE PTR [rax],al
   14001a3e4:	or     BYTE PTR [rdx],al
   14001a3e7:	add    BYTE PTR [rax-0x6],al
   14001a3ea:	add    DWORD PTR [rax],eax
   14001a3ec:	push   0x61
   14001a3ee:	jbe    0x14001a451
   14001a3f0:	add    BYTE PTR [rax],al
   14001a3f2:	add    BYTE PTR [rax],al
   14001a3f4:	push   0x61
   14001a3f6:	jbe    0x14001a459
   14001a3f8:	ja     0x14001a3fa
   14001a3fa:	add    BYTE PTR [rax],al
   14001a3fc:	add    BYTE PTR [rax],al
   14001a3fe:	add    BYTE PTR [rax],al
   14001a400:	rex.WX
   14001a401:	push   r10
   14001a403:	and    BYTE PTR [rsi+0x69],ah
   14001a406:	ins    BYTE PTR es:[rdi],dx
   14001a407:	add    BYTE PTR gs:[rax],al
   14001a40a:	add    BYTE PTR [rax],al
   14001a40c:	add    BYTE PTR [rax],al
   14001a40e:	add    BYTE PTR [rax],al
   14001a410:	rex.WRB (bad) 
   14001a412:	imul   ebp,DWORD PTR [rsi+0x20],0x73616c63
   14001a419:	jae    0x14001a41b
   14001a41b:	add    BYTE PTR [rax],al
   14001a41d:	add    BYTE PTR [rax],al
   14001a41f:	add    BYTE PTR [rbp+0x6e],dl
   14001a422:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14001a426:	outs   dx,BYTE PTR ds:[rsi]
   14001a427:	add    BYTE PTR [rcx],al
   14001a429:	add    BYTE PTR [rax],al
   14001a42b:	add    BYTE PTR [rax],al
   14001a42d:	add    BYTE PTR [rax],al
   14001a42f:	add    BYTE PTR [rcx],dh
   14001a431:	cs (bad) 
   14001a433:	xor    BYTE PTR cs:[rdi+0x36],bl
   14001a437:	xor    BYTE PTR [rip+0x393162],ch        # 0x1403ad59f
   14001a43d:	add    BYTE PTR [rax],al
   14001a43f:	add    BYTE PTR [rcx],dh
   14001a441:	cs (bad) 
   14001a443:	add    BYTE PTR [rax],al
   14001a445:	add    BYTE PTR [rax],al
   14001a447:	add    BYTE PTR [rdi+0x77],dh
   14001a44a:	ja     0x14001a4b0
   14001a44c:	pop    rdi
   14001a44d:	(bad)  
   14001a44e:	jb     0x14001a4b7
   14001a450:	jae    0x14001a4ad
   14001a452:	and    eax,0x3d205d64
   14001a457:	and    BYTE PTR [rip+0xa73],ah        # 0x14001aed0
   14001a45d:	add    BYTE PTR [rax],al
   14001a45f:	add    BYTE PTR [rdi+0x69],dl
   14001a462:	outs   dx,BYTE PTR ds:[rsi]
   14001a463:	outs   dx,DWORD PTR fs:[rsi]
   14001a465:	ja     0x14001a4da
   14001a467:	and    BYTE PTR [rdi+0x72],ch
   14001a46a:	imul   esp,DWORD PTR [rdi+0x69],0x206c616e
   14001a471:	ins    DWORD PTR es:[rdi],dx
   14001a472:	(bad)  
   14001a473:	imul   ebp,DWORD PTR [rsi+0x20],0x73677261
   14001a47a:	cmp    cl,BYTE PTR [rdx]
   14001a47c:	add    BYTE PTR [rax],al
   14001a47e:	add    BYTE PTR [rax],al
   14001a480:	pop    rdi
   14001a481:	rex.WX
   14001a482:	push   r14
   14001a484:	pop    r15
   14001a486:	rex.WR
   14001a487:	push   r13
   14001a489:	rex.WRX
   14001a48a:	rex.XB
   14001a48b:	rex.W
   14001a48c:	rex.RB push r10
   14001a48e:	pop    rdi
   14001a48f:	rex.R
   14001a490:	rex.RB
   14001a491:	rex.X push rbp
   14001a493:	rex.RXB add BYTE PTR [r8],r8b
   14001a496:	add    BYTE PTR [rax],al
   14001a498:	and    BYTE PTR [rcx],cl
   14001a49a:	add    BYTE PTR [rax],al
   14001a49c:	add    BYTE PTR [rax],al
   14001a49e:	add    BYTE PTR [rax],al
   14001a4a0:	sub    eax,0x76616a44
   14001a4a5:	(bad)  
   14001a4a6:	movsxd ebp,DWORD PTR cs:[rcx+riz*2+0x73]
   14001a4ab:	jae    0x14001a4db
   14001a4ad:	jo     0x14001a510
   14001a4af:	je     0x14001a519
   14001a4b1:	cmp    eax,0x7325
   14001a4b6:	add    BYTE PTR [rax],al
   14001a4b8:	sub    eax,0x736d58
   14001a4bd:	add    BYTE PTR [rax],al
   14001a4bf:	add    BYTE PTR [rip+0x786d58],ch        # 0x1407a121d
   14001a4c5:	add    BYTE PTR [rax],al
   14001a4c7:	add    BYTE PTR [rip+0x737358],ch        # 0x140751825
   14001a4cd:	add    BYTE PTR [rax],al
   14001a4cf:	add    BYTE PTR [rax],ah
   14001a4d1:	and    BYTE PTR [rax],ah
   14001a4d3:	and    BYTE PTR [rdi+0x70],ch
   14001a4d6:	je     0x14001a541
   14001a4d8:	outs   dx,DWORD PTR ds:[rsi]
   14001a4d9:	outs   dx,BYTE PTR ds:[rsi]
   14001a4da:	pop    rbx
   14001a4db:	and    eax,0x205d6432
   14001a4e0:	cmp    eax,0x73252720
   14001a4e5:	(bad)  
   14001a4e6:	or     al,BYTE PTR [rax]
   14001a4e8:	outs   dx,BYTE PTR ds:[rsi]
   14001a4e9:	rex.WRXB jo 0x14001a560
   14001a4ec:	imul   ebp,DWORD PTR [rdi+0x6e],0x73692073
   14001a4f3:	and    BYTE PTR [rip+0xa646c],ah        # 0x1400c0965
   14001a4f9:	add    BYTE PTR [rax],al
   14001a4fb:	add    BYTE PTR [rax],al
   14001a4fd:	add    BYTE PTR [rax],al
   14001a4ff:	add    BYTE PTR [rcx+0x67],ch
   14001a502:	outs   dx,BYTE PTR ds:[rsi]
   14001a503:	outs   dx,DWORD PTR ds:[rsi]
   14001a504:	jb     0x14001a56b
   14001a506:	push   rbp
   14001a507:	outs   dx,BYTE PTR ds:[rsi]
   14001a508:	jb     0x14001a56f
   14001a50a:	movsxd ebp,DWORD PTR [rdi+0x67]
   14001a50d:	outs   dx,BYTE PTR ds:[rsi]
   14001a50e:	imul   edi,DWORD PTR [rdx+0x65],0x73692064
   14001a515:	and    BYTE PTR [rip+0x202c73],ah        # 0x14021d18e
   14001a51b:	add    BYTE PTR [rax],al
   14001a51d:	add    BYTE PTR [rax],al
   14001a51f:	add    BYTE PTR [rdx+0x4e],cl
   14001a522:	rex.WB pop r15
   14001a524:	rex.RX
   14001a525:	rex.B
   14001a526:	rex.WR push rbx
   14001a528:	add    BYTE PTR [r8],r8b
   14001a52b:	add    BYTE PTR [rax],al
   14001a52d:	add    BYTE PTR [rax],al
   14001a52f:	add    BYTE PTR [rdx+0x4e],cl
   14001a532:	rex.WB pop r15
   14001a534:	push   rsp
   14001a535:	push   rdx
   14001a536:	push   rbp
   14001a537:	add    BYTE PTR [r8],r8b
   14001a53a:	add    BYTE PTR [rax],al
   14001a53c:	add    BYTE PTR [rax],al
   14001a53e:	add    BYTE PTR [rax],al
   14001a540:	jbe    0x14001a5a7
   14001a542:	jb     0x14001a5b7
   14001a544:	imul   ebp,DWORD PTR [rdi+0x6e],0x25783020
   14001a54b:	xor    BYTE PTR [rax],bh
   14001a54d:	ins    BYTE PTR es:[rdi],dx
   14001a54e:	js     0x14001a57c
   14001a550:	and    BYTE PTR [rax],al
   14001a552:	add    BYTE PTR [rax],al
   14001a554:	add    BYTE PTR [rax],al
   14001a556:	add    BYTE PTR [rax],al
   14001a558:	rex.WX (bad) 
   14001a55a:	jbe    0x14001a5bd
   14001a55c:	push   rsi
   14001a55d:	rex.WRB and BYTE PTR [r9+0x72],r12b
   14001a561:	addr32 jae 0x14001a59e
   14001a564:	or     ah,BYTE PTR [rax]
   14001a566:	and    BYTE PTR [rax],ah
   14001a568:	and    BYTE PTR [rax],al
   14001a56a:	add    BYTE PTR [rax],al
   14001a56c:	add    BYTE PTR [rax],al
   14001a56e:	add    BYTE PTR [rax],al
   14001a570:	rex.RB jb 0x14001a5e5
   14001a573:	outs   dx,DWORD PTR ds:[rsi]
   14001a574:	jb     0x14001a5b0
   14001a576:	and    BYTE PTR [rcx+0x20],al
   14001a579:	rex.WX
   14001a57a:	rex.WRX
   14001a57b:	rex.WB and BYTE PTR [r13+0x72],spl
   14001a57f:	jb     0x14001a5f0
   14001a581:	jb     0x14001a5a3
   14001a583:	push   0x6f207361
   14001a588:	movsxd esp,DWORD PTR [rbx+0x75]
   14001a58b:	jb     0x14001a5ff
   14001a58d:	gs fs sub al,0x20
   14001a591:	jo     0x14001a5ff
   14001a593:	gs (bad) 
   14001a595:	jae    0x14001a5fc
   14001a597:	and    BYTE PTR [rbx+0x68],ah
   14001a59a:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
   14001a59e:	jns    0x14001a60f
   14001a5a0:	jne    0x14001a614
   14001a5a2:	and    BYTE PTR [rcx+0x6e],ch
   14001a5a5:	jae    0x14001a61b
   14001a5a7:	(bad)  
   14001a5a8:	ins    BYTE PTR es:[rdi],dx
   14001a5a9:	ins    BYTE PTR es:[rdi],dx
   14001a5aa:	(bad)  
   14001a5ab:	je     0x14001a616
   14001a5ad:	outs   dx,DWORD PTR ds:[rsi]
   14001a5ae:	outs   dx,BYTE PTR ds:[rsi]
   14001a5af:	and    BYTE PTR [rcx+0x6e],ah
   14001a5b2:	and    BYTE PTR fs:[rdx+rsi*2+0x79],dh
   14001a5b7:	and    BYTE PTR [rcx+0x67],ah
   14001a5ba:	(bad)  
   14001a5bb:	imul   ebp,DWORD PTR [rsi+0x0],0x75730000
   14001a5c2:	outs   dx,BYTE PTR ds:[rsi]
   14001a5c3:	(bad)  
   14001a5c4:	ins    BYTE PTR es:[rdi],dx
   14001a5c5:	(bad)  
   14001a5c6:	jne    0x14001a636
   14001a5c8:	movsxd ebp,DWORD PTR [rax+0x65]
   14001a5cb:	jb     0x14001a5fc
   14001a5cd:	rex.WR (bad) 
   14001a5cf:	jne    0x14001a63f
   14001a5d1:	movsxd ebp,DWORD PTR [rax+0x65]
   14001a5d4:	jb     0x14001a61e
   14001a5d6:	gs ins BYTE PTR es:[rdi],dx
   14001a5d8:	jo     0x14001a63f
   14001a5da:	jb     0x14001a5dc
   14001a5dc:	add    BYTE PTR [rax],al
   14001a5de:	add    BYTE PTR [rax],al
   14001a5e0:	ins    DWORD PTR es:[rdi],dx
   14001a5e1:	(bad)  
   14001a5e2:	imul   esp,DWORD PTR [rbp+0x50],0x6c
   14001a5e6:	(bad)  
   14001a5e7:	je     0x14001a64f
   14001a5e9:	outs   dx,DWORD PTR ds:[rsi]
   14001a5ea:	jb     0x14001a659
   14001a5ec:	push   rbx
   14001a5ed:	je     0x14001a661
   14001a5ef:	imul   ebp,DWORD PTR [rsi+0x67],0x0
   14001a5f6:	add    BYTE PTR [rax],al
   14001a5f8:	sub    BYTE PTR [rdx+0x5b],bl
   14001a5fb:	sub    DWORD PTR [rdx+r13*2+0x61],ecx
   14001a600:	jbe    0x14001a663
   14001a602:	(bad)  
   14001a603:	ins    BYTE PTR es:[rdi],dx
   14001a604:	(bad)  
   14001a605:	outs   dx,BYTE PTR ds:[rsi]
   14001a606:	addr32 (bad) 
   14001a608:	push   rbx
   14001a609:	je     0x14001a67d
   14001a60b:	imul   ebp,DWORD PTR [rsi+0x67],0x616a003b
   14001a612:	jbe    0x14001a675
   14001a614:	(bad)  
   14001a615:	ins    BYTE PTR es:[rdi],dx
   14001a616:	(bad)  
   14001a617:	outs   dx,BYTE PTR ds:[rsi]
   14001a618:	addr32 (bad) 
   14001a61a:	push   rbx
   14001a61b:	je     0x14001a68f
   14001a61d:	imul   ebp,DWORD PTR [rsi+0x67],0x0
   14001a624:	add    BYTE PTR [rax],al
   14001a626:	add    BYTE PTR [rax],al
   14001a628:	sub    eax,0x252d2d2d
   14001a62d:	jae    0x14001a65c
   14001a62f:	sub    eax,0xa2d2d
   14001a634:	add    BYTE PTR [rax],al
   14001a636:	add    BYTE PTR [rax],al
   14001a638:	and    eax,0x6d20646c
   14001a63d:	imul   esp,DWORD PTR [rbx+0x72],0x6573206f
   14001a644:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001a647:	fs jae 0x14001a66a
   14001a64a:	je     0x14001a6bb
   14001a64c:	and    BYTE PTR [rdi+rbp*2+0x61],ch
   14001a650:	and    BYTE PTR fs:[rbp+0x61],ch
   14001a654:	imul   ebp,DWORD PTR [rsi+0x20],0x73616c63
   14001a65b:	jae    0x14001a667
   14001a65d:	add    BYTE PTR [rax],al
   14001a65f:	add    BYTE PTR [rbx+0x68],ah
   14001a662:	movsxd ebp,DWORD PTR gs:[rbx+0x41]
   14001a666:	outs   dx,BYTE PTR ds:[rsi]
   14001a667:	rex.WR outs dx,DWORD PTR fs:[rsi]
   14001a66a:	(bad)  
   14001a66b:	fs rex.WRB (bad) 
   14001a66e:	imul   ebp,DWORD PTR [rsi+0x0],0x0
   14001a675:	add    BYTE PTR [rax],al
   14001a677:	add    BYTE PTR [rax],ch
   14001a679:	pop    rdx
   14001a67a:	rex.WB
   14001a67b:	rex.WR push 0x61
   14001a67e:	jbe    0x14001a6e1
   14001a680:	(bad)  
   14001a681:	ins    BYTE PTR es:[rdi],dx
   14001a682:	(bad)  
   14001a683:	outs   dx,BYTE PTR ds:[rsi]
   14001a684:	addr32 (bad) 
   14001a686:	push   rbx
   14001a687:	je     0x14001a6fb
   14001a689:	imul   ebp,DWORD PTR [rsi+0x67],0x6a4c293b
   14001a690:	(bad)  
   14001a691:	jbe    0x14001a6f4
   14001a693:	(bad)  
   14001a694:	ins    BYTE PTR es:[rdi],dx
   14001a695:	(bad)  
   14001a696:	outs   dx,BYTE PTR ds:[rsi]
   14001a697:	addr32 (bad) 
   14001a699:	rex.XB ins BYTE PTR es:[rdi],dx
   14001a69b:	(bad)  
   14001a69c:	jae    0x14001a711
   14001a69e:	cmp    eax,DWORD PTR [rax]
   14001a6a0:	sub    eax,0x76616a44
   14001a6a5:	(bad)  
   14001a6a6:	movsxd ebp,DWORD PTR cs:[rcx+riz*2+0x73]
   14001a6ab:	jae    0x14001a6db
   14001a6ad:	jo     0x14001a710
   14001a6af:	je     0x14001a719
   14001a6b1:	cmp    eax,0x0
   14001a6b6:	add    BYTE PTR [rax],al
   14001a6b8:	sub    eax,0x70706144
   14001a6bd:	ins    BYTE PTR es:[rdi],dx
   14001a6be:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001a6c5:	cs push 0x3d656d6f
   14001a6cb:	and    eax,0x73
   14001a6d0:	rex.RB jb 0x14001a745
   14001a6d3:	outs   dx,DWORD PTR ds:[rsi]
   14001a6d4:	jb     0x14001a710
   14001a6d6:	and    BYTE PTR [rbx+0x6f],al
   14001a6d9:	jne    0x14001a747
   14001a6db:	and    BYTE PTR fs:[rsi+0x6f],ch
   14001a6df:	je     0x14001a701
   14001a6e1:	fs gs je 0x14001a74a
   14001a6e5:	jb     0x14001a754
   14001a6e7:	imul   ebp,DWORD PTR [rsi+0x65],0x70706120
   14001a6ee:	ins    BYTE PTR es:[rdi],dx
   14001a6ef:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001a6f6:	and    BYTE PTR [rax+0x6f],ch
   14001a6f9:	ins    DWORD PTR es:[rdi],dx
   14001a6fa:	gs add BYTE PTR cs:[rax],al
   14001a6fe:	add    BYTE PTR [rax],al
   14001a700:	sub    eax,0x766e6544
   14001a705:	movsxd ebp,DWORD PTR cs:[rcx+riz*2+0x73]
   14001a70a:	jae    0x14001a73a
   14001a70c:	jo     0x14001a76f
   14001a70e:	je     0x14001a778
   14001a710:	cmp    eax,0x7325
   14001a715:	add    BYTE PTR [rax],al
   14001a717:	add    BYTE PTR [rbx+0x4c],al
   14001a71a:	push   r11
   14001a71c:	push   rbx
   14001a71d:	push   rax
   14001a71e:	push   r12
   14001a720:	rex.W add BYTE PTR [rax],al
   14001a723:	add    BYTE PTR [rax],ah
   14001a725:	add    BYTE PTR [rax],al
   14001a727:	add    BYTE PTR [rip+0x6e757344],ch        # 0x1ae771a71
   14001a72d:	cs push 0x61
   14001a730:	jbe    0x14001a793
   14001a732:	movsxd ebp,DWORD PTR cs:[rdi+0x6d]
   14001a736:	ins    DWORD PTR es:[rdi],dx
   14001a737:	(bad)  
   14001a738:	outs   dx,BYTE PTR ds:[rsi]
   14001a739:	fs cmp eax,0x0
   14001a73f:	add    BYTE PTR [rip+0x6e757344],ch        # 0x1ae771a89
   14001a745:	cs push 0x61
   14001a748:	jbe    0x14001a7ab
   14001a74a:	cs ins BYTE PTR es:[rdi],dx
   14001a74c:	(bad)  
   14001a74d:	jne    0x14001a7bd
   14001a74f:	movsxd ebp,DWORD PTR [rax+0x65]
   14001a752:	jb     0x14001a791
   14001a754:	push   rbx
   14001a755:	push   rbp
   14001a756:	rex.WRX pop rdi
   14001a758:	push   rbx
   14001a759:	push   rsp
   14001a75a:	rex.B
   14001a75b:	rex.WRX
   14001a75c:	rex.R
   14001a75d:	push   r10
   14001a75f:	add    BYTE PTR [rax],r8b
   14001a762:	add    BYTE PTR [rax],al
   14001a764:	sub    BYTE PTR [rcx],ch
   14001a766:	push   rsi
   14001a767:	add    BYTE PTR [rax+0x72],dh
   14001a76a:	imul   ebp,DWORD PTR [rsi+0x74],0x70000000
   14001a771:	jb     0x14001a7dc
   14001a773:	outs   dx,BYTE PTR ds:[rsi]
   14001a774:	je     0x14001a7e2
   14001a776:	outs   dx,BYTE PTR ds:[rsi]
   14001a777:	add    BYTE PTR [rbx+0x75],dh
   14001a77a:	outs   dx,BYTE PTR ds:[rsi]
   14001a77b:	(bad)  
   14001a77c:	ins    DWORD PTR es:[rdi],dx
   14001a77d:	imul   esi,DWORD PTR [rbx+0x63],0x7265562f
   14001a784:	jae    0x14001a7ef
   14001a786:	outs   dx,DWORD PTR ds:[rsi]
   14001a787:	outs   dx,BYTE PTR ds:[rsi]
	...
   14001a790:	jae    0x14001a7fa
   14001a792:	outs   dx,DWORD PTR ds:[rsi]
   14001a793:	ja     0x14001a7e8
   14001a795:	gs je  0x14001a80c
   14001a798:	imul   ebp,DWORD PTR [rsi+0x67],0x73
   14001a79f:	add    BYTE PTR [rax],ch
   14001a7a1:	pop    rdx
   14001a7a2:	rex.WR push 0x61
   14001a7a5:	jbe    0x14001a808
   14001a7a7:	(bad)  
   14001a7a8:	ins    BYTE PTR es:[rdi],dx
   14001a7a9:	(bad)  
   14001a7aa:	outs   dx,BYTE PTR ds:[rsi]
   14001a7ab:	addr32 (bad) 
   14001a7ad:	push   rbx
   14001a7ae:	je     0x14001a822
   14001a7b0:	imul   ebp,DWORD PTR [rsi+0x67],0x4a4a4a3b
   14001a7b7:	pop    rdx
   14001a7b8:	sub    DWORD PTR [rsi+0x0],edx
   14001a7bb:	add    BYTE PTR [rax],al
   14001a7bd:	add    BYTE PTR [rax],al
   14001a7bf:	add    BYTE PTR [rax+0x72],dh
   14001a7c2:	imul   ebp,DWORD PTR [rsi+0x74],0x706c6548
   14001a7c9:	rex.WRB
   14001a7ca:	gs jae 0x14001a840
   14001a7cd:	(bad)  
   14001a7ce:	add    BYTE PTR gs:[eax],al
   14001a7d2:	add    BYTE PTR [rax],al
   14001a7d4:	add    BYTE PTR [rax],al
   14001a7d6:	add    BYTE PTR [rax],al
   14001a7d8:	(bad)  
   14001a7d9:	jo     0x14001a84b
   14001a7db:	outs   dx,BYTE PTR gs:[rsi]
   14001a7dd:	fs push rsi
   14001a7df:	ins    DWORD PTR es:[rdi],dx
   14001a7e0:	rex.RB jb 0x14001a84a
   14001a7e3:	outs   dx,DWORD PTR ds:[rsi]
   14001a7e4:	rex.WRB
   14001a7e5:	gs jae 0x14001a85b
   14001a7e8:	(bad)  
   14001a7e9:	add    BYTE PTR gs:[eax],al
   14001a7ed:	add    BYTE PTR [rax],al
   14001a7ef:	add    BYTE PTR [rax],ch
   14001a7f1:	pop    rdx
   14001a7f2:	rex.WR push 0x61
   14001a7f5:	jbe    0x14001a858
   14001a7f7:	(bad)  
   14001a7f8:	ins    BYTE PTR es:[rdi],dx
   14001a7f9:	(bad)  
   14001a7fa:	outs   dx,BYTE PTR ds:[rsi]
   14001a7fb:	addr32 (bad) 
   14001a7fd:	push   rbx
   14001a7fe:	je     0x14001a872
   14001a800:	imul   ebp,DWORD PTR [rsi+0x67],0x56293b
   14001a807:	add    BYTE PTR [rcx+0x70],ah
   14001a80a:	jo     0x14001a871
   14001a80c:	outs   dx,BYTE PTR ds:[rsi]
   14001a80d:	fs push rsi
   14001a80f:	ins    DWORD PTR es:[rdi],dx
   14001a810:	push   rbx
   14001a811:	jns    0x14001a881
   14001a813:	outs   dx,DWORD PTR ds:[rsi]
   14001a814:	outs   dx,BYTE PTR ds:[rsi]
   14001a815:	jns    0x14001a884
   14001a817:	rex.WRB
   14001a818:	gs jae 0x14001a88e
   14001a81b:	(bad)  
   14001a81c:	add    BYTE PTR gs:[eax],al
   14001a820:	(bad)  
   14001a821:	jo     0x14001a893
   14001a823:	outs   dx,BYTE PTR gs:[rsi]
   14001a825:	fs push rsi
   14001a827:	ins    DWORD PTR es:[rdi],dx
   14001a828:	push   rbx
   14001a829:	gs ins BYTE PTR es:[rdi],dx
   14001a82b:	movsxd esi,DWORD PTR gs:[rbp+rcx*2+0x65]
   14001a830:	jae    0x14001a8a5
   14001a832:	(bad)  
   14001a833:	add    BYTE PTR gs:[eax],al
   14001a837:	add    BYTE PTR [rax],ch
   14001a839:	rex.WR push 0x61
   14001a83c:	jbe    0x14001a89f
   14001a83e:	(bad)  
   14001a83f:	ins    BYTE PTR es:[rdi],dx
   14001a840:	(bad)  
   14001a841:	outs   dx,BYTE PTR ds:[rsi]
   14001a842:	addr32 (bad) 
   14001a844:	push   rbx
   14001a845:	je     0x14001a8b9
   14001a847:	imul   ebp,DWORD PTR [rsi+0x67],0x616a4c3b
   14001a84e:	jbe    0x14001a8b1
   14001a850:	(bad)  
   14001a851:	ins    BYTE PTR es:[rdi],dx
   14001a852:	(bad)  
   14001a853:	outs   dx,BYTE PTR ds:[rsi]
   14001a854:	addr32 (bad) 
   14001a856:	push   rbx
   14001a857:	je     0x14001a8cb
   14001a859:	imul   ebp,DWORD PTR [rsi+0x67],0x56293b
   14001a860:	imul   ebp,DWORD PTR [rsi+0x69],0x6c654874
   14001a867:	jo     0x14001a8b6
   14001a869:	gs jae 0x14001a8df
   14001a86c:	(bad)  
   14001a86d:	add    BYTE PTR gs:[eax],ch
   14001a871:	rex.WR push 0x61
   14001a874:	jbe    0x14001a8d7
   14001a876:	(bad)  
   14001a877:	ins    BYTE PTR es:[rdi],dx
   14001a878:	(bad)  
   14001a879:	outs   dx,BYTE PTR ds:[rsi]
   14001a87a:	addr32 (bad) 
   14001a87c:	push   rbx
   14001a87d:	je     0x14001a8f1
   14001a87f:	imul   ebp,DWORD PTR [rsi+0x67],0x56293b
   14001a886:	add    BYTE PTR [rax],al
   14001a888:	jo     0x14001a8fc
   14001a88a:	imul   ebp,DWORD PTR [rsi+0x74],0x61735558
   14001a891:	addr32 gs rex.WRB
   14001a894:	gs jae 0x14001a90a
   14001a897:	(bad)  
   14001a898:	add    BYTE PTR gs:[eax],al
   14001a89c:	sub    BYTE PTR [rdx+0x29],bl
   14001a89f:	push   rsi
   14001a8a0:	add    BYTE PTR [rax],al
   14001a8a2:	add    BYTE PTR [rax],al
   14001a8a4:	sub    eax,0x5f00004a
   14001a8a9:	rex.WX
   14001a8aa:	push   r14
   14001a8ac:	pop    r15
   14001a8ae:	push   rsi
   14001a8af:	rex.RB push r10
   14001a8b1:	push   rbx
   14001a8b2:	rex.WB
   14001a8b3:	rex.WRXB
   14001a8b4:	rex.WRX pop rdi
   14001a8b6:	push   rbx
   14001a8b7:	rex.RB push r12
   14001a8b9:	add    BYTE PTR [rax],al
   14001a8bb:	add    BYTE PTR [rax],al
   14001a8bd:	add    BYTE PTR [rax],al
   14001a8bf:	add    BYTE PTR [rdi+0x4a],bl
   14001a8c2:	push   r14
   14001a8c4:	pop    r15
   14001a8c6:	push   rbx
   14001a8c7:	push   rax
   14001a8c8:	rex.WR
   14001a8c9:	push   r11
   14001a8cb:	rex.W pop rdi
   14001a8cd:	rex.RX
   14001a8ce:	rex.WB
   14001a8cf:	rex.WR
   14001a8d0:	add    BYTE PTR [r8],r8b
   14001a8d3:	add    BYTE PTR [rax],al
   14001a8d5:	add    BYTE PTR [rax],al
   14001a8d7:	add    BYTE PTR [rdi+0x4a],bl
   14001a8da:	push   r14
   14001a8dc:	pop    r15
   14001a8de:	push   rbx
   14001a8df:	push   rax
   14001a8e0:	rex.WR
   14001a8e1:	push   r11
   14001a8e3:	rex.W pop rdi
   14001a8e5:	rex.WX
   14001a8e6:	push   r10
	...
   14001a8f0:	rex.WRX
   14001a8f1:	rex.RB push r14
   14001a8f3:	rex.RB push r10
   14001a8f5:	pop    rdi
   14001a8f6:	rex.B
   14001a8f7:	rex.XB push r12
   14001a8f9:	pop    rdi
   14001a8fa:	push   r11
   14001a8fc:	pop    rdi
   14001a8fd:	pop    r15
   14001a8ff:	push   rbx
   14001a900:	rex.RB push r10
   14001a902:	push   rsi
   14001a903:	rex.RB push r10
   14001a905:	pop    rdi
   14001a906:	rex.XB
   14001a907:	rex.WR
   14001a908:	push   r11
   14001a90a:	push   rbx
   14001a90b:	pop    rdi
   14001a90c:	rex.WRB
   14001a90d:	rex.B
   14001a90e:	rex.XB
   14001a90f:	rex.W
   14001a910:	rex.WB
   14001a911:	rex.WRX
   14001a912:	or     r8b,BYTE PTR [r8]
   14001a915:	add    BYTE PTR [rax],al
   14001a917:	add    BYTE PTR [rcx+0x4c],al
   14001a91a:	push   rdi
   14001a91b:	pop    r9
   14001a91d:	push   rbx
   14001a91e:	pop    rdi
   14001a91f:	rex.B
   14001a920:	rex.XB push r12
   14001a922:	pop    rdi
   14001a923:	push   r11
   14001a925:	pop    rdi
   14001a926:	pop    r15
   14001a928:	push   rbx
   14001a929:	rex.RB push r10
   14001a92b:	push   rsi
   14001a92c:	rex.RB push r10
   14001a92e:	pop    rdi
   14001a92f:	rex.XB
   14001a930:	rex.WR
   14001a931:	push   r11
   14001a933:	push   rbx
   14001a934:	pop    rdi
   14001a935:	rex.WRB
   14001a936:	rex.B
   14001a937:	rex.XB
   14001a938:	rex.W
   14001a939:	rex.WB
   14001a93a:	rex.WRX
   14001a93b:	or     r8b,BYTE PTR [r8]
   14001a93e:	add    BYTE PTR [rax],al
   14001a940:	rex.R
   14001a941:	rex.RB
   14001a942:	rex.RX
   14001a943:	push   r13
   14001a945:	rex.WR push rsp
   14001a947:	pop    rdi
   14001a948:	rex.RB push r10
   14001a94a:	rex.RXB
   14001a94b:	rex.WRXB
   14001a94c:	rex.WRX
   14001a94d:	rex.WRXB
   14001a94e:	rex.WRB
   14001a94f:	rex.WB
   14001a950:	rex.XB push r11
   14001a952:	pop    rdi
   14001a953:	push   rax
   14001a954:	rex.WRXB
   14001a955:	rex.WR
   14001a956:	rex.WB
   14001a957:	rex.XB pop r9
   14001a959:	or     al,BYTE PTR [rax]
   14001a95b:	add    BYTE PTR [rax],al
   14001a95d:	add    BYTE PTR [rax],al
   14001a95f:	add    BYTE PTR [rcx],cl
   14001a961:	gs jb  0x14001a9cb
   14001a964:	outs   dx,DWORD PTR ds:[rsi]
   14001a965:	pop    rdi
   14001a966:	jo     0x14001a9d7
   14001a968:	ins    BYTE PTR es:[rdi],dx
   14001a969:	imul   esp,DWORD PTR [rbx+0x79],0x3a
   14001a970:	or     DWORD PTR [rdi+rbp*2+0x74],esp
   14001a974:	jbe    0x14001a9db
   14001a976:	jb     0x14001a9eb
   14001a978:	imul   ebp,DWORD PTR [rdi+0x6e],0xa73253a
   14001a97f:	add    BYTE PTR [rcx],cl
   14001a981:	data16 jne 0x14001a9f0
   14001a984:	ins    BYTE PTR es:[rdi],dx
   14001a985:	jbe    0x14001a9ec
   14001a987:	jb     0x14001a9fc
   14001a989:	imul   ebp,DWORD PTR [rdi+0x6e],0xa73253a
	...
   14001a998:	or     DWORD PTR [rdx+0x61],ebp
   14001a99b:	jbe    0x14001a9fe
   14001a99d:	ja     0x14001a9d9
   14001a99f:	and    eax,0xa73
   14001a9a4:	add    BYTE PTR [rax],al
   14001a9a6:	add    BYTE PTR [rax],al
   14001a9a8:	or     DWORD PTR [rcx+riz*2+0x75],ebp
   14001a9ac:	outs   dx,BYTE PTR ds:[rsi]
   14001a9ad:	movsxd ebp,DWORD PTR [rax+0x65]
   14001a9b0:	jb     0x14001a9d2
   14001a9b2:	outs   dx,BYTE PTR ds:[rsi]
   14001a9b3:	(bad)  
   14001a9b4:	ins    DWORD PTR es:[rdi],dx
   14001a9b5:	cmp    ah,BYTE PTR gs:[rip+0xa73]        # 0x14001b42f
   14001a9bc:	add    BYTE PTR [rax],al
   14001a9be:	add    BYTE PTR [rax],al
   14001a9c0:	or     DWORD PTR [rax+0x72],esi
   14001a9c3:	outs   dx,DWORD PTR ds:[rsi]
   14001a9c4:	addr32 jb 0x14001aa28
   14001a9c7:	ins    DWORD PTR es:[rdi],dx
   14001a9c8:	and    BYTE PTR [rsi+0x61],ch
   14001a9cb:	ins    DWORD PTR es:[rdi],dx
   14001a9cc:	cmp    ah,BYTE PTR gs:[rip+0xa73]        # 0x14001b446
   14001a9d3:	add    BYTE PTR [rax],al
   14001a9d5:	add    BYTE PTR [rax],al
   14001a9d7:	add    BYTE PTR [rcx],cl
   14001a9d9:	push   0x61
   14001a9db:	jbe    0x14001aa3e
   14001a9dd:	jb     0x14001aa46
   14001a9df:	jae    0x14001aa1b
   14001a9e1:	and    eax,0xa73
   14001a9e6:	add    BYTE PTR [rax],al
   14001a9e8:	or     DWORD PTR [rbp+riz*2+0x62],esp
   14001a9ec:	jne    0x14001aa55
   14001a9ee:	cmp    ah,BYTE PTR [rip+0xa73]        # 0x14001b467
   14001a9f4:	outs   dx,DWORD PTR ds:[rsi]
   14001a9f5:	outs   dx,BYTE PTR ds:[rsi]
   14001a9f6:	add    BYTE PTR [rax],al
   14001a9f8:	outs   dx,DWORD PTR ds:[rsi]
   14001a9f9:	data16 data16 add BYTE PTR [rax],al
   14001a9fd:	add    BYTE PTR [rax],al
   14001a9ff:	add    BYTE PTR [rcx+riz*2+0x75],cl
   14001aa03:	outs   dx,BYTE PTR ds:[rsi]
   14001aa04:	movsxd ebp,DWORD PTR [rax+0x65]
   14001aa07:	jb     0x14001aa29
   14001aa09:	jae    0x14001aa7f
   14001aa0b:	(bad)  
   14001aa0c:	je     0x14001aa73
   14001aa0e:	cmp    cl,BYTE PTR [rdx]
   14001aa10:	add    BYTE PTR [rax],al
   14001aa12:	add    BYTE PTR [rax],al
   14001aa14:	sub    eax,0x343664
   14001aa19:	add    BYTE PTR [rax],al
   14001aa1b:	add    BYTE PTR [rip+0x323364],ch        # 0x14033dd85
   14001aa21:	add    BYTE PTR [rax],al
   14001aa23:	add    BYTE PTR [rdx],cl
   14001aa25:	add    BYTE PTR [rax],al
   14001aa27:	add    BYTE PTR [rbp+0x61],ch
   14001aa2a:	imul   ebp,DWORD PTR [rsi+0x0],0x28000000
   14001aa31:	pop    rbx
   14001aa32:	rex.WR push 0x61
   14001aa35:	jbe    0x14001aa98
   14001aa37:	(bad)  
   14001aa38:	ins    BYTE PTR es:[rdi],dx
   14001aa39:	(bad)  
   14001aa3a:	outs   dx,BYTE PTR ds:[rsi]
   14001aa3b:	addr32 (bad) 
   14001aa3d:	push   rbx
   14001aa3e:	je     0x14001aab2
   14001aa40:	imul   ebp,DWORD PTR [rsi+0x67],0x56293b
   14001aa47:	add    BYTE PTR [rax],ah
   14001aa49:	and    BYTE PTR [rax],ah
   14001aa4b:	and    BYTE PTR [rcx+0x72],ah
   14001aa4e:	addr32 jbe 0x14001aaac
   14001aa51:	and    eax,0x205d6432
   14001aa56:	cmp    eax,0x73252720
   14001aa5b:	(bad)  
   14001aa5c:	or     al,BYTE PTR [rax]
   14001aa5e:	add    BYTE PTR [rax],al
   14001aa60:	rex.B jo 0x14001aad3
   14001aa63:	(bad)  
   14001aa64:	jae    0x14001aa86
   14001aa66:	(bad)  
   14001aa67:	jb     0x14001aad0
   14001aa69:	movsxd esp,DWORD PTR [rax]
   14001aa6b:	imul   esi,DWORD PTR [rbx+0x20],0xa6425
   14001aa72:	add    BYTE PTR [rax],al
   14001aa74:	add    BYTE PTR [rax],al
   14001aa76:	add    BYTE PTR [rax],al
   14001aa78:	and    eax,0x73692073
   14001aa7d:	and    BYTE PTR [rdi],ah
   14001aa7f:	and    eax,0xa2773
   14001aa84:	add    BYTE PTR [rax],al
   14001aa86:	add    BYTE PTR [rax],al
   14001aa88:	and    eax,0x6d20646c
   14001aa8d:	imul   esp,DWORD PTR [rbx+0x72],0x6573206f
   14001aa94:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001aa97:	fs jae 0x14001aaba
   14001aa9a:	je     0x14001ab0b
   14001aa9c:	and    BYTE PTR [rcx+0x6e],cl
   14001aa9f:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14001aaa7:	rex.WX push rsi
   14001aaa9:	rex.WRB or r8b,BYTE PTR [r8]
   14001aaac:	add    BYTE PTR [rax],al
   14001aaae:	add    BYTE PTR [rax],al
   14001aab0:	rex.RB jb 0x14001ab25
   14001aab3:	outs   dx,DWORD PTR ds:[rsi]
   14001aab4:	jb     0x14001aaf0
   14001aab6:	and    BYTE PTR [rbx+0x6f],al
   14001aab9:	jne    0x14001ab27
   14001aabb:	and    BYTE PTR fs:[rsi+0x6f],ch
   14001aabf:	je     0x14001aae1
   14001aac1:	fs gs je 0x14001ab26
   14001aac5:	movsxd ebp,DWORD PTR [rax+0x20]
   14001aac8:	ins    DWORD PTR es:[rdi],dx
   14001aac9:	(bad)  
   14001aaca:	imul   ebp,DWORD PTR [rsi+0x20],0x65726874
   14001aad1:	(bad)  
   14001aad2:	fs or  al,BYTE PTR cs:[rbp+0x72]
   14001aad7:	jb     0x14001ab48
   14001aad9:	jb     0x14001ab15
   14001aadb:	and    BYTE PTR [rcx+0x20],al
   14001aade:	rex.WX
   14001aadf:	rex.WRX
   14001aae0:	rex.WB and BYTE PTR [r13+0x72],spl
   14001aae4:	jb     0x14001ab55
   14001aae6:	jb     0x14001ab08
   14001aae8:	push   0x6f207361
   14001aaed:	movsxd esp,DWORD PTR [rbx+0x75]
   14001aaf0:	jb     0x14001ab64
   14001aaf2:	gs fs sub al,0x20
   14001aaf6:	jo     0x14001ab64
   14001aaf8:	gs (bad) 
   14001aafa:	jae    0x14001ab61
   14001aafc:	and    BYTE PTR [rbx+0x68],ah
   14001aaff:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
   14001ab03:	jns    0x14001ab74
   14001ab05:	jne    0x14001ab79
   14001ab07:	and    BYTE PTR [rcx+0x6e],ch
   14001ab0a:	jae    0x14001ab80
   14001ab0c:	(bad)  
   14001ab0d:	ins    BYTE PTR es:[rdi],dx
   14001ab0e:	ins    BYTE PTR es:[rdi],dx
   14001ab0f:	(bad)  
   14001ab10:	je     0x14001ab7b
   14001ab12:	outs   dx,DWORD PTR ds:[rsi]
   14001ab13:	outs   dx,BYTE PTR ds:[rsi]
   14001ab14:	and    BYTE PTR [rcx+0x6e],ah
   14001ab17:	and    BYTE PTR fs:[rdx+rsi*2+0x79],dh
   14001ab1c:	and    BYTE PTR [rcx+0x67],ah
   14001ab1f:	(bad)  
   14001ab20:	imul   ebp,DWORD PTR [rsi+0x0],0x0
	...
   14001ab2f:	add    BYTE PTR [rbp+0x72],al
   14001ab32:	jb     0x14001aba3
   14001ab34:	jb     0x14001ab70
   14001ab36:	and    BYTE PTR [rbx+0x6f],al
   14001ab39:	jne    0x14001aba7
   14001ab3b:	and    BYTE PTR fs:[rsi+0x6f],ch
   14001ab3f:	je     0x14001ab61
   14001ab41:	movsxd esi,DWORD PTR [rdx+0x65]
   14001ab44:	(bad)  
   14001ab45:	je     0x14001abac
   14001ab47:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001ab4b:	and    BYTE PTR [rdx+0x61],cl
   14001ab4e:	jbe    0x14001abb1
   14001ab50:	and    BYTE PTR [rsi+0x69],dl
   14001ab53:	jb     0x14001abc9
   14001ab55:	jne    0x14001abb8
   14001ab57:	ins    BYTE PTR es:[rdi],dx
   14001ab58:	and    BYTE PTR [rbp+0x61],cl
   14001ab5b:	movsxd ebp,DWORD PTR [rax+0x69]
   14001ab5e:	outs   dx,BYTE PTR ds:[rsi]
   14001ab5f:	gs or  al,BYTE PTR cs:[rbp+0x72]
   14001ab64:	jb     0x14001abd5
   14001ab66:	jb     0x14001aba2
   14001ab68:	and    BYTE PTR [rcx+0x20],al
   14001ab6b:	data16 (bad) 
   14001ab6d:	je     0x14001abd0
   14001ab6f:	ins    BYTE PTR es:[rdi],dx
   14001ab70:	and    BYTE PTR [rbp+0x78],ah
   14001ab73:	movsxd esp,DWORD PTR [rbp+0x70]
   14001ab76:	je     0x14001abe1
   14001ab78:	outs   dx,DWORD PTR ds:[rsi]
   14001ab79:	outs   dx,BYTE PTR ds:[rsi]
   14001ab7a:	and    BYTE PTR [rax+0x61],ch
   14001ab7d:	jae    0x14001ab9f
   14001ab7f:	outs   dx,DWORD PTR ds:[rsi]
   14001ab80:	movsxd esp,DWORD PTR [rbx+0x75]
   14001ab83:	jb     0x14001abf7
   14001ab85:	gs fs and BYTE PTR cs:[rax+0x72],dl
   14001ab8b:	outs   dx,DWORD PTR ds:[rsi]
   14001ab8c:	addr32 jb 0x14001abf0
   14001ab8f:	ins    DWORD PTR es:[rdi],dx
   14001ab90:	and    BYTE PTR [rdi+0x69],dh
   14001ab93:	ins    BYTE PTR es:[rdi],dx
   14001ab94:	ins    BYTE PTR es:[rdi],dx
   14001ab95:	and    BYTE PTR [rbp+0x78],ah
   14001ab98:	imul   esi,DWORD PTR [rsi+rbp*1+0x0],0x0
   14001aba0:	push   rdi
   14001aba1:	(bad)  
   14001aba2:	jb     0x14001ac12
   14001aba4:	imul   ebp,DWORD PTR [rsi+0x67],0x7325203a
   14001abab:	and    BYTE PTR [rsi+0x4d],dl
   14001abae:	and    BYTE PTR [rsi+0x6f],ch
   14001abb1:	je     0x14001abd3
   14001abb3:	jae    0x14001ac2a
   14001abb5:	jo     0x14001ac27
   14001abb7:	outs   dx,DWORD PTR ds:[rsi]
   14001abb8:	jb     0x14001ac2e
   14001abba:	gs cmp esp,DWORD PTR fs:[rax]
   14001abbe:	and    eax,0x4d562073
   14001abc3:	and    BYTE PTR [rdi+0x69],dh
   14001abc6:	ins    BYTE PTR es:[rdi],dx
   14001abc7:	ins    BYTE PTR es:[rdi],dx
   14001abc8:	and    BYTE PTR [rdx+0x65],ah
   14001abcb:	and    BYTE PTR [rbp+0x73],dh
   14001abce:	gs add BYTE PTR fs:[rax],al
   14001abd2:	add    BYTE PTR [rax],al
   14001abd4:	add    BYTE PTR [rax],al
   14001abd6:	add    BYTE PTR [rax],al
   14001abd8:	rex.RB jb 0x14001ac4d
   14001abdb:	outs   dx,DWORD PTR ds:[rsi]
   14001abdc:	jb     0x14001ac18
   14001abde:	and    BYTE PTR [rip+0x4d562073],ah        # 0x18d57cc57
   14001abe4:	and    BYTE PTR [rsi+0x6f],ch
   14001abe7:	je     0x14001ac09
   14001abe9:	jae    0x14001ac60
   14001abeb:	jo     0x14001ac5d
   14001abed:	outs   dx,DWORD PTR ds:[rsi]
   14001abee:	jb     0x14001ac64
   14001abf0:	gs add BYTE PTR fs:[rax],al
   14001abf4:	rex.RB push r10
   14001abf6:	push   rdx
   14001abf7:	rex.WRXB push r10
   14001abf9:	add    BYTE PTR [rax],al
   14001abfb:	add    BYTE PTR [rax],al
   14001abfd:	add    BYTE PTR [rax],al
   14001abff:	add    BYTE PTR [rbp+0x72],al
   14001ac02:	jb     0x14001ac73
   14001ac04:	jb     0x14001ac40
   14001ac06:	and    BYTE PTR [rbx+0x6f],al
   14001ac09:	jb     0x14001ac7d
   14001ac0b:	jne    0x14001ac7d
   14001ac0d:	je     0x14001ac2f
   14001ac0f:	push   0x76
   14001ac11:	ins    DWORD PTR es:[rdi],dx
   14001ac12:	movsxd esp,DWORD PTR cs:[rsi+0x67]
   14001ac16:	and    BYTE PTR [rsi+0x69],ah
   14001ac19:	ins    BYTE PTR es:[rdi],dx
   14001ac1a:	cmp    esp,DWORD PTR gs:[rax]
   14001ac1d:	movsxd edi,DWORD PTR [rcx+0x63]
   14001ac20:	ins    BYTE PTR es:[rdi],dx
   14001ac21:	and    BYTE PTR gs:[rcx+0x6e],ch
   14001ac25:	and    BYTE PTR [rcx+0x6c],ah
   14001ac28:	imul   esp,DWORD PTR [rcx+0x73],0x73696c20
   14001ac2f:	je     0x14001ac5f
   14001ac31:	add    BYTE PTR [rax],al
   14001ac33:	add    BYTE PTR [rax],al
   14001ac35:	add    BYTE PTR [rax],al
   14001ac37:	add    BYTE PTR [rbp+0x72],al
   14001ac3a:	jb     0x14001acab
   14001ac3c:	jb     0x14001ac78
   14001ac3e:	and    BYTE PTR [rbp+0x6e],dl
   14001ac41:	(bad)  
   14001ac42:	(bad)  
   14001ac43:	ins    BYTE PTR es:[rdi],dx
   14001ac44:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14001ac49:	jb     0x14001acb0
   14001ac4b:	jae    0x14001acbc
   14001ac4d:	ins    BYTE PTR es:[rdi],dx
   14001ac4e:	jbe    0x14001acb5
   14001ac50:	and    BYTE PTR [rsi+0x4d],dl
   14001ac53:	and    BYTE PTR [rcx+0x6c],ah
   14001ac56:	imul   esp,DWORD PTR [rcx+0x73],0x732520
   14001ac5d:	add    BYTE PTR [rax],al
   14001ac5f:	add    BYTE PTR [rbp+riz*2+0x66],al
   14001ac63:	(bad)  
   14001ac64:	jne    0x14001acd2
   14001ac66:	je     0x14001ac88
   14001ac68:	push   rsi
   14001ac69:	rex.WRB cmp r12b,BYTE PTR [r8]
   14001ac6c:	and    eax,0x2d000a73
   14001ac71:	rex.WX sub rax,0x6c615858
   14001ac77:	je     0x14001ace3
   14001ac79:	jbe    0x14001ace8
   14001ac7b:	cmp    eax,0x0
   14001ac80:	sub    eax,0x6c615858
   14001ac85:	je     0x14001acf1
   14001ac87:	jbe    0x14001acf6
   14001ac89:	cmp    eax,0x632d0000
   14001ac8e:	jo     0x14001ac90
   14001ac90:	sub    eax,0x73616c63
   14001ac95:	jae    0x14001ad07
   14001ac97:	(bad)  
   14001ac98:	je     0x14001ad02
   14001ac9a:	add    BYTE PTR [rax],al
   14001ac9c:	add    BYTE PTR [rax],al
   14001ac9e:	add    BYTE PTR [rax],al
   14001aca0:	rex.WX
   14001aca1:	rex.R
   14001aca2:	rex.WXB pop r15
   14001aca4:	rex.B
   14001aca5:	rex.WR push rsp
   14001aca7:	rex.RB push r10
   14001aca9:	rex.WRX
   14001acaa:	push   r12
   14001acac:	rex.RB pop r15
   14001acae:	push   rsi
   14001acaf:	rex.WRB add BYTE PTR [r8],r8b
	...
   14001acbe:	add    BYTE PTR [rax],al
   14001acc0:	rex.RB jb 0x14001ad35
   14001acc3:	outs   dx,DWORD PTR ds:[rsi]
   14001acc4:	jb     0x14001ad00
   14001acc6:	and    BYTE PTR [rbp+0x61],ch
   14001acc9:	imul   ebp,DWORD PTR [rsi+0x2d],0x73616c63
   14001acd0:	jae    0x14001ad0c
   14001acd2:	and    BYTE PTR [rcx+0x74],ah
   14001acd5:	je     0x14001ad49
   14001acd7:	imul   esp,DWORD PTR [rdx+0x75],0x65206574
   14001acde:	js     0x14001ad43
   14001ace0:	gs gs fs jae 0x14001ad05
   14001ace5:	jae    0x14001ad60
   14001ace7:	jae    0x14001ad5d
   14001ace9:	gs ins DWORD PTR es:[rdi],dx
   14001aceb:	and    BYTE PTR [rcx+rbp*2+0x6d],ch
   14001acef:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x2520666f
   14001acf7:	and    BYTE PTR fs:[rdx+0x79],ah
   14001acfb:	je     0x14001ad62
   14001acfd:	jae    0x14001ad09
   14001acff:	rex.RB jb 0x14001ad74
   14001ad02:	outs   dx,DWORD PTR ds:[rsi]
   14001ad03:	jb     0x14001ad3f
   14001ad05:	and    BYTE PTR [rcx+0x20],al
   14001ad08:	data16 (bad) 
   14001ad0a:	je     0x14001ad6d
   14001ad0c:	ins    BYTE PTR es:[rdi],dx
   14001ad0d:	and    BYTE PTR [rbp+0x78],ah
   14001ad10:	movsxd esp,DWORD PTR [rbp+0x70]
   14001ad13:	je     0x14001ad7e
   14001ad15:	outs   dx,DWORD PTR ds:[rsi]
   14001ad16:	outs   dx,BYTE PTR ds:[rsi]
   14001ad17:	and    BYTE PTR [rax+0x61],ch
   14001ad1a:	jae    0x14001ad3c
   14001ad1c:	outs   dx,DWORD PTR ds:[rsi]
   14001ad1d:	movsxd esp,DWORD PTR [rbx+0x75]
   14001ad20:	jb     0x14001ad94
   14001ad22:	gs fs and BYTE PTR cs:[rax+0x72],dl
   14001ad28:	outs   dx,DWORD PTR ds:[rsi]
   14001ad29:	addr32 jb 0x14001ad8d
   14001ad2c:	ins    DWORD PTR es:[rdi],dx
   14001ad2d:	and    BYTE PTR [rdi+0x69],dh
   14001ad30:	ins    BYTE PTR es:[rdi],dx
   14001ad31:	ins    BYTE PTR es:[rdi],dx
   14001ad32:	and    BYTE PTR [rbp+0x78],ah
   14001ad35:	imul   esi,DWORD PTR [rsi+rbp*1+0x0],0x0
   14001ad3d:	add    BYTE PTR [rax],al
   14001ad3f:	add    BYTE PTR [rbp+0x72],al
   14001ad42:	jb     0x14001adb3
   14001ad44:	jb     0x14001ad80
   14001ad46:	and    BYTE PTR [rbp+0x6e],dl
   14001ad49:	(bad)  
   14001ad4a:	(bad)  
   14001ad4b:	ins    BYTE PTR es:[rdi],dx
   14001ad4c:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14001ad51:	ins    BYTE PTR es:[rdi],dx
   14001ad52:	outs   dx,DWORD PTR ds:[rsi]
   14001ad53:	movsxd esp,DWORD PTR [rcx+0x74]
   14001ad56:	and    BYTE PTR gs:[rdx+0x52],cl
   14001ad5a:	and    BYTE PTR [r13+0x65],r13b
   14001ad5e:	gs je  0x14001adca
   14001ad61:	outs   dx,BYTE PTR ds:[rsi]
   14001ad62:	and    BYTE PTR [ebx+0x70],dh
   14001ad66:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14001ad6a:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001ad71:	and    BYTE PTR [rdx],ah
   14001ad73:	and    eax,0x2273
   14001ad78:	rex.WX push rdx
   14001ad7a:	rex.RB sub eax,0x73726556
   14001ad80:	imul   ebp,DWORD PTR [rdi+0x6e],0x25203d20
   14001ad87:	jae    0x14001adb5
   14001ad89:	and    BYTE PTR [rdx+0x52],cl
   14001ad8c:	rex.RB sub eax,0x74736552
   14001ad92:	jb     0x14001adfd
   14001ad94:	movsxd esi,DWORD PTR [rbp+rbp*1+0x53]
   14001ad98:	gs (bad) 
   14001ad9a:	jb     0x14001adff
   14001ad9c:	push   0x25203d20
   14001ada1:	jae    0x14001adc3
   14001ada3:	push   rbx
   14001ada4:	gs ins BYTE PTR es:[rdi],dx
   14001ada6:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14001adab:	and    BYTE PTR [rip+0xa732520],bh        # 0x14a74d2d1
   14001adb1:	add    BYTE PTR [rax],al
   14001adb3:	add    BYTE PTR [rsi+0x61],ah
   14001adb6:	ins    BYTE PTR es:[rdi],dx
   14001adb7:	jae    0x14001ae1e
   14001adb9:	add    BYTE PTR [rax],al
   14001adbb:	add    BYTE PTR [rdx+rsi*2+0x75],dh
   14001adbf:	add    BYTE PTR gs:[rax],al
   14001adc2:	add    BYTE PTR [rax],al
   14001adc4:	outs   dx,BYTE PTR ds:[rsi]
   14001adc5:	jne    0x14001ae33
   14001adc7:	ins    BYTE PTR es:[rdi],dx
	...
   14001add0:	rex.RB jb 0x14001ae45
   14001add3:	outs   dx,DWORD PTR ds:[rsi]
   14001add4:	jb     0x14001ae10
   14001add6:	and    BYTE PTR [rbx+0x79],dl
   14001add9:	outs   dx,BYTE PTR ds:[rsi]
   14001adda:	je     0x14001ae3d
   14001addc:	js     0x14001adfe
   14001adde:	gs jb  0x14001ae53
   14001ade1:	outs   dx,DWORD PTR ds:[rsi]
   14001ade2:	jb     0x14001ae04
   14001ade4:	imul   ebp,DWORD PTR [rsi+0x20],0x73726576
   14001adeb:	imul   ebp,DWORD PTR [rdi+0x6e],0x65707320
   14001adf2:	movsxd ebp,DWORD PTR [rcx+0x66]
   14001adf5:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001adfc:	and    BYTE PTR [rdx],ah
   14001adfe:	and    eax,0x2273
   14001ae03:	add    BYTE PTR [rax],al
   14001ae05:	add    BYTE PTR [rax],al
   14001ae07:	add    BYTE PTR [rdi+0x4a],bl
   14001ae0a:	push   r14
   14001ae0c:	pop    r15
   14001ae0e:	push   rbx
   14001ae0f:	push   rax
   14001ae10:	rex.WR
   14001ae11:	push   r11
   14001ae13:	rex.W pop rdi
   14001ae15:	rex.WX
   14001ae16:	push   r10
   14001ae18:	cmp    eax,0x0
   14001ae1d:	add    BYTE PTR [rax],al
   14001ae1f:	add    BYTE PTR [rdi+0x4a],bl
   14001ae22:	push   r14
   14001ae24:	pop    r15
   14001ae26:	push   rbx
   14001ae27:	push   rax
   14001ae28:	rex.WR
   14001ae29:	push   r11
   14001ae2b:	rex.W pop rdi
   14001ae2d:	rex.RX
   14001ae2e:	rex.WB
   14001ae2f:	rex.WR
   14001ae30:	rex.RB cmp eax,0x0
   14001ae36:	add    BYTE PTR [rax],al
   14001ae38:	rex.RB jb 0x14001aead
   14001ae3b:	outs   dx,DWORD PTR ds:[rsi]
   14001ae3c:	jb     0x14001ae78
   14001ae3e:	and    BYTE PTR [rcx+0x6e],cl
   14001ae41:	jbe    0x14001aea4
   14001ae43:	ins    BYTE PTR es:[rdi],dx
   14001ae44:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x6f632072
   14001ae4c:	jb     0x14001aec0
   14001ae4e:	jne    0x14001aec0
   14001ae50:	je     0x14001ae72
   14001ae52:	push   0x61
   14001ae54:	jb     0x14001aebc
   14001ae56:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x7325
   14001ae5e:	add    BYTE PTR [rax],al
   14001ae60:	rex.RB jb 0x14001aed5
   14001ae63:	outs   dx,DWORD PTR ds:[rsi]
   14001ae64:	jb     0x14001aea0
   14001ae66:	and    BYTE PTR [rbp+0x6e],dl
   14001ae69:	(bad)  
   14001ae6a:	(bad)  
   14001ae6b:	ins    BYTE PTR es:[rdi],dx
   14001ae6c:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14001ae71:	(bad)  
   14001ae72:	movsxd esp,DWORD PTR [rbx+0x65]
   14001ae75:	jae    0x14001aeea
   14001ae77:	and    BYTE PTR [rdx+0x61],ch
   14001ae7a:	jb     0x14001aee2
   14001ae7c:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x7325
   14001ae84:	add    BYTE PTR [rax],al
   14001ae86:	add    BYTE PTR [rax],al
   14001ae88:	sub    eax,0x616c7073
   14001ae8d:	jae    0x14001aef7
   14001ae8f:	cmp    al,BYTE PTR [rax]
   14001ae91:	add    BYTE PTR [rax],al
   14001ae93:	add    BYTE PTR [rax],al
   14001ae95:	add    BYTE PTR [rax],al
   14001ae97:	add    BYTE PTR [rip+0x76616a44],ch        # 0x1b66318e1
   14001ae9d:	(bad)  
   14001ae9e:	cs (bad) 
   14001aea0:	ja     0x14001af16
   14001aea2:	cs push 0x6c646165
   14001aea8:	gs jae 0x14001af1e
   14001aeab:	cmp    eax,0x0
   14001aeb0:	sub    eax,0x76616a44
   14001aeb5:	(bad)  
   14001aeb6:	cs (bad) 
   14001aeb8:	ja     0x14001af2e
   14001aeba:	cs push 0x6c646165
   14001aec0:	gs jae 0x14001af36
   14001aec3:	cmp    eax,0x65757274
   14001aec8:	add    BYTE PTR [rax],al
   14001aeca:	add    BYTE PTR [rax],al
   14001aecc:	sub    eax,0x72616a
   14001aed1:	add    BYTE PTR [rax],al
   14001aed3:	add    BYTE PTR [rax],al
   14001aed5:	add    BYTE PTR [rax],al
   14001aed7:	add    BYTE PTR [rip+0x6a2d6f6e],ch        # 0x1aa2f1e4b
   14001aedd:	jb     0x14001af44
   14001aedf:	sub    eax,0x74736572
   14001aee4:	jb     0x14001af4f
   14001aee6:	movsxd esi,DWORD PTR [rbp+rbp*1+0x73]
   14001aeea:	gs (bad) 
   14001aeec:	jb     0x14001af51
   14001aeee:	push   0x726a2d00
   14001aef3:	gs sub eax,0x74736572
   14001aef9:	jb     0x14001af64
   14001aefb:	movsxd esi,DWORD PTR [rbp+rbp*1+0x73]
   14001aeff:	gs (bad) 
   14001af01:	jb     0x14001af66
   14001af03:	push   0x0
   14001af08:	sub    eax,0x73726576
   14001af0d:	imul   ebp,DWORD PTR [rdi+0x6e],0x3a
   14001af14:	add    BYTE PTR [rax],al
   14001af16:	add    BYTE PTR [rax],al
   14001af18:	pop    rdi
   14001af19:	rex.WX
   14001af1a:	push   r14
   14001af1c:	pop    r15
   14001af1e:	push   rsi
   14001af1f:	rex.RB push r10
   14001af21:	push   rbx
   14001af22:	rex.WB
   14001af23:	rex.WRXB
   14001af24:	rex.WRX pop rdi
   14001af26:	push   rbx
   14001af27:	rex.RB push r12
   14001af29:	cmp    eax,0x0
   14001af2e:	add    BYTE PTR [rax],al
   14001af30:	rex.RB jb 0x14001afa5
   14001af33:	outs   dx,DWORD PTR ds:[rsi]
   14001af34:	jb     0x14001af70
   14001af36:	and    BYTE PTR [rip+0x65722073],ah        # 0x1a573cfaf
   14001af3c:	jno    0x14001afb3
   14001af3e:	imul   esi,DWORD PTR [rdx+0x65],0x6c632073
   14001af45:	(bad)  
   14001af46:	jae    0x14001afbb
   14001af48:	and    BYTE PTR [rax+0x61],dh
   14001af4b:	je     0x14001afb5
   14001af4d:	and    BYTE PTR [rbx+0x70],dh
   14001af50:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14001af54:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001af5b:	add    BYTE PTR [rax],al
   14001af5d:	add    BYTE PTR [rax],al
   14001af5f:	add    BYTE PTR [rip+0x75662073],ah        # 0x1b567cfd8
   14001af65:	ins    BYTE PTR es:[rdi],dx
   14001af66:	ins    BYTE PTR es:[rdi],dx
   14001af67:	and    BYTE PTR [rsi+0x65],dh
   14001af6a:	jb     0x14001afdf
   14001af6c:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252220
   14001af73:	and    al,BYTE PTR [rax]
   14001af75:	add    BYTE PTR [rax],al
   14001af77:	add    BYTE PTR [rbp+0x72],al
   14001af7a:	jb     0x14001afeb
   14001af7c:	jb     0x14001afb8
   14001af7e:	and    BYTE PTR [rip+0x65722073],ah        # 0x1a573cff7
   14001af84:	jno    0x14001affb
   14001af86:	imul   esi,DWORD PTR [rdx+0x65],0x616a2073
   14001af8d:	jb     0x14001afaf
   14001af8f:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7073
   14001af96:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14001af9a:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001afa1:	add    BYTE PTR [rax],al
   14001afa3:	add    BYTE PTR [rip+0x732558],ch        # 0x14074d501
   14001afa9:	add    BYTE PTR [rax],al
   14001afab:	add    BYTE PTR [rax],al
   14001afad:	add    BYTE PTR [rax],al
   14001afaf:	add    BYTE PTR [rdi+0x61],dl
   14001afb2:	jb     0x14001b022
   14001afb4:	imul   ebp,DWORD PTR [rsi+0x67],0x7325203a
   14001afbb:	and    BYTE PTR [rdi+0x70],ch
   14001afbe:	je     0x14001b029
   14001afc0:	outs   dx,DWORD PTR ds:[rsi]
   14001afc1:	outs   dx,BYTE PTR ds:[rsi]
   14001afc2:	and    BYTE PTR [rcx+0x73],ch
   14001afc5:	and    BYTE PTR [rsi+0x6f],ch
   14001afc8:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14001afcc:	addr32 gs jb 0x14001aff0
   14001afd0:	jae    0x14001b047
   14001afd2:	jo     0x14001b044
   14001afd4:	outs   dx,DWORD PTR ds:[rsi]
   14001afd5:	jb     0x14001b04b
   14001afd7:	gs fs add BYTE PTR cs:[rax],al
   14001afdc:	add    BYTE PTR [rax],al
   14001afde:	add    BYTE PTR [rax],al
   14001afe0:	sub    eax,0x73616f6e
   14001afe5:	jns    0x14001b055
   14001afe7:	movsxd esp,DWORD PTR [rdi+0x63]
   14001afea:	add    BYTE PTR [rax],al
   14001afec:	sub    eax,0x2d007363
   14001aff1:	movsxd ebp,DWORD PTR [rax+0x65]
   14001aff4:	movsxd ebp,DWORD PTR [rbx+0x73]
   14001aff7:	outs   dx,DWORD PTR ds:[rsi]
   14001aff8:	jne    0x14001b06c
   14001affa:	movsxd esp,DWORD PTR [rbp+0x0]
   14001affd:	add    BYTE PTR [rax],al
   14001afff:	add    BYTE PTR [rip+0x2d00786d],ch        # 0x16d022872
   14001b005:	ins    DWORD PTR es:[rdi],dx
   14001b006:	jae    0x14001b008
   14001b008:	sub    eax,0x73736f
   14001b00d:	add    BYTE PTR [rax],al
   14001b00f:	add    BYTE PTR [rip+0x7373],ch        # 0x140022388
   14001b015:	add    BYTE PTR [rax],al
   14001b017:	add    BYTE PTR [rip+0x6e757258],ch        # 0x1ae772275
   14001b01d:	push   0x666f7270
   14001b022:	cmp    ah,BYTE PTR [rbx+0x70]
   14001b025:	jne    0x14001b064
   14001b027:	outs   dx,DWORD PTR ds:[rsi]
   14001b028:	ins    BYTE PTR es:[rdi],dx
   14001b029:	fs sub al,0x66
   14001b02c:	imul   ebp,DWORD PTR [rbp+riz*2+0x3d],0x6176616a
   14001b034:	cs jo  0x14001b0a9
   14001b037:	outs   dx,DWORD PTR ds:[rsi]
   14001b038:	data16 add BYTE PTR [rax],al
   14001b03b:	add    BYTE PTR [rax],al
   14001b03d:	add    BYTE PTR [rax],al
   14001b03f:	add    BYTE PTR [rip+0x6e757258],ch        # 0x1ae77229d
   14001b045:	push   0x666f7270
   14001b04a:	cmp    ah,BYTE PTR [rbx+0x70]
   14001b04d:	jne    0x14001b08c
   14001b04f:	outs   dx,DWORD PTR ds:[rsi]
   14001b050:	ins    BYTE PTR es:[rdi],dx
   14001b051:	fs sub al,0x66
   14001b054:	imul   ebp,DWORD PTR [rbp+riz*2+0x3d],0x7325
   14001b05c:	sub    eax,0x666f7270
   14001b061:	add    BYTE PTR [rax],al
   14001b063:	add    BYTE PTR [rax],al
   14001b065:	add    BYTE PTR [rax],al
   14001b067:	add    BYTE PTR [rip+0x72657658],ch        # 0x1b26726c5
   14001b06d:	imul   esp,DWORD PTR [rsi+0x79],0x6e6f6e3a
   14001b074:	add    BYTE PTR gs:[rax],al
   14001b077:	add    BYTE PTR [rip+0x65766f6e],ch        # 0x1a5781feb
   14001b07d:	jb     0x14001b0e8
   14001b07f:	data16 jns 0x14001b082
   14001b082:	add    BYTE PTR [rax],al
   14001b084:	add    BYTE PTR [rax],al
   14001b086:	add    BYTE PTR [rax],al
   14001b088:	sub    eax,0x72657658
   14001b08d:	imul   esp,DWORD PTR [rsi+0x79],0x6d65723a
   14001b094:	outs   dx,DWORD PTR ds:[rsi]
   14001b095:	je     0x14001b0fc
   14001b097:	add    BYTE PTR [rip+0x69726576],ch        # 0x1a9741613
   14001b09d:	data16 jns 0x14001b112
   14001b0a0:	gs ins DWORD PTR es:[rdi],dx
   14001b0a2:	outs   dx,DWORD PTR ds:[rsi]
   14001b0a3:	je     0x14001b10a
   14001b0a5:	add    BYTE PTR [rax],al
   14001b0a7:	add    BYTE PTR [rip+0x69726576],ch        # 0x1a9741623
   14001b0ad:	data16 jns 0x14001b0b0
   14001b0b0:	sub    eax,0x72657658
   14001b0b5:	imul   esp,DWORD PTR [rsi+0x79],0x6c6c613a
   14001b0bc:	add    BYTE PTR [rax],al
   14001b0be:	add    BYTE PTR [rax],al
   14001b0c0:	sub    eax,0x74756658
   14001b0c5:	jne    0x14001b139
   14001b0c7:	add    BYTE PTR gs:[rax],al
   14001b0ca:	add    BYTE PTR [rax],al
   14001b0cc:	add    BYTE PTR [rax],al
   14001b0ce:	add    BYTE PTR [rax],al
   14001b0d0:	sub    eax,0x636f6e58
   14001b0d5:	ins    BYTE PTR es:[rdi],dx
   14001b0d6:	(bad)  
   14001b0d7:	jae    0x14001b14c
   14001b0d9:	movsxd eax,DWORD PTR [eax]
   14001b0dc:	add    BYTE PTR [rax],al
   14001b0de:	add    BYTE PTR [rax],al
   14001b0e0:	sub    eax,0x6c636f6e
   14001b0e5:	(bad)  
   14001b0e6:	jae    0x14001b15b
   14001b0e8:	movsxd eax,DWORD PTR [eax]
   14001b0eb:	add    BYTE PTR [rax],al
   14001b0ed:	add    BYTE PTR [rax],al
   14001b0ef:	add    BYTE PTR [rip+0x62656458],ch        # 0x1a267154d
   14001b0f5:	jne    0x14001b15e
   14001b0f7:	add    BYTE PTR [rip+0x75626564],ch        # 0x1b5641661
   14001b0fd:	add    BYTE PTR [eax],al
   14001b100:	sub    eax,0x6d7458
   14001b105:	add    BYTE PTR [rax],al
   14001b107:	add    BYTE PTR [rip+0x2d006d74],ch        # 0x16d021e81
   14001b10d:	pop    rax
   14001b10e:	je     0x14001b110
   14001b110:	sub    eax,0x74
   14001b115:	add    BYTE PTR [rax],al
   14001b117:	add    BYTE PTR [rip+0x62726576],ch        # 0x1a2741693
   14001b11d:	outs   dx,DWORD PTR ds:[rsi]
   14001b11e:	jae    0x14001b185
   14001b120:	cmp    ah,BYTE PTR [rdi+0x63]
   14001b123:	add    BYTE PTR [rax],al
   14001b125:	add    BYTE PTR [rax],al
   14001b127:	add    BYTE PTR [rip+0x62726576],ch        # 0x1a27416a3
   14001b12d:	outs   dx,DWORD PTR ds:[rsi]
   14001b12e:	jae    0x14001b195
   14001b130:	movsxd eax,DWORD PTR [eax]
   14001b133:	add    BYTE PTR [rax],al
   14001b135:	add    BYTE PTR [rax],al
   14001b137:	add    BYTE PTR [rip+0x6c6c7566],ch        # 0x1ac6e26a3
   14001b13d:	jbe    0x14001b1a4
   14001b13f:	jb     0x14001b1b4
   14001b141:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14001b148:	sub    eax,0x6e757344
   14001b14d:	cs push 0x61
   14001b150:	jbe    0x14001b1b3
   14001b152:	cs ins BYTE PTR es:[rdi],dx
   14001b154:	(bad)  
   14001b155:	jne    0x14001b1c5
   14001b157:	movsxd ebp,DWORD PTR [rax+0x65]
   14001b15a:	jb     0x14001b18a
   14001b15c:	imul   esp,DWORD PTR fs:[rcx+0x67],0x7572743d
   14001b164:	add    BYTE PTR gs:[rax],al
   14001b167:	add    BYTE PTR [rip+0x61696458],ch        # 0x1a16b15c5
   14001b16d:	add    BYTE PTR [eax],al
   14001b170:	sub    eax,0x6f687358
   14001b175:	ja     0x14001b1ca
   14001b177:	gs je  0x14001b1ee
   14001b17a:	imul   ebp,DWORD PTR [rsi+0x67],0x2d003a73
   14001b181:	pop    rax
   14001b182:	jae    0x14001b1ec
   14001b184:	outs   dx,DWORD PTR ds:[rsi]
   14001b185:	ja     0x14001b1da
   14001b187:	gs je  0x14001b1fe
   14001b18a:	imul   ebp,DWORD PTR [rsi+0x67],0x2d000073
   14001b191:	pop    rax
   14001b192:	add    BYTE PTR [rax],al
   14001b194:	add    BYTE PTR [rax],al
   14001b196:	add    BYTE PTR [rax],al
   14001b198:	sub    eax,0x776f6873
   14001b19d:	jbe    0x14001b204
   14001b19f:	jb     0x14001b214
   14001b1a1:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14001b1a8:	sub    eax,0x73726576
   14001b1ad:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14001b1b4:	sub    eax,0x2d00003f
   14001b1b9:	push   0x682d0000
   14001b1be:	gs ins BYTE PTR es:[rdi],dx
   14001b1c0:	jo     0x14001b1c2
   14001b1c2:	add    BYTE PTR [rax],al
   14001b1c4:	add    BYTE PTR [rax],al
   14001b1c6:	add    BYTE PTR [rax],al
   14001b1c8:	rex.RB jb 0x14001b23d
   14001b1cb:	outs   dx,DWORD PTR ds:[rsi]
   14001b1cc:	jb     0x14001b208
   14001b1ce:	and    BYTE PTR [rax+rbp*2+0x65],dl
   14001b1d2:	and    BYTE PTR [rip+0x706f204a],ch        # 0x1b070d222
   14001b1d8:	je     0x14001b243
   14001b1da:	outs   dx,DWORD PTR ds:[rsi]
   14001b1db:	outs   dx,BYTE PTR ds:[rsi]
   14001b1dc:	and    BYTE PTR [rbx+0x68],dh
   14001b1df:	outs   dx,DWORD PTR ds:[rsi]
   14001b1e0:	jne    0x14001b24e
   14001b1e2:	and    BYTE PTR fs:[rsi+0x6f],ch
   14001b1e6:	je     0x14001b208
   14001b1e8:	(bad)  
   14001b1e9:	and    BYTE PTR gs:[rsi+0x6f],ah
   14001b1ed:	ins    BYTE PTR es:[rdi],dx
   14001b1ee:	ins    BYTE PTR es:[rdi],dx
   14001b1ef:	outs   dx,DWORD PTR ds:[rsi]
   14001b1f0:	ja     0x14001b257
   14001b1f2:	and    BYTE PTR fs:[rdx+0x79],ah
   14001b1f6:	and    BYTE PTR [rcx+0x20],ah
   14001b1f9:	jae    0x14001b26b
   14001b1fb:	(bad)  
   14001b1fc:	movsxd esp,DWORD PTR [rbp+0x2e]
   14001b1ff:	add    BYTE PTR [rip+0x6d20646c],ah        # 0x1ad221671
   14001b205:	imul   esp,DWORD PTR [rbx+0x72],0x6573206f
   14001b20c:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001b20f:	fs jae 0x14001b232
   14001b212:	je     0x14001b283
   14001b214:	and    BYTE PTR [rax+0x61],dh
   14001b217:	jb     0x14001b28c
   14001b219:	and    BYTE PTR gs:[rdx+0x76],ch
   14001b21d:	ins    DWORD PTR es:[rdi],dx
   14001b21e:	movsxd esp,DWORD PTR cs:[rsi+0x67]
   14001b222:	or     al,BYTE PTR [rax]
   14001b224:	add    BYTE PTR [rax],al
   14001b226:	add    BYTE PTR [rax],al
   14001b228:	and    BYTE PTR [rax],ah
   14001b22a:	and    BYTE PTR [rax],ah
   14001b22c:	outs   dx,BYTE PTR ds:[rsi]
   14001b22d:	(bad)  
   14001b22e:	ins    DWORD PTR es:[rdi],dx
   14001b22f:	cmp    ah,BYTE PTR gs:[rax]
   14001b232:	and    eax,0x76202073
   14001b237:	ins    DWORD PTR es:[rdi],dx
   14001b238:	push   rsp
   14001b239:	jns    0x14001b2ab
   14001b23b:	cmp    ah,BYTE PTR gs:[rax]
   14001b23e:	and    eax,0x61202073
   14001b243:	ins    BYTE PTR es:[rdi],dx
   14001b244:	imul   esp,DWORD PTR [rcx+0x73],0x7325203a
   14001b24b:	or     al,BYTE PTR [rax]
   14001b24d:	add    BYTE PTR [rax],al
   14001b24f:	add    BYTE PTR [rsi+0x4d],dl
   14001b252:	pop    rdi
   14001b253:	rex.B
   14001b254:	rex.WR
   14001b255:	rex.WB
   14001b256:	push   r11
   14001b258:	rex.RB
   14001b259:	rex.R pop rdi
   14001b25b:	push   rsp
   14001b25c:	rex.WRXB add BYTE PTR [r8],r8b
   14001b25f:	add    BYTE PTR [rax],ah
   14001b261:	and    BYTE PTR [rax],ah
   14001b263:	and    BYTE PTR [rsi+0x61],ch
   14001b266:	ins    DWORD PTR es:[rdi],dx
   14001b267:	cmp    ah,BYTE PTR gs:[rax]
   14001b26a:	and    eax,0x76202073
   14001b26f:	ins    DWORD PTR es:[rdi],dx
   14001b270:	push   rsp
   14001b271:	jns    0x14001b2e3
   14001b273:	cmp    ah,BYTE PTR gs:[rax]
   14001b276:	and    eax,0x73202073
   14001b27b:	gs jb  0x14001b2f4
   14001b27e:	gs jb  0x14001b2e0
   14001b281:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   14001b285:	jae    0x14001b2c1
   14001b287:	and    BYTE PTR [rip+0xa73],ah        # 0x14001bd00
   14001b28d:	add    BYTE PTR [rax],al
   14001b28f:	add    BYTE PTR [rsi+0x4d],dl
   14001b292:	pop    rdi
   14001b293:	rex.WB
   14001b294:	rex.RX pop rdi
   14001b296:	push   rbx
   14001b297:	rex.RB push r10
   14001b299:	push   rsi
   14001b29a:	rex.RB push r10
   14001b29c:	pop    rdi
   14001b29d:	rex.XB
   14001b29e:	rex.WR
   14001b29f:	push   r11
   14001b2a1:	push   rbx
   14001b2a2:	add    BYTE PTR [rax],al
   14001b2a4:	add    BYTE PTR [rax],al
   14001b2a6:	add    BYTE PTR [rax],al
   14001b2a8:	push   0x76
   14001b2aa:	ins    DWORD PTR es:[rdi],dx
   14001b2ab:	movsxd esp,DWORD PTR cs:[rsi+0x67]
   14001b2af:	pop    rbx
   14001b2b0:	and    eax,0x3d205d64
   14001b2b5:	and    BYTE PTR [rip+0x3c73253e],ch        # 0x17c74d7f9
   14001b2bb:	sub    eax,0xa
   14001b2c0:	push   rdi
   14001b2c1:	(bad)  
   14001b2c2:	jb     0x14001b332
   14001b2c4:	imul   ebp,DWORD PTR [rsi+0x67],0x6e55203a
   14001b2cb:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14001b2cf:	outs   dx,BYTE PTR ds:[rsi]
   14001b2d0:	and    BYTE PTR [rsi+0x4d],dl
   14001b2d3:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14001b2d7:	and    BYTE PTR gs:[rdi+0x6e],ch
   14001b2db:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14001b2df:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x1a670d34a
   14001b2e6:	and    BYTE PTR [rax+0x25],ah
   14001b2e9:	jae    0x14001b312
   14001b2eb:	add    BYTE PTR [rax],al
   14001b2ed:	add    BYTE PTR [rax],al
   14001b2ef:	add    BYTE PTR [rdi+0x61],dl
   14001b2f2:	jb     0x14001b362
   14001b2f4:	imul   ebp,DWORD PTR [rsi+0x67],0x694d203a
   14001b2fb:	jae    0x14001b370
   14001b2fd:	imul   ebp,DWORD PTR [rsi+0x67],0x72657320
   14001b304:	jbe    0x14001b36b
   14001b306:	jb     0x14001b328
   14001b308:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   14001b30c:	jae    0x14001b32e
   14001b30e:	push   rsi
   14001b30f:	rex.WRB and BYTE PTR [r15+0x6e],r13b
   14001b313:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14001b317:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x1a670d382
   14001b31e:	and    BYTE PTR [rax+0x25],ah
   14001b321:	jae    0x14001b34a
   14001b323:	add    BYTE PTR [rax],al
   14001b325:	add    BYTE PTR [rax],al
   14001b327:	add    BYTE PTR [rcx+0x46],cl
   14001b32a:	pop    rdi
   14001b32b:	push   rbx
   14001b32c:	rex.RB push r10
   14001b32e:	push   rsi
   14001b32f:	rex.RB push r10
   14001b331:	pop    rdi
   14001b332:	rex.XB
   14001b333:	rex.WR
   14001b334:	push   r11
   14001b336:	push   rbx
   14001b337:	add    BYTE PTR [rcx+0x47],cl
   14001b33a:	rex.WRX
   14001b33b:	rex.WRXB push r10
   14001b33d:	add    BYTE PTR [r8],r8b
   14001b340:	push   rdi
   14001b341:	push   r10
   14001b343:	rex.WRX add BYTE PTR [rax],r8b
   14001b346:	add    BYTE PTR [rax],al
   14001b348:	rex.B
   14001b349:	rex.WR
   14001b34a:	rex.WB
   14001b34b:	push   r11
   14001b34d:	rex.RB
   14001b34e:	rex.R pop rdi
   14001b350:	push   rsp
   14001b351:	rex.WRXB add BYTE PTR [r8],r8b
   14001b354:	rex.WXB
   14001b355:	rex.WRX
   14001b356:	rex.WRXB push r15
   14001b358:	rex.WRX add BYTE PTR [rax],r8b
   14001b35b:	add    BYTE PTR [rax],al
   14001b35d:	add    BYTE PTR [rax],al
   14001b35f:	add    BYTE PTR [rdi+0x61],dl
   14001b362:	jb     0x14001b3d2
   14001b364:	imul   ebp,DWORD PTR [rsi+0x67],0x694d203a
   14001b36b:	jae    0x14001b3e0
   14001b36d:	imul   ebp,DWORD PTR [rsi+0x67],0x204d5620
   14001b374:	je     0x14001b3ef
   14001b376:	jo     0x14001b3dd
   14001b378:	and    BYTE PTR [rdi+0x6e],ch
   14001b37b:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14001b37f:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x1a670d3ea
   14001b386:	and    BYTE PTR [rax+0x25],ah
   14001b389:	jae    0x14001b3b2
   14001b38b:	add    BYTE PTR [rax],al
   14001b38d:	add    BYTE PTR [rax],al
   14001b38f:	add    BYTE PTR [rdi+0x61],dl
   14001b392:	jb     0x14001b402
   14001b394:	imul   ebp,DWORD PTR [rsi+0x67],0x6f4e203a
   14001b39b:	and    BYTE PTR [rbp+riz*2+0x61],ch
   14001b39f:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6f202d20
   14001b3a7:	outs   dx,BYTE PTR ds:[rsi]
   14001b3a8:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14001b3ac:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x1a670d417
   14001b3b3:	and    BYTE PTR [rax+0x25],ah
   14001b3b6:	jae    0x14001b3df
	...
   14001b3c0:	rex.RB jb 0x14001b435
   14001b3c3:	outs   dx,DWORD PTR ds:[rsi]
   14001b3c4:	jb     0x14001b400
   14001b3c6:	and    BYTE PTR [rbx+0x6f],ah
   14001b3c9:	jne    0x14001b437
   14001b3cb:	and    BYTE PTR fs:[rsi+0x6f],ch
   14001b3cf:	je     0x14001b3f1
   14001b3d1:	outs   dx,DWORD PTR ds:[rsi]
   14001b3d2:	jo     0x14001b439
   14001b3d4:	outs   dx,BYTE PTR ds:[rsi]
   14001b3d5:	and    BYTE PTR [rax+0x25],ah
   14001b3d8:	jae    0x14001b401
   14001b3da:	add    BYTE PTR [rax],al
   14001b3dc:	jb     0x14001b3de
   14001b3de:	add    BYTE PTR [rax],al
   14001b3e0:	add    BYTE PTR cs:[rax],al
   14001b3e3:	add    BYTE PTR [rax],al
   14001b3e5:	add    BYTE PTR [rax],al
   14001b3e7:	add    BYTE PTR [rip+0x6d20646c],ah        # 0x1ad221859
   14001b3ed:	imul   esp,DWORD PTR [rbx+0x72],0x6573206f
   14001b3f4:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001b3f7:	fs jae 0x14001b41a
   14001b3fa:	je     0x14001b46b
   14001b3fc:	and    BYTE PTR [rdi+rbp*2+0x61],cl
   14001b400:	fs rex.WX (bad) 
   14001b403:	jbe    0x14001b466
   14001b405:	push   rsi
   14001b406:	rex.WRB or r8b,BYTE PTR [r8]
   14001b409:	add    BYTE PTR [rax],al
   14001b40b:	add    BYTE PTR [rax],al
   14001b40d:	add    BYTE PTR [rax],al
   14001b40f:	add    BYTE PTR [rcx+0x72],ah
   14001b412:	addr32 jbe 0x14001b470
   14001b415:	and    eax,0x3d205d64
   14001b41a:	and    BYTE PTR [rip+0xa73],ah        # 0x14001be93
   14001b420:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b422:	ins    DWORD PTR es:[rdi],dx
   14001b423:	ins    DWORD PTR es:[rdi],dx
   14001b424:	(bad)  
   14001b425:	outs   dx,BYTE PTR ds:[rsi]
   14001b426:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
   14001b42b:	and    BYTE PTR gs:[rcx+0x72],ah
   14001b42f:	addr32 jae 0x14001b46c
   14001b432:	or     al,BYTE PTR [rax]
   14001b434:	ins    DWORD PTR es:[rdi],dx
   14001b435:	(bad)  
   14001b436:	ins    BYTE PTR es:[rdi],dx
   14001b437:	ins    BYTE PTR es:[rdi],dx
   14001b438:	outs   dx,DWORD PTR ds:[rsi]
   14001b439:	movsxd eax,DWORD PTR [rax]
   14001b43b:	add    BYTE PTR [rax],al
   14001b43d:	add    BYTE PTR [rax],al
   14001b43f:	add    BYTE PTR [rdx+0x65],dh
   14001b442:	(bad)  
   14001b443:	ins    BYTE PTR es:[rdi],dx
   14001b444:	ins    BYTE PTR es:[rdi],dx
   14001b445:	outs   dx,DWORD PTR ds:[rsi]
   14001b446:	movsxd eax,DWORD PTR [rax]
   14001b448:	jae    0x14001b4be
   14001b44a:	jb     0x14001b4b0
   14001b44c:	jne    0x14001b4be
   14001b44e:	add    BYTE PTR [rax],al
   14001b450:	pop    rsp
   14001b451:	(bad)  
   14001b452:	imul   ebp,DWORD PTR [rsi+0x5c],0x616c7073
   14001b459:	jae    0x14001b4c3
   14001b45b:	jae    0x14001b4c0
   14001b45d:	jb     0x14001b4c4
   14001b45f:	outs   dx,BYTE PTR gs:[rsi]
   14001b461:	cs fs ins BYTE PTR es:[rdi],dx
   14001b464:	ins    BYTE PTR es:[rdi],dx
   14001b465:	add    BYTE PTR [rax],al
   14001b467:	add    BYTE PTR [rcx+0x6d],ah
   14001b46a:	fs ss xor al,0x0
   14001b46e:	add    BYTE PTR [rax],al
   14001b470:	rex.WX (bad) 
   14001b472:	jbe    0x14001b4d5
   14001b474:	and    BYTE PTR [rsi+0x69],dl
   14001b477:	jb     0x14001b4ed
   14001b479:	jne    0x14001b4dc
   14001b47b:	ins    BYTE PTR es:[rdi],dx
   14001b47c:	and    BYTE PTR [rbp+0x61],cl
   14001b47f:	movsxd ebp,DWORD PTR [rax+0x69]
   14001b482:	outs   dx,BYTE PTR ds:[rsi]
   14001b483:	and    BYTE PTR gs:[rcx+riz*2+0x75],cl
   14001b488:	outs   dx,BYTE PTR ds:[rsi]
   14001b489:	movsxd ebp,DWORD PTR [rax+0x65]
   14001b48c:	jb     0x14001b48e
   14001b48e:	add    BYTE PTR [rax],al
   14001b490:	and    eax,0x73
   14001b495:	add    BYTE PTR [rax],al
   14001b497:	add    BYTE PTR [rcx+0x20],al
   14001b49a:	rex.WX (bad) 
   14001b49c:	jbe    0x14001b4ff
   14001b49e:	and    BYTE PTR [rbp+0x78],al
   14001b4a1:	movsxd esp,DWORD PTR [rbp+0x70]
   14001b4a4:	je     0x14001b50f
   14001b4a6:	outs   dx,DWORD PTR ds:[rsi]
   14001b4a7:	outs   dx,BYTE PTR ds:[rsi]
   14001b4a8:	and    BYTE PTR [rax+0x61],ch
   14001b4ab:	jae    0x14001b4cd
   14001b4ad:	outs   dx,DWORD PTR ds:[rsi]
   14001b4ae:	movsxd esp,DWORD PTR [rbx+0x75]
   14001b4b1:	jb     0x14001b525
   14001b4b3:	gs fs add BYTE PTR cs:[rax],al
   14001b4b8:	rex.WX (bad) 
   14001b4ba:	jbe    0x14001b51d
   14001b4bc:	rex.W outs dx,DWORD PTR ds:[rsi]
   14001b4be:	ins    DWORD PTR es:[rdi],dx
   14001b4bf:	add    BYTE PTR gs:[rax],al
   14001b4c2:	add    BYTE PTR [rax],al
   14001b4c4:	add    BYTE PTR [rax],al
   14001b4c6:	add    BYTE PTR [rax],al
   14001b4c8:	push   rbx
   14001b4c9:	outs   dx,DWORD PTR ds:[rsi]
   14001b4ca:	data16 je 0x14001b544
   14001b4cd:	(bad)  
   14001b4ce:	jb     0x14001b535
   14001b4d0:	pop    rsp
   14001b4d1:	rex.WX (bad) 
   14001b4d3:	jbe    0x14001b536
   14001b4d5:	push   rbx
   14001b4d6:	outs   dx,DWORD PTR ds:[rsi]
   14001b4d7:	data16 je 0x14001b536
   14001b4da:	rex.WX (bad) 
   14001b4dc:	jbe    0x14001b53f
   14001b4de:	and    BYTE PTR [rdx+0x75],dl
   14001b4e1:	outs   dx,BYTE PTR ds:[rsi]
   14001b4e2:	je     0x14001b54d
   14001b4e4:	ins    DWORD PTR es:[rdi],dx
   14001b4e5:	and    BYTE PTR gs:[rbp+0x6e],al
   14001b4e9:	jbe    0x14001b554
   14001b4eb:	jb     0x14001b55c
   14001b4ed:	outs   dx,BYTE PTR ds:[rsi]
   14001b4ee:	ins    DWORD PTR es:[rdi],dx
   14001b4ef:	outs   dx,BYTE PTR gs:[rsi]
   14001b4f1:	je     0x14001b4f3
   14001b4f3:	add    BYTE PTR [rax+rax*1+0x0],bl
   14001b4f7:	add    BYTE PTR [rbp+0x72],al
   14001b4fa:	jb     0x14001b56b
   14001b4fc:	jb     0x14001b538
   14001b4fe:	and    BYTE PTR [rbp+0x6e],dl
   14001b501:	(bad)  
   14001b502:	(bad)  
   14001b503:	ins    BYTE PTR es:[rdi],dx
   14001b504:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14001b509:	jb     0x14001b570
   14001b50b:	jae    0x14001b57c
   14001b50d:	ins    BYTE PTR es:[rdi],dx
   14001b50e:	jbe    0x14001b575
   14001b510:	and    BYTE PTR [rip+0x73],ah        # 0x14001b589
   14001b516:	add    BYTE PTR [rax],al
   14001b518:	rex.RB jb 0x14001b58d
   14001b51b:	outs   dx,DWORD PTR ds:[rsi]
   14001b51c:	jb     0x14001b558
   14001b51e:	and    BYTE PTR [rdi+0x61],dl
   14001b521:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14001b529:	ins    BYTE PTR es:[edi],dx
   14001b52b:	gs rex.WRXB (bad) 
   14001b52e:	push   0x65
   14001b530:	movsxd esi,DWORD PTR [rax+rbp*1+0x29]
   14001b534:	and    BYTE PTR [rsi+0x61],ah
   14001b537:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x2e
   14001b53f:	add    BYTE PTR [rbp+0x72],al
   14001b542:	jb     0x14001b5b3
   14001b544:	jb     0x14001b580
   14001b546:	and    BYTE PTR [rbx+0x72],al
   14001b549:	gs (bad) 
   14001b54b:	je     0x14001b5b2
   14001b54d:	push   rax
   14001b54e:	jb     0x14001b5bf
   14001b550:	movsxd esp,DWORD PTR [rbp+0x73]
   14001b553:	jae    0x14001b57d
   14001b555:	and    eax,0x2e202c73
   14001b55a:	cs sub DWORD PTR cs:[rax],esp
   14001b55e:	data16 (bad) 
   14001b560:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x3a
   14001b568:	push   rdx
   14001b569:	gs rex.RB js 0x14001b5d2
   14001b56d:	movsxd esp,DWORD PTR [rax]
   14001b56f:	rex.B jb 0x14001b5d9
   14001b572:	jae    0x14001b5ae
   14001b574:	and    BYTE PTR [rip+0xa73],ah        # 0x14001bfed
   14001b57a:	add    BYTE PTR [rax],al
   14001b57c:	add    BYTE PTR [rax],al
   14001b57e:	add    BYTE PTR [rax],al
   14001b580:	push   rdx
   14001b581:	gs rex.RB js 0x14001b5ea
   14001b585:	movsxd esp,DWORD PTR [rax]
   14001b587:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001b589:	ins    DWORD PTR es:[rdi],dx
   14001b58a:	ins    DWORD PTR es:[rdi],dx
   14001b58b:	(bad)  
   14001b58c:	outs   dx,BYTE PTR ds:[rsi]
   14001b58d:	cmp    ah,BYTE PTR fs:[rax]
   14001b590:	and    eax,0x25282073
   14001b595:	jae    0x14001b5c0
   14001b597:	or     al,BYTE PTR [rax]
   14001b599:	add    BYTE PTR [rax],al
   14001b59b:	add    BYTE PTR [rdx],ah
   14001b59d:	add    BYTE PTR [rax],al
   14001b59f:	add    BYTE PTR [rip+0x69625c73],ah        # 0x1a9641218
   14001b5a5:	outs   dx,BYTE PTR ds:[rsi]
   14001b5a6:	pop    rsp
   14001b5a7:	and    eax,0x78652e73
   14001b5ac:	add    BYTE PTR gs:[rax],al
   14001b5af:	add    BYTE PTR [rbp+0x78],al
   14001b5b2:	movsxd ecx,DWORD PTR gs:[rdx+0x52]
   14001b5b6:	cmp    r12b,BYTE PTR [r8]
   14001b5b9:	outs   dx,BYTE PTR ds:[rsi]
   14001b5ba:	gs ja  0x14001b5f7
   14001b5bd:	and    BYTE PTR [rip+0xa73],ah        # 0x14001c036
   14001b5c3:	add    BYTE PTR [rax],al
   14001b5c5:	add    BYTE PTR [rax],al
   14001b5c7:	add    BYTE PTR [rbp+0x78],al
   14001b5ca:	movsxd ecx,DWORD PTR gs:[rdx+0x52]
   14001b5ce:	cmp    r12b,BYTE PTR [r8]
   14001b5d1:	outs   dx,DWORD PTR ds:[rsi]
   14001b5d2:	ins    BYTE PTR es:[rdi],dx
   14001b5d3:	cmp    ah,BYTE PTR fs:[rax]
   14001b5d6:	and    eax,0xa73
   14001b5db:	add    BYTE PTR [rip+0x25000000],bh        # 0x16501b5e1
   14001b5e1:	rex.WB
   14001b5e2:	ss xor al,0x64
   14001b5e5:	add    BYTE PTR [rax],al
   14001b5e7:	add    BYTE PTR [rbp+0x72],al
   14001b5ea:	jb     0x14001b65b
   14001b5ec:	jb     0x14001b628
   14001b5ee:	and    BYTE PTR [rdi+rbp*2+0x61],ch
   14001b5f2:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x7325203a
   14001b5fa:	add    BYTE PTR [rax],al
   14001b5fc:	add    BYTE PTR [rax],al
   14001b5fe:	add    BYTE PTR [rax],al
   14001b600:	rex.WX push rsi
   14001b602:	rex.WRB pop r15
   14001b604:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x73616c43
   14001b60c:	jae    0x14001b654
   14001b60e:	jb     0x14001b67f
   14001b610:	ins    DWORD PTR es:[rdi],dx
   14001b611:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001b613:	outs   dx,DWORD PTR ds:[rsi]
   14001b614:	je     0x14001b662
   14001b616:	outs   dx,DWORD PTR ds:[rsi]
   14001b617:	(bad)  
   14001b618:	fs gs jb 0x14001b61c
   14001b61c:	add    BYTE PTR [rax],al
   14001b61e:	add    BYTE PTR [rax],al
   14001b620:	push   0x76
   14001b622:	ins    DWORD PTR es:[rdi],dx
   14001b623:	cs fs ins BYTE PTR es:[rdi],dx
   14001b626:	ins    BYTE PTR es:[rdi],dx
   14001b627:	add    BYTE PTR [rbp+0x78],ah
   14001b62a:	jo     0x14001b68d
   14001b62c:	outs   dx,BYTE PTR ds:[rsi]
   14001b62d:	fs rex.B jb 0x14001b698
   14001b631:	jae    0x14001b633
   14001b633:	add    BYTE PTR [rax],al
   14001b635:	add    BYTE PTR [rax],al
   14001b637:	add    BYTE PTR [rax],ch
   14001b639:	pop    rbx
   14001b63a:	rex.WR push 0x61
   14001b63d:	jbe    0x14001b6a0
   14001b63f:	(bad)  
   14001b640:	ins    BYTE PTR es:[rdi],dx
   14001b641:	(bad)  
   14001b642:	outs   dx,BYTE PTR ds:[rsi]
   14001b643:	addr32 (bad) 
   14001b645:	push   rbx
   14001b646:	je     0x14001b6ba
   14001b648:	imul   ebp,DWORD PTR [rsi+0x67],0x4c5b293b
   14001b64f:	push   0x61
   14001b651:	jbe    0x14001b6b4
   14001b653:	(bad)  
   14001b654:	ins    BYTE PTR es:[rdi],dx
   14001b655:	(bad)  
   14001b656:	outs   dx,BYTE PTR ds:[rsi]
   14001b657:	addr32 (bad) 
   14001b659:	push   rbx
   14001b65a:	je     0x14001b6ce
   14001b65c:	imul   ebp,DWORD PTR [rsi+0x67],0x3b
   14001b663:	add    BYTE PTR [rip+0x25000a73],ah        # 0x16501c0dc
   14001b669:	movsxd esp,DWORD PTR [rip+0x73]        # 0x14001b6e2
   14001b66f:	add    BYTE PTR [rax+0x61],dh
   14001b672:	jae    0x14001b6e7
   14001b674:	imul   ebp,DWORD PTR [rsi+0x67],0x67726120
   14001b67b:	jne    0x14001b6ea
   14001b67d:	outs   dx,BYTE PTR gs:[rsi]
   14001b67f:	je     0x14001b6f4
   14001b681:	and    BYTE PTR [rcx+0x73],ah
   14001b684:	sub    eax,0xa7369
   14001b689:	add    BYTE PTR [rax],al
   14001b68b:	add    BYTE PTR [rax],al
   14001b68d:	add    BYTE PTR [rax],al
   14001b68f:	add    BYTE PTR [rdi+0x61],dl
   14001b692:	jb     0x14001b702
   14001b694:	imul   ebp,DWORD PTR [rsi+0x67],0x7061203a
   14001b69b:	jo     0x14001b6bd
   14001b69d:	(bad)  
   14001b69e:	jb     0x14001b707
   14001b6a0:	jae    0x14001b6c2
   14001b6a2:	jo     0x14001b705
   14001b6a4:	jb     0x14001b719
   14001b6a6:	imul   ebp,DWORD PTR [rsi+0x67],0x72726520
   14001b6ad:	outs   dx,DWORD PTR ds:[rsi]
   14001b6ae:	jb     0x14001b6ba
	...
   14001b6b8:	jo     0x14001b71b
   14001b6ba:	jae    0x14001b72f
   14001b6bc:	imul   ebp,DWORD PTR [rsi+0x67],0x67726120
   14001b6c3:	jne    0x14001b732
   14001b6c5:	outs   dx,BYTE PTR gs:[rsi]
   14001b6c7:	je     0x14001b73c
   14001b6c9:	and    BYTE PTR [rcx+0x73],ah
   14001b6cc:	sub    eax,0xa2e7369
   14001b6d1:	add    BYTE PTR [rax],al
   14001b6d3:	add    BYTE PTR [rax],al
   14001b6d5:	add    BYTE PTR [rax],al
   14001b6d7:	add    BYTE PTR [rdi+0x61],dl
   14001b6da:	jb     0x14001b74a
   14001b6dc:	imul   ebp,DWORD PTR [rsi+0x67],0x7061203a
   14001b6e3:	jo     0x14001b705
   14001b6e5:	(bad)  
   14001b6e6:	jb     0x14001b74f
   14001b6e8:	jae    0x14001b70a
   14001b6ea:	imul   esi,DWORD PTR [rbx+0x20],0x6772616c
   14001b6f1:	gs jb  0x14001b714
   14001b6f4:	je     0x14001b75e
   14001b6f6:	(bad)  
   14001b6f7:	outs   dx,BYTE PTR ds:[rsi]
   14001b6f8:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001b6fc:	and    BYTE PTR [rdi+0x72],ch
   14001b6ff:	imul   esp,DWORD PTR [rdi+0x69],0x2c6c616e
   14001b706:	and    BYTE PTR [rip+0x64252064],ah        # 0x1a426d770
   14001b70c:	or     al,BYTE PTR [rax]
   14001b70e:	add    BYTE PTR [rax],al
   14001b710:	and    eax,0x766a5c73
   14001b715:	ins    DWORD PTR es:[rdi],dx
   14001b716:	cs fs ins BYTE PTR es:[rdi],dx
   14001b719:	ins    BYTE PTR es:[rdi],dx
   14001b71a:	add    BYTE PTR [rax],al
   14001b71c:	add    BYTE PTR [rax],al
   14001b71e:	add    BYTE PTR [rax],al
   14001b720:	and    eax,0x69625c73
   14001b725:	outs   dx,BYTE PTR ds:[rsi]
   14001b726:	pop    rsp
   14001b727:	and    eax,0x766a5c73
   14001b72c:	ins    DWORD PTR es:[rdi],dx
   14001b72d:	cs fs ins BYTE PTR es:[rdi],dx
   14001b730:	ins    BYTE PTR es:[rdi],dx
   14001b731:	add    BYTE PTR [rax],al
   14001b733:	add    BYTE PTR [rax],al
   14001b735:	add    BYTE PTR [rax],al
   14001b737:	add    BYTE PTR [rsi+0x65],dl
   14001b73a:	jb     0x14001b7af
   14001b73c:	imul   ebp,DWORD PTR [rdi+0x6e],0x6a616d20
   14001b743:	outs   dx,DWORD PTR ds:[rsi]
   14001b744:	jb     0x14001b774
   14001b746:	ins    DWORD PTR es:[rdi],dx
   14001b747:	imul   ebp,DWORD PTR [rsi+0x6f],0x696d2e72
   14001b74e:	movsxd esi,DWORD PTR [rdx+0x6f]
   14001b751:	and    BYTE PTR [rip+0x2e732520],bh        # 0x16e74dc77
   14001b757:	and    eax,0xa73
   14001b75c:	add    BYTE PTR [rax],al
   14001b75e:	add    BYTE PTR [rax],al
   14001b760:	push   rdi
   14001b761:	(bad)  
   14001b762:	jb     0x14001b7d2
   14001b764:	imul   ebp,DWORD PTR [rsi+0x67],0x6143203a
   14001b76b:	outs   dx,BYTE PTR ds:[rsi]
   14001b76c:	(bad)  
   14001b76d:	je     0x14001b78f
   14001b76f:	jb     0x14001b7d6
   14001b771:	(bad)  
   14001b772:	and    BYTE PTR fs:[rbp+0x69],cl
   14001b776:	movsxd esi,DWORD PTR [rdx+0x6f]
   14001b779:	push   rsi
   14001b77a:	gs jb  0x14001b7f0
   14001b77d:	imul   ebp,DWORD PTR [rdi+0x6e],0xa
   14001b784:	add    BYTE PTR [rax],al
   14001b786:	add    BYTE PTR [rax],al
   14001b788:	imul   r12,QWORD PTR [r11+0x72],0x7265566f
   14001b790:	jae    0x14001b7fb
   14001b792:	outs   dx,DWORD PTR ds:[rsi]
   14001b793:	outs   dx,BYTE PTR ds:[rsi]
   14001b794:	add    BYTE PTR [rax],al
   14001b796:	add    BYTE PTR [rax],al
   14001b798:	rex.RX (bad) 
   14001b79a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x61657220
   14001b7a2:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c617620
   14001b7aa:	jne    0x14001b811
   14001b7ac:	and    BYTE PTR [rdi+0x66],ch
   14001b7af:	and    BYTE PTR [rdx+0x65],dh
   14001b7b2:	imul   esi,DWORD PTR [ebx+0x74],0x6b207972
   14001b7ba:	gs jns 0x14001b7f7
   14001b7bd:	or     cl,BYTE PTR [rcx]
   14001b7bf:	and    eax,0x73255c73
   14001b7c4:	pop    rsp
   14001b7c5:	rex.WX (bad) 
   14001b7c7:	jbe    0x14001b82a
   14001b7c9:	rex.W outs dx,DWORD PTR ds:[rsi]
   14001b7cb:	ins    DWORD PTR es:[rdi],dx
   14001b7cc:	add    BYTE PTR gs:[rax],al
   14001b7cf:	add    BYTE PTR [rbp+0x72],al
   14001b7d2:	jb     0x14001b843
   14001b7d4:	jb     0x14001b810
   14001b7d6:	and    BYTE PTR [rdx+0x65],dl
   14001b7d9:	imul   esi,DWORD PTR [ebx+0x74],0x6b207972
   14001b7e1:	gs jns 0x14001b804
   14001b7e4:	(bad)  
   14001b7e5:	and    eax,0x435c2773
   14001b7ea:	jne    0x14001b85e
   14001b7ec:	jb     0x14001b853
   14001b7ee:	outs   dx,BYTE PTR ds:[rsi]
   14001b7ef:	je     0x14001b847
   14001b7f1:	gs jb  0x14001b867
   14001b7f4:	imul   ebp,DWORD PTR [rdi+0x6e],0x61680a27
   14001b7fb:	jae    0x14001b81d
   14001b7fd:	jbe    0x14001b860
   14001b7ff:	ins    BYTE PTR es:[rdi],dx
   14001b800:	jne    0x14001b867
   14001b802:	and    BYTE PTR [rdi],ah
   14001b804:	and    eax,0x202c2773
   14001b809:	(bad)  
   14001b80a:	jne    0x14001b880
   14001b80c:	and    BYTE PTR [rdi],ah
   14001b80e:	and    eax,0x69202773
   14001b813:	jae    0x14001b835
   14001b815:	jb     0x14001b87c
   14001b817:	jno    0x14001b88e
   14001b819:	imul   esi,DWORD PTR [rdx+0x65],0x2e64
   14001b820:	rex.RB jb 0x14001b895
   14001b823:	outs   dx,DWORD PTR ds:[rsi]
   14001b824:	jb     0x14001b860
   14001b826:	and    BYTE PTR [rsi+0x61],al
   14001b829:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x61657220
   14001b831:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c617620
   14001b839:	jne    0x14001b8a0
   14001b83b:	and    BYTE PTR [rdi+0x66],ch
   14001b83e:	and    BYTE PTR [rdx+0x65],dh
   14001b841:	imul   esi,DWORD PTR [ebx+0x74],0x6b207972
   14001b849:	gs jns 0x14001b886
   14001b84c:	or     cl,BYTE PTR [rcx]
   14001b84e:	and    eax,0x75435c73
   14001b853:	jb     0x14001b8c7
   14001b855:	outs   dx,BYTE PTR gs:[rsi]
   14001b857:	je     0x14001b8af
   14001b859:	gs jb  0x14001b8cf
   14001b85c:	imul   ebp,DWORD PTR [rdi+0x6e],0x72754300
   14001b863:	jb     0x14001b8ca
   14001b865:	outs   dx,BYTE PTR ds:[rsi]
   14001b866:	je     0x14001b8be
   14001b868:	gs jb  0x14001b8de
   14001b86b:	imul   ebp,DWORD PTR [rdi+0x6e],0x72450000
   14001b872:	jb     0x14001b8e3
   14001b874:	jb     0x14001b8b0
   14001b876:	and    BYTE PTR [rdi+0x70],ch
   14001b879:	outs   dx,BYTE PTR gs:[rsi]
   14001b87b:	imul   ebp,DWORD PTR [rsi+0x67],0x67657220
   14001b882:	imul   esi,DWORD PTR [rbx+0x74],0x6b207972
   14001b889:	gs jns 0x14001b8ac
   14001b88c:	(bad)  
   14001b88d:	and    eax,0x2773
   14001b892:	add    BYTE PTR [rax],al
   14001b894:	add    BYTE PTR [rax],al
   14001b896:	add    BYTE PTR [rax],al
   14001b898:	rex.RB jb 0x14001b90d
   14001b89b:	outs   dx,DWORD PTR ds:[rsi]
   14001b89c:	jb     0x14001b8d8
   14001b89e:	and    BYTE PTR [rbx+0x6f],ah
   14001b8a1:	jne    0x14001b90f
   14001b8a3:	and    BYTE PTR fs:[rsi+0x6f],ch
   14001b8a7:	je     0x14001b8c9
   14001b8a9:	imul   bp,WORD PTR [rsi+0x64],0x6a20
   14001b8af:	(bad)  
   14001b8b0:	jbe    0x14001b913
   14001b8b2:	cs fs ins BYTE PTR es:[rdi],dx
   14001b8b5:	ins    BYTE PTR es:[rdi],dx
   14001b8b6:	add    BYTE PTR [rax],al
   14001b8b8:	pop    rsp
   14001b8b9:	push   0x72
   14001b8bb:	add    BYTE PTR gs:[rax],al
   14001b8be:	add    BYTE PTR [rax],al
   14001b8c0:	and    eax,0x726a5c73
   14001b8c5:	gs pop rsp
   14001b8c7:	(bad)  
   14001b8c8:	imul   ebp,DWORD PTR [rsi+0x5c],0x6176616a
   14001b8cf:	cs fs ins BYTE PTR es:[rdi],dx
   14001b8d2:	ins    BYTE PTR es:[rdi],dx
   14001b8d3:	add    BYTE PTR [rax],al
   14001b8d5:	add    BYTE PTR [rax],al
   14001b8d7:	add    BYTE PTR [rdx+0x52],cl
   14001b8da:	and    BYTE PTR [r8+0x61],r14b
   14001b8de:	je     0x14001b948
   14001b8e0:	and    BYTE PTR [rcx+0x73],ch
   14001b8e3:	and    BYTE PTR [rip+0x25000a73],ah        # 0x16501c35c
   14001b8e9:	jae    0x14001b947
   14001b8eb:	(bad)  
   14001b8ec:	imul   ebp,DWORD PTR [rsi+0x5c],0x6176616a
   14001b8f3:	cs fs ins BYTE PTR es:[rdi],dx
   14001b8f6:	ins    BYTE PTR es:[rdi],dx
   14001b8f7:	add    BYTE PTR [rip+0x6e757344],ch        # 0x1ae772c41
   14001b8fd:	cs push 0x61
   14001b900:	jbe    0x14001b963
   14001b902:	xor    ah,BYTE PTR [rsi+rbp*1+0x6f]
   14001b906:	jo     0x14001b96d
   14001b908:	outs   dx,BYTE PTR ds:[rsi]
   14001b909:	ins    BYTE PTR es:[edi],dx
   14001b90b:	add    BYTE PTR [rax],al
   14001b90d:	add    BYTE PTR [rax],al
   14001b90f:	add    BYTE PTR [rip+0x6e757344],ch        # 0x1ae772c59
   14001b915:	cs push 0x61
   14001b918:	jbe    0x14001b97b
   14001b91a:	xor    ah,BYTE PTR [rsi+rbp*1+0x64]
   14001b91e:	xor    esp,DWORD PTR [rax+rax*1+0x0]
   14001b922:	add    BYTE PTR [rax],al
   14001b924:	add    BYTE PTR [rax],al
   14001b926:	add    BYTE PTR [rax],al
   14001b928:	sub    eax,0x6e757344
   14001b92d:	cs push 0x61
   14001b930:	jbe    0x14001b993
   14001b932:	xor    ah,BYTE PTR [rsi+rbp*1+0x6e]
   14001b936:	outs   dx,DWORD PTR ds:[rsi]
   14001b937:	fs fs jb 0x14001b99c
   14001b93b:	ja     0x14001b93d
   14001b93d:	add    BYTE PTR [rax],al
   14001b93f:	add    BYTE PTR [rip+0x6e757344],ch        # 0x1ae772c89
   14001b945:	cs (bad) 
   14001b947:	ja     0x14001b9bd
   14001b949:	cs ja  0x14001b9ad
   14001b94c:	jb     0x14001b9bb
   14001b94e:	jne    0x14001b9c0
	...
   14001b960:	rex.RB jb 0x14001b9d5
   14001b963:	outs   dx,DWORD PTR ds:[rsi]
   14001b964:	jb     0x14001b9a0
   14001b966:	and    BYTE PTR [rbp+0x69],ch
   14001b969:	jae    0x14001b9de
   14001b96b:	imul   ebp,DWORD PTR [rsi+0x67],0x73256020
   14001b972:	(bad)  
   14001b973:	and    BYTE PTR [rdx+0x56],cl
   14001b976:	rex.WRB and BYTE PTR [r9+0x74],r12b
   14001b97a:	and    BYTE PTR [rax+0x25],ah
   14001b97d:	jae    0x14001b9a6
   14001b97f:	or     dl,BYTE PTR cs:[rax+0x6c]
   14001b983:	gs (bad) 
   14001b985:	jae    0x14001b9ec
   14001b987:	and    BYTE PTR [rcx+0x6e],ch
   14001b98a:	jae    0x14001ba00
   14001b98c:	(bad)  
   14001b98d:	ins    BYTE PTR es:[rdi],dx
   14001b98e:	ins    BYTE PTR es:[rdi],dx
   14001b98f:	and    BYTE PTR [rdi+0x72],ch
   14001b992:	and    BYTE PTR [rbp+0x73],dh
   14001b995:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
   14001b99a:	and    BYTE PTR [rdx+0x52],cl
   14001b99d:	and    BYTE PTR [r15+0x72],r13b
   14001b9a1:	and    BYTE PTR [rdx+0x44],cl
   14001b9a4:	rex.WXB and BYTE PTR [r8+r13*2+0x61],sil
   14001b9a9:	je     0x14001b9cb
   14001b9ab:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14001b9ae:	je     0x14001ba11
   14001b9b0:	imul   ebp,DWORD PTR [rsi+0x73],0x65687420
   14001b9b7:	jae    0x14001ba1e
   14001b9b9:	and    BYTE PTR [rbp+0x69],ch
   14001b9bc:	jae    0x14001ba31
   14001b9be:	imul   ebp,DWORD PTR [rsi+0x67],0x6d6f6320
   14001b9c5:	jo     0x14001ba36
   14001b9c7:	outs   dx,BYTE PTR ds:[rsi]
   14001b9c8:	outs   dx,BYTE PTR gs:[rsi]
   14001b9ca:	je     0x14001ba3f
   14001b9cc:	add    BYTE PTR cs:[rax],al
   14001b9cf:	add    BYTE PTR [rbp+0x72],al
   14001b9d2:	jb     0x14001ba43
   14001b9d4:	jb     0x14001ba10
   14001b9d6:	and    BYTE PTR [rbx+0x6f],ah
   14001b9d9:	jne    0x14001ba47
   14001b9db:	and    BYTE PTR fs:[rsi+0x6f],ch
   14001b9df:	je     0x14001ba01
   14001b9e1:	fs gs je 0x14001ba4a
   14001b9e5:	jb     0x14001ba54
   14001b9e7:	imul   ebp,DWORD PTR [rsi+0x65],0x4d564a20
   14001b9ee:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14001b9f2:	gs add BYTE PTR cs:[rax],al
   14001b9f6:	add    BYTE PTR [rax],al
   14001b9f8:	rex.RB jb 0x14001ba6d
   14001b9fb:	outs   dx,DWORD PTR ds:[rsi]
   14001b9fc:	jb     0x14001ba38
   14001b9fe:	and    BYTE PTR [rsi+0x6f],ch
   14001ba01:	and    BYTE PTR [rbx+0x6e],ch
   14001ba04:	outs   dx,DWORD PTR ds:[rsi]
   14001ba05:	ja     0x14001ba75
   14001ba07:	and    BYTE PTR [rsi+0x4d],dl
   14001ba0a:	jae    0x14001ba3a
   14001ba0c:	and    BYTE PTR [rax],ch
   14001ba0e:	movsxd ebp,DWORD PTR [rax+0x65]
   14001ba11:	movsxd ebp,DWORD PTR [rbx+0x20]
   14001ba14:	outs   dx,WORD PTR ds:[rsi]
   14001ba16:	jb     0x14001ba38
   14001ba18:	movsxd ebp,DWORD PTR [rdi+0x72]
   14001ba1b:	jb     0x14001ba92
   14001ba1d:	jo     0x14001ba93
   14001ba1f:	and    BYTE PTR [rdx+0x76],ch
   14001ba22:	ins    DWORD PTR es:[rdi],dx
   14001ba23:	movsxd esp,DWORD PTR cs:[rsi+0x67]
   14001ba27:	and    BYTE PTR [rsi+0x69],ah
   14001ba2a:	ins    BYTE PTR es:[rdi],dx
   14001ba2b:	sub    DWORD PTR gs:[rax],eax
   14001ba2e:	add    BYTE PTR [rax],al
   14001ba30:	and    eax,0x6c732573
   14001ba35:	imul   esp,DWORD PTR [rdx+0x25],0x25732573
   14001ba3c:	jae    0x14001baa8
   14001ba3e:	jbe    0x14001baad
   14001ba40:	movsxd esp,DWORD PTR cs:[rsi+0x67]
   14001ba44:	add    BYTE PTR [rax],al
   14001ba46:	add    BYTE PTR [rax],al
   14001ba48:	rex.RB jb 0x14001babd
   14001ba4b:	outs   dx,DWORD PTR ds:[rsi]
   14001ba4c:	jb     0x14001ba88
   14001ba4e:	and    BYTE PTR [rbx+0x6f],al
   14001ba51:	jne    0x14001babf
   14001ba53:	and    BYTE PTR fs:[rsi+0x6f],ch
   14001ba57:	je     0x14001ba79
   14001ba59:	imul   bp,WORD PTR [rsi+0x64],0x4a20
   14001ba5f:	(bad)  
   14001ba60:	jbe    0x14001bac3
   14001ba62:	and    BYTE PTR [rbx+0x45],dl
   14001ba65:	and    BYTE PTR [rdx+0x75],dl
   14001ba68:	outs   dx,BYTE PTR ds:[rsi]
   14001ba69:	je     0x14001bad4
   14001ba6b:	ins    DWORD PTR es:[rdi],dx
   14001ba6c:	and    BYTE PTR gs:[rbp+0x6e],al
   14001ba70:	jbe    0x14001badb
   14001ba72:	jb     0x14001bae3
   14001ba74:	outs   dx,BYTE PTR ds:[rsi]
   14001ba75:	ins    DWORD PTR es:[rdi],dx
   14001ba76:	outs   dx,BYTE PTR gs:[rsi]
   14001ba78:	je     0x14001baa8
   14001ba7a:	add    BYTE PTR [rax],al
   14001ba7c:	add    BYTE PTR [rax],al
   14001ba7e:	add    BYTE PTR [rax],al
   14001ba80:	rex.RB jb 0x14001baf5
   14001ba83:	outs   dx,DWORD PTR ds:[rsi]
   14001ba84:	jb     0x14001bac0
   14001ba86:	and    BYTE PTR [rax+rbp*2+0x69],dl
   14001ba8a:	jae    0x14001baac
   14001ba8c:	rex.WX (bad) 
   14001ba8e:	jbe    0x14001baf1
   14001ba90:	and    BYTE PTR [rcx+0x6e],ch
   14001ba93:	jae    0x14001bb09
   14001ba95:	(bad)  
   14001ba96:	outs   dx,BYTE PTR ds:[rsi]
   14001ba97:	movsxd esp,DWORD PTR [rbp+0x20]
   14001ba9a:	outs   dx,DWORD PTR fs:[rsi]
   14001ba9c:	gs jae 0x14001babf
   14001ba9f:	outs   dx,BYTE PTR ds:[rsi]
   14001baa0:	outs   dx,DWORD PTR ds:[rsi]
   14001baa1:	je     0x14001bac3
   14001baa3:	jae    0x14001bb1a
   14001baa5:	jo     0x14001bb17
   14001baa7:	outs   dx,DWORD PTR ds:[rsi]
   14001baa8:	jb     0x14001bb1e
   14001baaa:	and    BYTE PTR [rcx+0x20],ah
   14001baad:	and    eax,0x69622d64
   14001bab2:	je     0x14001bad4
   14001bab4:	rex.WX push rsi
   14001bab6:	rex.WRB
   14001bab7:	or     dl,BYTE PTR cs:[rax+0x6c]
   14001babb:	gs (bad) 
   14001babd:	jae    0x14001bb24
   14001babf:	and    BYTE PTR [rcx+0x6e],ch
   14001bac2:	jae    0x14001bb38
   14001bac4:	(bad)  
   14001bac5:	ins    BYTE PTR es:[rdi],dx
   14001bac6:	ins    BYTE PTR es:[rdi],dx
   14001bac7:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001bacb:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14001bacf:	imul   esi,DWORD PTR [rdx+0x65],0x65762064
   14001bad6:	jb     0x14001bb4b
   14001bad8:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e
   14001badf:	add    BYTE PTR [rip+0x33642d4a],ch        # 0x17365e82f
   14001bae5:	xor    al,BYTE PTR [rax]
   14001bae7:	add    BYTE PTR [rip+0x36642d4a],ch        # 0x17665e837
   14001baed:	xor    al,0x0
   14001baef:	add    BYTE PTR [rbx+0x52],al
   14001baf2:	push   rsp
   14001baf3:	and    BYTE PTR [rax+0x61],dh
   14001baf6:	je     0x14001bb60
   14001baf8:	and    BYTE PTR [rcx+0x73],ch
   14001bafb:	and    BYTE PTR [rip+0x5c000a73],ah        # 0x19c01c574
   14001bb01:	(bad)  
   14001bb02:	imul   ebp,DWORD PTR [rsi+0x5c],0x6376736d
   14001bb09:	jb     0x14001bb3c
   14001bb0b:	xor    BYTE PTR [rax],dh
   14001bb0d:	cs fs ins BYTE PTR es:[rdi],dx
   14001bb10:	ins    BYTE PTR es:[rdi],dx
   14001bb11:	add    BYTE PTR [rax],al
   14001bb13:	add    BYTE PTR [rax],al
   14001bb15:	add    BYTE PTR [rax],al
   14001bb17:	add    BYTE PTR [rbp+0x72],al
   14001bb1a:	jb     0x14001bb8b
   14001bb1c:	jb     0x14001bb58
   14001bb1e:	and    BYTE PTR [rax+0x61],dl
   14001bb21:	je     0x14001bb8b
   14001bb23:	and    BYTE PTR [rbp+riz*2+0x6e],ch
   14001bb27:	addr32 je 0x14001bb92
   14001bb2a:	and    BYTE PTR [rbp+0x78],ah
   14001bb2d:	movsxd esp,DWORD PTR [rbp+0x65]
   14001bb30:	fs jae 0x14001bb53
   14001bb33:	ins    DWORD PTR es:[rdi],dx
   14001bb34:	(bad)  
   14001bb35:	js     0x14001bba0
   14001bb37:	ins    DWORD PTR es:[rdi],dx
   14001bb38:	jne    0x14001bba7
   14001bb3a:	and    BYTE PTR [rbp+riz*2+0x6e],ch
   14001bb3e:	addr32 je 0x14001bba9
   14001bb41:	and    BYTE PTR [rax],ch
   14001bb43:	push   rax
   14001bb44:	push   r12
   14001bb46:	rex.W pop rdi
   14001bb48:	rex.WRB
   14001bb49:	pop    r8
   14001bb4b:	sub    DWORD PTR [rax],eax
   14001bb4d:	add    BYTE PTR [rax],al
   14001bb4f:	add    BYTE PTR [rdx+riz*2+0x69],bl
   14001bb53:	outs   dx,BYTE PTR ds:[rsi]
   14001bb54:	pop    rsp
   14001bb55:	add    BYTE PTR [rax],al
   14001bb57:	add    BYTE PTR [rbp+0x73],ch
   14001bb5a:	jbe    0x14001bbbf
   14001bb5c:	jb     0x14001bb8f
   14001bb5e:	xor    BYTE PTR [rax],dh
   14001bb60:	cs fs ins BYTE PTR es:[rdi],dx
   14001bb63:	ins    BYTE PTR es:[rdi],dx
   14001bb64:	add    BYTE PTR [rax],al
   14001bb66:	add    BYTE PTR [rax],al
   14001bb68:	rex.RB jb 0x14001bbdd
   14001bb6b:	outs   dx,DWORD PTR ds:[rsi]
   14001bb6c:	jb     0x14001bba8
   14001bb6e:	and    BYTE PTR [rbx+0x61],ah
   14001bb71:	outs   dx,BYTE PTR ds:[rsi]
   14001bb72:	(bad)  
   14001bb73:	je     0x14001bb95
   14001bb75:	imul   bp,WORD PTR [rsi+0x64],0x4a20
   14001bb7b:	rex.WRX
   14001bb7c:	rex.WB and BYTE PTR [r9+0x6e],bpl
   14001bb80:	je     0x14001bbe7
   14001bb82:	jb     0x14001bbea
   14001bb84:	(bad)  
   14001bb85:	movsxd esp,DWORD PTR [rbp+0x73]
   14001bb88:	and    BYTE PTR [rcx+0x6e],ch
   14001bb8b:	cmp    ah,BYTE PTR [rax]
   14001bb8d:	and    eax,0x4e4a0073
   14001bb92:	rex.WB pop r15
   14001bb94:	rex.RXB
   14001bb95:	gs je  0x14001bbdc
   14001bb98:	gs data16 (bad) 
   14001bb9b:	jne    0x14001bc09
   14001bb9d:	je     0x14001bbe9
   14001bb9f:	(bad)  
   14001bba0:	jbe    0x14001bc03
   14001bba2:	push   rsi
   14001bba3:	rex.WRB
   14001bba4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001bba6:	imul   esi,DWORD PTR [rcx+rax*2+0x72],0x7367
   14001bbae:	add    BYTE PTR [rax],al
   14001bbb0:	rex.WX
   14001bbb1:	rex.WRX
   14001bbb2:	rex.WB pop r15
   14001bbb4:	rex.XB jb 0x14001bc1c
   14001bbb7:	(bad)  
   14001bbb8:	je     0x14001bc1f
   14001bbba:	rex.WX (bad) 
   14001bbbc:	jbe    0x14001bc1f
   14001bbbe:	push   rsi
   14001bbbf:	rex.WRB add BYTE PTR [r8],r8b
   14001bbc2:	add    BYTE PTR [rax],al
   14001bbc4:	add    BYTE PTR [rax],al
   14001bbc6:	add    BYTE PTR [rax],al
   14001bbc8:	rex.WX push rsi
   14001bbca:	rex.WRB and BYTE PTR [r8+0x61],r14b
   14001bbce:	je     0x14001bc38
   14001bbd0:	and    BYTE PTR [rcx+0x73],ch
   14001bbd3:	and    BYTE PTR [rip+0x70000a73],ah        # 0x1b001c64c
   14001bbd9:	jb     0x14001bc40
   14001bbdb:	ins    BYTE PTR es:[rdi],dx
   14001bbdc:	outs   dx,DWORD PTR ds:[rsi]
   14001bbdd:	(bad)  
   14001bbde:	fs push rbx
   14001bbe0:	je     0x14001bc51
   14001bbe2:	jo     0x14001bbe4
   14001bbe4:	add    BYTE PTR [rax],al
   14001bbe6:	add    BYTE PTR [rax],al
   14001bbe8:	pop    rsp
   14001bbe9:	(bad)  
   14001bbea:	imul   ebp,DWORD PTR [rsi+0x5c],0x2e747761
   14001bbf1:	fs ins BYTE PTR es:[rdi],dx
   14001bbf3:	ins    BYTE PTR es:[rdi],dx
   14001bbf4:	add    BYTE PTR [rax],al
   14001bbf6:	add    BYTE PTR [rax],al
   14001bbf8:	pop    rsp
   14001bbf9:	(bad)  
   14001bbfa:	imul   ebp,DWORD PTR [rsi+0x5c],0x6176616a
   14001bc01:	cs fs ins BYTE PTR es:[rdi],dx
   14001bc04:	ins    BYTE PTR es:[rdi],dx
   14001bc05:	add    BYTE PTR [rax],al
   14001bc07:	add    BYTE PTR [rdx+riz*2+0x69],bl
   14001bc0b:	outs   dx,BYTE PTR ds:[rsi]
   14001bc0c:	pop    rsp
   14001bc0d:	jbe    0x14001bc74
   14001bc0f:	jb     0x14001bc7a
   14001bc11:	data16 jns 0x14001bc42
   14001bc14:	fs ins BYTE PTR es:[rdi],dx
   14001bc16:	ins    BYTE PTR es:[rdi],dx
   14001bc17:	add    BYTE PTR [rax+0x72],dh
   14001bc1a:	gs ins BYTE PTR es:[rdi],dx
   14001bc1c:	outs   dx,DWORD PTR ds:[rsi]
   14001bc1d:	(bad)  
   14001bc1e:	xor    r8d,DWORD PTR fs:[rax+rax*1+0x0]
   14001bc24:	add    BYTE PTR [rax],al
   14001bc26:	add    BYTE PTR [rax],al
   14001bc28:	rex.WX xor al,BYTE PTR [rdi+r11*2+0x44]
   14001bc2d:	xor    eax,DWORD PTR [rdi+rbx*2+0x50]
   14001bc31:	push   rdx
   14001bc32:	rex.RB
   14001bc33:	rex.WR
   14001bc34:	rex.WRXB
   14001bc35:	rex.B
   14001bc36:	add    BYTE PTR [rdx+0x32],r9b
   14001bc3a:	rex.R pop rdi
   14001bc3c:	xor    r8d,DWORD PTR [rax+rax*1+0x4a]
   14001bc41:	push   r10
   14001bc43:	add    BYTE PTR [rdx+0x61],ch
   14001bc46:	jb     0x14001bc48
   14001bc48:	rex.RB js 0x14001bcbb
   14001bc4b:	(bad)  
   14001bc4c:	outs   dx,BYTE PTR ds:[rsi]
   14001bc4d:	fs gs and BYTE PTR fs:[rdi+0x69],dh
   14001bc53:	ins    BYTE PTR es:[rdi],dx
   14001bc54:	movsxd esp,DWORD PTR fs:[rcx+0x72]
   14001bc58:	fs jae 0x14001bc95
   14001bc5b:	or     ah,BYTE PTR [rax]
   14001bc5d:	and    BYTE PTR [rax],ah
   14001bc5f:	and    BYTE PTR [rdx+0x65],ah
   14001bc62:	outs   dx,WORD PTR ds:[rsi]
   14001bc64:	jb     0x14001bccb
   14001bc66:	cmp    ah,BYTE PTR [rax]
   14001bc68:	and    ah,BYTE PTR [rip+0x200a2273]        # 0x1600bdee1
   14001bc6e:	and    BYTE PTR [rax],ah
   14001bc70:	and    BYTE PTR [rcx+0x66],ah
   14001bc73:	je     0x14001bcda
   14001bc75:	jb     0x14001bc97
   14001bc77:	cmp    ah,BYTE PTR [rax]
   14001bc79:	and    ah,BYTE PTR [rip+0xa2273]        # 0x1400bdef2
   14001bc7f:	add    BYTE PTR [rbx+0x70],dl
   14001bc82:	ins    BYTE PTR es:[rdi],dx
   14001bc83:	(bad)  
   14001bc84:	jae    0x14001bcee
   14001bc86:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001bc88:	(bad)  
   14001bc89:	fs rex.WRB
   14001bc8b:	gs ins DWORD PTR es:[rdi],dx
   14001bc8d:	outs   dx,DWORD PTR ds:[rsi]
   14001bc8e:	jb     0x14001bd09
	...
   14001bc98:	push   rbx
   14001bc99:	jo     0x14001bd07
   14001bc9b:	(bad)  
   14001bc9c:	jae    0x14001bd06
   14001bc9e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001bca0:	(bad)  
   14001bca1:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x6c705300
   14001bcab:	(bad)  
   14001bcac:	jae    0x14001bd16
   14001bcae:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001bcb0:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x0
   14001bcb8:	push   rbx
   14001bcb9:	jo     0x14001bd27
   14001bcbb:	(bad)  
   14001bcbc:	jae    0x14001bd26
   14001bcbe:	push   rbx
   14001bcbf:	gs je  0x14001bd08
   14001bcc2:	imul   ebp,DWORD PTR [rbp+riz*2+0x4a],0x614e7261
   14001bcca:	ins    DWORD PTR es:[rdi],dx
   14001bccb:	add    BYTE PTR gs:[rax],al
   14001bcce:	add    BYTE PTR [rax],al
   14001bcd0:	rex.WRB
   14001bcd1:	rex.RB push r12
   14001bcd3:	rex.B sub eax,0x2f464e49
   14001bcd9:	rex.WRB
   14001bcda:	rex.B
   14001bcdb:	rex.WRX
   14001bcdc:	rex.WB
   14001bcdd:	rex.RX
   14001bcde:	rex.RB push r11
   14001bce0:	push   rsp
   14001bce1:	cs rex.WRB
   14001bce3:	rex.RX add BYTE PTR [rax],r8b
   14001bce6:	add    BYTE PTR [rax],al
   14001bce8:	xor    DWORD PTR [rsi],ebp
   14001bcea:	xor    ch,BYTE PTR [rsi]
   14001bcec:	xor    eax,DWORD PTR [rax]
   14001bcee:	add    BYTE PTR [rax],al
   14001bcf0:	or     cl,BYTE PTR [rip+0x0]        # 0x14001bcf6
   14001bcf6:	add    BYTE PTR [rax],al
   14001bcf8:	push   rbx
   14001bcf9:	jo     0x14001bd67
   14001bcfb:	(bad)  
   14001bcfc:	jae    0x14001bd66
   14001bcfe:	jae    0x14001bd63
   14001bd00:	jb     0x14001bd67
   14001bd02:	outs   dx,BYTE PTR gs:[rsi]
   14001bd04:	sub    eax,0x67616d49
   14001bd09:	add    BYTE PTR gs:[rax],al
   14001bd0c:	add    BYTE PTR [rax],al
   14001bd0e:	add    BYTE PTR [rax],al
   14001bd10:	rex.WX push rdx
   14001bd12:	rex.RB sub eax,0x74736552
   14001bd18:	jb     0x14001bd83
   14001bd1a:	movsxd esi,DWORD PTR [rbp+rbp*1+0x53]
   14001bd1e:	gs (bad) 
   14001bd20:	jb     0x14001bd85
   14001bd22:	push   0x0
   14001bd27:	add    BYTE PTR [rdx+0x52],cl
   14001bd2a:	rex.RB sub eax,0x73726556
   14001bd30:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14001bd37:	add    BYTE PTR [rbp+0x61],cl
   14001bd3a:	imul   ebp,DWORD PTR [rsi+0x2d],0x73616c43
   14001bd41:	jae    0x14001bd43
   14001bd43:	add    BYTE PTR [rax],al
   14001bd45:	add    BYTE PTR [rax],al
   14001bd47:	add    BYTE PTR [rbp+0x61],cl
   14001bd4a:	outs   dx,BYTE PTR ds:[rsi]
   14001bd4b:	imul   esp,DWORD PTR [rsi+0x65],0x562d7473
   14001bd52:	gs jb  0x14001bdc8
   14001bd55:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14001bd5c:	xor    BYTE PTR [rax],al
   14001bd5e:	add    BYTE PTR [rax],al
   14001bd60:	cs sub eax,0x2620005f
   14001bd66:	sub    ebp,DWORD PTR [rdx]
	...
   14001bd70:	(bad)  
   14001bd71:	(bad)  
   14001bd72:	add    BYTE PTR [rax],al
   14001bd74:	add    BYTE PTR [rax],cl
   14001bd76:	push   rax
   14001bd77:	add    BYTE PTR [rax],al
   14001bd79:	or     BYTE PTR [rax],dl
   14001bd7b:	add    BYTE PTR [rax+rcx*1],dl
   14001bd7e:	jae    0x14001bd80
   14001bd80:	adc    al,BYTE PTR [rdi]
   14001bd82:	(bad)  
   14001bd83:	add    BYTE PTR [rax],al
   14001bd85:	or     BYTE PTR [rax+0x0],dh
   14001bd88:	add    BYTE PTR [rax],cl
   14001bd8a:	xor    BYTE PTR [rax],al
   14001bd8c:	add    BYTE PTR [rcx],cl
   14001bd8e:	rol    BYTE PTR [rax],0x10
   14001bd91:	(bad)  
   14001bd92:	or     al,BYTE PTR [rax]
   14001bd94:	add    BYTE PTR [rax],cl
   14001bd96:	(bad)  
   14001bd97:	add    BYTE PTR [rax],al
   14001bd99:	or     BYTE PTR [rax],ah
   14001bd9b:	add    BYTE PTR [rax],al
   14001bd9d:	or     DWORD PTR [rax+0x80000],esp
   14001bda3:	add    BYTE PTR [rax],al
   14001bda5:	or     BYTE PTR [rax+0x40080000],al
   14001bdab:	add    BYTE PTR [rax],al
   14001bdad:	or     eax,esp
   14001bdaf:	add    BYTE PTR [rax],dl
   14001bdb1:	(bad)  
   14001bdb2:	(bad)  
   14001bdb3:	add    BYTE PTR [rax],al
   14001bdb5:	or     BYTE PTR [rax+0x0],bl
   14001bdb8:	add    BYTE PTR [rax],cl
   14001bdba:	sbb    BYTE PTR [rax],al
   14001bdbc:	add    BYTE PTR [rcx],cl
   14001bdbe:	nop
   14001bdbf:	add    BYTE PTR [rbx],dl
   14001bdc1:	(bad)  
   14001bdc2:	cmp    eax,DWORD PTR [rax]
   14001bdc4:	add    BYTE PTR [rax],cl
   14001bdc6:	js     0x14001bdc8
   14001bdc8:	add    BYTE PTR [rax],cl
   14001bdca:	cmp    BYTE PTR [rax],al
   14001bdcc:	add    BYTE PTR [rcx],cl
   14001bdce:	rol    BYTE PTR [rax],1
   14001bdd0:	adc    DWORD PTR [rdi],eax
   14001bdd2:	adc    DWORD PTR [rax],eax
   14001bdd4:	add    BYTE PTR [rax],cl
   14001bdd6:	push   0x28080000
   14001bddb:	add    BYTE PTR [rax],al
   14001bddd:	or     DWORD PTR [rax+0x8080000],esi
   14001bde3:	add    BYTE PTR [rax],al
   14001bde5:	or     BYTE PTR [rax+0x48080000],cl
   14001bdeb:	add    BYTE PTR [rax],al
   14001bded:	or     eax,esi
   14001bdef:	add    BYTE PTR [rax],dl
   14001bdf1:	(bad)  
   14001bdf2:	add    al,0x0
   14001bdf4:	add    BYTE PTR [rax],cl
   14001bdf6:	push   rsp
   14001bdf7:	add    BYTE PTR [rax],al
   14001bdf9:	or     BYTE PTR [rax+rax*1],dl
   14001bdfc:	adc    eax,0x1300e308
   14001be01:	(bad)  
   14001be02:	sub    eax,DWORD PTR [rax]
   14001be04:	add    BYTE PTR [rax],cl
   14001be06:	je     0x14001be08
   14001be08:	add    BYTE PTR [rax],cl
   14001be0a:	xor    al,0x0
   14001be0c:	add    BYTE PTR [rcx],cl
   14001be0e:	enter  0x1100,0x7
   14001be12:	or     eax,0x64080000
   14001be17:	add    BYTE PTR [rax],al
   14001be19:	or     BYTE PTR [rax+rax*1],ah
   14001be1c:	add    BYTE PTR [rcx],cl
   14001be1e:	test   al,0x0
   14001be20:	add    BYTE PTR [rax],cl
   14001be22:	add    al,0x0
   14001be24:	add    BYTE PTR [rax],cl
   14001be26:	test   BYTE PTR [rax],al
   14001be28:	add    BYTE PTR [rax],cl
   14001be2a:	add    BYTE PTR [rax],r8b
   14001be2d:	or     eax,ebp
   14001be2f:	add    BYTE PTR [rax],dl
   14001be31:	(bad)  
   14001be32:	or     BYTE PTR [rax],al
   14001be34:	add    BYTE PTR [rax],cl
   14001be36:	pop    rsp
   14001be37:	add    BYTE PTR [rax],al
   14001be39:	or     BYTE PTR [rax+rax*1],bl
   14001be3c:	add    BYTE PTR [rcx],cl
   14001be3e:	cwde   
   14001be3f:	add    BYTE PTR [rdi+rax*1],dl
   14001be42:	push   rbx
   14001be43:	add    BYTE PTR [rax],al
   14001be45:	or     BYTE PTR [rax+rax*1+0x0],bh
   14001be49:	or     BYTE PTR [rax+rax*1],bh
   14001be4c:	add    BYTE PTR [rcx],cl
   14001be4e:	fadd   DWORD PTR [rax]
   14001be50:	adc    al,BYTE PTR [rdi]
   14001be52:	(bad)  
   14001be53:	add    BYTE PTR [rax],al
   14001be55:	or     BYTE PTR [rax+rax*1+0x0],ch
   14001be59:	or     BYTE PTR [rax+rax*1],ch
   14001be5c:	add    BYTE PTR [rcx],cl
   14001be5e:	mov    eax,0xc080000
   14001be63:	add    BYTE PTR [rax],al
   14001be65:	or     BYTE PTR [rax+rax*1+0x4c0800],cl
   14001be6c:	add    BYTE PTR [rcx],cl
   14001be6e:	clc    
   14001be6f:	add    BYTE PTR [rax],dl
   14001be71:	(bad)  
   14001be72:	add    eax,DWORD PTR [rax]
   14001be74:	add    BYTE PTR [rax],cl
   14001be76:	push   rdx
   14001be77:	add    BYTE PTR [rax],al
   14001be79:	or     BYTE PTR [rdx],dl
   14001be7b:	add    BYTE PTR [rip+0x1300a308],dl        # 0x153026189
   14001be81:	(bad)  
   14001be82:	and    eax,DWORD PTR [rax]
   14001be84:	add    BYTE PTR [rax],cl
   14001be86:	jb     0x14001be88
   14001be88:	add    BYTE PTR [rax],cl
   14001be8a:	xor    al,BYTE PTR [rax]
   14001be8c:	add    BYTE PTR [rcx],cl
   14001be8e:	(bad)  
   14001be8f:	add    BYTE PTR [rcx],dl
   14001be91:	(bad)  
   14001be92:	or     eax,DWORD PTR [rax]
   14001be94:	add    BYTE PTR [rax],cl
   14001be96:	(bad)  
   14001be97:	add    BYTE PTR [rax],al
   14001be99:	or     BYTE PTR [rdx],ah
   14001be9b:	add    BYTE PTR [rax],al
   14001be9d:	or     DWORD PTR [rax+rax*1+0x20800],esp
   14001bea4:	add    BYTE PTR [rax],cl
   14001bea6:	(bad)  
   14001bea7:	add    BYTE PTR [rax],al
   14001bea9:	or     BYTE PTR [rdx+0x0],al
   14001beac:	add    BYTE PTR [rcx],cl
   14001beae:	in     al,0x0
   14001beb0:	adc    BYTE PTR [rdi],al
   14001beb2:	(bad)  
   14001beb3:	add    BYTE PTR [rax],al
   14001beb5:	or     BYTE PTR [rdx+0x0],bl
   14001beb8:	add    BYTE PTR [rax],cl
   14001beba:	sbb    al,BYTE PTR [rax]
   14001bebc:	add    BYTE PTR [rcx],cl
   14001bebe:	xchg   esp,eax
   14001bebf:	add    BYTE PTR [rdi+rax*1],dl
   14001bec2:	rex.XB add BYTE PTR [r8],al
   14001bec5:	or     BYTE PTR [rdx+0x0],bh
   14001bec8:	add    BYTE PTR [rax],cl
   14001beca:	cmp    al,BYTE PTR [rax]
   14001becc:	add    BYTE PTR [rcx],cl
   14001bece:	(bad)  
   14001becf:	add    BYTE PTR [rdx],dl
   14001bed1:	(bad)  
   14001bed2:	adc    eax,DWORD PTR [rax]
   14001bed4:	add    BYTE PTR [rax],cl
   14001bed6:	push   0x0
   14001bed8:	add    BYTE PTR [rax],cl
   14001beda:	sub    al,BYTE PTR [rax]
   14001bedc:	add    BYTE PTR [rcx],cl
   14001bede:	mov    ah,0x0
   14001bee0:	add    BYTE PTR [rax],cl
   14001bee2:	or     al,BYTE PTR [rax]
   14001bee4:	add    BYTE PTR [rax],cl
   14001bee6:	mov    al,BYTE PTR [rax]
   14001bee8:	add    BYTE PTR [rax],cl
   14001beea:	rex.WX add BYTE PTR [rax],al
   14001beed:	or     esp,esi
   14001beef:	add    BYTE PTR [rax],dl
   14001bef1:	(bad)  
   14001bef2:	add    eax,0x56080000
   14001bef7:	add    BYTE PTR [rax],al
   14001bef9:	or     BYTE PTR [rsi],dl
   14001befb:	add    BYTE PTR [rax+0x8],al
   14001befe:	add    BYTE PTR [rax],al
   14001bf00:	adc    eax,DWORD PTR [rdi]
   14001bf02:	xor    eax,DWORD PTR [rax]
   14001bf04:	add    BYTE PTR [rax],cl
   14001bf06:	jbe    0x14001bf08
   14001bf08:	add    BYTE PTR [rax],cl
   14001bf0a:	add    BYTE PTR ss:[rax],al
   14001bf0d:	or     esp,ecx
   14001bf0f:	add    BYTE PTR [rcx],dl
   14001bf11:	(bad)  
   14001bf12:	sldt   WORD PTR [rax]
   14001bf15:	or     BYTE PTR [rsi+0x0],ah
   14001bf18:	add    BYTE PTR [rax],cl
   14001bf1a:	add    BYTE PTR es:[rax],al
   14001bf1d:	or     DWORD PTR [rax+rax*1+0x60800],ebp
   14001bf24:	add    BYTE PTR [rax],cl
   14001bf26:	xchg   BYTE PTR [rax],al
   14001bf28:	add    BYTE PTR [rax],cl
   14001bf2a:	rex.RX add BYTE PTR [rax],r8b
   14001bf2d:	or     esp,ebp
   14001bf2f:	add    BYTE PTR [rax],dl
   14001bf31:	(bad)  
   14001bf32:	or     DWORD PTR [rax],eax
   14001bf34:	add    BYTE PTR [rax],cl
   14001bf36:	pop    rsi
   14001bf37:	add    BYTE PTR [rax],al
   14001bf39:	or     BYTE PTR [rsi],bl
   14001bf3b:	add    BYTE PTR [rax],al
   14001bf3d:	or     DWORD PTR [rax+rax*1+0x630714],ebx
   14001bf44:	add    BYTE PTR [rax],cl
   14001bf46:	jle    0x14001bf48
   14001bf48:	add    BYTE PTR [rax],cl
   14001bf4a:	add    BYTE PTR ds:[rax],al
   14001bf4d:	or     esp,ebx
   14001bf4f:	add    BYTE PTR [rdx],dl
   14001bf51:	(bad)  
   14001bf52:	sbb    eax,DWORD PTR [rax]
   14001bf54:	add    BYTE PTR [rax],cl
   14001bf56:	outs   dx,BYTE PTR ds:[rsi]
   14001bf57:	add    BYTE PTR [rax],al
   14001bf59:	or     BYTE PTR [rsi],ch
   14001bf5b:	add    BYTE PTR [rax],al
   14001bf5d:	or     DWORD PTR [rax+rax*1+0xe0800],edi
   14001bf64:	add    BYTE PTR [rax],cl
   14001bf66:	mov    es,WORD PTR [rax]
   14001bf68:	add    BYTE PTR [rax],cl
   14001bf6a:	rex.WRX add BYTE PTR [rax],r8b
   14001bf6d:	or     esp,edi
   14001bf6f:	add    BYTE PTR [rax+0x7],ah
   14001bf72:	add    BYTE PTR [rax],al
   14001bf74:	add    BYTE PTR [rax],cl
   14001bf76:	push   rcx
   14001bf77:	add    BYTE PTR [rax],al
   14001bf79:	or     BYTE PTR [rcx],dl
   14001bf7b:	add    BYTE PTR [rip+0x12008308],dl        # 0x152024289
   14001bf81:	(bad)  
   14001bf82:	(bad)  
   14001bf83:	add    BYTE PTR [rax],al
   14001bf85:	or     BYTE PTR [rcx+0x0],dh
   14001bf88:	add    BYTE PTR [rax],cl
   14001bf8a:	xor    DWORD PTR [rax],eax
   14001bf8c:	add    BYTE PTR [rcx],cl
   14001bf8e:	ret    0x1000
   14001bf91:	(bad)  
   14001bf92:	or     al,BYTE PTR [rax]
   14001bf94:	add    BYTE PTR [rax],cl
   14001bf96:	(bad)  
   14001bf97:	add    BYTE PTR [rax],al
   14001bf99:	or     BYTE PTR [rcx],ah
   14001bf9b:	add    BYTE PTR [rax],al
   14001bf9d:	or     DWORD PTR [rdx+0x1080000],esp
   14001bfa3:	add    BYTE PTR [rax],al
   14001bfa5:	or     BYTE PTR [rcx+0x41080000],al
   14001bfab:	add    BYTE PTR [rax],al
   14001bfad:	or     edx,esp
   14001bfaf:	add    BYTE PTR [rax],dl
   14001bfb1:	(bad)  
   14001bfb2:	(bad)  
   14001bfb3:	add    BYTE PTR [rax],al
   14001bfb5:	or     BYTE PTR [rcx+0x0],bl
   14001bfb8:	add    BYTE PTR [rax],cl
   14001bfba:	sbb    DWORD PTR [rax],eax
   14001bfbc:	add    BYTE PTR [rcx],cl
   14001bfbe:	xchg   edx,eax
   14001bfbf:	add    BYTE PTR [rbx],dl
   14001bfc1:	(bad)  
   14001bfc2:	cmp    eax,DWORD PTR [rax]
   14001bfc4:	add    BYTE PTR [rax],cl
   14001bfc6:	jns    0x14001bfc8
   14001bfc8:	add    BYTE PTR [rax],cl
   14001bfca:	cmp    DWORD PTR [rax],eax
   14001bfcc:	add    BYTE PTR [rcx],cl
   14001bfce:	rol    BYTE PTR [rax],cl
   14001bfd0:	adc    DWORD PTR [rdi],eax
   14001bfd2:	adc    DWORD PTR [rax],eax
   14001bfd4:	add    BYTE PTR [rax],cl
   14001bfd6:	imul   eax,DWORD PTR [rax],0x290800
   14001bfdc:	add    BYTE PTR [rcx],cl
   14001bfde:	mov    dl,0x0
   14001bfe0:	add    BYTE PTR [rax],cl
   14001bfe2:	or     DWORD PTR [rax],eax
   14001bfe4:	add    BYTE PTR [rax],cl
   14001bfe6:	mov    DWORD PTR [rax],eax
   14001bfe8:	add    BYTE PTR [rax],cl
   14001bfea:	rex.WB add BYTE PTR [r8],al
   14001bfed:	or     edx,esi
   14001bfef:	add    BYTE PTR [rax],dl
   14001bff1:	(bad)  
   14001bff2:	add    al,0x0
   14001bff4:	add    BYTE PTR [rax],cl
   14001bff6:	push   rbp
   14001bff7:	add    BYTE PTR [rax],al
   14001bff9:	or     BYTE PTR [rip+0x2081000],dl        # 0x14209cfff
   14001bfff:	add    DWORD PTR [rbx],edx
   14001c001:	(bad)  
   14001c002:	sub    eax,DWORD PTR [rax]
   14001c004:	add    BYTE PTR [rax],cl
   14001c006:	jne    0x14001c008
   14001c008:	add    BYTE PTR [rax],cl
   14001c00a:	xor    eax,0xca090000
   14001c00f:	add    BYTE PTR [rcx],dl
   14001c011:	(bad)  
   14001c012:	or     eax,0x65080000
   14001c017:	add    BYTE PTR [rax],al
   14001c019:	or     BYTE PTR [rip+0xffffffffaa090000],ah        # 0xea0ac01f
   14001c01f:	add    BYTE PTR [rax],al
   14001c021:	or     BYTE PTR [rip+0xffffffff85080000],al        # 0xc509c027
   14001c027:	add    BYTE PTR [rax],al
   14001c029:	or     BYTE PTR [rbp+0x0],al
   14001c02c:	add    BYTE PTR [rcx],cl
   14001c02e:	(bad)  
   14001c02f:	add    BYTE PTR [rax],dl
   14001c031:	(bad)  
   14001c032:	or     BYTE PTR [rax],al
   14001c034:	add    BYTE PTR [rax],cl
   14001c036:	pop    rbp
   14001c037:	add    BYTE PTR [rax],al
   14001c039:	or     BYTE PTR [rip+0xffffffff9a090000],bl        # 0xda0ac03f
   14001c03f:	add    BYTE PTR [rdi+rax*1],dl
   14001c042:	push   rbx
   14001c043:	add    BYTE PTR [rax],al
   14001c045:	or     BYTE PTR [rbp+0x0],bh
   14001c048:	add    BYTE PTR [rax],cl
   14001c04a:	cmp    eax,0xda090000
   14001c04f:	add    BYTE PTR [rdx],dl
   14001c051:	(bad)  
   14001c052:	(bad)  
   14001c053:	add    BYTE PTR [rax],al
   14001c055:	or     BYTE PTR [rbp+0x0],ch
   14001c058:	add    BYTE PTR [rax],cl
   14001c05a:	sub    eax,0xba090000
   14001c05f:	add    BYTE PTR [rax],al
   14001c061:	or     BYTE PTR [rip+0xffffffff8d080000],cl        # 0xcd09c067
   14001c067:	add    BYTE PTR [rax],al
   14001c069:	or     BYTE PTR [rbp+0x0],cl
   14001c06c:	add    BYTE PTR [rcx],cl
   14001c06e:	cli    
   14001c06f:	add    BYTE PTR [rax],dl
   14001c071:	(bad)  
   14001c072:	add    eax,DWORD PTR [rax]
   14001c074:	add    BYTE PTR [rax],cl
   14001c076:	push   rbx
   14001c077:	add    BYTE PTR [rax],al
   14001c079:	or     BYTE PTR [rbx],dl
   14001c07b:	add    BYTE PTR [rip+0x1300c308],dl        # 0x153028389
   14001c081:	(bad)  
   14001c082:	and    eax,DWORD PTR [rax]
   14001c084:	add    BYTE PTR [rax],cl
   14001c086:	jae    0x14001c088
   14001c088:	add    BYTE PTR [rax],cl
   14001c08a:	xor    eax,DWORD PTR [rax]
   14001c08c:	add    BYTE PTR [rcx],cl
   14001c08e:	mov    BYTE PTR [rax],0x11
   14001c091:	(bad)  
   14001c092:	or     eax,DWORD PTR [rax]
   14001c094:	add    BYTE PTR [rax],cl
   14001c096:	movsxd eax,DWORD PTR [rax]
   14001c098:	add    BYTE PTR [rax],cl
   14001c09a:	and    eax,DWORD PTR [rax]
   14001c09c:	add    BYTE PTR [rcx],cl
   14001c09e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001c09f:	add    BYTE PTR [rax],al
   14001c0a1:	or     BYTE PTR [rbx],al
   14001c0a3:	add    BYTE PTR [rax],al
   14001c0a5:	or     BYTE PTR [rbx+0x43080000],al
   14001c0ab:	add    BYTE PTR [rax],al
   14001c0ad:	or     esi,esp
   14001c0af:	add    BYTE PTR [rax],dl
   14001c0b1:	(bad)  
   14001c0b2:	(bad)  
   14001c0b3:	add    BYTE PTR [rax],al
   14001c0b5:	or     BYTE PTR [rbx+0x0],bl
   14001c0b8:	add    BYTE PTR [rax],cl
   14001c0ba:	sbb    eax,DWORD PTR [rax]
   14001c0bc:	add    BYTE PTR [rcx],cl
   14001c0be:	xchg   esi,eax
   14001c0bf:	add    BYTE PTR [rdi+rax*1],dl
   14001c0c2:	rex.XB add BYTE PTR [r8],al
   14001c0c5:	or     BYTE PTR [rbx+0x0],bh
   14001c0c8:	add    BYTE PTR [rax],cl
   14001c0ca:	cmp    eax,DWORD PTR [rax]
   14001c0cc:	add    BYTE PTR [rcx],cl
   14001c0ce:	(bad)  
   14001c0cf:	add    BYTE PTR [rdx],dl
   14001c0d1:	(bad)  
   14001c0d2:	adc    eax,DWORD PTR [rax]
   14001c0d4:	add    BYTE PTR [rax],cl
   14001c0d6:	imul   eax,DWORD PTR [rax],0x0
   14001c0d9:	or     BYTE PTR [rbx],ch
   14001c0db:	add    BYTE PTR [rax],al
   14001c0dd:	or     DWORD PTR [rsi+0xb080000],esi
   14001c0e3:	add    BYTE PTR [rax],al
   14001c0e5:	or     BYTE PTR [rbx+0x4b080000],cl
   14001c0eb:	add    BYTE PTR [rax],al
   14001c0ed:	or     esi,esi
   14001c0ef:	add    BYTE PTR [rax],dl
   14001c0f1:	(bad)  
   14001c0f2:	add    eax,0x57080000
   14001c0f7:	add    BYTE PTR [rax],al
   14001c0f9:	or     BYTE PTR [rdi],dl
   14001c0fb:	add    BYTE PTR [rax+0x8],al
   14001c0fe:	add    BYTE PTR [rax],al
   14001c100:	adc    eax,DWORD PTR [rdi]
   14001c102:	xor    eax,DWORD PTR [rax]
   14001c104:	add    BYTE PTR [rax],cl
   14001c106:	ja     0x14001c108
   14001c108:	add    BYTE PTR [rax],cl
   14001c10a:	(bad)  
   14001c10b:	add    BYTE PTR [rax],al
   14001c10d:	or     esi,ecx
   14001c10f:	add    BYTE PTR [rcx],dl
   14001c111:	(bad)  
   14001c112:	sldt   WORD PTR [rax]
   14001c115:	or     BYTE PTR [rdi+0x0],ah
   14001c118:	add    BYTE PTR [rax],cl
   14001c11a:	(bad)  
   14001c11b:	add    BYTE PTR [rax],al
   14001c11d:	or     DWORD PTR [rsi+0x7080000],ebp
   14001c123:	add    BYTE PTR [rax],al
   14001c125:	or     BYTE PTR [rdi+0x47080000],al
   14001c12b:	add    BYTE PTR [rax],al
   14001c12d:	or     esi,ebp
   14001c12f:	add    BYTE PTR [rax],dl
   14001c131:	(bad)  
   14001c132:	or     DWORD PTR [rax],eax
   14001c134:	add    BYTE PTR [rax],cl
   14001c136:	pop    rdi
   14001c137:	add    BYTE PTR [rax],al
   14001c139:	or     BYTE PTR [rdi],bl
   14001c13b:	add    BYTE PTR [rax],al
   14001c13d:	or     DWORD PTR [rsi+0x63071400],ebx
   14001c143:	add    BYTE PTR [rax],al
   14001c145:	or     BYTE PTR [rdi+0x0],bh
   14001c148:	add    BYTE PTR [rax],cl
   14001c14a:	(bad)  
   14001c14b:	add    BYTE PTR [rax],al
   14001c14d:	or     esi,ebx
   14001c14f:	add    BYTE PTR [rdx],dl
   14001c151:	(bad)  
   14001c152:	sbb    eax,DWORD PTR [rax]
   14001c154:	add    BYTE PTR [rax],cl
   14001c156:	outs   dx,DWORD PTR ds:[rsi]
   14001c157:	add    BYTE PTR [rax],al
   14001c159:	or     BYTE PTR [rdi],ch
   14001c15b:	add    BYTE PTR [rax],al
   14001c15d:	or     DWORD PTR [rsi+0xf080000],edi
   14001c163:	add    BYTE PTR [rax],al
   14001c165:	or     BYTE PTR [rdi+0x4f080000],cl
   14001c16b:	add    BYTE PTR [rax],al
   14001c16d:	or     esi,edi
   14001c16f:	add    BYTE PTR [rax+0x7],ah
   14001c172:	add    BYTE PTR [rax],al
   14001c174:	add    BYTE PTR [rax],cl
   14001c176:	push   rax
   14001c177:	add    BYTE PTR [rax],al
   14001c179:	or     BYTE PTR [rax],dl
   14001c17b:	add    BYTE PTR [rax+rcx*1],dl
   14001c17e:	jae    0x14001c180
   14001c180:	adc    al,BYTE PTR [rdi]
   14001c182:	(bad)  
   14001c183:	add    BYTE PTR [rax],al
   14001c185:	or     BYTE PTR [rax+0x0],dh
   14001c188:	add    BYTE PTR [rax],cl
   14001c18a:	xor    BYTE PTR [rax],al
   14001c18c:	add    BYTE PTR [rcx],cl
   14001c18e:	rol    DWORD PTR [rax],0x10
   14001c191:	(bad)  
   14001c192:	or     al,BYTE PTR [rax]
   14001c194:	add    BYTE PTR [rax],cl
   14001c196:	(bad)  
   14001c197:	add    BYTE PTR [rax],al
   14001c199:	or     BYTE PTR [rax],ah
   14001c19b:	add    BYTE PTR [rax],al
   14001c19d:	or     DWORD PTR [rcx+0x80000],esp
   14001c1a3:	add    BYTE PTR [rax],al
   14001c1a5:	or     BYTE PTR [rax+0x40080000],al
   14001c1ab:	add    BYTE PTR [rax],al
   14001c1ad:	or     ecx,esp
   14001c1af:	add    BYTE PTR [rax],dl
   14001c1b1:	(bad)  
   14001c1b2:	(bad)  
   14001c1b3:	add    BYTE PTR [rax],al
   14001c1b5:	or     BYTE PTR [rax+0x0],bl
   14001c1b8:	add    BYTE PTR [rax],cl
   14001c1ba:	sbb    BYTE PTR [rax],al
   14001c1bc:	add    BYTE PTR [rcx],cl
   14001c1be:	xchg   ecx,eax
   14001c1bf:	add    BYTE PTR [rbx],dl
   14001c1c1:	(bad)  
   14001c1c2:	cmp    eax,DWORD PTR [rax]
   14001c1c4:	add    BYTE PTR [rax],cl
   14001c1c6:	js     0x14001c1c8
   14001c1c8:	add    BYTE PTR [rax],cl
   14001c1ca:	cmp    BYTE PTR [rax],al
   14001c1cc:	add    BYTE PTR [rcx],cl
   14001c1ce:	rol    DWORD PTR [rax],1
   14001c1d0:	adc    DWORD PTR [rdi],eax
   14001c1d2:	adc    DWORD PTR [rax],eax
   14001c1d4:	add    BYTE PTR [rax],cl
   14001c1d6:	push   0x28080000
   14001c1db:	add    BYTE PTR [rax],al
   14001c1dd:	or     DWORD PTR [rcx+0x8080000],esi
   14001c1e3:	add    BYTE PTR [rax],al
   14001c1e5:	or     BYTE PTR [rax+0x48080000],cl
   14001c1eb:	add    BYTE PTR [rax],al
   14001c1ed:	or     ecx,esi
   14001c1ef:	add    BYTE PTR [rax],dl
   14001c1f1:	(bad)  
   14001c1f2:	add    al,0x0
   14001c1f4:	add    BYTE PTR [rax],cl
   14001c1f6:	push   rsp
   14001c1f7:	add    BYTE PTR [rax],al
   14001c1f9:	or     BYTE PTR [rax+rax*1],dl
   14001c1fc:	adc    eax,0x1300e308
   14001c201:	(bad)  
   14001c202:	sub    eax,DWORD PTR [rax]
   14001c204:	add    BYTE PTR [rax],cl
   14001c206:	je     0x14001c208
   14001c208:	add    BYTE PTR [rax],cl
   14001c20a:	xor    al,0x0
   14001c20c:	add    BYTE PTR [rcx],cl
   14001c20e:	leave  
   14001c20f:	add    BYTE PTR [rcx],dl
   14001c211:	(bad)  
   14001c212:	or     eax,0x64080000
   14001c217:	add    BYTE PTR [rax],al
   14001c219:	or     BYTE PTR [rax+rax*1],ah
   14001c21c:	add    BYTE PTR [rcx],cl
   14001c21e:	test   eax,0x4080000
   14001c223:	add    BYTE PTR [rax],al
   14001c225:	or     BYTE PTR [rax+rax*1+0x440800],al
   14001c22c:	add    BYTE PTR [rcx],cl
   14001c22e:	jmp    0x14808d233
   14001c233:	add    BYTE PTR [rax],al
   14001c235:	or     BYTE PTR [rax+rax*1+0x0],bl
   14001c239:	or     BYTE PTR [rax+rax*1],bl
   14001c23c:	add    BYTE PTR [rcx],cl
   14001c23e:	cdq    
   14001c23f:	add    BYTE PTR [rdi+rax*1],dl
   14001c242:	push   rbx
   14001c243:	add    BYTE PTR [rax],al
   14001c245:	or     BYTE PTR [rax+rax*1+0x0],bh
   14001c249:	or     BYTE PTR [rax+rax*1],bh
   14001c24c:	add    BYTE PTR [rcx],cl
   14001c24e:	fld    DWORD PTR [rax]
   14001c250:	adc    al,BYTE PTR [rdi]
   14001c252:	(bad)  
   14001c253:	add    BYTE PTR [rax],al
   14001c255:	or     BYTE PTR [rax+rax*1+0x0],ch
   14001c259:	or     BYTE PTR [rax+rax*1],ch
   14001c25c:	add    BYTE PTR [rcx],cl
   14001c25e:	mov    ecx,0xc080000
   14001c263:	add    BYTE PTR [rax],al
   14001c265:	or     BYTE PTR [rax+rax*1+0x4c0800],cl
   14001c26c:	add    BYTE PTR [rcx],cl
   14001c26e:	stc    
   14001c26f:	add    BYTE PTR [rax],dl
   14001c271:	(bad)  
   14001c272:	add    eax,DWORD PTR [rax]
   14001c274:	add    BYTE PTR [rax],cl
   14001c276:	push   rdx
   14001c277:	add    BYTE PTR [rax],al
   14001c279:	or     BYTE PTR [rdx],dl
   14001c27b:	add    BYTE PTR [rip+0x1300a308],dl        # 0x153026589
   14001c281:	(bad)  
   14001c282:	and    eax,DWORD PTR [rax]
   14001c284:	add    BYTE PTR [rax],cl
   14001c286:	jb     0x14001c288
   14001c288:	add    BYTE PTR [rax],cl
   14001c28a:	xor    al,BYTE PTR [rax]
   14001c28c:	add    BYTE PTR [rcx],cl
   14001c28e:	(bad)
   14001c291:	(bad)  
   14001c292:	or     eax,DWORD PTR [rax]
   14001c294:	add    BYTE PTR [rax],cl
   14001c296:	(bad)  
   14001c297:	add    BYTE PTR [rax],al
   14001c299:	or     BYTE PTR [rdx],ah
   14001c29b:	add    BYTE PTR [rax],al
   14001c29d:	or     DWORD PTR [rbp+0x2080000],esp
   14001c2a3:	add    BYTE PTR [rax],al
   14001c2a5:	or     BYTE PTR [rdx+0x42080000],al
   14001c2ab:	add    BYTE PTR [rax],al
   14001c2ad:	or     ebp,esp
   14001c2af:	add    BYTE PTR [rax],dl
   14001c2b1:	(bad)  
   14001c2b2:	(bad)  
   14001c2b3:	add    BYTE PTR [rax],al
   14001c2b5:	or     BYTE PTR [rdx+0x0],bl
   14001c2b8:	add    BYTE PTR [rax],cl
   14001c2ba:	sbb    al,BYTE PTR [rax]
   14001c2bc:	add    BYTE PTR [rcx],cl
   14001c2be:	xchg   ebp,eax
   14001c2bf:	add    BYTE PTR [rdi+rax*1],dl
   14001c2c2:	rex.XB add BYTE PTR [r8],al
   14001c2c5:	or     BYTE PTR [rdx+0x0],bh
   14001c2c8:	add    BYTE PTR [rax],cl
   14001c2ca:	cmp    al,BYTE PTR [rax]
   14001c2cc:	add    BYTE PTR [rcx],cl
   14001c2ce:	(bad)  
   14001c2cf:	add    BYTE PTR [rdx],dl
   14001c2d1:	(bad)  
   14001c2d2:	adc    eax,DWORD PTR [rax]
   14001c2d4:	add    BYTE PTR [rax],cl
   14001c2d6:	push   0x0
   14001c2d8:	add    BYTE PTR [rax],cl
   14001c2da:	sub    al,BYTE PTR [rax]
   14001c2dc:	add    BYTE PTR [rcx],cl
   14001c2de:	mov    ch,0x0
   14001c2e0:	add    BYTE PTR [rax],cl
   14001c2e2:	or     al,BYTE PTR [rax]
   14001c2e4:	add    BYTE PTR [rax],cl
   14001c2e6:	mov    al,BYTE PTR [rax]
   14001c2e8:	add    BYTE PTR [rax],cl
   14001c2ea:	rex.WX add BYTE PTR [rax],al
   14001c2ed:	or     ebp,esi
   14001c2ef:	add    BYTE PTR [rax],dl
   14001c2f1:	(bad)  
   14001c2f2:	add    eax,0x56080000
   14001c2f7:	add    BYTE PTR [rax],al
   14001c2f9:	or     BYTE PTR [rsi],dl
   14001c2fb:	add    BYTE PTR [rax+0x8],al
   14001c2fe:	add    BYTE PTR [rax],al
   14001c300:	adc    eax,DWORD PTR [rdi]
   14001c302:	xor    eax,DWORD PTR [rax]
   14001c304:	add    BYTE PTR [rax],cl
   14001c306:	jbe    0x14001c308
   14001c308:	add    BYTE PTR [rax],cl
   14001c30a:	add    BYTE PTR ss:[rax],al
   14001c30d:	or     ebp,ecx
   14001c30f:	add    BYTE PTR [rcx],dl
   14001c311:	(bad)  
   14001c312:	sldt   WORD PTR [rax]
   14001c315:	or     BYTE PTR [rsi+0x0],ah
   14001c318:	add    BYTE PTR [rax],cl
   14001c31a:	add    BYTE PTR es:[rax],al
   14001c31d:	or     DWORD PTR [rbp+0x6080000],ebp
   14001c323:	add    BYTE PTR [rax],al
   14001c325:	or     BYTE PTR [rsi+0x46080000],al
   14001c32b:	add    BYTE PTR [rax],al
   14001c32d:	or     ebp,ebp
   14001c32f:	add    BYTE PTR [rax],dl
   14001c331:	(bad)  
   14001c332:	or     DWORD PTR [rax],eax
   14001c334:	add    BYTE PTR [rax],cl
   14001c336:	pop    rsi
   14001c337:	add    BYTE PTR [rax],al
   14001c339:	or     BYTE PTR [rsi],bl
   14001c33b:	add    BYTE PTR [rax],al
   14001c33d:	or     DWORD PTR [rbp+0x63071400],ebx
   14001c343:	add    BYTE PTR [rax],al
   14001c345:	or     BYTE PTR [rsi+0x0],bh
   14001c348:	add    BYTE PTR [rax],cl
   14001c34a:	add    BYTE PTR ds:[rax],al
   14001c34d:	or     ebp,ebx
   14001c34f:	add    BYTE PTR [rdx],dl
   14001c351:	(bad)  
   14001c352:	sbb    eax,DWORD PTR [rax]
   14001c354:	add    BYTE PTR [rax],cl
   14001c356:	outs   dx,BYTE PTR ds:[rsi]
   14001c357:	add    BYTE PTR [rax],al
   14001c359:	or     BYTE PTR [rsi],ch
   14001c35b:	add    BYTE PTR [rax],al
   14001c35d:	or     DWORD PTR [rbp+0xe080000],edi
   14001c363:	add    BYTE PTR [rax],al
   14001c365:	or     BYTE PTR [rsi+0x4e080000],cl
   14001c36b:	add    BYTE PTR [rax],al
   14001c36d:	or     ebp,edi
   14001c36f:	add    BYTE PTR [rax+0x7],ah
   14001c372:	add    BYTE PTR [rax],al
   14001c374:	add    BYTE PTR [rax],cl
   14001c376:	push   rcx
   14001c377:	add    BYTE PTR [rax],al
   14001c379:	or     BYTE PTR [rcx],dl
   14001c37b:	add    BYTE PTR [rip+0x12008308],dl        # 0x152024689
   14001c381:	(bad)  
   14001c382:	(bad)  
   14001c383:	add    BYTE PTR [rax],al
   14001c385:	or     BYTE PTR [rcx+0x0],dh
   14001c388:	add    BYTE PTR [rax],cl
   14001c38a:	xor    DWORD PTR [rax],eax
   14001c38c:	add    BYTE PTR [rcx],cl
   14001c38e:	ret    
   14001c38f:	add    BYTE PTR [rax],dl
   14001c391:	(bad)  
   14001c392:	or     al,BYTE PTR [rax]
   14001c394:	add    BYTE PTR [rax],cl
   14001c396:	(bad)  
   14001c397:	add    BYTE PTR [rax],al
   14001c399:	or     BYTE PTR [rcx],ah
   14001c39b:	add    BYTE PTR [rax],al
   14001c39d:	or     DWORD PTR [rbx+0x1080000],esp
   14001c3a3:	add    BYTE PTR [rax],al
   14001c3a5:	or     BYTE PTR [rcx+0x41080000],al
   14001c3ab:	add    BYTE PTR [rax],al
   14001c3ad:	or     ebx,esp
   14001c3af:	add    BYTE PTR [rax],dl
   14001c3b1:	(bad)  
   14001c3b2:	(bad)  
   14001c3b3:	add    BYTE PTR [rax],al
   14001c3b5:	or     BYTE PTR [rcx+0x0],bl
   14001c3b8:	add    BYTE PTR [rax],cl
   14001c3ba:	sbb    DWORD PTR [rax],eax
   14001c3bc:	add    BYTE PTR [rcx],cl
   14001c3be:	xchg   ebx,eax
   14001c3bf:	add    BYTE PTR [rbx],dl
   14001c3c1:	(bad)  
   14001c3c2:	cmp    eax,DWORD PTR [rax]
   14001c3c4:	add    BYTE PTR [rax],cl
   14001c3c6:	jns    0x14001c3c8
   14001c3c8:	add    BYTE PTR [rax],cl
   14001c3ca:	cmp    DWORD PTR [rax],eax
   14001c3cc:	add    BYTE PTR [rcx],cl
   14001c3ce:	rol    DWORD PTR [rax],cl
   14001c3d0:	adc    DWORD PTR [rdi],eax
   14001c3d2:	adc    DWORD PTR [rax],eax
   14001c3d4:	add    BYTE PTR [rax],cl
   14001c3d6:	imul   eax,DWORD PTR [rax],0x290800
   14001c3dc:	add    BYTE PTR [rcx],cl
   14001c3de:	mov    bl,0x0
   14001c3e0:	add    BYTE PTR [rax],cl
   14001c3e2:	or     DWORD PTR [rax],eax
   14001c3e4:	add    BYTE PTR [rax],cl
   14001c3e6:	mov    DWORD PTR [rax],eax
   14001c3e8:	add    BYTE PTR [rax],cl
   14001c3ea:	rex.WB add BYTE PTR [r8],al
   14001c3ed:	or     ebx,esi
   14001c3ef:	add    BYTE PTR [rax],dl
   14001c3f1:	(bad)  
   14001c3f2:	add    al,0x0
   14001c3f4:	add    BYTE PTR [rax],cl
   14001c3f6:	push   rbp
   14001c3f7:	add    BYTE PTR [rax],al
   14001c3f9:	or     BYTE PTR [rip+0x2081000],dl        # 0x14209d3ff
   14001c3ff:	add    DWORD PTR [rbx],edx
   14001c401:	(bad)  
   14001c402:	sub    eax,DWORD PTR [rax]
   14001c404:	add    BYTE PTR [rax],cl
   14001c406:	jne    0x14001c408
   14001c408:	add    BYTE PTR [rax],cl
   14001c40a:	xor    eax,0xcb090000
   14001c40f:	add    BYTE PTR [rcx],dl
   14001c411:	(bad)  
   14001c412:	or     eax,0x65080000
   14001c417:	add    BYTE PTR [rax],al
   14001c419:	or     BYTE PTR [rip+0xffffffffab090000],ah        # 0xeb0ac41f
   14001c41f:	add    BYTE PTR [rax],al
   14001c421:	or     BYTE PTR [rip+0xffffffff85080000],al        # 0xc509c427
   14001c427:	add    BYTE PTR [rax],al
   14001c429:	or     BYTE PTR [rbp+0x0],al
   14001c42c:	add    BYTE PTR [rcx],cl
   14001c42e:	jmp    0x14001c430
   14001c430:	adc    BYTE PTR [rdi],al
   14001c432:	or     BYTE PTR [rax],al
   14001c434:	add    BYTE PTR [rax],cl
   14001c436:	pop    rbp
   14001c437:	add    BYTE PTR [rax],al
   14001c439:	or     BYTE PTR [rip+0xffffffff9b090000],bl        # 0xdb0ac43f
   14001c43f:	add    BYTE PTR [rdi+rax*1],dl
   14001c442:	push   rbx
   14001c443:	add    BYTE PTR [rax],al
   14001c445:	or     BYTE PTR [rbp+0x0],bh
   14001c448:	add    BYTE PTR [rax],cl
   14001c44a:	cmp    eax,0xdb090000
   14001c44f:	add    BYTE PTR [rdx],dl
   14001c451:	(bad)  
   14001c452:	(bad)  
   14001c453:	add    BYTE PTR [rax],al
   14001c455:	or     BYTE PTR [rbp+0x0],ch
   14001c458:	add    BYTE PTR [rax],cl
   14001c45a:	sub    eax,0xbb090000
   14001c45f:	add    BYTE PTR [rax],al
   14001c461:	or     BYTE PTR [rip+0xffffffff8d080000],cl        # 0xcd09c467
   14001c467:	add    BYTE PTR [rax],al
   14001c469:	or     BYTE PTR [rbp+0x0],cl
   14001c46c:	add    BYTE PTR [rcx],cl
   14001c46e:	sti    
   14001c46f:	add    BYTE PTR [rax],dl
   14001c471:	(bad)  
   14001c472:	add    eax,DWORD PTR [rax]
   14001c474:	add    BYTE PTR [rax],cl
   14001c476:	push   rbx
   14001c477:	add    BYTE PTR [rax],al
   14001c479:	or     BYTE PTR [rbx],dl
   14001c47b:	add    BYTE PTR [rip+0x1300c308],dl        # 0x153028789
   14001c481:	(bad)  
   14001c482:	and    eax,DWORD PTR [rax]
   14001c484:	add    BYTE PTR [rax],cl
   14001c486:	jae    0x14001c488
   14001c488:	add    BYTE PTR [rax],cl
   14001c48a:	xor    eax,DWORD PTR [rax]
   14001c48c:	add    BYTE PTR [rcx],cl
   14001c48e:	mov    DWORD PTR [rax],0xb0711
   14001c494:	add    BYTE PTR [rax],cl
   14001c496:	movsxd eax,DWORD PTR [rax]
   14001c498:	add    BYTE PTR [rax],cl
   14001c49a:	and    eax,DWORD PTR [rax]
   14001c49c:	add    BYTE PTR [rcx],cl
   14001c49e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001c49f:	add    BYTE PTR [rax],al
   14001c4a1:	or     BYTE PTR [rbx],al
   14001c4a3:	add    BYTE PTR [rax],al
   14001c4a5:	or     BYTE PTR [rbx+0x43080000],al
   14001c4ab:	add    BYTE PTR [rax],al
   14001c4ad:	or     edi,esp
   14001c4af:	add    BYTE PTR [rax],dl
   14001c4b1:	(bad)  
   14001c4b2:	(bad)  
   14001c4b3:	add    BYTE PTR [rax],al
   14001c4b5:	or     BYTE PTR [rbx+0x0],bl
   14001c4b8:	add    BYTE PTR [rax],cl
   14001c4ba:	sbb    eax,DWORD PTR [rax]
   14001c4bc:	add    BYTE PTR [rcx],cl
   14001c4be:	xchg   edi,eax
   14001c4bf:	add    BYTE PTR [rdi+rax*1],dl
   14001c4c2:	rex.XB add BYTE PTR [r8],al
   14001c4c5:	or     BYTE PTR [rbx+0x0],bh
   14001c4c8:	add    BYTE PTR [rax],cl
   14001c4ca:	cmp    eax,DWORD PTR [rax]
   14001c4cc:	add    BYTE PTR [rcx],cl
   14001c4ce:	xlat   BYTE PTR ds:[rbx]
   14001c4cf:	add    BYTE PTR [rdx],dl
   14001c4d1:	(bad)  
   14001c4d2:	adc    eax,DWORD PTR [rax]
   14001c4d4:	add    BYTE PTR [rax],cl
   14001c4d6:	imul   eax,DWORD PTR [rax],0x0
   14001c4d9:	or     BYTE PTR [rbx],ch
   14001c4db:	add    BYTE PTR [rax],al
   14001c4dd:	or     DWORD PTR [rdi+0xb080000],esi
   14001c4e3:	add    BYTE PTR [rax],al
   14001c4e5:	or     BYTE PTR [rbx+0x4b080000],cl
   14001c4eb:	add    BYTE PTR [rax],al
   14001c4ed:	or     edi,esi
   14001c4ef:	add    BYTE PTR [rax],dl
   14001c4f1:	(bad)  
   14001c4f2:	add    eax,0x57080000
   14001c4f7:	add    BYTE PTR [rax],al
   14001c4f9:	or     BYTE PTR [rdi],dl
   14001c4fb:	add    BYTE PTR [rax+0x8],al
   14001c4fe:	add    BYTE PTR [rax],al
   14001c500:	adc    eax,DWORD PTR [rdi]
   14001c502:	xor    eax,DWORD PTR [rax]
   14001c504:	add    BYTE PTR [rax],cl
   14001c506:	ja     0x14001c508
   14001c508:	add    BYTE PTR [rax],cl
   14001c50a:	(bad)  
   14001c50b:	add    BYTE PTR [rax],al
   14001c50d:	or     edi,ecx
   14001c50f:	add    BYTE PTR [rcx],dl
   14001c511:	(bad)  
   14001c512:	sldt   WORD PTR [rax]
   14001c515:	or     BYTE PTR [rdi+0x0],ah
   14001c518:	add    BYTE PTR [rax],cl
   14001c51a:	(bad)  
   14001c51b:	add    BYTE PTR [rax],al
   14001c51d:	or     DWORD PTR [rdi+0x7080000],ebp
   14001c523:	add    BYTE PTR [rax],al
   14001c525:	or     BYTE PTR [rdi+0x47080000],al
   14001c52b:	add    BYTE PTR [rax],al
   14001c52d:	or     edi,ebp
   14001c52f:	add    BYTE PTR [rax],dl
   14001c531:	(bad)  
   14001c532:	or     DWORD PTR [rax],eax
   14001c534:	add    BYTE PTR [rax],cl
   14001c536:	pop    rdi
   14001c537:	add    BYTE PTR [rax],al
   14001c539:	or     BYTE PTR [rdi],bl
   14001c53b:	add    BYTE PTR [rax],al
   14001c53d:	or     DWORD PTR [rdi+0x63071400],ebx
   14001c543:	add    BYTE PTR [rax],al
   14001c545:	or     BYTE PTR [rdi+0x0],bh
   14001c548:	add    BYTE PTR [rax],cl
   14001c54a:	(bad)  
   14001c54b:	add    BYTE PTR [rax],al
   14001c54d:	or     edi,ebx
   14001c54f:	add    BYTE PTR [rdx],dl
   14001c551:	(bad)  
   14001c552:	sbb    eax,DWORD PTR [rax]
   14001c554:	add    BYTE PTR [rax],cl
   14001c556:	outs   dx,DWORD PTR ds:[rsi]
   14001c557:	add    BYTE PTR [rax],al
   14001c559:	or     BYTE PTR [rdi],ch
   14001c55b:	add    BYTE PTR [rax],al
   14001c55d:	or     DWORD PTR [rdi+0xf080000],edi
   14001c563:	add    BYTE PTR [rax],al
   14001c565:	or     BYTE PTR [rdi+0x4f080000],cl
   14001c56b:	add    BYTE PTR [rax],al
   14001c56d:	or     edi,edi
   14001c56f:	add    BYTE PTR [rax],dl
   14001c571:	add    eax,0x5170001
   14001c576:	add    DWORD PTR [rcx],eax
   14001c578:	adc    eax,DWORD PTR [rip+0x51b0011]        # 0x1451cc58f
   14001c57e:	add    DWORD PTR [rax],edx
   14001c580:	adc    DWORD PTR [rip+0x5190005],eax        # 0x1451ac58b
   14001c586:	add    DWORD PTR [rdx*1+0x1d004105],eax
   14001c58d:	add    eax,0x5104001
   14001c592:	add    eax,DWORD PTR [rax]
   14001c594:	sbb    BYTE PTR [rip+0x5140201],al        # 0x14515c79b
   14001c59a:	and    DWORD PTR [rax],eax
   14001c59c:	sbb    al,0x5
   14001c59e:	add    DWORD PTR [rax],esp
   14001c5a0:	adc    al,BYTE PTR [rip+0x51a0009]        # 0x1451bc5af
   14001c5a6:	add    DWORD PTR [rax],ecx
   14001c5a8:	(bad)  
   14001c5a9:	add    eax,0x5400081
   14001c5ae:	add    BYTE PTR [rax],al
   14001c5b0:	adc    BYTE PTR [rip+0x5170002],al        # 0x14518c5b8
   14001c5b6:	add    DWORD PTR [rcx],0x190513
   14001c5bc:	sbb    eax,DWORD PTR [rip+0x5111801]        # 0x14512ddc3
   14001c5c2:	(bad)  
   14001c5c3:	add    BYTE PTR [rcx],bl
   14001c5c5:	add    eax,0x5150601
   14001c5ca:	(bad)  
   14001c5cb:	add    BYTE PTR [rip+0x10600105],bl        # 0x15061c6d6
   14001c5d1:	add    eax,0x5180004
   14001c5d6:	add    DWORD PTR [rbx],eax
   14001c5d8:	adc    al,0x5
   14001c5da:	xor    DWORD PTR [rax],eax
   14001c5dc:	sbb    al,0x5
   14001c5de:	add    DWORD PTR [rax],esi
   14001c5e0:	adc    al,BYTE PTR [rip+0x51a000d]        # 0x1451bc5f3
   14001c5e6:	add    DWORD PTR [rsi+rdx*1],ecx
   14001c5e9:	add    eax,0x54000c1
   14001c5ee:	add    BYTE PTR [rax],al
   14001c5f0:	adc    BYTE PTR [rax],al
   14001c5f2:	adc    DWORD PTR [rax],eax
   14001c5f4:	adc    al,BYTE PTR [rax]
   14001c5f6:	add    BYTE PTR [rax],al
   14001c5f8:	or     BYTE PTR [rax],al
   14001c5fa:	(bad)  
   14001c5fb:	add    BYTE PTR [rcx],cl
   14001c5fd:	add    BYTE PTR [rsi],al
   14001c5ff:	add    BYTE PTR [rdx],cl
   14001c601:	add    BYTE PTR [rip+0x4000b00],al        # 0x14401d107
   14001c607:	add    BYTE PTR [rax+rax*1],cl
   14001c60a:	add    eax,DWORD PTR [rax]
   14001c60c:	or     eax,0xe000200
   14001c611:	add    BYTE PTR [rcx],al
   14001c613:	add    BYTE PTR [rdi],cl
   14001c615:	add    BYTE PTR [rax],al
   14001c617:	add    BYTE PTR [rcx+0x6e],ch
   14001c61a:	movsxd ebp,DWORD PTR [rdi+0x72]
   14001c61d:	jb     0x14001c684
   14001c61f:	movsxd esi,DWORD PTR [rax+riz*1+0x6c]
   14001c623:	outs   dx,BYTE PTR gs:[rsi]
   14001c625:	addr32 je 0x14001c690
   14001c628:	and    BYTE PTR [rbx+0x68],ah
   14001c62b:	movsxd ebp,DWORD PTR gs:[rbx+0x0]
   14001c62f:	add    BYTE PTR [rcx+0x6e],ch
   14001c632:	movsxd ebp,DWORD PTR [rdi+0x72]
   14001c635:	jb     0x14001c69c
   14001c637:	movsxd esi,DWORD PTR [rax+riz*1+0x64]
   14001c63b:	(bad)  
   14001c63c:	je     0x14001c69f
   14001c63e:	and    BYTE PTR [rbx+0x68],ah
   14001c641:	movsxd ebp,DWORD PTR gs:[rbx+0x0]
   14001c645:	add    BYTE PTR [rax],al
   14001c647:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   14001c64b:	and    BYTE PTR [rbp+0x61],ch
   14001c64e:	outs   dx,BYTE PTR ds:[rsi]
   14001c64f:	jns    0x14001c671
   14001c651:	ins    BYTE PTR es:[rdi],dx
   14001c652:	outs   dx,BYTE PTR gs:[rsi]
   14001c654:	addr32 je 0x14001c6bf
   14001c657:	and    BYTE PTR [rdi+0x72],ch
   14001c65a:	and    BYTE PTR [rcx+rbp*2+0x73],ah
   14001c65e:	je     0x14001c6c1
   14001c660:	outs   dx,BYTE PTR ds:[rsi]
   14001c661:	movsxd esp,DWORD PTR [rbp+0x20]
   14001c664:	jae    0x14001c6df
   14001c666:	ins    DWORD PTR es:[rdi],dx
   14001c667:	(bad)  
   14001c668:	outs   dx,DWORD PTR ds:[rsi]
   14001c669:	ins    BYTE PTR es:[rdi],dx
   14001c66a:	jae    0x14001c66c
   14001c66c:	add    BYTE PTR [rax],al
   14001c66e:	add    BYTE PTR [rax],al
   14001c670:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14001c677:	and    BYTE PTR [rcx+rbp*2+0x73],ah
   14001c67b:	je     0x14001c6de
   14001c67d:	outs   dx,BYTE PTR ds:[rsi]
   14001c67e:	movsxd esp,DWORD PTR [rbp+0x20]
   14001c681:	je     0x14001c6f2
   14001c683:	outs   dx,DWORD PTR ds:[rsi]
   14001c684:	and    BYTE PTR [rsi+0x61],ah
   14001c687:	jb     0x14001c6a9
   14001c689:	(bad)  
   14001c68b:	movsxd ebp,DWORD PTR [rbx+0x0]
   14001c68e:	add    BYTE PTR [rax],al
   14001c690:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14001c697:	and    BYTE PTR [rcx+rbp*2+0x73],ah
   14001c69b:	je     0x14001c6fe
   14001c69d:	outs   dx,BYTE PTR ds:[rsi]
   14001c69e:	movsxd esp,DWORD PTR [rbp+0x20]
   14001c6a1:	movsxd ebp,DWORD PTR [rdi+0x64]
   14001c6a4:	add    BYTE PTR gs:[rax],al
   14001c6a7:	add    BYTE PTR [rcx+0x6e],ch
   14001c6aa:	jbe    0x14001c70d
   14001c6ac:	ins    BYTE PTR es:[rdi],dx
   14001c6ad:	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x72657469
   14001c6b5:	(bad)  
   14001c6b6:	ins    BYTE PTR es:[rdi],dx
   14001c6b7:	(bad)  
   14001c6b8:	ins    BYTE PTR es:[rdi],dx
   14001c6b9:	outs   dx,BYTE PTR gs:[rsi]
   14001c6bb:	addr32 je 0x14001c726
   14001c6be:	and    BYTE PTR [rbx+0x6f],ah
   14001c6c1:	fs add BYTE PTR gs:[rax],al
   14001c6c5:	add    BYTE PTR [rax],al
   14001c6c7:	add    BYTE PTR [rcx+0x6e],ch
   14001c6ca:	jbe    0x14001c72d
   14001c6cc:	ins    BYTE PTR es:[rdi],dx
   14001c6cd:	imul   esp,DWORD PTR [rax+riz*1+0x64],0x61747369
   14001c6d5:	outs   dx,BYTE PTR ds:[rsi]
   14001c6d6:	movsxd esp,DWORD PTR [rbp+0x73]
   14001c6d9:	and    BYTE PTR [rbx+0x65],dh
   14001c6dc:	je     0x14001c6de
   14001c6de:	add    BYTE PTR [rax],al
   14001c6e0:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14001c6e7:	and    BYTE PTR [rcx+rbp*2+0x74],ch
   14001c6eb:	gs jb  0x14001c74f
   14001c6ee:	ins    BYTE PTR es:[rdi],dx
   14001c6ef:	(bad)  
   14001c6f0:	ins    BYTE PTR es:[rdi],dx
   14001c6f1:	outs   dx,BYTE PTR gs:[rsi]
   14001c6f3:	addr32 je 0x14001c75e
   14001c6f6:	jae    0x14001c718
   14001c6f8:	jae    0x14001c75f
   14001c6fa:	je     0x14001c6fc
   14001c6fc:	add    BYTE PTR [rax],al
   14001c6fe:	add    BYTE PTR [rax],al
   14001c700:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14001c707:	and    BYTE PTR [rdx+0x69],ah
   14001c70a:	je     0x14001c72c
   14001c70c:	ins    BYTE PTR es:[rdi],dx
   14001c70d:	outs   dx,BYTE PTR gs:[rsi]
   14001c70f:	addr32 je 0x14001c77a
   14001c712:	and    BYTE PTR [rdx+0x65],dh
   14001c715:	jo     0x14001c77c
   14001c717:	(bad)  
   14001c718:	je     0x14001c71a
   14001c71a:	add    BYTE PTR [rax],al
   14001c71c:	add    BYTE PTR [rax],al
   14001c71e:	add    BYTE PTR [rax],al
   14001c720:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14001c727:	and    BYTE PTR [rbx+0x6f],ah
   14001c72a:	fs and BYTE PTR gs:[rbp+riz*2+0x6e],ch
   14001c730:	addr32 je 0x14001c79b
   14001c733:	jae    0x14001c755
   14001c735:	jae    0x14001c79c
   14001c737:	je     0x14001c739
   14001c739:	add    BYTE PTR [rax],al
   14001c73b:	add    BYTE PTR [rax],al
   14001c73d:	add    BYTE PTR [rax],al
   14001c73f:	add    BYTE PTR [rax+0x65],ch
   14001c742:	(bad)  
   14001c743:	fs gs jb 0x14001c767
   14001c747:	movsxd esi,DWORD PTR [rdx+0x63]
   14001c74a:	and    BYTE PTR [rbp+0x69],ch
   14001c74d:	jae    0x14001c7bc
   14001c74f:	(bad)  
   14001c750:	je     0x14001c7b5
   14001c752:	push   0x0
   14001c757:	add    BYTE PTR [rcx+0x6e],ch
   14001c75a:	jbe    0x14001c7bd
   14001c75c:	ins    BYTE PTR es:[rdi],dx
   14001c75d:	imul   esp,DWORD PTR [rax+riz*1+0x62],0x6b636f6c
   14001c765:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14001c769:	add    BYTE PTR gs:[rax],al
   14001c76c:	add    BYTE PTR [rax],al
   14001c76e:	add    BYTE PTR [rax],al
   14001c770:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14001c777:	and    BYTE PTR [rbx+0x74],dh
   14001c77a:	outs   dx,DWORD PTR ds:[rsi]
   14001c77b:	jb     0x14001c7e2
   14001c77d:	and    BYTE PTR fs:[rdx+0x6c],ah
   14001c781:	outs   dx,DWORD PTR ds:[rsi]
   14001c782:	movsxd ebp,DWORD PTR [rbx+0x20]
   14001c785:	ins    BYTE PTR es:[rdi],dx
   14001c786:	outs   dx,BYTE PTR gs:[rsi]
   14001c788:	addr32 je 0x14001c7f3
   14001c78b:	jae    0x14001c78d
   14001c78d:	add    BYTE PTR [rax],al
   14001c78f:	add    BYTE PTR [rcx+0x6e],ch
   14001c792:	movsxd ebp,DWORD PTR [rdi+0x72]
   14001c795:	jb     0x14001c7fc
   14001c797:	movsxd esi,DWORD PTR [rax+riz*1+0x68]
   14001c79b:	gs (bad) 
   14001c79d:	fs gs jb 0x14001c7c1
   14001c7a1:	movsxd ebp,DWORD PTR [rax+0x65]
   14001c7a4:	movsxd ebp,DWORD PTR [rbx+0x0]
   14001c7a7:	add    BYTE PTR [rcx+0x6e],ch
   14001c7aa:	jbe    0x14001c80d
   14001c7ac:	ins    BYTE PTR es:[rdi],dx
   14001c7ad:	imul   esp,DWORD PTR [rax+riz*1+0x77],0x6f646e69
   14001c7b5:	ja     0x14001c7d7
   14001c7b7:	jae    0x14001c822
   14001c7b9:	jp     0x14001c820
   14001c7bb:	add    BYTE PTR [rax],al
   14001c7bd:	add    BYTE PTR [rax],al
   14001c7bf:	add    BYTE PTR [rbp+0x6e],dh
   14001c7c2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14001c7c6:	outs   dx,BYTE PTR ds:[rsi]
   14001c7c7:	and    BYTE PTR [rax+0x65],ch
   14001c7ca:	(bad)  
   14001c7cb:	fs gs jb 0x14001c7ef
   14001c7cf:	data16 ins BYTE PTR es:[rdi],dx
   14001c7d1:	(bad)  
   14001c7d2:	addr32 jae 0x14001c7f5
   14001c7d5:	jae    0x14001c83c
   14001c7d7:	je     0x14001c7d9
   14001c7d9:	add    BYTE PTR [rax],al
   14001c7db:	add    BYTE PTR [rax],al
   14001c7dd:	add    BYTE PTR [rax],al
   14001c7df:	add    BYTE PTR [rbp+0x6e],dh
   14001c7e2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14001c7e6:	outs   dx,BYTE PTR ds:[rsi]
   14001c7e7:	and    BYTE PTR [rbx+0x6f],ah
   14001c7ea:	ins    DWORD PTR es:[rdi],dx
   14001c7eb:	jo     0x14001c85f
   14001c7ed:	gs jae 0x14001c863
   14001c7f0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656d20
   14001c7f7:	push   0x646f
   14001c7fc:	add    BYTE PTR [rax],al
   14001c7fe:	add    BYTE PTR [rax],al
   14001c800:	imul   ebp,DWORD PTR [rsi+0x63],0x61706d6f
   14001c807:	je     0x14001c872
   14001c809:	(bad)  
   14001c80a:	ins    BYTE PTR es:[rdi],dx
   14001c80b:	and    BYTE PTR gs:[rsi+0x65],dh
   14001c80f:	jb     0x14001c884
   14001c811:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14001c818:	(bad)  
   14001c819:	jne    0x14001c881
   14001c81b:	data16 gs jb 0x14001c83f
   14001c81f:	gs jb  0x14001c894
   14001c822:	outs   dx,DWORD PTR ds:[rsi]
   14001c823:	jb     0x14001c825
   14001c825:	add    BYTE PTR [rax],al
   14001c827:	add    BYTE PTR [rcx+0x6e],ch
   14001c82a:	jae    0x14001c8a1
   14001c82c:	data16 imul sp,WORD PTR [rbx+0x69],0x6e65
   14001c833:	je     0x14001c855
   14001c835:	ins    DWORD PTR es:[rdi],dx
   14001c836:	gs ins DWORD PTR es:[rdi],dx
   14001c838:	outs   dx,DWORD PTR ds:[rsi]
   14001c839:	jb     0x14001c8b4
   14001c83b:	add    BYTE PTR [rax],al
   14001c83d:	add    BYTE PTR [rax],al
   14001c83f:	add    BYTE PTR [rcx+riz*2+0x74],ah
   14001c843:	(bad)  
   14001c844:	and    BYTE PTR [rbp+0x72],ah
   14001c847:	jb     0x14001c8b8
   14001c849:	jb     0x14001c84b
   14001c84b:	add    BYTE PTR [rax],al
   14001c84d:	add    BYTE PTR [rax],al
   14001c84f:	add    BYTE PTR [rbx+0x74],dh
   14001c852:	jb     0x14001c8b9
   14001c854:	(bad)  
   14001c855:	ins    DWORD PTR es:[rdi],dx
   14001c856:	and    BYTE PTR [rbp+0x72],ah
   14001c859:	jb     0x14001c8ca
   14001c85b:	jb     0x14001c85d
   14001c85d:	add    BYTE PTR [rax],al
   14001c85f:	add    BYTE PTR [rsi+0x69],ah
   14001c862:	ins    BYTE PTR es:[rdi],dx
   14001c863:	and    BYTE PTR gs:[rbp+0x72],ah
   14001c867:	jb     0x14001c8d8
   14001c869:	jb     0x14001c86b
   14001c86b:	add    BYTE PTR [rax],al
   14001c86d:	add    BYTE PTR [rax],al
   14001c86f:	add    BYTE PTR [rbx+0x74],dh
   14001c872:	jb     0x14001c8d9
   14001c874:	(bad)  
   14001c875:	ins    DWORD PTR es:[rdi],dx
   14001c876:	and    BYTE PTR [rbp+0x6e],ah
   14001c879:	add    BYTE PTR fs:[rax],al
   14001c87c:	add    BYTE PTR [rax],al
   14001c87e:	add    BYTE PTR [rax],al
   14001c880:	outs   dx,BYTE PTR ds:[rsi]
   14001c881:	gs gs and BYTE PTR fs:[rcx+rbp*2+0x63],ah
   14001c888:	je     0x14001c8f3
   14001c88a:	outs   dx,DWORD PTR ds:[rsi]
   14001c88b:	outs   dx,BYTE PTR ds:[rsi]
   14001c88c:	(bad)  
   14001c88d:	jb     0x14001c908
   14001c88f:	add    BYTE PTR [rax+0x14001c8],al
   14001c895:	add    BYTE PTR [rax],al
   14001c897:	add    BYTE PTR [rax-0x38],dh
   14001c89a:	add    DWORD PTR [rax+0x1],eax
   14001c89d:	add    BYTE PTR [rax],al
   14001c89f:	add    BYTE PTR [rbx+0x14001b4],dl
   14001c8a5:	add    BYTE PTR [rax],al
   14001c8a7:	add    BYTE PTR [rax-0x38],ah
   14001c8aa:	add    DWORD PTR [rax+0x1],eax
   14001c8ad:	add    BYTE PTR [rax],al
   14001c8af:	add    BYTE PTR [rax-0x38],dl
   14001c8b2:	add    DWORD PTR [rax+0x1],eax
   14001c8b5:	add    BYTE PTR [rax],al
   14001c8b7:	add    BYTE PTR [rax-0x38],al
   14001c8ba:	add    DWORD PTR [rax+0x1],eax
   14001c8bd:	add    BYTE PTR [rax],al
   14001c8bf:	add    BYTE PTR [rax],ch
   14001c8c1:	enter  0x4001,0x1
   14001c8c5:	add    BYTE PTR [rax],al
   14001c8c7:	add    BYTE PTR [rax],bl
   14001c8c9:	enter  0x4001,0x1
   14001c8cd:	add    BYTE PTR [rax],al
   14001c8cf:	add    BYTE PTR [rax],al
   14001c8d1:	enter  0x4001,0x1
   14001c8d5:	add    BYTE PTR [rax],al
   14001c8d7:	add    BYTE PTR [rbx+0x14001b4],dl
   14001c8dd:	add    BYTE PTR [rax],al
   14001c8df:	add    BYTE PTR [rax],ah
   14001c8e1:	imul   ebp,DWORD PTR [rsi+0x66],0x6574616c
   14001c8e8:	and    BYTE PTR [rcx],dh
   14001c8ea:	xor    ch,BYTE PTR cs:[rsi]
   14001c8ed:	xor    esp,DWORD PTR [rax]
   14001c8ef:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001c8f1:	jo     0x14001c96c
   14001c8f3:	jb     0x14001c95e
   14001c8f5:	addr32 push 0x39312074
   14001c8fb:	cmp    DWORD PTR [rip+0x3030322d],esi        # 0x17031fb2e
   14001c901:	xor    eax,0x72614d20
   14001c906:	imul   esp,DWORD PTR [rax],0x41
   14001c909:	fs ins BYTE PTR es:[rdi],dx
   14001c90b:	gs jb  0x14001c92e
   14001c90e:	add    BYTE PTR [rax],al
   14001c910:	add    eax,DWORD PTR [rax]
   14001c912:	add    al,0x0
   14001c914:	add    eax,0x7000600
   14001c919:	add    BYTE PTR [rax],cl
   14001c91b:	add    BYTE PTR [rcx],cl
   14001c91d:	add    BYTE PTR [rdx],cl
   14001c91f:	add    BYTE PTR [rbx],cl
   14001c921:	add    BYTE PTR [rip+0x11000f00],cl        # 0x15101d827
   14001c927:	add    BYTE PTR [rbx],dl
   14001c929:	add    BYTE PTR [rdi],dl
   14001c92b:	add    BYTE PTR [rbx],bl
   14001c92d:	add    BYTE PTR [rdi],bl
   14001c92f:	add    BYTE PTR [rbx],ah
   14001c931:	add    BYTE PTR [rbx],ch
   14001c933:	add    BYTE PTR [rbx],dh
   14001c935:	add    BYTE PTR [rbx],bh
   14001c937:	add    BYTE PTR [rbx+0x0],al
   14001c93a:	push   rbx
   14001c93b:	add    BYTE PTR [rbx+0x0],ah
   14001c93e:	jae    0x14001c940
   14001c940:	add    DWORD PTR [rax],0xffffffa3
   14001c943:	add    bl,al
   14001c945:	add    bl,ah
   14001c947:	add    BYTE PTR [rdx],al
   14001c949:	add    DWORD PTR [rax],eax
   14001c94b:	add    BYTE PTR [rax],al
   14001c94d:	add    BYTE PTR [rax],al
   14001c94f:	add    BYTE PTR [rax],dl
   14001c951:	add    BYTE PTR [rax],dl
   14001c953:	add    BYTE PTR [rax],dl
   14001c955:	add    BYTE PTR [rax],dl
   14001c957:	add    BYTE PTR [rax],dl
   14001c959:	add    BYTE PTR [rax],dl
   14001c95b:	add    BYTE PTR [rax],dl
   14001c95d:	add    BYTE PTR [rax],dl
   14001c95f:	add    BYTE PTR [rcx],dl
   14001c961:	add    BYTE PTR [rcx],dl
   14001c963:	add    BYTE PTR [rcx],dl
   14001c965:	add    BYTE PTR [rcx],dl
   14001c967:	add    BYTE PTR [rdx],dl
   14001c969:	add    BYTE PTR [rdx],dl
   14001c96b:	add    BYTE PTR [rdx],dl
   14001c96d:	add    BYTE PTR [rdx],dl
   14001c96f:	add    BYTE PTR [rbx],dl
   14001c971:	add    BYTE PTR [rbx],dl
   14001c973:	add    BYTE PTR [rbx],dl
   14001c975:	add    BYTE PTR [rbx],dl
   14001c977:	add    BYTE PTR [rax+rax*1],dl
   14001c97a:	adc    al,0x0
   14001c97c:	adc    al,0x0
   14001c97e:	adc    al,0x0
   14001c980:	adc    eax,0x15001500
   14001c985:	add    BYTE PTR [rip+0xffffffffc9001000],dl        # 0x10901d98b
   14001c98b:	add    ah,al
   14001c98d:	add    BYTE PTR [rax],al
   14001c98f:	add    BYTE PTR [rcx],al
   14001c991:	add    BYTE PTR [rdx],al
   14001c993:	add    BYTE PTR [rbx],al
   14001c995:	add    BYTE PTR [rax+rax*1],al
   14001c998:	add    eax,0x9000700
   14001c99d:	add    BYTE PTR [rip+0x19001100],cl        # 0x15901daa3
   14001c9a3:	add    BYTE PTR [rcx],ah
   14001c9a5:	add    BYTE PTR [rcx],dh
   14001c9a7:	add    BYTE PTR [rcx+0x0],al
   14001c9aa:	(bad)  
   14001c9ab:	add    BYTE PTR [rcx+0x100c100],al
   14001c9b1:	add    DWORD PTR [rcx+0x1020101],eax
   14001c9b7:	add    eax,DWORD PTR [rcx]
   14001c9b9:	add    al,0x1
   14001c9bb:	(bad)  
   14001c9bc:	add    DWORD PTR [rax],ecx
   14001c9be:	add    DWORD PTR [rcx+rax*1],ecx
   14001c9c1:	adc    BYTE PTR [rcx],al
   14001c9c3:	sbb    BYTE PTR [rcx],al
   14001c9c5:	and    BYTE PTR [rcx],al
   14001c9c7:	xor    BYTE PTR [rcx],al
   14001c9c9:	rex add DWORD PTR [rax+0x0],esp
   14001c9cd:	add    BYTE PTR [rax],al
   14001c9cf:	add    BYTE PTR [rax],dl
   14001c9d1:	add    BYTE PTR [rax],dl
   14001c9d3:	add    BYTE PTR [rax],dl
   14001c9d5:	add    BYTE PTR [rax],dl
   14001c9d7:	add    BYTE PTR [rcx],dl
   14001c9d9:	add    BYTE PTR [rcx],dl
   14001c9db:	add    BYTE PTR [rdx],dl
   14001c9dd:	add    BYTE PTR [rdx],dl
   14001c9df:	add    BYTE PTR [rbx],dl
   14001c9e1:	add    BYTE PTR [rbx],dl
   14001c9e3:	add    BYTE PTR [rax+rax*1],dl
   14001c9e6:	adc    al,0x0
   14001c9e8:	adc    eax,0x16001500
   14001c9ed:	add    BYTE PTR [rsi],dl
   14001c9ef:	add    BYTE PTR [rdi],dl
   14001c9f1:	add    BYTE PTR [rdi],dl
   14001c9f3:	add    BYTE PTR [rax],bl
   14001c9f5:	add    BYTE PTR [rax],bl
   14001c9f7:	add    BYTE PTR [rcx],bl
   14001c9f9:	add    BYTE PTR [rcx],bl
   14001c9fb:	add    BYTE PTR [rdx],bl
   14001c9fd:	add    BYTE PTR [rdx],bl
   14001c9ff:	add    BYTE PTR [rbx],bl
   14001ca01:	add    BYTE PTR [rbx],bl
   14001ca03:	add    BYTE PTR [rax+rax*1],bl
   14001ca06:	sbb    al,0x0
   14001ca08:	sbb    eax,0x40001d00
   14001ca0d:	add    BYTE PTR [rax+0x0],al
   14001ca10:	add    BYTE PTR [rax],al
   14001ca12:	add    BYTE PTR [rax],al
   14001ca14:	xchg   esi,eax
   14001ca15:	xor    BYTE PTR [rdi],al
   14001ca17:	ja     0x14001ca45
   14001ca19:	(bad)  
   14001ca1a:	(bad)  
   14001ca1b:	out    dx,al
   14001ca1c:	mov    edx,0x19990951
   14001ca21:	(bad)  
   14001ca22:	ins    DWORD PTR es:[rdi],dx
   14001ca23:	(bad)  
   14001ca24:	(bad)  
   14001ca25:	hlt    
   14001ca26:	push   0x70
   14001ca28:	xor    eax,0xa3e963a5
   14001ca2d:	xchg   ebp,eax
   14001ca2e:	fs sahf 
   14001ca30:	xor    cl,BYTE PTR [rax-0x475bf125]
   14001ca36:	fdivr  QWORD PTR [rcx+0x1e]
   14001ca39:	jmp    0x1198aab13
   14001ca3e:	rcl    BYTE PTR [rdi+0x9b64c2b],cl
   14001ca44:	mov    ebp,0x77eb17c
   14001ca49:	sub    eax,0x1d91e7b8
   14001ca4e:	mov    edi,0xb7106490
   14001ca53:	sbb    eax,0x6ab020f2
   14001ca58:	rex.W jno 0x14001ca14
   14001ca5b:	repz fiadd WORD PTR [rcx-0x42]
   14001ca5f:	test   BYTE PTR [rbp-0x2c],bh
   14001ca62:	ficomp DWORD PTR [rdx]
   14001ca64:	jmp    0x14001ca4a
   14001ca66:	(bad)  [rbp+0x51]
   14001ca69:	mov    ch,0xd4
   14001ca6b:	hlt    
   14001ca6c:	mov    DWORD PTR [rbp-0x67a97c2d],0xa8c0136c
   14001ca76:	imul   esp,DWORD PTR [rdx+rdi*2-0x7],0x62
   14001ca7b:	std    
   14001ca7c:	in     al,dx
   14001ca7d:	leave  
   14001ca7e:	mov    cl,BYTE PTR gs:[rdi+0x5c]
   14001ca82:	add    DWORD PTR [rcx+rbx*8],edx
   14001ca85:	ins    BYTE PTR es:[rdi],dx
   14001ca86:	(bad)  
   14001ca87:	movsxd esp,DWORD PTR [rbx+0x3d]
   14001ca8a:	psubd  mm6,mm5
   14001ca8d:	or     eax,0x20c88d08
   14001ca92:	outs   dx,BYTE PTR ds:[rsi]
   14001ca93:	cmp    ebx,DWORD PTR [rsi+0x10]
   14001ca96:	imul   ecx,DWORD PTR [rsp+riz*8+0x41],0x7172d560
   14001ca9e:	addr32 mov ds:0x3c03e4d1,al
   14001caa4:	rex.RXB (bad) 
   14001caa6:	add    al,0x4b
   14001caa8:	std    
   14001caa9:	test   DWORD PTR [rip+0xab56bd2],ecx        # 0x14ab73681
   14001caaf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001cab0:	cli    
   14001cab1:	test   al,0xb5
   14001cab3:	xor    eax,0x42b2986c
   14001cab8:	(bad)  
   14001cab9:	leave  
   14001caba:	mov    ebx,0xbcf940db
   14001cabf:	lods   al,BYTE PTR ds:[rsi]
   14001cac0:	jrcxz  0x14001cb2e
   14001cac2:	fdiv   DWORD PTR [rdx]
   14001cac4:	jne    0x14001cb22
   14001cac6:	fild   WORD PTR [rbp-0x31]
   14001cac9:	or     eax,0x3d59dcd6
   14001cace:	shr    DWORD PTR [rbx+0x26d930ac],1
   14001cad4:	cmp    al,BYTE PTR [rax]
   14001cad6:	ficom  WORD PTR [rcx-0x80]
   14001cad9:	push   rcx
   14001cada:	xlat   BYTE PTR ds:[rbx]
   14001cadb:	enter  0x6116,0xd0
   14001cadf:	mov    edi,0x21b4f4b5
   14001cae4:	and    eax,esp
   14001cae6:	mov    bl,0x56
   14001cae8:	cdq    
   14001cae9:	xchg   ebp,eax
   14001caea:	mov    edx,0xbda50fcf
   14001caef:	mov    eax,0x2802b89e
   14001caf4:	or     BYTE PTR [rax-0x264da0fb],cl
   14001cafa:	or     al,0xc6
   14001cafc:	and    al,0xe9
   14001cafe:	or     esi,DWORD PTR [rcx+0x2f6f7c87]
   14001cb04:	adc    DWORD PTR [rax+rbp*2+0x58],ecx
   14001cb08:	stos   DWORD PTR es:[rdi],eax
   14001cb09:	sbb    eax,0x2d3dc161
   14001cb0e:	data16 mov dh,0x90
   14001cb11:	fdiv   QWORD PTR [r14+0x6]
   14001cb15:	jno    0x14001caf2
   14001cb17:	add    DWORD PTR [rax+riz*1+0x102a98d2],edi
   14001cb1e:	(bad)  
   14001cb1f:	out    dx,eax
   14001cb20:	mov    DWORD PTR [rbp-0x4ae08e4f],eax
   14001cb26:	mov    dh,0x6
   14001cb28:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001cb29:	in     al,0xbf
   14001cb2b:	lahf   
   14001cb2c:	xor    edx,esp
   14001cb2e:	mov    eax,0x7c9a2e8
   14001cb33:	js     0x14001cb69
   14001cb35:	stc    
   14001cb36:	add    BYTE PTR [rdi],cl
   14001cb38:	mov    gs,WORD PTR [rax-0x67e769f7]
   14001cb3e:	(bad)  
   14001cb3f:	loope  0x14001cafc
   14001cb41:	or     eax,0x3d2d7f6a
   14001cb46:	ins    DWORD PTR es:[rdi],dx
   14001cb47:	or     BYTE PTR [rdi+0x191646c],dl
   14001cb4d:	pop    rsp
   14001cb4e:	movsxd esp,esi
   14001cb50:	hlt    
   14001cb51:	push   rcx
   14001cb52:	imul   ebp,DWORD PTR [rbx+0x62],0x61
   14001cb56:	ins    BYTE PTR es:[rdi],dx
   14001cb57:	sbb    al,0xd8
   14001cb59:	xor    BYTE PTR [rbp-0x7b],ah
   14001cb5c:	rex.WRX add BYTE PTR [rdx-0xe],r12b
   14001cb60:	in     eax,dx
   14001cb61:	xchg   ebp,eax
   14001cb62:	(bad)  
   14001cb63:	ins    BYTE PTR es:[rdi],dx
   14001cb64:	jnp    0x14001cb0b
   14001cb66:	add    DWORD PTR [rbx],ebx
   14001cb68:	shl    esp,0x8
   14001cb6b:	(bad)  
   14001cb6c:	push   rdi
   14001cb6d:	(bad)  
   14001cb6e:	pmaddwd mm0,mm6
   14001cb71:	fnstenv [rax-0x4816af9b]
   14001cb77:	adc    ch,dl
   14001cb79:	mov    eax,0x887c8bbe
   14001cb7e:	mov    ecx,0xdd1ddffc
   14001cb83:	(bad)  
   14001cb84:	rex.WB sub rax,0x7cf315da
   14001cb8a:	ror    DWORD PTR [rbp+riz*2+0x58fbd44c],cl
   14001cb91:	(bad)  
   14001cb92:	mov    dl,0x4d
   14001cb94:	(bad)  
   14001cb95:	push   rcx
   14001cb96:	mov    ch,0x3a
   14001cb98:	je     0x14001cb9a
   14001cb9a:	mov    esp,0xbb30e2a3
   14001cb9f:	(bad)  
   14001cba0:	rex.B movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001cba2:	fisttp WORD PTR [rdx-0x29]
   14001cba5:	xchg   ebp,eax
   14001cba6:	fdivr  DWORD PTR [rip+0xffffffffa4d1c46d]        # 0xe4d39019
   14001cbac:	sti    
   14001cbad:	hlt    
   14001cbae:	(bad)  
   14001cbaf:	shr    DWORD PTR [rdx-0x17],cl
   14001cbb2:	imul   eax,DWORD PTR [rbx-0x4],0x46346ed9
   14001cbb9:	mov    BYTE PTR [rdi-0x53],ah
   14001cbbc:	sar    BYTE PTR [rax+0x2d73da60],1
   14001cbc2:	add    al,0x44
   14001cbc4:	in     eax,0x1d
   14001cbc6:	add    esi,DWORD PTR [rbx]
   14001cbc8:	pop    rdi
   14001cbc9:	rex.WR or r13b,BYTE PTR [rdx-0x22f28337]
   14001cbd0:	cmp    al,0x71
   14001cbd2:	add    eax,0x241aa50
   14001cbd7:	(bad)  
   14001cbd8:	adc    BYTE PTR [rax],dl
   14001cbda:	or     edi,DWORD PTR [rsi-0x36f3df7a]
   14001cbe0:	and    eax,0xb35768b5
   14001cbe5:	test   DWORD PTR [rdi+0x20],ebp
   14001cbe8:	or     esp,edx
   14001cbea:	mov    cx,0xe49f
   14001cbee:	(bad)  
   14001cbef:	(bad)  
   14001cbf0:	(bad)  
   14001cbf1:	stc    
   14001cbf2:	ficomp WORD PTR [rsi-0x68]
   14001cbf5:	leave  
   14001cbf6:	fldcw  WORD PTR [rcx]
   14001cbf8:	and    bl,BYTE PTR [rax-0x574b4f30]
   14001cbfe:	xlat   BYTE PTR ds:[rbx]
   14001cbff:	(bad)  
   14001cc00:	(bad)  
   14001cc01:	cmp    eax,0xd8159b3
   14001cc06:	mov    ah,0x2e
   14001cc08:	cmp    ebx,DWORD PTR [rbp+rdi*4-0x49]
   14001cc0c:	lods   eax,DWORD PTR ds:[rsi]
   14001cc0d:	ins    BYTE PTR es:[rdi],dx
   14001cc0e:	mov    edx,0xb88320c0
   14001cc13:	in     eax,dx
   14001cc14:	mov    dh,0xb3
   14001cc16:	mov    edi,0xb6e20c9a
   14001cc1b:	add    ebx,DWORD PTR [rdx+0x3974b1d2]
   14001cc21:	rex.RXB (bad) 
   14001cc23:	(bad)  
   14001cc24:	scas   eax,DWORD PTR es:[rdi]
   14001cc25:	ja     0x14001cbf9
   14001cc27:	popf   
   14001cc28:	adc    eax,0x8304db26
   14001cc2d:	(bad)  
   14001cc2e:	fdiv   QWORD PTR [rbx+0x12]
   14001cc31:	or     esp,DWORD PTR [rbx-0x1d]
   14001cc34:	test   BYTE PTR [rbx],bh
   14001cc36:	fs xchg esp,eax
   14001cc38:	ds push 0x6d
   14001cc3b:	or     eax,0x7a6a5aa8
   14001cc40:	or     ecx,edi
   14001cc42:	(bad)  
   14001cc43:	in     al,0x9d
   14001cc45:	dec    DWORD PTR [rcx]
   14001cc47:	xchg   ebx,eax
   14001cc48:	(bad)  
   14001cc49:	scas   al,BYTE PTR es:[rdi]
   14001cc4a:	add    BYTE PTR [rdx],cl
   14001cc4c:	mov    cl,0x9e
   14001cc4e:	(bad)  
   14001cc4f:	jge    0x14001cc95
   14001cc51:	xchg   ebx,eax
   14001cc52:	(bad)  
   14001cc54:	shl    BYTE PTR [rbx-0xd9778f8],cl
   14001cc5a:	add    DWORD PTR [rsi],ebx
   14001cc5c:	inc    dl
   14001cc5e:	(bad)  
   14001cc5f:	imul   ebx,DWORD PTR [rbp+0x57],0x67cbf762
   14001cc66:	xor    BYTE PTR gs:[rcx+0x36],0x6c
   14001cc6b:	sbb    edi,esp
   14001cc6d:	(bad)  
   14001cc6e:	imul   ebp,DWORD PTR [rsi+0x76],0x1b
   14001cc72:	(bad)  
   14001cc73:	(bad)  
   14001cc74:	loopne 0x14001cca1
   14001cc76:	ror    DWORD PTR [rcx+0x10da7a5a],cl
   14001cc7c:	int3   
   14001cc7d:	rex.WX frstor [rdi+0x6f]
   14001cc81:	fistp  QWORD PTR [rcx-0x41100607]
   14001cc87:	mov    es,WORD PTR [rbx-0x42]
   14001cc8a:	mov    bh,0x17
   14001cc8c:	(bad)  
   14001cc8d:	mov    ?,WORD PTR [rax-0x295c17a0]
   14001cc93:	(bad)  
   14001cc94:	jle    0x14001cc29
   14001cc96:	shl    DWORD PTR [rcx+0x38d8c2c4],1
   14001cc9c:	push   rdx
   14001cc9d:	repnz fisttp WORD PTR [rdi-0xf]
   14001cca1:	addr32 mov ebx,0xbc5767d1
   14001cca7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001cca8:	fld    QWORD PTR [rsi]
   14001ccaa:	mov    ch,0x3f
   14001ccac:	rex.WXB
   14001ccad:	ss mov dl,0x48
   14001ccb0:	fisubr DWORD PTR [rbx]
   14001ccb2:	or     eax,0xa1b4cd8
   14001ccb7:	scas   eax,DWORD PTR es:[rdi]
   14001ccb8:	test   BYTE PTR [rdx+0x3],0x36
   14001ccbc:	(bad)  
   14001ccbd:	jp     0x14001ccc3
   14001ccbf:	rex.B ret 
   14001ccc1:	out    dx,eax
   14001ccc2:	(bad)  
   14001ccc3:	fist   WORD PTR [rbp-0x21]
   14001ccc6:	addr32 test al,0xef
   14001ccc9:	mov    gs,WORD PTR [rsi+0x31]
   14001cccc:	jns    0x14001cc8c
   14001ccce:	imul   eax,DWORD PTR [rsi-0x74],0x1acb61b3
   14001ccd5:	and    DWORD PTR [rsi-0x44],0xffffffa0
   14001ccd9:	shr    BYTE PTR [rdi+0x25],cl
   14001ccdc:	ss loop 0x14001cd47
   14001ccdf:	push   rdx
   14001cce0:	xchg   ebp,eax
   14001cce1:	ja     0x14001ccef
   14001cce3:	int3   
   14001cce4:	add    eax,DWORD PTR [rdi+0xb]
   14001cce7:	mov    ebx,0x220216b9
   14001ccec:	(bad)  
   14001cced:	es add eax,0xba3bbe55
   14001ccf3:	(bad)
   14001ccf6:	mov    ebp,0xb45a92b2
   14001ccfb:	sub    eax,DWORD PTR [rdx+rbp*2]
   14001ccfe:	mov    bl,0x5c
   14001cd00:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001cd01:	call   rdi
   14001cd03:	ret    0xcf31
   14001cd06:	shl    BYTE PTR [rbp+0x2cd99e8b],1
   14001cd0c:	sbb    eax,0xb05bdeae
   14001cd11:	ret    0x9b64
   14001cd14:	es repnz movsxd ebp,esp
   14001cd18:	pushf  
   14001cd19:	movabs ds:0x6a9026d930a756a,eax
   14001cd22:	or     DWORD PTR [rdi+rdi*1-0x7a14f1ca],ebx
   14001cd29:	addr32 (bad) 
   14001cd2b:	jb     0x14001cd40
   14001cd2d:	push   rdi
   14001cd2e:	add    BYTE PTR [rip+0xffffffff95bf4a82],al        # 0xd5c117b6
   14001cd34:	adc    al,0x7a
   14001cd36:	mov    eax,0xb12baee2
   14001cd3b:	jnp    0x14001cd75
   14001cd3d:	sbb    esi,DWORD PTR [rsi-0x2d7164f4]
   14001cd43:	xchg   edx,eax
   14001cd44:	or     eax,0xb7e5d5be
   14001cd49:	out    dx,eax
   14001cd4a:	fdivr  QWORD PTR [rcx+riz*1-0x21]
   14001cd4e:	fisttp DWORD PTR [rbx]
   14001cd50:	(bad)  
   14001cd51:	rcl    bl,cl
   14001cd53:	xchg   BYTE PTR [rdx-0x1e],al
   14001cd56:	(bad)  
   14001cd57:	icebp  
   14001cd58:	clc    
   14001cd59:	mov    bl,0xdd
   14001cd5b:	push   0x1fda836e
   14001cd60:	int    0x16
   14001cd62:	mov    esi,0xb9265b81
   14001cd67:	mul    cl
   14001cd69:	ja     0x14001cd1b
   14001cd6b:	outs   dx,DWORD PTR ds:[rsi]
   14001cd6c:	ja     0x14001cdb5
   14001cd6e:	mov    bh,0x18
   14001cd70:	out    0x5a,al
   14001cd72:	or     BYTE PTR [rax-0xf09590],cl
   14001cd78:	retf   0x63b
   14001cd7b:	pop    sp
   14001cd7d:	or     eax,DWORD PTR [rcx]
   14001cd7f:	adc    edi,edi
   14001cd81:	sahf   
   14001cd82:	(bad)
   14001cd87:	clc    
   14001cd88:	sar    edi,cl
   14001cd8a:	imul   esp,DWORD PTR [rcx+0x45],0xffffffcf
   14001cd8e:	ins    BYTE PTR es:[rdi],dx
   14001cd8f:	(bad)  
   14001cd90:	js     0x14001cd74
   14001cd92:	or     ah,BYTE PTR [rax-0x28f22d12]
   14001cd98:	push   rsp
   14001cd99:	add    DWORD PTR [rsi+rcx*2],0xffffffc2
   14001cd9d:	mov    bl,0x3
   14001cd9f:	cmp    DWORD PTR [rcx+0x26],esp
   14001cda2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   14001cda4:	not    DWORD PTR [rsi]
   14001cda6:	(bad)  
   14001cda7:	ror    BYTE PTR [rbp+0x47],1
   14001cdaa:	imul   ecx,DWORD PTR [rcx-0x25],0x4a3e6e77
   14001cdb1:	push   0xffffffffffffffd1
   14001cdb3:	scas   al,BYTE PTR es:[rdi]
   14001cdb4:	fcomp  QWORD PTR [rdx-0x2a]
   14001cdb7:	fldenv [rsi+0xb]
   14001cdba:	fild   WORD PTR [rax-0x10]
   14001cdbd:	cmp    ebx,eax
   14001cdbf:	(bad)  
   14001cdc0:	push   rbx
   14001cdc1:	scas   al,BYTE PTR es:[rdi]
   14001cdc2:	mov    esp,0xbb9ec5a9
   14001cdc7:	fidivr WORD PTR [rdi-0x31]
   14001cdca:	mov    dl,0x47
   14001cdcc:	jmp    0x15c3283d0
   14001cdd1:	repnz mov ebp,0xbac28abd
   14001cdd7:	retf   0x9330
   14001cdda:	mov    bl,0x53
   14001cddc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001cddd:	movabs ds:0x693bad0360524b4,eax
   14001cde6:	xlat   BYTE PTR ds:[rbx]
   14001cde7:	int    0x29
   14001cde9:	push   rdi
   14001cdea:	ficom  WORD PTR [rdi+rdi*4+0x67]
   14001cdee:	fldenv [rbx]
   14001cdf0:	cs jp  0x14001ce59
   14001cdf3:	mov    bl,0xb8
   14001cdf5:	rex.WX (bad) 
   14001cdf7:	(bad)
   14001cdfb:	pop    rbp
   14001cdfc:	xchg   esp,eax
   14001cdfd:	sub    ebp,DWORD PTR [rdi+0x2a]
   14001ce00:	(bad)  
   14001ce01:	mov    esi,0x8ea1b40b
   14001ce06:	or     al,0xc3
   14001ce08:	sbb    ebx,edi
   14001ce0a:	add    eax,0x2ef8d5a
   14001ce0f:	sub    eax,0x0
   14001ce14:	xor    DWORD PTR [r11],ebx
   14001ce17:	sbb    DWORD PTR [rdx-0x3ccdc99e],eax
   14001ce1d:	push   rbx
   14001ce1e:	sub    eax,0x6cc5042b
   14001ce23:	fs rex.RB hlt 
   14001ce26:	ja     0x14001cea5
   14001ce28:	xchg   BYTE PTR [rdi-0x6938a9a6],ah
   14001ce2e:	rex.B
   14001ce2f:	rex.WRXB or BYTE PTR [r10-0x44b63727],r9b
   14001ce36:	ret    0x8ad1
   14001ce39:	call   0x119cdc92d
   14001ce3e:	hlt    
   14001ce3f:	jrcxz  0x14001ce4d
   14001ce41:	rex.WRXB mov r13b,0xac
   14001ce44:	rex.WRB jle 0x14001cdf5
   14001ce47:	mov    ch,0x8e
   14001ce49:	sub    eax,0x1ccf9e83
   14001ce4e:	cwde   
   14001ce4f:	xchg   DWORD PTR [rcx+0x12],edx
   14001ce52:	ret    0x104a
   14001ce55:	and    ebx,ecx
   14001ce57:	push   rbx
   14001ce58:	shl    DWORD PTR [rax-0xc],cl
   14001ce5b:	js     0x14001cdef
   14001ce5d:	rex.B out dx,eax
   14001ce5f:	(bad)  
   14001ce60:	push   rbp
   14001ce61:	xlat   BYTE PTR ds:[rbx]
   14001ce62:	scas   al,BYTE PTR es:[rdi]
   14001ce63:	cs adc al,0xe6
   14001ce66:	mov    ch,0x37
   14001ce68:	xlat   BYTE PTR ds:[rbx]
   14001ce69:	mov    ch,0x98
   14001ce6b:	sbb    al,0x96
   14001ce6d:	test   BYTE PTR [rbx+0x1b985905],al
   14001ce73:	(bad)  
   14001ce74:	sbb    BYTE PTR [rcx-0x5246500],ch
   14001ce7a:	sub    eax,0x36cb9ab0
   14001ce7f:	test   eax,0xe6775d5d
   14001ce84:	sbb    al,0x6c
   14001ce86:	ins    BYTE PTR es:[rdi],dx
   14001ce87:	(bad)  
   14001ce88:	fistp  QWORD PTR [rdi]
   14001ce8a:	rex.B (bad) 
   14001ce8c:	sahf   
   14001ce8d:	(bad)  
   14001ce8e:	pop    rdx
   14001ce8f:	int    0xa2
   14001ce91:	and    al,0x84
   14001ce93:	xchg   ebp,eax
   14001ce94:	jrcxz  0x14001ceab
   14001ce96:	lahf   
   14001ce97:	mov    WORD PTR [rax],fs
   14001ce99:	rex.RX mov dl,0xa7
   14001ce9c:	(bad)  
   14001ce9d:	ja     0x14001ce48
   14001ce9f:	mov    esi,0xf1e8e1a6
   14001cea4:	out    0xd0,eax
   14001cea6:	repz call 0x103e051d0
   14001ceac:	gs mov dl,0xc5
   14001ceaf:	fisubr DWORD PTR [rdx-0x14a2a252]
   14001ceb5:	lahf   
   14001ceb6:	rex.RX
   14001ceb7:	sub    spl,r9b
   14001ceba:	imul   ebp,DWORD PTR [rdi+0x69],0xfffffffd
   14001cebe:	jo     0x14001cf36
   14001cec0:	scas   al,BYTE PTR es:[rdi]
   14001cec1:	imul   esi,DWORD PTR [rcx],0x39
   14001cec4:	out    dx,eax
   14001cec5:	pop    rdx
   14001cec6:	sub    ah,BYTE PTR [rax]
   14001cec8:	sub    al,0x9
   14001ceca:	(bad)  
   14001cecb:	or     ebp,DWORD PTR [rbp+0x38]
   14001cece:	sbb    al,0x12
   14001ced0:	repz rex.RX fbstp TBYTE PTR ss:[rdx+0x71c65d07]
   14001ced9:	push   rsp
   14001ceda:	jo     0x14001cec9
   14001cedc:	xor    BYTE PTR [rbp+0x6b],ah
   14001cedf:	hlt    
   14001cee0:	div    ebx
   14001cee2:	sub    bh,BYTE PTR [rbx-0x5dce3d4a]
   14001cee8:	jne    0x14001ce7b
   14001ceea:	sbb    al,0x89
   14001ceec:	xor    al,0xa0
   14001ceee:	(bad)  
   14001ceef:	nop
   14001cef0:	sti    
   14001cef1:	mov    esp,0x8dba179f
   14001cef6:	test   BYTE PTR [rsi],cl
   14001cef8:	jns    0x14001ced8
   14001cefa:	test   eax,0xb2ef3825
   14001ceff:	cmp    al,0xff
   14001cf01:	jns    0x14001cef6
   14001cf03:	jae    0x14001cec3
   14001cf05:	call   0x1051d4c75
   14001cf0b:	rex.B cmp al,0x2a
   14001cf0e:	ficomp WORD PTR [rax+0x5]
   14001cf11:	rex.WRXB jns 0x14001cf04
   14001cf14:	rex.R jle 0x14001cf79
   14001cf17:	jmp    0x10250fca3
   14001cf1c:	(bad)  
   14001cf1d:	sbb    al,0x54
   14001cf1f:	fild   DWORD PTR [rcx]
   14001cf21:	mov    dl,BYTE PTR [rip+0xebb4094]        # 0x14ebd0fbb
   14001cf27:	lea    eax,[rbx-0x3d59dc18]
   14001cf2d:	fnstcw WORD PTR [rax]
   14001cf2f:	mov    edi,0x38a0c50d
   14001cf34:	rex.WR hlt 
   14001cf36:	mov    ebx,0x96a78f21
   14001cf3b:	or     cl,dh
   14001cf3d:	xchg   esi,eax
   14001cf3e:	lea    edx,[rbx]
   14001cf40:	or     DWORD PTR [rax],eax
   14001cf42:	int3   
   14001cf43:	pop    rsp
   14001cf44:	xor    rdi,rdx
   14001cf47:	mov    r12d,DWORD PTR [r10-0x6]
   14001cf4b:	outs   dx,BYTE PTR ds:[rsi]
   14001cf4c:	retf   0xe153
   14001cf4f:	ja     0x14001cfa5
   14001cf51:	pop    rbp
   14001cf52:	mov    ebx,0xa06c15ba
   14001cf57:	movabs ds:0x91960e97888d3fd6,eax
   14001cf60:	push   rax
   14001cf61:	cwde   
   14001cf62:	xlat   BYTE PTR ds:[rbx]
   14001cf63:	ficom  WORD PTR [rcx]
   14001cf65:	test   eax,0xfad2c7cc
   14001cf6a:	loope  0x14001cf58
   14001cf6c:	xchg   ebx,eax
   14001cf6d:	retf   
   14001cf6e:	cli    
   14001cf6f:	cmc    
   14001cf70:	pop    rsp
   14001cf71:	xlat   BYTE PTR ds:[rbx]
   14001cf72:	(bad)
   14001cf77:	imul   ebx,esi,0xffffffb5
   14001cf7a:	push   rsp
   14001cf7b:	rex lahf 
   14001cf7d:	test   BYTE PTR [rdi+0x59],cl
   14001cf80:	pop    rax
   14001cf81:	adc    cl,BYTE PTR [rsi]
   14001cf83:	(bad)  
   14001cf84:	sbb    DWORD PTR [rbx],esp
   14001cf86:	adc    eax,0x3870da0f
   14001cf8b:	and    al,0x9b
   14001cf8d:	and    edi,DWORD PTR [rip+0x65fd6ba7]        # 0x1a5ff3b3b
   14001cf94:	out    0x5a,al
   14001cf96:	out    0x7c,al
   14001cf98:	and    eax,0x6457cb09
   14001cf9d:	cmp    al,dl
   14001cf9f:	rex.WRX movabs ds:0x21188a9fe20191ae,rax
   14001cfa9:	int3   
   14001cfaa:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001cfab:	xor    esp,DWORD PTR [rax-0x3]
   14001cfae:	mov    esp,0x24e1af2a
   14001cfb3:	lods   eax,DWORD PTR ds:[rsi]
   14001cfb4:	out    dx,al
   14001cfb5:	sar    BYTE PTR [rdi],1
   14001cfb7:	mov    ah,0x2d
   14001cfb9:	adc    DWORD PTR [rdx],0xffffff9f
   14001cfbc:	ins    BYTE PTR es:[rdi],dx
   14001cfbd:	mov    dl,0x9
   14001cfbf:	xchg   BYTE PTR [rbx-0x1536b7dc],ch
   14001cfc5:	adc    eax,0x4629d053
   14001cfca:	jle    0x14001cfc7
   14001cfcc:	push   0xfffffffff6e26577
   14001cfd1:	jns    0x14001d012
   14001cfd3:	(bad)  
   14001cfd4:	mov    bh,0x48
   14001cfd6:	and    al,0x36
   14001cfd8:	je     0x14001cff5
   14001cfda:	or     DWORD PTR [rip+0x4122a35],ebx        # 0x14413fa15
   14001cfe0:	repnz mov esp,0x8db34b53
   14001cfe6:	rex.W push rdx
   14001cfe8:	jo     0x14001cfc8
   14001cfea:	gs jns 0x14001d01e
   14001cfed:	out    dx,eax
   14001cfee:	jle    0x14001d050
   14001cff0:	(bad)  
   14001cff1:	repz out 0xe7,al
   14001cff4:	mov    edi,0x7cfefdc2
   14001cff9:	xchg   ecx,eax
   14001cffa:	rcl    ch,1
   14001cffc:	cmp    eax,0xfacccba0
   14001d001:	mov    al,BYTE PTR ss:[rbx-0x656ef845]
   14001d008:	js     0x14001d05e
   14001d00a:	mov    esp,0xa76539b1
   14001d00f:	test   al,0x4b
   14001d011:	cwde   
   14001d012:	cmp    DWORD PTR [rbx],0xa
   14001d015:	test   eax,0xfac92298
   14001d01a:	mov    ch,0x9
   14001d01c:	mov    bl,cl
   14001d01e:	scas   al,BYTE PTR es:[rdi]
   14001d01f:	adc    BYTE PTR [rdi+0x5d],cl
   14001d022:	out    dx,eax
   14001d023:	pop    rdi
   14001d024:	(bad)  
   14001d025:	ins    BYTE PTR es:[rdi],dx
   14001d026:	hlt    
   14001d027:	rex.RX int 0x3f
   14001d02a:	fldcw  WORD PTR [rbp-0x74]
   14001d02d:	(bad)  
   14001d02e:	ret    0x4374
   14001d031:	adc    bl,BYTE PTR [rdx-0xd]
   14001d034:	add    ah,BYTE PTR [rbx]
   14001d036:	rex.B (bad) 
   14001d038:	shl    DWORD PTR [rax+0x6c],0xc1
   14001d03c:	add    BYTE PTR [rcx+0x77],0xd8
   14001d040:	rex.RXB xlat BYTE PTR ds:[rbx]
   14001d042:	ss xchg edi,eax
   14001d044:	(bad)  
   14001d045:	out    0x2d,al
   14001d047:	mov    es,ebp
   14001d049:	mov    ch,0x0
   14001d04b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d04c:	test   BYTE PTR [rbx+rbx*1+0x418a1abc],al
   14001d053:	jno    0x14001d0b0
   14001d055:	mov    ebx,0xe898685a
   14001d05a:	ja     0x14001d09f
   14001d05c:	(bad)  
   14001d05e:	ins    BYTE PTR es:[rdi],dx
   14001d05f:	pop    rdx
   14001d060:	(bad)  
   14001d061:	rex.WRXB sub rax,0x367e5f15
   14001d067:	or     al,0x9c
   14001d069:	sub    eax,0x1cdd271b
   14001d06e:	add    BYTE PTR [rsi],bh
   14001d070:	adc    al,BYTE PTR [rax]
   14001d072:	cwde   
   14001d073:	mov    ecx,0xa0833153
   14001d078:	nop
   14001d079:	(bad)  
   14001d07a:	scas   al,BYTE PTR es:[rdi]
   14001d07b:	mov    edx,ecx
   14001d07d:	push   rbx
   14001d07e:	mov    ch,0x92
   14001d080:	(bad)  
   14001d081:	(bad)
   14001d084:	push   rdi
   14001d085:	hlt    
   14001d086:	out    dx,eax
   14001d087:	(bad)  
   14001d088:	xchg   esp,eax
   14001d089:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d08a:	ret    0xd5ef
   14001d08d:	xchg   esi,eax
   14001d08e:	fdecstp 
   14001d090:	jmp    0xe8afd851
   14001d095:	lea    ebx,[rdi+rsi*4]
   14001d098:	imul   ebx,esi,0x31
   14001d09b:	pushf  
   14001d09c:	sub    ch,bh
   14001d09e:	sub    al,BYTE PTR [rbp-0x35948613]
   14001d0a4:	lods   al,BYTE PTR ds:[rsi]
   14001d0a5:	rex.W jo 0x14001d07b
   14001d0a8:	outs   dx,DWORD PTR ds:[rsi]
   14001d0a9:	sbb    ebx,DWORD PTR [rbp-0x8]
   14001d0ac:	sub    al,BYTE PTR cs:[rsi-0x1f]
   14001d0b0:	loope  0x14001d0e8
   14001d0b2:	fisub  WORD PTR [rsi-0x60]
   14001d0b5:	(bad)  
   14001d0b6:	(bad)  
   14001d0b9:	push   rsp
   14001d0ba:	call   0x13366f313
   14001d0bf:	rex.WRB in eax,0xf3
   14001d0c2:	mov    dl,0x2
   14001d0c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d0c5:	ret    0x1ba9
   14001d0c8:	addr32 xchg ecx,eax
   14001d0ca:	test   BYTE PTR [rax],dh
   14001d0cc:	movabs al,es:0x9ff9e4c5aeb8299f
   14001d0d6:	fdivp  st(5),st
   14001d0d8:	cmp    cl,ah
   14001d0da:	repz (bad) 
   14001d0dc:	jnp    0x14001d0db
   14001d0de:	call   0xe96d8db2
   14001d0e3:	cmp    ch,0x5a
   14001d0e6:	mov    dl,0x99
   14001d0e8:	or     DWORD PTR ds:[rdi-0x7bc7804e],ebx
   14001d0ef:	stos   DWORD PTR es:[rdi],eax
   14001d0f0:	mov    al,0x24
   14001d0f2:	sbb    al,0x2c
   14001d0f4:	icebp  
   14001d0f5:	adc    eax,0x46323507
   14001d0fa:	sub    bl,BYTE PTR [rsi]
   14001d0fc:	jae    0x14001d175
   14001d0fe:	xor    DWORD PTR [rdi],eax
   14001d100:	mov    ah,0xe1
   14001d102:	jo     0x14001d14c
   14001d104:	cmc    
   14001d105:	shr    BYTE PTR [rbx+0x51],1
   14001d108:	add    DWORD PTR ss:[rsi+0x7a],0x77
   14001d10d:	mov    dl,0x5d
   14001d10f:	movsxd ecx,DWORD PTR [rsi-0x29]
   14001d112:	cli    
   14001d113:	retf   
   14001d114:	(bad)  
   14001d116:	loope  0x14001d0ea
   14001d118:	int3   
   14001d119:	mov    ch,0xcc
   14001d11b:	stc    
   14001d11c:	lea    eax,[rdi+rdx*8-0x69edb520]
   14001d123:	scas   eax,DWORD PTR es:[rdi]
   14001d124:	or     esp,DWORD PTR [rbx]
   14001d126:	lea    esi,[rsi-0x625f8f38]
   14001d12c:	mov    DWORD PTR [rcx-0x45],eax
   14001d12f:	test   BYTE PTR [rsi+0x5d],al
   14001d132:	and    eax,DWORD PTR [rbx]
   14001d134:	(bad)  
   14001d135:	ins    BYTE PTR es:[rdi],dx
   14001d136:	cmp    BYTE PTR [rdx],bl
   14001d138:	(bad)  
   14001d139:	(bad)  
   14001d13a:	adc    eax,0xe0e8531
   14001d13f:	sub    BYTE PTR [rdx-0x68],al
   14001d142:	rex.WRXB
   14001d143:	add    ebp,DWORD PTR [ecx-0x53f81ac]
   14001d14a:	jns    0x14001d1a1
   14001d14c:	or     ebx,0xc51f4c62
   14001d152:	cmp    BYTE PTR [rcx-0x67dc0ba2],al
   14001d158:	popf   
   14001d159:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d15a:	(bad)  
   14001d15b:	mov    bl,0xdc
   14001d15d:	xchg   esi,eax
   14001d15e:	adc    eax,0x54001baa
   14001d163:	in     eax,0x5a
   14001d165:	xor    DWORD PTR [rdi-0x4],ecx
   14001d168:	cdq    
   14001d169:	vp4dpwssds zmm31{z},zmm5,(bad)
   14001d16a:	(bad)  
   14001d16b:	xlat   BYTE PTR ds:[rbx]
   14001d16c:	fcom   DWORD PTR [rbx+0x79]
   14001d16f:	(bad)  
   14001d170:	(bad)  
   14001d171:	rex.WRXB loope 0x14001d1bd
   14001d174:	push   rsi
   14001d175:	jle    0x14001d171
   14001d177:	push   rax
   14001d178:	xchg   ebp,eax
   14001d179:	sub    eax,0x1cd47bd7
   14001d17e:	int3   
   14001d17f:	(bad)  
   14001d181:	mov    cl,BYTE PTR [rbp-0x6944add3]
   14001d187:	xor    al,0x91
   14001d189:	call   0x119d1f149
   14001d18e:	movabs al,ds:0x65c2ad5e7ef3ec06
   14001d197:	rex.RXB outs dx,BYTE PTR ds:[rsi]
   14001d199:	xchg   ecx,eax
   14001d19a:	rex.W ins BYTE PTR es:[rdi],dx
   14001d19c:	(bad)  
   14001d19d:	movabs al,ds:0x7a93a1236e87553
   14001d1a6:	or     DWORD PTR [rbx],esp
   14001d1a8:	push   0x54
   14001d1aa:	and    al,0x8
   14001d1ac:	sub    esp,DWORD PTR [rbp+0x3f]
   14001d1af:	adc    esp,esp
   14001d1b1:	jns    0x14001d15a
   14001d1b3:	xchg   esi,eax
   14001d1b4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d1b5:	movabs rsp,0x8a2a27a4911b668f
   14001d1bf:	mov    ebp,0xf2cbbce0
   14001d1c4:	movabs eax,ds:0x23c0fdde62ebd08d
   14001d1cd:	out    dx,eax
   14001d1ce:	out    0xd9,al
   14001d1d0:	mov    ebp,0xfc14bce1
   14001d1d5:	shl    BYTE PTR [rdi-0x757cc0f3],1
   14001d1db:	es jle 0x14001d190
   14001d1de:	xchg   ecx,eax
   14001d1df:	(bad)  
   14001d1e0:	mov    ecx,0xf870d024
   14001d1e5:	adc    eax,0x463b69cb
   14001d1ea:	out    0x42,al
   14001d1ec:	jp     0x14001d265
   14001d1ee:	std    
   14001d1ef:	pop    rbx
   14001d1f0:	mov    ch,0x6b
   14001d1f2:	gs fdivr st(4),st
   14001d1f5:	pop    rdx
   14001d1f6:	jle    0x14001d1bd
   14001d1f8:	(bad)  
   14001d1f9:	or     DWORD PTR [rbx-0x12],edx
   14001d1fc:	jbe    0x14001d236
   14001d1fe:	div    QWORD PTR [rcx-0xf47f652]
   14001d205:	lahf   
   14001d206:	adc    ah,BYTE PTR [rcx-0x75c033cd]
   14001d20c:	jb     0x14001d20b
   14001d20e:	and    al,0x93
   14001d210:	add    BYTE PTR [rax],al
   14001d212:	add    BYTE PTR [rax],al
   14001d214:	(bad)  
   14001d215:	push   0xffffffffffffffc2
   14001d217:	add    DWORD PTR [rsi-0x2c],ebp
   14001d21a:	test   BYTE PTR [rbx],al
   14001d21c:	pop    rcx
   14001d21d:	mov    esi,0xa8dc0246
   14001d222:	or     DWORD PTR [rdi],eax
   14001d224:	jmp    0x14001d1e8
   14001d226:	retf   
   14001d227:	(bad)  
   14001d228:	mov    dl,0x7c
   14001d22a:	lea    eax,[rax*4-0x47fab0ea]
   14001d231:	push   rcx
   14001d232:	adc    ecx,DWORD PTR [rsi]
   14001d234:	(bad)  
   14001d235:	cmp    edx,ecx
   14001d237:	(bad)  
   14001d239:	test   DWORD PTR [rdi+0x55efe10d],edx
   14001d23f:	or     al,0x64
   14001d241:	stc    
   14001d242:	sbb    cl,BYTE PTR [rcx]
   14001d244:	push   rbx
   14001d245:	xchg   ebx,eax
   14001d246:	fmul   DWORD PTR [rax]
   14001d248:	or     ch,BYTE PTR [rip+0x473d0a9e]        # 0x1873edcec
   14001d24e:	pop    rsp
   14001d24f:	or     esi,DWORD PTR [rax-0x5d]
   14001d252:	es sbb al,0x47
   14001d255:	leave  
   14001d256:	in     al,0x1d
   14001d258:	(bad)  
   14001d259:	ja     0x14001d1fd
   14001d25b:	(bad)  
   14001d25c:	sub    DWORD PTR [rip+0xbac1e60],ebx        # 0x14badf0c2
   14001d262:	(bad)  
   14001d263:	sbb    ebx,DWORD PTR [rbx-0x3de5129f]
   14001d269:	fild   QWORD PTR [rbx+0x69b5f518]
   14001d26f:	sbb    eax,ecx
   14001d271:	repnz xor eax,0xf798ff12
   14001d277:	adc    esp,DWORD PTR [rsi-0x6eee4eda]
   14001d27d:	rex.WR jae 0x14001d290
   14001d280:	adc    al,0x5a
   14001d282:	cmp    al,0x15
   14001d284:	and    esi,DWORD PTR [rax]
   14001d286:	(bad)  
   14001d287:	adc    al,0x7a
   14001d289:	mov    ?,WORD PTR [rax+0x7ae44d16]
   14001d28f:	(bad)  
   14001d290:	loopne 0x14001d2d8
   14001d292:	rex.WRB cmp r15b,r10b
   14001d295:	sub    al,0x8f
   14001d297:	cmp    DWORD PTR [rsi-0x46c4366e],ecx
   14001d29d:	clc    
   14001d29e:	or     edi,DWORD PTR [rdx]
   14001d2a0:	cmp    al,0xee
   14001d2a2:	rex.R (bad) 
   14001d2a4:	or     eax,DWORD PTR [rsi+rax*4-0x3fc5adc2]
   14001d2ab:	cmp    al,0x65
   14001d2ad:	push   rax
   14001d2ae:	add    bh,BYTE PTR [rip+0x365e1758]        # 0x1765fea0c
   14001d2b4:	outs   dx,DWORD PTR ds:[rsi]
   14001d2b5:	jge    0x14001d253
   14001d2b7:	(bad)  
   14001d2b8:	ss ret 
   14001d2ba:	fidiv  DWORD PTR [rip+0x3418a901]        # 0x1741a7bc1
   14001d2c0:	test   BYTE PTR [rdi-0x2a4ccea9],bh
   14001d2c6:	xchg   ebp,eax
   14001d2c7:	xor    dl,ch
   14001d2c9:	imul   edx,ebx,0x32
   14001d2cc:	fld    QWORD PTR [rcx]
   14001d2ce:	adc    DWORD PTR [rbx],esi
   14001d2d0:	nop
   14001d2d1:	in     eax,0x6b
   14001d2d3:	and    al,0xa7
   14001d2d5:	(bad)
   14001d2d9:	xor    edi,ebp
   14001d2db:	(bad)  
   14001d2dc:	leave  
   14001d2dd:	pop    rbx
   14001d2de:	sub    eax,0x624d4c26
   14001d2e3:	and    edi,DWORD PTR [rbx+0x27]
   14001d2e6:	movabs al,ds:0x24f31520e6992222
   14001d2ef:	and    DWORD PTR [rax],ebp
   14001d2f1:	mov    ah,0x78
   14001d2f3:	sub    bl,BYTE PTR [rdi]
   14001d2f5:	fidivr WORD PTR [rdx-0x39fb9d5]
   14001d2fb:	sub    DWORD PTR [rcx+0xa],esi
   14001d2fe:	ds sub ah,dh
   14001d301:	sbb    al,0x71
   14001d303:	sub    eax,0x2cb376c3
   14001d308:	(bad)  
   14001d309:	enter  0x2ef5,0xad
   14001d30d:	movabs ds:0xe7f7709a8dc02f37,al
   14001d316:	pop    rax
   14001d317:	jno    0x14001d2c7
   14001d319:	pop    rcx
   14001d31a:	(bad)  
   14001d31b:	jae    0x14001d2b6
   14001d31d:	xor    ebx,esp
   14001d31f:	jb     0x14001d33d
   14001d321:	and    eax,0x4f2b7793
   14001d326:	push   rcx
   14001d327:	jbe    0x14001d39b
   14001d329:	icebp  
   14001d32a:	(bad)  
   14001d32b:	je     0x14001d372
   14001d32d:	fwait
   14001d32e:	(bad)  
   14001d32f:	jne    0x14001d3a9
   14001d331:	fmul   QWORD PTR [rcx+0x4bb64f7e]
   14001d337:	jg     0x14001d34f
   14001d339:	or     BYTE PTR [rip+0xffffffffcf62217d],cl        # 0x10f63f4bc
   14001d33f:	jl     0x14001d2e5
   14001d341:	je     0x14001d2c3
   14001d343:	jns    0x14001d2d8
   14001d345:	(bad)  
   14001d346:	rex.X js 0x14001d313
   14001d349:	movabs al,ds:0x2eb07bc6cafd7a04
   14001d352:	mov    esp,0x7e44876c
   14001d357:	ins    DWORD PTR es:[rdi],dx
   14001d358:	fdivp  st(2),st
   14001d35a:	cmp    BYTE PTR [rdi-0x17],ch
   14001d35d:	nop
   14001d35e:	cli    
   14001d35f:	outs   dx,BYTE PTR ds:[rsi]
   14001d360:	ins    BYTE PTR es:[rdi],dx
   14001d361:	xchg   BYTE PTR [rbp+0x77ec5b6b],dh
   14001d367:	push   0x2
   14001d369:	push   rdx
   14001d36a:	xor    DWORD PTR [rax+0x35],ebp
   14001d36d:	cmp    bl,dh
   14001d36f:	imul   ecx,DWORD PTR [rax],0x3f62af7f
   14001d375:	adc    eax,0xab66636d
   14001d37a:	sub    esp,DWORD PTR [rcx+0x51]
   14001d37d:	shr    ecx,0x60
   14001d380:	(bad)  
   14001d381:	xlat   BYTE PTR ds:[rbx]
   14001d382:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d383:	gs jrcxz 0x14001d343
   14001d386:	fs fs mov edx,0x8d662203
   14001d38d:	imul   esp,eax,0xd7cb2067
   14001d393:	rex.W (bad) 
   14001d395:	movabs eax,ds:0x75794b531f4e4915
   14001d39e:	xchg   ecx,eax
   14001d39f:	rex.WX cld 
   14001d3a1:	movsxd ebx,esi
   14001d3a3:	rex.WRXB retf 
   14001d3a5:	or     DWORD PTR [rsi+rcx*2],ebx
   14001d3a8:	xchg   edx,eax
   14001d3a9:	mov    bh,0x5a
   14001d3ab:	rex.WR movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14001d3ad:	fstp   QWORD PTR [rax-0x3b6567b3]
   14001d3b3:	rex.RX scas eax,DWORD PTR es:[rdi]
   14001d3b5:	lock (bad) 
   14001d3b7:	rex.RXB test BYTE PTR [r14+0x40],0x45
   14001d3bc:	shl    DWORD PTR [rdx+rax*4],0x44
   14001d3c0:	xor    r9b,bpl
   14001d3c3:	rex.B jae 0x14001d41e
   14001d3c6:	cmovo  ebp,DWORD PTR [rdx]
   14001d3c9:	out    0x49,al
   14001d3cb:	rex.X sbb eax,0x50438b8c
   14001d3d1:	push   0x26754f1
   14001d3d6:	xor    edx,DWORD PTR [rbp+0x3e]
   14001d3d9:	mov    esp,0xd6095775
   14001d3de:	mov    bh,0x56
   14001d3e0:	mov    eax,es
   14001d3e2:	clc    
   14001d3e3:	push   rbx
   14001d3e4:	mov    ebx,0xe2523aaa
   14001d3e9:	adc    al,0x7c
   14001d3eb:	push   rax
   14001d3ec:	(bad)  
   14001d3ed:	jle    0x14001d3ad
   14001d3ef:	push   rcx
   14001d3f0:	call   0x11f5cb62e
   14001d3f5:	push   rbx
   14001d3f6:	and    BYTE PTR [rbx-0x7a],bl
   14001d3f9:	in     eax,dx
   14001d3fa:	pop    cx
   14001d3fc:	mov    cl,0x87
   14001d3fe:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d3ff:	pop    rax
   14001d400:	xor    al,0x91
   14001d402:	jmp    0x14001d461
   14001d404:	add    edi,ebx
   14001d406:	sub    DWORD PTR [rdx+rbx*2+0x45],ebx
   14001d40a:	outs   dx,DWORD PTR ds:[rsi]
   14001d40b:	pop    rsi
   14001d40c:	ins    DWORD PTR es:[rdi],dx
   14001d40d:	(bad)  
   14001d40e:	lods   eax,DWORD PTR ds:[rsi]
   14001d40f:	pop    rdi
   14001d410:	sbb    BYTE PTR [rbx],0x35
   14001d413:	loope  0x14001d3cc
   14001d415:	jno    0x14001d40e
   14001d417:	loopne 0x14001d407
   14001d419:	iret   
   14001d41a:	mov    cl,0xe2
   14001d41c:	fldenv [rbp-0x4ca31c8d]
   14001d422:	cmp    al,0xe6
   14001d424:	imul   ebx,ecx,0xfffffffe
   14001d427:	out    0x32,eax
   14001d429:	addr32 mov eax,0x7a0d05e5
   14001d42f:	in     al,0x38
   14001d431:	rex.WX
   14001d432:	es out dx,eax
   14001d434:	mov    rsp,cr4
   14001d437:	out    dx,al
   14001d438:	push   rsi
   14001d439:	sahf   
   14001d43a:	movabs ds:0x2fe2e4ed60f461ec,al
   14001d443:	call   0x129ef5d1b
   14001d448:	mov    dh,BYTE PTR [rsi]
   14001d44a:	stos   DWORD PTR es:[rdi],eax
   14001d44b:	jmp    0x14001d40a
   14001d44d:	pop    rsp
   14001d44e:	imul   ebp,edx,0xfd13b8f0
   14001d454:	(bad)  
   14001d455:	rcl    cl,cl
   14001d457:	cld    
   14001d458:	sahf   
   14001d459:	ins    BYTE PTR es:[rdi],dx
   14001d45a:	xchg   edi,eax
   14001d45b:	(bad)  
   14001d45c:	test   eax,0x2cff5506
   14001d461:	adc    BYTE PTR [rdx],bl
   14001d463:	cli    
   14001d464:	sbb    edi,DWORD PTR [rdx-0x28]
   14001d467:	sti    
   14001d468:	rex.X (bad) 
   14001d46a:	sahf   
   14001d46b:	stc    
   14001d46c:	jne    0x14001d41c
   14001d46e:	pop    rsp
   14001d46f:	clc    
   14001d470:	jmp    0xc381c776
   14001d476:	ret    0x26f2
   14001d479:	cmp    eax,0x5711f084
   14001d47e:	rex.RX icebp 
   14001d480:	xchg   esp,eax
   14001d481:	or     r12d,esi
   14001d484:	movabs ds:0xcdf78d95faf5cb2b,eax
   14001d48d:	dec    DWORD PTR [rdi-0xa]
   14001d490:	(bad)  
   14001d491:	pop    rbp
   14001d492:	js     0x14001d46d
   14001d494:	push   rdi
   14001d495:	(bad)  
   14001d496:	mov    edx,0xfc890ed8
   14001d49b:	fidivr DWORD PTR [rcx]
   14001d49d:	jrcxz  0x14001d4dd
   14001d49f:	fstp   TBYTE PTR [rbp+rsi*8-0x6074218f]
   14001d4a6:	mov    bl,0xdf
   14001d4a8:	shl    BYTE PTR [rcx],cl
   14001d4aa:	cmc    
   14001d4ab:	fucom  st(5)
   14001d4ad:	rex.WXB (bad) 
   14001d4af:	(bad)  
   14001d4b1:	or     al,0x6b
   14001d4b3:	xlat   BYTE PTR ds:[rbx]
   14001d4b4:	out    dx,eax
   14001d4b5:	test   ax,0xb6d6
   14001d4b9:	fsubr  st,st(7)
   14001d4bb:	(bad)  
   14001d4bc:	xor    DWORD PTR [rdx-0x5bfb2ad3],0xce33d062
   14001d4c6:	movabs al,ds:0x241a5dd3e6706ad1
   14001d4cf:	rcl    BYTE PTR [rax],cl
   14001d4d1:	(bad)  
   14001d4d2:	pop    rsi
   14001d4d3:	(bad)
   14001d4d6:	pushf  
   14001d4d7:	(bad)  
   14001d4d8:	jle    0x14001d504
   14001d4da:	fcmovb st,st(6)
   14001d4dc:	rex.WB
   14001d4dd:	sbb    dil,al
   14001d4e0:	int3   
   14001d4e1:	push   rsi
   14001d4e2:	push   rdi
   14001d4e3:	ret    0x3cfb
   14001d4e6:	xchg   ebp,eax
   14001d4e7:	ret    
   14001d4e8:	movabs ds:0xa8c011e895c1d382,al
   14001d4f1:	scas   eax,DWORD PTR es:[rdi]
   14001d4f2:	rex.WRB retf 
   14001d4f4:	lahf   
   14001d4f5:	(bad)
   14001d4f8:	(bad)  
   14001d4f9:	jnp    0x14001d4c4
   14001d4fb:	enter  0x11f1,0xb
   14001d4ff:	leave  
   14001d500:	je     0x14001d509
   14001d502:	rex.R int3 
   14001d504:	rex.XB ins DWORD PTR es:[rdi],dx
   14001d506:	xchg   ch,cl
   14001d508:	sbb    dl,bl
   14001d50a:	ror    bh,0x2d
   14001d50d:	mov    ecx,0x9640ce02
   14001d512:	scas   eax,DWORD PTR es:[rdi]
   14001d513:	xchg   ecx,eax
   14001d514:	ja     0x14001d512
   14001d516:	ins    DWORD PTR es:[rdi],dx
   14001d517:	nop
   14001d518:	rex.X sub edx,DWORD PTR cs:[rdx-0x6c16d7e7]
   14001d520:	pushf  
   14001d521:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d523:	xchg   esi,eax
   14001d524:	stos   DWORD PTR es:[rdi],eax
   14001d525:	push   rsp
   14001d526:	fs xchg edi,eax
   14001d528:	repnz (bad) 
   14001d52a:	and    dl,BYTE PTR [rbp-0x6b1f7f3b]
   14001d530:	clc    
   14001d531:	(bad)  
   14001d532:	mov    esp,0x7eadcf9f
   14001d537:	sahf   
   14001d538:	xchg   esi,eax
   14001d539:	adc    edi,DWORD PTR [rax]
   14001d53b:	pushf  
   14001d53c:	movabs eax,ds:0x1398b56f249dfa79
   14001d545:	add    eax,0xbb4a9977
   14001d54a:	xor    DWORD PTR [rbx-0x650c2e83],ebx
   14001d550:	xor    BYTE PTR [rip+0x5f078d89],dh        # 0x19f0962df
   14001d556:	rex.WXB mov WORD PTR [r14-0x1f],ds
   14001d55a:	or     eax,0xcf8b698e
   14001d55f:	(bad)  
   14001d560:	in     al,dx
   14001d561:	popf   
   14001d562:	or     BYTE PTR [rdx-0x74bd0825],0x82
   14001d569:	rex.WB add al,0x89
   14001d56c:	mov    ch,0x23
   14001d56e:	(bad)  
   14001d56f:	mov    BYTE PTR [rax-0x407c659c],cl
   14001d575:	(bad)  
   14001d576:	pop    rax
   14001d577:	(bad)  
   14001d578:	out    0xb0,al
   14001d57a:	(bad)  
   14001d57b:	adc    cl,0xda
   14001d57e:	fadd   QWORD PTR [rcx-0x7b6c33ac]
   14001d584:	movsxd esp,DWORD PTR [rsi+0x183a8551]
   14001d58a:	(bad)  
   14001d58b:	xchg   DWORD PTR [rip+0xffffffffa086d572],ecx        # 0xe088ab03
   14001d591:	shl    dl,1
   14001d593:	test   eax,0xa820ba97
   14001d598:	(bad)  
   14001d599:	add    al,0x66
   14001d59b:	stos   BYTE PTR es:[rdi],al
   14001d59c:	stc    
   14001d59d:	outs   dx,BYTE PTR ds:[rsi]
   14001d59e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d59f:	stos   DWORD PTR es:[rdi],eax
   14001d5a0:	jl     0x14001d61a
   14001d5a2:	jmp    0x14001d552
   14001d5a4:	rex.WXB adc bpl,BYTE PTR [r9]
   14001d5a7:	scas   eax,DWORD PTR es:[rdi]
   14001d5a8:	adc    ch,BYTE PTR [rdi+rbp*2-0x5239da53]
   14001d5af:	lods   al,BYTE PTR ds:[rsi]
   14001d5b0:	sbb    BYTE PTR [rcx-0x14d0580f],al
   14001d5b6:	xor    esp,DWORD PTR [rsi-0x5b8aaa8a]
   14001d5bc:	rex.B (bad) 
   14001d5be:	mov    bh,0xa5
   14001d5c0:	(bad)  
   14001d5c1:	sub    eax,edi
   14001d5c3:	movabs al,ds:0xa37cfdaaa13a43f3
   14001d5cc:	popf   
   14001d5cd:	xchg   edi,eax
   14001d5ce:	mov    esi,0xc473d0a2
   14001d5d3:	mov    ch,0xe7
   14001d5d5:	sbb    DWORD PTR [rsi],eax
   14001d5d7:	mov    ah,0xbe
   14001d5d9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d5da:	mov    sil,0x89
   14001d5dd:	int    0x82
   14001d5df:	mov    bh,0xc
   14001d5e1:	fcmovne st,st(5)
   14001d5e3:	mov    dl,0x3b
   14001d5e5:	mov    cl,0xf
   14001d5e7:	mov    bl,0x62
   14001d5e9:	cmovns esi,DWORD PTR [rcx-0x4f749aab]
   14001d5f0:	push   0x5fbbd722
   14001d5f5:	adc    rax,0x53f606ba
   14001d5fb:	mov    eax,0xb9919c31
   14001d600:	mov    ah,0x8a
   14001d602:	fidivr WORD PTR [rbx+rax*4-0x2542e320]
   14001d609:	pop    rsi
   14001d60a:	pop    rdx
   14001d60b:	mov    edi,0xbe9834ed
   14001d610:	add    BYTE PTR [rax],al
   14001d612:	add    BYTE PTR [rax],al
   14001d614:	gs addr32 mov esp,0x9c88bb8
   14001d61b:	stos   BYTE PTR es:[rdi],al
   14001d61c:	out    dx,al
   14001d61d:	scas   eax,DWORD PTR es:[rdi]
   14001d61e:	mov    ch,0x12
   14001d620:	push   rdi
   14001d621:	xchg   edi,eax
   14001d622:	(bad)  
   14001d623:	(bad)  
   14001d624:	xor    dh,al
   14001d626:	fidiv  WORD PTR [rdi]
   14001d628:	fcomp  QWORD PTR [rdi+0x6b]
   14001d62b:	and    eax,0x9dd738b9
   14001d630:	out    dx,eax
   14001d631:	sub    BYTE PTR [rbp+rax*8+0x7d084f8a],dh
   14001d638:	fs loopne 0x14001d5f8
   14001d63b:	outs   dx,DWORD PTR ds:[rsi]
   14001d63c:	add    DWORD PTR [rdi-0x404728ff],eax
   14001d642:	(bad)  
   14001d643:	rex.WX fstp st(0)
   14001d646:	push   0xfffffffffffffff2
   14001d648:	xor    esi,DWORD PTR [rdi-0x21]
   14001d64b:	loopne 0x14001d6a3
   14001d64d:	adc    BYTE PTR [rbx+0x58],ah
   14001d650:	lahf   
   14001d651:	push   rdi
   14001d652:	sbb    DWORD PTR [rax-0x6],edx
   14001d655:	xor    BYTE PTR [rbp+0x109f14e8],ah
   14001d65b:	cli    
   14001d65c:	jno    0x14001d656
   14001d65e:	lods   al,BYTE PTR ds:[rsi]
   14001d65f:	rex.X enter 0x7bc0,0xdf
   14001d664:	lods   eax,DWORD PTR ds:[rsi]
   14001d665:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d666:	(bad)  
   14001d667:	rex.XB or BYTE PTR [r10d+0x75],sil
   14001d66c:	outs   dx,DWORD PTR es:[rsi]
   14001d66e:	(bad)  
   14001d66f:	int    0x70
   14001d671:	jg     0x14001d620
   14001d673:	xchg   ebp,eax
   14001d674:	adc    eax,0xfb2d1118
   14001d679:	mov    bh,0xa4
   14001d67b:	(bad)  
   14001d67c:	sahf   
   14001d67d:	rcr    BYTE PTR [rax],1
   14001d67f:	xchg   DWORD PTR [rdi],esp
   14001d681:	call   0xcf43f155
   14001d686:	jae    0x14001d62a
   14001d688:	lods   al,BYTE PTR ds:[rsi]
   14001d689:	and    dh,al
   14001d68b:	mov    al,0xc9
   14001d68d:	rex.RXB jp 0x14001d698
   14001d690:	ds scas eax,DWORD PTR es:[rdi]
   14001d692:	xor    ah,BYTE PTR [rax+0x188ec85b]
   14001d698:	mov    ch,0x67
   14001d69a:	cmp    ecx,DWORD PTR [rdx]
   14001d69c:	rol    BYTE PTR [rax],1
   14001d69e:	xchg   DWORD PTR [rdx+0x2f503869],esi
   14001d6a4:	or     al,0x5f
   14001d6a6:	in     al,dx
   14001d6a7:	xchg   edi,eax
   14001d6a8:	loop   0x14001d69a
   14001d6aa:	pop    rcx
   14001d6ab:	test   DWORD PTR [rdi-0x2ec21a69],eax
   14001d6b1:	xchg   DWORD PTR [rsi+0x3ae0b465],eax
   14001d6b7:	fstp   QWORD PTR [rdx+0x4f]
   14001d6ba:	(bad)  
   14001d6bb:	iret   
   14001d6bc:	(bad)  
   14001d6bd:	sub    BYTE PTR [rbx],dh
   14001d6bf:	ja     0x14001d647
   14001d6c1:	adc    ah,ah
   14001d6c3:	(bad)  
   14001d6c4:	jrcxz  0x14001d73d
   14001d6c6:	pop    rax
   14001d6c7:	push   rdx
   14001d6c8:	or     eax,0x6840edd8
   14001d6cd:	mov    edi,0xf8a1f851
   14001d6d2:	sub    esi,eax
   14001d6d4:	(bad)  
   14001d6d5:	lahf   
   14001d6d6:	xchg   edi,eax
   14001d6d7:	rex.W sub sil,BYTE PTR [rax]
   14001d6da:	and    bl,BYTE PTR [rdx+0x4f]
   14001d6dd:	push   rdi
   14001d6de:	sahf   
   14001d6df:	loop   0x14001d6d7
   14001d6e1:	outs   dx,DWORD PTR ds:[rsi]
   14001d6e2:	rex.WB jg 0x14001d678
   14001d6e5:	or     ch,dh
   14001d6e7:	(bad)  
   14001d6e8:	jge    0x14001d691
   14001d6ea:	rex (bad) 
   14001d6ec:	sbb    al,al
   14001d6ee:	cld    
   14001d6ef:	ins    DWORD PTR es:[rdi],dx
   14001d6f0:	rex.WRX rcr BYTE PTR [rdi+0x23b72b35],1
   14001d6f7:	(bad)  
   14001d6f8:	(bad)
   14001d6fb:	lahf   
   14001d6fc:	movabs al,ds:0x7cbafd4719272a7f
   14001d705:	and    BYTE PTR [rcx+0x2],al
   14001d708:	xchg   edx,eax
   14001d709:	(bad)  
   14001d70a:	hlt    
   14001d70b:	adc    bh,dh
   14001d70d:	call   0x1983f7f5a
   14001d712:	adc    al,0x9b
   14001d714:	pop    rax
   14001d715:	(bad)  
   14001d716:	test   al,0x23
   14001d718:	mov    dh,0x90
   14001d71a:	sbb    eax,0xa1f7d331
   14001d71f:	mov    DWORD PTR [rdx-0x31],ebp
   14001d722:	jbe    0x14001d738
   14001d724:	push   gs
   14001d726:	retf   0xe1ac
   14001d729:	(bad)  
   14001d72a:	jg     0x14001d6ea
   14001d72c:	test   BYTE PTR [rax-0x3d],ah
   14001d72f:	(bad)  
   14001d730:	shl    BYTE PTR [rax-0x60],cl
   14001d733:	pop    rsi
   14001d734:	mov    bh,0x17
   14001d736:	sbb    al,0xe6
   14001d738:	pop    rcx
   14001d739:	mov    eax,0xdf3cf4a9
   14001d73e:	adc    eax,0xc2e7854c
   14001d743:	shl    eax,1
   14001d745:	cmp    BYTE PTR [rsi+0x69],0xe
   14001d749:	(bad)  
   14001d74a:	retf   
   14001d74b:	jnp    0x14001d7b8
   14001d74d:	rex.W ja 0x14001d713
   14001d750:	movabs ds:0x2973b168c7cb0d0f,al
   14001d759:	mov    DWORD PTR [rcx+riz*2],0xd9b8a04c
   14001d760:	cmc    
   14001d761:	cwde   
   14001d762:	outs   dx,DWORD PTR ds:[rsi]
   14001d763:	rex.R xchg eax,eax
   14001d765:	call   rbx
   14001d767:	cld    
   14001d768:	jle    0x14001d7ba
   14001d76a:	data16 out dx,al
   14001d76c:	sbb    esi,DWORD PTR [rdi]
   14001d76e:	ficom  DWORD PTR [rsi+0x4d]
   14001d771:	(bad)  
   14001d772:	mov    ecx,0x540280e
   14001d777:	mov    dh,0xc6
   14001d779:	out    dx,eax
   14001d77a:	mov    al,0xa4
   14001d77c:	movabs ds:0x7f81dbb01a1c0c88,eax
   14001d785:	xlat   BYTE PTR ds:[rbx]
   14001d786:	cmp    DWORD PTR [ecx-0xbd42d88],edx
   14001d78d:	(bad)  
   14001d78e:	outs   dx,BYTE PTR ds:[rsi]
   14001d78f:	xchg   ebx,eax
   14001d790:	add    esi,edi
   14001d792:	cmp    esp,DWORD PTR es:[rsi-0x70]
   14001d796:	(bad)  
   14001d797:	or     DWORD PTR [rax-0x126ed0c1],0x58
   14001d79e:	xchg   ebx,eax
   14001d79f:	sub    DWORD PTR [rax+riz*2+0x44],edx
   14001d7a3:	mov    ah,0x31
   14001d7a5:	(bad)  
   14001d7a6:	clc    
   14001d7a7:	or     al,0xdf
   14001d7a9:	test   al,0x4d
   14001d7ab:	(bad)  
   14001d7ac:	mov    edx,0xeca6f1cf
   14001d7b1:	fist   WORD PTR [rdx+0x2eb889fe]
   14001d7b7:	rex.RX
   14001d7b8:	addr32 (bad) 
   14001d7ba:	fwait
   14001d7bb:	push   rsp
   14001d7bc:	add    dh,BYTE PTR [rax+0x27]
   14001d7bf:	in     al,dx
   14001d7c0:	mov    ebx,0xde71f048
   14001d7c5:	(bad)  
   14001d7c6:	rex.WR leave 
   14001d7c8:	xor    BYTE PTR [rax-0x18aa2407],al
   14001d7ce:	movsxd r11d,DWORD PTR [r8+riz*4-0x380694c1]
   14001d7d6:	adc    ebx,0x17
   14001d7d9:	push   0xf72c136
   14001d7de:	mov    bh,BYTE PTR [rcx-0x35]
   14001d7e1:	(bad)  
   14001d7e2:	pop    rbp
   14001d7e3:	in     al,0xae
   14001d7e5:	push   rax
   14001d7e6:	loope  0x14001d844
   14001d7e8:	rex call QWORD PTR [rsi+rcx*2+0x25]
   14001d7ed:	cwde   
   14001d7ee:	call   0xcb8a4be9
   14001d7f3:	scas   al,BYTE PTR es:[rdi]
   14001d7f4:	(bad)  
   14001d7f5:	out    dx,eax
   14001d7f6:	(bad)  
   14001d7f7:	(bad)  
   14001d7f8:	clc    
   14001d7f9:	rex (bad) 
   14001d7fb:	add    al,0x9d
   14001d7fd:	(bad)  
   14001d7fe:	ds mov esp,0x21e91f24
   14001d804:	rex.B js 0x14001d85c
   14001d807:	cdq    
   14001d808:	scas   eax,DWORD PTR es:[rdi]
   14001d809:	xlat   BYTE PTR ds:[rbx]
   14001d80a:	loopne 0x14001d797
   14001d80c:	retf   0x5cb0
   14001d80f:	xor    edi,DWORD PTR [rbx]
   14001d811:	mov    dh,0x59
   14001d813:	in     eax,dx
   14001d814:	pop    rsi
   14001d815:	shl    ebp,1
   14001d817:	push   rbp
   14001d818:	mov    al,0x7e
   14001d81a:	push   rax
   14001d81b:	rex.RXB (bad) 
   14001d81d:	sbb    esp,ebp
   14001d81f:	jmp    FWORD PTR [rcx+riz*1+0x3b]
   14001d823:	(bad)  
   14001d824:	or     DWORD PTR [rsi-0x79],eax
   14001d827:	(bad)  
   14001d829:	jmp    0xce84a060
   14001d82e:	mov    ?,WORD PTR [rax-0x2c]
   14001d831:	sahf   
   14001d832:	in     eax,dx
   14001d833:	sub    BYTE PTR [rcx+0x5f9051f9],dh
   14001d839:	push   rsi
   14001d83a:	in     al,0x82
   14001d83c:	cmp    dh,BYTE PTR [rcx]
   14001d83e:	pop    rax
   14001d83f:	cmp    al,BYTE PTR [rbx-0x195870f7]
   14001d845:	outs   dx,BYTE PTR ds:[rsi]
   14001d846:	xor    ebx,DWORD PTR [rdi]
   14001d848:	or     cl,al
   14001d84a:	xchg   BYTE PTR [rip+0xffffffffb53aa66d],cl        # 0xf53c7ebd
   14001d850:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d851:	loope  0x14001d893
   14001d853:	mov    ebp,0x5fc86c1
   14001d858:	(bad)  
   14001d859:	sub    DWORD PTR [rcx+0x17],ecx
   14001d85c:	rex.WX
   14001d85d:	rex.WRX cmc 
   14001d85f:	scas   eax,DWORD PTR es:[rdi]
   14001d860:	repz jbe 0x14001d885
   14001d863:	xor    dl,BYTE PTR [rsi+0x788a9e11]
   14001d869:	mov    esi,0xd91d982b
   14001d86e:	xchg   edi,eax
   14001d86f:	and    BYTE PTR [rbx-0x37],cl
   14001d872:	hlt    
   14001d873:	js     0x14001d8a3
   14001d875:	scas   al,BYTE PTR es:[rdi]
   14001d876:	rex.W rol al,0x1
   14001d87a:	std    
   14001d87b:	shl    BYTE PTR [rbp+0x1c6a4166],cl
   14001d881:	pop    rsi
   14001d882:	xchg   esi,eax
   14001d883:	idiv   DWORD PTR [rcx+0x39]
   14001d886:	sub    cl,BYTE PTR [rdi-0x69]
   14001d889:	xchg   esi,eax
   14001d88a:	lahf   
   14001d88b:	pop    rbp
   14001d88c:	repnz icebp 
   14001d88e:	and    esp,ebp
   14001d890:	add    eax,0x604d6b19
   14001d895:	jle    0x14001d86e
   14001d897:	cmc    
   14001d898:	mov    ss,ecx
   14001d89a:	(bad)  
   14001d89b:	out    0xeb,eax
   14001d89d:	mov    dh,0xde
   14001d89f:	pop    rdi
   14001d8a0:	push   rdx
   14001d8a1:	mov    cs,WORD PTR [rcx]
   14001d8a3:	ret    0xe937
   14001d8a6:	mov    ch,0x7a
   14001d8a8:	fld    DWORD PTR [rsi+0x0]
   14001d8ab:	push   0xffffffffd0bc21bc
   14001d8b0:	(bad)  
   14001d8b1:	xor    edi,ebx
   14001d8b3:	mov    BYTE PTR [rdi+0x61306356],cl
   14001d8b9:	stc    
   14001d8ba:	(bad)  
   14001d8bb:	and    al,BYTE PTR [rsi+rbx*4]
   14001d8be:	push   0xffffffffffffff9a
   14001d8c0:	mov    ebp,0xd807bda6
   14001d8c5:	rol    DWORD PTR [rcx],0xbf
   14001d8c8:	outs   dx,BYTE PTR ss:[rsi]
   14001d8ca:	mov    ah,0xad
   14001d8cc:	push   rbx
   14001d8cd:	or     DWORD PTR [rax],ecx
   14001d8cf:	adc    eax,0x1d724e9a
   14001d8d4:	jmp    FWORD PTR [rcx]
   14001d8d6:	(bad)  
   14001d8d7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d8d8:	adc    DWORD PTR [rsi-0x1e8b4885],eax
   14001d8de:	(bad)  
   14001d8df:	bswap  ebp
   14001d8e1:	fst    DWORD PTR [rax]
   14001d8e3:	xchg   edx,eax
   14001d8e4:	test   al,0xbe
   14001d8e6:	lods   al,BYTE PTR ds:[rsi]
   14001d8e7:	sub    al,BYTE PTR [rsi+0x11]
   14001d8ea:	sbb    DWORD PTR [rax],edi
   14001d8ec:	and    esi,DWORD PTR [rsi-0x5b]
   14001d8ef:	xor    BYTE PTR [rbp+0x66],0xc6
   14001d8f3:	fcom   DWORD PTR [rax]
   14001d8f5:	add    DWORD PTR [rdx+0x60],edi
   14001d8f8:	(bad)  
   14001d8f9:	scas   al,BYTE PTR es:[rdi]
   14001d8fa:	iret   
   14001d8fb:	jb     0x14001d898
   14001d8fd:	leave  
   14001d8fe:	jae    0x14001d8ca
   14001d900:	and    dh,cl
   14001d902:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d903:	push   rdi
   14001d904:	rex.RXB xchg r14d,eax
   14001d906:	sbb    bh,ch
   14001d908:	test   eax,0xccfdad39
   14001d90d:	pop    rsi
   14001d90e:	adc    DWORD PTR [rbp+0x6],eax
   14001d911:	out    dx,al
   14001d912:	rex.WRB jbe 0x14001d978
   14001d915:	mov    ecx,esi
   14001d917:	(bad)  
   14001d918:	lea    esp,[rsi]
   14001d91a:	rex.R fsub st(0),st
   14001d91d:	rex.B clc 
   14001d91f:	fs push rcx
   14001d921:	jns    0x14001d952
   14001d923:	stc    
   14001d924:	xor    al,0x1e
   14001d926:	xchg   ebx,eax
   14001d927:	fidiv  DWORD PTR [r9-0x2940acda]
   14001d92e:	(bad)  
   14001d92f:	jmp    0x14001d91a
   14001d931:	(bad)  
   14001d932:	stc    
   14001d933:	mov    bl,0x8c
   14001d935:	movabs eax,ds:0x690719f00e620b45
   14001d93e:	rex.WR movabs rax,ds:0x842736db3c9b51be
   14001d948:	xor    eax,0x50969299
   14001d94d:	(bad)  
   14001d94e:	cs cs cdq 
   14001d951:	mov    ecx,0xdefc2654
   14001d956:	call   0x19d72ebf9
   14001d95b:	mov    WORD PTR [rdi+0x16],?
   14001d95e:	loope  0x14001d994
   14001d960:	(bad)  
   14001d961:	cs ss test eax,0x118a49ab
   14001d968:	rex.RB out 0x3f,al
   14001d96b:	add    esp,DWORD PTR [rax]
   14001d96d:	add    DWORD PTR [rbx-0x1f6e8945],0x5cf613e3
   14001d977:	pop    rbx
   14001d978:	std    
   14001d979:	pop    rcx
   14001d97a:	jmp    0x1954071c8
   14001d97f:	icebp  
   14001d980:	and    DWORD PTR [rsi],eax
   14001d982:	(bad)  
   14001d983:	ins    BYTE PTR es:[rdi],dx
   14001d984:	rex.R (bad) 
   14001d986:	ds (bad) 
   14001d988:	stos   BYTE PTR es:[rdi],al
   14001d989:	(bad)  
   14001d98a:	mov    eax,esi
   14001d98c:	iret   
   14001d98d:	test   eax,0x41387e37
   14001d992:	jg     0x14001d96a
   14001d994:	pop    rbp
   14001d995:	es ret 
   14001d997:	outs   dx,BYTE PTR ds:[rsi]
   14001d998:	mov    bl,0x89
   14001d99a:	jbe    0x14001da18
   14001d99c:	(bad)  
   14001d99d:	out    dx,al
   14001d99e:	retf   0x6fc4
   14001d9a1:	(bad)  
   14001d9a2:	sbb    eax,0xa1b10a59
   14001d9a7:	loope  0x14001d98d
   14001d9a9:	(bad)  
   14001d9aa:	adc    al,0xf3
   14001d9ac:	cmp    DWORD PTR [rcx-0x58],0xcb69d74b
   14001d9b3:	adc    esi,DWORD PTR [rdx+0x5cab770e]
   14001d9b9:	movabs eax,ds:0xfe80017ec639b9c2
   14001d9c2:	test   eax,0x1599e59c
   14001d9c7:	and    al,0xb
   14001d9c9:	movabs al,ss:0x6616a78e1c516e36
   14001d9d3:	xchg   dl,al
   14001d9d5:	jno    0x14001d9b1
   14001d9d7:	ds sub al,0xde
   14001d9da:	outs   dx,DWORD PTR ds:[rsi]
   14001d9db:	sub    al,0x49
   14001d9dd:	mov    ecx,0x81f094d3
   14001d9e2:	add    al,0x9
   14001d9e4:	xchg   ebp,eax
   14001d9e5:	out    0xb8,al
   14001d9e7:	mov    cl,0x7b
   14001d9e9:	rex.WB or rax,0xffffffffb12e1ea3
   14001d9ef:	sbb    ecx,DWORD PTR [rax+0x3e]
   14001d9f2:	rol    BYTE PTR [rbx+0x2d],cl
   14001d9f5:	pop    rcx
   14001d9f6:	outs   dx,BYTE PTR ds:[rsi]
   14001d9f7:	sti    
   14001d9f8:	ret    
   14001d9f9:	neg    bl
   14001d9fb:	jmp    0x191696ba6
   14001da00:	(bad)  
   14001da01:	test   eax,0xce7accb0
   14001da06:	or     al,0x74
   14001da08:	xchg   esp,eax
   14001da09:	(bad)  
   14001da0a:	mov    ecx,0x506f166
   14001da0f:	fiadd  WORD PTR [rax]
   14001da11:	add    BYTE PTR [rax],al
   14001da13:	add    BYTE PTR [rdi+0x7],dh
   14001da16:	xor    BYTE PTR [rsi+0x2c610eee],dl
   14001da1c:	cdq    
   14001da1d:	or     DWORD PTR [rcx-0x46],edx
   14001da20:	(bad)  
   14001da21:	ins    DWORD PTR es:[rdi],dx
   14001da22:	(bad)  
   14001da23:	sbb    DWORD PTR [rax+0x6a],esi
   14001da26:	hlt    
   14001da27:	(bad)
   14001da2b:	xor    eax,0xa395649e
   14001da30:	(bad)  
   14001da31:	fisttp DWORD PTR [rax-0x472386ce]
   14001da37:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001da38:	loopne 0x14001da0f
   14001da3a:	jmp    0x119d4715d
   14001da3f:	mov    BYTE PTR [rcx],cl
   14001da41:	mov    dh,0x4c
   14001da43:	sub    edi,DWORD PTR [rsi-0x4f]
   14001da46:	jl     0x14001da05
   14001da48:	out    0xb8,eax
   14001da4a:	sub    eax,0x1dbf9007
   14001da4f:	xchg   ecx,eax
   14001da50:	sbb    eax,0x6a6410b7
   14001da55:	mov    al,0x20
   14001da57:	repnz repz mov ecx,0xbe844871
   14001da5e:	ficomp WORD PTR [r10]
   14001da61:	fcmovbe st,st(4)
   14001da63:	jge    0x14001dad2
   14001da65:	fucom  st(4)
   14001da67:	jmp    0x14001da5d
   14001da69:	(bad)  
   14001da6a:	mov    ch,0x51
   14001da6c:	adc    ebx,0xffffff85
   14001da6f:	(bad)  
   14001da70:	adc    ebp,DWORD PTR [rax+rbx*4+0x56]
   14001da74:	imul   ebp,DWORD PTR fs:[rax-0x69d0240],0x7a
   14001da7c:	mov    ah,BYTE PTR [rbp-0x37]
   14001da7f:	in     al,dx
   14001da80:	adc    al,0x1
   14001da82:	pop    rsp
   14001da83:	rex.WRXB movsxd r8,DWORD PTR [r14]
   14001da86:	ins    BYTE PTR es:[rdi],dx
   14001da87:	fsqrt  
   14001da89:	(bad)  
   14001da8b:	movsxd ecx,DWORD PTR [rbp+0x3bf50d08]
   14001da91:	outs   dx,BYTE PTR ds:[rsi]
   14001da92:	and    al,cl
   14001da94:	imul   r10,QWORD PTR [rax],0x4160d55e
   14001da9b:	in     al,0xa2
   14001da9d:	addr32 jno 0x14001db12
   14001daa0:	cmp    al,0x3
   14001daa2:	in     al,0xd1
   14001daa4:	rex.WXB add al,0xd4
   14001daa7:	rex.RXB ror BYTE PTR [rip+0xaa5fd85],cl        # 0x14aa7d833
   14001daae:	mov    ch,0x6b
   14001dab0:	xor    eax,0x42faa8b5
   14001dab5:	mov    dl,0x98
   14001dab7:	ins    BYTE PTR es:[rdi],dx
   14001dab8:	fstp   TBYTE PTR [rbx-0x43532937]
   14001dabe:	stc    
   14001dabf:	xor    bl,al
   14001dac2:	ins    BYTE PTR es:[rdi],dx
   14001dac3:	jrcxz  0x14001db0a
   14001dac5:	fistp  WORD PTR [rbp+rsi*2-0x24]
   14001dac9:	(bad)  
   14001daca:	or     eax,0x3dd1abcf
   14001dacf:	pop    rcx
   14001dad0:	fnstenv es:[rax]
   14001dad3:	lods   al,BYTE PTR ds:[rsi]
   14001dad4:	push   rcx
   14001dad5:	fiadd  WORD PTR [rax]
   14001dad7:	cmp    cl,al
   14001dad9:	xlat   BYTE PTR ds:[rbx]
   14001dada:	push   rcx
   14001dadb:	cmp    BYTE PTR [rdi+0x211661d0],0xb4
   14001dae2:	hlt    
   14001dae3:	mov    ch,0x56
   14001dae5:	mov    bl,0xc4
   14001dae7:	and    ecx,edi
   14001dae9:	mov    edx,0xbdb89995
   14001daee:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001daef:	movaps xmm0,XMMWORD PTR [rdx]
   14001daf2:	mov    eax,0x88055f9e
   14001daf7:	or     dh,al
   14001daf9:	or     al,0xd9
   14001dafb:	mov    dl,0xb1
   14001dafd:	or     ebp,ecx
   14001daff:	and    al,0x2f
   14001db01:	outs   dx,DWORD PTR ds:[rsi]
   14001db02:	jl     0x14001da8b
   14001db04:	pop    rax
   14001db05:	push   0x61c1114c
   14001db0a:	sbb    eax,0x2d66b6ab
   14001db0f:	cmp    eax,0x9041dc76
   14001db14:	add    ebx,ebx
   14001db16:	jno    0x14001db1e
   14001db18:	cwde   
   14001db19:	shl    BYTE PTR [rax],cl
   14001db1b:	mov    esp,0x2a10d5ef
   14001db20:	jno    0x14001dad3
   14001db22:	test   DWORD PTR [rcx+0x1fb5b606],ecx
   14001db28:	lahf   
   14001db29:	mov    edi,0xb8e8a5e4
   14001db2e:	(bad)  
   14001db2f:	xor    edi,DWORD PTR [rax+0x7]
   14001db32:	leave  
   14001db33:	movabs ds:0x8ea8099634f9000f,al
   14001db3c:	loope  0x14001db4c
   14001db3e:	cwde   
   14001db3f:	sbb    BYTE PTR [rdi+0x6a],bh
   14001db42:	or     eax,0x3d6d08bb
   14001db47:	sub    eax,0x976c6491
   14001db4c:	out    0x63,al
   14001db4e:	pop    rsp
   14001db4f:	add    DWORD PTR [rbx+0x6b],ebp
   14001db52:	push   rcx
   14001db53:	hlt    
   14001db54:	sbb    al,0x6c
   14001db56:	(bad)  
   14001db57:	(bad)  
   14001db58:	test   DWORD PTR [rbp+0x30],esp
   14001db5b:	fdiv   st,st(2)
   14001db5d:	(bad)  
   14001db5e:	add    BYTE PTR [rsi+0x6c],cl
   14001db61:	(bad)  
   14001db62:	xchg   ebp,eax
   14001db63:	in     eax,dx
   14001db64:	sbb    eax,DWORD PTR [rcx]
   14001db66:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001db67:	jnp    0x14001daeb
   14001db69:	or     ah,dh
   14001db6b:	shl    ebp,0xf
   14001db6e:	(bad)  
   14001db6f:	push   rdi
   14001db70:	gs mov al,0xd9
   14001db73:	(bad)  
   14001db74:	adc    dh,BYTE PTR [rdi-0x4174af17]
   14001db7a:	mov    eax,0x88b9fcea
   14001db7f:	jl     0x14001dbe3
   14001db81:	fstp   QWORD PTR [rip+0x2dda15df]        # 0x16ddbf166
   14001db87:	mov    r11,ss
   14001db8a:	jl     0x14001db7f
   14001db8c:	sti    
   14001db8d:	(bad)  
   14001db8e:	rex.WR
   14001db8f:	gs rex.WRB mov r10b,0x61
   14001db93:	pop    rax
   14001db94:	cmp    dh,BYTE PTR [rbp-0x435c31af]
   14001db9a:	add    BYTE PTR [rsp+rdx*8-0x45],dh
   14001db9e:	xor    dl,ah
   14001dba0:	rex.WX fbld TBYTE PTR [rbp-0x6a27c2bf]
   14001dba7:	xlat   BYTE PTR ds:[rbx]
   14001dba8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001dba9:	rol    esp,1
   14001dbab:	ins    DWORD PTR es:[rdi],dx
   14001dbac:	rcl    esi,cl
   14001dbae:	hlt    
   14001dbaf:	sti    
   14001dbb0:	rex.XB imul ebp,r9d,0xd96e346a
   14001dbb7:	cld    
   14001dbb8:	lods   eax,DWORD PTR ds:[rsi]
   14001dbb9:	mov    BYTE PTR [esi-0x26],al
   14001dbbd:	(bad)  
   14001dbbe:	mov    eax,0x2d0444d0
   14001dbc3:	jae    0x14001dbf8
   14001dbc5:	add    ebx,DWORD PTR [rip+0x4c0aaae5]        # 0x18c0c86b0
   14001dbcb:	pop    rdi
   14001dbcc:	fisttp QWORD PTR [rip+0x550c97c]        # 0x14552a54e
   14001dbd2:	jno    0x14001dc10
   14001dbd4:	(bad)  
   14001dbd5:	add    al,BYTE PTR [rcx-0x56]
   14001dbd8:	mov    esi,0xc910100b
   14001dbdd:	or     al,0x20
   14001dbdf:	xchg   BYTE PTR [rdi+0x68],dl
   14001dbe2:	mov    ch,0x25
   14001dbe4:	and    BYTE PTR [rdi-0x7b],ch
   14001dbe7:	mov    bl,0xb9
   14001dbe9:	data16 (bad) 
   14001dbeb:	or     esi,ecx
   14001dbed:	(bad)  
   14001dbee:	in     al,0x9f
   14001dbf0:	pop    rsi
   14001dbf1:	fdivp  st(1),st
   14001dbf3:	(bad)  
   14001dbf4:	sub    ecx,ebx
   14001dbf6:	leave  
   14001dbf7:	cwde   
   14001dbf8:	mov    al,0xd0
   14001dbfa:	cwde   
   14001dbfb:	and    al,bh
   14001dbfd:	xlat   BYTE PTR ds:[rbx]
   14001dbfe:	test   al,0xb4
   14001dc00:	pop    rcx
   14001dc01:	mov    bl,0x3d
   14001dc03:	(bad)  
   14001dc04:	cs mov ah,0xd
   14001dc07:	xor    DWORD PTR [rdi-0x3fc4a343],0xedad6cba
   14001dc11:	mov    eax,0xbf9a2083
   14001dc16:	mov    bl,0xb6
   14001dc18:	add    esi,DWORD PTR [rsi-0x4e8bf31e]
   14001dc1e:	rcr    BYTE PTR [rdx+0x3947d5ea],cl
   14001dc24:	popf   
   14001dc25:	shl    BYTE PTR [rdi-0x51],cl
   14001dc28:	add    al,0xdb
   14001dc2a:	es adc eax,0x8316dc73
   14001dc30:	jrcxz  0x14001dc95
   14001dc32:	or     edx,DWORD PTR [rdx]
   14001dc34:	xchg   esp,eax
   14001dc35:	cmp    eax,DWORD PTR fs:[rbp+rcx*1+0x7a3e6a6d]
   14001dc3d:	push   0x5a
   14001dc3f:	test   al,0xe4
   14001dc41:	(bad)  
   14001dc42:	iret   
   14001dc43:	or     edx,DWORD PTR [rbx+0xa9dff09]
   14001dc49:	add    BYTE PTR [rsi-0x61f882d9],ch
   14001dc4f:	mov    cl,0xf0
   14001dc51:	setae  BYTE PTR [rdi+rax*4+0x8]
   14001dc56:	movabs ds:0xc2066968f2011ed2,eax
   14001dc5f:	(bad)  
   14001dc60:	mul    DWORD PTR [rdx+0x57]
   14001dc63:	pop    rbp
   14001dc64:	and    BYTE PTR [rbp+0x67],0xcb
   14001dc68:	sbb    DWORD PTR [rsi+rsi*1+0x71],ebp
   14001dc6c:	outs   dx,BYTE PTR ds:[rsi]
   14001dc6d:	imul   eax,DWORD PTR [rsi],0xffffffe7
   14001dc70:	(bad)  
   14001dc71:	(bad)  
   14001dc72:	sbb    esi,DWORD PTR [rsi-0x77]
   14001dc75:	shr    DWORD PTR [rbx],cl
   14001dc77:	loopne 0x14001dc89
   14001dc79:	fidivr DWORD PTR [rdx+0x5a]
   14001dc7c:	fisttp QWORD PTR [edx-0x34]
   14001dc80:	stc    
   14001dc81:	mov    ecx,0xbe8e6fdf
   14001dc86:	out    dx,eax
   14001dc87:	stc    
   14001dc88:	(bad)  
   14001dc89:	mov    bh,0xbe
   14001dc8b:	rex.XB (bad) 
   14001dc8d:	mov    al,0x8e
   14001dc8f:	(bad)  
   14001dc90:	(bad)  
   14001dc91:	(bad)  
   14001dc92:	movabs ds:0xc2d8387e93d1a1e8,eax
   14001dc9b:	(bad)  
   14001dc9c:	rex.WRXB fcomip st,st(2)
   14001dc9f:	push   rdx
   14001dca0:	sar    DWORD PTR [rbx-0x43590e99],1
   14001dca6:	push   rdi
   14001dca7:	addr32 (bad) 
   14001dca9:	mov    ch,0x6
   14001dcab:	fisttp QWORD PTR [rax-0x4e]
   14001dcae:	rex.WXB fmul DWORD PTR ss:[rip+0xaafda2b]        # 0x14ab1b6e1
   14001dcb6:	sbb    ecx,DWORD PTR [rsi+rsi*1+0x3]
   14001dcba:	rex.WX test BYTE PTR [rcx+0x4],0x7a
   14001dcbf:	(bad)  
   14001dcc0:	fbld   TBYTE PTR [rax-0x11]
   14001dcc3:	ret    
   14001dcc4:	test   al,0x67
   14001dcc6:	fist   WORD PTR [rbp+0x31]
   14001dcc9:	outs   dx,BYTE PTR ds:[rsi]
   14001dcca:	mov    gs,edi
   14001dccc:	rex.RX imul r15d,DWORD PTR [rsi-0x4c9e3487],0x8366bc8c
   14001dcd7:	sbb    ah,BYTE PTR [rip+0x52a0d26f]        # 0x192a2af4c
   14001dcdd:	push   0xccc36e2
   14001dce2:	ja     0x14001dc79
   14001dce4:	mov    ebx,0x2203470b
   14001dce9:	add    dl,BYTE PTR [rsi]
   14001dceb:	mov    ecx,0x2f260555
   14001dcf0:	(bad)
   14001dcf3:	mov    esi,0x280bbdb2
   14001dcf8:	sub    esi,DWORD PTR [rdx+rbx*2+0x6ab35c92]
   14001dcff:	add    al,0xc2
   14001dd01:	xlat   BYTE PTR ds:[rbx]
   14001dd02:	jmp    QWORD PTR [rdi+0x31cfd0b5]
   14001dd08:	sub    al,0xd9
   14001dd0a:	sahf   
   14001dd0b:	mov    ebx,DWORD PTR [rbx-0x22]
   14001dd0e:	scas   al,BYTE PTR es:[rdi]
   14001dd0f:	sbb    eax,0xb0c2649b
   14001dd14:	in     al,dx
   14001dd15:	movsxd esi,edx
   14001dd17:	es jne 0x14001dd84
   14001dd1a:	movabs ds:0x6099c0a936d029c,eax
   14001dd23:	test   eax,0x3f360eeb
   14001dd28:	jb     0x14001dd31
   14001dd2a:	test   DWORD PTR [eip+0xffffffff95135700],eax        # 0xd5153431
   14001dd31:	mov    edi,0xb8e2824a
   14001dd36:	jp     0x14001dd4c
   14001dd38:	jnp    0x14001dceb
   14001dd3a:	sub    ebp,DWORD PTR [rsi+0x381bb60c]
   14001dd40:	xchg   edx,eax
   14001dd41:	ror    BYTE PTR [rsi-0x412a1a65],cl
   14001dd47:	or     eax,0xb7efdc7c
   14001dd4c:	or     ebx,ebx
   14001dd4e:	fbld   TBYTE PTR [rcx]
   14001dd50:	xchg   bl,dl
   14001dd52:	rcl    ah,cl
   14001dd54:	icebp  
   14001dd55:	(bad)  
   14001dd56:	loop   0x14001dd9a
   14001dd58:	push   0x1ff8b3dd
   14001dd5d:	fiadd  DWORD PTR [rbx+0x16be816e]
   14001dd63:	int    0xf6
   14001dd65:	mov    ecx,0xb06f5b26
   14001dd6a:	ja     0x14001dd4d
   14001dd6c:	sbb    BYTE PTR [rdi+0x8887747],dh
   14001dd72:	pop    rdx
   14001dd73:	out    0xff,al
   14001dd75:	punpckhdq mm6,QWORD PTR [rax+0x66]
   14001dd79:	(bad)  
   14001dd7a:	cmp    ecx,edx
   14001dd7c:	adc    DWORD PTR [rcx],eax
   14001dd7e:	or     ebx,DWORD PTR [rdi+rcx*4+0x65]
   14001dd82:	sahf   
   14001dd83:	(bad)  
   14001dd84:	clc    
   14001dd85:	(bad)  
   14001dd86:	scas   al,BYTE PTR es:[rdi]
   14001dd87:	imul   esp,DWORD PTR [rcx+0x6b],0x6c16d3ff
   14001dd8e:	iret   
   14001dd8f:	rex.RB movabs al,ds:0x4eeed20dd778e20a
   14001dd99:	add    al,0x83
   14001dd9b:	push   rsp
   14001dd9c:	cmp    DWORD PTR [rbx],eax
   14001dd9e:	mov    bl,0xc2
   14001dda0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001dda1:	addr32 es (bad) 
   14001dda4:	shl    BYTE PTR [rax+0x16],1
   14001dda7:	test   DWORD PTR [rcx+0x69],0x6e3e4d47
   14001ddae:	ja     0x14001dd8b
   14001ddb0:	scas   al,BYTE PTR es:[rdi]
   14001ddb1:	shr    DWORD PTR [rdx+0x4a],1
   14001ddb4:	(bad)  
   14001ddb6:	pop    rdx
   14001ddb7:	fadd   QWORD PTR [rax-0x21]
   14001ddba:	or     esp,DWORD PTR [rsi+0x37]
   14001ddbd:	fdivr  DWORD PTR [rbx]
   14001ddbf:	lock test eax,0xde53aebc
   14001ddc5:	mov    ebx,0xb247c59e
   14001ddca:	iret   
   14001ddcb:	jg     0x14001ddfd
   14001ddcd:	mov    ch,0xff
   14001ddcf:	jmp    0x15cf49b91
   14001ddd4:	retf   0xc2ba
   14001ddd7:	mov    dl,BYTE PTR [rbx-0x4d]
   14001ddda:	xchg   ebx,eax
   14001dddb:	xor    BYTE PTR [rsp+rsi*4],ah
   14001ddde:	movabs ds:0x6d7cd0536d0baa6,eax
   14001dde7:	xchg   ebx,eax
   14001dde8:	push   rsp
   14001dde9:	ficom  WORD PTR [rdi+0x29]
   14001ddec:	and    ebx,ecx
   14001ddee:	addr32 mov edi,0x2e7a66b3
   14001ddf4:	(bad)
   14001ddf8:	pop    rbp
   14001ddf9:	push   0x6f2a021b
   14001ddfe:	sub    edx,DWORD PTR [rsp+rsi*4-0x3cc841f5]
   14001de05:	or     al,0x8e
   14001de07:	movabs eax,ds:0x8def022d1bdf055a
   14001de10:	add    BYTE PTR [rax],al
   14001de12:	add    BYTE PTR [rax],al
   14001de14:	sbb    DWORD PTR [rbx],ebx
   14001de16:	xor    DWORD PTR [rcx+0x32],eax
   14001de19:	ss (bad) 
   14001de1c:	sub    ebp,DWORD PTR [rip+0x6c64c353]        # 0x1ac66a175
   14001de22:	(bad)
   14001de25:	ja     0x14001de1b
   14001de27:	rex.RB push r14
   14001de29:	pop    rdx
   14001de2a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001de2b:	xchg   BYTE PTR [rdi+0x41],cl
   14001de2e:	xchg   esi,eax
   14001de2f:	(bad)  
   14001de30:	enter  0x8ad9,0x8
   14001de34:	rol    edx,1
   14001de36:	mov    ebx,0xe8effa49
   14001de3b:	mov    ah,bl
   14001de3d:	hlt    
   14001de3e:	fxch   st(3)
   14001de40:	lods   al,BYTE PTR ds:[rsi]
   14001de41:	mov    ch,0x4f
   14001de43:	or     al,0xb5
   14001de45:	scas   al,BYTE PTR es:[rdi]
   14001de46:	jle    0x14001de95
   14001de48:	sahf   
   14001de49:	sub    DWORD PTR [rip+0x1c98878e],0xffffffcf        # 0x15c9a65de
   14001de50:	rex.WX ret 0x5112
   14001de54:	push   rbx
   14001de55:	fldenv [rbx]
   14001de57:	adc    BYTE PTR [rax-0xc],bh
   14001de5a:	jo     0x14001de2f
   14001de5c:	(bad)  
   14001de5d:	out    dx,eax
   14001de5e:	xchg   r10d,eax
   14001de60:	cs scas al,BYTE PTR es:[rdi]
   14001de62:	xlat   BYTE PTR ds:[rbx]
   14001de63:	push   rbp
   14001de64:	(bad)  
   14001de65:	mov    ch,0xe6
   14001de67:	adc    al,0x1c
   14001de69:	cwde   
   14001de6a:	mov    ch,0xd7
   14001de6c:	add    eax,0x82968483
   14001de71:	sbb    ebx,DWORD PTR [rax-0x56ff64a7]
   14001de77:	sbb    BYTE PTR [rax-0x562405d3],dh
   14001de7d:	ss retf 
   14001de7f:	(bad)  
   14001de80:	out    0x77,al
   14001de82:	pop    rbp
   14001de83:	pop    rbp
   14001de84:	jmp    FWORD PTR [rsp+rbp*2+0x1c]
   14001de88:	(bad)  
   14001de89:	rex.B (bad) 
   14001de8b:	(bad)  
   14001de8d:	pop    rdx
   14001de8e:	(bad)  
   14001de8f:	sahf   
   14001de90:	xchg   ebp,eax
   14001de91:	test   BYTE PTR [rdx+riz*4],ah
   14001de94:	mov    WORD PTR [rdi-0x4d581ceb],ds
   14001de9a:	rex.RX and BYTE PTR [rsi-0xe9e8857],r15b
   14001dea1:	call   0x133ea8587
   14001dea6:	shl    bh,1
   14001dea8:	ret    
   14001dea9:	fiadd  WORD PTR [rbx-0x4d3a25dc]
   14001deaf:	gs pop rbp
   14001deb1:	pop    rbp
   14001deb2:	scas   al,BYTE PTR es:[rdi]
   14001deb3:	stos   BYTE PTR es:[rdi],al
   14001deb4:	rex.R
   14001deb5:	rex.RX lahf 
   14001deb7:	jmp    0x14001df28
   14001deb9:	imul   ecx,esp,0x28
   14001debc:	jbe    0x14001df2e
   14001debe:	std    
   14001debf:	imul   edi,DWORD PTR [rcx],0x20ae6b31
   14001dec5:	sub    bl,BYTE PTR [rdx-0x11]
   14001dec8:	or     eax,DWORD PTR [rdi]
   14001deca:	or     DWORD PTR [rdx+rdx*1],ebp
   14001decd:	sbb    al,0x38
   14001decf:	ins    DWORD PTR es:[rdi],dx
   14001ded0:	fild   WORD PTR [rsi+0x36]
   14001ded3:	repz (bad) 
   14001ded5:	pop    rbp
   14001ded6:	(bad)  
   14001ded7:	mov    dl,0xed
   14001ded9:	jo     0x14001df2f
   14001dedb:	jno    0x14001ded1
   14001dedd:	imul   esp,DWORD PTR [rbp+0x30],0xffffffbb
   14001dee1:	sub    dh,bl
   14001dee3:	mul    DWORD PTR [rdx-0x76493dcf]
   14001dee9:	sbb    al,0x91
   14001deeb:	jne    0x14001de7d
   14001deed:	(bad)  
   14001deee:	movabs al,ds:0x8d840efbbc9f1734
   14001def7:	mov    edx,0x79dea925
   14001defc:	cmp    al,0xb2
   14001defe:	out    dx,eax
   14001deff:	cmp    BYTE PTR [rbx-0xd],dh
   14001df02:	jns    0x14001df03
   14001df04:	push   0xffffffffffffffe8
   14001df06:	movabs rsi,0x3c2ade587d1bc541
   14001df10:	lock jns 0x14001df62
   14001df13:	add    eax,0x447e62e9
   14001df18:	ret    0x2d4f
   14001df1b:	xchg   ebx,ebx
   14001df1d:	push   rsp
   14001df1e:	sbb    al,0xc6
   14001df20:	xchg   esp,eax
   14001df21:	adc    eax,0xe8d018a
   14001df26:	mov    ebx,0xe823a640
   14001df2b:	cmp    DWORD PTR [rdi+0x38c2d938],0xffffffa0
   14001df32:	(bad)
   14001df35:	mov    ebx,0x960a4cf4
   14001df3a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001df3b:	(bad)  
   14001df3c:	adc    ecx,DWORD PTR [rbp-0x33a3316a]
   14001df42:	add    BYTE PTR [rcx],cl
   14001df44:	rex.RB xlat BYTE PTR ds:[rbx]
   14001df46:	xor    DWORD PTR [rax+0x6e],ecx
   14001df49:	cli    
   14001df4a:	(bad)  
   14001df4b:	mov    esi,DWORD PTR [rdi-0x1f]
   14001df4e:	push   rbx
   14001df4f:	retf   0xbbba
   14001df52:	pop    rbp
   14001df53:	push   rsp
   14001df54:	movabs ds:0x91d63f8d88156ca0,eax
   14001df5d:	xchg   esi,eax
   14001df5e:	(bad)  
   14001df5f:	xchg   edi,eax
   14001df60:	(bad)  
   14001df62:	cwde   
   14001df63:	push   rax
   14001df64:	(bad)  
   14001df65:	int3   
   14001df66:	test   eax,0xfae1ec11
   14001df6b:	shl    ch,cl
   14001df6d:	cli    
   14001df6e:	retf   
   14001df6f:	xchg   ebx,eax
   14001df70:	jb     0x14001dfd4
   14001df72:	xlat   BYTE PTR ds:[rbx]
   14001df73:	pop    rsp
   14001df74:	imul   edi,DWORD PTR [rcx-0x1a],0x1d
   14001df78:	rex push rsp
   14001df7a:	mov    ch,0xde
   14001df7c:	pop    rcx
   14001df7d:	rex.WRXB test BYTE PTR [r15+0x58120e16],r11b
   14001df84:	unpckhps xmm4,XMMWORD PTR [rbx]
   14001df87:	sbb    DWORD PTR [rax+rdi*1],esp
   14001df8a:	jo     0x14001df66
   14001df8c:	cmp    eax,0x659b4123
   14001df91:	std    
   14001df92:	imul   esp,DWORD PTR [rdi-0x19a51984],0x57
   14001df99:	retf   
   14001df9a:	or     DWORD PTR [rip+0x6438d04e],esp        # 0x1a43aafee
   14001dfa0:	add    DWORD PTR [rcx-0x75e75c52],edx
   14001dfa6:	lahf   
   14001dfa7:	loop   0x14001dfdc
   14001dfa9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001dfaa:	int3   
   14001dfab:	and    DWORD PTR [rdx],ebp
   14001dfad:	mov    esp,0x24ad60fd
   14001dfb2:	loope  0x14001df63
   14001dfb4:	mov    ah,0x3f
   14001dfb6:	shr    dh,1
   14001dfb8:	lahf   
   14001dfb9:	adc    al,BYTE PTR [rbx-0x4df679d3]
   14001dfbf:	ins    BYTE PTR es:[rdi],dx
   14001dfc0:	leave  
   14001dfc1:	rex.W and al,0xab
   14001dfc4:	rcl    BYTE PTR [rbx+0x15],1
   14001dfc7:	(bad)  
   14001dfc8:	sti    
   14001dfc9:	jle    0x14001e011
   14001dfcb:	sub    edx,esp
   14001dfcd:	gs ja  0x14001e038
   14001dfd0:	(bad)  
   14001dfd1:	(bad)  
   14001dfd2:	jns    0x14001dfca
   14001dfd4:	ss and al,0x48
   14001dfd7:	mov    bh,0x1d
   14001dfd9:	or     DWORD PTR [rbx],ebx
   14001dfdb:	je     0x14001dfe1
   14001dfdd:	adc    ch,BYTE PTR [rdx]
   14001dfdf:	xor    eax,0xf2bc534b
   14001dfe4:	push   rdx
   14001dfe5:	lea    rsi,[rbx+0x70de6579]
   14001dfec:	(bad)  
   14001dfed:	jle    0x14001dfde
   14001dfef:	xor    edi,esp
   14001dff1:	out    0xf3,al
   14001dff3:	(bad)  
   14001dff4:	(bad)  
   14001dff5:	std    
   14001dff6:	ret    0xd5bf
   14001dff9:	rcl    BYTE PTR [rcx-0x5f343384],1
   14001dfff:	cmp    eax,0xfa368a83
   14001e004:	(bad)  
   14001e005:	xchg   ecx,eax
   14001e006:	(bad)  
   14001e007:	mov    ebx,0x7854bcb1
   14001e00c:	test   al,0xa7
   14001e00e:	cmp    DWORD PTR gs:[rbx],edi
   14001e011:	sbb    DWORD PTR [rax-0x5667ddb5],0xa
   14001e018:	or     DWORD PTR [rbp-0x51ef3606],esi
   14001e01e:	retf   
   14001e01f:	mov    BYTE PTR [rdi-0x11],bl
   14001e022:	pop    rbp
   14001e023:	rex.WRXB
   14001e024:	rex.RX hlt 
   14001e026:	ins    BYTE PTR es:[rdi],dx
   14001e027:	(bad)  
   14001e028:	ins    DWORD PTR es:[rdi],dx
   14001e029:	fnstcw WORD PTR [rdi]
   14001e02b:	int    0x74
   14001e02d:	ret    0x8c0e
   14001e030:	repz pop rdx
   14001e032:	adc    al,BYTE PTR [rbx-0x16]
   14001e035:	and    eax,DWORD PTR [r10]
   14001e038:	shr    DWORD PTR [rax+rsi*2-0x3f],0xd8
   14001e03d:	ja     0x14001e080
   14001e03f:	adc    BYTE PTR [rdi-0x71b828ca],0x2d
   14001e046:	out    0x6,al
   14001e048:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e049:	add    BYTE PTR [rbp-0x7be4433b],dh
   14001e04f:	test   BYTE PTR [rcx+0x41],dh
   14001e052:	mov    bl,BYTE PTR [rdx]
   14001e054:	push   0x435bbb5a
   14001e059:	ja     0x14001e043
   14001e05b:	cwde   
   14001e05c:	pop    rdx
   14001e05d:	ins    BYTE PTR es:[rdi],dx
   14001e05e:	(bad)  
   14001e060:	adc    eax,0xc1e4f2d
   14001e065:	ss jle 0x14001e0c7
   14001e068:	(bad)  
   14001e069:	sbb    ebp,DWORD PTR [rip+0x1c003e9c]        # 0x15c021f0b
   14001e06f:	fnstsw WORD PTR [rcx-0x5fedff68]
   14001e075:	xor    DWORD PTR [rcx],0x53
   14001e078:	mov    ebp,DWORD PTR [rsi-0x4a6d6f9e]
   14001e07e:	push   rbx
   14001e07f:	rcr    ebp,1
   14001e081:	hlt    
   14001e082:	(bad)
   14001e085:	out    dx,eax
   14001e086:	hlt    
   14001e087:	push   rdi
   14001e088:	out    dx,eax
   14001e089:	ret    0x94a7
   14001e08c:	neg    cl
   14001e08e:	xchg   esi,eax
   14001e08f:	(bad)  
   14001e090:	scas   al,BYTE PTR es:[rdi]
   14001e091:	(bad)  
   14001e092:	mov    esp,0x8d1cb7e9
   14001e097:	test   al,0x9c
   14001e099:	xor    esi,ebx
   14001e09b:	imul   eax,DWORD PTR [rbp-0x35d510d6],0x6b
   14001e0a2:	jns    0x14001e091
   14001e0a4:	shl    DWORD PTR [rax+0x48],cl
   14001e0a7:	lods   al,BYTE PTR ds:[rsi]
   14001e0a8:	clc    
   14001e0a9:	pop    rbp
   14001e0aa:	sbb    ebp,DWORD PTR [rdi-0x1f]
   14001e0ad:	rex.RX sub r13b,BYTE PTR [rsi]
   14001e0b0:	data16 fidiv WORD PTR [rsi]
   14001e0b3:	loope  0x14001e134
   14001e0b5:	(bad)
   14001e0b8:	push   rsp
   14001e0b9:	call   0x1334f4412
   14001e0be:	and    al,BYTE PTR gs:[rdx]
   14001e0c1:	mov    dl,0xf3
   14001e0c3:	in     eax,0x1b
   14001e0c5:	test   eax,0x8430a4c2
   14001e0ca:	xchg   ecx,eax
   14001e0cb:	sub    DWORD PTR [edi-0x3a1bd960],ebx
   14001e0d2:	scas   al,BYTE PTR es:[rdi]
   14001e0d3:	mov    eax,0xf99fdefd
   14001e0d8:	(bad)  
   14001e0d9:	repz int3 
   14001e0db:	cmp    cl,bh
   14001e0dd:	call   0xe9825cdf
   14001e0e2:	imul   edi,DWORD PTR [rcx+rbx*4-0x4d02a54e],0xffffff9f
   14001e0ea:	or     DWORD PTR [rsi],edi
   14001e0ec:	stos   DWORD PTR es:[rdi],eax
   14001e0ed:	test   BYTE PTR [rax],bh
   14001e0ef:	jg     0x14001e11d
   14001e0f1:	sbb    al,0x24
   14001e0f3:	mov    al,0x35
   14001e0f5:	(bad)  
   14001e0f6:	adc    eax,0x462a1ef1
   14001e0fb:	xor    al,BYTE PTR [rdi]
   14001e0fd:	xor    DWORD PTR [rdi+0x73],esi
   14001e100:	rex.W jo 0x14001e0e4
   14001e103:	mov    ah,0x51
   14001e105:	imul   edx,eax,0xfffffff5
   14001e108:	jp     0x14001e150
   14001e10a:	xor    DWORD PTR [rsi],0x63
   14001e10d:	pop    rbp
   14001e10e:	mov    dl,0x77
   14001e110:	retf   
   14001e111:	cli    
   14001e112:	xlat   BYTE PTR ds:[rbx]
   14001e113:	rex.WRX shl cl,cl
   14001e116:	out    0xf,al
   14001e118:	stc    
   14001e119:	int3   
   14001e11a:	mov    ch,0xcc
   14001e11c:	loopne 0x14001e0f5
   14001e11e:	test   BYTE PTR [rbp+0x4a1296af],cl
   14001e124:	mov    dh,0x8d
   14001e126:	and    ecx,DWORD PTR [rbx]
   14001e128:	popf   
   14001e129:	movabs al,ds:0x23038941bb84c870
   14001e132:	pop    rbp
   14001e133:	rex.RX sbb r15b,BYTE PTR [rax]
   14001e136:	ins    BYTE PTR es:[rdi],dx
   14001e137:	(bad)  
   14001e138:	xor    DWORD PTR [rip+0xe28c43f],edx        # 0x14e2aa57d
   14001e13e:	(bad)  
   14001e13f:	test   DWORD PTR [rdi+0x4f],esp
   14001e142:	cwde   
   14001e143:	rex.X jle 0x14001e19a
   14001e146:	test   eax,0xfa795503
   14001e14b:	ror    BYTE PTR [rdx+riz*2-0x35],0x81
   14001e150:	cmp    DWORD PTR [rax],0x23981fc5
   14001e156:	hlt    
   14001e157:	pop    rsi
   14001e158:	mov    bl,0xe
   14001e15a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e15b:	popf   
   14001e15c:	stos   BYTE PTR es:[rdi],al
   14001e15d:	adc    eax,0x54e5dc96
   14001e162:	add    BYTE PTR [rbx],bl
   14001e164:	cld    
   14001e165:	rex.WRXB xor QWORD PTR [r10-0x29],r11
   14001e169:	(bad)  
   14001e16b:	cdq    
   14001e16c:	(bad)  
   14001e16d:	jns    0x14001e1c2
   14001e16f:	fmul   DWORD PTR [rcx-0x1f]
   14001e172:	rex.WRXB (bad) 
   14001e174:	push   rax
   14001e175:	cli    
   14001e176:	jle    0x14001e1ce
   14001e178:	jnp    0x14001e151
   14001e17a:	sub    eax,0x1ccc6295
   14001e17f:	(bad)  
   14001e180:	sub    eax,0x34138a8d
   14001e185:	xchg   esi,eax
   14001e186:	mov    ebx,0xe8bb1f52
   14001e18b:	xchg   ecx,eax
   14001e18c:	(bad)  
   14001e18d:	movabs al,ds:0x6547ecf37e5ed0d9
   14001e196:	ret    0x6cad
   14001e199:	xchg   rcx,rax
   14001e19b:	outs   dx,BYTE PTR ds:[rsi]
   14001e19c:	jne    0x14001e1f1
   14001e19e:	movabs al,ds:0x70923e836123a2f
   14001e1a7:	test   eax,0x6a542408
   14001e1ac:	adc    DWORD PTR [rdi],edi
   14001e1ae:	sub    edx,DWORD PTR gs:[rsi-0x701b8659]
   14001e1b5:	mov    esp,0x91a4a548
   14001e1ba:	sbb    esp,DWORD PTR [rsi-0x43]
   14001e1bd:	mov    ch,BYTE PTR [rdx]
   14001e1bf:	(bad)  
   14001e1c0:	repnz retf 
   14001e1c2:	mov    esp,0x8dd0ebe0
   14001e1c7:	movabs eax,ds:0x23efe6d962defdc0
   14001e1d0:	adc    al,0xbc
   14001e1d2:	loope  0x14001e191
   14001e1d4:	or     eax,0x26fcd0a7
   14001e1d9:	mov    al,BYTE PTR [rbx-0x4d6ec0c1]
   14001e1df:	jle    0x14001e251
   14001e1e1:	shl    BYTE PTR [rcx+rdi*4],1
   14001e1e4:	imul   ecx,ebx,0xe642f815
   14001e1ea:	rex.RX cmp r11d,DWORD PTR [rbx-0x3]
   14001e1ee:	ja     0x14001e26a
   14001e1f0:	fsub   QWORD PTR [rbp+0x6b]
   14001e1f3:	mov    ch,0xc5
   14001e1f5:	jle    0x14001e251
   14001e1f7:	hlt    
   14001e1f8:	out    dx,al
   14001e1f9:	push   rbx
   14001e1fa:	or     DWORD PTR [rdi],esi
   14001e1fc:	test   DWORD PTR [rax+0x38],0xae09b876
   14001e203:	mov    cl,0xa1
   14001e205:	adc    bl,BYTE PTR [rdi-0x33c07510]
   14001e20b:	xor    edx,DWORD PTR [rbx+0x72fd24]
   14001e211:	add    BYTE PTR [rax],al
   14001e213:	add    BYTE PTR [rcx],al
   14001e215:	ret    0x376a
   14001e218:	add    eax,DWORD PTR [rsp+rdx*8-0x41b9fd92]
   14001e21f:	pop    rcx
   14001e220:	(bad)  
   14001e221:	or     DWORD PTR [rax-0x3d34f924],ebp
   14001e227:	jmp    0x14001e22d
   14001e229:	lea    edi,[rdx+rsi*4+0x5]
   14001e22d:	rex.WRXB (bad) 
   14001e22f:	test   DWORD PTR [rsi],ecx
   14001e231:	adc    edx,DWORD PTR [rcx-0x48]
   14001e234:	psrlw  mm7,QWORD PTR [rbx]
   14001e237:	(bad)  
   14001e238:	or     eax,0xcd68597
   14001e23d:	push   rbp
   14001e23e:	out    dx,eax
   14001e23f:	loope  0x14001e24a
   14001e241:	sbb    bh,cl
   14001e243:	fs or  al,bl
   14001e246:	xchg   ebx,eax
   14001e247:	push   rbx
   14001e248:	or     bl,BYTE PTR [rsi+0x5c0b0a2d]
   14001e24e:	rex.RXB cmp eax,0x70a3261c
   14001e254:	sbb    eax,0x1f47c9e4
   14001e259:	movabs ds:0x2f1b291d601e1e77,al
   14001e262:	or     ebp,DWORD PTR [rdx+rbx*1+0x189b61ed]
   14001e269:	stos   DWORD PTR es:[rdi],eax
   14001e26a:	ffreep st(2)
   14001e26c:	sbb    DWORD PTR [rcx-0x4b],ebp
   14001e26f:	cmc    
   14001e270:	adc    dh,BYTE PTR [rip+0xfffffffff713c8f2]        # 0x13715ab68
   14001e276:	cwde   
   14001e277:	call   QWORD PTR [rcx]
   14001e279:	mov    cl,0x26
   14001e27b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e27c:	adc    BYTE PTR [rbx+0x4c],dh
   14001e27f:	xchg   ecx,eax
   14001e280:	adc    eax,0x14145a3c
   14001e285:	(bad)  
   14001e286:	xor    BYTE PTR [rbx],ah
   14001e288:	(bad)  
   14001e289:	mov    eax,0x7a177a8e
   14001e28e:	in     al,0x4d
   14001e290:	cmp    BYTE PTR [rbp+0x46],cl
   14001e293:	loopne 0x14001e2ce
   14001e295:	(bad)  
   14001e296:	sub    al,0xd7
   14001e298:	cmp    ecx,ecx
   14001e29a:	xchg   edx,eax
   14001e29b:	mov    ?,WORD PTR [rdx]
   14001e29d:	or     edi,eax
   14001e29f:	mov    ecx,0x3cee443f
   14001e2a4:	xchg   BYTE PTR ds:[rbx+rcx*1+0x523ac03c],al
   14001e2ac:	cmp    eax,0x36655002
   14001e2b1:	pop    rsi
   14001e2b2:	(bad)  
   14001e2b3:	pop    rax
   14001e2b4:	(bad)  
   14001e2b5:	pushf  
   14001e2b6:	jge    0x14001e327
   14001e2b8:	xor    eax,0x3436c3da
   14001e2bd:	sbb    BYTE PTR [rcx-0x40a8ceff],ch
   14001e2c3:	test   BYTE PTR [rax],dh
   14001e2c5:	xchg   ebp,eax
   14001e2c6:	(bad)  
   14001e2c7:	mov    bl,0x32
   14001e2c9:	shr    DWORD PTR [rbx-0x16],cl
   14001e2cc:	xor    edx,DWORD PTR [rcx]
   14001e2ce:	add    ebp,ebx
   14001e2d0:	and    al,0x6b
   14001e2d2:	in     eax,0x90
   14001e2d4:	and    eax,0x27a78fa9
   14001e2d9:	out    dx,eax
   14001e2da:	xor    esi,edi
   14001e2dc:	es sub eax,0x6223c95b
   14001e2e2:	rex.WRB
   14001e2e3:	rex.WR and r12b,BYTE PTR [rax-0x19df84d9]
   14001e2ea:	cdq    
   14001e2eb:	and    ah,BYTE PTR [rcx]
   14001e2ed:	and    al,0xf3
   14001e2ef:	adc    eax,0x28b4782a
   14001e2f4:	sub    edi,DWORD PTR [rdx-0x3d6e022]
   14001e2fa:	(bad)  
   14001e2fb:	rex.RX sub BYTE PTR [rsi],r15b
   14001e2fe:	or     dh,BYTE PTR [rcx+0x2d]
   14001e301:	jno    0x14001e31f
   14001e303:	hlt    
   14001e304:	sub    al,0xb3
   14001e306:	jbe    0x14001e2cb
   14001e308:	cs cmc 
   14001e30a:	enter  0x2f9a,0x37
   14001e30e:	movabs ds:0xe75871c08d9a70ad,al
   14001e317:	div    DWORD PTR [rbx+0x1e]
   14001e31a:	pop    rcx
   14001e31b:	scas   al,BYTE PTR es:[rdi]
   14001e31c:	jb     0x14001e2fa
   14001e31e:	xor    ebx,DWORD PTR [rcx+0x1c259377]
   14001e324:	jbe    0x14001e377
   14001e326:	sub    r14,QWORD PTR [r15+r10*1-0xf]
   14001e32b:	jb     0x14001e3a2
   14001e32d:	(bad)  
   14001e32e:	fwait
   14001e32f:	rex.RB jle 0x14001e2bb
   14001e332:	fdivr  QWORD PTR [rax+0x7f]
   14001e335:	rex.WXB mov r14b,0x4f
   14001e338:	jge    0x14001e347
   14001e33a:	or     BYTE PTR [rsi],dl
   14001e33c:	jl     0x14001e30d
   14001e33e:	(bad)  
   14001e340:	jns    0x14001e2c2
   14001e342:	je     0x14001e2e8
   14001e344:	js     0x14001e388
   14001e346:	(bad)  
   14001e347:	xchg   ebx,eax
   14001e348:	jp     0x14001e34e
   14001e34a:	movabs al,ds:0x2ebc6cfdcac67bca
   14001e353:	mov    al,0x6d
   14001e355:	jle    0x14001e39b
   14001e357:	xchg   DWORD PTR [rdi+0x38],ebp
   14001e35a:	cli    
   14001e35b:	fisubr WORD PTR [rsi-0x6]
   14001e35e:	nop
   14001e35f:	jmp    0x1ac8898cf
   14001e364:	push   0x77
   14001e366:	in     al,dx
   14001e367:	pop    rbx
   14001e368:	push   0x69025231
   14001e36d:	repz cmp BYTE PTR [rip+0x87faf62],dh        # 0x1488192d6
   14001e374:	movsxd ebp,DWORD PTR [rbp+0x15]
   14001e377:	(bad)  
   14001e378:	(bad)  
   14001e379:	sub    ebp,DWORD PTR [rbx-0x3e169f9a]
   14001e37f:	push   rcx
   14001e380:	cmps   BYTE PTR gs:[rsi],BYTE PTR es:[rdi]
   14001e382:	xlat   BYTE PTR ds:[rbx]
   14001e383:	(bad)  
   14001e384:	fs fs mov ebp,0x32266e3
   14001e38b:	mov    edx,0x8d69e067
   14001e390:	rex.W xlat BYTE PTR ds:[rbx]
   14001e392:	retf   
   14001e393:	and    BYTE PTR [rcx+0x15],cl
   14001e396:	movabs eax,ds:0x75914a4e1f534b17
   14001e39f:	jns    0x14001e3f0
   14001e3a1:	fisub  WORD PTR [rbx-0x4]
   14001e3a4:	rex.WRX sbb al,0x9
   14001e3a7:	retf   
   14001e3a8:	rex.WR pop rdx
   14001e3aa:	mov    bh,0x92
   14001e3ac:	rex.WRB cdqe 
   14001e3ae:	frstor [rbp-0x67653bba]
   14001e3b4:	rex.RXB (bad) 
   14001e3b6:	lock scas eax,DWORD PTR es:[rdi]
   14001e3b8:	rex.RB
   14001e3b9:	rex
   14001e3ba:	rex.WRX test BYTE PTR [rdx+r8*4+0x24],0xc1
   14001e3c0:	rex.B int 0x32
   14001e3c3:	rex.R
   14001e3c4:	rex addps xmm6,XMMWORD PTR [rbx+0x42]
   14001e3c9:	rex.WB out 0x2a,al
   14001e3cc:	mov    ecx,DWORD PTR [r13+r11*1+0x5068f154]
   14001e3d4:	push   rbp
   14001e3d5:	xor    eax,DWORD PTR [rdx]
   14001e3d7:	addr32 push rdi
   14001e3d9:	jne    0x14001e397
   14001e3db:	ds push rsi
   14001e3dd:	mov    bh,0xd6
   14001e3df:	or     DWORD PTR [rbx-0x8],edx
   14001e3e2:	ror    BYTE PTR [rdx+rdx*2+0x50bbaa3a],0x7c
   14001e3ea:	adc    al,0xe2
   14001e3ec:	push   rcx
   14001e3ed:	mov    esi,0xe25ad57e
   14001e3f2:	cmp    eax,ebp
   14001e3f4:	pop    rbx
   14001e3f5:	and    BYTE PTR [rbx-0x21],dl
   14001e3f8:	pop    rcx
   14001e3f9:	in     ax,dx
   14001e3fb:	xchg   BYTE PTR [rax-0x5c],bl
   14001e3fe:	xchg   DWORD PTR [rcx+0x3491eb5d],esi
   14001e404:	pop    rsp
   14001e405:	sub    ebx,edi
   14001e407:	add    ebx,DWORD PTR [rsi+0x6f]
   14001e40a:	rex.RB pop r10
   14001e40c:	pop    rdi
   14001e40d:	lods   eax,DWORD PTR ds:[rsi]
   14001e40e:	(bad)  
   14001e40f:	ins    DWORD PTR es:[rdi],dx
   14001e410:	loope  0x14001e447
   14001e412:	sbb    eax,DWORD PTR [rax-0x488e0820]
   14001e418:	loop   0x14001e3cb
   14001e41a:	iret   
   14001e41b:	out    dx,al
   14001e41c:	jrcxz  0x14001e491
   14001e41e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e41f:	(bad)  
   14001e421:	cmp    al,0xb3
   14001e423:	pop    rsp
   14001e424:	out    0xfe,eax
   14001e426:	fldcw  WORD PTR [rbx-0x1b]
   14001e429:	mov    eax,0x7ae43267
   14001e42e:	or     eax,0x4a26ef05
   14001e433:	cmp    dh,ch
   14001e435:	in     al,0x20
   14001e437:	paddsb mm4,QWORD PTR [rdx+0x60ed569e]
   14001e43e:	hlt    
   14001e43f:	(bad)  
   14001e440:	call   0x129e6c674
   14001e445:	in     eax,dx
   14001e446:	mov    bl,dl
   14001e448:	jmp    0x14001e3f5
   14001e44a:	ss mov ch,dl
   14001e44d:	imul   ebx,DWORD PTR [rbp+rdi*4-0x3],0xfcf0b813
   14001e455:	rcl    edx,1
   14001e457:	(bad)  
   14001e458:	(bad)  
   14001e459:	xchg   edi,eax
   14001e45a:	ins    BYTE PTR es:[rdi],dx
   14001e45b:	sahf   
   14001e45c:	call   QWORD PTR [rbp+0x6]
   14001e45f:	test   eax,0x2c101afa
   14001e464:	sti    
   14001e465:	fdivr  DWORD PTR [rdx+0x1b]
   14001e468:	stc    
   14001e469:	sahf   
   14001e46a:	(bad)  
   14001e46e:	scas   al,BYTE PTR es:[rdi]
   14001e46f:	jne    0x14001e464
   14001e471:	add    cl,ch
   14001e473:	rex.W
   14001e474:	bnd ret 0x7f83
   14001e478:	lock test BYTE PTR [rip+0x5746f126],bh        # 0x19748d5a5
   14001e47f:	adc    esp,esi
   14001e481:	or     DWORD PTR [rcx-0x6c],eax
   14001e484:	cmc    
   14001e485:	retf   
   14001e486:	sub    esp,DWORD PTR [rbx-0x56a7209]
   14001e48c:	test   BYTE PTR [rdi-0x1],0xcd
   14001e490:	fnstcw WORD PTR [rax+0x5d]
   14001e493:	(bad)  
   14001e494:	fdivr  DWORD PTR [rdx-0x325a8c9]
   14001e49a:	mov    DWORD PTR [rsi],ecx
   14001e49c:	fstp   TBYTE PTR [rsi]
   14001e49e:	jrcxz  0x14001e4d9
   14001e4a0:	fidiv  WORD PTR [rcx-0xb]
   14001e4a3:	mov    esp,0x8b9fb3df
   14001e4a8:	(bad)  
   14001e4aa:	and    edx,edx
   14001e4ac:	fdiv   QWORD PTR [rdi]
   14001e4ae:	rex.WXB in eax,0xd7
   14001e4b1:	imul   ecx,DWORD PTR [rax+rbx*8],0xffffffd6
   14001e4b5:	test   eax,0xefd4ef66
   14001e4ba:	fdiv   DWORD PTR [rsi-0x7e4dd22b]
   14001e4c0:	shl    BYTE PTR [rdx-0x5c],1
   14001e4c3:	add    al,0xd1
   14001e4c5:	movabs al,ds:0x24d26a70e6d333ce
   14001e4ce:	sbb    bl,BYTE PTR [rbp-0x3b]
   14001e4d1:	pop    rsi
   14001e4d2:	(bad)  
   14001e4d3:	adc    ah,al
   14001e4d5:	pushf  
   14001e4d6:	xchg   esp,eax
   14001e4d7:	(bad)  
   14001e4d8:	(bad)  
   14001e4d9:	fisubr DWORD PTR [rdx]
   14001e4db:	jle    0x14001e4a4
   14001e4dd:	sbb    BYTE PTR [rax+0x49],al
   14001e4e0:	ret    0x5657
   14001e4e3:	int3   
   14001e4e4:	ret    
   14001e4e5:	xchg   ebp,eax
   14001e4e6:	cmp    al,0xfb
   14001e4e8:	rcl    ebx,0x82
   14001e4eb:	movabs ds:0xa8af4dcb95e811c0,al
   14001e4f4:	retf   0xc58f
   14001e4f7:	lahf   
   14001e4f8:	enter  0x7bc9,0xc6
   14001e4fc:	leave  
   14001e4fd:	or     edx,DWORD PTR [rcx]
   14001e4ff:	icebp  
   14001e500:	int3   
   14001e501:	rex.R (bad) 
   14001e503:	je     0x14001e4d2
   14001e505:	xchg   BYTE PTR [rbp+0x43],ch
   14001e508:	iret   
   14001e509:	rcl    bl,0x1a
   14001e50c:	(bad)  
   14001e50d:	add    bh,BYTE PTR [rcx-0x69506ed3]
   14001e513:	rex xchg eax,eax
   14001e515:	ins    DWORD PTR es:[rdi],dx
   14001e516:	cld    
   14001e517:	ja     0x14001e4ab
   14001e519:	sub    eax,DWORD PTR [rdx+0x2e]
   14001e51c:	xchg   ebx,eax
   14001e51d:	jmp    0xe697fe4a
   14001e522:	ds pushf 
   14001e524:	xchg   edi,eax
   14001e525:	fs push rsp
   14001e527:	stos   DWORD PTR es:[rdi],eax
   14001e528:	xchg   ebp,eax
   14001e529:	and    ch,dl
   14001e52b:	repnz xchg esp,eax
   14001e52d:	loopne 0x14001e4af
   14001e52f:	(bad)
   14001e532:	xbegin 0x10faf63d6
   14001e538:	pushf  
   14001e539:	cmp    BYTE PTR [rbx],dl
   14001e53b:	xchg   esi,eax
   14001e53c:	popf   
   14001e53d:	cli    
   14001e53e:	jns    0x14001e4e1
   14001e540:	cwde   
   14001e541:	mov    ch,0x6f
   14001e543:	and    al,0x99
   14001e545:	ja     0x14001e54c
   14001e547:	adc    ebx,DWORD PTR [rbx-0x65b544cf]
   14001e54d:	repz sar DWORD PTR [rbp-0x73],1
   14001e551:	mov    DWORD PTR [rip+0x5f4b8c30],esi        # 0x19f4d7187
   14001e557:	(bad)  
   14001e558:	mov    cs,WORD PTR [rip+0xffffffffcf8f5ee1]        # 0x10f91443f
   14001e55e:	mov    ebp,DWORD PTR [rcx-0x76]
   14001e561:	sbb    BYTE PTR [rbp-0x8bd7414],0xdb
   14001e568:	mov    DWORD PTR [rcx+rcx*2],eax
   14001e56b:	(bad)  
   14001e56c:	mov    dh,al
   14001e56e:	and    esi,DWORD PTR [rbp-0x779b657d]
   14001e574:	(bad)  
   14001e575:	pop    rax
   14001e576:	(bad)  
   14001e577:	mov    edi,0xe6b01e80
   14001e57c:	sbb    esp,0x9384d1da
   14001e582:	int3   
   14001e583:	push   rsp
   14001e584:	test   DWORD PTR [rcx-0x5a],edx
   14001e587:	movsxd eax,DWORD PTR [rdi-0x79c5e7e9]
   14001e58d:	(bad)  
   14001e58e:	jb     0x14001e59d
   14001e590:	test   eax,0xa8a0d0e2
   14001e595:	and    BYTE PTR [rdx+0x466aa97],bh
   14001e59b:	(bad)  
   14001e59c:	stos   DWORD PTR es:[rdi],eax
   14001e59d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e59e:	outs   dx,BYTE PTR ds:[rsi]
   14001e59f:	stc    
   14001e5a0:	scas   al,BYTE PTR es:[rdi]
   14001e5a1:	jmp    0x14001e61b
   14001e5a3:	jl     0x14001e554
   14001e5a5:	sub    DWORD PTR [rdx],edx
   14001e5a7:	rex.WXB lods rax,QWORD PTR ds:[rsi]
   14001e5a9:	outs   dx,DWORD PTR ds:[rsi]
   14001e5aa:	lods   al,BYTE PTR ds:[rsi]
   14001e5ab:	adc    ch,BYTE PTR [rbp+rbp*4-0xe58da3a]
   14001e5b2:	sbb    DWORD PTR [rax],0x2feb33a6
   14001e5b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e5b9:	jne    0x14001e610
   14001e5bb:	jbe    0x14001e562
   14001e5bd:	mov    bh,0x3f
   14001e5bf:	rex.B movabs al,ds:0xa3f3433aa1c429f8
   14001e5c9:	jl     0x14001e5c8
   14001e5cb:	stos   BYTE PTR es:[rdi],al
   14001e5cc:	movabs ds:0xb4d073c4b59d97be,al
   14001e5d5:	(bad)  
   14001e5d6:	sbb    edi,esp
   14001e5d8:	mov    dh,0x40
   14001e5da:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e5db:	mov    esi,0x89cd82b7
   14001e5e0:	mov    dl,0xcd
   14001e5e2:	fisttp DWORD PTR [rbx+rsi*4]
   14001e5e5:	cmpxchg DWORD PTR [rbx],edi
   14001e5e8:	mov    cl,0x49
   14001e5ea:	punpckldq mm6,DWORD PTR [rax-0x44aa9a75]
   14001e5f1:	xlat   BYTE PTR ds:[rbx]
   14001e5f2:	and    ch,BYTE PTR [rax-0x46]
   14001e5f5:	adc    eax,0x53b85f48
   14001e5fa:	test   BYTE PTR [rsi],0xb9
   14001e5fd:	xchg   ecx,eax
   14001e5fe:	pushf  
   14001e5ff:	xor    DWORD PTR [rsi+rbx*8+0x1cbdb48a],edi
   14001e606:	loopne 0x14001e58b
   14001e608:	mov    edi,0xbeda5e5a
   14001e60d:	cwde   
   14001e60e:	xor    al,0xed
   14001e610:	add    BYTE PTR [rax],al
   14001e612:	add    BYTE PTR [rax],al
   14001e614:	mov    eax,0xaa6567bc
   14001e619:	or     eax,ecx
   14001e61b:	mov    edx,DWORD PTR [rdx]
   14001e61d:	mov    ch,0xaf
   14001e61f:	out    dx,al
   14001e620:	(bad)  
   14001e621:	(bad)  
   14001e622:	xchg   edi,eax
   14001e623:	push   rdi
   14001e624:	(bad)  
   14001e625:	fdivrp st(0),st
   14001e627:	xor    ah,BYTE PTR [rip+0xffffffff9ddc5f6b]        # 0xddde4598
   14001e62d:	xlat   BYTE PTR ds:[rbx]
   14001e62e:	cmp    BYTE PTR [rcx-0x10d74b3b],bh
   14001e634:	jge    0x14001e63e
   14001e636:	rex.WRXB mov r13b,BYTE PTR [r15-0x43]
   14001e63a:	loopne 0x14001e6a0
   14001e63c:	xlat   BYTE PTR ds:[rbx]
   14001e63d:	add    DWORD PTR [rdi-0x4029b5ff],eax
   14001e643:	mov    eax,0xddd86af2
   14001e648:	loopne 0x14001e629
   14001e64a:	ja     0x14001e67f
   14001e64c:	pop    rax
   14001e64d:	movsxd edx,DWORD PTR [rax]
   14001e64f:	push   rsi
   14001e650:	push   rax
   14001e651:	sbb    DWORD PTR [rdi-0x61],edx
   14001e654:	call   0x13afc16fe
   14001e659:	adc    BYTE PTR [rdi-0x753bdec],bl
   14001e65f:	jno    0x14001e640
   14001e661:	jnp    0x14001e623
   14001e663:	enter  0xc767,0xa7
   14001e667:	lods   eax,DWORD PTR ds:[rsi]
   14001e668:	jne    0x14001e6dc
   14001e66a:	or     BYTE PTR [rbx-0x33],al
   14001e66d:	(bad)  
   14001e66e:	outs   dx,DWORD PTR ds:[rsi]
   14001e66f:	es xchg ebp,eax
   14001e671:	lods   eax,DWORD PTR ds:[rsi]
   14001e672:	jg     0x14001e6e4
   14001e674:	sub    eax,0x3f151811
   14001e679:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e67a:	mov    bh,0xfb
   14001e67c:	xchg   DWORD PTR [rax],ebx
   14001e67e:	rcr    BYTE PTR [rsi+0x27e8cf1a],1
   14001e684:	movabs ds:0x8ac20c6b0428f73,al
   14001e68d:	jp     0x14001e6d6
   14001e68f:	leave  
   14001e690:	movabs al,ds:0xa5bc88e183eaf32
   14001e699:	cmp    esp,DWORD PTR [rdi-0x4b]
   14001e69c:	mov    dl,0x87
   14001e69e:	add    al,dl
   14001e6a0:	(bad)  
   14001e6a1:	push   rax
   14001e6a2:	cmp    BYTE PTR [rcx-0x69],ch
   14001e6a5:	in     al,dx
   14001e6a6:	pop    rdi
   14001e6a7:	or     al,0x85
   14001e6a9:	pop    rcx
   14001e6aa:	lock loop 0x14001e6ea
   14001e6ad:	in     eax,0x97
   14001e6af:	xchg   DWORD PTR [rbp-0x7a],esp
   14001e6b2:	xchg   ecx,edx
   14001e6b4:	fnstsw WORD PTR [rdx]
   14001e6b6:	loopne 0x14001e66c
   14001e6b8:	iret   
   14001e6b9:	(bad)  
   14001e6ba:	rex.WRXB pop r10
   14001e6bc:	ja     0x14001e6f1
   14001e6be:	sub    BYTE PTR [rdi],bh
   14001e6c0:	(bad)  
   14001e6c1:	in     al,0x10
   14001e6c3:	xchg   BYTE PTR [rdx+0x58],dl
   14001e6c6:	ja     0x14001e6ab
   14001e6c8:	rex in eax,dx
   14001e6ca:	fmul   DWORD PTR [rip+0x68bf51f8]        # 0x1a8c138c8
   14001e6d0:	lock sub edi,eax
   14001e6d3:	movabs eax,ds:0x2a30225ac49f9748
   14001e6dc:	loop   0x14001e67c
   14001e6de:	push   rdi
   14001e6df:	rex.WRXB jg 0x14001e72b
   14001e6e2:	outs   dx,DWORD PTR ds:[rsi]
   14001e6e3:	test   bh,0xf5
   14001e6e6:	or     BYTE PTR [rbx+0x7da740d5],dl
   14001e6ec:	ins    DWORD PTR es:[rdi],dx
   14001e6ed:	cld    
   14001e6ee:	rcr    BYTE PTR [rax],0x35
   14001e6f1:	lahf   
   14001e6f2:	ror    BYTE PTR [rsi-0x73],1
   14001e6f5:	and    esi,DWORD PTR [rdi+0x18969f2b]
   14001e6fb:	vcvtsi2sd xmm15,xmm11,DWORD PTR [rdi-0x60]
   14001e700:	mov    edx,0x21947fd
   14001e705:	and    BYTE PTR [r8+rdx*1-0xc],dil
   14001e70a:	(bad)  
   14001e70b:	xchg   edx,eax
   14001e70c:	test   al,0x48
   14001e70e:	call   0x19816830a
   14001e713:	cmp    eax,0x583fa823
   14001e718:	xor    DWORD PTR [rip+0xffffffffa189b690],ebx        # 0xe18b9dae
   14001e71e:	not    ebx
   14001e720:	adc    al,0x76
   14001e722:	iret   
   14001e723:	push   0xffffffffffffffac
   14001e725:	retf   0xfa8
   14001e728:	mov    esi,0x6e1077f
   14001e72d:	ret    
   14001e72e:	(bad)  
   14001e72f:	test   BYTE PTR [rsi-0x60],bl
   14001e732:	jo     0x14001e706
   14001e734:	out    0x1c,al
   14001e736:	(bad)  
   14001e737:	mov    bh,0xf4
   14001e739:	test   eax,0x154c59b8
   14001e73e:	fistp  QWORD PTR [rcx+rdx*8]
   14001e741:	ret    0x85e7
   14001e744:	imul   edi,DWORD PTR [rsi-0x80],0x2fcb7be0
   14001e74b:	(bad)  
   14001e74c:	ret    
   14001e74d:	ja     0x14001e797
   14001e74f:	imul   ecx,ebx,0xd
   14001e752:	cpuid  
   14001e754:	jae    0x14001e707
   14001e756:	push   0xffffffffc70461c7
   14001e75b:	sub    ecx,ebx
   14001e75d:	mov    eax,0x6f444ca0
   14001e762:	cwde   
   14001e763:	cmc    
   14001e764:	cld    
   14001e765:	sar    edi,cl
   14001e767:	nop
   14001e768:	out    dx,al
   14001e769:	push   ax
   14001e76b:	jle    0x14001e7c3
   14001e76d:	fidiv  DWORD PTR [rdi]
   14001e76f:	sbb    ecx,DWORD PTR [rsi]
   14001e771:	mov    ecx,0x5b64d27
   14001e776:	sub    BYTE PTR [rax+rsi*4+0xc1cc6ef],spl
   14001e77e:	mov    BYTE PTR [rbx+0x1ab0db81],ah
   14001e784:	cmp    DWORD PTR [rdi-0x29],esp
   14001e787:	jg     0x14001e7b4
   14001e789:	sar    BYTE PTR [rax-0x6f],cl
   14001e78c:	xchg   ebx,eax
   14001e78d:	outs   dx,BYTE PTR ds:[rsi]
   14001e78e:	(bad)  
   14001e78f:	hlt    
   14001e790:	cmp    esp,DWORD PTR [rsi]
   14001e792:	test   DWORD PTR [rbx],0x66909a83
   14001e798:	xchg   ecx,eax
   14001e799:	(bad)  
   14001e79a:	(bad)  
   14001e79b:	mov    BYTE PTR [rcx],ch
   14001e79d:	xchg   ebx,eax
   14001e79e:	pop    rax
   14001e79f:	in     eax,dx
   14001e7a0:	mov    ah,0x44
   14001e7a2:	(bad)  
   14001e7a3:	push   rsp
   14001e7a4:	or     al,0xf8
   14001e7a6:	(bad)  
   14001e7a7:	xor    DWORD PTR [rsi],ebx
   14001e7a9:	rex.WRB test al,0xdf
   14001e7ac:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e7ad:	icebp  
   14001e7ae:	iret   
   14001e7af:	mov    edx,0xecdf92fe
   14001e7b4:	rex.RX
   14001e7b5:	cs mov eax,0x179b5489
   14001e7bb:	addr32 in al,dx
   14001e7bd:	(bad)  
   14001e7be:	jo     0x14001e7c2
   14001e7c0:	jno    0x14001e7b2
   14001e7c2:	movabs rbx,0x3080f9dbde2f4cc9
   14001e7cc:	movsxd eax,DWORD PTR [rbp-0x19]
   14001e7cf:	push   rbp
   14001e7d0:	imul   edi,DWORD PTR [rdi],0xffffffa0
   14001e7d3:	pushf  
   14001e7d4:	rol    DWORD PTR [rbx+0x36c1f9c7],cl
   14001e7da:	push   0xf8a7917
   14001e7df:	jb     0x14001e7c5
   14001e7e1:	pop    rbp
   14001e7e2:	(bad)  
   14001e7e3:	retf   
   14001e7e4:	pop    rsp
   14001e7e5:	loope  0x14001e837
   14001e7e7:	scas   al,BYTE PTR es:[rdi]
   14001e7e8:	rex.WRX push rsp
   14001e7ea:	inc    DWORD PTR [rax-0xa]
   14001e7ed:	call   0xcbb00d8a
   14001e7f2:	mov    BYTE PTR [rbx+0x16],dh
   14001e7f5:	(bad)  
   14001e7f6:	out    dx,eax
   14001e7f7:	(bad)  
   14001e7f8:	add    al,0x82
   14001e7fa:	rex clc 
   14001e7fc:	mov    esp,0x219d273e
   14001e801:	jmp    0x1959b0c25
   14001e806:	js     0x14001e849
   14001e808:	mov    esp,eax
   14001e80a:	xlat   BYTE PTR ds:[rbx]
   14001e80b:	scas   eax,DWORD PTR es:[rdi]
   14001e80c:	xor    ebx,DWORD PTR [rax+rsi*4-0x36]
   14001e810:	in     eax,dx
   14001e811:	pop    rcx
   14001e812:	mov    dh,0x3b
   14001e814:	push   rbp
   14001e815:	in     eax,0xd1
   14001e817:	pop    rsi
   14001e818:	rex.RXB push r8
   14001e81a:	jle    0x14001e7cc
   14001e81c:	(bad)  
   14001e81d:	in     al,dx
   14001e81e:	sbb    ebp,edx
   14001e820:	(bad)  
   14001e821:	cmp    esp,DWORD PTR [rcx]
   14001e823:	ins    BYTE PTR es:[rdi],dx
   14001e824:	fiadd  DWORD PTR [rdi+0x32c80946]
   14001e82a:	jmp    0xce905916
   14001e82f:	(bad)  
   14001e830:	sub    ch,ch
   14001e832:	sahf   
   14001e833:	(bad)  
   14001e834:	nop
   14001e835:	push   rcx
   14001e836:	stc    
   14001e837:	mov    cl,0x82
   14001e839:	in     al,0x56
   14001e83b:	pop    rdi
   14001e83c:	cmp    bl,BYTE PTR [rax+0x31]
   14001e83f:	cmp    ah,BYTE PTR [rdi+0x1f83098f]
   14001e845:	xor    ebp,DWORD PTR [rsi-0x1a]
   14001e848:	or     eax,0xb508c186
   14001e84d:	cmp    ah,BYTE PTR [rsi-0x1ebf4293]
   14001e853:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e854:	add    eax,0x17c186fc
   14001e859:	sub    QWORD PTR [r15],rbp
   14001e85c:	scas   eax,DWORD PTR es:[rdi]
   14001e85d:	cmc    
   14001e85e:	rex.WRX
   14001e85f:	rex.WX xor spl,BYTE PTR [rdx]
   14001e862:	jbe    0x14001e857
   14001e864:	mov    bl,BYTE PTR [rsi+0x2b989611]
   14001e86a:	mov    esi,0xd9972078
   14001e86f:	sbb    eax,0x4bc9f478
   14001e874:	ror    BYTE PTR [rax-0x52],0x2e
   14001e878:	sar    ch,cl
   14001e87a:	add    eax,eax
   14001e87c:	push   0x41
   14001e87e:	movs   WORD PTR es:[rdi],WORD PTR ds:[rsi]
   14001e880:	not    DWORD PTR [rsi+0x2a4f1c5e]
   14001e886:	cmp    DWORD PTR [rcx+0x5d],edi
   14001e889:	lahf   
   14001e88a:	xchg   esi,eax
   14001e88b:	xchg   edi,eax
   14001e88c:	in     eax,0x23
   14001e88e:	icebp  
   14001e88f:	repnz imul r11,QWORD PTR [r9],0x5
   14001e894:	cmc    
   14001e895:	xlat   BYTE PTR ds:[rbx]
   14001e896:	jle    0x14001e8f8
   14001e898:	out    0x62,eax
   14001e89a:	ror    DWORD PTR [rsi-0x144921a1],1
   14001e8a0:	ret    0x8e09
   14001e8a3:	push   rdx
   14001e8a4:	jp     0x14001e85b
   14001e8a6:	jmp    0x1860250e2
   14001e8ab:	fnop   
   14001e8ad:	mov    esp,0xdf88bc21
   14001e8b2:	xor    edx,ebp
   14001e8b4:	xor    BYTE PTR [rbx+0x56],ah
   14001e8b7:	(bad)  
   14001e8b8:	and    dl,dh
   14001e8ba:	stc    
   14001e8bb:	(bad)  
   14001e8bc:	(bad)  
   14001e8bd:	push   0xffffffffffffff9e
   14001e8bf:	add    al,0x7
   14001e8c1:	mov    ebp,0x1bfbda6
   14001e8c6:	rcr    eax,0xad
   14001e8c9:	mov    ah,0x6e
   14001e8cb:	ss adc eax,0x1d530908
   14001e8d1:	jb     0x14001e921
   14001e8d3:	(bad)  
   14001e8d4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001e8d5:	(bad)  
   14001e8d6:	sub    edi,edi
   14001e8d8:	mov    bh,0x7b
   14001e8da:	xchg   BYTE PTR [rcx],dl
   14001e8dc:	(bad)  
   14001e8de:	loope  0x14001e954
   14001e8e0:	xchg   edx,eax
   14001e8e1:	adc    cl,bl
   14001e8e3:	int    0x2a
   14001e8e5:	lods   al,BYTE PTR ds:[rsi]
   14001e8e6:	mov    esi,0x111938a8
   14001e8eb:	rex.RX and BYTE PTR [rbp-0x3927dc8a],0x66
   14001e8f3:	jne    0x14001e955
   14001e8f5:	jp     0x14001e8f8
   14001e8f7:	adc    BYTE PTR [rdx-0x31],dh
   14001e8fa:	scas   al,BYTE PTR es:[rdi]
   14001e8fb:	dec    dl
   14001e8fd:	jae    0x14001e8c8
   14001e8ff:	fwait
   14001e900:	push   rdi
   14001e901:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e902:	icebp  
   14001e903:	and    ch,bh
   14001e905:	sbb    BYTE PTR [rsi+0x39adfd47],dl
   14001e90b:	test   eax,0xcc5e1145
   14001e910:	jbe    0x14001e95f
   14001e912:	out    dx,al
   14001e913:	(bad)  
   14001e914:	(bad)  
   14001e915:	icebp  
   14001e916:	mov    DWORD PTR [rbx-0x24],esp
   14001e919:	rex.R
   14001e91a:	lea    esp,es:[rax+rdi*8+0x41]
   14001e91f:	call   0x1917b191d
   14001e924:	xchg   r11d,eax
   14001e926:	(bad)  
   14001e927:	xor    al,0x53
   14001e929:	es mov cl,0xda
   14001e92c:	jmp    0x14001e8c8
   14001e92e:	(bad)  
   14001e92f:	mov    edi,0xe9c6f9b3
   14001e934:	or     eax,DWORD PTR [rbp-0x5f]
   14001e937:	mov    WORD PTR [rcx],ds
   14001e939:	lock (bad) 
   14001e93b:	(bad)
   14001e940:	cmp    al,0x9b
   14001e942:	push   rcx
   14001e943:	mov    esi,0xdb362784
   14001e948:	xchg   esi,eax
   14001e949:	xchg   edx,eax
   14001e94a:	cdq    
   14001e94b:	xor    eax,0x50fe2e2e
   14001e950:	es push rsp
   14001e952:	mov    ecx,0xdee89e99
   14001e957:	cld    
   14001e958:	mov    WORD PTR [rbp+0x71],ds
   14001e95b:	adc    dh,BYTE PTR [rcx+riz*8]
   14001e95e:	(bad)  
   14001e95f:	ja     0x14001e90a
   14001e961:	ss cs (bad) 
   14001e964:	adc    DWORD PTR [rdx+0x3f03ab49],ecx
   14001e96a:	out    0x45,al
   14001e96c:	mov    ebx,0xe3208183
   14001e971:	loopne 0x14001e904
   14001e973:	jbe    0x14001e9d0
   14001e975:	pop    rsp
   14001e976:	not    BYTE PTR [rbx]
   14001e978:	rex.WB jmp 0x195f3e6d7
   14001e97e:	ds cwde 
   14001e980:	ins    BYTE PTR es:[rdi],dx
   14001e981:	(bad)  
   14001e982:	(bad)  
   14001e983:	and    esp,edx
   14001e985:	ds (bad) 
   14001e987:	rex.R (bad) 
   14001e989:	mov    ecx,esi
   14001e98b:	stos   BYTE PTR es:[rdi],al
   14001e98c:	jle    0x14001e9c5
   14001e98e:	test   eax,0x417fd6cf
   14001e993:	cmp    BYTE PTR [rsi-0x3d],ch
   14001e996:	es pop rbp
   14001e998:	jl     0x14001ea10
   14001e99a:	mov    DWORD PTR [rbx-0x2911353c],esi
   14001e9a0:	pop    rcx
   14001e9a1:	sbb    eax,0xa1e16fd6
   14001e9a6:	mov    cl,0xa
   14001e9a8:	repz adc al,0x1e
   14001e9ab:	in     al,0x4b
   14001e9ad:	test   al,0x79
   14001e9af:	adc    DWORD PTR [rbx],0xabd769cb
   14001e9b5:	ja     0x14001e9c5
   14001e9b7:	mov    dl,0xb9
   14001e9b9:	ret    0x5ca1
   14001e9bc:	add    DWORD PTR [rsi-0x3a],edi
   14001e9bf:	cmp    DWORD PTR [rcx+rbp*4+0x152480fe],ebx
   14001e9c6:	cdq    
   14001e9c7:	in     eax,0x36
   14001e9c9:	movabs al,ds:0x66866e511c8e0b36
   14001e9d2:	(bad)  
   14001e9d3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001e9d4:	fidiv  DWORD PTR ds:[rcx-0x3e]
   14001e9d8:	sub    al,0x6f
   14001e9da:	fisubr WORD PTR [rsp+rdx*4]
   14001e9dd:	sar    DWORD PTR [rcx-0x7efbf6b7],cl
   14001e9e3:	lock mov cl,0xb8
   14001e9e6:	out    0x95,al
   14001e9e8:	movabs ds:0x431e2eb11b7b490d,eax
   14001e9f1:	sar    BYTE PTR [rsi],cl
   14001e9f3:	rex.W sti 
   14001e9f5:	outs   dx,BYTE PTR ds:[rsi]
   14001e9f6:	pop    rcx
   14001e9f7:	sub    eax,0xc3f6dbe9
   14001e9fc:	push   rcx
   14001e9fd:	addr32 xchg ecx,eax
   14001e9ff:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001ea00:	int3   
   14001ea01:	mov    al,0xa9
   14001ea03:	(bad)  
   14001ea04:	je     0x14001ea12
   14001ea06:	(bad)  
   14001ea07:	jp     0x14001ea6f
   14001ea09:	mov    ecx,0x5de9461
   14001ea0e:	(bad)  
   14001ea0f:	icebp  
   14001ea10:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001ea12:	jb     0x14001ea59
   14001ea14:	js     0x14001ea7f
   14001ea16:	je     0x14001ea68
   14001ea18:	jb     0x14001ea89
   14001ea1a:	movsxd esp,DWORD PTR [rbp+0x73]
   14001ea1d:	jae    0x14001ea1f
   14001ea1f:	add    BYTE PTR [rbp+0x0],ch
   14001ea22:	jae    0x14001ea24
   14001ea24:	movsxd eax,DWORD PTR [rax]
   14001ea26:	outs   dx,DWORD PTR ds:[rsi]
   14001ea27:	add    BYTE PTR [rdx+0x0],dh
   14001ea2a:	add    BYTE PTR gs:[rbp+0x0],ah
   14001ea2e:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14001ea33:	add    BYTE PTR [rax+rax*1+0x0],ch
   14001ea37:	add    BYTE PTR [rdx],bh
   14001ea39:	and    BYTE PTR [rax],al
   14001ea3b:	add    BYTE PTR [rsi],ch
   14001ea3d:	(bad)  
   14001ea3e:	pop    rsp
   14001ea3f:	add    BYTE PTR [rdi],bh
   14001ea41:	sub    al,BYTE PTR [rax]
	...
   14001ea4f:	add    BYTE PTR [rsi+0x69],dl
   14001ea52:	jae    0x14001eac9
   14001ea54:	(bad)  
   14001ea55:	ins    BYTE PTR es:[rdi],dx
   14001ea56:	and    BYTE PTR [rbx+0x2b],al
   14001ea59:	sub    esp,DWORD PTR [rax]
   14001ea5b:	rex.XB push r10
   14001ea5d:	push   rsp
   14001ea5e:	cmp    ah,BYTE PTR [rax]
   14001ea60:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001ea62:	je     0x14001ea84
   14001ea64:	outs   dx,BYTE PTR gs:[rsi]
   14001ea66:	outs   dx,DWORD PTR ds:[rsi]
   14001ea67:	jne    0x14001ead0
   14001ea69:	push   0x6d656d20
   14001ea6e:	outs   dx,DWORD PTR ds:[rsi]
   14001ea6f:	jb     0x14001eaea
   14001ea71:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14001ea75:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001ea78:	jo     0x14001eae6
   14001ea7a:	gs je  0x14001eae2
   14001ea7d:	and    BYTE PTR [rbx+0x61],ah
   14001ea80:	ins    BYTE PTR es:[rdi],dx
   14001ea81:	ins    BYTE PTR es:[rdi],dx
   14001ea82:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14001ea86:	jae    0x14001eafc
   14001ea88:	jb     0x14001eaef
   14001ea8a:	jb     0x14001eafe
   14001ea8c:	outs   dx,DWORD PTR ds:[rsi]
   14001ea8d:	jb     0x14001eabd
   14001ea8f:	add    BYTE PTR [rdx+0x0],dh
   14001ea92:	jne    0x14001ea94
   14001ea94:	outs   dx,BYTE PTR ds:[rsi]
   14001ea95:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001ea99:	add    BYTE PTR [rbp+0x0],ch
   14001ea9c:	add    BYTE PTR gs:[rax],ah
   14001ea9f:	add    BYTE PTR [rbp+0x0],ah
   14001eaa2:	jb     0x14001eaa4
   14001eaa4:	jb     0x14001eaa6
   14001eaa6:	outs   dx,DWORD PTR ds:[rsi]
   14001eaa7:	add    BYTE PTR [rdx+0x0],dh
   14001eaaa:	and    BYTE PTR [rax],al
   14001eaac:	add    BYTE PTR [rax],al
   14001eaae:	add    BYTE PTR [rax],al
   14001eab0:	or     eax,0xa00
   14001eab5:	add    BYTE PTR [rax],al
   14001eab7:	add    BYTE PTR [rax+rax*1+0x4c],dl
   14001eabb:	add    BYTE PTR [rdi+0x0],cl
   14001eabe:	push   rbx
   14001eabf:	add    BYTE PTR [rbx+0x0],dl
   14001eac2:	and    BYTE PTR [rax],al
   14001eac4:	add    BYTE PTR gs:[rdx+0x0],dh
   14001eac8:	jb     0x14001eaca
   14001eaca:	outs   dx,DWORD PTR ds:[rsi]
   14001eacb:	add    BYTE PTR [rdx+0x0],dh
   14001eace:	or     eax,0xa00
   14001ead3:	add    BYTE PTR [rax],al
   14001ead5:	add    BYTE PTR [rax],al
   14001ead7:	add    BYTE PTR [rbx+0x0],dl
   14001eada:	rex.WB add BYTE PTR [r14+0x0],cl
   14001eade:	rex.RXB add BYTE PTR [r8],r12b
   14001eae1:	add    BYTE PTR [rbp+0x0],ah
   14001eae4:	jb     0x14001eae6
   14001eae6:	jb     0x14001eae8
   14001eae8:	outs   dx,DWORD PTR ds:[rsi]
   14001eae9:	add    BYTE PTR [rdx+0x0],dh
   14001eaec:	or     eax,0xa00
   14001eaf1:	add    BYTE PTR [rax],al
   14001eaf3:	add    BYTE PTR [rax],al
   14001eaf5:	add    BYTE PTR [rax],al
   14001eaf7:	add    BYTE PTR [rax+rax*1+0x4f],al
   14001eafb:	add    BYTE PTR [rbp+0x0],cl
   14001eafe:	add    BYTE PTR [r9+0x0],cl
   14001eb02:	rex.WRX add BYTE PTR [rax],r12b
   14001eb05:	add    BYTE PTR [rbp+0x0],ah
   14001eb08:	jb     0x14001eb0a
   14001eb0a:	jb     0x14001eb0c
   14001eb0c:	outs   dx,DWORD PTR ds:[rsi]
   14001eb0d:	add    BYTE PTR [rdx+0x0],dh
   14001eb10:	or     eax,0xa00
	...
   14001eb1d:	add    BYTE PTR [rax],al
   14001eb1f:	add    BYTE PTR [rdx+0x0],dl
   14001eb22:	add    BYTE PTR ss:[rax],dh
   14001eb25:	add    BYTE PTR [rbx],dh
   14001eb27:	add    BYTE PTR [rbx],dh
   14001eb29:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01f52f
   14001eb2f:	add    BYTE PTR [rax],ah
   14001eb31:	add    BYTE PTR [rcx+0x0],al
   14001eb34:	je     0x14001eb36
   14001eb36:	je     0x14001eb38
   14001eb38:	add    BYTE PTR gs:[rbp+0x0],ch
   14001eb3c:	jo     0x14001eb3e
   14001eb3e:	je     0x14001eb40
   14001eb40:	and    BYTE PTR [rax],al
   14001eb42:	je     0x14001eb44
   14001eb44:	outs   dx,DWORD PTR ds:[rsi]
   14001eb45:	add    BYTE PTR [rax],ah
   14001eb47:	add    BYTE PTR [rbp+0x0],dh
   14001eb4a:	jae    0x14001eb4c
   14001eb4c:	add    BYTE PTR gs:[rax],ah
   14001eb4f:	add    BYTE PTR [rbp+0x0],cl
   14001eb52:	push   rbx
   14001eb53:	add    BYTE PTR [rcx+0x0],cl
   14001eb56:	rex.WR add BYTE PTR [rax],r12b
   14001eb59:	add    BYTE PTR [rbx+0x0],ah
   14001eb5c:	outs   dx,DWORD PTR ds:[rsi]
   14001eb5d:	add    BYTE PTR [rax+rax*1+0x65],ah
   14001eb61:	add    BYTE PTR [rax],ah
   14001eb63:	add    BYTE PTR [rsi+0x0],ah
   14001eb66:	jb     0x14001eb68
   14001eb68:	outs   dx,DWORD PTR ds:[rsi]
   14001eb69:	add    BYTE PTR [rbp+0x0],ch
   14001eb6c:	and    BYTE PTR [rax],al
   14001eb6e:	je     0x14001eb70
   14001eb70:	push   0x73006900
   14001eb75:	add    BYTE PTR [rax],ah
   14001eb77:	add    BYTE PTR [rcx+0x0],ah
   14001eb7a:	jae    0x14001eb7c
   14001eb7c:	jae    0x14001eb7e
   14001eb7e:	add    BYTE PTR gs:[rbp+0x0],ch
   14001eb82:	(bad)  
   14001eb83:	add    BYTE PTR [rax+rax*1+0x79],ch
   14001eb87:	add    BYTE PTR [rax],ah
   14001eb89:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001eb8d:	add    BYTE PTR [rdx+0x0],dh
   14001eb90:	imul   eax,DWORD PTR [rax],0x67006e
   14001eb96:	and    BYTE PTR [rax],al
   14001eb98:	outs   dx,BYTE PTR ds:[rsi]
   14001eb99:	add    BYTE PTR [rcx+0x0],ah
   14001eb9c:	je     0x14001eb9e
   14001eb9e:	imul   eax,DWORD PTR [rax],0x650076
   14001eba4:	and    BYTE PTR [rax],al
   14001eba6:	movsxd eax,DWORD PTR [rax]
   14001eba8:	outs   dx,DWORD PTR ds:[rsi]
   14001eba9:	add    BYTE PTR [rax+rax*1+0x65],ah
   14001ebad:	add    BYTE PTR [rax],ah
   14001ebaf:	add    BYTE PTR [rcx+0x0],ch
   14001ebb2:	outs   dx,BYTE PTR ds:[rsi]
   14001ebb3:	add    BYTE PTR [rcx+0x0],ch
   14001ebb6:	je     0x14001ebb8
   14001ebb8:	imul   eax,DWORD PTR [rax],0x6c0061
   14001ebbe:	imul   eax,DWORD PTR [rax],0x61007a
   14001ebc4:	je     0x14001ebc6
   14001ebc6:	imul   eax,DWORD PTR [rax],0x6e006f
   14001ebcc:	or     al,BYTE PTR [rax]
   14001ebce:	push   rsp
   14001ebcf:	add    BYTE PTR [rax+0x0],ch
   14001ebd2:	imul   eax,DWORD PTR [rax],0x200073
   14001ebd8:	imul   eax,DWORD PTR [rax],0x64006e
   14001ebde:	imul   eax,DWORD PTR [rax],0x610063
   14001ebe4:	je     0x14001ebe6
   14001ebe6:	add    BYTE PTR gs:[rbx+0x0],dh
   14001ebea:	and    BYTE PTR [rax],al
   14001ebec:	(bad)  
   14001ebed:	add    BYTE PTR [rax],ah
   14001ebef:	add    BYTE PTR [rdx+0x0],ah
   14001ebf2:	jne    0x14001ebf4
   14001ebf4:	add    BYTE PTR [eax],ah
   14001ebf7:	add    BYTE PTR [rcx+0x0],ch
   14001ebfa:	outs   dx,BYTE PTR ds:[rsi]
   14001ebfb:	add    BYTE PTR [rax],ah
   14001ebfd:	add    BYTE PTR [rcx+0x0],bh
   14001ec00:	outs   dx,DWORD PTR ds:[rsi]
   14001ec01:	add    BYTE PTR [rbp+0x0],dh
   14001ec04:	jb     0x14001ec06
   14001ec06:	and    BYTE PTR [rax],al
   14001ec08:	(bad)  
   14001ec09:	add    BYTE PTR [rax+0x0],dh
   14001ec0c:	jo     0x14001ec0e
   14001ec0e:	ins    BYTE PTR es:[rdi],dx
   14001ec0f:	add    BYTE PTR [rcx+0x0],ch
   14001ec12:	movsxd eax,DWORD PTR [rax]
   14001ec14:	(bad)  
   14001ec15:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001ec19:	add    BYTE PTR [rdi+0x0],ch
   14001ec1c:	outs   dx,BYTE PTR ds:[rsi]
   14001ec1d:	add    BYTE PTR [rsi],ch
   14001ec1f:	add    BYTE PTR [rax],ah
   14001ec21:	add    BYTE PTR [rcx+0x0],cl
   14001ec24:	je     0x14001ec26
   14001ec26:	and    BYTE PTR [rax],al
   14001ec28:	imul   eax,DWORD PTR [rax],0x200073
   14001ec2e:	ins    DWORD PTR es:[rdi],dx
   14001ec2f:	add    BYTE PTR [rdi+0x0],ch
   14001ec32:	jae    0x14001ec34
   14001ec34:	je     0x14001ec36
   14001ec36:	and    BYTE PTR [rax],al
   14001ec38:	ins    BYTE PTR es:[rdi],dx
   14001ec39:	add    BYTE PTR [rcx+0x0],ch
   14001ec3c:	imul   eax,DWORD PTR [rax],0x65
   14001ec3f:	add    BYTE PTR [rax+rax*1+0x79],ch
   14001ec43:	add    BYTE PTR [rax],ah
   14001ec45:	add    BYTE PTR [rax+rax*1+0x68],dh
   14001ec49:	add    BYTE PTR [rbp+0x0],ah
   14001ec4c:	and    BYTE PTR [rax],al
   14001ec4e:	jb     0x14001ec50
   14001ec50:	add    BYTE PTR gs:[rbx+0x0],dh
   14001ec54:	jne    0x14001ec56
   14001ec56:	ins    BYTE PTR es:[rdi],dx
   14001ec57:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001ec5b:	add    BYTE PTR [rdi+0x0],ch
   14001ec5e:	data16 add BYTE PTR [rax],ah
   14001ec61:	add    BYTE PTR [rbx+0x0],ah
   14001ec64:	(bad)  
   14001ec65:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14001ec69:	add    BYTE PTR [rcx+0x0],ch
   14001ec6c:	outs   dx,BYTE PTR ds:[rsi]
   14001ec6d:	add    BYTE PTR [rdi+0x0],ah
   14001ec70:	and    BYTE PTR [rax],al
   14001ec72:	(bad)  
   14001ec73:	add    BYTE PTR [rsi+0x0],ch
   14001ec76:	and    BYTE PTR [rax],al
   14001ec78:	rex.WRB add BYTE PTR [r11+0x0],r10b
   14001ec7c:	rex.WB add BYTE PTR [r8+rax*1+0x2d],cl
   14001ec81:	add    BYTE PTR [rbx+0x0],ah
   14001ec84:	outs   dx,DWORD PTR ds:[rsi]
   14001ec85:	add    BYTE PTR [rbp+0x0],ch
   14001ec88:	jo     0x14001ec8a
   14001ec8a:	imul   eax,DWORD PTR [rax],0x65006c
   14001ec90:	add    BYTE PTR fs:[rax],ah
   14001ec93:	add    BYTE PTR [rax],ch
   14001ec95:	add    BYTE PTR [rdi],ch
   14001ec97:	add    BYTE PTR [rbx+0x0],ah
   14001ec9a:	ins    BYTE PTR es:[rdi],dx
   14001ec9b:	add    BYTE PTR [rdx+0x0],dh
   14001ec9e:	sub    DWORD PTR [rax],eax
   14001eca0:	and    BYTE PTR [rax],al
   14001eca2:	data16 add BYTE PTR [rbp+0x0],dh
   14001eca6:	outs   dx,BYTE PTR ds:[rsi]
   14001eca7:	add    BYTE PTR [rbx+0x0],ah
   14001ecaa:	je     0x14001ecac
   14001ecac:	imul   eax,DWORD PTR [rax],0x6e006f
   14001ecb2:	and    BYTE PTR [rax],al
   14001ecb4:	data16 add BYTE PTR [rdx+0x0],dh
   14001ecb8:	outs   dx,DWORD PTR ds:[rsi]
   14001ecb9:	add    BYTE PTR [rbp+0x0],ch
   14001ecbc:	and    BYTE PTR [rax],al
   14001ecbe:	(bad)  
   14001ecbf:	add    BYTE PTR [rax],ah
   14001ecc1:	add    BYTE PTR [rsi+0x0],ch
   14001ecc4:	(bad)  
   14001ecc5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001ecc9:	add    BYTE PTR [rsi+0x0],dh
   14001eccc:	add    BYTE PTR gs:[rax],ah
   14001eccf:	add    BYTE PTR [rbx+0x0],ah
   14001ecd2:	outs   dx,DWORD PTR ds:[rsi]
   14001ecd3:	add    BYTE PTR [rsi+0x0],ch
   14001ecd6:	jae    0x14001ecd8
   14001ecd8:	je     0x14001ecda
   14001ecda:	jb     0x14001ecdc
   14001ecdc:	jne    0x14001ecde
   14001ecde:	movsxd eax,DWORD PTR [rax]
   14001ece0:	je     0x14001ece2
   14001ece2:	outs   dx,DWORD PTR ds:[rsi]
   14001ece3:	add    BYTE PTR [rdx+0x0],dh
   14001ece6:	and    BYTE PTR [rax],al
   14001ece8:	outs   dx,DWORD PTR ds:[rsi]
   14001ece9:	add    BYTE PTR [rdx+0x0],dh
   14001ecec:	and    BYTE PTR [rax],al
   14001ecee:	data16 add BYTE PTR [rdx+0x0],dh
   14001ecf2:	outs   dx,DWORD PTR ds:[rsi]
   14001ecf3:	add    BYTE PTR [rbp+0x0],ch
   14001ecf6:	and    BYTE PTR [rax],al
   14001ecf8:	add    BYTE PTR [rax+rax*1+0x6c],r13b
   14001ecfd:	add    BYTE PTR [rbp+0x0],cl
   14001ed00:	(bad)  
   14001ed01:	add    BYTE PTR [rcx+0x0],ch
   14001ed04:	outs   dx,BYTE PTR ds:[rsi]
   14001ed05:	add    BYTE PTR [rsi],ch
   14001ed07:	add    BYTE PTR [rip+0xa00],cl        # 0x14001f70d
   14001ed0d:	add    BYTE PTR [rax],al
   14001ed0f:	add    BYTE PTR [rdx+0x0],dl
   14001ed12:	add    BYTE PTR ss:[rax],dh
   14001ed15:	add    BYTE PTR [rbx],dh
   14001ed17:	add    BYTE PTR [rdx],dh
   14001ed19:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01f71f
   14001ed1f:	add    BYTE PTR [rax],ah
   14001ed21:	add    BYTE PTR [rsi+0x0],ch
   14001ed24:	outs   dx,DWORD PTR ds:[rsi]
   14001ed25:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001ed29:	add    BYTE PTR [rbp+0x0],ah
   14001ed2c:	outs   dx,BYTE PTR ds:[rsi]
   14001ed2d:	add    BYTE PTR [rdi+0x0],ch
   14001ed30:	jne    0x14001ed32
   14001ed32:	add    BYTE PTR [eax+0x0],ch
   14001ed36:	and    BYTE PTR [rax],al
   14001ed38:	jae    0x14001ed3a
   14001ed3a:	jo     0x14001ed3c
   14001ed3c:	(bad)  
   14001ed3d:	add    BYTE PTR [rbx+0x0],ah
   14001ed40:	add    BYTE PTR gs:[rax],ah
   14001ed43:	add    BYTE PTR [rsi+0x0],ah
   14001ed46:	outs   dx,DWORD PTR ds:[rsi]
   14001ed47:	add    BYTE PTR [rdx+0x0],dh
   14001ed4a:	and    BYTE PTR [rax],al
   14001ed4c:	ins    BYTE PTR es:[rdi],dx
   14001ed4d:	add    BYTE PTR [rdi+0x0],ch
   14001ed50:	movsxd eax,DWORD PTR [rax]
   14001ed52:	(bad)  
   14001ed53:	add    BYTE PTR [rax+rax*1+0x65],ch
   14001ed57:	add    BYTE PTR [rax],ah
   14001ed59:	add    BYTE PTR [rcx+0x0],ch
   14001ed5c:	outs   dx,BYTE PTR ds:[rsi]
   14001ed5d:	add    BYTE PTR [rsi+0x0],ah
   14001ed60:	outs   dx,DWORD PTR ds:[rsi]
   14001ed61:	add    BYTE PTR [rdx+0x0],dh
   14001ed64:	ins    DWORD PTR es:[rdi],dx
   14001ed65:	add    BYTE PTR [rcx+0x0],ah
   14001ed68:	je     0x14001ed6a
   14001ed6a:	imul   eax,DWORD PTR [rax],0x6e006f
   14001ed70:	or     eax,0xa00
	...
   14001ed7d:	add    BYTE PTR [rax],al
   14001ed7f:	add    BYTE PTR [rdx+0x0],dl
   14001ed82:	add    BYTE PTR ss:[rax],dh
   14001ed85:	add    BYTE PTR [rbx],dh
   14001ed87:	add    BYTE PTR [rcx],dh
   14001ed89:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01f78f
   14001ed8f:	add    BYTE PTR [rax],ah
   14001ed91:	add    BYTE PTR [rcx+0x0],al
   14001ed94:	je     0x14001ed96
   14001ed96:	je     0x14001ed98
   14001ed98:	add    BYTE PTR gs:[rbp+0x0],ch
   14001ed9c:	jo     0x14001ed9e
   14001ed9e:	je     0x14001eda0
   14001eda0:	and    BYTE PTR [rax],al
   14001eda2:	je     0x14001eda4
   14001eda4:	outs   dx,DWORD PTR ds:[rsi]
   14001eda5:	add    BYTE PTR [rax],ah
   14001eda7:	add    BYTE PTR [rcx+0x0],ch
   14001edaa:	outs   dx,BYTE PTR ds:[rsi]
   14001edab:	add    BYTE PTR [rcx+0x0],ch
   14001edae:	je     0x14001edb0
   14001edb0:	imul   eax,DWORD PTR [rax],0x6c0061
   14001edb6:	imul   eax,DWORD PTR [rax],0x65007a
   14001edbc:	and    BYTE PTR [rax],al
   14001edbe:	je     0x14001edc0
   14001edc0:	push   0x20006500
   14001edc5:	add    BYTE PTR [rbx+0x0],al
   14001edc8:	push   rdx
   14001edc9:	add    BYTE PTR [rax+rax*1+0x20],dl
   14001edcd:	add    BYTE PTR [rbp+0x0],ch
   14001edd0:	outs   dx,DWORD PTR ds:[rsi]
   14001edd1:	add    BYTE PTR [rdx+0x0],dh
   14001edd4:	add    BYTE PTR gs:[rax],ah
   14001edd7:	add    BYTE PTR [rax+rax*1+0x68],dh
   14001eddb:	add    BYTE PTR [rcx+0x0],ah
   14001edde:	outs   dx,BYTE PTR ds:[rsi]
   14001eddf:	add    BYTE PTR [rax],ah
   14001ede1:	add    BYTE PTR [rdi+0x0],ch
   14001ede4:	outs   dx,BYTE PTR ds:[rsi]
   14001ede5:	add    BYTE PTR [rbx+0x0],ah
   14001ede8:	add    BYTE PTR gs:[rsi],ch
   14001edeb:	add    BYTE PTR [rdx],cl
   14001eded:	add    BYTE PTR [rax+rax*1+0x68],dl
   14001edf1:	add    BYTE PTR [rcx+0x0],ch
   14001edf4:	jae    0x14001edf6
   14001edf6:	and    BYTE PTR [rax],al
   14001edf8:	imul   eax,DWORD PTR [rax],0x64006e
   14001edfe:	imul   eax,DWORD PTR [rax],0x610063
   14001ee04:	je     0x14001ee06
   14001ee06:	add    BYTE PTR gs:[rbx+0x0],dh
   14001ee0a:	and    BYTE PTR [rax],al
   14001ee0c:	(bad)  
   14001ee0d:	add    BYTE PTR [rax],ah
   14001ee0f:	add    BYTE PTR [rdx+0x0],ah
   14001ee12:	jne    0x14001ee14
   14001ee14:	add    BYTE PTR [eax],ah
   14001ee17:	add    BYTE PTR [rcx+0x0],ch
   14001ee1a:	outs   dx,BYTE PTR ds:[rsi]
   14001ee1b:	add    BYTE PTR [rax],ah
   14001ee1d:	add    BYTE PTR [rcx+0x0],bh
   14001ee20:	outs   dx,DWORD PTR ds:[rsi]
   14001ee21:	add    BYTE PTR [rbp+0x0],dh
   14001ee24:	jb     0x14001ee26
   14001ee26:	and    BYTE PTR [rax],al
   14001ee28:	(bad)  
   14001ee29:	add    BYTE PTR [rax+0x0],dh
   14001ee2c:	jo     0x14001ee2e
   14001ee2e:	ins    BYTE PTR es:[rdi],dx
   14001ee2f:	add    BYTE PTR [rcx+0x0],ch
   14001ee32:	movsxd eax,DWORD PTR [rax]
   14001ee34:	(bad)  
   14001ee35:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001ee39:	add    BYTE PTR [rdi+0x0],ch
   14001ee3c:	outs   dx,BYTE PTR ds:[rsi]
   14001ee3d:	add    BYTE PTR [rsi],ch
   14001ee3f:	add    BYTE PTR [rip+0xa00],cl        # 0x14001f845
   14001ee45:	add    BYTE PTR [rax],al
   14001ee47:	add    BYTE PTR [rdx+0x0],dl
   14001ee4a:	add    BYTE PTR ss:[rax],dh
   14001ee4d:	add    BYTE PTR [rbx],dh
   14001ee4f:	add    BYTE PTR [rax],dh
   14001ee51:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01f857
   14001ee57:	add    BYTE PTR [rax],ah
   14001ee59:	add    BYTE PTR [rbx+0x0],al
   14001ee5c:	push   rdx
   14001ee5d:	add    BYTE PTR [rax+rax*1+0x20],dl
   14001ee61:	add    BYTE PTR [rsi+0x0],ch
   14001ee64:	outs   dx,DWORD PTR ds:[rsi]
   14001ee65:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001ee69:	add    BYTE PTR [rcx+0x0],ch
   14001ee6c:	outs   dx,BYTE PTR ds:[rsi]
   14001ee6d:	add    BYTE PTR [rcx+0x0],ch
   14001ee70:	je     0x14001ee72
   14001ee72:	imul   eax,DWORD PTR [rax],0x6c0061
   14001ee78:	imul   eax,DWORD PTR [rax],0x65007a
   14001ee7e:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x14001f885
	...
   14001ee8d:	add    BYTE PTR [rax],al
   14001ee8f:	add    BYTE PTR [rdx+0x0],dl
   14001ee92:	add    BYTE PTR ss:[rax],dh
   14001ee95:	add    BYTE PTR [rdx],dh
   14001ee97:	add    BYTE PTR [rax],bh
   14001ee99:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01f89f
   14001ee9f:	add    BYTE PTR [rax],ah
   14001eea1:	add    BYTE PTR [rbp+0x0],dh
   14001eea4:	outs   dx,BYTE PTR ds:[rsi]
   14001eea5:	add    BYTE PTR [rcx+0x0],ah
   14001eea8:	(bad)  
   14001eea9:	add    BYTE PTR [rax+rax*1+0x65],ch
   14001eead:	add    BYTE PTR [rax],ah
   14001eeaf:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14001eeb3:	add    BYTE PTR [rax],ah
   14001eeb5:	add    BYTE PTR [rcx+0x0],ch
   14001eeb8:	outs   dx,BYTE PTR ds:[rsi]
   14001eeb9:	add    BYTE PTR [rcx+0x0],ch
   14001eebc:	je     0x14001eebe
   14001eebe:	imul   eax,DWORD PTR [rax],0x6c0061
   14001eec4:	imul   eax,DWORD PTR [rax],0x65007a
   14001eeca:	and    BYTE PTR [rax],al
   14001eecc:	push   0x61006500
   14001eed1:	add    BYTE PTR [rax+0x0],dh
   14001eed4:	or     eax,0xa00
   14001eed9:	add    BYTE PTR [rax],al
   14001eedb:	add    BYTE PTR [rax],al
   14001eedd:	add    BYTE PTR [rax],al
   14001eedf:	add    BYTE PTR [rdx+0x0],dl
   14001eee2:	add    BYTE PTR ss:[rax],dh
   14001eee5:	add    BYTE PTR [rdx],dh
   14001eee7:	add    BYTE PTR [rdi],dh
   14001eee9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01f8ef
   14001eeef:	add    BYTE PTR [rax],ah
   14001eef1:	add    BYTE PTR [rsi+0x0],ch
   14001eef4:	outs   dx,DWORD PTR ds:[rsi]
   14001eef5:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001eef9:	add    BYTE PTR [rbp+0x0],ah
   14001eefc:	outs   dx,BYTE PTR ds:[rsi]
   14001eefd:	add    BYTE PTR [rdi+0x0],ch
   14001ef00:	jne    0x14001ef02
   14001ef02:	add    BYTE PTR [eax+0x0],ch
   14001ef06:	and    BYTE PTR [rax],al
   14001ef08:	jae    0x14001ef0a
   14001ef0a:	jo     0x14001ef0c
   14001ef0c:	(bad)  
   14001ef0d:	add    BYTE PTR [rbx+0x0],ah
   14001ef10:	add    BYTE PTR gs:[rax],ah
   14001ef13:	add    BYTE PTR [rsi+0x0],ah
   14001ef16:	outs   dx,DWORD PTR ds:[rsi]
   14001ef17:	add    BYTE PTR [rdx+0x0],dh
   14001ef1a:	and    BYTE PTR [rax],al
   14001ef1c:	ins    BYTE PTR es:[rdi],dx
   14001ef1d:	add    BYTE PTR [rdi+0x0],ch
   14001ef20:	ja     0x14001ef22
   14001ef22:	imul   eax,DWORD PTR [rax],0x20006f
   14001ef28:	imul   eax,DWORD PTR [rax],0x69006e
   14001ef2e:	je     0x14001ef30
   14001ef30:	imul   eax,DWORD PTR [rax],0x6c0061
   14001ef36:	imul   eax,DWORD PTR [rax],0x61007a
   14001ef3c:	je     0x14001ef3e
   14001ef3e:	imul   eax,DWORD PTR [rax],0x6e006f
   14001ef44:	or     eax,0xa00
   14001ef49:	add    BYTE PTR [rax],al
   14001ef4b:	add    BYTE PTR [rax],al
   14001ef4d:	add    BYTE PTR [rax],al
   14001ef4f:	add    BYTE PTR [rdx+0x0],dl
   14001ef52:	add    BYTE PTR ss:[rax],dh
   14001ef55:	add    BYTE PTR [rdx],dh
   14001ef57:	add    BYTE PTR [rsi],dh
   14001ef59:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01f95f
   14001ef5f:	add    BYTE PTR [rax],ah
   14001ef61:	add    BYTE PTR [rsi+0x0],ch
   14001ef64:	outs   dx,DWORD PTR ds:[rsi]
   14001ef65:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001ef69:	add    BYTE PTR [rbp+0x0],ah
   14001ef6c:	outs   dx,BYTE PTR ds:[rsi]
   14001ef6d:	add    BYTE PTR [rdi+0x0],ch
   14001ef70:	jne    0x14001ef72
   14001ef72:	add    BYTE PTR [eax+0x0],ch
   14001ef76:	and    BYTE PTR [rax],al
   14001ef78:	jae    0x14001ef7a
   14001ef7a:	jo     0x14001ef7c
   14001ef7c:	(bad)  
   14001ef7d:	add    BYTE PTR [rbx+0x0],ah
   14001ef80:	add    BYTE PTR gs:[rax],ah
   14001ef83:	add    BYTE PTR [rsi+0x0],ah
   14001ef86:	outs   dx,DWORD PTR ds:[rsi]
   14001ef87:	add    BYTE PTR [rdx+0x0],dh
   14001ef8a:	and    BYTE PTR [rax],al
   14001ef8c:	jae    0x14001ef8e
   14001ef8e:	je     0x14001ef90
   14001ef90:	add    BYTE PTR fs:[rcx+0x0],ch
   14001ef94:	outs   dx,DWORD PTR ds:[rsi]
   14001ef95:	add    BYTE PTR [rax],ah
   14001ef97:	add    BYTE PTR [rcx+0x0],ch
   14001ef9a:	outs   dx,BYTE PTR ds:[rsi]
   14001ef9b:	add    BYTE PTR [rcx+0x0],ch
   14001ef9e:	je     0x14001efa0
   14001efa0:	imul   eax,DWORD PTR [rax],0x6c0061
   14001efa6:	imul   eax,DWORD PTR [rax],0x61007a
   14001efac:	je     0x14001efae
   14001efae:	imul   eax,DWORD PTR [rax],0x6e006f
   14001efb4:	or     eax,0xa00
   14001efb9:	add    BYTE PTR [rax],al
   14001efbb:	add    BYTE PTR [rax],al
   14001efbd:	add    BYTE PTR [rax],al
   14001efbf:	add    BYTE PTR [rdx+0x0],dl
   14001efc2:	add    BYTE PTR ss:[rax],dh
   14001efc5:	add    BYTE PTR [rdx],dh
   14001efc7:	add    BYTE PTR [rip+0xa000d00],dh        # 0x14a01fccd
   14001efcd:	add    BYTE PTR [rip+0x70002000],ch        # 0x1b0020fd3
   14001efd3:	add    BYTE PTR [rbp+0x0],dh
   14001efd6:	jb     0x14001efd8
   14001efd8:	add    BYTE PTR gs:[rax],ah
   14001efdb:	add    BYTE PTR [rsi+0x0],dh
   14001efde:	imul   eax,DWORD PTR [rax],0x740072
   14001efe4:	jne    0x14001efe6
   14001efe6:	(bad)  
   14001efe7:	add    BYTE PTR [rax+rax*1+0x20],ch
   14001efeb:	add    BYTE PTR [rsi+0x0],ah
   14001efee:	jne    0x14001eff0
   14001eff0:	outs   dx,BYTE PTR ds:[rsi]
   14001eff1:	add    BYTE PTR [rbx+0x0],ah
   14001eff4:	je     0x14001eff6
   14001eff6:	imul   eax,DWORD PTR [rax],0x6e006f
   14001effc:	and    BYTE PTR [rax],al
   14001effe:	movsxd eax,DWORD PTR [rax]
   14001f000:	(bad)  
   14001f001:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14001f005:	add    BYTE PTR [rip+0xa00],cl        # 0x14001fa0b
   14001f00b:	add    BYTE PTR [rax],al
   14001f00d:	add    BYTE PTR [rax],al
   14001f00f:	add    BYTE PTR [rdx+0x0],dl
   14001f012:	add    BYTE PTR ss:[rax],dh
   14001f015:	add    BYTE PTR [rdx],dh
   14001f017:	add    BYTE PTR [rax+rax*1],dh
   14001f01a:	or     eax,0x2d000a00
   14001f01f:	add    BYTE PTR [rax],ah
   14001f021:	add    BYTE PTR [rsi+0x0],ch
   14001f024:	outs   dx,DWORD PTR ds:[rsi]
   14001f025:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001f029:	add    BYTE PTR [rbp+0x0],ah
   14001f02c:	outs   dx,BYTE PTR ds:[rsi]
   14001f02d:	add    BYTE PTR [rdi+0x0],ch
   14001f030:	jne    0x14001f032
   14001f032:	add    BYTE PTR [eax+0x0],ch
   14001f036:	and    BYTE PTR [rax],al
   14001f038:	jae    0x14001f03a
   14001f03a:	jo     0x14001f03c
   14001f03c:	(bad)  
   14001f03d:	add    BYTE PTR [rbx+0x0],ah
   14001f040:	add    BYTE PTR gs:[rax],ah
   14001f043:	add    BYTE PTR [rsi+0x0],ah
   14001f046:	outs   dx,DWORD PTR ds:[rsi]
   14001f047:	add    BYTE PTR [rdx+0x0],dh
   14001f04a:	and    BYTE PTR [rax],al
   14001f04c:	pop    rdi
   14001f04d:	add    BYTE PTR [rdi+0x0],ch
   14001f050:	outs   dx,BYTE PTR ds:[rsi]
   14001f051:	add    BYTE PTR [rbp+0x0],ah
   14001f054:	js     0x14001f056
   14001f056:	imul   eax,DWORD PTR [rax],0x2f0074
   14001f05c:	(bad)  
   14001f05d:	add    BYTE PTR [rax+rax*1+0x65],dh
   14001f061:	add    BYTE PTR [rax+0x0],bh
   14001f064:	imul   eax,DWORD PTR [rax],0x200074
   14001f06a:	je     0x14001f06c
   14001f06c:	(bad)  
   14001f06d:	add    BYTE PTR [rdx+0x0],ah
   14001f070:	ins    BYTE PTR es:[rdi],dx
   14001f071:	add    BYTE PTR [rbp+0x0],ah
   14001f074:	or     eax,0xa00
   14001f079:	add    BYTE PTR [rax],al
   14001f07b:	add    BYTE PTR [rax],al
   14001f07d:	add    BYTE PTR [rax],al
   14001f07f:	add    BYTE PTR [rdx+0x0],dl
   14001f082:	add    BYTE PTR ss:[rax],dh
   14001f085:	add    BYTE PTR [rcx],dh
   14001f087:	add    BYTE PTR [rcx],bh
   14001f089:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01fa8f
   14001f08f:	add    BYTE PTR [rax],ah
   14001f091:	add    BYTE PTR [rbp+0x0],dh
   14001f094:	outs   dx,BYTE PTR ds:[rsi]
   14001f095:	add    BYTE PTR [rcx+0x0],ah
   14001f098:	(bad)  
   14001f099:	add    BYTE PTR [rax+rax*1+0x65],ch
   14001f09d:	add    BYTE PTR [rax],ah
   14001f09f:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14001f0a3:	add    BYTE PTR [rax],ah
   14001f0a5:	add    BYTE PTR [rdi+0x0],ch
   14001f0a8:	jo     0x14001f0aa
   14001f0aa:	add    BYTE PTR gs:[rsi+0x0],ch
   14001f0ae:	and    BYTE PTR [rax],al
   14001f0b0:	movsxd eax,DWORD PTR [rax]
   14001f0b2:	outs   dx,DWORD PTR ds:[rsi]
   14001f0b3:	add    BYTE PTR [rsi+0x0],ch
   14001f0b6:	jae    0x14001f0b8
   14001f0b8:	outs   dx,DWORD PTR ds:[rsi]
   14001f0b9:	add    BYTE PTR [rax+rax*1+0x65],ch
   14001f0bd:	add    BYTE PTR [rax],ah
   14001f0bf:	add    BYTE PTR [rax+rax*1+0x65],ah
   14001f0c3:	add    BYTE PTR [rsi+0x0],dh
   14001f0c6:	imul   eax,DWORD PTR [rax],0x650063
   14001f0cc:	or     eax,0xa00
	...
   14001f0dd:	add    BYTE PTR [rax],al
   14001f0df:	add    BYTE PTR [rdx+0x0],dl
   14001f0e2:	add    BYTE PTR ss:[rax],dh
   14001f0e5:	add    BYTE PTR [rcx],dh
   14001f0e7:	add    BYTE PTR [rax],bh
   14001f0e9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01faef
   14001f0ef:	add    BYTE PTR [rax],ah
   14001f0f1:	add    BYTE PTR [rbp+0x0],dh
   14001f0f4:	outs   dx,BYTE PTR ds:[rsi]
   14001f0f5:	add    BYTE PTR [rbp+0x0],ah
   14001f0f8:	js     0x14001f0fa
   14001f0fa:	jo     0x14001f0fc
   14001f0fc:	add    BYTE PTR gs:[rbx+0x0],ah
   14001f100:	je     0x14001f102
   14001f102:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14001f107:	add    BYTE PTR [rax+0x0],ch
   14001f10a:	add    BYTE PTR gs:[rcx+0x0],ah
   14001f10e:	jo     0x14001f110
   14001f110:	and    BYTE PTR [rax],al
   14001f112:	add    BYTE PTR gs:[rdx+0x0],dh
   14001f116:	jb     0x14001f118
   14001f118:	outs   dx,DWORD PTR ds:[rsi]
   14001f119:	add    BYTE PTR [rdx+0x0],dh
   14001f11c:	or     eax,0xa00
	...
   14001f12d:	add    BYTE PTR [rax],al
   14001f12f:	add    BYTE PTR [rdx+0x0],dl
   14001f132:	add    BYTE PTR ss:[rax],dh
   14001f135:	add    BYTE PTR [rcx],dh
   14001f137:	add    BYTE PTR [rdi],dh
   14001f139:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01fb3f
   14001f13f:	add    BYTE PTR [rax],ah
   14001f141:	add    BYTE PTR [rbp+0x0],dh
   14001f144:	outs   dx,BYTE PTR ds:[rsi]
   14001f145:	add    BYTE PTR [rbp+0x0],ah
   14001f148:	js     0x14001f14a
   14001f14a:	jo     0x14001f14c
   14001f14c:	add    BYTE PTR gs:[rbx+0x0],ah
   14001f150:	je     0x14001f152
   14001f152:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14001f157:	add    BYTE PTR [rbp+0x0],ch
   14001f15a:	jne    0x14001f15c
   14001f15c:	ins    BYTE PTR es:[rdi],dx
   14001f15d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001f161:	add    BYTE PTR [rax+rax*1+0x68],dh
   14001f165:	add    BYTE PTR [rdx+0x0],dh
   14001f168:	add    BYTE PTR gs:[rcx+0x0],ah
   14001f16c:	add    BYTE PTR fs:[rax],ah
   14001f16f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14001f173:	add    BYTE PTR [rbx+0x0],ah
   14001f176:	imul   eax,DWORD PTR [rax],0x20
   14001f179:	add    BYTE PTR [rbp+0x0],ah
   14001f17c:	jb     0x14001f17e
   14001f17e:	jb     0x14001f180
   14001f180:	outs   dx,DWORD PTR ds:[rsi]
   14001f181:	add    BYTE PTR [rdx+0x0],dh
   14001f184:	or     eax,0xa00
   14001f189:	add    BYTE PTR [rax],al
   14001f18b:	add    BYTE PTR [rax],al
   14001f18d:	add    BYTE PTR [rax],al
   14001f18f:	add    BYTE PTR [rdx+0x0],dl
   14001f192:	add    BYTE PTR ss:[rax],dh
   14001f195:	add    BYTE PTR [rcx],dh
   14001f197:	add    BYTE PTR [rsi],dh
   14001f199:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01fb9f
   14001f19f:	add    BYTE PTR [rax],ah
   14001f1a1:	add    BYTE PTR [rsi+0x0],ch
   14001f1a4:	outs   dx,DWORD PTR ds:[rsi]
   14001f1a5:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001f1a9:	add    BYTE PTR [rbp+0x0],ah
   14001f1ac:	outs   dx,BYTE PTR ds:[rsi]
   14001f1ad:	add    BYTE PTR [rdi+0x0],ch
   14001f1b0:	jne    0x14001f1b2
   14001f1b2:	add    BYTE PTR [eax+0x0],ch
   14001f1b6:	and    BYTE PTR [rax],al
   14001f1b8:	jae    0x14001f1ba
   14001f1ba:	jo     0x14001f1bc
   14001f1bc:	(bad)  
   14001f1bd:	add    BYTE PTR [rbx+0x0],ah
   14001f1c0:	add    BYTE PTR gs:[rax],ah
   14001f1c3:	add    BYTE PTR [rsi+0x0],ah
   14001f1c6:	outs   dx,DWORD PTR ds:[rsi]
   14001f1c7:	add    BYTE PTR [rdx+0x0],dh
   14001f1ca:	and    BYTE PTR [rax],al
   14001f1cc:	je     0x14001f1ce
   14001f1ce:	push   0x65007200
   14001f1d3:	add    BYTE PTR [rcx+0x0],ah
   14001f1d6:	add    BYTE PTR fs:[rax],ah
   14001f1d9:	add    BYTE PTR [rax+rax*1+0x61],ah
   14001f1dd:	add    BYTE PTR [rax+rax*1+0x61],dh
   14001f1e1:	add    BYTE PTR [rip+0xa00],cl        # 0x14001fbe7
	...
   14001f1ef:	add    BYTE PTR [rdx+0x0],dl
   14001f1f2:	add    BYTE PTR ss:[rax],dh
   14001f1f5:	add    BYTE PTR [rcx],dh
   14001f1f7:	add    BYTE PTR [rax],dh
   14001f1f9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01fbff
   14001f1ff:	add    BYTE PTR [rax],ah
   14001f201:	add    BYTE PTR [rcx+0x0],ah
   14001f204:	(bad)  
   14001f205:	add    BYTE PTR [rdi+0x0],ch
   14001f208:	jb     0x14001f20a
   14001f20a:	je     0x14001f20c
   14001f20c:	sub    BYTE PTR [rax],al
   14001f20e:	sub    DWORD PTR [rax],eax
   14001f210:	and    BYTE PTR [rax],al
   14001f212:	push   0x73006100
   14001f217:	add    BYTE PTR [rax],ah
   14001f219:	add    BYTE PTR [rdx+0x0],ah
   14001f21c:	add    BYTE PTR gs:[rbp+0x0],ah
   14001f220:	outs   dx,BYTE PTR ds:[rsi]
   14001f221:	add    BYTE PTR [rax],ah
   14001f223:	add    BYTE PTR [rbx+0x0],ah
   14001f226:	(bad)  
   14001f227:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14001f22b:	add    BYTE PTR [rbp+0x0],ah
   14001f22e:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x14001fc35
	...
   14001f23d:	add    BYTE PTR [rax],al
   14001f23f:	add    BYTE PTR [rdx+0x0],dl
   14001f242:	add    BYTE PTR ss:[rax],dh
   14001f245:	add    BYTE PTR [rax],dh
   14001f247:	add    BYTE PTR [rcx],bh
   14001f249:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01fc4f
   14001f24f:	add    BYTE PTR [rax],ah
   14001f251:	add    BYTE PTR [rsi+0x0],ch
   14001f254:	outs   dx,DWORD PTR ds:[rsi]
   14001f255:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001f259:	add    BYTE PTR [rbp+0x0],ah
   14001f25c:	outs   dx,BYTE PTR ds:[rsi]
   14001f25d:	add    BYTE PTR [rdi+0x0],ch
   14001f260:	jne    0x14001f262
   14001f262:	add    BYTE PTR [eax+0x0],ch
   14001f266:	and    BYTE PTR [rax],al
   14001f268:	jae    0x14001f26a
   14001f26a:	jo     0x14001f26c
   14001f26c:	(bad)  
   14001f26d:	add    BYTE PTR [rbx+0x0],ah
   14001f270:	add    BYTE PTR gs:[rax],ah
   14001f273:	add    BYTE PTR [rsi+0x0],ah
   14001f276:	outs   dx,DWORD PTR ds:[rsi]
   14001f277:	add    BYTE PTR [rdx+0x0],dh
   14001f27a:	and    BYTE PTR [rax],al
   14001f27c:	add    BYTE PTR gs:[rsi+0x0],ch
   14001f280:	jbe    0x14001f282
   14001f282:	imul   eax,DWORD PTR [rax],0x6f0072
   14001f288:	outs   dx,BYTE PTR ds:[rsi]
   14001f289:	add    BYTE PTR [rbp+0x0],ch
   14001f28c:	add    BYTE PTR gs:[rsi+0x0],ch
   14001f290:	je     0x14001f292
   14001f292:	or     eax,0xa00
	...
   14001f29f:	add    BYTE PTR [rdx+0x0],dl
   14001f2a2:	add    BYTE PTR ss:[rax],dh
   14001f2a5:	add    BYTE PTR [rax],dh
   14001f2a7:	add    BYTE PTR [rax],bh
   14001f2a9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01fcaf
   14001f2af:	add    BYTE PTR [rax],ah
   14001f2b1:	add    BYTE PTR [rsi+0x0],ch
   14001f2b4:	outs   dx,DWORD PTR ds:[rsi]
   14001f2b5:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001f2b9:	add    BYTE PTR [rbp+0x0],ah
   14001f2bc:	outs   dx,BYTE PTR ds:[rsi]
   14001f2bd:	add    BYTE PTR [rdi+0x0],ch
   14001f2c0:	jne    0x14001f2c2
   14001f2c2:	add    BYTE PTR [eax+0x0],ch
   14001f2c6:	and    BYTE PTR [rax],al
   14001f2c8:	jae    0x14001f2ca
   14001f2ca:	jo     0x14001f2cc
   14001f2cc:	(bad)  
   14001f2cd:	add    BYTE PTR [rbx+0x0],ah
   14001f2d0:	add    BYTE PTR gs:[rax],ah
   14001f2d3:	add    BYTE PTR [rsi+0x0],ah
   14001f2d6:	outs   dx,DWORD PTR ds:[rsi]
   14001f2d7:	add    BYTE PTR [rdx+0x0],dh
   14001f2da:	and    BYTE PTR [rax],al
   14001f2dc:	(bad)  
   14001f2dd:	add    BYTE PTR [rdx+0x0],dh
   14001f2e0:	add    BYTE PTR [ebp+0x0],dh
   14001f2e4:	ins    DWORD PTR es:[rdi],dx
   14001f2e5:	add    BYTE PTR [rbp+0x0],ah
   14001f2e8:	outs   dx,BYTE PTR ds:[rsi]
   14001f2e9:	add    BYTE PTR [rax+rax*1+0x73],dh
   14001f2ed:	add    BYTE PTR [rip+0xa00],cl        # 0x14001fcf3
	...
   14001f2ff:	add    BYTE PTR [rdx+0x0],dl
   14001f302:	add    BYTE PTR ss:[rax],dh
   14001f305:	add    BYTE PTR [rax],dh
   14001f307:	add    BYTE PTR [rdx],dh
   14001f309:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d01fd0f
   14001f30f:	add    BYTE PTR [rax],ah
   14001f311:	add    BYTE PTR [rsi+0x0],ah
   14001f314:	ins    BYTE PTR es:[rdi],dx
   14001f315:	add    BYTE PTR [rdi+0x0],ch
   14001f318:	(bad)  
   14001f319:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001f31d:	add    BYTE PTR [rsi+0x0],ch
   14001f320:	add    BYTE PTR [eax],ah
   14001f323:	add    BYTE PTR [rax+0x0],dh
   14001f326:	outs   dx,DWORD PTR ds:[rsi]
   14001f327:	add    BYTE PTR [rcx+0x0],ch
   14001f32a:	outs   dx,BYTE PTR ds:[rsi]
   14001f32b:	add    BYTE PTR [rax+rax*1+0x20],dh
   14001f32f:	add    BYTE PTR [rbx+0x0],dh
   14001f332:	jne    0x14001f334
   14001f334:	jo     0x14001f336
   14001f336:	jo     0x14001f338
   14001f338:	outs   dx,DWORD PTR ds:[rsi]
   14001f339:	add    BYTE PTR [rdx+0x0],dh
   14001f33c:	je     0x14001f33e
   14001f33e:	and    BYTE PTR [rax],al
   14001f340:	outs   dx,BYTE PTR ds:[rsi]
   14001f341:	add    BYTE PTR [rdi+0x0],ch
   14001f344:	je     0x14001f346
   14001f346:	and    BYTE PTR [rax],al
   14001f348:	ins    BYTE PTR es:[rdi],dx
   14001f349:	add    BYTE PTR [rdi+0x0],ch
   14001f34c:	(bad)  
   14001f34d:	add    BYTE PTR [rax+rax*1+0x65],ah
   14001f351:	add    BYTE PTR [rax+rax*1+0xd],ah
   14001f355:	add    BYTE PTR [rdx],cl
	...
   14001f35f:	add    BYTE PTR [rdx],al
	...
   14001f369:	repz add DWORD PTR [rax+0x1],eax
   14001f36d:	add    BYTE PTR [rax],al
   14001f36f:	add    BYTE PTR [rax],cl
   14001f371:	add    BYTE PTR [rax],al
   14001f373:	add    BYTE PTR [rax],al
   14001f375:	add    BYTE PTR [rax],al
   14001f377:	add    BYTE PTR [rax+0x14001f2],ah
   14001f37d:	add    BYTE PTR [rax],al
   14001f37f:	add    BYTE PTR [rcx],cl
   14001f381:	add    BYTE PTR [rax],al
   14001f383:	add    BYTE PTR [rax],al
   14001f385:	add    BYTE PTR [rax],al
   14001f387:	add    BYTE PTR [rax-0xe],al
   14001f38a:	add    DWORD PTR [rax+0x1],eax
   14001f38d:	add    BYTE PTR [rax],al
   14001f38f:	add    BYTE PTR [rdx],cl
   14001f391:	add    BYTE PTR [rax],al
   14001f393:	add    BYTE PTR [rax],al
   14001f395:	add    BYTE PTR [rax],al
   14001f397:	add    al,dh
   14001f399:	icebp  
   14001f39a:	add    DWORD PTR [rax+0x1],eax
   14001f39d:	add    BYTE PTR [rax],al
   14001f39f:	add    BYTE PTR [rax],dl
   14001f3a1:	add    BYTE PTR [rax],al
   14001f3a3:	add    BYTE PTR [rax],al
   14001f3a5:	add    BYTE PTR [rax],al
   14001f3a7:	add    BYTE PTR [rax+0x14001f1],dl
   14001f3ad:	add    BYTE PTR [rax],al
   14001f3af:	add    BYTE PTR [rcx],dl
   14001f3b1:	add    BYTE PTR [rax],al
   14001f3b3:	add    BYTE PTR [rax],al
   14001f3b5:	add    BYTE PTR [rax],al
   14001f3b7:	add    BYTE PTR [rax],dh
   14001f3b9:	icebp  
   14001f3ba:	add    DWORD PTR [rax+0x1],eax
   14001f3bd:	add    BYTE PTR [rax],al
   14001f3bf:	add    BYTE PTR [rdx],dl
   14001f3c1:	add    BYTE PTR [rax],al
   14001f3c3:	add    BYTE PTR [rax],al
   14001f3c5:	add    BYTE PTR [rax],al
   14001f3c7:	add    al,ah
   14001f3c9:	lock add DWORD PTR [rax+0x1],eax
   14001f3cd:	add    BYTE PTR [rax],al
   14001f3cf:	add    BYTE PTR [rbx],dl
   14001f3d1:	add    BYTE PTR [rax],al
   14001f3d3:	add    BYTE PTR [rax],al
   14001f3d5:	add    BYTE PTR [rax],al
   14001f3d7:	add    BYTE PTR [rax+0x14001f0],al
   14001f3dd:	add    BYTE PTR [rax],al
   14001f3df:	add    BYTE PTR [rax],bl
   14001f3e1:	add    BYTE PTR [rax],al
   14001f3e3:	add    BYTE PTR [rax],al
   14001f3e5:	add    BYTE PTR [rax],al
   14001f3e7:	add    BYTE PTR [rax],dl
   14001f3e9:	lock add DWORD PTR [rax+0x1],eax
   14001f3ed:	add    BYTE PTR [rax],al
   14001f3ef:	add    BYTE PTR [rcx],bl
   14001f3f1:	add    BYTE PTR [rax],al
   14001f3f3:	add    BYTE PTR [rax],al
   14001f3f5:	add    BYTE PTR [rax],al
   14001f3f7:	add    al,al
   14001f3f9:	out    dx,eax
   14001f3fa:	add    DWORD PTR [rax+0x1],eax
   14001f3fd:	add    BYTE PTR [rax],al
   14001f3ff:	add    BYTE PTR [rdx],bl
   14001f401:	add    BYTE PTR [rax],al
   14001f403:	add    BYTE PTR [rax],al
   14001f405:	add    BYTE PTR [rax],al
   14001f407:	add    BYTE PTR [rax-0x11],dl
   14001f40a:	add    DWORD PTR [rax+0x1],eax
   14001f40d:	add    BYTE PTR [rax],al
   14001f40f:	add    BYTE PTR [rbx],bl
   14001f411:	add    BYTE PTR [rax],al
   14001f413:	add    BYTE PTR [rax],al
   14001f415:	add    BYTE PTR [rax],al
   14001f417:	add    al,ah
   14001f419:	out    dx,al
   14001f41a:	add    DWORD PTR [rax+0x1],eax
   14001f41d:	add    BYTE PTR [rax],al
   14001f41f:	add    BYTE PTR [rax+rax*1],bl
   14001f422:	add    BYTE PTR [rax],al
   14001f424:	add    BYTE PTR [rax],al
   14001f426:	add    BYTE PTR [rax],al
   14001f428:	nop
   14001f429:	out    dx,al
   14001f42a:	add    DWORD PTR [rax+0x1],eax
   14001f42d:	add    BYTE PTR [rax],al
   14001f42f:	add    BYTE PTR [rsi],bl
   14001f431:	add    BYTE PTR [rax],al
   14001f433:	add    BYTE PTR [rax],al
   14001f435:	add    BYTE PTR [rax],al
   14001f437:	add    BYTE PTR [rax-0x12],cl
   14001f43a:	add    DWORD PTR [rax+0x1],eax
   14001f43d:	add    BYTE PTR [rax],al
   14001f43f:	add    BYTE PTR [rdi],bl
   14001f441:	add    BYTE PTR [rax],al
   14001f443:	add    BYTE PTR [rax],al
   14001f445:	add    BYTE PTR [rax],al
   14001f447:	add    BYTE PTR [rax+0x14001ed],al
   14001f44d:	add    BYTE PTR [rax],al
   14001f44f:	add    BYTE PTR [rax],ah
   14001f451:	add    BYTE PTR [rax],al
   14001f453:	add    BYTE PTR [rax],al
   14001f455:	add    BYTE PTR [rax],al
   14001f457:	add    BYTE PTR [rax],dl
   14001f459:	in     eax,dx
   14001f45a:	add    DWORD PTR [rax+0x1],eax
   14001f45d:	add    BYTE PTR [rax],al
   14001f45f:	add    BYTE PTR [rcx],ah
   14001f461:	add    BYTE PTR [rax],al
   14001f463:	add    BYTE PTR [rax],al
   14001f465:	add    BYTE PTR [rax],al
   14001f467:	add    BYTE PTR [rax],ah
   14001f469:	jmp    0x14001f46c
   14001f46b:	rex add DWORD PTR [rax],eax
   14001f46e:	add    BYTE PTR [rax],al
   14001f470:	js     0x14001f472
   14001f472:	add    BYTE PTR [rax],al
   14001f474:	add    BYTE PTR [rax],al
   14001f476:	add    BYTE PTR [rax],al
   14001f478:	clc    
   14001f479:	(bad)  
   14001f47a:	add    DWORD PTR [rax+0x1],eax
   14001f47d:	add    BYTE PTR [rax],al
   14001f47f:	add    BYTE PTR [rcx+0x0],bh
   14001f482:	add    BYTE PTR [rax],al
   14001f484:	add    BYTE PTR [rax],al
   14001f486:	add    BYTE PTR [rax],al
   14001f488:	fsubr  st,st(2)
   14001f48a:	add    DWORD PTR [rax+0x1],eax
   14001f48d:	add    BYTE PTR [rax],al
   14001f48f:	add    BYTE PTR [rdx+0x0],bh
   14001f492:	add    BYTE PTR [rax],al
   14001f494:	add    BYTE PTR [rax],al
   14001f496:	add    BYTE PTR [rax],al
   14001f498:	mov    eax,0x14001ea
   14001f49d:	add    BYTE PTR [rax],al
   14001f49f:	add    ah,bh
   14001f4a1:	add    BYTE PTR [rax],al
   14001f4a3:	add    BYTE PTR [rax],al
   14001f4a5:	add    BYTE PTR [rax],al
   14001f4a7:	add    BYTE PTR [rax+0x14001ea],dh
   14001f4ad:	add    BYTE PTR [rax],al
   14001f4af:	add    bh,bh
   14001f4b1:	add    BYTE PTR [rax],al
   14001f4b3:	add    BYTE PTR [rax],al
   14001f4b5:	add    BYTE PTR [rax],al
   14001f4b7:	add    BYTE PTR [rax+0x14001ea],dl
   14001f4bd:	add    BYTE PTR [rax],al
   14001f4bf:	add    BYTE PTR [rbp+0x0],cl
   14001f4c2:	imul   eax,DWORD PTR [rax],0x720063
   14001f4c8:	outs   dx,DWORD PTR ds:[rsi]
   14001f4c9:	add    BYTE PTR [rbx+0x0],dh
   14001f4cc:	outs   dx,DWORD PTR ds:[rsi]
   14001f4cd:	add    BYTE PTR [rsi+0x0],ah
   14001f4d0:	je     0x14001f4d2
   14001f4d2:	and    BYTE PTR [rax],al
   14001f4d4:	push   rsi
   14001f4d5:	add    BYTE PTR [rcx+0x0],ch
   14001f4d8:	jae    0x14001f4da
   14001f4da:	jne    0x14001f4dc
   14001f4dc:	(bad)  
   14001f4dd:	add    BYTE PTR [rax+rax*1+0x20],ch
   14001f4e1:	add    BYTE PTR [rbx+0x0],al
   14001f4e4:	sub    eax,DWORD PTR [rax]
   14001f4e6:	sub    eax,DWORD PTR [rax]
   14001f4e8:	and    BYTE PTR [rax],al
   14001f4ea:	push   rdx
   14001f4eb:	add    BYTE PTR [rbp+0x0],dh
   14001f4ee:	outs   dx,BYTE PTR ds:[rsi]
   14001f4ef:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001f4f3:	add    BYTE PTR [rbp+0x0],ch
   14001f4f6:	add    BYTE PTR gs:[rax],ah
   14001f4f9:	add    BYTE PTR [rax+rax*1+0x69],cl
   14001f4fd:	add    BYTE PTR [rdx+0x0],ah
   14001f500:	jb     0x14001f502
   14001f502:	(bad)  
   14001f503:	add    BYTE PTR [rdx+0x0],dh
   14001f506:	jns    0x14001f508
   14001f508:	add    BYTE PTR [rax],al
   14001f50a:	add    BYTE PTR [rax],al
   14001f50c:	or     al,BYTE PTR [rax]
   14001f50e:	or     al,BYTE PTR [rax]
	...
   14001f518:	add    BYTE PTR cs:[rsi],ch
   14001f51b:	add    BYTE PTR [rsi],ch
   14001f51d:	add    BYTE PTR [rax],al
   14001f51f:	add    BYTE PTR [rax+rax*1],bh
   14001f522:	jo     0x14001f524
   14001f524:	jb     0x14001f526
   14001f526:	outs   dx,DWORD PTR ds:[rsi]
   14001f527:	add    BYTE PTR [rdi+0x0],ah
   14001f52a:	jb     0x14001f52c
   14001f52c:	(bad)  
   14001f52d:	add    BYTE PTR [rbp+0x0],ch
   14001f530:	and    BYTE PTR [rax],al
   14001f532:	outs   dx,BYTE PTR ds:[rsi]
   14001f533:	add    BYTE PTR [rcx+0x0],ah
   14001f536:	ins    DWORD PTR es:[rdi],dx
   14001f537:	add    BYTE PTR [rbp+0x0],ah
   14001f53a:	and    BYTE PTR [rax],al
   14001f53c:	jne    0x14001f53e
   14001f53e:	outs   dx,BYTE PTR ds:[rsi]
   14001f53f:	add    BYTE PTR [rbx+0x0],ch
   14001f542:	outs   dx,BYTE PTR ds:[rsi]
   14001f543:	add    BYTE PTR [rdi+0x0],ch
   14001f546:	ja     0x14001f548
   14001f548:	outs   dx,BYTE PTR ds:[rsi]
   14001f549:	add    BYTE PTR [rsi],bh
   14001f54b:	add    BYTE PTR [rax],al
   14001f54d:	add    BYTE PTR [rax],al
   14001f54f:	add    BYTE PTR [rdx+0x0],dl
   14001f552:	jne    0x14001f554
   14001f554:	outs   dx,BYTE PTR ds:[rsi]
   14001f555:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001f559:	add    BYTE PTR [rbp+0x0],ch
   14001f55c:	add    BYTE PTR gs:[rax],ah
   14001f55f:	add    BYTE PTR [rbp+0x0],al
   14001f562:	jb     0x14001f564
   14001f564:	jb     0x14001f566
   14001f566:	outs   dx,DWORD PTR ds:[rsi]
   14001f567:	add    BYTE PTR [rdx+0x0],dh
   14001f56a:	and    DWORD PTR [rax],eax
   14001f56c:	or     al,BYTE PTR [rax]
   14001f56e:	or     al,BYTE PTR [rax]
   14001f570:	push   rax
   14001f571:	add    BYTE PTR [rdx+0x0],dh
   14001f574:	outs   dx,DWORD PTR ds:[rsi]
   14001f575:	add    BYTE PTR [rdi+0x0],ah
   14001f578:	jb     0x14001f57a
   14001f57a:	(bad)  
   14001f57b:	add    BYTE PTR [rbp+0x0],ch
   14001f57e:	cmp    al,BYTE PTR [rax]
   14001f580:	and    BYTE PTR [rax],al
   14001f582:	add    BYTE PTR [rax],al
   14001f584:	add    BYTE PTR [rax],al
   14001f586:	add    BYTE PTR [rax],al
   14001f588:	sub    BYTE PTR [rax],al
   14001f58a:	outs   dx,BYTE PTR ds:[rsi]
   14001f58b:	add    BYTE PTR [rbp+0x0],dh
   14001f58e:	ins    BYTE PTR es:[rdi],dx
   14001f58f:	add    BYTE PTR [rax+rax*1+0x29],ch
   14001f593:	add    BYTE PTR [rax],al
   14001f595:	add    BYTE PTR [rax],al
   14001f597:	add    BYTE PTR [rax],ch
   14001f599:	outs   dx,BYTE PTR ds:[rsi]
   14001f59a:	jne    0x14001f608
   14001f59c:	ins    BYTE PTR es:[rdi],dx
   14001f59d:	sub    DWORD PTR [rax],eax
   14001f59f:	add    BYTE PTR [rsi],al
   14001f5a1:	add    BYTE PTR [rax],al
   14001f5a3:	(bad)  
   14001f5a4:	add    BYTE PTR [rcx],al
   14001f5a6:	add    BYTE PTR [rax],al
   14001f5a8:	adc    BYTE PTR [rax],al
   14001f5aa:	add    eax,DWORD PTR [rsi]
   14001f5ac:	add    BYTE PTR [rsi],al
   14001f5ae:	add    dl,BYTE PTR [rax]
   14001f5b0:	add    al,0x45
   14001f5b2:	rex.RB
   14001f5b3:	rex.RB add eax,0x5050505
   14001f5b9:	xor    eax,0x500030
   14001f5be:	add    BYTE PTR [rax],al
   14001f5c0:	add    BYTE PTR [rax],ch
   14001f5c2:	and    BYTE PTR [rax],bh
   14001f5c4:	push   rax
   14001f5c5:	pop    rax
   14001f5c6:	(bad)  
   14001f5c7:	or     BYTE PTR [rax],al
   14001f5c9:	(bad)  
   14001f5ca:	xor    BYTE PTR [rax],dh
   14001f5cc:	push   rdi
   14001f5cd:	push   rax
   14001f5ce:	(bad)  
   14001f5cf:	add    BYTE PTR [rax],al
   14001f5d1:	and    BYTE PTR [rax],ah
   14001f5d3:	or     BYTE PTR [rax],al
   14001f5d5:	add    BYTE PTR [rax],al
   14001f5d7:	add    BYTE PTR [rax],cl
   14001f5d9:	(bad)  
   14001f5da:	push   0x60606060
   14001f5df:	add    BYTE PTR [rax],al
   14001f5e1:	js     0x14001f653
   14001f5e3:	js     0x14001f65d
   14001f5e5:	js     0x14001f65f
   14001f5e7:	or     BYTE PTR [rdi],al
   14001f5e9:	or     BYTE PTR [rax],al
   14001f5eb:	add    BYTE PTR [rdi],al
   14001f5ed:	add    BYTE PTR [rax],cl
   14001f5ef:	or     BYTE PTR [rax],cl
   14001f5f1:	add    BYTE PTR [rax],al
   14001f5f3:	or     BYTE PTR [rax],al
   14001f5f5:	or     BYTE PTR [rax],al
   14001f5f7:	(bad)  
   14001f5f8:	or     BYTE PTR [rax],al
   14001f5fa:	add    BYTE PTR [rax],al
   14001f5fc:	add    BYTE PTR [rax],al
   14001f5fe:	add    BYTE PTR [rax],al
   14001f600:	add    eax,0xbc00000
	...
   14001f60d:	add    BYTE PTR [rax],al
   14001f60f:	add    BYTE PTR [rip+0x4c00000],bl        # 0x144c1f615
	...
   14001f61d:	add    BYTE PTR [rax],al
   14001f61f:	add    BYTE PTR [rsi+0x4c00000],dl
	...
   14001f62d:	add    BYTE PTR [rax],al
   14001f62f:	add    BYTE PTR [rbp+0x8c00000],cl
	...
   14001f63d:	add    BYTE PTR [rax],al
   14001f63f:	add    BYTE PTR [rsi+0x8c00000],cl
	...
   14001f64d:	add    BYTE PTR [rax],al
   14001f64f:	add    BYTE PTR [rdi+0x8c00000],cl
	...
   14001f65d:	add    BYTE PTR [rax],al
   14001f65f:	add    BYTE PTR [rax+0x8c00000],dl
	...
   14001f66d:	add    BYTE PTR [rax],al
   14001f66f:	add    BYTE PTR [rcx+0x8c00000],dl
	...
   14001f67d:	add    BYTE PTR [rax],al
   14001f67f:	add    BYTE PTR [rdx+0x8c00000],dl
	...
   14001f68d:	add    BYTE PTR [rax],al
   14001f68f:	add    BYTE PTR [rbx+0x8c00000],dl
	...
   14001f69d:	add    BYTE PTR [rax],al
   14001f69f:	add    BYTE PTR [rdx+rax*1+0x8c000],dh
	...
   14001f6ae:	add    BYTE PTR [rax],al
   14001f6b0:	mov    ch,0x2
   14001f6b2:	add    al,al
   14001f6b4:	or     BYTE PTR [rax],al
	...
   14001f6be:	add    BYTE PTR [rax],al
   14001f6c0:	add    eax,DWORD PTR [rax]
   14001f6c2:	add    BYTE PTR [rax],al
   14001f6c4:	or     DWORD PTR [rax],eax
   14001f6c6:	add    BYTE PTR [rax],al
   14001f6c8:	rol    BYTE PTR [rax],0x0
   14001f6cb:	add    BYTE PTR [rax+rax*1],cl
   14001f6ce:	add    BYTE PTR [rax],al
   14001f6d0:	rcl    BYTE PTR [rbx+0x2],1
   14001f6d3:	rex add DWORD PTR [rax],eax
   14001f6d6:	add    BYTE PTR [rax],al
   14001f6d8:	jo     0x14001f72e
   14001f6da:	add    al,BYTE PTR [rax+0x1]
   14001f6dd:	add    BYTE PTR [rax],al
   14001f6df:	add    BYTE PTR [rsi],al
   14001f6e1:	add    BYTE PTR [rax-0x7f7e7f7a],0x0
   14001f6e8:	add    BYTE PTR [rax],dl
   14001f6ea:	add    eax,DWORD PTR [rsi-0x7f7d7980]
   14001f6f0:	adc    al,0x5
   14001f6f2:	add    eax,0x85454545
   14001f6f7:	test   DWORD PTR [rbp+0x30000005],eax
   14001f6fd:	xor    BYTE PTR [rax+0x888050],al
   14001f703:	or     BYTE PTR [rax],al
   14001f705:	sub    BYTE PTR [rdi],ah
   14001f707:	cmp    BYTE PTR [rax+0x57],dl
   14001f70a:	add    BYTE PTR [rax],0x7
   14001f70d:	add    BYTE PTR [rdi],dh
   14001f70f:	xor    BYTE PTR [rax],dh
   14001f711:	push   rax
   14001f712:	push   rax
   14001f713:	mov    BYTE PTR [rax],al
   14001f715:	add    BYTE PTR [rax],al
   14001f717:	and    BYTE PTR [rax],ch
   14001f719:	or     BYTE PTR [rax+0x8080],0x0
   14001f720:	(bad)  
   14001f721:	push   0x68686860
   14001f726:	or     BYTE PTR [rax],cl
   14001f728:	(bad)  
   14001f729:	js     0x14001f79b
   14001f72b:	jo     0x14001f7a4
   14001f72d:	jo     0x14001f79f
   14001f72f:	or     BYTE PTR [rax],cl
   14001f731:	add    BYTE PTR [rax],al
   14001f733:	or     BYTE PTR [rax],al
   14001f735:	or     BYTE PTR [rax],al
   14001f737:	(bad)  
   14001f738:	or     BYTE PTR [rax],al
   14001f73a:	add    BYTE PTR [rax],al
   14001f73c:	add    BYTE PTR [rax],al
   14001f73e:	add    BYTE PTR [rax],al
   14001f740:	movsxd esp,DWORD PTR [rbx+0x73]
   14001f743:	add    BYTE PTR [rbp+0x54],dl
   14001f746:	rex.RX sub eax,0x38
   14001f74c:	add    BYTE PTR [rax],al
   14001f74e:	add    BYTE PTR [rax],al
   14001f750:	push   rbp
   14001f751:	push   rsp
   14001f752:	rex.RX sub eax,0x454c3631
	...
   14001f760:	push   rbp
   14001f761:	rex.WRX
   14001f762:	rex.WB
   14001f763:	rex.XB
   14001f764:	rex.WRXB
   14001f765:	rex.R
   14001f766:	add    BYTE PTR [r9+0x6c],r9b
   14001f76a:	ins    BYTE PTR es:[rdi],dx
   14001f76b:	gs addr32 (bad) 
   14001f76e:	ins    BYTE PTR es:[rdi],dx
   14001f76f:	and    BYTE PTR [rdx+0x79],ah
   14001f772:	je     0x14001f7d9
   14001f774:	and    BYTE PTR [rbx+0x65],dh
   14001f777:	jno    0x14001f7ee
   14001f779:	outs   dx,BYTE PTR gs:[rsi]
   14001f77b:	movsxd esp,DWORD PTR [rbp+0x0]
   14001f77e:	add    BYTE PTR [rax],al
   14001f780:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   14001f788:	jns    0x14001f7aa
   14001f78a:	outs   dx,BYTE PTR ds:[rsi]
   14001f78b:	outs   dx,DWORD PTR ds:[rsi]
   14001f78c:	je     0x14001f7ae
   14001f78e:	gs ins DWORD PTR es:[rdi],dx
   14001f790:	jo     0x14001f806
   14001f792:	jns    0x14001f794
   14001f794:	add    BYTE PTR [rax],al
   14001f796:	add    BYTE PTR [rax],al
   14001f798:	rex.RX jne 0x14001f809
   14001f79b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001f79f:	outs   dx,BYTE PTR ds:[rsi]
   14001f7a0:	and    BYTE PTR [rsi+0x6f],ch
   14001f7a3:	je     0x14001f7c5
   14001f7a5:	imul   ebp,DWORD PTR [rbp+0x70],0x656d656c
   14001f7ac:	outs   dx,BYTE PTR ds:[rsi]
   14001f7ad:	je     0x14001f814
   14001f7af:	add    BYTE PTR fs:[rax],al
   14001f7b2:	add    BYTE PTR [rax],al
   14001f7b4:	add    BYTE PTR [rax],al
   14001f7b6:	add    BYTE PTR [rax],al
   14001f7b8:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001f7ba:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   14001f7be:	imul   esi,DWORD PTR [rbx+0x20],0x61
   14001f7c2:	jbe    0x14001f825
   14001f7c4:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14001f7cc:	add    BYTE PTR [rax],al
   14001f7ce:	add    BYTE PTR [rax],al
   14001f7d0:	imul   r13d,DWORD PTR [rbp+r12*2+0x6e],0x20656d61
   14001f7d9:	je     0x14001f84a
   14001f7db:	outs   dx,DWORD PTR ds:[rsi]
   14001f7dc:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14001f7e0:	add    BYTE PTR [eax],al
   14001f7e3:	add    BYTE PTR [rax],al
   14001f7e5:	add    BYTE PTR [rax],al
   14001f7e7:	add    BYTE PTR [rdx+0x65],dl
   14001f7ea:	jae    0x14001f85b
   14001f7ec:	jne    0x14001f860
   14001f7ee:	movsxd esp,DWORD PTR [rbp+0x20]
   14001f7f1:	fs gs (bad) 
   14001f7f4:	fs ins BYTE PTR es:[rdi],dx
   14001f7f6:	outs   dx,DWORD PTR ds:[rsi]
   14001f7f7:	movsxd ebp,DWORD PTR [rbx+0x20]
   14001f7fa:	(bad)  
   14001f7fb:	jbe    0x14001f86c
   14001f7fd:	imul   esp,DWORD PTR [rbp+riz*2+0x64],0x0
   14001f805:	add    BYTE PTR [rax],al
   14001f807:	add    BYTE PTR [rdx+0x65],dl
   14001f80a:	jae    0x14001f881
   14001f80c:	ins    BYTE PTR es:[rdi],dx
   14001f80d:	je     0x14001f82f
   14001f80f:	je     0x14001f880
   14001f811:	outs   dx,DWORD PTR ds:[rsi]
   14001f812:	and    BYTE PTR [rcx+riz*2+0x72],ch
   14001f816:	add    BYTE PTR gs:[eax],al
   14001f81a:	add    BYTE PTR [rax],al
   14001f81c:	add    BYTE PTR [rax],al
   14001f81e:	add    BYTE PTR [rax],al
   14001f820:	rex.R outs dx,DWORD PTR ds:[rsi]
   14001f822:	ins    DWORD PTR es:[rdi],dx
   14001f823:	(bad)  
   14001f824:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
   14001f82b:	jb     0x14001f82d
   14001f82d:	add    BYTE PTR [rax],al
   14001f82f:	add    BYTE PTR [rdx+0x72],al
   14001f832:	outs   dx,DWORD PTR ds:[rsi]
   14001f833:	imul   esp,DWORD PTR [rbp+0x6e],0x20
   14001f837:	jo     0x14001f8a2
   14001f839:	jo     0x14001f8a0
   14001f83b:	add    BYTE PTR [rax],al
   14001f83d:	add    BYTE PTR [rax],al
   14001f83f:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
   14001f843:	and    BYTE PTR [rbp+0x61],ch
   14001f846:	outs   dx,BYTE PTR ds:[rsi]
   14001f847:	jns    0x14001f869
   14001f849:	ins    BYTE PTR es:[rdi],dx
   14001f84a:	imul   ebp,DWORD PTR [rsi+0x6b],0x52000073
   14001f851:	gs (bad) 
   14001f853:	fs sub eax,0x796c6e6f
   14001f859:	and    BYTE PTR [rsi+0x69],ah
   14001f85c:	ins    BYTE PTR es:[rdi],dx
   14001f85d:	and    BYTE PTR gs:[rbx+0x79],dh
   14001f861:	jae    0x14001f8d7
   14001f863:	gs ins DWORD PTR es:[rdi],dx
   14001f865:	add    BYTE PTR [rax],al
   14001f867:	add    BYTE PTR [rcx+0x6e],cl
   14001f86a:	jbe    0x14001f8cd
   14001f86c:	ins    BYTE PTR es:[rdi],dx
   14001f86d:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6b6565
   14001f875:	add    BYTE PTR [rax],al
   14001f877:	add    BYTE PTR [rsi+0x6f],cl
   14001f87a:	and    BYTE PTR [rbx+0x70],dh
   14001f87d:	(bad)  
   14001f87e:	movsxd esp,DWORD PTR [rbp+0x20]
   14001f881:	ins    BYTE PTR es:[rdi],dx
   14001f882:	gs data16 je 0x14001f8a6
   14001f886:	outs   dx,DWORD PTR ds:[rsi]
   14001f887:	outs   dx,BYTE PTR ds:[rsi]
   14001f888:	and    BYTE PTR [rbp+riz*2+0x76],ah
   14001f88c:	imul   esp,DWORD PTR [rbx+0x65],0x6c694600
   14001f893:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   14001f898:	and    BYTE PTR [rcx+riz*2+0x72],ch
   14001f89c:	add    BYTE PTR gs:[eax],al
   14001f8a0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001f8a2:	(bad)  
   14001f8a3:	jo     0x14001f915
   14001f8a5:	jb     0x14001f916
   14001f8a7:	jo     0x14001f91b
   14001f8a9:	imul   esp,DWORD PTR [rcx+0x74],0x2f492065
   14001f8b0:	rex.WRXB and BYTE PTR [r11+0x6f],r12b
   14001f8b4:	outs   dx,BYTE PTR ds:[rsi]
   14001f8b5:	je     0x14001f929
   14001f8b7:	outs   dx,DWORD PTR ds:[rsi]
   14001f8b8:	ins    BYTE PTR es:[rdi],dx
   14001f8b9:	and    BYTE PTR [rdi+0x70],ch
   14001f8bc:	gs jb  0x14001f920
   14001f8bf:	je     0x14001f92a
   14001f8c1:	outs   dx,DWORD PTR ds:[rsi]
   14001f8c2:	outs   dx,BYTE PTR ds:[rsi]
   14001f8c3:	add    BYTE PTR [rax],al
   14001f8c5:	add    BYTE PTR [rax],al
   14001f8c7:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
   14001f8cb:	and    BYTE PTR [rbp+0x61],ch
   14001f8ce:	outs   dx,BYTE PTR ds:[rsi]
   14001f8cf:	jns    0x14001f8f1
   14001f8d1:	outs   dx,DWORD PTR ds:[rsi]
   14001f8d2:	jo     0x14001f939
   14001f8d4:	outs   dx,BYTE PTR ds:[rsi]
   14001f8d5:	and    BYTE PTR [rsi+0x69],ah
   14001f8d8:	ins    BYTE PTR es:[rdi],dx
   14001f8d9:	gs jae 0x14001f8dc
   14001f8dc:	add    BYTE PTR [rax],al
   14001f8de:	add    BYTE PTR [rax],al
   14001f8e0:	push   rsp
   14001f8e1:	outs   dx,DWORD PTR ds:[rsi]
   14001f8e2:	outs   dx,DWORD PTR ds:[rsi]
   14001f8e3:	and    BYTE PTR [rbp+0x61],ch
   14001f8e6:	outs   dx,BYTE PTR ds:[rsi]
   14001f8e7:	jns    0x14001f909
   14001f8e9:	outs   dx,DWORD PTR ds:[rsi]
   14001f8ea:	jo     0x14001f951
   14001f8ec:	outs   dx,BYTE PTR ds:[rsi]
   14001f8ed:	and    BYTE PTR [rsi+0x69],ah
   14001f8f0:	ins    BYTE PTR es:[rdi],dx
   14001f8f1:	gs jae 0x14001f914
   14001f8f4:	imul   ebp,DWORD PTR [rsi+0x20],0x74737973
   14001f8fb:	gs ins DWORD PTR es:[rdi],dx
   14001f8fd:	add    BYTE PTR [rax],al
   14001f8ff:	add    BYTE PTR [rcx+0x6e],cl
   14001f902:	jbe    0x14001f965
   14001f904:	ins    BYTE PTR es:[rdi],dx
   14001f905:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x6d756772
   14001f90d:	outs   dx,BYTE PTR gs:[rsi]
   14001f90f:	je     0x14001f911
   14001f911:	add    BYTE PTR [rax],al
   14001f913:	add    BYTE PTR [rax],al
   14001f915:	add    BYTE PTR [rax],al
   14001f917:	add    BYTE PTR [rcx+0x73],cl
   14001f91a:	and    BYTE PTR [rcx+0x20],ah
   14001f91d:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
   14001f925:	jns    0x14001f927
   14001f927:	add    BYTE PTR [rsi+0x6f],cl
   14001f92a:	je     0x14001f94c
   14001f92c:	(bad)  
   14001f92d:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   14001f931:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14001f936:	jns    0x14001f938
   14001f938:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001f93a:	and    BYTE PTR [rbx+0x75],dh
   14001f93d:	movsxd ebp,DWORD PTR [rax+0x20]
   14001f940:	fs gs jbe 0x14001f9ad
   14001f944:	movsxd esp,DWORD PTR [rbp+0x0]
   14001f947:	add    BYTE PTR [rcx+0x6d],cl
   14001f94a:	jo     0x14001f9be
   14001f94c:	outs   dx,DWORD PTR ds:[rsi]
   14001f94d:	jo     0x14001f9b4
   14001f94f:	jb     0x14001f971
   14001f951:	ins    BYTE PTR es:[rdi],dx
   14001f952:	imul   ebp,DWORD PTR [rsi+0x6b],0x46000000
   14001f959:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x73697865
   14001f961:	je     0x14001f9d6
   14001f963:	add    BYTE PTR [rax],al
   14001f965:	add    BYTE PTR [rax],al
   14001f967:	add    BYTE PTR [rdx+0x65],dl
   14001f96a:	jae    0x14001f9db
   14001f96c:	jne    0x14001f9e0
   14001f96e:	movsxd esp,DWORD PTR [rbp+0x20]
   14001f971:	fs gs jbe 0x14001f9de
   14001f975:	movsxd esp,DWORD PTR [rbp+0x0]
   14001f978:	push   rbp
   14001f979:	outs   dx,BYTE PTR ds:[rsi]
   14001f97a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14001f97e:	outs   dx,BYTE PTR ds:[rsi]
   14001f97f:	and    BYTE PTR [rbp+0x72],ah
   14001f982:	jb     0x14001f9f3
   14001f984:	jb     0x14001f986
   14001f986:	add    BYTE PTR [rax],al
   14001f988:	rex.X (bad) 
   14001f98a:	and    BYTE PTR fs:[rcx+0x64],ah
   14001f98e:	fs jb  0x14001f9f6
   14001f991:	jae    0x14001fa06
   14001f993:	add    BYTE PTR [rax],al
   14001f995:	add    BYTE PTR [rax],al
   14001f997:	add    BYTE PTR [rax+0x65],dl
   14001f99a:	jb     0x14001fa09
   14001f99c:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   14001f9a3:	fs outs dx,BYTE PTR gs:[rsi]
   14001f9a6:	imul   esp,DWORD PTR [rbp+0x64],0x0
   14001f9ad:	add    BYTE PTR [rax],al
   14001f9af:	add    BYTE PTR [rsi+0x6f],cl
   14001f9b2:	je     0x14001f9d4
   14001f9b4:	outs   dx,BYTE PTR gs:[rsi]
   14001f9b6:	outs   dx,DWORD PTR ds:[rsi]
   14001f9b7:	jne    0x14001fa20
   14001f9b9:	push   0x61707320
   14001f9be:	movsxd esp,DWORD PTR [rbp+0x0]
   14001f9c1:	add    BYTE PTR [rax],al
   14001f9c3:	add    BYTE PTR [rax],al
   14001f9c5:	add    BYTE PTR [rax],al
   14001f9c7:	add    BYTE PTR [rdx+0x65],dl
   14001f9ca:	jae    0x14001fa3b
   14001f9cc:	jne    0x14001fa40
   14001f9ce:	movsxd esp,DWORD PTR [rbp+0x20]
   14001f9d1:	je     0x14001fa38
   14001f9d3:	ins    DWORD PTR es:[rdi],dx
   14001f9d4:	jo     0x14001fa45
   14001f9d6:	jb     0x14001fa39
   14001f9d8:	jb     0x14001fa43
   14001f9da:	ins    BYTE PTR es:[rdi],dx
   14001f9db:	jns    0x14001f9fd
   14001f9dd:	jne    0x14001fa4d
   14001f9df:	(bad)  
   14001f9e0:	jbe    0x14001fa43
   14001f9e2:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   14001f9ea:	add    BYTE PTR [rax],al
   14001f9ec:	add    BYTE PTR [rax],al
   14001f9ee:	add    BYTE PTR [rax],al
   14001f9f0:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001f9f2:	and    BYTE PTR [rbx+0x68],ah
   14001f9f5:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x636f7270
   14001f9fd:	gs jae 0x14001fa73
   14001fa00:	gs jae 0x14001fa03
   14001fa03:	add    BYTE PTR [rax],al
   14001fa05:	add    BYTE PTR [rax],al
   14001fa07:	add    BYTE PTR [rdx+0x61],al
   14001fa0a:	and    BYTE PTR fs:[rsi+0x69],ah
   14001fa0e:	ins    BYTE PTR es:[rdi],dx
   14001fa0f:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
   14001fa14:	movsxd esi,DWORD PTR [rdx+0x69]
   14001fa17:	jo     0x14001fa8d
   14001fa19:	outs   dx,DWORD PTR ds:[rsi]
   14001fa1a:	jb     0x14001fa1c
   14001fa1c:	add    BYTE PTR [rax],al
   14001fa1e:	add    BYTE PTR [rax],al
   14001fa20:	rex.RB js 0x14001fa88
   14001fa23:	movsxd esp,DWORD PTR [rax]
   14001fa25:	outs   dx,WORD PTR ds:[rsi]
   14001fa27:	jb     0x14001fa96
   14001fa29:	(bad)  
   14001fa2a:	je     0x14001fa4c
   14001fa2c:	gs jb  0x14001faa1
   14001fa2f:	outs   dx,DWORD PTR ds:[rsi]
   14001fa30:	jb     0x14001fa32
   14001fa32:	add    BYTE PTR [rax],al
   14001fa34:	add    BYTE PTR [rax],al
   14001fa36:	add    BYTE PTR [rax],al
   14001fa38:	rex.B jb 0x14001faa2
   14001fa3b:	and    BYTE PTR [rcx+rbp*2+0x73],ch
   14001fa3f:	je     0x14001fa61
   14001fa41:	je     0x14001fab2
   14001fa43:	outs   dx,DWORD PTR ds:[rsi]
   14001fa44:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14001fa48:	add    BYTE PTR [eax],al
   14001fa4b:	add    BYTE PTR [rax],al
   14001fa4d:	add    BYTE PTR [rax],al
   14001fa4f:	add    BYTE PTR [rsi+0x6f],cl
   14001fa52:	and    BYTE PTR [rbx+0x75],dh
   14001fa55:	movsxd ebp,DWORD PTR [rax+0x20]
   14001fa58:	fs gs jbe 0x14001fac5
   14001fa5c:	movsxd esp,DWORD PTR [rbp+0x20]
   14001fa5f:	outs   dx,DWORD PTR ds:[rsi]
   14001fa60:	jb     0x14001fa82
   14001fa62:	(bad)  
   14001fa63:	fs fs jb 0x14001facc
   14001fa67:	jae    0x14001fadc
   14001fa69:	add    BYTE PTR [rax],al
   14001fa6b:	add    BYTE PTR [rax],al
   14001fa6d:	add    BYTE PTR [rax],al
   14001fa6f:	add    BYTE PTR [rcx+0x6e],cl
   14001fa72:	jo     0x14001fae9
   14001fa74:	je     0x14001faa5
   14001fa76:	outs   dx,DWORD PTR ds:[rsi]
   14001fa77:	jne    0x14001faed
   14001fa79:	jo     0x14001faf0
   14001fa7b:	je     0x14001fa9d
   14001fa7d:	gs jb  0x14001faf2
   14001fa80:	outs   dx,DWORD PTR ds:[rsi]
   14001fa81:	jb     0x14001fa83
   14001fa83:	add    BYTE PTR [rax],al
   14001fa85:	add    BYTE PTR [rax],al
   14001fa87:	add    BYTE PTR [rcx+0x6e],cl
   14001fa8a:	je     0x14001faf1
   14001fa8c:	jb     0x14001fb00
   14001fa8e:	jne    0x14001fb00
   14001fa90:	je     0x14001faf7
   14001fa92:	and    BYTE PTR fs:[rsi+0x75],ah
   14001fa96:	outs   dx,BYTE PTR ds:[rsi]
   14001fa97:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14001fa9b:	outs   dx,BYTE PTR ds:[rsi]
   14001fa9c:	and    BYTE PTR [rbx+0x61],ah
   14001fa9f:	ins    BYTE PTR es:[rdi],dx
   14001faa0:	ins    BYTE PTR es:[rdi],dx
   14001faa1:	add    BYTE PTR [rax],al
   14001faa3:	add    BYTE PTR [rax],al
   14001faa5:	add    BYTE PTR [rax],al
   14001faa7:	add    BYTE PTR [rsi+0x6f],cl
   14001faaa:	and    BYTE PTR [rbx+0x75],dh
   14001faad:	movsxd ebp,DWORD PTR [rax+0x20]
   14001fab0:	jo     0x14001fb24
   14001fab2:	outs   dx,DWORD PTR ds:[rsi]
   14001fab3:	movsxd esp,DWORD PTR [rbp+0x73]
   14001fab6:	jae    0x14001fab8
   14001fab8:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001faba:	and    BYTE PTR [rbx+0x75],dh
   14001fabd:	movsxd ebp,DWORD PTR [rax+0x20]
   14001fac0:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
   14001fac7:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   14001facb:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14001fad0:	jns    0x14001fad2
   14001fad2:	add    BYTE PTR [rax],al
   14001fad4:	add    BYTE PTR [rax],al
   14001fad6:	add    BYTE PTR [rax],al
   14001fad8:	rex.WRXB jo 0x14001fb40
   14001fadb:	jb     0x14001fb3e
   14001fadd:	je     0x14001fb48
   14001fadf:	outs   dx,DWORD PTR ds:[rsi]
   14001fae0:	outs   dx,BYTE PTR ds:[rsi]
   14001fae1:	and    BYTE PTR [rsi+0x6f],ch
   14001fae4:	je     0x14001fb06
   14001fae6:	jo     0x14001fb4d
   14001fae8:	jb     0x14001fb57
   14001faea:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6f4e0064
   14001faf2:	and    BYTE PTR [rbp+0x72],ah
   14001faf5:	jb     0x14001fb66
   14001faf7:	jb     0x14001faf9
   14001faf9:	add    BYTE PTR [rax],al
   14001fafb:	add    BYTE PTR [rsi],ch
   14001fafd:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001fb00:	add    BYTE PTR [rax],al
   14001fb02:	add    BYTE PTR [rax],al
   14001fb04:	(bad)
   14001fb0a:	add    BYTE PTR [rax],al
   14001fb0c:	movsxd ebp,DWORD PTR cs:[rbp+0x64]
   14001fb10:	add    BYTE PTR [rax],al
   14001fb12:	add    BYTE PTR [rax],al
   14001fb14:	cs gs js 0x14001fb7d
	...
   14001fb20:	rex.W add BYTE PTR [rax+0x0],cl
   14001fb24:	cmp    al,BYTE PTR [rax]
   14001fb26:	ins    DWORD PTR es:[rdi],dx
   14001fb27:	add    BYTE PTR [rbp+0x0],ch
   14001fb2a:	cmp    al,BYTE PTR [rax]
   14001fb2c:	jae    0x14001fb2e
   14001fb2e:	jae    0x14001fb30
	...
   14001fb38:	add    BYTE PTR fs:[rax+rax*1+0x64],ah
   14001fb3d:	add    BYTE PTR [rax+rax*1+0x2c],ah
   14001fb41:	add    BYTE PTR [rax],ah
   14001fb43:	add    BYTE PTR [rbp+0x0],cl
   14001fb46:	rex.WRB add BYTE PTR [r13+0x0],r9b
   14001fb4a:	rex.WRB add BYTE PTR [r8],r12b
   14001fb4d:	add    BYTE PTR [rax+rax*1+0x64],ah
   14001fb51:	add    BYTE PTR [rax+rax*1],ch
   14001fb54:	and    BYTE PTR [rax],al
   14001fb56:	jns    0x14001fb58
   14001fb58:	jns    0x14001fb5a
   14001fb5a:	jns    0x14001fb5c
   14001fb5c:	jns    0x14001fb5e
   14001fb5e:	add    BYTE PTR [rax],al
   14001fb60:	rex.WRB add BYTE PTR [r13+0x0],r9b
   14001fb64:	(bad)  
   14001fb65:	add    BYTE PTR [rax+rax*1+0x64],ah
   14001fb69:	add    BYTE PTR [rdi],ch
   14001fb6b:	add    BYTE PTR [rcx+0x0],bh
   14001fb6e:	jns    0x14001fb70
   14001fb70:	add    BYTE PTR [rax],al
   14001fb72:	add    BYTE PTR [rax],al
   14001fb74:	push   rax
   14001fb75:	add    BYTE PTR [rbp+0x0],cl
   14001fb78:	add    BYTE PTR [rax],al
   14001fb7a:	add    BYTE PTR [rax],al
   14001fb7c:	add    BYTE PTR [r13+0x0],cl
	...
   14001fb88:	add    BYTE PTR [rbp+0x0],r12b
   14001fb8c:	movsxd eax,DWORD PTR [rax]
   14001fb8e:	add    BYTE PTR gs:[rbp+0x0],ch
   14001fb92:	(bad)  
   14001fb93:	add    BYTE PTR [rbp+0x0],ah
   14001fb96:	jb     0x14001fb98
	...
   14001fba0:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14001fba4:	jbe    0x14001fba6
   14001fba6:	add    BYTE PTR gs:[rbp+0x0],ch
   14001fbaa:	(bad)  
   14001fbab:	add    BYTE PTR [rbp+0x0],ah
   14001fbae:	jb     0x14001fbb0
	...
   14001fbb8:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14001fbbc:	je     0x14001fbbe
   14001fbbe:	outs   dx,DWORD PTR ds:[rsi]
   14001fbbf:	add    BYTE PTR [rdx+0x0],ah
   14001fbc2:	add    BYTE PTR gs:[rdx+0x0],dh
   14001fbc6:	add    BYTE PTR [rax],al
   14001fbc8:	push   rbx
   14001fbc9:	add    BYTE PTR [rbp+0x0],ah
   14001fbcc:	jo     0x14001fbce
   14001fbce:	je     0x14001fbd0
   14001fbd0:	add    BYTE PTR gs:[rbp+0x0],ch
   14001fbd4:	(bad)  
   14001fbd5:	add    BYTE PTR [rbp+0x0],ah
   14001fbd8:	jb     0x14001fbda
   14001fbda:	add    BYTE PTR [rax],al
   14001fbdc:	add    BYTE PTR [rax],al
   14001fbde:	add    BYTE PTR [rax],al
   14001fbe0:	add    BYTE PTR [r13+0x0],sil
   14001fbe4:	add    BYTE PTR [ebp+0x0],dh
   14001fbe8:	jae    0x14001fbea
   14001fbea:	je     0x14001fbec
   14001fbec:	add    BYTE PTR [rax],al
   14001fbee:	add    BYTE PTR [rax],al
   14001fbf0:	rex.WX add BYTE PTR [rbp+0x0],sil
   14001fbf4:	ins    BYTE PTR es:[rdi],dx
   14001fbf5:	add    BYTE PTR [rcx+0x0],bh
	...
   14001fc00:	rex.WX add BYTE PTR [rbp+0x0],sil
   14001fc04:	outs   dx,BYTE PTR ds:[rsi]
   14001fc05:	add    BYTE PTR [rbp+0x0],ah
	...
   14001fc10:	add    BYTE PTR [r8+0x0],sil
   14001fc14:	jb     0x14001fc16
   14001fc16:	imul   eax,DWORD PTR [rax],0x6c
   14001fc1c:	add    BYTE PTR [rax],al
   14001fc1e:	add    BYTE PTR [rax],al
   14001fc20:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14001fc24:	jb     0x14001fc26
   14001fc26:	movsxd eax,DWORD PTR [rax]
   14001fc28:	push   0x0
   14001fc2d:	add    BYTE PTR [rax],al
   14001fc2f:	add    BYTE PTR [rsi+0x0],al
   14001fc32:	add    BYTE PTR gs:[rdx+0x0],ah
   14001fc36:	jb     0x14001fc38
   14001fc38:	jne    0x14001fc3a
   14001fc3a:	(bad)  
   14001fc3b:	add    BYTE PTR [rdx+0x0],dh
   14001fc3e:	jns    0x14001fc40
	...
   14001fc48:	rex.WX add BYTE PTR [rcx+0x0],spl
   14001fc4c:	outs   dx,BYTE PTR ds:[rsi]
   14001fc4d:	add    BYTE PTR [rbp+0x0],dh
   14001fc50:	(bad)  
   14001fc51:	add    BYTE PTR [rdx+0x0],dh
   14001fc54:	jns    0x14001fc56
   14001fc56:	add    BYTE PTR [rax],al
   14001fc58:	add    BYTE PTR [rbp+0x0],r12b
   14001fc5c:	movsxd eax,DWORD PTR [rax]
   14001fc5e:	add    BYTE PTR [rax],al
   14001fc60:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14001fc64:	jbe    0x14001fc66
   14001fc66:	add    BYTE PTR [rax],al
   14001fc68:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14001fc6c:	je     0x14001fc6e
   14001fc6e:	add    BYTE PTR [rax],al
   14001fc70:	push   rbx
   14001fc71:	add    BYTE PTR [rbp+0x0],ah
   14001fc74:	jo     0x14001fc76
   14001fc76:	add    BYTE PTR [rax],al
   14001fc78:	add    BYTE PTR [r13+0x0],sil
   14001fc7c:	add    BYTE PTR [eax],al
   14001fc7f:	add    BYTE PTR [rdx+0x0],cl
   14001fc82:	jne    0x14001fc84
   14001fc84:	ins    BYTE PTR es:[rdi],dx
   14001fc85:	add    BYTE PTR [rax],al
   14001fc87:	add    BYTE PTR [rdx+0x0],cl
   14001fc8a:	jne    0x14001fc8c
   14001fc8c:	outs   dx,BYTE PTR ds:[rsi]
   14001fc8d:	add    BYTE PTR [rax],al
   14001fc8f:	add    BYTE PTR [rbp+0x0],cl
   14001fc92:	(bad)  
   14001fc93:	add    BYTE PTR [rcx+0x0],bh
   14001fc96:	add    BYTE PTR [rax],al
   14001fc98:	add    BYTE PTR [r8+0x0],sil
   14001fc9c:	jb     0x14001fc9e
   14001fc9e:	add    BYTE PTR [rax],al
   14001fca0:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14001fca4:	jb     0x14001fca6
   14001fca6:	add    BYTE PTR [rax],al
   14001fca8:	rex.RX add BYTE PTR [rbp+0x0],r12b
   14001fcac:	(bad)  
   14001fcad:	add    BYTE PTR [rax],al
   14001fcaf:	add    BYTE PTR [rdx+0x0],cl
   14001fcb2:	(bad)  
   14001fcb3:	add    BYTE PTR [rsi+0x0],ch
   14001fcb6:	add    BYTE PTR [rax],al
   14001fcb8:	push   rbx
   14001fcb9:	add    BYTE PTR [rcx+0x0],ah
   14001fcbc:	je     0x14001fcbe
   14001fcbe:	jne    0x14001fcc0
   14001fcc0:	jb     0x14001fcc2
   14001fcc2:	add    BYTE PTR fs:[rcx+0x0],ah
   14001fcc6:	jns    0x14001fcc8
	...
   14001fcd0:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14001fcd4:	imul   eax,DWORD PTR [rax],0x610064
   14001fcda:	jns    0x14001fcdc
   14001fcdc:	add    BYTE PTR [rax],al
   14001fcde:	add    BYTE PTR [rax],al
   14001fce0:	push   rsp
   14001fce1:	add    BYTE PTR [rax+0x0],ch
   14001fce4:	jne    0x14001fce6
   14001fce6:	jb     0x14001fce8
   14001fce8:	jae    0x14001fcea
   14001fcea:	add    BYTE PTR fs:[rcx+0x0],ah
   14001fcee:	jns    0x14001fcf0
	...
   14001fcf8:	push   rdi
   14001fcf9:	add    BYTE PTR [rbp+0x0],ah
   14001fcfc:	add    BYTE PTR fs:[rsi+0x0],ch
   14001fd00:	add    BYTE PTR gs:[rbx+0x0],dh
   14001fd04:	add    BYTE PTR fs:[rcx+0x0],ah
   14001fd08:	jns    0x14001fd0a
   14001fd0a:	add    BYTE PTR [rax],al
   14001fd0c:	add    BYTE PTR [rax],al
   14001fd0e:	add    BYTE PTR [rax],al
   14001fd10:	push   rsp
   14001fd11:	add    BYTE PTR [rbp+0x0],dh
   14001fd14:	add    BYTE PTR gs:[rbx+0x0],dh
   14001fd18:	add    BYTE PTR fs:[rcx+0x0],ah
   14001fd1c:	jns    0x14001fd1e
   14001fd1e:	add    BYTE PTR [rax],al
   14001fd20:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14001fd24:	outs   dx,BYTE PTR ds:[rsi]
   14001fd25:	add    BYTE PTR [rax+rax*1+0x61],ah
   14001fd29:	add    BYTE PTR [rcx+0x0],bh
   14001fd2c:	add    BYTE PTR [rax],al
   14001fd2e:	add    BYTE PTR [rax],al
   14001fd30:	push   rbx
   14001fd31:	add    BYTE PTR [rbp+0x0],dh
   14001fd34:	outs   dx,BYTE PTR ds:[rsi]
   14001fd35:	add    BYTE PTR [rax+rax*1+0x61],ah
   14001fd39:	add    BYTE PTR [rcx+0x0],bh
   14001fd3c:	add    BYTE PTR [rax],al
   14001fd3e:	add    BYTE PTR [rax],al
   14001fd40:	push   rbx
   14001fd41:	add    BYTE PTR [rcx+0x0],ah
   14001fd44:	je     0x14001fd46
   14001fd46:	add    BYTE PTR [rax],al
   14001fd48:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14001fd4c:	imul   eax,DWORD PTR [rax],0x540000
   14001fd52:	push   0x7500
   14001fd57:	add    BYTE PTR [rdi+0x0],dl
   14001fd5a:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14001fd5f:	add    BYTE PTR [rax+rax*1+0x75],dl
   14001fd63:	add    BYTE PTR [rbp+0x0],ah
   14001fd66:	add    BYTE PTR [rax],al
   14001fd68:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14001fd6c:	outs   dx,BYTE PTR ds:[rsi]
   14001fd6d:	add    BYTE PTR [rax],al
   14001fd6f:	add    BYTE PTR [rbx+0x0],dl
   14001fd72:	jne    0x14001fd74
   14001fd74:	outs   dx,BYTE PTR ds:[rsi]
   14001fd75:	add    BYTE PTR [rax],al
   14001fd77:	add    BYTE PTR [rax+0x48],cl
   14001fd7a:	cmp    ch,BYTE PTR [rbp+0x6d]
   14001fd7d:	cmp    dh,BYTE PTR [rbx+0x73]
	...
   14001fd88:	fs fs fs fs sub al,0x20
   14001fd8e:	rex.WRB
   14001fd8f:	rex.WRB
   14001fd90:	rex.WRB
   14001fd91:	rex.WRB and BYTE PTR [r12+riz*2+0x2c],r12b
   14001fd96:	and    BYTE PTR [rcx+0x79],bh
   14001fd99:	jns    0x14001fe14
   14001fd9b:	add    BYTE PTR [rax],al
   14001fd9d:	add    BYTE PTR [rax],al
   14001fd9f:	add    BYTE PTR [rbp+0x4d],cl
   14001fda2:	(bad)  
   14001fda3:	fs fs (bad) 
   14001fda6:	jns    0x14001fe21
   14001fda8:	add    BYTE PTR [rax],al
   14001fdaa:	add    BYTE PTR [rax],al
   14001fdac:	push   rax
   14001fdad:	rex.WRB add BYTE PTR [r8],r8b
   14001fdb0:	rex.B
   14001fdb1:	rex.WRB add BYTE PTR [r8],r8b
   14001fdb4:	add    BYTE PTR [rax],al
   14001fdb6:	add    BYTE PTR [rax],al
   14001fdb8:	rex.R
   14001fdb9:	movsxd esp,DWORD PTR gs:[rbp+0x6d]
   14001fdbd:	(bad)  
   14001fdbe:	gs jb  0x14001fdc1
   14001fdc1:	add    BYTE PTR [rax],al
   14001fdc3:	add    BYTE PTR [rax],al
   14001fdc5:	add    BYTE PTR [rax],al
   14001fdc7:	add    BYTE PTR [rsi+0x6f],cl
   14001fdca:	jbe    0x14001fe31
   14001fdcc:	ins    DWORD PTR es:[rdi],dx
   14001fdcd:	(bad)  
   14001fdce:	gs jb  0x14001fdd1
   14001fdd1:	add    BYTE PTR [rax],al
   14001fdd3:	add    BYTE PTR [rax],al
   14001fdd5:	add    BYTE PTR [rax],al
   14001fdd7:	add    BYTE PTR [rdi+0x63],cl
   14001fdda:	je     0x14001fe4b
   14001fddc:	(bad)  
   14001fddd:	gs jb  0x14001fde0
   14001fde0:	push   rbx
   14001fde1:	gs jo  0x14001fe58
   14001fde4:	gs ins DWORD PTR es:[rdi],dx
   14001fde6:	(bad)  
   14001fde7:	gs jb  0x14001fdea
   14001fdea:	add    BYTE PTR [rax],al
   14001fdec:	rex.B jne 0x14001fe56
   14001fdef:	jne    0x14001fe64
   14001fdf1:	je     0x14001fdf3
   14001fdf3:	add    BYTE PTR [rdx+0x75],cl
   14001fdf6:	ins    BYTE PTR es:[rdi],dx
   14001fdf7:	jns    0x14001fdf9
   14001fdf9:	add    BYTE PTR [rax],al
   14001fdfb:	add    BYTE PTR [rdx+0x75],cl
   14001fdfe:	outs   dx,BYTE PTR ds:[rsi]
   14001fdff:	add    BYTE PTR gs:[rax],al
   14001fe02:	add    BYTE PTR [rax],al
   14001fe04:	rex.B jo 0x14001fe79
   14001fe07:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x72614d00
   14001fe0f:	movsxd ebp,DWORD PTR [rax+0x0]
   14001fe12:	add    BYTE PTR [rax],al
   14001fe14:	add    BYTE PTR [rax],al
   14001fe16:	add    BYTE PTR [rax],al
   14001fe18:	rex.RX
   14001fe19:	(bad)
   14001fe1f:	jns    0x14001fe21
   14001fe21:	add    BYTE PTR [rax],al
   14001fe23:	add    BYTE PTR [rax],al
   14001fe25:	add    BYTE PTR [rax],al
   14001fe27:	add    BYTE PTR [rdx+0x61],cl
   14001fe2a:	outs   dx,BYTE PTR ds:[rsi]
   14001fe2b:	jne    0x14001fe8e
   14001fe2d:	jb     0x14001fea8
   14001fe2f:	add    BYTE PTR [rbp+riz*2+0x63],al
   14001fe33:	add    BYTE PTR [rsi+0x6f],cl
   14001fe36:	jbe    0x14001fe38
   14001fe38:	movsxd r14,DWORD PTR [r8+r8*1+0x53]
   14001fe3d:	gs jo  0x14001fe40
   14001fe40:	rex.B jne 0x14001feaa
   14001fe43:	add    BYTE PTR [rdx+0x75],cl
   14001fe46:	ins    BYTE PTR es:[rdi],dx
   14001fe47:	add    BYTE PTR [rdx+0x75],cl
   14001fe4a:	outs   dx,BYTE PTR ds:[rsi]
   14001fe4b:	add    BYTE PTR [rbp+0x61],cl
   14001fe4e:	jns    0x14001fe50
   14001fe50:	rex.B jo 0x14001fec5
   14001fe53:	add    BYTE PTR [rbp+0x61],cl
   14001fe56:	jb     0x14001fe58
   14001fe58:	rex.RX
   14001fe59:	gs (bad) 
   14001fe5b:	add    BYTE PTR [rdx+0x61],cl
   14001fe5e:	outs   dx,BYTE PTR ds:[rsi]
   14001fe5f:	add    BYTE PTR [rbx+0x61],dl
   14001fe62:	je     0x14001fed9
   14001fe64:	jb     0x14001feca
   14001fe66:	(bad)  
   14001fe67:	jns    0x14001fe69
   14001fe69:	add    BYTE PTR [rax],al
   14001fe6b:	add    BYTE PTR [rsi+0x72],al
   14001fe6e:	imul   esp,DWORD PTR [rcx+riz*2+0x79],0x0
   14001fe76:	add    BYTE PTR [rax],al
   14001fe78:	push   rsp
   14001fe79:	push   0x64737275
   14001fe7e:	(bad)  
   14001fe7f:	jns    0x14001fe81
   14001fe81:	add    BYTE PTR [rax],al
   14001fe83:	add    BYTE PTR [rax],al
   14001fe85:	add    BYTE PTR [rax],al
   14001fe87:	add    BYTE PTR [rdi+0x65],dl
   14001fe8a:	outs   dx,BYTE PTR fs:[rsi]
   14001fe8c:	gs jae 0x14001fef3
   14001fe8f:	(bad)  
   14001fe90:	jns    0x14001fe92
   14001fe92:	add    BYTE PTR [rax],al
   14001fe94:	add    BYTE PTR [rax],al
   14001fe96:	add    BYTE PTR [rax],al
   14001fe98:	push   rsp
   14001fe99:	jne    0x14001ff00
   14001fe9b:	jae    0x14001ff01
   14001fe9d:	(bad)  
   14001fe9e:	jns    0x14001fea0
   14001fea0:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001fea2:	outs   dx,BYTE PTR ds:[rsi]
   14001fea3:	fs (bad) 
   14001fea5:	jns    0x14001fea7
   14001fea7:	add    BYTE PTR [rbx+0x75],dl
   14001feaa:	outs   dx,BYTE PTR ds:[rsi]
   14001feab:	fs (bad) 
   14001fead:	jns    0x14001feaf
   14001feaf:	add    BYTE PTR [rbx+0x61],dl
   14001feb2:	je     0x14001feb4
   14001feb4:	rex.RX jb 0x14001ff20
   14001feb7:	add    BYTE PTR [rax+rbp*2+0x75],dl
   14001febb:	add    BYTE PTR [rdi+0x65],dl
   14001febe:	add    BYTE PTR fs:[rbp+rsi*2+0x65],dl
   14001fec3:	add    BYTE PTR [rbp+0x6f],cl
   14001fec6:	outs   dx,BYTE PTR ds:[rsi]
   14001fec7:	add    BYTE PTR [rbx+0x75],dl
   14001feca:	outs   dx,BYTE PTR ds:[rsi]
   14001fecb:	add    BYTE PTR [rax],al
   14001fecd:	add    BYTE PTR [rax],al
   14001fecf:	add    BYTE PTR [rcx],al
   14001fed1:	add    al,BYTE PTR [rbx]
   14001fed3:	add    al,0x5
   14001fed5:	(bad)  
   14001fed6:	(bad)  
   14001fed7:	or     BYTE PTR [rcx],cl
   14001fed9:	or     cl,BYTE PTR [rbx]
   14001fedb:	or     al,0xd
   14001fedd:	(bad)  
   14001fede:	movups xmm2,XMMWORD PTR [rcx]
   14001fee1:	adc    dl,BYTE PTR [rbx]
   14001fee3:	adc    al,0x15
   14001fee5:	(bad)  
   14001fee6:	(bad)  
   14001fee7:	sbb    BYTE PTR [rcx],bl
   14001fee9:	sbb    bl,BYTE PTR [rbx]
   14001feeb:	sbb    al,0x1d
   14001feed:	(bad)  
   14001feee:	(bad)  
   14001feef:	and    BYTE PTR [rcx],ah
   14001fef1:	and    ah,BYTE PTR [rbx]
   14001fef3:	and    al,0x25
   14001fef5:	es (bad) 
   14001fef7:	sub    BYTE PTR [rcx],ch
   14001fef9:	sub    ch,BYTE PTR [rbx]
   14001fefb:	sub    al,0x2d
   14001fefd:	cs (bad) 
   14001feff:	xor    BYTE PTR [rcx],dh
   14001ff01:	xor    dh,BYTE PTR [rbx]
   14001ff03:	xor    al,0x35
   14001ff05:	ss (bad) 
   14001ff07:	cmp    BYTE PTR [rcx],bh
   14001ff09:	cmp    bh,BYTE PTR [rbx]
   14001ff0b:	cmp    al,0x3d
   14001ff0d:	ds (bad) 
   14001ff0f:	rex
   14001ff10:	rex.B
   14001ff11:	rex.X
   14001ff12:	rex.XB
   14001ff13:	rex.R
   14001ff14:	rex.RB
   14001ff15:	rex.RX
   14001ff16:	rex.RXB
   14001ff17:	rex.W
   14001ff18:	rex.WB
   14001ff19:	rex.WX
   14001ff1a:	rex.WXB
   14001ff1b:	rex.WR
   14001ff1c:	rex.WRB
   14001ff1d:	rex.WRX
   14001ff1e:	rex.WRXB push r8
   14001ff20:	push   rcx
   14001ff21:	push   rdx
   14001ff22:	push   rbx
   14001ff23:	push   rsp
   14001ff24:	push   rbp
   14001ff25:	push   rsi
   14001ff26:	push   rdi
   14001ff27:	pop    rax
   14001ff28:	pop    rcx
   14001ff29:	pop    rdx
   14001ff2a:	pop    rbx
   14001ff2b:	pop    rsp
   14001ff2c:	pop    rbp
   14001ff2d:	pop    rsi
   14001ff2e:	pop    rdi
   14001ff2f:	(bad)  
   14001ff30:	(bad)  
   14001ff31:	(bad)
   14001ff36:	addr32 push 0x6c6b6a69
   14001ff3c:	ins    DWORD PTR es:[rdi],dx
   14001ff3d:	outs   dx,BYTE PTR ds:[rsi]
   14001ff3e:	outs   dx,DWORD PTR ds:[rsi]
   14001ff3f:	jo     0x14001ffb2
   14001ff41:	jb     0x14001ffb6
   14001ff43:	je     0x14001ffba
   14001ff45:	jbe    0x14001ffbe
   14001ff47:	js     0x14001ffc2
   14001ff49:	jp     0x14001ffc6
   14001ff4b:	jl     0x14001ffca
   14001ff4d:	jle    0x14001ffce
   14001ff4f:	add    BYTE PTR [rdi+0x65],al
   14001ff52:	je     0x14001ffa4
   14001ff54:	jb     0x14001ffc5
   14001ff56:	movsxd esp,DWORD PTR [rbp+0x73]
   14001ff59:	jae    0x14001ffb2
   14001ff5b:	imul   ebp,DWORD PTR [rsi+0x64],0x7453776f
   14001ff62:	(bad)  
   14001ff63:	je     0x14001ffce
   14001ff65:	outs   dx,DWORD PTR ds:[rsi]
   14001ff66:	outs   dx,BYTE PTR ds:[rsi]
   14001ff67:	add    BYTE PTR [rdi+0x65],al
   14001ff6a:	je     0x14001ffc1
   14001ff6c:	jae    0x14001ffd3
   14001ff6e:	jb     0x14001ffbf
   14001ff70:	(bad)  
   14001ff71:	push   0x65
   14001ff73:	movsxd esi,DWORD PTR [rcx+rcx*2+0x6e]
   14001ff77:	outs   dx,WORD PTR ds:[rsi]
   14001ff79:	jb     0x14001ffe8
   14001ff7b:	(bad)  
   14001ff7c:	je     0x14001ffe7
   14001ff7e:	outs   dx,DWORD PTR ds:[rsi]
   14001ff7f:	outs   dx,BYTE PTR ds:[rsi]
   14001ff80:	push   rdi
   14001ff81:	add    BYTE PTR [rax],al
   14001ff83:	add    BYTE PTR [rax],al
   14001ff85:	add    BYTE PTR [rax],al
   14001ff87:	add    BYTE PTR [rdi+0x65],al
   14001ff8a:	je     0x14001ffd8
   14001ff8c:	(bad)  
   14001ff8d:	jae    0x140020003
   14001ff8f:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14001ff94:	gs push rax
   14001ff96:	outs   dx,DWORD PTR ds:[rsi]
   14001ff97:	jo     0x14002000e
   14001ff99:	jo     0x14001ff9b
   14001ff9b:	add    BYTE PTR [rax],al
   14001ff9d:	add    BYTE PTR [rax],al
   14001ff9f:	add    BYTE PTR [rdi+0x65],al
   14001ffa2:	je     0x14001ffe5
   14001ffa4:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14001ffa8:	gs push rdi
   14001ffaa:	imul   ebp,DWORD PTR [rsi+0x64],0x4d00776f
   14001ffb1:	gs jae 0x140020027
   14001ffb4:	(bad)  
   14001ffb5:	rex.X outs dx,DWORD PTR gs:[esi]
   14001ffb9:	js     0x140020012
   14001ffbb:	add    BYTE PTR [rax],al
   14001ffbd:	add    BYTE PTR [rax],al
   14001ffbf:	add    BYTE PTR [rbp+0x0],dl
   14001ffc2:	push   rbx
   14001ffc3:	add    BYTE PTR [rbp+0x0],al
   14001ffc6:	push   rdx
   14001ffc7:	add    BYTE PTR [rbx],dh
   14001ffc9:	add    BYTE PTR [rdx],dh
   14001ffcb:	add    BYTE PTR [rsi],ch
   14001ffcd:	add    BYTE PTR [rax+rax*1+0x4c],al
   14001ffd1:	add    BYTE PTR [rax+rax*1+0x0],cl
   14001ffd5:	add    BYTE PTR [rax],al
   14001ffd7:	add    BYTE PTR [rdx+rbx*2+0x0],dl
   14001ffdb:	add    BYTE PTR [rax],al
   14001ffdd:	add    BYTE PTR [rax],al
   14001ffdf:	add    BYTE PTR [rbx+0x75],dl
   14001ffe2:	outs   dx,BYTE PTR ds:[rsi]
   14001ffe3:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14001ffe5:	outs   dx,BYTE PTR ds:[rsi]
   14001ffe6:	push   rsp
   14001ffe7:	jne    0x14002004e
   14001ffe9:	push   rdi
   14001ffea:	gs fs push rsp
   14001ffed:	push   0x69724675
   14001fff2:	push   rbx
   14001fff3:	(bad)  
   14001fff4:	je     0x14001fff6
   14001fff6:	add    BYTE PTR [rax],al
   14001fff8:	rex.WX (bad) 
   14001fffa:	outs   dx,BYTE PTR ds:[rsi]
   14001fffb:	rex.RX
   14001fffc:	gs (bad) 
   14001fffe:	rex.WRB (bad) 
   140020000:	jb     0x140020043
   140020002:	jo     0x140020076
   140020004:	rex.WRB (bad) 
   140020006:	jns    0x140020052
   140020008:	jne    0x140020078
   14002000a:	rex.WX jne 0x140020079
   14002000d:	rex.B jne 0x140020077
   140020010:	push   rbx
   140020011:	gs jo  0x140020063
   140020014:	movsxd esi,DWORD PTR [rsi+rcx*2+0x6f]
   140020018:	jbe    0x14002005e
   14002001a:	movsxd eax,DWORD PTR gs:[rax]
	...
   14002011d:	add    BYTE PTR [rax],al
   14002011f:	add    BYTE PTR [rax],ah
   140020121:	add    BYTE PTR [rax],ah
   140020123:	add    BYTE PTR [rax],ah
   140020125:	add    BYTE PTR [rax],ah
   140020127:	add    BYTE PTR [rax],ah
   140020129:	add    BYTE PTR [rax],ah
   14002012b:	add    BYTE PTR [rax],ah
   14002012d:	add    BYTE PTR [rax],ah
   14002012f:	add    BYTE PTR [rax],ah
   140020131:	add    BYTE PTR [rax],ch
   140020133:	add    BYTE PTR [rax],ch
   140020135:	add    BYTE PTR [rax],ch
   140020137:	add    BYTE PTR [rax],ch
   140020139:	add    BYTE PTR [rax],ch
   14002013b:	add    BYTE PTR [rax],ah
   14002013d:	add    BYTE PTR [rax],ah
   14002013f:	add    BYTE PTR [rax],ah
   140020141:	add    BYTE PTR [rax],ah
   140020143:	add    BYTE PTR [rax],ah
   140020145:	add    BYTE PTR [rax],ah
   140020147:	add    BYTE PTR [rax],ah
   140020149:	add    BYTE PTR [rax],ah
   14002014b:	add    BYTE PTR [rax],ah
   14002014d:	add    BYTE PTR [rax],ah
   14002014f:	add    BYTE PTR [rax],ah
   140020151:	add    BYTE PTR [rax],ah
   140020153:	add    BYTE PTR [rax],ah
   140020155:	add    BYTE PTR [rax],ah
   140020157:	add    BYTE PTR [rax],ah
   140020159:	add    BYTE PTR [rax],ah
   14002015b:	add    BYTE PTR [rax],ah
   14002015d:	add    BYTE PTR [rax],ah
   14002015f:	add    BYTE PTR [rax+0x0],cl
   140020162:	adc    BYTE PTR [rax],al
   140020164:	adc    BYTE PTR [rax],al
   140020166:	adc    BYTE PTR [rax],al
   140020168:	adc    BYTE PTR [rax],al
   14002016a:	adc    BYTE PTR [rax],al
   14002016c:	adc    BYTE PTR [rax],al
   14002016e:	adc    BYTE PTR [rax],al
   140020170:	adc    BYTE PTR [rax],al
   140020172:	adc    BYTE PTR [rax],al
   140020174:	adc    BYTE PTR [rax],al
   140020176:	adc    BYTE PTR [rax],al
   140020178:	adc    BYTE PTR [rax],al
   14002017a:	adc    BYTE PTR [rax],al
   14002017c:	adc    BYTE PTR [rax],al
   14002017e:	adc    BYTE PTR [rax],al
   140020180:	test   BYTE PTR [rax],al
   140020182:	test   BYTE PTR [rax],al
   140020184:	test   BYTE PTR [rax],al
   140020186:	test   BYTE PTR [rax],al
   140020188:	test   BYTE PTR [rax],al
   14002018a:	test   BYTE PTR [rax],al
   14002018c:	test   BYTE PTR [rax],al
   14002018e:	test   BYTE PTR [rax],al
   140020190:	test   BYTE PTR [rax],al
   140020192:	test   BYTE PTR [rax],al
   140020194:	adc    BYTE PTR [rax],al
   140020196:	adc    BYTE PTR [rax],al
   140020198:	adc    BYTE PTR [rax],al
   14002019a:	adc    BYTE PTR [rax],al
   14002019c:	adc    BYTE PTR [rax],al
   14002019e:	adc    BYTE PTR [rax],al
   1400201a0:	adc    BYTE PTR [rax],al
   1400201a2:	add    DWORD PTR [rax],0x810081
   1400201a8:	add    DWORD PTR [rax],0x810081
   1400201ae:	add    DWORD PTR [rax],eax
   1400201b0:	add    DWORD PTR [rax],eax
   1400201b2:	add    DWORD PTR [rax],eax
   1400201b4:	add    DWORD PTR [rax],eax
   1400201b6:	add    DWORD PTR [rax],eax
   1400201b8:	add    DWORD PTR [rax],eax
   1400201ba:	add    DWORD PTR [rax],eax
   1400201bc:	add    DWORD PTR [rax],eax
   1400201be:	add    DWORD PTR [rax],eax
   1400201c0:	add    DWORD PTR [rax],eax
   1400201c2:	add    DWORD PTR [rax],eax
   1400201c4:	add    DWORD PTR [rax],eax
   1400201c6:	add    DWORD PTR [rax],eax
   1400201c8:	add    DWORD PTR [rax],eax
   1400201ca:	add    DWORD PTR [rax],eax
   1400201cc:	add    DWORD PTR [rax],eax
   1400201ce:	add    DWORD PTR [rax],eax
   1400201d0:	add    DWORD PTR [rax],eax
   1400201d2:	add    DWORD PTR [rax],eax
   1400201d4:	add    DWORD PTR [rax],eax
   1400201d6:	adc    BYTE PTR [rax],al
   1400201d8:	adc    BYTE PTR [rax],al
   1400201da:	adc    BYTE PTR [rax],al
   1400201dc:	adc    BYTE PTR [rax],al
   1400201de:	adc    BYTE PTR [rax],al
   1400201e0:	adc    BYTE PTR [rax],al
   1400201e2:	(bad)  
   1400201e3:	add    BYTE PTR [rdx-0x7dff7e00],al
   1400201e9:	add    BYTE PTR [rdx+0x2008200],al
   1400201ef:	add    BYTE PTR [rdx],al
   1400201f1:	add    BYTE PTR [rdx],al
   1400201f3:	add    BYTE PTR [rdx],al
   1400201f5:	add    BYTE PTR [rdx],al
   1400201f7:	add    BYTE PTR [rdx],al
   1400201f9:	add    BYTE PTR [rdx],al
   1400201fb:	add    BYTE PTR [rdx],al
   1400201fd:	add    BYTE PTR [rdx],al
   1400201ff:	add    BYTE PTR [rdx],al
   140020201:	add    BYTE PTR [rdx],al
   140020203:	add    BYTE PTR [rdx],al
   140020205:	add    BYTE PTR [rdx],al
   140020207:	add    BYTE PTR [rdx],al
   140020209:	add    BYTE PTR [rdx],al
   14002020b:	add    BYTE PTR [rdx],al
   14002020d:	add    BYTE PTR [rdx],al
   14002020f:	add    BYTE PTR [rdx],al
   140020211:	add    BYTE PTR [rdx],al
   140020213:	add    BYTE PTR [rdx],al
   140020215:	add    BYTE PTR [rax],dl
   140020217:	add    BYTE PTR [rax],dl
   140020219:	add    BYTE PTR [rax],dl
   14002021b:	add    BYTE PTR [rax],dl
   14002021d:	add    BYTE PTR [rax],ah
	...
   14002031f:	add    BYTE PTR [rax],al
   140020321:	add    BYTE PTR [rax],ah
   140020323:	add    BYTE PTR [rax],ah
   140020325:	add    BYTE PTR [rax],ah
   140020327:	add    BYTE PTR [rax],ah
   140020329:	add    BYTE PTR [rax],ah
   14002032b:	add    BYTE PTR [rax],ah
   14002032d:	add    BYTE PTR [rax],ah
   14002032f:	add    BYTE PTR [rax],ah
   140020331:	add    BYTE PTR [rax],ah
   140020333:	add    BYTE PTR [rax+0x0],ch
   140020336:	sub    BYTE PTR [rax],al
   140020338:	sub    BYTE PTR [rax],al
   14002033a:	sub    BYTE PTR [rax],al
   14002033c:	sub    BYTE PTR [rax],al
   14002033e:	and    BYTE PTR [rax],al
   140020340:	and    BYTE PTR [rax],al
   140020342:	and    BYTE PTR [rax],al
   140020344:	and    BYTE PTR [rax],al
   140020346:	and    BYTE PTR [rax],al
   140020348:	and    BYTE PTR [rax],al
   14002034a:	and    BYTE PTR [rax],al
   14002034c:	and    BYTE PTR [rax],al
   14002034e:	and    BYTE PTR [rax],al
   140020350:	and    BYTE PTR [rax],al
   140020352:	and    BYTE PTR [rax],al
   140020354:	and    BYTE PTR [rax],al
   140020356:	and    BYTE PTR [rax],al
   140020358:	and    BYTE PTR [rax],al
   14002035a:	and    BYTE PTR [rax],al
   14002035c:	and    BYTE PTR [rax],al
   14002035e:	and    BYTE PTR [rax],al
   140020360:	and    BYTE PTR [rax],al
   140020362:	rex.W add BYTE PTR [rax],dl
   140020365:	add    BYTE PTR [rax],dl
   140020367:	add    BYTE PTR [rax],dl
   140020369:	add    BYTE PTR [rax],dl
   14002036b:	add    BYTE PTR [rax],dl
   14002036d:	add    BYTE PTR [rax],dl
   14002036f:	add    BYTE PTR [rax],dl
   140020371:	add    BYTE PTR [rax],dl
   140020373:	add    BYTE PTR [rax],dl
   140020375:	add    BYTE PTR [rax],dl
   140020377:	add    BYTE PTR [rax],dl
   140020379:	add    BYTE PTR [rax],dl
   14002037b:	add    BYTE PTR [rax],dl
   14002037d:	add    BYTE PTR [rax],dl
   14002037f:	add    BYTE PTR [rax],dl
   140020381:	add    BYTE PTR [rax+rax*1+0x840084],al
   140020388:	test   BYTE PTR [rax],al
   14002038a:	test   BYTE PTR [rax],al
   14002038c:	test   BYTE PTR [rax],al
   14002038e:	test   BYTE PTR [rax],al
   140020390:	test   BYTE PTR [rax],al
   140020392:	test   BYTE PTR [rax],al
   140020394:	test   BYTE PTR [rax],al
   140020396:	adc    BYTE PTR [rax],al
   140020398:	adc    BYTE PTR [rax],al
   14002039a:	adc    BYTE PTR [rax],al
   14002039c:	adc    BYTE PTR [rax],al
   14002039e:	adc    BYTE PTR [rax],al
   1400203a0:	adc    BYTE PTR [rax],al
   1400203a2:	adc    BYTE PTR [rax],al
   1400203a4:	add    DWORD PTR [rcx],0x1810181
   1400203aa:	add    DWORD PTR [rcx],0x1810181
   1400203b0:	add    DWORD PTR [rcx],eax
   1400203b2:	add    DWORD PTR [rcx],eax
   1400203b4:	add    DWORD PTR [rcx],eax
   1400203b6:	add    DWORD PTR [rcx],eax
   1400203b8:	add    DWORD PTR [rcx],eax
   1400203ba:	add    DWORD PTR [rcx],eax
   1400203bc:	add    DWORD PTR [rcx],eax
   1400203be:	add    DWORD PTR [rcx],eax
   1400203c0:	add    DWORD PTR [rcx],eax
   1400203c2:	add    DWORD PTR [rcx],eax
   1400203c4:	add    DWORD PTR [rcx],eax
   1400203c6:	add    DWORD PTR [rcx],eax
   1400203c8:	add    DWORD PTR [rcx],eax
   1400203ca:	add    DWORD PTR [rcx],eax
   1400203cc:	add    DWORD PTR [rcx],eax
   1400203ce:	add    DWORD PTR [rcx],eax
   1400203d0:	add    DWORD PTR [rcx],eax
   1400203d2:	add    DWORD PTR [rcx],eax
   1400203d4:	add    DWORD PTR [rcx],eax
   1400203d6:	add    DWORD PTR [rcx],eax
   1400203d8:	adc    BYTE PTR [rax],al
   1400203da:	adc    BYTE PTR [rax],al
   1400203dc:	adc    BYTE PTR [rax],al
   1400203de:	adc    BYTE PTR [rax],al
   1400203e0:	adc    BYTE PTR [rax],al
   1400203e2:	adc    BYTE PTR [rax],al
   1400203e4:	(bad)  
   1400203e5:	add    DWORD PTR [rdx-0x7dfe7dff],eax
   1400203eb:	add    DWORD PTR [rdx+0x2018201],eax
   1400203f1:	add    DWORD PTR [rdx],eax
   1400203f3:	add    DWORD PTR [rdx],eax
   1400203f5:	add    DWORD PTR [rdx],eax
   1400203f7:	add    DWORD PTR [rdx],eax
   1400203f9:	add    DWORD PTR [rdx],eax
   1400203fb:	add    DWORD PTR [rdx],eax
   1400203fd:	add    DWORD PTR [rdx],eax
   1400203ff:	add    DWORD PTR [rdx],eax
   140020401:	add    DWORD PTR [rdx],eax
   140020403:	add    DWORD PTR [rdx],eax
   140020405:	add    DWORD PTR [rdx],eax
   140020407:	add    DWORD PTR [rdx],eax
   140020409:	add    DWORD PTR [rdx],eax
   14002040b:	add    DWORD PTR [rdx],eax
   14002040d:	add    DWORD PTR [rdx],eax
   14002040f:	add    DWORD PTR [rdx],eax
   140020411:	add    DWORD PTR [rdx],eax
   140020413:	add    DWORD PTR [rdx],eax
   140020415:	add    DWORD PTR [rdx],eax
   140020417:	add    DWORD PTR [rax],edx
   140020419:	add    BYTE PTR [rax],dl
   14002041b:	add    BYTE PTR [rax],dl
   14002041d:	add    BYTE PTR [rax],dl
   14002041f:	add    BYTE PTR [rax],ah
   140020421:	add    BYTE PTR [rax],ah
   140020423:	add    BYTE PTR [rax],ah
   140020425:	add    BYTE PTR [rax],ah
   140020427:	add    BYTE PTR [rax],ah
   140020429:	add    BYTE PTR [rax],ah
   14002042b:	add    BYTE PTR [rax],ah
   14002042d:	add    BYTE PTR [rax],ah
   14002042f:	add    BYTE PTR [rax],ah
   140020431:	add    BYTE PTR [rax],ah
   140020433:	add    BYTE PTR [rax],ah
   140020435:	add    BYTE PTR [rax],ah
   140020437:	add    BYTE PTR [rax],ah
   140020439:	add    BYTE PTR [rax],ah
   14002043b:	add    BYTE PTR [rax],ah
   14002043d:	add    BYTE PTR [rax],ah
   14002043f:	add    BYTE PTR [rax],ah
   140020441:	add    BYTE PTR [rax],ah
   140020443:	add    BYTE PTR [rax],ah
   140020445:	add    BYTE PTR [rax],ah
   140020447:	add    BYTE PTR [rax],ah
   140020449:	add    BYTE PTR [rax],ah
   14002044b:	add    BYTE PTR [rax],ah
   14002044d:	add    BYTE PTR [rax],ah
   14002044f:	add    BYTE PTR [rax],ah
   140020451:	add    BYTE PTR [rax],ah
   140020453:	add    BYTE PTR [rax],ah
   140020455:	add    BYTE PTR [rax],ah
   140020457:	add    BYTE PTR [rax],ah
   140020459:	add    BYTE PTR [rax],ah
   14002045b:	add    BYTE PTR [rax],ah
   14002045d:	add    BYTE PTR [rax],ah
   14002045f:	add    BYTE PTR [rax],ah
   140020461:	add    BYTE PTR [rax+0x0],cl
   140020464:	adc    BYTE PTR [rax],al
   140020466:	adc    BYTE PTR [rax],al
   140020468:	adc    BYTE PTR [rax],al
   14002046a:	adc    BYTE PTR [rax],al
   14002046c:	adc    BYTE PTR [rax],al
   14002046e:	adc    BYTE PTR [rax],al
   140020470:	adc    BYTE PTR [rax],al
   140020472:	adc    BYTE PTR [rax],al
   140020474:	adc    BYTE PTR [rax],al
   140020476:	adc    BYTE PTR [rax],al
   140020478:	adc    BYTE PTR [rax],al
   14002047a:	adc    BYTE PTR [rax],al
   14002047c:	adc    BYTE PTR [rax],al
   14002047e:	adc    BYTE PTR [rax],al
   140020480:	adc    BYTE PTR [rax],al
   140020482:	adc    BYTE PTR [rax],al
   140020484:	adc    BYTE PTR [rax],al
   140020486:	adc    al,0x0
   140020488:	adc    al,0x0
   14002048a:	adc    BYTE PTR [rax],al
   14002048c:	adc    BYTE PTR [rax],al
   14002048e:	adc    BYTE PTR [rax],al
   140020490:	adc    BYTE PTR [rax],al
   140020492:	adc    BYTE PTR [rax],al
   140020494:	adc    al,0x0
   140020496:	adc    BYTE PTR [rax],al
   140020498:	adc    BYTE PTR [rax],al
   14002049a:	adc    BYTE PTR [rax],al
   14002049c:	adc    BYTE PTR [rax],al
   14002049e:	adc    BYTE PTR [rax],al
   1400204a0:	adc    BYTE PTR [rax],al
   1400204a2:	add    DWORD PTR [rcx],eax
   1400204a4:	add    DWORD PTR [rcx],eax
   1400204a6:	add    DWORD PTR [rcx],eax
   1400204a8:	add    DWORD PTR [rcx],eax
   1400204aa:	add    DWORD PTR [rcx],eax
   1400204ac:	add    DWORD PTR [rcx],eax
   1400204ae:	add    DWORD PTR [rcx],eax
   1400204b0:	add    DWORD PTR [rcx],eax
   1400204b2:	add    DWORD PTR [rcx],eax
   1400204b4:	add    DWORD PTR [rcx],eax
   1400204b6:	add    DWORD PTR [rcx],eax
   1400204b8:	add    DWORD PTR [rcx],eax
   1400204ba:	add    DWORD PTR [rcx],eax
   1400204bc:	add    DWORD PTR [rcx],eax
   1400204be:	add    DWORD PTR [rcx],eax
   1400204c0:	add    DWORD PTR [rcx],eax
   1400204c2:	add    DWORD PTR [rcx],eax
   1400204c4:	add    DWORD PTR [rcx],eax
   1400204c6:	add    DWORD PTR [rcx],eax
   1400204c8:	add    DWORD PTR [rcx],eax
   1400204ca:	add    DWORD PTR [rcx],eax
   1400204cc:	add    DWORD PTR [rcx],eax
   1400204ce:	add    DWORD PTR [rcx],eax
   1400204d0:	adc    BYTE PTR [rax],al
   1400204d2:	add    DWORD PTR [rcx],eax
   1400204d4:	add    DWORD PTR [rcx],eax
   1400204d6:	add    DWORD PTR [rcx],eax
   1400204d8:	add    DWORD PTR [rcx],eax
   1400204da:	add    DWORD PTR [rcx],eax
   1400204dc:	add    DWORD PTR [rcx],eax
   1400204de:	add    DWORD PTR [rcx],eax
   1400204e0:	add    al,BYTE PTR [rcx]
   1400204e2:	add    al,BYTE PTR [rcx]
   1400204e4:	add    al,BYTE PTR [rcx]
   1400204e6:	add    al,BYTE PTR [rcx]
   1400204e8:	add    al,BYTE PTR [rcx]
   1400204ea:	add    al,BYTE PTR [rcx]
   1400204ec:	add    al,BYTE PTR [rcx]
   1400204ee:	add    al,BYTE PTR [rcx]
   1400204f0:	add    al,BYTE PTR [rcx]
   1400204f2:	add    al,BYTE PTR [rcx]
   1400204f4:	add    al,BYTE PTR [rcx]
   1400204f6:	add    al,BYTE PTR [rcx]
   1400204f8:	add    al,BYTE PTR [rcx]
   1400204fa:	add    al,BYTE PTR [rcx]
   1400204fc:	add    al,BYTE PTR [rcx]
   1400204fe:	add    al,BYTE PTR [rcx]
   140020500:	add    al,BYTE PTR [rcx]
   140020502:	add    al,BYTE PTR [rcx]
   140020504:	add    al,BYTE PTR [rcx]
   140020506:	add    al,BYTE PTR [rcx]
   140020508:	add    al,BYTE PTR [rcx]
   14002050a:	add    al,BYTE PTR [rcx]
   14002050c:	add    al,BYTE PTR [rcx]
   14002050e:	add    al,BYTE PTR [rcx]
   140020510:	adc    BYTE PTR [rax],al
   140020512:	add    al,BYTE PTR [rcx]
   140020514:	add    al,BYTE PTR [rcx]
   140020516:	add    al,BYTE PTR [rcx]
   140020518:	add    al,BYTE PTR [rcx]
   14002051a:	add    al,BYTE PTR [rcx]
   14002051c:	add    al,BYTE PTR [rcx]
   14002051e:	add    al,BYTE PTR [rcx]
   140020520:	add    al,BYTE PTR [rcx]
   140020522:	add    DWORD PTR [rcx],eax
	...
   140020530:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   140020537:	xchg   DWORD PTR [rax-0x73747577],ecx
   14002053d:	lea    ecx,[rsi-0x6d6e6f71]
   140020543:	xchg   ebx,eax
   140020544:	xchg   esp,eax
   140020545:	xchg   ebp,eax
   140020546:	xchg   esi,eax
   140020547:	xchg   edi,eax
   140020548:	cwde   
   140020549:	cdq    
   14002054a:	(bad)  
   14002054b:	fwait
   14002054c:	pushf  
   14002054d:	popf   
   14002054e:	sahf   
   14002054f:	lahf   
   140020550:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140020559:	test   eax,0xadacabaa
   14002055e:	scas   al,BYTE PTR es:[rdi]
   14002055f:	scas   eax,DWORD PTR es:[rdi]
   140020560:	mov    al,0xb1
   140020562:	mov    dl,0xb3
   140020564:	mov    ah,0xb5
   140020566:	mov    dh,0xb7
   140020568:	mov    eax,0xbcbbbab9
   14002056d:	mov    ebp,0xc1c0bfbe
   140020572:	ret    0xc4c3
   140020575:	(bad)
   140020578:	enter  0xcac9,0xcb
   14002057c:	int3   
   14002057d:	int    0xce
   14002057f:	iret   
   140020580:	rcl    cl,1
   140020582:	rcl    bl,cl
   140020584:	(bad)  
   140020585:	(bad)  
   140020586:	(bad)  
   140020587:	xlat   BYTE PTR ds:[rbx]
   140020588:	fcomp  st(1)
   14002058a:	fcmovu st,st(3)
   14002058c:	(bad)  
   14002058e:	(bad)  
   140020590:	loopne 0x140020573
   140020592:	loop   0x140020577
   140020594:	in     al,0xe5
   140020596:	out    0xe7,al
   140020598:	call   0x12cedf086
   14002059d:	in     eax,dx
   14002059e:	out    dx,al
   14002059f:	out    dx,eax
   1400205a0:	lock icebp 
   1400205a2:	repnz repz hlt 
   1400205a5:	cmc    
   1400205a6:	div    bh
   1400205a8:	clc    
   1400205a9:	stc    
   1400205aa:	cli    
   1400205ab:	sti    
   1400205ac:	cld    
   1400205ad:	std    
   1400205ae:	(bad)  
   1400205af:	inc    DWORD PTR [rax]
   1400205b1:	add    DWORD PTR [rdx],eax
   1400205b3:	add    eax,DWORD PTR [rax*1+0x9080706]
   1400205ba:	or     cl,BYTE PTR [rbx]
   1400205bc:	or     al,0xd
   1400205be:	(bad)  
   1400205bf:	movups xmm2,XMMWORD PTR [rcx]
   1400205c2:	adc    dl,BYTE PTR [rbx]
   1400205c4:	adc    al,0x15
   1400205c6:	(bad)  
   1400205c7:	(bad)  
   1400205c8:	sbb    BYTE PTR [rcx],bl
   1400205ca:	sbb    bl,BYTE PTR [rbx]
   1400205cc:	sbb    al,0x1d
   1400205ce:	(bad)  
   1400205cf:	(bad)  
   1400205d0:	and    BYTE PTR [rcx],ah
   1400205d2:	and    ah,BYTE PTR [rbx]
   1400205d4:	and    al,0x25
   1400205d6:	es (bad) 
   1400205d8:	sub    BYTE PTR [rcx],ch
   1400205da:	sub    ch,BYTE PTR [rbx]
   1400205dc:	sub    al,0x2d
   1400205de:	cs (bad) 
   1400205e0:	xor    BYTE PTR [rcx],dh
   1400205e2:	xor    dh,BYTE PTR [rbx]
   1400205e4:	xor    al,0x35
   1400205e6:	ss (bad) 
   1400205e8:	cmp    BYTE PTR [rcx],bh
   1400205ea:	cmp    bh,BYTE PTR [rbx]
   1400205ec:	cmp    al,0x3d
   1400205ee:	ds (bad) 
   1400205f0:	rex (bad) 
   1400205f2:	(bad)
   1400205f7:	addr32 push 0x6c6b6a69
   1400205fd:	ins    DWORD PTR es:[rdi],dx
   1400205fe:	outs   dx,BYTE PTR ds:[rsi]
   1400205ff:	outs   dx,DWORD PTR ds:[rsi]
   140020600:	jo     0x140020673
   140020602:	jb     0x140020677
   140020604:	je     0x14002067b
   140020606:	jbe    0x14002067f
   140020608:	js     0x140020683
   14002060a:	jp     0x140020667
   14002060c:	pop    rsp
   14002060d:	pop    rbp
   14002060e:	pop    rsi
   14002060f:	pop    rdi
   140020610:	(bad)  
   140020611:	(bad)  
   140020612:	(bad)
   140020617:	addr32 push 0x6c6b6a69
   14002061d:	ins    DWORD PTR es:[rdi],dx
   14002061e:	outs   dx,BYTE PTR ds:[rsi]
   14002061f:	outs   dx,DWORD PTR ds:[rsi]
   140020620:	jo     0x140020693
   140020622:	jb     0x140020697
   140020624:	je     0x14002069b
   140020626:	jbe    0x14002069f
   140020628:	js     0x1400206a3
   14002062a:	jp     0x1400206a7
   14002062c:	jl     0x1400206ab
   14002062e:	jle    0x1400206af
   140020630:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   140020637:	xchg   DWORD PTR [rax-0x73747577],ecx
   14002063d:	lea    ecx,[rsi-0x6d6e6f71]
   140020643:	xchg   ebx,eax
   140020644:	xchg   esp,eax
   140020645:	xchg   ebp,eax
   140020646:	xchg   esi,eax
   140020647:	xchg   edi,eax
   140020648:	cwde   
   140020649:	cdq    
   14002064a:	(bad)  
   14002064b:	fwait
   14002064c:	pushf  
   14002064d:	popf   
   14002064e:	sahf   
   14002064f:	lahf   
   140020650:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140020659:	test   eax,0xadacabaa
   14002065e:	scas   al,BYTE PTR es:[rdi]
   14002065f:	scas   eax,DWORD PTR es:[rdi]
   140020660:	mov    al,0xb1
   140020662:	mov    dl,0xb3
   140020664:	mov    ah,0xb5
   140020666:	mov    dh,0xb7
   140020668:	mov    eax,0xbcbbbab9
   14002066d:	mov    ebp,0xc1c0bfbe
   140020672:	ret    0xc4c3
   140020675:	(bad)
   140020678:	enter  0xcac9,0xcb
   14002067c:	int3   
   14002067d:	int    0xce
   14002067f:	iret   
   140020680:	rcl    cl,1
   140020682:	rcl    bl,cl
   140020684:	(bad)  
   140020685:	(bad)  
   140020686:	(bad)  
   140020687:	xlat   BYTE PTR ds:[rbx]
   140020688:	fcomp  st(1)
   14002068a:	fcmovu st,st(3)
   14002068c:	(bad)  
   14002068e:	(bad)  
   140020690:	loopne 0x140020673
   140020692:	loop   0x140020677
   140020694:	in     al,0xe5
   140020696:	out    0xe7,al
   140020698:	call   0x12cedf186
   14002069d:	in     eax,dx
   14002069e:	out    dx,al
   14002069f:	out    dx,eax
   1400206a0:	lock icebp 
   1400206a2:	repnz repz hlt 
   1400206a5:	cmc    
   1400206a6:	div    bh
   1400206a8:	clc    
   1400206a9:	stc    
   1400206aa:	cli    
   1400206ab:	sti    
   1400206ac:	cld    
   1400206ad:	std    
   1400206ae:	(bad)  
   1400206af:	inc    DWORD PTR [rax-0x7b7c7d7f]
   1400206b5:	test   DWORD PTR [rsi-0x75767779],eax
   1400206bb:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   1400206c2:	xchg   edx,eax
   1400206c3:	xchg   ebx,eax
   1400206c4:	xchg   esp,eax
   1400206c5:	xchg   ebp,eax
   1400206c6:	xchg   esi,eax
   1400206c7:	xchg   edi,eax
   1400206c8:	cwde   
   1400206c9:	cdq    
   1400206ca:	(bad)  
   1400206cb:	fwait
   1400206cc:	pushf  
   1400206cd:	popf   
   1400206ce:	sahf   
   1400206cf:	lahf   
   1400206d0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   1400206d9:	test   eax,0xadacabaa
   1400206de:	scas   al,BYTE PTR es:[rdi]
   1400206df:	scas   eax,DWORD PTR es:[rdi]
   1400206e0:	mov    al,0xb1
   1400206e2:	mov    dl,0xb3
   1400206e4:	mov    ah,0xb5
   1400206e6:	mov    dh,0xb7
   1400206e8:	mov    eax,0xbcbbbab9
   1400206ed:	mov    ebp,0xc1c0bfbe
   1400206f2:	ret    0xc4c3
   1400206f5:	(bad)
   1400206f8:	enter  0xcac9,0xcb
   1400206fc:	int3   
   1400206fd:	int    0xce
   1400206ff:	iret   
   140020700:	rcl    cl,1
   140020702:	rcl    bl,cl
   140020704:	(bad)  
   140020705:	(bad)  
   140020706:	(bad)  
   140020707:	xlat   BYTE PTR ds:[rbx]
   140020708:	fcomp  st(1)
   14002070a:	fcmovu st,st(3)
   14002070c:	(bad)  
   14002070e:	(bad)  
   140020710:	loopne 0x1400206f3
   140020712:	loop   0x1400206f7
   140020714:	in     al,0xe5
   140020716:	out    0xe7,al
   140020718:	call   0x12cedf206
   14002071d:	in     eax,dx
   14002071e:	out    dx,al
   14002071f:	out    dx,eax
   140020720:	lock icebp 
   140020722:	repnz repz hlt 
   140020725:	cmc    
   140020726:	div    bh
   140020728:	clc    
   140020729:	stc    
   14002072a:	cli    
   14002072b:	sti    
   14002072c:	cld    
   14002072d:	std    
   14002072e:	(bad)  
   14002072f:	inc    DWORD PTR [rax]
   140020731:	add    DWORD PTR [rdx],eax
   140020733:	add    eax,DWORD PTR [rax*1+0x9080706]
   14002073a:	or     cl,BYTE PTR [rbx]
   14002073c:	or     al,0xd
   14002073e:	(bad)  
   14002073f:	movups xmm2,XMMWORD PTR [rcx]
   140020742:	adc    dl,BYTE PTR [rbx]
   140020744:	adc    al,0x15
   140020746:	(bad)  
   140020747:	(bad)  
   140020748:	sbb    BYTE PTR [rcx],bl
   14002074a:	sbb    bl,BYTE PTR [rbx]
   14002074c:	sbb    al,0x1d
   14002074e:	(bad)  
   14002074f:	(bad)  
   140020750:	and    BYTE PTR [rcx],ah
   140020752:	and    ah,BYTE PTR [rbx]
   140020754:	and    al,0x25
   140020756:	es (bad) 
   140020758:	sub    BYTE PTR [rcx],ch
   14002075a:	sub    ch,BYTE PTR [rbx]
   14002075c:	sub    al,0x2d
   14002075e:	cs (bad) 
   140020760:	xor    BYTE PTR [rcx],dh
   140020762:	xor    dh,BYTE PTR [rbx]
   140020764:	xor    al,0x35
   140020766:	ss (bad) 
   140020768:	cmp    BYTE PTR [rcx],bh
   14002076a:	cmp    bh,BYTE PTR [rbx]
   14002076c:	cmp    al,0x3d
   14002076e:	ds (bad) 
   140020770:	rex
   140020771:	rex.B
   140020772:	rex.X
   140020773:	rex.XB
   140020774:	rex.R
   140020775:	rex.RB
   140020776:	rex.RX
   140020777:	rex.RXB
   140020778:	rex.W
   140020779:	rex.WB
   14002077a:	rex.WX
   14002077b:	rex.WXB
   14002077c:	rex.WR
   14002077d:	rex.WRB
   14002077e:	rex.WRX
   14002077f:	rex.WRXB push r8
   140020781:	push   rcx
   140020782:	push   rdx
   140020783:	push   rbx
   140020784:	push   rsp
   140020785:	push   rbp
   140020786:	push   rsi
   140020787:	push   rdi
   140020788:	pop    rax
   140020789:	pop    rcx
   14002078a:	pop    rdx
   14002078b:	pop    rbx
   14002078c:	pop    rsp
   14002078d:	pop    rbp
   14002078e:	pop    rsi
   14002078f:	pop    rdi
   140020790:	(bad)  
   140020791:	rex.B
   140020792:	rex.X
   140020793:	rex.XB
   140020794:	rex.R
   140020795:	rex.RB
   140020796:	rex.RX
   140020797:	rex.RXB
   140020798:	rex.W
   140020799:	rex.WB
   14002079a:	rex.WX
   14002079b:	rex.WXB
   14002079c:	rex.WR
   14002079d:	rex.WRB
   14002079e:	rex.WRX
   14002079f:	rex.WRXB push r8
   1400207a1:	push   rcx
   1400207a2:	push   rdx
   1400207a3:	push   rbx
   1400207a4:	push   rsp
   1400207a5:	push   rbp
   1400207a6:	push   rsi
   1400207a7:	push   rdi
   1400207a8:	pop    rax
   1400207a9:	pop    rcx
   1400207aa:	pop    rdx
   1400207ab:	jnp    0x140020829
   1400207ad:	jge    0x14002082d
   1400207af:	jg     0x140020731
   1400207b1:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
   1400207bb:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   1400207c2:	xchg   edx,eax
   1400207c3:	xchg   ebx,eax
   1400207c4:	xchg   esp,eax
   1400207c5:	xchg   ebp,eax
   1400207c6:	xchg   esi,eax
   1400207c7:	xchg   edi,eax
   1400207c8:	cwde   
   1400207c9:	cdq    
   1400207ca:	(bad)  
   1400207cb:	fwait
   1400207cc:	pushf  
   1400207cd:	popf   
   1400207ce:	sahf   
   1400207cf:	lahf   
   1400207d0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   1400207d9:	test   eax,0xadacabaa
   1400207de:	scas   al,BYTE PTR es:[rdi]
   1400207df:	scas   eax,DWORD PTR es:[rdi]
   1400207e0:	mov    al,0xb1
   1400207e2:	mov    dl,0xb3
   1400207e4:	mov    ah,0xb5
   1400207e6:	mov    dh,0xb7
   1400207e8:	mov    eax,0xbcbbbab9
   1400207ed:	mov    ebp,0xc1c0bfbe
   1400207f2:	ret    0xc4c3
   1400207f5:	(bad)
   1400207f8:	enter  0xcac9,0xcb
   1400207fc:	int3   
   1400207fd:	int    0xce
   1400207ff:	iret   
   140020800:	rcl    cl,1
   140020802:	rcl    bl,cl
   140020804:	(bad)  
   140020805:	(bad)  
   140020806:	(bad)  
   140020807:	xlat   BYTE PTR ds:[rbx]
   140020808:	fcomp  st(1)
   14002080a:	fcmovu st,st(3)
   14002080c:	(bad)  
   14002080e:	(bad)  
   140020810:	loopne 0x1400207f3
   140020812:	loop   0x1400207f7
   140020814:	in     al,0xe5
   140020816:	out    0xe7,al
   140020818:	call   0x12cedf306
   14002081d:	in     eax,dx
   14002081e:	out    dx,al
   14002081f:	out    dx,eax
   140020820:	lock icebp 
   140020822:	repnz repz hlt 
   140020825:	cmc    
   140020826:	div    bh
   140020828:	clc    
   140020829:	stc    
   14002082a:	cli    
   14002082b:	sti    
   14002082c:	cld    
   14002082d:	std    
   14002082e:	(bad)  
   14002082f:	inc    DWORD PTR [rbx+0x0]
   140020832:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140020836:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   14002083a:	push   rsp
   14002083b:	add    BYTE PTR [rax+rax*1],ah
   14002083e:	add    BYTE PTR [rax],al
   140020840:	push   rdx
   140020841:	push   rbx
   140020842:	rex.R push rbx
   140020844:	(bad)  
   140020845:	(bad)  
   140020846:	call   0x1baeda292
   14002084b:	rex.WR cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14002084d:	shl    DWORD PTR [rdx+0x7],1
   140020850:	sub    eax,DWORD PTR [rax]
   140020852:	add    eax,0x162
   140020857:	add    BYTE PTR [rbx+0x3a],al
   14002085a:	pop    rsp
   14002085b:	jb     0x1400208c2
   14002085d:	pop    rsp
   14002085e:	push   0x64
   140020860:	imul   esi,DWORD PTR [rdi],0x75
   140020863:	xor    BYTE PTR ss:[rcx+rsi*1+0x30],bl
   140020868:	cmp    BYTE PTR [rcx],dh
   14002086a:	pop    rsp
   14002086b:	(bad)  
   14002086c:	jne    0x1400208d7
   14002086e:	ins    BYTE PTR es:[rdi],dx
   14002086f:	fs pop rsp
   140020871:	ja     0x1400208dc
   140020873:	outs   dx,BYTE PTR ds:[rsi]
   140020874:	outs   dx,DWORD PTR fs:[rsi]
   140020876:	ja     0x1400208eb
   140020878:	sub    eax,0x36646d61
   14002087d:	xor    al,0x5c
   14002087f:	je     0x1400208ee
   140020881:	jo     0x1400208df
   140020883:	push   0x61
   140020885:	jbe    0x1400208e8
   140020887:	pop    rsp
   140020888:	push   0x61
   14002088a:	jbe    0x1400208ed
   14002088c:	ja     0x1400208ea
   14002088e:	outs   dx,DWORD PTR ds:[rsi]
   14002088f:	(bad)  
   140020890:	push   0x36
   140020892:	xor    al,0x5c
   140020894:	push   0x61
   140020896:	jbe    0x1400208f9
   140020898:	ja     0x1400208c8
   14002089a:	jo     0x140020900
   14002089c:	(bad)  
	...
   1400208bd:	add    BYTE PTR [rax],al
   1400208bf:	add    BYTE PTR [rcx],al
   1400208c1:	or     al,BYTE PTR [rax+rax*1]
   1400208c4:	or     dh,BYTE PTR [rax+rdx*1]
   1400208c7:	add    BYTE PTR [rdx],cl
   1400208c9:	rol    BYTE PTR [rsi],cl
   1400208cb:	jo     0x1400208ce
   1400208cd:	adc    al,0x6
   1400208cf:	add    BYTE PTR [rsp+riz*2],dl
   1400208d2:	(bad)  
   1400208d3:	add    BYTE PTR [rsp+rsi*1],dl
   1400208d6:	(bad)  
   1400208d7:	add    BYTE PTR [rdx+rsi*1],dl
   1400208da:	adc    BYTE PTR [rax+0x1],dh
   1400208dd:	sbb    BYTE PTR [rdx],cl
   1400208df:	add    BYTE PTR [rax],bl
   1400208e1:	fs or  al,0x0
   1400208e4:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   1400208e8:	sbb    BYTE PTR [rdx+rcx*1],dh
   1400208eb:	add    BYTE PTR [rax],bl
   1400208ed:	push   rdx
   1400208ee:	adc    al,0xd0
   1400208f0:	adc    al,al
   1400208f2:	adc    BYTE PTR [rax+0x19],dh
   1400208f5:	(bad)  
   1400208f6:	or     DWORD PTR [rax],eax
   1400208f8:	adc    eax,0x15003054
   1400208fd:	xor    al,0x2e
   1400208ff:	add    BYTE PTR [rip+0xe002a01],dl        # 0x14e023306
   140020905:	ror    BYTE PTR [rax+rsi*2],0xb
   140020909:	(bad)  
   14002090a:	add    BYTE PTR [rax],al
   14002090c:	mov    al,0xa6
   14002090e:	add    BYTE PTR [rax],al
   140020910:	rex add DWORD PTR [rax],eax
   140020913:	add    BYTE PTR [rcx],al
   140020915:	and    DWORD PTR [rdx],ecx
   140020917:	add    BYTE PTR [rcx],ah
   140020919:	or     al,BYTE PTR fs:[rax]
   14002091c:	and    DWORD PTR [rcx+rcx*1+0x0],edx
   140020920:	and    DWORD PTR [rax+rcx*1],esi
   140020923:	add    BYTE PTR [rcx],ah
   140020925:	xor    bl,BYTE PTR [rip+0x19c01bd0]        # 0x159c224fb
   14002092b:	jo     0x14002092e
   14002092d:	sbb    DWORD PTR [rdx],ecx
   14002092f:	add    BYTE PTR [rcx],bl
   140020931:	je     0x140020942
   140020933:	add    BYTE PTR [rcx],bl
   140020935:	fs (bad) 
   140020937:	add    BYTE PTR [rcx],bl
   140020939:	push   rsp
   14002093a:	or     eax,0xc341900
   14002093f:	add    BYTE PTR [rcx],bl
   140020941:	xchg   edx,eax
   140020942:	adc    eax,0xa1701c0
   140020947:	add    BYTE PTR [rdi],dl
   140020949:	push   rsp
   14002094a:	or     eax,0xc341700
   14002094f:	add    BYTE PTR [rdi],dl
   140020951:	push   rdx
   140020952:	adc    esi,eax
   140020954:	adc    eax,esp
   140020956:	(bad)  
   140020958:	or     eax,0x1700bc0
   14002095d:	clts   
   14002095f:	add    BYTE PTR [rdi],cl
   140020961:	or     BYTE PTR fs:[rax],al
   140020964:	sysenter 
   140020966:	(bad)  
   140020967:	add    BYTE PTR [rdi],cl
   140020969:	xor    cl,BYTE PTR [rbx]
   14002096b:	jo     0x14002096e
   14002096d:	sbb    BYTE PTR [rdx],al
   14002096f:	add    BYTE PTR [rax],bl
   140020971:	xor    dl,BYTE PTR [rax+rsi*1]
   140020974:	add    DWORD PTR [rcx+rcx*1],edx
   140020977:	add    BYTE PTR [rdx+riz*4],dl
   14002097a:	or     eax,0x9e00bf0
   14002097f:	rol    BYTE PTR [rdi],1
   140020981:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143620df8
   140020988:	add    dl,BYTE PTR [rax+0x0]
   14002098b:	add    BYTE PTR [rcx],al
   14002098d:	(bad)  
   14002098e:	or     al,BYTE PTR [rax]
   140020990:	(bad)  
   140020991:	xor    al,0x10
   140020993:	add    BYTE PTR [rsi],bl
   140020995:	push   rdx
   140020996:	sbb    dh,al
   140020998:	sbb    al,ah
   14002099a:	(bad)  
   14002099b:	rcl    BYTE PTR [rax+rax*8],1
   14002099e:	adc    dh,BYTE PTR [rax+0x11]
   1400209a1:	(bad)  
   1400209a2:	adc    BYTE PTR [rax+0x19],dl
   1400209a5:	xor    BYTE PTR [rbx],cl
   1400209a7:	add    BYTE PTR [rdi],bl
   1400209a9:	xor    al,0x3f
   1400209ab:	add    BYTE PTR [rdi],bl
   1400209ad:	add    DWORD PTR [rax+rax*1],esi
   1400209b0:	adc    al,dh
   1400209b2:	(bad)  
   1400209b3:	loopne 0x1400209c1
   1400209b5:	ror    BYTE PTR [rdx],1
   1400209b7:	ror    BYTE PTR [rax],0x70
   1400209ba:	(bad)  
   1400209bb:	(bad)  
   1400209bc:	(bad)  
   1400209bd:	push   rax
   1400209be:	add    BYTE PTR [rax],al
   1400209c0:	mov    al,0xa6
   1400209c2:	add    BYTE PTR [rax],al
   1400209c4:	nop
   1400209c5:	add    DWORD PTR [rax],eax
   1400209c7:	add    BYTE PTR [rcx],al
   1400209c9:	(bad)  
   1400209ca:	or     al,BYTE PTR [rax]
   1400209cc:	(bad)  
   1400209cd:	xor    al,0xd
   1400209cf:	add    BYTE PTR [rsi],bl
   1400209d1:	xor    bl,BYTE PTR [rdx]
   1400209d3:	lock sbb al,ah
   1400209d6:	(bad)  
   1400209d7:	rcl    BYTE PTR [rax+rax*8],1
   1400209da:	adc    dh,BYTE PTR [rax+0x11]
   1400209dd:	(bad)  
   1400209de:	adc    BYTE PTR [rax+0x1],dl
   1400209e1:	sbb    al,0xc
   1400209e3:	add    BYTE PTR [rsp+riz*2],bl
   1400209e6:	or     eax,0xc541c00
   1400209eb:	add    BYTE PTR [rsp+rsi*1],bl
   1400209ee:	or     eax,DWORD PTR [rax]
   1400209f0:	sbb    al,0x32
   1400209f2:	sbb    al,dh
   1400209f4:	(bad)  
   1400209f5:	loopne 0x140020a0b
   1400209f7:	rcl    BYTE PTR [rdx],1
   1400209f9:	rcl    BYTE PTR [rax],0x70
   1400209fc:	sbb    DWORD PTR [rcx],esi
   1400209fe:	or     eax,0x37641f00
   140020a03:	add    BYTE PTR [rdi],bl
   140020a05:	push   rsp
   140020a06:	add    BYTE PTR ss:[rdi],bl
   140020a09:	xor    al,0x35
   140020a0b:	add    BYTE PTR [rdi],bl
   140020a0d:	add    DWORD PTR [rsi],ebp
   140020a0f:	add    BYTE PTR [rax],bl
   140020a11:	lock (bad) 
   140020a13:	loopne 0x140020a29
   140020a15:	rcl    BYTE PTR [rdx],1
   140020a17:	rcl    BYTE PTR [rax],0x70
   140020a1a:	add    BYTE PTR [rax],al
   140020a1c:	mov    al,0xa6
   140020a1e:	add    BYTE PTR [rax],al
   140020a20:	(bad)  
   140020a21:	add    DWORD PTR [rax],eax
   140020a23:	add    BYTE PTR [rcx],al
   140020a25:	(bad)  
   140020a26:	or     al,BYTE PTR [rax]
   140020a28:	(bad)  
   140020a29:	(bad)  
   140020a2a:	adc    eax,0x14741e00
   140020a2f:	add    BYTE PTR [rsi],bl
   140020a31:	adc    eax,DWORD PTR fs:[rax]
   140020a34:	(bad)  
   140020a35:	xor    al,0x12
   140020a37:	add    BYTE PTR [rsi],bl
   140020a39:	repnz adc al,0x50
   140020a3c:	sbb    DWORD PTR [rcx],ebp
   140020a3e:	or     BYTE PTR [rax],al
   140020a40:	sbb    BYTE PTR [rcx],al
   140020a42:	jns    0x140020a44
   140020a44:	or     eax,edx
   140020a46:	(bad)  
   140020a47:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143620ebe
   140020a4e:	add    dl,BYTE PTR [rax-0x50]
   140020a51:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140020a52:	add    BYTE PTR [rax],al
   140020a54:	mov    al,0x3
   140020a56:	add    BYTE PTR [rax],al
   140020a58:	add    DWORD PTR [rcx],ebx
   140020a5a:	or     al,BYTE PTR [rax]
   140020a5c:	sbb    DWORD PTR [rdi+rcx*1],esi
   140020a5f:	add    BYTE PTR [rcx],bl
   140020a61:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e21e57
   140020a67:	ror    BYTE PTR [rdi],1
   140020a69:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b6216e0
   140020a70:	add    DWORD PTR [rax],ebx
   140020a72:	or     al,BYTE PTR [rax]
   140020a74:	sbb    BYTE PTR [rbx+rcx*1+0x0],ah
   140020a78:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140020a7c:	sbb    BYTE PTR [rcx+rcx*1],dh
   140020a7f:	add    BYTE PTR [rax],bl
   140020a81:	xor    dl,BYTE PTR [rax+rdx*8]
   140020a84:	adc    al,al
   140020a86:	adc    BYTE PTR [rax+0x1],dh
   140020a89:	(bad)  
   140020a8a:	add    DWORD PTR [rax],eax
   140020a8c:	(bad)  
   140020a8d:	rex.X add BYTE PTR [rax],al
   140020a90:	add    DWORD PTR [rax],edx
   140020a92:	add    eax,DWORD PTR [rax]
   140020a94:	adc    BYTE PTR [rdx+0xc],al
   140020a97:	jo     0x140020aa4
   140020a99:	xor    BYTE PTR [rax],al
   140020a9b:	add    BYTE PTR [rcx],al
   140020a9d:	sbb    al,BYTE PTR [rax+rax*1]
   140020aa0:	sbb    dh,BYTE PTR [rdx]
   140020aa2:	(bad)  
   140020aa3:	jo     0x140020aba
   140020aa5:	(bad)  
   140020aa6:	adc    al,0x30
   140020aa8:	add    DWORD PTR [rdx],esp
   140020aaa:	(bad)  
   140020aab:	add    BYTE PTR [rdx],ah
   140020aad:	movabs ds:0x60167017c019e01b,al
   140020ab6:	adc    eax,0x501430
   140020abb:	add    BYTE PTR [rcx],bl
   140020abd:	or     eax,DWORD PTR cs:[rax]
   140020ac0:	and    BYTE PTR [rdi+rsi*1+0x0],dh
   140020ac4:	and    BYTE PTR [rsi+rsi*1+0x0],ah
   140020ac8:	and    BYTE PTR [rsi*1+0x30012000],dh
   140020acf:	add    BYTE PTR [rax+rdx*8],dl
   140020ad2:	adc    al,al
   140020ad4:	adc    BYTE PTR [rax+0x0],dl
   140020ad7:	add    BYTE PTR [rax+0x700000a6],dh
   140020add:	add    DWORD PTR [rax],eax
   140020adf:	add    BYTE PTR [rcx],bl
   140020ae1:	(bad)  
   140020ae2:	or     eax,0x4b742600
   140020ae7:	add    BYTE PTR [rsi],ah
   140020ae9:	rex.WX add BYTE PTR fs:[rsi],spl
   140020aed:	xor    al,0x49
   140020aef:	add    BYTE PTR [rsi],ah
   140020af1:	add    DWORD PTR [rdx+0x0],eax
   140020af4:	sbb    al,dh
   140020af6:	(bad)  
   140020af7:	loopne 0x140020b0d
   140020af9:	rcl    BYTE PTR [rdx],1
   140020afb:	rcl    BYTE PTR [rax],0x50
   140020afe:	add    BYTE PTR [rax],al
   140020b00:	mov    al,0xa6
   140020b02:	add    BYTE PTR [rax],al
   140020b04:	add    BYTE PTR [rdx],al
   140020b06:	add    BYTE PTR [rax],al
   140020b08:	add    DWORD PTR [rax+rcx*1],edx
   140020b0b:	add    BYTE PTR [rsp+riz*2],dl
   140020b0e:	or     al,0x0
   140020b10:	adc    al,0x54
   140020b12:	or     eax,DWORD PTR [rax]
   140020b14:	adc    al,0x34
   140020b16:	or     al,BYTE PTR [rax]
   140020b18:	adc    al,0x72
   140020b1a:	adc    BYTE PTR [rax+0x1],dh
   140020b1d:	sbb    al,0xc
   140020b1f:	add    BYTE PTR [rsp+riz*2],bl
   140020b22:	adc    al,BYTE PTR [rax]
   140020b24:	sbb    al,0x54
   140020b26:	adc    DWORD PTR [rax],eax
   140020b28:	sbb    al,0x34
   140020b2a:	adc    BYTE PTR [rax],al
   140020b2c:	sbb    al,0x92
   140020b2e:	sbb    al,dh
   140020b30:	(bad)  
   140020b31:	loopne 0x140020b47
   140020b33:	rcl    BYTE PTR [rdx],1
   140020b35:	rcl    BYTE PTR [rax],0x70
   140020b38:	sbb    DWORD PTR [rsi],ebp
   140020b3a:	or     DWORD PTR [rax],eax
   140020b3c:	sbb    eax,0x1d005464
   140020b41:	xor    al,0x53
   140020b43:	add    BYTE PTR [rip+0xe004e01],bl        # 0x14e02594a
   140020b49:	ror    BYTE PTR [rax+rsi*2],0xb
   140020b4d:	push   rax
   140020b4e:	add    BYTE PTR [rax],al
   140020b50:	mov    al,0xa6
   140020b52:	add    BYTE PTR [rax],al
   140020b54:	(bad)  
   140020b55:	add    al,BYTE PTR [rax]
   140020b57:	add    BYTE PTR [rcx],bl
   140020b59:	(bad)  
   140020b5a:	add    eax,0x32340d00
   140020b5f:	add    BYTE PTR [rip+0x6002e01],cl        # 0x146023966
   140020b65:	jo     0x140020b67
   140020b67:	add    BYTE PTR [rax+0x600000a6],dh
   140020b6d:	add    DWORD PTR [rax],eax
   140020b6f:	add    BYTE PTR [rcx],bl
   140020b71:	(bad)  
   140020b72:	add    eax,0x2b340d00
   140020b77:	add    BYTE PTR [rip+0x6002801],cl        # 0x14602337e
   140020b7d:	jo     0x140020b7f
   140020b7f:	add    BYTE PTR [rax+0x300000a6],dh
   140020b85:	add    DWORD PTR [rax],eax
   140020b87:	add    BYTE PTR [rcx],bl
   140020b89:	and    ecx,DWORD PTR [rdx]
   140020b8b:	add    BYTE PTR [rcx+rax*1],dl
   140020b8e:	adc    DWORD PTR [rax],eax
   140020b90:	or     eax,0x9e00bf0
   140020b95:	rol    BYTE PTR [rdi],1
   140020b97:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14362100e
   140020b9e:	add    dh,BYTE PTR [rax]
   140020ba0:	mov    al,0xa6
   140020ba2:	add    BYTE PTR [rax],al
   140020ba4:	js     0x140020ba6
   140020ba6:	add    BYTE PTR [rax],al
   140020ba8:	sbb    DWORD PTR [rbx],ebx
   140020baa:	add    eax,DWORD PTR [rax]
   140020bac:	or     DWORD PTR [rcx],eax
   140020bae:	sub    BYTE PTR [rax],al
   140020bb0:	add    dh,BYTE PTR [rax]
   140020bb2:	add    BYTE PTR [rax],al
   140020bb4:	mov    al,0xa6
   140020bb6:	add    BYTE PTR [rax],al
   140020bb8:	xor    BYTE PTR [rcx],al
   140020bba:	add    BYTE PTR [rax],al
   140020bbc:	sbb    DWORD PTR [rdi+rax*1],esp
   140020bbf:	add    BYTE PTR [rdx],dl
   140020bc1:	fs sub al,0x0
   140020bc4:	adc    dh,BYTE PTR [rbx+rbp*1]
   140020bc7:	add    BYTE PTR [rdx],dl
   140020bc9:	add    DWORD PTR [rax],ebp
   140020bcb:	add    BYTE PTR [rbx],cl
   140020bcd:	jo     0x140020bcf
   140020bcf:	add    BYTE PTR [rax+0x300000a6],dh
   140020bd5:	add    DWORD PTR [rax],eax
   140020bd7:	add    BYTE PTR [rcx],al
   140020bd9:	sbb    eax,0x741d000c
   140020bde:	or     eax,DWORD PTR [rax]
   140020be0:	sbb    eax,0x1d000a64
   140020be5:	push   rsp
   140020be6:	or     DWORD PTR [rax],eax
   140020be8:	sbb    eax,0x1d000834
   140020bed:	xor    bl,BYTE PTR [rcx]
   140020bef:	loopne 0x140020c08
   140020bf1:	rcl    BYTE PTR [rip+0xc1c01c0],1        # 0x14c1e0db7
   140020bf7:	add    BYTE PTR [rsp+riz*2],bl
   140020bfa:	or     al,0x0
   140020bfc:	sbb    al,0x54
   140020bfe:	or     eax,DWORD PTR [rax]
   140020c00:	sbb    al,0x34
   140020c02:	or     al,BYTE PTR [rax]
   140020c04:	sbb    al,0x32
   140020c06:	sbb    al,dh
   140020c08:	(bad)  
   140020c09:	loopne 0x140020c1f
   140020c0b:	rcl    BYTE PTR [rdx],1
   140020c0d:	rcl    BYTE PTR [rax],0x70
   140020c10:	add    DWORD PTR [rcx+rax*1],eax
   140020c13:	add    BYTE PTR [rdx+rax*2],al
   140020c16:	add    BYTE PTR [rax],al
   140020c18:	add    DWORD PTR [rdx+rcx*1],ebx
   140020c1b:	add    BYTE PTR [rsp+rsi*2],bl
   140020c1e:	adc    eax,0x14641c00
   140020c23:	add    BYTE PTR [rsp+rdx*2],bl
   140020c26:	adc    eax,DWORD PTR [rax]
   140020c28:	sbb    al,0x34
   140020c2a:	adc    al,BYTE PTR [rax]
   140020c2c:	sbb    al,0xf2
   140020c2e:	adc    eax,0xa2319c0
   140020c33:	add    BYTE PTR [rsp+rsi*1],dl
   140020c36:	adc    eax,0x10921400
   140020c3b:	lock (bad) 
   140020c3d:	loopne 0x140020c4b
   140020c3f:	ror    BYTE PTR [rdx],1
   140020c41:	ror    BYTE PTR [rax],0x70
   140020c44:	(bad)  
   140020c45:	(bad)  
   140020c46:	(bad)  
   140020c47:	push   rax
   140020c48:	mov    al,0xa6
   140020c4a:	add    BYTE PTR [rax],al
   140020c4c:	rex.W add BYTE PTR [rax],al
   140020c4f:	add    BYTE PTR [rcx],al
   140020c51:	clts   
   140020c53:	add    BYTE PTR [rdi],cl
   140020c55:	xor    al,0xc
   140020c57:	add    BYTE PTR [rdi],cl
   140020c59:	jb     0x140020c63
   140020c5b:	jo     0x140020c64
   140020c5d:	(bad)  
   140020c5e:	(bad)  
   140020c5f:	push   rax
   140020c60:	add    DWORD PTR [rax],ebx
   140020c62:	or     al,BYTE PTR [rax]
   140020c64:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   140020c68:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140020c6c:	sbb    BYTE PTR [rax+rcx*1],dh
   140020c6f:	add    BYTE PTR [rax],bl
   140020c71:	xor    dl,BYTE PTR [rax+rdx*8]
   140020c74:	adc    al,al
   140020c76:	adc    BYTE PTR [rax+0x1],dh
   140020c79:	(bad)  
   140020c7a:	or     DWORD PTR [rax],eax
   140020c7c:	(bad)  
   140020c7d:	movabs ds:0xc00ad00ce00ef010,al
   140020c86:	or     BYTE PTR [rax+0x7],dh
   140020c89:	(bad)  
   140020c8a:	(bad)  
   140020c8b:	xor    BYTE PTR [rip+0x1000050],al        # 0x141020ce1
   140020c91:	(bad)  
   140020c92:	add    al,BYTE PTR [rax]
   140020c94:	(bad)  
   140020c95:	xor    al,BYTE PTR [rdx]
   140020c97:	xor    BYTE PTR [rcx],al
   140020c99:	adc    DWORD PTR [rcx],ecx
   140020c9b:	add    BYTE PTR [rcx],dl
   140020c9d:	(bad)  
   140020c9e:	or     eax,0x9e00bf0
   140020ca3:	rol    BYTE PTR [rdi],1
   140020ca5:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14362111c
   140020cac:	add    dh,BYTE PTR [rax]
   140020cae:	add    BYTE PTR [rax],al
   140020cb0:	sbb    DWORD PTR [rdx],ebp
   140020cb2:	or     eax,DWORD PTR [rax]
   140020cb4:	sbb    al,0x34
   140020cb6:	sbb    al,0x0
   140020cb8:	sbb    al,0x1
   140020cba:	adc    al,0x0
   140020cbc:	adc    al,dh
   140020cbe:	(bad)  
   140020cbf:	loopne 0x140020ccd
   140020cc1:	ror    BYTE PTR [rdx],1
   140020cc3:	ror    BYTE PTR [rax],0x70
   140020cc6:	(bad)  
   140020cc7:	(bad)  
   140020cc8:	(bad)  
   140020cc9:	push   rax
   140020cca:	add    BYTE PTR [rax],al
   140020ccc:	mov    al,0xa6
   140020cce:	add    BYTE PTR [rax],al
   140020cd0:	cwde   
   140020cd1:	add    BYTE PTR [rax],al
   140020cd3:	add    BYTE PTR [rcx],al
   140020cd5:	add    eax,0x74050002
   140020cda:	add    DWORD PTR [rax],eax
   140020cdc:	add    DWORD PTR [rdi],ecx
   140020cde:	(bad)  
   140020cdf:	add    BYTE PTR [rdi],cl
   140020ce1:	je     0x140020ce6
   140020ce3:	add    BYTE PTR [rdx],cl
   140020ce5:	add    al,BYTE PTR fs:[rax]
   140020ce8:	add    eax,0x1000134
   140020ced:	(bad)  
   140020cef:	add    BYTE PTR [rdi],cl
   140020cf1:	xor    al,0x6
   140020cf3:	add    BYTE PTR [rdi],cl
   140020cf5:	xor    cl,BYTE PTR [rbx]
   140020cf7:	jo     0x140020d0a
   140020cf9:	sbb    al,0xa
   140020cfb:	add    BYTE PTR [rsp+riz*2],bl
   140020cfe:	ltr    WORD PTR [rsp+rsi*1]
   140020d02:	(bad)  
   140020d03:	add    BYTE PTR [rdx+rsi*2],bl
   140020d06:	sbb    al,dh
   140020d08:	(bad)  
   140020d09:	loopne 0x140020d1f
   140020d0b:	rcl    BYTE PTR [rdx],1
   140020d0d:	rcl    BYTE PTR [rax],0x70
   140020d10:	and    al,0xd7
   140020d12:	add    BYTE PTR [rax],al
   140020d14:	add    DWORD PTR [rax],eax
   140020d16:	add    BYTE PTR [rax],al
   140020d18:	jnp    0x140020cb4
   140020d1a:	add    BYTE PTR [rax],al
   140020d1c:	mov    DWORD PTR [rbx-0x66300000],ebx
   140020d22:	add    DWORD PTR [rax],eax
   140020d24:	add    BYTE PTR [rax],al
   140020d26:	add    BYTE PTR [rax],al
   140020d28:	adc    DWORD PTR [rcx],ebx
   140020d2a:	add    eax,DWORD PTR [rax]
   140020d2c:	sbb    DWORD PTR [rdx+0x15],eax
   140020d2f:	jo     0x140020d45
   140020d31:	xor    BYTE PTR [rax],al
   140020d33:	add    BYTE PTR [rdi+rdx*8],ah
   140020d36:	add    BYTE PTR [rax],al
   140020d38:	add    DWORD PTR [rax],eax
   140020d3a:	add    BYTE PTR [rax],al
   140020d3c:	(bad)  
   140020d3d:	pushf  
   140020d3e:	add    BYTE PTR [rax],al
   140020d40:	retf   
   140020d41:	pushf  
   140020d42:	add    BYTE PTR [rax],al
   140020d44:	hlt    
   140020d45:	cdq    
   140020d46:	add    DWORD PTR [rax],eax
   140020d48:	add    BYTE PTR [rax],al
   140020d4a:	add    BYTE PTR [rax],al
   140020d4c:	adc    DWORD PTR [rsi],eax
   140020d4e:	add    al,BYTE PTR [rax]
   140020d50:	(bad)  
   140020d51:	xor    al,BYTE PTR [rdx]
   140020d53:	xor    BYTE PTR [rdi+rdx*8],ah
   140020d56:	add    BYTE PTR [rax],al
   140020d58:	add    DWORD PTR [rax],eax
   140020d5a:	add    BYTE PTR [rax],al
   140020d5c:	icebp  
   140020d5d:	popf   
   140020d5e:	add    BYTE PTR [rax],al
   140020d60:	cld    
   140020d61:	popf   
   140020d62:	add    BYTE PTR [rax],al
   140020d64:	add    ebx,DWORD PTR [rbx+0x1]
   140020d6a:	add    BYTE PTR [rax],al
   140020d6c:	or     DWORD PTR [rip+0x340d0005],ecx        # 0x1740f0d77
   140020d72:	(bad)  
   140020d73:	add    BYTE PTR [rip+0x6001401],cl        # 0x14602217a
   140020d79:	jo     0x140020d7b
   140020d7b:	add    BYTE PTR [rdi+rdx*8],ah
   140020d7e:	add    BYTE PTR [rax],al
   140020d80:	add    DWORD PTR [rax],eax
   140020d82:	add    BYTE PTR [rax],al
   140020d84:	xlat   BYTE PTR ds:[rbx]
   140020d85:	sahf   
   140020d86:	add    BYTE PTR [rax],al
   140020d88:	jl     0x140020d29
   140020d8a:	add    BYTE PTR [rax],al
   140020d8c:	(bad)  
   140020d8d:	fwait
   140020d8e:	add    DWORD PTR [rax],eax
   140020d90:	jl     0x140020d31
   140020d92:	add    BYTE PTR [rax],al
   140020d94:	add    BYTE PTR [rax],al
   140020d96:	add    BYTE PTR [rax],al
   140020d98:	add    DWORD PTR [rax],eax
   140020d9a:	add    BYTE PTR [rax],al
   140020d9c:	add    DWORD PTR [rbx],edx
   140020d9e:	add    DWORD PTR [rax],eax
   140020da0:	adc    esp,DWORD PTR [rdx+0x0]
   140020da3:	add    BYTE PTR [rax],al
   140020da5:	add    BYTE PTR [rax],al
   140020da7:	add    BYTE PTR [rcx],al
   140020da9:	add    BYTE PTR [rax],al
   140020dab:	add    BYTE PTR [rcx],al
   140020dad:	sbb    DWORD PTR [rax+rax*1],eax
   140020db0:	sbb    DWORD PTR [rdx+0x30117012],edx
   140020db6:	adc    BYTE PTR [rax+0x1],dl
   140020db9:	add    BYTE PTR [rax],al
   140020dbb:	add    BYTE PTR [rax],al
   140020dbd:	add    BYTE PTR [rax],al
   140020dbf:	add    BYTE PTR [rcx],al
   140020dc1:	add    BYTE PTR [rax],al
   140020dc3:	add    BYTE PTR [rcx],al
   140020dc5:	add    BYTE PTR [rax],al
   140020dc7:	add    BYTE PTR [rcx],al
   140020dc9:	add    BYTE PTR [rax],al
   140020dcb:	add    BYTE PTR [rax],al
   140020dcd:	add    BYTE PTR [rax],al
   140020dcf:	add    BYTE PTR [rcx],al
   140020dd1:	add    BYTE PTR [rax],al
   140020dd3:	add    BYTE PTR [rcx],dl
   140020dd5:	sbb    al,0x5
   140020dd7:	add    BYTE PTR [rdx+rax*2],bl
   140020dda:	sbb    al,al
   140020ddc:	(bad)  
   140020ddd:	jo     0x140020df4
   140020ddf:	(bad)  
   140020de0:	adc    al,0x30
   140020de2:	add    BYTE PTR [rax],al
   140020de4:	and    al,0xd7
   140020de6:	add    BYTE PTR [rax],al
   140020de8:	add    DWORD PTR [rax],eax
   140020dea:	add    BYTE PTR [rax],al
   140020dec:	mov    WORD PTR [rcx-0x55b60000],gs
   140020df2:	add    BYTE PTR [rax],al
   140020df4:	sbb    ebx,DWORD PTR [rdx+0x1]
   140020dfa:	add    BYTE PTR [rax],al
   140020dfc:	adc    DWORD PTR [rip+0x741d000a],ebx        # 0x1b41f0e0c
   140020e02:	or     eax,DWORD PTR [rax]
   140020e04:	sbb    eax,0x1d000a64
   140020e09:	xor    al,0x8
   140020e0b:	add    BYTE PTR [rip+0x17e01932],bl        # 0x157e22743
   140020e11:	rcl    BYTE PTR [rip+0xd724c0],1        # 0x140d932d7
   140020e17:	add    BYTE PTR [rcx],al
   140020e19:	add    BYTE PTR [rax],al
   140020e1b:	add    ah,al
   140020e1d:	stos   BYTE PTR es:[rdi],al
   140020e1e:	add    BYTE PTR [rax],al
   140020e20:	sub    BYTE PTR [rbx-0x657c0000],0x1
   140020e27:	add    BYTE PTR [rax],al
   140020e29:	add    BYTE PTR [rax],al
   140020e2b:	add    BYTE PTR [rcx],al
   140020e2d:	add    al,0x1
   140020e2f:	add    BYTE PTR [rdx+riz*2],al
   140020e32:	add    BYTE PTR [rax],al
   140020e34:	adc    DWORD PTR [rdi],ecx
   140020e36:	add    al,0x0
   140020e38:	sysenter 
   140020e3a:	(bad)  
   140020e3b:	add    BYTE PTR [rdi],cl
   140020e3d:	xor    cl,BYTE PTR [rbx]
   140020e3f:	jo     0x140020e65
   140020e41:	xlat   BYTE PTR ds:[rbx]
   140020e42:	add    BYTE PTR [rax],al
   140020e44:	add    DWORD PTR [rax],eax
   140020e46:	add    BYTE PTR [rax],al
   140020e48:	lahf   
   140020e49:	scas   al,BYTE PTR es:[rdi]
   140020e4a:	add    BYTE PTR [rax],al
   140020e4c:	test   eax,0xe90000ae
   140020e51:	(bad)  
   140020e52:	add    DWORD PTR [rax],eax
   140020e54:	add    BYTE PTR [rax],al
   140020e56:	add    BYTE PTR [rax],al
   140020e58:	sbb    DWORD PTR [rbx],edx
   140020e5a:	add    DWORD PTR [rax],eax
   140020e5c:	add    al,0x62
   140020e5e:	add    BYTE PTR [rax],al
   140020e60:	mov    al,0xa6
   140020e62:	add    BYTE PTR [rax],al
   140020e64:	and    BYTE PTR [rax],al
   140020e66:	add    BYTE PTR [rax],al
   140020e68:	adc    DWORD PTR [rsi+rax*1],ecx
   140020e6b:	add    BYTE PTR [rdx+rdx*2],cl
   140020e6e:	or     al,dl
   140020e70:	(bad)  
   140020e71:	rol    BYTE PTR [rax+rsi*2],0x3
   140020e75:	(bad)  
   140020e76:	add    dh,BYTE PTR [rax]
   140020e78:	and    al,0xd7
   140020e7a:	add    BYTE PTR [rax],al
   140020e7c:	add    DWORD PTR [rax],eax
   140020e7e:	add    BYTE PTR [rax],al
   140020e80:	imul   esi,DWORD PTR [rax-0x4ea80000],0x0
   140020e87:	add    BYTE PTR [rip+0x19a],dh        # 0x140021027
   140020e8d:	add    BYTE PTR [rax],al
   140020e8f:	add    BYTE PTR [rcx],dl
   140020e91:	adc    eax,0x74150008
   140020e96:	or     eax,DWORD PTR [rax]
   140020e98:	adc    eax,0x15000a64
   140020e9d:	xor    al,0x9
   140020e9f:	add    BYTE PTR [rip+0x24c01152],dl        # 0x164c21ff7
   140020ea5:	xlat   BYTE PTR ds:[rbx]
   140020ea6:	add    BYTE PTR [rax],al
   140020ea8:	add    al,BYTE PTR [rax]
   140020eaa:	add    BYTE PTR [rax],al
   140020eac:	jmp    0x14b020f62
   140020eb1:	mov    dl,0x0
   140020eb3:	add    BYTE PTR [rdi-0x66],cl
   140020eb6:	add    DWORD PTR [rax],eax
   140020eb8:	add    BYTE PTR [rax],al
   140020eba:	add    BYTE PTR [rax],al
   140020ebc:	adc    BYTE PTR [rdx-0x4ddc0000],dh
   140020ec2:	add    BYTE PTR [rax],al
   140020ec4:	rex.WRXB (bad) 
   140020ec6:	add    DWORD PTR [rax],eax
   140020ec8:	add    BYTE PTR [rax],al
   140020eca:	add    BYTE PTR [rax],al
   140020ecc:	adc    DWORD PTR [rdx],ecx
   140020ece:	add    al,0x0
   140020ed0:	or     dh,BYTE PTR [rsi+rax*1]
   140020ed3:	add    BYTE PTR [rdx],cl
   140020ed5:	xor    al,BYTE PTR [rsi]
   140020ed7:	jo     0x140020efd
   140020ed9:	xlat   BYTE PTR ds:[rbx]
   140020eda:	add    BYTE PTR [rax],al
   140020edc:	add    DWORD PTR [rax],eax
   140020ede:	add    BYTE PTR [rax],al
   140020ee0:	outs   dx,BYTE PTR ds:[rsi]
   140020ee1:	mov    dl,0x0
   140020ee3:	add    bh,ch
   140020ee5:	mov    dl,0x0
   140020ee7:	add    BYTE PTR [rcx-0x66],ch
   140020eea:	add    DWORD PTR [rax],eax
   140020eec:	add    BYTE PTR [rax],al
   140020eee:	add    BYTE PTR [rax],al
   140020ef0:	add    DWORD PTR [rdx],ecx
   140020ef2:	add    al,BYTE PTR [rax]
   140020ef4:	or     dh,BYTE PTR [rdx]
   140020ef6:	(bad)  
   140020ef7:	xor    BYTE PTR [rcx],dl
   140020ef9:	sbb    DWORD PTR [rdx],ecx
   140020efb:	add    BYTE PTR [rcx],bl
   140020efd:	je     0x140020f0a
   140020eff:	add    BYTE PTR [rcx],bl
   140020f01:	or     al,BYTE PTR fs:[rax]
   140020f04:	sbb    DWORD PTR [rax+rcx*1],esi
   140020f07:	add    BYTE PTR [rcx],bl
   140020f09:	xor    dl,BYTE PTR [rip+0x11d013e0]        # 0x151d222ef
   140020f0f:	shl    BYTE PTR [rdi+rdx*8],0x0
   140020f13:	add    BYTE PTR [rcx],al
   140020f15:	add    BYTE PTR [rax],al
   140020f17:	add    BYTE PTR [rip+0x530000b5],ch        # 0x193020fd2
   140020f1d:	mov    ch,0x0
   140020f1f:	add    BYTE PTR [rdx+rbx*4+0x1],al
   140020f26:	add    BYTE PTR [rax],al
   140020f28:	add    DWORD PTR [rax],eax
   140020f2a:	add    BYTE PTR [rax],al
   140020f2c:	sbb    DWORD PTR [rax],esi
   140020f2e:	or     eax,DWORD PTR [rax]
   140020f30:	(bad)  
   140020f31:	xor    al,0x62
   140020f33:	add    BYTE PTR [rdi],bl
   140020f35:	add    DWORD PTR [rax+0x0],ebx
   140020f38:	adc    al,dh
   140020f3a:	(bad)  
   140020f3b:	loopne 0x140020f49
   140020f3d:	ror    BYTE PTR [rdx],1
   140020f3f:	ror    BYTE PTR [rax],0x70
   140020f42:	(bad)  
   140020f43:	(bad)  
   140020f44:	(bad)  
   140020f45:	push   rax
   140020f46:	add    BYTE PTR [rax],al
   140020f48:	mov    al,0xa6
   140020f4a:	add    BYTE PTR [rax],al
   140020f4c:	mov    al,0x2
   140020f4e:	add    BYTE PTR [rax],al
   140020f50:	add    DWORD PTR [rdx],ecx
   140020f52:	add    al,0x0
   140020f54:	or     dh,BYTE PTR [rax+rcx*1]
   140020f57:	add    BYTE PTR [rdx],cl
   140020f59:	push   rdx
   140020f5a:	(bad)  
   140020f5b:	jo     0x140020f6e
   140020f5d:	sbb    DWORD PTR [rdx],ecx
   140020f5f:	add    BYTE PTR [rcx],bl
   140020f61:	je     0x140020f6f
   140020f63:	add    BYTE PTR [rcx],bl
   140020f65:	or     eax,DWORD PTR fs:[rax]
   140020f68:	sbb    DWORD PTR [rdx+rcx*1],esi
   140020f6b:	add    BYTE PTR [rcx],bl
   140020f6d:	push   rdx
   140020f6e:	adc    eax,0x11d013f0
   140020f73:	shl    BYTE PTR [rdi+rdx*8],0x0
   140020f77:	add    BYTE PTR [rdx],al
   140020f79:	add    BYTE PTR [rax],al
   140020f7b:	add    BYTE PTR [rdx-0x19ffff41],ah
   140020f81:	mov    edi,0x9a9e0000
   140020f86:	add    DWORD PTR [rax],eax
   140020f88:	add    BYTE PTR [rax],al
   140020f8a:	add    BYTE PTR [rax],al
   140020f8c:	imul   edi,DWORD PTR [rdi-0x40010000],0x9ace0000
   140020f96:	add    DWORD PTR [rax],eax
   140020f98:	add    BYTE PTR [rax],al
   140020f9a:	add    BYTE PTR [rax],al
   140020f9c:	adc    DWORD PTR [rdi],ecx
   140020f9e:	add    al,0x0
   140020fa0:	sysenter 
   140020fa2:	(bad)  
   140020fa3:	add    BYTE PTR [rdi],cl
   140020fa5:	xor    cl,BYTE PTR [rbx]
   140020fa7:	jo     0x140020fcd
   140020fa9:	xlat   BYTE PTR ds:[rbx]
   140020faa:	add    BYTE PTR [rax],al
   140020fac:	add    DWORD PTR [rax],eax
   140020fae:	add    BYTE PTR [rax],al
   140020fb0:	push   rax
   140020fb1:	rol    BYTE PTR [rax],0x0
   140020fb4:	pop    rdx
   140020fb5:	rol    BYTE PTR [rax],0x0
   140020fb8:	jmp    0x140021157
   140020fbd:	add    BYTE PTR [rax],al
   140020fbf:	add    BYTE PTR [rcx],al
   140020fc1:	adc    ecx,DWORD PTR [rax]
   140020fc3:	add    BYTE PTR [rbx],dl
   140020fc5:	xor    al,0xc
   140020fc7:	add    BYTE PTR [rbx],dl
   140020fc9:	push   rdx
   140020fca:	or     al,0xe0
   140020fcc:	or     al,al
   140020fce:	or     BYTE PTR [rax+0x7],dh
   140020fd1:	(bad)  
   140020fd2:	(bad)  
   140020fd3:	push   rax
   140020fd4:	adc    DWORD PTR [rsi],eax
   140020fd6:	add    al,BYTE PTR [rax]
   140020fd8:	(bad)  
   140020fd9:	xor    al,BYTE PTR [rdx]
   140020fdb:	xor    BYTE PTR [rdi+rdx*8],ah
   140020fde:	add    BYTE PTR [rax],al
   140020fe0:	add    DWORD PTR [rax],eax
   140020fe2:	add    BYTE PTR [rax],al
   140020fe4:	sub    al,0xc3
   140020fe6:	add    BYTE PTR [rax],al
   140020fe8:	cmp    bl,al
   140020fea:	add    BYTE PTR [rax],al
   140020fec:	add    ebx,DWORD PTR [rbx+0x1]
   140020ff2:	add    BYTE PTR [rax],al
   140020ff4:	add    DWORD PTR [rsi],eax
   140020ff6:	add    al,BYTE PTR [rax]
   140020ff8:	(bad)  
   140020ff9:	xor    al,BYTE PTR [rdx]
   140020ffb:	push   rax
   140020ffc:	or     DWORD PTR [rcx+rax*1],eax
   140020fff:	add    BYTE PTR [rdx+rax*2],al
   140021002:	add    BYTE PTR [rax],al
   140021004:	and    al,0xd7
   140021006:	add    BYTE PTR [rax],al
   140021008:	add    DWORD PTR [rax],eax
   14002100a:	add    BYTE PTR [rax],al
   14002100c:	(bad)  
   14002100d:	(bad)  
   14002100e:	add    BYTE PTR [rax],al
   140021010:	and    eax,esp
   140021012:	add    BYTE PTR [rax],al
   140021014:	(bad)  
   140021015:	fwait
   140021016:	add    DWORD PTR [rax],eax
   140021018:	and    eax,esp
   14002101a:	add    BYTE PTR [rax],al
   14002101c:	add    DWORD PTR [rax],ebx
   14002101e:	or     al,BYTE PTR [rax]
   140021020:	sbb    BYTE PTR [rbp+rcx*1+0x0],ah
   140021024:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   140021028:	sbb    BYTE PTR [rdx+rcx*1],dh
   14002102b:	add    BYTE PTR [rax],bl
   14002102d:	push   rdx
   14002102e:	adc    al,0xd0
   140021030:	adc    al,al
   140021032:	adc    BYTE PTR [rax+0x0],dh
   140021035:	add    BYTE PTR [rax],al
   140021037:	add    BYTE PTR [rcx],al
   140021039:	add    BYTE PTR [rax],al
   14002103b:	add    BYTE PTR [rcx],al
   14002103d:	(bad)  
   14002103e:	add    al,BYTE PTR [rax]
   140021040:	(bad)  
   140021041:	jb     0x140021045
   140021043:	xor    BYTE PTR [rcx],al
   140021045:	adc    eax,0x74150008
   14002104a:	or     BYTE PTR [rax],al
   14002104c:	adc    eax,0x15000764
   140021051:	xor    al,0x6
   140021053:	add    BYTE PTR [rip+0x11c01132],dl        # 0x151c2218b
   140021059:	adc    eax,0x74150008
   14002105e:	or     BYTE PTR [rax],al
   140021060:	adc    eax,0x15000764
   140021065:	xor    al,0x6
   140021067:	add    BYTE PTR [rip+0x24d01132],dl        # 0x164d2219f
   14002106d:	xlat   BYTE PTR ds:[rbx]
   14002106e:	add    BYTE PTR [rax],al
   140021070:	add    DWORD PTR [rax],eax
   140021072:	add    BYTE PTR [rax],al
   140021074:	repz retf 0x0
   140021078:	xor    ebx,ecx
   14002107a:	add    BYTE PTR [rax],al
   14002107c:	cmp    al,0x9b
   14002107e:	add    DWORD PTR [rax],eax
   140021080:	add    BYTE PTR [rax],al
   140021082:	add    BYTE PTR [rax],al
   140021084:	or     DWORD PTR [rcx+rax*1],eax
   140021087:	add    BYTE PTR [rdx+rax*2],al
   14002108a:	add    BYTE PTR [rax],al
   14002108c:	and    al,0xd7
   14002108e:	add    BYTE PTR [rax],al
   140021090:	add    DWORD PTR [rax],eax
   140021092:	add    BYTE PTR [rax],al
   140021094:	mov    cl,0xcb
   140021096:	add    BYTE PTR [rax],al
   140021098:	mov    ch,0xcb
   14002109a:	add    BYTE PTR [rax],al
   14002109c:	add    DWORD PTR [rax],eax
   14002109e:	add    BYTE PTR [rax],al
   1400210a0:	mov    ch,0xcb
   1400210a2:	add    BYTE PTR [rax],al
   1400210a4:	adc    DWORD PTR [rdi],edx
   1400210a6:	or     al,BYTE PTR [rax]
   1400210a8:	(bad)  
   1400210a9:	fs (bad) 
   1400210ab:	add    BYTE PTR [rdi],dl
   1400210ad:	xor    al,0xd
   1400210af:	add    BYTE PTR [rdi],dl
   1400210b1:	push   rdx
   1400210b2:	adc    esi,eax
   1400210b4:	adc    eax,esp
   1400210b6:	(bad)  
   1400210b8:	or     eax,0x24700bc0
   1400210bd:	xlat   BYTE PTR ds:[rbx]
   1400210be:	add    BYTE PTR [rax],al
   1400210c0:	add    DWORD PTR [rax],eax
   1400210c2:	add    BYTE PTR [rax],al
   1400210c4:	rex.WB int 0x0
   1400210c7:	add    bh,dl
   1400210c9:	int    0x0
   1400210cb:	add    BYTE PTR [rdx-0x65],bl
   1400210ce:	add    DWORD PTR [rax],eax
   1400210d0:	add    BYTE PTR [rax],al
   1400210d2:	add    BYTE PTR [rax],al
   1400210d4:	sbb    DWORD PTR [rsi],ebp
   1400210d6:	or     DWORD PTR [rax],eax
   1400210d8:	sbb    eax,0x1d00c464
   1400210dd:	xor    al,0xc3
   1400210df:	add    BYTE PTR [rip+0xe00be01],bl        # 0x14e02cee6
   1400210e5:	ror    BYTE PTR [rax+rsi*2],0xb
   1400210e9:	push   rax
   1400210ea:	add    BYTE PTR [rax],al
   1400210ec:	mov    al,0xa6
   1400210ee:	add    BYTE PTR [rax],al
   1400210f0:	loopne 0x1400210f7
   1400210f2:	add    BYTE PTR [rax],al
   1400210f4:	add    DWORD PTR [rax+rcx*1],edx
   1400210f7:	add    BYTE PTR [rsp+riz*2],dl
   1400210fa:	or     al,BYTE PTR [rax]
   1400210fc:	adc    al,0x54
   1400210fe:	or     DWORD PTR [rax],eax
   140021100:	adc    al,0x34
   140021102:	or     BYTE PTR [rax],al
   140021104:	adc    al,0x52
   140021106:	adc    BYTE PTR [rax+0x11],dh
   140021109:	or     al,BYTE PTR [rax+rax*1]
   14002110c:	or     dh,BYTE PTR [rsi+rax*1]
   14002110f:	add    BYTE PTR [rdx],cl
   140021111:	xor    al,BYTE PTR [rsi]
   140021113:	jo     0x140021139
   140021115:	xlat   BYTE PTR ds:[rbx]
   140021116:	add    BYTE PTR [rax],al
   140021118:	add    al,BYTE PTR [rax]
   14002111a:	add    BYTE PTR [rax],al
   14002111c:	push   rdx
   14002111d:	rol    DWORD PTR [rax],1
   14002111f:	add    BYTE PTR [rcx+rdx*8+0x0],bl
   140021123:	add    BYTE PTR [rax-0x65],bh
   140021126:	add    DWORD PTR [rax],eax
   140021128:	add    BYTE PTR [rax],al
   14002112a:	add    BYTE PTR [rax],al
   14002112c:	jno    0x1400210ff
   14002112e:	add    BYTE PTR [rax],al
   140021130:	cwde   
   140021131:	rol    DWORD PTR [rax],1
   140021133:	add    BYTE PTR [rax+0x19b],bl
   140021139:	add    BYTE PTR [rax],al
   14002113b:	add    BYTE PTR [rcx],dl
   14002113d:	adc    eax,DWORD PTR [rax+rax*1]
   140021140:	adc    esi,DWORD PTR [rdi+rax*1]
   140021143:	add    BYTE PTR [rbx],dl
   140021145:	xor    cl,BYTE PTR [rdi]
   140021147:	jo     0x14002116d
   140021149:	xlat   BYTE PTR ds:[rbx]
   14002114a:	add    BYTE PTR [rax],al
   14002114c:	add    al,BYTE PTR [rax]
   14002114e:	add    BYTE PTR [rax],al
   140021150:	clc    
   140021151:	rol    BYTE PTR [rax],cl
   140021153:	add    BYTE PTR [rip+0x780000d3],ah        # 0x1b802122c
   140021159:	fwait
   14002115a:	add    DWORD PTR [rax],eax
   14002115c:	add    BYTE PTR [rax],al
   14002115e:	add    BYTE PTR [rax],al
   140021160:	(bad)  
   140021161:	rol    DWORD PTR [rax],cl
   140021163:	add    BYTE PTR [rsi-0x2d],ch
   140021166:	add    BYTE PTR [rax],al
   140021168:	cwde   
   140021169:	fwait
   14002116a:	add    DWORD PTR [rax],eax
   14002116c:	add    BYTE PTR [rax],al
   14002116e:	add    BYTE PTR [rax],al
   140021170:	adc    DWORD PTR [rcx],ebx
   140021172:	or     al,BYTE PTR [rax]
   140021174:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140021178:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   14002117c:	sbb    DWORD PTR [rax+rcx*1],esi
   14002117f:	add    BYTE PTR [rcx],bl
   140021181:	xor    dl,BYTE PTR [rip+0x11d013e0]        # 0x151d22567
   140021187:	shl    BYTE PTR [rdi+rdx*8],0x0
   14002118b:	add    BYTE PTR [rcx],al
   14002118d:	add    BYTE PTR [rax],al
   14002118f:	add    BYTE PTR [rsi+0x7c0000d4],dh
   140021195:	(bad)  
   140021196:	add    BYTE PTR [rax],al
   140021198:	mov    bl,0x9b
   14002119a:	add    DWORD PTR [rax],eax
   14002119c:	add    BYTE PTR [rax],al
   14002119e:	add    BYTE PTR [rax],al
   1400211a0:	or     DWORD PTR [rcx+rax*1],eax
   1400211a3:	add    BYTE PTR [rdx+rax*2],al
   1400211a6:	add    BYTE PTR [rax],al
   1400211a8:	and    al,0xd7
   1400211aa:	add    BYTE PTR [rax],al
   1400211ac:	add    DWORD PTR [rax],eax
   1400211ae:	add    BYTE PTR [rax],al
   1400211b0:	out    0xd6,eax
   1400211b2:	add    BYTE PTR [rax],al
   1400211b4:	sbb    dl,bh
   1400211b6:	add    BYTE PTR [rax],al
   1400211b8:	rcr    BYTE PTR [rbx-0x28e5ffff],1
   1400211be:	add    BYTE PTR [rax],al
   1400211c0:	add    DWORD PTR [rax],esp
   1400211c2:	or     al,0x0
   1400211c4:	and    BYTE PTR [rcx+rdx*1+0x0],ah
   1400211c8:	and    BYTE PTR [rax+rdx*1+0x0],dl
   1400211cc:	and    BYTE PTR [rsi+rcx*1],dh
   1400211cf:	add    BYTE PTR [rax],ah
   1400211d1:	jb     0x1400211ef
   1400211d3:	lock sbb ah,al
   1400211d6:	sbb    al,dl
   1400211d8:	(bad)  
   1400211d9:	rcl    BYTE PTR [rax+rsi*2],0x19
   1400211dd:	sub    eax,0x641b000b
   1400211e2:	push   rcx
   1400211e3:	add    BYTE PTR [rbx],bl
   1400211e5:	push   rsp
   1400211e6:	push   rax
   1400211e7:	add    BYTE PTR [rbx],bl
   1400211e9:	xor    al,0x4f
   1400211eb:	add    BYTE PTR [rbx],bl
   1400211ed:	add    DWORD PTR [rdx+0x0],ecx
   1400211f0:	adc    al,0xd0
   1400211f2:	adc    al,al
   1400211f4:	adc    BYTE PTR [rax+0x0],dh
   1400211f7:	add    BYTE PTR [rax+0x400000a6],dh
   1400211fd:	add    al,BYTE PTR [rax]
   1400211ff:	add    BYTE PTR [rcx],al
   140021201:	adc    BYTE PTR [rsi],al
   140021203:	add    BYTE PTR [rax],dl
   140021205:	je     0x14002120e
   140021207:	add    BYTE PTR [rax],dl
   140021209:	xor    al,0x6
   14002120b:	add    BYTE PTR [rax],dl
   14002120d:	xor    cl,BYTE PTR [rax+rax*8]
   140021210:	add    DWORD PTR [rcx],ecx
   140021212:	add    al,BYTE PTR [rax]
   140021214:	or     DWORD PTR [rdx],esi
   140021216:	add    eax,0x8180130
   14002121b:	add    BYTE PTR [rax],bl
   14002121d:	or     BYTE PTR fs:[rax],al
   140021220:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   140021224:	sbb    BYTE PTR [rsi+rax*1],dh
   140021227:	add    BYTE PTR [rax],bl
   140021229:	xor    dl,BYTE PTR [rax+rsi*2]
   14002122c:	sbb    DWORD PTR [rax],esi
   14002122e:	or     eax,DWORD PTR [rax]
   140021230:	(bad)  
   140021231:	xor    al,0x64
   140021233:	add    BYTE PTR [rdi],bl
   140021235:	add    DWORD PTR [rdx+0x0],ebx
   140021238:	adc    al,dh
   14002123a:	(bad)  
   14002123b:	loopne 0x140021249
   14002123d:	ror    BYTE PTR [rdx],1
   14002123f:	ror    BYTE PTR [rax],0x70
   140021242:	(bad)  
   140021243:	(bad)  
   140021244:	(bad)  
   140021245:	push   rax
   140021246:	add    BYTE PTR [rax],al
   140021248:	mov    al,0xa6
   14002124a:	add    BYTE PTR [rax],al
   14002124c:	enter  0x2,0x0
   140021250:	add    DWORD PTR [rbx],ebx
   140021252:	or     al,BYTE PTR [rax]
   140021254:	sbb    eax,esp
   140021256:	adc    DWORD PTR [rax],eax
   140021258:	sbb    esi,DWORD PTR [rax+rdx*1+0x0]
   14002125c:	sbb    esp,DWORD PTR [rdi+rcx*1+0x0]
   140021260:	sbb    esi,DWORD PTR [rsi+rcx*1]
   140021263:	add    BYTE PTR [rbx],bl
   140021265:	mov    dl,0x14
   140021267:	push   rax
   140021268:	add    DWORD PTR [rdi],ecx
   14002126a:	(bad)  
   14002126b:	add    BYTE PTR [rdi],cl
   14002126d:	push   rsp
   14002126e:	or     al,0x0
   140021270:	sysenter 
   140021272:	or     eax,DWORD PTR [rax]
   140021274:	(bad)  
   140021276:	or     esi,DWORD PTR [rax+0x1]
   140021279:	adc    al,0x8
   14002127b:	add    BYTE PTR [rsp+riz*2],dl
   14002127e:	or     BYTE PTR [rax],al
   140021280:	adc    al,0x54
   140021282:	(bad)  
   140021283:	add    BYTE PTR [rsp+rsi*1],dl
   140021286:	(bad)  
   140021287:	add    BYTE PTR [rdx+rsi*1],dl
   14002128a:	adc    BYTE PTR [rax+0x1],dh
   14002128d:	clts   
   14002128f:	add    BYTE PTR [rdi],cl
   140021291:	or     eax,DWORD PTR fs:[rax]
   140021294:	sysenter 
   140021296:	or     al,BYTE PTR [rax]
   140021298:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14002129b:	jo     0x14002129e
   14002129d:	sbb    DWORD PTR [rdx],ecx
   14002129f:	add    BYTE PTR [rcx],bl
   1400212a1:	je     0x1400212b0
   1400212a3:	add    BYTE PTR [rcx],bl
   1400212a5:	fs or  al,0x0
   1400212a8:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   1400212ac:	sbb    DWORD PTR [rdx+rcx*1],esi
   1400212af:	add    BYTE PTR [rcx],bl
   1400212b1:	jb     0x1400212c8
   1400212b3:	rol    BYTE PTR [rcx],0x1c
   1400212b6:	or     eax,DWORD PTR [rax]
   1400212b8:	sbb    al,0x74
   1400212ba:	sbb    BYTE PTR [rax],al
   1400212bc:	sbb    al,0x54
   1400212be:	(bad)  
   1400212bf:	add    BYTE PTR [rsp+rsi*1],bl
   1400212c2:	(bad)  
   1400212c3:	add    BYTE PTR [rcx+rax*1],bl
   1400212c6:	adc    al,BYTE PTR [rax]
   1400212c8:	adc    eax,0x11d013e0
   1400212cd:	rol    BYTE PTR [rax],0x0
   1400212d0:	add    DWORD PTR [rdx],ecx
   1400212d2:	add    al,0x0
   1400212d4:	or     dh,BYTE PTR [rax+rcx*1]
   1400212d7:	add    BYTE PTR [rdx],cl
   1400212d9:	xor    al,BYTE PTR [rsi]
   1400212db:	jo     0x1400212f6
   1400212dd:	xor    BYTE PTR [rbx],cl
   1400212df:	add    BYTE PTR [rdi],bl
   1400212e1:	xor    al,0x5a
   1400212e3:	add    BYTE PTR [rdi],bl
   1400212e5:	add    DWORD PTR [rax+0x0],edx
   1400212e8:	adc    al,dh
   1400212ea:	(bad)  
   1400212eb:	loopne 0x1400212f9
   1400212ed:	ror    BYTE PTR [rdx],1
   1400212ef:	ror    BYTE PTR [rax],0x70
   1400212f2:	(bad)  
   1400212f3:	(bad)  
   1400212f4:	(bad)  
   1400212f5:	push   rax
   1400212f6:	add    BYTE PTR [rax],al
   1400212f8:	mov    al,0xa6
   1400212fa:	add    BYTE PTR [rax],al
   1400212fc:	jo     0x140021300
   1400212fe:	add    BYTE PTR [rax],al
   140021300:	add    DWORD PTR [rdi],edx
   140021302:	or     BYTE PTR [rax],al
   140021304:	(bad)  
   140021305:	or     DWORD PTR fs:[rax],eax
   140021308:	(bad)  
   140021309:	push   rsp
   14002130a:	or     BYTE PTR [rax],al
   14002130c:	(bad)  
   14002130d:	xor    al,0x7
   14002130f:	add    BYTE PTR [rdi],dl
   140021311:	xor    dl,BYTE PTR [rbx]
   140021313:	jo     0x140021316
   140021315:	or     al,0x2
   140021317:	add    BYTE PTR [rcx+rax*1],cl
   14002131a:	adc    DWORD PTR [rax],eax
   14002131c:	add    DWORD PTR [rcx],ebx
   14002131e:	or     al,BYTE PTR [rax]
   140021320:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   140021324:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   140021328:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14002132c:	sbb    DWORD PTR [rsi+rax*1],esi
   14002132f:	add    BYTE PTR [rcx],bl
   140021331:	xor    dl,BYTE PTR [rip+0x60f11c0]        # 0x1461124f7
   140021337:	add    BYTE PTR [rdi],cl
   140021339:	or     DWORD PTR fs:[rax],eax
   14002133c:	sysenter 
   14002133e:	or     BYTE PTR [rax],al
   140021340:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140021343:	jo     0x140021369
   140021345:	xlat   BYTE PTR ds:[rbx]
   140021346:	add    BYTE PTR [rax],al
   140021348:	add    DWORD PTR [rax],eax
   14002134a:	add    BYTE PTR [rax],al
   14002134c:	jle    0x14002135b
   14002134e:	add    DWORD PTR [rax],eax
   140021350:	repnz or eax,0x9bf20001
   140021356:	add    DWORD PTR [rax],eax
   140021358:	add    BYTE PTR [rax],al
   14002135a:	add    BYTE PTR [rax],al
   14002135c:	adc    DWORD PTR [rcx],edx
   14002135e:	(bad)  
   14002135f:	add    BYTE PTR [rcx],dl
   140021361:	xor    al,0xa
   140021363:	add    BYTE PTR [rcx],dl
   140021365:	xor    cl,BYTE PTR [rip+0xa700bc0]        # 0x14a721f2b
   14002136b:	(bad)  
   14002136c:	and    al,0xd7
   14002136e:	add    BYTE PTR [rax],al
   140021370:	add    DWORD PTR [rax],eax
   140021372:	add    BYTE PTR [rax],al
   140021374:	(bad)  
   140021375:	sgdt   [rax]
   140021378:	pop    rbx
   140021379:	sgdt   [rax]
   14002137c:	or     eax,0x19c
   140021381:	add    BYTE PTR [rax],al
   140021383:	add    BYTE PTR [rcx],al
   140021385:	(bad)  
   140021386:	or     al,BYTE PTR [rax]
   140021388:	(bad)  
   140021389:	push   rsp
   14002138a:	(bad)  
   14002138b:	add    BYTE PTR [rsi],dl
   14002138d:	xor    al,0xc
   14002138f:	add    BYTE PTR [rsi],dl
   140021391:	push   rdx
   140021392:	adc    dh,al
   140021394:	adc    al,dl
   140021396:	(bad)  
   140021397:	ror    BYTE PTR [rax+rsi*2],0xb
   14002139b:	(bad)  
   14002139c:	adc    DWORD PTR [rdi],ecx
   14002139e:	(bad)  
   14002139f:	add    BYTE PTR [rdi],cl
   1400213a1:	or     DWORD PTR fs:[rax],eax
   1400213a4:	sysenter 
   1400213a6:	or     BYTE PTR [rax],al
   1400213a8:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400213ab:	jo     0x1400213d1
   1400213ad:	xlat   BYTE PTR ds:[rbx]
   1400213ae:	add    BYTE PTR [rax],al
   1400213b0:	add    DWORD PTR [rax],eax
   1400213b2:	add    BYTE PTR [rax],al
   1400213b4:	out    dx,al
   1400213b5:	adc    eax,DWORD PTR [rcx]
   1400213b7:	add    BYTE PTR [rsi],cl
   1400213b9:	adc    eax,0x9bf20001
   1400213be:	add    DWORD PTR [rax],eax
	...
   1400213c8:	add    DWORD PTR [rdi],eax
   1400213ca:	add    al,BYTE PTR [rax]
   1400213cc:	(bad)  
   1400213cd:	add    DWORD PTR [rbx+0x100],ebx
   1400213d3:	add    BYTE PTR [rcx],al
   1400213d5:	add    BYTE PTR [rax],al
   1400213d7:	add    BYTE PTR [rcx],al
   1400213d9:	add    BYTE PTR [rax],al
   1400213db:	add    BYTE PTR [rcx],al
   1400213dd:	clts   
   1400213df:	add    BYTE PTR [rdi],cl
   1400213e1:	push   rsp
   1400213e2:	(bad)  
   1400213e3:	add    BYTE PTR [rdi],cl
   1400213e5:	xor    al,0x6
   1400213e7:	add    BYTE PTR [rdi],cl
   1400213e9:	xor    cl,BYTE PTR [rbx]
   1400213eb:	jo     0x1400213fe
   1400213ed:	sbb    DWORD PTR [rdx],ecx
   1400213ef:	add    BYTE PTR [rcx],bl
   1400213f1:	(bad)  
   1400213f2:	or     DWORD PTR [rax],eax
   1400213f4:	sbb    DWORD PTR [rax+rcx*1+0x0],esi
   1400213f8:	sbb    DWORD PTR [rdi+rax*1+0x0],esp
   1400213fc:	sbb    DWORD PTR [rsi+rax*1],esi
   1400213ff:	add    BYTE PTR [rcx],bl
   140021401:	xor    dl,BYTE PTR [rip+0xd724e0]        # 0x140d938e7
   140021407:	add    BYTE PTR [rcx],al
   140021409:	add    BYTE PTR [rax],al
   14002140b:	add    dh,cl
   14002140d:	(bad)  
   14002140e:	add    DWORD PTR [rax],eax
   140021410:	out    dx,eax
   140021411:	(bad)  
   140021412:	add    DWORD PTR [rax],eax
   140021414:	es pushf 
   140021416:	add    DWORD PTR [rax],eax
   140021418:	add    BYTE PTR [rax],al
   14002141a:	add    BYTE PTR [rax],al
   14002141c:	adc    DWORD PTR [rcx],ebx
   14002141e:	or     al,BYTE PTR [rax]
   140021420:	sbb    DWORD PTR [rsi+rcx*1+0x0],esi
   140021424:	sbb    DWORD PTR [rbp+rcx*1+0x0],esp
   140021428:	sbb    DWORD PTR [rsp+rcx*1],esi
   14002142b:	add    BYTE PTR [rcx],bl
   14002142d:	jb     0x140021444
   14002142f:	loopne 0x140021444
   140021431:	rcl    BYTE PTR [rcx],1
   140021433:	shl    BYTE PTR [rdi+rdx*8],0x0
   140021437:	add    BYTE PTR [rdx],al
   140021439:	add    BYTE PTR [rax],al
   14002143b:	add    ch,ch
   14002143d:	sbb    BYTE PTR [rcx],al
   14002143f:	add    BYTE PTR [rcx+rbx*1],dl
   140021442:	add    DWORD PTR [rax],eax
   140021444:	rex.B pushf 
   140021446:	add    DWORD PTR [rax],eax
   140021448:	add    BYTE PTR [rax],al
   14002144a:	add    BYTE PTR [rax],al
   14002144c:	xchg   esp,eax
   14002144d:	sbb    BYTE PTR [rcx],al
   14002144f:	add    BYTE PTR [rip+0x6100011a],dh        # 0x1a102156f
   140021455:	pushf  
   140021456:	add    DWORD PTR [rax],eax
   140021458:	add    BYTE PTR [rax],al
   14002145a:	add    BYTE PTR [rax],al
   14002145c:	sbb    DWORD PTR [rsi],esi
   14002145e:	or     eax,DWORD PTR [rax]
   140021460:	and    eax,0x25037134
   140021465:	add    DWORD PTR [rsi+0x3],esp
   140021468:	adc    al,dh
   14002146a:	(bad)  
   14002146b:	loopne 0x140021479
   14002146d:	ror    BYTE PTR [rdx],1
   14002146f:	ror    BYTE PTR [rax],0x70
   140021472:	(bad)  
   140021473:	(bad)  
   140021474:	(bad)  
   140021475:	push   rax
   140021476:	add    BYTE PTR [rax],al
   140021478:	mov    al,0xa6
   14002147a:	add    BYTE PTR [rax],al
   14002147c:	and    BYTE PTR [rbx],bl
   14002147e:	add    BYTE PTR [rax],al
   140021480:	adc    DWORD PTR [rip+0x34150008],edx        # 0x17417148e
   140021486:	or     eax,DWORD PTR [rax]
   140021488:	adc    eax,0xfe01132
   14002148d:	ror    BYTE PTR [rip+0xa700bc0],1        # 0x14a722053
   140021493:	(bad)  
   140021494:	and    al,0xd7
   140021496:	add    BYTE PTR [rax],al
   140021498:	add    DWORD PTR [rax],eax
   14002149a:	add    BYTE PTR [rax],al
   14002149c:	xor    DWORD PTR [rdx],esp
   14002149e:	add    DWORD PTR [rax],eax
   1400214a0:	movsxd esp,DWORD PTR [rdx]
   1400214a2:	add    DWORD PTR [rax],eax
   1400214a4:	(bad)  
   1400214a5:	popf   
   1400214a6:	add    DWORD PTR [rax],eax
   1400214a8:	add    BYTE PTR [rax],al
   1400214aa:	add    BYTE PTR [rax],al
   1400214ac:	add    DWORD PTR [rax+rcx*1],edx
   1400214af:	add    BYTE PTR [rsp+riz*2],dl
   1400214b2:	or     DWORD PTR [rax],eax
   1400214b4:	adc    al,0x54
   1400214b6:	or     BYTE PTR [rax],al
   1400214b8:	adc    al,0x34
   1400214ba:	(bad)  
   1400214bb:	add    BYTE PTR [rdx+rsi*1],dl
   1400214be:	adc    BYTE PTR [rax+0x1],dh
   1400214c1:	or     al,BYTE PTR [rax+rax*1]
   1400214c4:	or     dh,BYTE PTR [rsi+rax*1]
   1400214c7:	add    BYTE PTR [rdx],cl
   1400214c9:	xor    al,BYTE PTR [rsi]
   1400214cb:	jo     0x1400214e6
   1400214cd:	sub    al,0xb
   1400214cf:	add    BYTE PTR [rdx],bl
   1400214d1:	fs sbb eax,0x1c341a00
   1400214d7:	add    BYTE PTR [rdx],bl
   1400214d9:	add    DWORD PTR [rax+rax*1],edx
   1400214dc:	adc    esi,eax
   1400214de:	adc    eax,esp
   1400214e0:	(bad)  
   1400214e2:	or     eax,0x700bc0
   1400214e7:	add    BYTE PTR [rax+0x74],dl
   1400214ea:	add    DWORD PTR [rax],eax
   1400214ec:	add    DWORD PTR [rax],eax
   1400214ee:	add    BYTE PTR [rax],al
   1400214f0:	and    DWORD PTR [rip+0x28100001],0x1        # 0x1681214f8
   1400214f7:	add    BYTE PTR [rsp+rbx*4+0x1],bh
   1400214fb:	add    BYTE PTR [rax],al
   1400214fd:	add    BYTE PTR [rax],al
   1400214ff:	add    BYTE PTR [rdx+0x1000000],bl
   140021505:	and    al,0xa
   140021507:	add    BYTE PTR [rsp+rsi*1],ah
   14002150a:	sbb    DWORD PTR [rax],eax
   14002150c:	and    al,0xf2
   14002150e:	sbb    dh,al
   140021510:	sbb    al,ah
   140021512:	(bad)  
   140021513:	rcl    BYTE PTR [rax+rax*8],1
   140021516:	adc    dh,BYTE PTR [rax+0x11]
   140021519:	(bad)  
   14002151a:	adc    BYTE PTR [rax+0x11],dl
   14002151d:	adc    al,0x3
   14002151f:	add    BYTE PTR [rdx+rax*4],dl
   140021522:	adc    BYTE PTR [rax+0xf],dh
   140021525:	xor    BYTE PTR [rax],al
   140021527:	add    BYTE PTR [rdi+rdx*8],ah
   14002152a:	add    BYTE PTR [rax],al
   14002152c:	add    DWORD PTR [rax],eax
   14002152e:	add    BYTE PTR [rax],al
   140021530:	pop    rsp
   140021531:	xor    BYTE PTR [rcx],al
   140021533:	add    BYTE PTR [rax+rsi*1-0x636affff],al
   14002153a:	add    DWORD PTR [rax],eax
   14002153c:	add    BYTE PTR [rax],al
   14002153e:	add    BYTE PTR [rax],al
   140021540:	add    DWORD PTR [rsi],eax
   140021542:	add    al,BYTE PTR [rax]
   140021544:	(bad)  
   140021545:	push   rdx
   140021546:	add    dl,BYTE PTR [rax+0x11]
   140021549:	or     al,BYTE PTR [rax+rax*1]
   14002154c:	or     dh,BYTE PTR [rdx+rcx*1]
   14002154f:	add    BYTE PTR [rdx],cl
   140021551:	jb     0x140021559
   140021553:	jo     0x140021579
   140021555:	xlat   BYTE PTR ds:[rbx]
   140021556:	add    BYTE PTR [rax],al
   140021558:	add    DWORD PTR [rax],eax
   14002155a:	add    BYTE PTR [rax],al
   14002155c:	xor    DWORD PTR [r9],r8d
   14002155f:	add    BYTE PTR [rax+0x31],ch
   140021562:	add    DWORD PTR [rax],eax
   140021564:	jrcxz  0x140021502
   140021566:	add    DWORD PTR [rax],eax
   140021568:	add    BYTE PTR [rax],al
   14002156a:	add    BYTE PTR [rax],al
   14002156c:	sbb    DWORD PTR [rdx],esp
   14002156e:	or     DWORD PTR [rax],eax
   140021570:	adc    al,0xe2
   140021572:	or     eax,0x9e00bf0
   140021577:	rol    BYTE PTR [rdi],1
   140021579:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x1436219f0
   140021580:	add    dl,BYTE PTR [rax+0x0]
   140021583:	add    BYTE PTR [rax+0x680000a6],dh
   140021589:	add    BYTE PTR [rax],al
   14002158b:	add    BYTE PTR [rcx],bl
   14002158d:	sub    DWORD PTR [rcx],ecx
   14002158f:	add    BYTE PTR [rdi],dl
   140021591:	rex.WR add BYTE PTR fs:[rdi],r10b
   140021595:	push   rsp
   140021596:	rex.WXB add BYTE PTR [r15],dl
   140021599:	xor    al,0x4a
   14002159b:	add    BYTE PTR [rdi],dl
   14002159d:	add    DWORD PTR [rax+0x0],ecx
   1400215a0:	adc    BYTE PTR [rax+0x0],dh
   1400215a3:	add    BYTE PTR [rax+0x300000a6],dh
   1400215a9:	add    al,BYTE PTR [rax]
   1400215ab:	add    BYTE PTR [rcx],al
   1400215ad:	or     eax,0x340d0004
   1400215b2:	adc    DWORD PTR [rax],eax
   1400215b4:	or     eax,0x15006d2
   1400215b9:	clts   
   1400215bb:	add    BYTE PTR [rdi],cl
   1400215bd:	or     eax,DWORD PTR fs:[rax]
   1400215c0:	sysenter 
   1400215c2:	or     al,BYTE PTR [rax]
   1400215c4:	(bad)  
   1400215c6:	or     esi,DWORD PTR [rax+0x11]
   1400215c9:	adc    DWORD PTR [rsi],eax
   1400215cb:	add    BYTE PTR [rcx],dl
   1400215cd:	xor    al,0xa
   1400215cf:	add    BYTE PTR [rcx],dl
   1400215d1:	xor    cl,BYTE PTR [rip+0xa700bc0]        # 0x14a722197
   1400215d7:	(bad)  
   1400215d8:	and    al,0xd7
   1400215da:	add    BYTE PTR [rax],al
   1400215dc:	add    DWORD PTR [rax],eax
   1400215de:	add    BYTE PTR [rax],al
   1400215e0:	mov    bh,0x38
   1400215e2:	add    DWORD PTR [rax],eax
   1400215e4:	sti    
   1400215e5:	cmp    BYTE PTR [rcx],al
   1400215e7:	add    BYTE PTR [rip+0x19c],cl        # 0x140021789
   1400215ed:	add    BYTE PTR [rax],al
   1400215ef:	add    BYTE PTR [rcx],al
   1400215f1:	sbb    BYTE PTR [rdx],cl
   1400215f3:	add    BYTE PTR [rax],bl
   1400215f5:	xor    al,0x10
   1400215f7:	add    BYTE PTR [rax],bl
   1400215f9:	push   rdx
   1400215fa:	adc    al,0xf0
   1400215fc:	adc    ah,al
   1400215fe:	adc    al,dl
   140021600:	(bad)  
   140021601:	ror    BYTE PTR [rax+rsi*2],0xb
   140021605:	(bad)  
   140021606:	or     dl,BYTE PTR [rax+0x1]
   140021609:	(bad)  
   14002160a:	or     BYTE PTR [rax],al
   14002160c:	(bad)  
   14002160d:	je     0x14002161b
   14002160f:	add    BYTE PTR [rdi],dl
   140021611:	or     eax,DWORD PTR fs:[rax]
   140021614:	(bad)  
   140021615:	xor    al,0xa
   140021617:	add    BYTE PTR [rdi],dl
   140021619:	jb     0x14002162b
   14002161b:	push   rax
   14002161c:	sbb    DWORD PTR [rdi],ebp
   14002161e:	or     DWORD PTR [rax],eax
   140021620:	(bad)  
   140021621:	je     0x1400215d8
   140021623:	add    BYTE PTR [rsi],bl
   140021625:	fs mov ah,0x0
   140021628:	(bad)  
   140021629:	xor    al,0xb3
   14002162b:	add    BYTE PTR [rsi],bl
   14002162d:	add    DWORD PTR [rax+0x501000],esi
   140021633:	add    BYTE PTR [rax+0x700000a6],dh
   140021639:	add    eax,0xa110000
   14002163e:	add    al,0x0
   140021640:	or     dh,BYTE PTR [rdi+rax*1]
   140021643:	add    BYTE PTR [rdx],cl
   140021645:	xor    al,BYTE PTR [rsi]
   140021647:	jo     0x14002166d
   140021649:	xlat   BYTE PTR ds:[rbx]
   14002164a:	add    BYTE PTR [rax],al
   14002164c:	add    DWORD PTR [rax],eax
   14002164e:	add    BYTE PTR [rax],al
   140021650:	rex.WX
   140021651:	add    DWORD PTR [rax],r8d
   140021654:	movabs eax,ds:0x19d2c000144
   14002165d:	add    BYTE PTR [rax],al
   14002165f:	add    BYTE PTR [rcx],bl
   140021661:	(bad)  
   140021662:	or     BYTE PTR [rax],al
   140021664:	adc    BYTE PTR [rax+rdx*1],dh
   140021667:	add    BYTE PTR [rax],dl
   140021669:	jb     0x140021677
   14002166b:	ror    BYTE PTR [rdx],1
   14002166d:	ror    BYTE PTR [rax],0x70
   140021670:	(bad)  
   140021671:	(bad)  
   140021672:	(bad)  
   140021673:	push   rax
   140021674:	mov    al,0xa6
   140021676:	add    BYTE PTR [rax],al
   140021678:	cmp    BYTE PTR [rax],al
   14002167a:	add    BYTE PTR [rax],al
   14002167c:	adc    DWORD PTR [rcx],ebx
   14002167e:	or     al,BYTE PTR [rax]
   140021680:	sbb    esp,eax
   140021682:	or     eax,DWORD PTR [rax]
   140021684:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140021688:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   14002168c:	sbb    DWORD PTR [rax+rcx*1],esi
   14002168f:	add    BYTE PTR [rcx],bl
   140021691:	push   rdx
   140021692:	adc    eax,0xd724d0
   140021697:	add    BYTE PTR [rcx],al
   140021699:	add    BYTE PTR [rax],al
   14002169b:	add    BYTE PTR [rax+0x5c000148],dh
   1400216a1:	add    QWORD PTR [r8],rax
   1400216a4:	sub    al,0x9d
   1400216a6:	add    DWORD PTR [rax],eax
   1400216a8:	add    BYTE PTR [rax],al
   1400216aa:	add    BYTE PTR [rax],al
   1400216ac:	add    DWORD PTR [rdi],ecx
   1400216ae:	(bad)  
   1400216af:	add    BYTE PTR [rdi],cl
   1400216b1:	fs (bad) 
   1400216b3:	add    BYTE PTR [rdi],cl
   1400216b5:	xor    al,0x6
   1400216b7:	add    BYTE PTR [rdi],cl
   1400216b9:	xor    cl,BYTE PTR [rbx]
   1400216bb:	jo     0x1400216ce
   1400216bd:	(bad)  
   1400216be:	add    al,BYTE PTR [rax]
   1400216c0:	(bad)  
   1400216c1:	xor    al,BYTE PTR [rdx]
   1400216c3:	xor    BYTE PTR [rdi+rdx*8],ah
   1400216c6:	add    BYTE PTR [rax],al
   1400216c8:	add    DWORD PTR [rax],eax
   1400216ca:	add    BYTE PTR [rax],al
   1400216cc:	sbb    ecx,DWORD PTR [rbp+0x1]
   1400216cf:	add    BYTE PTR [rcx],dh
   1400216d1:	add    QWORD PTR [r8],r8
   1400216d4:	rex.RXB popf 
   1400216d6:	add    DWORD PTR [rax],eax
   1400216d8:	add    BYTE PTR [rax],al
   1400216da:	add    BYTE PTR [rax],al
   1400216dc:	add    DWORD PTR [rax],edx
   1400216de:	(bad)  
   1400216df:	add    BYTE PTR [rax],dl
   1400216e1:	adc    DWORD PTR fs:[rax],eax
   1400216e4:	adc    BYTE PTR [rdx+0x7007c009],dh
   1400216ea:	(bad)  
   1400216eb:	push   rax
   1400216ec:	sbb    DWORD PTR [rsi],ebx
   1400216ee:	or     BYTE PTR [rax],al
   1400216f0:	setb   BYTE PTR [rbx]
   1400216f3:	loopne 0x1400216fe
   1400216f5:	rol    BYTE PTR [rdi],1
   1400216f7:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143621b6e
   1400216fe:	add    dh,BYTE PTR [rax]
   140021700:	mov    al,0xa6
   140021702:	add    BYTE PTR [rax],al
   140021704:	rex.W add BYTE PTR [rax],al
   140021707:	add    BYTE PTR [rcx],al
   140021709:	adc    eax,0x34150006
   14002170e:	adc    BYTE PTR [rax],al
   140021710:	adc    eax,0xd700eb2
   140021715:	(bad)  
   140021716:	or     al,0x50
   140021718:	sbb    DWORD PTR [rdx+rcx*1],esp
   14002171b:	xor    eax,0xc2113316
   140021720:	or     eax,0x9e00bf0
   140021725:	rol    BYTE PTR [rdi],1
   140021727:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143621b9e
   14002172e:	add    dl,BYTE PTR [rax-0x50]
   140021731:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140021732:	add    BYTE PTR [rax],al
   140021734:	pop    rax
   140021735:	add    BYTE PTR [rax],al
   140021737:	add    BYTE PTR [rcx],al
   140021739:	clts   
   14002173b:	add    BYTE PTR [rdi],cl
   14002173d:	str    WORD PTR fs:[rdi]
   140021741:	xor    al,0xe
   140021743:	add    BYTE PTR [rdi],cl
   140021745:	mov    dl,0xb
   140021747:	jo     0x14002174a
   140021749:	(bad)  
   14002174a:	or     BYTE PTR [rax],al
   14002174c:	(bad)  
   14002174d:	je     0x14002175f
   14002174f:	add    BYTE PTR [rdi],dl
   140021751:	lldt   WORD PTR fs:[rdi]
   140021755:	xor    al,0xe
   140021757:	add    BYTE PTR [rdi],dl
   140021759:	mov    dl,0x10
   14002175b:	push   rax
   14002175c:	add    DWORD PTR [rbx],ebx
   14002175e:	or     al,BYTE PTR [rax]
   140021760:	sbb    eax,esp
   140021762:	ltr    WORD PTR [rbx]
   140021765:	je     0x140021775
   140021767:	add    BYTE PTR [rbx],bl
   140021769:	fs or  eax,0xc341b00
   14002176f:	add    BYTE PTR [rbx],bl
   140021771:	xchg   edx,eax
   140021772:	adc    al,0x50
   140021774:	adc    DWORD PTR [rip+0x34150008],edx        # 0x174171782
   14002177a:	or     eax,DWORD PTR [rax]
   14002177c:	adc    eax,0xfe01132
   140021781:	ror    BYTE PTR [rip+0xa700bc0],1        # 0x14a722347
   140021787:	(bad)  
   140021788:	and    al,0xd7
   14002178a:	add    BYTE PTR [rax],al
   14002178c:	add    DWORD PTR [rax],eax
   14002178e:	add    BYTE PTR [rax],al
   140021790:	cmp    DWORD PTR [rdi+0x1],ebx
   140021793:	add    BYTE PTR [rbp+0x5f],ch
   140021796:	add    DWORD PTR [rax],eax
   140021798:	(bad)  
   140021799:	popf   
   14002179a:	add    DWORD PTR [rax],eax
   14002179c:	add    BYTE PTR [rax],al
   14002179e:	add    BYTE PTR [rax],al
   1400217a0:	add    DWORD PTR [rdi],ebx
   1400217a2:	or     al,0x0
   1400217a4:	(bad)  
   1400217a5:	je     0x1400217b8
   1400217a7:	add    BYTE PTR [rdi],bl
   1400217a9:	adc    BYTE PTR fs:[rax],al
   1400217ac:	(bad)  
   1400217ad:	xor    al,0xe
   1400217af:	add    BYTE PTR [rdi],bl
   1400217b1:	jb     0x1400217cb
   1400217b3:	lock (bad) 
   1400217b5:	loopne 0x1400217cb
   1400217b7:	rcl    BYTE PTR [rdx],1
   1400217b9:	rcl    BYTE PTR [rax],0x50
   1400217bc:	add    DWORD PTR [rcx+rcx*1],ebx
   1400217bf:	add    BYTE PTR [rdx+riz*4],bl
   1400217c2:	adc    eax,0x11e013f0
   1400217c7:	ror    BYTE PTR [rdi],1
   1400217c9:	ror    BYTE PTR [rip+0xb600c70],0x30        # 0x14b622440
   1400217d0:	or     dl,BYTE PTR [rax+0x0]
   1400217d3:	add    BYTE PTR [rcx],dl
   1400217d5:	sbb    ecx,DWORD PTR [rdx]
   1400217d7:	add    BYTE PTR [rbx],bl
   1400217d9:	fs or  al,0x0
   1400217dc:	sbb    esi,DWORD PTR [rbx+rcx*1]
   1400217df:	add    BYTE PTR [rbx],bl
   1400217e1:	xor    dl,BYTE PTR [rdi]
   1400217e3:	lock adc eax,0x11d013e0
   1400217e9:	ror    BYTE PTR [rdi],0x70
   1400217ec:	and    al,0xd7
   1400217ee:	add    BYTE PTR [rax],al
   1400217f0:	add    DWORD PTR [rax],eax
   1400217f2:	add    BYTE PTR [rax],al
   1400217f4:	lock push 0x1
   1400217f7:	add    BYTE PTR [rdx],ah
   1400217f9:	imul   eax,DWORD PTR [rcx],0x0
   1400217fc:	(bad)  
   1400217fd:	popf   
   1400217fe:	add    DWORD PTR [rax],eax
   140021800:	add    BYTE PTR [rax],al
   140021802:	add    BYTE PTR [rax],al
   140021804:	add    DWORD PTR [rbx],ebx
   140021806:	or     al,BYTE PTR [rax]
   140021808:	sbb    eax,esp
   14002180a:	or     eax,0xc741b00
   14002180f:	add    BYTE PTR [rbx],bl
   140021811:	or     eax,DWORD PTR fs:[rax]
   140021814:	sbb    esi,DWORD PTR [rdx+rcx*1]
   140021817:	add    BYTE PTR [rbx],bl
   140021819:	jb     0x14002182f
   14002181b:	push   rax
   14002181c:	add    DWORD PTR [rcx],ecx
   14002181e:	add    DWORD PTR [rax],eax
   140021820:	or     DWORD PTR [rdx+0x0],esp
   140021823:	add    BYTE PTR [rax],al
   140021825:	add    BYTE PTR [rax],al
   140021827:	add    BYTE PTR [rcx],al
   140021829:	add    al,0x1
   14002182b:	add    BYTE PTR [rdx+rdx*1],al
   14002182e:	add    BYTE PTR [rax],al
   140021830:	sbb    DWORD PTR [rip+0x52060002],edx        # 0x192081838
   140021836:	add    dh,BYTE PTR [rax]
   140021838:	mov    al,0xa6
   14002183a:	add    BYTE PTR [rax],al
   14002183c:	sub    BYTE PTR [rax],al
   14002183e:	add    BYTE PTR [rax],al
   140021840:	add    DWORD PTR [rsi+rax*1],ecx
   140021843:	add    BYTE PTR [rsp+rsi*1],cl
   140021846:	or     DWORD PTR [rax],eax
   140021848:	or     al,0x32
   14002184a:	or     BYTE PTR [rax+0x7],dh
   14002184d:	(bad)  
   14002184e:	(bad)  
   14002184f:	push   rax
   140021850:	adc    DWORD PTR [rdx],ecx
   140021852:	add    al,0x0
   140021854:	or     dh,BYTE PTR [rsi+rax*1]
   140021857:	add    BYTE PTR [rdx],cl
   140021859:	xor    al,BYTE PTR [rsi]
   14002185b:	jo     0x140021881
   14002185d:	xlat   BYTE PTR ds:[rbx]
   14002185e:	add    BYTE PTR [rax],al
   140021860:	add    DWORD PTR [rax],eax
   140021862:	add    BYTE PTR [rax],al
   140021864:	sub    dh,BYTE PTR [rcx+0x1]
   140021867:	add    BYTE PTR [rdx],bh
   140021869:	jno    0x14002186c
   14002186b:	add    BYTE PTR [rbx],al
   14002186d:	fwait
   14002186e:	add    DWORD PTR [rax],eax
   140021870:	add    BYTE PTR [rax],al
   140021872:	add    BYTE PTR [rax],al
   140021874:	add    DWORD PTR [rcx],ebx
   140021876:	or     al,BYTE PTR [rax]
   140021878:	sbb    DWORD PTR [rsi+rdx*1+0x0],esp
   14002187c:	sbb    DWORD PTR [rdx*1+0x12d21900],esi
   140021883:	lock adc al,ah
   140021886:	(bad)  
   140021887:	ror    BYTE PTR [rax+rsi*2],0xb
   14002188b:	push   rax
   14002188c:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41f189e
   140021892:	or     eax,DWORD PTR [rax]
   140021894:	sbb    eax,0x1d000a64
   140021899:	push   rsp
   14002189a:	or     DWORD PTR [rax],eax
   14002189c:	sbb    eax,0x1d000834
   1400218a1:	xor    bl,BYTE PTR [rcx]
   1400218a3:	lock (bad) 
   1400218a5:	rcl    BYTE PTR [rip+0x81511c0],1        # 0x148172a6b
   1400218ab:	add    BYTE PTR [rip+0x15000b34],dl        # 0x1550223e5
   1400218b1:	xor    dl,BYTE PTR [rcx]
   1400218b3:	loopne 0x1400218c4
   1400218b5:	ror    BYTE PTR [rip+0xa700bc0],1        # 0x14a72247b
   1400218bb:	(bad)  
   1400218bc:	and    al,0xd7
   1400218be:	add    BYTE PTR [rax],al
   1400218c0:	add    DWORD PTR [rax],eax
   1400218c2:	add    BYTE PTR [rax],al
   1400218c4:	mov    DWORD PTR [rdi+0x1],esi
   1400218c7:	add    BYTE PTR [rbx+0x62000177],bh
   1400218cd:	popf   
   1400218ce:	add    DWORD PTR [rax],eax
   1400218d0:	add    BYTE PTR [rax],al
   1400218d2:	add    BYTE PTR [rax],al
   1400218d4:	add    DWORD PTR [rip+0x34050002],eax        # 0x1740718dc
   1400218da:	add    DWORD PTR [rax],eax
   1400218dc:	add    DWORD PTR [rsi],eax
   1400218de:	add    al,BYTE PTR [rax]
   1400218e0:	(bad)  
   1400218e1:	jb     0x1400218e5
   1400218e3:	push   rax
   1400218e4:	adc    DWORD PTR [rdx],edx
   1400218e6:	or     BYTE PTR [rax],al
   1400218e8:	adc    dl,BYTE PTR [rdx-0x1ff30ff2]
   1400218ee:	or     dl,al
   1400218f0:	or     al,al
   1400218f2:	(bad)  
   1400218f3:	jo     0x1400218fa
   1400218f5:	(bad)  
   1400218f6:	add    al,0x30
   1400218f8:	and    al,0xd7
   1400218fa:	add    BYTE PTR [rax],al
   1400218fc:	add    al,BYTE PTR [rax]
   1400218fe:	add    BYTE PTR [rax],al
   140021900:	and    eax,0xb8000179
   140021905:	jnp    0x140021908
   140021907:	add    BYTE PTR [rbx-0x63],bh
   14002190a:	add    DWORD PTR [rax],eax
   14002190c:	add    BYTE PTR [rax],al
   14002190e:	add    BYTE PTR [rax],al
   140021910:	and    eax,0x6200017d
   140021915:	jge    0x140021918
   140021917:	add    BYTE PTR [rbx-0x63],bh
   14002191a:	add    DWORD PTR [rax],eax
   14002191c:	add    BYTE PTR [rax],al
   14002191e:	add    BYTE PTR [rax],al
   140021920:	add    DWORD PTR [rdx],edx
   140021922:	or     BYTE PTR [rax],al
   140021924:	adc    dl,BYTE PTR [rsp+rcx*1+0x0]
   140021928:	adc    dh,BYTE PTR [rbx+rcx*1]
   14002192b:	add    BYTE PTR [rdx],dl
   14002192d:	push   rdx
   14002192e:	(bad)  
   14002192f:	ror    BYTE PTR [rax+rsi*2],0xb
   140021933:	(bad)  
   140021934:	add    DWORD PTR [rax],ebx
   140021936:	or     al,BYTE PTR [rax]
   140021938:	sbb    BYTE PTR [rbx+rdx*1+0x0],ah
   14002193c:	sbb    BYTE PTR [rdx+rdx*1+0x0],dl
   140021940:	sbb    BYTE PTR [rax+rdx*1],dh
   140021943:	add    BYTE PTR [rax],bl
   140021945:	mov    dl,0x14
   140021947:	rcl    BYTE PTR [rdx],1
   140021949:	rcl    BYTE PTR [rax],0x70
   14002194c:	adc    DWORD PTR [rcx+rax*1],eax
   14002194f:	add    BYTE PTR [rdx+rax*2],al
   140021952:	add    BYTE PTR [rax],al
   140021954:	and    al,0xd7
   140021956:	add    BYTE PTR [rax],al
   140021958:	add    DWORD PTR [rax],eax
   14002195a:	add    BYTE PTR [rax],al
   14002195c:	or     al,0x83
   14002195e:	add    DWORD PTR [rax],eax
   140021960:	and    BYTE PTR [rbx-0x6269ffff],al
   140021966:	add    DWORD PTR [rax],eax
   140021968:	add    BYTE PTR [rax],al
   14002196a:	add    BYTE PTR [rax],al
   14002196c:	adc    DWORD PTR [rsi],eax
   14002196e:	add    al,BYTE PTR [rax]
   140021970:	(bad)  
   140021971:	xor    al,BYTE PTR [rdx]
   140021973:	xor    BYTE PTR [rdi+rdx*8],ah
   140021976:	add    BYTE PTR [rax],al
   140021978:	add    DWORD PTR [rax],eax
   14002197a:	add    BYTE PTR [rax],al
   14002197c:	rex.R add DWORD PTR [rcx],0x0
   140021980:	rex.WRX add QWORD PTR [rcx],0x0
   140021984:	xchg   esi,eax
   140021985:	popf   
   140021986:	add    DWORD PTR [rax],eax
   140021988:	add    BYTE PTR [rax],al
   14002198a:	add    BYTE PTR [rax],al
   14002198c:	sbb    DWORD PTR [rip+0x741f450d],ebp        # 0x1b4215e9f
   140021992:	adc    al,BYTE PTR [rax]
   140021994:	sbb    esp,DWORD PTR [rcx+rdx*1+0x0]
   140021998:	(bad)  
   140021999:	xor    al,0x10
   14002199b:	add    BYTE PTR [rbx],dl
   14002199d:	rex.XB (bad) 
   14002199f:	xchg   edx,eax
   1400219a0:	or     dh,al
   1400219a2:	or     al,ah
   1400219a4:	(bad)  
   1400219a5:	rol    BYTE PTR [rax+rax*8],1
   1400219a8:	add    dl,BYTE PTR [rax+0x0]
   1400219ab:	add    BYTE PTR [rax+0x480000a6],dh
   1400219b1:	add    BYTE PTR [rax],al
   1400219b3:	add    BYTE PTR [rcx],al
   1400219b5:	clts   
   1400219b7:	add    BYTE PTR [rdi],cl
   1400219b9:	adc    DWORD PTR fs:[rax],eax
   1400219bc:	sysenter 
   1400219be:	adc    BYTE PTR [rax],al
   1400219c0:	psrld  mm1,QWORD PTR [rbx]
   1400219c3:	jo     0x1400219c6
   1400219c5:	adc    al,0x8
   1400219c7:	add    BYTE PTR [rsp+riz*2],dl
   1400219ca:	(bad)  
   1400219cb:	add    BYTE PTR [rsp+rdx*2],dl
   1400219ce:	or     eax,0xc341400
   1400219d3:	add    BYTE PTR [rdx+rdx*4],dl
   1400219d6:	adc    BYTE PTR [rax+0x1],dh
   1400219d9:	clts   
   1400219db:	add    BYTE PTR [rdi],cl
   1400219dd:	or     DWORD PTR fs:[rax],eax
   1400219e0:	sysenter 
   1400219e2:	or     BYTE PTR [rax],al
   1400219e4:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400219e7:	jo     0x1400219ea
   1400219e9:	clts   
   1400219eb:	add    BYTE PTR [rdi],cl
   1400219ed:	push   rsp
   1400219ee:	or     al,BYTE PTR [rax]
   1400219f0:	sysenter 
   1400219f2:	or     DWORD PTR [rax],eax
   1400219f4:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400219f7:	jo     0x1400219fa
   1400219f9:	sbb    DWORD PTR [rdx],ecx
   1400219fb:	add    BYTE PTR [rcx],bl
   1400219fd:	je     0x140021a0a
   1400219ff:	add    BYTE PTR [rcx],bl
   140021a01:	or     al,BYTE PTR fs:[rax]
   140021a04:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140021a08:	sbb    DWORD PTR [rax+rcx*1],esi
   140021a0b:	add    BYTE PTR [rcx],bl
   140021a0d:	push   rdx
   140021a0e:	adc    eax,0xd2d19c0
   140021a13:	xor    eax,0x10741f
   140021a18:	sbb    esp,DWORD PTR [rdi+rcx*1+0x0]
   140021a1c:	(bad)  
   140021a1d:	xor    al,0xe
   140021a1f:	add    BYTE PTR [rbx],dl
   140021a21:	xor    ecx,DWORD PTR [rsi]
   140021a23:	jb     0x140021a2f
   140021a25:	lock or al,ah
   140021a28:	(bad)  
   140021a29:	rol    BYTE PTR [rax+rax*8],1
   140021a2c:	add    dl,BYTE PTR [rax+0x0]
   140021a2f:	add    BYTE PTR [rax+0x300000a6],dh
   140021a35:	add    BYTE PTR [rax],al
   140021a37:	add    BYTE PTR [rcx],al
   140021a39:	(bad)  
   140021a3a:	add    al,BYTE PTR [rax]
   140021a3c:	(bad)  
   140021a3d:	xor    cl,BYTE PTR [rdx]
   140021a3f:	xor    BYTE PTR [rcx],al
   140021a41:	add    al,0x1
   140021a43:	add    BYTE PTR [rdx+rax*4],al
   140021a46:	add    BYTE PTR [rax],al
   140021a48:	add    DWORD PTR [rdx],edx
   140021a4a:	(bad)  
   140021a4b:	add    BYTE PTR [rdx],dl
   140021a4d:	(bad)  
   140021a4e:	adc    eax,DWORD PTR [rax]
   140021a50:	adc    dh,BYTE PTR [rcx+rdx*1+0x0]
   140021a54:	adc    dl,dl
   140021a56:	or     edx,DWORD PTR [rax-0x40]
   140021a59:	sbb    al,BYTE PTR [rdx]
	...
   140021a63:	add    BYTE PTR [rax+0x1e],bl
   140021a66:	add    al,BYTE PTR [rax]
   140021a68:	add    BYTE PTR [rax+0x1e000001],ah
   140021a6e:	add    al,BYTE PTR [rax]
	...
   140021a78:	(bad)  
   140021a79:	(bad)  
   140021a7a:	add    al,BYTE PTR [rax]
   140021a7c:	rex movabs ds:0x21ae80001,eax
   140021a86:	add    BYTE PTR [rax],al
   140021a88:	add    BYTE PTR [rax],al
   140021a8a:	add    BYTE PTR [rax],al
   140021a8c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140021a8d:	(bad)  
   140021a8e:	add    al,BYTE PTR [rax]
   140021a90:	sub    BYTE PTR [rax+0x1af80001],ah
   140021a96:	add    al,BYTE PTR [rax]
	...
   140021aa0:	mov    al,0x25
   140021aa2:	add    al,BYTE PTR [rax]
   140021aa4:	cmp    BYTE PTR [rax+0x1],ah
	...
   140021abe:	add    BYTE PTR [rax],al
   140021ac0:	sub    al,0x1e
   140021ac2:	add    al,BYTE PTR [rax]
   140021ac4:	add    BYTE PTR [rax],al
   140021ac6:	add    BYTE PTR [rax],al
   140021ac8:	cmp    bl,BYTE PTR [rsi]
   140021aca:	add    al,BYTE PTR [rax]
   140021acc:	add    BYTE PTR [rax],al
   140021ace:	add    BYTE PTR [rax],al
   140021ad0:	rex.WX (bad) 
   140021ad2:	add    al,BYTE PTR [rax]
   140021ad4:	add    BYTE PTR [rax],al
   140021ad6:	add    BYTE PTR [rax],al
   140021ad8:	sbb    BYTE PTR [rsi],bl
   140021ada:	add    al,BYTE PTR [rax]
	...
   140021ae8:	mov    ds,WORD PTR [rsi]
   140021aea:	add    al,BYTE PTR [rax]
	...
   140021af8:	movabs ds:0xb400000000000225,al
   140021b01:	(bad)  
   140021b02:	add    al,BYTE PTR [rax]
   140021b04:	add    BYTE PTR [rax],al
   140021b06:	add    BYTE PTR [rax],al
   140021b08:	(bad)  
   140021b09:	(bad)  
   140021b0a:	add    al,BYTE PTR [rax]
   140021b0c:	add    BYTE PTR [rax],al
   140021b0e:	add    BYTE PTR [rax],al
   140021b10:	fcomp  QWORD PTR [rsi]
   140021b12:	add    al,BYTE PTR [rax]
   140021b14:	add    BYTE PTR [rax],al
   140021b16:	add    BYTE PTR [rax],al
   140021b18:	neg    BYTE PTR [rsi]
   140021b1a:	add    al,BYTE PTR [rax]
   140021b1c:	add    BYTE PTR [rax],al
   140021b1e:	add    BYTE PTR [rax],al
   140021b20:	adc    bl,BYTE PTR [rdi]
   140021b22:	add    al,BYTE PTR [rax]
   140021b24:	add    BYTE PTR [rax],al
   140021b26:	add    BYTE PTR [rax],al
   140021b28:	(bad)  
   140021b29:	(bad)  
   140021b2a:	add    al,BYTE PTR [rax]
   140021b2c:	add    BYTE PTR [rax],al
   140021b2e:	add    BYTE PTR [rax],al
   140021b30:	xor    BYTE PTR [rdi],bl
   140021b32:	add    al,BYTE PTR [rax]
   140021b34:	add    BYTE PTR [rax],al
   140021b36:	add    BYTE PTR [rax],al
   140021b38:	rex (bad) 
   140021b3a:	add    al,BYTE PTR [rax]
   140021b3c:	add    BYTE PTR [rax],al
   140021b3e:	add    BYTE PTR [rax],al
   140021b40:	rex.WRX (bad) 
   140021b42:	add    al,BYTE PTR [rax]
   140021b44:	add    BYTE PTR [rax],al
   140021b46:	add    BYTE PTR [rax],al
   140021b48:	fs (bad) 
   140021b4a:	add    al,BYTE PTR [rax]
   140021b4c:	add    BYTE PTR [rax],al
   140021b4e:	add    BYTE PTR [rax],al
   140021b50:	jp     0x140021b71
   140021b52:	add    al,BYTE PTR [rax]
   140021b54:	add    BYTE PTR [rax],al
   140021b56:	add    BYTE PTR [rax],al
   140021b58:	mov    WORD PTR [rdi],ds
   140021b5a:	add    al,BYTE PTR [rax]
   140021b5c:	add    BYTE PTR [rax],al
   140021b5e:	add    BYTE PTR [rax],al
   140021b60:	sahf   
   140021b61:	(bad)  
   140021b62:	add    al,BYTE PTR [rax]
   140021b64:	add    BYTE PTR [rax],al
   140021b66:	add    BYTE PTR [rax],al
   140021b68:	mov    dl,0x1f
   140021b6a:	add    al,BYTE PTR [rax]
   140021b6c:	add    BYTE PTR [rax],al
   140021b6e:	add    BYTE PTR [rax],al
   140021b70:	ret    0x21f
   140021b73:	add    BYTE PTR [rax],al
   140021b75:	add    BYTE PTR [rax],al
   140021b77:	add    dh,dl
   140021b79:	(bad)  
   140021b7a:	add    al,BYTE PTR [rax]
   140021b7c:	add    BYTE PTR [rax],al
   140021b7e:	add    BYTE PTR [rax],al
   140021b80:	call   0x140021da4
   140021b85:	add    BYTE PTR [rax],al
   140021b87:	add    al,bh
   140021b89:	(bad)  
   140021b8a:	add    al,BYTE PTR [rax]
   140021b8c:	add    BYTE PTR [rax],al
   140021b8e:	add    BYTE PTR [rax],al
   140021b90:	add    al,0x20
   140021b92:	add    al,BYTE PTR [rax]
   140021b94:	add    BYTE PTR [rax],al
   140021b96:	add    BYTE PTR [rax],al
   140021b98:	sbb    BYTE PTR [rax],ah
   140021b9a:	add    al,BYTE PTR [rax]
   140021b9c:	add    BYTE PTR [rax],al
   140021b9e:	add    BYTE PTR [rax],al
   140021ba0:	and    BYTE PTR es:[rdx],al
   140021ba3:	add    BYTE PTR [rax],al
   140021ba5:	add    BYTE PTR [rax],al
   140021ba7:	add    BYTE PTR [rsi],dh
   140021ba9:	and    BYTE PTR [rdx],al
   140021bab:	add    BYTE PTR [rax],al
   140021bad:	add    BYTE PTR [rax],al
   140021baf:	add    BYTE PTR [rax+0x20],cl
   140021bb2:	add    al,BYTE PTR [rax]
   140021bb4:	add    BYTE PTR [rax],al
   140021bb6:	add    BYTE PTR [rax],al
   140021bb8:	(bad)  
   140021bb9:	and    BYTE PTR [rdx],al
   140021bbb:	add    BYTE PTR [rax],al
   140021bbd:	add    BYTE PTR [rax],al
   140021bbf:	add    BYTE PTR [rax+0x20],bh
   140021bc2:	add    al,BYTE PTR [rax]
   140021bc4:	add    BYTE PTR [rax],al
   140021bc6:	add    BYTE PTR [rax],al
   140021bc8:	test   BYTE PTR [rax],ah
   140021bca:	add    al,BYTE PTR [rax]
   140021bcc:	add    BYTE PTR [rax],al
   140021bce:	add    BYTE PTR [rax],al
   140021bd0:	xchg   edx,eax
   140021bd1:	and    BYTE PTR [rdx],al
   140021bd3:	add    BYTE PTR [rax],al
   140021bd5:	add    BYTE PTR [rax],al
   140021bd7:	add    BYTE PTR [rsi+0x220],bl
   140021bdd:	add    BYTE PTR [rax],al
   140021bdf:	add    BYTE PTR [rsi+0x220],dh
   140021be5:	add    BYTE PTR [rax],al
   140021be7:	add    al,dl
   140021be9:	and    BYTE PTR [rdx],al
   140021beb:	add    BYTE PTR [rax],al
   140021bed:	add    BYTE PTR [rax],al
   140021bef:	add    al,ah
   140021bf1:	and    BYTE PTR [rdx],al
   140021bf3:	add    BYTE PTR [rax],al
   140021bf5:	add    BYTE PTR [rax],al
   140021bf7:	add    ah,dh
   140021bf9:	and    BYTE PTR [rdx],al
   140021bfb:	add    BYTE PTR [rax],al
   140021bfd:	add    BYTE PTR [rax],al
   140021bff:	add    BYTE PTR [rdx],cl
   140021c01:	and    DWORD PTR [rdx],eax
   140021c03:	add    BYTE PTR [rax],al
   140021c05:	add    BYTE PTR [rax],al
   140021c07:	add    BYTE PTR [rax],ah
   140021c09:	and    DWORD PTR [rdx],eax
   140021c0b:	add    BYTE PTR [rax],al
   140021c0d:	add    BYTE PTR [rax],al
   140021c0f:	add    BYTE PTR [rsi],ch
   140021c11:	and    DWORD PTR [rdx],eax
   140021c13:	add    BYTE PTR [rax],al
   140021c15:	add    BYTE PTR [rax],al
   140021c17:	add    BYTE PTR [rcx+riz*1+0x2],al
   140021c1b:	add    BYTE PTR [rax],al
   140021c1d:	add    BYTE PTR [rax],al
   140021c1f:	add    BYTE PTR [rcx+riz*1+0x2],dl
   140021c23:	add    BYTE PTR [rax],al
   140021c25:	add    BYTE PTR [rax],al
   140021c27:	add    BYTE PTR [rcx+riz*1+0x2],bh
   140021c2b:	add    BYTE PTR [rax],al
   140021c2d:	add    BYTE PTR [rax],al
   140021c2f:	add    BYTE PTR [rcx+riz*1+0x2],dl
   140021c36:	add    BYTE PTR [rax],al
   140021c38:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140021c39:	and    DWORD PTR [rdx],eax
   140021c3b:	add    BYTE PTR [rax],al
   140021c3d:	add    BYTE PTR [rax],al
   140021c3f:	add    BYTE PTR [rcx+riz*1+0x2],dh
   140021c46:	add    BYTE PTR [rax],al
   140021c48:	shl    BYTE PTR [rcx],1
   140021c4a:	add    al,BYTE PTR [rax]
   140021c4c:	add    BYTE PTR [rax],al
   140021c4e:	add    BYTE PTR [rax],al
   140021c50:	out    dx,al
   140021c51:	and    DWORD PTR [rdx],eax
   140021c53:	add    BYTE PTR [rax],al
   140021c55:	add    BYTE PTR [rax],al
   140021c57:	add    BYTE PTR [rdx],al
   140021c59:	and    al,BYTE PTR [rdx]
   140021c5b:	add    BYTE PTR [rax],al
   140021c5d:	add    BYTE PTR [rax],al
   140021c5f:	add    BYTE PTR [rsi],dl
   140021c61:	and    al,BYTE PTR [rdx]
   140021c63:	add    BYTE PTR [rax],al
   140021c65:	add    BYTE PTR [rax],al
   140021c67:	add    BYTE PTR [rax],dh
   140021c69:	and    al,BYTE PTR [rdx]
   140021c6b:	add    BYTE PTR [rax],al
   140021c6d:	add    BYTE PTR [rax],al
   140021c6f:	add    BYTE PTR [rdx+riz*1+0x2],al
   140021c73:	add    BYTE PTR [rax],al
   140021c75:	add    BYTE PTR [rax],al
   140021c77:	add    BYTE PTR [rax+0x22],bl
   140021c7a:	add    al,BYTE PTR [rax]
   140021c7c:	add    BYTE PTR [rax],al
   140021c7e:	add    BYTE PTR [rax],al
   140021c80:	ins    BYTE PTR es:[rdi],dx
   140021c81:	and    al,BYTE PTR [rdx]
   140021c83:	add    BYTE PTR [rax],al
   140021c85:	add    BYTE PTR [rax],al
   140021c87:	add    BYTE PTR [rdx+0x22],bh
   140021c8a:	add    al,BYTE PTR [rax]
   140021c8c:	add    BYTE PTR [rax],al
   140021c8e:	add    BYTE PTR [rax],al
   140021c90:	mov    BYTE PTR [rdx],ah
   140021c92:	add    al,BYTE PTR [rax]
   140021c94:	add    BYTE PTR [rax],al
   140021c96:	add    BYTE PTR [rax],al
   140021c98:	xchg   edx,eax
   140021c99:	and    al,BYTE PTR [rdx]
   140021c9b:	add    BYTE PTR [rax],al
   140021c9d:	add    BYTE PTR [rax],al
   140021c9f:	add    BYTE PTR [rdx+0x222],ah
   140021ca5:	add    BYTE PTR [rax],al
   140021ca7:	add    BYTE PTR [rsi+0x222],ch
   140021cad:	add    BYTE PTR [rax],al
   140021caf:	add    BYTE PTR [rdx+riz*1+0x2],bh
   140021cb6:	add    BYTE PTR [rax],al
   140021cb8:	enter  0x222,0x0
   140021cbc:	add    BYTE PTR [rax],al
   140021cbe:	add    BYTE PTR [rax],al
   140021cc0:	fsub   DWORD PTR [rdx]
   140021cc2:	add    al,BYTE PTR [rax]
   140021cc4:	add    BYTE PTR [rax],al
   140021cc6:	add    BYTE PTR [rax],al
   140021cc8:	out    dx,al
   140021cc9:	and    al,BYTE PTR [rdx]
   140021ccb:	add    BYTE PTR [rax],al
   140021ccd:	add    BYTE PTR [rax],al
   140021ccf:	add    BYTE PTR [rbx+riz*1],al
   140021cd2:	add    al,BYTE PTR [rax]
   140021cd4:	add    BYTE PTR [rax],al
   140021cd6:	add    BYTE PTR [rax],al
   140021cd8:	(bad)  
   140021cd9:	and    eax,DWORD PTR [rdx]
   140021cdb:	add    BYTE PTR [rax],al
   140021cdd:	add    BYTE PTR [rax],al
   140021cdf:	add    BYTE PTR [rax],bh
   140021ce1:	and    eax,DWORD PTR [rdx]
   140021ce3:	add    BYTE PTR [rax],al
   140021ce5:	add    BYTE PTR [rax],al
   140021ce7:	add    BYTE PTR [rdx+0x23],cl
   140021cea:	add    al,BYTE PTR [rax]
   140021cec:	add    BYTE PTR [rax],al
   140021cee:	add    BYTE PTR [rax],al
   140021cf0:	pop    rax
   140021cf1:	and    eax,DWORD PTR [rdx]
   140021cf3:	add    BYTE PTR [rax],al
   140021cf5:	add    BYTE PTR [rax],al
   140021cf7:	add    BYTE PTR [rsi+0x23],ch
   140021cfa:	add    al,BYTE PTR [rax]
   140021cfc:	add    BYTE PTR [rax],al
   140021cfe:	add    BYTE PTR [rax],al
   140021d00:	jl     0x140021d25
   140021d02:	add    al,BYTE PTR [rax]
   140021d04:	add    BYTE PTR [rax],al
   140021d06:	add    BYTE PTR [rax],al
   140021d08:	mov    ah,BYTE PTR [rbx]
   140021d0a:	add    al,BYTE PTR [rax]
   140021d0c:	add    BYTE PTR [rax],al
   140021d0e:	add    BYTE PTR [rax],al
   140021d10:	(bad)  
   140021d11:	and    eax,DWORD PTR [rdx]
   140021d13:	add    BYTE PTR [rax],al
   140021d15:	add    BYTE PTR [rax],al
   140021d17:	add    BYTE PTR [rax+0x223],dh
   140021d1d:	add    BYTE PTR [rax],al
   140021d1f:	add    dl,cl
   140021d21:	and    eax,DWORD PTR [rdx]
   140021d23:	add    BYTE PTR [rax],al
   140021d25:	add    BYTE PTR [rax],al
   140021d27:	add    dl,dl
   140021d29:	and    eax,DWORD PTR [rdx]
   140021d2b:	add    BYTE PTR [rax],al
   140021d2d:	add    BYTE PTR [rax],al
   140021d2f:	add    dl,ah
   140021d31:	and    eax,DWORD PTR [rdx]
   140021d33:	add    BYTE PTR [rax],al
   140021d35:	add    BYTE PTR [rax],al
   140021d37:	add    dl,dh
   140021d39:	and    eax,DWORD PTR [rdx]
   140021d3b:	add    BYTE PTR [rax],al
   140021d3d:	add    BYTE PTR [rax],al
   140021d3f:	add    BYTE PTR [rsp],al
   140021d42:	add    al,BYTE PTR [rax]
   140021d44:	add    BYTE PTR [rax],al
   140021d46:	add    BYTE PTR [rax],al
   140021d48:	sbb    BYTE PTR [rdx+rax*1],ah
   140021d4b:	add    BYTE PTR [rax],al
   140021d4d:	add    BYTE PTR [rax],al
   140021d4f:	add    BYTE PTR [rsi],dh
   140021d51:	and    al,0x2
   140021d53:	add    BYTE PTR [rax],al
   140021d55:	add    BYTE PTR [rax],al
   140021d57:	add    BYTE PTR [rsi+0x24],al
   140021d5a:	add    al,BYTE PTR [rax]
   140021d5c:	add    BYTE PTR [rax],al
   140021d5e:	add    BYTE PTR [rax],al
   140021d60:	push   rsp
   140021d61:	and    al,0x2
   140021d63:	add    BYTE PTR [rax],al
   140021d65:	add    BYTE PTR [rax],al
   140021d67:	add    BYTE PTR [rsp+0x2],ch
   140021d6b:	add    BYTE PTR [rax],al
   140021d6d:	add    BYTE PTR [rax],al
   140021d6f:	add    BYTE PTR [rax+0x224],al
   140021d75:	add    BYTE PTR [rax],al
   140021d77:	add    BYTE PTR [rdx+0x224],bl
   140021d7d:	add    BYTE PTR [rax],al
   140021d7f:	add    BYTE PTR [rsp+0x2],dh
   140021d86:	add    BYTE PTR [rax],al
   140021d88:	shl    BYTE PTR [rdx+rax*1],0x0
   140021d8c:	add    BYTE PTR [rax],al
   140021d8e:	add    BYTE PTR [rax],al
   140021d90:	retf   0x224
   140021d93:	add    BYTE PTR [rax],al
   140021d95:	add    BYTE PTR [rax],al
   140021d97:	add    dh,dl
   140021d99:	and    al,0x2
   140021d9b:	add    BYTE PTR [rax],al
   140021d9d:	add    BYTE PTR [rax],al
   140021d9f:	add    al,ch
   140021da1:	and    al,0x2
   140021da3:	add    BYTE PTR [rax],al
   140021da5:	add    BYTE PTR [rax],al
   140021da7:	add    ah,dh
   140021da9:	and    al,0x2
   140021dab:	add    BYTE PTR [rax],al
   140021dad:	add    BYTE PTR [rax],al
   140021daf:	add    BYTE PTR [rsi],al
   140021db1:	and    eax,0x2
   140021db6:	add    BYTE PTR [rax],al
   140021db8:	sbb    BYTE PTR [rip+0x2],ah        # 0x140021dc0
   140021dbe:	add    BYTE PTR [rax],al
   140021dc0:	and    al,0x25
   140021dc2:	add    al,BYTE PTR [rax]
   140021dc4:	add    BYTE PTR [rax],al
   140021dc6:	add    BYTE PTR [rax],al
   140021dc8:	xor    al,0x25
   140021dca:	add    al,BYTE PTR [rax]
   140021dcc:	add    BYTE PTR [rax],al
   140021dce:	add    BYTE PTR [rax],al
   140021dd0:	rex.R and eax,0x2
   140021dd6:	add    BYTE PTR [rax],al
   140021dd8:	push   rsp
   140021dd9:	and    eax,0x2
   140021dde:	add    BYTE PTR [rax],al
   140021de0:	and    ax,0x2
   140021de4:	add    BYTE PTR [rax],al
   140021de6:	add    BYTE PTR [rax],al
   140021de8:	and    BYTE PTR [rip+0x2],0x0        # 0x140021df1
   140021def:	add    BYTE PTR [rax+0x225],dl
	...
   140021dfd:	add    BYTE PTR [rax],al
   140021dff:	add    BYTE PTR [rsi+0x1e],ah
   140021e02:	add    al,BYTE PTR [rax]
   140021e04:	add    BYTE PTR [rax],al
   140021e06:	add    BYTE PTR [rax],al
   140021e08:	je     0x140021e28
   140021e0a:	add    al,BYTE PTR [rax]
	...
   140021e18:	ins    DWORD PTR es:[rdi],dx
   140021e19:	add    dl,BYTE PTR [rdx+0x65]
   140021e1c:	addr32 push rcx
   140021e1e:	jne    0x140021e85
   140021e20:	jb     0x140021e9b
   140021e22:	push   rsi
   140021e23:	(bad)  
   140021e24:	ins    BYTE PTR es:[rdi],dx
   140021e25:	jne    0x140021e8c
   140021e27:	rex.RB js 0x140021e6b
   140021e2a:	add    BYTE PTR [rax],al
   140021e2c:	xor    BYTE PTR [rdx],al
   140021e2e:	push   rdx
   140021e2f:	gs rex.XB ins BYTE PTR es:[edi],dx
   140021e33:	outs   dx,DWORD PTR ds:[rsi]
   140021e34:	jae    0x140021e9b
   140021e36:	rex.WXB
   140021e37:	gs jns 0x140021e3a
   140021e3a:	(bad)  
   140021e3b:	add    dl,BYTE PTR [rdx+0x65]
   140021e3e:	addr32 rex.WRXB jo 0x140021ea7
   140021e42:	outs   dx,BYTE PTR ds:[rsi]
   140021e43:	rex.WXB
   140021e44:	gs jns 0x140021e8c
   140021e47:	js     0x140021e8a
   140021e49:	add    BYTE PTR [rbp+0x2],cl
   140021e4c:	push   rdx
   140021e4d:	rex.RB outs dx,BYTE PTR gs:[esi]
   140021e51:	jne    0x140021ec0
   140021e53:	rex.WXB
   140021e54:	gs jns 0x140021e98
   140021e57:	add    BYTE PTR [rcx+0x44],al
   140021e5a:	push   rsi
   140021e5b:	push   r8
   140021e5d:	xor    rsi,QWORD PTR [r10]
   140021e60:	cs fs ins BYTE PTR es:[rdi],dx
   140021e63:	ins    BYTE PTR es:[rdi],dx
   140021e64:	add    BYTE PTR [rax],al
   140021e66:	xor    BYTE PTR [rax],al
   140021e68:	rex.XB push 0x654e7261
   140021e6e:	js     0x140021ee4
   140021e70:	rex.RB js 0x140021eb4
   140021e73:	add    BYTE PTR [rdx],dl
   140021e75:	add    cl,BYTE PTR [rbp+0x65]
   140021e78:	jae    0x140021eed
   140021e7a:	(bad)  
   140021e7b:	rex.X outs dx,DWORD PTR gs:[esi]
   140021e7f:	js     0x140021ec2
   140021e81:	add    BYTE PTR [rbp+0x53],dl
   140021e84:	rex.RB push r10
   140021e86:	xor    esi,DWORD PTR [rdx]
   140021e88:	cs fs ins BYTE PTR es:[rdi],dx
   140021e8b:	ins    BYTE PTR es:[rdi],dx
   140021e8c:	add    BYTE PTR [rax],al
   140021e8e:	jl     0x140021e90
   140021e90:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140021e92:	imul   esi,DWORD PTR [rbx+rax*2+0x6f],0x6e6f6d6d
   140021e9a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140021e9c:	outs   dx,BYTE PTR ds:[rsi]
   140021e9d:	je     0x140021f11
   140021e9f:	outs   dx,DWORD PTR ds:[rsi]
   140021ea0:	ins    BYTE PTR es:[rdi],dx
   140021ea1:	jae    0x140021ee8
   140021ea3:	js     0x140021ea5
   140021ea5:	add    BYTE PTR [rbx+0x4f],al
   140021ea8:	rex.WRB
   140021ea9:	rex.XB push r12
   140021eab:	xor    r14,QWORD PTR [rdx]
   140021eae:	cs fs ins BYTE PTR es:[rdi],dx
   140021eb1:	ins    BYTE PTR es:[rdi],dx
   140021eb2:	add    BYTE PTR [rax],al
   140021eb4:	mov    WORD PTR [rcx],es
   140021eb6:	rex.RXB
   140021eb7:	gs je  0x140021efd
   140021eba:	outs   dx,DWORD PTR ds:[rsi]
   140021ebb:	ins    DWORD PTR es:[rdi],dx
   140021ebc:	ins    DWORD PTR es:[rdi],dx
   140021ebd:	(bad)  
   140021ebe:	outs   dx,BYTE PTR ds:[rsi]
   140021ebf:	imul   r13,QWORD PTR fs:[rsi+0x65],0x2190041
   140021ec8:	rex.RXB
   140021ec9:	gs je  0x140021f19
   140021ecc:	outs   dx,DWORD PTR ds:[rsi]
   140021ecd:	fs jne 0x140021f3c
   140021ed0:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   140021eda:	add    BYTE PTR [rax],al
   140021edc:	test   eax,0x65755103
   140021ee1:	jb     0x140021f5c
   140021ee3:	push   rax
   140021ee4:	gs jb  0x140021f4d
   140021ee7:	outs   dx,DWORD PTR ds:[rsi]
   140021ee8:	jb     0x140021f57
   140021eea:	(bad)  
   140021eeb:	outs   dx,BYTE PTR ds:[rsi]
   140021eec:	movsxd esp,DWORD PTR [rbp+0x43]
   140021eef:	outs   dx,DWORD PTR ds:[rsi]
   140021ef0:	jne    0x140021f60
   140021ef2:	je     0x140021f59
   140021ef4:	jb     0x140021ef6
   140021ef6:	stos   BYTE PTR es:[rdi],al
   140021ef7:	add    edx,DWORD PTR [rcx+0x75]
   140021efa:	gs jb  0x140021f76
   140021efd:	push   rax
   140021efe:	gs jb  0x140021f67
   140021f01:	outs   dx,DWORD PTR ds:[rsi]
   140021f02:	jb     0x140021f71
   140021f04:	(bad)  
   140021f05:	outs   dx,BYTE PTR ds:[rsi]
   140021f06:	movsxd esp,DWORD PTR [rbp+0x46]
   140021f09:	jb     0x140021f70
   140021f0b:	jno    0x140021f82
   140021f0d:	outs   dx,BYTE PTR gs:[rsi]
   140021f0f:	movsxd edi,DWORD PTR [rcx+0x0]
   140021f12:	add    rcx,QWORD PTR [rdi+r13*2+0x63]
   140021f17:	(bad)  
   140021f18:	ins    BYTE PTR es:[rdi],dx
   140021f19:	rex.RX jb 0x140021f81
   140021f1c:	add    BYTE PTR gs:[rbx+0x1],ah
   140021f20:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140021f22:	jb     0x140021f91
   140021f24:	(bad)  
   140021f25:	je     0x140021f74
   140021f27:	gs jae 0x140021f9d
   140021f2a:	(bad)  
   140021f2b:	add    BYTE PTR gs:[r8d],al
   140021f30:	or     BYTE PTR [rdx],al
   140021f32:	rex.RXB
   140021f33:	gs je  0x140021f82
   140021f36:	(bad)  
   140021f37:	jae    0x140021fad
   140021f39:	rex.RB jb 0x140021fae
   140021f3c:	outs   dx,DWORD PTR ds:[rsi]
   140021f3d:	jb     0x140021f3f
   140021f3f:	add    BYTE PTR [rdx+0x0],dl
   140021f42:	rex.XB ins BYTE PTR es:[rdi],dx
   140021f44:	outs   dx,DWORD PTR ds:[rsi]
   140021f45:	jae    0x140021fac
   140021f47:	rex.W (bad) 
   140021f49:	outs   dx,BYTE PTR ds:[rsi]
   140021f4a:	fs ins BYTE PTR es:[rdi],dx
   140021f4c:	gs add dh,ah
   140021f4f:	add    DWORD PTR [rdi+0x65],eax
   140021f52:	je     0x140021f99
   140021f54:	js     0x140021fbf
   140021f56:	je     0x140021f9b
   140021f58:	outs   dx,DWORD PTR ds:[rsi]
   140021f59:	fs gs push rax
   140021f5c:	jb     0x140021fcd
   140021f5e:	movsxd esp,DWORD PTR [rbp+0x73]
   140021f61:	jae    0x140021f63
   140021f63:	add    BYTE PTR [rax],cl
   140021f65:	add    eax,0x74696157
   140021f6a:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140021f6c:	jb     0x140021fc1
   140021f6e:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   140021f75:	push   0x65
   140021f77:	movsxd esi,DWORD PTR [rax+rax*1-0x5c]
   140021f7b:	add    BYTE PTR [rbx+0x72],al
   140021f7e:	gs (bad) 
   140021f80:	je     0x140021fe7
   140021f82:	push   rax
   140021f83:	jb     0x140021ff4
   140021f85:	movsxd esp,DWORD PTR [rbp+0x73]
   140021f88:	jae    0x140021fcb
   140021f8a:	add    BYTE PTR [rax],al
   140021f8c:	rex.WR add r8b,BYTE PTR [rdi+0x65]
   140021f90:	je     0x140021fe2
   140021f92:	jb     0x140022003
   140021f94:	movsxd eax,DWORD PTR [rcx+0x64]
   140021f97:	fs jb  0x140021fff
   140021f9a:	jae    0x14002200f
   140021f9c:	add    BYTE PTR [rax],al
   140021f9e:	sbb    eax,DWORD PTR [rdx]
   140021fa0:	rex.RXB
   140021fa1:	gs je  0x140021ff1
   140021fa4:	outs   dx,DWORD PTR ds:[rsi]
   140021fa5:	fs jne 0x140022014
   140021fa8:	gs rex.W (bad) 
   140021fab:	outs   dx,BYTE PTR ds:[rsi]
   140021fac:	fs ins BYTE PTR es:[rdi],dx
   140021fae:	add    BYTE PTR gs:[r8],al
   140021fb2:	add    ecx,DWORD PTR ds:[rdi+rbp*2+0x61]
   140021fb7:	imul   r12,QWORD PTR fs:[rdx+0x72],0x41797261
   140021fc0:	add    BYTE PTR [rax],al
   140021fc2:	out    0x1,eax
   140021fc4:	rex.RXB
   140021fc5:	gs je  0x14002200d
   140021fc8:	js     0x140022033
   140021fca:	je     0x14002200f
   140021fcc:	outs   dx,DWORD PTR ds:[rsi]
   140021fcd:	fs gs push rsp
   140021fd0:	push   0x64616572
   140021fd5:	add    BYTE PTR [rax],bh
   140021fd7:	add    DWORD PTR [rsi+0x69],eax
   140021fda:	outs   dx,BYTE PTR ds:[rsi]
   140021fdb:	rex.RX imul r14d,DWORD PTR fs:[rdx+0x73],0x6c694674
   140021fe4:	add    BYTE PTR gs:[r8],al
   140021fe8:	add    QWORD PTR [r14+0x69],rax
   140021fec:	outs   dx,BYTE PTR ds:[rsi]
   140021fed:	fs rex.WRX
   140021fef:	gs js  0x140022066
   140021ff2:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x46013400
   140021ffb:	imul   ebp,DWORD PTR [rsi+0x64],0x736f6c43
   140022002:	add    BYTE PTR gs:[rsi],bl
   140022005:	add    al,BYTE PTR [rdi+0x65]
   140022008:	je     0x140022057
   14002200a:	outs   dx,DWORD PTR ds:[rsi]
   14002200b:	fs jne 0x14002207a
   14002200e:	gs rex.W (bad) 
   140022011:	outs   dx,BYTE PTR ds:[rsi]
   140022012:	fs ins BYTE PTR es:[rdi],dx
   140022014:	gs push rdi
   140022016:	add    BYTE PTR [rax],al
   140022018:	(bad)  
   140022019:	add    DWORD PTR [rbp+0x78],eax
   14002201c:	imul   esi,DWORD PTR [rax+rdx*2+0x72],0x7365636f
   140022024:	jae    0x140022026
   140022026:	retf   
   140022027:	add    BYTE PTR [rbp+riz*2+0x63],al
   14002202b:	outs   dx,DWORD PTR ds:[rsi]
   14002202c:	fs gs push rax
   14002202f:	outs   dx,DWORD PTR ds:[rsi]
   140022030:	imul   ebp,DWORD PTR [rsi+0x74],0x6a007265
   140022037:	add    al,BYTE PTR [rdi+0x65]
   14002203a:	je     0x14002208f
   14002203c:	je     0x14002209f
   14002203e:	jb     0x1400220b4
   140022040:	jne    0x1400220b2
   140022042:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140022044:	outs   dx,WORD PTR ds:[rsi]
   140022046:	push   rdi
   140022047:	add    dl,dh
   140022049:	add    BYTE PTR [rbp+0x6e],al
   14002204c:	je     0x1400220b3
   14002204e:	jb     0x140022093
   140022050:	jb     0x1400220bb
   140022052:	je     0x1400220bd
   140022054:	movsxd esp,DWORD PTR [rcx+0x6c]
   140022057:	push   rbx
   140022058:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14002205d:	outs   dx,BYTE PTR ds:[rsi]
   14002205e:	add    BYTE PTR [rax],al
   140022060:	cmp    eax,DWORD PTR [rbx]
   140022062:	rex.WR
   140022063:	gs (bad) 
   140022065:	jbe    0x1400220cc
   140022067:	rex.XB jb 0x1400220d3
   14002206a:	je     0x1400220d5
   14002206c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002206f:	push   rbx
   140022070:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140022075:	outs   dx,BYTE PTR ds:[rsi]
   140022076:	add    BYTE PTR [rax],al
   140022078:	rol    DWORD PTR [rdx],cl
   14002207a:	rex.W
   14002207b:	gs (bad) 
   14002207d:	jo     0x1400220c0
   14002207f:	ins    BYTE PTR es:[rdi],dx
   140022080:	ins    BYTE PTR es:[rdi],dx
   140022081:	outs   dx,DWORD PTR ds:[rsi]
   140022082:	movsxd eax,DWORD PTR [rax]
   140022084:	fiadd  DWORD PTR [rdx]
   140022086:	rex.W
   140022087:	gs (bad) 
   140022089:	jo     0x1400220dd
   14002208b:	gs rex.B ins BYTE PTR es:[rdi],dx
   14002208e:	ins    BYTE PTR es:[rdi],dx
   14002208f:	outs   dx,DWORD PTR ds:[rsi]
   140022090:	movsxd eax,DWORD PTR [rax]
   140022092:	xlat   BYTE PTR ds:[rbx]
   140022093:	add    cl,BYTE PTR [rax+0x65]
   140022096:	(bad)  
   140022097:	jo     0x1400220df
   140022099:	jb     0x140022100
   14002209b:	add    BYTE PTR gs:[rax],al
   14002209e:	sub    eax,DWORD PTR [rcx]
   1400220a0:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x54656d69
   1400220a9:	outs   dx,DWORD PTR ds:[rsi]
   1400220aa:	push   rbx
   1400220ab:	jns    0x140022120
   1400220ad:	je     0x140022114
   1400220af:	ins    DWORD PTR es:[rdi],dx
   1400220b0:	push   rsp
   1400220b1:	imul   ebp,DWORD PTR [rbp+0x65],0x12a0000
   1400220b8:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x54656d69
   1400220c1:	outs   dx,DWORD PTR ds:[rsi]
   1400220c2:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400220c4:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400220c7:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x656d69
   1400220d0:	fld    DWORD PTR [rcx]
   1400220d2:	rex.RXB
   1400220d3:	gs je  0x14002211a
   1400220d6:	jb     0x140022141
   1400220d8:	jbe    0x14002213f
   1400220da:	push   rsp
   1400220db:	jns    0x14002214d
   1400220dd:	add    BYTE PTR gs:[r9],dil
   1400220e1:	add    DWORD PTR [rsi+0x69],eax
   1400220e4:	outs   dx,BYTE PTR ds:[rsi]
   1400220e5:	rex.RX imul r14d,DWORD PTR fs:[rdx+0x73],0x6c694674
   1400220ee:	gs rex.RB js 0x140022133
   1400220f2:	add    BYTE PTR [rax],al
   1400220f4:	imul   eax,DWORD PTR [rbx],0x746c754d
   1400220fa:	imul   eax,DWORD PTR [rdx+0x79],0x6f546574
   140022101:	push   rdi
   140022102:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   14002210a:	in     al,dx
   14002210b:	add    DWORD PTR [rdi+0x65],eax
   14002210e:	je     0x140022156
   140022110:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   140022118:	(bad)  
   140022119:	jne    0x14002218f
   14002211b:	gs jae 0x14002215f
   14002211e:	add    BYTE PTR [rax],al
   140022120:	and    BYTE PTR [rcx],al
   140022122:	rex.RB js 0x14002218e
   140022125:	je     0x14002217b
   140022127:	push   0x64616572
   14002212c:	add    BYTE PTR [rax],al
   14002212e:	retf   
   14002212f:	add    DWORD PTR [rdi+0x65],eax
   140022132:	je     0x140022177
   140022134:	jne    0x1400221a8
   140022136:	jb     0x14002219d
   140022138:	outs   dx,BYTE PTR ds:[rsi]
   140022139:	je     0x14002218f
   14002213b:	push   0x64616572
   140022140:	rex.WB
   140022141:	add    BYTE PTR fs:[rax],al
   140022144:	mov    ah,0x0
   140022146:	rex.XB jb 0x1400221ae
   140022149:	(bad)  
   14002214a:	je     0x1400221b1
   14002214c:	push   rsp
   14002214d:	push   0x64616572
   140022152:	add    BYTE PTR [rax],al
   140022154:	jmp    0x140022158
   140022156:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140022158:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140022160:	rex.XB jb 0x1400221cc
   140022163:	je     0x1400221ce
   140022165:	movsxd esp,DWORD PTR [rcx+0x6c]
   140022168:	push   rbx
   140022169:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14002216e:	outs   dx,BYTE PTR ds:[rsi]
   14002216f:	rex.B outs dx,BYTE PTR ds:[rsi]
   140022171:	fs push rbx
   140022173:	jo     0x1400221de
   140022175:	outs   dx,BYTE PTR ds:[rsi]
   140022176:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140022178:	jne    0x1400221e8
   14002217a:	je     0x14002217c
   14002217c:	rol    BYTE PTR [rax],cl
   14002217e:	rex.R
   14002217f:	gs ins BYTE PTR es:[rdi],dx
   140022181:	gs je  0x1400221e9
   140022184:	rex.XB jb 0x1400221f0
   140022187:	je     0x1400221f2
   140022189:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002218c:	push   rbx
   14002218d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140022192:	outs   dx,BYTE PTR ds:[rsi]
   140022193:	add    dh,ch
   140022195:	add    BYTE PTR [rbp+0x6e],al
   140022198:	movsxd ebp,DWORD PTR [rdi+0x64]
   14002219b:	gs push rax
   14002219d:	outs   dx,DWORD PTR ds:[rsi]
   14002219e:	imul   ebp,DWORD PTR [rsi+0x74],0x41007265
   1400221a5:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   1400221a9:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   1400221b2:	add    BYTE PTR [rax],al
   1400221b4:	loop   0x1400221ba
   1400221b6:	push   rbp
   1400221b7:	outs   dx,BYTE PTR ds:[rsi]
   1400221b8:	push   0x6c646e61
   1400221bd:	gs fs rex.RB js 0x140022225
   1400221c2:	gs jo  0x140022239
   1400221c5:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400221cc:	gs jb  0x1400221cf
   1400221cf:	add    BYTE PTR [rbx+0x74655304],dh
   1400221d5:	push   rbp
   1400221d6:	outs   dx,BYTE PTR ds:[rsi]
   1400221d7:	push   0x6c646e61
   1400221dc:	gs fs rex.RB js 0x140022244
   1400221e1:	gs jo  0x140022258
   1400221e4:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400221eb:	gs jb  0x1400221ee
   1400221ee:	add    al,BYTE PTR [rbx]
   1400221f0:	rex.WB jae 0x140022237
   1400221f3:	gs (bad) 
   1400221f5:	jne    0x14002225e
   1400221f7:	addr32 gs jb 0x14002224b
   1400221fb:	jb     0x140022262
   1400221fd:	jae    0x140022264
   1400221ff:	outs   dx,BYTE PTR ds:[rsi]
   140022200:	je     0x140022202
   140022202:	es add al,0x52
   140022205:	je     0x140022273
   140022207:	push   rsi
   140022208:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14002220f:	outs   dx,BYTE PTR ds:[rsi]
   140022210:	ja     0x14002227b
   140022212:	outs   dx,BYTE PTR ds:[rsi]
   140022213:	add    BYTE PTR fs:[rax],al
   140022216:	(bad)  
   140022217:	add    al,0x52
   140022219:	je     0x140022287
   14002221b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14002221d:	outs   dx,DWORD PTR ds:[rsi]
   14002221e:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140022222:	jne    0x140022292
   140022224:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140022228:	outs   dx,BYTE PTR ds:[rsi]
   140022229:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14002222b:	je     0x14002229f
   14002222d:	jns    0x14002222f
   14002222f:	add    BYTE PTR [rax],bl
   140022231:	add    al,0x52
   140022233:	je     0x1400222a1
   140022235:	rex.XB (bad) 
   140022237:	jo     0x1400222ad
   140022239:	jne    0x1400222ad
   14002223b:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14002223e:	outs   dx,BYTE PTR ds:[rsi]
   14002223f:	je     0x1400222a6
   140022241:	js     0x1400222b7
   140022243:	add    dh,cl
   140022245:	add    al,0x54
   140022247:	gs jb  0x1400222b7
   14002224a:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140022251:	outs   dx,DWORD PTR ds:[rsi]
   140022252:	movsxd esp,DWORD PTR [rbp+0x73]
   140022255:	jae    0x140022257
   140022257:	add    dh,al
   140022259:	add    DWORD PTR [rdi+0x65],eax
   14002225c:	je     0x1400222a1
   14002225e:	jne    0x1400222d2
   140022260:	jb     0x1400222c7
   140022262:	outs   dx,BYTE PTR ds:[rsi]
   140022263:	je     0x1400222b5
   140022265:	jb     0x1400222d6
   140022267:	movsxd esp,DWORD PTR [rbp+0x73]
   14002226a:	jae    0x14002226c
   14002226c:	pop    rdx
   14002226d:	add    DWORD PTR [rsi+0x6c],eax
   140022270:	jae    0x1400222b9
   140022272:	gs je  0x1400222cb
   140022275:	(bad)  
   140022276:	ins    BYTE PTR es:[rdi],dx
   140022277:	jne    0x1400222de
   140022279:	add    BYTE PTR [rbx+0x1],bl
   14002227c:	rex.RX ins BYTE PTR es:[rdi],dx
   14002227e:	jae    0x1400222d3
   140022280:	gs je  0x1400222d9
   140022283:	(bad)  
   140022284:	ins    BYTE PTR es:[rdi],dx
   140022285:	jne    0x1400222ec
   140022287:	add    BYTE PTR [rcx+0x1],bl
   14002228a:	rex.RX ins BYTE PTR es:[rdi],dx
   14002228c:	jae    0x1400222d4
   14002228e:	jb     0x1400222f5
   140022290:	add    BYTE PTR gs:[rax+0x74655304],al
   140022297:	rex.WR (bad) 
   140022299:	jae    0x14002230f
   14002229b:	rex.RB jb 0x140022310
   14002229e:	outs   dx,DWORD PTR ds:[rsi]
   14002229f:	jb     0x1400222a1
   1400222a1:	add    BYTE PTR [rax+0x1],bl
   1400222a4:	rex.RX ins BYTE PTR es:[rdi],dx
   1400222a6:	jae    0x1400222e9
   1400222a8:	ins    BYTE PTR es:[rdi],dx
   1400222a9:	ins    BYTE PTR es:[rdi],dx
   1400222aa:	outs   dx,DWORD PTR ds:[rsi]
   1400222ab:	movsxd eax,DWORD PTR [rax]
   1400222ad:	add    BYTE PTR [rip+0x6c745204],ah        # 0x1ac7674b7
   1400222b3:	push   rbp
   1400222b4:	outs   dx,BYTE PTR ds:[rsi]
   1400222b5:	ja     0x140022320
   1400222b7:	outs   dx,BYTE PTR ds:[rsi]
   1400222b8:	fs rex.RB js 0x1400222bc
   1400222bc:	xor    al,0x5
   1400222be:	push   rdi
   1400222bf:	jb     0x14002232a
   1400222c1:	je     0x140022328
   1400222c3:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x6547026b
   1400222cc:	je     0x140022321
   1400222ce:	je     0x140022334
   1400222d0:	rex.W (bad) 
   1400222d2:	outs   dx,BYTE PTR ds:[rsi]
   1400222d3:	fs ins BYTE PTR es:[rdi],dx
   1400222d5:	add    BYTE PTR gs:[rax],al
   1400222d8:	sbb    al,BYTE PTR [rdx]
   1400222da:	rex.RXB
   1400222db:	gs je  0x14002232b
   1400222de:	outs   dx,DWORD PTR ds:[rsi]
   1400222df:	fs jne 0x14002234e
   1400222e2:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   1400222ec:	add    BYTE PTR [rax],al
   1400222ee:	and    BYTE PTR [rip+0x65646957],al        # 0x1a5668c4b
   1400222f4:	rex.XB push 0x6f547261
   1400222fa:	rex.WRB jne 0x140022369
   1400222fd:	je     0x140022368
   1400222ff:	rex.X jns 0x140022376
   140022302:	add    BYTE PTR gs:[rdi+0x1],ah
   140022306:	rex.RX jb 0x14002236e
   140022309:	rex.RB outs dx,BYTE PTR gs:[rsi]
   14002230c:	jbe    0x140022377
   14002230e:	jb     0x14002237f
   140022310:	outs   dx,BYTE PTR ds:[rsi]
   140022311:	ins    DWORD PTR es:[rdi],dx
   140022312:	outs   dx,BYTE PTR gs:[rsi]
   140022314:	je     0x140022369
   140022316:	je     0x14002238a
   140022318:	imul   ebp,DWORD PTR [rsi+0x67],0xe1005773
   14002231f:	add    DWORD PTR [rdi+0x65],eax
   140022322:	je     0x140022369
   140022324:	outs   dx,BYTE PTR ds:[rsi]
   140022325:	jbe    0x140022390
   140022327:	jb     0x140022398
   140022329:	outs   dx,BYTE PTR ds:[rsi]
   14002232a:	ins    DWORD PTR es:[rdi],dx
   14002232b:	outs   dx,BYTE PTR gs:[rsi]
   14002232d:	je     0x140022382
   14002232f:	je     0x1400223a3
   140022331:	imul   ebp,DWORD PTR [rsi+0x67],0x5773
   140022338:	jl     0x14002233e
   14002233a:	push   rbx
   14002233b:	gs je  0x140022386
   14002233e:	(bad)  
   14002233f:	outs   dx,BYTE PTR ds:[rsi]
   140022340:	fs ins BYTE PTR es:[rdi],dx
   140022342:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140022345:	jne    0x1400223b5
   140022347:	je     0x140022349
   140022349:	add    dl,bh
   14002234b:	add    DWORD PTR [rdi+0x65],eax
   14002234e:	je     0x140022396
   140022350:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   140022358:	fild   DWORD PTR [rdx]
   14002235a:	rex.W
   14002235b:	gs (bad) 
   14002235d:	jo     0x1400223b2
   14002235f:	gs je  0x1400223ab
   140022362:	outs   dx,BYTE PTR ds:[rsi]
   140022363:	outs   dx,WORD PTR ds:[rsi]
   140022365:	jb     0x1400223d4
   140022367:	(bad)  
   140022368:	je     0x1400223d3
   14002236a:	outs   dx,DWORD PTR ds:[rsi]
   14002236b:	outs   dx,BYTE PTR ds:[rsi]
   14002236c:	add    BYTE PTR [rax],al
   14002236e:	stos   BYTE PTR es:[rdi],al
   14002236f:	add    al,BYTE PTR [rdi+0x65]
   140022372:	je     0x1400223ca
   140022374:	gs jb  0x1400223ea
   140022377:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d50000
   14002237e:	rex.W
   14002237f:	gs (bad) 
   140022381:	jo     0x1400223c6
   140022383:	jb     0x1400223ea
   140022385:	(bad)  
   140022386:	je     0x1400223ed
   140022388:	add    BYTE PTR [rax],al
   14002238a:	(bad)  
   14002238b:	add    al,BYTE PTR [rdi+0x65]
   14002238e:	je     0x1400223e4
   140022390:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140022397:	je     0x140022399
   140022399:	add    bh,al
   14002239b:	add    DWORD PTR [rdi+0x65],eax
   14002239e:	je     0x1400223e3
   1400223a0:	jne    0x140022414
   1400223a2:	jb     0x140022409
   1400223a4:	outs   dx,BYTE PTR ds:[rsi]
   1400223a5:	je     0x1400223f7
   1400223a7:	jb     0x140022418
   1400223a9:	movsxd esp,DWORD PTR [rbp+0x73]
   1400223ac:	jae    0x1400223f7
   1400223ae:	add    BYTE PTR fs:[rax+0x74654702],al
   1400223b5:	push   rbx
   1400223b6:	jns    0x14002242b
   1400223b8:	je     0x14002241f
   1400223ba:	ins    DWORD PTR es:[rdi],dx
   1400223bb:	push   rsp
   1400223bc:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   1400223c3:	ins    BYTE PTR es:[rdi],dx
   1400223c4:	gs push rsp
   1400223c6:	imul   ebp,DWORD PTR [rbp+0x65],0x5304c000
   1400223cd:	ins    BYTE PTR es:[rdi],dx
   1400223ce:	gs gs jo 0x1400223d2
   1400223d2:	xchg   esp,eax
   1400223d3:	add    al,0x53
   1400223d5:	gs je  0x14002242b
   1400223d8:	je     0x14002243e
   1400223da:	rex.W (bad) 
   1400223dc:	outs   dx,BYTE PTR ds:[rsi]
   1400223dd:	fs ins BYTE PTR es:[rdi],dx
   1400223df:	add    BYTE PTR gs:[rax],al
   1400223e2:	movabs al,ds:0x736e6f4374654701
   1400223eb:	outs   dx,DWORD PTR ds:[rsi]
   1400223ec:	ins    BYTE PTR es:[rdi],dx
   1400223ed:	gs rex.XB push r8
   1400223f0:	add    BYTE PTR [rax],al
   1400223f2:	mov    dl,0x1
   1400223f4:	rex.RXB
   1400223f5:	gs je  0x14002243b
   1400223f8:	outs   dx,DWORD PTR ds:[rsi]
   1400223f9:	outs   dx,BYTE PTR ds:[rsi]
   1400223fa:	jae    0x14002246b
   1400223fc:	ins    BYTE PTR es:[rdi],dx
   1400223fd:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140022400:	fs add BYTE PTR gs:[rax],al
   140022404:	inc    DWORD PTR [rcx]
   140022406:	rex.RXB
   140022407:	gs je  0x140022450
   14002240a:	jne    0x140022478
   14002240c:	ins    BYTE PTR es:[rdi],dx
   14002240d:	push   rax
   14002240e:	(bad)  
   14002240f:	je     0x140022479
   140022411:	rex.WRX (bad) 
   140022413:	ins    DWORD PTR es:[rdi],dx
   140022414:	add    BYTE PTR gs:[r8],al
   140022418:	repz add DWORD PTR [rdi+0x65],eax
   14002241c:	je     0x140022464
   14002241e:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x726f666e
   140022426:	ins    DWORD PTR es:[rdi],dx
   140022427:	(bad)  
   140022428:	je     0x140022493
   14002242a:	outs   dx,DWORD PTR ds:[rsi]
   14002242b:	outs   dx,BYTE PTR ds:[rsi]
   14002242c:	rex.X jns 0x140022477
   14002242f:	(bad)  
   140022430:	outs   dx,BYTE PTR ds:[rsi]
   140022431:	fs ins BYTE PTR es:[rdi],dx
   140022433:	add    BYTE PTR gs:[rax],al
   140022436:	pop    QWORD PTR [rbx]
   140022438:	push   rax
   140022439:	gs imul ecx,DWORD PTR gs:[rsi+0x61],0x6d
   14002243f:	gs fs push rax
   140022442:	imul   esi,DWORD PTR [rax+0x65],0x43008800
   140022449:	jb     0x1400224b0
   14002244b:	(bad)  
   14002244c:	je     0x1400224b3
   14002244e:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x4701c500
   140022457:	gs je  0x14002249d
   14002245a:	jne    0x1400224ce
   14002245c:	jb     0x1400224c3
   14002245e:	outs   dx,BYTE PTR ds:[rsi]
   14002245f:	je     0x1400224a5
   140022461:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   140022468:	jns    0x1400224c1
   14002246a:	add    BYTE PTR [rax],al
   14002246c:	pop    rbp
   14002246d:	add    DWORD PTR [rsi+0x6c],eax
   140022470:	jne    0x1400224e5
   140022472:	push   0x656c6946
   140022477:	rex.X jne 0x1400224e0
   14002247a:	data16 gs jb 0x1400224f1
   14002247e:	add    BYTE PTR [rax],al
   140022480:	gs add al,0x53
   140022483:	gs je  0x1400224cb
   140022486:	outs   dx,BYTE PTR ds:[rsi]
   140022487:	jbe    0x1400224f2
   140022489:	jb     0x1400224fa
   14002248b:	outs   dx,BYTE PTR ds:[rsi]
   14002248c:	ins    DWORD PTR es:[rdi],dx
   14002248d:	outs   dx,BYTE PTR gs:[rsi]
   14002248f:	je     0x1400224e7
   140022491:	(bad)  
   140022492:	jb     0x1400224fd
   140022494:	(bad)  
   140022495:	(bad)  
   140022496:	ins    BYTE PTR es:[rdi],dx
   140022497:	gs push rdi
   140022499:	add    BYTE PTR [rsp+rax*1+0x53],ah
   14002249d:	gs je  0x1400224e5
   1400224a0:	outs   dx,BYTE PTR ds:[rsi]
   1400224a1:	jbe    0x14002250c
   1400224a3:	jb     0x140022514
   1400224a5:	outs   dx,BYTE PTR ds:[rsi]
   1400224a6:	ins    DWORD PTR es:[rdi],dx
   1400224a7:	outs   dx,BYTE PTR gs:[rsi]
   1400224a9:	je     0x140022501
   1400224ab:	(bad)  
   1400224ac:	jb     0x140022517
   1400224ae:	(bad)  
   1400224af:	(bad)  
   1400224b0:	ins    BYTE PTR es:[rdi],dx
   1400224b1:	add    BYTE PTR gs:[r8+0x1],dil
   1400224b6:	rex.RXB
   1400224b7:	gs je  0x1400224fd
   1400224ba:	push   rax
   1400224bb:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400224bd:	outs   dx,WORD PTR ds:[rsi]
   1400224bf:	add    BYTE PTR [rsi+0x1],ch
   1400224c2:	rex.RXB
   1400224c3:	gs je  0x140022507
   1400224c6:	rex.XB push r8
   1400224c8:	add    BYTE PTR [rax],al
   1400224ca:	add    al,BYTE PTR ds:[rdi+0x65]
   1400224ce:	je     0x14002251f
   1400224d0:	rex.RB
   1400224d1:	rex.WRB
   1400224d2:	rex.XB push r8
   1400224d4:	add    BYTE PTR [rax],al
   1400224d6:	or     al,0x3
   1400224d8:	rex.WB jae 0x140022531
   1400224db:	(bad)  
   1400224dc:	ins    BYTE PTR es:[rdi],dx
   1400224dd:	imul   esp,DWORD PTR [rbx+rax*2+0x6f],0x61506564
   1400224e5:	addr32 gs add ah,bl
   1400224e9:	add    cl,BYTE PTR [rax+0x65]
   1400224ec:	(bad)  
   1400224ed:	jo     0x140022542
   1400224ef:	imul   edi,DWORD PTR [rdx+0x65],0x640000
   1400224f6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400224f8:	ins    DWORD PTR es:[rdi],dx
   1400224f9:	jo     0x14002255c
   1400224fb:	jb     0x140022562
   1400224fd:	push   rbx
   1400224fe:	je     0x140022572
   140022500:	imul   ebp,DWORD PTR [rsi+0x67],0x74000057
   140022507:	add    al,0x53
   140022509:	gs je  0x140022552
   14002250c:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   140022514:	gs jb  0x140022517
   140022517:	add    bl,al
   140022519:	add    edx,DWORD PTR [rdx+0x65]
   14002251c:	(bad)  
   14002251d:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x57053300
   140022527:	jb     0x140022592
   140022529:	je     0x140022590
   14002252b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002252d:	outs   dx,BYTE PTR ds:[rsi]
   14002252e:	jae    0x14002259f
   140022530:	ins    BYTE PTR es:[rdi],dx
   140022531:	gs push rdi
   140022533:	add    dl,bl
   140022535:	add    DWORD PTR [rdi+0x65],eax
   140022538:	je     0x14002257e
   14002253a:	jb     0x1400225a5
   14002253c:	jbe    0x1400225a3
   14002253e:	push   rsp
   14002253f:	jns    0x1400225b1
   140022541:	gs push rdi
   140022543:	add    BYTE PTR [rcx+0x4],ah
   140022546:	push   rbx
   140022547:	gs je  0x14002258f
   14002254a:	outs   dx,BYTE PTR ds:[rsi]
   14002254b:	fs rex.WRXB
   14002254d:	imul   r13w,WORD PTR [rbp+r12*2+0x0],0x5100
   140022555:	add    al,BYTE PTR [rdi+0x65]
   140022558:	je     0x1400225aa
   14002255a:	jb     0x1400225cb
   14002255c:	movsxd esp,DWORD PTR [rbp+0x73]
   14002255f:	jae    0x1400225a9
   140022561:	gs (bad) 
   140022563:	jo     0x140022565
   140022565:	add    BYTE PTR [rdi+0x74654702],bl
   14002256b:	push   rsp
   14002256c:	imul   ebp,DWORD PTR [rbp+0x65],0x656e6f5a
   140022573:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140022575:	outs   dx,WORD PTR ds:[rsi]
   140022577:	jb     0x1400225e6
   140022579:	(bad)  
   14002257a:	je     0x1400225e5
   14002257c:	outs   dx,DWORD PTR ds:[rsi]
   14002257d:	outs   dx,BYTE PTR ds:[rsi]
   14002257e:	add    BYTE PTR [rax],al
   140022580:	(bad)  
   140022581:	add    ecx,DWORD PTR [rbx+rax*2+0x4d]
   140022585:	(bad)  
   140022586:	jo     0x1400225db
   140022588:	je     0x1400225fc
   14002258a:	imul   ebp,DWORD PTR [rsi+0x67],0x70000057
   140022591:	add    al,BYTE PTR [rdi+0x65]
   140022594:	je     0x1400225e9
   140022596:	je     0x14002260a
   140022598:	imul   ebp,DWORD PTR [rsi+0x67],0x65707954
   14002259f:	push   rdi
   1400225a0:	add    BYTE PTR [rax],al
   1400225a2:	pop    QWORD PTR [rax]
   1400225a4:	rex.XB jb 0x14002260c
   1400225a7:	(bad)  
   1400225a8:	je     0x14002260f
   1400225aa:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x52454b00
   1400225b3:	rex.WRX
   1400225b4:	rex.RB
   1400225b5:	xor    r14,QWORD PTR [rdx]
   1400225b8:	cs fs ins BYTE PTR es:[rdi],dx
   1400225bb:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .data:

0000000140023000 <.data>:
   140023000:	and    BYTE PTR [rcx+rax*1+0x140],ah
   140023007:	add    BYTE PTR [rax],dl
   140023009:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002300a:	add    DWORD PTR [rax+0x1],eax
   14002300d:	add    BYTE PTR [rax],al
   14002300f:	add    BYTE PTR [rax],al
   140023011:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023012:	add    DWORD PTR [rax+0x1],eax
   140023015:	add    BYTE PTR [rax],al
   140023017:	add    ah,dh
   140023019:	movabs ds:0xa3ec000000014001,eax
   140023022:	add    DWORD PTR [rax+0x1],eax
   140023025:	add    BYTE PTR [rax],al
   140023027:	add    BYTE PTR [rax],ah
   140023029:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002302a:	add    DWORD PTR [rax+0x1],eax
   14002302d:	add    BYTE PTR [rax],al
   14002302f:	add    BYTE PTR [rax],dl
   140023031:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023032:	add    DWORD PTR [rax+0x1],eax
   140023035:	add    BYTE PTR [rax],al
   140023037:	add    BYTE PTR [rax],al
   140023039:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002303a:	add    DWORD PTR [rax+0x1],eax
   14002303d:	add    BYTE PTR [rax],al
   14002303f:	add    BYTE PTR [rax+0x14001a4],bl
   140023045:	add    BYTE PTR [rax],al
   140023047:	add    BYTE PTR [rax],ah
   140023049:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002304a:	add    DWORD PTR [rax+0x1],eax
   14002304d:	add    BYTE PTR [rax],al
   14002304f:	add    BYTE PTR [rax],dl
   140023051:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023052:	add    DWORD PTR [rax+0x1],eax
   140023055:	add    BYTE PTR [rax],al
   140023057:	add    BYTE PTR [rax],al
   140023059:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002305a:	add    DWORD PTR [rax+0x1],eax
   14002305d:	add    BYTE PTR [rax],al
   14002305f:	add    BYTE PTR [rax],ah
   140023061:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023062:	add    DWORD PTR [rax+0x1],eax
   140023065:	add    BYTE PTR [rax],al
   140023067:	add    BYTE PTR [rax],dl
   140023069:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002306a:	add    DWORD PTR [rax+0x1],eax
   14002306d:	add    BYTE PTR [rax],al
   14002306f:	add    BYTE PTR [rax],al
   140023071:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023072:	add    DWORD PTR [rax+0x1],eax
   140023075:	add    BYTE PTR [rax],al
   140023077:	add    bh,bh
   140023079:	(bad)  
   14002307a:	(bad)  
   14002307b:	inc    DWORD PTR [rax]
   14002307d:	add    BYTE PTR [rax],al
   14002307f:	add    BYTE PTR [rax-0x4c],dl
   140023082:	add    DWORD PTR [rax+0x1],eax
   140023085:	add    BYTE PTR [rax],al
   140023087:	add    BYTE PTR [rax],ah
   140023089:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002308a:	add    DWORD PTR [rax+0x1],eax
   14002308d:	add    BYTE PTR [rax],al
   14002308f:	add    BYTE PTR [rax],dl
   140023091:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023092:	add    DWORD PTR [rax+0x1],eax
   140023095:	add    BYTE PTR [rax],al
   140023097:	add    BYTE PTR [rax],al
   140023099:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002309a:	add    DWORD PTR [rax+0x1],eax
   14002309d:	add    BYTE PTR [rax],al
   14002309f:	add    al,dl
   1400230a1:	mov    esp,0x14001
   1400230a6:	add    BYTE PTR [rax],al
   1400230a8:	(bad)  
   1400230a9:	mov    ebp,0x14001
   1400230ae:	add    BYTE PTR [rax],al
   1400230b0:	pop    rsp
   1400230b1:	mov    ebp,0x14001
   1400230b6:	add    BYTE PTR [rax],al
   1400230b8:	add    al,BYTE PTR [rax]
   1400230ba:	add    BYTE PTR [rax],al
   1400230bc:	add    BYTE PTR [rax],al
   1400230be:	add    BYTE PTR [rax],al
   1400230c0:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   1400230c6:	add    BYTE PTR [rax],al
   1400230c8:	int    0x5d
   1400230ca:	and    dl,dl
   1400230cc:	data16 (bad) 
   1400230ce:	(bad)  
   1400230cf:	jmp    QWORD PTR [rax+0x140025c]
	...
   1400230dd:	add    BYTE PTR [rax],al
   1400230df:	add    BYTE PTR [rax+0x140025c],ah
   1400230e5:	add    BYTE PTR [rax],al
   1400230e7:	add    BYTE PTR [rcx],al
   1400230e9:	add    DWORD PTR [rax],eax
	...
   1400230f3:	add    BYTE PTR [rax],al
   1400230f5:	adc    BYTE PTR [rax],al
	...
   140023117:	add    BYTE PTR [rdx],al
   140023119:	add    BYTE PTR [rax],al
   14002311b:	add    BYTE PTR [rcx],al
	...
   140023145:	add    BYTE PTR [rax],al
   140023147:	add    BYTE PTR [rdx],al
   140023149:	add    BYTE PTR [rax],al
   14002314b:	add    BYTE PTR [rdx],al
	...
   14002348d:	add    BYTE PTR [rax],al
   14002348f:	add    BYTE PTR [rcx],al
   140023491:	add    BYTE PTR [rax],al
   140023493:	add    BYTE PTR [rsi],dl
   140023495:	add    BYTE PTR [rax],al
   140023497:	add    BYTE PTR [rdx],al
   140023499:	add    BYTE PTR [rax],al
   14002349b:	add    BYTE PTR [rdx],al
   14002349d:	add    BYTE PTR [rax],al
   14002349f:	add    BYTE PTR [rbx],al
   1400234a1:	add    BYTE PTR [rax],al
   1400234a3:	add    BYTE PTR [rdx],al
   1400234a5:	add    BYTE PTR [rax],al
   1400234a7:	add    BYTE PTR [rax+rax*1],al
   1400234aa:	add    BYTE PTR [rax],al
   1400234ac:	sbb    BYTE PTR [rax],al
   1400234ae:	add    BYTE PTR [rax],al
   1400234b0:	add    eax,0xd000000
   1400234b5:	add    BYTE PTR [rax],al
   1400234b7:	add    BYTE PTR [rsi],al
   1400234b9:	add    BYTE PTR [rax],al
   1400234bb:	add    BYTE PTR [rcx],cl
   1400234bd:	add    BYTE PTR [rax],al
   1400234bf:	add    BYTE PTR [rdi],al
   1400234c1:	add    BYTE PTR [rax],al
   1400234c3:	add    BYTE PTR [rax+rax*1],cl
   1400234c6:	add    BYTE PTR [rax],al
   1400234c8:	or     BYTE PTR [rax],al
   1400234ca:	add    BYTE PTR [rax],al
   1400234cc:	or     al,0x0
   1400234ce:	add    BYTE PTR [rax],al
   1400234d0:	or     DWORD PTR [rax],eax
   1400234d2:	add    BYTE PTR [rax],al
   1400234d4:	or     al,0x0
   1400234d6:	add    BYTE PTR [rax],al
   1400234d8:	or     al,BYTE PTR [rax]
   1400234da:	add    BYTE PTR [rax],al
   1400234dc:	(bad)  
   1400234dd:	add    BYTE PTR [rax],al
   1400234df:	add    BYTE PTR [rbx],cl
   1400234e1:	add    BYTE PTR [rax],al
   1400234e3:	add    BYTE PTR [rax],cl
   1400234e5:	add    BYTE PTR [rax],al
   1400234e7:	add    BYTE PTR [rax+rax*1],cl
   1400234ea:	add    BYTE PTR [rax],al
   1400234ec:	(bad)  
   1400234ed:	add    BYTE PTR [rax],al
   1400234ef:	add    BYTE PTR [rip+0x16000000],cl        # 0x1560234f5
   1400234f5:	add    BYTE PTR [rax],al
   1400234f7:	add    BYTE PTR [rdi],cl
   1400234f9:	add    BYTE PTR [rax],al
   1400234fb:	add    BYTE PTR [rdx],al
   1400234fd:	add    BYTE PTR [rax],al
   1400234ff:	add    BYTE PTR [rax],dl
   140023501:	add    BYTE PTR [rax],al
   140023503:	add    BYTE PTR [rip+0x11000000],cl        # 0x151023509
   140023509:	add    BYTE PTR [rax],al
   14002350b:	add    BYTE PTR [rdx],dl
   14002350d:	add    BYTE PTR [rax],al
   14002350f:	add    BYTE PTR [rdx],dl
   140023511:	add    BYTE PTR [rax],al
   140023513:	add    BYTE PTR [rdx],al
   140023515:	add    BYTE PTR [rax],al
   140023517:	add    BYTE PTR [rcx],ah
   140023519:	add    BYTE PTR [rax],al
   14002351b:	add    BYTE PTR [rip+0x35000000],cl        # 0x175023521
   140023521:	add    BYTE PTR [rax],al
   140023523:	add    BYTE PTR [rdx],al
   140023525:	add    BYTE PTR [rax],al
   140023527:	add    BYTE PTR [rcx+0x0],al
   14002352a:	add    BYTE PTR [rax],al
   14002352c:	or     eax,0x43000000
   140023531:	add    BYTE PTR [rax],al
   140023533:	add    BYTE PTR [rdx],al
   140023535:	add    BYTE PTR [rax],al
   140023537:	add    BYTE PTR [rax+0x0],dl
   14002353a:	add    BYTE PTR [rax],al
   14002353c:	adc    DWORD PTR [rax],eax
   14002353e:	add    BYTE PTR [rax],al
   140023540:	push   rdx
   140023541:	add    BYTE PTR [rax],al
   140023543:	add    BYTE PTR [rip+0x53000000],cl        # 0x193023549
   140023549:	add    BYTE PTR [rax],al
   14002354b:	add    BYTE PTR [rip+0x57000000],cl        # 0x197023551
   140023551:	add    BYTE PTR [rax],al
   140023553:	add    BYTE PTR [rsi],dl
   140023555:	add    BYTE PTR [rax],al
   140023557:	add    BYTE PTR [rcx+0x0],bl
   14002355a:	add    BYTE PTR [rax],al
   14002355c:	or     eax,DWORD PTR [rax]
   14002355e:	add    BYTE PTR [rax],al
   140023560:	ins    BYTE PTR es:[rdi],dx
   140023561:	add    BYTE PTR [rax],al
   140023563:	add    BYTE PTR [rip+0x6d000000],cl        # 0x1ad023569
   140023569:	add    BYTE PTR [rax],al
   14002356b:	add    BYTE PTR [rax],ah
   14002356d:	add    BYTE PTR [rax],al
   14002356f:	add    BYTE PTR [rax+0x0],dh
   140023572:	add    BYTE PTR [rax],al
   140023574:	sbb    al,0x0
   140023576:	add    BYTE PTR [rax],al
   140023578:	jb     0x14002357a
   14002357a:	add    BYTE PTR [rax],al
   14002357c:	or     DWORD PTR [rax],eax
   14002357e:	add    BYTE PTR [rax],al
   140023580:	(bad)  
   140023581:	add    BYTE PTR [rax],al
   140023583:	add    BYTE PTR [rsi],dl
   140023585:	add    BYTE PTR [rax],al
   140023587:	add    BYTE PTR [rax+0xa000000],al
   14002358d:	add    BYTE PTR [rax],al
   14002358f:	add    BYTE PTR [rcx+0xa000000],al
   140023595:	add    BYTE PTR [rax],al
   140023597:	add    BYTE PTR [rdx+0x9000000],al
   14002359d:	add    BYTE PTR [rax],al
   14002359f:	add    BYTE PTR [rbx+0x16000000],al
   1400235a5:	add    BYTE PTR [rax],al
   1400235a7:	add    BYTE PTR [rax+rax*1+0xd0000],al
   1400235ae:	add    BYTE PTR [rax],al
   1400235b0:	xchg   ecx,eax
   1400235b1:	add    BYTE PTR [rax],al
   1400235b3:	add    BYTE PTR [rcx],ch
   1400235b5:	add    BYTE PTR [rax],al
   1400235b7:	add    BYTE PTR [rsi+0xd000000],bl
   1400235bd:	add    BYTE PTR [rax],al
   1400235bf:	add    BYTE PTR [rcx+0x2000000],ah
   1400235c5:	add    BYTE PTR [rax],al
   1400235c7:	add    BYTE PTR [rax+rax*1+0xb0000],ah
   1400235ce:	add    BYTE PTR [rax],al
   1400235d0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400235d1:	add    BYTE PTR [rax],al
   1400235d3:	add    BYTE PTR [rip+0xffffffffb7000000],cl        # 0xf70235d9
   1400235d9:	add    BYTE PTR [rax],al
   1400235db:	add    BYTE PTR [rcx],dl
   1400235dd:	add    BYTE PTR [rax],al
   1400235df:	add    dh,cl
   1400235e1:	add    BYTE PTR [rax],al
   1400235e3:	add    BYTE PTR [rdx],al
   1400235e5:	add    BYTE PTR [rax],al
   1400235e7:	add    bh,dl
   1400235e9:	add    BYTE PTR [rax],al
   1400235eb:	add    BYTE PTR [rbx],cl
   1400235ed:	add    BYTE PTR [rax],al
   1400235ef:	add    BYTE PTR [rax],bl
   1400235f1:	(bad)  
   1400235f2:	add    BYTE PTR [rax],al
   1400235f4:	or     al,0x0
   1400235f6:	add    BYTE PTR [rax],al
   1400235f8:	or     al,0x0
   1400235fa:	add    BYTE PTR [rax],al
   1400235fc:	or     BYTE PTR [rax],al
	...
   140023606:	add    BYTE PTR [rax],al
   140023608:	add    DWORD PTR [rax],eax
	...
   140023616:	add    BYTE PTR [rax],al
   140023618:	add    DWORD PTR [rax],eax
	...
   140023636:	add    BYTE PTR [rax],al
   140023638:	add    DWORD PTR [rax],eax
	...
   140023646:	add    BYTE PTR [rax],al
   140023648:	add    DWORD PTR [rax],eax
	...
   140023666:	add    BYTE PTR [rax],al
   140023668:	add    DWORD PTR [rax],eax
	...
   140023676:	add    BYTE PTR [rax],al
   140023678:	add    DWORD PTR [rax],eax
	...
   140023686:	add    BYTE PTR [rax],al
   140023688:	add    DWORD PTR [rax],eax
	...
   1400236a6:	add    BYTE PTR [rax],al
   1400236a8:	add    DWORD PTR [rax],eax
	...
   1400236c6:	add    BYTE PTR [rax],al
   1400236c8:	add    DWORD PTR [rax],eax
	...
   1400236d6:	add    BYTE PTR [rax],al
   1400236d8:	add    DWORD PTR [rax],eax
	...
   1400236e6:	add    BYTE PTR [rax],al
   1400236e8:	add    DWORD PTR [rax],eax
	...
   140023706:	add    BYTE PTR [rax],al
   140023708:	add    DWORD PTR [rax],eax
	...
   140023716:	add    BYTE PTR [rax],al
   140023718:	add    DWORD PTR [rax],eax
	...
   140023726:	add    BYTE PTR [rax],al
   140023728:	add    DWORD PTR [rax],eax
	...
   14002383e:	add    BYTE PTR [rax],al
   140023840:	(bad)  
   140023841:	(bad)  
   140023842:	(bad)  
   140023843:	inc    DWORD PTR [rax]
	...
   14002384d:	add    BYTE PTR [rax],al
   14002384f:	add    al,al
   140023851:	rex.WRX add QWORD PTR [rax+0x1],r8
   140023855:	add    BYTE PTR [rax],al
   140023857:	add    al,al
   140023859:	rex.WRX add QWORD PTR [rax+0x1],r8
   14002385d:	add    BYTE PTR [rax],al
   14002385f:	add    al,al
   140023861:	rex.WRX add QWORD PTR [rax+0x1],r8
   140023865:	add    BYTE PTR [rax],al
   140023867:	add    al,al
   140023869:	rex.WRX add QWORD PTR [rax+0x1],r8
   14002386d:	add    BYTE PTR [rax],al
   14002386f:	add    al,al
   140023871:	rex.WRX add QWORD PTR [rax+0x1],r8
   140023875:	add    BYTE PTR [rax],al
   140023877:	add    al,al
   140023879:	rex.WRX add QWORD PTR [rax+0x1],r8
   14002387d:	add    BYTE PTR [rax],al
   14002387f:	add    al,al
   140023881:	rex.WRX add QWORD PTR [rax+0x1],r8
   140023885:	add    BYTE PTR [rax],al
   140023887:	add    al,al
   140023889:	rex.WRX add QWORD PTR [rax+0x1],r8
   14002388d:	add    BYTE PTR [rax],al
   14002388f:	add    al,al
   140023891:	rex.WRX add QWORD PTR [rax+0x1],r8
   140023895:	add    BYTE PTR [rax],al
   140023897:	add    al,al
   140023899:	rex.WRX add QWORD PTR [rax+0x1],r8
   14002389d:	add    BYTE PTR [rax],al
   14002389f:	add    BYTE PTR [rax+0x14001f5],bl
   1400238a5:	add    BYTE PTR [rax],al
   1400238a7:	add    BYTE PTR [rax+0x14001f5],cl
   1400238ad:	add    BYTE PTR [rax],al
   1400238af:	add    bh,bh
   1400238b1:	(bad)  
   1400238b2:	(bad)  
   1400238b3:	(bad)  
   1400238b4:	(bad)  
   1400238b5:	(bad)  
   1400238b6:	(bad)  
   1400238b7:	inc    DWORD PTR [rax+0xa]
	...
   14002390d:	add    BYTE PTR [rax],al
   14002390f:	add    al,dh
   140023911:	cli    
   140023912:	add    DWORD PTR [rax+0x1],eax
   140023915:	add    BYTE PTR [rax],al
   140023917:	add    al,bl
   140023919:	cli    
   14002391a:	add    DWORD PTR [rax+0x1],eax
   14002391d:	add    BYTE PTR [rax],al
   14002391f:	add    BYTE PTR [rax+0x14001fa],bh
   140023925:	add    BYTE PTR [rax],al
   140023927:	add    BYTE PTR [rax+0x14001fa],ch
   14002392d:	add    BYTE PTR [rax],al
   14002392f:	add    BYTE PTR [rax+0x14001fa],cl
   140023935:	add    BYTE PTR [rax],al
   140023937:	add    BYTE PTR [rax-0x6],dh
   14002393a:	add    DWORD PTR [rax+0x1],eax
   14002393d:	add    BYTE PTR [rax],al
   14002393f:	add    BYTE PTR [rax-0x6],dl
   140023942:	add    DWORD PTR [rax+0x1],eax
   140023945:	add    BYTE PTR [rax],al
   140023947:	add    BYTE PTR [rax],bh
   140023949:	cli    
   14002394a:	add    DWORD PTR [rax+0x1],eax
   14002394d:	add    BYTE PTR [rax],al
   14002394f:	add    BYTE PTR [rax],ah
   140023951:	cli    
   140023952:	add    DWORD PTR [rax+0x1],eax
   140023955:	add    BYTE PTR [rax],al
   140023957:	add    BYTE PTR [rax],cl
   140023959:	cli    
   14002395a:	add    DWORD PTR [rax+0x1],eax
   14002395d:	add    BYTE PTR [rax],al
   14002395f:	add    al,dh
   140023961:	stc    
   140023962:	add    DWORD PTR [rax+0x1],eax
   140023965:	add    BYTE PTR [rax],al
   140023967:	add    al,cl
   140023969:	stc    
   14002396a:	add    DWORD PTR [rax+0x1],eax
   14002396d:	add    BYTE PTR [rax],al
   14002396f:	add    BYTE PTR [rax+0x14001f9],dh
   140023975:	add    BYTE PTR [rax],al
   140023977:	add    BYTE PTR [rax+0x14001f9],bl
   14002397d:	add    BYTE PTR [rax],al
   14002397f:	add    BYTE PTR [rax+0x14001f9],cl
   140023985:	add    BYTE PTR [rax],al
   140023987:	add    BYTE PTR [rax-0x7],bh
   14002398a:	add    DWORD PTR [rax+0x1],eax
   14002398d:	add    BYTE PTR [rax],al
   14002398f:	add    BYTE PTR [rax-0x7],ch
   140023992:	add    DWORD PTR [rax+0x1],eax
   140023995:	add    BYTE PTR [rax],al
   140023997:	add    BYTE PTR [rax-0x7],bl
   14002399a:	add    DWORD PTR [rax+0x1],eax
   14002399d:	add    BYTE PTR [rax],al
   14002399f:	add    BYTE PTR [rax-0x7],cl
   1400239a2:	add    DWORD PTR [rax+0x1],eax
   1400239a5:	add    BYTE PTR [rax],al
   1400239a7:	add    BYTE PTR [rax],bh
   1400239a9:	stc    
   1400239aa:	add    DWORD PTR [rax+0x1],eax
   1400239ad:	add    BYTE PTR [rax],al
   1400239af:	add    BYTE PTR [rax],ch
   1400239b1:	stc    
   1400239b2:	add    DWORD PTR [rax+0x1],eax
   1400239b5:	add    BYTE PTR [rax],al
   1400239b7:	add    BYTE PTR [rax],bl
   1400239b9:	stc    
   1400239ba:	add    DWORD PTR [rax+0x1],eax
   1400239bd:	add    BYTE PTR [rax],al
   1400239bf:	add    BYTE PTR [rax],al
   1400239c1:	stc    
   1400239c2:	add    DWORD PTR [rax+0x1],eax
   1400239c5:	add    BYTE PTR [rax],al
   1400239c7:	add    al,ah
   1400239c9:	clc    
   1400239ca:	add    DWORD PTR [rax+0x1],eax
   1400239cd:	add    BYTE PTR [rax],al
   1400239cf:	add    al,cl
   1400239d1:	clc    
   1400239d2:	add    DWORD PTR [rax+0x1],eax
   1400239d5:	add    BYTE PTR [rax],al
   1400239d7:	add    BYTE PTR [rax+0x14001f8],ah
   1400239dd:	add    BYTE PTR [rax],al
   1400239df:	add    BYTE PTR [rax-0x7],bh
   1400239e2:	add    DWORD PTR [rax+0x1],eax
   1400239e5:	add    BYTE PTR [rax],al
   1400239e7:	add    BYTE PTR [rax+0x14001f8],dl
   1400239ed:	add    BYTE PTR [rax],al
   1400239ef:	add    BYTE PTR [rax-0x8],bh
   1400239f2:	add    DWORD PTR [rax+0x1],eax
   1400239f5:	add    BYTE PTR [rax],al
   1400239f7:	add    BYTE PTR [rax-0x8],ch
   1400239fa:	add    DWORD PTR [rax+0x1],eax
   1400239fd:	add    BYTE PTR [rax],al
   1400239ff:	add    BYTE PTR [rax-0x8],dl
   140023a02:	add    DWORD PTR [rax+0x1],eax
   140023a05:	add    BYTE PTR [rax],al
   140023a07:	add    BYTE PTR [rax-0x8],al
   140023a0a:	add    DWORD PTR [rax+0x1],eax
   140023a0d:	add    BYTE PTR [rax],al
   140023a0f:	add    BYTE PTR [rax],dh
   140023a11:	clc    
   140023a12:	add    DWORD PTR [rax+0x1],eax
   140023a15:	add    BYTE PTR [rax],al
   140023a17:	add    BYTE PTR [rax],ah
   140023a19:	clc    
   140023a1a:	add    DWORD PTR [rax+0x1],eax
   140023a1d:	add    BYTE PTR [rax],al
   140023a1f:	add    BYTE PTR [rax],cl
   140023a21:	clc    
   140023a22:	add    DWORD PTR [rax+0x1],eax
   140023a25:	add    BYTE PTR [rax],al
   140023a27:	add    BYTE PTR [rax-0x7],bh
   140023a2a:	add    DWORD PTR [rax+0x1],eax
   140023a2d:	add    BYTE PTR [rax],al
   140023a2f:	add    al,ch
   140023a31:	test   DWORD PTR [rcx],0x140
   140023a37:	add    BYTE PTR [rax-0x7],bh
   140023a3a:	add    DWORD PTR [rax+0x1],eax
   140023a3d:	add    BYTE PTR [rax],al
   140023a3f:	add    al,dl
   140023a41:	test   DWORD PTR [rcx],0x140
   140023a47:	add    BYTE PTR [rax+0x14001f7],bh
   140023a4d:	add    BYTE PTR [rax],al
   140023a4f:	add    BYTE PTR [rax+0x14001f7],bl
   140023a55:	add    BYTE PTR [rax],al
   140023a57:	add    BYTE PTR [rax+0x14001f7],al
   140023a5d:	add    BYTE PTR [rax],al
   140023a5f:	add    BYTE PTR [rax-0x9],ch
   140023a62:	add    DWORD PTR [rax+0x1],eax
   140023a65:	add    BYTE PTR [rax],al
   140023a67:	add    BYTE PTR [rax-0x7],bh
   140023a6a:	add    DWORD PTR [rax+0x1],eax
   140023a6d:	add    BYTE PTR [rax],al
   140023a6f:	add    BYTE PTR [rbx],ch
	...
   140023add:	add    BYTE PTR [rax],dl
   140023adf:	adc    BYTE PTR [rax],dl
   140023ae1:	adc    BYTE PTR [rax],dl
   140023ae3:	adc    BYTE PTR [rax],dl
   140023ae5:	adc    BYTE PTR [rax],dl
   140023ae7:	adc    BYTE PTR [rax],dl
   140023ae9:	adc    BYTE PTR [rax],dl
   140023aeb:	adc    BYTE PTR [rax],dl
   140023aed:	adc    BYTE PTR [rax],dl
   140023aef:	adc    BYTE PTR [rax],dl
   140023af1:	adc    BYTE PTR [rax],dl
   140023af3:	adc    BYTE PTR [rax],dl
   140023af5:	adc    BYTE PTR [rax],dl
   140023af7:	adc    BYTE PTR [rax],al
   140023af9:	add    BYTE PTR [rax],al
   140023afb:	add    BYTE PTR [rax],al
   140023afd:	add    BYTE PTR [rax],ah
   140023aff:	and    BYTE PTR [rax],ah
   140023b01:	and    BYTE PTR [rax],ah
   140023b03:	and    BYTE PTR [rax],ah
   140023b05:	and    BYTE PTR [rax],ah
   140023b07:	and    BYTE PTR [rax],ah
   140023b09:	and    BYTE PTR [rax],ah
   140023b0b:	and    BYTE PTR [rax],ah
   140023b0d:	and    BYTE PTR [rax],ah
   140023b0f:	and    BYTE PTR [rax],ah
   140023b11:	and    BYTE PTR [rax],ah
   140023b13:	and    BYTE PTR [rax],ah
   140023b15:	and    BYTE PTR [rax],ah
   140023b17:	and    BYTE PTR [rax],al
	...
   140023bdd:	add    BYTE PTR [rcx+0x62],ah
   140023be0:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   140023be4:	addr32 push 0x6c6b6a69
   140023bea:	ins    DWORD PTR es:[rdi],dx
   140023beb:	outs   dx,BYTE PTR ds:[rsi]
   140023bec:	outs   dx,DWORD PTR ds:[rsi]
   140023bed:	jo     0x140023c60
   140023bef:	jb     0x140023c64
   140023bf1:	je     0x140023c68
   140023bf3:	jbe    0x140023c6c
   140023bf5:	js     0x140023c70
   140023bf7:	jp     0x140023bf9
   140023bf9:	add    BYTE PTR [rax],al
   140023bfb:	add    BYTE PTR [rax],al
   140023bfd:	add    BYTE PTR [rcx+0x42],al
   140023c00:	rex.XB
   140023c01:	rex.R
   140023c02:	rex.RB
   140023c03:	rex.RX
   140023c04:	rex.RXB
   140023c05:	rex.W
   140023c06:	rex.WB
   140023c07:	rex.WX
   140023c08:	rex.WXB
   140023c09:	rex.WR
   140023c0a:	rex.WRB
   140023c0b:	rex.WRX
   140023c0c:	rex.WRXB push r8
   140023c0e:	push   rcx
   140023c0f:	push   rdx
   140023c10:	push   rbx
   140023c11:	push   rsp
   140023c12:	push   rbp
   140023c13:	push   rsi
   140023c14:	push   rdi
   140023c15:	pop    rax
   140023c16:	pop    rcx
   140023c17:	pop    rdx
	...
   140023ce0:	add    BYTE PTR [rax],al
   140023ce2:	adc    BYTE PTR [rax],dl
   140023ce4:	adc    BYTE PTR [rax],dl
   140023ce6:	adc    BYTE PTR [rax],dl
   140023ce8:	adc    BYTE PTR [rax],dl
   140023cea:	adc    BYTE PTR [rax],dl
   140023cec:	adc    BYTE PTR [rax],dl
   140023cee:	adc    BYTE PTR [rax],dl
   140023cf0:	adc    BYTE PTR [rax],dl
   140023cf2:	adc    BYTE PTR [rax],dl
   140023cf4:	adc    BYTE PTR [rax],dl
   140023cf6:	adc    BYTE PTR [rax],dl
   140023cf8:	adc    BYTE PTR [rax],dl
   140023cfa:	adc    BYTE PTR [rax],dl
   140023cfc:	add    BYTE PTR [rax],al
   140023cfe:	add    BYTE PTR [rax],al
   140023d00:	add    BYTE PTR [rax],al
   140023d02:	and    BYTE PTR [rax],ah
   140023d04:	and    BYTE PTR [rax],ah
   140023d06:	and    BYTE PTR [rax],ah
   140023d08:	and    BYTE PTR [rax],ah
   140023d0a:	and    BYTE PTR [rax],ah
   140023d0c:	and    BYTE PTR [rax],ah
   140023d0e:	and    BYTE PTR [rax],ah
   140023d10:	and    BYTE PTR [rax],ah
   140023d12:	and    BYTE PTR [rax],ah
   140023d14:	and    BYTE PTR [rax],ah
   140023d16:	and    BYTE PTR [rax],ah
   140023d18:	and    BYTE PTR [rax],ah
   140023d1a:	and    BYTE PTR [rax],ah
	...
   140023df0:	add    BYTE PTR [rcx+0x62],ah
   140023df3:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   140023df7:	addr32 push 0x6c6b6a69
   140023dfd:	ins    DWORD PTR es:[rdi],dx
   140023dfe:	outs   dx,BYTE PTR ds:[rsi]
   140023dff:	outs   dx,DWORD PTR ds:[rsi]
   140023e00:	jo     0x140023e73
   140023e02:	jb     0x140023e77
   140023e04:	je     0x140023e7b
   140023e06:	jbe    0x140023e7f
   140023e08:	js     0x140023e83
   140023e0a:	jp     0x140023e0c
   140023e0c:	add    BYTE PTR [rax],al
   140023e0e:	add    BYTE PTR [rax],al
   140023e10:	add    BYTE PTR [rcx+0x42],al
   140023e13:	rex.XB
   140023e14:	rex.R
   140023e15:	rex.RB
   140023e16:	rex.RX
   140023e17:	rex.RXB
   140023e18:	rex.W
   140023e19:	rex.WB
   140023e1a:	rex.WX
   140023e1b:	rex.WXB
   140023e1c:	rex.WR
   140023e1d:	rex.WRB
   140023e1e:	rex.WRX
   140023e1f:	rex.WRXB push r8
   140023e21:	push   rcx
   140023e22:	push   rdx
   140023e23:	push   rbx
   140023e24:	push   rsp
   140023e25:	push   rbp
   140023e26:	push   rsi
   140023e27:	push   rdi
   140023e28:	pop    rax
   140023e29:	pop    rcx
   140023e2a:	pop    rdx
	...
   140023eaf:	add    BYTE PTR [rax+0x140023a],al
   140023eb5:	add    BYTE PTR [rax],al
   140023eb7:	add    BYTE PTR [rcx],al
   140023eb9:	add    al,BYTE PTR [rax+rcx*1]
   140023ebc:	add    BYTE PTR [rax],al
   140023ebe:	add    BYTE PTR [rax],al
   140023ec0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140023ec1:	add    eax,DWORD PTR [rax]
   140023ec3:	add    BYTE PTR [rax-0x7e],ah
   140023ec6:	jns    0x140023e4a
   140023ec8:	and    DWORD PTR [rax],eax
   140023eca:	add    BYTE PTR [rax],al
   140023ecc:	add    BYTE PTR [rax],al
   140023ece:	add    BYTE PTR [rax],al
   140023ed0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140023ed1:	fild   WORD PTR [rax]
   140023ed3:	add    BYTE PTR [rax],al
   140023ed5:	add    BYTE PTR [rax],al
   140023ed7:	add    BYTE PTR [rcx+0xa5],ah
   140023edd:	add    BYTE PTR [rax],al
   140023edf:	add    BYTE PTR [rcx+0xfce09f],al
   140023ee5:	add    BYTE PTR [rax],al
   140023ee7:	add    BYTE PTR [rax+0x7e],al
   140023eea:	cmp    ah,0x0
   140023eed:	add    BYTE PTR [rax],al
   140023eef:	add    BYTE PTR [rax-0x3efffffd],ch
   140023ef5:	movabs ds:0x20a3da,eax
	...
   140023f0e:	add    BYTE PTR [rax],al
   140023f10:	cmp    esi,0x0
   140023f16:	add    BYTE PTR [rax],al
   140023f18:	rex inc BYTE PTR [rax]
   140023f1b:	add    BYTE PTR [rax],al
   140023f1d:	add    BYTE PTR [rax],al
   140023f1f:	add    BYTE PTR [rbp-0x3efffffd],dh
   140023f25:	movabs ds:0x20a3da,eax
	...
   140023f3e:	add    BYTE PTR [rax],al
   140023f40:	cmp    esi,0x0
   140023f46:	add    BYTE PTR [rax],al
   140023f48:	inc    BYTE PTR [r8]
   140023f4b:	add    BYTE PTR [rax],al
   140023f4d:	add    BYTE PTR [rax],al
   140023f4f:	add    BYTE PTR [rsi-0x30fffffd],dh
   140023f55:	movabs ds:0xa2e8a2e5001aa2e4,al
   140023f5e:	pop    rbx
	...
   140023f6f:	add    BYTE PTR [rcx+0xfe],al
   140023f75:	add    BYTE PTR [rax],al
   140023f77:	add    BYTE PTR [rax+0x7e],al
   140023f7a:	movabs eax,ds:0x55100000000fe
   140023f83:	add    BYTE PTR [rcx-0x26],dl
   140023f86:	pop    rsi
   140023f87:	fisub  DWORD PTR [rax]
   140023f89:	add    BYTE PTR [rdi-0x26],bl
   140023f8c:	push   0xffffffffffffffda
   140023f8e:	xor    al,BYTE PTR [rax]
	...
   140023fa0:	adc    ebx,0xf9e0ded8
   140023fa6:	add    BYTE PTR [rax],al
   140023fa8:	xor    DWORD PTR [rsi-0x7f],edi
   140023fab:	inc    BYTE PTR [rax]
   140023fad:	add    BYTE PTR [rax],al
   140023faf:	add    dh,bh
   140023fb1:	(bad)  
   140023fb2:	(bad)  
   140023fb3:	inc    DWORD PTR [rbx+0x0]
	...
   140023fbe:	add    BYTE PTR [rax],al
   140023fc0:	enter  0x1fe,0x40
   140023fc4:	add    DWORD PTR [rax],eax
   140023fc6:	add    BYTE PTR [rax],al
   140023fc8:	(bad)  
   140023fc9:	inc    BYTE PTR [rcx]
   140023fcb:	rex add DWORD PTR [rax],eax
   140023fce:	add    BYTE PTR [rax],al
   140023fd0:	sar    dh,0x1
   140023fd3:	rex add DWORD PTR [rax],eax
   140023fd6:	add    BYTE PTR [rax],al
   140023fd8:	mov    esp,0x14001fe
   140023fdd:	add    BYTE PTR [rax],al
   140023fdf:	add    BYTE PTR [rax+0x14001fe],bh
   140023fe5:	add    BYTE PTR [rax],al
   140023fe7:	add    BYTE PTR [rsi+rdi*8+0x14001],dh
   140023fee:	add    BYTE PTR [rax],al
   140023ff0:	mov    al,0xfe
   140023ff2:	add    DWORD PTR [rax+0x1],eax
   140023ff5:	add    BYTE PTR [rax],al
   140023ff7:	add    BYTE PTR [rax+0x14001fe],ch
   140023ffd:	add    BYTE PTR [rax],al
   140023fff:	add    BYTE PTR [rax+0x14001fe],ah
   140024005:	add    BYTE PTR [rax],al
   140024007:	add    BYTE PTR [rax+0x14001fe],bl
   14002400d:	add    BYTE PTR [rax],al
   14002400f:	add    BYTE PTR [rax+0x14001fe],cl
   140024015:	add    BYTE PTR [rax],al
   140024017:	add    BYTE PTR [rax-0x2],bh
   14002401a:	add    DWORD PTR [rax+0x1],eax
   14002401d:	add    BYTE PTR [rax],al
   14002401f:	add    BYTE PTR [rsi+rdi*8+0x1],ch
   140024023:	rex add DWORD PTR [rax],eax
   140024026:	add    BYTE PTR [rax],al
   140024028:	(bad)  
   140024029:	inc    BYTE PTR [rcx]
   14002402b:	rex add DWORD PTR [rax],eax
   14002402e:	add    BYTE PTR [rax],al
   140024030:	pop    rsp
   140024031:	inc    BYTE PTR [rcx]
   140024033:	rex add DWORD PTR [rax],eax
   140024036:	add    BYTE PTR [rax],al
   140024038:	pop    rax
   140024039:	inc    BYTE PTR [rcx]
   14002403b:	rex add DWORD PTR [rax],eax
   14002403e:	add    BYTE PTR [rax],al
   140024040:	push   rsp
   140024041:	inc    BYTE PTR [rcx]
   140024043:	rex add DWORD PTR [rax],eax
   140024046:	add    BYTE PTR [rax],al
   140024048:	push   rax
   140024049:	inc    BYTE PTR [rcx]
   14002404b:	rex add DWORD PTR [rax],eax
   14002404e:	add    BYTE PTR [rax],al
   140024050:	rex.WR inc BYTE PTR [rcx]
   140024053:	rex add DWORD PTR [rax],eax
   140024056:	add    BYTE PTR [rax],al
   140024058:	rex.W inc BYTE PTR [rcx]
   14002405b:	rex add DWORD PTR [rax],eax
   14002405e:	add    BYTE PTR [rax],al
   140024060:	rex.R inc BYTE PTR [rcx]
   140024063:	rex add DWORD PTR [rax],eax
   140024066:	add    BYTE PTR [rax],al
   140024068:	rex inc BYTE PTR [rcx]
   14002406b:	rex add DWORD PTR [rax],eax
   14002406e:	add    BYTE PTR [rax],al
   140024070:	cmp    al,0xfe
   140024072:	add    DWORD PTR [rax+0x1],eax
   140024075:	add    BYTE PTR [rax],al
   140024077:	add    BYTE PTR [rax],bh
   140024079:	inc    BYTE PTR [rcx]
   14002407b:	rex add DWORD PTR [rax],eax
   14002407e:	add    BYTE PTR [rax],al
   140024080:	xor    al,0xfe
   140024082:	add    DWORD PTR [rax+0x1],eax
   140024085:	add    BYTE PTR [rax],al
   140024087:	add    BYTE PTR [rax],dh
   140024089:	inc    BYTE PTR [rcx]
   14002408b:	rex add DWORD PTR [rax],eax
   14002408e:	add    BYTE PTR [rax],al
   140024090:	sub    dh,bh
   140024092:	add    DWORD PTR [rax+0x1],eax
   140024095:	add    BYTE PTR [rax],al
   140024097:	add    BYTE PTR [rax],bl
   140024099:	inc    BYTE PTR [rcx]
   14002409b:	rex add DWORD PTR [rax],eax
   14002409e:	add    BYTE PTR [rax],al
   1400240a0:	or     al,0xfe
   1400240a2:	add    DWORD PTR [rax+0x1],eax
   1400240a5:	add    BYTE PTR [rax],al
   1400240a7:	add    BYTE PTR [rsi+rdi*8],al
   1400240aa:	add    DWORD PTR [rax+0x1],eax
   1400240ad:	add    BYTE PTR [rax],al
   1400240af:	add    BYTE PTR [rsi+rdi*8+0x1],cl
   1400240b3:	rex add DWORD PTR [rax],eax
   1400240b6:	add    BYTE PTR [rax],al
   1400240b8:	cld    
   1400240b9:	std    
   1400240ba:	add    DWORD PTR [rax+0x1],eax
   1400240bd:	add    BYTE PTR [rax],al
   1400240bf:	add    ah,dh
   1400240c1:	std    
   1400240c2:	add    DWORD PTR [rax+0x1],eax
   1400240c5:	add    BYTE PTR [rax],al
   1400240c7:	add    ah,ch
   1400240c9:	std    
   1400240ca:	add    DWORD PTR [rax+0x1],eax
   1400240cd:	add    BYTE PTR [rax],al
   1400240cf:	add    al,ah
   1400240d1:	std    
   1400240d2:	add    DWORD PTR [rax+0x1],eax
   1400240d5:	add    BYTE PTR [rax],al
   1400240d7:	add    al,bl
   1400240d9:	std    
   1400240da:	add    DWORD PTR [rax+0x1],eax
   1400240dd:	add    BYTE PTR [rax],al
   1400240df:	add    al,cl
   1400240e1:	std    
   1400240e2:	add    DWORD PTR [rax+0x1],eax
   1400240e5:	add    BYTE PTR [rax],al
   1400240e7:	add    BYTE PTR [rax+0x14001fd],bh
   1400240ed:	add    BYTE PTR [rax],al
   1400240ef:	add    BYTE PTR [rax+0x14001fd],dh
   1400240f5:	add    BYTE PTR [rax],al
   1400240f7:	add    BYTE PTR [rbp+rdi*8+0x14001],ch
   1400240fe:	add    BYTE PTR [rax],al
   140024100:	movabs al,ds:0x88000000014001fd
   140024109:	std    
   14002410a:	add    DWORD PTR [rax+0x1],eax
   14002410d:	add    BYTE PTR [rax],al
   14002410f:	add    BYTE PTR [rax-0x3],bh
   140024112:	add    DWORD PTR [rax+0x1],eax
   140024115:	add    BYTE PTR [rax],al
   140024117:	add    BYTE PTR [rcx],cl
   140024119:	add    al,0x0
   14002411b:	add    BYTE PTR [rcx],al
	...
   140024125:	add    BYTE PTR [rax],al
   140024127:	add    BYTE PTR [rax-0x3],dh
   14002412a:	add    DWORD PTR [rax+0x1],eax
   14002412d:	add    BYTE PTR [rax],al
   14002412f:	add    BYTE PTR [rax-0x3],ch
   140024132:	add    DWORD PTR [rax+0x1],eax
   140024135:	add    BYTE PTR [rax],al
   140024137:	add    BYTE PTR [rax-0x3],ah
   14002413a:	add    DWORD PTR [rax+0x1],eax
   14002413d:	add    BYTE PTR [rax],al
   14002413f:	add    BYTE PTR [rax-0x3],bl
   140024142:	add    DWORD PTR [rax+0x1],eax
   140024145:	add    BYTE PTR [rax],al
   140024147:	add    BYTE PTR [rax-0x3],dl
   14002414a:	add    DWORD PTR [rax+0x1],eax
   14002414d:	add    BYTE PTR [rax],al
   14002414f:	add    BYTE PTR [rax-0x3],cl
   140024152:	add    DWORD PTR [rax+0x1],eax
   140024155:	add    BYTE PTR [rax],al
   140024157:	add    BYTE PTR [rax-0x3],al
   14002415a:	add    DWORD PTR [rax+0x1],eax
   14002415d:	add    BYTE PTR [rax],al
   14002415f:	add    BYTE PTR [rax],dh
   140024161:	std    
   140024162:	add    DWORD PTR [rax+0x1],eax
   140024165:	add    BYTE PTR [rax],al
   140024167:	add    BYTE PTR [rax],ah
   140024169:	std    
   14002416a:	add    DWORD PTR [rax+0x1],eax
   14002416d:	add    BYTE PTR [rax],al
   14002416f:	add    BYTE PTR [rax],dl
   140024171:	std    
   140024172:	add    DWORD PTR [rax+0x1],eax
   140024175:	add    BYTE PTR [rax],al
   140024177:	add    al,bh
   140024179:	cld    
   14002417a:	add    DWORD PTR [rax+0x1],eax
   14002417d:	add    BYTE PTR [rax],al
   14002417f:	add    al,ah
   140024181:	cld    
   140024182:	add    DWORD PTR [rax+0x1],eax
   140024185:	add    BYTE PTR [rax],al
   140024187:	add    al,dl
   140024189:	cld    
   14002418a:	add    DWORD PTR [rax+0x1],eax
   14002418d:	add    BYTE PTR [rax],al
   14002418f:	add    BYTE PTR [rax+0x14001fc],bh
   140024195:	add    BYTE PTR [rax],al
   140024197:	add    BYTE PTR [rax+0x14001fc],dh
   14002419d:	add    BYTE PTR [rax],al
   14002419f:	add    BYTE PTR [rax+0x14001fc],ch
   1400241a5:	add    BYTE PTR [rax],al
   1400241a7:	add    BYTE PTR [rax+0x14001fc],ah
   1400241ad:	add    BYTE PTR [rax],al
   1400241af:	add    BYTE PTR [rax+0x14001fc],bl
   1400241b5:	add    BYTE PTR [rax],al
   1400241b7:	add    BYTE PTR [rax+0x14001fc],dl
   1400241bd:	add    BYTE PTR [rax],al
   1400241bf:	add    BYTE PTR [rax+0x14001fc],cl
   1400241c5:	add    BYTE PTR [rax],al
   1400241c7:	add    BYTE PTR [rax+0x14001fc],al
   1400241cd:	add    BYTE PTR [rax],al
   1400241cf:	add    BYTE PTR [rax-0x4],bh
   1400241d2:	add    DWORD PTR [rax+0x1],eax
   1400241d5:	add    BYTE PTR [rax],al
   1400241d7:	add    BYTE PTR [rax-0x4],dh
   1400241da:	add    DWORD PTR [rax+0x1],eax
   1400241dd:	add    BYTE PTR [rax],al
   1400241df:	add    BYTE PTR [rax-0x4],ch
   1400241e2:	add    DWORD PTR [rax+0x1],eax
   1400241e5:	add    BYTE PTR [rax],al
   1400241e7:	add    BYTE PTR [rax-0x4],ah
   1400241ea:	add    DWORD PTR [rax+0x1],eax
   1400241ed:	add    BYTE PTR [rax],al
   1400241ef:	add    BYTE PTR [rax-0x4],bl
   1400241f2:	add    DWORD PTR [rax+0x1],eax
   1400241f5:	add    BYTE PTR [rax],al
   1400241f7:	add    BYTE PTR [rax-0x4],cl
   1400241fa:	add    DWORD PTR [rax+0x1],eax
   1400241fd:	add    BYTE PTR [rax],al
   1400241ff:	add    BYTE PTR [rax],dh
   140024201:	cld    
   140024202:	add    DWORD PTR [rax+0x1],eax
   140024205:	add    BYTE PTR [rax],al
   140024207:	add    BYTE PTR [rax],ah
   140024209:	cld    
   14002420a:	add    DWORD PTR [rax+0x1],eax
   14002420d:	add    BYTE PTR [rax],al
   14002420f:	add    BYTE PTR [rax],dl
   140024211:	cld    
   140024212:	add    DWORD PTR [rax+0x1],eax
   140024215:	add    BYTE PTR [rax],al
   140024217:	add    BYTE PTR [rax+0x14001fc],dl
   14002421d:	add    BYTE PTR [rax],al
   14002421f:	add    BYTE PTR [rax],al
   140024221:	cld    
   140024222:	add    DWORD PTR [rax+0x1],eax
   140024225:	add    BYTE PTR [rax],al
   140024227:	add    al,dh
   140024229:	sti    
   14002422a:	add    DWORD PTR [rax+0x1],eax
   14002422d:	add    BYTE PTR [rax],al
   14002422f:	add    al,ah
   140024231:	sti    
   140024232:	add    DWORD PTR [rax+0x1],eax
   140024235:	add    BYTE PTR [rax],al
   140024237:	add    al,cl
   140024239:	sti    
   14002423a:	add    DWORD PTR [rax+0x1],eax
   14002423d:	add    BYTE PTR [rax],al
   14002423f:	add    BYTE PTR [rax+0x14001fb],bh
   140024245:	add    BYTE PTR [rax],al
   140024247:	add    BYTE PTR [rax+0x14001fb],ah
   14002424d:	add    BYTE PTR [rax],al
   14002424f:	add    BYTE PTR [rax+0x14001fb],cl
   140024255:	add    BYTE PTR [rax],al
   140024257:	add    BYTE PTR [rbx+rdi*8+0x1],bh
   14002425b:	rex add DWORD PTR [rax],eax
   14002425e:	add    BYTE PTR [rax],al
   140024260:	je     0x14002425d
   140024262:	add    DWORD PTR [rax+0x1],eax
   140024265:	add    BYTE PTR [rax],al
   140024267:	add    BYTE PTR [rax-0x5],ah
   14002426a:	add    DWORD PTR [rax+0x1],eax
   14002426d:	add    BYTE PTR [rax],al
   14002426f:	add    BYTE PTR [rax],bh
   140024271:	sti    
   140024272:	add    DWORD PTR [rax+0x1],eax
   140024275:	add    BYTE PTR [rax],al
   140024277:	add    BYTE PTR [rax],ah
   140024279:	sti    
   14002427a:	add    DWORD PTR [rax+0x1],eax
   14002427d:	add    BYTE PTR [rax],al
   14002427f:	add    BYTE PTR [rcx],al
	...
   1400242e5:	add    BYTE PTR [rax],al
   1400242e7:	add    BYTE PTR [rdi+rdi*1+0x14002],dh
	...
   140024306:	add    BYTE PTR [rax],al
   140024308:	mov    ah,0x3f
   14002430a:	add    al,BYTE PTR [rax+0x1]
	...
   140024325:	add    BYTE PTR [rax],al
   140024327:	add    BYTE PTR [rdi+rdi*1+0x14002],dh
	...
   140024346:	add    BYTE PTR [rax],al
   140024348:	mov    ah,0x3f
   14002434a:	add    al,BYTE PTR [rax+0x1]
	...
   140024365:	add    BYTE PTR [rax],al
   140024367:	add    BYTE PTR [rdi+rdi*1+0x14002],dh
	...
   140024386:	add    BYTE PTR [rax],al
   140024388:	add    DWORD PTR [rax],eax
   14002438a:	add    BYTE PTR [rax],al
   14002438c:	add    DWORD PTR [rax],eax
	...
   1400243a6:	add    BYTE PTR [rax],al
   1400243a8:	push   rax
   1400243a9:	rex.RX add r8b,BYTE PTR [rax+0x1]
	...
   1400243bd:	add    BYTE PTR [rax],al
   1400243bf:	add    BYTE PTR [rax],ah
   1400243c1:	add    DWORD PTR [rdx],eax
   1400243c3:	rex add DWORD PTR [rax],eax
   1400243c6:	add    BYTE PTR [rax],al
   1400243c8:	mov    al,0x5
   1400243ca:	add    al,BYTE PTR [rax+0x1]
   1400243cd:	add    BYTE PTR [rax],al
   1400243cf:	add    BYTE PTR [rax],dh
   1400243d1:	(bad)  
   1400243d2:	add    al,BYTE PTR [rax+0x1]
   1400243d5:	add    BYTE PTR [rax],al
   1400243d7:	add    al,al
   1400243d9:	(bad)  
   1400243da:	add    al,BYTE PTR [rax+0x1]
   1400243dd:	add    BYTE PTR [rax],al
   1400243df:	add    BYTE PTR [rax+0x1400242],al
   1400243e5:	add    BYTE PTR [rax],al
   1400243e7:	add    BYTE PTR [rax+0x1400242],al
   1400243ed:	add    BYTE PTR [rax],al
   1400243ef:	add    BYTE PTR [rax+0x140023a],al
   1400243f5:	add    BYTE PTR [rax],al
   1400243f7:	add    BYTE PTR [rbx+rax*1],ah
   1400243fa:	add    al,BYTE PTR [rax+0x1]
   1400243fd:	add    BYTE PTR [rax],al
   1400243ff:	add    BYTE PTR [rdx],al
	...
   1400244cd:	add    BYTE PTR [rax],al
   1400244cf:	add    BYTE PTR [rcx],al
   1400244d1:	add    DWORD PTR [rcx],eax
   1400244d3:	add    DWORD PTR [rcx],eax
   1400244d5:	add    DWORD PTR [rcx],eax
   1400244d7:	add    DWORD PTR [rcx],eax
   1400244d9:	add    DWORD PTR [rcx],eax
   1400244db:	add    DWORD PTR [rcx],eax
   1400244dd:	add    DWORD PTR [rcx],eax
   1400244df:	add    DWORD PTR [rcx],eax
   1400244e1:	add    DWORD PTR [rcx],eax
   1400244e3:	add    DWORD PTR [rcx],eax
   1400244e5:	add    DWORD PTR [rcx],eax
   1400244e7:	add    DWORD PTR [rcx],eax
   1400244e9:	add    DWORD PTR [rcx],eax
   1400244eb:	add    DWORD PTR [rcx],eax
   1400244ed:	add    DWORD PTR [rcx],eax
   1400244ef:	add    DWORD PTR [rdx],eax
   1400244f1:	add    al,BYTE PTR [rdx]
   1400244f3:	add    al,BYTE PTR [rdx]
   1400244f5:	add    al,BYTE PTR [rdx]
   1400244f7:	add    al,BYTE PTR [rdx]
   1400244f9:	add    al,BYTE PTR [rdx]
   1400244fb:	add    al,BYTE PTR [rdx]
   1400244fd:	add    al,BYTE PTR [rdx]
   1400244ff:	add    al,BYTE PTR [rbx]
   140024501:	add    eax,DWORD PTR [rbx]
   140024503:	add    eax,DWORD PTR [rbx]
   140024505:	add    eax,DWORD PTR [rbx]
   140024507:	add    eax,DWORD PTR [rax]
   140024509:	add    BYTE PTR [rax],al
   14002450b:	add    BYTE PTR [rax],al
   14002450d:	add    BYTE PTR [rax],al
   14002450f:	add    bh,bh
   140024511:	(bad)  
   140024512:	(bad)  
   140024513:	inc    DWORD PTR [rax]
	...
   14002451d:	add    BYTE PTR [rax],al
   14002451f:	add    bh,bh
   140024521:	(bad)  
   140024522:	(bad)  
   140024523:	inc    DWORD PTR [rax]
	...
   14002452d:	add    BYTE PTR [rax],al
   14002452f:	add    BYTE PTR [rax+0x1000070],al
   140024535:	add    BYTE PTR [rax],al
   140024537:	add    al,dh
   140024539:	icebp  
   14002453a:	(bad)  
   14002453b:	inc    DWORD PTR [rax]
   14002453d:	add    BYTE PTR [rax],al
   14002453f:	add    BYTE PTR [rax+0x53],dl
   140024542:	push   rsp
	...
   14002457f:	add    BYTE PTR [rax+0x44],dl
   140024582:	push   rsp
	...
   1400245bf:	add    BYTE PTR [rax+0x45],al
   1400245c2:	add    al,BYTE PTR [rax+0x1]
   1400245c5:	add    BYTE PTR [rax],al
   1400245c7:	add    BYTE PTR [rax+0x1400245],al
   1400245cd:	add    BYTE PTR [rax],al
   1400245cf:	add    bh,bh
   1400245d1:	(bad)  
   1400245d2:	(bad)  
   1400245d3:	call   FWORD PTR [rsi]
   1400245d5:	add    BYTE PTR [rax],al
   1400245d7:	add    BYTE PTR [rbx],bh
   1400245d9:	add    BYTE PTR [rax],al
   1400245db:	add    BYTE PTR [rdx+0x0],bl
   1400245de:	add    BYTE PTR [rax],al
   1400245e0:	js     0x1400245e2
   1400245e2:	add    BYTE PTR [rax],al
   1400245e4:	xchg   edi,eax
   1400245e5:	add    BYTE PTR [rax],al
   1400245e7:	add    BYTE PTR [rbp-0x2c000000],dh
   1400245ed:	add    BYTE PTR [rax],al
   1400245ef:	add    bl,dh
   1400245f1:	add    BYTE PTR [rax],al
   1400245f3:	add    BYTE PTR [rcx],dl
   1400245f5:	add    DWORD PTR [rax],eax
   1400245f7:	add    BYTE PTR [rax],dh
   1400245f9:	add    DWORD PTR [rax],eax
   1400245fb:	add    BYTE PTR [rsi+0x1],cl
   1400245fe:	add    BYTE PTR [rax],al
   140024600:	ins    DWORD PTR es:[rdi],dx
   140024601:	add    DWORD PTR [rax],eax
   140024603:	add    BYTE PTR [rax],al
   140024605:	add    BYTE PTR [rax],al
   140024607:	add    bh,bh
   140024609:	(bad)  
   14002460a:	(bad)  
   14002460b:	call   FWORD PTR [rsi]
   14002460d:	add    BYTE PTR [rax],al
   14002460f:	add    BYTE PTR [rdx],bh
   140024611:	add    BYTE PTR [rax],al
   140024613:	add    BYTE PTR [rcx+0x0],bl
   140024616:	add    BYTE PTR [rax],al
   140024618:	ja     0x14002461a
   14002461a:	add    BYTE PTR [rax],al
   14002461c:	xchg   esi,eax
   14002461d:	add    BYTE PTR [rax],al
   14002461f:	add    BYTE PTR [rax+rax*1+0xd30000],dh
   140024626:	add    BYTE PTR [rax],al
   140024628:	repnz add BYTE PTR [rax],al
   14002462b:	add    BYTE PTR [rax],dl
   14002462d:	add    DWORD PTR [rax],eax
   14002462f:	add    BYTE PTR [rdi],ch
   140024631:	add    DWORD PTR [rax],eax
   140024633:	add    BYTE PTR [rbp+0x1],cl
   140024636:	add    BYTE PTR [rax],al
   140024638:	ins    BYTE PTR es:[rdi],dx
   140024639:	add    DWORD PTR [rax],eax
   14002463b:	add    BYTE PTR [rax],al
   14002463d:	add    BYTE PTR [rax],al
   14002463f:	add    BYTE PTR [rsi],ch
   140024641:	add    BYTE PTR [rax],al
   140024643:	add    BYTE PTR [rsi],ch
   140024645:	add    BYTE PTR [rax],al
   140024647:	add    BYTE PTR [rax+0x46],dl
   14002464a:	add    al,BYTE PTR [rax+0x1]
   14002464d:	add    BYTE PTR [rax],al
   14002464f:	add    BYTE PTR [rax+0x46],al
   140024652:	add    al,BYTE PTR [rax+0x1]
   140024655:	add    BYTE PTR [rax],al
   140024657:	add    BYTE PTR [rdx+rbx*2+0x2],bl
   14002465b:	rex add DWORD PTR [rax],eax
   14002465e:	add    BYTE PTR [rax],al
   140024660:	pop    rsp
   140024661:	pop    rdx
   140024662:	add    al,BYTE PTR [rax+0x1]
   140024665:	add    BYTE PTR [rax],al
   140024667:	add    BYTE PTR [rdx+rbx*2+0x2],bl
   14002466b:	rex add DWORD PTR [rax],eax
   14002466e:	add    BYTE PTR [rax],al
   140024670:	pop    rsp
   140024671:	pop    rdx
   140024672:	add    al,BYTE PTR [rax+0x1]
   140024675:	add    BYTE PTR [rax],al
   140024677:	add    BYTE PTR [rdx+rbx*2+0x2],bl
   14002467b:	rex add DWORD PTR [rax],eax
   14002467e:	add    BYTE PTR [rax],al
   140024680:	pop    rsp
   140024681:	pop    rdx
   140024682:	add    al,BYTE PTR [rax+0x1]
   140024685:	add    BYTE PTR [rax],al
   140024687:	add    BYTE PTR [rdx+rbx*2+0x2],bl
   14002468b:	rex add DWORD PTR [rax],eax
   14002468e:	add    BYTE PTR [rax],al
   140024690:	pop    rsp
   140024691:	pop    rdx
   140024692:	add    al,BYTE PTR [rax+0x1]
   140024695:	add    BYTE PTR [rax],al
   140024697:	add    BYTE PTR [rdx+rbx*2+0x2],bl
   14002469b:	rex add DWORD PTR [rax],eax
   14002469e:	add    BYTE PTR [rax],al
   1400246a0:	jg     0x140024721
   1400246a2:	jg     0x140024723
   1400246a4:	jg     0x140024725
   1400246a6:	jg     0x140024727
   1400246a8:	rex.R
   1400246a9:	rex.RX add r8b,BYTE PTR [rax+0x1]
   1400246ad:	add    BYTE PTR [rax],al
   1400246af:	add    BYTE PTR [rax+0x5a],ah
   1400246b2:	add    al,BYTE PTR [rax+0x1]
   1400246b5:	add    BYTE PTR [rax],al
   1400246b7:	add    BYTE PTR [rax+0x5a],ah
   1400246ba:	add    al,BYTE PTR [rax+0x1]
   1400246bd:	add    BYTE PTR [rax],al
   1400246bf:	add    BYTE PTR [rax+0x5a],ah
   1400246c2:	add    al,BYTE PTR [rax+0x1]
   1400246c5:	add    BYTE PTR [rax],al
   1400246c7:	add    BYTE PTR [rax+0x5a],ah
   1400246ca:	add    al,BYTE PTR [rax+0x1]
   1400246cd:	add    BYTE PTR [rax],al
   1400246cf:	add    BYTE PTR [rax+0x5a],ah
   1400246d2:	add    al,BYTE PTR [rax+0x1]
   1400246d5:	add    BYTE PTR [rax],al
   1400246d7:	add    BYTE PTR [rax+0x5a],ah
   1400246da:	add    al,BYTE PTR [rax+0x1]
   1400246dd:	add    BYTE PTR [rax],al
   1400246df:	add    BYTE PTR [rax+0x5a],ah
   1400246e2:	add    al,BYTE PTR [rax+0x1]
   1400246e5:	add    BYTE PTR [rax],al
   1400246e7:	add    BYTE PTR [rax],ah
   1400246e9:	add    DWORD PTR [rdx],eax
   1400246eb:	rex add DWORD PTR [rax],eax
   1400246ee:	add    BYTE PTR [rax],al
   1400246f0:	and    al,BYTE PTR [rbx]
   1400246f2:	add    al,BYTE PTR [rax+0x1]
   1400246f5:	add    BYTE PTR [rax],al
   1400246f7:	add    BYTE PTR [rcx],al
   1400246f9:	add    BYTE PTR [rax],al
   1400246fb:	add    BYTE PTR [rsi],ch
   1400246fd:	add    BYTE PTR [rax],al
   1400246ff:	add    BYTE PTR [rcx],al
   140024701:	add    BYTE PTR [rax],al
   140024703:	add    BYTE PTR [rax],al
   140024705:	add    BYTE PTR [rax],al
   140024707:	add    dh,bh
   140024709:	(bad)  
   14002470a:	(bad)  
   14002470b:	(bad)  
   14002470c:	(bad)  
   14002470d:	(bad)  
   14002470e:	(bad)  
   14002470f:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140027000 <.pdata>:
   140027000:	add    BYTE PTR [rax],dl
   140027002:	add    BYTE PTR [rax],al
   140027004:	rex.WRX adc QWORD PTR [rax],r8
   140027007:	add    al,al
   140027009:	or     BYTE PTR [rdx],al
   14002700b:	add    BYTE PTR [rax+0x11],dl
   14002700e:	add    BYTE PTR [rax],al
   140027010:	sbb    dl,BYTE PTR [rdx]
   140027012:	add    BYTE PTR [rax],al
   140027014:	rcl    BYTE PTR [rdx+rax*1],0x0
   140027018:	sbb    al,0x12
   14002701a:	add    BYTE PTR [rax],al
   14002701c:	mov    dl,BYTE PTR [rbx]
   14002701e:	add    BYTE PTR [rax],al
   140027020:	pop    rsp
   140027021:	or     DWORD PTR [rdx],eax
   140027023:	add    BYTE PTR [rbx+rdx*1+0x13f80000],cl
   14002702a:	add    BYTE PTR [rax],al
   14002702c:	int3   
   14002702d:	or     BYTE PTR [rdx],al
   14002702f:	add    al,bh
   140027031:	adc    eax,DWORD PTR [rax]
   140027033:	add    BYTE PTR [rbx],dh
   140027035:	adc    al,0x0
   140027037:	add    BYTE PTR [rax],dl
   140027039:	or     al,0x2
   14002703b:	add    BYTE PTR [rsp+rdx*1],dh
   14002703e:	add    BYTE PTR [rax],al
   140027040:	rex.WRX adc rax,0x19f80000
   140027046:	add    al,BYTE PTR [rax]
   140027048:	push   rax
   140027049:	adc    eax,0x16170000
   14002704e:	add    BYTE PTR [rax],al
   140027050:	(bad)  
   140027051:	or     al,0x2
   140027053:	add    BYTE PTR [rax],bl
   140027055:	(bad)  
   140027056:	add    BYTE PTR [rax],al
   140027058:	(bad)  
   140027059:	(bad)  
   14002705a:	add    BYTE PTR [rax],al
   14002705c:	fmul   QWORD PTR [rax]
   14002705e:	add    al,BYTE PTR [rax]
   140027060:	and    BYTE PTR [rdi],dl
   140027062:	add    BYTE PTR [rax],al
   140027064:	mov    ebx,0xf4000018
   140027069:	or     BYTE PTR [rdx],al
   14002706b:	add    BYTE PTR [rax+rbx*1+0x198f0000],bh
   140027072:	add    BYTE PTR [rax],al
   140027074:	adc    al,0x9
   140027076:	add    al,BYTE PTR [rax]
   140027078:	nop
   140027079:	sbb    DWORD PTR [rax],eax
   14002707b:	add    BYTE PTR [rsi+0x1a],ch
   14002707e:	add    BYTE PTR [rax],al
   140027080:	sub    al,0x9
   140027082:	add    al,BYTE PTR [rax]
   140027084:	jo     0x1400270a0
   140027086:	add    BYTE PTR [rax],al
   140027088:	mov    ecx,0x4400001d
   14002708d:	or     DWORD PTR [rdx],eax
   14002708f:	add    BYTE PTR [rbp+rbx*1+0x1e2a0000],bh
   140027096:	add    BYTE PTR [rax],al
   140027098:	lods   al,BYTE PTR ds:[rsi]
   140027099:	(bad)  
   14002709a:	add    al,BYTE PTR [rax]
   14002709c:	sub    al,0x1e
   14002709e:	add    BYTE PTR [rax],al
   1400270a0:	cli    
   1400270a1:	(bad)  
   1400270a2:	add    BYTE PTR [rax],al
   1400270a4:	pop    rsp
   1400270a5:	or     DWORD PTR [rdx],eax
   1400270a7:	add    BYTE PTR [rdi+rbx*1],dl
   1400270aa:	add    BYTE PTR [rax],al
   1400270ac:	(bad)  
   1400270ad:	(bad)  
   1400270ae:	add    BYTE PTR [rax],al
   1400270b0:	ins    BYTE PTR es:[rdi],dx
   1400270b1:	or     DWORD PTR [rdx],eax
   1400270b3:	add    BYTE PTR [rdi+rbx*1+0x0],ah
   1400270b7:	add    BYTE PTR [rdi],bl
   1400270b9:	and    al,0x0
   1400270bb:	add    BYTE PTR [rcx+rcx*1+0x2],dh
   1400270bf:	add    BYTE PTR [rax],ah
   1400270c1:	and    al,0x0
   1400270c3:	add    BYTE PTR [rdi-0x73ffffd9],dl
   1400270c9:	or     DWORD PTR [rdx],eax
   1400270cb:	add    BYTE PTR [rax-0x6cffffd9],bl
   1400270d1:	sub    al,0x0
   1400270d3:	add    BYTE PTR [rcx+rcx*1+0x2c940002],ah
   1400270da:	add    BYTE PTR [rax],al
   1400270dc:	in     al,dx
   1400270dd:	xor    DWORD PTR [rax],eax
   1400270df:	add    al,cl
   1400270e1:	or     DWORD PTR [rdx],eax
   1400270e3:	add    ah,ch
   1400270e5:	xor    DWORD PTR [rax],eax
   1400270e7:	add    BYTE PTR [rbp-0x1fffffcd],bl
   1400270ed:	or     DWORD PTR [rdx],eax
   1400270ef:	add    BYTE PTR [rax-0x42ffffcd],ah
   1400270f5:	(bad)  
   1400270f6:	add    BYTE PTR [rax],al
   1400270f8:	cld    
   1400270f9:	or     DWORD PTR [rdx],eax
   1400270fb:	add    al,al
   1400270fd:	(bad)  
   1400270fe:	add    BYTE PTR [rax],al
   140027100:	jge    0x14002713a
   140027102:	add    BYTE PTR [rax],al
   140027104:	and    al,0xa
   140027106:	add    al,BYTE PTR [rax]
   140027108:	cmp    BYTE PTR [rax],0x0
   14002710b:	add    BYTE PTR [rsi+0x3c],dl
   14002710e:	add    BYTE PTR [rax],al
   140027110:	cmp    al,0xa
   140027112:	add    al,BYTE PTR [rax]
   140027114:	pop    rax
   140027115:	cmp    al,0x0
   140027117:	add    BYTE PTR [rcx+0x3f],cl
   14002711a:	add    BYTE PTR [rax],al
   14002711c:	pop    rax
   14002711d:	or     al,BYTE PTR [rdx]
   14002711f:	add    BYTE PTR [rdi+rdi*1+0x0],bl
   140027123:	add    dh,bh
   140027125:	(bad)  
   140027126:	add    BYTE PTR [rax],al
   140027128:	jo     0x140027134
   14002712a:	add    al,BYTE PTR [rax]
   14002712c:	add    BYTE PTR [rax+0x0],al
   14002712f:	add    BYTE PTR [rdx],ch
   140027131:	add    BYTE PTR [rax],al
   140027134:	adc    BYTE PTR [rdx+rax*1],cl
   140027137:	add    BYTE PTR [rax+rax*2],ch
   14002713a:	add    BYTE PTR [rax],al
   14002713c:	push   rsi
   14002713d:	add    BYTE PTR [rax],al
   140027140:	adc    BYTE PTR [rdx+rax*1],cl
   140027143:	add    BYTE PTR [rax+0x40],bl
   140027146:	add    BYTE PTR [rax],al
   140027148:	(bad)  
   140027149:	add    BYTE PTR [rax],al
   14002714c:	adc    BYTE PTR [rdx+rax*1],cl
   14002714f:	add    BYTE PTR [rax+rax*2+0x40ba0000],cl
   140027156:	add    BYTE PTR [rax],al
   140027158:	mov    BYTE PTR [rdx],cl
   14002715a:	add    al,BYTE PTR [rax]
   14002715c:	mov    esp,0xf0000040
   140027161:	add    BYTE PTR [rax],al
   140027164:	adc    BYTE PTR [rdx+rax*1],cl
   140027167:	add    al,bh
   140027169:	add    BYTE PTR [rax],al
   14002716c:	sub    BYTE PTR [rcx+0x0],al
   14002716f:	add    al,al
   140027171:	adc    al,0x2
   140027173:	add    BYTE PTR [rax],ch
   140027175:	add    BYTE PTR [r8],al
   140027178:	jbe    0x1400271bb
   14002717a:	add    BYTE PTR [rax],al
   14002717c:	lods   al,BYTE PTR ds:[rsi]
   14002717d:	(bad)  
   14002717e:	add    al,BYTE PTR [rax]
   140027180:	js     0x1400271c3
   140027182:	add    BYTE PTR [rax],al
   140027184:	rol    DWORD PTR [rcx+0x0],0x0
   140027188:	nop
   140027189:	or     al,0x2
   14002718b:	add    ah,cl
   14002718d:	add    BYTE PTR [r8],al
   140027190:	adc    al,0x42
   140027192:	add    BYTE PTR [rax],al
   140027194:	nop
   140027195:	or     al,0x2
   140027197:	add    BYTE PTR [rdx+rax*2],dl
   14002719a:	add    BYTE PTR [rax],al
   14002719c:	lahf   
   14002719d:	rex.X add BYTE PTR [rax],al
   1400271a0:	or     BYTE PTR [rbx],cl
   1400271a2:	add    al,BYTE PTR [rax]
   1400271a4:	movabs al,ds:0x10000042ec000042
   1400271ad:	or     al,0x2
   1400271af:	add    BYTE PTR [rax],bl
   1400271b1:	rex.XB add BYTE PTR [r8],al
   1400271b4:	outs   dx,BYTE PTR ds:[rsi]
   1400271b5:	rex.XB add BYTE PTR [r8],al
   1400271b8:	nop
   1400271b9:	or     al,BYTE PTR [rdx]
   1400271bb:	add    BYTE PTR [rax+0x43],dh
   1400271be:	add    BYTE PTR [rax],al
   1400271c0:	sbb    al,0x44
   1400271c2:	add    BYTE PTR [rax],al
   1400271c4:	pushf  
   1400271c5:	or     al,BYTE PTR [rdx]
   1400271c7:	add    BYTE PTR [rsp+rax*2],bl
   1400271ca:	add    BYTE PTR [rax],al
   1400271cc:	lahf   
   1400271cd:	add    BYTE PTR [r8],r8b
   1400271d0:	test   al,0xa
   1400271d2:	add    al,BYTE PTR [rax]
   1400271d4:	rol    BYTE PTR [rbp+0x0],1
   1400271d7:	add    ah,ah
   1400271d9:	add    BYTE PTR [r8],r8b
   1400271dc:	adc    BYTE PTR [rdx+rax*1],cl
   1400271df:	add    ah,ah
   1400271e1:	add    BYTE PTR [r8],r8b
   1400271e4:	fiadd  WORD PTR [rdi+0x0]
   1400271e7:	add    BYTE PTR [rdx+rcx*1+0x48700002],bh
   1400271ee:	add    BYTE PTR [rax],al
   1400271f0:	xor    DWORD PTR [rbp+0x0],ecx
   1400271f3:	add    al,ah
   1400271f5:	or     al,BYTE PTR [rdx]
   1400271f7:	add    BYTE PTR [rcx*2+0x4d8b0000],dh
   1400271fe:	add    BYTE PTR [rax],al
   140027200:	rcl    BYTE PTR [rdx+rax*1],0x0
   140027204:	xchg   esp,eax
   140027205:	rex.WRB add BYTE PTR [r8],r8b
   140027208:	or     cl,BYTE PTR [rsi+0x0]
   14002720b:	add    al,al
   14002720d:	adc    al,0x2
   14002720f:	add    BYTE PTR [rsi+rcx*2],cl
   140027212:	add    BYTE PTR [rax],al
   140027214:	rex.W
   140027215:	rex.WRX add BYTE PTR [rax],r8b
   140027218:	nop
   140027219:	or     al,0x2
   14002721b:	add    BYTE PTR [rax+0x4e],cl
   14002721e:	add    BYTE PTR [rax],al
   140027220:	mov    dl,0x4e
   140027222:	add    BYTE PTR [rax],al
   140027224:	or     BYTE PTR [rbx],cl
   140027226:	add    al,BYTE PTR [rax]
   140027228:	mov    esp,0x3700004e
   14002722d:	push   rcx
   14002722e:	add    BYTE PTR [rax],al
   140027230:	sbb    al,0xb
   140027232:	add    al,BYTE PTR [rax]
   140027234:	cmp    BYTE PTR [rcx+0x0],dl
   140027237:	add    BYTE PTR [rbx+rdx*2],bl
   14002723a:	add    BYTE PTR [rax],al
   14002723c:	cmp    BYTE PTR [rbx],cl
   14002723e:	add    al,BYTE PTR [rax]
   140027240:	sbb    al,0x53
   140027242:	add    BYTE PTR [rax],al
   140027244:	add    dl,BYTE PTR [rax+rax*1+0x0]
   140027248:	pop    rax
   140027249:	or     eax,DWORD PTR [rdx]
   14002724b:	add    BYTE PTR [rsp+rdx*2],al
   14002724e:	add    BYTE PTR [rax],al
   140027250:	ret    
   140027251:	push   rsp
   140027252:	add    BYTE PTR [rax],al
   140027254:	jo     0x140027261
   140027256:	add    al,BYTE PTR [rax]
   140027258:	(bad)  
   140027259:	push   rsp
   14002725a:	add    BYTE PTR [rax],al
   14002725c:	lods   al,BYTE PTR ds:[rsi]
   14002725d:	push   rdi
   14002725e:	add    BYTE PTR [rax],al
   140027260:	mov    BYTE PTR [rbx],cl
   140027262:	add    al,BYTE PTR [rax]
   140027264:	lods   al,BYTE PTR ds:[rsi]
   140027265:	push   rdi
   140027266:	add    BYTE PTR [rax],al
   140027268:	test   al,0x58
   14002726a:	add    BYTE PTR [rax],al
   14002726c:	test   al,0xb
   14002726e:	add    al,BYTE PTR [rax]
   140027270:	test   al,0x58
   140027272:	add    BYTE PTR [rax],al
   140027274:	rex.X pop rcx
   140027276:	add    BYTE PTR [rax],al
   140027278:	lods   al,BYTE PTR ds:[rsi]
   140027279:	(bad)  
   14002727a:	add    al,BYTE PTR [rax]
   14002727c:	rex.R pop rcx
   14002727e:	add    BYTE PTR [rax],al
   140027280:	test   BYTE PTR [rdx+0x0],bl
   140027283:	add    BYTE PTR [rbx+rcx*1+0x5a840002],bh
   14002728a:	add    BYTE PTR [rax],al
   14002728c:	or     ebx,DWORD PTR [rax+rax*1+0x0]
   140027290:	or     BYTE PTR [rbx],cl
   140027292:	add    al,BYTE PTR [rax]
   140027294:	or     al,0x5c
   140027296:	add    BYTE PTR [rax],al
   140027298:	push   0xffffffffcc00005c
   14002729d:	or     BYTE PTR [rdx],al
   14002729f:	add    BYTE PTR [rax+0x5c],ch
   1400272a2:	add    BYTE PTR [rax],al
   1400272a4:	sub    al,0x5d
   1400272a6:	add    BYTE PTR [rax],al
   1400272a8:	fmul   DWORD PTR [rbx]
   1400272aa:	add    al,BYTE PTR [rax]
   1400272ac:	sub    al,0x5d
   1400272ae:	add    BYTE PTR [rax],al
   1400272b0:	rex.XB pop r14
   1400272b2:	add    BYTE PTR [rax],al
   1400272b4:	fmul   DWORD PTR [rbx]
   1400272b6:	add    al,BYTE PTR [rax]
   1400272b8:	rex.R pop rsi
   1400272ba:	add    BYTE PTR [rax],al
   1400272bc:	(bad)  
   1400272bd:	(bad)  
   1400272be:	add    BYTE PTR [rax],al
   1400272c0:	hlt    
   1400272c1:	or     eax,DWORD PTR [rdx]
   1400272c3:	add    BYTE PTR [rax],dl
   1400272c5:	(bad)  
   1400272c6:	add    BYTE PTR [rax],al
   1400272c8:	outs   dx,BYTE PTR ds:[rsi]
   1400272c9:	(bad)  
   1400272ca:	add    BYTE PTR [rax],al
   1400272cc:	js     0x1400272e0
   1400272ce:	add    al,BYTE PTR [rax]
   1400272d0:	jo     0x140027333
   1400272d2:	add    BYTE PTR [rax],al
   1400272d4:	mul    BYTE PTR [rcx+0x0]
   1400272d7:	add    BYTE PTR [rsi+rdx*1+0x61f80002],ch
   1400272de:	add    BYTE PTR [rax],al
   1400272e0:	cmp    eax,0xc0000062
   1400272e5:	adc    al,0x2
   1400272e7:	add    BYTE PTR [rax+0x62],al
   1400272ea:	add    BYTE PTR [rax],al
   1400272ec:	jle    0x140027350
   1400272ee:	add    BYTE PTR [rax],al
   1400272f0:	nop
   1400272f1:	or     al,0x2
   1400272f3:	add    BYTE PTR [rax-0x50ffff9e],al
   1400272f9:	(bad)  
   1400272fa:	add    BYTE PTR [rax],al
   1400272fc:	adc    BYTE PTR [rdx+rax*1],cl
   1400272ff:	add    BYTE PTR [rax-0x8ffff9e],dh
   140027305:	(bad)  
   140027306:	add    BYTE PTR [rax],al
   140027308:	rcl    BYTE PTR [rdx+rax*1],0x0
   14002730c:	clc    
   14002730d:	(bad)  
   14002730e:	add    BYTE PTR [rax],al
   140027310:	(bad)  
   140027311:	add    BYTE PTR fs:[rax],al
   140027314:	sbb    BYTE PTR [rdx+rax*1],cl
   140027317:	add    BYTE PTR [rax+0x64],ah
   14002731a:	add    BYTE PTR [rax],al
   14002731c:	jmp    0x15c027386
   140027321:	adc    eax,DWORD PTR [rdx]
   140027323:	add    ah,ch
   140027325:	add    BYTE PTR gs:[rax],al
   140027328:	imul   eax,DWORD PTR gs:[rax],0x20c3000
   14002732f:	add    BYTE PTR [rax+0x69],ch
   140027332:	add    BYTE PTR [rax],al
   140027334:	pushw  0x0
   140027337:	add    BYTE PTR [rax+0x12],bh
   14002733a:	add    al,BYTE PTR [rax]
   14002733c:	push   0xffffffffcf00006a
   140027341:	imul   eax,DWORD PTR [rax],0x0
   140027344:	push   rax
   140027345:	or     al,0x2
   140027347:	add    al,dl
   140027349:	imul   eax,DWORD PTR [rax],0x0
   14002734c:	rex.RB ins BYTE PTR es:[rdi],dx
   14002734e:	add    BYTE PTR [rax],al
   140027350:	or     BYTE PTR [rbx],cl
   140027352:	add    al,BYTE PTR [rax]
   140027354:	rex.W ins BYTE PTR es:[rdi],dx
   140027356:	add    BYTE PTR [rax],al
   140027358:	(bad)  
   140027359:	ins    BYTE PTR es:[rdi],dx
   14002735a:	add    BYTE PTR [rax],al
   14002735c:	adc    BYTE PTR [rdx+rax*1],cl
   14002735f:	add    BYTE PTR [rsp+rbp*2+0x0],ah
   140027363:	add    al,cl
   140027365:	ins    BYTE PTR es:[rdi],dx
   140027366:	add    BYTE PTR [rax],al
   140027368:	lods   al,BYTE PTR ds:[rsi]
   140027369:	(bad)  
   14002736a:	add    al,BYTE PTR [rax]
   14002736c:	enter  0x6c,0x0
   140027370:	(bad)  
   140027371:	ins    DWORD PTR es:[rdi],dx
   140027372:	add    BYTE PTR [rax],al
   140027374:	rcl    BYTE PTR [rdx+rax*1],0x0
   140027378:	sbb    BYTE PTR [rbp+0x0],ch
   14002737b:	add    bl,bh
   14002737d:	ins    DWORD PTR es:[rdi],dx
   14002737e:	add    BYTE PTR [rax],al
   140027380:	fmul   DWORD PTR [rbx]
   140027382:	add    al,BYTE PTR [rax]
   140027384:	cld    
   140027385:	ins    DWORD PTR es:[rdi],dx
   140027386:	add    BYTE PTR [rax],al
   140027388:	or     ebp,DWORD PTR [rdi+0x0]
   14002738b:	add    al,bl
   14002738d:	or     eax,DWORD PTR [rdx]
   14002738f:	add    BYTE PTR [rdi+rbp*2],cl
   140027392:	add    BYTE PTR [rax],al
   140027394:	and    esi,DWORD PTR [rax+0x0]
   140027397:	add    BYTE PTR [rax+0xc],ah
   14002739a:	add    al,BYTE PTR [rax]
   14002739c:	and    al,0x70
   14002739e:	add    BYTE PTR [rax],al
   1400273a0:	cwde   
   1400273a1:	jno    0x1400273a3
   1400273a3:	add    BYTE PTR [rbx+rdx*1],bl
   1400273a6:	add    al,BYTE PTR [rax]
   1400273a8:	clc    
   1400273a9:	jno    0x1400273ab
   1400273ab:	add    dl,ah
   1400273ad:	jb     0x1400273af
   1400273af:	add    al,al
   1400273b1:	adc    al,0x2
   1400273b3:	add    ah,ah
   1400273b5:	jb     0x1400273b7
   1400273b7:	add    al,ah
   1400273b9:	jae    0x1400273bb
   1400273bb:	add    BYTE PTR [rbx+rdx*1],bl
   1400273be:	add    al,BYTE PTR [rax]
   1400273c0:	loopne 0x140027435
   1400273c2:	add    BYTE PTR [rax],al
   1400273c4:	pop    rsi
   1400273c5:	mov    DWORD PTR [rax],eax
   1400273c7:	add    BYTE PTR [rax+0xc],bh
   1400273ca:	add    al,BYTE PTR [rax]
   1400273cc:	(bad)  
   1400273cd:	mov    DWORD PTR [rax],eax
   1400273cf:	add    BYTE PTR [rdi-0x6fffff77],ch
   1400273d5:	or     al,0x2
   1400273d7:	add    ah,al
   1400273d9:	mov    DWORD PTR [rax],eax
   1400273db:	add    BYTE PTR [rcx],ah
   1400273dd:	mov    es,WORD PTR [rax]
   1400273df:	add    BYTE PTR [rax+0x2400020c],bl
   1400273e5:	mov    es,WORD PTR [rax]
   1400273e7:	add    BYTE PTR [rbx-0x4fffff6e],cl
   1400273ed:	or     al,0x2
   1400273ef:	add    BYTE PTR [rdx+rdx*4-0x6aa20000],cl
   1400273f6:	add    BYTE PTR [rax],al
   1400273f8:	(bad)  
   1400273f9:	or     al,0x2
   1400273fb:	add    BYTE PTR [rax-0x6b],ah
   1400273fe:	add    BYTE PTR [rax],al
   140027400:	imul   ebx,DWORD PTR [rax+0xcdc0000],0x987c0002
   14002740a:	add    BYTE PTR [rax],al
   14002740c:	mov    ch,0x98
   14002740e:	add    BYTE PTR [rax],al
   140027410:	nop
   140027411:	or     al,0x2
   140027413:	add    BYTE PTR [rax-0x31ffff68],bh
   140027419:	cwde   
   14002741a:	add    BYTE PTR [rax],al
   14002741c:	nop
   14002741d:	or     al,0x2
   14002741f:	add    al,ch
   140027421:	cwde   
   140027422:	add    BYTE PTR [rax],al
   140027424:	sub    ebx,DWORD PTR [rcx+0xc900000]
   14002742a:	add    al,BYTE PTR [rax]
   14002742c:	sub    al,0x99
   14002742e:	add    BYTE PTR [rax],al
   140027430:	pop    rdi
   140027431:	cdq    
   140027432:	add    BYTE PTR [rax],al
   140027434:	in     al,dx
   140027435:	or     al,0x2
   140027437:	add    BYTE PTR [rax-0x67],ah
   14002743a:	add    BYTE PTR [rax],al
   14002743c:	cdq    
   14002743d:	cdq    
   14002743e:	add    BYTE PTR [rax],al
   140027440:	rcl    BYTE PTR [rdx+rax*1],0x0
   140027444:	pushf  
   140027445:	cdq    
   140027446:	add    BYTE PTR [rax],al
   140027448:	rex.WXB (bad) 
   14002744a:	add    BYTE PTR [rax],al
   14002744c:	rcl    BYTE PTR [rdx+rax*1],0x0
   140027450:	rex.WR (bad) 
   140027452:	add    BYTE PTR [rax],al
   140027454:	fistp  DWORD PTR [rbx+0xcf80000]
   14002745a:	add    al,BYTE PTR [rax]
   14002745c:	adc    al,0x9c
   14002745e:	add    BYTE PTR [rax],al
   140027460:	cmp    bl,BYTE PTR [rax+rax*1+0x20c9000]
   140027467:	add    BYTE PTR [rsp+rbx*4],bh
   14002746a:	add    BYTE PTR [rax],al
   14002746c:	out    0x9c,eax
   14002746e:	add    BYTE PTR [rax],al
   140027470:	sub    BYTE PTR [rip+0xffffffff9d000002],cl        # 0xdd027478
   140027476:	add    BYTE PTR [rax],al
   140027478:	movabs eax,ds:0xa4000216ac00009d
   140027481:	popf   
   140027482:	add    BYTE PTR [rax],al
   140027484:	setle  BYTE PTR [rax]
   140027487:	add    BYTE PTR [rbp+rcx*1+0x2],cl
   14002748b:	add    BYTE PTR [rax],dl
   14002748d:	sahf   
   14002748e:	add    BYTE PTR [rax],al
   140027490:	test   eax,0x6c00009f
   140027495:	or     eax,0x9fac0002
   14002749a:	add    BYTE PTR [rax],al
   14002749c:	mov    esi,0x1000009f
   1400274a1:	or     al,0x2
   1400274a3:	add    al,dl
   1400274a5:	lahf   
   1400274a6:	add    BYTE PTR [rax],al
   1400274a8:	js     0x14002744a
   1400274aa:	add    BYTE PTR [rax],al
   1400274ac:	cwde   
   1400274ad:	or     eax,0xa0780002
   1400274b2:	add    BYTE PTR [rax],al
   1400274b4:	(bad)  
   1400274b5:	movabs eax,ds:0xa120000219c40000
   1400274be:	add    BYTE PTR [rax],al
   1400274c0:	push   rbp
   1400274c1:	movabs eax,ds:0xa17000020d9c0000
   1400274ca:	add    BYTE PTR [rax],al
   1400274cc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400274cd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400274ce:	add    BYTE PTR [rax],al
   1400274d0:	test   al,0xd
   1400274d2:	add    al,BYTE PTR [rax]
   1400274d4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400274d5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400274d6:	add    BYTE PTR [rax],al
   1400274d8:	rex.R movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400274da:	add    BYTE PTR [rax],al
   1400274dc:	lods   al,BYTE PTR ds:[rsi]
   1400274dd:	or     eax,0xa5600002
   1400274e2:	add    BYTE PTR [rax],al
   1400274e4:	rex.WX cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400274e6:	add    BYTE PTR [rax],al
   1400274e8:	mov    eax,0x4c00020d
   1400274ed:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400274ee:	add    BYTE PTR [rax],al
   1400274f0:	scas   eax,DWORD PTR es:[rdi]
   1400274f1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400274f2:	add    BYTE PTR [rax],al
   1400274f4:	nop
   1400274f5:	or     al,0x2
   1400274f7:	add    BYTE PTR [rax-0x32ffff5a],dh
   1400274fd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400274fe:	add    BYTE PTR [rax],al
   140027500:	adc    BYTE PTR [rdx+rax*1],cl
   140027503:	add    al,ah
   140027505:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140027506:	add    BYTE PTR [rax],al
   140027508:	jo     0x1400274b1
   14002750a:	add    BYTE PTR [rax],al
   14002750c:	ror    BYTE PTR [rip+0xffffffffa7800002],0x0        # 0xe7827515
   140027513:	add    BYTE PTR [rdi],dh
   140027515:	test   al,0x0
   140027517:	add    ah,al
   140027519:	or     eax,0xa8500002
   14002751e:	add    BYTE PTR [rax],al
   140027520:	outs   dx,DWORD PTR ds:[rsi]
   140027521:	test   al,0x0
   140027523:	add    al,cl
   140027525:	or     eax,0xa8800002
   14002752a:	add    BYTE PTR [rax],al
   14002752c:	xor    BYTE PTR [rcx+0xdd00000],ch
   140027532:	add    al,BYTE PTR [rax]
   140027534:	xor    BYTE PTR [rcx-0x55a20000],ch
   14002753a:	add    BYTE PTR [rax],al
   14002753c:	(bad)  
   14002753d:	or     eax,0xaa600002
   140027542:	add    BYTE PTR [rax],al
   140027544:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140027545:	stos   DWORD PTR es:[rdi],eax
   140027546:	add    BYTE PTR [rax],al
   140027548:	cld    
   140027549:	or     eax,0xaba40002
   14002754e:	add    BYTE PTR [rax],al
   140027550:	(bad)  
   140027551:	stos   DWORD PTR es:[rdi],eax
   140027552:	add    BYTE PTR [rax],al
   140027554:	sub    al,0xe
   140027556:	add    al,BYTE PTR [rax]
   140027558:	shr    BYTE PTR [rbx-0x53500000],1
   14002755e:	add    BYTE PTR [rax],al
   140027560:	nop
   140027561:	or     al,0x2
   140027563:	add    BYTE PTR [rax-0x28ffff54],dh
   140027569:	lods   al,BYTE PTR ds:[rsi]
   14002756a:	add    BYTE PTR [rax],al
   14002756c:	adc    BYTE PTR [rdx+rax*1],cl
   14002756f:	add    al,bl
   140027571:	lods   al,BYTE PTR ds:[rsi]
   140027572:	add    BYTE PTR [rax],al
   140027574:	cmp    ebp,DWORD PTR [rbp+0xc900000]
   14002757a:	add    al,BYTE PTR [rax]
   14002757c:	cmp    al,0xad
   14002757e:	add    BYTE PTR [rax],al
   140027580:	ins    DWORD PTR es:[rdi],dx
   140027581:	lods   eax,DWORD PTR ds:[rsi]
   140027582:	add    BYTE PTR [rax],al
   140027584:	nop
   140027585:	or     al,0x2
   140027587:	add    ah,bl
   140027589:	lods   eax,DWORD PTR ds:[rsi]
   14002758a:	add    BYTE PTR [rax],al
   14002758c:	push   rsi
   14002758d:	scas   al,BYTE PTR es:[rdi]
   14002758e:	add    BYTE PTR [rax],al
   140027590:	rcl    BYTE PTR [rdx+rax*1],0x0
   140027594:	pop    rax
   140027595:	scas   al,BYTE PTR es:[rdi]
   140027596:	add    BYTE PTR [rax],al
   140027598:	mov    esi,0x340000ae
   14002759d:	(bad)  
   14002759e:	add    al,BYTE PTR [rax]
   1400275a0:	shr    BYTE PTR [rsi-0x508e0000],0x0
   1400275a7:	add    BYTE PTR [rax+0xe],bl
   1400275aa:	add    al,BYTE PTR [rax]
   1400275ac:	je     0x14002755d
   1400275ae:	add    BYTE PTR [rax],al
   1400275b0:	(bad)  
   1400275b1:	mov    al,0x0
   1400275b3:	add    BYTE PTR [rax+0xe],bl
   1400275b6:	add    al,BYTE PTR [rax]
   1400275b8:	or     BYTE PTR [rax-0x4e910000],dh
   1400275be:	add    BYTE PTR [rax],al
   1400275c0:	push   0x7000020e
   1400275c5:	mov    cl,0x0
   1400275c7:	add    BYTE PTR [rbp-0x4e],al
   1400275ca:	add    BYTE PTR [rax],al
   1400275cc:	nop
   1400275cd:	(bad)  
   1400275ce:	add    al,BYTE PTR [rax]
   1400275d0:	push   rsp
   1400275d1:	mov    dl,0x0
   1400275d3:	add    BYTE PTR [rcx],al
   1400275d5:	mov    bl,0x0
   1400275d7:	add    ah,cl
   1400275d9:	(bad)  
   1400275da:	add    al,BYTE PTR [rax]
   1400275dc:	add    al,0xb3
   1400275de:	add    BYTE PTR [rax],al
   1400275e0:	mov    edx,0xac0000b3
   1400275e5:	(bad)  
   1400275e6:	add    al,BYTE PTR [rax]
   1400275e8:	mov    esp,0x8f0000b3
   1400275ed:	mov    ah,0x0
   1400275ef:	add    BYTE PTR [rsi+rdx*1-0x4b6ffffe],ch
   1400275f6:	add    BYTE PTR [rax],al
   1400275f8:	int    0xb4
   1400275fa:	add    BYTE PTR [rax],al
   1400275fc:	lock (bad) 
   1400275fe:	add    al,BYTE PTR [rax]
   140027600:	shl    BYTE PTR [rax+rax*1+0xb57700],1
   140027607:	add    al,bh
   140027609:	(bad)  
   14002760a:	add    al,BYTE PTR [rax]
   14002760c:	movabs al,ds:0x280000b6550000b5
   140027615:	lar    eax,WORD PTR [rax]
   140027618:	pop    rax
   140027619:	mov    dh,0x0
   14002761b:	add    BYTE PTR [rsi-0x45],dl
   14002761e:	add    BYTE PTR [rax],al
   140027620:	sub    al,0xf
   140027622:	add    al,BYTE PTR [rax]
   140027624:	cmp    BYTE PTR [rbx-0x43b50000],0x0
   14002762b:	add    ah,al
   14002762d:	sbb    DWORD PTR [rdx],eax
   14002762f:	add    BYTE PTR [rsp+rdi*4+0x0],cl
   140027633:	add    BYTE PTR [rdx-0x44],ah
   140027636:	add    BYTE PTR [rax],al
   140027638:	sub    al,0xe
   14002763a:	add    al,BYTE PTR [rax]
   14002763c:	fs mov esp,0xbcf30000
   140027642:	add    BYTE PTR [rax],al
   140027644:	(bad)  
   140027645:	sbb    DWORD PTR [rdx],eax
   140027647:	add    BYTE PTR [rdi*4-0x425a0000],cl
   14002764e:	add    BYTE PTR [rax],al
   140027650:	push   rax
   140027651:	lar    eax,WORD PTR [rax]
   140027654:	lock mov ebp,0xbe100000
   14002765a:	add    BYTE PTR [rax],al
   14002765c:	adc    BYTE PTR [rdx+rax*1],cl
   14002765f:	add    BYTE PTR [rax],dl
   140027661:	mov    esi,0xbe300000
   140027666:	add    BYTE PTR [rax],al
   140027668:	adc    BYTE PTR [rdx+rax*1],cl
   14002766b:	add    BYTE PTR [rax],dh
   14002766d:	mov    esi,0xbe760000
   140027672:	add    BYTE PTR [rax],al
   140027674:	nop
   140027675:	or     al,0x2
   140027677:	add    BYTE PTR [rax-0x42],bh
   14002767a:	add    BYTE PTR [rax],al
   14002767c:	icebp  
   14002767d:	mov    esi,0x16ac0000
   140027682:	add    al,BYTE PTR [rax]
   140027684:	hlt    
   140027685:	mov    esi,0xbf400000
   14002768a:	add    BYTE PTR [rax],al
   14002768c:	nop
   14002768d:	or     al,0x2
   14002768f:	add    BYTE PTR [rax-0x41],al
   140027692:	add    BYTE PTR [rax],al
   140027694:	sub    al,0xc0
   140027696:	add    BYTE PTR [rax],al
   140027698:	pop    rsp
   140027699:	lar    eax,WORD PTR [rax]
   14002769c:	sub    al,0xc0
   14002769e:	add    BYTE PTR [rax],al
   1400276a0:	outs   dx,DWORD PTR ds:[rsi]
   1400276a1:	rol    BYTE PTR [rax],0x0
   1400276a4:	pushf  
   1400276a5:	lar    eax,WORD PTR [rax]
   1400276a8:	cwde   
   1400276a9:	rol    BYTE PTR [rax],0x0
   1400276ac:	sbb    bl,al
   1400276ae:	add    BYTE PTR [rax],al
   1400276b0:	ror    BYTE PTR [rdi],0x2
   1400276b3:	add    BYTE PTR [rax],bl
   1400276b5:	ret    
   1400276b6:	add    BYTE PTR [rax],al
   1400276b8:	rex.WX ret 
   1400276ba:	add    BYTE PTR [rax],al
   1400276bc:	(bad)  
   1400276bd:	lar    eax,WORD PTR [rax]
   1400276c0:	rex.WR ret 
   1400276c2:	add    BYTE PTR [rax],al
   1400276c4:	int3   
   1400276c5:	ret    
   1400276c6:	add    BYTE PTR [rax],al
   1400276c8:	nop
   1400276c9:	or     al,0x2
   1400276cb:	add    ah,cl
   1400276cd:	ret    
   1400276ce:	add    BYTE PTR [rax],al
   1400276d0:	faddp  st(3),st
   1400276d2:	add    BYTE PTR [rax],al
   1400276d4:	adc    BYTE PTR [rdx+rax*1],cl
   1400276d7:	add    al,ah
   1400276d9:	ret    
   1400276da:	add    BYTE PTR [rax],al
   1400276dc:	add    eax,esp
   1400276de:	add    BYTE PTR [rax],al
   1400276e0:	nop
   1400276e1:	or     al,0x2
   1400276e3:	add    BYTE PTR [rsp+rax*8],al
   1400276e6:	add    BYTE PTR [rax],al
   1400276e8:	xor    ah,al
   1400276ea:	add    BYTE PTR [rax],al
   1400276ec:	cld    
   1400276ed:	lar    eax,WORD PTR [rax]
   1400276f0:	xor    ah,al
   1400276f2:	add    BYTE PTR [rax],al
   1400276f4:	mov    al,0xc4
   1400276f6:	add    BYTE PTR [rax],al
   1400276f8:	nop
   1400276f9:	or     al,0x2
   1400276fb:	add    BYTE PTR [rax-0x5dffff3c],dh
   140027701:	(bad)
   140027704:	sbb    al,0x10
   140027706:	add    al,BYTE PTR [rax]
   140027708:	rol    ch,0x0
   14002770b:	add    BYTE PTR [rdi+0x380000c6],al
   140027711:	adc    BYTE PTR [rdx],al
   140027713:	add    BYTE PTR [rax+0x210000c6],cl
   140027719:	mov    DWORD PTR [rax],0x20e5800
   14002771f:	add    BYTE PTR [rdi+rax*8],ah
   140027722:	add    BYTE PTR [rax],al
   140027724:	(bad)
   140027727:	add    BYTE PTR [rax-0x37fffdf4],dl
   14002772d:	mov    DWORD PTR [rax],0xc84600
   140027733:	add    BYTE PTR [rax+rdx*1],bh
   140027736:	add    al,BYTE PTR [rax]
   140027738:	rex.W enter 0x0,0xcb
   14002773d:	enter  0x0,0x3c
   140027741:	adc    BYTE PTR [rdx],al
   140027743:	add    ah,cl
   140027745:	enter  0x0,0x4a
   140027749:	leave  
   14002774a:	add    BYTE PTR [rax],al
   14002774c:	cmp    al,0x10
   14002774e:	add    al,BYTE PTR [rax]
   140027750:	rex.WR leave 
   140027752:	add    BYTE PTR [rax],al
   140027754:	ror    cl,1
   140027756:	add    BYTE PTR [rax],al
   140027758:	adc    BYTE PTR [rdx],r8b
   14002775b:	add    al,dl
   14002775d:	leave  
   14002775e:	add    BYTE PTR [rax],al
   140027760:	push   rdi
   140027761:	retf   0x0
   140027764:	js     0x140027778
   140027766:	add    al,BYTE PTR [rax]
   140027768:	jo     0x140027734
   14002776a:	add    BYTE PTR [rax],al
   14002776c:	push   rsi
   14002776d:	retf   
   14002776e:	add    BYTE PTR [rax],al
   140027770:	pop    rax
   140027771:	adc    BYTE PTR [rdx],al
   140027773:	add    BYTE PTR [rax-0x35],bl
   140027776:	add    BYTE PTR [rax],al
   140027778:	pushf  
   140027779:	retf   
   14002777a:	add    BYTE PTR [rax],al
   14002777c:	rcl    BYTE PTR [rdx+rax*1],0x0
   140027780:	pushf  
   140027781:	retf   
   140027782:	add    BYTE PTR [rax],al
   140027784:	mov    edi,0x840000cb
   140027789:	adc    BYTE PTR [rdx],al
   14002778b:	add    al,al
   14002778d:	retf   
   14002778e:	add    BYTE PTR [rax],al
   140027790:	(bad)  
   140027792:	add    BYTE PTR [rax],al
   140027794:	adc    BYTE PTR [rdx+rax*1],cl
   140027797:	add    BYTE PTR [rax],dl
   140027799:	int3   
   14002779a:	add    BYTE PTR [rax],al
   14002779c:	rex.X (bad) 
   14002779e:	add    BYTE PTR [rax],al
   1400277a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400277a1:	adc    BYTE PTR [rdx],al
   1400277a3:	add    BYTE PTR [rsi+rcx*8+0x0],bl
   1400277a7:	add    BYTE PTR [rdi-0x2bffff31],ah
   1400277ad:	adc    BYTE PTR [rdx],al
   1400277af:	add    BYTE PTR [rax-0x26ffff31],ch
   1400277b5:	iret   
   1400277b6:	add    BYTE PTR [rax],al
   1400277b8:	adc    BYTE PTR [rdx+rax*1],cl
   1400277bb:	add    ah,bl
   1400277bd:	iret   
   1400277be:	add    BYTE PTR [rax],al
   1400277c0:	rex.WXB rol BYTE PTR [r8],1
   1400277c3:	add    ah,dh
   1400277c5:	adc    BYTE PTR [rdx],al
   1400277c7:	add    BYTE PTR [rax+rdx*8+0x0],cl
   1400277cb:	add    BYTE PTR [rdx-0x30],ch
   1400277ce:	add    BYTE PTR [rax],al
   1400277d0:	sub    al,0xe
   1400277d2:	add    al,BYTE PTR [rax]
   1400277d4:	je     0x1400277a6
   1400277d6:	add    BYTE PTR [rax],al
   1400277d8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400277d9:	rol    BYTE PTR [rax],1
   1400277db:	add    BYTE PTR [rax-0x2ffffdf4],dl
   1400277e1:	rol    BYTE PTR [rax],1
   1400277e3:	add    ch,dh
   1400277e5:	rol    BYTE PTR [rax],1
   1400277e7:	add    BYTE PTR [rax],dl
   1400277e9:	or     al,0x2
   1400277eb:	add    al,bh
   1400277ed:	rol    BYTE PTR [rax],1
   1400277ef:	add    BYTE PTR [rbp+0x80000d1],ch
   1400277f5:	adc    DWORD PTR [rdx],eax
   1400277f7:	add    BYTE PTR [rax+0x340000d1],dh
   1400277fd:	rol    BYTE PTR [rax],cl
   1400277ff:	add    al,al
   140027801:	adc    al,0x2
   140027803:	add    BYTE PTR [rdx+rdx*8],dh
   140027806:	add    BYTE PTR [rax],al
   140027808:	pop    rax
   140027809:	rol    BYTE PTR [rax],cl
   14002780b:	add    BYTE PTR [rax+0x5800020c],dl
   140027811:	rol    BYTE PTR [rax],cl
   140027813:	add    BYTE PTR [rbx+0x3c0000d3],cl
   140027819:	adc    DWORD PTR [rdx],eax
   14002781b:	add    BYTE PTR [rbx+rdx*8-0x2c360000],cl
   140027822:	add    BYTE PTR [rax],al
   140027824:	nop
   140027825:	or     al,0x2
   140027827:	add    ah,cl
   140027829:	rol    DWORD PTR [rax],cl
   14002782b:	add    BYTE PTR [rbp-0x2c],cl
   14002782e:	add    BYTE PTR [rax],al
   140027830:	nop
   140027831:	or     al,0x2
   140027833:	add    BYTE PTR [rax-0x2c],dl
   140027836:	add    BYTE PTR [rax],al
   140027838:	xchg   ebx,eax
   140027839:	(bad)  
   14002783a:	add    BYTE PTR [rax],al
   14002783c:	nop
   14002783d:	or     al,0x2
   14002783f:	add    BYTE PTR [rsp+rdx*8-0x2a620000],dl
   140027846:	add    BYTE PTR [rax],al
   140027848:	jo     0x14002785b
   14002784a:	add    al,BYTE PTR [rax]
   14002784c:	movabs al,ds:0x100000d5b70000d5
   140027855:	or     al,0x2
   140027857:	add    BYTE PTR [rax-0xfffff2b],bh
   14002785d:	(bad)  
   14002785e:	add    BYTE PTR [rax],al
   140027860:	rcl    BYTE PTR [rdx+rax*1],0x0
   140027864:	lock (bad) 
   140027866:	add    BYTE PTR [rax],al
   140027868:	sub    dh,dl
   14002786a:	add    BYTE PTR [rax],al
   14002786c:	rcl    BYTE PTR [rdx+rax*1],0x0
   140027870:	sub    dh,dl
   140027872:	add    BYTE PTR [rax],al
   140027874:	pop    rsi
   140027875:	(bad)  
   140027876:	add    BYTE PTR [rax],al
   140027878:	rcl    BYTE PTR [rdx+rax*1],0x0
   14002787c:	loopne 0x140027854
   14002787e:	add    BYTE PTR [rax],al
   140027880:	and    edi,edx
   140027882:	add    BYTE PTR [rax],al
   140027884:	movabs al,ds:0x210000d724000211
   14002788d:	fld    DWORD PTR [rax]
   14002788f:	add    al,al
   140027891:	adc    DWORD PTR [rdx],eax
   140027893:	add    BYTE PTR [rax-0x27],dl
   140027896:	add    BYTE PTR [rax],al
   140027898:	lods   eax,DWORD PTR ds:[rsi]
   140027899:	fild   DWORD PTR [rax]
   14002789b:	add    ah,bl
   14002789d:	adc    DWORD PTR [rdx],eax
   14002789f:	add    BYTE PTR [rax-0xcffff25],dh
   1400278a5:	fild   DWORD PTR [rax]
   1400278a7:	add    BYTE PTR [rax],dl
   1400278a9:	or     al,0x2
   1400278ab:	add    ah,dh
   1400278ad:	fild   DWORD PTR [rax]
   1400278af:	add    ch,al
   1400278b1:	fadd   QWORD PTR [rax]
   1400278b3:	add    BYTE PTR [rax],al
   1400278b5:	adc    al,BYTE PTR [rdx]
   1400278b7:	add    al,cl
   1400278b9:	fadd   QWORD PTR [rax]
   1400278bb:	add    bh,bh
   1400278bd:	fadd   QWORD PTR [rax]
   1400278bf:	add    BYTE PTR [rax],dl
   1400278c1:	adc    al,BYTE PTR [rdx]
   1400278c3:	add    BYTE PTR [rax],al
   1400278c5:	fld    QWORD PTR [rax]
   1400278c7:	add    BYTE PTR [rsi-0x23],al
   1400278ca:	add    BYTE PTR [rax],al
   1400278cc:	nop
   1400278cd:	or     al,0x2
   1400278cf:	add    BYTE PTR [rax-0x23],cl
   1400278d2:	add    BYTE PTR [rax],al
   1400278d4:	cdq    
   1400278d5:	fld    QWORD PTR [rax]
   1400278d7:	add    BYTE PTR [rax],bl
   1400278d9:	adc    al,BYTE PTR [rdx]
   1400278db:	add    BYTE PTR [rbp+rbx*8-0x21cf0000],bl
   1400278e2:	add    BYTE PTR [rax],al
   1400278e4:	(bad)  
   1400278e5:	or     al,0x2
   1400278e7:	add    BYTE PTR [rsi+rbx*8],dh
   1400278ea:	add    BYTE PTR [rax],al
   1400278ec:	loopne 0x1400278d6
   1400278ee:	add    BYTE PTR [rax],al
   1400278f0:	sub    al,0x12
   1400278f2:	add    al,BYTE PTR [rax]
   1400278f4:	loopne 0x1400278de
   1400278f6:	add    BYTE PTR [rax],al
   1400278f8:	loop   0x1400278e3
   1400278fa:	add    BYTE PTR [rax],al
   1400278fc:	push   rax
   1400278fd:	adc    al,BYTE PTR [rdx]
   1400278ff:	add    ah,ch
   140027901:	jmp    0x12ae07906
   140027906:	add    BYTE PTR [rax],al
   140027908:	push   0xffffffffe0000212
   14002790d:	(bad)  
   14002790e:	add    BYTE PTR [rax],al
   140027910:	rex.B jmp 0x140027913
   140027913:	add    BYTE PTR [rax+0x4400020c],dl
   140027919:	jmp    0x14002791b
   14002791b:	add    BYTE PTR [rbp-0x6fffff15],al
   140027921:	or     al,0x2
   140027923:	add    BYTE PTR [rbx+rbp*8-0x141b0000],ah
   14002792a:	add    BYTE PTR [rax],al
   14002792c:	adc    BYTE PTR [rdx+rax*1],cl
   14002792f:	add    al,ch
   140027931:	jmp    0x140027933
   140027933:	add    BYTE PTR [rax],al
   140027935:	in     al,dx
   140027936:	add    BYTE PTR [rax],al
   140027938:	adc    BYTE PTR [rdx+rax*1],cl
   14002793b:	add    BYTE PTR [rax],al
   14002793d:	in     al,dx
   14002793e:	add    BYTE PTR [rax],al
   140027940:	shr    ch,1
   140027942:	add    BYTE PTR [rax],al
   140027944:	js     0x140027958
   140027946:	add    al,BYTE PTR [rax]
   140027948:	shr    ch,1
   14002794a:	add    BYTE PTR [rax],al
   14002794c:	rex.WB out dx,al
   14002794e:	add    BYTE PTR [rax],al
   140027950:	rcl    BYTE PTR [rdx+rax*1],0x0
   140027954:	rex.WR out dx,al
   140027956:	add    BYTE PTR [rax],al
   140027958:	jl     0x140027949
   14002795a:	add    BYTE PTR [rax],al
   14002795c:	hlt    
   14002795d:	adc    BYTE PTR [rdx],al
   14002795f:	add    BYTE PTR [rdi+rbp*8+0x0],bh
   140027963:	add    BYTE PTR [rbx-0xf],cl
   140027966:	add    BYTE PTR [rax],al
   140027968:	fmul   DWORD PTR [rbx]
   14002796a:	add    al,BYTE PTR [rax]
   14002796c:	rex.WR icebp 
   14002796e:	add    BYTE PTR [rax],al
   140027970:	rex.X
   140027971:	repnz add BYTE PTR [rax],al
   140027974:	mov    WORD PTR [rdx],ss
   140027976:	add    al,BYTE PTR [rax]
   140027978:	rex.R
   140027979:	repnz add BYTE PTR [rax],al
   14002797c:	cmp    bl,dh
   14002797e:	add    BYTE PTR [rax],al
   140027980:	pushf  
   140027981:	adc    al,BYTE PTR [rdx]
   140027983:	add    BYTE PTR [rax],bh
   140027985:	repz add BYTE PTR [rax],al
   140027988:	or     dh,dh
   14002798a:	add    BYTE PTR [rax],al
   14002798c:	mov    ah,0x12
   14002798e:	add    al,BYTE PTR [rax]
   140027990:	or     al,0xf6
   140027992:	add    BYTE PTR [rax],al
   140027994:	(bad)  
   140027995:	test   BYTE PTR [rax],0x0
   140027998:	adc    BYTE PTR [rdx+rax*1],cl
   14002799b:	add    BYTE PTR [rsi+rsi*8+0x0],ah
   14002799f:	add    BYTE PTR [rdi],dl
   1400279a1:	test   DWORD PTR [rax],0x212d000
   1400279a7:	add    BYTE PTR [rax],bl
   1400279a9:	test   DWORD PTR [rax],0xf7ae00
   1400279af:	add    BYTE PTR [rsi+rdx*1-0x84ffffe],ch
   1400279b6:	add    BYTE PTR [rax],al
   1400279b8:	(bad)  
   1400279b9:	test   DWORD PTR [rax],0x20c1000
   1400279bf:	add    al,bl
   1400279c1:	test   DWORD PTR [rax],0x1084c00
   1400279c7:	add    ah,bl
   1400279c9:	adc    al,BYTE PTR [rdx]
   1400279cb:	add    BYTE PTR [rax+rcx*1+0x1],cl
   1400279cf:	add    cl,bl
   1400279d1:	or     DWORD PTR [rcx],eax
   1400279d3:	add    BYTE PTR [rax],al
   1400279d5:	adc    eax,DWORD PTR [rdx]
   1400279d7:	add    ah,bl
   1400279d9:	or     DWORD PTR [rcx],eax
   1400279db:	add    BYTE PTR [rsi],ah
   1400279dd:	or     eax,DWORD PTR [rcx]
   1400279df:	add    BYTE PTR [rbx+rdx*1],dl
   1400279e2:	add    al,BYTE PTR [rax]
   1400279e4:	sub    BYTE PTR [rbx],cl
   1400279e6:	add    DWORD PTR [rax],eax
   1400279e8:	rex.WRX or r8,QWORD PTR [rcx]
   1400279eb:	add    BYTE PTR [rax],dl
   1400279ed:	or     al,0x2
   1400279ef:	add    BYTE PTR [rax+0xb],dl
   1400279f2:	add    DWORD PTR [rax],eax
   1400279f4:	(bad)  
   1400279f5:	or     eax,DWORD PTR [rcx]
   1400279f7:	add    BYTE PTR [rbx+rdx*1],bl
   1400279fa:	add    al,BYTE PTR [rax]
   1400279fc:	ror    BYTE PTR [rbx],1
   1400279fe:	add    DWORD PTR [rax],eax
   140027a00:	push   rbx
   140027a01:	or     al,0x1
   140027a03:	add    BYTE PTR [rbx+rdx*1],bl
   140027a06:	add    al,BYTE PTR [rax]
   140027a08:	push   rsp
   140027a09:	or     al,0x1
   140027a0b:	add    cl,bl
   140027a0d:	or     al,0x1
   140027a0f:	add    BYTE PTR [rbx+rdx*1],bl
   140027a12:	add    al,BYTE PTR [rax]
   140027a14:	fmul   QWORD PTR [rcx+rax*1]
   140027a17:	add    BYTE PTR [rbp+rcx*1+0x1],ah
   140027a1b:	add    BYTE PTR [rax+0xc],ah
   140027a1e:	add    al,BYTE PTR [rax]
   140027a20:	fs or  eax,0xe0e0001
   140027a26:	add    DWORD PTR [rax],eax
   140027a28:	xor    al,0x13
   140027a2a:	add    al,BYTE PTR [rax]
   140027a2c:	adc    BYTE PTR [rsi],cl
   140027a2e:	add    DWORD PTR [rax],eax
   140027a30:	int3   
   140027a31:	(bad)  
   140027a32:	add    DWORD PTR [rax],eax
   140027a34:	rcl    BYTE PTR [rdx+rax*1],0x0
   140027a38:	int3   
   140027a39:	(bad)  
   140027a3a:	add    DWORD PTR [rax],eax
   140027a3c:	(bad)  
   140027a3d:	sgdt   [rax]
   140027a40:	pop    rsp
   140027a41:	adc    eax,DWORD PTR [rdx]
   140027a43:	add    BYTE PTR [rax-0x38fffef1],dl
   140027a49:	sgdt   [rax]
   140027a4c:	nop
   140027a4d:	or     al,0x2
   140027a4f:	add    al,cl
   140027a51:	sgdt   [rax]
   140027a54:	sbb    dl,BYTE PTR [rcx]
   140027a56:	add    DWORD PTR [rax],eax
   140027a58:	lods   al,BYTE PTR ds:[rsi]
   140027a59:	(bad)  
   140027a5a:	add    al,BYTE PTR [rax]
   140027a5c:	sbb    al,0x11
   140027a5e:	add    DWORD PTR [rax],eax
   140027a60:	rcl    BYTE PTR [rbx],cl
   140027a62:	add    DWORD PTR [rax],eax
   140027a64:	test   BYTE PTR [rbx],dl
   140027a66:	add    al,BYTE PTR [rax]
   140027a68:	(bad)  
   140027a69:	adc    eax,DWORD PTR [rcx]
   140027a6b:	add    BYTE PTR [rbx],ch
   140027a6d:	adc    eax,0x139c0001
   140027a72:	add    al,BYTE PTR [rax]
   140027a74:	rex adc eax,0x15640001
   140027a7a:	add    DWORD PTR [rax],eax
   140027a7c:	enter  0x213,0x0
   140027a80:	jo     0x140027a97
   140027a82:	add    DWORD PTR [rax],eax
   140027a84:	mov    BYTE PTR [rip+0x13d00001],dl        # 0x153d27a8b
   140027a8a:	add    al,BYTE PTR [rax]
   140027a8c:	nop
   140027a8d:	adc    eax,0x15910001
   140027a92:	add    DWORD PTR [rax],eax
   140027a94:	(bad)  
   140027a95:	adc    eax,DWORD PTR [rdx]
   140027a97:	add    BYTE PTR [rax-0x5efffeeb],ah
   140027a9d:	adc    eax,0x13d80001
   140027aa2:	add    al,BYTE PTR [rax]
   140027aa4:	mov    ah,0x15
   140027aa6:	add    DWORD PTR [rax],eax
   140027aa8:	(bad)  
   140027aa9:	(bad)  
   140027aaa:	add    DWORD PTR [rax],eax
   140027aac:	js     0x140027ac0
   140027aae:	add    al,BYTE PTR [rax]
   140027ab0:	fs (bad) 
   140027ab2:	add    DWORD PTR [rax],eax
   140027ab4:	(bad)  
   140027ab5:	(bad)  
   140027ab6:	add    DWORD PTR [rax],eax
   140027ab8:	fcom   QWORD PTR [rbx]
   140027aba:	add    al,BYTE PTR [rax]
   140027abc:	adc    BYTE PTR [rdi],dl
   140027abe:	add    DWORD PTR [rax],eax
   140027ac0:	test   BYTE PTR [rdi],dl
   140027ac2:	add    DWORD PTR [rax],eax
   140027ac4:	adc    BYTE PTR [rdx+rax*1],cl
   140027ac7:	add    BYTE PTR [rdi+rdx*1+0x18290001],al
   140027ace:	add    DWORD PTR [rax],eax
   140027ad0:	in     al,dx
   140027ad1:	adc    eax,DWORD PTR [rdx]
   140027ad3:	add    BYTE PTR [rax+rbx*1+0x1],dl
   140027ad7:	add    BYTE PTR [rdx+rbx*1+0x1],bl
   140027adb:	add    BYTE PTR [rsp+rdx*1],bl
   140027ade:	add    al,BYTE PTR [rax]
   140027ae0:	pop    rsp
   140027ae1:	sbb    al,BYTE PTR [rcx]
   140027ae3:	add    BYTE PTR [rcx+riz*1+0x145c0001],bh
   140027aea:	add    al,BYTE PTR [rax]
   140027aec:	mov    esp,0x9b000121
   140027af1:	and    al,BYTE PTR [rcx]
   140027af3:	add    BYTE PTR [rax-0x63fffdec],al
   140027af9:	and    al,BYTE PTR [rcx]
   140027afb:	add    bh,al
   140027afd:	and    eax,DWORD PTR [rcx]
   140027aff:	add    BYTE PTR [rsp+rdx*1+0x23c80002],ch
   140027b06:	add    DWORD PTR [rax],eax
   140027b08:	scas   eax,DWORD PTR es:[rdi]
   140027b09:	and    al,0x1
   140027b0b:	add    al,al
   140027b0d:	adc    al,0x2
   140027b0f:	add    BYTE PTR [rax+0x62000124],dh
   140027b15:	sub    BYTE PTR [rcx],al
   140027b17:	add    ah,cl
   140027b19:	adc    al,0x2
   140027b1b:	add    BYTE PTR [rax+rbp*1+0x1],ah
   140027b1f:	add    BYTE PTR [rbx],cl
   140027b21:	xor    BYTE PTR [rcx],al
   140027b23:	add    BYTE PTR [rdx*1+0x300c0002],al
   140027b2a:	add    DWORD PTR [rax],eax
   140027b2c:	loope  0x140027b5e
   140027b2e:	add    DWORD PTR [rax],eax
   140027b30:	sbb    al,0x15
   140027b32:	add    al,BYTE PTR [rax]
   140027b34:	in     al,0x30
   140027b36:	add    DWORD PTR [rax],eax
   140027b38:	mov    dh,0x31
   140027b3a:	add    DWORD PTR [rax],eax
   140027b3c:	adc    rax,0x31b80002
   140027b42:	add    DWORD PTR [rax],eax
   140027b44:	(bad)  
   140027b45:	xor    DWORD PTR [rcx],eax
   140027b47:	add    BYTE PTR [rsi+rcx*1],ch
   140027b4a:	add    al,BYTE PTR [rax]
   140027b4c:	in     al,dx
   140027b4d:	xor    DWORD PTR [rcx],eax
   140027b4f:	add    BYTE PTR [rsi+0x6c000134],dh
   140027b55:	adc    eax,0x34b80002
   140027b5a:	add    DWORD PTR [rax],eax
   140027b5c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140027b5d:	xor    eax,0x158c0001
   140027b62:	add    al,BYTE PTR [rax]
   140027b64:	test   al,0x35
   140027b66:	add    DWORD PTR [rax],eax
   140027b68:	mov    WORD PTR [rsi],?
   140027b6a:	add    DWORD PTR [rax],eax
   140027b6c:	lods   al,BYTE PTR ds:[rsi]
   140027b6d:	adc    eax,0x36940002
   140027b72:	add    DWORD PTR [rax],eax
   140027b74:	xchg   BYTE PTR [rdi],dh
   140027b76:	add    DWORD PTR [rax],eax
   140027b78:	mov    eax,0x90000215
   140027b7d:	(bad)  
   140027b7e:	add    DWORD PTR [rax],eax
   140027b80:	rex.WRXB cmp BYTE PTR [r9],r8b
   140027b83:	add    BYTE PTR [rax+0x5000020c],dl
   140027b89:	cmp    BYTE PTR [rcx],al
   140027b8b:	add    BYTE PTR [rdi],ah
   140027b8d:	cmp    DWORD PTR [rcx],eax
   140027b8f:	add    al,cl
   140027b91:	adc    eax,0x39280002
   140027b96:	add    DWORD PTR [rax],eax
   140027b98:	jrcxz  0x140027bd6
   140027b9a:	add    DWORD PTR [rax],eax
   140027b9c:	lock adc eax,0x3d000002
   140027ba2:	add    DWORD PTR [rax],eax
   140027ba4:	pushf  
   140027ba5:	rex add DWORD PTR [rax],eax
   140027ba8:	lock adc eax,0x409c0002
   140027bae:	add    DWORD PTR [rax],eax
   140027bb0:	mov    BYTE PTR [rcx+0x1],al
   140027bb3:	add    BYTE PTR [rax],cl
   140027bb5:	(bad)  
   140027bb6:	add    al,BYTE PTR [rax]
   140027bb8:	nop
   140027bb9:	add    DWORD PTR [r8],eax
   140027bbc:	sbb    al,0x42
   140027bbe:	add    DWORD PTR [rax],eax
   140027bc0:	js     0x140027bd4
   140027bc2:	add    al,BYTE PTR [rax]
   140027bc4:	sbb    al,0x42
   140027bc6:	add    DWORD PTR [rax],eax
   140027bc8:	or     al,0x44
   140027bca:	add    DWORD PTR [rax],eax
   140027bcc:	sbb    al,0x16
   140027bce:	add    al,BYTE PTR [rax]
   140027bd0:	or     al,0x44
   140027bd2:	add    DWORD PTR [rax],eax
   140027bd4:	mov    BYTE PTR [rcx+rax*1+0x0],0x3c
   140027bd9:	(bad)  
   140027bda:	add    al,BYTE PTR [rax]
   140027bdc:	enter  0x144,0x0
   140027be0:	pop    rax
   140027be1:	add    DWORD PTR [r8],r8d
   140027be4:	cmp    al,0x10
   140027be6:	add    al,BYTE PTR [rax]
   140027be8:	pop    rax
   140027be9:	add    DWORD PTR [r8],r8d
   140027bec:	int    0x47
   140027bee:	add    DWORD PTR [rax],eax
   140027bf0:	(bad)  
   140027bf1:	(bad)  
   140027bf2:	add    al,BYTE PTR [rax]
   140027bf4:	rol    BYTE PTR [rdi+0x1],1
   140027bf7:	add    BYTE PTR [rsi+0x7c000149],ch
   140027bfd:	(bad)  
   140027bfe:	add    al,BYTE PTR [rax]
   140027c00:	mov    al,0x49
   140027c02:	add    DWORD PTR [rax],eax
   140027c04:	fmul   DWORD PTR [rcx+0x1]
   140027c07:	add    BYTE PTR [rax],dl
   140027c09:	or     al,0x2
   140027c0b:	add    BYTE PTR [rax],cl
   140027c0d:	rex.WXB add QWORD PTR [r8],rax
   140027c10:	or     DWORD PTR [rcx+rax*1+0x0],0x216ac
   140027c18:	test   BYTE PTR [rcx+rax*1+0x0],cl
   140027c1c:	fisttp DWORD PTR [rcx+rax*1+0x0]
   140027c20:	nop
   140027c21:	or     al,0x2
   140027c23:	add    ah,bl
   140027c25:	add    QWORD PTR [rax],r8
   140027c28:	push   rcx
   140027c29:	add    QWORD PTR [r8],r8
   140027c2c:	mov    esp,0x54000216
   140027c31:	add    QWORD PTR [r8],r8
   140027c34:	cmp    al,0x4e
   140027c36:	add    DWORD PTR [rax],eax
   140027c38:	fcom   QWORD PTR [rsi]
   140027c3a:	add    al,BYTE PTR [rax]
   140027c3c:	cmp    al,0x4e
   140027c3e:	add    DWORD PTR [rax],eax
   140027c40:	jl     0x140027c90
   140027c42:	add    DWORD PTR [rax],eax
   140027c44:	adc    BYTE PTR [rdx+rax*1],cl
   140027c47:	add    BYTE PTR [rsi+rcx*2+0x4ebd0001],al
   140027c4e:	add    DWORD PTR [rax],eax
   140027c50:	adc    BYTE PTR [rdx+rax*1],cl
   140027c53:	add    ah,cl
   140027c55:	rex.WRX add QWORD PTR [rax],r8
   140027c58:	(bad)  
   140027c59:	push   rax
   140027c5a:	add    DWORD PTR [rax],eax
   140027c5c:	in     al,dx
   140027c5d:	(bad)  
   140027c5e:	add    al,BYTE PTR [rax]
   140027c60:	(bad)  
   140027c61:	push   rax
   140027c62:	add    DWORD PTR [rax],eax
   140027c64:	pop    rcx
   140027c65:	push   rcx
   140027c66:	add    DWORD PTR [rax],eax
   140027c68:	nop
   140027c69:	or     al,0x2
   140027c6b:	add    BYTE PTR [rcx+rdx*2+0x1],bl
   140027c6f:	add    BYTE PTR [rbx],ch
   140027c71:	push   rdx
   140027c72:	add    DWORD PTR [rax],eax
   140027c74:	nop
   140027c75:	or     al,0x2
   140027c77:	add    BYTE PTR [rdx+rdx*2],ch
   140027c7a:	add    DWORD PTR [rax],eax
   140027c7c:	xchg   edi,eax
   140027c7d:	push   rdx
   140027c7e:	add    DWORD PTR [rax],eax
   140027c80:	nop
   140027c81:	or     al,0x2
   140027c83:	add    BYTE PTR [rax-0x27fffeae],bl
   140027c89:	push   rdx
   140027c8a:	add    DWORD PTR [rax],eax
   140027c8c:	adc    BYTE PTR [rdx+rax*1],cl
   140027c8f:	add    al,bl
   140027c91:	push   rdx
   140027c92:	add    DWORD PTR [rax],eax
   140027c94:	(bad)  
   140027c95:	push   rbx
   140027c96:	add    DWORD PTR [rax],eax
   140027c98:	adc    BYTE PTR [rdx+rax*1],cl
   140027c9b:	add    BYTE PTR [rax],bh
   140027c9d:	push   rbx
   140027c9e:	add    DWORD PTR [rax],eax
   140027ca0:	jge    0x140027cf5
   140027ca2:	add    DWORD PTR [rax],eax
   140027ca4:	cmp    al,0x10
   140027ca6:	add    al,BYTE PTR [rax]
   140027ca8:	adc    BYTE PTR [rbx+0x1],0x0
   140027cac:	(bad)  
   140027cad:	push   rbx
   140027cae:	add    DWORD PTR [rax],eax
   140027cb0:	cmp    al,0x10
   140027cb2:	add    al,BYTE PTR [rax]
   140027cb4:	enter  0x153,0x0
   140027cb8:	mov    WORD PTR [rbp+0x1],ss
   140027cbb:	add    BYTE PTR [rax],cl
   140027cbd:	(bad)  
   140027cbe:	add    al,BYTE PTR [rax]
   140027cc0:	mov    WORD PTR [rbp+0x1],ss
   140027cc3:	add    BYTE PTR [rax+0x2c000155],ah
   140027cc9:	(bad)  
   140027cca:	add    al,BYTE PTR [rax]
   140027ccc:	movabs al,ds:0x18000158e4000155
   140027cd5:	(bad)  
   140027cd6:	add    al,BYTE PTR [rax]
   140027cd8:	in     al,0x58
   140027cda:	add    DWORD PTR [rax],eax
   140027cdc:	ins    DWORD PTR es:[rdi],dx
   140027cdd:	pop    rcx
   140027cde:	add    DWORD PTR [rax],eax
   140027ce0:	cmp    BYTE PTR [rdi],dl
   140027ce2:	add    al,BYTE PTR [rax]
   140027ce4:	jo     0x140027d3f
   140027ce6:	add    DWORD PTR [rax],eax
   140027ce8:	jae    0x140027d44
   140027cea:	add    DWORD PTR [rax],eax
   140027cec:	rex.W (bad) 
   140027cee:	add    al,BYTE PTR [rax]
   140027cf0:	je     0x140027d4c
   140027cf2:	add    DWORD PTR [rax],eax
   140027cf4:	(bad)  
   140027cf5:	pop    rbx
   140027cf6:	add    DWORD PTR [rax],eax
   140027cf8:	rcl    BYTE PTR [rdx+rax*1],0x0
   140027cfc:	adc    BYTE PTR [rbx+0x1],bl
   140027cff:	add    BYTE PTR [rbx-0x47fffea5],cl
   140027d05:	adc    eax,0x5ba00002
   140027d0a:	add    DWORD PTR [rax],eax
   140027d0c:	stos   DWORD PTR es:[rdi],eax
   140027d0d:	pop    rsp
   140027d0e:	add    DWORD PTR [rax],eax
   140027d10:	rcl    BYTE PTR [rdx+rax*1],0x0
   140027d14:	lods   al,BYTE PTR ds:[rsi]
   140027d15:	pop    rsp
   140027d16:	add    DWORD PTR [rax],eax
   140027d18:	and    DWORD PTR [rsi+0x1],ebx
   140027d1b:	add    BYTE PTR [rdi+rdx*1+0x2],bl
   140027d1f:	add    BYTE PTR [rsi+rbx*2],ch
   140027d22:	add    DWORD PTR [rax],eax
   140027d24:	rcr    DWORD PTR [rsi+0x1],0x0
   140027d28:	rcl    BYTE PTR [rdx+rax*1],0x0
   140027d2c:	(bad)  
   140027d2d:	pop    rsi
   140027d2e:	add    DWORD PTR [rax],eax
   140027d30:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140027d31:	pop    rdi
   140027d32:	add    DWORD PTR [rax],eax
   140027d34:	je     0x140027d4d
   140027d36:	add    al,BYTE PTR [rax]
   140027d38:	test   al,0x5f
   140027d3a:	add    DWORD PTR [rax],eax
   140027d3c:	sti    
   140027d3d:	pop    rdi
   140027d3e:	add    DWORD PTR [rax],eax
   140027d40:	nop
   140027d41:	or     al,0x2
   140027d43:	add    ah,bh
   140027d45:	pop    rdi
   140027d46:	add    DWORD PTR [rax],eax
   140027d48:	addr32 (bad) 
   140027d4b:	add    BYTE PTR [rax+0x68000217],ah
   140027d51:	(bad)  
   140027d53:	add    BYTE PTR [rax+0x2c000162],bl
   140027d59:	(bad)  
   140027d5a:	add    al,BYTE PTR [rax]
   140027d5c:	cwde   
   140027d5d:	(bad)  
   140027d5f:	add    BYTE PTR [rsi],bl
   140027d61:	movsxd eax,DWORD PTR [rcx]
   140027d63:	add    BYTE PTR [rsi+rdx*1+0x63200002],ch
   140027d6a:	add    DWORD PTR [rax],eax
   140027d6c:	rex.XB push 0x1
   140027d6f:	add    BYTE PTR [rdi+rdx*1+0x6a440002],bh
   140027d76:	add    DWORD PTR [rax],eax
   140027d78:	pop    rdi
   140027d79:	imul   eax,DWORD PTR [rcx],0x0
   140027d7c:	(bad)  
   140027d7d:	(bad)  
   140027d7e:	add    al,BYTE PTR [rax]
   140027d80:	(bad)  
   140027d81:	imul   eax,DWORD PTR [rcx],0x0
   140027d84:	rex.RX ins DWORD PTR es:[rdi],dx
   140027d86:	add    DWORD PTR [rax],eax
   140027d88:	add    al,0x18
   140027d8a:	add    al,BYTE PTR [rax]
   140027d8c:	push   rax
   140027d8d:	ins    DWORD PTR es:[rdi],dx
   140027d8e:	add    DWORD PTR [rax],eax
   140027d90:	mov    al,0x6e
   140027d92:	add    DWORD PTR [rax],eax
   140027d94:	add    al,0x18
   140027d96:	add    al,BYTE PTR [rax]
   140027d98:	mov    eax,0x1100016e
   140027d9d:	outs   dx,DWORD PTR ds:[rsi]
   140027d9e:	add    DWORD PTR [rax],eax
   140027da0:	sbb    al,0x18
   140027da2:	add    al,BYTE PTR [rax]
   140027da4:	xor    BYTE PTR [rdi+0x1],ch
   140027da7:	add    BYTE PTR [rsi+0x6f],bh
   140027daa:	add    DWORD PTR [rax],eax
   140027dac:	sub    BYTE PTR [rax],bl
   140027dae:	add    al,BYTE PTR [rax]
   140027db0:	sub    BYTE PTR [rdi+0x1],0x0
   140027db4:	in     al,0x6f
   140027db6:	add    DWORD PTR [rax],eax
   140027db8:	xor    BYTE PTR [rax],bl
   140027dba:	add    al,BYTE PTR [rax]
   140027dbc:	in     al,0x6f
   140027dbe:	add    DWORD PTR [rax],eax
   140027dc0:	(bad)  
   140027dc2:	add    DWORD PTR [rax],eax
   140027dc4:	sbb    BYTE PTR [rdx],al
   140027dc7:	add    BYTE PTR [rax],dl
   140027dc9:	jno    0x140027dcc
   140027dcb:	add    BYTE PTR [rdx+0x71],dl
   140027dce:	add    DWORD PTR [rax],eax
   140027dd0:	push   rax
   140027dd1:	sbb    BYTE PTR [rdx],al
   140027dd3:	add    BYTE PTR [rcx+rsi*2+0x1],dl
   140027dd7:	add    BYTE PTR [rdi+0x73],bl
   140027dda:	add    DWORD PTR [rax],eax
   140027ddc:	je     0x140027df6
   140027dde:	add    al,BYTE PTR [rax]
   140027de0:	push   0x45000173
   140027de5:	je     0x140027de8
   140027de7:	add    BYTE PTR [rax+0x50000215],bh
   140027ded:	je     0x140027df0
   140027def:	add    ah,ah
   140027df1:	je     0x140027df4
   140027df3:	add    BYTE PTR [rbx+rdx*1],bl
   140027df6:	add    al,BYTE PTR [rax]
   140027df8:	in     al,0x74
   140027dfa:	add    DWORD PTR [rax],eax
   140027dfc:	jl     0x140027e74
   140027dfe:	add    DWORD PTR [rax],eax
   140027e00:	mov    WORD PTR [rax],ds
   140027e02:	add    al,BYTE PTR [rax]
   140027e04:	jl     0x140027e7c
   140027e06:	add    DWORD PTR [rax],eax
   140027e08:	adc    dh,BYTE PTR [rdi+0x1]
   140027e0b:	add    BYTE PTR [rsi+rdx*1+0x77140002],ch
   140027e12:	add    DWORD PTR [rax],eax
   140027e14:	repz ja 0x140027e18
   140027e17:	add    BYTE PTR [rax-0xbfffde8],ch
   140027e1d:	ja     0x140027e20
   140027e1f:	add    dl,al
   140027e21:	js     0x140027e24
   140027e23:	add    ah,dl
   140027e25:	sbb    BYTE PTR [rdx],al
   140027e27:	add    ah,al
   140027e29:	js     0x140027e2c
   140027e2b:	add    bl,dh
   140027e2d:	js     0x140027e30
   140027e2f:	add    BYTE PTR [rax],dl
   140027e31:	or     al,0x2
   140027e33:	add    ah,dh
   140027e35:	js     0x140027e38
   140027e37:	add    BYTE PTR [rdx+0x7d],dh
   140027e3a:	add    DWORD PTR [rax],eax
   140027e3c:	in     al,0x18
   140027e3e:	add    al,BYTE PTR [rax]
   140027e40:	je     0x140027ebf
   140027e42:	add    DWORD PTR [rax],eax
   140027e44:	rex.W add BYTE PTR [rcx],0x0
   140027e48:	and    BYTE PTR [rcx],bl
   140027e4a:	add    al,BYTE PTR [rax]
   140027e4c:	rex.W add BYTE PTR [rcx],0x0
   140027e50:	icebp  
   140027e51:	(bad)  
   140027e52:	add    DWORD PTR [rax],eax
   140027e54:	xor    al,0x19
   140027e56:	add    al,BYTE PTR [rax]
   140027e58:	hlt    
   140027e59:	(bad)  
   140027e5a:	add    DWORD PTR [rax],eax
   140027e5c:	(bad)  
   140027e5d:	add    DWORD PTR [rcx],0x0
   140027e60:	sbb    QWORD PTR [rdx],r8
   140027e63:	add    BYTE PTR [rax],dh
   140027e65:	add    DWORD PTR [rcx],0x0
   140027e68:	(bad)  
   140027e69:	add    DWORD PTR [rcx],0x0
   140027e6c:	ins    BYTE PTR es:[rdi],dx
   140027e6d:	sbb    DWORD PTR [rdx],eax
   140027e6f:	add    BYTE PTR [rax-0x7d],ah
   140027e72:	add    DWORD PTR [rax],eax
   140027e74:	pop    QWORD PTR [rbx+0xc100001]
   140027e7a:	add    al,BYTE PTR [rax]
   140027e7c:	nop
   140027e7d:	add    DWORD PTR [rcx],0x0
   140027e80:	mov    edi,0x10000183
   140027e85:	or     al,0x2
   140027e87:	add    al,al
   140027e89:	add    DWORD PTR [rcx],0x0
   140027e8c:	out    dx,eax
   140027e8d:	add    DWORD PTR [rcx],0x0
   140027e90:	adc    BYTE PTR [rdx+rax*1],cl
   140027e93:	add    BYTE PTR [rax],dl
   140027e95:	test   BYTE PTR [rcx],al
   140027e97:	add    dl,bl
   140027e99:	xchg   BYTE PTR [rcx],al
   140027e9b:	add    BYTE PTR [rcx+rbx*1-0x7923fffe],cl
   140027ea2:	add    DWORD PTR [rax],eax
   140027ea4:	jb     0x140027e2d
   140027ea6:	add    DWORD PTR [rax],eax
   140027ea8:	mov    ah,0x19
   140027eaa:	add    al,BYTE PTR [rax]
   140027eac:	je     0x140027e35
   140027eae:	add    DWORD PTR [rax],eax
   140027eb0:	pushf  
   140027eb1:	mov    BYTE PTR [rcx],al
   140027eb3:	add    ah,al
   140027eb5:	sbb    DWORD PTR [rdx],eax
   140027eb7:	add    BYTE PTR [rax+rcx*4-0x76cfffff],bl
   140027ebe:	add    DWORD PTR [rax],eax
   140027ec0:	adc    BYTE PTR [rdx+rax*1],cl
   140027ec3:	add    BYTE PTR [rax],dh
   140027ec5:	mov    DWORD PTR [rcx],eax
   140027ec7:	add    BYTE PTR [rbp-0x27fffe77],ah
   140027ecd:	sbb    DWORD PTR [rdx],eax
   140027ecf:	add    BYTE PTR [rax+0x6d000189],ch
   140027ed5:	mov    al,BYTE PTR [rcx]
   140027ed7:	add    al,ch
   140027ed9:	sbb    DWORD PTR [rdx],eax
   140027edb:	add    BYTE PTR [rax-0x76],dh
   140027ede:	add    DWORD PTR [rax],eax
   140027ee0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140027ee1:	mov    eax,DWORD PTR [rcx]
   140027ee3:	add    al,bh
   140027ee5:	sbb    DWORD PTR [rdx],eax
   140027ee7:	add    BYTE PTR [rax+0x2d00018b],ch
   140027eed:	mov    WORD PTR [rcx],es
   140027eef:	add    BYTE PTR [rax+0x12],bh
   140027ef2:	add    al,BYTE PTR [rax]
   140027ef4:	push   rax
   140027ef5:	mov    WORD PTR [rcx],es
   140027ef7:	add    al,al
   140027ef9:	mov    WORD PTR [rcx],es
   140027efb:	add    al,bl
   140027efd:	sbb    DWORD PTR [rdx],eax
   140027eff:	add    al,al
   140027f01:	mov    WORD PTR [rcx],es
   140027f03:	add    BYTE PTR [rsi],bl
   140027f05:	mov    es,WORD PTR [rcx]
   140027f07:	add    BYTE PTR [rax],dl
   140027f09:	sbb    al,BYTE PTR [rdx]
   140027f0b:	add    BYTE PTR [rax],ah
   140027f0d:	mov    es,WORD PTR [rcx]
   140027f0f:	add    BYTE PTR [rsi+0x3800018e],bl
   140027f15:	(bad)  
   140027f16:	add    al,BYTE PTR [rax]
   140027f18:	movabs al,ds:0x380001928e00018e
   140027f21:	sbb    al,BYTE PTR [rdx]
   140027f23:	add    BYTE PTR [rax-0x3fffe6e],dl
   140027f29:	xchg   edx,eax
   140027f2a:	add    DWORD PTR [rax],eax
   140027f2c:	lock (bad) 
   140027f2e:	add    al,BYTE PTR [rax]
   140027f30:	cld    
   140027f31:	xchg   edx,eax
   140027f32:	add    DWORD PTR [rax],eax
   140027f34:	(bad)  
   140027f35:	xchg   esp,eax
   140027f36:	add    DWORD PTR [rax],eax
   140027f38:	cmp    BYTE PTR [rdx],bl
   140027f3a:	add    al,BYTE PTR [rax]
   140027f3c:	or     BYTE PTR [rcx+rax*1+0x1943f00],dl
   140027f43:	add    BYTE PTR [rax],dl
   140027f45:	or     al,0x2
   140027f47:	add    BYTE PTR [rax-0x74fffe6c],cl
   140027f4d:	xchg   ebp,eax
   140027f4e:	add    DWORD PTR [rax],eax
   140027f50:	add    al,0x18
   140027f52:	add    al,BYTE PTR [rax]
   140027f54:	mov    WORD PTR [rbp-0x6a24ffff],ss
   140027f5a:	add    DWORD PTR [rax],eax
   140027f5c:	adc    BYTE PTR [rdx+rax*1],cl
   140027f5f:	add    ah,bl
   140027f61:	xchg   ebp,eax
   140027f62:	add    DWORD PTR [rax],eax
   140027f64:	(bad)  
   140027f65:	xchg   esi,eax
   140027f66:	add    DWORD PTR [rax],eax
   140027f68:	sbb    al,BYTE PTR [rdx]
   140027f6b:	add    BYTE PTR [rax],bl
   140027f6d:	xchg   esi,eax
   140027f6e:	add    DWORD PTR [rax],eax
   140027f70:	cmp    dl,BYTE PTR [rsi+0xc100001]
   140027f76:	add    al,BYTE PTR [rax]
   140027f78:	js     0x140027f10
   140027f7a:	add    DWORD PTR [rax],eax
   140027f7c:	rex.WRX xchg rdi,rax
   140027f7e:	add    DWORD PTR [rax],eax
   140027f80:	or     BYTE PTR [rsi],dl
   140027f82:	add    al,BYTE PTR [rax]
   140027f84:	push   rax
   140027f85:	xchg   edi,eax
   140027f86:	add    DWORD PTR [rax],eax
   140027f88:	xchg   esi,eax
   140027f89:	xchg   edi,eax
   140027f8a:	add    DWORD PTR [rax],eax
   140027f8c:	adc    BYTE PTR [rdx+rax*1],cl
   140027f8f:	add    BYTE PTR [rdi+rdx*4-0x67b5ffff],ah
   140027f96:	add    DWORD PTR [rax],eax
   140027f98:	clc    
   140027f99:	sbb    DWORD PTR [rdx],eax
   140027f9b:	add    BYTE PTR [rax+rbx*4+0x1],cl
   140027f9f:	add    BYTE PTR [rdx+0x48000199],bl
   140027fa5:	sbb    al,BYTE PTR [rdx]
   140027fa7:	add    al,dl
   140027fa9:	cdq    
   140027faa:	add    DWORD PTR [rax],eax
   140027fac:	hlt    
   140027fad:	cdq    
   140027fae:	add    DWORD PTR [rax],eax
   140027fb0:	hlt    
   140027fb1:	lar    eax,WORD PTR [rax]
   140027fb4:	hlt    
   140027fb5:	cdq    
   140027fb6:	add    DWORD PTR [rax],eax
   140027fb8:	sbb    ebx,DWORD PTR [rdx+0xff40001]
   140027fbe:	add    al,BYTE PTR [rax]
   140027fc0:	sbb    ebx,DWORD PTR [rdx-0x65caffff]
   140027fc6:	add    DWORD PTR [rax],eax
   140027fc8:	hlt    
   140027fc9:	lar    eax,WORD PTR [rax]
   140027fcc:	xor    eax,0x4f00019a
   140027fd1:	(bad)  
   140027fd2:	add    DWORD PTR [rax],eax
   140027fd4:	hlt    
   140027fd5:	lar    eax,WORD PTR [rax]
   140027fd8:	rex.WRXB (bad) 
   140027fda:	add    DWORD PTR [rax],eax
   140027fdc:	imul   ebx,DWORD PTR [rdx+0xff40001],0x9a690002
   140027fe6:	add    DWORD PTR [rax],eax
   140027fe8:	test   BYTE PTR [rdx+0xff40001],bl
   140027fee:	add    al,BYTE PTR [rax]
   140027ff0:	test   BYTE PTR [rdx-0x6561ffff],bl
   140027ff6:	add    DWORD PTR [rax],eax
   140027ff8:	hlt    
   140027ff9:	lar    eax,WORD PTR [rax]
   140027ffc:	sahf   
   140027ffd:	(bad)  
   140027ffe:	add    DWORD PTR [rax],eax
   140028000:	(bad)  
   140028001:	(bad)  
   140028002:	add    DWORD PTR [rax],eax
   140028004:	hlt    
   140028005:	lar    eax,WORD PTR [rax]
   140028008:	(bad)  
   140028009:	(bad)  
   14002800a:	add    DWORD PTR [rax],eax
   14002800c:	jmp    0x1340281ab
   140028011:	lar    eax,WORD PTR [rax]
   140028014:	jmp    0x1430281b3
   140028019:	fwait
   14002801a:	add    DWORD PTR [rax],eax
   14002801c:	hlt    
   14002801d:	lar    eax,WORD PTR [rax]
   140028020:	add    ebx,DWORD PTR [rbx-0x64e1ffff]
   140028026:	add    DWORD PTR [rax],eax
   140028028:	hlt    
   140028029:	lar    eax,WORD PTR [rax]
   14002802c:	(bad)  
   14002802d:	fwait
   14002802e:	add    DWORD PTR [rax],eax
   140028030:	cmp    al,0x9b
   140028032:	add    DWORD PTR [rax],eax
   140028034:	hlt    
   140028035:	lar    eax,WORD PTR [rax]
   140028038:	cmp    al,0x9b
   14002803a:	add    DWORD PTR [rax],eax
   14002803c:	pop    rdx
   14002803d:	fwait
   14002803e:	add    DWORD PTR [rax],eax
   140028040:	hlt    
   140028041:	lar    eax,WORD PTR [rax]
   140028044:	pop    rdx
   140028045:	fwait
   140028046:	add    DWORD PTR [rax],eax
   140028048:	js     0x140027fe5
   14002804a:	add    DWORD PTR [rax],eax
   14002804c:	hlt    
   14002804d:	lar    eax,WORD PTR [rax]
   140028050:	js     0x140027fed
   140028052:	add    DWORD PTR [rax],eax
   140028054:	xchg   ebx,eax
   140028055:	fwait
   140028056:	add    DWORD PTR [rax],eax
   140028058:	hlt    
   140028059:	lar    eax,WORD PTR [rax]
   14002805c:	cwde   
   14002805d:	fwait
   14002805e:	add    DWORD PTR [rax],eax
   140028060:	mov    bl,0x9b
   140028062:	add    DWORD PTR [rax],eax
   140028064:	hlt    
   140028065:	lar    eax,WORD PTR [rax]
   140028068:	mov    bl,0x9b
   14002806a:	add    DWORD PTR [rax],eax
   14002806c:	leave  
   14002806d:	fwait
   14002806e:	add    DWORD PTR [rax],eax
   140028070:	hlt    
   140028071:	lar    eax,WORD PTR [rax]
   140028074:	rcr    BYTE PTR [rbx-0x640dffff],1
   14002807a:	add    DWORD PTR [rax],eax
   14002807c:	hlt    
   14002807d:	lar    eax,WORD PTR [rax]
   140028080:	repnz fwait
   140028082:	add    DWORD PTR [rax],eax
   140028084:	or     eax,0xf400019c
   140028089:	lar    eax,WORD PTR [rax]
   14002808c:	or     eax,0x2600019c
   140028091:	pushf  
   140028092:	add    DWORD PTR [rax],eax
   140028094:	hlt    
   140028095:	lar    eax,WORD PTR [rax]
   140028098:	es pushf 
   14002809a:	add    DWORD PTR [rax],eax
   14002809c:	rex.B pushf 
   14002809e:	add    DWORD PTR [rax],eax
   1400280a0:	hlt    
   1400280a1:	lar    eax,WORD PTR [rax]
   1400280a4:	rex.B pushf 
   1400280a6:	add    DWORD PTR [rax],eax
   1400280a8:	pop    rsp
   1400280a9:	pushf  
   1400280aa:	add    DWORD PTR [rax],eax
   1400280ac:	hlt    
   1400280ad:	lar    eax,WORD PTR [rax]
   1400280b0:	(bad)  
   1400280b1:	pushf  
   1400280b2:	add    DWORD PTR [rax],eax
   1400280b4:	jl     0x140028052
   1400280b6:	add    DWORD PTR [rax],eax
   1400280b8:	hlt    
   1400280b9:	lar    eax,WORD PTR [rax]
   1400280bc:	jl     0x14002805a
   1400280be:	add    DWORD PTR [rax],eax
   1400280c0:	xchg   ebp,eax
   1400280c1:	pushf  
   1400280c2:	add    DWORD PTR [rax],eax
   1400280c4:	fcomp  QWORD PTR [rax]
   1400280c6:	add    al,BYTE PTR [rax]
   1400280c8:	xchg   ebp,eax
   1400280c9:	pushf  
   1400280ca:	add    DWORD PTR [rax],eax
   1400280cc:	jrcxz  0x14002806a
   1400280ce:	add    DWORD PTR [rax],eax
   1400280d0:	rex adc eax,0x9ce30002
   1400280d6:	add    DWORD PTR [rax],eax
   1400280d8:	sub    al,0x9d
   1400280da:	add    DWORD PTR [rax],eax
   1400280dc:	rex adc eax,0x9d2c0002
   1400280e2:	add    DWORD PTR [rax],eax
   1400280e4:	rex.RXB popf 
   1400280e6:	add    DWORD PTR [rax],eax
   1400280e8:	hlt    
   1400280e9:	lar    eax,WORD PTR [rax]
   1400280ec:	rex.RXB popf 
   1400280ee:	add    DWORD PTR [rax],eax
   1400280f0:	(bad)  
   1400280f1:	popf   
   1400280f2:	add    DWORD PTR [rax],eax
   1400280f4:	hlt    
   1400280f5:	lar    eax,WORD PTR [rax]
   1400280f8:	(bad)  
   1400280f9:	popf   
   1400280fa:	add    DWORD PTR [rax],eax
   1400280fc:	jnp    0x14002809b
   1400280fe:	add    DWORD PTR [rax],eax
   140028100:	hlt    
   140028101:	lar    eax,WORD PTR [rax]
   140028104:	jnp    0x1400280a3
   140028106:	add    DWORD PTR [rax],eax
   140028108:	xchg   esi,eax
   140028109:	popf   
   14002810a:	add    DWORD PTR [rax],eax
   14002810c:	fcomp  QWORD PTR [rax]
   14002810e:	add    al,BYTE PTR [rax]
   140028110:	xchg   esi,eax
   140028111:	popf   
   140028112:	add    DWORD PTR [rax],eax
   140028114:	mov    cl,0x9d
   140028116:	add    DWORD PTR [rax],eax
   140028118:	hlt    
   140028119:	lar    eax,WORD PTR [rax]

Disassembly of section .rsrc:

0000000140029000 <.rsrc>:
	...
   140029008:	add    al,0x0
   14002900a:	add    BYTE PTR [rax],al
   14002900c:	add    BYTE PTR [rax],al
   14002900e:	add    al,0x0
   140029010:	add    eax,DWORD PTR [rax]
   140029012:	add    BYTE PTR [rax],al
   140029014:	xor    BYTE PTR [rax],al
   140029016:	add    BYTE PTR [rax+0xe],al
   14002901c:	movabs al,ds:0xb800000010800000
   140029025:	add    BYTE PTR [rax],al
   140029027:	sbb    BYTE PTR [rax],0x0
   14002902a:	add    BYTE PTR [rax],al
   14002902c:	rol    BYTE PTR [rax],1
   14002902e:	add    BYTE PTR [rax+0x0],al
   140029034:	add    BYTE PTR [rax],al
   140029036:	add    BYTE PTR [rax],al
   140029038:	add    al,0x0
   14002903a:	add    BYTE PTR [rax],al
   14002903c:	add    BYTE PTR [rax],al
   14002903e:	or     al,0x0
   140029040:	add    DWORD PTR [rax],eax
   140029042:	add    BYTE PTR [rax],al
   140029044:	call   0x142829049
   140029049:	add    BYTE PTR [rax],al
   14002904b:	add    BYTE PTR [rax],al
   14002904d:	add    DWORD PTR [rax],eax
   14002904f:	add    BYTE PTR [rbx],0x0
   140029052:	add    BYTE PTR [rax],al
   140029054:	sbb    BYTE PTR [rcx],al
   140029056:	add    BYTE PTR [rax+0x4],al
   14002905c:	xor    BYTE PTR [rcx],al
   14002905e:	add    BYTE PTR [rax+0x5],al
   140029064:	add    QWORD PTR [rax],rax
   140029067:	add    BYTE PTR [rsi],0x0
   14002906a:	add    BYTE PTR [rax],al
   14002906c:	(bad)  
   14002906d:	add    DWORD PTR [rax],eax
   14002906f:	add    BYTE PTR [rdi],0x0
   140029072:	add    BYTE PTR [rax],al
   140029074:	js     0x140029077
   140029076:	add    BYTE PTR [rax+0x8],al
   14002907c:	nop
   14002907d:	add    DWORD PTR [rax],eax
   14002907f:	or     BYTE PTR [rcx],0x0
   140029082:	add    BYTE PTR [rax],al
   140029084:	test   al,0x1
   140029086:	add    BYTE PTR [rax+0xa],al
   14002908c:	rol    BYTE PTR [rcx],0x0
   14002908f:	or     BYTE PTR [rbx],0x0
   140029092:	add    BYTE PTR [rax],al
   140029094:	fadd   DWORD PTR [rcx]
   140029096:	add    BYTE PTR [rax+0xc],al
   14002909c:	lock add DWORD PTR [rax],eax
   14002909f:	add    BYTE PTR [rax],0x0
   1400290a2:	add    BYTE PTR [rax],al
   1400290a4:	add    BYTE PTR [rax],al
   1400290a6:	add    BYTE PTR [rax],al
   1400290a8:	add    al,0x0
   1400290aa:	add    BYTE PTR [rax],al
   1400290ac:	add    BYTE PTR [rax],al
   1400290ae:	add    DWORD PTR [rax],eax
   1400290b0:	rol    BYTE PTR [rdi],1
   1400290b2:	add    BYTE PTR [rax],al
   1400290b4:	or     BYTE PTR [rdx],al
   1400290b6:	add    BYTE PTR [rax+0x0],al
   1400290bc:	add    BYTE PTR [rax],al
   1400290be:	add    BYTE PTR [rax],al
   1400290c0:	add    al,0x0
   1400290c2:	add    BYTE PTR [rax],al
   1400290c4:	add    BYTE PTR [rax],al
   1400290c6:	add    DWORD PTR [rax],eax
   1400290c8:	add    DWORD PTR [rax],eax
   1400290ca:	add    BYTE PTR [rax],al
   1400290cc:	and    BYTE PTR [rdx],al
   1400290ce:	add    BYTE PTR [rax+0x0],al
   1400290d4:	add    BYTE PTR [rax],al
   1400290d6:	add    BYTE PTR [rax],al
   1400290d8:	add    al,0x0
   1400290da:	add    BYTE PTR [rax],al
   1400290dc:	add    BYTE PTR [rax],al
   1400290de:	add    DWORD PTR [rax],eax
   1400290e0:	add    DWORD PTR [rax],eax
   1400290e2:	add    BYTE PTR [rax],al
   1400290e4:	cmp    BYTE PTR [rdx],al
   1400290e6:	add    BYTE PTR [rax+0x0],al
   1400290ec:	add    BYTE PTR [rax],al
   1400290ee:	add    BYTE PTR [rax],al
   1400290f0:	add    al,0x0
   1400290f2:	add    BYTE PTR [rax],al
   1400290f4:	add    BYTE PTR [rax],al
   1400290f6:	add    DWORD PTR [rax],eax
   1400290f8:	add    BYTE PTR [rax],al
   1400290fa:	add    BYTE PTR [rax],al
   1400290fc:	push   rax
   1400290fd:	add    al,BYTE PTR [rax]
	...
   140029107:	add    BYTE PTR [rax+rax*1],al
   14002910a:	add    BYTE PTR [rax],al
   14002910c:	add    BYTE PTR [rax],al
   14002910e:	add    DWORD PTR [rax],eax
   140029110:	add    BYTE PTR [rax],al
   140029112:	add    BYTE PTR [rax],al
   140029114:	(bad)  
   140029115:	add    al,BYTE PTR [rax]
	...
   14002911f:	add    BYTE PTR [rax+rax*1],al
   140029122:	add    BYTE PTR [rax],al
   140029124:	add    BYTE PTR [rax],al
   140029126:	add    DWORD PTR [rax],eax
   140029128:	add    BYTE PTR [rax],al
   14002912a:	add    BYTE PTR [rax],al
   14002912c:	jo     0x140029130
	...
   140029136:	add    BYTE PTR [rax],al
   140029138:	add    al,0x0
   14002913a:	add    BYTE PTR [rax],al
   14002913c:	add    BYTE PTR [rax],al
   14002913e:	add    DWORD PTR [rax],eax
   140029140:	add    BYTE PTR [rax],al
   140029142:	add    BYTE PTR [rax],al
   140029144:	add    BYTE PTR [rdx],0x0
	...
   14002914f:	add    BYTE PTR [rax+rax*1],al
   140029152:	add    BYTE PTR [rax],al
   140029154:	add    BYTE PTR [rax],al
   140029156:	add    DWORD PTR [rax],eax
   140029158:	add    BYTE PTR [rax],al
   14002915a:	add    BYTE PTR [rax],al
   14002915c:	nop
   14002915d:	add    al,BYTE PTR [rax]
	...
   140029167:	add    BYTE PTR [rax+rax*1],al
   14002916a:	add    BYTE PTR [rax],al
   14002916c:	add    BYTE PTR [rax],al
   14002916e:	add    DWORD PTR [rax],eax
   140029170:	add    BYTE PTR [rax],al
   140029172:	add    BYTE PTR [rax],al
   140029174:	movabs al,ds:0x2
   14002917d:	add    BYTE PTR [rax],al
   14002917f:	add    BYTE PTR [rax+rax*1],al
   140029182:	add    BYTE PTR [rax],al
   140029184:	add    BYTE PTR [rax],al
   140029186:	add    DWORD PTR [rax],eax
   140029188:	add    BYTE PTR [rax],al
   14002918a:	add    BYTE PTR [rax],al
   14002918c:	mov    al,0x2
	...
   140029196:	add    BYTE PTR [rax],al
   140029198:	add    al,0x0
   14002919a:	add    BYTE PTR [rax],al
   14002919c:	add    BYTE PTR [rax],al
   14002919e:	add    DWORD PTR [rax],eax
   1400291a0:	add    BYTE PTR [rax],al
   1400291a2:	add    BYTE PTR [rax],al
   1400291a4:	rol    BYTE PTR [rdx],0x0
	...
   1400291af:	add    BYTE PTR [rax+rax*1],al
   1400291b2:	add    BYTE PTR [rax],al
   1400291b4:	add    BYTE PTR [rax],al
   1400291b6:	add    DWORD PTR [rax],eax
   1400291b8:	add    BYTE PTR [rax],al
   1400291ba:	add    BYTE PTR [rax],al
   1400291bc:	rol    BYTE PTR [rdx],1
	...
   1400291c6:	add    BYTE PTR [rax],al
   1400291c8:	add    al,0x0
   1400291ca:	add    BYTE PTR [rax],al
   1400291cc:	add    BYTE PTR [rax],al
   1400291ce:	add    DWORD PTR [rax],eax
   1400291d0:	add    BYTE PTR [rax],al
   1400291d2:	add    BYTE PTR [rax],al
   1400291d4:	loopne 0x1400291d8
	...
   1400291de:	add    BYTE PTR [rax],al
   1400291e0:	add    al,0x0
   1400291e2:	add    BYTE PTR [rax],al
   1400291e4:	add    BYTE PTR [rax],al
   1400291e6:	add    DWORD PTR [rax],eax
   1400291e8:	add    BYTE PTR [rax],al
   1400291ea:	add    BYTE PTR [rax],al
   1400291ec:	lock add al,BYTE PTR [rax]
	...
   1400291f7:	add    BYTE PTR [rax+rax*1],al
   1400291fa:	add    BYTE PTR [rax],al
   1400291fc:	add    BYTE PTR [rax],al
   1400291fe:	add    DWORD PTR [rax],eax
   140029200:	add    BYTE PTR [rax],al
   140029202:	add    BYTE PTR [rax],al
   140029204:	add    BYTE PTR [rbx],al
	...
   14002920e:	add    BYTE PTR [rax],al
   140029210:	add    al,0x0
   140029212:	add    BYTE PTR [rax],al
   140029214:	add    BYTE PTR [rax],al
   140029216:	add    DWORD PTR [rax],eax
   140029218:	add    BYTE PTR [rax],al
   14002921a:	add    BYTE PTR [rax],al
   14002921c:	adc    BYTE PTR [rbx],al
	...
   140029226:	add    BYTE PTR [rax],al
   140029228:	add    al,0x0
   14002922a:	add    BYTE PTR [rax],al
   14002922c:	add    BYTE PTR [rax],al
   14002922e:	add    DWORD PTR [rax],eax
   140029230:	add    BYTE PTR [rax],al
   140029232:	add    BYTE PTR [rax],al
   140029234:	and    BYTE PTR [rbx],al
	...
   14002923e:	add    BYTE PTR [rax],al
   140029240:	add    al,0x0
   140029242:	add    BYTE PTR [rax],al
   140029244:	add    BYTE PTR [rax],al
   140029246:	add    DWORD PTR [rax],eax
   140029248:	add    BYTE PTR [rax],al
   14002924a:	add    BYTE PTR [rax],al
   14002924c:	xor    BYTE PTR [rbx],al
   14002924e:	add    BYTE PTR [rax],al
   140029250:	rex xchg ebx,eax
   140029252:	add    al,BYTE PTR [rax]
   140029254:	push   0xffffffffe4000006
   140029259:	add    al,0x0
   14002925b:	add    BYTE PTR [rax],al
   14002925d:	add    BYTE PTR [rax],al
   14002925f:	add    BYTE PTR [rax-0x17fffd67],ch
   140029265:	add    al,BYTE PTR [rax]
   140029267:	add    ah,ah
   140029269:	add    al,0x0
   14002926b:	add    BYTE PTR [rax],al
   14002926d:	add    BYTE PTR [rax],al
   14002926f:	add    BYTE PTR [rax-0x17fffd64],dl
   140029275:	add    DWORD PTR [rax],eax
   140029277:	add    ah,ah
   140029279:	add    al,0x0
   14002927b:	add    BYTE PTR [rax],al
   14002927d:	add    BYTE PTR [rax],al
   14002927f:	add    BYTE PTR [rax-0x62],bh
   140029282:	add    al,BYTE PTR [rax]
   140029284:	sub    BYTE PTR [rcx],al
   140029286:	add    BYTE PTR [rax],al
   140029288:	in     al,0x4
   14002928a:	add    BYTE PTR [rax],al
   14002928c:	add    BYTE PTR [rax],al
   14002928e:	add    BYTE PTR [rax],al
   140029290:	movabs al,ds:0xe400000ea800029f
   140029299:	add    al,0x0
   14002929b:	add    BYTE PTR [rax],al
   14002929d:	add    BYTE PTR [rax],al
   14002929f:	add    BYTE PTR [rax-0x52],cl
   1400292a2:	add    al,BYTE PTR [rax]
   1400292a4:	test   al,0x8
   1400292a6:	add    BYTE PTR [rax],al
   1400292a8:	in     al,0x4
   1400292aa:	add    BYTE PTR [rax],al
   1400292ac:	add    BYTE PTR [rax],al
   1400292ae:	add    BYTE PTR [rax],al
   1400292b0:	lock mov dh,0x2
   1400292b3:	add    al,cl
   1400292b5:	(bad)  
   1400292b6:	add    BYTE PTR [rax],al
   1400292b8:	in     al,0x4
   1400292ba:	add    BYTE PTR [rax],al
   1400292bc:	add    BYTE PTR [rax],al
   1400292be:	add    BYTE PTR [rax],al
   1400292c0:	mov    eax,0x680002bd
   1400292c5:	add    eax,0x4e40000
   1400292ca:	add    BYTE PTR [rax],al
   1400292cc:	add    BYTE PTR [rax],al
   1400292ce:	add    BYTE PTR [rax],al
   1400292d0:	and    bl,al
   1400292d2:	add    al,BYTE PTR [rax]
   1400292d4:	test   al,0x25
   1400292d6:	add    BYTE PTR [rax],al
   1400292d8:	in     al,0x4
   1400292da:	add    BYTE PTR [rax],al
   1400292dc:	add    BYTE PTR [rax],al
   1400292de:	add    BYTE PTR [rax],al
   1400292e0:	enter  0x2e8,0x0
   1400292e4:	test   al,0x10
   1400292e6:	add    BYTE PTR [rax],al
   1400292e8:	in     al,0x4
   1400292ea:	add    BYTE PTR [rax],al
   1400292ec:	add    BYTE PTR [rax],al
   1400292ee:	add    BYTE PTR [rax],al
   1400292f0:	jo     0x1400292eb
   1400292f2:	add    al,BYTE PTR [rax]
   1400292f4:	mov    BYTE PTR [rcx],cl
   1400292f6:	add    BYTE PTR [rax],al
   1400292f8:	in     al,0x4
   1400292fa:	add    BYTE PTR [rax],al
   1400292fc:	add    BYTE PTR [rax],al
   1400292fe:	add    BYTE PTR [rax],al
   140029300:	clc    
   140029301:	add    al,BYTE PTR [rbx]
   140029303:	add    BYTE PTR [rax+0x4],ch
   140029306:	add    BYTE PTR [rax],al
   140029308:	in     al,0x4
   14002930a:	add    BYTE PTR [rax],al
   14002930c:	add    BYTE PTR [rax],al
   14002930e:	add    BYTE PTR [rax],al
   140029310:	(bad)  
   140029311:	(bad)  
   140029312:	add    eax,DWORD PTR [rax]
   140029314:	scas   al,BYTE PTR es:[rdi]
   140029315:	add    BYTE PTR [rax],al
   140029317:	add    ah,ah
   140029319:	add    al,0x0
   14002931b:	add    BYTE PTR [rax],al
   14002931d:	add    BYTE PTR [rax],al
   14002931f:	add    BYTE PTR [rax],dl
   140029321:	or     BYTE PTR [rbx],al
   140029323:	add    BYTE PTR [rbx+rax*1],bh
   140029326:	add    BYTE PTR [rax],al
   140029328:	in     al,0x4
   14002932a:	add    BYTE PTR [rax],al
   14002932c:	add    BYTE PTR [rax],al
   14002932e:	add    BYTE PTR [rax],al
   140029330:	or     r8,QWORD PTR [rbx]
   140029333:	add    BYTE PTR [rcx+0x6],al
   140029336:	add    BYTE PTR [rax],al
   140029338:	in     al,0x4
   14002933a:	add    BYTE PTR [rax],al
   14002933c:	add    BYTE PTR [rax],al
   14002933e:	add    BYTE PTR [rax],al
   140029340:	sub    BYTE PTR [rax],al
   140029342:	add    BYTE PTR [rax],al
   140029344:	xor    BYTE PTR [rax],al
   140029346:	add    BYTE PTR [rax],al
   140029348:	(bad)  
   140029349:	add    BYTE PTR [rax],al
   14002934b:	add    BYTE PTR [rcx],al
   14002934d:	add    BYTE PTR [rax+rax*1],al
	...
   140029360:	adc    BYTE PTR [rax],al
	...
   14002936a:	add    BYTE PTR [rax],al
   14002936c:	add    BYTE PTR [rax],0x0
   14002936f:	add    BYTE PTR [rax],al
   140029371:	add    BYTE PTR [rax],0x0
   140029374:	add    BYTE PTR [rax+0x0],0x80
   14002937b:	add    BYTE PTR [rax+0x8000],al
   140029381:	add    BYTE PTR [rax-0x7f7f8000],0x0
   140029388:	rol    al,0xc0
   14002938b:	add    bh,bh
   14002938d:	add    BYTE PTR [rax],al
   14002938f:	add    BYTE PTR [rax],al
   140029391:	inc    DWORD PTR [rax]
   140029393:	add    bh,bh
   140029395:	inc    DWORD PTR [rax]
   140029397:	add    BYTE PTR [rax],al
   140029399:	add    bh,bh
   14002939b:	add    bh,bh
   14002939d:	add    bh,bh
   14002939f:	add    BYTE PTR [rax],al
   1400293a1:	(bad)  
   1400293a2:	inc    DWORD PTR [rax]
   1400293a4:	(bad)  
   1400293a5:	(bad)  
   1400293a6:	inc    DWORD PTR [rax]
   1400293a8:	add    BYTE PTR [rbx],al
   1400293aa:	xor    esi,DWORD PTR [rbx]
   1400293ac:	xor    esi,DWORD PTR [rbx]
   1400293ae:	xor    esi,DWORD PTR [rbx]
   1400293b0:	xor    esi,DWORD PTR [rbx]
   1400293b2:	xor    esi,DWORD PTR [rbx]
   1400293b4:	xor    esi,DWORD PTR [rbx]
   1400293b6:	xor    esi,DWORD PTR [rbx]
   1400293b8:	xor    esi,DWORD PTR [rbx]
   1400293ba:	xor    esi,DWORD PTR [rbx]
   1400293bc:	xor    esi,DWORD PTR [rbx]
   1400293be:	xor    BYTE PTR [rax],al
   1400293c0:	add    BYTE PTR [rdi],dh
   1400293c2:	(bad)  
   1400293c3:	(bad)  
   1400293c4:	(bad)  
   1400293c5:	(bad)  
   1400293c6:	(bad)  
   1400293c7:	(bad)  
   1400293c8:	(bad)  
   1400293c9:	(bad)  
   1400293ca:	(bad)  
   1400293cb:	(bad)  
   1400293cc:	(bad)  
   1400293cd:	(bad)  
   1400293ce:	(bad)  
   1400293cf:	(bad)  
   1400293d0:	(bad)  
   1400293d1:	(bad)  
   1400293d2:	(bad)  
   1400293d3:	(bad)  
   1400293d4:	(bad)  
   1400293d5:	push   QWORD PTR [rbx+0x0]
   1400293d8:	add    ecx,DWORD PTR [rdi-0x1]
   1400293de:	(bad)  
   1400293df:	(bad)  
   1400293e0:	(bad)  
   1400293e1:	(bad)  
   1400293e2:	(bad)  
   1400293e3:	(bad)  
   1400293e4:	(bad)  
   1400293e5:	(bad)  
   1400293e6:	(bad)  
   1400293e7:	(bad)  
   1400293e8:	(bad)  
   1400293e9:	(bad)  
   1400293ea:	(bad)  
   1400293eb:	(bad)  
   1400293ec:	(bad)  
   1400293ed:	(bad)  
   1400293ee:	clc    
   1400293ef:	xor    BYTE PTR [rdi],al
   1400293f1:	(bad)  
   1400293f2:	(bad)  
   1400293f3:	(bad)  
   1400293f4:	(bad)  
   1400293f5:	(bad)  
   1400293f6:	(bad)  
   1400293f7:	(bad)  
   1400293f8:	(bad)  
   1400293f9:	(bad)  
   1400293fa:	(bad)  
   1400293fb:	(bad)  
   1400293fc:	(bad)  
   1400293fd:	(bad)  
   1400293fe:	(bad)  
   1400293ff:	(bad)  
   140029400:	(bad)  
   140029401:	(bad)  
   140029402:	(bad)  
   140029403:	(bad)  
   140029404:	(bad)  
   140029405:	(bad)  
   140029406:	push   QWORD PTR [rax+0x38]
   140029409:	(bad)  
   14002940a:	(bad)  
   14002940b:	(bad)  
   14002940c:	(bad)  
   14002940d:	(bad)  
   14002940e:	(bad)  
   14002940f:	(bad)  
   140029410:	(bad)  
   140029411:	(bad)  
   140029412:	(bad)  
   140029413:	(bad)  
   140029414:	(bad)  
   140029415:	(bad)  
   140029416:	(bad)  
   140029417:	(bad)  
   140029418:	(bad)  
   140029419:	(bad)  
   14002941a:	(bad)  
   14002941b:	(bad)  
   14002941c:	(bad)  
   14002941d:	(bad)  
   14002941e:	inc    DWORD PTR [rbx-0xc8]
   140029424:	(bad)  
   140029425:	dec    DWORD PTR [rax+0x77777787]
   14002942b:	ja     0x1400294a4
   14002942d:	ja     0x1400294a6
   14002942f:	mov    BYTE PTR [rdi-0x1],cl
   140029435:	(bad)  
   140029436:	inc    DWORD PTR [rbx-0x88]
   14002943c:	clc    
   14002943d:	xchg   DWORD PTR [rdi+0x77],esi
   140029440:	ja     0x1400294b9
   140029442:	ja     0x1400294bb
   140029444:	ja     0x1400294bd
   140029446:	ja     0x1400294bf
   140029448:	ja     0x1400293d2
   14002944a:	(bad)  
   14002944b:	(bad)  
   14002944c:	(bad)  
   14002944d:	(bad)  
   14002944e:	inc    DWORD PTR [rdi-0x88]
   140029454:	ja     0x1400294cd
   140029456:	ja     0x1400294d0
   140029458:	mov    BYTE PTR [rax-0x77777778],cl
   14002945e:	mov    BYTE PTR [rdi+0x77],dh
   140029461:	ja     0x1400293f2
   140029463:	(bad)  
   140029464:	(bad)  
   140029465:	(bad)  
   140029466:	inc    DWORD PTR [rdi-0x88]
   14002946c:	ja     0x1400294e5
   14002946e:	(bad)  
   14002946f:	(bad)  
   140029470:	(bad)  
   140029471:	(bad)  
   140029472:	(bad)  
   140029473:	(bad)  
   140029474:	(bad)  
   140029475:	(bad)  
   140029476:	(bad)  
   140029477:	(bad)  
   140029478:	clc    
   140029479:	xchg   DWORD PTR [rax-0x1],edi
   14002947c:	(bad)  
   14002947d:	(bad)  
   14002947e:	inc    DWORD PTR [rdi-0x88]
   140029484:	mov    BYTE PTR [rdi-0x78],dh
   140029487:	(bad)  
   140029488:	dec    DWORD PTR [rax-0x77777778]
   14002948e:	(bad)  
   14002948f:	(bad)  
   140029490:	(bad)  
   140029491:	dec    DWORD PTR [rax-0x1]
   140029497:	xchg   DWORD PTR [rax-0x1],edi
   14002949a:	(bad)  
   14002949b:	(bad)  
   14002949c:	(bad)  
   14002949d:	clc    
   14002949e:	xchg   DWORD PTR [rax+0x77777788],ecx
   1400294a4:	ja     0x14002951d
   1400294a6:	mov    bh,bh
   1400294a8:	(bad)  
   1400294a9:	dec    DWORD PTR [rdi-0x1]
   1400294af:	xchg   DWORD PTR [rax-0x1],edi
   1400294b2:	(bad)  
   1400294b3:	(bad)  
   1400294b4:	(bad)  
   1400294b5:	(bad)  
   1400294b6:	(bad)  
   1400294b7:	clc    
   1400294b8:	ja     0x140029531
   1400294ba:	ja     0x140029533
   1400294bc:	ja     0x140029535
   1400294be:	js     0x1400294bf
   1400294c0:	(bad)  
   1400294c1:	(bad)  
   1400294c2:	(bad)  
   1400294c3:	(bad)  
   1400294c4:	(bad)  
   1400294c5:	(bad)  
   1400294c6:	inc    DWORD PTR [rdi-0x88]
   1400294cc:	(bad)  
   1400294cd:	(bad)  
   1400294ce:	(bad)  
   1400294cf:	clc    
   1400294d0:	ja     0x14002945a
   1400294d2:	mov    BYTE PTR [rax-0x707778],cl
   1400294d8:	(bad)  
   1400294d9:	(bad)  
   1400294da:	(bad)  
   1400294db:	(bad)  
   1400294dc:	(bad)  
   1400294dd:	(bad)  
   1400294de:	inc    DWORD PTR [rdi-0x88]
   1400294e4:	(bad)  
   1400294e5:	(bad)  
   1400294e6:	(bad)  
   1400294e7:	dec    DWORD PTR [rax-0x1]
   1400294ed:	(bad)  
   1400294ee:	(bad)  
   1400294ef:	clc    
   1400294f0:	(bad)  
   1400294f1:	(bad)  
   1400294f2:	(bad)  
   1400294f3:	(bad)  
   1400294f4:	(bad)  
   1400294f5:	(bad)  
   1400294f6:	inc    DWORD PTR [rdi-0x88]
   1400294fc:	(bad)  
   1400294fd:	(bad)  
   1400294fe:	(bad)  
   1400294ff:	dec    DWORD PTR [rax+0x78777787]
   140029505:	mov    BYTE PTR [rax-0x707778],cl
   14002950b:	(bad)  
   14002950c:	(bad)  
   14002950d:	(bad)  
   14002950e:	inc    DWORD PTR [rdi-0x88]
   140029514:	(bad)  
   140029515:	(bad)  
   140029516:	inc    DWORD PTR [rdi+0x77777777]
   14002951c:	ja     0x140029595
   14002951e:	ja     0x1400294af
   140029520:	xchg   DWORD PTR [rax-0x1],edi
   140029523:	(bad)  
   140029524:	(bad)  
   140029525:	(bad)  
   140029526:	inc    DWORD PTR [rdi-0x88]
   14002952c:	(bad)  
   14002952d:	(bad)  
   14002952e:	inc    DWORD PTR [rdi-0x77777789]
   140029534:	mov    BYTE PTR [rdi+0x77f88f78],al
   14002953a:	js     0x14002953b
   14002953c:	(bad)  
   14002953d:	(bad)  
   14002953e:	inc    DWORD PTR [rdi-0x88]
   140029544:	(bad)  
   140029545:	(bad)  
   140029546:	dec    DWORD PTR [rax-0x71]
   14002954c:	(bad)  
   14002954d:	(bad)  
   14002954e:	(bad)  
   14002954f:	(bad)  
   140029550:	(bad)  
   140029551:	clc    
   140029552:	ja     0x1400294e3
   140029554:	(bad)  
   140029555:	(bad)  
   140029556:	inc    DWORD PTR [rdi-0x88]
   14002955c:	(bad)  
   14002955d:	(bad)  
   14002955e:	(bad)  
   14002955f:	dec    DWORD PTR [rax-0x70777778]
   140029565:	(bad)  
   140029566:	(bad)  
   140029567:	(bad)  
   140029568:	(bad)  
   140029569:	push   QWORD PTR [rdi+0x7f]
   14002956c:	(bad)  
   14002956d:	(bad)  
   14002956e:	inc    DWORD PTR [rdi-0x88]
   140029574:	(bad)  
   140029575:	clc    
   140029576:	mov    BYTE PTR [rdi+0x77],dh
   140029579:	ja     0x1400295f2
   14002957b:	ja     0x1400295f4
   14002957d:	ja     0x1400295f7
   14002957f:	(bad)  
   140029580:	(bad)  
   140029581:	inc    DWORD PTR [rdi-0x81]
   140029587:	xchg   DWORD PTR [rax-0x1],edi
   14002958a:	(bad)  
   14002958b:	(bad)  
   14002958c:	(bad)  
   14002958d:	clc    
   14002958e:	ja     0x140029608
   140029590:	mov    BYTE PTR [rax-0x77777778],cl
   140029596:	ja     0x140029610
   140029598:	(bad)  
   140029599:	inc    DWORD PTR [rdi-0x81]
   14002959f:	xchg   DWORD PTR [rax-0x1],edi
   1400295a2:	(bad)  
   1400295a3:	(bad)  
   1400295a4:	(bad)  
   1400295a5:	clc    
   1400295a6:	ja     0x140029620
   1400295a8:	(bad)  
   1400295a9:	(bad)  
   1400295aa:	(bad)  
   1400295ab:	dec    DWORD PTR [rax-0x77770701]
   1400295b1:	mov    BYTE PTR [rdi+0x7f],dh
   1400295b4:	(bad)  
   1400295b5:	(bad)  
   1400295b6:	inc    DWORD PTR [rdi-0x88]
   1400295bc:	(bad)  
   1400295bd:	(bad)  
   1400295be:	clc    
   1400295bf:	mov    BYTE PTR [rax-0x7000071],cl
   1400295c5:	jg     0x1400295c6
   1400295c7:	(bad)  
   1400295c8:	clc    
   1400295c9:	xchg   DWORD PTR [rax-0x1],edi
   1400295cc:	(bad)  
   1400295cd:	(bad)  
   1400295ce:	inc    DWORD PTR [rdi-0x88]
   1400295d4:	(bad)  
   1400295d5:	(bad)  
   1400295d6:	(bad)  
   1400295d7:	(bad)  
   1400295d8:	clc    
   1400295d9:	(bad)  
   1400295da:	dec    DWORD PTR [rax-0x9708]
   1400295e0:	dec    DWORD PTR [rax-0x1]
   1400295e6:	inc    DWORD PTR [rdi-0x81]
   1400295ec:	(bad)  
   1400295ed:	(bad)  
   1400295ee:	(bad)  
   1400295ef:	(bad)  
   1400295f0:	(bad)  
   1400295f1:	push   rdi
   1400295f3:	(bad)  
   1400295f4:	clc    
   1400295f5:	data16 (bad) 
   1400295f7:	(bad)  
   1400295f8:	(bad)  
   1400295f9:	(bad)  
   1400295fa:	(bad)  
   1400295fb:	(bad)  
   1400295fc:	(bad)  
   1400295fd:	(bad)  
   1400295fe:	push   rdi
   140029600:	jg     0x140029601
   140029602:	(bad)  
   140029603:	(bad)  
   140029604:	(bad)  
   140029605:	(bad)  
   140029606:	(bad)  
   140029607:	(bad)  
   140029608:	(bad)  
   140029609:	push   QWORD PTR [rdi-0x1]
   14002960c:	xchg   BYTE PTR [rsi-0x71],ah
   14002960f:	(bad)  
   140029610:	(bad)  
   140029611:	(bad)  
   140029612:	(bad)  
   140029613:	(bad)  
   140029614:	(bad)  
   140029615:	(bad)  
   140029616:	push   rdi
   140029618:	jg     0x140029619
   14002961a:	(bad)  
   14002961b:	(bad)  
   14002961c:	(bad)  
   14002961d:	(bad)  
   14002961e:	(bad)  
   14002961f:	(bad)  
   140029620:	(bad)  
   140029621:	clc    
   140029622:	push   0xffffffff8f6686ff
   140029627:	(bad)  
   140029628:	(bad)  
   140029629:	(bad)  
   14002962a:	(bad)  
   14002962b:	(bad)  
   14002962c:	(bad)  
   14002962d:	(bad)  
   14002962e:	push   rdi
   140029630:	jg     0x140029631
   140029632:	(bad)  
   140029633:	(bad)  
   140029634:	(bad)  
   140029635:	(bad)  
   140029636:	(bad)  
   140029637:	(bad)  
   140029638:	inc    DWORD PTR [rsi+0x6866f88f]
   14002963e:	(bad)  
   14002963f:	(bad)  
   140029640:	(bad)  
   140029641:	(bad)  
   140029642:	(bad)  
   140029643:	(bad)  
   140029644:	(bad)  
   140029645:	(bad)  
   140029646:	push   rdi
   140029648:	jg     0x140029649
   14002964a:	(bad)  
   14002964b:	(bad)  
   14002964c:	(bad)  
   14002964d:	(bad)  
   14002964e:	(bad)  
   14002964f:	(bad)  
   140029650:	jmp    QWORD PTR [rsi-0x71]
   140029653:	clc    
   140029654:	data16 jg 0x140029656
   140029657:	(bad)  
   140029658:	(bad)  
   140029659:	(bad)  
   14002965a:	(bad)  
   14002965b:	(bad)  
   14002965c:	(bad)  
   14002965d:	(bad)  
   14002965e:	push   rdi
   140029660:	jg     0x140029661
   140029662:	(bad)  
   140029663:	(bad)  
   140029664:	(bad)  
   140029665:	(bad)  
   140029666:	(bad)  
   140029667:	(bad)  
   140029668:	clc    
   140029669:	data16 (bad) 
   14002966b:	mul    DWORD PTR [rsi-0x71]
   14002966e:	(bad)  
   14002966f:	(bad)  
   140029670:	(bad)  
   140029671:	(bad)  
   140029672:	(bad)  
   140029673:	(bad)  
   140029674:	(bad)  
   140029675:	(bad)  
   140029676:	push   rdi
   140029678:	jg     0x140029679
   14002967a:	(bad)  
   14002967b:	(bad)  
   14002967c:	(bad)  
   14002967d:	(bad)  
   14002967e:	(bad)  
   14002967f:	(bad)  
   140029680:	clc    
   140029681:	data16 (bad) 
   140029683:	mul    DWORD PTR [rdi-0x1]
   140029686:	(bad)  
   140029687:	(bad)  
   140029688:	(bad)  
   140029689:	(bad)  
   14002968a:	(bad)  
   14002968b:	(bad)  
   14002968c:	(bad)  
   14002968d:	(bad)  
   14002968e:	push   rdi
   140029690:	jg     0x140029691
   140029692:	(bad)  
   140029693:	(bad)  
   140029694:	(bad)  
   140029695:	(bad)  
   140029696:	(bad)  
   140029697:	(bad)  
   140029698:	clc    
   140029699:	data16 (bad) 
   14002969b:	clc    
   14002969c:	data16 (bad) 
   14002969e:	(bad)  
   14002969f:	(bad)  
   1400296a0:	(bad)  
   1400296a1:	(bad)  
   1400296a2:	(bad)  
   1400296a3:	(bad)  
   1400296a4:	(bad)  
   1400296a5:	(bad)  
   1400296a6:	push   rdi
   1400296a8:	jg     0x1400296a9
   1400296aa:	(bad)  
   1400296ab:	(bad)  
   1400296ac:	(bad)  
   1400296ad:	(bad)  
   1400296ae:	(bad)  
   1400296af:	(bad)  
   1400296b0:	inc    DWORD PTR [rsi-0x70990098]
   1400296b6:	(bad)  
   1400296b7:	(bad)  
   1400296b8:	(bad)  
   1400296b9:	(bad)  
   1400296ba:	(bad)  
   1400296bb:	(bad)  
   1400296bc:	(bad)  
   1400296bd:	(bad)  
   1400296be:	push   rdi
   1400296c0:	jg     0x1400296c1
   1400296c2:	(bad)  
   1400296c3:	(bad)  
   1400296c4:	(bad)  
   1400296c5:	(bad)  
   1400296c6:	(bad)  
   1400296c7:	(bad)  
   1400296c8:	push   rdi
   1400296ca:	pop    WORD PTR [rsi-0x98]
   1400296d1:	(bad)  
   1400296d2:	(bad)  
   1400296d3:	(bad)  
   1400296d4:	(bad)  
   1400296d5:	(bad)  
   1400296d6:	push   rdi
   1400296d8:	jg     0x1400296d9
   1400296da:	(bad)  
   1400296db:	(bad)  
   1400296dc:	(bad)  
   1400296dd:	(bad)  
   1400296de:	(bad)  
   1400296df:	(bad)  
   1400296e0:	(bad)  
   1400296e1:	push   QWORD PTR [rsi+0x68]
   1400296e4:	push   QWORD PTR [rsi-0x71]
   1400296e7:	(bad)  
   1400296e8:	(bad)  
   1400296e9:	(bad)  
   1400296ea:	(bad)  
   1400296eb:	(bad)  
   1400296ec:	(bad)  
   1400296ed:	(bad)  
   1400296ee:	push   rdi
   1400296f0:	(bad)  
   1400296f1:	(bad)  
   1400296f2:	(bad)  
   1400296f3:	(bad)  
   1400296f4:	(bad)  
   1400296f5:	(bad)  
   1400296f6:	(bad)  
   1400296f7:	(bad)  
   1400296f8:	(bad)  
   1400296f9:	(bad)  
   1400296fa:	clc    
   1400296fb:	data16 (bad) 
   1400296fd:	clc    
   1400296fe:	ja     0x14002968f
   140029700:	(bad)  
   140029701:	(bad)  
   140029702:	(bad)  
   140029703:	(bad)  
   140029704:	(bad)  
   140029705:	(bad)  
   140029706:	(bad)  
   140029707:	clc    
   140029708:	(bad)  
   140029709:	(bad)  
   14002970a:	(bad)  
   14002970b:	(bad)  
   14002970c:	(bad)  
   14002970d:	(bad)  
   14002970e:	(bad)  
   14002970f:	(bad)  
   140029710:	(bad)  
   140029711:	(bad)  
   140029712:	inc    DWORD PTR [rsi-0x77070098]
   140029718:	(bad)  
   140029719:	(bad)  
   14002971a:	(bad)  
   14002971b:	(bad)  
   14002971c:	(bad)  
   14002971d:	(bad)  
   14002971e:	(bad)  
   14002971f:	clc    
   140029720:	(bad)  
   140029721:	(bad)  
   140029722:	(bad)  
   140029723:	(bad)  
   140029724:	(bad)  
   140029725:	(bad)  
   140029726:	(bad)  
   140029727:	(bad)  
   140029728:	(bad)  
   140029729:	(bad)  
   14002972a:	(bad)  
   14002972b:	clc    
   14002972c:	data16 (bad) 
   14002972e:	(bad)  
   14002972f:	clc    
   140029730:	(bad)  
   140029731:	(bad)  
   140029732:	(bad)  
   140029733:	(bad)  
   140029734:	(bad)  
   140029735:	(bad)  
   140029736:	(bad)  
   140029737:	clc    
   140029738:	(bad)  
   140029739:	(bad)  
   14002973a:	(bad)  
   14002973b:	(bad)  
   14002973c:	(bad)  
   14002973d:	(bad)  
   14002973e:	(bad)  
   14002973f:	(bad)  
   140029740:	(bad)  
   140029741:	(bad)  
   140029742:	(bad)  
   140029743:	inc    DWORD PTR [rsi-0x98]
   140029749:	(bad)  
   14002974a:	(bad)  
   14002974b:	(bad)  
   14002974c:	(bad)  
   14002974d:	(bad)  
   14002974e:	(bad)  
   14002974f:	clc    
   140029750:	(bad)  
   140029751:	(bad)  
   140029752:	(bad)  
   140029753:	(bad)  
   140029754:	(bad)  
   140029755:	(bad)  
   140029756:	(bad)  
   140029757:	(bad)  
   140029758:	(bad)  
   140029759:	(bad)  
   14002975a:	(bad)  
   14002975b:	(bad)  
   14002975c:	clc    
   14002975d:	push   0xffffffffffffffff
   140029762:	(bad)  
   140029763:	(bad)  
   140029764:	(bad)  
   140029765:	(bad)  
   140029766:	(bad)  
   140029767:	clc    
   140029768:	(bad)  
   140029769:	(bad)  
   14002976a:	(bad)  
   14002976b:	(bad)  
   14002976c:	(bad)  
   14002976d:	(bad)  
   14002976e:	(bad)  
   14002976f:	(bad)  
   140029770:	(bad)  
   140029771:	(bad)  
   140029772:	(bad)  
   140029773:	(bad)  
   140029774:	inc    DWORD PTR [rsi-0x71]
   14002977a:	(bad)  
   14002977b:	(bad)  
   14002977c:	(bad)  
   14002977d:	(bad)  
   14002977e:	(bad)  
   14002977f:	clc    
   140029780:	(bad)  
   140029781:	(bad)  
   140029782:	(bad)  
   140029783:	(bad)  
   140029784:	(bad)  
   140029785:	(bad)  
   140029786:	(bad)  
   140029787:	(bad)  
   140029788:	(bad)  
   140029789:	(bad)  
   14002978a:	(bad)  
   14002978b:	(bad)  
   14002978c:	inc    DWORD PTR [rdi-0x71]
   140029792:	(bad)  
   140029793:	(bad)  
   140029794:	(bad)  
   140029795:	(bad)  
   140029796:	(bad)  
   140029797:	clc    
   140029798:	(bad)  
   140029799:	(bad)  
   14002979a:	(bad)  
   14002979b:	(bad)  
   14002979c:	(bad)  
   14002979d:	(bad)  
   14002979e:	(bad)  
   14002979f:	(bad)  
   1400297a0:	(bad)  
   1400297a1:	(bad)  
   1400297a2:	(bad)  
   1400297a3:	(bad)  
   1400297a4:	(bad)  
   1400297a5:	clc    
   1400297a6:	(bad)  
   1400297a7:	(bad)  
   1400297a8:	(bad)  
   1400297a9:	(bad)  
   1400297aa:	(bad)  
   1400297ab:	(bad)  
   1400297ac:	(bad)  
   1400297ad:	(bad)  
   1400297ae:	(bad)  
   1400297af:	clc    
   1400297b0:	(bad)  
   1400297b1:	(bad)  
   1400297b2:	(bad)  
   1400297b3:	(bad)  
   1400297b4:	(bad)  
   1400297b5:	(bad)  
   1400297b6:	(bad)  
   1400297b7:	(bad)  
   1400297b8:	(bad)  
   1400297b9:	(bad)  
   1400297ba:	(bad)  
   1400297bb:	(bad)  
   1400297bc:	(bad)  
   1400297bd:	clc    
   1400297be:	(bad)  
   1400297bf:	(bad)  
   1400297c0:	(bad)  
   1400297c1:	(bad)  
   1400297c2:	(bad)  
   1400297c3:	(bad)  
   1400297c4:	(bad)  
   1400297c5:	(bad)  
   1400297c6:	(bad)  
   1400297c7:	clc    
   1400297c8:	or     bh,bh
   1400297ca:	(bad)  
   1400297cb:	(bad)  
   1400297cc:	(bad)  
   1400297cd:	(bad)  
   1400297ce:	(bad)  
   1400297cf:	(bad)  
   1400297d0:	(bad)  
   1400297d1:	(bad)  
   1400297d2:	(bad)  
   1400297d3:	(bad)  
   1400297d4:	(bad)  
   1400297d5:	(bad)  
   1400297d6:	(bad)  
   1400297d7:	(bad)  
   1400297d8:	(bad)  
   1400297d9:	(bad)  
   1400297da:	(bad)  
   1400297db:	(bad)  
   1400297dc:	(bad)  
   1400297dd:	(bad)  
   1400297de:	dec    DWORD PTR [rax-0x70f8]
   1400297e4:	(bad)  
   1400297e5:	(bad)  
   1400297e6:	(bad)  
   1400297e7:	(bad)  
   1400297e8:	(bad)  
   1400297e9:	(bad)  
   1400297ea:	(bad)  
   1400297eb:	(bad)  
   1400297ec:	(bad)  
   1400297ed:	(bad)  
   1400297ee:	(bad)  
   1400297ef:	(bad)  
   1400297f0:	(bad)  
   1400297f1:	(bad)  
   1400297f2:	(bad)  
   1400297f3:	(bad)  
   1400297f4:	(bad)  
   1400297f5:	(bad)  
   1400297f6:	inc    DWORD PTR [rax-0x7800]
   1400297fc:	(bad)  
   1400297fd:	(bad)  
   1400297fe:	(bad)  
   1400297ff:	(bad)  
   140029800:	(bad)  
   140029801:	(bad)  
   140029802:	(bad)  
   140029803:	(bad)  
   140029804:	(bad)  
   140029805:	(bad)  
   140029806:	(bad)  
   140029807:	(bad)  
   140029808:	(bad)  
   140029809:	(bad)  
   14002980a:	(bad)  
   14002980b:	(bad)  
   14002980c:	(bad)  
   14002980d:	dec    DWORD PTR [rax-0x77f7ff80]
   140029813:	mov    BYTE PTR [rax-0x77777778],cl
   140029819:	mov    BYTE PTR [rax-0x77777778],cl
   14002981f:	mov    BYTE PTR [rax-0x77777778],cl
   140029825:	mov    BYTE PTR [rax+0xe000],al
   14002982b:	add    BYTE PTR [rax],al
   14002982d:	(bad)  
   14002982e:	pushf  
   14002982f:	xchg   ecx,eax
   140029830:	rol    BYTE PTR [rax],0x0
   140029833:	add    BYTE PTR [rax],al
   140029835:	add    esp,eax
   140029837:	add    BYTE PTR [rax+0x0],al
   14002983d:	add    eax,eax
   14002983f:	add    BYTE PTR [rax+0x0],al
   140029845:	add    DWORD PTR [rax+0x0],eax
   14002984b:	add    BYTE PTR [rax],al
   14002984d:	add    BYTE PTR [rax+0x0],al
	...
   140029987:	add    BYTE PTR [rax+0x0],al
   14002998d:	add    BYTE PTR [rax],al
   14002998f:	add    BYTE PTR [rax+0x0],al
   140029995:	add    DWORD PTR [rax+0xc000],eax
   14002999b:	add    BYTE PTR [rax],al
   14002999d:	add    DWORD PTR [rax+0xe000],eax
   1400299a3:	add    BYTE PTR [rax],al
   1400299a5:	(bad)  
   1400299a6:	rol    BYTE PTR [rax],0x28
   1400299a9:	add    BYTE PTR [rax],al
   1400299ab:	add    BYTE PTR [rax],ah
   1400299ad:	add    BYTE PTR [rax],al
   1400299af:	add    BYTE PTR [rax+0x0],al
   1400299b2:	add    BYTE PTR [rax],al
   1400299b4:	add    DWORD PTR [rax],eax
   1400299b6:	add    al,0x0
	...
   1400299c8:	adc    BYTE PTR [rax],al
	...
   1400299d2:	add    BYTE PTR [rax],al
   1400299d4:	add    BYTE PTR [rax],0x0
   1400299d7:	add    BYTE PTR [rax],al
   1400299d9:	add    BYTE PTR [rax],0x0
   1400299dc:	add    BYTE PTR [rax+0x0],0x80
   1400299e3:	add    BYTE PTR [rax+0x8000],al
   1400299e9:	add    BYTE PTR [rax-0x7f7f8000],0x0
   1400299f0:	rol    al,0xc0
   1400299f3:	add    bh,bh
   1400299f5:	add    BYTE PTR [rax],al
   1400299f7:	add    BYTE PTR [rax],al
   1400299f9:	inc    DWORD PTR [rax]
   1400299fb:	add    bh,bh
   1400299fd:	inc    DWORD PTR [rax]
   1400299ff:	add    BYTE PTR [rax],al
   140029a01:	add    bh,bh
   140029a03:	add    bh,bh
   140029a05:	add    bh,bh
   140029a07:	add    BYTE PTR [rax],al
   140029a09:	(bad)  
   140029a0a:	inc    DWORD PTR [rax]
   140029a0c:	(bad)  
   140029a0d:	(bad)  
   140029a0e:	inc    DWORD PTR [rax]
   140029a10:	add    BYTE PTR [rbx],al
   140029a12:	xor    esi,DWORD PTR [rbx]
   140029a14:	xor    esi,DWORD PTR [rbx]
   140029a16:	xor    esi,DWORD PTR [rbx]
   140029a18:	xor    esi,DWORD PTR [rbx]
   140029a1a:	xor    esi,DWORD PTR [rbx]
   140029a1c:	xor    esi,DWORD PTR [rbx]
   140029a1e:	xor    BYTE PTR [rax],al
   140029a20:	add    BYTE PTR [rdi-0x71],dh
   140029a23:	(bad)  
   140029a24:	(bad)  
   140029a25:	(bad)  
   140029a26:	(bad)  
   140029a27:	(bad)  
   140029a28:	(bad)  
   140029a29:	(bad)  
   140029a2a:	(bad)  
   140029a2b:	(bad)  
   140029a2c:	(bad)  
   140029a2d:	clc    
   140029a2e:	ja     0x140029a30
   140029a30:	(bad)  
   140029a31:	(bad)  
   140029a32:	(bad)  
   140029a33:	(bad)  
   140029a34:	(bad)  
   140029a35:	(bad)  
   140029a36:	(bad)  
   140029a37:	(bad)  
   140029a38:	(bad)  
   140029a39:	(bad)  
   140029a3a:	(bad)  
   140029a3b:	(bad)  
   140029a3c:	(bad)  
   140029a3d:	(bad)  
   140029a3e:	clc    
   140029a3f:	jo     0x140029a78
   140029a41:	(bad)  
   140029a42:	(bad)  
   140029a43:	(bad)  
   140029a44:	(bad)  
   140029a45:	(bad)  
   140029a46:	(bad)  
   140029a47:	(bad)  
   140029a48:	(bad)  
   140029a49:	(bad)  
   140029a4a:	(bad)  
   140029a4b:	(bad)  
   140029a4c:	(bad)  
   140029a4d:	(bad)  
   140029a4e:	push   QWORD PTR [rbx+0x78]
   140029a51:	(bad)  
   140029a52:	dec    DWORD PTR [rax+0x77777787]
   140029a58:	ja     0x140029ad1
   140029a5a:	js     0x1400299e4
   140029a5c:	(bad)  
   140029a5d:	(bad)  
   140029a5e:	inc    DWORD PTR [rdi+0x77ffff78]
   140029a64:	ja     0x1400299ee
   140029a66:	mov    BYTE PTR [rax+0x77878888],cl
   140029a6c:	(bad)  
   140029a6d:	(bad)  
   140029a6e:	inc    DWORD PTR [rdi-0x78000088]
   140029a74:	js     0x140029a75
   140029a76:	mov    BYTE PTR [rax-0x7007078],cl
   140029a7c:	jg     0x140029a7d
   140029a7e:	inc    DWORD PTR [rdi-0x7000088]
   140029a84:	mov    BYTE PTR [rdi+0x78777777],al
   140029a8a:	(bad)  
   140029a8b:	dec    DWORD PTR [rdi+0x7887ffff]
   140029a91:	(bad)  
   140029a92:	(bad)  
   140029a93:	(bad)  
   140029a94:	inc    DWORD PTR [rdi+0x78888878]
   140029a9a:	(bad)  
   140029a9b:	(bad)  
   140029a9c:	(bad)  
   140029a9d:	(bad)  
   140029a9e:	inc    DWORD PTR [rdi-0x88]
   140029aa4:	(bad)  
   140029aa5:	clc    
   140029aa6:	mov    BYTE PTR [rax-0x70077078],cl
   140029aac:	(bad)  
   140029aad:	(bad)  
   140029aae:	inc    DWORD PTR [rdi-0x88]
   140029ab4:	clc    
   140029ab5:	xchg   DWORD PTR [rdi+0x77],esi
   140029ab8:	ja     0x140029b31
   140029aba:	mov    BYTE PTR [rax-0x78000071],cl
   140029ac0:	js     0x140029ac1
   140029ac2:	(bad)  
   140029ac3:	(bad)  
   140029ac4:	clc    
   140029ac5:	ja     0x140029a4f
   140029ac7:	mov    BYTE PTR [rax+0x7f878f88],cl
   140029acd:	(bad)  
   140029ace:	inc    DWORD PTR [rdi-0x88]
   140029ad4:	clc    
   140029ad5:	mov    BYTE PTR [rax-0x777778],cl
   140029adb:	clc    
   140029adc:	jg     0x140029add
   140029ade:	inc    DWORD PTR [rdi-0x7000088]
   140029ae4:	ja     0x140029b5e
   140029ae6:	xchg   DWORD PTR [rax+0x77],edi
   140029ae9:	ja     0x140029a73
   140029aeb:	(bad)  
   140029aec:	jg     0x140029aed
   140029aee:	inc    DWORD PTR [rdi-0x88]
   140029af4:	xchg   DWORD PTR [rax-0x71],edi
   140029af7:	dec    DWORD PTR [rax+0x7f878888]
   140029afd:	(bad)  
   140029afe:	inc    DWORD PTR [rdi-0x88]
   140029b04:	dec    DWORD PTR [rax-0x70787701]
   140029b0a:	dec    DWORD PTR [rax-0x78000071]
   140029b10:	jg     0x140029b11
   140029b12:	(bad)  
   140029b13:	(bad)  
   140029b14:	(bad)  
   140029b15:	(bad)  
   140029b16:	clc    
   140029b17:	js     0x140029b0f
   140029b19:	outs   dx,DWORD PTR ds:[rsi]
   140029b1a:	(bad)  
   140029b1b:	(bad)  
   140029b1c:	(bad)  
   140029b1d:	(bad)  
   140029b1e:	push   rdi
   140029b20:	jg     0x140029b21
   140029b22:	(bad)  
   140029b23:	(bad)  
   140029b24:	(bad)  
   140029b25:	push   rsi
   140029b27:	pop    QWORD PTR [rsi-0x81]
   140029b2d:	(bad)  
   140029b2e:	push   rdi
   140029b30:	jg     0x140029b31
   140029b32:	(bad)  
   140029b33:	(bad)  
   140029b34:	(bad)  
   140029b35:	inc    DWORD PTR [rsi-0x709908]
   140029b3b:	(bad)  
   140029b3c:	(bad)  
   140029b3d:	(bad)  
   140029b3e:	push   rdi
   140029b40:	jg     0x140029b41
   140029b42:	(bad)  
   140029b43:	(bad)  
   140029b44:	(bad)  
   140029b45:	clc    
   140029b46:	push   0xffffffffffff68f8
   140029b4b:	(bad)  
   140029b4c:	(bad)  
   140029b4d:	(bad)  
   140029b4e:	push   rdi
   140029b50:	jg     0x140029b51
   140029b52:	(bad)  
   140029b53:	(bad)  
   140029b54:	(bad)  
   140029b55:	clc    
   140029b56:	addr32 clc 
   140029b58:	push   0xffffffffffffffff
   140029b5d:	(bad)  
   140029b5e:	push   rdi
   140029b60:	jg     0x140029b61
   140029b62:	(bad)  
   140029b63:	(bad)  
   140029b64:	(bad)  
   140029b65:	inc    DWORD PTR [rsi-0x8971]
   140029b6b:	(bad)  
   140029b6c:	(bad)  
   140029b6d:	(bad)  
   140029b6e:	push   rdi
   140029b70:	jg     0x140029b71
   140029b72:	(bad)  
   140029b73:	(bad)  
   140029b74:	(bad)  
   140029b75:	push   rdi
   140029b77:	push   0xffffffffffff78f7
   140029b7c:	(bad)  
   140029b7d:	(bad)  
   140029b7e:	push   rdi
   140029b80:	(bad)  
   140029b81:	(bad)  
   140029b82:	(bad)  
   140029b83:	(bad)  
   140029b84:	(bad)  
   140029b85:	(bad)  
   140029b86:	inc    DWORD PTR [rsi-0x707771]
   140029b8c:	(bad)  
   140029b8d:	(bad)  
   140029b8e:	(bad)  
   140029b8f:	clc    
   140029b90:	(bad)  
   140029b91:	(bad)  
   140029b92:	(bad)  
   140029b93:	(bad)  
   140029b94:	(bad)  
   140029b95:	(bad)  
   140029b96:	(bad)  
   140029b97:	clc    
   140029b98:	push   0xffffffffffff8fff
   140029b9d:	(bad)  
   140029b9e:	(bad)  
   140029b9f:	clc    
   140029ba0:	(bad)  
   140029ba1:	(bad)  
   140029ba2:	(bad)  
   140029ba3:	(bad)  
   140029ba4:	(bad)  
   140029ba5:	(bad)  
   140029ba6:	(bad)  
   140029ba7:	inc    DWORD PTR [rsi-0x71]
   140029bad:	(bad)  
   140029bae:	(bad)  
   140029baf:	clc    
   140029bb0:	(bad)  
   140029bb1:	(bad)  
   140029bb2:	(bad)  
   140029bb3:	(bad)  
   140029bb4:	(bad)  
   140029bb5:	(bad)  
   140029bb6:	(bad)  
   140029bb7:	(bad)  
   140029bb8:	clc    
   140029bb9:	(bad)  
   140029bba:	(bad)  
   140029bbb:	(bad)  
   140029bbc:	(bad)  
   140029bbd:	(bad)  
   140029bbe:	(bad)  
   140029bbf:	clc    
   140029bc0:	mov    bh,bh
   140029bc2:	(bad)  
   140029bc3:	(bad)  
   140029bc4:	(bad)  
   140029bc5:	(bad)  
   140029bc6:	(bad)  
   140029bc7:	(bad)  
   140029bc8:	dec    DWORD PTR [rdi-0x1]
   140029bce:	dec    DWORD PTR [rax-0x78]
   140029bd4:	(bad)  
   140029bd5:	(bad)  
   140029bd6:	(bad)  
   140029bd7:	(bad)  
   140029bd8:	(bad)  
   140029bd9:	(bad)  
   140029bda:	(bad)  
   140029bdb:	(bad)  
   140029bdc:	(bad)  
   140029bdd:	(bad)  
   140029bde:	dec    DWORD PTR [rax-0x70f8]
   140029be4:	(bad)  
   140029be5:	(bad)  
   140029be6:	(bad)  
   140029be7:	(bad)  
   140029be8:	(bad)  
   140029be9:	(bad)  
   140029bea:	(bad)  
   140029beb:	(bad)  
   140029bec:	(bad)  
   140029bed:	(bad)  
   140029bee:	clc    
   140029bef:	add    BYTE PTR [rax],0x88
   140029bf2:	(bad)  
   140029bf3:	(bad)  
   140029bf4:	(bad)  
   140029bf5:	(bad)  
   140029bf6:	(bad)  
   140029bf7:	(bad)  
   140029bf8:	(bad)  
   140029bf9:	(bad)  
   140029bfa:	(bad)  
   140029bfb:	(bad)  
   140029bfc:	(bad)  
   140029bfd:	clc    
   140029bfe:	mov    BYTE PTR [rax],al
   140029c00:	add    BYTE PTR [rax],cl
   140029c02:	mov    BYTE PTR [rax-0x77777778],cl
   140029c08:	mov    BYTE PTR [rax-0x77777778],cl
   140029c0e:	add    BYTE PTR [rax],0xe0
   140029c11:	add    BYTE PTR [rax],al
   140029c13:	(bad)  
   140029c14:	rol    BYTE PTR [rax],0x0
   140029c17:	add    eax,DWORD PTR [rax+0x10000]
	...
   140029c81:	add    BYTE PTR [rax],al
   140029c83:	add    BYTE PTR [rax-0x3fff0000],al
   140029c89:	add    BYTE PTR [rax],al
   140029c8b:	add    esp,eax
   140029c8d:	add    BYTE PTR [rax],al
   140029c8f:	(bad)  
   140029c90:	sub    BYTE PTR [rax],al
   140029c92:	add    BYTE PTR [rax],al
   140029c94:	sbb    BYTE PTR [rax],al
   140029c96:	add    BYTE PTR [rax],al
   140029c98:	xor    BYTE PTR [rax],al
   140029c9a:	add    BYTE PTR [rax],al
   140029c9c:	add    DWORD PTR [rax],eax
   140029c9e:	add    al,0x0
	...
   140029cb0:	adc    BYTE PTR [rax],al
	...
   140029cba:	add    BYTE PTR [rax],al
   140029cbc:	add    BYTE PTR [rax],0x0
   140029cbf:	add    BYTE PTR [rax],al
   140029cc1:	add    BYTE PTR [rax],0x0
   140029cc4:	add    BYTE PTR [rax+0x0],0x80
   140029ccb:	add    BYTE PTR [rax+0x8000],al
   140029cd1:	add    BYTE PTR [rax-0x7f7f8000],0x0
   140029cd8:	rol    al,0xc0
   140029cdb:	add    bh,bh
   140029cdd:	add    BYTE PTR [rax],al
   140029cdf:	add    BYTE PTR [rax],al
   140029ce1:	inc    DWORD PTR [rax]
   140029ce3:	add    bh,bh
   140029ce5:	inc    DWORD PTR [rax]
   140029ce7:	add    BYTE PTR [rax],al
   140029ce9:	add    bh,bh
   140029ceb:	add    bh,bh
   140029ced:	add    bh,bh
   140029cef:	add    BYTE PTR [rax],al
   140029cf1:	(bad)  
   140029cf2:	inc    DWORD PTR [rax]
   140029cf4:	(bad)  
   140029cf5:	(bad)  
   140029cf6:	inc    DWORD PTR [rax]
	...
   140029d04:	add    esi,DWORD PTR [rbx]
   140029d06:	xor    esi,DWORD PTR [rbx]
   140029d08:	xor    esi,DWORD PTR [rbx]
   140029d0a:	xor    esi,DWORD PTR [rbx]
   140029d0c:	xor    esi,DWORD PTR [rbx]
   140029d0e:	xor    esi,DWORD PTR [rax]
   140029d10:	(bad)  
   140029d11:	(bad)  
   140029d12:	(bad)  
   140029d13:	(bad)  
   140029d14:	(bad)  
   140029d15:	(bad)  
   140029d16:	(bad)  
   140029d17:	(bad)  
   140029d18:	(bad)  
   140029d19:	(bad)  
   140029d1a:	clc    
   140029d1b:	jae    0x140029d95
   140029d1d:	(bad)  
   140029d1e:	(bad)  
   140029d1f:	(bad)  
   140029d20:	(bad)  
   140029d21:	(bad)  
   140029d22:	(bad)  
   140029d23:	(bad)  
   140029d24:	(bad)  
   140029d25:	(bad)  
   140029d26:	inc    DWORD PTR [rdi-0x88]
   140029d2c:	(bad)  
   140029d2d:	(bad)  
   140029d2e:	(bad)  
   140029d2f:	(bad)  
   140029d30:	(bad)  
   140029d31:	(bad)  
   140029d32:	inc    DWORD PTR [rdi+0x77f8ff78]
   140029d38:	ja     0x140029db1
   140029d3a:	ja     0x140029db3
   140029d3c:	(bad)  
   140029d3d:	(bad)  
   140029d3e:	inc    DWORD PTR [rdi+0x7887f878]
   140029d44:	mov    BYTE PTR [rax-0x70877878],cl
   140029d4a:	inc    DWORD PTR [rdi-0x77770088]
   140029d50:	ja     0x140029dc9
   140029d52:	js     0x140029cdc
   140029d54:	mov    bh,bh
   140029d56:	inc    DWORD PTR [rdi-0x77000088]
   140029d5c:	mov    BYTE PTR [rax-0x708778],cl
   140029d62:	inc    DWORD PTR [rdi-0x78000088]
   140029d68:	ja     0x140029de1
   140029d6a:	ja     0x140029cf3
   140029d6c:	jg     0x140029d6d
   140029d6e:	inc    DWORD PTR [rdi-0x7000088]
   140029d74:	mov    BYTE PTR [rax-0x887778],cl
   140029d7a:	inc    DWORD PTR [rdi+0x77ffff78]
   140029d80:	ja     0x140029df9
   140029d82:	ja     0x140029d0c
   140029d84:	ja     0x140029d85
   140029d86:	inc    DWORD PTR [rdi-0x7000081]
   140029d8c:	mov    BYTE PTR [rax-0x800871],cl
   140029d92:	push   rdi
   140029d94:	jg     0x140029d95
   140029d96:	(bad)  
   140029d97:	(bad)  
   140029d98:	clc    
   140029d99:	data16 (bad) 
   140029d9b:	(bad)  
   140029d9c:	(bad)  
   140029d9d:	(bad)  
   140029d9e:	push   rdi
   140029da0:	jg     0x140029da1
   140029da2:	(bad)  
   140029da3:	push   rsi
   140029da5:	xchg   bh,bh
   140029da7:	(bad)  
   140029da8:	(bad)  
   140029da9:	(bad)  
   140029daa:	push   rdi
   140029dac:	jg     0x140029dad
   140029dae:	(bad)  
   140029daf:	push   rsi
   140029db1:	js     0x140029e22
   140029db3:	(bad)  
   140029db4:	(bad)  
   140029db5:	(bad)  
   140029db6:	push   rdi
   140029db8:	jg     0x140029db9
   140029dba:	(bad)  
   140029dbb:	(bad)  
   140029dbc:	clc    
   140029dbd:	outs   dx,DWORD PTR ds:[rsi]
   140029dbe:	xchg   BYTE PTR [rdi-0x8000001],cl
   140029dc4:	jg     0x140029dc5
   140029dc6:	(bad)  
   140029dc7:	(bad)  
   140029dc8:	inc    DWORD PTR [rsi-0x8]
   140029dce:	push   rdi
   140029dd0:	(bad)  
   140029dd1:	(bad)  
   140029dd2:	(bad)  
   140029dd3:	(bad)  
   140029dd4:	(bad)  
   140029dd5:	clc    
   140029dd6:	outs   dx,DWORD PTR ds:[rsi]
   140029dd7:	(bad)  
   140029dd8:	(bad)  
   140029dd9:	(bad)  
   140029dda:	(bad)  
   140029ddb:	clc    
   140029ddc:	(bad)  
   140029ddd:	(bad)  
   140029dde:	(bad)  
   140029ddf:	(bad)  
   140029de0:	(bad)  
   140029de1:	clc    
   140029de2:	(bad)  
   140029de3:	(bad)  
   140029de4:	(bad)  
   140029de5:	(bad)  
   140029de6:	(bad)  
   140029de7:	clc    
   140029de8:	(bad)  
   140029de9:	(bad)  
   140029dea:	(bad)  
   140029deb:	(bad)  
   140029dec:	(bad)  
   140029ded:	(bad)  
   140029dee:	(bad)  
   140029def:	(bad)  
   140029df0:	(bad)  
   140029df1:	(bad)  
   140029df2:	(bad)  
   140029df3:	clc    
   140029df4:	(bad)  
   140029df5:	(bad)  
   140029df6:	(bad)  
   140029df7:	(bad)  
   140029df8:	(bad)  
   140029df9:	(bad)  
   140029dfa:	(bad)  
   140029dfb:	(bad)  
   140029dfc:	(bad)  
   140029dfd:	(bad)  
   140029dfe:	(bad)  
   140029dff:	clc    
   140029e00:	mov    bh,bh
   140029e02:	(bad)  
   140029e03:	(bad)  
   140029e04:	(bad)  
   140029e05:	(bad)  
   140029e06:	(bad)  
   140029e07:	(bad)  
   140029e08:	(bad)  
   140029e09:	(bad)  
   140029e0a:	dec    DWORD PTR [rax-0x777777f8]
   140029e10:	mov    BYTE PTR [rax-0x77777778],cl
   140029e16:	mov    BYTE PTR [rax-0x1],al
   140029e1c:	add    BYTE PTR [rax],0x1
   140029e1f:	inc    DWORD PTR [rax]
   140029e21:	add    BYTE PTR [rax],al
   140029e23:	add    BYTE PTR [rax],0x0
	...
   140029e72:	add    BYTE PTR [rax],al
   140029e74:	add    BYTE PTR [rax],0x1
   140029e77:	add    BYTE PTR [rax],ch
   140029e79:	add    BYTE PTR [rax],al
   140029e7b:	add    BYTE PTR [rax],dl
   140029e7d:	add    BYTE PTR [rax],al
   140029e7f:	add    BYTE PTR [rax],ah
   140029e81:	add    BYTE PTR [rax],al
   140029e83:	add    BYTE PTR [rcx],al
   140029e85:	add    BYTE PTR [rax+rax*1],al
	...
   140029e98:	adc    BYTE PTR [rax],al
	...
   140029ea2:	add    BYTE PTR [rax],al
   140029ea4:	add    BYTE PTR [rax],0x0
   140029ea7:	add    BYTE PTR [rax],al
   140029ea9:	add    BYTE PTR [rax],0x0
   140029eac:	add    BYTE PTR [rax+0x0],0x80
   140029eb3:	add    BYTE PTR [rax+0x8000],al
   140029eb9:	add    BYTE PTR [rax-0x7f7f8000],0x0
   140029ec0:	rol    al,0xc0
   140029ec3:	add    bh,bh
   140029ec5:	add    BYTE PTR [rax],al
   140029ec7:	add    BYTE PTR [rax],al
   140029ec9:	inc    DWORD PTR [rax]
   140029ecb:	add    bh,bh
   140029ecd:	inc    DWORD PTR [rax]
   140029ecf:	add    BYTE PTR [rax],al
   140029ed1:	add    bh,bh
   140029ed3:	add    bh,bh
   140029ed5:	add    bh,bh
   140029ed7:	add    BYTE PTR [rax],al
   140029ed9:	(bad)  
   140029eda:	inc    DWORD PTR [rax]
   140029edc:	(bad)  
   140029edd:	(bad)  
   140029ede:	inc    DWORD PTR [rax]
   140029ee0:	add    esi,DWORD PTR [rbx]
   140029ee2:	xor    esi,DWORD PTR [rbx]
   140029ee4:	xor    esi,DWORD PTR [rbx]
   140029ee6:	xor    esi,DWORD PTR [rax]
   140029ee8:	js     0x140029ee9
   140029eea:	(bad)  
   140029eeb:	(bad)  
   140029eec:	(bad)  
   140029eed:	(bad)  
   140029eee:	inc    DWORD PTR [rdi+0x7777f878]
   140029ef4:	ja     0x140029f6d
   140029ef6:	inc    DWORD PTR [rdi-0x77770788]
   140029efc:	mov    BYTE PTR [rax-0x877801],cl
   140029f02:	div    DWORD PTR [rdi+0x77]
   140029f05:	idiv   DWORD PTR [rdi-0x79]
   140029f08:	js     0x140029f09
   140029f0a:	clc    
   140029f0b:	mov    BYTE PTR [rax+0x78877788],cl
   140029f11:	push   QWORD PTR [rdi+0x77]
   140029f14:	ja     0x140029ea5
   140029f16:	ja     0x140029e9f
   140029f18:	js     0x140029f19
   140029f1a:	mov    BYTE PTR [rsi-0x78800878],al
   140029f20:	jg     0x140029f21
   140029f22:	jmp    FWORD PTR [rdi+0x6f]
   140029f25:	(bad)  
   140029f26:	push   rdi
   140029f28:	jg     0x140029f29
   140029f2a:	jmp    FWORD PTR [rdi+0x66]
   140029f2d:	(bad)  
   140029f2e:	push   rdi
   140029f30:	jg     0x140029f31
   140029f32:	inc    DWORD PTR [rsi-0x8009008]
   140029f38:	jg     0x140029f39
   140029f3a:	(bad)  
   140029f3b:	clc    
   140029f3c:	outs   dx,DWORD PTR ds:[rsi]
   140029f3d:	(bad)  
   140029f3e:	push   rdi
   140029f40:	(bad)  
   140029f41:	(bad)  
   140029f42:	(bad)  
   140029f43:	inc    DWORD PTR [rsi-0x70070001]
   140029f49:	(bad)  
   140029f4a:	(bad)  
   140029f4b:	(bad)  
   140029f4c:	clc    
   140029f4d:	(bad)  
   140029f4e:	(bad)  
   140029f4f:	clc    
   140029f50:	mov    bh,bh
   140029f52:	(bad)  
   140029f53:	(bad)  
   140029f54:	(bad)  
   140029f55:	(bad)  
   140029f56:	dec    DWORD PTR [rax-0x777777f8]
   140029f5c:	mov    BYTE PTR [rax+0x1808088],cl
   140029f62:	(bad)  
   140029f63:	inc    DWORD PTR [rax]
   140029f65:	add    BYTE PTR [rax+0x1],al
	...
   140029f9b:	add    BYTE PTR [rax+0x28000001],al
   140029fa1:	add    BYTE PTR [rax],al
   140029fa3:	add    BYTE PTR [rax],dh
   140029fa5:	add    BYTE PTR [rax],al
   140029fa7:	add    BYTE PTR [rax+0x0],ah
   140029faa:	add    BYTE PTR [rax],al
   140029fac:	add    DWORD PTR [rax],eax
   140029fae:	or     BYTE PTR [rax],al
	...
   140029fc0:	add    BYTE PTR [rcx],al
   140029fc2:	add    BYTE PTR [rax],al
   140029fc4:	add    BYTE PTR [rax],al
   140029fc6:	add    BYTE PTR [rax],al
   140029fc8:	outs   dx,BYTE PTR ds:[rsi]
   140029fc9:	push   rsi
   140029fca:	ss add dl,al
   140029fcd:	scas   al,BYTE PTR es:[rdi]
   140029fce:	xchg   edx,eax
   140029fcf:	add    dl,bl
   140029fd1:	fcmovbe st,st(2)
   140029fd3:	add    BYTE PTR [rdx],cl
   140029fd5:	data16 out 0x0,al
   140029fd8:	jp     0x140029f88
   140029fda:	out    dx,al
   140029fdb:	add    BYTE PTR [rsi-0x11ff9d7e],dl
   140029fe1:	out    dx,al
   140029fe2:	(bad)  
   140029fe3:	add    BYTE PTR [rsi-0x35ff695a],dh
   140029fe9:	mov    dh,0x0
   140029fec:	stos   BYTE PTR es:[rdi],al
   140029fed:	(bad)  
   140029fee:	(bad)  
   140029fef:	add    dl,cl
   140029ff1:	(bad)  
   140029ff3:	add    dl,cl
   140029ff5:	ret    0xb2
   140029ff8:	(bad)  
   140029ff9:	outs   dx,BYTE PTR ds:[rsi]
   140029ffa:	rex.WRX add BYTE PTR [rdx-0x61ff113a],r12b
   14002a001:	mov    dh,BYTE PTR [rdx+0x0]
   14002a004:	xchg   edx,eax
   14002a005:	jp     0x14002a061
   14002a007:	add    BYTE PTR [rdx],bh
   14002a009:	mov    ah,dh
   14002a00b:	add    dl,ah
   14002a00d:	out    0xee,al
   14002a00f:	add    dl,al
   14002a011:	mov    dh,0xaa
   14002a013:	add    BYTE PTR [rdx],ah
   14002a015:	jp     0x140029ffd
   14002a017:	add    dh,ah
   14002a019:	out    0xe2,al
   14002a01b:	add    dl,bh
   14002a01d:	cli    
   14002a01e:	cli    
   14002a01f:	add    BYTE PTR [rsi-0x62],bl
   14002a022:	(bad)  
   14002a023:	add    BYTE PTR [rdx-0x15ff715a],bh
   14002a029:	out    dx,al
   14002a02a:	test   BYTE PTR [rax],0xb2
   14002a02d:	shl    dl,cl
   14002a02f:	add    BYTE PTR [rsi-0x29ff1d42],ah
   14002a035:	ror    dl,cl
   14002a037:	add    BYTE PTR [rsi-0x21ffa98a],cl
   14002a03d:	(bad)  
   14002a03f:	add    BYTE PTR [rsi-0x45ff957e],dl
   14002a045:	scas   al,BYTE PTR es:[rdi]
   14002a046:	sahf   
   14002a047:	add    dl,al
   14002a049:	(bad)  
   14002a04b:	add    dh,cl
   14002a04d:	retf   0xbe
   14002a050:	movabs ds:0xd6008aa2b2007a92,al
   14002a059:	out    0xf2,al
   14002a05b:	add    BYTE PTR [rdx],dh
   14002a05d:	(bad)  
   14002a05e:	out    0x0,al
   14002a060:	xchg   edx,eax
   14002a061:	jle    0x14002a0c5
   14002a063:	add    BYTE PTR [rsi-0x9ff4542],bh
   14002a069:	div    dh
   14002a06b:	add    BYTE PTR [rsi+0x62],dh
   14002a06e:	rex.X add BYTE PTR [rsi+0x52005672],al
   14002a075:	xchg   esi,eax
   14002a076:	(bad)  
   14002a077:	add    dh,al
   14002a079:	mov    esi,0xd6da00ae
   14002a07e:	rol    BYTE PTR [rax],cl
   14002a080:	(bad)  
   14002a081:	jb     0x14002a069
   14002a083:	add    dh,dl
   14002a085:	fsubp  st(6),st
   14002a087:	add    BYTE PTR [rdx+0x6a00eece],ch
   14002a08d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a08e:	(bad)  
   14002a08f:	add    dl,ah
   14002a091:	out    0xf2,al
   14002a093:	add    dl,bl
   14002a095:	fcmovu st,st(2)
   14002a097:	add    dh,al
   14002a099:	ret    0xba
   14002a09c:	xchg   BYTE PTR [rdx+0x52],dh
   14002a09f:	add    BYTE PTR [rdx-0x71ffa182],dl
   14002a0a5:	mov    edx,0x8a9e00ee
   14002a0aa:	outs   dx,BYTE PTR ds:[rsi]
   14002a0ab:	add    dl,cl
   14002a0ad:	mov    dh,0x9e
   14002a0af:	add    BYTE PTR [rsi-0x51ff0d4a],al
   14002a0b5:	sahf   
   14002a0b6:	mov    al,BYTE PTR [rax]
   14002a0b8:	rex.WRX xchg rdx,rax
   14002a0ba:	out    0x0,al
   14002a0bc:	out    dx,al
   14002a0bd:	repnz test BYTE PTR [rax],0xc2
   14002a0c1:	(bad)  
   14002a0c2:	repnz add dh,dl
   14002a0c5:	(bad)  
   14002a0c6:	(bad)  
   14002a0c7:	add    BYTE PTR [rsi+0x72007a92],ah
   14002a0cd:	pop    rsi
   14002a0ce:	add    BYTE PTR ds:[rdx-0x4e],bh
   14002a0d2:	out    dx,al
   14002a0d3:	add    BYTE PTR [rsi-0x49ff997e],dl
   14002a0d9:	stos   BYTE PTR es:[rdi],al
   14002a0da:	xchg   esi,eax
   14002a0db:	add    BYTE PTR [rsi-0x59ff7962],ch
   14002a0e1:	retf   0xf6
   14002a0e4:	xchg   esi,eax
   14002a0e5:	mov    es,WORD PTR [rdx-0x55453e00]
   14002a0eb:	add    BYTE PTR [rdx],ch
   14002a0ed:	jle    0x14002a0d5
   14002a0ef:	add    BYTE PTR [rdx-0x45ff6d56],bh
   14002a0f5:	(bad)  
   14002a0f6:	repnz add dl,ah
   14002a0f9:	loop   0x14002a0d9
   14002a0fb:	add    BYTE PTR [rdx-0x21ff957a],bl
   14002a101:	(bad)  
   14002a102:	repnz add BYTE PTR [rsi],dh
   14002a105:	xchg   dh,ah
   14002a107:	add    BYTE PTR [rdx-0x45ff0d3e],bl
   14002a10d:	scas   al,BYTE PTR es:[rdi]
   14002a10e:	(bad)  
   14002a10f:	add    BYTE PTR [rdx],dl
   14002a111:	outs   dx,BYTE PTR ds:[rsi]
   14002a112:	out    0x0,al
   14002a114:	out    0xee,al
   14002a116:	repnz add dl,dl
   14002a119:	(bad)  
   14002a11a:	mov    BYTE PTR [rax],0x82
   14002a11d:	outs   dx,BYTE PTR ds:[rsi]
   14002a11e:	push   rdx
   14002a11f:	add    BYTE PTR [rsi-0x5dff1136],ah
   14002a125:	mov    ?,WORD PTR [rdx+0x0]
   14002a128:	mov    ?,WORD PTR [rdx+0x5e]
   14002a12b:	add    dl,ch
   14002a12d:	(bad)  
   14002a12e:	out    0x0,al
   14002a130:	(bad)  
   14002a132:	(bad)  
   14002a133:	add    BYTE PTR [rdx-0x41ffa58a],cl
   14002a139:	mov    dl,0xa6
   14002a13b:	add    dl,dl
   14002a13d:	(bad)  
   14002a13e:	ret    0xae00
   14002a141:	movabs ds:0xc6ce00f2e2d6008e,al
   14002a14a:	mov    edx,0xf6be9200
   14002a14f:	add    BYTE PTR [rdx-0x49ff856a],ch
   14002a155:	stos   BYTE PTR es:[rdi],al
   14002a156:	(bad)  
   14002a157:	add    BYTE PTR [rdx+0x5a],dh
   14002a15a:	ds add dl,bl
   14002a15d:	fcmovbe st,st(6)
   14002a15f:	add    BYTE PTR [rdx-0x3dff7966],ch
   14002a165:	(bad)  
   14002a167:	add    BYTE PTR [rdx-0x72],al
   14002a16a:	out    0x0,al
   14002a16c:	out    0xe6,al
   14002a16e:	out    0x0,al
   14002a170:	mov    dl,0xa6
   14002a172:	xchg   edx,eax
   14002a173:	add    dl,ch
   14002a175:	repnz cli 
   14002a177:	add    BYTE PTR [rdx-0x29ff092e],dh
   14002a17d:	ror    dh,cl
   14002a17f:	add    dh,al
   14002a181:	mov    dl,0x9e
   14002a183:	add    dh,cl
   14002a185:	loop   0x14002a17d
   14002a187:	add    dh,cl
   14002a189:	retf   0xc2
   14002a18c:	(bad)  
   14002a18d:	out    0xf6,al
   14002a18f:	add    dl,dh
   14002a191:	idiv   dh
   14002a193:	add    BYTE PTR [rsi+0x6a],bh
   14002a196:	rex.WX add sil,al
   14002a199:	mov    esi,0x761e00b2
   14002a19e:	out    0x0,al
   14002a1a0:	jb     0x14002a14c
   14002a1a2:	(bad)  
   14002a1a3:	add    al,ah
   14002a1a5:	(bad)  
   14002a1a7:	add    BYTE PTR [rsi-0x65ff1142],dl
   14002a1ad:	xchg   BYTE PTR [rsi+0x0],ah
   14002a1b0:	jrcxz  0x14002a194
   14002a1b2:	loop   0x14002a1b4
   14002a1b4:	pushf  
   14002a1b5:	xchg   BYTE PTR [rsi+0x0],ch
   14002a1b8:	jo     0x14002a214
   14002a1ba:	cmp    al,BYTE PTR [rax]
   14002a1bc:	or     eax,0x7800e66a
   14002a1c1:	scas   al,BYTE PTR es:[rdi]
   14002a1c2:	repnz add dh,ch
   14002a1c5:	out    dx,al
   14002a1c6:	out    dx,al
   14002a1c7:	add    bh,al
   14002a1c9:	(bad)  
   14002a1cb:	add    BYTE PTR [rsi+0x6200eabe],dl
   14002a1d1:	(bad)  
   14002a1d2:	out    0x0,al
   14002a1d4:	ret    0xa6b6
   14002a1d7:	add    dh,al
   14002a1d9:	mov    dl,0x9a
   14002a1db:	add    dl,dh
   14002a1dd:	repnz repnz add dl,ch
   14002a1e1:	(bad)  
   14002a1e2:	(bad)  
   14002a1e3:	add    dl,cl
   14002a1e5:	fdivp  st(2),st
   14002a1e7:	add    dh,bl
   14002a1e9:	loop   0x14002a1d5
   14002a1eb:	add    dh,bh
   14002a1ed:	(bad)  
   14002a1ee:	inc    BYTE PTR [rax]
   14002a1f0:	jp     0x14002a258
   14002a1f2:	rex.RX add BYTE PTR [rdx-0x2dffa17e],r12b
   14002a1f9:	retf   0xc6
   14002a1fc:	push   rsi
   14002a1fd:	(bad)  
   14002a1fe:	(bad)  
   14002a1ff:	add    bl,ah
   14002a201:	(bad)  
   14002a202:	repnz add BYTE PTR [rbx-0x41ff1132],dh
   14002a209:	mov    dh,0xae
   14002a20b:	add    BYTE PTR [rdx-0x62],bl
   14002a20e:	out    dx,al
   14002a20f:	add    ah,ah
   14002a211:	out    dx,al
   14002a212:	cli    
   14002a213:	add    BYTE PTR [rdx-0x11ff816e],bl
   14002a219:	idiv   dl
   14002a21b:	add    dh,dl
   14002a21d:	(bad)  
   14002a21e:	(bad)  
   14002a21f:	add    BYTE PTR [rsi-0x4e],bh
   14002a222:	repnz add BYTE PTR [rdi-0x35ff5d4e],bh
   14002a229:	ret    0xb6
   14002a22c:	sahf   
   14002a22d:	(bad)  
   14002a22e:	repnz add BYTE PTR [rsi],bh
   14002a231:	mov    ch,dl
   14002a233:	add    BYTE PTR [rbx],dh
   14002a235:	(bad)  
   14002a236:	(bad)  
   14002a237:	add    BYTE PTR [rsi+0x6a00667e],dl
   14002a23d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a23e:	out    dx,al
   14002a23f:	add    BYTE PTR [rdx+0x4b00f2ba],cl
   14002a245:	xchg   edx,eax
   14002a246:	(bad)  
   14002a247:	add    dh,ch
   14002a249:	repnz cli 
   14002a24b:	add    ch,al
   14002a24d:	mov    edx,0x7e2a00ae
   14002a252:	(bad)  
   14002a253:	add    BYTE PTR [rdi],dh
   14002a255:	xchg   dl,ch
   14002a257:	add    dh,dl
   14002a259:	(bad)  
   14002a25a:	retf   0xaa00
   14002a25d:	retf   0xf2
   14002a260:	movabs ds:0xa900eea26600768e,al
   14002a269:	xchg   esi,eax
   14002a26a:	jle    0x14002a26c
   14002a26c:	rex.RX mov gs,edx
   14002a26f:	add    dh,ah
   14002a271:	(bad)  
   14002a272:	out    dx,al
   14002a273:	add    dl,bl
   14002a275:	loop   0x14002a265
   14002a277:	add    dl,al
   14002a279:	scas   al,BYTE PTR es:[rdi]
   14002a27a:	xchg   esi,eax
   14002a27b:	add    BYTE PTR [rdx+0x2a004e6e],cl
   14002a281:	jp     0x14002a269
   14002a283:	add    dl,bh
   14002a285:	cli    
   14002a286:	inc    BYTE PTR [rax]
   14002a288:	fsubrp st(6),st
   14002a28a:	repnz add BYTE PTR [rsi],bl
   14002a28d:	jb     0x14002a275
   14002a28f:	add    dh,cl
   14002a291:	ret    0xba
   14002a294:	mov    ?,WORD PTR [rdx+0x52]
   14002a297:	add    BYTE PTR [rdx-0x35ffa182],bl
   14002a29d:	mov    dh,0xa2
   14002a29f:	add    dh,bl
   14002a2a1:	(bad)  
   14002a2a2:	(bad)  
   14002a2a3:	add    BYTE PTR [rsi-0x7dff816e],ah
   14002a2a9:	mov    dl,0xee
   14002a2ab:	add    BYTE PTR [rsi-0x45ff6956],bh
   14002a2b1:	(bad)  
   14002a2b2:	test   BYTE PTR [rax],0xde
   14002a2b5:	(bad)  
   14002a2b6:	test   BYTE PTR [rax],0xc2
   14002a2b9:	scas   al,BYTE PTR es:[rdi]
   14002a2ba:	(bad)  
   14002a2bb:	add    BYTE PTR [rdx-0x69ffad92],cl
   14002a2c1:	jp     0x14002a321
   14002a2c3:	add    BYTE PTR [rdx-0x49ffa58a],dl
   14002a2c9:	movabs ds:0xa6ba00bec6ce008e,al
   14002a2d2:	xchg   edx,eax
   14002a2d3:	add    BYTE PTR [rsi+0x6a],bh
   14002a2d6:	rex.WRX add sil,r9b
   14002a2d9:	mov    esi,0xbe9600b2
   14002a2de:	repnz add BYTE PTR [rdx-0x9ff997a],ah
   14002a2e5:	idiv   dl
   14002a2e7:	add    dh,bl
   14002a2e9:	fcmovbe st,st(2)
   14002a2eb:	add    BYTE PTR [rsi-0x31ff7d66],ch
   14002a2f1:	ret    0xb2
   14002a2f4:	xchg   BYTE PTR [rsi+0x4e],ch
   14002a2f7:	add    BYTE PTR [rdx-0x69ff8d76],ah
   14002a2fd:	jp     0x14002a359
   14002a2ff:	add    dh,al
   14002a301:	mov    dh,0xaa
   14002a303:	add    BYTE PTR [rsi],ah
   14002a305:	jp     0x14002a2ed
   14002a307:	add    dl,ch
   14002a309:	out    0xe2,al
   14002a30b:	add    BYTE PTR [rdx-0x62],ah
   14002a30e:	(bad)  
   14002a30f:	add    BYTE PTR [rsi-0x25ff0d2e],dh
   14002a315:	ror    dl,cl
   14002a317:	add    BYTE PTR [rdx-0x1dffa98a],dl
   14002a31d:	(bad)  
   14002a31f:	add    BYTE PTR [rdx-0x2dff957e],bl
   14002a325:	retf   0xbe
   14002a328:	mov    dh,0xa2
   14002a32a:	mov    al,BYTE PTR [rax]
   14002a32c:	xchg   esi,eax
   14002a32d:	jle    0x14002a391
   14002a32f:	add    BYTE PTR [rdx-0x21ffa98e],cl
   14002a335:	(bad)  
   14002a336:	rol    BYTE PTR [rax],cl
   14002a338:	sbb    dh,BYTE PTR [rdx-0x1a]
   14002a33b:	add    BYTE PTR [rsi-0x5a],ch
   14002a33e:	(bad)  
   14002a33f:	add    dh,bl
   14002a341:	fcmovu st,st(2)
   14002a343:	add    dl,cl
   14002a345:	ret    0xba
   14002a348:	mov    dh,BYTE PTR [rdx+0x52]
   14002a34b:	add    BYTE PTR [rsi-0x5dffa182],dl
   14002a351:	mov    ch,BYTE PTR [rsi+0x0]
   14002a354:	repnz repnz test BYTE PTR [rax],0xda
   14002a359:	(bad)  
   14002a35a:	(bad)  
   14002a35b:	add    BYTE PTR [rsi+0x5e],dh
   14002a35e:	add    BYTE PTR ds:[rdx-0x45ff997e],bl
   14002a365:	stos   BYTE PTR es:[rdi],al
   14002a366:	xchg   esi,eax
   14002a367:	add    BYTE PTR [rdx+0x2e00869e],dh
   14002a36d:	jle    0x14002a355
   14002a36f:	add    BYTE PTR [rsi-0x19ff6d56],bh
   14002a375:	loop   0x14002a355
   14002a377:	add    BYTE PTR [rsi+0x16006a86],bl
   14002a37d:	outs   dx,BYTE PTR ds:[rsi]
   14002a37e:	out    0x0,al
   14002a380:	(bad)  
   14002a381:	(bad)  
   14002a382:	mov    BYTE PTR [rax],0xaa
   14002a385:	retf   0xee
   14002a388:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a389:	mov    ?,WORD PTR [rdx+0x0]
   14002a38c:	xchg   edx,eax
   14002a38d:	jp     0x14002a3ed
   14002a38f:	add    BYTE PTR [rsi-0x4dffa58a],cl
   14002a395:	movabs ds:0xaaba00f2e2da008e,al
   14002a39e:	(bad)  
   14002a39f:	add    dh,bl
   14002a3a1:	fcmovbe st,st(6)
   14002a3a3:	add    BYTE PTR [rsi-0x15ff7966],ch
   14002a3a9:	out    0xe6,al
   14002a3ab:	add    BYTE PTR [rsi-0x49ff6d5a],dh
   14002a3b1:	shl    dh,cl
   14002a3b3:	add    dl,bl
   14002a3b5:	ror    dh,cl
   14002a3b7:	add    dl,dl
   14002a3b9:	loop   0x14002a3b1
   14002a3bb:	add    dl,dl
   14002a3bd:	retf   0xc2
   14002a3c0:	(bad)  
   14002a3c2:	test   BYTE PTR [rax],0x0
   14002a3c5:	add    BYTE PTR [rax],al
   14002a3c7:	add    bh,bh
   14002a3c9:	(bad)  
   14002a3ca:	inc    DWORD PTR [rax]
	...
   14002a3f4:	add    bh,bh
   14002a3f6:	(bad)  
   14002a3f7:	(bad)  
   14002a3f8:	(bad)  
   14002a3f9:	(bad)  
   14002a3fa:	jl     0x14002a443
   14002a3fc:	imul   eax,DWORD PTR [rsi-0x7979797a],0x86868686
   14002a406:	xchg   BYTE PTR [rsi-0x7979797a],al
   14002a40c:	xchg   BYTE PTR [rsi-0x7979797a],al
   14002a412:	xchg   BYTE PTR [rsi-0x7979797a],al
   14002a418:	xchg   BYTE PTR [rsi-0x7979797a],al
   14002a41e:	xchg   BYTE PTR [rsi+0x69868686],al
   14002a424:	rex.RXB jl 0x14002a426
   14002a427:	(bad)  
   14002a428:	(bad)  
   14002a429:	jl     0x14002a45f
   14002a42b:	jg     0x14002a4ac
   14002a42d:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a433:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a439:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a43f:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a445:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a44b:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a451:	test   DWORD PTR [rbp+0x7c347f7f],eax
   14002a457:	(bad)  
   14002a458:	call   QWORD PTR [rbx-0x7a7a807a]
   14002a45e:	jg     0x14002a4df
   14002a460:	jg     0x14002a4e1
   14002a462:	jg     0x14002a4e3
   14002a464:	jg     0x14002a4e5
   14002a466:	jg     0x14002a4e7
   14002a468:	jg     0x14002a4e9
   14002a46a:	jg     0x14002a4eb
   14002a46c:	jg     0x14002a4ed
   14002a46e:	jg     0x14002a4ef
   14002a470:	jg     0x14002a4f1
   14002a472:	jg     0x14002a4f3
   14002a474:	jg     0x14002a4f5
   14002a476:	jg     0x14002a4f7
   14002a478:	jg     0x14002a4f9
   14002a47a:	jg     0x14002a4fb
   14002a47c:	jg     0x14002a4fd
   14002a47e:	jg     0x14002a4ff
   14002a480:	jg     0x14002a501
   14002a482:	jg     0x14002a409
   14002a484:	jg     0x14002a40c
   14002a486:	xchg   ebx,eax
   14002a487:	inc    DWORD PTR [rcx+0x8]
   14002a48a:	jg     0x14002a50b
   14002a48c:	jg     0x14002a50d
   14002a48e:	jg     0x14002a50f
   14002a490:	jg     0x14002a511
   14002a492:	jg     0x14002a513
   14002a494:	jg     0x14002a515
   14002a496:	jg     0x14002a517
   14002a498:	jg     0x14002a519
   14002a49a:	jg     0x14002a51b
   14002a49c:	jg     0x14002a51d
   14002a49e:	jg     0x14002a51f
   14002a4a0:	jg     0x14002a521
   14002a4a2:	jg     0x14002a523
   14002a4a4:	jg     0x14002a525
   14002a4a6:	jg     0x14002a527
   14002a4a8:	jg     0x14002a529
   14002a4aa:	jg     0x14002a52b
   14002a4ac:	jg     0x14002a52d
   14002a4ae:	jg     0x14002a52f
   14002a4b0:	jg     0x14002a531
   14002a4b2:	jg     0x14002a533
   14002a4b4:	jg     0x14002a535
   14002a4b6:	or     BYTE PTR [rcx+0x41],al
   14002a4b9:	sbb    eax,0x7f7f7f7f
   14002a4be:	xchg   BYTE PTR [rsi+0x4c698686],al
   14002a4c4:	in     al,0xb
   14002a4c6:	xchg   edi,eax
   14002a4c7:	rex.RB (bad) 
   14002a4c9:	cmp    BYTE PTR [rcx+riz*8-0x1e1e1e1f],dh
   14002a4d0:	loope  0x14002a4b3
   14002a4d2:	loope  0x14002a4ba
   14002a4d4:	push   rdi
   14002a4d5:	leave  
   14002a4d6:	out    0x12,eax
   14002a4d8:	rcl    DWORD PTR [rcx+rbx*2],cl
   14002a4db:	xchg   BYTE PTR [rsi-0x7979797a],al
   14002a4e1:	xchg   BYTE PTR [rsi+0x1d7f7f7f],al
   14002a4e7:	sub    DWORD PTR [rip+0xffffffff86868686],ebx        # 0xc6892b74
   14002a4ee:	xchg   BYTE PTR [rsi+0x997e44c],al
   14002a4f4:	push   rdi
   14002a4f5:	in     al,dx
   14002a4f6:	out    0xbe,al
   14002a4f8:	mov    esi,0xe1e1e1be
   14002a4fd:	loope  0x14002a4e0
   14002a4ff:	loope  0x14002a4e2
   14002a501:	loope  0x14002a4c1
   14002a503:	mov    esi,0x79e10fbe
   14002a508:	push   rdi
   14002a509:	and    ecx,DWORD PTR [rbx]
   14002a50b:	(bad)  
   14002a50c:	pop    rcx
   14002a50d:	xchg   BYTE PTR [rsi-0x7979797a],al
   14002a513:	xchg   BYTE PTR [rsi+0x29291d86],al
   14002a519:	xor    eax,DWORD PTR [rsi+0x59868686]
   14002a51f:	pop    rcx
   14002a520:	(bad)  
   14002a521:	nop    DWORD PTR [rcx+rbx*8]
   14002a525:	in     al,dx
   14002a526:	or     DWORD PTR [rdi+0x2d1b742c],edx
   14002a52c:	sub    eax,0x2d2d2d2d
   14002a531:	sbb    esp,DWORD PTR [rax+0x74]
   14002a534:	movabs eax,ds:0x6057e1d94d0923f5
   14002a53d:	adc    al,0x59
   14002a53f:	pop    rcx
   14002a540:	pop    rcx
   14002a541:	pop    rcx
   14002a542:	pop    rcx
   14002a543:	xchg   BYTE PTR [rsi-0x75d6cc7a],al
   14002a549:	xor    ebx,DWORD PTR [rcx+0x59]
   14002a54c:	pop    rcx
   14002a54d:	pop    rcx
   14002a54e:	imul   ebp,DWORD PTR [rcx+0x40],0x6005b3be
   14002a555:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a55c:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a563:	imul   ebp,DWORD PTR [rcx+0x69],0xde146969
   14002a56a:	cwde   
   14002a56b:	test   al,0x4d
   14002a56d:	push   rsp
   14002a56e:	imul   ebp,DWORD PTR [rcx+0x69],0x59596969
   14002a575:	pop    rcx
   14002a576:	xor    ecx,DWORD PTR [rdx+0x6969338a]
   14002a57c:	imul   ebp,DWORD PTR [rcx+0x69],0x40984c69
   14002a583:	rex.WRB stc 
   14002a585:	rcr    DWORD PTR [rbx],0x7a
   14002a588:	imul   edi,DWORD PTR [rdx+0x2d],0xb26021a4
   14002a58f:	(bad)  
   14002a590:	rcl    DWORD PTR [rbp+rbp*2+0x77],0x14
   14002a595:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a59c:	xchg   edi,eax
   14002a59d:	cwde   
   14002a59e:	jp     0x14002a609
   14002a5a0:	imul   ebp,DWORD PTR [rcx+0x69],0x33696969
   14002a5a7:	mov    dh,BYTE PTR [rbx+0x33]
   14002a5aa:	imul   ebp,DWORD PTR [rcx+0x69],0x7a7a7a69
   14002a5b1:	jp     0x14002a62d
   14002a5b3:	sbb    eax,DWORD PTR [rsi+riz*2+0x1f]
   14002a5b7:	faddp  st(1),st
   14002a5b9:	rex.R (bad) 
   14002a5bb:	mov    edi,0xadadadad
   14002a5c0:	lods   eax,DWORD PTR ds:[rsi]
   14002a5c1:	sbb    al,0x43
   14002a5c3:	test   al,0x1f
   14002a5c5:	push   rsp
   14002a5c6:	jp     0x14002a642
   14002a5c8:	jp     0x14002a644
   14002a5ca:	jp     0x14002a646
   14002a5cc:	add    bh,BYTE PTR [rdx+0x7a]
   14002a5cf:	jp     0x14002a64b
   14002a5d1:	jp     0x14002a64d
   14002a5d3:	imul   ebp,DWORD PTR [rcx+0x69],0x95737333
   14002a5da:	jp     0x14002a656
   14002a5dc:	jp     0x14002a658
   14002a5de:	jp     0x14002a65a
   14002a5e0:	jp     0x14002a65c
   14002a5e2:	jp     0x14002a65e
   14002a5e4:	jp     0x14002a660
   14002a5e6:	jp     0x14002a63c
   14002a5e8:	shrd   DWORD PTR [rbp-0x59c72641],edi,cl
   14002a5ef:	(bad)  
   14002a5f0:	es mov edi,0xa1d9adad
   14002a5f6:	jp     0x14002a672
   14002a5f8:	jp     0x14002a674
   14002a5fa:	jp     0x14002a676
   14002a5fc:	jp     0x14002a678
   14002a5fe:	jp     0x14002a67a
   14002a600:	jp     0x14002a67c
   14002a602:	jp     0x14002a67e
   14002a604:	jp     0x14002a680
   14002a606:	xchg   ebp,eax
   14002a607:	jae    0x14002a615
   14002a609:	xchg   ebp,eax
   14002a60a:	jp     0x14002a686
   14002a60c:	jp     0x14002a688
   14002a60e:	jp     0x14002a68a
   14002a610:	jp     0x14002a68c
   14002a612:	jp     0x14002a68e
   14002a614:	jp     0x14002a690
   14002a616:	jp     0x14002a678
   14002a618:	pushf  
   14002a619:	(bad)  
   14002a61a:	sbb    DWORD PTR [rax+0x2df66dfd],0x70
   14002a621:	cwde   
   14002a622:	xchg   edi,eax
   14002a623:	pop    rsp
   14002a624:	sbb    edi,DWORD PTR [rdx+0x7a]
   14002a627:	jp     0x14002a6a3
   14002a629:	jp     0x14002a6a5
   14002a62b:	jp     0x14002a6a7
   14002a62d:	jp     0x14002a6a9
   14002a62f:	jp     0x14002a6ab
   14002a631:	jp     0x14002a6ad
   14002a633:	jp     0x14002a6af
   14002a635:	jp     0x14002a5cc
   14002a637:	or     al,0x55
   14002a639:	xchg   ebp,eax
   14002a63a:	jp     0x14002a6b6
   14002a63c:	jp     0x14002a6b8
   14002a63e:	jp     0x14002a6ba
   14002a640:	jp     0x14002a6bc
   14002a642:	jp     0x14002a6be
   14002a644:	jp     0x14002a6c0
   14002a646:	jp     0x14002a6c2
   14002a648:	push   rsp
   14002a649:	sbb    edi,DWORD PTR [rdx+0x7a]
   14002a64c:	jp     0x14002a6c8
   14002a64e:	jp     0x14002a6ca
   14002a650:	jp     0x14002a6cc
   14002a652:	jp     0x14002a6ce
   14002a654:	jp     0x14002a6d0
   14002a656:	jp     0x14002a675
   14002a658:	jp     0x14002a6d4
   14002a65a:	jp     0x14002a6d6
   14002a65c:	jp     0x14002a6d8
   14002a65e:	jp     0x14002a6da
   14002a660:	jp     0x14002a6dc
   14002a662:	jp     0x14002a6de
   14002a664:	jp     0x14002a6e0
   14002a666:	xchg   ebp,eax
   14002a667:	push   rbp
   14002a668:	xor    eax,0x7a7a7a95
   14002a66d:	jp     0x14002a6d8
   14002a66f:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a676:	imul   ecx,DWORD PTR [rbx+rbx*1-0x68],0x66093b1f
   14002a67e:	or     WORD PTR [rbx],di
   14002a681:	movsxd edx,DWORD PTR [rdx]
   14002a683:	cwde   
   14002a684:	jo     0x14002a6c5
   14002a686:	ja     0x14002a67e
   14002a688:	cwde   
   14002a689:	cwde   
   14002a68a:	fisubr WORD PTR [rcx+0x69]
   14002a68d:	imul   ebp,DWORD PTR [rcx+0x69],0x7a696969
   14002a694:	jp     0x14002a710
   14002a696:	xchg   ebp,eax
   14002a697:	xor    eax,0x6969952a
   14002a69c:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a6a3:	imul   ebp,DWORD PTR [rcx+0x69],0xcb363b70
   14002a6aa:	retf   
   14002a6ab:	retf   
   14002a6ac:	sbb    al,0x1c
   14002a6ae:	sbb    al,0x1c
   14002a6b0:	lods   eax,DWORD PTR ds:[rsi]
   14002a6b1:	retf   
   14002a6b2:	retf   
   14002a6b3:	retf   
   14002a6b4:	repnz mov bh,0x1b
   14002a6b7:	jp     0x14002a72d
   14002a6b9:	cmp    esi,DWORD PTR [rdi+0x69696912]
   14002a6bf:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a6c6:	xchg   ebp,eax
   14002a6c7:	sub    bl,BYTE PTR [rbx+0x33]
   14002a6ca:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a6d1:	imul   ebp,DWORD PTR [rcx+0x69],0xcb636969
   14002a6d8:	fnstcw WORD PTR [rbx]
   14002a6da:	cmc    
   14002a6db:	pop    rsp
   14002a6dc:	cwde   
   14002a6dd:	cwde   
   14002a6de:	cwde   
   14002a6df:	cwde   
   14002a6e0:	rex.W (bad) 
   14002a6e2:	(bad)  
   14002a6e3:	cmp    esp,DWORD PTR [rdx]
   14002a6e5:	movsxd esi,DWORD PTR [rdi+0x69]
   14002a6e8:	adc    al,0x1b
   14002a6ea:	cmp    esp,eax
   14002a6ec:	cmp    esi,DWORD PTR [rdi+0x69]
   14002a6ef:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a6f6:	xor    ebx,DWORD PTR [rbx+0x5b]
   14002a6f9:	xor    ebp,DWORD PTR [rcx+0x69]
   14002a6fc:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a703:	imul   ebp,DWORD PTR [rcx+0x69],0x6951f32d
   14002a70a:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a711:	imul   ebp,DWORD PTR [rcx+0x69],0x6969144c
   14002a718:	imul   ebp,DWORD PTR [rcx+0x7a],0x1b66cb6a
   14002a71f:	imul   ebp,DWORD PTR [rcx+0x69],0x69696969
   14002a726:	xor    ebx,DWORD PTR [rbx+0x58]
   14002a729:	xor    ebp,DWORD PTR [rcx+0x69]
   14002a72c:	imul   ebp,DWORD PTR [rcx+0x59],0x59595959
   14002a733:	pop    rcx
   14002a734:	pop    rcx
   14002a735:	pop    rcx
   14002a736:	pop    rcx
   14002a737:	jp     0x14002a75a
   14002a739:	push   rsp
   14002a73a:	push   rsp
   14002a73b:	push   rsp
   14002a73c:	push   rsp
   14002a73d:	push   rsp
   14002a73e:	push   rsp
   14002a73f:	mov    WORD PTR [rbx],ds
   14002a741:	adc    al,0x59
   14002a743:	pop    rcx
   14002a744:	pop    rcx
   14002a745:	pop    rcx
   14002a746:	pop    rcx
   14002a747:	pop    rcx
   14002a748:	pop    rcx
   14002a749:	pop    rcx
   14002a74a:	pop    rcx
   14002a74b:	adc    al,0x22
   14002a74d:	lods   eax,DWORD PTR ds:[rsi]
   14002a74e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a74f:	pop    rcx
   14002a750:	pop    rcx
   14002a751:	pop    rcx
   14002a752:	pop    rcx
   14002a753:	imul   ebp,DWORD PTR [rcx+0x69],0x33265833
   14002a75a:	pop    rcx
   14002a75b:	pop    rcx
   14002a75c:	pop    rcx
   14002a75d:	pop    rcx
   14002a75e:	xchg   BYTE PTR [rsi+0x2868686],al
   14002a764:	adc    dh,bl
   14002a766:	(bad)  
   14002a767:	rex.WRB (bad) 
   14002a769:	(bad)  
   14002a76b:	(bad)  
   14002a76d:	fstp   DWORD PTR [rcx+rbx*8-0x48843975]
   14002a774:	repz pop rsp
   14002a776:	std    
   14002a777:	rex.WR xchg BYTE PTR [rsi-0x1f67797a],r8b
   14002a77e:	lods   eax,DWORD PTR ds:[rsi]
   14002a77f:	xchg   BYTE PTR [rsi+0x59598686],al
   14002a785:	pop    rcx
   14002a786:	xor    esp,DWORD PTR [rsi]
   14002a788:	xor    eax,DWORD PTR es:[rsi-0x7979797a]
   14002a78f:	xchg   BYTE PTR [rsi-0x1f95797a],al
   14002a795:	lods   eax,DWORD PTR ds:[rsi]
   14002a796:	(bad)  
   14002a798:	cwde   
   14002a799:	(bad)  
   14002a79a:	cwde   
   14002a79b:	or     ecx,DWORD PTR [rbx]
   14002a79d:	or     ecx,edx
   14002a79f:	(bad)  
   14002a7a0:	(bad)  
   14002a7a1:	nop
   14002a7a2:	add    DWORD PTR [rdx+0x3b],ecx
   14002a7a5:	and    ah,BYTE PTR [rsi-0x7979eb7d]
   14002a7ab:	xchg   BYTE PTR [rcx-0x79795243],ah
   14002a7b1:	xchg   BYTE PTR [rsi+0x33868686],al
   14002a7b7:	es rex.XB sbb eax,0x86868686
   14002a7be:	xchg   BYTE PTR [rsi+0x1b868686],al
   14002a7c4:	and    ecx,DWORD PTR [rbp+0x4d]
   14002a7c7:	rex.R pop rbp
   14002a7c9:	rex.WR xchg BYTE PTR [rsi-0x7979797a],r8b
   14002a7d0:	or     bl,BYTE PTR [rdx]
   14002a7d2:	imul   edx,DWORD PTR [rbx+rbp*8],0xf6c80277
   14002a7d9:	in     al,0x2d
   14002a7db:	cwde   
   14002a7dc:	icebp  
   14002a7dd:	sbb    al,0xf3
   14002a7df:	xchg   BYTE PTR [rsi-0x7979797a],al
   14002a7e5:	xchg   BYTE PTR [rip+0xffffffff861d1e43],bl        # 0xc61fc62e
   14002a7eb:	xchg   BYTE PTR [rsi+0x7f7f7f86],al
   14002a7f1:	jg     0x14002a872
   14002a7f3:	jg     0x14002a85e
   14002a7f5:	ja     0x14002a78f
   14002a7f7:	(bad)  
   14002a7f8:	push   rcx
   14002a7f9:	je     0x14002a7df
   14002a7fb:	jg     0x14002a87c
   14002a7fd:	jg     0x14002a787
   14002a7ff:	(bad)  
   14002a800:	adc    DWORD PTR [rbp+0x7f7f1182],ebx
   14002a806:	jg     0x14002a887
   14002a808:	jp     0x14002a7a2
   14002a80a:	stc    
   14002a80b:	(bad)  
   14002a80c:	rex cwde 
   14002a80e:	adc    al,0x7f
   14002a810:	jg     0x14002a891
   14002a812:	jg     0x14002a79a
   14002a814:	xchg   BYTE PTR [rsi+0x1d4d1e1d],al
   14002a81a:	(bad)  
   14002a81b:	jg     0x14002a89c
   14002a81d:	jg     0x14002a89e
   14002a81f:	jg     0x14002a8a0
   14002a821:	jg     0x14002a8a2
   14002a823:	jg     0x14002a8a4
   14002a825:	jg     0x14002a82d
   14002a827:	pop    rcx
   14002a828:	adc    al,0x77
   14002a82a:	rex.WR jg 0x14002a8ac
   14002a82d:	(bad)  
   14002a82e:	xor    DWORD PTR [rdi+0x7e03817f],ecx
   14002a834:	jg     0x14002a8b5
   14002a836:	jg     0x14002a8b7
   14002a838:	jg     0x14002a84e
   14002a83a:	sbb    ebx,DWORD PTR [rbx]
   14002a83c:	adc    al,0x7f
   14002a83e:	jg     0x14002a8bf
   14002a840:	jg     0x14002a8c1
   14002a842:	jg     0x14002a8c3
   14002a844:	jg     0x14002a84c
   14002a846:	sbb    eax,0x7f1d0e4d
   14002a84b:	jg     0x14002a8cc
   14002a84d:	jg     0x14002a8ce
   14002a84f:	jg     0x14002a8d0
   14002a851:	jg     0x14002a8d2
   14002a853:	jg     0x14002a8d4
   14002a855:	jg     0x14002a8d6
   14002a857:	jg     0x14002a8d8
   14002a859:	jg     0x14002a8da
   14002a85b:	jg     0x14002a808
   14002a85d:	sub    esi,DWORD PTR [rsi+0x7f]
   14002a860:	jg     0x14002a8da
   14002a862:	add    esp,DWORD PTR [rip+0x7f7f7f80]        # 0x1bf8227e8
   14002a868:	jg     0x14002a8e9
   14002a86a:	jg     0x14002a8eb
   14002a86c:	jg     0x14002a8ed
   14002a86e:	jg     0x14002a8ef
   14002a870:	jg     0x14002a8f1
   14002a872:	jg     0x14002a8f3
   14002a874:	jg     0x14002a8f5
   14002a876:	sbb    eax,0x7f7a570e
   14002a87b:	jg     0x14002a8fc
   14002a87d:	jg     0x14002a8fe
   14002a87f:	jg     0x14002a900
   14002a881:	jg     0x14002a902
   14002a883:	jg     0x14002a904
   14002a885:	jg     0x14002a906
   14002a887:	jg     0x14002a908
   14002a889:	jg     0x14002a90a
   14002a88b:	stos   DWORD PTR es:[rdi],eax
   14002a88c:	cmp    al,0x68
   14002a88e:	mov    al,0x7f
   14002a890:	or     BYTE PTR [rdi+0x3],0xcf
   14002a894:	(bad)  
   14002a895:	jg     0x14002a916
   14002a897:	jg     0x14002a918
   14002a899:	jg     0x14002a91a
   14002a89b:	jg     0x14002a91c
   14002a89d:	jg     0x14002a91e
   14002a89f:	jg     0x14002a920
   14002a8a1:	jg     0x14002a922
   14002a8a3:	jg     0x14002a924
   14002a8a5:	jg     0x14002a921
   14002a8a7:	push   rdi
   14002a8a8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a8a9:	jp     0x14002a92a
   14002a8ab:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a8b1:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a8b7:	test   DWORD PTR [rbp-0x23e9ac7b],eax
   14002a8bd:	pop    QWORD PTR [rbp+0x7d7d1611]
   14002a8c3:	adc    BYTE PTR [rax-0x7a7a7a7b],al
   14002a8c9:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a8cf:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a8d5:	jg     0x14002a951
   14002a8d7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a8d8:	rex jp 0x14002a860
   14002a8db:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a8e1:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a8e7:	test   DWORD PTR [rbp+0x317d0d85],eax
   14002a8ed:	test   DWORD PTR [rbp+0x2e7d52ef],eax
   14002a8f3:	(bad)  
   14002a8f4:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a8fa:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a900:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a906:	jp     0x14002a948
   14002a908:	rex jp 0x14002a890
   14002a90b:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a911:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a917:	test   DWORD PTR [rbp+0x3075e98e],eax
   14002a91d:	test   DWORD PTR [rsi-0x72adada6],ecx
   14002a923:	push   rbx
   14002a924:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a92a:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a930:	test   DWORD PTR [rbp-0x7a7a7a7b],eax
   14002a936:	jp     0x14002a978
   14002a938:	test   al,0x69
   14002a93a:	test   DWORD PTR [rax],ebp
   14002a93c:	sub    BYTE PTR [rax],ch
   14002a93e:	sub    BYTE PTR [rax],ch
   14002a940:	sub    BYTE PTR [rax],ch
   14002a942:	sub    BYTE PTR [rax],ch
   14002a944:	sub    BYTE PTR [rax],ch
   14002a946:	sub    BYTE PTR [rax],ch
   14002a948:	sub    BYTE PTR [rbx-0x13],cl
   14002a94b:	jmp    0x16b50d18e
   14002a950:	push   rdx
   14002a951:	rex.WB shr BYTE PTR [r8],cl
   14002a954:	sub    BYTE PTR [rax],ch
   14002a956:	sub    BYTE PTR [rax],ch
   14002a958:	sub    BYTE PTR [rax],ch
   14002a95a:	sub    BYTE PTR [rax],ch
   14002a95c:	sub    BYTE PTR [rax],ch
   14002a95e:	sub    BYTE PTR [rax],ch
   14002a960:	sub    BYTE PTR [rax],ch
   14002a962:	sub    BYTE PTR [rax],ch
   14002a964:	sub    BYTE PTR [rbp+0x6909a869],al
   14002a96a:	test   DWORD PTR [rax],ebp
   14002a96c:	sub    BYTE PTR [rax],ch
   14002a96e:	sub    BYTE PTR [rax],ch
   14002a970:	sub    BYTE PTR [rax],ch
   14002a972:	sub    BYTE PTR [rax],ch
   14002a974:	sub    BYTE PTR [rax],ch
   14002a976:	sub    BYTE PTR [rax],ch
   14002a978:	sub    BYTE PTR [rsi+0x2e],dl
   14002a97b:	iret   
   14002a97c:	out    dx,eax
   14002a97d:	sub    BYTE PTR [rsi+0x289fed8d],cl
   14002a983:	sub    BYTE PTR [rax],ch
   14002a985:	sub    BYTE PTR [rax],ch
   14002a987:	sub    BYTE PTR [rax],ch
   14002a989:	sub    BYTE PTR [rax],ch
   14002a98b:	sub    BYTE PTR [rax],ch
   14002a98d:	sub    BYTE PTR [rax],ch
   14002a98f:	sub    BYTE PTR [rax],ch
   14002a991:	sub    BYTE PTR [rax],ch
   14002a993:	sub    BYTE PTR [rax],ch
   14002a995:	test   DWORD PTR [rcx+0x9],ebp
   14002a998:	leave  
   14002a999:	imul   ebp,DWORD PTR [rax],0x28282828
   14002a99f:	sub    BYTE PTR [rax],ch
   14002a9a1:	sub    BYTE PTR [rax],ch
   14002a9a3:	sub    BYTE PTR [rax],ch
   14002a9a5:	sub    BYTE PTR [rax],ch
   14002a9a7:	sub    BYTE PTR [rax],ch
   14002a9a9:	addr32 jne 0x14002a988
   14002a9ac:	pop    rdx
   14002a9ad:	cmp    eax,0x102eb818
   14002a9b2:	(bad)  
   14002a9b3:	sub    BYTE PTR [rax],ch
   14002a9b5:	sub    BYTE PTR [rax],ch
   14002a9b7:	sub    BYTE PTR [rax],ch
   14002a9b9:	sub    BYTE PTR [rax],ch
   14002a9bb:	sub    BYTE PTR [rax],ch
   14002a9bd:	sub    BYTE PTR [rax],ch
   14002a9bf:	sub    BYTE PTR [rax],ch
   14002a9c1:	sub    BYTE PTR [rax],ch
   14002a9c3:	sub    BYTE PTR [rax],ch
   14002a9c5:	sub    BYTE PTR [rcx-0x37],ch
   14002a9c8:	call   0x1682ad236
   14002a9cd:	sub    BYTE PTR [rax],ch
   14002a9cf:	sub    BYTE PTR [rax],ch
   14002a9d1:	sub    BYTE PTR [rax],ch
   14002a9d3:	sub    BYTE PTR [rax],ch
   14002a9d5:	sub    BYTE PTR [rax],ch
   14002a9d7:	sub    BYTE PTR [rax],ch
   14002a9d9:	cmp    eax,0x9913dc16
   14002a9de:	sub    BYTE PTR [rdx+rbx*4],ah
   14002a9e1:	fdiv   QWORD PTR [rcx]
   14002a9e3:	cmp    eax,0x28282828
   14002a9e8:	sub    BYTE PTR [rax],ch
   14002a9ea:	sub    BYTE PTR [rax],ch
   14002a9ec:	sub    BYTE PTR [rax],ch
   14002a9ee:	sub    BYTE PTR [rax],ch
   14002a9f0:	sub    BYTE PTR [rax],ch
   14002a9f2:	sub    BYTE PTR [rax],ch
   14002a9f4:	sub    BYTE PTR [rax],ch
   14002a9f6:	imul   ebp,eax,0x282859e8
   14002a9fc:	sub    BYTE PTR [rax],ch
   14002a9fe:	sub    BYTE PTR [rax],ch
   14002aa00:	sub    BYTE PTR [rax],ch
   14002aa02:	sub    BYTE PTR [rax],ch
   14002aa04:	sub    BYTE PTR [rax],ch
   14002aa06:	sub    BYTE PTR [rax],ch
   14002aa08:	sub    BYTE PTR [rax],ch
   14002aa0a:	and    al,0xa9
   14002aa0c:	mov    cl,0x4f
   14002aa0e:	sbb    DWORD PTR [rax],ebp
   14002aa10:	addr32 (bad) 
   14002aa12:	mov    cl,0x4
   14002aa14:	sbb    BYTE PTR [rax],ch
   14002aa16:	sub    BYTE PTR [rax],ch
   14002aa18:	sub    BYTE PTR [rax],ch
   14002aa1a:	sub    BYTE PTR [rax],ch
   14002aa1c:	sub    BYTE PTR [rax],ch
   14002aa1e:	sub    BYTE PTR [rax],ch
   14002aa20:	sub    BYTE PTR [rax],ch
   14002aa22:	sub    BYTE PTR [rax],ch
   14002aa24:	sub    BYTE PTR [rax],ch
   14002aa26:	pop    rcx
   14002aa27:	call   0x1552b3104
   14002aa2c:	adc    eax,0x15151515
   14002aa31:	adc    eax,0x15151515
   14002aa36:	adc    eax,0x15151515
   14002aa3b:	outs   dx,DWORD PTR ds:[rsi]
   14002aa3c:	test   eax,0x15992575
   14002aa41:	cld    
   14002aa42:	lea    esi,[rbp+0x16]
   14002aa45:	outs   dx,DWORD PTR ds:[rsi]
   14002aa46:	adc    eax,0x15151515
   14002aa4b:	adc    eax,0x15151515
   14002aa50:	adc    eax,0x15151515
   14002aa55:	sub    BYTE PTR [rsi+0x1586c0d8],al
   14002aa5b:	adc    eax,0x15151515
   14002aa60:	adc    eax,0x15151515
   14002aa65:	adc    eax,0x15151515
   14002aa6a:	adc    eax,0x13916f15
   14002aa6f:	rex.WB cmp dl,BYTE PTR [rip+0xffffffff9f9fc53d]        # 0xdfa26fb3
   14002aa76:	push   rax
   14002aa77:	cmp    eax,0x15151515
   14002aa7c:	adc    eax,0x15151515
   14002aa81:	adc    eax,0x15151515
   14002aa86:	xchg   al,al
   14002aa88:	(bad)  
   14002aa89:	xchg   BYTE PTR [rip+0x15151515],dl        # 0x15517bfa4
   14002aa8f:	adc    eax,0x15151515
   14002aa94:	adc    eax,0x15151515
   14002aa99:	adc    eax,0x92151515
   14002aa9e:	xchg   esi,eax
   14002aa9f:	scas   al,BYTE PTR es:[rdi]
   14002aaa0:	iret   
   14002aaa1:	cmp    dl,BYTE PTR [rip+0x4c5bb15]        # 0x144c865bc
   14002aaa7:	sahf   
   14002aaa8:	outs   dx,DWORD PTR ds:[rsi]
   14002aaa9:	adc    eax,0x15151515
   14002aaae:	adc    eax,0x15151515
   14002aab3:	adc    eax,0x17861515
   14002aab8:	ret    0x1586
   14002aabb:	adc    eax,0x15151515
   14002aac0:	adc    eax,0x15151515
   14002aac5:	adc    eax,0x15151515
   14002aaca:	adc    eax,0xc7151515
   14002aacf:	cdq    
   14002aad0:	fwait
   14002aad1:	rex.WB push r8
   14002aad3:	adc    eax,0xba921515
   14002aad8:	mov    ebx,0x15151515
   14002aadd:	adc    eax,0x15151515
   14002aae2:	adc    eax,0x86151515
   14002aae7:	ret    0x6ea
   14002aaea:	adc    eax,0x15151515
   14002aaef:	adc    eax,0x15151515
   14002aaf4:	adc    eax,0x15151515
   14002aaf9:	adc    eax,0x15151515
   14002aafe:	adc    eax,0xa3a3a515
   14002ab03:	and    BYTE PTR [rip+0x15151515],dl        # 0x15517c01e
   14002ab09:	adc    eax,0x15151515
   14002ab0e:	adc    eax,0x15151515
   14002ab13:	adc    eax,0xea061515
   14002ab18:	mov    ecx,0x1515157f
   14002ab1d:	adc    eax,0x15151515
   14002ab22:	adc    eax,0x15151515
   14002ab27:	adc    eax,0x15151515
   14002ab2c:	adc    eax,0x15151515
   14002ab31:	rex.RX and eax,0x15156ba7
   14002ab37:	adc    eax,0x15151515
   14002ab3c:	adc    eax,0x15151515
   14002ab41:	adc    eax,0x15151515
   14002ab46:	jg     0x14002ab01
   14002ab48:	lods   al,BYTE PTR ds:[rsi]
   14002ab49:	jg     0x14002ab60
   14002ab4b:	adc    eax,0x15151515
   14002ab50:	adc    eax,0x15151515
   14002ab55:	adc    eax,0x15151515
   14002ab5a:	adc    eax,0x15151515
   14002ab5f:	adc    eax,0xa3961515
   14002ab64:	ins    BYTE PTR es:[rdi],dx
   14002ab65:	adc    eax,0x15151515
   14002ab6a:	adc    eax,0x15151515
   14002ab6f:	adc    eax,0x15151515
   14002ab74:	adc    eax,0xbcac7f15
   14002ab79:	jg     0x14002ab90
   14002ab7b:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ab81:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ab87:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ab8d:	mov    DWORD PTR [rcx-0x78767677],ecx
   14002ab93:	lahf   
   14002ab94:	(bad)  
   14002ab95:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ab9b:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002aba1:	mov    DWORD PTR [rcx+0x7f158989],ecx
   14002aba7:	mov    esp,0x89897f84
   14002abac:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002abb2:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002abb8:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002abbe:	mov    DWORD PTR [rcx+0x7e728989],ecx
   14002abc4:	xchg   esi,eax
   14002abc5:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002abcb:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002abd1:	mov    DWORD PTR [rcx+0x7f898989],ecx
   14002abd7:	test   BYTE PTR [rsi+0x14],ch
   14002abda:	adc    eax,0x89898989
   14002abdf:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002abe5:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002abeb:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002abf1:	mov    DWORD PTR [rcx-0x76769306],ecx
   14002abf7:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002abfd:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac03:	mov    DWORD PTR [rcx-0x9180eb],ecx
   14002ac09:	xlat   BYTE PTR ds:[rbx]
   14002ac0a:	sub    BYTE PTR [rcx-0x76767677],cl
   14002ac10:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac16:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac1c:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac22:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac28:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac2e:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac34:	mov    DWORD PTR [rip+0x39ff6ed3],edx        # 0x17a021b0d
   14002ac3a:	ja     0x14002ac64
   14002ac3c:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac42:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac48:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac4e:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac54:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac5a:	mov    DWORD PTR [rcx-0x76767677],ecx
   14002ac60:	mov    DWORD PTR [rcx+0x7f158989],ecx
   14002ac66:	retf   0xffff
   14002ac69:	push   QWORD PTR [rbp+0x28857fd3]
   14002ac6f:	adc    eax,0x15151515
   14002ac74:	adc    eax,0x15151515
   14002ac79:	adc    eax,0x15151515
   14002ac7e:	adc    eax,0x15151515
   14002ac83:	adc    eax,0x15151515
   14002ac88:	adc    eax,0x15151515
   14002ac8d:	adc    eax,0x28151515
   14002ac92:	sub    BYTE PTR [rdi-0x4a],bh
   14002ac95:	retf   0xffb5
   14002ac98:	(bad)  
   14002ac99:	(bad)  
   14002ac9a:	push   QWORD PTR [rbp-0x4a4a4a4b]
   14002aca0:	mov    ch,0xb5
   14002aca2:	mov    ch,0xb5
   14002aca4:	mov    ch,0xb5
   14002aca6:	mov    ch,0xb5
   14002aca8:	mov    ch,0xb5
   14002acaa:	mov    ch,0xb5
   14002acac:	mov    ch,0xb5
   14002acae:	mov    ch,0xb5
   14002acb0:	mov    ch,0xb5
   14002acb2:	mov    ch,0xb5
   14002acb4:	mov    ch,0xb5
   14002acb6:	mov    ch,0xb5
   14002acb8:	mov    ch,0xb5
   14002acba:	mov    ch,0xb5
   14002acbc:	mov    ch,0xb5
   14002acbe:	mov    ch,0xb5
   14002acc0:	mov    ch,0xb5
   14002acc2:	mov    ch,0xb5
   14002acc4:	mov    ch,0xff
   14002acc6:	(bad)  
   14002acc7:	jmp    rax
   14002acc9:	add    BYTE PTR [rax],al
   14002accb:	add    BYTE PTR [rax],al
   14002accd:	(bad)  
   14002acce:	pop    rsi
   14002accf:	rex.WRX rol BYTE PTR [rax],0x0
   14002acd3:	add    BYTE PTR [rax],al
   14002acd5:	add    esp,eax
   14002acd7:	add    BYTE PTR [rax+0x0],al
   14002acdd:	add    eax,eax
   14002acdf:	add    BYTE PTR [rax+0x0],al
   14002ace5:	add    DWORD PTR [rax+0x0],eax
   14002aceb:	add    BYTE PTR [rax],al
   14002aced:	add    BYTE PTR [rax+0x0],al
	...
   14002ae27:	add    BYTE PTR [rax+0x0],al
   14002ae2d:	add    BYTE PTR [rax],al
   14002ae2f:	add    BYTE PTR [rax+0x0],al
   14002ae35:	add    DWORD PTR [rax+0xc000],eax
   14002ae3b:	add    BYTE PTR [rax],al
   14002ae3d:	add    DWORD PTR [rax+0xe000],eax
   14002ae43:	add    BYTE PTR [rax],al
   14002ae45:	(bad)  
   14002ae46:	rol    BYTE PTR [rax],0x28
   14002ae49:	add    BYTE PTR [rax],al
   14002ae4b:	add    BYTE PTR [rax],ah
   14002ae4d:	add    BYTE PTR [rax],al
   14002ae4f:	add    BYTE PTR [rax+0x0],al
   14002ae52:	add    BYTE PTR [rax],al
   14002ae54:	add    DWORD PTR [rax],eax
   14002ae56:	or     BYTE PTR [rax],al
	...
   14002ae68:	add    BYTE PTR [rcx],al
   14002ae6a:	add    BYTE PTR [rax],al
   14002ae6c:	add    BYTE PTR [rax],al
   14002ae6e:	add    BYTE PTR [rax],al
   14002ae70:	outs   dx,BYTE PTR ds:[rsi]
   14002ae71:	pop    rdx
   14002ae72:	cmp    al,BYTE PTR [rax]
   14002ae74:	ret    0x9aae
   14002ae77:	add    dh,bl
   14002ae79:	fcmovbe st,st(2)
   14002ae7b:	add    BYTE PTR [rsi],cl
   14002ae7d:	push   0xffffffffffffffe2
   14002ae7f:	add    BYTE PTR [rdx-0x52],bh
   14002ae82:	(bad)  
   14002ae83:	add    BYTE PTR [rdx-0x11ff997a],bl
   14002ae89:	out    dx,al
   14002ae8a:	(bad)  
   14002ae8b:	add    BYTE PTR [rdx-0x35ff7d66],ch
   14002ae91:	ret    0xb6
   14002ae94:	ror    dh,cl
   14002ae96:	retf   0xce00
   14002ae99:	fsubp  st(6),st
   14002ae9b:	add    BYTE PTR [rdx-0x71ff6166],bl
   14002aea1:	jb     0x14002aef5
   14002aea3:	add    dl,al
   14002aea5:	mov    dh,0xaa
   14002aea7:	add    BYTE PTR [rsi-0x59ff193a],ch
   14002aead:	xchg   edx,eax
   14002aeae:	jp     0x14002aeb0
   14002aeb0:	mov    edx,0xf6008ea6
   14002aeb5:	cli    
   14002aeb6:	cli    
   14002aeb7:	add    dh,bl
   14002aeb9:	(bad)  
   14002aebb:	add    BYTE PTR [rdx],dh
   14002aebd:	(bad)  
   14002aebe:	out    0x0,al
   14002aec0:	ror    dl,cl
   14002aec2:	mov    esi,0xeee6de00
   14002aec7:	add    BYTE PTR [rsi-0x6dff2542],ah
   14002aecd:	jle    0x14002af31
   14002aecf:	add    dl,al
   14002aed1:	shl    dl,cl
   14002aed3:	add    BYTE PTR [rsi-0x19ff916e],ch
   14002aed9:	out    dx,al
   14002aeda:	test   BYTE PTR [rax],0xae
   14002aedd:	movabs ds:0x8e4600aebec6008e,al
   14002aee6:	(bad)  
   14002aee7:	add    BYTE PTR [rdx+0x66],bh
   14002aeea:	rex.RX add dl,r9b
   14002aeed:	mov    dh,0x9e
   14002aeef:	add    BYTE PTR [rsi],bl
   14002aef1:	jbe    0x14002aed9
   14002aef3:	add    BYTE PTR [rsi-0x45ff1146],cl
   14002aef9:	movabs ds:0x869200ea9e5e0086,al
   14002af02:	jbe    0x14002af04
   14002af04:	(bad)  
   14002af05:	(bad)  
   14002af06:	mov    esi,0xced6da00
   14002af0b:	add    dl,dl
   14002af0d:	loop   0x14002af01
   14002af0f:	add    BYTE PTR [rdx-0x5dffa586],dl
   14002af15:	(bad)  
   14002af16:	repnz add BYTE PTR [rdx-0x19ff7d6a],ah
   14002af1d:	out    0xe2,al
   14002af1f:	add    dh,dh
   14002af21:	div    dh
   14002af23:	add    BYTE PTR [rdx-0x49ff153e],ah
   14002af29:	scas   al,BYTE PTR es:[rdi]
   14002af2a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002af2b:	add    dh,ah
   14002af2d:	loop   0x14002af09
   14002af2f:	add    BYTE PTR [rsi-0x2dff7562],ch
   14002af35:	(bad)  
   14002af36:	mov    dh,0x0
   14002af38:	ror    dl,cl
   14002af3a:	mov    BYTE PTR [rax],0xd6
   14002af3d:	out    0xf6,al
   14002af3f:	add    dh,al
   14002af41:	mov    esi,0xdada00b6
   14002af46:	fiadd  DWORD PTR [rax]
   14002af48:	mov    dh,0xa6
   14002af4a:	xchg   esi,eax
   14002af4b:	add    BYTE PTR [rsi+0x76006a82],dl
   14002af51:	(bad)  
   14002af53:	add    dh,al
   14002af55:	mov    dl,0x9a
   14002af57:	add    BYTE PTR [rdx],bl
   14002af59:	jb     0x14002af41
   14002af5b:	add    BYTE PTR [rdx-0x51ff917a],bl
   14002af61:	sahf   
   14002af62:	xchg   BYTE PTR [rax],al
   14002af64:	mov    dh,BYTE PTR [rsi+0x5a]
   14002af67:	add    dl,al
   14002af69:	mov    edx,0xceba00aa
   14002af6e:	out    dx,al
   14002af6f:	add    dl,ah
   14002af71:	loop   0x14002af51
   14002af73:	add    BYTE PTR [rdx-0x76],al
   14002af76:	out    0x0,al
   14002af78:	xchg   esi,eax
   14002af79:	(bad)  
   14002af7a:	data16 add BYTE PTR [rsi-0x39ff112e],dh
   14002af81:	mov    esi,0x6e8200b2
   14002af86:	push   rdx
   14002af87:	add    BYTE PTR [rsi],ah
   14002af89:	jp     0x14002af71
   14002af8b:	add    BYTE PTR [rsi+0x6e00f2be],cl
   14002af91:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002af92:	(bad)  
   14002af93:	add    dh,cl
   14002af95:	loop   0x14002af8d
   14002af97:	add    BYTE PTR [rsi+0x5e],dh
   14002af9a:	rex.X add dl,bl
   14002af9d:	fcmovbe st,st(6)
   14002af9f:	add    BYTE PTR [rsi],dl
   14002afa1:	outs   dx,BYTE PTR ds:[rsi]
   14002afa2:	loop   0x14002afa4
   14002afa4:	xchg   BYTE PTR [rsi-0x1111ff12],dh
   14002afaa:	repnz add dl,cl
   14002afad:	ret    0xba
   14002afb0:	(bad)  
   14002afb1:	ror    dl,cl
   14002afb3:	add    BYTE PTR [rdx-0x59ff113a],ah
   14002afb9:	xchg   esi,eax
   14002afba:	jle    0x14002afbc
   14002afbc:	mov    esi,0xfe0092aa
   14002afc1:	(bad)  
   14002afc2:	inc    BYTE PTR [rax]
   14002afc4:	(bad)  
   14002afc5:	retf   0xc2
   14002afc8:	loop   0x14002afb0
   14002afca:	repnz add BYTE PTR [rsi-0x11ff8972],bl
   14002afd1:	repnz test BYTE PTR [rax],0x4a
   14002afd5:	mov    ?,esi
   14002afd7:	add    BYTE PTR [rsi+0x66],dh
   14002afda:	rex.WRX add BYTE PTR [rsi-0x5e],r12b
   14002afde:	(bad)  
   14002afdf:	add    dh,dl
   14002afe1:	(bad)  
   14002afe2:	(bad)  
   14002afe3:	add    BYTE PTR [rdx-0x11ff796a],ah
   14002afe9:	idiv   dh
   14002afeb:	add    dl,al
   14002afed:	(bad)  
   14002afee:	repnz add BYTE PTR [rdx+0x5e],dh
   14002aff2:	add    BYTE PTR ds:[rdx+0x7a009eae],bh
   14002aff9:	mov    dl,0xee
   14002affb:	add    BYTE PTR [rdx-0x55ff957a],bl
   14002b001:	(bad)  
   14002b002:	xchg   BYTE PTR [rax],al
   14002b004:	ret    0xf6da
   14002b007:	add    BYTE PTR [rsi-0x45ffa98e],al
   14002b00d:	mov    dh,0xae
   14002b00f:	add    BYTE PTR [rdx-0x9ff6d5a],dh
   14002b015:	cli    
   14002b016:	inc    BYTE PTR [rax]
   14002b018:	(bad)  
   14002b019:	(bad)  
   14002b01a:	(bad)  
   14002b01b:	add    BYTE PTR [rsi-0x4dff9982],dl
   14002b021:	movabs ds:0x924a00aebece0092,al
   14002b02a:	(bad)  
   14002b02b:	add    dl,al
   14002b02d:	mov    dh,0xa6
   14002b02f:	add    BYTE PTR [rsi],ah
   14002b031:	jbe    0x14002b019
   14002b033:	add    BYTE PTR [rdx-0x61ff0d46],cl
   14002b039:	mov    dh,BYTE PTR [rdx+0x0]
   14002b03c:	fcmovbe st,st(6)
   14002b03e:	rol    BYTE PTR [rax],cl
   14002b040:	mov    ?,WORD PTR [rdx+0x5e]
   14002b043:	add    BYTE PTR [rsi-0x55ff0d36],ah
   14002b049:	xchg   esi,eax
   14002b04a:	(bad)  
   14002b04b:	add    dh,ah
   14002b04d:	out    0xe6,al
   14002b04f:	add    BYTE PTR [rdx-0x35ff0d3e],bl
   14002b055:	(bad)  
   14002b056:	mov    edx,0xc6ced200
   14002b05b:	add    dh,bl
   14002b05d:	(bad)  
   14002b05e:	cli    
   14002b05f:	add    dl,ah
   14002b061:	loop   0x14002b045
   14002b063:	add    BYTE PTR [rsi],bh
   14002b065:	mov    ch,dl
   14002b067:	add    BYTE PTR [rdx-0x29ff0d2e],dh
   14002b06d:	loop   0x14002b065
   14002b06f:	add    BYTE PTR [rsi],dl
   14002b071:	outs   dx,BYTE PTR ds:[rsi]
   14002b072:	out    0x0,al
   14002b074:	mov    edx,0xa6009aaa
   14002b079:	ret    0xe6
   14002b07c:	scas   al,BYTE PTR es:[rdi]
   14002b07d:	retf   0xee
   14002b080:	(bad)  
   14002b081:	push   0x4e
   14002b083:	add    BYTE PTR [rsi+0x7e00a2b2],bh
   14002b089:	push   0x4a
   14002b08b:	add    BYTE PTR [rdx],bh
   14002b08d:	xchg   dh,ah
   14002b08f:	add    dl,ah
   14002b091:	(bad)  
   14002b093:	add    BYTE PTR [rsi-0x59ff6956],bh
   14002b099:	xchg   edx,eax
   14002b09a:	jbe    0x14002b09c
   14002b09c:	retf   0xf6de
   14002b09f:	add    dl,dh
   14002b0a1:	repnz repnz add dl,ch
   14002b0a5:	repnz cli 
   14002b0a7:	add    BYTE PTR [rsi-0xdff755e],dh
   14002b0ad:	idiv   dl
   14002b0af:	add    BYTE PTR [rsi+0x6600eec2],bl
   14002b0b5:	movabs ds:0x92a600eeeeee00ee,al
   14002b0be:	jle    0x14002b0c0
   14002b0c0:	retf   0xa2b6
   14002b0c3:	add    dh,al
   14002b0c5:	mov    dl,0x9e
   14002b0c7:	add    dl,al
   14002b0c9:	mov    edx,0xbe9600ae
   14002b0ce:	repnz add dh,dl
   14002b0d1:	ror    dh,cl
   14002b0d3:	add    dh,dl
   14002b0d5:	retf   0xc2
   14002b0d8:	mov    ?,WORD PTR [rdx+0x56]
   14002b0db:	add    BYTE PTR [rsi-0x45ff0936],ah
   14002b0e1:	shl    dl,cl
   14002b0e3:	add    BYTE PTR [rdx+0x5a],dh
   14002b0e6:	cmp    al,BYTE PTR [rax]
   14002b0e8:	loop   0x14002b0c4
   14002b0ea:	rol    BYTE PTR [rax],cl
   14002b0ec:	scas   al,BYTE PTR es:[rdi]
   14002b0ed:	(bad)  
   14002b0ee:	(bad)  
   14002b0ef:	add    dh,cl
   14002b0f1:	ret    0xb6
   14002b0f4:	(bad)  
   14002b0f5:	(bad)  
   14002b0f6:	retf   0xfa00
   14002b0f9:	cli    
   14002b0fa:	cli    
   14002b0fb:	add    dl,ah
   14002b0fd:	(bad)  
   14002b0ff:	add    dl,ah
   14002b101:	out    0xee,al
   14002b103:	add    BYTE PTR [rsi-0x4dff9d82],dl
   14002b109:	movabs ds:0x8e4a00aebeca008e,al
   14002b112:	(bad)  
   14002b113:	add    BYTE PTR [rdx],ah
   14002b115:	jbe    0x14002b0fd
   14002b117:	add    BYTE PTR [rdx-0x21ff1146],dl
   14002b11d:	(bad)  
   14002b11e:	(bad)  
   14002b11f:	add    dh,dl
   14002b121:	loop   0x14002b115
   14002b123:	add    BYTE PTR [rsi-0x4dff7d6a],ah
   14002b129:	sahf   
   14002b12a:	mov    al,BYTE PTR [rax]
   14002b12c:	(bad)  
   14002b12e:	test   BYTE PTR [rax],0xca
   14002b131:	mov    esi,0x869e00b6
   14002b136:	outs   dx,BYTE PTR ds:[rsi]
   14002b137:	add    BYTE PTR [rdx-0x71ff7962],dh
   14002b13d:	jbe    0x14002b199
   14002b13f:	add    dh,ah
   14002b141:	loop   0x14002b121
   14002b143:	add    BYTE PTR [rdx-0x35ff997e],bl
   14002b149:	mov    esi,0x7a2a00b2
   14002b14e:	out    0x0,al
   14002b150:	shl    dl,cl
   14002b152:	test   BYTE PTR [rax],0xde
   14002b155:	fcmovbe st,st(6)
   14002b157:	add    dh,cl
   14002b159:	ret    0xba
   14002b15c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002b15d:	(bad)  
   14002b15e:	out    dx,al
   14002b15f:	add    BYTE PTR [rdx-0x2dff816a],ch
   14002b165:	retf   0xc2
   14002b168:	movabs ds:0x6a00f6f2f200768e,al
   14002b171:	movabs ds:0xaebe00fef6f200ea,al
   14002b17a:	sahf   
   14002b17b:	add    BYTE PTR [rsi-0x4e],bh
   14002b17e:	out    dx,al
   14002b17f:	add    BYTE PTR [rsi-0x41ff957a],bl
   14002b185:	mov    dh,0xae
   14002b187:	add    BYTE PTR [rsi-0x5dff6d5a],dh
   14002b18d:	mov    dh,BYTE PTR [rdx+0x0]
   14002b190:	xchg   edx,eax
   14002b191:	jp     0x14002b1f1
   14002b193:	add    dl,ch
   14002b195:	out    0xe6,al
   14002b197:	add    dh,cl
   14002b199:	(bad)  
   14002b19a:	mov    edx,0xc6ced600
   14002b19f:	add    BYTE PTR [rdx-0x76],al
   14002b1a2:	(bad)  
   14002b1a3:	add    BYTE PTR [rdx],bl
   14002b1a5:	outs   dx,BYTE PTR ds:[rsi]
   14002b1a6:	out    0x0,al
	...
   14002b270:	(bad)  
   14002b271:	(bad)  
   14002b272:	(bad)  
	...
   14002b28b:	add    BYTE PTR [rax],al
   14002b28d:	(bad)  
   14002b28e:	(bad)  
   14002b28f:	(bad)  
   14002b290:	(bad)  
   14002b291:	(bad)  
   14002b292:	pop    rdx
   14002b293:	and    al,0x67
   14002b295:	ja     0x14002b301
   14002b297:	push   0x6a
   14002b299:	push   0x6a
   14002b29b:	push   0x6a
   14002b29d:	push   0x6a
   14002b29f:	push   0x6a
   14002b2a1:	push   0x6a
   14002b2a3:	push   0x6a
   14002b2a5:	push   0x6a
   14002b2a7:	push   0x6a
   14002b2a9:	push   0x77
   14002b2ab:	addr32 and al,0x5a
   14002b2ae:	(bad)  
   14002b2af:	(bad)  
   14002b2b0:	(bad)  
   14002b2b1:	pop    rdx
   14002b2b2:	cs push 0xffffffffffffff92
   14002b2b5:	rex.WRX mov WORD PTR [rsp+r9*4-0x73737374],cs
   14002b2bd:	mov    WORD PTR [rsp+rcx*4-0x73737374],cs
   14002b2c4:	mov    WORD PTR [rsp+rcx*4+0x4e8c8c8c],cs
   14002b2cb:	xchg   edx,eax
   14002b2cc:	push   0x2e
   14002b2ce:	pop    rdx
   14002b2cf:	(bad)  
   14002b2d0:	rex.WX pop rbp
   14002b2d2:	sub    eax,DWORD PTR [rsi]
   14002b2d4:	xchg   edx,eax
   14002b2d5:	xchg   edx,eax
   14002b2d6:	xchg   edx,eax
   14002b2d7:	xchg   edx,eax
   14002b2d8:	xchg   edx,eax
   14002b2d9:	xchg   edx,eax
   14002b2da:	xchg   edx,eax
   14002b2db:	xchg   edx,eax
   14002b2dc:	xchg   edx,eax
   14002b2dd:	xchg   edx,eax
   14002b2de:	xchg   edx,eax
   14002b2df:	xchg   edx,eax
   14002b2e0:	xchg   edx,eax
   14002b2e1:	xchg   edx,eax
   14002b2e2:	xchg   edx,eax
   14002b2e3:	xchg   edx,eax
   14002b2e4:	xchg   edx,eax
   14002b2e5:	xchg   edx,eax
   14002b2e6:	xchg   edx,eax
   14002b2e7:	xchg   edx,eax
   14002b2e8:	xchg   edx,eax
   14002b2e9:	xchg   edx,eax
   14002b2ea:	xchg   edx,eax
   14002b2eb:	xchg   edx,eax
   14002b2ec:	(bad)  
   14002b2ed:	sub    ebx,DWORD PTR [rbp+0x4a]
   14002b2f0:	cmp    BYTE PTR [rdi+0x77],ah
   14002b2f3:	push   0x6a
   14002b2f5:	push   0x2
   14002b2f7:	or     BYTE PTR [rcx-0x4a3b758a],al
   14002b2fd:	mov    ch,0xb5
   14002b2ff:	add    eax,0xb1b5b5b5
   14002b304:	push   rdx
   14002b305:	(bad)  
   14002b306:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002b307:	add    ch,BYTE PTR [rdx+0x6a]
   14002b30a:	push   0x6a
   14002b30c:	push   0x77
   14002b30e:	cmp    BYTE PTR [esi],bl
   14002b311:	pop    rsp
   14002b312:	ja     0x14002b37e
   14002b314:	push   0x6a
   14002b316:	add    eax,0x6130b50c
   14002b31b:	or     dl,cl
   14002b31d:	retf   0xcaca
   14002b320:	retf   0xcaca
   14002b323:	(bad)  
   14002b324:	mov    BYTE PTR [rdi],0x72
   14002b327:	mov    esi,0x6a6a6ab6
   14002b32c:	push   0x77
   14002b32e:	pop    rsp
   14002b32f:	(bad)  
   14002b330:	xchg   BYTE PTR [rip+0x77777777],dh        # 0x1b77a2aad
   14002b336:	(bad)  
   14002b337:	jb     0x14002b375
   14002b339:	push   rax
   14002b33a:	rex sub eax,DWORD PTR [rdx]
   14002b33d:	mov    ebp,0xa12508b0
   14002b342:	mov    ecx,0x77777740
   14002b347:	outs   dx,DWORD PTR ds:[rsi]
   14002b348:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002b349:	ja     0x14002b3c2
   14002b34b:	ja     0x14002b3c4
   14002b34d:	ja     0x14002b384
   14002b34f:	xchg   BYTE PTR [rbp+rsi*1+0x77777777],al
   14002b356:	ja     0x14002b3cb
   14002b358:	sbb    al,0x8
   14002b35a:	and    eax,0xc28a507
   14002b35f:	(bad)  
   14002b360:	mov    bl,0x28
   14002b362:	cmp    eax,DWORD PTR [rbp+0x77777777]
   14002b368:	mov    BYTE PTR [rdi+0x77],dh
   14002b36b:	ja     0x14002b3e4
   14002b36d:	ja     0x14002b3a4
   14002b36f:	test   BYTE PTR [rbp+0x5c],al
   14002b372:	sub    ebp,DWORD PTR [rbx]
   14002b374:	sub    ebp,DWORD PTR [rbx]
   14002b376:	sub    ebp,DWORD PTR [rbx]
   14002b378:	sub    ebp,DWORD PTR [rbx]
   14002b37a:	and    eax,0x440d0f17
   14002b37f:	rex.R or eax,0x2b551b36
   14002b385:	sub    ebp,DWORD PTR [rbx]
   14002b387:	sub    ebp,DWORD PTR [rbx]
   14002b389:	sub    ebp,DWORD PTR [rbx]
   14002b38b:	sub    ebp,DWORD PTR [rbx]
   14002b38d:	sub    ebx,DWORD PTR [rbp+rax*2+0x66]
   14002b391:	pop    rsp
   14002b392:	sub    ebp,DWORD PTR [rbx]
   14002b394:	sub    ebp,DWORD PTR [rbx]
   14002b396:	sub    ebp,DWORD PTR [rbx]
   14002b398:	sub    ebp,DWORD PTR [rbx]
   14002b39a:	jl     0x14002b3d0
   14002b39c:	or     BYTE PTR [rip+0x73554f3e],r9b        # 0x1b35802e1
   14002b3a3:	rex
   14002b3a4:	rex jp 0x14002b3b0
   14002b3a7:	sub    ebp,DWORD PTR [rbx]
   14002b3a9:	sub    ebp,DWORD PTR [rbx]
   14002b3ab:	sub    ebp,DWORD PTR [rbx]
   14002b3ad:	sub    ebx,DWORD PTR [rsi+riz*2+0x3d]
   14002b3b1:	pop    rsp
   14002b3b2:	ja     0x14002b42b
   14002b3b4:	ja     0x14002b42d
   14002b3b6:	ja     0x14002b42f
   14002b3b8:	ja     0x14002b405
   14002b3ba:	ins    BYTE PTR es:[rdi],dx
   14002b3bb:	jb     0x14002b3ff
   14002b3bd:	imul   ebp,DWORD PTR [rbx+0x42],0x37
   14002b3c1:	(bad)  
   14002b3c2:	(bad)  
   14002b3c3:	lods   eax,DWORD PTR ds:[rsi]
   14002b3c4:	cwde   
   14002b3c5:	push   rbp
   14002b3c6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002b3c7:	ss rex.WXB ja 0x14002b442
   14002b3cb:	ja     0x14002b444
   14002b3cd:	ja     0x14002b42b
   14002b3cf:	cmp    eax,0x77773574
   14002b3d4:	ja     0x14002b44d
   14002b3d6:	ja     0x14002b44f
   14002b3d8:	ja     0x14002b425
   14002b3da:	push   rdi
   14002b3db:	push   rdx
   14002b3dc:	and    eax,0x32262632
   14002b3e1:	rex.WRXB or rax,0xffffffffbd77121c
   14002b3e7:	cmp    esi,DWORD PTR [rdx+0x77]
   14002b3ea:	ja     0x14002b463
   14002b3ec:	ja     0x14002b465
   14002b3ee:	xor    eax,0x6a351774
   14002b3f3:	push   0x6a
   14002b3f5:	push   0x6a
   14002b3f7:	ja     0x14002b439
   14002b3f9:	jae    0x14002b408
   14002b3fb:	test   DWORD PTR [rip+0x31084f79],esp        # 0x1710b037a
   14002b401:	cdq    
   14002b402:	jae    0x14002b38c
   14002b404:	sub    ebp,DWORD PTR [rdx+0x6a]
   14002b407:	jp     0x14002b3bc
   14002b409:	push   0x6a
   14002b40b:	push   0x6a
   14002b40d:	push   0x35
   14002b40f:	(bad)  
   14002b410:	(bad)  
   14002b411:	adc    ch,BYTE PTR [rdx+0x6a]
   14002b414:	push   0x6a
   14002b416:	push   0x73
   14002b418:	mov    esi,0x68683bc8
   14002b41d:	sbb    esp,DWORD PTR [rdx]
   14002b41f:	sbb    ecx,DWORD PTR [rbx]
   14002b421:	sub    bl,BYTE PTR [rcx]
   14002b423:	cmp    al,0xd
   14002b425:	mov    BYTE PTR [rdx+0x6a],ch
   14002b428:	cmp    ebp,DWORD PTR [rdx+0x6a]
   14002b42b:	push   0x6a
   14002b42d:	push   0x12
   14002b42f:	(bad)  
   14002b430:	(bad)  
   14002b431:	adc    ch,BYTE PTR [rdx+0x6a]
   14002b434:	push   0x6a
   14002b436:	push   0x40
   14002b438:	ss jb  0x14002b46b
   14002b43b:	or     BYTE PTR [rdx],al
   14002b43d:	rex (bad) 
   14002b43f:	mov    ah,0xe
   14002b441:	(bad)  
   14002b442:	sahf   
   14002b443:	add    dl,BYTE PTR [rax+0x50]
   14002b446:	and    eax,0x6a6a2864
   14002b44b:	push   0x6a
   14002b44d:	push   0x12
   14002b44f:	(bad)  
   14002b450:	cmp    edx,DWORD PTR [rdx]
   14002b452:	(bad)  
   14002b453:	xchg   edx,eax
   14002b454:	xchg   edx,eax
   14002b455:	xchg   edx,eax
   14002b456:	xchg   edx,eax
   14002b457:	(bad)  
   14002b458:	push   0x40
   14002b45a:	mov    ebp,0x3f922f14
   14002b45f:	sub    eax,0x92821d0a
   14002b464:	(bad)  
   14002b465:	sub    esp,DWORD PTR [rip+0xffffffff92924f61]        # 0xd29503cc
   14002b46b:	xchg   edx,eax
   14002b46c:	xchg   edx,eax
   14002b46d:	(bad)  
   14002b46e:	adc    bh,BYTE PTR [rbx]
   14002b470:	jb     0x14002b484
   14002b472:	xchg   edx,eax
   14002b473:	xchg   edx,eax
   14002b474:	xchg   edx,eax
   14002b475:	xchg   edx,eax
   14002b476:	xchg   edx,eax
   14002b477:	xchg   edx,eax
   14002b478:	xchg   edx,eax
   14002b479:	xchg   edx,eax
   14002b47a:	xchg   edx,eax
   14002b47b:	(bad)  
   14002b47c:	xchg   edx,eax
   14002b47d:	sbb    BYTE PTR [rcx-0x7d],bl
   14002b480:	adc    eax,0x92a487b7
   14002b485:	xchg   edx,eax
   14002b486:	xchg   edx,eax
   14002b487:	(bad)  
   14002b488:	xchg   edx,eax
   14002b489:	xchg   edx,eax
   14002b48a:	xchg   edx,eax
   14002b48b:	xchg   edx,eax
   14002b48c:	xchg   edx,eax
   14002b48d:	xchg   edx,eax
   14002b48e:	adc    dh,BYTE PTR [rdx-0x42]
   14002b491:	jl     0x14002b425
   14002b493:	rex.WRX
   14002b494:	rex.WRX
   14002b495:	rex.WRX
   14002b496:	rex.WRX
   14002b497:	rex.WRX
   14002b498:	rex.WRX
   14002b499:	rex.WRX
   14002b49a:	rex.WRX
   14002b49b:	rex.WRX lods al,BYTE PTR ds:[rsi]
   14002b49d:	jge    0x14002b4a3
   14002b49f:	rex.WRX pop rbx
   14002b4a1:	add    eax,DWORD PTR [rcx+0x56]
   14002b4a4:	rex.WRX
   14002b4a5:	rex.WRX
   14002b4a6:	rex.WRX
   14002b4a7:	rex.WRX
   14002b4a8:	rex.WRX
   14002b4a9:	rex.WRX
   14002b4aa:	rex.WRX
   14002b4ab:	rex.WRX
   14002b4ac:	rex.WRX xchg rdx,rax
   14002b4ae:	jl     0x14002b46e
   14002b4b0:	(bad)  
   14002b4b2:	mov    WORD PTR [rsp+rcx*4-0x73737374],cs
   14002b4b9:	mov    WORD PTR [rsi+rcx*2+0x4327135b],cs
   14002b4c0:	cmp    cl,BYTE PTR [rcx+rdx*2-0x74]
   14002b4c4:	mov    WORD PTR [rsp+rcx*4-0x73737374],cs
   14002b4cb:	mov    WORD PTR [rsp+rcx*4+0x2bbc0f7c],cs
   14002b4d2:	mov    WORD PTR [rsp+rcx*4-0x73737374],cs
   14002b4d9:	mov    WORD PTR [rdi+rbx*2+0x4d8c5b70],cs
   14002b4e0:	rex.WR
   14002b4e1:	rex.W
   14002b4e2:	rex.WRX mov WORD PTR [rsp+r9*4-0x73737374],cs
   14002b4ea:	mov    WORD PTR [rsp+rcx*4+0x7bc2b8c],cs
   14002b4f1:	ja     0x14002b51f
   14002b4f3:	sub    al,0x2c
   14002b4f5:	sub    al,0x2c
   14002b4f7:	sub    al,0x2c
   14002b4f9:	sub    al,0x2c
   14002b4fb:	pushf  
   14002b4fc:	and    BYTE PTR [rip+0xffffffff904c51bf],bl        # 0xd04f06c1
   14002b502:	sub    al,0x2c
   14002b504:	sub    al,0x2c
   14002b506:	sub    al,0x2c
   14002b508:	sub    al,0x2c
   14002b50a:	sub    al,0x2c
   14002b50c:	sub    al,0x2c
   14002b50e:	ja     0x14002b517
   14002b510:	cmp    al,0x77
   14002b512:	sub    al,0x2c
   14002b514:	sub    al,0x2c
   14002b516:	sub    al,0x2c
   14002b518:	sub    al,0x2c
   14002b51a:	sub    al,0x1a
   14002b51c:	and    ecx,ebp
   14002b51e:	and    DWORD PTR [rax+0x1d],ebx
   14002b521:	jge    0x14002b54a
   14002b523:	sub    al,0x2c
   14002b525:	sub    al,0x2c
   14002b527:	sub    al,0x2c
   14002b529:	sub    al,0x2c
   14002b52b:	sub    al,0x2c
   14002b52d:	sub    al,0x77
   14002b52f:	cmp    al,0xb2
   14002b531:	push   0x2c
   14002b533:	sub    al,0x2c
   14002b535:	sub    al,0x2c
   14002b537:	sub    al,0x2c
   14002b539:	sub    al,0x2c
   14002b53b:	sub    al,0x27
   14002b53d:	outs   dx,BYTE PTR ds:[rsi]
   14002b53e:	test   eax,0x6e6e3329
   14002b543:	jle    0x14002b571
   14002b545:	sub    al,0x2c
   14002b547:	sub    al,0x2c
   14002b549:	sub    al,0x2c
   14002b54b:	sub    al,0x2c
   14002b54d:	sub    al,0x6a
   14002b54f:	mov    dl,0x8e
   14002b551:	push   0x2c
   14002b553:	adc    DWORD PTR [rcx],edx
   14002b555:	adc    DWORD PTR [rcx],edx
   14002b557:	adc    DWORD PTR [rcx],edx
   14002b559:	adc    DWORD PTR [rcx],edx
   14002b55b:	adc    DWORD PTR [rcx],edx
   14002b55d:	scas   eax,DWORD PTR es:[rdi]
   14002b55e:	and    eax,DWORD PTR [rsi+0x21]
   14002b561:	jg     0x14002b5c5
   14002b563:	xchg   ecx,eax
   14002b564:	xchg   edi,eax
   14002b565:	scas   eax,DWORD PTR es:[rdi]
   14002b566:	adc    DWORD PTR [rcx],edx
   14002b568:	adc    DWORD PTR [rcx],edx
   14002b56a:	adc    DWORD PTR [rcx],edx
   14002b56c:	adc    DWORD PTR [rdx+rbp*2],ebp
   14002b56f:	mov    ss,WORD PTR [rax]
   14002b571:	push   0xffffffffffffffa2
   14002b573:	movabs ds:0xa2a2a2a2a2a2a2a2,al
   14002b57c:	movabs ds:0x758ba271b7c38da2,al
   14002b585:	adc    QWORD PTR [r10-0x5d5d5d5e],rsp
   14002b58c:	movabs ds:0xa2a2a20653106aa2,al
   14002b595:	movabs ds:0xa2a2a2a2a2a2a2a2,al
   14002b59e:	movabs ds:0xa28fa2a2657d4711,al
   14002b5a7:	movabs ds:0x5306a2a2a2a2a2a2,al
   14002b5b0:	mov    DWORD PTR [rsi],eax
   14002b5b2:	movabs ds:0x5454545454545454,al
   14002b5bb:	push   rsp
   14002b5bc:	push   rsp
   14002b5bd:	push   rsp
   14002b5be:	push   rsp
   14002b5bf:	push   rsp
   14002b5c0:	adc    DWORD PTR [rax+0x71],edi
   14002b5c3:	(bad)  
   14002b5c4:	push   rsp
   14002b5c5:	push   rsp
   14002b5c6:	push   rsp
   14002b5c7:	push   rsp
   14002b5c8:	push   rsp
   14002b5c9:	push   rsp
   14002b5ca:	push   rsp
   14002b5cb:	push   rsp
   14002b5cc:	push   rsp
   14002b5cd:	movabs ds:0x5454541102018906,al
   14002b5d6:	push   rsp
   14002b5d7:	push   rsp
   14002b5d8:	push   rsp
   14002b5d9:	push   rsp
   14002b5da:	push   rsp
   14002b5db:	push   rsp
   14002b5dc:	push   rsp
   14002b5dd:	push   rsp
   14002b5de:	push   rsp
   14002b5df:	push   rsp
   14002b5e0:	push   rsp
   14002b5e1:	(bad)  
   14002b5e2:	fwait
   14002b5e3:	pop    rsi
   14002b5e4:	push   rsp
   14002b5e5:	push   rsp
   14002b5e6:	push   rsp
   14002b5e7:	push   rsp
   14002b5e8:	push   rsp
   14002b5e9:	push   rsp
   14002b5ea:	push   rsp
   14002b5eb:	push   rsp
   14002b5ec:	push   rsp
   14002b5ed:	adc    DWORD PTR [rdx],eax
   14002b5ef:	add    DWORD PTR [rcx],eax
   14002b5f1:	adc    al,0x8c
   14002b5f3:	push   rsp
   14002b5f4:	push   rsp
   14002b5f5:	push   rsp
   14002b5f6:	push   rsp
   14002b5f7:	push   rsp
   14002b5f8:	push   rsp
   14002b5f9:	push   rsp
   14002b5fa:	push   rsp
   14002b5fb:	push   rsp
   14002b5fc:	push   rsp
   14002b5fd:	push   rsp
   14002b5fe:	push   rsp
   14002b5ff:	push   rsp
   14002b600:	push   rsp
   14002b601:	push   rsp
   14002b602:	jnp    0x14002b66d
   14002b604:	push   rsp
   14002b605:	push   rsp
   14002b606:	push   rsp
   14002b607:	push   rsp
   14002b608:	push   rsp
   14002b609:	push   rsp
   14002b60a:	push   rsp
   14002b60b:	push   rsp
   14002b60c:	push   rsp
   14002b60d:	mov    WORD PTR [rcx+rax*1],ss
   14002b610:	(bad)  
   14002b611:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002b612:	stos   DWORD PTR es:[rdi],eax
   14002b613:	sub    al,0xa2
   14002b615:	push   rsp
   14002b616:	push   rsp
   14002b617:	push   rsp
   14002b618:	push   rsp
   14002b619:	push   rsp
   14002b61a:	push   rsp
   14002b61b:	push   rsp
   14002b61c:	push   rsp
   14002b61d:	push   rsp
   14002b61e:	push   rsp
   14002b61f:	push   rsp
   14002b620:	push   rsp
   14002b621:	push   rsp
   14002b622:	push   rsp
   14002b623:	push   rsp
   14002b624:	push   rsp
   14002b625:	push   rsp
   14002b626:	push   rsp
   14002b627:	push   rsp
   14002b628:	push   rsp
   14002b629:	push   rsp
   14002b62a:	push   rsp
   14002b62b:	movabs ds:0x996dcececea7ab2c,al
   14002b634:	mov    BYTE PTR [rsp+rbp*1+0x2c2c2c2c],cl
   14002b63b:	sub    al,0x2c
   14002b63d:	sub    al,0x2c
   14002b63f:	sub    al,0x2c
   14002b641:	sub    al,0x2c
   14002b643:	sub    al,0x2c
   14002b645:	sub    al,0x2c
   14002b647:	sub    al,0x2c
   14002b649:	sub    al,0x8c
   14002b64b:	mov    BYTE PTR [rcx-0x31313193],bl
   14002b651:	(bad)  
   14002b652:	(bad)  
   14002b653:	xchg   esp,eax
   14002b654:	xchg   esp,eax
   14002b655:	xchg   esp,eax
   14002b656:	xchg   esp,eax
   14002b657:	xchg   esp,eax
   14002b658:	xchg   esp,eax
   14002b659:	xchg   esp,eax
   14002b65a:	xchg   esp,eax
   14002b65b:	xchg   esp,eax
   14002b65c:	xchg   esp,eax
   14002b65d:	xchg   esp,eax
   14002b65e:	xchg   esp,eax
   14002b65f:	xchg   esp,eax
   14002b660:	xchg   esp,eax
   14002b661:	xchg   esp,eax
   14002b662:	xchg   esp,eax
   14002b663:	xchg   esp,eax
   14002b664:	xchg   esp,eax
   14002b665:	xchg   esp,eax
   14002b666:	xchg   esp,eax
   14002b667:	xchg   esp,eax
   14002b668:	xchg   esp,eax
   14002b669:	xchg   esp,eax
   14002b66a:	xchg   esp,eax
   14002b66b:	xchg   esp,eax
   14002b66c:	xchg   esp,eax
   14002b66d:	(bad)  
   14002b66e:	(bad)  
   14002b66f:	(bad)  
   14002b670:	loopne 0x14002b672
   14002b672:	add    BYTE PTR [rdi],al
   14002b674:	rol    BYTE PTR [rax],0x0
   14002b677:	add    eax,DWORD PTR [rax+0x10000]
	...
   14002b6e1:	add    BYTE PTR [rax],al
   14002b6e3:	add    BYTE PTR [rax-0x3fff0000],al
   14002b6e9:	add    BYTE PTR [rax],al
   14002b6eb:	add    esp,eax
   14002b6ed:	add    BYTE PTR [rax],al
   14002b6ef:	(bad)  
   14002b6f0:	sub    BYTE PTR [rax],al
   14002b6f2:	add    BYTE PTR [rax],al
   14002b6f4:	sbb    BYTE PTR [rax],al
   14002b6f6:	add    BYTE PTR [rax],al
   14002b6f8:	xor    BYTE PTR [rax],al
   14002b6fa:	add    BYTE PTR [rax],al
   14002b6fc:	add    DWORD PTR [rax],eax
   14002b6fe:	or     BYTE PTR [rax],al
	...
   14002b710:	add    BYTE PTR [rcx],al
   14002b712:	add    BYTE PTR [rax],al
   14002b714:	add    BYTE PTR [rax],al
   14002b716:	add    BYTE PTR [rax],al
   14002b718:	jb     0x14002b774
   14002b71a:	cmp    al,BYTE PTR [rax]
   14002b71c:	ret    0x96ae
   14002b71f:	add    BYTE PTR [rdx-0x25ff6556],bh
   14002b725:	fcmovu st,st(2)
   14002b727:	add    BYTE PTR [rdx-0x7dff997a],bl
   14002b72d:	scas   al,BYTE PTR es:[rdi]
   14002b72e:	loop   0x14002b730
   14002b730:	scas   al,BYTE PTR es:[rdi]
   14002b731:	(bad)  
   14002b732:	jle    0x14002b734
   14002b734:	xchg   BYTE PTR [rdx+0x56],dh
   14002b737:	add    dl,al
   14002b739:	mov    edx,0x7e1600ae
   14002b73e:	(bad)  
   14002b73f:	add    dh,ch
   14002b741:	out    dx,al
   14002b742:	out    dx,al
   14002b743:	add    dh,cl
   14002b745:	retf   0xc6
   14002b748:	pop    rdx
   14002b749:	sahf   
   14002b74a:	(bad)  
   14002b74b:	add    BYTE PTR [rsi-0x45ff896e],ah
   14002b751:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002b752:	mov    es,WORD PTR [rax]
   14002b754:	xchg   esi,eax
   14002b755:	jle    0x14002b7b5
   14002b757:	add    BYTE PTR [rsi-0x69ff594e],bh
   14002b75d:	mov    edx,0xe6e600e2
   14002b762:	out    0x0,al
   14002b764:	scas   al,BYTE PTR es:[rdi]
   14002b765:	sahf   
   14002b766:	mov    al,BYTE PTR [rax]
   14002b768:	cs mov ch,dl
   14002b76b:	add    BYTE PTR [rdx-0x69ff897a],dl
   14002b771:	jle    0x14002b7d9
   14002b773:	add    BYTE PTR [rdx+0x7a00eebe],dl
   14002b779:	data16 rex.RX add dl,r8b
   14002b77d:	mov    edx,0xdac600aa
   14002b782:	repnz add BYTE PTR [rsi-0x35ff9176],bl
   14002b789:	mov    dl,0x0
   14002b78c:	cli    
   14002b78d:	cli    
   14002b78e:	cli    
   14002b78f:	add    BYTE PTR [rdx-0x41ffa17e],bl
   14002b795:	mov    dh,0xaa
   14002b797:	add    BYTE PTR [rsi],bh
   14002b799:	xchg   edx,eax
   14002b79a:	out    dx,al
   14002b79b:	add    BYTE PTR [rdx-0x1dff6152],bh
   14002b7a1:	loop   0x14002b781
   14002b7a3:	add    BYTE PTR [rsi-0x6dff7966],ch
   14002b7a9:	jp     0x14002b805
   14002b7ab:	add    BYTE PTR [rsi-0x5a],ch
   14002b7ae:	loop   0x14002b7b0
   14002b7b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002b7b1:	xchg   esi,eax
   14002b7b2:	jle    0x14002b7b4
   14002b7b4:	mov    ?,WORD PTR [rdx-0x5d49ff16]
   14002b7ba:	mov    al,BYTE PTR [rax]
   14002b7bc:	ds mov fs,esi
   14002b7bf:	add    BYTE PTR [rsi+0x62],dh
   14002b7c2:	rex.X add BYTE PTR [rdx-0x79ff957a],bl
   14002b7c9:	mov    dh,0xea
   14002b7cb:	add    BYTE PTR [rdx],ah
   14002b7cd:	(bad)  
   14002b7ce:	(bad)  
   14002b7cf:	add    dh,dh
   14002b7d1:	div    dh
   14002b7d3:	add    dh,dl
   14002b7d5:	(bad)  
   14002b7d6:	(bad)  
   14002b7d7:	add    BYTE PTR [rsi-0x41ff856e],ah
   14002b7dd:	stos   BYTE PTR es:[rdi],al
   14002b7de:	xchg   edx,eax
   14002b7df:	add    BYTE PTR [rsi-0x15ff594a],bh
   14002b7e5:	(bad)  
   14002b7e6:	(bad)  
   14002b7e7:	add    BYTE PTR [rsi-0x7dff113e],dl
   14002b7ed:	outs   dx,BYTE PTR ds:[rsi]
   14002b7ee:	rex.WRX add dl,r10b
   14002b7f1:	retf   0xbe
   14002b7f4:	(bad)  
   14002b7f5:	(bad)  
   14002b7f6:	(bad)  
   14002b7f7:	add    BYTE PTR [rsi+0x7200869e],ch
   14002b7fd:	stos   BYTE PTR es:[rdi],al
   14002b7fe:	out    0x0,al
   14002b800:	jb     0x14002b860
   14002b802:	ds add dl,al
   14002b805:	mov    dl,0x9a
   14002b807:	add    dh,bl
   14002b809:	(bad)  
   14002b80b:	add    BYTE PTR [rdx-0x39ffa58a],cl
   14002b811:	ret    0xba
   14002b814:	(bad)  
   14002b815:	jle    0x14002b801
   14002b817:	add    dl,dh
   14002b819:	repnz repnz add dl,dl
   14002b81d:	(bad)  
   14002b81e:	mov    BYTE PTR [rax],0xb2
   14002b821:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002b822:	xchg   edx,eax
   14002b823:	add    BYTE PTR [rdx-0x69ff9d82],bl
   14002b829:	mov    esi,0x9eb200e6
   14002b82e:	mov    al,BYTE PTR [rax]
   14002b830:	ss mov ch,dl
   14002b833:	add    BYTE PTR [rdx-0x65ff8972],ah
   14002b839:	(bad)  
   14002b83a:	data16 add BYTE PTR [rdx+0x7e00f2be],dl
   14002b841:	push   0x4a
   14002b843:	add    BYTE PTR [rdx-0x1ff9176],ah
   14002b849:	(bad)  
   14002b84a:	inc    BYTE PTR [rax]
   14002b84c:	ret    0xaab6
   14002b84f:	add    dh,al
   14002b851:	mov    dl,0x9e
   14002b853:	add    dl,ah
   14002b855:	loop   0x14002b839
   14002b857:	add    BYTE PTR [rsi-0x65ffa186],cl
   14002b85d:	mov    esi,0xa2b200ea
   14002b862:	mov    es,WORD PTR [rax]
   14002b864:	cmp    cl,BYTE PTR [rsi-0x7961ff16]
   14002b86a:	push   0x0
   14002b86c:	xchg   BYTE PTR [rsi-0x6d55ff12],dh
   14002b872:	jp     0x14002b874
   14002b874:	retf   0xa2b6
   14002b877:	add    dh,ch
   14002b879:	(bad)  
   14002b87a:	(bad)  
   14002b87b:	add    dh,cl
   14002b87d:	retf   0xc2
   14002b880:	sahf   
   14002b881:	(bad)  
   14002b882:	(bad)  
   14002b883:	add    BYTE PTR [rdx+0x7600869e],dh
   14002b889:	stos   BYTE PTR es:[rdi],al
   14002b88a:	out    0x0,al
	...
   14002bb18:	pop    rbp
   14002bb19:	pop    rbp
   14002bb1a:	pop    rbp
   14002bb1b:	pop    rbp
   14002bb1c:	pop    rbp
   14002bb1d:	pop    rbp
   14002bb1e:	pop    rbp
   14002bb1f:	pop    rbp
   14002bb20:	pop    rbp
   14002bb21:	pop    rbp
   14002bb22:	pop    rbp
   14002bb23:	pop    rbp
   14002bb24:	pop    rbp
   14002bb25:	pop    rbp
   14002bb26:	pop    rbp
   14002bb27:	pop    rbp
   14002bb28:	pop    rbp
   14002bb29:	pop    rbp
   14002bb2a:	pop    rbp
   14002bb2b:	pop    rbp
   14002bb2c:	pop    rbp
   14002bb2d:	pop    rbp
   14002bb2e:	pop    rbp
   14002bb2f:	pop    rbp
   14002bb30:	pop    rbp
	...
   14002bb45:	add    BYTE PTR [rax],al
   14002bb47:	pop    rbp
   14002bb48:	cmp    dl,BYTE PTR [rip+0x1212123e]        # 0x15214cd8c
   14002bb4e:	adc    dl,BYTE PTR [rdx]
   14002bb50:	adc    dl,BYTE PTR [rdx]
   14002bb52:	adc    dl,BYTE PTR [rdx]
   14002bb54:	adc    dl,BYTE PTR [rdx]
   14002bb56:	adc    dl,BYTE PTR [rdx]
   14002bb58:	adc    dl,BYTE PTR [rdx]
   14002bb5a:	adc    dl,BYTE PTR [rdx]
   14002bb5c:	adc    bh,BYTE PTR [rsi]
   14002bb5e:	adc    eax,0x331c2a3a
   14002bb63:	or     cl,BYTE PTR [rdx]
   14002bb65:	or     cl,BYTE PTR [rdx]
   14002bb67:	or     cl,BYTE PTR [rdx]
   14002bb69:	or     cl,BYTE PTR [rdx]
   14002bb6b:	or     cl,BYTE PTR [rdx]
   14002bb6d:	or     cl,BYTE PTR [rdx]
   14002bb6f:	or     cl,BYTE PTR [rdx]
   14002bb71:	or     cl,BYTE PTR [rdx]
   14002bb73:	or     cl,BYTE PTR [rdx]
   14002bb75:	xor    ebx,DWORD PTR [rdx+rbp*1]
   14002bb78:	sbb    BYTE PTR [rbx],al
   14002bb7a:	xor    esi,DWORD PTR [rbx]
   14002bb7c:	xor    edx,DWORD PTR [rdx]
   14002bb7e:	adc    dl,BYTE PTR [rdx]
   14002bb80:	adc    dl,BYTE PTR [rdx]
   14002bb82:	adc    dl,BYTE PTR [rdx]
   14002bb84:	adc    dl,BYTE PTR [rdx]
   14002bb86:	adc    dl,BYTE PTR [rdx]
   14002bb88:	adc    dh,BYTE PTR [rbx]
   14002bb8a:	xor    esi,DWORD PTR [rbx]
   14002bb8c:	xor    esi,DWORD PTR [rbx]
   14002bb8e:	add    ebx,DWORD PTR [rax]
   14002bb90:	rex.WX add rdx,QWORD PTR [rdx]
   14002bb93:	adc    cl,BYTE PTR [rdi+0x4d]
   14002bb96:	xor    BYTE PTR [rdi],dh
   14002bb98:	(bad)  
   14002bb99:	(bad)  
   14002bb9a:	(bad)  
   14002bb9b:	(bad)  
   14002bb9c:	(bad)  
   14002bb9d:	(bad)  
   14002bb9e:	(bad)  
   14002bb9f:	xor    BYTE PTR [rbp+0x4f],cl
   14002bba2:	adc    dl,BYTE PTR [rdx]
   14002bba4:	adc    dl,BYTE PTR [rdx]
   14002bba6:	add    ecx,DWORD PTR [rdx+0x35]
   14002bba9:	(bad)  
   14002bbaa:	adc    bh,BYTE PTR [rax+rdx*1]
   14002bbad:	push   rsp
   14002bbae:	and    ebx,DWORD PTR [rdi]
   14002bbb0:	(bad)  
   14002bbb1:	(bad)  
   14002bbb2:	(bad)  
   14002bbb3:	(bad)  
   14002bbb4:	(bad)  
   14002bbb5:	add    ebx,DWORD PTR [rdi]
   14002bbb7:	and    edx,DWORD PTR [rax+rdx*1+0x3c]
   14002bbbb:	adc    dl,BYTE PTR [rdx]
   14002bbbd:	adc    ch,BYTE PTR [rdi]
   14002bbbf:	xor    eax,0x4f122f07
   14002bbc4:	add    eax,DWORD PTR [rbx]
   14002bbc6:	add    ebp,DWORD PTR [rdi]
   14002bbc8:	es (bad) 
   14002bbca:	and    al,0x24
   14002bbcc:	rex.W (bad) 
   14002bbce:	(bad)  
   14002bbcf:	(bad)  
   14002bbd0:	add    eax,DWORD PTR [rbx]
   14002bbd2:	rex.WRXB adc r10b,BYTE PTR [r10]
   14002bbd5:	adc    ch,BYTE PTR [rdi]
   14002bbd7:	(bad)  
   14002bbd8:	cmp    eax,0x4f121203
   14002bbdd:	rex.WRXB cmp al,0x3
   14002bbe0:	push   rdx
   14002bbe1:	(bad)  
   14002bbe2:	(bad)  
   14002bbe3:	(bad)  
   14002bbe4:	sbb    al,0xb
   14002bbe6:	and    edx,DWORD PTR [rax]
   14002bbe8:	add    esp,DWORD PTR [rdx]
   14002bbea:	adc    dl,BYTE PTR [rdx]
   14002bbec:	adc    dl,BYTE PTR [rdx]
   14002bbee:	add    edi,DWORD PTR [rip+0x12120350]        # 0x15214bf44
   14002bbf4:	adc    dl,BYTE PTR [rdx]
   14002bbf6:	cmp    al,0xd
   14002bbf8:	add    al,0x24
   14002bbfa:	(bad)  
   14002bbfb:	(bad)  
   14002bbfc:	and    al,0x4
   14002bbfe:	add    ecx,DWORD PTR [rdi]
   14002bc00:	and    esp,DWORD PTR [rdx]
   14002bc02:	adc    dl,BYTE PTR [rdx]
   14002bc04:	adc    dl,BYTE PTR [rdx]
   14002bc06:	add    edx,DWORD PTR [rax+0x16]
   14002bc09:	add    esi,DWORD PTR [rbx]
   14002bc0b:	xor    esi,DWORD PTR [rbx]
   14002bc0d:	rex.WRXB and r8b,BYTE PTR [r10+0x8]
   14002bc11:	(bad)  
   14002bc12:	(bad)  
   14002bc13:	add    eax,DWORD PTR [rbx]
   14002bc15:	or     eax,DWORD PTR [rcx+0x3]
   14002bc18:	movlps QWORD PTR [rdi+0x12],xmm1
   14002bc1c:	xor    esi,DWORD PTR [rbx]
   14002bc1e:	add    edx,DWORD PTR [rsi]
   14002bc20:	sub    edi,DWORD PTR [rdx+rcx*1]
   14002bc23:	or     dh,BYTE PTR [rbx]
   14002bc25:	adc    cl,BYTE PTR [rbx+0xf]
   14002bc28:	andps  xmm2,XMMWORD PTR [rsp+rdx*2+0xf]
   14002bc2d:	push   rsp
   14002bc2e:	add    bh,BYTE PTR [rdi+rcx*1]
   14002bc31:	adc    edx,DWORD PTR [rdx]
   14002bc33:	xor    ecx,DWORD PTR [rdx]
   14002bc35:	or     bh,BYTE PTR [rbx+rbp*1]
   14002bc38:	sbb    esp,DWORD PTR [rdx]
   14002bc3a:	or     cl,BYTE PTR [rdx]
   14002bc3c:	or     dl,BYTE PTR [rdx]
   14002bc3e:	adc    ah,BYTE PTR [rcx]
   14002bc40:	sbb    DWORD PTR [rcx+rdx*1],edi
   14002bc43:	add    eax,0xd4f4f25
   14002bc48:	push   rdx
   14002bc49:	adc    dh,BYTE PTR [rbx]
   14002bc4b:	or     cl,BYTE PTR [rdx]
   14002bc4d:	or     ah,BYTE PTR [rdx]
   14002bc4f:	sbb    eax,DWORD PTR [rdi+0x4f]
   14002bc52:	rex
   14002bc53:	or     cl,BYTE PTR [rdx]
   14002bc56:	xor    edx,DWORD PTR [rdx]
   14002bc58:	adc    bh,BYTE PTR [rcx]
   14002bc5a:	rex.RX sub DWORD PTR [rcx],r15d
   14002bc5d:	adc    dl,BYTE PTR [rdx]
   14002bc5f:	adc    dl,BYTE PTR [rdx]
   14002bc61:	xor    ecx,DWORD PTR [rdx]
   14002bc63:	or     al,BYTE PTR [rax+0x40]
   14002bc66:	rex.WRXB
   14002bc67:	rex.RXB xor BYTE PTR [r15+0x40],r9b
   14002bc6b:	rex
   14002bc6c:	rex
   14002bc6d:	or     cl,BYTE PTR [rdx]
   14002bc70:	adc    dl,BYTE PTR [rbx+0x5c]
   14002bc73:	or     DWORD PTR [rdx],edx
   14002bc75:	adc    cl,BYTE PTR [rdx]
   14002bc77:	or     cl,BYTE PTR [rdx]
   14002bc79:	or     al,BYTE PTR [rax+0x40]
   14002bc7c:	rex
   14002bc7d:	rex
   14002bc7e:	rex.WRXB xor BYTE PTR [r14],r8b
   14002bc81:	adc    ch,BYTE PTR [rsi]
   14002bc83:	cs cs cs rex xor edi,DWORD PTR cs:[rdi]
   14002bc8a:	or     al,0x44
   14002bc8c:	(bad)  
   14002bc8d:	xor    ecx,DWORD PTR [rdx]
   14002bc8f:	rex
   14002bc90:	cs cs cs cs cs adc al,BYTE PTR cs:[rsi]
   14002bc98:	and    edx,DWORD PTR [rdx]
   14002bc9a:	cs cs cs cs cs or dl,BYTE PTR cs:[rcx+0x2d]
   14002bca3:	adc    ch,BYTE PTR [rsp+rdx*1]
   14002bca6:	xor    al,0x40
   14002bca8:	cs cs cs cs cs adc ah,BYTE PTR cs:[rbx]
   14002bcb0:	sub    BYTE PTR [rbx],dh
   14002bcb2:	sbb    eax,0x1d1d1d1d
   14002bcb7:	sbb    eax,0x14270a2e
   14002bcbc:	xor    ebp,DWORD PTR [rax+rax*2]
   14002bcbf:	cs sbb eax,0x1d1d1d1d
   14002bcc5:	sbb    eax,0x330e2833
   14002bcca:	sbb    eax,0x1d1d1d1d
   14002bccf:	sbb    eax,0x170a2e1d
   14002bcd4:	and    BYTE PTR [rax+0x2e],al
   14002bcd7:	sbb    eax,0x1d1d1d1d
   14002bcdc:	sbb    eax,0x310e331d
   14002bce1:	or     bl,BYTE PTR [rip+0x1d1d1d1d]        # 0x15d1fda04
   14002bce7:	sbb    eax,0x1a2e1d1d
   14002bcec:	(bad)  
   14002bced:	cs sbb eax,0x1d1d1d1d
   14002bcf3:	sbb    eax,0x310a1d1d
   14002bcf8:	add    DWORD PTR [rdx],ecx
   14002bcfa:	sbb    eax,0x4c4c4c4c
   14002bcff:	rex.WR
   14002bd00:	rex.WR
   14002bd01:	rex.WR sbb rax,0x1d1d2e2e
   14002bd07:	rex.WR
   14002bd08:	rex.WR
   14002bd09:	rex.WR
   14002bd0a:	rex.WR
   14002bd0b:	rex.WR
   14002bd0c:	rex.WR sbb rax,0x223b010a
   14002bd12:	sbb    eax,0x4c4c4c4c
   14002bd17:	rex.WR
   14002bd18:	rex.WR
   14002bd19:	rex.WR
   14002bd1a:	rex.WR
   14002bd1b:	rex.WR sbb rax,0x4c4c4c4c
   14002bd21:	rex.WR
   14002bd22:	rex.WR
   14002bd23:	rex.WR
   14002bd24:	rex.WR sbb rax,0x364e3b22
   14002bd2a:	pop    rax
   14002bd2b:	sbb    eax,0x1d1d1d1d
   14002bd30:	sbb    eax,0x1d1d1d1d
   14002bd35:	sbb    eax,0x1d1d1d1d
   14002bd3a:	sbb    eax,0x36581d1d
   14002bd3f:	rex.WRX pop rbp
   14002bd41:	push   rdi
   14002bd42:	push   rdi
   14002bd43:	push   rdi
   14002bd44:	push   rdi
   14002bd45:	push   rdi
   14002bd46:	push   rdi
   14002bd47:	push   rdi
   14002bd48:	push   rdi
   14002bd49:	push   rdi
   14002bd4a:	push   rdi
   14002bd4b:	push   rdi
   14002bd4c:	push   rdi
   14002bd4d:	push   rdi
   14002bd4e:	push   rdi
   14002bd4f:	push   rdi
   14002bd50:	push   rdi
   14002bd51:	push   rdi
   14002bd52:	push   rdi
   14002bd53:	push   rdi
   14002bd54:	push   rdi
   14002bd55:	push   rdi
   14002bd56:	push   rdi
   14002bd57:	pop    rbp
   14002bd58:	(bad)  
   14002bd59:	(bad)  
   14002bd5a:	(bad)  
   14002bd5b:	inc    DWORD PTR [rax+0xff0100]
   14002bd61:	add    BYTE PTR [rax],al
   14002bd63:	add    BYTE PTR [rax],0x0
	...
   14002bdb2:	add    BYTE PTR [rax],al
   14002bdb4:	add    BYTE PTR [rax],0x1
   14002bdb7:	add    BYTE PTR [rax],ch
   14002bdb9:	add    BYTE PTR [rax],al
   14002bdbb:	add    BYTE PTR [rax],dl
   14002bdbd:	add    BYTE PTR [rax],al
   14002bdbf:	add    BYTE PTR [rax],ah
   14002bdc1:	add    BYTE PTR [rax],al
   14002bdc3:	add    BYTE PTR [rcx],al
   14002bdc5:	add    BYTE PTR [rax],cl
	...
   14002bdd7:	add    BYTE PTR [rax],al
   14002bdd9:	add    DWORD PTR [rax],eax
   14002bddb:	add    BYTE PTR [rax],al
   14002bddd:	add    BYTE PTR [rax],al
   14002bddf:	add    BYTE PTR [rdx+0x5e],dh
   14002bde2:	ds add dh,al
   14002bde5:	mov    dl,0x9a
   14002bde7:	add    BYTE PTR [rsi],cl
   14002bde9:	jbe    0x14002bdd5
   14002bdeb:	add    dh,bl
   14002bded:	fcmovbe st,st(6)
   14002bdef:	add    BYTE PTR [rsi-0x6dff9172],ah
   14002bdf5:	jp     0x14002be51
   14002bdf7:	add    BYTE PTR [rdx-0x11ff1d4e],al
   14002bdfd:	out    dx,al
   14002bdfe:	out    dx,al
   14002bdff:	add    BYTE PTR [rsi-0x45ff795e],dh
   14002be05:	scas   al,BYTE PTR es:[rdi]
   14002be06:	(bad)  
   14002be07:	add    dh,al
   14002be09:	(bad)  
   14002be0b:	add    BYTE PTR [rsi+0x26006682],dl
   14002be11:	xchg   dl,ch
   14002be13:	add    BYTE PTR [rsi-0x29ff7d66],ch
   14002be19:	(bad)  
   14002be1a:	(bad)  
   14002be1b:	add    BYTE PTR [rsi-0x7dff554e],dh
   14002be21:	outs   dx,BYTE PTR ds:[rsi]
   14002be22:	rex.WRX add dl,r12b
   14002be25:	loop   0x14002be09
   14002be27:	add    BYTE PTR [rdx-0x5ff1546],cl
   14002be2d:	cli    
   14002be2e:	cli    
   14002be2f:	add    BYTE PTR [rdx],bl
   14002be31:	jle    0x14002be1d
   14002be33:	add    dh,bl
   14002be35:	(bad)  
   14002be37:	add    BYTE PTR [rdx-0x69ff856a],ch
   14002be3d:	jle    0x14002be9d
   14002be3f:	add    BYTE PTR [rsi-0x65ff6952],bh
   14002be45:	xchg   BYTE PTR [rsi+0x0],ch
   14002be48:	(bad)  
   14002be49:	mov    esi,0x667e00b2
   14002be4e:	rex.WX add dl,bl
   14002be51:	fcmovu st,st(2)
   14002be53:	add    BYTE PTR [rdx-0x71ff8972],ah
   14002be59:	jp     0x14002beb9
   14002be5b:	add    dh,dh
   14002be5d:	div    dh
   14002be5f:	add    BYTE PTR [rdx-0x19ff6d5a],bh
   14002be65:	out    0xe6,al
   14002be67:	add    BYTE PTR [rdx+0x3a006686],bl
   14002be6d:	mov    gs,esi
   14002be6f:	add    BYTE PTR [rsi-0x69ff7562],ch
   14002be75:	mov    esi,0x627600ea
   14002be7a:	rex.X add dl,cl
   14002be7d:	mov    dh,0x9e
   14002be7f:	add    BYTE PTR [rdx],dl
   14002be81:	jp     0x14002be6d
   14002be83:	add    BYTE PTR [rsi-0x7dffa586],dl
   14002be89:	mov    dh,0xea
   14002be8b:	add    dl,dh
   14002be8d:	repnz repnz add BYTE PTR [rsi+0x32008aa2],dh
   14002be95:	mov    ch,dl
   14002be97:	add    BYTE PTR [rsi-0x45ff7962],ch
   14002be9d:	shr    dl,cl
   14002be9f:	add    dh,al
   14002bea1:	mov    edx,0x728600aa
   14002bea6:	push   rsi
   14002bea7:	add    BYTE PTR [rsi-0x1ff1146],cl
   14002bead:	(bad)  
   14002beae:	inc    BYTE PTR [rax]
   14002beb0:	es (bad) 
   14002beb2:	out    0x0,al
   14002beb4:	retf   0xb6c2
   14002beb7:	add    dh,bl
   14002beb9:	fcmovu st,st(2)
   14002bebb:	add    BYTE PTR [rsi-0x15ff896e],ah
   14002bec1:	(bad)  
   14002bec2:	(bad)  
   14002bec3:	add    BYTE PTR [rsi+0x6a86],bl
	...
   14002c1dd:	add    BYTE PTR [rax],al
   14002c1df:	add    BYTE PTR [rdx],bh
	...
   14002c1ed:	add    BYTE PTR [rax],al
   14002c1ef:	cmp    ah,BYTE PTR [rsi]
   14002c1f1:	mov    rcx,db4
   14002c1f4:	and    DWORD PTR [rcx],esp
   14002c1f6:	and    DWORD PTR [rcx],esp
   14002c1f8:	and    DWORD PTR [rcx],esp
   14002c1fa:	and    DWORD PTR [rcx],esp
   14002c1fc:	and    DWORD PTR [rax],edi
   14002c1fe:	(bad)  
   14002c200:	sbb    edx,DWORD PTR [rip+0x4083021]        # 0x1440af227
   14002c206:	add    al,0x4
   14002c208:	add    al,0x4
   14002c20a:	add    al,0x4
   14002c20c:	cmp    BYTE PTR [rdi],al
   14002c20e:	adc    eax,0x211c101b
   14002c213:	adc    eax,0x1c1c1c15
   14002c218:	sbb    al,0x1c
   14002c21a:	sbb    al,0x1c
   14002c21c:	and    DWORD PTR [rcx],esp
   14002c21e:	sbb    al,0x10
   14002c220:	xor    DWORD PTR [rsi],ecx
   14002c222:	adc    DWORD PTR [rcx],edx
   14002c224:	adc    DWORD PTR [rdx],esp
   14002c226:	add    eax,0x11220505
   14002c22b:	(bad)  
   14002c22c:	adc    DWORD PTR cs:[rsi],ecx
   14002c22f:	xor    DWORD PTR [rsi],ebx
   14002c231:	sbb    al,0x21
   14002c233:	adc    DWORD PTR [rcx],edx
   14002c235:	xor    eax,0x1a1a3535
   14002c23a:	add    ecx,DWORD PTR [rsi]
   14002c23c:	(bad)  
   14002c23d:	and    al,0xe
   14002c23f:	(bad)  
   14002c240:	or     edx,DWORD PTR [rip+0x17052138]        # 0x15707e37e
   14002c246:	cmp    DWORD PTR [rcx],ebp
   14002c248:	add    eax,0x5210939
   14002c24d:	and    al,0xe
   14002c24f:	or     ebx,DWORD PTR [rcx]
   14002c251:	adc    eax,0x15153807
   14002c256:	adc    eax,0x11150634
   14002c25b:	(bad)  
   14002c25c:	and    al,0x11
   14002c25e:	adc    eax,0x7111d19
   14002c263:	(bad)  
   14002c264:	(bad)  
   14002c265:	(bad)  
   14002c266:	sub    eax,0x7070211
   14002c26b:	adc    DWORD PTR [rcx],esp
   14002c26d:	(bad)  
   14002c26e:	adc    DWORD PTR [rip+0x2b2b1116],ebx        # 0x16b2dd38a
   14002c274:	sub    eax,DWORD PTR [rdi]
   14002c276:	sub    BYTE PTR [rdi],al
   14002c278:	sub    BYTE PTR [rax],ch
   14002c27a:	(bad)  
   14002c27b:	(bad)  
   14002c27c:	sub    ebp,DWORD PTR [rbx]
   14002c27e:	adc    DWORD PTR [rsi],edx
   14002c280:	or     eax,0x1f1f1f21
   14002c285:	sub    esp,DWORD PTR [rip+0xc2a2114]        # 0x14c2ce39f
   14002c28b:	sub    ebx,DWORD PTR [rdi]
   14002c28d:	(bad)  
   14002c28e:	and    DWORD PTR [rip+0x1313382c],ecx        # 0x15315fac0
   14002c294:	adc    edx,DWORD PTR [rbx]
   14002c296:	(bad)  
   14002c297:	adc    cl,BYTE PTR [rdi+rax*1]
   14002c29a:	(bad)  
   14002c29b:	(bad)  
   14002c29c:	adc    edx,DWORD PTR [rbx]
   14002c29e:	cmp    BYTE PTR [rax+riz*1],ch
   14002c2a1:	(bad)  
   14002c2a2:	adc    edx,DWORD PTR [rbx]
   14002c2a4:	adc    edx,DWORD PTR [rbx]
   14002c2a6:	adc    ebp,DWORD PTR [rbx]
   14002c2a8:	xor    ah,BYTE PTR [rbx]
   14002c2aa:	(bad)  
   14002c2ab:	adc    edx,DWORD PTR [rbx]
   14002c2ad:	adc    eax,DWORD PTR [rdi]
   14002c2af:	and    BYTE PTR [rax],bl
   14002c2b1:	(bad)  
   14002c2b2:	adc    esi,DWORD PTR [rbx]
   14002c2b4:	xor    esi,DWORD PTR [rbx]
   14002c2b6:	xor    edx,DWORD PTR [rbx]
   14002c2b8:	(bad)  
   14002c2b9:	or     dl,BYTE PTR [rbx]
   14002c2bb:	xor    esi,DWORD PTR [rbx]
   14002c2bd:	adc    eax,DWORD PTR [rdi]
   14002c2bf:	sbb    BYTE PTR [rcx],al
   14002c2c1:	add    ebx,DWORD PTR [rdi]
   14002c2c3:	(bad)  
   14002c2c4:	(bad)  
   14002c2c5:	(bad)  
   14002c2c6:	(bad)  
   14002c2c7:	(bad)  
   14002c2c8:	(bad)  
   14002c2c9:	(bad)  
   14002c2ca:	(bad)  
   14002c2cb:	(bad)  
   14002c2cc:	(bad)  
   14002c2cd:	(bad)  
   14002c2ce:	add    eax,DWORD PTR [rcx]
   14002c2d0:	cmp    ah,BYTE PTR [rdi]
   14002c2d2:	(bad)  
   14002c2d3:	(bad)  
   14002c2d4:	(bad)  
   14002c2d5:	(bad)  
   14002c2d6:	(bad)  
   14002c2d7:	(bad)  
   14002c2d8:	(bad)  
   14002c2d9:	(bad)  
   14002c2da:	(bad)  
   14002c2db:	(bad)  
   14002c2dc:	(bad)  
   14002c2dd:	(bad)  
   14002c2de:	(bad)  
   14002c2df:	cmp    al,BYTE PTR [rax+0xb6aa01]
   14002c2e5:	add    BYTE PTR [rax+0x1],al
	...
   14002c31b:	add    BYTE PTR [rax+0x28000001],al
   14002c321:	add    BYTE PTR [rax],al
   14002c323:	add    BYTE PTR [rax],dh
   14002c325:	add    BYTE PTR [rax],al
   14002c327:	add    BYTE PTR [rax+0x0],ah
   14002c32a:	add    BYTE PTR [rax],al
   14002c32c:	add    DWORD PTR [rax],eax
   14002c32e:	and    BYTE PTR [rax],al
	...
   14002c350:	ins    DWORD PTR es:[rdi],dx
   14002c351:	push   rdi
   14002c352:	(bad)  
   14002c353:	xor    ebp,DWORD PTR [rbp+0x57]
   14002c356:	(bad)  
   14002c357:	xchg   esi,eax
   14002c358:	ins    DWORD PTR es:[rdi],dx
   14002c359:	push   rdi
   14002c35a:	(bad)  
   14002c35b:	jmp    FWORD PTR [rbp+0x57]
   14002c35e:	(bad)  
   14002c35f:	jmp    FWORD PTR [rbp+0x57]
   14002c362:	(bad)  
   14002c363:	jmp    FWORD PTR [rbp+0x57]
   14002c366:	(bad)  
   14002c367:	jmp    FWORD PTR [rbp+0x57]
   14002c36a:	(bad)  
   14002c36b:	jmp    FWORD PTR [rbp+0x57]
   14002c36e:	(bad)  
   14002c36f:	jmp    FWORD PTR [rbp+0x57]
   14002c372:	(bad)  
   14002c373:	jmp    FWORD PTR [rbp+0x57]
   14002c376:	(bad)  
   14002c377:	jmp    FWORD PTR [rbp+0x57]
   14002c37a:	(bad)  
   14002c37b:	jmp    FWORD PTR [rbp+0x57]
   14002c37e:	(bad)  
   14002c37f:	jmp    FWORD PTR [rbp+0x57]
   14002c382:	(bad)  
   14002c383:	jmp    FWORD PTR [rbp+0x57]
   14002c386:	(bad)  
   14002c387:	jmp    FWORD PTR [rbp+0x57]
   14002c38a:	(bad)  
   14002c38b:	jmp    FWORD PTR [rbp+0x57]
   14002c38e:	(bad)  
   14002c38f:	jmp    FWORD PTR [rbp+0x57]
   14002c392:	(bad)  
   14002c393:	jmp    FWORD PTR [rbp+0x57]
   14002c396:	(bad)  
   14002c397:	jmp    FWORD PTR [rbp+0x57]
   14002c39a:	(bad)  
   14002c39b:	jmp    FWORD PTR [rbp+0x57]
   14002c39e:	(bad)  
   14002c39f:	jmp    FWORD PTR [rbp+0x57]
   14002c3a2:	(bad)  
   14002c3a3:	jmp    FWORD PTR [rbp+0x57]
   14002c3a6:	(bad)  
   14002c3a7:	jmp    FWORD PTR [rbp+0x57]
   14002c3aa:	(bad)  
   14002c3ab:	jmp    FWORD PTR [rbp+0x57]
   14002c3ae:	(bad)  
   14002c3af:	jmp    FWORD PTR [rbp+0x57]
   14002c3b2:	(bad)  
   14002c3b3:	jmp    FWORD PTR [rbp+0x57]
   14002c3b6:	(bad)  
   14002c3b7:	jmp    FWORD PTR [rbp+0x57]
   14002c3ba:	(bad)  
   14002c3bb:	jmp    FWORD PTR [rbp+0x57]
   14002c3be:	(bad)  
   14002c3bf:	jmp    FWORD PTR [rbp+0x57]
   14002c3c2:	(bad)  
   14002c3c3:	jmp    FWORD PTR [rbp+0x57]
   14002c3c6:	(bad)  
   14002c3c7:	jmp    FWORD PTR [rbp+0x57]
   14002c3ca:	(bad)  
   14002c3cb:	jmp    FWORD PTR [rbp+0x57]
   14002c3ce:	(bad)  
   14002c3cf:	jmp    FWORD PTR [rbp+0x57]
   14002c3d2:	(bad)  
   14002c3d3:	jmp    FWORD PTR [rbp+0x57]
   14002c3d6:	(bad)  
   14002c3d7:	jmp    FWORD PTR [rbp+0x57]
   14002c3da:	(bad)  
   14002c3db:	jmp    FWORD PTR [rbp+0x57]
   14002c3de:	(bad)  
   14002c3df:	jmp    FWORD PTR [rbp+0x57]
   14002c3e2:	(bad)  
   14002c3e3:	jmp    FWORD PTR [rbp+0x57]
   14002c3e6:	(bad)  
   14002c3e7:	jmp    FWORD PTR [rbp+0x57]
   14002c3ea:	(bad)  
   14002c3eb:	jmp    FWORD PTR [rbp+0x57]
   14002c3ee:	(bad)  
   14002c3ef:	jmp    FWORD PTR [rbp+0x57]
   14002c3f2:	(bad)  
   14002c3f3:	jmp    FWORD PTR [rbp+0x57]
   14002c3f6:	(bad)  
   14002c3f7:	jmp    FWORD PTR [rbp+0x57]
   14002c3fa:	(bad)  
   14002c3fb:	xchg   esi,eax
   14002c3fc:	ins    DWORD PTR es:[rdi],dx
   14002c3fd:	push   rdi
   14002c3fe:	(bad)  
   14002c3ff:	xor    eax,DWORD PTR [rax]
	...
   14002c409:	add    BYTE PTR [rax],al
   14002c40b:	add    BYTE PTR [rsi+0x58],ch
   14002c40e:	cmp    DWORD PTR [rsi+0x6f],esp
   14002c411:	pop    rcx
   14002c412:	cmp    bh,ah
   14002c414:	xchg   edi,eax
   14002c415:	mov    es,WORD PTR [rcx-0x1a1a1a01]
   14002c41b:	(bad)  
   14002c41c:	jmp    0x12a02ae0a
   14002c421:	jmp    0x129ecc40f
   14002c426:	jmp    0x129ecae2a
   14002c42b:	(bad)  
   14002c42c:	jmp    0x12a02ae1a
   14002c431:	jmp    0x129ecc41f
   14002c436:	jmp    0x129ecae3a
   14002c43b:	(bad)  
   14002c43c:	jmp    0x12a02ae2a
   14002c441:	jmp    0x129ecc42f
   14002c446:	jmp    0x129ecae4a
   14002c44b:	(bad)  
   14002c44c:	jmp    0x12a02ae3a
   14002c451:	jmp    0x129ecc43f
   14002c456:	jmp    0x129ecae5a
   14002c45b:	(bad)  
   14002c45c:	jmp    0x12a02ae4a
   14002c461:	jmp    0x129ecc44f
   14002c466:	jmp    0x129ecae6a
   14002c46b:	(bad)  
   14002c46c:	jmp    0x12a02ae5a
   14002c471:	jmp    0x129ecc45f
   14002c476:	jmp    0x129ecae7a
   14002c47b:	(bad)  
   14002c47c:	jmp    0x12a02ae6a
   14002c481:	jmp    0x129ecc46f
   14002c486:	jmp    0x129ecae8a
   14002c48b:	(bad)  
   14002c48c:	jmp    0x12a02ae7a
   14002c491:	jmp    0x129ecc47f
   14002c496:	jmp    0x129ecae9a
   14002c49b:	(bad)  
   14002c49c:	jmp    0x12a02ae8a
   14002c4a1:	jmp    0x129ecc48f
   14002c4a6:	jmp    0x129ecaeaa
   14002c4ab:	(bad)  
   14002c4ac:	jmp    0x12a02ae9a
   14002c4b1:	jmp    0x126e9c49f
   14002c4b6:	out    0xff,al
   14002c4b8:	xchg   edi,eax
   14002c4b9:	mov    es,WORD PTR [rcx+0x3a596fff]
   14002c4bf:	cld    
   14002c4c0:	outs   dx,BYTE PTR ds:[rsi]
   14002c4c1:	pop    rax
   14002c4c2:	cmp    DWORD PTR [rsi+0x0],esp
   14002c4c5:	add    BYTE PTR [rax],al
   14002c4c7:	add    BYTE PTR [rax+0x5a],dh
   14002c4ca:	cmp    ah,BYTE PTR [rcx]
   14002c4cc:	jno    0x14002c529
   14002c4ce:	cmp    edi,ecx
   14002c4d0:	(bad)  
   14002c4d1:	sar    BYTE PTR [rdx-0x12121201],0xff
   14002c4d8:	lock lock lock push rcx
   14002c4dd:	icebp  
   14002c4de:	icebp  
   14002c4df:	push   rcx
   14002c4e1:	icebp  
   14002c4e2:	icebp  
   14002c4e3:	push   rcx
   14002c4e5:	icebp  
   14002c4e6:	icebp  
   14002c4e7:	push   rcx
   14002c4e9:	icebp  
   14002c4ea:	icebp  
   14002c4eb:	push   rcx
   14002c4ed:	icebp  
   14002c4ee:	icebp  
   14002c4ef:	push   rcx
   14002c4f1:	icebp  
   14002c4f2:	icebp  
   14002c4f3:	push   rcx
   14002c4f5:	icebp  
   14002c4f6:	icebp  
   14002c4f7:	push   rcx
   14002c4f9:	icebp  
   14002c4fa:	icebp  
   14002c4fb:	push   rcx
   14002c4fd:	icebp  
   14002c4fe:	icebp  
   14002c4ff:	push   rcx
   14002c501:	icebp  
   14002c502:	icebp  
   14002c503:	push   rcx
   14002c505:	icebp  
   14002c506:	icebp  
   14002c507:	push   rcx
   14002c509:	icebp  
   14002c50a:	icebp  
   14002c50b:	push   rcx
   14002c50d:	icebp  
   14002c50e:	icebp  
   14002c50f:	push   rcx
   14002c511:	icebp  
   14002c512:	icebp  
   14002c513:	push   rcx
   14002c515:	icebp  
   14002c516:	icebp  
   14002c517:	push   rcx
   14002c519:	icebp  
   14002c51a:	icebp  
   14002c51b:	push   rcx
   14002c51d:	icebp  
   14002c51e:	icebp  
   14002c51f:	push   rcx
   14002c521:	icebp  
   14002c522:	icebp  
   14002c523:	push   rcx
   14002c525:	icebp  
   14002c526:	icebp  
   14002c527:	push   rcx
   14002c529:	icebp  
   14002c52a:	icebp  
   14002c52b:	push   rcx
   14002c52d:	icebp  
   14002c52e:	icebp  
   14002c52f:	push   rcx
   14002c531:	icebp  
   14002c532:	icebp  
   14002c533:	push   rcx
   14002c535:	icebp  
   14002c536:	icebp  
   14002c537:	push   rcx
   14002c539:	icebp  
   14002c53a:	icebp  
   14002c53b:	push   rcx
   14002c53d:	icebp  
   14002c53e:	icebp  
   14002c53f:	push   rcx
   14002c541:	icebp  
   14002c542:	icebp  
   14002c543:	push   rcx
   14002c545:	icebp  
   14002c546:	icebp  
   14002c547:	push   rcx
   14002c549:	icebp  
   14002c54a:	icebp  
   14002c54b:	push   rcx
   14002c54d:	icebp  
   14002c54e:	icebp  
   14002c54f:	push   rcx
   14002c551:	icebp  
   14002c552:	icebp  
   14002c553:	push   rcx
   14002c555:	icebp  
   14002c556:	icebp  
   14002c557:	push   rcx
   14002c559:	icebp  
   14002c55a:	icebp  
   14002c55b:	push   rcx
   14002c55d:	icebp  
   14002c55e:	icebp  
   14002c55f:	push   rcx
   14002c561:	icebp  
   14002c562:	icebp  
   14002c563:	push   rcx
   14002c565:	icebp  
   14002c566:	icebp  
   14002c567:	push   rcx
   14002c569:	icebp  
   14002c56a:	icebp  
   14002c56b:	push   rcx
   14002c56d:	icebp  
   14002c56e:	icebp  
   14002c56f:	push   rcx
   14002c571:	icebp  
   14002c572:	icebp  
   14002c573:	push   rax
   14002c575:	lock lock (bad) 
   14002c578:	in     eax,dx
   14002c579:	in     eax,dx
   14002c57a:	in     eax,dx
   14002c57b:	inc    esp
   14002c57d:	sar    BYTE PTR [rdx+0x3b5b71ff],0xf9
   14002c584:	jo     0x14002c5e0
   14002c586:	cmp    ah,BYTE PTR [rcx]
   14002c588:	jno    0x14002c5e5
   14002c58a:	cmp    al,0x78
   14002c58c:	fwait
   14002c58d:	nop
   14002c58e:	jg     0x14002c58f
   14002c590:	(bad)  
   14002c591:	(bad)  
   14002c592:	(bad)  
   14002c593:	push   rax
   14002c595:	lock lock push rcx
   14002c599:	icebp  
   14002c59a:	icebp  
   14002c59b:	push   rcx
   14002c59d:	icebp  
   14002c59e:	icebp  
   14002c59f:	push   rax
   14002c5a1:	lock lock push rax
   14002c5a5:	lock lock push rax
   14002c5a9:	lock lock push rax
   14002c5ad:	lock lock push rax
   14002c5b1:	lock lock push rax
   14002c5b5:	lock lock push rax
   14002c5b9:	lock lock push rax
   14002c5bd:	lock lock push rax
   14002c5c1:	lock lock push rax
   14002c5c5:	lock lock push rax
   14002c5c9:	lock lock push rax
   14002c5cd:	lock lock push rax
   14002c5d1:	lock lock push rax
   14002c5d5:	lock lock push rax
   14002c5d9:	lock lock push rax
   14002c5dd:	lock lock push rax
   14002c5e1:	lock lock push rax
   14002c5e5:	lock lock push rax
   14002c5e9:	lock lock push rax
   14002c5ed:	lock lock push rax
   14002c5f1:	lock lock push rax
   14002c5f5:	lock lock push rax
   14002c5f9:	lock lock push rax
   14002c5fd:	lock lock push rax
   14002c601:	lock lock push rax
   14002c605:	lock lock push rax
   14002c609:	lock lock push rax
   14002c60d:	lock lock push rax
   14002c611:	lock lock push rax
   14002c615:	lock lock push rax
   14002c619:	lock lock push rax
   14002c61d:	lock lock push rax
   14002c621:	lock lock push rax
   14002c625:	lock lock push rax
   14002c629:	lock lock push rax
   14002c62d:	lock lock push rax
   14002c631:	lock lock push rcx
   14002c635:	icebp  
   14002c636:	icebp  
   14002c637:	push   rax
   14002c639:	lock lock (bad) 
   14002c63c:	(bad)  
   14002c63d:	(bad)  
   14002c63e:	(bad)  
   14002c63f:	call   FWORD PTR [rbx+0x71ff7f90]
   14002c645:	pop    rbx
   14002c646:	cmp    al,0x78
   14002c648:	jb     0x14002c6a7
   14002c64a:	ds dec edx
   14002c64d:	mov    esp,0xedededff
   14002c653:	push   rax
   14002c655:	lock lock push rax
   14002c659:	lock lock push rax
   14002c65d:	lock lock (bad) 
   14002c660:	in     eax,dx
   14002c661:	in     eax,dx
   14002c662:	in     eax,dx
   14002c663:	(bad)  
   14002c664:	in     eax,dx
   14002c665:	in     eax,dx
   14002c666:	in     eax,dx
   14002c667:	(bad)  
   14002c668:	in     eax,dx
   14002c669:	in     eax,dx
   14002c66a:	in     eax,dx
   14002c66b:	(bad)  
   14002c66c:	in     eax,dx
   14002c66d:	in     eax,dx
   14002c66e:	in     eax,dx
   14002c66f:	(bad)  
   14002c670:	in     eax,dx
   14002c671:	in     eax,dx
   14002c672:	in     eax,dx
   14002c673:	(bad)  
   14002c674:	in     eax,dx
   14002c675:	in     eax,dx
   14002c676:	in     eax,dx
   14002c677:	(bad)  
   14002c678:	in     eax,dx
   14002c679:	in     eax,dx
   14002c67a:	in     eax,dx
   14002c67b:	(bad)  
   14002c67c:	in     eax,dx
   14002c67d:	in     eax,dx
   14002c67e:	in     eax,dx
   14002c67f:	(bad)  
   14002c680:	in     eax,dx
   14002c681:	in     eax,dx
   14002c682:	in     eax,dx
   14002c683:	(bad)  
   14002c684:	in     eax,dx
   14002c685:	in     eax,dx
   14002c686:	in     eax,dx
   14002c687:	(bad)  
   14002c688:	in     eax,dx
   14002c689:	in     eax,dx
   14002c68a:	in     eax,dx
   14002c68b:	(bad)  
   14002c68c:	in     eax,dx
   14002c68d:	in     eax,dx
   14002c68e:	in     eax,dx
   14002c68f:	(bad)  
   14002c690:	in     eax,dx
   14002c691:	in     eax,dx
   14002c692:	in     eax,dx
   14002c693:	(bad)  
   14002c694:	in     eax,dx
   14002c695:	in     eax,dx
   14002c696:	in     eax,dx
   14002c697:	(bad)  
   14002c698:	in     eax,dx
   14002c699:	in     eax,dx
   14002c69a:	in     eax,dx
   14002c69b:	(bad)  
   14002c69c:	in     eax,dx
   14002c69d:	in     eax,dx
   14002c69e:	in     eax,dx
   14002c69f:	(bad)  
   14002c6a0:	in     eax,dx
   14002c6a1:	in     eax,dx
   14002c6a2:	in     eax,dx
   14002c6a3:	(bad)  
   14002c6a4:	in     eax,dx
   14002c6a5:	in     eax,dx
   14002c6a6:	in     eax,dx
   14002c6a7:	(bad)  
   14002c6a8:	in     eax,dx
   14002c6a9:	in     eax,dx
   14002c6aa:	in     eax,dx
   14002c6ab:	(bad)  
   14002c6ac:	in     eax,dx
   14002c6ad:	in     eax,dx
   14002c6ae:	in     eax,dx
   14002c6af:	(bad)  
   14002c6b0:	in     eax,dx
   14002c6b1:	in     eax,dx
   14002c6b2:	in     eax,dx
   14002c6b3:	(bad)  
   14002c6b4:	in     eax,dx
   14002c6b5:	in     eax,dx
   14002c6b6:	in     eax,dx
   14002c6b7:	(bad)  
   14002c6b8:	in     eax,dx
   14002c6b9:	in     eax,dx
   14002c6ba:	in     eax,dx
   14002c6bb:	(bad)  
   14002c6bc:	in     eax,dx
   14002c6bd:	in     eax,dx
   14002c6be:	in     eax,dx
   14002c6bf:	(bad)  
   14002c6c0:	in     eax,dx
   14002c6c1:	in     eax,dx
   14002c6c2:	in     eax,dx
   14002c6c3:	(bad)  
   14002c6c4:	in     eax,dx
   14002c6c5:	in     eax,dx
   14002c6c6:	in     eax,dx
   14002c6c7:	(bad)  
   14002c6c8:	in     eax,dx
   14002c6c9:	in     eax,dx
   14002c6ca:	in     eax,dx
   14002c6cb:	(bad)  
   14002c6cc:	in     eax,dx
   14002c6cd:	in     eax,dx
   14002c6ce:	in     eax,dx
   14002c6cf:	(bad)  
   14002c6d0:	in     eax,dx
   14002c6d1:	in     eax,dx
   14002c6d2:	in     eax,dx
   14002c6d3:	(bad)  
   14002c6d4:	in     eax,dx
   14002c6d5:	in     eax,dx
   14002c6d6:	in     eax,dx
   14002c6d7:	(bad)  
   14002c6d8:	in     eax,dx
   14002c6d9:	in     eax,dx
   14002c6da:	in     eax,dx
   14002c6db:	(bad)  
   14002c6dc:	in     eax,dx
   14002c6dd:	in     eax,dx
   14002c6de:	in     eax,dx
   14002c6df:	(bad)  
   14002c6e0:	in     eax,dx
   14002c6e1:	in     eax,dx
   14002c6e2:	in     eax,dx
   14002c6e3:	(bad)  
   14002c6e4:	in     eax,dx
   14002c6e5:	in     eax,dx
   14002c6e6:	in     eax,dx
   14002c6e7:	(bad)  
   14002c6e8:	in     eax,dx
   14002c6e9:	in     eax,dx
   14002c6ea:	in     eax,dx
   14002c6eb:	(bad)  
   14002c6ec:	in     eax,dx
   14002c6ed:	in     eax,dx
   14002c6ee:	in     eax,dx
   14002c6ef:	(bad)  
   14002c6f0:	in     eax,dx
   14002c6f1:	in     eax,dx
   14002c6f2:	in     eax,dx
   14002c6f3:	push   rax
   14002c6f5:	lock lock push rax
   14002c6f9:	lock lock (bad) 
   14002c6fc:	in     eax,dx
   14002c6fd:	in     eax,dx
   14002c6fe:	in     eax,dx
   14002c6ff:	dec    edx
   14002c701:	mov    esp,0x3e5d72ff
   14002c707:	push   QWORD PTR [rsi+rbx*2+0x3f]
   14002c70b:	(bad)  
   14002c70c:	(bad)  
   14002c70e:	fdivp  st(7),st
   14002c710:	in     eax,dx
   14002c711:	in     eax,dx
   14002c712:	in     eax,dx
   14002c713:	(bad)  
   14002c714:	in     eax,dx
   14002c715:	in     eax,dx
   14002c716:	in     eax,dx
   14002c717:	(bad)  
   14002c718:	in     eax,dx
   14002c719:	in     eax,dx
   14002c71a:	in     eax,dx
   14002c71b:	(bad)  
   14002c71c:	in     eax,dx
   14002c71d:	in     eax,dx
   14002c71e:	in     eax,dx
   14002c71f:	(bad)  
   14002c720:	jmp    0x14002c70d
   14002c722:	jmp    0x14002c723
   14002c724:	jmp    0x14002c711
   14002c726:	jmp    0x14002c727
   14002c728:	jmp    0x14002c715
   14002c72a:	jmp    0x14002c72b
   14002c72c:	jmp    0x14002c719
   14002c72e:	(bad)  
   14002c72f:	jmp    rdi
   14002c731:	out    0xe5,al
   14002c733:	jmp    rsp
   14002c735:	loope  0x14002c715
   14002c737:	(bad)  
   14002c738:	fcmovbe st,st(4)
   14002c73a:	int    0xff
   14002c73c:	retf   0xb3c0
   14002c73f:	inc    eax
   14002c741:	mov    dl,0xa1
   14002c743:	jmp    FWORD PTR [rsi-0x56007964]
   14002c749:	xchg   ebp,eax
   14002c74a:	jnp    0x14002c74b
   14002c74c:	movabs al,ds:0x97ff5f7e98ff6d89
   14002c755:	jge    0x14002c7b6
   14002c757:	call   QWORD PTR [rdi-0x6800a083]
   14002c75d:	jge    0x14002c7be
   14002c75f:	call   QWORD PTR [rdi-0x6800a083]
   14002c765:	jge    0x14002c7c6
   14002c767:	call   QWORD PTR [rdi-0x6800a083]
   14002c76d:	jge    0x14002c7ce
   14002c76f:	call   QWORD PTR [rdi-0x6500a183]
   14002c775:	and    DWORD PTR [rdi+rdi*8-0x5c],0xadff738e
   14002c77d:	(bad)  
   14002c77e:	(bad)  
   14002c77f:	(bad)  
   14002c780:	mov    edx,0xc4ff96a9
   14002c785:	mov    bh,0xa8
   14002c787:	(bad)  
   14002c788:	(bad)  
   14002c78a:	int3   
   14002c78b:	jmp    rsi
   14002c78d:	in     al,0xe1
   14002c78f:	(bad)  
   14002c790:	(bad)  
   14002c791:	jmp    0x12beec77d
   14002c796:	jmp    0x14002c797
   14002c798:	jmp    0x14002c785
   14002c79a:	jmp    0x14002c79b
   14002c79c:	jmp    0x14002c789
   14002c79e:	jmp    0x14002c79f
   14002c7a0:	jmp    0x14002c78d
   14002c7a2:	jmp    0x14002c7a3
   14002c7a4:	jmp    0x14002c791
   14002c7a6:	jmp    0x14002c7a7
   14002c7a8:	jmp    0x14002c795
   14002c7aa:	jmp    0x14002c7ab
   14002c7ac:	jmp    0x14002c799
   14002c7ae:	jmp    0x14002c7af
   14002c7b0:	jmp    0x14002c79d
   14002c7b2:	jmp    0x14002c7b3
   14002c7b4:	in     eax,dx
   14002c7b5:	in     eax,dx
   14002c7b6:	in     eax,dx
   14002c7b7:	(bad)  
   14002c7b8:	in     eax,dx
   14002c7b9:	in     eax,dx
   14002c7ba:	in     eax,dx
   14002c7bb:	(bad)  
   14002c7bc:	in     eax,dx
   14002c7bd:	in     eax,dx
   14002c7be:	in     eax,dx
   14002c7bf:	(bad)  
   14002c7c0:	(bad)  
   14002c7c2:	fdivp  st(7),st
   14002c7c4:	je     0x14002c824
   14002c7c6:	(bad)  
   14002c7c7:	push   QWORD PTR [rsi+0x60]
   14002c7ca:	rex.B (bad) 
   14002c7cc:	fstp   st(5)
   14002c7ce:	(bad)  
   14002c7d0:	jmp    0x14002c7bd
   14002c7d2:	jmp    0x14002c7d3
   14002c7d4:	jmp    0x14002c7c1
   14002c7d6:	jmp    0x14002c7d7
   14002c7d8:	jmp    0x14002c7c5
   14002c7da:	jmp    0x14002c7db
   14002c7dc:	jmp    0x14002c7c9
   14002c7de:	jmp    0x14002c7df
   14002c7e0:	jmp    0x12a02b1ce
   14002c7e5:	jmp    0x121e6c7d3
   14002c7ea:	fdivp  st(7),st
   14002c7ec:	(bad)  
   14002c7ee:	int    0xff
   14002c7f0:	mov    edi,0xacffa1b1
   14002c7f5:	cdq    
   14002c7f6:	(bad)  
   14002c7f7:	jmp    QWORD PTR [rbx-0x62008b72]
   14002c7fd:	xchg   DWORD PTR [rdx-0x1],ebp
   14002c800:	cdq    
   14002c801:	(bad)  
   14002c802:	call   QWORD PTR fs:[rbp-0x6a00a385]
   14002c809:	jnp    0x14002c867
   14002c80b:	call   QWORD PTR [rbp-0x6900a385]
   14002c811:	jge    0x14002c871
   14002c813:	call   QWORD PTR [rsi-0x6900a083]
   14002c819:	jge    0x14002c87a
   14002c81b:	call   QWORD PTR [rsi-0x6900a083]
   14002c821:	jge    0x14002c882
   14002c823:	call   QWORD PTR [rsi-0x6800a083]
   14002c829:	jge    0x14002c88a
   14002c82b:	call   QWORD PTR [rsi-0x6a00a083]
   14002c831:	jnp    0x14002c890
   14002c833:	call   QWORD PTR [rbp-0x6a00a385]
   14002c839:	jnp    0x14002c897
   14002c83b:	call   QWORD PTR [rcx+rdi*2+0x7d97ff5a]
   14002c842:	pop    rdi
   14002c843:	call   FWORD PTR [rbx-0x5d00987c]
   14002c849:	mov    WORD PTR [rcx-0x1],?
   14002c84c:	mov    dl,0xa1
   14002c84e:	mov    edi,edi
   14002c850:	retf   0xb4c0
   14002c853:	jmp    rdx
   14002c855:	(bad)  
   14002c857:	(bad)  
   14002c858:	call   0x12a02b145
   14002c85d:	jmp    0x129ecc84b
   14002c862:	jmp    0x129ecb266
   14002c867:	(bad)  
   14002c868:	jmp    0x12a02b256
   14002c86d:	jmp    0x129ecc85b
   14002c872:	jmp    0x12beeb476
   14002c877:	(bad)  
   14002c878:	jmp    0x14002c865
   14002c87a:	jmp    0x14002c87b
   14002c87c:	jmp    0x14002c869
   14002c87e:	jmp    0x14002c87f
   14002c880:	fstp   st(5)
   14002c882:	(bad)  
   14002c884:	jbe    0x14002c8e6
   14002c886:	push   QWORD PTR [r15+0x62]
   14002c88a:	rex.XB (bad) 
   14002c88c:	fcmovnu st,st(3)
   14002c88e:	(bad)  
   14002c890:	jmp    0x12a02b27e
   14002c895:	jmp    0x129ecc883
   14002c89a:	jmp    0x129ecb29e
   14002c89f:	(bad)  
   14002c8a0:	call   0x12902b18d
   14002c8a5:	call   0xcba3c892
   14002c8aa:	jno    0x14002c8ab
   14002c8ac:	xchg   ebx,eax
   14002c8ad:	jns    0x14002c909
   14002c8af:	call   QWORD PTR [rax-0x6f00aa8b]
   14002c8b5:	jne    0x14002c90d
   14002c8b7:	call   QWORD PTR [rsi-0x61009f83]
   14002c8bd:	xchg   DWORD PTR [rdi+rdi*8-0x54],ebp
   14002c8c1:	(bad)  
   14002c8c2:	cmp    edi,0xffffffbe
   14002c8c5:	mov    dl,0xa1
   14002c8c7:	inc    esi
   14002c8c9:	mov    esp,0xbfc8ffaf
   14002c8ce:	mov    dl,0xff
   14002c8d0:	xlat   BYTE PTR ds:[rbx]
   14002c8d1:	ror    edx,1
   14002c8d3:	(bad)  
   14002c8d4:	fcmovbe st,st(6)
   14002c8d6:	sar    bh,1
   14002c8d8:	fcmovbe st,st(6)
   14002c8da:	sar    bh,1
   14002c8dc:	fcmovbe st,st(6)
   14002c8de:	sar    bh,1
   14002c8e0:	fcmovbe st,st(6)
   14002c8e2:	sar    bh,1
   14002c8e4:	fcmovbe st,st(6)
   14002c8e6:	sar    bh,1
   14002c8e8:	fcmovnbe st,st(7)
   14002c8ea:	sar    edi,1
   14002c8ec:	fcom   st(2)
   14002c8ee:	int3   
   14002c8ef:	dec    ebp
   14002c8f1:	(bad)  
   14002c8f2:	mov    ecx,0xb1bec8ff
   14002c8f7:	inc    esi
   14002c8f9:	mov    ebx,0xabb9ffae
   14002c8fe:	cdq    
   14002c8ff:	push   QWORD PTR [rcx-0x5400735f]
   14002c905:	cwde   
   14002c906:	(bad)  
   14002c907:	call   FWORD PTR [rbx-0x6900967b]
   14002c90d:	jge    0x14002c96f
   14002c90f:	call   QWORD PTR [rsi-0x5d00a083]
   14002c915:	lea    esi,[rdi+rdi*8-0x34]
   14002c919:	(bad)  
   14002c91a:	mov    ecx,0xe4e6e7ff
   14002c91f:	(bad)  
   14002c920:	call   0x12902b20d
   14002c925:	call   0x128ebc912
   14002c92a:	call   0x128ebb22e
   14002c92f:	(bad)  
   14002c930:	call   0x12a02b21d
   14002c935:	jmp    0x129ecc923
   14002c93a:	jmp    0x129ecb33e
   14002c93f:	(bad)  
   14002c940:	fcmovnu st,st(3)
   14002c942:	(bad)  
   14002c944:	ja     0x14002c9a8
   14002c946:	rex.XB (bad) 
   14002c948:	jns    0x14002c9ae
   14002c94a:	rex.RB (bad) 
   14002c94c:	fcmovu st,st(2)
   14002c94e:	(bad)  
   14002c950:	call   0x12902b23d
   14002c955:	call   0x128ebc942
   14002c95a:	call   0x128ebb25e
   14002c95f:	jmp    rdi
   14002c961:	out    0xe7,eax
   14002c963:	jmp    rdi
   14002c965:	out    0xe7,eax
   14002c967:	jmp    QWORD PTR [rbp-0x6b00876f]
   14002c96d:	jnp    0x14002c9cc
   14002c96f:	dec    DWORD PTR [rsi-0x6800ac8d]
   14002c975:	and    BYTE PTR [rbx-0x1],0xcd
   14002c979:	(bad)  
   14002c97a:	mov    edx,0xe7e7e7ff
   14002c97f:	jmp    rdi
   14002c981:	out    0xe7,eax
   14002c983:	jmp    rdi
   14002c985:	out    0xe7,eax
   14002c987:	jmp    rdi
   14002c989:	out    0xe7,eax
   14002c98b:	jmp    rdi
   14002c98d:	out    0xe7,eax
   14002c98f:	jmp    rdi
   14002c991:	out    0xe7,eax
   14002c993:	jmp    rdi
   14002c995:	out    0xe7,eax
   14002c997:	jmp    rdi
   14002c999:	out    0xe7,eax
   14002c99b:	jmp    rdi
   14002c99d:	out    0xe7,eax
   14002c99f:	jmp    rdi
   14002c9a1:	out    0xe7,eax
   14002c9a3:	jmp    rdi
   14002c9a5:	out    0xe7,eax
   14002c9a7:	jmp    rdi
   14002c9a9:	out    0xe7,eax
   14002c9ab:	jmp    rdi
   14002c9ad:	out    0xe7,eax
   14002c9af:	jmp    rdi
   14002c9b1:	out    0xe7,eax
   14002c9b3:	jmp    rdi
   14002c9b5:	out    0xe7,eax
   14002c9b7:	jmp    rdi
   14002c9b9:	out    0xe7,eax
   14002c9bb:	jmp    rdi
   14002c9bd:	out    0xe7,eax
   14002c9bf:	jmp    rdi
   14002c9c1:	out    0xe7,eax
   14002c9c3:	jmp    rdi
   14002c9c5:	out    0xe6,eax
   14002c9c7:	jmp    rbp
   14002c9c9:	in     eax,0xe3
   14002c9cb:	(bad)  
   14002c9cc:	(bad)  
   14002c9ce:	fdivr  st,st(7)
   14002c9d0:	retf   
   14002c9d1:	ret    0xffb7
   14002c9d4:	test   eax,0x9bff7f96
   14002c9d9:	test   DWORD PTR [rcx-0x1],ebp
   14002c9dc:	(bad)  
   14002c9dd:	(bad)  
   14002c9de:	(bad)  
   14002c9df:	jmp    rsi
   14002c9e1:	out    0xe6,al
   14002c9e3:	jmp    rdi
   14002c9e5:	out    0xe7,eax
   14002c9e7:	jmp    rdi
   14002c9e9:	out    0xe7,eax
   14002c9eb:	jmp    rdi
   14002c9ed:	out    0xe7,eax
   14002c9ef:	jmp    rdi
   14002c9f1:	out    0xe7,eax
   14002c9f3:	(bad)  
   14002c9f4:	call   0x12902b2e1
   14002c9f9:	call   0x128ebc9e6
   14002c9fe:	call   0x11adda502
   14002ca03:	(bad)  
   14002ca04:	jns    0x14002ca6a
   14002ca06:	rex.RB (bad) 
   14002ca08:	jnp    0x14002ca70
   14002ca0a:	rex.RXB (bad) 
   14002ca0c:	(bad)  
   14002ca0e:	fcos   
   14002ca10:	out    0xe7,eax
   14002ca12:	out    0xff,eax
   14002ca14:	out    0xe7,eax
   14002ca16:	out    0xff,eax
   14002ca18:	out    0xe7,eax
   14002ca1a:	out    0xff,eax
   14002ca1c:	out    0xe7,eax
   14002ca1e:	out    0xff,eax
   14002ca20:	out    0xe6,al
   14002ca22:	out    0xff,al
   14002ca24:	out    0xe6,al
   14002ca26:	out    0xff,al
   14002ca28:	loope  0x14002ca0a
   14002ca2a:	(bad)  
   14002ca2c:	retf   
   14002ca2d:	ret    
   14002ca2e:	mov    eax,0x7992a5ff
   14002ca33:	call   FWORD PTR [rdx-0x4a00977c]
   14002ca39:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002ca3a:	xchg   ebx,eax
   14002ca3b:	dec    esi
   14002ca3d:	(bad)  
   14002ca3e:	mov    ebp,0xccd2d6ff
   14002ca43:	jmp    rsp
   14002ca45:	in     al,0xe2
   14002ca47:	jmp    rsi
   14002ca49:	out    0xe6,al
   14002ca4b:	jmp    rsp
   14002ca4d:	in     al,0xe2
   14002ca4f:	(bad)  
   14002ca50:	fcmovnbe st,st(7)
   14002ca52:	sar    edi,cl
   14002ca54:	(bad)  
   14002ca55:	iret   
   14002ca56:	enter  0xd0ff,0xc9
   14002ca5a:	sar    bh,0xcc
   14002ca5d:	(bad)  
   14002ca5e:	mov    edx,0xb9c3ccff
   14002ca63:	dec    esp
   14002ca65:	(bad)  
   14002ca66:	mov    edx,0xbdc6ceff
   14002ca6b:	call   rsp
   14002ca6d:	(bad)  
   14002ca6e:	(bad)  
   14002ca6f:	call   rdi
   14002ca71:	ror    ebp,cl
   14002ca73:	(bad)  
   14002ca74:	(bad)  
   14002ca76:	(bad)  
   14002ca78:	in     eax,0xe5
   14002ca7a:	jrcxz  0x14002ca7b
   14002ca7c:	out    0xe6,al
   14002ca7e:	out    0xff,al
   14002ca80:	out    0xe6,al
   14002ca82:	out    0xff,al
   14002ca84:	out    0xe6,al
   14002ca86:	out    0xff,al
   14002ca88:	out    0xe6,al
   14002ca8a:	out    0xff,al
   14002ca8c:	out    0xe6,al
   14002ca8e:	out    0xff,al
   14002ca90:	out    0xe6,al
   14002ca92:	out    0xff,al
   14002ca94:	out    0xe6,al
   14002ca96:	out    0xff,al
   14002ca98:	mov    ebp,0xcaffa1b1
   14002ca9d:	shl    DWORD PTR [rdi-0x1e1d1c01],0xff
   14002caa4:	out    0xe6,al
   14002caa6:	out    0xff,al
   14002caa8:	out    0xe6,al
   14002caaa:	out    0xff,al
   14002caac:	out    0xe6,al
   14002caae:	out    0xff,al
   14002cab0:	out    0xe6,al
   14002cab2:	out    0xff,al
   14002cab4:	out    0xe7,eax
   14002cab6:	out    0xff,eax
   14002cab8:	out    0xe7,eax
   14002caba:	out    0xff,eax
   14002cabc:	out    0xe7,eax
   14002cabe:	out    0xff,eax
   14002cac0:	(bad)  
   14002cac2:	fcos   
   14002cac4:	jnp    0x14002cb2c
   14002cac6:	rex.RXB (bad) 
   14002cac8:	jge    0x14002cb32
   14002caca:	rex.WX (bad) 
   14002cacc:	fcomp  st(0)
   14002cace:	fdivr  st,st(7)
   14002cad0:	out    0xe6,al
   14002cad2:	out    0xff,al
   14002cad4:	out    0xe6,al
   14002cad6:	out    0xff,al
   14002cad8:	out    0xe6,al
   14002cada:	out    0xff,al
   14002cadc:	out    0xe6,al
   14002cade:	out    0xff,al
   14002cae0:	in     al,0xe4
   14002cae2:	in     al,0xff
   14002cae4:	in     al,0xe4
   14002cae6:	in     al,0xff
   14002cae8:	in     al,0xe4
   14002caea:	in     al,0xff
   14002caec:	in     al,0xe4
   14002caee:	in     al,0xff
   14002caf0:	in     al,0xe4
   14002caf2:	in     al,0xff
   14002caf4:	(bad)  
   14002caf5:	ror    dl,1
   14002caf7:	push   QWORD PTR [rdi-0x53006757]
   14002cafd:	fwait
   14002cafe:	xchg   bh,bh
   14002cb00:	mov    ebx,0xddff9faf
   14002cb05:	fcmovu st,st(0)
   14002cb07:	dec    esi
   14002cb09:	(bad)  
   14002cb0a:	mov    esi,0x98a9b7ff
   14002cb0f:	call   FWORD PTR [rdi-0x6f008e75]
   14002cb15:	ja     0x14002cb70
   14002cb17:	dec    DWORD PTR [rdx-0x7500b091]
   14002cb1d:	outs   dx,DWORD PTR ds:[rsi]
   14002cb1e:	rex.WRXB dec QWORD PTR [r10-0x7500b091]
   14002cb25:	outs   dx,DWORD PTR ds:[rsi]
   14002cb26:	rex.WRXB dec QWORD PTR [r10-0x7100b091]
   14002cb2d:	jne    0x14002cb85
   14002cb2f:	call   FWORD PTR [rax-0x57009a7f]
   14002cb35:	xchg   esi,eax
   14002cb36:	jg     0x14002cb37
   14002cb38:	mov    edx,0xd2ff9cad
   14002cb3d:	int3   
   14002cb3e:	(bad)  
   14002cb41:	jrcxz  0x14002cb26
   14002cb43:	jmp    rsp
   14002cb45:	in     al,0xe4
   14002cb47:	jmp    rsp
   14002cb49:	in     al,0xe4
   14002cb4b:	jmp    rsp
   14002cb4d:	in     al,0xe4
   14002cb4f:	jmp    rsp
   14002cb51:	in     al,0xe4
   14002cb53:	jmp    rbx
   14002cb55:	jrcxz  0x14002cb3a
   14002cb57:	(bad)  
   14002cb58:	fcmovu st,st(0)
   14002cb5a:	(bad)  
   14002cb5b:	jmp    rsp
   14002cb5d:	in     al,0xe4
   14002cb5f:	jmp    rsp
   14002cb61:	in     al,0xe4
   14002cb63:	jmp    rsp
   14002cb65:	in     al,0xe4
   14002cb67:	jmp    rsp
   14002cb69:	in     al,0xe4
   14002cb6b:	jmp    rsp
   14002cb6d:	in     al,0xe4
   14002cb6f:	jmp    rsp
   14002cb71:	in     al,0xe4
   14002cb73:	jmp    rsi
   14002cb75:	out    0xe6,al
   14002cb77:	jmp    rsi
   14002cb79:	out    0xe6,al
   14002cb7b:	jmp    rsi
   14002cb7d:	out    0xe6,al
   14002cb7f:	(bad)  
   14002cb80:	fcomp  st(0)
   14002cb82:	fdivr  st,st(7)
   14002cb84:	jge    0x14002cbee
   14002cb86:	rex.WX (bad) 
   14002cb88:	jg     0x14002cbf4
   14002cb8a:	rex.WR call rsi
   14002cb8d:	(bad)  
   14002cb8e:	(bad)  
   14002cb8f:	jmp    rsp
   14002cb91:	in     al,0xe4
   14002cb93:	jmp    rsp
   14002cb95:	in     al,0xe4
   14002cb97:	jmp    rsp
   14002cb99:	in     al,0xe4
   14002cb9b:	jmp    rsp
   14002cb9d:	in     al,0xe4
   14002cb9f:	jmp    rsp
   14002cba1:	in     al,0xe4
   14002cba3:	jmp    rsp
   14002cba5:	in     al,0xe4
   14002cba7:	jmp    rsp
   14002cba9:	in     al,0xe4
   14002cbab:	jmp    rsp
   14002cbad:	in     al,0xe4
   14002cbaf:	jmp    rsp
   14002cbb1:	in     al,0xe4
   14002cbb3:	jmp    rsp
   14002cbb5:	in     al,0xe4
   14002cbb7:	jmp    rsp
   14002cbb9:	in     al,0xe4
   14002cbbb:	jmp    rsp
   14002cbbd:	in     al,0xe4
   14002cbbf:	jmp    rsp
   14002cbc1:	in     al,0xe4
   14002cbc3:	call   rdx
   14002cbc5:	int3   
   14002cbc6:	(bad)  
   14002cbc9:	jns    0x14002cc27
   14002cbcb:	dec    DWORD PTR [rcx-0x7400b192]
   14002cbd1:	jo     0x14002cc24
   14002cbd3:	call   QWORD PTR [rax-0x6900a589]
   14002cbd9:	jg     0x14002cc3e
   14002cbdb:	call   FWORD PTR [rbp-0x5d009178]
   14002cbe1:	mov    ?,WORD PTR [rsi-0x1]
   14002cbe4:	sahf   
   14002cbe5:	mov    dh,BYTE PTR [rcx-0x1]
   14002cbe8:	xchg   esp,eax
   14002cbe9:	jle    0x14002cc4d
   14002cbeb:	call   QWORD PTR [rax-0x7500a589]
   14002cbf1:	jo     0x14002cc43
   14002cbf3:	dec    DWORD PTR [rcx-0x6900b192]
   14002cbf9:	jg     0x14002cc5e
   14002cbfb:	inc    esp
   14002cbfd:	mov    edx,0xe3e3ffaf
   14002cc02:	jrcxz  0x14002cc03
   14002cc04:	in     al,0xe4
   14002cc06:	in     al,0xff
   14002cc08:	in     al,0xe4
   14002cc0a:	in     al,0xff
   14002cc0c:	in     al,0xe4
   14002cc0e:	in     al,0xff
   14002cc10:	in     al,0xe4
   14002cc12:	in     al,0xff
   14002cc14:	in     al,0xe4
   14002cc16:	in     al,0xff
   14002cc18:	in     al,0xe4
   14002cc1a:	in     al,0xff
   14002cc1c:	in     al,0xe4
   14002cc1e:	in     al,0xff
   14002cc20:	in     al,0xe4
   14002cc22:	in     al,0xff
   14002cc24:	in     al,0xe4
   14002cc26:	in     al,0xff
   14002cc28:	in     al,0xe4
   14002cc2a:	in     al,0xff
   14002cc2c:	in     al,0xe4
   14002cc2e:	in     al,0xff
   14002cc30:	in     al,0xe4
   14002cc32:	in     al,0xff
   14002cc34:	in     al,0xe4
   14002cc36:	in     al,0xff
   14002cc38:	in     al,0xe4
   14002cc3a:	in     al,0xff
   14002cc3c:	in     al,0xe4
   14002cc3e:	in     al,0xff
   14002cc40:	(bad)  
   14002cc41:	(bad)  
   14002cc42:	(bad)  
   14002cc43:	(bad)  
   14002cc44:	jg     0x14002ccb0
   14002cc46:	rex.WR inc QWORD PTR [rcx-0x2900b194]
   14002cc4d:	(bad)  
   14002cc4e:	(bad)  
   14002cc4f:	jmp    rsp
   14002cc51:	in     al,0xe4
   14002cc53:	jmp    rsp
   14002cc55:	in     al,0xe4
   14002cc57:	jmp    rsp
   14002cc59:	in     al,0xe4
   14002cc5b:	jmp    rsp
   14002cc5d:	in     al,0xe4
   14002cc5f:	jmp    rsp
   14002cc61:	in     al,0xe4
   14002cc63:	jmp    rsp
   14002cc65:	in     al,0xe4
   14002cc67:	jmp    rsp
   14002cc69:	in     al,0xe4
   14002cc6b:	jmp    rsp
   14002cc6d:	in     al,0xe4
   14002cc6f:	jmp    rsp
   14002cc71:	in     al,0xe4
   14002cc73:	jmp    rsp
   14002cc75:	in     al,0xe4
   14002cc77:	jmp    rsp
   14002cc79:	in     al,0xe4
   14002cc7b:	jmp    rsp
   14002cc7d:	in     al,0xe4
   14002cc7f:	jmp    rsp
   14002cc81:	in     al,0xe4
   14002cc83:	dec    esp
   14002cc85:	(bad)  
   14002cc86:	mov    ebx,0x647f96ff
   14002cc8b:	call   FWORD PTR [rbp-0x3f008f77]
   14002cc91:	mov    ch,0xa7
   14002cc93:	dec    ecx
   14002cc95:	shl    DWORD PTR [rdi-0x3c352e01],0xff
   14002cc9c:	xlat   BYTE PTR ds:[rbx]
   14002cc9d:	ror    ebp,cl
   14002cc9f:	(bad)  
   14002cca0:	fstp   st(2)
   14002cca2:	xlat   BYTE PTR ds:[rbx]
   14002cca3:	(bad)  
   14002cca4:	(bad)  
   14002cca6:	sar    edi,1
   14002cca8:	iret   
   14002cca9:	leave  
   14002ccaa:	sar    edi,0xc8
   14002ccad:	shl    BYTE PTR [rbp-0x5d4f4301],0xff
   14002ccb4:	mov    ebp,0xd4ffa4b2
   14002ccb9:	ror    dl,1
   14002ccbb:	jmp    rsp
   14002ccbd:	in     al,0xe4
   14002ccbf:	jmp    rsp
   14002ccc1:	in     al,0xe4
   14002ccc3:	jmp    rsp
   14002ccc5:	in     al,0xe4
   14002ccc7:	jmp    rsp
   14002ccc9:	in     al,0xe4
   14002cccb:	jmp    rsp
   14002cccd:	in     al,0xe4
   14002cccf:	jmp    rsp
   14002ccd1:	in     al,0xe4
   14002ccd3:	jmp    rsp
   14002ccd5:	in     al,0xe4
   14002ccd7:	jmp    rsp
   14002ccd9:	in     al,0xe4
   14002ccdb:	jmp    rsp
   14002ccdd:	in     al,0xe4
   14002ccdf:	jmp    rsp
   14002cce1:	in     al,0xe4
   14002cce3:	jmp    rsp
   14002cce5:	in     al,0xe4
   14002cce7:	jmp    rsp
   14002cce9:	in     al,0xe4
   14002cceb:	jmp    rsp
   14002cced:	in     al,0xe4
   14002ccef:	jmp    rsp
   14002ccf1:	in     al,0xe4
   14002ccf3:	jmp    rsp
   14002ccf5:	in     al,0xe4
   14002ccf7:	jmp    rsp
   14002ccf9:	in     al,0xe4
   14002ccfb:	jmp    rsp
   14002ccfd:	in     al,0xe4
   14002ccff:	call   rsi
   14002cd01:	(bad)  
   14002cd02:	(bad)  
   14002cd03:	inc    DWORD PTR [rcx-0x7c00b194]
   14002cd09:	outs   dx,BYTE PTR ds:[rsi]
   14002cd0a:	push   rcx
   14002cd0b:	call   rsi
   14002cd0d:	(bad)  
   14002cd0e:	(bad)  
   14002cd0f:	jmp    rsp
   14002cd11:	in     al,0xe4
   14002cd13:	jmp    rsp
   14002cd15:	in     al,0xe4
   14002cd17:	jmp    rsp
   14002cd19:	in     al,0xe4
   14002cd1b:	jmp    rsp
   14002cd1d:	in     al,0xe4
   14002cd1f:	jmp    rsp
   14002cd21:	in     al,0xe4
   14002cd23:	jmp    rsp
   14002cd25:	in     al,0xe4
   14002cd27:	jmp    rsp
   14002cd29:	in     al,0xe4
   14002cd2b:	jmp    rsp
   14002cd2d:	in     al,0xe4
   14002cd2f:	jmp    rsp
   14002cd31:	in     al,0xe4
   14002cd33:	jmp    rsp
   14002cd35:	in     al,0xe4
   14002cd37:	jmp    rsp
   14002cd39:	in     al,0xe4
   14002cd3b:	jmp    rsp
   14002cd3d:	in     al,0xe4
   14002cd3f:	jmp    rsp
   14002cd41:	in     al,0xe4
   14002cd43:	jmp    rsp
   14002cd45:	in     al,0xe4
   14002cd47:	call   rbx
   14002cd49:	(bad)  
   14002cd4a:	(bad)  
   14002cd4b:	call   rsi
   14002cd4d:	ror    esp,1
   14002cd4f:	jmp    rsp
   14002cd51:	in     al,0xe4
   14002cd53:	jmp    rsp
   14002cd55:	in     al,0xe4
   14002cd57:	jmp    rsp
   14002cd59:	in     al,0xe4
   14002cd5b:	jmp    rsp
   14002cd5d:	in     al,0xe4
   14002cd5f:	jmp    rbx
   14002cd61:	jrcxz  0x14002cd46
   14002cd63:	jmp    rsp
   14002cd65:	in     al,0xe3
   14002cd67:	jmp    rsp
   14002cd69:	in     al,0xe4
   14002cd6b:	jmp    rsp
   14002cd6d:	in     al,0xe4
   14002cd6f:	jmp    rsp
   14002cd71:	in     al,0xe4
   14002cd73:	jmp    rsp
   14002cd75:	in     al,0xe4
   14002cd77:	jmp    rsp
   14002cd79:	in     al,0xe4
   14002cd7b:	jmp    rsp
   14002cd7d:	in     al,0xe4
   14002cd7f:	jmp    rsp
   14002cd81:	in     al,0xe4
   14002cd83:	jmp    rax
   14002cd85:	(bad)  
   14002cd87:	jmp    rsp
   14002cd89:	in     al,0xe4
   14002cd8b:	jmp    rsp
   14002cd8d:	in     al,0xe4
   14002cd8f:	jmp    rsp
   14002cd91:	in     al,0xe4
   14002cd93:	jmp    rsp
   14002cd95:	in     al,0xe4
   14002cd97:	jmp    rsp
   14002cd99:	in     al,0xe4
   14002cd9b:	jmp    rsp
   14002cd9d:	in     al,0xe4
   14002cd9f:	jmp    rsp
   14002cda1:	in     al,0xe4
   14002cda3:	jmp    rsp
   14002cda5:	in     al,0xe4
   14002cda7:	jmp    rsp
   14002cda9:	in     al,0xe4
   14002cdab:	jmp    rsp
   14002cdad:	in     al,0xe4
   14002cdaf:	jmp    rsp
   14002cdb1:	in     al,0xe4
   14002cdb3:	jmp    rsp
   14002cdb5:	in     al,0xe4
   14002cdb7:	jmp    rsp
   14002cdb9:	in     al,0xe4
   14002cdbb:	jmp    rsp
   14002cdbd:	in     al,0xe4
   14002cdbf:	call   rsi
   14002cdc1:	(bad)  
   14002cdc2:	(bad)  
   14002cdc3:	inc    DWORD PTR [rbx-0x7a00ae92]
   14002cdc9:	jo     0x14002ce1e
   14002cdcb:	call   rsi
   14002cdcd:	(bad)  
   14002cdce:	(bad)  
   14002cdcf:	jmp    rsp
   14002cdd1:	in     al,0xe4
   14002cdd3:	jmp    rsp
   14002cdd5:	in     al,0xe4
   14002cdd7:	jmp    rsp
   14002cdd9:	in     al,0xe4
   14002cddb:	jmp    rsp
   14002cddd:	in     al,0xe4
   14002cddf:	jmp    rbp
   14002cde1:	in     eax,0xe5
   14002cde3:	jmp    rbp
   14002cde5:	in     eax,0xe5
   14002cde7:	jmp    rbp
   14002cde9:	in     eax,0xe5
   14002cdeb:	jmp    rbp
   14002cded:	in     eax,0xe5
   14002cdef:	jmp    rbp
   14002cdf1:	in     eax,0xe5
   14002cdf3:	jmp    rbp
   14002cdf5:	in     eax,0xe5
   14002cdf7:	jmp    rbp
   14002cdf9:	in     eax,0xe5
   14002cdfb:	jmp    rbp
   14002cdfd:	in     eax,0xe5
   14002cdff:	jmp    rbp
   14002ce01:	in     eax,0xe5
   14002ce03:	jmp    rcx
   14002ce05:	loopne 0x14002cde6
   14002ce07:	call   rbp
   14002ce09:	ror    ebx,1
   14002ce0b:	dec    ecx
   14002ce0d:	shl    DWORD PTR [rsi-0x60504401],0xff
   14002ce14:	scas   al,BYTE PTR es:[rdi]
   14002ce15:	sahf   
   14002ce16:	mov    edi,edi
   14002ce18:	stos   BYTE PTR es:[rdi],al
   14002ce19:	cdq    
   14002ce1a:	test   bh,bh
   14002ce1c:	stos   DWORD PTR es:[rdi],eax
   14002ce1d:	(bad)  
   14002ce1e:	test   edi,edi
   14002ce20:	stos   BYTE PTR es:[rdi],al
   14002ce21:	(bad)  
   14002ce22:	test   edi,edi
   14002ce24:	stos   BYTE PTR es:[rdi],al
   14002ce25:	cdq    
   14002ce26:	test   bh,bh
   14002ce28:	lods   al,BYTE PTR ds:[rsi]
   14002ce29:	pushf  
   14002ce2a:	mov    bh,bh
   14002ce2c:	mov    bh,0xaa
   14002ce2e:	(bad)  
   14002ce2f:	inc    edx
   14002ce31:	mov    eax,0xc0c8ffab
   14002ce36:	mov    ch,0xff
   14002ce38:	ror    cl,1
   14002ce3a:	sar    edi,0xd7
   14002ce3d:	(bad)  
   14002ce3e:	(bad)  
   14002ce3f:	jmp    rax
   14002ce41:	(bad)  
   14002ce43:	(bad)  
   14002ce44:	fstp   st(2)
   14002ce46:	xlat   BYTE PTR ds:[rbx]
   14002ce47:	dec    ecx
   14002ce49:	shl    DWORD PTR [rdi-0x493f3601],0xff
   14002ce50:	(bad)  
   14002ce52:	fdivr  st,st(7)
   14002ce54:	in     eax,0xe5
   14002ce56:	in     eax,0xff
   14002ce58:	in     eax,0xe5
   14002ce5a:	in     eax,0xff
   14002ce5c:	in     eax,0xe5
   14002ce5e:	in     eax,0xff
   14002ce60:	in     eax,0xe5
   14002ce62:	in     eax,0xff
   14002ce64:	in     eax,0xe5
   14002ce66:	in     eax,0xff
   14002ce68:	in     eax,0xe5
   14002ce6a:	in     eax,0xff
   14002ce6c:	in     eax,0xe5
   14002ce6e:	in     eax,0xff
   14002ce70:	in     eax,0xe5
   14002ce72:	in     eax,0xff
   14002ce74:	in     al,0xe4
   14002ce76:	in     al,0xff
   14002ce78:	in     al,0xe4
   14002ce7a:	in     al,0xff
   14002ce7c:	in     al,0xe4
   14002ce7e:	in     al,0xff
   14002ce80:	(bad)  
   14002ce81:	(bad)  
   14002ce82:	(bad)  
   14002ce83:	inc    DWORD PTR [rbp-0x7800ac90]
   14002ce89:	jb     0x14002cee1
   14002ce8b:	call   rdi
   14002ce8d:	xlat   BYTE PTR ds:[rbx]
   14002ce8e:	xlat   BYTE PTR ds:[rbx]
   14002ce8f:	jmp    rbp
   14002ce91:	in     eax,0xe5
   14002ce93:	jmp    rbp
   14002ce95:	in     eax,0xe5
   14002ce97:	jmp    rbp
   14002ce99:	in     eax,0xe5
   14002ce9b:	jmp    rbp
   14002ce9d:	in     eax,0xe5
   14002ce9f:	jmp    rsi
   14002cea1:	out    0xe6,al
   14002cea3:	jmp    rsi
   14002cea5:	out    0xe6,al
   14002cea7:	jmp    rsi
   14002cea9:	out    0xe6,al
   14002ceab:	jmp    rsi
   14002cead:	out    0xe6,al
   14002ceaf:	jmp    rsi
   14002ceb1:	out    0xe6,al
   14002ceb3:	jmp    rsi
   14002ceb5:	out    0xe6,al
   14002ceb7:	jmp    rsi
   14002ceb9:	out    0xe6,al
   14002cebb:	jmp    rsi
   14002cebd:	out    0xe6,al
   14002cebf:	call   rax
   14002cec1:	retf   0xffc2
   14002cec4:	scas   al,BYTE PTR es:[rdi]
   14002cec5:	sahf   
   14002cec6:	mov    edi,edi
   14002cec8:	xchg   edx,eax
   14002cec9:	jl     0x14002cf2a
   14002cecb:	inc    DWORD PTR [rdi-0x7800b394]
   14002ced1:	ins    BYTE PTR es:[rdi],dx
   14002ced2:	rex.WR inc QWORD PTR [rdi-0x7100b294]
   14002ced9:	jne    0x14002cf33
   14002cedb:	dec    DWORD PTR [rsi-0x7100a88b]
   14002cee1:	jne    0x14002cf3a
   14002cee3:	dec    DWORD PTR [rbp-0x7500a88c]
   14002cee9:	jo     0x14002cf3b
   14002ceeb:	inc    DWORD PTR [rdi-0x7800b394]
   14002cef1:	ins    BYTE PTR es:[rdi],dx
   14002cef2:	rex.WR inc QWORD PTR [rdi-0x7000b394]
   14002cef9:	ja     0x14002cf54
   14002cefb:	jmp    QWORD PTR [rsi-0x2900816c]
   14002cf01:	ror    ebx,1
   14002cf03:	jmp    rsp
   14002cf05:	jrcxz  0x14002cee9
   14002cf07:	inc    edi
   14002cf09:	mov    esi,0x9cadffb2
   14002cf0e:	mov    bh,bh
   14002cf10:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002cf11:	xchg   esp,eax
   14002cf12:	jge    0x14002cf13
   14002cf14:	ret    0xabb8
   14002cf17:	jmp    rsi
   14002cf19:	out    0xe5,al
   14002cf1b:	jmp    rsi
   14002cf1d:	out    0xe6,al
   14002cf1f:	jmp    rsi
   14002cf21:	out    0xe6,al
   14002cf23:	jmp    rsi
   14002cf25:	out    0xe6,al
   14002cf27:	jmp    rsi
   14002cf29:	out    0xe6,al
   14002cf2b:	jmp    rsi
   14002cf2d:	out    0xe6,al
   14002cf2f:	jmp    rsi
   14002cf31:	out    0xe6,al
   14002cf33:	jmp    rbp
   14002cf35:	in     eax,0xe5
   14002cf37:	jmp    rbp
   14002cf39:	in     eax,0xe5
   14002cf3b:	jmp    rbp
   14002cf3d:	in     eax,0xe5
   14002cf3f:	call   rdi
   14002cf41:	xlat   BYTE PTR ds:[rbx]
   14002cf42:	xlat   BYTE PTR ds:[rbx]
   14002cf43:	inc    DWORD PTR [rdi-0x7500a98e]
   14002cf49:	jne    0x14002cfa3
   14002cf4b:	(bad)  
   14002cf4c:	fcomp  st(0)
   14002cf4e:	fdivr  st,st(7)
   14002cf50:	out    0xe6,al
   14002cf52:	out    0xff,al
   14002cf54:	out    0xe6,al
   14002cf56:	out    0xff,al
   14002cf58:	out    0xe6,al
   14002cf5a:	out    0xff,al
   14002cf5c:	out    0xe6,al
   14002cf5e:	out    0xff,al
   14002cf60:	out    0xe6,al
   14002cf62:	out    0xff,al
   14002cf64:	out    0xe6,al
   14002cf66:	out    0xff,al
   14002cf68:	out    0xe6,al
   14002cf6a:	out    0xff,al
   14002cf6c:	out    0xe6,al
   14002cf6e:	out    0xff,al
   14002cf70:	out    0xe6,al
   14002cf72:	out    0xff,al
   14002cf74:	out    0xe6,al
   14002cf76:	out    0xff,al
   14002cf78:	out    0xe6,al
   14002cf7a:	out    0xff,al
   14002cf7c:	out    0xe6,al
   14002cf7e:	out    0xff,al
   14002cf80:	mov    bh,0xaa
   14002cf82:	cdq    
   14002cf83:	inc    DWORD PTR [rdi-0x6a00b394]
   14002cf89:	jg     0x14002cfee
   14002cf8b:	jmp    FWORD PTR [rdi-0x46007360]
   14002cf91:	stos   DWORD PTR es:[rdi],eax
   14002cf92:	fwait
   14002cf93:	(bad)  
   14002cf94:	mov    esi,0xcaffa5b3
   14002cf99:	shl    DWORD PTR [rdi-0x4a3f3701],0xff
   14002cfa0:	leave  
   14002cfa1:	shl    BYTE PTR [rbp-0x4a3f3601],0xff
   14002cfa8:	ret    
   14002cfa9:	mov    ecx,0xacbaffac
   14002cfae:	pushf  
   14002cfaf:	push   QWORD PTR [rbp-0x52006a59]
   14002cfb5:	pushf  
   14002cfb6:	mov    bh,bh
   14002cfb8:	movabs ds:0xdfff99aab7ff7991,eax
   14002cfc1:	(bad)  
   14002cfc3:	jmp    rsi
   14002cfc5:	out    0xe6,al
   14002cfc7:	jmp    rbp
   14002cfc9:	in     eax,0xe3
   14002cfcb:	call   rsi
   14002cfcd:	ror    ebx,1
   14002cfcf:	jmp    FWORD PTR [rsi-0x74007461]
   14002cfd5:	jno    0x14002d02a
   14002cfd7:	jmp    FWORD PTR [rsi-0x1f007462]
   14002cfdd:	(bad)  
   14002cfdf:	jmp    rsi
   14002cfe1:	out    0xe6,al
   14002cfe3:	jmp    rsi
   14002cfe5:	out    0xe6,al
   14002cfe7:	jmp    rsi
   14002cfe9:	out    0xe6,al
   14002cfeb:	jmp    rsi
   14002cfed:	out    0xe6,al
   14002cfef:	jmp    rsi
   14002cff1:	out    0xe6,al
   14002cff3:	jmp    rsi
   14002cff5:	out    0xe6,al
   14002cff7:	jmp    rsi
   14002cff9:	out    0xe6,al
   14002cffb:	jmp    rsi
   14002cffd:	out    0xe6,al
   14002cfff:	(bad)  
   14002d000:	fcomp  st(0)
   14002d002:	fdivr  st,st(7)
   14002d004:	mov    dh,BYTE PTR [rbp+0x58]
   14002d007:	dec    DWORD PTR [rdi+rsi*2-0x272700a5]
   14002d00e:	fdivr  st,st(7)
   14002d010:	out    0xe6,al
   14002d012:	out    0xff,al
   14002d014:	out    0xe6,al
   14002d016:	out    0xff,al
   14002d018:	out    0xe6,al
   14002d01a:	out    0xff,al
   14002d01c:	out    0xe6,al
   14002d01e:	out    0xff,al
   14002d020:	out    0xe7,eax
   14002d022:	out    0xff,eax
   14002d024:	out    0xe7,eax
   14002d026:	out    0xff,eax
   14002d028:	out    0xe7,eax
   14002d02a:	out    0xff,eax
   14002d02c:	out    0xe7,eax
   14002d02e:	out    0xff,eax
   14002d030:	out    0xe7,eax
   14002d032:	out    0xff,eax
   14002d034:	out    0xe7,eax
   14002d036:	out    0xff,eax
   14002d038:	out    0xe7,eax
   14002d03a:	out    0xff,eax
   14002d03c:	out    0xe7,eax
   14002d03e:	out    0xff,eax
   14002d040:	(bad)  
   14002d042:	sar    bh,1
   14002d044:	mov    cl,0xa1
   14002d046:	(bad)  
   14002d047:	(bad)  
   14002d048:	mov    ecx,0xe7ff9bac
   14002d04d:	out    0xe7,eax
   14002d04f:	jmp    rdi
   14002d051:	out    0xe7,eax
   14002d053:	jmp    rdi
   14002d055:	out    0xe7,eax
   14002d057:	jmp    rdi
   14002d059:	out    0xe7,eax
   14002d05b:	jmp    rdi
   14002d05d:	out    0xe7,eax
   14002d05f:	jmp    rdi
   14002d061:	out    0xe7,eax
   14002d063:	jmp    rdi
   14002d065:	out    0xe7,eax
   14002d067:	jmp    rdi
   14002d069:	out    0xe7,eax
   14002d06b:	jmp    rdi
   14002d06d:	out    0xe7,eax
   14002d06f:	jmp    rdi
   14002d071:	out    0xe7,eax
   14002d073:	jmp    rdi
   14002d075:	out    0xe7,eax
   14002d077:	jmp    rdx
   14002d079:	loopne 0x14002d059
   14002d07b:	jmp    rsi
   14002d07d:	in     eax,0xe4
   14002d07f:	jmp    rdi
   14002d081:	out    0xe7,eax
   14002d083:	jmp    rdi
   14002d085:	out    0xe7,eax
   14002d087:	jmp    rdi
   14002d089:	out    0xe7,eax
   14002d08b:	jmp    rdi
   14002d08d:	out    0xe7,eax
   14002d08f:	jmp    rbx
   14002d091:	loop   0x14002d074
   14002d093:	push   QWORD PTR [rbp+riz*4+0x6c87ff92]
   14002d09a:	rex.WR jmp FWORD PTR [rdx+rbx*4-0x2f2a007b]
   14002d0a2:	leave  
   14002d0a3:	jmp    rdi
   14002d0a5:	out    0xe7,eax
   14002d0a7:	jmp    rdi
   14002d0a9:	out    0xe7,eax
   14002d0ab:	jmp    rdi
   14002d0ad:	out    0xe7,eax
   14002d0af:	jmp    rdi
   14002d0b1:	out    0xe7,eax
   14002d0b3:	jmp    rsi
   14002d0b5:	out    0xe6,al
   14002d0b7:	jmp    rsi
   14002d0b9:	out    0xe6,al
   14002d0bb:	jmp    rsi
   14002d0bd:	out    0xe6,al
   14002d0bf:	(bad)  
   14002d0c0:	fcomp  st(0)
   14002d0c2:	fdivr  st,st(7)
   14002d0c4:	mov    WORD PTR [rdi+0x5b],?
   14002d0c7:	dec    DWORD PTR [rsi-0x2600a287]
   14002d0cd:	(bad)  
   14002d0cf:	jmp    rdi
   14002d0d1:	out    0xe7,eax
   14002d0d3:	jmp    rdi
   14002d0d5:	out    0xe7,eax
   14002d0d7:	jmp    rdi
   14002d0d9:	out    0xe7,eax
   14002d0db:	jmp    rdi
   14002d0dd:	out    0xe7,eax
   14002d0df:	(bad)  
   14002d0e0:	call   0x12902b9cd
   14002d0e5:	call   0x128ebd0d2
   14002d0ea:	call   0x128ebb9ee
   14002d0ef:	(bad)  
   14002d0f0:	call   0x12902b9dd
   14002d0f5:	call   0x128ebd0e2
   14002d0fa:	call   0x128ebb9fe
   14002d0ff:	(bad)  
   14002d100:	call   0x12502b9ed
   14002d105:	in     al,0xe2
   14002d107:	dec    edi
   14002d109:	enter  0xffbf,0xd3
   14002d10d:	int    0xc6
   14002d10f:	call   rbx
   14002d111:	(bad)  
   14002d112:	(bad)  
   14002d113:	call   rbx
   14002d115:	(bad)  
   14002d116:	(bad)  
   14002d117:	call   rbx
   14002d119:	int    0xc6
   14002d11b:	call   rbx
   14002d11d:	int    0xc6
   14002d11f:	call   rbx
   14002d121:	int    0xc6
   14002d123:	call   rdx
   14002d125:	retf   
   14002d126:	(bad)  
   14002d127:	call   rdi
   14002d129:	ror    ah,cl
   14002d12b:	jmp    rsi
   14002d12d:	out    0xe4,al
   14002d12f:	(bad)  
   14002d130:	call   0x12902b91d
   14002d135:	call   0x128ebd122
   14002d13a:	call   0x128ebba3e
   14002d13f:	(bad)  
   14002d140:	call   0x12902ba2d
   14002d145:	call   0x128ebd132
   14002d14a:	call   0x128ebba4e
   14002d14f:	(bad)  
   14002d150:	call   0x12702ba3d
   14002d155:	in     eax,0xe4
   14002d157:	jmp    QWORD PTR [rdx+rdx*4+0x6f89ff7a]
   14002d15e:	rex.WRXB jmp QWORD PTR [r10-0x17008971]
   14002d165:	call   0x128ebd152
   14002d16a:	call   0x128ebba6e
   14002d16f:	(bad)  
   14002d170:	call   0x12802ba5d
   14002d175:	out    0xe7,eax
   14002d177:	jmp    rdi
   14002d179:	out    0xe7,eax
   14002d17b:	jmp    rdi
   14002d17d:	out    0xe7,eax
   14002d17f:	(bad)  
   14002d180:	(bad)  
   14002d182:	fcos   
   14002d184:	mov    ?,WORD PTR [rcx+0x5d]
   14002d187:	call   QWORD PTR [rax-0x25009f84]
   14002d18d:	fcmovu st,st(2)
   14002d18f:	(bad)  
   14002d190:	call   0x12902ba7d
   14002d195:	call   0x128ebd182
   14002d19a:	call   0x128ebba9e
   14002d19f:	(bad)  
   14002d1a0:	jmp    0x12a02bb8e
   14002d1a5:	jmp    0x129ecd193
   14002d1aa:	jmp    0x129ecbbae
   14002d1af:	(bad)  
   14002d1b0:	jmp    0x11c02bb9e
   14002d1b5:	fcom   st(2)
   14002d1b7:	inc    ecx
   14002d1b9:	mov    bh,0xa9
   14002d1bb:	push   QWORD PTR [rcx-0x6000715e]
   14002d1c1:	mov    esi,DWORD PTR [rbx-0x1]
   14002d1c4:	(bad)  
   14002d1c5:	test   BYTE PTR [rcx-0x1],ch
   14002d1c8:	cdq    
   14002d1c9:	sub    DWORD PTR [rax-0x1],0xffffff96
   14002d1cd:	jg     0x14002d232
   14002d1cf:	call   QWORD PTR [rsi-0x69009c81]
   14002d1d5:	jg     0x14002d23a
   14002d1d7:	call   QWORD PTR [rsi-0x69009c81]
   14002d1dd:	jg     0x14002d242
   14002d1df:	call   QWORD PTR [rbp-0x69009b81]
   14002d1e5:	jg     0x14002d24a
   14002d1e7:	jmp    QWORD PTR [rdx-0x5d00a27d]
   14002d1ed:	xchg   DWORD PTR [rsi-0x1],esp
   14002d1f0:	cwde   
   14002d1f1:	test   DWORD PTR [rsi-0x1],ebp
   14002d1f4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002d1f5:	xchg   ebx,eax
   14002d1f6:	jge    0x14002d1f7
   14002d1f8:	mov    cl,0xa1
   14002d1fa:	mov    ?,edi
   14002d1fc:	shl    BYTE PTR [rsi+riz*4-0x3c342d01],0xff
   14002d204:	jrcxz  0x14002d1e7
   14002d206:	fdivp  st(7),st
   14002d208:	jmp    0x12a02bbf6
   14002d20d:	jmp    0x129ecd1fb
   14002d212:	jmp    0x129ecbc16
   14002d217:	dec    edx
   14002d219:	ret    0xffb8
   14002d21c:	mov    esi,DWORD PTR [rcx+0x52]
   14002d21f:	dec    DWORD PTR [rdx-0x1600af90]
   14002d225:	jmp    0x129ecd213
   14002d22a:	jmp    0x129ecbc2e
   14002d22f:	(bad)  
   14002d230:	jmp    0x12902bc1e
   14002d235:	call   0x128ebd222
   14002d23a:	call   0x128ebbb3e
   14002d23f:	(bad)  
   14002d240:	fcmovu st,st(2)
   14002d242:	(bad)  
   14002d244:	nop
   14002d245:	jl     0x14002d2a7
   14002d247:	call   QWORD PTR [rbx-0x24009c82]
   14002d24d:	fcmovnu st,st(3)
   14002d24f:	(bad)  
   14002d250:	jmp    0x12a02bc3e
   14002d255:	jmp    0x129ecd243
   14002d25a:	jmp    0x129ecbc5e
   14002d25f:	(bad)  
   14002d260:	(bad)  
   14002d261:	(bad)  
   14002d262:	(bad)  
   14002d263:	(bad)  
   14002d264:	(bad)  
   14002d265:	(bad)  
   14002d266:	(bad)  
   14002d267:	(bad)  
   14002d268:	(bad)  
   14002d269:	(bad)  
   14002d26a:	(bad)  
   14002d26b:	(bad)  
   14002d26c:	(bad)  
   14002d26d:	(bad)  
   14002d26e:	(bad)  
   14002d26f:	(bad)  
   14002d270:	jmp    0xf402bc5e
   14002d275:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002d276:	xchg   ecx,eax
   14002d277:	dec    DWORD PTR [rbx-0x7700ac8f]
   14002d27d:	ins    DWORD PTR es:[rdi],dx
   14002d27e:	rex.WRX dec QWORD PTR [rbx-0x4e00ab8f]
   14002d285:	movabs ds:0xc5cdffb5c0caff8e,al
   14002d28e:	mov    ebx,0xb6c1caff
   14002d293:	dec    edx
   14002d295:	shl    BYTE PTR [rdi+rdi*8-0x4b3f36],0xca
   14002d29d:	shl    BYTE PTR [rdi+rdi*8-0x4e3e33],0xcc
   14002d2a5:	mov    edi,0xbcbdffb1
   14002d2aa:	mov    eax,0xadb6bcff
   14002d2af:	inc    ebx
   14002d2b1:	lods   al,BYTE PTR ds:[rsi]
   14002d2b2:	xchg   ecx,eax
   14002d2b3:	(bad)  
   14002d2b4:	mov    eax,0xadff92a8
   14002d2b9:	sahf   
   14002d2ba:	mov    edi,edi
   14002d2bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002d2bd:	nop
   14002d2be:	js     0x14002d2bf
   14002d2c0:	movabs ds:0xe6ffa7b5c1ff768d,al
   14002d2c9:	in     eax,0xe3
   14002d2cb:	(bad)  
   14002d2cc:	(bad)  
   14002d2cd:	(bad)  
   14002d2ce:	(bad)  
   14002d2cf:	(bad)  
   14002d2d0:	(bad)  
   14002d2d1:	(bad)  
   14002d2d2:	(bad)  
   14002d2d3:	(bad)  
   14002d2d4:	(bad)  
   14002d2d5:	(bad)  
   14002d2d6:	(bad)  
   14002d2d7:	inc    ebp
   14002d2d9:	mov    ecx,0x6f8affac
   14002d2de:	push   rcx
   14002d2df:	dec    DWORD PTR [rcx-0x1500af91]
   14002d2e5:	(bad)  
   14002d2e6:	(bad)  
   14002d2e7:	(bad)  
   14002d2e8:	(bad)  
   14002d2e9:	(bad)  
   14002d2ea:	(bad)  
   14002d2eb:	(bad)  
   14002d2ec:	(bad)  
   14002d2ed:	(bad)  
   14002d2ee:	(bad)  
   14002d2ef:	(bad)  
   14002d2f0:	(bad)  
   14002d2f1:	(bad)  
   14002d2f2:	(bad)  
   14002d2f3:	(bad)  
   14002d2f4:	jmp    0x12a02bce2
   14002d2f9:	jmp    0x129ecd2e7
   14002d2fe:	jmp    0x11bdeaf02
   14002d303:	call   QWORD PTR [rbx-0x6a009c82]
   14002d309:	and    BYTE PTR [rbp-0x1],0xdc
   14002d30d:	(bad)  
   14002d30f:	(bad)  
   14002d310:	(bad)  
   14002d311:	(bad)  
   14002d312:	(bad)  
   14002d313:	(bad)  
   14002d314:	(bad)  
   14002d315:	(bad)  
   14002d316:	(bad)  
   14002d317:	(bad)  
   14002d318:	(bad)  
   14002d319:	(bad)  
   14002d31a:	(bad)  
   14002d31b:	(bad)  
   14002d31c:	(bad)  
   14002d31d:	(bad)  
   14002d31e:	(bad)  
   14002d31f:	(bad)  
   14002d320:	jmp    0x14002d30d
   14002d322:	jmp    0x14002d323
   14002d324:	jmp    0x14002d311
   14002d326:	jmp    0x14002d327
   14002d328:	jmp    0x14002d315
   14002d32a:	jmp    0x14002d32b
   14002d32c:	jmp    0x14002d319
   14002d32e:	jmp    0x14002d32f
   14002d330:	jmp    0x14002d31d
   14002d332:	jmp    0x14002d333
   14002d334:	xlat   BYTE PTR ds:[rbx]
   14002d335:	ror    ebx,cl
   14002d337:	push   QWORD PTR [rax-0x66007360]
   14002d33d:	test   BYTE PTR [rcx-0x1],ch
   14002d340:	(bad)  
   14002d341:	test   DWORD PTR [rbx-0x1],ebp
   14002d344:	mov    bh,0xa9
   14002d346:	xchg   esi,eax
   14002d347:	call   rbx
   14002d349:	int3   
   14002d34a:	ret    
   14002d34b:	jmp    rdx
   14002d34d:	loopne 0x14002d32c
   14002d34f:	(bad)  
   14002d350:	jmp    0x14002d33d
   14002d352:	jmp    0x14002d353
   14002d354:	jmp    0x14002d341
   14002d356:	jmp    0x14002d357
   14002d358:	jmp    0x14002d345
   14002d35a:	jmp    0x14002d35b
   14002d35c:	jmp    0x14002d349
   14002d35e:	jmp    0x14002d35f
   14002d360:	jmp    0x14002d34d
   14002d362:	jmp    0x14002d363
   14002d364:	jmp    0x14002d351
   14002d366:	jmp    0x14002d367
   14002d368:	retf   0xebd8
   14002d36b:	jmp    QWORD PTR [rsi-0x19001f41]
   14002d371:	out    0xe5,al
   14002d373:	(bad)  
   14002d374:	call   0x12602b860
   14002d379:	loop   0x14002d35a
   14002d37b:	jmp    rax
   14002d37d:	(bad)  
   14002d37f:	(bad)  
   14002d380:	(bad)  
   14002d382:	sar    edi,cl
   14002d384:	fstp   st(2)
   14002d386:	(bad)  
   14002d387:	(bad)  
   14002d388:	(bad)  
   14002d38a:	xlat   BYTE PTR ds:[rbx]
   14002d38b:	(bad)  
   14002d38c:	fcmovbe st,st(5)
   14002d38e:	(bad)  
   14002d38f:	(bad)  
   14002d390:	(bad)  
   14002d392:	sar    bh,cl
   14002d394:	retf   
   14002d395:	ret    0xffb6
   14002d398:	xchg   edx,eax
   14002d399:	jp     0x14002d3f9
   14002d39b:	dec    DWORD PTR [rdi-0x4e00a78a]
   14002d3a1:	movabs eax,ds:0xebebffebebebff8e
   14002d3aa:	jmp    0x14002d3ab
   14002d3ac:	jmp    0x14002d399
   14002d3ae:	jmp    0x14002d3af
   14002d3b0:	jmp    0x14002d39d
   14002d3b2:	jmp    0x14002d3b3
   14002d3b4:	(bad)  
   14002d3b5:	(bad)  
   14002d3b6:	(bad)  
   14002d3b7:	(bad)  
   14002d3b8:	(bad)  
   14002d3b9:	(bad)  
   14002d3ba:	(bad)  
   14002d3bb:	(bad)  
   14002d3bc:	(bad)  
   14002d3bd:	(bad)  
   14002d3be:	(bad)  
   14002d3bf:	(bad)  
   14002d3c0:	(bad)  
   14002d3c2:	fdiv   st(7),st
   14002d3c4:	xchg   ebp,eax
   14002d3c5:	and    BYTE PTR [rbp-0x1],0x97
   14002d3c9:	sub    DWORD PTR [rax-0x1],0xffffffdd
   14002d3cd:	fstp   st(5)
   14002d3cf:	(bad)  
   14002d3d0:	jmp    0x14002d3bd
   14002d3d2:	jmp    0x14002d3d3
   14002d3d4:	jmp    0x14002d3c1
   14002d3d6:	jmp    0x14002d3d7
   14002d3d8:	jmp    0x14002d3c5
   14002d3da:	jmp    0x14002d3db
   14002d3dc:	jmp    0x14002d3c9
   14002d3de:	jmp    0x14002d3df
   14002d3e0:	in     eax,dx
   14002d3e1:	in     eax,dx
   14002d3e2:	in     eax,dx
   14002d3e3:	(bad)  
   14002d3e4:	in     eax,dx
   14002d3e5:	in     eax,dx
   14002d3e6:	in     eax,dx
   14002d3e7:	(bad)  
   14002d3e8:	in     eax,dx
   14002d3e9:	in     eax,dx
   14002d3ea:	in     eax,dx
   14002d3eb:	(bad)  
   14002d3ec:	in     eax,dx
   14002d3ed:	in     eax,dx
   14002d3ee:	in     eax,dx
   14002d3ef:	(bad)  
   14002d3f0:	in     eax,dx
   14002d3f1:	in     eax,dx
   14002d3f2:	in     eax,dx
   14002d3f3:	(bad)  
   14002d3f4:	in     eax,dx
   14002d3f5:	in     eax,dx
   14002d3f6:	in     eax,dx
   14002d3f7:	(bad)  
   14002d3f8:	call   0x12202bae4
   14002d3fd:	fstp   st(1)
   14002d3ff:	dec    edx
   14002d401:	shl    DWORD PTR [rsi-0x6a574801],0xff
   14002d408:	mov    edx,0xc7ff9aac
   14002d40d:	mov    ebp,0xd6dbffb1
   14002d412:	iret   
   14002d413:	(bad)  
   14002d414:	in     eax,dx
   14002d415:	in     eax,dx
   14002d416:	in     eax,dx
   14002d417:	(bad)  
   14002d418:	in     eax,dx
   14002d419:	in     eax,dx
   14002d41a:	in     eax,dx
   14002d41b:	(bad)  
   14002d41c:	in     eax,dx
   14002d41d:	in     eax,dx
   14002d41e:	in     eax,dx
   14002d41f:	(bad)  
   14002d420:	fsubr  st(2),st
   14002d422:	jmp    0x12de2a926
   14002d427:	jmp    rax
   14002d429:	out    0xed,al
   14002d42b:	jmp    FWORD PTR [rdx-0x5c]
   14002d42e:	in     eax,dx
   14002d42f:	jmp    QWORD PTR [rax-0x68]
   14002d432:	in     al,0xff
   14002d434:	in     al,0xe8
   14002d436:	in     eax,dx
   14002d437:	(bad)  
   14002d438:	in     eax,dx
   14002d439:	in     eax,dx
   14002d43a:	in     eax,dx
   14002d43b:	(bad)  
   14002d43c:	in     eax,dx
   14002d43d:	in     eax,dx
   14002d43e:	in     eax,dx
   14002d43f:	(bad)  
   14002d440:	in     eax,dx
   14002d441:	in     eax,dx
   14002d442:	in     eax,dx
   14002d443:	(bad)  
   14002d444:	in     eax,dx
   14002d445:	in     eax,dx
   14002d446:	in     eax,dx
   14002d447:	jmp    rsp
   14002d449:	loop   0x14002d42b
   14002d44b:	dec    edx
   14002d44d:	shl    BYTE PTR [rbp-0x6c594a01],0xff
   14002d454:	sahf   
   14002d455:	mov    BYTE PTR [rax-0x1],dh
   14002d458:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002d459:	xchg   ebx,eax
   14002d45a:	jl     0x14002d45b
   14002d45c:	retf   
   14002d45d:	ret    0xffb8
   14002d460:	out    0xe6,eax
   14002d462:	jrcxz  0x14002d463
   14002d464:	in     eax,dx
   14002d465:	in     eax,dx
   14002d466:	in     eax,dx
   14002d467:	(bad)  
   14002d468:	in     eax,dx
   14002d469:	in     eax,dx
   14002d46a:	in     eax,dx
   14002d46b:	(bad)  
   14002d46c:	in     eax,dx
   14002d46d:	in     eax,dx
   14002d46e:	in     eax,dx
   14002d46f:	(bad)  
   14002d470:	in     eax,dx
   14002d471:	in     eax,dx
   14002d472:	in     eax,dx
   14002d473:	(bad)  
   14002d474:	jmp    0x14002d461
   14002d476:	jmp    0x14002d477
   14002d478:	jmp    0x14002d465
   14002d47a:	jmp    0x14002d47b
   14002d47c:	jmp    0x14002d469
   14002d47e:	jmp    0x14002d47f
   14002d480:	fstp   st(5)
   14002d482:	(bad)  
   14002d484:	xchg   edi,eax
   14002d485:	sub    DWORD PTR [rax-0x1],0xffffff9a
   14002d489:	test   DWORD PTR [rbx-0x1],ebp
   14002d48c:	(bad)  
   14002d48e:	fdivp  st(7),st
   14002d490:	in     al,dx
   14002d491:	in     al,dx
   14002d492:	in     al,dx
   14002d493:	(bad)  
   14002d494:	in     eax,dx
   14002d495:	in     eax,dx
   14002d496:	in     eax,dx
   14002d497:	(bad)  
   14002d498:	in     eax,dx
   14002d499:	in     eax,dx
   14002d49a:	in     eax,dx
   14002d49b:	(bad)  
   14002d49c:	in     eax,dx
   14002d49d:	in     eax,dx
   14002d49e:	in     eax,dx
   14002d49f:	(bad)  
   14002d4a0:	out    dx,al
   14002d4a1:	out    dx,al
   14002d4a2:	out    dx,al
   14002d4a3:	(bad)  
   14002d4a4:	out    dx,al
   14002d4a5:	out    dx,al
   14002d4a6:	out    dx,al
   14002d4a7:	(bad)  
   14002d4a8:	out    dx,al
   14002d4a9:	out    dx,al
   14002d4aa:	out    dx,al
   14002d4ab:	(bad)  
   14002d4ac:	out    dx,al
   14002d4ad:	out    dx,al
   14002d4ae:	out    dx,al
   14002d4af:	(bad)  
   14002d4b0:	out    dx,al
   14002d4b1:	out    dx,al
   14002d4b2:	out    dx,al
   14002d4b3:	(bad)  
   14002d4b4:	out    dx,al
   14002d4b5:	out    dx,al
   14002d4b6:	out    dx,al
   14002d4b7:	(bad)  
   14002d4b8:	out    dx,al
   14002d4b9:	out    dx,al
   14002d4ba:	out    dx,al
   14002d4bb:	(bad)  
   14002d4bc:	out    dx,al
   14002d4bd:	out    dx,al
   14002d4be:	out    dx,al
   14002d4bf:	(bad)  
   14002d4c0:	in     eax,dx
   14002d4c1:	in     al,dx
   14002d4c2:	jmp    0x14002d4c3
   14002d4c4:	jmp    0x12802bbb1
   14002d4c9:	out    0xe3,al
   14002d4cb:	jmp    rdx
   14002d4cd:	(bad)  
   14002d4cf:	jmp    rsp
   14002d4d1:	loope  0x14002d4af
   14002d4d3:	(bad)  
   14002d4d4:	out    dx,al
   14002d4d5:	out    dx,al
   14002d4d6:	out    dx,al
   14002d4d7:	(bad)  
   14002d4d8:	out    dx,al
   14002d4d9:	out    dx,al
   14002d4da:	out    dx,al
   14002d4db:	call   rbp
   14002d4dd:	loopne 0x14002d4cf
   14002d4df:	jmp    FWORD PTR [rbp+riz*4-0x15]
   14002d4e3:	push   QWORD PTR [rbp-0x11001232]
   14002d4e9:	out    dx,al
   14002d4ea:	out    dx,al
   14002d4eb:	call   QWORD PTR [rdi+0xbffebbe]
   14002d4f1:	push   0xffffffffad7affe7
   14002d4f6:	icebp  
   14002d4f7:	(bad)  
   14002d4f8:	out    dx,al
   14002d4f9:	out    dx,al
   14002d4fa:	out    dx,al
   14002d4fb:	(bad)  
   14002d4fc:	out    dx,al
   14002d4fd:	out    dx,al
   14002d4fe:	out    dx,al
   14002d4ff:	(bad)  
   14002d500:	out    dx,al
   14002d501:	out    dx,al
   14002d502:	out    dx,al
   14002d503:	(bad)  
   14002d504:	out    dx,al
   14002d505:	out    dx,al
   14002d506:	out    dx,al
   14002d507:	(bad)  
   14002d508:	out    dx,al
   14002d509:	out    dx,al
   14002d50a:	in     eax,dx
   14002d50b:	(bad)  
   14002d50c:	call   0x11902b8f7
   14002d511:	ror    ebx,cl
   14002d513:	call   rsi
   14002d515:	ror    al,1
   14002d517:	jmp    rdi
   14002d519:	in     eax,0xe2
   14002d51b:	(bad)  
   14002d51c:	in     eax,dx
   14002d51d:	in     eax,dx
   14002d51e:	in     eax,dx
   14002d51f:	(bad)  
   14002d520:	out    dx,al
   14002d521:	out    dx,al
   14002d522:	out    dx,al
   14002d523:	(bad)  
   14002d524:	out    dx,al
   14002d525:	out    dx,al
   14002d526:	out    dx,al
   14002d527:	(bad)  
   14002d528:	out    dx,al
   14002d529:	out    dx,al
   14002d52a:	out    dx,al
   14002d52b:	(bad)  
   14002d52c:	out    dx,al
   14002d52d:	out    dx,al
   14002d52e:	out    dx,al
   14002d52f:	(bad)  
   14002d530:	out    dx,al
   14002d531:	out    dx,al
   14002d532:	out    dx,al
   14002d533:	(bad)  
   14002d534:	in     eax,dx
   14002d535:	in     eax,dx
   14002d536:	in     eax,dx
   14002d537:	(bad)  
   14002d538:	in     eax,dx
   14002d539:	in     eax,dx
   14002d53a:	in     eax,dx
   14002d53b:	(bad)  
   14002d53c:	in     al,dx
   14002d53d:	in     al,dx
   14002d53e:	in     al,dx
   14002d53f:	(bad)  
   14002d540:	(bad)  
   14002d542:	fdivp  st(7),st
   14002d544:	(bad)  
   14002d545:	test   DWORD PTR [rbx-0x1],ebp
   14002d548:	lahf   
   14002d549:	mov    dh,BYTE PTR [rax-0x1]
   14002d54c:	loopne 0x14002d52e
   14002d54e:	loopne 0x14002d54f
   14002d550:	out    dx,al
   14002d551:	out    dx,al
   14002d552:	out    dx,al
   14002d553:	(bad)  
   14002d554:	out    dx,eax
   14002d555:	out    dx,eax
   14002d556:	out    dx,eax
   14002d557:	(bad)  
   14002d558:	out    dx,eax
   14002d559:	out    dx,eax
   14002d55a:	out    dx,eax
   14002d55b:	(bad)  
   14002d55c:	out    dx,eax
   14002d55d:	out    dx,eax
   14002d55e:	out    dx,eax
   14002d55f:	(bad)  
   14002d560:	out    dx,eax
   14002d561:	out    dx,eax
   14002d562:	out    dx,eax
   14002d563:	(bad)  
   14002d564:	out    dx,eax
   14002d565:	out    dx,eax
   14002d566:	out    dx,eax
   14002d567:	(bad)  
   14002d568:	out    dx,eax
   14002d569:	out    dx,eax
   14002d56a:	out    dx,eax
   14002d56b:	(bad)  
   14002d56c:	out    dx,eax
   14002d56d:	out    dx,eax
   14002d56e:	out    dx,eax
   14002d56f:	(bad)  
   14002d570:	out    dx,eax
   14002d571:	out    dx,eax
   14002d572:	out    dx,eax
   14002d573:	(bad)  
   14002d574:	out    dx,eax
   14002d575:	out    dx,eax
   14002d576:	out    dx,eax
   14002d577:	(bad)  
   14002d578:	out    dx,eax
   14002d579:	out    dx,eax
   14002d57a:	out    dx,eax
   14002d57b:	(bad)  
   14002d57c:	out    dx,eax
   14002d57d:	out    dx,eax
   14002d57e:	out    dx,eax
   14002d57f:	(bad)  
   14002d580:	out    dx,eax
   14002d581:	out    dx,eax
   14002d582:	out    dx,eax
   14002d583:	(bad)  
   14002d584:	out    dx,eax
   14002d585:	out    dx,eax
   14002d586:	out    dx,eax
   14002d587:	(bad)  
   14002d588:	out    dx,eax
   14002d589:	out    dx,eax
   14002d58a:	out    dx,eax
   14002d58b:	(bad)  
   14002d58c:	out    dx,eax
   14002d58d:	out    dx,eax
   14002d58e:	out    dx,eax
   14002d58f:	(bad)  
   14002d590:	out    dx,eax
   14002d591:	out    dx,eax
   14002d592:	out    dx,al
   14002d593:	(bad)  
   14002d594:	out    dx,eax
   14002d595:	out    dx,eax
   14002d596:	out    dx,eax
   14002d597:	(bad)  
   14002d598:	fsub   st,st(2)
   14002d59a:	out    dx,eax
   14002d59b:	call   QWORD PTR [rdx-0x6a]
   14002d59e:	call   0x12aac48a2
   14002d5a3:	(bad)  
   14002d5a4:	(bad)  
   14002d5a5:	in     al,dx
   14002d5a6:	out    dx,eax
   14002d5a7:	(bad)  
   14002d5a8:	out    dx,eax
   14002d5a9:	out    dx,eax
   14002d5aa:	out    dx,eax
   14002d5ab:	call   QWORD PTR [rdi+0x8ffecbe]
   14002d5b1:	addr32 in al,0xff
   14002d5b4:	xor    eax,DWORD PTR [rbx-0x27390019]
   14002d5ba:	in     eax,dx
   14002d5bb:	(bad)  
   14002d5bc:	out    dx,eax
   14002d5bd:	out    dx,eax
   14002d5be:	out    dx,eax
   14002d5bf:	(bad)  
   14002d5c0:	out    dx,eax
   14002d5c1:	out    dx,eax
   14002d5c2:	out    dx,eax
   14002d5c3:	(bad)  
   14002d5c4:	out    dx,eax
   14002d5c5:	out    dx,eax
   14002d5c6:	out    dx,eax
   14002d5c7:	(bad)  
   14002d5c8:	out    dx,eax
   14002d5c9:	out    dx,eax
   14002d5ca:	out    dx,eax
   14002d5cb:	(bad)  
   14002d5cc:	out    dx,eax
   14002d5cd:	out    dx,eax
   14002d5ce:	out    dx,eax
   14002d5cf:	(bad)  
   14002d5d0:	out    dx,eax
   14002d5d1:	out    dx,eax
   14002d5d2:	out    dx,al
   14002d5d3:	(bad)  
   14002d5d4:	out    dx,eax
   14002d5d5:	out    dx,eax
   14002d5d6:	out    dx,eax
   14002d5d7:	(bad)  
   14002d5d8:	out    dx,eax
   14002d5d9:	out    dx,eax
   14002d5da:	out    dx,eax
   14002d5db:	(bad)  
   14002d5dc:	out    dx,eax
   14002d5dd:	out    dx,eax
   14002d5de:	out    dx,eax
   14002d5df:	(bad)  
   14002d5e0:	out    dx,eax
   14002d5e1:	out    dx,eax
   14002d5e2:	out    dx,eax
   14002d5e3:	(bad)  
   14002d5e4:	out    dx,eax
   14002d5e5:	out    dx,eax
   14002d5e6:	out    dx,eax
   14002d5e7:	(bad)  
   14002d5e8:	out    dx,eax
   14002d5e9:	out    dx,eax
   14002d5ea:	out    dx,eax
   14002d5eb:	(bad)  
   14002d5ec:	out    dx,eax
   14002d5ed:	out    dx,eax
   14002d5ee:	out    dx,eax
   14002d5ef:	(bad)  
   14002d5f0:	out    dx,eax
   14002d5f1:	out    dx,eax
   14002d5f2:	out    dx,eax
   14002d5f3:	(bad)  
   14002d5f4:	out    dx,eax
   14002d5f5:	out    dx,eax
   14002d5f6:	out    dx,eax
   14002d5f7:	(bad)  
   14002d5f8:	out    dx,eax
   14002d5f9:	out    dx,eax
   14002d5fa:	out    dx,eax
   14002d5fb:	(bad)  
   14002d5fc:	out    dx,al
   14002d5fd:	out    dx,al
   14002d5fe:	out    dx,al
   14002d5ff:	jmp    rax
   14002d601:	loopne 0x14002d5e3
   14002d603:	call   FWORD PTR [rdi-0x5e008f76]
   14002d609:	lea    esi,[rbx-0x1]
   14002d60c:	loope  0x14002d5ef
   14002d60e:	loope  0x14002d60f
   14002d610:	out    dx,eax
   14002d611:	out    dx,eax
   14002d612:	out    dx,eax
   14002d613:	push   rax
   14002d615:	lock lock push rax
   14002d619:	lock lock push rax
   14002d61d:	lock lock push rax
   14002d621:	lock lock push rax
   14002d625:	lock lock push rax
   14002d629:	lock lock push rax
   14002d62d:	lock lock push rax
   14002d631:	lock lock push rax
   14002d635:	lock lock push rax
   14002d639:	lock lock push rax
   14002d63d:	lock lock push rax
   14002d641:	lock lock push rax
   14002d645:	lock lock push rax
   14002d649:	lock lock push rax
   14002d64d:	lock lock push rax
   14002d651:	lock lock (bad) 
   14002d654:	(bad)  
   14002d656:	lock dec DWORD PTR [rsi-0x6d]
   14002d65a:	out    0xff,eax
   14002d65c:	rex.XB (bad) 
   14002d65e:	out    0xff,eax
   14002d660:	(bad)  
   14002d662:	lock push rax
   14002d665:	lock lock dec eax
   14002d669:	fucomi st,st(6)
   14002d66b:	push   QWORD PTR [rsi]
   14002d66d:	test   edi,esp
   14002d66f:	dec    DWORD PTR [rdx]
   14002d671:	push   0x7925ffe4
   14002d676:	in     eax,0xff
   14002d678:	mov    al,0xcc
   14002d67a:	in     eax,dx
   14002d67b:	push   rax
   14002d67d:	lock lock push rax
   14002d681:	lock lock push rax
   14002d685:	lock lock push rax
   14002d689:	lock lock push rax
   14002d68d:	lock lock push rax
   14002d691:	lock lock push rax
   14002d695:	lock lock push rax
   14002d699:	lock lock push rax
   14002d69d:	lock lock push rax
   14002d6a1:	lock lock push rax
   14002d6a5:	lock lock push rax
   14002d6a9:	lock lock push rax
   14002d6ad:	lock lock push rax
   14002d6b1:	lock lock push rax
   14002d6b5:	lock lock push rax
   14002d6b9:	lock lock (bad) 
   14002d6bc:	out    dx,eax
   14002d6bd:	out    dx,eax
   14002d6be:	out    dx,eax
   14002d6bf:	jmp    rcx
   14002d6c1:	loope  0x14002d6a4
   14002d6c3:	jmp    QWORD PTR [rcx-0x5c008c73]
   14002d6c9:	(bad)  
   14002d6ca:	jne    0x14002d6cb
   14002d6cc:	loop   0x14002d6b0
   14002d6ce:	loop   0x14002d6cf
   14002d6d0:	lock lock lock push rcx
   14002d6d5:	icebp  
   14002d6d6:	icebp  
   14002d6d7:	push   rcx
   14002d6d9:	icebp  
   14002d6da:	icebp  
   14002d6db:	push   rcx
   14002d6dd:	icebp  
   14002d6de:	icebp  
   14002d6df:	push   rcx
   14002d6e1:	icebp  
   14002d6e2:	icebp  
   14002d6e3:	push   rcx
   14002d6e5:	icebp  
   14002d6e6:	icebp  
   14002d6e7:	push   rcx
   14002d6e9:	icebp  
   14002d6ea:	icebp  
   14002d6eb:	push   rcx
   14002d6ed:	icebp  
   14002d6ee:	icebp  
   14002d6ef:	push   rcx
   14002d6f1:	icebp  
   14002d6f2:	icebp  
   14002d6f3:	push   rcx
   14002d6f5:	icebp  
   14002d6f6:	icebp  
   14002d6f7:	push   rcx
   14002d6f9:	icebp  
   14002d6fa:	icebp  
   14002d6fb:	push   rcx
   14002d6fd:	icebp  
   14002d6fe:	icebp  
   14002d6ff:	push   rcx
   14002d701:	icebp  
   14002d702:	icebp  
   14002d703:	push   rcx
   14002d705:	icebp  
   14002d706:	icebp  
   14002d707:	push   rcx
   14002d709:	icebp  
   14002d70a:	icebp  
   14002d70b:	push   rcx
   14002d70d:	icebp  
   14002d70e:	icebp  
   14002d70f:	jmp    rsi
   14002d711:	jmp    0x14002d704
   14002d713:	call   FWORD PTR [rdi-0x62]
   14002d716:	jmp    0x12575f31a
   14002d71b:	push   QWORD PTR [rcx-0xe001133]
   14002d721:	icebp  
   14002d722:	icebp  
   14002d723:	jmp    rax
   14002d725:	out    0xf0,eax
   14002d727:	call   FWORD PTR [rsi-0x62]
   14002d72a:	jmp    0x1246ce52e
   14002d72f:	dec    DWORD PTR [rip+0x3affe46a]        # 0x17b02bb9f
   14002d735:	mov    bh,ah
   14002d737:	inc    esi
   14002d739:	(bad)  
   14002d73b:	push   rcx
   14002d73d:	icebp  
   14002d73e:	icebp  
   14002d73f:	push   rcx
   14002d741:	icebp  
   14002d742:	icebp  
   14002d743:	push   rcx
   14002d745:	icebp  
   14002d746:	icebp  
   14002d747:	push   rcx
   14002d749:	icebp  
   14002d74a:	icebp  
   14002d74b:	push   rcx
   14002d74d:	icebp  
   14002d74e:	icebp  
   14002d74f:	push   rcx
   14002d751:	icebp  
   14002d752:	icebp  
   14002d753:	push   rcx
   14002d755:	icebp  
   14002d756:	icebp  
   14002d757:	push   rcx
   14002d759:	icebp  
   14002d75a:	icebp  
   14002d75b:	push   rcx
   14002d75d:	icebp  
   14002d75e:	icebp  
   14002d75f:	push   rcx
   14002d761:	icebp  
   14002d762:	icebp  
   14002d763:	push   rcx
   14002d765:	icebp  
   14002d766:	icebp  
   14002d767:	push   rcx
   14002d769:	icebp  
   14002d76a:	icebp  
   14002d76b:	push   rcx
   14002d76d:	icebp  
   14002d76e:	icebp  
   14002d76f:	push   rcx
   14002d771:	icebp  
   14002d772:	icebp  
   14002d773:	push   rcx
   14002d775:	icebp  
   14002d776:	icebp  
   14002d777:	push   rcx
   14002d779:	icebp  
   14002d77a:	icebp  
   14002d77b:	push   rax
   14002d77d:	lock lock jmp rdx
   14002d781:	loop   0x14002d765
   14002d783:	jmp    QWORD PTR [rbx-0x59008a71]
   14002d789:	xchg   ecx,eax
   14002d78a:	js     0x14002d78b
   14002d78c:	jrcxz  0x14002d771
   14002d78e:	jrcxz  0x14002d78f
   14002d790:	icebp  
   14002d791:	icebp  
   14002d792:	icebp  
   14002d793:	push   rdx
   14002d795:	repnz repnz push rdx
   14002d799:	repnz repnz push rdx
   14002d79d:	repnz repnz push rdx
   14002d7a1:	repnz repnz push rdx
   14002d7a5:	repnz repnz push rdx
   14002d7a9:	repnz repnz push rdx
   14002d7ad:	repnz repnz push rdx
   14002d7b1:	repnz repnz push rdx
   14002d7b5:	repnz repnz push rdx
   14002d7b9:	repnz repnz push rdx
   14002d7bd:	repnz repnz push rdx
   14002d7c1:	repnz repnz push rdx
   14002d7c5:	repnz repnz push rdx
   14002d7c9:	repnz repnz push rdx
   14002d7cd:	repnz bnd jmp QWORD PTR [rax+0xeffeec4]
   14002d7d5:	imul   esp,ebp,0xffffffff
   14002d7d8:	push   0xfffffffff2ffeaa4
   14002d7dd:	repnz repnz push rcx
   14002d7e1:	icebp  
   14002d7e2:	repnz jmp FWORD PTR [rbx+0x13ffeecb]
   14002d7e9:	ins    DWORD PTR es:[rdi],dx
   14002d7ea:	in     eax,0xff
   14002d7ec:	(bad)  
   14002d7ed:	imul   esp,ebp,0xffffffff
   14002d7f0:	(bad)  
   14002d7f1:	jo     0x14002d7d8
   14002d7f3:	dec    DWORD PTR [rsi-0xd001346]
   14002d7f9:	repnz repnz push rdx
   14002d7fd:	repnz repnz push rdx
   14002d801:	repnz repnz push rdx
   14002d805:	repnz repnz push rdx
   14002d809:	repnz repnz push rdx
   14002d80d:	repnz repnz push rdx
   14002d811:	repnz repnz push rdx
   14002d815:	repnz repnz push rdx
   14002d819:	repnz repnz push rdx
   14002d81d:	repnz repnz push rdx
   14002d821:	repnz repnz push rdx
   14002d825:	repnz repnz push rdx
   14002d829:	repnz repnz push rdx
   14002d82d:	repnz repnz push rdx
   14002d831:	repnz repnz push rdx
   14002d835:	repnz repnz push rdx
   14002d839:	repnz repnz push rcx
   14002d83d:	icebp  
   14002d83e:	icebp  
   14002d83f:	jmp    rbx
   14002d841:	jrcxz  0x14002d826
   14002d843:	jmp    QWORD PTR [rsi-0x5700876f]
   14002d849:	xchg   esp,eax
   14002d84a:	jnp    0x14002d84b
   14002d84c:	in     al,0xe4
   14002d84e:	in     al,0xff
   14002d850:	repnz repnz repnz push rbx
   14002d855:	repz repz push rbx
   14002d859:	repz repz push rbx
   14002d85d:	repz repz push rbx
   14002d861:	repz repz push rbx
   14002d865:	repz repz push rbx
   14002d869:	repz repz push rbx
   14002d86d:	repz repz push rbx
   14002d871:	repz repz push rbx
   14002d875:	repz repz push rbx
   14002d879:	repz repz push rbx
   14002d87d:	repz repz push rbx
   14002d881:	repz repz push rbx
   14002d885:	repz repz push rbx
   14002d889:	repz repz jmp rdx
   14002d88d:	jmp    0x1bf31d884
   14002d892:	out    0xff,eax
   14002d894:	(bad)  
   14002d895:	jbe    0x14002d87d
   14002d897:	jmp    FWORD PTR [rbx-0xc001034]
   14002d89d:	repz repz jmp rbx
   14002d8a1:	jmp    0xe064d898
   14002d8a6:	jmp    0x1256ee9aa
   14002d8ab:	call   QWORD PTR [rdx]
   14002d8ad:	ins    DWORD PTR es:[rdi],dx
   14002d8ae:	in     eax,0xff
   14002d8b0:	push   rdi
   14002d8b1:	cdq    
   14002d8b2:	jmp    0x132efc0b6
   14002d8b7:	push   rbx
   14002d8b9:	repz repz push rbx
   14002d8bd:	repz repz push rbx
   14002d8c1:	repz repz push rbx
   14002d8c5:	repz repz push rbx
   14002d8c9:	repz repz push rbx
   14002d8cd:	repz repz push rbx
   14002d8d1:	repz repz push rbx
   14002d8d5:	repz repz push rbx
   14002d8d9:	repz repz push rbx
   14002d8dd:	repz repz push rbx
   14002d8e1:	repz repz push rbx
   14002d8e5:	repz repz push rbx
   14002d8e9:	repz repz push rbx
   14002d8ed:	repz repz push rbx
   14002d8f1:	repz repz push rbx
   14002d8f5:	repz repz push rbx
   14002d8f9:	repz repz push rdx
   14002d8fd:	repnz bnd jmp rsp
   14002d901:	in     al,0xe4
   14002d903:	jmp    FWORD PTR [rax-0x5500846c]
   14002d909:	xchg   esi,eax
   14002d90a:	jge    0x14002d90b
   14002d90c:	in     eax,0xe5
   14002d90e:	in     eax,0xff
   14002d910:	repz repz repz push rsp
   14002d915:	hlt    
   14002d916:	hlt    
   14002d917:	push   rsp
   14002d919:	hlt    
   14002d91a:	hlt    
   14002d91b:	push   rsp
   14002d91d:	hlt    
   14002d91e:	hlt    
   14002d91f:	push   rsp
   14002d921:	hlt    
   14002d922:	hlt    
   14002d923:	push   rsp
   14002d925:	hlt    
   14002d926:	hlt    
   14002d927:	push   rsp
   14002d929:	hlt    
   14002d92a:	hlt    
   14002d92b:	push   rsp
   14002d92d:	hlt    
   14002d92e:	hlt    
   14002d92f:	push   rsp
   14002d931:	hlt    
   14002d932:	hlt    
   14002d933:	push   rsp
   14002d935:	hlt    
   14002d936:	hlt    
   14002d937:	push   rsp
   14002d939:	hlt    
   14002d93a:	hlt    
   14002d93b:	push   rsp
   14002d93d:	hlt    
   14002d93e:	hlt    
   14002d93f:	push   rsp
   14002d941:	hlt    
   14002d942:	hlt    
   14002d943:	push   rsp
   14002d945:	hlt    
   14002d946:	hlt    
   14002d947:	push   rsp
   14002d949:	hlt    
   14002d94a:	hlt    
   14002d94b:	(bad)  
   14002d94c:	mov    ebx,0x15fff0d5
   14002d951:	outs   dx,DWORD PTR ds:[rsi]
   14002d952:	in     eax,0xff
   14002d954:	sub    eax,0xc0ffe77f
   14002d959:	xlat   BYTE PTR ds:[rbx]
   14002d95a:	icebp  
   14002d95b:	push   rsp
   14002d95d:	hlt    
   14002d95e:	hlt    
   14002d95f:	(bad)  
   14002d960:	fsubp  st(1),st
   14002d962:	repz call QWORD PTR [rax-0x6b]
   14002d966:	(bad)  
   14002d967:	call   QWORD PTR [rbx]
   14002d969:	ins    DWORD PTR es:[rdi],dx
   14002d96a:	in     eax,0xff
   14002d96c:	sub    edi,DWORD PTR [rsi-0x19]
   14002d96f:	push   QWORD PTR [rdi-0xb000f2e]
   14002d975:	hlt    
   14002d976:	hlt    
   14002d977:	push   rsp
   14002d979:	hlt    
   14002d97a:	hlt    
   14002d97b:	push   rsp
   14002d97d:	hlt    
   14002d97e:	hlt    
   14002d97f:	push   rsp
   14002d981:	hlt    
   14002d982:	hlt    
   14002d983:	push   rsp
   14002d985:	hlt    
   14002d986:	hlt    
   14002d987:	push   rsp
   14002d989:	hlt    
   14002d98a:	hlt    
   14002d98b:	push   rsp
   14002d98d:	hlt    
   14002d98e:	hlt    
   14002d98f:	push   rsp
   14002d991:	hlt    
   14002d992:	hlt    
   14002d993:	push   rsp
   14002d995:	hlt    
   14002d996:	hlt    
   14002d997:	push   rsp
   14002d999:	hlt    
   14002d99a:	hlt    
   14002d99b:	push   rsp
   14002d99d:	hlt    
   14002d99e:	hlt    
   14002d99f:	push   rsp
   14002d9a1:	hlt    
   14002d9a2:	hlt    
   14002d9a3:	push   rsp
   14002d9a5:	hlt    
   14002d9a6:	hlt    
   14002d9a7:	push   rsp
   14002d9a9:	hlt    
   14002d9aa:	hlt    
   14002d9ab:	push   rsp
   14002d9ad:	hlt    
   14002d9ae:	hlt    
   14002d9af:	push   rsp
   14002d9b1:	hlt    
   14002d9b2:	hlt    
   14002d9b3:	push   rsp
   14002d9b5:	hlt    
   14002d9b6:	hlt    
   14002d9b7:	push   rsp
   14002d9b9:	hlt    
   14002d9ba:	hlt    
   14002d9bb:	push   rbx
   14002d9bd:	repz repz jmp rbp
   14002d9c1:	in     eax,0xe5
   14002d9c3:	jmp    FWORD PTR [rdx-0x5300826a]
   14002d9c9:	cwde   
   14002d9ca:	cmp    bh,0xe5
   14002d9cd:	in     eax,0xe5
   14002d9cf:	push   rbx
   14002d9d1:	repz repz push rsp
   14002d9d5:	hlt    
   14002d9d6:	hlt    
   14002d9d7:	push   rsp
   14002d9d9:	hlt    
   14002d9da:	hlt    
   14002d9db:	push   rsp
   14002d9dd:	hlt    
   14002d9de:	hlt    
   14002d9df:	push   rsp
   14002d9e1:	hlt    
   14002d9e2:	hlt    
   14002d9e3:	push   rsp
   14002d9e5:	hlt    
   14002d9e6:	hlt    
   14002d9e7:	push   rsp
   14002d9e9:	hlt    
   14002d9ea:	hlt    
   14002d9eb:	push   rsp
   14002d9ed:	hlt    
   14002d9ee:	hlt    
   14002d9ef:	push   rsp
   14002d9f1:	hlt    
   14002d9f2:	hlt    
   14002d9f3:	push   rsp
   14002d9f5:	hlt    
   14002d9f6:	hlt    
   14002d9f7:	push   rsp
   14002d9f9:	hlt    
   14002d9fa:	hlt    
   14002d9fb:	push   rsp
   14002d9fd:	hlt    
   14002d9fe:	hlt    
   14002d9ff:	push   rsp
   14002da01:	hlt    
   14002da02:	hlt    
   14002da03:	push   rsp
   14002da05:	hlt    
   14002da06:	hlt    
   14002da07:	push   rsp
   14002da09:	hlt    
   14002da0a:	hlt    
   14002da0b:	jmp    QWORD PTR [rbp+0x17ffefc8]
   14002da11:	jno    0x14002d9f8
   14002da13:	jmp    QWORD PTR [rsi]
   14002da15:	jnp    0x14002d9fd
   14002da17:	jmp    FWORD PTR [rdx-0xb001036]
   14002da1d:	hlt    
   14002da1e:	hlt    
   14002da1f:	jmp    rcx
   14002da21:	(bad)  
   14002da22:	repz call QWORD PTR [rbp-0x68]
   14002da26:	(bad)  
   14002da27:	call   QWORD PTR [rip+0x4cffe56f]        # 0x18d02bf9c
   14002da2d:	xchg   ebx,eax
   14002da2e:	jmp    0x134f7cf32
   14002da33:	push   rsp
   14002da35:	hlt    
   14002da36:	hlt    
   14002da37:	push   rsp
   14002da39:	hlt    
   14002da3a:	hlt    
   14002da3b:	push   rsp
   14002da3d:	hlt    
   14002da3e:	hlt    
   14002da3f:	push   rsp
   14002da41:	hlt    
   14002da42:	hlt    
   14002da43:	push   rsp
   14002da45:	hlt    
   14002da46:	hlt    
   14002da47:	push   rsp
   14002da49:	hlt    
   14002da4a:	hlt    
   14002da4b:	push   rsp
   14002da4d:	hlt    
   14002da4e:	hlt    
   14002da4f:	push   rsp
   14002da51:	hlt    
   14002da52:	hlt    
   14002da53:	push   rsp
   14002da55:	hlt    
   14002da56:	hlt    
   14002da57:	push   rsp
   14002da59:	hlt    
   14002da5a:	hlt    
   14002da5b:	push   rsp
   14002da5d:	hlt    
   14002da5e:	hlt    
   14002da5f:	push   rsp
   14002da61:	hlt    
   14002da62:	hlt    
   14002da63:	push   rsp
   14002da65:	hlt    
   14002da66:	hlt    
   14002da67:	push   rsp
   14002da69:	hlt    
   14002da6a:	hlt    
   14002da6b:	push   rsp
   14002da6d:	hlt    
   14002da6e:	hlt    
   14002da6f:	push   rsp
   14002da71:	hlt    
   14002da72:	hlt    
   14002da73:	push   rsp
   14002da75:	hlt    
   14002da76:	hlt    
   14002da77:	push   rsp
   14002da79:	hlt    
   14002da7a:	hlt    
   14002da7b:	push   rbx
   14002da7d:	repz repz jmp rbp
   14002da81:	in     eax,0xe5
   14002da83:	jmp    FWORD PTR [rax+rbx*4-0x64500080]
   14002da8a:	(bad)  
   14002da8b:	jmp    rsi
   14002da8d:	out    0xe6,al
   14002da8f:	push   rsp
   14002da91:	hlt    
   14002da92:	hlt    
   14002da93:	push   rbp
   14002da95:	cmc    
   14002da96:	cmc    
   14002da97:	push   rbp
   14002da99:	cmc    
   14002da9a:	cmc    
   14002da9b:	push   rbp
   14002da9d:	cmc    
   14002da9e:	cmc    
   14002da9f:	push   rbp
   14002daa1:	cmc    
   14002daa2:	cmc    
   14002daa3:	push   rbp
   14002daa5:	cmc    
   14002daa6:	cmc    
   14002daa7:	push   rbp
   14002daa9:	cmc    
   14002daaa:	cmc    
   14002daab:	push   rbp
   14002daad:	cmc    
   14002daae:	cmc    
   14002daaf:	push   rbp
   14002dab1:	cmc    
   14002dab2:	cmc    
   14002dab3:	push   rbp
   14002dab5:	cmc    
   14002dab6:	cmc    
   14002dab7:	push   rbp
   14002dab9:	cmc    
   14002daba:	cmc    
   14002dabb:	push   rbp
   14002dabd:	cmc    
   14002dabe:	cmc    
   14002dabf:	push   rbp
   14002dac1:	cmc    
   14002dac2:	cmc    
   14002dac3:	push   rbp
   14002dac5:	cmc    
   14002dac6:	cmc    
   14002dac7:	push   rbp
   14002dac9:	cmc    
   14002daca:	cmc    
   14002dacb:	inc    ebx
   14002dacd:	fptan  
   14002dacf:	call   FWORD PTR [rdi]
   14002dad1:	jbe    0x14002dab9
   14002dad3:	call   FWORD PTR [rcx]
   14002dad5:	jb     0x14002dabc
   14002dad7:	jmp    QWORD PTR [rbx-0x5f]
   14002dada:	jmp    0x14002dadb
   14002dadc:	lock icebp 
   14002dade:	cmc    
   14002dadf:	(bad)  
   14002dae0:	in     al,dx
   14002dae1:	lock cmc 
   14002dae3:	inc    DWORD PTR [rcx+0x17ffeeb3]
   14002dae9:	jo     0x14002dad0
   14002daeb:	(bad)  
   14002daec:	cmp    cl,BYTE PTR [rax-0x1a240019]
   14002daf2:	hlt    
   14002daf3:	push   rbp
   14002daf5:	cmc    
   14002daf6:	cmc    
   14002daf7:	push   rbp
   14002daf9:	cmc    
   14002dafa:	cmc    
   14002dafb:	push   rbp
   14002dafd:	cmc    
   14002dafe:	cmc    
   14002daff:	push   rbp
   14002db01:	cmc    
   14002db02:	cmc    
   14002db03:	push   rbp
   14002db05:	cmc    
   14002db06:	cmc    
   14002db07:	push   rbp
   14002db09:	cmc    
   14002db0a:	cmc    
   14002db0b:	push   rbp
   14002db0d:	cmc    
   14002db0e:	cmc    
   14002db0f:	push   rbp
   14002db11:	cmc    
   14002db12:	cmc    
   14002db13:	push   rbp
   14002db15:	cmc    
   14002db16:	cmc    
   14002db17:	push   rbp
   14002db19:	cmc    
   14002db1a:	cmc    
   14002db1b:	push   rbp
   14002db1d:	cmc    
   14002db1e:	cmc    
   14002db1f:	push   rbp
   14002db21:	cmc    
   14002db22:	cmc    
   14002db23:	push   rbp
   14002db25:	cmc    
   14002db26:	cmc    
   14002db27:	push   rbp
   14002db29:	cmc    
   14002db2a:	cmc    
   14002db2b:	push   rbp
   14002db2d:	cmc    
   14002db2e:	cmc    
   14002db2f:	push   rbp
   14002db31:	cmc    
   14002db32:	cmc    
   14002db33:	push   rbp
   14002db35:	cmc    
   14002db36:	cmc    
   14002db37:	push   rbp
   14002db39:	cmc    
   14002db3a:	cmc    
   14002db3b:	push   rsp
   14002db3d:	hlt    
   14002db3e:	hlt    
   14002db3f:	jmp    rsi
   14002db41:	out    0xe6,al
   14002db43:	jmp    FWORD PTR [rdi-0x4e007d65]
   14002db49:	popf   
   14002db4a:	test   edi,edi
   14002db4c:	out    0xe7,eax
   14002db4e:	out    0xff,eax
   14002db50:	cmc    
   14002db51:	cmc    
   14002db52:	cmc    
   14002db53:	push   rsi
   14002db55:	div    dh
   14002db57:	push   rsi
   14002db59:	div    dh
   14002db5b:	push   rsi
   14002db5d:	div    dh
   14002db5f:	push   rsi
   14002db61:	div    dh
   14002db63:	push   rsi
   14002db65:	div    dh
   14002db67:	push   rsi
   14002db69:	div    dh
   14002db6b:	push   rsi
   14002db6d:	div    dh
   14002db6f:	push   rsi
   14002db71:	div    dh
   14002db73:	push   rsi
   14002db75:	div    dh
   14002db77:	push   rsi
   14002db79:	div    dh
   14002db7b:	push   rsi
   14002db7d:	div    dh
   14002db7f:	push   rsi
   14002db81:	div    dh
   14002db83:	push   rsi
   14002db85:	div    dh
   14002db87:	push   rsi
   14002db89:	div    dh
   14002db8b:	(bad)  
   14002db8c:	in     al,dx
   14002db8d:	icebp  
   14002db8e:	idiv   bh
   14002db90:	(bad)  
   14002db91:	lahf   
   14002db92:	jmp    0x14002db93
   14002db94:	sbb    DWORD PTR [rdx-0x1a],esi
   14002db97:	jmp    QWORD PTR [rbx]
   14002db99:	jns    0x14002db81
   14002db9b:	call   FWORD PTR [rdi-0x9000f3b]
   14002dba1:	div    dh
   14002dba3:	call   rdi
   14002dba5:	in     eax,0xf3
   14002dba7:	(bad)  
   14002dba8:	(bad)  
   14002dba9:	mov    ch,al
   14002dbab:	call   FWORD PTR [rcx]
   14002dbad:	jb     0x14002db95
   14002dbaf:	jmp    FWORD PTR [rax-0x5c]
   14002dbb2:	in     al,dx
   14002dbb3:	(bad)  
   14002dbb4:	in     eax,dx
   14002dbb5:	icebp  
   14002dbb6:	idiv   bh
   14002dbb8:	div    dh
   14002dbba:	idiv   bh
   14002dbbc:	div    dh
   14002dbbe:	idiv   bh
   14002dbc0:	div    dh
   14002dbc2:	idiv   bh
   14002dbc4:	div    dh
   14002dbc6:	idiv   bh
   14002dbc8:	div    dh
   14002dbca:	idiv   bh
   14002dbcc:	div    dh
   14002dbce:	idiv   bh
   14002dbd0:	div    dh
   14002dbd2:	idiv   bh
   14002dbd4:	div    dh
   14002dbd6:	idiv   bh
   14002dbd8:	div    dh
   14002dbda:	idiv   bh
   14002dbdc:	div    dh
   14002dbde:	idiv   bh
   14002dbe0:	div    dh
   14002dbe2:	idiv   bh
   14002dbe4:	div    dh
   14002dbe6:	idiv   bh
   14002dbe8:	div    dh
   14002dbea:	idiv   bh
   14002dbec:	div    dh
   14002dbee:	idiv   bh
   14002dbf0:	div    dh
   14002dbf2:	idiv   bh
   14002dbf4:	div    dh
   14002dbf6:	idiv   bh
   14002dbf8:	div    dh
   14002dbfa:	idiv   bh
   14002dbfc:	cmc    
   14002dbfd:	cmc    
   14002dbfe:	cmc    
   14002dbff:	jmp    rdi
   14002dc01:	out    0xe7,eax
   14002dc03:	push   QWORD PTR [rcx-0x4c007a63]
   14002dc09:	lahf   
   14002dc0a:	xchg   edi,edi
   14002dc0c:	call   0x13702c4f9
   14002dc11:	div    dh
   14002dc13:	push   rdi
   14002dc15:	div    edi
   14002dc17:	push   rdi
   14002dc19:	div    edi
   14002dc1b:	push   rdi
   14002dc1d:	div    edi
   14002dc1f:	push   rdi
   14002dc21:	div    edi
   14002dc23:	push   rdi
   14002dc25:	div    edi
   14002dc27:	push   rdi
   14002dc29:	div    edi
   14002dc2b:	push   rdi
   14002dc2d:	div    edi
   14002dc2f:	push   rdi
   14002dc31:	div    edi
   14002dc33:	push   rdi
   14002dc35:	div    edi
   14002dc37:	push   rdi
   14002dc39:	div    edi
   14002dc3b:	push   rdi
   14002dc3d:	div    edi
   14002dc3f:	push   rdi
   14002dc41:	div    edi
   14002dc43:	push   rdi
   14002dc45:	div    edi
   14002dc47:	push   rdi
   14002dc49:	div    edi
   14002dc4b:	push   rdi
   14002dc4d:	div    edi
   14002dc4f:	call   rbp
   14002dc51:	in     al,0xf4
   14002dc53:	inc    DWORD PTR [rbp-0x72]
   14002dc56:	jmp    0x12675f95a
   14002dc5b:	push   QWORD PTR [rip+0xffffffffb3ffe884]        # 0xf402c4e5
   14002dc61:	shl    bl,1
   14002dc63:	push   rdi
   14002dc65:	div    edi
   14002dc67:	inc    ecx
   14002dc69:	fpatan 
   14002dc6b:	(bad)  
   14002dc6c:	(bad)  
   14002dc6d:	mov    ebp,ecx
   14002dc6f:	call   FWORD PTR [rbx+rsi*2]
   14002dc72:	out    0xff,al
   14002dc74:	jnp    0x14002dc26
   14002dc76:	out    dx,al
   14002dc77:	(bad)  
   14002dc78:	jmp    0x13802d36c
   14002dc7d:	div    edi
   14002dc7f:	push   rdi
   14002dc81:	div    edi
   14002dc83:	push   rdi
   14002dc85:	div    edi
   14002dc87:	push   rdi
   14002dc89:	div    edi
   14002dc8b:	push   rdi
   14002dc8d:	div    edi
   14002dc8f:	push   rdi
   14002dc91:	div    edi
   14002dc93:	push   rdi
   14002dc95:	div    edi
   14002dc97:	push   rdi
   14002dc99:	div    edi
   14002dc9b:	push   rdi
   14002dc9d:	div    edi
   14002dc9f:	push   rdi
   14002dca1:	div    edi
   14002dca3:	push   rdi
   14002dca5:	div    edi
   14002dca7:	push   rdi
   14002dca9:	div    edi
   14002dcab:	push   rdi
   14002dcad:	div    edi
   14002dcaf:	push   rdi
   14002dcb1:	div    edi
   14002dcb3:	push   rdi
   14002dcb5:	div    edi
   14002dcb7:	push   rdi
   14002dcb9:	div    edi
   14002dcbb:	push   rsi
   14002dcbd:	div    dh
   14002dcbf:	(bad)  
   14002dcc0:	call   0xf402c5ad
   14002dcc5:	lahf   
   14002dcc6:	xchg   edi,edi
   14002dcc8:	mov    ch,0xa1
   14002dcca:	mov    bh,bh
   14002dccc:	jmp    0x13802c6ba
   14002dcd1:	div    edi
   14002dcd3:	(bad)  
   14002dcd4:	clc    
   14002dcd5:	clc    
   14002dcd6:	clc    
   14002dcd7:	(bad)  
   14002dcd8:	clc    
   14002dcd9:	clc    
   14002dcda:	clc    
   14002dcdb:	(bad)  
   14002dcdc:	clc    
   14002dcdd:	clc    
   14002dcde:	clc    
   14002dcdf:	(bad)  
   14002dce0:	clc    
   14002dce1:	clc    
   14002dce2:	clc    
   14002dce3:	(bad)  
   14002dce4:	clc    
   14002dce5:	clc    
   14002dce6:	clc    
   14002dce7:	(bad)  
   14002dce8:	clc    
   14002dce9:	clc    
   14002dcea:	clc    
   14002dceb:	(bad)  
   14002dcec:	clc    
   14002dced:	clc    
   14002dcee:	clc    
   14002dcef:	(bad)  
   14002dcf0:	clc    
   14002dcf1:	clc    
   14002dcf2:	clc    
   14002dcf3:	(bad)  
   14002dcf4:	clc    
   14002dcf5:	clc    
   14002dcf6:	clc    
   14002dcf7:	(bad)  
   14002dcf8:	clc    
   14002dcf9:	clc    
   14002dcfa:	clc    
   14002dcfb:	(bad)  
   14002dcfc:	clc    
   14002dcfd:	clc    
   14002dcfe:	clc    
   14002dcff:	(bad)  
   14002dd00:	clc    
   14002dd01:	clc    
   14002dd02:	clc    
   14002dd03:	(bad)  
   14002dd04:	clc    
   14002dd05:	clc    
   14002dd06:	clc    
   14002dd07:	(bad)  
   14002dd08:	clc    
   14002dd09:	clc    
   14002dd0a:	clc    
   14002dd0b:	(bad)  
   14002dd0c:	clc    
   14002dd0d:	clc    
   14002dd0e:	clc    
   14002dd0f:	(bad)  
   14002dd10:	clc    
   14002dd11:	clc    
   14002dd12:	clc    
   14002dd13:	dec    ebp
   14002dd15:	loopne 0x14002dd0b
   14002dd17:	inc    DWORD PTR [rbp-0x71]
   14002dd1a:	(bad)  
   14002dd1b:	call   FWORD PTR [rdi]
   14002dd1d:	jne    0x14002dd06
   14002dd1f:	push   QWORD PTR [rax]
   14002dd21:	sub    al,0xff
   14002dd24:	sahf   
   14002dd25:	(bad)
   14002dd28:	clc    
   14002dd29:	clc    
   14002dd2a:	clc    
   14002dd2b:	call   rdx
   14002dd2d:	jrcxz  0x14002dd24
   14002dd2f:	call   QWORD PTR [rsi-0x67]
   14002dd32:	jmp    0x14002dd33
   14002dd34:	(bad)  
   14002dd35:	jne    0x14002dd1e
   14002dd37:	call   FWORD PTR [rdi-0x62]
   14002dd3a:	jmp    0x14002dd3b
   14002dd3c:	iret   
   14002dd3d:	loope  0x14002dd33
   14002dd3f:	(bad)  
   14002dd40:	clc    
   14002dd41:	clc    
   14002dd42:	clc    
   14002dd43:	(bad)  
   14002dd44:	clc    
   14002dd45:	clc    
   14002dd46:	clc    
   14002dd47:	(bad)  
   14002dd48:	clc    
   14002dd49:	clc    
   14002dd4a:	clc    
   14002dd4b:	(bad)  
   14002dd4c:	clc    
   14002dd4d:	clc    
   14002dd4e:	clc    
   14002dd4f:	(bad)  
   14002dd50:	clc    
   14002dd51:	clc    
   14002dd52:	clc    
   14002dd53:	(bad)  
   14002dd54:	clc    
   14002dd55:	clc    
   14002dd56:	clc    
   14002dd57:	(bad)  
   14002dd58:	clc    
   14002dd59:	clc    
   14002dd5a:	clc    
   14002dd5b:	(bad)  
   14002dd5c:	clc    
   14002dd5d:	clc    
   14002dd5e:	clc    
   14002dd5f:	(bad)  
   14002dd60:	clc    
   14002dd61:	clc    
   14002dd62:	clc    
   14002dd63:	(bad)  
   14002dd64:	clc    
   14002dd65:	clc    
   14002dd66:	clc    
   14002dd67:	(bad)  
   14002dd68:	clc    
   14002dd69:	clc    
   14002dd6a:	clc    
   14002dd6b:	(bad)  
   14002dd6c:	clc    
   14002dd6d:	clc    
   14002dd6e:	clc    
   14002dd6f:	(bad)  
   14002dd70:	clc    
   14002dd71:	clc    
   14002dd72:	clc    
   14002dd73:	(bad)  
   14002dd74:	clc    
   14002dd75:	clc    
   14002dd76:	clc    
   14002dd77:	(bad)  
   14002dd78:	clc    
   14002dd79:	clc    
   14002dd7a:	clc    
   14002dd7b:	push   rdi
   14002dd7d:	div    edi
   14002dd7f:	(bad)  
   14002dd80:	jmp    0xf602c76e
   14002dd85:	movabs eax,ds:0xeaeaff8ca3b7ff8a
   14002dd8e:	(bad)  
   14002dd8f:	(bad)  
   14002dd90:	clc    
   14002dd91:	clc    
   14002dd92:	clc    
   14002dd93:	(bad)  
   14002dd94:	stc    
   14002dd95:	stc    
   14002dd96:	stc    
   14002dd97:	(bad)  
   14002dd98:	stc    
   14002dd99:	stc    
   14002dd9a:	stc    
   14002dd9b:	(bad)  
   14002dd9c:	stc    
   14002dd9d:	stc    
   14002dd9e:	stc    
   14002dd9f:	(bad)  
   14002dda0:	stc    
   14002dda1:	stc    
   14002dda2:	stc    
   14002dda3:	(bad)  
   14002dda4:	stc    
   14002dda5:	stc    
   14002dda6:	stc    
   14002dda7:	(bad)  
   14002dda8:	stc    
   14002dda9:	stc    
   14002ddaa:	stc    
   14002ddab:	(bad)  
   14002ddac:	stc    
   14002ddad:	stc    
   14002ddae:	stc    
   14002ddaf:	(bad)  
   14002ddb0:	stc    
   14002ddb1:	stc    
   14002ddb2:	stc    
   14002ddb3:	(bad)  
   14002ddb4:	stc    
   14002ddb5:	stc    
   14002ddb6:	stc    
   14002ddb7:	(bad)  
   14002ddb8:	stc    
   14002ddb9:	stc    
   14002ddba:	stc    
   14002ddbb:	(bad)  
   14002ddbc:	stc    
   14002ddbd:	stc    
   14002ddbe:	stc    
   14002ddbf:	(bad)  
   14002ddc0:	stc    
   14002ddc1:	stc    
   14002ddc2:	stc    
   14002ddc3:	(bad)  
   14002ddc4:	stc    
   14002ddc5:	stc    
   14002ddc6:	stc    
   14002ddc7:	(bad)  
   14002ddc8:	stc    
   14002ddc9:	stc    
   14002ddca:	stc    
   14002ddcb:	(bad)  
   14002ddcc:	stc    
   14002ddcd:	stc    
   14002ddce:	stc    
   14002ddcf:	(bad)  
   14002ddd0:	stc    
   14002ddd1:	stc    
   14002ddd2:	stc    
   14002ddd3:	(bad)  
   14002ddd4:	stc    
   14002ddd5:	stc    
   14002ddd6:	stc    
   14002ddd7:	dec    edi
   14002ddd9:	loop   0x14002ddd1
   14002dddb:	call   FWORD PTR [rdx-0x64]
   14002ddde:	in     al,dx
   14002dddf:	jmp    QWORD PTR [rbx]
   14002dde1:	js     0x14002ddca
   14002dde3:	jmp    FWORD PTR [rdx]
   14002dde5:	jl     0x14002ddcf
   14002dde7:	inc    DWORD PTR [rbp-0x6000f4a]
   14002dded:	stc    
   14002ddee:	stc    
   14002ddef:	(bad)  
   14002ddf0:	out    dx,eax
   14002ddf1:	hlt    
   14002ddf2:	clc    
   14002ddf3:	call   QWORD PTR [rdi+rdi*4-0x6cb4000f]
   14002ddfa:	jmp    0x14002ddfb
   14002ddfc:	xchg   r8,rax
   14002ddfe:	jmp    0x14002ddff
   14002de00:	fwait
   14002de01:	ret    
   14002de02:	icebp  
   14002de03:	(bad)  
   14002de04:	in     eax,dx
   14002de05:	repz clc 
   14002de07:	(bad)  
   14002de08:	stc    
   14002de09:	stc    
   14002de0a:	stc    
   14002de0b:	(bad)  
   14002de0c:	stc    
   14002de0d:	stc    
   14002de0e:	stc    
   14002de0f:	(bad)  
   14002de10:	stc    
   14002de11:	stc    
   14002de12:	stc    
   14002de13:	(bad)  
   14002de14:	stc    
   14002de15:	stc    
   14002de16:	stc    
   14002de17:	(bad)  
   14002de18:	stc    
   14002de19:	stc    
   14002de1a:	stc    
   14002de1b:	(bad)  
   14002de1c:	stc    
   14002de1d:	stc    
   14002de1e:	stc    
   14002de1f:	(bad)  
   14002de20:	stc    
   14002de21:	stc    
   14002de22:	stc    
   14002de23:	(bad)  
   14002de24:	stc    
   14002de25:	stc    
   14002de26:	stc    
   14002de27:	(bad)  
   14002de28:	stc    
   14002de29:	stc    
   14002de2a:	stc    
   14002de2b:	(bad)  
   14002de2c:	stc    
   14002de2d:	stc    
   14002de2e:	stc    
   14002de2f:	(bad)  
   14002de30:	stc    
   14002de31:	stc    
   14002de32:	stc    
   14002de33:	(bad)  
   14002de34:	stc    
   14002de35:	stc    
   14002de36:	stc    
   14002de37:	(bad)  
   14002de38:	stc    
   14002de39:	stc    
   14002de3a:	stc    
   14002de3b:	(bad)  
   14002de3c:	clc    
   14002de3d:	clc    
   14002de3e:	clc    
   14002de3f:	(bad)  
   14002de40:	(bad)  
   14002de41:	(bad)  
   14002de42:	(bad)  
   14002de43:	push   QWORD PTR [rdi-0x4600735d]
   14002de49:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002de4a:	mov    ?,edi
   14002de4c:	(bad)  
   14002de4d:	(bad)  
   14002de4e:	(bad)  
   14002de4f:	(bad)  
   14002de50:	clc    
   14002de51:	clc    
   14002de52:	clc    
   14002de53:	(bad)  
   14002de54:	stc    
   14002de55:	stc    
   14002de56:	stc    
   14002de57:	(bad)  
   14002de58:	stc    
   14002de59:	stc    
   14002de5a:	stc    
   14002de5b:	(bad)  
   14002de5c:	stc    
   14002de5d:	stc    
   14002de5e:	stc    
   14002de5f:	(bad)  
   14002de60:	stc    
   14002de61:	stc    
   14002de62:	stc    
   14002de63:	(bad)  
   14002de64:	stc    
   14002de65:	stc    
   14002de66:	stc    
   14002de67:	(bad)  
   14002de68:	stc    
   14002de69:	stc    
   14002de6a:	stc    
   14002de6b:	(bad)  
   14002de6c:	stc    
   14002de6d:	stc    
   14002de6e:	stc    
   14002de6f:	(bad)  
   14002de70:	stc    
   14002de71:	stc    
   14002de72:	stc    
   14002de73:	(bad)  
   14002de74:	stc    
   14002de75:	stc    
   14002de76:	stc    
   14002de77:	(bad)  
   14002de78:	stc    
   14002de79:	stc    
   14002de7a:	stc    
   14002de7b:	(bad)  
   14002de7c:	stc    
   14002de7d:	stc    
   14002de7e:	stc    
   14002de7f:	(bad)  
   14002de80:	stc    
   14002de81:	stc    
   14002de82:	stc    
   14002de83:	(bad)  
   14002de84:	stc    
   14002de85:	stc    
   14002de86:	stc    
   14002de87:	(bad)  
   14002de88:	stc    
   14002de89:	stc    
   14002de8a:	stc    
   14002de8b:	(bad)  
   14002de8c:	stc    
   14002de8d:	stc    
   14002de8e:	stc    
   14002de8f:	(bad)  
   14002de90:	stc    
   14002de91:	stc    
   14002de92:	stc    
   14002de93:	(bad)  
   14002de94:	stc    
   14002de95:	stc    
   14002de96:	stc    
   14002de97:	(bad)  
   14002de98:	stc    
   14002de99:	stc    
   14002de9a:	stc    
   14002de9b:	jmp    rsp
   14002de9d:	in     eax,dx
   14002de9e:	clc    
   14002de9f:	(bad)  
   14002dea0:	jg     0x14002de55
   14002dea2:	lock jmp FWORD PTR [rax]
   14002dea5:	jp     0x14002de8e
   14002dea7:	jmp    QWORD PTR [rsi]
   14002dea9:	jns    0x14002de92
   14002deab:	inc    DWORD PTR [rsi-0x6000f49]
   14002deb1:	stc    
   14002deb2:	stc    
   14002deb3:	(bad)  
   14002deb4:	stc    
   14002deb5:	stc    
   14002deb6:	stc    
   14002deb7:	(bad)  
   14002deb8:	fucomp st(1)
   14002deba:	idiv   edi
   14002debc:	xchg   ebp,eax
   14002debd:	mov    edi,0xae79fff1
   14002dec2:	out    dx,al
   14002dec3:	dec    DWORD PTR [rdx-0x30000f46]
   14002dec9:	loop   0x14002dec1
   14002decb:	(bad)  
   14002decc:	stc    
   14002decd:	stc    
   14002dece:	stc    
   14002decf:	(bad)  
   14002ded0:	stc    
   14002ded1:	stc    
   14002ded2:	stc    
   14002ded3:	(bad)  
   14002ded4:	stc    
   14002ded5:	stc    
   14002ded6:	stc    
   14002ded7:	(bad)  
   14002ded8:	stc    
   14002ded9:	stc    
   14002deda:	stc    
   14002dedb:	(bad)  
   14002dedc:	stc    
   14002dedd:	stc    
   14002dede:	stc    
   14002dedf:	(bad)  
   14002dee0:	stc    
   14002dee1:	stc    
   14002dee2:	stc    
   14002dee3:	(bad)  
   14002dee4:	stc    
   14002dee5:	stc    
   14002dee6:	stc    
   14002dee7:	(bad)  
   14002dee8:	stc    
   14002dee9:	stc    
   14002deea:	stc    
   14002deeb:	(bad)  
   14002deec:	stc    
   14002deed:	stc    
   14002deee:	stc    
   14002deef:	(bad)  
   14002def0:	stc    
   14002def1:	stc    
   14002def2:	stc    
   14002def3:	(bad)  
   14002def4:	stc    
   14002def5:	stc    
   14002def6:	stc    
   14002def7:	(bad)  
   14002def8:	stc    
   14002def9:	stc    
   14002defa:	stc    
   14002defb:	(bad)  
   14002defc:	clc    
   14002defd:	clc    
   14002defe:	clc    
   14002deff:	(bad)  
   14002df00:	(bad)  
   14002df01:	(bad)  
   14002df02:	(bad)  
   14002df03:	(bad)  
   14002df04:	mov    ecx,0xbbff8ea5
   14002df09:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002df0a:	xchg   ecx,eax
   14002df0b:	(bad)  
   14002df0c:	jmp    0x14002def9
   14002df0e:	jmp    0x14002df0f
   14002df10:	stc    
   14002df11:	stc    
   14002df12:	stc    
   14002df13:	(bad)  
   14002df14:	cli    
   14002df15:	cli    
   14002df16:	cli    
   14002df17:	(bad)  
   14002df18:	cli    
   14002df19:	cli    
   14002df1a:	cli    
   14002df1b:	(bad)  
   14002df1c:	cli    
   14002df1d:	cli    
   14002df1e:	cli    
   14002df1f:	(bad)  
   14002df20:	cli    
   14002df21:	cli    
   14002df22:	cli    
   14002df23:	(bad)  
   14002df24:	cli    
   14002df25:	cli    
   14002df26:	cli    
   14002df27:	(bad)  
   14002df28:	cli    
   14002df29:	cli    
   14002df2a:	cli    
   14002df2b:	(bad)  
   14002df2c:	cli    
   14002df2d:	cli    
   14002df2e:	cli    
   14002df2f:	(bad)  
   14002df30:	cli    
   14002df31:	cli    
   14002df32:	cli    
   14002df33:	(bad)  
   14002df34:	cli    
   14002df35:	cli    
   14002df36:	cli    
   14002df37:	(bad)  
   14002df38:	cli    
   14002df39:	cli    
   14002df3a:	cli    
   14002df3b:	(bad)  
   14002df3c:	cli    
   14002df3d:	cli    
   14002df3e:	cli    
   14002df3f:	(bad)  
   14002df40:	cli    
   14002df41:	cli    
   14002df42:	cli    
   14002df43:	(bad)  
   14002df44:	cli    
   14002df45:	cli    
   14002df46:	cli    
   14002df47:	(bad)  
   14002df48:	cli    
   14002df49:	cli    
   14002df4a:	cli    
   14002df4b:	(bad)  
   14002df4c:	cli    
   14002df4d:	cli    
   14002df4e:	cli    
   14002df4f:	(bad)  
   14002df50:	cli    
   14002df51:	cli    
   14002df52:	cli    
   14002df53:	(bad)  
   14002df54:	cli    
   14002df55:	cli    
   14002df56:	cli    
   14002df57:	(bad)  
   14002df58:	cli    
   14002df59:	cli    
   14002df5a:	cli    
   14002df5b:	(bad)  
   14002df5c:	cli    
   14002df5d:	cli    
   14002df5e:	cli    
   14002df5f:	push   rbp
   14002df61:	idiv   edx
   14002df63:	call   FWORD PTR [rsi+0x34fff2c5]
   14002df69:	sub    eax,0xffffffff
   14002df6c:	sub    edi,DWORD PTR [rbp-0x18]
   14002df6f:	call   FWORD PTR [rcx-0x5000d3d]
   14002df75:	cli    
   14002df76:	cli    
   14002df77:	(bad)  
   14002df78:	cli    
   14002df79:	cli    
   14002df7a:	cli    
   14002df7b:	(bad)  
   14002df7c:	cli    
   14002df7d:	cli    
   14002df7e:	cli    
   14002df7f:	jmp    rbx
   14002df81:	in     eax,dx
   14002df82:	clc    
   14002df83:	(bad)  
   14002df84:	mov    ebx,0xddfff5d5
   14002df89:	jmp    0x139fcdf85
   14002df8e:	cli    
   14002df8f:	(bad)  
   14002df90:	cli    
   14002df91:	cli    
   14002df92:	cli    
   14002df93:	(bad)  
   14002df94:	cli    
   14002df95:	cli    
   14002df96:	cli    
   14002df97:	(bad)  
   14002df98:	cli    
   14002df99:	cli    
   14002df9a:	cli    
   14002df9b:	(bad)  
   14002df9c:	cli    
   14002df9d:	cli    
   14002df9e:	cli    
   14002df9f:	(bad)  
   14002dfa0:	cli    
   14002dfa1:	cli    
   14002dfa2:	cli    
   14002dfa3:	(bad)  
   14002dfa4:	cli    
   14002dfa5:	cli    
   14002dfa6:	cli    
   14002dfa7:	(bad)  
   14002dfa8:	cli    
   14002dfa9:	cli    
   14002dfaa:	cli    
   14002dfab:	(bad)  
   14002dfac:	cli    
   14002dfad:	cli    
   14002dfae:	cli    
   14002dfaf:	(bad)  
   14002dfb0:	cli    
   14002dfb1:	cli    
   14002dfb2:	cli    
   14002dfb3:	(bad)  
   14002dfb4:	cli    
   14002dfb5:	cli    
   14002dfb6:	cli    
   14002dfb7:	(bad)  
   14002dfb8:	cli    
   14002dfb9:	cli    
   14002dfba:	cli    
   14002dfbb:	(bad)  
   14002dfbc:	stc    
   14002dfbd:	stc    
   14002dfbe:	stc    
   14002dfbf:	(bad)  
   14002dfc0:	jmp    0x14002dfad
   14002dfc2:	jmp    0x14002dfc3
   14002dfc4:	mov    ebx,0xbdff91a7
   14002dfc9:	test   eax,0xececff93
   14002dfce:	in     al,dx
   14002dfcf:	(bad)  
   14002dfd0:	cli    
   14002dfd1:	cli    
   14002dfd2:	cli    
   14002dfd3:	(bad)  
   14002dfd4:	sti    
   14002dfd5:	sti    
   14002dfd6:	sti    
   14002dfd7:	(bad)  
   14002dfd8:	sti    
   14002dfd9:	sti    
   14002dfda:	sti    
   14002dfdb:	(bad)  
   14002dfdc:	sti    
   14002dfdd:	sti    
   14002dfde:	sti    
   14002dfdf:	(bad)  
   14002dfe0:	sti    
   14002dfe1:	sti    
   14002dfe2:	sti    
   14002dfe3:	(bad)  
   14002dfe4:	sti    
   14002dfe5:	sti    
   14002dfe6:	sti    
   14002dfe7:	(bad)  
   14002dfe8:	sti    
   14002dfe9:	sti    
   14002dfea:	sti    
   14002dfeb:	(bad)  
   14002dfec:	sti    
   14002dfed:	sti    
   14002dfee:	sti    
   14002dfef:	(bad)  
   14002dff0:	sti    
   14002dff1:	sti    
   14002dff2:	sti    
   14002dff3:	(bad)  
   14002dff4:	sti    
   14002dff5:	sti    
   14002dff6:	sti    
   14002dff7:	(bad)  
   14002dff8:	sti    
   14002dff9:	sti    
   14002dffa:	sti    
   14002dffb:	(bad)  
   14002dffc:	sti    
   14002dffd:	sti    
   14002dffe:	sti    
   14002dfff:	(bad)  
   14002e000:	sti    
   14002e001:	sti    
   14002e002:	sti    
   14002e003:	(bad)  
   14002e004:	sti    
   14002e005:	sti    
   14002e006:	sti    
   14002e007:	(bad)  
   14002e008:	sti    
   14002e009:	sti    
   14002e00a:	sti    
   14002e00b:	(bad)  
   14002e00c:	sti    
   14002e00d:	sti    
   14002e00e:	sti    
   14002e00f:	(bad)  
   14002e010:	sti    
   14002e011:	sti    
   14002e012:	sti    
   14002e013:	(bad)  
   14002e014:	sti    
   14002e015:	sti    
   14002e016:	sti    
   14002e017:	(bad)  
   14002e018:	sti    
   14002e019:	sti    
   14002e01a:	sti    
   14002e01b:	(bad)  
   14002e01c:	sti    
   14002e01d:	sti    
   14002e01e:	sti    
   14002e01f:	(bad)  
   14002e020:	sti    
   14002e021:	sti    
   14002e022:	sti    
   14002e023:	(bad)  
   14002e024:	sti    
   14002e025:	sti    
   14002e026:	sti    
   14002e027:	jmp    FWORD PTR [rcx+0x37fff3cb]
   14002e02d:	test   cl,ch
   14002e02f:	(bad)  
   14002e030:	cmp    al,BYTE PTR [rsi-0x243d0017]
   14002e036:	idiv   bh
   14002e038:	sti    
   14002e039:	sti    
   14002e03a:	sti    
   14002e03b:	(bad)  
   14002e03c:	sti    
   14002e03d:	sti    
   14002e03e:	sti    
   14002e03f:	(bad)  
   14002e040:	sti    
   14002e041:	sti    
   14002e042:	sti    
   14002e043:	(bad)  
   14002e044:	sti    
   14002e045:	sti    
   14002e046:	sti    
   14002e047:	(bad)  
   14002e048:	sti    
   14002e049:	sti    
   14002e04a:	sti    
   14002e04b:	(bad)  
   14002e04c:	sti    
   14002e04d:	sti    
   14002e04e:	sti    
   14002e04f:	(bad)  
   14002e050:	sti    
   14002e051:	sti    
   14002e052:	sti    
   14002e053:	(bad)  
   14002e054:	sti    
   14002e055:	sti    
   14002e056:	sti    
   14002e057:	(bad)  
   14002e058:	sti    
   14002e059:	sti    
   14002e05a:	sti    
   14002e05b:	(bad)  
   14002e05c:	sti    
   14002e05d:	sti    
   14002e05e:	sti    
   14002e05f:	(bad)  
   14002e060:	sti    
   14002e061:	sti    
   14002e062:	sti    
   14002e063:	(bad)  
   14002e064:	sti    
   14002e065:	sti    
   14002e066:	sti    
   14002e067:	(bad)  
   14002e068:	sti    
   14002e069:	sti    
   14002e06a:	sti    
   14002e06b:	(bad)  
   14002e06c:	sti    
   14002e06d:	sti    
   14002e06e:	sti    
   14002e06f:	(bad)  
   14002e070:	sti    
   14002e071:	sti    
   14002e072:	sti    
   14002e073:	(bad)  
   14002e074:	sti    
   14002e075:	sti    
   14002e076:	sti    
   14002e077:	(bad)  
   14002e078:	sti    
   14002e079:	sti    
   14002e07a:	sti    
   14002e07b:	(bad)  
   14002e07c:	cli    
   14002e07d:	cli    
   14002e07e:	cli    
   14002e07f:	(bad)  
   14002e080:	in     al,dx
   14002e081:	in     al,dx
   14002e082:	in     al,dx
   14002e083:	(bad)  
   14002e084:	mov    ebp,0xbfff93a9
   14002e089:	stos   DWORD PTR es:[rdi],eax
   14002e08a:	xchg   ebp,eax
   14002e08b:	(bad)  
   14002e08c:	in     eax,dx
   14002e08d:	in     eax,dx
   14002e08e:	in     eax,dx
   14002e08f:	(bad)  
   14002e090:	sti    
   14002e091:	sti    
   14002e092:	sti    
   14002e093:	(bad)  
   14002e094:	cld    
   14002e095:	cld    
   14002e096:	cld    
   14002e097:	(bad)  
   14002e098:	cld    
   14002e099:	cld    
   14002e09a:	cld    
   14002e09b:	(bad)  
   14002e09c:	cld    
   14002e09d:	cld    
   14002e09e:	cld    
   14002e09f:	(bad)  
   14002e0a0:	cld    
   14002e0a1:	cld    
   14002e0a2:	cld    
   14002e0a3:	(bad)  
   14002e0a4:	cld    
   14002e0a5:	cld    
   14002e0a6:	cld    
   14002e0a7:	(bad)  
   14002e0a8:	cld    
   14002e0a9:	cld    
   14002e0aa:	cld    
   14002e0ab:	(bad)  
   14002e0ac:	cld    
   14002e0ad:	cld    
   14002e0ae:	cld    
   14002e0af:	(bad)  
   14002e0b0:	cld    
   14002e0b1:	cld    
   14002e0b2:	cld    
   14002e0b3:	(bad)  
   14002e0b4:	cld    
   14002e0b5:	cld    
   14002e0b6:	cld    
   14002e0b7:	(bad)  
   14002e0b8:	cld    
   14002e0b9:	cld    
   14002e0ba:	cld    
   14002e0bb:	(bad)  
   14002e0bc:	cld    
   14002e0bd:	cld    
   14002e0be:	cld    
   14002e0bf:	(bad)  
   14002e0c0:	cld    
   14002e0c1:	cld    
   14002e0c2:	cld    
   14002e0c3:	(bad)  
   14002e0c4:	cld    
   14002e0c5:	cld    
   14002e0c6:	cld    
   14002e0c7:	(bad)  
   14002e0c8:	cld    
   14002e0c9:	cld    
   14002e0ca:	cld    
   14002e0cb:	(bad)  
   14002e0cc:	cld    
   14002e0cd:	cld    
   14002e0ce:	cld    
   14002e0cf:	(bad)  
   14002e0d0:	cld    
   14002e0d1:	cld    
   14002e0d2:	cld    
   14002e0d3:	(bad)  
   14002e0d4:	cld    
   14002e0d5:	cld    
   14002e0d6:	cld    
   14002e0d7:	(bad)  
   14002e0d8:	cld    
   14002e0d9:	cld    
   14002e0da:	cld    
   14002e0db:	(bad)  
   14002e0dc:	cld    
   14002e0dd:	cld    
   14002e0de:	cld    
   14002e0df:	(bad)  
   14002e0e0:	cld    
   14002e0e1:	cld    
   14002e0e2:	cld    
   14002e0e3:	(bad)  
   14002e0e4:	cld    
   14002e0e5:	cld    
   14002e0e6:	cld    
   14002e0e7:	(bad)  
   14002e0e8:	cld    
   14002e0e9:	cld    
   14002e0ea:	cld    
   14002e0eb:	jmp    QWORD PTR [rbp+0x31fff4c9]
   14002e0f1:	sub    al,0xff
   14002e0f4:	movabs gs:0xfcfcfffbf2e9ffee,eax
   14002e0fe:	cld    
   14002e0ff:	(bad)  
   14002e100:	cld    
   14002e101:	cld    
   14002e102:	cld    
   14002e103:	(bad)  
   14002e104:	cld    
   14002e105:	cld    
   14002e106:	cld    
   14002e107:	(bad)  
   14002e108:	cld    
   14002e109:	cld    
   14002e10a:	cld    
   14002e10b:	(bad)  
   14002e10c:	cld    
   14002e10d:	cld    
   14002e10e:	cld    
   14002e10f:	(bad)  
   14002e110:	cld    
   14002e111:	cld    
   14002e112:	cld    
   14002e113:	(bad)  
   14002e114:	cld    
   14002e115:	cld    
   14002e116:	cld    
   14002e117:	(bad)  
   14002e118:	cld    
   14002e119:	cld    
   14002e11a:	cld    
   14002e11b:	(bad)  
   14002e11c:	cld    
   14002e11d:	cld    
   14002e11e:	cld    
   14002e11f:	(bad)  
   14002e120:	cld    
   14002e121:	cld    
   14002e122:	cld    
   14002e123:	(bad)  
   14002e124:	cld    
   14002e125:	cld    
   14002e126:	cld    
   14002e127:	(bad)  
   14002e128:	cld    
   14002e129:	cld    
   14002e12a:	cld    
   14002e12b:	(bad)  
   14002e12c:	cld    
   14002e12d:	cld    
   14002e12e:	cld    
   14002e12f:	(bad)  
   14002e130:	cld    
   14002e131:	cld    
   14002e132:	cld    
   14002e133:	(bad)  
   14002e134:	cld    
   14002e135:	cld    
   14002e136:	cld    
   14002e137:	(bad)  
   14002e138:	cld    
   14002e139:	cld    
   14002e13a:	cld    
   14002e13b:	(bad)  
   14002e13c:	sti    
   14002e13d:	sti    
   14002e13e:	sti    
   14002e13f:	(bad)  
   14002e140:	in     eax,dx
   14002e141:	in     eax,dx
   14002e142:	in     eax,dx
   14002e143:	(bad)  
   14002e144:	mov    edi,0xc0ff95ab
   14002e149:	lods   eax,DWORD PTR ds:[rsi]
   14002e14a:	xchg   edi,eax
   14002e14b:	(bad)  
   14002e14c:	in     eax,dx
   14002e14d:	in     eax,dx
   14002e14e:	in     eax,dx
   14002e14f:	(bad)  
   14002e150:	sti    
   14002e151:	sti    
   14002e152:	sti    
   14002e153:	(bad)  
   14002e154:	cld    
   14002e155:	cld    
   14002e156:	cld    
   14002e157:	(bad)  
   14002e158:	cld    
   14002e159:	cld    
   14002e15a:	cld    
   14002e15b:	(bad)  
   14002e15c:	cld    
   14002e15d:	cld    
   14002e15e:	cld    
   14002e15f:	(bad)  
   14002e160:	cld    
   14002e161:	cld    
   14002e162:	cld    
   14002e163:	(bad)  
   14002e164:	cld    
   14002e165:	cld    
   14002e166:	cld    
   14002e167:	(bad)  
   14002e168:	cld    
   14002e169:	cld    
   14002e16a:	cld    
   14002e16b:	(bad)  
   14002e16c:	cld    
   14002e16d:	cld    
   14002e16e:	cld    
   14002e16f:	(bad)  
   14002e170:	cld    
   14002e171:	cld    
   14002e172:	cld    
   14002e173:	(bad)  
   14002e174:	cld    
   14002e175:	cld    
   14002e176:	cld    
   14002e177:	(bad)  
   14002e178:	cld    
   14002e179:	cld    
   14002e17a:	cld    
   14002e17b:	(bad)  
   14002e17c:	cld    
   14002e17d:	cld    
   14002e17e:	cld    
   14002e17f:	(bad)  
   14002e180:	cld    
   14002e181:	cld    
   14002e182:	cld    
   14002e183:	(bad)  
   14002e184:	cld    
   14002e185:	cld    
   14002e186:	cld    
   14002e187:	(bad)  
   14002e188:	cld    
   14002e189:	cld    
   14002e18a:	cld    
   14002e18b:	(bad)  
   14002e18c:	cld    
   14002e18d:	cld    
   14002e18e:	cld    
   14002e18f:	(bad)  
   14002e190:	cld    
   14002e191:	cld    
   14002e192:	cld    
   14002e193:	(bad)  
   14002e194:	cld    
   14002e195:	cld    
   14002e196:	cld    
   14002e197:	(bad)  
   14002e198:	cld    
   14002e199:	cld    
   14002e19a:	cld    
   14002e19b:	(bad)  
   14002e19c:	cld    
   14002e19d:	cld    
   14002e19e:	cld    
   14002e19f:	(bad)  
   14002e1a0:	cld    
   14002e1a1:	cld    
   14002e1a2:	cld    
   14002e1a3:	(bad)  
   14002e1a4:	cld    
   14002e1a5:	cld    
   14002e1a6:	cld    
   14002e1a7:	(bad)  
   14002e1a8:	cld    
   14002e1a9:	cld    
   14002e1aa:	cld    
   14002e1ab:	(bad)  
   14002e1ac:	clc    
   14002e1ad:	stc    
   14002e1ae:	cld    
   14002e1af:	(bad)  
   14002e1b0:	jle    0x14002e164
   14002e1b2:	lock push QWORD PTR [rsi]
   14002e1b5:	test   cl,ch
   14002e1b7:	push   QWORD PTR [rbx+rdx*8-0x303000a]
   14002e1be:	cld    
   14002e1bf:	(bad)  
   14002e1c0:	cld    
   14002e1c1:	cld    
   14002e1c2:	cld    
   14002e1c3:	(bad)  
   14002e1c4:	cld    
   14002e1c5:	cld    
   14002e1c6:	cld    
   14002e1c7:	(bad)  
   14002e1c8:	cld    
   14002e1c9:	cld    
   14002e1ca:	cld    
   14002e1cb:	(bad)  
   14002e1cc:	cld    
   14002e1cd:	cld    
   14002e1ce:	cld    
   14002e1cf:	(bad)  
   14002e1d0:	cld    
   14002e1d1:	cld    
   14002e1d2:	cld    
   14002e1d3:	(bad)  
   14002e1d4:	cld    
   14002e1d5:	cld    
   14002e1d6:	cld    
   14002e1d7:	(bad)  
   14002e1d8:	cld    
   14002e1d9:	cld    
   14002e1da:	cld    
   14002e1db:	(bad)  
   14002e1dc:	cld    
   14002e1dd:	cld    
   14002e1de:	cld    
   14002e1df:	(bad)  
   14002e1e0:	cld    
   14002e1e1:	cld    
   14002e1e2:	cld    
   14002e1e3:	(bad)  
   14002e1e4:	cld    
   14002e1e5:	cld    
   14002e1e6:	cld    
   14002e1e7:	(bad)  
   14002e1e8:	cld    
   14002e1e9:	cld    
   14002e1ea:	cld    
   14002e1eb:	(bad)  
   14002e1ec:	cld    
   14002e1ed:	cld    
   14002e1ee:	cld    
   14002e1ef:	(bad)  
   14002e1f0:	cld    
   14002e1f1:	cld    
   14002e1f2:	cld    
   14002e1f3:	(bad)  
   14002e1f4:	cld    
   14002e1f5:	cld    
   14002e1f6:	cld    
   14002e1f7:	(bad)  
   14002e1f8:	cld    
   14002e1f9:	cld    
   14002e1fa:	cld    
   14002e1fb:	(bad)  
   14002e1fc:	sti    
   14002e1fd:	sti    
   14002e1fe:	sti    
   14002e1ff:	(bad)  
   14002e200:	in     eax,dx
   14002e201:	in     eax,dx
   14002e202:	in     eax,dx
   14002e203:	inc    eax
   14002e205:	lods   eax,DWORD PTR ds:[rsi]
   14002e206:	xchg   edi,eax
   14002e207:	inc    edx
   14002e209:	scas   eax,DWORD PTR es:[rdi]
   14002e20a:	cdq    
   14002e20b:	(bad)  
   14002e20c:	out    dx,al
   14002e20d:	out    dx,al
   14002e20e:	out    dx,al
   14002e20f:	(bad)  
   14002e210:	cld    
   14002e211:	cld    
   14002e212:	cld    
   14002e213:	(bad)  
   14002e214:	std    
   14002e215:	std    
   14002e216:	std    
   14002e217:	(bad)  
   14002e218:	std    
   14002e219:	std    
   14002e21a:	std    
   14002e21b:	(bad)  
   14002e21c:	std    
   14002e21d:	std    
   14002e21e:	std    
   14002e21f:	(bad)  
   14002e220:	std    
   14002e221:	std    
   14002e222:	std    
   14002e223:	(bad)  
   14002e224:	std    
   14002e225:	std    
   14002e226:	std    
   14002e227:	(bad)  
   14002e228:	std    
   14002e229:	std    
   14002e22a:	std    
   14002e22b:	(bad)  
   14002e22c:	std    
   14002e22d:	std    
   14002e22e:	std    
   14002e22f:	(bad)  
   14002e230:	std    
   14002e231:	std    
   14002e232:	std    
   14002e233:	(bad)  
   14002e234:	std    
   14002e235:	std    
   14002e236:	std    
   14002e237:	(bad)  
   14002e238:	std    
   14002e239:	std    
   14002e23a:	std    
   14002e23b:	(bad)  
   14002e23c:	std    
   14002e23d:	std    
   14002e23e:	std    
   14002e23f:	(bad)  
   14002e240:	std    
   14002e241:	std    
   14002e242:	std    
   14002e243:	(bad)  
   14002e244:	std    
   14002e245:	std    
   14002e246:	std    
   14002e247:	(bad)  
   14002e248:	std    
   14002e249:	std    
   14002e24a:	std    
   14002e24b:	(bad)  
   14002e24c:	std    
   14002e24d:	std    
   14002e24e:	std    
   14002e24f:	(bad)  
   14002e250:	std    
   14002e251:	std    
   14002e252:	std    
   14002e253:	(bad)  
   14002e254:	std    
   14002e255:	std    
   14002e256:	std    
   14002e257:	(bad)  
   14002e258:	std    
   14002e259:	std    
   14002e25a:	std    
   14002e25b:	(bad)  
   14002e25c:	std    
   14002e25d:	std    
   14002e25e:	std    
   14002e25f:	(bad)  
   14002e260:	std    
   14002e261:	std    
   14002e262:	std    
   14002e263:	(bad)  
   14002e264:	std    
   14002e265:	std    
   14002e266:	std    
   14002e267:	(bad)  
   14002e268:	std    
   14002e269:	std    
   14002e26a:	std    
   14002e26b:	(bad)  
   14002e26c:	std    
   14002e26d:	std    
   14002e26e:	std    
   14002e26f:	dec    eax
   14002e271:	fdivp  st(0),st
   14002e273:	dec    DWORD PTR [rdx-0x70]
   14002e276:	jmp    0x14002e277
   14002e278:	xchg   ecx,eax
   14002e279:	mov    edi,0xfdfdfff4
   14002e27e:	std    
   14002e27f:	(bad)  
   14002e280:	std    
   14002e281:	std    
   14002e282:	std    
   14002e283:	(bad)  
   14002e284:	std    
   14002e285:	std    
   14002e286:	std    
   14002e287:	(bad)  
   14002e288:	std    
   14002e289:	std    
   14002e28a:	std    
   14002e28b:	(bad)  
   14002e28c:	std    
   14002e28d:	std    
   14002e28e:	std    
   14002e28f:	(bad)  
   14002e290:	std    
   14002e291:	std    
   14002e292:	std    
   14002e293:	(bad)  
   14002e294:	std    
   14002e295:	std    
   14002e296:	std    
   14002e297:	(bad)  
   14002e298:	std    
   14002e299:	std    
   14002e29a:	std    
   14002e29b:	(bad)  
   14002e29c:	std    
   14002e29d:	std    
   14002e29e:	std    
   14002e29f:	(bad)  
   14002e2a0:	std    
   14002e2a1:	std    
   14002e2a2:	std    
   14002e2a3:	(bad)  
   14002e2a4:	std    
   14002e2a5:	std    
   14002e2a6:	std    
   14002e2a7:	(bad)  
   14002e2a8:	std    
   14002e2a9:	std    
   14002e2aa:	std    
   14002e2ab:	(bad)  
   14002e2ac:	std    
   14002e2ad:	std    
   14002e2ae:	std    
   14002e2af:	(bad)  
   14002e2b0:	std    
   14002e2b1:	std    
   14002e2b2:	std    
   14002e2b3:	(bad)  
   14002e2b4:	std    
   14002e2b5:	std    
   14002e2b6:	std    
   14002e2b7:	(bad)  
   14002e2b8:	std    
   14002e2b9:	std    
   14002e2ba:	std    
   14002e2bb:	(bad)  
   14002e2bc:	cld    
   14002e2bd:	cld    
   14002e2be:	cld    
   14002e2bf:	(bad)  
   14002e2c0:	out    dx,al
   14002e2c1:	out    dx,al
   14002e2c2:	out    dx,al
   14002e2c3:	inc    edx
   14002e2c5:	scas   eax,DWORD PTR es:[rdi]
   14002e2c6:	cdq    
   14002e2c7:	inc    esp
   14002e2c9:	mov    al,0x9a
   14002e2cb:	(bad)  
   14002e2cc:	out    dx,al
   14002e2cd:	out    dx,al
   14002e2ce:	out    dx,al
   14002e2cf:	(bad)  
   14002e2d0:	std    
   14002e2d1:	std    
   14002e2d2:	std    
   14002e2d3:	(bad)  
   14002e2d4:	(bad)  
   14002e2d5:	(bad)  
   14002e2d6:	(bad)  
   14002e2d7:	(bad)  
   14002e2d8:	(bad)  
   14002e2d9:	(bad)  
   14002e2da:	(bad)  
   14002e2db:	(bad)  
   14002e2dc:	(bad)  
   14002e2dd:	(bad)  
   14002e2de:	(bad)  
   14002e2df:	(bad)  
   14002e2e0:	(bad)  
   14002e2e1:	(bad)  
   14002e2e2:	(bad)  
   14002e2e3:	(bad)  
   14002e2e4:	(bad)  
   14002e2e5:	(bad)  
   14002e2e6:	(bad)  
   14002e2e7:	(bad)  
   14002e2e8:	(bad)  
   14002e2e9:	(bad)  
   14002e2ea:	(bad)  
   14002e2eb:	(bad)  
   14002e2ec:	(bad)  
   14002e2ed:	(bad)  
   14002e2ee:	(bad)  
   14002e2ef:	(bad)  
   14002e2f0:	(bad)  
   14002e2f1:	(bad)  
   14002e2f2:	(bad)  
   14002e2f3:	(bad)  
   14002e2f4:	(bad)  
   14002e2f5:	(bad)  
   14002e2f6:	(bad)  
   14002e2f7:	(bad)  
   14002e2f8:	(bad)  
   14002e2f9:	(bad)  
   14002e2fa:	(bad)  
   14002e2fb:	(bad)  
   14002e2fc:	(bad)  
   14002e2fd:	(bad)  
   14002e2fe:	(bad)  
   14002e2ff:	(bad)  
   14002e300:	(bad)  
   14002e301:	(bad)  
   14002e302:	(bad)  
   14002e303:	(bad)  
   14002e304:	(bad)  
   14002e305:	(bad)  
   14002e306:	(bad)  
   14002e307:	(bad)  
   14002e308:	(bad)  
   14002e309:	(bad)  
   14002e30a:	(bad)  
   14002e30b:	(bad)  
   14002e30c:	(bad)  
   14002e30d:	(bad)  
   14002e30e:	(bad)  
   14002e30f:	(bad)  
   14002e310:	(bad)  
   14002e311:	(bad)  
   14002e312:	(bad)  
   14002e313:	(bad)  
   14002e314:	(bad)  
   14002e315:	(bad)  
   14002e316:	(bad)  
   14002e317:	(bad)  
   14002e318:	(bad)  
   14002e319:	(bad)  
   14002e31a:	(bad)  
   14002e31b:	(bad)  
   14002e31c:	(bad)  
   14002e31d:	(bad)  
   14002e31e:	(bad)  
   14002e31f:	(bad)  
   14002e320:	(bad)  
   14002e321:	(bad)  
   14002e322:	(bad)  
   14002e323:	(bad)  
   14002e324:	(bad)  
   14002e325:	(bad)  
   14002e326:	(bad)  
   14002e327:	(bad)  
   14002e328:	(bad)  
   14002e329:	(bad)  
   14002e32a:	(bad)  
   14002e32b:	(bad)  
   14002e32c:	(bad)  
   14002e32d:	(bad)  
   14002e32e:	(bad)  
   14002e32f:	push   rbx
   14002e331:	idiv   ebp
   14002e333:	push   QWORD PTR [rsp+rbp*4-0x10]
   14002e337:	(bad)  
   14002e338:	jle    0x14002e2ed
   14002e33a:	icebp  
   14002e33b:	(bad)  
   14002e33c:	(bad)  
   14002e33d:	(bad)  
   14002e33e:	(bad)  
   14002e33f:	(bad)  
   14002e340:	(bad)  
   14002e341:	(bad)  
   14002e342:	(bad)  
   14002e343:	(bad)  
   14002e344:	(bad)  
   14002e345:	(bad)  
   14002e346:	(bad)  
   14002e347:	(bad)  
   14002e348:	(bad)  
   14002e349:	(bad)  
   14002e34a:	(bad)  
   14002e34b:	(bad)  
   14002e34c:	(bad)  
   14002e34d:	(bad)  
   14002e34e:	(bad)  
   14002e34f:	(bad)  
   14002e350:	(bad)  
   14002e351:	(bad)  
   14002e352:	(bad)  
   14002e353:	(bad)  
   14002e354:	(bad)  
   14002e355:	(bad)  
   14002e356:	(bad)  
   14002e357:	(bad)  
   14002e358:	(bad)  
   14002e359:	(bad)  
   14002e35a:	(bad)  
   14002e35b:	(bad)  
   14002e35c:	(bad)  
   14002e35d:	(bad)  
   14002e35e:	(bad)  
   14002e35f:	(bad)  
   14002e360:	(bad)  
   14002e361:	(bad)  
   14002e362:	(bad)  
   14002e363:	(bad)  
   14002e364:	(bad)  
   14002e365:	(bad)  
   14002e366:	(bad)  
   14002e367:	(bad)  
   14002e368:	(bad)  
   14002e369:	(bad)  
   14002e36a:	(bad)  
   14002e36b:	(bad)  
   14002e36c:	(bad)  
   14002e36d:	(bad)  
   14002e36e:	(bad)  
   14002e36f:	(bad)  
   14002e370:	(bad)  
   14002e371:	(bad)  
   14002e372:	(bad)  
   14002e373:	(bad)  
   14002e374:	(bad)  
   14002e375:	(bad)  
   14002e376:	(bad)  
   14002e377:	(bad)  
   14002e378:	(bad)  
   14002e379:	(bad)  
   14002e37a:	(bad)  
   14002e37b:	(bad)  
   14002e37c:	std    
   14002e37d:	std    
   14002e37e:	std    
   14002e37f:	(bad)  
   14002e380:	out    dx,eax
   14002e381:	out    dx,eax
   14002e382:	out    dx,eax
   14002e383:	inc    esp
   14002e385:	mov    al,0x9a
   14002e387:	inc    ebp
   14002e389:	mov    dl,0x9c
   14002e38b:	jmp    rsi
   14002e38d:	jrcxz  0x14002e370
   14002e38f:	(bad)  
   14002e390:	cli    
   14002e391:	cli    
   14002e392:	cli    
   14002e393:	(bad)  
   14002e394:	(bad)  
   14002e395:	(bad)  
   14002e396:	(bad)  
   14002e397:	(bad)  
   14002e398:	(bad)  
   14002e399:	(bad)  
   14002e39a:	(bad)  
   14002e39b:	(bad)  
   14002e39c:	(bad)  
   14002e39d:	(bad)  
   14002e39e:	(bad)  
   14002e39f:	(bad)  
   14002e3a0:	(bad)  
   14002e3a1:	(bad)  
   14002e3a2:	(bad)  
   14002e3a3:	(bad)  
   14002e3a4:	(bad)  
   14002e3a5:	(bad)  
   14002e3a6:	(bad)  
   14002e3a7:	(bad)  
   14002e3a8:	(bad)  
   14002e3a9:	(bad)  
   14002e3aa:	(bad)  
   14002e3ab:	(bad)  
   14002e3ac:	(bad)  
   14002e3ad:	(bad)  
   14002e3ae:	(bad)  
   14002e3af:	(bad)  
   14002e3b0:	(bad)  
   14002e3b1:	(bad)  
   14002e3b2:	(bad)  
   14002e3b3:	(bad)  
   14002e3b4:	(bad)  
   14002e3b5:	(bad)  
   14002e3b6:	(bad)  
   14002e3b7:	(bad)  
   14002e3b8:	(bad)  
   14002e3b9:	(bad)  
   14002e3ba:	(bad)  
   14002e3bb:	(bad)  
   14002e3bc:	(bad)  
   14002e3bd:	(bad)  
   14002e3be:	(bad)  
   14002e3bf:	(bad)  
   14002e3c0:	(bad)  
   14002e3c1:	(bad)  
   14002e3c2:	(bad)  
   14002e3c3:	(bad)  
   14002e3c4:	(bad)  
   14002e3c5:	(bad)  
   14002e3c6:	(bad)  
   14002e3c7:	(bad)  
   14002e3c8:	(bad)  
   14002e3c9:	(bad)  
   14002e3ca:	(bad)  
   14002e3cb:	(bad)  
   14002e3cc:	(bad)  
   14002e3cd:	(bad)  
   14002e3ce:	(bad)  
   14002e3cf:	(bad)  
   14002e3d0:	(bad)  
   14002e3d1:	(bad)  
   14002e3d2:	(bad)  
   14002e3d3:	(bad)  
   14002e3d4:	(bad)  
   14002e3d5:	(bad)  
   14002e3d6:	(bad)  
   14002e3d7:	(bad)  
   14002e3d8:	(bad)  
   14002e3d9:	(bad)  
   14002e3da:	(bad)  
   14002e3db:	(bad)  
   14002e3dc:	(bad)  
   14002e3dd:	(bad)  
   14002e3de:	(bad)  
   14002e3df:	(bad)  
   14002e3e0:	(bad)  
   14002e3e1:	(bad)  
   14002e3e2:	(bad)  
   14002e3e3:	(bad)  
   14002e3e4:	(bad)  
   14002e3e5:	(bad)  
   14002e3e6:	(bad)  
   14002e3e7:	(bad)  
   14002e3e8:	(bad)  
   14002e3e9:	(bad)  
   14002e3ea:	(bad)  
   14002e3eb:	(bad)  
   14002e3ec:	(bad)  
   14002e3ed:	(bad)  
   14002e3ee:	(bad)  
   14002e3ef:	(bad)  
   14002e3f0:	std    
   14002e3f1:	std    
   14002e3f2:	(bad)  
   14002e3f3:	push   QWORD PTR [rbp-0x4d00092d]
   14002e3f9:	shl    dh,cl
   14002e3fb:	(bad)  
   14002e3fc:	(bad)  
   14002e3fd:	(bad)  
   14002e3fe:	(bad)  
   14002e3ff:	(bad)  
   14002e400:	(bad)  
   14002e401:	(bad)  
   14002e402:	(bad)  
   14002e403:	(bad)  
   14002e404:	(bad)  
   14002e405:	(bad)  
   14002e406:	(bad)  
   14002e407:	(bad)  
   14002e408:	(bad)  
   14002e409:	(bad)  
   14002e40a:	(bad)  
   14002e40b:	(bad)  
   14002e40c:	(bad)  
   14002e40d:	(bad)  
   14002e40e:	(bad)  
   14002e40f:	(bad)  
   14002e410:	(bad)  
   14002e411:	(bad)  
   14002e412:	(bad)  
   14002e413:	(bad)  
   14002e414:	(bad)  
   14002e415:	(bad)  
   14002e416:	(bad)  
   14002e417:	(bad)  
   14002e418:	(bad)  
   14002e419:	(bad)  
   14002e41a:	(bad)  
   14002e41b:	(bad)  
   14002e41c:	(bad)  
   14002e41d:	(bad)  
   14002e41e:	(bad)  
   14002e41f:	(bad)  
   14002e420:	(bad)  
   14002e421:	(bad)  
   14002e422:	(bad)  
   14002e423:	(bad)  
   14002e424:	(bad)  
   14002e425:	(bad)  
   14002e426:	(bad)  
   14002e427:	(bad)  
   14002e428:	(bad)  
   14002e429:	(bad)  
   14002e42a:	(bad)  
   14002e42b:	(bad)  
   14002e42c:	(bad)  
   14002e42d:	(bad)  
   14002e42e:	(bad)  
   14002e42f:	(bad)  
   14002e430:	(bad)  
   14002e431:	(bad)  
   14002e432:	(bad)  
   14002e433:	(bad)  
   14002e434:	(bad)  
   14002e435:	(bad)  
   14002e436:	(bad)  
   14002e437:	(bad)  
   14002e438:	(bad)  
   14002e439:	(bad)  
   14002e43a:	(bad)  
   14002e43b:	(bad)  
   14002e43c:	sti    
   14002e43d:	sti    
   14002e43e:	sti    
   14002e43f:	(bad)  
   14002e440:	in     eax,dx
   14002e441:	in     eax,dx
   14002e442:	in     eax,dx
   14002e443:	inc    ebp
   14002e445:	mov    dl,0x9c
   14002e447:	inc    esi
   14002e449:	mov    bl,0x9e
   14002e44b:	js     0x14002e420
   14002e44d:	leave  
   14002e44e:	mov    esi,0xf5f5f5ff
   14002e453:	(bad)  
   14002e454:	std    
   14002e455:	std    
   14002e456:	std    
   14002e457:	(bad)  
   14002e458:	(bad)  
   14002e459:	(bad)  
   14002e45a:	(bad)  
   14002e45b:	(bad)  
   14002e45c:	(bad)  
   14002e45d:	(bad)  
   14002e45e:	(bad)  
   14002e45f:	(bad)  
   14002e460:	(bad)  
   14002e461:	(bad)  
   14002e462:	(bad)  
   14002e463:	(bad)  
   14002e464:	(bad)  
   14002e465:	(bad)  
   14002e466:	(bad)  
   14002e467:	(bad)  
   14002e468:	(bad)  
   14002e469:	(bad)  
   14002e46a:	(bad)  
   14002e46b:	(bad)  
   14002e46c:	(bad)  
   14002e46d:	(bad)  
   14002e46e:	(bad)  
   14002e46f:	(bad)  
   14002e470:	(bad)  
   14002e471:	(bad)  
   14002e472:	(bad)  
   14002e473:	(bad)  
   14002e474:	(bad)  
   14002e475:	(bad)  
   14002e476:	(bad)  
   14002e477:	(bad)  
   14002e478:	(bad)  
   14002e479:	(bad)  
   14002e47a:	(bad)  
   14002e47b:	(bad)  
   14002e47c:	(bad)  
   14002e47d:	(bad)  
   14002e47e:	(bad)  
   14002e47f:	(bad)  
   14002e480:	(bad)  
   14002e481:	(bad)  
   14002e482:	(bad)  
   14002e483:	(bad)  
   14002e484:	(bad)  
   14002e485:	(bad)  
   14002e486:	(bad)  
   14002e487:	(bad)  
   14002e488:	(bad)  
   14002e489:	(bad)  
   14002e48a:	(bad)  
   14002e48b:	(bad)  
   14002e48c:	(bad)  
   14002e48d:	(bad)  
   14002e48e:	(bad)  
   14002e48f:	(bad)  
   14002e490:	(bad)  
   14002e491:	(bad)  
   14002e492:	(bad)  
   14002e493:	(bad)  
   14002e494:	(bad)  
   14002e495:	(bad)  
   14002e496:	(bad)  
   14002e497:	(bad)  
   14002e498:	(bad)  
   14002e499:	(bad)  
   14002e49a:	(bad)  
   14002e49b:	(bad)  
   14002e49c:	(bad)  
   14002e49d:	(bad)  
   14002e49e:	(bad)  
   14002e49f:	(bad)  
   14002e4a0:	(bad)  
   14002e4a1:	(bad)  
   14002e4a2:	(bad)  
   14002e4a3:	(bad)  
   14002e4a4:	(bad)  
   14002e4a5:	(bad)  
   14002e4a6:	(bad)  
   14002e4a7:	(bad)  
   14002e4a8:	(bad)  
   14002e4a9:	(bad)  
   14002e4aa:	(bad)  
   14002e4ab:	(bad)  
   14002e4ac:	(bad)  
   14002e4ad:	(bad)  
   14002e4ae:	(bad)  
   14002e4af:	(bad)  
   14002e4b0:	(bad)  
   14002e4b1:	(bad)  
   14002e4b2:	(bad)  
   14002e4b3:	(bad)  
   14002e4b4:	(bad)  
   14002e4b5:	(bad)  
   14002e4b6:	(bad)  
   14002e4b7:	(bad)  
   14002e4b8:	(bad)  
   14002e4b9:	(bad)  
   14002e4ba:	(bad)  
   14002e4bb:	(bad)  
   14002e4bc:	(bad)  
   14002e4bd:	(bad)  
   14002e4be:	(bad)  
   14002e4bf:	(bad)  
   14002e4c0:	(bad)  
   14002e4c1:	(bad)  
   14002e4c2:	(bad)  
   14002e4c3:	(bad)  
   14002e4c4:	(bad)  
   14002e4c5:	(bad)  
   14002e4c6:	(bad)  
   14002e4c7:	(bad)  
   14002e4c8:	(bad)  
   14002e4c9:	(bad)  
   14002e4ca:	(bad)  
   14002e4cb:	(bad)  
   14002e4cc:	(bad)  
   14002e4cd:	(bad)  
   14002e4ce:	(bad)  
   14002e4cf:	(bad)  
   14002e4d0:	(bad)  
   14002e4d1:	(bad)  
   14002e4d2:	(bad)  
   14002e4d3:	(bad)  
   14002e4d4:	(bad)  
   14002e4d5:	(bad)  
   14002e4d6:	(bad)  
   14002e4d7:	(bad)  
   14002e4d8:	(bad)  
   14002e4d9:	(bad)  
   14002e4da:	(bad)  
   14002e4db:	(bad)  
   14002e4dc:	(bad)  
   14002e4dd:	(bad)  
   14002e4de:	(bad)  
   14002e4df:	(bad)  
   14002e4e0:	(bad)  
   14002e4e1:	(bad)  
   14002e4e2:	(bad)  
   14002e4e3:	(bad)  
   14002e4e4:	(bad)  
   14002e4e5:	(bad)  
   14002e4e6:	(bad)  
   14002e4e7:	(bad)  
   14002e4e8:	(bad)  
   14002e4e9:	(bad)  
   14002e4ea:	(bad)  
   14002e4eb:	(bad)  
   14002e4ec:	(bad)  
   14002e4ed:	(bad)  
   14002e4ee:	(bad)  
   14002e4ef:	(bad)  
   14002e4f0:	(bad)  
   14002e4f1:	(bad)  
   14002e4f2:	(bad)  
   14002e4f3:	(bad)  
   14002e4f4:	(bad)  
   14002e4f5:	(bad)  
   14002e4f6:	(bad)  
   14002e4f7:	(bad)  
   14002e4f8:	(bad)  
   14002e4f9:	(bad)  
   14002e4fa:	(bad)  
   14002e4fb:	(bad)  
   14002e4fc:	clc    
   14002e4fd:	clc    
   14002e4fe:	clc    
   14002e4ff:	(bad)  
   14002e500:	fcmovnbe st,st(3)
   14002e502:	int3   
   14002e503:	inc    esi
   14002e505:	mov    bl,0x9e
   14002e507:	lahf   
   14002e508:	enter  0x9fb5,0x21
   14002e50c:	enter  0x9fb5,0xf9
   14002e510:	loop   0x14002e4f0
   14002e512:	(bad)  
   14002e514:	div    dh
   14002e516:	idiv   bh
   14002e518:	std    
   14002e519:	std    
   14002e51a:	std    
   14002e51b:	(bad)  
   14002e51c:	(bad)  
   14002e51d:	(bad)  
   14002e51e:	(bad)  
   14002e51f:	(bad)  
   14002e520:	(bad)  
   14002e521:	(bad)  
   14002e522:	(bad)  
   14002e523:	(bad)  
   14002e524:	(bad)  
   14002e525:	(bad)  
   14002e526:	(bad)  
   14002e527:	(bad)  
   14002e528:	(bad)  
   14002e529:	(bad)  
   14002e52a:	(bad)  
   14002e52b:	(bad)  
   14002e52c:	(bad)  
   14002e52d:	(bad)  
   14002e52e:	(bad)  
   14002e52f:	(bad)  
   14002e530:	(bad)  
   14002e531:	(bad)  
   14002e532:	(bad)  
   14002e533:	(bad)  
   14002e534:	(bad)  
   14002e535:	(bad)  
   14002e536:	(bad)  
   14002e537:	(bad)  
   14002e538:	(bad)  
   14002e539:	(bad)  
   14002e53a:	(bad)  
   14002e53b:	(bad)  
   14002e53c:	(bad)  
   14002e53d:	(bad)  
   14002e53e:	(bad)  
   14002e53f:	(bad)  
   14002e540:	(bad)  
   14002e541:	(bad)  
   14002e542:	(bad)  
   14002e543:	(bad)  
   14002e544:	(bad)  
   14002e545:	(bad)  
   14002e546:	(bad)  
   14002e547:	(bad)  
   14002e548:	(bad)  
   14002e549:	(bad)  
   14002e54a:	(bad)  
   14002e54b:	(bad)  
   14002e54c:	(bad)  
   14002e54d:	(bad)  
   14002e54e:	(bad)  
   14002e54f:	(bad)  
   14002e550:	(bad)  
   14002e551:	(bad)  
   14002e552:	(bad)  
   14002e553:	(bad)  
   14002e554:	(bad)  
   14002e555:	(bad)  
   14002e556:	(bad)  
   14002e557:	(bad)  
   14002e558:	(bad)  
   14002e559:	(bad)  
   14002e55a:	(bad)  
   14002e55b:	(bad)  
   14002e55c:	(bad)  
   14002e55d:	(bad)  
   14002e55e:	(bad)  
   14002e55f:	(bad)  
   14002e560:	(bad)  
   14002e561:	(bad)  
   14002e562:	(bad)  
   14002e563:	(bad)  
   14002e564:	(bad)  
   14002e565:	(bad)  
   14002e566:	(bad)  
   14002e567:	(bad)  
   14002e568:	(bad)  
   14002e569:	(bad)  
   14002e56a:	(bad)  
   14002e56b:	(bad)  
   14002e56c:	(bad)  
   14002e56d:	(bad)  
   14002e56e:	(bad)  
   14002e56f:	(bad)  
   14002e570:	(bad)  
   14002e571:	(bad)  
   14002e572:	(bad)  
   14002e573:	(bad)  
   14002e574:	(bad)  
   14002e575:	(bad)  
   14002e576:	(bad)  
   14002e577:	(bad)  
   14002e578:	(bad)  
   14002e579:	(bad)  
   14002e57a:	(bad)  
   14002e57b:	(bad)  
   14002e57c:	(bad)  
   14002e57d:	(bad)  
   14002e57e:	(bad)  
   14002e57f:	(bad)  
   14002e580:	(bad)  
   14002e581:	(bad)  
   14002e582:	(bad)  
   14002e583:	(bad)  
   14002e584:	(bad)  
   14002e585:	(bad)  
   14002e586:	(bad)  
   14002e587:	(bad)  
   14002e588:	(bad)  
   14002e589:	(bad)  
   14002e58a:	(bad)  
   14002e58b:	(bad)  
   14002e58c:	(bad)  
   14002e58d:	(bad)  
   14002e58e:	(bad)  
   14002e58f:	(bad)  
   14002e590:	(bad)  
   14002e591:	(bad)  
   14002e592:	(bad)  
   14002e593:	(bad)  
   14002e594:	(bad)  
   14002e595:	(bad)  
   14002e596:	(bad)  
   14002e597:	(bad)  
   14002e598:	(bad)  
   14002e599:	(bad)  
   14002e59a:	(bad)  
   14002e59b:	(bad)  
   14002e59c:	(bad)  
   14002e59d:	(bad)  
   14002e59e:	(bad)  
   14002e59f:	(bad)  
   14002e5a0:	(bad)  
   14002e5a1:	(bad)  
   14002e5a2:	(bad)  
   14002e5a3:	(bad)  
   14002e5a4:	(bad)  
   14002e5a5:	(bad)  
   14002e5a6:	(bad)  
   14002e5a7:	(bad)  
   14002e5a8:	(bad)  
   14002e5a9:	(bad)  
   14002e5aa:	(bad)  
   14002e5ab:	(bad)  
   14002e5ac:	(bad)  
   14002e5ad:	(bad)  
   14002e5ae:	(bad)  
   14002e5af:	(bad)  
   14002e5b0:	(bad)  
   14002e5b1:	(bad)  
   14002e5b2:	(bad)  
   14002e5b3:	(bad)  
   14002e5b4:	std    
   14002e5b5:	std    
   14002e5b6:	std    
   14002e5b7:	(bad)  
   14002e5b8:	clc    
   14002e5b9:	clc    
   14002e5ba:	clc    
   14002e5bb:	(bad)  
   14002e5bc:	out    dx,al
   14002e5bd:	out    dx,al
   14002e5be:	out    dx,al
   14002e5bf:	dec    esi
   14002e5c1:	shl    DWORD PTR [rdx-0x604a3701],0x4e
   14002e5c8:	add    BYTE PTR [rax],al
   14002e5ca:	add    BYTE PTR [rax],al
   14002e5cc:	leave  
   14002e5cd:	mov    dh,0xa1
   14002e5cf:	leavew 
   14002e5d1:	mov    dh,0xa1
   14002e5d3:	cld    
   14002e5d4:	(bad)  
   14002e5d6:	leave  
   14002e5d7:	(bad)  
   14002e5d8:	out    dx,eax
   14002e5d9:	out    dx,eax
   14002e5da:	out    dx,eax
   14002e5db:	push   rbx
   14002e5dd:	repz repz push rdi
   14002e5e1:	div    edi
   14002e5e3:	(bad)  
   14002e5e4:	clc    
   14002e5e5:	clc    
   14002e5e6:	clc    
   14002e5e7:	(bad)  
   14002e5e8:	clc    
   14002e5e9:	clc    
   14002e5ea:	clc    
   14002e5eb:	(bad)  
   14002e5ec:	clc    
   14002e5ed:	clc    
   14002e5ee:	clc    
   14002e5ef:	(bad)  
   14002e5f0:	clc    
   14002e5f1:	clc    
   14002e5f2:	clc    
   14002e5f3:	(bad)  
   14002e5f4:	clc    
   14002e5f5:	clc    
   14002e5f6:	clc    
   14002e5f7:	(bad)  
   14002e5f8:	clc    
   14002e5f9:	clc    
   14002e5fa:	clc    
   14002e5fb:	(bad)  
   14002e5fc:	clc    
   14002e5fd:	clc    
   14002e5fe:	clc    
   14002e5ff:	(bad)  
   14002e600:	clc    
   14002e601:	clc    
   14002e602:	clc    
   14002e603:	(bad)  
   14002e604:	clc    
   14002e605:	clc    
   14002e606:	clc    
   14002e607:	(bad)  
   14002e608:	clc    
   14002e609:	clc    
   14002e60a:	clc    
   14002e60b:	(bad)  
   14002e60c:	clc    
   14002e60d:	clc    
   14002e60e:	clc    
   14002e60f:	(bad)  
   14002e610:	clc    
   14002e611:	clc    
   14002e612:	clc    
   14002e613:	(bad)  
   14002e614:	clc    
   14002e615:	clc    
   14002e616:	clc    
   14002e617:	(bad)  
   14002e618:	clc    
   14002e619:	clc    
   14002e61a:	clc    
   14002e61b:	(bad)  
   14002e61c:	clc    
   14002e61d:	clc    
   14002e61e:	clc    
   14002e61f:	(bad)  
   14002e620:	clc    
   14002e621:	clc    
   14002e622:	clc    
   14002e623:	(bad)  
   14002e624:	clc    
   14002e625:	clc    
   14002e626:	clc    
   14002e627:	(bad)  
   14002e628:	clc    
   14002e629:	clc    
   14002e62a:	clc    
   14002e62b:	(bad)  
   14002e62c:	clc    
   14002e62d:	clc    
   14002e62e:	clc    
   14002e62f:	(bad)  
   14002e630:	clc    
   14002e631:	clc    
   14002e632:	clc    
   14002e633:	(bad)  
   14002e634:	clc    
   14002e635:	clc    
   14002e636:	clc    
   14002e637:	(bad)  
   14002e638:	clc    
   14002e639:	clc    
   14002e63a:	clc    
   14002e63b:	(bad)  
   14002e63c:	clc    
   14002e63d:	clc    
   14002e63e:	clc    
   14002e63f:	(bad)  
   14002e640:	clc    
   14002e641:	clc    
   14002e642:	clc    
   14002e643:	(bad)  
   14002e644:	clc    
   14002e645:	clc    
   14002e646:	clc    
   14002e647:	(bad)  
   14002e648:	clc    
   14002e649:	clc    
   14002e64a:	clc    
   14002e64b:	(bad)  
   14002e64c:	clc    
   14002e64d:	clc    
   14002e64e:	clc    
   14002e64f:	(bad)  
   14002e650:	clc    
   14002e651:	clc    
   14002e652:	clc    
   14002e653:	(bad)  
   14002e654:	clc    
   14002e655:	clc    
   14002e656:	clc    
   14002e657:	(bad)  
   14002e658:	clc    
   14002e659:	clc    
   14002e65a:	clc    
   14002e65b:	(bad)  
   14002e65c:	clc    
   14002e65d:	clc    
   14002e65e:	clc    
   14002e65f:	(bad)  
   14002e660:	clc    
   14002e661:	clc    
   14002e662:	clc    
   14002e663:	(bad)  
   14002e664:	clc    
   14002e665:	clc    
   14002e666:	clc    
   14002e667:	(bad)  
   14002e668:	clc    
   14002e669:	clc    
   14002e66a:	clc    
   14002e66b:	push   rdi
   14002e66d:	div    edi
   14002e66f:	push   rsp
   14002e671:	hlt    
   14002e672:	hlt    
   14002e673:	push   rax
   14002e675:	lock lock (bad) 
   14002e678:	(bad)  
   14002e67a:	int    0xff
   14002e67c:	iret   
   14002e67d:	shl    DWORD PTR [rbx-0x5e493601],0x99
	...
   14002e690:	retf   0xa2b7
   14002e693:	xor    ecx,edx
   14002e695:	mov    bh,0xa2
   14002e697:	xchg   esi,eax
   14002e698:	retf   0xa2b7
   14002e69b:	dec    edx
   14002e69d:	mov    bh,0xa2
   14002e69f:	dec    edx
   14002e6a1:	mov    bh,0xa2
   14002e6a3:	dec    edx
   14002e6a5:	mov    bh,0xa2
   14002e6a7:	dec    edx
   14002e6a9:	mov    bh,0xa2
   14002e6ab:	dec    edx
   14002e6ad:	mov    bh,0xa2
   14002e6af:	dec    edx
   14002e6b1:	mov    bh,0xa2
   14002e6b3:	dec    edx
   14002e6b5:	mov    bh,0xa2
   14002e6b7:	dec    edx
   14002e6b9:	mov    bh,0xa2
   14002e6bb:	dec    edx
   14002e6bd:	mov    bh,0xa2
   14002e6bf:	dec    edx
   14002e6c1:	mov    bh,0xa2
   14002e6c3:	dec    edx
   14002e6c5:	mov    bh,0xa2
   14002e6c7:	dec    edx
   14002e6c9:	mov    bh,0xa2
   14002e6cb:	dec    edx
   14002e6cd:	mov    bh,0xa2
   14002e6cf:	dec    edx
   14002e6d1:	mov    bh,0xa2
   14002e6d3:	dec    edx
   14002e6d5:	mov    bh,0xa2
   14002e6d7:	dec    edx
   14002e6d9:	mov    bh,0xa2
   14002e6db:	dec    edx
   14002e6dd:	mov    bh,0xa2
   14002e6df:	dec    edx
   14002e6e1:	mov    bh,0xa2
   14002e6e3:	dec    edx
   14002e6e5:	mov    bh,0xa2
   14002e6e7:	dec    edx
   14002e6e9:	mov    bh,0xa2
   14002e6eb:	dec    edx
   14002e6ed:	mov    bh,0xa2
   14002e6ef:	dec    edx
   14002e6f1:	mov    bh,0xa2
   14002e6f3:	dec    edx
   14002e6f5:	mov    bh,0xa2
   14002e6f7:	dec    edx
   14002e6f9:	mov    bh,0xa2
   14002e6fb:	dec    edx
   14002e6fd:	mov    bh,0xa2
   14002e6ff:	dec    edx
   14002e701:	mov    bh,0xa2
   14002e703:	dec    edx
   14002e705:	mov    bh,0xa2
   14002e707:	dec    edx
   14002e709:	mov    bh,0xa2
   14002e70b:	dec    edx
   14002e70d:	mov    bh,0xa2
   14002e70f:	dec    edx
   14002e711:	mov    bh,0xa2
   14002e713:	dec    edx
   14002e715:	mov    bh,0xa2
   14002e717:	dec    edx
   14002e719:	mov    bh,0xa2
   14002e71b:	dec    edx
   14002e71d:	mov    bh,0xa2
   14002e71f:	dec    edx
   14002e721:	mov    bh,0xa2
   14002e723:	dec    edx
   14002e725:	mov    bh,0xa2
   14002e727:	dec    edx
   14002e729:	mov    bh,0xa2
   14002e72b:	dec    edx
   14002e72d:	mov    bh,0xa2
   14002e72f:	dec    edx
   14002e731:	mov    bh,0xa2
   14002e733:	dec    edx
   14002e735:	mov    bh,0xa2
   14002e737:	dec    edx
   14002e739:	mov    bh,0xa2
   14002e73b:	lahf   
   14002e73c:	retf   0xa2b7
   14002e73f:	rex.WXB add BYTE PTR [r8],al
   14002e742:	add    BYTE PTR [rax],al
   14002e744:	add    BYTE PTR [rax],al
   14002e746:	add    BYTE PTR [rax],al
   14002e748:	rol    BYTE PTR [rax],0x0
   14002e74b:	add    BYTE PTR [rax],al
   14002e74d:	add    eax,DWORD PTR [rax]
   14002e74f:	add    BYTE PTR [rax+0x0],al
   14002e755:	add    eax,esp
   14002e757:	add    BYTE PTR [rax],al
   14002e759:	add    BYTE PTR [rax],al
   14002e75b:	add    BYTE PTR [rax],al
   14002e75d:	add    al,al
   14002e75f:	add    BYTE PTR [rax],al
   14002e761:	add    BYTE PTR [rax],al
   14002e763:	add    BYTE PTR [rax],al
   14002e765:	add    BYTE PTR [rax+0x0],al
   14002e76b:	add    BYTE PTR [rax],al
   14002e76d:	add    BYTE PTR [rax+0x0],al
	...
   14002e8b3:	add    BYTE PTR [rax],al
   14002e8b5:	add    BYTE PTR [rax+0x8000],al
   14002e8bb:	add    BYTE PTR [rax],al
   14002e8bd:	add    DWORD PTR [rax+0xc000],eax
   14002e8c3:	add    BYTE PTR [rax],al
   14002e8c5:	add    eax,eax
   14002e8c7:	add    BYTE PTR [rax],ch
   14002e8c9:	add    BYTE PTR [rax],al
   14002e8cb:	add    BYTE PTR [rax],ah
   14002e8cd:	add    BYTE PTR [rax],al
   14002e8cf:	add    BYTE PTR [rax+0x0],al
   14002e8d2:	add    BYTE PTR [rax],al
   14002e8d4:	add    DWORD PTR [rax],eax
   14002e8d6:	and    BYTE PTR [rax],al
	...
   14002e8f8:	outs   dx,BYTE PTR ds:[rsi]
   14002e8f9:	pop    rax
   14002e8fa:	cmp    DWORD PTR [rax+0x6e],eax
   14002e8fd:	pop    rax
   14002e8fe:	cmp    DWORD PTR [rdi+0x6e],edi
   14002e901:	pop    rax
   14002e902:	cmp    DWORD PTR [rdi-0xc6a792],edi
   14002e908:	outs   dx,BYTE PTR ds:[rsi]
   14002e909:	pop    rax
   14002e90a:	cmp    edi,edi
   14002e90c:	outs   dx,BYTE PTR ds:[rsi]
   14002e90d:	pop    rax
   14002e90e:	cmp    edi,edi
   14002e910:	outs   dx,BYTE PTR ds:[rsi]
   14002e911:	pop    rax
   14002e912:	cmp    edi,edi
   14002e914:	outs   dx,BYTE PTR ds:[rsi]
   14002e915:	pop    rax
   14002e916:	cmp    edi,edi
   14002e918:	outs   dx,BYTE PTR ds:[rsi]
   14002e919:	pop    rax
   14002e91a:	cmp    edi,edi
   14002e91c:	outs   dx,BYTE PTR ds:[rsi]
   14002e91d:	pop    rax
   14002e91e:	cmp    edi,edi
   14002e920:	outs   dx,BYTE PTR ds:[rsi]
   14002e921:	pop    rax
   14002e922:	cmp    edi,edi
   14002e924:	outs   dx,BYTE PTR ds:[rsi]
   14002e925:	pop    rax
   14002e926:	cmp    edi,edi
   14002e928:	outs   dx,BYTE PTR ds:[rsi]
   14002e929:	pop    rax
   14002e92a:	cmp    edi,edi
   14002e92c:	outs   dx,BYTE PTR ds:[rsi]
   14002e92d:	pop    rax
   14002e92e:	cmp    edi,edi
   14002e930:	outs   dx,BYTE PTR ds:[rsi]
   14002e931:	pop    rax
   14002e932:	cmp    edi,edi
   14002e934:	outs   dx,BYTE PTR ds:[rsi]
   14002e935:	pop    rax
   14002e936:	cmp    edi,edi
   14002e938:	outs   dx,BYTE PTR ds:[rsi]
   14002e939:	pop    rax
   14002e93a:	cmp    edi,edi
   14002e93c:	outs   dx,BYTE PTR ds:[rsi]
   14002e93d:	pop    rax
   14002e93e:	cmp    edi,edi
   14002e940:	outs   dx,BYTE PTR ds:[rsi]
   14002e941:	pop    rax
   14002e942:	cmp    edi,edi
   14002e944:	outs   dx,BYTE PTR ds:[rsi]
   14002e945:	pop    rax
   14002e946:	cmp    edi,edi
   14002e948:	outs   dx,BYTE PTR ds:[rsi]
   14002e949:	pop    rax
   14002e94a:	cmp    edi,edi
   14002e94c:	outs   dx,BYTE PTR ds:[rsi]
   14002e94d:	pop    rax
   14002e94e:	cmp    edi,edi
   14002e950:	outs   dx,BYTE PTR ds:[rsi]
   14002e951:	pop    rax
   14002e952:	cmp    edi,edi
   14002e954:	outs   dx,BYTE PTR ds:[rsi]
   14002e955:	pop    rax
   14002e956:	cmp    edi,edi
   14002e958:	outs   dx,BYTE PTR ds:[rsi]
   14002e959:	pop    rax
   14002e95a:	cmp    edi,edi
   14002e95c:	outs   dx,BYTE PTR ds:[rsi]
   14002e95d:	pop    rax
   14002e95e:	cmp    DWORD PTR [rdi+0x7f39586e],edi
   14002e964:	outs   dx,BYTE PTR ds:[rsi]
   14002e965:	pop    rax
   14002e966:	cmp    DWORD PTR [rax+0x0],eax
	...
   14002e971:	add    BYTE PTR [rax],al
   14002e973:	add    BYTE PTR [rax+0x5a],dh
   14002e976:	cmp    eax,DWORD PTR [rax+0x76]
   14002e979:	data16 rex.WRX call QWORD PTR [rax-0x4600897b]
   14002e981:	mov    ah,0xac
   14002e983:	jmp    rdi
   14002e985:	out    0xe7,eax
   14002e987:	(bad)  
   14002e988:	call   0x12902d275
   14002e98d:	call   0x128ebe97a
   14002e992:	call   0x128ebd296
   14002e997:	(bad)  
   14002e998:	call   0x12902d285
   14002e99d:	call   0x128ebe98a
   14002e9a2:	call   0x128ebd2a6
   14002e9a7:	(bad)  
   14002e9a8:	call   0x12902d295
   14002e9ad:	call   0x128ebe99a
   14002e9b2:	call   0x128ebd2b6
   14002e9b7:	(bad)  
   14002e9b8:	call   0x12902d2a5
   14002e9bd:	call   0x128ebe9aa
   14002e9c2:	call   0x128ebd2c6
   14002e9c7:	(bad)  
   14002e9c8:	call   0x12902d2b5
   14002e9cd:	call   0x128ebe9ba
   14002e9d2:	call   0x128ebd2d6
   14002e9d7:	jmp    rdi
   14002e9d9:	out    0xe7,eax
   14002e9db:	(bad)  
   14002e9dc:	mov    ecx,0x90ffacb4
   14002e9e1:	test   DWORD PTR [rsi-0x1],esi
   14002e9e4:	jbe    0x14002ea4c
   14002e9e6:	rex.WRX push QWORD PTR [rax+0x5a]
   14002e9ea:	cmp    eax,DWORD PTR [rax+0x0]
   14002e9ed:	add    BYTE PTR [rax],al
   14002e9ef:	add    BYTE PTR [rdx+0x5d],dh
   14002e9f2:	ds rex jbe 0x14002ea5c
   14002e9f6:	rex.WRXB push QWORD PTR [r14-0x16005a51]
   14002e9fd:	jmp    0x12ff2e9eb
   14002ea02:	out    dx,eax
   14002ea03:	push   rax
   14002ea05:	lock lock push rcx
   14002ea09:	icebp  
   14002ea0a:	icebp  
   14002ea0b:	push   rcx
   14002ea0d:	icebp  
   14002ea0e:	icebp  
   14002ea0f:	push   rcx
   14002ea11:	icebp  
   14002ea12:	icebp  
   14002ea13:	push   rcx
   14002ea15:	icebp  
   14002ea16:	icebp  
   14002ea17:	push   rcx
   14002ea19:	icebp  
   14002ea1a:	icebp  
   14002ea1b:	push   rcx
   14002ea1d:	icebp  
   14002ea1e:	icebp  
   14002ea1f:	push   rcx
   14002ea21:	icebp  
   14002ea22:	icebp  
   14002ea23:	push   rcx
   14002ea25:	icebp  
   14002ea26:	icebp  
   14002ea27:	push   rcx
   14002ea29:	icebp  
   14002ea2a:	icebp  
   14002ea2b:	push   rcx
   14002ea2d:	icebp  
   14002ea2e:	icebp  
   14002ea2f:	push   rcx
   14002ea31:	icebp  
   14002ea32:	icebp  
   14002ea33:	push   rcx
   14002ea35:	icebp  
   14002ea36:	icebp  
   14002ea37:	push   rcx
   14002ea39:	icebp  
   14002ea3a:	icebp  
   14002ea3b:	push   rcx
   14002ea3d:	icebp  
   14002ea3e:	icebp  
   14002ea3f:	push   rcx
   14002ea41:	icebp  
   14002ea42:	icebp  
   14002ea43:	push   rcx
   14002ea45:	icebp  
   14002ea46:	icebp  
   14002ea47:	push   rcx
   14002ea49:	icebp  
   14002ea4a:	icebp  
   14002ea4b:	push   rcx
   14002ea4d:	icebp  
   14002ea4e:	icebp  
   14002ea4f:	push   rcx
   14002ea51:	icebp  
   14002ea52:	icebp  
   14002ea53:	push   rcx
   14002ea55:	icebp  
   14002ea56:	icebp  
   14002ea57:	push   rax
   14002ea59:	lock lock (bad) 
   14002ea5c:	out    dx,eax
   14002ea5d:	out    dx,eax
   14002ea5e:	out    dx,eax
   14002ea5f:	(bad)  
   14002ea60:	jmp    0xf702d44e
   14002ea65:	scas   eax,DWORD PTR es:[rdi]
   14002ea66:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002ea67:	push   QWORD PTR [rsi+0x66]
   14002ea6a:	rex.WRXB push QWORD PTR [r10+0x5d]
   14002ea6e:	ds rex jne 0x14002ead1
   14002ea72:	rex jg 0x14002ea17
   14002ea75:	xchg   edi,eax
   14002ea76:	xchg   edi,edi
   14002ea78:	in     al,0xe4
   14002ea7a:	in     al,0xff
   14002ea7c:	in     al,dx
   14002ea7d:	in     al,dx
   14002ea7e:	in     al,dx
   14002ea7f:	(bad)  
   14002ea80:	out    dx,al
   14002ea81:	out    dx,al
   14002ea82:	out    dx,al
   14002ea83:	(bad)  
   14002ea84:	out    dx,al
   14002ea85:	out    dx,al
   14002ea86:	out    dx,al
   14002ea87:	(bad)  
   14002ea88:	out    dx,al
   14002ea89:	out    dx,al
   14002ea8a:	out    dx,al
   14002ea8b:	(bad)  
   14002ea8c:	out    dx,al
   14002ea8d:	out    dx,al
   14002ea8e:	out    dx,al
   14002ea8f:	(bad)  
   14002ea90:	out    dx,al
   14002ea91:	out    dx,al
   14002ea92:	out    dx,al
   14002ea93:	(bad)  
   14002ea94:	out    dx,al
   14002ea95:	out    dx,al
   14002ea96:	out    dx,al
   14002ea97:	(bad)  
   14002ea98:	out    dx,al
   14002ea99:	out    dx,al
   14002ea9a:	out    dx,al
   14002ea9b:	(bad)  
   14002ea9c:	out    dx,al
   14002ea9d:	out    dx,al
   14002ea9e:	out    dx,al
   14002ea9f:	(bad)  
   14002eaa0:	out    dx,al
   14002eaa1:	out    dx,al
   14002eaa2:	out    dx,al
   14002eaa3:	(bad)  
   14002eaa4:	out    dx,al
   14002eaa5:	out    dx,al
   14002eaa6:	out    dx,al
   14002eaa7:	(bad)  
   14002eaa8:	out    dx,al
   14002eaa9:	out    dx,al
   14002eaaa:	out    dx,al
   14002eaab:	(bad)  
   14002eaac:	out    dx,al
   14002eaad:	out    dx,al
   14002eaae:	out    dx,al
   14002eaaf:	(bad)  
   14002eab0:	out    dx,al
   14002eab1:	out    dx,al
   14002eab2:	out    dx,al
   14002eab3:	(bad)  
   14002eab4:	out    dx,al
   14002eab5:	out    dx,al
   14002eab6:	out    dx,al
   14002eab7:	(bad)  
   14002eab8:	out    dx,al
   14002eab9:	out    dx,al
   14002eaba:	out    dx,al
   14002eabb:	(bad)  
   14002eabc:	out    dx,al
   14002eabd:	out    dx,al
   14002eabe:	out    dx,al
   14002eabf:	(bad)  
   14002eac0:	out    dx,al
   14002eac1:	out    dx,al
   14002eac2:	out    dx,al
   14002eac3:	(bad)  
   14002eac4:	out    dx,al
   14002eac5:	out    dx,al
   14002eac6:	out    dx,al
   14002eac7:	(bad)  
   14002eac8:	out    dx,al
   14002eac9:	out    dx,al
   14002eaca:	out    dx,al
   14002eacb:	(bad)  
   14002eacc:	out    dx,al
   14002eacd:	out    dx,al
   14002eace:	out    dx,al
   14002eacf:	(bad)  
   14002ead0:	out    dx,al
   14002ead1:	out    dx,al
   14002ead2:	out    dx,al
   14002ead3:	(bad)  
   14002ead4:	out    dx,al
   14002ead5:	out    dx,al
   14002ead6:	out    dx,al
   14002ead7:	(bad)  
   14002ead8:	out    dx,al
   14002ead9:	out    dx,al
   14002eada:	out    dx,al
   14002eadb:	(bad)  
   14002eadc:	out    dx,al
   14002eadd:	out    dx,al
   14002eade:	out    dx,al
   14002eadf:	(bad)  
   14002eae0:	in     al,dx
   14002eae1:	in     al,dx
   14002eae2:	in     al,dx
   14002eae3:	jmp    rsp
   14002eae5:	in     al,0xe4
   14002eae7:	jmp    QWORD PTR [rdx+0x75ff8797]
   14002eaed:	pop    rdi
   14002eaee:	rex jg 0x14002eb68
   14002eaf1:	(bad)
   14002eaf6:	scas   eax,DWORD PTR es:[rdi]
   14002eaf7:	jmp    rdi
   14002eaf9:	out    0xe7,eax
   14002eafb:	(bad)  
   14002eafc:	jmp    0x14002eae9
   14002eafe:	jmp    0x14002eaff
   14002eb00:	jmp    0x14002eaed
   14002eb02:	jmp    0x14002eb03
   14002eb04:	jmp    0x14002eaf1
   14002eb06:	jmp    0x14002eb07
   14002eb08:	fstp   st(0)
   14002eb0a:	sar    bh,cl
   14002eb0c:	int3   
   14002eb0d:	ret    
   14002eb0e:	mov    bh,0xff
   14002eb10:	mov    edx,0xabff98aa
   14002eb15:	xchg   edi,eax
   14002eb16:	cmp    bh,0xa5
   14002eb19:	xchg   ecx,eax
   14002eb1a:	ja     0x14002eb1b
   14002eb1c:	popf   
   14002eb1d:	xchg   BYTE PTR [rdx-0x1],ch
   14002eb20:	cdq    
   14002eb21:	(bad)  
   14002eb22:	call   FWORD PTR gs:[rbx-0x6400997d]
   14002eb29:	and    DWORD PTR [rsi-0x1],0xffffff9b
   14002eb2d:	test   BYTE PTR [rdi-0x1],ah
   14002eb30:	fwait
   14002eb31:	and    DWORD PTR [rsi-0x1],0xffffff9b
   14002eb35:	and    DWORD PTR [rsi-0x1],0xffffff9b
   14002eb39:	and    DWORD PTR [rsi-0x1],0xffffff9e
   14002eb3d:	xchg   DWORD PTR [rdi+rdi*8-0x58],ebp
   14002eb41:	xchg   ebp,eax
   14002eb42:	jl     0x14002eb43
   14002eb44:	mov    ch,0xa5
   14002eb46:	nop
   14002eb47:	dec    ecx
   14002eb49:	mov    ebp,0xdadeffb0
   14002eb4e:	(bad)  
   14002eb4f:	(bad)  
   14002eb50:	(bad)  
   14002eb51:	(bad)  
   14002eb52:	call   0x12beed756
   14002eb57:	(bad)  
   14002eb58:	jmp    0x14002eb45
   14002eb5a:	jmp    0x14002eb5b
   14002eb5c:	jmp    0x14002eb49
   14002eb5e:	jmp    0x14002eb5f
   14002eb60:	jmp    0x14002eb4d
   14002eb62:	jmp    0x14002eb63
   14002eb64:	out    0xe7,eax
   14002eb66:	out    0xff,eax
   14002eb68:	mov    esp,0x77ffafb7
   14002eb6d:	(bad)
   14002eb72:	rex.RX call rdi
   14002eb75:	xlat   BYTE PTR ds:[rbx]
   14002eb76:	xlat   BYTE PTR ds:[rbx]
   14002eb77:	jmp    rdi
   14002eb79:	out    0xe7,eax
   14002eb7b:	(bad)  
   14002eb7c:	jmp    0x12a02d56a
   14002eb81:	jmp    0x129eceb6f
   14002eb86:	jmp    0x1a887878a
   14002eb8b:	dec    DWORD PTR [rbp-0x6600ac8d]
   14002eb91:	and    DWORD PTR [rdi+rdi*8-0x50],0xbcff889e
   14002eb99:	scas   al,BYTE PTR es:[rdi]
   14002eb9a:	popf   
   14002eb9b:	dec    edx
   14002eb9d:	shl    DWORD PTR [rsi-0x44393101],0xff
   14002eba4:	(bad)  
   14002eba5:	(bad)  
   14002eba6:	mov    ebx,0xbbc6ceff
   14002ebab:	dec    esi
   14002ebad:	(bad)  
   14002ebae:	mov    edx,0xbbc6ceff
   14002ebb3:	dec    esi
   14002ebb5:	(bad)  
   14002ebb6:	mov    edx,0xbac5ceff
   14002ebbb:	(bad)  
   14002ebbc:	mov    esp,0xb5ff9dae
   14002ebc1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002ebc2:	xchg   ebx,eax
   14002ebc3:	jmp    FWORD PTR [rbx-0x5f007d68]
   14002ebc9:	mov    dh,BYTE PTR [rcx-0x1]
   14002ebcc:	movabs ds:0xe9ffb2bfc9ff748e,eax
   14002ebd5:	jmp    0x129ecebc3
   14002ebda:	jmp    0x129ecd5de
   14002ebdf:	(bad)  
   14002ebe0:	jmp    0x12802d5ce
   14002ebe5:	out    0xe7,eax
   14002ebe7:	call   rdi
   14002ebe9:	xlat   BYTE PTR ds:[rbx]
   14002ebea:	xlat   BYTE PTR ds:[rbx]
   14002ebeb:	(bad)  
   14002ebec:	jp     0x14002ec53
   14002ebee:	rex.RX (bad) 
   14002ebf0:	jge    0x14002ec5a
   14002ebf2:	rex.WX (bad) 
   14002ebf4:	fcomp  st(0)
   14002ebf6:	fdivr  st,st(7)
   14002ebf8:	out    0xe6,al
   14002ebfa:	out    0xff,al
   14002ebfc:	out    0xe6,al
   14002ebfe:	out    0xff,al
   14002ec00:	out    0xe6,al
   14002ec02:	out    0xff,al
   14002ec04:	out    0xe6,al
   14002ec06:	out    0xff,al
   14002ec08:	mov    ebx,0xa0ff9eaf
   14002ec0d:	mov    esi,DWORD PTR [rdx-0x1]
   14002ec10:	lods   eax,DWORD PTR ds:[rsi]
   14002ec11:	pushf  
   14002ec12:	xchg   edi,edi
   14002ec14:	(bad)  
   14002ec15:	ror    ebx,1
   14002ec17:	jmp    rdx
   14002ec19:	loope  0x14002ebfb
   14002ec1b:	jmp    rbp
   14002ec1d:	in     al,0xe3
   14002ec1f:	(bad)  
   14002ec20:	(bad)  
   14002ec22:	sar    edi,cl
   14002ec24:	ror    edx,1
   14002ec26:	ret    0xc9ff
   14002ec29:	mov    edi,0xc0c9ffb4
   14002ec2e:	mov    ch,0xff
   14002ec30:	(bad)  
   14002ec31:	(bad)  
   14002ec32:	mov    esp,0xc9cfd5ff
   14002ec37:	(bad)  
   14002ec38:	fstp   st(1)
   14002ec3a:	(bad)  
   14002ec3b:	jmp    rdx
   14002ec3d:	loope  0x14002ec1e
   14002ec3f:	jmp    rsi
   14002ec41:	out    0xe6,al
   14002ec43:	jmp    rsi
   14002ec45:	out    0xe6,al
   14002ec47:	jmp    rsi
   14002ec49:	out    0xe6,al
   14002ec4b:	inc    eax
   14002ec4d:	mov    ah,0xa6
   14002ec4f:	push   QWORD PTR [rcx-0x1900715f]
   14002ec55:	out    0xe6,al
   14002ec57:	jmp    rsi
   14002ec59:	out    0xe6,al
   14002ec5b:	jmp    rsi
   14002ec5d:	out    0xe6,al
   14002ec5f:	jmp    rsi
   14002ec61:	out    0xe6,al
   14002ec63:	jmp    rsi
   14002ec65:	out    0xe6,al
   14002ec67:	(bad)  
   14002ec68:	fcomp  st(0)
   14002ec6a:	fdivr  st,st(7)
   14002ec6c:	jge    0x14002ecd6
   14002ec6e:	rex.WX inc QWORD PTR [rax-0x2700b295]
   14002ec75:	fcomp  st(0)
   14002ec77:	jmp    rsi
   14002ec79:	out    0xe6,al
   14002ec7b:	jmp    rsi
   14002ec7d:	out    0xe6,al
   14002ec7f:	jmp    rsi
   14002ec81:	out    0xe6,al
   14002ec83:	jmp    rsi
   14002ec85:	out    0xe6,al
   14002ec87:	jmp    rsi
   14002ec89:	out    0xe6,al
   14002ec8b:	(bad)  
   14002ec8c:	fcmovbe st,st(6)
   14002ec8e:	sar    bh,cl
   14002ec90:	(bad)
   14002ec93:	dec    edx
   14002ec95:	shl    DWORD PTR [rsi-0x40383101],0xff
   14002ec9c:	stos   DWORD PTR es:[rdi],eax
   14002ec9d:	cdq    
   14002ec9e:	test   bh,bh
   14002eca0:	xchg   esi,eax
   14002eca1:	jg     0x14002ed06
   14002eca3:	call   QWORD PTR [rax-0x7300a487]
   14002eca9:	jb     0x14002ecfe
   14002ecab:	dec    DWORD PTR [rbx+rsi*2+0x778fff55]
   14002ecb2:	pop    rcx
   14002ecb3:	call   QWORD PTR [rcx-0x6300a387]
   14002ecb9:	xchg   BYTE PTR [rdi+rdi*8-0x42],ch
   14002ecbd:	mov    cl,0xa3
   14002ecbf:	jmp    rsi
   14002ecc1:	out    0xe6,al
   14002ecc3:	jmp    rsi
   14002ecc5:	out    0xe6,al
   14002ecc7:	jmp    rsi
   14002ecc9:	out    0xe6,al
   14002eccb:	jmp    rsi
   14002eccd:	out    0xe6,al
   14002eccf:	jmp    rcx
   14002ecd1:	(bad)  
   14002ecd3:	jmp    rsi
   14002ecd5:	out    0xe6,al
   14002ecd7:	jmp    rsi
   14002ecd9:	out    0xe6,al
   14002ecdb:	jmp    rsi
   14002ecdd:	out    0xe6,al
   14002ecdf:	jmp    rsi
   14002ece1:	out    0xe6,al
   14002ece3:	jmp    rsi
   14002ece5:	out    0xe6,al
   14002ece7:	(bad)  
   14002ece8:	fcomp  st(0)
   14002ecea:	fdivr  st,st(7)
   14002ecec:	sub    BYTE PTR [rbx+0x4d],0xff
   14002ecf0:	sub    DWORD PTR [rsi+0x51],0xffffffff
   14002ecf4:	(bad)  
   14002ecf5:	(bad)  
   14002ecf6:	(bad)  
   14002ecf7:	jmp    rsp
   14002ecf9:	in     al,0xe4
   14002ecfb:	jmp    rsp
   14002ecfd:	in     al,0xe4
   14002ecff:	jmp    rsp
   14002ed01:	in     al,0xe4
   14002ed03:	jmp    rsp
   14002ed05:	in     al,0xe4
   14002ed07:	jmp    rsp
   14002ed09:	in     al,0xe4
   14002ed0b:	jmp    rsp
   14002ed0d:	in     al,0xe4
   14002ed0f:	jmp    rsp
   14002ed11:	in     al,0xe4
   14002ed13:	jmp    rsp
   14002ed15:	in     al,0xe4
   14002ed17:	dec    ebp
   14002ed19:	(bad)  
   14002ed1a:	mov    esi,0x607c93ff
   14002ed1f:	jmp    QWORD PTR [rdx+rdx*4-0x493e0084]
   14002ed26:	test   eax,0xb3bfc7ff
   14002ed2b:	inc    edi
   14002ed2d:	mov    ebp,0xb7c2ffb3
   14002ed32:	stos   DWORD PTR es:[rdi],eax
   14002ed33:	push   QWORD PTR [rbp-0x4f006859]
   14002ed39:	movabs al,ds:0xe4e4ffc1c8cfff8e
   14002ed42:	in     al,0xff
   14002ed44:	in     al,0xe4
   14002ed46:	in     al,0xff
   14002ed48:	in     al,0xe4
   14002ed4a:	in     al,0xff
   14002ed4c:	in     al,0xe4
   14002ed4e:	in     al,0xff
   14002ed50:	in     al,0xe4
   14002ed52:	in     al,0xff
   14002ed54:	in     al,0xe4
   14002ed56:	in     al,0xff
   14002ed58:	in     al,0xe4
   14002ed5a:	in     al,0xff
   14002ed5c:	in     al,0xe4
   14002ed5e:	in     al,0xff
   14002ed60:	in     al,0xe4
   14002ed62:	in     al,0xff
   14002ed64:	in     al,0xe4
   14002ed66:	in     al,0xff
   14002ed68:	(bad)  
   14002ed69:	(bad)  
   14002ed6a:	(bad)  
   14002ed6b:	inc    DWORD PTR [rbx-0x7900ae92]
   14002ed71:	jno    0x14002edc7
   14002ed73:	call   rsi
   14002ed75:	(bad)  
   14002ed76:	(bad)  
   14002ed77:	jmp    rsp
   14002ed79:	in     al,0xe4
   14002ed7b:	jmp    rsp
   14002ed7d:	in     al,0xe4
   14002ed7f:	jmp    rsp
   14002ed81:	in     al,0xe4
   14002ed83:	jmp    rsp
   14002ed85:	in     al,0xe4
   14002ed87:	jmp    rsp
   14002ed89:	in     al,0xe4
   14002ed8b:	jmp    rsp
   14002ed8d:	in     al,0xe4
   14002ed8f:	jmp    rsp
   14002ed91:	in     al,0xe4
   14002ed93:	jmp    rsp
   14002ed95:	in     al,0xe4
   14002ed97:	jmp    rbx
   14002ed99:	jrcxz  0x14002ed7d
   14002ed9b:	inc    edi
   14002ed9d:	mov    edi,0xbdc6ffb4
   14002eda2:	mov    dl,0xff
   14002eda4:	leave  
   14002eda5:	sar    DWORD PTR [rax-0x54473d01],0xff
   14002edac:	ret    0xacb9
   14002edaf:	dec    esp
   14002edb1:	(bad)  
   14002edb2:	mov    ebx,0xc1c9cfff
   14002edb7:	(bad)  
   14002edb8:	fcom   st(5)
   14002edba:	sar    edi,1
   14002edbc:	loop   0x14002eda0
   14002edbe:	loopne 0x14002edbf
   14002edc0:	loop   0x14002eda4
   14002edc2:	loopne 0x14002edc3
   14002edc4:	ror    ch,cl
   14002edc6:	(bad)  
   14002edc7:	call   rbx
   14002edc9:	iret   
   14002edca:	leave  
   14002edcb:	jmp    rsp
   14002edcd:	in     al,0xe4
   14002edcf:	jmp    rsp
   14002edd1:	in     al,0xe4
   14002edd3:	jmp    rsp
   14002edd5:	in     al,0xe4
   14002edd7:	jmp    rsp
   14002edd9:	in     al,0xe4
   14002eddb:	jmp    rsp
   14002eddd:	in     al,0xe4
   14002eddf:	jmp    rsp
   14002ede1:	in     al,0xe4
   14002ede3:	jmp    rsp
   14002ede5:	in     al,0xe4
   14002ede7:	call   rsi
   14002ede9:	(bad)  
   14002edea:	(bad)  
   14002edeb:	inc    DWORD PTR [rsi-0x7500ab8f]
   14002edf1:	jne    0x14002ee4b
   14002edf3:	call   rdi
   14002edf5:	xlat   BYTE PTR ds:[rbx]
   14002edf6:	xlat   BYTE PTR ds:[rbx]
   14002edf7:	jmp    rbp
   14002edf9:	in     eax,0xe5
   14002edfb:	jmp    rbp
   14002edfd:	in     eax,0xe5
   14002edff:	jmp    rbp
   14002ee01:	in     eax,0xe5
   14002ee03:	jmp    rbp
   14002ee05:	in     eax,0xe5
   14002ee07:	jmp    rbp
   14002ee09:	in     eax,0xe5
   14002ee0b:	jmp    rbp
   14002ee0d:	in     eax,0xe5
   14002ee0f:	jmp    rbp
   14002ee11:	in     eax,0xe5
   14002ee13:	(bad)  
   14002ee14:	fcmovnu st,st(0)
   14002ee16:	(bad)  
   14002ee17:	push   QWORD PTR [rcx-0x62006f5e]
   14002ee1d:	mov    DWORD PTR [rax-0x1],esi
   14002ee20:	xchg   edi,eax
   14002ee21:	and    DWORD PTR [rdi-0x1],0xff657f95
   14002ee28:	xchg   ebp,eax
   14002ee29:	jg     0x14002ee8f
   14002ee2b:	call   QWORD PTR [rsi-0x68009980]
   14002ee31:	(bad)  
   14002ee32:	push   0x627d94ff
   14002ee37:	call   QWORD PTR [rbp+rdi*2-0x6958009e]
   14002ee3e:	cmp    edi,0xffcdd3d7
   14002ee44:	iret   
   14002ee45:	leave  
   14002ee46:	sar    edi,0xb1
   14002ee49:	movabs eax,ds:0xd9dcff95a6b4ff8f
   14002ee52:	(bad)  
   14002ee53:	jmp    rbp
   14002ee55:	in     eax,0xe5
   14002ee57:	jmp    rbp
   14002ee59:	in     eax,0xe5
   14002ee5b:	jmp    rbp
   14002ee5d:	in     eax,0xe5
   14002ee5f:	jmp    rbp
   14002ee61:	in     eax,0xe5
   14002ee63:	jmp    rbp
   14002ee65:	in     eax,0xe5
   14002ee67:	call   rdi
   14002ee69:	xlat   BYTE PTR ds:[rbx]
   14002ee6a:	xlat   BYTE PTR ds:[rbx]
   14002ee6b:	dec    DWORD PTR [rdx-0x7200a78b]
   14002ee71:	js     0x14002eecf
   14002ee73:	(bad)  
   14002ee74:	(bad)  
   14002ee76:	fcos   
   14002ee78:	out    0xe7,eax
   14002ee7a:	out    0xff,eax
   14002ee7c:	out    0xe7,eax
   14002ee7e:	out    0xff,eax
   14002ee80:	out    0xe7,eax
   14002ee82:	out    0xff,eax
   14002ee84:	out    0xe7,eax
   14002ee86:	out    0xff,eax
   14002ee88:	out    0xe7,eax
   14002ee8a:	out    0xff,eax
   14002ee8c:	out    0xe7,eax
   14002ee8e:	out    0xff,eax
   14002ee90:	out    0xe7,eax
   14002ee92:	out    0xff,eax
   14002ee94:	fcmovnu st,st(1)
   14002ee96:	(bad)  
   14002ee97:	call   FWORD PTR [rdi-0x59008b74]
   14002ee9d:	xchg   ebp,eax
   14002ee9e:	jg     0x14002ee9f
   14002eea0:	int3   
   14002eea1:	(bad)
   14002eea4:	ror    bl,cl
   14002eea6:	(bad)  
   14002eea7:	(bad)  
   14002eea8:	fcom   st(4)
   14002eeaa:	(bad)  
   14002eeab:	(bad)  
   14002eeac:	fcom   st(4)
   14002eeae:	(bad)  
   14002eeaf:	call   rcx
   14002eeb1:	retf   
   14002eeb2:	(bad)  
   14002eeb3:	dec    edx
   14002eeb5:	ret    
   14002eeb6:	mov    ecx,0xa8b6c1ff
   14002eebb:	inc    ebp
   14002eebd:	mov    esp,0xdfe0ffb0
   14002eec2:	(bad)  
   14002eec4:	out    0xe7,eax
   14002eec6:	out    0xff,eax
   14002eec8:	ror    edx,1
   14002eeca:	ret    0x9aff
   14002eecd:	test   DWORD PTR [rdi+rdi*8-0x62],ebp
   14002eed1:	mov    dh,BYTE PTR [rcx-0x1]
   14002eed4:	out    0xe7,eax
   14002eed6:	out    0xff,eax
   14002eed8:	out    0xe7,eax
   14002eeda:	out    0xff,eax
   14002eedc:	out    0xe7,eax
   14002eede:	out    0xff,eax
   14002eee0:	out    0xe7,eax
   14002eee2:	out    0xff,eax
   14002eee4:	out    0xe7,eax
   14002eee6:	out    0xff,eax
   14002eee8:	(bad)  
   14002eeea:	fcos   
   14002eeec:	lea    edi,[rax+0x5c]
   14002eeef:	call   QWORD PTR [rax-0x25009f84]
   14002eef5:	fcmovu st,st(2)
   14002eef7:	(bad)  
   14002eef8:	call   0x12902d7e5
   14002eefd:	call   0x128ebeeea
   14002ef02:	call   0x128ebd806
   14002ef07:	(bad)  
   14002ef08:	call   0x12802d7f5
   14002ef0d:	out    0xe5,eax
   14002ef0f:	jmp    rbx
   14002ef11:	loope  0x14002eef2
   14002ef13:	(bad)  
   14002ef14:	fcmovbe st,st(6)
   14002ef16:	sar    edi,1
   14002ef18:	shl    DWORD PTR [rdi-0x4e420057],0xa2
   14002ef1f:	dec    ebp
   14002ef21:	(bad)  
   14002ef22:	mov    esp,0xbbc5ccff
   14002ef27:	dec    ebx
   14002ef29:	(bad)  
   14002ef2a:	mov    ebx,0xb8c3ccff
   14002ef2f:	call   rax
   14002ef31:	(bad)
   14002ef34:	(bad)  
   14002ef35:	retf   
   14002ef36:	ret    
   14002ef37:	(bad)  
   14002ef38:	fcmovbe st,st(6)
   14002ef3a:	sar    bh,cl
   14002ef3c:	loopne 0x14002ef1c
   14002ef3e:	(bad)  
   14002ef40:	in     al,0xe4
   14002ef42:	loop   0x14002ef43
   14002ef44:	call   0x12902d831
   14002ef49:	call   0x10ed7ef36
   14002ef4e:	(bad)  
   14002ef4f:	dec    DWORD PTR [rdi-0x1700a489]
   14002ef55:	call   0x128ebef42
   14002ef5a:	call   0x128ebd85e
   14002ef5f:	(bad)  
   14002ef60:	call   0x12902d84d
   14002ef65:	call   0x11addef52
   14002ef6a:	(bad)  
   14002ef6c:	nop
   14002ef6d:	jl     0x14002efcf
   14002ef6f:	call   QWORD PTR [rdi+rdi*2-0x2323009c]
   14002ef76:	fdiv   st(7),st
   14002ef78:	(bad)  
   14002ef79:	(bad)  
   14002ef7a:	(bad)  
   14002ef7b:	(bad)  
   14002ef7c:	(bad)  
   14002ef7d:	(bad)  
   14002ef7e:	(bad)  
   14002ef7f:	(bad)  
   14002ef80:	(bad)  
   14002ef81:	(bad)  
   14002ef82:	(bad)  
   14002ef83:	(bad)  
   14002ef84:	(bad)  
   14002ef85:	(bad)  
   14002ef86:	(bad)  
   14002ef87:	(bad)  
   14002ef88:	(bad)  
   14002ef89:	(bad)  
   14002ef8a:	(bad)  
   14002ef8b:	(bad)  
   14002ef8c:	fcmovnbe st,st(7)
   14002ef8e:	sar    edi,cl
   14002ef90:	movabs eax,ds:0x9cff5d7a92ff768e
   14002ef99:	xchg   DWORD PTR [rdi-0x1],ebp
   14002ef9c:	mov    ah,0xa5
   14002ef9e:	xchg   ebx,eax
   14002ef9f:	push   QWORD PTR [rdx-0x50006f5c]
   14002efa5:	movabs eax,ds:0xa2b0ff85a2b8ff8d
   14002efae:	(bad)  
   14002efaf:	call   FWORD PTR [rcx-0x5c006166]
   14002efb5:	xchg   esp,eax
   14002efb6:	cmp    edi,0xff6f91ad
   14002efbc:	lods   eax,DWORD PTR ds:[rsi]
   14002efbd:	pushf  
   14002efbe:	xchg   bh,bh
   14002efc0:	ret    
   14002efc1:	mov    bh,0xaa
   14002efc3:	jmp    rcx
   14002efc5:	(bad)  
   14002efc7:	(bad)  
   14002efc8:	(bad)  
   14002efc9:	(bad)  
   14002efca:	(bad)  
   14002efcb:	(bad)  
   14002efcc:	(bad)  
   14002efcd:	(bad)  
   14002efce:	(bad)  
   14002efcf:	call   FWORD PTR [rdi+rax*4-0x15150092]
   14002efd6:	(bad)  
   14002efd7:	(bad)  
   14002efd8:	(bad)  
   14002efd9:	(bad)  
   14002efda:	(bad)  
   14002efdb:	(bad)  
   14002efdc:	(bad)  
   14002efdd:	(bad)  
   14002efde:	(bad)  
   14002efdf:	(bad)  
   14002efe0:	(bad)  
   14002efe1:	(bad)  
   14002efe2:	(bad)  
   14002efe3:	(bad)  
   14002efe4:	(bad)  
   14002efe5:	(bad)  
   14002efe6:	(bad)  
   14002efe7:	(bad)  
   14002efe8:	(bad)  
   14002efea:	fdiv   st(7),st
   14002efec:	xchg   esp,eax
   14002efed:	jg     0x14002f053
   14002efef:	call   QWORD PTR [rdi-0x2200977d]
   14002eff5:	fstp   st(5)
   14002eff7:	(bad)  
   14002eff8:	jmp    0x14002efe5
   14002effa:	jmp    0x14002effb
   14002effc:	jmp    0x14002efe9
   14002effe:	jmp    0x14002efff
   14002f000:	jmp    0x14002efed
   14002f002:	jmp    0x14002f003
   14002f004:	jmp    0x14002eff1
   14002f006:	jmp    0x14002f007
   14002f008:	jmp    0x14002eff5
   14002f00a:	jmp    0x14002f00b
   14002f00c:	jrcxz  0x14002efef
   14002f00e:	(bad)  
   14002f010:	mov    dh,0xa7
   14002f012:	xchg   esi,eax
   14002f013:	call   FWORD PTR [rsi-0x50008d76]
   14002f019:	sahf   
   14002f01a:	mov    edi,edi
   14002f01c:	retf   
   14002f01d:	ret    0xffb8
   14002f020:	(bad)  
   14002f022:	sar    bh,cl
   14002f024:	jrcxz  0x14002f007
   14002f026:	(bad)  
   14002f028:	out    0xe2,al
   14002f02a:	fdiv   st(7),st
   14002f02c:	out    0xe2,al
   14002f02e:	(bad)  
   14002f030:	scas   al,BYTE PTR es:[rdi]
   14002f031:	(bad)
   14002f034:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002f035:	mov    ebp,0xdae2ffd8
   14002f03a:	sar    bh,cl
   14002f03c:	fstp   st(0)
   14002f03e:	sar    bh,cl
   14002f040:	(bad)  
   14002f041:	ror    al,1
   14002f043:	call   rdi
   14002f045:	ror    edx,1
   14002f047:	dec    edi
   14002f049:	(bad)  
   14002f04a:	mov    esp,0x859aabff
   14002f04f:	call   QWORD PTR [rax-0x1400a488]
   14002f055:	jmp    0x14002f042
   14002f057:	(bad)  
   14002f058:	jmp    0x14002f045
   14002f05a:	jmp    0x14002f05b
   14002f05c:	jmp    0x14002f049
   14002f05e:	jmp    0x14002f05f
   14002f060:	jmp    0x14002f04d
   14002f062:	jmp    0x14002f063
   14002f064:	jmp    0x14002f051
   14002f066:	jmp    0x14002f067
   14002f068:	fstp   st(5)
   14002f06a:	(bad)  
   14002f06c:	xchg   edi,eax
   14002f06d:	sub    DWORD PTR [rax-0x1],0xffffff9b
   14002f071:	xchg   DWORD PTR [rdi+rdi*8-0x22],ebp
   14002f075:	(bad)  
   14002f077:	(bad)  
   14002f078:	in     al,dx
   14002f079:	in     al,dx
   14002f07a:	in     al,dx
   14002f07b:	(bad)  
   14002f07c:	in     eax,dx
   14002f07d:	in     eax,dx
   14002f07e:	in     eax,dx
   14002f07f:	(bad)  
   14002f080:	in     eax,dx
   14002f081:	in     eax,dx
   14002f082:	in     eax,dx
   14002f083:	(bad)  
   14002f084:	in     eax,dx
   14002f085:	in     eax,dx
   14002f086:	in     eax,dx
   14002f087:	(bad)  
   14002f088:	in     eax,dx
   14002f089:	in     eax,dx
   14002f08a:	in     eax,dx
   14002f08b:	(bad)  
   14002f08c:	in     eax,dx
   14002f08d:	in     eax,dx
   14002f08e:	in     al,dx
   14002f08f:	(bad)  
   14002f090:	(bad)  
   14002f091:	jmp    0x122e7f07e
   14002f096:	fdivp  st(7),st
   14002f098:	ror    edx,1
   14002f09a:	sar    edi,0xd0
   14002f09d:	enter  0xffbf,0xe5
   14002f0a1:	loopne 0x14002f07d
   14002f0a3:	(bad)  
   14002f0a4:	in     eax,dx
   14002f0a5:	in     eax,dx
   14002f0a6:	in     eax,dx
   14002f0a7:	(bad)  
   14002f0a8:	mov    ebx,0xa1ffeccf
   14002f0ad:	shr    eax,0xff
   14002f0b0:	iret   
   14002f0b1:	fucomp st(4)
   14002f0b3:	dec    DWORD PTR [rax-0x72]
   14002f0b6:	jmp    0x14002f0b7
   14002f0b8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002f0b9:	ret    0xffe7
   14002f0bc:	in     eax,dx
   14002f0bd:	in     eax,dx
   14002f0be:	in     eax,dx
   14002f0bf:	(bad)  
   14002f0c0:	in     al,dx
   14002f0c1:	in     al,dx
   14002f0c2:	jmp    0x14002f0c3
   14002f0c4:	call   0x11002d5b0
   14002f0c9:	(bad)  
   14002f0ca:	mov    ebp,0x9daebbff
   14002f0cf:	dec    esp
   14002f0d1:	(bad)  
   14002f0d2:	mov    edx,0xedededff
   14002f0d7:	(bad)  
   14002f0d8:	in     eax,dx
   14002f0d9:	in     eax,dx
   14002f0da:	in     eax,dx
   14002f0db:	(bad)  
   14002f0dc:	in     eax,dx
   14002f0dd:	in     eax,dx
   14002f0de:	in     eax,dx
   14002f0df:	(bad)  
   14002f0e0:	in     eax,dx
   14002f0e1:	in     eax,dx
   14002f0e2:	in     eax,dx
   14002f0e3:	(bad)  
   14002f0e4:	in     al,dx
   14002f0e5:	in     al,dx
   14002f0e6:	in     al,dx
   14002f0e7:	(bad)  
   14002f0e8:	(bad)  
   14002f0ea:	fdivp  st(7),st
   14002f0ec:	fwait
   14002f0ed:	xchg   DWORD PTR [rdi+rdi*8-0x61],ebp
   14002f0f1:	mov    dh,BYTE PTR [rax-0x1]
   14002f0f4:	loopne 0x14002f0d6
   14002f0f6:	loopne 0x14002f0f7
   14002f0f8:	out    dx,al
   14002f0f9:	out    dx,al
   14002f0fa:	out    dx,al
   14002f0fb:	(bad)  
   14002f0fc:	out    dx,eax
   14002f0fd:	out    dx,eax
   14002f0fe:	out    dx,eax
   14002f0ff:	(bad)  
   14002f100:	out    dx,eax
   14002f101:	out    dx,eax
   14002f102:	out    dx,eax
   14002f103:	(bad)  
   14002f104:	out    dx,eax
   14002f105:	out    dx,eax
   14002f106:	out    dx,eax
   14002f107:	(bad)  
   14002f108:	out    dx,eax
   14002f109:	out    dx,eax
   14002f10a:	out    dx,eax
   14002f10b:	(bad)  
   14002f10c:	out    dx,eax
   14002f10d:	out    dx,eax
   14002f10e:	out    dx,eax
   14002f10f:	(bad)  
   14002f110:	out    dx,eax
   14002f111:	out    dx,eax
   14002f112:	out    dx,eax
   14002f113:	(bad)  
   14002f114:	out    dx,eax
   14002f115:	out    dx,eax
   14002f116:	out    dx,eax
   14002f117:	(bad)  
   14002f118:	out    dx,eax
   14002f119:	out    dx,eax
   14002f11a:	out    dx,al
   14002f11b:	(bad)  
   14002f11c:	out    dx,al
   14002f11d:	out    dx,al
   14002f11e:	in     al,dx
   14002f11f:	(bad)  
   14002f120:	out    dx,eax
   14002f121:	out    dx,eax
   14002f122:	out    dx,eax
   14002f123:	inc    edx
   14002f125:	shl    al,1
   14002f127:	dec    DWORD PTR [rdx-0x71]
   14002f12a:	hlt    
   14002f12b:	jmp    FWORD PTR [rdx+rcx*8-0x1a230013]
   14002f132:	out    dx,eax
   14002f133:	jmp    FWORD PTR [rcx]
   14002f135:	jp     0x14002f11d
   14002f137:	(bad)  
   14002f138:	cmp    DWORD PTR [rdi+riz*8-0x10181d01],eax
   14002f13f:	(bad)  
   14002f140:	out    dx,eax
   14002f141:	out    dx,eax
   14002f142:	out    dx,eax
   14002f143:	(bad)  
   14002f144:	out    dx,eax
   14002f145:	out    dx,eax
   14002f146:	out    dx,eax
   14002f147:	(bad)  
   14002f148:	out    dx,al
   14002f149:	out    dx,al
   14002f14a:	in     eax,dx
   14002f14b:	(bad)  
   14002f14c:	out    dx,al
   14002f14d:	out    dx,al
   14002f14e:	in     al,dx
   14002f14f:	(bad)  
   14002f150:	out    dx,eax
   14002f151:	out    dx,eax
   14002f152:	out    dx,eax
   14002f153:	(bad)  
   14002f154:	out    dx,eax
   14002f155:	out    dx,eax
   14002f156:	out    dx,eax
   14002f157:	(bad)  
   14002f158:	out    dx,eax
   14002f159:	out    dx,eax
   14002f15a:	out    dx,eax
   14002f15b:	(bad)  
   14002f15c:	out    dx,eax
   14002f15d:	out    dx,eax
   14002f15e:	out    dx,eax
   14002f15f:	(bad)  
   14002f160:	out    dx,eax
   14002f161:	out    dx,eax
   14002f162:	out    dx,eax
   14002f163:	(bad)  
   14002f164:	out    dx,al
   14002f165:	out    dx,al
   14002f166:	out    dx,al
   14002f167:	jmp    rax
   14002f169:	loopne 0x14002f14b
   14002f16b:	call   FWORD PTR [rdi-0x5d008f76]
   14002f171:	mov    ?,WORD PTR [rdi+rdi*8-0x1f]
   14002f175:	loope  0x14002f158
   14002f177:	(bad)  
   14002f178:	out    dx,eax
   14002f179:	out    dx,eax
   14002f17a:	out    dx,eax
   14002f17b:	push   rax
   14002f17d:	lock lock push rax
   14002f181:	lock lock push rax
   14002f185:	lock lock push rax
   14002f189:	lock lock push rax
   14002f18d:	lock lock push rax
   14002f191:	lock lock push rax
   14002f195:	lock lock push rax
   14002f199:	lock lock push rax
   14002f19d:	lock lock call rsi
   14002f1a1:	loope  0x14002f194
   14002f1a3:	(bad)  
   14002f1a4:	ds mov al,ch
   14002f1a7:	(bad)  
   14002f1a8:	jns    0x14002f157
   14002f1aa:	jmp    0x130f1dfae
   14002f1af:	jmp    FWORD PTR [rax-0x5e]
   14002f1b2:	jmp    0x1236affb6
   14002f1b7:	inc    DWORD PTR [rdx-0x76]
   14002f1ba:	out    0xff,al
   14002f1bc:	loope  0x14002f1a5
   14002f1be:	lock push rax
   14002f1c1:	lock lock push rax
   14002f1c5:	lock lock push rax
   14002f1c9:	lock lock push rax
   14002f1cd:	lock lock push rax
   14002f1d1:	lock lock push rax
   14002f1d5:	lock lock push rax
   14002f1d9:	lock lock push rax
   14002f1dd:	lock lock push rax
   14002f1e1:	lock lock (bad) 
   14002f1e4:	out    dx,eax
   14002f1e5:	out    dx,eax
   14002f1e6:	out    dx,eax
   14002f1e7:	jmp    rcx
   14002f1e9:	loope  0x14002f1cc
   14002f1eb:	jmp    QWORD PTR [rdx-0x59008b72]
   14002f1f1:	xchg   ecx,eax
   14002f1f2:	js     0x14002f1f3
   14002f1f4:	jrcxz  0x14002f1d9
   14002f1f6:	jrcxz  0x14002f1f7
   14002f1f8:	icebp  
   14002f1f9:	icebp  
   14002f1fa:	icebp  
   14002f1fb:	push   rdx
   14002f1fd:	repnz repnz push rdx
   14002f201:	repnz repnz push rdx
   14002f205:	repnz repnz push rdx
   14002f209:	repnz repnz push rdx
   14002f20d:	repnz repnz push rdx
   14002f211:	repnz repnz push rdx
   14002f215:	repnz repnz push rdx
   14002f219:	repnz repnz (bad) 
   14002f21c:	in     al,dx
   14002f21d:	out    dx,al
   14002f21e:	bnd jmp QWORD PTR [rbp-0x5f]
   14002f222:	jmp    0x127852626
   14002f227:	call   rbx
   14002f229:	loopne 0x14002f21b
   14002f22b:	push   QWORD PTR [rdi+0x1affefd1]
   14002f231:	jno    0x14002f218
   14002f233:	call   QWORD PTR [rsi]
   14002f235:	outs   dx,BYTE PTR ds:[rsi]
   14002f236:	in     al,0xff
   14002f238:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002f239:	(bad)  
   14002f23a:	in     eax,dx
   14002f23b:	push   rdx
   14002f23d:	repnz repnz push rdx
   14002f241:	repnz repnz push rdx
   14002f245:	repnz repnz push rdx
   14002f249:	repnz repnz push rdx
   14002f24d:	repnz repnz push rdx
   14002f251:	repnz repnz push rdx
   14002f255:	repnz repnz push rdx
   14002f259:	repnz repnz push rdx
   14002f25d:	repnz repnz push rdx
   14002f261:	repnz repnz push rcx
   14002f265:	icebp  
   14002f266:	icebp  
   14002f267:	jmp    rbx
   14002f269:	jrcxz  0x14002f24e
   14002f26b:	jmp    QWORD PTR [rsi-0x5600876f]
   14002f271:	xchg   ebp,eax
   14002f272:	jl     0x14002f273
   14002f274:	in     al,0xe4
   14002f276:	in     al,0xff
   14002f278:	repnz repnz repnz push rbx
   14002f27d:	repz repz push rbx
   14002f281:	repz repz push rbx
   14002f285:	repz repz push rbx
   14002f289:	repz repz push rbx
   14002f28d:	repz repz push rbx
   14002f291:	repz repz push rbx
   14002f295:	repz repz push rbx
   14002f299:	repz repz inc eax
   14002f29d:	(bad)  
   14002f29e:	lock jmp QWORD PTR [rsi]
   14002f2a1:	ja     0x14002f288
   14002f2a3:	jmp    QWORD PTR [rsi-0x5d]
   14002f2a6:	jmp    0x14002f2a7
   14002f2a8:	repz repz repz inc DWORD PTR [rsi+0x15ffecb5]
   14002f2b1:	ins    BYTE PTR es:[rdi],dx
   14002f2b2:	in     al,0xff
   14002f2b4:	ins    BYTE PTR es:[rdi],dx
   14002f2b5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002f2b6:	jmp    0x14002f2b7
   14002f2b8:	in     eax,dx
   14002f2b9:	out    dx,eax
   14002f2ba:	repz push rbx
   14002f2bd:	repz repz push rbx
   14002f2c1:	repz repz push rbx
   14002f2c5:	repz repz push rbx
   14002f2c9:	repz repz push rbx
   14002f2cd:	repz repz push rbx
   14002f2d1:	repz repz push rbx
   14002f2d5:	repz repz push rbx
   14002f2d9:	repz repz push rbx
   14002f2dd:	repz repz push rbx
   14002f2e1:	repz repz push rdx
   14002f2e5:	repnz bnd jmp rsp
   14002f2e9:	in     al,0xe4
   14002f2eb:	jmp    FWORD PTR [rcx-0x5300836b]
   14002f2f1:	cwde   
   14002f2f2:	cmp    bh,0xe6
   14002f2f5:	out    0xe6,al
   14002f2f7:	push   rsp
   14002f2f9:	hlt    
   14002f2fa:	hlt    
   14002f2fb:	push   rbp
   14002f2fd:	cmc    
   14002f2fe:	cmc    
   14002f2ff:	push   rbp
   14002f301:	cmc    
   14002f302:	cmc    
   14002f303:	push   rbp
   14002f305:	cmc    
   14002f306:	cmc    
   14002f307:	push   rbp
   14002f309:	cmc    
   14002f30a:	cmc    
   14002f30b:	push   rbp
   14002f30d:	cmc    
   14002f30e:	cmc    
   14002f30f:	push   rbp
   14002f311:	cmc    
   14002f312:	cmc    
   14002f313:	push   rbp
   14002f315:	cmc    
   14002f316:	cmc    
   14002f317:	push   rbp
   14002f319:	cmc    
   14002f31a:	cmc    
   14002f31b:	(bad)  
   14002f31c:	mov    ecx,0x1ffff1d3
   14002f321:	je     0x14002f308
   14002f323:	inc    DWORD PTR [rbp+rcx*4-0x18]
   14002f327:	push   rcx
   14002f329:	repnz cmc 
   14002f32b:	jmp    QWORD PTR [rax+0x16ffefc5]
   14002f331:	ins    DWORD PTR es:[rdi],dx
   14002f332:	jrcxz  0x14002f333
   14002f334:	popf   
   14002f335:	ret    0xffef
   14002f338:	cmc    
   14002f339:	cmc    
   14002f33a:	cmc    
   14002f33b:	push   rbp
   14002f33d:	cmc    
   14002f33e:	cmc    
   14002f33f:	push   rbp
   14002f341:	cmc    
   14002f342:	cmc    
   14002f343:	push   rbp
   14002f345:	cmc    
   14002f346:	cmc    
   14002f347:	push   rbp
   14002f349:	cmc    
   14002f34a:	cmc    
   14002f34b:	push   rbp
   14002f34d:	cmc    
   14002f34e:	cmc    
   14002f34f:	push   rbp
   14002f351:	cmc    
   14002f352:	cmc    
   14002f353:	push   rbp
   14002f355:	cmc    
   14002f356:	cmc    
   14002f357:	push   rbp
   14002f359:	cmc    
   14002f35a:	cmc    
   14002f35b:	push   rbp
   14002f35d:	cmc    
   14002f35e:	cmc    
   14002f35f:	push   rbp
   14002f361:	cmc    
   14002f362:	cmc    
   14002f363:	push   rsp
   14002f365:	hlt    
   14002f366:	hlt    
   14002f367:	jmp    rsi
   14002f369:	out    0xe6,al
   14002f36b:	jmp    FWORD PTR [rax+rbx*4-0x634f0080]
   14002f372:	test   bh,bh
   14002f374:	out    0xe7,eax
   14002f376:	out    0xff,eax
   14002f378:	cmc    
   14002f379:	cmc    
   14002f37a:	cmc    
   14002f37b:	push   rsi
   14002f37d:	div    dh
   14002f37f:	push   rsi
   14002f381:	div    dh
   14002f383:	push   rsi
   14002f385:	div    dh
   14002f387:	push   rsi
   14002f389:	div    dh
   14002f38b:	push   rsi
   14002f38d:	div    dh
   14002f38f:	push   rsi
   14002f391:	div    dh
   14002f393:	push   rsi
   14002f395:	div    dh
   14002f397:	push   rsi
   14002f399:	div    dh
   14002f39b:	jmp    rsi
   14002f39d:	out    dx,al
   14002f39e:	cmc    
   14002f39f:	call   FWORD PTR [rdi-0x61]
   14002f3a2:	jmp    0x14002f3a3
   14002f3a4:	sbb    DWORD PTR [rdi-0x1c],ebp
   14002f3a7:	call   QWORD PTR [rax-0x13001045]
   14002f3ad:	icebp  
   14002f3ae:	idiv   bh
   14002f3b0:	rex.RXB (bad) 
   14002f3b5:	mov    al,ch
   14002f3b7:	call   rdx
   14002f3b9:	loope  0x14002f3ae
   14002f3bb:	push   rsi
   14002f3bd:	div    dh
   14002f3bf:	push   rsi
   14002f3c1:	div    dh
   14002f3c3:	push   rsi
   14002f3c5:	div    dh
   14002f3c7:	push   rsi
   14002f3c9:	div    dh
   14002f3cb:	push   rsi
   14002f3cd:	div    dh
   14002f3cf:	push   rsi
   14002f3d1:	div    dh
   14002f3d3:	push   rsi
   14002f3d5:	div    dh
   14002f3d7:	push   rsi
   14002f3d9:	div    dh
   14002f3db:	push   rsi
   14002f3dd:	div    dh
   14002f3df:	push   rsi
   14002f3e1:	div    dh
   14002f3e3:	push   rbp
   14002f3e5:	cmc    
   14002f3e6:	cmc    
   14002f3e7:	jmp    rdi
   14002f3e9:	out    0xe7,eax
   14002f3eb:	push   QWORD PTR [rax-0x4c007b64]
   14002f3f1:	lahf   
   14002f3f2:	xchg   edi,edi
   14002f3f4:	call   0x13702dce1
   14002f3f9:	div    dh
   14002f3fb:	push   rdi
   14002f3fd:	div    edi
   14002f3ff:	push   rdi
   14002f401:	div    edi
   14002f403:	push   rdi
   14002f405:	div    edi
   14002f407:	push   rdi
   14002f409:	div    edi
   14002f40b:	push   rdi
   14002f40d:	div    edi
   14002f40f:	push   rdi
   14002f411:	div    edi
   14002f413:	push   rdi
   14002f415:	div    edi
   14002f417:	push   rdi
   14002f419:	div    edi
   14002f41b:	push   rdi
   14002f41d:	div    edi
   14002f41f:	call   rbx
   14002f421:	loop   0x14002f417
   14002f423:	dec    DWORD PTR [rbx-0x6f]
   14002f426:	(bad)  
   14002f427:	jmp    QWORD PTR [rcx]
   14002f429:	je     0x14002f411
   14002f42b:	jmp    QWORD PTR [rax-0x28000e3b]
   14002f431:	out    0xf4,al
   14002f433:	dec    DWORD PTR [rbx-0x6f]
   14002f436:	(bad)  
   14002f437:	dec    DWORD PTR [rcx-0x70]
   14002f43a:	(bad)  
   14002f43b:	push   QWORD PTR [rbx-0x8000d2f]
   14002f441:	div    edi
   14002f443:	push   rdi
   14002f445:	div    edi
   14002f447:	push   rdi
   14002f449:	div    edi
   14002f44b:	push   rdi
   14002f44d:	div    edi
   14002f44f:	push   rdi
   14002f451:	div    edi
   14002f453:	push   rdi
   14002f455:	div    edi
   14002f457:	push   rdi
   14002f459:	div    edi
   14002f45b:	push   rdi
   14002f45d:	div    edi
   14002f45f:	push   rdi
   14002f461:	div    edi
   14002f463:	push   rsi
   14002f465:	div    dh
   14002f467:	(bad)  
   14002f468:	call   0xf402dd55
   14002f46d:	lahf   
   14002f46e:	xchg   edi,edi
   14002f470:	mov    dh,0xa2
   14002f472:	mov    edi,edi
   14002f474:	jmp    0x13802de62
   14002f479:	div    edi
   14002f47b:	(bad)  
   14002f47c:	clc    
   14002f47d:	clc    
   14002f47e:	clc    
   14002f47f:	(bad)  
   14002f480:	clc    
   14002f481:	clc    
   14002f482:	clc    
   14002f483:	(bad)  
   14002f484:	clc    
   14002f485:	clc    
   14002f486:	clc    
   14002f487:	(bad)  
   14002f488:	clc    
   14002f489:	clc    
   14002f48a:	clc    
   14002f48b:	(bad)  
   14002f48c:	clc    
   14002f48d:	clc    
   14002f48e:	clc    
   14002f48f:	(bad)  
   14002f490:	clc    
   14002f491:	clc    
   14002f492:	clc    
   14002f493:	(bad)  
   14002f494:	clc    
   14002f495:	clc    
   14002f496:	clc    
   14002f497:	(bad)  
   14002f498:	clc    
   14002f499:	clc    
   14002f49a:	clc    
   14002f49b:	(bad)  
   14002f49c:	clc    
   14002f49d:	clc    
   14002f49e:	clc    
   14002f49f:	(bad)  
   14002f4a0:	clc    
   14002f4a1:	clc    
   14002f4a2:	clc    
   14002f4a3:	(bad)  
   14002f4a4:	(bad)  
   14002f4a6:	idiv   bh
   14002f4a8:	pop    rsi
   14002f4a9:	popf   
   14002f4aa:	jmp    0x14002f4ab
   14002f4ac:	(bad)  
   14002f4ad:	js     0x14002f495
   14002f4af:	dec    DWORD PTR [rcx+rdi*4-0x1c2b0011]
   14002f4b6:	idiv   bh
   14002f4b8:	jnp    0x14002f46a
   14002f4ba:	out    dx,al
   14002f4bb:	jmp    QWORD PTR [rdi-0x5d]
   14002f4be:	in     eax,dx
   14002f4bf:	call   QWORD PTR [rbp-0x26000e41]
   14002f4c5:	out    0xf6,eax
   14002f4c7:	(bad)  
   14002f4c8:	clc    
   14002f4c9:	clc    
   14002f4ca:	clc    
   14002f4cb:	(bad)  
   14002f4cc:	clc    
   14002f4cd:	clc    
   14002f4ce:	clc    
   14002f4cf:	(bad)  
   14002f4d0:	clc    
   14002f4d1:	clc    
   14002f4d2:	clc    
   14002f4d3:	(bad)  
   14002f4d4:	clc    
   14002f4d5:	clc    
   14002f4d6:	clc    
   14002f4d7:	(bad)  
   14002f4d8:	clc    
   14002f4d9:	clc    
   14002f4da:	clc    
   14002f4db:	(bad)  
   14002f4dc:	clc    
   14002f4dd:	clc    
   14002f4de:	clc    
   14002f4df:	(bad)  
   14002f4e0:	clc    
   14002f4e1:	clc    
   14002f4e2:	clc    
   14002f4e3:	push   rdi
   14002f4e5:	div    edi
   14002f4e7:	(bad)  
   14002f4e8:	jmp    0xf702ded6
   14002f4ed:	movabs ds:0xebebff8ea5b9ff8b,al
   14002f4f6:	jmp    0x14002f4f7
   14002f4f8:	stc    
   14002f4f9:	stc    
   14002f4fa:	stc    
   14002f4fb:	(bad)  
   14002f4fc:	cli    
   14002f4fd:	cli    
   14002f4fe:	cli    
   14002f4ff:	(bad)  
   14002f500:	cli    
   14002f501:	cli    
   14002f502:	cli    
   14002f503:	(bad)  
   14002f504:	cli    
   14002f505:	cli    
   14002f506:	cli    
   14002f507:	(bad)  
   14002f508:	cli    
   14002f509:	cli    
   14002f50a:	cli    
   14002f50b:	(bad)  
   14002f50c:	cli    
   14002f50d:	cli    
   14002f50e:	cli    
   14002f50f:	(bad)  
   14002f510:	cli    
   14002f511:	cli    
   14002f512:	cli    
   14002f513:	(bad)  
   14002f514:	cli    
   14002f515:	cli    
   14002f516:	cli    
   14002f517:	(bad)  
   14002f518:	cli    
   14002f519:	cli    
   14002f51a:	cli    
   14002f51b:	(bad)  
   14002f51c:	cli    
   14002f51d:	cli    
   14002f51e:	cli    
   14002f51f:	(bad)  
   14002f520:	cli    
   14002f521:	cli    
   14002f522:	cli    
   14002f523:	(bad)  
   14002f524:	cli    
   14002f525:	cli    
   14002f526:	cli    
   14002f527:	(bad)  
   14002f528:	jmp    0x1bf02ef1e
   14002f52d:	mov    cl,0xef
   14002f52f:	jmp    FWORD PTR [rcx]
   14002f531:	jns    0x14002f519
   14002f533:	dec    DWORD PTR [rdx-0x5000f47]
   14002f539:	cli    
   14002f53a:	cli    
   14002f53b:	dec    edx
   14002f53d:	fcomip st,st(7)
   14002f53f:	jmp    QWORD PTR [rdi-0x31000c36]
   14002f545:	loope  0x14002f53e
   14002f547:	push   rdi
   14002f549:	clc    
   14002f54a:	cli    
   14002f54b:	(bad)  
   14002f54c:	cli    
   14002f54d:	cli    
   14002f54e:	cli    
   14002f54f:	(bad)  
   14002f550:	cli    
   14002f551:	cli    
   14002f552:	cli    
   14002f553:	(bad)  
   14002f554:	cli    
   14002f555:	cli    
   14002f556:	cli    
   14002f557:	(bad)  
   14002f558:	cli    
   14002f559:	cli    
   14002f55a:	cli    
   14002f55b:	(bad)  
   14002f55c:	cli    
   14002f55d:	cli    
   14002f55e:	cli    
   14002f55f:	(bad)  
   14002f560:	cli    
   14002f561:	cli    
   14002f562:	cli    
   14002f563:	(bad)  
   14002f564:	stc    
   14002f565:	stc    
   14002f566:	stc    
   14002f567:	(bad)  
   14002f568:	jmp    0x14002f555
   14002f56a:	jmp    0x14002f56b
   14002f56c:	mov    ecx,0xbcff8ea5
   14002f571:	test   al,0x92
   14002f573:	(bad)  
   14002f574:	in     al,dx
   14002f575:	in     al,dx
   14002f576:	in     al,dx
   14002f577:	(bad)  
   14002f578:	cli    
   14002f579:	cli    
   14002f57a:	cli    
   14002f57b:	(bad)  
   14002f57c:	sti    
   14002f57d:	sti    
   14002f57e:	sti    
   14002f57f:	(bad)  
   14002f580:	sti    
   14002f581:	sti    
   14002f582:	sti    
   14002f583:	(bad)  
   14002f584:	sti    
   14002f585:	sti    
   14002f586:	sti    
   14002f587:	(bad)  
   14002f588:	sti    
   14002f589:	sti    
   14002f58a:	sti    
   14002f58b:	(bad)  
   14002f58c:	sti    
   14002f58d:	sti    
   14002f58e:	sti    
   14002f58f:	(bad)  
   14002f590:	sti    
   14002f591:	sti    
   14002f592:	sti    
   14002f593:	(bad)  
   14002f594:	sti    
   14002f595:	sti    
   14002f596:	sti    
   14002f597:	(bad)  
   14002f598:	sti    
   14002f599:	sti    
   14002f59a:	sti    
   14002f59b:	(bad)  
   14002f59c:	sti    
   14002f59d:	sti    
   14002f59e:	sti    
   14002f59f:	(bad)  
   14002f5a0:	sti    
   14002f5a1:	sti    
   14002f5a2:	sti    
   14002f5a3:	(bad)  
   14002f5a4:	sti    
   14002f5a5:	sti    
   14002f5a6:	sti    
   14002f5a7:	(bad)  
   14002f5a8:	sti    
   14002f5a9:	sti    
   14002f5aa:	sti    
   14002f5ab:	push   rsp
   14002f5ad:	clc    
   14002f5ae:	sti    
   14002f5af:	dec    DWORD PTR [rbp+0x40fff1bc]
   14002f5b5:	mov    cl,ch
   14002f5b7:	inc    ecx
   14002f5b9:	(bad)  
   14002f5bb:	(bad)  
   14002f5bc:	sti    
   14002f5bd:	sti    
   14002f5be:	sti    
   14002f5bf:	(bad)  
   14002f5c0:	sti    
   14002f5c1:	sti    
   14002f5c2:	sti    
   14002f5c3:	push   rbx
   14002f5c5:	idiv   edx
   14002f5c7:	(bad)  
   14002f5c8:	cli    
   14002f5c9:	cli    
   14002f5ca:	sti    
   14002f5cb:	(bad)  
   14002f5cc:	sti    
   14002f5cd:	sti    
   14002f5ce:	sti    
   14002f5cf:	(bad)  
   14002f5d0:	sti    
   14002f5d1:	sti    
   14002f5d2:	sti    
   14002f5d3:	(bad)  
   14002f5d4:	sti    
   14002f5d5:	sti    
   14002f5d6:	sti    
   14002f5d7:	(bad)  
   14002f5d8:	sti    
   14002f5d9:	sti    
   14002f5da:	sti    
   14002f5db:	(bad)  
   14002f5dc:	sti    
   14002f5dd:	sti    
   14002f5de:	sti    
   14002f5df:	(bad)  
   14002f5e0:	sti    
   14002f5e1:	sti    
   14002f5e2:	sti    
   14002f5e3:	(bad)  
   14002f5e4:	cli    
   14002f5e5:	cli    
   14002f5e6:	cli    
   14002f5e7:	(bad)  
   14002f5e8:	in     al,dx
   14002f5e9:	in     al,dx
   14002f5ea:	in     al,dx
   14002f5eb:	(bad)  
   14002f5ec:	mov    esp,0xbfff92a8
   14002f5f1:	stos   DWORD PTR es:[rdi],eax
   14002f5f2:	xchg   ebp,eax
   14002f5f3:	(bad)  
   14002f5f4:	in     al,dx
   14002f5f5:	in     al,dx
   14002f5f6:	in     al,dx
   14002f5f7:	(bad)  
   14002f5f8:	stc    
   14002f5f9:	stc    
   14002f5fa:	stc    
   14002f5fb:	(bad)  
   14002f5fc:	cld    
   14002f5fd:	cld    
   14002f5fe:	cld    
   14002f5ff:	(bad)  
   14002f600:	cld    
   14002f601:	cld    
   14002f602:	cld    
   14002f603:	(bad)  
   14002f604:	cld    
   14002f605:	cld    
   14002f606:	cld    
   14002f607:	(bad)  
   14002f608:	cld    
   14002f609:	cld    
   14002f60a:	cld    
   14002f60b:	(bad)  
   14002f60c:	cld    
   14002f60d:	cld    
   14002f60e:	cld    
   14002f60f:	(bad)  
   14002f610:	cld    
   14002f611:	cld    
   14002f612:	cld    
   14002f613:	(bad)  
   14002f614:	cld    
   14002f615:	cld    
   14002f616:	cld    
   14002f617:	(bad)  
   14002f618:	cld    
   14002f619:	cld    
   14002f61a:	cld    
   14002f61b:	(bad)  
   14002f61c:	cld    
   14002f61d:	cld    
   14002f61e:	cld    
   14002f61f:	(bad)  
   14002f620:	cld    
   14002f621:	cld    
   14002f622:	cld    
   14002f623:	(bad)  
   14002f624:	cld    
   14002f625:	cld    
   14002f626:	cld    
   14002f627:	(bad)  
   14002f628:	cld    
   14002f629:	cld    
   14002f62a:	cld    
   14002f62b:	(bad)  
   14002f62c:	cld    
   14002f62d:	cld    
   14002f62e:	cld    
   14002f62f:	push   rdi
   14002f631:	stc    
   14002f632:	cld    
   14002f633:	call   FWORD PTR [rax-0x76000d3e]
   14002f639:	mov    ecx,0xf6f2fff2
   14002f63e:	sti    
   14002f63f:	(bad)  
   14002f640:	cld    
   14002f641:	cld    
   14002f642:	cld    
   14002f643:	(bad)  
   14002f644:	cld    
   14002f645:	cld    
   14002f646:	cld    
   14002f647:	(bad)  
   14002f648:	cld    
   14002f649:	cld    
   14002f64a:	cld    
   14002f64b:	(bad)  
   14002f64c:	cld    
   14002f64d:	cld    
   14002f64e:	cld    
   14002f64f:	(bad)  
   14002f650:	cld    
   14002f651:	cld    
   14002f652:	cld    
   14002f653:	(bad)  
   14002f654:	cld    
   14002f655:	cld    
   14002f656:	cld    
   14002f657:	(bad)  
   14002f658:	cld    
   14002f659:	cld    
   14002f65a:	cld    
   14002f65b:	(bad)  
   14002f65c:	cld    
   14002f65d:	cld    
   14002f65e:	cld    
   14002f65f:	(bad)  
   14002f660:	cld    
   14002f661:	cld    
   14002f662:	cld    
   14002f663:	(bad)  
   14002f664:	stc    
   14002f665:	stc    
   14002f666:	stc    
   14002f667:	(bad)  
   14002f668:	in     al,dx
   14002f669:	in     al,dx
   14002f66a:	in     al,dx
   14002f66b:	(bad)  
   14002f66c:	mov    edi,0xc1ff95ab
   14002f671:	scas   al,BYTE PTR es:[rdi]
   14002f672:	cwde   
   14002f673:	mov    edi,0xffd4d9de
   14002f678:	clc    
   14002f679:	clc    
   14002f67a:	clc    
   14002f67b:	(bad)  
   14002f67c:	std    
   14002f67d:	std    
   14002f67e:	std    
   14002f67f:	(bad)  
   14002f680:	std    
   14002f681:	std    
   14002f682:	std    
   14002f683:	(bad)  
   14002f684:	std    
   14002f685:	std    
   14002f686:	std    
   14002f687:	(bad)  
   14002f688:	std    
   14002f689:	std    
   14002f68a:	std    
   14002f68b:	(bad)  
   14002f68c:	std    
   14002f68d:	std    
   14002f68e:	std    
   14002f68f:	(bad)  
   14002f690:	std    
   14002f691:	std    
   14002f692:	std    
   14002f693:	(bad)  
   14002f694:	std    
   14002f695:	std    
   14002f696:	std    
   14002f697:	(bad)  
   14002f698:	std    
   14002f699:	std    
   14002f69a:	std    
   14002f69b:	(bad)  
   14002f69c:	std    
   14002f69d:	std    
   14002f69e:	std    
   14002f69f:	(bad)  
   14002f6a0:	std    
   14002f6a1:	std    
   14002f6a2:	std    
   14002f6a3:	(bad)  
   14002f6a4:	std    
   14002f6a5:	std    
   14002f6a6:	std    
   14002f6a7:	(bad)  
   14002f6a8:	std    
   14002f6a9:	std    
   14002f6aa:	std    
   14002f6ab:	(bad)  
   14002f6ac:	std    
   14002f6ad:	std    
   14002f6ae:	std    
   14002f6af:	(bad)  
   14002f6b0:	std    
   14002f6b1:	std    
   14002f6b2:	std    
   14002f6b3:	push   rdx
   14002f6b5:	idiv   ah
   14002f6b7:	jmp    QWORD PTR [rdx+rcx*8-0xb12000b]
   14002f6be:	cld    
   14002f6bf:	(bad)  
   14002f6c0:	std    
   14002f6c1:	std    
   14002f6c2:	std    
   14002f6c3:	(bad)  
   14002f6c4:	std    
   14002f6c5:	std    
   14002f6c6:	std    
   14002f6c7:	(bad)  
   14002f6c8:	std    
   14002f6c9:	std    
   14002f6ca:	std    
   14002f6cb:	(bad)  
   14002f6cc:	std    
   14002f6cd:	std    
   14002f6ce:	std    
   14002f6cf:	(bad)  
   14002f6d0:	std    
   14002f6d1:	std    
   14002f6d2:	std    
   14002f6d3:	(bad)  
   14002f6d4:	std    
   14002f6d5:	std    
   14002f6d6:	std    
   14002f6d7:	(bad)  
   14002f6d8:	std    
   14002f6d9:	std    
   14002f6da:	std    
   14002f6db:	(bad)  
   14002f6dc:	std    
   14002f6dd:	std    
   14002f6de:	std    
   14002f6df:	(bad)  
   14002f6e0:	std    
   14002f6e1:	std    
   14002f6e2:	std    
   14002f6e3:	(bad)  
   14002f6e4:	clc    
   14002f6e5:	clc    
   14002f6e6:	clc    
   14002f6e7:	(bad)  
   14002f6e8:	fcompp 
   14002f6ea:	(bad)  
   14002f6eb:	inc    ecx
   14002f6ed:	scas   al,BYTE PTR es:[rdi]
   14002f6ee:	cwde   
   14002f6ef:	mov    edi,0x7f9ab0c4
   14002f6f4:	ror    al,cl
   14002f6f6:	mov    ebp,0xf3f3f3ff
   14002f6fb:	(bad)  
   14002f6fc:	cld    
   14002f6fd:	cld    
   14002f6fe:	cld    
   14002f6ff:	(bad)  
   14002f700:	(bad)  
   14002f701:	(bad)  
   14002f702:	(bad)  
   14002f703:	(bad)  
   14002f704:	(bad)  
   14002f705:	(bad)  
   14002f706:	(bad)  
   14002f707:	(bad)  
   14002f708:	(bad)  
   14002f709:	(bad)  
   14002f70a:	(bad)  
   14002f70b:	(bad)  
   14002f70c:	(bad)  
   14002f70d:	(bad)  
   14002f70e:	(bad)  
   14002f70f:	(bad)  
   14002f710:	(bad)  
   14002f711:	(bad)  
   14002f712:	(bad)  
   14002f713:	(bad)  
   14002f714:	(bad)  
   14002f715:	(bad)  
   14002f716:	(bad)  
   14002f717:	(bad)  
   14002f718:	(bad)  
   14002f719:	(bad)  
   14002f71a:	(bad)  
   14002f71b:	(bad)  
   14002f71c:	(bad)  
   14002f71d:	(bad)  
   14002f71e:	(bad)  
   14002f71f:	(bad)  
   14002f720:	(bad)  
   14002f721:	(bad)  
   14002f722:	(bad)  
   14002f723:	(bad)  
   14002f724:	(bad)  
   14002f725:	(bad)  
   14002f726:	(bad)  
   14002f727:	(bad)  
   14002f728:	(bad)  
   14002f729:	(bad)  
   14002f72a:	(bad)  
   14002f72b:	(bad)  
   14002f72c:	(bad)  
   14002f72d:	(bad)  
   14002f72e:	(bad)  
   14002f72f:	(bad)  
   14002f730:	(bad)  
   14002f731:	(bad)  
   14002f732:	(bad)  
   14002f733:	(bad)  
   14002f734:	(bad)  
   14002f735:	(bad)  
   14002f736:	(bad)  
   14002f737:	(bad)  
   14002f738:	fucomp st(2)
   14002f73a:	sti    
   14002f73b:	push   rdi
   14002f73d:	cli    
   14002f73e:	std    
   14002f73f:	(bad)  
   14002f740:	(bad)  
   14002f741:	(bad)  
   14002f742:	(bad)  
   14002f743:	(bad)  
   14002f744:	(bad)  
   14002f745:	(bad)  
   14002f746:	(bad)  
   14002f747:	(bad)  
   14002f748:	(bad)  
   14002f749:	(bad)  
   14002f74a:	(bad)  
   14002f74b:	(bad)  
   14002f74c:	(bad)  
   14002f74d:	(bad)  
   14002f74e:	(bad)  
   14002f74f:	(bad)  
   14002f750:	(bad)  
   14002f751:	(bad)  
   14002f752:	(bad)  
   14002f753:	(bad)  
   14002f754:	(bad)  
   14002f755:	(bad)  
   14002f756:	(bad)  
   14002f757:	(bad)  
   14002f758:	(bad)  
   14002f759:	(bad)  
   14002f75a:	(bad)  
   14002f75b:	(bad)  
   14002f75c:	(bad)  
   14002f75d:	(bad)  
   14002f75e:	(bad)  
   14002f75f:	(bad)  
   14002f760:	cld    
   14002f761:	cld    
   14002f762:	cld    
   14002f763:	push   rbx
   14002f765:	repz repz call rdx
   14002f769:	enter  0xffbd,0xc4
   14002f76d:	mov    al,0x9a
   14002f76f:	jg     0x14002f737
   14002f771:	mov    bl,0x9d
   14002f773:	rex retf 
   14002f775:	mov    ebp,0xd7ddffac
   14002f77a:	iret   
   14002f77b:	push   rsp
   14002f77d:	hlt    
   14002f77e:	hlt    
   14002f77f:	(bad)  
   14002f780:	sti    
   14002f781:	sti    
   14002f782:	sti    
   14002f783:	(bad)  
   14002f784:	std    
   14002f785:	std    
   14002f786:	std    
   14002f787:	(bad)  
   14002f788:	(bad)  
   14002f789:	(bad)  
   14002f78a:	(bad)  
   14002f78b:	(bad)  
   14002f78c:	(bad)  
   14002f78d:	(bad)  
   14002f78e:	(bad)  
   14002f78f:	(bad)  
   14002f790:	(bad)  
   14002f791:	(bad)  
   14002f792:	(bad)  
   14002f793:	(bad)  
   14002f794:	(bad)  
   14002f795:	(bad)  
   14002f796:	(bad)  
   14002f797:	(bad)  
   14002f798:	(bad)  
   14002f799:	(bad)  
   14002f79a:	(bad)  
   14002f79b:	(bad)  
   14002f79c:	(bad)  
   14002f79d:	(bad)  
   14002f79e:	(bad)  
   14002f79f:	(bad)  
   14002f7a0:	(bad)  
   14002f7a1:	(bad)  
   14002f7a2:	(bad)  
   14002f7a3:	(bad)  
   14002f7a4:	(bad)  
   14002f7a5:	(bad)  
   14002f7a6:	(bad)  
   14002f7a7:	(bad)  
   14002f7a8:	(bad)  
   14002f7a9:	(bad)  
   14002f7aa:	(bad)  
   14002f7ab:	(bad)  
   14002f7ac:	(bad)  
   14002f7ad:	(bad)  
   14002f7ae:	(bad)  
   14002f7af:	(bad)  
   14002f7b0:	(bad)  
   14002f7b1:	(bad)  
   14002f7b2:	(bad)  
   14002f7b3:	(bad)  
   14002f7b4:	(bad)  
   14002f7b5:	(bad)  
   14002f7b6:	(bad)  
   14002f7b7:	(bad)  
   14002f7b8:	(bad)  
   14002f7b9:	(bad)  
   14002f7ba:	(bad)  
   14002f7bb:	(bad)  
   14002f7bc:	(bad)  
   14002f7bd:	(bad)  
   14002f7be:	(bad)  
   14002f7bf:	(bad)  
   14002f7c0:	(bad)  
   14002f7c1:	(bad)  
   14002f7c2:	(bad)  
   14002f7c3:	(bad)  
   14002f7c4:	(bad)  
   14002f7c5:	(bad)  
   14002f7c6:	(bad)  
   14002f7c7:	(bad)  
   14002f7c8:	(bad)  
   14002f7c9:	(bad)  
   14002f7ca:	(bad)  
   14002f7cb:	(bad)  
   14002f7cc:	(bad)  
   14002f7cd:	(bad)  
   14002f7ce:	(bad)  
   14002f7cf:	(bad)  
   14002f7d0:	(bad)  
   14002f7d1:	(bad)  
   14002f7d2:	(bad)  
   14002f7d3:	(bad)  
   14002f7d4:	(bad)  
   14002f7d5:	(bad)  
   14002f7d6:	(bad)  
   14002f7d7:	(bad)  
   14002f7d8:	std    
   14002f7d9:	std    
   14002f7da:	std    
   14002f7db:	(bad)  
   14002f7dc:	sti    
   14002f7dd:	sti    
   14002f7de:	sti    
   14002f7df:	push   rsp
   14002f7e1:	hlt    
   14002f7e2:	hlt    
   14002f7e3:	(bad)  
   14002f7e4:	fst    st(7)
   14002f7e6:	iret   
   14002f7e7:	dec    ebx
   14002f7e9:	mov    ebp,0xb3c6ffac
   14002f7ee:	popf   
   14002f7ef:	add    BYTE PTR [rax],al
   14002f7f2:	add    BYTE PTR [rax],al
   14002f7f4:	enter  0x9fb5,0x40
   14002f7f8:	int3   
   14002f7f9:	mov    esi,0xcbd5ffae
   14002f7fe:	sar    bh,0xe2
   14002f801:	(bad)  
   14002f803:	push   rdx
   14002f805:	repnz repnz push rbp
   14002f809:	cmc    
   14002f80a:	cmc    
   14002f80b:	push   rdi
   14002f80d:	div    edi
   14002f80f:	push   rdi
   14002f811:	div    edi
   14002f813:	push   rdi
   14002f815:	div    edi
   14002f817:	push   rdi
   14002f819:	div    edi
   14002f81b:	push   rdi
   14002f81d:	div    edi
   14002f81f:	push   rdi
   14002f821:	div    edi
   14002f823:	push   rdi
   14002f825:	div    edi
   14002f827:	push   rdi
   14002f829:	div    edi
   14002f82b:	push   rdi
   14002f82d:	div    edi
   14002f82f:	push   rdi
   14002f831:	div    edi
   14002f833:	push   rdi
   14002f835:	div    edi
   14002f837:	push   rdi
   14002f839:	div    edi
   14002f83b:	push   rdi
   14002f83d:	div    edi
   14002f83f:	push   rdi
   14002f841:	div    edi
   14002f843:	push   rdi
   14002f845:	div    edi
   14002f847:	push   rdi
   14002f849:	div    edi
   14002f84b:	push   rdi
   14002f84d:	div    edi
   14002f84f:	push   rdi
   14002f851:	div    edi
   14002f853:	push   rbp
   14002f855:	cmc    
   14002f856:	cmc    
   14002f857:	push   rdx
   14002f859:	repnz bnd jmp rdx
   14002f85d:	(bad)  
   14002f85f:	call   rbp
   14002f861:	retf   
   14002f862:	sar    bh,0xcc
   14002f865:	mov    esi,0xb5c8ffae
   14002f86a:	lahf   
   14002f86b:	add    BYTE PTR [rax],al
	...
   14002f876:	add    BYTE PTR [rax],al
   14002f878:	leave  
   14002f879:	mov    dh,0xa1
   14002f87b:	rex leave 
   14002f87d:	mov    dh,0xa1
   14002f87f:	jg     0x14002f84a
   14002f881:	mov    dh,0xa1
   14002f883:	mov    edi,0xffa1b6c9
   14002f888:	leave  
   14002f889:	mov    dh,0xa1
   14002f88b:	dec    ecx
   14002f88d:	mov    dh,0xa1
   14002f88f:	dec    ecx
   14002f891:	mov    dh,0xa1
   14002f893:	dec    ecx
   14002f895:	mov    dh,0xa1
   14002f897:	dec    ecx
   14002f899:	mov    dh,0xa1
   14002f89b:	dec    ecx
   14002f89d:	mov    dh,0xa1
   14002f89f:	dec    ecx
   14002f8a1:	mov    dh,0xa1
   14002f8a3:	dec    ecx
   14002f8a5:	mov    dh,0xa1
   14002f8a7:	dec    ecx
   14002f8a9:	mov    dh,0xa1
   14002f8ab:	dec    ecx
   14002f8ad:	mov    dh,0xa1
   14002f8af:	dec    ecx
   14002f8b1:	mov    dh,0xa1
   14002f8b3:	dec    ecx
   14002f8b5:	mov    dh,0xa1
   14002f8b7:	dec    ecx
   14002f8b9:	mov    dh,0xa1
   14002f8bb:	dec    ecx
   14002f8bd:	mov    dh,0xa1
   14002f8bf:	dec    ecx
   14002f8c1:	mov    dh,0xa1
   14002f8c3:	dec    ecx
   14002f8c5:	mov    dh,0xa1
   14002f8c7:	dec    ecx
   14002f8c9:	mov    dh,0xa1
   14002f8cb:	dec    ecx
   14002f8cd:	mov    dh,0xa1
   14002f8cf:	dec    ecx
   14002f8d1:	mov    dh,0xa1
   14002f8d3:	dec    ecx
   14002f8d5:	mov    dh,0xa1
   14002f8d7:	dec    ecx
   14002f8d9:	mov    dh,0xa1
   14002f8db:	dec    ecx
   14002f8dd:	mov    dh,0xa1
   14002f8df:	mov    edi,0x7fa1b6c9
   14002f8e4:	leave  
   14002f8e5:	mov    dh,0xa1
   14002f8e7:	add    BYTE PTR [rax],al
   14002f8ea:	add    BYTE PTR [rax],al
   14002f8ec:	add    BYTE PTR [rax],al
   14002f8ee:	add    BYTE PTR [rax],al
   14002f8f0:	rol    BYTE PTR [rax],0x0
   14002f8f3:	add    eax,DWORD PTR [rax+0x10000]
	...
   14002f965:	add    BYTE PTR [rax],al
   14002f967:	add    BYTE PTR [rax-0x3fff0000],al
   14002f96d:	add    BYTE PTR [rax],al
   14002f96f:	add    ebp,DWORD PTR [rax]
   14002f971:	add    BYTE PTR [rax],al
   14002f973:	add    BYTE PTR [rax],bl
   14002f975:	add    BYTE PTR [rax],al
   14002f977:	add    BYTE PTR [rax],dh
   14002f979:	add    BYTE PTR [rax],al
   14002f97b:	add    BYTE PTR [rcx],al
   14002f97d:	add    BYTE PTR [rax],ah
	...
   14002f9f7:	add    BYTE PTR [rax+0x5a],dh
   14002f9fa:	cmp    bl,BYTE PTR [rdx]
   14002f9fc:	jo     0x14002fa58
   14002f9fe:	cmp    al,BYTE PTR [rax-0x2ac5a590]
   14002fa04:	jo     0x14002fa60
   14002fa06:	cmp    bh,bh
   14002fa08:	jo     0x14002fa64
   14002fa0a:	cmp    bh,bh
   14002fa0c:	jo     0x14002fa68
   14002fa0e:	cmp    bh,bh
   14002fa10:	jo     0x14002fa6c
   14002fa12:	cmp    bh,bh
   14002fa14:	jo     0x14002fa70
   14002fa16:	cmp    bh,bh
   14002fa18:	jo     0x14002fa74
   14002fa1a:	cmp    bh,bh
   14002fa1c:	jo     0x14002fa78
   14002fa1e:	cmp    bh,bh
   14002fa20:	jo     0x14002fa7c
   14002fa22:	cmp    bh,bh
   14002fa24:	jo     0x14002fa80
   14002fa26:	cmp    bh,bh
   14002fa28:	jo     0x14002fa84
   14002fa2a:	cmp    bh,bh
   14002fa2c:	jo     0x14002fa88
   14002fa2e:	cmp    bh,bh
   14002fa30:	jo     0x14002fa8c
   14002fa32:	cmp    bh,bh
   14002fa34:	jo     0x14002fa90
   14002fa36:	cmp    bh,bh
   14002fa38:	jo     0x14002fa94
   14002fa3a:	cmp    bh,bh
   14002fa3c:	jo     0x14002fa98
   14002fa3e:	cmp    bh,bh
   14002fa40:	jo     0x14002fa9c
   14002fa42:	cmp    bh,bh
   14002fa44:	jo     0x14002faa0
   14002fa46:	cmp    bh,bh
   14002fa48:	jo     0x14002faa4
   14002fa4a:	cmp    bh,bh
   14002fa4c:	jo     0x14002faa8
   14002fa4e:	cmp    dl,ch
   14002fa50:	jo     0x14002faac
   14002fa52:	cmp    al,BYTE PTR [rax+0x1a3a5a70]
   14002fa58:	jae    0x14002fab7
   14002fa5a:	adc    BYTE PTR ds:[rdx-0x3b008879],0xc1
   14002fa62:	mov    ebx,0xe6e6e6ff
   14002fa67:	jmp    rdi
   14002fa69:	out    0xe7,eax
   14002fa6b:	jmp    rdi
   14002fa6d:	out    0xe7,eax
   14002fa6f:	jmp    rdi
   14002fa71:	out    0xe7,eax
   14002fa73:	jmp    rdi
   14002fa75:	out    0xe7,eax
   14002fa77:	jmp    rdi
   14002fa79:	out    0xe7,eax
   14002fa7b:	jmp    rdi
   14002fa7d:	out    0xe7,eax
   14002fa7f:	jmp    rdi
   14002fa81:	out    0xe7,eax
   14002fa83:	jmp    rdi
   14002fa85:	out    0xe7,eax
   14002fa87:	jmp    rdi
   14002fa89:	out    0xe7,eax
   14002fa8b:	jmp    rdi
   14002fa8d:	out    0xe7,eax
   14002fa8f:	jmp    rdi
   14002fa91:	out    0xe7,eax
   14002fa93:	jmp    rdi
   14002fa95:	out    0xe7,eax
   14002fa97:	jmp    rdi
   14002fa99:	out    0xe7,eax
   14002fa9b:	jmp    rdi
   14002fa9d:	out    0xe7,eax
   14002fa9f:	jmp    rdi
   14002faa1:	out    0xe7,eax
   14002faa3:	jmp    rdi
   14002faa5:	out    0xe7,eax
   14002faa7:	jmp    rsi
   14002faa9:	out    0xe6,al
   14002faab:	inc    esp
   14002faad:	sar    DWORD PTR [rbx+0x778792ff],0xff
   14002fab4:	jae    0x14002fb13
   14002fab6:	xor    BYTE PTR ds:[rsi+0x60],0x42
   14002fabb:	(bad)  
   14002fabc:	retf   0xc2c7
   14002fabf:	(bad)  
   14002fac0:	(bad)  
   14002fac1:	(bad)  
   14002fac2:	(bad)  
   14002fac3:	(bad)  
   14002fac4:	in     eax,dx
   14002fac5:	in     eax,dx
   14002fac6:	in     eax,dx
   14002fac7:	(bad)  
   14002fac8:	out    dx,eax
   14002fac9:	out    dx,eax
   14002faca:	out    dx,eax
   14002facb:	(bad)  
   14002facc:	out    dx,eax
   14002facd:	out    dx,eax
   14002face:	out    dx,eax
   14002facf:	(bad)  
   14002fad0:	out    dx,eax
   14002fad1:	out    dx,eax
   14002fad2:	out    dx,eax
   14002fad3:	(bad)  
   14002fad4:	out    dx,eax
   14002fad5:	out    dx,eax
   14002fad6:	out    dx,eax
   14002fad7:	(bad)  
   14002fad8:	out    dx,eax
   14002fad9:	out    dx,eax
   14002fada:	out    dx,eax
   14002fadb:	(bad)  
   14002fadc:	out    dx,eax
   14002fadd:	out    dx,eax
   14002fade:	out    dx,eax
   14002fadf:	(bad)  
   14002fae0:	out    dx,eax
   14002fae1:	out    dx,eax
   14002fae2:	out    dx,eax
   14002fae3:	(bad)  
   14002fae4:	out    dx,eax
   14002fae5:	out    dx,eax
   14002fae6:	out    dx,eax
   14002fae7:	(bad)  
   14002fae8:	out    dx,eax
   14002fae9:	out    dx,eax
   14002faea:	out    dx,eax
   14002faeb:	(bad)  
   14002faec:	out    dx,eax
   14002faed:	out    dx,eax
   14002faee:	out    dx,eax
   14002faef:	(bad)  
   14002faf0:	out    dx,eax
   14002faf1:	out    dx,eax
   14002faf2:	out    dx,eax
   14002faf3:	(bad)  
   14002faf4:	out    dx,eax
   14002faf5:	out    dx,eax
   14002faf6:	out    dx,eax
   14002faf7:	(bad)  
   14002faf8:	out    dx,eax
   14002faf9:	out    dx,eax
   14002fafa:	out    dx,eax
   14002fafb:	(bad)  
   14002fafc:	out    dx,eax
   14002fafd:	out    dx,eax
   14002fafe:	out    dx,eax
   14002faff:	(bad)  
   14002fb00:	out    dx,eax
   14002fb01:	out    dx,eax
   14002fb02:	out    dx,eax
   14002fb03:	(bad)  
   14002fb04:	out    dx,eax
   14002fb05:	out    dx,eax
   14002fb06:	out    dx,eax
   14002fb07:	(bad)  
   14002fb08:	in     eax,dx
   14002fb09:	in     eax,dx
   14002fb0a:	in     eax,dx
   14002fb0b:	(bad)  
   14002fb0c:	(bad)  
   14002fb0d:	(bad)  
   14002fb0e:	(bad)  
   14002fb0f:	dec    edx
   14002fb11:	mov    edx,0x426076ff
   14002fb17:	(bad)  
   14002fb18:	jp     0x14002fb7e
   14002fb1a:	rex.RX (bad) 
   14002fb1c:	(bad)  
   14002fb1e:	fdiv   st(7),st
   14002fb20:	jmp    0x12c02e50e
   14002fb25:	jmp    0x14002fb12
   14002fb27:	(bad)  
   14002fb28:	(bad)  
   14002fb29:	(bad)  
   14002fb2a:	(bad)  
   14002fb2b:	jmp    rsi
   14002fb2d:	out    0xe6,al
   14002fb2f:	jmp    rbp
   14002fb31:	in     eax,0xe5
   14002fb33:	jmp    rsp
   14002fb35:	in     al,0xe4
   14002fb37:	jmp    rsp
   14002fb39:	in     al,0xe4
   14002fb3b:	jmp    rsp
   14002fb3d:	in     al,0xe4
   14002fb3f:	jmp    rsp
   14002fb41:	in     al,0xe4
   14002fb43:	jmp    rsp
   14002fb45:	in     al,0xe4
   14002fb47:	jmp    rsp
   14002fb49:	in     al,0xe4
   14002fb4b:	jmp    rsp
   14002fb4d:	in     al,0xe4
   14002fb4f:	jmp    rsp
   14002fb51:	in     al,0xe4
   14002fb53:	jmp    rbp
   14002fb55:	in     eax,0xe5
   14002fb57:	jmp    rsi
   14002fb59:	out    0xe6,al
   14002fb5b:	(bad)  
   14002fb5c:	(bad)  
   14002fb5d:	(bad)  
   14002fb5e:	(bad)  
   14002fb5f:	(bad)  
   14002fb60:	jmp    0x14002fb4d
   14002fb62:	jmp    0x14002fb63
   14002fb64:	jmp    0x14002fb51
   14002fb66:	jmp    0x14002fb67
   14002fb68:	jmp    0x14002fb55
   14002fb6a:	jmp    0x14002fb6b
   14002fb6c:	jmp    0x11d02e55a
   14002fb71:	(bad)  
   14002fb73:	(bad)  
   14002fb74:	jp     0x14002fbda
   14002fb76:	rex.RX (bad) 
   14002fb78:	jge    0x14002fbe2
   14002fb7a:	rex.WX (bad) 
   14002fb7c:	(bad)  
   14002fb7e:	fcos   
   14002fb80:	out    0xe7,eax
   14002fb82:	out    0xff,eax
   14002fb84:	out    0xe6,al
   14002fb86:	out    0xff,al
   14002fb88:	loope  0x14002fb6b
   14002fb8a:	loope  0x14002fb8b
   14002fb8c:	ret    0xa8b6
   14002fb8f:	jmp    FWORD PTR [rax-0x6300866d]
   14002fb95:	and    DWORD PTR [rbx-0x1],0xffffff9a
   14002fb99:	sbb    BYTE PTR [rdi-0x1],0x9a
   14002fb9d:	sbb    BYTE PTR [rdi-0x1],0x9a
   14002fba1:	sbb    BYTE PTR [rdi-0x1],0x9a
   14002fba5:	sbb    BYTE PTR [rdi-0x1],0x9a
   14002fba9:	sbb    BYTE PTR [rdi-0x1],0x9a
   14002fbad:	sbb    BYTE PTR [rdi-0x1],0x9c
   14002fbb1:	and    DWORD PTR [rbx-0x1],0xffffffa8
   14002fbb5:	xchg   ebx,eax
   14002fbb6:	jns    0x14002fbb7
   14002fbb8:	ret    0xa8b6
   14002fbbb:	jmp    rcx
   14002fbbd:	loope  0x14002fba0
   14002fbbf:	jmp    rsi
   14002fbc1:	out    0xe6,al
   14002fbc3:	jmp    rdi
   14002fbc5:	out    0xe7,eax
   14002fbc7:	jmp    rdi
   14002fbc9:	out    0xe7,eax
   14002fbcb:	jmp    rdi
   14002fbcd:	out    0xe7,eax
   14002fbcf:	(bad)  
   14002fbd0:	(bad)  
   14002fbd2:	fcos   
   14002fbd4:	jge    0x14002fc3e
   14002fbd6:	rex.WX inc QWORD PTR [rdx-0x2800b094]
   14002fbdd:	xlat   BYTE PTR ds:[rbx]
   14002fbde:	xlat   BYTE PTR ds:[rbx]
   14002fbdf:	jmp    rbp
   14002fbe1:	in     eax,0xe5
   14002fbe3:	(bad)  
   14002fbe4:	(bad)  
   14002fbe6:	(bad)  
   14002fbe8:	mov    edi,0x9effa5b4
   14002fbed:	xchg   DWORD PTR [rdx-0x1],ebp
   14002fbf0:	lods   eax,DWORD PTR ds:[rsi]
   14002fbf1:	fwait
   14002fbf2:	test   edi,edi
   14002fbf4:	mov    edi,0xd7ffaab6
   14002fbf9:	xlat   BYTE PTR ds:[rbx]
   14002fbfa:	xlat   BYTE PTR ds:[rbx]
   14002fbfb:	call   rdi
   14002fbfd:	xlat   BYTE PTR ds:[rbx]
   14002fbfe:	xlat   BYTE PTR ds:[rbx]
   14002fbff:	call   rdi
   14002fc01:	xlat   BYTE PTR ds:[rbx]
   14002fc02:	xlat   BYTE PTR ds:[rbx]
   14002fc03:	call   rdi
   14002fc05:	xlat   BYTE PTR ds:[rbx]
   14002fc06:	xlat   BYTE PTR ds:[rbx]
   14002fc07:	call   rdi
   14002fc09:	xlat   BYTE PTR ds:[rbx]
   14002fc0a:	xlat   BYTE PTR ds:[rbx]
   14002fc0b:	(bad)  
   14002fc0c:	fcomp  st(0)
   14002fc0e:	fdivr  st,st(7)
   14002fc10:	shl    BYTE PTR [rsi-0x64520056],0x85
   14002fc17:	call   FWORD PTR [rsi-0x40009579]
   14002fc1d:	mov    ah,0xa5
   14002fc1f:	(bad)  
   14002fc20:	(bad)  
   14002fc22:	(bad)  
   14002fc24:	in     eax,0xe5
   14002fc26:	in     eax,0xff
   14002fc28:	in     eax,0xe5
   14002fc2a:	in     eax,0xff
   14002fc2c:	in     eax,0xe5
   14002fc2e:	in     eax,0xff
   14002fc30:	xlat   BYTE PTR ds:[rbx]
   14002fc31:	xlat   BYTE PTR ds:[rbx]
   14002fc32:	xlat   BYTE PTR ds:[rbx]
   14002fc33:	inc    DWORD PTR [rdx-0x7900b094]
   14002fc39:	jno    0x14002fc8f
   14002fc3b:	call   rsi
   14002fc3d:	(bad)  
   14002fc3e:	(bad)  
   14002fc3f:	jmp    rsp
   14002fc41:	in     al,0xe4
   14002fc43:	jmp    rdx
   14002fc45:	loop   0x14002fc29
   14002fc47:	(bad)  
   14002fc48:	(bad)  
   14002fc4a:	fdiv   st(7),st
   14002fc4c:	fcmovu st,st(2)
   14002fc4e:	(bad)  
   14002fc50:	fcomp  st(0)
   14002fc52:	fdivr  st,st(7)
   14002fc54:	xlat   BYTE PTR ds:[rbx]
   14002fc55:	xlat   BYTE PTR ds:[rbx]
   14002fc56:	xlat   BYTE PTR ds:[rbx]
   14002fc57:	jmp    QWORD PTR [rdi-0x6700826c]
   14002fc5d:	and    BYTE PTR [rcx-0x1],0x93
   14002fc61:	jns    0x14002fcbb
   14002fc63:	call   QWORD PTR [rbx-0x6500a787]
   14002fc69:	and    DWORD PTR [rsi-0x1],0xffffffd7
   14002fc6d:	xlat   BYTE PTR ds:[rbx]
   14002fc6e:	xlat   BYTE PTR ds:[rbx]
   14002fc6f:	call   rdi
   14002fc71:	xlat   BYTE PTR ds:[rbx]
   14002fc72:	xlat   BYTE PTR ds:[rbx]
   14002fc73:	call   rdi
   14002fc75:	xlat   BYTE PTR ds:[rbx]
   14002fc76:	xlat   BYTE PTR ds:[rbx]
   14002fc77:	(bad)  
   14002fc78:	(bad)  
   14002fc7a:	fcos   
   14002fc7c:	(bad)  
   14002fc7e:	fdiv   st(7),st
   14002fc80:	loop   0x14002fc64
   14002fc82:	loop   0x14002fc83
   14002fc84:	in     al,0xe4
   14002fc86:	in     al,0xff
   14002fc88:	in     al,0xe4
   14002fc8a:	in     al,0xff
   14002fc8c:	in     al,0xe4
   14002fc8e:	in     al,0xff
   14002fc90:	(bad)  
   14002fc91:	(bad)  
   14002fc92:	(bad)  
   14002fc93:	inc    DWORD PTR [rsi-0x7500ab8f]
   14002fc99:	jne    0x14002fcf4
   14002fc9b:	(bad)  
   14002fc9c:	fcomp  st(0)
   14002fc9e:	fdivr  st,st(7)
   14002fca0:	out    0xe6,al
   14002fca2:	out    0xff,al
   14002fca4:	in     eax,0xe5
   14002fca6:	in     eax,0xff
   14002fca8:	jrcxz  0x14002fc8d
   14002fcaa:	jrcxz  0x14002fcab
   14002fcac:	loope  0x14002fc8f
   14002fcae:	loope  0x14002fcaf
   14002fcb0:	fstp   st(5)
   14002fcb2:	(bad)  
   14002fcb4:	fcmovu st,st(2)
   14002fcb6:	(bad)  
   14002fcb8:	mov    al,0xa2
   14002fcba:	(bad)  
   14002fcbb:	(bad)  
   14002fcbc:	mov    esi,0xd4ffaab6
   14002fcc1:	(bad)  
   14002fcc2:	(bad)  
   14002fcc3:	call   rbp
   14002fcc5:	(bad)  
   14002fcc6:	(bad)  
   14002fcc7:	dec    esp
   14002fcc9:	enter  0xffc3,0xce
   14002fccd:	retf   0xffc5
   14002fcd0:	lods   al,BYTE PTR ds:[rsi]
   14002fcd1:	fwait
   14002fcd2:	test   edi,edi
   14002fcd4:	mov    ebp,0xdcffa4b2
   14002fcd9:	(bad)  
   14002fcdb:	jmp    rax
   14002fcdd:	loopne 0x14002fcbf
   14002fcdf:	jmp    rbp
   14002fce1:	in     eax,0xe5
   14002fce3:	jmp    rsi
   14002fce5:	out    0xe6,al
   14002fce7:	jmp    rsi
   14002fce9:	out    0xe6,al
   14002fceb:	jmp    rsi
   14002fced:	out    0xe6,al
   14002fcef:	(bad)  
   14002fcf0:	fcomp  st(0)
   14002fcf2:	fdivr  st,st(7)
   14002fcf4:	mov    dh,BYTE PTR [rbp+0x59]
   14002fcf7:	dec    DWORD PTR [rdi-0x2500a186]
   14002fcfd:	fcmovu st,st(2)
   14002fcff:	(bad)  
   14002fd00:	call   0x12802e5ed
   14002fd05:	out    0xe7,eax
   14002fd07:	jmp    rdi
   14002fd09:	out    0xe7,eax
   14002fd0b:	jmp    rsi
   14002fd0d:	out    0xe6,al
   14002fd0f:	(bad)  
   14002fd10:	(bad)  
   14002fd12:	(bad)  
   14002fd14:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002fd15:	xchg   ecx,eax
   14002fd16:	js     0x14002fd17
   14002fd18:	fwait
   14002fd19:	test   BYTE PTR [rsi-0x1],ah
   14002fd1c:	xchg   ebx,eax
   14002fd1d:	jns    0x14002fd77
   14002fd1f:	call   FWORD PTR [rax-0x67009e80]
   14002fd25:	and    BYTE PTR [rcx-0x1],0x93
   14002fd29:	jns    0x14002fd83
   14002fd2b:	call   FWORD PTR [rbx-0x2300997c]
   14002fd31:	(bad)  
   14002fd33:	call   QWORD PTR [rsi-0x5200a183]
   14002fd39:	pushf  
   14002fd3a:	xchg   edi,edi
   14002fd3c:	loopne 0x14002fd1e
   14002fd3e:	loopne 0x14002fd3f
   14002fd40:	in     al,0xe4
   14002fd42:	in     al,0xff
   14002fd44:	call   0x12902e631
   14002fd49:	call   0x128ebfd36
   14002fd4e:	call   0x11addd852
   14002fd53:	dec    DWORD PTR [rdi-0x6b00a186]
   14002fd59:	jg     0x14002fdbf
   14002fd5b:	(bad)  
   14002fd5c:	fcmovnu st,st(3)
   14002fd5e:	(bad)  
   14002fd60:	jmp    0x12a02e74e
   14002fd65:	jmp    0x129ecfd53
   14002fd6a:	jmp    0x123e6e16e
   14002fd6f:	jmp    rax
   14002fd71:	loopne 0x14002fd53
   14002fd73:	push   QWORD PTR [rbx-0x3f006d5c]
   14002fd79:	mov    ecx,0xd7d7ffad
   14002fd7e:	xlat   BYTE PTR ds:[rbx]
   14002fd7f:	call   rdi
   14002fd81:	xlat   BYTE PTR ds:[rbx]
   14002fd82:	xlat   BYTE PTR ds:[rbx]
   14002fd83:	(bad)  
   14002fd84:	fcomp  st(0)
   14002fd86:	fdivr  st,st(7)
   14002fd88:	(bad)  
   14002fd8a:	fcos   
   14002fd8c:	ror    ah,1
   14002fd8e:	(bad)  
   14002fd8f:	call   rcx
   14002fd91:	int3   
   14002fd92:	(bad)  
   14002fd93:	(bad)  
   14002fd94:	(bad)  
   14002fd96:	fdiv   st(7),st
   14002fd98:	cwde   
   14002fd99:	jg     0x14002fdfb
   14002fd9b:	jmp    FWORD PTR [rdi-0x1d007762]
   14002fda1:	loop   0x14002fd85
   14002fda3:	(bad)  
   14002fda4:	call   0x12a02e691
   14002fda9:	jmp    0x129ecfd97
   14002fdae:	jmp    0x11bded9b2
   14002fdb3:	call   QWORD PTR [rdi+rdi*2-0x7b66009c]
   14002fdba:	imul   edi,edi,0xffdddddd
   14002fdc0:	in     al,dx
   14002fdc1:	in     al,dx
   14002fdc2:	in     al,dx
   14002fdc3:	(bad)  
   14002fdc4:	in     al,dx
   14002fdc5:	in     al,dx
   14002fdc6:	in     al,dx
   14002fdc7:	(bad)  
   14002fdc8:	jmp    0x14002fdb5
   14002fdca:	jmp    0x14002fdcb
   14002fdcc:	in     eax,0xe5
   14002fdce:	in     eax,0xff
   14002fdd0:	movabs eax,ds:0x97ff5c7c95ff6f8a
   14002fdd9:	jg     0x14002fe3a
   14002fddb:	call   FWORD PTR [rbp-0x6200967a]
   14002fde1:	xchg   BYTE PTR [rcx-0x1],ch
   14002fde4:	popf   
   14002fde5:	xchg   BYTE PTR [rcx-0x1],ch
   14002fde8:	xchg   ebp,eax
   14002fde9:	jl     0x14002fe47
   14002fdeb:	call   FWORD PTR [rbp-0x4700957a]
   14002fdf1:	stos   BYTE PTR es:[rdi],al
   14002fdf2:	cwde   
   14002fdf3:	(bad)  
   14002fdf4:	(bad)  
   14002fdf6:	fdivp  st(7),st
   14002fdf8:	xchg   ebp,eax
   14002fdf9:	jl     0x14002fe57
   14002fdfb:	push   QWORD PTR [rax-0x1b007661]
   14002fe01:	in     al,0xe4
   14002fe03:	(bad)  
   14002fe04:	jmp    0x14002fdf1
   14002fe06:	jmp    0x14002fe07
   14002fe08:	in     al,dx
   14002fe09:	in     al,dx
   14002fe0a:	in     al,dx
   14002fe0b:	(bad)  
   14002fe0c:	in     al,dx
   14002fe0d:	in     al,dx
   14002fe0e:	in     al,dx
   14002fe0f:	(bad)  
   14002fe10:	fstp   st(5)
   14002fe12:	(bad)  
   14002fe14:	cdq    
   14002fe15:	test   BYTE PTR [rcx-0x1],ch
   14002fe18:	popf   
   14002fe19:	mov    DWORD PTR [rdi-0x1],ebp
   14002fe1c:	loopne 0x14002fdfe
   14002fe1e:	loopne 0x14002fe1f
   14002fe20:	out    dx,eax
   14002fe21:	out    dx,eax
   14002fe22:	out    dx,eax
   14002fe23:	(bad)  
   14002fe24:	out    dx,eax
   14002fe25:	out    dx,eax
   14002fe26:	out    dx,eax
   14002fe27:	(bad)  
   14002fe28:	out    dx,al
   14002fe29:	out    dx,al
   14002fe2a:	out    dx,al
   14002fe2b:	jmp    rdi
   14002fe2d:	out    0xe7,eax
   14002fe2f:	jmp    rsp
   14002fe31:	in     al,0xe4
   14002fe33:	(bad)  
   14002fe34:	mov    ebx,0xc1ff9eae
   14002fe39:	mov    eax,0xdfdfffab
   14002fe3e:	(bad)  
   14002fe40:	xchg   esp,eax
   14002fe41:	mov    ecx,0xae80ffe3
   14002fe46:	jrcxz  0x14002fe47
   14002fe48:	ins    DWORD PTR es:[rdi],dx
   14002fe49:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002fe4a:	jrcxz  0x14002fe4b
   14002fe4c:	loop   0x14002fe30
   14002fe4e:	loop   0x14002fe4f
   14002fe50:	jrcxz  0x14002fe35
   14002fe52:	jrcxz  0x14002fe53
   14002fe54:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002fe55:	xchg   ecx,eax
   14002fe56:	ja     0x14002fe57
   14002fe58:	mov    cl,0xa1
   14002fe5a:	mov    edi,?
   14002fe5c:	in     al,0xe4
   14002fe5e:	in     al,0xff
   14002fe60:	jmp    0x12f02e84e
   14002fe65:	out    dx,al
   14002fe66:	out    dx,al
   14002fe67:	(bad)  
   14002fe68:	out    dx,eax
   14002fe69:	out    dx,eax
   14002fe6a:	out    dx,eax
   14002fe6b:	(bad)  
   14002fe6c:	out    dx,eax
   14002fe6d:	out    dx,eax
   14002fe6e:	out    dx,eax
   14002fe6f:	jmp    rax
   14002fe71:	loopne 0x14002fe53
   14002fe73:	call   FWORD PTR [rbp-0x5d009077]
   14002fe79:	mov    ?,WORD PTR [rdi+rdi*8-0x1e]
   14002fe7d:	loop   0x14002fe61
   14002fe7f:	push   rcx
   14002fe81:	icebp  
   14002fe82:	icebp  
   14002fe83:	push   rcx
   14002fe85:	icebp  
   14002fe86:	icebp  
   14002fe87:	push   rax
   14002fe89:	lock lock (bad) 
   14002fe8c:	out    dx,eax
   14002fe8d:	out    dx,eax
   14002fe8e:	out    dx,eax
   14002fe8f:	(bad)  
   14002fe90:	jmp    0x14002fe7d
   14002fe92:	jmp    0x14002fe93
   14002fe94:	out    0xe6,al
   14002fe96:	out    0xff,al
   14002fe98:	in     al,0xe4
   14002fe9a:	in     al,0xff
   14002fe9c:	jb     0x14002fe48
   14002fe9e:	out    0xff,al
   14002fea0:	xor    eax,0x3fffe88a
   14002fea5:	(bad)  
   14002fea6:	out    0xff,eax
   14002fea8:	jae    0x14002fe55
   14002feaa:	out    0xff,eax
   14002feac:	out    0xe6,al
   14002feae:	out    0xff,al
   14002feb0:	call   0x12702e79d
   14002feb5:	out    0xe6,al
   14002feb7:	jmp    rsi
   14002feb9:	out    0xe6,al
   14002febb:	(bad)  
   14002febc:	(bad)  
   14002febd:	(bad)  
   14002febe:	(bad)  
   14002febf:	(bad)  
   14002fec0:	out    dx,al
   14002fec1:	out    dx,al
   14002fec2:	out    dx,al
   14002fec3:	push   rax
   14002fec5:	lock lock push rcx
   14002fec9:	icebp  
   14002feca:	icebp  
   14002fecb:	push   rcx
   14002fecd:	icebp  
   14002fece:	icebp  
   14002fecf:	jmp    rdx
   14002fed1:	loop   0x14002feb5
   14002fed3:	jmp    QWORD PTR [rdx-0x58008b72]
   14002fed9:	xchg   ebx,eax
   14002feda:	jp     0x14002fedb
   14002fedc:	jrcxz  0x14002fec1
   14002fede:	jrcxz  0x14002fedf
   14002fee0:	repz repz repz push rbx
   14002fee5:	repz repz push rbx
   14002fee9:	repz repz push rdx
   14002feed:	repnz repnz push rax
   14002fef1:	lock lock (bad) 
   14002fef4:	out    dx,al
   14002fef5:	out    dx,al
   14002fef6:	out    dx,al
   14002fef7:	jmp    rdi
   14002fef9:	out    0xe7,eax
   14002fefb:	(bad)  
   14002fefc:	cmp    cl,BYTE PTR [rsi-0x548a0018]
   14002ff02:	in     eax,0xff
   14002ff04:	(bad)  
   14002ff05:	jl     0x14002fef0
   14002ff07:	jmp    rbp
   14002ff09:	in     eax,0xe5
   14002ff0b:	(bad)  
   14002ff0c:	call   0x13002e7f9
   14002ff11:	out    dx,eax
   14002ff12:	out    dx,eax
   14002ff13:	(bad)  
   14002ff14:	out    dx,eax
   14002ff15:	out    dx,eax
   14002ff16:	out    dx,eax
   14002ff17:	(bad)  
   14002ff18:	out    dx,eax
   14002ff19:	out    dx,eax
   14002ff1a:	out    dx,eax
   14002ff1b:	push   rax
   14002ff1d:	lock lock push rdx
   14002ff21:	repnz repnz push rbx
   14002ff25:	repz repz push rbx
   14002ff29:	repz repz push rbx
   14002ff2d:	repz repz jmp rbx
   14002ff31:	jrcxz  0x14002ff16
   14002ff33:	jmp    QWORD PTR [rdi-0x5300856d]
   14002ff39:	cwde   
   14002ff3a:	jg     0x14002ff3b
   14002ff3c:	in     eax,0xe5
   14002ff3e:	in     eax,0xff
   14002ff40:	cmc    
   14002ff41:	cmc    
   14002ff42:	cmc    
   14002ff43:	push   rbp
   14002ff45:	cmc    
   14002ff46:	cmc    
   14002ff47:	push   rbp
   14002ff49:	cmc    
   14002ff4a:	cmc    
   14002ff4b:	push   rbp
   14002ff4d:	cmc    
   14002ff4e:	cmc    
   14002ff4f:	push   rbp
   14002ff51:	cmc    
   14002ff52:	cmc    
   14002ff53:	push   rdx
   14002ff55:	repnz repnz (bad) 
   14002ff58:	(bad)  
   14002ff59:	(bad)  
   14002ff5a:	(bad)  
   14002ff5b:	call   FWORD PTR [rip+0x58ffe97f]        # 0x19902e8e0
   14002ff61:	sahf   
   14002ff62:	call   0x127bf9466
   14002ff67:	call   FWORD PTR [rip+0xffffffffebffe97f]        # 0x12c02e8ec
   14002ff6d:	jmp    0x14002ff5a
   14002ff6f:	(bad)  
   14002ff70:	out    dx,al
   14002ff71:	out    dx,al
   14002ff72:	out    dx,al
   14002ff73:	push   rbx
   14002ff75:	repz repz push rsp
   14002ff79:	hlt    
   14002ff7a:	hlt    
   14002ff7b:	push   rsp
   14002ff7d:	hlt    
   14002ff7e:	hlt    
   14002ff7f:	push   rbp
   14002ff81:	cmc    
   14002ff82:	cmc    
   14002ff83:	push   rbp
   14002ff85:	cmc    
   14002ff86:	cmc    
   14002ff87:	push   rbp
   14002ff89:	cmc    
   14002ff8a:	cmc    
   14002ff8b:	push   rbp
   14002ff8d:	cmc    
   14002ff8e:	cmc    
   14002ff8f:	jmp    rbp
   14002ff91:	in     eax,0xe5
   14002ff93:	jmp    FWORD PTR [rax+rbx*4-0x634f0081]
   14002ff9a:	test   bh,bh
   14002ff9c:	out    0xe7,eax
   14002ff9e:	out    0xff,eax
   14002ffa0:	div    edi
   14002ffa2:	idiv   edi
   14002ffa4:	div    edi
   14002ffa6:	idiv   edi
   14002ffa8:	div    edi
   14002ffaa:	idiv   edi
   14002ffac:	div    edi
   14002ffae:	idiv   edi
   14002ffb0:	div    edi
   14002ffb2:	idiv   edi
   14002ffb4:	cmc    
   14002ffb5:	cmc    
   14002ffb6:	cmc    
   14002ffb7:	(bad)  
   14002ffb8:	in     eax,dx
   14002ffb9:	in     eax,dx
   14002ffba:	in     eax,dx
   14002ffbb:	call   FWORD PTR [rcx+0x23ffe9bf]
   14002ffc1:	sub    edx,0xffffffff
   14002ffc4:	out    0xe7,eax
   14002ffc6:	out    0xff,eax
   14002ffc8:	xchg   DWORD PTR [rsi-0x76d00017],esi
   14002ffce:	(bad)  
   14002ffcf:	call   QWORD PTR [rsi-0xd001240]
   14002ffd5:	repnz repnz push rdi
   14002ffd9:	div    edi
   14002ffdb:	push   rdi
   14002ffdd:	div    edi
   14002ffdf:	push   rdi
   14002ffe1:	div    edi
   14002ffe3:	push   rdi
   14002ffe5:	div    edi
   14002ffe7:	push   rdi
   14002ffe9:	div    edi
   14002ffeb:	push   rdi
   14002ffed:	div    edi
   14002ffef:	jmp    rdi
   14002fff1:	out    0xe7,eax
   14002fff3:	push   QWORD PTR [rax-0x4b007b64]
   14002fff9:	movabs eax,ds:0xf9f9ffe9e9e9ff89
   140030002:	stc    
   140030003:	(bad)  
   140030004:	stc    
   140030005:	stc    
   140030006:	stc    
   140030007:	(bad)  
   140030008:	stc    
   140030009:	stc    
   14003000a:	stc    
   14003000b:	(bad)  
   14003000c:	stc    
   14003000d:	stc    
   14003000e:	stc    
   14003000f:	(bad)  
   140030010:	stc    
   140030011:	stc    
   140030012:	stc    
   140030013:	(bad)  
   140030014:	clc    
   140030015:	clc    
   140030016:	clc    
   140030017:	push   rbp
   140030019:	cmc    
   14003001a:	cmc    
   14003001b:	(bad)  
   14003001c:	out    dx,al
   14003001d:	out    dx,al
   14003001e:	out    dx,al
   14003001f:	dec    DWORD PTR [rbp+0x2effebba]
   140030025:	mov    ebx,ebp
   140030027:	(bad)  
   140030028:	jmp    0x140030015
   14003002a:	jmp    0x14003002b
   14003002c:	xchg   DWORD PTR [rdi-0xe0e0014],esi
   140030032:	icebp  
   140030033:	push   rdi
   140030035:	div    edi
   140030037:	(bad)  
   140030038:	stc    
   140030039:	stc    
   14003003a:	stc    
   14003003b:	(bad)  
   14003003c:	stc    
   14003003d:	stc    
   14003003e:	stc    
   14003003f:	(bad)  
   140030040:	stc    
   140030041:	stc    
   140030042:	stc    
   140030043:	(bad)  
   140030044:	stc    
   140030045:	stc    
   140030046:	stc    
   140030047:	(bad)  
   140030048:	stc    
   140030049:	stc    
   14003004a:	stc    
   14003004b:	(bad)  
   14003004c:	stc    
   14003004d:	stc    
   14003004e:	stc    
   14003004f:	(bad)  
   140030050:	jmp    0xf502ea3e
   140030055:	movabs eax,ds:0xebebff8ea5b9ff89
   14003005e:	jmp    0x14003005f
   140030060:	sti    
   140030061:	sti    
   140030062:	sti    
   140030063:	(bad)  
   140030064:	sti    
   140030065:	sti    
   140030066:	sti    
   140030067:	(bad)  
   140030068:	sti    
   140030069:	sti    
   14003006a:	sti    
   14003006b:	(bad)  
   14003006c:	sti    
   14003006d:	sti    
   14003006e:	sti    
   14003006f:	(bad)  
   140030070:	sti    
   140030071:	sti    
   140030072:	sti    
   140030073:	(bad)  
   140030074:	cli    
   140030075:	cli    
   140030076:	cli    
   140030077:	(bad)  
   140030078:	clc    
   140030079:	clc    
   14003007a:	clc    
   14003007b:	push   rsp
   14003007d:	hlt    
   14003007e:	hlt    
   14003007f:	push   rax
   140030081:	lock lock call QWORD PTR [rax+0x3dffedbd]
   140030089:	xchg   ecx,eax
   14003008a:	in     eax,dx
   14003008b:	push   rcx
   14003008d:	icebp  
   14003008e:	icebp  
   14003008f:	push   rbp
   140030091:	cmc    
   140030092:	cmc    
   140030093:	(bad)  
   140030094:	stc    
   140030095:	stc    
   140030096:	stc    
   140030097:	(bad)  
   140030098:	sti    
   140030099:	sti    
   14003009a:	sti    
   14003009b:	(bad)  
   14003009c:	sti    
   14003009d:	sti    
   14003009e:	sti    
   14003009f:	(bad)  
   1400300a0:	sti    
   1400300a1:	sti    
   1400300a2:	sti    
   1400300a3:	(bad)  
   1400300a4:	sti    
   1400300a5:	sti    
   1400300a6:	sti    
   1400300a7:	(bad)  
   1400300a8:	sti    
   1400300a9:	sti    
   1400300aa:	sti    
   1400300ab:	(bad)  
   1400300ac:	sti    
   1400300ad:	sti    
   1400300ae:	sti    
   1400300af:	(bad)  
   1400300b0:	jmp    0x14003009d
   1400300b2:	jmp    0x1400300b3
   1400300b4:	mov    ecx,0xbcff8ea5
   1400300b9:	test   eax,0xececff92
   1400300be:	in     al,dx
   1400300bf:	(bad)  
   1400300c0:	cld    
   1400300c1:	cld    
   1400300c2:	cld    
   1400300c3:	(bad)  
   1400300c4:	cld    
   1400300c5:	cld    
   1400300c6:	cld    
   1400300c7:	(bad)  
   1400300c8:	cld    
   1400300c9:	cld    
   1400300ca:	cld    
   1400300cb:	(bad)  
   1400300cc:	cld    
   1400300cd:	cld    
   1400300ce:	cld    
   1400300cf:	(bad)  
   1400300d0:	cld    
   1400300d1:	cld    
   1400300d2:	cld    
   1400300d3:	(bad)  
   1400300d4:	cld    
   1400300d5:	cld    
   1400300d6:	cld    
   1400300d7:	(bad)  
   1400300d8:	sti    
   1400300d9:	sti    
   1400300da:	sti    
   1400300db:	(bad)  
   1400300dc:	stc    
   1400300dd:	stc    
   1400300de:	stc    
   1400300df:	push   rbp
   1400300e1:	cmc    
   1400300e2:	cmc    
   1400300e3:	inc    esp
   1400300e5:	(bad)  
   1400300e7:	call   QWORD PTR [rax-0xb000f43]
   1400300ed:	hlt    
   1400300ee:	hlt    
   1400300ef:	(bad)  
   1400300f0:	stc    
   1400300f1:	stc    
   1400300f2:	stc    
   1400300f3:	(bad)  
   1400300f4:	sti    
   1400300f5:	sti    
   1400300f6:	sti    
   1400300f7:	(bad)  
   1400300f8:	cld    
   1400300f9:	cld    
   1400300fa:	cld    
   1400300fb:	(bad)  
   1400300fc:	cld    
   1400300fd:	cld    
   1400300fe:	cld    
   1400300ff:	(bad)  
   140030100:	cld    
   140030101:	cld    
   140030102:	cld    
   140030103:	(bad)  
   140030104:	cld    
   140030105:	cld    
   140030106:	cld    
   140030107:	(bad)  
   140030108:	cld    
   140030109:	cld    
   14003010a:	cld    
   14003010b:	(bad)  
   14003010c:	cld    
   14003010d:	cld    
   14003010e:	cld    
   14003010f:	(bad)  
   140030110:	in     al,dx
   140030111:	in     al,dx
   140030112:	in     al,dx
   140030113:	(bad)  
   140030114:	mov    esp,0xc0ff92a9
   140030119:	lods   eax,DWORD PTR ds:[rsi]
   14003011a:	xchg   esi,eax
   14003011b:	(bad)  
   14003011c:	in     eax,dx
   14003011d:	in     eax,dx
   14003011e:	in     eax,dx
   14003011f:	(bad)  
   140030120:	cld    
   140030121:	cld    
   140030122:	cld    
   140030123:	(bad)  
   140030124:	std    
   140030125:	std    
   140030126:	std    
   140030127:	(bad)  
   140030128:	std    
   140030129:	std    
   14003012a:	std    
   14003012b:	(bad)  
   14003012c:	std    
   14003012d:	std    
   14003012e:	std    
   14003012f:	(bad)  
   140030130:	std    
   140030131:	std    
   140030132:	std    
   140030133:	(bad)  
   140030134:	std    
   140030135:	std    
   140030136:	std    
   140030137:	(bad)  
   140030138:	std    
   140030139:	std    
   14003013a:	std    
   14003013b:	(bad)  
   14003013c:	std    
   14003013d:	std    
   14003013e:	std    
   14003013f:	(bad)  
   140030140:	sti    
   140030141:	sti    
   140030142:	sti    
   140030143:	push   rdi
   140030145:	div    edi
   140030147:	push   rsi
   140030149:	div    dh
   14003014b:	(bad)  
   14003014c:	clc    
   14003014d:	clc    
   14003014e:	clc    
   14003014f:	(bad)  
   140030150:	cld    
   140030151:	cld    
   140030152:	cld    
   140030153:	(bad)  
   140030154:	std    
   140030155:	std    
   140030156:	std    
   140030157:	(bad)  
   140030158:	std    
   140030159:	std    
   14003015a:	std    
   14003015b:	(bad)  
   14003015c:	std    
   14003015d:	std    
   14003015e:	std    
   14003015f:	(bad)  
   140030160:	std    
   140030161:	std    
   140030162:	std    
   140030163:	(bad)  
   140030164:	std    
   140030165:	std    
   140030166:	std    
   140030167:	(bad)  
   140030168:	std    
   140030169:	std    
   14003016a:	std    
   14003016b:	(bad)  
   14003016c:	cld    
   14003016d:	cld    
   14003016e:	cld    
   14003016f:	(bad)  
   140030170:	in     eax,dx
   140030171:	in     eax,dx
   140030172:	in     eax,dx
   140030173:	inc    eax
   140030175:	lods   eax,DWORD PTR ds:[rsi]
   140030176:	xchg   esi,eax
   140030177:	inc    ebx
   140030179:	mov    al,0x9a
   14003017b:	(bad)  
   14003017c:	jrcxz  0x14003015e
   14003017e:	fdiv   st(7),st
   140030180:	cli    
   140030181:	cli    
   140030182:	cli    
   140030183:	(bad)  
   140030184:	std    
   140030185:	std    
   140030186:	std    
   140030187:	(bad)  
   140030188:	(bad)  
   140030189:	(bad)  
   14003018a:	(bad)  
   14003018b:	(bad)  
   14003018c:	(bad)  
   14003018d:	(bad)  
   14003018e:	(bad)  
   14003018f:	(bad)  
   140030190:	(bad)  
   140030191:	(bad)  
   140030192:	(bad)  
   140030193:	(bad)  
   140030194:	(bad)  
   140030195:	(bad)  
   140030196:	(bad)  
   140030197:	(bad)  
   140030198:	(bad)  
   140030199:	(bad)  
   14003019a:	(bad)  
   14003019b:	(bad)  
   14003019c:	(bad)  
   14003019d:	(bad)  
   14003019e:	(bad)  
   14003019f:	(bad)  
   1400301a0:	(bad)  
   1400301a1:	(bad)  
   1400301a2:	(bad)  
   1400301a3:	(bad)  
   1400301a4:	std    
   1400301a5:	std    
   1400301a6:	std    
   1400301a7:	(bad)  
   1400301a8:	cld    
   1400301a9:	cld    
   1400301aa:	cld    
   1400301ab:	(bad)  
   1400301ac:	std    
   1400301ad:	std    
   1400301ae:	std    
   1400301af:	(bad)  
   1400301b0:	(bad)  
   1400301b1:	(bad)  
   1400301b2:	(bad)  
   1400301b3:	(bad)  
   1400301b4:	(bad)  
   1400301b5:	(bad)  
   1400301b6:	(bad)  
   1400301b7:	(bad)  
   1400301b8:	(bad)  
   1400301b9:	(bad)  
   1400301ba:	(bad)  
   1400301bb:	(bad)  
   1400301bc:	(bad)  
   1400301bd:	(bad)  
   1400301be:	(bad)  
   1400301bf:	(bad)  
   1400301c0:	(bad)  
   1400301c1:	(bad)  
   1400301c2:	(bad)  
   1400301c3:	(bad)  
   1400301c4:	(bad)  
   1400301c5:	(bad)  
   1400301c6:	(bad)  
   1400301c7:	(bad)  
   1400301c8:	std    
   1400301c9:	std    
   1400301ca:	std    
   1400301cb:	(bad)  
   1400301cc:	cli    
   1400301cd:	cli    
   1400301ce:	cli    
   1400301cf:	jmp    rbx
   1400301d1:	loopne 0x1400301af
   1400301d3:	inc    ebx
   1400301d5:	mov    al,0x9a
   1400301d7:	(bad)  
   1400301d8:	(bad)  
   1400301d9:	mov    bl,0x9e
   1400301db:	adc    dl,0xc9
   1400301de:	mov    esi,0xe8ebedff
   1400301e3:	(bad)  
   1400301e4:	clc    
   1400301e5:	clc    
   1400301e6:	clc    
   1400301e7:	(bad)  
   1400301e8:	cli    
   1400301e9:	cli    
   1400301ea:	cli    
   1400301eb:	(bad)  
   1400301ec:	cli    
   1400301ed:	cli    
   1400301ee:	cli    
   1400301ef:	(bad)  
   1400301f0:	cli    
   1400301f1:	cli    
   1400301f2:	cli    
   1400301f3:	(bad)  
   1400301f4:	cli    
   1400301f5:	cli    
   1400301f6:	cli    
   1400301f7:	(bad)  
   1400301f8:	cli    
   1400301f9:	cli    
   1400301fa:	cli    
   1400301fb:	(bad)  
   1400301fc:	cli    
   1400301fd:	cli    
   1400301fe:	cli    
   1400301ff:	(bad)  
   140030200:	cli    
   140030201:	cli    
   140030202:	cli    
   140030203:	(bad)  
   140030204:	stc    
   140030205:	stc    
   140030206:	stc    
   140030207:	(bad)  
   140030208:	stc    
   140030209:	stc    
   14003020a:	stc    
   14003020b:	(bad)  
   14003020c:	cli    
   14003020d:	cli    
   14003020e:	cli    
   14003020f:	(bad)  
   140030210:	cli    
   140030211:	cli    
   140030212:	cli    
   140030213:	(bad)  
   140030214:	cli    
   140030215:	cli    
   140030216:	cli    
   140030217:	(bad)  
   140030218:	cli    
   140030219:	cli    
   14003021a:	cli    
   14003021b:	(bad)  
   14003021c:	cli    
   14003021d:	cli    
   14003021e:	cli    
   14003021f:	(bad)  
   140030220:	cli    
   140030221:	cli    
   140030222:	cli    
   140030223:	(bad)  
   140030224:	cli    
   140030225:	cli    
   140030226:	cli    
   140030227:	(bad)  
   140030228:	clc    
   140030229:	clc    
   14003022a:	clc    
   14003022b:	(bad)  
   14003022c:	in     eax,dx
   14003022d:	jmp    0x140030217
   14003022f:	call   rdx
   140030231:	leave  
   140030232:	mov    esi,0x9eb3c6ff
   140030237:	or     cl,0xb6
   14003023a:	movabs eax,ds:0xa1b6c980a1b6c91a
   140030243:	(bad)  
   140030244:	leave  
   140030245:	mov    dh,0xa1
   140030247:	dec    ecx
   140030249:	mov    dh,0xa1
   14003024b:	dec    ecx
   14003024d:	mov    dh,0xa1
   14003024f:	dec    ecx
   140030251:	mov    dh,0xa1
   140030253:	dec    ecx
   140030255:	mov    dh,0xa1
   140030257:	dec    ecx
   140030259:	mov    dh,0xa1
   14003025b:	dec    ecx
   14003025d:	mov    dh,0xa1
   14003025f:	dec    ecx
   140030261:	mov    dh,0xa1
   140030263:	dec    ecx
   140030265:	mov    dh,0xa1
   140030267:	dec    ecx
   140030269:	mov    dh,0xa1
   14003026b:	dec    ecx
   14003026d:	mov    dh,0xa1
   14003026f:	dec    ecx
   140030271:	mov    dh,0xa1
   140030273:	dec    ecx
   140030275:	mov    dh,0xa1
   140030277:	dec    ecx
   140030279:	mov    dh,0xa1
   14003027b:	dec    ecx
   14003027d:	mov    dh,0xa1
   14003027f:	dec    ecx
   140030281:	mov    dh,0xa1
   140030283:	dec    ecx
   140030285:	mov    dh,0xa1
   140030287:	dec    ecx
   140030289:	mov    dh,0xa1
   14003028b:	dec    ecx
   14003028d:	mov    dh,0xa1
   14003028f:	(bad)  
   140030290:	leave  
   140030291:	mov    dh,0xa1
   140030293:	or     cl,0xb6
   140030296:	movabs eax,ds:0x6bffffff1a
   14003029f:	add    BYTE PTR [rax],al
   1400302a1:	add    BYTE PTR [rax],al
   1400302a3:	adc    BYTE PTR [rax],al
	...
   1400302f5:	add    BYTE PTR [rax],al
   1400302f7:	(bad)  
   1400302f8:	sub    BYTE PTR [rax],al
   1400302fa:	add    BYTE PTR [rax],al
   1400302fc:	adc    BYTE PTR [rax],al
   1400302fe:	add    BYTE PTR [rax],al
   140030300:	and    BYTE PTR [rax],al
   140030302:	add    BYTE PTR [rax],al
   140030304:	add    DWORD PTR [rax],eax
   140030306:	and    BYTE PTR [rax],al
	...
   140030320:	jb     0x14003037e
   140030322:	cmp    eax,0x3d5c7268
   140030327:	int3   
   140030328:	jb     0x140030386
   14003032a:	cmp    eax,0x3d5c72ff
   14003032f:	push   QWORD PTR [rdx+0x5c]
   140030332:	cmp    eax,0x3d5c72ff
   140030337:	push   QWORD PTR [rdx+0x5c]
   14003033a:	cmp    eax,0x3d5c72ff
   14003033f:	push   QWORD PTR [rdx+0x5c]
   140030342:	cmp    eax,0x3d5c72ff
   140030347:	push   QWORD PTR [rdx+0x5c]
   14003034a:	cmp    eax,0x3d5c72ff
   14003034f:	push   QWORD PTR [rdx+0x5c]
   140030352:	cmp    eax,0x3d5c72ff
   140030357:	push   QWORD PTR [rdx+0x5c]
   14003035a:	cmp    eax,0x3d5c72cc
   14003035f:	push   0xffffffffe1426177
   140030364:	mov    ch,0xb0
   140030366:	stos   BYTE PTR es:[rdi],al
   140030367:	(bad)  
   140030368:	call   0x12802ec55
   14003036d:	out    0xe7,eax
   14003036f:	jmp    rdi
   140030371:	out    0xe7,eax
   140030373:	jmp    rdi
   140030375:	out    0xe7,eax
   140030377:	jmp    rdi
   140030379:	out    0xe7,eax
   14003037b:	jmp    rdi
   14003037d:	out    0xe7,eax
   14003037f:	jmp    rdi
   140030381:	out    0xe7,eax
   140030383:	jmp    rdi
   140030385:	out    0xe7,eax
   140030387:	jmp    rdi
   140030389:	out    0xe7,eax
   14003038b:	jmp    rdi
   14003038d:	out    0xe7,eax
   14003038f:	jmp    rdi
   140030391:	out    0xe7,eax
   140030393:	(bad)  
   140030394:	(bad)  
   140030395:	(bad)  
   140030396:	(bad)  
   140030397:	push   QWORD PTR [rbp+0x77ffaab0]
   14003039d:	(bad)  
   14003039e:	rex.X loope 0x14003041d
   1400303a1:	data16 rex.W (bad) 
   1400303a4:	(bad)  
   1400303a6:	(bad)  
   1400303a8:	call   0x10802ec95
   1400303ad:	mov    ebx,0xa0b4ffab
   1400303b2:	xchg   edi,edi
   1400303b4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400303b5:	lea    ebp,[rsi-0x1]
   1400303b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400303b9:	lea    ebp,[rsi-0x1]
   1400303bc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400303bd:	lea    ebp,[rsi-0x1]
   1400303c0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400303c1:	lea    ebp,[rsi-0x1]
   1400303c4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400303c5:	lea    ebp,[rsi-0x1]
   1400303c8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400303c9:	lea    ebp,[rsi-0x1]
   1400303cc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400303cd:	lea    ebp,[rsi-0x1]
   1400303d0:	(bad)  
   1400303d1:	(bad)  
   1400303d2:	(bad)  
   1400303d3:	(bad)  
   1400303d4:	in     al,dx
   1400303d5:	in     al,dx
   1400303d6:	in     al,dx
   1400303d7:	(bad)  
   1400303d8:	(bad)  
   1400303da:	(bad)  
   1400303dc:	jl     0x140030444
   1400303de:	inc    QWORD PTR [rcx-0x2400b094]
   1400303e5:	fcmovnu st,st(3)
   1400303e7:	jmp    rdi
   1400303e9:	out    0xe7,eax
   1400303eb:	(bad)  
   1400303ec:	(bad)  
   1400303ee:	(bad)  
   1400303f0:	(bad)  
   1400303f2:	fdiv   st(7),st
   1400303f4:	(bad)  
   1400303f6:	fcos   
   1400303f8:	(bad)  
   1400303fa:	fcos   
   1400303fc:	(bad)  
   1400303fe:	fcos   
   140030400:	(bad)  
   140030402:	fcos   
   140030404:	(bad)  
   140030406:	fcos   
   140030408:	(bad)  
   14003040a:	fcos   
   14003040c:	(bad)  
   14003040e:	fcos   
   140030410:	in     eax,0xe5
   140030412:	in     eax,0xff
   140030414:	out    0xe7,eax
   140030416:	out    0xff,eax
   140030418:	fcmovnu st,st(3)
   14003041a:	(bad)  
   14003041c:	sub    DWORD PTR [rdi+rcx*2-0x1],0xff567287
   140030424:	(bad)  
   140030425:	(bad)  
   140030426:	(bad)  
   140030427:	jmp    rsp
   140030429:	in     al,0xe4
   14003042b:	jmp    rsp
   14003042d:	in     al,0xe4
   14003042f:	jmp    rax
   140030431:	loopne 0x140030413
   140030433:	call   FWORD PTR [rbx-0x6c00987c]
   140030439:	jns    0x140030493
   14003043b:	call   QWORD PTR [rbx-0x6c00a687]
   140030441:	jns    0x14003049b
   140030443:	call   FWORD PTR [rbx-0x1f00987c]
   140030449:	loopne 0x14003042b
   14003044b:	call   QWORD PTR [rsi-0x5100a183]
   140030451:	popf   
   140030452:	xchg   edi,edi
   140030454:	loopne 0x140030436
   140030456:	loopne 0x140030457
   140030458:	(bad)  
   140030459:	(bad)  
   14003045a:	(bad)  
   14003045b:	inc    DWORD PTR [rdi-0x7100a98e]
   140030461:	jns    0x1400304c0
   140030463:	(bad)  
   140030464:	(bad)  
   140030466:	fcos   
   140030468:	out    0xe7,eax
   14003046a:	out    0xff,eax
   14003046c:	jrcxz  0x140030451
   14003046e:	jrcxz  0x14003046f
   140030470:	jrcxz  0x140030455
   140030472:	jrcxz  0x140030473
   140030474:	retf   0xb7c2
   140030477:	dec    ecx
   140030479:	ret    0xffb6
   14003047c:	leave  
   14003047d:	ret    0xffb6
   140030480:	(bad)  
   140030481:	mov    ebp,0xbdc7ffb0
   140030486:	mov    al,0xff
   140030488:	fstp   st(3)
   14003048a:	fdivr  st,st(7)
   14003048c:	fcomp  st(0)
   14003048e:	fdivr  st,st(7)
   140030490:	xchg   edi,eax
   140030491:	jle    0x1400304f2
   140030493:	jmp    FWORD PTR [rdi-0x2a007662]
   140030499:	(bad)  
   14003049a:	(bad)  
   14003049b:	dec    DWORD PTR [rsi-0x6b00a287]
   1400304a1:	and    BYTE PTR [rdi+rdi*8-0x24],0xdc
   1400304a6:	fdiv   st(7),st
   1400304a8:	(bad)  
   1400304a9:	(bad)  
   1400304aa:	(bad)  
   1400304ab:	jmp    rsi
   1400304ad:	out    0xe6,al
   1400304af:	call   QWORD PTR [rdx+rdi*2+0x7d97ff59]
   1400304b6:	pop    rbp
   1400304b7:	call   FWORD PTR [rbp-0x6a00977a]
   1400304bd:	jnp    0x14003051a
   1400304bf:	call   QWORD PTR [rdx+rdi*2-0x796200a7]
   1400304c6:	push   0xffffffff9bacbaff
   1400304cb:	jmp    rsi
   1400304cd:	out    0xe6,al
   1400304cf:	call   QWORD PTR [rdx+rdi*2-0x615000a7]
   1400304d6:	mov    bh,bh
   1400304d8:	fcomp  st(0)
   1400304da:	fdivr  st,st(7)
   1400304dc:	xchg   esp,eax
   1400304dd:	and    BYTE PTR [rdi+rdi*8-0x65],0x87
   1400304e2:	ins    BYTE PTR es:[rdi],dx
   1400304e3:	(bad)  
   1400304e4:	(bad)  
   1400304e6:	fdivp  st(7),st
   1400304e8:	in     eax,dx
   1400304e9:	in     eax,dx
   1400304ea:	in     eax,dx
   1400304eb:	(bad)  
   1400304ec:	jmp    0x11e02eeda
   1400304f1:	fstp   st(5)
   1400304f3:	(bad)  
   1400304f4:	fstp   st(5)
   1400304f6:	(bad)  
   1400304f8:	(bad)  
   1400304fa:	fdivp  st(7),st
   1400304fc:	and    al,0x82
   1400304fe:	in     al,0xff
   140030500:	xor    BYTE PTR [rax-0x21210020],0xde
   140030507:	jmp    rbx
   140030509:	jrcxz  0x1400304ee
   14003050b:	jmp    QWORD PTR [rbp-0x51008970]
   140030511:	sahf   
   140030512:	mov    edi,edi
   140030514:	loop   0x1400304f8
   140030516:	loop   0x140030517
   140030518:	(bad)  
   14003051a:	fdiv   st(7),st
   14003051c:	fwait
   14003051d:	xchg   DWORD PTR [rdi+rdi*8-0x5e],ebp
   140030521:	lea    esi,[rdi+rdi*8-0x1f]
   140030525:	loope  0x140030508
   140030527:	push   rax
   140030529:	lock lock push rax
   14003052d:	lock lock push rax
   140030531:	lock lock (bad) 
   140030534:	in     al,dx
   140030535:	in     al,dx
   140030536:	in     al,dx
   140030537:	push   QWORD PTR [rbx]
   140030539:	mov    ch,cl
   14003053b:	jmp    rcx
   14003053d:	loope  0x140030520
   14003053f:	dec    DWORD PTR [rsi*2-0x13130018]
   140030546:	in     al,dx
   140030547:	(bad)  
   140030548:	in     al,dx
   140030549:	in     al,dx
   14003054a:	in     al,dx
   14003054b:	jmp    rbx
   14003054d:	jrcxz  0x140030532
   14003054f:	jmp    rsi
   140030551:	out    0xe6,al
   140030553:	(bad)  
   140030554:	out    dx,al
   140030555:	out    dx,al
   140030556:	out    dx,al
   140030557:	jmp    rcx
   140030559:	loope  0x14003053c
   14003055b:	jmp    QWORD PTR [rdx-0x57008b73]
   140030561:	xchg   esp,eax
   140030562:	jnp    0x140030563
   140030564:	in     al,0xe4
   140030566:	in     al,0xff
   140030568:	repz repz repz push rbx
   14003056d:	repz repz push rbx
   140030571:	repz repz push rax
   140030575:	lock lock call QWORD PTR [rbx]
   140030579:	jp     0x140030564
   14003057b:	push   rax
   14003057d:	lock lock call QWORD PTR [rbx]
   140030581:	jp     0x14003056c
   140030583:	call   QWORD PTR [rbx]
   140030585:	jp     0x140030570
   140030587:	push   rax
   140030589:	lock lock push rax
   14003058d:	lock lock push rbx
   140030591:	repz repz push rbx
   140030595:	repz repz jmp rsp
   140030599:	in     al,0xe4
   14003059b:	jmp    FWORD PTR [rax-0x5000846c]
   1400305a1:	fwait
   1400305a2:	(bad)  
   1400305a3:	jmp    rdi
   1400305a5:	out    0xe7,eax
   1400305a7:	push   rsi
   1400305a9:	div    dh
   1400305ab:	push   rsi
   1400305ad:	div    dh
   1400305af:	push   rsi
   1400305b1:	div    dh
   1400305b3:	push   rbx
   1400305b5:	repz repz call QWORD PTR [rbp+rdi*4+0x7e1affe8]
   1400305be:	jmp    0x127eaedc2
   1400305c3:	inc    DWORD PTR [rdx+0x26ffe8b4]
   1400305c9:	test   dl,ch
   1400305cb:	push   rbx
   1400305cd:	repz repz push rsi
   1400305d1:	div    dh
   1400305d3:	push   rsi
   1400305d5:	div    dh
   1400305d7:	jmp    rdi
   1400305d9:	out    0xe7,eax
   1400305db:	jmp    FWORD PTR [rdi-0x4a007d65]
   1400305e1:	movabs eax,ds:0xf9f9ffe9e9e9ff89
   1400305ea:	stc    
   1400305eb:	(bad)  
   1400305ec:	stc    
   1400305ed:	stc    
   1400305ee:	stc    
   1400305ef:	(bad)  
   1400305f0:	stc    
   1400305f1:	stc    
   1400305f2:	stc    
   1400305f3:	(bad)  
   1400305f4:	stc    
   1400305f5:	stc    
   1400305f6:	stc    
   1400305f7:	push   rax
   1400305f9:	lock lock dec DWORD PTR [rcx+0x26ffeab8]
   140030601:	test   ebx,ebp
   140030603:	(bad)  
   140030604:	out    dx,eax
   140030605:	out    dx,eax
   140030606:	out    dx,eax
   140030607:	(bad)  
   140030608:	mov    edx,0xf5ffebd1
   14003060d:	cmc    
   14003060e:	cmc    
   14003060f:	(bad)  
   140030610:	stc    
   140030611:	stc    
   140030612:	stc    
   140030613:	(bad)  
   140030614:	stc    
   140030615:	stc    
   140030616:	stc    
   140030617:	(bad)  
   140030618:	jmp    0xf602f006
   14003061d:	movabs eax,ds:0xececff90a7baff89
   140030626:	in     al,dx
   140030627:	(bad)  
   140030628:	sti    
   140030629:	sti    
   14003062a:	sti    
   14003062b:	(bad)  
   14003062c:	sti    
   14003062d:	sti    
   14003062e:	sti    
   14003062f:	(bad)  
   140030630:	sti    
   140030631:	sti    
   140030632:	sti    
   140030633:	(bad)  
   140030634:	sti    
   140030635:	sti    
   140030636:	sti    
   140030637:	(bad)  
   140030638:	cli    
   140030639:	cli    
   14003063a:	cli    
   14003063b:	push   rbx
   14003063d:	repz repz dec DWORD PTR [rbx+rdi*4-0x71c70013]
   140030646:	in     al,dx
   140030647:	push   rbp
   140030649:	cmc    
   14003064a:	cmc    
   14003064b:	(bad)  
   14003064c:	sti    
   14003064d:	sti    
   14003064e:	sti    
   14003064f:	(bad)  
   140030650:	sti    
   140030651:	sti    
   140030652:	sti    
   140030653:	(bad)  
   140030654:	sti    
   140030655:	sti    
   140030656:	sti    
   140030657:	(bad)  
   140030658:	in     al,dx
   140030659:	in     al,dx
   14003065a:	in     al,dx
   14003065b:	(bad)  
   14003065c:	mov    edx,0xbfff90a7
   140030661:	lods   al,BYTE PTR ds:[rsi]
   140030662:	xchg   esi,eax
   140030663:	(bad)  
   140030664:	in     eax,dx
   140030665:	in     eax,dx
   140030666:	in     eax,dx
   140030667:	(bad)  
   140030668:	cld    
   140030669:	cld    
   14003066a:	cld    
   14003066b:	(bad)  
   14003066c:	std    
   14003066d:	std    
   14003066e:	std    
   14003066f:	(bad)  
   140030670:	std    
   140030671:	std    
   140030672:	std    
   140030673:	(bad)  
   140030674:	std    
   140030675:	std    
   140030676:	std    
   140030677:	(bad)  
   140030678:	std    
   140030679:	std    
   14003067a:	std    
   14003067b:	(bad)  
   14003067c:	cld    
   14003067d:	cld    
   14003067e:	cld    
   14003067f:	push   rsp
   140030681:	hlt    
   140030682:	hlt    
   140030683:	inc    esp
   140030685:	f2xm1  
   140030687:	(bad)  
   140030688:	cli    
   140030689:	cli    
   14003068a:	cli    
   14003068b:	(bad)  
   14003068c:	std    
   14003068d:	std    
   14003068e:	std    
   14003068f:	(bad)  
   140030690:	std    
   140030691:	std    
   140030692:	std    
   140030693:	(bad)  
   140030694:	cld    
   140030695:	cld    
   140030696:	cld    
   140030697:	(bad)  
   140030698:	in     eax,dx
   140030699:	in     eax,dx
   14003069a:	in     eax,dx
   14003069b:	(bad)  
   14003069c:	mov    edi,0xc4ff96ac
   1400306a1:	mov    cl,0x9b
   1400306a3:	int3   
   1400306a4:	(bad)  
   1400306a6:	(bad)  
   1400306a7:	push   rbp
   1400306a9:	cmc    
   1400306aa:	cmc    
   1400306ab:	push   rdi
   1400306ad:	div    edi
   1400306af:	push   rdi
   1400306b1:	div    edi
   1400306b3:	push   rdi
   1400306b5:	div    edi
   1400306b7:	push   rdi
   1400306b9:	div    edi
   1400306bb:	push   rdi
   1400306bd:	div    edi
   1400306bf:	push   rdi
   1400306c1:	div    edi
   1400306c3:	push   rsp
   1400306c5:	hlt    
   1400306c6:	hlt    
   1400306c7:	push   rdi
   1400306c9:	div    edi
   1400306cb:	push   rdi
   1400306cd:	div    edi
   1400306cf:	push   rdi
   1400306d1:	div    edi
   1400306d3:	push   rbp
   1400306d5:	cmc    
   1400306d6:	cmc    
   1400306d7:	(bad)  
   1400306d8:	(bad)  
   1400306da:	(bad)  
   1400306db:	inc    esp
   1400306dd:	mov    cl,0x9b
   1400306df:	int3   
   1400306e0:	enter  0x9fb5,0x68
   1400306e4:	enter  0x9fb5,0xcc
   1400306e8:	enter  0x9fb5,0xff
   1400306ec:	enter  0x9fb5,0xff
   1400306f0:	enter  0x9fb5,0xff
   1400306f4:	enter  0x9fb5,0xff
   1400306f8:	enter  0x9fb5,0xff
   1400306fc:	enter  0x9fb5,0xff
   140030700:	enter  0x9fb5,0xff
   140030704:	enter  0x9fb5,0xff
   140030708:	enter  0x9fb5,0xff
   14003070c:	enter  0x9fb5,0xff
   140030710:	enter  0x9fb5,0xff
   140030714:	enter  0x9fb5,0xff
   140030718:	enter  0x9fb5,0xcc
   14003071c:	enter  0x9fb5,0x68
   140030720:	add    BYTE PTR [rax],al
   140030722:	(bad)  
   140030723:	jnp    0x140030725
   140030725:	add    BYTE PTR [rax],al
   140030727:	add    BYTE PTR [rax],al
   140030729:	add    BYTE PTR [rdx],ch
	...
   14003075f:	add    al,0x0
   140030761:	add    BYTE PTR [rcx],al
   140030763:	add    BYTE PTR [rax+rax*1],cl
   140030766:	xor    BYTE PTR [rax],dh
   140030768:	adc    BYTE PTR [rax],al
   14003076a:	add    DWORD PTR [rax],eax
   14003076c:	add    al,0x0
   14003076e:	push   0x1000006
   140030773:	add    BYTE PTR [rax],ah
   140030775:	and    BYTE PTR [rax],dl
   140030777:	add    BYTE PTR [rcx],al
   140030779:	add    BYTE PTR [rax+rax*1],al
   14003077c:	call   0x142030783
   140030781:	add    BYTE PTR [rax],bl
   140030783:	sbb    BYTE PTR [rax],dl
   140030785:	add    BYTE PTR [rcx],al
   140030787:	add    BYTE PTR [rax+rax*1],al
   14003078a:	call   0x143030790
   14003078f:	add    BYTE PTR [rax],dl
   140030791:	adc    BYTE PTR [rax],dl
   140030793:	add    BYTE PTR [rcx],al
   140030795:	add    BYTE PTR [rax+rax*1],al
   140030798:	sub    BYTE PTR [rcx],al
   14003079a:	add    BYTE PTR [rax],al
   14003079c:	add    al,0x0
   14003079e:	xor    BYTE PTR [rax],dh
   1400307a0:	add    BYTE PTR [rax],al
   1400307a2:	add    DWORD PTR [rax],eax
   1400307a4:	or     BYTE PTR [rax],al
   1400307a6:	test   al,0xe
   1400307a8:	add    BYTE PTR [rax],al
   1400307aa:	add    eax,0x202000
   1400307af:	add    BYTE PTR [rcx],al
   1400307b1:	add    BYTE PTR [rax],cl
   1400307b3:	add    BYTE PTR [rax+0x6000008],ch
   1400307b9:	add    BYTE PTR [rax],bl
   1400307bb:	sbb    BYTE PTR [rax],al
   1400307bd:	add    BYTE PTR [rcx],al
   1400307bf:	add    BYTE PTR [rax],cl
   1400307c1:	add    al,cl
   1400307c3:	(bad)  
   1400307c4:	add    BYTE PTR [rax],al
   1400307c6:	(bad)  
   1400307c7:	add    BYTE PTR [rax],dl
   1400307c9:	adc    BYTE PTR [rax],al
   1400307cb:	add    BYTE PTR [rcx],al
   1400307cd:	add    BYTE PTR [rax],cl
   1400307cf:	add    BYTE PTR [rax+0x5],ch
   1400307d2:	add    BYTE PTR [rax],al
   1400307d4:	or     BYTE PTR [rax],al
   1400307d6:	xor    BYTE PTR [rax],dh
   1400307d8:	add    BYTE PTR [rax],al
   1400307da:	add    DWORD PTR [rax],eax
   1400307dc:	and    BYTE PTR [rax],al
   1400307de:	test   al,0x25
   1400307e0:	add    BYTE PTR [rax],al
   1400307e2:	or     DWORD PTR [rax],eax
   1400307e4:	and    BYTE PTR [rax],ah
   1400307e6:	add    BYTE PTR [rax],al
   1400307e8:	add    DWORD PTR [rax],eax
   1400307ea:	and    BYTE PTR [rax],al
   1400307ec:	test   al,0x10
   1400307ee:	add    BYTE PTR [rax],al
   1400307f0:	or     al,BYTE PTR [rax]
   1400307f2:	sbb    BYTE PTR [rax],bl
   1400307f4:	add    BYTE PTR [rax],al
   1400307f6:	add    DWORD PTR [rax],eax
   1400307f8:	and    BYTE PTR [rax],al
   1400307fa:	mov    BYTE PTR [rcx],cl
   1400307fc:	add    BYTE PTR [rax],al
   1400307fe:	or     eax,DWORD PTR [rax]
   140030800:	adc    BYTE PTR [rax],dl
   140030802:	add    BYTE PTR [rax],al
   140030804:	add    DWORD PTR [rax],eax
   140030806:	and    BYTE PTR [rax],al
   140030808:	push   0xc000004
   14003080d:	add    BYTE PTR [rax+0x41],dl
   140030810:	cmp    al,0x3
   140030812:	xor    al,0x0
   140030814:	add    BYTE PTR [rax],al
   140030816:	push   rsi
   140030817:	add    BYTE PTR [rbx+0x0],dl
   14003081a:	pop    rdi
   14003081b:	add    BYTE PTR [rsi+0x0],dl
   14003081e:	add    BYTE PTR [r10+0x0],r10b
   140030822:	push   rbx
   140030823:	add    BYTE PTR [rcx+0x0],cl
   140030826:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14003082a:	pop    rdi
   14003082b:	add    BYTE PTR [rcx+0x0],cl
   14003082e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   140030832:	rex.WRXB add BYTE PTR [r8],r8b
   140030835:	add    BYTE PTR [rax],al
   140030837:	add    BYTE PTR [rbp+0xfeef04],bh
   14003083d:	add    BYTE PTR [rcx],al
   14003083f:	add    BYTE PTR [rax],al
   140030841:	add    BYTE PTR [rdi],al
   140030843:	add    BYTE PTR [rbx],dl
   140030845:	add    BYTE PTR [rax+0x2],bl
   140030848:	add    BYTE PTR [rax],al
   14003084a:	(bad)  
   14003084b:	add    BYTE PTR [rbx],dl
   14003084d:	add    BYTE PTR [rax+0x2],bl
   140030850:	(bad)  
   140030851:	add    BYTE PTR [rax],al
   140030853:	add    BYTE PTR [rax],al
   140030855:	add    BYTE PTR [rax],al
   140030857:	add    BYTE PTR [rax+rax*1],al
   14003085a:	add    BYTE PTR [rax],al
   14003085c:	add    DWORD PTR [rax],eax
	...
   14003086a:	add    BYTE PTR [rax],al
   14003086c:	(bad)  
   14003086d:	add    al,BYTE PTR [rax]
   14003086f:	add    BYTE PTR [rcx],al
   140030871:	add    BYTE PTR [rbx+0x0],dl
   140030874:	je     0x140030876
   140030876:	jb     0x140030878
   140030878:	imul   eax,DWORD PTR [rax],0x67006e
   14003087e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140030882:	ins    BYTE PTR es:[rdi],dx
   140030883:	add    BYTE PTR [rbp+0x0],ah
   140030886:	rex.WB add BYTE PTR [r14+0x0],bpl
   14003088a:	data16 add BYTE PTR [rdi+0x0],ch
   14003088e:	add    BYTE PTR [rax],al
   140030890:	jbe    0x140030894
   140030892:	add    BYTE PTR [rax],al
   140030894:	add    DWORD PTR [rax],eax
   140030896:	xor    BYTE PTR [rax],al
   140030898:	xor    BYTE PTR [rax],al
   14003089a:	xor    BYTE PTR [rax],al
   14003089c:	xor    BYTE PTR [rax],al
   14003089e:	xor    BYTE PTR [rax],al
   1400308a0:	xor    al,0x0
   1400308a2:	(bad)  
   1400308a3:	add    BYTE PTR [rax],dh
   1400308a5:	add    BYTE PTR [rax],al
   1400308a7:	add    BYTE PTR [rsi+0x0],al
   1400308aa:	adc    eax,DWORD PTR [rax]
   1400308ac:	add    DWORD PTR [rax],eax
   1400308ae:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400308b2:	ins    DWORD PTR es:[rdi],dx
   1400308b3:	add    BYTE PTR [rax+0x0],dh
   1400308b6:	(bad)  
   1400308b7:	add    BYTE PTR [rsi+0x0],ch
   1400308ba:	jns    0x1400308bc
   1400308bc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400308c0:	ins    DWORD PTR es:[rdi],dx
   1400308c1:	add    BYTE PTR [rbp+0x0],ah
   1400308c4:	add    BYTE PTR [rax],al
   1400308c6:	add    BYTE PTR [rax],al
   1400308c8:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   1400308cc:	(bad)  
   1400308cd:	add    BYTE PTR [rbx+0x0],ah
   1400308d0:	ins    BYTE PTR es:[rdi],dx
   1400308d1:	add    BYTE PTR [rbp+0x0],ah
   1400308d4:	and    BYTE PTR [rax],al
   1400308d6:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400308da:	jb     0x1400308dc
   1400308dc:	jo     0x1400308de
   1400308de:	outs   dx,DWORD PTR ds:[rsi]
   1400308df:	add    BYTE PTR [rdx+0x0],dh
   1400308e2:	(bad)  
   1400308e3:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400308e7:	add    BYTE PTR [rdi+0x0],ch
   1400308ea:	outs   dx,BYTE PTR ds:[rsi]
   1400308eb:	add    BYTE PTR [rax],al
   1400308ed:	add    BYTE PTR [rax],al
   1400308ef:	add    BYTE PTR [rax+0x0],ah
   1400308f2:	sbb    al,0x0
   1400308f4:	add    DWORD PTR [rax],eax
   1400308f6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400308fa:	ins    BYTE PTR es:[rdi],dx
   1400308fb:	add    BYTE PTR [rbp+0x0],ah
   1400308fe:	add    BYTE PTR [rbp+0x0],r12b
   140030902:	jae    0x140030904
   140030904:	movsxd eax,DWORD PTR [rax]
   140030906:	jb     0x140030908
   140030908:	imul   eax,DWORD PTR [rax],0x740070
   14003090e:	imul   eax,DWORD PTR [rax],0x6e006f
   140030914:	add    BYTE PTR [rax],al
   140030916:	add    BYTE PTR [rax],al
   140030918:	rex.WX add BYTE PTR [rcx+0x0],spl
   14003091c:	jbe    0x14003091e
   14003091e:	(bad)  
   14003091f:	add    BYTE PTR [rax],ch
   140030921:	add    BYTE PTR [rax+rax*1+0x4d],dl
   140030925:	add    BYTE PTR [rcx],ch
   140030927:	add    BYTE PTR [rax],ah
   140030929:	add    BYTE PTR [rax+0x0],dl
   14003092c:	ins    BYTE PTR es:[rdi],dx
   14003092d:	add    BYTE PTR [rcx+0x0],ah
   140030930:	je     0x140030932
   140030932:	data16 add BYTE PTR [rdi+0x0],ch
   140030936:	jb     0x140030938
   140030938:	ins    DWORD PTR es:[rdi],dx
   140030939:	add    BYTE PTR [rax],ah
   14003093b:	add    BYTE PTR [rbx+0x0],dl
   14003093e:	add    BYTE PTR [r8],r12b
   140030941:	add    BYTE PTR [rdx+0x0],ah
   140030944:	imul   eax,DWORD PTR [rax],0x61006e
   14003094a:	jb     0x14003094c
   14003094c:	jns    0x14003094e
   14003094e:	add    BYTE PTR [rax],al
   140030950:	add    BYTE PTR ss:[rbx],cl
   140030953:	add    BYTE PTR [rcx],al
   140030955:	add    BYTE PTR [rsi+0x0],al
   140030958:	imul   eax,DWORD PTR [rax],0x65006c
   14003095e:	push   rsi
   14003095f:	add    BYTE PTR [rbp+0x0],ah
   140030962:	jb     0x140030964
   140030964:	jae    0x140030966
   140030966:	imul   eax,DWORD PTR [rax],0x6e006f
   14003096c:	add    BYTE PTR [rax],al
   14003096e:	add    BYTE PTR [rax],al
   140030970:	(bad)  
   140030971:	add    BYTE PTR [rsi],ch
   140030973:	add    BYTE PTR [rax],dh
   140030975:	add    BYTE PTR [rsi],ch
   140030977:	add    BYTE PTR [rsi],dh
   140030979:	add    BYTE PTR [rax],dh
   14003097b:	add    BYTE PTR [rax],dh
   14003097d:	add    BYTE PTR [rsi],ch
   14003097f:	add    BYTE PTR [rcx],dh
   140030981:	add    BYTE PTR [rcx],bh
   140030983:	add    BYTE PTR [rax],al
   140030985:	add    BYTE PTR [rax],al
   140030987:	add    BYTE PTR [rdx],bh
   140030989:	add    BYTE PTR [rip+0x46000100],cl        # 0x186030a8f
   14003098f:	add    BYTE PTR [rbp+0x0],dh
   140030992:	ins    BYTE PTR es:[rdi],dx
   140030993:	add    BYTE PTR [rax+rax*1+0x20],ch
   140030997:	add    BYTE PTR [rsi+0x0],dl
   14003099a:	add    BYTE PTR gs:[rdx+0x0],dh
   14003099e:	jae    0x1400309a0
   1400309a0:	imul   eax,DWORD PTR [rax],0x6e006f
   1400309a6:	add    BYTE PTR [rax],al
   1400309a8:	xor    DWORD PTR [rax],eax
   1400309aa:	add    BYTE PTR cs:[rdi],dh
   1400309ad:	add    BYTE PTR [rsi],ch
   1400309af:	add    BYTE PTR [rax],dh
   1400309b1:	add    BYTE PTR [rdi+0x0],bl
   1400309b4:	add    BYTE PTR ss:[rax],dh
   1400309b7:	add    BYTE PTR [rip+0x31006200],ch        # 0x171036bbd
   1400309bd:	add    BYTE PTR [rcx],bh
   1400309bf:	add    BYTE PTR [rax],al
   1400309c1:	add    BYTE PTR [rax],al
   1400309c3:	add    BYTE PTR [rax+rax*1],ch
   1400309c6:	(bad)  
   1400309c7:	add    BYTE PTR [rcx],al
   1400309c9:	add    BYTE PTR [rcx+0x0],cl
   1400309cc:	outs   dx,BYTE PTR ds:[rsi]
   1400309cd:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400309d1:	add    BYTE PTR [rdx+0x0],dh
   1400309d4:	outs   dx,BYTE PTR ds:[rsi]
   1400309d5:	add    BYTE PTR [rcx+0x0],ah
   1400309d8:	ins    BYTE PTR es:[rdi],dx
   1400309d9:	add    BYTE PTR [rsi+0x0],cl
   1400309dc:	(bad)  
   1400309dd:	add    BYTE PTR [rbp+0x0],ch
   1400309e0:	add    BYTE PTR gs:[rax],al
   1400309e3:	add    BYTE PTR [rdx+0x0],ch
   1400309e6:	(bad)  
   1400309e7:	add    BYTE PTR [rsi+0x0],dh
   1400309ea:	(bad)  
   1400309eb:	add    BYTE PTR [rdi+0x0],dh
   1400309ee:	add    BYTE PTR [rax],al
   1400309f0:	rex.RX add BYTE PTR [rcx],r10b
   1400309f3:	add    BYTE PTR [rcx],al
   1400309f5:	add    BYTE PTR [rax+rax*1+0x65],cl
   1400309f9:	add    BYTE PTR [rdi+0x0],ah
   1400309fc:	(bad)  
   1400309fd:	add    BYTE PTR [rax+rax*1+0x43],ch
   140030a01:	add    BYTE PTR [rdi+0x0],ch
   140030a04:	jo     0x140030a06
   140030a06:	jns    0x140030a08
   140030a08:	jb     0x140030a0a
   140030a0a:	imul   eax,DWORD PTR [rax],0x680067
   140030a10:	je     0x140030a12
   140030a12:	add    BYTE PTR [rax],al
   140030a14:	rex.XB add BYTE PTR [r15+0x0],bpl
   140030a18:	jo     0x140030a1a
   140030a1a:	jns    0x140030a1c
   140030a1c:	jb     0x140030a1e
   140030a1e:	imul   eax,DWORD PTR [rax],0x680067
   140030a24:	je     0x140030a26
   140030a26:	and    BYTE PTR [rax],al
   140030a28:	test   eax,0x32002000
   140030a2d:	add    BYTE PTR [rax],dh
   140030a2f:	add    BYTE PTR [rcx],dh
   140030a31:	add    BYTE PTR [rax+rax*1],dh
   140030a34:	add    BYTE PTR [rax],al
   140030a36:	add    BYTE PTR [rax],al
   140030a38:	cmp    al,0x0
   140030a3a:	or     al,BYTE PTR [rax]
   140030a3c:	add    DWORD PTR [rax],eax
   140030a3e:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   140030a42:	imul   eax,DWORD PTR [rax],0x690067
   140030a48:	outs   dx,BYTE PTR ds:[rsi]
   140030a49:	add    BYTE PTR [rcx+0x0],ah
   140030a4c:	ins    BYTE PTR es:[rdi],dx
   140030a4d:	add    BYTE PTR [rsi+0x0],al
   140030a50:	imul   eax,DWORD PTR [rax],0x65006c
   140030a56:	outs   dx,BYTE PTR ds:[rsi]
   140030a57:	add    BYTE PTR [rcx+0x0],ah
   140030a5a:	ins    DWORD PTR es:[rdi],dx
   140030a5b:	add    BYTE PTR [rbp+0x0],ah
   140030a5e:	add    BYTE PTR [rax],al
   140030a60:	push   0x0
   140030a62:	(bad)  
   140030a63:	add    BYTE PTR [rsi+0x0],dh
   140030a66:	(bad)  
   140030a67:	add    BYTE PTR [rdi+0x0],dh
   140030a6a:	add    BYTE PTR cs:[rbp+0x0],ah
   140030a6e:	js     0x140030a70
   140030a70:	add    BYTE PTR gs:[rax],al
   140030a73:	add    BYTE PTR [rsi+0x0],dl
   140030a76:	sbb    eax,DWORD PTR [rax]
   140030a78:	add    DWORD PTR [rax],eax
   140030a7a:	push   rax
   140030a7b:	add    BYTE PTR [rdx+0x0],dh
   140030a7e:	outs   dx,DWORD PTR ds:[rsi]
   140030a7f:	add    BYTE PTR [rax+rax*1+0x75],ah
   140030a83:	add    BYTE PTR [rbx+0x0],ah
   140030a86:	je     0x140030a88
   140030a88:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140030a8c:	ins    DWORD PTR es:[rdi],dx
   140030a8d:	add    BYTE PTR [rbp+0x0],ah
   140030a90:	add    BYTE PTR [rax],al
   140030a92:	add    BYTE PTR [rax],al
   140030a94:	rex.WX add BYTE PTR [rcx+0x0],spl
   140030a98:	jbe    0x140030a9a
   140030a9a:	(bad)  
   140030a9b:	add    BYTE PTR [rax],ch
   140030a9d:	add    BYTE PTR [rax+rax*1+0x4d],dl
   140030aa1:	add    BYTE PTR [rcx],ch
   140030aa3:	add    BYTE PTR [rax],ah
   140030aa5:	add    BYTE PTR [rax+0x0],dl
   140030aa8:	ins    BYTE PTR es:[rdi],dx
   140030aa9:	add    BYTE PTR [rcx+0x0],ah
   140030aac:	je     0x140030aae
   140030aae:	data16 add BYTE PTR [rdi+0x0],ch
   140030ab2:	jb     0x140030ab4
   140030ab4:	ins    DWORD PTR es:[rdi],dx
   140030ab5:	add    BYTE PTR [rax],ah
   140030ab7:	add    BYTE PTR [rbx+0x0],dl
   140030aba:	add    BYTE PTR [r8],r12b
   140030abd:	add    BYTE PTR [rdi],dh
   140030abf:	add    BYTE PTR [rax],ah
   140030ac1:	add    BYTE PTR [rbp+0x0],dl
   140030ac4:	add    BYTE PTR ss:[rax],dh
   140030ac7:	add    BYTE PTR [rax],al
   140030ac9:	add    BYTE PTR [rax],al
   140030acb:	add    BYTE PTR [rdx],bh
   140030acd:	add    BYTE PTR [rbx],cl
   140030acf:	add    BYTE PTR [rcx],al
   140030ad1:	add    BYTE PTR [rax+0x0],dl
   140030ad4:	jb     0x140030ad6
   140030ad6:	outs   dx,DWORD PTR ds:[rsi]
   140030ad7:	add    BYTE PTR [rax+rax*1+0x75],ah
   140030adb:	add    BYTE PTR [rbx+0x0],ah
   140030ade:	je     0x140030ae0
   140030ae0:	push   rsi
   140030ae1:	add    BYTE PTR [rbp+0x0],ah
   140030ae4:	jb     0x140030ae6
   140030ae6:	jae    0x140030ae8
   140030ae8:	imul   eax,DWORD PTR [rax],0x6e006f
   140030aee:	add    BYTE PTR [rax],al
   140030af0:	(bad)  
   140030af1:	add    BYTE PTR [rsi],ch
   140030af3:	add    BYTE PTR [rax],dh
   140030af5:	add    BYTE PTR [rsi],ch
   140030af7:	add    BYTE PTR [rsi],dh
   140030af9:	add    BYTE PTR [rax],dh
   140030afb:	add    BYTE PTR [rax],dh
   140030afd:	add    BYTE PTR [rsi],ch
   140030aff:	add    BYTE PTR [rcx],dh
   140030b01:	add    BYTE PTR [rcx],bh
   140030b03:	add    BYTE PTR [rax],al
   140030b05:	add    BYTE PTR [rax],al
   140030b07:	add    BYTE PTR [rax+rax*1+0x0],al
   140030b0b:	add    BYTE PTR [rcx],al
   140030b0d:	add    BYTE PTR [rsi+0x0],dl
   140030b10:	(bad)  
   140030b11:	add    BYTE PTR [rdx+0x0],dh
   140030b14:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140030b18:	ins    BYTE PTR es:[rdi],dx
   140030b19:	add    BYTE PTR [rbp+0x0],ah
   140030b1c:	rex.WB add BYTE PTR [r14+0x0],bpl
   140030b20:	data16 add BYTE PTR [rdi+0x0],ch
   140030b24:	add    BYTE PTR [rax],al
   140030b26:	add    BYTE PTR [rax],al
   140030b28:	and    al,0x0
   140030b2a:	add    al,0x0
   140030b2c:	add    BYTE PTR [rax],al
   140030b2e:	push   rsp
   140030b2f:	add    BYTE PTR [rdx+0x0],dh
   140030b32:	(bad)  
   140030b33:	add    BYTE PTR [rsi+0x0],ch
   140030b36:	jae    0x140030b38
   140030b38:	ins    BYTE PTR es:[rdi],dx
   140030b39:	add    BYTE PTR [rcx+0x0],ah
   140030b3c:	je     0x140030b3e
   140030b3e:	imul   eax,DWORD PTR [rax],0x6e006f
   140030b44:	add    BYTE PTR [rax],al
   140030b46:	add    BYTE PTR [rax],al
   140030b48:	add    BYTE PTR [rax],al
   140030b4a:	mov    al,0x4
   140030b4c:	cmp    al,0x61
   140030b4e:	jae    0x140030bc3
   140030b50:	gs ins DWORD PTR es:[rdi],dx
   140030b52:	(bad)  
   140030b53:	ins    BYTE PTR es:[rdi],dx
   140030b54:	jns    0x140030b76
   140030b56:	js     0x140030bc5
   140030b58:	ins    BYTE PTR es:[rdi],dx
   140030b59:	outs   dx,BYTE PTR ds:[rsi]
   140030b5a:	jae    0x140030b99
   140030b5c:	and    dh,BYTE PTR [rbp+0x72]
   140030b5f:	outs   dx,BYTE PTR ds:[rsi]
   140030b60:	cmp    dh,BYTE PTR [rbx+0x63]
   140030b63:	push   0x73616d65
   140030b68:	sub    eax,0x7263696d
   140030b6d:	outs   dx,DWORD PTR ds:[rsi]
   140030b6e:	jae    0x140030bdf
   140030b70:	data16 je 0x140030ba0
   140030b73:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140030b76:	cmp    ah,BYTE PTR [rcx+0x73]
   140030b79:	ins    DWORD PTR es:[rdi],dx
   140030b7a:	cs jbe 0x140030bae
   140030b7d:	and    ah,BYTE PTR [rax]
   140030b7f:	ins    DWORD PTR es:[rdi],dx
   140030b80:	(bad)  
   140030b81:	outs   dx,BYTE PTR ds:[rsi]
   140030b82:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140030b89:	jb     0x140030bfe
   140030b8b:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140030b92:	xor    BYTE PTR [rdx],ah
   140030b94:	and    BYTE PTR [rax+0x6d],bh
   140030b97:	ins    BYTE PTR es:[rdi],dx
   140030b98:	outs   dx,BYTE PTR ds:[rsi]
   140030b99:	jae    0x140030bd5
   140030b9b:	(bad)  
   140030b9c:	jae    0x140030c0b
   140030b9e:	jbe    0x140030bd3
   140030ba0:	cmp    eax,0x6e727522
   140030ba5:	cmp    dh,BYTE PTR [rbx+0x63]
   140030ba8:	push   0x73616d65
   140030bad:	sub    eax,0x7263696d
   140030bb2:	outs   dx,DWORD PTR ds:[rsi]
   140030bb3:	jae    0x140030c24
   140030bb5:	data16 je 0x140030be5
   140030bb8:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140030bbb:	cmp    ah,BYTE PTR [rcx+0x73]
   140030bbe:	ins    DWORD PTR es:[rdi],dx
   140030bbf:	cs jbe 0x140030bf5
   140030bc2:	and    bh,BYTE PTR [rsi]
   140030bc4:	or     eax,0x73613c0a
   140030bc9:	jae    0x140030c30
   140030bcb:	ins    DWORD PTR es:[rdi],dx
   140030bcc:	(bad)  
   140030bcd:	ins    BYTE PTR es:[rdi],dx
   140030bce:	jns    0x140030c19
   140030bd0:	fs outs dx,BYTE PTR gs:[rsi]
   140030bd3:	je     0x140030c3e
   140030bd5:	je     0x140030c50
   140030bd7:	and    BYTE PTR [rsi+0x65],dh
   140030bda:	jb     0x140030c4f
   140030bdc:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e37223d
   140030be3:	xor    BYTE PTR [rsi],ch
   140030be5:	xor    BYTE PTR ss:[rax],dh
   140030be8:	xor    DWORD PTR cs:[rcx],edi
   140030beb:	and    ah,BYTE PTR [rax]
   140030bed:	jo     0x140030c61
   140030bef:	outs   dx,DWORD PTR ds:[rsi]
   140030bf0:	movsxd esp,DWORD PTR [rbp+0x73]
   140030bf3:	jae    0x140030c64
   140030bf5:	jb     0x140030c38
   140030bf7:	jb     0x140030c5c
   140030bf9:	push   0x63657469
   140030bfe:	je     0x140030c75
   140030c00:	jb     0x140030c67
   140030c02:	cmp    eax,0x36385822
   140030c07:	and    ah,BYTE PTR [rax]
   140030c09:	outs   dx,BYTE PTR ds:[rsi]
   140030c0a:	(bad)  
   140030c0b:	ins    DWORD PTR es:[rdi],dx
   140030c0c:	gs cmp eax,0x61724f22
   140030c12:	movsxd ebp,DWORD PTR [rbp+riz*2+0x20]
   140030c16:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140030c18:	jb     0x140030c8a
   140030c1a:	outs   dx,DWORD PTR ds:[rsi]
   140030c1b:	jb     0x140030c7e
   140030c1d:	je     0x140030c88
   140030c1f:	outs   dx,DWORD PTR ds:[rsi]
   140030c20:	outs   dx,BYTE PTR ds:[rsi]
   140030c21:	sub    al,0x20
   140030c23:	rex.WX (bad) 
   140030c25:	jbe    0x140030c88
   140030c27:	sub    BYTE PTR [rbp+rbp*2+0x29],dh
   140030c2b:	and    BYTE PTR [rdx],dh
   140030c2d:	and    BYTE PTR [rbx+0x74],dl
   140030c30:	(bad)  
   140030c31:	outs   dx,BYTE PTR ds:[rsi]
   140030c32:	fs (bad) 
   140030c34:	jb     0x140030c9a
   140030c36:	and    BYTE PTR [rbp+0x64],al
   140030c39:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x7420226e
   140030c41:	jns    0x140030cb3
   140030c43:	gs cmp eax,0x6e697722
   140030c49:	xor    esi,DWORD PTR [rdx]
   140030c4b:	and    bh,BYTE PTR [rsi]
   140030c4d:	cmp    al,0x2f
   140030c4f:	(bad)  
   140030c50:	jae    0x140030cc5
   140030c52:	gs ins DWORD PTR es:[rdi],dx
   140030c54:	(bad)  
   140030c55:	ins    BYTE PTR es:[rdi],dx
   140030c56:	jns    0x140030ca1
   140030c58:	fs outs dx,BYTE PTR gs:[rsi]
   140030c5b:	je     0x140030cc6
   140030c5d:	je     0x140030cd8
   140030c5f:	ds or  eax,0x65643c0a
   140030c65:	jae    0x140030cca
   140030c67:	jb     0x140030cd2
   140030c69:	jo     0x140030cdf
   140030c6b:	imul   ebp,DWORD PTR [rdi+0x6e],0x76614a3e
   140030c72:	(bad)  
   140030c73:	sub    BYTE PTR [rbp+rcx*2+0x29],dl
   140030c77:	and    BYTE PTR [rbx+0x45],dl
   140030c7a:	and    BYTE PTR [rdx+0x61],ch
   140030c7d:	jbe    0x140030ce0
   140030c7f:	ja     0x140030ca1
   140030c81:	jo     0x140030cf5
   140030c83:	outs   dx,DWORD PTR ds:[rsi]
   140030c84:	movsxd esp,DWORD PTR [rbp+0x73]
   140030c87:	jae    0x140030cc5
   140030c89:	(bad)  
   140030c8a:	fs gs jae 0x140030cf1
   140030c8e:	jb     0x140030cf9
   140030c90:	jo     0x140030d06
   140030c92:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   140030c99:	fs gs jo 0x140030d02
   140030c9d:	outs   dx,BYTE PTR ds:[rsi]
   140030c9e:	fs outs dx,BYTE PTR gs:[rsi]
   140030ca1:	movsxd edi,DWORD PTR [rcx+0x3e]
   140030ca4:	or     eax,0x2020200a
   140030ca9:	and    BYTE PTR [rsp+riz*2],bh
   140030cac:	gs jo  0x140030d14
   140030caf:	outs   dx,BYTE PTR ds:[rsi]
   140030cb0:	fs outs dx,BYTE PTR gs:[rsi]
   140030cb3:	je     0x140030cf6
   140030cb5:	jae    0x140030d2a
   140030cb7:	gs ins DWORD PTR es:[rdi],dx
   140030cb9:	(bad)  
   140030cba:	ins    BYTE PTR es:[rdi],dx
   140030cbb:	jns    0x140030cfb
   140030cbd:	or     eax,0x2020200a
   140030cc2:	and    BYTE PTR [rax],ah
   140030cc4:	and    BYTE PTR [rax],ah
   140030cc6:	and    BYTE PTR [rcx+riz*2],bh
   140030cc9:	jae    0x140030d3e
   140030ccb:	gs ins DWORD PTR es:[rdi],dx
   140030ccd:	(bad)  
   140030cce:	ins    BYTE PTR es:[rdi],dx
   140030ccf:	jns    0x140030d1a
   140030cd1:	fs outs dx,BYTE PTR gs:[rsi]
   140030cd4:	je     0x140030d3f
   140030cd6:	je     0x140030d51
   140030cd8:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   140030cdc:	gs cmp eax,0x6e697722
   140030ce2:	xor    esi,DWORD PTR [rdx]
   140030ce4:	and    ah,BYTE PTR [rax]
   140030ce6:	outs   dx,BYTE PTR ds:[rsi]
   140030ce7:	(bad)  
   140030ce8:	ins    DWORD PTR es:[rdi],dx
   140030ce9:	gs cmp eax,0x63694d22
   140030cef:	jb     0x140030d60
   140030cf1:	jae    0x140030d62
   140030cf3:	data16 je 0x140030d24
   140030cf6:	push   rdi
   140030cf7:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   140030cfe:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140030d00:	ins    DWORD PTR es:[rdi],dx
   140030d01:	ins    DWORD PTR es:[rdi],dx
   140030d02:	outs   dx,DWORD PTR ds:[rsi]
   140030d03:	outs   dx,BYTE PTR ds:[rsi]
   140030d04:	sub    eax,0x746e6f43
   140030d09:	jb     0x140030d7a
   140030d0b:	ins    BYTE PTR es:[rdi],dx
   140030d0c:	jae    0x140030d30
   140030d0e:	and    BYTE PTR [rsi+0x65],dh
   140030d11:	jb     0x140030d86
   140030d13:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   140030d1a:	xor    BYTE PTR [rsi],ch
   140030d1c:	xor    BYTE PTR [rsi],ch
   140030d1e:	xor    BYTE PTR [rdx],ah
   140030d20:	and    BYTE PTR [rax+0x72],dh
   140030d23:	outs   dx,DWORD PTR ds:[rsi]
   140030d24:	movsxd esp,DWORD PTR [rbp+0x73]
   140030d27:	jae    0x140030d98
   140030d29:	jb     0x140030d6c
   140030d2b:	jb     0x140030d90
   140030d2d:	push   0x63657469
   140030d32:	je     0x140030da9
   140030d34:	jb     0x140030d9b
   140030d36:	cmp    eax,0x20222a22
   140030d3b:	jo     0x140030db2
   140030d3d:	(bad)  
   140030d3e:	ins    BYTE PTR es:[rdi],dx
   140030d3f:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   140030d46:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   140030d4a:	and    dh,BYTE PTR [rsi]
   140030d4c:	xor    eax,0x36623539
   140030d51:	xor    al,0x31
   140030d53:	xor    al,0x34
   140030d55:	movsxd esp,DWORD PTR [rbx+0x66]
   140030d58:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   140030d5c:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   140030d60:	addr32 jne 0x140030dc4
   140030d63:	addr32 gs cmp eax,0x3e222a22
   140030d6a:	cmp    al,0x2f
   140030d6c:	(bad)  
   140030d6d:	jae    0x140030de2
   140030d6f:	gs ins DWORD PTR es:[rdi],dx
   140030d71:	(bad)  
   140030d72:	ins    BYTE PTR es:[rdi],dx
   140030d73:	jns    0x140030dbe
   140030d75:	fs outs dx,BYTE PTR gs:[rsi]
   140030d78:	je     0x140030de3
   140030d7a:	je     0x140030df5
   140030d7c:	ds or  eax,0x2020200a
   140030d82:	and    BYTE PTR [rdi+rbp*1],bh
   140030d85:	fs gs jo 0x140030dee
   140030d89:	outs   dx,BYTE PTR ds:[rsi]
   140030d8a:	fs outs dx,BYTE PTR gs:[rsi]
   140030d8d:	je     0x140030dd0
   140030d8f:	jae    0x140030e04
   140030d91:	gs ins DWORD PTR es:[rdi],dx
   140030d93:	(bad)  
   140030d94:	ins    BYTE PTR es:[rdi],dx
   140030d95:	jns    0x140030dd5
   140030d97:	or     eax,0x642f3c0a
   140030d9c:	gs jo  0x140030e04
   140030d9f:	outs   dx,BYTE PTR ds:[rsi]
   140030da0:	fs outs dx,BYTE PTR gs:[rsi]
   140030da3:	movsxd edi,DWORD PTR [rcx+0x3e]
   140030da6:	or     eax,0x200a0d0a
   140030dab:	and    BYTE PTR [rip+0x3c20200a],cl        # 0x17c232dbb
   140030db1:	je     0x140030e25
   140030db3:	jne    0x140030e28
   140030db5:	je     0x140030e00
   140030db7:	outs   dx,BYTE PTR ds:[rsi]
   140030db8:	outs   dx,WORD PTR ds:[rsi]
   140030dba:	and    BYTE PTR [rax+0x6d],bh
   140030dbd:	ins    BYTE PTR es:[rdi],dx
   140030dbe:	outs   dx,BYTE PTR ds:[rsi]
   140030dbf:	jae    0x140030dfe
   140030dc1:	and    dh,BYTE PTR [rbp+0x72]
   140030dc4:	outs   dx,BYTE PTR ds:[rsi]
   140030dc5:	cmp    dh,BYTE PTR [rbx+0x63]
   140030dc8:	push   0x73616d65
   140030dcd:	sub    eax,0x7263696d
   140030dd2:	outs   dx,DWORD PTR ds:[rsi]
   140030dd3:	jae    0x140030e44
   140030dd5:	data16 je 0x140030e05
   140030dd8:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140030ddb:	cmp    ah,BYTE PTR [rcx+0x73]
   140030dde:	ins    DWORD PTR es:[rdi],dx
   140030ddf:	cs jbe 0x140030e15
   140030de2:	and    bh,BYTE PTR [rsi]
   140030de4:	or     eax,0x2020200a
   140030de9:	and    BYTE PTR [rbx+rsi*2],bh
   140030dec:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140030df0:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140030df8:	and    BYTE PTR [rax],ah
   140030dfa:	and    BYTE PTR [rax],ah
   140030dfc:	cmp    al,0x72
   140030dfe:	gs jno 0x140030e76
   140030e01:	gs jae 0x140030e78
   140030e04:	gs fs push rax
   140030e07:	jb     0x140030e72
   140030e09:	jbe    0x140030e74
   140030e0b:	ins    BYTE PTR es:[rdi],dx
   140030e0c:	gs addr32 gs jae 0x140030e4f
   140030e11:	or     eax,0x2020200a
   140030e16:	and    BYTE PTR [rax],ah
   140030e18:	and    BYTE PTR [rax],ah
   140030e1a:	and    BYTE PTR [rdx+rsi*2],bh
   140030e1d:	gs jno 0x140030e95
   140030e20:	gs jae 0x140030e97
   140030e23:	gs fs rex.RB js 0x140030e8d
   140030e28:	movsxd esi,DWORD PTR [rbp+0x74]
   140030e2b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140030e32:	ins    BYTE PTR es:[rdi],dx
   140030e33:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140030e37:	gs ins BYTE PTR es:[rdi],dx
   140030e39:	cmp    eax,0x49736122
   140030e3e:	outs   dx,BYTE PTR ds:[rsi]
   140030e3f:	jbe    0x140030eb0
   140030e41:	imul   esp,DWORD PTR [rbp+0x72],0x22
   140030e45:	and    BYTE PTR [rbp+0x69],dh
   140030e48:	movsxd esp,DWORD PTR [r11+0x65]
   140030e4c:	jae    0x140030ec1
   140030e4e:	cmp    eax,0x6c616622
   140030e53:	jae    0x140030eba
   140030e55:	and    bh,BYTE PTR [rsi]
   140030e57:	cmp    al,0x2f
   140030e59:	jb     0x140030ec0
   140030e5b:	jno    0x140030ed2
   140030e5d:	gs jae 0x140030ed4
   140030e60:	gs fs rex.RB js 0x140030eca
   140030e65:	movsxd esi,DWORD PTR [rbp+0x74]
   140030e68:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140030e6f:	ins    BYTE PTR es:[rdi],dx
   140030e70:	ds or  eax,0x2020200a
   140030e76:	and    BYTE PTR [rax],ah
   140030e78:	and    BYTE PTR [rax],ah
   140030e7a:	and    BYTE PTR [rdi+rbp*1],bh
   140030e7d:	jb     0x140030ee4
   140030e7f:	jno    0x140030ef6
   140030e81:	gs jae 0x140030ef8
   140030e84:	gs fs push rax
   140030e87:	jb     0x140030ef2
   140030e89:	jbe    0x140030ef4
   140030e8b:	ins    BYTE PTR es:[rdi],dx
   140030e8c:	gs addr32 gs jae 0x140030ecf
   140030e91:	or     eax,0x2020200a
   140030e96:	and    BYTE PTR [rax],ah
   140030e98:	and    BYTE PTR [rax],ah
   140030e9a:	cmp    al,0x2f
   140030e9c:	jae    0x140030f03
   140030e9e:	movsxd esi,DWORD PTR [rbp+0x72]
   140030ea1:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140030ea9:	cmp    al,0x2f
   140030eab:	je     0x140030f1f
   140030ead:	jne    0x140030f22
   140030eaf:	je     0x140030efa
   140030eb1:	outs   dx,BYTE PTR ds:[rsi]
   140030eb2:	outs   dx,WORD PTR ds:[rsi]
   140030eb4:	ds or  eax,0x200a0d0a
   140030eba:	and    BYTE PTR [rip+0x3c20200a],cl        # 0x17c232eca
   140030ec0:	(bad)  
   140030ec1:	jae    0x140030f30
   140030ec3:	jbe    0x140030ef8
   140030ec5:	cmp    ah,BYTE PTR [rcx+0x70]
   140030ec8:	jo     0x140030f36
   140030eca:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140030ed1:	ds or  eax,0x2020200a
   140030ed7:	and    BYTE PTR [rcx+riz*2],bh
   140030eda:	jae    0x140030f49
   140030edc:	jbe    0x140030f11
   140030ede:	cmp    dh,BYTE PTR [rdi+0x69]
   140030ee1:	outs   dx,BYTE PTR ds:[rsi]
   140030ee2:	outs   dx,DWORD PTR fs:[rsi]
   140030ee4:	ja     0x140030f59
   140030ee6:	push   rbx
   140030ee7:	gs je  0x140030f5e
   140030eea:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
   140030ef1:	ins    BYTE PTR es:[rdi],dx
   140030ef2:	outs   dx,BYTE PTR ds:[rsi]
   140030ef3:	jae    0x140030f32
   140030ef5:	and    ch,BYTE PTR [rax+0x74]
   140030ef8:	je     0x140030f6a
   140030efa:	cmp    ch,BYTE PTR [rdi]
   140030efc:	(bad)  
   140030efd:	jae    0x140030f62
   140030eff:	push   0x73616d65
   140030f04:	cs ins DWORD PTR es:[rdi],dx
   140030f06:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   140030f0d:	je     0x140030f3d
   140030f0f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140030f12:	(bad)  
   140030f13:	push   rbx
   140030f14:	rex.WRB
   140030f15:	rex.WB (bad) 
   140030f17:	xor    dh,BYTE PTR [rax]
   140030f19:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6c664e
   140030f1f:	outs   dx,DWORD PTR fs:[rsi]
   140030f21:	ja     0x140030f96
   140030f23:	push   rbx
   140030f24:	gs je  0x140030f9b
   140030f27:	imul   ebp,DWORD PTR [rsi+0x67],0xd3e2273
   140030f2e:	or     ah,BYTE PTR [rax]
   140030f30:	and    BYTE PTR [rax],ah
   140030f32:	and    BYTE PTR [rax],ah
   140030f34:	and    BYTE PTR [rax],ah
   140030f36:	cmp    al,0x64
   140030f38:	jo     0x140030fa3
   140030f3a:	rex.B ja 0x140030f9e
   140030f3d:	jb     0x140030fa4
   140030f3f:	ds je  0x140030fb4
   140030f42:	jne    0x140030fa9
   140030f44:	cmp    al,0x2f
   140030f46:	fs jo  0x140030fb2
   140030f49:	rex.B ja 0x140030fad
   140030f4c:	jb     0x140030fb3
   140030f4e:	ds or  eax,0x2020200a
   140030f54:	and    BYTE PTR [rdi+rbp*1],bh
   140030f57:	(bad)  
   140030f58:	jae    0x140030fc7
   140030f5a:	jbe    0x140030f8f
   140030f5c:	cmp    dh,BYTE PTR [rdi+0x69]
   140030f5f:	outs   dx,BYTE PTR ds:[rsi]
   140030f60:	outs   dx,DWORD PTR fs:[rsi]
   140030f62:	ja     0x140030fd7
   140030f64:	push   rbx
   140030f65:	gs je  0x140030fdc
   140030f68:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   140030f6f:	and    BYTE PTR [rax],ah
   140030f71:	cmp    al,0x2f
   140030f73:	(bad)  
   140030f74:	jae    0x140030fe3
   140030f76:	jbe    0x140030fab
   140030f78:	cmp    ah,BYTE PTR [rcx+0x70]
   140030f7b:	jo     0x140030fe9
   140030f7d:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140030f84:	ds or  eax,0x200a0d0a
   140030f8a:	and    BYTE PTR [rip+0x2020200a],cl        # 0x160232f9a
   140030f90:	cmp    al,0x63
   140030f92:	outs   dx,DWORD PTR ds:[rsi]
   140030f93:	ins    DWORD PTR es:[rdi],dx
   140030f94:	jo     0x140030ff7
   140030f96:	je     0x140031001
   140030f98:	(bad)  
   140030f99:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6d782079
   140030fa1:	ins    BYTE PTR es:[rdi],dx
   140030fa2:	outs   dx,BYTE PTR ds:[rsi]
   140030fa3:	jae    0x140030fe2
   140030fa5:	and    dh,BYTE PTR [rbp+0x72]
   140030fa8:	outs   dx,BYTE PTR ds:[rsi]
   140030fa9:	cmp    dh,BYTE PTR [rbx+0x63]
   140030fac:	push   0x73616d65
   140030fb1:	sub    eax,0x7263696d
   140030fb6:	outs   dx,DWORD PTR ds:[rsi]
   140030fb7:	jae    0x140031028
   140030fb9:	data16 je 0x140030fe9
   140030fbc:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140030fbf:	cmp    ah,BYTE PTR [rbx+0x6f]
   140030fc2:	ins    DWORD PTR es:[rdi],dx
   140030fc3:	jo     0x140031026
   140030fc5:	je     0x140031030
   140030fc7:	(bad)  
   140030fc8:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x31762e79
   140030fd0:	and    bh,BYTE PTR [rsi]
   140030fd2:	or     eax,0x2020200a
   140030fd7:	and    BYTE PTR [rax],ah
   140030fd9:	and    BYTE PTR [rcx+riz*2],bh
   140030fdc:	jo     0x14003104e
   140030fde:	ins    BYTE PTR es:[rdi],dx
   140030fdf:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140030fe6:	ds or  eax,0x2020200a
   140030fec:	and    BYTE PTR [rax],ah
   140030fee:	and    BYTE PTR [rax],ah
   140030ff0:	and    BYTE PTR [rip+0x2020200a],cl        # 0x160233000
   140030ff6:	and    BYTE PTR [rax],ah
   140030ff8:	and    BYTE PTR [rax],ah
   140030ffa:	and    BYTE PTR [rbx+rsi*2],bh
   140030ffd:	jne    0x14003106f
   140030fff:	jo     0x140031070
   140031001:	jb     0x140031077
   140031003:	gs fs rex.WRXB push r11
   140031007:	and    BYTE PTR [rcx+0x64],cl
   14003100a:	cmp    eax,0x32657b22
   14003100f:	xor    BYTE PTR [rcx],dh
   140031011:	xor    DWORD PTR [rsi*1+0x35312d37],esi
   140031018:	xor    al,0x36
   14003101a:	sub    eax,0x35633334
   14003101f:	sub    eax,0x65663561
   140031024:	sub    eax,0x64383030
   140031029:	gs gs xor esp,DWORD PTR gs:[rbx+rsi*1+0x66]
   140031030:	xor    BYTE PTR [rbp+0x22],bh
   140031033:	ds cmp al,0x2f
   140031036:	jae    0x1400310ad
   140031038:	jo     0x1400310aa
   14003103a:	outs   dx,DWORD PTR ds:[rsi]
   14003103b:	jb     0x1400310b1
   14003103d:	gs fs rex.WRXB push r11
   140031041:	ds or  eax,0x2020200a
   140031047:	and    BYTE PTR [rax],ah
   140031049:	and    BYTE PTR [rax],ah
   14003104b:	and    BYTE PTR [rip+0x2020200a],cl        # 0x16023305b
   140031051:	and    BYTE PTR [rax],ah
   140031053:	and    BYTE PTR [rax],ah
   140031055:	and    BYTE PTR [rbx+rsi*2],bh
   140031058:	jne    0x1400310ca
   14003105a:	jo     0x1400310cb
   14003105c:	jb     0x1400310d2
   14003105e:	gs fs rex.WRXB push r11
   140031062:	and    BYTE PTR [rcx+0x64],cl
   140031065:	cmp    eax,0x35337b22
   14003106a:	xor    DWORD PTR [rbx],esi
   14003106c:	cmp    BYTE PTR [rdx+0x39],ah
   14003106f:	(bad)  
   140031070:	sub    eax,0x36396435
   140031075:	sub    eax,0x64626634
   14003107a:	sub    eax,0x64326538
   14003107f:	sub    eax,0x34343261
   140031084:	xor    BYTE PTR [rdx],dh
   140031086:	xor    dh,BYTE PTR [rip+0x61333966]        # 0x1a13649f2
   14003108c:	jge    0x1400310b0
   14003108e:	ds cmp al,0x2f
   140031091:	jae    0x140031108
   140031093:	jo     0x140031105
   140031095:	outs   dx,DWORD PTR ds:[rsi]
   140031096:	jb     0x14003110c
   140031098:	gs fs rex.WRXB push r11
   14003109c:	ds or  eax,0x2020200a
   1400310a2:	and    BYTE PTR [rax],ah
   1400310a4:	and    BYTE PTR [rax],ah
   1400310a6:	and    BYTE PTR [rip+0x2020200a],cl        # 0x1602330b6
   1400310ac:	and    BYTE PTR [rax],ah
   1400310ae:	and    BYTE PTR [rax],ah
   1400310b0:	and    BYTE PTR [rbx+rsi*2],bh
   1400310b3:	jne    0x140031125
   1400310b5:	jo     0x140031126
   1400310b7:	jb     0x14003112d
   1400310b9:	gs fs rex.WRXB push r11
   1400310bd:	and    BYTE PTR [rcx+0x64],cl
   1400310c0:	cmp    eax,0x61347b22
   1400310c5:	xor    ah,BYTE PTR [rsi+0x32]
   1400310c8:	cmp    BYTE PTR [rbp+0x33],ah
   1400310cb:	sub    eax,0x39623335
   1400310d0:	sub    eax,0x31343434
   1400310d5:	sub    eax,0x63396162
   1400310da:	sub    eax,0x64393664
   1400310df:	xor    al,0x61
   1400310e1:	xor    al,0x61
   1400310e3:	ss xor edi,DWORD PTR gs:[rax]
   1400310e7:	jge    0x14003110b
   1400310e9:	ds cmp al,0x2f
   1400310ec:	jae    0x140031163
   1400310ee:	jo     0x140031160
   1400310f0:	outs   dx,DWORD PTR ds:[rsi]
   1400310f1:	jb     0x140031167
   1400310f3:	gs fs rex.WRXB push r11
   1400310f7:	ds or  eax,0x2020200a
   1400310fd:	and    BYTE PTR [rax],ah
   1400310ff:	and    BYTE PTR [rax],ah
   140031101:	and    BYTE PTR [rip+0x2020200a],cl        # 0x160233111
   140031107:	and    BYTE PTR [rax],ah
   140031109:	and    BYTE PTR [rax],ah
   14003110b:	and    BYTE PTR [rbx+rsi*2],bh
   14003110e:	jne    0x140031180
   140031110:	jo     0x140031181
   140031112:	jb     0x140031188
   140031114:	gs fs rex.WRXB push r11
   140031118:	and    BYTE PTR [rcx+0x64],cl
   14003111b:	cmp    eax,0x66317b22
   140031120:	ss (bad) 
   140031122:	movsxd esi,DWORD PTR ss:[rdi]
   140031125:	ss sub eax,0x31653038
   14003112b:	sub    eax,0x39333234
   140031130:	sub    eax,0x62623539
   140031135:	sub    eax,0x30643338
   14003113a:	data16 ss xor BYTE PTR fs:[rcx+riz*2+0x37],ah
   140031141:	cmp    BYTE PTR [rbp+0x22],bh
   140031144:	ds cmp al,0x2f
   140031147:	jae    0x1400311be
   140031149:	jo     0x1400311bb
   14003114b:	outs   dx,DWORD PTR ds:[rsi]
   14003114c:	jb     0x1400311c2
   14003114e:	gs fs rex.WRXB push r11
   140031152:	ds or  eax,0x2020200a
   140031158:	and    BYTE PTR [rax],ah
   14003115a:	and    BYTE PTR [rdi+rbp*1],bh
   14003115d:	(bad)  
   14003115e:	jo     0x1400311d0
   140031160:	ins    BYTE PTR es:[rdi],dx
   140031161:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140031168:	ds or  eax,0x2020200a
   14003116e:	cmp    al,0x2f
   140031170:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140031173:	jo     0x1400311d6
   140031175:	je     0x1400311e0
   140031177:	(bad)  
   140031178:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0xa0d3e79
   140031180:	or     eax,0x612f3c0a
   140031185:	jae    0x1400311fa
   140031187:	gs ins DWORD PTR es:[rdi],dx
   140031189:	(bad)  
   14003118a:	ins    BYTE PTR es:[rdi],dx
   14003118b:	jns    0x1400311cb
   14003118d:	push   rax
   14003118e:	rex.B
   14003118f:	rex.R

Disassembly of section .reloc:

0000000140032000 <.reloc>:
   140032000:	add    BYTE PTR [rax+0x140001],ah
   140032006:	add    BYTE PTR [rax],al
   140032008:	jo     0x140031fad
   14003200a:	js     0x140031faf
   14003200c:	and    BYTE PTR [rbx-0x5c5f5c78],0xa8
   140032013:	movabs ds:0x1c0001c000,eax
   14003201c:	nop
   14003201d:	test   al,0x98
   14003201f:	test   al,0xa0
   140032021:	test   al,0xa8
   140032023:	test   al,0xb0
   140032025:	test   al,0xb8
   140032027:	test   al,0xc0
   140032029:	test   al,0xc8
   14003202b:	test   al,0xd0
   14003202d:	test   al,0xd8
   14003202f:	test   al,0x0
   140032031:	lock add DWORD PTR [rax],eax
   140032034:	cmp    BYTE PTR [rax],al
   140032036:	add    BYTE PTR [rax],al
   140032038:	push   0xffffffff88a378a3
   14003203d:	movabs ds:0xa3c8a3b8a3a8a398,eax
   140032046:	fsub   DWORD PTR [rbx-0x5c075c18]
   14003204c:	or     BYTE PTR [rax+rbx*1+0x38a428a4],ah
   140032053:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032054:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032056:	pop    rax
   140032057:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032058:	push   0xffffffff88a478a4
   14003205d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003205e:	cwde   
   14003205f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032060:	test   al,0xa4
   140032062:	mov    eax,0xd8a6d0a4
   140032067:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140032068:	add    BYTE PTR [rax],dh
   14003206a:	add    al,BYTE PTR [rax]
   14003206c:	mov    esp,0x0
   140032071:	movabs al,ds:0xa020a018a010a008
   14003207a:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   140032080:	movabs al,ds:0xa060a058a050a048
   14003208a:	push   0xffffffff80a070a0
   14003208f:	movabs al,ds:0xa0a0a098a090a088
   140032098:	test   al,0xa0
   14003209a:	mov    al,0xa0
   14003209c:	shl    BYTE PTR [rax-0x57af5f20],1
   1400320a2:	pop    rax
   1400320a3:	test   al,0x60
   1400320a5:	test   al,0x68
   1400320a7:	test   al,0x70
   1400320a9:	test   al,0x78
   1400320ab:	test   al,0x80
   1400320ad:	test   al,0x88
   1400320af:	test   al,0x90
   1400320b1:	test   al,0x98
   1400320b3:	test   al,0xa0
   1400320b5:	test   al,0xa8
   1400320b7:	test   al,0x10
   1400320b9:	test   eax,0xa920a918
   1400320be:	sub    BYTE PTR [rcx-0x56c756d0],ch
   1400320c4:	rex test eax,0xa950a948
   1400320ca:	pop    rax
   1400320cb:	test   eax,0xa968a960
   1400320d0:	jo     0x14003207b
   1400320d2:	js     0x14003207d
   1400320d4:	sub    BYTE PTR [rcx-0x566f5678],0x98
   1400320db:	test   eax,0xa9a8a9a0
   1400320e0:	mov    al,0xa9
   1400320e2:	mov    eax,0xc8a9c0a9
   1400320e7:	test   eax,0xa9d8a9d0
   1400320ec:	loopne 0x140032097
   1400320ee:	call   0x138ad119c
   1400320f3:	test   eax,0xaa08aa00
   1400320f8:	adc    BYTE PTR [rdx-0x55df55e8],ch
   1400320fe:	sub    BYTE PTR [rdx-0x55c755d0],ch
   140032104:	stos   BYTE PTR es:[rdi],al
   140032106:	rex.W stos BYTE PTR es:[rdi],al
   140032108:	push   rax
   140032109:	stos   BYTE PTR es:[rdi],al
   14003210a:	pop    rax
   14003210b:	stos   BYTE PTR es:[rdi],al
   14003210c:	(bad)  
   14003210d:	stos   BYTE PTR es:[rdi],al
   14003210e:	push   0xffffffffc0aeb0aa
   140032113:	scas   eax,DWORD PTR es:[rdi]
   140032114:	enter  0xd0af,0xaf
   140032118:	fsubr  DWORD PTR [rdi-0x50175020]
   14003211e:	lock scas eax,DWORD PTR es:[rdi]
   140032120:	clc    
   140032121:	scas   eax,DWORD PTR es:[rdi]
   140032122:	add    BYTE PTR [rax],al
   140032124:	add    BYTE PTR [rax+0x2],al
   140032127:	add    al,dh
   140032129:	add    BYTE PTR [rax],al
   14003212b:	add    BYTE PTR [rax],al
   14003212d:	movabs al,ds:0xa020a018a010a008
   140032136:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   14003213c:	movabs al,ds:0xa060a058a050a048
   140032146:	push   0x78a070a0
   14003214b:	movabs al,ds:0xa098a090a088a080
   140032154:	movabs al,ds:0xc0a0b8a0b0a0a8a0
   14003215d:	movabs al,ds:0xa0e0a0d8a0d0a0c8
   140032166:	call   0x138a4120b
   14003216b:	movabs al,ds:0xa128a110a108a100
   140032174:	xor    BYTE PTR [rcx-0x5ebf5ec8],ah
   14003217a:	movabs rax,ds:0xa168a160a158a150
   140032184:	jo     0x140032127
   140032186:	js     0x140032129
   140032188:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   14003218f:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   140032198:	shl    BYTE PTR [rcx-0x5e2f5e38],0xd8
   14003219f:	movabs eax,ds:0xa1f8a1f0a1e8a1e0
   1400321a8:	add    BYTE PTR [rdx-0x5def5df8],ah
   1400321ae:	sbb    BYTE PTR [rdx-0x5dd75de0],ah
   1400321b4:	xor    BYTE PTR [rdx-0x5dbf5dc8],ah
   1400321ba:	rex.W movabs ds:0xa268a260a258a250,al
   1400321c4:	jo     0x140032168
   1400321c6:	js     0x14003216a
   1400321c8:	call   0x168a62a6f
   1400321cd:	movabs ds:0xa3c0a3a8a368a348,eax
   1400321d6:	enter  0xd0a3,0xa3
   1400321da:	fsub   DWORD PTR [rbx-0x5c175c20]
   1400321e0:	lock movabs ds:0xa648a5c8a5c0a3f8,eax
   1400321ea:	push   rax
   1400321eb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400321ec:	pop    rax
   1400321ed:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400321ee:	(bad)  
   1400321ef:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400321f0:	push   0x78a670a6
   1400321f5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400321f6:	and    BYTE PTR [rsi-0x596f5978],0x98
   1400321fd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400321fe:	test   al,0xa6
   140032200:	mov    al,0xa6
   140032202:	mov    eax,0xc8a6c0a6
   140032207:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140032208:	shl    BYTE PTR [rsi-0x591f5928],1
   14003220e:	call   0x140aa12b9
	...
